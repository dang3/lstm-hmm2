push
mov
sub
mov
movzbl
mov
mov
movl
movl
cmp
movl
jne
or
mov
adc
push
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
call
cmpl
jne
mov
inc
mov
jmp
add
mov
xor
sub
mov
movl
cmpl
je
cmpl
jne
push
pushl
push
pushl
call
cmpl
jne
xor
xor
dec
mov
mov
dec
mov
jmp
andl
mov
inc
mov
cmpl
jne
push
pushl
call
cmpl
jne
xor
add
inc
mov
cmpl
jb
movl
cmpl
je
cmpl
jne
push
pushl
push
push
push
push
pushl
pushl
call
xor
or
dec
mov
jmp
add
push
xor
or
adc
mov
mov
add
movl
cmpl
je
cmpl
jne
pushl
push
push
call
xor
or
dec
mov
jmp
movzwl
not
and
mov
movl
cmpl
je
cmpl
jne
push
push
pushl
pushl
push
call
mov
dec
mov
jmp
mov
mov
mov
push
mov
movzwl
mov
mov
mov
movl
movl
mov
jmp
sbbb
cltd
js
mov
mov
jo
jo
jle
jo
xlat
cmp
rol
pop
push
add
or
rdpmc
cmpps
adc
mov
add
mov
sbb
lods
sarb
or
sahf
jp
inc
lods
push
sub
mov
stos
js
roll
jmp
mov
dec
fcomps
pop
test
sub
mov
pusha
nop
mov
and
jmp
out
repnz
xchg
xor
jbe
xlat
and
add
adc
xor
or
fldl
xor
pop
push
or
pop
fstps
jno
mov
ja
sbb
xor
int
dec
add
cli
cs
clc
ljmp
ds
test
shl
xorb
adc
sbb
push
cmpsl
rorl
push
je
add
xor
icebp
push
scas
in
into
and
rorb
adc
in
push
pushf
in
push
addb
imul
cmc
cmpsb
dec
sahf
fxch
fmull
sbb
adc
popa
pop
sbb
lds
jecxz
mov
mov
adc
mov
sbb
sti
push
inc
push
pop
out
ret
cltd
jo
pop
pop
js
in
cmp
xchg
mov
aas
inc
js
aad
xchg
leave
xor
loope
xor
push
fidivl
push
popf
aas
sub
sti
dec
xor
repnz
faddl
pop
ret
ficompl
xchg
adc
sub
or
ljmp
rcrb
lcall
outsl
clc
sahf
stc
mov
cmpsl
inc
and
push
sub
adc
popf
getsec
stos
xchg
out
addr16
xor
mov
dec
or
xor
add
push
or
or
mov
add
stc
mov
je
xor
push
scas
mov
cmp
cld
jmp
clc
icebp
mov
icebp
ficompl
sbb
jo
jo
jo
jo
dec
xlat
mov
pushf
xchg
push
fimuls
mov
xchg
mov
daa
pop
pop
or
jne
pushf
imul
mov
dec
adc
mov
enter
or
subb
mov
iret
pop
in
pushf
mov
clc
dec
loope
subl
inc
hlt
jl
sbb
adc
pop
mov
jecxz
adc
jg
mov
movnti
sbb
int3
es
and
push
push
fiadds
dec
jns
push
rcrb
xor
sub
stc
push
frstor
ret
dec
mov
inc
xchg
in
mov
iret
sub
insb
xchg
imulb
loop
fldt
aam
mov
test
insb
pop
nop
fmull
iret
and
iret
mov
xor
and
ja
xchg
mov
incl
push
movsb
jns
dec
fs
icebp
insb
mov
jmp
mov
or
dec
mov
cmp
cwtl
mov
movsl
xchg
test
or
pop
adcl
xor
push
jns
mov
sub
shlb
push
sahf
cmp
imul
xchg
paddsw
cmpsb
mov
xor
sti
mov
pop
dec
mov
fnstcw
xchg
in
dec
or
push
push
mov
sbb
ret
mov
dec
mov
pop
push
in
lods
jp
insb
dec
jecxz
in
int
mov
and
stos
nop
push
xor
outsb
pop
ljmp
mov
lods
pop
pop
dec
pop
cmp
mov
int
mov
cmpsb
les
mov
add
xor
or
xchg
pop
dec
push
les
pop
jnp
mov
cmp
mov
les
sub
mov
push
push
inc
icebp
mov
hlt
test
and
push
xchg
sub
add
inc
rorb
fmuls
call
add
lods
dec
lods
imul
rorb
jo
jle
jo
adc
sbb
adc
jle
xor
sbb
add
std
mov
push
jns
imul
rol
imul
push
bound
adc
cwtl
idivb
adc
imul
lret
mov
jb
insb
mov
adc
fisubl
lret
bound
std
xor
imul
push
jo
and
mov
test
add
dec
fdivrl
inc
jbe
cld
stos
jns
bound
daa
sbb
imul
call
mov
add
mov
sub
adc
xchg
in
data16
call
cmpsl
fwait
jge
sbb
outsl
cmp
fidivl
xor
jnp
icebp
xchg
xchg
jbe
mov
push
xchg
shll
daa
xchg
popf
push
call
dec
fcompl
or
push
jne
sub
int3
pop
sahf
shr
out
cmp
sbb
fisubl
pop
mov
xchg
mov
mov
jg
ret
add
inc
jbe
jbe
call
icebp
sbb
xchg
inc
inc
mov
or
inc
push
daa
or
test
imul
adc
cmp
push
leave
xchg
mov
add
cld
mov
stc
mov
pop
inc
mov
jl
sub
cwtl
dec
stos
fstl
mov
addr16
sahf
clc
adc
std
popf
dec
pop
jbe
sti
popl
mov
inc
lcall
cld
jmp
pushf
rolb
enter
add
loope
daa
adc
shrb
dec
cmp
lcall
icebp
popl
xor
fimuls
xor
lret
mov
and
lahf
in
mov
mov
mov
imul
in
add
inc
in
mov
xor
xor
xor
add
add
div
mov
cmp
je
movl
lea
mov
jmp
int3
sub
push
mov
xchg
pop
insb
jo
jo
jo
jo
xor
mov
push
leave
scas
ja
enter
fsubrl
sbb
loopne
xchg
out
xchg
pop
pop
jae,pn
cltd
enter
fwait
pop
xor
jne
mov
repnz
and
pusha
test
xchg
jmp
dec
inc
dec
jecxz
sub
and
psubw
jns
lret
std
add
test
insb
js
adc
adc
push
mov
fiadds
gs
cmpsl
outsl
ds
dec
stos
or
ds
mov
mov
xchg
push
clc
xchg
lret
outsl
mov
push
in
jne
clc
shl
xchg
adc
in
call
imul
push
adc
adc
mov
imul
cmp
movsl
je
pop
jmp
fdivrp
push
sbb
add
popa
test
adc
nop/reserved
mov
in
add
cmp
adc
lret
adc
mov
pop
and
cmc
outsl
xor
mov
arpl
push
dec
jns
jne
jl
outsl
test
fdivs
dec
or
or
and
xor
push
aaa
mov
mov
xor
insl
pop
int3
cmpsl
addr16
sbb
jg
or
pop
push
jp
pusha
mov
mov
sub
adc
jl
mov
shl
lret
fstpl
gs
pop
pop
xchg
pop
in
sbb
out
add
jae
clc
ljmp
add
or
and
in
repz
roll
ljmp
dec
push
stos
lret
lods
popf
and
pop
pop
pop
push
cmp
jns
push
movsb
and
jae
fbld
cmp
push
cmp
out
jbe
jbe
ljmp
sub
or
cmp
cmp
or
mov
aam
jmp
arpl
push
cltd
mov
iret
test
lock
imul
mov
mov
cmp
je
mov
orl
jmp
mov
jmp
popa
ja
add
xorl
adc
mov
divb
jo
jo
jo
cmp
popl
movsl
dec
shr
adc
push
jns
pop
out
testb
cmp
adcb
add
outsl
jmp
es
cmpl
xchg
mov
dec
xor
xor
and
cli
fcomp
inc
js
fnstsw
ficomps
lret
push
mov
ds
ss
jmp
xor
push
xchg
cmpsl
mov
mov
pop
push
cmp
cltd
scas
subb
push
cltd
sub
pop
lods
bnd
xchg
pop
adc
mov
or
jae
mov
cld
sbb
js
jbe
jne
sbb
and
lahf
lock
sub
push
out
repz
js
bound
jbe,pt
and
out
xor
int
add
push
mov
nop
inc
pop
xor
clc
sub
mov
pop
pop
subl
fwait
imull
add
cmpsb
shrb
in
or
mov
dec
xor
mov
xchg
loop
sbb
jno
or
add
mov
sbb
nop
lahf
cs
les
fs
data16
cmpl
lea
xor
aas
outsb
outsb
mov
out
push
arpl
and
push
and
or
mov
bound
lret
and
dec
stos
movsl
xor
mov
ljmp
stos
push
push
cmp
hlt
dec
mov
fs
fistl
mov
imul
in
jge
daa
cs
push
push
add
lret
lods
ficoml
xchg
cli
jl
cmp
jle
mov
rol
cmc
cmpsl
arpl
jo
inc
adc
push
or
mov
inc
cmpsb
mov
mov
popf
nop
jo
mov
mov
mov
call
insb
je
mov
andl
jmp
mov
mov
or
cmp
je
mov
xorl
jmp
mov
mov
xor
jmp
cld
test
jb
stos
inc
inc
cmp
xchg
movsl
jo
jo
jo
jo
daa
mull
sbb
ljmp
and
cmp
dec
out
cld
pushf
jno
cli
js
sbb
xor
or
out
lods
sub
cli
push
add
xor
ds
hlt
iret
pop
jmp
outsb
pushf
dec
push
sbb
jge
hlt
jp
sbb
int
dec
mov
lret
xor
jmp
mov
in
inc
push
out
inc
insl
cs
inc
pop
sub
adc
push
lds
ljmp
ja
dec
std
inc
lock
imul
in
call
mov
mov
arpl
clc
add
or
in
out
into
fstpl
sub
jg
mov
lahf
enter
stos
push
das
dec
mov
scas
xor
xchg
xchg
push
sbb
in
ret
cli
lea
repnz
popa
leave
aas
adc
movsl
out
and
cmc
mov
loope
lcall
aaa
xchg
shr
mov
xchg
les
cmp
addb
cmp
ss
mov
and
mov
sahf
jecxz
in
xchg
jne
lea
neg
mov
add
and
xchg
ja
js
mov
aad
adc
adc
icebp
in
test
lcall
xchg
arpl
rorb
sbb
out
xchg
aaa
loope
gs
repnz
sub
jne
in
push
jno
mov
pop
xor
scas
xor
push
bound
dec
push
ljmp
stos
mov
roll
jne
aas
fwait
mov
mov
clc
mov
in
cmp
sub
push
loop
xchg
lret
add
mov
mov
push
movsb
jb
shlb
popf
jne
cmp
mov
rorb
dec
or
xchg
bound
mov
out
out
push
out
mov
mov
add
cmp
jmp
ret
gs
cmpsl
insb
adcb
stos
jo
jo
jo
jo
int
xorb
lock
fdivrl
in
fstl
mov
out
adc
mov
mov
xchg
imul
dec
sub
insl
mov
popa
cs
pop
mov
dec
test
cmp
fildl
shll
inc
test
aam
and
mov
mov
mov
cs
adc
lahf
dec
pusha
fimull
pop
mov
mov
andl
mov
push
jecxz
or
cmp
sub
movb
ret
jecxz
xchg
xchg
push
add
inc
mov
out
add
loope
ljmp
mov
int
add
mov
push
or
jecxz
out
mov
push
fisubrl
dec
mov
adc
dec
cmpsl
fcompl
mov
fcom
jns
and
dec
pop
ret
and
movsl
fstps
popa
cltd
out
outsl
jle
daa
pop
jecxz
push
sub
mov
enter
jmp
push
add
rolb
push
fidivrl
add
xlat
push
lods
lods
pop
or
mov
je
std
movsl
mov
or
push
insb
cmp
movsb
xchg
scas
sub
jns
mov
push
fwait
iret
mov
movsl
pop
cmp
jg
enter
lcall
inc
cmp
push
or
jne
ret
push
jns
pop
test
je
xchg
xor
int3
xchg
in
sub
cmp
inc
xlat
xlat
xorb
or
jge
inc
mov
and
aas
add
pusha
add
test
add
inc
push
sub
hlt
push
inc
cmp
fs
fs
mov
xor
lcall
xchg
adc
sbb
xchg
loop
cmp
stc
shrb
dec
jne
push
or
sbb
je
mov
xor
add
mov
mov
jmp
jp
sbb
cltd
ja
jno
sbb
sub
xor
jo
jo
jo
jo
push
ret
mov
mov
mov
xchg
dec
sbb
xchg
movsl
jmp
dec
mov
or
loopne
mov
xor
fwait
repz
leave
sbb
in
rclb
movsl
sbb
stos
fmull
add
rcr
scas
pop
cmpsb
mov
xchg
mov
ljmp
movsl
sbb
dec
sub
push
rcr
nop
cltd
adc
pop
jbe
test
in
stc
mov
ret
outsb
adc
popf
add
mov
cmc
inc
pop
movsl
jmp
bound
loopne
mov
outsl
pop
popa
fstpl
pop
bound
pushf
jno
mov
add
add
inc
ljmp
cltd
loop
je
aam
data16
adc
add
in
in
pop
das
push
sahf
inc
add
push
rorl
ljmp
movsl
adc
jge
sub
inc
cmp
push
in
sbb
sbb
sbb
xchg
aas
jecxz
int3
adc
pop
mov
dec
jge
and
jb
sbb
fs
xchg
or
xorb
mov
pop
jecxz,pt
push
add
enter
ret
dec
mov
cmpl
adc
insb
pop
test
ljmp
fdivrl
adcb
mov
das
adc
sbb
sub
push
adc
clc
xor
repnz
pop
cld
ds
pop
or
xor
ret
icebp
lret
push
sbb
lahf
dec
push
xor
cmp
fdivl
and
push
stc
lock
xchg
test
mov
add
out
sub
aam
gs
das
cmp
add
ret
dec
jle
scas
mov
aas
mov
inc
fstpl
adc
in
mov
psubsw
xchg
repnz
cmp
arpl
mov
push
pop
xchg
sbb
sbb
sub
mov
mov
xor
mov
add
movzwl
xor
lea
add
mov
mov
mov
xor
add
imul
sub
mov
jmp
jmp
and
jae
xor
and
jo
jo
jo
enter
out
mov
mov
repz
clc
xorl
ret
in
mov
popf
fwait
lahf
add
sbb
xchg
lret
insl
loopne
xchg
mov
lods
xchg
jb
pop
sbb
in
xor
decb
pop
out
pop
cmp
fnstenv
mov
inc
shll
addl
push
sbb
jnp
add
xchg
jbe
repnz
rolb
repnz
adc
loopne
xor
sub
xchg
or
xchg
mov
xor
inc
ljmp
insl
pop
je
and
pop
shrl
jb
loop
dec
lea
ds
xor
iret
xor
jne
cmpsb
sbb
inc
stc
pop
fldcw
dec
std
adc
data16
xchg
jge
pop
xchg
or
ss
pusha
or
fcoml
aad
cli
pushf
xor
inc
mov
mov
lock
fidivl
or
std
in
cltd
jae
js
in
pop
xor
bound
fcmovbe
cmpb
clc
shl
aam
aas
cmp
jge
cmp
jae
rcrb
pop
in
pop
movntps
mov
xor
rcrl
test
orb
jle
sbbl
stc
fs
sub
jne
dec
scas
adc
push
adc
jl
lret
nop
pop
in
cld
xor
test
adc
fwait
lret
or
xchg
sbb
fadds
sub
jmp
or
scas
inc
cmc
add
xorl
fdivr
and
adc
lock
int
pop
or
xor
jae
aaa
dec
cs
cmp
gs
arpl
push
add
sub
push
jno
cld
or
or
je
inc
inc
xchg
push
sub
ds
stc
lock
fs
addr16
and
inc
hlt
mov
xor
cmp
je
mov
addl
jmp
mov
cmpl
jne
mov
xor
add
test
jne
xorl
jmp
pop
pop
jmp
cs
add
popa
push
in
jno
imul
jo
jo
jo
jo
jl
sub
jnp
int3
mov
mov
movsb
mov
sarb
iret
test
je
push
popa
mov
jo
mov
int3
sbb
add
out
push
popf
icebp
jecxz
fnstcw
sub
stos
adc
stos
mov
mov
adc
popa
inc
mov
jb
mov
inc
mov
stc
inc
ljmp
xchg
inc
mov
add
hlt
mov
insl
add
jns
or
cmp
fisttpll
imul
jge
dec
sbb
outsl
sarl
xor
dec
xchg
lea
mov
xchg
cwtl
in
or
inc
nop
mov
fsubrl
add
mov
inc
fistpll
xchg
mov
cmp
dec
out
fnstcw
jl
mov
xor
in
jno
push
jl
adc
mov
inc
negb
dec
or
push
mov
cltd
mov
mov
xor
push
xchg
in
pop
mov
mov
mov
fwait
or
mov
or
repz
popf
mov
movsl
xor
ja
inc
sub
dec
out
xchg
cmc
jge
jle
mov
mov
mov
jecxz
loop
jb
sub
push
addr16
hlt
xor
shrl
xchg
adc
cmpsb
outsl
and
sarb
andps
and
jns
es
roll
out
jge
jae
idivl
loope
add
adc
jmp
push
scas
xchg
dec
dec
mov
cmp
mov
call
sub
out
or
insb
cld
jmp
and
cmp
cmpsl
inc
sub
stc
xorb
pop
leave
ret
push
mov
sub
leave
ret
push
mov
push
or
push
movzwl
sbb
mov
movl
cmpl
je
cmpl
jne
push
push
push
call
mov
dec
mov
jmp
movl
cmpl
je
cmpl
jne
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
movl
mov
mov
mov
xor
push
mov
or
xor
sbb
mov
sbbl
push
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
jmp
mov
add
cmp
je
mov
mov
xor
mov
sub
add
xor
jmp
imul
cmp
jae
jl
dec
mov
jo
jo
mov
inc
jge
or
add
xor
pop
pop
aas
or
sbb
insl
outsb
or
test
pop
pop
sub
adc
and
sbbb
test
jo
pusha
sub
adc
out
sbb
jmp
dec
add
ljmp
or
js
int
insb
fldenv
outsb
out
out
mov
mov
stc
nop
ljmp
sub
test
pop
sbb
add
gs
negb
sub
and
add
into
push
or
stos
fstps
inc
int
pop
pop
cmp
mov
xlat
popf
out
or
insb
push
fidivrs
outsl
push
fstl
jbe
fs
jmp
push
jp
push
in
cmpsl
and
sbb
hlt
pop
cld
jo
xlat
dec
push
pop
cmpsl
pop
into
pop
push
iret
xor
pop
stos
or
aaa
std
inc
push
and
loop
mov
adc
movsb
nop
jp
pop
fwait
xor
pop
enter
es
pop
mov
jae
pop
cmpsb
les
mov
iret
fldt
rclb
mov
test
jbe
add
inc
jne
sarb
repz
popa
xchg
lahf
jl
movsb
testb
and
push
popf
jle
xchg
imul
mov
lds
pusha
cmp
mov
in
push
popf
adc
xor
mov
cmpb
sub
addb
dec
pop
add
out
or
jnp
mov
mov
dec
repz
shll
push
mov
lret
cli
leave
adc
and
les
pop
loop
iret
insl
scas
mov
arpl
iret
faddl
lret
std
sbbl
bound
inc
test
xchg
jb
cmp
jbe
mov
push
cmp
cmp
or
xlat
pop
or
jno
bswap
stos
outsl
imul
xchg
and
popf
scas
mov
sub
mov
lahf
mov
cmpsb
push
adc
pop
inc
mov
sbb
pop
sti
dec
cli
int3
bswap
mov
movsb
inc
fisubs
mov
iret
int3
loopne
or
push
fdivl
pop
and
or
xor
push
lods
mov
pop
out
cs
inc
or
out
push
sbb
or
xchg
lds
or
push
cmpsl
dec
push
sbb
fistpll
pop
ffreep
call
mov
sahf
xor
cmp
ja
push
jmp
jmp
mov
ja
push
aas
xchg
out
test
xchg
pop
mov
jle
jo
mov
bound
out
adc
leave
call
int
lcall
cmp
adc
loop
adc
xchg
in
mov
push
sbb
jb
xlat
ljmp
sub
rcr
sbb
push
pop
and
in
mov
push
fnsave
jmp
paddd
xchg
sub
shr
jl
xchg
cli
js
int
repz
cmpl
testl
push
lret
xchg
jp
and
add
daa
lret
jg
lods
mov
push
movsb
cltd
dec
jecxz
add
dec
mov
les
gs
inc
insb
pop
je
aaa
inc
scas
mov
jg
ds
mov
and
jle
mov
dec
cs
dec
jae
shrb
and
fucompp
cmpsb
sbb
shrl
int3
aam
sti
cmc
xchg
out
xor
xchg
sub
adc
mov
or
call
push
jno
sbb
js
gs
and
mov
stos
dec
mov
and
push
cli
xor
mov
in
imul
push
js,pt
pusha
call
insb
pop
push
pop
shll
sub
scas
jo
mov
add
shlb
xlat
inc
cmp
dec
dec
out
push
cmp
in
lahf
into
add
or
or
or
jecxz
out
icebp
xchg
orl
jmp
repnz
int3
sbb
in
dec
jg
cli
sar
jge
mov
push
xor
or
push
push
mov
pop
push
and
int
adc
jnp
xor
mov
pop
test
mov
loope
stc
pop
insb
xor
dec
data16
mov
inc
out
mov
cmp
mov
mov
iret
pop
subb
jb
arpl
mov
xor
cwtl
outsb
jno
divb
scas
loopne
mov
adc
aam
stos
inc
sub
in
fcmovbe
xchg
sarb
jo
sub
adc
inc
les
mov
push
jo
jp
xchg
stos
push
aam
cli
std
inc
jl
add
addr16
cmc
xor
push
hlt
inc
out
out
out
lahf
js
adc
out
mov
xchg
decb
stos
aad
xchg
cmpsb
stos
imul
add
adc
popf
lods
push
movsb
add
ficomps
adcb
sub
mov
jge
movsb
and
shll
push
xchg
mov
adc
ss
daa
aaa
jb
cmp
jl
mov
test
jbe
ds
pop
sub
inc
bound
mov
mov
mov
xor
add
jmp
fistl
loope
lds
add
int
call
mov
fisubs
adc
jecxz
jne
add
sbb
js
sbb
xchg
and
repz
test
cli
jae
test
bound
lock
in
scas
mov
sbb
lret
ficomps
test
jae
fcomi
push
fdivl
hlt
imul
mov
and
add
and
cmp
inc
ss
dec
jp
cmp
push
dec
loop
jg
adc
rcrb
sarl
enter
cs
jmp
fnsave
sbb
movsl
addr16
or
cmp
push
aaa
insb
dec
test
mov
sbb
movb
mov
xlat
add
imul
push
js
and
in
out
pop
jo
dec
test
popf
rolb
xchg
repnz
add
mov
jp
and
fstpl
shrb
and
lcall
add
daa
rcll
enter
lea
and
inc
cmp
adc
loopne
lods
mov
cwtl
dec
stos
xchg
jmp
adc
xchg
jecxz
fcompl
mov
lds
imul
xchg
jne
and
cmpsl
push
frstor
mov
test
mov
iret
mov
subb
adcb
gs
inc
aas
loop
or
sub
test
inc
sbb
sbb
push
movsb
leave
jl
je
movsl
mov
dec
mov
leave
jecxz
jb
cmp
lods
pop
cmp
cs
push
and
xchg
fdivp
test
push
push
leave
pop
jg
idivl
mov
pop
mov
test
out
mov
add
test
xlat
sbb
idivl
pop
je
aam
inc
test
or
push
xchg
int
sub
sbb
subl
vmovupd
cmpl
xor
out
scas
add
int3
fwait
mov
ror
pop
cmpsb
test
cmpsl
shlb
cmpsb
and
pop
popa
bound
pop
cmp
or
lods
jge
loope
enter
cmc
pop
push
ss
ds
loopne
shl
in
xchg
test
enter
dec
cmp
mov
scas
cmpsb
fisubrs
sub
mov
sbb
pop
sbb
mov
pop
mov
mov
dec
jne
mov
sub
or
nop
adc
sti
mov
sbb
mov
mov
sub
call
lea
popa
shll
out
push
push
outsl
daa
or
jb
cmp
pop
jne
outsl
jno
dec
shrb
mov
imul
mov
xor
add
jmp
jecxz
fcoms
out
icebp
icebp
pop
xchg
aaa
aas
mov
adc
jo
jle
jo
lods
popf
ljmp
push
insb
xor
mov
jmp
xor
fisttpll
lcall
fsubrp
jg
cmpsb
mov
out
cltd
and
shrl
jbe
outsb
fiadds
je
and
mov
mov
push
je
popf
inc
inc
nop
adc
js
repz
ja
aaa
inc
or
out
cmpb
fcmovbe
in
inc
or
xor
icebp
lods
dec
jo
and
push
jae
testl
sub
arpl
movl
dec
int
xchg
addb
sti
nop
idivb
lock
xchg
xchg
xchg
mov
add
pop
fsub
cwtl
leave
or
jmp
mov
cmpsl
jae
and
adc
pop
test
and
mov
mulb
loop
inc
cmpsl
dec
jmp
sar
inc
pop
cmp
cmp
sbb
scas
jg
cmp
jecxz
push
call
xchg
jl
mov
cmc
mov
ret
jg
fsts
cwtl
sub
jns
pop
pop
xchg
ds
mov
sbb
or
cmp
pusha
or
adc
xor
fdiv
pop
in
pop
fistpl
adc
mov
push
and
lods
push
mov
test
xlat
xchg
jo
cli
push
dec
and
jmp
xor
push
xor
xlat
int3
loop
mov
int
push
jle
add
vpsadbw
jl
or
es
dec
mov
mov
int3
lcall
xor
or
inc
inc
pusha
add
xor
lret
adc
sbb
mov
mov
and
mov
iret
call
push
into
lahf
aam
jbe
mov
and
dec
adc
sbb
cmp
push
mov
pop
mov
mov
jge
xlat
mov
add
je
stos
sub
pop
addr16
iret
and
jb
mov
mov
sub
dec
pop
popf
sbb
jp
cmc
fisttps
pop
lock
xor
faddl
stos
pusha
mov
add
cmp
cs
je
popa
inc
pop
mov
push
incl
xchg
mov
mov
mov
mov
jnp
pop
mov
aad
adc
push
sub
push
xlat
jg
nop
inc
pop
push
inc
dec
sahf
cld
dec
pop
add
jbe
iret
push
jmp
in
jnp
aam
pop
movsb
imul
xor
bound
pusha
inc
add
mov
xor
mov
mov
xor
lea
mov
xor
mov
sub
add
cmp
jbe
pop
mov
pop
pop
leave
ret
push
mov
sub
movl
cmpl
je
cmpl
jne
push
push
push
call
cmpl
jne
xor
or
dec
mov
mov
dec
mov
jmp
adc
mov
addl
mov
adcl
xor
adc
mov
andl
add
movl
movzwl
mov
orl
movb
not
lea
mov
or
jmp
out
out
jno
in
or
and
adc
cmp
cmpsb
inc
dec
xchg
shrb
mov
out
leave
es
dec
ds
and
push
add
push
aam
xchg
dec
aas
test
mov
xchg
fwait
pop
subb
pop
and
mov
sbb
lods
jns
btc
push
xor
xchg
jnp
add
dec
aad
das
popf
xor
rcrl
outsl
stos
fdivrl
mov
inc
adc
add
stos
mov
out
out
insl
dec
das
int3
pop
adc
mov
insl
sub
into
jb
in
jnp
popf
mov
push
inc
cmp
mov
cmp
scas
sbb
mov
and
or
call
pop
in
pop
mov
lock
ret
cld
cs
das
jle
pop
mov
arpl
cmp
es
dec
fimuls
jmp
ja
lcall
decb
pop
sarl
jp
push
sbb
jle
pop
cwtl
aad
sub
push
mov
add
movsb
cmp
xor
movsl
xchg
scas
jg
inc
push
sar
mov
jge
js
out
jp
call
fmuls
inc
int
and
arpl
mov
pop
mov
out
jmp
icebp
sub
xor
mov
lods
push
in
sbb
adc
in
cmp
enter
jmp
or
in
call
daa
push
stc
xchg
and
es
mov
scas
out
cs
pop
push
icebp
xor
mov
inc
cmp
sti
enter
push
inc
xor
ror
dec
aaa
sub
test
sbb
cltd
pop
or
int3
mov
pop
push
dec
push
jne
lcall
xlat
add
mov
or
push
sbb
pop
sub
mov
ds
shrl
cwtl
loop
adc
add
jo
xor
sub
popf
mov
sbb
dec
icebp
adc
shr
push
jmp
mov
push
cwtl
mov
xor
push
push
sbb
je
jg
js
xchg
push
outsb
or
jmp
pop
dec
aaa
lret
cmp
push
mov
pmullw
aaa
out
push
imul
fistps
sar
imul
aam
int
push
pop
add
outsb
cli
ds
rcr
xor
xchg
daa
or
jmp
je
ja
sub
fnstsw
lods
js
jmp
orb
scas
jno
add
adc
push
lret
lods
jge
scas
fcoml
xchg
lods
sub
inc
push
leave
fcomps
hlt
pop
xchg
pop
xchg
mov
or
inc
mov
mov
mov
nop
inc
movsb
push
outsl
pop
push
sbb
pop
test
fidivs
leave
sub
fcomps
xchg
test
mov
je
sub
pop
les
cmp
scas
in
pop
cmc
adc
outsb
jno
sub
fcomps
ficoms
lock
aaa
lods
mov
pop
es
adc
sbb
scas
or
inc
decl
mov
imul
add
or
mov
subl
xor
sub
andl
mov
negl
movl
jmp
fists
cltd
mov
addr16
push
and
jle
push
jo
cmp
xchg
dec
xor
xchg
push
xchg
ret
push
push
daa
ljmp
xor
or
jns
jae
imul
les
xchg
rolb
sub
loope
testb
push
and
mov
push
lods
movsb
push
mov
fistpl
cs
mov
aam
or
sbb
pop
pop
add
je
cmp
rcr
mov
push
fimuls
mov
les
out
cmp
mov
xchg
call
js
inc
mov
sub
xchg
pop
scas
add
add
addl
popf
push
es
sbb
inc
inc
mov
mov
push
dec
mov
imul
mov
bnd
dec
pop
sub
test
loop
insl
pop
hlt
popf
mov
mov
fisubs
pop
js
movsb
popa
add
pop
mov
cmp
cmp
lahf
xor
decl
imul
push
mov
and
cmp
push
fwait
xor
inc
pusha
leave
out
mov
jge
hlt
ds
xor
add
lcall
fs
rcl
gs
or
pop
pop
push
imul
add
mov
loope
enter
add
jae
ja
cmp
in
xor
fidivs
dec
movsl
mov
arpl
or
fs
xlat
outsl
xchg
fistl
and
xchg
jmp
inc
dec
xor
lcall
mov
jge
xchg
cmc
lcall
and
lret
movsl
jmp
jg
insl
mov
scas
pop
jp
push
mov
lods
dec
ja
xchg
and
sahf
rorb
cmp
push
cmovnp
push
xchg
mov
in
repz
rcll
push
pop
pop
clc
shll
adc
mov
gs
push
push
cmpsl
sub
cmpsl
daa
cmp
or
xlat
popa
inc
cmc
or
sub
inc
push
arpl
pop
fcoml
sbb
sub
and
data16
aad
cmp
fildll
sub
addr16
inc
sbb
or
jbe
out
pop
add
sbb
dec
adc
lcall
and
mov
cmp
cs
xchg
cmp
aaa
and
hlt
sub
xchg
arpl
push
push
push
jnp
jecxz
xor
testl
testl
push
xor
int
push
outsb
push
inc
push
mov
pop
cmpsl
in
fcompl
insb
jo
jmp
fs
mov
jo
cmp
xor
add
sbb
loope
jnp
nop
xlat
int3
sti
xor
clc
fwait
std
inc
iret
sbb
sbb
pop
push
js
mov
push
fwait
hlt
cli
xchg
mov
movsb
loop
cmp
fucomp
negb
sbb
popf
scas
nop
add
pop
mov
pop
out
xchg
push
push
push
jae
stos
scas
je
lock
sar
sbb
lret
movl
mov
mov
push
xor
mov
adc
mov
add
movl
jmp
mov
movl
mov
movl
jmp
jge
lret
in
icebp
ss
cmp
sbbb
jo
jge
jo
xchg
ret
js
test
cs
ret
cltd
and
call
pop
or
pop
add
xchg
xor
je
test
rorb
cmp
shrl
xor
mov
pop
ja
jae
lods
clc
xor
xchg
cmp
sbb
in
dec
loopne
mov
or
rcl
and
pop
mov
xchg
push
push
sub
addr16
nop
out
sahf
pop
jb
cmp
repz
cs
push
or
mov
call
stos
sub
mov
mov
cld
jg
adc
cwtl
jl
dec
jl
ja
jg
adc
das
test
fidivs
mov
mov
push
mov
outsb
xchg
pop
cmp
jno
adc
pop
cld
fstp
mov
insl
std
push
movsb
cmp
stos
or
mov
jbe
fmuls
xchg
mov
mov
sub
aam
insb
hlt
xor
mov
push
cmp
adcb
mov
push
lret
xchg
xor
or
mov
lock
es
jecxz
push
shll
and
pop
mov
jb
sbb
loopne
sbb
repz
xor
sti
adc
dec
in
in
mov
outsl
gs
mov
jbe
subl
int3
dec
mov
sbb
cmpb
int
hlt
push
xchg
cmp
push
and
or
insl
add
mov
pop
repnz
and
and
ffree
shrl
movsl
outsb
or
sti
or
aad
push
or
int
pop
push
mov
add
mov
cwtl
dec
fsubrl
pusha
and
outsb
js
jmp
dec
and
lds
lea
inc
push
das
xchg
lods
pop
cli
add
cmc
ss
or
test
ss
dec
mov
xor
mov
mov
xor
mov
dec
jo
mov
push
mov
cmp
imul
or
pop
add
pop
repnz
arpl
testb
mov
and
cmc
loopne
lcall
inc
adc
xchg
xor
sub
pop
mov
xor
inc
inc
lahf
inc
pop
es
aam
outsl
pusha
f2xm1
push
push
out
dec
pushf
les
pop
xor
fidivl
jge
into
sub
fwait
jno
mov
xchg
and
cmp
pop
sub
push
jle
aas
data16
push
xchg
outsl
mov
cmp
xorb
sbb
cmc
push
jp
and
dec
mov
rclb
dec
adc
jno
jo
pop
fsubrs
sbb
xor
sub
daa
xor
add
pop
lods
pusha
or
inc
data16
add
cmp
not
inc
xor
jge
mov
pop
jmp
and
xchg
out
pop
daa
pop
andl
mov
jns
fstpt
inc
scas
mov
inc
cmp
movl
jmp
leave
daa
rclb
repnz
jecxz
cmpsb
dec
bswap
test
jo
cmp
mov
and
xor
test
mov
int
orl
push
xor
dec
mov
jne
je
out
nop
adc
nop
pushf
fdivrl
mov
shlb
lret
inc
lcall
scas
add
cmp
or
jge
scas
in
fwait
cmc
inc
xlat
insb
fdivrl
pop
mov
test
push
xchg
mov
imul
add
js
daa
add
outsb
movsb
lret
or
mov
leave
jl
getsec
out
popa
pop
pop
shrl
ljmp
or
fstpt
cmp
popa
mov
add
sub
outsl
das
lods
push
mov
test
es
add
out
ja
mov
shll
into
jo
int3
dec
cmp
fcomp
sbb
mov
in
push
rclb
xchg
or
addr16
push
into
repnz
add
xlat
pop
fsubl
mov
fwait
push
insb
mov
adc
mov
xor
sub
mov
jg
xor
xchg
jmp
jge
out
andb
fstps
pusha
jb
stc
cmp
mov
ljmp
jns
mov
enter
dec
mov
pop
adc
and
mov
jmp
popa
cmp
pop
add
xchg
sub
cmp
lods
push
jg
jmp
jne
stos
subl
cli
lock
adc
movl
cli
cmp
cld
rclb
incl
mov
mov
sub
jmp
rcl
dec
test
ror
fsubrl
add
pop
and
sbb
cmp
pop
int
inc
or
xchg
pop
gs
add
dec
pushf
hlt
nop
or
adc
and
adc
jo
adc
loope
aaa
pop
mov
test
stos
jo
ljmp
stc
fisubrl
movsb
loop,pt
dec
pop
fcmove
adcb
cmc
cmp
popa
or
mov
xchg
idivb
popa
cmp
mov
inc
push
sti
test
out
int3
push
cmp
aas
jbe
insb
nop
lahf
mov
mov
mov
adc
jnp
pusha
fisttps
sbb
test
xor
xchg
sbb
popa
insl
out
cwtl
enter
imul
rcl
jecxz
mov
outsb
test
push
cltd
jo
or
in
sbb
or
nop
mov
jnp
mov
sahf
or
push
sub
mov
out
aaa
lods
dec
ss
fimull
sub
sub
nop
or
insl
mov
mov
std
ret
mov
out
jbe
loope
in
jecxz
fisubrs
ljmp
test
or
lret
sahf
pop
mov
cmp
adc
pop
xchg
jb
and
mov
jmp
push
jge
add
jb
inc
sbb
mov
jo
cmp
and
xchg
pop
ljmp
inc
mov
push
sahf
cmp
adc
repz
faddp
cmc
dec
or
into
and
stc
push
sub
or
fdivl
or
inc
out
xor
ret
movsb
cmp
adc
adc
push
into
mov
ja
js
xor
sub
in
cmp
in
push
sub
aam
mov
jne
out
inc
bound
scas
mov
std
pop
lret
mov
push
xchg
adc
jb
iret
inc
scas
js
dec
cmp
mov
xor
stc
or
mov
fcomi
cs
pop
in
cwtl
in
mov
cmp
movsb
mov
sub
mov
bound
fwait
sub
and
dec
in
out
mov
movsl
movsl
lds
into
outsb
sub
adc
push
test
ds
pop
leave
mov
divl
cmpsb
es
sar
imul
sbb
push
and
adc
sbb
gs
aaa
inc
mov
push
imul
lods
gs
hlt
cmp
pop
push
sub
adc
scas
int
mov
jge
and
aam
out
mov
jl
add
sarl
push
js
sub
pop
adc
cmpb
out
jb
movsl
es
fwait
cwtl
inc
rol
and
dec
xchg
sahf
jne
scas
pop
mov
pushf
ror
or
mov
or
clc
adc
stos
fisubrs
cmpsb
loope
cli
lds
xor
pop
cmp
bound
mov
inc
test
rolb
jb
mov
sahf
lods
test
jne
movsl
outsl
pop
loope
jb
jnp
cmpsl
fsubrs
mov
out
push
cmpsl
outsb
or
decb
pop
shlb
daa
xchg
pop
push
mov
xchg
pop
xchg
xchg
and
mov
dec
mov
dec
gs
loop
add
adc
popf
mov
sub
mov
mov
icebp
cmc
jg
hlt
test
lods
sub
fwait
ret
je
loop
ds
std
rorb
fwait
lcall
dec
test
cmp
push
add
mov
pop
push
add
xchg
sub
lahf
outsb
test
add
popa
test
mov
xor
fsubs
stos
xchg
and
push
sub
push
or
sub
mov
test
sbb
in
rcrb
mov
fs
mov
imul
bound
repnz
jge
out
subb
or
out
imul
jge
sub
mov
dec
jle
cmp
cmpl
clc
jo,pn
ljmp
sti
cmp
and
push
cmp
xchg
sarb
lea
xlat
cmc
fsin
xchg
arpl
ljmp
or
lock
out
xchg
pusha
push
repz
or
pop
or
xlat
test
insl
add
xor
add
cmp
movl
je
add
push
adc
push
mov
mov
andl
xor
mov
add
addl
movzwl
andl
mov
sbbl
mov
addl
movzwl
sbbl
xor
addl
jmp
fdivl
dec
rsqrtps
icebp
inc
sub
jns
jb
leave
and
cmp
jnp
xorb
push
out
cli
sbb
lea
lcall
lret
stc
xlat
and
movsl
push
stc
fiadds
jns
fmuls
sub
cltd
sbb
jecxz
sarl
in
adc
lock
add
mov
test
aad
bound
ret
sbb
cmpsl
mov
cmp
jge
out
mov
out
lret
dec
inc
movl
aaa
sbb
imull
mov
cwtl
addl
mov
push
fcoms
cmp
cli
jecxz
stos
outsb
push
inc
cmpsl
cwtl
adc
mov
out
sbb
jmp
sbb
inc
pop
add
push
cmp
int
inc
sub
xchg
jmp
add
inc
and
add
push
cltd
sbb
repz
bound
xlat
and
shlb
maxps
sbb
ss
inc
mov
ret
insl
shl
in
mov
mov
mov
push
cmp
push
jae
nop
mov
mov
std
add
fdivrs
cli
jne
pusha
or
outsl
jmp
test
jmp
scas
mov
cltd
scas
add
inc
lahf
jp
xor
cmp
jle
or
cmpsl
sahf
dec
xor
xchg
iret
xor
ljmp
jmp
rcrb
adc
lods
lahf
push
jge
jecxz
xchg
jne
repnz
enter
fistpll
iret
aad
icebp
pusha
inc
adc
mov
gs
mov
jg
into
sub
xor
xchg
enter
cmp
sub
adc
xor
test
in
aam
dec
jo
pop
dec
mov
cli
sub
push
xor
in
aas
jae
inc
fst
imul
xchg
jmp
popf
shll
dec
popf
jbe
and
pop
push
cmpsb
add
pop
add
jmp
mov
jne
or
add
mov
jle
and
data16
or
mov
call
sub
sbb
cmp
pop
mov
insb
cld
loope
add
xor
leave
cmpl
ljmp
and
push
movsb
shlb
mov
pop
pop
xor
adc
and
jmp
in
mov
jnp
lcall
imul
mov
adc
bound
aad
push
outsb
xlat
enter
ficoms
mov
cmp
adc
nop
lods
push
dec
mov
cmpsb
inc
jnp,pn
xor
movsl
lods
andb
push
mov
pusha
cmp
hlt
mov
or
push
and
cs
sbb
sub
xor
lods
outsb
mov
ret
in
add
pop
sbbb
movsb
ret
sbb
push
inc
arpl
outsl
xor
inc
lds
mov
mov
push
inc
cltd
sarl
pop
shr
cwtl
cld
je
int
xor
add
pop
push
add
mov
movl
mov
jmp
or
daa
arpl
fisttpll
jns
lret
xchg
jo,pn
cmp
subl
mov
adc
in
js
mov
jmp
hlt
insl
mov
cmp
mov
xchg
dec
int3
or
out
cld
outsl
add
je
adc
sub
repz
pop
in
adc
cld
push
sarl
pusha
and
rcrb
xchg
enter
mov
push
sarb
stc
mov
dec
mov
lcall
sub
pop
sahf
insb
movsb
addr16
lods
inc
aaa
loopne
jns
lret
sahf
cmp
fcmovnbe
inc
daa
mov
filds
ja
ss
push
and
in
mov
sbb
mov
mov
inc
jne
cmp
sub
cmp
popa
repnz
out
or
jns
and
mov
cli
xor
aam
mov
and
or
rcll
cmp
clc
and
js
fnstcw
inc
lea
sub
cmp
fmull
fdivrl
repnz
test
dec
xor
fldenv
jl
jecxz,pt
mov
divl
fmuls
push
or
dec
pop
sti
sbb
test
push
loop
sub
jg
leave
dec
sub
mov
push
xchg
loopne
mov
and
mov
das
inc
jl
xlat
leave
outsb
inc
mov
xlat
addr16
leave
pop
gs
inc
pop
and
ror
inc
aam
and
mov
mov
mov
es
push
cwtl
mov
cli
insb
jmp
mov
pushf
and
shrl
mov
xchg
mov
popa
xchg
aad
inc
cmpsb
repnz
lods
test
push
bound
xor
and
xor
imul
sarb
mov
add
mov
jle
mov
rolb
rorb
lret
cmp
cmp
out
daa
ja
ficoml
lahf
jnp
test
es
xchg
loope
fidivl
xchg
inc
addr16
push
cmp
shlb
mov
mov
or
jp
pop
mov
test
mov
int
sbb
jl
cmp
push
add
inc
nop
adc
fs
sub
mov
enter
stc
ja
in
jp
aam
in
lods
pop
pop
sub
sub
out
sbb
mov
add
xchg
ja
out
xchg
pop
and
cmpsb
outsl
jo
inc
xchg
inc
dec
movsb
pop
xchg
mov
cmp
jns
imul
inc
je
xchg
adc
mov
or
inc
in
and
mov
lods
mov
lcall
in
jns
xchg
dec
push
dec
test
dec
loopne
jne
lret
jg
lds
loope
inc
cmp
js
push
pop
cmp
fs
xor
aam
dec
xorb
xchg
loop
sti
ds
push
leave
pusha
xor
lcall
test
lahf
mov
cmp
and
cmp
leave
daa
jg
xchg
xchg
in
in
mov
hlt
inc
cmp
jne
pop
pop
mov
mov
xor
add
mov
mov
xor
add
mov
mov
mov
mov
cmp
je
mov
mov
mov
cmp
jne
mov
mov
movsbl
xor
add
cmp
je
movl
lea
mov
mov
addl
mov
mov
xor
lea
mov
incl
jmp
mov
xor
mov
add
mov
jmp
xchg
roll
icebp
lods
add
shrl
jo
cmp
pusha
xor
jnp
push
mov
or
cmp
add
or
jmp
negl
pop
pushf
cltd
mov
lahf
inc
mov
ds
push
push
add
out
xlat
add
fnstenv
mov
mov
mov
adc
pop
cmp
lcall
dec
and
adc
jg
jp
dec
cld
sub
in
decl
xorb
lahf
xchg
mov
repnz
call
mov
mov
mov
or
std
add
inc
and
out
cmc
xor
int
cmpsl
sar
pop
std
rol
daa
add
jecxz
imul
or
or
stos
inc
pop
test
or
int3
in
xchg
jg
adc
fsubr
push
and
shlb
stos
push
ss
cmp
adc
xchg
xchg
lret
push
push
mov
xchg
xchg
cmp
xchg
xor
and
mov
enclu
stos
int
inc
mov
pop
out
insb
pop
icebp
pop
jae
movsb
jbe
or
test
jecxz
and
push
xchg
pop
lods
imul
sbb
test
lock
jle
add
adc
mov
js
pop
mov
xchg
sub
adc
stc
faddl
inc
inc
in
bound
fcoms
pop
outsb
jb
add
arpl
dec
mov
scas
mov
ljmp
jnp
aaa
notb
xor
mov
dec
inc
lcall
test
scas
repnz
outsb
mov
hlt
xchg
pop
jns
jnp
ret
dec
add
and
dec
lret
ret
adc
mov
push
sti
out
sahf
test
jecxz
loope
inc
jl
rcrb
lret
xlat
test
sbb
pop
lret
inc
inc
icebp
and
sub
sbbl
lods
gs
mov
imul
xor
test
pop
in
and
in
push
push
fcoms
inc
sub
lahf
and
push
jge
mov
ret
sbb
jns
or
aad
test
push
popa
cltd
dec
dec
pop
xor
sbb
mov
jb
shrl
and
and
adc
add
sar
mov
pusha
and
repnz
imul
mov
xchg
push
adc
in
or
inc
push
rcl
mov
dec
out
mov
imul
das
jg
add
push
sahf
sahf
nop
scas
or
pop
stos
lahf
imul
push
data16
mov
mov
daa
jne
into
push
leave
test
mov
cmp
ficoml
cmp
xchg
cmp
jne
or
shlb
cs
jl
loopne
mov
mov
sub
push
lods
loopne
enter
inc
sub
mov
fucomi
leave
cwtl
pop
leave
ret
push
mov
push
mov
mov
sbb
jmp
pop
scas
sbb
push
pop
mov
push
adc
jo
jle
jo
jo
mov
popa
int3
push
push
jb
ss
mov
inc
in
popf
js
into
out
stos
dec
mov
cmp
inc
or
inc
jmp
sub
pop
aas
adc
mov
sbb
cmp
pop
stos
pop
shlb
gs
or
test
jbe
daa
and
es
jmp
pop
cmp
lret
ss
shl
jmp
adc
xlat
stos
shll
and
cmp
inc
lds
loopne
dec
push
inc
mov
mov
mov
popa
mov
push
in
or
out
cltd
out
hlt
shl
push
outsl
inc
xchg
ret
incb
addl
sub
xor
imul
mov
dec
push
lcall
xor
xlat
add
sub
pop
js
jnp
push
xor
inc
jge
shll
mov
inc
nop
adcb
cmc
jmp
faddl
ret
frstor
std
test
adcl
push
movsl
cmp
jg
fwait
cmpl
stos
loop
mov
xor
les
aas
xchg
cmpsl
dec
mov
es
xor
je
push
mov
mov
sbb
rcr
jbe
cli
repz
in
call
enter
mov
sub
xor
mov
dec
scas
mov
inc
mov
fldl
stos
push
inc
push
pop
out
sbb
decb
add
dec
mov
inc
mov
cli
mov
mov
inc
cmpsl
dec
aaa
xor
test
dec
cmp
push
mov
mov
mov
insb
rorb
cld
fwait
dec
ret
int3
std
in
mov
je
daa
lret
push
fdiv
daa
js
das
arpl
es
push
sbb
adc
fldcw
movsb
mov
push
add
cwtl
push
sbb
jmp
mov
jmp
inc
jmp
or
fdiv
pushf
inc
sbb
mov
ss
dec
sahf
push
dec
push
iret
ljmp
xor
je
mov
push
jmp
dec
fs
or
mov
jno
jle
ret
sarl
cmp
cmc
pushf
pusha
clc
fistl
fdivs
pushf
adc
ja
data16
xor
fimull
mov
sub
xor
stos
faddl
pop
addr16
call
sbb
movsb
or
mov
mov
mov
movzwl
and
mov
jmp
ja
and
dec
xchg
push
xlat
dec
xor
jo
add
dec
arpl
das
clc
jnp
je
and
inc
mov
adc
mov
sahf
int3
dec
mov
mov
imul
fidivrs
add
mov
sub
shlb
and
insl
loope
mov
and
jb
adc
push
cmpsb
and
into
dec
dec
fimull
xor
cltd
testl
push
add
cltd
pop
in
repnz
hlt
and
and
push
ljmp
bound
fisttpll
jb
xor
jae
cs
sbb
dec
frstpm(287
push
cmp
and
push
cmp
out
xor
popf
and
daa
jae
cwtl
sbb
fmuls
mov
shl
or
scas
jnp
lcall
xchg
aam
dec
xlat
sahf
sub
out
sbb
push
repz
xchg
adc
test
repz
adcl
fadd
out
aaa
xchg
xchg
repz
cwtl
mov
les
mov
jge
or
and
adc
mov
cmp
or
push
or
sub
mov
cmp
daa
imul
pop
shll
das
and
or
mov
jno
test
pop
popf
dec
fnstsw
mov
push
mov
push
hlt
loopne
sub
mov
and
clc
xor
pop
decl
push
jle
loopne
xor
in
cld
push
xchg
movsl
adc
xor
test
imul
dec
pop
movb
mov
lahf
cmovne
repnz
shlb
pop
mov
mov
cmp
in
xor
sub
enter
xchg
sub
in
cld
mov
xchg
jmp
push
sbb
dec
mov
lret
xor
imul
lods
dec
rolb
insl
je
adc
vmovntpd
lcall
fbld
push
xor
and
das
or
jp
aas
jl
int
push
and
inc
daa
test
aad
xchg
push
pop
stos
inc
jp
and
ja
jns
xor
xchg
push
mov
sbb
xchg
js
cltd
xchg
movsl
or
dec
sbb
cs
idivb
fldcw
sub
sub
or
cmp
inc
mov
and
cli
xlat
or
je
push
daa
fmuls
cwtl
jb
outsl
mov
mov
in
push
push
loope
push
cmp
xor
shlb
lret
adc
xor
jnp
add
movl
and
mov
sbb
push
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
pushl
call
jmp
movl
cmpl
je
cmpl
jne
pushl
push
pushl
pushl
push
call
xor
xor
dec
mov
jmp
mov
add
xor
and
xor
mov
add
add
imul
mov
cmp
jne
mov
mov
xor
xor
add
add
imul
jmp
mov
mov
mov
mov
mov
xor
xor
add
add
imul
mov
cmp
mov
je
jmp
xchg
imul
sti
xchg
jo
mov
addr16
mov
jl
js
cltd
ja
divb
popa
jnp
push
test
cmpl
mov
gs
mov
enter
pop
or
xchg
and
jmp
pop
fldenv
dec
pushf
dec
adc
clc
out
ljmp
adcb
aas
push
jno
mov
jecxz
jnp
dec
inc
addr16
push
inc
imulb
imul
mov
in
jae
shr
jle
and
push
sub
pop
adc
fbstp
clc
and
loopne
or
mov
mov
mov
sub
dec
outsb
xor
out
into
cmp
xor
xor
icebp
push
mov
shlb
inc
push
lods
xchg
dec
jmp
and
loope
int
push
popa
inc
add
adc
inc
lods
les
mov
pop
popa
ss
lret
jnp
xchg
jg
pop
aaa
fists
lret
pushf
cwtl
sbb
jae
lods
fbstp
adc
sub
xor
or
cwtl
fisubl
push
sub
lret
push
pop
xchg
or
pop
pop
mov
sti
dec
into
mov
lds
shlb
shl
push
in
push
into
gs
xchg
pop
pop
int
popf
fmull
sub
fisubrl
pop
dec
add
push
mov
dec
inc
popf
loopne
xor
loop
int3
xor
imul
ds
xchg
stos
in
pop
xchg
aaa
sbb
out
repnz
imul
in
sbb
cmc
icebp
rcll
and
aas
and
out
xor
adc
orl
cmp
sub
mov
push
aas
push
fs
push
stos
add
dec
pop
adc
mov
xchg
pop
inc
push
rcll
out
fisubrs
ret
jg
mov
cmc
andl
sub
fwait
jg
cmp
enter
adc
xchg
inc
push
push
sub
inc
subl
push
jge
push
outsb
test
mov
loop
push
imul
aam
cli
int
lret
icebp
mov
stos
das
pushf
out
and
aaa
jg
and
je
movsl
push
mov
jecxz
ret
popa
cmp
or
dec
adcb
pop
fcoms
lods
out
insb
xor
mov
jecxz
shrl
dec
iret
in
rolb
xchg
in
call
fs
mov
inc
sub
jno
sbb
ret
mov
imul
add
mov
mov
pop
leave
ret
push
mov
push
addl
movl
mov
mov
adcl
mov
xorl
xor
jmp
fidivl
jle
jne
jb
sub
aad
sbb
cmpsl
jg
jo
gs
mov
lret
cmp
mov
cli
sti
adcb
push
movsb
out
add
int
adc
cmpsb
and
mov
data16
or
ret
div
in
in
inc
push
sbb
or
ds
inc
mov
pop
adc
pop
push
mov
xchg
in
xchg
fidivrl
cmp
data16
sbb
sub
arpl
in
mov
or
es
popf
lods
cmp
aad
hlt
scas
popf
xorl
xchg
push
lods
daa
adc
out
adcl
mov
nop
fs
arpl
movsl
in
lret
mov
mov
sub
test
adc
filds
shr
pop
mov
fdivr
pop
cmp
or
sti
lods
mov
cmp
arpl
jle
pusha
dec
jp
xchg
test
add
jo
subb
jg
into
sbb
and
jmp
cmpl
lcall
cmp
mov
mov
std
cmp
imul
sub
add
xchg
roll
mov
daa
sbb
mov
fcoms
mov
in
shll
flds
xchg
add
in
mov
roll
pop
mov
test
pushl
loope
popf
push
add
test
je
filds
outsb
fwait
xchg
cli
cmp
sub
pop
xchg
ljmp
ss
orl
mov
mov
xor
push
sbb
mov
or
mov
sbbl
add
adcl
mov
sbb
mov
adcl
mov
subl
mov
or
jmp
out
hlt
arpl
popa
xchg
insl
hlt
pop
xor
sbb
cmpsl
jg
jo
cwtl
loop
xlat
dec
cmp
dec
inc
loopne
scas
dec
adc
add
xchg
jae
push
pusha
stos
mov
adc
mov
stc
sahf
push
ss
inc
jbe
pop
sbb
add
inc
dec
outsl
arpl
add
enter
mov
mov
and
in
sub
xor
mov
adc
cmp
inc
pop
call
jae
pop
cmpsl
div
lea
xchg
fnstsw
in
sub
jle
and
or
xor
fcomi
inc
je
loopne
loopne
lgs
out
add
dec
insl
outsb
and
or
mov
sbb
fidivs
dec
shll
push
mov
xchg
jge
sahf
fcoms
jle
mov
orl
add
mov
mov
stos
mov
incl
or
ljmp
hlt
bnd
call
in
in
lret
mov
test
lcall
mov
out
imul
mov
pop
in
dec
xchg
fsubrl
rcrl
insb
adc
cltd
sbb
mov
shll
mov
sbb
xchg
inc
les
sbb
mov
and
ficompl
cmpsb
mov
scas
mov
fldenv
test
inc
lret
push
cmp
mov
jp
or
push
sahf
push
test
loopne
xchg
ss
shll
sub
jbe
das
imul
inc
and
pop
cmp
cmpsl
fs
lds
push
mov
mov
subl
mov
or
mov
movl
cmpl
je
cmpl
jne
push
pushl
pushl
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
mov
mov
mov
xor
add
jmp
jge
gs
gs
sti
ret
pusha
jo
testb
jo
jg
jo
push
lea
cltd
cmp
mov
popa
push
cs
mov
ret
call
jnp
pop
pop
jle
dec
popa
movsb
jle
add
jecxz
cmpsb
jnp
clc
test
mov
adc
lcall
cmp
ja
lea
pop
push
xchg
jp
shrb
arpl
jg
loop
adc
stos
iret
pusha
push
xor
rcl
jl
call
lock
das
aad
mov
lods
mov
jg
push
jl
or
inc
cmpsb
push
inc
aam
subb
pushf
loopne
sbb
fwait
pop
das
sub
movsb
mov
movsb
jmp
xchg
in
ja
lods
sbb
push
xchg
adc
ret
rcrl
cmp
or
mov
sti
adcl
loope
push
jl
fildl
mov
lcall
mov
add
xchg
call
sub
lods
jecxz
stc
fimuls
push
inc
xchg
lret
jns
jecxz
test
mov
pop
inc
jae
push
inc
xor
test
jne
pusha
fcmovne
add
jns
mov
mov
or
arpl
push
dec
cmc
gs
leave
jnp
loope
push
dec
daa
jmp
cmp
push
out
in
cmovns
fcoms
lds
add
sbb
movsb
add
cmp
add
sti
daa
adc
inc
push
xor
gs
push
sbb
leave
ret
push
mov
mov
xor
mov
div
mov
and
or
mov
pop
ret
push
mov
push
adc
movl
mov
sbb
mov
mov
xor
add
mov
sub
mov
sub
mov
andl
mov
mov
jmp
mov
jg
inc
rorl
jae
pop
dec
arpl
pop
xor
jo
loop
jo
cmp
inc
data16
and
fstl
dec
dec
cmpsb
das
or
fnstenv
and
movsl
stos
cmp
mov
sbb
mov
rcll
dec
pop
mov
push
adc
fists
xchg
adc
pop
and
cmpsb
mov
mov
pop
lds
and
cmpsl
push
xor
sahf
sub
js
jno
ss
mov
das
push
fdivr
mov
call
test
push
sub
sub
mov
cmpsb
sbb
popa
mov
adc
icebp
fstps
xor
jbe
ds
gs
add
fstpt
stos
rcrl
add
je
pop
lods
xor
mov
sarl
das
iret
outsl
pop
xor
xor
mov
push
shlb
lds
cwtl
or
adc
dec
lea
iret
xchg
mov
pop
loop
shrb
scas
dec
nop
nop
cmp
xlat
lods
sub
or
mov
mov
dec
shll
lods
pop
jbe
dec
leave
shll
jne
and
mov
or
loopne
mov
mov
mov
mov
ficompl
jg
pop
mov
cltd
gs
sar
in
add
jae
js
aad
adc
outsl
nop
pop
mov
lds
dec
pop
xchg
cmp
dec
cld
rep
aad
repnz
inc
es
mov
pushf
ds
in
cmp
mov
adc
push
fldl
cmc
inc
cltd
jnp
out
adc
push
stos
gs
jmp
adc
sbb
int
jmp
je
data16
sub
stos
filds
push
xor
jns
add
cmpb
inc
lods
push
jp
aaa
sbb
lret
xor
repz
add
pop
mov
or
sarb
fadd
add
scas
subb
cmpsb
inc
gs
cmc
scas
push
inc
and
cmc
mov
sbb
icebp
cld
clc
sub
std
rclb
into
es
cli
loopne
cmp
ds
sbb
sub
jl
push
pop
bnd
xlat
imul
pop
lea
ja
fs
mov
nop
sar
pop
inc
fdivl
js
gs
imul
mov
mov
xor
mov
mov
adcl
mov
mov
orl
mov
subl
mov
andl
mov
mov
test
mov
jne
mov
jmp
sub
test
pushf
loopne
repnz
jle
jo
hlt
adc
sti
sti
stos
rcr
in
push
int3
jp
jg
and
cwtl
lods
xchg
mov
fbld
or
xchg
mov
or
sti
pop
jnp
inc
mov
adc
inc
lret
inc
aad
outsl
es
sub
jb
cmpsb
jae
cmpl
ret
mov
arpl
scas
xchg
aas
test
imul
rol
pop
fdivl
mov
inc
or
icebp
sbb
lock
out
stos
fiaddl
jns
enter
fdivrs
xchg
lods
add
aam
pop
pop
dec
repz
dec
mov
sub
push
iret
jecxz
imulb
lahf
mov
cmpsb
dec
xor
jo
int
imul
inc
inc
fwait
outsl
subb
xchg
cmpsb
inc
fiaddl
and
sbb
rcll
popf
aas
js
repnz
adc
sarb
call
push
push
popf
mov
scas
cwtl
scas
mov
adc
cmpsb
inc
adc
pop
jecxz
es
pop
xor
sbb
in
xor
movsl
cmp
dec
xor
unpckhps
cmp
jmp
xor
mov
rclb
pusha
jecxz
xor
ret
testl
inc
mov
lods
iret
xlat
push
mov
lods
scas
or
jns
lock
xlat
mov
cmp
mov
mov
andl
jb
sbb
shl
cmp
pop
jb
pop
push
push
mov
outsb
sub
cmpsb
rcrb
mov
test
xchg
cmp
imul
sub
sub
arpl
and
mov
xor
inc
xchg
sub
jo
scas
mov
jae
push
repnz
and
ss
xchg
sbb
loope
mov
fwait
scas
stos
hlt
rcr
adc
rcl
xchg
jp
sub
loop
shll
or
adc
test
lret
jnp
enter
mov
je
dec
ljmp
clc
and
rcll
push
ror
repz
xor
in
adc
lcall
add
ret
push
mov
sub
mov
mov
mov
subl
mov
xorl
movl
incl
movl
subl
mov
push
push
push
movzwl
and
mov
mov
movl
cmpl
je
cmpl
jne
pushl
pushl
call
mov
dec
mov
jmp
movl
cmpl
je
cmpl
jne
pushl
push
push
pushl
call
mov
dec
mov
jmp
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
push
pushl
call
jmp
andl
mov
inc
mov
cmpl
jne
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
xor
sub
mov
add
xorl
mov
movl
jmp
inc
jae
pop
sub
jae
and
mov
cmp
pop
lds
and
jo
mov
mov
ja
add
fiaddl
cli
and
add
inc
jmp
cwtl
pop
jno
adc
das
fisubrl
mov
jge
les
xchg
popa
aaa
cli
sub
sub
push
testb
mov
cmp
ds
cmp
cmp
add
and
shr
xor
push
add
cmpsb
sub
and
push
mov
push
or
int3
rcrl
sbb
insl
inc
pop
insl
mov
testl
int3
mov
cmp
push
xor
lcall
cli
pop
mov
dec
jns
pop
sbb
dec
dec
std
push
jmp
jp
mov
mov
jno
stos
push
mov
push
mov
fisubl
test
faddl
mov
inc
xor
cmpsb
in
cs
pushf
cmpsb
jnp
push
pop
inc
mov
jle
add
cmp
sub
out
sub
jbe
es
test
jmp
dec
in
dec
mov
cmp
jge
ss
push
mov
scas
enter
mov
pop
jbe
ja
jecxz
scas
sbb
sbb
gs
push
sbb
clc
xor
in
sbb
mov
mov
xorl
cwtl
pop
cli
sbb
mov
adc
shlb
push
xor
mov
push
dec
cmp
jae
mov
dec
ljmp
fcomp
cmp
popa
sub
int3
and
jns
sbb
scas
mull
loop
push
aas
adc
fs
movsb
jg
inc
lods
dec
adc
stc
jge
int3
test
mov
or
inc
gs
ja
fidivl
data16
lds
jns
xor
adc
xchg
inc
or
ja
lock
mov
or
mov
mov
push
jg
fwait
mov
mov
adc
adc
scas
xor
adc
cmp
pusha
jle
iret
mov
mov
cmpsl
jecxz
ror
adc
loope
push
mov
lcall
xorl
xchg
fisubl
shll
test
gs
pop
mov
les
comiss
adc
cld
or
cmpsl
call
push
test
rolb
add
lea
std
aad
loop
sahf
daa
pop
and
xchg
dec
cmpb
and
iret
sarb
movsb
enter
cmp
ljmp
or
mov
fsubrp
test
xor
addl
ret
jle
inc
sahf
fldt
nop
inc
sarl
inc
lahf
inc
cmp
xor
aam
add
outsl
sbb
iret
jg
or
insb
cmpsb
push
in
jg
cs
dec
js
ds
push
cli
cmp
fdivr
mov
xchg
shll
pop
lds
jmp
addr16
dec
xchg
xor
repnz
jo
mov
xor
repnz
inc
add
inc
aam
test
test
add
dec
add
add
mov
lahf
popa
sti
arpl
mov
jo
jge
jo
shrl
push
xchg
outsl
xchg
sahf
jmp
cli
into
sub
pop
test
idiv
es
push
lock
in
clc
push
repz
test
icebp
loop
sbb
mov
mov
sub
mov
and
push
sub
mov
std
cmp
stc
adc
mov
fbstp
and
insb
popa
xor
lods
repz
xor
push
jg
cmpsb
cmpsl
cld
push
sbb
push
cmp
insb
pop
jb
mulb
outsb
jns
into
xchg
rorl
out
inc
orb
inc
and
cwtl
add
jb
xchg
push
ljmp
into
call
js
sbb
push
mov
roll
or
test
icebp
jmp
dec
imul
cwtl
dec
ds
aam
pop
inc
mov
hlt
push
inc
xchg
mov
inc
push
sub
cmc
movsl
and
cmp
adc
sbb
repnz
sbb
sahf
inc
jnp
leave
dec
adcl
insb
repz
lahf
adc
xor
fstpt
sar
in
lret
mov
sbb
aaa
add
test
icebp
in
add
adc
sti
iret
mov
lods
mov
cmc
es
mov
out
pop
dec
dec
and
mull
mov
not
lcall
test
aaa
add
inc
add
sbb
jb
ja
ds
push
test
sti
ret
rcll
je
fildl
xchg
bnd
cmp
daa
pushf
cwtl
wrmsr
enter
arpl
jg
push
and
push
pop
adc
outsl
pusha
lcall
push
or
pop
xor
mov
cmpsb
iret
push
pop
mov
xchg
cmpsb
jnp
adc
jbe
gs
or
mov
push
jge
xchg
leave
enter
out
aad
mov
fwait
inc
jge
imul
add
ja
aaa
push
sbb
jl
int3
pusha
imul
pusha
and
faddl
xchg
data16
jne
out
pop
xchg
cmpsl
sub
pushf
push
loope
int3
loopne
mov
xchg
xchg
xchg
mov
je
sbb
rolb
mov
lds
add
in
push
push
xchg
xor
pop
and
pop
dec
jmp
push
inc
inc
insb
push
sub
and
imul
jnp
fwait
xchg
jmp
or
cmp
stos
scas
mov
xchg
inc
cmp
jns
rorl
xchg
mov
adc
shr
mov
sub
cmp
gs
mov
pop
and
out
insl
movsb
arpl
popf
leave
xor
loopne
mov
in
je
iret
sub
shr
mov
dec
and
enter
data16
pusha
inc
xchg
ret
mov
shll
sbb
pop
loope
cmpsl
sbb
or
and
jmp
scas
je
fwait
into
inc
sahf
mov
lret
lret
or
add
add
and
add
movb
notb
add
movl
add
in
test
andl
mov
inc
mov
cmpl
jne
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
xor
andl
add
orl
mov
adc
jmp
or
rcl
cmp
pop
jns
popa
lods
cmpsb
adc
test
jo
lea
mov
addr16
xor
sbb
iret
push
lock
stos
or
cmpsl
dec
add
movsl
push
lcall
sbb
cmpl
mov
in
movsb
mov
cmp
mov
mov
push
mov
jnp
lahf
cs
xchg
out
shrl
ss
rorl
in
and
lret
std
push
imul
rcrb
jmp
xchg
push
pushf
mov
xor
arpl
mul
mov
inc
adc
in
das
test
outsl
pop
inc
iret
fucomp
in
mov
jmp
jl
jmp
rcrb
filds
pop
jbe
inc
push
mov
jl
fmuls
jb
cmp
imul
jmp
andb
ret
jmp
rorl
movsb
mov
add
xor
push
pushf
outsl
pop
pusha
adc
sub
xchg
mov
jb
call
inc
pop
and
in
xor
insl
in
xchg
or
gs
mov
in
bndstx
movsl
add
xchg
cwtl
sub
dec
mov
insl
cmp
lahf
mov
xlat
bound
add
imul
out
outsb
enter
and
and
lods
shlb
mov
fs
mov
push
mov
adc
loop
xor
scas
psubw
add
dec
loopne
loope
sti
rclb
and
mov
lea
inc
mov
cmc
lret
sub
pop
push
lods
adc
inc
pop
mov
repz
add
mov
in
add
out
rol
inc
add
aaa
imul
push
negl
cmpsb
mov
sbb
testl
test
insb
iret
scas
lahf
add
mov
cmp
repz
mov
inc
cltd
insl
sbb
int
rcl
mov
cmp
lahf
ret
sub
mov
in
lock
pop
or
cs
cmp
push
int
addl
ss
sti
imul
sahf
lea
xor
xchg
scas
mov
repnz
hlt
xlat
pop
xor
adc
cmc
test
or
sbb
push
add
jg
pop
sbb
ds
adc
jmp
enter
xchg
mov
inc
add
push
cmp
jmp
rcrl
jl
arpl
dec
push
jmp
in
test
cmpsl
movsl
icebp
clc
xor
inc
adc
or
lock
push
sub
inc
jb
and
pop
pop
jge
push
and
dec
out
push
rcll
and
orb
repnz
mov
pushf
sbb
mov
jecxz
inc
dec
push
aas
jecxz
xor
mov
lret
shl
cmp
insb
clc
int
das
test
mov
jb
loop
inc
fdivl
movb
adcl
push
inc
mov
sbbl
xor
add
push
mov
orl
xor
addl
add
xorl
push
lea
push
addl
pushl
adcl
pushl
call
adcl
test
je
lea
sbbl
push
mov
jmp
xlat
and
insb
push
aaa
pop
push
push
sahf
or
dec
call
and
jo
hlt
or
jmp
cmp
mov
scas
mov
xor
outsb
cmp
and
pop
cmpsl
pop
decl
icebp
adc
mov
nop
pop
xchg
push
xchg
lahf
insb
add
fistpl
jno
jnp
mov
or
inc
adc
inc
mov
fs
or
mov
lret
sahf
fisubl
cwtl
inc
in
inc
test
in
pop
sub
das
push
push
rcll
pop
fneni(8087
xchg
clc
pop
mov
cmp
cmp
leave
fwait
subb
or
fidivrl
push
cmp
xchg
sbbb
sti
xlat
in
insl
jae
pop
adc
cmp
jl
aaa
aad
add
decl
dec
sub
dec
push
mov
push
cwtl
add
mov
xchg
push
adc
push
out
imul
mov
add
sub
out
cmp
or
ss
test
nop
les
cli
cmp
xchg
jnp
shr
jne
imul
add
xchg
das
hlt
inc
dec
dec
or
insl
int
push
dec
pop
push
sub
test
shrb
lret
inc
jne
mov
xchg
cltd
arpl
scas
mov
cmpsb
out
loop
lret
adc
clc
fscale
repz
aaa
loop
xchg
repz
int
sub
outsl
inc
fimull
or
cmp
add
jmp
fsts
dec
jne
mov
addl
shrl
jb
nop
les
mov
adc
xchg
or
dec
sbb
scas
xchg
pusha
js
adc
mov
pop
sbbb
lahf
mov
jmp
add
mov
mov
mull
cmp
add
out
xchg
pop
inc
xor
int3
call
jns
shl
repz
xchg
xor
dec
cli
cmpsl
test
mov
shr
cmp
fdivrs
fwait
pop
ds
cmp
adc
xchg
jb
jg
dec
je
scas
enter
mov
imul
into
cmpsb
stos
pushf
add
int3
pop
add
jbe
loope
or
filds
jg
push
sub
in
xchg
push
xchg
add
decb
sub
imull
push
incb
shrl
inc
sbb
xchg
push
outsb
cmp
xchg
cli
or
nop
stos
cmc
enter
jg
sbb
adc
inc
inc
dec
jno
mov
repz
push
cli
mov
dec
outsl
stos
inc
les
in
test
stc
sub
dec
adc
sti
mov
mov
xchg
pop
xor
jo
ret
xchg
mov
mov
xor
adc
ret
mov
add
add
xlat
rcrl
rcl
sub
or
xchg
cs
sti
les
sarl
in
xchg
jb
inc
and
inc
push
push
push
and
xorb
add
push
mov
add
push
mov
mov
pushl
jmp
sahf
das
or
mov
mov
pop
mov
mov
fsqrt
push
leave
jo
and
jo
jne
jo
jns
push
leave
cli
mov
xchg
outsb
mov
sub
inc
hlt
dec
jne
inc
or
jg
outsb
bnd
fdivrl
jmp
push
in
xchg
jo
out
orb
dec
dec
pop
xchg
lret
ror
xor
into
cld
pusha
sbb
cs
jge
fnstenv
sbb
inc
mov
mov
iret
popa
stos
pop
cmp
or
shlb
xor
arpl
mov
xchg
cld
adc
xlat
jmp
mov
dec
add
cmc
and
cmpsl
or
cltd
jnp
xor
ja
stc
bound
fbld
adc
vpaddd
adc
test
mov
mov
mov
fdivs
dec
jne
mov
mov
pop
push
arpl
xchg
iret
jne
sahf
test
pusha
mov
shll
je
mov
mov
cli
push
jbe
xor
push
sub
jmp
mov
repz
inc
ljmp
mov
mov
push
data16
jb
or
pop
adc
push
shl
or
lret
inc
scas
pusha
out
pop
and
xor
mov
pop
scas
xor
or
cmpsb
lods
xor
scas
mov
pop
test
push
pop
mov
loopne
pop
test
loopne
xchg
dec
or
cmc
push
daa
adc
xor
les
mov
push
dec
push
outsl
roll
dec
ja
out
cmp
push
mov
pushf
sahf
and
mov
test
das
and
cmp
loopne
call
subl
jo
repnz
mov
inc
gs
outsl
sub
and
xchg
cmp
je
repnz
sbb
inc
push
leave
add
addr16
adc
xadd
mov
jge
shl
ljmp
xchg
fidivl
jecxz
leave
lods
ds
push
fmuls
fistpll
hlt
cltd
addl
test
and
aad
ret
loop
cmp
test
clc
xchg
adc
mov
xor
es
ss
pop
push
popf
fwait
adc
pop
mov
xchg
fildll
fcompl
xor
push
and
enter
cmp
push
adc
xchg
into
and
xchg
mov
out
enter
imul
mov
cmp
mov
mov
ret
js
fldl
add
pop
out
pop
lcall
adc
cmc
outsl
sahf
inc
lret
sub
jnp
xchg
sbb
insb
jle
adc
jae
xchg
js
mov
jnp
cs
xchg
push
mov
inc
lock
mov
inc
cwtl
xchg
jl
xchg
lods
rcrl
sbb
movsl
add
leave
cmp
and
aaa
lds
push
cmp
cmp
pop
push
pop
dec
jecxz
in
daa
xchg
mov
dec
and
mov
test
jl
and
shrb
call
mov
cmpl
jmp
in
outsl
pop
outsl
jne
data16
test
pushf
cli
leave
aam
pop
aad
jo
jge
jo
xor
mov
cmp
and
ss
arpl
inc
fs
pop
ss
cwtl
adc
fildl
imul
xchg
jno
rclb
mov
popa
ds
addr16
pop
xor
add
sbb
push
mov
mov
sub
repz
mov
movl
cmp
mov
imul
andb
ss
mov
push
pop
imul
xlat
loopne
pop
aaa
dec
lahf
outsl
leave
cmp
pop
ret
fisttpl
mov
inc
add
mov
or
lods
sub
mov
jns
cltd
xor
aaa
popa
cltd
mov
pop
mov
push
jae
lcall
xor
test
xor
jecxz
mov
jmp
sub
dec
push
cli
mov
or
test
cmc
mov
mov
arpl
imul
push
and
push
gs
ret
push
jmp
jnp
jnp
sub
bound
sub
loopne
loop
mov
xor
or
pop
jg
cmpsl
mov
push
mov
jp
in
hlt
inc
jno
mov
cltd
shll
mov
mov
lds
nop
imul
rolb
xchg
cmp
jae
fisttpl
nop
aam
jge
fmuls
adc
dec
cmp
xchg
xchg
xchg
fsubrs
cmp
jle
pop
in
xor
cwtl
sti
add
push
jge
roll
or
xor
adc
push
jge
mov
sub
lds
fwait
call
jb
mov
mov
pop
sub
pop
rcll
xchg
arpl
scas
inc
push
or
and
popf
jbe
mov
les
out
jmp
fadds
cmp
out
int3
sarl
mov
pop
aaa
jae
mov
or
mov
sbb
sub
es
cmp
jne
or
test
lahf
xor
jo
pushf
mov
push
das
sub
incl
xchg
push
mov
call
cmp
stos
inc
fs
sti
mov
bound
push
test
cmp
leave
push
pand
mov
pop
bnd
push
test
adc
inc
rolb
mov
lods
xor
push
mov
out
outsl
inc
insl
arpl
pushw
sub
cs
adc
xor
ret
mov
js
jp
cmp
mov
fnstenv
inc
and
push
fsubl
jge
int3
mov
adc
mov
loopne
sbb
lcall
aad
sub
jo
dec
cmp
inc
call
mov
cmp
or
lret
mov
push
cmp
mov
popf
lea
mov
je
lea
push
mov
xor
add
push
mov
xor
add
push
pushl
lea
push
pushl
pushl
call
test
je
lea
push
mov
xor
add
push
mov
add
push
mov
mov
pushl
call
mov
xor
mov
sub
sub
mov
add
mov
mov
mov
mov
xor
sub
jmp
ja
mov
mov
or
mov
shlb
and
jo
loopne
jbe
xor
and
test
inc
pop
xor
mov
mov
jl
rorl
out
mov
ret
es
mov
cld
dec
ret
ja
jae
stos
jbe
subl
jmp
push
mov
out
insb
adc
sub
into
ljmp
lds
cmp
lock
jmp
lret
lods
jbe
jmp
dec
pop
xchg
in
rclb
pop
mov
mov
mov
sbbb
rol
mov
js
inc
xchg
sti
mov
xor
out
xor
xchg
mov
xorb
imul
xor
adc
push
mov
pusha
pop
sub
cli
ljmp
pop
or
call
sbb
scas
xor
pushf
xor
or
and
inc
adc
adc
jns
sti
push
daa
cmp
cmp
lcall
sub
scas
mov
or
rorl
xchg
xor
sub
cmpsb
xchg
pop
in
test
sub
enter
fs
or
push
data16
aam
lods
add
rcrb
orl
and
or
mov
cmpsl
push
lret
iret
into
xor
bswap
idiv
int
cmp
inc
data16
call
jne
orb
jae
sub
inc
fs
in
pop
push
daa
out
sub
pushf
addb
mov
pushf
push
in
mov
jbe
leave
and
movsl
xor
adc
cld
int3
push
sahf
inc
sti
repz
rcr
mov
fiadds
mov
adc
sarl
or
pop
or
cwtl
dec
call
cmp
iret
mov
mov
faddl
xor
sub
mov
in
out
sti
leave
jle
push
addb
mov
das
sbb
push
nop
cld
xchg
pop
iret
mov
pop
leave
stos
xchg
js
add
subl
add
jge
popf
cmp
loop
movl
mov
fstpl
jbe
pop
ret
ljmp
dec
mov
cld
cld
aas
in
pop
in
dec
cmp
sti
sbb
cmp
mov
mov
and
lcall
enter
dec
jp
mov
xor
and
lret
or
mov
mov
fdivl
lret
xor
xchg
repz
adc
or
mov
aaa
jmp
inc
dec
jae
loope
push
leave
adc
inc
frstor
jns
mov
repnz
das
hlt
jbe
cmp
fsubl
xchg
fbld
leave
sub
ds
std
shlb
jecxz
shll
and
lret
sub
imulb
or
push
cmp
mov
loope
xchg
jmp
pop
cmp
push
mov
jns
cmp
cwtl
es
mov
js
add
inc
cli
fisttpl
jp
xchg
mov
out
jo
and
jo
dec
sbb
jns
jmp
popf
lahf
addb
pushf
lods
inc
shll
ja
std
push
inc
cltd
mov
push
mov
jne
push
sub
ljmp
stos
fisubrs
in
inc
lret
mov
sbb
jbe
add
lret
out
incb
ds
or
rcll
dec
mov
xor
daa
and
or
sub
sub
jmp
leave
out
xchg
mov
push
ret
fwait
cld
inc
push
mov
dec
iret
adc
sbb
adc
mov
push
lret
lcall
sbb
out
mov
mov
fwait
xor
int
push
mov
repnz
les
xchg
xor
dec
or
sbb
sub
jbe
notb
int
push
test
jne
xchg
pop
pop
test
sub
mov
nop
pushl
add
dec
dec
inc
push
or
jg
scas
jae
aad
inc
push
in
mov
cli
mov
rcr
sbb
jae
aaa
mov
ss
sbb
jmp
mov
sbb
in
in
jne
inc
dec
sub
sub
jecxz
shll
jmp
sar
adc
mov
lcall
sub
xor
out
ds
and
cmp
decl
mov
les
inc
nop
out
xchg
mov
mov
shrl
lods
add
les
xlat
lahf
das
and
ljmp
les
in
jb
dec
call
jp
popa
mov
push
mov
les
cwtl
adc
fwait
pop
lods
sahf
fsubl
mov
test
inc
jle
mov
aas
jg
xor
mov
pop
pop
adc
push
or
fstl
pcmpgtb
cmp
inc
daa
push
dec
xchg
pop
mov
xchg
sahf
inc
pop
repz
or
or
es
xor
xlat
lods
xor
jle
pop
cmp
or
ret
push
je
mov
xorl
push
and
stos
mov
adc
sub
leave
inc
pop
sbb
ret
push
or
pop
mov
into
fcomps
add
js
imul
dec
push
pusha
pop
dec
xor
call
dec
and
fdivl
mov
ds
fists
inc
adc
fcompl
mov
push
jnp
cmp
dec
stc
shrl
scas
or
jne
out
cmc
iret
and
ja
mov
enter
push
cli
push
inc
jp
push
mov
inc
mov
dec
push
cs
dec
xor
or
pop
xchg
mov
sub
xor
clc
sub
in
imul
mov
jmp
cmc
add
cmpsl
mov
mov
repz
insl
mov
xlat
xchg
xor
repz
fs
or
ja
scas
push
lds
xchg
xor
lahf
inc
lea
incb
inc
push
jmp
mov
fwait
xchg
fwait
jae
roll
mov
xchg
fdivl
and
jo
jne
in
cmc
movsb
and
in
mov
sbb
sbb
dec
jge
sub
pop
xchg
clc
xchg
mov
and
jl
pop
iret
hlt
cltd
xor
adc
mov
syscall
enter
xor
sub
pop
insl
sub
sbb
fld
pop
fistl
mov
inc
adc
sub
jne
jmp
inc
clc
repz
jecxz
aas
fmull
xlat
xor
pop
xchg
out
sar
inc
dec
mov
ljmp
rol
sub
dec
push
add
sahf
mov
cmc
into
push
dec
mov
xor
mov
not
mov
xchg
and
aaa
xor
stos
xorl
sub
dec
dec
and
dec
dec
add
or
das
inc
jmp
inc
lret
aam
fcomps
sahf
sub
dec
sahf
jne
je
jmp
mov
clc
jo
jg
sub
int
mov
and
add
stos
add
les
fnstcw
test
popa
mov
push
mov
or
mov
jmp
xor
fisttpll
in
add
push
jl
inc
add
lret
add
repz
and
inc
jg
dec
sbb
push
xchg
jns
sub
sbb
ret
cmp
decb
xor
div
je
xor
add
pop
insl
xlat
nop
inc
outsl
adc
inc
inc
mov
sahf
vprotw
int
in
xor
mov
fsubs
fbstp
sbb
or
mov
shr
push
xor
ret
xor
test
cltd
mov
insl
loope
popf
mov
in
mov
xor
jb
lea
int
sub
sarl
jno
repnz
fdivrl
pop
outsl
daa
sub
repnz
mov
adc
jle
pop
aam
mov
and
inc
ror
mov
in
add
sbb
mov
xchg
negb
mov
sub
imul
or
jae
inc
mov
bound
cmp
insl
jnp
icebp
clc
adcb
push
insl
pushl
and
push
push
pop
push
fs
mov
mov
jno
lock
mov
add
pop
mov
ss
adc
xchg
mov
testb
inc
aad
movsb
in
mov
movsl
inc
mov
add
sub
and
push
insl
pusha
push
insb
jo
xor
cmpsl
push
sahf
mov
notb
jle
shll
shlb
pop
stos
xor
inc
popf
mov
mov
inc
sub
pushf
es
or
mov
cmp
xlat
das
int3
pop
cwtl
inc
cld
xchg
jb
mov
test
mov
out
pop
dec
xchg
decb
pushl
mov
mov
pushl
lea
jmp
mov
push
mov
fdivr
mov
and
jo
jbe
sbb
push
ds
cmpb
xchg
or
sbb
out
mov
stos
enter
or
push
xchg
adc
popa
pop
shlb
mov
mov
sub
pusha
add
cli
or
sub
repnz
pop
mov
movsl
dec
jns
push
loopne
push
popf
jnp
sbb
pop
jge
divb
xchg
adc
gs
loop
add
jl
cmp
arpl
mov
pop
or
lret
mov
test
pop
cltd
and
adc
sahf
das
dec
ja
testb
inc
dec
xor
aad
mov
add
ja
inc
xchg
xchg
jmp
add
push
dec
fdiv
cmpsl
andb
in
inc
popf
xor
push
mov
cmp
mov
loopne
sub
ret
test
or
insl
dec
gs
pop
lds
lea
lahf
imul
movsb
sub
in
jecxz
mov
test
and
add
pop
mov
int
sub
push
ret
or
rorl
aad
lock
ja
ljmp
or
lcall
jp
jmp
enter
movsb
xor
add
xchg
loope
push
fstl
mov
in
mov
adc
mov
lds
lods
dec
lea
add
and
repz
xchg
leave
xchg
out
push
push
repz
xchg
sbb
add
or
in
lods
or
mov
mov
dec
pop
vorps
sub
cmp
jmp
xchg
push
cs
mov
lret
mov
adc
lcall
cltd
sbb
loope
pop
lds
pusha
aaa
js
xchg
push
xchg
inc
cmp
pop
pop
add
lcall
dec
pop
xchg
xor
sbb
fs
push
jmp
pop
jae
out
test
add
rorb
mov
leave
push
lock
fiadds
sbb
mov
mov
or
insb
add
jmp
cmp
sti
aaa
inc
cmp
xlat
mov
popa
lret
flds
dec
dec
sbb
insl
cmp
or
lea
or
adc
lahf
push
fdivl
arpl
pop
xor
push
adc
jo
pop
push
and
mov
in
cwtl
sbb
out
sub
cmpsl
xchg
mov
pop
pusha
aas
pop
test
lods
pop
inc
das
out
cmpsb
imul
xlat
and
push
cmp
push
cwtl
xor
or
jmp
pop
adc
sbb
mov
xchg
fwait
add
fcmovnb
jge
or
mov
fwait
adc
les
inc
out
mov
repz
ja
inc
mov
fstpt
pop
aaa
xor
add
and
sbb
add
in
xor
add
dec
add
add
out
out
xor
call
mov
jo
and
jo
lahf
out
cs
sbb
jmp
shrl
insl
mov
in
movsb
jo
inc
adc
sahf
push
xor
lret
cmc
inc
call
xchg
xlat
and
jle
sahf
push
rcll
dec
xor
dec
mov
icebp
sbb
or
mov
or
repnz
andl
repz
mov
adc
mov
aam
jg
mov
dec
aad
in
or
aam
cmp
sub
push
repz
faddp
arpl
int3
dec
rolb
arpl
ficompl
or
jmp
and
xchg
dec
and
inc
cmpsb
dec
clc
inc
shll
add
mov
aaa
into
cmp
lret
repz
sub
leave
inc
out
es
jmp
mov
sub
xchg
jo
xchg
scas
out
cmpsb
dec
xor
xor
sub
mov
jbe
mov
add
pushl
ret
lea
jmp
stos
into
sti
std
mov
add
add
xor
mov
je
lret
pushf
jge
sub
scas
cmp
or
iret
outsl
popf
or
inc
mov
aam
mov
cwtl
xor
cmp
jnp
out
ljmp
sahf
stos
or
sbbl
and
mov
mov
rcr
jecxz
ljmp
pop
mov
mov
insl
lods
xchg
loop
mov
push
mov
push
xchg
repnz
and
aam
lahf
test
insb
movl
and
jno
rcr
shlb
xor
pop
pop
or
nop
pushf
mov
push
loopne
jbe
push
rcll
dec
inc
subl
mov
sbb
je
jp
cmp
in
imul
rolb
mov
icebp
stos
jo
into
cwtl
sbb
jl
and
cmp
push
stos
frstor
decb
xor
loope
sbb
in
jge
xchg
pop
and
mov
mov
jge
mov
xor
fmuls
inc
notl
gs
inc
and
mov
mov
nop
leave
cltd
icebp
cs
cli
lahf
inc
pop
frstor
loop
icebp
mov
jmp
imul
pop
nop
cmp
loopne
fidivrl
push
nop
push
dec
lea
dec
add
outsl
xchg
enter
fcompl
dec
mov
pop
adc
lret
filds
push
lcall
pop
fimull
aas
pop
jae
xor
jno
lret
dec
dec
imul
jp
iret
mov
jle
lcall
not
aad
inc
xlat
inc
stos
adc
mov
xchg
popf
out
push
mov
jg
and
imul
mov
jo
pop
aaa
jp
jg
jg
mov
repz
xor
aam
dec
movsb
pop
call
dec
cmp
enter
jl
sbb
fldt
sbb
dec
mov
cmp
out
jmp
sub
mov
add
pushl
lea
pushl
xchg
inc
inc
sub
push
pop
jmp
cmpsb
jnp
or
lahf
jo
stos
mov
jo
jge
jo
xchg
cmp
loop
sub
mov
adc
js
scas
dec
xchg
pop
enter
cmp
pop
xchg
ds
cmpsl
pop
enter
cmp
aam
xchg
mov
fnsave
dec
jl
xor
hlt
sub
xchg
mov
inc
insb
out
loop
jl
add
into
shr
jmp
imul
mov
fiaddl
adc
int3
jno
push
addr16
call
frstor
inc
cli
int3
jmp
ljmp
xlat
pop
je
jo
xor
aad
je
bnd
out
jge
and
orb
cli
imul
sbb
outsl
leave
jge
adc
pop
lea
xchg
aaa
mov
pop
pop
push
inc
dec
sbb
cwtl
pop
fs
push
hlt
pop
aas
mov
in
mov
out
movsb
mov
adc
pop
adc
insl
push
mov
rcrb
xor
mov
aam
enter
push
push
outsl
fistpl
cmp
jmp
scas
and
cltd
or
subl
inc
fs
and
adc
cmp
bound
jns
mov
movsl
dec
cmpsl
push
inc
out
ret
pushf
das
pop
aam
xchg
cltd
sti
fs
xor
xor
xchg
test
rcrl
push
add
mov
lods
push
sbb
jge
xchg
bound
and
cmp
lcall
bnd
mov
inc
mov
fwait
arpl
cmp
adc
bound
xor
cmp
pop
mov
dec
filds
mov
xchg
sub
push
scas
shll
push
movsb
inc
xchg
in
push
enter
cmovno
lret
out
sahf
mov
cmp
popf
loopne
out
mov
mov
popa
inc
ss
fcoml
in
cmp
jne
mov
mov
push
mov
push
sub
call
sbb
test
js,pn
cmp
cwtl
add
imul
pop
loopne
xchg
in
loope
fprem
int
sub
cmp
push
jae
push
dec
loopne
popf
sbb
push
jae
push
mov
mov
jle
and
xchg
pushf
mov
and
push
pop
ljmp
adc
xor
arpl
into
pop
mov
subl
rcrl
sub
mov
cmp
sub
loope
int3
mov
pop
xor
jns
and
repnz
xor
inc
cmp
test
jne
push
cmp
cwtl
out
adc
cmpsb
adc
jns,pn
fnsave
setno
out
pop
sub
inc
pop
pushf
pusha
and
les
in
xor
out
ljmp
sbb
xchg
ja
hlt
mov
shrb
in
cmp
or
lret
stos
mov
pop
xchg
xor
pop
stos
mov
or
hlt
adc
jp
sub
adc
test
mov
fs
bound
loopne
or
jmp
out
mov
ja
add
xchg
out
jo
and
jo
leave
push
mov
or
sbb
mov
push
pusha
test
pop
jmp
jo
rolb
xchg
aad
and
ss
push
loope
pop
mov
ss
clc
xchg
lcall
cmp
jmp
lods
je
xchg
jb
push
sub
sbb
sahf
sbb
mov
setl
xchg
out
shlb
adc
sub
push
fsubrl
xchg
jle
fisttpll
sbb
or
shlb
push
ret
and
les
out
xor
push
stc
sub
jbe
adc
mov
dec
push
lcall
dec
push
mov
ret
sti
cmpl
faddp
enter
and
ficomps
jle
jle
stc
subl
inc
xchg
imul
ret
dec
mov
movsb
andb
add
pop
das
aas
nop
cmpb
cmpb
mov
or
cmp
inc
daa
repz
data16
mov
int
fcoml
arpl
or
dec
xchg
jl
addl
dec
jl
ror
repz
ror
out
adc
xchg
mov
xor
sbb
mov
sarb
jp
fsubr
jno
mov
sub
mov
cmp
sbb
arpl
nop
xchg
jnp
je
mov
dec
ret
jecxz
push
icebp
data16
shrb
in
inc
call
mov
push
adc
popa
xchg
mov
loopne
cmp
stos
cs
aad
pop
rcrb
jne
cwtl
push
in
and
jmp
std
fbstp
cmc
jnp
int3
jnp
ss
inc
sub
sub
orl
dec
das
and
mov
xchg
sub
push
add
and
jns
sbb
fcoms
outsl
enter
lods
test
fwait
in
push
les
mov
into
and
jno
mov
fistl
out
pop
js
cmpb
and
or
jl
xchg
lret
js
mov
push
sub
push
mov
rcr
cwtl
xor
cs
push
incb
add
outsb
mov
imul
sarb
in
in
sbb
ja
inc
xor
cmp
test
pusha
rolb
push
and
mov
rorb
xchg
adc
pop
mov
sarb
pop
mov
out
sub
mov
jle
mov
push
push
insb
test
sbb
inc
movsb
loop
pushf
or
fstl
inc
jbe
add
sub
mov
mov
mov
ds
out
vpmacssdd
xor
in
ja
inc
xor
push
stc
test
cmp
xor
or
sahf
test
adc
movsb
adc
xor
or
pop
pop
leave
ret
push
mov
sub
push
subl
mov
sbb
mov
mov
mov
sub
imul
mov
movl
neg
movl
mov
mov
or
mov
add
mov
adcl
mov
xor
xor
mov
sbb
mov
jmp
arpl
cmc
xchg
cmc
arpl
pop
das
negl
push
sub
jo
jge
jo
mov
outsb
cmp
sub
mov
loop
mov
mov
add
lds
sub
es
and
daa
mov
and
aaa
jns
cmp
insb
sbb
jl
inc
cs
nop
int
pop
mov
xor
lock
insl
mov
and
movswl
sbb
xor
inc
test
sub
xor
push
inc
shlb
stos
ljmp
enter
ret
sbb
mov
mov
adc
dec
dec
bnd
pop
in
ret
ret
cmp
in
xchg
jl
xchg
divl
sub
inc
mov
mov
pushf
cmp
xchg
xorl
cmp
mov
sub
sub
bound
mov
ret
mov
push
inc
mov
rep
leave
cs
lret
jecxz
sbb
mov
xchg
insb
adc
repz
int3
cmp
cmp
pop
dec
ds
mov
outsb
cmc
add
cmp
inc
lea
jae
aam
and
sarl
mov
push
out
push
outsb
test
mov
popa
pop
push
daa
jmp
dec
pop
hlt
pop
cmc
sbb
int3
fcoml
imul
int
stos
add
push
aad
mov
andl
lcall
int3
cmp
mov
mov
aam
cmpb
movsb
and
mov
push
fs
xor
mull
les
mov
addb
rolb
push
push
nop
or
xor
or
lods
mov
idivl
aas
xor
and
xor
hlt
mov
jae
jo
cmp
dec
iret
and
pop
adc
imul
adc
lret
sbb
nop
loop
xchg
push
cmp
out
das
mov
call
popl
sbb
mov
rcrb
lahf
lea
adc
lahf
add
int3
push
push
jo
pop
push
dec
sahf
push
dec
int3
notb
mov
stc
mov
in
setbe
and
pusha
out
scas
pusha
push
pop
jns
xor
add
je
clc
mov
and
shrb
add
in
fisubl
dec
rcll
adc
mov
cmpsl
fldenv
mov
pop
pop
pop
jp
aam
ficoms
push
pop
lret
inc
jae
call
xchg
test
stos
mov
test
rorb
push
pop
clc
sysenter
testl
adc
or
rolb
cmpsl
bnd
lahf
out
or
jno
adc
outsl
pushf
out
dec
push
or
jno
sbb
pop
jne
jo
and
cmp
adc
pop
xlat
or
movsl
fcmovbe
das
jg
push
fnstcw
test
xchg
repz
xor
push
jnp
test
adcb
test
inc
das
pop
aas
stos
cltd
push
lahf
lds
inc
pop
lock
jnp
cwtl
inc
leave
adc
ret
loopne
test
pusha
push
sub
adcl
leave
cmp
int3
ljmp
outsl
lods
push
lcall
add
ja
in
lahf
mov
push
outsl
out
pop
psubusb
cmp
ja
lcall
mov
shll
or
mov
mov
and
xor
adc
add
movl
cmpl
je
cmpl
jne
pushl
call
mov
dec
mov
jmp
mov
adcl
jmp
xlat
mov
mull
mov
jb
mov
jo
jge
jo
or
or
lock
jp
js
dec
mov
xchg
mov
sub
lds
gs
test
int
inc
je
mov
sbb
jmp
inc
sbb
push
hlt
add
les
jo
lods
test
cmp
push
jge
sbb
out
mov
mov
test
xor
stos
sti
lock
xchg
push
addr16
nop
outsl
fwait
vsubpd
lods
inc
fcoml
push
dec
fdivrl
dec
adc
int
lea
ss
insb
mov
ret
psubsw
sbb
and
pop
loope
push
push
and
mov
push
loop
inc
jle
mov
pushl
add
xor
xlat
sub
cmpsb
andl
imul
cmp
je
ljmp
mov
movsl
mov
and
icebp
sbb
scas
adc
push
lock
js
js
aam
xchg
in
pop
adc
jb
ret
orb
jns
mov
mov
push
sti
add
lcall
sub
jmp
insb
dec
cmpsl
testb
repz
push
add
loop
cmp
ja
sub
push
nop
fsubrs
inc
sbb
pop
pusha
test
test
call
insl
dec
aad
sti
cmc
jb
pop
jns
jo
pop
loope
add
dec
push
cmp
out
adc
out
fidivrs
std
cmc
jl
mov
aaa
add
gs
pop
dec
mov
fstpl
push
std
ret
xlat
lds
aas
mov
lret
movsl
xchg
add
fucom
and
add
xchg
push
push
gs
ficompl
mov
and
add
call
stc
push
test
or
xlat
pop
insl
clc
push
xor
mov
sbb
les
testb
loopne
into
inc
pop
out
lahf
lods
xchg
xlat
sbb
test
lock
icebp
addr16
push
inc
pop
push
lods
lock
fwait
xor
lock
mov
and
lds
sbb
pop
push
xor
sbb
out
mov
push
arpl
icebp
popa
data16
pop
imul
jecxz
hlt
pushf
jb
rorb
mov
les
mov
mov
nop
mov
inc
xchg
jecxz
fisttps
arpl
sarb
scas
nop
sbb
xchg
in
sarl
cmpsb
and
lods
subl
jle
int
mov
int3
repz
call
mov
mov
out
adc
loope
sub
jle
inc
stos
add
mov
lret
fidivrl
jmp
push
inc
cld
pop
dec
cmp
sbb
sbb
cltd
pop
lret
gs
cmpsb
jbe
lret
std
add
aam
cmp
mov
into
jge
test
push
push
lcall
sub
xor
inc
lods
in
rcrl
das
std
mov
outsl
cmp
cmc
out
or
inc
sub
lret
lahf
subb
gs
test
loop
sbb
jl
data16
add
xor
push
fwait
scas
test
dec
pop
inc
ret
xor
add
aaa
and
outsb
scas
in
adc
popf
xchg
dec
sbb
add
mov
mov
push
add
movl
movl
adc
movl
andl
jmp
xor
or
inc
mov
cmpl
jae
cmpl
jne
push
push
push
push
call
jmp
add
movl
andl
jmp
into
iret
cmpsb
cmp
sbb
lret
mov
cmc
jo
lahf
jge
jo
lret
and
int3
jae
jp
aaa
adc
bound
add
ret
jnp
sahf
ss
jnp,pt
fidivrl
push
xchg
in
nop
dec
adc
push
xor
or
mov
cmp
in
push
pop
xchg
cmpsb
xor
cmp
adc
ja
push
das
scas
shl
jp
insb
imull
push
bound
dec
or
lds
pusha
add
aaa
lods
cld
xor
jmp
jmp
jg
stc
ficomps
stc
dec
test
push
ds
mov
adc
jg
pop
push
fisubrl
or
mov
pop
mov
dec
pop
jl
dec
inc
es
mov
sbb
pop
push
dec
ja
jp
movsl
cmpsl
das
cwtl
fs
dec
jge
ljmp
fisttpl
and
ds
fidivl
mov
push
ss
mov
fmul
movsb
xor
bound
push
dec
mov
ret
loope
ret
dec
int
dec
sub
lock
shrb
fimuls
mov
cmc
movsl
push
testb
repnz
ret
xchg
lock
mov
in
adc
mov
mov
dec
sub
and
into
cmp
subl
sub
div
dec
jns
inc
and
jbe
adc
repnz
adc
push
jne
je
push
sub
movsb
push
jns
gs
scas
and
out
into
or
loopne,pt
and
mov
mov
and
dec
sbb
mov
jb
stos
mov
push
jmp
pop
ljmp
mov
or
lret
fisubrs
add
mov
inc
flds
xor
or
popf
jl
faddl
aad
pop
aas
fiaddl
imul
cmp
xrelease
pop
xorb
xor
dec
out
fbld
mov
and
aam
mov
or
cmp
int
cmp
insb
cmpsl
fsubrs
xor
int
idiv
push
push
push
das
pop
mov
push
push
xor
repz
mov
arpl
xchg
or
adc
xorb
cwtl
jle
iret
andb
roll
aas
jg
xlat
mov
aaa
sub
clc
inc
jno
adc
daa
jne
add
mov
cmc
mov
daa
cmpsb
pop
cmpsl
into
dec
leave
rolb
sub
es
das
adcl
pop
fnstenv
imul
sub
fnstenv
xchg
sbb
outsl
cltd
lods
in
lret
in
ss
es
pusha
mov
sbb
mov
cli
sub
sub
stos
sub
popf
insb
arpl
push
into
movsb
pop
sbb
dec
out
jae
or
lock
fdivs
cmp
mov
insl
mov
testb
test
xchg
lods
aad
cmpl
mov
iret
fwait
mov
aaa
stos
mov
enter
nop
fs
lret
mov
lret
cs
and
jecxz
pop
inc
pop
inc
lcall
imul
push
jecxz
sbb
ret
lahf
fsubrs
mov
jno
xchg
mov
or
jo
lret
cmp
cmp
inc
je
and
test
test
inc
add
add
add
rorb
adc
inc
mov
cmpl
jne
pushl
pushl
push
pushl
pushl
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
call
cmpl
jne
xor
add
inc
mov
jmp
mov
xor
mov
movl
adc
mov
xor
sub
mov
add
movl
cmp
movl
je
movl
push
movl
jmp
mov
movl
cmpl
je
cmpl
jne
pushl
push
push
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
xorl
sub
mov
add
mov
jmp
addr16
xchg
jno
ja
dec
in
std
and
mov
jo
jge
jo
push
jo
stos
in
sub
icebp
cmp
and
inc
out
movl
loop
fimuls
inc
mov
int
jnp
dec
cmp
imul
inc
sahf
cmp
sbb
adc
and
or
push
mov
leave
pop
pusha
xor
insl
adc
dec
pop
insb
in
add
fs
fdivl
sbb
push
push
add
scas
mov
int
call
jnp
lods
jle
mov
lcall
punpckhdq
cwtl
adc
mov
out
jle
xor
inc
insl
dec
cli
mov
inc
mov
mov
dec
jle
xchg
cltd
fidivrl
add
mov
rcrb
fdivl
cmpb
sarb
mov
dec
rcrl
repz
data16
pop
int
out
in
subl
mov
sub
negb
push
push
mov
sarb
push
lret
pop
imul
mov
ret
dec
push
inc
and
mov
mov
xchg
test
push
ljmp
mov
or
je
dec
jno
push
dec
pop
adc
pop
and
push
sub
sti
dec
scas
push
cmpsl
sbb
dec
movsb
mov
scas
adc
ljmp
sub
stc
scas
mov
xchg
mov
jp
int3
ja
scas
stos
inc
pop
hlt
fldenv
xchg
js
dec
lds
mov
push
pop
dec
dec
and
jp
dec
jae
mov
mov
adc
push
dec
lods
push
insl
mov
pop
mov
insb
rclb
lret
insb
and
int
pop
and
jge
push
shll
sub
repz
pop
xlat
cltd
bound
out
or
lcall
movsl
or
jno
dec
push
ret
pop
adc
ret
scas
mov
jmp
adc
push
mov
pop
dec
dec
addl
imul
test
mov
lret
enter
ret
push
pop
jae
mov
mov
inc
cmpsl
sub
mov
test
pop
icebp
addl
and
sub
jl
sbb
shlb
lcall
dec
out
nop
mov
jg
push
jb
adc
pop
imul
add
enter
es
orb
scas
nop
pop
inc
dec
or
aam
xchg
pop
cmp
jnp
mov
dec
mov
test
cmp
call
lret
enter
imul
cmp
sub
jge
mov
dec
fwait
xchg
out
xchg
or
xor
mov
mov
xchg
mov
mov
mov
rorb
jns
pop
mov
outsl
add
hlt
and
imul
fcompl
mov
arpl
jge
or
and
mov
lods
sbb
and
lock
pop
jle
aam
adc
adc
cs
xchg
mov
or
adcb
xchg
inc
leave
jl
xor
lods
and
shlb
adc
xor
scas
jne
push
lock
cmpsb
mov
mov
sbb
iret
jle
sbb
ja
cmpsl
mov
mov
xorl
add
movl
cmp
movl
jb
mov
sbb
mov
xor
sub
xor
movl
cmpl
je
cmpl
jne
pushl
push
pushl
push
pushl
call
mov
dec
mov
jmp
andl
jmp
xor
or
inc
mov
cmpl
jae
cmpl
jne
push
pushl
call
cmpl
jne
mov
inc
mov
jmp
adc
add
sbb
add
imul
sub
mov
movl
cmpl
je
cmpl
jne
pushl
push
call
mov
dec
mov
jmp
mov
sub
cmp
ja
mov
xor
add
jmp
mov
mov
xor
xor
add
add
imul
mov
mov
sub
cmp
ja
mov
jmp
mov
mov
xor
xor
add
jmp
xor
mov
mov
jae
jg
ja
sbb
ret
add
jo
lahf
jge
jo
js
cmpl
xchg
lods
scas
mov
xchg
jle
lock
pusha
movsb
lahf
mov
inc
cmc
sub
add
xlat
ret
roll
in
mov
hlt
xchg
sbb
rcrb
mov
lock
push
pop
insb
movsl
cmc
and
xchg
pop
add
int
sti
pop
push
lahf
and
mov
sub
fcompl
shr
mov
jmp
outsl
lcall
add
aas
jmp
stos
push
fstl
pop
push
lock
cli
pop
dec
dec
jmp
test
push
sub
lret
call
push
mov
sub
movsl
fdivrs
repnz
xor
mov
sbb
stc
nop
insb
inc
mov
das
xor
pop
sbb
imul
dec
in
icebp
das
push
push
mov
into
lods
add
ja
aas
cmp
or
jl
andb
add
sbb
sub
scas
sti
adc
mov
sub
sarb
call
jmp
shr
jg
sub
lods
dec
nop
sbb
add
insl
mov
dec
sbb
cmpsl
cwtl
add
xor
bound
or
add
xchg
out
lods
add
sbb
icebp
add
fldt
and
ljmp
inc
jg
call
xor
push
lock
insl
mov
pushf
mov
mov
or
adc
or
icebp
inc
xchg
dec
rcrl
jb
mov
cmpb
sbb
cld
xor
sub
push
test
and
out
in
mov
xchg
pop
mov
out
inc
push
xchg
xor
iret
mov
and
jg
stc
sbb
sub
xchg
int3
push
bound
in
stc
jbe
test
je
out
xchg
mov
in
mov
add
bswap
and
xor
or
ret
rcl
adc
test
imul
lahf
mov
mov
cltd
dec
pop
push
out
mov
pushl
je
cmp
and
mov
sub
dec
dec
or
inc
dec
popa
fisubrs
mov
xchg
sti
cli
sub
sti
hlt
icebp
fsts
popa
push
xor
push
sbb
shlb
mov
add
jne
and
lret
and
xor
mov
nop
sub
mov
mov
mov
jg
pop
test
pop
jno
inc
pop
cmpsl
outsb
inc
in
out
dec
xchg
nop
addb
mov
outsl
or
jl
cmp
push
scas
std
sub
cld
bound
icebp
daa
adc
cmpl
repnz
jl
ficompl
adc
ja
xchg
daa
cmc
std
xchg
test
add
fists
jb
cmp
cmp
int3
pusha
jge
in
xor
sbb
and
inc
lret
sub
mov
scas
lds
and
in
lahf
or
sbb
adc
sub
xchg
or
pushf
sub
lcall
sbb
pop
jg
sbb
or
in
mov
int
outsb
addr16
leave
sub
arpl
stos
cmp
pop
lock
pop
lahf
pop
lcall
imul
jae
cmp
add
pop
xor
rcrl
out
inc
adc
stc
and
jbe
xchg
shr
mov
jne
sub
lret
or
jecxz
mov
jge
jo
adc
jp
bnd
pop
push
lea
mov
cmpsb
loop
ret
cmp
ss
repnz
mov
mov
pop
cmp
aad
xchg
ja
mov
sub
daa
mov
mov
and
push
imull
pop
and
add
loopne
loopne
js
cmp
into
and
xor
fwait
xchg
scas
cmp
clc
push
lock
jae
mov
popl
and
jo
xchg
push
add
or
pushl
test
shlb
adc
enter
xor
test
or
mov
push
or
pop
ss
cmp
xchg
cltd
and
hlt
imul
lods
lock
pop
std
sub
leave
cld
inc
les
outsb
inc
pop
icebp
mov
xor
add
jo
es
scas
push
subb
scas
popa
sbb
pop
cmp
xor
xchg
popf
mov
pop
mov
cwtl
mov
in
push
lahf
ss
ljmp
loopne
ja
jmp
mov
stos
push
push
mov
sub
mov
sbb
je
pop
add
inc
jl
sbb
movsl
or
fldenv
stos
xor
les
inc
sar
mov
pop
jnp
dec
loop
push
jne
add
int
cmp
cld
sbb
fs
rcrb
and
lahf
dec
loope
sarl
dec
in
imul
cmp
fwait
fwait
sbb
daa
add
mov
cwtl
add
shll
mov
roll
fwait
jb
stos
test
xchg
xchg
sbb
aad
cs
cmp
push
jae
adc
das
inc
fiaddl
jle
jb
les
in
sti
scas
jae
jno
int3
jne
xchg
out
scas
gs
fcompl
cmpxchg8b
lret
pop
scas
sbb
cltd
test
and
push
pushf
mov
sub
int3
ja
pop
scas
and
adc
sub
jmp
xchg
sbb
lret
mov
pop
or
mov
arpl
in
push
movsl
push
mov
int3
mov
sub
fwait
test
stos
mov
je
stos
adc
cli
mov
ss
insl
push
test
inc
sub
and
jmp
mov
rolb
stos
iret
loope
fistpl
fwait
mov
movsl
imul
cld
and
ljmp
in
cltd
add
iret
mov
adc
jle
fnstsw
cmpsb
stos
xchg
movsb
add
in
divb
pop
sarb
mov
scas
push
hlt
jge
adc
mov
stos
insl
push
int3
sbb
aas
test
mov
fildll
fisttpl
test
cmp
outsb
int3
insl
inc
add
fs
jbe
and
ret
cs
push
mov
pop
and
pop
fisttpl
dec
jge
popa
movsb
mov
push
data16
jbe
mov
or
mov
out
out
fwait
rcrb
btr
cmp
inc
loope
mov
jae
aaa
push
js
xor
jb
cmp
lds
sbb
scas
xlat
mov
mov
sub
cmp
ja
mov
jmp
mov
jmp
cmp
mov
loope
loop
pop
repz
jo
lahf
jge
jo
cmp
fisubrs
popf
mov
lahf
xor
or
pop
sar
std
shll
stos
jae
xorb
mov
cli
lods
and
xchg
push
mov
dec
mov
xchg
adc
leave
dec
pop
dec
or
push
and
sbb
mov
retw
gs
dec
add
out
or
lret
das
pop
das
push
jecxz
imul
and
inc
sub
xor
mov
or
inc
add
add
stos
mov
pop
jnp
inc
xlat
jecxz
fstps
mov
test
scas
cmpsl
mov
stos
dec
aad
inc
loopne
insl
or
icebp
orb
cmp
sbb
lock
shlb
inc
stos
push
adc
aas
pop
roll
out
mov
mov
sub
lret
cmp
xchg
loopne
jmp
add
hlt
sahf
sbb
jb
bound
xlat
mov
out
andb
lcall
xchg
cmpsl
fdivrp
cmp
ret
outsl
inc
mov
ds
mov
test
inc
in
ficoml
sbb
mov
mov
lcall
out
orl
nop
jno
loopne
push
mov
fldl
sbb
push
mov
leave
push
xor
aas
xor
xcrypt-cbc
cmpsl
xchg
aad
mov
pusha
add
out
pop
inc
mov
jno
add
dec
sub
sbbl
stos
movsb
in
sbb
or
pop
cli
test
sbb
and
mov
arpl
xlat
js
mov
mov
sub
cmc
enter
cs
sub
sbb
jb
xchg
sub
lock
cmp
insb
cmp
fistpll
out
rorl
dec
mov
push
stos
dec
scas
dec
xchg
sub
in
cmpsb
jp
stos
movl
mov
icebp
inc
xchg
mov
xchg
xchg
cmp
dec
clc
xor
in
shlb
test
fistpl
push
pop
jo
ljmp
pop
adc
test
std
inc
movsb
push
sub
pushf
scas
add
mov
pop
jg,pn
aaa
push
push
inc
jmp
rol
mov
push
adc
popl
out
push
sub
ss
jnp
or
ljmp
loop
fldt
pop
jae
int3
push
repnz
incb
out
and
inc
xchg
inc
mov
pop
sbb
push
mov
sub
xchg
mov
mov
pushf
dec
les
mov
repnz
dec
test
pop
in
lods
sub
enter
lods
ljmp
pop
mov
dec
add
inc
test
orl
enter
mov
insl
xchg
lock
out
xor
out
clc
push
dec
cmp
daa
sub
subl
hlt
add
loope
mov
cmpsl
out
mov
dec
xor
jbe
xchg
lret
test
lods
mov
stos
push
sbb
js
lds
lret
sbb
pop
mov
xor
rol
adc
jp
fldenv
sbbl
inc
mov
mov
daa
inc
arpl
enter
test
xchg
mov
test
addr16
mov
jle
inc
adc
jge
xor
xor
add
add
imul
mov
mov
sub
cmp
ja
mov
jmp
mov
mov
xor
xor
add
add
imul
mov
jmp
xchg
fcomi
push
jb
mov
shlb
push
pusha
xorl
jge
jo
xor
out
xlat
cmp
jecxz
mov
mov
cwtl
mov
das
inc
shll
sbb
push
or
cmp
xchg
out
cltd
lret
pop
rorb
ja
or
les
call
add
andb
fistps
outsb
lahf
loop
sbb
int
or
in
adc
cmc
repz
ja
sti
mov
push
js
leave
pop
push
aas
push
pushf
out
jge
mov
mov
or
jmp
jl
inc
stc
cmp
sub
xchg
dec
pop
xchg
xor
and
adc
and
mov
sahf
arpl
ja
out
or
aas
xor
inc
fwait
leave
inc
stos
test
aad
dec
jg
push
les
js
dec
arpl
je
cmp
popa
inc
mov
ret
and
cltd
cld
into
jae
inc
push
in
dec
leave
call
les
fcomps
pop
push
cmp
mov
faddp
dec
insl
mov
xchg
in
mov
stos
imul
iret
lret
jmp
lea
fnstenv
dec
test
jecxz
xchg
mov
lods
jb
test
pushf
inc
js
dec
cmc
mov
mov
xor
mov
outsl
cmp
xor
sbb
mov
popa
xchg
xchg
pop
mov
xchg
mov
fiaddl
ja
fcom
leave
sbb
mov
xchg
out
sti
xor
inc
loope
mov
xchg
arpl
ds
jno
inc
dec
push
leave
out
sub
sti
mov
jo
data16
inc
dec
std
test
or
jo
outsb
xor
inc
cs
cmp
adc
test
jae
xchg
dec
inc
lahf
push
push
enter
jmp
repnz
das
sbb
test
ds
xchg
test
xor
jge
loop
das
incl
enter
lds
ds
fwait
in
mov
sbb
dec
mov
mov
lods
in
scas
fcoms
or
aam
mov
sbb
push
mov
dec
lock
loope
mov
pusha
jb
out
rcrb
je
adc
aam
lods
jb
and
andb
inc
and
xor
mov
mov
adc
sub
movsl
or
in
inc
mov
loopne
ds
lock
mov
xor
shlb
xchg
test
cld
xchg
xlat
pop
int3
cmpsb
mov
inc
jne
inc
sub
shll
cld
xchg
lahf
test
sub
push
rcrl
dec
sub
icebp
addr16
dec
adc
mov
inc
dec
loopne
and
aam
push
cmp
outsl
or
xor
mov
sahf
mov
sub
sbb
mov
outsl
sbb
mov
leave
in
cmp
stc
dec
jns
dec
lret
leave
add
shll
cmp
aas
xlat
adc
cmpsl
outsb
inc
test
repnz
xchg
mov
pop
jns
fistl
clts
vpshab
sahf
jmp
test
mov
inc
xor
sbb
jmp
sbb
push
mov
inc
fildll
or
imul
inc
dec
dec
ljmp
pop
dec
inc
or
add
pop
cmp
out
xchg
and
mov
and
pop
testb
or
neg
jno
cli
orl
lock
cmp
ja
mov
jmp
mov
mov
xor
xor
add
add
imul
mov
mov
sub
cmp
mov
jbe
jmp
xchg
dec
inc
inc
inc
push
xchg
dec
fdivs
adc
pop
mov
jo
lahf
jge
jo
jl
xlat
adc
push
arpl
pop
hlt
xchg
rcll
push
fsubp
jne
fs
lret
mov
cmp
faddl
push
jmp
mov
add
inc
jp
das
mov
push
aam
mov
jnp
sub
test
imul
cltd
das
mov
lea
loope
inc
mov
and
cs
rorl
and
rcrb
pop
std
pop
push
push
jo
push
stc
dec
dec
jmp
iret
xchg
sahf
jo
outsl
add
std
add
fmuls
xor
sbb
jns
js
in
clc
daa
add
xor
pop
jle
pop
cmp
adc
jo
in
rolb
es
scas
scas
xor
push
mov
adc
scas
std
aam
mov
pop
out
dec
repnz
icebp
sbb
add
aas
ret
cmp
or
xchg
adc
lret
mov
idiv
fnsave
movsl
push
or
sub
adc
fimull
pop
or
push
pop
out
cmp
fs
xchg
xchg
cmp
rcl
push
jo
xor
push
popa
push
movd
ja
push
ja
push
push
sub
mov
mov
fdivl
xchg
sbb
shrb
es
in
and
jmp
jecxz
xor
push
clc
ss
les
leave
in
lods
dec
outsb
outsb
push
shlb
int3
loopne
in
repz
cmp
push
mov
or
mov
push
jnp
pop
insl
fcom
cld
and
jg
xchg
fmull
es
dec
push
sti
jb
cli
orb
sub
mov
lods
test
outsl
int
add
mov
add
push
aas
push
and
inc
jl
cli
test
icebp
and
pop
adc
jg
push
es
lcall
lret
fcmovu
or
fldcw
rcrl
jo
call
cmp
add
clc
adc
sub
fidivrs
out
and
ret
mov
adc
jg
popf
insl
cmp
inc
cmpl
ret
pop
and
fisubs
jg
adc
pop
scas
cmp
insl
outsl
jecxz
lcall
xorl
lods
into
loopne
std
fisubs
lahf
in
and
push
xor
sbb
outsl
add
enter
mov
and
mov
mov
inc
insl
jns
inc
inc
mov
pop
dec
mov
popa
jp
aaa
je
push
xchg
clc
mov
insb
icebp
popa
mov
or
fld
out
icebp
sbb
or
cmp
enter
mov
xor
out
pusha
shll
push
aas
pop
out
xor
add
les
push
add
int3
jb
sar
int
in
jae
fstps
int3
iret
or
cltd
arpl
adc
enter
lock
mov
or
rorb
add
cmp
shl
cmp
stc
xchg
and
lods
es
mov
outsb
das
pop
sahf
aam
aas
xor
sarb
adc
mov
jmp
mov
add
pop
data16
cmpsb
outsb
lahf
aam
in
fmuls
dec
mov
daa
int
adc
cld
xor
xor
add
add
imul
mov
mov
mov
mov
add
movl
mov
movl
movl
mov
xor
add
jmp
mov
jmp
lcall
out
mov
push
js
mov
lahf
jge
jo
xor
lods
jo
cmpsb
enter
sub
mov
ds
mov
cmpsl
ds
xchg
mov
pop
insl
push
sub
cs
movsl
scas
or
fcomp
jg
cvtps2pi
fdivl
data16
orl
dec
add
xlat
inc
pop
sub
lret
xchg
lods
nop
fidivl
xchg
add
imul
test
aad
leave
les
movsb
push
cmc
sbb
inc
dec
lods
ret
popa
ds
into
or
xor
fdivrl
lds
and
pop
ret
push
fnsave
popa
rclb
push
pop
out
xchg
ds
adc
mov
lcall
fistps
xchg
icebp
and
mov
idivl
sbb
cmp
cmp
lea
fbld
mov
sti
adc
fidivl
inc
push
int
and
pop
inc
mov
mov
mov
sub
xchg
jno,pt
mov
and
rolb
add
and
add
jne
out
dec
or
fs
hlt
cmp
mov
jne
mov
fdivs
dec
es
push
scas
mov
es
test
sti
hlt
pop
add
add
mov
add
cmp
pop
jae
cmp
mov
subb
jp
daa
mov
popf
call
jle
cmp
inc
out
pop
je
clc
pop
mov
sbb
insl
clc
repz
pop
lret
add
sti
pusha
or
fs
or
dec
sbb
push
mov
fcmovbe
mov
mov
in
push
adc
or
and
out
mov
inc
push
sbb
and
shlb
outsb
js
jl
ds
mov
rcrb
jb
push
xchg
out
es
enter
xchg
mov
aaa
aam
mov
add
mov
dec
push
clc
mov
add
scas
pop
fsubrl
mov
shlb
fnsave
mov
lret
mov
movsb
inc
cmp
push
pop
stc
add
push
add
in
xor
loopne
cmp
aad
mov
dec
xchg
xor
dec
adc
stc
xchg
inc
push
movsl
mov
js
sbb
mov
pop
mov
sbb
jle
out
in
adc
nop
js
cmp
mov
test
pop
mov
sbb
pushf
lea
movsb
outsl
ret
mov
test
subb
cmp
dec
push
xor
mov
cmp
dec
xor
mov
pusha
jle
data16
or
jl
mov
pop
add
sti
mov
push
push
loop
subb
test
jmp
ror
or
aad
aam
add
xchg
dec
sub
bound
lret
xor
sub
enter
in
push
enter
scas
popf
lret
or
xchg
mov
push
frstor
push
mov
push
inc
xor
pop
mov
ret
lock
int3
ljmp
xor
sub
sbb
xchg
movsb
arpl
add
pop
dec
cmp
xor
mov
test
push
pop
in
les
mov
jmp
pop
sarl
and
xor
rolb
push
in
mov
mov
mov
mov
xor
add
mov
mov
mov
mov
mov
xor
add
mov
mov
mov
jmp
xchg
dec
push
adc
push
xchg
dec
lock
pop
fs
pop
dec
mov
lahf
jge
jo
mov
fsts
dec
xchg
cmp
mov
test
ret
div
cltd
xchg
inc
jbe
fs
mov
loopne
cmpsl
jle
xlat
jb
mov
inc
dec
mov
mov
push
mov
and
mov
and
mov
mov
fistpl
stc
test
mov
sub
xlat
lea
hlt
pop
int3
stos
out
jns
dec
lret
adc
lahf
notb
leave
rcrl
inc
push
jge
shlb
and
push
sub
mov
cwtl
jg
sbb
mov
mov
out
aad
mov
xchg
dec
cmp
or
jo
fsubl
lock
cltd
arpl
jp
xchg
inc
pop
and
push
mul
fwait
test
inc
stc
testb
pushf
fiaddl
das
into
ret
jnp
cmp
addr16
add
fisubl
loopne
push
hlt
inc
pop
inc
pop
push
or
flds
seta
add
clc
mov
pop
std
adc
mov
pop
pop
adc
jbe
mov
outsb
in
cltd
ds
imul
int
mov
out
or
arpl
mov
hlt
dec
lret
cmp
push
adc
inc
push
sbb
outsb
sbb
jnp
or
inc
lds
inc
mov
mov
mov
sub
jnp
sub
add
sbb
imul
or
lock
hlt
fsubp
out
xor
push
imul
ret
add
adc
adc
or
enter
xlat
daa
push
jmp
adc
or
movsl
push
inc
jp
rep
push
imul
sub
dec
push
xchg
test
mov
xor
rorl
push
fbld
fdivr
fists
clc
push
mov
sub
or
imul
and
clc
push
sub
in
or
test
mov
jns
or
stos
cmp
orb
lea
movsl
sbb
clc
sub
add
dec
dec
push
mov
stos
mov
or
subl
mov
decb
movsl
inc
sbb
push
in
add
scas
in
pop
mov
ret
push
cmpsl
inc
jmp
ror
mov
pop
xchg
xor
or
xchg
int
jo
in
test
dec
pushf
fdivl
and
fsubs
cmp
cmp
dec
test
cmpsl
in
inc
hlt
xchg
call
repnz
mov
outsb
in
mov
stos
daa
or
cmp
pushf
pop
pop
outsb
clc
scas
call
aaa
dec
mov
sub
cltd
push
jecxz
ret
pop
fwait
sub
push
fcmovnu
sbbl
adc
stos
popf
jecxz
add
cmc
jmp
in
ret
ss
cmp
bound
into
shrb
jo
xlat
aad
jp
pop
xchg
and
arpl
jmp
add
jne
sub
int3
jns
bnd
cmp
scas
mov
jno
rorl
adc
fsubs
in
mov
add
mov
mov
loopne
fnop
push
lock
jge
sub
mov
movsl
add
lds
out
and
shrl
cmp
stos
adc
sub
add
mov
mov
mov
mov
xor
jmp
sbb
pop
pop
pop
pop
sbb
adc
jo
add
xchg
jo
lahf
jge
jo
repz
adc
loop
mov
icebp
sbb
aam
movl
in
mov
xchg
stos
or
inc
or
xlat
mov
test
imull
pop
xchg
fdivrl
std
das
leave
dec
pop
mov
xor
insb
mov
sbb
je
repnz
sahf
out
mov
bound
out
lcall
mov
mul
insb
mov
cli
out
jno
sarb
or
push
orb
adc
jno
push
dec
dec
push
lret
outsb
sbb
xor
mov
push
adc
pop
fstps
jns
js
cli
lds
repz
rorb
sub
and
out
subl
jle
ss
int3
cmp
inc
nop
xlat
fstps
sahf
mov
mov
push
aad
jne
or
cmp
dec
test
loop
xchg
or
addr16
adc
test
inc
dec
cmp
ja
jmp
stos
decl
aam
aam
jmp
dec
sub
xor
icebp
adcb
addr16
leave
adc
xor
fiadds
push
xchg
sub
negl
jecxz
das
iret
int
add
aad
cmp
mov
xchg
arpl
aaa
jbe
int
scas
repnz
push
mov
fsubp
lds
and
pop
jl
pop
ja
lods
push
sbb
shrl
ja
bound
push
inc
daa
pop
push
jno
daa
lcall
xor
pop
scas
and
cmc
adc
fucomp
sub
mov
and
outsl
cmp
mov
inc
scas
shrl
repnz
xchg
and
mov
cmp
adc
jne
mov
test
sub
lea
adc
xchg
mov
and
xchg
adc
icebp
dec
cmpsl
push
aas
in
pop
adc
int3
push
jg
xchg
popf
and
aam
out
pop
divb
lods
jae,pt
out
lret
sbb
les
push
inc
push
jge
xchg
mov
sbb
or
je
je
mov
mov
mov
mov
push
jbe
mov
lea
push
scas
inc
xor
daa
test
adcb
dec
je
fiadds
dec
cmc
xor
xor
inc
push
rcl
mov
xchg
mov
cmp
daa
test
ret
cmp
jge
repnz
repz
mov
fucom
filds
adc
and
xchg
xchg
push
in
jno
xchg
imul
push
bound
sahf
mov
jo
push
aaa
and
mov
and
clc
mov
lcall
hlt
bound
pop
arpl
rorl
adc
test
jl
inc
pop
es
xorl
push
scas
scas
stos
fidivl
push
mov
rolb
push
test
ficompl
lcall
pop
mov
inc
pop
jl
push
and
and
pop
movsl
push
jnp
lahf
and
aad
out
scas
insl
or
cltd
adc
or
cmpsb
xchg
jle
cmc
test
mov
add
inc
out
scas
sub
dec
mov
je
mov
mov
xchg
out
dec
cs
add
add
imul
add
mov
mov
mov
xor
add
imul
mov
xor
sub
mov
mov
xor
add
imul
mov
xor
sub
lea
cmp
jmp
mov
popa
jbe
xchg
sbbl
jo
lahf
jge
jo
xor
pop
out
pop
mov
mov
mov
ljmp
mov
mov
out
shrb
out
insl
push
dec
imul
js
leave
aaa
cmp
cmp
mov
pop
in
pop
enter
and
add
stos
jecxz
rcrl
dec
sti
jmp
icebp
movsl
es
push
sarb
leave
or
dec
outsl
jb
or
jns
sti
xchg
imul
cmc
dec
jle
or
leave
and
bound
mov
pusha
push
loop
bound
xlat
iret
fs
mov
stc
jae
add
xor
cmp
fildl
mov
sbb
adc
xlat
pushf
fildl
and
and
xchg
or
pop
in
ja
push
mov
cmc
int
aaa
daa
or
push
xor
mov
ss
xor
pusha
ret
cmp
jg
rep
pop
push
ret
js
sub
xor
fisubrl
mov
ficoms
add
adc
call
lret
mov
in
outsl
aad
push
jg
fistps
jnp
ret
cmp
push
int
dec
push
cmp
jmp
jo
mov
lahf
scas
mov
mov
rclb
mov
fcmovnu
mov
cmp
sarb
cs
sub
fstps
xchg
sub
and
bswap
clc
mov
lock
mov
hlt
adc
outsb
lds
xchg
sub
faddp
js
mov
decl
xor
pop
stc
push
push
rcr
xchg
bound
sub
dec
scas
add
stos
gs
sub
sub
jae
pop
fiadds
pop
or
lods
push
jnp
xor
push
andb
sub
stc
sub
adc
sbb
addr16
clc
inc
cld
jg
push
sarl
imul
add
mov
jl
aad
mov
or
into
inc
xchg
or
or
push
inc
adc
xchg
divb
inc
and
inc
pop
mov
in
test
or
xor
stc
aad
push
aam
jb
cmp
movsl
cmp
push
sub
lahf
mov
aaa
and
pusha
arpl
push
sahf
ret
test
notl
hlt
imul
push
dec
lea
cli
xchg
push
psrad
lods
sbb
xor
jmp
pushf
call
adcb
push
xchg
cmp
pop
xorl
cmp
pop
xor
insl
lret
pop
mov
test
jnp
xor
sahf
jb
cmp
iret
iret
loop
jecxz
add
xor
into
daa
fs
popa
add
push
jbe
shlb
sahf
icebp
imul
fimull
je
scas
jl
cmp
cli
or
jae
stc
mov
jno
dec
cs
or
out
sub
or
cld
xchg
jg
das
punpckhbw
ret
mov
int
mov
sub
inc
out
aaa
std
clc
ret
inc
pop
and
out
sbb
cmc
mov
sub
mov
or
jp
jo
jo
test
jg
add
sub
notl
andl
or
jl
xchg
decl
fdivl
rolb
rorl
scas
xlat
mov
xor
add
jmp
xor
out
icebp
xor
cmp
lods
les
popf
jo
lahf
jge
jo
cltd
mov
decl
loop
sbb
cmp
stos
popa
jb
out
add
orb
and
fisubrs
cmpsl
shlb
sbb
fisubrs
xchg
dec
inc
or
loop
dec
push
into
push
cmpsb
or
or
dec
fstl
repnz
inc
push
pusha
inc
adc
dec
fwait
popa
ret
fldt
ret
mov
and
repz
mov
sub
scas
cmp
sti
sbb
shll
test
adc
inc
cltd
sub
adc
and
cs
sbb
call
popf
test
or
fdivrl
sahf
lahf
filds
out
pop
pusha
divps
cmp
push
sahf
lcall
lret
fwait
sub
jne
ja
mov
aam
fnstenv
inc
lcall
cmp
mov
push
xchg
divl
and
cmp
dec
sub
dec
jg
dec
jns
clc
ja
push
pop
jecxz
lock
addl
loope
sbbl
xchg
clc
decb
jne
test
hlt
lods
dec
sbb
mov
xchg
sbb
gs
mov
out
cmc
pop
inc
add
testl
out
push
and
inc
inc
into
mov
in
icebp
rcll
shll
clc
sub
pop
add
and
or
adc
aaa
arpl
insl
pop
push
xchg
dec
add
mov
bnd
int3
popa
and
mov
jge
jle
push
pop
and
jg
sarb
xchg
repnz
rolb
push
es
inc
jge
push
cmpsl
cmovs
out
scas
arpl
push
mov
std
adc
xor
dec
aad
fwait
ja
das
or
or
pusha
sub
daa
fucomip
jae
pop
in
and
jg
test
and
mov
fisubl
sahf
cmpsl
aaa
xchg
or
sarb
xor
cli
sub
xchg
iret
cli
and
out
daa
cmp
fsubs
and
add
mov
loopne
sub
xchg
xorl
cmp
mov
jecxz
movsl
sbbl
push
push
cmp
inc
lret
arpl
mov
add
pop
test
mov
es
adc
cltd
mov
iret
jle
mov
adc
mov
or
xorl
inc
cltd
out
es
mov
push
lret
test
daa
popa
xor
subb
xor
cmp
push
std
sbb
xchg
ds
push
pop
in
jns
pusha
lock
push
jns
or
lcall
mov
pop
xchg
jl
stc
mov
jl
pop
ljmp
add
popa
xchg
and
cmp
test
loope
cltd
outsb
sti
mov
test
xor
rcr
cwtl
xor
sbb
xlat
pop
push
sbb
pop
enter
xchg
lods
pushf
fbld
int3
mov
pop
push
scas
or
std
scas
das
pop
data16
cmp
lea
mov
iret
lods
fstps
sub
out
push
or
movsl
outsl
dec
cltd
test
or
dec
fucomip
dec
sub
mov
pop
daa
inc
mov
mov
lea
mov
mov
xor
mov
sub
jmp
out
inc
push
jno
ljmp
sub
jmp
lahf
jge
jo
es
sub
push
cmp
cmp
loopne
xchg
mov
add
decl
mov
jmp
lahf
mov
in
insl
es
cs
xchg
xor
into
leave
push
test
dec
mov
inc
mov
les
or
mov
push
adc
test
scas
jno
inc
out
jmpw
insl
xor
testl
imul
mov
fcoms
lock
xchg
push
repz
cmpsl
mov
mov
lahf
sarb
mov
pop
pop
out
sarl
mov
leave
stos
sbb
daa
mov
stos
push
mov
rorb
add
pop
mov
sbbl
push
push
xchg
and
jo
push
jns
dec
xchg
pop
mov
pop
inc
cmp
xchg
repnz
or
mov
push
and
or
imul
mov
add
popf
imul
lret
mov
cmp
outsb
fstpl
jns
mov
shrl
fists
xchg
sarb
jg
insl
mov
jb
cmc
adcb
cmp
test
movl
sti
push
sub
cmpsl
jno
sbb
push
add
push
ficoml
cmc
pop
sbb
addb
loop
dec
into
hlt
mov
cmp
jg
inc
mov
adc
subl
or
jnp
or
adc
cmp
add
mov
xor
daa
insl
add
adc
mov
adc
fmulp
pop
sub
jmp
pop
je
test
mov
inc
pop
xchg
stos
cmp
jo
das
push
stc
mov
push
js
fs
leave
xor
jle
jo
mov
sub
adcl
xor
mov
mov
xor
jge
insb
gs
jmp
pop
jmp
cmp
xchg
fwait
mov
push
and
mov
mov
xchg
loopne
jg
mov
pop
jle
or
data16
scas
jecxz
loopne
dec
roll
in
xchg
adcl
cmpsb
mov
push
imul
jae
roll
ljmp
mov
test
lcall
adc
push
addb
sub
loopne
inc
ds
ja
mov
hlt
insl
cmp
add
lea
pop
add
stc
sbb
pop
ljmp
xor
jle
xchg
and
jo
jl
mov
aas
fs
fndisi(8087
sbb
sbb
repnz
pop
pop
subl
inc
jne
xlat
mov
nop
mov
cld
outsl
shl
sbb
mov
data16
inc
lods
inc
dec
dec
rol
lds
push
rcll
les
outsb
cmc
push
loopne
ljmp
out
sbb
shll
repz
insb
cltd
pop
and
mov
push
push
insl
mov
sbb
mov
jp
jle
stos
loopne
fidivrl
xchg
push
ret
dec
dec
lods
leave
jmp
testl
aad
in
push
mov
cmp
sbb
push
push
xor
arpl
lock
pop
pushl
jmp
orl
out
jb
lret
arpl
inc
cmpsb
cmc
jle
push
lret
sbbl
and
subb
lret
movsb
jecxz
lret
fnstsw
int
jge
mov
mov
xor
add
imul
cmp
jbe
pop
pop
leave
ret
push
mov
sub
orl
push
sbbl
call
andl
test
jne
xor
movl
jmp
adcl
push
call
sbbl
test
movl
je
call
cltd
movl
cmp
jne
movl
cmp
jne
push
push
adcl
push
push
push
push
push
xorl
push
orl
call
movl
jmp
push
call
test
je
sbbl
push
andl
call
movl
jmp
push
mov
add
mov
andl
mov
inc
mov
cmpl
jne
push
push
push
pushl
push
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
addl
movl
lea
adc
mov
adcl
lea
movl
cmpl
je
cmpl
jne
pushl
pushl
call
xor
add
dec
mov
jmp
movl
cmpl
je
cmpl
jne
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
movl
cmpl
je
cmpl
jne
push
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
movl
cmpl
je
cmpl
jne
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
or
mov
or
mov
or
mov
mov
push
mov
subl
xor
push
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
push
push
call
jmp
mov
add
mov
mov
mov
movl
cmp
mov
movl
je
movl
cmpl
je
cmpl
jne
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
sbbl
xor
andl
add
imul
mov
movl
jmp
sbb
xor
add
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
call
cmpl
jne
mov
inc
mov
jmp
mov
mov
or
xor
sub
add
mov
mov
mov
xor
add
movl
cmp
jne
subl
pushl
andl
pushl
adcl
call
mov
sbb
mov
andl
mov
inc
mov
cmpl
jne
push
push
call
cmpl
jb
mov
mov
or
mov
movl
cmpl
je
cmpl
jne
pushl
pushl
call
mov
dec
mov
jmp
mov
mov
mov
mov
mov
mov
mov
movl
mov
mov
mov
xor
xor
add
mov
xor
xor
add
lea
cmp
ja
mov
xor
lea
push
mov
xor
lea
push
mov
pushl
call
mov
xor
lea
mov
mov
xor
xor
add
mov
xor
lea
cmp
jbe
mov
mov
mov
mov
mov
mov
mov
sub
xor
mov
mov
cmp
je
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
pushl
mov
pushl
add
mov
mov
pushl
call
mov
mov
mov
jmp
mov
mov
xor
add
cmp
jne
mov
xor
add
mov
mov
xor
add
mov
mov
mov
mov
mov
mov
xor
add
mov
mov
mov
mov
mov
mov
mov
movl
mov
xor
add
mov
mov
mov
mov
mov
mov
push
pop
sub
add
movl
mov
mov
mov
mov
mov
mov
mov
xor
add
mov
lea
mov
mov
xor
add
mov
lea
push
mov
xor
add
push
mov
push
pushl
call
xor
mov
sub
push
mov
add
push
call
inc
cmp
jb
mov
call
lea
mov
mov
mov
pushl
lea
push
call
mov
push
add
push
lea
push
call
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
mov
adc
mov
mov
xorl
push
push
mov
xor
not
push
mov
add
sbb
jmp
sub
gs
mov
fstps
push
push
jg
jo
mov
dec
xchg
lds
push
jle
hlt
push
fcomi
mov
push
or
cwtl
push
mov
popf
ror
cmpsb
clc
notl
cmp
or
je
xor
addb
push
into
out
addb
add
xor
dec
jmp
pop
clc
push
test
cvtps2pd
out
cltd
imull
std
add
insb
imul
lahf
pop
cmp
xchg
int3
inc
inc
arpl
outsl
in
inc
imul
pop
pop
push
pop
aas
xor
jbe
ljmp
mov
stos
dec
xchg
adc
inc
and
ja
andb
lahf
insb
stos
xorb
adc
cmp
lahf
fsubs
inc
and
mov
packssdw
test
push
mov
mov
bound
jb
scas
add
xchg
pop
cmpsb
scas
dec
mov
mov
adc
stc
mov
push
xchg
mov
cld
jno
dec
jecxz
ds
js
psrlw
loopne
das
jb
arpl
imulb
and
mov
sub
mov
arpl
out
add
fwait
jno
pop
adc
or
fimuls
mov
mov
out
ljmp
test
adc
add
jge
inc
add
add
add
add
or
cmpl
jne
pushl
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
push
call
cmpl
jne
mov
inc
mov
jmp
mov
mov
sub
imul
mov
sub
mov
and
mov
sbb
xor
add
mov
jmp
icebp
ja
pop
inc
scas
icebp
jno
push
inc
movsl
popa
cwtl
fnsave
ret
jg
jo
insl
lea
adcl
jbe
ffree
daa
dec
aas
mov
dec
addr16
ljmp
loop
shlb
ficompl
mov
and
je
test
jl
jp
jb
insb
dec
into
pop
lock
enter
ss
jge
xor
mov
sti
cmpb
or
cwtl
cltd
aaa
out
jmp
jle
in
dec
pop
pop
push
out
rcrl
shrb
insb
or
cmpsl
outsb
test
or
and
fcmovb
movsl
and
fdivl
clc
cmp
jge
xlat
mov
inc
add
test
scas
cltd
in
and
adc
mov
cmp
jmp
inc
inc
ret
data16
scas
adc
cs
leave
mov
adc
fildl
or
jns
stc
fs
jmp
dec
inc
cmp
ss
and
adc
push
dec
and
pop
jbe
mov
mov
enter
cmp
mov
cltd
jae
je
sti
mov
into
mov
jbe
ds
add
cmpps
add
insb
subl
mov
pop
insb
or
push
aaa
hlt
ljmp
clc
and
lea
mov
jmp
rorl
sbb
ss
mov
jo
int3
insl
icebp
data16
es
xor
das
jb
jmp
jmp
cltd
or
push
js
and
pusha
push
loop
jecxz
adc
jecxz
mov
xchg
outsl
out
mov
test
orl
lret
ljmp
cmp
fistps
pop
jns
and
pop
jns
mov
fwait
sub
lods
mov
add
bound
ds
adc
scas
push
push
mov
dec
jmp
or
cli
jmp
push
dec
pop
repz
lods
enter
sahf
test
push
orb
jecxz
movsl
push
leave
test
push
adc
cmp
pop
fisttps
jbe
xchg
push
dec
fists
adc
loopne
and
std
mov
sub
sbb
movsl
repnz
lcall
jo
xchg
cmp
and
sbb
loope
movsb
int3
mov
push
dec
ret
jecxz
xchg
into
xor
out
mov
push
shrl
bound
cltd
pop
aad
pop
sub
cli
mov
sti
pop
adcl
arpl
xchg
fsts
mov
ljmp
push
addr16
sub
out
pusha
imul
pushf
je
jae
ljmp
inc
call
inc
add
add
add
or
sbb
inc
mov
cmpl
jae
cmpl
jne
push
call
jmp
neg
mov
add
xor
add
sub
mov
mov
adc
mov
mov
adcl
jmp
cmp
in
fcomi
jecxz
icebp
xor
iret
cmpsb
xchg
jo
ret
jg
jo
mov
cmpsb
xor
ret
into
cmp
xor
das
daa
push
xchg
cmp
cltd
xor
mulb
inc
lock
cwtl
adc
lahf
mov
addb
pop
mov
jge
xor
in
xchg
push
fistpl
cmc
fnstcw
xchg
aaa
jb
sbb
movsb
xlat
sbb
xchg
shlb
mov
lods
or
jne
out
lret
push
add
mov
test
sarb
icebp
mov
jae
addr16
pop
in
ficomps
fcmovbe
jbe
lea
rcrl
push
xor
mov
cmp
push
cvttps2pi
bnd
les
repz
sbb
lahf
pushf
cld
fs
mov
mov
xor
mov
cmp
cmc
cmp
fsubrp
icebp
inc
mov
or
cli
aad
add
roll
push
and
xor
mov
mov
cld
and
mov
inc
mov
mov
inc
or
popf
add
cs
xlat
loopne
pusha
cmpsb
enter
jbe
push
jns
push
cmp
sbb
mov
mov
xorl
adcl
mov
xorl
movzwl
add
neg
movl
sbb
mov
mov
sbb
mov
xorl
xor
andl
add
cmp
jne
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
cmpl
jne
xor
add
inc
mov
jmp
movzbl
adc
mov
xorl
mov
andl
xor
notl
add
movl
cmp
movl
jmp
fistpl
shlb
jbe
or
jo
jg
jo
fwait
inc
mov
mov
cltd
pop
mov
mov
jmp
sbb
cmp
dec
popa
ffreep
lods
xor
push
rcrl
adcl
mov
jge
mov
lea
ret
add
dec
sub
fisubs
outsl
xor
sbb
sub
jae
sub
fmuls
jge
mov
mov
cmp
pusha
sub
jmp
xor
jno
sub
mov
push
mov
rol
hlt
repz
pop
inc
mov
fstps
ds
sub
push
pop
sub
push
cmpl
jo
push
and
add
and
jl
xor
xor
lcall
pop
sbb
enter
or
sti
test
push
inc
inc
ja
dec
mov
js
cmc
aas
mov
push
add
and
dec
std
test
cmp
push
out
inc
mov
fidivl
pusha
scas
lcall
int
ljmp
push
sahf
jle
pusha
arpl
shlb
or
xchg
dec
imull
in
jae
fisttpl
dec
in
test
popl
or
jne
add
mov
sbb
mov
adc
xor
add
mov
sbb
mov
adc
mov
movl
cmpl
je
cmpl
jne
push
push
push
pushl
push
call
cmpl
jne
xor
or
dec
mov
mov
dec
mov
jmp
xor
mov
sub
add
mov
mov
mov
movzwl
add
mov
mov
mov
xor
lea
xor
sub
mov
movzwl
jmp
or
shrb
mov
inc
pop
mov
cmp
jo
jg
jo
scas
or
shrd
sub
imul
rolb
cmp
std
idivb
pop
loopne
out
add
sbb
jge
pop
lahf
lods
and
insl
call
stc
scas
hlt
mov
or
mov
jge
aas
insb
in
sbb
vfrczps
add
aad
in
out
fwait
push
nop
popf
into
cli
dec
mov
push
mov
ss
pop
data16
or
inc
int3
lret
inc
pop
subl
movsl
inc
imul
aam
push
cmp
repz
fiaddl
fsts
fildl
fisubrl
xchg
daa
mov
loopne
mov
cmpsb
cmp
movsl
mov
xchg
enter
sub
xor
loop
ja
inc
cld
mov
lods
mov
dec
jo
jge
push
inc
ja
arpl
sti
mov
push
push
adc
popf
adc
out
inc
mov
adc
xchg
cmp
cmpsl
flds
xchg
jnp
cmpsb
or
stos
popf
fildll
mov
xchg
xchg
xor
xchg
ljmp
cmc
jge
sbb
jle
lret
aas
jmp
jle
cmp
mov
lcall
inc
jbe
in
rorl
cld
jmp
movntps
push
rep
mov
push
jle
or
ret
jg
jo
popl
jne
movsl
lods
rorb
xlat
xchg
pusha
loope
fsubr
fwait
loop
pop
loopne
mov
push
xor
push
nop
or
jo
sbb
jp
jl
mov
out
sbb
loopne
jge
sbb
inc
in
lret
clc
nop
shll
pop
pop
aad
clc
add
std
cmp
add
add
bound
stos
mov
pop
xor
and
inc
jmp
jbe
lret
push
jle
or
xchg
inc
jg
rcl
or
sub
add
sbb
popa
mov
insb
cmpl
push
or
pop
stos
mov
clc
stc
es
aam
stc
aaa
push
push
fidivrl
shrb
inc
mov
push
test
mov
or
jmp
out
dec
push
rolb
gs
push
cmp
out
xor
xlat
lods
and
pop
movb
mov
mov
sbb
mov
fs
sbb
repnz
int3
out
aas
push
cmp
push
mov
push
xchg
data16
sub
mov
sbb
mov
jbe
jg
xor
sub
sub
mov
jmp
jmp
int3
push
icebp
xchg
icebp
je
in
pop
mov
adc
jo
ret
jg
jo
mov
scas
push
xchg
and
jo
xlat
jp
dec
cmp
lcall
arpl
icebp
add
stos
cmpsb
test
mov
mulb
leave
lods
cltd
in
push
mov
sar
jecxz
loop
mov
cld
or
xor
inc
movsl
call
loopne
inc
cld
lret
jnp
push
jno
ss
mov
adc
add
imul
mov
and
daa
sub
sub
shll
sahf
adc
ja
out
cmp
lret
mov
jge
jmp
pusha
dec
out
pop
cs
sahf
xor
mov
int3
je
gs
cmpsb
mov
adc
sbb
iret
pop
dec
cmp
das
pop
insb
call
xchg
stos
mov
add
addr16
mov
xor
push
cmpb
cltd
aad
dec
mov
sbb
xor
mov
rol
imul
insl
in
and
push
sahf
add
std
cli
dec
in
outsl
inc
jl
int3
testb
cmpsb
scas
push
mov
mov
mov
add
inc
ljmp
dec
std
jmp
xor
lea
mov
mov
cmp
jmp
mov
enter
lea
leave
inc
inc
lds
jo
ret
jg
jo
mov
iret
test
or
fcoms
ficoms
into
push
icebp
inc
dec
xchg
lds
push
pop
xchg
adc
mov
mov
jmp
pop
std
and
mov
jge
in
mov
cli
fwait
mov
lgdtl
pop
push
sbb
push
lods
hlt
bound
inc
xor
push
push
mov
sub
imul
pop
push
test
adc
sbbl
cld
ss
arpl
add
xchg
xchg
mov
inc
rcl
cmpsb
push
out
imul
out
xor
fcomp
jl
mov
add
mov
jbe
jmp
movsb
leave
loop
adc
aaa
std
mov
loop
inc
xchg
mov
jge
and
sti
std
dec
pop
mov
out
call
cmp
jo
mov
and
aad
nop
cmp
scas
adc
shrl
cltd
jnp
cmp
jae
mov
aaa
jl
outsb
jp
div
mov
arpl
das
and
hlt
in
ljmp
subl
inc
xor
pop
mov
sub
je
mov
jmp
lods
ret
jno
insl
popa
fdivrs
xchg
test
jge
cmc
mov
jg
jo
mov
lret
or
and
roll
imul
push
mov
dec
mov
inc
mov
imul
jb
inc
push
int
and
add
rorb
sub
mov
sti
xor
scas
push
addl
in
lsl
sub
mov
sbb
call
mov
inc
test
call
movsb
and
xor
cld
ss
int
shr
orl
and
or
mov
mov
xchg
add
loope
sarb
loop
xorl
imul
pop
sub
adc
and
js
sbb
movsl
loop
push
inc
push
loopne
cmp
cmp
push
pusha
xchg
adcb
mov
jo
cld
pop
and
nop
das
sub
fstp
mov
or
rcll
outsl
jo
push
popf
les
jle
push
and
mov
mov
loop
out
loop
lods
and
and
xlat
rcl
sub
adc
cli
dec
mov
mov
adc
inc
push
pusha
jno
mov
sti
dec
push
jne
and
mov
xchg
movl
jmp
mov
mov
xor
add
cmp
je
mov
jmp
dec
int3
cmp
mov
add
rclb
inc
xchg
daa
jbe
jo
ret
jg
jo
sbb
xor
inc
or
call
outsb
mov
fiaddl
addr16
jecxz
je
out
xchg
out
aas
or
pop
dec
push
sbb
xchg
sarb
and
out
mov
fsubrs
pusha
cmp
cli
or
jl
mov
mov
into
negl
iret
mov
es
pop
lret
in
out
lods
movsl
adc
cs
call
enter
mov
stos
aas
sarl
ret
inc
or
cltd
sbb
fcom
cmp
xlat
or
xchg
stos
xchg
dec
clc
jbe
mov
shrb
sbb
test
test
sub
xchg
push
js
insl
jne
sbb
repnz
outsb
or
ret
sub
mov
insb
mov
and
cmc
in
jne
xchg
pop
add
cmpb
lahf
push
dec
lret
mov
xlat
add
call
xchg
sbb
pop
in
sub
negl
xchg
mov
out
mov
xchg
test
clc
icebp
stos
sbb
cmpl
cs
xchg
push
jb
insl
add
fstpt
mov
jmp
inc
gs
icebp
imul
pusha
jl
cmp
jo
xor
pop
lret
push
mov
mov
insl
adc
jo
addr16
sub
in
adc
dec
in
stos
mov
cmp
dec
addb
cmpsb
mov
xlat
out
leave
test
daa
sbb
adc
aaa
add
jbe
jo
pusha
xchg
cmpsb
mov
sub
ljmp
sbb
xor
jle
inc
enter
jnp
or
add
scas
xchg
lods
les
jnp
sbb
xor
inc
das
fisubrs
aam
inc
movsl
imul
pusha
mov
and
stc
lret
into
mov
mov
mov
es
shrl
or
cltd
or
sbb
jo
js
mov
into
test
addr16
sbb
loope
pop
lock
scas
push
xchg
inc
movsb
pop
dec
mov
test
test
jecxz
cs
cltd
mov
pop
jg
out
cmp
jl
into
sbb
adc
bound
dec
aad
xor
xchg
inc
es
fisubrs
adc
pop
aas
outsl
adc
pop
gs
mov
push
mov
iret
cmpsw
and
les
pop
sbb
and
fucom
lock
mov
mov
mov
lea
add
mov
mov
mov
mov
mov
xor
add
mov
mov
mov
xor
add
cmp
je
jmp
pop
out
dec
mov
mov
testb
dec
shrl
jo
ret
jg
jo
mov
shll
insl
mov
inc
or
fsubp
sub
push
jb
pop
jg
adc
les
test
outsl
lock
ficoml
xchg
in
addr16
xchg
xchg
je
sub
ljmp
jns
adc
push
into
jle
sub
add
pop
mov
dec
rolb
push
test
pop
lds
mov
icebp
in
loopne
test
clc
add
ret
mov
fwait
push
add
dec
shlb
add
icebp
jbe
and
arpl
mov
pop
xor
addr16
fwait
loopne
mov
or
mov
mov
faddl
mov
inc
inc
and
add
aad
dec
lods
jne
inc
push
mov
dec
xchg
aam
xchg
mov
inc
dec
mov
iret
mov
je
bound
or
xchg
in
lea
or
imul
sub
and
shl
pop
fsubs
pop
imulb
fstpl
sbb
jb
arpl
repnz
nop
xchg
push
bound
sbb
mov
inc
push
adc
mov
ret
out
mov
sarb
pop
jmp
mov
add
mov
mov
mov
mov
mov
mov
add
xor
cmp
je
mov
mov
xor
add
mov
jmp
xorl
jmp
mov
mov
mov
mov
mov
mov
pushl
call
mov
cmp
je
mov
mov
pop
pop
pop
leave
ret
push
mov
jmp
ds
adc
dec
xor
mov
pop
mov
jo
jge
jo
lds
in
mov
cmp
test
inc
in
cmp
mov
mov
cmpsl
stos
ljmp
std
jg
lock
cwtl
mov
xchg
lret
insb
pop
scas
leave
jae
inc
or
sahf
add
js
xchg
cli
lods
dec
into
cmp
or
xchg
cmp
and
sar
or
dec
adc
sbb
aaa
add
and
or
xor
out
into
xchg
or
shlb
inc
pop
js
mov
in
hlt
add
adc
add
cmp
or
add
mov
pop
inc
loop
imul
jno
push
lock
out
je
mov
cmpsl
or
testb
mov
pop
lock
fcmove
jne
mov
jne
and
scas
mov
jo
cltd
push
dec
xor
lods
shl
cmpsb
dec
xchg
lea
nop
xchg
mov
or
popa
sahf
cmp
push
jns
xor
jl
mov
setnp
push
gs
mull
aas
mov
mov
sub
mov
fxch
push
push
dec
or
xchg
shlb
fdivrl
sbb
pop
dec
adc
jne
enter
jbe
xchg
push
imul
dec
cmpsb
mov
dec
sbb
cld
add
cwtl
pop
sti
outsb
leave
aad
adc
add
or
dec
pushw
jl
xchg
mov
lock
mov
nop
and
outsl
push
cmp
in
rcll
cmpsb
in
sub
add
jns
mov
mov
jae
jnp
sbb
sbbl
inc
add
jo
lods
popl
push
pop
lods
popa
adc
jge
arpl
jg
xor
gs
fwait
pop
jecxz
lods
stc
js
and
push
xchg
pop
in
xchg
jnp
repz
popl
and
out
push
dec
cmp
sbb
out
cli
leave
ss
mov
jb
fwait
mov
into
ss
test
out
repz
pushf
int3
lahf
daa
and
addr16
lds
inc
xchg
leave
add
cs
out
jge
mov
mov
xchg
xchg
bound
aaa
lods
mov
out
mov
push
cmp
push
push
sbbl
push
inc
jne
mov
sub
mov
adc
sbb
test
sub
rcr
imul
rcrl
pushf
rolb
mov
xchg
xchg
jbe
fnstenv
mov
jl
gs
sbb
in
inc
fidivrl
xchg
push
les
lcall
cmp
pusha
cmp
scas
outsb
adc
mov
out
out
cmp
cmp
jnp
rolb
mov
jae
pop
push
inc
cmp
scas
imul
jb
and
add
in
aam
add
push
jle
jp
pop
lods
les
adc
xor
push
shl
add
clc
mov
push
test
pop
jb
shrb
jbe
push
pop
ret
xchg
cmp
sbb
adc
aad
dec
jae
mov
stos
cmp
insb
and
fiaddl
sbb
ss
mov
cmp
sbb
jl
sahf
cmpsb
mov
bnd
mov
sbb
negl
jmp
mov
cli
xor
testb
psubw
mov
out
mov
push
push
mov
inc
cmp
pop
lock
daa
push
add
ljmp
mov
jmp
add
rcrl
pusha
push
jbe
sbb
shrl
loope
mov
in
sti
das
push
shll
xchg
data16
xlat
popf
mov
cmc
loop,pt
push
xchg
lret
stc
xor
addr16
ror
lock
sbb
and
std
hlt
push
jo
sbb
gs
sub
ljmp
inc
jmp
adc
loop
push
sub
pusha
scas
inc
inc
je
cmp
add
shlb
call
es
insl
div
mov
pop
push
xor
mov
adc
sub
ja
incw
inc
sub
imul
add
and
ljmp
mov
jecxz
dec
add
ret
loop
dec
mov
push
addps
mov
add
xor
xchg
push
add
push
ret
test
inc
sbb
jae
shll
mov
xchg
rol
fldt
mov
pop
ficompl
loope
shll
addr16
pop
jp
sbb
rcrb
mov
sbb
adc
ja
jne
loop
clc
mov
xchg
push
push
mov
rcrl
cwtl
jb
mov
sbb
mov
cmp
mov
xchg
lret
push
loopne
imul
stos
ret
int3
inc
push
mov
cs
subl
or
push
outsb
sub
rcll
xor
cmpsl
mov
fdivrs
pop
enter
adc
enter
push
mov
add
out
jle
sub
mov
adc
and
fwait
in
sti
outsb
mov
xchg
fcmovne
jb
lds
jmp
mov
sbb
ds
loope
enter
mov
movsb
roll
pop
pop
mov
add
pop
inc
sbb
push
popf
pop
mov
jle
dec
repz
jne
mov
xchg
mov
mov
sub
pop
ffreep
clc
sub
in
stc
int3
call
add
inc
cmp
add
mov
test
fstl
pop
insl
dec
add
xchg
int
xor
inc
mov
add
addr16
loope
jg
stos
xor
lahf
pushf
sbb
add
test
aam
cmp
xchg
icebp
out
push
stos
mov
lods
xorb
ds
mov
push
lock
inc
fwait
push
stos
or
roll
daa
jae
addr16
test
or
push
jp
lret
lret
ficoms
cmp
enter
insl
xchg
lods
in
sub
cli
push
cmc
aaa
mov
test
sahf
out
dec
sbb
nop
sub
ret
mov
and
fists
fimull
fcomps
pushf
shl
int3
sbb
addb
cmc
punpckhwd
jle
call
frstor
daa
ljmp
jmp
and
jno
push
or
push
cli
scas
push
in
movsb
arpl
out
addr16
lods
dec
or
popf
mov
cltd
icebp
scas
pop
add
jo
mov
les
es
divl
sub
sub
int
jnp
sub
sub
movsl
mov
js
movl
mov
mov
movl
add
xorl
xor
movl
cmp
jne
mov
mov
and
mov
mov
movl
add
mov
jmp
fcmovnbe
aam
repz
push
jae
cmpsl
mov
fnsave
jge
jo
xchg
xorb
cli
pop
ss
and
pusha
push
cmp
js
add
mov
in
push
mov
pusha
mov
rolb
fstl
sub
aad
sar
inc
xor
je
nop
or
mov
jge
jno
cmpsb
and
je
lods
xor
sahf
aaa
adc
push
test
xor
pop
xor
jbe
xchg
add
sti
pop
lock
shlb
sub
cld
jle
sbb
in
cmp
cmp
fwait
pop
ficoml
xchg
mov
and
sub
or
mov
dec
or
sbb
test
lods
loopne
jae
jl
gs
or
sub
ret
sahf
dec
sbb
dec
add
cwtl
pop
and
sbb
daa
pop
xlat
mov
adc
loopne
xchg
mov
fisttps
out
fcoms
addr16
ja
pusha
rorb
fnsave
in
sbb
dec
jne
add
wrmsr
jmp
inc
cmpsb
xchg
mov
jb
cltd
pusha
mov
int
xor
mov
sub
scas
iret
pop
in
cmp
icebp
bound
cmp
mov
loope
pop
sarl
mov
stos
adc
xchg
xchg
jp
cwtl
jl
mov
ret
out
mov
negb
and
js
xor
pop
mov
jne
dec
fists
sar
sbb
cwtl
out
test
insb
sub
lds
test
mov
push
dec
shrl
lcall
in
cld
fimuls
lcall
cltd
jb
cmpsl
cmpsl
mov
or
in
lods
imul
outsl
test
mov
cmc
mov
xchg
lods
xchg
or
test
push
imul
push
xor
xchg
lods
sub
cld
test
fld
mov
jo
jl
push
xor
mov
scas
push
or
xchg
fwait
fisttpl
in
repz
mov
cmpsl
sbb
mov
imul
in
cmpb
repnz
movsb
pop
movsb
je
mov
jbe
negb
orl
fcmovnu
ljmp
pop
push
dec
ret
mov
cmc
nop
jp
inc
fiaddl
mov
in
lret
mov
push
jae
stos
or
lods
add
fcoms
ret
insl
cli
push
and
push
std
roll
sub
outsl
or
lcall
mov
inc
lahf
pop
jne
mov
and
packuswb
in
fisubl
pop
mov
movsb
outsl
ljmp
aas
xor
test
divl
adc
xchg
addr16
jae
jbe
xchg
sub
mov
fisttpll
mov
mov
cmp
mov
mov
mov
lret
cwtl
aad
or
adc
ds
test
inc
and
cmp
lock
popa
sub
jecxz
imul
dec
arpl
sbb
movsb
xlat
mov
fdivrs
into
outsb
push
push
push
dec
sub
pop
gs
mov
ret
lret
xor
jae
or
int
stos
adc
ds
test
inc
mov
add
mov
mov
add
mov
xor
sub
push
sbb
jmp
lods
das
mov
mov
lcall
pop
mov
jo
shll
mov
sub
fidivrs
or
and
dec
daa
dec
mov
dec
sbb
push
inc
push
popf
sbb
adc
pop
mov
pop
jbe
xorl
sub
cmp
and
adc
adc
pop
adc
push
mov
mov
push
inc
or
push
outsb
mov
fcomi
fnstcw
xchg
aad
adcl
fcmovbe
push
jg
pop
or
or
mov
icebp
test
popf
dec
mov
fwait
fwait
sub
enter
sbbb
into
pop
add
or
mov
inc
aad
jo
mov
popl
lcall
inc
jmp
sub
aam
add
xor
jne
pop
insl
adc
ljmp
imul
cld
push
adc
jb
cmp
and
push
mov
dec
jne
mov
lret
jae
and
fstl
cmp
fwait
mov
out
fidivs
scas
test
aas
xchg
ret
add
int
or
jle
pop
pop
push
out
xor
xor
stos
addr16
push
out
lock
adc
pop
sarb
iret
fsubrl
mov
mov
stos
push
out
pop
push
inc
or
add
stos
dec
jo
pop
xor
sbb
gs
push
gs
pop
cld
leave
mov
or
bnd
jno
inc
inc
cmp
push
into
and
or
inc
dec
mov
ljmp
mov
je
sub
imul
popa
cwtl
js
popf
out
jno
mov
xor
ja
pop
stos
arpl
sub
mov
or
push
pushf
jp
into
adc
sarb
imul
fidivrl
mov
mov
or
sbb
sbb
shl
repnz
insb
dec
cmpsb
out
inc
dec
inc
pop
into
adc
je
sbb
insl
sarl
xlat
xchg
mov
mov
xchg
pop
lods
jle
add
mov
mov
push
push
sbb
and
dec
repnz
sbb
and
push
jb
jp
test
xchg
push
out
xor
loop
xchg
add
inc
stc
and
mov
mov
push
fwait
cmp
mov
mov
and
repnz
adc
mov
insl
movsl
daa
cmp
rcrb
data16
repz
inc
out
ret
stos
mov
pop
andl
cmp
test
je
data16
cs
sub
push
mov
mov
cmp
int
test
pop
sub
dec
outsl
adc
out
inc
outsb
xchg
xchg
out
cwtl
hlt
ljmp
xchg
jnp
cli
aam
aas
pop
sbb
xlat
movsb
arpl
mov
test
scas
xchg
sti
push
dec
or
adc
aaa
mov
jae
xchg
js
enter
roll
jne
in
bound
mov
sub
mov
mov
pushf
jl
dec
andb
mov
add
stos
sub
idivb
push
dec
lods
aam
hlt
popf
stos
mov
jb
pushf
lahf
mov
lock
pop
jno
push
inc
jbe
test
das
xchg
and
fbstp
lods
dec
jge
daa
mov
sbb
mov
add
jmp
outsl
mov
or
imul
rcrl
jo
mov
mov
pop
outsl
test
stos
sti
mov
xchg
sub
mov
arpl
fcoml
push
sub
push
fucom
dec
in
int
jb
lods
cmpsb
dec
arpl
mov
jae
ret
int3
mov
pop
xchg
dec
test
test
popa
pushl
popa
jnp
inc
jg
cld
mov
pop
mov
icebp
sbb
mov
sbb
fucomp
mov
mov
mov
cmc
ja
mov
imul
mov
je
pop
cmp
push
insb
call
push
sub
stos
xchg
mov
jl
sbb
notb
jo
popf
addr16
mov
dec
sub
loopne
sbb
sub
pop
insb
pop
add
into
push
sti
pushl
fcomi
outsb
adc
jg
mov
push
xor
arpl
out
mov
cld
mov
call
pusha
add
mov
shl
jmp
adc
test
mov
sbb
roll
jae
mov
sar
push
ljmp
dec
xor
aad
loopne
jp
jg
dec
mov
cli
push
cs
inc
cs
mov
mov
mov
shl
fildll
jae
inc
sub
cmp
sbb
and
hlt
mov
mov
daa
sub
pop
popa
mov
push
push
ljmp
pop
loop
sbb
pop
add
cltd
aam
ret
outsb
sbb
adc
mov
pop
or
jmp
add
and
outsb
sub
cmp
outsl
es
jecxz
add
dec
sub
jp
xlat
jp
jnp
test
ja
jo
mov
mov
in
push
jecxz
hlt
rolw
sub
pop
and
mov
test
add
cli
and
rcrb
cmp
cmp
mov
rorl
sbb
in
pop
aaa
push
sub
mov
xchg
xchg
sbb
push
add
imul
pop
out
fstpt
sti
lds
and
loop
test
sub
movsb
mov
lods
mov
sbb
sbb
push
das
lcall
inc
clc
mov
test
jnp
push
push
mov
or
dec
lock
xlat
mov
gs
jp
loopne
pop
xchg
ss
pop
std
xchg
fcompl
xor
pushf
jmp
mov
add
mov
repnz
push
push
sti
subb
roll
aad
fidivl
sti
push
popf
pushf
fiadds
sbbb
sbb
aam
insl
jne
jns
clc
lea
ret
mov
cmp
or
loope
je
scas
pop
cld
mov
test
push
jmp
mov
add
in
cld
or
xor
xchg
add
les
adcb
mov
cld
test
xchg
mov
dec
lock
adc
enter
sub
and
repz
rcr
lods
sbb
cmp
or
push
inc
jno
stos
sub
xchg
and
aaa
out
dec
xchg
dec
rcll
dec
clc
sahf
xchg
mov
mov
negl
push
dec
push
mov
inc
push
dec
das
xchg
pop
add
mov
fcoml
lods
fsubs
aaa
jae
jge
mov
inc
outsl
pop
push
sbb
jne
adc
hlt
fs
scas
xchg
add
in
outsb
adc
cmp
inc
push
pop
je
mov
jmp
mov
xor
add
jmp
mov
xor
add
leave
ret
push
mov
jmp
outsl
mov
jae
dec
cmpsl
repz
dec
out
inc
jo
pop
jge
jo
mov
jae
popf
roll
int
pop
or
out
or
leave
fsubrs
add
xor
int
stos
mov
iret
xchg
inc
sbb
outsl
mov
inc
fdivrl
js
dec
inc
lods
mov
mov
in
sbb
jmp
and
mov
jns
mov
mov
mov
mov
xchg
sub
mov
sbb
mov
sbb
sub
xchg
mov
fistpl
mov
ljmp
sahf
cmp
adc
mov
das
jmp
lcall
adc
js
xor
mov
ret
pop
mov
mov
mov
or
mov
lea
lds
out
inc
pop
not
cmp
push
mov
cld
mov
ja
arpl
es
push
and
adc
pushf
das
mov
mov
xchg
xor
fadd
and
stos
orb
mov
sbb
das
xchg
pusha
lret
xchg
fdivrs
adc
mov
dec
dec
xchg
movb
mov
add
pusha
jl
dec
xor
add
xchg
mov
push
out
jp
aad
dec
pop
inc
fsts
std
stos
xchg
clc
hlt
adc
and
fcmove
lods
and
mov
aaa
gs
mov
stos
jnp
js
mov
aad
dec
nop
pop
mov
mov
mov
sbb
lcall
mov
iret
push
xchg
sahf
add
dec
mov
ss
mov
sub
inc
and
or
inc
das
and
mov
jbe
loopne
jge
and
mov
mov
into
dec
sbb
jnp
xor
aad
jl
xchg
inc
aam
sbb
pop
pop
push
repnz
gs
gs
pop
pop
mov
inc
enter
outsl
pop
les
sbb
pop
adc
test
push
pushf
adc
fldenv
aaa
xor
movsl
jne
adc
jo
adc
test
add
push
inc
push
jnp
jle
pop
jne
roll
call
gs
inc
xchg
push
rorl
xor
or
pushf
jle
cs
mov
dec
mov
cwtl
mov
dec
imul
jmp
xor
jp
add
cmp
movsl
xor
sub
ret
pusha
or
xor
lds
mov
sarl
xor
lock
sub
sub
add
idivb
dec
and
cltd
jecxz
xor
dec
js
repnz
mov
loop
inc
popf
push
mov
or
gs
outsl
leave
dec
cmp
aaa
gs
out
pop
cli
cli
insl
in
add
mov
mov
cltd
pop
jmp
mov
mov
loop
push
leave
dec
mov
push
push
aas
mov
dec
pop
jl
jmp
out
lock
add
xchg
jl
mov
rcrb
lds
dec
sbb
fimuls
andl
jbe
mov
mov
popf
sbb
mov
gs
push
mov
rorl
cmp
outsl
jae
xor
in
sahf
cld
ret
xchg
orb
mov
sub
mov
push
mov
pushf
inc
fistpl
jne
sbb
lods
mov
push
out
mov
js
pop
mov
mov
pusha
jecxz
or
fidivl
out
pop
mov
add
mov
jno
push
add
mov
mov
sub
adc
mov
push
mov
xor
movl
jmp
xchg
shll
push
paddsw
es
jo
pop
jge
jo
into
push
jge
jp
mov
mov
std
test
or
mov
mov
addr16
adcl
andl
ret
jno
gs
arpl
in
or
lea
out
dec
sbb
fcomps
ljmp
daa
pop
test
outsb
leave
cs
adc
xor
xchg
into
cmp
sub
cs
andb
stc
mov
insl
mov
sbb
test
sbb
dec
pop
cmpsl
pop
imull
push
cwtl
jne
repz
xorb
jno
cld
rol
pop
or
jb
sub
scas
pop
sub
push
mov
pop
jo
shlb
lds
cltd
and
mov
adc
cli
mov
int
jb
or
adc
jne
fsubl
cvtpi2ps
mov
jmp
dec
cld
out
push
and
cmp
sbb
gs
lea
jno
push
scas
sahf
mov
in
xor
fstp
mov
lock
adc
sub
ljmp
outsb
push
inc
nop
cwtl
push
ljmp
and
hlt
sub
dec
fiadds
push
out
or
add
or
xor
movsl
mov
mov
lcall
inc
sbb
jge
cmc
movsl
xchg
jo
xor
mov
addl
inc
cmpsb
pushf
cmp
mov
mov
or
fsubrs
icebp
inc
jb
cmc
add
es
test
cmp
test
push
dec
test
divl
insl
add
and
mov
lret
fwait
xlat
adc
mov
lods
pusha
fnstsw
orb
jl
lret
mov
jnp
test
stos
gs
cmp
mov
dec
lret
inc
clc
xchg
and
hlt
xor
fnstenv
ficomps
and
cmc
and
sub
push
in
fwait
and
mov
xchg
out
cmpsb
nop
incb
inc
repz
faddp
cmp
sar
inc
mov
clc
insb
sub
xchg
cltd
sub
iret
jmp
lcall
movsl
repnz
in
sbb
cmpsl
outsw
or
sarb
loopne
fsubrl
push
aaa
sub
add
mov
and
dec
fidivrl
cltd
and
sbb
dec
xchg
xchg
and
jecxz
dec
add
push
inc
add
test
mov
sub
jecxz
mov
sti
fstps
sbb
pop
bound
ljmp
cmpl
pushf
xor
push
adc
dec
or
sub
loope
xor
hlt
push
lds
and
inc
add
mov
mov
xor
inc
push
dec
out
cmpsl
and
or
inc
sbb
fistl
in
jbe
pop
sbb
lock
mov
pop
mov
push
dec
xor
or
inc
and
lahf
push
in
mov
mov
popa
jl
test
data16
and
stos
insb
cltd
add
pushf
shrl
out
cli
xor
into
mov
cmc
push
ja
cmpl
xor
mov
sub
mov
cli
xor
inc
mov
adc
movl
jmp
loopne
cltd
push
shlb
in
jmp
sub
pop
sbb
mov
dec
movsl
add
sub
nop
lds
jns
pop
mov
js
cld
push
xchg
adc
jmp
cmp
mov
int3
test
mov
nop
cmp
mov
stos
mov
in
push
cmp
movl
je
mov
andl
mov
inc
mov
cmpl
jne
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
jmp
and
leave
adc
adc
call
adc
fisttpl
dec
jo
pop
jge
jo
fcomps
xchg
or
cmp
jp
aad
mov
xor
das
lock
iret
lea
or
mov
sbb
add
mov
pop
arpl
sub
mov
mov
movsl
das
out
out
repz
mov
pop
scas
xchg
mov
scas
sahf
stos
imull
sub
sub
movsb
adc
int3
inc
mov
push
and
jg
mov
dec
stc
push
repz
xchg
jle
dec
and
int
popf
test
sbb
stos
aas
pop
sbb
icebp
push
ljmp
pop
jne
ret
inc
outsl
inc
cs
popa
mov
xor
fldcw
pop
scas
gs
mov
xchg
xlat
mov
aaa
xchg
or
mov
and
xchg
repnz
popa
xor
add
mov
sbb
xchg
pop
sti
loopne
lahf
cmp
xchg
mov
hlt
stos
push
cmpsb
cmpl
lret
into
leave
dec
sbb
in
jle
dec
pop
insb
sub
mov
es
cmp
sub
je
adc
pop
push
aad
add
aam
movsb
cmp
enter
gs
stos
stos
es
ljmp
mov
cmp
les
jmp
xor
sub
and
inc
dec
jns
sub
inc
test
hlt
sarl
push
jns
xor
push
adc
mov
outsb
popa
imul
mov
aad
xchg
push
jmp
movd
pop
dec
add
xchg
lahf
jecxz
test
pop
in
sub
call
push
inc
pop
aam
in
into
and
scas
je
pop
out
xor
xchg
mov
jns
cmpsb
mov
add
sarl
sti
sbb
push
loop
loopne
out
out
pop
enter
inc
mov
mov
xor
inc
or
adcb
or
lret
stc
mov
insl
out
lcall
shrb
and
lahf
daa
cli
and
addr16
cmp
xor
fsubl
outsl
ja
jge
les
jp
jg
xorl
xchg
xor
push
and
fcompl
pop
pop
lock
imul
inc
stos
aad
lea
jnp
fsubr
and
adc
dec
inc
lcall
sub
bound
sbb
aaa
in
stc
in
mov
sub
cmpsb
lret
sahf
imul
xor
scas
shr
sub
xchg
divl
pop
inc
lods
adc
pushf
rcr
inc
xor
loopne
pusha
cld
out
int
push
into
jno
sub
es
mov
pop
push
ficompl
fdivrl
jae
shrl
shlb
jnp
jnp
xor
xchg
add
mov
cmp
and
mov
jg
sbb
and
fsts
and
inc
xchg
cmp
iret
in
js
jb
pop
add
insl
pop
cmc
outsb
lods
sbb
mov
ja
push
mov
inc
shr
sahf
jmp
mov
repnz
dec
xchg
xchg
mov
insb
scas
sub
lods
mov
and
push
xor
push
push
push
sub
adc
pop
or
lock
aaa
mov
add
scas
adc
fists
dec
es
inc
push
mov
sbb
imul
daa
sub
jge
outsb
mov
xchg
xor
les
std
gs
popf
aad
xchg
iret
cmc
test
cmp
xlat
loope
enter
pop
ret
jmp
jle
scas
aas
mov
cmpsl
call
cmp
push
add
push
xchg
mov
sub
addl
xor
movl
cmp
movl
jne
jmp
js
stos
loopne
jae
cmc
pop
sub
sub
push
jo
pop
jge
jo
fdivrp
mov
fdivs
inc
xor
jnp
scas
adc
insl
outsb
add
mov
mov
push
sub
push
mov
sub
imul
xchg
out
dec
inc
push
scas
sahf
aam
test
rolb
icebp
jbe
adc
loop
sub
rol
mov
outsl
jle
sub
mov
mov
add
sbb
cmp
push
jg
ret
xchg
out
out
cmp
fcompl
addl
pop
adc
out
pop
push
arpl
jns
dec
sub
movl
mov
add
jl
lods
fisubl
int3
push
dec
and
clc
push
push
fcompl
stos
cmp
push
and
pop
jno
xchg
and
ja
mov
cltd
ss
subb
sahf
rolb
adc
lret
test
cmpsb
lods
mov
fs
fisubrl
lods
jge
not
xchg
sbb
je
ljmp
pop
das
jle
loop
mov
adc
sub
dec
or
mov
inc
dec
or
adc
dec
popf
out
into
std
or
adc
fstl
sbb
in
jbe
xchg
push
xchg
imul
add
add
and
add
icebp
cs
dec
sub
inc
mov
int
sahf
push
mov
pop
mov
fs
pushf
lret
push
mov
decb
xlat
iret
cmpsb
cmc
sahf
push
add
mov
ljmp
xchg
mov
fstps
int
gs
pop
jno
or
sbb
pusha
dec
add
loope
int
testl
mov
or
mov
fildl
imul
mov
xor
incl
and
inc
fisttpl
leave
mov
jns
mov
sarl
rclb
rol
xchg
inc
lret
xchg
dec
sbb
jnp
lock
inc
adc
sbb
jle
mov
call
cmc
cmpsb
xchg
sbb
mov
fisttpl
in
fcompl
or
daa
push
shrb
insb
popf
jmp
pusha
shr
fprem1
lcall
xorl
adc
mov
loope
or
jmp
mov
dec
push
mov
mov
push
outsl
scas
inc
adc
inc
mov
lock
lcall
and
add
addr16
fcomps
cmp
push
nop
test
jle
adcl
ret
adcl
mov
mov
pop
xor
scas
push
jo
sarl
fnstsw
mov
xchg
pop
mov
addb
pop
mov
sahf
and
and
push
inc
pop
inc
and
xchg
in
call
xor
dec
ss
addb
neg
or
mov
push
sbb
loopne
fnstenv
pop
clc
inc
nop
jb
mov
inc
add
rol
xchg
and
push
test
cmp
inc
jmp
sub
push
mov
stos
cli
sbb
sub
push
inc
pop
dec
sbb
shrl
sbb
out
dec
call
inc
setnp
sub
divb
or
dec
scas
notl
push
jb
inc
int3
inc
pop
mov
mov
clc
xorl
notl
push
jno
xor
and
mulb
outsb
je
je
jle
dec
aas
jno
adcl
pop
and
cmpsb
sarl
popf
cli
inc
movsl
pop
jae
xor
push
pop
add
ja
adc
sbb
cmc
mov
add
jmp
mov
xor
add
mov
mov
xor
add
mov
jmp
mov
mov
jmp
mov
cwtl
test
jb
jb
xchg
adc
mov
pop
jge
jo
or
mov
cmp
push
fwait
ret
inc
mull
and
xchg
jb
ja
jmp
repz
sub
sub
imul
ss
jo
mov
jae
out
leave
jmp
cld
lods
cmpsl
xchg
jo
sub
test
fsubp
xor
xorb
pushf
push
and
cmpsl
sarl
popf
divl
xorb
and
or
aaa
out
ds
or
std
mov
jp
cli
mov
pop
adc
adc
pop
fadds
lret
ret
pop
mov
or
inc
push
sarl
pop
fwait
add
mov
aad
inc
cmp
pop
movb
jmp
insb
cwtl
test
je
push
and
stos
flds
fwait
xchg
pop
dec
cmp
xchg
stos
sbb
pop
jecxz
ljmp
out
xchg
cmpsl
int
jbe
or
sbbb
jle
lock
jmp
fildl
lock
cmp
in
sub
inc
rorl
inc
sbb
in
aas
rcrl
data16
ficoms
inc
fcomps
jl
jmp
mov
cs
inc
pushf
mov
mov
xchg
mov
ret
jg
inc
sbb
fmull
push
jne
subb
jl
adc
cmpsb
std
lahf
push
inc
test
out
xor
fstpl
dec
jno
sub
ret
cmp
mov
pusha
mov
pop
sbb
inc
jns
and
out
loopne
cmpsl
jmp
jmp
dec
xor
and
jmp
test
sbb
mov
not
dec
adc
and
shlb
dec
adc
aas
repz
sub
lds
adc
mov
or
push
adc
jbe
lret
pop
jp
cs
fs
mov
adc
lret
push
xor
flds
or
mov
out
adcb
mov
imul
fwait
aam
mov
mov
mov
xchg
xor
shrl
adc
and
std
fsts
test
cwtl
imul
jecxz
aaa
fsubs
mov
loop
in
mov
and
xorl
aas
inc
test
jmp
das
cs
les
imul
cmpsl
aam
into
jae
and
repnz
push
mov
dec
adc
lret
xchg
mov
dec
sub
in
pop
lahf
cmp
cmp
inc
pushf
adcb
jae
leave
mov
sti
xstore-rng
cmpsl
xorb
inc
cmp
sub
sub
loope
into
push
imul
in
add
ss
cmp
jl
pop
mov
mov
xchg
jmp
or
ret
idivl
adc
mov
sub
sbb
aas
mov
mov
int3
push
mov
jg
mov
or
pop
cmp
pop
xor
in
and
dec
jno
add
pop
stos
adc
cmc
in
into
mov
int3
cmp
rol
mov
jmp
pushf
sbb
fadd
mov
frstor
imul
sbb
shrl
pop
fs
addr16
or
sub
outsb
andb
add
das
mov
mov
xchg
pop
or
clc
and
mov
test
nop
incb
and
xchg
cmpl
je
imul
xchg
fists
cmp
xchg
sbb
in
insl
xchg
adc
outsl
aam
jg
hlt
int3
adc
lret
scas
and
pop
push
in
push
mov
mov
mov
mov
add
pop
pop
ret
push
mov
sub
and
movl
mov
adc
movl
sbbl
mov
subl
push
movl
cmpl
je
cmpl
jne
push
push
push
call
mov
dec
mov
jmp
mov
xor
sub
mov
sbbl
jmp
mov
mov
pop
dec
xor
imul
jo
push
pop
repnz
mov
or
jbe
xor
xchg
repz
movsl
clc
xor
cmp
jg
push
nop
insb
sbb
mov
bound
xor
mov
push
push
shlb
push
push
inc
xchg
add
imul
mov
in
movsb
pop
sub
in
cmpsb
mov
mov
pop
ds
mov
enter
mov
and
in
or
lret
fnsave
cmc
loop
movsl
jne
xchg
mov
inc
cltd
jp
xor
push
insl
movsb
mov
sbbb
sbb
pop
in
mov
cmp
nop
call
lcall
stc
cmpsl
xor
repz
dec
mov
dec
mov
jno
popf
cmp
pop
mov
jae
mov
push
lods
jle
fwait
movsl
pop
pop
push
jp
push
mov
hlt
out
fwait
sub
pop
or
iret
inc
imul
in
add
outsb
sbb
mov
ja,pn
cwtl
test
mov
xchg
hlt
push
add
pushf
iret
fdivl
stc
fxam
xor
cmpsl
pop
cmp
test
popa
pop
adc
inc
xor
addb
mov
hlt
mov
xchg
pop
jno
cmp
insb
xor
sbb
adc
jp
shlb
adcl
std
lcall
out
add
mov
orb
mov
stos
ljmp
jp
lods
mov
out
push
mov
xchg
cmp
push
sbb
cmp
rcl
mov
sbb
sbb
outsb
mov
enter
dec
sbb
scas
aas
adc
jecxz
gs
scas
jl
repz
xlat
pop
xchg
jne
int3
pop
xor
addl
add
or
adc
push
dec
dec
movsb
test
jne
jmp
inc
data16
test
mov
ficomps
inc
adc
cmpsb
je
mov
rcrb
mov
jbe
adc
and
shll
fnstenv
fwait
cld
xchg
je
mov
mov
mov
cmp
inc
lock
and
mov
sub
adc
imul
inc
fadds
lret
or
dec
mov
cltd
pop
xor
pop
mov
fstpt
pushf
int3
in
pusha
fmulp
xchg
dec
pusha
pop
mov
cmp
insb
adc
mov
in
in
cmp
nop
lock
xlat
jae
cmp
sti
movsl
xorl
xor
add
ja
adc
dec
fmuls
adc
into
jnp
mov
add
subl
jmp
hlt
xor
fwait
repz
inc
xchg
aaa
pop
sub
cs
pop
jo
mov
cmp
cltd
aaa
cmp
enter
jno
stc
pop
ret
gs
test
xchg
testb
test
mov
mov
repnz
lock
dec
frstor
mov
testb
shl
cmpsl
loopne
dec
mov
mov
cs
jecxz
sbb
jecxz
iret
mov
mov
xor
or
mov
mov
mov
jle
femms
lret
add
xchg
or
ds
cltd
and
ficoms
imull
mov
stos
adc
or
mov
cmp
sbb
xchg
fs
jmp
jno
mov
pop
mov
or
shlb
xchg
sub
xchg
mov
mov
cmp
out
scas
lds
and
xor
and
cli
out
push
pop
pop
mov
mov
and
sbb
or
cld
xchg
cmp
popf
mov
add
pop
push
xchg
inc
inc
xor
inc
sub
loop
iret
lock
adcl
lcall
scas
insb
les
inc
leave
lods
out
and
fsubl
fst
std
mov
cmp
movsl
push
faddl
or
iret
mov
cmp
xchg
push
or
pop
xor
xchg
insb
xlat
jmp
dec
pop
aaa
and
icebp
add
roll
or
test
jnp
adc
insb
test
jnp
je
dec
jno
add
aas
dec
lock
clc
cmp
ljmp
decb
sub
pop
and
ret
cs
insl
push
outsb
mov
mov
mov
lea
or
cmp
add
cli
enter
in
test
inc
shl
or
ss
mov
fbstp
stos
mov
mov
je
pop
xchg
xor
cld
sbbb
rorb
xor
test
add
loop
cld
mov
lock
pop
add
vrsqrtss
fs
test
sbb
imul
repz
in
lods
mov
or
mov
aad
inc
cmp
fdivrs
mov
das
inc
pop
cwtl
clc
dec
adc
ds
push
push
ds
xchg
fcom
adc
imul
in
push
or
mov
adc
gs
xlat
add
pushf
notb
xchg
mov
repnz
dec
pushf
push
xorl
inc
iret
lahf
sbb
idiv
inc
add
add
add
sldt
add
leave
or
inc
mov
cmpl
jae
cmpl
jne
push
pushl
pushl
call
cmpl
jne
mov
inc
mov
jmp
mov
push
xorl
push
test
jmp
mov
mov
jne
jne
sub
pop
jo
mov
in
jae
rclb
jle
pop
add
jns
sub
inc
pop
or
xchg
fsubr
stos
cmp
lret
sbb
shl
jl
outsl
ljmp
scas
out
loop
jae
scas
movaps
int3
ret
pop
out
fldcw
jl
mov
mov
mov
push
test
push
cmp
fcmovbe
push
and
add
lock
add
and
fidivl
adc
movsl
xchg
mov
lods
jb
sub
std
xchg
jno
xor
xlat
adc
push
popl
test
mov
pcmpgtw
daa
lret
aaa
in
inc
and
pusha
push
lret
mov
and
ds
ror
mov
adc
jns
cmp
loop
push
inc
mov
cmp
xor
aam
sbb
in
mov
cli
cmp
or
aad
pop
call
push
mov
jnp
sbb
sbb
lcall
into
inc
rorl
in
sbb
ret
test
mov
fldt
loopne
nop
jecxz
mov
cwtl
mov
popa
out
sahf
scas
imul
test
adc
xchg
jp
sub
sub
mov
add
mov
xchg
pop
dec
cli
add
jp
in
loope
fwait
lret
sub
pop
sbb
inc
and
insl
fistpl
mov
xlat
les
ss
xor
ret
loopne
jb
sub
lock
outsb
mov
pop
xchg
fisubs
xchg
orl
inc
pushf
xchg
push
and
pop
stc
inc
or
mov
insb
test
lods
loope
je
jg
jns
int
xor
push
jb
jl
mov
out
jmp
test
out
inc
bound
inc
sahf
enter
popa
push
dec
rcrl
or
shrl
mov
push
sbb
pop
dec
mov
mov
mov
mov
xor
or
xor
les
and
jae
sbb
testl
pop
xlat
push
push
adc
sti
mov
test
push
imul
mov
xchg
mov
fwait
dec
pop
push
or
cli
adc
lcall
pop
sbb
sti
mov
mov
outsl
pop
test
sub
mov
sti
dec
add
xlat
repz
jns
xor
pop
pushf
sub
cmp
mov
push
mov
fwait
je
mov
add
mov
or
mov
movl
cmpl
je
cmpl
jne
push
push
push
push
pushl
push
push
call
mov
dec
mov
jmp
and
imul
mov
add
add
mov
sub
mov
jmp
lret
sbb
inc
loopne
push
mov
rorb
ja
out
aam
data16
mov
push
push
dec
sti
stos
test
je
mov
adc
sbbb
inc
mov
push
sahf
jg
mov
mov
loopne
dec
add
bound
push
mov
dec
pop
faddp
dec
ror
xchg
insb
jmp
ret
cmp
sbb
aam
xchg
stos
mov
cmp
int3
adc
add
mov
adc
inc
sub
icebp
repz
push
std
mov
lahf
dec
fs
orl
inc
imul
test
add
outsb
mov
add
and
sbbb
in
sbb
loope
push
cwtl
gs
repnz
es
adc
sub
popf
push
sub
push
ds
and
push
and
add
dec
xchg
jecxz
dec
aaa
mov
dec
jmp
fwait
xor
int
mov
xorl
adc
mov
das
pop
addr16
mov
adc
pop
push
lock
mov
aas
mov
jecxz
std
sbb
and
divl
lcall
int3
pop
cli
cmpl
out
dec
dec
test
ss
dec
sub
push
jnp
sahf
cli
jne
mov
sbb
jbe
sub
cmp
jo
mov
dec
cmpsl
bound
xchg
cmpsb
mov
push
sub
push
addl
test
sti
jp
pop
testb
xchg
push
add
sarl
jg
or
sub
testb
leave
add
fcmovnb
stc
adc
mov
push
cmp
dec
icebp
sarl
push
mov
icebp
and
out
mov
cmpsl
adc
mov
ss
lahf
push
loop
xchg
push
jae
je
mov
and
sbb
insl
test
or
shr
fimull
imul
xchg
jmp
mov
enter
nop
sub
xor
sbbb
sub
nop
aad
les
push
fistpl
or
cmp
xchg
into
push
push
insl
inc
mov
popf
mov
outsl
mov
xchg
lods
andb
cmp
or
mov
cmp
jnp
dec
sub
das
movsl
jnp
sbb
or
mov
xchg
cli
ds
fs
push
imul
or
inc
incb
xchg
in
cmp
loope
add
add
add
sldt
add
leave
add
inc
mov
cmpl
jae
cmpl
jne
push
pushl
call
jmp
xor
sub
xor
jmp
call
jno
popa
push
xchg
arpl
imul
mov
loopne
mov
xorl
ror
or
test
pushf
aas
aas
outsb
and
push
add
sub
xchg
scas
push
loope
cmpb
jnp
jge
pop
push
mov
and
sub
xchg
pop
mov
and
inc
je
inc
pop
push
in
pop
xchg
das
pop
test
insb
aaa
dec
aas
lds
jp
mov
shrl
sbb
movsl
out
inc
or
cltd
adc
movsl
outsl
add
bnd
push
cmc
inc
and
pop
ljmp
mov
add
push
dec
adc
pop
adc
loop
add
or
dec
loopne
xchg
cld
lret
jnp
mov
vhsubpd
sub
cmp
aam
mov
test
bound
mov
int
test
xchg
ljmp
faddl
lcall
jns
cwtl
outsb
push
inc
aaa
lret
mov
ds
into
bound
ljmp
xor
rolb
xchg
and
dec
push
sub
dec
insl
mov
mov
into
roll
rol
mov
xorl
stos
subb
dec
xor
movsl
sbb
mov
pop
xor
or
xchg
movd
xchg
enter
dec
mov
mov
mov
mov
cmpsb
dec
mov
mov
cmp
in
loop
lods
add
push
pop
out
xchg
or
mov
cmpsb
adc
sbb
repz
test
in
lods
cmc
fxam
xor
dec
lock
enter
or
cmp
and
and
sbb
pop
push
cmp
popl
clc
outsl
mov
in
adc
dec
xor
push
lds
lock
fisttps
pushl
pop
insl
xchg
sub
cmpsl
les
xchg
aas
into
cmp
add
shll
int
jae
xchg
inc
xchg
dec
arpl
add
cltd
mov
in
pop
push
std
ret
cld
lods
mov
into
adc
sub
movsb
out
cmc
lret
loopne
fisttps
les
daa
insl
sbb
les
out
fiaddl
pop
sbb
rol
stos
enter
dec
push
mov
mov
push
dec
adc
enter
jge
dec
sbb
jno
sbb
or
dec
inc
outsb
push
orb
push
mov
push
dec
pop
push
jne
push
scas
movsl
stos
pop
mov
mov
mov
mov
mov
adc
mov
xor
mov
xor
adc
xor
jmp
push
popa
jne
add
cmp
cmc
inc
pop
xor
jle
jo
cmpsb
lods
jb
pushf
mov
inc
call
push
xchg
test
clc
pop
shr
out
dec
andb
sub
and
push
jp
dec
nop
pop
divb
ret
or
in
nop
lods
jne
cld
xchg
mov
out
add
daa
push
test
or
shrb
std
mov
js
cwtl
or
out
mov
outsb
or
and
aaa
stos
scas
adc
or
inc
in
push
cli
or
mov
push
loopne
mov
cmp
xchg
jge
les
fisttps
idivb
test
xchg
mov
fimuls
jl
clc
pop
xchg
sub
nop
std
clc
or
mov
mov
push
aad
insl
fmulp
fdivp
inc
test
scas
pusha
ret
cmc
xchg
hlt
lahf
icebp
push
test
pop
or
mov
repz
idivb
lods
lock
mov
mov
or
mov
in
shlb
fnstenv
or
mov
xlat
jns
pop
popa
cltd
dec
jle
add
aad
and
insb
mov
inc
icebp
lret
arpl
aas
stc
test
fs
sub
sbb
or
or
mov
movsl
test
daa
and
jle
add
aas
pop
dec
and
jl
movsb
sub
arpl
sbb
pop
out
jp
in
xor
push
loop
xor
jb
dec
in
popa
dec
sbb
out
into
je
xchg
jg
pusha
push
fdivrl
ficomps
add
and
sub
out
test
cmp
frstpm(287
movmskps
leave
loopne
out
sub
cltd
and
fisttps
sarl
dec
int
pop
mov
add
mov
test
dec
xchg
xor
sub
sub
and
push
clc
cld
or
adc
mov
dec
mov
sub
std
xor
insb
pop
and
jae
sub
stos
jb
and
mov
jg
jp
in
imul
mov
pop
sbb
test
push
add
cmpsb
xchg
out
scas
jmp
push
or
lds
sub
ljmp
lods
nopl
pop
pusha
pop
sbb
ds
dec
scas
fs
aam
test
idivl
cmp
stos
mov
nop
enter
ja
out
or
fldl
mov
mov
stos
pop
pop
or
xor
and
add
loopne
test
pop
add
notl
mov
xor
xorl
add
jmp
inc
mov
jp
adcb
mov
jb
outsb
jo
mov
mov
in
cmc
idivb
mov
adc
inc
jl
dec
leave
push
mov
lds
jmp
aas
test
dec
xchg
sbb
cmp
sub
nop
mov
insb
call
adc
jmp
rcr
mov
xchg
cmpsl
loopne
add
pusha
push
and
adc
mov
jmp
push
xchg
or
jae
dec
lds
lock
gs
idiv
mov
fisubs
fs
js
sbb
pop
pusha
test
cld
pop
sub
cmp
dec
and
dec
dec
mov
test
mov
jne
add
mov
or
pop
xor
mov
out
pop
xor
sub
inc
add
nop
lret
mov
cmpss
sbb
sbb
gs
mov
mov
xlat
sub
xchg
lea
sub
xor
pop
sub
sbb
mov
movsb
daa
mov
stos
ljmp
adc
sub
data16
testb
or
lcall
jae
pusha
stos
lret
sbb
push
pop
popa
xchg
mov
out
sbb
xlat
dec
sahf
xchg
pop
pop
scas
pop
scas
xor
insl
daa
std
adc
mov
push
int
jns
into
push
sti
shll
sbb
pop
pop
cmc
shrl
and
mov
add
fisttpll
ljmp
mov
cli
jae
aam
sbb
cmc
xchg
cmp
lret
shlb
pop
cmc
into
push
sarl
outsl
inc
inc
shll
andb
insl
jno
test
mov
and
ret
add
push
cmpsb
jno
hlt
hlt
cmpsl
jne
movsl
ret
nop
xor
cmpb
inc
insb
jnp
jae
das
sub
push
and
aas
outsb
aas
out
test
lcall
imull
push
cs
cmpl
mov
dec
sti
jnp
adc
sbb
add
add
es
sub
xchg
push
int3
inc
pushf
sbb
and
push
push
jnp
lahf
test
push
arpl
sti
lods
ficomps
inc
nop
std
sub
rcr
insb
jno
mov
push
nop
xchg
mov
jl
stos
jns
sar
xchg
jno
xor
aam
inc
iret
in
sbb
popa
and
mov
cmovae
js
and
clc
pop
outsb
mov
cmp
ss
dec
xchg
sbb
stos
fadd
xor
push
add
imul
xor
fisubl
jne
pushl
jmp
and
lods
shrb
in
fnstsw
call
mov
xchg
add
imul
test
cmp
pop
fnstenv
jno
xchg
jnp
ss
push
jns
and
or
dec
insb
fimuls
cmpsl
or
call
stos
cmp
mov
xchg
int
cmpsb
aaa
fistps
in
loope
jp
cwtl
mul
and
push
or
movsb
mov
gs
xor
fsubrl
cmpsl
pop
sub
sub
cli
popf
mov
lcall
insl
mov
daa
test
pop
data16
dec
in
adc
xorl
mov
lahf
push
push
or
je
mov
cmp
out
lcall
pop
xor
mov
xchg
or
ljmp
fcomps
jnp
out
sub
scas
mov
mov
enter
movsb
fmull
add
cmp
loope
add
stos
jl
test
mov
and
jecxz
shlb
cmp
ss
jo
movsb
inc
leave
outsb
pop
lcall
sub
mov
pop
std
adc
lret
sbb
cmp
jb
adc
jl
testb
ja
mov
cli
cmp
push
cmc
xor
nop
push
xchg
pop
movl
inc
es
ficompl
add
and
push
rorb
in
mov
call
or
mov
and
jle
adc
int
and
icebp
cmp
push
cmpl
imul
adc
and
xor
sahf
dec
mov
pushf
jo
scas
pushf
mov
arpl
loopne
jp
push
xor
jae
enter
cltd
cmp
jne
cld
inc
xor
popa
int3
pusha
insl
call
subl
ret
hlt
jecxz
mov
jae
ss
add
mov
inc
mov
fimuls
repz
mov
xchg
cli
dec
nop
icebp
insl
in
pop
xchg
cmp
loopne
das
loop
aam
js
popf
imul
stos
mov
in
std
addr16
outsl
fiadds
mov
insl
or
aam
rclb
mov
mov
inc
mov
or
mov
nop
and
dec
jge
mov
arpl
sub
shrb
adc
or
andl
jl
sbb
popf
in
sub
jns
lods
pop
xor
and
or
lds
pop
mov
jg
icebp
xor
mov
adc
jo
cli
call
jmp
pop
insl
and
xor
insl
jp
or
aad
lea
jle
jo
nop
fbld
subb
roll
adc
test
sub
stos
xchg
sub
xor
fs
mov
into
dec
and
imul
inc
popa
lods
and
into
cli
fldt
mov
mov
mov
cwtl
test
add
inc
fisubrs
stc
pop
pusha
popf
adc
dec
xchg
push
xchg
popf
clc
add
fs
dec
out
jnp
test
lods
into
cmp
jg
dec
fsubrs
int
fucomip
out
stc
mov
sub
loope
add
adc
faddp
cmp
stos
inc
movsl
dec
add
or
bnd
pop
mov
insb
push
not
enter
pop
stos
add
mov
pop
inc
or
sahf
mov
in
in
mov
pop
call
orl
mov
mov
inc
aad
pop
or
cmp
sbb
movsb
ja
sbb
ret
jno
in
mov
gs
push
fucomp
cmp
lds
lret
cltd
or
mov
stos
daa
pusha
sar
imul
cmp
aam
xchg
lds
adc
pop
ficoms
popf
lods
xchg
mov
add
in
cmp
shll
dec
jp
push
fists
test
inc
mov
cmp
or
cmpsb
xor
sbb
jmp
sub
inc
daa
mov
cwtl
repnz
stos
mov
in
popa
shlb
js
insl
add
dec
sub
test
adc
inc
jbe
push
adc
mov
mov
ljmp
xchg
repnz
test
push
into
or
mov
rclb
cmp
icebp
xor
mov
or
mov
add
ror
jbe
and
xor
fdivrl
pop
call
or
ret
fwait
adc
notl
bound
inc
push
sub
js
les
adc
rcr
xchg
mov
mov
icebp
add
sub
lods
arpl
and
insl
pop
movsb
fcmovbe
js
test
xchg
sbb
cltd
mov
push
shrl
xor
sbb
movsl
lds
mov
aad
out
rclb
xchg
pop
or
test
push
repz
js
into
cmpsl
pop
xchg
test
add
pop
sbbl
stos
pusha
sub
mov
ds
sbb
inc
cmp
push
dec
leave
in
add
ja
jg
rcr
pop
je
mov
sbb
pusha
jns
inc
loopne
inc
cld
sub
mov
movl
cmpl
je
cmpl
jne
pushl
push
push
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
orl
xor
add
cmp
movl
je
pushl
decl
pushl
xorl
call
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
call
jmp
sub
mov
or
mov
adcl
xor
decl
add
movl
cmp
je
not
mov
mov
mov
xorl
jmp
lods
mov
loopne
outsb
push
repz
scas
outsl
inc
jbe
jo
jle
jo
mov
popa
dec
int3
mov
imull
inc
ret
mov
repz
push
scas
mov
sbb
adc
jmp
adc
nop
xchg
jbe
ret
push
mov
mov
cmp
mov
std
mov
stc
sbb
mov
xchg
int
adc
ljmp
xchg
repnz
and
icebp
out
in
das
xchg
sub
aas
pusha
pop
iret
xor
shlb
pop
jmp
daa
cmp
mov
jmp
jp
adc
lcall
es
push
js
push
imul
push
pop
mov
loopne
mov
sbbb
enter
mov
imul
test
mov
out
test
pop
sahf
ret
insb
leave
scas
aaa
int3
cmp
xchg
test
cmp
add
sahf
mov
and
in
fwait
jle
jns
js
popf
repz
jno
enter
sbb
out
outsb
adc
daa
in
pop
sbb
xchg
xchg
stos
mov
add
pushf
mov
mov
jmp
push
mov
pop
das
or
outsl
jae
fwait
sbb
fsub
pop
adc
stos
test
or
push
out
lods
sbb
popf
jp
inc
xchg
aam
jg
mov
push
sub
stos
in
cld
in
ss
std
repnz
add
ds
adc
arpl
icebp
lds
stos
leave
fs
jae
in
shrl
addr16
cltd
dec
fwait
mov
ror
inc
aam
adc
cmp
movaps
sub
push
pop
or
lret
and
in
jmp
lods
sbb
cwtl
mov
stos
sbb
sub
push
mov
sbb
mov
or
adc
dec
pop
dec
mov
mov
or
xchg
ja
pop
mov
mov
pop
outsb
in
outsb
or
cli
cmc
loope
hlt
jg
frstor
adc
push
popf
lahf
cwtl
shl
xchg
ss
dec
add
jo
icebp
pop
and
sub
xor
lret
cmc
xlat
push
mov
icebp
mov
pop
xchg
dec
test
repz
clc
and
mov
mov
cmpsl
out
cmpsl
pop
jns
xor
pop
pop
sub
xchg
mov
cmp
filds
mov
popf
add
xchg
aas
fdivrp
mov
sahf
aas
jg
dec
xchg
incb
test
ret
xchg
test
sub
push
lret
xchg
leave
mov
pop
mov
push
stc
loop
pop
pop
jmp
lahf
icebp
lahf
repz
lret
mov
stc
imul
jae
dec
sarb
ficoms
aam
gs
inc
test
outsb
ret
inc
decl
push
std
inc
add
add
add
add
or
cmpl
jne
call
cmpl
jb
mov
orl
add
mov
or
mov
mov
sbb
mov
addl
add
add
mov
mov
mov
add
neg
xor
and
mov
or
mov
andl
mov
inc
mov
cmpl
jne
pushl
pushl
push
pushl
push
pushl
pushl
call
cmpl
jne
xor
add
inc
mov
cmpl
jb
mov
add
lea
mov
push
jmp
add
xor
inc
cld
xchg
loop
bound
xorb
mov
jle
repz
es
imul
push
pusha
xor
mov
dec
adc
je
roll
mov
data16
xchg
lds
jmp
xchg
inc
bound
repnz
mov
push
and
pop
and
mov
in
repz
pop
mov
sahf
cli
mov
test
and
mov
jb
mov
shrl
jle
sub
sbb
repz
scas
lcall
repnz
xchg
lock
pop
scas
mov
inc
jno
test
push
loop
cmp
cmpsb
cld
cmp
inc
jg
loope
jp
cmp
cmpsl
dec
or
and
aas
or
cmp
adc
aad
ret
mov
icebp
adc
sub
sub
adc
stos
push
lcall
push
subl
add
int3
in
xor
push
iret
add
lea
aad
loop
stc
xchg
rcrb
xchg
lea
cwtl
xchg
loop
inc
jp
add
lods
cwtl
mov
cmpl
push
add
pop
dec
jne
sbb
popf
sub
rolb
push
mov
inc
movsl
add
sbb
mov
dec
push
cmpb
ficompl
adcb
mov
insl
xor
xor
adc
aas
xchg
fcomps
imull
fs
and
roll
fwait
push
fildl
pop
js
in
and
push
fidivrl
xchg
ffree
fadds
jne
les
cmp
lcall
cmp
cmp
lds
lret
xchg
xchg
out
popf
mov
adc
pushf
xchg
popa
aad
add
sbb
dec
jle
movsl
inc
cmpsb
jle
popl
out
dec
hlt
mov
xor
outsb
in
stos
or
and
ja
sbb
in
sti
and
jne
mov
and
push
shll
jmp
into
test
hlt
cli
inc
xchg
adc
addl
ss
sbb
in
rolb
xor
aad
lea
outsb
lcall
sub
inc
pop
movsb
orl
nop
movsb
inc
fs
mov
test
aad
mov
call
cmpsb
aas
sbb
cmp
std
lret
icebp
xor
jno
jns
scas
push
lcall
repz
bound
sub
je
test
fisttpll
popf
jne
pop
js
sbb
inc
or
aam
mov
lds
lcall
loop
in
popf
inc
pushl
pushl
call
mov
jmp
ret
sbb
sub
jno
pop
or
xchg
ror
jo
jo
jle
jo
xchg
pop
cmpsb
lock
lret
es
sarb
and
pop
jle
jns
push
pop
sti
sti
dec
push
and
adc
jmp
sub
inc
test
loop
jmpw
jecxz
mov
add
int3
ss
mov
addr16
out
xor
popa
cwtl
mov
sub
or
nop
dec
xchg
es
mov
insb
int3
fdiv
enter
hlt
jmp
sub
sub
popf
push
or
mov
repz
out
sbb
nop
rclb
mov
cld
mov
xchg
in
push
lods
pop
out
lahf
cmpsl
fisttpl
xchg
push
add
sbb
inc
call
inc
sbb
xchg
dec
cli
stos
pop
jo
inc
pop
imul
sbb
lret
insl
mull
sbb
mov
pop
cmp
jns,pn
mov
pop
mov
xor
xchg
icebp
xchg
arpl
hlt
shrl
enter
jne
fisubrs
es
jnp
pop
pop
adc
push
jb
jmp
mov
mov
or
jle
push
cmpl
shll
lret
mov
movsl
repnz
dec
xchg
test
add
jae
rol
andb
loopne
push
cli
pushf
scas
jl
xlat
push
imul
mov
enter
dec
in
fdivrl
push
andb
pop
push
arpl
jmp
mov
sbb
clc
jle
push
xchg
aad
push
sbb
mov
xchg
or
jp
ja
cmp
and
mov
lods
adc
mov
push
imul
mov
jmp
adc
nop
adc
adc
loop,pn
xchg
ret
hlt
adc
arpl
imul
or
sbb
pop
add
pusha
repz
rolb
xlat
dec
inc
lods
and
mov
je
out
aaa
dec
sub
fwait
cli
out
jb
pop
ss
inc
add
outsl
das
xor
add
out
and
push
sub
nop
push
movsl
or
push
cmp
outsb
xor
out
push
out
fdivs
fucomp
data16
or
lods
jecxz
jnp
into
into
xchg
xchg
sbb
sbb
mov
out
lods
test
xor
sbb
cmp
or
pop
into
data16
push
loopne
cltd
cmpsb
cmp
xchg
adc
pop
mov
out
xchg
jecxz
adc
xor
pop
call
mov
icebp
add
mov
xor
jmp
add
mov
jb
jge
jge
adc
loop
jge
jo
jle
jo
pushf
lret
xchg
pop
popf
test
pop
xor
jo
or
jmp
in
xchg
ja
inc
loope
addr16
dec
sarl
xchg
mov
add
insl
xor
mov
add
cmp
push
lret
push
cmp
inc
xlat
sbb
dec
cmc
jbe
scas
sti
add
test
mov
lods
out
pushf
mov
int3
and
aaa
inc
mov
std
test
loopne
sub
imul
xor
sub
adc
nop
inc
mov
repnz
rcrb
daa
jbe
and
cmc
push
mov
jae
into
dec
adc
fdivs
repz
or
cmc
in
mov
gs
imul
pusha
mov
mov
lods
xchg
les
sbb
dec
bound
cmp
jl
fsubl
test
stos
or
jns
fcomip
xchg
and
int3
push
xchg
cmp
add
loop
jbe
sbb
outsl
and
or
lea
out
rcrb
pop
testb
pop
sti
imul
sbb
mov
mov
push
adc
mov
lahf
mov
adc
xor
cli
jnp
pop
movsb
sbb
negb
jb
jne
xor
cmpsb
call
xor
sub
cmp
adc
pop
jp
fwait
mov
push
mov
mov
cld
in
mov
fucomp
popa
pop
or
outsb
xchg
add
sbb
nop
mov
test
into
mov
jmp
arpl
or
into
mov
mov
adc
push
jp
stos
lock
inc
cmpsb
sub
mov
lds
popa
xchg
sbb
inc
and
xchg
mov
push
imul
inc
push
inc
rcll
cs
out
cmpsl
rcrl
xchg
pop
mov
pop
es
ret
aas
xchg
push
cs
stc
clc
xor
and
lcall
aaa
bswap
mov
lret
test
push
jb
aas
xchg
in
push
xor
iret
sbb
mov
jp
out
push
push
movsb
adc
roll
or
imul
inc
out
mov
lahf
shl
inc
test
xchg
push
sbb
movsb
icebp
cmc
sarl
push
lods
outsb
mov
test
push
push
sub
loope
mov
mov
xchg
repnz
aaa
push
add
sarl
das
js
and
xor
xchg
jns
mov
fwait
mov
int3
jns
movsb
loope
out
sbb
fwait
rcrb
jne
mov
inc
cmp
jb
jmp
mov
xor
add
jmp
mov
movzwl
mov
mov
mov
mov
mov
xor
add
cmp
jne
mov
xor
jmp
mov
add
mov
mov
test
je
mov
push
jmp
icebp
sbb
imul
outsl
stc
shll
jo
jle
jo
dec
in
push
in
jmp
shrb
imul
std
inc
dec
inc
xchg
xchg
fsubs
enter
inc
sbb
xor
and
pop
sti
cmovle
movsb
xor
pop
sbb
push
adc
sub
or
cwtl
pop
andb
stos
into
jmp
adcb
lock
jg
out
int3
ss
std
int
je
shr
xor
jno
jg
or
adcl
loopne
stos
sti
mov
notb
les
lcall
lret
push
mov
ret
rorb
xor
dec
pop
test
jns
sahf
jge
xchg
adc
jl
inc
add
sbb
xlat
ljmp
mov
in
xor
pop
or
icebp
jmp
push
imul
push
inc
or
jge
sbb
jb
das
gs
jle,pn
mov
pop
in
enter
fnsave
mov
mov
mov
cmp
in
xchg
je
lret
sbb
mov
cli
and
mov
test
bound
xchg
nop
std
shlb
lods
sbb
loop
ljmp
xor
scas
dec
dec
cmp
nop
pop
sbb
or
mov
ret
add
subl
or
addl
mov
leave
imul
or
sahf
icebp
jecxz
inc
ret
sub
daa
in
outsb
and
rorb
jl
jl
jne
in
jmp
push
xchg
cs
mov
or
ficompl
jne
je
into
push
jle
fidivrs
lock
pusha
pop
sbb
dec
mov
mov
mov
sbb
mov
int3
mov
fstl
icebp
cmp
sub
ljmp
fistps
out
jl
scas
pop
pop
dec
or
mov
xchg
shll
loope
or
jg
push
mov
jmp
mov
mull
inc
pop
loop
or
mov
in
sti
aas
adc
and
int3
mov
pop
test
push
call
cltd
or
mov
mov
out
cs
and
mov
movsl
test
sub
popf
mov
fisttpl
xchg
dec
popf
pop
add
mov
adc
lock
jmp
xchg
rcl
xor
sbb
scas
mov
test
loopne
ret
jmp
jb
loope
push
leave
test
push
in
fsts
test
add
sub
xchg
dec
mov
imul
jmp
aas
fidivrl
sbb
bound
sub
mov
js
jo
jle
jo
adc
dec
sbb
pop
insl
or
rcll
xor
inc
js
xor
or
mov
ljmp
sarb
ficompl
or
pop
mov
push
dec
jg
sub
adc
xchg
call
cmp
subl
add
xor
clc
orl
mov
sub
pop
push
inc
lock
cmp
sbb
mov
jp
xchg
stos
mov
dec
jae
adc
mov
add
pop
xlat
stos
xchg
xchg
cmpsl
shlb
cld
ret
aam
push
push
sub
mov
add
mov
roll
test
jo
jo
lods
fmul
jne
mov
dec
test
je
jl
test
rorl
xchg
mov
dec
cmp
popa
orl
dec
or
jae
ror
shll
mov
or
arpl
push
xchg
cmpl
cmp
pushf
cli
in
jae
shrl
push
out
ljmp
ljmp
or
push
xchg
arpl
sbbl
inc
pop
pop
imul
jge
add
and
aam
adc
and
in
add
push
add
lcall
sub
jecxz
push
xlat
cwtl
cmpsb
test
push
sub
aaa
sbb
jo
sub
icebp
out
stc
push
movsb
add
orb
fsubl
ljmp
popa
mov
jae
push
faddp
jg
mov
or
jo
adc
push
adc
sahf
and
xor
adc
fsub
shr
ficomps
ds
out
sub
push
lds
push
dec
pop
aad
dec
aam
cmpsb
cwtl
in
notl
mov
fsubp
notb
insb
add
ret
dec
popa
and
imul
mov
ja
xorl
and
pop
add
cmp
inc
push
dec
sbb
and
sub
es
das
pop
in
sbb
or
jmp
loope
arpl
mov
nop
setg
dec
clc
sub
xor
repnz
in
jmp
les
push
pop
cwtl
xor
add
mov
add
lock
mull
mov
sub
xchg
dec
cld
xchg
xchg
xchg
mov
shrb
pop
loope
mov
mov
in
in
adc
pop
mov
aas
das
xor
pop
xchg
jmp
popf
xor
jl
lea
cmp
xchg
cmpsb
add
rcll
loopne
fmull
or
xor
mov
jmp
mov
jne
pop
push
fprem1
push
adc
jo
jle
jo
cld
sarb
ljmp
aam
fldcw
push
add
sub
adc
pop
dec
add
jno
mov
pop
sub
or
test
inc
iret
mov
jne
gs
inc
inc
jae
xor
data16
sbbl
xchg
repnz
xchg
rcll
mov
adc
cmpb
jp
cmp
mov
js
push
int
sbb
add
fwait
aad
ret
lret
adc
jae
or
jg
jno
lea
jno
or
pop
xor
and
inc
cmc
xchg
xchg
lret
lret
leave
mov
jns
pop
add
fistpl
int
ja
xchg
inc
enter
aaa
fiaddl
xchg
sar
cmp
dec
jge
cld
or
dec
push
inc
lods
jmp
mov
and
mov
addr16
mov
sahf
ss
mov
ret
lret
xchg
pop
or
or
push
inc
cld
jecxz
mov
das
fsubrs
in
shll
fidivl
xor
mov
test
stc
xchg
add
mov
xchg
icebp
and
dec
aam
test
jo
xor
std
mov
inc
cwtl
test
mov
test
xchg
cmp
inc
out
jl
sbb
in
lods
mov
dec
shrl
adc
inc
test
decl
mov
mov
rclb
nop
stc
inc
cmp
lds
mov
sbb
aaa
ret
dec
repz
sbb
sti
nop
les
add
fbld
adc
das
mov
das
xor
rcll
mov
or
xor
push
fisttpl
adc
or
push
scas
inc
cmc
mov
mov
dec
mov
pop
cltd
jge
insl
test
sbb
push
das
mov
loopne
stc
and
out
daa
jecxz
mov
movsb
cli
pop
es
cs
push
outsb
arpl
lods
pop
or
inc
dec
push
loope
repz
or
add
push
daa
sbb
adc
sub
jl
int3
push
xchg
jno
and
pop
fsubs
inc
out
out
addr16
ror
sbb
mov
or
adc
out
dec
mov
or
sub
xor
daa
scas
test
jbe
and
lahf
data16
nop
add
push
add
sti
xchg
sub
imul
arpl
sub
sbb
mov
mov
xor
add
mov
imul
mov
xor
mov
lea
cmp
je
mov
mov
mov
mov
mov
xor
xor
jmp
sub
sub
xchg
push
mov
pop
testl
jle
jo
sbb
fstp
je
mov
xchg
stos
xorl
inc
repz
stos
sti
dec
inc
int3
add
xchg
outsb
pop
inc
mov
cli
lea
orb
arpl
jnp
mov
clc
imul
fidivl
lret
mov
lret
add
les
xchg
fstps
sub
nop
cmc
in
mov
sarl
mov
cmp
cmp
jge
pop
test
hlt
push
pop
push
and
enter
jnp
js
mov
jo
popa
les
push
out
and
fstpl
sbbb
add
or
fs
and
leave
or
jecxz
cltd
int3
xor
push
insl
aaa
jns
das
ret
dec
in
pusha
push
xor
push
pop
cmp
sbb
dec
loope
movsl
adc
mov
loop
shrl
and
mov
ficoml
fistps
fcmove
les
pop
leave
or
repz
fisubrs
jle
inc
ja,pt
out
add
shrl
into
shr
lods
jae
pop
xor
jp
xor
inc
bound
test
sub
subl
jmp
push
cmp
adc
in
add
inc
jge
inc
or
rorb
mov
mov
pop
jmp
sbbb
inc
jmp
mov
cmp
cmp
es
mov
ret
lds
loopne
mov
stc
std
mov
jmp
push
xchg
hlt
in
ret
movsb
pop
mov
lcall
fildll
aas
push
in
fldt
int
or
mov
fwait
dec
enter
sbb
mov
jmp
insb
push
fildl
dec
aas
cld
pop
in
shll
repnz
ds
inc
cmpsb
mov
mov
sbb
adc
cmc
jp
or
jp
dec
call
add
xchg
adc
xlat
adc
mov
jmp
in
jae
daa
sub
adc
insb
sub
xchg
jne
lcall
hlt
repnz
fstps
fstpt
push
pop
je
xlat
call
sbb
pop
push
mov
ja
or
sarb
sbb
data16
cld
jb
jno
aad
adc
sbb
fidivrs
cmpsl
and
push
cs
repnz
outsl
cld
inc
xchg
movsl
lods
test
pop
push
sub
ljmp
loope
out
test
scas
xor
inc
ret
inc
lret
jmp
push
mov
lcall
div
mov
jmp
adc
inc
rolb
xchg
int
rcll
test
jo
scas
jg
jg
mov
jno
inc
push
jecxz
addr16
mov
pop
push
fmull
jp
sbb
loopne
icebp
pop
arpl
push
enter
pop
sub
mov
sub
add
ret
cld
lret
insb
call
jl
enter
dec
ja
xchg
scas
pop
cmpb
sbb
mov
inc
jno
jge
push
pop
aaa
fsubr
mov
mull
lods
out
je
mov
xor
jne
jb
xchg
sbb
icebp
dec
ss
or
das
xor
mov
mov
pop
stos
lds
xchg
push
push
cmpsb
nop
pop
out
push
jb
test
inc
test
frstor
les
jae
pop
and
dec
pop
push
orb
sub
loopne
das
lods
and
ror
mov
push
insl
mov
rolb
mov
dec
nop
jbe
cmp
mov
je
inc
cmp
mov
mov
inc
mov
cmp
ret
sub
int
add
lret
loope
push
ficoml
pop
mov
dec
testl
loop
sub
mov
stos
cmc
shll
mov
mov
scas
xchg
adc
outsl
jo
pop
in
and
xchg
cli
je
std
rclb
jnp
xor
dec
popa
mov
cmp
ret
add
inc
lahf
test
roll
jae
stc
mov
cld
jae
andl
sbb
enter
adc
lods
inc
pop
fcmovnu
jle
jbe
add
mov
mov
or
add
and
scas
mov
repz
add
xchg
cmp
out
cmpl
push
push
lcall
loopne
mov
adc
cmp
movsl
push
dec
and
push
imul
cmp
into
xor
jl
adc
push
cld
sub
addr16
orb
xor
movsl
pop
xor
pop
xchg
mov
dec
dec
sub
inc
ss
push
jb
mov
hlt
dec
fstl
into
lret
aas
cmpsl
jae
lret
sahf
sbb
das
xchg
xchg
mov
jle
out
mov
dec
ds
mov
sbb
xor
dec
push
dec
insb
fbld
cltd
rcl
push
mov
les
popa
inc
in
mov
inc
inc
out
loopne
imul
mov
aaa
inc
mov
jns
jmp
test
pushf
jb
add
filds
add
sub
mov
popa
pop
xchg
aas
fidivs
or
jo
sbb
mov
jns
cmp
xchg
in
test
enter
jbe
in
insl
iret
aad
xlat
cmp
out
jae
aas
push
fmul
jae
fistpll
add
jecxz
stos
lea
lahf
mov
arpl
imul
dec
cmp
fstl
loop
outsl
inc
ret
push
pop
and
mov
nop
dec
mov
dec
sbb
xchg
dec
sbb
inc
cmp
cwtl
pop
fists
in
std
andl
stc
mov
loopne
add
hlt
fidivs
xchg
aas
fimuls
movsl
mov
int
mov
inc
dec
pop
js
mov
jnp
popa
pop
sbb
lods
cs
jmp
fst
xchg
leave
jbe
mov
aaa
aad
inc
and
pop
clc
adc
divl
mov
sbb
rorl
jge
and
out
loope
xchg
xchg
mov
add
insl
scas
mov
out
cmp
pop
into
popa
orb
mov
push
loop
xor
iret
mov
imul
imul
xchg
mov
out
or
jbe
aad
xchg
xor
jg
add
jbe
pop
ror
shr
jg
cmpsb
mov
shl
in
push
jecxz
sub
scas
aad
cwtl
pushf
mov
nop
loop
fadd
inc
lea
stos
leave
test
imul
jns
inc
adc
in
xlat
aad
dec
xorl
mov
fwait
sbb
pop
imul
pop
push
jmp
dec
and
mov
scas
sarl
cwtd
fisubl
mov
dec
call
pop
push
mov
bound
adc
add
push
xchg
loop
and
cmp
gs
sbb
cmovne
mov
mov
cs
jae
test
jge
popa
jns
int
adc
push
mov
pop
fnsave
scas
xor
faddl
call
pop
in
adcl
mov
in
mov
push
std
sbb
add
push
xchg
push
outsl
jp
xchg
ficomps
jmp
imul
pop
les
fadd
push
xchg
mov
js
mov
mov
daa
inc
inc
lods
mov
push
js
sub
xchg
inc
rolb
andb
stos
and
imul
dec
push
stc
push
enter
push
sahf
and
inc
inc
fsubp
sbb
and
mov
mov
ret
mov
inc
gs
cmpsb
cmp
add
push
or
xchg
mov
jmp
dec
fistpll
arpl
pop
jp
adc
or
mov
sub
repnz
xchg
popl
inc
cmc
xchg
pop
fisubrs
mov
dec
push
das
imul
loop
xchg
add
jg
cwtl
mov
pop
aaa
lds
rcr
ret
xor
pop
pop
out
setno
test
mov
inc
adc
mov
pop
ja
pop
fmull
rcll
sbb
pop
lods
adc
pop
lds
adc
pushf
testl
in
push
mov
test
out
pusha
clc
inc
push
dec
inc
je
fnstsw
add
into
mov
mov
inc
in
xor
xchg
push
sahf
rorb
rorb
data16
jo
xchg
mov
lret
cmpsb
add
es
popf
enter
notb
xchg
imul
lock
inc
push
pop
mov
mov
cmp
push
adc
fistpl
es
fidivrs
subl
addl
pop
dec
sbb
cmp
mov
mov
push
das
aam
aam
movsl
in
int3
mov
push
ficomps
cmpsl
or
sti
lods
fbld
cltd
je
sub
mov
ficoml
loop
stos
and
pop
adc
xor
leave
arpl
mov
in
add
frstor
push
test
repnz
jbe
lahf
jnp
inc
sub
jo
cmpsl
jl
xor
ds
jl
movsb
xchg
ds
jmp
sti
dec
mov
pop
mov
arpl
xchg
daa
push
cmp
aam
dec
mov
sbbl
mov
loop
sbb
mov
in
pop
repz
xor
in
mov
das
fidivrl
not
out
push
ds
mov
or
aam
outsb
test
adc
iret
loopne
int
cltd
and
jne
or
pop
cs
xor
ljmp
mov
push
xor
movsb
push
loope
cmp
ss
mov
leave
in
inc
jmp
loop
mov
push
mov
lret
adc
ret
jb
js
pop
pop
fstp
pushf
ljmp
or
mov
scas
outsb
mov
movb
aaa
call
fbstp
rclb
sbb
and
out
fisttpll
cs
mov
mov
pop
lods
sbb
clc
sbb
mov
mov
sub
fsub
repnz
roll
stc
push
cmc
cld
mov
addr16
lahf
add
push
pusha
xchg
mov
xor
lea
mov
mov
mov
xor
add
imul
mov
xor
jmp
adc
iret
cmpsl
aad
jae
jl
jge,pn
sub
aaa
lret
jo
jle
jo
and
mov
cmp
int3
or
into
sahf
inc
adc
adc
sbb
push
sub
mov
into
mov
xchg
mull
aam
in
push
or
dec
std
mov
gs
push
push
out
lds
inc
pop
adc
or
jbe
jne
lds
repnz
insb
pop
fstpl
or
fucom
mov
cli
ret
insb
fmull
cmp
jb
ret
and
cld
sahf
sbb
inc
movsb
sbb
mov
roll
mov
mov
movl
fistpl
jns
mov
push
pop
xor
inc
jl
add
mov
dec
les
mov
ret
lcall
iret
aas
in
mov
mov
dec
jg
mov
mov
cmpsb
sbb
push
outsb
and
mov
lahf
mov
or
jge
lcall
sub
int3
mov
cmp
add
sub
adc
insl
mov
pop
clc
cwtl
sub
pop
movsl
dec
cmp
aad
lods
lret
lock
push
or
xchg
sahf
pop
nop
mov
call
lcall
shll
cmp
jnp
bound
pop
jns
daa
pop
or
sbb
fwait
jns
cmpsb
das
and
cmpsl
xor
mov
xchg
lcall
cmp
xorb
cltd
imul
xchg
sub
pushf
mov
inc
jnp
sbb
mov
es
daa
jge
pop
test
cmp
dec
adc
lods
push
sub
add
pushf
repz
push
pop
dec
scas
lahf
repnz
fsubrs
stc
stc
mov
sub
cli
mov
mov
aam
adc
xchg
inc
adcl
movsb
mov
sub
pop
aas
xchg
scas
scas
add
fcoml
adc
fisttps
inc
jl
and
or
sbb
sti
or
test
mov
neg
xchg
xchg
scas
icebp
and
enter
lahf
das
cmp
gs
mov
mov
mov
inc
aas
in
in
or
test
xchg
pop
pop
pusha
std
push
cmp
ja
and
cld
das
jp
fbstp
add
jp
xor
loop
clc
adc
ljmp
movsl
push
pop
pusha
aam
dec
inc
data16
or
orb
or
adc
sbb
ret
movl
sbb
xor
mov
lea
cmp
jne
mov
jmp
mov
mov
xor
add
mov
xor
lea
add
call
xor
inc
cmp
je
jmp
or
shll
jno
jmp
lds
pushl
adc
jo
jle
jo
fmul
hlt
gs
xchg
repnz
out
xor
movsl
and
cli
jp
jecxz
jb
sarl
xorl
stc
fcoms
into
cmp
lahf
stos
cld
jne
rclb
sub
dec
rolb
push
cmp
xor
ret
sub
jp
inc
jl
cmpsl
fbstp
and
cli
sub
sub
lds
xchg
incl
adc
jl
xchg
push
jecxz
add
imul
push
lcall
pop
fsts
inc
adc
pop
sub
jmp
es
jne
xor
lret
and
mov
push
daa
out
aas
xchg
bound
adc
or
sbb
mov
pop
pop
pop
rcrl
xchg
pop
jne
adc
out
adc
shrb
xchg
fsubrs
mov
iret
repz
add
cmc
push
inc
imul
or
mov
xchg
frstor
mov
mov
pop
daa
cmp
pop
mov
mov
push
push
jl
mov
rcrl
or
adc
cld
cmc
fadds
in
inc
mov
cmpsb
rolb
int
pop
in
jae
pop
mov
inc
insb
and
outsl
add
hlt
xchg
xchg
or
orl
jnp
mov
stc
subb
mov
sub
and
cmpsb
adc
pop
cmp
mov
rcr
jnp
in
push
shl
sub
add
pop
lods
xchg
add
lcall
movsb
stos
jnp
xor
inc
mov
lods
mov
ficoms
scas
and
adc
clc
push
lcall
or
xor
mov
xchg
out
call
ljmp
jbe
mov
sub
jo
and
outsl
fisttps
cmp
cmpxchg
popf
cli
mov
add
insl
fiadds
sub
gs
dec
mov
adc
mov
mov
adc
ljmp
ljmp
mov
enter
xor
dec
push
add
sub
push
ljmp
xchg
test
movsb
repz
lock
pop
fs
inc
mov
insl
jno
rclb
enter
enter
cmp
bound
insl
sti
dec
mov
xchg
pop
in
fcmovnb
add
mov
lds
scas
xchg
cmp
cmp
add
inc
xchg
sub
jmp
cmc
icebp
lret
mov
test
jnp
pusha
pop
xor
jo
jle
jo
add
mov
cmp
imul
lds
pop
jno
jp
add
sti
es
inc
push
fcomps
movsb
or
imul
outsb
mov
fimuls
je
sub
push
mov
push
ret
clc
gs
mov
dec
adcb
imul
jb
fsts
mov
loope
cmp
pop
sub
jle
xchg
mov
in
mov
aam
mov
and
sub
imul
sbb
xchg
scas
testl
in
ja
loop
pop
jl
in
shll
loopne
mov
popf
lods
ljmp
fistpl
adc
es
je
lret
jns
outsb
add
leave
fld1
test
mov
mov
dec
xchg
dec
mov
and
dec
xchg
mov
movsl
dec
cwtl
mov
xchg
and
mov
lahf
mov
lock
dec
in
lds
test
fwait
jne
cmpb
movsb
mov
fldl
mov
outsl
pop
shlb
pop
pop
iret
loop
dec
push
test
pop
sub
std
sar
pop
push
dec
lods
stos
add
shlb
cmpsl
call
add
sub
data16
roll
sbb
je
rcrb
sub
fcomps
into
xchg
fxch
je
ret
outsb
insb
test
cmp
fcomps
notl
in
test
insl
call
subb
push
lock
jbe
adc
jno
ret
jge
adc
cwtl
xor
movl
test
fstpt
fs
adc
insl
pop
cmpb
sahf
push
and
sub
pushf
stos
pop
or
imul
fwait
insl
test
or
rclb
jecxz
mov
sub
adc
sub
cmc
pop
xchg
sub
pop
lods
or
fwait
jo
gs
out
jo
dec
mov
sbb
xlat
bnd
xor
lods
mov
inc
imul
cmc
shll
aam
cmp
jae
jae
lcall
sahf
push
dec
pushf
lods
andb
addr16
pop
ja
ret
mov
iret
or
ss
fwait
pop
lods
imul
rorb
xchg
aas
pop
push
in
call
push
int
enter
outsl
addr16
mov
lds
hlt
aad
push
cwtl
mov
outsl
jle
pushf
mov
lret
iret
mov
jno
insb
cmp
in
std
flds
mov
call
add
iret
or
inc
add
ljmp
insb
mov
mov
dec
jb
popf
and
nop
mov
add
add
std
fs
jno
mov
or
clc
movsl
pop
jg
mov
jb
sub
push
jno
add
rorl
movsl
jg
xchg
xchg
int3
fwait
pop
mov
jge
jecxz
push
hlt
cmp
adc
popf
push
push
mov
pop
adc
pop
fisubl
stos
fwait
push
stc
je
push
adc
sbb
push
mov
xor
lahf
rolb
insb
sbb
hlt
cs
sahf
movsb
nop
rcll
push
sub
orb
mov
repnz
fs
nop
push
and
jge
out
gs
jns
and
sahf
xchg
rorb
mov
ds
ljmp
cmp
pop
out
mov
push
aas
arpl
or
jle
lcall
repz
divb
repz
ljmp
xchg
push
or
adc
mov
sbb
mov
xchg
pushf
cmp
std
jge
cld
cmp
mov
sahf
mov
inc
std
mov
dec
popa
std
push
inc
ret
dec
mov
sbb
or
bound
add
scas
shlb
in
pop
cmc
ret
push
mov
and
dec
sbbb
lret
add
mov
cmpsl
push
mov
out
fcomi
sub
cmp
das
ja
mov
mov
scas
mov
xor
es
xor
sub
add
pop
loopne
inc
aad
movsl
sbb
pop
mov
int3
daa
popa
out
call
popa
aaa
testl
mov
call
mov
aaa
mov
lret
push
xor
sub
mov
add
lock
aam
mov
xchg
add
mov
jne
movsl
stos
test
rcll
stos
shll
and
dec
loop
mov
xor
stos
add
cmp
or
ret
or
sahf
pop
adc
les
insb
test
scas
cmpl
mov
pusha
jns
pop
pop
fisubs
insl
xchg
out
jg
jecxz
scas
lock
inc
cmc
and
popa
fwait
push
push
fiadds
inc
push
lret
dec
mov
lahf
jmp
shll
xor
lock
jle
dec
lahf
frstor
and
stos
sbbb
es
ret
xchg
cmp
inc
in
xchg
fs
js
jge
inc
repnz
inc
and
dec
dec
pop
in
pop
mov
repnz
add
push
lret
jbe
and
cmp
push
outsb
xchg
mov
jne
vfrczpd
and
cltd
call
cmp
in
sub
aad
push
test
testl
dec
mov
jmp
outsb
ds
loopne
outsb
outsb
mov
and
out
sbb
jo
jle
jo
adc
pop
repz
dec
adc
add
leave
cltd
dec
sub
add
adc
shl
xor
xchg
dec
cmp
ret
enter
or
data16
jb
popa
rolb
outsb
imul
std
push
mov
sub
cltd
jnp
and
push
sbb
pop
ret
loope
sahf
dec
and
cld
je
adc
or
lahf
iret
jne
sbb
mov
cmp
pop
and
jb
les
icebp
mov
mov
pop
leave
inc
and
cmp
lock
or
push
fcoml
lock
outsl
sub
dec
cmp
jmp
add
gs
cld
mov
outsb
pop
inc
mov
and
adc
testl
mov
adc
aaa
test
inc
shrl
loopne
adc
mov
or
jo
cmp
jecxz
fistpl
pusha
insb
es
popf
xchg
mov
hlt
adc
lods
xchg
jb
mov
outsl
add
bound
repnz
movsb
adc
sub
lcall
outsb
jbe
sbb
sahf
mov
xor
cmp
cwtl
or
cmpsl
and
call
xor
push
fidivl
pop
fldenv
insb
sbb
push
scas
in
mov
adc
test
pop
mov
fwait
out
idivb
push
imul
pop
mov
out
or
jge
push
popa
mov
jo
cmp
mov
cli
adc
scas
out
sar
fcomip
push
test
sbb
push
and
jle
push
cwtl
mov
sbbl
sbb
clc
ds
xlat
jp
loopne
sub
or
push
cmp
and
testb
sub
out
xlat
xor
pushf
sub
dec
push
push
test
pop
data16
inc
movsl
mov
enter
rolb
mov
cmp
jo
sbb
adc
mov
fnsave
icebp
jno
jle
rolb
jae
inc
pop
sub
pop
jnp
mov
in
imul
fwait
loopne
add
cmpsb
adc
add
xorl
inc
outsl
shl
arpl
inc
push
jae
adc
or
scas
pop
xchg
ljmp
pusha
je,pn
sub
add
js
sbb
mov
jbe
out
push
mov
push
out
jns
xor
add
outsb
add
clc
stos
mov
jne
lcall
lahf
ljmp
rcll
dec
loope
cmp
imul
add
xchg
push
xor
mov
jmp
cmp
push
add
data16
and
add
inc
aaa
sbb
mov
xchg
mov
ficoms
sbb
bound
lds
mov
sub
shl
xchg
xchg
pop
adc
test
jp
incl
int3
xor
in
or
insl
pop
adc
mov
cmp
pop
sub
and
loopne
mov
push
negb
xchg
pop
mov
xchg
sub
jg
lods
sbb
jae
mov
pop
test
ja
lcall
aad
outsb
push
fcompl
aas
fisttps
add
push
scas
flds
inc
mov
out
ret
mov
mov
xchg
inc
int
int3
daa
jle
add
mov
mov
sbb
cmp
push
pop
mov
adc
fisubrl
popa
mov
mov
sub
imul
dec
pop
movsl
jae
inc
inc
jne
pop
mov
fwait
shl
jns
bound
jp
push
ror
jg
cs
pop
mov
fsubrl
dec
leave
xor
fs
int3
movsl
call
int3
push
loope
jecxz
ljmp
cs
fiadds
inc
mov
cmpl
xchg
loopne
aas
sub
rcr
sbb
ss
lods
jne
jns
fcmovnb
movsb
mov
push
lret
stos
int3
xchg
int
lret
cmc
push
lea
jbe
ja
dec
cmp
adc
dec
push
xchg
push
scas
pushf
cmp
push
fcmovnu
jl,pn
nop
sub
sbb
jnp
push
adc
loope
fiaddl
out
jmp
imul
adc
pop
insl
scas
and
push
sub
sub
mov
and
cmp
mov
test
push
sti
shrl
push
iret
lret
imul
cmp
jl
inc
mov
dec
stos
sub
sbb
sub
push
jo
aaa
jmp
out
fyl2xp1
roll
les
add
adc
std
lods
mov
pop
aam
ficomps
xchg
add
jbe
xor
in
mov
test
sti
add
push
dec
pop
aad
test
dec
pop
and
scas
cmp
fdivp
xchg
push
xor
pushf
or
and
sub
popl
out
movsb
shld
pop
imul
mov
jne
jae
xor
mov
mov
int
or
cmpb
in
imul
xlat
in
or
mov
push
mov
mov
mov
decl
push
cmp
add
xchg
stc
dec
inc
add
dec
jmp
fsubp
stos
mov
insb
leave
pop
sub
cmp
jo
jg
mov
push
fnstsw
std
xor
and
sbb
pop
pop
hlt
in
loopne
rclb
mov
pcmpgtb
shll
out
mov
repz
cld
pop
ds
gs
aad
int3
jnp
jnp
js
add
scas
push
xchg
sbb
jg
loop
pushf
dec
adcl
cwtl
ret
inc
pop
adc
cmp
jb
aam
jmp
xchg
lahf
lea
mov
adc
in
test
and
out
shlb
aas
out
loopne
mov
mov
add
push
loopne
mov
popf
enter
pop
out
arpl
pop
je
pop
dec
outsl
and
pop
dec
pop
shr
cs
inc
jmp
sbb
sti
pop
mov
or
in
add
mov
inc
mov
mov
sbb
mov
imul
iret
xchg
aas
mov
jmp
je
mov
sarb
ret
adc
imul
mov
mov
ret
inc
xor
mov
mov
outsb
sahf
sub
xor
inc
por
push
nopl
inc
scas
mov
xchg
mov
out
lcall
pop
push
push
jns
out
xchg
push
xorb
addl
or
andb
int
sti
andb
mov
dec
cmp
rcr
add
repnz
adc
movsl
mov
sbb
insb
pop
mov
negb
sub
mov
mov
xor
fisubrs
repz
repnz
mov
not
arpl
jle
movsb
pusha
jmp
cmp
mov
dec
lea
lods
cld
test
scas
pop
and
lret
mov
arpl
jb
adc
jmp
pop
insb
cwtl
imull
add
imul
loop
and
out
push
cmp
sub
and
xor
dec
lret
cwtl
push
jo
loope
cbtw
jb
jo
jb
mov
ja
ret
lods
inc
fcmovbe
imul
add
xor
hlt
lahf
pop
xorb
sbb
jns
in
adc
add
add
add
sub
jmp
fsubl
dec
fidivrl
push
xchg
adcb
add
dec
xor
inc
std
mull
inc
ficoms
dec
test
fisubl
cmp
mov
inc
xor
clc
int
test
and
xchg
cmp
jge
add
std
test
test
mov
dec
xchg
xchg
pop
mov
rcll
aam
inc
xor
add
pop
mov
pop
jmp
cld
pop
cmpsl
addr16
gs
mov
and
jo
jle
jo
cltd
sahf
sti
mov
xor
xor
cmpsl
inc
test
sbb
pop
pop
in
adc
xchg
sub
add
sbb
xchg
mov
ss
sub
out
jmp
adc
mov
sbb
jnp
xlat
pop
jo
cmpsb
enter
sahf
nop
cmpb
mov
fstps
jl
and
inc
mov
cmc
adc
cmp
push
cmp
aaa
popl
loop
adc
dec
scas
movsl
jbe
xor
pusha
cld
push
sub
xchg
push
test
sbb
jge
and
jle
lock
jns
push
outsb
sub
mov
cld
int3
jno
inc
sub
dec
aaa
inc
imul
or
jp
mov
call
aam
xchg
sbb
pminsw
mov
popf
mov
leave
inc
push
jb
inc
dec
jmp
cmp
cmc
fcoms
test
int
jp
sbb
mull
gs
dec
dec
cmp
cmp
xor
dec
scas
stc
xlat
inc
in
mov
xchg
cmp
adc
cmp
mov
in
sub
and
mov
mov
pop
or
cs
filds
or
cmp
xor
das
dec
andb
fwait
lock
call
dec
js
xchg
dec
inc
jne
or
dec
lods
gs
nop
push
iretw
pop
pop
push
in
pop
idivb
push
int3
scas
mov
jno
sub
outsb
sub
sti
mov
imul
sub
jecxz
pushf
xchg
sub
pop
sbb
mov
cli
sbb
and
jmp
enter
in
cmp
add
cli
mov
or
dec
mov
xchg
inc
loope
scas
adc
pusha
push
icebp
adc
fsubrl
push
das
imul
cs
and
data16
sub
cmpsl
push
adc
mov
std
cmp
inc
or
jle
xchg
mov
imul
bound
fxam
and
mov
sbb
lahf
jmp
jno
and
inc
nop
daa
or
outsl
aaa
inc
es
cmp
jbe
sbbl
or
scas
arpl
push
xchg
add
sbb
add
xchg
mov
loop
pop
rcrl
fidivs
sub
mov
push
test
rcrl
nop
dec
sub
out
fdivl
push
insb
pop
insb
and
inc
lock
or
dec
je
out
lahf
cmpsl
cltd
call
imul
pop
pop
leave
ret
dec
push
mov
mov
or
dec
add
add
add
movl
xor
test
enter
mov
hlt
test
pushf
enter
movl
inc
inc
cld
xor
or
mov
call
pop
mov
dec
mov
pushl
or
ljmp
dec
loopne
rorb
add
mov
hlt
add
enter
dec
add
mov
orl
xor
lret
enter
mov
lea
push
mov
fs
decl
push
and
pop
inc
mov
push
pop
cld
dec
lea
mov
add
movl
decl
xor
cld
dec
jne
lea
push
mov
or
add
sub
add
rolb
inc
add
add
mov
incl
lea
call
add
jne
decl
dec
add
xchg
loopne
inc
incl
mov
xor
add
enter
mov
hlt
add
mov
add
add
incl
sbb
jne
mov
mov
movl
incl
fisttpll
test
inc
aas
inc
lea
inc
mov
mov
cld
in
inc
jmp
fisttps
jecxz
out
incl
out
aas
inc
ljmp
incl
movl
insb
test
pandn
aas
add
mov
incl
or
mov
xchg
fildl
mov
cmp
dec
leave
mov
fsubrs
add
lea
push
add
mov
mov
add
mov
cld
push
decl
push
mov
call
mov
cld
add
test
in
in
cld
jge
mov
fsub
add
mov
add
add
mov
inc
push
fisttps
test
fadds
jmp
fildl
inc
jo
test
jmp
incl
in
add
jne
mov
cld
incl
mov
mov
add
call
ret
cld
incl
out
xor
mov
cld
jo
or
add
push
add
mov
decl
add
inc
orb
add
mov
mov
inc
sub
add
rolb
jne
xor
incl
call
mov
call
xor
push
adc
loopne
ret
loopne
xorl
cmp
bswap
rolb
jmp
mov
add
cld
jne
xor
push
add
add
inc
add
mov
test
add
incl
jmp
adc
mov
pushf
mov
lea
xor
call
call
jne
xor
add
pushl
call
int3
incl
mov
xor
add
xchg
in
add
add
add
mov
mov
or
inc
test
je
mov
xor
push
or
inc
in
mov
mov
fmul
add
mov
cld
loopne
inc
push
cmp
movaps
cld
fadds
jne
push
in
jne
lea
das
mov
mov
mov
xor
adcl
rclb
inc
lock
inc
xchg
ud0
incl
lret
jbe
mov
push
pop
mov
inc
lret
inc
iret
jb
mov
enter
xor
pushf
mov
xor
dec
add
inc
mov
xor
add
mov
fmuls
xor
mov
roll
xor
mov
clc
enter
mov
test
clc
incl
cmp
pushf
or
enter
xor
pushf
inc
ds
pushf
inc
mov
lock
add
mov
sarb
adc
dec
adc
add
jmp
jb
add
xor
xor
add
clc
enter
pop
mov
push
push
xor
xor
add
add
lret
repnz
cli
fdivr
test
dec
inc
xor
add
mov
mov
clc
jne
mov
into
into
scas
dec
mov
sub
cmp
mov
mov
mov
add
xor
xor
lret
mov
inc
add
mov
lods
test
xor
mov
lock
bswap
lret
test
jmp
add
push
mov
test
push
clc
xor
xor
add
add
push
dec
mov
stc
roll
scas
mov
xor
xor
add
mov
clc
lret
into
mov
mov
mov
int3
add
xor
xor
add
mov
lock
stc
mov
or
jmp
dec
dec
mov
clc
test
clc
rorl
mov
call
les
lret
ja
mov
dec
xor
mov
clc
push
lret
mov
adc
jb
add
call
cmp
movsb
pushf
inc
xor
mov
clc
dec
lret
mov
call
scas
mov
pushf
sub
cmp
lods
xor
add
mov
mov
cmp
jb
add
dec
scas
mov
shrl
into
cmp
mov
dec
dec
mov
lret
xor
add
imul
mov
xor
mov
add
mov
inc
rdtsc
xlat
pushf
jge
xor
sub
cmp
jb
add
rorl
xor
add
jmp
mov
dec
into
mov
pushf
shll
lret
or
add
in
push
mov
fs
dec
sub
dec
xor
jge
mov
add
dec
decl
adcb
add
jge
push
push
shlb
xor
xor
inc
add
dec
or
jbe
mov
ror
enter
decl
push
lret
push
mov
mov
cld
subb
sti
add
push
lcall
bswap
pop
inc
decl
push
xor
movl
aas
push
inc
xor
add
mov
jmp
mov
les
mov
mov
cmp
mov
add
xor
pushf
lret
cmp
call
inc
inc
mov
mov
enter
add
add
clc
enter
push
pushf
mov
int3
or
test
clc
gs
add
push
xor
sub
dec
add
mov
or
cmp
dec
out
xor
mov
dec
add
push
push
add
sbb
mov
xor
dec
inc
xor
add
push
dec
mov
lret
into
sub
dec
adc
inc
push
test
unpcklps
jmp
add
movl
xor
rolb
clc
fs
mov
xor
sub
mov
add
sub
mov
mov
clc
addl
lcall
inc
decl
test
decl
push
add
dec
or
rorb
into
add
mov
sar
adc
clc
fadds
mov
push
adcb
add
lret
mov
cld
mov
into
add
jne
incl
rclb
push
mov
mov
sar
or
push
add
pushf
xor
pushf
mov
test
clc
inc
inc
mov
sub
mov
dec
xor
mov
xor
orl
shll
int3
lea
push
xor
pop
lods
incl
mov
pushf
jo
cmpl
inc
add
push
in
inc
push
mov
cld
add
adc
add
jmp
add
mov
dec
push
cmp
unpcklps
jne
decl
mov
shlb
inc
add
lret
decl
stc
in
or
dec
clc
xor
mov
rolb
inc
add
clc
inc
lret
mov
in
lret
into
into
scas
dec
mov
sub
cmp
mov
int3
test
xor
xor
lret
mov
inc
add
mov
xor
mov
call
lret
test
jmp
add
push
mov
mov
lret
xor
add
add
push
dec
mov
stc
roll
scas
mov
xor
xor
add
mov
clc
lret
into
mov
test
push
jbe
mov
mov
push
add
rdpmc
lret
add
dec
stc
mov
or
jmp
dec
dec
mov
clc
test
clc
rorl
mov
lock
inc
mov
hlt
pushf
jge
sub
cmp
ja
mov
dec
xor
mov
clc
push
lret
mov
adc
jb
add
lock
sub
mov
mov
mov
mov
lock
ror
push
scas
mov
pushf
sub
cmp
movsb
xor
add
mov
mov
cmp
jb
add
dec
scas
mov
shrl
into
cmp
mov
dec
dec
mov
lret
xor
add
imul
mov
xor
mov
add
rolb
rdtsc
xlat
pushf
jge
xor
sub
cmp
dec
xchg
incl
jmp
mov
dec
into
mov
pushf
shll
lret
or
add
in
push
mov
fs
dec
sub
dec
xor
jge
mov
add
dec
decl
inc
push
decl
lea
mov
push
mov
les
add
incl
mov
cld
lret
add
jne
in
ror
scas
into
add
not
adc
inc
push
mov
push
mov
fdivr
sti
sbb
pop
xchg
leave
pushf
add
push
cmp
sqrtps
decl
push
cld
xor
lret
clc
xor
add
hlt
or
mov
hlt
dec
add
leave
mov
push
roll
mov
mov
lar
push
lret
jne
mov
or
mov
cld
inc
mov
add
in
test
fdivr
ret
cld
mov
clc
xor
mov
loopne
mov
mov
clc
jne
call
and
je
mov
cld
or
push
add
add
inc
push
mov
pop
mov
ret
push
mov
clc
lock
jne
jne
mov
faddl
jne
cmp
pop
mov
push
inc
lea
inc
inc
int
inc
cld
jo
inc
xchg
mov
mov
or
inc
inc
mov
cld
jmp
mov
mov
rclb
iret
inc
leave
decl
mov
mov
mov
push
nop
incl
push
leave
iret
add
push
jmp
inc
push
mov
in
push
sbb
add
mov
cmp
jne
push
pop
push
mov
or
add
sub
int3
jne
add
sbb
mov
lea
push
enter
testl
enter
negl
or
inc
loope
sub
inc
loope
add
push
push
imul
adcl
add
lea
mov
cmp
jne
mov
in
add
out
inc
aas
jmp
lock
and
mov
call
push
add
ud0
hlt
add
cmp
flds
out
call
cmp
shl
pop
fisttpll
push
add
add
push
add
sub
jne
lods
mov
dec
out
into
push
loopne
shrb
xorl
roll
mov
cmpl
mov
push
push
push
sub
push
adc
insl
mov
add
inc
mov
pop
addl
add
add
roll
cli
push
pop
lret
add
decb
sub
and
dec
inc
shll
add
pop
add
pop
dec
jmp
and
push
out
jmp
jmp
mov
decb
add
pop
icebp
mov
insb
adc
mov
or
mov
cld
jge
aas
and
adc
mov
and
dec
add
add
fadds
stc
enter
sbb
sbb
in
in
add
jne
cmp
jb
jmp
mov
add
add
jb
pop
faddl
or
inc
or
xlat
dec
push
add
leave
roll
add
mov
int3
jmp
mov
jne
mov
call
pop
add
pop
or
push
mov
int3
add
jae
int
enter
add
mov
push
pop
add
push
lea
mov
jb
mov
push
add
add
add
int3
jne
movsbl
add
add
mov
add
add
mov
sub
jb
add
jge
add
addl
jne
je
mov
rorb
orl
mov
mov
fadds
inc
pop
lea
push
out
add
add
mov
jb
add
push
call
add
jae
icebp
inc
mov
int3
out
loopne
sub
push
pop
push
jl
add
xor
mov
rcrb
rorl
inc
shr
orl
push
pop
add
jmp
mov
fdivrl
push
pop
call
mov
in
rolb
call
pop
enter
repz
xorl
je
or
jne
jmp
pushl
push
pop
cmpl
jge
mov
sub
pop
inc
mov
sub
lods
add
enter
repz
stc
jge
jnp
call
fadd
dec
insb
stc
cmp
push
mov
jne
mov
mov
add
sub
and
cmp
sbb
pop
call
fsubr
sti
add
add
add
roll
mov
clc
jne
mov
loopne
loopne
lods
int3
inc
mov
add
sub
shrb
add
call
add
dec
insl
in
lea
inc
inc
sub
orl
and
rorl
or
mov
stos
adc
inc
add
jne
mov
cmp
sub
sar
ljmp
sub
mov
mov
and
jne
sub
sbb
dec
push
add
ret
mov
leave
sub
ret
pop
push
rolb
addl
jb
ret
in
jecxz
push
xchg
jne
cmp
jne
mov
rorl
mov
pop
nop
mov
les
add
inc
mov
mov
cmp
or
inc
inc
xor
cld
add
add
add
sbb
dec
je
mov
add
and
jae
mov
incl
push
shr
in
push
add
add
inc
mov
add
push
cmovne
xor
push
pop
xor
pushf
add
rcr
inc
add
add
out
inc
inc
sub
dec
and
jo
leave
add
lea
ret
mov
xor
mov
sbb
stc
mov
ss
add
add
add
add
movb
or
dec
lea
or
movsl
fiadds
jae
or
in
pushf
inc
xor
pop
inc
shl
inc
sub
inc
add
add
loopne
inc
ret
inc
mov
leave
and
add
mov
sbb
sbb
stc
test
lea
mov
dec
sarb
add
inc
ljmp
or
jge
mov
clc
leave
inc
add
rdpmc
sbb
mov
cmovne
jmp
inc
mov
sbb
mov
add
out
add
sub
add
jo
leave
movl
inc
add
inc
out
stc
int3
jb
xor
or
dec
mov
movb
loopne
inc
lea
push
movb
xor
lea
inc
jae
ficomps
addb
test
incl
inc
add
test
jne
orl
jmp
inc
jne
mov
mov
shlb
push
mov
gs
add
inc
dec
into
mov
jl
add
inc
mov
add
add
inc
or
inc
in
fsub
inc
add
add
call
pop
test
dec
jmp
pushl
loopne
movl
push
incl
mov
cwtl
movl
sbb
rorb
inc
rorb
test
add
add
push
add
mov
incw
add
xor
push
cli
popw
push
xchg
sbb
test
callw
adcl
mov
mov
push
fsubl
dec
inc
mov
lret
fistl
ljmp
jmp
in
lock
mov
xor
add
stos
data16
incl
data16
inc
shlb
add
addl
mov
add
push
lea
addb
jge
mov
rol
mov
rorb
orb
test
push
mov
orb
push
xor
aam
test
cmp
data16
dec
test
xor
lahf
mov
mov
data16
sbb
dec
mov
mov
add
jne
test
jne
sti
sbb
cld
jmp
inc
mov
data16
push
incl
test
sbb
lock
pushl
xorb
add
xor
movw
mov
sbb
mov
add
add
xor
inc
add
add
inc
jmp
addl
or
jmp
push
in
test
xor
mov
mov
push
add
decl
add
decl
movsl
add
add
push
xor
xor
mov
push
push
jne
mov
sbb
jne
incl
add
add
mov
sbb
leave
test
jne
call
xor
mov
enter
mov
mov
sbb
sbb
mov
inc
decl
add
xchg
ret
add
add
mov
lea
add
mov
inc
rdpmc
jne
add
inc
call
add
orb
ret
incl
add
cmp
pushl
add
test
je
mov
sbb
test
js
add
sub
mov
add
dec
push
mov
mov
mov
cld
or
dec
incl
push
add
mov
orl
add
push
xor
inc
mov
push
incl
inc
add
addb
mov
lea
je
decl
call
mov
hlt
call
mov
cwtl
mov
mov
addl
mov
inc
jmp
ljmp
mov
and
pushl
lcall
add
enter
add
adc
add
mov
xor
jmp
mov
in
inc
or
decl
jne
mov
mov
lock
xchg
jmp
adc
inc
mov
push
sub
push
test
inc
dec
mov
movl
add
add
mov
push
roll
bound
xor
sub
push
lea
jne
incl
jnp
mov
fs
sbb
out
or
ret
inc
decl
test
clc
lcall
or
inc
dec
incl
add
call
add
push
adc
mov
mov
addl
incl
inc
stos
mov
add
mov
cmp
movsb
mov
sbb
addb
call
xor
pop
inc
xor
pushl
mov
pushl
mov
sub
add
mov
mov
ret
mov
ret
mov
add
mov
xor
sar
test
inc
add
testb
push
add
add
add
add
add
mov
mov
sbb
jne
mov
xorb
add
cld
add
mov
cld
add
lret
add
sbb
dec
or
dec
sbb
inc
dec
mov
sbb
nop
scas
add
add
mov
add
mov
cmp
xor
gs
je
push
sarb
mov
push
cmp
add
dec
mov
in
adc
pop
inc
leave
or
gs
add
into
in
enter
push
xorl
or
jnp
test
add
mov
ltr
decl
clc
out
add
cmp
jge
jb
je
pop
push
mov
in
roll
orl
cmpl
hlt
mov
push
jns
lock
ror
test
dec
rcpps
mov
inc
test
je
mov
adcl
and
jp
rcpps
add
sbb
add
je
cmp
js
add
jns
vmread
add
adc
jge
mov
add
or
push
push
mov
add
pop
add
mov
inc
pop
xorl
add
push
clc
mov
jp
add
divl
test
je
mov
or
decb
jbe
mov
add
cmp
add
je
mov
mov
hlt
orb
jb
jmp
xor
pop
pop
pop
ret
ret
mov
xorl
pushf
xor
wrmsr
test
dec
ret
mov
pop
dec
jne
xor
inc
dec
jbe
inc
pop
add
push
dec
push
mov
and
jo
mov
sbb
mov
nop
or
jne
cmp
xor
add
cmp
js
jae
xor
jmp
mov
fdecstp
test
add
add
mov
cmp
adc
jge
mov
jl
clc
dec
jge
mov
jb
mov
mov
xor
add
mov
inc
pop
jge
cmp
mov
imul
fimuls
fists
in
jne
mov
imul
fdivrp
filds
test
inc
mov
mov
adc
rcll
mov
fiadds
mov
mov
xor
mov
xlat
into
ffreep
lret
iret
dec
inc
mov
fmull
dec
jnp
add
mov
inc
dec
lea
add
jb
add
inc
imul
cld
clc
mov
incl
or
sbb
lret
add
dec
add
enter
inc
pop
decl
add
add
mov
xor
or
pop
cltd
push
clc
mov
xor
add
cmp
hlt
cmp
or
mov
loopne
mov
cld
pushf
pop
pushf
mov
lock
adc
orb
xor
dec
mov
iret
inc
jne
mov
cmp
je
add
or
dec
inc
mov
cld
add
cmp
mov
or
mov
or
inc
xor
pushf
call
jne
mov
fcomps
add
incl
cld
add
mov
cld
inc
fidivrs
fbstp
mov
adc
fadd
add
mov
inc
mov
loopne
sbb
sbb
pushf
add
mov
cwtl
inc
inc
jne
mov
clc
add
mov
or
inc
lea
add
inc
rorl
add
shufps
jmp
xor
hlt
mov
fadds
xor
add
cmp
pmuludq
jmp
mov
or
inc
mov
jne
mov
clc
add
xor
jne
pushl
add
mov
cld
add
xor
mov
adc
sub
lea
add
jb
add
inc
add
inc
mov
or
mov
in
scas
inc
mov
in
add
mov
dec
mov
mov
cld
push
dec
add
mov
in
cmp
mov
mov
mov
xor
cmpl
xor
jmp
add
xor
add
cmp
mov
mov
adc
jmp
mov
cld
mov
push
jne
dec
or
push
inc
in
add
or
dec
cld
mov
xorl
pushf
decl
mov
mov
xor
mov
inc
mov
mov
call
add
call
push
xor
pmulhuw
test
mov
mov
xor
xor
xor
add
inc
mov
movl
sub
lock
mov
mov
or
ja
mov
cld
cli
mov
cmp
bswap
mov
mov
clc
repnz
push
xor
xor
pop
jmp
mov
xor
lea
xor
pushf
out
neg
insl
test
clc
pop
inc
or
xor
add
jne
mov
in
push
xor
add
cmp
add
mov
mov
add
mov
mov
pushf
pushf
xor
jne
mov
icebp
icebp
shl
mov
pop
jne
mov
in
jmp
add
mov
or
inc
jne
mov
ret
or
jge
sub
xor
add
mov
clc
negl
xor
cmp
repz
xor
add
mov
mov
cld
lock
test
clc
add
fdivrp
test
jnp
add
jae
sub
shll
leave
call
in
in
add
mov
in
test
mov
xor
pushf
jnp
xor
push
loopne
jne
mov
add
xor
mov
cld
jb
add
jne
mov
jge
mov
lock
xor
mov
lock
jge
xor
dec
mov
loopne
jge
add
icebp
add
dec
hlt
xor
mov
in
jge
mov
dec
pop
xor
inc
hlt
xor
mov
repnz
cmp
test
fistps
inc
mov
add
inc
test
add
add
ret
jnp
inc
inc
xor
fdivl
test
push
add
cmp
setl
mov
call
or
inc
mov
and
lock
movl
mov
clc
xor
mov
inc
mov
mov
mov
mov
hlt
inc
rorl
mov
push
mov
in
jne
mov
addl
clc
mov
add
rolw
mov
jne
incl
inc
push
test
sub
add
and
add
mov
and
adc
inc
inc
push
add
add
enter
mov
add
add
str
lea
sbb
dec
cmp
inc
push
mov
push
add
mov
inc
add
add
mov
loopne
dec
mov
cld
push
xchg
add
add
or
dec
loopne
xchg
push
add
dec
jmp
mov
sbb
inc
xor
add
push
divl
and
add
jno
incl
inc
push
push
mov
mov
push
inc
enter
push
call
pop
push
mov
mov
push
jo
incl
or
call
fmull
mov
mov
adc
dec
xor
mov
mov
mov
push
lret
movb
inc
movntps
lret
into
dec
lret
mov
mov
fdivl
mov
push
mov
sbb
dec
sarl
push
jne
mov
lea
call
sbb
add
push
mov
push
mov
test
xadd
pop
add
mov
or
push
add
add
and
call
add
mov
add
xor
add
inc
je
push
cli
dec
mov
or
inc
add
data16
subl
add
add
enter
int3
loopne
rolb
lea
data16
add
sbb
inc
lldt
xor
sub
add
ror
dec
inc
cmp
cld
or
into
out
lret
dec
mov
loop
cmp
inc
daa
loop
out
add
add
push
inc
xor
add
push
push
inc
in
push
inc
sbb
rorb
addb
ljmp
xor
mov
fmuls
add
lea
add
popl
add
push
incw
mov
add
xor
test
inc
mov
add
or
or
inc
mov
jne
mov
add
add
adc
adc
push
mov
mov
inc
mov
or
push
jne
call
inc
sarb
out
add
add
and
fs
incl
jo
leave
scas
inc
add
orb
call
shr
xchg
add
add
dec
and
push
decl
mov
mov
lea
mov
add
mov
push
shlb
inc
in
jno
push
mov
mov
je
mov
sbb
popl
add
add
adc
jmp
sub
jne
mov
in
popl
push
incl
adc
add
call
and
and
inc
test
sldt
xor
pushf
jmp
mov
or
inc
call
mov
loopne
inc
add
mov
add
add
cmp
test
sbbl
jne
call
leave
rcrb
add
add
add
inc
mov
fcom
add
lea
pushl
call
mov
fstps
push
pop
mov
addl
mov
xor
xor
pop
or
inc
push
in
or
movsl
xbegin
clc
adc
divb
or
test
jno
add
adc
xchg
test
clc
data16
orl
rolb
mov
mov
push
add
push
jge
add
jne
mov
jmp
xor
pop
cvtdq2ps
ret
mov
xor
add
push
rdpmc
out
add
mov
ret
sbb
cmp
or
or
pop
inc
add
add
invd
jge
mov
cli
xor
mov
ret
mov
sub
inc
xor
pushf
inc
mov
hlt
test
mov
xor
dec
or
jne
mov
call
inc
mov
add
add
inc
mov
addl
inc
mov
lock
jge
mov
cli
xor
add
test
add
cmp
xadd
test
mov
xor
add
pop
loopne
inc
clc
xor
add
data16
mov
hlt
xor
data16
data16
cmp
ja
psubq
ltr
add
add
data16
mov
jge
data16
data16
mov
fdivl
data16
mov
mov
pop
or
clc
mov
lock
jge
invd
pop
add
cmp
data16
mov
pop
fbstp
test
add
add
jge
data16
pop
stc
bsf
mov
in
test
mov
call
ds
add
mov
call
add
mov
jnp
mov
mov
call
mov
data16
xorl
fisttps
cld
jne
xor
mov
sti
repnz
data16
push
xor
mov
pushf
data16
mov
mov
fisttps
or
mov
hlt
mov
add
dec
or
mov
or
mov
fdivrl
xor
pop
lock
lea
icebp
jb
add
jge
mov
fsubr
pop
mov
in
rcrl
jb
add
jge
mov
in
pop
data16
cmp
mov
fdivrl
cmp
mov
mov
lock
mov
or
clc
cmp
je
push
loopne
dec
mov
icebp
mov
pcmpgtd
add
jmp
mov
lock
rorl
or
jb
add
loopne
jne
data16
mov
data16
add
data16
retw
ret
lret
enterw
pop
jne
mov
call
xor
lea
repnz
add
xor
in
xor
movl
clc
add
pop
pushf
pop
call
mov
push
pop
mov
push
inc
add
add
into
fs
mov
ret
add
add
add
ds
add
into
ret
pop
adc
add
add
jne
lea
mov
sarl
test
mov
push
xorb
mov
xor
cmp
pop
mov
je
xor
mov
cmp
pop
cmp
jne
mov
cld
push
pop
inc
stc
test
clc
test
cmp
fs
or
add
add
push
lret
add
clc
add
dec
mov
push
add
xor
cmp
je
mov
push
lea
push
cmp
mov
add
sub
add
mov
jne
mov
xor
mov
push
cmp
jne
sbbl
clc
inc
pop
sti
add
cld
xor
mov
roll
mov
inc
in
add
mov
mov
push
mov
test
xor
pushf
sub
inc
sub
mov
inc
add
or
cmp
mov
cmp
je
push
dec
str
cmp
xor
mov
add
data16
push
add
jne
movl
clc
xlat
inc
mov
push
pushf
in
add
add
add
add
add
lret
lock
clc
inc
lret
cmp
ss
pushf
test
je
xor
rorb
push
add
jb
add
dec
mov
push
push
adcl
xor
mov
scas
ret
jns
mov
dec
or
ret
lock
mov
or
mov
xorl
mov
adc
iret
inc
movl
incb
ret
adc
clc
dec
fisttps
add
ret
lea
add
xor
pushf
add
add
inc
test
xor
push
pushf
push
xor
inc
cmp
jbe
mov
or
inc
test
xor
in
hlt
push
push
push
push
mov
pushf
pushf
xor
mov
or
mov
clc
jb
add
orl
addl
mov
or
inc
dec
mov
orw
xor
mov
mov
mov
mov
inc
dec
add
add
mov
clc
or
mov
clc
popf
incl
ret
adc
mov
hlt
test
clc
or
xor
pushf
jb
add
inc
daa
inc
inc
xor
dec
pushf
add
clc
cmp
or
add
xor
or
lea
or
enter
mov
cld
dec
push
sub
add
or
add
or
add
mov
inc
mov
cmp
xbegin
clc
or
xor
adc
lea
add
inc
add
add
je
push
or
dec
std
mov
mov
mov
or
inc
clc
mov
hlt
call
push
or
push
xor
mov
xor
pushf
inc
mov
or
add
inc
mov
or
inc
push
jmp
mov
mov
jne
jmp
mov
clc
lret
push
mov
mov
sub
decl
or
pop
ds
pushl
mov
mov
jmp
leave
jne
call
in
dec
add
add
inc
cmp
je
mov
or
add
or
adc
enter
rolb
mov
or
rorb
jmp
push
mov
cld
inc
inc
orl
push
push
mov
add
test
mov
adc
mov
mov
lock
fcoms
mov
push
enter
cmp
add
mov
call
cmp
jmp
push
call
mov
cld
or
call
add
xor
jne
cmp
jne
mov
or
pop
into
je
mov
or
mov
mov
mov
or
sar
xor
xor
pop
adc
ret
cld
inc
mov
cld
mov
push
pop
or
xorps
test
add
adc
addl
jmp
ror
inc
leave
xor
and
add
xor
xorl
mov
pcmpgtw
add
leave
mov
push
dec
mov
lea
xor
sysret
dec
rorb
pushw
jne
ud0
mov
lods
add
data16
iret
and
cli
inc
cmp
add
inc
pop
lea
mov
add
mov
mov
add
inc
data16
clc
int3
cmp
je
push
pop
xchg
data16
lea
jb
jmp
call
clc
xchg
mov
or
lea
push
inc
jge
mov
fdivs
incl
xor
xchg
ret
xor
cmp
data16
rolb
add
dec
xchg
push
jmp
push
add
add
mov
clc
dec
xchg
cmp
jne
xor
jmp
add
jne
call
clc
xchg
sti
add
add
xor
pop
mov
jmp
mov
cmp
cmp
lea
jle
jae
mov
lcall
inc
push
lea
mov
int3
push
xchg
add
add
inc
add
cld
mov
aam
xchg
mov
testb
mov
hlt
add
mov
decl
incl
mov
call
je
js
lock
mov
mov
sbb
clc
add
mov
rorb
dec
xchg
mov
in
jge
cmp
clc
pop
fistl
clc
add
mov
mov
mov
adc
add
adc
pop
sbbl
ret
cmp
mov
cld
add
add
add
sub
or
add
mov
push
push
clc
addl
out
add
jmp
cmp
jmp
je
mov
inc
add
add
add
pop
pop
push
inc
in
pop
in
cmp
xor
add
push
mov
in
dec
push
test
add
leave
inc
test
add
add
dec
push
mov
hlt
push
dec
leave
mov
clc
cmovge
mov
clc
popl
push
add
push
xor
cld
add
add
pushfw
add
add
mov
cmp
jne
xor
jmp
add
mov
or
mov
mov
mov
or
shl
icebp
addb
or
or
stc
shll
xor
inc
xchg
add
add
mov
test
sub
jmp
mov
lock
lea
mov
or
leave
add
dec
dec
test
paddb
add
dec
mov
mov
or
dec
xor
mov
adc
mov
call
mov
push
clc
or
push
lret
mov
mov
xor
cmp
lsl
call
or
dec
or
inc
xor
in
add
inc
pop
xor
testl
dec
adc
inc
xor
sub
test
clc
inc
add
hlt
leave
test
clc
inc
push
aaa
inc
pop
rorl
orb
mov
push
clc
ret
xor
xor
js
dec
push
mov
lock
lret
jne
mov
enter
lret
into
out
dec
dec
jmp
xor
xor
mov
sub
add
or
dec
mov
xor
jb
add
dec
pop
mov
cld
mov
call
stc
add
pop
leave
add
in
mov
xor
movl
mov
xor
pushf
inc
cmp
pushf
xchg
mov
ljmp
push
push
push
push
push
xor
mov
add
mov
clc
lret
cmp
pushf
mov
clc
cld
jne
xor
xor
or
add
hlt
dec
dec
je
xor
xor
add
add
rol
mov
in
inc
enter
icebp
mov
clc
lock
enter
lret
inc
jne
mov
cld
dec
enter
pushf
sti
xor
mov
mov
xor
xor
mov
mov
push
shr
in
cmp
add
pushf
mov
call
xor
pushf
popa
push
dec
inc
mov
clc
pushf
into
mov
in
call
pop
or
or
or
push
inc
cmpxchg8b
leave
loopne
test
mov
rcll
xor
add
and
mov
leave
sti
inc
decl
mov
clc
dec
iret
xor
jb
add
inc
mov
xabort
loopne
ljmp
mov
clc
lock
dec
mov
loopne
incl
mov
hlt
jne
mov
in
dec
or
jb
add
xor
add
mov
subl
mov
xor
pushf
mov
clc
add
mov
adc
inc
mov
mov
loopne
inc
mov
mov
nop
roll
mov
mov
dec
push
mov
xor
mov
mov
in
into
inc
iret
xor
add
mov
dec
mov
mov
mov
mov
xor
mov
clc
enter
mov
lock
mov
cmp
rol
enter
inc
adc
inc
clc
xor
add
mov
roll
add
push
mov
fsubr
inc
mov
adc
add
inc
test
xor
fmuls
test
cld
or
dec
ret
push
inc
dec
mov
mov
push
jne
mov
call
mov
mov
clc
mov
xor
adcl
inc
push
mov
clc
incl
mov
clc
rolb
je
mov
jne
lea
mulb
decl
fadds
inc
jmp
mov
roll
mov
lock
dec
ret
mov
mov
mov
fadd
enter
inc
cld
mov
xor
add
sub
xor
pushf
add
or
jne
clc
mov
call
jmp
mov
xor
xor
enter
clc
inc
inc
pushl
in
pushf
jne
mov
clc
dec
out
dec
mov
lea
cmp
lea
mov
cld
iret
mov
jmp
test
je
mov
fdivr
movl
lock
inc
lock
lret
imul
testl
dec
mov
fmuls
fmuls
enter
inc
dec
xor
add
mov
inc
inc
push
mov
lock
mov
fadds
rol
test
dec
push
decl
push
mov
add
cmp
add
loopne
add
dec
xor
pushf
mov
cld
iret
test
mov
in
dec
add
add
dec
mov
fmull
add
testl
test
add
add
mov
cld
mov
hlt
mov
add
cmp
add
mov
mov
call
dec
add
cmp
cld
iret
mov
dec
push
lea
mov
call
iret
inc
mov
or
or
xor
cmp
je
mov
mov
xor
mov
mov
xor
bswap
rorb
add
mov
xor
or
mov
xor
bswap
rorb
add
add
xor
mov
add
dec
dec
xor
mov
lock
iret
rorl
inc
mov
iret
add
xor
mov
or
push
shll
cmp
fmull
test
dec
dec
xor
or
dec
enter
add
mov
xor
or
mov
mov
xor
mov
cmp
jne
lea
sti
or
cmp
je
mov
ret
or
call
add
mov
cld
mov
xor
add
dec
jnp
mov
xor
add
mov
mov
xor
rorl
jb
add
ja
sbb
cwtl
enter
inc
decl
fadds
rorl
inc
xor
mov
or
inc
rcll
mov
xor
jb
add
shll
mov
xor
add
repz
inc
mov
xor
inc
mov
mov
jne
mov
test
inc
mov
mov
lea
xor
add
mov
lods
dec
inc
mov
lret
mov
adc
std
ret
ljmp
hlt
push
xor
enter
inc
add
cld
test
pushf
inc
xor
pop
push
incl
in
mov
push
inc
cmpsl
mov
or
add
add
add
icebp
je
mov
cld
rol
ret
add
lea
cwtl
jne
clc
or
incl
cmp
incl
lcall
or
push
mov
test
inc
mov
imul
dec
mov
push
dec
push
xor
add
push
incl
lods
inc
inc
mov
xchg
or
call
adc
orb
inc
inc
add
mov
call
push
push
dec
jo
push
dec
mov
cmp
cmovne
call
mov
lcall
leave
inc
adc
jne
call
dec
inc
mov
add
mov
push
or
dec
xorl
cmp
mov
pop
adc
ret
mov
clc
mov
pop
mov
mov
push
push
lock
mov
adc
or
push
ret
xor
mov
mov
cmpb
add
cmp
mov
xchg
dec
add
mov
add
dec
into
mov
mov
das
add
add
mov
and
mov
and
xor
lea
xor
add
xor
orl
xor
pushf
mov
or
jne
call
adc
mov
adc
movl
pop
dec
and
call
in
call
adc
pushf
pop
mov
and
push
add
mov
test
decl
and
cli
and
or
sbb
adc
jmp
mov
adc
dec
adc
mov
and
xor
add
pcmpeqb
jmp
decl
je
mov
pop
adc
pushf
mov
jge
decl
