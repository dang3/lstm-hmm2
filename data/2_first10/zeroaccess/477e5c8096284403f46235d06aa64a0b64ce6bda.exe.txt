push
mov
sub
orl
push
adcl
push
decl
xor
notl
inc
push
push
call
test
movl
je
lea
notl
push
adcl
call
movl
jmp
subl
push
mov
push
subl
push
subl
call
sbbl
test
movl
je
lea
andl
push
incl
call
jmp
xorl
push
mov
addl
push
adcl
push
push
andl
call
test
movl
je
sbbl
lea
xorl
push
orl
call
movl
jmp
push
sbbl
push
sbbl
call
decl
test
jne
push
push
call
adcl
test
movl
jne
push
xorl
push
andl
call
test
movl
jne
push
adcl
push
push
call
xorl
test
movl
jne
sbbl
push
push
sbbl
push
sbbl
call
adcl
test
movl
jne
subl
push
addl
push
call
test
movl
jne
orl
push
push
xorl
call
test
movl
jne
push
orl
push
sbbl
call
test
movl
jne
orl
push
push
subl
push
xorl
call
test
jne
subl
push
adcl
push
xorl
push
orl
call
subl
test
movl
jne
push
push
adcl
call
test
movl
jne
push
adcl
push
subl
call
adcl
test
jne
orl
push
subl
push
call
xorl
test
movl
jne
push
push
sbbl
push
call
sbbl
test
movl
jne
push
push
push
call
sbbl
test
movl
jne
adcl
push
push
sbbl
call
test
movl
jne
movl
push
orl
push
call
xorl
test
movl
jne
push
push
subl
call
subl
test
movl
jne
xorl
push
andl
push
push
sbbl
call
test
movl
jne
xorl
push
andl
push
orl
push
addl
call
xorl
test
movl
jne
movl
push
andl
push
call
test
movl
jne
sbbl
push
adcl
push
movl
call
xorl
test
jne
orl
push
orl
push
call
test
movl
jne
push
subl
push
adcl
push
addl
call
addl
test
movl
jne
addl
push
push
push
call
test
jne
subl
push
xorl
push
subl
call
notl
test
movl
jne
push
negl
push
call
xorl
test
jne
subl
push
notl
push
orl
call
test
jne
orl
push
push
andl
push
call
subl
test
movl
jne
push
andl
push
push
call
subl
test
jne
push
push
call
orl
test
je
addl
xor
movl
jmp
subl
movl
sub
mov
adc
mov
sub
mov
xor
or
adc
mov
mov
sbb
mov
movl
add
lea
xor
mov
lea
movl
cmpl
je
cmpl
jne
push
push
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
adc
mov
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
pushl
call
jmp
adc
mov
movl
cmpl
je
cmpl
jne
pushl
push
push
pushl
pushl
push
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
and
mov
xorl
mov
or
mov
xor
mov
add
mov
movl
mov
cmp
movl
jne
adcl
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
push
pushl
pushl
call
jmp
and
mov
sbb
mov
inc
xor
movzwl
or
add
sub
mov
add
mov
movl
cmpl
je
cmpl
jne
push
call
cmpl
jne
mov
dec
mov
xor
add
dec
mov
jmp
xor
movl
cmpl
je
cmpl
jne
pushl
push
push
pushl
call
mov
dec
mov
jmp
not
add
xor
mov
xorl
mov
andl
mov
inc
mov
cmpl
jne
call
cmpl
jne
mov
inc
mov
cmpl
jb
addl
mov
mov
mov
or
mov
mov
mov
add
mov
or
mov
movl
cmpl
je
cmpl
jne
pushl
push
push
push
pushl
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
andl
xor
add
inc
mov
cmpl
jne
call
cmpl
jne
mov
inc
mov
cmpl
jb
or
mov
xor
movl
mov
xor
orl
add
movl
jmp
andl
xor
add
inc
mov
cmpl
jne
pushl
push
push
call
cmpl
jb
mov
adc
mov
xor
lea
push
mov
orl
xor
addl
lea
orl
push
adc
mov
pushl
sbbl
call
xor
mov
mov
xor
lea
mov
not
mov
sbbl
xor
xor
subl
add
mov
xor
movl
lea
mov
cmp
movl
jbe
movl
cmpl
je
cmpl
jne
push
push
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
sbb
mov
dec
mov
movl
mov
andl
mov
inc
mov
cmpl
jne
push
call
cmpl
jb
mov
mov
add
mov
andl
sub
xorl
xor
mov
movzbl
mov
cmp
movl
jne
lea
mov
orl
lea
addl
mov
mov
test
movl
je
xor
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
cmpl
jne
xor
add
inc
mov
jmp
mov
movl
cmpl
je
cmpl
jne
push
push
push
call
mov
dec
mov
jmp
mov
addl
mov
mov
mov
movzbl
and
mov
notl
mov
cltd
andl
jmp
xor
xor
inc
mov
cmpl
jae
cmpl
jne
push
pushl
push
call
cmpl
jne
mov
inc
mov
jmp
and
mov
add
mov
sbb
add
adc
mov
adc
andl
add
xor
mov
mov
movl
cmpl
je
cmpl
jne
pushl
pushl
push
pushl
pushl
pushl
pushl
call
mov
dec
mov
jmp
xor
add
and
mov
mov
xor
add
mov
adcl
xor
mov
mov
xor
mov
cmp
jne
mov
cmp
je
mov
mov
mov
xor
add
adc
xor
xor
cmp
jne
cmp
jne
mov
mov
xor
mov
mov
mov
add
jmp
mov
cmp
je
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
pushl
mov
pushl
add
mov
mov
pushl
call
mov
mov
mov
jmp
mov
mov
xor
add
cmp
jne
mov
mov
mov
xor
add
cmp
jne
mov
push
xor
add
push
push
pushl
pushl
call
mov
mov
mov
mov
mov
xor
add
mov
mov
mov
mov
mov
mov
mov
movl
mov
xor
add
mov
mov
mov
mov
mov
mov
push
pop
sub
add
movl
mov
mov
mov
mov
mov
mov
mov
xor
add
mov
lea
mov
mov
xor
add
mov
lea
push
mov
xor
add
push
mov
push
pushl
call
mov
mov
mov
mov
xor
mov
add
jmp
lea
mov
mov
sub
mov
mov
mov
mov
movl
mov
movl
mov
xor
add
mov
mov
xor
add
mov
movl
movl
mov
mov
xor
add
cmp
je
mov
xor
mov
sub
add
mov
mov
xor
add
imul
cmp
ja
mov
mov
mov
sub
xor
xor
add
div
mov
mov
mov
xor
add
cmp
jbe
mov
xor
add
mov
mov
mov
xor
add
imul
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
add
movl
mov
mov
mov
movl
movl
mov
mov
xor
add
jmp
movl
movl
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
xor
add
add
imul
add
mov
mov
mov
cmp
jb
mov
mov
xor
add
imul
mov
xor
add
or
mov
xor
add
mov
xor
add
mov
lea
jmp
mov
mov
xor
lea
mov
jmp
mov
mov
xor
lea
lea
xor
cmp
jne
mov
mov
mov
xor
mov
xor
mov
xor
mov
mov
xor
mov
mov
mov
xor
add
mov
mov
xor
add
mov
lea
mov
lea
mov
mov
test
je
movl
movl
movl
movl
call
mov
mov
mov
mov
mov
mov
mov
mov
cltd
mov
mov
add
adc
andl
xor
mov
mov
mov
mov
xor
add
mov
adcl
xor
mov
mov
xor
mov
cmp
jne
mov
cmp
je
mov
mov
mov
xor
add
adc
xor
xor
cmp
jne
cmp
jne
mov
mov
xor
mov
mov
mov
add
mov
mov
mov
xor
mov
add
xor
add
adc
xor
xor
xor
add
adc
xor
xor
cmp
jne
cmp
jne
mov
mov
mov
push
add
push
lea
push
call
mov
mov
pop
pop
pop
leave
ret
xor
subl
inc
ret
push
mov
sub
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
push
push
push
call
cmpl
jne
mov
inc
mov
jmp
mov
or
mov
movl
mov
xor
push
adc
mov
sbbl
xor
and
mov
push
movl
mov
subl
add
cmp
movl
je
mov
mov
sbb
mov
xor
xor
xorl
add
xorl
add
adc
notl
xor
addl
mov
inc
push
add
xor
xor
mov
add
adc
movl
xor
xor
movl
cmp
movl
jne
cmp
je
jmp
mov
mov
mov
xor
add
mov
imul
mov
xor
add
mov
mov
mov
mov
xor
xor
add
adc
lea
xor
xor
xor
mov
add
adc
xor
xor
cmp
jne
cmp
jne
mov
pop
pop
pop
leave
ret
push
mov
push
andl
jmp
xor
add
inc
mov
cmpl
jae
cmpl
jne
push
call
jmp
movl
add
mov
movsbl
add
mov
sbbl
sub
mov
xorl
xor
movl
cmp
movl
jne
mov
push
mov
add
mov
mov
mov
xor
add
cmp
pop
je
mov
jmp
mov
xor
add
leave
ret
push
mov
sub
push
adcl
push
push
lea
push
addl
lea
push
xorl
call
subl
push
push
sbbl
push
subl
call
xor
movl
movl
mov
mov
xor
mov
adc
mov
add
decl
mov
mov
adcl
test
je
mov
mov
mov
xor
xor
and
mov
mov
xor
adc
add
mov
sbb
mov
movl
cmpl
je
cmpl
jne
push
pushl
push
push
call
xor
or
dec
mov
jmp
xor
andl
mov
inc
mov
cmpl
jne
call
cmpl
jne
mov
inc
mov
cmpl
jb
or
add
sub
mov
mov
xor
add
dec
mov
movl
cmpl
je
cmpl
jne
pushl
push
pushl
push
push
push
call
xor
xor
dec
mov
jmp
andl
xor
xor
inc
mov
cmpl
jne
call
cmpl
jb
and
mov
xor
adcl
add
xorl
mov
xorl
sub
lea
adcl
xor
xor
cmp
movl
je
andl
jmp
xor
or
inc
mov
cmpl
jae
cmpl
jne
push
push
pushl
call
jmp
mov
and
mov
mov
xor
movl
add
cmp
movl
jne
pushl
negl
call
movzbl
xor
mov
sbb
mov
mov
sbbl
xor
add
movl
jmp
dec
je
dec
stos
cmp
adc
jp
jp
xor
jp
sub
cmp
popa
ss
push
imul
inc
imul
jl
push
iret
pop
dec
cmp
cli
xchg
dec
jg
mov
sub
data16
push
jg
jmp
xchg
fimuls
mov
imull
add
push
cli
es
or
imul
pop
add
jo
les
sbb
je
arpl
xchg
pop
mov
repz
cmp
or
sub
xor
push
jecxz
mov
test
inc
push
dec
or
repz
faddl
push
stc
push
push
mov
inc
sbb
sbb
adc
aad
loope
movsl
pop
mov
dec
sub
movsb
out
and
shrb
rolb
pop
std
shr
in
popf
cmp
jne
aaa
movsb
fucomi
or
fiadds
enter
ficomps
xor
stc
out
shll
xchg
push
ja
xchg
outsb
rolb
xchg
movsl
mov
inc
popa
xchg
je
dec
pop
btc
int3
xchg
inc
xor
jmp
lret
or
mov
adc
clc
jg
jl
movsl
sbb
lret
add
push
inc
mov
loope
sbb
adc
push
dec
and
fnstsw
sub
out
cmp
xor
jb
out
pop
rcll
mov
adc
dec
cmc
sar
in
test
sbb
dec
call
in
pushf
xor
stos
lods
inc
ret
mov
mov
mov
mov
adc
fldcw
cmpsl
sub
mov
lock
cltd
jbe
mov
std
sub
or
outsl
sub
or
inc
clc
lret
loope
pop
cmc
jne
adc
mov
or
test
mov
in
mov
stc
idivl
xor
pop
sarb
xor
andb
sub
lcall
movsb
push
popa
jle
dec
push
pop
rcll
xchg
in
iret
sbb
cli
pop
sub
jne
mov
mov
add
sbb
xchg
dec
cmp
fucom
push
lods
out
int
fnstenv
fcomip
pop
insl
mov
push
imulb
pop
fsubl
and
iret
fnstsw
xchg
popa
or
or
pop
sub
idivl
stc
insl
add
xor
sub
and
xchg
sti
pop
imul
sub
imul
jbe
jl
les
insl
outsb
in
in
outsl
cmp
addr16
and
push
fmull
cs
cltd
mov
mov
push
mov
test
add
and
enter
fiadds
in
sub
sti
int3
cmp
xchg
cmpsb
xchg
es
jmp
jne
lret
rorl
faddl
push
aam
adc
or
cs
call
sbb
or
sahf
aaa
ljmp
shll
imul
xchg
sbb
push
lahf
lret
mov
cli
decl
mov
fbstp
push
push
ja
mov
pop
adc
inc
insl
movsl
in
jle
aam
xor
sub
test
flds
test
je
or
pop
mov
aam
ret
mov
popf
repz
cmp
cmp
cmp
leave
sbb
jnp
aas
jecxz
mov
loop
xchg
cs
in
push
sub
insb
hlt
ljmpw
movsl
push
cmpsl
ss
push
adc
sbb
xor
and
int3
push
fwait
add
or
rcrb
scas
jno
xchg
fnstcw
xchg
je
adc
mov
mov
rolb
andl
lods
popa
fucomi
jnp
rclb
mov
xchg
pop
jmp
lods
inc
in
popa
sub
shll
cltd
adc
pop
add
mov
imul
adc
mov
sub
dec
js
lcall
jp
test
push
lcall
lcall
sub
and
dec
inc
scas
sbb
pusha
fldenv
push
mov
test
inc
xchg
jnp
xchg
ss
jnp
imul
xchg
jmp
test
xchg
fcmovnbe
cmp
mov
xor
cli
sahf
stos
std
push
out
dec
cli
push
jnp
ja
or
imul
push
pop
scas
hlt
imul
sbb
movsl
popf
loopne
movsl
jl
fisubrs
mov
pop
mov
arpl
push
insb
stos
insl
jg
pop
sub
sar
pop
aam
dec
jmp
push
cmpsl
xchg
mov
mov
cmp
pop
sbb
sti
out
pusha
test
mov
repz
mov
dec
es
pushf
loopne
xor
lods
pop
adc
add
sbb
mov
adc
mov
jnp
and
mov
mov
jg
sub
push
jae
cltd
mov
cld
outsb
stos
imul
mov
sub
arpl
push
cltd
imull
stos
idivl
xchg
sub
mov
sub
scas
loope
out
idiv
pushf
icebp
std
sbbb
dec
les
in
inc
mov
sti
in
push
repnz
and
in
cmp
scas
push
test
aaa
mov
sub
dec
cltd
dec
push
adc
pop
dec
mov
jo
jne
add
out
scas
mov
cmp
mov
data16
add
sti
xchg
sbb
cmp
pushf
mov
xchg
jnp
leave
imul
iret
xor
xor
mov
into
sub
xor
jg
std
xor
das
mov
sti
jne
sub
cmpsl
jge
ljmp
pop
shll
mov
inc
stos
xor
xor
cli
stos
sbbb
mov
or
jne
mov
and
pop
jecxz
xorw
mov
push
pop
pop
sbb
lahf
shrb
xlat
cmp
pop
adcb
or
xchg
xchg
xchg
xchg
frstor
mov
jns
arpl
jae
xor
adc
push
out
in
pop
insl
call
push
in
sub
pop
fldcw
sub
pusha
shll
rorl
cmpsl
mov
inc
ret
lds
push
je
int3
mov
and
sbb
mov
dec
push
mov
push
xchg
adc
scas
or
cltd
adc
mov
xor
in
jbe
lret
and
ficomps
out
repz
adc
icebp
lock
push
mov
daa
clc
jecxz
push
popf
aaa
inc
inc
movsl
sub
push
inc
loopne
shrl
test
outsl
mov
sahf
add
mov
or
mov
dec
jecxz
mov
mov
jecxz
sub
fistl
push
cmp
pop
test
int3
jb
pusha
fwait
jmp
hlt
arpl
and
push
jge
dec
enter
xor
inc
rorb
adc
hlt
je
icebp
test
imul
stc
pop
aam
mov
or
jne
pushf
xor
repnz
push
cmp
mov
ret
push
xchg
mov
mov
inc
call
cltd
cmc
add
test
ret
push
mov
and
inc
out
nop
out
ret
dec
xor
ljmp
xor
mov
call
pop
pop
in
ja
sub
jb
xchg
mov
xor
pop
call
or
mov
test
adc
movsb
es
rcl
xor
jecxz
stc
pop
add
mov
das
sti
and
std
cmp
enter
lods
jne
xor
mov
push
and
test
dec
mov
repz
cmp
cmp
adc
pop
pop
in
in
jmp
movsb
cmc
cmpsl
dec
sbb
pop
fwait
cmp
lcall
and
pop
jo,pt
rcll
outsl
dec
mov
fwait
mov
imull
insl
mov
push
jnp
add
popf
enter
loope
mov
sub
call
adc
jp
mov
outsl
xor
loope
adc
add
pop
imul
push
sub
lods
dec
sbb
push
cmp
iret
adc
inc
stc
ror
add
inc
or
jbe
push
fldl
sbb
push
cmp
es
cmp
sbb
mov
lds
fwait
inc
pop
decb
sahf
ljmp
and
cmp
aam
inc
pop
cmp
out
or
jmp
and
pop
hlt
sbb
push
scas
pop
jo
scas
sbb
push
add
pusha
fs
inc
xor
xlat
repnz
out
mov
inc
adc
jl
hlt
mov
pushf
xchg
out
lea
push
mov
jecxz
inc
shrb
inc
cmpxchg8b
iret
jle
test
xchg
mov
and
pop
fisubrs
enter
decl
js
lods
clc
or
cmp
fs
stos
lds
sbb
sub
xchg
call
loopne
pop
ljmp
xchg
scas
push
pop
test
in
xor
ja
fisubs
in
jo
popl
pop
jmp
inc
cmp
adc
add
xorl
mov
mov
repnz
add
xchg
mov
mov
outsb
push
push
and
mov
mov
subl
mov
cwtl
fistpll
jnp
in
js
aad
xchg
jl
push
psllw
xor
icebp
dec
dec
cwtl
das
dec
clc
jl
loope
cmp
into
lock
fcmove
mov
repnz
push
xor
mov
out
fadd
mov
stos
pushf
sbb
ds
ficompl
outsl
xchg
mov
stos
pop
daa
xchg
addr16
daa
insb
inc
mov
add
mov
cwtl
mov
push
in
dec
negl
cmpsb
pop
push
clc
jns
aas
test
pop
icebp
jp
and
mov
fnsave
jb
loopne
lret
std
popa
xchg
xor
push
add
imul
cwtl
push
aas
cmc
jge
pop
lahf
ffree
adcb
mov
push
push
loope
mov
out
enter
xchg
aad
fistpl
jnp
jp
mov
test
or
cmp
int3
dec
push
out
xchg
push
rorb
pop
push
push
lock
cmp
pop
jae
mov
call
jbe
sbb
push
mov
mov
inc
xchg
out
mov
out
in
push
addr16
std
lea
mov
shl
sub
xor
lahf
pop
lret
daa
cmp
cli
fstpl
sub
rorb
clc
xor
push
stos
or
adc
push
sahf
add
adcb
popa
pusha
pop
pushf
gs
lods
pop
add
ret
xor
dec
hlt
or
mov
sbb
or
cmp
push
mov
fsubl
sbb
sbb
push
std
jle
sti
sbb
outsb
and
fdivs
ljmp
jmp
lret
rcl
mov
dec
sbb
int
adc
idivl
mov
scas
insb
pop
movsb
std
cmp
jns
cli
add
rolb
and
sbb
xor
fs
sti
or
xchg
in
and
add
pop
jmp
das
cmpsb
pusha
dec
call
jmp
mov
add
pop
test
add
aas
and
pop
lods
hlt
clc
xor
lods
jae
xchg
stos
iret
scas
es
lods
scas
cwtl
cld
addr16
sub
mov
mov
cs
and
xchg
mov
test
push
daa
daa
jne
in
cld
fst
jmp
cmp
inc
lret
repnz
adc
cwtl
xchg
push
sbb
push
ds
arpl
insb
ljmp
add
mov
ljmp
les
es
pop
cmp
movsb
or
mov
loope
in
xlat
mov
idiv
jecxz
outsl
pop
xchg
add
imul
hlt
test
dec
pop
jb
movsl
ja
and
in
cmpsb
or
jg
dec
imul
cmp
and
sbb
pop
mov
nop
icebp
mov
mov
lds
adc
xchg
sbb
es
xchg
mov
insb
xor
mov
lods
dec
sbb
xchg
xor
pop
xchg
test
push
push
cmpsl
cmc
scas
lock
cmc
fwait
pop
cmp
loope
push
sub
cmp
scas
arpl
jbe
int
adc
sub
stos
sti
or
push
cmpsb
adc
xchg
and
and
cwtl
popa
push
int
into
in
mov
addr16
mov
xchg
and
shr
ror
cmc
sbb
push
dec
mov
or
push
ds
test
adc
mov
insl
cli
out
aas
xchg
pop
mov
fstpt
add
push
lret
mov
pop
popa
xchg
mov
sbb
nop
and
loope
push
adc
leave
sub
clc
ljmp
xchg
mov
mov
icebp
scas
push
cmp
sub
js
sbb
gs
imul
test
jp
lods
push
push
enter
lret
xor
test
imul
imul
ret
imul
xlat
adc
pop
imul
incl
jae
mov
cmpsl
stc
jecxz
movsb
cld
xchg
jle
xor
in
push
movsl
xchg
mov
push
mov
addl
pop
add
jp
out
out
rclb
push
pushf
xchg
shl
and
pop
push
mov
addr16
js
call
ret
ja
clc
jp
and
cmc
cmp
sub
inc
sti
loop
sub
popa
outsb
mov
fwait
add
icebp
xor
enter
lock
mov
mov
fistl
fnstenv
inc
sub
cmpb
gs
icebp
scas
out
sbb
js
dec
pop
adc
pop
into
frstor
cmpsl
jg
or
in
andl
sub
cwtl
cmpsb
fistps
inc
imul
scas
sub
btl
test
mov
adc
fsubrl
mov
out
arpl
in
inc
ja
jl
lods
invd
rol
lods
daa
jl
cmpsl
cmp
out
stos
sbb
mov
mov
or
ljmp
notl
out
xchg
dec
sbb
insl
jae
cmp
lods
gs
stos
testb
jg
adc
andb
lods
ret
pusha
jb
xchg
mov
mov
lds
inc
dec
pop
std
pop
push
dec
inc
inc
sbb
movsl
je
test
idivb
rclb
push
scas
add
stc
adc
je
std
add
out
or
add
push
and
inc
sub
xlat
lods
dec
sub
pop
in
lea
inc
lahf
das
cltd
inc
sub
out
imul
jnp
out
addr16
mov
mov
sbb
fisubl
xchg
fwait
mov
int3
lock
out
dec
push
gs
loop
xchg
mov
cmp
pop
testl
add
and
out
out
pop
sahf
lret
jno
adcb
leave
xor
xchg
sbb
call
xor
outsl
or
lret
adc
dec
adc
jns
cli
movsl
loop
ss
sbb
iret
mov
fistps
mov
lret
xor
mov
mov
or
scas
js
sbb
mov
mov
neg
cmc
push
rcrl
int
dec
jecxz
pop
sub
neg
movsb
sahf
outsl
stos
or
mov
jmp
into
aas
xchg
fstl
or
mov
cmpsl
add
arpl
mov
inc
adc
cmp
in
cmpsb
xor
icebp
loop
nop
inc
pop
mov
addl
iret
loope
insl
push
jl
adcb
adc
mov
lahf
idivb
jp
pop
fs
daa
or
mov
jo
mov
push
int3
call
dec
aas
stos
fisttpl
hlt
out
ret
shrl
fbstp
ret
xor
xchg
movsb
lods
xor
push
cmpsb
mov
lcall
jg
mov
xchg
or
shlb
push
cmp
dec
in
xor
adc
mov
mov
sub
push
jmp
fcompl
cli
mov
dec
push
mov
in
repnz
mov
mov
lret
adcl
nop
stos
dec
in
sub
xlat
push
and
addr16
jecxz
test
cmpsl
cmp
cmpsb
shlb
scas
push
or
test
rorb
cmp
pop
cmp
imul
gs
push
or
dec
push
sarb
xchg
sbb
test
jmp
loope
int
sti
push
movsb
fimuls
adc
test
test
ljmp
or
addr16
push
pop
mov
in
stos
in
mov
cli
or
ss
sub
stos
es
movsl
ja
mov
cmpsb
xlat
sub
jge
in
scas
lret
and
pop
mov
inc
hlt
subl
pop
jmp
cmp
sbb
dec
xor
icebp
lock
mov
pop
int3
adc
flds
or
ffreep
inc
jno
add
push
jae
push
cmp
xor
push
xor
inc
sbb
adcb
adc
xor
mov
icebp
or
dec
adc
hlt
jo
pop
repnz
xor
mov
sti
inc
nop
jle
jg
xchg
inc
or
out
pop
lock
push
and
dec
add
std
das
fwait
dec
clc
sbb
or
mov
mov
ss
mov
and
shlb
mov
outsl
or
adc
mov
pop
pusha
adc
or
in
fcomps
inc
mov
adc
pop
mov
clc
mov
fnstenv
shll
add
fwait
cmc
lea
insl
pop
push
int
push
fnstcw
icebp
or
and
test
push
mov
out
adc
dec
in
std
or
roll
mov
ds
fldenv
fsubl
movsb
inc
pop
dec
jmp
pop
dec
adc
cld
scas
cli
aam
lret
scas
into
pop
mov
mov
sub
pop
add
mov
test
add
sub
addr16
fwait
or
xchg
ret
shrb
sahf
jp
cmp
mov
das
dec
hlt
xchg
cmpsl
sub
dec
jno
inc
jns
cmpsb
jae
cli
rolb
xchg
out
daa
and
loop
xchg
jbe
movsl
jae
add
pop
dec
lods
ds
mov
js
icebp
pop
movsb
dec
icebp
stc
out
xor
enter
popa
or
pop
mov
fisubl
mov
scas
adc
repz
rol
inc
lds
pop
dec
idivl
mov
jg
and
jno
js
or
push
icebp
inc
push
enter
test
pop
negb
repz
imul
iret
loopne
fiaddl
push
mov
test
pushf
dec
inc
scas
faddp
jmp
imul
ret
xchg
cltd
rcrl
add
adc
lods
adc
and
push
scas
mov
or
mov
inc
xchg
mov
push
out
in
jb
js
sub
mov
sbb
shl
popf
xchg
mov
loop
mov
aam
scas
addb
aaa
bound
bound
pop
cs
arpl
xorb
pushf
xchg
dec
cmp
adc
and
xlat
dec
sbb
out
movsl
jb
push
push
ds
mov
js
iret
je
mov
dec
pop
jmp
ja
int3
and
outsb
pusha
sub
push
test
jmp
js
cmp
rcl
mov
iret
mov
mov
mov
js
mov
inc
push
mov
pop
pop
jmp
fimull
lret
pop
adc
lea
jnp
cmpl
cwtl
ss
or
lock
adc
mov
inc
notl
outsl
lcall
mov
sahf
add
in
je
xchg
daa
imul
xorb
or
dec
js
gs
xor
mov
lcall
pop
xor
sahf
adc
out
mov
cmp
shll
out
loopne
rep
fwait
cli
mul
roll
and
or
push
push
xchg
cmp
or
pop
push
xor
adc
icebp
insl
das
jne
mov
cld
ret
adc
fisubrs
loopne
mov
xchg
pop
pop
pop
jno
cs
cmp
lea
insb
es
sbb
ret
and
and
stos
jae
in
xor
xor
adc
mov
pop
outsl
jmp
cwtl
je
xor
mov
idivb
add
push
or
aaa
mov
cmp
lret
cmp
in
lret
scas
xchg
in
dec
ret
hlt
bound
call
ss
insb
add
sub
in
sub
insl
xor
jecxz
orb
push
dec
faddl
mov
xor
xor
dec
push
out
ds
mov
loop
add
adc
ds
jo
rolb
jb
jle
nop
cs
stos
xchg
sub
lahf
mov
mov
pushaw
sub
fsubl
lods
sbb
xchg
sub
ja
add
andl
loop
cwtl
xor
sbb
mov
jnp
cmp
or
mov
int3
add
loope
ss
adc
fdivrs
xor
lcall
cmpsb
scas
call
mov
and
insl
cltd
xor
sub
and
push
jg
push
jbe
cmc
cli
ret
add
call
pop
dec
repz
lret
dec
xchg
lcall
iret
push
jg
sahf
jecxz
jmp
or
inc
mov
insl
push
jg
shlb
and
mov
lods
lahf
inc
jbe
pop
and
sub
mov
imul
dec
sub
cltd
outsb
cmp
mov
dec
mov
cmp
stc
cmp
mov
mov
fcoml
and
xchg
in
push
xchg
jb
lahf
pop
ret
rcl
sub
mov
or
sbbb
adc
xchg
out
or
stos
adc
in
adc
sbb
inc
mov
mov
enter
mov
dec
ljmp
push
mov
xor
xor
imul
fcmovne
or
aad
sbb
int
add
add
mov
pop
cmp
mov
mov
push
rorl
jns
xchg
in
xchg
insl
aad
mov
fsubs
std
mov
jle
stos
cmc
xchg
jp
movb
mov
lahf
inc
pop
in
shrl
cmp
push
cli
lahf
in
inc
adcb
cmpsb
jb
sbb
dec
sub
cmc
jno
or
pop
mov
lds
pop
orb
test
push
push
ljmp
jo
jae
adc
in
mov
xchg
std
popf
sub
mov
sbb
adc
push
lret
mov
xor
pop
cmpsb
sbb
shrl
mov
aad
inc
mov
fs
inc
inc
scas
stos
sbb
loop
dec
test
sbb
xchg
popf
add
cmpsb
xchg
scas
movsl
mov
out
mov
test
sub
mulb
push
sbb
call
imulb
jmp
arpl
ret
mov
mov
cmp
out
push
mov
push
dec
jo
xorb
loopne
sbb
movsb
mov
cmp
sahf
xchg
pop
jb
mov
push
hlt
lods
fdivrl
lret
xchg
lods
loop
scas
loope
pusha
imul
es
mov
lds
fs
sbb
call
push
and
or
sub
cld
xchg
mov
lahf
mov
loope
xchg
lods
sbb
cmp
mov
fisubrs
cmpsl
out
and
mov
stc
pop
movsl
jae
mov
pop
mov
dec
ss
inc
mov
add
xchg
and
test
ss
insl
sar
daa
loop
out
js,pn
jl
inc
mov
cmp
add
lea
aam
rcrl
cmc
mov
fbld
xor
dec
push
and
sbbl
mov
mov
push
jno
int
mov
dec
mov
sub
mov
addl
pusha
push
add
icebp
adc
leave
sbb
or
push
pushf
cmp
rorb
cmp
daa
push
movsl
pop
push
push
punpckldq
inc
stos
pop
fdivl
xchg
mov
jmp
cmp
fmuls
dec
enter
or
dec
leave
lret
scas
push
sub
repz
cmpsb
test
mov
jle
dec
xchg
mov
js,pt
in
cmp
xor
dec
test
dec
aaa
add
add
adc
add
mov
mov
movsb
shll
test
and
push
pop
lea
add
pop
add
pop
outsb
ret
xor
dec
jecxz
gs
inc
in
mov
xchg
adc
sbb
pusha
out
ljmp
ljmp
jno
add
test
insb
adc
out
xchg
shll
xchg
sti
push
mov
stos
pushl
push
mov
pop
imul
adc
cmpsb
data16
cmp
out
lret
mov
push
sub
fwait
inc
pop
test
test
iret
sub
mov
add
imul
mov
or
sahf
cmpsb
ret
push
push
int
mov
aas
iret
cmp
add
jle
ret
dec
fiaddl
xchg
mov
mov
and
jmp
iret
sbbb
icebp
scas
adc
xchg
fs
add
stos
rolb
xorl
stos
fisubrl
sub
xor
pop
in
div
out
dec
jbe
fidivrs
ja
sbb
dec
push
in
add
inc
and
jg
lcall
adc
dec
xchg
or
dec
in
lods
jl
into
push
daa
cmp
fwait
aaa
mov
fwait
cmc
flds
in
dec
insb
aad
nop
adc
dec
adc
popa
xchg
out
stos
pop
mov
push
addr16
in
push
cmpsb
pop
pusha
xchg
test
out
das
dec
sub
mov
cwtl
ror
dec
out
xor
xor
jnp
cli
repz
adc
aam
push
daa
icebp
jp
adcl
arpl
sar
mov
mov
jecxz
shrl
aam
mov
iret
loopne
xchg
add
fdivrs
sbb
xor
mov
mov
dec
outsb
xor
push
imul
jmp
mov
pop
mov
stc
sbb
mov
leave
mov
fs
test
rcrb
sub
xor
xchg
bound
das
in
jle
gs
pop
outsb
fisubs
inc
cmc
jae
lret
jp
cwtl
shr
cmc
jecxz
not
in
test
rclb
lods
jmp
jae
in
sub
or
add
pop
mov
push
jl
aaa
xorb
mov
jb
rorb
dec
je
flds
popf
sbb
unpckhps
or
sub
and
sbb
or
push
mov
adc
cmp
inc
mov
and
fs
mov
fs
out
inc
adc
or
fs
movsl
lea
adc
lcall
push
lea
add
xor
adc
fnstcw
aaa
sub
xchg
jae
push
fcmovne
fstps
push
lret
xchg
inc
mov
daa
pop
cld
pop
mov
out
sub
push
andl
pop
loope
jb
dec
push
jmp
sti
pop
cmp
gs
rcrl
cmpsb
enter
jne
push
inc
sub
rcrb
push
out
add
jg
sbb
xchg
pusha
orb
pop
int3
cli
sub
mov
jle
movsl
sbb
mov
rorb
mov
cmc
xchg
fmuls
shll
dec
mov
mov
add
mov
xchg
outsl
mov
adc
sub
mov
mov
xor
dec
nop
cmp
mov
lods
or
mov
mov
add
aas
push
add
clc
xrelease
movsl
rclb
and
out
repnz
ds
xor
xchg
push
movsb
mov
jecxz
mov
repnz
cmpsl
mov
dec
mov
mov
xchg
orl
dec
and
scas
icebp
outsl
xchg
loop
mov
lods
out
out
mov
cmp
inc
jne
ljmp
hlt
call
lds
jo
gs
push
scas
cld
repz
iret
push
in
push
lahf
sub
add
lcall
cmp
mov
pop
shll
icebp
repz
notl
mov
ljmp
fcompp
dec
adc
loope
dec
cmc
fisubrs
inc
cmp
and
aad
fsts
pop
xchg
cmc
out
ficoml
push
inc
or
sbb
negl
push
xor
jge
das
mov
pop
push
jae
insl
xor
mov
std
addr16
ret
pop
mov
mov
ret
cmp
jmp
test
rolb
clc
rcrl
movsl
aam
icebp
pop
int
push
xchg
sbb
add
adc
adc
xchg
fisubs
mov
mov
mov
mov
shl
lods
testb
subb
ss
adc
inc
adc
add
cvtdq2ps
dec
daa
and
and
add
sub
add
fstps
adc
cmp
push
test
ljmp
stc
cmp
stc
bound
inc
cmpsl
xorl
push
cmpsb
jno
fcoml
inc
hlt
outsl
outsb
popl
test
inc
dec
sbb
bound
xor
cmp
push
scas
in
xchg
push
imul
inc
sub
std
clc
inc
nop
repnz
in
mov
cmp
ja,pn
dec
or
mov
rcrl
out
in
leave
pop
fists
dec
outsl
xor
movsl
add
in
cmp
lret
cmp
and
lret
cmpsl
mov
aas
push
or
les
jo
mov
inc
bound
xorps
pushf
push
pop
les
mov
pop
int3
pushf
addr16
dec
push
mov
mov
inc
and
pop
jge
add
test
mov
and
loop
cmp
cmovno
xlat
and
push
sti
out
testl
arpl
jb
pushf
jecxz
cmp
in
je
fistpl
jg
aam
jo
xchg
nop
outsl
mov
or
call
hlt
jmp
ds
inc
pop
lret
cmpsl
pop
loope
mov
jno
sar
or
fstp
or
shl
jne
mov
fdivl
dec
test
cs
adcl
in
div
sbb
pop
stc
cs
lds
xchg
adc
addb
stos
sahf
shlb
popa
in
nop
dec
adcl
mov
sub
gs
xchg
push
rorb
clc
orl
fcomip
outsb
std
mov
fsubrp
and
pop
push
mov
mov
cmp
cwtl
pop
dec
insb
shr
and
mov
mov
xor
push
mov
push
loopne
cmpsb
aad
shlb
sbb
cmp
lret
add
fwait
cmc
push
imull
add
or
mov
movsl
imul
popf
sub
imul
aam
adc
ret
adc
repz
in
inc
pop
add
jns
mov
mov
jbe
popf
inc
pop
dec
cli
mov
pop
cmpsl
sbb
sbb
mov
fstpt
test
push
cwtl
mov
fidivl
aam
pop
adc
inc
in
jne
dec
or
mov
xorb
fdivl
cli
aam
jp
movsb
jmp
dec
add
add
add
rolb
jne
xorl
pushl
call
sbb
mov
or
mov
mov
adcl
xor
add
movl
cmp
movl
je
mov
mov
sbb
mov
mov
add
mov
sbbl
mov
xorl
add
xor
mov
or
mov
xor
mov
andl
add
mov
movzbl
sbb
mov
movl
cmpl
je
cmpl
jne
push
push
push
call
cmpl
jne
mov
dec
mov
xor
or
dec
mov
jmp
incl
mov
add
mov
jmp
sub
mov
mov
sbbl
add
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
cmpl
jne
xor
xor
inc
mov
jmp
xorl
mov
mov
mov
xor
add
cmp
je
jmp
mov
mov
xor
add
cmp
mov
je
mov
xor
add
cmp
je
lea
push
pushl
pushl
call
mov
mov
xor
add
cmp
je
mov
movzwl
mov
mov
mov
jmp
mov
xor
lea
jmp
mov
xor
add
jmp
mov
add
mov
mov
test
je
movl
push
xor
pop
add
push
pop
push
dec
pop
dec
xchg
sub
xchg
dec
mov
imul
sub
mov
mov
xor
add
jmp
mov
mov
mov
mov
xor
add
xor
div
mov
xor
lea
mov
mov
mov
mov
mov
xor
lea
mov
mov
mov
xor
add
imul
mov
mov
xor
lea
cmp
jne
mov
xor
add
mov
mov
add
xchg
xor
push
mov
pop
mov
add
lea
add
add
push
inc
pop
dec
xchg
dec
xchg
dec
xchg
dec
push
mov
pop
dec
call
cmp
je
xchg
push
pop
push
pop
inc
xchg
sub
xchg
dec
dec
mov
imul
add
xchg
push
xor
mov
dec
inc
add
dec
xor
add
pop
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
xor
mov
push
andl
jmp
xor
or
inc
mov
cmpl
jae
cmpl
jne
push
call
cmpl
jne
xor
or
inc
mov
jmp
andl
jmp
xor
or
inc
mov
cmpl
jae
cmpl
jne
push
push
push
call
cmpl
jne
mov
inc
mov
jmp
movl
cmpl
je
cmpl
jne
push
push
pushl
call
mov
dec
mov
jmp
push
adc
mov
mov
and
mov
mov
mov
movl
cmpl
je
cmpl
jne
push
pushl
push
push
pushl
push
push
call
mov
dec
mov
jmp
andl
movl
add
movl
add
mov
andl
mov
inc
mov
cmpl
jne
push
pushl
push
pushl
push
call
cmpl
jne
xor
xor
inc
mov
cmpl
jb
andl
xor
xor
inc
mov
cmpl
jne
push
call
cmpl
jb
and
mov
sub
mov
xorl
mov
mov
sub
mov
orl
jmp
negl
pop
adc
divl
jge
aam
or
orl
in
jp
inc
mov
mov
movsl
push
dec
into
mov
sbb
jns
shrl
xchg
adc
push
cwtl
mov
mov
shll
add
xchg
xchg
aad
inc
adc
fcos
inc
mov
dec
fisubl
data16
xchg
jae
inc
mov
cmpl
dec
xor
push
rcr
jns
pop
push
test
pusha
mov
pop
mov
std
outsb
std
mov
fstl
pop
negb
push
stos
cli
std
repz
pop
fs
lods
mov
sar
loope
inc
xchg
xchg
cmp
inc
outsl
call
dec
jo
xchg
push
jbe
aaa
insl
mov
mov
cs
sub
xor
cmp
jne
shrl
inc
movsb
cmp
sbb
jle
cmp
addb
mov
repnz
cmpl
lret
popf
insb
mov
push
arpl
cmpsl
push
cs
cmp
aas
int
out
lcall
popf
into
jnp
mov
cmp
xchg
clc
mov
addb
dec
xchg
outsl
adc
mov
adc
pushl
fwait
data16
mov
cmp
sbb
or
inc
adc
mov
push
call
sarl
int3
fdivp
jb
pop
inc
out
mov
jne
sbb
fwait
popa
ss
loop
out
sar
xchg
les
aad
or
xchg
cmc
xor
sbbl
and
adc
pusha
sbb
int
das
xchg
add
sub
or
jns
xor
pop
addl
out
sbb
cmpsl
xchg
aas
stos
or
stc
stos
dec
fld
sbb
nop
push
addr16
xorb
negb
mov
sahf
mov
fwait
jb
dec
push
movsb
cmc
rcr
jns
outsl
fstps
jno
pop
in
cmp
push
dec
pop
fstl
imul
inc
or
aaa
pop
lret
cmovbe
lock
shrl
xchg
jne
sbb
fwait
inc
add
mov
adc
popf
cmp
push
dec
dec
iret
mov
adc
lds
enter
and
add
push
mov
sahf
aad
testl
and
out
jb
sahf
jmp
push
mov
adc
cs
pop
adc
cmp
cmpsb
in
xchg
shll
das
cmpsb
test
and
mov
sub
lods
xchg
mov
jg
or
sub
call
daa
scas
mov
mov
xor
repz
adcb
cli
and
or
loope
push
mov
jb
jge
cld
enter
sub
dec
dec
in
xor
and
inc
cmp
jp,pn
call
sahf
rcr
lods
jecxz
outsb
push
push
incl
nop
daa
bnd
adc
push
cmp
testl
cmpsb
pop
in
add
jnp
aad
movsl
cmpsb
jle
addr16
outsl
repnz
pop
pop
mov
and
push
cmp
iret
push
push
bts
push
inc
mov
inc
aaa
movb
jl
sti
out
push
add
or
in
xchg
sub
xchg
xchg
inc
or
mov
push
in
dec
ficomps
inc
punpckhwd
inc
adc
adc
out
mov
dec
add
xchg
mov
lret
inc
pop
ror
inc
add
mov
or
cmpsb
jg
scas
push
scas
mov
cmp
inc
xchg
mov
xor
loopne
mov
pop
and
mov
or
push
jmp
xor
or
stos
shrb
add
jecxz
adc
jno
jge
sbb
mov
sub
popw
in
or
fnstenv
mov
movsl
subb
mov
jmp
sub
or
lret
cltd
jl
push
push
mov
jnp
movq
sbbl
or
fnstcw
sub
ss
pop
push
in
ret
mov
ret
test
popa
adc
cmp
mov
mov
inc
lret
sbb
shrl
lcall
cmp
sbb
inc
loopne
test
mov
mov
pusha
ss
stos
sub
sub
pusha
cmp
dec
xchg
dec
popf
adc
sub
xor
fiadds
or
mov
or
rcrb
fdivrl
ljmp
loope
or
dec
loop
mov
hlt
lret
in
iret
imul
mov
mov
sahf
inc
cmpsl
xchg
add
aad
dec
cmp
sbb
push
ljmp
jl
pop
jmp
rcrb
in
cmpsb
sub
xor
outsb
pop
lcall
or
pusha
addb
inc
lret
data16
add
pusha
sbb
clc
shll
test
sbb
jmp
movsb
cwtl
mov
pop
lds
adc
dec
or
enter
in
lret
and
push
jns
inc
mov
out
neg
aad
lcall
ret
jl
cmpsl
or
sbb
aaa
mov
jo
pop
push
push
repnz
sbb
or
outsl
arpl
je
xor
fisubrl
cmp
dec
lds
sbbb
add
push
jmp
sbb
push
xchg
pop
adc
mov
adc
mov
dec
inc
jl
enter
sti
mov
cli
jno
and
pop
lahf
in
push
test
cltd
dec
add
jl
loope
and
imul
movsl
nop
fst
icebp
xchg
orl
inc
inc
nop
cs
cmp
sahf
popa
ret
arpl
mov
shlb
mov
imul
mov
xor
out
rcrb
xor
jle
sti
push
sbb
ljmp
sbb
mul
xchg
std
insb
hlt
mov
aas
fimuls
rcll
ret
mov
mov
pop
pop
gs
sub
jg
push
push
rorl
sbb
jp
ficompl
add
jg
lret
xchg
xchg
out
and
loopne
jns
push
mov
jge
push
fiadds
inc
sub
mov
dec
ss
mov
cmp
cli
pop
jecxz
mov
mov
cmp
inc
mov
pop
inc
cs
xchg
cs
xchg
xchg
loope
lock
arpl
mov
pop
int
xorl
add
jnp
or
mov
add
pop
sbbb
ds
mov
mov
ret
xchg
pop
mov
push
orl
mov
clc
dec
push
jle
fcoml
outsb
mov
insb
rolb
cwtl
dec
sub
push
ret
inc
ret
jne
mov
test
aad
pop
fsub
addr16
ss
xlat
leave
test
movsb
scas
je
aas
dec
fisubs
fnsave
cli
inc
dec
adc
adc
adc
cmpsl
cmpps
mov
mov
mov
lods
mov
lock
jp
push
or
inc
movsl
xor
mov
insl
out
add
filds
and
mov
out
out
outsb
loop
mov
jae
push
mov
imul
addr16
pop
mov
icebp
inc
test
jno
sbb
testl
mov
dec
add
inc
adc
and
and
push
out
or
das
addr16
push
lea
mov
rorb
or
adc
dec
mov
or
call
dec
lcall
insb
outsl
sbb
daa
mov
fs
mov
pop
jno
aaa
or
xchg
sbb
mov
push
adc
scas
nop
pop
shrb
sbb
add
cmc
push
stc
mov
cmp
pop
or
cmc
or
mov
das
push
adc
es
subl
inc
pop
stc
decb
pop
loopne
divl
fs
mov
ret
and
push
push
in
inc
jne
pop
cmpsb
stos
inc
cmp
adc
imul
xor
stos
pop
or
aas
sti
repnz
es
fisubs
adc
and
adc
lds
jae
sub
dec
sub
cwtl
mov
stos
xchg
lldt
stos
jae
or
inc
xchg
xor
shl
inc
xchg
mov
xchg
fistpll
dec
test
lahf
fldenv
popa
xchg
xor
sbb
das
push
mov
add
lcall
jbe
add
es
add
sub
mull
scas
ficomps
sbb
mov
mov
xor
cmp
pop
mov
jle
ja
pop
add
add
push
lahf
aaa
push
dec
roll
inc
xchg
mov
push
xor
cmpsb
adc
pop
push
les
dec
repz
adc
sub
mov
aas
fldenv
xchg
lds
sbbl
add
fstl
cmc
mov
xor
adc
es
mov
incl
or
jns
test
mov
mov
call
sub
sub
nop
dec
mov
mull
jae
scas
and
and
sub
cmp
ja
sti
push
xchg
icebp
xor
add
mov
sti
pop
and
xchg
repnz
aas
pusha
mov
push
inc
add
xchg
adc
inc
adc
sysret
popa
imul
dec
xchg
out
mov
int
aam
outsl
std
cmp
jle
cmp
xchg
or
enter
push
aaa
push
neg
sti
pusha
mov
push
sbb
in
testl
sub
xor
stos
enter
push
rcll
fwait
or
in
js
subl
pop
pusha
lahf
mov
leave
push
xor
sub
xchg
ror
pop
stos
pop
push
adc
inc
imul
jge
aaa
pop
jnp
insb
pop
nop
fbld
add
mov
ljmp
stos
xor
or
cmp
bound
pop
push
xchg
mov
call
sub
add
adc
inc
mov
in
push
cmp
mov
or
adc
rorb
sub
adc
and
aam
pop
xchg
cmpsb
xchg
jno
push
and
scas
xor
out
sub
scas
cmpsl
adc
movsb
push
add
outsb
fcomps
out
mov
xchg
mov
mov
dec
xorl
pop
pop
push
jle
popf
pop
dec
repnz
stos
or
fbld
test
inc
xlat
mov
fdivl
mov
mov
in
xor
push
cmp
ja
inc
scas
fldenv
imulb
int3
push
xor
pop
hlt
test
in
in
aam
mov
out
ret
xor
and
jle
sub
test
sub
mov
test
cmpsb
xchg
std
mulb
add
daa
lods
arpl
sahf
aad
call
roll
fstps
scas
sbb
inc
add
xchg
ret
rcr
in
loope
sbb
in
cmc
rorl
jno
repz
pop
mov
mov
das
cs
mov
insl
lret
movsl
and
jp
xchg
jmp
fnsave
sbb
lahf
gs
push
cmpsl
outsl
push
int
dec
fidivrs
test
cwtl
stos
fimull
mov
mov
mov
xor
loop
loop
mov
sub
out
sbb
mov
bound
inc
aas
sbb
mov
in
cs
mov
outsl
pop
subb
cli
sbb
fwait
arpl
inc
add
sub
flds
insl
mov
insl
fisttps
and
adc
pusha
rclb
cmp
jnp
out
pop
fbstp
imul
cmpsb
or
pop
inc
fidivs
fistpl
into
adc
xor
mov
mov
mov
push
pop
int3
cs
sbb
pop
mov
mulb
mov
test
lods
in
out
fsubrp
jns
mov
cmp
push
jno
mov
js
adc
rorb
cli
rol
sahf
or
mov
xchg
adc
fwait
daa
mov
mov
push
ss
jo
ss
repnz
push
and
arpl
dec
ja
pop
int3
inc
mov
sub
popf
xor
loopne
mov
mov
or
out
sub
aam
and
aas
repz
push
or
adc
out
or
cs
xchg
loop
ret
sbb
loopne
dec
loop
test
ljmp
sbb
nop
xchg
push
sub
push
push
lret
push
and
push
push
inc
push
pushf
mov
jb
jns
lods
pop
xchg
xchg
xchg
scas
jle
popf
dec
fistps
mov
or
inc
mov
jle
fldenv
pop
mov
hlt
sbb
ficomps
cmpsl
pop
mov
pop
push
inc
adc
nop
jnp
lods
push
stc
bound
mov
inc
sti
cmp
iret
adc
mov
xor
xchg
int3
mov
outsl
lret
and
sbb
fnstsw
sub
and
pop
inc
jmp
std
push
sub
sbb
sbb
add
adc
pop
mov
cmpsl
xchg
movsl
in
nop
jle
pop
pop
cmpsb
inc
inc
stos
hlt
das
mov
das
or
cmc
fstpl
or
andl
xchg
clc
sub
imull
inc
inc
outsl
rdpmc
in
cmp
cvtps2pd
dec
andl
mov
repnz
mov
jl
leave
out
popa
sahf
xor
mov
mov
movsb
mov
cmp
adc
dec
mov
fnstenv
xchg
in
adc
add
fcmovb
jb
cwtl
or
mov
jae
or
sti
xlat
mov
ss
inc
mov
lods
sub
fists
sbb
cmp
xor
test
add
and
jbe
xor
push
andb
neg
mov
data16
ljmp
dec
add
mov
inc
popa
dec
subl
mov
sbb
ds
or
mov
scas
shrb
je
mov
and
adc
scas
lret
add
adc
testb
sahf
sub
addr16
popf
in
lods
inc
cmpb
fcomps
adc
cmpsl
jbe
dec
inc
mov
shrb
dec
mov
rolb
jae
imul
cmp
mov
dec
cld
test
ret
sbb
inc
or
movsb
add
rcll
lds
push
stos
stos
cmpsb
adc
bswap
and
pop
xchg
fsubrs
pushf
shrl
jl
pop
sbb
or
dec
mov
test
pop
pop
xchg
fistl
out
loopne
lsl
pop
sub
xchg
xchg
mov
push
jns
dec
mov
add
insl
xor
repz
les
hlt
mov
mov
dec
fsubs
mov
jecxz
sub
push
push
adc
icebp
or
clc
idiv
adc
lds
cmp
push
les
inc
into
xlat
push
xor
rorb
loop
mov
cld
jns
mov
test
das
or
insb
aas
push
add
aam
jne
push
xor
adc
mov
pop
or
scas
sbb
and
and
jge
cltd
xchg
outsb
mov
out
xor
loope
mov
imul
or
cmp
int3
es
dec
popf
xor
mov
or
dec
in
in
sbbl
jmp
xlat
mov
pop
xchg
and
sbb
arpl
test
mov
aaa
jo
mov
adc
xchg
sbb
pop
jne
and
add
push
sbb
mov
and
lea
mov
jne
sub
leave
testl
sbb
cltd
stos
push
xchg
jmp
popa
stc
adc
aad
add
repz
or
ss
fdivrs
lret
jg
dec
int
sbb
in
pop
mov
sbb
xchg
ret
stc
mov
xchg
sub
push
jmp
xchg
cmp
mov
fs
dec
cld
roll
cmpps
adc
fwait
scas
or
push
out
inc
adc
scas
pop
mov
and
nop
xlat
xchg
lock
cmp
popf
or
sub
jle
dec
push
daa
xchg
cwtl
xchg
test
adc
and
call
push
bound
dec
adc
xchg
mov
mov
sbb
dec
xchg
pop
ja
pop
insl
ja
push
mov
xchg
mov
pop
xchg
aam
cmp
add
dec
stos
sti
mov
or
insb
lea
push
inc
test
imul
stc
and
in
out
mov
xor
data16
daa
iret
xchg
sub
jbe
test
xchg
int
mov
aaa
out
aad
adcb
fsubrp
in
in
fstpt
pusha
inc
inc
popl
jbe
out
jae
or
jno
adc
push
out
data16
jg
add
mov
addr16
lock
cld
mov
mov
rcll
pop
cmpb
pop
fsubs
jle
mov
add
push
pop
sbb
dec
call
stc
push
jo
cltd
pop
ljmp
xor
icebp
jl
mov
dec
push
xchg
cmp
insb
and
xchg
dec
push
ret
outsl
mov
mov
lea
js
xlat
push
push
pop
nop
adc
cmp
jno
pop
push
or
sub
enter
xor
aas
sub
xchg
loopne
pop
cmp
mov
jp
fucompp
inc
push
out
jnp
mov
adc
jnp
shr
xor
inc
jecxz
fadds
dec
ljmp
in
push
das
movsb
pop
or
cmp
inc
cld
pop
push
jg
fs
lea
mov
mov
rclb
mov
sub
cld
pop
xor
cs
int3
pusha
rcll
jl
adc
repz
pop
jle
sub
jns
or
mov
stos
pop
push
mov
push
sti
sub
push
repz
and
push
fstp
mov
jb
mov
jg
sbb
mov
cmp
es
push
pop
mov
xor
xchg
sbb
ljmp
adc
stos
mov
sbb
cmpsb
sbb
out
pop
jl
ss
add
inc
imul
adc
mov
mov
data16
aas
mov
popa
pop
in
clc
fidivrl
sbb
test
push
addl
popa
mov
sbb
pop
pop
fidivrs
shlb
jmp
and
scas
clc
aam
push
stos
les
rorl
stos
xchg
subb
sbb
movsb
push
insl
shll
outsb
pusha
dec
add
cs
push
into
dec
push
adc
cmp
dec
ss
push
dec
stc
arpl
icebp
cmc
pop
xor
cmp
lea
jecxz
je
push
repnz
shl
in
aas
mov
loope
cmpl
insl
fsubrs
ljmp
bound
das
test
mov
or
stos
movsl
ja
repnz
shrl
cltd
pop
sbb
push
psrld
push
mov
jge
adc
inc
stc
and
mov
cmpb
out
inc
pusha
inc
cmp
mov
push
pop
jecxz
pop
lret
sahf
pop
arpl
pop
mov
add
xor
rol
cwtl
xchg
js
cs
cmp
pop
jp
aaa
xlat
addr16
or
popa
gs
inc
icebp
push
mov
addr16
sbb
ret
das
lret
les
mov
adc
mov
out
push
mov
aas
out
fcmovnb
jns
xchg
ret
add
jle
adc
scas
inc
lahf
mov
mov
dec
cmp
add
xor
cmp
adc
shrb
mov
roll
mov
inc
mov
fcoml
cmpsl
mov
imul
repz
ret
mov
inc
lcall
andl
jno
pop
mov
dec
mov
cmp
mov
dec
movb
cltd
stc
insb
lret
fwait
imul
shlb
xor
inc
leave
or
outsl
in
ljmp
popf
or
xchg
mul
fmull
inc
mov
push
jmp
fistpll
cmc
fstpt
les
movsl
push
mov
cli
lcall
fsub
xchg
push
push
cmp
mov
xor
and
mov
repnz
gs
repnz
fs
out
xlat
mov
hlt
stos
pushf
aas
subb
lods
jmp
cmp
sbbl
fimuls
xor
mov
or
in
inc
shll
insl
out
adc
sti
add
repz
xchg
inc
js
xchg
jo
fcmovnb
sub
jo
stos
lea
fwait
sbb
js
push
and
mov
fdivs
subl
ret
push
sub
mov
lret
sbbl
mov
movsb
xchg
push
inc
dec
pop
mov
stc
loop
adc
dec
clc
aad
mov
lret
fildll
pop
cmpsl
lea
push
rcr
cltd
push
push
push
jo
cli
add
cmp
dec
adc
xchg
mov
addr16
andb
arpl
movsb
repz
gs
fisubs
jl
popf
push
inc
mov
loop
jo
popa
inc
xchg
cmp
jecxz
loop
xchg
push
xchg
cld
aam
inc
loope
jge
sub
addr16
cmc
je
cli
jle
sbb
in
mov
outsl
jmp
mov
outsb
shlb
sub
stos
fdivrs
popa
ficomps
fiaddl
cmp
pop
jle
sub
and
enter
fsubs
cmp
cmpsl
ret
xchg
outsb
mov
jnp
inc
push
out
mov
mov
pop
mov
loope
xchg
sbb
bound
pop
imul
jp
mov
pop
pushf
push
sub
and
sti
shll
fsubl
movsl
xor
shr
jmp
xor
stos
push
adc
xchg
or
push
add
mov
mov
nop
dec
jmp
mov
loop
cmp
aad
dec
xor
push
out
lcall
incb
sbb
pop
jmp
adc
dec
xchg
mov
and
mov
in
xchg
pop
in
xor
jl
clc
imul
pushf
pop
icebp
outsl
lods
in
cmp
addr16
clc
imul
adc
sbb
outsl
sbb
xchg
ja
sbb
xchg
fmulp
push
lret
filds
fstpt
xchg
sbb
xchg
pop
mov
mov
enter
xchg
shr
testl
mov
fisttpll
insl
in
dec
inc
lods
rorl
jb
fbld
cmp
ss
inc
and
push
lods
pop
sbb
and
imul
ret
mov
sbb
lods
sub
cltd
cld
sub
aam
dec
mov
mov
push
inc
insl
mov
outsb
out
inc
sub
or
shll
jl
daa
std
sub
sbb
nop
xchg
or
jmp
hlt
and
inc
sub
cli
jno
enter
bound
sub
xor
out
jno
outsl
fwait
add
jb
inc
imul
jno
rcrb
jnp
testl
sbb
mov
in
roll
inc
and
cmp
notb
mov
jns
cs
lea
add
cmpl
loop
fs
pop
xchg
fsubl
pop
lea
xchg
pop
xchg
mov
outsl
dec
fwait
hlt
sub
jb
inc
and
loop
sub
jle
and
inc
xchg
mov
jmp
sbb
mov
movsl
cmpsb
and
sbb
push
iret
push
or
mov
push
scas
push
and
adc
sbb
sub
mov
lods
cltd
jl
cmp
test
iret
add
inc
pop
data16
int3
or
out
inc
daa
fwait
int
shl
imul
mov
in
pushf
mull
mov
arpl
mov
jne
lods
dec
fidivl
mov
lods
out
out
or
or
addr16
inc
pop
sahf
lock
cmp
les
jp
les
les
cli
mov
lods
in
aad
fistpll
and
mov
fadds
pop
mov
data16
sub
fstpl
jnp
js
mov
fsubs
scas
pop
cmp
stos
pop
cli
or
adc
and
push
inc
add
les
ret
mov
cmpsb
mov
data16
rorb
les
lock
mov
jp
test
dec
jmp
and
scas
into
aas
xchg
shrl
xchg
cmpsl
adc
push
mov
mov
or
mov
adc
jne
add
inc
pop
lahf
xchg
jbe
leave
adc
cmp
outsb
in
sbb
fsubl
add
test
or
sbb
pop
aam
mov
int
stc
lods
and
int
imul
inc
mov
mov
out
adc
or
repnz
ret
and
sbb
jae
or
dec
int
movsb
mov
mov
xor
lret
das
cmp
in
and
jo
xchg
fidivs
mov
repnz
dec
icebp
mov
push
sbb
sub
lods
into
out
push
push
fidivrs
xor
enter
push
pop
jecxz
sub
arpl
pusha
cmpl
sbb
push
mov
rcr
bound
inc
mov
push
jo
pop
mov
cmp
pop
shl
pop
jb
xor
push
insb
mov
shlb
jmp
dec
sub
pop
cmc
jp
addr16
aaa
jbe
push
pop
inc
popf
fildll
jbe
stos
dec
jp
popf
xchg
aad
aas
mov
xchg
fdivrs
xchg
cltd
and
sub
pop
and
dec
and
dec
sub
cwtl
cmp
repz
aaa
orl
pop
iret
pushf
sub
aas
lea
push
push
and
ret
push
dec
adc
or
push
loop
push
fstpl
xchg
cld
into
insl
arpl
orl
gs
call
rcrl
pop
dec
repz
cwtl
pop
dec
jbe
or
lret
dec
sbb
insl
add
or
cltd
inc
cmp
test
inc
push
adcl
test
insl
mov
inc
jnp
test
cld
adc
sahf
outsb
clc
mov
in
lea
mov
cwtl
push
mov
fistps
sahf
test
inc
js
dec
mov
jle
inc
call
sbb
test
jp
sub
cmp
lods
push
movsb
cmp
sub
add
pushf
push
xchg
shrb
in
cmpsl
sbb
pushl
xchg
sahf
add
push
xor
test
gs
pop
call
xchg
push
jae
mov
mov
cmpsb
aaa
mov
or
testb
lret
leave
add
es
jp
adc
loope
ja
cmp
jb
int3
push
fiadds
add
sbb
xchg
cmpsl
xchg
int3
jmp
packuswb
lahf
pop
push
add
dec
dec
mov
or
stc
lahf
int
roll
leave
jb
int
mov
adc
lock
cs
subl
add
mov
fcomp
movsl
pop
clc
inc
ljmp
int
fsubs
jo
movsb
fwait
int
or
ds
push
push
jg
dec
in
push
jb
inc
mov
in
push
mov
lods
lcall
inc
jbe
push
push
sub
in
rcrl
enter
mov
lea
fimull
lcall
push
mov
xor
or
xor
icebp
or
jl
in
imul
pop
idivb
dec
shll
pusha
scas
cmp
mov
jno
arpl
aam
stos
push
in
or
mov
jg
ror
cmp
cli
or
orl
jg
int3
ljmp
pushf
mov
shll
lcall
adc
xchg
and
jg
in
pop
sbb
daa
arpl
add
movntq
scas
jo
inc
mov
es
dec
movsb
add
mov
cmpsl
dec
filds
imul
loop
lock
inc
and
fmuls
mov
and
enter
lahf
dec
dec
add
sahf
push
fbstp
xor
aam
pop
xchg
or
mov
ds
jl
iret
mov
adc
call
gs
popf
sbb
out
mov
rcll
and
jmp
dec
inc
rclb
sbb
cmp
lods
push
test
jae
mov
hlt
inc
add
sbb
xor
std
sbb
fs
je
imul
xor
xor
cmc
scas
andb
ds
add
subb
push
cmc
std
mov
into
push
sub
lods
mov
mov
jnp
daa
addb
push
enter
xor
pop
call
push
xor
dec
cli
and
push
pusha
jns
add
rorl
jb
or
push
repnz
fcmove
pop
push
subb
rcll
lret
add
mov
dec
dec
xor
fildl
jecxz
cwtl
test
jmp
je
cmp
inc
clc
mov
or
repz
out
fimull
mov
sbb
jo
cltd
cmpl
xor
add
xor
es
inc
sbb
ja
jns
mov
mull
cmp
mov
mov
out
sti
xor
pushl
add
inc
push
das
bound
cmp
cmp
sti
stc
mov
movsl
fadd
and
test
mov
scas
add
jmp
mov
rcrb
test
xor
stc
pushf
out
imul
lods
xchg
dec
out
mov
push
mov
push
dec
popf
inc
stc
inc
xchg
jle
and
in
add
or
pusha
das
and
mov
and
xor
inc
scas
in
mov
lds
xchg
cld
cmp
sub
iret
shlb
adc
imul
mov
imul
mov
sub
inc
ret
lea
pop
or
sub
in
lahf
or
cmp
or
cltd
cmpsl
mov
and
aad
pop
aas
adcl
adc
paddsw
pop
xchg
mov
jb
adc
mov
mov
cld
push
add
pop
mov
or
sahf
int3
dec
mov
orl
jp
and
jae
ror
into
int
lock
mov
add
sbb
arpl
int
sahf
test
jge
int3
dec
inc
mov
inc
dec
jbe
jle
or
or
cmp
jb
repnz
xchg
dec
out
xor
mov
mov
add
js
in
cmp
or
mov
xchg
sub
add
cmp
and
sbb
aam
les
clc
sub
dec
push
xchg
sub
idivl
ljmp
xor
adc
scas
nop
mov
fimull
jg
jns
aas
faddl
frstor
ret
aam
xor
push
int3
pop
jmp
sbb
mov
mov
ljmp
cli
je
popa
jecxz
lock
cmp
sub
enter
pop
adc
mov
adc
icebp
loopne
sbb
cmp
inc
lret
dec
hlt
inc
cld
shll
ljmp
mov
pop
jno
bound
psubw
mov
mov
sub
mov
orl
mov
mov
sub
mov
orl
mov
mov
sub
mov
mov
mov
mov
xor
mov
add
or
mov
mov
mov
jmp
clc
mov
cmpl
stos
dec
mov
pop
jp
out
jbe
sub
pushf
test
repz
jg
xchg
stc
int
cmp
pop
mov
test
test
bound
jbe
xor
adc
sub
push
loopne
sub
test
push
imull
pop
mov
jb
rol
push
mov
adc
pushf
gs
es
loope
jb
xor
add
fs
jnp
fadds
xchg
xchg
outsb
push
or
fimuls
fldln2
rorb
pop
push
cmp
int3
popf
sar
cwtl
outsb
mov
lret
mov
mov
push
movsb
sahf
cmpsb
es
test
adc
sti
add
dec
orl
jecxz
je
daa
and
jnp
mov
inc
jmp
lahf
cli
xchg
adc
sbb
jmp
les
add
xchg
jge
repnz
mov
fstp
repnz
mov
adc
nop
sub
pop
mov
cmpsl
and
orb
fwait
outsl
test
mov
insb
mov
dec
add
ljmp
js
push
cmp
add
push
push
out
inc
hlt
inc
pop
pop
cmp
ljmp
jecxz
xchg
sbb
inc
jno
pop
mov
int3
jb
mov
push
fincstp
int3
outsb
enter
push
pop
pop
inc
cmpsl
rolb
loopne
icebp
adc
loope
mov
fldl
clc
and
jge
sbb
cwtl
cmp
je
nop
repz
pop
popf
mov
jns
movsl
lea
xchg
add
shlb
stos
out
dec
mov
cmp
ss
lahf
sti
lcall
xor
push
pop
sbb
fnsave
cltd
mov
or
sarb
aaa
add
jo
lcall
dec
mov
push
icebp
mov
cmpsl
jae
cmp
and
out
dec
int3
rcrl
xchg
mov
adc
push
jle
push
lods
inc
loope
fwait
mov
scas
inc
mov
cmpb
cwtl
mov
adc
scas
repnz
rcr
nop
out
stos
das
lret
xchg
scas
out
xorb
cmp
cmpsl
add
pushf
lahf
dec
xor
cmpsb
sbb
rcll
sbb
ffree
cmpsb
es
test
test
and
popf
xchg
sub
sub
cli
dec
std
les
or
sub
arpl
inc
dec
push
out
aam
out
lret
test
inc
das
cld
addl
ds
xor
dec
aas
inc
fxrstor
sub
mov
sti
imul
out
add
das
jne
pminsw
shlb
call
inc
test
ja
ljmp
push
insl
add
fistl
shlb
pop
add
jno
into
outsb
cmpb
push
loop
or
cwtl
xor
pop
jle
lret
dec
xchg
pop
pop
fnstsw
daa
das
hlt
inc
pop
mov
setne
insb
ss
in
in
or
inc
loop
sahf
daa
iret
pop
stos
and
inc
xchg
sub
cmc
sbb
push
sbb
mov
loope
xchg
inc
cmp
out
pusha
push
and
imul
mov
cltd
aam
fldt
andl
and
movsb
idivl
xor
dec
inc
push
push
mov
and
sbb
jo
fidivl
enter
mov
gs
aas
inc
cmp
or
into
push
mov
mov
pushl
sub
addb
loopne
mov
add
mov
mov
mov
or
cmp
jne
cmp
stos
mov
mov
jge
mov
lods
sbb
fcoms
mov
sar
in
dec
jmp
repnz
and
fs
jge
add
loope
icebp
mov
repz
insl
mov
je
stos
addr16
jle
sub
stos
mov
mov
ficoms
dec
pushf
or
push
jae
jg
sbb
dec
adc
int3
cwtl
mov
mov
mov
mov
getsec
pop
lods
rcr
add
scas
push
js
mov
sub
scas
inc
lret
mov
mov
or
cmpsl
lods
push
int
and
shr
hlt
mov
popa
fdivrs
insl
rclb
gs
rcl
mov
mov
xor
mov
in
sbb
sbb
and
mov
cs
ss
push
movsl
jecxz
nop
adcl
aas
pop
loope
jne
hlt
xor
jl
xor
insl
inc
push
pushf
mov
sbb
mov
cli
xchg
pushf
sbb
xchg
add
aad
jne
add
adc
or
add
movsl
add
mov
jge
and
fsubs
sbb
add
mov
adc
sbb
loope
out
pop
pop
mov
hlt
mov
in
dec
dec
fldcw
push
sahf
inc
jge
int
sub
mov
imul
aam
out
lret
outsb
xor
les
loop
mov
sub
lcall
repz
xchg
xor
aad
pop
icebp
push
pop
hlt
fldz
and
fnsave
je
xor
mov
sbb
ja
sub
pop
pop
aad
dec
rorb
jl
aam
inc
shr
lods
cmc
outsb
imull
jbe
cmpsb
in
cmp
arpl
jbe
orb
mov
inc
xor
sbb
pop
jp
jae
add
sbb
adc
inc
mov
lds
fwait
xchg
lcall
pop
cs
adc
fs
roll
inc
inc
fs
dec
inc
push
aas
movsl
cmp
and
cld
pop
mov
push
mov
outsl
push
int3
sbb
cs
inc
inc
add
push
sbb
or
clc
rol
mov
pop
js
push
jb
adc
lret
sarb
ret
adc
test
mov
in
lretw
jmp
jae
sbb
push
push
out
hlt
lcall
sub
dec
jne
xchg
push
outsb
inc
sub
mov
dec
daa
pop
mov
nop
sbb
jmp
mov
dec
in
push
add
cmpsb
movsb
xlat
mov
xchg
in
in
mov
imul
cmp
xor
andb
sbb
testl
mov
inc
cmpsl
fildll
outsl
sbb
int3
xor
or
mov
lds
mov
adc
loop
movsb
movsb
jo
xor
arpl
sbb
cli
pop
call
adc
cmpl
pop
add
xor
icebp
inc
pop
jg
ret
insb
add
sub
pop
fidivs
jp
sbb
loope
aad
cwtl
dec
or
xchg
xchg
jle
cmp
ljmp
hlt
jmp
jecxz
jmp
imul
mov
xor
jle
or
movsl
ds
mov
dec
jo
repz
out
and
push
cmp
pop
std
bound
push
push
loope
gs
adc
addl
sbbl
scas
or
xlat
jb
daa
xchg
test
or
dec
pop
ds
into
xchg
lods
lods
addr16
mov
lret
push
or
vmovaps
cmp
dec
mov
notb
sbb
push
scas
insb
push
xchg
mov
push
fs
xlat
stc
mov
insl
xchg
inc
jl
stos
xchg
movsb
incb
mov
jg
insb
or
inc
popa
js
es
dec
js
cmp
repnz
pop
daa
aaa
xor
enter
add
lret
mov
mov
mov
dec
notb
pop
shl
push
dec
sbb
addb
inc
add
pop
mov
xor
or
pushf
xor
xor
pop
inc
xchg
xchg
pop
mov
dec
pusha
push
jnp
test
jnp
popf
test
xor
cld
ficompl
stos
cwtl
movsb
cmpb
bound
outsl
add
or
ret
aaa
test
cld
jl
lds
mov
test
addr16
rol
int3
adc
in
ja
sub
fs
jne
push
dec
jmp
fmul
clc
add
xor
fsubs
pop
into
pop
sub
mov
gs
pop
add
pop
shl
std
and
std
mov
test
sub
loop
lods
lods
cmp
jo
test
pop
cmpsl
rcr
mov
stos
test
xchg
and
icebp
out
fs
sbb
mov
pop
mov
fmuls
inc
jmp
lea
jl
adc
or
sbbb
call
ss
jecxz
fldcw
push
pushf
int3
add
push
mov
outsl
stc
adc
xor
ljmp
add
xchg
dec
xor
negl
insb
push
dec
pop
mov
sbb
sub
and
aaa
mov
ja
add
shlb
xchg
mov
test
push
movsl
mov
mov
cltd
sti
dec
mov
fdivrl
clc
into
shrl
and
add
mov
ret
add
xchg
push
movb
stos
movsl
scas
jo
add
dec
sub
cltd
gs
xchg
cwtl
jne
mov
imul
ret
cmpsl
imul
shl
and
leave
ds
iret
inc
iret
dec
xor
or
or
cmp
xor
stos
addr16
fsubl
stc
dec
jbe
outsb
sbb
hlt
mov
mov
mov
jae
cmp
mov
pop
xchg
scas
mov
xor
lahf
push
lea
stos
popf
mov
dec
mov
adc
xor
add
into
int
dec
je
movsb
outsb
mov
jg
cmc
push
adc
cmpsb
jl
nop
add
icebp
jecxz
int3
out
sub
lret
sbbl
cmpsb
adc
aad
stc
jle
push
aad
adc
sbb
mov
test
pusha
js
xor
jnp
aad
mov
fcomi
stos
insl
aad
cmp
lahf
sub
js
cli
jmp
mov
sub
std
dec
jns
fstpt
sbb
imul
fiaddl
push
mov
cmp
ret
in
fwait
mov
mov
in
movsl
xchg
or
mov
scas
xor
mov
das
sub
nop
pop
out
xor
pop
mov
add
out
add
shlb
shl
cmp
sub
mov
dec
add
push
das
rclb
push
shr
xchg
ret
push
xorb
xchg
ss
cmp
pop
pop
sahf
inc
pop
movl
add
dec
je
outsl
add
mov
mov
inc
adc
aas
sahf
fistl
mov
sbb
sbb
add
testl
sub
loope
das
fsubl
xchg
sti
int3
out
bts
push
sbb
cmc
dec
packssdw
pop
out
inc
aaa
push
inc
daa
lret
xor
or
jns
or
xchg
dec
lahf
add
lods
rcll
mov
push
lods
cmpsb
dec
mov
out
inc
cld
std
push
out
int
pushf
out
aaa
mov
mov
cld
or
push
sbb
jl
dec
stos
es
xor
enter
or
lods
ss
fidivrl
sbb
outsl
aas
mov
andb
sub
sarb
dec
imul
push
cmpsl
fwait
inc
repnz
jle
out
fwait
and
pop
lret
xor
xchg
mov
mov
mov
in
mov
fadds
ror
mov
cmpsl
scas
incb
jo
shrb
or
and
pusha
je
or
inc
pop
add
and
adc
popa
ret
ds
sbb
cmp
push
js
es
in
insl
inc
jne
jmp
lds
out
ret
add
fwait
out
aam
das
into
or
xor
mov
scas
push
xchg
rcr
out
sub
mov
inc
sub
jecxz
xor
dec
mov
add
loope
sub
stos
push
mov
push
loope
jns
and
jnp
lock
lret
out
mov
push
dec
cmpsb
cli
pushl
and
mov
dec
adc
movsl
mov
jne
add
data16
sub
cmpb
jmp
imul
jge
fwait
pop
pushl
sub
xchg
mov
xor
fwait
test
cwtl
int
xchg
in
mov
xchg
scas
jg
insl
addr16
jg
pop
scas
pop
cmpl
fwait
mov
outsl
fwait
loop
es
out
mov
xor
nop
cmp
mov
lcall
int
sub
or
push
jns
and
xor
add
scas
ljmp
iret
popf
xor
pushf
movb
addr16
test
add
enter
cmp
inc
call
adc
sub
cmpsb
push
inc
fstp
mov
dec
mov
cmp
cltd
lock
hlt
lea
push
xchg
bound
cmp
gs
inc
pop
mov
dec
jns
lods
test
mov
dec
aam
stos
je
push
push
mov
cmp
flds
mov
sub
add
sbb
push
or
push
int
jne
enter
fcoml
jl
mov
xchg
push
mulb
test
xchg
push
cmp
fstpl
xchg
mov
enter
into
mov
sub
cwtl
mov
js
dec
out
mov
pop
pop
xor
mov
dec
mov
imul
lods
push
repnz
mov
inc
xchg
and
dec
mov
ret
sarl
stos
inc
popa
addr16
push
inc
push
mov
push
std
mov
pop
xchg
scas
fcmovu
pop
aas
dec
inc
mov
data16
lahf
jle
nop
pop
xchg
shrl
sbb
jo
jge
mov
cmp
dec
lahf
xlat
sar
int
xchg
push
push
fincstp
rcrb
push
mov
loopne
jo
movsb
push
sar
dec
inc
cmc
xchg
inc
call
or
cmp
xlat
sti
fwait
hlt
push
pop
cmp
cmp
adcb
push
addr16
push
ds
mov
dec
inc
repz
fwait
dec
dec
leave
push
ljmp
lock
lods
pop
mov
gs
xor
leave
out
mov
out
out
jecxz
adc
mov
mov
pop
push
push
pop
rcrb
xchg
sub
sbb
sbb
push
sub
imul
aaa
stos
fidivrl
xorl
out
jo
inc
jmp
dec
add
out
add
andb
mov
add
lods
imul
xor
enter
push
insl
cmp
inc
pusha
rcll
xor
jg
bound
dec
mov
pusha
and
lcall
stc
movsb
imul
dec
adc
in
xor
pop
dec
push
insb
inc
pop
mov
mov
xchg
mov
test
mov
mov
xchg
cld
out
xor
insl
cld
filds
cmp
and
mov
mov
out
imul
jbe
push
dec
push
push
fwait
push
xchg
aad
add
jne
mov
sbb
pushf
xchg
je
adcl
jae
ss
loope
jbe
mov
stos
jbe
inc
ljmp
or
ret
jnp
stos
sub
repnz
mov
cmp
mov
push
xchg
cmpsb
test
push
jge
rol
pop
test
lea
xor
aaa
iret
xorl
leave
adc
cmp
inc
call
or
cmp
jno
insl
pop
movsl
test
xchg
pop
lahf
mov
push
cmp
xchg
cwtl
push
xchg
adc
jno
push
cmc
dec
repz
pusha
mov
test
lds
enter
jbe
repz
stos
or
push
dec
mov
movsb
push
sbb
inc
pop
mov
nop
and
mov
mulb
test
pop
adc
and
sub
inc
aaa
cli
cld
lock
push
mov
inc
lds
leave
sti
xor
mov
int3
in
xor
das
cmpsl
fs
stc
test
and
movsl
out
in
inc
stos
lret
test
jno
xlat
or
and
pop
add
fmull
sahf
mov
nop
jg
xchg
in
cli
xchg
sub
add
add
aam
in
cwtl
test
iret
mov
sub
xchg
adc
xor
inc
pop
js
roll
or
pusha
in
arpl
xchg
mov
loop
cmp
push
repz
xchg
sub
xlat
sub
in
dec
in
xchg
lcall
jo
pusha
data16
notl
pop
xor
andb
in
add
lret
sub
bnd
lret
enter
popa
xor
ja
adc
pop
scas
gs
imul
cmp
push
push
push
and
xchg
adc
aad
fisttpll
or
inc
sbbl
inc
xor
sbb
sbb
lods
dec
jnp
mov
mov
sbb
dec
out
stos
mov
outsl
hlt
mov
cld
cmp
das
repnz
or
flds
dec
dec
aad
fnstsw
cmpsl
jmp
lock
sbb
add
stc
rcr
lods
lock
adc
jb
mov
cs
jge
repnz
xchg
cli
imul
aam
dec
cmp
arpl
sbb
add
cmp
outsl
cmp
mov
lds
insl
or
push
and
adc
in
push
pop
cwtl
out
dec
fcom
aas
push
test
adc
mov
pop
rcl
sub
mov
das
ror
mov
movsl
sbbb
pop
mov
xchg
adc
mov
leave
sahf
inc
mov
sbb
and
push
inc
popf
arpl
mov
jmp
gs
bound
jmp
lret
shll
jb
lahf
push
inc
ret
mov
pop
scas
pop
sbb
sbb
pop
mov
loop
sub
ret
iret
fs
pusha
lock
rcr
xchg
mov
lret
inc
icebp
jl
mov
mov
loop
jecxz
push
ret
or
pop
pop
push
and
gs
jb
lods
sahf
hlt
jmp
shrb
lret
add
xchg
and
push
xchg
orb
and
pop
gs
dec
push
pop
orl
stc
movsl
mov
iret
xor
testl
pusha
loope
sub
pop
stc
push
inc
adcb
movsb
addr16
dec
je
inc
mov
lahf
cmp
push
inc
cli
aaa
push
sbb
test
sub
imul
lret
jbe
scas
das
call
insb
sub
enter
mov
xchg
aas
and
mov
push
fucom
rcrb
and
jns
out
mov
push
or
add
jno
pop
push
xor
xchg
add
icebp
out
pop
jo
dec
popa
sub
in
adc
xchg
sub
adc
fldl2e
fsubrs
add
add
rcrl
sub
push
push
clc
adcb
mov
mov
lahf
call
shlb
add
xchg
mov
and
ja
cs
in
dec
or
cwtl
repz
bound
xchg
or
mov
push
inc
xor
sub
jns
cmp
mov
push
aaa
xchg
orl
inc
rorb
add
outsb
sbb
cmc
jo
and
int3
outsb
jmp
add
inc
pop
in
xor
adcl
lock
xor
popf
ss
and
or
ja
lret
adc
aad
call
sbb
adc
out
mov
jb
fcom
ret
fs
movb
nop
lahf
adc
es
ja
or
or
and
jle
mov
sub
jb
cmpsb
xchg
fsubrl
cmp
push
push
aam
fsub
jp
test
jp
jge
jl
jle
lock
bswap
add
stos
xor
dec
dec
sub
mov
fstps
jle
daa
xchg
ja
paddsb
mov
shll
movl
outsl
inc
bound
mov
add
out
sti
jno
lods
mov
sbb
jmp
mov
ja
mov
arpl
add
jle
cmpsl
insb
mov
int
pushf
imul
pusha
adc
icebp
pop
out
js
in
xchg
xchg
enter
clc
jno
push
inc
pop
inc
lods
or
pop
dec
inc
roll
pusha
out
loopne
mov
or
pushf
negl
rep
xchg
and
js
and
mov
popf
dec
pop
je
dec
mov
mov
xchg
lock
pop
push
pop
push
jle
mov
and
inc
fiadds
stos
mov
adc
xchg
in
mov
inc
leave
mov
push
rcrl
fucomp
inc
mov
dec
subl
out
scas
ja
mov
stos
and
cmc
and
inc
sub
or
in
cmp
pop
les
nop
or
fiaddl
jno
out
cmpsl
lods
mov
pop
and
cld
xchg
lea
popf
add
pop
sub
cli
mov
sub
jae
cmpsb
adc
shll
xor
sbb
sar
popf
sub
dec
jle
jmp
clc
cwtl
fiaddl
lret
mov
cmp
xor
daa
mov
or
pop
xor
xchg
mov
cli
adcl
xchg
inc
jp
mov
addr16
push
add
cmpb
sub
xchg
sbb
clc
outsb
add
pop
mov
inc
inc
fsubrs
jl
xchg
imul
mov
sbb
int
push
arpl
inc
jg
out
and
pop
stos
jnp
cs
fildll
sbb
stos
mov
dec
xor
addr16
mov
cmp
jns
into
pop
stos
cmpsb
sbb
xorl
imul
sbb
xchg
push
mov
outsl
xor
jo
mov
push
ret
push
addr16
push
into
arpl
rcr
adc
les
xor
mov
ret
xchg
call
jb
xchg
fs
imul
aaa
negl
sub
neg
test
in
aad
xchg
popf
addb
cltd
test
fidivl
out
sub
icebp
loope
sbb
sti
push
lret
mov
cmpb
cmp
adc
mov
sbb
aas
ss
cld
inc
repnz
leave
cltd
dec
xor
lcall
xchg
push
shr
cmp
test
int3
bound
xor
mov
sbb
mov
or
lret
pop
xchg
cld
cmc
out
ja
xor
test
mov
iret
and
sub
mov
xchg
sub
jl
mov
mov
cs
dec
sbb
sub
es
lret
mov
sbb
jno
mov
cli
push
lret
mov
push
addr16
int
sbb
jns
rol
cwtl
xorb
sahf
lcall
xorb
inc
je
sub
mov
mov
sbb
ret
ret
and
jmp
jmp
and
adcl
gs
fnstenv
aad
nop
test
popf
fnstcw
mov
repz
daa
lahf
test
cmp
add
mov
jo
pop
aad
xor
mov
lahf
xchg
xor
cwtl
mov
mov
mov
fnstsw
push
fst
aam
in
aad
mov
cmpb
sub
pop
imul
movsb
jge
stos
enter
stos
push
es
stos
cmc
inc
mov
and
fmul
mov
pop
fdivp
das
es
xor
ds
xchg
out
adc
stc
lods
push
sub
cs
leave
inc
or
push
mov
in
sarb
arpl
repz
pushf
in
in
inc
enter
add
scas
jo
stc
mov
stos
enter
popa
ret
push
js
mov
dec
out
mov
xchg
mov
or
jb
cmp
int3
or
cmp
aas
ljmp
inc
sti
cmp
popf
bound
in
mov
sbb
cltd
push
pushf
or
mov
add
aad
pushf
pushf
mov
xor
push
lahf
sbb
push
add
push
inc
pop
out
std
repz
repnz
mov
jge
cmp
xchg
arpl
cmp
sbb
frstor
and
add
in
add
and
flds
mov
mov
pop
wbinvd
dec
imul
dec
mov
mov
inc
rcll
sub
lods
popf
mov
fdivrl
std
add
fstps
sbb
scas
jp
sbb
inc
mov
lods
lds
inc
mov
rcl
inc
aas
andb
sub
out
pop
outsl
mov
out
mov
stos
cmp
cmp
lods
dec
cmpsb
inc
in
push
jmp
andb
dec
push
adc
push
and
cmp
mov
sahf
inc
insb
mov
aad
out
pop
mov
lds
or
jnp
xchg
mov
packssdw
insb
sti
and
call
xor
rcrb
les
repnz
push
jg
or
nop
lahf
cmp
inc
sub
push
sbb
inc
leave
jnp
dec
add
cli
sub
cld
in
push
xlat
subb
lock
shrl
out
cmp
or
or
mov
mov
fwait
inc
out
jno
ljmp
xchg
icebp
inc
mov
daa
int3
lcall
cmp
xchg
jnp
xchg
jl
test
add
mull
mov
leave
scas
pop
cli
stos
jecxz
or
out
sub
into
gs
and
mov
xchg
inc
mov
sub
fmul
dec
cmp
add
adc
inc
push
and
stos
fildll
fisubl
pop
icebp
sub
push
cmp
in
add
mov
repnz
aad
cmc
cmc
pushf
iret
fwait
fwait
push
aad
sbb
sub
test
dec
mov
xor
sub
sub
dec
mov
add
xchg
push
adc
xchg
inc
push
mov
sbb
mov
push
xor
iret
xor
sbb
dec
repz
xor
in
pop
inc
xchg
fwait
pop
roll
lret
jp
aam
das
push
test
push
jo
lcall
cwtl
movb
or
cmp
xchg
push
dec
or
inc
stos
into
dec
arpl
xchg
bound
pop
pusha
pop
push
mov
fwait
out
mov
xor
push
ja
xchg
sti
dec
inc
movsb
mov
sub
cs
pop
insl
mov
imul
into
bound
mov
pop
cmp
fisttpll
fbstp
add
pop
idivb
rclb
pushl
push
lods
jl
inc
xor
arpl
rcll
inc
lret
sbb
hlt
dec
xchg
shr
fcomip
imul
mov
jmp
insb
mov
out
std
push
jecxz
out
fnstcw
ret
and
add
push
fiaddl
xchg
push
loope
cmpsb
jg
mov
andb
adc
add
dec
imul
int
sub
fs
popf
xchg
roll
push
andb
addr16
add
pop
jge
cs
je
dec
in
pushf
adc
jge
movsl
lock
dec
int
mov
add
fstps
rorb
int
fnstsw
cld
push
fidivl
xchg
or
pop
cs
xchg
in
inc
adc
mov
inc
in
push
jnp
mov
sbb
hlt
cwtl
adcb
fdivrp
imul
shl
jge
mov
addr16
repnz
gs
popf
xor
xor
mov
jp
cmp
mov
pusha
test
movsb
xchg
xchg
daa
divl
mov
sbb
cmp
mov
loopne
pop
sar
cmp
xor
push
ja
imul
nop
data16
jno
sbb
rclb
jno
repnz
gs
cmp
movsl
loop
adc
jae
out
cwtl
popf
jle
clc
pop
xchg
js
nop
inc
sarb
xor
idivb
iret
lret
clc
ds
cmp
sbb
jne
xor
repz
inc
arpl
add
test
daa
jl
push
dec
stc
jmp
xorb
test
sub
js
pop
adc
gs
popf
push
fildll
popf
add
jnp
jo
jne
inc
pop
movsb
fisubs
das
frstor
leave
leave
jecxz
out
in
int
inc
shrb
outsb
test
scas
sub
inc
adc
pop
scas
mov
jge
fisubl
mov
xor
pop
mov
sbb
mov
rcrb
jecxz
movl
inc
pop
bound
cmp
inc
stos
nop
rcrl
nop
cmpsb
dec
lods
or
and
xchg
mov
mov
add
jnp
jne
clc
jle
pop
loope
sub
xor
daa
mov
push
lret
fnstsw
neg
sbb
ljmp
or
bound
cmc
daa
mov
aas
into
arpl
inc
xor
jb
xchg
lds
sti
leave
pop
push
cmpsb
in
pop
push
fs
leave
mov
ret
or
jbe
sbb
adc
pop
jle
or
mov
sahf
subl
push
push
sti
gs
xchg
stc
addr16
cld
scas
push
shll
in
lret
push
add
dec
aam
jge
cmpb
jo
cltd
call
dec
fs
pop
push
or
insb
xor
mov
pop
dec
imull
mov
repz
stos
cmpsl
nop
imul
cmp
jl
cmpsl
aad
popa
cmc
ss
inc
add
fisubs
aaa
inc
push
mov
jmp
ljmp
push
push
fwait
adc
in
mov
mov
rorl
in
jne
das
xchg
add
stc
and
xchg
movb
pusha
test
inc
dec
repz
stc
adc
sub
add
push
and
xor
sub
or
and
lods
out
xlat
mov
dec
jno
shrb
mov
fdivs
mov
cld
int
fistps
out
out
imul
sbb
mov
push
call
movsl
in
out
pop
bound
test
test
movsl
push
stos
leave
xchg
jg
pop
incb
in
mov
inc
dec
shlb
push
pop
cmp
out
mov
or
sti
jae
jecxz
jle
in
push
cmp
cli
test
stos
xchg
clc
testb
inc
lahf
stos
sbb
std
mov
or
xorb
xor
dec
cmp
iret
or
mov
sub
xor
ds
xor
add
cmp
mov
sbb
jnp
ljmp
mov
addr16
stos
adc
dec
jmp
jle
dec
ret
icebp
jb
rep
mov
sbb
rolb
lret
int3
jno
xchg
or
les
sbb
fsubs
mov
cwtl
pop
push
cmp
or
insl
sub
jge
sbb
mov
pop
sub
mov
and
push
push
sarb
lds
mov
push
fldt
imul
lahf
lret
mov
xlat
xor
mov
push
push
cmpsl
ljmp
ret
scas
cmp
xchg
fsubrp
in
jmp
or
in
scas
in
adc
lods
mov
lea
push
sub
aaa
add
jmp
rclb
aad
into
rcrb
adc
loop
pop
scas
push
test
in
inc
inc
sub
jmp
scas
push
mov
pop
cmp
out
jg
xchg
cmp
dec
int3
mov
cmpsb
add
popa
dec
ljmp
inc
cld
orl
mov
xor
add
push
mov
xor
add
push
mov
xor
add
push
lea
push
pushl
pushl
call
test
je
lea
push
mov
xor
add
push
mov
add
push
mov
mov
pushl
call
mov
lea
mov
mov
test
je
lea
mov
mov
mov
mov
mov
sub
mov
mov
xor
mov
sub
add
mov
mov
mov
mov
pushl
movb
mov
pushl
pushl
pushl
pushl
pushl
pushl
pushl
mov
call
mov
mov
add
pop
pop
leave
ret
push
mov
sub
add
movl
xorl
lea
sbb
mov
add
push
movl
cmpl
je
cmpl
jne
pushl
push
push
pushl
call
cmpl
jne
xor
or
dec
mov
mov
dec
mov
jmp
mov
mov
sub
xor
mov
xor
mov
sub
lea
movzbl
adc
mov
mov
orl
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
call
cmpl
jne
mov
inc
mov
jmp
sub
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
push
push
pushl
pushl
push
call
jmp
mov
xor
add
mov
mov
add
mov
mov
addl
add
sbb
push
mov
andl
jmp
xor
add
inc
mov
cmpl
jae
cmpl
jne
call
cmpl
jne
xor
xor
inc
mov
jmp
andl
jmp
xor
or
inc
mov
cmpl
jae
cmpl
jne
pushl
push
pushl
call
jmp
movzbl
sbb
mov
adc
mov
mov
xor
movl
cmpl
je
cmpl
jne
push
push
push
call
xor
add
dec
mov
jmp
mov
xorl
add
cmp
movl
je
movl
mov
movl
jmp
mov
mov
cmp
jne
movl
push
movl
jmp
mov
mov
mov
cmp
movl
jne
add
mov
add
xor
or
add
mov
sbb
mov
add
mov
xor
movl
add
addl
imul
addl
mov
xor
add
cmp
mov
push
je
mov
add
mov
mov
xor
add
imul
mov
jmp
mov
xor
mov
mov
xor
mov
mov
sub
add
mov
mov
add
mov
mov
mov
xor
jmp
neg
jns
xchg
mov
popf
outsb
mov
inc
lods
jae
fsubrl
add
inc
pop
jp
ja
jno
fbld
xchg
cmpsb
sub
lock
xor
arpl
push
dec
jb
sub
stos
jns
roll
jbe
sahf
xor
inc
out
stos
mov
stos
dec
mov
enter
cmp
ror
test
xchg
xchg
out
lods
push
loope
and
push
mov
jne
and
fildll
cld
icebp
iret
mov
push
sbb
aad
mov
mov
xchg
cmp
aam
mov
sub
inc
sbb
pushw
push
and
outsb
and
or
or
cmp
inc
jns
xchg
scas
mov
adc
pop
imull
and
sbb
cmc
or
sti
icebp
scas
pop
stc
hlt
iret
xor
mov
shl
lret
test
and
xor
push
xchg
aas
cmp
jmp
xlat
inc
cmp
mov
jno
jg
fs
out
cmp
arpl
push
adc
idivl
mov
mov
inc
pop
push
hlt
stos
mov
sbb
ret
mov
sub
add
dec
xor
push
sub
sbb
pop
sbb
pop
jp
repz
xor
fisttpll
sarb
call
push
out
jmp
sub
repnz
mov
das
repz
nop
inc
fstp
sub
mov
jbe
stos
ljmp
divl
in
mov
jmp
inc
mov
test
dec
in
cmp
nop
clc
pushf
xchg
aaa
out
jno
push
sbb
adc
movl
push
jg
cmp
fcmove
xlat
data16
dec
rcll
push
cmpsl
lahf
daa
pop
push
mov
and
or
pop
nop
xchg
mov
cmp
sahf
xor
and
rorb
jg
popf
dec
mov
dec
mov
pop
mov
ss
std
push
insl
pop
std
mov
inc
push
mov
mov
inc
mov
iret
xchg
inc
fmuls
jno
xor
jns
fsubrl
mov
jge
jae
stos
call
dec
xchg
cmp
pop
mov
inc
jb
andb
push
clc
fidivs
data16
xor
out
bound
mov
sbb
adcb
add
mov
pop
int3
mov
mov
cmp
jl
lock
shll
inc
jnp
inc
lea
nop
adc
repnz
sti
cmp
xorb
inc
mov
punpcklwd
pop
les
test
int
dec
xor
je
xchg
iret
rcrl
insb
loope
cli
jp
sbb
pop
inc
fcmovnb
shl
pop
or
sahf
sub
dec
or
pop
sub
mov
adc
ret
scas
rorl
out
pop
pop
and
insl
out
mov
and
imul
adc
loop
sbb
out
sub
lret
sbb
push
push
or
push
xchg
aad
jb
loop
mov
ja
lds
out
mov
je
cmp
popf
or
mov
dec
stc
out
aam
xchg
in
sbb
imul
mov
or
jmp
xor
ss
adc
shrb
mov
fadds
lahf
mov
mov
out
fimuls
std
popaw
jno
push
or
mov
les
filds
insb
adc
aas
imul
xor
leave
out
adc
imul
cmp
roll
movsb
dec
pop
add
or
pop
daa
dec
mov
add
mov
nop
pop
iret
add
push
xchg
fs
ds
adcb
push
fbstp
jle
adc
dec
and
in
inc
inc
pop
imul
jle
das
lods
sbb
out
aaa
sub
dec
inc
loopne
xor
xorl
jle
adc
hlt
fwait
ljmp
jl
mov
test
loopne
xchg
jge
inc
out
dec
shlb
cli
test
adc
mov
push
fs
or
xor
lods
pop
inc
jle
dec
inc
lret
adc
inc
nop
adc
mov
push
imul
push
sbb
push
int3
test
call
sub
add
dec
cli
jmp
sti
pop
testb
add
sahf
rorl
sbb
xchg
insb
lods
push
cld
and
push
or
push
movsl
pop
and
std
push
mov
push
adc
fisttpll
jnp
out
jge
jne
inc
mov
jns
mov
int3
sbb
movsb
popa
or
xor
cmp
scas
insl
in
aas
ficoml
int3
jns
mov
jno
push
adc
mov
xchg
cmp
cmc
dec
popf
push
je
out
xor
cwtl
mov
cmp
add
jne
xchg
push
jns
ss
push
sub
cmpsb
or
xor
cmpsb
arpl
xor
vcmpss
jno
idiv
mov
or
push
xchg
push
mov
stc
adc
or
cmpsb
cmp
pop
jmp
and
cs
xor
xchg
cmp
mov
pop
mov
pop
stc
add
adc
ret
pushf
sbb
mov
xor
outsb
dec
int
mull
ljmp
scas
cmp
pop
cmp
cs
mov
test
inc
sbb
sub
pop
dec
faddp
dec
ljmp
inc
sbb
and
loopne
daa
push
push
inc
cmp
mov
aas
add
enter
orb
je
icebp
xor
fstl
imul
jle
jecxz
ss
add
push
sti
sub
jns
nop
cltd
mov
aas
addl
leave
mov
cmp
in
add
lods
pop
pop
in
loop
call
mov
fidivs
shl
mov
sub
fidivrs
dec
xchg
mov
mov
sbb
cs
imul
mov
into
movsb
mov
in
xchg
popa
push
sbb
cwtl
call
add
jnp
and
arpl
daa
das
sarl
clc
mov
inc
movsl
or
push
out
frstor
or
mov
push
xchg
ds
outsl
pop
add
ret
icebp
test
mov
in
das
fstl
ret
add
loope
xor
addb
jg
loope
shr
neg
pop
jle
mov
test
std
jb
sub
aas
ret
test
dec
mov
mov
jb
cltd
mov
cmp
cmp
cmpsl
repz
mov
gs
cmp
mov
inc
push
mov
test
lret
in
popa
xchg
leave
mov
jb
fildll
outsl
jb
dec
aam
mov
inc
inc
fwait
mov
push
or
mov
pop
out
cmp
loop
and
in
inc
subl
lcall
add
lock
pop
push
cwtl
add
outsb
push
jge
xchg
popf
clc
or
daa
add
cmp
fs
or
mov
insb
ds
out
sbb
lahf
movsb
adc
popf
in
xchg
rcr
xor
adc
movsl
push
sti
jle
dec
pop
jle
aam
popf
call
sahf
fcmove
movb
pop
inc
xchg
mov
dec
pop
cwtl
xor
xchg
arpl
std
or
push
sub
dec
sub
mov
jge
inc
js
repnz
daa
pop
pop
inc
or
dec
pop
pushf
pop
dec
mov
rcrl
sub
hlt
movsb
jg
add
sub
ds
notl
sub
and
or
add
mov
mov
das
aad
xchg
push
cmp
push
pop
jmp
pop
insl
enter
cmpsb
mov
fldenv
cwtl
cmpsb
mov
dec
and
les
daa
dec
sbb
bndstx
loopne
jns
lret
jb
sbb
or
jo
shrb
xlat
adcl
push
nop
inc
cmp
cmp
jno
sbb
xchg
add
es
cmp
enter
and
dec
mov
dec
hlt
data16
loop
or
cld
lret
or
adcb
fdiv
mov
scas
dec
std
es
imull
mov
sbb
stos
out
push
cmpsl
and
arpl
lea
scas
adc
mov
mov
nop
add
sti
arpl
pop
insl
flds
cwtl
dec
xor
in
lret
add
xor
icebp
lock
pop
aaa
les
test
je
dec
xchg
jb
xor
bound
lock
imull
jmp
and
dec
mov
ja
sar
out
enter
lock
cmpsl
sub
mov
hlt
in
js
fidivrl
add
jle
cmpl
inc
popl
xchg
inc
lret
imul
out
jl
push
sbb
jnp
pop
dec
insb
call
addr16
pop
test
mov
bound
add
leave
push
lret
pop
inc
in
mov
adc
loopne
test
mov
das
jo
in
push
add
es
jo
inc
mov
sahf
sbb
outsl
mov
xor
in
inc
sub
popf
das
xor
xchg
or
inc
outsb
daa
aam
pop
or
pop
jge
push
lret
push
in
icebp
scas
mov
cmp
add
xor
and
xor
pop
add
inc
mov
lds
pop
retw
mov
fstl
test
aad
movsb
movsl
jmp
or
popa
pop
and
out
lock
inc
mul
pop
xor
lods
movsb
sahf
in
lcall
jmp
incl
fs
pop
hlt
push
pop
mov
dec
cmpsb
or
and
repz
mov
xchg
mov
insl
dec
aam
dec
hlt
lcall
add
les
in
pop
sahf
cmp
pop
dec
enter
push
push
push
cmp
out
mov
outsb
outsb
hlt
and
inc
inc
sub
cwtl
dec
push
pop
mov
in
cltd
mov
scas
dec
push
sbbb
out
jmp
mov
test
dec
jge
cmp
push
inc
mov
jl
insl
mov
repnz
test
ljmp
out
mov
out
cmpsl
jnp
out
mov
sub
popf
lds
cmc
sbbb
je
cmp
xchg
test
pop
cmp
adc
jmp
fstl
push
addl
enter
lcall
push
hlt
cli
push
sbb
add
loop
mov
aam
daa
negb
lahf
or
stos
jg
iretw
or
jle
lock
fs
and
xor
cmp
fsts
test
insb
push
dec
std
mov
jg
mov
dec
ret
test
sbb
cmp
rorl
andl
push
roll
mov
jnp
clc
xor
rorl
jle
sub
pop
ljmp
xlat
in
notb
sbb
sub
push
lock
pop
jne
scas
scas
iret
imul
mov
xor
pop
xchg
dec
int
jae
xchg
scas
out
cld
jp
and
movsb
cmpsb
pushf
out
xlat
or
nop
pop
mov
scas
out
jmp
push
push
mov
jns
into
pop
cmp
shl
cld
adc
adc
xor
push
repz
lcall
lcall
inc
xor
lds
mov
and
inc
push
imul
into
or
repz
enter
dec
push
jae
test
jno
int
and
daa
jp
fwait
sahf
and
xchg
mov
push
orl
mov
xchg
out
pop
sbb
nop
ret
mov
lret
or
sbb
mov
dec
stos
loope
dec
sub
xor
mov
sbb
and
sar
cmpsl
jg
cwtl
ss
lods
cld
dec
js
outsl
pop
in
sub
into
sbb
movsl
test
dec
pop
push
inc
and
mov
xchg
mov
jmp
sbb
lcall
push
inc
mov
pop
test
add
xorl
xchg
mov
sti
dec
sbb
dec
jae
movsb
stc
cmp
std
sub
add
aas
jecxz
adc
std
or
mov
inc
test
mov
xchg
mov
mov
ret
ror
popf
sub
lea
sbb
add
ds
lahf
scas
push
lea
inc
xor
jg
cmp
dec
cld
adc
pop
adc
ret
ss
dec
fimuls
dec
ja
arpl
pushw
pop
push
push
lret
cmp
pop
cmc
hlt
std
jae
push
outsb
add
sub
mov
mov
enter
test
inc
js
jle
mov
cmp
lret
in
addr16
outsb
cmp
test
fcoms
fcmovne
adc
arpl
push
push
or
push
orl
sar
outsl
jge
sahf
jmp
fisubs
movsl
movsb
ds
enter
scas
cmp
adc
pop
shrb
adc
rcrl
data16
dec
inc
mov
cwtl
xchg
cmp
test
and
les
mov
pop
das
popa
or
sub
push
pop
int
cmp
xchg
and
in
hlt
xor
out
sbb
pop
fwait
jae
icebp
add
icebp
lahf
xchg
inc
cmc
imul
sbb
dec
pop
out
in
xchg
sub
sahf
jle
xor
pop
in
movsl
jnp
ror
pop
mov
jbe
repnz
lret
cmp
sbb
pop
jg
sar
gs
out
sti
cld
xor
nop
sub
jo
inc
mov
mov
push
and
pop
jno
mov
cli
loop
xor
or
mull
mov
xchg
or
push
or
dec
ja
rclb
mov
xchg
xor
shrb
pop
lock
lahf
pop
dec
xchg
xor
sbb
jmp
lar
lock
sti
movsb
cmp
sub
jmp
or
jo
fisttpll
shl
push
or
ja
pop
xor
es
test
or
mov
pop
xchg
cmpsb
xorl
cmp
js
sti
cmp
je
push
mov
jae
scas
dec
rorb
pop
xchg
pop
or
push
push
mov
jbe
fisttpl
jo
xlat
cmp
or
dec
jl
mov
lock
sahf
push
mov
lock
test
cmpb
mov
dec
icebp
mov
mov
in
xor
dec
push
adc
outsl
fidivrs
push
mov
sub
sarl
cmp
lcall
adc
pop
mov
mov
lret
iret
fs
or
jg
or
adc
xor
pop
mov
outsl
aam
dec
lds
mov
mov
int
int3
dec
mov
inc
mov
cli
imul
xor
daa
mov
xadd
icebp
lea
rcrb
sarb
mov
loopne
or
stos
mov
jbe
mov
push
jne
test
inc
les
or
fsubl
push
fildl
cmp
push
sub
xor
daa
xchg
mov
nop
mov
mov
xor
gs
sbb
jp
cmp
mov
xchg
pop
cli
add
xchg
pop
dec
or
loopne
xchg
sbb
clc
int
push
in
push
inc
push
addr16
push
loope
mov
in
pop
xchg
roll
test
movb
inc
and
andl
pop
xchg
subb
arpl
jg
pop
std
cld
negl
loopne
and
xchg
nop
push
adc
push
popf
fwait
call
inc
fisttpll
pushf
pop
lock
sbb
xchg
mov
inc
cltd
cltd
inc
ret
cmp
push
subb
jne
insb
xchg
popa
adc
pop
sbb
outsb
xchg
and
imul
cmp
call
imul
push
pop
push
out
xor
aam
xor
inc
insb
xor
and
loopne
pop
loopne
cmc
mov
or
mov
mov
xchg
dec
jge
insw
xchg
movsl
scas
mov
cmpsw
adc
movsl
mov
cli
iret
fwait
pop
adc
cmp
push
xor
sub
imul
xlat
mov
mov
mov
push
push
fs
pop
pop
push
sbb
mov
repz
add
or
mov
mov
ret
add
aad
push
imul
cmp
in
mov
int
mov
jb
adc
cmp
into
rolb
stos
pop
bound
pop
xor
repz
fcmovbe
ja
scas
lds
lret
sbb
sbb
cmp
pop
sti
std
dec
mov
repz
adc
mov
cmp
sub
mov
adc
cmpsb
cwtl
mov
xor
xor
dec
shlb
mov
and
dec
cmp
in
mov
stos
pop
jmp
and
sub
jecxz
sub
and
sub
leave
daa
hlt
cmp
adc
stc
aaa
imul
repz
data16
mov
xor
mov
frstor
jns
cmp
xchg
lock
stos
imul
in
shr
or
jmp
add
mov
cmp
lret
test
push
adc
push
xor
xchg
into
filds
dec
loop
imul
cmp
lea
mov
jo
or
jg
data16
xchg
cmpsb
adc
in
add
push
lock
pop
xchg
aaa
adc
xorl
std
pop
push
sub
mov
orb
inc
mov
cmp
aam
jbe
jmp
lret
pop
and
jmp
pop
xor
mov
xchg
fwait
pop
das
sahf
mov
loop
mov
mov
pop
nop
sbb
ret
mov
push
jns
mov
call
adc
push
rclb
fcmovu
stc
aas
insb
lock
popa
add
mov
scas
std
imul
in
loopne
cmp
out
std
cltd
xor
pop
jmp
fidivrl
test
scas
xor
enter
adc
sub
mov
sbb
fcoml
push
test
lods
test
cmp
cmpsb
inc
enter
outsb
dec
inc
mull
in
adc
cs
sub
push
mov
sbb
stos
fisubrs
mov
xchg
ret
adc
loope
test
lahf
sbb
scas
inc
ret
pop
lock
or
jg
jae
mov
popf
xchg
xor
xor
adc
mov
mov
cmp
cmc
adc
mov
clc
call
add
cmp
adc
ret
push
push
cmp
sbb
mov
add
and
sub
aas
sbb
lds
mov
gs
scas
cmp
mov
in
xchg
jne
fimull
test
ret
scas
lock
imul
dec
stos
add
push
dec
cltd
test
lahf
cmp
test
sti
sub
std
add
insl
test
ret
int
outsb
jecxz
imul
jg
xchg
xchg
adc
adc
xchg
fcomps
push
mov
or
sbb
fisubl
push
data16
int3
adcb
push
lret
pop
jbe
jno
jns
pusha
sub
das
repz
daa
psraw
jbe
pop
sub
popf
xchg
aas
insl
fdivl
divl
das
test
ja
dec
inc
cmpsb
jo
and
lret
cmc
pop
fwait
xor
movsb
cmp
mov
push
fstps
stos
inc
jns
cmp
mov
and
sti
loop
out
sub
dec
mov
jae
pop
mov
jo
mov
add
add
xchg
aad
sbbb
jae
mov
and
push
out
sbb
adc
icebp
sub
lock
mov
cmpsb
jmp
sbb
adc
inc
cmc
data16
leave
dec
mov
cmp
mov
das
insl
xchg
ljmp
lea
push
xor
dec
ja
mov
or
js
nop
pop
and
in
pop
xor
lahf
subl
pop
sbb
mov
xchg
cmpsb
inc
mov
or
lahf
sbb
hlt
jo
test
xor
in
mov
out
xchg
mov
dec
rclb
arpl
pop
or
xchg
iret
adc
pop
fadds
mov
in
xor
jle
jae
int3
repnz
stos
int3
mov
movsl
stc
inc
mov
dec
mov
and
cmpb
out
jbe
popa
inc
jle
cmp
inc
xor
int
mov
xchg
dec
aas
leave
or
push
jnp
aas
jno
mov
adc
cmpsl
cmp
mov
fstpt
xchg
inc
xchg
jp
mov
or
or
sub
loopne
shl
add
mov
dec
data16
xor
pop
int3
push
test
inc
rcrl
lock
and
cmp
ficompl
cmc
sbb
pusha
das
or
lods
leave
push
xor
cld
leave
adc
xor
mull
nop
gs
xor
dec
add
cltd
mov
mov
xorb
les
xor
push
dec
jge
adc
ret
test
pushf
ds
scas
jge
sbb
xchg
aas
sub
or
loope
mov
sbb
and
cmpsb
sub
mov
stc
add
xchg
dec
xchg
push
mov
lahf
icebp
jnp
or
sub
xchg
cmp
cmc
arpl
movsl
imul
push
pusha
adc
scas
idivb
ljmp
pslld
jb
addb
lods
mov
mov
enter
push
rcl
setle
into
add
cmpsl
sti
lea
cmp
mov
jb
scas
sub
mov
scas
adc
ret
push
cs
jg
test
aaa
in
dec
cmp
sub
adc
jle
xchg
xchg
leave
mov
fstpl
add
xlat
es
lds
dec
sbb
mov
add
or
out
mov
cmp
jecxz
xchg
aaa
push
sbb
into
pop
dec
mov
je
fidivs
mov
pushf
jne
xor
cmp
inc
dec
push
jns
cmpsb
cld
push
add
inc
inc
cmpsb
jle
push
enter
andl
sub
sbb
sbb
adc
push
xchg
sub
cmpsb
les
imul
test
push
mov
lds
std
and
inc
push
ficompl
in
lret
icebp
jecxz
and
les
or
push
xchg
test
aaa
add
and
enter
cmp
push
xchg
sub
fimuls
pop
or
push
jno
data16
data16
fsubrl
jmp
fcomp
lods
test
inc
push
les
stc
mov
sub
pop
or
ret
or
jns
xor
cmp
enter
jo
int3
andl
sbb
fdivrp
lret
stos
sub
sub
es
fs
and
pop
test
call
xlat
ss
jecxz
mov
das
jb
xor
out
test
idivl
vpunpckhdq
xor
mov
mov
clc
pop
cmp
mov
int
psrlq
daa
xor
dec
rolb
or
pop
jl
xchg
aad
scas
dec
clc
xchg
push
loopne
dec
dec
lcall
lahf
push
out
mov
mov
repnz
ja
pushf
push
inc
iret
pop
jl
fcoml
add
xchg
xor
sub
mov
sbb
sub
pop
icebp
mov
mov
lds
xchg
test
iret
das
fs
hlt
aaa
aas
nop
lea
cmp
xorb
popl
loopne
std
jae
pop
stos
lahf
jecxz
mov
dec
sub
in
fwait
orl
fstps
dec
or
lret
jmp
sbb
xchg
in
push
sbb
dec
cmp
mov
dec
lds
and
loope
into
push
movsb
mov
jne
scas
mov
js
call
int
jl
pop
imul
dec
add
mov
out
mov
jmp
inc
push
or
mov
push
jmp
push
pushf
sub
jmp
sti
mov
cmp
pop
jns
outsb
push
adc
scas
lods
js
jo
mov
clc
cmp
inc
popa
inc
cld
push
lock
scas
sub
sbb
or
lea
sub
into
mov
pop
pop
leave
addr16
inc
insb
leave
xorb
out
cmpb
sub
sbb
jae
dec
adc
jne
cmpsl
fldenv
les
xchg
int
ret
or
cs
mov
jle
dec
sbb
mov
pop
roll
adc
dec
sub
sub
xchg
int3
pop
push
push
xor
outsb
outsb
push
cs
cmp
and
mov
xor
or
pushf
sub
loope
cli
xchg
xchg
sbb
pusha
lcall
mov
mov
cmpsb
pop
andb
adc
sub
incb
shrl
add
add
cltd
push
ja
inc
xchg
jnp
sub
mov
add
mov
iret
mov
xchg
xchg
dec
jno
rcrb
stos
loope
xor
mov
fwait
ljmp
bound
pop
out
adc
mov
ret
incl
les
inc
adc
dec
adc
dec
mov
fwait
decl
imul
out
add
imulb
sub
mov
jae
sub
fnstsw
dec
repnz
mov
xchg
sbb
repz
sbb
and
push
cltd
repnz
pop
lods
xchg
pop
mov
out
adc
sbb
stc
sar
fucomip
in
ret
pop
push
or
les
mov
jg
and
pop
rcll
push
or
call
sahf
mov
lcall
pop
xor
lea
adc
inc
or
adc
inc
add
sbb
cmp
xchg
or
mov
lret
jmp
mov
imul
lahf
insb
lds
jb
popa
outsl
lahf
push
xchg
aad
mov
mov
jg
int3
cmp
mov
cs
mov
mov
and
lds
lods
sbb
int
push
outsl
dec
inc
les
mov
aad
inc
std
and
inc
xlat
out
mov
inc
leave
inc
sti
movsl
dec
mov
push
scas
jle
mov
and
jle
inc
inc
setno
pop
pop
jns
fstpt
jns
inc
push
mov
adc
add
inc
lret
les
sub
popa
lds
xchg
or
pop
fidivrs
movb
mov
xchg
shl
fwait
mov
jns
fistpl
add
les
idivb
or
adc
jl
dec
xchg
and
adc
dec
xchg
inc
xor
test
sub
icebp
xchg
dec
data16
mov
and
mov
dec
mov
popa
mov
push
sbb
js
fs
leave
fcoms
int3
mov
dec
cmp
leave
and
fisubs
jmp
push
add
jmp
inc
sahf
mov
cmc
lret
cld
pop
pop
push
lods
imul
ret
test
aaa
cmc
mov
adc
sarl
sbb
cmc
jg
fildll
fwait
lea
in
adc
mov
loope
add
into
sbb
cmc
pop
dec
add
lods
cs
xchg
inc
mov
mov
das
inc
mov
dec
std
and
dec
xor
repz
divl
mov
insb
pop
rclb
dec
ja
pop
fsubrl
in
lods
and
xor
stos
cwtl
gs
lods
pusha
dec
push
ss
iret
push
fcompl
ss
shll
imul
xchg
sti
jnp
adc
fucomp
mov
mov
jbe
mov
and
pop
int
lahf
gs
dec
jmp
add
in
ja
lods
xchg
jmp
jmp
adc
dec
lock
dec
sub
inc
xlat
mov
dec
sub
jb
filds
mov
or
loope
mov
and
cmp
rcrl
aad
pop
mov
sub
push
sbb
push
xor
sbb
test
cmp
push
sbb
scas
mov
push
in
test
sub
out
mov
lods
fistl
jg
dec
das
mov
mov
fdivrs
dec
in
xchg
xchg
mov
inc
xor
sbb
mov
outsb
inc
imul
outsl
data16
cmc
test
pop
jge
dec
cmpsb
mov
sub
or
jno
mov
or
fcomi
std
mov
pop
pop
pop
cmp
xchg
or
clc
xlat
mov
dec
dec
pop
cltd
or
fscale
xorl
push
xchg
outsb
fcoms
xor
fldcw
jo
lods
sub
sub
aas
dec
frstor
push
cmp
mov
cmp
std
in
xor
xchg
and
or
pop
iret
jecxz
mov
shlb
mov
test
sbb
jno
scas
mov
inc
jp
xchg
in
push
pop
shll
aas
push
pop
mov
pop
jb
iret
mov
dec
xchg
adc
std
push
dec
ljmp
xor
mov
sarb
fmul
rolb
mov
out
nop
xchg
push
cmp
daa
dec
call
or
push
xchg
push
or
cltd
cmc
sub
mov
in
lret
add
rcrl
xchg
cmp
jecxz
jmp
call
mov
jb
imul
popf
addr16
push
mov
lods
out
xor
and
rcll
je
ds
pop
icebp
aad
lds
or
dec
jo
and
push
pusha
arpl
bound
lea
jecxz
and
mov
imull
mov
js
sbb
daa
and
add
dec
jmp
jns
cmpsb
or
mov
adc
push
xchg
jne
xor
pop
adc
pop
and
push
xchg
mov
mov
mov
or
ficoml
ljmp
lock
mov
insl
or
out
test
inc
std
dec
sbb
mov
jnp
sub
std
push
push
mov
mov
jo
lock
in
fwait
push
lret
jge
sub
mov
stc
cld
push
xchg
mov
js
ds
jecxz
sub
xchg
push
pop
shrl
call
pop
or
mov
push
inc
jo
sbb
repnz
shr
adc
insb
insl
outsb
outsb
and
mov
das
and
outsl
lcall
jp
movsb
pop
jmp
jg
and
lcall
xchg
pop
sub
hlt
mov
scas
aaa
sub
dec
push
popa
shl
gs
call
cmpsl
ss
add
xchg
inc
ret
pop
cmp
add
sub
lahf
mov
adc
push
das
dec
outsl
cmp
sbb
leave
mov
insl
sbb
pop
aas
adc
hlt
das
mov
imul
imul
jmp
popa
push
mov
enter
or
repz
sbb
andb
cmc
push
push
jnp
test
mov
xlat
loop
into
pop
clc
jae
dec
incb
neg
dec
ljmp
repz
push
sub
emms
cmp
and
outsl
enter
push
pop
sbb
add
repz
mov
aaa
rcl
dec
leave
add
lea
or
push
push
xchg
je
stc
sub
or
fcmovu
scas
jle
shrl
mov
repnz
lea
mov
xor
add
imul
mov
xor
sub
mov
add
cmp
mov
mov
jg
xor
mov
sub
add
jmp
xor
add
add
mov
mov
mov
xor
add
not
and
movsbw
mov
sub
mov
xor
mov
cmp
jne
movsbw
mov
sub
mov
xor
mov
cmp
je
mov
xor
mov
sub
add
jmp
mov
mov
mov
lea
mov
mov
mov
xor
add
mov
mov
mov
xor
add
pop
cmp
jne
mov
xor
mov
add
imul
mov
pushl
jmp
mov
add
mov
mov
mov
movsbw
mov
sub
mov
xor
mov
cmp
jne
mov
mov
mov
jmp
mov
cmp
jne
push
pushl
pushl
pushl
pushl
call
pop
pop
leave
ret
push
mov
sub
push
mov
mov
sub
xor
mov
sub
mov
sub
movl
andl
mov
inc
mov
cmpl
jne
push
call
cmpl
jb
push
mov
mov
mov
mov
xor
sub
xor
adcl
mov
movl
add
add
imul
mov
mov
cmp
je
mov
mov
sbbl
mov
subl
xor
lea
addl
mov
mov
not
mov
mov
orl
xor
xor
sbbl
add
add
imul
mov
cmp
je
mov
xor
mov
add
imul
add
mov
mov
jmp
mov
mov
xor
xor
add
add
imul
pop
pop
leave
ret
push
mov
push
add
movl
adc
mov
mov
movl
cmpl
je
cmpl
jne
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
andl
mov
xor
xorl
add
mov
movl
cmpl
je
cmpl
jne
push
push
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
xor
push
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
pop
leave
ret
push
mov
sub
mov
movl
cmpl
je
cmpl
jne
pushl
pushl
push
call
cmpl
jne
xor
add
dec
mov
xor
add
dec
mov
jmp
andl
mov
inc
mov
cmpl
jne
pushl
pushl
push
pushl
push
push
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
xor
andl
jmp
xor
or
inc
mov
cmpl
jae
cmpl
jne
push
pushl
push
push
pushl
call
jmp
movl
cmpl
je
cmpl
jne
push
call
cmpl
jne
xor
xor
dec
mov
mov
dec
mov
jmp
mov
subl
add
movzwl
movl
cmpl
je
cmpl
jne
push
pushl
push
pushl
call
mov
dec
mov
jmp
mov
movzbl
or
mov
movb
lea
and
mov
xor
jmp
mov
lea
cld
gs
clc
in
jp
pop
jp
aad
mov
inc
mov
jecxz
mov
pop
fs
pop
pop
fs
ret
mov
add
xchg
xchg
mov
or
pop
push
imul
push
push
cmp
cli
lcall
icebp
clc
mov
sbb
inc
adc
cmp
pushf
adc
xchg
sbb
xchg
mov
bound
xor
jno
dec
mov
cltd
jp
push
repnz
fldenv
add
shlb
dec
sbb
xchg
es
in
frstor
cld
sbb
push
jns
sub
int3
rclb
mov
adc
pop
jnp
mov
lods
gs
sahf
or
pop
dec
nop
outsl
mov
test
lret
jb
pop
xchg
inc
sbb
das
mov
and
sbb
add
or
icebp
xchg
imull
cmp
arpl
add
lea
les
sub
inc
mov
std
out
xor
test
movsl
add
scas
push
pop
add
push
push
dec
xchg
add
imul
int
cmp
mov
jae
fists
das
mov
pop
mov
gs
stos
pop
aas
mov
dec
bound
push
test
pop
or
js
int3
push
jg
cmovl
mov
lahf
test
mov
dec
jo
fadds
inc
add
sub
repnz
roll
test
scas
xlat
scas
mov
lock
cmpsb
mov
loope
and
lea
dec
push
adc
scas
or
inc
mov
mov
enter
fidivs
cmp
test
ljmp
shll
mov
sbb
xor
dec
int
add
mov
stc
inc
int3
out
lock
mov
or
lods
out
stos
mov
jb
mov
cmp
or
mov
xchg
lcall
or
popa
lods
outsl
leave
dec
jae
push
dec
adc
pop
js
movsl
nop
xchg
inc
stos
push
cmp
lcall
cmpsl
out
rcll
fidivrs
enter
fistl
mov
ljmp
ljmp
lret
jg
lret
ds
iret
fmul
sbb
sub
cld
xchg
jnp
xor
push
pop
adc
adc
andb
out
inc
mov
add
push
adc
jl
das
std
fnstcw
sub
aaa
mov
cld
mov
mov
jge
push
and
mov
sbb
std
scas
inc
rcrb
iret
arpl
test
add
enter
test
inc
xchg
mov
jns,pt
popf
mov
cwtl
cli
pop
sbb
mov
fiaddl
aaa
fsubs
adc
dec
pop
loop
dec
pop
test
dec
xor
or
mov
push
inc
jle
cmp
lea
xchg
xchg
push
or
cmp
aaa
in
dec
xor
inc
imul
jne
cmp
jl
fidivs
mov
push
mov
xchg
filds
clc
repz
rcll
cmp
js
dec
mov
aaa
fs
pusha
adc
out
mov
popa
loope
iret
mov
fbstp
test
popa
fwait
jae
call
xchg
xchg
cmc
rol
mov
test
pop
adc
pop
ds
int
lret
sbb
lock
dec
insb
bound
cld
and
ret
movsl
add
adc
jnp
mov
sub
insb
in
jp
cli
roll
daa
inc
jg
jbe
repz
mov
cld
in
int3
pop
sub
sub
cltd
rcr
xor
in
fisubl
stc
push
fwait
mov
leave
sub
mov
mov
mov
inc
pushf
sar
jns
sbb
sbb
mov
mov
jp
repz
pop
scas
pop
pop
add
ret
sub
test
xlat
xchg
pop
stc
pop
dec
out
sbb
dec
repnz
mov
outsb
add
cmp
sbb
adc
pop
or
push
dec
sbb
cmpsl
shll
mov
and
insl
aam
jno
dec
jmp
pop
mov
popa
or
mov
xor
pusha
sbb
pop
xor
lods
mov
push
cmp
pop
mov
imul
imul
mov
or
test
ss
cld
mov
test
imul
lea
testb
or
adc
imul
insb
xor
jnp
test
movsl
inc
mov
mov
dec
push
mov
popa
jnp
jecxz
and
jns
mov
mov
sub
fcompl
stos
lret
fwait
add
in
sbb
cmp
inc
push
pop
pop
mov
std
push
mov
add
xor
fwait
pop
cmc
push
jns
push
lret
aas
adcb
insl
mov
sub
push
fstl
jno
pop
inc
or
int
push
jnp
sti
fimuls
bound
lcall
mov
mov
jl
or
test
inc
dec
push
sbb
adc
jecxz
add
idivb
std
into
out
cmpsb
cwtl
dec
push
xor
jecxz
stos
adc
shll
jb
jecxz
ds
sub
lods
mov
xchg
loope
cwtl
and
push
hlt
jnp
sub
movsl
inc
fcompl
add
push
stc
pop
dec
je
int3
cltd
add
adc
add
inc
das
dec
int
xchg
jl
pop
mov
xor
mov
push
mov
sub
adc
in
inc
arpl
add
push
mov
cmpsb
je
scas
xchg
icebp
push
mov
sbb
pushf
cmpsl
push
adc
aaa
fdivl
test
ja
testl
test
popf
loop
and
jnp
lret
rcrl
adc
test
clc
fxch
int
paddw
mov
xchg
loopne
or
jmp
and
cmpsb
inc
pop
aad
addr16
mov
jo
dec
jnp
stos
or
loop
jle
fistpll
int
jge
mov
jmp
shl
and
cmp
pop
cmp
jo
inc
std
mov
leave
stc
in
dec
shrl
jns
add
sbb
mov
dec
and
cmc
sbb
cmp
xor
dec
mov
loope,pn
aas
mov
mov
pop
fbld
in
stc
mov
inc
sahf
js
xchg
lea
push
sti
ds
mov
jp
fdivl
add
ds
rolb
sub
jmp
out
add
sbb
jmp
push
sbb
xchg
in
loope
loope
cmp
cmpsl
out
jno
inc
std
lret
mov
out
insl
add
lea
fstl
ret
mov
in
sbb
lods
jl
cmp
sub
mov
stos
dec
ret
lods
jae
or
xor
xchg
jns
cltd
mov
pop
stc
mov
push
andl
pop
xlat
push
inc
js
lods
adc
daa
inc
cli
pop
pop
sub
inc
adc
mov
inc
push
mov
repz
mov
add
pop
ret
dec
imul
lret
pop
outsl
add
insb
into
test
into
lods
lods
push
inc
mov
mov
or
popf
in
mov
test
adcb
data16
dec
pop
gs
mov
push
jg
jno
push
xor
sbb
inc
pop
jbe
mov
daa
or
mov
fidivs
outsl
mov
int
lea
inc
mov
std
mov
or
push
xor
xchg
sbb
xor
jns
dec
ret
cwtl
mov
dec
and
sbbb
xacquire
push
stc
out
aaa
sahf
mov
pushf
mov
fcmovu
and
pmuludq
adc
xor
xor
loope
cmpsl
xchg
aaa
cld
jecxz
scas
sarl
cld
clc
xchg
pusha
insl
cs
mov
jo
ds
xor
cmpsl
data16
outsb
and
je
adc
fsubrl
test
repz
insb
mov
daa
sti
push
shll
outsb
cmp
cmp
mov
sub
pop
int3
scas
out
orl
lock
idivb
dec
stc
pop
cmp
adc
lret
stos
rclb
out
pop
mov
push
sbb
pop
cmpb
or
scas
das
xor
jnp
imul
sbb
leave
jp
clc
mov
cwtl
aam
sbb
int3
mov
movl
xchg
fldl
jl
or
pop
leave
aad
sub
push
push
shl
sbb
pop
jp
and
stc
sbb
fldcw
jne
mov
in
xchg
repz
xchg
outsl
mov
loop
out
adc
xchg
je
insb
mov
lods
jo
not
and
push
clc
popf
test
xor
push
cmp
bound
dec
es
fadds
call
xlat
daa
hlt
pop
mov
dec
mov
shlb
mov
inc
mov
sbb
adc
out
jae
test
dec
fwait
mov
rep
mov
xchg
shlb
sbb
xchg
aam
aam
jmp
mov
push
in
and
push
je
mov
xchg
not
or
lahf
push
subl
aaa
inc
fadds
adc
pop
leave
call
daa
push
lods
mov
out
je
clc
lock
sub
imul
xorl
xor
aas
jp
jne
enter
or
jl
push
jnp
pusha
in
lahf
xor
shl
inc
outsl
and
xchg
inc
aam
adc
inc
punpcklbw
movsl
insl
imul
jbe
push
cmp
cmp
inc
dec
das
insb
ret
xor
sub
rorb
imul
push
jne
cmp
or
jno
jb
lods
shlb
push
adc
xchg
jnp
loope
jae
clc
sbb
fstpl
push
sub
loope
addr16
or
push
pop
dec
mov
test
dec
dec
ret
jl
dec
out
push
lahf
mov
add
out
dec
int3
dec
add
mov
sub
push
inc
push
inc
negb
adc
lock
push
andb
iret
sbb
and
repz
jge
mov
pop
xchg
and
mov
ds
in
movsb
rorl
sbb
and
mov
shll
fcmovnbe
mov
arpl
aad
cmp
mov
std
das
stc
inc
inc
push
mov
inc
loop
jecxz
inc
mov
cmp
push
rcrb
test
fldenv
jno
pop
sahf
mov
push
pop
enter
jmp
stos
out
ja
das
in
jae
rclb
lods
jae
aaa
nop
fwait
js
pop
cwtl
popa
pop
mov
out
sub
and
cmp
sub
cwtl
js
jp
mov
sarb
mov
scas
nop
mov
dec
xchg
loope
aaa
scas
dec
out
sbb
xor
mov
outsl
fisttpll
aas
push
mov
dec
mov
adc
xor
cmp
mov
movsl
cwtl
mov
ffreep
lret
sbb
fs
xchg
shll
divl
xor
fbstp
lret
pushw
imul
fidivs
cmp
jbe
pop
stc
shrl
sub
pop
mov
xchg
daa
inc
jmp
jne
push
pop
jle
mov
repz
stc
addr16
arpl
dec
and
andl
dec
es
and
test
xor
mov
add
std
jae
test
nop
lock
pop
inc
cmp
xor
ja
xor
cmp
lods
insl
mov
fcoml
inc
adcl
fidivl
dec
jle
aad
out
gs
in
or
adc
lea
sub
mov
cmp
fsubrs
shlb
push
fdivrl
aam
dec
adc
and
push
pop
pusha
fiadds
lods
ljmp
shl
in
cld
fcomps
jb
sbb
clc
dec
pop
mov
fs
mov
pop
mov
xor
adcb
test
mov
jecxz
push
sub
data16
rcl
scas
cmp
pop
push
sbb
not
mov
push
push
sub
mov
negl
test
sbb
xor
mov
mov
ja
add
xchg
shrl
leave
les
or
sahf
jmp
test
mov
inc
xchg
rorb
sti
xor
push
test
dec
push
vmovhpd
adcb
cmp
aad
out
jno
pushf
arpl
out
sub
repnz
sbb
mov
push
popa
ljmp
insl
dec
xor
pop
jl
adc
loope
pop
push
sbb
cmp
jle
add
fldt
repnz
enter
mov
cmpsl
and
jmp
mov
pop
arpl
mov
data16
and
loope
lock
xchg
cmc
adc
add
cld
lret
in
add
cmp
lods
daa
or
stos
stos
dec
cli
ja
cmp
cld
mov
movsb
push
and
mov
mov
adc
cs
cmp
adcb
mov
mov
fcmovnb
push
mov
lods
test
cltd
test
pop
push
in
pop
rorb
mov
negb
scas
pushf
jns
or
mov
movsl
adc
lret
and
pop
int
out
sub
and
addr16
push
lcall
loope
jne
mov
add
jmp
jnp
call
ds
push
mov
sub
call
movsl
mov
nop
je
mov
mov
les
sub
cs
ja
pop
hlt
decl
loop
sbb
imul
jb
mov
test
sahf
sub
addr16
ds
cmp
dec
cmc
je
jmp
mov
mov
sbb
sbb
loope
mov
insl
push
aas
imul
jmp
jle
test
dec
shl
inc
arpl
enter
stc
cli
cli
lret
add
dec
cmpsl
push
inc
dec
adc
xor
mov
loop
jns
mov
and
in
dec
mov
imul
mov
inc
vmwrite
in
lcall
jp
mov
or
testl
int3
inc
jmp
mov
push
mov
rolb
sbb
or
or
jno
rcll
ja
iret
xchg
mov
repnz
fistl
mov
out
mov
mov
mov
out
loop
pop
pop
sahf
pushf
popf
dec
push
xchg
icebp
jle
testb
or
mov
insb
xor
adc
fcompl
mov
ds
xchg
adc
fdivrs
mov
add
lea
jbe
push
enter
popf
cwtl
jbe
rcrl
test
xchg
inc
ret
pop
loopne
ror
add
dec
lods
out
and
incl
pop
sbb
xchg
lea
test
adc
fistl
clc
test
andb
idivl
pop
daa
push
xor
cmp
adc
cs
mov
fsubrl
icebp
outsl
outsl
mov
clc
aad
shl
lods
xor
in
fwait
add
or
mov
repz
pop
iret
aas
or
or
loope
push
and
push
movsl
sub
outsb
mov
out
xor
dec
cli
cmp
push
adcb
push
enter
cmp
addr16
outsl
and
jnp
enter
and
jmp
inc
mov
xchg
aas
lods
cmp
pop
push
xchg
xor
mov
std
lea
mov
aam
sbb
andb
sahf
ss
sub
sbb
jno
scas
pop
or
jle
adc
ficomps
int
adc
in
into
hlt
xchg
in
sub
call
pop
mov
arpl
lahf
push
or
movsb
cltd
fld
icebp
xlat
mov
mov
leave
xchg
lock
dec
lods
sub
sbb
xor
adc
mov
in
pushf
adc
test
and
roll
xchg
xchg
scas
pop
out
push
cmp
test
xchg
lea
xchg
inc
shll
repnz
push
sub
inc
int3
or
adc
mov
sbb
repz
cmpsb
xlat
cmp
sub
je
and
ficompl
cmpsl
stos
sbb
pusha
hlt
outsl
subl
xor
or
ljmp
fistpl
repz
repnz
add
inc
inc
mov
shrb
sti
lret
xor
jne
mov
stos
pop
pop
or
jae
mov
xchg
fucomi
or
mov
push
test
into
scas
sarb
adc
fldl2t
sbb
jbe
pop
in
cmp
sub
mov
inc
push
rol
mov
jo
lret
inc
cmp
or
add
lret
idivl
jl
xchg
data16
jp
mov
xchg
push
mov
mov
out
addl
xor
add
mov
cli
pusha
js
lods
sbb
pop
fisttps
push
movsl
subb
cmp
jb
or
xchg
cmp
stc
mov
insb
push
jae
lcall
cli
dec
arpl
fsubrs
cmp
dec
xchg
mov
mov
inc
cmpsl
mov
jo
cmc
sub
fmuls
cld
mov
add
imul
and
pushf
lods
xchg
out
test
shll
push
sub
pop
dec
xchg
dec
bnd
mov
mov
ljmp
inc
mov
aaa
jmp
xor
add
dec
pop
xchg
jp
and
dec
das
lea
cmp
jg
aad
es
mov
sbb
or
cwtl
hlt
lret
test
cmp
imul
ret
jg
in
test
adc
sub
xor
ficomps
int
rolb
pop
cs
fcmove
push
loope
mov
imul
les
lcall
mov
jns
pop
dec
jae
imul
xchg
inc
ffreep
push
push
dec
pop
repnz
dec
stos
in
xor
mov
js
loop
ljmp
mov
rolw
push
jg
enter
xor
popf
mov
inc
popf
sub
inc
dec
mov
dec
unpcklps
in
cmp
sahf
fst
push
cmp
xchg
add
icebp
les
mov
jmp
test
cmp
jae
push
cmpsb
sub
adc
sbb
movsb
jp
iret
dec
inc
mov
fwait
add
jmp
mov
jecxz
push
lock
jecxz
gs
fcompl
sbb
lods
push
pop
fdivrs
call
lret
push
es
xor
push
lock
shlb
add
push
jg
mov
out
jle
xor
jns
js
jne
in
adc
and
icebp
inc
repnz
sub
ror
push
mov
call
loope
adc
and
xchg
xchg
rolb
js
adc
inc
arpl
push
mov
or
jg
stc
aas
imull
push
mov
push
dec
push
add
adc
in
jecxz
in
bound
jp
ljmp
inc
out
pop
mov
and
rcrb
cmpsb
popf
pusha
insb
movsb
adc
jo
jbe
push
or
fldl
add
mov
pop
jg
rcr
xchg
dec
roll
mov
test
ss
sub
into
aad
jmp
popf
rorb
jmp
sbb
in
jnp
sti
xor
dec
and
popa
jo
dec
loop
pop
or
or
nop
dec
cmp
stc
jmp
jbe
cmp
or
xchg
lahf
int
jne
fsubl
decb
sbbb
shll
enter
lods
jp
cld
pop
sarb
aas
stos
jnp
jge
popf
outsl
mov
dec
fnstenv
mov
cmp
addr16
int3
movsl
dec
inc
cltd
xor
in
or
pop
sbb
jbe
xchg
rcrl
inc
aad
or
pop
aam
out
mov
loopne
jge
push
ljmp
in
movaps
out
call
mov
cmpb
sub
mov
fs
test
rcl
add
nop
sbb
repnz
movsb
cmpsb
mov
sti
lret
enter
push
pop
imul
cld
std
or
popf
sbb
mov
pop
sub
daa
cs
mov
add
push
loopne
xorl
push
and
in
popf
std
cmp
mov
push
loopne
jns
shl
in
inc
mov
aaa
jne
mov
sarb
es
sub
ljmp
imul
xchg
aam
mov
arpl
push
sub
pushf
leave
dec
popf
xchg
outsb
sahf
mov
push
mov
ret
dec
cld
xchg
mov
push
inc
enter
jnp
inc
cmp
mov
jmp
and
std
and
or
adc
cs
je
lahf
jnp
inc
pop
mov
cmp
push
leave
mov
pop
fistpll
sbb
xor
push
in
adc
cmp
mov
dec
xor
push
jno
mov
cwtl
cmpsl
xchg
cld
rol
es
addr16
push
mov
and
pop
repz
pop
adc
lea
dec
ds
dec
xor
fildll
les
pop
dec
or
inc
push
sub
xor
in
dec
hlt
jns
push
idiv
popa
or
jb
push
push
jnp
jbe
or
mov
fidivrs
add
repz
into
lahf
inc
das
je
leave
push
pop
inc
fisttpl
ret
mov
cmp
push
sti
push
scas
movsb
test
lods
mov
inc
call
jo
dec
jmp
incb
dec
add
in
dec
hlt
dec
sub
frstor
xchg
xchg
pushf
pop
xor
loopne
push
sbbb
popa
jmp
in
jae
mov
or
test
adc
outsl
xchg
jne,pn
mov
ss
pushf
mov
mov
dec
in
arpl
push
xchg
mov
je
adc
and
int3
xchg
sbb
push
xchg
repz
aas
xchg
jl
movsb
jmp
rcll
mov
lock
or
insb
enter
in
sbb
sbbb
repz
jecxz
xor
inc
jecxz
sub
jmp
notl
mov
std
push
andl
inc
add
jmp
cltd
dec
cmp
popa
sti
mov
loopne
xchg
sub
cmpsb
mov
or
inc
ret
inc
ret
lret
sbb
daa
mov
in
call
or
sbb
fiadds
mov
mov
adc
xchg
pop
inc
mov
adc
jmp
xchg
es
push
fnstcw
outsb
mov
xor
pop
pop
in
adc
jbe
pop
arpl
int
imul
push
xor
inc
and
jne
xlat
andb
int3
inc
mov
mov
mov
nop
idivb
pop
cmp
dec
out
and
fwait
dec
divb
test
aas
out
aas
pop
dec
test
enter
js
daa
jb
push
sbb
xlat
dec
inc
jmp
sub
mov
inc
enter
push
adc
push
push
mov
push
add
jae
pop
inc
mov
jecxz
addr16
mov
dec
mov
pop
repnz
lret
mov
fwait
mov
add
jns
cmp
lock
shll
cwtl
xchg
xor
aam
and
ret
and
inc
xchg
xrelease
mov
sub
fcomp
jmp
mov
popa
stos
and
sbb
bound
movsb
cmp
aad
pushf
push
test
popa
adc
iret
mov
mov
and
lods
pop
int3
jo
aas
test
fdiv
jp
or
pushf
pop
xor
test
cmp
fs
xor
in
mov
ljmp
and
addr16
enter
addr16
ret
push
inc
or
xor
sbb
outsb
out
insl
cli
das
ja
push
ds
pushf
xor
mov
adc
sbb
sbb
and
and
int
pop
pop
mov
xchg
imull
cmp
dec
js
pop
lds
subb
ljmp
icebp
js
jbe
rcll
xor
xchg
mov
lods
lods
xchg
add
push
mov
lcall
pop
movsl
int
pop
or
xor
or
rclb
add
movd
and
jecxz
out
ljmp
jne
xor
popa
pop
arpl
mov
xor
jbe
mov
arpl
data16
cmp
shl
pushf
dec
add
call
xor
out
push
out
div
bound
in
and
icebp
test
int
lds
sarl
lock
les
int
mulb
shlb
insb
add
cmc
hlt
push
adc
pusha
jb
in
icebp
jmp
subl
lret
out
js
in
sub
scas
aas
mov
cmc
xor
dec
dec
pop
and
jae
stc
push
pop
inc
sub
ja
or
insl
add
fwait
call
push
inc
aad
jge
cwtl
mov
add
add
inc
and
or
push
fstl
mov
insb
insl
stos
or
xchg
es
lret
mov
adc
adc
dec
and
xchg
cmpsl
mov
shll
push
and
imul
jp
daa
mov
pop
shll
shr
int3
or
pop
mov
lea
out
outsl
adc
cmc
mov
ret
fcoms
fs
mov
pop
lods
addr16
mov
es
add
add
arpl
dec
cmp
sbb
out
jb
iret
fwait
push
outsl
pop
popl
and
aad
pop
mov
in
or
cmpsb
inc
add
xchg
adc
rorl
jmp
xor
cs
cmp
jmp
out
adc
xor
repz
push
into
mov
cmp
mov
std
xor
jl
ss
aam
icebp
sub
add
inc
mov
pop
push
rcrb
sub
stc
add
pushf
fists
and
sbb
or
rclb
sbb
pop
les
jns
arpl
fisubs
lret
xlat
aas
push
jns
shr
pop
jo
popf
mov
je
fistpl
and
sub
and
sub
sub
jne
add
xor
adc
mov
adc
fwait
cli
aaa
ja
pop
fisubrl
cli
arpl
mov
popa
dec
loop
cmp
fsubl
fcmovb
xchg
jge
inc
iret
or
scas
mov
fmul
fwait
xor
stos
push
and
hlt
lea
bound
hlt
icebp
add
fistpl
adc
fbld
or
aaa
bound
mov
cmp
rcr
rorb
icebp
lea
pop
mov
push
gs
mov
jle
icebp
cwtl
jg
hlt
cmp
jecxz
cmp
call
stos
jb
fistpl
lods
mov
mov
mov
mov
inc
sbb
xchg
xchg
or
andb
mov
das
rcrl
pop
aam
inc
ret
jbe
mov
push
aad
stc
faddl
ret
add
lahf
push
adc
push
mov
dec
inc
popf
push
lret
pop
ljmp
cmp
arpl
pop
sbb
push
jmp
xchg
mov
jg
test
ret
xchg
jb
es
pop
loope
scas
jbe
sub
inc
sahf
aam
xchg
adc
in
or
pop
jbe
imul
mov
mov
inc
jecxz
pop
rcr
mov
sbb
lret
les
adc
xchg
mov
imulb
xchg
dec
add
add
sub
push
and
bound
js
jb
cwtl
add
mov
or
push
push
iret
lahf
pop
testl
data16
adc
movsb
stc
add
vphadddq
test
push
dec
push
jl
pop
xor
and
inc
sub
in
xor
adc
aam
sub
mov
jae
and
ljmp
inc
push
or
cmp
pushf
inc
arpl
je
fwait
imul
in
iret
aam
cmp
mov
adc
fnstsw
sbb
in
aas
out
fcoml
ficomps
or
imul
push
mov
adc
xchg
push
xchg
cmc
push
mov
xor
shlb
testb
xchg
push
lret
sbb
lea
test
xchg
sub
lret
andb
jno
mov
shlb
jmp
xchg
pop
rorb
mov
scas
repz
clc
or
xchg
arpl
sub
out
nop
pop
dec
push
and
xlat
add
pop
inc
jp
leave
fisubrl
loop
aam
aas
or
enter
scas
xchg
push
and
and
push
shll
push
pop
jp
mov
jns
test
out
ret
std
lods
adc
jae
loope
lods
imul
shlb
test
or
inc
cmp
or
or
shlb
test
andl
inc
rorl
add
addr16
pop
sbb
stc
fidivs
fsubs
xorl
cmp
dec
lahf
jae
js
fimuls
mov
into
or
jecxz
rolb
icebp
imul
xor
bound
or
jnp,pn
movsb
sti
mov
test
lret
loop
dec
and
icebp
mov
and
repz
clc
movl
push
cli
pop
les
push
push
mov
les
outsb
cmc
test
cs
cmp
inc
roll
xor
xchg
adc
call
pop
push
jae
and
sub
sbb
mov
sbb
out
std
and
aaa
cld
jl
sub
or
sub
and
into
mov
sub
pop
adc
dec
cmpsb
lods
mov
mov
dec
mov
shlb
mov
push
xor
cmpsl
test
jo
fcmovbe
push
mov
rcrl
lds
mov
fmull
dec
mov
movsb
pop
or
lcall
mov
pop
fists
pushf
repnz
pop
jnp
enter
shrb
subb
jmp
jno
and
xor
mov
out
das
sbb
or
sbb
mov
xchg
ja
mov
sub
ljmp
out
pop
pop
into
dec
in
sarl
aam
sub
mov
ss
ret
jne
or
add
inc
push
xor
dec
and
insb
push
testl
cld
dec
dec
subb
mov
leave
jbe
xor
mov
push
mov
sti
lcall
inc
lret
pop
add
xchg
loop
mov
cmp
test
pop
sbb
movsl
cld
pop
ja
aam
out
daa
adc
pop
xor
shrb
icebp
cwtl
pop
out
sbb
flds
lcall
shll
bound
mov
stc
les
dec
cltd
mov
push
rcrb
cmp
mov
ljmp
mov
add
xor
or
sbb
inc
pusha
rcrl
insb
stos
pusha
lods
movsl
jge
test
adc
out
iret
jns
js
cmp
leave
cmpsl
sbb
xchg
and
pusha
leave
insb
push
sub
mov
mov
mov
mov
popf
mov
aas
xor
or
aas
ja
rcrb
fisubrl
sbb
add
push
outsb
int3
dec
mov
rcrl
icebp
mov
inc
incl
add
add
add
leave
or
inc
mov
cmpl
jne
call
cmpl
jne
mov
inc
mov
cmpl
jb
sub
mov
xor
sub
movl
mov
andl
movl
sbbl
push
movl
mov
xor
push
andl
jmp
xor
add
inc
mov
cmpl
jae
cmpl
jne
pushl
push
pushl
pushl
pushl
push
call
cmpl
jne
mov
inc
mov
jmp
mov
xor
mov
adcl
push
add
jmp
movl
mov
mov
movl
inc
movl
cmp
jb
mov
xor
add
movl
jmp
sub
mov
andl
jmp
xor
or
inc
mov
cmpl
jae
cmpl
jne
call
jmp
xor
mov
xorl
xor
mov
addl
add
xorl
movzwl
mov
mov
addl
movzwl
movl
xor
add
mov
mov
mov
inc
movl
mov
movl
cmp
jne
xor
mov
andl
jmp
xor
or
inc
mov
cmpl
jae
cmpl
jne
pushl
push
pushl
call
cmpl
jne
xor
xor
inc
mov
jmp
adcl
mov
xor
xor
decl
add
mov
sbbl
mov
inc
xor
mov
xor
add
movl
cmpl
je
cmpl
jne
push
push
pushl
call
mov
dec
mov
jmp
mov
not
movl
movl
movl
and
mov
movl
cmpl
je
cmpl
jne
push
call
cmpl
jne
mov
dec
mov
xor
xor
dec
mov
jmp
notl
mov
sub
mov
andl
xor
add
mov
not
mov
je
mov
orl
mov
adcl
xor
xor
subl
sub
sub
xor
mov
incl
mov
mov
add
subl
imul
xor
mov
andl
mov
inc
mov
cmpl
jne
push
call
cmpl
jb
mov
mov
add
xorl
or
adcl
mov
addl
mov
subl
mov
xorl
add
adcl
xor
mov
andl
mov
inc
mov
cmpl
jne
push
push
push
call
cmpl
jb
inc
mov
mov
addl
add
adcl
and
mov
or
mov
mov
sub
mov
orl
lea
mov
mov
mov
incl
sub
movzwl
adc
mov
add
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
pushl
call
cmpl
jne
mov
inc
mov
jmp
movl
cmpl
je
cmpl
jne
push
pushl
push
pushl
push
push
pushl
call
mov
dec
mov
jmp
addl
mov
adcl
xor
adcl
add
movl
jne
jmp
adc
mov
sub
xor
mov
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
jmp
aaa
xchg
jae
mov
xor
xor
jp
pop
jp
push
std
mov
push
adc
sbb
mov
cmp
dec
rcl
mov
cltd
stc
outsb
sbb
je
xchg
push
cmc
mov
adc
in
add
and
test
out
sub
lret
mov
inc
lds
lahf
jle
out
daa
jae
add
repz
mov
pop
je
xchg
insl
repz
inc
xlat
lock
mov
pop
inc
sbb
fcoms
dec
mov
push
stc
lcall
test
mov
adc
dec
lea
fisubs
cmp
pop
loopne
mov
sub
xchg
and
xchg
xchg
imul
or
jle
adc
les
aad
sub
in
and
loope
xchg
jmp
and
fisttps
lods
cwtl
clc
dec
ss
dec
jae
out
and
out
fimuls
mov
arpl
pushl
add
or
or
add
fistpl
add
out
mov
addl
pop
sub
bound
ss
xchg
adc
je
bound
pop
fcoms
jp
sub
dec
leave
pusha
fsub
xor
mov
call
std
xor
stos
xor
sub
nop
repz
mov
icebp
and
inc
std
jnp
testl
sbb
scas
dec
aaa
xchg
add
xor
mov
mov
dec
sub
cld
and
fwait
imul
jp
mov
lds
mov
sahf
sbb
lret
cmp
in
clc
cmp
pop
movb
xor
add
dec
mov
out
add
in
test
test
cli
inc
dec
ret
mov
clc
sbb
xchg
pop
out
add
pop
fbstp
test
add
mov
enter
enter
pop
rcll
cltd
mov
inc
xchg
or
fs
test
shrl
xor
pop
xor
jge
hlt
sub
cmpb
xor
dec
enter
imul
push
xchg
daa
inc
test
adc
outsb
xor
fs
inc
cltd
pop
cmp
xchg
ficomps
lcall
cmc
aam
pop
xchg
enter
mov
mov
lret
and
sbb
sbb
add
fisubs
rol
adc
cld
out
mov
stos
dec
sti
das
mov
notl
test
test
inc
jnp
and
cmpsb
cmp
xchg
mov
mull
ss
xor
jnp
fs
leave
dec
lret
pusha
sbb
cmp
pop
in
addr16
iret
sub
repz
xor
out
adc
in
dec
sbb
mov
nop/reserved
pop
cmp
mov
outsb
dec
mov
out
shlb
popa
test
lret
loope
out
cld
iret
adc
cmp
lcall
push
inc
xor
imulb
sub
pop
sti
ja
clc
inc
adc
scas
or
out
sub
lcall
rcll
xchg
inc
test
inc
jbe
push
out
or
sub
fcompl
mov
in
insb
push
cmpsl
mov
scas
pop
sub
xchg
dec
dec
sub
insb
mov
mov
shll
xchg
add
xchg
xchg
jge
dec
push
add
add
dec
sahf
aas
jae
dec
xchg
addr16
mov
aad
cltd
in
sbb
cmp
cwtl
movsb
ds
push
add
cmc
mov
jp
jg
push
xlat
loope
sbb
mov
add
adc
imul
xor
cmp
loopne
adc
or
mov
xchg
xchg
fisttpll
into
push
icebp
int
mov
pop
addr16
nop
push
cmpsb
pop
xchg
add
out
and
and
ret
or
jnp
test
dec
xchg
daa
roll
add
push
push
dec
fnstenv
stos
insb
pop
mov
loope
js
or
or
dec
or
jp
jbe
outsl
mov
pop
cwtl
cld
add
push
jo
push
adc
dec
mov
xchg
arpl
pop
lea
fnsave
xor
dec
and
fcomi
arpl
rorb
inc
pop
pop
pop
and
std
ljmp
cmp
push
enter
loop
loop
ficoms
sbb
sbb
cld
xor
add
push
mov
jne
fmul
fwait
test
add
adc
cltd
jae
mov
sarb
mov
imul
xlat
pop
push
adc
ror
xlat
xchg
or
xor
add
sub
outsl
je
scas
add
or
jnp
insb
ret
xchg
or
out
inc
ja
mov
outsl
push
cmp
add
cli
sarb
cs
adc
adc
lahf
sahf
scas
or
dec
cmp
testl
and
cmp
leave
dec
nop
push
inc
aam
mov
xor
mov
lods
dec
int3
mov
negb
sarb
pop
pushw
idivl
push
jg
shll
jp
xor
out
ffreep
and
inc
xor
cmp
push
sbb
push
data16
mov
mov
scas
adcl
mov
pop
jle
push
lret
hlt
inc
adc
xor
sbb
pop
shl
sub
js
pop
mov
jl
shl
sbb
mov
pop
sbb
fbld
mov
push
call
adc
mov
fsubrl
cwtl
ss
mov
xchg
popf
cmp
and
sbb
cmp
je
push
sub
sbb
or
jnp
pop
mov
sbb
ret
ret
dec
pop
inc
mov
ss
inc
xorps
push
pop
movsl
adc
xchg
pop
and
push
aas
xchg
pop
pop
dec
push
push
mov
andl
xchg
jnp
inc
xchg
push
test
call
mov
inc
das
push
fwait
orb
lret
cld
adc
jg
aam
je
cmpsb
pusha
test
mov
das
mov
jmp
dec
pop
xchg
pop
sbb
nop
xchg
loope
and
mov
and
popf
add
int3
or
cwtl
popa
out
sub
ds
cmp
cmp
cmc
cmpsl
fmul
imul
lods
jae
addb
sbb
cmpsl
aad
enter
push
fildll
push
xchg
xchg
int3
aas
jns
mov
dec
inc
push
sbb
in
push
inc
aaa
gs
jns
xor
or
movsb
pop
push
mov
xor
ds
loop
dec
movsb
clc
stc
neg
mov
mov
shl
mov
stos
imul
push
loopne
dec
popf
jo
xchg
pop
and
inc
icebp
jae
push
xor
mov
adcb
mov
xchg
imul
pop
push
outsl
xor
iret
lods
cwtl
inc
scas
fisubl
push
mov
loope
sbb
xchg
push
adc
imul
and
add
insb
push
ljmp
push
inc
mov
fxch
mov
jmp
cli
aad
xchg
sbb
fdivl
orl
cmp
and
inc
jl
mov
adc
faddp
xchg
rcrl
jbe
adc
jmp
sub
cmpsl
es
das
mov
mov
ret
xlat
adc
and
pop
push
mov
adc
out
insb
sti
pop
and
insl
mov
rcrl
fbstp
mov
lahf
adc
orb
jecxz
xor
leave
rcll
imul
enter
test
adc
push
out
shl
pop
lcall
in
inc
outsl
mov
sahf
pop
dec
and
aam
ss
test
add
xor
sahf
mov
push
das
leave
jg
jge
frstpm(287
movsl
fcom
jl
sub
push
hlt
push
push
dec
pop
aas
jmp
adc
pop
lret
jo
stos
mov
sub
loope
ret
and
insb
stc
dec
loop
insb
jae
xor
lret
cli
mov
push
add
addr16
popa
iret
push
push
pop
int
adc
clc
sbb
divb
mov
pop
scas
xchg
mov
test
les
rcll
jno
fnstsw
adc
fnsave
clc
xchg
add
lock
movsb
lds
inc
negb
sub
cmp
pop
out
stos
dec
scas
fcomps
lahf
xchg
incb
test
jmp
inc
jge
mov
or
cmp
mov
ficompl
push
fnstsw
mov
or
jae
pop
pop
and
das
push
pop
mov
mov
pop
lds
mov
int
loopne
bound
mov
or
in
in
mov
sub
ds
jo
orb
or
cmp
imul
scas
dec
das
mov
lods
inc
stc
sub
and
hlt
fimull
les
hlt
fsubs
jl
mull
and
cmp
cmp
xchg
stos
jp
imul
int3
push
sbb
mov
push
inc
stc
in
aaa
inc
cs
cmc
adc
add
xor
push
push
add
nop
into
sbb
sub
cmpsl
cmp
adc
loopne
andb
lods
insl
das
lahf
clc
jo
xchg
mov
fnsave
jecxz
std
inc
pop
mov
sbb
push
test
or
cmpsb
sbb
insb
fcomps
arpl
xchg
add
xor
pop
mov
fdivr
jae
lods
mov
inc
mov
js
mov
lods
out
push
xor
mov
cmp
push
mov
js
cmp
dec
xor
cmp
dec
xchg
xchg
inc
clc
enter
insl
mov
pushf
out
imul
loop
push
aad
push
test
cmpsl
pushf
or
jnp
cli
add
ds
mov
push
enter
dec
ret
xor
dec
lcall
push
jae
pop
lcall
sbb
inc
add
jp
cld
out
cmpsb
mov
inc
lods
ret
stos
cmpsb
dec
ret
test
out
adc
pop
xchg
cmp
pop
fs
cmp
pop
mov
mov
mov
jns
mov
cli
xchg
sbb
orl
or
jp
adc
pop
outsb
sbb
iret
in
cltd
mov
sub
mov
mov
lret
mov
push
jno
fdivs
cld
sbb
js
lret
outsl
aas
jno
insl
xor
int
fs
pop
in
in
sbb
jmp
fists
scas
mov
sub
aaa
and
outsl
pop
stc
das
ret
pop
adc
lock
or
sub
or
adc
daa
push
dec
jne
or
push
xorl
dec
out
cwtl
pop
pop
push
mov
fwait
nop
push
push
or
shl
add
sbb
jmp
pop
cmp
push
xchg
dec
adc
lcall
or
push
sub
or
pop
push
sub
ret
xchg
push
mov
jge
mov
aam
addr16
and
dec
add
inc
dec
sbb
les
dec
das
cmp
mov
pop
xlat
adc
sub
inc
push
sub
xchg
rolb
adc
fisubs
movsb
leave
xchg
mov
pop
inc
xor
inc
mov
mov
add
lea
xchg
and
cmc
mov
decl
mov
lods
lcall
lds
addr16
fsubrs
gs
cmp
sbb
jl
mov
lret
pop
xor
or
repnz
xor
pop
inc
cmp
sbb
out
popf
fwait
inc
sbb
shll
cmp
xchg
sahf
pop
jge
cld
cltd
in
sub
sahf
push
shrl
sti
mov
repnz
or
es
sti
push
jg
mov
ret
xchg
add
test
push
jne
je
push
cmc
test
xlat
xor
add
insb
and
mov
inc
leave
inc
mov
jnp
call
inc
jg
sub
imulb
call
int3
and
pushf
incl
xchg
inc
lcall
xchg
in
lret
pop
xchg
pushf
outsb
or
sub
pop
add
and
xchg
aad
fadds
push
es
push
ds
and
jo
pop
outsl
mov
or
shlb
ret
cmpsb
sub
addr16
test
lea
add
sub
out
xchg
dec
aam
mov
js
nop
push
jb
in
mov
lcall
add
lcall
adc
bnd
xchg
jp
fs
mov
loopne
fildll
mov
mov
and
lret
mov
cmc
loopne
mov
xchg
pop
xor
imul
jmp
mov
ds
psubsb
stos
add
add
rcrb
leave
and
ja
test
or
and
mov
mov
aam
fadds
pop
test
rcrl
dec
xorb
and
xor
fs
cmp
inc
mov
ret
cwtl
rol
das
jl
or
pop
clc
mov
lahf
mov
xchg
mov
cmpsl
or
inc
push
jbe
add
into
adc
in
orl
add
out
cmp
xchg
mov
aam
cmp
addb
or
and
lds
jns
mov
popa
icebp
lret
push
dec
aad
jns
shrl
jecxz
addl
jno
pop
dec
xor
xor
mov
out
imul
shr
popa
dec
cmp
mov
cli
fstpl
fsubl
sbb
dec
cmp
xor
sub
stc
je
sub
adc
mov
jnp
cmpsb
popf
mov
jnp
fprem
jnp
push
roll
push
gs
dec
push
into
incl
dec
movsl
adc
sbb
push
iret
xor
leave
pop
pop
aad
loope
xor
pop
jb
jns
cmp
push
dec
or
sub
and
inc
adc
and
xor
xor
out
vcvtsd2si
pushf
mov
cmp
xchg
gs
jmp
xchg
rorl
adc
push
in
inc
call
mov
sbb
sub
shlb
xchg
invd
into
rcll
cmp
dec
adc
mov
shll
jmp
sti
aas
rorb
or
lcall
cmp
pop
adc
int3
test
ret
and
enter
hlt
adc
mov
lret
js
insl
nop
xor
jle
xchg
gs
mov
jb
dec
shr
add
push
aam
mov
adcb
mov
pop
push
loop
add
inc
icebp
push
mov
rcll
sbb
in
pop
fmuls
inc
movsb
sbb
mov
push
aas
xchg
pop
push
or
lea
pop
lahf
mov
inc
mov
outsb
mov
lret
xlat
rcl
ja
js
push
sahf
das
imul
add
mov
inc
leave
xlat
rcr
mov
aaa
or
out
mov
push
mov
sahf
push
push
ja
hlt
push
xchg
clc
sbb
enter
jns
mov
loop
mov
jg
repnz
lods
xchg
and
in
or
testb
sbb
sub
jne
sub
xorl
mov
inc
jmp
pusha
xchg
in
pop
adc
mov
mov
es
ss
bound
xchg
add
push
xchg
cmp
call
fcmovnbe
bound
fidivrl
xchg
mov
xchg
pop
in
mov
inc
dec
inc
in
sub
es
loop
bound
filds
je
push
jp
cmpsb
dec
jnp
sub
and
add
xor
inc
inc
xchg
ja
mov
leave
xchg
stos
sbb
pop
std
sahf
shlb
fidivrl
xchg
pop
mov
outsb
es
cltd
xchg
mov
dec
mov
mov
add
js
push
push
xor
and
jmp
daa
hlt
pop
divl
xchg
jb
inc
hlt
add
mov
inc
sbb
aam
gs
cmp
add
cwtl
popa
jbe
inc
push
pop
lahf
ds
jge
push
dec
jle
js
xchg
sarl
inc
push
mov
pop
call
push
insb
aas
inc
dec
sub
shll
fcomp
shll
mov
inc
aaa
push
sahf
std
cmpsw
stc
lods
and
add
sahf
mov
push
xor
mov
xor
push
pop
insb
out
inc
hlt
bound
scas
cwtl
fadds
jne
pop
aas
aam
aam
fstpl
je
inc
xchg
in
ret
or
imul
gs
and
mov
test
daa
mov
mov
shll
fists
cmp
pusha
cmp
hlt
scas
test
push
jmp
inc
leave
cwtl
pop
push
cld
mov
push
in
call
dec
je
push
inc
push
inc
mov
imul
fwait
addr16
adc
ss
fstl
sahf
xchg
aad
out
pop
push
stc
aas
rolb
pop
inc
add
out
pop
sub
dec
and
fucomip
push
push
into
std
insb
pop
cwtl
xchg
dec
and
popa
repz
mov
sarl
push
push
dec
hlt
xchg
addb
push
movsb
fbld
cmpsl
repz
repz
sub
xor
push
dec
pop
cmp
jmp
or
mov
push
cmpsb
sbb
jge
adc
dec
roll
mov
pop
push
fdivs
outsl
or
or
int
xchg
push
push
mov
dec
xchg
sub
xchg
jl
addr16
xchg
xchg
test
lods
and
fnstsw
subb
subb
cmp
xchg
mov
sub
jo
mov
sbb
xlat
jns,pt
popa
lock
cmpsb
rolb
jp
fildl
mov
jnp
or
pushf
mov
cmp
test
xchg
cmp
int3
xchg
pop
or
test
dec
pcmpgtw
and
dec
dec
push
outsb
mov
adc
dec
pop
fidivs
insl
shll
cwtl
xchg
loope
inc
out
adcl
test
inc
adc
fidivl
mov
xor
lods
pop
mov
adc
dec
sbb
xchg
test
lea
mov
mov
pop
mov
jle
leave
lcall
mov
int3
sub
movsb
mov
add
mov
mov
jl
add
iret
pop
push
fdivl
lods
xor
stos
xchg
in
cwtl
data16
or
jno
add
loop
dec
dec
loopne
adc
movsl
jae
cmp
ret
or
mov
stos
movsb
dec
mov
mov
mov
shlb
clc
inc
test
dec
mov
jge
inc
push
loopne
and
mov
lahf
push
adc
cmpsl
rcr
fsubrl
in
adc
push
decl
mov
in
sti
stos
cltd
push
sbb
sub
in
cltd
jb
mov
loop
inc
xchg
jne
scas
repnz
scas
add
xor
mov
push
pop
int3
dec
in
inc
movsb
push
mov
xchg
sub
xchg
popa
mov
insl
das
and
nop
sbb
mov
outsl
and
jl
dec
add
add
pop
std
xchg
lret
popf
mov
leave
or
mov
mov
mov
mov
shrb
notb
jmp
addr16
inc
dec
inc
lods
adc
xchg
lock
les
cli
xchg
cwtl
insb
mov
mov
xchg
mov
sub
pushf
xor
mov
lds
mov
dec
sahf
and
dec
adc
mov
jbe
icebp
js
mov
je
add
or
jle
and
js
dec
subb
mov
and
jp
inc
pop
jg,pn
mov
pop
sub
sub
or
dec
loope
ja
xor
loope
xor
nop
push
pop
movsb
sub
jbe
lods
xor
sub
cmp
add
shlb
stos
xchg
adc
push
movsl
jb
int
aad
xchg
mov
mov
call
sbb
cwtl
shlb
js
mov
sahf
mov
and
jne
cmp
fmull
mov
aad
jo
inc
cmpsl
xchg
add
pop
sbb
adc
and
mov
adc
jne
lods
lock
imul
pop
enter
inc
sahf
sbb
pop
mov
push
lock
xor
dec
or
or
pop
into
arpl
int
mov
adc
mov
push
xor
dec
cmp
pop
dec
enter
xchg
or
lret
loopne
sbb
fwait
popf
mov
cmpsl
mov
stc
into
stc
mov
inc
push
cltd
popa
paddq
or
shlb
lcall
jge
daa
xchg
xchg
xchg
mov
push
jmp
xlat
fdivs
lcall
sbb
outsb
daa
dec
cmp
mov
pop
jp
cmp
and
fs
xchg
fs
scas
out
pop
test
cmp
les
aaa
out
shlb
adcl
mov
push
adc
and
cld
sarb
xor
fwait
mov
in
insl
push
sub
std
inc
cmp
inc
xchg
mov
out
jmp
push
lock
iret
jmp
outsl
xchg
adc
repnz
or
in
dec
or
xor
ljmp
decl
imul
xor
inc
mov
or
cmpsb
sahf
adc
and
cmp
add
test
sub
loope
aam
stos
jns
cmc
mov
fs
mov
or
rcrb
rep
mov
jne
push
inc
and
imul
aas
adc
outsl
fs
dec
mov
sbb
jg
fiadds
popa
and
sbb
out
mov
pop
test
mov
add
les
mov
mov
sbb
fsubs
outsb
rcr
ljmp
pusha
test
mov
lret
inc
mov
lods
das
jno
jnp
mov
test
dec
fsts
mov
sbb
adc
cltd
inc
js
lock
cli
ret
inc
jo
sbb
fisubrs
iret
pop
in
xor
clc
adc
fdivp
insb
or
ja
xchg
ret
hlt
cmp
sbb
push
ret
inc
lcall
sbb
dec
cmpsb
xlat
cs
jge
dec
fdivrl
mov
push
pop
das
scas
sbb
mov
sub
inc
add
enter
lea
pushf
pop
in
pop
call
sub
dec
scas
jge
adc
xlat
push
cmp
sbb
mov
push
popf
fcomps
stos
enter
or
stos
or
pushf
sub
inc
mov
mov
lret
jbe
into
push
pop
das
and
movsb
stc
push
into
les
add
andb
enter
cli
jle
add
or
sub
sbb
fprem1
mov
decl
loopne
aas
ret
testl
pop
lret
lcall
adc
mov
popa
insl
decb
adc
mov
idivb
sub
cmpb
mov
inc
xlat
push
imul
jbe
mov
pusha
inc
roll
sub
jno
fimull
in
xor
sub
in
mov
mov
test
push
mov
cmp
xor
xor
popa
lock
push
mov
mov
rclb
pop
or
inc
add
clc
dec
in
sub
das
xor
insl
sbb
rcrb
cmpsb
ja
and
les
mov
ljmp
lea
and
mov
aad
xor
stos
add
push
jecxz
pop
push
call
dec
sub
cs
dec
mov
scas
daa
fldl
xchg
test
out
iret
lcall
cmpsl
pop
rorb
cltd
in
dec
outsb
loopne
jmp
mov
je
inc
jnp
inc
ret
ret
pop
fildll
roll
fstl
mov
in
aad
ret
divb
sub
cld
pop
lods
movsl
jmp
loopne
out
and
lods
aas
test
mov
dec
jne
mov
js
jle
xor
sub
fwait
sti
xor
sbb
mov
mov
add
imul
cmp
dec
xchg
sub
fdivr
inc
rcrl
jae
lods
inc
out
dec
jno,pn
push
icebp
mov
jne
outsl
adc
jae
xlat
mov
rcrl
outsl
inc
dec
adcl
mov
sub
dec
mov
cmp
push
gs
pop
mov
outsl
sarb
pop
jecxz
jb
cmp
orb
push
sub
pop
mov
mov
mov
jg
shll
pop
lcall
or
cmp
cmp
jnp
mov
cmp
push
mov
and
in
lock
push
and
test
ds
arpl
pop
fsubr
int
or
sub
push
ljmp
or
lea
pop
xchg
mov
and
arpl
pop
daa
ret
cwtl
loop
pushf
rcll
and
xchg
fstpt
or
subl
lock
xor
pop
jb
push
clc
add
sbb
mov
lea
popa
sub
fdivrs
push
test
ret
int3
call
mov
loope
and
ret
int3
sub
pop
push
roll
fildll
out
mov
int3
imul
std
mov
mov
rolb
mov
dec
mov
test
stos
mov
or
mov
sbb
mov
xchg
lds
call
inc
fisubrl
xchg
dec
aaa
mov
gs
bound
pop
push
ret
inc
mov
stos
push
push
pop
dec
mov
sub
pop
mov
dec
pop
into
mov
icebp
mov
lds
or
xor
inc
xor
nop
and
mov
loopne
inc
push
aaa
shl
mov
scas
add
fsubl
fadds
out
notl
mov
xor
out
or
inc
js
loope
add
mov
ljmp
or
xor
jo
inc
gs
in
dec
sbb
sub
xlat
ja
dec
rcrl
cmp
sbb
stc
gs
rorb
outsb
outsl
sbbb
adcb
adc
pop
mov
imul
js
pop
into
cmp
out
jge
inc
outsl
fstp
xchg
or
insl
and
jne
pop
scas
add
xchg
aam
stos
insl
insl
fiadds
jg
lret
sbb
jmp
mov
or
aaa
cmp
mov
sbb
adc
mov
jl
inc
jl
push
jo
fsts
lahf
test
testb
cmc
mov
pop
adc
popf
cmp
xchg
pop
inc
adc
mull
and
jl
cwtl
and
call
sub
divl
loope
stc
pop
cltd
outsb
sbbl
insl
mov
pop
aam
decb
xchg
jnp
mov
jnp
idivl
mov
inc
sarl
rclb
bnd
leave
mov
pop
stos
sti
xor
or
xor
add
xlat
ja
jecxz
call
mov
jo,pn
xor
jmp
test
mov
jmp
cmpsb
out
or
pop
repnz
fwait
add
dec
dec
mull
pop
xor
mov
jno
cmp
int3
aad
lahf
lcall
xchg
adc
jns
and
xchg
jbe
jnp
jge
stc
dec
fwait
xor
sub
push
leave
cltd
cli
dec
push
or
stc
cmp
cltd
sahf
push
mov
sbb
test
sub
aas
cwtl
push
or
mov
xlat
mov
nop
jns
xchg
inc
lock
pop
mov
jl
mov
fadds
inc
aad
and
out
popa
mov
fsub
dec
dec
mov
push
sbb
mov
pop
clc
shlb
cltd
cld
jbe
dec
sbb
xor
jno
or
mov
xchg
movsb
test
add
pop
shlb
push
push
cmp
outsl
mov
insl
lret
popl
movsb
mov
cli
in
fwait
decl
mov
int
jno
push
fistps
out
push
and
stc
stos
jecxz
adc
push
sub
inc
imul
fisubrs
jno
ja
jl
repnz
pop
popl
movsl
xchg
fcomip
xchg
rcrl
rcrl
addr16
fistpl
sti
pop
xor
arpl
fistps
inc
pop
sbb
push
pop
mov
inc
adc
dec
jo
insl
outsb
mov
mov
call
mov
sbb
fldt
jo
mov
ja
mov
lcallw
ljmp
mov
push
push
rorb
out
jno
sbb
movups
or
divb
mov
mov
mov
and
push
adc
cmpsl
xchg
cmp
aad
lahf
rcll
adc
cmpsb
lahf
inc
dec
push
dec
push
sbb
fidivl
inc
cmp
addb
jo
subb
xor
add
inc
jbe
inc
in
xor
mov
shl
lods
sub
xchg
cmp
cltd
sbb
in
cs
push
mov
mov
xchg
mov
pop
sbb
pop
in
push
and
push
imul
cmp
mov
push
shll
or
add
out
mov
ret
inc
or
mov
xchg
out
inc
fwait
aas
ret
cmpsl
imul
mov
pop
pop
mov
addb
adc
xchg
js
lahf
mov
dec
stos
pop
add
int
or
push
dec
or
cmpsl
cmp
aam
in
mov
sbb
addb
xchg
inc
shlb
bound
xor
jne
int3
jns
mov
dec
stos
sub
loopne
add
pop
shr
mov
sbb
ret
adc
hlt
sti
adc
notb
lret
mov
adc
adc
xor
xor
lret
and
sti
mov
xchg
push
mov
push
cwtl
test
and
pop
clc
rorl
mov
outsb
push
add
push
jg
cmc
daa
sub
or
fcomip
pushf
sub
shll
lcall
xchg
lock
ror
sub
mov
inc
test
adc
and
push
lock
jle
cmpb
mov
das
lahf
push
stos
out
push
jge
pop
pop
xor
add
xchg
fs
inc
lfs
inc
rcrl
je
xor
test
hlt
sbb
and
shl
in
mov
loopne
addr16
mov
inc
gs
nop
jecxz
sub
outsl
aad
das
lret
in
sub
lock
lea
dec
ret
and
cmp
ds
sub
and
xor
jp
in
sbb
push
cltd
adc
pop
rcrl
dec
outsb
sti
inc
and
dec
lret
cmc
stos
lods
jmp
add
arpl
ret
lods
insb
popa
mov
hlt
sbb
dec
pop
mov
push
sub
pop
stc
arpl
xchg
repnz
push
movsl
rclb
fs
aad
ss
cmpl
sub
add
mov
rclb
push
mov
fisttpll
or
outsl
das
jo
dec
jnp
movsb
icebp
fstl
mov
aas
lahf
jb
pop
xchg
cmp
pop
test
ret
push
add
scas
rorl
or
add
rorl
or
xor
mov
mov
mov
add
and
mov
mov
mov
lea
mov
mov
mov
sub
add
mov
mov
xor
add
jne
mov
mov
mov
cmp
je
mov
mov
mov
mov
xor
cmp
jne
mov
mov
xor
movsbl
mov
xor
add
cmp
mov
mov
mov
je
xor
add
mov
je
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
add
imul
mov
mov
mov
add
or
mov
mov
mov
add
xor
mov
mov
mov
add
and
mov
mov
mov
lea
mov
mov
mov
sub
add
mov
mov
xor
add
jne
jmp
jmp
out
push
and
outsb
fs
cs
jp
add
jp
add
add
lea
adc
icebp
pusha
or
cmp
cmp
lcall
jns
push
push
jg
push
mov
sbb
sahf
cmp
add
out
cmp
leave
xchg
sahf
je
rcll
sahf
movsl
pop
in
mov
xchg
ds
test
mov
pushf
jp
and
mov
lret
xor
ljmp
fs
mov
lret
fisubrl
xlat
sub
push
xor
lahf
jle
sbb
stos
shr
orb
in
jnp
lret
loop
lock
jl
jb
bound
mov
stos
jbe
nopl
test
jg
nop
inc
add
push
dec
dec
mov
les
shlb
xor
dec
pop
test
fadds
fcoms
mov
lods
icebp
out
pop
in
repnz
fisubs
loop
sub
ds
into
in
loope
mov
lds
pusha
mov
xlat
popa
stos
push
pop
lea
loop
and
sti
imul
out
xor
cmc
fdivrl
insl
xor
push
and
sti
inc
jmp
ljmp
jl
mov
std
fs
and
cwtl
mov
js
push
mov
cmpb
iret
push
mov
pop
leave
paddq
sub
imul
pop
shrb
push
notb
out
pop
pusha
into
mov
stos
push
repnz
cmp
jno
jg
imul
inc
add
inc
repz
call
xlat
xor
cmp
sbb
cmp
outsb
popl
xor
insl
cltd
call
test
push
and
sahf
cmp
test
out
push
inc
sub
fcom
cltd
xchg
cs
push
cmp
enter
adc
push
xlat
out
daa
in
mov
icebp
inc
inc
or
ds
push
sub
rep
xchg
jl
jns
mov
rol
lcall
dec
rdtsc
mov
fld
int
out
push
mov
outsl
dec
sbb
inc
data16
cmp
xor
jmp
jns
sub
lds
bound
ret
xchg
leave
fs
dec
and
fwait
in
inc
add
pushf
xor
inc
es
cli
mov
push
xor
enter
pop
jns
stos
ljmp
les
or
insl
mov
loopne
adc
jl
ds
repz
dec
or
xchg
push
dec
fstps
rcrl
dec
jnp
jne
inc
fwait
popf
adc
mov
dec
or
ret
jle
xchg
sbb
sub
popf
push
mov
mov
sub
sbb
test
mov
pop
jbe
les
frstor
push
in
dec
jp
sub
mov
add
adc
ja
push
gs
inc
dec
mov
or
lcall
dec
das
repz
mov
jnp
and
enter
ljmp
mov
xchg
aas
shlb
xchg
xor
lcall
fisubs
push
dec
pop
or
jae
movb
adc
sub
outsl
lret
add
aas
dec
jge
lods
adc
lcall
xor
cltd
add
jmp
or
xor
call
lahf
sbb
fstpl
rcrl
add
mov
sub
add
pop
scas
je
jns
outsb
enter
sub
leave
pop
movsb
loope
jge
pushf
push
test
ds
xchg
adc
jnp
jecxz
lds
add
and
dec
test
aaa
out
outsb
es
lret
pop
das
pop
mov
data16
pop
lahf
add
push
jg
ja
gs
and
push
dec
jb
sbb
mov
sub
ljmp
dec
cmp
dec
cwtl
dec
push
imul
mov
je
insb
pop
in
push
xor
int
iret
fldl2t
mov
or
sub
xchg
add
popa
cmp
in
mov
jbe
sub
int
and
sbb
arpl
lret
jmp
iret
push
push
pop
sub
inc
rclb
pop
mov
stos
jg
ss
loop
in
xchg
clc
ja
scas
and
cmp
bound
jle
lods
dec
and
rcll
sub
xchg
sub
pop
sbb
inc
and
int3
imul
push
cmp
xchg
stos
push
jp
cli
shll
adc
out
cmc
lods
or
push
sub
lock
out
sub
xor
xchg
jne
cmp
adc
push
test
outsl
mov
inc
shr
sub
xor
push
sub
sub
std
pop
shr
stc
bound
mov
xor
mov
rclb
in
cmc
add
pop
add
stc
scas
mul
xor
push
xor
pusha
cmpsb
sub
inc
movsl
mov
dec
xchg
enter
push
dec
dec
movsl
xchg
cld
xor
je
dec
and
sbb
mov
jns
cmp
sub
jne,pt
inc
lcall
sbb
mov
iret
cmp
and
ds
add
inc
in
rolb
pop
pop
popf
jg
shrl
inc
jp
test
push
pmuludq
mov
xor
cmp
and
add
sub
imul
pop
pop
xchg
push
decl
lods
fisubl
into
in
push
push
aam
incl
sti
pop
xor
les
addr16
add
insl
adc
ss
roll
sbb
lods
mov
lock
or
mov
addl
push
rcll
or
mov
sarb
stos
daa
jmp
out
sub
push
xchg
add
and
or
and
repz
fiadds
mov
testb
mov
out
xor
jae
movsl
xchg
pop
movhlps
mov
rcrl
scas
in
out
movsb
je
aam
mov
in
in
push
pusha
dec
cmp
cmpsl
fldenv
jns
movsl
and
inc
shl
popf
or
mov
lods
adc
cmp
add
imul
pop
jecxz
insl
mov
mov
xor
dec
lds
push
jo
loop
out
aaa
inc
out
mov
xor
dec
mov
enter
aas
inc
mov
jnp
sbb
or
jb
push
gs
push
test
enter
test
add
je
jo
mov
pop
notl
xchg
add
xor
pop
mov
shlb
popa
fcoms
inc
xor
cwtl
shrb
aam
push
movsb
mov
fcomi
jno
loopne
leave
jno
xchg
arpl
out
syscall
dec
mov
shll
adc
sbb
out
lret
mov
in
sarb
dec
add
insl
push
in
add
cli
nop
ljmp
or
bound
pop
add
inc
jo
mov
stos
jl
addl
xchg
sub
mov
pop
gs
mov
sub
mov
or
jno
push
xchg
test
push
mov
test
sub
mov
jnp
and
aam
sbb
push
insb
and
inc
mov
add
or
in
jmp
pop
lds
dec
add
push
ds
add
mov
ror
cmpb
cmpsb
dec
idivb
cmp
or
dec
inc
lock
ja
cwtl
outsb
mov
and
mov
or
dec
pop
insb
adc
js
fadd
in
dec
and
repz
sbb
xor
mov
add
aas
mov
jae
xlat
in
arpl
icebp
xchg
jge
push
stc
ss
dec
dec
add
scas
inc
lahf
add
test
push
push
mov
jle
dec
inc
jmp
or
inc
in
dec
pop
jl
scas
ja,pn
je
pop
sub
outsl
cmp
into
jp
inc
sbb
cmc
mov
pop
adc
mov
cmpl
adc
imul
cltd
ret
push
lods
call
dec
testl
pop
mov
mov
inc
cmp
and
mov
in
call
push
imul
lds
in
shll
mov
or
jne
mov
fwait
pop
arpl
add
rcrl
xchg
cltd
mov
jmp
inc
and
jne
stos
mov
dec
pop
arpl
sub
neg
and
repnz
adcb
icebp
fst
push
dec
subb
mov
mov
icebp
xchg
or
fadds
ret
mov
or
dec
enter
imul
inc
negb
push
cli
mov
int3
lret
adc
outsl
enter
scas
lea
sahf
pop
outsl
mov
mov
sbb
mov
js
add
fwait
or
lods
cs
or
dec
pop
sub
sbb
mov
mov
lock
xor
cs
xchg
or
push
outsl
sub
jle
cmp
sub
mov
cmp
test
in
push
or
call
or
fdivs
jbe
leave
xor
int
jg
push
mov
inc
sbbl
scas
xchg
int3
xor
push
dec
lock
stos
pop
test
xor
jge
push
pop
in
xchg
loopne
sub
sub
fmull
andl
loop
scas
fcomp
push
mov
popa
ss
mov
loope
jnp
outsl
cmc
jecxz
icebp
insl
mov
inc
mov
mov
hlt
jmp
jo
js
cmp
jne
lock
outsl
mov
rcrl
jae
add
dec
or
out
test
adc
insl
xlat
push
fildl
out
movsl
cmpsl
or
mov
fwait
mov
inc
cltd
int
cmp
bound
lahf
dec
fbld
jnp
xchg
or
push
cltd
mov
cli
and
stos
mov
test
pop
or
dec
loope
push
leave
ja
aam
push
xchg
nop
xchg
test
dec
cmpsb
pop
pop
arpl
cltd
mov
outsl
mov
cs
xchg
and
pushl
mov
lea
stos
sbb
push
and
add
and
mov
out
hlt
cmp
negl
fwait
jge
clc
shrb
frstor
cwtl
push
dec
bound
push
daa
jle
in
jmp
loopne
insb
inc
lret
ret
dec
or
sub
push
stos
dec
outsb
mov
adc
clc
and
add
ret
inc
int3
and
pop
call
jno
push
dec
ret
stos
mov
or
add
push
inc
jns
and
movsb
inc
xchg
arpl
aad
lds
xchg
mov
lret
mov
fisttpl
pop
sub
out
mov
jmp
dec
mov
scas
or
lock
jle
fdivs
sub
xlat
jmp
bound
lea
sub
or
dec
xor
jecxz
and
jge
sub
push
mov
in
repz
sbb
bound
enter
mov
leave
xchg
fidivrl
inc
js
mov
loopne
ret
cli
or
loope
mov
insl
stos
cmp
jmp
loopne
push
subl
adc
push
js
inc
sub
clc
ret
out
shrl
mov
lods
mov
sbb
dec
nop
fwait
jle
cmpsb
arpl
pop
imul
out
in
cmp
scas
xlat
and
movsl
or
xchg
push
or
hlt
mov
cld
mov
subl
mov
jg
aas
mov
out
or
push
add
xor
cs
and
xor
mov
push
lods
mov
dec
roll
xor
fisubl
and
dec
pop
popa
or
jne
xchg
mov
sbb
or
inc
mov
sbb
pop
xchg
dec
js
jecxz
repnz
and
mov
mov
jae
mov
xor
jb
push
push
mov
jmp
adc
stc
mov
mov
rorl
pop
cmpl
nop
pop
or
bound
test
and
mov
lea
pop
inc
or
pop
testl
mov
loopne
xor
addr16
cltd
cmp
shr
test
gs
repnz
xchg
and
and
mov
cmp
and
cmp
mov
in
psubsw
cltd
sti
jecxz
push
mov
repnz
incl
xchg
repnz
cmc
loope
or
sbb
sbb
or
mul
push
jb
pop
in
cld
xchg
ss
or
xchg
lock
jb
push
pop
fs
or
je
out
test
xor
push
xor
pop
decl
je
not
push
icebp
dec
loopne
sub
decb
cmpb
sbb
movsl
inc
jae
push
loope
cltd
xor
in
nop
push
cmp
push
xchg
test
mov
jp
mov
ds
push
sub
mov
pop
mov
cmp
sahf
call
cmpsb
dec
leave
or
or
dec
cmc
mov
xchg
add
dec
jl
fldl
clc
inc
xlat
xchg
jg
sub
movsl
insb
push
and
jno
mov
mov
mov
daa
add
sahf
or
lds
add
imul
scas
xchg
sti
fistl
lea
cld
mov
sub
rol
loop
xchg
and
mov
imul
mov
icebp
nop
data16
pop
das
fidivl
fsub
cwtl
hlt
jnp
fldl2e
or
and
dec
int3
push
jge
or
lret
mov
stc
push
stos
add
xor
inc
sbbb
push
mov
mov
and
jg
xlat
inc
aad
push
mov
fcomp
lods
adc
orl
enter
dec
xchg
popf
outsb
daa
push
adc
mov
cmpl
jnp
aam
mov
pxor
jne
xchg
pop
call
repnz
adc
enter
jle
repnz
lea
es
adc
cmp
in
sbb
xor
mov
jmp
pavgw
and
pop
dec
loop
jge
xor
xchg
leave
aad
jmp
dec
add
inc
jne
sub
and
mov
jle
mov
adc
nop
fwait
fwait
jmp
pop
fwait
mov
push
cmp
add
aas
mov
xchg
mov
jp
stos
dec
std
fistl
fcomps
out
js
pop
fisubrs
mov
sub
adc
cld
inc
dec
out
jb
jmp
pop
mov
adc
shrb
or
dec
or
ja
mov
or
add
daa
scas
and
pop
cmp
testl
std
sbb
lahf
cmp
aas
add
mov
jge
cli
gs
out
mov
mov
imul
hlt
pop
jge
pop
js
out
sbb
jg
push
mov
mov
mov
sub
cmc
loope
data16
movsb
in
add
insb
and
add
fs
jae
mov
cmpb
lds
sahf
add
dec
or
testl
stos
adc
jmp
push
sbb
insl
sub
out
push
lret
cld
test
cmp
mov
jecxz
mov
in
pop
dec
mov
and
in
loop
cld
jno
and
rorb
inc
xchg
mov
mov
sub
cmc
adc
popa
jp
push
scas
adc
mov
test
adc
lret
or
addr16
xor
pop
bound
mov
sahf
iret
inc
mov
jmp
out
inc
dec
add
out
cs
stc
add
mov
or
lock
push
in
push
int3
orb
add
repz
in
aad
pop
adcl
inc
sbb
in
inc
xchg
pop
jge
js
test
imul
mov
jo
vcvtpd2ps
shrl
inc
stos
adc
loop
bound
lcall
cld
mov
xor
dec
add
mov
jle
mov
xor
mov
cmp
sub
pop
fldlg2
dec
jno
cmp
outsb
in
xor
jp
insb
rclb
mov
push
jp
fstps
push
iret
xchg
lcall
jp
ret
and
pop
mov
jb
cmpl
jnp
or
stc
mov
lret
adc
in
inc
adc
fs
sub
xor
push
repnz
mov
or
sbb
cmp
dec
hlt
fisubl
test
sub
call
js
cmp
fistps
add
outsl
mov
outsl
push
cmp
ficomps
mov
mov
adc
arpl
jno
in
incb
mov
jno
mov
adc
mov
xlat
adc
add
flds
mov
sub
loop
mov
jge
roll
and
push
inc
cmp
mov
shll
daa
and
xchg
inc
test
loopne
and
and
add
sti
xchg
outsl
scas
xchg
or
lahf
and
enter
mov
std
stos
mov
sahf
mov
andb
in
daa
xchg
shrl
sahf
leave
xor
jne
mov
fwait
dec
mov
xor
lret
ljmp
outsb
xor
mov
and
test
sub
inc
xchg
dec
push
rolb
outsl
es
sbb
adc
sub
push
adc
inc
sub
mov
in
cmp
aam
push
cli
push
jb
divl
xchg
cltd
js
aas
jae
jmp
dec
push
cmp
lcall
lods
lods
sub
hlt
cmpsl
mov
mov
repnz
ret
or
cwtl
jecxz
inc
lahf
add
es
popa
add
movsl
aaa
scas
jl
test
mov
cmpsl
xor
or
dec
add
enter
add
pop
jb
xchg
enter
jnp
in
pop
mov
push
push
adc
stos
push
jmp
dec
push
ret
sub
mov
rol
pusha
retw
aas
xchg
jmp
js
int3
outsl
scas
aam
dec
xchg
ret
in
cmp
add
add
mov
and
push
sahf
pop
ds
addr16
dec
push
sahf
clc
in
sbb
cld
cmp
icebp
or
in
cli
insb
call
cs
push
add
imul
shrb
xor
xor
xor
jl
push
push
dec
cs
jns
sub
xchg
and
and
cmc
jl
adc
push
movsl
push
aas
inc
add
dec
data16
and
xor
int3
jnp
les
mov
jb
mov
test
in
mov
jb
fadds
dec
jp
sub
dec
dec
pop
xchg
mov
in
rolb
daa
call
pop
lock
push
jg
scas
repnz
add
jl
mov
dec
test
pop
sti
or
dec
xlat
jge
lock
cmc
imul
int
dec
ret
and
adc
sub
cmpb
mov
ljmp
or
mov
out
dec
test
pop
loope
jge
ret
leave
inc
dec
push
call
es
out
jo
sbb
cli
dec
jg
pusha
es
cmc
test
mov
jle
mov
fiaddl
pop
pop
popf
jecxz
pop
sub
movsl
repz
jne
mov
pop
scas
xchg
inc
insl
stc
or
adc
push
jo
push
mov
adc
punpcklbw
fsubrs
add
xlat
ljmp
pop
hlt
in
int3
ds
cmp
pop
push
inc
fcmovnu
sbb
daa
je
adc
fsubrs
nop
jl
outsb
pop
rcrl
sbb
adc
dec
and
jno
and
dec
mov
mov
jbe
sbb
xchg
mov
and
leave
shr
mov
mov
jge
mov
add
mov
adc
ds
pop
shrb
or
test
xor
mov
pop
arpl
dec
mov
and
or
fnstenv
loop
ds
enter
inc
nop
inc
shlb
cmp
std
imul
jl
jo
popl
test
jmp
mov
cmp
in
push
pop
push
xchg
or
xor
push
ja
mov
inc
cld
out
and
imul
push
dec
fwait
shlb
push
sbbl
jl
jge
inc
or
aad
ret
ret
into
inc
fs
jmp
xchg
lret
jns
adcl
mov
add
mov
stos
or
cli
aad
mov
dec
cmp
mov
jno
push
pop
test
pushl
sub
jmp
jns
mov
adc
inc
fcoml
scas
sbb
dec
out
outsb
mov
inc
cmp
pop
bound
loop
pop
mov
jno
stc
sbb
pop
mov
aas
jnp
jp
sbb
mov
xchg
push
out
xchg
push
out
cmp
mov
lcall
push
push
mov
add
dec
idivb
mov
mov
sbbb
adc
or
push
xor
lahf
mov
sub
jl
clc
adc
pop
cld
push
pushf
push
jmp
push
cmc
aaa
mov
inc
loope
fst
lods
or
sbb
xor
insl
or
add
test
es
dec
inc
or
frstor
repnz
std
mov
mov
fdivr
pop
xchg
mov
je
lret
jb
stos
and
out
cmp
mov
int
mov
js
es
fs
fld1
mov
nop
mov
xor
stos
test
cmc
les
arpl
ja
std
neg
jge
inc
das
inc
cmc
sub
ret
fcomps
and
jbe
jmp
sub
and
sub
aad
lret
sbb
mov
jno
mov
fidivrl
xchg
sbb
shr
fwait
outsb
dec
mov
push
push
nop
inc
cmc
imul
imul
leave
adc
cmp
mov
aas
int
dec
repz
iret
stos
iret
mov
dec
inc
push
aam
pop
jl
loopne
loopne
popf
push
adc
hlt
mov
mov
add
or
or
and
push
jb
pop
cmp
in
test
das
jmp
fstps
jo
jns
sub
cli
out
jge
and
fmull
cmp
insl
popf
inc
mov
adc
fwait
bts
test
daa
jle
lcall
sub
pusha
sbb
xor
push
adc
and
stos
jb
or
cmp
aas
bound
ja
dec
fwait
xchg
outsl
jb
clc
xlat
inc
fcompp
test
imul
sbb
in
mov
into
inc
out
pop
arpl
lret
inc
ds
dec
insl
test
roll
movsb
ss
es
pop
leave
dec
in
xchg
pop
test
add
adc
pop
jae
jecxz
xor
rcrl
jbe
movsl
inc
dec
jbe
aad
idivb
xchg
or
cwtl
inc
fwait
icebp
cmc
je
arpl
inc
mov
mov
vmovups
sub
adc
rcr
in
fdivl
sub
or
repz
movsl
lret
fcoml
push
sub
sbb
out
inc
push
enter
notb
and
add
fmuls
xor
mov
or
sub
and
pusha
ficoms
jl
lds
adcl
ret
adc
subb
aas
cmp
fadd
xor
cmp
mov
jmp
movsl
add
pop
xor
pop
neg
mov
dec
jo
outsl
test
je
push
mov
pop
xchg
and
out
fld1
je
hlt
mov
lahf
pop
cmc
mov
dec
cli
dec
out
jl
mov
lea
jmp
add
cwtl
xchg
jecxz
dec
mov
add
iret
idiv
mov
jmp
pop
sbb
jge
data16
fisubl
test
jecxz
test
clc
mov
pop
xor
sub
inc
and
sbb
lret
lds
test
mov
add
sub
mov
jle
or
loop
pop
jp
mov
and
clc
sbb
pusha
inc
or
lods
enter
ficomps
scas
xchg
sti
xchg
popf
jbe
pop
clc
cmp
popf
jns
mov
bound
ret
mov
rorb
ror
clc
pop
sub
stos
mov
push
mov
cmc
lods
sub
test
and
popa
lea
xor
xchg
js
mov
and
cmpsl
jp
push
loop
mov
pop
outsl
cmp
test
pop
cmp
outsl
jns
pop
test
data16
mov
fcmovbe
inc
push
fistps
and
cmp
mov
add
pop
adc
jp
lea
fnstcw
sbb
and
mov
pop
sub
aam
int3
jae
jbe
adc
mov
rcl
dec
dec
add
lods
or
jg
fcmovu
scas
cmp
add
fwait
clc
rorb
leave
in
fnstsw
stc
negb
sbb
scas
or
cmp
lahf
jnp
fs
addl
jecxz
ljmp
popf
dec
sarl
cld
dec
push
push
xchg
pushf
jae
out
aad
ret
pop
nop
cwtl
aas
es
loope
aad
mov
outsl
inc
sub
cmp
das
repnz
and
into
js
push
mov
cmpsl
sbb
push
lahf
shll
sarl
sbbl
inc
mov
or
inc
mov
or
aad
adc
call
jle
lds
scas
and
and
mov
or
jae
push
popf
mov
jp
jmp
adc
popf
sub
jo
xchg
int
aas
into
ja
pop
push
mov
js
and
movsl
jl
sbb
loope
sub
test
insb
pop
je
mov
repz
mov
xchg
pusha
jae
popa
movsl
add
adc
and
pop
sub
adc
jge
sbb
sbb
push
xchg
mov
dec
dec
xchg
adc
adc
daa
sbb
push
movsb
dec
mov
shll
mov
stos
fsub
ljmp
stos
sti
push
sbb
mov
movsl
aas
scas
out
out
pop
incb
enter
push
mov
mov
bound
or
mov
ret
push
adc
add
add
pop
push
shr
pop
mov
inc
lods
outsl
xor
sub
cmp
dec
cltd
jo
stos
jp
mov
stos
xchg
mov
jp
jbe
pop
push
in
and
inc
jp
mov
xor
fsubrs
andl
jmp
insl
mov
inc
inc
mov
pop
rorb
jl
pop
sub
loop
aad
push
and
aad
add
ds
inc
inc
loop
mov
imul
push
or
mov
nop
mov
outsb
mov
aam
dec
pop
popf
sub
xor
int3
sbb
adc
repz
lahf
mov
jns
pop
hlt
jecxz
sub
xchg
sub
mov
add
inc
lea
mov
shll
pop
inc
aad
stos
and
pop
mov
cmpsb
jge
jo
mov
dec
xchg
lds
xchg
cli
movsl
push
sbb
cmp
fists
inc
sbb
frstor
ljmp
mov
mov
inc
mov
push
jmp
pop
add
dec
cltd
js
cs
or
jnp
push
add
icebp
and
cmpsb
fldcw
xor
fs
jge
jle
sub
sub
insl
stos
cltd
xor
mov
pusha
dec
fs
pop
mov
push
push
sti
jp
pop
inc
arpl
popa
in
aas
cmp
sbb
sti
mov
mov
inc
sti
adc
mov
orb
mov
jge
lods
scas
outsb
das
arpl
in
mov
sbb
mov
xor
in
popa
jbe
xor
cwtl
adc
leave
jp
int3
ret
mov
sbb
xchg
or
fcmovne
mov
push
bound
adc
or
inc
nop
or
dec
mov
dec
inc
imul
into
pop
sbb
and
fcom
and
inc
xchg
pop
mov
xchg
lret
mov
dec
iret
lods
out
or
sub
xor
push
or
pop
adc
iret
fdivrl
or
ja
xor
mov
xorb
jge
ret
dec
or
sar
cmc
mov
cltd
inc
jp
repz
movsl
xchg
je
dec
outsb
jns
fists
enter
cltd
push
adc
sbb
xchg
iret
mov
fwait
pop
repnz
popl
mov
lods
shll
add
dec
mov
pushf
mov
fistps
or
in
mov
data16
mov
dec
inc
sub
sahf
shl
cmp
mov
test
cmp
dec
push
bound
mov
mov
sbb
sbb
mov
sbb
pop
insb
sbb
loop
out
sbb
arpl
mov
clc
mov
push
out
adc
fwait
add
sbbb
gs
jp
inc
inc
addr16
sub
rorb
test
in
iret
sbb
xrelease
mov
leave
xchg
int3
jns
sahf
std
pop
dec
pusha
iret
xor
push
shrb
push
aad
mov
test
cmp
xchg
push
or
xor
imul
push
lods
jmp
jmp
dec
jmp
inc
out
in
movsb
sbb
in
mov
jl
movsb
sti
call
pop
cmp
roll
inc
xchg
jno
mov
addb
jae
cmpsb
adc
mov
add
fprem
lods
fiadds
iret
int
inc
push
lret
test
mov
push
jbe
sub
lock
adc
jecxz
mov
imul
adc
mov
cmp
lret
std
in
sahf
sbb
out
mov
cmp
push
subb
popf
push
fwait
ret
cmpsb
adc
mov
or
adc
adc
dec
and
sbb
cltd
ficoms
add
adc
jg
push
add
aam
lret
adc
stc
imul
push
inc
mov
inc
sub
lret
testl
gs
out
outsb
dec
or
mov
fsubrp
jge
lret
push
adc
xchg
or
rcrb
lahf
mov
pop
and
sbbb
cmc
cmp
lods
xorl
cmp
mov
adc
dec
jb
or
mov
fistpl
jbe
cwtl
mov
daa
int3
inc
dec
and
mov
jge
scas
sub
mov
dec
pop
test
out
inc
pop
stc
mov
mov
sbbl
mov
xor
inc
mov
push
mov
push
lea
cmpsb
out
test
lock
xchg
rcrl
adc
xchg
cwtl
add
fdivl
mov
je
mov
aam
hlt
and
push
adc
push
test
aam
int
out
sbb
xchg
and
jne
add
in
sbbl
movsl
mov
mov
jg
xor
xchg
mov
cs
flds
ret
or
nop
xlat
push
jns
jp
mov
scas
pop
inc
in
cmp
push
test
shlb
orl
dec
shrb
xchg
cmp
and
clc
and
and
xchg
das
aam
les
pop
stos
popf
sbb
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
add
imul
jmp
push
pusha
clc
push
call
add
or
add
mov
jp
add
jp
jecxz
mov
cltd
pushf
out
push
rorb
enter
leave
dec
xchg
into
lret
in
xlat
test
loopne
movsb
jae
rolb
out
cmp
and
addr16
xor
call
or
mov
dec
loop
xchg
mov
inc
sbb
iret
stc
mov
data16
add
es
stc
xor
flds
jmp
inc
sahf
mov
or
jbe
ljmp
out
out
mov
or
je
shlb
push
sbb
jb
aam
data16
lahf
lret
cmp
mov
ds
jno
sbb
inc
jmp
add
lret
jnp
out
addl
mov
sbb
mov
jecxz
bound
and
push
test
mov
mov
popa
loope
lcall
mov
int
fidivrs
mov
sbb
sbb
mov
out
adc
popf
popf
mov
mov
jo
jns
mov
cmp
sbb
mov
inc
pop
xlat
fnstsw
insb
xlat
ss
test
jge
mov
shlb
xor
sti
test
mov
mov
mov
stos
mov
mov
loope
sub
stc
out
and
lret
fistl
bound
inc
repz
xchg
smsw
jnp
out
mov
shlb
std
jp
cmc
push
test
sbb
out
mov
push
mulb
fs
inc
xor
and
ds
arpl
add
mov
mov
xchg
cwtl
mov
into
jns
xchg
lret
mov
xchg
sbb
add
sub
leave
lds
in
notb
push
lcall
ljmp
fdiv
ret
movsb
je
xor
aad
fistpll
sbb
loope
and
cmp
mov
movsl
stos
call
mov
leave
push
bound
mov
sub
fs
nop
inc
mov
and
and
inc
stos
add
xor
sub
cmp
push
inc
sbb
lock
aas
out
dec
mov
cmp
push
mov
dec
lock
pop
aam
insb
xchg
pop
or
or
repz
mov
cmp
imul
daa
pusha
xchg
jmp
mov
mov
mov
lods
adc
outsl
and
stc
dec
test
push
push
jae
mov
into
flds
mov
sbb
lret
aad
add
jle
xchg
cwtl
jl
fldenv
nop
fbstp
mov
orl
movsl
add
push
imul
xor
cmp
insb
cmp
push
push
shr
repnz
call
std
movsl
pop
lds
shll
pop
aad
fs
jns
inc
out
adc
clc
femms
lock
loopne
or
pop
loopne
mov
sbb
stos
and
clc
xlat
pusha
dec
and
dec
rcr
jb
push
rcrb
xchg
out
sbb
fimull
pop
rorb
xor
fidivrs
cltd
mov
mov
loope
stos
xor
std
push
es
push
sbb
out
dec
into
pop
pop
mov
fstpt
mov
jns
adc
inc
int3
jp
popa
fldl
popa
mov
insl
xchg
cmpsb
pop
aaa
enter
jo
scas
lret
or
fnsave
xchg
mov
mov
shlb
fmulp
cmp
mov
es
int3
js
pusha
or
out
cwtl
lods
add
or
and
push
gs
popa
mov
adcb
repz
sbb
xor
push
dec
fbld
hlt
int
popf
and
pop
mov
mov
mov
popl
lea
jg
or
inc
pop
jns
cmp
jle
inc
sbb
in
sub
lea
ja
outsl
dec
cld
int
cmpsb
push
adc
xor
jle
repz
pmaxsw
xchg
int3
stos
sbb
xorl
inc
adc
push
dec
jnp
jo
sbb
sti
movsl
lods
cmp
add
inc
andl
movsb
push
xlat
xchg
add
pop
inc
fwait
sbb
and
adc
popa
cmpsl
ret
loopne
pop
stos
add
lods
daa
adc
pop
fildl
into
adc
sub
xor
pusha
pop
mov
adc
fiaddl
mov
push
rcll
scas
adc
lret
andb
xchg
mov
sub
adcl
arpl
or
daa
push
lret
pusha
int
sarb
sbb
dec
xchg
mov
or
adc
scas
fcmovb
sub
sbb
push
xor
addl
jb
nop
rcrb
outsb
insb
pop
out
loope
lahf
lret
ja
aas
ret
fisttps
std
xor
cmp
sbb
cs
aaa
out
stos
sahf
mov
and
jb
popf
inc
adc
out
adc
in
mov
dec
in
push
cld
bound
test
mov
stc
jae
sbb
jno
jecxz
daa
lds
xor
clc
or
cmp
cld
mov
xchg
sub
cmpsb
rol
or
hlt
test
mov
lret
mov
inc
dec
js
pushf
hlt
sbb
ret
lret
mov
xchg
pop
mov
ss
sbb
adc
adc
sti
add
and
movsb
sub
fwait
adc
push
dec
dec
lret
cwtl
sbb
or
xchg
add
out
sub
sbb
popa
cmpsl
je
lret
sbb
xor
add
out
xchg
ljmp
fcompl
pop
mov
lds
inc
int
mov
ret
aam
xor
sarb
outsl
aaa
cmp
mov
mov
cltd
pop
add
subb
imul
call
sub
push
jle
cltd
test
adc
cltd
and
mov
mov
jle
push
inc
ljmp
jge
pop
and
jnp
and
das
push
cmpsl
dec
test
push
aaa
jge
fxch
dec
dec
xchg
lds
mov
cs
ret
and
das
nop
iret
lea
jecxz
lret
mov
jl
and
loop
roll
cmp
xor
and
mov
xchg
loope
mov
icebp
fbld
cld
mov
or
xor
lahf
push
cmp
test
pop
mov
pop
push
mov
fsubs
and
add
loop
iret
cmpsb
popa
xchg
repnz
xlat
out
push
andb
gs
bound
sub
out
xor
aam
add
imul
mov
jge
mov
pop
mov
cmp
mov
out
cmp
xor
out
das
mov
mov
mov
je
gs
fisubs
xchg
lods
dec
test
mov
js
scas
mov
in
pop
movsb
pop
fistpll
rcrb
jnp
sbb
xor
or
or
js
add
sub
pop
icebp
pop
test
adc
negl
shll
mov
in
jb
js
inc
movsb
xchg
stc
cmp
cmpl
pop
sub
jb
mov
jnp
popf
leave
test
cvtps2pd
inc
stc
fistl
and
pusha
xor
ljmp
and
loop
lret
clc
push
pop
mov
test
test
sbb
cli
dec
fwait
das
mov
lock
or
push
jecxz
mov
sbb
and
fsubrl
stc
aaa
dec
jg
aaa
fcoml
and
sbb
adc
iret
jle
mov
test
cmc
or
js
ror
jge
adcb
ja
mov
mov
mov
jno
ss
push
repz
pop
xchg
stos
leave
dec
add
fcompl
sub
cmc
mov
sub
lds
mov
jnp
int
lods
mov
jge
jg
rorb
out
mov
xchg
pop
outsl
xchg
add
imul
dec
pop
scas
sbb
sti
lock
lods
sarb
adc
mov
jmp
mov
dec
cmp
cmp
and
repz
rcr
cmp
cli
and
fildl
std
mov
std
dec
sub
cmp
dec
test
xor
test
insl
push
mov
adc
xchg
stos
cld
mov
in
lods
std
pop
jecxz
inc
mov
xchg
inc
test
fs
jecxz
xlat
mov
outsl
inc
outsb
push
popf
mov
ja
cwtl
adc
daa
jmp
or
add
fdiv
inc
sti
or
and
sbb
jmp
stos
ljmp
cmc
mov
or
iret
mov
cmp
dec
dec
jnp
adc
loope
inc
mov
jbe
daa
and
movsb
adc
dec
es
pop
pusha
cmpsl
out
iret
sbb
icebp
call
xchg
ljmp
cmp
mov
clc
sti
dec
push
or
jecxz
add
pop
lds
xchg
xchg
push
out
insl
mov
pop
dec
xchg
xor
js
pop
das
adc
adc
sub
dec
fwait
repz
sub
aad
mov
pop
or
adc
jo
and
pop
into
in
mov
data16
inc
mov
les
lds
repnz
sub
adc
movsb
push
xor
mov
cmc
mov
mov
xlat
aas
mov
lahf
cltd
mov
lds
lcall
jge
shll
lock
xchg
push
rolb
test
xchg
call
test
cmc
cmpsl
pop
and
push
xchg
jmp
dec
jg
lret
cmpsb
pop
inc
data16
outsl
loop
mov
cmc
lds
jne
sbb
int3
inc
sub
cwtl
iret
inc
je
jle
mov
mov
jle
fistps
pop
jae
xchg
dec
fadd
pop
pop
jmp
aas
roll
cmp
jmp
or
xorb
stc
xlat
gs
mov
push
xor
dec
add
mov
in
es
or
mov
jno
adc
pop
pop
loop
xchg
push
into
or
sbb
lea
pop
rorl
loope
xlat
sbb
pop
inc
push
pusha
into
aaa
aas
pop
loopne
push
xchg
add
jge
sahf
les
jg
mov
cld
dec
gs
push
sbb
adc
cld
ljmp
pusha
xchg
and
inc
mov
cwtl
lret
lea
fadds
sbb
mov
mov
xor
adc
sbb
xchg
lea
lea
shrl
fldt
sub
mov
inc
fsubl
xchg
movsb
leave
lret
push
mov
dec
dec
in
pop
pop
pop
push
and
sub
lret
movsb
int3
xchg
loopne
adc
cli
push
xchg
repnz
pop
push
imul
mov
repz
mov
fildll
movsl
adcl
scas
pop
pop
xchg
jbe
mov
jnp
hlt
mov
mov
inc
cmp
cmp
cmpsl
inc
inc
jecxz
mov
outsb
lock
into
test
dec
fimull
stc
test
lcall
or
cmc
push
jo
jle
jecxz
dec
adc
fwait
lea
mov
outsl
pop
xchg
xor
outsl
xchg
pop
fdivrs
out
std
ja
mov
cmp
les
cmp
psrlq
mov
push
or
fcomps
pop
sub
mov
test
addr16
adc
fsubrs
mov
or
arpl
sub
ja
jbe
fimull
lea
cmp
jp
sub
dec
inc
jnp
out
and
jecxz
xor
lret
dec
jne
mov
cltd
ljmp
push
aam
mov
mov
pop
rcll
ficompl
pop
adc
addr16
jge
aas
lret
push
cltd
jb
rcll
rcll
xor
pop
fsubs
jl
shlb
xchg
aas
pop
xchg
cmp
aaa
dec
push
hlt
icebp
push
cwtl
lcall
dec
ja
add
imul
repz
loop
jge
or
pusha
je
lret
cmp
stos
sbb
add
stc
mov
cmp
cmp
cmp
out
sub
jne
cmp
dec
jg
popa
outsl
sub
or
xor
daa
cmc
cmp
jb
leave
ficompl
cmpps
jg
cmpsb
pop
mov
fs
outsb
ret
pop
sub
inc
lret
in
movsl
push
jb
adc
sbb
xor
inc
mov
sub
jg
aas
fisttpl
mov
enter
xabort
in
xchg
shlb
sbb
nop
mov
jg
push
push
xor
das
enter
imul
inc
jmp
in
loopne
mov
fninit
mov
dec
mov
mov
mov
mov
jecxz
sahf
mov
outsl
je
mov
xor
cli
repnz
test
xor
cltd
mov
add
push
fwait
inc
add
hlt
pop
fwait
fs
ja
lcall
jp
mov
imul
test
mov
xchg
clc
adc
pop
cmp
or
or
fistpl
loop
outsb
pop
mov
xor
shrb
pusha
into
scas
pop
dec
in
xchg
xchg
incb
fidivrl
mov
insl
and
decl
add
addr16
jge
xor
jno
adc
mov
cmc
xor
dec
int
clc
das
xchg
cmpsb
fidivrs
fidivrs
sarb
sub
xchg
cmc
jge
sub
sub
je
xor
mov
push
rorl
lds
xchg
cmp
lahf
jns
rorl
insb
repnz
jle
cld
fsubs
inc
lods
ljmp
fsts
cmpsl
popf
push
dec
nop
bound
mov
sbb
dec
cmpl
and
rorl
xlat
cmovle
adc
imul
mov
std
and
jmp
or
and
push
pop
lcall
aaa
sub
sbb
dec
roll
dec
dec
add
mov
stos
push
cmc
mov
fstpt
popa
sub
dec
inc
aaa
push
push
mov
fstpt
push
test
rorl
sub
or
cmp
and
xorl
imul
jle
mov
cmp
fcoml
in
popa
xchg
dec
add
hlt
jmp
jb
call
and
cmp
pushf
xor
cs
jbe
jle
arpl
ret
nop
out
sbb
dec
fldt
decl
add
adc
mov
fildll
lahf
pop
jns
pop
popf
fwait
in
or
inc
xor
pop
andl
test
jmp
adc
addr16
icebp
sub
gs
gs
data16
and
mov
subb
popfw
cmp
push
stos
or
pop
gs
shrl
mov
les
daa
ljmp
test
ss
mov
aam
ja
or
mov
cmp
and
mov
mov
test
jecxz
push
lea
cmp
shl
fcompl
jle
dec
mov
pop
sbb
xor
mov
rcll
popf
xor
cld
pop
ss
pop
ss
scas
stc
pop
or
or
mov
loope
mov
pop
int
pop
xlat
roll
jge
mov
je
leave
xor
loope
inc
rcpps
xchg
fistl
stos
push
mov
inc
int3
jle
or
repnz
push
pushl
or
pop
or
or
mov
lcall
xor
inc
ljmp
stos
sub
fldt
arpl
add
jp
cltd
clc
and
add
decb
mov
dec
call
dec
mov
fs
into
sti
mov
mov
ds
dec
mov
sub
pop
pusha
push
sarl
cmp
inc
add
add
xchg
shrb
jle
lods
adc
insl
push
sub
fcomps
movsw
data16
insb
dec
loopne
sbb
aas
or
xchg
shrb
aad
pop
sbb
pop
nop
push
mov
jecxz
ss
orl
inc
sti
mov
mov
mov
mov
add
stos
push
add
add
hlt
repnz
dec
iret
fmulp
sbb
je
push
jmp
cs
xchg
mov
pop
test
rorb
daa
push
int
inc
or
notb
inc
lcall
jle
mov
call
jb
jae
hlt
sub
shl
dec
cwtl
inc
lock
mov
out
aad
leave
pop
in
pop
enter
sar
ret
mov
lret
ljmp
xor
jo
jns
mov
lock
shll
sbb
sub
stc
cwtl
arpl
add
dec
lock
mov
movsb
inc
pop
leave
clc
sbbl
push
mov
loop
add
lods
scas
mov
cs
decb
and
sbb
cld
adc
or
and
sub
mov
gs
and
xor
lret
shr
mov
mov
cmp
enter
bound
jg
sub
mov
mov
xchg
cmp
js
lock
cmp
mov
inc
sar
in
pushf
call
xor
das
add
sub
cmp
aam
mov
xor
or
inc
inc
sub
cmpsb
data16
xchg
and
imul
rolb
inc
mov
stos
inc
or
cmpsb
insl
das
cmpsb
inc
xlat
cmc
jb
inc
pushf
pop
mov
movsb
nop
or
movsl
or
mov
mov
or
cwtl
adc
out
push
pop
mov
push
fcomps
in
stos
jne
aam
negl
jl
imul
push
push
xchg
mov
fwait
mov
lods
test
cmp
cmp
add
jle
shll
inc
repnz
roll
xchg
push
push
add
int
icebp
inc
dec
movsb
add
mov
xchg
mov
xlat
emms
int3
sbb
adc
push
and
cmpl
xor
or
lret
push
or
cli
mov
mov
xchg
xchg
movsl
mov
negl
mov
mov
testl
cmp
xor
pop
push
repnz
cmpsb
pop
cmp
dec
fs
out
cmp
and
sub
fwait
jl
jl
and
ss
sbb
push
adcl
testl
mov
lods
loop
cmp
out
xchg
inc
pusha
push
jae
cmc
or
lret
xlat
dec
mov
inc
fistpl
pop
nop
fisttpll
movsb
pop
adc
leave
leave
and
sbb
call
movsb
cmp
push
dec
sub
aaa
loopne
add
mov
scas
or
mov
sahf
lret
xchg
and
and
pop
adcl
stc
sbb
jecxz
mov
scas
mov
test
daa
hlt
cmp
xor
in
and
mov
add
test
es
mov
mov
pop
test
mov
fnsave
mov
mov
shrb
lcall
inc
pop
xorl
fsubrs
sub
push
xchg
push
callw
or
ret
or
hlt
inc
mov
mov
mov
mov
rep
and
and
cmc
adc
std
inc
mov
in
clc
jecxz
inc
cmp
jmp
outsb
loop
rolb
les
das
imul
orl
adc
pop
loop
aaa
inc
and
call
imul
addr16
gs
cmp
iret
dec
push
inc
icebp
les
cmp
dec
cmc
bound
ret
xchg
insl
push
pop
or
fcoms
jbe
shl
mov
lds
xor
shld
lods
dec
xorb
push
push
pop
dec
push
xor
add
jnp
sbb
out
pop
inc
or
dec
sub
pop
mov
pop
mov
xchg
shl
xlat
test
cmp
out
inc
pop
int
inc
sbb
or
stos
or
in
sub
mov
dec
fimuls
add
jo
jae
pop
jge
cmpsl
dec
out
cmp
cmp
sub
testb
jo
xchg
js
mov
nop
punpckhdq
mov
push
mov
js
xorl
sbb
inc
cld
pop
and
loope
and
xchg
mov
and
sbb
mov
cwtl
mov
pusha
xchg
cmp
sti
push
mov
mov
sbb
xchg
lea
stos
in
test
or
push
mov
lock
cmpsl
imul
and
inc
mov
pop
push
or
outsl
cmp
repz
mov
xlat
pop
adc
mov
or
sub
lahf
jle
ljmp
and
push
and
rcl
jmp
mov
pop
mov
popf
cmpsl
pop
fnstenv
adc
xchg
mov
fwait
into
imul
mov
imul
sub
push
sub
in
les
imul
movsl
in
addr16
sub
in
cmpsb
add
lret
xor
push
xor
xchg
jg
pop
loopne
dec
mov
fisubl
fidivl
popl
push
or
add
and
fs
add
xchg
cmp
pop
in
xchg
or
sahf
push
add
mov
lods
jg
negl
int3
mov
outsl
xchg
dec
inc
adc
push
sub
mov
adc
in
mov
popa
xchg
int3
and
adc
lea
jmp
shll
sub
fistpll
lret
aas
xor
dec
pop
sbb
das
je
dec
adcb
mov
cli
dec
jl
add
in
push
cmp
aaa
loopne
or
mov
sbb
jbe
gs
push
mov
or
ss
mov
xchg
mov
clc
out
pop
lea
shll
pop
jecxz
or
insl
fldt
push
xchg
enter
in
inc
adc
mov
jb
shl
jo
xchg
cmp
cvtps2pd
hlt
lret
lock
or
mov
or
sub
adc
sbb
cwtl
mov
xchg
xchg
sbb
mov
xchg
arpl
aad
add
jbe
mov
lahf
xchg
test
orb
xorl
mov
mov
lock
testb
repnz
pop
push
paddusw
cmpsl
inc
xorl
dec
or
shll
out
add
jmp
push
dec
dec
fisttpl
cmp
hlt
ds
dec
mov
mov
out
add
es
pop
mov
inc
and
add
mov
jne
fs
xchg
std
cld
adc
imul
add
xchg
and
jns
insl
cmp
adc
jl
call
add
stos
and
xor
xor
shrl
sbb
or
or
idiv
add
sub
test
negb
jge
in
jmp
jle
pop
gs
xlat
inc
out
or
movsl
mov
adc
ret
dec
stc
xchg
test
das
push
loopne
xor
add
bound
or
inc
inc
mov
sbb
loope
cmp
pop
push
mov
jmp
mov
lods
arpl
dec
ds
js
std
jnp
mov
mov
addr16
dec
or
sbb
int3
ja,pt
stos
inc
cs
push
inc
shll
pop
xor
xchg
jg
out
stc
idivl
shll
shll
mov
jns
cmc
pop
inc
adc
push
fiadds
jno
xchg
jle
ficomps
inc
push
mov
mov
jns
pop
jl
xor
cmpsb
lahf
vpunpckhdq
xchg
xrelease
and
in
mov
sbbl
cs
push
iret
fiaddl
cltd
push
outsl
enter
xor
xchg
jp
aad
add
sbb
outsl
cmc
in
daa
stos
out
or
sbb
or
sub
orb
loop
push
pop
idivb
leave
rol
mov
push
jnp
jle
jmp
cmp
sbb
push
adc
das
ficomps
movsb
cmp
pop
sub
xchg
js
xchg
mov
loop
movsb
sub
arpl
jg
dec
sbb
mov
dec
daa
fs
data16
imul
sbb
dec
mov
pop
aam
popf
and
adcl
xchg
scas
outsb
push
popf
mov
je
pop
jmp
and
jns
imul
movsl
enter
mov
lcall
lahf
and
fimuls
adcl
pop
mov
push
out
inc
mov
and
jo
pop
faddl
mov
popf
dec
sub
adc
inc
hlt
add
xor
pop
jno
and
enter
lods
pop
sub
std
leave
and
inc
addr16
pop
push
xor
dec
mov
pop
jno
jmp
lods
adc
jle
xor
sub
orl
xchg
mov
addl
mov
lods
push
ja
adc
lcall
mov
pop
dec
pop
jae
lods
mov
js
push
enter
pop
arpl
repz
jmp
mov
outsl
and
mov
mov
jecxz
jnp
jns
mov
daa
std
rclb
stc
or
cmp
cwtl
mov
sub
sti
jecxz
mov
inc
jbe
aad
add
inc
fsubs
mov
adc
cmpsb
push
or
jp
mov
push
sub
scas
push
ljmp
push
mov
dec
popl
nop
sub
dec
pop
jmp
add
stos
jb
adc
mov
push
push
pop
adc
cmpsb
push
leave
mov
lahf
pop
jecxz
mov
mov
ret
xor
rorb
cmp
xor
jle
mov
adc
or
int3
xchg
iret
pop
jge
out
outsl
ret
lock
outsb
int3
mov
mov
add
in
popf
dec
mov
mov
insb
iret
leave
mov
inc
lods
dec
rorb
xor
jmp
push
lcall
cmp
stos
les
je
inc
add
adc
mov
push
jb
sahf
aam
jb
cmp
lcall
mov
inc
jne
cs
or
cmp
mov
jno
int
push
imul
mov
popf
aam
ret
dec
push
ret
jnp
mov
lret
dec
in
mov
pop
push
icebp
sbb
psadbw
hlt
aaa
xchg
pop
sub
lods
and
mov
cwtl
or
pop
mov
adc
mov
enter
mov
inc
pushf
data16
rcl
jo
jo
repz
in
push
insb
mov
dec
push
pop
mov
cmp
push
sub
rorl
daa
and
jb
cld
shll
stos
xchg
icebp
ret
cltd
adc
mov
stos
mov
adc
jmp
add
dec
pop
int3
mov
negb
or
push
and
fists
push
cmpsb
aas
mov
inc
pop
loopne
je
mov
fcoml
into
add
dec
sbb
data16
cmc
fsubrl
aas
into
push
fwait
sti
ja
lods
rolb
rcr
in
scas
pushf
fmul
js
ljmp
imulb
dec
lock
nop
aas
sbb
mov
int3
jbe
ret
les
addr16
lock
arpl
fildll
cmc
data16
cli
call
lods
stos
shlb
test
and
adc
fadds
jb
sub
adc
adc
ljmp
test
dec
pop
adc
shll
out
add
inc
xchg
int3
out
ja
out
aam
stos
push
mov
mov
mov
mov
mov
push
dec
pop
jbe
mov
jo
dec
fildl
imul
es
fidivrs
sub
xchg
fsubrp
jmp
and
jmp
ja
in
mov
shlb
push
cwtl
sub
cmp
into
add
das
loopne
idivl
xorl
xor
lods
bound
adc
iret
inc
cmc
inc
fsubrl
sbb
mov
shll
leave
sbb
pop
lahf
xchg
push
out
hlt
insb
test
cmp
xlat
lcall
add
add
leave
xor
aam
dec
xchg
push
ficompl
pop
test
jne
filds
jne
outsb
jge
lods
mov
inc
cs
nop
shrl
inc
sbb
adc
sarl
pop
or
and
inc
lods
mov
inc
xchg
and
arpl
cld
jp
adc
mov
icebp
mov
aam
jo
in
sub
or
mov
pop
or
int
xchg
push
lret
movsb
addl
clc
xor
pop
insl
sub
push
call
out
and
push
or
mov
jl
in
arpl
fmuls
jbe
popa
in
mov
aas
add
xchg
adc
aam
xor
pop
jle
adc
mov
imul
jmp
les
cmp
movsb
inc
adc
lret
cmc
xchg
hlt
sbb
jb
stos
xchg
or
xor
inc
adc
and
pop
add
lock
movsb
fnstsw
dec
aaa
add
mov
sub
ljmp
adc
sub
sub
cmp
cmpsl
shl
xchg
lock
add
rcrl
cltd
insb
shll
jg
inc
and
rcrl
cmpsl
cmc
in
cmp
mov
add
mov
loop
rol
ds
cmpb
sahf
jl
popf
popf
push
mov
pop
xor
lock
ljmp
push
inc
loop
ficompl
jbe
flds
adc
jp
fcmovnu
subl
push
aaa
in
jns
ljmp
ds
inc
add
std
rolb
pop
jg
int3
lock
jmp
mov
or
loopne
xor
shl
loope
and
dec
xor
mov
out
cmc
xor
sub
arpl
negb
push
jbe
add
stos
dec
sub
jg
cmp
data16
sub
dec
les
inc
lret
xlat
movsl
je
scas
lret
pop
dec
add
mov
xchg
adc
in
sub
pop
cmpsl
lock
xor
jo
in
and
sub
fucomip
cmp
pop
arpl
cmpsl
les
imul
lods
fimuls
lds
int3
mov
or
aaa
add
dec
and
test
dec
fstps
mov
sub
sbb
sub
xchg
ljmp
enter
xlat
out
xor
dec
addr16
sbb
cmp
ljmp
pushf
mov
and
xchg
inc
xor
sbb
jne
xchg
push
cmp
call
outsl
sub
aaa
sub
call
jmp
inc
add
fdivr
sub
ljmp
mov
in
or
insl
gs
repnz
pusha
adc
mov
pop
lods
xchg
cwtl
sar
movsl
cmc
sub
stos
jns
pmaxub
sahf
pop
or
jmp
or
jno
movsl
popf
rcll
fists
pushf
add
add
jae
lahf
addr16
sbb
and
es
daa
ret
lods
dec
stc
test
lret
cli
sbb
mov
loop
jg
ds
jg
lcall
and
adc
std
aas
stos
hlt
mov
add
ret
stos
aas
pop
sub
mov
mov
jae
test
in
xlat
mov
fstpl
or
mov
cwtl
lods
shll
jns
or
mov
sti
xchg
xor
xchg
scas
pop
fwait
roll
scas
loope
mov
ja
adc
pop
insb
xchg
or
mov
mov
mov
add
or
mov
mov
mov
add
xor
mov
mov
mov
add
and
mov
mov
mov
lea
mov
mov
mov
sub
add
mov
mov
xor
add
jne
mov
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
add
imul
mov
mov
mov
add
or
mov
mov
mov
add
xor
mov
mov
mov
add
and
mov
mov
mov
lea
mov
mov
mov
sub
add
mov
mov
xor
add
jne
mov
mov
jmp
nop
testb
add
out
cmp
lret
pop
push
jns
add
jp
nop
push
inc
add
outsl
je
pop
mul
test
imul
push
mov
frstor
jmp
dec
repz
push
loop
dec
fstpl
aaa
fstps
pop
hlt
int3
xor
inc
and
mov
das
or
jo
or
mov
lahf
sti
insl
cmp
adc
push
ret
clc
xor
outsb
stc
cld
enter
fstl
push
pusha
ds
aad
pop
jmp
push
inc
push
mov
jne
insb
pushl
mov
lds
std
jno
pop
cli
imul
mov
inc
sbb
testl
and
pop
movsl
mov
and
fwait
mov
mov
and
iret
scas
clc
mov
add
adc
popf
inc
add
cld
jns
jne
xchg
mov
or
loop
jns
mov
ret
or
cmp
jno
subb
das
movsb
or
scas
lret
data16
xchg
sbb
loope
sub
pop
insb
push
adc
rolb
mov
pop
cld
inc
mov
cmpsb
sti
inc
fcoms
pop
mov
testb
rclb
rcl
call
test
ljmp
ret
into
or
ljmp
jns
mov
sub
out
in
clc
pop
test
xchg
test
jno
pop
cmp
cmp
stos
cmpsl
out
dec
cli
fbld
in
popa
push
cltd
cmp
or
xchg
das
inc
insb
mov
jmp
inc
or
lds
cmp
lcall
and
sbb
test
add
rclb
subl
lcall
mov
add
mov
cmp
or
mov
stos
inc
enter
dec
pop
fisubs
jl
fldl
into
push
sbb
in
sub
mov
pop
adc
es
hlt
je
sub
ret
inc
jno
jo
andl
cmp
bnd
cld
sub
xadd
fwait
add
pop
add
xor
es
cli
cli
push
lcall
lret
dec
int3
sbb
add
mov
imul
sub
clc
lret
ljmp
addr16
lds
pop
fiaddl
inc
mov
xchg
aaa
dec
or
mov
cmp
es
dec
insl
mov
and
outsl
stc
pop
jno
stos
out
lcall
mov
in
jo
jp
repz
xor
repnz
push
pusha
mov
push
cmpsb
pop
js
imul
addr16
adc
aaa
sbb
lock
sahf
pop
add
pop
mov
nop
movsl
push
pop
daa
lea
jbe
push
sets
push
test
stos
mov
jb
xorl
jp
inc
mov
mov
shrl
xor
mov
jg
imul
and
mov
xor
fbstp
lcall
inc
pop
cmc
je
xchg
outsl
cltd
adc
out
xchg
outsb
mov
imul
jne
inc
aas
loope
je
sub
dec
xor
mov
pop
aad
test
out
clc
push
mov
arpl
test
in
sub
loopne
cwtl
adcl
scas
out
pop
push
dec
fsubrl
xchg
cmp
gs
jge
push
push
push
push
mov
and
mov
inc
mov
push
sbb
jl
cmp
add
addb
mov
xor
push
jns
push
jle
jb
in
pop
lret
cltd
mov
xchg
call
aad
or
mov
pop
or
mov
les
ret
mov
jno
jmp
test
sub
std
adc
vsubsd
test
loop
pushf
dec
bound
aam
in
jle
pop
push
lds
pop
push
dec
sub
rolb
out
enter
add
int3
mov
push
insl
xorl
sbb
sub
mov
mov
fcoml
pop
and
jnp
sub
call
cmp
push
xchg
xor
xchg
sbb
cs
push
jle
inc
jge
mov
les
pop
adc
lock
pop
mov
lcall
or
and
movb
xchg
fldl
pop
iret
cmpsl
dec
xchg
cmp
test
lock
sbb
pop
sub
xchg
out
cwtl
pop
sub
out
mov
sbbb
dec
fisubrs
insb
xor
xor
fsubrs
jmp
dec
dec
add
push
call
sbb
sbb
jbe
mov
jmp
test
adc
mov
int
imul
les
bound
je
and
cmp
pushl
test
mov
adc
imul
mov
push
fcoms
lret
pop
jnp
cltd
scas
push
inc
mov
xchg
cltd
adc
scas
lahf
fldl
call
mov
add
and
sbb
sbb
push
or
cmp
xchg
jo
dec
arpl
imul
fsubl
pop
dec
mov
pop
ljmp
xor
or
push
inc
mov
sub
mov
inc
aad
add
push
add
rol
lock
cmp
and
and
cmp
and
jns
or
add
in
push
push
mov
adc
fimuls
jmp
or
push
inc
shr
or
cwtl
pop
cmpsb
jl
aam
fxch
sub
push
test
dec
imul
cmp
pop
and
or
outsb
xchg
cmp
outsl
or
aas
push
shlb
lcall
or
jne
test
or
repnz
icebp
push
mov
sbb
inc
into
dec
dec
sub
xor
gs
mov
sub
mov
mov
das
stos
mov
push
sub
pop
xchg
mov
or
xchg
mov
lret
sbb
push
sbb
inc
call
xor
pusha
xchg
push
mov
lcall
icebp
cmp
jns
and
fdivl
outsl
dec
imul
cmp
xchg
enter
inc
aaa
icebp
gs
cmpsb
mov
je
cld
shl
cmc
pop
sbb
mov
fsubrl
aaa
add
xchg
mov
push
jp
std
std
xor
adc
jecxz
in
test
enter
xor
ss
sbb
xor
inc
imul
mov
movsb
rclb
mov
push
jge
mov
imul
fsubs
jl
inc
icebp
fstpt
mov
aas
xchg
pusha
aaa
mov
imulb
clc
idiv
xchg
xchg
jo
jp
stos
fdivs
out
test
sbb
mov
xor
daa
lret
push
mov
add
test
cmp
nop
lock
out
rol
insb
xor
aas
movsl
inc
popf
fcompl
shufps
or
jl
mov
xor
cmpsl
jmp
lahf
mov
and
pop
dec
insl
arpl
sub
xor
test
int3
loopne
and
xor
aas
fidivrl
inc
push
ret
add
xor
or
xor
addb
mov
cmp
aas
push
jp
sub
add
gs
mov
ret
pop
jmp
add
push
mov
aad
mov
mov
leave
aaa
and
scas
mov
ret
fdivs
test
sub
test
xor
cmpsb
lock
daa
jnp
cmp
imul
inc
shl
xchg
sbb
test
inc
sub
pop
cmp
cmpsl
loop
mov
dec
imulb
aaa
cwtl
xchg
cld
jp
cmpsl
repnz
xchg
push
lcall
imul
dec
stc
sub
pop
push
jecxz
leave
xchg
in
out
cmp
ljmp
sarb
es
or
push
cltd
fucomp
jae
jg
dec
in
or
push
lds
inc
xchg
lods
sub
test
out
pop
and
fidivs
scas
and
or
aad
jp
add
mov
sub
orb
leave
movhlps
jae
outsb
shrb
xchg
mov
mov
lret
pop
lar
dec
scas
dec
daa
or
sub
les
test
sbb
dec
xlat
outsb
insl
xor
mov
es
addl
xor
leave
xsavec
ret
inc
mul
sbb
orl
int3
xchg
lock
sbb
std
ss
stos
xchg
hlt
jae
xor
cmpsl
jo
jne
adc
or
or
data16
cmp
je
adc
adcl
dec
pcmpeqb
push
pop
adc
mov
cmc
sbb
imul
test
sbb
xchg
mov
jge
or
addl
jge
clc
mov
fcmovb
loopne
mov
mov
je
test
add
lcall
xor
sahf
lahf
clc
xlat
xchg
and
lret
cmp
int3
out
jne
fsubrp
les
pop
dec
sbb
mov
rol
xlat
mov
lahf
dec
push
xchg
inc
ret
mov
stos
mov
dec
cmp
pop
into
in
inc
push
test
rclb
push
jns
cmp
fwait
lahf
faddl
icebp
mov
inc
inc
fcoml
push
dec
outsb
inc
mov
gs
mov
fists
ljmp
xlat
scas
loopne
pop
xor
push
sub
in
xchg
gs
mov
cmp
inc
adc
inc
adc
inc
loope
adc
pop
cltd
jbe
inc
mov
cmpsl
hlt
pop
rcl
mov
je
cmp
xchg
sbb
inc
add
xchg
in
aaa
xchg
push
lds
xor
call
cmp
fimull
test
and
cmp
mov
loop
aaa
movsb
push
mov
push
shlb
mov
jno
adc
dec
sti
daa
jp
lock
lods
cmpsl
adc
shrb
inc
incl
enter
mov
push
inc
mov
iret
out
arpl
push
cltd
pushf
lahf
jle
addr16
pushl
mov
push
lock
test
cmc
aas
mov
jecxz
xor
mov
ljmp
adc
insb
std
add
nop
pop
bound
mov
push
fsubrl
and
fsubrs
fsubp
shrd
sub
pop
or
rolb
stos
mov
mov
outsl
dec
ljmp
lock
out
and
dec
dec
dec
xor
pop
mov
jae
fsubrl
adc
ret
jbe
pop
or
imul
pusha
in
mov
push
insb
adc
loop
dec
mov
pop
lods
push
pop
push
mov
shrb
lock
aad
clc
xchg
dec
lods
movsl
cmpsb
int3
and
xchg
jae
pop
fists
jbe
and
flds
loopne
mov
ret
adc
add
lahf
cmpsl
jl
cwtl
int3
sub
cs
loop
je
outsb
sti
push
mov
jl
das
adc
or
popa
adc
sbb
jg
mov
dec
xchg
mov
jae,pn
mov
sarl
push
shrb
lods
push
mov
ficoms
mov
push
aaa
shlb
lcall
insl
push
repnz
add
push
mov
cltd
sbbl
sbb
data16
enter
or
enter
ljmp
cmp
rcrl
repnz
push
dec
popf
pop
adc
lods
xchg
in
js
pop
jae
pusha
sarl
cs
test
pop
sbb
mov
aas
ljmp
and
sub
jne
scas
int
mov
loop
pop
dec
and
jg
push
lea
ds
es
xchg
int
and
push
loop
jo
jbe
loope
add
bound
subb
aad
outsb
mov
addr16
insb
push
dec
xchg
mov
adc
ja
add
fists
inc
popa
pop
cmpsl
xor
xchg
in
lret
les
pop
and
mov
and
sbb
push
imul
cli
mov
repz
jb
notl
mov
inc
xlat
adcl
and
cmpsb
and
insb
cmp
push
jae
mov
fistl
out
xor
dec
data16
cmc
shrb
xchg
stos
or
jae
sbb
mov
mov
mov
and
out
inc
jmp
push
jl
test
xchg
and
and
or
sub
jb
push
imulb
cmp
push
int3
mov
push
cmp
sti
pop
mov
pop
movsb
test
jb
fldl2e
dec
inc
std
fists
mov
clc
es
pop
push
mov
out
lds
nop
add
cmpsl
dec
fucomip
popa
dec
insb
and
sub
push
mov
cltd
cmpl
data16
adc
ds
jnp
xchg
ja
data16
leave
cmp
ljmp
adc
and
xor
adcl
es
shrl
dec
mov
jo
mov
push
imul
stc
pop
sbb
ret
push
mov
push
xchg
fwait
jmp
sbb
fldenv
xor
negb
fists
and
leave
test
lret
mov
fs
movsb
mov
xor
add
cltd
daa
lock
jnp
xlat
jno
js,pn
aad
pop
lods
mov
or
dec
jno
sub
adc
sbb
repnz
jecxz
xor
bound
pop
pushl
lret
or
fistpll
lret
and
fmull
jmp
icebp
in
mov
in
mov
pop
jno
aas
pop
pop
ds
mov
das
lods
mov
in
mov
cmpsb
jnp
push
idivb
stc
sahf
stos
or
push
dec
loope
or
mov
xchg
xor
push
enter
cld
sbb
push
adc
inc
scas
and
xlat
fisubs
sbb
imul
push
outsl
push
mov
dec
mov
pop
ds
rorb
mov
mov
hlt
push
cmp
jmp
mov
mov
fsubl
sahf
jb
test
mov
mov
cmp
inc
enter
insb
orb
fnsave
stc
pop
sti
xchg
push
into
es
imul
je
push
shll
and
mov
leave
sbb
jge
lock
loope
test
mov
ds
insl
sahf
dec
pop
lret
mov
rcl
sbb
add
dec
dec
iret
sub
add
insl
lret
xor
int3
cmp
sbb
and
adc
unpcklps
cmp
add
jmp
adc
outsb
fwait
stc
call
add
stos
push
insl
insl
inc
ficomps
dec
sahf
stos
mov
nop
sbb
dec
scas
bound
xor
inc
cmove
and
sub
mov
inc
adc
mov
jg
push
mov
loope
lods
iret
lret
push
jo
in
mov
jge
sbb
stc
mov
fcom
test
shl
repz
repnz
xchg
push
or
rclb
pop
fidivs
les
fimull
inc
sti
cmpsl
push
stc
cmp
clc
mov
jno
pop
dec
fisubl
fadds
mov
int
sti
es
mov
mov
ficompl
test
mov
xor
mov
stos
shr
xor
jmp
mov
clc
cmp
add
test
data16
push
rclb
and
mov
adc
ficoml
push
ffree
or
nop
sub
jae
sbb
xchg
cmp
imul
add
jnp
stos
out
mov
stos
pop
outsb
and
push
jmp
inc
xor
les
push
mov
sahf
sahf
fmuls
jg
jmp
test
cmp
pop
popa
jp
cmc
nop
xchg
or
adc
mov
int3
push
or
mov
pop
jmp
mov
int3
or
push
pop
mov
jp
addb
xor
notb
sbb
and
xor
inc
cwtl
jmp
pusha
add
imul
mov
or
daa
cltd
push
xchg
loopne
sti
andl
hlt
lea
dec
mov
addr16
cmp
ja
loop
mov
push
cmp
in
ret
ret
inc
fwait
jo
or
inc
jbe
ss
xchg
xchg
cs
mov
add
je
push
cmp
stc
popa
adcb
mov
nop
in
mulb
aas
pusha
push
mov
push
fucomi
in
and
fisttpll
iret
rolb
xor
xchg
int
fistl
and
int
pop
es
push
fmuls
mov
xor
jae
cmp
xor
lods
fsubp
popa
cmc
cmc
sub
mov
cmp
jg
daa
in
loope
arpl
jno
mov
inc
into
lret
or
jno
ds
jno
xor
test
jle
pop
mov
sbb
out
gs
ds
xchg
or
aaa
popf
mov
jb
mov
cmc
fs
sub
adc
jge
insl
push
add
xchg
or
and
lds
push
clc
xchg
mov
lcall
and
mov
insb
insl
daa
adc
xor
div
divb
cmp
pop
or
or
scas
fwait
mov
ds
mov
test
movsb
jle
lods
jnp
cmc
fisubrs
fistl
es
pop
stc
rcr
lock
je
push
ljmp
lret
sbb
es
xchg
add
xchg
and
pop
pop
mov
and
mov
jg
pop
mov
insl
and
inc
inc
sti
cmp
xchg
mov
fwait
push
adc
in
add
cmp
pushf
addr16
xlat
mov
rcll
lea
inc
adc
and
adc
in
mov
pop
leave
cmp
sub
addr16
sub
cwtl
out
lds
ret
jp
sub
xchg
cmc
dec
nop
inc
xor
rolb
sub
lods
mov
sub
mov
outsb
sbb
popf
dec
fldcw
jae
popa
lea
add
mov
push
rcrb
mov
or
push
imul
lahf
lahf
sub
dec
repnz
push
clc
decl
fcoml
push
jns
lret
imul
fimuls
mov
cmp
loope
insb
test
rolb
sub
stos
repnz
pop
outsb
into
insb
call
iret
jbe
movsl
adc
ret
cmp
add
mov
jmp
notl
pusha
xchg
xchg
dec
repz
or
push
pop
add
adc
and
scas
int3
dec
pusha
pop
xor
leave
ret
dec
das
subb
test
mov
pop
mov
cmpsl
lea
push
ret
dec
add
mov
int
pop
pushf
xchg
mov
sbb
mov
xor
xchg
xorl
mov
jecxz
jns
or
repnz
jle
in
es
jns
in
jnp
dec
mov
mov
addl
imul
fldl
lods
xor
push
into
call
fildl
roll
inc
mov
xor
out
andl
dec
sub
jle
mov
ret
push
jp
cmp
mov
popa
cmp
pop
bound
xlat
shll
mov
push
cmp
mov
stos
xor
ljmp
imul
or
pmulhuw
ret
outsl
cmp
push
gs
jg
inc
pop
inc
call
pop
push
addr16
mov
dec
lds
adc
out
or
lock
xor
xor
lock
mov
pusha
mov
in
push
sub
xchg
xchg
cld
push
xor
imul
pop
sbb
sbb
dec
ss
jmp
dec
jo
or
sahf
jae
inc
mov
jb
jge
fstps
roll
repnz
pop
xchg
pop
leave
loop
lods
jl
jbe
sti
stc
jns
test
jmp
nop
fwait
movsb
loope
xor
cltd
movb
aas
adc
stos
add
pop
cmp
cmp
ja
fwait
xor
mov
pushf
pop
loope
testl
cwtl
in
lds
test
in
test
mov
pop
test
push
aad
clc
idiv
aad
xchg
jns
jnp
mov
popf
divb
repz
push
ret
repz
lea
push
test
sbb
popf
loop
mov
cwtl
adc
ret
pusha
into
add
cmp
add
rolb
jl
dec
test
shrb
jmp
inc
mov
pop
pop
dec
pop
jns
mov
inc
cld
mov
out
fdivrs
push
adc
sti
je
mov
and
sahf
mov
daa
test
add
jne
imull
mov
cmp
sbb
into
xchg
jne
aam
roll
idiv
xor
mov
daa
add
push
in
sub
testl
scas
bound
les
pop
popl
xchg
ficoml
loop
mov
icebp
mov
andl
and
enter
ret
pop
mov
mov
test
mov
test
repnz
add
lret
pop
subps
add
pop
pop
outsl
sub
aam
rolb
xchg
mov
inc
mov
dec
jns
mov
jo
aaa
pop
test
jne
jge
jecxz
cli
dec
push
enter
xchg
js
fimull
arpl
dec
xorb
mov
push
push
dec
pop
xchg
repz
jae
add
aas
fs
push
out
inc
inc
mov
dec
mov
mov
inc
popa
mov
cmp
jl
hlt
mov
xchg
xchg
jle
dec
add
inc
add
dec
xchg
jge
lcall
cmp
pop
cmpsb
or
dec
sub
loopne
pushl
sub
rorb
xchg
in
cwtl
jmp
leave
or
xor
xchg
cmpsb
les
cmp
imul
ljmp
cmp
aas
mov
jecxz,pt
cmp
fiadds
mov
push
sarl
pop
ljmp
jo
mov
push
pop
adc
sbb
js
or
clc
sahf
jno
cmovs
mov
fs
xor
notb
mov
xchg
data16
sbb
sbbb
iret
loop
xchg
insb
or
test
lds
imul
clc
sbb
bound
mov
in
cmp
and
jg
gs
mov
sub
arpl
jmp
push
dec
or
jecxz
sbb
or
and
out
mov
xchg
lea
pavgb
aam
icebp
rclb
addb
mov
or
repnz
aam
dec
mov
inc
ljmp
pusha
out
or
aam
insl
lcall
cmc
mov
push
mov
loope
mov
data16
mov
cmp
cmovge
pop
lret
in
xor
call
sbbb
daa
gs
pop
leave
mov
orb
nop
or
mov
popf
in
fistpll
ja
cmpsb
push
pop
loope
popa
and
jp
nop
mov
in
mov
inc
mov
mov
nop
cmp
inc
jecxz
push
loope
inc
inc
or
jmp
rcrb
mov
cwtl
int3
mov
stos
push
nop
lock
lea
sbb
fadds
inc
adcb
cmpsl
adc
sbb
dec
push
arpl
inc
sub
pop
scas
popf
unpckhps
dec
sbb
sbb
xlat
lret
fucomi
push
and
mov
mov
mov
xchg
imul
sub
fidivrl
aaa
mov
adc
jae
mov
stos
daa
pop
je
mov
add
stos
mov
or
ret
xchg
cwtl
push
xlat
xchg
sbb
and
in
popf
hlt
xchg
inc
sub
repz
imul
mov
popa
cltd
cmp
int
cltd
push
inc
ret
add
cltd
mov
add
lock
cs
dec
std
movsb
sahf
imul
into
cmp
dec
jbe
aas
jbe
test
cmc
cmpsl
cmp
shrl
push
les
call
test
or
add
push
icebp
pop
mov
mov
pusha
mov
out
mov
call
data16
int
roll
loop
lods
scas
cli
push
mov
in
mov
leave
jecxz
aaa
mov
ret
jl
je
leave
inc
pusha
jbe
xchg
sub
cmpsl
fcompl
dec
hlt
repz
aas
mov
scas
push
sub
ljmp
out
and
sarl
aam
aad
xor
sub
mov
icebp
cltd
jl
aam
stc
jno
shll
ficomps
dec
adc
sti
mov
push
int
jmp
sbb
add
adc
andl
pop
movsb
mov
lods
dec
inc
stc
stos
movl
pop
mov
sti
fisttpll
push
addl
je
lret
push
and
mov
jmp
divl
aam
out
mov
popf
inc
pop
adc
or
aam
and
rol
sar
adc
mov
push
std
mov
pop
repz
inc
gs
mov
scas
aas
xchg
push
stos
insb
dec
ret
sti
adc
fdivs
aas
ret
mov
pusha
xor
xchg
push
stos
jne
out
jl
cltd
xchg
jp
dec
cmpsl
sbb
xchg
in
in
data16
sub
add
sahf
jg
add
jne,pn
insb
inc
inc
inc
repnz
push
out
pop
rorl
push
xor
lods
sbb
sub
js
into
ss
jno
les
bnd
mov
mov
mov
popa
dec
pop
and
sub
mov
stos
test
pop
jno
dec
mov
addl
insb
imul
dec
orb
and
hlt
aad
inc
xchg
rorl
dec
ljmp
adc
movb
stc
dec
outsl
xchg
in
icebp
fldt
xchg
aad
pop
xchg
cmc
cld
push
insb
xchg
xlat
fdivrs
loopne
ss
stc
mov
cmc
sbb
sub
das
loop
into
inc
daa
sbb
or
jb
imul
in
cmp
imul
pop
pop
dec
das
xchg
push
sti
call
int
or
scas
mov
sub
xor
insb
fists
out
out
rolb
loopne
adc
ljmp
call
jecxz
push
pop
data16
cwtl
dec
icebp
movsb
jl
inc
cmp
sub
or
xchg
dec
fstps
hlt
inc
fisttpl
xchg
iret
lods
push
lods
dec
inc
cmp
inc
sbb
push
jbe
mulb
mov
mov
ss
daa
hlt
sub
inc
pushf
or
pop
out
sbb
jbe
xchg
sub
loope
inc
adc
scas
xchg
push
sti
jmp
mov
lock
xor
xorb
imul
inc
rcrb
pusha
insb
mov
add
pop
fiadds
or
mov
inc
clc
or
scas
push
dec
pop
mov
cwtl
insb
mov
sbb
add
cmp
out
add
mov
cmpl
fst
test
jae
dec
adc
xor
fists
pop
js
lret
test
icebp
shlb
sub
push
add
lret
andb
jle
lock
or
inc
roll
bound
mov
mov
mov
cmp
fmuls
addr16
sarl
inc
or
stos
movsl
daa
aas
mov
mov
out
outsb
lods
outsb
cltd
scas
test
aas
sbb
add
or
mov
insb
cmp
int
lret
mov
push
dec
les
stos
loopne
push
in
pop
test
imul
insb
cmp
push
fsubrl
int3
lret
rol
xor
adc
jp
adc
xchg
cmpsb
or
push
sub
sahf
hlt
mov
das
xlat
or
and
ss
lcall
jns
in
mov
sahf
inc
pop
cmp
sahf
scas
imul
dec
mov
test
or
adc
cltd
fidivl
jne
dec
dec
sub
ds
mov
out
adc
scas
in
jo
orl
push
gs
jnp
repnz
arpl
movsl
rcl
pop
aam
lcall
out
jg
push
fs
fsubrl
lret
xchg
add
mov
push
cld
xor
out
jbe
adc
jmp
pop
dec
lods
hlt
in
mov
cmp
or
mov
inc
sbb
jns
aaa
cmp
loopne
sub
scas
and
lret
dec
data16
dec
add
dec
cmp
push
movsl
xor
push
add
movsl
les
je
pop
cmp
pop
movsb
out
inc
and
lods
xchg
sub
jne
dec
push
lds
dec
fst
xchg
lea
js
pop
mov
pop
push
inc
cltd
arpl
sub
aas
lds
or
mov
or
sbb
out
lods
push
fsubr
sub
popf
inc
add
cmp
xchg
mov
imul
or
mov
ret
leave
jle
cmp
xchg
xor
dec
jg
add
ja
and
jp
pusha
in
xchg
pop
repz
mov
in
es
ret
addr16
add
sti
sbb
stc
xchg
dec
or
stc
sahf
loopne
mov
mov
xchg
loopne
fnstsw
jmp
scas
hlt
aaa
call
jmp
cmpsb
inc
stc
mov
imulb
mov
insl
out
and
icebp
xor
dec
mov
add
push
int3
pop
inc
mov
and
pop
xor
inc
aad
es
sahf
testb
or
cmp
insb
mov
inc
mov
mov
out
dec
mov
pop
shrb
movsb
movsb
cli
fcoms
mov
mov
cld
jne
push
adc
fwait
pusha
not
jo
cmp
adc
shll
roll
push
sahf
lds
lods
mov
dec
jmp
push
mov
bound
inc
jmp
adc
or
cli
adc
insb
mov
adcb
add
roll
shlb
nop
push
insb
jo
sub
gs
loope
push
sbb
xchg
repnz
dec
fwait
das
inc
xchg
sbb
dec
notb
rcll
mov
fs
popf
mov
jns
ucomiss
montmul
cmpsb
xchg
xor
stc
xchg
push
aam
push
insb
adc
mov
pop
sub
adc
sbb
mov
gs
cld
push
inc
out
into
jno
loope
cmpsl
aad
repz
call
ret
push
data16
pusha
jns
xchg
lods
fsubl
mov
les
ret
subb
cmp
mov
enter
jecxz
pusha
cld
mov
push
inc
aad
arpl
mov
fxch
jb
xor
lret
pop
sub
sub
icebp
xor
or
add
ret
add
push
xchg
dec
mov
dec
and
jg
mov
loop
movsl
lods
int
dec
repnz
lcall
mov
leave
lahf
sub
cmpsb
test
addl
push
mov
leave
pop
mulb
gs
dec
enter
mov
loop
test
jbe
insl
sar
insl
push
in
sub
push
mov
shll
pop
inc
or
dec
jno
pop
lods
js
test
dec
sahf
add
jl
cmpsl
dec
sub
loopne
imul
pusha
xor
mulb
push
test
mov
xor
lea
mov
mov
xor
add
jne
jmp
mov
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
add
imul
mov
mov
mov
add
or
mov
mov
mov
add
xor
mov
mov
mov
add
and
mov
mov
mov
lea
mov
mov
mov
sub
add
mov
mov
xor
add
jne
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
jmp
sub
fwait
lods
fistpl
pop
imull
xchg
mov
jns
add
jp
pop
imul
cltd
rorb
decb
add
sbb
test
and
jae
je
xchg
scas
mov
shlb
mov
pop
call
mov
and
int3
test
mov
adc
jae
xchg
movsb
cmp
mov
xor
mov
push
add
fwait
jns
dec
push
xor
cmp
mov
lcall
nop
cmp
popa
fsubr
push
outsb
jle
stos
cli
int3
sahf
and
rep
xchg
ds
xchg
mov
sub
push
insb
xchg
sub
aaa
cld
push
insb
push
repz
lds
adc
ja
negb
mov
mov
addr16
jo
and
in
or
loope
outsb
int3
xchg
sbb
repnz
lcall
xor
mov
popf
adc
jae
aam
mov
adc
adcb
js
pop
lret
xchg
popf
cli
mov
out
or
sbb
mov
mov
adc
mov
jnp
push
cmp
mov
sbb
lret
pushf
int
bound
test
and
stos
cld
jbe
mov
cltd
ret
vpor
mov
dec
push
or
add
stos
adc
movsb
das
lods
sti
sub
test
pushf
sbb
mov
adc
mov
lods
add
xor
adc
sbb
sub
mov
and
test
sahf
inc
mov
in
mov
mov
jl
ja
cmp
fidivl
in
mov
rclb
lahf
bound
mov
or
sbb
or
inc
repnz
aaa
insl
add
lret
jns
cld
das
test
xchg
and
in
lret
adc
lret
sub
sti
mov
cli
dec
inc
jmp
movsb
fs
insb
mov
fs
nop
xchg
dec
xchg
add
sarl
and
shrb
mov
xchg
adc
pop
or
pop
jo
and
mov
test
out
aad
in
daa
lcall
jg
add
test
call
stc
or
divl
or
or
out
jo
dec
sete
mov
orb
jns
adc
fidivl
jo
sub
mov
add
repnz
ds
mov
das
es
dec
jle
or
jecxz
mov
lock
mov
mov
cmp
popa
mov
pushf
mov
push
inc
sahf
aas
mov
adc
push
pushf
inc
adc
leave
clc
aaa
mov
sbb
dec
xor
or
es
mov
pop
adc
push
outsl
or
mov
jno
fcoms
imul
and
add
inc
ds
popf
pop
cmp
data16
push
jo
icebp
es
xchg
mov
jo
pushf
mov
push
inc
sub
int
fstl
sub
fwait
and
fwait
std
fidivl
pop
sub
fwait
cmc
adc
mov
test
mov
jne
jmp
stc
rolb
mov
mov
push
iret
or
adc
xchg
mov
mov
lods
mov
mov
push
sbb
sbb
sub
gs
cmc
lahf
loop
jmp
pop
sub
inc
cmp
popa
mov
ss
mov
or
dec
add
inc
dec
pop
pusha
lcall
or
dec
sub
xor
fnsave
int
adc
repz
daa
push
adc
mov
jge
out
push
mov
rorl
cmpsl
add
mov
inc
les
ret
and
iret
rorl
cmp
xor
pop
out
lods
js
cmc
fsts
fiaddl
xchg
out
insb
sbb
push
out
divb
pop
daa
or
faddl
leave
xchg
sbb
mul
les
and
icebp
shl
imul
jnp
push
sbb
mov
pop
repnz
pop
gs
fwait
inc
and
and
aas
icebp
mov
adc
dec
popf
bound
mov
mov
sub
cmp
sbb
lret
jnp
push
cld
loopne
fistpl
or
hlt
test
pop
jmp
push
dec
movsl
xchg
mov
iret
lret
movsl
cmp
mov
mov
gs
adc
add
cmp
out
cs
add
jne
ret
ljmp
das
add
xchg
or
add
push
xchg
fsubrs
fbstp
fucomip
mov
lds
adc
push
jno
adc
xor
mov
jle
inc
xor
pop
mov
je
push
repz
frstor
gs
jo
mov
push
out
test
dec
or
push
pushf
cwtl
or
bound
lods
adc
enter
dec
jl
add
out
cmp
popf
lods
jae
hlt
addb
and
inc
and
mov
and
lods
sahf
neg
xor
sbb
xor
arpl
outsb
out
rcl
cs
jb
dec
loope
dec
xor
sbb
sub
sti
or
xchg
jp
int3
cld
xchg
fists
xor
xchg
dec
and
and
xor
mov
and
adc
repz
pop
inc
in
aam
in
inc
push
dec
jbe
out
pop
cmpsb
jmp
add
pop
push
and
xor
xchg
pusha
xor
sbb
sti
xchg
pop
sbb
insb
xchg
inc
mov
mov
add
fidivs
out
add
test
pop
pop
popa
or
stos
testl
nop
pop
ss
out
test
cmc
ljmp
xchg
xor
hlt
in
mov
and
pop
pop
jae
mov
loop
jle
xlat
test
imul
je
pusha
clc
xlat
add
dec
jle
or
xlat
pushf
inc
lret
mov
mov
outsb
cld
ss
aad
lds
push
mov
aam
sbb
adc
jns
jb
cltd
xchg
arpl
test
imulb
ret
mov
imul
ja
mov
out
test
ja
cwtl
sub
cmpsl
jno
ret
cmp
ficompl
push
sbb
xchg
mov
insb
dec
loope
inc
in
ss
rcrl
xchg
pop
pop
int3
shl
cmp
out
lods
mov
xor
ficoml
into
addr16
rclb
inc
daa
les
outsl
int3
sub
mov
xchg
das
push
add
push
enter
fidivrs
pop
into
inc
push
sub
sub
pop
mov
inc
sarb
leave
mov
aaa
sbb
xor
sahf
xchg
or
iret
push
stc
into
int
aad
inc
mov
mov
add
repz
rolb
pmulhw
sub
xor
dec
jecxz
dec
rorb
hlt
mov
push
dec
push
mov
test
mov
out
jmp
dec
mov
stos
pop
jecxz
mov
jle
push
scas
mov
call
lret
ss
popa
rcrb
gs
pop
jp
sub
ja
inc
dec
adc
testl
icebp
dec
inc
scas
push
mov
cmp
out
or
jg
popf
or
nop
pop
fidivl
push
xchg
adc
xor
scas
fs
xchg
jle
cmpl
rcr
mov
jno
xlat
outsb
and
std
popf
mov
test
mov
outsl
xchg
sti
xchg
enter
cltd
jmp
jbe
ljmp
pop
rorl
addl
mov
pop
aad
adc
cmp
lret
mov
cmp
imul
jb
insb
aaa
push
rorb
mov
adc
loope
insb
loop
or
cld
enter
fs
int
inc
stos
mov
mov
lcall
aaa
aam
aas
xor
lea
or
jecxz
xchg
outsb
in
push
subl
cltd
inc
mov
mov
fisttpll
xchg
out
and
xorl
fwait
inc
call
push
cmpsb
inc
and
in
pop
aaa
cmp
pop
xchg
adc
nop
jecxz
and
push
mov
add
fs
nop
cmp
ret
nop
stos
nop
and
arpl
dec
mov
inc
jnp
xchg
jnp
dec
lock
nop
xchg
out
pop
xchg
in
cwtl
or
xchg
mov
push
lock
in
xchg
cmc
orb
mov
sub
dec
leave
int
mov
push
lods
js
adc
nop
enter
clc
add
add
andl
arpl
sub
cmpsb
hlt
ret
orb
jecxz
inc
aad
enter
push
mov
bound
add
adc
and
mov
sub
imul
inc
enter
xchg
loop
fnstsw
ja
scas
dec
repnz
cli
jg
cmp
call
add
push
out
data16
out
popf
shll
shl
jmp
data16
fidivl
xchg
pop
subl
lret
and
push
push
push
push
test
addr16
ja
orl
add
xor
mov
dec
xchg
cmp
mov
imul
in
lret
or
mov
imul
mov
xchg
and
jns
jge
shlb
adc
or
add
adc
push
xchg
dec
push
jle
mov
mov
adc
cmp
roll
jns
xor
sub
xchg
fiaddl
push
push
sub
int
jl
push
jg
lods
enter
push
sbb
dec
sbb
out
pop
repnz
out
gs
mov
outsb
test
push
and
add
jp
mov
divl
call
rcrb
fs
pop
rcll
jmp
subb
xor
fst
dec
jmp
lcall
dec
lock
ja
cli
repnz
jl
xchg
jnp
aas
mov
mov
lret
shlb
aad
xor
arpl
inc
aaa
push
in
js
jp
xchg
cmpsb
pop
xchg
imul
xchg
out
fwait
popl
jmp
out
xchg
mov
xchg
das
jg
popa
add
andb
shll
test
push
movl
test
jmp
iret
and
add
jl
inc
cld
loope
dec
fwait
rclb
lods
aaa
jns
mov
mov
sahf
sub
mov
sbb
stos
pop
fistl
cwtl
bound
adc
inc
loop
push
xor
pop
mov
push
jmp
xor
stos
mov
jae
test
adc
fnstcw
lds
not
pop
das
int
xchg
nop
xlat
fimuls
xchg
stos
in
fidivrs
push
shl
movsb
outsb
cmpsb
lret
mov
adc
push
xchg
stc
xor
and
xor
push
nop
mov
cmp
sub
jae
pop
mov
enter
xor
jle
pop
sub
out
mov
jo
sbb
divl
fucomi
adc
das
scas
mov
stos
pop
cld
divl
mov
divb
jmp
das
std
shll
or
inc
dec
inc
outsl
lods
pop
cmp
push
ss
push
jl
dec
and
cmpb
push
dec
mov
es
aam
loope
fdivrl
rcrl
mov
jne
cs
inc
sub
loop
adc
scas
scas
int3
cld
lods
jl
mov
insb
into
mov
fcmovu
addr16
push
js
imul
pop
mov
mov
jbe
jae
outsb
xlat
pop
loopne
mov
mov
mov
sar
cmp
cmpb
andl
popa
leave
aas
nop
cld
mov
idivl
sbb
movsl
jne
scas
out
test
movsl
nop
sbbl
mov
flds
push
popf
xlat
jp
mov
jecxz
mov
sub
lcall
jbe
mov
test
loopne
adc
cmc
imul
xchg
mov
test
cmp
test
les
lret
ret
mov
fldenv
xor
sub
pop
scas
mov
inc
fildll
dec
inc
push
and
dec
out
das
test
xor
mov
mov
add
mov
or
scas
mov
and
cs
xor
mov
lds
xorl
mov
sahf
xchg
fnstsw
or
ja
and
dec
stc
mov
call
dec
cmp
sbb
jmp
lods
inc
es
xchg
and
pushl
mov
movsb
clc
jb
das
push
cmp
sahf
sti
shrl
xchg
fstl
inc
leave
roll
stos
mov
jne
xchg
cmpsb
push
or
mov
mov
add
lret
hlt
cmpsw
jecxz
lock
and
sahf
mov
jnp
pop
or
ror
or
mov
lods
lods
xchg
sahf
jp
pop
ficompl
dec
dec
jae
fs
jne
test
push
aas
sbb
inc
fprem1
jae
hlt
xchg
sbb
or
test
test
daa
and
cmp
fdivs
or
test
cmp
xchg
insl
inc
popa
mov
faddl
inc
jae
jo
arpl
mov
pop
loopne
jae
lret
fldl
pop
js
fisttpll
into
add
in
add
mov
jl
mov
jb
loopne
mov
cmp
push
inc
or
lock
cltd
fidivrs
push
inc
dec
adc
dec
sbb
imul
push
lods
dec
jae
mov
std
mov
aad
lock
lods
js
push
adc
adc
loopne
aas
and
inc
call
xor
std
hlt
ret
mov
jno
mov
push
or
sub
xor
pop
stc
dec
orb
jge
push
push
pop
mov
inc
adc
mov
ror
pop
mov
mov
cmp
add
in
adc
xchg
rcrb
fmuls
sub
mov
es
js
out
int3
ja
ret
pop
jbe
cs
and
pop
data16
movsl
inc
sub
test
xor
dec
push
clc
ret
popf
mov
std
test
lds
ficomps
dec
pusha
xor
fnsave
sbb
fimuls
in
cld
and
nop
xor
mov
hlt
stos
outsb
mov
div
mov
test
xchg
std
scas
pushf
js
sarb
adcl
sub
mov
push
incb
loop
xchg
add
xor
cmp
jl
stos
mov
xor
scas
movsb
pop
andb
dec
dec
js
adc
pop
mov
mov
mov
cli
push
lea
int
int
mov
cli
lret
into
xlat
inc
repnz
sub
cmp
decl
into
int
rcr
sub
push
push
or
cmp
mov
aam
mov
out
bound
fs
ss
call
sbb
sbb
jmp
ficomps
aad
iret
ret
orl
hlt
xchg
jb
das
lods
mov
dec
adc
icebp
xor
sub
ds
dec
pop
call
cwtl
lret
jne
arpl
sarb
data16
dec
sahf
add
pop
pop
and
mov
popf
jg
lret
adc
in
daa
arpl
cmp
dec
pop
or
or
subb
xor
xchg
leave
adc
mov
add
sbb
cwtl
mov
mov
mov
es
stos
std
mov
testl
pop
movsb
cmp
cmpsl
xor
or
and
pop
aaa
or
pop
xor
repz
push
add
in
add
mov
aad
fmuls
jge
loopne
and
dec
sti
push
nop
inc
addr16
xchg
jbe
fisubl
adc
mov
sbb
addr16
adc
bound
or
pop
enter
jb
pop
push
mov
mov
ret
mov
mov
es
xchg
fistl
sub
pop
pop
int3
or
cmp
mov
xchg
imul
lds
xor
adc
cwtl
call
add
loopne
jmp
ljmp
cmp
and
fistpl
or
xor
jecxz
mov
pop
mov
out
aad
insb
inc
cmpsb
or
stos
fsubs
xchg
push
das
xor
mov
cmp
xor
and
xor
lock
cmp
xlat
cwtl
fwait
arpl
repz
add
and
lods
gs
sub
cld
loopne
mov
mov
dec
push
cli
and
jmp
add
mov
out
jmp
fwait
loopne
pop
push
in
jne,pn
add
pusha
pop
and
inc
cltd
mov
sti
jg
push
push
adc
mov
outsb
push
repz
and
and
push
dec
add
lock
rorb
pextrw
pop
mov
test
adc
mov
out
dec
jg
es
mov
lret
adc
hlt
inc
adc
adc
push
movsl
fisttpll
mov
imul
push
lret
mov
jge
pushf
jp
add
pop
mov
mov
pop
xor
flds
sub
dec
enter
lock
adc
push
hlt
int3
out
sarb
sti
mov
push
push
pop
iret
xchg
pushf
xlat
jl
jb
pop
cmp
sti
mov
and
cmp
mov
lret
andl
jae
xchg
sub
imul
lds
sbb
xchg
out
cs
je
popa
xchg
push
inc
dec
sbb
in
mov
add
insl
inc
adc
pushf
or
sbb
test
inc
jb
sti
outsl
cmpsb
lock
or
ljmp
mov
mov
adcb
pop
inc
sbb
lds
out
fisttpl
xor
jb
xorb
cmpsb
out
mov
ja
movsl
daa
pop
pop
or
in
ltr
jno
test
pop
out
bound
pop
pop
mov
push
outsl
mov
nopl
sbb
mov
rcrl
out
and
push
icebp
or
cltd
push
scas
int3
stos
pop
xchg
jb
sbb
rcrl
xor
push
ret
ror
ficoml
adc
jns
pop
push
inc
into
mov
arpl
lods
bound
cwtl
js
inc
mov
and
fwait
int3
xor
daa
scas
loopne
rcll
xchg
xchg
jo
stc
scas
insb
xlat
test
shlb
in
or
cmpsb
js
add
push
inc
mov
cli
xor
stc
inc
cmp
daa
sbbl
add
add
mov
pop
in
daa
sub
jl
mov
mov
and
stc
fadd
incb
dec
jae
jb
std
fmuls
xor
hlt
and
dec
in
xchg
sbb
loopne
pop
push
gs
popf
xchg
cmpsb
jle
xor
std
aas
idivb
cmpsl
test
pop
idiv
movsl
movl
cmp
daa
push
cld
xchg
inc
bound
adcl
pop
orb
or
stos
out
nop
mov
inc
aad
cs
lahf
lahf
add
adc
lods
cs
pop
xchg
inc
inc
mov
adc
ret
push
mov
icebp
imul
inc
push
push
add
jno
push
adc
lret
repz
add
iret
sub
lock
xacquire
dec
cmp
dec
mov
out
shlb
xchg
stc
pop
push
sahf
lds
fs
mov
mov
xchg
push
mov
icebp
leave
aaa
pop
mov
cmp
pop
popa
jae
fdivrs
ss
loopne
sbb
push
xchg
sub
push
inc
mov
jo
frndint
jp
jp
iret
xchg
sti
outsl
push
lret
dec
sub
mov
sub
mov
movsl
js
xor
sub
enter
out
sub
stc
inc
xor
xchg
push
movb
dec
call
rorl
xchg
xor
push
cltd
js
imul
andb
pop
add
jnp
cmc
cmpsl
fistpll
adc
mov
sbb
inc
cmpsb
popa
xor
jl
fistps
add
movsl
push
xor
rorl
test
jns
push
ja
bound
pushf
jb
push
outsb
enter
je
add
add
pop
insl
fcom
jnp
test
adc
lcall
pop
int
mov
adc
cmp
int3
mov
push
add
dec
iret
xorl
in
add
mov
shll
push
adc
cli
inc
subl
or
lods
outsl
push
sbb
lods
lret
mov
or
and
cmc
in
jnp
jg
push
push
or
jae
imul
int3
push
jp
mov
fcmovnbe
jbe
mov
aas
ret
xchg
inc
mov
sub
imul
and
xor
rolb
pusha
sub
and
int3
jae
xchg
lcall
jmp
aas
lock
xlat
aaa
mov
cmc
mov
and
dec
dec
sahf
or
jecxz
fistps
mov
fwait
cmp
adcb
adc
in
ss
dec
lods
push
cmp
jp
shll
ds
movsb
cltd
add
adc
jnp
mov
test
mov
out
insb
add
mov
jle
mov
inc
or
jb
incb
xlat
lods
clc
call
cmp
mov
pop
aam
mov
pop
push
mov
xor
lcall
clc
pop
sar
test
fcomps
lahf
add
sbb
add
leave
jle
stos
in
inc
adc
repnz
out
int3
dec
xor
xchg
shl
sti
mov
inc
and
movsl
pusha
ljmp
es
inc
add
xchg
jne
xor
adc
sbb
cmp
ret
adc
aaa
fistl
cmp
push
clc
xchg
mov
jp
dec
push
add
shll
push
xchg
movsl
movsl
cmp
icebp
repz
pusha
and
add
jl,pn
fwait
pop
cli
sbb
lret
xchg
mov
jg
jmp
lods
cmp
or
je
sti
data16
icebp
fildl
add
inc
mov
ds
jae
inc
popa
cs
lea
stos
sahf
xchg
iret
fidivrs
inc
daa
sub
cmp
mov
out
add
mov
xlat
sub
fldt
lret
pop
outsl
jae
cltd
das
add
add
xchg
fsubl
stc
in
mov
js
cmp
cmp
out
insb
out
mov
imul
adc
pop
push
std
mov
stos
jo
or
js
mov
add
pop
adc
dec
xchg
ljmp
push
out
xchg
aas
test
fidivl
dec
or
xlat
in
sub
add
stos
dec
loopne
sbb
inc
out
push
repz
movsb
mov
aad
cmpsl
fidivrs
lea
lds
in
test
lret
iret
adc
cmp
mov
push
loop
outsl
xor
cmp
mov
ret
popf
sub
pop
inc
jecxz
sub
push
push
push
das
cmpb
mov
add
jnp
dec
inc
inc
ja
test
cmp
xchg
ss
or
push
mov
xchg
iret
test
mov
fstps
and
popa
pop
sub
imul
dec
sub
movsb
cmp
mov
adc
jmp
push
mov
fistps
sti
lds
mov
sub
movsl
jg
dec
jmp
mov
cmp
mov
inc
sub
xchg
sbb
inc
dec
xor
fldl
hlt
add
xchg
mov
mov
scas
outsl
ret
sub
add
repnz
add
pusha
cmc
sub
xor
or
push
outsl
mov
movsl
dec
movsb
and
sahf
xchg
sti
fs
ds
std
cmpsl
je
or
insb
cmp
imulb
jecxz
mov
bound
lahf
loopne
inc
arpl
adc
xor
ss
dec
pop
int
fmuls
xchg
mov
jns
popf
ja
cwtl
or
insb
jno
xor
fsubr
adc
push
mov
repnz
jle
out
dec
aas
ljmp
movsl
add
stos
test
aaa
mov
arpl
pop
cli
cmp
outsl
xor
jg
adc
rcr
sub
push
xor
push
adc
pop
je
daa
insw
pop
fcomps
mov
cltd
out
and
cmp
sub
add
aad
icebp
ljmp
adc
out
ret
xchg
in
or
lods
adc
stc
call
je
iret
and
jp
xchg
push
repnz
sbb
pop
cmp
aad
arpl
data16
xchg
pop
bndstx
pop
dec
or
lods
adcb
inc
inc
add
rcrl
xorl
dec
std
sbb
cmpsb
mov
add
fdivrl
inc
adc
dec
shlb
int
in
sub
sbb
add
icebp
adc
scas
push
jecxz
xchg
call
dec
jae
adc
mov
add
lret
mov
dec
or
adc
jne
cmp
int3
imul
int
jmp
repz
dec
or
sub
adc
mov
ljmp
es
fwait
pop
mov
and
push
push
into
add
test
mov
adc
int
adc
sub
jmp
xor
inc
cwtl
in
mov
mov
jo
sbb
or
std
push
loopne
shll
xchg
lock
xchg
cmpsb
mov
sub
and
mov
scas
mov
rcrb
loope
ja
mov
iret
jl
push
mov
cs
cmc
jbe
sar
and
fidivl
xor
icebp
adc
ja
clc
pop
in
cli
leave
gs
addl
pop
cmp
into
xchg
pushl
xchg
lea
outsb
out
push
cmp
and
pop
cmp
push
in
push
xchg
push
pop
sbb
test
nop
adc
mov
jmp
inc
ret
data16
pop
jle
fs
push
pop
jmp
inc
call
daa
fists
cs
inc
cmpsl
out
mov
decb
out
negl
hlt
ljmp
in
pusha
xlat
jl
mov
fnstsw
mov
sub
jns
bound
testl
xchg
gs
and
fwait
pop
add
fbld
mov
out
dec
movl
pop
mov
ja
push
mov
sub
addr16
movd
mov
add
add
dec
insb
lret
bound
mov
cmp
mov
xor
hlt
cli
add
sbb
in
xchg
aas
vpminsw
ret
xor
cmpsb
stc
inc
jl
mov
xchg
inc
das
lret
add
scas
jnp
jecxz
xchg
jne
inc
nop
movsb
repz
mov
stos
push
mov
lods
mov
mov
dec
mov
push
lds
icebp
cmp
orl
cs
in
pop
push
xlat
scas
dec
and
sub
test
ja
or
les
mov
cmp
and
mov
xchg
flds
jl
mov
out
sahf
xor
std
mov
add
mov
adc
xchg
mov
push
adc
cmc
rcl
or
daa
je
xchg
test
xchg
aam
test
add
pop
in
xchg
mov
roll
aam
aam
push
jb
or
push
sbb
fwait
loopne
inc
pop
xlat
into
fdivl
xchg
adc
mov
fcomps
cld
jp
mov
clc
dec
outsb
pop
dec
andl
push
or
rorb
lods
je
pop
movsb
stos
pop
into
dec
repnz
mov
inc
cmp
pop
xchg
adc
sbb
push
push
push
cs
inc
sti
scas
mov
or
jl
mov
inc
jmp
lcall
jb
xchg
pop
adc
push
data16
das
or
push
je
xchg
in
sub
add
sub
clc
paddusb
mov
mov
add
push
dec
sub
cmpsl
femms
icebp
cmp
sahf
mov
pop
and
cld
jle
into
jle
mov
cld
mov
lock
push
mov
push
inc
add
call
scas
scas
jns
push
sbb
pop
stos
jno
cmp
gs
out
sti
xchg
xchg
shrl
inc
mov
pop
mov
cmp
addr16
inc
out
fsubr
inc
xorb
mov
out
mov
cmp
xchg
sbb
cs
pop
unpcklps
pop
test
pop
sub
mov
mov
dec
push
lcall
pop
adc
outsb
popl
or
xchg
sarb
pop
jnp
mov
clc
out
int3
and
aas
add
mov
xchg
dec
inc
aam
sub
popa
jb
push
inc
cs
hlt
add
sbb
loope
addl
aad
mov
sbb
repz
and
sub
lock
push
mov
loopne
je
aaa
sbb
inc
pop
aas
aas
ja
jne
pop
sub
lods
jne
push
sub
int
push
jg
rorb
mov
enter
push
inc
xchg
sbb
pop
test
pop
stos
fdivs
push
and
xor
ds
in
add
in
call
cmp
xchg
sub
jno
movl
inc
add
mov
stc
fnsave
inc
push
fcompl
repnz
jg
xor
xchg
xor
add
or
test
in
sbb
xchg
iret
adc
xchg
lret
js
jae
clc
adc
stc
subl
jnp
dec
shrb
scas
mov
adc
imul
fstl
orb
xchg
stos
push
hlt
mov
push
leave
xor
stos
leave
movsl
nop
out
leave
out
pop
outsb
aaa
xchg
icebp
ret
pop
movsl
scas
mov
add
add
mov
dec
mov
cltd
in
push
pusha
lods
into
xchg
test
xchg
mov
ret
or
add
mov
adc
jo
jl
dec
sbb
adc
adc
subl
or
pop
push
and
xchg
ficomps
stos
cmc
fildll
mov
lea
and
roll
iret
out
sarl
lret
lahf
stos
std
insl
ds
mov
mov
addr16
cmp
outsb
pop
das
mov
cmp
lcall
xchg
test
and
popf
icebp
dec
fstpl
pop
add
adc
mov
mov
dec
mov
mov
and
sub
push
into
rcll
xorl
ret
cltd
lock
xor
popa
test
repnz
push
fsubp
mov
xchg
fs
in
jmp
mov
enter
dec
adc
cmpsl
pusha
xor
outsl
ret
es
sbb
cmp
add
mov
loope
jo
mov
mov
mov
ja
push
jg
xchg
int3
aad
push
jle
out
fldl
add
pop
xchg
xchg
lahf
dec
dec
in
fs
xchg
lods
cmp
adc
mov
and
inc
mov
add
rcrb
bndstx
scas
shll
outsb
out
aas
xchg
cmp
test
inc
pop
xchg
aam
popf
aaa
repnz
loop
mov
add
subb
daa
addl
movb
xor
andl
mov
leave
mov
push
jl
daa
or
in
push
push
sbb
mov
xor
inc
xor
sub
mov
adc
into
push
adc
incb
shl
or
or
mov
pop
jne
push
jle
sbb
orb
or
imul
mov
mov
mov
add
or
mov
mov
mov
add
xor
mov
mov
mov
add
and
mov
mov
mov
lea
mov
mov
mov
sub
add
mov
mov
xor
add
jne
mov
xor
mov
add
mov
pop
pop
pop
leave
ret
add
inc
add
mov
inc
add
mov
inc
add
mov
inc
add
rolb
add
inc
add
rolb
or
inc
add
rolb
adc
inc
add
rolb
sbb
inc
scas
pop
nop
dec
add
add
add
add
cmp
lods
add
mov
add
add
inc
add
nop
inc
add
inc
add
nop
inc
add
inc
add
nop
inc
add
inc
add
nop
inc
add
inc
add
nop
inc
add
mov
add
inc
add
mov
add
inc
add
mov
add
inc
add
mov
add
inc
add
rolb
rolb
rolb
rolb
rolb
rolb
rolb
rolb
add
add
add
add
inc
push
ret
mov
and
cmp
dec
mov
dec
push
fcoml
aad
add
add
pop
inc
jne
jb
outsb
je
popa
je
pop
dec
outsl
imul
insb
imul
dec
gs
mov
sub
push
push
mov
xchg
mov
mov
cmp
jne
mov
cmp
jne
mov
mov
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
push
movb
xor
movb
xor
mov
lea
movzbl
xor
add
inc
mov
cmp
jb
xor
lea
movzbl
xor
add
inc
mov
cmp
jb
xor
lea
movzbl
xor
add
inc
mov
cmp
jb
lea
mov
mov
mov
mov
mov
cmp
jne
mov
movl
mov
mov
mov
mov
cmp
jne
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
lea
mov
mov
mov
lea
mov
add
mov
lea
mov
mov
mov
dec
mov
mov
mov
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
lea
push
mov
movl
movl
lea
pop
mov
xor
sub
mov
inc
dec
jne
lea
mov
lea
push
mov
xor
add
push
mov
add
push
mov
mov
movl
pushl
mov
call
mov
xor
add
mov
cmp
jne
mov
or
mov
add
mov
mov
mov
mov
mov
mov
mov
lea
mov
add
mov
lea
mov
add
mov
lea
mov
mov
mov
mov
lea
mov
mov
mov
mov
add
mov
mov
add
mov
lea
mov
add
mov
mov
mov
mov
movzwl
xor
add
xor
mov
mov
movzwl
xor
add
xor
mov
xor
mov
mov
mov
lea
lea
movl
mov
call
mov
lea
push
mov
xor
add
push
lea
push
pushl
mov
call
mov
lea
lea
mov
call
mov
lea
push
mov
xor
add
push
lea
push
pushl
mov
call
mov
pushl
pushl
pushl
pushl
pushl
pushl
pushl
call
test
je
add
pushl
lea
call
mov
mov
mov
xor
add
mov
jne
mov
mov
pushl
mov
call
jmp
mov
mov
add
pop
pop
pop
leave
ret
push
push
push
push
mov
mov
add
push
cld
mov
add
push
mov
lods
xchg
push
mov
or
shl
not
push
mov
or
shl
not
push
add
mov
sub
sub
inc
push
push
push
push
push
push
sub
push
or
mov
shl
lea
mov
shr
rep
push
pop
call
loop
lea
lea
mov
mov
sub
and
mov
mov
call
jne
mov
and
shl
sub
neg
shr
pop
add
pop
lea
shl
cmp
pop
lea
push
push
mov
push
mov
jb
mov
sub
movzbl
mov
shl
mov
and
add
lea
call
mov
shr
and
cmp
mov
jne
cmp
jb
jmp
mov
call
inc
inc
sub
sub
cmp
jb
pop
inc
cmp
dec
mov
jb
inc
cmp
dec
mov
dec
jb
mov
dec
sub
push
jmp
mov
dec
call
jne
pop
pop
pop
pop
pop
pop
pushl
push
push
mov
mov
jmp
mov
dec
call
jne
mov
dec
call
jne
pop
cmp
mov
jb
mov
push
mov
sub
cmp
jb
lods
mov
stos
jmp
mov
call
mov
je
mov
call
mov
je
mov
mov
mov
mov
mov
mov
mov
mov
pop
pop
pop
mov
mov
add
push
push
cmp
mov
jb
add
push
mov
call
jne
mov
mov
shl
sub
push
pop
lea
jmp
mov
add
call
jne
mov
mov
shl
push
pop
push
pop
lea
jmp
mov
add
push
pop
mov
mov
sub
inc
mov
call
mov
sub
jb
add
cmpl
jae
addl
mov
cmp
jb
push
pop
mov
shl
sub
inc
push
pop
lea
mov
call
mov
sub
jb
mov
mov
cmp
jb
mov
andl
shr
orl
dec
cmp
jae
mov
sub
mov
shlb
add
shl
add
mov
jmp
sub
call
shr
shll
cmp
jb
incl
sub
dec
jne
mov
add
mov
shll
push
pop
sub
inc
mov
mov
call
test
je
or
shl
dec
jne
jmp
incl
mov
add
mov
mov
sub
cmp
ja
mov
sub
mov
lods
stos
cmp
jae
dec
jne
mov
movzbl
cmp
jb
call
sub
lea
mov
mov
sub
mov
mov
mov
sub
mov
leave
pop
pop
pop
ret
pop
pop
sub
inc
jmp
cmp
jb
ret
shl
push
mov
cmp
jae
mov
shl
lods
mov
mov
pop
ret
mov
movzbl
shl
add
add
jmp
movzbl
add
mov
lea
sub
lea
cmp
jae
mov
shll
cmp
jae
mov
incl
shl
mov
mov
movzwl
shr
imul
cmp
jae
mov
mov
sub
shr
add
add
lea
ret
shr
sub
sub
sub
add
add
lea
ret
push
mov
sub
push
push
push
movl
movl
mov
mov
mov
mov
xor
mov
add
mov
mov
xor
add
mov
mov
xor
add
mov
mov
xor
add
mov
movl
movl
movl
push
pop
mov
mov
push
pop
mov
mov
movl
movl
mov
xor
add
mov
mov
xor
add
mov
movl
movl
movl
lea
lea
call
decl
jne
decl
jne
decl
jne
movl
mov
xor
mov
add
mov
mov
andl
xor
add
mov
mov
mov
mov
mov
mov
mov
mov
lea
mov
mov
lea
mov
mov
pushl
lea
mov
call
mov
xor
add
cmp
je
mov
mov
mov
mov
mov
mov
add
mov
mov
lea
push
mov
mov
mov
add
push
pushl
push
call
pushl
mov
mov
mov
movl
movl
movw
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
call
push
mov
mov
pushl
call
test
jne
mov
mov
mov
add
mov
mov
mov
call
push
mov
call
test
jne
mov
mov
mov
add
mov
mov
mov
call
push
mov
call
mov
mov
xor
add
cmp
je
mov
xor
mov
sub
add
mov
cmp
ja
movl
pushl
mov
mov
mov
call
push
mov
mov
pushl
call
mov
mov
mov
mov
mov
mov
xor
lea
call
push
mov
mov
pushl
call
mov
mov
mov
mov
xor
lea
call
push
mov
mov
pushl
call
andl
mov
and
add
push
call
test
jne
and
jmp
mov
mov
mov
xor
lea
call
push
mov
mov
pushl
call
mov
incl
cmpl
jb
mov
mov
xor
mov
add
lea
call
push
mov
mov
xor
add
lea
call
push
call
mov
xor
add
cmp
jne
movl
mov
mov
xor
lea
mov
mov
test
je
mov
mov
xor
lea
mov
mov
xor
mov
sub
add
mov
cmp
jbe
mov
mov
mov
cmp
jne
pushl
lea
push
call
mov
jmp
mov
mov
xor
add
xor
mov
mov
xor
add
cmp
je
mov
mov
xor
add
cmp
je
mov
xor
add
jmp
mov
mov
and
or
sub
add
mov
xor
lea
mov
cmp
jb
mov
mov
mov
movl
mov
mov
mov
mov
xor
add
mov
mov
xor
add
mov
movl
movl
mov
mov
xor
add
cmp
je
jmp
mov
mov
sub
mov
xor
add
xor
div
mov
mov
mov
xor
add
cmp
jbe
mov
xor
add
mov
mov
mov
xor
add
imul
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
add
movl
mov
movl
mov
movl
mov
mov
xor
add
jmp
movl
movl
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
xor
add
add
imul
add
mov
mov
mov
cmp
jb
mov
mov
xor
add
imul
mov
xor
add
or
mov
xor
add
mov
xor
add
mov
lea
jmp
mov
mov
xor
lea
mov
mov
xor
mov
sub
add
mov
mov
xor
add
imul
cmp
jbe
mov
mov
mov
mov
mov
xor
add
push
mov
xor
add
push
push
mov
mov
xor
add
push
call
mov
mov
xor
add
cmp
je
mov
jmp
mov
xor
mov
mov
mov
xor
lea
xor
mov
sub
xor
cmp
jne
mov
mov
mov
xor
add
push
mov
xor
add
push
pushl
call
mov
mov
mov
mov
mov
mov
xor
mov
add
movl
movl
jmp
xor
mov
xor
sub
mov
movsbl
movzbl
cmp
jne
mov
mov
xor
lea
xor
cmp
jne
jmp
mov
xor
add
mov
xor
add
cmp
je
mov
movl
movl
movl
movl
mov
mov
mov
xor
add
push
mov
mov
xor
add
push
mov
xor
add
push
mov
xor
add
push
call
mov
mov
mov
mov
xor
add
push
mov
xor
add
push
mov
pushl
xor
add
push
call
mov
xor
add
mov
cmp
je
mov
xor
add
cmp
je
movl
movl
mov
xor
sub
mov
mov
xor
sub
mov
mov
xor
sub
mov
andl
andl
lea
push
pushl
push
lea
push
mov
pushl
mov
add
push
push
call
mov
mov
mov
mov
xor
add
push
mov
xor
add
push
push
call
mov
add
xor
cmp
mov
mov
mov
jne
xor
add
push
mov
xor
add
push
pushl
call
mov
mov
mov
mov
jmp
xor
add
push
mov
xor
add
push
pushl
call
mov
mov
mov
movl
mov
mov
mov
mov
xor
add
mov
mov
xor
add
mov
movl
movl
mov
mov
xor
add
cmp
je
jmp
mov
mov
sub
mov
xor
add
xor
div
mov
mov
mov
xor
add
cmp
jbe
mov
xor
add
mov
mov
mov
xor
add
imul
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
add
movl
mov
movl
mov
movl
mov
mov
xor
add
jmp
movl
movl
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
xor
add
add
imul
add
mov
mov
mov
cmp
jb
mov
mov
xor
add
imul
mov
xor
add
or
mov
xor
add
mov
xor
add
mov
lea
jmp
mov
mov
xor
lea
mov
mov
xor
mov
sub
add
mov
mov
xor
add
imul
cmp
jbe
pushl
mov
pushl
lea
push
mov
mov
pushl
mov
mov
pushl
pushl
pushl
call
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
xor
add
push
mov
xor
add
push
pushl
call
pop
pop
pop
leave
ret
push
mov
push
push
lea
mov
push
mov
mov
mov
mov
cmp
pop
jne
movb
movb
movb
movb
leave
ret
push
mov
push
push
lea
mov
mov
mov
mov
mov
cmp
jne
mov
movb
movb
movb
movb
leave
ret
push
mov
push
push
lea
mov
mov
mov
mov
mov
cmp
jne
movb
mov
movb
movb
leave
ret
push
mov
push
push
lea
mov
push
mov
mov
mov
mov
cmp
pop
jne
movb
movw
movb
leave
ret
push
mov
push
push
lea
mov
mov
mov
mov
mov
cmp
jne
mov
movb
movb
movb
leave
ret
push
mov
call
mov
mov
movb
call
push
mov
movb
call
push
movb
call
movb
mov
jmp
push
mov
push
mov
push
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
movl
mov
movzwl
xor
add
pop
test
je
mov
movl
leave
ret
push
mov
sub
andl
movl
movl
movl
movl
movl
mov
mov
mov
mov
push
push
mov
mov
mov
mov
mov
push
mov
test
jne
pushl
mov
call
mov
mov
add
mov
mov
mov
mov
xor
mov
add
cmp
jne
mov
mov
mov
mov
mov
mov
xor
add
mov
mov
andl
xor
add
mov
lea
push
mov
xor
add
push
mov
add
push
mov
mov
movl
pushl
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
mov
lea
mov
lea
push
mov
xor
add
push
mov
add
push
mov
mov
movl
pushl
mov
call
test
je
andl
cmpl
jbe
mov
mov
sub
mov
incl
mov
mov
inc
cmp
jb
mov
mov
add
mov
mov
add
sub
add
mov
mov
mov
movl
jmp
add
shr
mov
je
lea
mov
mov
mov
mov
movzwl
mov
and
mov
mov
shr
add
xor
cmp
jne
mov
add
mov
cmpl
je
mov
add
mov
mov
mov
mov
addl
decl
jne
mov
add
mov
cmp
jae
add
mov
mov
test
jne
mov
mov
movl
mov
mov
mov
xor
add
mov
lea
mov
lea
push
mov
xor
add
push
mov
add
push
mov
mov
pushl
mov
call
mov
mov
add
mov
pushl
mov
pushl
pushl
call
mov
add
lea
mov
mov
mov
mov
mov
mov
mov
cmp
jb
mov
mov
mov
lea
mov
add
cmp
jae
mov
mov
mov
sub
add
mov
mov
jmp
xor
pop
pop
pop
leave
ret
push
mov
sub
push
mov
mov
cmpl
je
test
je
test
je
mov
test
je
cmpl
je
cmp
je
mov
andl
mov
sub
add
movzwl
mov
movzwl
add
je
lea
push
mov
mov
push
test
je
mov
andl
and
add
movzwl
movzwl
add
je
lea
mov
test
je
mov
andl
and
add
movzwl
movzwl
add
je
lea
mov
mov
mov
test
je
mov
add
movzwl
movzwl
incl
addl
add
cmp
jb
movzwl
movzwl
mov
incl
add
add
mov
cmp
jb
mov
movzwl
movzwl
incl
add
add
mov
cmp
jb
pop
pop
xor
inc
jmp
xor
pop
leave
ret
push
mov
mov
mov
sub
push
xor
push
push
cmp
je
cmp
je
cmp
jne
xor
inc
jmp
mov
add
mov
mov
mov
mov
add
add
mov
cmp
ja
mov
mov
cmp
jbe
cmp
jae
movzwl
jmp
mov
lea
mov
test
je
add
mov
cmp
jbe
mov
mov
add
cmp
jae
mov
jmp
sub
mov
mov
test
je
mov
inc
mov
cmp
jb
jmp
xor
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
movl
mov
mov
mov
mov
mov
mov
push
mov
push
mov
movl
mov
mov
push
mov
xor
xor
add
add
mov
cmp
je
mov
mov
xor
add
cmp
je
mov
mov
xor
add
cmp
je
add
mov
mov
xor
add
mov
mov
cmp
je
mov
mov
imul
xor
add
cmp
jne
mov
mov
imul
xor
add
cmp
je
mov
mov
mov
imul
add
mov
add
xor
mov
mov
mov
xor
add
xor
mov
mov
add
add
cmp
je
add
mov
mov
xor
add
mov
lea
mov
movl
mov
pushl
mov
call
mov
xor
add
mov
cmp
jne
mov
pushl
mov
call
mov
movl
movl
mov
xor
add
cmp
jne
mov
mov
xor
xor
lea
mov
mov
add
imul
push
call
mov
xor
add
cmp
jne
mov
xor
add
cmp
jbe
mov
xor
add
cmp
jne
mov
mov
xor
lea
mov
jmp
movl
movl
mov
xor
add
jmp
mov
xor
add
mov
mov
xor
add
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
mov
mov
mov
xor
add
cmp
je
mov
mov
xor
add
shr
cmp
je
mov
mov
mov
movzwl
push
pushl
call
jmp
mov
add
mov
mov
add
push
pushl
call
mov
mov
mov
xor
add
cmp
mov
jne
mov
xor
lea
mov
jmp
mov
xor
add
imul
mov
mov
mov
xor
lea
mov
mov
xor
add
cmp
jne
mov
mov
mov
sub
xor
jmp
mov
xor
add
cmp
mov
jne
mov
jmp
mov
xor
add
pop
pop
pop
leave
ret
push
mov
sub
movl
movl
mov
mov
push
mov
mov
mov
mov
xor
mov
add
cmp
je
mov
mov
add
push
mov
movl
mov
mov
mov
xor
xor
add
cmp
je
mov
mov
add
mov
mov
sub
mov
xor
add
mov
cmp
je
mov
xor
add
mov
push
movl
jmp
mov
xor
lea
add
shr
cmp
jae
sub
lea
mov
movzwl
and
mov
mov
mov
sub
add
movzwl
shr
xor
mov
mov
mov
mov
xor
lea
mov
mov
mov
xor
add
cmp
jne
mov
mov
xor
add
cmp
jne
mov
mov
add
add
decl
jne
mov
add
mov
mov
mov
xor
cmp
jae
add
mov
mov
xor
add
mov
cmp
jne
pop
mov
pop
jmp
mov
xor
add
pop
leave
ret
push
mov
sub
movl
movl
mov
push
push
mov
xor
push
mov
add
mov
mov
xor
add
mov
mov
mov
mov
xor
mov
addl
mov
mov
xor
mov
addl
mov
mov
xor
mov
addl
mov
mov
xor
mov
addl
mov
mov
mov
test
je
mov
test
je
mov
test
je
mov
mov
xor
mov
add
mov
cmp
jne
mov
xor
add
mov
mov
mov
mov
add
mov
mov
test
je
movl
mov
xor
add
mov
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
cmp
jne
mov
lea
push
mov
xor
add
push
pushl
pushl
call
mov
mov
mov
sub
add
push
call
mov
mov
mov
mov
pushl
pushl
push
call
mov
mov
add
movzwl
lea
mov
mov
movzwl
xor
add
mov
cmp
je
mov
xor
add
mov
mov
movzwl
xor
sub
sub
cmp
ja
mov
add
mov
jmp
mov
mov
lea
mov
mov
test
je
not
and
add
mov
add
push
call
mov
mov
mov
xor
add
cmp
je
push
mov
add
mov
add
push
push
call
mov
mov
mov
add
xor
lea
mov
mov
mov
movzwl
xor
sub
mov
sub
mov
cmp
jbe
mov
mov
cmp
jne
mov
lea
push
mov
xor
add
push
mov
pushl
push
call
test
je
mov
mov
mov
xor
add
je
andl
andl
mov
lea
movl
movl
mov
mov
mov
movl
mov
mov
xor
mov
add
mov
incl
cmpl
mov
jb
mov
mov
mov
mov
mov
lea
mov
mov
mov
movl
mov
mov
movl
movl
movl
movl
movl
mov
movl
mov
movl
mov
movl
mov
movl
movl
xor
mov
xor
sub
mov
inc
cmp
jb
mov
lea
push
call
mov
lea
push
push
call
lea
push
mov
pushl
call
mov
test
je
mov
jmp
mov
mov
cmp
je
mov
mov
cmp
jne
mov
mov
cmp
jne
mov
mov
mov
add
mov
mov
push
push
pushl
call
test
je
pushl
mov
pushl
call
test
je
mov
mov
mov
call
test
je
push
pushl
call
test
je
mov
mov
cmp
jne
mov
lea
push
pushl
mov
pushl
push
call
mov
mov
mov
xor
add
je
mov
mov
movl
mov
pushl
xor
pushl
add
or
add
push
call
movl
jmp
mov
mov
add
call
mov
mov
mov
mov
movl
cmpl
jne
andl
mov
jmp
xor
pop
pop
pop
leave
ret
push
mov
movzwl
movzwl
push
push
xor
lea
test
je
mov
lea
cmp
jb
mov
add
add
cmp
jb
add
inc
cmp
jb
xor
pop
pop
pop
ret
push
mov
sub
movl
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
push
mov
xor
push
mov
mov
add
push
cmp
je
mov
mov
xor
add
cmp
je
mov
xor
add
mov
mov
xor
add
mov
mov
mov
mov
xor
mov
xor
add
add
sub
mov
jmp
mov
mov
xor
add
cmp
je
mov
mov
xor
add
cmp
mov
mov
je
cmp
je
mov
mov
xor
add
cmp
jb
mov
mov
xor
add
cmp
ja
movzwl
movzwl
add
mov
mov
mov
xor
add
cmp
jb
mov
mov
xor
add
cmp
ja
movzwl
movzwl
add
mov
mov
mov
cmp
jne
mov
mov
xor
lea
mov
mov
mov
xor
lea
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
cmp
jne
mov
mov
xor
add
imul
mov
jmp
mov
mov
xor
lea
mov
mov
sub
xor
mov
mov
sub
xor
mov
mov
mov
xor
add
xor
add
imul
mov
movzwl
mov
mov
xor
add
xor
add
imul
mov
movzwl
sub
sub
xor
xor
cmp
jne
mov
mov
xor
add
xor
add
imul
mov
movzwl
mov
sub
xor
cmp
mov
je
mov
pop
xor
pop
add
pop
leave
ret
push
mov
push
mov
push
mov
sub
mov
xor
mov
movl
mov
cmp
je
push
push
movzwl
mov
mov
mov
cmp
jne
mov
lea
xor
mov
xor
mov
mov
sub
mov
xor
mov
cmp
jne
mov
pop
pop
cmp
je
xor
lea
pop
leave
ret
push
mov
push
push
push
movl
mov
call
mov
mov
add
xor
cmp
je
mov
mov
mov
push
mov
mov
sub
mov
xor
mov
cmp
jne
mov
lea
xor
mov
xor
lea
mov
add
xor
cmp
jne
mov
pop
cmp
je
xor
xor
mov
mov
pop
pop
leave
ret
push
mov
push
push
movl
mov
call
mov
mov
sub
mov
xor
mov
cmp
je
push
push
movzwl
mov
mov
mov
cmp
jne
mov
lea
xor
mov
xor
mov
mov
sub
mov
xor
mov
cmp
jne
cmpl
pop
pop
je
xor
inc
jmp
xor
pop
leave
ret
push
mov
push
mov
movzwl
push
lea
mov
push
xor
mov
mov
cmp
je
mov
sub
mov
jmp
mov
mov
add
movzwl
mov
add
xor
mov
cmp
jne
xor
pop
mov
mov
pop
leave
ret
push
mov
sub
movl
movl
mov
xor
add
mov
movl
movl
movl
mov
xor
mov
lea
mov
xor
add
mov
imul
cmp
jae
mov
mov
sub
mov
xor
add
cmp
jbe
mov
add
mov
add
mov
mov
mov
mov
mov
xor
mov
lea
mov
jmp
mov
mov
sub
mov
xor
add
cmp
jbe
mov
add
mov
add
mov
mov
mov
xor
mov
lea
mov
jmp
mov
mov
sub
mov
xor
add
cmp
jbe
mov
add
mov
add
mov
mov
mov
xor
mov
lea
mov
jmp
mov
add
mov
add
mov
mov
mov
inc
mov
jmp
leave
ret
push
mov
sub
movl
push
mov
movl
mov
mov
xor
mov
add
cmp
je
push
push
mov
mov
xor
mov
sub
add
lea
xor
mov
mov
mov
xor
sub
xor
mov
mov
xor
add
cmp
jne
pop
pop
pop
leave
ret
push
mov
sub
movl
movl
mov
mov
mov
push
push
mov
xor
mov
add
cmp
mov
jne
xor
add
jmp
mov
xor
add
cmp
jne
mov
jmp
lea
mov
mov
mov
mov
xor
add
mov
mov
push
call
mov
mov
mov
jmp
mov
sub
mov
mov
mov
call
mov
pushl
mov
call
mov
xor
add
cmp
jne
mov
call
mov
xor
add
push
pushl
mov
call
mov
xor
add
cmp
je
mov
mov
mov
mov
mov
add
cmp
jne
mov
xor
add
pop
pop
pop
leave
ret
mov
mov
jmp
push
mov
mov
sub
cmpl
push
push
push
je
test
je
movzwl
mov
mov
xor
and
mov
xor
add
mov
andl
xor
push
pop
cmp
jae
lea
xor
movzwl
mov
lea
cmp
jne
movzwl
mov
cmp
jne
mov
movzwl
cmpb
je
mov
movzwl
movsbw
mov
sub
xor
cmp
je
push
pop
incl
mov
cmp
jb
jmp
incl
push
pop
mov
movzwl
cmpb
je
inc
cmp
jne
xor
pop
pop
pop
leave
ret
mov
add
xor
xor
cmp
sete
jmp
push
mov
sub
push
mov
mov
cmpl
jne
xor
jmp
pushl
push
pop
call
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
push
mov
mov
call
push
mov
pushl
call
mov
test
je
mov
push
push
mov
add
mov
mov
mov
mov
add
mov
mov
add
add
mov
mov
mov
cmp
ja
mov
xor
mov
cmp
jbe
jmp
mov
mov
movzwl
cmp
jae
cmp
jae
mov
mov
mov
mov
lea
add
add
sub
movl
mov
mov
cmpl
jne
mov
pushl
push
call
mov
test
je
mov
mov
mov
addl
decl
jne
mov
inc
mov
cmp
jb
pop
pop
pop
leave
ret
push
mov
mov
push
pushl
lea
mov
call
mov
mov
mov
xor
cmp
pop
setne
mov
pop
ret
mov
push
jmp
xor
add
mov
add
add
movzwl
mov
cmp
jne
xor
mov
mov
pop
ret
push
mov
mov
shl
add
jmp
xor
sub
mov
inc
inc
mov
cmp
jne
movb
mov
add
pop
ret
push
mov
sub
push
mov
mov
lea
push
mov
mov
mov
mov
push
xor
mov
add
cmp
je
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
mov
movl
mov
mov
mov
movl
mov
mov
xor
mov
sub
add
mov
movl
jmp
mov
mov
xor
xor
lea
mov
xor
div
mov
mov
xor
xor
sub
cmp
jne
mov
add
mov
mov
mov
xor
xor
add
add
cmp
jae
lea
mov
mov
xor
add
lea
mov
mov
cmp
jbe
addl
jmp
addl
mov
xor
inc
incl
add
cmp
jb
mov
mov
test
jne
xor
sub
jmp
mov
xor
mov
sub
add
mov
xor
sub
ror
xor
mov
add
mov
mov
mov
sub
xor
cmp
jne
mov
mov
xor
xor
sub
sub
xor
mov
mov
xor
mov
sub
add
jmp
mov
xor
mov
sub
add
mov
mov
cmp
jne
mov
jmp
mov
xor
add
pop
pop
pop
leave
ret
push
mov
sub
movl
movl
mov
mov
movl
push
push
movl
mov
mov
mov
xor
mov
xor
add
add
imul
jmp
mov
mov
xor
xor
add
add
test
mov
mov
je
xor
xor
add
add
shr
mov
xor
add
xor
jmp
xor
xor
add
add
shr
mov
mov
xor
lea
mov
mov
xor
xor
sub
cmp
jbe
mov
pop
mov
mov
pop
leave
ret
push
mov
sub
movl
movl
movl
push
movl
mov
push
mov
push
xor
mov
add
mov
movl
movl
movl
mov
mov
mov
xor
xor
add
add
imul
jmp
mov
sub
xor
mov
lea
call
mov
mov
mov
mov
mov
mov
xor
lea
mov
mov
mov
xor
xor
sub
mov
cmp
jbe
mov
xor
add
mov
movl
mov
jmp
mov
mov
xor
add
shr
mov
mov
mov
mov
mov
mov
movzbl
xor
mov
mov
mov
xor
add
and
mov
mov
xor
mov
mov
xor
lea
mov
mov
xor
mov
sub
add
mov
mov
mov
xor
add
cmp
jne
mov
mov
xor
add
pop
pop
xor
pop
leave
ret
push
mov
mov
mov
mov
mov
mov
sub
push
push
push
mov
xor
mov
add
cmp
jne
orl
jmp
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
mov
mov
movl
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
mov
xor
add
mov
mov
xor
add
mov
mov
mov
sub
mov
mov
mov
mov
dec
test
mov
je
mov
mov
mov
dec
not
and
mov
mov
add
jmp
mov
mov
mov
xor
add
mov
mov
xor
add
mov
mov
mov
xor
add
mov
mov
movl
movl
movl
mov
mov
xor
add
imul
mov
mov
xor
lea
cmp
jae
mov
xor
add
mov
mov
add
mov
pushl
mov
mov
call
mov
movl
mov
xor
lea
add
push
call
mov
test
je
mov
xor
add
push
pushl
lea
push
call
mov
mov
mov
mov
sub
mov
mov
mov
mov
add
mov
cmp
jb
mov
mov
mov
add
mov
sub
jmp
push
pushl
lea
push
call
mov
mov
movl
movl
movl
lea
mov
lea
mov
lea
mov
lea
mov
mov
xor
add
mov
jmp
cmp
je
mov
xor
mov
add
mov
mov
xor
lea
mov
mov
mov
xor
add
cmp
jne
mov
xor
add
push
push
lea
push
call
mov
mov
xor
mov
mov
xor
movzbl
add
cmp
je
mov
mov
xor
mov
mov
xor
movzbl
add
cmp
je
mov
mov
xor
mov
mov
xor
movzbl
add
cmp
je
mov
mov
xor
mov
mov
xor
movzbl
add
cmp
je
mov
mov
xor
mov
mov
mov
xor
mov
xor
mov
mov
xor
mov
or
mov
mov
xor
mov
cmp
jne
mov
mov
xor
mov
mov
mov
xor
mov
xor
mov
mov
xor
mov
or
mov
mov
xor
mov
cmp
jne
mov
mov
xor
mov
mov
mov
xor
mov
xor
mov
mov
xor
mov
or
mov
mov
xor
mov
cmp
jne
mov
mov
xor
mov
mov
mov
xor
mov
xor
mov
mov
xor
mov
or
mov
mov
xor
mov
cmp
jne
lea
push
call
mov
cmp
je
mov
xor
add
mov
mov
xor
lea
xor
mov
mov
xor
add
cmp
je
mov
mov
xor
add
cmp
jne
mov
mov
xor
lea
jmp
push
pushl
lea
push
call
mov
mov
xor
add
cmp
je
mov
xor
add
push
push
lea
push
call
mov
add
mov
pushl
pushl
mov
add
push
call
mov
mov
xor
add
cmp
je
push
pushl
mov
add
push
call
mov
mov
add
mov
add
mov
mov
mov
xor
add
imul
mov
mov
xor
lea
cmp
jb
mov
mov
mov
jmp
mov
mov
xor
xor
add
add
cmp
jne
mov
imul
mov
jmp
mov
xor
add
cmp
je
subl
jmp
andl
pop
pop
pop
leave
ret
push
mov
and
mov
sub
push
mov
push
push
cmp
jne
push
jmp
mov
cmp
jne
push
jmp
mov
cmp
jne
push
jmp
mov
cmp
jne
push
jmp
mov
mov
cmp
jne
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
mov
add
mov
mov
mov
mov
mov
mov
mov
add
mov
mov
mov
push
push
pushl
push
call
mov
mov
pushl
xor
add
mov
lea
push
push
pushl
pushl
pushl
call
mov
mov
xor
add
cmp
je
mov
mov
xor
add
imul
mov
jmp
mov
cmp
jne
push
jmp
mov
cmp
jne
push
jmp
mov
cmp
jne
push
pushl
pushl
push
pushl
pushl
pushl
call
mov
mov
pop
pop
pop
mov
pop
ret
push
mov
sub
mov
mov
movl
mov
xor
add
mov
mov
push
mov
pushl
lea
pushl
push
pushl
pushl
pushl
call
mov
mov
leave
ret
jg
jge
xorb
in
clc
popa
add
test
add
pusha
dec
call
mov
ficompl
js
sbbb
mov
cmc
rcll
pop
stc
out
or
fidivrl
bnd
pop
pop
adc
and
sahf
out
fcmovnb
js
daa
xchg
or
or
or
or
ret
add
xor
xor
xor
dec
xchg
mov
xchg
divl
popa
ja
das
jmp
push
lods
insl
bound
mov
insb
push
pop
repz
sbb
jle
cmpb
fisttpl
push
sub
adc
mov
pop
jp
push
xor
pop
ljmp
cmp
ds
mov
js
push
xor
imul
fs
aad
mov
add
jns
pop
aad
into
add
xchg
iret
jo
jbe
fdiv
jo
mov
adc
repnz
dec
movsb
lcall
jecxz
aas
enter
out
cmpsl
adc
sarb
adcb
and
fdivrs
mov
push
sahf
push
clc
rorl
sbb
jne
adc
stc
or
add
mov
push
lods
lahf
addb
int
fidivl
pop
and
inc
mov
cmp
out
dec
mov
pop
loopne
jbe,pt
xchg
scas
mov
sub
sbb
rcll
jle
movsl
subl
fnsetpm(287
dec
sahf
out
or
or
arpl
lea
std
les
es
addl
iret
daa
and
pop
rcll
pop
pop
add
ljmp
lahf
pop
xchg
mov
push
nop
push
repnz
in
jmp
inc
lods
movl
push
rcll
push
das
int
sbb
jp
nop
xor
mov
push
xchg
rcr
clc
or
mov
push
lret
icebp
es
inc
cmpb
cli
pop
out
sbb
pop
scas
sub
inc
pushf
sti
mov
mov
js
movsb
cmpsb
sbb
ds
mov
je
frstor
nop
dec
ss
fwait
or
xor
push
and
mov
cmp
cmpsb
push
add
dec
ss
pop
in
dec
aad
paddd
popa
ss
mov
mov
adc
xchg
push
ss
inc
inc
test
cmpsl
shrl
stc
add
add
idiv
jg
mov
mov
jne
scas
jnp
add
test
add
push
int3
lcall
sar
imul
out
pop
movsb
aad
lcall
mov
jg
mov
cwtl
pop
adc
neg
mov
data16
iret
mov
popf
out
sub
imul
mov
stc
test
pop
sub
add
sbb
dec
and
stc
push
fadd
lock
xchg
aad
mov
xor
lods
in
jnp
xchg
and
adc
adc
pop
stos
test
xchg
hlt
xor
mov
sub
mov
aas
dec
jmp
xchg
add
rorl
mov
arpl
xor
loopne
stos
mov
dec
out
mov
popf
lret
stos
and
mov
cmc
ret
out
push
inc
fidivrs
dec
add
push
les
cld
jmp
push
dec
jne
pop
pop
cmpsl
movsl
jnp
jo
or
repz
insl
andb
jmp
pop
out
dec
clc
iret
adc
lods
aad
ja
test
dec
cmp
sub
and
mov
das
std
sbb
cmp
lods
cli
repz
inc
in
ljmp
mov
cmpsl
setns
dec
pop
nop
cld
nop
cmpsl
xor
mov
fs
push
mov
mov
lock
iret
dec
loop
cwtl
stos
popf
sub
xchg
pop
jle
xchg
and
addl
bswap
add
jp
loope
push
xchg
mov
add
cld
push
cmp
shll
andb
push
mov
lret
fistl
addr16
xchg
push
jo
push
jns
dec
imul
mov
mov
imull
in
mov
das
out
mov
push
or
aad
cmp
or
push
lahf
idivl
leave
push
sarl
daa
jg
sarb
push
or
cmpsl
fnstcw
xor
or
stos
xor
mov
cmp
fs
inc
mov
mov
pop
push
fisttps
aaa
adc
cmpsl
push
push
xor
cmp
movsb
cmpsb
mov
imul
add
insb
adc
mov
or
int3
sub
stc
and
in
inc
les
xorl
or
cmp
mov
outsl
xor
pop
or
pop
dec
mov
test
add
add
sbb
pop
xchg
mov
in
add
add
mov
add
xchg
mov
gs
add
adc
sbb
xchg
push
out
mov
xor
aam
and
cmpsb
push
fxch
add
mov
icebp
jne
mov
xlat
fstps
insb
shlb
movsl
cs
and
rep
orl
xor
pusha
int
sbb
cs
lahf
repnz
daa
xor
xchg
cmp
cmc
sbb
in
pop
dec
xchg
ss
pusha
ja
in
lcall
ja
mov
cmpsl
pop
mov
idivl
jmp
in
addr16
add
pop
sub
sahf
sbb
mov
sub
xchg
dec
in
popf
in
mov
cli
mov
dec
cld
jb
and
pusha
push
test
in
insb
or
and
orl
push
or
rorl
jns
push
xorb
dec
push
dec
std
ret
loop
sbb
cs
mov
test
inc
and
fistpll
mov
test
pop
decl
cmp
push
and
lods
push
cmpl
pop
lock
jle
dec
cld
cmpsl
repnz
hlt
pop
jo
cs
aam
arpl
mov
mull
dec
add
add
je
daa
imul
call
enter
jno
mov
pop
fsubrs
adc
test
add
cmp
adc
mov
xchg
add
int
mov
sbb
out
pop
mov
sub
dec
jmp
dec
ret
ret
xchg
and
adc
xor
dec
xor
adc
mov
out
add
jp
ret
cmp
mov
and
repnz
mov
xchg
repnz
addr16
nop
cld
es
cmpsb
sub
inc
xor
jmp
cmp
mov
out
pop
pop
fsts
cli
mov
ljmp
cmp
cmpsl
aad
rcrb
cltd
mov
jb
jmp
fimull
in
sub
scas
inc
or
dec
or
sahf
loope
loop
dec
mov
inc
sub
fiadds
shlb
int3
dec
and
add
dec
sbb
pushf
sub
popf
xorl
add
mov
test
push
pop
lret
sbb
add
push
add
mov
jp
push
leave
adc
add
or
adc
cmp
and
fcoml
sbb
xchg
sbb
add
arpl
add
dec
rcll
mov
dec
shrl
mov
pushf
callw
pop
inc
popf
inc
lret
dec
or
mov
lods
in
add
jae
test
mov
sub
push
xchg
mov
mov
mov
push
sbb
cmpsb
dec
adc
mov
xlat
adc
or
cmp
push
cwtl
ljmp
push
inc
scas
imull
sbb
cmpsb
imull
aas
fbstp
adc
cmp
mov
aad
jb
in
jo
lea
sbb
sar
push
mov
idiv
cmp
rorb
stos
push
lcall
aas
test
cmp
cmc
xor
aad
push
mov
sub
fistl
inc
mov
inc
mov
in
add
stc
sub
push
cmp
lea
cld
lret
mov
jae
mov
adc
fnsave
push
push
jle
xor
cmp
ss
das
or
cwtl
xorl
shll
xor
sub
pusha
aam
pusha
test
mov
js
movsb
jecxz
push
stos
insl
mov
jae
dec
dec
mov
or
sbb
adc
stos
lds
call
dec
push
push
pop
or
inc
cmp
divb
fstpt
xchg
dec
xchg
jnp
inc
sbb
stc
pop
sti
les
mov
add
sbb
mov
and
call
fcomps
das
dec
mov
pop
je
dec
int
cmp
dec
out
in
cmp
inc
rorl
mov
or
dec
les
push
lcall
mov
cltd
lret
test
cli
push
mov
mov
das
or
mov
push
mov
sbb
scas
jle
mov
jmp
mov
sahf
mov
mov
inc
mov
cmp
in
sbb
inc
dec
or
add
xchg
or
fdivrs
mov
cmpsl
sti
lahf
jno
adc
inc
fsubr
imul
rclb
movsb
fldenv
dec
push
cmpsb
inc
mov
pop
mov
add
hlt
mov
std
jl
dec
pop
cmp
test
popa
or
add
test
add
fistl
sbb
inc
and
pusha
iret
xchg
test
push
mov
sub
icebp
push
push
rcrb
imul
insl
mov
int
data16
gs
loop
aas
sbb
aaa
fisttpl
aam
inc
das
pop
mov
xor
test
add
sbb
js
and
into
imul
mov
fiaddl
mov
insb
sbb
pop
xor
mov
push
nop
xlat
outsl
insb
iret
sbb
sbb
mov
loope
clc
lret
out
and
stos
and
mov
xchg
pushl
jae
in
out
sub
dec
popf
pushf
jo
in
sbb
lea
xchg
sbb
adc
pop
cs
xlat
lds
jl
xchg
mov
stos
into
and
aad
js
mov
cld
mov
jns
and
gs
dec
mov
in
or
lds
mov
daa
leave
adc
inc
and
sbb
cmpsb
xchg
aas
jne
loopne
xor
push
mov
popf
and
mov
jg
sub
test
push
xor
or
inc
repz
jecxz
inc
in
pop
adc
sahf
aas
addr16
in
dec
dec
jno
aad
ljmp
fcom
mov
dec
call
incb
mov
in
aas
jmp
stos
jmp
loopne
fidivrl
lcall
je
mov
nop
jmp
xchg
jae
and
subb
xor
mov
jge
inc
test
aam
sub
fptan
xchg
fcmovnu
xchg
or
push
mov
mov
out
pop
jno
mov
dec
jge
mov
out
sbb
pop
mov
mov
dec
push
fdivs
test
dec
les
loope
out
mov
shlb
outsb
cli
imul
daa
scas
outsb
gs
fnstsw
shr
jo
movsl
push
pop
pop
pop
fidivs
mov
cwtl
jge
mov
lods
add
notb
xor
movsl
mov
test
mov
test
icebp
in
gs
cmp
scas
arpl
pop
ret
mov
mov
gs
push
fcmovbe
cmpps
inc
add
stos
and
add
add
imul
fdivrl
fcoms
mov
test
add
shrl
cmpsl
xor
insb
loope
popa
out
imul
test
outsl
jg
add
mov
adc
sub
and
fsubl
push
jle
and
gs
dec
mov
xlat
mov
lahf
push
or
sub
mov
enter
sbb
push
stc
jmp
iret
mov
or
sahf
cmp
mov
arpl
pop
xor
xchg
negl
jbe
pop
les
jl
dec
pop
sub
xor
in
lahf
aaa
popa
icebp
push
jecxz
call
clc
mov
mov
mov
push
sbb
in
xchg
jo
call
pop
loope
or
adc
ret
xor
mov
mov
pop
mov
inc
push
jbe
mov
aas
out
scas
dec
adc
rcr
call
add
fidivrs
mov
lds
fldt
mov
or
mov
outsl
mov
jge
xchg
in
dec
scas
xor
lea
sbb
sbb
arpl
scas
int3
outsb
mov
jne
sub
cli
dec
test
dec
in
push
jp
loopne
push
popa
add
push
dec
push
jb,pn
sbb
shlb
mov
mov
rcrb
or
cmp
inc
jle
jo
cwtl
inc
bound
mov
shr
stc
out
imul
xor
xorb
cmp
stc
fisubl
stos
mov
push
cmp
cmp
pop
hlt
mov
and
lock
ror
shlb
cmp
addr16
and
inc
fs
mov
sbb
gs
pop
push
mov
popf
test
mov
xchg
and
bound
mov
mov
pop
loope
add
sub
add
cmp
mov
rorb
push
into
insl
mov
inc
inc
pop
out
mov
jbe
insb
jecxz
xor
andb
jmp
out
loopne
mov
and
ret
and
sbb
int
aam
add
rcll
test
dec
in
mov
mov
mov
orl
cmpsl
sbb
jg
pop
aad
mov
mov
push
jno
add
xchg
jle
rcl
mov
or
les
lret
les
test
std
xor
and
cmp
push
adc
insl
and
mov
sbb
enter
into
sti
in
loopne
bound
lret
insl
call
inc
push
mov
xchg
loop
sub
div
repz
cld
add
lcall
cmp
mov
ss
jno
jmp
and
dec
insl
mov
bound
jle
int
mov
ss
and
xor
mov
inc
mov
jmp
in
dec
or
xchg
xchg
imulb
cltd
cmp
sub
mov
fsubrs
sub
je
call
or
jnp
stc
mov
popa
jecxz
pushf
ja
add
dec
sbb
pop
repnz
sub
lcall
mov
push
jb
movsl
call
ja
mov
in
pop
lret
dec
fldt
cmp
or
dec
inc
mov
jns
sbb
aam
data16
repnz
xchg
xor
rcrb
jne
or
cltd
xlat
fadds
push
mov
int3
and
leave
loopne
movsb
and
dec
jp
pusha
inc
mov
sub
ljmp
icebp
jg
dec
jbe
fisubs
test
dec
icebp
cs
push
or
outsb
testb
pop
push
push
pop
sub
xchg
pusha
int3
dec
jne
dec
pusha
add
or
push
jno
repz
cmp
and
xchg
cmp
test
pop
push
jnp
pusha
rcrl
iret
adc
ljmp
jmp
xlat
xor
pop
je
cmp
cld
loop
cmp
cmp
test
cmpsb
mov
xrelease
cmp
daa
lock
das
and
lcall
int3
xlat
fsubrl
repnz
into
fdivr
pop
jae
adc
xor
fldenv
ret
jb
inc
xchg
in
test
std
inc
inc
sbb
and
and
dec
mov
jnp
loop
notb
out
mov
call
repnz
mov
gs
jno
ds
cmp
ljmp
into
les
xchg
xchg
add
add
cmc
fistpll
stc
cmpsl
mov
pop
xchg
enter
add
test
add
jnp
xor
scas
jmp
scas
sub
stos
mov
mov
mov
jo
shll
dec
add
rcrb
or
xchg
dec
jmp
pop
mov
mov
movsb
or
ljmp
insb
dec
icebp
repz
mov
dec
stos
in
mov
jl
xor
stc
lahf
rorl
push
faddp
cmpsl
out
push
sub
pop
imul
or
xor
adc
icebp
or
rcl
push
jle
nop
pop
pop
or
xchg
aad
push
aam
fwait
addr16
mov
je
pop
or
jl
icebp
pop
ret
add
inc
push
imul
sbb
inc
imul
in
sahf
or
and
or
cmp
mov
das
or
lods
hlt
sahf
popa
push
xchg
stos
inc
push
test
or
lods
push
rorl
call
mov
mov
mov
enter
fmul
push
loop
cmc
js
sub
mov
je
movhps
mov
sti
pop
mov
adc
mov
push
sub
addr16
or
out
sbb
inc
sub
push
fdivrl
leave
icebp
or
push
add
mov
pop
outsl
jae
inc
gs
xchg
sub
call
mov
adc
int3
test
mov
fwait
test
aam
cmpsl
sub
xchg
rorl
stc
imull
iret
add
cmp
jnp
inc
push
cmp
mov
mov
adc
xor
jp
adc
into
ljmp
ret
insb
push
sbb
adc
cmp
or
es
jo
xchg
scas
dec
mov
out
mov
mov
mov
jp
sub
and
jne
sbb
and
lret
fmuls
pop
push
in
xor
jns
and
dec
testb
inc
inc
pop
hlt
dec
xchg
inc
sbb
push
or
gs
js
jno
or
stos
cltd
inc
cmp
xor
cmpsl
xlat
adc
or
xor
rol
mov
loope
data16
loop
outsb
es
dec
mov
lods
fldcw
lock
push
fdivl
jns
push
movsl
ficomps
mov
fiadds
dec
push
add
add
push
movsb
lea
lods
and
jno
sub
and
add
sub
sbb
scas
popf
and
push
push
jecxz
subl
iret
roll
gs
lret
cld
aaa
xchg
adc
dec
std
ja
mov
outsb
aas
jge
ljmp
loope
pop
ljmp
mov
sbb
adc
push
in
movsl
mov
sbb
push
mov
jbe
movsb
subb
out
repnz
jno
jns
cmp
sub
add
mov
aad
dec
shll
mov
imul
insb
add
lods
imull
into
shrl
out
mov
in
outsb
jp
movb
inc
add
pop
dec
fmuls
push
movsl
mov
fdivs
cld
mov
push
push
dec
mov
test
into
cmp
push
mov
sbb
add
cli
dec
leave
adc
push
es
scas
cmp
sub
and
outsb
cli
inc
out
pop
fcompl
movsl
pop
mov
into
push
dec
mov
pop
pop
pop
ds
fcompl
fbstp
pop
loop
cmp
mov
adc
mov
lock
sbb
sub
sub
cltd
xchg
imul
ds
insb
lods
jge
mov
mov
out
sub
adc
push
pop
rcrb
call
cmp
int3
xor
cs
scas
jb
dec
add
js
jp
sub
shrb
popa
call
insl
mov
sub
adc
pop
jnp
push
nop
imul
and
je
imul
inc
insl
jp
or
shrl
fdivl
mov
sahf
fsubrl
xchg
cs
push
inc
decl
xor
mov
shll
fwait
xor
dec
ja
and
fldcw
les
add
sub
insl
add
jl
insb
repz
add
pop
stos
push
adc
cmp
mov
pop
dec
in
push
and
sti
or
push
push
fistl
fwait
mov
in
call
hlt
pop
sbbb
xchg
jo
ret
insl
mov
cmp
scas
stc
and
adc
mov
mov
cld
or
enter
mov
leave
cmpsb
push
add
cwtl
sub
mov
cmp
test
pop
sbb
js
add
das
fld
mov
cmp
imul
insl
enter
cs
fimuls
or
lock
das
ret
shlb
add
pop
xlat
movsl
aaa
inc
mov
push
je
cmp
pop
sarb
jae
popf
fwait
jae
dec
xchg
gs
pop
sub
jmp
sub
pop
mov
scas
jmp
jae
jnp
and
ret
jp
setbe
in
in
dec
sub
scas
push
lds
jb
sub
inc
inc
mov
int3
jnp
dec
jg
add
loope
push
push
inc
int3
cmp
mov
notl
out
sarb
adcl
add
ret
or
sub
out
fistpl
int3
mov
lds
inc
pop
xlat
ds
outsl
pop
jg
inc
pop
les
out
pop
leave
and
call
jne
shrb
inc
jmp
negb
inc
dec
cwtl
mov
stos
jo
stos
inc
jmp
decb
mov
in
scas
lods
mov
fstpt
test
jne
adc
lds
add
loopne
insb
inc
mov
addr16
or
fbstp
aad
jnp
xlat
outsb
jle
adc
repnz
enter
mov
sbb
or
int3
add
arpl
mov
aam
mov
or
movsb
push
negl
pop
test
or
mov
inc
jb
lret
cmp
imul
cs
pop
push
mov
adc
nop
test
cli
ret
cwtl
dec
dec
rolb
nop
into
jae
scas
ss
loope
add
cmpsl
sub
cmp
imul
popa
aam
jae
test
cmp
pop
add
cmc
or
pop
loopne
and
mov
or
lods
push
lcall
jo
lcall
outsl
jo
mov
pop
inc
in
mov
mov
mov
addr16
mov
push
jno
popa
dec
inc
in
hlt
std
sub
fldl
fdiv
lcall
test
jle
jns
das
add
incl
push
das
out
test
stc
jl
out
dec
adc
cmpsb
cmp
loope
dec
xor
mov
outsl
push
pop
mov
iret
add
lret
inc
or
cmp
xchg
adc
repnz
cmp
shlb
add
xchg
std
jg
in
pop
ja
jnp
sub
add
in
cmpsl
in
mov
push
dec
sbb
lcall
sub
dec
fbstp
in
fistpl
mov
fwait
push
mov
jo
clc
dec
adcl
sbb
bound
pop
adc
sub
mov
mov
scas
jmp
sbb
cmp
or
mov
shr
mov
jnp
and
jmp
sar
xor
fcomps
mov
xor
inc
mov
push
cmpsl
ret
adc
jne
enter
stos
mov
adc
call
xchg
dec
mov
jbe
add
xlat
filds
orb
inc
imul
ja
je
fidivrl
std
aad
add
and
add
dec
sbb
outsb
ret
jns
mov
sub
ss
lods
push
pop
repz
jae
mov
push
xchg
popw
push
adc
and
imul
out
pop
loop
ds
ret
repnz
inc
imul
mul
cmp
in
cmp
inc
inc
lcall
mov
jns
stos
cmpsl
fadds
sbb
inc
cltd
and
push
repz
xchg
or
adc
daa
movsl
jmp
ret
outsb
or
leave
cmp
and
aaa
ficoms
adc
cwtl
adc
adc
adcl
mov
fucom
lahf
lret
xchg
xor
dec
jb
lret
jl
pop
cmp
dec
pusha
mov
out
testl
fsts
je
dec
iret
inc
mov
push
in
mov
test
bound
sti
sub
lcall
push
jmp
mov
jecxz
inc
jp
xor
sbb
fnsave
and
xchg
repnz
test
add
les
jl
inc
push
lret
lds
xor
sub
ja
pop
push
xor
test
arpl
notl
jle
pop
insl
xchg
outsl
xchg
jns
pop
mov
xchg
iret
cld
loopne
movsl
jle
lods
es
cld
lds
nop
cltd
test
jns
sub
sub
inc
dec
push
lret
cld
xlat
lods
loop
fadds
in
push
mov
popf
test
cli
cmp
sbb
sbb
pop
mov
push
or
std
cmp
shrl
leave
je
mov
sub
jb
push
ja
cld
cmp
enter
add
mov
idiv
iret
std
mov
xchg
scas
jge
add
xchg
mov
shlb
jp
movsl
fwait
pop
inc
dec
inc
hlt
into
mov
push
pop
in
fcomip
dec
dec
inc
add
in
daa
cmp
mov
in
daa
adc
xchg
jmp
es
add
sub
jnp
push
push
outsb
sub
jge
leave
inc
fnstcw
push
sahf
dec
outsb
lds
out
xchg
xchg
pop
shll
sahf
pop
pop
mov
jne
or
loope
add
test
out
leave
inc
fbld
cmp
mov
lea
outsb
jle
pop
mov
fldcw
dec
dec
outsb
and
clc
or
xchg
leave
cld
jmp
pop
add
mov
inc
inc
and
dec
into
and
fcoms
push
call
sahf
sub
mov
cmpsl
or
imul
and
pop
jno
inc
push
dec
xorl
adc
lahf
mov
inc
mov
pop
mov
or
loope
shrl
idivl
icebp
pop
push
lahf
mov
imul
mov
and
sbb
jo
jno
and
insb
mov
mov
inc
xchg
xor
out
outsb
mov
dec
push
dec
sub
or
mov
lock
imul
dec
xor
adc
pop
mov
add
push
clc
mov
mov
jno
lds
mov
xor
jnp
mov
and
pushf
and
or
xchg
enter
mov
imul
insl
dec
xchg
dec
xor
loop
out
incl
pcmpeqd
lcall
pop
mov
push
or
dec
lds
dec
jge
push
mov
fsubrs
je
nop
mov
movsb
push
rcll
push
sub
in
mov
cmp
push
sub
fucom
mov
loopne
xorb
data16
jg
lcall
xchg
insb
cmp
popf
js
movsl
aam
mov
gs
fldcw
cmp
pop
mov
mov
roll
aaa
dec
mov
mov
or
lock
fwait
lods
arpl
subb
cmpsl
fldt
dec
xchg
loop
mov
xchg
mov
xchg
and
and
sbb
push
dec
cmp
arpl
lret
stos
jmp
push
adc
cs
and
add
out
ret
mov
out
mov
movsb
xor
add
test
add
sbb
sub
dec
xchg
cmpsl
mov
push
inc
test
cmp
add
imul
int
fldcw
aam
lods
lret
inc
in
sbb
pop
sbb
sub
xchg
mov
pop
flds
or
add
jnp
into
inc
pop
subb
cmc
cmp
stos
cltd
lahf
cmp
add
rcrl
mov
mov
cmp
outsb
mov
int
rcl
jno
mov
adc
enterw
inc
aas
add
js
sbbb
push
jmp
mov
imul
adc
bound
mov
scas
pop
hlt
ret
inc
outsb
test
shlb
ljmp
jne
xchg
xor
lret
cmp
int
addr16
mov
int
sub
sub
lret
pop
iret
cmpsb
mov
lahf
mov
pop
mov
xor
lahf
sub
jge
fistpll
bound
inc
in
mov
sarl
xchg
xlat
mov
dec
pop
jmp
cmp
testb
nop
pop
mov
add
jg
out
xor
jl
sub
rorb
lods
adc
push
mov
gs
mov
lret
frstpm(287
dec
out
or
aam
clc
dec
inc
test
das
mov
dec
dec
sti
or
cmp
sbb
out
add
gs
gs
je
push
jnp
sub
dec
xchg
adc
sahf
and
pop
mov
mov
out
mov
cli
or
push
push
pop
jns
add
xchg
mov
xchg
aam
bnd
ret
push
movsb
sbb
mov
leave
adc
clc
cmc
sbb
jno
pop
into
sub
sti
sarl
sub
daa
sbb
xor
idivb
in
pushf
iret
fadds
push
enter
mov
add
lcall
lock
inc
add
aaa
dec
inc
xchg
imul
jo
jecxz
fcompl
pop
icebp
mov
lcall
pop
lock
or
mov
dec
jge
xor
cld
push
flds
add
lcall
roll
andb
leave
adc
insl
xchg
inc
sbb
sbb
imul
in
std
imul
add
push
push
jle
xlat
outsl
mov
lcall
add
test
add
pop
and
mov
jle
test
andl
push
js
mov
pop
sbb
outsb
mov
leave
lods
cltd
sub
sub
or
xchg
icebp
aad
add
mov
enter
pop
sahf
repz
les
or
cmp
call
sbb
ds
jle
dec
dec
adc
fwait
jo
int
xchg
cmp
btr
jp
push
inc
pop
fisttps
sbb
xchg
pop
xorl
pop
cmp
pushf
mov
cmp
cmpsl
add
std
shl
call
lret
xor
sbb
cltd
sub
mov
inc
jecxz
andb
inc
cmp
fsubl
and
push
sahf
insl
sub
popa
xchg
mov
dec
jbe
cltd
cltd
mov
ja
sahf
jnp
xchg
fbstp
push
mov
and
push
lcall
or
jl
push
scas
mov
mov
fst
jno
out
movsl
xchg
mov
xlat
sbb
lcall
mov
or
and
int
test
dec
loope
cmp
aaa
mov
dec
dec
xchg
xchg
inc
movsb
out
out
and
push
mov
or
pusha
jmp
add
cwtl
dec
inc
aaa
in
pop
mov
test
sub
lea
test
mov
sbb
mov
sbb
cmpl
cmp
incb
push
mov
mov
xchg
loopne
dec
and
rcl
sub
outsb
lods
mov
cmp
push
addr16
ficoms
inc
sub
in
pop
stos
fimuls
sar
cld
test
xchg
mov
push
pusha
xor
xchg
imul
imul
ficoms
sbbl
out
jp
out
in
adc
and
mov
and
icebp
cli
out
ss
lret
les
adc
xor
mov
icebp
jb
fcomi
pop
lea
imul
shrl
mov
aam
dec
jl
loopne
lahf
fdivrs
pop
mov
push
and
movzbl
fidivl
cmp
rcll
pop
int
sbb
sbb
rolb
lret
lods
xlat
stc
cwtl
jp
sub
and
jae
ja
arpl
inc
jnp
data16
add
add
push
or
pop
out
repz
sub
test
add
push
xchg
mov
sbb
pop
loopne
mov
inc
jecxz
fwait
jecxz
jb
out
aas
mov
push
push
lds
jl
imul
cmp
mov
cld
and
sbb
popl
das
adc
cld
mov
pop
fcompl
in
shrl
and
and
dec
xor
fsubrl
sbb
push
dec
bnd
shlb
out
sub
mov
imul
andl
loope
rorb
sbb
mov
mov
test
cmp
push
jecxz
repz
rorl
aas
cmpsl
pusha
loope
aam
dec
or
xor
xor
aad
aad
xor
test
scas
fstpl
cmp
xchg
xchg
sbb
dec
movsb
lcall
out
cwtl
pop
mov
sub
sbb
repnz
rorb
cmp
fcomp
daa
iret
ljmp
inc
mov
jl
mov
inc
jo
xorl
jp
or
mov
jno
addr16
mov
add
loopne
push
mov
xor
xchg
in
mov
adc
pop
xor
push
enter
fisubl
test
insl
arpl
aam
lret
mov
push
insl
scas
xchg
xor
call
jmp
xchg
inc
les
adc
push
mov
dec
repnz
mov
and
dec
pop
sahf
inc
pop
movsl
dec
std
loop
push
loop
push
or
test
adc
mov
xchg
cmp
into
mov
popa
xchg
and
stos
jno
scas
cmp
stc
pop
fsubs
adc
adcl
mov
inc
dec
arpl
add
sub
mov
mov
data16
addr16
jg
push
push
out
imulb
mov
add
arpl
es
addr16
xor
in
movsb
adc
xchg
aam
xchg
aaa
xchg
jecxz
cmp
cmpsl
cmp
inc
push
pop
hlt
fistpll
inc
xor
loopne
sub
adc
call
sbb
pushf
loopne
out
mov
jne
hlt
pop
cmp
icebp
lea
hlt
mov
pop
and
test
fdivs
repz
xor
addl
insl
mov
aam
inc
fcomps
or
ret
xchg
add
ljmp
or
test
lret
and
lods
in
lret
jp
stos
out
cmp
in
adc
js
dec
scas
ja
sbb
jecxz,pt
mov
shrb
and
push
mov
ja
add
lret
sbb
dec
cmp
iret
sbb
es
xchg
push
lcall
pop
and
sub
dec
loope
sarb
out
dec
fdiv
jno
add
pop
leave
and
repz
dec
inc
or
shrb
jbe
cmp
mov
fcom
lret
imul
add
pop
fbstp
add
sbb
pop
fwait
sbb
sarb
mov
stos
sub
jne
jecxz
add
enter
dec
popl
xor
fisubs
sbb
dec
pop
icebp
xor
out
ljmp
xor
dec
xor
dec
int3
in
pushf
pop
push
ret
popa
inc
in
psubq
jb
pop
stos
xor
loopne
loopne
mov
pop
gs
sub
xor
xorb
mov
jmp
or
jo
fistpll
jo,pn
pop
add
pop
or
lcall
sub
push
jne
cmp
bnd
lods
push
shrb
jae
inc
out
inc
dec
mov
repnz
xchg
stos
xchg
data16
daa
pop
dec
fimull
cmp
pop
add
xchg
loope
inc
ret
adc
jge
ja
adcb
adc
mov
dec
pop
imul
and
xchg
push
xchg
clc
pop
fs
mov
test
xorl
xor
int
dec
sar
adc
loope
sahf
add
dec
jae
pop
sbb
inc
out
push
and
int
xchg
jge
pop
xchg
cli
movsb
inc
and
lock
push
repz
add
push
icebp
loop
clc
and
js
mov
push
sub
push
mov
sti
jno
fildll
inc
or
xor
xchg
add
addr16
lds
cmpsl
cmp
je
dec
mov
scas
dec
mov
hlt
rcrl
in
fisubs
iret
inc
mov
cltd
mov
xchg
sub
pop
add
rorb
ret
inc
mov
fidivrl
push
pop
push
inc
mov
in
rorb
push
add
dec
out
ja
idiv
pop
out
dec
mulb
loope
mov
add
xor
xor
jno
and
pop
dec
scas
or
ljmp
je
data16
es
sub
mov
jg
inc
sti
in
ficoms
cmp
mov
rorb
sbb
add
std
dec
adc
aam
cmp
mov
mov
push
cmp
adc
int3
loopne
add
dec
stos
xor
push
xchg
daa
mov
jg
outsl
inc
inc
lcall
out
add
ficompl
loope
scas
push
sbb
scas
dec
shr
push
insl
mov
and
inc
mov
incl
daa
fdiv
adc
sbb
insb
pop
stc
xor
xor
pop
enter
movsb
xor
jmp
dec
fmull
in
orb
hlt
xor
orb
lcall
push
iret
loop
jns
iret
sub
inc
xchg
pop
test
adc
xor
or
xchg
out
call
pop
mov
aas
aam
jbe
sahf
jle
pop
xchg
cmp
xchg
lcall
insb
popa
mov
cmp
and
inc
push
adc
xor
cmpsl
dec
cld
mov
inc
xchg
mov
data16
pop
xchg
sub
or
mov
rorl
mov
cmp
lret
pop
int3
loopne
dec
push
out
and
push
mov
stc
pop
stos
int
aaa
inc
ss
jecxz
clc
frstor
inc
lcall
add
and
int3
loope
sub
dec
cmp
test
ds
out
rcll
push
cmpl
sbb
aad
cs
push
xchg
orl
mov
cmpb
xorb
dec
jmp
aas
pop
mov
lahf
nop
adc
adc
ss
popf
test
dec
in
pop
xchg
push
xchg
sbb
mov
lret
sub
dec
or
test
jecxz
lods
mov
pop
test
xchg
push
lods
addr16
xchg
and
test
sbb
sub
cmp
das
pop
or
inc
ss
cwtl
in
lret
aas
push
repz
add
adc
sub
imull
fsubrs
aad
sbb
cmp
pop
adc
jmp
jge
inc
mov
xor
pop
push
cld
in
mov
add
mov
pop
jecxz
sti
mov
test
mov
add
adc
lcall
dec
in
push
dec
cs
repnz
pop
xchg
daa
inc
repnz
lcall
ljmp
test
jb
insb
lea
mov
sub
xor
xchg
test
jne
shl
inc
and
call
dec
inc
rorl
push
jecxz
push
in
cmp
push
and
enter
push
js
outsl
push
sbb
mov
mov
jae
lock
mov
rorb
pusha
xchg
mov
xor
mov
pop
dec
inc
paddusb
gs
inc
std
and
dec
or
jne
jle
xchg
clc
orl
pop
pop
mov
pop
sahf
and
push
jo
pop
outsb
cwtl
or
inc
fsts
adc
mov
push
ds
stos
jg
mov
jbe
push
or
les
xor
shll
pushf
rorl
xchg
fdivp
lret
stos
push
cmpsb
mov
xchg
clc
aaa
lock
jns
iret
mov
sub
pop
aas
scas
sbb
shll
pop
aaa
adc
xchg
xor
dec
mov
imul
mov
ret
loop
xchg
cltd
mov
jge
fistl
jge
lods
imul
xor
inc
jae
lret
std
jg
gs
repnz
cltd
fwait
das
sub
je
xchg
lea
bnd
mov
dec
ja
inc
xchg
jl
push
in
inc
je
test
mov
pop
jge
xor
or
jle
jbe
cmp
sbb
push
popf
cmp
push
push
dec
fadd
psubusw
cld
inc
std
inc
movsb
es
fs
push
popf
pop
push
push
xchg
add
iret
mov
lea
jg
mov
adc
jmp
test
lods
iret
out
movsb
mov
daa
sbb
and
xchg
mov
cltd
scas
cli
jecxz
mov
pop
or
adc
add
cltd
adc
mov
stos
ds
add
lret
cmp
mov
enter
push
jo
xor
into
psrld
mov
adc
repz
mov
lock
mov
or
cli
push
icebp
adc
sbb
xor
jns
sti
test
scas
cmp
ret
or
test
xor
sahf
xor
mov
push
popl
add
adc
test
loop
lds
mov
sub
inc
dec
push
sub
adc
in
mov
xor
loope
cs
aas
cmc
mov
ret
js
pushf
inc
cmp
cltd
fwait
push
dec
mov
nop
xchg
inc
in
mov
mov
mov
add
push
stos
test
lret
push
pop
xchg
fldt
push
int3
test
jle
xchg
sarl
push
negl
insl
fldenv
cmpsl
test
movsl
movsb
cmp
pop
into
and
int
addr16
sub
ljmp
jecxz
test
sbb
dec
rcl
in
mov
std
push
shll
pop
pop
jnp
dec
fisttps
ficoml
sarl
pop
stc
shll
sti
pop
shlb
pop
inc
leave
cmp
test
inc
into
cmpsl
cmp
enter
jns
push
mov
xchg
js
adc
pop
inc
add
mov
sbb
push
dec
or
test
insl
fsts
lret
aad
loope
dec
jmp
lods
test
decb
pop
pop
and
sbb
inc
add
daa
fcomps
jo
cmp
and
mov
enter
cs
mov
mov
enter
mov
cmpsl
insb
mov
inc
mov
inc
in
lret
jno
sbb
jnp
movsl
jne
out
xchg
inc
js
repnz
mov
scas
loop
push
adc
and
or
out
push
and
push
shll
xchg
jle
sbb
fwait
push
xchg
xchg
or
jbe
popf
push
and
push
in
into
aam
lret
test
cmp
xchg
add
hlt
ret
pop
pop
das
add
or
or
adc
adc
mov
rcr
pop
push
adc
cmp
addr16
jne
dec
addr16
pop
sbb
pop
icebp
cwtl
sbb
pop
cmp
pop
jbe
lds
and
jl
lcall
xchg
test
push
mov
mov
mov
jb
aaa
inc
sbb
pop
mov
cltd
add
jmp
adc
add
shrl
xchg
push
pop
ret
xlat
mov
imul
das
jge
sbb
add
insb
inc
jno
adc
sub
hlt
fldt
ror
cmp
pop
dec
push
inc
mov
insl
mov
mov
mov
repnz
mov
jg
add
stc
std
in
mov
mov
std
pop
xor
cltd
in
xor
xchg
add
test
add
insl
shlb
jge
or
arpl
dec
inc
mov
dec
ja
jmp
popa
mov
xchg
js
daa
loopne
repz
xor
pusha
xor
jge
and
mov
or
lret
cmp
fs
repz
fdivr
cltd
lret
sti
xlat
jne
xchg
stc
xor
nop
dec
mov
jae
dec
sti
fistl
lds
popf
mov
push
add
mov
daa
or
fstpt
in
outsl
addl
adc
je
dec
push
pop
int
xchg
scas
xchg
out
sub
mov
aam
enter
enter
add
mov
pop
clc
push
xchg
repz
mov
aas
popf
mov
lds
stos
cwtl
ret
mov
dec
lods
xchg
popf
pop
xor
cmc
repz
lcall
push
push
push
inc
sbb
sub
inc
pop
xchg
or
fldenv
jmp
lcall
insl
pop
daa
insb
dec
or
or
pop
mov
shlb
iret
push
sub
push
add
scas
push
mov
dec
mov
adc
mov
xchg
sbb
inc
incb
jb
loopne
pop
cmp
adc
je
mov
and
and
lock
pop
mov
add
xor
cld
cld
in
and
xchg
ret
insb
pushf
cmp
aam
inc
inc
mov
xor
outsl
or
jae
or
xchg
dec
and
rcll
scas
mov
push
test
adc
jns
xchg
gs
sbb
fstps
lods
xchg
push
xor
enter
pop
cs
push
cs
in
std
xchg
xlat
and
in
dec
insb
xchg
xchg
lret
cmpsl
push
and
pop
mov
jnp
inc
jns
loopne
imulb
xor
jns
outsl
cmpsb
xchg
les
sbb
lret
mov
aaa
dec
arpl
mov
mov
mov
xchg
adc
out
pop
xchg
push
jg
mov
sub
pop
inc
outsl
mov
add
stos
add
out
dec
dec
sub
sub
insb
call
arpl
mov
shlb
jp
and
inc
push
sbb
jb
and
insl
mov
jo
adc
add
add
rolb
out
sub
pmaxub
pop
xchg
add
icebp
jle,pt
incb
subl
iret
adc
stc
inc
push
and
push
loopne
jb
jno
aam
daa
mov
push
mov
push
inc
rcll
or
std
push
and
sbb
notb
shl
loopne
das
movsb
sbb
test
inc
fisttpl
ds
jne
aad
xor
mov
dec
and
fisubrl
out
jbe
cmp
jnp
jl
pop
adc
or
adc
mov
in
xchg
push
mov
in
jge
outsb
xchg
ja
mov
mov
cld
iret
fs
sbb
jns
popa
mov
sub
xchg
xchg
fsts
ss
fsincos
lahf
mov
leave
scas
pop
inc
dec
test
aad
inc
jbe
dec
adc
test
sub
adc
sarb
cltd
ret
push
aaa
cmp
pop
out
mov
or
cmpsb
into
push
ss
xchg
and
neg
xchg
jle
dec
lds
inc
sbb
adc
xchg
sub
rorw
fidivrs
aad
or
orl
mov
pop
inc
or
cmp
xorb
arpl
pop
fs
int
jns
test
inc
mov
sbb
cmp
cmp
xor
insb
cmp
hlt
cmp
ds
fldt
test
push
push
pop
push
cmpsl
xchg
adc
repnz
sub
scas
cli
push
out
inc
sbb
dec
lds
pop
repz
insb
shlb
mov
mov
sbb
inc
adcl
movsb
mov
mov
cmp
icebp
repnz
xor
insl
lods
mov
mov
pop
aam
push
loopne
push
and
xchg
mov
and
mov
out
add
rclb
mov
in
push
rcrb
testb
cmpsl
pop
je
int3
mov
pop
jne
push
push
cmpsl
ret
xchg
pop
pop
sahf
cltd
dec
sbb
inc
xchg
out
jmp
in
movsl
call
jo
popa
stos
mov
insb
dec
mov
test
mov
cmp
popl
loop
fiadds
cwtl
pop
aaa
xchg
ja
push
scas
cmp
jns
stos
cmp
outsl
jno
sbb
jbe
sub
repz
mov
add
popa
data16
rcrl
xor
test
stos
loope
add
test
add
xor
int
xchg
jae
sub
imul
and
cmpsb
repz
jo
pop
push
adc
or
pop
bound
jae
imul
inc
xchg
fcmovnbe
mov
clc
add
outsb
mov
jg
cmp
outsl
popf
sbb
mov
jle
push
aaa
ds
mov
jmp
jp
jno
into
sbb
push
mov
inc
lods
mov
jbe
jo
xchg
lds
icebp
adc
and
loop
mov
mov
inc
std
jnp
loop
lahf
scas
xchg
mov
call
rcll
imul
sbb
mov
cmpsl
jge
sbb
out
cld
fiaddl
shll
andl
dec
push
mov
shlb
jl
imul
mov
arpl
ffree
or
lret
dec
add
jb
mov
jecxz
std
adc
pop
mov
in
repnz
push
jno
mov
and
loopne
in
mov
sub
push
fsubs
mov
je
cld
dec
frstor
shlb
stc
pushf
jns
jg
xor
in
repnz
insb
mov
xchg
addr16
lret
cmp
repnz
jno
jmp
jp
push
mov
xor
pop
pop
and
test
pop
andb
lea
add
push
xchg
fisubl
dec
xchg
int3
mov
or
dec
lcall
or
push
mov
push
inc
cmpsb
leave
icebp
sbb
aam
lea
pop
jp
dec
mov
lret
subps
or
mov
inc
sub
push
test
movsl
xor
cltd
popa
sub
mov
mov
mov
test
fnstenv
inc
inc
or
loope
push
aam
sbb
jp
mov
andb
pop
push
push
jne
sahf
js
and
xchg
mov
push
ret
aaa
mov
mov
cs
sub
inc
add
ret
sub
je
adc
xlat
test
add
in
mov
hlt
and
pop
stos
or
push
mov
int3
pop
mov
and
mov
sbb
dec
popa
jnp
or
jno
xchg
xor
in
sub
jb
sbb
cs
cmp
pop
movsl
add
add
cmp
cli
in
jg
loopne
xchg
cwtd
add
test
add
inc
adc
push
adc
lock
out
addr16
adc
dec
sbb
mov
cmp
arpl
das
cltd
lods
aaa
repnz
jge
xchg
push
or
lret
sub
mov
jno
cmc
enter
lock
test
fwait
push
xor
test
dec
dec
lret
xchg
adc
dec
orb
and
ljmp
fsubl
push
lods
mov
cmpb
fiaddl
cld
test
scas
xchg
xor
xor
and
ja
dec
cmp
lret
mov
jae
jle
mov
fisttpl
cs
or
mov
loopne
xchg
dec
sahf
mov
jle
mov
xchg
fiaddl
sbb
xchg
sub
rorl
add
push
test
les
dec
jno
jp
mov
and
cld
sahf
mov
or
or
enter
jle
sar
popa
ret
mov
sbbb
aas
jae
outsb
into
inc
aaa
cmpsl
arpl
adc
mov
ffree
xchg
xchg
loop
xor
mov
dec
test
add
pop
adc
push
movsb
xchg
shlb
es
sub
mov
mov
inc
call
pop
iret
adc
jns
push
aad
pusha
sbb
ds
xchg
fwait
adc
sub
fimuls
dec
mov
inc
gs
sbb
xchg
aas
mul
push
icebp
cld
cli
jbe
push
xor
mov
fs
push
mov
insb
sub
mov
loop
mov
imul
cmpsb
mov
ds
mov
pop
outsl
sbb
mov
ret
cmpsl
pop
cmpsb
xchg
dec
cmpsb
jecxz
sbb
scas
in
pop
inc
mov
js
movb
addl
mov
jge
mov
mov
in
adc
jnp
jns
push
clc
jnp
int3
jo
mov
mov
imul
dec
sub
insl
ret
push
inc
jmp
ficomps
pushf
in
stos
xchg
dec
push
stos
xchg
push
mov
dec
clc
mov
outsl
ds
addr16
cmp
movsb
sub
pop
mov
mov
push
pop
sub
fisttpll
dec
cwtl
bound
xor
in
add
adc
loop
mov
add
add
jmp
aas
adc
mov
and
push
push
cmpsb
and
pushf
add
fwait
add
test
add
lods
adc
insl
inc
xor
int
iret
inc
mov
jl
out
insb
inc
stc
bnd
dec
push
inc
and
jmp
pop
jno
faddl
test
insl
and
lods
cmp
pop
pop
and
clc
push
stc
sub
adcl
and
int
dec
shlb
inc
loope
int
repz
pop
stc
ljmp
jns
cli
fs
sbb
push
popa
xchg
jle
popf
push
add
das
sub
cmpsl
cmp
sbb
xlat
sarl
mov
push
int
adc
xor
ret
mov
cli
jl
pop
aas
pop
imul
xor
cli
pop
cmp
push
sbb
or
xlat
jno
dec
xchg
and
aas
repz
orb
pop
cmp
testb
fistpl
and
repz
jecxz
gs
cld
orb
and
add
xchg
in
push
pop
movsb
jne
aaa
pop
outsl
mov
mov
inc
mov
xor
sub
loopne
outsb
xchg
sub
and
cmp
addr16
jae
in
jbe
sub
daa
in
mov
lret
ja
mov
dec
ror
into
adc
xchg
jl
mov
adc
inc
mov
inc
loope
add
pushf
into
rcrl
mov
xor
xor
outsb
stos
jg
xlat
jg
push
shrb
add
out
in
inc
ljmp
imul
std
int3
add
cs
mov
sbb
jmp
inc
jmp
add
adc
pop
into
int
adc
ja
cmp
out
xchg
sbb
cmp
dec
cs
xchg
clc
mov
testl
cmpsl
out
mov
fstl
push
dec
mov
aas
mov
dec
lock
fsubrl
in
xor
xchg
cld
ret
push
pop
jg
loop
std
push
cld
sub
lret
and
imull
enter
fs
sub
push
push
in
or
inc
data16
sub
cmp
jle
je
mov
push
jb
sub
pop
inc
xchg
aam
stos
adc
je
ja
mov
mov
mov
ds
enter
sbb
adc
sahf
xor
xor
add
mov
pop
mov
int
adc
sbb
push
add
add
cmp
mov
add
cli
in
sahf
add
test
add
sub
in
ficoml
js
or
jl
jnp
add
sub
cmp
jmp
repnz
cmc
jns
lods
pop
testb
push
test
in
or
push
ljmp
dec
jbe
mov
shl
add
jg
js
fcomps
adc
add
rolb
insl
jmp
je
pusha
shll
dec
jbe
daa
nop
frstor
daa
je
jns
std
pop
test
adc
rcrl
lods
or
out
ds
pop
mov
push
mov
int3
test
mov
pop
lret
loope
or
fxch
adc
imul
push
sub
popf
addr16
jmp
dec
pop
jbe
push
aad
and
imul
adc
insl
psubb
inc
jne
xor
fisubrl
and
stc
jne
dec
xlat
pop
add
and
int3
xchg
xchg
fimull
mov
pop
es
add
fists
cld
ss
inc
adc
hlt
nop
ds
xchg
movsb
mov
enter
push
notb
dec
in
cmp
sahf
pop
jle
pop
mov
movsl
cmp
jl
xlat
sub
jae
cmp
sarl
sub
hlt
sub
push
in
fiadds
xor
pop
cwtl
pop
shl
mov
ds
dec
inc
imul
imul
push
sahf
adc
xor
imul
hlt
adc
mov
in
imul
adc
pop
fcoms
pop
mov
insb
lcall
mov
jae
add
out
fimull
inc
lahf
pushw
stc
sarl
fcoms
pop
int
mov
cmp
jecxz
test
adc
jecxz
lods
gs
lods
pop
mov
inc
inc
rolb
out
inc
pop
xor
ret
or
in
call
pop
add
sub
push
pusha
mov
mov
xchg
loopne
imul
adc
cmpsl
enter
xor
xchg
mov
aas
ds
outsl
loop
hlt
push
push
imul
lcall
jae
ret
and
cltd
mov
arpl
add
mov
test
add
mov
or
inc
adc
les
inc
icebp
fmuls
aad
add
mulb
xchg
popf
pop
gs
push
add
add
inc
mov
and
cmc
mov
add
icebp
push
jb
mov
pop
xchg
xchg
mov
jnp
and
rorb
jno
mov
xchg
rorb
out
add
mov
fwait
push
mov
xchg
ljmp
repnz
xchg
lds
or
mulb
es
xor
lea
mov
ficompl
mov
aad
adc
or
ja
outsb
adc
mov
stos
dec
lods
lock
sbb
fstpt
vpunpckhwd
pop
pushf
arpl
fisttpll
xor
fs
mov
mov
popf
idiv
jbe
movsl
sbbb
stos
sub
or
jecxz
jns
pop
rcrl
pop
in
inc
aas
sbb
push
xchg
cmpsl
dec
xorb
and
cmp
pop
dec
dec
jb
jb
push
loope
cmp
pop
imul
pop
rorl
shr
sbb
sbb
cwtl
icebp
clc
dec
shrb
jle
mov
imul
pop
and
pusha
xor
ja
jl
aaa
pusha
sbb
jecxz
lea
jg
out
std
inc
or
mov
mov
mov
push
lods
scas
out
adc
inc
js
pop
sbb
stos
jge
jp
icebp
jg
jmp
das
dec
and
stc
dec
sub
pop
mov
int3
add
inc
aad
mov
sbb
xor
lods
mov
push
or
mov
sub
and
sbb
sahf
jle
dec
add
popf
adc
jne
push
in
dec
int3
stos
sbb
dec
cmp
fwait
cmp
das
cmpxchg
jno
push
cmp
aam
out
scas
mov
lcall
mov
fnsave
cmp
ljmp
mov
adc
bndldx
addr16
jmp
xchg
mov
xchg
sub
jae
cmp
dec
add
xor
out
sub
enter
mov
fldenv
cmp
icebp
mov
jecxz
mov
mov
sub
dec
lcall
jmp
or
mov
fstpl
inc
loop
orl
mov
xor
lock
fists
or
ret
das
add
add
mov
cmp
jle
xor
fsubp
and
mov
add
daa
xor
sti
je
sahf
pop
push
mov
cmp
out
lret
mov
cmp
loope
aad
js
cli
nop
lock
addr16
sub
arpl
test
pop
data16
lods
ret
cmpb
pop
jl
movsl
jb
js
inc
xchg
mov
outsb
xor
or
pop
jecxz
adc
hlt
cld
jmp
aam
stc
or
xor
ja
inc
adc
push
mov
or
push
cwtl
cwtl
call
testb
sub
pop
test
and
or
repz
shlb
or
mov
inc
divl
add
sti
xchg
lret
and
dec
movsl
fdivrl
rcrl
clc
inc
jp
push
lds
add
lcall
dec
jns
adc
inc
cmp
dec
mov
push
add
push
fcomps
and
in
out
fnstenv
imul
lahf
or
mov
jbe
imulb
hlt
shll
and
pop
jl
mov
cld
xchg
xchg
jmp
mov
cmp
pop
gs
xchg
add
enter
cmpsl
push
shll
es
xor
insl
clc
cmp
pop
fxch
jae
mov
xchg
mov
pop
xor
pop
stos
iret
xchg
arpl
mov
jp
xor
pop
inc
xchg
jge
das
rolb
aam
fwait
js
sbb
bound
pop
pop
sub
fs
mov
mov
sbb
and
push
repnz
out
xor
adcb
lahf
cmp
push
mov
mov
sub
call
ffreep
add
and
add
dec
xchg
call
std
push
xchg
add
js
ja
xor
push
sub
xor
mov
or
cmc
xchg
fiaddl
mov
into
mov
mov
daa
pop
ret
iret
xor
dec
loopne
das
shrl
movsl
insb
xchg
testl
popa
fwait
lea
mov
ja
leave
and
and
je
inc
jno
sbb
push
mov
hlt
test
inc
cld
mov
cld
mov
scas
lret
repnz
mov
mov
std
daa
adc
mov
pop
push
push
stos
imul
add
jns
add
inc
sbb
add
cmp
out
idivl
mov
xor
movsl
add
test
add
decb
stos
push
xchg
cmpsl
adc
lahf
decl
jl
fdivrl
loop
inc
push
sbb
cmp
shrl
int3
stos
stc
shlb
sti
ja
dec
test
add
push
cltd
add
andb
cmp
inc
xchg
cmp
xchg
mov
je
mov
icebp
dec
dec
cmp
mov
repz
dec
sbb
mov
test
jmp
sar
adc
add
mov
ret
push
adc
add
arpl
lods
pop
push
pop
or
test
sbb
ret
sub
sbb
rcrl
hlt
sbb
xchg
gs
aaa
jo
sbbb
cmpsl
fdivl
nop
or
ret
adc
fdiv
aas
push
clc
or
les
popa
in
xchg
cwtl
out
mov
sub
jb
push
cs
js
ljmp
sub
push
sub
cmpsl
les
jg
out
sub
jecxz
cmp
arpl
lock
ja
fcmovnu
jge
mov
pushf
jb
push
xchg
aas
mov
in
cmp
movsl
jae
inc
or
fs
das
insl
inc
out
cmp
and
fwait
test
hlt
dec
jl
push
jb
mov
sub
sbb
mov
in
ds
mov
or
cmp
ja
stos
xchg
fnstenv
sti
insb
and
mul
test
push
xor
mov
adc
call
movsb
sub
cwtl
out
pop
or
add
in
add
cmp
iret
xor
push
xorb
xchg
ja
dec
jp
mov
fldenv
subl
cmp
enter
dec
daa
out
dec
mov
inc
ljmp
dec
gs
arpl
cmp
mov
mov
jle
sub
fwait
loop
jp
dec
xchg
or
subb
test
test
sub
add
add
push
mov
add
mov
icebp
push
movsb
jo
dec
pop
std
inc
lds
mov
outsb
lea
pop
mov
icebp
jno
insb
sub
sbbl
gs
mov
mov
mov
and
repz
adc
icebp
sbb
dec
or
negb
mov
mov
jmp
mov
push
lea
ret
add
gs
fcompp
out
gs
notb
test
add
fidivl
test
ja
sbb
shl
mov
inc
pop
dec
fisubl
mov
imul
mov
mov
push
jbe
sahf
push
daa
cltd
xlat
gs
add
xchg
mov
aas
ljmp
rcr
mov
shl
mov
mov
adc
mov
aaa
pop
test
xor
pop
pop
pop
cmp
fldl2t
or
repnz
sub
jge
inc
fwait
push
int
in
inc
dec
jno
iret
es
inc
sbb
cmc
je
mov
mov
or
test
in
insl
push
push
add
mov
std
jmp
data16
test
mov
loop
push
jecxz
mov
xor
mov
popf
cmc
add
jp
or
cmpsl
xchg
sarb
push
xchg
ja
loop
or
loop
dec
xchg
arpl
pop
fistps
outsb
cltd
or
lods
enter
sub
test
push
iret
sub
repnz
adc
or
pop
add
pop
mov
ja
adc
xor
dec
lea
in
push
mov
inc
xor
negb
rolb
adc
cs
fdivrs
or
cwtl
jle
jle
stos
xor
pop
mov
mov
aad
shlb
aam
or
hlt
xchg
rorl
mov
fisttps
mov
jae
or
add
xchg
sbb
loop
xchg
scas
push
arpl
dec
gs
or
ror
push
pop
add
xorb
inc
xor
in
or
les
or
mov
jae
add
cmpb
jl
add
xchg
addr16
lock
xchg
lahf
into
and
shl
adc
adc
shrl
lahf
stos
adc
fsubrl
mov
push
mov
mov
iret
je
inc
xchg
inc
add
mov
dec
cmpsb
stc
cmc
mov
dec
cwtl
push
xchg
add
addr16
adc
aaa
add
push
and
jge
mov
aas
inc
ret
add
test
mov
mov
ja
inc
test
push
clc
enter
inc
push
inc
or
pop
mov
scas
cmp
inc
lods
pop
aas
mov
mov
cld
jnp
pop
int
lahf
or
mov
add
add
fsubs
jmp
adc
sub
iret
adc
stos
add
test
add
lods
cld
jl
fstpl
cmpsb
adc
jo
jo
or
mov
dec
sbb
out
push
ss
mov
mov
sbb
adcb
sub
es
fucomi
xchg
fwait
sub
nop
mov
cld
popa
and
or
popf
inc
cmp
decb
sbb
lahf
xchg
jb
mov
cmp
inc
addr16
push
in
push
xor
and
mov
cmp
mov
in
sahf
adc
cmp
add
pop
enter
push
lods
jnp
repz
fcoms
je
jo
sbb
mov
or
dec
mov
mov
jno
mov
dec
pop
pushf
es
cmpl
out
jl
sub
xchg
dec
das
and
loope
jno
lret
jae
sub
adc
jecxz
and
subb
sub
xor
mov
fwait
jns
jge
cwtl
jmp
mov
xor
cmp
xchg
fistps
cmc
std
in
cmpsl
int3
push
inc
out
jg
bsr
ret
push
fs
add
hlt
cld
fsubs
dec
xchg
add
int3
mov
mov
push
mov
push
jae
ss
int
sahf
xchg
jae
mov
and
cmpsb
xorl
or
add
mov
jns
xchg
pushf
or
fsubrs
test
icebp
dec
addr16
repnz
jg
mov
stos
repnz
dec
aas
or
pop
cmc
cmpsl
cmp
push
test
push
lret
mov
xor
rclb
cmc
xchg
jp
sub
xor
and
hlt
inc
mov
inc
testl
dec
int3
in
rcrb
pop
sbb
xor
iret
dec
push
iret
inc
js
rorl
shl
mov
and
fiaddl
ret
sub
jecxz
test
shr
dec
or
aaa
nop
xchg
int
fisubs
jno
neg
push
js
dec
lock
movsl
out
mov
push
inc
xchg
fisttpll
popf
movsl
mov
or
sbb
dec
mov
out
ljmp
pop
icebp
je
jns
int
dec
adc
test
mov
stos
je
inc
inc
sbb
out
mov
and
pop
psubusb
jecxz
push
ds
in
aaa
scas
add
add
and
xor
adc
ljmp
add
aas
xor
ret
jecxz
repz
popa
stos
adc
neg
sub
dec
add
mov
daa
jns
push
mov
loope
das
mov
jl
cmp
std
sahf
stc
andl
xor
jecxz
pusha
add
mov
inc
sub
stc
div
and
das
iret
cwtl
ljmp
pop
fst
ret
xchg
rclb
hlt
movsb
daa
xor
scas
pop
ljmp
dec
sbb
enter
data16
xchg
arpl
iret
push
xchg
xor
sbb
jne
in
aas
jle
lret
outsb
jbe
pop
cmc
mov
inc
cld
add
fsub
jmp
movl
and
mov
cmp
sar
pop
aas
les
lods
dec
mov
dec
int
mov
ljmp
fisttpl
ljmp
and
bound
in
xchg
dec
roll
leave
iret
adc
xor
push
in
sbb
and
es
jo
arpl
bound
aam
adc
xchg
scas
inc
in
jbe
adc
push
xchg
shrb
std
xor
mov
fwait
adc
lcall
aad
push
and
pushf
pop
cmp
pop
pusha
inc
add
mov
lcall
int3
mov
leave
fcoms
aaa
fdivs
add
cmp
iret
aad
sarb
lds
movsl
nop
adc
pop
fcomi
push
fildll
sbb
cmp
stos
push
mov
push
test
outsb
popf
ret
adcb
push
dec
mov
push
dec
jge
imul
inc
loop
adc
cmp
or
adc
ja
xor
lds
xchg
test
sub
in
inc
sub
and
cli
or
jle
ficoms
lahf
stos
sub
insl
ds
mov
shl
hlt
jle
filds
or
mov
cmp
pop
shrb
mov
test
jecxz
insl
and
pop
push
push
js
sbb
addr16
mov
cmp
jne
aam
sbb
inc
push
xchg
xchg
rorb
fadds
pop
jmp
sbb
pushf
or
or
add
pop
mov
jg
popa
hlt
mov
rclb
mov
add
shll
lods
iret
imul
in
jbe
xor
leave
int
int3
or
sub
xor
ljmp
mov
lahf
sarl
fisttpll
and
adc
clc
push
xor
mov
ds
mov
jg
ja
ds
cld
fbstp
imul
push
out
idivl
imul
ja
jb
xchg
cltd
adc
fisttpl
mov
pop
les
insl
xchg
cld
mov
hlt
lock
mov
jne
repz
sbb
insl
test
xlat
sbb
nop
sub
mov
stos
cmp
mov
loop
aam
mov
subl
les
movsl
or
mov
add
cmp
ret
xor
jnp
mov
shl
into
shr
fstps
cmp
and
leave
fists
jp
divb
fcoml
sti
sbb
dec
pop
or
jge
insl
enter
lcall
mov
jnp
push
aad
mov
cltd
std
xor
jg
inc
faddl
ficoms
push
sbbb
data16
dec
jb
test
sub
inc
incl
push
adc
cmp
data16
es
mov
lret
aas
push
and
std
lcall
or
push
test
inc
xor
aad
mov
fisubs
push
shrl
addl
xchg
push
fwait
mov
push
dec
arpl
push
xchg
pusha
mov
rorb
jg
or
mov
jae
cmp
mov
inc
cmp
jge
push
fcmovbe
sbb
aas
jmp
xchg
or
mov
cmpps
int3
push
rol
cmp
push
cmp
or
jecxz
cwtl
int3
in
sub
std
iret
pop
test
rclb
int3
pop
and
add
mov
xor
sti
sti
push
push
pushf
stc
into
mov
xchg
sbb
stos
rcll
xlat
je
jp
test
xor
sbb
push
push
adc
mov
rol
sub
xor
add
mov
sbb
jp
fstps
add
push
jno
sti
push
push
mov
push
imul
pop
scas
lds
idivb
cli
mov
leave
out
sub
repnz
add
pusha
jbe
out
fnstsw
fidivs
cwtl
mov
add
mov
rcll
aaa
xlat
clc
arpl
imul
movsb
daa
into
mov
and
and
cmp
pushf
pop
pop
inc
rclb
call
push
inc
dec
in
mov
dec
scas
sbb
fs
sbb
fwait
ja
mov
pop
dec
adcb
push
imul
xlat
lahf
pop
fcoms
shl
pop
jl
scas
push
xchg
pop
inc
stos
and
ret
lcall
movsl
push
lods
jg
mov
test
mov
and
dec
inc
pop
xlat
fidivs
cwtl
jo
je
dec
mov
mov
push
cmp
icebp
pop
dec
cmp
dec
in
cmp
mov
jae
jne
xorl
jp
addl
jmp
bound
popl
adc
adc
lods
xor
mov
push
dec
les
movsl
jle
aaa
shlb
testl
scas
cmp
inc
add
or
mov
aad
out
pushf
je
xchg
ja
or
pop
sahf
sarl
and
ret
sbb
out
stos
pop
popa
test
lret
pop
mov
add
enter
cltd
jnp
shlb
jns
mov
es
sbb
out
sbb
add
push
mov
or
inc
sbb
jle
cmc
inc
outsb
test
inc
rcl
sub
pop
and
xchg
adc
inc
movsl
test
in
popa
imul
sti
push
xor
push
adcb
pop
ljmp
dec
mov
outsb
or
lcall
adcl
cmpsb
iret
and
adc
mov
cmp
sahf
fcomps
hlt
rcrb
sbbl
jl
in
sub
jecxz
fcompl
push
leave
push
cld
call
arpl
cmp
mov
xor
out
mov
insb
jbe
pop
push
sti
test
ret
push
inc
movsl
popa
and
sbb
out
pop
pop
rcll
push
pop
add
jle
dec
idiv
xor
inc
fisttps
loop
xchg
adc
jns
les
push
cmpsb
cli
sbb
push
test
lock
xchg
or
jecxz
test
xchg
mov
in
enter
add
push
das
push
add
jne
add
add
pop
lcall
inc
adc
lods
addb
mov
add
lods
or
push
cmp
dec
adc
adc
mov
sub
sub
jecxz
sub
pusha
mov
incl
lock
inc
cmp
rorb
lock
out
hlt
addr16
sbb
xor
movl
cs
pusha
push
push
adc
insl
test
sub
pushf
push
shrl
test
je
fdivrl
fimuls
jle
out
or
xchg
adc
xor
test
adc
xchg
xlat
xchg
cmc
ret
out
cmp
lret
and
pop
stos
push
nop
insb
or
shll
mov
mov
or
mov
xlat
pop
pop
pop
cmp
fwait
in
icebp
dec
rcr
jg
aaa
stos
das
mov
or
mov
cmc
or
fldt
fcompl
sbb
dec
pop
inc
add
xor
or
add
jle
mov
push
lret
repnz
ret
jae
or
sub
mov
jg
imul
xor
jmp
mov
mov
xor
xorps
xor
adc
mov
mov
mov
out
and
mov
sub
and
dec
mov
xchg
mov
or
repnz
sbb
cmp
lds
mov
pop
mov
lock
dec
add
push
popa
push
in
enter
mov
adc
lret
pop
jnp
push
jno
fcoms
and
scas
xchg
cmp
mov
loopne
orl
jmp
shl
dec
lret
add
insb
in
jae
add
aas
pop
rclb
push
mov
fs
add
rcll
rolb
inc
shlb
and
scas
adc
and
dec
mov
lcall
xchg
out
mov
ficomps
sbb
add
iret
and
push
es
hlt
push
xor
and
inc
xor
add
mov
xor
jmp
mov
pop
cmp
pop
dec
outsb
pusha
inc
jge
jle
push
sbb
lahf
cmp
lret
call
call
test
fcomps
mov
stos
mov
lret
cs
ja
pop
add
sub
xchg
sub
push
dec
lret
les
aad
jo
rorl
insb
sub
outsl
daa
insl
push
push
stos
adc
in
push
daa
mov
add
add
adc
pusha
pop
xchg
sub
jge
enter
loopne
mov
dec
mov
pop
jl
jmp
or
push
mov
movsb
addb
adc
int3
xlat
dec
push
jo
stos
stos
dec
jo
sbb
dec
fsubrl
call
jecxz
test
in
inc
jmp
loope
xchg
popf
sbb
and
je
int3
mov
push
mov
les
fistpll
sbb
loope
popf
pop
int3
mov
xor
insl
dec
ret
sarl
sbb
mov
arpl
pop
mov
das
ja
and
idivb
jle
xor
popa
lds
and
fcmovnb
shll
mov
mov
stc
adc
add
cld
pop
xchg
sti
jg
sbb
push
sub
and
subl
pop
pop
mov
inc
fs
mov
aad
xchg
out
std
pop
ficompl
iret
mov
push
adc
enter
loopne
shll
jge
insl
push
jno
mov
sahf
roll
popf
sbb
push
leave
test
inc
jae
xor
sti
das
mov
gs
mov
divl
xor
jns
jbe
xlat
inc
mov
repnz
icebp
adc
mov
xchg
test
sub
lods
inc
push
mov
repnz
push
xchg
mov
inc
fsts
pop
adc
jne
push
cmp
add
pop
dec
lods
pushf
pop
sbb
jmp
idivl
sarb
hlt
movsl
rcrb
aam
lea
add
dec
ja
dec
push
or
out
inc
push
cmp
lret
mov
xchg
loop
cltd
inc
leave
loope
and
push
cwtl
or
jle
inc
sub
xchg
movl
pop
xlat
sbb
push
fists
arpl
enter
dec
pop
xchg
sbb
enter
mov
repz
and
icebp
push
leave
test
sbb
xchg
sbb
push
sub
jns
lahf
xchg
arpl
cmpsb
sub
lea
fsubs
pop
sbb
pop
jl
lds
push
inc
imul
dec
out
xchg
int3
add
add
add
pop
and
mov
out
add
xchg
mov
mov
add
mov
int
jno
jo
mov
lods
mov
inc
push
insl
xchg
std
jge
push
int
or
fadds
test
xchg
aam
fidivrl
or
inc
cs
sbb
add
mov
sub
movsl
inc
mull
mov
rclb
iret
bound
sarl
jle
gs
lds
dec
lret
add
out
sbb
mov
mov
bound
cmp
push
mov
out
ret
sub
into
cmp
loope
mov
jb
mov
xor
lret
lods
sbb
arpl
sub
adc
xor
in
adc
add
lret
and
cmp
sub
mov
dec
mov
fisttpll
or
data16
mov
add
inc
adc
movsl
fdivs
push
ljmp
mov
sub
fcomps
add
outsb
popa
ret
loope
outsl
and
lods
repnz
fldenv
aam
xchg
jg
jmp
and
mov
jb
das
mov
add
rcll
mov
out
sti
xchg
sub
or
xor
out
aaa
or
xlat
xor
sbb
push
fisttps
lock
jp
in
mov
sub
sub
dec
push
andb
subl
and
or
scas
pop
sub
sbb
daa
add
mov
rorb
scas
mov
mov
hlt
cmp
and
stos
fcoml
addr16
into
cld
das
in
sbb
xchg
or
test
xor
loop
popf
push
jp
test
je
pop
mov
popf
lret
jns
push
push
idiv
scas
mov
xchg
xor
bound
cltd
fnstsw
push
subb
stc
ja
mov
push
nop
je
lcall
mov
mov
push
sbb
in
jge
jp
arpl
call
test
push
aas
dec
cmp
sub
cmp
sbb
cmp
push
das
mov
ja
xchg
xor
mov
inc
jne
or
into
imul
std
xor
mov
xchg
fmul
cmpsl
int
mov
xor
lock
xchg
pop
dec
in
sub
pop
stos
push
idiv
in
and
sub
add
cmp
mov
popa
cmp
test
add
mov
cld
lcall
cs
push
int
shll
xchg
and
adcl
jg
push
mov
arpl
js,pn
pop
mov
int
jmp
cs
jecxz
les
cmp
in
add
jne
jg
pop
xchg
icebp
in
adc
mov
out
test
fbld
in
sub
adc
add
stc
mov
mov
sub
test
adc
dec
imul
or
in
inc
sbb
or
jl
sub
push
pop
xchg
bound
testl
mov
outsb
fsubrs
stc
loope
stc
jecxz
and
and
jae
popf
sub
dec
test
xor
jno
mov
mov
int3
jno
mov
in
or
sbb
shr
loope
or
repnz
xchg
push
in
addr16
mov
adcl
jmp
add
cmc
jg
fdivr
cwtl
xlat
jge
push
jmp
subl
dec
popf
insb
jbe
or
out
sarl
cmp
inc
cmc
pusha
sbb
xor
dec
add
or
sub
es
and
lock
mov
fldl
imul
jge
aad
dec
add
std
int3
cltd
xchg
cmp
push
pop
xchg
sbb
xchg
sub
push
ds
push
test
pop
cmpsl
es
outsl
into
sub
jmp
roll
in
jnp
and
jecxz
jl
jmp
push
mov
int3
in
call
repnz
xchg
mov
call
insb
fisubl
or
lea
jmp
push
xor
or
aad
movsl
pusha
jmp
pop
mov
xchg
into
je
sbb
les
movsb
loopne
dec
popf
push
sahf
adc
mov
je
dec
pop
and
mov
cbtw
hlt
stos
fbstp
inc
fst
lock
mov
sbb
ficoms
cmp
jae
fwait
andl
iret
push
jne
jmp
lcall
jecxz
cmpsl
push
push
fs
dec
pop
xor
icebp
ds
adc
lods
lahf
lret
out
sbb
add
push
ds
outsb
sbb
mov
or
test
add
ret
imul
cmp
cmpsl
leave
inc
aad
pop
into
sbb
pushf
pop
aad
stos
or
outsl
mov
out
imul
shlb
sbb
jmp
mov
movsb
xor
pop
mov
xor
cmp
push
lea
pushf
insl
ror
xor
leave
adc
jge
out
rolb
faddl
ljmp
ret
jmp
push
inc
or
sbbl
clc
dec
xor
inc
push
sar
mov
push
sub
fs
xor
inc
enter
jnp
pop
les
lret
xor
sub
nop
mov
push
out
sbb
inc
cld
pushf
pop
bnd
test
add
mov
mov
rorl
dec
jmp
out
inc
mov
ss
mov
xchg
xchg
fwait
sub
or
mov
pop
cmc
cmp
xchg
nop
jp
cmp
xor
xchg
mov
faddl
enter
jb
cmpsb
testb
inc
lds
cmpsb
vmovdqu
es
sub
mov
jge
inc
xchg
movsl
fdivrl
icebp
and
jns
jp
xor
adc
jo
xor
ret
aad
add
sbb
mov
jecxz,pn
add
fisubrl
push
mov
aas
clc
das
add
xchg
test
sbb
push
sahf
xchg
popf
iret
sub
lcall
hlt
imul
xchg
mov
pop
lea
loop
jo
sub
addr16
sahf
adc
outsl
gs
xchg
jmp
fs
pop
movsl
aas
push
mov
std
cmpsb
movsb
mov
inc
jne
xor
fs
lcall
jl
shrb
push
js
jmp
testl
stos
mov
jnp
shlw
or
cmc
movsl
scas
cld
lds
adc
jns
pop
xchg
push
sti
jmp
cli
sti
out
into
mov
icebp
cmpsl
mov
sbb
xor
push
sub
mov
xchg
fldcw
xorl
pop
cmp
sub
imul
mov
xor
jge
jae
jns
add
mov
mov
xor
adc
add
insb
and
jno
fdivrs
mov
mov
clc
in
pop
push
adc
mov
mov
insl
outsl
xor
icebp
xchg
mov
jecxz
push
aas
mov
adc
gs
mov
inc
add
mov
fistpl
and
cmp
pop
push
inc
jmp
push
xchg
or
das
adc
add
push
loope
js
push
leave
arpl
out
mov
xchg
ss
imul
add
jno
xor
xchg
ds
leave
sub
xor
push
aam
rorl
int
imul
movsb
sbb
movsl
inc
adc
push
popf
mov
push
out
dec
push
jb
std
outsl
outsl
cmp
lahf
xchg
xor
adc
daa
mov
and
or
mov
cmp
frstor
cwtl
mov
xchg
sbb
popf
sahf
stos
cltd
sbb
pusha
xchg
daa
mov
jo
scas
pushf
lcall
repnz
push
xchg
cs
sub
dec
inc
jmp
inc
rorl
bound
scas
pop
std
in
inc
lods
lods
xor
pop
pop
pop
enter
mov
mov
jo
sub
js
push
and
inc
ficomps
mov
sub
fisubrs
jl
sbb
dec
and
je
outsl
imul
test
mov
mov
shlb
cmp
xchg
in
sbb
xchg
jecxz
int
adc
gs
jne
pop
or
addb
xlat
mov
rcrb
ret
sub
rcr
adc
out
andb
testl
mov
in
lods
pop
fadd
in
mov
in
dec
in
adcb
mov
out
clc
lret
pop
adcl
pop
and
xchg
ret
jno
mov
je
out
adc
jo
pop
mov
bnd
std
ror
add
or
pusha
scas
fdivs
pop
dec
decb
pusha
push
rcr
arpl
xchg
cmp
xor
test
push
cmp
repnz
fst
push
xor
repnz
mov
lahf
mov
push
in
cmp
aaa
mov
sub
das
or
dec
aaa
and
das
fldl
mov
dec
je
xorl
xchg
push
mov
inc
mov
in
stos
clc
adc
cmpsb
pop
fdivrs
les
add
fmul
mov
popf
decb
mov
cmp
jae
andl
cli
add
mov
adc
aas
lret
adc
mov
cmp
cmpsl
into
idiv
mov
mov
mov
into
xchg
adc
push
aam
mov
aas
jg
add
ja
add
test
mov
mov
out
shlb
gs
jmp
in
stos
xchg
fadds
lods
mov
inc
add
mov
inc
inc
hlt
fsubr
pop
out
icebp
push
or
cmp
insb
dec
stc
mov
sti
pop
test
loopne
pop
lret
jnp
sub
push
sahf
pusha
fs
jp
sbb
mov
popf
mov
sbb
leave
jp
inc
aam
xor
enter
out
push
jp
and
add
insl
ret
mov
xor
or
add
aad
pop
sahf
dec
push
mov
pop
jp
lds
mov
rolb
mov
mov
cmpsb
add
stc
ds
pushf
ret
jae
fsubp
pop
cmpsb
mov
fst
mov
push
popa
jb
adc
addr16
fcomi
cmp
add
inc
mov
add
stos
aad
iret
jb
dec
jo
dec
push
in
leave
mov
mov
cli
ret
in
mull
inc
mov
sub
fnstsw
movsb
adc
mov
insb
stos
cmp
jbe
push
dec
nop
outsl
lods
rcll
ja
pop
pop
ds
out
sub
test
xor
in
js
sti
cli
imul
int3
popf
mov
jno
push
xor
pushf
pop
loop
xor
jg
mov
jno
divb
movl
cmp
jp
in
mov
xchg
and
sub
lret
mov
mov
loopne
mov
fnsave
xor
icebp
jbe
jp
int3
jb
es
jae
lret
sub
cmp
roll
imul
mov
jl
jae
stc
loopne
push
mov
ret
jecxz
mov
inc
mov
fmulp
xor
scas
jns
lcall
scas
pop
adc
int
lret
addr16
lods
mov
inc
arpl
shll
jns
repz
es
push
sbb
lret
je
jo
jle
std
xchg
mov
add
stos
jo
dec
cli
fldcw
loopne
mov
add
test
add
sti
adc
mov
ljmp
aas
inc
mov
push
xor
lea
es
xorb
cld
test
decb
fwait
test
std
or
push
pcmpgtw
insl
in
es
add
sbb
mov
xchg
ret
lret
cld
inc
addb
adc
push
sub
fistpl
subl
dec
aas
mov
xorb
fidivrs
nop
les
gs
out
jo
cli
inc
push
popf
xchg
dec
mov
cmpsb
mov
je
xchg
mov
mov
test
iret
xor
pop
lret
sub
adc
xacquire
xchg
lret
dec
mov
mov
add
mov
xor
dec
jmp
in
xor
dec
mov
fwait
mov
mov
ss
stos
lods
add
cltd
daa
pop
nop
ja
adc
dec
pusha
cmp
pop
push
sub
je
lret
jmp
in
jae
push
into
mov
test
mov
push
jmp
xchg
push
or
and
cmp
lods
xchg
repz
mov
ljmp
das
and
outsb
lret
push
mov
mov
daa
lock
popf
in
imul
and
rcll
cmp
xchg
mov
int3
popa
mov
sbb
hlt
jns
lcall
jae
cmpsb
faddl
or
push
push
test
pop
xor
xchg
mov
pop
push
xchg
dec
cs
fisubs
sbbl
cmpsb
cs
cmp
mov
push
out
inc
push
jecxz
add
cwtl
inc
stos
cmp
les
or
pusha
xchg
movsl
rclb
loop
dec
push
enter
aas
mov
pop
push
fstpt
xor
orb
add
mov
jmp
ffreep
mov
loope
add
cli
jbe
sub
cmp
lahf
push
xlat
mov
add
push
xor
jne
jp
and
sub
cmp
jg
pop
xor
or
enter
xchg
rcl
imul
pop
jns
and
mov
aaa
cld
rcrl
pop
dec
incb
jns
jne
sbb
arpl
pop
mov
pop
stos
jl
adc
push
ret
add
add
push
dec
pop
xchg
js
mov
inc
leave
add
test
add
sti
inc
sbb
mov
mov
dec
sahf
mov
cld
bound
mov
fstp
xchg
cli
mov
in
cwtl
stc
icebp
cmp
out
and
mov
cmp
sbb
xor
add
dec
fstps
es
jmp
xchg
adc
sarl
js
xor
pop
xchg
mov
cli
aam
pusha
push
data16
or
les
push
ss
sub
push
neg
into
dec
push
pop
pop
xchg
loop
push
stos
les
hlt
sahf
lret
imul
std
jg
scas
pop
adc
xor
sbb
cltd
dec
mov
xchg
pop
andb
movsb
stos
xor
pop
lea
or
data16
fstps
aad
sti
out
push
sub
or
add
add
test
orb
cwtl
fdivrs
sub
or
mov
aad
pop
adc
add
mov
mov
jge
pop
in
js
xchg
dec
pushf
jo
lods
leave
sbb
push
nop
push
ret
fcomp
cmp
jge
xlat
mov
lods
mov
sub
lock
xchg
xor
adc
inc
xor
test
adc
mov
push
fiaddl
adc
push
pushf
xchg
mov
repnz
imul
test
lods
cs
cmp
stc
data16
push
fucomi
hlt
mov
jp
cli
mov
jge
stos
ret
adc
jp
push
and
dec
or
dec
loope
cmc
or
pusha
dec
and
mov
daa
loope
add
nop
arpl
or
push
out
jb
sub
adc
push
ret
push
mov
in
rcrl
xor
ret
or
addr16
sbb
in
and
push
insl
hlt
fwait
in
hlt
das
movsb
jns,pn
inc
pop
jnp
mov
aas
cmp
out
pop
inc
mov
or
xchg
add
movsl
push
xchg
push
ror
mov
fisubs
jno
push
bswap
pop
adc
xchg
cmc
pop
xchg
fildll
xorl
stos
shrb
sahf
adc
add
inc
fisubs
mov
lret
insl
popa
or
pop
jnp
popf
and
popf
fsubr
stos
into
mov
fidivrl
sti
pop
and
into
mov
orl
cld
decl
in
jo
lea
lret
add
test
add
into
mov
leave
aas
add
add
daa
das
js
cmp
cmp
int3
xchg
fwait
movsl
das
jne
adc
sahf
mov
pushf
scas
mov
jnp
mov
mov
ja
gs
add
mov
stc
int
imul
popa
add
fwait
pop
push
popf
mov
int3
mov
dec
pusha
mov
cwtl
mov
pop
insb
in
imul
rolb
vandnps
sbbb
shl
xor
loopne
inc
in
cmpsl
cmpsb
fnstcw
xchg
insb
popl
jp
add
pop
xchg
mov
inc
daa
jne
in
aad
sbb
push
sti
inc
fnstenv
mov
xchg
xor
or
mov
lahf
lds
cmpsl
or
jne
scas
jle
aam
mov
test
out
pop
les
stos
mov
sub
in
mov
push
fstpl
jo
lods
lock
push
mov
jno
inc
mov
popa
lret
out
push
mov
add
les
add
sub
or
add
jnp
xor
ds
test
xchg
stos
or
fdivrs
mov
int
add
out
jecxz
into
icebp
and
adc
cwtl
xlat
testb
cmpsb
mov
mov
lret
pop
popa
mul
push
mov
cmpsl
nop
in
psrld
out
cmp
or
push
scas
aaa
push
inc
lahf
bound
sub
ds
sahf
add
mov
fmull
or
rolb
push
popa
sub
pop
fisubs
rcrl
mov
mov
rol
add
iret
lret
fcmovu
mov
cli
mov
jg
movsl
jp
push
pop
mov
add
sub
dec
sti
outsl
rorl
or
pop
push
xor
mov
cmp
shlb
add
fsubrs
push
mov
push
push
jbe
or
pop
dec
mov
mov
pop
lahf
aaa
outsb
cmp
xchg
add
movsb
outsl
xchg
sbb
or
add
push
sbb
and
adc
inc
jbe
sub
cmp
sbb
stos
scas
fcomp
andb
add
ret
and
dec
repz
fldt
movsb
jmp
and
add
test
add
or
pop
hlt
inc
adc
and
mov
add
mov
dec
cmpsl
nop
or
jg
xor
xor
xlat
insl
jns
lret
mov
xor
sahf
div
jle
jne
and
ss
jbe
popf
rcl
jns
adc
mov
or
mov
out
jle
pop
and
repnz
gs
pop
inc
popa
repnz
pop
lods
sti
cmc
add
popa
xchg
lahf
call
sub
mov
inc
push
sarl
jo
test
push
sub
push
std
mov
or
mov
cwtl
mov
lret
jns
les
ss
insl
mov
sbb
jle
adc
addr16
sub
pop
adc
jno
or
xchg
ds
sarl
cli
xchg
and
cmpsb
or
and
fwait
mov
fcmovu
stc
jo
lods
dec
arpl
out
dec
jl
dec
sub
repz
daa
into
rcrb
cwtl
hlt
iret
test
fidivrl
pop
leave
mov
mov
jle
mov
mov
jo
inc
int
inc
and
arpl
call
and
in
and
adc
inc
fidivrl
outsb
add
ss
mov
test
xor
and
test
ja
or
or
test
dec
aaa
inc
and
popa
cltd
dec
ds
xchg
cld
fdivl
addl
bound
adc
xor
cmp
xlat
bound
iret
es
dec
mov
or
mov
xchg
push
mov
dec
movsl
inc
sti
ret
cmp
fbld
cmpl
add
lods
mov
and
js
out
add
sbb
leave
setg
push
lods
or
aaa
out
imul
cmpsb
mov
mov
pusha
inc
inc
lods
dec
sahf
mov
pop
mov
data16
cld
xchg
ficomps
add
mov
push
mov
loope
testl
dec
out
mov
mov
xorl
push
and
loope
js
cltd
or
enter
out
inc
pop
es
into
incl
andl
mov
pop
mov
push
xchg
iret
fsubrp
sti
pop
in
sbb
jecxz
and
jl
out
ret
call
and
add
lcall
mov
lds
add
vpcmpgtb
push
out
xor
ficompl
nop
mov
iret
test
mov
rorl
cltd
fidivrs
jnp
mov
ja
pop
jge
adc
sbb
sbb
pusha
stos
push
fwait
cs
out
pusha
ss
add
inc
loope
fiadds
cmp
adc
xchg
push
adc
jae
ljmp
test
negb
psubd
pop
cmp
fimull
pop
push
scas
int3
or
gs
sarl
movsb
mov
iret
pushf
fs
mov
arpl
pop
pop
in
das
mov
orl
das
adc
mov
lcall
popf
mov
gs
jmp
xor
jb
inc
pop
adc
add
mov
xlat
jge
std
xor
rorl
sti
outsb
xor
in
in
mov
xchg
shlb
test
inc
shlb
add
fmull
sbb
ds
push
imull
dec
mov
cli
test
and
nop
stc
mov
loope
repz
je
out
movb
cld
push
pop
movsb
push
sub
jg
jp
sub
mov
mov
lods
xchg
enter
xchg
mov
mov
rcll
mov
repz
sbb
lock
or
dec
lret
sbb
mov
mov
adc
adc
xchg
test
clc
pop
leave
ror
and
in
repz
mov
mov
xchg
mov
je
lea
xchg
in
sahf
dec
push
push
test
and
stos
dec
call
adc
jl
dec
div
mov
adc
shlb
rcrl
inc
mov
clc
loopne
dec
sarl
icebp
push
ss
popf
xor
cli
je
negb
adc
scas
enter
xchg
lds
sub
punpckhbw
fs
lods
lods
icebp
lea
sub
out
out
sub
rclb
pop
mov
jne
xchg
aas
xchg
sub
fsubl
sti
lds
xchg
hlt
add
push
jne
and
xchg
sub
xchg
arpl
xchg
bound
std
dec
mov
nop
je
js,pn
sub
lods
jbe
push
jmp
xchg
push
add
add
idivl
fstl
pushf
push
mov
test
add
cmp
stos
mov
sub
aam
loop
lcall
inc
xchg
and
not
loopne
xor
pop
cmp
push
sbb
inc
daa
sti
sub
jne
arpl
mov
jge
addr16
lcall
jb
rcrl
aas
sahf
inc
adc
mov
mov
aaa
sti
and
inc
lahf
outsb
xchg
sbb
inc
inc
xchg
add
clc
pop
fistpll
aas
cmp
and
push
in
call
add
push
stos
int
or
repnz
push
pop
test
clc
lretw
mov
imul
add
push
add
jno
mov
sub
sbb
jns
shlb
mov
push
stos
or
push
sub
roll
test
aas
or
into
dec
sbb
jae
inc
mov
or
xlat
leave
dec
mov
push
mov
and
mov
push
pop
enter
lret
shrb
imul
jns
shl
mov
jbe
movsl
mov
adc
sub
cmp
je
sub
mov
cltd
imul
mov
cmp
fistl
xchg
pop
xlat
loope
movl
push
push
outsl
xor
push
loop
mov
cmp
xlat
stos
mov
inc
add
fstl
add
inc
jb
test
inc
cmc
adc
push
mov
sbb
jno
div
fstpt
sbbl
pop
push
sarl
jmp
jecxz
cmpsl
sbb
add
lods
add
sbb
arpl
sbb
add
outsl
aam
or
fnstsw
in
mov
jle
pop
mov
mov
stos
int
cmp
mov
xchg
jg
or
inc
ret
dec
and
sbb
stos
lret
sbb
outsb
in
sub
or
dec
inc
ret
outsb
inc
lret
pop
rcrl
adc
push
test
out
xchg
stc
jmp
in
mov
pushf
lods
and
push
mov
ror
add
xor
insb
ret
push
push
mov
mov
fcmove
push
ljmp
mov
nop
mov
add
sbb
insl
cli
jnp
out
xor
mov
test
outsb
mov
adc
mov
es
cmp
mov
call
mov
in
and
add
test
add
mov
push
and
jne
xor
sub
repnz
xchg
dec
cmp
ffreep
in
loop
and
repz
adc
roll
adc
mov
and
mov
mov
or
mov
movsb
sti
bound
movsb
xor
xchg
int
bound
out
sbb
je
xor
mov
mov
outsb
adc
cmpsb
out
lret
je
push
sbb
imul
shl
mov
jp
lret
andl
xor
pop
push
nop
test
inc
fldl
mov
daa
mov
xor
mov
std
leave
rorl
ds
push
leave
add
icebp
icebp
test
xchg
int3
loop
or
jbe
in
repnz
call
add
inc
pop
mov
clc
fsubs
inc
test
outsl
xchg
sbb
adc
mov
cltd
cltd
in
push
jge
das
lock
push
bound
push
inc
dec
ret
leave
aaa
outsl
insb
aas
rcrl
push
push
cld
lock
ret
mov
fimull
sbb
push
xor
xor
push
mov
and
mov
es
cwtl
popl
clc
loopne,pn
adc
imul
jle
push
out
mov
cmp
push
popf
dec
ss
loop
and
mov
dec
xchg
jge
aam
loopne
or
shlb
sub
popf
mov
test
inc
adc
jns
push
mov
sbb
adc
mov
hlt
add
cmp
dec
mov
inc
xor
popa
adc
movsb
mov
push
ret
adcl
outsl
adc
mov
mov
mov
xlat
inc
fldl
add
inc
push
cmpsl
dec
inc
pop
mov
pusha
or
jbe
push
sub
lahf
cmp
sub
add
aad
mov
inc
xor
jb
scas
xor
jecxz
rolb
sahf
push
dec
cwtl
push
pop
scas
loop
cwtl
js
shrb
push
sti
jbe
and
or
popf
pushf
das
inc
cmc
in
mov
xor
push
adc
jp
xchg
mov
in
and
and
add
mov
sahf
mov
sbb
xor
mov
gs
sub
mov
and
movsl
push
sub
inc
pop
mov
add
ficompl
mov
add
add
mov
gs
mov
shlb
fmulp
pop
rcll
ret
and
pop
xchg
add
add
in
ret
pop
push
mov
je
or
push
out
out
in
subl
ja
out
pop
push
enter
jns
dec
inc
adcb
mov
xchg
inc
jo
cmp
loop
icebp
repz
mulb
testl
das
vrsqrtss
sbb
inc
add
inc
rolb
je
stos
in
inc
pop
dec
cmp
je
push
push
ss
and
push
jl
pusha
sti
xor
pop
or
or
mov
xor
lret
and
mulps
test
shll
sbb
push
je
jno
sbb
sahf
mov
shr
mov
aas
outsl
add
popa
jbe
mov
leave
cltd
jno
jo
into
test
xchg
je
leave
in
dec
mov
adc
xchg
adc
dec
sbb
mov
or
scas
out
cld
xor
dec
adc
imul
jno
xor
sbb
dec
aaa
outsb
adc
sbb
mov
ret
pusha
call
fucomip
cmp
add
lcall
cmp
mov
aas
xchg
and
jae
or
into
stos
inc
dec
rcll
and
pop
adc
pop
sbb
fdivrs
test
clc
pop
xchg
cwtl
fists
adc
xchg
cmpsl
call
push
mov
std
mov
lret
pop
mov
or
in
dec
fimuls
lock
pop
mov
mov
push
mov
dec
out
xor
xchg
mov
push
mov
shll
sbb
lret
pop
inc
xchg
jb
arpl
push
pushf
insl
dec
int
jge
inc
fiadds
xchg
add
clc
dec
jbe
lret
daa
sbb
pop
pop
push
pop
icebp
popf
xor
and
and
adc
mov
mov
test
lods
xchg
inc
mov
shrl
jle
repnz
sub
sarl
enter
mov
mov
mov
jge
hlt
pop
sahf
cmpsb
out
push
xor
fmuls
xor
fsubl
mov
sbbl
mov
xchg
in
cwtl
pop
jg
pop
in
adc
mov
stos
pop
sbb
cli
inc
cli
outsb
ljmp
call
add
add
addr16
popa
movsb
cld
cmpsb
mov
jge
jae
adc
sahf
andl
add
cld
jg
shll
pop
mov
movsl
ret
dec
xchg
out
in
sbb
sbb
mov
cmpsl
xor
sti
loopne
clc
hlt
lods
roll
xchg
or
add
mov
fwait
and
pop
lret
jnp
pop
jecxz
sbb
dec
push
ds
jl
ficoms
mov
call
jmp
out
in
push
into
nop
mov
sarb
test
ljmp
jg
fnstcw
test
push
sarl
adc
fcompl
or
cmovle
push
pop
out
stos
testb
cld
xor
pop
cwtl
subl
popa
xchg
jnp
xor
cmpsb
or
inc
pop
pop
pop
mov
mov
sarl
outsb
std
adc
pop
into
repnz
outsl
imul
clc
pop
shrl
or
lea
inc
mov
das
sbb
sbb
cld
imul
cs
ljmp
ret
pop
fwait
test
add
jb
pushf
shrl
jo
lods
aad
lret
stc
push
xchg
repz
cmp
mov
mov
push
jp
outsb
mov
mov
lea
cmc
jg
das
xchg
ss
add
repz
cs
mov
mov
lea
add
das
enter
and
mov
xor
inc
jl
fwait
cmp
or
mov
dec
and
mov
pop
cli
jg
jp
and
repz
mov
xor
mov
icebp
sbb
in
cmc
and
mov
jns
jb
mov
xchg
jne
jno
lahf
jge
push
hlt
insl
pusha
and
aam
cmpsl
and
inc
and
bound
add
cmp
out
pop
mulb
sbb
jp
push
hlt
mov
ljmp
test
fcoml
fldcw
push
mov
pusha
ss
arpl
rclb
lds
ds
mov
mov
rolb
mov
push
push
lahf
cmpsl
icebp
xchg
jecxz
aam
loopne
add
loopne
lret
push
addr16
xor
push
pop
lret
inc
fs
jecxz
add
add
ja
out
ss
mov
insl
fldl
add
adc
mov
addr16
into
lahf
or
pop
addr16
pusha
lds
xor
or
lahf
sub
xchg
jecxz
fidivrl
add
loop
xchg
shll
xchg
add
xchg
or
mov
jo
add
cs
add
or
out
add
mov
aas
cli
mov
jge
push
incb
loopne
mov
call
sub
xchg
aam
cli
inc
and
sbb
testl
add
dec
push
ret
and
cmp
jecxz
pop
xlat
ljmp
cmp
inc
lret
xor
mov
cmp
testb
inc
mov
sarb
jns
enter
mov
mov
inc
in
push
pop
mov
pop
popa
jp
xchg
mov
int
adc
int3
dec
loop
shrl
dec
cld
mov
repz
test
cmp
push
fistpl
fwait
hlt
mov
test
jae
push
test
push
in
push
test
ret
lods
push
jb
das
cmp
xchg
mov
and
mov
xchg
inc
push
push
sub
in
and
mov
mov
sarb
cmpsl
test
add
lcall
std
jnp
fwait
push
outsl
rcll
jl
push
cmc
mov
pop
jnp
push
ret
jl
add
mov
aad
sbb
add
or
sub
insb
pop
subb
mov
outsl
add
sbb
push
pushl
mov
mov
dec
and
jp
es
outsl
dec
push
in
cs
sbb
sub
jne
insb
icebp
vmovsldup
sbb
popf
stos
xchg
fldl
dec
imul
jb
jge
push
and
cli
push
call
fcom
fiaddl
in
xchg
mov
push
push
cmpsb
jge
cmp
cmp
cmp
ljmp
pop
or
icebp
cmp
and
arpl
inc
in
cmp
sub
push
into
fisttpl
pop
and
pop
inc
sub
into
ficomps
inc
xor
sbb
inc
mov
pop
mov
lods
out
nop
push
inc
cli
cmpsb
fidivrl
repnz
int
and
add
cli
rcll
pushl
int
jge
filds
add
push
xor
ret
xor
mov
nop
push
add
add
pop
mov
mov
cmp
mov
and
jle
push
ljmp
xchg
rcrl
incb
test
sahf
sbb
cli
xor
mov
nop
icebp
inc
dec
cmp
and
cmpsl
testl
push
fidivrs
subl
insl
adcb
push
jle
or
scas
jle
test
mov
adc
jns
mov
movsb
lods
cmpsb
mulb
mov
cld
repz
pop
test
mov
xchg
push
inc
ljmp
mov
out
hlt
leave
push
imul
adc
add
mov
adc
popf
or
xchg
lods
adc
shr
mov
dec
addl
mov
cltd
fsubs
aad
pop
inc
mov
xchg
ds
jl
ret
push
jg
and
push
jne
sub
and
pop
adc
ds
jmp
xor
jl
mov
mov
loope
sbb
and
mov
setl
and
clc
mov
ljmp
cmpsb
repnz
shrl
xchg
out
push
sub
xor
je
iret
fiaddl
jmp
fcmovnbe
mov
cli
popf
lods
jo
das
sub
mov
lock
xchg
xor
xchg
ficoms
pop
xchg
jns
ret
inc
pop
add
loopne
jp
int
lock
mov
loope
pop
push
sub
shrl
nop
adc
dec
clc
fsts
imul
push
adc
or
popf
outsl
mov
cmp
jmp
out
push
push
mov
inc
cwtl
pop
fwait
std
loop
xlat
aaa
mov
add
adc
aad
loop
and
aaa
pop
shr
addr16
cltd
pop
jne
ds
test
and
repnz
stos
adc
push
jl
mov
push
jae
fstpl
scas
iret
lock
mov
jmp
pop
sbb
call
add
xchg
mov
pushf
mull
fisubrs
sub
imul
and
fdivrl
daa
xor
sbb
fsubl
mov
iret
negb
out
lods
push
jg
ds
test
add
sub
es
xchg
push
test
xchg
adc
mov
outsl
xchg
ret
fdivs
or
push
orb
aaa
push
iret
jno
popa
jecxz
rorl
stos
test
push
pushf
mov
lret
inc
inc
addr16
lods
pushf
test
mov
push
push
push
xor
test
push
movsb
push
data16
imul
xor
loope
dec
xchg
jno
pop
push
mov
outsb
sbb
dec
cmpb
stc
jmp
add
xlat
xchg
orb
insl
out
inc
jle
lock
js
test
dec
imul
mov
dec
arpl
lret
das
sbbb
arpl
cwtl
pop
xchg
or
ret
sbb
dec
rcr
mov
xor
popa
jb
mov
adc
dec
xlat
adc
xorb
loop
xor
or
sbb
ret
sahf
sbb
jb
mov
xchg
les
mov
or
cltd
mov
push
jg
je
dec
fcoms
aam
adcb
push
push
sbb
pop
sarb
add
pop
shlb
sub
sbb
or
and
sti
enter
sbb
add
cmp
inc
jmp
xor
std
adc
jg
cmp
int
and
cmp
lcall
testl
and
loope
mov
lcall
insl
pop
jae
push
dec
push
insb
mov
ja
outsl
std
push
jl
andb
mov
je
arpl
push
out
outsb
nop
mov
mov
addr16
scas
in
dec
mov
movsb
jo
test
jo
in
inc
mov
test
push
int
dec
fld
xchg
mov
sbb
mov
ljmp
ret
jl
jle
adcb
jl
inc
aam
or
arpl
jecxz
in
dec
sbb
popf
inc
int
inc
and
inc
jp
out
push
daa
sarb
negb
xor
icebp
sbb
lock
add
fcom
mov
lods
jg
mov
dec
push
pushf
dec
adc
push
mov
mov
ret
bound
into
sti
inc
out
lds
data16
push
movl
scas
add
add
sub
ja
movsl
ss
mov
paddb
add
test
add
mov
cltd
cmpsb
out
lea
popf
push
imul
loopne
xchg
add
inc
pushf
cmp
int3
or
pop
fwait
enter
jae
mov
cmp
and
pop
sarb
inc
mov
nop
xor
mov
xchg
aas
push
mov
jnp
and
jp
and
push
in
xor
jae
shr
jp
xchg
sahf
mov
clc
push
mov
mov
cmpsb
leave
repnz
lea
push
popf
jae
cmp
jns
scas
stc
mov
cli
push
or
aaa
movsl
jp
ret
xor
jg
or
or
jle
into
daa
cli
push
movsb
icebp
insb
mov
pop
adc
ljmp
dec
dec
negb
arpl
xor
insl
nop
xchg
sbb
les
loopne
sti
andl
insl
mov
iret
inc
out
and
sbb
loope
ret
add
inc
and
scas
adc
fidivl
jmp
sbb
push
imul
add
jge
dec
xor
jnp
out
popf
in
fsubl
dec
inc
and
fwait
xchg
fisubrl
int
dec
enter
in
divb
push
data16
fimuls
repz
sbbl
scas
scas
mov
mov
and
sub
sarb
pinsrw
and
out
aas
mov
mov
mov
push
jle
and
mov
sbbl
sub
mov
out
iret
scas
aad
jne
mov
int
mov
inc
mov
out
cltd
pop
adc
dec
xor
fsubp
jg
jns
or
fwait
xlat
xchg
ficoms
mov
mov
jns
ljmp
dec
lret
aam
xor
pop
clc
movl
fs
mov
test
dec
in
inc
mov
jge,pt
adc
mov
mov
jnp
xor
or
cmp
xor
pop
out
mov
sarb
adc
cmpsb
fists
lds
mov
lcall
jne
jo
push
mov
shll
adc
jmp
enter
leave
adc
pop
inc
xchg
test
or
and
xchg
add
add
mov
push
outsb
scas
cltd
orl
out
add
sub
nop
js
xchg
data16
dec
out
add
pop
test
or
aaa
iret
pop
cmp
push
dec
into
jns
pop
cmp
not
enter
nop
sub
arpl
cld
scas
xor
mov
out
mov
mov
xor
push
xor
fwait
lods
mov
lock
or
ljmp
notb
and
mov
jmp
ds
xor
cmp
std
inc
adc
push
orl
xchg
push
ljmp
sbb
cmpsb
adc
sbb
insl
adc
push
push
sti
cmpsl
sub
mov
daa
xchg
mov
out
out
push
add
lret
cmp
mov
mov
xchg
repz
mov
and
mov
icebp
push
ljmp
adc
jne
jge
hlt
pop
cmp
pushf
mov
inc
mov
fidivs
dec
push
cmc
jns
outsl
stos
lea
roll
clc
mov
scas
push
sarl
dec
jl
cmpsb
mov
ret
mov
jmp
xor
out
clc
pop
add
or
push
mov
popf
leave
mov
pop
ss
pop
bound
xchg
inc
fnstsw
jne
stos
jg
rol
push
in
and
inc
es
mov
mov
adc
mov
adc
cmp
rcl
popf
fdivrs
ljmp
mov
in
mov
idivl
cmc
lret
stos
jmp
int3
jne
gs
mov
stc
add
lods
cmp
or
pop
add
cmp
dec
dec
out
sbb
pop
aam
jbe
sub
mov
cltd
sub
incb
and
imul
dec
xorb
into
mov
fcmovnbe
pop
in
dec
ret
add
adc
cmp
jle
inc
add
testl
out
stc
decb
fstpl
jae
out
inc
cli
pushf
test
dec
mov
dec
dec
int
loope
out
aaa
xchg
push
out
ss
or
stos
cli
push
mov
mov
pop
les
idivb
into
cmp
xor
aas
clc
cmpb
or
add
jns
sbb
jge
int3
outsb
xchg
push
ljmp
or
jge
inc
inc
mov
cmp
loopne
je
pop
add
pushf
and
loop
xchg
in
in
insl
mov
les
cmc
xor
xchg
pop
mov
xor
cmp
cmp
add
push
movb
xor
fs
js
shlb
lods
push
add
inc
mov
add
add
lret
add
dec
out
jo
sbb
lods
pop
sub
mov
bound
movsl
cltd
inc
inc
or
lahf
dec
roll
push
xchg
insl
jl
xchg
pusha
repnz
pop
jg
rolb
pop
dec
call
and
test
mov
mov
or
jg
mov
xchg
aam
and
sahf
loop,pn
mov
loop
xor
movsb
pushl
jns,pt
and
sub
adc
inc
mov
lds
inc
sarl
pusha
stos
push
mov
push
push
cmpl
add
mov
cmp
mov
std
out
mov
jbe
xchg
and
mov
add
addr16
in
adc
fstps
test
pop
sti
stos
inc
cmpsb
inc
test
or
mov
jg
loope
mov
inc
mov
sub
sbb
out
outsl
and
lea
mov
and
mov
test
xchg
pop
inc
jno
scas
aad
or
mov
cld
iret
cmp
xor
jmp
inc
aam
xor
jo
xorb
movsl
sub
rorb
shll
ds
mov
js
test
hlt
aaa
nop
jbe
mov
sbb
mov
mov
dec
aad
xor
pusha
xor
inc
lds
ret
subb
int3
rolb
push
jge
pop
ficompl
add
and
fucomi
or
scas
mov
pop
test
aad
jmp
jp
cs
cmpsb
adc
daa
jo
mov
aas
lds
inc
inc
inc
add
jmp
and
adc
pop
mov
fistl
dec
scas
insb
xlat
loopne
rcrb
push
xchg
jns
stc
mov
mov
jl
mov
test
push
add
xor
test
fldt
testl
roll
pop
sub
or
test
add
orl
cmp
xchg
mov
fisttps
int
dec
inc
pop
lods
aas
jbe
cmp
ds
push
dec
das
cs
add
mov
fwait
xor
mov
jbe
pop
arpl
mov
in
in
out
fwait
in
sbb
insl
std
arpl
xor
out
imul
jne
and
rcrb
insl
jle
sbb
fsubrs
lea
inc
push
dec
shrl
push
push
rcll
lds
xor
pop
mov
pop
inc
push
pop
lcall
mov
and
push
sub
sbb
cs
xor
xor
lock
jae
daa
dec
mov
pop
mov
mov
mov
pop
ja
cmpsb
xor
data16
pop
stc
mov
fstl
cld
lds
sahf
sbb
data16
cs
mov
pop
pop
out
mov
and
dec
jo
outsl
and
repz
pop
test
fs
jmp
mov
jge
dec
mov
jl
test
inc
xor
imul
inc
jb
mov
xchg
push
mov
inc
xorl
pop
pushl
mov
dec
lret
xlat
int3
xchg
sub
lds
into
dec
push
in
mov
in
mov
cmp
xchg
test
icebp
das
rcrb
test
lods
fiadds
cmp
or
push
xchg
push
jle
jne
sbb
jo
test
movsb
push
int3
pop
add
and
roll
adc
cmp
lock
jae
sti
add
xchg
lcall
repnz
add
xor
das
mov
push
jle
mov
add
add
aam
jae
add
aas
push
cmpsb
mov
aaa
xor
jmp
mov
iret
jg
stos
cmc
shrl
sbb
inc
ret
stos
adc
xor
addr16
orl
aaa
or
sbb
fsub
cmc
adc
push
inc
mov
mov
in
jns
mov
aam
fcoml
ss
in
sbb
aas
dec
sbbl
call
pop
fs
aas
mov
enter
sbb
pushf
cli
mov
scas
aad
push
in
fcmovbe
adc
add
test
add
sub
aas
cwtl
sarl
cmp
fsub
mov
add
pop
aad
add
rcrb
loope
stos
inc
repnz
jb
xchg
mov
rcrb
xor
pusha
jns
sbb
shll
and
outsl
je
jp
insb
push
ds
aas
jbe
rcrb
xor
adc
push
xchg
and
fldcw
cld
push
popf
stos
xor
daa
testl
add
sub
pop
inc
inc
fdivrl
out
daa
jge
dec
mov
bound
fwait
addr16
and
sarb
mov
dec
in
xchg
arpl
mov
or
sbb
into
negb
repz
sub
xchg
idivb
adc
or
pop
hlt
or
test
arpl
das
pop
sub
mov
fisubrl
pop
sbb
fsubrs
cmp
mov
jl
fldcw
lea
xchg
loop
add
sub
test
dec
mov
or
fcmovnu
dec
je
cltd
test
push
shll
and
movsb
push
cld
jae
sahf
cld
repnz
mov
je
xor
out
stos
call
sub
ret
adc
ret
xor
testl
push
inc
mov
sub
sbb
dec
fs
ss
cmpl
xchg
stos
lods
add
push
push
das
jle
repnz
jo
pop
mov
icebp
es
xor
mov
icebp
shr
movsb
dec
sub
pop
shll
imul
xchg
mov
nop
or
mov
dec
adc
in
dec
lock
adc
lock
fistl
jmp
in
shlb
inc
in
sub
sub
fucomi
xchg
sbb
aam
and
mov
testb
push
mov
jmp
add
inc
or
or
test
add
pop
inc
xchg
and
add
adc
mov
stos
loop
xchg
pop
insb
adc
mov
in
fstpt
and
mull
or
pop
push
cmpsl
push
test
bound
ret
inc
dec
xlat
pushf
jg
xchg
lahf
jl
push
mov
jnp
pop
xchg
lret
sarl
pop
xchg
mov
int3
dec
push
lret
lret
mov
add
fisubl
mov
idiv
xchg
icebp
add
test
add
into
fldl
mov
sub
int
dec
int
and
int3
sub
cltd
lea
or
sti
dec
mov
lods
adc
cmc
cmpsl
adc
fistpl
les
sub
pop
test
je
mov
inc
in
fst
push
out
xchg
aam
xchg
push
out
xchg
jo
adc
push
cmp
mov
loop
ja
mov
adc
ss
add
subb
addr16
adc
pop
fwait
in
cmpb
out
and
ficompl
adc
xlat
xor
fildl
mov
xchg
jae
pop
cmc
fstpt
aam
cmp
mov
lock
cmpl
insl
inc
push
in
ss
add
imul
or
in
out
call
pop
or
pop
jne
enter
mov
pop
dec
addr16
addr16
pop
sbb
add
xlat
shlb
idiv
jp
shll
xor
enter
ds
cmp
jae
mov
mov
cmpsb
je
xchg
push
imul
or
lea
lahf
fadds
cmc
or
mov
sahf
mov
enter
mov
fildl
rcrb
stc
dec
and
push
je
or
xor
jns
in
mov
das
push
sbb
pushf
subl
inc
inc
stos
cmpsl
pop
test
add
dec
arpl
xor
iret
in
lock
add
mov
xchg
mov
cltd
arpl
jo
cli
rcll
fnstcw
mov
lcall
rcrb
jg
dec
repz
lods
sahf
fsubs
and
sub
rolb
mov
out
ret
xchg
stos
shll
hlt
test
mov
sub
test
mov
sarl
xor
push
int3
xchg
rorl
dec
sbb
xor
ljmp
inc
shll
sbb
sarl
fsts
xor
jns
test
inc
add
fcoms
pop
add
pusha
xor
adc
mov
pop
lds
lea
lods
mov
jns
rcrl
stos
adc
shr
gs
sub
cld
repnz
imul
xorb
pushf
icebp
mov
add
mov
mov
lret
iret
out
add
add
iret
cmc
sti
pushf
loop,pt
dec
mov
daa
sbb
add
test
add
fnstsw
sbb
push
mov
mov
test
dec
inc
daa
inc
inc
sub
sub
cltd
push
pop
clc
ficoml
mov
and
outsb
loop
in
mov
adc
xor
pop
pop
cmpsb
movsb
leave
pop
clc
xacquire
fwait
or
imul
inc
or
lea
xor
sub
lods
movsb
mov
aas
je
std
aaa
sbb
mov
pop
shr
push
mov
mov
inc
mov
stos
pop
push
jecxz
out
ss
imul
insb
mov
pushf
cmp
scas
test
loopne
test
xor
idivl
jbe
push
cltd
test
jno
scas
addb
and
ret
or
mul
jbe
loop
out
xchg
mov
repnz
xchg
cltd
jne
loop
cs
aaa
arpl
cmpsb
jb
js
inc
push
and
test
lods
mov
cmp
mov
jmp
pusha
xorl
fwait
insl
or
jno
jno
ss
xchg
and
push
mov
addb
xchg
test
adc
pop
push
mov
or
call
and
lods
cmpsb
subb
mov
loopne
shlb
andl
mov
in
shl
push
enter
movsl
xchg
fsubrl
sub
sbb
mov
xchg
mov
test
sbb
mov
xorl
mov
pushf
inc
pop
mov
inc
and
sub
dec
push
aaa
cmp
jge
sbb
adc
pop
mov
xchg
test
adcl
adc
add
adc
fwait
aam
dec
or
es
jg
mov
inc
lret
xor
sbb
lock
popa
into
sahf
adc
imul
ret
inc
lds
sbb
stos
sbb
pop
popa
arpl
push
bound
fs
inc
fsubrs
sbb
xlat
in
jle
fcmovnu
cltd
scas
aad
in
pop
inc
std
xor
popa
ja
or
ss
xchg
push
scas
insb
lock
hlt
inc
xchg
dec
lcall
jecxz
loope
aad
aam
mov
dec
jle
je
cmpb
cmp
lahf
xor
mov
imul
xor
stc
int
xor
out
pop
rcrl
add
add
or
lret
rorb
int
and
lret
jb
adc
mov
and
out
sbb
scas
mov
jno
cmp
adc
sbb
mov
out
les
negl
lds
lds
or
xorb
imul
cltd
jp
or
adc
jle
xchg
pop
mov
pop
sbb
fs
mov
cmp
jmp
lcall
mov
adc
mov
enter
int
movsb
adc
push
cld
or
push
mov
lods
adc
mov
js
repz
in
xchg
add
jb
mov
mov
and
fidivrl
inc
mov
pop
stos
rolb
and
mov
pop
dec
outsl
mov
repnz
and
inc
xchg
imulb
ret
cltd
pushf
clc
push
xor
icebp
mov
ret
xchg
cwtl
aaa
pop
leave
dec
je
mov
cltd
mov
and
in
in
lods
mov
stos
jns
mov
loop
mov
outsb
insb
push
sbb
cmp
mov
outsb
and
mov
in
cmp
jae
and
cwtl
jmp
mov
in
int
xor
and
mov
sbb
enter
in
stos
repz
jno
stos
fwait
adc
dec
subl
in
mov
js
into
cmp
inc
sarb
adc
push
jg
lock
imull
xor
das
ret
jns
push
stc
or
lcall
sbb
fidivs
ja
jecxz
xchg
fdivr
inc
aam
sbb
in
xor
call
adc
out
mov
fbld
fs
das
push
sti
iret
sti
and
push
fcomps
mov
xor
mov
mov
sti
jbe
mov
add
leave
mov
imul
cmp
mov
jmp
test
pushf
cmpsb
cli
xchg
popf
push
jnp
les
orb
in
popa
add
cltd
xchg
push
mov
mov
mov
sbb
movsl
xor
sahf
cmp
push
mov
rcll
sahf
or
jnp
dec
push
pop
je
mov
fcoml
out
or
