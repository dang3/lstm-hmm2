push
mov
sub
push
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
call
cmpl
jne
xor
xor
inc
mov
jmp
adc
push
movl
cmpl
je
cmpl
jne
pushl
push
push
push
push
pushl
pushl
push
call
xor
or
dec
mov
jmp
mov
adc
mov
mov
mov
andl
mov
inc
mov
cmpl
jne
pushl
call
cmpl
jb
mov
and
mov
sbb
andl
or
movl
xor
or
xor
movl
mov
add
mov
add
xor
add
mov
andl
xor
or
inc
mov
cmpl
jne
pushl
pushl
call
cmpl
jb
orl
xorl
mov
sbb
mov
andl
mov
inc
mov
cmpl
jne
push
push
pushl
push
pushl
push
push
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
subl
xor
dec
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
pushl
call
cmpl
jne
mov
inc
mov
jmp
addl
mov
andl
mov
inc
mov
cmpl
jne
push
push
call
cmpl
jb
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
push
pushl
pushl
push
push
call
cmpl
jne
mov
inc
mov
jmp
xor
mov
addl
mov
mov
xor
mov
addl
mov
mov
xor
mov
mov
mov
mov
xor
mov
add
xor
mov
mov
mov
sub
mov
addl
mov
movzbl
movzbl
sub
mov
movzbl
xor
mov
mov
xor
add
mov
lea
mov
lea
mov
lea
mov
lea
mov
mov
xor
add
push
mov
xor
add
push
mov
xor
add
push
lea
push
pushl
pushl
jmp
mov
cmp
ss
dec
clc
jne
in
bound
fstpl
bound
sub
pop
add
pop
jne
xchg
dec
jb
jno
into
push
hlt
and
xchg
fbstp
icebp
aaa
movsb
add
mov
in
pop
cmp
pushf
mov
addl
scas
sahf
test
js
iret
mov
test
xlat
rcrb
aam
dec
std
mov
in
fbstp
push
pusha
stc
mov
cmp
cmpsb
loope
ret
push
sub
jmp
pop
or
inc
insb
stos
cltd
aad
dec
pop
xor
test
mov
rcrb
out
pop
idiv
xor
lods
inc
xor
cmc
jne
push
push
xchg
sub
jb
stos
ficoml
lret
out
out
add
push
jo
addr16
adc
cwtl
mov
inc
into
pop
cmp
xor
cmp
add
shl
inc
sub
push
xor
mov
lods
mov
jo
lea
shlb
cmp
dec
add
insl
xchg
push
mov
adc
lods
fwait
ret
ret
jmp
jmp
or
stc
inc
sbb
xchg
cmpps
stc
mov
aas
xchg
fwait
add
mov
jo
mov
andl
arpl
jp
adc
sub
pop
or
pop
xchg
loop
cmp
int
adc
das
je
sahf
cmc
or
or
adc
cli
les
jnp
or
jo
pop
sbb
xchg
and
rolb
cmp
add
xchg
mov
pushf
les
loop
push
push
ljmp
lret
repnz
out
imul
sbb
and
mov
out
or
and
nop
xchg
jecxz
outsb
mov
adc
loope
lcall
xchg
sbb
pop
pop
and
bsf
fldenv
sbb
jno
mov
pop
sbb
xor
add
leave
popf
scas
ret
ss
bndstx
mov
and
cmc
xchg
push
mov
mov
loopne
cmp
sbb
adc
mov
push
push
icebp
mov
xchg
int
lods
push
xor
mov
enter
pop
pop
shll
in
mov
xchg
hlt
dec
pop
dec
lret
adc
xor
push
adc
mov
aam
fildll
test
mov
cmp
sbb
cmp
leave
dec
data16
xchg
xchg
xchg
adc
mov
dec
sbb
es
icebp
lock
lcall
or
mov
inc
or
add
and
jo
cmpsb
das
loope
pop
inc
sub
in
mov
mov
inc
sub
or
decb
jp
xor
mov
pop
out
aad
jg
ret
testb
insl
dec
clc
cmpsb
daa
adc
push
arpl
mov
lods
repz
mov
mov
stos
icebp
popf
jno
lea
in
repnz
pop
and
int3
add
lock
adcl
repnz
xor
ret
ret
mov
cmp
mov
lds
and
mov
adc
imul
cmp
push
mov
adc
js
icebp
xor
jno
dec
push
mov
and
sbb
dec
out
dec
int
mov
push
adc
push
stos
add
mov
mov
push
mov
fwait
mov
fsubrp
jns
fldcw
adc
roll
sbb
pop
add
ret
and
repnz
and
pop
mov
mulb
cld
rorb
mov
push
call
or
js
or
out
frstor
fimuls
mov
add
aaa
jno
cmpsl
frstor
add
cwtl
lock
xor
sbb
sbb
pop
add
and
cmp
pop
pop
or
inc
jbe
mov
xchg
test
and
loope
int
ret
stos
cltd
mov
cld
mov
and
iret
push
add
mov
pushf
daa
leave
cwtl
jle
and
clc
jo,pn
outsl
ss
fnclex
shrl
push
jb
and
xchg
jle
gs
dec
jns
sbb
jb
inc
mov
pop
outsl
push
aas
fnsave
xor
adc
enter
or
inc
adcb
shlb
or
insb
rcll
rolb
jmp
pop
mov
jge
xor
mov
dec
icebp
inc
aas
dec
cs
stos
jmp
and
inc
pop
sub
cmp
and
arpl
shrl
push
std
fcompl
or
sub
cmp
stos
sbb
lds
adc
jnp
mov
loop
push
sbbl
add
imul
push
sbb
out
xchg
test
out
filds
jge
push
insb
mov
mov
ret
in
ds
cmc
inc
imul
out
push
nop
adc
push
enter
movsl
pop
mov
aam
not
push
sub
sbb
adc
daa
stos
and
es
popf
cmc
jp
and
sbb
iret
inc
lret
push
sbb
and
gs
inc
add
mov
or
jne
call
push
adc
movsb
and
in
cvtps2pi
push
push
mov
out
lahf
xchg
xchg
aam
imul
mov
cmp
jl
xor
add
dec
xchg
stos
test
mov
inc
mov
ss
mov
mov
movlhps
incl
xchg
lods
int
in
testb
movsl
fidivl
sub
cld
pop
inc
pop
cli
arpl
dec
sti
andb
fs
outsb
xorb
pop
mov
daa
rorl
pop
cmp
and
xchg
iret
mov
mov
jae
dec
cwtl
cmp
mov
pop
dec
popa
push
add
add
adc
push
mov
outsl
jmp
loopne
testb
pop
sub
stos
jle
iret
push
jmp
inc
adcl
testb
push
mov
and
mov
xchg
in
jl
popa
add
xchg
popl
popa
dec
ret
add
repz
fiaddl
jb
xorl
fcomip
mov
mov
lods
adc
mov
mov
cmp
ret
daa
cmp
les
seta
scas
shl
and
push
in
into
lods
or
mov
cmpsb
ret
push
inc
stc
xlat
add
into
push
dec
nop
test
fiadds
ret
ds
push
in
push
pop
jno
xchg
mov
lds
pushf
add
in
popf
sub
adc
in
mov
jo
ss
sbb
in
pop
cmp
out
xchg
aas
push
mov
je
mov
add
scas
push
xor
xor
fucomi
jp
mov
cmp
aaa
mov
fnstsw
shlb
xor
push
pop
and
adc
rolb
in
inc
cmpsl
mov
fs
not
pop
shlb
cmp
cmp
rep
out
inc
pop
aam
add
rcll
xor
and
sbb
inc
xchg
xor
mov
out
dec
mov
xor
gs
push
cmp
xor
repz
or
mov
xor
jnp
cmc
mov
mov
pop
cli
int3
jle
or
outsl
imul
data16
xchg
and
test
nop
insb
fimuls
mov
outsl
lods
mov
stc
lcall
xchg
fisubl
fldlg2
push
and
cmp
xor
mov
insb
jne
rorl
or
mov
shrl
mov
lahf
sbb
or
out
xlat
mov
shlb
stc
xchg
jl
sti
add
mov
pop
sbb
dec
les
jecxz
outsb
bound
inc
pusha
aas
sti
out
test
mov
fisubrs
aam
cmp
lds
and
sub
mov
pop
mov
and
sti
mov
pop
xor
int3
in
hlt
pushf
jl
jb
mov
mov
test
jmp
popf
pop
into
sub
icebp
in
lea
outsb
inc
ds
subb
test
cmp
inc
fucom
lea
mov
mov
dec
rorb
insb
jnp
fsubrl
ret
pusha
push
add
shrb
fsts
pop
push
and
jg
lahf
or
cmc
aas
push
movsl
jp
xor
dec
outsl
data16
pop
sbb
sbb
in
pop
nop
movsb
div
fldl2e
clc
lret
push
cmc
pop
stos
add
or
cmp
cmp
pop
cli
lea
jb
es
cmp
add
sub
mov
sti
in
adc
or
push
stc
cs
shll
stos
fst
sbb
pop
or
mov
icebp
je
imul
negl
aas
mov
cwtl
xchg
shll
out
inc
fwait
je
jl
in
dec
sub
cmc
cwtl
push
adc
xchg
or
mov
cltd
fists
lods
sub
adc
ljmp
xor
or
and
inc
leave
pop
mov
fcmovb
loop
pop
repnz
inc
hlt
mov
mov
inc
mov
out
xlat
cmp
add
cmp
cmpsb
adc
std
mov
pop
xor
imull
ss
dec
jmp
sub
jmp
fistps
or
mov
rolb
jb
sbb
jp
sbb
lret
loope
in
das
lcall
add
shlb
jb
dec
xor
ds
mov
out
das
ljmp
sahf
test
pop
mov
xchg
jne
cmc
lds
lret
imul
cld
mov
push
cmp
cwtl
in
sbb
or
sub
and
jg
int3
cwtl
mov
das
jge
pop
xor
fnstenv
add
mov
xchg
mov
jmp
insl
mov
add
rclb
xchg
inc
mov
adc
call
cmpsl
ljmp
hlt
mov
sub
sbb
push
mov
addr16
out
mov
add
cmp
push
xchg
movsl
fists
jb
imulb
imul
inc
sbb
mov
into
or
cwtl
scas
fsubr
stc
jle
dec
inc
cmp
mov
mov
aad
arpl
fidivl
jp
cmp
loopne
in
pop
fsubl
test
or
ljmp
mov
out
mov
insl
cs
cmpb
push
pop
popf
pop
mov
mov
pop
jg
add
sbb
inc
cld
lahf
sub
imul
leave
push
add
or
lret
mov
xchg
inc
add
and
sbb
jge
adc
mov
in
sub
outsl
sbb
hlt
ffree
inc
mov
cmp
ja
dec
xor
imul
stc
adc
out
sub
push
xchg
pop
inc
pop
rcrl
cmp
loope
push
adc
bound
stc
cmpsl
cmp
mov
loopne
jns
fisttpl
loop
mov
addr16
stc
pushf
mov
xor
enter
movsb
dec
sahf
out
push
lods
dec
jae
sbb
mov
mov
out
jae
mov
nop
call
mov
pushf
and
lods
popa
push
cmp
aam
jae
jge
xchg
aam
imul
mov
mov
xchg
lods
in
push
push
xor
xor
and
xchg
pop
adcl
aad
aas
ret
shl
les
and
pop
add
sub
out
fucomip
in
mov
mov
mov
ds
xor
data16
cmc
push
xor
scas
adc
gs
sub
or
dec
push
sbb
aaa
pusha
pop
cli
pop
mov
xchg
shll
pop
movsl
ljmp
xor
adc
aaa
pop
mov
mov
cmp
insb
push
adc
inc
mov
addr16
cmp
mov
mov
mov
mov
inc
mov
fimull
ds
jae
mov
and
pop
pop
bound
xor
jl
ret
lahf
pop
mov
stc
pop
cltd
sub
push
rorb
and
mov
incb
out
add
lret
cmc
stos
adcl
nop
inc
jbe
es
jp
dec
pop
or
roll
mov
pushl
les
cmpsl
jle
loope
jle
dec
add
or
imul
movb
pop
repnz
xchg
in
cs
mov
cmp
and
cmp
aam
mov
out
or
cld
dec
hlt
adc
adc
mov
push
sahf
pop
jecxz
inc
int
notl
pop
outsl
jno
push
and
or
push
lahf
sbb
jge
add
xchg
in
sbb
sbb
dec
jo
inc
lds
aaa
and
mov
lret
push
aam
mov
int3
push
fsubs
add
mov
mov
push
jb
or
js
dec
les
mov
sbb
test
fistps
pop
xor
xor
call
xor
or
addr16
out
pop
pop
clc
ret
icebp
sbb
lahf
out
mov
add
cmpsl
pop
or
jo
xchg
jb
lock
push
sbb
sbb
sbb
ss
push
and
mov
dec
popa
pop
rclb
mov
movsl
test
and
shr
push
in
mov
sbb
test
xchg
inc
sub
hlt
sub
cmp
rolb
push
inc
xchg
fistpl
ja
fmul
nop
pop
push
xor
mov
sbb
jl
imulb
rcll
call
add
add
clc
fnstenv
movsl
cmp
fwait
sub
rcrb
mov
jle
mov
or
daa
or
rcrb
ret
adc
mov
adc
mov
sbb
jns
pushf
aaa
hlt
iret
sub
pop
add
xchg
lea
sbb
ds
push
push
cmc
out
pop
pop
xor
cld
int3
sbb
jns
addr16
jae
cmp
add
or
orl
insb
test
xchg
stos
orl
push
pushf
nop
clc
dec
call
push
je
pop
cmc
cmp
dec
mov
xlat
sbbl
xlat
dec
out
int3
jne
inc
and
nop
cltd
mov
into
mov
pop
xchg
movsb
sbb
mov
pop
xor
call
inc
pop
inc
sub
in
jbe
add
mov
sbb
push
in
test
sarb
lock
sbb
mov
dec
xchg
mov
aam
out
inc
jbe
or
fdivs
fiadds
dec
push
dec
mov
push
jge
add
jg
dec
pop
push
and
aam
pop
lcall
push
push
lock
add
add
jo
adc
add
insl
mov
push
inc
or
in
fsubs
repnz
idivl
ffreep
shlb
gs
mov
jle
xchg
pop
sub
xchg
gs
scas
or
pmulhw
fcomi
or
pop
xor
push
or
xor
inc
shlb
sbb
fnstenv
sub
xchg
aas
dec
jle
in
popa
sub
mov
mov
mov
sbb
jns
clc
dec
call
pop
insb
mov
nop
mov
sarb
pop
sbb
repnz
push
in
mov
es
or
sub
jae
jmp
jae
sbb
insb
test
lods
int
mov
roll
cmp
popf
and
or
sub
jp
sub
push
mov
ret
ret
aas
jle
push
dec
cmpsb
cwtl
sbb
and
fcompl
ficoms
es
adc
lcall
loop
push
ja
cs
test
sub
into
dec
mov
adc
aas
out
sub
ss
xchg
xor
dec
sub
jp
push
lahf
xchg
sub
in
arpl
xor
dec
jmp
add
negl
es
roll
fnstenv
fwait
mov
sub
orb
lcall
stos
sti
push
mov
mov
jns
mov
or
and
mov
xchg
ds
inc
rol
jle
and
mov
gs
push
js
mov
in
lods
or
push
jnp
pop
stc
mov
jmp
dec
in
nop
cmp
lds
jg
or
subb
jbe
jecxz
cmp
bound
sti
sbb
jns
xchg
stos
jno
jne
pop
xor
pop
clc
inc
shr
jae
adc
push
clc
mov
xchg
ss
ds
or
in
xor
mov
and
pop
cmp
orb
sub
push
xor
retw
into
imul
lea
fldt
imul
imul
dec
pop
push
jp
ret
lahf
push
lds
jo
ja
jmp
adc
xchg
mov
test
dec
and
lock
test
nop
icebp
loop
je
in
daa
sbb
cmc
mov
imul
sub
cltd
xor
ja
int3
out
dec
inc
jno
fnstenv
mov
and
add
leave
push
mov
xchg
rorb
push
xor
enter
arpl
push
bound
mov
sbbb
jecxz
pop
cli
xchg
mov
inc
scas
pop
enter
popf
movsl
mov
ss
out
push
ss
hlt
faddp
or
pop
sti
pop
icebp
cmc
xlat
aas
xor
sarl
or
xchg
lods
in
fs
xor
insl
xchg
sub
adc
scas
rcr
dec
and
pop
lds
adc
in
jno
es
sbb
ss
es
imul
add
addr16
push
xchg
adc
daa
mov
notb
sti
rorb
xchg
std
mov
sub
jle
fldt
mov
inc
xchg
pop
setae
int
cmpsb
sbb
insl
adc
sub
push
aas
cmp
cltd
sub
stos
jmp
cmp
mov
jbe
push
ret
adc
xor
daa
lcall
xchg
imul
loope
inc
pusha
push
push
test
sub
clc
cmp
int3
lods
loop
int3
add
das
jb
sahf
rorb
dec
aad
cwtl
push
movsb
imul
sub
pop
jle
call
lods
or
jns
in
sbb
dec
test
cwtl
out
adc
sub
jno
mov
pop
pop
sub
test
lret
les
mov
adc
out
xchg
ficoms
je
push
pop
popf
sbb
in
int3
test
inc
push
cmp
fidivrs
jle
popa
add
sub
lcall
les
movq
mov
xor
int
push
xor
lds
sub
fisubs
fldl
aaa
and
scas
leave
aam
push
sub
shlb
test
pop
cmc
out
cmp
loopne
cmpsb
jecxz
cmp
pop
cmc
das
cmp
lods
pop
iret
xor
stos
cld
inc
sub
aad
fcmovnu
mov
mov
les
xchg
push
shlb
jbe
sub
xor
mov
sub
std
push
aaa
or
fdivl
mov
mov
inc
xlat
mov
inc
cmpb
sub
mov
inc
fdivrs
mov
and
shlb
mov
stos
xor
push
add
xchg
ds
inc
shrb
bound
push
adc
and
leave
push
cmp
xchg
in
testb
sub
cmpsl
and
add
idivb
mov
stos
xchg
push
iret
loopne
mov
jbe
lahf
xlat
mov
inc
rol
lods
pop
cmp
sbb
and
push
and
fisubs
add
fsub
inc
adc
aas
js
mov
push
lahf
push
aaa
adc
push
aas
mov
dec
cmp
dec
pop
cmp
nop
pusha
dec
pop
jp
xchg
mov
jl
outsb
ret
inc
jno
push
loope
ja
enter
mov
or
gs
data16
fs
mov
paddusb
outsb
and
lds
dec
hlt
stos
inc
shrl
xor
add
pop
mov
fiaddl
and
leave
movsb
mov
int3
sub
insb
cmp
pop
jae
sbbl
and
test
mov
stos
popl
filds
jmp
call
jmp
faddl
loop
pushaw
mov
mov
rorb
fisubs
mov
cmp
fdivl
scas
add
mov
xor
sub
jnp
in
xlat
mov
js
sbb
mov
loopne
or
xor
ds
popa
sbb
inc
lds
add
or
iret
dec
mov
scas
daa
pop
mov
cmpsb
pop
push
mov
push
inc
inc
fnclex
cld
cwtl
iret
in
cmp
inc
cwtl
mov
push
xor
out
pop
ds
dec
mov
loopne
sub
fwait
or
aad
lcall
ficomps
ret
scas
loopne
mov
enter
rorl
push
xchg
xchg
lods
xchg
or
mov
leave
jecxz
subb
into
adc
dec
lret
jae
daa
jmp
test
cmp
sbb
and
dec
fists
fisubrs
adc
xchg
fwait
xlat
xlat
test
jae
lret
clc
add
add
xchg
add
push
mov
addr16
lcall
add
popf
mov
jecxz
stos
add
mov
mov
aad
sub
push
sub
push
cmp
sub
testb
mov
lret
mov
loopne
dec
fwait
ljmp
adc
addr16
push
int3
ja
arpl
in
movsb
jne
out
fcoml
pushf
adc
out
xchg
loop
in
xchg
repnz
nop
mov
out
xchg
fnsave
dec
mov
jnp
rcll
hlt
int
xlat
mov
or
imulb
jg
movsl
sub
jl
xabort
mov
add
mov
lods
test
xchg
push
shlb
cmp
jg
lods
and
or
jmp
pop
sub
ss
xor
adc
pop
cmp
cs
xchg
xchg
inc
lea
jge
aaa
mov
xor
inc
jae
mov
xor
adc
fnstcw
or
or
cs
mov
pop
lcall
push
adc
and
pop
aad
inc
icebp
enter
lret
xor
pop
nop
push
sbb
lods
fisubrl
sbb
sub
sub
rcr
xor
pop
inc
std
out
cmp
jnp
rcl
sub
je
divb
adc
add
pop
ds
int3
sbb
dec
lds
je
push
and
faddl
insb
push
jg
mov
in
xchg
cmpl
push
test
mov
cmc
push
jmp
out
mov
and
stc
mov
test
lds
xlat
mov
sbb
xor
mov
dec
scas
outsb
rol
orl
popf
into
leave
xchg
sti
jne
lcall
ja
sahf
or
xor
dec
sti
mov
mov
testl
ffreep
in
xchg
out
les
sbb
nop
xchg
pop
dec
cltd
pop
bound
icebp
mov
ret
jbe
enter
test
jp
mov
das
mov
mov
orb
aaa
aad
ret
xor
jne
add
mov
lods
in
daa
adc
ljmp
push
fsts
aaa
insb
inc
cwtl
and
push
adc
imul
mov
xchg
xlat
sahf
dec
xlat
mov
movsl
xor
fsubrp
cmpsl
jo
fnsave
jns
scas
leave
xor
adc
mulb
ds
fidivl
clc
add
aam
iret
dec
jp
add
xchg
sbb
sub
and
cmp
imul
jl
out
fs
sbb
and
es
jnp
mov
adc
nop
rcrl
mov
mov
add
data16
add
out
rclb
xor
xchg
adc
cmp
cmp
repnz
aad
push
add
es
jae
cmpsl
and
adcb
mov
adc
ds
push
mov
jnp
add
push
pop
pop
fwait
das
mov
ljmp
push
fwait
push
inc
cld
xor
mov
leave
mov
sub
data16
mov
dec
loope
cmp
xor
mov
xor
lahf
ret
jno
call
mov
xchg
fisttpl
jne
cmp
dec
mov
loope
movsl
cwtl
fs
cmp
jno
enter
xor
mov
lret
in
mov
jbe
repz
lds
gs
ja
call
cmp
push
jno
je
rolb
pusha
xchg
in
jne
cmpb
pop
es
popf
rorb
mov
sub
das
not
sub
movsl
in
inc
xchg
or
scas
or
and
imul
es
push
inc
notb
popf
fisubrs
mov
xor
sub
jo
addb
aaa
xchg
jmp
inc
inc
rcr
mov
mov
cltd
popf
scas
nop
mov
loope
or
push
push
add
gs
pop
bnd
push
or
or
mov
add
sbbb
lret
jecxz
sahf
sbb
push
pop
cmp
mov
cmp
cs
mov
mov
scas
sbb
jb
push
sahf
adc
dec
pop
or
inc
lahf
mov
lcall
leave
arpl
dec
or
jg
in
in
mov
inc
aas
out
adc
inc
loop
subl
push
ffreep
push
jle
loopne
fmuls
adc
imul
out
jecxz
test
or
pushf
adc
pop
push
pop
imul
dec
js
cmp
scas
xor
leave
sub
pop
sub
and
push
or
jbe
adc
mov
push
jbe
mov
dec
sub
add
out
mov
sbb
mov
or
std
dec
jl
fistps
int3
je
fwait
lods
repnz
cltd
aam
shrb
mov
cs
int3
fimull
jg
pop
cmp
jge
or
imulb
push
cmp
inc
sub
mov
cmp
adc
sub
or
mov
jecxz
push
imul
sbb
daa
lret
loope
cmp
inc
sbb
hlt
dec
sub
rcl
stos
pop
mov
aaa
adc
mov
jbe
fstpt
or
sbb
mov
std
pop
movsb
dec
jp
cmp
jp,pt
test
addb
mov
pop
and
mov
mov
mov
das
out
dec
repnz
int3
cmp
jge
jnp
xchg
mov
dec
neg
inc
mov
dec
fidivs
pop
xchg
int
adc
jae
push
jge
and
xchg
xchg
sub
stos
test
mov
adc
stos
sbb
add
imul
add
jge
nop
dec
ds
mov
cmpsb
ds
addr16
aas
int
sti
cmp
mov
jnp
cld
jb
inc
shlb
stc
stos
cmc
pop
in
call
add
movsb
stos
hlt
xor
jecxz
punpcklbw
pop
push
sub
adc
inc
fcmovne
sbb
sub
dec
cmp
mov
imul
insb
js
mov
mov
clc
mov
popa
nop
jmp
inc
push
fcoms
add
mov
mov
lock
mov
fxch
xor
mov
ret
cmc
mov
add
out
sub
ret
subl
fisubrl
or
adc
ficoms
jmp
xchg
inc
mov
mov
mov
testb
mov
jae
add
fstpt
repz
outsb
sbb
xchg
pop
sbb
ds
xor
sarl
sub
xchg
and
movsb
into
xorl
in
add
mov
sahf
pop
mulb
loop
xchg
mov
sub
push
push
js
fwait
inc
sahf
test
je
sub
push
adc
pop
lods
inc
iret
and
xor
and
movsb
bound
dec
stos
iret
int
mov
ret
push
pusha
bound
scas
or
roll
dec
and
lret
add
ss
push
jmp
xchg
sub
mov
mov
mov
cmc
ss
sbb
xchg
jecxz
outsb
movl
cmp
cli
fsubrl
jbe
ja
nop
pop
in
xchg
hlt
scas
loope
in
push
mov
pop
cmpsb
jb
movsb
outsb
loope
and
out
es
mov
imul
int
push
inc
mov
mov
and
and
jle
mull
filds
outsl
insb
lods
ret
lcall
out
inc
jnp
fldcw
push
das
lret
pop
lret
jo
jmp
sub
xchg
jg
cs
mov
sub
pop
mov
pop
out
dec
jle
loopne
or
cld
fwait
mov
cli
imul
enter
imul
xchg
inc
xchg
dec
dec
movl
adc
lods
sti
jo
and
and
inc
imul
push
in
movsl
aad
jnp
fistl
out
rcr
mov
dec
test
rol
pop
sub
jle
jns
ja
xchg
jmp
pop
std
and
or
sbbb
fimull
mov
aas
dec
xchg
test
dec
and
dec
mov
sub
pop
mov
dec
rclb
mov
imulb
jae
leave
or
out
and
jmp
mov
test
sahf
xor
fmull
jbe
bnd
push
push
pop
or
imul
mov
add
adc
add
dec
fwait
movb
insl
jno
rorl
inc
ljmp
cmpb
testl
sbb
dec
aas
add
jmp
arpl
mov
or
mov
cltd
lahf
push
push
test
fistpll
mov
jge
jae
inc
lcall
scas
dec
fidivs
push
inc
jl
push
xlat
add
sbb
fxch
add
sub
adc
aad
sub
and
fldt
outsl
sub
push
sbb
or
adc
pushf
scas
stc
mov
ss
addr16
mov
cwtl
or
push
mov
pop
int3
loopne
and
sub
adc
cmp
ljmp
icebp
jnp
xchg
fimuls
inc
jl
aaa
fs
xchg
inc
fwait
stos
aad
push
cmpsl
shl
xor
mov
adc
cmpsl
pop
out
mov
or
les
aaa
cli
fadds
out
xchg
mov
clc
rcrl
rorl
mov
push
mov
cmpl
imul
add
fwait
clc
jle
jmp
call
cmc
cltd
dec
jle
repz
mov
pop
xchg
cmp
dec
push
pusha
in
inc
clc
mov
movsl
xor
sub
add
out
cs
mov
mov
pop
push
inc
sub
mov
inc
dec
test
inc
hlt
adc
push
inc
loopne
mov
add
sub
sub
mov
icebp
gs
cld
cld
movsl
outsb
xor
jo
sub
notl
push
test
xor
lahf
pushf
out
fisttps
push
aam
mov
pop
test
scas
fsts
enter
pop
mov
call
test
je
lea
push
mov
xor
add
push
mov
add
push
mov
mov
pushl
call
mov
lea
mov
mov
mov
mov
mov
test
je
lea
mov
mov
mov
mov
mov
mov
mov
sub
mov
xor
mov
sub
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
pushl
xor
sub
mov
jmp
lods
mov
ja
mov
fdivrl
pop
bound
pop
bound
xlat
sub
mov
fldcw
push
jmp
fsubs
xchg
mov
mov
mov
push
sbb
lcall
xor
and
test
dec
movb
imull
fldenv
mov
rcl
loope
nop
pop
imul
mov
inc
jl
inc
loopne
testl
pusha
scas
xchg
pushf
pusha
sbb
int3
ljmp
outsl
pushl
mov
jo
je
lret
ret
jo
mov
lods
sbb
pcmpgtw
xchg
das
loop
test
xor
push
xor
jnp
xchg
dec
xor
aaa
test
mov
mov
movsl
arpl
add
push
sbb
inc
lea
push
sub
subb
cs
hlt
movsb
xchg
mov
push
or
imul
push
jle
rorl
xor
por
daa
pop
repz
mov
addb
mov
push
js
push
xchg
xorb
push
mov
jne
sub
pusha
xchg
dec
dec
jno
rcr
inc
movsl
jg
sbb
dec
popa
dec
cld
xchg
pop
mov
sbb
push
or
inc
xor
xchg
jg
lret
sub
pusha
testb
jae
ss
test
mov
cmp
mov
inc
cmpsb
and
mov
push
push
andl
cmpsl
call
addb
xchg
and
and
pop
adc
sbb
and
sbb
fildll
mull
mov
sub
shll
fisubrl
xor
in
ljmp
iret
inc
movsb
fsubrs
mov
pop
fdivrl
movsl
push
lods
pop
adc
idiv
in
xor
out
addr16
push
in
cmp
cmpsb
jp
inc
call
push
out
shlb
xchg
or
out
das
mov
mov
loop
inc
or
fwait
mov
movsl
sbb
dec
mov
or
push
jmp
popa
mov
push
inc
mov
ljmp
xchg
pop
bsr
notl
mov
and
xchg
decl
repz
xchg
sti
out
fstpt
jno
mov
into
mov
lock
fists
ds
imul
sub
mov
adc
or
jno,pt
test
loop
mov
mov
aas
or
pusha
inc
out
test
xlat
in
sub
loop
or
jmp
mov
lods
dec
cli
push
in
nop
cmp
push
add
clc
jmp
movsb
mov
mov
inc
sub
push
fidivl
xchg
sbb
sub
mov
mov
add
xchg
nop
mov
pop
arpl
mov
inc
rcr
mov
dec
mov
inc
push
sbb
clc
lret
ror
mov
sahf
mov
or
sbb
mov
mov
sub
adc
or
lods
cmp
cli
xchg
mov
mov
scas
xor
dec
pop
subb
mov
int
mov
in
jecxz
xchg
mov
jae
pop
cmp
mov
popa
and
push
lret
call
pop
in
pop
cmp
inc
outsb
mov
jge
inc
movsb
jb
imul
xchg
mov
push
push
je
push
jmp
jno
mov
adc
jae
push
adc
inc
aas
in
sub
mov
mov
xchg
adc
pop
xor
sbb
in
inc
out
bound
jecxz
jo
les
jp
ljmp
lods
or
mov
and
rolb
ficomps
mov
push
outsl
arpl
jns
lea
loop
mov
in
or
and
sub
jp
out
popf
stos
cli
push
fisubs
stc
pop
js
iret
xchg
jp
xlat
repnz
ja
mov
push
divb
pop
jp
cwtl
xor
dec
pushf
movsb
jne
adc
scas
push
jl,pn
dec
xlat
addr16
pushf
fwait
test
stos
add
dec
jl
popf
ret
dec
cld
fiadds
adc
pop
movsl
inc
sbb
adc
adc
sbb
mov
pop
pop
cmpsb
xchg
mov
or
div
pop
mov
mov
std
cmp
jnp
mov
fistps
clc
xchg
inc
inc
leave
data16
js
xchg
jne
sub
mov
lock
hlt
arpl
xchg
inc
add
rcrl
insl
outsl
jp
stc
addr16
or
xor
imul
in
push
enter
fistpll
xor
enter
xor
inc
sub
cmp
repz
into
adc
xor
sub
test
ljmp
out
mov
out
xor
fstl
sbb
repnz
mov
pop
les
pop
inc
cmp
mov
imul
pushf
shll
int
and
repz
jbe
push
rol
mov
mov
jge
lret
out
xchg
js
jle
ficoms
loope
dec
movsl
mov
lret
inc
mov
test
push
push
jns
inc
sub
stos
loop
xchg
mov
shlb
lea
cmpsb
ret
roll
and
lds
lds
jl
cmpsl
mov
add
testl
ljmp
cs
test
jmp
shlb
scas
jne
inc
sub
lock
test
cltd
dec
cmc
aaa
inc
sub
movsb
and
and
xor
adc
call
jecxz
and
pushf
insl
cmpsl
shlb
arpl
lods
xor
sub
bswap
and
cmpsl
push
stos
das
iret
outsl
cmp
inc
or
mov
mov
ficoms
inc
jbe
lods
jmp
aam
lds
xor
push
fwait
mov
dec
je
cwtl
mov
nop
sub
arpl
arpl
aaa
jle
mov
cmp
mov
call
in
fcompl
cmp
mov
ret
je
add
lds
fimull
xchg
sbb
xchg
popf
push
dec
dec
lret
aam
cltd
jo
ss
add
in
mov
stos
and
push
or
mov
sub
push
mov
repz
pop
xchg
inc
adcb
lods
pop
mov
jl
adc
shll
mov
xor
push
scas
movsb
and
mul
adc
ljmp
ds
rolb
add
dec
add
adc
in
add
stos
mov
jns
sub
sub
mov
mov
xor
jno
int3
mov
pusha
xchg
faddl
nop
jne
adc
jge
add
lds
push
dec
add
hlt
ss
mov
jmp
sub
mov
dec
lcall
imul
add
push
loopne
call
ud0
mov
mov
enter
stos
mov
rol
repz
pop
loopne
pop
jmp
cmp
or
loop
popf
in
mov
mov
call
cmpb
ret
xchg
cmp
into
sbb
push
mov
dec
add
jmp
int
or
popf
test
mov
stos
dec
adc
test
xor
and
jcxz
cltd
xor
gs
xor
outsl
mov
push
and
jb
ljmp
mov
aam
in
call
cmp
ror
sahf
xchg
das
adc
repnz
pusha
add
or
sti
and
jmp
cwtl
pushf
je
popa
dec
fistl
mov
lods
inc
push
imul
divb
fwait
jl
push
pop
mov
mov
mov
lock
pop
push
cwtl
sbb
imul
push
mov
sarl
sbb
outsl
aas
jl
aam
and
adc
push
jge
scas
rcll
lahf
push
mov
cld
les
lahf
pusha
and
mov
push
das
bound
movsl
cmove
dec
jmp
mov
mov
dec
sbb
out
jp
enter
pop
mov
mov
loope
mov
pushf
icebp
adc
jecxz
sbbb
js
jmp
cs
inc
inc
jl
test
add
jge
cmp
cmc
mov
rclb
mov
iret
sbb
addb
bound
xor
xor
fimuls
jmp
mov
jp
enter
lods
dec
dec
rcll
pop
mov
or
ret
enter
stc
inc
nop
jecxz
out
mov
fimuls
and
pop
sub
lret
mov
xor
divb
movsb
push
repz
and
mov
inc
jno
in
sub
xchg
cltd
mov
rolb
mov
mov
pop
fisubl
pop
stos
lret
xor
sub
dec
mov
jb
rcr
mov
mov
rclb
mov
pop
xchg
pop
iret
mov
push
sbb
loopne
mov
iret
or
andl
sub
sbb
pop
rol
pop
jno,pt
fcompl
in
xchg
mov
push
and
call
pop
xor
dec
xor
mov
loop
mov
mov
push
lret
addr16
subl
xchg
bound
mov
mov
xchg
xor
mov
bound
mov
push
hlt
fs
negl
lahf
mull
push
mov
mov
mov
and
mov
repnz
das
sbb
je
unpckhps
bound
out
inc
test
fcmovb
xchg
int
jmp
push
hlt
push
and
push
push
sub
inc
or
out
sbbb
insl
mov
loope
in
jp
ficoml
mov
dec
or
loopne
test
nop
mov
lods
push
dec
loop
cmp
rcrb
pop
xor
mov
mov
sahf
xchg
xchg
mov
jmp
jno
xor
cmpsb
xlat
ret
adc
out
xchg
xchg
mov
xchg
push
stos
dec
fs
jmp
xchg
lcall
fbstp
shrb
xchg
or
sbb
mov
scas
push
fistpll
adc
shlb
cmp
pop
outsb
jle
jmp
mov
mov
and
sub
shlb
push
pop
cmpsb
mov
sbb
dec
or
xor
add
imul
iret
mov
sub
lock
push
mov
mov
subb
cmpsl
fidivl
xor
inc
std
adc
lret
and
daa
xchg
push
aam
mov
shlb
loopne
fistl
mov
xor
lods
test
test
je
jno
mov
and
jg
push
ret
pop
lods
in
dec
fs
xchg
add
cmp
push
cmp
ljmp
sbb
lock
sub
into
pop
push
sbbb
xchg
mov
jnp
jl
push
xor
lods
rorl
shl
or
ds
pop
std
jne
into
popa
dec
pop
and
xchg
sbbb
out
xchg
or
and
ds
fwait
inc
inc
xorb
cwtl
pop
fstps
imul
and
aam
ret
and
sbb
fxch
fstl
lock
lds
inc
out
clc
sbb
adc
je
pushf
dec
in
rorb
add
inc
add
das
push
jb
test
les
push
andl
sbb
xor
or
add
sbb
jg
rclb
lcall
jo
xchg
mov
les
sub
pop
add
sub
adc
mov
push
xchg
fdivs
int3
sbb
test
int3
cld
dec
mov
mov
jmp
int3
sbb
scas
adc
add
xlat
inc
pushf
lods
imul
ss
std
scas
pop
into
or
sbb
mov
scas
xchg
cmp
gs
popf
fs
imul
add
aam
sbb
mov
stc
iret
inc
inc
lcall
push
xchg
mov
add
jmp
xchg
mov
mov
adc
adc
or
jg
int3
xlat
fisttpll
enter
pop
js
mov
daa
inc
push
loopne
adc
icebp
and
ljmp
enter
in
push
popf
sub
cmp
andb
roll
out
cmpsl
jmp
jl
xchg
cmp
sti
mov
add
cli
jl
dec
or
cld
inc
sbb
shll
bound
mov
sub
mov
or
insl
push
aad
roll
xchg
jge
lods
add
jecxz
xor
pop
push
push
pop
pusha
push
sub
pusha
nop
pop
mov
pusha
cltd
cmp
mov
cmpsb
adcb
addr16
xorb
pop
jnp
jne
mov
testl
xor
mov
hlt
sarb
jg
dec
fsub
lahf
xchg
inc
or
mov
nop
dec
roll
sub
push
cs
sbb
xor
sarb
les
js
sbb
enter
into
cmpsb
push
jl
dec
stos
cmp
fcomps
ret
mov
mov
mov
mov
mov
cs
push
dec
lret
or
push
add
mov
and
shll
clc
in
int3
and
xchg
nop
shrl
addr16
out
aas
inc
in
loopne
jmp
dec
fisttpll
sub
cmpsb
xchg
into
icebp
popf
pop
adc
je
add
cld
jl
out
test
lds
mov
les
jo
sti
stos
mov
scas
insb
push
push
inc
cmc
pop
sbb
lahf
push
call
loop
cs
mov
fmull
dec
outsl
dec
imul
fisttps
aam
sbb
jbe
movsb
add
fs
data16
pop
scas
mov
int3
sbb
push
sub
fxch
inc
stc
daa
adc
xchg
pop
in
sbb
bswap
cmp
inc
pop
mov
jmp
mov
pop
fidivl
cmp
sub
and
jecxz
dec
fucomp
sub
mov
dec
jmp
lock
inc
sub
das
je
xor
jmp
jmp
scas
mov
sahf
add
jno
or
mov
cmp
xor
cmp
lcall
in
cmpsb
dec
ret
lret
or
out
sahf
jns
or
pusha
pop
ja
call
pop
or
or
decb
dec
loop
pop
out
pop
mov
jp
or
enter
mov
pop
push
or
sbb
xor
push
imul
adc
sub
push
push
fistpl
stc
sub
xor
sub
mov
mov
fisubrs
nop
inc
mov
inc
inc
add
ljmp
jge
in
xchg
push
add
data16
pop
push
cmpsb
xor
subl
loopne
cmpsb
xchg
fdiv
imul
jo
popa
ja
adc
mov
rorl
out
movsl
cli
dec
mov
push
xchg
xor
cmp
and
or
mov
mov
fdivrl
pop
stos
fisubrl
inc
jmp
adc
cli
jmp
int3
lods
cs
insb
fdivl
push
cmp
mov
addl
and
in
cwtl
ficomps
rorb
and
pop
shl
cwtl
dec
add
in
or
sub
adc
or
daa
cmc
jmp
xchg
mov
lret
jne
or
ljmp
push
frstor
out
inc
ret
lock
push
loopne
loopne
inc
mov
rorb
push
in
jmp
inc
and
sbb
mov
insb
push
leave
cwtl
or
dec
shrl
je
ret
jmp
movsb
testb
mov
sbb
push
cmc
outsb
inc
xlat
push
push
pop
ret
outsb
in
push
lock
xor
cld
inc
inc
mov
mov
mov
jp
loope
lods
es
fldcw
int
fisttpll
fimull
jbe
imul
test
movsb
loope
mov
adcl
scas
dec
imul
std
into
int
ja
sbb
pusha
xchg
rol
mov
shll
pop
pop
add
jge
add
cltd
xchg
xchg
cs
jp
cld
fisubl
pop
cwtl
jl
push
jo
dec
push
cmp
stos
xchg
fstl
jns
add
out
push
shrb
pop
pop
mov
or
test
loop
pushf
ret
lcall
test
xor
or
das
mov
mov
mov
pushf
sbb
pop
icebp
sbb
ljmp
pop
fcmovnu
inc
cmp
insl
mov
xchg
ljmp
jo
addb
in
pop
add
and
inc
outsl
lods
test
cltd
maxps
icebp
sbb
mov
push
adc
jmp
iret
mov
popa
pop
mov
in
call
add
cltd
push
popf
push
push
xchg
icebp
and
and
data16
in
jae
xchg
stc
xchg
xchg
lds
xchg
inc
xchg
es
rolb
mov
add
stos
and
fst
js
cmp
cmp
out
and
pop
or
jp
lahf
int3
sbb
inc
lods
clc
jle
imul
sub
mov
insb
shl
mov
stos
lods
sub
aaa
cld
out
and
inc
nop
push
jge
push
xlat
cltd
inc
cmc
or
mov
jne
cmp
add
cmp
xor
rcrb
rcll
xchg
sbb
rorb
icebp
lods
sahf
out
cwtl
inc
dec
shll
out
and
sub
ret
adc
xor
enter
popa
scas
mov
pop
call
cmp
cmpb
in
adc
loopne
sbb
popf
lock
xor
andl
arpl
inc
pusha
clc
inc
iret
xor
cli
into
sub
lahf
test
sbb
cmp
sub
adc
lock
mov
mov
arpl
aaa
mov
movsb
test
adc
repnz
and
xor
mov
mov
repnz
stc
jecxz
push
in
add
hlt
cmpsb
test
and
out
stc
enter
loope
push
jnp
fcom
das
pop
ss
sbb
sbb
pop
jb
xlat
sub
xchg
jb
cmp
inc
jle
fdiv
sar
jo
mov
dec
pop
daa
add
leave
movsl
test
out
stc
push
int
mov
push
daa
addr16
ficoms
insl
fnsave
pop
lods
shl
dec
jo
mov
mov
mov
popf
inc
pop
clc
mov
enter
push
pop
aas
movsl
test
not
mov
daa
or
pop
fiaddl
insb
repz
jmp
shll
in
cmp
stc
fprem1
mov
popa
test
shr
mov
jl
rcll
mov
out
mov
pushw
ror
ds
mov
and
orb
xlat
sbb
adc
mov
stos
std
insb
push
mov
enter
dec
movsb
xchg
lahf
shll
xchg
or
cwtl
dec
cs
aaa
lds
mov
mov
xchg
push
cmp
xchg
in
mov
or
rclb
inc
jae
push
ffree
aas
je,pt
sub
loope
xor
xchg
int
fdivrp
das
mov
xlat
adc
sahf
inc
push
cmc
push
imul
bound
pushl
jne
push
or
pop
pop
pop
loopne
repz
inc
mov
fimuls
stc
lock
lret
test
fdivl
decb
call
test
and
mov
pop
aas
adc
lock
iret
aad
sbb
and
pop
push
es
fs
dec
xor
int3
mov
xchg
add
xchg
inc
or
dec
pop
or
scas
dec
je
pop
hlt
or
xchg
das
push
hlt
filds
fs
shr
aad
cmp
andl
inc
out
jbe
adc
out
movl
int3
adc
call
in
inc
pushf
lret
inc
xor
loop
mov
rcll
cmpb
shll
aaa
dec
push
mov
fdivrl
pop
addl
enter
and
pop
fists
sub
or
std
jge
adc
rcrl
xlat
add
movsb
cmp
loope
cld
js
jb
repz
mov
cmc
jbe
pop
dec
xlat
xorb
psubd
sbb
and
add
dec
cmc
imul
lods
jp
test
or
or
movsl
sub
nop
clc
rcrl
loop
adc
jns
stos
std
imul
inc
cli
mov
lret
cmc
pop
mov
mov
inc
in
push
jmp
mov
sbb
sub
sbb
mov
fwait
into
es
rclb
jmp
push
lret
push
aad
push
jne
mov
sub
in
icebp
loope
orb
mov
xor
and
loop
cmc
aad
push
add
and
decb
sbb
mov
xchg
mov
jl
popa
inc
jecxz
inc
jb
imul
fbstp
mov
mov
mov
mov
push
jae
xchg
adc
roll
ja
das
leave
push
es
in
mov
sbb
addr16
add
jecxz
push
pop
mov
adc
divl
popa
mov
lahf
push
pop
cs
mov
pop
outsl
or
jecxz
cmp
dec
cmp
push
ja
xor
push
cmp
mov
fildll
and
inc
pop
ja
fmull
push
scas
pop
push
cmp
mov
out
and
dec
adc
sbb
or
jo
mov
repnz
sub
push
les
aam
pusha
jno
mov
jl
iret
jg
ffreep
xchg
mov
div
sub
cld
jle
or
mov
nop
cwtl
add
add
mov
mov
adc
mov
xchg
call
mov
push
xchg
incl
add
fstl
cmp
mov
scas
rcrl
das
jg
xchg
gs
inc
cmpsb
sbb
pop
mov
aad
movsl
mov
neg
xor
sahf
jo
xchg
xor
jmp
jo
mov
out
dec
loopne
xchg
sbbl
adc
pop
aad
pop
in
shrb
lret
dec
mov
loop
adc
cmp
jl
inc
nop
loopne
xchg
xchg
les
mov
mov
xchg
out
fs
push
jl
popa
mov
sbb
out
pop
andl
scas
add
arpl
popa
pop
lock
mov
setbe
push
mov
xchg
inc
mov
testb
push
fucomi
push
push
adc
or
loop
pop
lahf
xchg
push
out
adc
xor
sti
inc
subb
std
jecxz
dec
out
push
pop
cmp
xorl
mov
cmp
gs
call
xlat
or
shlb
fnstcw
fwait
in
das
push
clc
js
pop
clc
inc
mov
stos
mov
push
mov
fidivrl
mov
outsl
or
in
bound
adc
sbb
dec
rcr
push
sbb
mov
mov
sub
out
and
adc
fs
pop
pusha
jp
mov
jnp
xchg
scas
iret
mov
dec
or
or
push
data16
pop
ljmp
rclb
scas
bound
test
xor
sbb
push
add
lcall
push
mov
out
inc
fucomip
pop
or
push
sbb
sub
loope
mov
cmp
insb
pushf
mov
gs
jb
mov
jb
mov
jns
in
mov
ljmp
sahf
ret
lret
or
repz
jl
mov
cwtl
sbb
fsubl
movntq
out
ja
dec
roll
add
sbb
xor
imul
pop
aam
je
orl
outsl
xchg
jge
lret
xor
jmp
jb
loop
xchg
insb
cmpsl
jns
enter
popf
inc
push
sbb
int3
icebp
les
push
mov
stos
xchg
imul
int
ss
mov
mov
mov
loop
inc
xchg
in
push
into
push
lret
and
in
sbb
lods
fisubs
mov
imul
xor
jb
jnp
push
enter
cld
cmc
out
mov
loopne
int3
lahf
mov
into
cmp
scas
dec
popf
cmp
out
add
orl
sub
inc
sbb
ret
add
daa
mov
shl
xor
in
test
mov
loop
stc
shrl
lods
inc
and
pop
pop
daa
dec
fcmove
adc
inc
and
pop
int3
stos
out
push
decb
mov
add
xor
outsl
mov
push
jecxz
aam
setno
cltd
sahf
pop
js
push
pop
and
xor
in
ds
sbb
shl
lret
nop
test
dec
xor
arpl
in
inc
and
pop
clc
pop
cli
mov
sbb
js
mov
enter
in
leave
inc
test
adc
loop
mov
cmpsb
xchg
cmpsl
cmp
jl,pt
xor
insb
adc
jne
jge
aam
push
inc
jns
lods
mov
mov
push
jg
lods
or
ret
lret
pop
stos
in
inc
add
stos
cmpsb
fcompl
mov
outsl
inc
std
xchg
pop
fistps
sub
cmpsl
pop
mov
rcrl
sbb
fmull
inc
mov
fdivrl
sbb
xchg
stos
and
dec
xchg
nop
rcrb
das
fiaddl
mov
test
mov
out
add
ficoms
mov
cmp
sbbl
fildl
daa
add
xlat
mov
jnp
mov
add
mov
lods
idivb
xchg
ret
jae
movsl
sub
jns
lds
push
nop
jle,pn
pop
fimull
repz
adc
mov
movsl
call
mov
into
cltd
call
and
subl
mov
push
jge
mov
jmp
pop
mov
out
fbstp
push
dec
and
stc
rcrb
in
sub
jnp
mov
ret
add
sbb
cmp
jo
inc
jb
add
jns
gs
in
loopne
rorl
xor
shll
neg
push
jp
roll
pop
sbb
daa
jb
jp
aam
out
add
pop
lcall
aas
mov
xor
mov
orl
jae
sub
mov
jecxz
std
add
pop
in
pusha
adc
jmp
xchg
sub
inc
add
mov
popf
mov
fcmovbe
rep
cmp
aam
out
mov
xor
sub
fimull
push
add
mov
xlat
cmp
out
cwtl
sti
pop
jns
imul
test
jg
out
or
rorb
push
mov
sub
jle
pop
adc
loope
sahf
jno
pop
sbb
mov
popf
cmpl
filds
in
cmp
je
rcrb
sub
cld
in
ret
dec
ljmp
fld
test
decb
push
and
xchg
fwait
mov
cwtl
test
cmp
inc
cmp
lds
test
pop
mov
addr16
pop
add
jns
jg
inc
cmpsl
push
sub
jecxz
sub
jae
add
dec
incl
adc
out
inc
in
fsubs
xor
xor
jecxz
mov
ds
or
mov
push
jno
xor
movsb
jne
sbb
xor
inc
pop
xor
mov
mov
sub
call
inc
xchg
push
hlt
jbe
rcr
loop
scas
mov
ds
fstpl
insb
fildl
xchg
cmp
push
and
xchg
fmul
repnz
test
sahf
and
sbb
add
xor
stc
movsl
into
stos
push
shll
sahf
jbe
pop
sti
push
mov
orl
or
or
or
adc
pop
lock
lahf
pop
dec
sbb
aaa
push
jg
je
mov
sub
sbb
ljmp
lock
mov
outsb
xor
mov
sti
mov
adc
lahf
sbb
fldl
repnz
sbb
mov
stc
push
pop
mov
mov
sub
hlt
mov
into
add
jecxz
fwait
xor
in
loope
pop
bnd
dec
repz
cmpsl
sbb
cli
testl
enter
sti
gs
movsl
push
fimull
test
leave
jmp
sub
jno
mov
mov
imul
ret
or
mov
pop
adc
mov
pop
clc
fucom
push
int
mov
jbe
push
pushf
and
xchg
das
jle
mov
addr16
iret
xchg
push
adc
lods
mov
call
ds
cmp
jbe
and
adc
jp
adc
popa
out
ss
adc
xor
stos
mov
cltd
test
aas
add
push
xchg
xchg
adc
sub
jmp
or
xor
popf
sti
js
jmp
lock
stos
or
jno
jo
dec
mov
mov
in
lea
push
in
mov
pop
lret
sub
adc
test
dec
pop
pop
xchg
scas
push
jo,pn
mov
cmpsl
xchg
fdivl
or
push
pop
sub
jnp
test
sti
xchg
push
mov
dec
jns
lds
xchg
sub
sub
enter
je
pop
xchg
add
call
mov
jns
mov
push
push
in
cmp
mov
scas
push
push
mov
mov
scas
stos
or
dec
mov
push
lds
repnz
daa
lea
mov
aad
jg
jo
lock
jnp
loopne
or
push
pop
shlb
scas
push
adc
xor
out
fs
ds
int
insb
in
and
pusha
jne
fldcw
icebp
jmp
arpl
inc
push
inc
jl
cli
push
cltd
mov
jb
inc
sub
enter
out
loope
xchg
inc
pop
push
pop
sbb
xor
fistpl
imul
nopl
popa
movsl
xchg
or
xchg
mov
imulb
mov
xchg
pop
mov
stc
sti
xlat
roll
aaa
fdivr
test
cli
mov
idiv
xorb
dec
movsl
or
pop
mov
mov
xchg
push
mov
lret
mov
sbb
add
push
sub
push
rcrl
push
jae
imul
jp
shll
mul
sub
pop
cli
negb
stos
pop
push
fcmovbe
stc
mov
mov
mov
fcomps
fistpll
cmpsb
out
aad
sar
aas
xchg
or
repnz
lds
xchg
movsl
jge
mov
cli
jnp
lahf
xchg
pop
jl
jb
jge
outsl
nop
pusha
adc
dec
loop
imul
ds
mov
adc
addw
nop
jge
push
adc
fsubs
jnp
adc
xchg
ja
rcrb
fdivl
mov
adc
jmp
cmp
sub
imul
or
xor
mull
mov
pushf
fldcw
mov
aam
addr16
addl
js
addr16
aaa
sbb
aad
mov
outsl
loope
scas
mov
imul
xor
xor
pushl
pushl
pushl
pushl
pushl
mov
mov
mov
mov
call
mov
mov
add
pop
pop
leave
ret
push
mov
sub
addl
push
adcl
push
push
andl
push
lea
push
adcl
push
subl
call
call
andl
movl
andl
mov
inc
mov
cmpl
jne
push
push
call
cmpl
jb
add
movl
mov
mov
xor
or
mov
add
subl
mov
mov
movl
test
movl
je
subl
mov
mov
add
mov
andl
mov
inc
mov
cmpl
jne
pushl
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
imul
mov
orl
add
sbbl
xchg
xor
mov
sub
andl
mov
xor
andl
mov
inc
mov
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
add
sbb
mov
and
mov
movl
cmpl
je
cmpl
jne
pushl
push
push
call
cmpl
jne
mov
dec
mov
xor
add
dec
mov
jmp
and
xor
add
mov
adc
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
call
jmp
xor
xor
add
add
mov
adc
mov
xorl
xor
andl
mov
inc
mov
cmpl
jne
pushl
push
push
push
push
pushl
push
pushl
call
cmpl
jb
movzwl
sub
mov
add
mov
sub
lea
xorl
xor
subl
xor
cmp
movl
je
xor
mov
xor
orl
add
cmp
movl
jne
addl
pushl
call
mov
mov
movl
cmpl
je
cmpl
jne
pushl
call
mov
dec
mov
jmp
adc
mov
andl
mov
inc
mov
cmpl
jne
pushl
pushl
call
cmpl
jb
xor
addl
mov
subl
add
movl
cmp
movl
je
pushl
subl
pushl
andl
call
sub
mov
xor
xor
xor
mov
mov
xor
add
cmp
je
mov
add
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
push
push
pushl
push
pushl
push
call
jmp
andl
mov
inc
mov
cmpl
jne
pushl
push
push
call
cmpl
jb
mov
mov
xor
mov
mov
addl
add
mov
sub
mov
mov
addl
add
mov
inc
mov
subl
mov
orl
add
mov
mov
jmp
mov
mov
add
mov
mov
mov
xor
add
cmp
je
jmp
mov
mov
xor
add
cmp
je
mov
mov
xor
add
cmp
je
lea
push
pushl
pushl
call
mov
mov
mov
xor
add
cmp
je
mov
movzwl
mov
mov
mov
jmp
mov
xor
lea
jmp
mov
xor
add
jmp
mov
xor
add
jmp
mov
add
mov
mov
test
je
movl
jmp
insb
pop
call
xchg
imul
jg
lods
cmp
cmp
adc
bound
xchg
dec
dec
sbb
lock
mov
orb
sbb
cmpsl
cmp
dec
mov
xor
js
loope
sbb
dec
xchg
mov
xor
or
cmp
sarl
mov
in
sub
mov
daa
fsubrs
adc
and
pop
std
or
cld
jg
push
testb
pop
lea
mov
dec
jb
inc
xor
push
pop
sub
mov
cli
pop
xor
jl
cld
mov
pusha
push
mov
or
xchg
xor
jno
jmp
stos
jecxz
jns
scas
mov
ljmp
sub
mov
in
fistpll
aam
push
test
and
iret
mov
push
popa
jmp
bound
out
aas
xchg
cmp
push
pusha
or
fnstcw
fs
xchg
push
mov
imul
lret
stc
fnstsw
jo
sub
cs
loop
fsubrs
push
mov
stos
rorl
jmp
xchg
xor
push
test
mov
sbb
sbb
test
cmp
sbb
cld
mov
mov
loop
enter
sar
sbb
mov
sbb
sub
call
adc
sbb
adc
out
mov
adc
mov
icebp
call
sub
into
sbb
stc
or
mov
mov
pop
shlb
jae
pop
jle
adc
stc
fcoml
popa
add
inc
test
subb
mov
jmp
push
cs
jp
mov
shrd
insl
mov
xchg
xchg
jnp
leave
testl
jns
push
dec
ficomps
mov
mov
sub
test
fisubl
dec
bnd
and
xor
and
mov
add
sbb
jge
xchg
and
xor
es
mov
jmp
cld
in
cmp
inc
xchg
cmp
xorl
daa
xorb
xor
ret
xor
insb
iret
inc
outsb
jb
mov
add
out
jno
cld
daa
cs
mov
inc
mov
in
addr16
cli
call
clc
out
push
sub
test
cwtl
rclb
jnp
outsl
adc
or
cmp
cltd
cmp
push
fistps
pop
mov
movsl
ret
enter
div
xor
test
cld
cmp
push
mov
or
jb
bound
adc
mov
inc
test
mov
mov
sahf
sarb
push
and
daa
mov
ds
in
int
ljmp
andl
addl
sbb
sbbb
in
mov
or
negl
cli
adc
jbe
das
out
loope
mov
mov
mov
dec
add
test
jne
fildl
mov
cs
and
movsb
jbe
ds
movsb
icebp
lcall
jmp
mov
adc
or
icebp
mov
mov
add
ljmp
and
clc
add
or
jae
mov
cmpsl
jb
sbb
jge
ret
and
push
ja
mov
inc
popf
jns
cmp
std
lret
lahf
push
test
data16
xchg
addr16
and
mov
ljmp
imul
mov
push
fmul
pushf
call
lret
cmp
mov
lds
test
pop
aam
mov
movsb
jmp
dec
push
jg
lock
inc
addl
shrb
shll
or
loop
mov
push
inc
cld
xchg
sbb
cs
rcrb
movsb
jo
xchg
mov
mov
imul
inc
fsubrs
xchg
adc
fnstsw
cmpsb
mov
mov
add
cli
rcrb
rorl
sbb
cld
mov
or
mov
out
rcrb
into
and
xchg
mov
insl
pop
mov
xchg
push
cmp
jno
imul
xor
sub
add
add
shl
divb
cld
mov
mov
jnp
daa
add
mov
cmpsb
xor
sarl
inc
ljmp
or
mov
loopne
sub
xchg
xchg
adc
push
sub
add
mov
cmpsb
mov
xor
dec
dec
push
or
adc
jno
iret
stos
and
mov
lds
push
inc
xchg
mov
scas
inc
jmp
cmp
or
mov
enter
adc
sahf
cmp
sar
xor
xor
int
outsb
lea
dec
jne
mov
lcall
sbb
cltd
push
and
test
and
pop
stc
push
arpl
lea
cmp
popf
xchg
ret
mov
insb
mov
adc
xchg
sbb
jae
shrb
inc
dec
jb
xchg
lock
rcrb
or
xor
leave
dec
fmull
xchg
in
jae
je
push
and
inc
cmp
clc
in
cmp
jg
mov
jle
ds
push
jle
fimuls
inc
add
xchg
cmp
fwait
or
jns
stos
in
sub
push
int
in
icebp
rcll
ret
sub
push
outsl
push
stc
sbb
lds
xchg
imul
and
mov
aas
mov
out
cld
cmp
add
shll
shrl
enter
sahf
scas
test
test
pop
jmp
jno
dec
mov
das
dec
sbb
out
xor
xor
lods
pop
mov
pop
sub
stc
popa
mov
sahf
rcrl
lret
aad
jo
xor
shl
mov
and
mov
mov
clc
data16
int3
pop
push
push
sub
cmp
popf
add
xor
push
lods
jl
gs
enter
ljmp
add
jp
fbld
inc
imul
ret
dec
inc
xor
pop
dec
xor
hlt
stc
jg
cmp
mov
sbb
movsl
pushf
test
xchg
add
out
jne
sti
int
inc
popf
jb
loope
pop
mov
mov
shlb
enter
in
fistpll
loope
loopne
or
add
mov
rcr
adc
and
sub
pop
xchg
cmp
jae
jp
js
mov
jp
pop
xor
scas
pop
and
mov
jno
insb
dec
fs
testb
fcomi
push
in
xchg
adc
inc
sbb
mov
cmp
sub
dec
sbb
add
js
sub
pop
and
cmp
leave
mov
test
iret
push
cmpsl
push
arpl
enter
mov
iret
cmpsb
mov
clc
jp
cmp
sahf
lret
mov
fistl
pop
out
clc
or
adc
leave
sbb
jbe
xchg
xchg
js
cltd
ret
or
gs
mov
mov
subb
xchg
xor
sbb
lods
fstpt
mov
addr16
imul
pop
xchg
movsb
mov
cwtl
stos
add
cmpl
inc
xor
addb
jb
lret
enter
push
sbb
out
xchg
add
test
add
add
jp
push
jae
mov
mov
mov
pusha
xchg
jecxz
xchg
jge
insl
jg
dec
imul
mov
outsl
test
leave
setl
sub
or
bound
cltd
leave
add
dec
xchg
hlt
mov
xor
aam
xorl
mov
int
in
aad
pop
jne
movsb
mov
aam
pop
mov
inc
repnz
cmc
das
mov
into
mov
cmc
sub
movzbl
sbb
push
dec
cmp
test
shll
pop
lods
push
mov
in
mov
ret
jne
cmc
sarl
gs
cmp
lds
sub
stc
into
inc
movsb
push
mov
push
pop
inc
mov
les
ljmp
rolb
dec
cmpsl
adc
push
xadd
xor
sub
dec
inc
fdivrs
xor
lock
dec
cmp
dec
hlt
clc
mov
mov
movsb
sub
and
out
dec
xchg
and
add
jb
xor
add
in
push
mov
push
pop
outsb
jge
outsl
gs
push
fidivs
jg
dec
mov
icebp
std
les
hlt
xchg
jo
movsl
xlat
pop
mov
or
call
or
pop
sub
jnp
shlb
mov
sub
adc
cli
insl
bound
pop
mov
mov
dec
shll
and
rolb
rclb
pop
jnp
call
jmp
in
repnz
shl
push
xchg
pop
add
mov
inc
into
xlat
and
and
lods
add
movsl
xor
iret
dec
mov
fwait
shlb
push
adc
push
data16
stos
xor
out
mov
into
push
xor
cmpsb
fiaddl
sbb
mov
lret
popa
jmp
or
push
or
mov
mov
jmp
or
stc
inc
fldt
dec
xchg
lods
and
mov
test
mov
lods
sub
test
jmp
fs
mov
sub
and
jbe
push
xor
mov
xchg
mov
in
in
loop
jns
mov
test
outsl
decl
leave
loopne
jmp
and
sbb
xchg
mov
pop
sbb
pop
add
inc
outsb
out
test
out
cmp
xchg
cmp
inc
xor
pop
gs
div
mov
or
sub
mov
push
or
rcr
mov
aaa
inc
jbe
push
nop
mov
aad
jge
mov
and
add
push
push
pop
lods
jb
add
lcall
sbb
xor
mov
test
cmp
lods
pop
and
push
enter
in
ds
test
cmpl
arpl
jge
pop
scas
dec
push
add
ss
adc
addl
xchg
ja
mov
mov
adc
xchg
mov
inc
sub
test
subl
mov
mov
jp
ret
jo
stos
mov
pop
loopne
scas
loope
shrb
cli
adc
mov
mov
inc
loop
dec
sarb
aad
test
adc
sub
imul
or
jg
mov
pop
sbb
iret
mov
ret
sub
paddq
pop
test
aad
stc
cli
dec
hlt
lds
por
adc
cmp
rorl
sbb
pop
pop
push
sti
les
cmpsb
xchg
lcall
cld
pop
xor
out
out
sbb
jb
repnz
push
mov
repz
iret
xchg
lret
scas
pop
pop
popa
repnz
inc
jl
pushf
movsl
test
fisttps
test
sbbb
pop
push
dec
out
adc
mov
pop
xor
vmread
adc
sbb
push
sub
mov
mov
divl
pop
lods
add
mov
sub
pop
sbb
cltd
ja
xor
xchg
mov
testb
cmpsl
test
mov
mov
sbb
fidivs
sbb
fisubrs
or
mov
sub
dec
gs
in
xor
or
xlat
shrb
or
lds
dec
addl
inc
inc
dec
jecxz
pop
ret
insl
ret
pop
inc
jge
ret
sub
rcrb
ret
push
loopne
cwtl
repnz
cld
scas
push
test
fidivs
mov
and
push
bound
jb
arpl
push
sub
pop
fwait
xchg
cmp
push
or
xor
add
sbb
sbb
testb
ret
dec
or
out
pop
or
and
add
loop
orb
jg
xlat
pop
idivb
jmp
pop
popa
cs
pusha
xchg
mov
mov
popf
fadds
mov
mov
sbb
push
ja
add
shll
sbb
cmp
push
int
lods
outsb
into
push
push
into
add
ss
push
je
lcall
push
mov
mov
adc
je
arpl
pop
mov
sub
push
sub
adc
addb
std
outsl
jbe
push
cld
je
repz
cltd
test
mov
xorl
add
push
sbb
mov
test
repnz
add
sub
push
imul
dec
pop
scas
and
dec
rep
push
jmp
mov
imul
mov
bnd
mov
loope
mov
or
loopne
push
subl
dec
sub
std
rorb
add
cld
pop
adc
mov
push
dec
imul
popf
mov
out
lret
insb
dec
mov
sbb
sub
orb
jge
fcmovnb
add
inc
and
movsl
mov
sbb
jb
and
jbe
insl
out
shrl
mov
hlt
jecxz
pop
or
pop
ret
repz
aaa
dec
jp
sbb
fwait
cmp
push
or
fldpi
int3
mov
aad
orps
mov
xor
mov
ds
jp
fwait
sbb
pop
adc
sbb
fucomp
hlt
sbb
sub
popf
shll
ljmp
cmp
inc
pop
push
adc
adc
pop
pop
iret
icebp
repz
jne
or
das
xor
mov
shll
imul
mov
lea
adc
das
cmp
jo
jo,pn
lock
or
iret
and
rorl
repnz
xor
inc
add
pop
inc
lret
jg
fdivr
cli
addr16
arpl
out
pop
loope
push
xor
dec
dec
cld
jl
mulb
xor
jl
or
jge
fs
out
jae
lahf
insl
out
and
add
mov
lret
push
push
lods
mov
sti
lea
push
jecxz
je
mov
cltd
ds
push
xchg
cltd
dec
movsb
mov
mov
mov
push
mov
popa
popf
dec
or
rclb
dec
repnz
mov
out
test
xor
sub
adc
jae
inc
inc
mov
insl
push
xor
shlb
jg
aaa
out
xchg
jl
out
ror
pop
pop
daa
in
dec
stos
or
inc
aaa
pop
andl
pop
pop
pop
loope
je
and
cmp
dec
mov
int3
in
add
ret
pop
jmp
insl
mov
insl
adc
loope
jl
les
fwait
int3
call
jle
ret
dec
cmc
adc
mov
pop
aad
lea
ret
mov
push
sub
repz
sbb
ret
inc
scas
jp
push
cmp
mov
push
jae
outsb
sbb
lret
ja
sub
pop
imul
dec
mov
xlat
fcmove
roll
ret
rcrl
insb
and
mov
aas
or
imul
push
movsb
inc
xchg
sub
stos
jl
sbb
ljmp
cmp
test
dec
adc
xchg
les
stc
fwait
cs
or
add
xchg
push
cltd
rcrb
cmpsb
and
mov
inc
push
cmp
int
cwtl
and
cli
in
test
jb
sbb
imul
repnz
int
mov
add
dec
dec
push
les
sub
mov
mov
pop
insb
mov
lahf
test
cli
jmp
lods
xor
mov
mov
les
xchg
dec
fisttpll
adc
aas
adc
loop
xchg
das
fadd
xor
outsl
pop
cmovs
rorb
and
pop
fiadds
sub
sbb
add
xchg
pop
xor
mov
fwait
pop
push
scas
mov
out
cmpsl
mov
loope
test
xorl
inc
mov
mov
out
je
std
dec
mov
sti
sub
add
int
inc
sub
jle
pop
insb
sti
push
notl
jno
repnz
fnsave
cs
imul
or
push
push
lret
pusha
sahf
pop
std
inc
or
lret
adc
fiaddl
sahf
and
call
cli
sub
arpl
lods
and
push
xor
xchg
xor
fidivrl
fwait
sbb
xlat
aas
mov
xchg
xlat
dec
out
inc
xor
outsl
jne
jge
inc
out
bound
dec
adc
rcll
rcrl
int3
aam
test
add
cmpsb
and
push
cld
lea
lcall
loope
loope
sbb
sbb
aaa
popf
mov
imul
test
jle
sbb
sub
popf
pop
adc
dec
rcrb
mov
lahf
xor
loop
sar
orb
int
sbb
into
sbb
movb
roll
add
pop
ret
dec
lret
and
or
mov
rcrl
dec
sti
mov
lcall
cmpsb
mov
sbb
icebp
jae
fidivrs
pop
adc
ds
repz
mov
xor
mov
stos
pop
dec
sbb
movl
push
and
sbb
mov
scas
push
stos
imul
or
inc
int
aas
roll
lret
xlat
testb
jmp
push
mov
mull
dec
ret
pop
xor
cmp
and
pop
shl
ror
push
dec
jne
mov
cltd
loop
fucomip
int3
aam
icebp
adc
or
popf
mov
pop
add
cmp
iret
adc
xchg
xchg
mov
jmp
mov
faddp
clc
cmp
in
sub
and
iret
sub
fmuls
repz
and
sub
mov
rcrb
cmp
stos
sti
icebp
jp
xlat
xchg
ret
clc
aad
out
cmp
aad
pushf
movsb
cltd
or
jnp
cltd
jg
xlat
arpl
add
sbb
mov
lret
fmull
push
fucomi
les
scas
sbb
jno
sbb
scas
test
testb
pop
mov
add
sahf
stos
pop
shlb
and
jg
enter
fdivrs
aad
dec
insl
clc
outsb
add
cmp
cmp
add
test
scas
sahf
sub
sarl
dec
pop
cmp
mov
xor
sbb
or
jle
add
je
and
pusha
adc
movsl
and
cmp
ds
xor
mov
cwtl
dec
jmp
lea
lock
xor
cmp
clc
testb
leave
jae
push
push
jmp
lods
push
xchg
xor
insb
insl
adc
insb
scas
push
or
cmp
mov
add
dec
push
fcoms
icebp
mov
pop
add
xchg
push
or
sbbl
xchg
dec
scas
rorb
push
scas
adc
cmp
in
xor
out
hlt
xlat
lds
add
bound
push
pop
and
dec
ss
or
arpl
ja
jns
xchg
clc
ljmp
test
xchg
sub
push
jge
sub
pop
sar
push
pop
xor
mov
mov
sbb
lea
inc
and
repnz
mov
dec
mov
sub
aaa
push
clc
cs
lcall
insb
mov
sbb
in
mov
mov
imul
jg
arpl
xor
cmpl
add
xchg
add
fidivrs
cld
cmp
pop
lock
sub
cwtl
xor
cld
into
cli
pop
enter
lods
xchg
xchg
push
daa
jo
test
imul
inc
mov
in
jl
ficomps
jg
push
jmp
sub
jnp
mov
fsubrl
insb
mov
mov
call
cmp
mov
sbb
mov
sbb
dec
pop
out
hlt
mov
fsubs
enter
das
imul
out
jns
ljmp
jnp
negb
scas
sahf
fcmovne
cmp
adc
dec
in
or
sub
lahf
insb
cltd
inc
loope
lock
fwait
lahf
lcall
push
lods
daa
push
imul
xchg
js
icebp
repz
test
add
cs
call
iret
cmp
int
push
adc
ret
cmpsb
stos
and
and
testl
xchg
xlat
mov
pop
xchg
in
sbb
ret
andb
cmpsb
pop
and
idivl
dec
mov
mov
out
add
xchg
xlat
out
pop
xchg
add
jl
in
mov
push
dec
push
sbb
push
in
inc
inc
xchg
add
ja
leave
xchg
repz
lcall
rcll
ljmp
cmpsl
test
and
shl
xor
push
stc
add
adc
pop
sbb
mov
insl
in
js
pop
test
movsb
stos
lret
daa
fnstcw
cmpsb
addr16
sub
mov
xor
pop
outsb
call
xor
inc
test
adc
mov
inc
pop
xchg
mov
and
divl
clc
or
or
rcll
fists
popa
insb
sbb
cmp
add
add
inc
xchg
mov
lahf
ds
cli
in
xchg
pop
pusha
adc
add
int
lret
roll
jo
mov
cmp
outsb
shlb
lret
subl
imul
movsb
pop
loopne
adc
add
fcomps
loope
rcl
dec
sbb
out
jo
adc
shrb
and
xor
imul
dec
in
pop
mov
pop
sub
sbb
lea
mov
sarl
mov
arpl
inc
cmpsb
push
hlt
xchg
out
push
sub
imul
shll
scas
jge
stc
les
push
lcall
mov
mov
xlat
pushf
jge
test
push
hlt
insb
cmp
jg
jne
data16
imul
lret
sub
lret
mov
jnp
cld
adc
inc
and
sub
jmp
orb
mov
xchg
std
lcall
xorl
cmp
test
pop
repnz
movsl
sub
orl
mov
cmpsb
push
sub
les
sub
inc
jg
mov
sbb
or
and
cwtl
in
insl
mov
test
or
mov
popa
stos
xchg
fucomip
int
cmpsl
cmpsb
movsb
rcrl
add
jmp
mov
inc
imul
jb
mov
shl
lock
in
adc
sbb
mov
jbe
mov
test
or
xchg
popf
xchg
mov
adc
inc
fwait
and
dec
jmp
gs
jg
and
xor
sahf
and
and
out
div
es
inc
test
test
nop
je
fisttps
pushf
sub
pop
lea
cld
jbe
call
pop
out
test
out
sbb
sbb
add
fld
jge
rcr
sbbb
mov
and
cld
mov
jmp
xchg
int3
xchg
xchg
fwait
push
pop
setb
jg
mov
mov
sbb
mov
cltd
std
repnz
loope
and
adc
inc
testl
mov
push
into
stos
mov
sarl
cmpb
sbb
leave
mov
adc
pop
jae
jae
mov
pop
lret
sbbb
xchg
scas
dec
rcr
addb
mov
adc
jns
out
dec
mov
xchg
xor
das
dec
jno
repz
sbb
out
pop
or
or
pop
pop
cmp
or
aas
mov
imul
lcall
jnp
out
roll
cmpsb
mov
cmpsb
dec
jae
pusha
dec
push
adcl
test
enter
inc
mov
xlat
inc
ds
mov
test
dec
inc
inc
je
popf
pop
cmpl
push
aas
fs
frstor
and
adc
ljmp
jbe
mov
movsl
stos
daa
sbb
addl
in
sbb
movsl
movsl
aam
xchg
fs
and
adc
push
or
mov
cmp
scas
mov
icebp
std
cmp
scas
xor
pop
out
cli
notl
jl
fcompl
cli
inc
mov
lds
pop
sahf
sub
adc
jno
xor
jnp
sub
shl
ljmp
aad
cmp
rolb
push
loope
test
mov
mov
push
pop
or
xor
test
sbb
add
and
stos
cmp
sub
fildll
mov
rcrb
aas
sbb
lcall
data16
jle
push
adc
dec
push
cld
clc
fcompl
jnp
adc
dec
lods
pop
sub
adc
mov
fimull
xchg
cmp
pop
lods
rcrb
fwait
cmp
or
pop
push
mov
out
insb
adc
test
fadds
pushf
jae
clc
call
cmp
jmp
fcmove
insl
imul
sarb
jl
popa
sbb
testb
inc
mov
aaa
mov
rcll
shl
jo
loop
mov
insb
xor
je
cmp
fwait
jbe
jo
mov
push
mov
mov
aam
fwait
popa
insl
xchg
repnz
aas
sbb
divl
cli
sbb
mov
mov
hlt
mov
leave
sbb
mov
push
mov
sti
in
sub
xor
push
jecxz
pop
scas
jne
inc
imul
imul
out
das
scas
fwait
inc
outsb
aas
cltd
loope
andb
add
popf
sbb
push
pop
inc
ss
shrl
ja
inc
hlt
into
hlt
lcall
movsb
fwait
push
movsl
mov
sti
int
adc
aad
inc
popa
mov
jb
cli
inc
ljmp
fistps
aam
and
pop
fs
fldt
clc
and
xor
mov
in
nop
mov
xor
cmp
movsb
insb
daa
lods
out
mov
dec
mov
jp
jns
jp
and
cmp
inc
cltd
mov
xor
int
push
jg
inc
sarb
enter
dec
outsb
loopne
mov
leave
xchg
add
sub
lods
sub
popa
sbb
lea
outsb
and
mov
push
mov
imul
jns
push
add
ret
leave
mov
and
data16
add
or
dec
lret
xor
test
jl
rcll
jle
imul
sub
mov
call
mov
popa
push
in
mov
sarb
xchg
mov
jb
push
cmc
lods
jle
cmpsb
loop
clc
test
pop
rcll
lea
in
cli
jmp
sub
out
int
gs
adc
mov
add
xchg
ds
imul
xlat
push
aad
pop
inc
dec
dec
aas
icebp
pop
loope
ja
lret
lods
and
dec
mov
sbb
pop
lahf
rcll
mov
mov
mov
cmp
mov
or
in
out
sbb
outsl
enter
cli
push
push
insl
mov
jmp
test
cld
cmpsb
dec
push
sbb
xor
adc
mov
orl
data16
jne
aas
cli
inc
xchg
mov
ja
imul
sahf
outsb
push
xor
ja
mov
aaa
mov
movsl
adc
lret
scas
bound
sahf
inc
mov
mov
jmp
data16
int3
sbb
call
data16
fdivrs
push
repz
push
jbe
inc
and
or
pop
adc
pop
push
leave
loop
dec
add
addb
add
rol
pop
xor
loop
push
popf
inc
lcall
inc
aaa
je
or
cmp
out
ret
jecxz
sub
movsb
orl
xor
sub
lahf
repz
imul
mov
mov
mov
dec
out
call
lret
hlt
ljmp
push
adc
cli
jge
nop
jb
xchg
scas
and
push
mov
fst
out
fiaddl
lret
sbb
pop
test
decl
aaa
adc
xor
jno
mov
cmc
out
dec
shrl
mov
pop
in
adc
mov
sub
mov
test
sub
sbb
mov
in
mov
pushf
and
dec
leave
insl
mov
xchg
loope
pusha
dec
stc
cld
sbb
mov
cmp
push
pop
fisubrs
faddl
cmp
and
sub
ja
jg
adc
or
out
push
mov
jb
add
cmp
sub
std
ret
popf
dec
test
int3
fucom
mov
xor
icebp
in
test
xor
out
or
jb
fists
pop
xchg
add
out
jbe
fistps
cmpl
ja
push
or
jmp
loope
mov
addr16
xchg
pop
sbb
mov
mov
clc
add
int3
cmpsb
or
lcall
rclb
pop
adc
mov
pop
or
loop
adc
jle
mov
xlat
bound
dec
stc
cwtl
adc
test
dec
jmp
insl
mov
out
pop
mov
push
adc
rclb
in
or
xchg
fldenv
mov
sti
pop
inc
pop
pop
ja
mov
xchg
inc
inc
or
mov
mov
push
cld
ljmp
xchg
cli
cmp
out
mov
mov
cmpsl
bound
adc
mov
push
in
out
mov
decb
ss
and
fisubl
js
lods
stos
sahf
fnsave
push
mov
inc
mov
jo
fisubrs
scas
fcomps
add
push
aam
and
push
dec
lds
rorb
aad
pop
int3
xchg
ds
or
cmpsl
sub
in
int
dec
mov
stc
scas
mov
loope
icebp
dec
lahf
in
bound
mov
mov
fisttpl
ret
cmp
in
lret
int
das
es
bnd
or
ret
sub
loope
cmp
dec
out
pop
insb
adc
cmp
int3
inc
pop
adc
mov
out
mov
push
mov
mov
sub
ret
cmp
leave
sar
dec
repz
movsl
cli
scas
inc
push
fiadds
add
loope
inc
push
and
and
rolb
cmpl
ret
xchg
shrb
mov
mov
pop
scas
mov
or
or
inc
jmp
pop
xor
cmp
or
and
mov
cld
fwait
std
pop
rcr
scas
mov
outsl
ja
pop
or
xlat
mov
or
lea
mov
out
scas
cmpsb
sbb
pop
mov
cmp
ret
inc
push
push
add
mov
sbb
aam
imulb
test
mov
mov
movsl
adc
xchg
adc
jo
arpl
or
shlb
cmp
or
mov
arpl
dec
xchg
enter
xchg
imul
xchg
les
ljmp
jmp
movsl
outsb
ret
sahf
xorb
pop
gs
add
rcrb
ret
pop
push
dec
pop
dec
xchg
sub
xchg
dec
mov
imul
sub
mov
mov
mov
jmp
dec
mov
cmpsb
mov
mov
mov
cmpsb
sbb
adc
bound
pop
and
ss
jb
sbbb
jmp
lahf
test
mov
pop
jl
push
xor
clc
cs
enter
cmc
sub
and
scas
pop
xchg
cvtps2pi
adc
iret
xchg
cli
int3
add
pusha
push
les
out
ja
js
jb
repz
cmpsl
cvtdq2ps
inc
xchg
jmp
sbb
or
inc
xchg
mov
ret
xchg
out
dec
mov
ja
test
cmp
lods
mov
xor
sbb
es
jns
xchg
leave
inc
jmp
xchg
add
lock
jne
mov
cmp
pop
push
inc
xchg
pop
mov
aam
pop
cld
filds
mov
scas
aas
sahf
jge
repnz
outsb
xchg
jle
jo
pusha
aas
sbb
enter
jns
xor
cmp
sbb
inc
jmp
adc
dec
push
or
cmp
adc
xlat
mov
aas
lds
pusha
push
inc
jmp
gs
or
lods
cmp
cmp
mov
pop
out
add
push
into
loop
shrb
imul
pop
stc
stos
or
mov
fucomi
mov
ljmp
cmpsb
pop
jnp
push
sub
ret
inc
inc
es
or
pop
lods
sbb
fyl2x
inc
ljmp
sub
mov
out
mov
push
jle
pop
aam
fldenv
sbb
pop
ror
sahf
sub
push
xor
dec
outsl
and
xchg
lahf
mov
test
outsl
mov
fcomp
cmova
popa
es
sub
jnp
lahf
clc
in
shrl
xor
icebp
pop
sub
push
out
repnz
jl
out
cli
lcall
add
push
inc
les
dec
cmp
inc
pop
jnp
push
idivl
cmp
stos
mov
enter
cli
pop
xchg
sub
and
ficoml
pop
inc
icebp
inc
sub
ret
mov
je
add
and
stos
in
inc
aaa
pop
addr16
gs
adcl
nop
inc
ds
add
pop
in
pushf
lret
inc
in
mov
sub
aad
cs
out
int
adc
mov
xchg
dec
xor
push
mov
lcall
pop
lahf
int3
xchg
les
mov
and
mov
out
pop
and
or
call
stc
sbb
sbb
daa
add
sbb
sub
mov
jae
dec
inc
push
push
and
div
mov
movb
jae
mov
xchg
jl
pop
jecxz
leave
or
aas
push
mov
mov
not
sbb
cmp
pop
cmp
mov
mov
insb
lea
adc
dec
je
int3
mov
insb
push
adc
inc
jnp
inc
push
fiadds
mov
dec
mov
cmp
mov
gs
pop
inc
or
loop
cld
aam
jns
out
lods
pop
and
lock
aas
ds
sbb
outsl
xlat
sbb
cmpsl
test
nop
xlat
int
negb
mov
movsb
xor
mov
les
push
loopne
xor
mov
bound
xchg
cmpsb
jb
loop
stos
sbb
lea
lock
std
mov
out
jnp
mov
xor
push
push
adc
dec
insb
xor
icebp
lahf
ss
imul
fistl
jp
sub
fs
repnz
push
sbb
inc
test
mov
mov
or
sbb
in
aam
rol
aam
inc
pop
movsb
insb
mov
mov
jge
das
xlat
repz
cmp
jmp
push
mov
test
call
icebp
jmp
xchg
cmpb
fcomi
cmpsb
xor
lret
loop
jne
or
sbbl
jnp
xor
push
and
pop
push
negl
in
je
imull
adc
or
leave
and
sub
insl
nop
mov
sbb
aaa
in
mov
cmp
push
xchg
xor
pop
and
xchg
jo
shl
test
xor
fiadds
out
mov
push
and
std
jo
mov
cmpsl
sub
hlt
rol
mov
lret
jge
hlt
jns
pop
or
jbe
cmp
fists
mov
shr
push
and
out
int
jmp
cmp
mov
mov
pop
lea
out
sbb
fwait
andl
sub
aam
arpl
out
mov
xor
jne
pop
or
mov
mov
pop
addl
dec
daa
cmp
test
push
sbb
xchg
arpl
lea
aam
pop
adc
cwtl
pop
adc
dec
xchg
mov
push
out
aaa
iretw
inc
mov
cld
inc
in
jnp
loopne
or
inc
mov
popa
jmp
pop
popf
xchg
inc
xchg
out
jp
adc
cmp
imul
rcll
flds
mov
mov
or
jl
in
test
test
xor
cli
mov
mov
lock
mov
jno
jmp
cmpsb
test
fistl
mov
ljmp
lea
sbb
jno
or
push
sbb
inc
pop
jo
adc
ljmp
dec
jnp
loope
jo
xchg
outsb
pushf
and
lods
mov
insb
push
sti
sub
xchg
sbb
leave
outsb
xor
das
pop
aaa
lods
push
pop
mov
or
sub
sbb
lret
mov
cli
mov
and
xor
push
shlb
mov
pop
sbb
mov
aaa
lea
sbb
jo
js
pushl
fstl
call
and
xor
mov
mov
mov
sar
fdivl
or
adc
scas
out
push
cmp
icebp
sti
xor
loop
pushf
icebp
dec
testl
pop
movsb
pop
ja
push
lahf
clc
arpl
clc
inc
jg
push
pop
fbstp
es
insl
call
out
and
xchg
jno
rcrl
loope
sub
pop
stos
call
cli
js
add
clc
adc
cltd
mov
lods
sbb
arpl
ss
sarb
lea
mov
adc
dec
xchg
push
xor
xor
or
xchg
adc
or
mov
je
mov
jne
add
sub
inc
popf
mov
dec
push
xchg
shrb
push
inc
rcrl
lea
lret
scas
jae
div
in
dec
or
gs
jae
mov
mov
aaa
mov
jp
loope
xor
mov
xchg
push
jmp
cmp
sbb
dec
jg
or
inc
testl
sahf
inc
and
mov
mov
lock
fucom
scas
xchg
jg
nop
sar
add
dec
dec
cltd
mov
and
jmp
sahf
pop
add
sahf
loope
adc
xchg
int
enter
cmc
lahf
mov
in
lds
hlt
ja
daa
jle
out
movsb
es
push
sarb
mov
sub
xchg
lods
add
inc
pusha
jne
mov
sbb
das
mov
ret
pop
lds
int3
sub
mov
cmc
and
outsl
jge
loopne
xchg
jb
les
shrl
mov
push
jle
xchg
xor
cmp
xchg
sub
mov
push
push
push
repz
iret
inc
jmp
rclb
mov
aas
lods
fistpll
xchg
rorl
mov
xor
ljmp
inc
sub
cmp
movsb
mov
das
int3
cwtl
sub
icebp
sbb
mov
xchg
imul
jecxz
cmpsb
cmpsl
xchg
lret
outsl
push
sub
push
cmc
sbb
sahf
mov
mov
push
mov
push
rorl
dec
les
orb
sahf
pop
imul
dec
into
cld
adc
push
jge
dec
jns
sbb
or
rcr
cwtl
cmp
leave
pop
pop
outsl
cs
cmp
arpl
fcompl
pop
or
rorb
imull
icebp
cmp
adc
add
push
push
fwait
dec
mov
pop
pop
aaa
lock
jle
cmc
lret
ficomps
jb
pushf
or
sbb
repnz
pusha
testb
mov
sbb
sub
dec
jp
inc
repnz
add
arpl
mov
les
mov
mov
push
lods
sub
cmp
stos
jae
mov
mov
fsubs
cmpsb
cli
mov
push
pop
cmp
mov
aam
out
mov
push
pop
inc
ja
ret
mov
lds
mov
insb
out
fsubp
xchg
sahf
mov
sbbl
mov
pop
dec
ljmp
push
testl
xchg
adcb
cmp
mov
jg
pop
cs
xor
ljmp
mov
pusha
jg
hlt
adc
cmc
xchg
ret
dec
cli
xchg
push
outsl
ljmp
shlb
xor
sub
ja
mov
sub
mov
shrl
lahf
or
pop
sti
and
cmp
mov
sbb
adc
dec
mov
mov
repz
mov
ja
ret
mov
mov
or
sbb
gs
cld
mov
pushf
mov
movsl
jl
pop
cmp
or
mov
int3
popa
and
mov
stos
mov
fwait
in
out
dec
clc
rcll
aaa
inc
cwtl
pushf
mov
mov
fwait
mov
xor
je
lret
popa
insl
sti
fildl
shll
xlat
mov
outsb
lods
cwtl
and
mov
lret
add
dec
loopne
mov
xor
repz
lock
jne
push
mov
cmc
sbb
xor
stos
pop
dec
fwait
and
xchg
test
sti
push
mov
inc
rolb
sti
pop
mov
mov
adc
or
scas
jne
mov
cmp
push
pop
jne
push
push
push
sbb
daa
sub
mov
xchg
loopne
add
das
lret
std
inc
push
cs
lcall
arpl
and
xchg
sbb
cmp
fs
cmp
pop
subb
pushf
repnz
pop
adc
add
rcrl
sbb
jae
fsubl
jl
cmp
aas
imul
jmp
mov
sub
xchg
xchg
je
aaa
loop
push
push
out
pop
xchg
jle
outsl
int
cs
push
nop
les
sar
punpcklwd
mov
insb
mov
jg
cmp
out
mov
jns
mov
stos
std
cs
int
jg
arpl
les
sub
stos
loopne
jne
mov
in
dec
jae
or
int3
inc
sub
xchg
push
das
sub
das
iret
ss
repnz
push
enter
dec
push
sbb
and
add
or
fistpl
cld
int
repz
mov
push
mov
bound
jae
dec
pop
inc
stc
insl
incb
xchg
js
inc
rolb
xor
mov
jp
push
pop
pop
xor
movsb
test
pop
adc
stc
subl
leavew
and
lret
repz
inc
mov
and
inc
in
sbb
mov
inc
data16
lea
dec
rcrl
xchg
xchg
je
cmp
jmp
out
mov
xchg
out
mov
ja
push
mov
jo
stc
and
mov
fnop
dec
sahf
into
push
imul
inc
mov
sub
in
sahf
inc
pop
fwait
pop
mov
aas
and
jg
andl
push
push
ret
loopne
aas
and
aam
lret
jne
inc
adc
cs
je
rclb
push
int3
into
xor
dec
stc
inc
ret
dec
jp
test
sbb
loopne
sub
pop
aam
jnp
fs
cmp
pop
into
jmp
popf
bound
cld
dec
shll
negb
stc
dec
or
jle
mov
mov
dec
sbb
cmp
std
dec
inc
mov
mov
xor
add
jecxz
or
adc
fcoml
push
arpl
cmc
stos
popf
enter
xor
fwait
out
mov
mov
pop
sbb
mul
mov
nop
jg
aaa
dec
scas
mov
lret
aaa
mov
into
jb
popa
or
xchg
xor
add
lds
mov
ja
pusha
xlat
das
jne
add
xchg
mov
jmp
pop
ja
mov
imulb
mov
bound
add
mov
cltd
ficoml
mov
push
cmp
inc
into
push
and
pop
adc
add
ds
push
lods
mov
stos
test
insl
imul
lret
sbb
or
je
jb
sbb
loop
jb
mov
dec
test
and
ficomps
cltd
cmp
stos
ljmp
fcomp
je
ffreep
in
dec
push
jge
into
ret
das
hlt
adcb
mull
jmp
sbb
mov
mov
pop
loopne
push
jl
scas
jb
shll
pop
imul
push
shll
xchg
cmpb
lods
sbb
jp
popa
sarl
dec
cs
iret
jne
xchg
cmpsb
sub
aaa
pushf
or
pop
xorb
xor
adc
mov
dec
push
pop
jb
dec
mov
loop
hlt
push
jg
dec
cmp
in
xchg
clc
add
pop
pop
cmp
jecxz
repz
cli
incl
sub
cmc
adc
lahf
add
pushf
add
sbb
cmp
stos
fucomp
pop
mov
je
or
xchg
cmp
xor
xchg
mulb
test
jge
lahf
pop
xor
mov
cmp
mov
adc
call
add
scas
test
faddl
aas
mov
shrl
movsb
pusha
andb
jl
mov
lods
aam
frstor
mov
adc
xchg
sbb
lret
fidivrs
loop
lahf
jns
mov
mov
fdiv
mov
xchg
sbb
dec
lods
dec
mov
push
or
ficompl
int
xlat
daa
and
add
sub
jmp
mov
mov
popa
mov
clc
lock
pop
outsl
cwtl
test
nop
add
stos
push
xchg
cmpsl
rorb
subl
dec
xor
cmp
cs
push
std
movsb
movsl
out
scas
cmpb
pop
push
movsl
sbb
jmp
xor
cld
inc
fucomi
xchg
addl
cmp
std
imul
pop
dec
cmpsb
test
rol
xchg
ja
xchg
and
std
cmpsb
repnz
pop
shrl
dec
int3
sbb
adc
decl
push
mov
push
dec
into
and
jo
sahf
cmpsl
ja
xlat
negl
sub
scas
push
mov
add
or
lret
sarb
imul
xor
repnz
movsl
sub
in
das
mov
cmp
imul
std
and
ja
xor
mov
out
and
mov
jns
xchg
cld
push
nop
jne
fnstcw
mov
fucomp
sub
jg
idivb
push
cmp
stos
adc
lods
idivb
adc
shrb
xchg
jns
push
dec
mov
fldt
lock
movsb
out
ficompl
loope
pop
push
and
aad
push
loop
pop
movl
data16
js
adc
shll
sbb
mov
aam
aaa
lcall
in
xchg
mov
lock
sbb
jle
and
cltd
mov
dec
mov
xorb
lret
mov
mov
cmp
inc
test
jp
inc
insl
insl
mov
popf
lds
cmpsl
and
sti
mov
out
iret
loopne
cmp
jb
inc
mov
mov
inc
mov
and
pop
or
shlb
xor
outsb
dec
mov
pop
dec
mov
add
andl
mov
js
fimuls
inc
mov
adc
adc
loopne
xor
dec
push
daa
mov
add
push
and
xchg
jecxz
in
or
push
sub
out
stc
sbb
orl
jle
aam
sub
xorb
pop
repnz
pusha
lahf
sub
add
adc
testl
loop
pushf
jno
cmp
lcall
dec
dec
gs
jnp
xchg
pop
outsb
fdivs
mov
mov
pop
mov
push
pop
faddl
cmpsl
repz
pop
mov
imul
cmpsb
dec
sbb
mov
jnp
hlt
xor
mov
sub
add
pop
mov
add
dec
out
ret
add
mov
sbb
test
cmp
adcb
inc
js
xchg
decb
stc
pop
arpl
xchg
mov
outsb
repz
pusha
dec
cmpsl
loop
in
cli
cmpsl
and
ds
or
scas
mov
popa
ret
pop
inc
das
std
mov
cmp
fdivr
inc
loopne
lds
mov
sahf
call
xor
cmpsb
push
cmp
mov
leave
stos
sbb
add
dec
push
stos
mov
mov
out
jns
jl
xor
lcall
icebp
cmp
push
push
popa
repz
jp
lahf
loope
push
jle
mov
rorb
fwait
aam
neg
shlb
cmp
lods
add
mov
push
out
jno
push
mov
lcall
add
adc
jecxz
movsb
in
xor
sub
fs
xchg
sub
or
jo
popf
cli
add
cmpsb
jmp
aad
dec
iret
inc
mov
xor
inc
cmpsb
insl
cmp
sbb
push
mov
and
jae
out
out
jb
stc
daa
daa
xchg
jb
push
jno
and
ss
or
dec
lahf
adc
out
mov
clc
cmpsl
lret
and
insl
push
mov
insb
rcll
mov
xor
fadds
movb
enter
idivb
rolb
lret
push
push
fiaddl
cli
popf
jmp
mov
js
insb
inc
in
enter
jns
adc
and
jge
outsb
mov
add
mov
sub
fcomps
sub
aad
pop
mov
es
shl
pop
pop
es
out
imul
out
aam
aam
xchg
cmp
or
or
sub
call
or
jnp
or
inc
sub
out
es
adc
fnsetpm(287
xchg
lds
mov
sbb
adc
sbb
jo
inc
fldenv
inc
dec
or
mov
or
test
or
sub
loop
add
pop
mov
ret
mov
out
jmp
andl
test
and
dec
jnp
jno
jp
dec
lods
mov
sbb
sub
or
lds
lea
pop
sbb
pop
mov
xchg
iret
and
push
cmp
or
mov
mov
and
pop
pop
sahf
enter
mov
mov
sbb
dec
ds
xchg
lahf
cmp
mov
pop
or
adc
dec
jl
dec
fstl
insb
rcrl
sub
adc
mov
mov
gs
out
mov
push
pop
loope
mov
daa
jecxz
xchg
pop
arpl
mov
out
out
scas
adc
addl
fucom
cmp
add
popa
gs
in
pop
sbbl
bound
add
push
mov
fs
ret
mov
push
outsb
fdivl
mov
fnstenv
out
cmp
jle
jg
enter
pop
andb
mov
jg
sbb
mov
iret
loop
sbbb
icebp
cltd
lock
test
movb
int3
fisttps
jnp
xor
imul
loop
jo
loopne
push
pop
and
js
rcll
xchg
shrb
rorb
xchg
icebp
xor
test
ja
cli
mov
xchg
data16
sub
popf
insb
cmp
sar
dec
popf
and
adc
push
test
adc
xchg
stos
sbb
mov
jno
into
and
sbb
aam
out
out
xchg
fmull
xchg
insb
test
pop
and
movsl
add
mov
popf
shlb
xor
fcoml
adc
pop
clc
movsb
out
ror
mov
movsl
fwait
jns
lds
fs
push
push
ret
jge
push
xor
test
hlt
mov
adc
add
or
loop
pop
sub
stos
inc
icebp
cmpsb
shlb
jecxz
jae
gs
push
insb
movsl
fidivrs
in
nop
and
rol
inc
mov
shl
adc
inc
jbe
rcrb
mov
outsl
sbbl
sbb
movsb
mov
ds
fidivrs
out
xor
out
iret
adc
dec
mov
jmp
mov
cmp
repz
xchg
mov
mov
enter
sbb
xchg
or
mov
pushf
jnp
ja
sub
mov
lret
sbb
repnz
push
insb
dec
hlt
out
aad
mov
dec
test
cltd
pop
in
gs
mov
lds
xchg
lret
icebp
xor
mov
test
sub
dec
add
mov
inc
inc
loopne
fidivl
out
pop
data16
cmp
and
les
inc
fisttps
das
lds
jno
jle
jmp
repnz
xchg
int3
ja
nop
ds
push
jle
mov
std
addr16
sub
mov
dec
dec
in
inc
dec
mov
pop
and
mov
es
xlat
jmp
jg
adc
aam
shr
mov
cmpsl
and
sbb
test
jbe
dec
xchg
inc
xor
mov
scas
fs
dec
sahf
pop
xchg
inc
mov
add
in
popa
cmp
mov
test
aam
push
imul
shll
lds
out
push
sub
adc
cmp
xor
andl
aas
jle
jno
adc
ds
test
scas
pop
push
out
mov
insb
fimuls
inc
fs
scas
incl
shlb
cmp
aaa
paddw
jmp
sub
pop
out
jle
mov
dec
sbb
test
xchg
pop
cmp
dec
lret
gs
jae
push
xchg
jbe
pop
inc
pcmpgtw
cmp
mov
je
ficomps
test
mov
jnp
mov
cmp
dec
cltd
repnz
dec
mov
inc
dec
divl
and
push
mov
sbb
adc
push
xor
and
inc
mov
jnp
out
adc
mov
jle
loopne
pop
mov
leave
and
mov
cmp
dec
inc
cltd
shl
roll
adc
cmpsb
repnz
es
mov
lahf
dec
int
and
cmp
sub
stos
test
call
inc
sti
inc
cmp
push
in
lea
popf
std
xchg
aas
fwait
push
iret
dec
add
pop
test
shl
mov
dec
insl
adc
xchg
add
fisttpll
lods
and
push
add
bound
adc
push
dec
cmp
fsubrl
cmp
rcr
xor
cli
ljmp
add
enter
inc
int
stc
enter
push
dec
xchg
in
outsb
mov
push
notl
pop
lock
xchg
xor
push
scas
dec
mov
aaa
lret
cmp
ja
and
sub
xchg
mov
inc
stos
lahf
pusha
lods
scas
je
sti
adc
pusha
mov
or
cmp
inc
pop
aad
imul
lea
scas
mov
jo
scas
flds
push
pop
add
les
je
jbe
test
jb
stos
ret
popa
test
jo
into
push
test
scas
dec
inc
ret
and
dec
mov
loop
mov
mov
cmp
cmp
mov
mov
inc
xlat
lret
repnz
sbb
and
fbld
xchg
repz
sbb
cmc
cmp
rolb
popa
sub
and
mov
dec
rol
lods
jae
xchg
imul
jecxz
cwtl
jge
add
add
inc
add
cmp
cmp
sahf
mov
into
out
ss
cmp
xor
push
arpl
adc
push
and
in
sub
dec
mov
cmp
cmp
mov
out
push
dec
xlat
pop
scas
lret
stc
aaa
dec
inc
mov
jo
cmp
ret
popf
cmc
sarb
js
insl
adc
cmp
add
fmull
pop
mov
ljmp
jg
push
outsl
xchg
arpl
sub
sub
xlat
pop
inc
jb
das
lret
dec
or
lds
popa
call
and
in
xor
lods
cltd
mov
fs
in
test
aam
adc
add
out
inc
mulb
sub
mov
aam
scas
cltd
insl
mov
movsb
mov
jmp
iret
jp
dec
dec
jnp
sbb
inc
push
dec
push
xor
pop
sar
dec
stc
scas
push
dec
mov
sub
mov
cmp
lret
imul
mov
xor
das
pop
and
hlt
dec
mov
stc
pop
pop
mov
push
pop
mov
test
ss
or
lahf
inc
push
push
cmc
jne
dec
fnstsw
insb
cmp
inc
pop
sub
fildl
jl
pop
jmp
rorb
xchg
daa
xchg
inc
pop
sbb
lods
repnz
fildll
ficompl
push
pop
mov
xchg
xor
and
push
out
add
iret
js
dec
out
adc
xchg
enter
push
cmp
scas
dec
sbb
adc
aam
push
sbb
mov
mov
and
adc
and
stos
pop
inc
adc
sti
movsb
sbbb
mov
in
ss
int3
sbb
clc
cmpsl
jbe
inc
mov
neg
and
sbb
ror
xchg
cmp
jecxz
xor
adc
fadds
add
mov
and
mov
xchg
mov
sti
or
into
xor
in
rclb
sub
inc
stc
mov
fsubl
rcl
xchg
dec
sarl
pop
jns
sarb
add
div
andb
dec
repnz
mov
js
popf
fldcw
sub
pop
push
mov
jne
arpl
into
jle
and
scas
push
push
mov
lret
lds
add
ret
lods
mov
test
ljmp
pop
inc
repz
test
mov
adc
rcl
xchg
faddl
ret
movsb
mov
lods
cmpsb
movsb
jg
aaa
fcoms
dec
push
outsb
push
mov
adc
or
clc
es
adc
imul
push
cmp
sub
fidivrl
fistpl
scas
jns
dec
call
jmp
mov
jl
pop
out
scas
ffreep
insb
and
add
and
in
stc
pop
cmp
nop
jg
jb
pshufw
sbb
outsl
and
andb
xchg
cmpsb
pop
and
insl
sbb
adc
xchg
and
adc
cwtl
xor
sarl
dec
add
movsl
in
rcl
lea
stos
repz
int3
mov
loop
fisubrl
add
cs
sbb
out
xchg
decl
sbb
and
into
test
xchg
or
cmc
or
and
incl
cmp
pop
cmpsl
fists
jbe
or
or
int
in
and
mov
out
imul
xlat
fsubrl
mov
popf
ret
leave
std
adc
mov
cmp
cld
mov
jae
inc
insb
or
cmp
popf
mov
dec
jp
pusha
sub
call
jne
fldl
pop
sarb
lahf
shrl
out
in
push
cmp
in
fldl
adc
ret
sbb
push
or
ljmp
addr16
push
jo
insl
stos
adc
lods
in
dec
xlat
ljmp
cs
jg
mov
ret
dec
pop
ret
mov
sbb
inc
push
popa
mov
add
and
jb
mov
je
jae
or
pop
pop
cmp
lods
lret
data16
lcall
push
lock
or
xchg
repz
insb
xor
arpl
adc
jmp
mov
or
fs
jl
lret
mov
inc
cmp
les
imul
jno
push
mov
jg
lock
out
cli
out
stc
lret
loop
and
cmp
push
loop
rcrb
pop
lock
loopne
lock
mov
faddl
test
adc
sbb
leave
add
sahf
cmp
xchg
nop
cmp
push
pushf
stos
test
and
push
mov
xor
cmp
push
mov
sub
out
pop
out
dec
fcompp
movsb
adc
and
or
xchg
lods
test
xlat
clc
cmpsb
cmp
adc
ficomps
xchg
lret
outsb
insl
cmp
mov
push
sbb
pop
sbb
jg
scas
cmp
sub
fmul
adc
dec
sub
jnp
data16
mov
mov
xor
divb
stos
fwait
fs
cmpsb
push
xor
int3
popf
ror
js
sbb
mov
mov
cmpsb
je
xor
sub
pop
es
add
sbb
iret
outsl
push
cmpsl
lods
and
mov
and
push
sub
test
mov
jbe
fs
or
sub
push
insb
or
insb
loope
cli
jb
mov
jae
das
cmp
xlat
adc
cmp
jns
loop
cld
fcoms
iret
sti
mov
sbb
mov
icebp
xlat
in
cmp
imul
and
cmovns
fdivrp
adc
or
push
inc
mov
test
popf
push
jb
lcall
sub
scas
test
inc
lock
push
pop
mov
test
pusha
in
mov
mov
xchg
mov
fmull
inc
int
push
mov
fdivrp
adc
add
mov
cmp
out
cmp
mov
push
std
jmp
jp
leave
xchg
shr
filds
sub
jmp
mov
inc
mov
push
int3
inc
adc
out
fldl
pop
aas
cmp
ficomps
pop
xchg
pop
or
stc
sti
sub
xlat
or
cmp
adc
xor
je
or
jns
dec
mov
in
sub
cmp
lcall
pusha
jg
xor
mov
xor
pop
inc
lea
repz
or
fcomip
aas
sbbb
or
gs
addr16
xchg
adc
repnz
adc
test
cld
sub
pop
jbe
adc
lock
push
xchg
dec
inc
inc
mov
stc
xor
stos
add
mov
push
repnz
xor
xchg
xor
inc
mov
cld
mov
ret
loope
dec
mov
pop
std
mov
in
jecxz
sti
cmp
loop
into
loope
mov
or
sbb
sub
cmpsb
repnz
sub
mov
jl
pushf
inc
inc
aaa
clc
jae
cmpsb
mov
in
xor
add
pop
mov
push
jo
mov
mov
cmpsl
inc
cmp
shlb
ror
sub
or
jno
leave
pop
lea
pop
ret
sbb
add
out
add
imul
iret
out
dec
mov
jle
fwait
mov
or
lea
pushf
lods
loop
or
and
and
fnstcw
adc
popa
jne
lods
dec
jge
ret
mov
sub
push
out
lahf
int
pop
iret
sahf
lods
loopne
adc
cmp
xor
mov
xchg
sbb
dec
cmp
orb
inc
pop
sbb
mov
jne
xor
mov
add
mov
mov
xor
add
mov
imul
mov
xor
mov
lea
jmp
inc
outsl
mov
outsl
rcl
mov
loope
hlt
bound
pop
bound
mov
and
lods
dec
orl
and
adc
mov
or
je
xchg
jg
sub
in
adc
lods
clc
test
mov
outsl
loope
cmp
inc
out
mov
mov
xlat
test
das
sbb
ret
call
stc
xor
cmp
sbb
popa
in
mov
push
jmp
outsl
add
xchg
inc
imul
cmp
sub
dec
dec
mov
les
push
jo
adc
roll
movsb
sub
mov
dec
push
jle
stos
mov
aas
cmp
xchg
mov
fwait
adc
push
ja
cmp
sar
je
or
add
and
mov
push
cwtl
fdiv
inc
jp
out
hlt
push
mov
scas
mov
call
or
push
push
test
jge
mov
fisttps
sbb
inc
icebp
mov
in
loop
xor
ficoms
iret
add
scas
mov
pop
fs
cmp
outsb
mov
lcall
orl
jp
dec
mov
push
pop
mov
lods
aad
xor
mov
push
test
dec
push
cmp
jge
sub
daa
hlt
in
or
pop
add
repnz
dec
ret
das
movsb
stos
aaa
adc
dec
adc
aas
stos
mov
or
push
dec
popf
lret
outsl
xchg
sahf
push
or
pop
test
or
in
add
xchg
dec
or
push
ss
mov
jg
rcrb
dec
cmp
aas
sbb
push
in
adc
jno
sub
ss
bound
cmp
sub
call
and
cmp
sub
lret
notl
inc
sti
cld
sbb
ret
sub
jge
test
push
fs
lock
fmul
dec
mov
and
fmul
xor
les
scas
dec
in
xchg
sub
dec
jne
pop
jmp
mov
repnz
fs
or
or
add
mov
gs
hlt
xor
int3
fidivl
test
jne
aaa
jl
jne
jmp
fnstenv
xchg
cld
lods
cmpsl
lea
enter
imul
xor
rolb
sub
push
pop
sub
or
int
xor
mov
in
stc
mov
ss
shlb
fs
pop
insl
bound
or
mov
jge
rol
pop
cmp
add
mov
sub
push
xchg
mov
lret
add
mov
arpl
sarb
daa
imul
bound
push
pusha
cmp
ljmp
dec
call
div
xchg
dec
adc
aas
loope
jle
pop
les
mov
inc
jle
xchg
mov
iret
stos
xchg
push
sub
dec
push
push
movsl
lcall
jp
mov
ret
add
xchg
addr16
syscall
sub
fs
je
sub
jmp
lret
fisttps
in
mov
cmpsb
cmp
les
and
mov
pop
movsl
hlt
jo
std
cmc
scas
movl
clc
inc
ret
out
xchg
stos
subb
addr16
adc
ret
in
testl
mov
movsl
or
test
jb
insb
out
push
jbe
loope
popa
add
mov
aad
xchg
inc
xchg
test
imul
inc
and
loope
sahf
ret
jp
jmp
outsb
sbb
popa
iret
daa
jnp
and
cmp
int3
mov
add
jne
mov
xchg
aas
pminub
lret
je
jmp
test
xchg
or
xlat
mov
push
mov
cmp
add
int3
out
in
mov
mov
mov
lds
aam
sbb
mov
addb
arpl
mov
in
dec
mov
pop
out
fsts
out
aam
aam
repnz
fisttps
jg
fstps
xchg
xchg
cmp
jb
adc
sub
iret
les
push
popf
sbbl
dec
dec
sti
jo
push
pusha
addl
fs
lahf
dec
lods
inc
js
dec
mulb
je
adc
lea
xor
inc
mov
adc
mov
aad
sub
add
mov
enter
repz
cmp
jg
cmp
cmc
push
mov
lods
scas
adc
pop
pop
das
fistps
mov
aaa
fxch
push
bound
push
pop
xor
idivb
lds
loope
pop
add
les
jp
fxch
pop
daa
inc
inc
xlat
xchg
xchg
mov
movsb
nopl
pushl
repz
lds
push
hlt
nop
int3
rcrb
push
test
push
movsb
fdivs
cli
sub
push
mov
mov
cmp
and
fs
iret
fistpll
push
pusha
loop
jge
fdivrl
mov
and
push
iret
pop
pop
arpl
int3
popa
jg
scas
es
pop
aad
icebp
cmp
jns
dec
pop
gs
les
pop
push
jecxz
fidivrs
lock
push
adc
cmpsb
pop
pusha
mov
push
stos
jb
adc
pop
pop
out
push
pop
scas
ljmp
insl
sti
xor
iret
push
out
in
pop
inc
jae
or
fidivrl
fnstsw
adcb
jg
dec
sub
add
packuswb
push
popa
sub
and
dec
cmp
mov
inc
loopne
cmp
test
lds
ss
xchg
adc
or
pop
insl
jae
arpl
jb
jp
push
mov
xchg
rcrl
adc
pop
test
addb
fstl
mov
fbld
int
out
loop
setle
loopne
push
xchg
loope
and
push
xchg
sahf
inc
ds
mov
repz
lds
leave
mov
sub
in
popa
mov
or
loop
stos
iret
or
in
push
pop
and
add
and
cmp
push
push
xor
fdivl
xchg
adc
in
and
stos
xchg
and
in
add
outsl
sub
ret
aam
bound
inc
push
movsl
xchg
loopne
push
mov
xor
mov
pop
scas
cmp
fs
xlat
push
andl
dec
es
insl
test
mov
cltd
pusha
bnd
outsb
add
xlat
jne
popf
mov
xor
lock
out
andb
cmpsb
pusha
test
lret
imul
orb
mov
jmp
inc
jp
sub
add
jb
pop
pop
ret
int
push
sbb
adcl
sub
cmp
cmp
outsl
stos
pop
mov
repnz
cmpl
fisubrs
in
fstpl
and
loopne
iret
add
lock
rolb
cmp
fbstp
dec
insl
sbbl
imul
push
jno
adc
rcll
aas
fsub
rol
adc
fisubs
dec
ret
fimuls
scas
leave
scas
and
movsl
rorl
lret
jns
enter
fmuls
sbb
lret
insl
insl
dec
cmpsl
jnp
push
and
mov
stos
or
sahf
pop
inc
inc
and
inc
icebp
sub
orl
repnz
jecxz
cmp
sar
mov
jge
pop
cmp
out
push
icebp
rcll
xor
jge
out
and
test
mov
inc
push
dec
cwtl
leave
fildll
icebp
lea
in
nopl
es
or
pop
shlb
scas
xchg
aaa
pop
je
fisttps
push
adc
inc
je
jg
and
idiv
and
aad
jmp
xchg
or
lds
cs
sub
sub
cltd
jae
mov
fsub
or
mov
push
lods
add
add
loopne
pop
fs
test
jns
jecxz
loopne
into
dec
pop
cld
jl
jecxz
xchg
jne
dec
cmp
loope
ss
loop
dec
insl
jecxz
fidivrl
mov
lcall
mov
test
and
cmc
xchg
lahf
pop
dec
push
mov
adc
adc
cli
mov
pusha
enter
fld
cli
push
nop
mov
inc
cmpsl
xor
jmp
jbe
mov
and
push
cmpsb
outsl
mov
mov
or
fs
shr
mov
mov
mov
sbb
sub
es
int
push
adcl
pop
dec
cmp
and
popf
std
jno
lds
imul
inc
mov
iret
dec
in
inc
out
jp
mov
push
cmp
pop
jmp
mov
pop
stc
xchg
pop
add
cltd
fidivs
inc
call
push
dec
mov
push
mov
notb
mov
mov
xor
stc
cmp
inc
sahf
insb
xchg
pop
test
add
loope
add
push
mov
jl
dec
jmp
xchg
adc
ret
inc
std
jl
jmp
test
and
pop
loopne
add
shlb
xor
add
jns
fsubl
jg
popa
xlat
call
jmp
and
pusha
lret
pop
push
shll
xor
mov
lods
not
clc
dec
rcrb
sbb
xor
cmp
gs
cwtl
aaa
jmp
dec
fstps
cld
mov
mov
lcall
stos
outsl
sahf
aam
js
mov
xorb
sahf
test
repz
loope
push
das
imul
and
das
fstpt
daa
pop
inc
adc
inc
sub
mov
pop
xorb
lea
lods
jnp
mov
pop
subb
xchg
mov
mov
les
or
jle
push
pusha
roll
sti
je
mov
xchg
fnstsw
icebp
and
jne
sbb
mov
nop
xor
loop
shrb
or
xlat
mov
lds
lods
jmp
push
mov
std
insb
jl
push
cld
flds
mov
fdivrp
mov
pop
fisttpll
inc
out
pusha
mov
inc
add
mov
aaa
sbb
daa
add
xor
mov
out
stos
jmp
mov
mov
test
icebp
jg
std
inc
inc
in
sahf
lret
jno
pusha
out
dec
xchg
dec
inc
lods
test
mov
push
pcmpgtw
ret
dec
hlt
mov
movsb
jle
jo
mov
les
imul
add
or
loope
inc
nop
pusha
inc
push
outsb
push
cmpsb
lods
pop
mov
and
sub
movsl
daa
lods
xor
push
jmp
push
negb
stc
push
xchg
ja
aas
sbb
repnz
aad
movsl
add
push
mov
jb
and
test
das
ficomps
popf
movsl
push
mov
push
aam
inc
add
cmp
rorb
out
ja
nop
mov
xlat
add
loopne
pop
les
dec
adc
dec
xchg
ffree
mov
jnp
xlat
in
inc
scas
sbb
jl
adc
orl
xor
stc
push
mov
xchg
pop
lret
aad
push
in
ret
and
bound
cmpsb
inc
xor
xchg
lods
pushl
xlat
es
ljmp
xor
mov
xor
xchg
repnz
out
xchg
mov
fsubl
inc
inc
test
idiv
fcomip
jle
imul
and
outsl
xchg
pop
xchg
mov
mov
mov
mov
mov
xchg
cmp
idivl
mov
push
push
push
jns
fiadds
push
insl
jge
gs
daa
xchg
jns
dec
xchg
xlat
out
push
andl
iret
lcall
cwtl
jecxz,pn
iret
sahf
shll
outsl
jne
mov
cwtl
js
jbe
pop
scas
aam
fstpt
ret
into
or
movsl
popa
in
xchg
xchg
adc
xchg
int
orl
in
xorb
xor
cmp
jge
pop
ret
in
lret
pop
dec
sbb
shlb
nopl
dec
jecxz
mov
imul
pop
iret
fcomps
fisubrs
es
loopne
jmp
mov
es
jecxz
and
addr16
and
adc
jmp
xor
adc
adc
insb
inc
lret
inc
aas
adc
lds
sub
outsl
bound
int
sti
push
cmp
fisttps
jmp
pushl
jp
pushf
and
es
push
adc
sub
push
ljmp
fwait
inc
xor
cmpsl
cmp
lret
movsl
mov
or
mov
insl
sbb
sbb
push
xor
mov
xor
xor
loopne
jns
lret
popa
in
gs
pushf
movsb
cld
add
mov
imul
rcr
lcall
filds
pop
cltd
adc
push
insl
andl
aas
pusha
jne
jae
shll
sbb
lock
outsb
iret
aad
loop
adc
push
jne
jp
add
fnstenv
clc
aad
jle
xchg
dec
pop
leave
into
xchg
or
add
mov
cmp
fstpl
inc
xlat
fucomip
hlt
test
imul
add
in
loopne
sub
mov
aaa
out
mov
pushl
ljmp
jb
mov
aad
pop
imul
icebp
imul
cmp
mov
xor
xchg
inc
lret
sub
addr16
movsb
jg
pop
fmul
sub
hlt
and
repnz
pop
std
stos
sbb
pop
mov
shlb
jne
sub
sti
pop
push
adc
faddl
orb
imul
jmp
push
add
mov
adc
repnz
push
cwtl
xlat
andb
mov
repz
push
mov
jmp
loop
mov
add
fsubrs
stos
iret
je
xor
idivw
mov
popf
popa
gs
int
jge
sub
shrl
inc
sbb
idivb
lock
pop
leave
dec
cmp
pushf
cmp
dec
cld
stos
jnp
xlat
and
jg
sbb
andb
pushf
ret
mov
je
cs
inc
push
jmp
imul
leave
out
mov
pop
sbbl
rorb
inc
or
test
into
adc
xor
push
test
mov
xchg
dec
pop
lcall
xor
sub
mov
and
push
push
aas
aas
inc
in
mov
nop
sbb
pop
sub
push
cmc
mov
test
test
dec
ds
in
and
ds
xor
fwait
test
sub
std
add
jle
inc
pusha
nop
xor
dec
cs
adc
jbe
stos
insl
in
orb
push
outsb
movsl
add
push
mov
sub
ret
fnsave
xor
jmp
call
inc
inc
push
out
add
pop
dec
lods
sub
adc
insl
sahf
aam
incb
mov
lcall
in
ret
cmp
push
and
lahf
xor
inc
movsb
jb
mov
and
lds
lret
pop
loop
clc
dec
fs
or
mul
cmpsb
inc
xorl
jae
pop
cmp
sbb
insl
xchg
jp
push
addl
ret
cwtl
nop
xchg
push
push
xor
cli
inc
call
aaa
lret
sbb
sub
addl
mov
add
aam
adc
jp
test
or
fld
xor
lret
sbb
iret
repz
inc
jg
cmp
clc
adc
arpl
testb
cmpsl
daa
mov
mov
mov
shlb
mov
rcll
loopw
repnz
push
inc
mov
xor
cltd
mov
out
sbb
insb
mov
fcmovnu
arpl
jp
cltd
ljmp
push
insb
dec
or
testb
into
mov
test
and
lds
jbe
shll
jo
addr16
jb
in
mov
aad
jne
adc
adc
je
push
pop
push
push
outsb
xor
xchg
adc
cmp
add
gs
ljmp
adc
inc
call
dec
jns
stos
inc
es
cmp
fs
and
aad
aad
pop
lock
cmp
ss
dec
push
fcoml
cmp
lret
aas
cwtl
dec
hlt
add
outsl
ficomps
jnp
cmp
cld
mov
push
pop
mov
mov
shl
outsl
xlat
fmull
bound
sbb
arpl
xor
shrb
adc
jne
insl
fsubrs
mov
pop
movsb
fcmove
push
jg
xor
fdivrs
mov
rcll
hlt
inc
add
rcrl
popf
lret
xor
insl
mov
xchg
pop
shll
dec
repnz
jns
mov
push
test
leave
loopne
loop
in
and
pop
aaa
xor
mov
jmp
sub
enter
adc
scas
outsl
xor
dec
push
push
xorl
push
push
mov
std
mov
xor
pop
shlb
sub
testb
out
sub
rclb
pop
push
nop
push
fstpl
or
mov
jmp
adc
outsb
push
shrl
cmp
lock
mov
divl
iret
shl
cld
cmp
mov
nop
iret
daa
shlb
dec
cltd
repnz
mov
sub
dec
mov
mov
push
push
push
jl
xchg
pop
test
sub
sbb
call
pop
orb
xchg
push
cwtl
ljmp
mov
lods
aam
push
in
sti
or
jb
xor
mov
cwtl
mulb
adcb
jp
hlt
enter
dec
push
sub
jns
aas
sbb
xchg
and
int
mov
les
sbb
pop
test
mov
dec
inc
push
das
insb
pop
xchg
fdivs
fisubs
sbb
pushf
mov
in
pop
fisubs
push
adc
popf
adc
test
adc
cli
add
stos
xchg
push
add
in
sub
fsubl
cmp
aam
pop
mov
repz
ljmp
pop
cld
outsb
pop
add
cmp
loop
dec
clc
jecxz
mov
cmp
sarl
mov
push
das
nop
loop
sbbb
cmpsl
push
sbb
pop
sub
sbb
mov
iret
mov
stc
xor
test
ficomps
dec
cmp
xorl
xor
loope
mov
addr16
pop
xorl
mov
inc
xchg
movsl
jle
lcall
ret
sbb
add
mov
inc
add
addr16
xchg
sbb
stos
int3
push
mov
jmp
jge
daa
mov
js
xlat
pop
arpl
sub
fwait
jo
mov
rorb
movsl
push
fmuls
shll
sahf
ret
shr
push
add
adc
stos
xchg
mov
mov
mov
lcall
in
stc
push
in
iret
rorb
xor
jmp
in
mov
andl
mov
add
fildl
push
cltd
outsb
mov
and
call
sbb
add
je
jge
addb
pop
sbb
andl
mov
mov
adc
std
push
mov
inc
sub
jb
lea
test
imul
scas
sub
sbb
imul
adc
xor
jns
test
mov
sbbl
and
pop
ret
lock
cmp
and
lods
jb
cli
mov
push
xchg
xchg
xor
int
pop
add
cmpsb
loope
push
pop
push
dec
cltd
dec
aas
lahf
mov
mov
sub
pushf
popa
adc
xor
in
jbe
sub
test
imul
sub
add
adc
xchg
mov
les
imulb
insb
nop
adc
fcomps
aad
js
scas
adc
je
mov
movsb
stc
and
xor
lret
ret
out
in
mov
cmpsb
sbb
push
and
sbb
mov
insb
mov
insl
cmpsl
mov
jecxz
mov
mov
dec
dec
imul
loopne
add
push
push
sub
rorb
adc
sub
sub
cmp
adc
repz
das
push
andb
adc
pop
test
pop
jl
dec
add
icebp
test
mov
out
ficoml
into
cmp
sub
js
xchg
sub
sahf
mov
inc
lcall
scas
xchg
js
push
ds
ror
sub
or
mov
cld
sub
push
leave
inc
out
adc
dec
push
jnp
mov
sub
adc
mov
je
outsb
jecxz
loopne
sbb
sub
ret
dec
dec
mov
inc
mov
jp
adc
ret
imul
inc
mov
std
fwait
cmpsb
xchg
inc
outsb
scas
pop
adc
ja
adc
mov
mov
lret
icebp
mov
push
add
hlt
loopne
mov
js
sub
mov
pop
push
inc
leave
jno,pn
clc
shrb
mov
sbb
add
jno
mov
jne
dec
mov
hlt
lahf
mov
bswap
shr
or
imul
cs
rorl
dec
fists
push
repz
clc
push
sub
stos
gs
push
and
stos
testb
stos
lret
push
xor
mov
loopne
or
rcrl
dec
lds
jmp
jbe
xlat
xor
aas
adc
fwait
mov
insl
xchg
fcmovnbe
leave
adc
xor
aaa
enter
stc
lret
icebp
ret
sub
or
loopne
pushf
add
dec
jp
scas
cli
ljmp
push
mov
leave
rcl
das
inc
or
or
pop
gs
call
pop
lret
adc
mov
xor
aas
mov
nop
ret
sbb
sbb
lret
fbstp
bound
aas
xchg
mov
dec
dec
test
jns
and
xor
push
push
lods
push
cmp
push
dec
inc
jo
mov
push
xor
negl
cmp
add
rcrl
ss
ds
hlt
sbb
bound
daa
mov
add
cld
cmp
test
dec
mov
leave
sbb
stc
push
mov
inc
test
sbb
stc
loop
in
sarb
dec
push
aas
int
in
sub
push
push
jge
jb
pop
mov
out
outsl
inc
clc
popf
inc
cmp
aaa
xchg
test
dec
cmpsl
mov
test
jb
jle
rorl
pop
adc
pop
adc
mov
jne
cmp
in
ret
push
adc
andl
mov
aad
mov
xor
inc
cmp
cmpsb
fcmovnu
inc
or
nop
repz
addr16
mov
int3
inc
sbb
jp
in
xlat
dec
mov
ljmp
test
add
add
adc
test
or
sbb
xlat
jne
cmpb
js
in
or
pop
popf
adc
dec
mov
jno
rcrb
jae
jmp
mov
scas
push
ja
in
out
mov
outsl
iret
outsb
call
jns
mov
add
and
pop
out
sbb
repz
mov
xchg
mov
push
add
idivb
in
stc
jge
aas
imul
cli
mov
enter
call
popf
push
stos
pop
lret
inc
sbb
mov
outsl
fiaddl
sub
xchg
push
mov
adc
push
pop
cmp
test
or
xor
cmp
gs
rorl
push
cli
fwait
pop
cmp
fldt
lret
mov
xor
clc
add
sub
pop
mov
xchg
pop
cld
cmc
adc
mov
loope
push
dec
leave
jae
sahf
fadd
xor
adc
rorb
pop
rorl
xchg
shrb
xor
je
push
pop
dec
jg
pop
shrl
mov
ljmp
out
pop
rclb
out
rcrb
data16
cmp
sub
jno
dec
pop
enter
addr16
gs
in
ror
out
cmc
inc
jae
mov
jecxz
inc
xlat
xor
insl
jl
mov
in
xor
scas
push
push
lret
cmpsb
sahf
mov
dec
cmpl
mov
push
xor
stos
mov
les
mov
in
icebp
movsl
add
push
mov
xchg
mov
mov
out
cltd
mov
inc
push
add
jo
stc
jns
or
repz
lock
cmp
xor
inc
imul
cs
mov
jo
mov
adc
lock
call
sbb
dec
les
inc
dec
enter
call
mov
rcrl
imul
xor
icebp
cmp
clc
fsubs
mov
loop
jnp
xor
rol
enter
sbb
adc
dec
sahf
in
sbb
sbb
lahf
or
mov
sub
jmp
sub
cmpsl
cmpl
adc
pop
repz
xchg
loop
lea
pusha
insb
lret
orb
push
das
push
ret
rcll
lret
clc
out
or
mov
sbb
xchg
insb
inc
or
dec
stc
jno
vpcmpgtb
push
in
stos
daa
sbb
lea
jg
and
aas
lea
mov
pop
ret
mov
push
insb
sub
mov
mov
or
js
add
adc
js
fcompl
lds
imull
icebp
cmp
gs
inc
cwtl
fcoms
shll
ret
xchg
lcall
mov
push
jl
cmp
sahf
popa
or
sbbb
ss
jge
fs
and
xchg
std
iret
ss
or
in
pop
push
lods
xchg
jmp
imul
push
push
sub
stos
pusha
lret
or
or
ret
push
mov
mov
fs
sbb
mov
cs
adc
ljmp
add
xchg
flds
cmpsl
out
ljmp
cli
into
and
dec
mov
or
out
push
mov
xchg
inc
dec
xor
pop
xor
jb
lods
xor
mov
ss
fcmovnbe
mov
clc
shll
mov
popa
inc
pop
push
cmp
repz
mov
sti
test
jno
mov
aaa
scas
xlat
dec
lock
sub
sar
xchg
pop
inc
pop
xor
xchg
push
je
cmp
or
pop
adc
cs
in
addr16
rclb
cltd
ds
mov
lock
cmc
rcll
sbb
add
inc
or
sbb
and
lods
int3
fdiv
jno
popf
and
dec
push
mov
fcmovu
aam
ret
adc
loop
mov
insb
es
subb
rol
xor
mov
push
hlt
pop
pop
sub
inc
js
push
insb
push
lret
jle
fisttpl
mov
fsubr
je
mov
cmpb
mov
add
cs
es
mov
jns
stc
adc
sti
lods
inc
cmpsl
ret
sarb
arpl
mov
stc
addl
xor
sahf
repnz
loope
subl
mov
leave
ds
testb
xor
and
lds
push
rorl
test
cmp
sub
jbe
sub
dec
test
lods
mov
rolb
mov
cld
sti
addr16
xchg
daa
xchg
test
jge
mov
int3
leave
cmp
fcmovbe
std
mov
xor
in
push
lock
in
fsubrp
icebp
inc
pop
inc
aam
aaa
bound
cmp
lods
push
or
int3
adc
and
in
xor
mov
inc
add
mov
icebp
or
add
mov
sbb
dec
sbb
fldcw
inc
xor
cmp
adc
fsubrl
js
imul
pop
xchg
repz
insb
adc
jecxz
aas
ljmp
inc
pop
insl
or
arpl
hlt
lods
dec
cmc
pop
repz
mov
and
mov
fildl
push
mov
sub
sub
stos
jge
pop
add
mov
in
gs
lahf
cmp
mov
addl
mov
and
xor
arpl
and
insl
lds
xorb
icebp
add
out
or
sbb
xchg
inc
xchg
rorl
push
jp
movsb
movb
inc
ret
xchg
gs
insl
outsb
xor
mov
push
dec
negb
xor
dec
pop
fimuls
jmp
adc
inc
lods
jp
mov
test
xchg
push
jno
lods
pop
dec
outsl
lret
push
dec
fldt
mov
orb
push
xchg
dec
jg
push
pop
int
fs
mov
fs
xchg
xlat
sub
mov
bound
icebp
mov
fdivrs
fcmovb
sub
jmp
ja
pushf
pop
sarb
adc
orl
cld
adc
arpl
test
scas
cmp
and
arpl
jge
das
mov
push
cmpsb
fs
xor
fcompl
and
or
xchg
sub
hlt
fmuls
jecxz
mov
push
pop
sbb
inc
pop
push
pop
arpl
repz
xor
in
and
cld
jecxz
es
adc
xchg
inc
xchg
jmp
push
scas
jbe
mov
pushf
bound
jle
gs
lcall
fldenv
fbstp
mov
push
ljmp
xchg
lret
cmp
add
lahf
lret
pop
sbb
cmp
test
imul
lods
jae
in
mov
mov
lret
push
jge
iret
insl
cltd
je
fisubrl
lea
loope
mov
icebp
imul
mov
inc
mov
stc
push
ret
or
jp
movsb
arpl
movsb
cwtl
mov
repnz
xchg
pop
das
ret
xor
mov
xor
shr
imul
rcrl
add
mov
dec
xor
hlt
pop
fldcw
dec
inc
add
repz
adc
aas
push
pop
inc
dec
mov
iret
adc
ret
jg
push
dec
addr16
nop
mov
pop
in
xchg
movsb
je
je
sti
ret
dec
adc
mov
inc
jbe
dec
out
dec
mov
xor
mov
insb
jb
testl
dec
ftst
lcall
shlb
add
fldenv
into
sub
fcompl
out
adc
cmp
dec
mov
daa
mov
insb
iret
xchg
outsb
xor
jecxz
loop
aas
shlb
pop
cmpsb
pop
mov
pop
cwtl
jae
jge
cmpsb
sbb
pushf
pop
sub
sbb
cs
and
shl
fisubrs
cs
sbb
imul
dec
inc
mov
pushf
xchg
or
fwait
xor
cmpsl
lods
dec
sub
cwtl
add
sti
mov
arpl
add
enter
push
gs
sub
dec
ss
push
insb
add
insl
movsl
xor
jo
push
mov
xlat
add
push
lods
mov
jb
ss
icebp
inc
pop
mov
ss
xchg
jle
inc
lock
jae
mov
fsubr
fimuls
repz
xchg
cmp
adc
roll
jb
jmp
lds
enter
add
add
or
addb
or
xor
xor
mov
add
div
mov
xor
lea
mov
mov
mov
mov
mov
xor
lea
mov
mov
mov
xor
add
imul
mov
xor
mov
lea
cmp
jne
mov
jmp
mov
mov
mov
xor
add
mov
mov
add
xchg
xor
push
mov
pop
mov
add
lea
add
add
push
inc
pop
dec
xchg
dec
xchg
dec
xchg
dec
push
mov
pop
dec
call
cmp
je
xchg
push
pop
push
pop
inc
xchg
sub
xchg
dec
dec
mov
imul
add
xchg
push
xor
mov
dec
inc
add
dec
xor
add
pop
mov
pop
pop
pop
leave
ret
orl
xor
addl
inc
ret
push
mov
mov
andl
xor
or
inc
mov
cmpl
jne
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
xor
mov
add
mov
and
cltd
push
mov
add
add
adc
push
push
mov
mov
sub
or
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
push
push
pushl
push
push
call
cmpl
jne
mov
inc
mov
jmp
mov
adcl
mov
mov
xor
xor
xor
andl
add
adc
xor
xor
cmp
jne
cmp
je
mov
mov
mov
xor
add
adc
xor
xor
cmp
jne
cmp
jne
mov
mov
xor
mov
mov
mov
jmp
pop
xchg
add
imul
adc
call
jmp
bound
mov
sahf
cwtl
in
sbb
hlt
test
orb
sub
test
ds
mov
aad
adc
mov
jb
xchg
das
fwait
mov
cld
mov
or
cwtl
in
lds
mov
and
push
xor
and
adc
sahf
out
mov
xor
inc
xchg
mov
stc
mov
dec
push
scas
repz
es
cmp
scas
stos
mov
sahf
scas
add
inc
lret
or
xor
mov
je
push
test
dec
in
adc
out
scas
adc
and
jns
cmp
test
scas
or
into
add
int3
stos
push
mov
movsb
push
dec
jne
add
imul
dec
xchg
push
xor
mov
aam
shl
pop
insl
cmpsb
fldenv
daa
mov
addr16
test
pop
push
out
push
dec
push
imul
sbb
aaa
dec
call
insb
ret
mov
cmc
in
push
cmc
dec
out
mov
and
push
pop
fsubrl
pop
inc
test
push
cld
lret
mov
cmc
inc
add
cmp
or
cmc
aad
clc
jb
call
mov
test
out
popf
cmp
xorb
dec
xor
mov
cmp
imul
arpl
stos
jbe
into
mov
pushf
repz
sbb
mov
cwtl
push
es
stos
outsb
push
sahf
mov
fldcw
rcrl
jl
in
mov
sti
imul
xchg
repnz
xchg
sbb
call
test
jge
xlat
pop
push
aam
pop
test
mov
jge
cli
ret
dec
sbb
push
push
mov
jl
test
cmpsl
ljmp
sub
mov
fsincos
add
and
add
enter
repnz
pop
shll
inc
sbb
xor
mov
fdivrs
in
movsl
push
xchg
pop
mov
mov
lods
fstps
out
sbb
push
pop
or
loop
pop
cmc
or
ret
inc
add
or
and
pop
mov
sub
pusha
cltd
popf
jmp
stc
test
mov
fdivs
insl
xor
cmp
cmp
std
jno
aaa
xlat
jb
dec
aaa
mov
hlt
arpl
mov
pop
cmpsb
add
pop
aad
add
adc
mov
cmp
sbb
inc
stos
orb
xchg
or
mov
mov
sbb
xchg
sbb
jo
ja
sbb
add
sbb
xchg
pop
jg
mov
call
xor
icebp
sub
fwait
cmp
loop
ss
or
cli
mov
lret
xchg
scas
mov
std
rcpps
or
mov
mov
ficoml
daa
popa
and
and
jg
lods
mov
fcoms
mov
repz
lods
hlt
fiaddl
cmp
push
out
repz
add
pop
leave
je
mov
adc
ds
mov
iret
jnp
mov
jmp
pcmpeqw
sbb
mov
daa
push
xor
loop
push
xchg
push
xor
leave
out
outsl
insb
xor
push
mov
imul
xchg
push
cmpsb
popa
icebp
sbb
jg
pop
push
cmpsb
mov
dec
fidivl
test
adc
sbb
std
mov
jbe
testl
and
shrb
mov
into
xchg
jl
inc
dec
ret
sub
hlt
sti
pop
xchg
pop
mov
xor
imul
testl
mov
xor
enter
sbb
lea
fwait
sbb
xchg
mov
push
xchg
pop
mov
pusha
pop
pop
test
ss
lods
dec
lahf
aad
hlt
pop
mov
cmp
rol
stos
orl
lret
js
adc
call
or
push
and
dec
jmp
xchg
sub
daa
jle
dec
fs
cmovle
aas
mov
es
popa
sbb
dec
xor
xor
repnz
fnstsw
lock
sti
mov
outsl
rcr
aas
cmp
out
mov
xor
pop
movsb
or
ss
adc
clc
xchg
inc
jg
lahf
add
push
fadd
jp
shrl
lcall
push
in
push
mov
jnp
sar
xlat
addr16
pusha
sub
adc
sub
out
and
loope
pop
or
loop
cvtdq2ps
jge
xlat
pop
xchg
bound
imul
pop
subb
push
cmp
aas
xchg
xchg
inc
out
inc
sub
loope
jl
mov
push
int
sub
je
insb
stos
ret
dec
rorl
mov
adc
arpl
add
pop
jl
mov
stc
jbe
inc
inc
mov
enter
dec
jl
sub
in
stos
insb
mov
rorb
out
aad
push
cmp
pop
adc
mov
hlt
nop
scas
cmp
xor
outsb
mov
push
pop
and
fsubrl
mov
outsl
mov
in
arpl
ss
cmpsl
push
and
jo
push
das
lea
dec
xor
sub
push
push
add
sub
pop
xor
pop
and
adc
ljmp
jecxz
sbb
pop
adc
in
xor
out
dec
stc
or
arpl
outsb
loop
in
mov
leave
int3
push
sub
aam
loopne
xor
add
ret
in
repz
insb
int3
test
call
sub
or
and
gs
dec
cmpsb
or
test
jl
popl
aaa
jecxz
repnz
shl
sahf
insl
xchg
or
cmp
imul
sbb
rcr
mov
inc
fistl
pop
notl
and
add
data16
int
mov
jns
mov
pop
dec
ljmp
pop
rcll
ret
out
repz
push
pop
js
outsl
fisubrl
fisttpll
jb
push
cmp
aam
decl
fnstenv
fcmovu
mov
add
pop
xor
sbb
jo
or
jge
mov
cmc
fnstcw
mov
hlt
leave
xlat
fcmove
pop
inc
clc
clc
ja
daa
das
jne
inc
andb
pop
scas
sub
add
mov
pop
push
jmp
sub
movsb
mov
clc
cmp
dec
push
pusha
or
fsubs
pusha
ja
jl
or
lcall
andb
mov
pusha
aas
cmp
stos
imul
push
inc
cld
leave
adc
add
testl
je
push
jmp
mov
scas
cli
in
popf
movsl
cmp
fsts
pop
pop
xor
shrb
add
es
out
cmp
outsb
call
xchg
nop
cmp
cmc
call
mov
ja
jecxz
jl
xchg
or
shll
out
lods
mov
pop
sti
mov
mov
dec
jb
out
les
ret
out
jne
ja
mov
or
fucomip
xor
pop
lahf
andl
shlb
add
repz
iret
cmpsl
sub
sahf
cs
lds
shlb
stc
in
insl
jg
sbb
dec
sbb
mov
xchg
push
adc
into
sub
shlb
jge
popa
sti
add
xor
insb
push
sub
out
mov
mov
add
cmp
fwait
stos
std
mov
sti
jno
testb
push
test
lock
inc
jg
xchg
jmp
sbb
add
mov
movsb
jnp
push
mov
mov
add
xor
dec
pop
or
jno
and
xor
arpl
out
outsb
cmp
xchg
xchg
arpl
add
in
fidivrl
loope
sub
push
nop
lds
testl
cmpsl
sbb
adc
xor
sbb
aam
stos
movnti
lea
loop
push
and
jae
das
sub
rclb
xchg
fnstsw
ja
outsl
je
into
das
or
adc
mov
es
lods
xor
dec
dec
mov
mov
push
pop
cmp
xor
addl
mov
rolb
sti
stc
jo
push
xor
aad
or
push
bound
repnz
lods
jmp
adc
sarb
cmp
lock
insb
jg
subb
and
adc
arpl
mov
add
std
out
adc
popa
xchg
mov
cmp
mov
or
cmp
push
push
cmp
pusha
fldt
dec
call
lods
int3
loop
movsb
and
push
push
mov
aad
cwtl
dec
mov
mov
cmp
pop
mov
jp
pop
shlb
or
jno
sub
nop
ret
cmpsb
pop
sti
jmp
sbb
rorb
inc
xchg
cmp
insl
mov
imul
mov
lds
xchg
and
mov
mov
fdivr
xchg
xor
cmp
fistl
imul
mov
popf
scas
xchg
mov
and
leave
lret
xor
jg
imulb
add
pushf
lock
sbb
test
jo
xchg
out
stc
sbb
jo
pop
cmp
pushl
imul
mov
stos
xchg
jp
in
sbb
fistpll
jg
cmpsb
dec
in
add
xchg
aas
fildll
jbe
idivb
or
xor
jno
cmp
addr16
outsl
xlat
fs
mov
loope
or
fbstp
mov
out
xchg
out
dec
and
ret
mov
pop
mov
xchg
out
adc
add
inc
aas
ljmp
jle
popa
jl
xor
xchg
mov
pop
and
jmp
inc
adc
adcb
arpl
out
cmp
add
xor
add
sub
arpl
add
inc
clc
scas
mov
mov
repz
push
lret
ret
dec
mov
int3
andb
pop
sahf
jno
jle
pop
iret
mov
out
and
stos
xchg
lods
imul
sbb
jae
push
punpcklbw
xchg
cmp
and
sbb
jo
lods
jo
cld
inc
in
pop
jb
out
testb
movsl
mov
stc
mov
jp
pop
in
pop
pop
inc
xchg
jns
cmp
push
pushf
and
jmp
mov
bound
dec
and
clc
shl
popf
sbb
push
and
mov
and
cmp
in
movsl
sub
nop
loopne
mov
and
pop
mov
es
loop
leave
call
jp
pop
stc
or
movsl
pop
sbb
repz
lea
je
and
jmp
mov
mov
imul
dec
and
out
or
dec
sbb
xor
mov
shl
fadd
insl
xchg
pop
push
xor
cmp
adc
sub
inc
sti
sbb
loope
loopne
addb
xlat
and
fistl
xor
pushl
push
lcall
mov
dec
adc
add
leave
and
and
push
xlat
orb
adc
xchg
test
les
or
mov
xchg
dec
daa
fdivrs
sub
add
aam
inc
sbb
test
or
mov
loop
in
iret
stos
xor
jg
aad
mov
arpl
mov
lods
sar
aad
and
iret
cs
cld
sbb
mov
inc
out
insb
add
cmc
jns
and
mov
add
data16
jbe
or
clc
sbb
inc
clc
lret
outsl
push
stos
cmp
clc
pop
mov
mov
imul
cmp
ror
and
cmp
xor
pushf
inc
dec
divl
addr16
sbb
push
insb
stc
xchg
int
mov
inc
jmp
lock
cmpsb
loope
sub
aas
loop
rcrb
adc
ja
fiadds
inc
cmp
mov
push
popa
in
xor
add
fldl
and
testb
mov
aad
mov
out
lret
fstps
insl
ret
adc
sarl
mov
ror
lret
push
enter
mov
push
adc
or
pop
aaa
lret
jno
in
lahf
pop
nop
stos
cmpsb
test
xor
cs
in
pop
rorl
push
js
aad
rclb
or
inc
bound
mov
pop
inc
dec
ss
ljmp
mov
mov
orb
addr16
sarb
faddp
cmpsl
push
js
sbb
pusha
pop
pop
out
xchg
mov
mov
mov
cmp
or
cwtl
incl
cld
add
mov
mov
std
jnp
nop
in
test
shrb
leave
push
sbb
xchg
fisubl
les
insl
mov
aad
pop
and
jp
int
pop
add
mov
xchg
das
sbb
add
popa
xor
jns
xchg
popf
mov
pop
add
xchg
cmc
adc
test
test
aaa
fsubl
fnstsw
mov
cmp
mov
inc
shlb
ds
mov
push
sahf
sub
shll
xchg
rcrl
cmpsb
stos
pop
add
cmp
clc
cmpsl
out
add
aaa
cmp
adc
sbb
in
xchg
adc
add
xchg
mov
movsb
sbb
jno
outsb
xor
outsb
sbb
std
and
pushl
stos
sbb
adc
scas
cmp
dec
and
inc
jae
pop
lea
lahf
add
lret
adc
and
and
leave
insb
repnz
movsl
pop
adc
out
ret
dec
inc
xchg
add
in
stos
push
sbb
hlt
fsubrl
pop
dec
sbb
lds
lds
mov
pop
jge
mov
jle
mov
push
push
out
dec
aas
pop
adc
int
mov
aam
xchg
push
mov
mov
xchg
push
ja
push
push
xor
cmp
test
in
inc
add
add
leave
ss
std
scas
jno
aad
lods
cmpsl
dec
sbb
and
and
enter
fimull
push
xchg
xchg
test
inc
mov
and
mov
aaa
sub
adc
cwtl
dec
mov
and
rorl
stc
sbb
test
shrl
jmp
or
cs
aaa
adc
pop
mov
cmp
mov
lea
stos
push
add
sbb
fldt
or
jns
xchg
jne
loope
fwait
push
jns
hlt
adc
data16
sub
add
sub
cmpb
fldl
jg
adc
cwtl
nop
idivb
add
mov
xchg
pop
sbb
inc
and
iret
mov
fwait
test
push
add
gs
dec
mov
xchg
pop
repnz
cmp
sub
pop
xor
mov
insl
add
sub
mov
outsb
les
inc
and
inc
and
sahf
mov
jnp
adc
and
pop
dec
addr16
push
xor
pop
test
lds
lret
nop
mov
lret
mov
jo
out
mov
iret
push
aam
cmp
xchg
cltd
aad
std
xchg
jmp
in
jae
push
mov
xchg
js
idiv
mov
test
xchg
inc
aam
or
je
cmp
stc
dec
ret
test
pop
cmp
cmp
xchg
cmp
cmp
psrlw
pusha
push
hlt
enter
sub
ja
xchg
mov
xchg
pop
imul
mov
mov
jl
add
dec
stos
jo
mov
inc
adc
imul
out
stos
sbb
shr
and
push
jmp
jecxz
sbb
mov
ljmp
sub
push
daa
hlt
xor
mov
fwait
jle
mov
inc
dec
jp
outsb
sbb
jecxz
adc
pusha
jmp
jle
enter
loop
call
jbe
movsb
sbb
and
push
jmp
stc
dec
lds
push
fptan
inc
push
dec
mov
dec
call
inc
mov
add
xchg
pop
stos
movsb
sbb
mov
mov
inc
mov
pop
scas
scas
pop
int3
inc
lcall
imul
jle
xchg
push
xor
cwtl
xchg
ss
imul
loopne
std
sbb
mov
adc
int
cmp
xor
sub
mov
leave
jecxz
inc
loopne
loope
inc
loopne
xorl
mov
iret
out
sbb
add
or
mov
jle
jp
das
sub
dec
fdivs
and
call
imul
cmp
jecxz
xchg
in
js
jge
out
sbb
xchg
jnp
lcall
xchg
push
sbb
push
lods
dec
sub
data16
jnp
cli
jmp
test
add
jno
cmp
aad
mov
incb
mov
xchg
push
dec
cmp
or
lds
and
adc
jno
int
adc
test
dec
adc
or
out
xchg
xor
leave
fsubl
aas
imull
xor
aaa
sub
cmp
adc
stos
movsl
cmp
sbb
outsb
iret
mov
dec
mov
or
mov
xchg
jl
sarb
jno
ljmp
cltd
add
sbb
adc
icebp
add
xor
pop
sub
mov
addr16
pop
inc
jno
rol
mov
flds
xchg
push
sub
sti
ja
fcomi
shll
es
push
pop
test
push
dec
xlat
sahf
repz
ja
mov
mov
inc
push
test
scas
adc
xchg
jmp
pusha
les
nop
iret
sub
data16
push
mov
popl
mov
hlt
inc
loope
test
mov
dec
push
dec
iret
mov
jns
push
lcall
adc
fldcw
mov
arpl
ds
adc
xor
adc
outsl
add
inc
shlb
xor
mov
imul
movl
cwtl
mov
cmp
or
mov
data16
shll
ficoms
or
add
or
dec
cld
jmp
ja
les
and
sbb
aad
sbb
cli
pop
mov
daa
xchg
inc
das
lods
push
iret
xor
sbb
sarb
dec
xchg
or
mov
loope
push
dec
sbb
mov
in
int3
ljmp
sbbb
cmp
mov
fsubl
in
insb
mov
pop
cmpsl
lretw
enter
and
push
jge
cmpsl
dec
mov
sahf
ss
xchg
fst
outsb
mov
fs
inc
push
aad
loop
inc
and
andl
mov
scas
sub
cltd
adc
in
inc
out
mov
shlb
in
mov
sarl
add
test
sbb
test
dec
and
push
xchg
adc
es
sub
mov
push
push
int3
out
and
aas
or
leave
push
outsl
inc
xchg
outsl
adc
bound
mov
or
fwait
jo
sti
imull
dec
mov
push
push
test
add
repnz
mov
loope
int3
cmc
sbb
cmp
rclb
in
arpl
push
and
les
push
insb
or
std
pop
jp
fistpl
subl
ss
adc
aas
addl
icebp
mov
xor
ljmp
xor
in
mov
mov
fistps
adc
jmp
dec
lds
inc
dec
xchg
std
ret
scas
add
cmp
popl
pop
cmp
js
pusha
push
adcb
xor
or
sbb
fdivrl
nop
repz
dec
test
dec
push
lret
mov
xchg
cmc
call
xchg
xchg
dec
sbbl
dec
cs
mov
sahf
add
xor
fwait
push
stos
dec
fsubl
push
in
or
scas
jns
std
mov
lcall
test
sbb
xchg
fwait
xor
leave
cmp
mov
lcall
inc
inc
sahf
fs
add
sub
fmul
orl
scas
fsubrl
inc
push
xor
sbb
or
nop
popf
fwait
push
mov
jge
mov
pop
pop
pop
stos
lds
sbb
stos
or
or
icebp
lods
mov
movsl
dec
mov
lock
cmp
mov
adcl
xor
ss
inc
lea
push
add
mov
cmp
ja
repnz
pop
adc
mov
in
add
xchg
adc
cmp
push
push
fldt
repnz
ljmp
xchg
mov
arpl
into
popf
or
sub
icebp
mov
out
ficomps
shll
and
je
dec
inc
movsb
adc
dec
frstor
nop
cmp
ret
fimuls
mov
sarb
test
xchg
mov
dec
ret
aam
ret
insb
out
or
sub
adc
es
xchg
jp
xor
in
fildl
mov
mov
scas
rclb
das
mov
mov
jo
jo
gs
and
sub
in
roll
add
icebp
inc
inc
clc
mov
sarl
outsl
loop
ljmp
sub
loop
or
cmp
sub
gs
int3
adc
or
jecxz
push
mov
ficoml
and
sbb
sbb
mov
adc
leave
pop
out
icebp
sub
push
imul
shr
pop
sub
jmp
jle
lods
xor
pop
adc
out
gs
js
dec
push
fistpll
xchg
cmc
mov
arpl
cld
jnp
lods
call
xchg
fcoms
scas
shll
mov
and
xchg
mov
out
push
xlat
jnp
mov
cmp
stos
xchg
jle
ficoms
xlat
icebp
aam
mov
loope
push
in
daa
mov
or
lahf
ret
inc
jl
mov
shlb
fdivrl
test
xor
xchg
cmp
mov
cltd
dec
jmp
out
push
xor
jb
idiv
mov
jo
jmp
lods
pop
fs
std
adc
sbb
pop
mov
shlb
dec
push
out
push
push
out
sbb
push
aam
aam
mov
jle
jo
jnp
in
adc
scas
out
or
mov
xchg
inc
pop
adc
cmp
add
lret
leave
mov
cmpsl
lods
and
mov
mov
out
nop
lods
mov
test
xor
gs
xchg
in
mov
aad
cltd
xlat
nop
mov
cmc
or
je
adc
std
int
frndint
loope
lret
xchg
iret
in
aaa
sub
lret
add
imul
pop
jg
fs
jge
not
or
push
or
popa
adc
hlt
in
pop
cwtl
and
aad
adc
popf
mov
rcr
pop
pop
popa
pop
mov
xchg
repz
fbstp
dec
scas
xor
mov
jnp
sbb
fdivs
inc
xor
mov
cs
xchg
int3
repz
jne
xchg
push
aaa
pop
loopne
out
inc
cmp
push
lea
xchg
dec
sub
out
sbb
lret
xor
xor
imul
les
outsl
imul
insl
loope
jge
dec
cmpsb
and
inc
aam
sub
sub
dec
xor
jns
cli
outsl
je
aam
gs
push
loopne
dec
mov
jne
repnz
mov
sbb
push
insl
sbb
loopne
sub
cmc
pop
xchg
stos
dec
ds
push
aam
cmp
je
shlb
inc
arpl
pop
test
mov
xchg
lahf
insb
lds
mov
insl
dec
inc
xchg
fistl
xchg
sbb
out
cmp
xchg
push
jmp
mov
push
and
test
dec
and
out
jle
loope
xchg
adc
sub
popf
mov
out
jno
jbe
jmp
aad
daa
push
lea
jne
add
inc
xchg
dec
push
inc
jmp
loop
roll
or
xor
or
push
call
repnz
data16
mov
push
sbb
add
pop
inc
mov
mov
add
pop
lahf
push
cmpb
call
daa
cmc
out
movhps
push
int3
ret
xchg
mov
jno
roll
hlt
test
cs
sub
repz
mov
lahf
sbb
jp
xchg
pop
imul
adc
inc
or
jnp
test
xchg
lea
ds
aad
ss
jecxz
pop
rolb
shlb
pop
jo
sbb
xor
mov
dec
or
aaa
xor
dec
sbb
jl
jae
outsb
pop
out
xor
pop
mov
or
movsb
sbb
and
cli
and
sti
popa
test
lcall
mov
mov
ljmp
orl
mov
mov
mov
push
fcmovbe
xor
outsb
xor
negb
scas
xor
inc
aad
cmp
pop
jnp
add
fnstcw
sbb
inc
mov
pusha
in
fcmovne
nop
pushf
cmpsb
inc
xchg
cli
inc
jg
insl
jecxz
das
sub
fwait
mov
sub
out
iret
jno
xchg
cld
jo
inc
icebp
movsl
ret
xchg
xchg
dec
mov
push
lcall
pop
push
icebp
dec
xor
popa
loope
sub
jle
xor
lret
jns
fistl
pop
add
and
xchg
ss
fst
pop
test
rcr
inc
stos
jo
push
jp
adc
xchg
add
mov
cmp
loope
std
loop
mov
shr
pop
mov
mov
mov
and
sbb
rcrl
xchg
mov
fiaddl
fsubs
or
andb
pop
in
pushf
xor
push
mov
cmp
push
imul
popf
cmp
cli
std
mov
mov
or
stos
mov
out
and
dec
xor
mov
pusha
mov
ret
loop
mov
addr16
xlat
xor
mov
test
inc
fsubrl
pop
xchg
out
movsb
es
dec
cwtl
movsb
das
push
mov
hlt
cmc
ja
push
ja
dec
decl
test
push
inc
or
outsb
pop
pop
or
mov
xchg
popa
aam
jne
mov
in
push
add
dec
pop
jge
lcall
movsb
jle
xor
sub
cli
lcall
jge
mov
sub
std
fisttpll
not
mov
lds
sbb
jo
out
mov
or
lods
jecxz
cmp
and
out
xchg
dec
push
int3
lods
repnz
mov
dec
cwtl
out
scas
jg
and
addr16
add
stos
jp
add
cmc
ljmp
stos
xchg
int
orb
mov
sub
inc
mov
push
pop
jb
mov
pop
cs
jge
sbb
clc
nop
jecxz
and
es
mov
pop
movsl
jnp
inc
cmpsl
mov
adc
cmp
mov
aad
imull
cltd
lahf
cmp
adcb
xor
scas
mov
ret
rcrl
xchg
push
ficompl
or
sub
sbb
adc
dec
call
int3
sub
jle
or
icebp
xor
bound
mov
lods
fwait
testl
push
xor
adc
in
sub
mov
mov
inc
loopne
pop
pop
test
xor
in
je
jl
xchg
mov
jmp
mov
and
and
lods
pop
push
xor
clc
push
imul
scas
mov
test
mov
push
mov
mov
cmp
cmp
in
inc
pop
pop
xor
mov
scas
mov
add
pop
add
xchg
jle
push
clc
hlt
cmp
data16
mov
lods
fsubl
clc
movsb
cmc
shll
jp
aaa
pusha
inc
jmp
nop
into
lret
imul
push
insb
iret
lahf
mov
add
imul
in
jg
xchg
jno
cld
mulb
adc
mov
rcrb
xor
aaa
clc
ds
mov
pop
jge
repz
arpl
fiaddl
fsubl
arpl
nop
cmpsl
cmpsl
shrb
pop
addr16
and
mov
mov
outsl
addb
mov
icebp
call
bound
xchg
mov
int3
pusha
repz
cmp
jae
sbb
or
sbb
test
push
jecxz
stos
scas
daa
mov
sbb
xchg
and
movsl
inc
out
popf
in
and
dec
int
push
sub
sbb
cmp
leave
jp
mov
sbb
out
popl
add
sbb
nop
mov
xor
and
or
or
jb
adc
jb
loopne
fsubrl
nop
xchg
repnz
add
add
mov
cli
stos
adc
push
adc
or
add
pop
sbb
mov
js
jo
mov
mov
aad
add
mov
inc
cmp
inc
in
pop
sbb
mov
pushf
jl
xchg
les
sbb
cmp
imul
fnstenv
test
mov
pop
mov
xor
test
cld
xor
mov
insl
jb
sbb
mov
xor
flds
xor
lods
add
mov
pop
cwtl
cmp
or
ja
xor
jbe
cmpb
mov
pop
mov
cmp
mov
es
jle
aad
sbb
jne
ud2
ror
fidivrs
and
cmpsb
je
lods
cmp
in
mov
cmpsb
in
arpl
loop
sbb
mov
stos
adc
imul
rcl
or
sub
shll
shll
cmp
mov
jle
pop
mov
push
test
xchg
mov
sbb
divl
pop
pop
jae
mov
fidivrl
ret
sub
dec
jg
ds
pop
enter
and
jp
push
jmp
add
pushf
mov
inc
xlat
mov
ss
cmp
mov
int3
and
cltd
add
js
mov
scas
rcrl
push
or
xchg
fwait
or
pop
repz
jbe
sbb
xchg
fdivl
jmp
nop
sub
jecxz
xchg
and
jl
mov
xchg
sub
fnstcw
sti
cmp
push
cmpsb
push
mov
insl
pop
cmpsb
pop
fbld
les
add
jnp
roll
shlb
fidivrl
and
mov
nop
mov
lods
stos
insb
mov
outsl
mov
jmp
mov
add
or
lods
aam
mov
and
jl
pop
push
in
scas
test
jno
sbb
fisttpll
push
in
push
sarb
sbb
sbb
sub
ja
scas
push
xchg
inc
in
leave
xchg
push
jae
mov
sbb
mov
and
testl
mov
inc
add
fldenv
cmp
aam
push
push
scas
sub
push
hlt
ss
ret
add
pop
shl
mov
xlat
xchg
push
das
lods
lds
pop
std
ja
jg
mov
cs
add
into
cmp
movsl
stos
push
jns
ljmp
adc
sbb
xor
lcall
sub
je
mov
mov
xchg
inc
inc
inc
pop
in
jns
aad
and
rol
xor
xor
pop
stos
in
fcmove
dec
mov
mov
add
mov
mov
xor
add
jmp
jae
mov
xchg
movsl
jecxz
pop
sbb
and
xchg
jmp
lea
jmp
bound
cli
dec
fcoml
aad
sub
dec
inc
cld
mov
push
notb
out
fsubr
mov
push
push
mulb
adc
cmp
lahf
xor
imul
loope
xchg
jns
and
xchg
cmp
or
jle
int
inc
sub
xor
movsb
inc
or
jp
and
lock
xchg
test
xchg
pop
into
mov
lcall
divl
mov
inc
das
negl
ds
lret
int
sarl
xchg
sbb
mov
xchg
stc
dec
dec
xorl
dec
inc
das
shl
push
pop
xchg
dec
jle
ret
or
cmpsl
adc
dec
out
mov
stos
lahf
inc
mov
mov
pop
cmp
and
std
leave
adc
cltd
adcl
mov
rclb
or
inc
pop
jge
cmpb
lds
out
cltd
scas
ret
cld
iret
int
clc
pop
ret
call
and
pop
push
cmp
in
cmp
lret
imul
aad
dec
and
fimuls
xor
xchg
sub
rcr
lods
jge
les
mov
daa
push
add
xchg
rorl
cmp
or
xchg
ret
loop
pop
daa
outsb
movsb
pop
pop
addr16
out
add
in
mov
jns
scas
push
pop
and
pop
movsl
pop
or
loopne
inc
popa
cwtl
mov
cmpsb
mov
mov
lret
aam
jg
sbb
std
fwait
jbe
push
pop
int
popa
lock
fcompl
out
inc
stc
gs
push
lret
lock
fabs
jmp
inc
fwait
clc
and
push
xchg
int3
ja
pop
test
push
dec
dec
cli
jbe
and
jle
inc
push
cmc
or
andl
add
push
mov
stos
sbb
inc
ficoms
inc
sbb
mov
stos
sbb
rorb
repz
mov
jle
sahf
rcrl
sub
mov
and
add
or
lds
jnp
jl
call
ljmp
cld
imul
insl
and
pop
cmp
fcompl
xor
loop
cs
jo
pusha
lock
aaa
fcmovne
in
out
push
xchg
sub
ja
inc
in
test
movsb
jp
dec
and
adc
push
mov
aaa
out
pop
add
or
mov
inc
push
inc
test
adc
xor
lcall
sahf
addr16
test
stos
loope
add
pop
je
loop
popf
iret
sbb
adc
cmp
pop
xchg
or
cmp
out
repnz
addb
sbb
cli
mov
fs
inc
into
pop
gs
xchg
sbb
lret
xor
sub
cmp
test
repz
repnz
daa
pusha
jne
mov
scas
jg
jle,pt
inc
and
call
fs
xchg
lea
jecxz
or
mov
mov
xor
in
stos
mov
insl
sub
aaa
pop
repz
out
push
in
mov
cli
adc
inc
and
fistps
out
add
ja
lcall
jae
imul
fdiv
xor
inc
dec
mov
and
jl
insl
mov
lahf
and
icebp
call
push
sbb
hlt
push
sbb
pop
in
jle
pop
add
inc
ret
mov
adc
cmc
out
les
test
mov
stc
rcr
and
xor
sbb
ja
in
inc
ss
fstpt
mov
outsl
mov
xor
shrl
sbb
sbb
test
pop
mov
shll
stos
inc
jae
push
and
lcall
push
mov
cmp
push
scas
cmp
dec
or
nop
mov
sub
push
dec
scas
jle
stc
iret
cmp
add
xchg
add
sub
leave
pop
cmp
add
push
xor
cmp
jbe
test
sub
jb
jg
nop
ljmp
mov
inc
scas
xchg
movsl
mov
aam
stos
in
cli
mov
mov
pop
inc
jmp
mov
popf
mov
test
xchg
jno
hlt
push
push
xchg
mov
xchg
fdivs
stos
xor
sub
outsl
lcall
aam
fs
xlat
jo
into
xor
xchg
sub
mov
pop
sbb
cmc
cmp
roll
xchg
xchg
xor
bnd
int3
aaa
sbb
or
addr16
xorl
inc
mov
mov
movsb
mov
xchg
mov
mov
sahf
or
imul
cmp
xor
push
insl
pop
pop
dec
or
divl
pop
pushf
xor
pop
call
jb
push
addb
jns
in
enter
ficompl
mov
popa
enter
out
xor
les
data16
mov
pop
fisubrl
stos
rcrl
icebp
insb
lods
lahf
add
icebp
jnp
out
sysret
scas
call
test
adc
movsl
daa
pop
push
bound
inc
dec
pusha
mov
andl
mov
jns
movsb
addr16
cmp
push
lahf
hlt
loope
adc
adc
sub
outsb
xor
enter
cmpsl
repnz
or
lahf
cmpsl
cmp
rol
mov
mov
xorb
add
int3
jne
jbe
add
cmpsl
decl
dec
sbb
pusha
dec
sub
jge
pop
nop
mov
fisubrs
mov
inc
stos
mov
jno
push
cwtl
ss
stc
psraw
push
nop
add
or
fadds
fcmovnu
insl
push
xchg
in
pop
inc
cmp
mov
sbbl
ja
scas
mov
aaa
lret
cmpsl
xor
inc
testb
sbb
popa
std
rclb
xor
gs
not
push
insl
movsb
xchg
mov
leave
insb
lahf
jle
pop
push
outsl
test
ss
add
pushf
outsl
mov
mov
xor
gs
aas
lods
and
aas
and
cmpsl
mov
icebp
into
pop
les
lock
std
insl
in
or
int
out
imul
notb
inc
sub
cmp
lods
sub
repnz
push
xor
mov
sub
or
add
imul
inc
xlat
cmp
xchg
push
testb
inc
and
mov
insl
std
adc
out
jnp
fistl
push
in
sti
mov
mov
inc
test
insb
xchg
rclb
pop
add
mov
sti
stos
cltd
jo
movb
cmp
mov
pop
lock
jecxz
push
dec
push
sub
int3
push
enter
jmp
push
jge
push
in
pop
orb
mov
mov
stos
adc
sti
push
popf
lret
mov
int3
fdivl
into
dec
mov
out
mov
pop
mov
pop
lahf
and
dec
sub
add
shl
fiaddl
mov
mov
scas
sbb
xor
push
aas
push
xchg
ret
pop
insl
or
sub
sti
outsl
pop
inc
stc
in
jbe
or
xchg
or
in
mov
or
xchg
leave
xchg
or
xchg
and
jg
pop
mov
jne
sub
sbb
xchg
nop
xchg
or
jnp
test
pop
out
outsb
rorl
negb
ret
pop
aaa
test
and
fiaddl
mov
je
mov
mov
pop
orb
addl
mov
sbb
jp
sub
leave
movsl
cld
les
jae
imul
or
mov
pop
aam
adc
cs
cmp
push
outsl
cltd
and
mov
mov
lret
pop
rcl
lahf
stos
mov
sbb
in
pop
sbb
cmc
bnd
mov
es
add
xlat
lods
mov
pop
sbb
int
sub
dec
in
push
jnp
sbb
scas
inc
lahf
scas
fcoml
mov
dec
aad
mov
xchg
out
pusha
add
cwtl
arpl
lds
popf
or
ljmp
in
in
jns
ret
dec
movsb
and
or
cld
pop
mov
push
dec
movsl
mov
or
add
stos
cmpsl
popa
cmp
loope
xchg
fst
add
sub
xchg
clc
ss
aad
imul
out
push
cmc
fs
out
movsb
cmpb
mov
cmp
dec
fsub
adc
jle
hlt
sbb
imul
sti
repz
imul
mov
cli
mov
pcmpgtw
sahf
in
sub
xchg
xchg
fcompl
inc
imul
xchg
outsl
pop
loope
jno
xor
jno
push
mov
jnp
mov
sbb
aas
mov
pop
sbb
fs
add
jmp
pop
xor
adc
xor
push
dec
adc
inc
cltd
icebp
xchg
inc
sub
mov
aas
or
repz
sbb
loope
dec
dec
addr16
inc
push
cmp
insb
pop
cmp
and
and
xor
mov
cmpsl
insl
cs
shll
adc
push
cmc
mov
xorl
nop
mov
lcall
das
cmp
jmp
xchg
sahf
pushf
push
sub
lds
dec
cwtl
aad
adc
mov
xchg
ljmp
cmc
push
push
dec
mov
shrb
lahf
addr16
jmp
sbb
mov
xor
cmp
les
mov
test
sahf
push
cmc
shlb
icebp
xor
inc
push
and
mov
or
mov
cmp
ja
jg
rcrl
outsl
pop
cli
sub
roll
mov
sbb
cli
mov
fsubrl
mov
sahf
repz
test
imul
adc
outsb
mov
bound
mov
mov
add
mov
repnz
mov
imul
fs
jl
insl
mov
sbb
pop
pushf
divb
dec
mov
scas
lahf
movntps
mov
push
mov
fbld
popf
movsb
push
icebp
cmp
lods
jg
in
outsb
out
add
iret
mov
add
cmc
jo
dec
xchg
call
xor
xchg
jecxz
add
sbb
adc
xor
push
mov
mov
fwait
push
gs
scas
in
push
cmc
lcall
loope
adc
lea
repnz
xor
xchg
mull
adc
push
shlb
call
jecxz
add
ss
push
imul
clc
jl
pop
add
pop
fwait
xchg
mov
pop
bound
inc
stos
or
sub
sbb
je
push
jecxz
sub
nop
adc
std
mov
sub
fidivs
xlat
test
cmp
adcb
lock
push
pop
jns
push
test
rorl
cmpsl
add
shrb
mov
xchg
jl
clc
in
cmp
add
imull
or
or
and
push
push
or
dec
or
mov
es
push
dec
aaa
cli
jo
repnz
leave
cmc
adc
cmpsb
push
pop
sbb
ret
jmp
mov
jmp
sub
xchg
cmp
subb
int3
add
ljmp
psubusw
sub
rorb
sbb
push
adc
lret
daa
daa
jae
xchg
out
mov
or
insb
push
shl
mov
movsb
nop
cltd
out
mov
dec
cld
sti
mov
cmp
mov
sub
les
lret
fsubl
fdivrl
repnz
dec
stc
call
sub
fnstsw
daa
push
ljmp
cmpsl
add
or
inc
test
or
cmc
mov
jmp
and
lret
cwtl
int
mov
xor
or
gs
in
mov
mov
sbb
push
sub
addr16
jae
ret
in
mov
sub
pop
fucomi
mov
pop
sahf
push
vprotw
aam
pop
adc
pop
cmp
push
jl
hlt
mov
lret
daa
add
sub
push
xor
insl
push
loope
sub
dec
push
dec
jle
fisubs
jo
sbb
mov
mov
dec
sub
push
or
ror
mov
adc
rcrl
mov
add
in
mov
push
mov
in
inc
in
shl
movsb
add
pushf
push
fldl
xchg
out
outsb
loop
jae
out
and
sbb
adc
inc
rorl
cld
daa
ret
jp
fcoms
push
add
lret
jl
pusha
aad
mov
jmp
fisubs
push
cmc
xorb
push
sti
imul
leave
aaa
cmpsl
comiss
sar
imul
pop
ret
mov
out
ret
mov
nop
sbb
sbb
insl
add
mov
jl
insb
cmp
adc
and
cld
pop
rorl
jne
popf
add
arpl
push
shll
movsl
xchg
push
dec
xor
push
lock
mov
jp
mov
push
xchg
lcall
mov
mov
jmp
mov
ljmp
push
cmp
test
push
or
fwait
in
decb
and
inc
sub
stos
xchg
dec
cmp
imul
and
lods
test
sbb
inc
scas
dec
out
adc
and
test
adc
dec
stc
xor
fbld
adc
cs
int3
push
add
sub
jle
repz
cltd
xor
mov
push
push
ret
jne
call
lcall
mov
popa
pop
mov
cmc
test
les
and
xchg
jecxz
test
cmp
mov
push
add
jo
stos
mov
mov
sbb
ja
addr16
jbe
mov
push
xlat
enter
cld
out
les
xor
cmc
xchg
dec
ret
pop
and
inc
fldt
mov
cmp
fs
bound
sbb
cmp
pop
push
add
push
test
cs
gs
adc
jb
sbb
cmp
xchg
cmpsb
test
ds
andb
inc
mov
mov
pusha
push
cs
mov
or
sbb
sbb
fld
adcb
and
int3
test
je
xor
cli
int3
aaa
push
cmp
hlt
cmp
es
cmpsb
mov
rcrl
cld
mov
xor
ljmp
je
scas
jg
sub
mov
lods
push
test
mov
xchg
call
rolb
or
add
mov
or
push
cli
shrl
sub
jne
std
movsb
jl
cmp
cli
push
push
test
test
mov
cld
lods
sub
popa
rolb
out
xor
fwait
testl
sarl
push
cli
push
jb
mov
and
int3
movsb
leave
shrl
std
mov
xchg
scas
cltd
and
dec
gs
fstps
call
and
cmp
test
xchg
sub
mov
call
add
mov
sbb
cwtl
fstps
js
pop
out
push
sbbb
add
xchg
div
add
leave
pop
lock
inc
jle
mov
add
pop
adc
cmp
sub
jle
pop
sub
push
jl
cltd
jmp
cmp
test
repz
jnp
pop
fidivs
out
mov
out
faddl
lods
idivl
sahf
push
jns
ror
pop
loopne
fiadds
lods
adc
xor
mov
outsl
enter
cwtl
adc
fidivl
or
lds
mov
dec
movsb
aad
mov
sub
popf
sti
orl
and
inc
adc
mov
lcall
ret
dec
andl
mov
daa
cmp
mov
add
lret
inc
xchg
pop
add
icebp
mov
std
leave
mov
int
enter
dec
cmpsl
pusha
pop
sbb
aas
roll
mov
js
add
jge
insb
popl
inc
mov
imul
shrb
dec
adc
dec
loopne
fisttpll
cmp
pop
je
fldcw
ja
daa
hlt
fnsave
cmp
adc
cmpsl
out
fwait
mov
sbb
jb
push
pop
dec
pmuludq
flds
scas
scas
xchg
sub
mov
pop
in
mov
dec
xchg
cmc
sub
repz
insb
mov
sub
mov
imul
push
cs
mov
add
jmp
jecxz
fildll
push
in
outsb
shl
lahf
outsb
js
xchg
mov
dec
and
jl
xchg
xchg
mov
mov
imul
dec
xchg
cmpsb
xchg
push
test
js
nop
sahf
xchg
pop
popf
dec
and
mov
xor
ret
cmp
hlt
jne
push
cmpsb
aam
cmp
mov
pop
xor
ror
pop
pop
mov
inc
push
mov
pop
cltd
dec
hlt
in
pusha
adc
mov
mov
les
daa
pop
mov
inc
ja
cmp
mov
xor
daa
dec
ds
in
mov
aas
jecxz
notb
out
loope
and
jmp
mov
outsb
or
rcrl
fwait
jmp
outsb
lock
jp
hlt
dec
cmp
push
negl
mov
das
divb
js
adc
inc
lahf
inc
out
imul
pop
inc
mov
pop
movl
test
add
adc
bound
push
push
cmc
mov
xchg
lret
repnz
jge
mov
push
popf
pop
repnz
mov
jb
out
or
sub
inc
lock
sub
mov
inc
push
sbb
lods
push
lahf
pop
addl
jbe
adc
imul
jno
jbe
andl
lods
push
dec
pop
nop
sar
outsl
jbe
pop
sub
mov
rcl
jg
pop
out
mov
push
inc
adc
xlat
outsb
add
mov
enter
push
mov
loopne
inc
cmpsl
loop
mov
cmpsb
pop
cld
sub
pop
in
scas
xchg
in
mov
xchg
outsb
cld
xchg
xchg
xchg
xor
rclb
mov
pop
pop
mov
push
sub
push
push
sub
or
cwtl
shrb
rcr
out
jns
js
add
dec
hlt
mov
in
int
or
mov
cmc
mov
dec
jle
xor
add
mov
dec
sbb
mov
sub
and
outsb
test
or
inc
ds
sub
xchg
sub
in
xchg
es
insb
add
mov
jnp
js
and
inc
mov
or
jle
jno
sbbb
int3
outsl
pop
xchg
dec
test
sahf
push
dec
adc
mov
pop
mov
in
mov
jo
inc
jmp
mov
and
int3
ljmp
fcoms
pop
popl
mov
and
ret
adc
out
push
pop
inc
xor
lret
push
cmpsb
addb
mov
adc
inc
dec
xor
insb
in
in
cmpsb
xchg
cmp
push
ss
mov
xchg
mov
cs
pop
rolb
clc
leave
push
xor
sub
fsubrs
pop
inc
xor
jmp
insl
stc
adc
add
inc
jle
enter
dec
add
mov
imul
in
lret
lea
test
pop
in
mov
mov
test
call
les
jecxz
or
cmp
rorl
jbe
push
adc
insl
lods
push
sahf
push
jmp
adc
inc
dec
cmp
mov
lea
xor
fwait
sbbl
cmp
rorl
cmp
mov
ds
mov
mov
ss
movsb
jo
sub
cpuid
insb
mov
mov
xor
pop
xchg
cmp
adc
ljmp
adc
jnp
cwtl
inc
push
daa
cld
xchg
jo
xchg
lahf
ficoml
jns
sbb
fdivrl
jmp
cmc
les
rcrb
adc
fcoms
js
inc
pusha
sbb
mov
adc
add
sub
jo
push
sbb
repnz
pop
dec
pop
clc
push
int
xor
pop
or
push
pop
clc
push
xchg
cmpsl
or
adc
test
jne
dec
iret
inc
jmp
jns
jnp
adc
cmp
cmc
sub
push
mov
or
pop
sub
orl
mov
jno
sub
xchg
jne
add
leave
jbe
or
cmpb
pop
cld
ljmp
jns
pushf
test
inc
rclb
out
push
mov
cmp
icebp
je
insl
mov
in
and
xchg
flds
mov
std
sub
insl
clc
loope
mov
sub
mov
pop
xor
aas
mov
pop
and
mov
jno,pt
fstp
mov
mov
pop
fsub
cmp
mov
cmc
lret
iret
fisubs
out
pop
push
pop
cvtdq2ps
adc
sbb
push
cmp
fnstcw
call
aas
nop
jle
mov
cmp
jnp
lret
in
mov
in
lds
arpl
hlt
push
sub
and
mov
ret
inc
and
mov
or
cli
sbb
daa
scas
repz
scas
push
mov
lahf
scas
fs
jle
pop
push
push
add
or
bound
jno
fisttpll
inc
dec
orl
inc
xchg
add
nop
repnz
mov
jl
jb
inc
fimull
pop
fnsave
xlat
pop
dec
enter
loope
mov
pop
xor
xchg
sub
aas
shll
jmp
nop
inc
pop
sbb
mov
dec
sbb
fisttpll
in
push
mov
lahf
xor
adc
xor
jecxz
add
pushl
mov
and
sbb
call
adc
int3
aas
scas
cmpsb
fistps
lods
fsubp
scas
mov
jge
loopne
jp
sbb
inc
jb
mov
ffree
push
and
cmp
mov
jbe
sbb
call
out
fbld
or
jge
sub
icebp
push
xor
lods
popa
xchg
inc
hlt
aas
nop
hlt
pop
mov
fstl
daa
inc
lret
inc
in
rcll
hlt
enter
inc
lahf
cmp
sbb
mov
fisubrs
adc
imul
push
loop
dec
inc
gs
gs
jno
or
loop
icebp
in
mov
xchg
mov
pusha
data16
adc
imul
lahf
in
rcr
repnz
in
popf
lea
xlat
cld
mov
xchg
js
jb
cmp
dec
data16
push
cmp
jge
dec
incb
in
outsl
xchg
ds
ficompl
mov
inc
rolb
jecxz
in
inc
pop
daa
int3
or
out
stos
das
jmp
xchg
xlat
lahf
jge
lock
pop
adc
push
insb
lea
push
or
push
lds
jmp
mov
xor
sbb
fwait
push
xor
push
aam
pop
shlb
inc
dec
cmp
mov
lret
ret
cli
repz
cmp
push
adc
lret
jmp
jns
add
imul
out
aaa
fcmovbe
daa
dec
pop
cmp
mov
dec
shr
call
mov
ss
push
bound
nop
loop
push
dec
xchg
fisttps
inc
cmpsl
inc
jmp
aam
hlt
gs
mov
jge
xchg
jge
inc
mov
mov
loop
inc
xchg
push
shll
xor
dec
loope
sbb
loopne
and
fdivrl
push
lahf
test
iret
or
lcall
ljmp
jb
fisttps
fcomip
inc
pusha
es
xor
std
sbb
sar
jb
jg
mov
pop
sahf
ds
mov
imul
stos
ret
cmp
loope
pop
xor
in
cmc
xor
xchg
adc
push
lcall
xchg
jecxz
sub
jle
cltd
mov
aaa
cmp
lods
xor
jecxz
pusha
sub
xchg
sbbb
jecxz
lahf
lods
mov
adc
loopne
and
dec
movsl
mov
xor
or
outsb
xlat
decb
frstor
icebp
xchg
outsl
cmp
std
sti
repz
insl
jg
push
fldl
mov
sbb
stos
clc
imul
adc
lods
mov
stos
divl
mov
xchg
ret
enter
pop
inc
aaa
lret
inc
mov
push
cmp
cmp
test
stos
pop
and
adc
and
pop
aas
jle
push
pop
icebp
hlt
xchg
dec
daa
mov
adc
lock
stos
cmp
ja
mov
imul
adc
notl
inc
or
mov
and
lods
push
adc
testl
add
mov
dec
cltd
xchg
sahf
loop
fs
fs
pop
ss
in
aaa
pop
sahf
pop
mov
clc
mov
mov
xor
scas
or
lds
xor
adc
mov
sbbl
inc
add
loope
shr
cmp
ss
pushf
popf
push
mov
ljmp
popa
aad
push
out
xor
pop
or
adc
int3
cmpsb
les
dec
pop
and
push
cld
lods
scas
adc
into
cmp
std
sti
push
pop
xchg
fcmovbe
test
dec
jmp
xlat
mov
xor
sbb
add
imul
stos
pop
ffreep
cmc
push
lock
mov
cmp
movsl
pusha
add
mov
repz
xchg
out
cli
imul
add
lahf
adc
fiaddl
mov
mov
xchg
sub
mov
scas
and
mov
imul
mov
mov
adc
adc
pop
out
imul
xor
xchg
popa
mov
pop
mull
cmp
out
test
and
iret
out
pusha
inc
fs
push
mov
pop
push
dec
pop
sbb
daa
aam
jg
addb
xor
es
nop
pop
adc
mov
lea
ds
xor
divb
aad
popa
dec
sahf
and
inc
cmp
cmc
test
int
and
incb
repz
inc
mov
cmp
mov
cmc
fimuls
ja
inc
jl
rolb
orl
xchg
push
mov
dec
test
aaa
cli
xor
enter
movsb
mov
ja
stos
push
sahf
mov
aaa
arpl
cli
jp
xor
ja
inc
sbb
mov
and
mov
imul
push
jmp
shl
add
xor
adc
scas
std
add
out
cs
xchg
test
xchg
div
xchg
inc
pop
jmp
inc
stos
and
fisubs
loope
inc
xchg
xchg
inc
cmp
aaa
push
push
sbb
lock
fmuls
ret
sbb
ss
mov
lret
sub
jne
push
fdiv
xchg
ljmp
imul
push
jo
je
push
cmpb
aam
or
iret
dec
popa
mov
sub
fprem1
xchg
shll
add
cmp
rclb
push
sub
test
lcall
shrl
or
inc
out
or
pushf
inc
std
cmp
xor
adc
dec
sahf
xlat
movsb
push
cmp
fwait
out
repz
outsl
xchg
dec
js
loopne
movsb
pushf
sub
and
fmull
test
jns
inc
adc
pop
jecxz
push
arpl
add
xor
cltd
jge
daa
jbe
cmp
int
popf
add
cmpsb
inc
out
enter
mov
ja
test
pop
fdivrp
sbb
or
ja
add
nop
xor
xchg
jl
in
jge
inc
mov
and
repnz
and
loop
mov
adcl
cli
clc
hlt
and
mov
mov
aaa
not
sbb
movsl
mov
jmp
inc
lds
adc
sub
sub
push
aam
or
movsb
dec
mov
sub
push
push
movsb
jnp
jno
mov
jmp
pop
push
movsl
adc
jbe
jg
or
scas
sub
inc
aam
filds
cmp
jecxz
mov
jbe
aas
mov
push
sahf
filds
std
pop
push
push
sar
add
popl
and
clc
mov
mov
test
xlat
jge
scas
xor
cmp
mov
shlb
sbb
and
ret
and
data16
push
jmp
xor
sub
jle
sub
enter
pop
sub
and
test
inc
add
enter
icebp
test
xchg
pop
cmpsb
rcrb
les
int3
cltd
or
and
lcall
or
xchg
jns
mov
addb
or
push
push
clc
xor
mov
fdiv
mov
jo
mov
pop
mov
inc
xor
loopne
cli
jp
adc
in
in
daa
mov
in
insl
xor
or
loop
push
xchg
stos
inc
bound
push
jge
jne
loope
loope
loope
ja
jge
add
push
imul
mov
inc
mov
dec
xor
fdiv
sbb
and
or
out
or
push
mov
sahf
js
cmp
and
cmpl
mov
xchg
jb
sbb
jne
mov
sbb
jecxz
mov
mov
aam
ret
shrb
jge
shll
jg
sub
and
lret
push
push
mov
mov
cmp
jbe
cs
xor
aam
adc
out
mov
mov
lea
lahf
loopne
aad
sahf
adc
dec
sub
pushf
popa
cmp
inc
js
push
in
addr16
into
ja
ds
icebp
testl
cmpsl
ja
cmp
jl
sti
jne
cmpl
arpl
dec
push
mov
icebp
mov
mov
imul
cmp
sub
push
inc
and
xor
push
mov
push
arpl
shll
test
nop
rcll
jae
repnz
push
push
fdivl
adc
lret
jp
sbb
adc
xor
into
fsubl
pop
test
push
mov
das
test
jb
mov
add
jecxz
push
gs
and
and
mov
cld
cmpsl
cmpsl
or
xchg
cmp
jl
sbb
hlt
mov
call
jg
push
inc
xchg
in
arpl
mov
and
dec
sarl
xlat
sub
adc
fdiv
inc
jecxz
imul
dec
cmp
jbe
xchg
stos
cmp
mov
dec
or
lcall
xor
ja
xchg
mov
sub
mov
rcrb
pop
pcmpgtd
mov
push
test
in
in
sbb
inc
add
and
sub
lcall
lods
cmp
cmp
inc
push
jg
fstpt
in
test
and
pushf
aam
sbb
dec
testl
push
pop
push
gs
push
xchg
adc
cmp
xor
add
adc
xor
xor
xor
jmp
pop
push
mov
aam
imul
sahf
hlt
push
jmp
bound
push
cmpsl
pop
lds
test
dec
aas
pop
mov
lds
lods
mov
out
mov
outsb
mov
int3
mov
cmp
cmp
mov
out
and
into
addr16
nop
js
scas
dec
jecxz
jns
in
jnp
push
push
js
mov
mov
sbbb
mov
ror
test
pop
into
mov
leave
jmp
cmp
xchg
sbb
sub
inc
cmpsb
sbb
jbe
adc
cli
repz
andb
jl
jecxz
stos
xorl
std
pop
pop
sbb
push
andb
xchg
push
cmpsb
push
call
dec
mov
dec
ret
imul
movb
outsl
jns
jb
and
mov
dec
lods
jp
andb
sub
testl
push
lret
mov
rolb
out
push
scas
push
es
cltd
sbb
and
or
cmpsb
jae
xchg
xor
sub
push
adc
mov
mov
sbb
push
jp
loope
dec
stos
xchg
push
xchg
bound
arpl
insl
lea
mov
popa
popf
lods
jnp
popf
pop
push
pushl
pop
je
test
inc
xor
pop
jecxz
or
inc
mov
sbb
adc
daa
jae
jmp
ret
lods
inc
sub
scas
mov
lahf
mov
push
xlat
arpl
roll
jb
cmp
cmc
sbb
and
leave
pop
sub
inc
cltd
push
push
xchg
mov
mov
iret
pop
cmp
ss
aas
mov
xchg
fnstcw
dec
sub
outsb
mov
pop
jmp
or
sbb
adc
cltd
aad
jnp
mov
imul
icebp
and
mov
xor
out
movsb
in
loope
loope
cli
pop
icebp
mov
test
cmp
ljmp
pop
inc
cmp
fldl
mov
inc
andl
mov
pop
jp
dec
jecxz
int3
pop
int3
push
sub
cwtl
xchg
leave
pop
fs
rorb
insb
lcall
or
cs
jne
sti
inc
cmp
clc
inc
scas
xchg
pushf
jecxz
sbb
pusha
les
push
push
repz
pop
mov
mov
xchg
push
xchg
repnz
jno
das
cld
fists
sbb
or
jmp
addr16
fists
push
inc
dec
sbb
mov
jbe
push
nop
add
lcall
mov
mov
sbb
pushf
cmc
inc
pop
push
inc
lods
mov
imul
inc
data16
in
es
mov
dec
icebp
ret
popf
scas
push
add
add
mov
dec
sbb
ret
sub
roll
push
pop
iret
popf
lea
inc
pop
add
jbe
gs
cmpsb
jl
ret
sbb
add
in
jp
gs
rolb
pop
inc
data16
fst
fsubp
xor
pop
shll
xor
xor
outsb
adc
sub
stos
mov
loope
cli
and
imul
adc
rol
loope
fwait
ss
movsb
arpl
cmp
sbb
out
mov
andb
add
mov
out
cmp
hlt
aas
iret
mov
repz
das
inc
paddq
xor
lds
jo
bound
xor
stos
std
hlt
cmp
fucomip
cli
lds
shrl
int
js
out
add
orb
add
sbb
push
shrl
lret
stos
mov
cli
or
clc
push
mov
cwtl
arpl
icebp
mov
adc
lods
jge
inc
mov
adc
and
sbb
test
std
fldl
das
lods
shrb
add
inc
mov
popf
cwtl
jo
xor
sbb
mov
cmc
xchg
testl
add
push
adc
out
push
imul
aaa
sub
addb
into
cwtl
jno
cmp
sub
es
and
cli
pop
jp
cwtl
sbb
arpl
or
sub
rcrb
in
xchg
dec
shlb
pop
mov
lods
or
out
push
aas
mov
subl
xchg
sub
and
imul
ret
sti
inc
scas
push
inc
push
xlat
mov
in
int3
lcall
push
bound
lret
pavgb
in
insb
push
jle
push
jl
and
movsl
cmpsl
jns
cmp
mov
fists
or
ret
adc
nop
je
jne
jp
push
dec
and
pusha
idivb
xor
pop
outsb
in
mov
add
xchg
inc
cmp
fnstsw
int3
movsl
jno
push
jns
sub
es
sti
and
inc
cmovge
lods
fdivl
sbb
ror
mov
sarl
je
jge
icebp
adc
lret
adc
ljmp
and
xchg
cmp
aad
jp
inc
incb
cmp
mov
push
test
sub
push
orl
cmp
pop
test
cltd
movsb
ja
fcomps
loope
cli
xlat
xchg
loop
and
sub
jl
test
push
in
lret
push
test
jmp
fcmovnu
mov
jnp
stc
loopne
xor
inc
jecxz
push
and
scas
rolb
mov
cmp
and
mov
cmp
popa
cli
mov
xor
lods
lods
cmp
push
pushf
mov
dec
repz
ljmp
lahf
stos
mov
or
mov
mov
sahf
push
mov
movsb
and
arpl
cmp
jg
inc
sbb
out
cli
fmuls
jae
movsb
stos
aaa
imul
je
ds
insl
sbb
xchg
add
xchg
lods
push
fcomps
and
fmull
jle
xchg
sbb
push
or
cmp
testl
sbb
shlb
dec
ljmp
scas
and
dec
mov
push
cltd
popl
jo
and
push
int3
neg
cltd
ljmp
dec
rorl
lock
inc
rcrb
outsb
or
jecxz
adc
out
push
jle
sbb
or
add
ficomps
sti
or
push
test
test
leave
adc
and
mov
daa
movsb
sub
bound
fsubs
out
mov
cwtl
scas
or
dec
pop
mov
mov
jae
clc
mov
js
jg
popa
js
adc
out
fstpt
cmp
scas
inc
and
cmpsl
test
mov
mov
cmp
mov
adc
aam
inc
lahf
push
inc
xchg
jl
daa
mov
scas
or
jne
and
scas
xchg
decl
mov
push
aad
cmpsl
out
pop
cmp
lahf
sub
mov
in
mov
testl
sti
xchg
shll
ret
loopne
sub
ficoms
mov
mov
or
xor
pusha
sub
js
mov
leave
aas
ret
out
gs
cs
les
pop
out
sub
inc
data16
sub
xchg
icebp
lret
push
sbb
les
jmp
inc
sti
popf
and
and
mov
arpl
inc
jns
sub
sbbb
pop
repnz
sbb
cwtl
addr16
xchg
xchg
add
cmp
adc
jns
out
xchg
ret
dec
sbb
lahf
dec
and
movsb
cwtl
jmp
lds
xor
int
sbb
out
das
test
popw
mov
addr16
jae
fistps
rol
outsb
insb
xor
aam
xchg
and
shll
imul
fmuls
and
mov
fldt
cwtl
sub
mov
es
mov
or
mov
inc
pop
push
sub
ljmp
sbb
mov
dec
and
xchg
hlt
xchg
mov
pop
mov
mov
cli
mov
cmp
mov
inc
adc
jge
fwait
xchg
jg
sbb
es
outsb
push
fs
xchg
cli
xor
push
adc
es
pop
test
into
inc
mov
mov
xchg
popa
mov
push
jno
pop
andb
nop
mov
adc
aam
dec
fstpt
jno
repnz
imul
cmp
int3
push
ss
pop
shll
pusha
adc
push
popf
add
add
xchg
mov
cmp
sub
push
dec
adc
push
xor
out
adcl
mov
js
xchg
push
or
cltd
jbe
dec
lahf
mov
mov
sub
xchg
dec
pusha
shll
andl
push
mov
xchg
push
mov
or
or
push
jo
repz
repnz
rolb
adc
sbb
mov
cmp
jns
cmp
mov
test
clc
mov
mov
jb
loope
shlb
push
xchg
push
mov
adc
orb
xor
inc
mov
cmpl
rcl
xor
mov
movsb
mov
sbb
js
push
push
and
dec
mov
faddl
iret
mov
inc
mov
push
outsl
fwait
test
mov
xchg
mov
push
aas
ret
and
testb
inc
and
jge
push
dec
mov
in
xor
cli
rol
cli
rolb
add
inc
sub
lahf
cmpsb
int3
dec
and
ds
xor
jg
jg
jo
fimull
xchg
call
loopne
mov
out
pop
adc
push
sbb
add
sub
dec
shll
rcr
es
xlat
push
sbb
outsb
js
arpl
sbb
xchg
mov
jno
pop
cmc
in
mov
hlt
imull
aaa
dec
out
mov
add
incl
leave
out
pusha
repnz
adc
int3
mov
cli
push
scas
daa
insb
popf
inc
add
add
lods
mov
dec
add
lea
int3
mov
sub
cmpsb
out
cmp
mov
rorl
in
aam
sub
sbb
sub
cmpsl
imul
jl
jg
mov
ljmp
sub
and
in
out
dec
inc
je
cli
pop
lods
sub
push
fsubrs
out
add
jnp
inc
push
dec
iret
push
out
pushf
in
fidivrs
mov
pushf
lret
jno
ljmp
adc
pop
push
xor
xor
xchg
xchg
mov
mov
pop
dec
push
cmpsl
popa
shlb
icebp
notb
fmull
xor
mov
ljmp
mov
lds
repz
out
das
nop
loop
dec
mov
push
add
scas
jp
and
mov
cmpsl
rcrb
es
cmp
dec
pop
lds
pop
sbb
and
out
cld
mov
shld
jno
ss
aaa
xor
jle
lock
jecxz
dec
jnp
cmp
jbe
mov
add
xchg
cmc
adc
and
ljmp
and
pop
push
pop
shll
push
mov
lock
pop
push
push
lret
fisubl
incl
jp
or
pop
cmpsb
push
sbb
mov
test
sbb
push
or
or
mov
xchg
xor
mov
sub
cmc
aam
adc
mov
ret
sbb
das
cltd
mov
outsl
lret
sbb
cltd
sbb
dec
stos
sbb
iret
sbb
mov
push
call
inc
xchg
pop
jmp
insl
push
sbb
xchg
fisttpll
lret
and
push
cmp
out
jbe
adc
adc
fucomip
xchg
mov
shrb
sbb
mov
xor
inc
xchg
fildl
adc
add
push
and
jae
je
add
cmc
mov
movsb
fiadds
xor
jo
test
ds
push
xor
mov
movl
ficomps
insl
sub
lea
pop
xchg
jb
subb
ret
mov
push
repnz
das
mov
andl
cmpb
jno
cwtl
scas
jle
cwtl
test
adc
gs
rcrb
pop
int
int
ret
add
add
loopne
ss
lods
pop
pop
call
fadds
pop
inc
fisubrs
int
pop
and
mov
int
jae
mov
inc
mov
xchg
pop
insl
adc
arpl
cmp
popa
mov
sub
pusha
cmp
push
cmpb
mov
mov
pop
xchg
mov
or
mov
cltd
add
sub
andnps
lea
and
push
mov
inc
nop
jns
in
adc
mov
mov
push
inc
decl
aas
cmp
sbb
in
sbb
jl
or
test
xchg
dec
stc
fsubrs
and
imul
xchg
arpl
pop
push
or
loope
inc
dec
dec
fwait
cli
dec
je
clc
xor
std
xor
cmp
sub
cmp
inc
dec
bound
mov
fdivrp
adc
js
lods
ljmp
aaa
sub
lock
insb
xchg
xchg
mov
mov
mov
arpl
adc
xchg
lret
push
pop
stc
arpl
rcrb
sbb
jg
push
sbb
dec
jo
into
aam
int
inc
sbb
out
push
mov
sbbb
add
jne
xchg
xchg
or
test
movb
sbb
pusha
mov
int3
mov
mov
int3
mov
mov
jnp
and
fiadds
cmp
stos
lcall
inc
push
xchg
outsb
sbbb
add
mov
clc
and
jo
dec
test
dec
jne
repnz
fmull
pusha
xor
xchg
xchg
idivb
popf
pop
cs
dec
inc
or
pop
test
and
les
ret
push
leave
jbe
or
or
icebp
push
mov
mov
movsb
mov
lds
into
dec
scas
jle
jmp
lret
cmp
push
or
fldt
push
push
insb
xchg
xor
cmp
gs
out
dec
gs
xchg
pop
rcr
cmp
insl
mov
test
ret
dec
mov
mov
pop
sub
fnstsw
mov
cltd
jbe
hlt
daa
mov
or
push
jno
test
xor
mov
sbb
jge,pt
ss
jle
and
idivl
sub
push
xchg
xor
dec
sbb
in
xor
fstps
aas
inc
jbe
fidivs
fisttps
sti
mov
sub
xorb
fldcw
inc
xchg
out
jge
sbb
jle
inc
sub
mov
mov
dec
sbb
push
lret
mov
adc
mov
push
in
paddusw
mov
cwtl
push
nop
divb
dec
fsubrs
outsl
aaa
pop
mov
dec
sbb
stos
jns
das
popf
add
mov
ljmp
add
mov
in
incl
inc
pop
test
and
in
inc
nop
mov
addl
and
cmp
cmp
daa
pop
mov
and
cs
shl
push
mov
jmp
out
mov
lods
int
arpl
scas
add
cli
aas
lcall
scas
add
icebp
sub
jecxz
stos
stos
repz
mov
mov
fistpll
mov
test
pop
push
xchg
mov
adc
fwait
xchg
pop
mov
sete
jae
leave
sbbb
push
cs
lea
sti
sbb
stc
call
xchg
mov
movsb
insl
js
mov
jne
add
imul
adc
cmpsb
shr
xorb
cs
add
cmp
loop
lock
pop
jmp
cmp
push
xchg
pop
jb
pushf
inc
stos
lock
test
imulb
cltd
enter
pop
call
bound
pop
mov
andl
in
push
aam
mov
xchg
aas
pop
scas
sahf
fiadds
xchg
pusha
sub
and
flds
mov
test
sub
in
faddl
sub
sub
and
mov
jno
int
mov
js
dec
shrb
cmc
pop
movsb
push
pop
lcall
movsl
enter
pop
repnz
sbb
cmpsl
insl
and
xchg
into
push
inc
sub
int
mov
xchg
xchg
ss
mov
mov
roll
mov
test
jge
adcb
pusha
adc
inc
test
add
lcall
rorl
cmp
fwait
pusha
sbb
int
or
push
mov
mov
push
int
cmp
movsl
mov
fcmovnb
and
xchg
sahf
mov
xchg
faddl
mov
and
or
mov
mov
push
cmpsl
dec
xorb
and
ss
sbb
adc
jne
hlt
mov
in
call
dec
idivb
fsubrs
sbb
ss
out
lret
addr16
out
in
jp
sub
xor
push
ja
add
lret
xchg
mov
sti
outsl
sub
in
repz
fists
faddl
push
pop
xchg
pop
call
mov
aad
pop
test
subl
lds
jle
fsubrl
xchg
xor
icebp
sti
aam
loop
mov
call
and
jecxz
je
sti
push
addb
data16
clc
mov
mov
xor
ds
flds
and
mov
ja
or
clc
cltd
sub
repz
fadd
call
sbb
cmp
and
fildl
nop
icebp
cltd
or
cwtl
int3
in
push
aas
pop
fcom
shrl
mov
mov
pop
push
rolb
push
cmp
sub
fmul
test
mov
adc
mov
mov
aas
push
stos
or
push
inc
dec
outsb
lret
es
pop
ljmp
dec
cltd
xlat
out
fsubl
jne
jbe
adc
jno
shlb
jnp
ja
jmp
xor
sbb
loope
push
and
cwtl
in
inc
roll
ds
inc
mov
jne
cmp
adcb
sub
sbb
inc
repnz
xchg
xor
mov
in
decl
cmc
mov
mov
or
adc
nop
inc
sub
imul
mov
iret
mov
inc
iret
push
and
xlat
ja
pop
pop
pop
push
inc
mov
add
pop
imul
arpl
push
mov
out
sahf
sub
xor
xor
or
shlb
cmp
mov
dec
jp
pop
les
jp
in
popf
cmp
sub
aam
mov
jl
imul
xor
cwtl
pop
push
dec
sahf
xchg
jnp
mov
mov
or
adc
inc
stc
das
into
mov
into
push
cmc
pop
jmp
shlb
jmp
pop
test
push
xchg
inc
jne
add
adc
jae
es
add
movsb
cltd
pop
xor
mull
shrb
push
pop
orb
shrl
lds
xchg
jbe
push
cmpsb
push
int3
pusha
mov
jl
cmc
cmc
in
add
cmp
cmp
and
xchg
lcall
mov
cmp
stc
mov
mov
or
inc
ficoms
loopne
scas
test
rcl
repz
sahf
lcall
ss
xchg
push
cmp
sbbb
pushf
jmp
dec
mov
es
insl
and
out
jl
sbb
fcmovnb
jne
cmpb
insb
nop
orb
xchg
imul
movsl
in
pusha
mov
clc
pushf
addr16
decl
xlat
leave
pop
add
lahf
outsl
mov
loop
test
mov
cmpb
ljmp
cmpb
shlb
or
and
mov
ret
dec
int3
push
jmp
aaa
xlat
leave
gs
test
push
aad
into
add
ss
pop
dec
dec
mov
lods
sbb
rclb
adc
test
inc
xor
loopne
aad
mov
adc
jge
cmpsl
sbb
ja
jmp
xor
outsl
push
xor
insl
fldl
xchg
ret
nop
jno
into
adc
mov
xor
ds
jae
daa
jbe
and
ret
push
adcb
ljmp
push
push
das
outsb
rcrl
test
jnp
mov
arpl
mov
push
test
or
dec
cmpsb
jmp
aad
sbb
loope
sbb
cltd
mov
aad
pop
cltd
jmp
cmpb
out
les
adc
enter
inc
pusha
inc
movsl
ret
imul
mov
loope
in
jecxz
jg
and
into
pop
and
xorb
testb
mov
dec
lock
lea
scas
or
les
aam
mov
es
int3
stc
insl
lret
clc
lahf
cmp
dec
xor
sbb
cmpb
dec
push
dec
jns
test
adc
pop
mov
cmp
xlat
mov
dec
lret
popl
out
jp
mov
inc
roll
into
outsl
lcall
cmpsb
lret
sar
pop
scas
imul
nop
iret
push
sbb
inc
sbb
mov
dec
mov
shl
insl
jge
pop
lret
push
dec
shrl
mov
inc
xor
jp
cmc
sbb
outsb
out
enter
push
dec
and
idiv
adc
es
lret
sub
xor
pop
mov
fildll
shl
adc
xchg
jp
data16
shll
mov
sub
sbb
shlb
mov
mov
adc
test
xor
fidivrl
mov
hlt
cs
data16
pop
add
push
stc
les
fisttpl
mov
dec
and
xchg
scas
int
cs
dec
loope
xchg
dec
jl
adc
pop
subl
in
mov
data16
cli
adc
ss
outsb
xchg
cmpsb
jmp
add
pop
jl
shlb
or
enter
daa
and
lock
ds
dec
xor
and
data16
fwait
push
stc
adc
movsb
in
sub
call
and
std
cmp
lret
pop
mov
pop
clc
fistps
adc
dec
dec
jns
roll
xchg
or
add
stc
add
sub
ret
push
dec
pop
jne
mov
mov
ss
jl
or
jmp
xor
sarl
imull
addr16
xor
lret
jl
mov
enter
lret
dec
fwait
jne
stos
xchg
pop
sahf
fists
mov
loopne
inc
mov
addr16
popf
xor
or
aam
iret
mov
jbe
cltd
jno
sub
inc
int
lds
fs
mov
push
mov
enter
mov
xchg
lret
sti
pop
cmp
add
xorb
mov
mov
test
pop
push
in
inc
sti
fcmovbe
jp
lahf
sbb
pop
call
sub
or
gs
fadd
dec
repz
xchg
mov
cwtl
mov
mov
or
mov
xchg
leave
into
outsl
in
push
add
jle
lcallw
or
cmp
sub
imul
js
sbb
lock
dec
jae
sarl
xor
in
add
push
push
cs
insb
mov
fimull
hlt
mov
aas
addr16
jbe
push
ljmp
movsb
hlt
mov
jbe
loop
sub
push
or
mov
push
sti
sti
int3
xchg
les
leave
call
call
into
xchg
and
hlt
js
lret
mov
loopne
xor
scas
scas
fadd
leave
mov
mov
inc
or
pusha
lock
pop
fsubrp
add
cmpsb
sub
into
imul
in
mov
pop
aad
xchg
mov
pop
lahf
inc
pop
stos
mov
mov
push
and
sbb
bound
outsb
mov
sub
iret
outsb
sbb
cmp
xchg
gs
roll
stc
jae
cmp
test
rorb
xchg
pushf
imul
adc
fidivl
bound
mov
cmp
push
inc
inc
jno
fnstcw
dec
xlat
adc
jl
mov
outsl
jg
push
nop
movsb
and
adc
xchg
nop
stc
dec
fistl
std
add
mov
movsb
mov
jp
idivb
and
jge
add
out
lea
fwait
mov
call
test
jg
lahf
jnp
pusha
repnz
outsl
push
out
cmpsb
fnstsw
sti
sahf
dec
add
fs
dec
dec
mov
sti
call
sarl
out
out
lods
jg
lcall
mov
sahf
shlb
mov
mov
sub
in
push
fldcw
push
push
add
ljmp
inc
sub
add
out
fcmovne
sub
pop
rcr
adc
xor
xor
dec
out
cmpsl
sub
xor
rorl
fistl
fistl
sbb
xor
and
dec
loopne
fsubrl
ret
incl
xor
jbe
push
xchg
orl
je
out
mov
addr16
mov
push
jecxz
xor
mov
mov
push
loop
rcl
jge
adc
pushf
mov
adc
das
fldt
sub
movsl
rorb
jmp
and
inc
add
sub
fwait
mov
and
arpl
in
mov
jnp
imul
cmp
add
jnp
fadds
jnp
sbb
mov
movsb
mov
insl
imul
push
sbb
jl
pushf
lcall
daa
push
arpl
vmovups
jns
aam
vpmacswd
std
xchg
mov
push
cltd
sub
into
ljmp
imul
cmp
fs
add
jl
rclb
mov
mov
mov
insl
or
xchg
and
sbb
xor
int3
mov
mov
push
sbb
notl
sub
out
xchg
es
pop
in
lcall
xchg
test
jnp
xchg
sahf
lret
call
ljmp
sbb
push
pop
xor
lds
orl
xchg
mov
lods
push
mov
or
or
xchg
sarl
adcl
pop
xchg
push
lahf
cld
sbb
outsl
out
sub
mov
int
push
in
sub
in
xchg
adc
outsl
mov
hlt
cmpsl
pop
adc
test
icebp
sti
pop
xchg
add
aaa
enter
push
cmp
or
jb
mov
insl
cmp
pop
pop
push
mov
cmp
outsb
jg
test
or
mov
out
cld
outsl
test
adc
cld
sahf
cmp
lcall
add
shlb
xor
dec
sub
adc
cmp
xor
mov
fisttps
jne
xor
test
lahf
daa
stos
adc
jp
and
jge
sbbl
jne
or
xor
test
stos
adc
dec
mov
pop
fwait
add
insb
mov
add
dec
push
jb
jecxz
pop
js
inc
adc
ja
dec
test
aad
in
mov
lock
sahf
xlat
scas
jp
aam
scas
lcall
and
sub
in
adc
mov
mov
fs
and
out
cmpsl
in
push
mov
xor
icebp
fbstp
and
pop
popf
idivl
cmpsl
js
push
lret
mov
dec
jo
in
or
pop
cmc
dec
cmp
push
cmp
pushf
call
dec
fisubs
mov
lds
insl
xor
inc
inc
es
in
mov
push
jne
and
cmpb
mov
aas
mov
dec
out
das
out
xor
out
out
fcoms
rclb
xchg
lods
mov
aad
cwtl
lcall
aad
popa
es
sti
and
aas
push
adc
roll
jno,pn
jge
leave
std
inc
mov
push
rcrl
rol
cli
dec
sub
enter
jns
pusha
ss
int
in
jg
sub
cwtl
or
push
faddp
lcall
jae
mov
sbb
js
test
mov
sahf
inc
xchg
push
mov
ljmp
add
mov
mov
push
adc
cmp
and
and
outsb
or
ljmp
hlt
mov
aaa
add
lock
ja
test
repnz
pop
lcall
das
inc
in
pop
popa
mov
rcll
pop
xchg
xor
subl
sahf
enter
sbb
cmp
xor
repnz
das
push
lret
mov
cli
adc
mov
mov
lods
sub
sbb
xor
jb
xor
jl
loopne
push
scas
mov
cmp
ficompl
xchg
rclb
mov
das
repnz
hlt
mov
xor
scas
mov
int
movl
xchg
ljmp
shlb
test
cli
enter
push
inc
mov
jne
xor
push
add
lret
mov
fwait
aam
add
add
mov
push
xlat
and
and
popa
into
test
gs
lock
or
hlt
mov
inc
sbb
sbbb
fnsave
pop
jmp
xor
dec
jo
stc
adc
mov
sbb
inc
jmp
int
dec
je
stc
adc
jae
sbb
loope
mov
jne
cs
and
push
mov
add
mov
xor
es
fisttpll
mov
repnz
enter
lea
push
aaa
dec
test
das
lods
aaa
dec
popa
ret
into
test
fwait
xor
xlat
lea
js
int3
add
std
mov
out
imul
mov
or
inc
hlt
push
stc
std
push
jbe
mov
mov
mov
xchg
cltd
and
mov
mov
pop
jns
imul
shrb
sub
xlat
dec
lahf
stc
inc
repz
pusha
inc
js
push
clc
cmp
inc
mov
pop
mov
xor
sbb
mov
inc
mov
push
pop
sti
clc
mov
add
push
lods
sbb
out
xchg
les
lds
xchg
xor
lcall
xor
movsl
lock
sub
cld
cwtl
sbb
aas
fidivl
sub
cmpsb
repz
lcall
inc
adc
push
or
cmpsb
mov
cmpsb
cld
mov
fadd
lret
fwait
cld
aam
add
sub
movsb
shll
out
cmp
ljmp
out
mov
test
mov
out
stos
jl
jle
gs
cmp
push
fidivrl
pushf
lds
push
pop
adc
cmp
mov
call
pop
xor
sbb
xchg
jge
sbb
stos
out
xlat
addl
bound
out
fnstsw
sub
mov
dec
leave
mov
cmp
or
jecxz
dec
mov
sbb
or
pmaddwd
mov
fdivrs
pop
mov
das
in
scas
xchg
pop
ja
enter
in
mov
sub
and
aaa
int3
sbb
daa
pop
out
cmp
outsl
cmp
repz
int
das
adc
cltd
lahf
or
mov
add
shlb
hlt
fdivrp
push
add
adc
xor
xor
cmp
jne
cmp
jne
mov
mov
pop
pop
pop
pop
ret
push
mov
push
mov
mov
add
movl
mov
adcl
mov
xorl
add
sbbl
xor
movl
cmp
movl
jne
andl
mov
dec
mov
and
add
mov
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
call
cmpl
jne
xor
or
inc
mov
jmp
mov
xor
push
mov
mov
add
cmp
pop
je
mov
jmp
mov
xor
add
jmp
mov
xor
add
leave
ret
push
mov
sub
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
call
jmp
adcl
movl
mov
mov
and
lea
mov
push
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
jmp
andl
mov
inc
mov
cmpl
jne
push
push
push
call
cmpl
jb
andl
mov
inc
mov
cmpl
jne
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
movl
mov
andl
mov
inc
mov
cmpl
jne
push
push
push
push
pushl
push
pushl
push
call
cmpl
jb
xor
add
adc
mov
lea
dec
mov
mov
adc
mov
andl
mov
inc
mov
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
inc
mov
negl
xor
add
andl
mov
mov
mov
sub
and
mov
incl
mov
andl
mov
andl
add
movzbl
or
push
add
mov
movzwl
sbb
mov
andl
mov
mov
xor
movl
cmpl
je
cmpl
jne
pushl
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
and
mov
sbbl
add
movl
cmp
je
mov
jmp
mov
cmp
jne
movl
push
jmp
mov
mov
mov
cmp
jne
sbb
mov
mov
sbb
mov
xor
movl
cmpl
je
cmpl
jne
push
push
pushl
push
push
push
push
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
add
mov
mov
mov
xor
add
imul
mov
xor
add
cmp
mov
push
je
mov
add
mov
mov
xor
add
imul
mov
jmp
mov
xor
mov
mov
xor
mov
mov
sub
add
mov
mov
add
mov
mov
mov
xor
xor
lea
mov
xor
add
imul
mov
xor
sub
mov
add
cmp
mov
mov
jg
xor
mov
sub
add
jmp
xor
add
add
mov
mov
mov
xor
add
not
and
movsbw
mov
sub
mov
xor
mov
cmp
jmp
out
add
outsb
sbbl
hlt
push
js
fnstcw
popa
rcrb
cmp
and
adc
cld
test
pop
ret
loopne
cld
int3
stos
es
mov
test
out
mov
push
scas
clc
inc
and
dec
outsl
enter
lret
xchg
sbb
add
out
sbb
rcrb
out
pusha
push
pop
and
scas
mov
jl
pop
dec
iret
dec
popf
push
scas
jl
test
push
int3
mov
xor
ret
nop
arpl
ret
inc
ja
xor
ret
and
rcrl
jl
sbb
jle
lea
fwait
out
movsb
jns
cli
push
mov
dec
outsb
unpcklps
fmuls
mov
cmc
daa
jne
sub
mov
mov
mov
leave
test
xor
fwait
in
mov
push
mov
add
rcrl
mov
push
inc
mov
lahf
lods
mov
cli
std
jns
dec
inc
leave
lcall
out
negb
xchg
loopne
dec
adc
sub
sbb
push
add
arpl
scas
mov
sbb
xor
inc
daa
loop
fistps
pop
mov
std
add
sbb
clc
push
cmp
mov
mov
or
orb
lock
jle
push
ss
call
cmp
cmp
sub
mov
sub
inc
loopne
hlt
xchg
or
das
inc
outsb
xchg
mov
add
xchg
mov
adc
jecxz
pop
test
add
jo
and
mov
mov
dec
push
test
dec
and
iret
xor
xor
sbb
test
sub
jns
mov
jecxz
aaa
add
in
add
jbe
jmp
push
mov
mov
pop
sarb
fsubr
arpl
cwtl
dec
mov
outsb
xchg
fdivrs
jne
jecxz
adc
popf
xor
out
sbb
repnz
out
incl
or
ret
stos
jne
pushf
ss
outsb
ljmp
lret
mov
mov
or
popf
inc
pop
add
imul
jecxz
pushf
dec
std
sbb
dec
out
mov
push
addl
mov
sti
sti
aad
fldl
subb
addr16
fstpt
adc
mov
mov
cmpsb
sbb
xchg
lret
sub
pop
ljmp
jae
imul
push
lods
shlb
adc
fcompl
scas
pop
daa
inc
cltd
inc
es
jno
ds
in
mov
inc
je
lahf
pop
lret
xor
jnp
repz
push
dec
xchg
scas
imul
or
lret
mov
out
scas
or
pop
push
push
icebp
cmp
dec
mov
jmp
test
push
lahf
xor
dec
bound
lret
stc
lds
dec
in
push
sub
aad
sub
lcallw
xchg
nop
or
mov
cmp
push
push
ret
inc
lahf
sub
mov
and
mov
xchg
cmc
loop
mov
add
das
iret
scas
jle
inc
les
arpl
xchg
pop
out
jmp
mov
inc
sub
mov
inc
insb
cmp
lcall
mov
aas
nop
rolb
jne
popl
xchg
repz
mov
ds
rclb
lods
mov
lods
scas
mov
mov
dec
pop
inc
mov
cmp
sti
or
lea
xor
ds
mov
sbb
cwtl
xor
xor
gs
sub
mov
pop
inc
enter
pop
xor
add
jns,pn
mov
mov
in
stos
add
pop
xorb
sbb
lds
sub
cmpsl
pop
mov
pop
add
sub
das
in
inc
clc
cmp
adc
fs
popa
in
cmp
add
jbe
mov
mov
jb
imull
loop
mov
lods
inc
sahf
mov
int3
icebp
pushf
pop
adc
test
in
call
push
imul
fs
and
jb
push
cli
sub
xchg
sbb
xlat
es
mov
xchg
xchg
mov
repnz
and
out
popf
mov
jge
idivb
out
xor
cmp
hlt
fdivrl
fsubs
sub
lea
shrb
adc
push
jb
sti
dec
xor
mov
xor
inc
mov
jle
clc
push
hlt
cmp
xlat
out
dec
mov
int3
jne
testb
sbb
push
lcall
sbb
jb
repz
pusha
lock
mov
in
xor
ret
int
pushf
ret
push
sbb
cwtl
xchg
insb
cld
jg
fninit
repnz
or
sub
push
adc
in
mov
cmp
out
push
adc
into
rol
sti
pusha
mov
aad
sbb
clc
pop
xchg
jnp
pop
or
push
into
popf
xor
lds
jb
scas
push
fs
sar
mov
clc
addl
stos
outsb
mov
push
iret
pop
fsubrl
mov
push
lret
and
mov
jmp
sbb
jge
pop
inc
dec
jmp
sub
imul
push
int3
mov
enter
in
aaa
sub
js
add
pop
es
jl
test
out
sub
nop
jae
int
jno
xor
sub
cltd
subl
push
cs
push
addb
add
mov
testl
push
imul
push
in
lea
hlt
sbb
and
ret
sbb
mov
clc
gs
jnp
insl
repnz
adc
mov
into
mov
jae
cltd
dec
mov
push
in
mov
call
insl
cltd
cld
inc
or
cs
add
out
shlb
mov
rcr
push
mov
repz
in
fcomp
pop
jne
filds
rol
xchg
enter
popa
out
icebp
in
xchg
jae
add
test
xor
daa
mov
sub
test
aam
es
ja
sbb
mov
jns
xor
shll
js
stos
xchg
mul
sub
adcl
cmpsl
test
mov
jmp
and
mov
inc
adc
cli
pop
cmp
dec
jb
insl
mov
sbb
iret
lock
sbb
adc
adc
mov
mov
xchg
push
fwait
out
push
jno
imul
sub
iret
cltd
fiaddl
shrb
mov
or
jb
int3
insl
sub
das
mov
sbb
inc
add
and
fistpll
pusha
push
xchg
enter
sbb
rep
fwait
sub
pop
movsl
sbb
jl
mov
jae
pop
adc
adc
fidivrl
xor
cmc
sub
clc
das
push
mov
insl
and
jbe
push
mov
popa
enter
popf
xor
xor
dec
push
out
lds
pop
dec
and
mov
stos
and
xlat
mov
call
aaa
cltd
mov
or
mov
insb
push
or
in
mov
mov
push
enter
testl
fs
loop
mov
loop
and
xchg
in
out
scas
cld
mov
sti
jle
xchg
mov
mov
mov
rolb
popf
stos
aas
ja
and
and
outsb
sbb
xor
lods
add
rclb
sub
mov
mov
aas
pop
pop
fbstp
fisttpll
in
jne
cs
rclb
in
push
lods
xchg
sbb
adc
fwait
js
ret
push
jo
aad
out
mov
mov
je
cld
dec
jmp
neg
mov
xor
mov
inc
jbe
loop
sahf
mov
pop
rep
movsl
ret
xor
inc
sti
mov
jl
inc
inc
out
mov
ret
push
or
xor
dec
lea
rorl
test
mov
jae
call
sub
cmp
xchg
lds
adc
adc
shr
mov
ret
movsl
cli
lcall
arpl
imul
dec
cmpsl
pop
mov
test
add
call
inc
nop
movsl
ror
outsb
jo
push
push
lret
out
pop
cmp
cld
xchg
xchg
xor
xchg
mov
mov
repnz
mov
sub
lods
das
mov
push
fisubs
repz
push
and
xlat
push
mov
adc
add
and
ja
push
pop
in
jp
push
xchg
in
push
rcrl
fiaddl
mov
lds
dec
mov
push
mov
mov
sbb
add
mov
push
imul
xchg
scas
cmpsl
sub
iret
fs
pop
andl
sub
dec
cmp
or
sbb
mov
in
adc
lods
pop
arpl
int3
cmp
jns
mov
and
adc
cltd
repz
pop
push
sbb
or
dec
and
mov
aas
jb
or
pop
addb
xchg
mov
int
or
je
mov
push
mov
push
mov
int3
or
fcmovbe
fmuls
fcmovnb
mov
inc
or
push
stc
ret
mov
xchg
sbb
cmp
test
inc
push
sti
incb
and
in
inc
ja
xor
xlat
cmp
icebp
fnstcw
repz
inc
push
jle
pop
mov
insl
xchg
lods
cltd
jl
fsts
xor
cmc
je
mov
xchg
push
data16
nop
push
das
mov
ljmp
lcall
sub
sub
imul
inc
ds
dec
adc
adc
inc
pop
jnp
pop
movsl
mov
jecxz
pop
pop
ds
sbb
push
sar
ljmp
pop
pop
out
enter
arpl
outsl
mov
jne
lret
mov
pop
cwtl
inc
xchg
shl
sbb
pop
jnp
hlt
sub
out
jbe
es
push
sbb
rcr
in
mov
cwtl
mov
scas
push
ret
daa
push
or
cmp
sbb
loop
iret
jns
ret
fidivrs
dec
jmp
pop
stos
xlat
jbe
dec
dec
or
mov
test
lds
test
lret
cmpsl
or
mov
repz
push
sbb
fwait
xor
xor
fsubs
popa
sbb
rep
stos
and
test
jns
fsubr
jg
ds
adc
aad
mov
mov
push
and
pusha
arpl
in
in
stos
cmpsb
and
inc
cltd
iret
aas
bound
sbb
ljmp
push
out
mov
pop
cmp
dec
into
outsl
iret
jns
test
pop
sahf
add
pop
or
cmp
inc
xchg
popa
aaa
dec
sti
mov
loop
jmp
loope
dec
jae
shl
cmpsl
xchg
jae
in
or
sahf
movsb
and
aas
mov
pop
push
test
daa
mov
leave
push
fidivl
or
test
movsb
push
out
push
ret
lods
rolb
addb
mov
xlat
clc
lock
push
lea
mov
in
int3
ljmp
push
cmp
push
in
sub
pusha
or
sarl
es
addr16
xchg
push
push
pop
mov
pop
aam
lods
adc
pop
insb
scas
jle
es
dec
repnz
mov
adc
inc
mov
mov
loop
sbb
addl
clc
xchg
pop
out
out
xorb
mov
sbb
sub
into
aaa
mov
cmp
pop
cmp
adc
dec
repnz
sbb
xorl
mov
bound
nop
push
insl
pop
pop
loope
cmp
cmp
sub
call
fcmovnb
neg
test
outsb
fisttpll
xorl
in
negl
xor
icebp
ret
xor
xchg
mov
cmp
aaa
xor
pop
cld
fsubrs
aam
jns
cmp
sbb
mov
out
jl
mov
outsl
mov
cltd
outsl
aam
xor
xchg
mov
mov
lahf
imul
xchg
xchg
lods
mov
mov
mov
sbb
pop
out
pop
dec
push
mov
fsubrs
fcmovb
cwtl
sti
jns
je
push
cmp
popf
cmp
jnp
sub
popa
mov
daa
int3
push
sbb
pusha
and
std
cmpsl
mov
mov
lock
jp
inc
adc
dec
and
fimull
jnp
cmp
pop
arpl
mov
mov
jmp
mov
clc
jmp
cmp
mov
push
push
and
sub
cmp
adc
xor
mov
dec
xor
xchg
xchg
dec
fisubs
push
aaa
insb
notl
les
mov
aad
sub
push
mov
push
jnp
mov
sub
test
cld
or
mov
test
cmp
inc
jb
cmp
insl
mov
int
out
daa
dec
outsl
lcall
mov
add
arpl
leave
mov
sbb
pop
mov
sub
pop
in
arpl
xor
pop
inc
xor
mov
or
rcrb
call
inc
addr16
in
mov
out
xor
jnp
mov
cmp
js
int3
pop
dec
mov
mov
dec
sti
jmp
xor
dec
add
js
jne
push
test
shr
loope
movsb
cmpsl
notl
mov
jae
xchg
je
mov
ja
and
out
loope
ret
sbb
fs
es
test
mov
pop
xchg
nop
repnz
out
in
xchg
fstpl
mov
lods
fdivrp
stos
ss
adc
jp
xor
pop
scas
leave
cmp
mov
movb
add
ja
and
cmp
and
ds
aam
cmp
jo
push
fimuls
jo
add
sub
mov
jmp
mov
push
jbe
imull
int
movsl
lock
or
stos
or
and
pop
xchg
xchg
cltd
pop
outsl
cltd
test
aas
out
call
xchg
add
movsb
stc
cmpsl
pop
dec
lods
in
push
cmp
pop
in
xchg
lods
iret
mov
fdivp
popf
fdivrs
notl
pop
cmp
dec
sahf
ds
sub
dec
mov
xchg
push
repnz
jl
cltd
jmp
test
dec
addb
xchg
sbb
xchg
ret
jmp
fsubs
xlat
ret
es
repnz
iret
scas
sahf
movsl
mov
lods
clc
push
sarl
jg
sub
hlt
mov
repnz
ss
test
out
push
mov
rcr
xor
sbb
push
inc
popf
repz
test
loope
mov
dec
push
mov
imul
mov
mov
cs
dec
jo
fldcw
iret
push
sub
push
cwtl
in
mov
ds
add
lock
or
xchg
lret
pop
or
or
push
jns
cmpl
dec
mov
pop
cltd
or
push
jle
lret
sahf
mov
movsb
mov
fs
cwtl
icebp
xchg
sub
push
cld
jecxz
mov
movsb
dec
mov
ljmp
cmp
cmc
sub
daa
lahf
or
mov
xor
cmpsb
mov
imul
push
inc
ljmp
xchg
clc
gs
push
ret
and
sahf
ret
sbb
jmp
and
enter
jns
inc
mov
fisubs
shrb
aam
inc
ja
mov
fistpl
data16
in
push
cmpsl
pop
imul
sub
pusha
and
ja
push
fcomps
mov
inc
push
sbb
int3
cwtl
inc
insl
or
lret
lds
lret
repz
pop
iret
notl
test
mov
pop
and
jmp
out
rcr
adc
test
inc
scas
mov
push
push
lods
mov
xor
rorl
adc
inc
data16
xchg
imul
and
shll
lret
nop
in
jae
and
cmc
or
addr16
vsqrtsd
xor
mov
dec
mov
cmc
adc
add
lcall
mov
js
repnz
out
push
subb
sbb
add
cmp
adc
lcall
cltd
mov
or
cli
xchg
das
add
add
aaa
xor
fdivp
pop
ja
imul
pop
sub
adc
cli
lahf
mov
sbb
mov
dec
dec
lods
and
xchg
cmp
andl
sbb
aam
imul
lahf
ja
or
mov
mov
push
stos
mov
push
daa
popa
or
leave
mov
sub
movsb
push
ljmp
cltd
and
gs
data16
push
xor
lods
imul
imul
or
out
shlb
sti
or
add
dec
jbe
sbb
jge
push
jge
insb
mov
mov
out
aas
mov
mov
sbb
adc
cmpsl
jne
arpl
fucomip
sub
and
pushf
outsb
add
mov
sbb
shlb
dec
repz
jmp
into
xchg
cmpsl
mov
xchg
jl
push
cmp
mov
int
je
mov
bsr
xor
push
sti
xchg
into
cmp
add
pusha
or
out
maskmovq
inc
xchg
push
outsl
out
fcoml
cmpsb
push
aam
repnz
shrl
pop
ret
push
or
mov
ljmp
clc
or
int
test
mov
sbb
jle
dec
aaa
inc
dec
mov
ljmp
mov
cltd
jmp
scas
mov
hlt
and
pusha
xchg
gs
ljmp
push
test
outsl
rcrb
mov
push
lea
das
aad
insl
jbe
lret
cmc
fwait
out
mov
sub
imul
xor
rcrb
shrb
icebp
dec
ds
div
icebp
mov
nop
sbbb
jb
sahf
ds
mov
ljmp
inc
xchg
dec
mov
inc
push
mov
cmp
mov
sub
pop
push
aad
out
aaa
xchg
cwtl
pushf
cmp
cld
cmp
loop
arpl
jp
imul
xchg
movsb
lcall
push
pop
cmp
mov
dec
fwait
in
fildl
dec
dec
test
cmpsb
and
push
fcom
hlt
mov
aas
sbb
scas
dec
cmp
fs
adcb
pop
and
cmpsl
mov
hlt
and
add
mov
pop
push
mov
scas
hlt
das
dec
mov
pop
mov
push
ds
xor
lods
fimuls
xchg
lds
pop
insb
mov
and
scas
xchg
scas
adc
test
xchg
and
sub
add
xchg
jne
daa
pop
and
jne
pop
test
xchg
shlb
and
in
fsts
pop
inc
int3
cltd
int3
in
imul
and
stc
adc
aaa
jb
iret
ret
call
jns,pt
xor
cs
data16
jmp
xlat
xlat
popf
pop
les
adc
cmp
inc
sub
out
add
neg
xor
rcll
dec
ss
int3
add
add
pop
ret
or
xchg
adc
mov
loopne
iret
push
inc
mov
sub
outsl
inc
pop
lcall
pop
or
sbbb
or
out
cld
pop
sub
and
fs
jne
pop
xchg
rorl
es
adcl
dec
xchg
rcll
test
sbb
or
out
gs
xchg
out
into
jmp
scas
push
dec
dec
test
lret
lods
dec
sub
stc
dec
hlt
mov
rolb
test
inc
and
push
loope
sbb
xor
mov
mov
xor
mov
jmp
insl
jge
sbb
mov
cmpsl
push
sbb
dec
and
daa
dec
sub
jl
insb
imulb
ret
les
sub
lret
repnz
xor
add
mov
sub
jp
fbstp
movsl
ficompl
lret
shl
out
and
sub
loop
mov
xchg
addr16
andb
sub
fs
stc
xor
das
jnp
mov
fs
pop
xchg
popa
pop
xor
push
or
mov
aam
loope
call
fs
sbbl
loope
xor
shrl
pop
dec
add
icebp
lret
popa
popf
mov
testb
leave
inc
inc
mov
jg
inc
arpl
in
jno
test
jge
mov
test
test
in
inc
push
je
aaa
mov
pop
cmp
sbb
or
std
enter
adc
ret
int
and
or
stos
sbb
mov
outsb
sahf
ljmp
bound
mov
mov
fisttps
xchg
jecxz
imul
mov
rorb
icebp
sub
pop
pop
jmp
and
cwtl
filds
or
movsb
jmp
or
add
sbb
inc
or
pop
mov
out
jge
adc
inc
dec
out
imul
pushf
out
mov
ljmp
iret
ja
jecxz
loopne
lea
cli
sub
dec
out
outsl
stos
iret
xor
add
fbstp
xor
or
out
addr16
sub
pop
stos
jge
imul
add
pop
out
or
and
divb
sbb
iret
fldl
pop
jl
xchg
adc
add
mov
cmpsb
xchg
sbb
popl
jg
adc
mov
push
pop
insb
mov
xchg
dec
push
outsb
xchg
movsb
push
rolb
lahf
ja
clc
sahf
out
jbe
mov
sbb
imul
mov
mov
out
push
frstor
scas
icebp
arpl
xor
and
shl
dec
pop
mov
andl
jns
xor
flds
pop
sarl
inc
pop
sti
xchg
xchg
paddsw
mov
fld
xchg
dec
dec
xlat
ljmp
stos
dec
sbb
movsb
incl
mov
and
shrl
push
ret
xchg
xchg
ljmp
push
sub
in
shll
sbb
das
frstor
call
add
mov
mov
leave
aas
pop
sti
cwtl
flds
inc
xchg
dec
imull
mov
in
xor
mov
dec
daa
iret
and
clc
xor
orb
add
gs
mov
inc
mov
idivb
daa
pop
hlt
mov
push
mov
xchg
pop
push
jae
xor
xchg
lahf
ds
movsl
fcomps
mov
xorl
rcrb
xchg
loop
mov
mov
and
mov
push
movsb
add
out
inc
js
inc
cmc
xchg
outsb
ja
clc
test
cmp
jmp
jmp
dec
jecxz
test
and
popa
push
mov
or
in
jp
hlt
addr16
sbb
inc
add
jp
sub
aad
loope
pop
hlt
movsl
lret
es
adc
xchg
jp
insl
lock
push
add
mov
and
inc
push
jo
push
mov
xchg
xchg
xchg
xchg
xchg
andl
iret
jo
test
imul
movsl
lods
mov
or
mul
fdivrs
testl
mov
push
fs
testb
test
setnp
or
xorl
clc
pusha
je
movsb
jnp
mov
mov
repnz
pop
test
ret
mov
lahf
and
sub
mov
jmp
scas
add
mov
xor
adc
in
cltd
rcrl
fists
mov
iret
cmp
cmp
loopne
cmpsl
sti
mov
das
sbbb
imul
icebp
inc
ja
rorb
and
ret
cs
test
and
dec
jb
xchg
cli
jecxz
les
pop
aaa
jns
lcall
pop
fldl
dec
scas
add
shr
fsubl
add
xchg
out
fscale
jnp
jbe
fistpll
push
and
leave
out
and
push
push
and
jno
lods
sub
fistl
movsb
xchg
mov
je
jns
cmp
pop
movsb
mov
popf
les
stos
mov
xchg
mov
subl
outsl
dec
xor
test
jge
sti
arpl
xor
pop
mov
test
data16
int
loope
fcmovbe
xor
data16
lcall
imul
mov
test
cmp
decb
push
out
mov
cmp
hlt
ficoms
sahf
lods
movsl
sti
cmp
cmc
adcb
sbb
cli
aad
push
stos
push
fdivrl
je
daa
scas
es
adc
xchg
aaa
xchg
popa
inc
pop
jae
push
fs
xchg
jns
sub
jle
jo
in
jbe
fstl
enter
or
cmp
jns
rorl
loope
mov
push
stos
adc
fwait
int
push
jbe
jmp
in
sar
inc
mov
rcr
add
xor
pop
mov
mov
pop
enter
mov
cmp
dec
jo
pop
sbb
xor
aam
push
mov
stc
in
xchg
neg
clc
jo
cmp
inc
dec
stc
dec
les
test
lods
xor
jmp
cld
xor
rcl
push
aam
shlb
adc
mov
or
sub
fisttpll
mov
xor
mov
push
out
sbb
xchg
stos
jmp
mov
rcr
cmp
in
lea
flds
jg
xchg
mov
push
std
pop
push
fimull
outsb
xorl
repnz
lds
mov
clc
iret
movsl
add
lea
inc
arpl
or
fs
data16
ja
or
leave
xor
pop
jge
ja
rcrl
ds
repnz
repnz
push
mov
jg
push
outsb
jge
ret
in
push
popa
mov
cmp
cmp
leave
xchg
pop
bound
pop
xor
inc
adc
testl
cmp
clc
gs
subl
and
jl
dec
lods
js
sbb
mov
mov
cmc
insb
add
mov
jmp
insl
int3
ret
and
pop
rolb
out
or
mov
push
hlt
fimull
xor
xchg
iret
test
inc
ss
adcb
sbb
shll
pushf
jns
mov
ret
mov
mov
sbb
xchg
test
popa
rolb
or
mov
and
lcall
ds
ds
iret
mov
mov
dec
movsl
jns
xchg
pop
jae
pushf
div
popa
or
adc
jbe
cwtl
fwait
arpl
add
xor
mov
push
dec
jmp
add
add
lods
lock
and
pushf
aad
cmpsl
adc
pusha
in
test
hlt
daa
pop
add
aas
cmp
sahf
push
pop
mov
sbb
sar
adc
pop
out
xor
add
or
idivb
xor
mov
fildl
dec
div
pushf
outsl
fs
sub
mov
cli
mov
cltd
pop
cmpsb
sbb
mov
push
pop
cli
push
or
jb
add
pop
shrl
nop
or
cltd
loopne
decb
lds
pop
rclb
and
adc
mov
cwtl
push
add
or
sub
and
push
adc
dec
pop
inc
inc
jno
pop
or
sub
jbe
lret
fstpl
es
es
add
push
push
sub
and
loop
jne
adc
int3
sbbl
lret
int3
sub
mov
push
out
mov
data16
lods
and
call
aas
inc
imul
sub
loopne
inc
jecxz
jbe
movsl
test
inc
or
xchg
in
sub
outsl
fcompl
lcall
pusha
xor
push
mov
fnclex
xor
sub
inc
xchg
mov
jbe
push
xchg
or
or
push
inc
rcr
dec
gs
aam
movsb
jg
push
imul
nop
sti
push
cld
movsb
mov
out
add
repz
mov
inc
sub
cmpl
iret
daa
pushf
call
daa
pop
add
cmc
outsb
imul
fists
fdivrs
dec
loope
scas
lcall
pop
scas
iret
out
rorb
or
push
fcoml
cmp
cmp
call
loopne
iret
xor
add
sub
jecxz
lea
popf
lahf
lods
outsl
fists
cmp
scas
inc
mov
test
fimull
out
cli
stc
jns
mov
call
push
push
or
sbb
lcall
xor
pop
push
xlat
cmp
aam
les
mov
outsb
test
aad
test
in
and
mov
lret
mov
cmp
es
mov
mov
cwtl
push
jbe
sbb
xlat
inc
adc
insl
ja
fs
loope
sub
adc
pop
inc
ret
mov
aaa
adc
inc
in
incl
adc
lods
ds
into
inc
xchg
adc
mull
iret
rcr
fs
jmp
mov
mov
daa
mov
push
jge
in
push
sbb
cmpl
fcoms
mov
leave
mov
xor
repz
mov
je
lret
mov
cmp
shrl
int3
xchg
jg
fistpl
dec
fcomip
mov
fwait
pop
daa
push
test
stos
sbb
inc
mov
sarb
mov
mov
out
sub
mov
push
mov
inc
sbb
cmp
rcll
push
add
push
icebp
dec
sub
sbb
imul
pushf
stos
dec
and
dec
sub
jge
and
inc
fiaddl
jb
mov
xchg
out
fiadds
imul
mov
lods
icebp
xchg
push
loopne
adc
jnp
fdivrl
push
loop
xchg
cmp
xor
cli
dec
js
les
mov
push
addr16
mov
int3
jns
inc
pushf
inc
add
dec
in
push
cli
lret
add
jo,pn
or
enter
sti
mov
pop
xor
add
push
sub
dec
cmp
call
insb
sub
xlat
scas
mov
inc
ljmp
scas
sbb
jbe
mov
shrl
cmp
cmpsl
jg
cmp
fisttpl
inc
sub
add
daa
cmp
cmp
inc
cmp
repnz
dec
push
inc
adc
ficoms
xorb
inc
iret
lea
fldl
pusha
push
cmp
sar
repz
or
pop
fs
or
addl
or
jo
arpl
xchg
pop
push
inc
loop
andl
mov
push
fisubs
or
and
ja
lret
orl
lock
mov
lods
rcr
cmp
shrb
lahf
xchg
mov
test
mov
push
add
sbb
notb
inc
and
loope
inc
js
jl
dec
mov
mov
stos
sub
nop
and
stc
fwait
imul
and
out
push
fldcw
in
lock
sahf
test
sub
fadds
and
add
movsbw
mov
sub
mov
xor
mov
cmp
je
mov
xor
mov
sub
add
jmp
mov
mov
mov
lea
mov
mov
mov
xor
add
mov
mov
mov
xor
add
pop
cmp
jne
jmp
fnstenv
xchg
gs
test
sbb
and
rcrb
pop
or
adc
pop
fucom
gs
mov
push
flds
mov
in
sti
push
je
pop
cmp
xor
sti
mov
clc
mov
sbb
loope
pusha
xlat
mov
cmp
divl
lret
sarb
repz
fisubrl
and
nop
mov
and
xchg
ror
iret
pop
jmp
cltd
jno
ljmp
cmc
fwait
movsb
mov
lods
cwtl
push
sbb
mov
sub
mov
icebp
pop
inc
mov
and
mov
movsl
push
mov
fcompl
mov
jbe
push
fs
data16
dec
sub
stos
lcall
adc
xchg
and
popa
ja
pushf
ret
mov
scas
mov
jne
push
inc
inc
sbb
mov
jmp
lahf
rcll
jmp
pop
xor
data16
lcall
shlb
mov
test
fisubrs
jg
pop
imul
xor
mov
xor
xor
or
das
enter
aad
mov
jg
cmp
bound
es
ret
sub
lods
jl
lock
xchg
mov
cltd
mov
cmp
add
popf
insl
cmpsl
dec
mov
dec
pop
xchg
sub
push
jp
jp
jmp
xor
mov
lods
push
repnz
push
xchg
pusha
repz
das
movsb
out
pushf
jnp
ret
xor
jp
call
dec
push
and
dec
or
psubb
andb
xchg
inc
jmp
cmp
pushf
jge
xor
inc
dec
mov
sub
pop
loope
xchg
inc
sub
shll
dec
mov
and
inc
iret
cmp
loop
pushf
push
mov
cmovno
cltd
add
ds
sbb
pandn
mov
pop
mov
daa
inc
cmpsb
ret
lea
adc
lahf
xchg
xlat
jge
mov
add
stc
das
sbb
ja
push
loopne
in
sub
js
add
mov
xchg
adc
adc
mov
sti
into
inc
adc
mov
mov
xor
roll
daa
cmp
or
mov
push
rcll
fidivrl
mov
outsl
jge
ds
jns
notl
call
mov
xor
jle
fldl
cmovb
bound
test
push
mov
test
jno
inc
iret
js
addr16
jae
jnp
xchg
cld
jo
dec
rolb
pop
sahf
jne
mov
scas
mov
cmpb
je
push
jp
test
sbb
mov
xor
cmp
cli
add
push
outsb
sahf
inc
cltd
in
xchg
fs
xchg
mov
inc
dec
mov
lahf
jns
shll
add
rclb
sub
cld
push
subl
cltd
xchg
shll
pop
jns
insb
andb
push
adc
dec
and
jbe
lock
lock
or
stc
xor
jle
inc
sbb
and
jle
and
mov
jnp
jno
out
jge
imul
pop
push
clc
popa
stc
inc
push
inc
ficomps
cmc
insb
and
sbb
inc
lahf
mov
dec
dec
loopne
add
mov
flds
rorl
push
arpl
mov
sub
cmpsb
mov
dec
lea
sub
cmp
add
stos
leave
fiadds
lods
xchg
in
mov
lahf
std
cmp
lahf
fwait
mov
xor
or
or
mov
xchg
xor
sbb
push
dec
mov
mov
test
or
sub
fwait
popa
lea
aad
pop
lahf
mov
scas
adc
cld
std
test
inc
cwtl
call
inc
shrb
adc
cmpsb
inc
xlat
add
xchg
cmpsb
pop
in
ret
or
push
jecxz
lret
inc
fbstp
leave
fs
loop
sbb
jbe
movsl
ja,pn
outsl
hlt
adc
rol
mov
xor
inc
dec
push
aaa
sbb
mov
les
popf
repnz
scas
adc
mov
in
bound
insb
sub
push
lahf
push
das
ljmp
pop
xchg
lret
and
negl
mov
push
std
gs
push
fidivrs
cs
out
jle
lret
adc
jle
arpl
mov
jecxz
xchg
and
clc
lcall
imul
sbb
aam
insb
mov
mov
addl
adc
cmp
pop
or
sub
imul
xor
push
negl
dec
xor
and
outsb
out
mov
or
leave
sti
or
loop
iret
mov
mov
js
mov
ret
sarl
outsb
pushl
jge
pop
xchg
loope
xor
in
xor
je,pn
cld
xchg
inc
icebp
push
loopne
add
or
xor
push
fdivrl
dec
sub
xchg
bound
xor
xchg
jno
shll
aaa
jle
ss
lods
js
push
icebp
add
mov
inc
lds
add
imul
in
das
and
dec
xchg
xorb
xchg
dec
sub
cmp
adc
xlat
sbb
pop
fildl
xchg
je
jle
scas
push
out
jle
add
imul
popa
inc
pop
das
adc
dec
je
enter
jb
and
mov
adc
das
stos
dec
xchg
shrl
inc
xchg
mov
inc
cmpsl
sub
add
push
and
inc
dec
stos
cmp
pop
or
ret
jle
and
aad
dec
mov
push
or
or
mov
mov
pop
addr16
fcomps
or
mov
lahf
sbb
popf
sub
lret
mov
shrl
or
mov
and
cmp
mov
subb
mull
jns
and
sbbl
push
shlb
movsb
jecxz
inc
mov
adc
push
outsb
sahf
sub
notl
out
scas
outsb
jmp
popa
xor
mov
jecxz
sbb
popf
jecxz
add
iret
shlb
stos
lds
cmp
popa
mov
jmp
mov
xchg
popl
and
mov
insb
lahf
xchg
mov
inc
or
and
or
mov
push
cmp
shl
sbb
mov
idiv
iret
or
add
mov
jb
push
mov
or
aam
cmp
mov
inc
mov
or
sub
push
adc
mov
mov
jns
push
xchg
mov
mov
xor
dec
adc
imul
and
ja
lods
pop
imul
jmp
rcll
jb
loope
leave
sub
mov
mov
jmp
mov
or
dec
in
jle
repnz
movsb
push
xor
les
mov
push
and
and
call
dec
shr
pop
es
jp
test
lret
negb
pop
int3
ljmp
push
cmp
xchg
into
mov
add
inc
ret
cs
push
in
stos
or
insl
lock
fisttpll
aad
negb
inc
jb
movsl
inc
adc
adcb
mov
add
test
and
xor
movl
ret
shlb
cmp
xor
scas
xchg
ficomps
cmpsb
jp
xchg
cltd
shrl
sbb
xor
push
pop
test
and
popa
push
shlb
test
mov
xchg
adc
jns
add
xchg
ficoml
into
jbe
daa
rclb
xor
inc
in
cs
pop
add
mov
fbstp
bound
dec
mov
jae
outsb
addb
pop
push
jnp
dec
ret
sub
not
mov
out
push
mov
or
mov
imul
add
inc
or
jo
jnp,pn
outsb
in
add
loop
vextracti64x4
lock
popf
xchg
sbb
xor
fwait
dec
lret
mov
negl
dec
sti
pop
addr16
cmp
and
xchg
ja
loopne
loope
adc
test
shrl
test
stos
sahf
ret
sahf
pop
dec
add
repz
add
inc
movsb
dec
inc
out
ljmp
inc
imul
jge
add
cld
add
movsl
dec
sub
divb
xlat
push
push
adc
push
int
mov
cmc
out
add
cmp
lret
test
nop
or
inc
inc
xchg
pop
or
push
mov
sbb
sbb
sbb
leave
jmp
fidivrl
mov
cmpsl
xchg
cmp
cmp
lret
pusha
mov
xor
dec
in
mov
rorl
out
push
outsb
pop
and
insb
push
iret
mov
sbb
fldenv
pushf
jl
pop
mov
pop
roll
sbb
jp
mov
or
xor
sub
or
mov
jbe
xchg
aad
cmpb
mov
insb
sbbl
push
pop
fldcw
out
inc
mov
testl
fidivrl
jnp
xor
scas
stc
sbb
inc
stos
stos
xor
push
xor
iret
push
outsl
mov
adc
xor
push
cmp
movsl
cmp
std
push
and
push
incb
outsb
inc
cmp
push
or
iret
mov
insb
stc
dec
jbe
sub
mov
hlt
fdivrs
xchg
or
dec
sbb
sub
push
xchg
mov
lahf
jle
in
out
xorb
dec
jno
sbb
mov
loop
ljmp
movsl
push
test
filds
aas
dec
lea
or
lods
shlb
scas
inc
fimuls
inc
add
movsl
add
xchg
cmpsb
mov
xchg
add
hlt
scas
aaa
aam
js
dec
push
in
jge
sub
mov
int
call
pop
add
sbb
mov
add
aaa
daa
add
pushf
cli
andnps
or
in
jg
add
sahf
jmp
ret
aaa
or
inc
fsubrl
mov
adc
xor
mov
repz
xchg
js
daa
scas
jge
rcrl
and
inc
sahf
adc
mov
aaa
mov
xor
stc
popa
cwtl
jp
movsw
inc
inc
ja
xlat
jno
sub
ja
mov
jb
aad
pusha
pop
jmp
mov
sbb
lods
mov
jae
mov
mov
scas
mov
ret
sub
rclb
push
and
xchg
mull
mov
and
sbb
sbb
mov
xchg
or
lock
inc
fnstenv
out
dec
js
aam
data16
das
pmulhw
pop
subb
fsubl
cmp
stos
fsub
in
jnp
repz
js
dec
jne
or
sub
mov
data16
inc
dec
push
cltd
andb
fmul
sti
mov
mov
repz
shll
push
out
std
sbb
inc
rolb
add
push
ljmp
sub
into
fidivl
xchg
add
add
pop
push
fscale
pop
decl
jmp
dec
dec
mov
pusha
mov
hlt
xchg
imul
cli
sub
xor
pop
adc
push
jmp
mov
pop
cmp
insl
lahf
roll
mov
rorl
call
inc
xor
decl
adc
cmp
sbb
xor
or
ss
clc
sbb
dec
push
sar
sbb
lret
insb
movsb
sub
gs
lods
and
or
pop
popf
push
and
fildl
push
inc
pop
xchg
adcb
cmpb
pop
outsl
ljmp
stc
in
int
mov
fbstp
sub
aas
mov
test
fwait
mov
pop
stos
roll
mov
lahf
and
sub
ror
add
sbb
cmp
aad
add
cmpb
das
mov
outsl
and
nop
sub
mov
dec
or
xchg
push
sahf
test
incl
xor
popa
push
mov
outsb
cmpsl
int
add
movl
mov
or
inc
pop
ror
sbb
sub
pop
jge
repz
jl
cmp
stos
mov
cli
xlat
loope
mov
flds
cmp
jle
inc
inc
sub
xor
int3
jp
ljmp
cld
daa
adc
mov
clc
mov
pusha
dec
xor
push
add
clc
jecxz
xchg
cmp
adc
test
movsb
stos
push
sub
iret
mov
insl
in
lret
iret
push
add
cmp
into
jge
dec
xor
or
iret
pop
sbb
sub
inc
mov
cmpsl
hlt
inc
push
arpl
mov
mov
jbe
pushf
jl
in
je
mov
iret
xchg
cmpsb
xor
daa
push
sub
fnstsw
test
mov
lahf
gs
inc
xchg
hlt
sahf
push
es
incl
mov
inc
loop
fwait
outsl
push
icebp
adc
ret
lock
sub
mov
imul
lods
sbbb
into
lock
or
sbb
cltd
push
pop
popf
dec
mov
sub
jno
xchg
pushf
fcompl
sub
scas
ljmp
pop
xlat
pop
jne
mov
int3
jg
or
stos
int
in
mov
pop
ret
mov
and
adc
imul
pop
lds
pop
inc
jg
jns
aad
sarb
add
sar
mov
fldl2e
sbb
inc
mov
and
cld
push
push
jne
stos
or
xchg
mov
repnz
mov
mov
fs
loope
push
sarl
add
rcrl
sahf
outsl
inc
test
push
push
pop
pushf
movsl
aas
imul
lea
faddp
mov
nop
xor
lcall
lods
or
ret
popa
jge
inc
cmp
xchg
iret
xchg
daa
mov
pusha
cmc
mov
gs
in
sbb
add
in
mov
sub
js
iret
pushf
xor
pop
xor
cmpsl
incb
mov
jnp
push
xlat
imul
push
in
outsb
nopl
data16
adc
lahf
cmp
aam
jmp
iret
pop
mov
jp
jge
mov
xorl
idivb
mov
fstpt
stos
cmpsb
in
sbb
das
push
leave
jmp
jp
xchg
and
icebp
cmpb
sbb
jmp
xchg
inc
outsl
xchg
xlat
inc
xor
fistps
jp
or
lea
je
clc
rclb
sub
or
cmp
ljmp
insl
out
xor
out
inc
test
inc
sbb
cmp
adcl
jnp
dec
ret
sub
in
cmp
pop
test
dec
xlat
mov
cwtl
lret
or
rcll
sbb
loop
jg
xchg
inc
ja
pushf
dec
jne
and
dec
cmpsl
shll
lret
push
subb
fwait
xor
outsb
cld
mov
fdivrs
xchg
and
int
repz
inc
daa
stc
push
pop
shlb
insl
mov
gs
adc
data16
cmpsb
jl
out
outsl
std
shl
push
dec
cmp
mov
xor
lret
mov
out
xor
cwtl
push
icebp
mov
push
jl
mov
sbb
aaa
mov
outsb
mov
icebp
jg
dec
push
data16
xchg
inc
loop
jge
ud2
mov
mov
lret
enter
xor
out
lahf
sub
lods
and
and
push
stos
push
sub
jno
mov
pop
add
popf
mov
mov
sub
sarl
andl
fstl
xor
or
mov
jo
add
and
mov
arpl
sub
mov
push
xor
or
jmp
xchg
inc
dec
sahf
loope
movsb
out
add
sub
jl
sub
mov
enter
inc
sti
lds
sbb
cmp
xor
pop
dec
ret
xchg
xor
xor
push
pop
pop
outsl
sub
cmpsl
xchg
pop
jno
xor
movsb
xor
outsb
pusha
repz
and
les
scas
xor
pop
cmpsb
xor
mov
push
jg
cmp
lret
inc
or
mov
or
icebp
incl
cmpsl
or
cmc
addl
icebp
mov
xchg
fsubrs
cmp
xchg
mov
fdivl
inc
xor
aam
mov
and
xchg
lods
test
or
mov
scas
lret
add
pop
jo
dec
jne
jae
xchg
ret
mov
lock
mov
lret
fwait
xor
mov
repz
and
lret
mov
sub
pop
lock
negl
adc
sub
jnp
jp
sub
mov
jne
dec
push
xor
cmp
jae
push
push
dec
test
enter
pop
add
loop
or
sub
push
add
clc
pop
push
sti
repz
mov
sahf
mov
add
pop
pop
std
xlat
mov
cld
fidivrs
cli
jp
xor
das
xor
push
movsl
and
leave
sub
and
scas
mov
push
cmp
cltd
xor
lcall
lock
cmpsb
xchg
call
loop
dec
ds
aas
or
ds
xchg
andl
inc
sub
mov
push
ja
js
mov
adc
jbe
cwtl
adcb
inc
pusha
adc
fbstp
dec
dec
arpl
mov
scas
push
into
jge
cmp
xchg
insb
ret
cld
icebp
pop
jne
mulb
sahf
sub
test
cmp
popa
enter
movsb
xor
xor
jo
jp
scas
imull
lea
sbb
mov
or
outsl
jb
fsubs
jnp
iret
jle
test
arpl
push
repz
aam
fcomp
mov
dec
add
mov
test
mov
pop
cmp
aad
jo
nop
movsb
fldl
xor
push
mov
popf
gs
cli
mov
and
push
jns
faddp
push
jne
icebp
or
dec
add
jmp
std
shl
into
fnstcw
adc
mov
daa
loopne
bound
loopne
aas
int3
lds
out
les
mov
inc
and
mov
fwait
movsb
jg
das
scas
inc
loopne
popa
mov
inc
mov
das
adc
lds
push
outsb
xor
inc
cmp
mov
sahf
fs
dec
inc
outsl
cs
adc
mov
shrb
leave
jecxz
sbb
ret
lds
cltd
or
pop
ds
jo
inc
cvtdq2ps
loope
mov
and
enter
int
pop
sub
push
sbb
cld
lea
movsb
pop
pop
daa
shl
ret
mov
lea
inc
mov
sbb
addr16
insl
inc
or
push
inc
out
jnp
pusha
xor
mov
xor
xchg
fstl
je
and
mov
loop
sbb
or
pop
in
xor
jae
jne
insl
mov
jns
sbb
outsl
mov
stos
repnz
mov
sbb
or
fdivrs
xchg
pop
insl
mov
call
cmpb
xor
fninit
pop
lds
or
push
call
lea
inc
push
cmc
push
xchg
inc
sbb
int3
mov
scas
gs
push
cltd
push
push
dec
mov
out
and
sbb
sbb
push
pop
jl
lahf
loop
xchg
push
daa
fsubs
pmulhuw
incl
cmp
inc
mov
cltd
inc
and
cmp
inc
scas
negb
xchg
insb
jecxz
inc
fmul
dec
arpl
fucomi
addr16
test
inc
xchg
inc
cmpsl
mov
xchg
or
mov
je
jmp
xchg
xor
cli
inc
xor
add
imul
aas
fimuls
mov
add
and
jge
xchg
and
xchg
mov
aaa
mov
xchg
xor
or
ss
jle
fldenv
jp
adc
iret
test
jge
inc
mov
push
mov
inc
mov
jle
mov
cmp
pusha
test
mov
push
adc
bound
pop
add
sbb
jo
cmp
pop
adc
and
cltd
jp
lds
adc
lods
inc
sbb
mov
mov
insl
xchg
mov
icebp
fimull
test
popa
fildl
lock
or
mov
outsl
dec
out
test
or
cwtl
and
jno
push
pop
jmp
jne
repz
sub
ja
mov
and
cmpsb
cltd
mov
push
stc
add
repnz
je
dec
sub
lods
push
mov
mov
das
cmc
imul
ret
push
lret
cwtl
ror
inc
or
enter
inc
lods
push
and
ja
cmc
dec
sub
add
xchg
aad
pushf
and
ffree
and
movsb
mov
loop
outsb
inc
in
jp
sub
add
movlps
aam
pop
fimull
clc
cli
and
arpl
lods
jne
test
int
addl
jbe
cmpsb
and
jbe
cli
mov
mov
cmp
std
dec
xchg
imul
push
in
push
ret
pop
cmp
mov
cs
cmp
adc
cmc
mov
dec
push
inc
movsb
inc
and
cli
shl
faddl
xchg
jbe
movsb
push
mov
and
xchg
insb
call
sbb
xchg
jecxz
pop
push
gs
mov
cmp
cmpb
fs
rolb
mov
stos
cmpsl
xchg
push
or
xchg
add
daa
xchg
sub
push
lds
imul
ret
push
loopne
iret
sarb
movsb
enter
sub
sub
cmpsb
mov
lahf
mov
add
cltd
inc
int3
jno
mov
fucomp
repz
icebp
jmp
mov
out
inc
adc
mov
xchg
push
aad
adc
das
xlat
rorb
or
or
mov
cmpb
cmpsb
jg
cmpsb
pop
bound
or
add
les
mov
dec
cmpl
adc
mov
mov
pop
or
jns
fstl
pop
xchg
mov
inc
fdivs
sbbb
dec
pop
mov
stos
lcall
jb
scas
push
mov
jle
or
nop
leave
pusha
adc
int
fadd
inc
adc
jae
daa
fs
pop
jnp
xchg
js
pop
push
xchg
insb
mov
stos
lods
fmul
cmp
xchg
and
fs
mov
lahf
xor
jmp
imul
dec
dec
push
gs
mov
push
cmpsb
jb
mov
lods
in
lahf
movsl
pusha
mov
mov
lret
sbb
cmp
lea
aaa
xlat
int
shr
xor
pop
out
push
lods
test
mov
rep
insb
adc
and
cmp
push
inc
push
outsb
inc
dec
scas
pop
cmpsb
cvtpi2ps
sub
cvtps2pi
out
aam
lock
jmp
aaa
mull
mov
mov
and
subl
lea
andb
dec
or
push
and
test
jo
add
inc
pop
inc
inc
xchg
sbb
sub
jns,pt
xlat
jbe
sub
mov
cmp
add
jge
xchg
cmp
xchg
lods
mov
out
xor
les
aam
add
jl
call
dec
mov
push
cmp
mov
pop
pop
inc
mov
call
xchg
cmp
sti
call
push
or
repz
xor
push
xchg
loopne
inc
pushf
stos
stos
je
dec
xchg
imul
push
pop
sbb
nop
popf
sbb
dec
mov
setns
incl
cmpl
mov
ret
xor
jae
imul
fidivrl
sbb
push
cmc
insb
mov
cmp
loopne
xor
lahf
inc
data16
mov
pop
jle
dec
loop
cmp
jb
sub
dec
sti
or
jno
xor
pause
popf
push
imul
cmp
cmpsb
js
jno
sub
and
pushf
mov
rcrb
arpl
fs
movsb
push
imul
dec
ljmp
loope
fsubs
and
out
cld
ret
pop
or
ss
icebp
aad
outsb
std
outsb
lret
pop
into
sbb
aas
in
sub
es
enter
mov
add
test
mov
adcb
cmc
and
mov
sarb
in
inc
fisttpl
mov
fdivl
data16
xchg
cmp
cs
cmp
xor
loop
push
push
cmp
mov
fisubs
icebp
mov
sbb
lret
ret
mov
and
es
xor
mov
sarb
mov
jecxz
xchg
fwait
inc
in
dec
les
xchg
inc
sahf
inc
cmp
xchg
fcmovb
fbld
decb
cwtl
pop
mov
iret
mov
lea
xor
sar
xor
sbb
cmp
les
aas
inc
outsb
or
add
lods
dec
out
rcrl
push
pop
lahf
dec
aam
xor
in
push
outsl
push
mov
fiadds
push
push
sub
cli
mov
and
ljmp
aas
repz
fcompl
incl
out
test
leave
jl
mov
ret
insb
mov
mov
add
iret
and
mov
mov
mov
push
lock
call
cmp
das
xor
mov
add
lret
pop
jno
faddl
dec
int3
mov
cmp
mov
lds
mov
pop
out
push
shll
jg
xchg
sbb
leave
dec
cwtl
adc
adc
xchg
dec
lods
sbbb
mov
push
jmp
repz
loope
pop
mov
push
andb
lock
sahf
or
popa
adc
call
enter
aas
sub
popa
jae
les
dec
sub
out
in
pop
ret
push
xchg
sub
push
das
lods
cmp
pop
and
sti
fsubp
addr16
or
cmp
dec
int3
andl
divb
sub
sbb
cmpsl
inc
mov
and
loop
pop
xchg
jb
insl
jo
jns
test
sti
mov
jbe
movsb
add
arpl
xchg
dec
mov
test
hlt
mov
lds
and
nop
mov
shlb
dec
xor
popa
push
clc
imul
xchg
pop
rolb
and
fs
fidivs
aam
and
shll
pop
xor
and
test
rorl
adc
repz
cmpsb
pop
sahf
movsb
mov
stc
jg
adc
popf
adc
fabs
or
add
pop
dec
ret
in
pop
imull
adc
sbb
scas
dec
jb
jecxz
adc
fwait
enter
mov
das
daa
lds
dec
jb
mov
push
leave
lds
jmp
scas
leave
out
sbb
repz
sub
push
lods
push
cmovg
jno
popa
mov
pushf
jnp
int
jp
out
xor
roll
setle
ret
add
xor
mov
sbb
sub
scas
ja
xchg
jno
popf
lea
js
pop
add
div
gs
xchg
out
inc
outsb
icebp
movsb
lret
or
or
inc
and
dec
mov
addb
imul
nop
fistl
outsb
mov
in
fstps
nop
bswap
dec
lods
lcall
push
mov
dec
jg
scas
fwait
inc
imul
pop
cmpsl
es
inc
es
pop
movsl
test
pop
jge
icebp
test
fstpl
in
or
dec
pop
imul
mov
aam
adc
aas
xchg
fldcw
repz
arpl
jnp
roll
pop
dec
lret
xchg
rol
scas
jne
sub
dec
sti
adc
pusha
sub
aas
and
stc
pop
sti
and
dec
out
iret
imul
push
mov
xchg
and
call
cld
push
bound
mov
incb
sbb
jbe
cmp
movsb
aas
popl
mov
sub
sub
xchg
shr
add
mov
pop
scas
push
mov
push
mov
or
std
jno
stos
jnp
dec
out
dec
lahf
pop
pushf
push
jmp
cmc
std
fwait
mov
int3
fimuls
pusha
cmp
push
mov
xor
lods
out
sbb
mov
or
push
adcl
push
adc
sub
and
pushf
xorb
mov
movsb
lods
outsl
add
repnz
pop
gs
jl
aaa
cmp
xchg
add
cwtl
inc
dec
xor
push
push
imul
subl
add
stc
leave
es
xchg
in
leave
mov
jae
decl
sbbb
rcrl
pusha
stos
lret
mov
xchg
enter
dec
out
mov
inc
aaa
push
in
mov
les
mov
shlb
loop
xchg
ret
notb
aad
fadd
jne
enter
jns
dec
jae
scas
leave
mov
and
into
adc
dec
enter
in
iret
adc
insl
and
cmpsb
aam
xchg
push
xor
ret
lret
repz
ja
push
rcr
jl
call
cwtl
mov
push
inc
cmpsb
xor
or
sbb
insb
pop
xor
sti
jno
dec
mov
repnz
bound
or
dec
inc
into
push
sbb
repnz
jae
pop
stos
arpl
sub
or
leave
test
jo
jnp
test
jns
or
shll
out
lods
dec
in
iret
xchg
sbb
rcrb
dec
mov
dec
add
pop
and
xor
adc
out
subl
ja
mov
nop
push
loopne
lret
sbb
stos
outsb
cwtl
lcall
inc
adc
mov
sbb
jns
xor
add
sarl
mov
dec
dec
mov
fisttpl
sub
into
stos
push
push
inc
popf
ja
add
dec
mov
js
pop
sub
cmpsl
negl
jg
mov
leave
pop
fwait
or
jmp
fists
pusha
jp
push
addb
jo
or
mov
inc
arpl
stos
xorl
fidivl
cli
jmp
insb
cli
loop
or
mov
xadd
mov
pop
scas
push
bts
ljmp
leave
fbstp
fisubrl
xchg
dec
mov
ror
es
adc
aas
ja
repnz
popa
mov
xor
or
aam
fs
es
call
out
pusha
cmpsl
mov
andl
xchg
std
inc
sbb
xchg
xor
sbb
and
inc
repz
xor
out
clc
adc
aas
xchg
or
stos
bound
aad
arpl
mov
mov
fs
jne
sub
or
rcr
or
push
rol
out
into
sub
lret
sbb
iret
test
cmc
or
sub
dec
pop
add
push
fs
fistpll
faddl
sub
sub
les
push
scas
or
mov
pusha
jle
mov
cs
mov
mov
xor
mov
add
imul
jmp
clc
loope
mov
test
mov
push
mov
aas
cmp
popa
rcrb
mov
sub
fidivrs
jbe
fwait
add
pop
lahf
push
shr
mov
jmp
repz
mov
lret
push
or
mov
jns
fs
dec
repz
hlt
out
add
outsb
in
adc
dec
lds
push
push
rolb
xor
cli
sbb
fnstcw
inc
add
cmpsl
jg
mov
xchg
add
lret
inc
jnp
cmp
jae
pop
mov
xor
loopne
inc
cmp
sub
add
test
repnz
cmpsl
pop
jnp
ss
adc
movsl
in
ffree
mov
lahf
das
xchg
into
cmpsb
shll
sbbl
rcll
xor
pop
or
sbb
jl
or
neg
pop
lahf
adc
dec
pop
aam
mov
cli
xchg
jmp
mov
cs
aam
jle
sbb
aad
hlt
movsb
or
sahf
arpl
aad
push
jl
dec
push
cmp
pop
ds
loop
arpl
iret
nop
in
shll
cli
cld
mov
cltd
dec
int3
lret
sahf
adc
icebp
push
xchg
rorl
sahf
mov
push
outsb
jle
out
mov
xor
ret
ds
rcr
movsl
adc
daa
popa
cld
leave
cmp
cmp
mov
pop
movsl
repz
mov
xchg
leave
xlat
add
xor
clc
cmp
mov
xlat
adc
pusha
imul
cmp
inc
pop
insl
pop
mov
dec
mov
mov
sahf
push
ss
sbbb
mov
movsl
bound
movsl
and
jo
ja
mov
aam
fmulp
pop
xchg
in
xor
inc
test
inc
jmp
inc
faddl
mov
js
in
inc
or
loope
xor
mov
push
loope
hlt
push
icebp
out
loope
cmc
jns
pop
insl
cltd
adc
inc
mov
ret
ror
sub
push
jnp
pop
loop
push
sub
cmpsl
fbstp
lds
movsl
jle
inc
sbbl
pop
or
or
data16
pop
ljmp
std
int
ret
mov
cmpsl
rorl
xchg
cmp
xchg
add
fs
xchg
aaa
nop
mov
mov
jns
cmp
cmc
pop
jge
ss
lret
inc
xchg
nop
roll
getsec
nop
sti
gs
pop
sets
jb
jle
xlat
jae
dec
push
cmc
xor
cli
pop
xchg
mov
enter
adc
mov
push
mov
movsl
and
sbb
imul
popa
mov
jl
out
arpl
cltd
mov
sbb
mov
xorl
or
cs
call
dec
lods
pusha
lds
pop
daa
outsb
outsb
in
jbe
or
jbe
nop
push
sbb
add
and
leave
pushf
mov
dec
addb
sbb
test
mov
pop
lock
or
loop
aad
mov
mov
test
ja
lahf
dec
or
jne
mov
ficomps
dec
jl
mov
dec
test
dec
push
xchg
addr16
scas
ja
mov
and
inc
cwtl
xchg
test
cmp
mov
pop
imul
and
cmp
jns
lock
pop
insl
fidivl
cmp
outsb
add
insb
cmc
mov
lea
inc
jne
nop
jne
outsl
mov
enter
xlat
sbb
mov
movsb
aas
cmpsb
fwait
shrl
pop
out
and
pop
pop
pop
sbb
sti
jno
mov
dec
inc
andb
outsl
fndisi(8087
sub
js
push
xor
pop
dec
sbb
mov
mov
jmp
repnz
fldl
test
xchg
xchg
mov
dec
test
pop
aam
mov
into
negb
inc
dec
xchg
mov
je
stos
fstl
add
cmp
or
inc
inc
add
xor
mov
xor
mov
xchg
bound
jecxz
xchg
shrb
inc
cld
scas
xor
inc
jne
nop
xchg
cwtl
test
bound
dec
sub
mov
stc
lret
dec
adc
add
inc
popf
lds
dec
dec
sar
push
pop
inc
std
or
cli
test
sub
sub
loop
inc
test
push
xchg
out
xchg
popf
xchg
mov
push
lcall
int
and
cmp
aas
out
mov
or
jmp
cwtl
push
lret
scas
pop
movsb
out
into
mov
imul
pop
xor
jmp
cs
xchg
push
lret
faddl
pop
mov
dec
inc
push
jmp
fcomi
int
incb
sbb
icebp
mov
sbb
mov
in
sub
mov
bound
in
in
out
imulb
mov
push
xor
jbe
push
sub
sub
add
or
or
add
outsb
lods
lods
and
scas
push
out
or
aas
pop
stc
mov
das
mov
push
jo
fmuls
out
and
dec
ja
pop
jo
fdivl
nop
ret
lock
sub
int3
or
push
fcomp
stc
or
cmp
jo
test
orb
arpl
adc
or
sbb
aas
cwtl
sti
cmp
pushf
cmpsl
mov
xor
cmp
inc
les
es
push
icebp
and
fimull
sub
cmp
push
jecxz
insl
mov
cmp
std
dec
and
add
or
call
shr
je
xorb
jb
push
sbbb
cmp
jp
ret
sahf
loop
push
sbb
mov
rcrb
movsl
rcr
jne
fistl
lods
jb
mov
sbb
sarb
or
or
cli
mov
pop
mov
nop
and
mov
cmp
ds
sub
push
mov
iret
call
jns
mov
sbb
xchg
andl
test
stos
mov
push
sub
dec
push
or
adcb
scas
adc
jle
hlt
ret
lret
mov
dec
mov
movsb
jbe
mov
sub
push
cmp
cmp
mov
push
aas
push
out
mov
add
sub
rcll
sbb
lret
lcall
xor
out
arpl
mov
mov
out
mov
push
pop
fadd
fwait
inc
lods
out
sbb
sbb
in
in
int3
xchg
cmpsb
test
and
push
cmp
shlb
add
addr16
mov
xor
push
je
push
pop
jp
or
in
in
rcpps
out
int3
jl
cmpsb
repnz
icebp
sub
jmp
scas
movsb
std
test
jge
push
divb
or
mov
rcll
push
adc
decb
mov
xchg
push
cltd
push
ret
sub
xorl
mov
xchg
push
sub
stos
add
push
push
cli
lcall
cmp
dec
push
hlt
lea
aam
sbb
push
cld
pusha
lret
popf
imul
imul
pusha
jge
pop
scas
jbe
addr16
aad
stc
call
push
lret
jb
out
out
ja
lea
sbb
test
mov
inc
mov
xchg
adc
push
or
cmc
sub
dec
fbstp
cmp
jp
scas
fucomip
fwait
sub
ret
addr16
push
xchg
xchg
cmpsl
pop
call
cmp
and
adc
mov
or
pusha
arpl
rolb
inc
dec
push
sub
jge
dec
and
jae
insb
ljmp
pop
adc
jmp
scas
addb
push
notl
test
mov
ljmp
addr16
mov
sub
out
fs
push
ret
call
and
dec
adc
xor
add
pop
daa
imul
jno
jmp
lss
cs
jbe
adc
popa
ds
test
xchg
inc
fstl
xchg
jecxz
fisttpll
pop
inc
mov
cltd
sub
sbb
fabs
sub
js
sbbb
pop
xchg
xor
pop
fld
out
ds
icebp
inc
mov
pop
rolb
pop
idiv
mov
loop
les
push
cmc
orb
jno
fyl2x
push
mov
xchg
ret
out
rorb
inc
mov
adc
add
dec
mov
negb
sbb
sbb
add
fdivrs
and
sbb
hlt
or
push
out
cmp
pop
add
xor
addb
xchg
int3
sbb
adc
mov
test
add
mov
out
scas
sbb
mov
call
add
repz
xchg
inc
sub
add
shlb
jle
add
lock
cmp
adc
mov
ljmp
jb
jo
or
cmovs
bound
test
and
faddl
mov
in
jb
mov
or
jo
jnp
push
fs
into
iret
ds
lods
jae
mov
jne
or
and
ret
sbb
push
xor
xor
pop
dec
and
jb
jbe
dec
mov
divb
cmpxchg
loopne
aaa
pop
scas
call
pop
xchg
and
pop
push
shl
arpl
jg
xorl
call
mov
pop
xchg
jns
xchg
jle
sbb
pushf
mov
add
andl
sbb
lret
mov
push
roll
mov
mov
stos
xor
testl
push
lret
adc
mov
shlb
jp
or
sbb
mov
xor
xor
dec
push
loopne
je
push
shl
in
bound
xor
cmp
loop
mov
in
into
pusha
hlt
sti
adc
seto
shlb
xor
and
jg
add
or
fimull
cmp
pop
adc
out
mov
push
push
pushf
jle
sub
ret
mov
daa
pop
jno
sub
movsb
add
test
scas
dec
nop
aad
dec
out
sbb
mov
sahf
fcomps
mov
push
ds
push
test
push
add
daa
jne
iret
fmul
aad
lahf
mov
pushf
mov
fstp
aam
nop
adcl
sub
mov
mov
arpl
shrb
roll
shrl
pop
mov
pop
mov
fcmove
pop
and
cli
sbb
in
int
mov
add
add
in
mov
or
ret
aaa
sub
xor
pop
cltd
cltd
cmp
sbb
xchg
inc
les
sub
pop
jbe
sarl
push
and
mov
sub
jl
test
xchg
mov
hlt
cmpsb
data16
sbb
std
mov
std
jg
xchg
push
outsb
out
pop
push
shlb
sbbb
arpl
jbe
and
add
jbe
adc
pop
scas
add
hlt
inc
and
sub
imul
add
push
inc
movsb
flds
lock
dec
inc
jb
aam
dec
push
ret
cmp
outsb
jb
mov
cmpsl
aad
sub
je
test
inc
sarl
daa
xchg
adc
hlt
cmpsb
test
scas
sbb
aaa
pusha
mov
jnp
loop
adc
push
clc
cs
xor
lret
aad
add
imul
xchg
mov
and
das
loop
imul
and
std
sbb
or
and
dec
add
pop
fadds
movsb
xchg
cltd
aas
faddl
fmuls
adc
loopne
mov
dec
xor
sbb
lret
dec
popa
lods
cmp
negl
mov
adcl
mov
cli
push
dec
xor
pop
push
sbb
jbe
push
cmc
fs
mov
push
nop
dec
pop
push
clc
sbb
xor
out
pop
cmp
popf
jnp
scas
xor
or
cmp
or
mov
inc
mov
xchg
sub
das
imul
ret
pop
jnp
push
cli
es
loop
decl
xchg
cwtl
dec
adc
push
shl
sbb
in
mov
xlat
sub
inc
mov
jo
adcl
lock
mov
mov
and
int3
cli
test
xchg
pop
je
push
xlat
inc
orl
cmp
rcrb
in
jle
push
repnz
jmp
add
adc
mov
adc
std
push
int
dec
pop
pop
pop
add
add
mov
push
daa
or
outsb
js
jne
sbb
aad
cmpsl
sub
lea
cli
xor
push
cmp
stos
cli
and
loope
jge
fdivp
mov
push
push
or
cwtl
leave
and
fcmovnb
int3
rcrb
or
push
push
mov
mov
xor
push
ficoml
xor
pop
cmp
divl
jb
xchg
push
adc
dec
jne
ljmp
test
add
lret
add
hlt
cmp
jl
popf
loop
push
test
mov
scas
mov
int3
rclb
pop
or
fistl
sub
push
xchg
call
mov
daa
movsl
mov
das
lods
inc
leave
scas
das
sbb
fs
xor
aam
pusha
cmp
in
test
nop
popf
inc
shlb
out
jbe
sbb
push
sbb
mov
inc
lret
jno
jo
xchg
jecxz
xchg
imul
cmp
fbstp
pop
jne
dec
sub
lods
outsl
pop
jecxz
push
inc
cwtl
icebp
xchg
loop
or
mov
push
cmpsb
stos
jge
cmp
and
sbb
sbbl
xchg
inc
loop
xchg
call
xchg
idiv
adc
dec
mov
fstps
xchg
popf
fucomp
fsubr
cwtl
icebp
cmpl
in
jae
jecxz
dec
jnp
rorb
sbb
push
sti
xchg
cmovg
pop
lret
mov
push
push
dec
cld
shrb
and
sahf
xlat
testb
mov
mov
dec
outsl
inc
jno
dec
and
mov
push
mov
lcall
adc
mov
xchg
pop
out
push
dec
xor
scas
ret
and
jle
cmp
lods
dec
lahf
xchg
push
std
clc
sub
push
jno
insl
sbbl
pop
insl
test
rolb
cltd
mov
fwait
mov
ja
dec
lret
xlat
rcr
scas
data16
out
pushf
test
fs
test
hlt
mov
sbb
outsl
mov
xorb
sub
pop
testb
int
and
fs
jne
loope
xor
sub
sbb
xchg
int3
jbe
sbb
xchg
dec
dec
pop
cwtl
pushf
loop
in
push
lock
clc
mov
test
adc
xor
mov
das
loop
aam
scas
cmp
cmpsb
loope
shlb
mov
inc
je
enter
imul
push
cli
out
jecxz
xor
aad
sti
xor
data16
push
add
pushf
mov
mov
dec
sbb
dec
dec
mov
mov
inc
inc
xor
xchg
xchg
lahf
pop
lret
cmp
cmp
xor
mov
je
pop
call
mov
jp
imul
sub
cmp
dec
jno
adc
dec
aam
or
adc
dec
sbb
dec
push
rclb
mov
jno
jg
cmp
rclb
cld
aam
add
xlat
and
sub
pop
test
sbb
nop
popf
xor
xor
xor
pop
cmp
lds
mov
out
ds
rclb
int3
xchg
jg
test
and
mov
andl
and
mov
andl
add
cwtl
das
push
add
fisubrl
pop
mov
or
mov
leave
jnp
pop
std
xor
ret
mov
mov
xor
out
pusha
mov
or
push
or
sar
lds
pop
sti
shrl
sbb
dec
test
iret
sub
bound
lcall
sti
scas
icebp
mov
lods
gs
imul
clc
test
push
arpl
dec
pop
lods
xchg
vdivss
sbb
mov
adc
lret
out
dec
adcl
aaa
outsl
mov
ret
pextrw
fisttps
sbb
add
mov
dec
sbb
ljmp
stos
or
sub
addb
shl
push
call
add
es
ret
imul
cmp
xchg
inc
dec
shll
movsl
bound
mov
xchg
repnz
scas
jl
push
outsl
movsb
mov
sub
nop
cmp
testb
push
aaa
rolb
add
subb
add
sub
mov
mov
mov
rcr
sti
inc
push
stc
popa
rcl
and
xchg
xor
fists
xchg
sub
mov
add
js
pop
or
add
mov
jb
sbb
xchg
xor
xchg
in
mov
scas
push
hlt
xor
cmp
pop
mov
repnz
adc
xor
push
and
inc
orl
sbb
adc
cmp
adc
dec
int
adc
dec
fnsave
sbb
mov
outsb
sbb
adc
push
cli
pop
test
mov
add
jb
or
mov
xchg
mov
ljmp
sbb
bound
andb
sub
outsl
push
xor
cmpsl
adc
mov
mov
xchg
mov
shl
nop
cmpsb
pop
icebp
dec
stos
pop
cmpl
pop
rcl
mov
sbb
push
je
mov
pop
sbb
pop
inc
jmp
test
xchg
insb
jbe
xchg
lods
inc
cmp
pop
ljmp
xchg
lds
mov
lret
shlb
or
call
std
or
mov
mov
or
xor
ljmp
xor
adc
cmp
and
pusha
enter
mov
jo
enter
add
sbb
jp
lret
outsb
push
adc
adc
and
das
inc
sub
inc
in
push
pop
in
test
out
int
vpsrlq
mov
cwtl
or
outsl
ret
adcl
loop
xchg
inc
pop
and
clc
jno
sahf
dec
fs
int
push
rorb
fucom
sbb
add
aas
xchg
pop
roll
pop
xchg
add
nopl
imul
lock
or
enter
pop
mov
xrelease
stos
add
shrl
scas
and
xor
popf
sbbl
pop
sbb
push
icebp
lret
aam
push
xchg
mov
inc
movsl
push
jns
cmp
jne
xchg
push
scas
dec
push
movl
sbb
mov
sub
cmp
sbb
bound
xchg
inc
adc
mov
fs
fcomps
xchg
inc
mov
lods
inc
fs
add
pop
dec
jge
ljmp
cmp
cld
outsl
and
fsts
jb
xchg
aas
ror
mov
sbb
pop
shll
xchg
inc
push
inc
clc
cmpsb
adc
sbbl
pop
dec
add
lret
xor
in
sbb
sti
test
mov
xor
jg
mov
pop
mov
fdivr
mov
fs
lret
pushf
and
pop
jge
push
xor
lea
cmp
gs
js
outsb
lcall
add
push
and
je
stc
push
in
js
loopne
xlat
ljmp
xor
inc
pusha
jbe
cmp
je
jl
or
cmp
sub
aas
rclb
inc
adc
int3
xchg
aas
inc
cld
mov
inc
xchg
gs
or
sarb
mov
mov
mov
insl
das
jno
pop
insb
cld
push
fiaddl
jno
test
out
dec
nop
imul
scas
inc
in
or
pop
fdivrs
mov
rclb
push
inc
dec
test
cmc
loope
pop
jge
orl
pop
loope
scas
fldenv
and
mov
in
adc
mov
and
push
sahf
insb
cmpl
add
and
xchg
mov
pop
sbb
out
mov
and
scas
int
xchg
cmp
sub
dec
jp
cmp
sbbb
push
xchg
push
enter
dec
add
pop
jmp
aad
dec
push
cld
cmc
jbe
push
out
add
pushf
push
in
rorb
jmp
pop
mov
pop
push
shl
int
and
shl
push
fistpll
cld
nop
lds
mov
push
mov
daa
repz
inc
push
mov
pushf
enter
das
mov
jle
addb
in
shlb
push
jmp
sbb
adcl
xor
aam
out
jb
mov
sti
movsb
cmc
mov
xchg
sti
es
stc
inc
les
lea
test
dec
pop
ja
notl
push
cmp
lea
cmpsl
dec
adc
adc
fwait
sub
rcrb
sub
or
mov
sub
inc
xor
fs
adcl
js
shlb
sbb
adc
jns
mov
mov
lahf
cld
test
lahf
loopne
popa
neg
xchg
out
pop
inc
icebp
lods
inc
cmc
push
push
inc
inc
and
jnp
jbe
shll
mov
xchg
aad
cmp
test
inc
mov
push
or
lcall
mov
testb
das
sub
dec
test
imul
test
outsb
mov
lds
push
fildl
lea
push
outsl
cltd
cmp
in
push
push
fldl
out
outsl
enter
cmp
or
cld
xchg
scas
pusha
mov
sti
es
loopne
jae
adc
in
scas
adc
add
mov
push
in
repnz
leave
test
fisttpll
mov
mov
mov
or
js
rolb
mov
lods
and
or
in
outsl
cltd
gs
dec
jmp
and
test
mov
sbb
mov
jnp
jbe
pop
adc
xor
lods
add
inc
dec
sub
cmp
push
ss
jne
mov
dec
xor
fsubrs
add
push
imul
pop
or
cmpsl
jmp
xor
xor
clc
jo
inc
movsb
mov
aaa
xlat
or
mov
mov
mov
lret
into
addr16
add
xor
popa
hlt
or
sti
xchg
je
rcl
jns
testb
push
mov
popf
out
xor
imul
mov
popa
jg
imulb
dec
aas
cmp
xlat
pop
dec
fmuls
call
nop
mov
lock
ja
jge
je
in
and
pop
icebp
mov
push
cmpb
into
jmp
js
fdivl
loopne
cmp
or
loopne
sub
aam
clc
push
push
out
push
adcl
stos
pushl
out
or
vmread
out
and
sub
je
sbb
mov
aaa
push
cmp
test
out
lock
mov
lret
mov
cltd
push
mov
cld
adc
ret
pop
and
mov
cwtl
xchg
test
or
push
out
out
mov
mov
push
loopne
cmp
adc
mov
pop
aam
stos
fidivl
cltd
pop
fisttpl
sub
push
rcrl
or
lahf
loopne
out
sahf
mov
pop
aaa
mov
adc
jb
stos
lcall
lcall
or
ficoms
sub
je
add
inc
fldcw
mov
out
and
or
imul
mov
lret
cmp
add
jp
lret
and
lret
xchg
int3
stos
fldenv
dec
mov
gs
mov
xchg
sbb
cld
daa
add
lods
push
das
cmpsl
adc
iret
mov
std
mov
add
sub
clc
push
sub
ret
pop
sahf
loope
xor
sub
sbb
or
mov
xchg
rolb
jl
jne
pop
fdivrs
dec
mov
mov
arpl
lret
jecxz
mov
popl
dec
cmp
dec
mov
add
push
out
movsb
stos
xchg
mov
cmp
imul
scas
push
add
adc
movsb
fidivrs
xchg
imul
sbb
push
lahf
mov
fs
out
test
jle
mov
add
into
arpl
cmpsb
outsl
addr16
fwait
aad
push
iret
test
mov
gs
mov
jg
rcl
xor
xor
leave
daa
adc
inc
adc
mov
mov
insl
jns
js
xor
dec
or
add
outsl
or
test
addr16
insb
push
gs
andl
xor
in
sub
push
mov
outsb
je
icebp
repz
jno
jg
pushf
aam
jmp
push
sub
push
jae
pop
xor
nop
sbb
inc
xorl
call
push
pop
call
dec
addr16
enter
sahf
mov
mov
cmc
xor
sub
lcall
push
add
xchg
popf
aam
jmp
jae
repz
add
addr16
arpl
or
and
rorl
jnp
cmpsw
lcall
mov
lret
setb
xor
mov
mov
pop
push
in
aaa
add
shrl
inc
cmp
pop
cltd
lret
xchg
shlb
pop
dec
je
addr16
mov
stos
cmp
mov
bnd
popf
nop
xor
sar
dec
addr16
out
sbb
fsubl
and
out
mov
xlat
push
dec
dec
notb
fwait
push
outsl
mov
mov
insl
jne
push
jnp
and
je
fisttps
aas
xchg
cmp
loope
mov
xchg
lea
xor
clc
adc
add
mov
sbb
push
test
test
cmpsl
js
dec
or
lds
enter
iret
lods
lock
lds
gs
jnp
cmp
adc
adc
movsl
or
xchg
loop
shrb
scas
mulb
push
mov
ljmp
cmpsl
lret
movsb
jmp
mov
adc
sbbl
aaa
adc
add
inc
xor
and
ljmp
jns
clc
clc
mov
cld
rol
iret
pop
das
and
pop
addr16
mov
mov
or
and
rcrb
cli
xchg
loopne
mov
mov
add
out
dec
cmpsb
call
adc
xor
dec
sub
mov
inc
lods
divb
movsl
lea
test
pop
aaa
dec
mov
jbe
pop
xor
inc
cmp
adc
mov
xor
sbb
lds
scas
and
stos
test
sub
iret
enter
xchg
punpcklwd
ja
mov
jecxz
jns
cmp
mul
loopne
rcrb
jne
sub
cmp
jg
mov
cmpsb
je
mov
jnp
adc
and
loop
out
push
mov
jl
jo
lretw
stos
mov
imul
pusha
sbb
fwait
adc
push
push
push
sbb
jne
stc
je
lds
push
and
cwtl
mov
cmp
xor
mov
adc
fiadds
cli
ret
mov
mov
jo
sub
sub
mov
movaps
dec
mov
dec
inc
push
popf
loop
jno
cmp
inc
iret
loope
scas
aaa
fsubr
adc
sti
repz
test
outsl
sub
iret
dec
push
test
or
lcall
out
pop
or
ds
aad
cmp
int
jnp
call
jmp
jbe
pop
ret
jb
cmp
bnd
push
push
push
inc
mov
daa
scas
sub
add
xor
adc
inc
pushl
jle
stos
or
jbe
popa
xchg
mov
lock
push
dec
mov
and
shlb
adc
cmpsb
mov
clc
leave
push
imul
fdivrs
out
or
inc
adc
pop
sbb
inc
adc
lea
jmp
lea
mov
sbb
ror
xor
dec
mov
push
mov
dec
out
inc
imul
iret
icebp
loop
fcmovbe
gs
mov
adc
inc
cmpsb
adcb
scas
in
mov
test
inc
std
and
lcall
sbb
and
addr16
push
fiadds
call
out
test
mov
in
mov
and
rorl
imul
add
loopne
add
ja
es
pop
cld
dec
jo
push
push
lret
fcmovu
inc
jbe
mov
sbb
imul
or
or
fs
fs
out
ds
or
xchg
lods
in
stos
pop
sbb
add
xchg
adc
pop
xor
dec
lods
subb
test
or
cwtl
ffreep
test
scas
jp
push
mov
ljmp
aad
and
add
lea
stos
shlb
mov
addr16
leave
loopne
mov
icebp
xchg
jbe
mov
repnz
out
mov
pop
push
sbb
mov
call
mov
jle
jbe
inc
fildl
pop
mov
xchg
mov
mov
xchg
inc
aas
popa
xchg
in
sbb
loopne
adc
stos
mov
lock
repz
dec
push
lahf
test
cmp
cmpsl
das
push
pop
inc
lahf
push
mov
push
daa
sbb
imul
jge
xor
rcrl
ret
je
popa
cmc
in
mov
sarl
mov
loope
scas
sub
pop
mov
loopne
jnp
ret
xlat
aam
popf
and
mov
test
mov
aad
test
cmc
add
or
orb
jo
mov
je
jbe
shl
push
or
push
jns
loop
jge
sub
or
mov
dec
push
dec
and
mov
sub
sub
lods
xor
out
and
push
shlb
js
mov
js
lret
ret
scas
dec
xchg
mov
lcall
fwait
mov
fdivr
dec
xchg
xchg
flds
cmpsl
int
xor
test
push
lock
rcl
inc
fisttpl
jge
or
mov
scas
mov
scas
jp
push
jg
outsl
pop
jge
cmp
lret
repz
dec
inc
lret
aad
fwait
leave
mov
dec
push
and
lods
mov
sbb
stos
pop
mov
aam
shll
outsb
ja
dec
or
xchg
int3
mov
mov
rcr
add
xor
xchg
pop
aam
push
out
jle
push
pop
add
jmp
cld
sub
mov
or
out
pop
inc
or
push
xchg
inc
adc
cli
or
out
cmpsl
xchg
imul
xchg
mov
stc
mov
pushf
cmpsl
mov
repz
inc
fisubl
sub
sti
jg
adc
rcrb
mov
lret
or
and
xor
fmuls
push
int
sub
fidivrl
cmp
in
aaa
dec
in
mov
mov
jp
adc
sub
dec
mov
pusha
push
jle
or
jne
lret
push
hlt
xor
test
push
dec
js
pop
movsb
hlt
cmp
sub
mov
dec
addb
push
js
popa
mov
in
jl
imul
pop
sti
aad
mov
ret
cmpsb
cmp
lds
ja
push
dec
mov
cmp
loopne
ret
repz
push
es
push
sub
cmp
ficoms
xchg
mov
daa
push
mov
pop
test
je
sub
pop
mov
mov
pop
push
lahf
rcrb
rcl
add
loope
xchg
mov
inc
clc
pushl
jmp
mov
add
mov
mov
mov
movsbw
mov
sub
mov
xor
mov
cmp
jne
mov
mov
mov
jmp
mov
cmp
jne
push
pushl
pushl
pushl
pushl
call
pop
pop
leave
ret
push
mov
push
movl
mov
mov
sbb
mov
movl
mov
sbbl
xor
addl
add
movl
mov
sbb
mov
xor
inc
push
xor
mov
mov
add
addl
mov
mov
mov
sbb
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
pop
leave
ret
push
mov
sub
mov
push
neg
push
adc
push
or
mov
or
xor
mov
add
subl
mov
mov
mov
and
mov
movl
cmpl
je
cmpl
jne
push
pushl
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
add
mov
mov
mov
adc
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
call
cmpl
jne
xor
xor
inc
mov
jmp
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
pushl
push
push
push
push
call
cmpl
jne
mov
inc
mov
jmp
movl
cmpl
je
cmpl
jne
push
push
call
mov
dec
mov
jmp
mov
movl
mov
xor
add
sbbl
mov
mov
mov
or
mov
andl
mov
inc
mov
cmpl
jne
pushl
push
call
cmpl
jne
xor
add
inc
mov
cmpl
jb
mov
mov
decl
push
and
pop
sbbl
sub
xorl
add
movl
adc
mov
movl
andl
jmp
xor
add
inc
mov
cmpl
jae
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
jmp
mov
sbbl
mov
dec
mov
mov
addl
mov
xorl
xor
add
mov
lea
orl
mov
mov
xorl
xor
xorl
add
andl
mov
andl
lea
adcl
push
movzwl
add
mov
xor
addl
add
subl
push
mov
adcl
push
andl
pushl
addl
call
or
mov
and
mov
subl
mov
sbb
mov
xor
addl
mov
add
jmp
sub
lea
mov
mov
mov
add
sub
movl
cmpl
je
cmpl
jne
push
push
push
call
mov
dec
mov
jmp
mov
mov
and
mov
not
mov
movl
cmpl
je
cmpl
jne
push
pushl
call
cmpl
jne
mov
dec
mov
xor
or
dec
mov
jmp
movl
cmpl
je
cmpl
jne
push
push
pushl
push
push
pushl
push
pushl
call
xor
add
dec
mov
jmp
movl
mov
movl
mov
xor
add
mov
mov
xor
add
mov
movl
movl
mov
mov
xor
add
cmp
je
mov
xor
mov
sub
add
mov
mov
xor
add
imul
cmp
ja
mov
mov
mov
sub
xor
xor
add
div
mov
mov
mov
xor
add
cmp
jbe
mov
xor
add
mov
mov
mov
xor
add
imul
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
add
movl
mov
mov
mov
movl
mov
mov
xor
add
jmp
movl
movl
mov
mov
xor
add
imul
mov
xor
add
mov
mov
mov
mov
mov
xor
xor
lea
mov
xor
div
mov
xor
add
cmp
mov
mov
jne
xor
add
imul
mov
movzbl
mov
jmp
xor
add
imul
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
mov
mov
mov
xor
xor
add
add
imul
add
mov
mov
mov
sub
sub
xor
xor
cmp
jne
mov
mov
xor
add
imul
mov
xor
add
or
mov
xor
add
mov
xor
add
mov
lea
jmp
mov
mov
xor
lea
mov
jmp
mov
mov
xor
lea
lea
xor
cmp
jne
mov
mov
mov
xor
mov
xor
mov
xor
mov
mov
xor
mov
mov
xor
add
pop
pop
pop
leave
ret
push
mov
movl
pop
jmp
push
mov
push
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
call
cmpl
jne
mov
inc
mov
jmp
or
push
movzbl
and
movl
movl
movl
cmpl
je
cmpl
jne
pushl
pushl
call
mov
dec
mov
jmp
mov
andl
push
adcl
mov
mov
xor
mov
and
xor
mov
mov
sbb
mov
add
add
imul
mov
cmp
jne
mov
mov
xor
xor
add
add
imul
jmp
mov
mov
mov
mov
mov
xor
xor
add
add
imul
mov
cmp
mov
je
xor
add
mov
imul
add
mov
mov
pop
leave
ret
push
mov
sub
push
push
push
movl
movl
dec
mov
mov
adcl
push
call
adcl
push
push
sbbl
push
movl
push
andl
push
push
orl
call
orl
push
andl
call
push
call
movzbl
mov
cmp
movl
jne
subl
xor
inc
xor
inc
movl
movl
movl
cmp
movl
jne
movl
cmp
movl
jne
orl
pushl
andl
pushl
addl
pushl
call
mov
mov
mov
mov
movl
inc
movl
cmp
jne
movl
inc
cmp
movl
jne
mov
andl
mov
inc
mov
cmpl
jne
push
push
pushl
push
push
push
pushl
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
adc
mov
movl
add
lea
xor
xor
add
mov
mov
lea
or
mov
mov
adc
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
pushl
push
call
jmp
mov
xor
or
adc
mov
mov
mov
or
mov
xor
movzbl
adc
mov
mov
addl
add
movl
mov
mov
mov
cmp
movl
jne
or
mov
decl
mov
adc
mov
add
xor
sbb
add
mov
andl
xor
add
inc
mov
cmpl
jne
push
push
call
cmpl
jb
mov
and
xor
xor
add
mov
sub
mov
adcl
mov
andl
mov
inc
mov
cmpl
jne
push
push
pushl
push
push
push
call
cmpl
jb
xor
xor
sbb
mov
mov
andl
xor
xor
inc
mov
cmpl
jne
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
or
mov
mov
sub
mov
and
mov
andl
mov
inc
mov
cmpl
jne
pushl
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
sub
mov
orl
mov
sub
mov
add
movl
mov
movzwl
add
mov
adc
mov
xor
andl
xor
add
movzbl
and
mov
xor
xorl
xor
sbbl
add
lea
mov
mov
mov
movl
cmp
ja
movl
cmpl
je
cmpl
jne
push
call
cmpl
jne
xor
xor
dec
mov
xor
add
dec
mov
jmp
mov
xor
lea
orl
mov
mov
xor
adc
lea
addl
mov
andl
mov
inc
mov
cmpl
jne
push
push
push
call
cmpl
jb
mov
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
call
cmpl
jne
xor
or
inc
mov
jmp
adc
movl
andl
jmp
xor
xor
inc
mov
cmpl
jae
cmpl
jne
push
push
push
push
pushl
push
pushl
push
call
cmpl
jne
xor
xor
inc
mov
jmp
mov
andl
movl
sub
mov
or
mov
xor
add
cmp
je
mov
mov
xor
xor
add
add
adc
xor
xor
mov
mov
xor
mov
add
adc
xor
xor
mov
mov
cmp
jne
mov
cmp
je
mov
mov
xor
add
imul
xor
add
mov
mov
mov
mov
mov
mov
xor
lea
mov
xor
add
adc
xor
mov
xor
mov
mov
xor
mov
add
adc
xor
xor
mov
mov
cmp
jne
mov
cmp
jne
mov
mov
xor
lea
mov
mov
xor
xor
add
mov
xor
lea
mov
cmp
jbe
mov
mov
mov
mov
mov
mov
mov
sub
xor
mov
mov
cmp
jne
lea
mov
lea
mov
mov
test
je
mov
mov
lea
jmp
mov
cmp
je
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
pushl
mov
pushl
add
mov
mov
pushl
call
mov
mov
mov
jmp
mov
mov
xor
add
cmp
jne
mov
mov
mov
xor
add
cmp
jne
mov
push
xor
add
push
push
pushl
pushl
call
pushl
pushl
call
mov
xor
add
mov
mov
xor
add
mov
lea
mov
lea
mov
mov
test
je
movl
movl
movl
movl
call
mov
mov
lea
push
pushl
call
mov
add
mov
lea
movl
mov
movl
mov
xor
movl
mov
add
cmp
je
mov
mov
xor
xor
add
add
adc
xor
xor
mov
mov
xor
mov
add
adc
xor
xor
mov
cmp
jne
cmp
je
mov
mov
xor
xor
add
add
imul
mov
mov
mov
mov
mov
mov
mov
xor
lea
xor
add
adc
xor
mov
xor
xor
mov
add
adc
xor
xor
mov
cmp
jne
cmp
jne
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
call
jmp
inc
mov
subl
xor
movl
cmpl
je
cmpl
jne
pushl
push
call
mov
dec
mov
jmp
subl
mov
xorl
add
movl
cmpl
je
cmpl
jne
push
push
pushl
push
pushl
push
push
push
call
xor
add
dec
mov
jmp
mov
mov
and
movzwl
xorl
mov
andl
movb
xor
lea
subl
mov
add
mov
and
mov
xor
andl
sub
adcl
mov
add
movl
movl
cmpl
je
cmpl
jne
push
push
pushl
call
xor
add
dec
mov
jmp
sbb
push
sbb
movl
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
call
jmp
mov
push
movzbl
sub
mov
mov
mov
adc
mov
xor
neg
mov
push
add
movl
jmp
movl
mov
movl
mov
inc
movl
cmp
movl
jb
and
mov
sbbl
xor
add
jmp
movl
cmpl
je
cmpl
jne
pushl
pushl
push
pushl
push
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
orl
mov
movl
cmpl
je
cmpl
jne
push
push
call
mov
dec
mov
jmp
adcl
mov
addl
xor
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
call
jmp
movzwl
sub
mov
add
movzwl
mov
mov
subl
movzwl
addl
xor
subl
add
mov
movl
mov
movzbl
inc
mov
cmp
movl
jne
and
mov
mov
addl
xor
add
subl
mov
subl
mov
xor
subl
add
mov
mov
movl
movl
movl
movzwl
mov
mov
movl
jmp
xor
mov
mov
add
mov
xor
xor
sub
sub
andl
mov
inc
mov
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
andl
jmp
xor
xor
inc
mov
cmpl
jae
cmpl
jne
pushl
push
push
call
jmp
andl
mov
inc
mov
cmpl
jne
push
push
call
cmpl
jb
and
xor
adcl
mov
andl
xor
xor
inc
mov
cmpl
jne
pushl
push
push
push
pushl
push
push
pushl
call
cmpl
jne
xor
add
inc
mov
cmpl
jb
and
mov
andl
jmp
xor
add
inc
mov
cmpl
jae
cmpl
jne
pushl
call
cmpl
jne
mov
inc
mov
jmp
mov
lea
mov
mov
mov
lea
mov
mov
mov
lea
mov
mov
mov
lea
mov
mov
mov
lea
mov
mov
mov
lea
mov
mov
xor
add
jne
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
imul
xor
add
lea
mov
add
mov
mov
xor
add
jne
mov
mov
mov
cmp
je
mov
mov
mov
cmp
jne
mov
mov
movsbl
xor
add
cmp
mov
mov
mov
je
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
xor
imul
add
lea
mov
add
mov
mov
xor
add
jne
mov
mov
xor
xor
add
add
cmp
jae
lea
mov
mov
movl
lea
mov
mov
addl
mov
xor
add
lea
mov
xor
mov
mov
xor
inc
incl
add
cmp
jb
jmp
mov
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
imul
xor
add
lea
mov
add
mov
mov
jmp
mov
enter
imul
mov
popa
bound
bound
xchg
xor
push
test
pop
mov
out
popf
into
ljmp
jns
jp
idiv
jp
enter
mov
cmp
pushf
lret
lahf
mov
cmp
icebp
pop
add
or
mov
sub
rorl
inc
mov
cmp
mov
insb
add
fisubrs
call
pop
jge
dec
lahf
cs
mov
ja
iret
add
data16
mov
aas
and
adc
lea
cmp
rcrl
mov
fldlg2
test
inc
mov
add
dec
push
into
cwtl
push
pop
incb
push
add
push
imul
pop
and
fnstcw
push
xchg
pop
push
xor
xchg
retw
push
gs
ret
call
sub
inc
jno
or
sti
mov
nop
loop
sti
lock
xchg
aam
daa
popf
in
iret
sbb
mov
mov
cmp
xor
ljmp
cwtl
cltd
fbstp
cs
push
nop
xor
roll
cmp
aas
lcall
pop
ja
mov
call
cs
mov
cld
or
ja
mov
mov
sub
inc
jp
sahf
in
and
and
jne
cmpsl
sub
pushf
or
push
cld
jb
ret
push
or
out
adc
pop
mov
mov
shrl
mov
jno
push
add
mov
cmp
pop
fbstp
repnz
adc
test
mov
inc
icebp
cmp
xor
or
add
jns
andl
xchg
and
ja
xor
or
stos
rcrb
jb
test
add
cmp
pop
rcr
test
push
js
movsb
xor
jno
es
jecxz
mov
adc
out
inc
clc
ret
xchg
and
adc
inc
push
lahf
fdivl
lods
mov
mov
adc
sahf
jbe
jo
inc
aam
cli
cmpsl
sub
and
shr
xor
int
fs
pusha
xchg
or
xchg
aam
push
aam
imul
mov
mov
sbb
lea
mov
inc
xchg
or
insb
sub
pop
mov
fdivr
or
pop
jl
gs
into
jne
dec
iret
sahf
mov
push
cmp
pop
rcr
faddl
cltd
enter
test
xchg
sub
add
sbb
shrb
flds
xchg
fists
mov
fbld
and
test
rcll
inc
outsl
mov
test
push
popf
gs
jb
add
dec
call
cltd
mov
sarb
mov
inc
sbb
inc
fiadds
mov
mov
arpl
out
in
mov
mov
inc
fcompl
push
or
mov
adc
adc
push
cwtl
cld
sti
test
sub
xor
xor
imull
mov
xor
jns
xor
inc
fnstcw
jnp
das
int
fwait
repz
daa
imul
mov
sbb
and
push
rcrl
pop
out
dec
loopne
xchg
leave
push
sub
mov
bound
or
xor
repnz
out
add
jg
les
cmp
mov
pop
mov
daa
mov
mov
test
and
dec
mov
nop
cs
mov
inc
or
movsb
jae
cltd
push
ret
shl
adc
mov
out
jne
adc
mov
inc
xor
xor
dec
ja
lret
or
popa
pushf
or
lock
fstpt
jl
fcompl
sub
leave
dec
mov
daa
stc
std
dec
pushf
lret
mov
nop
leave
inc
pop
jg
push
out
cli
add
sub
in
xor
ljmp
test
inc
shll
dec
mov
sbb
adc
je
add
sub
fnstsw
adc
test
mov
nop
and
jmp
sub
and
bound
dec
xchg
insl
mov
mov
jl
pop
rorb
pop
mov
rcr
or
jne
sub
mov
lds
nop
mov
push
xchg
repz
jns
mov
and
xchg
xchg
in
jp
and
cs
push
jno
jno
push
jg
add
jns
or
mov
pop
sbb
push
inc
aad
xor
iret
xchg
jnp
mov
fsubrl
pop
push
push
fistps
fs
pop
mov
dec
add
dec
push
test
shl
mov
and
mov
pop
add
stos
out
pop
sahf
notb
test
mov
arpl
jno
sbb
mov
test
sub
or
push
dec
and
sbb
ds
out
dec
jecxz
outsl
jle
cmovns
sub
pop
sahf
xor
das
mov
xchg
or
decb
dec
cmp
int
or
test
push
in
jns
or
jp
repnz
aaa
mov
repz
jne
cmp
movsb
mov
cmp
lods
inc
outsb
inc
mov
cltd
pop
cmc
lods
adc
jmp
shrb
mov
ret
push
push
sbb
std
jno
mov
mov
repz
adc
dec
ljmp
jp
mov
pop
fistl
mov
xchg
pop
orb
mov
sub
in
or
cwtl
rcl
or
cmp
hlt
xchg
stos
loope
sbb
in
clc
sbb
pop
or
mov
out
cltd
inc
decl
fstl
mov
stos
gs
aaa
shl
or
xchg
ljmp
mov
lods
or
pusha
out
sub
repnz
or
jg
imul
sbb
adc
inc
repnz
and
or
push
insb
xchg
shrb
and
mov
rolb
xlat
cs
repnz
or
aaa
pop
fsubrl
cmp
imul
push
fildll
popa
xor
inc
xor
or
adc
xchg
fs
pop
pop
aam
out
jnp
jo
sub
ljmp
xchg
push
or
mov
rorl
lea
scas
xchg
int
xor
adc
repz
mov
mov
fs
xchg
and
sbbl
aad
cmp
jmp
fdivrs
test
pop
add
sbb
inc
xchg
or
sar
sbb
insb
jmp
insb
insb
movsl
pop
xor
adcb
xor
pop
movsb
sahf
fcomi
outsl
mov
fcomps
pop
mov
jl
sub
ret
pop
jnp
mov
cmp
cmpb
test
xchg
pop
mov
shlb
fistl
fcmovnu
sub
mov
cwtl
cmpsl
out
fstpt
lcall
lods
jnp
js
inc
add
mov
mov
pop
inc
xlat
push
cmp
xchg
mov
ds
hlt
sahf
mov
push
cltd
insl
cmp
scas
add
ds
pop
cmp
inc
lcall
stos
xor
fisttpl
pop
sub
mov
repz
andb
jge
xlat
push
xchg
adc
fs
icebp
lcall
insl
and
rcrl
cmp
cmp
mov
push
or
mov
jl
jb
or
sbb
xlat
jmp
mov
popf
cmp
lea
jp
jecxz
mov
fiaddl
adc
aam
xor
jp
mov
pop
data16
jne
mov
jg
pushf
dec
std
imul
out
mov
jb
popa
sti
mov
add
mov
inc
js
cmp
fsubs
xchg
gs
mov
xchg
js
jno
xchg
mov
iret
cmp
aam
xor
mov
mov
push
dec
cltd
jg
xchg
xchg
cmp
nop
sahf
dec
icebp
js
xchg
inc
or
xor
xor
ret
sbb
sbb
decl
mov
in
scas
or
cmp
adc
jle
xchg
dec
cmp
or
aad
lret
xor
popf
vcmpnle_uqss
jecxz
sub
faddl
mov
xchg
fbld
xchg
mov
or
ret
ficoms
and
stos
and
or
enter
or
mov
in
pop
or
pusha
out
sbb
in
aam
mov
mov
xor
lock
in
ror
sub
andl
pop
and
mov
test
ror
pop
idivl
push
push
cmp
cld
mov
push
icebp
and
adc
lds
into
xchg
clc
jnp
dec
or
movsl
jmp
into
pop
mov
inc
xchg
daa
mov
pop
test
adc
adc
lcall
cmp
cmp
imul
cmpl
mov
enter
xor
lods
inc
lock
sub
add
ja
scas
arpl
and
mov
lea
and
popf
push
jne
mov
aad
hlt
and
or
xchg
in
xchg
pop
jne
pop
lock
out
push
outsl
out
xchg
push
jnp
and
sbb
mov
or
cmpsl
pop
sbb
cmp
or
repnz
jb
popfw
mov
mov
push
test
adc
cltd
mov
dec
dec
dec
pop
sub
or
cmp
loopne
adc
pop
mov
insl
movsl
mov
cmpsl
test
in
pop
push
mov
adc
bound
add
inc
push
inc
dec
dec
pop
bound
sub
xor
xor
jmp
aaa
or
xchg
mov
mov
lods
fstps
mov
and
sbb
mov
fsubr
fstps
sti
sbb
add
in
xchg
test
jne
mov
jnp
out
insb
movsb
mov
mov
dec
test
push
mov
mov
aas
out
add
int
or
addl
sbb
pusha
cltd
jno
jo
nop
notb
adc
cli
aas
fistl
lret
dec
sub
inc
mov
jnp
flds
daa
xor
int3
mov
repz
jl
adc
mov
insb
shrl
jnp
cmpsb
push
cmp
shlb
pushf
xor
adcl
lcall
sahf
mov
repnz
dec
xor
xchg
xlat
lcall
inc
lret
icebp
sbb
cmp
cmp
cmpsb
push
ss
sbb
xchg
sti
in
dec
adc
shlb
pop
loop
lret
sub
mov
mov
mov
cltd
loope
repnz
test
jb
fcoms
jge
lret
fidivs
mov
add
rep
xchg
fadds
lret
or
mov
and
pop
cmp
lahf
push
mov
and
adc
dec
lods
subl
loope
jmp
mov
jbe
stos
xlat
adc
pushf
out
enter
pushf
xchg
ds
or
inc
cld
out
cmp
mov
add
fnstsw
cwtl
adc
arpl
sbb
inc
and
push
fistps
cli
arpl
fdiv
jne
fs
or
sbb
mov
out
into
sub
xchg
call
pop
out
scas
cmp
and
and
add
jl
dec
bound
push
mov
jmp
sbb
imul
out
mov
push
fsubrl
imul
adc
ja
xor
insb
or
aas
inc
out
ret
push
mov
cmc
movsb
vcvtdq2pd
mov
fwait
imul
inc
xchg
mov
rclb
pop
cmp
dec
test
dec
sbb
cmp
xor
and
add
jno
test
pop
xlat
mov
fisubrs
lea
push
add
add
jge
mov
mov
jbe
mov
inc
ja
mov
outsl
push
or
lahf
insl
lcall
adc
or
out
aad
pop
into
mov
nop
iret
xchg
pop
das
fcoml
fldcw
dec
stos
rcrb
jl
mov
fs
pusha
mov
cltd
lds
arpl
push
loopne
jg
outsb
movsb
push
jo
out
idivl
and
aas
lcall
ret
scas
xchg
add
shlb
dec
into
test
sbb
loop
xor
or
lcall
dec
sub
sub
jp
xchg
dec
ss
cmp
aas
repnz
push
xor
stos
nop
mov
add
dec
mov
add
push
in
mov
sti
int3
stos
adc
pop
inc
repnz
ss
push
xchg
adc
jo
jecxz
and
mov
pop
jo
jg
ffree
fcmovne
popa
inc
xchg
adc
push
adc
mov
fs
lahf
clc
std
xchg
insb
insb
cmc
ret
pop
cmc
mov
ds
loopne
movsb
push
lods
test
test
fs
hlt
mov
icebp
hlt
push
mov
std
out
es
mov
cmp
movb
or
cli
xchg
xchg
mov
sbb
data16
push
iret
and
repz
add
aad
push
insb
pop
push
cld
in
sbb
lcall
jle
jb
dec
and
in
imul
or
arpl
mov
or
sub
rcll
xor
xor
inc
addr16
into
ss
int3
les
xor
push
imul
lods
in
test
cmp
popf
inc
push
ret
pop
outsb
jns
out
adc
lahf
in
test
int
pushf
mov
add
scas
cli
movb
ret
jmp
rorl
cmp
sbb
xchg
xchg
adc
ss
push
icebp
insl
mov
add
in
movsb
push
inc
xor
push
jae
cmp
dec
push
add
pop
ret
xlat
mov
and
fistpl
das
inc
ret
imul
sub
icebp
mov
sub
mov
lret
loope
rorl
out
pop
xlat
imul
xchg
out
out
inc
jp
inc
cld
pushf
and
and
xchg
mov
sbb
mov
in
jl
cmp
xor
sub
push
pop
jnp
and
xchg
pop
pop
add
xchg
inc
ljmp
push
jns
push
fadds
fdivrs
mov
addb
inc
sti
jno
out
xchg
sbb
loope
mov
cmpsl
inc
popa
shll
xor
and
inc
pop
inc
sbb
mov
cwtl
xchg
cmc
nop
fldl
add
enter
push
push
cmp
sahf
add
arpl
push
jg
imul
ja
sbb
xchg
pusha
xor
daa
jo
rclb
or
cmp
fmull
std
scas
sbb
fnstsw
mov
dec
sbb
mov
push
insl
mov
jne
cltd
dec
sub
push
repz
gs
fdivs
jo
and
sub
xlat
mov
lea
or
or
idiv
xchg
test
aad
and
push
and
mov
cmpsb
ret
ja
dec
sub
jle
lret
test
mov
push
jne
imulb
jle
xor
sbb
inc
push
stos
shrb
enter
inc
xchg
jnp
lcall
aam
pop
mov
pop
mov
pushf
fildl
push
mov
inc
adc
add
inc
stc
cwtl
and
xlat
cmp
in
jmp
jne
pop
ja
push
pushf
loop
adc
and
dec
mov
popa
sbb
lods
push
adc
jb
cmpb
bound
aas
add
mov
icebp
push
push
shlb
jecxz
push
or
mov
movsb
rolb
adc
xor
stc
ds
add
roll
inc
stos
mov
jb
mov
mov
clc
ja
sbb
ret
lret
mull
adc
sbb
push
mov
addr16
jl
push
sbb
push
cwtl
or
stc
inc
ss
adc
mov
jae
fstpl
add
dec
lods
mov
push
xchg
mov
xchg
xchg
inc
pusha
mov
jbe
sub
adc
nop
loope
inc
push
or
pushf
fmul
dec
popf
outsl
cmp
cltd
repnz
nop
dec
decl
pop
add
arpl
insb
rorb
fadd
arpl
xchg
xlat
pop
push
adc
sbb
out
lcall
jl
pop
pop
insl
push
dec
mov
or
xor
jo
mov
xor
and
and
mov
fdivs
shrb
adc
push
mov
inc
cmc
mov
jne
mov
mov
popf
ja
sbb
pop
mov
pop
add
mov
sub
and
jle
xor
mov
adc
and
bound
push
pop
es
fistl
mov
fbstp
lret
xor
inc
mov
dec
icebp
in
add
int
repz
int3
sbb
add
lods
lcall
push
aad
test
in
in
adc
push
xor
ljmp
dec
adc
clc
mov
mov
mov
enter
dec
adc
inc
repnz
scas
mov
wrmsr
mov
jecxz
mov
les
sbb
movl
repnz
roll
jae
add
dec
and
add
mov
jb
insb
icebp
test
mov
loope
insb
jmp
mov
xor
mov
add
repz
stos
adc
imul
mov
push
jecxz
and
es
fbld
scas
mov
lock
jmp
subb
xchg
dec
addr16
sub
add
es
shlb
rolb
and
pop
cltd
mov
cmc
mov
pop
dec
mov
out
and
pop
shll
in
std
mov
sbb
inc
scas
adc
push
das
rcl
fdiv
pop
test
add
and
xor
dec
leave
lock
lahf
pop
jmp
add
jbe
xchg
test
sbb
arpl
pushl
add
lcall
fildl
push
xlat
mov
dec
push
aaa
dec
inc
lcall
dec
mov
bound
int
hlt
adc
push
mov
cs
test
addr16
fstps
cmp
popa
jg
movsl
aas
test
add
imull
dec
dec
xor
sub
repz
mov
pop
outsl
ljmp
add
cmp
mov
push
jl
pop
std
sub
inc
frndint
cli
fnstenv
insb
insb
jge
mov
jp
cli
scas
jo
push
pop
jmp
push
mov
sbb
jno
loope
mov
loop
orl
mov
movsb
icebp
and
aas
sub
scas
ss
lret
jl
xacquire
gs
dec
add
in
mov
push
push
jno
sbb
aam
rorb
or
in
push
sar
sbb
ja
push
add
ja
xor
loope
mov
fnsetpm(287
cld
imul
sbb
adc
and
xor
ja
xor
mov
pop
aas
push
pop
jb
adcl
jl
cld
adcb
xor
mov
pop
inc
lea
pop
imul
stos
fsubs
push
mov
lahf
out
mov
lods
fwait
jmp
dec
loopne
cmp
stos
mov
lret
mov
lcall
lcall
dec
lahf
jae
push
jns
dec
mov
enter
lds
or
leave
mov
shl
cs
loopne
scas
daa
push
icebp
and
movsb
dec
gs
pop
cmp
push
sub
test
fdivrl
and
sub
cli
outsb
outsl
xchg
enter
dec
repnz
jecxz
push
add
loop
inc
cmp
mov
clc
add
xchg
lret
adc
das
lret
orl
lcall
sub
push
int3
fistpll
stos
xchg
or
pop
popf
aaa
adc
dec
inc
sub
add
into
pop
jmp
jnp
bnd
aad
es
cmp
dec
lret
push
inc
sti
sub
xchg
and
std
cmpsb
xchg
in
pop
fwait
icebp
pop
adc
insl
fisubl
jnp
mov
scas
fs
ja
pop
in
adc
sbbb
push
call
mov
jmp
dec
scas
mov
mov
cmpsb
outsl
pop
jno
add
out
jae
scas
pushf
addr16
addb
push
fwait
mov
adc
inc
xor
cmp
push
mov
scas
push
ret
jp
mov
pusha
pop
out
xchg
cld
out
push
sbb
in
jg
cmpl
mov
lea
adc
ss
fdivr
cmp
push
and
pop
loopne
jmp
dec
mov
mov
insb
test
in
icebp
mov
pusha
jbe
in
test
cltd
pop
inc
ficomps
mov
mov
mov
sti
xchg
add
inc
push
xchg
pop
movsl
xchg
cli
int
mov
add
jno
xor
rcrl
push
adc
iret
imul
pop
fsubl
adc
jbe
inc
xor
es
or
in
data16
xor
sbb
les
shlb
stc
and
mov
ss
cwtl
movsl
hlt
loope
jle
or
sub
iret
inc
decb
add
sbb
push
mov
or
dec
and
push
adc
pop
cli
stos
cmpsl
or
mov
inc
adc
call
sbb
sub
mov
cld
mov
sbb
clc
add
enter
ret
mov
xchg
or
xor
jmp
adc
or
hlt
pop
pop
adc
lods
add
pop
fucomi
push
sahf
and
aam
clc
leave
sbb
outsl
fistps
cli
xchg
sub
in
imul
les
jl
addb
out
xchg
leave
push
mov
clc
inc
jae
je
mov
rcll
add
or
cmp
clc
repz
sub
sub
and
mov
stos
push
push
cmpsb
fsubrl
jnp
xor
mov
lea
sbb
cld
sbb
pop
in
and
or
cs
xchg
cmp
sub
add
push
pusha
mov
pop
inc
ds
and
test
enter
ror
mov
push
push
mov
jp
fisttps
pop
sub
insb
xchg
add
inc
hlt
fwait
push
inc
sub
push
rolb
and
mov
arpl
inc
or
jmp
scas
push
clc
out
and
in
ret
aad
and
mov
fsubl
push
or
gs
jecxz
mov
xchg
arpl
iret
jbe
outsb
imul
cmpsl
jo
jmp
xor
dec
arpl
cld
fs
lret
pop
cli
stos
scas
mov
dec
lahf
pop
pmullw
adc
mov
or
repnz
fsubrl
push
mov
mov
push
in
loope
js
or
faddp
xchg
ret
pop
sti
mov
jp
lcall
pushw
hlt
or
mov
mov
push
in
dec
fiaddl
roll
jb
sbb
push
mov
mov
push
pushf
inc
sahf
mov
or
fcomip
dec
cld
sub
call
or
dec
cmp
add
mov
mov
add
and
pop
and
fdivr
push
pop
xor
dec
and
imul
and
add
jne
ret
aad
adcb
push
sbb
xor
sbb
mulb
cmp
int3
fisubrs
cmc
mov
push
and
ret
xchg
inc
cli
sbb
pop
jae
jmp
fisttpll
jg
test
cmp
aaa
fiaddl
loop
adc
addr16
xor
imul
ja
dec
nop
cmp
es
popf
sbb
pop
ret
push
insl
push
cmp
lret
into
push
pop
dec
shll
pushf
push
pop
and
or
cmc
fcmovne
push
scas
mov
dec
loop
aad
xchg
push
or
add
adcb
les
into
dec
pop
adc
jnp
mov
fnstcw
jo
adc
dec
addr16
or
mov
out
pop
inc
divl
jmp
les
and
mov
push
jb
xor
mov
add
mov
lods
and
push
push
loope
or
push
cltd
ret
aam
adc
pop
mov
lds
mov
flds
lahf
negb
popa
lea
fsubs
add
pop
pusha
fwait
popf
iret
sahf
mov
out
test
sub
call
cmp
xchg
pop
ret
add
out
repz
xor
es
pop
push
mov
fisttpll
daa
cmp
mov
dec
jns
out
push
rcll
clc
inc
mov
pop
push
xchg
inc
cmpsl
enter
dec
sbb
dec
add
mov
fimull
mov
mov
fcmove
jb
mov
int
jne
pop
inc
repz
les
pusha
aam
addr16
sbb
push
inc
mov
mov
or
movsl
add
lahf
mov
popa
leave
jne
icebp
mov
jge
sub
xor
fdivr
dec
mov
push
scas
add
addr16
enter
xor
sub
sbb
daa
test
cmp
mov
imul
inc
mov
repz
xlat
insl
daa
outsb
int
add
add
add
adc
xchg
insl
mov
mov
mov
jmp
xchg
dec
sub
mov
aas
repz
out
fdiv
loop
dec
and
iret
test
or
dec
aaa
inc
and
inc
push
pop
mov
jmp
mov
jmp
cmc
adcb
shrb
aad
les
repnz
mov
cld
jo
adc
leave
insl
negl
mov
jbe
add
inc
jae
insl
aam
jns
pop
ja
add
pop
push
add
push
jl
test
adc
int3
cltd
movsb
adcb
pop
pop
fcoms
insl
xor
ja
push
leave
push
lock
fucompp
movb
fwait
adc
fsubrl
lods
sub
ret
jle
xchg
xchg
lock
in
push
nop
in
pop
push
ljmp
into
sbb
lahf
insb
xor
cmc
shlb
cmc
shll
sbb
jge
sbb
add
imul
jecxz
mov
xor
adc
or
je
adc
loopne
mull
xchg
paddd
or
rcrl
or
mov
popf
xchg
in
lock
cmp
cmp
sarb
je
mov
push
arpl
mov
scas
decl
rorb
adc
xchg
cmp
jbe
mov
push
jle
jge
adc
fsubr
mov
aam
mov
aas
out
rep
and
fidivs
addb
and
or
and
orl
push
fldcw
and
sti
sub
and
cmp
or
or
pop
cmp
xchg
xchg
lods
icebp
and
cmc
mov
leave
jge
sbb
xchg
and
mov
fmulp
int
jne
mov
fcomps
add
pop
repz
sbb
xor
jmp
es
cmp
sbb
or
sbb
or
fildl
xchg
and
mov
cmp
sub
xchg
xchg
mov
hlt
cltd
repz
push
mov
js
sub
insl
xchg
lds
jl
xchg
loop
dec
jo
pop
outsl
nop
data16
adc
pop
cmp
xchg
cmp
add
scas
repz
cltd
cli
popa
aad
lods
cmpsb
jge
sarb
xor
aaa
cwtl
int
les
out
subl
in
inc
sbb
cmpsl
mov
arpl
mov
dec
divl
cmp
and
rol
imul
pop
pop
bound
push
sbb
lret
inc
divl
ljmp
add
or
jle
lea
push
adc
in
imul
in
repnz
pop
lock
addr16
cmp
adc
scas
bound
mov
mov
jp
or
sub
jle
int
dec
sub
or
xchg
xor
cli
mov
xlat
daa
jl
adc
mov
cltd
daa
pop
in
aam
dec
pop
pop
and
ljmp
dec
sbb
in
add
sbb
mov
popf
adc
jo
jns
and
in
jl
mov
sbb
xlat
outsl
mov
push
adc
push
sbb
pop
pop
add
adc
or
mov
mov
popf
push
fimull
mov
sub
scas
nop
cmp
test
rclb
xor
ss
call
xchg
daa
xchg
mov
loope
mov
mov
mov
lea
subl
jns
test
jb
clc
call
sub
adc
ret
lret
pusha
mov
push
roll
push
xchg
icebp
outsb
lret
push
adc
cltd
lret
inc
data16
loopne
xchg
adc
ror
jb
jnp
add
jmp
or
shrl
lret
inc
lret
mov
jle
ds
push
jecxz
or
lds
loopne
or
into
jp
mov
add
jg
es
fstpl
int
gs
das
jno
or
pop
outsb
xchg
or
std
inc
mov
push
mov
adc
mov
ds
mov
adc
lods
ret
lods
mov
loop
xchg
out
jmp
cli
aas
cmp
sbb
out
lock
hlt
jg
sbb
shll
xchg
or
adc
and
scas
out
add
cmp
xchg
inc
movsb
mov
fmul
pop
in
repz
sbb
notl
in
sti
dec
sub
repz
sbb
pop
addr16
test
and
mov
or
movsl
sub
movsb
push
mov
jne
cld
jmp
shrb
out
add
mov
push
sub
or
add
push
cs
adc
lock
xchg
mov
or
rcll
mov
stc
loopne
xor
fisubrs
push
mov
adc
add
into
sbb
cmpsb
fstp
push
mov
sbb
out
into
sub
xchg
jbe
jnp
loope
sub
ds
rcrb
mov
cmpsl
push
xchg
cmpsl
ljmp
push
divl
leave
add
jle
rcll
dec
and
daa
dec
inc
xchg
mov
cmp
xchg
inc
out
addb
mov
shrl
pop
mov
push
fs
mov
xchg
add
sub
inc
add
test
or
fcomps
icebp
push
add
xor
out
out
inc
jge
fcompl
test
pop
sub
pop
xor
xor
jg
shlb
jb
aad
fs
ret
jno
sub
pop
mov
mov
mov
adc
lods
in
xchg
xchg
add
add
rolb
in
pop
fimuls
sub
add
dec
and
inc
repz
mov
idivl
outsb
ss
loopne
xchg
shrb
addb
adc
lods
push
mov
cmp
inc
and
call
mov
pop
mov
test
into
daa
test
inc
nop
iret
adc
mov
or
and
mov
dec
sarb
jg
mov
ds
push
insl
xorb
add
jne
mov
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
imul
xor
add
lea
mov
add
mov
mov
xor
add
jne
mov
mov
xor
lea
mov
incl
mov
xor
add
jne
jmp
mov
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
imul
xor
add
lea
mov
add
mov
jmp
cmpsb
or
imul
cmpsb
jbe
fsubs
cmp
bound
adc
cmp
push
pop
jmp
iret
mov
fldcw
dec
cmpsl
jns
in
and
daa
mov
or
or
into
sub
orb
cwtl
aas
movsb
push
jp
mov
rorl
rol
lahf
cli
cs
ret
shll
out
sub
cmp
movl
es
jae
and
roll
mov
inc
dec
adc
shrl
ljmp
cmp
lcall
mov
mov
mov
mov
sahf
movsb
arpl
add
xchg
dec
lahf
jb
pop
mov
ret
lahf
dec
sahf
pop
adc
aam
outsb
cmp
inc
rcll
xor
add
insb
scas
inc
call
xchg
sub
pop
mov
stos
outsl
jmp
je
mov
out
cmpsl
and
jae
sbb
xchg
push
push
push
or
lock
lret
ficompl
test
mov
push
or
fnstcw
mov
and
insl
ficoms
dec
notl
cmpsb
cmp
cmp
subb
gs
fists
fidivs
xlat
in
std
addr16
sbb
movsb
push
add
xchg
in
in
movb
dec
outsl
adc
inc
dec
xchg
fcompl
in
xor
shll
cwtl
cmp
dec
in
loop
call
mov
mov
sub
jo
in
or
repnz
addr16
pop
pop
pop
cwtl
jle
or
jg
sub
push
aad
sbb
sbb
aad
cmpsl
loopne
ds
inc
mov
cmp
fcoml
inc
ret
xchg
cmpsl
inc
faddl
mov
sub
fs
pop
lods
mov
repnz
loopne
les
dec
repz
lret
out
fistps
lret
in
iret
cmp
jle
or
mov
ljmp
loopne
mov
adc
fisubs
into
pusha
sub
lods
xor
adcl
in
jne
subl
and
and
rorb
dec
sbb
and
xchg
insl
and
adc
call
ret
idivb
orl
mov
mov
shrl
push
add
and
push
pop
clc
mov
lock
in
push
mov
aas
test
gs
ficomps
icebp
sub
push
and
fnsave
imul
cli
xchg
fadd
scas
mov
dec
sahf
outsb
stos
xor
sar
cmp
sub
in
xchg
xchg
leave
mov
gs
dec
xor
pop
push
loopne
mov
rol
jl
loop
adc
jge
mov
dec
mov
adc
sahf
int
imul
in
in
pop
sub
je
add
mov
or
idivb
fsts
in
sbb
mov
gs
and
cmp
mov
push
dec
or
dec
pop
pushf
enterw
aas
pop
fwait
and
jg
pop
ret
add
push
lods
and
mov
es
daa
adc
dec
mov
in
adc
lods
sub
mov
jl
pop
adc
sbb
shrb
sbb
cld
jle
or
push
xor
iret
ss
cmp
and
data16
sahf
iret
xor
dec
ljmp
imul
ds
ss
jbe
push
add
inc
insl
inc
and
data16
push
adcb
lods
jb
in
push
push
mov
cmp
push
aam
push
cmp
add
xchg
lods
lods
xor
negb
call
or
mov
cmp
mov
stc
shr
test
mov
inc
fmull
mov
mov
rcrl
sbb
mov
shl
inc
fsub
jg
push
ljmp
mov
sarb
ja
bswap
sahf
rcr
and
sbb
sbb
push
stos
stos
dec
movsl
daa
and
xor
or
and
ljmp
imul
push
js
adc
cwtl
insb
movl
iret
loop
jmp
sbb
pop
sub
pop
arpl
push
fcmovu
or
jl
pop
adc
push
mov
pop
or
jno
push
push
pop
pushf
mov
jmp
movsb
push
xchg
xchg
sub
pushf
cwtl
fsubr
add
das
xor
push
pop
stos
and
int
push
xor
dec
inc
cs
aad
sub
and
cli
cmp
sub
inc
sub
xor
jno
in
xchg
add
jnp
addr16
mov
jge
jg
cmp
flds
ret
sahf
xor
fidivrs
mov
outsb
xor
jmp
pop
rcll
jmp
pop
sbb
jg
or
ja
sub
add
cltd
ds
push
xchg
shufps
call
pop
cmp
shll
xchg
addl
adc
outsb
out
lds
jnp
imul
add
out
sbb
pop
mov
xor
insl
nop
cmc
lods
xchg
push
dec
pop
shrb
loope
iret
popa
xor
and
sbb
jp
xor
push
mov
jp
mov
icebp
mov
int3
lods
imul
jle
test
and
in
lods
and
push
add
mov
push
jnp
dec
mov
lods
mov
ljmp
in
push
ljmp
cmp
mov
and
adc
scas
push
pop
movsb
or
je
leave
repnz
lcall
in
pop
mov
cli
cld
jno
enter
ret
jo
test
cmp
testl
int3
pop
int
out
xor
push
ret
cs
rcrb
or
test
ljmp
gs
xchg
aam
orb
stc
jae
test
mov
dec
jecxz
repnz
mov
jne
mov
mov
testl
sbb
xchg
imul
into
jnp
or
sti
gs
popf
std
and
push
imul
inc
jne
pop
inc
mov
cmp
aaa
sub
test
test
popf
jecxz
dec
in
mov
push
xor
sbb
in
add
ds
call
out
adc
test
xchg
jg
mov
xchg
jns
mov
sub
shl
iret
mov
cmp
jle
in
xchg
mov
pusha
test
xor
aam
push
pop
and
js
xchg
fdivl
fmull
fsubrs
sub
test
mov
push
mov
jmp
push
cmp
mov
fcompl
data16
xor
jo
push
push
push
imul
bound
test
jo
xorl
fdivrl
std
and
enter
sbb
sbb
xchg
dec
lcall
mov
cmpsb
add
add
or
add
push
je
dec
sbb
rcrl
in
lea
scas
nop
jg
movl
inc
xor
lea
fdivl
mov
lret
inc
ss
push
sub
mov
icebp
jecxz
loopne
addr16
jmp
lcall
rcll
lods
or
sti
and
push
mov
insl
mov
cld
xchg
cmp
or
push
add
sysenter
loop
stos
test
orl
jecxz
xor
or
add
jecxz
mov
das
leave
push
nop
imul
mov
in
mov
push
push
add
pop
popf
loop
insl
mov
scas
sub
cli
xchg
adc
pop
jns
inc
xlat
lea
xchg
mov
push
sbb
stc
mov
movsl
mov
mov
js
inc
in
loopne
roll
inc
insl
adc
cmc
hlt
or
pushf
jl
mov
ja
sub
sarl
and
sub
int3
testb
jmp
imul
fdivr
sub
mov
xor
lods
cmp
lods
cmp
into
pop
pop
stos
jmp
jecxz
cmp
test
lahf
add
xchg
mov
stos
or
xchg
rcr
cmp
popf
xor
into
rcrl
push
add
push
stc
jno
popf
icebp
enter
cmp
mov
or
lock
sub
lock
push
and
add
pop
fildll
mov
add
dec
push
xor
aam
movsb
lcall
jno
xor
pop
add
das
aam
outsb
sbb
movsl
pop
addl
movb
bound
sub
dec
xlat
lods
or
cmp
or
fsubr
int
mov
or
pop
jl
mov
inc
bound
mov
jl
xchg
pop
push
adc
jg
and
lcall
pusha
mov
sub
sarb
in
adc
xchg
jo
in
ljmp
jp
mov
add
arpl
sti
ds
cmp
bound
les
pop
xor
sbb
movsl
push
jle
dec
mov
push
push
inc
jo
fstpl
mov
and
addb
ficompl
mov
sub
dec
mov
ret
cld
bound
lods
pop
andb
and
mov
push
sbb
shrl
or
dec
add
dec
pushl
into
xchg
push
mov
out
adc
inc
in
pop
push
pop
xchg
notl
sub
mov
inc
call
mov
push
and
ljmp
push
xlat
xchg
jno
xchg
fsubl
or
sbb
fildll
push
testb
xchg
mov
jns
shrb
inc
xorw
mov
fisttps
mov
pushf
pop
push
inc
sub
ja
fs
add
int
scas
jnp
adc
or
repz
insb
pop
imul
mov
mov
jae
callw
test
es
mov
mov
lcall
ljmp
push
stos
mov
adcl
adc
fstl
push
dec
pop
cld
imul
cmp
sub
movb
push
loope
push
dec
sub
push
movsb
js
mov
decl
pop
dec
push
mov
fimuls
je
repnz
loopne
jae
es
fdivl
push
mov
dec
or
mov
jg
xchg
dec
push
fs
jns
cmp
push
popf
or
mov
or
andb
mov
lret
cltd
ljmp
or
cli
push
stos
scas
shrb
mov
stos
mov
insb
lds
jae
pop
adc
mov
fcoml
inc
and
fwait
stos
mov
dec
jne
fimuls
cmp
jae
pop
cwtl
sbbl
test
sub
in
xor
rcll
test
inc
mov
mov
inc
cwtl
xor
push
sub
lret
sub
sahf
aad
mov
push
or
les
jns
cmp
xor
aad
fldenv
cmp
rol
sub
in
iret
sti
aam
cld
outsb
mov
adc
test
sbb
xchg
adc
int3
and
cmp
push
cmpsl
ret
push
or
fistps
aad
add
push
jl
test
inc
add
stc
ret
in
push
test
add
out
stc
adc
mov
sbb
hlt
rcl
jl
cmp
sbb
jnp
jnp
dec
shrl
add
fidivrl
push
jno
mov
cmp
test
mov
fwait
pushf
push
xor
mov
notl
clc
test
mov
popa
arpl
jle
movsb
jae
loop
xor
cltd
lret
mov
sub
shr
inc
pop
mov
gs
repnz
cwtl
lds
pop
or
inc
sbb
add
mov
int3
ljmp
xchg
enter
imul
xlat
mov
dec
daa
movsl
push
pop
ds
xor
jp
dec
jle
jg
in
mov
push
xor
sub
ss
push
test
xorl
popf
aaa
bound
lahf
jge
subb
movsl
jge
sbb
jns
xor
cld
sbb
daa
mov
loope
lcall
push
pop
jle
ja
cmp
pushl
fdivr
scas
aam
movsl
and
lds
xchg
or
fcomps
dec
pushf
jo
popa
pop
pusha
dec
mov
test
pop
pop
inc
xchg
add
sub
movl
jmp
jecxz
rolb
sub
loopne
fwait
dec
or
repnz
mov
mov
sbb
mov
daa
dec
xor
pusha
mov
test
lcall
inc
cmpsl
js
mov
or
sbb
mov
push
jge
cld
insl
jo
cmc
int3
rcll
out
ds
cmp
add
in
adcl
jecxz
jns
je
jne
and
jge
push
pop
pop
jno
les
fs
cmp
scas
inc
test
push
cli
pop
pop
lods
insb
bound
icebp
jmp
mov
lds
xorl
enter
push
push
pop
cmc
push
mov
mov
cli
ss
divl
or
loopne
push
lods
jnp
mov
and
mov
lock
mov
mov
popa
push
fwait
stos
rdmsr
in
pop
call
sahf
jb
aas
dec
stos
or
sub
jg
fsubl
inc
mov
or
sbb
inc
les
fsubs
insl
mov
sbb
ss
ljmp
lar
ret
mov
fcoml
add
adc
mov
pushf
mov
mov
leave
mov
xchg
dec
push
push
pop
jmp
fcmovnbe
daa
cmp
jae
cmp
lods
xor
imul
aaa
ja
lea
push
mov
lea
mov
js
cltd
mov
sbb
ljmp
sub
jecxz
idiv
addb
data16
fsubrs
xlat
loopne
dec
xchg
mov
mov
pop
or
xchg
popa
shll
dec
out
icebp
mov
xchg
pop
icebp
in
ret
push
shrb
mov
dec
mov
sbb
jbe
insl
cmp
stos
call
mov
call
out
sarl
or
jb
xchg
sarl
sbb
lret
push
mov
stc
jo
mov
mov
icebp
je
push
push
sub
out
push
cmp
mov
imul
sub
dec
subb
and
sub
sti
je
adc
arpl
shr
sub
mov
pop
cmp
cmp
mov
push
pop
sti
das
jbe
xor
icebp
fisttps
popa
and
fcomps
xchg
loope
cmp
add
orb
pusha
pop
lea
in
cld
pusha
jb
mov
fnstcw
sahf
jns
imul
mov
scas
xchg
xchg
or
and
fldcw
mov
add
mov
pusha
push
sarl
adc
dec
adc
dec
ss
arpl
fsubrs
negb
in
sbbl
or
xor
fimuls
xchg
fdivs
mov
xlat
pop
xlat
sbb
xlat
cmp
je
test
sub
arpl
xor
mov
ret
pop
psllq
pop
xchg
dec
push
test
inc
jo
inc
jge
jnp
outsb
mov
mov
and
lret
jmp
cmc
jno
popa
loopne
loop
arpl
lock
sub
cmp
adcb
mov
add
jecxz
cmpl
mov
mov
addr16
outsl
aam
mov
aad
fbstp
jl
fisubs
jb
xchg
jns
outsb
dec
icebp
dec
daa
test
xor
inc
push
pop
rcr
push
cmp
xchg
pop
frstor
push
repnz
xchg
adc
add
cmp
mov
loop
adc
and
xchg
xlat
in
punpckhdq
gs
sbb
imul
mov
jno
sub
ret
add
pusha
jmp
pop
push
fs
cmc
jle
mov
push
dec
aad
fwait
rol
aaa
or
scas
outsb
jp
inc
dec
mov
lds
adc
std
frstor
jno
aas
adc
push
mov
pop
and
movsb
xlat
lock
push
je
mov
in
jne
in
fidivrs
leave
push
andl
cmp
push
repz
cmp
mov
sbb
shl
sbb
xchg
scas
lahf
or
xchg
xchg
js
add
cmp
nop
testl
mov
pop
cmp
arpl
sub
or
xchg
dec
or
cltd
dec
mov
aam
or
js
dec
cmp
mov
push
jo
ljmp
std
pop
xchg
lret
lds
xor
push
lahf
lret
sub
adc
insb
repz
std
lcall
jae
out
xor
out
xchg
push
inc
jge
jl
call
push
dec
imul
or
loope
pop
xchg
adc
dec
in
pop
cmpsl
and
stos
arpl
int
insb
test
or
sub
insl
push
pop
rcll
sbb
cmpsl
mov
lret
stos
adc
sub
mov
popf
daa
pop
push
add
xchg
jne
out
arpl
push
add
jbe
scas
adc
jno
and
faddl
int3
mov
dec
jge
fldl
jecxz
cmp
push
scas
push
fiaddl
aam
imulb
xchg
pop
adc
xchg
and
xor
mov
out
js
sbb
push
xchg
in
aam
sub
in
imull
xchg
mov
jns
cmp
pcmpgtd
jg
andl
cmp
scas
rcll
jecxz
push
jo
push
decb
inc
nop
jle
pop
mov
cltd
clc
enter
pop
int3
cmpsb
inc
jmp
cmpsl
daa
adcb
in
imul
fcoms
and
push
and
or
mov
pop
outsb
add
xchg
cltd
pop
subb
pop
adc
push
jno
fists
dec
hlt
sarb
dec
or
shrl
xor
mov
in
pushf
add
sbb
stos
lret
idivl
add
lret
or
hlt
xor
add
xor
jge
adc
inc
repnz
and
mov
pop
test
cmp
adc
xor
sub
push
dec
mov
push
push
mov
xchg
movsl
insl
mov
js
leave
dec
insb
in
pop
mov
adc
jne
push
pushf
aam
push
shlb
jne
pop
clc
mov
stc
and
rcll
xchg
fs
lcall
push
mov
jbe
in
push
mov
andb
fdivs
cmpsb
cltd
sbb
dec
sbb
push
sti
jne
mov
sbb
sbb
mov
cmp
add
inc
dec
jecxz
or
inc
push
loop
and
pop
leave
fwait
pop
adc
and
xor
je
and
fldl
pop
push
jg
adc
sbb
push
sub
ret
adc
pusha
mov
stos
mov
mov
lahf
push
add
lock
adc
adc
or
xor
ret
adc
xor
cwtl
mov
bound
and
iret
cwtl
fistps
push
push
div
jle
push
lock
mov
ror
mov
lret
jo
cmpsl
dec
sbb
mov
add
stc
outsl
in
inc
xchg
cmp
mov
adc
xchg
add
inc
jmp
jl
movsb
adc
adc
imul
dec
push
inc
out
movl
test
jo
ret
inc
mov
xor
sub
dec
pop
sbb
lret
mov
pusha
xor
cmp
scas
sub
sbb
xor
and
sub
movsb
or
fdivl
jo
xor
sbb
int3
pop
cmp
and
popa
leave
cs
mov
jmp
ljmp
shll
pop
mov
jns
mov
xchg
push
lods
sub
movsl
or
inc
add
xchg
lods
jmp
push
cwtl
cs
mov
cs
mov
dec
push
push
icebp
sti
out
fnstsw
xor
mov
adc
out
mov
pop
out
pop
pop
xchg
jno
add
imul
orl
loopne
inc
lcall
std
xchg
movsl
push
ja
pop
in
loop
insl
ror
mov
inc
loope
sahf
push
and
jnp
adc
imul
dec
add
insb
outsl
jg
shlb
mov
icebp
push
lcall
fisubrl
push
lea
pop
push
cmpsb
mov
rclb
adc
test
dec
fcoml
ficoms
repnz
mov
mov
sub
clc
orl
pop
insb
enter
and
push
pop
dec
leave
cwtl
jmp
cltd
or
ret
xchg
gs
sub
xor
xor
sub
dec
jo
shl
jne
sub
cmpb
push
push
popf
mov
push
out
int
xor
pop
fsqrt
repnz
stc
mov
jge
mov
add
fistl
das
int
inc
enter
sub
testb
dec
mul
push
inc
lds
cmp
pop
add
aaa
or
push
jae
mov
and
sub
mov
decb
test
xchg
pop
and
lret
push
aas
sbb
call
pop
pushf
imul
or
outsb
fstps
dec
cld
adc
call
test
jp
xchg
insl
mov
lcall
push
jle
fnstsw
ret
xor
in
nop
fisubrs
call
inc
ja
into
jg
cld
pop
or
icebp
push
xor
clc
inc
push
push
std
sbb
jl
mov
jno
movb
repnz
adcb
xchg
mov
fnstsw
cmpsl
cmpsl
ss
inc
and
sbb
dec
or
js
mov
imul
sbb
je
dec
jmp
sbb
push
push
jge
ror
pushf
dec
sub
out
icebp
aas
das
cmp
mov
xchg
xchg
inc
add
bound
insl
iret
lahf
adcl
out
mov
push
mov
mov
in
fadds
push
push
pop
add
push
and
mov
push
push
dec
dec
rorb
or
xchg
jl
dec
xor
cmp
outsb
lcall
imul
cmp
imul
pusha
sti
mov
cwtl
loopne
push
popf
and
or
loope
mov
jno
add
pop
add
xor
xchg
and
stos
into
jl
mov
add
and
sub
insb
inc
mov
mov
jp
jne
mov
filds
aas
call
shrl
mov
jns
mov
add
call
or
out
imulb
push
ljmp
xchg
xchg
hlt
cmp
aad
dec
sub
jae
add
clc
shlb
dec
inc
icebp
sbb
add
aad
popf
daa
mov
pop
lods
loopne
mov
clc
loop
lock
push
sbb
xor
bound
dec
jne
imul
mov
mov
sar
lahf
shlb
push
mov
repnz
pop
jnp
or
std
std
imul
sbb
dec
dec
xchg
and
sbb
xchg
ss
dec
xor
call
fs
movsb
mov
xchg
adc
and
mov
dec
fmull
sar
xor
jp
xor
rcr
sub
jns
outsb
enter
ror
mov
cs
std
jno
push
fcompl
mov
xor
iret
adc
dec
fdivl
cmp
shrb
js
xor
rolb
jmp
push
in
jae
rol
out
mov
cmpsb
sbb
dec
insl
iret
or
pusha
data16
dec
dec
lahf
sbb
iret
add
xchg
pop
cmp
jecxz
daa
inc
aaa
insb
push
lahf
divl
and
repnz
fmul
push
dec
imul
xchg
in
xchg
sub
lods
stos
ret
js
fmull
mov
and
add
in
mov
mov
das
dec
dec
test
stos
mov
lods
outsl
sbb
icebp
adc
scas
cmp
movsb
inc
sub
xchg
jecxz
mov
inc
insl
loop
inc
in
inc
das
popa
ja
jl
mov
push
ljmp
xor
push
push
cli
roll
in
xor
movntq
out
mov
in
adc
adc
or
rorl
mov
mov
cltd
shlb
add
fidivl
jp
jp
jle
xor
cmpsb
les
shll
scas
aaa
push
jnp
out
jecxz
jb
lock
jno
fdivs
and
inc
faddl
or
lcall
mov
jne
push
fs
pop
dec
dec
xchg
mov
xor
mov
rclb
sub
stos
iret
mov
repnz
cmpsl
or
push
xchg
scas
adc
dec
sbbl
adc
jbe
xchg
mov
nop
mov
xor
test
das
ljmp
sub
xor
sbb
adc
addl
jmp
insb
dec
adc
pop
cld
xchg
lds
fdivr
scas
rorl
jnp
into
push
xchg
cmp
fs
out
cmp
xor
lods
movsl
icebp
fistpll
cmp
ds
fiadds
push
js
insl
inc
pop
jle
popa
jno
div
mul
or
pop
mov
sbb
dec
insl
jnp
loop
sbb
ret
lds
sub
call
inc
sbb
sub
imul
mov
xor
push
cmp
mov
nop
mov
cs
out
fsubr
sub
dec
out
adc
stc
repz
aam
push
test
leave
es
push
mov
addr16
out
xchg
pop
rol
jns
sub
or
dec
aaa
in
stos
ret
js
nop
mov
clc
sub
aam
pushf
mov
icebp
push
xchg
ret
stos
int3
push
cmpsl
movsb
inc
jle
jp
pop
sub
xor
in
mov
jns
push
add
aad
lret
sub
xchg
lods
in
cmp
inc
inc
jecxz
sub
or
sub
idivb
jne
jl
cmp
loope
gs
scas
stc
inc
in
in
stos
and
shll
inc
mov
cmpsl
popa
adc
xor
or
xor
adc
cmpsl
test
ds
adc
jge
mov
pop
mov
mov
iret
out
or
push
sub
inc
stc
fidivrs
lods
mov
lret
xchg
or
and
cmc
adcb
jbe
mov
sahf
les
leave
ret
mov
in
fmulp
addl
cwtl
ss
fcmovbe
pop
popa
mov
or
push
jge
cmp
push
sub
pop
cli
mov
lahf
pop
push
flds
inc
pushf
cmp
sub
sarb
popa
sbb
pushf
dec
mov
cmp
adc
push
xchg
sub
pushf
bound
fucomp
sbb
in
leave
data16
mov
loopne
sub
mov
mov
sbb
dec
sbb
fs
xor
sbb
dec
loop
jecxz
and
pop
pop
mov
lea
ss
sbb
cmpsb
jb
or
stc
ror
mov
das
in
inc
or
inc
dec
icebp
xchg
sbb
icebp
dec
jecxz
adc
and
sub
aas
cmp
lcall
sub
loopne
sub
iret
jnp
call
in
in
xchg
cmp
mov
sbb
pop
scas
mov
out
push
lods
outsb
push
pop
adc
mov
pushl
pushl
js
xor
jmp
cmpl
mov
enter
pusha
sahf
rcr
jne
je
sbb
aam
adc
in
and
dec
dec
lea
fs
jno
nop
push
fsubs
xchg
or
inc
pop
mov
adc
loop
xchg
xchg
js
or
lea
mov
pop
sub
repz
adc
pop
push
inc
mov
ret
xor
jo
movsl
dec
xchg
cmpb
xlat
sarl
orb
xchg
ja
rorb
push
incb
jbe
mov
fisttps
movsl
ficompl
rclb
mov
jmp
or
push
sbb
dec
adc
call
or
cmpsl
ljmp
xor
cmc
and
cmp
add
sbb
cmp
pop
shll
cmp
mov
pop
addr16
jnp
jae
sbbb
cld
add
pop
mov
add
sub
nop
outsb
sbb
ret
pop
rol
and
shrb
sahf
cmp
dec
rol
mov
inc
xchg
les
ret
mov
xor
jnp
dec
xchg
mov
and
jae
jle
mov
push
loopne
xor
push
and
xchg
cmp
fwait
test
cmp
sar
das
xor
mov
nop
mov
xchg
inc
jl
xor
sbb
inc
mov
repnz
ja
push
fildl
fstp
fwait
lea
fsts
in
popa
push
in
push
out
es
lcall
jp
popa
in
inc
inc
push
rcl
xchg
dec
xchg
mov
bnd
bound
mov
xchg
lcall
inc
cmpsb
cmp
es
ss
out
dec
mov
aad
popf
test
cmp
push
aad
stos
inc
movsb
lock
pop
mov
xor
inc
fstl
push
test
paddd
mov
jp
je
sub
out
pop
pop
and
or
mov
xchg
mov
mov
cmpsl
shl
fcoms
loop
test
cmp
fwait
mov
rol
xchg
call
int
popf
dec
pop
call
dec
mov
add
enter
xchg
fldl
xchg
shl
push
movsb
jecxz
mov
cld
repz
lret
inc
pop
push
mov
and
lret
sbb
insl
daa
jno
outsb
adc
xor
cld
sbb
mov
shl
adc
in
std
in
cmpsb
sub
dec
cltd
jmp
sub
jp
pop
add
sahf
pop
pop
adc
adc
jle
mov
adc
fdivrl
or
rcrb
pop
dec
pop
xor
sub
add
mov
jno
scas
sub
test
mov
xchg
inc
xor
negb
daa
hlt
sti
add
sbb
cmp
push
pop
iret
fldcw
lods
dec
addr16
xchg
sahf
mov
fsubrl
sub
pop
out
adc
dec
sbbb
sbb
out
clc
inc
add
clc
inc
adc
or
jecxz
mov
enter
insl
aas
cmpsl
jo
mov
fwait
inc
call
scas
cltd
xchg
xor
or
fidivrl
icebp
or
inc
inc
add
pop
lcall
or
ret
fildl
insb
rcrb
mov
test
int
scas
daa
rcrl
adc
stc
sbb
xor
loope
daa
movsl
mov
bound
pop
dec
cltd
out
cwtl
jmp
xor
enter
test
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
xor
imul
add
lea
mov
add
mov
mov
xor
add
jne
mov
xor
mov
add
mov
pop
pop
pop
leave
ret
pop
or
repz
sti
ja
stos
mov
imull
pop
add
add
pop
push
mov
outsb
mov
lcall
sub
add
sbb
mov
aad
insb
pushf
inc
cltd
add
fsubrs
loopne
dec
pop
fdivr
les
mov
out
in
xor
sub
iret
push
gs
push
ret
out
sti
fidivrl
adc
lea
shrl
add
add
sub
adc
cmp
out
pop
xchg
push
ror
add
pop
add
add
lret
cmp
and
stos
pop
inc
pop
jg
xlat
pushf
adc
push
mov
daa
add
xchg
test
sub
push
mov
stc
lds
hlt
shrl
outsl
in
dec
xchg
shll
cld
cwtl
dec
cltd
jge
movsb
jb
addl
xlat
dec
mov
cmpsb
mov
dec
sbb
ljmp
add
add
add
pop
sub
sub
addb
into
add
pop
add
add
ss
cli
jecxz
dec
jno
fldt
pop
xchg
xor
push
push
rorb
enter
loopne
jns
cltd
mov
dec
mov
mov
call
dec
add
pop
int
xlat
cld
push
pop
aas
in
jg
dec
lcall
add
mov
shl
aas
in
lds
jecxz
jns
add
add
and
aam
aam
ljmp
je
test
and
add
add
lods
data16
adc
aas
vmread
push
and
loope
sbb
es
mul
and
stc
or
adc
in
inc
imull
pop
into
add
sbb
rcrb
mov
into
mov
cli
mov
add
pop
imul
pop
mov
cmpl
in
mov
popf
xor
movsb
lret
dec
jle
sti
cmpsl
mov
dec
mov
out
add
pop
add
add
mov
mov
push
or
fsubl
popa
aas
sbb
push
inc
cmp
sbb
lahf
test
call
jg
mov
inc
sbb
cld
cwtl
lcall
sub
and
sub
sub
in
pop
push
mov
in
out
lods
cmp
stc
stc
jbe
pushw
inc
iret
add
pop
add
add
aam
test
push
std
in
ret
pushf
adc
aaa
cld
sub
xchg
mov
cmp
or
icebp
xchg
lods
sahf
push
jb
xchg
fcmovb
xchg
cmc
in
xlat
jns
adc
int
sbb
inc
es
lock
mov
andb
fs
lods
mov
imul
push
xor
gs
aaa
push
push
fsub
lahf
iret
add
pop
add
add
push
mov
jle
stos
pop
mov
jl
mov
xor
stos
ljmp
pushf
fucomip
add
jne
daa
dec
lods
push
jl
pop
sbb
gs
xchg
in
cmp
or
decb
sub
dec
pop
add
push
aaa
stos
dec
test
pushf
push
mov
adc
push
adc
cwtl
out
mov
loope
cmp
add
pop
add
add
aad
and
sbb
pop
in
icebp
shll
sub
movsl
sahf
mov
xchg
icebp
adc
icebp
mov
in
mov
add
xchg
and
mov
aad
loop
dec
addl
pop
popa
gs
mov
arpl
push
dec
inc
sub
das
jle
jg
imul
pop
rolb
xchg
loope
add
add
insl
adc
add
inc
adc
cwtl
cs
rorb
ret
call
out
mov
push
inc
push
sahf
lret
inc
into
mov
add
pop
jp
js
pusha
dec
call
stc
scas
sbb
sub
dec
sub
dec
fwait
jbe
cmp
mov
add
add
and
mov
mov
addr16
repz
add
add
aad
mul
push
mov
arpl
hlt
ja
pusha
fdivr
dec
cmp
leave
cmpl
imul
pop
rorl
test
xor
xor
and
adc
out
and
or
in
and
in
push
jge
lret
mov
or
mov
ret
or
ret
lods
sub
mov
test
pop
add
add
imul
pop
repz
push
in
into
xor
stc
pop
cmpsb
jnp
pop
leave
adc
inc
sub
mov
push
rclb
or
std
xchg
xchg
call
dec
sbb
lock
xor
xchg
sbb
jo
mov
insl
or
sbb
mov
in
add
add
ret
pop
iret
fst
enter
test
loop
add
add
adc
lahf
adc
add
aad
add
clc
sub
or
sbb
test
lea
inc
mov
adc
inc
mov
mov
push
mov
add
add
add
inc
add
nop
inc
add
inc
add
nop
inc
add
inc
add
nop
inc
add
inc
add
mov
inc
add
mov
inc
add
mov
inc
add
mov
inc
add
mov
add
inc
add
mov
add
inc
add
mov
add
inc
add
mov
add
inc
add
insb
jp
jbe
ja
js
jno
inc
inc
push
jno
ja
dec
dec
dec
inc
jno
jae
push
arpl
push
inc
add
inc
add
sbb
mov
jns
xor
dec
cmp
dec
js
cmp
dec
inc
dec
jae
inc
dec
xor
dec
pop
pop
pop
push
cmp
dec
xor
dec
cmp
dec
js
cmp
dec
inc
dec
mov
dec
xor
dec
pop
insl
pop
bound
dec
jns
xor
dec
cmp
dec
mov
dec
inc
dec
pop
jge
jb
subb
xchg
jns
aas
dec
test
dec
test
dec
mov
dec
inc
dec
xor
dec
pop
lea
outsl
xchg
outsb
xchg
jle
jns
aas
dec
test
dec
test
dec
mov
dec
inc
dec
xor
dec
pop
popf
pop
xchg
outsl
mov
jns
aas
dec
mov
dec
lods
dec
cmp
dec
mov
dec
inc
dec
pop
lods
pop
mov
jle
jns
aas
dec
mov
dec
lods
dec
cmp
dec
lahf
dec
cmp
dec
inc
dec
pop
mov
outsb
ret
jle
jns
aas
dec
mov
dec
lods
dec
cmp
dec
lods
dec
cmp
dec
inc
dec
pop
int
ret
outsb
sarl
jns
aas
dec
mov
dec
lods
dec
cmp
dec
mov
dec
inc
dec
pop
fstpl
outsl
loop
jecxz
repz
aas
dec
lea
dec
lahf
dec
cmp
dec
xor
dec
pop
in
pop
loop
repnz
repz
jns
jle
jns
cmp
jg
xor
dec
xor
dec
cmp
lods
dec
cmp
dec
inc
dec
pop
or
outsb
adc
jns
aas
dec
add
ficomps
inc
add
sbb
add
sbb
add
sbb
inc
add
sbb
add
inc
add
sbb
pushf
clc
ss
inc
add
sbb
inc
add
sbb
inc
add
sbb
cs
inc
add
test
loop
inc
add
push
orl
add
cmp
ds
insl
push
inc
imul
in
incb
aas
cli
mov
add
xchg
pushf
clc
mov
pushf
clc
mov
xchg
pushf
clc
mov
xchg
pushf
clc
mov
xchg
pushf
clc
mov
xchg
pushf
clc
ljmp
add
add
jbe
mov
pushf
clc
sbb
push
pop
sbb
add
into
sbb
sbb
add
insb
inc
inc
add
add
add
push
add
push
push
add
push
push
add
add
push
add
add
dec
lahf
dec
mov
dec
movsb
dec
insl
dec
bound
dec
add
cltd
dec
pushf
dec
fwait
dec
insl
dec
bound
dec
scas
dec
lods
dec
lahf
dec
mov
dec
xor
add
dec
test
dec
fwait
dec
xor
add
add
add
add
mov
mov
mov
mov
mov
mov
mov
jae
jo
jno
jbe
ja
je
jne
mov
mov
lods
jge
jge
jns
mov
insl
enter
jb
test
hlt
test
test
fnstenv
mov
push
or
xlat
out
add
scas
adc
jge
fidivs
leave
hlt
cmpsb
cmp
mov
cmpsb
and
and
cmc
enter
inc
inc
add
jp
ret
add
sbb
adc
imul
insb
push
imul
push
jp
dec
push
arpl
dec
dec
data16
imul
inc
push
jb
inc
je
inc
jae
dec
gs
dec
dec
pop
jp
jbe
pop
jo
inc
gs
dec
js
inc
js
dec
inc
inc
inc
push
dec
insb
dec
jbe
pop
jbe
inc
fs
push
inc
add
inc
outsb
imul
push
push
push
jne
insl
push
push
jo
addr16
pop
add
push
pop
inc
inc
outsb
popa
imul
jne
dec
je
bound
jns
bound
dec
ja
dec
inc
inc
push
add
outsl
inc
dec
outsl
pop
inc
jb
jns
inc
pop
dec
add
bound
pop
outsl
push
dec
insb
inc
push
inc
jo
add
add
je
insb
jae
inc
insl
je
push
push
addr16
jo
js
pop
dec
push
dec
jns
js
outsb
pop
jae
push
arpl
push
push
je
addr16
dec
inc
insl
inc
inc
inc
arpl
push
inc
popa
push
dec
imul
push
push
imul
dec
jns
push
inc
jo
imul
fs
inc
push
push
ja
fisttpll
mov
js
pop
sbb
mov
pop
add
add
xchg
pop
inc
inc
or
adcb
outsl
push
push
out
es
push
movsl
ja
jnp
aas
cwtl
sti
sarl
lcall
xchg
xchg
xchg
cmp
xor
pop
jae
add
jbe
jp
mov
mov
hlt
cmpl
push
and
es
sbb
stos
xlat
popa
test
popf
cld
cltd
jne
cmp
xchg
mov
sub
cli
jl
xlat
push
stc
xor
aam
add
pop
add
add
xor
js
push
cmp
lcall
sbb
push
imul
xchg
repnz
roll
inc
test
dec
stos
rolb
popa
pop
mov
xchg
adc
jp
les
and
arpl
dec
and
aas
jecxz
loopnew
adc
aad
inc
push
pop
mov
jg
ljmp
push
pushf
sub
add
pop
add
add
std
shlb
and
or
in
sub
cmc
popf
popf
aam
dec
mov
cmp
mov
mov
loop
or
outsl
bswap
push
cmp
test
rorl
je
push
fimull
cld
xor
gs
and
pop
cwtl
push
inc
pop
cmp
rolb
add
cmp
cmp
in
fimuls
psraw
xchg
add
pop
add
add
icebp
movnti
fcos
jl
adc
adc
inc
adc
dec
movsl
mov
outsl
aaa
int
outsl
jae
jecxz
lret
pop
jg
cmpsb
shll
add
lods
cmp
movsl
adc
mov
call
xchg
or
lods
out
cs
add
sub
clc
fildl
add
add
mov
sbb
std
negb
sub
rcrb
add
add
jle
outsb
test
movsb
xlat
pop
pop
lcall
jno
mov
mov
xor
sbb
fcmove
inc
pop
xchg
int3
cmp
aas
pop
lahf
loopne
movsb
cwtl
pop
xor
outsl
jne
shlb
push
and
jge
sbb
xchg
mov
daa
mov
fidivl
xchg
mov
scas
fbstp
inc
mov
xchg
fadds
add
add
xchg
je
xlat
lock
loope
call
ja
jne
push
stc
push
arpl
bnd
or
xchg
aas
imul
out
rcl
aad
out
mov
out
cmp
lret
pop
aam
push
repnz
in
dec
test
aas
jmp
dec
in
fwait
scas
fdiv
pop
sub
sbb
add
add
xchg
mov
insb
xchg
cmp
jne
add
out
sbb
pop
push
orb
cmpsb
jnp
imul
add
inc
out
ljmp
cltd
outsb
pop
mov
xor
cmpxchg8b
out
cwtl
sub
inc
and
leave
jae
movsl
fucom
test
xor
xchg
repnz
push
add
xor
jb
insl
xor
and
neg
add
pop
add
add
imul
xor
sbb
cld
pop
movsb
into
stos
into
out
ljmp
push
add
or
test
out
divl
add
rol
xchg
dec
mov
movsl
mov
scas
jnp
repnz
rcll
or
je
pop
data16
cmp
add
mov
out
out
dec
push
flds
add
add
fmull
cltd
sub
test
add
mov
pop
adc
pop
pop
addr16
dec
popa
dec
outsl
push
jmp
push
loope
popa
jg
push
sbb
ret
notb
fwait
mov
add
jle
sbb
add
push
gs
aam
mov
or
aas
push
test
xor
lds
jb
cltd
jmp
repz
fimull
jbe
int3
icebp
scas
flds
add
add
loop
movsl
pop
adc
movsb
scas
push
in
pop
dec
scas
ljmp
push
rorl
and
movsl
test
jle
push
sbb
ja
ret
mov
jge
and
rdmsr
jbe
mov
out
cmp
lahf
ret
pop
pop
inc
in
pop
xlat
inc
mov
add
pop
iret
pop
aad
ss
dec
mov
add
pop
add
add
gs
ss
xchg
scas
test
adc
jmp
inc
or
push
outsl
xchg
xchg
inc
pop
je
int
popf
xor
sahf
into
lahf
push
and
xchg
cli
mov
insb
mov
lcall
sub
add
lods
xchg
popf
loop
xchg
adc
data16
xor
sar
mov
fwait
test
jg
subl
add
add
rolb
sub
inc
outsb
pop
insb
subl
pushf
and
push
frstor
adcl
loop
mov
and
jno
push
mov
nop
mov
add
mov
dec
push
push
inc
shlb
aaa
scas
lret
int
cmp
mov
outsb
jae
lret
jle
repz
pop
rol
fiaddl
add
add
xchg
pushf
insl
cmpsb
test
cmpsb
xchg
push
dec
out
cmp
and
divl
jmp
adc
insb
mov
lea
rcrl
xorb
test
movsb
je
mov
xor
or
movsb
lret
data16
loopne
mov
sbb
xchg
outsb
ret
rolb
adc
add
add
adc
adc
mov
lds
pop
fildl
add
add
xor
shll
aas
mov
sbb
ret
lret
push
ret
dec
sti
sahf
push
hlt
jg
shrb
jl
pop
mov
cmp
iret
cmp
cmpsl
dec
jnp
jo
sahf
scas
test
sbb
or
and
lods
jb
xor
sbb
jae
cmp
mov
shlb
push
jnp
add
pop
add
add
or
push
aaa
cmp
sbb
jmp
xchg
lret
loope
jp
test
xchg
mov
xchg
int3
xchg
jns
imul
inc
inc
inc
lods
and
jle
mov
jecxz
in
xlat
mov
dec
fs
data16
inc
dec
lock
fiaddl
add
add
sqrtps
cmc
das
sbb
xchg
iret
mov
aad
xlat
fildl
add
add
les
pushf
push
sbb
shrl
ret
lock
cmp
cmp
dec
mov
cld
data16
cmp
bound
adc
xchg
insb
sbb
popa
jae
mov
stos
cli
fcomps
and
jae
jns
rcl
inc
mov
int
xchg
inc
cmc
sti
fildll
lret
adc
push
xor
add
pop
add
add
and
lcall
sbb
add
gs
mov
stos
lret
neg
jnp
cmp
mov
dec
jp
psubsw
shrb
mov
faddl
lods
sub
lock
pop
adcl
xor
mov
jnp
js
in
xor
xor
enter
push
lahf
jnp
adc
testl
insb
cmp
add
add
int
mov
mov
xor
push
pop
js
xor
out
in
loop
nop
adc
cmp
xor
jp
or
ror
jns
cmc
sub
adc
popf
push
popa
cmpsb
pop
test
push
jne
push
xchg
sub
add
outsl
mov
xor
xlat
jnp
ljmp
add
add
add
add
jne
jg
clc
cs
push
sti
iret
add
pop
add
add
adc
js
mov
add
sub
or
jbe
shll
fldcw
mov
cmpsb
and
pop
xchg
pop
stos
jae
cmp
jecxz
xchg
test
and
xchg
push
lods
sub
push
push
test
jo
mov
pop
or
add
add
mov
cmp
sti
dec
mov
je
lcall
add
pop
add
add
jg
movsb
scas
inc
and
pop
out
sub
cmp
andb
fstpl
and
or
xor
mov
sub
xor
loop
into
and
jns
gs
fimuls
int
adc
mull
cmp
aad
mov
or
gs
push
jno
add
add
push
mov
mov
xchg
adc
repz
movsl
mov
add
pop
add
add
push
cmpsl
xorl
pop
add
movsb
ja
or
and
lds
push
push
dec
xor
and
push
sbb
mov
test
pop
add
xchg
and
in
inc
xchg
insl
je
out
stc
jns
mov
movsb
dec
rolb
pop
sbb
cmpsl
pop
dec
xchg
fcmovu
fisttps
push
jns
orl
add
add
sbb
sub
ret
scas
push
loopne
mov
adc
lahf
push
mov
or
aaa
ja
xlat
xor
xor
cmp
jmp
mov
stos
cld
mov
imul
ljmp
ja
mov
cmp
jno
popl
lds
add
add
jle
out
sbb
mov
roll
add
add
cmp
in
sahf
out
les
aad
or
adc
clc
call
test
mov
jnp
or
mov
or
in
shll
sbb
into
xlat
scas
fcoml
in
rorb
sbb
add
jo
and
cmp
fisttps
adc
pop
add
add
adcl
fstps
int3
testb
push
call
imul
mov
outsl
sbbl
inc
mov
es
jge
jb
jmp
pop
fadd
dec
sbb
push
push
adc
jae
es
cwtl
pop
fmuls
ret
repnz
testb
add
xchg
nop
ffree
popf
aam
pushf
ret
rolb
add
add
cltd
test
fcoms
pusha
in
hlt
xor
xchg
fdivrp
lea
pusha
cmp
lea
sbb
movsl
or
jmp
sahf
mov
lret
leave
sbb
hlt
cmc
mov
mov
mulps
pop
xor
and
cmc
mov
push
in
hlt
mov
jbe
hlt
mov
and
cmpsb
dec
shlb
jg
add
pop
add
add
adc
dec
sub
subb
rorb
addr16
dec
xor
fnstsw
cmp
mov
clc
into
push
and
mov
mov
sti
mov
dec
or
dec
aad
scas
mov
cmp
sbbb
pop
int
sub
lock
leave
call
cmp
add
add
ror
mov
sub
out
xorl
add
pushf
stos
sbb
data16
add
sti
mov
mov
rorb
xchg
jo
popa
jp
xchg
and
inc
mov
lcall
pop
jmp
mov
movsl
xor
add
xchg
gs
lahf
jne
xchg
mov
shrb
jmp
xor
sbb
push
inc
sbb
mov
mov
xor
add
add
in
outsb
and
pop
mov
aaa
roll
add
add
test
in
inc
mov
repnz
mov
pushf
movsb
mov
lods
pop
mov
mov
fmull
sti
dec
out
pushf
movsb
aam
or
sub
xchg
fnsave
arpl
out
test
test
mov
jbe
push
mov
test
add
add
mov
and
loopne
roll
add
add
out
xchg
xchg
xchg
stos
dec
xchg
push
cmovb
pop
cltd
adc
out
cmp
cmp
jb
jb
jne
int
sub
repnz
daa
and
repnz
into
adc
add
mov
sub
movsl
jns
rclb
mov
xchg
ljmp
add
add
add
add
stc
call
into
inc
mov
mov
xchg
imul
add
add
sbb
push
fnstcw
or
scas
add
test
xor
add
lock
or
mov
push
ds
std
jp
jp
leave
daa
daa
jle
outsb
mov
setae
mov
mov
mov
pop
pop
inc
and
insl
push
dec
in
mov
jno
cli
inc
fisubrs
cwtl
sar
repz
inc
push
add
pop
add
add
pop
enter
sbb
das
jnp
jmp
outsb
mov
outsl
pop
mov
pushf
pop
or
test
pop
lahf
in
sub
add
insb
jecxz
in
out
sub
and
je
ficompl
push
cmp
mov
cmp
dec
push
outsl
mov
insb
test
add
add
int3
sbb
out
loopne
lods
cwtl
dec
popa
stc
cmpsl
aam
add
add
add
jg
sbb
mov
lret
into
int
sbb
rorb
data16
das
adc
jae
jb
mov
repnz
push
lea
adc
push
cs
xchg
inc
ficompl
push
int
and
ljmp
xchg
ja
dec
adc
inc
push
test
fildll
adc
pop
xor
aad
add
add
iret
test
cmpb
lea
outsl
add
sbb
cld
xchg
push
push
cmp
decl
pop
xchg
daa
jl
gs
push
and
jp
mov
cmpsb
or
add
xchg
jbe
clc
out
dec
pop
inc
icebp
add
pop
or
jecxz
adc
xor
mov
mov
fwait
loope
sub
sarb
add
in
pop
aad
add
add
jbe
fnstsw
xchg
cwtl
fs
enter
xchg
mov
add
shll
enter
subl
push
xchg
pop
jmp
add
jl
dec
or
jno
mov
xchg
ljmp
orps
out
mov
or
ja
dec
cmp
dec
shrl
add
pop
add
add
movsb
lahf
popa
addl
out
adc
xchg
cmp
imul
inc
cmpb
jge
movsl
clc
jnp
mov
call
sub
jbe
das
aam
sti
jnp
and
cltd
xchg
cmpsb
test
repnz
jle
out
or
dec
fildll
xchg
jae
idivl
arpl
jge
mov
daa
sbb
loope
pop
add
pop
add
add
mov
mov
pop
pop
mov
gs
int
jl
inc
aam
xor
iret
push
nop
lahf
popa
xchg
int
add
add
push
push
pop
mov
cs
es
fwait
cmc
into
mov
cmp
lods
jns
pop
mov
cli
je
mov
mov
and
mov
dec
daa
push
imul
int
lods
js
faddl
add
add
add
hlt
pop
sbb
pop
adc
loop
xor
fcoms
jo,pn
aad
pop
xor
push
cld
inc
jle
jno
pop
adc
sti
or
xor
aaa
lret
sub
push
push
pushf
popa
or
insl
jge
mov
cmp
fbstp
int
add
add
ss
xor
and
dec
xchg
inc
fldl
add
add
mov
decb
xchg
push
cmpsl
outsb
xor
jp
repz
std
xchg
ss
push
pop
xchg
pop
aas
xchg
and
lret
pop
lods
pop
mov
in
mov
sub
gs
push
cmp
ja
jnp
push
mov
gs
mov
jns
cmp
jmp
xor
add
aaa
out
mul
aaa
cmc
xchg
lcall
mov
add
add
mov
lds
xor
icebp
xor
cmpsl
jmp
rcrb
lret
mov
xchg
push
sti
test
mov
mov
insl
iret
aam
imul
enter
mov
sub
adc
pushf
test
add
add
jecxz
dec
inc
mov
sub
push
mov
xor
shl
push
push
aad
out
fucomip
ss
cmp
scas
fldl
add
add
or
push
sbb
push
sbbb
xchg
cmp
adc
lock
mov
das
mul
pushf
clc
adc
mov
cmpsl
mov
imul
cli
cmpsl
push
mov
loope
adc
fists
outsb
std
add
mov
inc
icebp
lahf
out
mov
add
add
in
cld
fisubrl
sbb
bound
pop
add
add
inc
int3
ret
hlt
test
pop
jle
xor
lea
cmp
dec
notb
test
mov
cmp
or
rcll
adc
inc
xchg
in
outsb
xchg
test
sti
pop
pop
add
jg
inc
xchg
ja
pushf
mov
out
testl
add
cmp
paddsb
nop
sarl
fiadds
add
add
mov
jno
sti
jle
and
adc
inc
arpl
ret
scas
inc
out
fdivl
lock
pop
adc
mov
mov
outsl
pop
mov
dec
int
add
lret
lea
dec
ss
fwait
xor
cmp
fwait
adc
jl
xchg
ja
add
add
jle
call
cli
lcall
add
pop
add
add
hlt
cmp
cmpsb
mov
enter
shrb
lea
jp
rolb
sti
mov
stos
pop
push
add
lcall
aad
test
shll
cmp
pop
sub
inc
iret
dec
test
insb
and
add
scas
ffreep
cmpsb
adc
ret
push
mov
test
and
pop
dec
into
jecxz
js
filds
add
add
fcompl
fdivrl
mov
loop
cmp
bnd
mov
push
cmc
pop
cmp
pop
cmpl
out
mov
inc
shrl
outsb
inc
adc
movsl
jnp
test
lcall
imulb
cmp
adc
fsubrs
mov
xor
push
loopne
push
outsl
mov
jmp
push
fcmovu
in
add
add
pop
add
add
mov
or
rcrb
fwait
xchg
push
ret
inc
hlt
pop
dec
adc
lahf
sbb
rolb
insl
sbb
movsb
repnz
adc
call
xor
movl
imul
jnp
push
sbb
iret
lea
lret
lret
in
cwtl
arpl
in
sahf
xchg
add
add
sbb
inc
jecxz
mov
lods
or
daa
loopne
add
add
inc
lret
xchg
mov
hlt
int3
cmp
or
mov
lods
outsb
jne
sbb
jae
lret
sub
xor
push
xchg
test
mov
adc
in
jae
ljmp
mov
movl
and
inc
in
inc
xor
sub
insb
repz
add
mov
mov
icebp
and
repz
loopne
add
add
jb
pushf
cmc
push
loope
lret
test
xor
les
adc
xor
pop
add
jae
push
sbbb
int3
mov
fstl
and
pop
nop
push
cmp
aam
cli
push
cmc
arpl
pop
cli
cmp
in
mov
cmpsb
bound
mov
push
test
sub
mov
add
xlat
repz
das
cli
fists
dec
es
mov
or
pop
add
add
and
xor
mov
add
in
sbb
dec
push
sub
lods
clc
dec
jne
mov
and
fs
data16
std
cltd
sbbl
in
add
inc
xchg
popf
jecxz
or
dec
fnsave
cmp
ficomps
add
inc
add
inc
add
rolb
rolb
rolb
rolb
rolb
rolb
inc
cmp
pop
ss
pop
cmp
inc
inc
dec
pop
pop
push
dec
inc
add
xor
cmp
xor
aaa
add
xor
push
inc
dec
push
pop
inc
push
cmp
push
push
inc
xor
xor
add
cmp
dec
cmp
pop
dec
xor
add
xor
pop
inc
dec
pop
pop
xor
pop
inc
xor
inc
dec
cmp
inc
cmp
ss
dec
add
xor
dec
xor
push
add
aaa
pop
push
dec
dec
cmp
inc
xor
pop
pop
dec
push
xor
add
dec
xor
ss
xor
xor
push
push
add
push
pop
push
cmp
xor
pop
dec
dec
push
cmp
dec
xor
xor
xor
pop
add
pop
inc
xor
push
xor
inc
add
xor
xor
pop
dec
dec
xor
add
pop
aaa
push
dec
push
pop
inc
add
dec
pop
inc
dec
xor
xor
push
pop
push
inc
inc
pop
cmp
push
pop
push
inc
add
pop
pop
dec
inc
inc
add
inc
pop
xor
dec
cmp
xor
ss
pop
dec
pop
add
push
xor
pop
xor
pop
xor
xor
push
push
inc
add
push
xor
xor
pop
ss
cmp
pop
xor
xor
push
push
xor
push
pop
inc
xor
push
inc
aaa
inc
add
ss
dec
pop
pop
inc
push
pop
push
dec
inc
add
xor
dec
add
cmp
xor
inc
add
inc
add
add
inc
add
add
add
add
cmp
dec
add
pop
add
push
add
xor
cmp
pop
add
add
inc
add
add
xor
inc
add
push
add
add
add
dec
add
add
add
pop
add
add
add
add
dec
add
add
pop
add
add
add
add
xor
add
add
push
add
cmp
pop
add
add
add
add
inc
add
add
inc
add
push
add
cmp
push
add
pop
add
add
add
add
dec
add
pop
add
add
dec
add
add
add
xor
dec
add
add
add
add
add
dec
add
add
inc
add
push
add
add
add
dec
add
add
push
add
xor
pop
add
add
dec
add
xor
pop
add
add
add
dec
add
xor
pop
add
add
xor
dec
add
add
add
xor
pop
add
add
push
add
add
inc
add
push
add
add
inc
add
pop
add
add
push
add
add
add
add
add
inc
add
addb
addb
addb
addb
addb
addb
addb
addb
addb
add
sbb
add
add
add
add
add
add
add
add
add
clc
cmp
add
cmp
add
cmp
add
add
push
cmp
add
add
jb
push
imul
aas
inc
outsb
jne
push
imul
popa
je
outsl
outsb
jae
je
.byte
