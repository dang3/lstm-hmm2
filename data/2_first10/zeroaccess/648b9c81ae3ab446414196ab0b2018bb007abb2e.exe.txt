push
mov
sub
push
orl
push
xor
addl
inc
adcl
push
decl
push
notl
call
test
je
lea
push
adcl
call
movl
jmp
orl
push
orl
mov
subl
push
addl
push
subl
call
test
je
subl
lea
subl
push
sbbl
call
movl
jmp
push
mov
or
mov
mov
addl
push
orl
push
adcl
push
call
andl
test
jne
sbbl
push
movl
push
call
incl
test
movl
jne
subl
push
addl
push
call
andl
test
movl
jne
orl
push
push
sbbl
call
xorl
test
movl
jne
movl
push
push
push
adcl
call
test
movl
je
lea
subl
push
adcl
call
movl
jmp
subl
push
push
andl
push
orl
call
test
movl
je
xorl
push
xorl
push
andl
call
test
movl
jne
movl
push
push
call
test
jne
push
push
call
orl
test
movl
jne
addl
push
push
push
xorl
call
subl
test
movl
jne
push
andl
push
orl
push
subl
call
xorl
test
movl
jne
orl
push
push
call
test
jne
movl
push
push
andl
call
test
movl
jne
push
push
call
test
jne
orl
push
sbbl
push
andl
push
addl
call
movl
test
movl
jne
orl
push
addl
push
adcl
push
call
test
movl
jne
addl
push
push
movl
call
sbbl
test
jne
adcl
push
sbbl
push
orl
call
xorl
test
movl
jne
push
push
addl
call
test
jne
push
push
orl
push
call
test
movl
jne
orl
push
subl
push
xorl
push
andl
call
test
movl
jne
push
adcl
push
movl
call
xorl
test
movl
jne
push
adcl
push
orl
call
addl
test
movl
jne
subl
push
sbbl
push
adcl
call
movl
test
movl
jne
adcl
push
push
push
call
adcl
test
jne
sbbl
push
orl
push
movl
push
addl
call
adcl
test
movl
jne
addl
push
push
call
test
jne
push
subl
push
xorl
call
subl
test
movl
jne
adcl
push
negl
push
call
xorl
test
jne
subl
push
notl
push
orl
push
call
test
movl
jne
sbbl
push
push
negl
push
sbbl
call
xor
jmp
mov
mov
sub
xor
movl
mov
mov
mov
neg
mov
mov
sub
mov
movl
xor
add
xor
add
sub
and
lea
andl
mov
movl
cmpl
je
cmpl
jne
pushl
push
push
pushl
call
mov
dec
mov
jmp
mov
xor
xor
sub
add
lea
mov
mov
mov
sub
imul
mov
movzbl
and
mov
mov
mov
xor
mov
mov
and
mov
or
xor
andl
mov
inc
mov
cmpl
jne
pushl
pushl
push
push
call
cmpl
jb
mov
add
movl
mov
movl
mov
movl
cmp
jne
mov
sub
mov
mov
mov
adc
mov
xor
xor
sbbl
add
or
mov
mov
andl
mov
inc
mov
cmpl
jne
call
cmpl
jb
xor
add
add
mov
mov
andl
mov
orl
mov
sbb
mov
sbb
mov
neg
mov
andl
mov
inc
mov
cmpl
jne
call
cmpl
jne
mov
inc
mov
cmpl
jb
movzwl
and
mov
mov
sub
mov
mov
mov
decl
movl
mov
adc
mov
addl
xor
add
movl
jmp
and
mov
mov
sbbl
xor
orl
lea
orl
push
mov
movl
xor
adcl
lea
orl
push
sbb
mov
pushl
andl
call
mov
or
mov
neg
xor
movzbl
add
lea
mov
sbbl
mov
sbbl
xor
xorl
xor
add
mov
xor
lea
movl
mov
cmp
jbe
mov
adc
mov
mov
mov
or
mov
mov
or
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
jmp
movl
mov
adcl
mov
movl
cmpl
je
cmpl
jne
push
call
mov
dec
mov
jmp
neg
mov
sub
xor
mov
mov
movl
cmp
jne
lea
mov
lea
orl
mov
xor
mov
test
movl
je
mov
mov
sbb
mov
or
mov
xor
mov
subl
mov
movl
cmpl
je
cmpl
jne
call
cmpl
jne
xor
add
dec
mov
xor
xor
dec
mov
jmp
mov
mov
movl
cmpl
je
cmpl
jne
pushl
push
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
cltd
inc
mov
mov
adc
mov
mov
and
add
movl
adc
andl
orl
xor
mov
adc
mov
sbb
mov
mov
add
xor
add
mov
mov
adcl
xor
mov
or
mov
xorl
xor
mov
movl
cmp
movl
jne
movl
mov
cmp
movl
je
mov
andl
mov
addl
mov
xor
adcl
add
movl
adc
andl
xor
andl
xor
movl
cmp
movl
jne
cmp
jne
mov
add
mov
andl
mov
adcl
xor
sub
mov
sbbl
mov
mov
addl
add
jmp
mov
movl
cmp
je
movzbl
sub
mov
mov
add
mov
xorl
xor
subl
add
cmp
movl
je
andl
mov
inc
mov
cmpl
jne
push
call
cmpl
jb
adc
mov
or
mov
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
push
call
jmp
mov
notl
pushl
mov
orl
pushl
orl
add
sub
mov
mov
sbbl
pushl
xorl
call
mov
mov
mov
mov
movl
jmp
addl
mov
mov
xor
add
cmp
jne
mov
mov
mov
xor
add
cmp
jne
mov
push
xor
add
push
push
pushl
pushl
call
mov
mov
mov
mov
mov
xor
add
mov
mov
mov
mov
mov
mov
mov
movl
mov
xor
add
mov
mov
mov
mov
mov
mov
push
pop
sub
add
movl
mov
mov
mov
mov
mov
mov
mov
xor
add
mov
lea
mov
mov
xor
add
mov
lea
push
mov
xor
add
push
mov
push
pushl
call
mov
mov
mov
mov
xor
mov
add
jmp
lea
mov
mov
sub
mov
mov
mov
mov
movl
mov
movl
mov
xor
add
mov
mov
xor
add
mov
movl
movl
mov
mov
xor
add
cmp
je
mov
xor
mov
sub
add
mov
mov
xor
add
imul
cmp
ja
mov
mov
mov
sub
xor
xor
add
div
mov
mov
mov
xor
add
cmp
jbe
mov
xor
add
mov
mov
mov
xor
add
imul
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
add
movl
mov
mov
mov
movl
movl
mov
mov
xor
add
jmp
movl
movl
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
xor
add
add
imul
add
mov
mov
mov
cmp
jb
mov
mov
xor
add
imul
mov
xor
add
or
mov
xor
add
mov
xor
add
mov
lea
jmp
mov
mov
xor
lea
mov
jmp
mov
mov
xor
lea
lea
xor
cmp
jne
mov
mov
mov
xor
mov
xor
mov
xor
mov
mov
xor
mov
mov
mov
xor
add
mov
mov
xor
add
mov
lea
mov
lea
mov
mov
test
je
movl
movl
movl
movl
call
mov
mov
mov
mov
mov
mov
mov
mov
cltd
mov
mov
add
adc
andl
xor
mov
mov
mov
mov
xor
add
mov
adcl
xor
mov
mov
xor
mov
cmp
jne
mov
cmp
je
mov
mov
mov
xor
add
adc
xor
xor
cmp
jne
cmp
jne
mov
mov
xor
mov
mov
mov
add
mov
mov
mov
xor
mov
add
xor
add
adc
xor
xor
xor
add
adc
xor
xor
cmp
jne
cmp
jne
mov
mov
mov
push
add
push
lea
push
call
mov
mov
pop
pop
pop
leave
ret
xor
sbbl
inc
ret
push
mov
sub
mov
andl
mov
inc
mov
cmpl
jne
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
movl
movzbl
add
mov
notl
push
and
mov
movzbl
sbb
xor
xor
mov
push
or
mov
negl
add
movl
cmp
je
mov
orl
mov
andl
xor
xor
add
orl
add
adc
xor
mov
mov
mov
xor
push
movl
cmpl
je
cmpl
jne
pushl
pushl
call
cmpl
jne
xor
xor
dec
mov
mov
dec
mov
jmp
xor
xor
mov
add
adc
xor
xor
cmp
jne
cmp
je
jmp
mov
mov
mov
xor
add
mov
imul
mov
xor
add
mov
mov
mov
mov
xor
xor
add
adc
lea
xor
xor
xor
mov
add
adc
xor
xor
cmp
jne
cmp
jne
mov
pop
pop
pop
leave
ret
push
mov
push
movl
movl
cmpl
je
cmpl
jne
push
call
mov
dec
mov
jmp
or
mov
adc
movsbl
and
mov
andl
sub
movl
cmpl
je
cmpl
jne
push
push
pushl
pushl
pushl
push
push
pushl
push
push
push
pushl
push
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
xor
cmp
jne
mov
push
mov
add
mov
mov
mov
xor
add
cmp
pop
je
mov
jmp
mov
xor
add
leave
ret
push
mov
sub
xor
xor
xor
movl
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
push
push
call
cmpl
jne
xor
add
inc
mov
jmp
not
push
movl
mov
addl
push
mov
xorl
xor
sbbl
push
movl
cmpl
je
cmpl
jne
push
push
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
orl
add
adcl
mov
movzbl
xor
mov
mov
test
jmp
lret
int
outsl
cmp
jae
push
cmp
jl
jl
pop
jl
adc
and
popa
pusha
sbb
insb
insb
insl
xor
fdivrp
push
arpl
stos
jp
push
iret
pop
dec
cmp
dec
jg
mov
jmp
cld
imul
xor
mov
andl
push
mov
fldl
or
and
inc
push
and
mov
sub
mov
jbe
ret
sbb
jb
jnp
xchg
pop
cmpl
cwtl
je,pt
add
sub
push
sti
iret
mov
or
out
push
dec
push
cmp
xor
lods
inc
int3
cmpsl
dec
fiaddl
push
std
push
push
movsl
icebp
bound
sbb
in
sub
decl
sub
push
mov
adc
test
jae
pop
sub
pop
aam
mov
sbb
mov
push
ds
inc
sub
cmp
movsl
push
mov
popf
je
stc
xchg
test
arpl
push
fcompl
fxch
pusha
cli
xor
mov
push
dec
int3
cld
mov
xchg
xor
cmp
decl
xor
jns
cmp
xor
mov
push
mov
aam
jecxz
jmp
shll
adc
sub
lret
add
inc
add
pop
mov
imul
or
test
add
jp
adc
mov
sbb
and
mov
scas
jle
xor
cmpl
in
mov
js
out
jbe
sahf
sbb
sub
std
ja
push
or
in
cmp
mov
or
fists
repz
out
xlat
out
insb
jns
and
lock
push
sbb
sahf
hlt
cld
mov
sub
sbb
dec
and
push
aas
dec
ds
cli
add
mov
into
mov
xchg
pop
lahf
pop
mov
out
mov
cmp
or
repnz
or
xor
mov
cmp
dec
addr16
gs
jp
fdivl
iret
aaa
in
dec
adc
cmpsl
stc
insl
add
test
push
sbb
and
sbb
inc
pop
push
insl
scas
ljmp
mov
mov
ret
sarb
repz
stos
cmp
jnp
inc
rclb
push
or
aas
call
mov
test
mov
aas
mov
clc
adc
stc
push
adc
aad
push
notb
call
or
test
pushfw
push
mov
mov
ret
xchg
push
inc
dec
inc
mov
lods
adc
pop
lods
adc
jecxz
popa
cvtdq2ps
push
mov
arpl
push
sub
out
sahf
dec
xor
lods
fistl
sub
mov
ljmp
and
add
push
ret
jmp
ret
push
clc
icebp
jns
xor
outsl
in
enter
mov
jmp
cmp
insb
loopne
cwtl
ret
ret
or
mov
jg
aaa
xchg
jecxz
ja
cmpsl
mov
ja
pop
sbb
sub
loop
inc
sub
lcall
adc
mov
in
aas
shll
in
dec
adc
xchg
pcmpeqw
clc
jns
out
cmpsb
mov
and
xor
movsl
jmp
jb
dec
mov
sub
mov
sbb
mov
jae
ljmp
mov
fmuls
dec
scas
jle
adc
insl
notl
scas
cmpsb
xchg
cmp
ss
faddl
and
clc
xor
xor
add
mov
xchg
pop
arpl
push
int3
out
rcll
adc
mov
dec
jecxz
xchg
adc
sub
cmp
push
sbb
fistps
ljmp
jb
shr
cli
comiss
test
xchg
and
xor
cmp
jno
sub
inc
scas
pop
rolb
add
lods
add
mov
jle
sar
das
mov
icebp
xchg
ss
dec
mov
sub
leave
insb
std
cmp
repnz
ja
mov
dec
push
sub
pop
stos
adc
movsl
jbe
cwtl
nop
lcall
loop
mov
fsubrs
mov
jge
jne
push
xor
mov
int3
ja
stos
fldt
fcmovnb
aad
shrb
in
and
dec
vpunpckhbw
es
outsb
pop
iret
iret
and
out
mov
in
push
sub
aam
or
add
pusha
fcoml
push
xchg
push
outsb
sub
pop
data16
xchg
stos
insl
shlb
cli
jnp
mov
push
inc
lea
lods
jg
lock
mov
and
pop
jnp
out
fs
clc
mov
cli
cli
xor
es
enter
out
pop
ds
sub
cmp
mov
pop
and
ret
dec
fucomp
xchg
daa
sbb
push
mov
pop
mov
jae
fnstenv
xchg
idivb
xchg
inc
call
popf
out
mov
cld
pop
fcompl
jg
push
repnz
popf
daa
fidivs
adc
jne
xchg
clc
cmpsl
push
pop
add
repz
aad
out
pop
mov
adc
pop
jb
sbb
and
adc
and
jp
mov
xor
std
xchg
int
mov
icebp
ds
inc
or
jnp
cmp
movsb
jge
cmp
lea
out
inc
roll
xchg
dec
xlat
movb
sahf
xor
inc
sbb
mov
mov
mov
mov
mov
adc
push
sti
mov
lds
sub
lods
fdivs
pop
daa
pop
fstpt
pop
aam
dec
mov
sahf
mov
add
pop
sbb
push
scas
pop
push
push
jg
popfw
mov
ljmp
xchg
clc
decl
add
std
mov
cmp
leave
dec
out
or
push
enter
sub
inc
jmp
rorb
daa
xor
xchg
cmp
cmp
mov
aas
cmp
sahf
fdivp
jge
sbb
dec
mov
sbb
scas
push
sub
sbb
mov
jmp
pop
out
mov
cmp
pop
xor
pop
and
inc
repz
dec
ja
scas
out
and
das
push
xchg
xor
arpl
cmp
jecxz
jecxz
cmp
xchg
push
ljmp
jmp
push
and
addl
out
mov
pop
adc
popa
xlat
pop
mov
in
ds
gs
cmp
and
or
jae
dec
popf
xchg
mov
in
and
mov
push
test
pop
test
add
shll
or
or
lea
pop
int3
sbb
mov
xor
sub
or
adc
xchg
push
sub
mov
mov
stos
aaa
addr16
mov
lods
inc
mov
cld
add
nop
adc
ret
or
sbb
inc
mov
push
xchg
arpl
std
push
pop
ret
mov
jno,pn
popa
sbbl
into
push
or
mov
iret
lods
ss
xchg
push
inc
mov
or
rcll
push
xchg
dec
arpl
movsl
std
enter
mov
inc
fisttpll
push
stos
jl
xor
inc
xor
push
in
push
ret
cmpsb
fwait
loop
scas
fdivr
jmp
out
shlb
iret
in
adc
and
or
loopne
dec
mov
mov
jno
inc
mov
lahf
push
cli
jl
jno
inc
push
bound
test
sbb
mov
dec
dec
stc
iret
pop
idivb
repz
inc
clc
mov
and
sbb
outsb
dec
leave
leave
nop
orl
mov
cli
mov
bound
data16
repnz
sub
test
aaa
enter
cld
or
aam
xchg
mov
pop
adc
sbb
xchg
sbbl
rorl
daa
cmovs
inc
shr
jne
scas
aas
sub
adc
data16
hlt
fcmovu
or
mov
lret
lcall
iret
mov
dec
sti
xchg
in
ss
test
pushf
cmpsb
adc
adc
adc
cs
imul
stc
add
dec
mov
jbe
pop
mov
das
mov
movsb
repnz
xor
sub
mov
stos
sbb
mov
es
loopne
push
cmp
inc
or
pusha
cltd
sub
sahf
sbb
mov
sbb
fldcw
fs
xor
xchg
movsl
outsb
or
push
inc
pop
repz
lahf
ja
xorl
push
cmpl
repz
test
loop
int3
mov
imul
mov
lea
sbb
or
jnp
insb
pop
and
pop
push
or
bound
cmp
push
lahf
hlt
bound
outsl
in
ljmp
xor
repz
les
in
iret
inc
mov
and
jno
mov
adc
pop
call
ljmp
addr16
jp
sbb
cmp
ret
sbb
xor
mov
or
push
dec
add
out
int3
sub
or
scas
jge
inc
dec
je
sti
iret
test
jno
out
xchg
stos
out
dec
cmc
lds
jo
or
adc
pushf
xchg
add
loopne
fwait
into
cmpsl
lods
jmp
mov
lahf
in
xchg
adc
dec
mov
movsb
lds
in
lods
rcrl
fldl
roll
push
enter
jne
movsb
mov
or
out
pop
sub
mov
lea
dec
ror
int
and
idivb
push
pop
adc
jle
jns
popf
xor
cli
push
call
insb
outsb
aad
push
bound
cs
lea
mov
cmovge
fnstenv
xchg
adc
dec
cmpb
xchg
push
and
jg
repz
mov
mov
xor
sub
xor
and
rcrb
das
jnp
pushf
outsl
test
jle
or
es
xor
pop
out
sub
cmp
rcl
add
lock
jnp
xchg
add
or
test
jnp
xchg
lock
mulb
ss
cmpl
fildll
sub
mov
leave
inc
dec
mov
sub
sub
mov
inc
fcomps
push
scas
out
add
fistpl
sub
sub
cmp
ss
adc
jl
out
mov
in
sbb
test
fsubrl
nop
cld
stos
ja
lcall
mov
mov
lret
pop
daa
dec
stos
jp
xor
clc
test
les
mov
stos
fsubs
mov
sbb
les
mov
adc
aad
pop
cwtl
cmp
jmp
test
xor
pushf
push
mov
push
daa
xchg
mov
sbbb
cli
call
fbstp
dec
push
test
cmpsb
out
sub
cmp
adc
or
clc
mov
add
roll
inc
and
ss
outsl
xchg
inc
or
or
mov
imul
fs
mov
pop
mov
les
fbstp
js
fildll
adc
test
insb
test
enter
ja
sbb
dec
xchg
fisubrl
sahf
pusha
ss
test
pop
cld
add
mov
lret
lahf
xchg
mov
sbb
lret
adc
aaa
jne
lods
fnsave
jne
adc
fs
rcrl
mov
jmp
in
sbb
mov
sarb
ss
inc
xchg
cmpsl
and
int
fwait
dec
push
pop
pop
rcl
sbb
xorb
mov
jmp
sub
imul
jl
inc
test
into
cmpsb
xchg
out
in
sar
outsl
rorl
enter
push
lcall
jg
adc
js
dec
sbb
gs
pop
sbb
pop
pop
adc
and
leave
cmp
ffreep
pop
in
pop
push
pop
imulb
push
shrb
push
inc
cli
cld
cmp
stos
jbe
push
mov
push
stos
xchg
fildl
xchg
adc
dec
ds
jbe
xor
movsb
je
fistpl
pop
xchg
jo
sbb
mov
jno
fisttpl
and
sub
adc
ret
inc
cmp
mov
stos
sub
add
mov
rdpmc
mov
insl
adc
or
sahf
adc
lret
pop
lret
in
mov
subb
add
ljmp
mov
xchg
cmpsl
imul
repz
cmc
adc
imul
in
movsb
xorl
jle
add
jge
iret
fdivrs
push
jle
sbbb
mov
lcall
cmpl
leave
lcall
bnd
push
movsl
std
loope
jne
cs
rcr
lea
jo
cmpps
jo
out
inc
cmp
add
mov
add
jl
call
or
or
movsb
mov
mov
xor
push
hlt
mov
lods
outsb
push
dec
outsl
hlt
out
push
and
nop
into
fsub
sahf
adc
ds
lret
jnp
ja
dec
mov
jge
mov
aas
or
icebp
sbbb
push
jmp
scas
cmp
mov
pushf
fsubrl
mov
aaa
pop
fcompl
std
decb
fdivrs
imul
lods
je
mov
dec
or
or
sub
dec
push
mov
hlt
jb
popa
ret
imul
cmpsb
inc
mov
repz
fistpl
lahf
fmull
add
push
sahf
dec
sbb
hlt
inc
dec
insl
ror
popf
push
pop
push
add
out
push
clc
push
movsl
aas
arpl
ljmp
sub
cmp
hlt
inc
lock
jns
mov
push
jp
aas
jge
fisubrs
fwait
cld
jp
aam
and
insl
stos
sub
or
add
jmp
pop
ljmp
mov
mov
sub
jne
aad
push
insb
test
dec
mov
xchg
pop
fcomp
js
cmpsl
add
dec
call
mov
inc
inc
xchg
jg
inc
xor
cmp
or
xor
sbb
xchg
inc
in
cmp
arpl
insl
outsl
dec
std
pop
cwtl
inc
das
es
sar
cmp
sbb
les
mov
ljmp
js
cli
mov
xor
mov
jns
lods
cmp
in
ja
lret
dec
decl
mov
lahf
lahf
inc
rcrl
leave
fcmovnu
add
sbb
test
or
dec
sub
addr16
inc
lea
data16
or
loopne
pop
mov
mov
push
aad
push
adc
pop
xor
orl
iret
ja
int3
push
xor
fldenv
decl
jecxz
js
lea
insb
push
mov
sub
mov
imul
mov
repz
fsubr
stos
pop
mov
das
fldcw
ss
enter
push
cld
fstl
xchg
lret
mov
pop
and
test
popa
or
xor
mov
cwtl
scas
std
jae
mov
mov
dec
pop
fs
and
pop
pop
pminsw
jge
fnop
inc
clc
outsb
decl
add
rorb
dec
pop
push
insl
adc
call
rorb
cwtl
dec
sbb
out
adc
mov
pop
xchg
and
fwait
clc
push
dec
xchg
mov
into
sub
mov
xchg
cmc
stc
mov
dec
in
leave
mov
mov
sbb
and
test
icebp
or
imul
push
dec
mov
jge
add
pusha
out
xchg
ficoml
sbb
cmp
mov
stc
ja
mov
in
pop
add
jae
pop
ljmp
push
mov
sub
and
mov
push
dec
fcmovnb
push
pop
popa
cmp
jg
mov
xchg
push
stc
arpl
ret
mov
pop
cltd
das
and
push
dec
cmp
cmc
lahf
sub
cmpsb
imul
cmp
hlt
cs
xor
movsb
jg
orl
xchg
inc
imul
arpl
clts
ljmp
cmp
fwait
subl
xchg
mov
mov
popf
cld
pop
orb
sub
jnp
or
loop
arpl
mov
or
adc
and
ss
ss
popf
out
adc
je
push
rorl
pushf
dec
xor
je
repz
pop
xchg
and
cmp
adc
int
iret
outsl
mov
sbb
dec
push
sub
and
aaa
push
das
sub
sbb
cmpsb
add
ljmp
sbb
and
pop
pop
jge
adc
sbb
jae
mov
xchg
cli
lock
or
mov
mov
clc
dec
int
dec
imul
test
adc
xor
mov
lock
push
mov
and
in
xorl
dec
push
push
jp
ss
xchg
pusha
cli
outsl
sbb
rcrb
inc
add
sti
mov
testb
ljmp
dec
push
pop
je
sbb
test
mov
fstpt
in
jne
sahf
xor
lds
aam
pop
mov
xchg
mov
pop
xor
xchg
mov
fsub
imul
pushf
pop
movsl
iret
fstl
xchg
dec
out
mov
stc
call
in
or
jnp,pn
aad
sbb
aad
mov
fdivrs
jmp
push
mov
mov
adc
pop
out
popf
dec
stos
test
outsl
xchg
push
gs
jg
or
cmp
sub
incb
hlt
movb
push
mov
sbb
sbb
jg
mov
or
in
leave
cmc
inc
cmpsb
scas
mov
sbb
es
setns
pop
pop
jo
sub
lret
mov
lea
test
enter
xchg
mov
repnz
mov
xchg
scas
adc
pop
mov
mov
sub
sbb
adc
push
pop
ret
insb
lret
jo
nop
stos
xchg
jmp
ss
mov
and
mov
test
std
dec
mov
inc
aaa
imul
push
cmp
mov
add
jne
dec
int3
out
ret
cmp
inc
jp
xor
addb
aam
mov
sbb
pop
stos
adc
and
sar
mov
xor
hlt
jmp
rorb
jnp
test
outsl
fcompl
add
xchg
movsl
icebp
dec
or
fst
dec
inc
push
sbb
xor
push
sub
rcr
fdivp
or
lahf
nop
jle
add
cli
pop
or
clc
pop
xor
mov
xlat
adc
inc
popa
xchg
lods
cmp
ds
or
add
jmp
cmp
imul
cmp
add
dec
mov
or
int3
pop
or
pop
test
mov
pop
xor
sub
testb
dec
sbb
out
mov
imul
and
pop
jmp
add
add
clc
fucomp
popa
ja
test
add
cli
jmp
loope
test
mov
sub
repz
xor
cmp
pop
inc
mov
inc
subl
inc
sbb
popa
aas
mov
pop
fildll
sub
pop
and
ret
lea
or
push
ror
xchg
sbb
loop
gs
jne
add
pop
adc
into
xor
ds
adc
call
bound
sub
ds
mov
cmpsb
cmpsl
mov
xor
pushf
inc
dec
icebp
xor
mov
or
out
nop
pushf
cmpsb
sub
adc
xor
loop
popf
je
test
and
out
rolb
inc
ret
imul
and
push
loop
inc
mov
adc
shl
and
and
xor
sarl
inc
ret
lret
mov
pop
or
pop
out
in
bound
insl
mov
mov
pop
jne
nop
leave
xor
icebp
outsl
mov
mov
arpl
js
push
stos
gs
lea
pop
xchg
add
or
pop
lods
and
imul
inc
xchg
or
cmpsl
cmp
or
jne
das
cli
dec
lcall
mov
mov
add
mov
arpl
mov
rorb
or
mov
pop
fiadds
popf
lcall
jne
mov
test
xchg
hlt
fwait
add
out
cltd
iret
call
mov
xor
out
gs
adc
punpcklbw
es
sti
dec
push
jl
es
pop
xor
in
cmc
push
mov
xchg
lret
lahf
jb
jmp
add
push
int3
pop
jp
push
loope
shlb
xchg
rolb
shll
xor
outsb
nop
mov
mov
mov
std
xor
mov
fmul
ret
enter
popa
xor
imul
in
pop
dec
aaa
pop
pop
jo
pop
lods
lock
dec
dec
dec
push
xlat
mov
jbe
mov
test
adc
call
aam
xchg
xor
outsb
cmpsl
mov
pop
push
mov
pop
call
lret
cmp
pop
push
mov
fst
test
imul
rcll
mov
lahf
cld
sarl
xor
pop
inc
mov
stc
dec
lods
mov
mov
pop
enter
stos
clc
hlt
jl
push
aaa
inc
push
leave
pop
jge
stc
pop
xor
pop
fbstp
sbb
int
mov
dec
rcr
add
inc
inc
icebp
or
mov
jo
adc
sub
lret
outsb
and
jae
lds
pop
sbb
hlt
repz
xor
aaa
jb
sbb
fcoms
jnp
pop
unpcklps
mov
pop
out
ja
mov
sbb
test
sarl
mov
cmp
mov
and
lret
scas
pop
and
mov
imul
ficompl
or
xchg
movsl
mov
sub
mov
ret
ljmp
or
xchg
outsl
push
mov
into
xchg
cmpsb
adc
test
or
lods
jmp
ja
pop
les
dec
jne
insb
roll
jb
mov
ljmp
les
jb
std
add
rorb
sbb
adc
xchg
idivb
aam
xor
sahf
dec
or
adc
andl
aam
and
nop
mov
cli
daa
mov
jecxz
xlat
or
adc
xchg
mov
push
pusha
xchg
dec
mov
push
les
and
mov
mov
pop
out
movsb
mov
mov
fwait
test
pop
pop
jne
sbb
pop
pop
popa
sbb
sbb
out
xor
dec
inc
jecxz
pop
xchg
mov
pop
dec
xchg
push
lds
sbb
rcrl
out
shlb
xor
mov
lock
out
cmp
push
lods
cld
sub
inc
divl
cmpsl
ss
fisubs
loop
outsl
pop
or
int
push
sbb
push
shll
pop
inc
mov
lods
mov
or
or
fs
data16
icebp
into
xchg
daa
inc
mov
sub
xchg
into
jb
sahf
call
add
fwait
andl
jmp
lcall
mov
jg
nop
int
or
icebp
dec
inc
popf
and
lret
rclb
shll
mov
inc
sbb
enter
pop
addb
mul
aaa
pop
bound
dec
sub
jne
cwtl
int3
inc
pop
mov
mov
xchg
fcmovnb
fidivrs
push
ret
outsb
inc
ljmp
mov
mov
mov
ror
sub
pop
xchg
or
mov
mul
lea
sti
sbb
sbb
iret
fnsave
pushl
fadd
popa
mov
addb
loope
test
push
dec
jns
es
push
jp
inc
mov
fcompl
testb
rdpmc
mov
or
cmp
fsts
lret
imul
imul
les
or
insb
dec
sbbl
jg
cmp
data16
repnz
xchg
pop
cltd
mov
jle
add
xchg
sbb
push
push
lret
sbb
into
out
wbinvd
mov
or
gs
loopne
adc
stc
pop
mov
outsl
dec
ret
cmpsl
push
in
sbb
mov
lcall
test
fstpt
inc
and
sbb
in
add
sub
mov
jle
call
call
outsl
int
scas
fildll
adc
jge
mov
jb
fcompp
xchg
xchg
stos
inc
in
jb
rcl
adc
aam
in
jns
andb
xchg
bnd
and
pop
cwtl
or
push
lods
scas
sar
sbb
nop
xchg
iret
cs
mov
inc
lea
hlt
fstpt
jne
pop
fpatan
sub
xchg
sbb
sahf
lea
movsb
outsb
rcr
dec
ret
mov
repz
sahf
leave
jo
das
fwait
and
cmpsb
loop
loop
call
jg
lret
bound
negb
shlb
push
lock
push
iret
call
shll
push
aad
mov
or
into
popf
and
mov
lds
shr
sub
xor
or
pop
je
lret
rcrl
daa
test
pop
loope
pop
fnstsw
xchg
jg
jecxz
movsl
or
ljmp
xchg
sbb
mov
mov
push
out
push
sub
push
sbb
movsl
sahf
jp
in
push
sbb
sti
mov
or
adc
int3
mov
shrb
push
sbb
shr
sbb
cmp
pop
les
inc
dec
or
or
add
sub
nop
dec
adc
rol
cli
mov
mov
scas
movsl
dec
gs
pusha
repz
imull
imul
shl
iret
loop
daa
fcompl
mov
sub
mov
mov
test
sub
or
ds
pop
xchg
js
cli
test
mov
sub
seta
push
jge
jno
fstp
jmp
sti
or
ljmp
push
jae
ds
mov
call
lock
lcall
lods
es
mov
xor
ret
enter
jns
out
fadd
outsl
cmp
xchg
movsb
dec
xchg
ljmp
mov
mov
jae
or
mov
cmc
lea
sbb
dec
mov
cwtl
fs
ss
insl
sbb
jp
fldt
frstor
sbb
mov
mov
fs
test
clc
enter
sub
adc
xor
sub
jno
sahf
rorb
in
mov
pop
push
jno
push
xor
loop
dec
mov
and
and
sbb
cmpsb
pop
movsb
je
pop
mov
jo
jae
fcmovne
and
call
add
sbb
pushf
inc
add
int3
pop
jge
es
js
and
ffree
push
push
in
aas
push
sbb
xor
subl
jo
testl
insb
push
push
dec
mov
xchg
sub
in
cmp
jle
dec
xor
or
jle
add
or
push
jnp
cmp
insb
inc
lods
out
out
add
inc
mov
into
adc
testb
mov
in
mov
pusha
xor
inc
dec
rorl
in
cmpsl
sub
sbb
fs
jae
mov
in
jg
sbb
xchg
mov
fiaddl
lea
cmp
mov
pop
popf
shlb
jbe
mov
inc
leave
sub
sbb
xchg
pop
ljmp
loopne
cltd
stos
cmp
mov
jns
cmp
pusha
outsl
ljmp
lcall
jp
and
push
in
adc
push
dec
mov
lahf
cmp
sbb
xchg
stc
or
aas
mov
ds
fmull
mov
and
mov
xchg
sub
dec
xchg
scas
and
add
dec
push
lahf
inc
ret
inc
es
cld
mulb
xor
pusha
ror
icebp
sub
pop
data16
xchg
fidivl
pop
cmc
gs
inc
nopl
fnsave
sbb
xor
ds
inc
pop
or
mov
mov
inc
add
imulb
push
fsts
fs
add
rcr
pop
ja
inc
push
mov
imul
mov
std
mov
inc
repnz
dec
push
and
js
shrl
add
push
mov
imul
es
mov
fnsave
iret
jl
mov
sbb
sahf
add
fdivrl
lods
sub
sbb
outsb
js
push
pusha
dec
dec
cmp
mov
mov
dec
repz
lods
and
sub
dec
or
xor
pop
shl
mov
mov
jb
adcb
and
cmp
mov
popf
into
dec
mov
pop
rorl
ror
mov
mov
pop
movsl
sub
je
and
mulb
mov
fnstsw
push
push
or
push
inc
out
push
mov
ret
fsubrs
xchg
push
fwait
lret
jecxz
or
stos
jmp
sub
loopne
das
and
movsl
mov
mov
std
test
mov
in
cmp
nop
cmpb
movsb
xchg
mov
bsf
dec
pop
lret
aas
cmpsl
push
popl
sub
adc
mov
mov
adc
es
loopne
jo
loopne
and
pop
jl
xor
dec
clc
jg
add
enter
pop
fldcw
inc
fldt
aaa
sub
push
cltd
cwtl
xchg
jge
iret
sub
aas
out
les
psubd
inc
ret
or
iret
or
xchg
adc
test
sub
jnp
pop
mov
pop
mov
arpl
stc
xor
xlat
imul
sub
lret
add
or
or
rorb
jle,pn
dec
cld
mov
sarl
xchg
ficoml
dec
sub
je
inc
ljmp
in
pop
popa
repz
xor
or
pop
mov
subl
inc
jnp
push
mov
mov
dec
icebp
dec
jle
into
call
mov
push
ljmp
and
xor
lods
inc
inc
pop
xchg
fcoml
jo
pop
adc
mov
dec
xchg
data16
and
lock
adc
ret
inc
and
gs
arpl
je
leave
mov
ja
icebp
dec
mov
xor
cli
ljmp
andb
data16
push
mov
aam
lock
xchg
mov
jns
int3
sahf
jo
ret
mov
fiaddl
push
dec
mov
cmc
jl
jb
call
iret
xchg
rcrl
add
add
xchg
mov
push
add
jb
jnp
aam
dec
sbb
js
add
scas
sbb
push
mov
pushf
aas
inc
enter
xor
int3
mov
xchg
popa
jns
sbb
mov
xchg
jbe
sahf
cwtl
loop
out
das
sahf
test
sarb
stos
xor
ja
and
fadds
add
and
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
pushl
push
push
call
jmp
mov
sub
mov
mov
andl
mov
inc
mov
cmpl
jne
call
cmpl
jne
xor
or
inc
mov
cmpl
jb
xor
or
add
mov
mov
mov
mov
sub
or
mov
movl
cmpl
je
cmpl
jne
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
xor
add
add
mov
and
mov
sbb
xor
add
andl
mov
inc
mov
cmpl
jne
push
call
cmpl
jb
mov
mov
xor
add
mov
mov
mov
mov
xor
xor
add
movl
cmpl
je
cmpl
jne
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
movl
cmpl
je
cmpl
jne
call
mov
dec
mov
jmp
movl
cmpl
je
cmpl
jne
push
push
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
movl
cmpl
je
cmpl
jne
pushl
push
pushl
pushl
call
mov
dec
mov
jmp
andl
mov
sub
lea
andl
xor
subl
xor
cmp
movl
je
mov
addl
xor
add
movl
cmp
movl
jne
orl
pushl
sbbl
call
movl
cmpl
je
cmpl
jne
push
pushl
pushl
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
mov
mov
xor
add
cmp
je
pushl
pushl
call
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
mov
add
mov
mov
mov
add
mov
mov
mov
add
mov
jmp
mov
mov
add
mov
mov
mov
xor
add
cmp
je
jmp
mov
mov
xor
add
cmp
mov
je
mov
xor
add
cmp
je
lea
push
pushl
pushl
call
mov
mov
xor
add
cmp
je
mov
movzwl
mov
mov
mov
jmp
mov
xor
lea
jmp
mov
xor
add
jmp
mov
add
mov
mov
test
je
movl
push
xor
pop
add
push
pop
push
dec
pop
dec
xchg
sub
xchg
dec
mov
imul
sub
mov
mov
xor
add
jmp
mov
mov
mov
mov
xor
add
xor
div
mov
xor
lea
mov
mov
mov
mov
mov
xor
lea
mov
mov
mov
xor
add
imul
mov
mov
xor
lea
cmp
jne
mov
xor
add
mov
mov
add
xchg
xor
push
mov
pop
mov
add
lea
add
add
push
inc
pop
dec
xchg
dec
xchg
dec
xchg
dec
push
mov
pop
dec
call
cmp
je
xchg
push
pop
push
pop
inc
xchg
sub
xchg
dec
dec
mov
imul
add
xchg
push
xor
mov
dec
inc
add
dec
xor
add
pop
mov
pop
pop
pop
leave
ret
push
mov
sub
movl
cmpl
je
cmpl
jne
push
call
mov
dec
mov
jmp
adc
push
sub
push
mov
mov
sub
add
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
pushl
push
call
cmpl
jne
xor
or
inc
mov
jmp
dec
mov
sbb
mov
mov
movl
cmpl
je
cmpl
jne
push
call
cmpl
jne
xor
xor
dec
mov
mov
dec
mov
jmp
andl
mov
mov
adc
movl
add
movl
mov
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
push
push
call
jmp
and
sub
adc
mov
xorl
sbb
mov
mov
or
sub
mov
orl
add
mov
xor
xor
mov
sub
imul
mov
movl
cmpl
je
cmpl
jne
pushl
push
push
call
cmpl
jne
xor
or
dec
mov
mov
dec
mov
jmp
sub
mov
orl
mov
mov
sub
mov
orl
mov
mov
sub
mov
mov
mov
mov
xor
mov
add
or
mov
mov
mov
sub
mov
orl
mov
xor
add
push
mov
xor
add
push
mov
xor
add
push
lea
push
pushl
pushl
call
test
je
lea
push
mov
xor
add
push
mov
add
push
mov
mov
pushl
call
mov
lea
mov
mov
test
je
lea
mov
mov
mov
mov
mov
sub
mov
mov
xor
mov
sub
add
mov
mov
mov
mov
pushl
movb
mov
pushl
pushl
pushl
pushl
pushl
pushl
pushl
mov
call
mov
mov
add
pop
pop
leave
ret
push
mov
sub
movl
cmpl
je
cmpl
jne
pushl
pushl
pushl
pushl
call
cmpl
jne
xor
xor
dec
mov
mov
dec
mov
jmp
mov
mov
sub
and
movl
subl
lea
mov
movzwl
sbb
push
mov
mov
and
mov
sbbl
lea
addl
mov
neg
mov
sbb
mov
mov
sbbl
xor
andl
add
mov
adc
mov
adc
mov
mov
xorl
add
push
and
mov
movzwl
sub
mov
xorl
jmp
mov
mov
jno
push
cmpsl
xor
pop
ror
pop
jl
dec
pop
jl
mov
dec
jne
or
xor
add
stos
pop
dec
repnz
jmp
imul
mov
sbb
aad
xchg
lret
aaa
xchg
cwtl
mov
jmp
jns
sbb
jae
out
xchg
fcoms
aam
and
xchg
push
popf
jmp
std
mov
roll
shll
scas
or
pop
xor
xor
push
mov
movsl
add
jp
inc
cmp
adc
mov
dec
pop
imul
pop
insb
test
sahf
int3
mov
fwait
outsb
xor
push
inc
xor
xchg
mov
push
lret
xor
pop
or
sub
insb
movsb
cmpsl
mov
mov
repnz
jbe
jns
fwait
jecxz
fwait
leave
inc
sbb
jmp
push
in
mov
mov
daa
xchg
push
jns
and
aad
cs
fistl
enter
xor
mov
jg
inc
add
xor
cmp
push
inc
mov
je
aam
leave
arpl
out
aaa
addr16
faddl
cltd
mov
mov
jge
pop
mov
in
jp
xlat
add
xor
dec
cmpsb
imul
adc
data16
mov
lret
dec
negb
cmp
in
mov
ljmp
and
arpl
xor
push
shr
mov
ja
sub
ss
out
les
cmpsb
and
repz
enter
inc
pop
xchg
push
jg
aas
stos
sub
dec
sub
and
imulb
jmp
subl
bound
jns
idivl
pop
push
dec
adc
push
sbb
adc
mov
test
mov
xor
ror
mov
cmp
jle
jbe
mov
sub
clc
push
gs
cld
pop
les
les
scas
gs
xor
or
mov
shll
idivb
xor
mov
mov
cmp
or
pop
inc
lods
lods
loopne
push
sbb
or
repz
pushf
xor
cmp
cmp
scas
xchg
push
cmc
inc
inc
jl
in
pop
mov
jns
loope
push
fimuls
ficomps
hlt
inc
push
lods
mov
mov
xor
jne
cmp
sbb
push
jl
ss
hlt
stc
gs
inc
sub
push
push
xchg
sti
leave
add
outsl
add
nop
xchg
fnsave
push
adc
push
push
mov
xchg
jp
ret
pop
mov
jo
mov
or
adc
fwait
cltd
mov
and
adc
jb
jge
add
imul
inc
rcrl
inc
inc
pop
add
pop
lods
push
test
leave
insl
sub
add
lret
mov
or
inc
in
xchg
pop
sub
popf
push
mov
scas
fists
dec
outsl
inc
std
sbb
sub
cli
int3
dec
sbb
ret
icebp
xchg
cmpsl
mov
inc
add
jno
push
cltd
mov
and
dec
jno
mov
or
and
ret
rorb
add
repnz
push
mov
scas
cmp
pop
mov
jo
popf
or
ja
pop
repnz
mov
stc
shlb
ret
and
jno
mov
repnz
leave
push
ret
imul
movsb
test
xchg
sbb
mov
shr
inc
and
inc
fs
fs
fwait
jae
push
scas
icebp
ret
das
mov
repz
or
filds
fiadds
lret
add
pop
lods
cs
in
push
pop
sbb
mov
es
int3
aam
pusha
jo
cmp
mov
loopne
std
mov
xchg
jg
sbb
mov
std
add
cmp
and
fiadds
cwtl
inc
in
mov
push
or
test
pop
dec
js
shll
xchg
mov
dec
jp
iret
xchg
push
xor
mov
addr16
out
add
jns
xor
pop
mov
cmpsb
imul
dec
sub
pop
or
out
pop
ljmp
jns
ret
xchg
fsts
mov
lods
push
es
lahf
fsubl
dec
push
jbe
xor
test
jnp
outsl
out
mov
sbb
mov
outsb
insl
sub
fcomps
push
mov
fisttpll
mov
add
aas
jg
xchg
inc
fimull
lods
aas
pop
test
jmp
jle
andl
push
es
rcll
lods
aas
lock
hlt
inc
xor
ss
sbb
decl
xchg
xchg
inc
je
loope
jl
mov
ret
push
pop
xor
dec
sahf
mov
lret
xchg
iret
faddl
clc
rcl
insb
js
adc
daa
scas
lret
rcll
loop
pop
nopl
test
jo
cld
mov
cmc
push
test
mov
sbb
and
push
sbb
insl
add
mov
xor
in
out
mov
bound
xor
or
add
stc
mov
cs
jne
and
inc
xlat
das
lahf
jge
xchg
bound
xchg
stos
push
and
push
push
cmpsb
xchg
mov
sbb
in
push
sub
gs
mov
sti
jnp
sar
fimuls
mov
dec
outsb
or
fcom
push
subl
das
mov
pop
fstpl
adc
jl
dec
mull
push
dec
scas
outsb
sbb
jae
xchg
jnp
sbb
loop
xor
int3
aaa
rorl
dec
call
and
loope
ret
sub
mov
repz
or
ljmp
push
cmpsl
pop
sbb
push
or
movups
mov
and
jae
imul
jo
mov
mov
lret
jb
pop
push
jo
popa
jbe
lcall
out
jno
sti
sahf
xor
jnp
xor
sub
push
addr16
adc
xor
sub
hlt
cmp
ret
jo
lds
lcall
jno
dec
in
add
repnz
cmpsl
sub
pop
mov
mov
mov
fsubrs
jns
mov
popa
jge
push
and
fimull
cmpsl
es
cs
ja
loopne
cmp
roll
mov
stos
ret
test
pop
or
xchg
push
inc
add
jmp
aas
cld
lret
adc
add
jl
jecxz
mov
or
js
add
fcomps
in
in
cmpsl
push
push
enter
mov
bound
repz
popa
mov
mov
iret
cmc
lods
lret
iret
rorl
pop
jmp
js
sti
xchg
add
sbb
cwtl
jae
fisttps
xchg
dec
sbb
and
ja
lret
in
sbb
bound
out
mov
inc
jge
inc
js
jmp
arpl
mov
movsl
jns
lock
lcall
dec
or
jae
lea
or
adc
lods
mov
lds
leave
icebp
jne
jo
inc
outsl
mov
sbb
aad
clc
and
pop
lods
jbe
sbb
or
daa
lods
fs
mov
lahf
mov
push
add
jg
or
leave
jl
mov
sbb
jno
cmpsb
js
adc
lock
iret
rol
mov
xor
imull
loopne
pop
je
dec
hlt
push
mov
lds
mov
fisttpll
pop
cmp
add
movsl
push
test
out
sub
cmp
or
notb
adc
cmp
xchg
popa
lods
dec
or
gs
jne
ss
mov
mov
xchg
or
push
repz
test
imul
adc
lret
or
fcmove
fstl
adc
inc
out
adc
and
loop
data16
lcall
xchg
add
scas
mov
dec
sbb
fwait
int3
loope
shrl
popa
and
scas
out
or
les
test
push
mov
insb
orl
or
lds
xor
push
mov
pop
clc
sti
pop
int
cld
mov
push
mov
test
mov
and
cmpsl
pop
jne
push
leave
ret
xchg
imul
mov
inc
cmp
daa
in
adc
push
mov
mov
inc
aad
add
rcll
sbb
aas
inc
xchg
test
mov
popf
fnsave
sbb
pop
and
jmp
outsl
scas
bound
std
jmp
push
sbb
cmp
jns
xchg
aad
dec
andl
lods
mov
and
fsubrp
fidivrs
jp
push
sti
ja
aam
out
jge
push
leave
or
mov
fisttpll
mov
out
xchg
aam
dec
daa
daa
loop
push
adc
ss
es
or
loop
cmpsb
outsl
jle
sbb
dec
loop
jo
pushf
jns
pop
pop
gs
xor
add
test
stc
adc
aaa
aam
pop
pop
aad
dec
sub
ja
aas
jecxz
or
mov
inc
dec
sbb
dec
movsb
in
rcl
and
orl
sbb
or
xor
jb
pop
cmp
ret
push
mov
jp
andl
jl
pop
inc
mov
sbb
xchg
dec
or
xor
jp
outsl
shl
jl
ja
inc
andb
dec
lahf
out
push
cmp
pop
sbb
test
ss
scas
orb
sbb
call
push
in
mov
cmc
aas
or
mov
clc
xor
mov
popl
stos
xchg
mov
imul
and
and
cmp
mov
imul
sahf
mov
outsb
pop
lock
aaa
insl
lcall
fdiv
or
mov
or
lahf
dec
mov
inc
pop
aas
and
sbb
aad
test
mov
xchg
mov
jmp
fcomps
in
and
push
push
pop
fisttps
pop
adc
add
add
arpl
pop
or
lahf
sub
aam
int3
or
divl
adc
mov
outsb
or
lods
sub
repz
pop
xor
pop
cmc
ret
imul
jo
fstps
stc
cmpl
inc
je
cmpsb
pop
adc
dec
jg
mov
call
data16
rcr
xchg
or
jnp
cld
ficoml
sub
enter
jmp
ret
mull
ss
mov
mov
mov
repnz
rclb
sbb
insl
loop
sub
mov
and
mov
sub
in
dec
imul
mov
outsb
icebp
sub
dec
sub
jmp
icebp
aaa
test
lret
stos
les
into
push
iret
cwtl
jge
sub
add
mov
jne
push
popa
dec
add
add
pusha
sti
jns
cmp
adc
cwtl
out
faddl
ss
dec
sbb
shrl
jl
repz
sub
mov
push
decb
in
add
cmc
push
lods
push
in
fwait
and
int
mov
in
repz
adc
inc
ja
test
xchg
jno
mov
andl
sahf
out
push
stos
adc
data16
lods
cmp
into
movsb
add
test
cmpsl
push
pop
cmp
mov
clc
mov
fmull
cmp
cwtl
mov
xor
test
pop
cmp
mov
cld
mov
mov
shrl
pop
out
test
lret
loope
mov
jp
sbb
stos
dec
dec
add
mov
pop
outsb
xchg
xor
out
int
lahf
lods
dec
adc
sbb
dec
xor
rclb
movsl
pop
ds
test
out
xor
push
lcall
cmp
movsl
pop
add
lods
imul
cmp
leave
or
jae
push
and
jnp
dec
int3
mov
imul
push
mov
sbb
xor
xor
cmpb
mov
cmp
xchg
mov
inc
divb
xor
inc
orl
jge
xchg
mov
in
xchg
test
aam
or
shlb
in
fs
xor
push
and
daa
mov
jp
cmp
jo
jmp
jae
and
xlat
loop
negb
mov
or
movsl
inc
mov
fisubrs
cmpsl
pop
loopne
cmc
pop
jns
mov
mov
imul
add
mov
shll
sub
push
xor
in
pusha
negl
jo
rorb
jno
ja
scas
enter
push
dec
jge
add
xchg
lock
shlb
sub
xchg
mov
adc
or
xchg
cmp
jae
cltd
add
pop
inc
adc
fisttps
orl
sbb
scas
movb
pop
popf
je
pop
pop
adc
mov
fldcw
push
popa
scas
fidivrs
sahf
lret
add
ja
mov
mov
xchg
pop
js
pusha
xchg
push
cmp
mov
xlat
jae
cmc
xor
mov
xchg
sub
insl
popf
cmp
sahf
fdivl
pop
push
popf
icebp
xor
ljmp
sub
lock
dec
and
sbb
mov
scas
jle
popf
mov
rclb
lret
xchg
pop
and
push
sbb
int3
hlt
cmpsl
or
repz
shl
fbstp
inc
jbe
jg
push
shll
loopne
insb
rcrb
push
ret
inc
mov
or
add
cmpsb
into
pop
and
sbb
or
push
cmp
shlb
repz
into
inc
mov
fsts
cld
jns
cmp
sbb
jmp
int3
nop
nop
dec
and
movsb
mov
les
xchg
imul
mov
xlat
sahf
xchg
cwtl
push
ja
xchg
push
adc
mov
ljmp
inc
and
push
adc
mov
daa
gs
adc
push
push
push
mov
mov
leave
aaa
lret
mov
hlt
sbb
mov
sub
ss
inc
jp
fdivl
cwtl
mulb
fldenv
shr
xchg
cmc
and
enter
lea
xor
xor
fs
xor
jg
dec
fs
insl
or
pop
test
sahf
call
repnz
leave
xchg
jl
out
xor
dec
nop
pop
mov
xor
sbb
ds
ficompl
int
shl
test
dec
insb
xor
das
sub
mov
xlat
rcrb
add
jge
arpl
dec
iret
jge
sub
push
xor
or
cmc
leave
push
xchg
out
test
leave
insb
pop
xchg
into
mov
dec
test
loopne
xchg
in
adc
call
ret
mov
jle
inc
frstor
xor
dec
outsl
mov
out
rorb
orb
cli
sbb
xchg
dec
sub
mov
mov
orl
dec
cmpb
lret
or
and
rcll
cmp
test
mov
cmpsb
cmpl
clc
xor
xchg
jbe
dec
movsb
adc
mov
dec
cli
push
mov
xor
sbb
dec
arpl
psrld
jae
jmp
dec
adc
imul
pop
adc
enter
inc
mov
sahf
out
sahf
int3
jle
jg
push
cmp
ds
loope
mov
gs
cli
insl
adc
mov
divl
lods
add
cmp
lret
faddp
lds
scas
fstl
pop
pop
popf
test
lods
cmp
pusha
roll
out
icebp
push
out
adc
pop
cmpsl
mov
xchg
lcall
adc
dec
dec
xchg
jae
push
in
inc
mov
out
adc
fldcw
stos
fdivrp
sub
out
add
push
or
and
xchg
mov
movsb
sub
bound
jge
dec
loop
movsl
inc
inc
and
aaa
xchg
add
and
sbb
hlt
or
scas
jg
inc
fistps
jo
clc
cmp
mov
je
test
lahf
movsl
lods
jo
pop
adc
fsubrl
xor
loop
pop
stos
ja
mov
loopne
rcrl
mov
sbb
pop
outsl
aad
or
imul
imul
mov
rorb
add
jg
jmp
psubb
in
mov
sbb
adc
push
cmp
push
insb
repz
xchg
pop
mov
dec
pop
jb
push
mov
test
clc
or
pusha
add
mov
int
jae
ja
dec
loope
aam
mov
out
popf
scas
iret
xchg
sar
ficoms
push
dec
insb
sbb
sub
addb
jns
hlt
je
int
add
pop
pop
fs
call
cmc
mov
inc
mov
and
in
inc
sahf
les
sub
push
into
neg
pop
repnz
cwtl
cmp
mov
cmpsl
int3
pushf
push
aas
mov
xchg
out
mov
sahf
mov
and
mov
mov
nop
or
jb
mov
in
add
push
mov
ss
xchg
scas
es
shlb
adc
imul
and
incl
shlb
aad
add
and
lahf
imul
mov
dec
jno
in
jmp
jmp
pushf
nop
popa
adc
dec
xchg
cli
cmpsl
fucomi
testb
fsubl
filds
mov
pop
test
cmpsl
iret
or
outsb
cmpsl
jnp
jge
gs
jecxz
fmulp
data16
mov
sbb
mov
test
pop
insl
fsub
sti
rcrl
xor
push
dec
or
xor
fsubs
cwtl
test
and
shl
mov
fiadds
ds
dec
xor
popf
aam
mov
test
xor
and
subb
adcb
sub
popa
mov
push
psrlq
dec
inc
and
or
sub
push
in
enter
fildl
lock
je
test
lods
jge
movsl
mov
loope
cs
ljmp
arpl
jecxz
fsubl
add
xchg
jne
sbb
mov
jp
orb
ljmp
iret
fdivr
ss
fsub
sub
pop
nop
cmp
jo
aas
divl
or
fwait
aaa
xchg
jmp
leave
ljmp
sbb
push
sub
addr16
les
push
js
cmp
dec
fs
mov
cmp
jno
xor
jno
xchg
icebp
adc
mov
nop
xchg
cmp
out
push
sarl
push
inc
jnp
enter
filds
mov
mov
jne
push
fnstcw
xor
stos
insl
sub
add
test
xchg
cs
jo
pop
bound
ss
dec
pop
clc
hlt
in
test
inc
sarb
mov
pop
mov
sti
mov
xchg
sahf
cli
add
push
sbbl
inc
dec
jb
push
mov
pop
push
push
jne
mov
subl
cmp
stc
and
jnp
dec
es
pop
cmpsb
xor
jae
lods
pop
sti
pusha
mov
mov
xor
jno
cmc
add
push
cmp
add
into
scas
stos
sbb
or
insl
pop
pop
ss
push
add
fdivrl
icebp
in
inc
inc
test
iret
push
or
and
andb
xor
or
or
cld
xlat
push
jno
or
sarl
int
dec
imul
xchg
xor
xchg
loopne
adc
movsl
and
add
sbb
scas
adc
sbb
arpl
push
shr
fld
cmp
mov
lea
lret
dec
jge
mov
jb
sbb
in
scas
lea
icebp
jne
xchg
inc
sbbb
push
lahf
mov
imul
icebp
add
faddl
scas
or
fucom
les
aaa
cli
shl
aad
and
inc
ds
adc
xor
repnz
ret
loop
inc
das
in
fists
fwait
and
shll
cld
and
out
pop
shll
sbb
adc
push
in
push
test
cli
sti
dec
mov
push
shl
shrb
xchg
mov
adc
jae
fstl
sbb
shrb
add
scas
pop
pop
mov
mov
push
cmp
orl
rorb
orb
adcl
jge
imul
jns
jb
gs
lds
aad
jns
clc
lods
sub
ss
repnz
pop
add
ljmp
or
popf
sti
add
lcall
aad
movsb
ljmp
xchg
pop
mov
jns
mov
xchg
cmp
xchg
push
cmp
jecxz
dec
gs
enter
or
fcoml
cmp
cmp
shll
sahf
pop
cmp
inc
adc
jmp
pop
jmp
decb
pop
jl
stos
aad
push
lahf
jmp
lods
das
mov
shlb
mov
lea
outsl
leave
jne
std
ja
aam
hlt
sti
sbb
das
xchg
movsb
icebp
lock
cmp
pop
fidivrl
xchg
mov
movsl
mov
pop
push
mov
sub
xchg
das
mov
dec
push
sub
out
lret
in
cmpsl
jg
adc
dec
cwtl
imul
xchg
cmpsl
mov
jp
in
mov
std
scas
lock
pop
imul
pop
loope
pop
dec
pop
jle
pop
cmpsl
push
out
daa
xchg
cmp
mov
mov
gs
ss
clc
xchg
fists
push
or
and
add
mov
int3
ss
xchg
mov
pusha
inc
out
mov
add
xchg
inc
jb
mov
add
sub
add
and
addr16
jno
mov
out
pop
aad
clc
or
add
xchg
xchg
fnstenv
fdivr
rcrb
out
push
fsubp
loop
fs
push
ret
cmpsb
adc
imul
fdivs
test
push
sbb
sbb
mov
aad
inc
lods
hlt
mov
mov
ljmp
and
add
mov
gs
add
lcall
fwait
inc
sbb
xchg
inc
ds
ljmp
rcll
jbe
adc
and
lock
push
mov
mov
std
fadds
je
filds
inc
mov
es
push
mov
xchg
pop
push
xchg
lea
es
or
andb
push
fsubl
dec
push
imul
mov
mov
aaa
adc
mov
jmp
inc
xor
aad
xlat
stos
testl
xchg
dec
mov
scas
addr16
and
imul
lea
popa
inc
dec
pop
js
xchg
dec
sbb
or
sub
sbb
into
std
sbb
inc
push
sahf
sbb
and
mov
ss
mov
jmp
sbb
or
and
testb
xor
lret
inc
jp
pop
in
cs
pmaxub
das
push
push
int
ret
push
shrb
mov
cli
xchg
popa
pop
mov
roll
insl
aad
test
cmpl
ret
iret
mov
fists
test
xchg
xor
arpl
jbe
jmp
aas
sub
mov
fadds
loopne
int
vmread
in
std
es
insb
adc
imul
mov
add
lds
cmpsb
out
call
add
dec
mov
cmpsb
daa
jle
insb
push
lods
mov
pand
in
je
incb
xchg
aaa
dec
ret
cmp
imul
stos
mov
sub
cmpsl
cltd
lock
mov
pop
stc
shr
pop
cmpsb
dec
cmpsl
fwait
and
jle
sbb
js
add
sti
push
bsr
rcl
mov
jo
xor
aas
in
ds
lods
adc
add
es
mov
roll
js
insl
or
add
and
loop
dec
les
icebp
mov
xlat
out
popf
cmc
test
cld
aaa
dec
insb
call
cmpb
mov
fcoms
inc
popa
jbe
flds
jbe
out
int3
ret
sar
cmp
adc
sbb
sub
jl
push
jl
dec
inc
js
adc
pusha
aas
push
dec
lcall
push
jb
xchg
mov
xchg
sti
popa
in
jns
rclb
ret
sub
enter
cmp
ret
mov
int
pop
sbb
jle
xchg
adc
out
in
xorb
sti
mov
pop
cmp
inc
push
mov
inc
nop
mov
ljmp
cmp
addl
lret
pop
cmpsb
jmp
mov
loope
mov
inc
int
bound
das
pop
shrl
int
inc
inc
cmpsl
push
mov
test
jb
jne
xor
loope
movsb
jl
test
mov
adc
in
subb
js
or
mov
insl
adc
inc
xchg
mov
and
fsubr
mov
in
loopne
push
cmc
sbb
leave
je
or
jecxz
in
sbb
cmp
sbb
fs
push
jnp
xchg
jno
dec
divb
iret
sti
add
mov
int3
push
dec
adc
mov
sbb
out
inc
leave
add
pop
outsl
push
jb
adc
inc
test
sub
cmc
sbb
push
adc
pop
cmpsb
add
imul
lds
or
int
leave
xchg
jge
mov
push
dec
pop
xor
fistl
or
bound
and
cmp
loopne
or
push
es
jbe
aas
loope
pop
sub
or
rol
mov
xor
insb
mov
or
dec
xor
aaa
xlat
flds
inc
dec
icebp
inc
aad
add
push
rorl
hlt
pop
je,pn
std
ljmp
jnp
lahf
pop
dec
push
jo
aam
outsl
call
out
data16
xchg
scas
cmp
rorl
add
and
dec
adcb
push
jne
imul
pop
mov
das
ficoms
sub
lods
xor
or
cvtps2pi
insl
sbb
lods
nop
dec
sti
int
sbb
cltd
push
sti
mov
lods
mov
push
aaa
shl
sbb
adc
xor
repz
stc
mov
xlat
sahf
add
dec
cmp
mov
dec
inc
arpl
pop
mov
push
mov
mov
push
loope
jp
mov
mov
jmp
xchg
je
jl
js
fadd
fisttpll
adc
add
jg
aaa
pop
adc
xchg
jae
jo
xchg
xor
mov
inc
fcompl
pop
aaa
gs
jns
push
ss
fsts
and
push
mov
push
ficomps
fldenv
sahf
xchg
jb
push
add
popa
pop
test
jo
addr16
xchg
pcmpeqb
mov
push
call
adc
je
jns
xchg
addl
lods
jl
jge
int3
xchg
lret
jmp
jnp
test
ljmp
xor
test
xchg
or
mov
mov
shll
stc
icebp
add
movl
sbb
mov
xor
push
xor
xchg
mov
mov
lcall
or
popa
jmp
cld
sub
popf
push
ficomps
fcomps
jne
adc
dec
test
call
rol
mov
fisubl
adc
xchg
outsb
add
xor
inc
pop
cwtl
insl
xchg
mov
xchg
insl
mov
ret
arpl
pop
cltd
pop
sub
ret
cmc
jmp
clc
adc
cmpl
or
loop
mov
dec
mov
test
mov
push
push
jne
das
loop
xor
testl
jle
hlt
mov
pop
jbe
mov
jne
lret
dec
xchg
mov
daa
movsb
adc
pop
add
scas
js
movsbl
lret
lahf
pop
insl
dec
lods
xchg
mov
inc
inc
mov
cmp
pusha
lret
fidivrs
mov
int
push
cmpsl
xchg
mov
leave
insb
stc
repnz
shlb
movsl
sbbb
fisttps
mov
xlat
jle
sub
repz
mov
pusha
and
in
or
mov
out
or
cld
stc
mov
loope
imul
lods
or
gs
jecxz
adc
sub
mov
stos
popa
mov
push
add
jbe
cltd
jp
xchg
cmp
cmp
dec
insb
add
dec
mov
sub
popa
int3
inc
lcall
pop
dec
xchg
scas
sahf
cltd
jecxz
aam
jmp
adc
loopne
inc
jmp
mov
pop
push
push
mov
mov
cmp
iret
rol
push
loopne
jns
pop
jb
ss
mov
fldl
sbb
int
lret
mov
adc
dec
aam
adc
fdiv
add
test
call
insl
movsl
in
leave
jns
xor
mov
mov
jle
and
loop
dec
inc
es
push
pop
les
sbb
jg
stos
push
xchg
loope
sbb
xchg
jg
test
push
mov
sub
pop
sub
aaa
jne
jp
pop
je
inc
rcr
push
mov
jp
frstor
out
into
aam
push
lret
popl
cwtl
outsl
mov
stc
jp
cmp
es
arpl
lock
mov
sub
es
xorl
icebp
daa
mov
popa
in
inc
pop
adc
scas
mov
jb
fcomi
insb
or
lret
fnsave
sbb
out
xor
xchg
mov
mov
mov
push
inc
int3
gs
aad
pop
bound
ss
ljmp
frndint
testl
mov
mov
lock
jl
ficoml
test
ret
lcall
xchg
aaa
shlb
xlat
adc
lea
dec
mov
sub
mov
mov
std
incl
test
inc
add
push
jg
stos
or
jne
xchg
add
lahf
cmp
xchg
or
int3
jg
scas
mov
clc
jp
pop
and
ljmp
fdivs
ja
push
jp
pusha
jmp
hlt
mov
pop
xchg
pop
pop
add
iretw
ljmp
mov
adc
mulb
mov
jmp
bound
pop
adc
cmp
add
sahf
repz
fstps
add
gs
sbb
sub
pushf
jnp
add
out
xor
inc
mov
push
xchg
iret
movsl
xor
pop
out
popa
or
fimuls
sbb
cmc
rcrl
push
cld
lods
repnz
rorl
xor
fwait
sub
adc
pusha
pop
out
ljmp
jg
and
mov
jno
movsb
pop
jecxz
ret
sub
adc
push
mov
add
cli
das
outsb
dec
xchg
imul
add
or
pop
sbb
xchg
or
ja
iret
sbb
fildl
sahf
xchg
pop
mov
mov
cmp
enter
push
jbe
loopne
add
into
mov
pop
mov
sub
rcrl
pusha
xor
xchg
outsl
int3
pop
repz
xchg
rcrl
mov
mov
lds
and
dec
stc
push
inc
mov
dec
jmp
mov
cmp
mov
sbb
push
dec
pop
jl
cmp
adc
inc
or
sub
jmp
inc
sub
xchg
sub
daa
in
aam
mov
mov
pop
xchg
repnz
pop
out
cwtl
testl
inc
emms
dec
hlt
ficoml
cmc
lods
scas
mov
stos
scas
adc
add
leave
popa
ret
push
adc
ret
jl
mov
cmp
inc
xchg
out
pusha
out
js
mov
stos
sbb
mull
arpl
scas
leave
sub
loope
lods
mov
scas
test
adc
add
je
jnp
push
movsb
sub
daa
adc
jl
mov
icebp
pushf
aam
shr
adc
test
dec
sub
push
mov
es
jns
gs
sbb
push
test
or
mov
int3
stc
or
lahf
ret
inc
mov
fstpl
mov
sbb
rcl
int
xchg
dec
push
fidivl
and
sbb
xor
adc
push
ror
mov
pop
and
popf
adc
fiadds
hlt
lods
xchg
adc
mov
lock
adc
das
cmp
andl
cmpsb
lds
lods
add
push
mov
call
enter
pop
jae
cmp
es
in
jp
ret
test
mov
xchg
dec
or
and
and
mov
or
fwait
icebp
jae
scas
and
sub
and
into
mov
imul
mov
stc
cli
add
jge
pop
arpl
pop
push
or
xor
pop
cmp
mov
and
out
add
cltd
pop
jl
pop
outsb
adc
cli
popf
orps
stos
fists
andb
cs
push
bound
add
sbb
popf
gs
xchg
and
cld
push
or
inc
mov
jne
cli
and
add
jmp
sub
jae
fcomps
jne
pushf
pusha
stos
cmc
scas
pop
pop
mov
xor
push
aad
or
pusha
sbb
in
ss
movsl
fcomps
lods
mov
fdivl
lret
fwait
leave
adc
xchg
ds
cmpsb
nop
mov
push
xor
mov
push
je
mov
push
ret
cmp
outsb
adc
shll
sub
insl
sbb
jmp
or
imul
xchg
xchg
inc
test
inc
fs
cmc
sbb
jg
out
adc
add
ss
sti
out
pop
push
adc
push
jle
and
adc
ljmp
adc
and
xor
cmp
jo
mov
cmp
cmp
rclb
push
outsb
jmp
gs
inc
lods
inc
pop
mov
mov
or
push
mov
mov
or
imul
repnz
xchg
gs
add
hlt
fs
imul
jp
test
inc
movb
pop
jmp
scas
mov
iret
pusha
mov
mov
mov
mov
movsb
mov
out
insb
mov
jnp
jo
cmpsb
in
sahf
imul
fadds
push
cmp
stos
test
scas
jg
testl
lock
lods
sub
pop
div
push
pop
inc
cmp
fldl
inc
adc
ret
bound
mov
loop
test
dec
xor
pop
adc
push
inc
push
jl
repz
rcr
xlat
or
mov
mov
gs
and
xor
outsb
sahf
dec
cmp
cmp
jnp
inc
inc
jecxz
pusha
shl
xor
xchg
out
sbbb
ror
movsl
pushf
fcom
pop
dec
imul
inc
and
lock
lahf
sbb
xor
lcall
pop
and
in
add
cmp
sti
pop
cmp
add
pop
xchg
fistps
lahf
ljmp
add
xchg
xchg
cmp
pop
enter
imul
clflush
and
sbb
and
ror
lret
sub
or
les
xchg
faddl
jnp
test
dec
lods
mov
adc
ja
sub
shll
add
stos
xor
jmp
pop
mov
test
pop
fnsave
mov
cmp
fidivs
push
cmp
mov
xchg
pop
movsl
fimull
inc
sub
les
cmp
jb
cmpsl
add
jne
sti
test
push
xchg
inc
mov
dec
push
xor
loopne
leave
mov
mov
and
stos
jnp
gs
cmpsb
add
or
and
mov
push
mov
leave
xchg
inc
jnp
ror
mov
add
xor
ds
pop
cmpsb
das
shlb
lods
pusha
in
adc
adc
push
aaa
jl
shrl
and
dec
mov
push
adc
lret
inc
test
sub
imul
jbe
loop
cmp
outsl
sub
xorl
pop
gs
lods
xor
scas
adc
fisubl
lods
fwait
jl
and
loope
adc
pop
enter
clc
sahf
fisubrl
pushf
in
mov
sub
add
and
jg
subl
inc
ffree
not
push
push
pop
imul
mov
xor
jmp
arpl
repnz
jg
adcl
jl
shlb
scas
jno
xchg
addr16
mov
js
das
xchg
sub
test
jmp
cmc
xor
or
pop
cmp
adc
sahf
fisttps
daa
out
fimull
loopne
rcrl
mov
jb
mov
nop
js
xchg
enter
add
sbb
xor
sbb
insl
in
push
xlat
push
hlt
out
rcll
das
mov
js
rclb
cmpsb
adc
jp
mov
push
in
inc
sbb
testb
ds
mov
sahf
add
sub
sahf
int3
inc
lahf
popf
ret
lahf
push
mov
iret
mov
cmpsl
or
stc
ret
outsb
push
push
sub
xor
addl
pop
ljmp
sub
adc
sti
nop
imul
or
repz
ret
out
and
rclb
lahf
ss
dec
xchg
cli
insb
mov
sbb
fldenv
rorb
in
push
insb
or
movsl
out
xor
dec
mov
insl
push
aam
enter
imul
inc
cltd
push
orl
in
mov
mov
add
jnp
push
xchg
adc
fwait
add
mov
sti
sub
xchg
lock
sahf
adc
data16
xor
and
loope
mov
xchg
cmc
mov
mov
imul
cmp
mov
cmp
mov
in
jo
subl
adc
mov
dec
pop
jae
lret
jbe
jns
scas
jl
call
add
or
out
push
xor
mov
aam
mov
dec
test
push
dec
or
mov
lea
insb
aaa
jne
adc
jnp
mov
cmp
sbbl
xlat
hlt
pop
xlat
fdivl
gs
out
nop
lcall
mov
clc
inc
push
in
pop
mov
jae
mov
icebp
shrb
shlb
mov
arpl
xchg
dec
cwtl
xchg
ficoms
push
and
rcrb
push
jp
aas
lret
fwait
iret
loop
or
inc
sbb
add
scas
adc
sbb
daa
push
aas
iret
mov
aad
sub
mov
popf
push
loope
mov
sahf
jb
xchg
mov
adc
sar
mov
inc
inc
add
fsubrl
scas
fldl
call
push
inc
ja
jo
in
xor
pop
jge
rcl
sahf
jmp
aad
lock
gs
or
gs
into
int
idivb
fdivrs
jl
mov
mov
xchg
movsl
adc
incb
jg
pop
add
or
mov
sbb
dec
xor
in
std
and
mov
movsb
loop
jle
fdivrs
push
jo
cltd
cmc
push
xlat
xor
mov
je
lahf
popa
in
pop
into
inc
call
hlt
pop
in
add
scas
orb
mov
in
inc
cmp
push
test
test
fs
cmp
pop
push
imul
push
and
aad
std
pop
adc
out
loope
imul
mov
jne
jne
shll
mov
cmc
lahf
mov
movsb
mov
pop
mov
and
mov
fsubrs
popa
cmpsl
sar
push
xchg
push
popa
stos
push
and
jg
or
mov
call
add
jg
cmp
cs
popa
negl
and
push
pop
push
fcompl
mov
jo
and
daa
insb
xor
andb
dec
push
idivb
xchg
dec
xchg
test
mov
lcall
cld
fadd
cmp
adc
cmp
dec
rcl
push
pop
test
inc
cmp
xlat
clc
inc
int3
cli
cmp
add
cmc
loop
cmp
movsl
or
dec
ret
jae
jge
movsb
xorb
add
imul
add
push
fcoms
push
jns
test
dec
sub
mov
in
or
inc
in
stc
add
mov
inc
jb
fcomi
test
clc
mov
add
xor
push
adc
adc
inc
xchg
fisubrl
add
sub
sub
mov
cmc
les
mov
mov
xor
push
sub
pop
mov
loopne
mov
mov
jp
xchg
scas
in
lcall
adc
das
dec
pop
xchg
xor
sahf
cmc
and
jne
push
aad
jno
jg
mov
or
xchg
push
mov
leave
aam
loop
lret
jns
mov
jnp
mov
adc
stos
repz
xor
jle
adc
ror
and
mov
inc
sub
or
inc
push
adc
fnstenv
arpl
pop
xor
pushf
shl
push
xchg
cmovns
pop
out
pop
sub
sbb
cmp
ret
cmp
add
fcomi
pushf
and
cmpsb
inc
inc
ja
add
shll
js
in
les
in
inc
arpl
mov
fdivp
xchg
inc
mov
and
sbb
or
xchg
xor
scas
add
or
out
sbb
fstp
out
sub
xchg
sub
push
fisubrl
push
pop
xchg
cmp
push
mov
inc
mov
xor
dec
movsl
mov
sti
pop
scas
jns
jp
push
lret
loope
notl
rclb
dec
stos
pmullw
mov
jg
mov
fcompl
inc
in
and
xor
std
adc
add
xchg
in
sbb
mov
mov
push
dec
adc
mov
data16
mov
in
bound
rclb
pop
incb
fmull
mov
dec
js
push
sbb
jb
xchg
repz
adcb
insl
mov
outsb
or
sub
push
imul
and
std
fisttpll
dec
cmp
mulb
jp
mov
call
ret
sbb
dec
fsubrs
or
repz
dec
push
inc
or
jns
sbb
in
xchg
and
mov
ds
rclb
cwtl
xchg
xchg
mov
lcall
inc
inc
sbb
inc
pop
xchg
push
sub
add
out
outsl
cmpsb
not
call
fisttpll
and
outsl
popa
jl
frstor
neg
mov
sub
mov
pusha
repz
mov
add
jmp
xor
mov
lret
xor
les
lds
lds
add
adc
dec
inc
sub
cmp
mov
lods
xor
ljmp
or
rorl
dec
dec
mov
fiadds
adc
fs
les
pusha
enter
ficoml
or
sbb
daa
iret
outsb
rcr
daa
in
push
or
sbb
dec
push
sar
jge
mov
pop
inc
rorl
xchg
fdivs
mov
xchg
in
sub
pop
push
cmp
sahf
repz
cmpl
mov
inc
icebp
inc
les
dec
mov
jl
sub
movsb
aas
pop
cmpsl
arpl
mov
fsubs
pop
xchg
jo
jle
ljmp
and
sub
jno
add
dec
push
testl
lea
inc
lods
fldcw
fsubl
pop
jno
add
call
movsb
int
pop
sub
pop
push
sbb
stc
adc
dec
out
cli
daa
cmp
pop
into
cmpsl
movsw
jecxz
pop
dec
mov
push
jle
stc
jle
cltd
pop
push
jns
inc
repnz
jb
pusha
pop
bnd
xor
jnp
jnp
sahf
orb
lret
aam
bound
repz
mov
sub
inc
lret
adc
cmp
jb
mov
inc
lea
mov
sbb
or
sub
ljmp
sbb
imul
pop
addb
push
cltd
in
push
mov
scas
fistpll
or
push
xor
call
ss
sbb
popa
jno
mov
aam
cmc
pop
adc
sbb
int3
inc
and
pop
xchg
mov
scas
add
js
and
dec
inc
inc
mov
xchg
add
lods
cltd
pop
aad
xor
inc
stos
mov
cld
movsl
lea
pop
and
ret
xchg
pusha
mov
cmpsb
cmp
mov
les
adc
push
inc
fcomps
fstpl
out
push
lods
push
hlt
outsl
xor
cwtl
gs
add
jmp
mov
cmc
cmpl
pop
jnp
bound
movsb
jne
mov
cmpsb
scas
cmc
scas
scas
xchg
lcall
adc
loop
das
mov
inc
pand
pop
dec
movsb
movsl
sub
aaa
mov
mov
pop
aad
pop
rcl
pop
jns
and
dec
cwtl
rol
cmp
ror
sbb
prefetch
push
cmpsb
and
pop
mov
jns
pop
ret
pop
and
push
dec
mov
mov
or
push
jecxz
shll
add
and
fucomi
lock
push
jae
add
test
inc
xor
mov
fildl
stos
jne
push
out
lret
add
jae
fmul
dec
movsb
add
adcb
loop
xor
out
inc
adc
mov
lcall
mov
ret
inc
inc
add
jbe
addb
sub
cs
push
xchg
pop
mov
dec
dec
iret
or
testb
jp
mov
cltd
adc
inc
sti
mov
push
dec
cmpsl
mov
cwtl
scas
mov
mov
lods
mov
mov
aaa
ret
and
jns
fbstp
dec
dec
aas
and
cmp
xor
movsb
mov
icebp
out
jle
jle
mov
adc
sub
test
out
pusha
or
jb
insb
addb
add
sti
push
add
fsubr
jnp
or
mov
and
or
jecxz
insb
loopne
call
scas
orb
mov
shld
push
cmp
stos
sti
out
popa
fldl
inc
mov
adc
repnz
and
fwait
pop
or
or
jp
cmp
xchg
add
loopne
pop
jp
add
fnstcw
dec
xchg
int3
mov
out
test
ret
div
out
adc
popl
sub
lds
loop
or
sbb
mov
pop
lret
aam
jbe
js
pop
pop
ds
jmp
out
dec
and
or
arpl
mov
sbb
push
lret
aas
jno
push
cmp
adc
and
push
repnz
daa
cmpsl
int
jae
movsl
mov
imul
stos
xchg
aad
add
je
imul
or
shll
pop
movsb
fisttpll
or
cmpsl
push
xchg
pushf
xchg
outsb
adcl
ljmp
and
aam
mov
or
dec
mov
mov
push
mov
iret
pop
mov
lock
xchg
daa
out
in
in
stos
mov
mov
loopne
ret
push
ljmp
lods
rcrl
pushf
mov
les
xchg
cmpsb
aam
jmp
popa
mov
cs
cmp
mul
in
cmpsb
popa
test
push
push
cmp
ficomps
rclb
dec
sbb
lcall
ret
mov
mov
iret
mov
xchg
rorl
cmp
adc
out
lret
aas
push
inc
ja
jl,pt
adc
rolb
or
sbb
pushf
loopne
cmp
jae
sub
pop
xchg
cld
inc
outsb
cmp
adc
sub
or
fcompl
inc
push
testb
inc
fldenv
stos
sbb
inc
mov
mov
xchg
inc
sub
and
mov
out
lret
lcall
pop
xor
mov
pusha
int3
and
add
addr16
xor
pop
sub
in
mov
jmp
insb
add
mov
mov
sbb
popf
adcb
int
dec
sahf
and
outsb
movsb
and
in
cwtl
icebp
and
cmp
add
xchg
or
int
enter
ja
add
into
cmp
cltd
jnp
sbb
xchg
xchg
repnz
lock
xchg
jmp
movl
out
pop
push
gs
iret
movsb
fwait
mov
cwtl
rclb
arpl
clc
adcb
in
repnz
lods
movsl
push
inc
aad
fcmovnbe
lods
or
neg
insb
insb
pop
sub
loopne
sbb
inc
es
roll
fs
divb
fnstcw
add
cwtl
arpl
or
dec
outsl
shld
out
sub
pushf
out
xor
cs
les
aam
rol
aas
and
xchg
ret
mov
test
fildll
lods
cmp
loope
mov
imul
pop
jo
std
fdivl
cwtl
das
ret
mov
aam
mov
hlt
ds
and
je
cmp
lcall
jg
sahf
sub
hlt
fistpll
add
cmp
lret
int3
mov
aas
sbb
xor
mov
push
cmpsb
mov
rorb
repz
out
and
adc
sub
push
insb
call
call
xchg
push
xor
jnp
scas
jae
push
ss
xchg
pop
and
addb
pushl
inc
jae
movsl
out
in
fs
jp
and
outsb
loope
rorb
divb
lea
fdivl
inc
data16
mov
pop
aas
push
repz
adc
add
inc
cmpsb
and
test
data16
test
sub
jbe
xchg
dec
les
js
inc
and
add
cmpb
fistps
or
sti
push
out
imul
lods
shll
jg
cmpsl
orb
cmp
xchg
and
fdivs
shlb
mov
fcoml
xor
rorb
test
jbe
pop
pop
mov
or
push
fadd
arpl
cmp
test
popf
mov
dec
xchg
mov
lcall
jns
shrb
test
sbb
int3
push
jl
pop
sub
bound
cmp
add
in
push
jnp
xchg
cmpsb
cmpsb
push
enter
xchg
or
fstpt
aas
mov
sub
mov
stos
cltd
stos
sbb
jp
mov
inc
adc
mov
lret
mov
sarb
movsb
mov
adc
sub
jno
sbbl
movsl
push
push
daa
push
clc
jecxz
add
shll
das
jnp
sbb
pop
sub
mov
cmp
xchg
jl
sbb
cmp
stc
jo
das
lods
mov
ds
add
jb
cmp
inc
sub
pop
add
push
and
js
bound
pop
stc
mov
test
testb
pop
adc
pop
movsl
ds
jne
inc
xchg
jno
inc
ret
and
jp
push
mov
imul
xor
fsubrl
pop
xchg
mov
xor
or
les
xchg
sti
rclb
or
adcb
sub
sahf
push
out
sub
stc
add
add
cmpsl
jg
dec
mov
cmp
sub
es
fiaddl
sbb
push
loop
lods
aas
sti
jne
fistpll
frndint
sub
xchg
sbb
or
in
sub
sar
rcrl
mov
xchg
arpl
xchg
mov
jno
aad
push
popa
dec
aam
mov
scas
cmp
cltd
xlat
fisubrs
push
jp
cmp
or
mov
gs
add
popa
loop
and
aas
in
scas
sbb
leave
int3
sub
and
cltd
push
xchg
fisubl
push
xorb
daa
mov
adc
cli
aam
cmpsb
sub
cmc
fstp
outsl
sub
jns
sbb
mov
or
scas
or
nop
fadd
addl
pop
adcb
loope
and
sub
push
sub
js
insl
lahf
mov
mov
sbb
push
sub
ficomps
push
push
xor
mov
pop
lock
repz
mov
fmuls
xchg
push
repz
lods
or
repz
adc
in
insb
aam
pop
sub
mov
push
sbb
mov
xchg
dec
or
mulb
xor
mov
jnp
jnp
jl
mov
mov
enter
mov
fimull
mov
lods
sbbl
je
fnsave
pop
movsl
mov
sub
sbbl
mov
jns
pop
ret
fisubrs
pop
pop
stc
das
shlb
gs
int
jecxz
push
mov
inc
sti
adc
dec
adc
or
inc
fldenv
rcll
ja
out
cli
xchg
add
add
in
push
lods
fisttpl
or
jae
out
sub
pop
pop
pop
xchg
push
ja
ljmp
and
xchg
rcrl
sbb
xlat
adc
adc
inc
insl
cmp
repnz
in
movsb
jl
and
ficompl
mov
fwait
and
movsb
fsubr
xchg
xchg
clc
jge
or
aad
iret
lea
pop
stc
aaa
pop
imul
cmp
fisttpll
jecxz
fildll
leave
fcmovbe
iret
rorb
test
cmpsl
mov
mov
mov
sbb
imul
mov
mov
movsl
lahf
in
das
pop
jge
sahf
test
lcall
scas
mov
push
mov
mov
cmp
xor
cmpsb
sahf
xlat
pop
sti
xor
popf
fstpt
mov
shrb
das
or
sbb
push
fwait
cmp
add
xor
mov
out
outsb
icebp
rol
cmpsb
iret
cmp
xchg
cmpsb
fisubrs
jmp
xor
lods
dec
and
das
mov
lret
sarl
xchg
shll
fldcw
aaa
repz
lahf
dec
dec
adc
dec
mov
ljmp
jle
mov
ret
imul
mov
mov
pop
jle
adcb
jno
xor
mov
jg
xchg
jle
lret
sbb
push
mov
popl
jl
pop
mov
mov
push
dec
dec
xchg
in
insb
into
jne
enter
call
popf
sub
leave
stos
xchg
xchg
inc
mov
pop
inc
xchg
fiaddl
fwait
in
mov
jbe
push
sbb
test
push
cmp
repnz
mov
push
or
mov
inc
in
loop
add
repz
xchg
mov
or
ret
dec
cli
jg
xchg
lret
das
mov
cmp
add
stos
add
test
call
xor
mov
das
and
mov
adc
daa
out
mov
cmpsl
cmp
or
stos
or
cmp
cmp
sbb
mov
xor
punpckldq
cwtl
xor
pop
ret
test
enter
icebp
push
pop
inc
lcall
inc
pushf
pop
push
xor
push
xor
test
iret
add
dec
fisttpll
bound
in
imulb
inc
outsb
xchg
lcall
scas
cmp
mov
cmp
jl
inc
mov
mov
scas
jns
clc
pop
xchg
jno
lods
dec
out
pushl
outsb
push
into
mov
roll
movsl
rolb
dec
inc
xchg
xor
or
mov
jno
xchg
sbb
mov
aam
push
fistl
popa
ss
ds
into
clc
fs
roll
cwtl
sub
adc
aaa
outsb
cltd
rcll
stos
jne
push
mov
adc
lahf
lock
sub
mov
daa
lea
insl
sahf
push
inc
idiv
dec
icebp
stc
adc
dec
mov
jo
bound
lock
mov
imull
pusha
and
sbb
dec
xlat
cli
int
stos
sub
fisubs
lret
inc
mov
xor
out
xchg
repnz
jle
fstl
negb
out
xchg
adc
maskmovq
out
push
xchg
inc
cmpsb
ret
nop/reserved
add
outsb
shrl
pop
cmp
outsl
cli
mov
in
imul
aad
aas
rclb
outsb
sub
dec
pop
jmp
lods
mov
shll
push
lret
out
or
mov
add
sbb
aas
fsubl
adcb
jb
mov
sub
outsl
bound
ljmp
adc
add
cmp
xor
jns
xchg
ljmp
push
neg
xor
push
pop
fistpl
pushf
das
or
xchg
dec
clc
dec
fildl
and
lea
jbe
cmp
add
mov
xor
sbb
sbbl
sahf
pop
out
fmul
mov
pusha
cmp
add
xchg
cld
sbb
mov
adc
or
test
ret
cmp
inc
popf
sar
js
mov
mov
cwtl
into
mov
lea
inc
subb
stc
andl
flds
cwtl
pop
and
jg
adc
rorb
xchg
or
call
idiv
imul
hlt
movsl
js
or
add
mov
repnz
push
stos
sub
or
mov
and
mov
mov
jns
aas
int
test
icebp
cmp
mov
jl
add
in
push
shlb
pushf
mov
mulb
fdivs
dec
xchg
fldt
inc
out
mov
fiadds
xor
shl
dec
fdivrs
xchg
aas
jl
pusha
cmpsl
cmpsl
shll
mov
popa
xor
mov
jne
xor
or
call
mov
fldl
mov
mov
mov
mov
pusha
aam
loopne
mov
sar
pop
aas
shl
cmp
pop
mov
xchg
pop
sub
mov
not
movsb
and
jp
pusha
lock
decb
add
push
xchg
stos
sub
mov
add
pop
arpl
icebp
std
enter
pop
fidivrl
js
lods
lods
in
push
fdivl
out
pop
pop
push
mov
xsha1
cmpsb
lret
xchg
mov
adc
out
outsb
cmp
lea
pushf
icebp
outsb
das
cld
cmp
push
cmp
lret
push
cmpsl
in
lret
sbb
arpl
movsl
movsb
lret
int3
icebp
scas
fcoml
cmpsb
ror
je
in
fcompl
xchg
test
icebp
movb
ds
push
push
and
mul
xchg
mov
sub
gs
xchg
cwtl
pmaxub
test
fstpl
mov
inc
iret
iret
test
sub
mov
sarl
daa
jle
dec
cs
push
int3
cmp
lahf
xor
lock
hlt
lret
mov
xchg
movsl
adcb
dec
dec
lcall
lods
data16
lods
push
sbb
shl
outsl
mov
pop
and
leave
sub
adc
sbb
dec
add
imul
xor
cmc
nop
jecxz
push
dec
divl
adc
push
in
mov
xchg
push
pop
dec
iret
cltd
xchg
sbb
fistl
lods
mov
mov
cmpsb
xor
mov
out
push
ja
pop
and
inc
mov
adc
ss
adc
sbb
out
or
push
fwait
pop
push
movsb
pushl
or
cmp
fistl
imul
xor
sbb
and
aam
lds
in
xchg
xlat
xchg
insl
inc
mov
adc
mov
movsb
push
add
lahf
jp
cltd
jl
aam
adc
js
add
inc
sbb
out
xor
adc
adc
imul
je
dec
cmpsb
pop
ret
in
jb
ljmp
pop
mov
fwait
test
xor
std
fistpl
ja
pop
ja
pop
js
xorb
sub
cwtl
sarb
sbb
xor
xchg
push
sub
out
jne
dec
cli
dec
xchg
imul
jne
btr
push
pop
jp
mov
sbb
aam
cltd
adc
clc
mov
gs
inc
nop
mov
push
ret
xor
rcrl
sarl
stc
stc
js
cwtl
ret
lods
jle
push
push
xchg
daa
leave
push
fwait
mov
lds
or
ljmp
loopne
cli
and
sub
call
xor
mov
arpl
pop
pop
xchg
sahf
mov
inc
outsl
inc
dec
je
push
gs
cmpsb
es
mov
cmp
aas
mov
dec
ret
cwtl
jo
nop
adc
pop
inc
adc
out
mov
push
dec
das
jns
jl
mov
xchg
mov
xchg
repnz
cs
cmp
cmp
mov
insb
mov
push
or
pop
testb
xchg
adc
das
das
cmc
cmpsl
into
or
and
jo
mov
mov
ljmp
outsl
jb
js
push
mov
sbb
push
sbb
or
into
or
dec
pop
inc
jmp
es
inc
sti
adc
out
xlat
xor
mov
cmpb
out
adc
jne
fisttpl
jge
cmpsb
icebp
mov
iret
mov
pop
dec
sub
cmp
loop
loop
cwtl
jo
fdiv
test
loop
sub
cmp
jbe
clc
loop
loope
ljmp
jbe
into
mull
jl
lods
aas
cli
call
repz
xchg
fs
fcomps
xchg
loop
hlt
daa
xor
and
mov
jl
adc
sub
das
xorb
push
or
sbb
outsb
sbb
loop
jbe
push
popa
dec
in
sbb
sahf
or
mov
push
inc
sub
lret
inc
inc
and
dec
sbb
inc
loope
cs
mov
in
frstor
xchg
rcrb
das
push
add
pop
test
sbb
add
sub
sahf
or
xor
stc
sbb
push
cltd
jp
in
out
xor
rcll
cmp
xchg
je,pt
sti
mov
jle
dec
and
imulb
jge
sbb
sbb
sub
jne
pop
lods
and
rcll
push
xchg
mov
insb
sbb
outsl
mov
ficoms
add
sbb
sbb
cltd
fwait
adc
not
sub
jp
push
jae
in
xor
sub
jno
or
test
sub
adc
add
and
push
stc
jo
mov
fsubr
pusha
icebp
xchg
sbb
cmp
out
nop
adc
mov
fs
aas
mov
fs
sub
mov
jb
add
push
pop
pusha
repnz
pop
add
fidivs
mov
andb
mov
ret
mov
andl
xor
add
inc
mov
cmpl
jne
pushl
pushl
push
push
push
push
pushl
push
pushl
pushl
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
xor
add
mov
movl
add
cmp
movl
je
mov
movl
jmp
mov
mov
cmp
movl
jne
movl
push
jmp
mov
mov
cmp
movl
jne
sbb
mov
andl
mov
inc
mov
cmpl
jne
push
pushl
push
pushl
push
call
cmpl
jb
movl
cmpl
je
cmpl
jne
call
xor
xor
dec
mov
jmp
mov
or
xor
and
add
andl
xor
add
inc
mov
cmpl
jne
push
pushl
call
cmpl
jne
xor
xor
inc
mov
cmpl
jb
xor
xor
or
mov
mov
mov
mov
xor
add
movl
imul
andl
mov
inc
mov
cmpl
jne
pushl
call
cmpl
jb
mov
xor
add
cmp
mov
push
je
mov
add
mov
mov
xor
add
imul
mov
jmp
mov
xor
mov
mov
xor
mov
mov
sub
add
mov
mov
jmp
pusha
sub
repz
xchg
cli
adc
je
and
and
add
jl
dec
dec
mov
popa
pop
inc
loope
negl
incb
mov
inc
xchg
add
adc
inc
test
fstps
mov
or
cmpsl
loopne
shrl
xchg
sub
and
dec
insl
xchg
test
aas
fstl
mov
inc
pushf
inc
ljmp
sbb
mov
or
inc
jge
sbb
pop
cmp
cwtl
sti
add
xchg
sbb
in
outsb
loope
enter
adc
mov
insl
loopne
stos
jmp
mov
push
sbb
fnstsw
dec
dec
pop
cmp
jnp
fwait
ret
shr
nop
mov
xchg
or
push
inc
xor
and
les
adc
push
loop
mov
out
jle
mov
addb
xchg
mov
push
or
gs
movsb
push
or
and
hlt
sub
rcr
in
cmc
jmp
or
test
arpl
clts
inc
or
repz
daa
adc
xchg
loop
lcall
fxch
xchg
xor
dec
jns
aam
sbb
jns
pop
mov
jne
xchg
jno
and
in
sahf
dec
mov
jecxz
loopne
stos
mov
test
bound
xchg
out
sub
pop
push
in
lods
ljmp
inc
outsl
jecxz
sub
cmc
dec
mov
test
testl
pop
adc
fwait
xchg
push
aaa
add
mov
or
sbb
ret
cwtl
bound
push
mov
cli
jbe
xor
jp
jns
or
adcb
adc
cltd
dec
jbe
xor
adcb
cwtl
cmp
test
pushl
movsb
xchg
cmp
mov
in
xor
dec
ret
sub
or
dec
mov
lcall
mov
call
sbb
push
lds
dec
push
or
mov
ja
inc
pop
dec
or
pop
mov
adc
outsl
sbb
xchg
xchg
bound
je
xlat
or
push
add
scas
subl
and
sbb
gs
cmp
daa
jmp
xchg
and
enter
inc
xchg
jge
cltd
loope
mov
sbb
or
add
addr16
es
xchg
lds
and
aaa
test
lds
push
sbb
mov
sub
add
dec
gs
mov
cmc
gs
xchg
pop
lahf
xor
add
das
inc
sahf
in
mov
lods
int
jmp
mov
dec
rcl
test
fsub
leave
add
imul
pop
mov
fistpll
loopne
pop
pop
xlat
leave
cmp
loopne
std
push
fstps
popa
adc
mov
stos
dec
fisubrs
sarl
jg,pt
cmpsl
mov
aam
pop
clc
movsb
push
mov
lcall
mov
inc
pop
cmpsb
mov
std
popl
mov
or
subl
push
cmp
pop
add
adc
ja
push
dec
addr16
popw
movb
xor
mul
or
xchg
mov
cwtl
shrl
inc
mov
fisubl
add
push
bound
rdmsr
stc
fdivrl
fcomps
pop
ret
shr
cmpsb
ret
and
sbb
lods
adc
xchg
lcall
ret
adc
popa
jae
dec
push
inc
sub
cmpsb
popf
dec
xchg
call
movb
aam
xchg
adc
mov
jmp
or
xor
out
add
push
sub
push
mov
ds
sub
insl
jno
mov
mov
jp
lcall
sti
mov
add
addr16
imul
test
dec
cli
sbb
sub
movsb
outsl
pusha
insl
cmp
mov
jge
pushf
cs
mov
lret
int3
cltd
fnsave
cs
mov
pop
jns
mov
pusha
dec
dec
movb
mov
xchg
into
inc
push
push
sbb
leave
arpl
mov
mov
push
inc
ret
data16
es
mov
cwtl
and
inc
into
ss
pop
cmc
cmp
xchg
lea
xor
daa
mov
jl
cld
dec
jp
fs
out
int3
fcmovb
shlb
orb
pop
mov
mov
std
ja
popf
dec
lcall
faddl
xchg
ds
lcall
adc
andb
jl
outsb
jg
mov
imul
outsl
xlat
push
jecxz
test
cmpsb
jl
cmp
cmp
or
ffreep
inc
add
into
jno
mov
sub
lcall
add
dec
xchg
sbb
pushf
popf
stos
jnp
mov
xchg
push
jmp
movsb
fadds
cs
pop
lahf
inc
enter
sub
xor
int3
jae
mov
sbb
mov
adc
mov
stc
aad
mov
push
adc
add
dec
add
out
scas
jge
pop
jo
xchg
xor
ljmp
mov
into
mov
mov
xor
push
dec
daa
hlt
add
test
gs
loopne
adc
and
xor
mov
out
push
sub
xchg
mov
mov
xchg
push
pusha
jne
sub
jae
out
mov
cmp
adc
mov
adc
nop
std
push
bound
pop
jnp
stos
popa
int3
mov
rclb
dec
jl
jmp
fcmovu
rcll
std
sub
pop
repz
loopne
add
sbbb
call
xchg
int3
scas
repnz
mov
lods
clc
popw
and
inc
sub
pop
aad
xchg
dec
lods
popf
clc
inc
inc
jae
fwait
movzwl
lods
xchg
test
xchg
dec
in
aas
out
sub
mov
and
mov
jle
add
sti
mov
cmc
fadds
lods
pop
push
shlb
or
xlat
push
dec
data16
inc
xor
add
leave
iret
hlt
shll
fbstp
and
inc
and
jb
fld
mov
sub
cmpsb
xchg
dec
pushf
pusha
pop
xchg
xorl
xor
es
and
jle
int
int
or
std
fadds
fldl
jecxz
fisttps
inc
ss
in
ret
test
fimull
or
pop
xor
adc
cmp
int3
push
inc
mov
mov
fcoms
or
and
or
into
aam
inc
mov
sub
loop
in
xor
sbb
std
push
cs
scas
popa
sbb
and
scas
ret
jmp
sub
test
mov
mov
leave
fs
pop
jb
mov
stc
mov
push
lods
shlb
in
out
xchg
adc
lods
jecxz
cmp
je
into
mov
sar
or
sahf
cli
idivb
call
and
fidivrl
fmul
push
js
jns
cmpsb
xchg
addr16
hlt
in
ret
fcomip
fwait
in
dec
sbb
repz
mov
inc
fadds
into
jg
in
inc
cwtl
aaa
push
mov
ret
lea
lahf
daa
insl
pop
mov
fsubl
xchg
pop
lret
mov
fsts
out
stos
aam
cmp
scas
push
test
sarl
sbb
sbb
mov
adc
lock
cmpsl
xchg
repz
fists
push
xchg
lods
int3
addr16
sbb
inc
mov
dec
xlat
push
scas
sub
mov
insl
movsl
cmp
sahf
mov
scas
mov
add
call
sub
imul
adc
or
xor
test
xchg
std
mov
out
outsb
xor
mov
add
mov
xchg
xchg
outsl
adc
pop
or
or
push
sahf
scas
in
pop
int3
sub
push
sbb
add
sbb
or
mov
cld
dec
mov
je
jb
jbe
cmp
mov
fldl
pop
dec
add
add
test
fcoms
and
insl
cmp
leave
sub
vmread
xchg
add
pop
inc
dec
test
js
outsl
incl
dec
inc
mov
rcrl
xor
or
ja,pt
iret
sbbb
js
je
push
les
dec
lret
inc
lock
xor
pop
mov
repz
xchg
xchg
and
dec
cld
add
std
push
repnz
mov
inc
mov
cmpsb
pop
sub
jbe
lea
xor
out
enter
scas
pop
sbb
andl
jle
insb
loop
mov
fstl
lahf
sti
cmp
fistps
mov
popf
xchg
or
sub
repnz
lahf
xchg
xchg
mov
out
addr16
xchg
add
adc
popa
mov
ret
lds
sbb
or
ret
or
jmp
pop
repnz
ljmp
nop
sbbl
leave
inc
mov
popa
mov
imul
pop
loope
jno
imul
andl
dec
xor
adc
pop
xlat
leave
sbb
sub
push
ffreep
test
lock
test
lcall
std
das
push
mov
loop
jmp
shl
arpl
fldz
xchg
adc
mov
jno
out
jle
xchg
xchg
mov
or
cmp
inc
push
jmp
loopne
jle
jnp
pop
cmp
cmp
mov
cld
sti
and
dec
aad
xor
push
stos
inc
out
mov
out
lahf
int
add
aam
ret
in
or
out
stc
cmpsb
xor
sub
inc
fstl
loopne
jne
pop
xor
push
insl
fstp
mov
push
cmp
inc
aas
and
cwtl
ds
iret
int3
in
jns
adc
jb
inc
mov
xchg
mov
fidivs
push
fimuls
out
popa
jnp
and
mov
call
cs
or
rorl
cmp
fsubs
cwtl
mov
pop
popf
pop
lea
sub
rorb
js
xchg
mov
das
push
xor
jns
movsl
repnz
movsb
xchg
push
stc
imul
jmp
lods
dec
xchg
imul
or
jl
xor
mov
cli
pop
testb
imul
cmp
icebp
fmull
sub
in
in
push
cmp
andl
test
cmpsl
cmp
xor
push
xchg
ds
xor
loopne
pop
xor
nop
lods
fs
adc
pushf
pop
sub
ljmp
repnz
mov
sbb
pop
cmp
mov
jl
insb
iret
or
and
jmp
adc
sbb
xchg
lods
loop
push
push
push
leave
pop
mov
or
es
xchg
jl
les
add
pusha
sub
xchg
dec
movsl
insb
push
sbb
enter
dec
and
lahf
jmp
mov
mov
cltd
push
lcall
push
cmp
testb
jp
jg
xchg
push
cmp
cmp
adc
jle
fwait
mov
bound
cli
sub
loope
sbb
fisttps
les
cld
push
out
js
insb
das
cmp
or
es
popf
dec
xor
jg
std
sbb
pop
inc
orb
sbb
insl
fiaddl
push
sub
das
or
ds
je
out
jge
insl
popf
and
test
stos
push
mov
dec
or
jns
cmp
add
push
int
ljmp
mov
and
cmp
adc
mov
loopne
testb
dec
popf
mov
or
je
jno
sbb
mov
in
stos
inc
fcomps
mov
lret
not
rorl
add
mov
xor
ljmp
aaa
bound
scas
jb
xlat
jmp
imul
shrb
ret
xchg
in
push
xor
rorl
rcll
out
popf
mov
fsubl
mov
stc
jo
shlb
aam
lock
xchg
pop
lahf
mov
iret
enter
cmp
add
dec
pop
dec
xchg
int3
mov
inc
xor
repz
push
and
pop
dec
and
cmp
repz
orl
jecxz
repnz
in
stc
cmp
cmp
mov
imul
mov
fldcw
in
and
std
subl
aam
add
cli
push
mov
mov
pop
rolb
jno
gs
pushf
mov
stc
gs
cmpsl
scas
sbb
push
cmp
gs
daa
jno
testl
inc
outsb
push
add
and
pushf
je
or
xorl
and
pop
pop
mov
or
into
sar
outsb
into
xor
sbb
ret
movl
cwtl
fwait
lock
test
lret
push
and
int
test
push
idivl
jno
dec
int
jg
in
fldl2t
popf
out
jb
jecxz
fwait
paddb
popf
scas
cmp
ss
add
repnz
insb
out
push
clc
xor
sar
mov
decl
jge
icebp
stos
adc
ljmp
in
movsl
inc
imul
ret
rcrb
imul
loopne
pop
adc
lods
sbb
addb
in
hlt
or
jmp
and
out
mov
fsubs
jge
iret
push
fldl
jmp
loope
mov
xor
pop
mov
dec
dec
roll
mov
or
xchg
and
lods
jg
fstpl
push
mov
in
movsl
cmp
jbe
pop
fdivrp
sub
dec
lds
push
push
push
repz
insb
mov
cmpsl
xchg
mov
push
fldenv
jae
adc
out
add
lret
fucomi
pop
xor
pop
cmp
or
popl
sbb
mov
pushf
mov
idivb
sbb
jae
lea
enter
in
ret
addb
xchg
jbe
enter
add
adc
mov
inc
jae
cmpsb
inc
add
test
push
ret
xchg
inc
xchg
push
lcall
mov
cmp
jnp
notl
dec
addb
mov
popf
and
sbb
mov
mov
mov
rcpps
into
rcrb
jl
rcrb
out
loopne
push
cmp
mov
add
sarb
xor
xchg
loopne
or
xor
mov
cmp
xchg
out
cmp
inc
push
or
and
push
jecxz
cmpl
or
pop
pop
sub
xchg
sti
jns
insl
loope
loopne
cwtl
adc
icebp
in
leave
cmp
mov
jmp
loop
hlt
fs
jb
pop
popa
pop
jne
push
shl
ror
rcrl
adcb
cmp
sub
test
ja
or
push
lahf
pop
push
aas
stos
shr
bound
xchg
adcl
pop
and
mov
jmp
ss
jo
xlat
lock
test
xor
mov
xchg
or
dec
or
cmpsl
decl
pop
int3
ljmp
cmc
xchg
in
add
iret
mov
pop
int
pop
push
nop
aaa
xlat
sbb
insl
lret
pop
fisubrs
pop
mov
jle
fnstenv
jne
ficoms
imul
pop
jo
jmp
sub
mov
sub
dec
imul
pop
insl
rol
and
sahf
jnp
pop
in
loopne
aaa
or
push
sub
push
subb
pop
jle
dec
jp
int3
in
xor
into
push
loope
mov
xor
mov
jecxz
movsb
cltd
loopne
lds
setg
sub
popa
mov
shr
test
cmp
insb
xchg
adc
jns
mov
adc
shrl
cltd
sti
hlt
jge
jmp
data16
gs
lcall
cmpsb
mov
loopne
or
stos
mov
fimull
push
push
or
or
roll
insl
cs
jge
mov
ret
cwtl
pop
sub
mov
mov
jmp
pop
sbbb
sub
and
mov
xchg
outsl
int
inc
icebp
out
mov
mov
dec
orb
mov
jnp
dec
adc
les
mov
push
or
hlt
dec
and
cltd
mov
mov
cmc
dec
inc
inc
cmpsl
adc
inc
push
xor
lret
sub
lods
in
or
xchg
faddp
jmp
out
stc
sahf
enter
fisubrs
sbb
and
pop
dec
pusha
imul
and
and
xor
loope
xlat
insl
dec
in
adc
fsub
inc
mov
pop
fdivs
and
int
scas
aam
inc
stc
aam
fwait
lahf
iret
fidivs
pusha
aam
push
in
leave
es
popa
scas
adc
mov
popf
pop
cmpsb
iret
or
addr16
bndstx
idivl
push
mov
and
fcomp
cmp
ds
ficoms
das
sub
adc
mov
mov
and
das
ret
pop
adc
mov
sub
in
xor
mov
or
loope
sbb
int
sbb
rol
pop
mov
push
leave
and
movsl
inc
out
xchg
leave
fdivs
adc
lcall
mov
add
push
jae
sbb
jns
call
nop
std
or
cmp
xor
js
insb
or
dec
mul
pop
ljmp
gs
xor
xchg
push
jle
out
push
mov
cltd
pusha
aad
inc
sub
mov
fnsave
sub
in
dec
je
jno
sarb
bound
in
xor
and
jne
xchg
mov
shlb
xlat
loop
fcomp
das
icebp
mov
cmpsb
xchg
sbb
inc
and
sub
jns
hlt
sbb
and
pop
pushf
mov
or
ljmp
cli
mov
loop
add
push
outsb
mov
jbe
fstps
push
jmp
test
std
faddp
jl
insb
cmp
in
xor
and
aas
push
push
rcrl
je
mov
inc
cmpsl
dec
cltd
iret
mov
out
daa
and
inc
pop
int
cmpsb
cmpsl
ss
or
cmp
inc
movsb
out
int
hlt
jecxz
adc
sarl
les
inc
jmp
adc
roll
stc
movsb
shl
and
jo
orb
ds
xchg
mov
adc
sbb
pop
sub
adc
adc
xchg
jb
imul
movsb
push
outsl
xchg
lods
sahf
ja
jg
pop
mov
testl
pushf
leave
sbb
cli
inc
xor
xchg
sub
xor
fisubl
test
xchg
lock
insl
fldenv
push
mov
les
outsl
push
sbb
jge
jae
add
jp
aad
push
inc
adc
sarl
in
sub
iret
outsb
mov
mov
scas
xor
dec
cmp
dec
imul
mov
cli
xchg
imul
mov
cmp
push
iret
gs
pop
add
ss
push
and
adc
push
adc
push
xchg
jnp
add
pop
lea
cmpsl
insb
xor
cmp
mov
or
lcall
cmp
pusha
push
les
adc
sti
jno
xor
das
popa
add
dec
cmp
mov
jl
ljmp
push
xchg
push
mov
dec
or
lods
je
mov
xchg
sub
icebp
sub
call
and
das
mov
stos
and
or
rcl
dec
vmread
lods
nop
add
xchg
out
das
scas
dec
add
sbb
not
lea
jbe
dec
int3
sub
xor
insb
cld
inc
mov
cmpb
adc
in
fildll
adcb
clc
mov
ja
cmpsl
mov
inc
cmp
pop
xchg
pop
jecxz
pop
xchg
cld
repnz
jb
rorb
repz
cmp
xlat
sub
adc
xchg
insl
xchg
jns
dec
push
orl
add
out
jmp
lret
xchg
sbb
or
into
cmp
or
rorl
mov
add
xchg
decl
ffreep
mov
ftst
or
out
push
je
jnp
in
mov
popl
push
in
jno
outsb
lahf
inc
jbe
leave
orb
add
sahf
xor
lret
cmp
add
xor
daa
insl
outsl
push
insl
sub
pop
add
pop
jl
in
fisubrl
sar
sub
sbb
arpl
sub
mov
loope
mov
into
pop
inc
pop
sbb
fcomps
jecxz,pn
dec
inc
insb
int3
adc
jl
xchg
pop
clc
xchg
lods
sbbl
push
push
call
push
aad
dec
hlt
fcompl
add
mov
repnz
dec
pushf
rcl
jp
ja
movsb
dec
or
adc
test
divb
notl
sbb
mov
shrb
adc
test
mov
adc
leave
pop
xor
mov
inc
jle
sbb
das
popa
nop
mov
scas
cmpsl
jo
inc
jno
push
push
lea
pop
xchg
icebp
outsb
xlat
dec
daa
addr16
sbb
sbb
fisttpl
push
punpcklwd
inc
add
fisubrs
cld
fs
xchg
in
aas
cmp
ss
mov
ffreep
pop
cmpsb
repnz
call
cmc
aam
bound
shll
and
test
jmp
aad
pop
jg
aad
sub
mov
add
int3
xchg
mov
push
dec
pushf
pusha
loope
xor
out
mov
out
inc
scas
jg
fmul
out
push
mov
jmp
nop
xlat
xor
inc
and
jecxz
mov
aam
imul
pop
in
jo
loope
daa
mov
repnz
cmpsb
xor
shll
jne
cmpl
fcomps
pop
pop
xor
xchg
dec
or
mov
dec
enter
mov
and
sub
cld
outsb
cwtl
mov
insb
xchg
xor
sub
mov
adc
lret
cmp
cmpsl
jmp
sbb
test
or
stos
test
into
fimuls
inc
jo
add
pushf
repz
insl
xchg
shll
das
inc
inc
pop
das
ja
xorl
dec
push
or
jbe
push
pcmpeqb
shl
jl
mov
bnd
nop
fsubrs
dec
inc
insl
push
nop
mov
enter
sbb
sub
pushf
out
or
sub
int3
faddl
clc
pusha
icebp
sarl
sbb
mov
cld
add
mov
ffreep
addr16
in
add
ja
adc
xor
sarb
cltd
fs
xchg
mov
lds
pop
cmc
mov
das
lcall
push
add
mov
xor
push
jg
push
pop
inc
fistps
mov
test
je
jmp
add
jge
pop
and
mov
sub
stc
into
cmp
xchg
fstp
repz
add
lock
jnp
daa
jl
xor
push
pop
cmp
or
stos
cvtpi2ps
jp
xchg
and
or
aas
mov
ret
mov
mov
mov
stos
jge
das
rolb
jmp
push
lahf
hlt
cmp
repz
in
xor
push
cmp
inc
arpl
inc
fstl
xor
jno
mov
mov
push
push
mov
or
xor
or
incl
sbb
and
ljmp
xchg
idivb
mov
or
xchg
fxch
jecxz
out
push
mov
adc
dec
jmp
cmp
lods
adc
and
dec
out
and
cmc
mov
xor
cmc
push
out
xchg
mov
mov
fcomps
clc
pushf
xchg
stos
add
mov
aaa
inc
mov
cmp
cmp
xchg
popf
jae
mulb
or
sbb
scas
shrl
rcrl
jmp
adc
dec
sub
call
or
push
cmp
in
repz
jmp
inc
add
mov
cld
mov
in
cltd
divb
lods
jecxz
jecxz
xlat
jns
dec
outsl
sbb
mov
jnp
jp
and
push
adc
popa
repz
push
push
and
xor
outsb
sub
fldenv
or
add
push
mov
mov
sbbl
sar
cs
sub
out
push
cmpl
push
and
clc
push
inc
mov
xor
xor
mov
insl
ds
fstl
mov
or
push
or
insb
imul
movsl
mov
pop
fwait
cmp
inc
cli
sub
mov
jo
fsubr
or
jg
cli
adc
inc
repnz
leave
add
adc
std
bound
lods
sbbl
add
das
jp
dec
hlt
mov
mov
cmp
inc
lods
ja
js
jg
inc
rcrb
add
push
jo
fidivs
or
nop
xor
xchg
mov
mov
xchg
das
inc
dec
inc
sbbl
outsl
pop
fildl
test
loop
cltd
push
mov
in
ja
sub
dec
repz
push
cld
icebp
mov
mov
add
mov
sbb
and
sbb
fisubl
jle
pop
hlt
adc
enterw
cmc
lock
clc
lock
push
jnp
test
dec
jne
push
icebp
es
push
lods
aaa
xchg
sub
cmp
ret
loope
push
dec
pop
jmp
cwtl
movsb
push
pop
std
cmp
insl
jnp
loopne
sub
mov
sbb
ja
in
xchg
mov
push
popf
clc
or
pop
std
dec
adc
xchg
mov
jbe
inc
push
or
idivl
sub
cmpsl
ss
pushf
cmp
sub
mov
dec
push
sbb
inc
xlat
movsb
adc
inc
inc
sar
and
loope
mov
add
mov
in
pop
add
xor
mov
test
mov
pop
sbb
jg
mov
cmpsb
sbb
gs
shll
or
mov
negb
dec
mov
mov
push
jle
add
mov
scas
adc
pushf
scas
pop
adc
jl
out
jne
sub
jg
cmp
aaa
sbb
add
sub
xchg
je
rorb
push
adc
into
pop
imul
popf
pop
dec
sbb
sbb
scas
mov
ss
leave
arpl
clc
adc
out
movsl
dec
hlt
sarb
lahf
pusha
pusha
mov
jo
insl
fidivrl
cmp
and
loop
and
call
outsb
push
arpl
xchg
int
repnz
insb
mov
jae
sti
push
das
sub
enter
int3
lret
popf
mov
ficoms
out
leave
pop
shrl
mov
fdivrl
test
cmpsl
jecxz
add
insl
or
jbe
sbb
rcrb
push
pop
dec
add
mov
adc
in
mov
xchg
push
das
mov
aad
hlt
sbb
or
out
pop
mov
fimuls
ret
xchg
fwait
inc
mov
outsb
orl
fdivrl
mov
adc
mov
jo
or
aas
fiadds
sbb
push
pop
cmpsl
and
adc
sub
int3
mov
push
dec
dec
das
mov
sub
mov
dec
fstpl
xor
insl
pop
pop
add
mov
mov
sub
popl
iret
sbb
mov
and
inc
dec
push
xor
adc
cmp
loopne
stc
sub
inc
xchg
jge
or
sbb
inc
push
and
aad
jp
or
jge
ja
or
mov
clc
rcrl
inc
lods
ds
fsub
je
mov
out
sub
into
jg
or
les
jmp
mov
shlb
push
mov
xlat
push
nop
data16
test
cmpsl
aaa
test
cmc
mov
or
lods
mov
push
pop
lock
xchg
push
cmp
xor
stos
jmp
lret
les
xchg
and
mov
inc
sub
cmp
mov
xchg
mov
int3
add
outsb
xchg
rorb
mov
inc
insl
lret
packuswb
ss
fmuls
cmc
in
inc
xorl
push
outsb
cmpsb
clc
pop
ja
js
cmp
mov
repnz
je
lret
pop
xor
dec
mov
xchg
or
inc
pop
xchg
mov
cmp
dec
or
movsb
jae
inc
jl
sbb
jg
push
mov
stos
cmp
xor
das
in
pushf
int
les
movsb
sub
pop
aad
xor
sub
mov
es
mov
stc
je
mov
push
aaa
adc
mov
imul
push
xchg
scas
adc
jo
inc
js
mov
mull
add
les
push
sahf
xor
out
cmpsl
jae
push
add
push
push
ds
and
arpl
test
add
faddl
inc
xchg
gs
pop
pop
stc
push
aas
jns
clc
mov
scas
fsub
fs
jg
mov
mov
repnz
fdivrl
jecxz
xchg
dec
ds
xor
sub
sub
pop
mov
push
cmp
inc
icebp
adc
mov
xor
mov
sti
push
sti
add
cmp
int
and
add
in
xchg
es
aaa
movsb
adc
adc
lea
fsubrp
jb
gs
fucomi
out
shll
add
or
sub
stos
addr16
xchg
scas
enter
or
es
lret
adc
and
add
mov
loop
dec
xchg
fnstsw
aad
addr16
mov
shlb
add
int
bound
push
mov
lcall
pop
mov
cmp
jne
cmc
das
bsr
inc
adc
aam
xchg
cmc
inc
nop
fcmovne
fcmovu
je
rcl
orb
adc
push
xchg
and
jp
inc
sarl
jno
dec
cmpsl
data16
mov
or
mov
scas
fcmovnb
das
push
in
inc
lds
cld
lret
in
ss
ss
adc
push
cmp
in
lods
sbb
inc
lret
rorb
imul
testb
adc
push
adc
mov
sub
inc
test
cmp
pushf
jo
inc
jne
cmc
jle
outsl
pushf
sbb
jg
inc
xor
sbb
andl
jg
cltd
mov
cmc
pop
es
sbb
daa
push
sbb
leave
hlt
in
sbb
pop
rclb
mov
outsl
mov
pop
lret
push
enter
jl
push
add
sbb
inc
xchg
inc
mov
and
jmp
adc
add
mov
dec
js
pushf
int3
imul
pop
and
mov
pop
cmp
test
in
adcl
mov
int
mov
in
mov
adc
or
rclb
xchg
mov
pop
or
pushf
and
sub
sub
xor
or
and
fistps
icebp
sarl
arpl
sqrtps
xor
cmp
or
add
jmp
icebp
popa
xchg
xchg
mov
inc
xchg
inc
sub
addr16
dec
mov
test
lret
pop
movsb
jmp
mov
xchg
or
inc
dec
sbb
adc
mov
je
inc
lret
shll
arpl
shlb
int
fs
jg
icebp
pop
repz
mov
imul
xchg
inc
cmp
lahf
enter
and
in
icebp
je
jg
add
mov
mov
cmp
or
jge
xor
xor
lea
mov
xor
add
imul
mov
xor
sub
mov
add
cmp
mov
mov
jg
xor
mov
sub
add
jmp
xor
add
add
mov
mov
mov
xor
add
not
and
movsbw
mov
sub
mov
xor
mov
cmp
jne
movsbw
mov
sub
mov
xor
mov
cmp
je
mov
xor
mov
sub
add
jmp
mov
mov
jmp
dec
sub
pusha
repz
or
test
jno
js
loopne
jl
pop
jl
jae
enter
js
mov
movsl
dec
fwait
dec
xlat
cmp
or
mov
pop
out
shlb
sbb
lret
out
push
sahf
out
xchg
mov
mov
pop
stos
mov
aaa
mov
out
scas
or
lds
inc
test
pop
pop
xor
repnz
inc
adc
int
dec
sub
jno
sub
jae
push
pop
jae
push
add
push
xchg
lahf
adc
daa
inc
sti
push
orl
jns
ds
pop
cs
cli
out
or
dec
xor
repz
ss
outsb
cs
or
cmp
repz
adc
out
pop
xor
sub
lock
dec
cmp
dec
mov
and
stc
aam
jmp
xor
inc
sbb
addr16
loope
jbe
mov
mov
xlat
adc
dec
jl
add
inc
stos
pop
push
inc
sbb
lret
sub
mov
jne
repnz
mov
sub
and
mov
cmc
mov
andb
paddusw
hlt
mov
cmp
stos
ret
lcall
addl
adc
cmp
dec
movsl
cmp
dec
push
jo
pop
out
and
lods
jne
rorl
mov
mov
cmp
in
es
xlat
leave
xor
lea
fdivrl
sub
imul
sub
mov
dec
and
bound
xor
or
push
movsl
jae
xor
dec
dec
fsts
mov
cmp
jp
xlat
fdivrl
call
gs
popa
push
lcall
mov
fwait
in
cmp
mov
jle
mov
cmp
pop
dec
mov
push
int3
sbb
test
fcoms
mov
ret
pusha
mov
out
jns
dec
movsl
nop
xchg
notb
leave
add
imul
dec
test
loop
pop
ja
cmp
inc
movsl
push
inc
shr
xor
mov
mov
lods
jnp
cmpsl
lock
std
xchg
or
add
fnstenv
or
xchg
movsl
out
inc
and
aam
aas
out
pop
sar
jae,pt
cld
loop
std
sbb
push
imul
adc
lds
push
pop
cmp
and
jo
ss
mov
shrl
pop
jle
cwtl
in
add
push
leave
out
loop
inc
xchg
jle
sahf
cs
scas
scas
push
cmp
rcrl
adc
mov
push
mov
add
mov
pop
mov
ss
rdmsr
add
or
insl
pop
popa
jae
insb
lods
rorb
push
inc
add
out
mov
outsl
lret
test
les
scas
mov
pop
push
cli
and
fucom
clc
cwtl
add
dec
and
jb
push
lods
dec
inc
inc
sahf
mov
orl
xchg
movsb
cmp
cwtl
inc
sarl
mov
and
cmpsl
imul
dec
cltd
mov
mov
int3
inc
cwtl
jge
scas
jl
adc
imul
call
mov
fldenv
mov
add
test
int3
xchg
bound
dec
aam
sti
mov
fnsetpm(287
mov
imul
xchg
popf
xchg
daa
rcrb
cmp
cld
lods
fdivs
ss
iret
std
cld
mov
xor
inc
pusha
imul
dec
or
insl
mov
dec
outsl
sbbl
mov
push
test
sub
ljmp
jle
pop
jae
jb
call
mov
fnsave
jb
cmp
jbe
rdtsc
mov
cs
xchg
xor
stc
push
les
out
mov
in
pop
jg
adc
add
iret
frstor
dec
mov
and
xor
mov
mov
xor
subl
mov
xor
jp
fucomip
loopne
push
shlb
cltd
mov
jl
sbb
add
fcoml
leave
adc
cltd
xchg
arpl
jne
int3
or
jnp
adc
ret
jo
adc
cmc
ret
sbb
je
mov
and
xchg
jecxz
push
push
test
movsl
je
je
inc
add
mov
sti
adc
adc
or
cmp
pop
iret
xchg
cs
sub
sub
adc
fildl
cmp
leave
dec
pop
or
leave
jmp
adc
push
adc
or
or
mov
lahf
addr16
stos
adcb
imul
jno
jne
push
fs
cmp
add
jl
push
and
aad
xor
add
loop
hlt
dec
ljmp
cmp
scas
jmp
test
cmpl
and
scas
mov
lods
xchg
cmpsb
push
or
sbbb
add
cwtl
aaa
mov
jbe
mov
std
addr16
xchg
mov
and
test
or
adc
jae
sbb
push
jae
lret
jne
cltd
cmp
pop
dec
mov
addr16
mov
popa
push
xor
fimuls
loop
leave
ficomps
jecxz
push
js
xchg
mov
stc
rcll
add
xor
mov
mov
pop
xlat
test
jo
sbb
fucomp
or
push
adc
test
daa
push
negb
scas
inc
cmpsl
mov
and
in
mov
or
xor
cmp
mov
mov
and
in
cmp
push
pusha
add
push
ja
cmp
push
mov
jl
push
in
add
incb
or
mov
and
mov
in
or
or
cmp
out
xchg
loop
push
jg
enter
xchg
imul
lods
pop
std
xchg
incl
scas
call
xchg
pop
outsb
mov
cmp
sub
xchg
icebp
jno
test
or
bound
cmp
cmpsl
and
adc
push
out
loope
or
ljmp
nop
and
je
out
es
out
push
and
jb
add
jnp
push
fstl
mov
notl
dec
sbb
pop
push
and
jle
cmp
pop
jne
test
jmp
jecxz
gs
das
pop
cmpl
bound
fdivrs
or
sbb
cltd
jecxz
jg
inc
mov
stc
clc
ret
fwait
mov
dec
cmp
arpl
mov
movsb
pop
jns
sti
outsb
push
imul
adc
and
roll
pushf
divl
and
cmp
mov
dec
xchg
or
push
inc
xor
fisttps
int3
iret
sti
dec
aaa
leave
je
dec
insb
dec
jno
scas
xor
test
sti
bswap
pushw
in
jmp
xchg
add
popf
sbb
sti
jae
je
add
dec
fisubs
add
push
xchg
ds
adc
mov
jno
cltd
fsts
adc
jecxz
stc
dec
test
add
mov
popa
test
insb
mov
flds
add
scas
add
push
dec
mov
nop
std
add
sbb
in
cmp
imul
sub
in
pop
pop
mov
mov
xchg
cmp
cmp
loope
lret
dec
in
dec
pop
shl
popf
jmp
and
data16
loop
stc
mov
out
mov
loopne
jg
into
sbb
fbstp
ficoms
mov
mov
mov
dec
inc
xchg
imul
inc
in
cmpsb
mov
mov
adc
call
les
lret
pop
fwait
push
pop
cli
xchg
adc
insl
jbe
je
mov
rcll
lods
ss
movsb
push
cltd
pop
cmp
add
or
add
jne
cmp
mov
out
daa
push
xchg
xchg
jnp
sub
push
push
jns
cmp
movsb
mov
ficoml
loop
or
js
and
jge
cwtl
sub
push
sbb
xlat
cmpsb
push
pop
iret
pop
sub
xor
test
and
daa
popa
decl
fsts
repnz
stc
outsb
add
dec
call
jnp
jae
sahf
push
push
mov
dec
out
push
pusha
sahf
xchg
mov
iret
shlb
popa
rcrl
aad
je
xchg
bound
mov
xorb
jbe
in
xchg
mov
push
cmp
cwtl
pushl
cmp
pop
nop
xor
fistl
mov
jl
pusha
mov
xchg
xorl
sbb
mov
orl
dec
stos
xchg
into
cwtl
push
sub
out
stos
sub
push
pop
out
push
jae
test
inc
sub
int
repz
in
jo
hlt
cmp
xchg
dec
xchg
fisttps
fwait
adc
in
aas
les
fistpll
out
leave
dec
das
inc
push
scas
les
sub
in
and
shr
jmp
daa
std
jp
mov
nop
mov
sbb
mov
dec
cmp
sub
jmp
xor
push
aas
dec
das
jno
cmp
xor
jo
out
and
push
mov
and
popf
idivl
push
lcall
dec
sbb
push
mov
sub
pop
jmp
sub
xchg
or
sbb
xor
jns
or
dec
pop
sbb
shll
jno
pop
jbe
jb
jae
loopne
pop
mov
dec
pop
jmp
inc
out
add
sti
repz
out
ja
insl
lds
and
sub
jo
and
leave
push
dec
int
dec
sbb
adc
pop
dec
pop
fdivs
das
pushf
in
ret
mov
mov
xorl
and
js
in
xlat
sub
jg
jns
mov
pop
xor
out
repz
mov
fdivr
and
pop
fbstp
mov
test
cmp
in
cmp
push
add
inc
fcmovnb
jge
xor
jnp
dec
stos
fdivrp
push
or
loope
lret
jne
push
icebp
pop
negl
jle
push
add
dec
push
xor
cmp
pop
movsb
into
jb
push
loopne
xchg
adc
fcmovbe
xchg
mov
imul
mov
inc
int3
out
test
out
lods
xchg
and
jge
dec
push
sub
int3
sbb
mov
mov
jne
mov
xchg
sub
add
xchg
add
imul
inc
loop
icebp
sbbb
xor
pop
cmc
mov
cli
in
into
xor
mov
rclb
xchg
adc
pusha
mov
out
jg
dec
cmp
and
dec
inc
scas
mov
orb
and
fwait
cs
arpl
test
stc
ret
push
push
mov
jge
pop
or
fists
lods
aas
leave
outsl
cmp
add
test
in
mov
inc
and
call
mov
mov
lahf
cmpb
call
outsb
jp
popf
into
bound
xchg
jle
mov
pop
test
or
xlat
sub
fstp
mov
mov
aam
loop
fnstsw
stc
pop
jle
daa
flds
xchg
cwtl
int3
sahf
rorb
shrb
push
adc
jbe
jbe
incl
cld
mov
rcll
out
cmp
add
out
sarl
mov
mov
ljmp
and
cs
or
jecxz
mov
enter
and
lret
pop
nop
or
daa
adc
in
sbbl
lods
mov
loop
xchg
in
aaa
pop
adc
mov
ftst
addr16
ror
gs
jg
out
lock
mov
scas
inc
lret
or
cmpl
mov
xchg
or
outsl
jmp
mov
rcrl
mov
mov
xchg
mov
xlat
mov
sub
dec
pop
xlat
mov
popf
subb
movsb
ds
das
sbb
movsb
sahf
inc
inc
dec
data16
inc
mov
shr
lods
mov
or
push
xor
aad
push
ljmp
inc
xor
xor
push
loopne
aaa
add
adc
std
cs
sub
push
cwtl
jle
jns
scas
lods
loop
cli
mov
les
lock
loope
cmp
loopne
imul
imul
xchg
and
pop
sbb
mov
jl
adc
andb
repz
mov
adc
dec
insb
jne
pop
pop
dec
fstpl
aam
cmp
scas
or
sub
cmpsb
push
sbbl
or
inc
jo
leavew
dec
icebp
xchg
push
lret
mov
mov
adcb
aas
ds
sahf
addr16
loope
dec
jle
orb
in
push
adc
jno
and
out
pop
outsl
push
xlat
clc
sbb
nop
dec
lods
mov
dec
cli
jb,pn
or
mov
inc
stos
sbb
mov
inc
bound
inc
std
testb
jnp
repz
rolb
repz
inc
pusha
mov
lods
push
test
pop
ret
push
test
mov
rclb
sub
sub
loope
mov
aad
add
rcrb
fcoms
mov
or
ja
dec
lds
add
int3
mov
xchg
lcall
cmp
aas
cs
mov
jmp
cltd
and
lcall
inc
call
push
jns
add
or
sub
and
mov
fidivrl
mov
inc
mov
mov
cmp
push
xorb
sub
add
push
xchg
xor
les
pop
bound
jg
es
aad
into
push
popa
xchg
mov
es
pushf
add
push
std
insl
inc
sbb
push
scas
mov
out
and
xchg
cmpsb
pop
cli
insb
mov
jp
inc
inc
jnp
xlat
clc
cmpsb
and
nop
div
aas
out
daa
xor
inc
sbb
es
sbb
imul
stos
adc
les
and
test
mov
add
popf
dec
shlb
sbb
xchg
jg
aas
lods
mov
fcmovbe
pushf
out
sbb
mov
ret
dec
and
cmpsb
je
stos
xchg
dec
pop
inc
cmc
cld
mov
sub
mov
jbe
mov
idivl
gs
jmp
outsl
lods
cmp
sub
sbb
pop
xchg
inc
lret
cmp
xchg
sbb
add
outsl
and
call
adc
repnz
shlb
imul
add
shrl
jl
pop
das
sar
mov
and
inc
cmp
push
cmpsb
adc
inc
sti
cwtl
das
sub
or
ja
cmp
sti
es
xor
jp
sub
xchg
mov
cmp
jmp
jnp
data16
test
xchg
cmp
imul
and
or
pop
out
add
call
push
ret
xor
daa
pop
mov
mov
or
lcall
out
pop
icebp
setno
mov
xchg
in
stc
sbb
cmp
in
fwait
mov
in
push
xchg
inc
pop
dec
dec
xchg
das
add
dec
not
pop
fstps
in
roll
lahf
xchg
mov
mov
or
sbb
sbb
mov
xchg
push
inc
pop
cmp
and
neg
into
pusha
add
push
loope
or
pop
movsb
addl
fnstenv
pop
js
popa
nop
dec
add
cmp
and
and
xlat
jo
inc
and
mov
push
fsubrl
push
inc
push
call
pop
cmpsb
mov
andb
and
ds
scas
mov
insl
cmc
inc
popf
and
ds
adc
orb
loop
cwtl
jle
pop
shr
add
cltd
fiadds
cld
push
inc
les
orl
jg
cli
fstp
lock
mov
lods
xchg
cltd
dec
imul
adc
add
pop
xchg
jecxz
fbld
ret
add
pop
in
add
lods
push
lcall
inc
sbb
lret
xor
in
sahf
test
repnz
mov
dec
xor
lock
ljmp
sbb
jp
loop
lock
mov
add
mov
mov
mov
int3
out
pop
mov
push
pop
sub
inc
cmp
int3
sbb
loop
fmuls
stc
pop
xchg
int
push
stos
movsb
mov
inc
out
cmpsl
mov
repnz
packuswb
jbe
and
cmp
cmpsb
addb
lret
data16
cwtl
inc
mov
cmp
or
mov
hlt
lahf
cmp
xor
in
sub
cwtl
pop
enter
dec
mov
mov
push
mov
cltd
in
out
dec
ss
pop
cmp
clc
and
mov
ret
pop
jo
std
add
or
sbb
sub
push
push
pop
imul
out
xchg
push
repnz
pop
hlt
pushf
pop
add
push
ja
cs
xchg
xchg
xchg
pop
lds
pop
jbe
mov
lods
xchg
repnz
jmp
lcall
sbb
inc
aam
xchg
lock
ds
pop
out
and
inc
ds
fcmovnu
sti
add
sub
mov
shlb
popa
xchg
cmp
jnp
aam
leave
xor
jl
dec
push
ficomps
dec
test
stc
lcall
sbb
lock
mov
ret
mov
cwtl
data16
mov
sbb
out
stos
icebp
popf
xor
daa
push
in
fldcw
inc
std
popf
fneni(8087
xchg
adc
push
outsb
xchg
sbb
popa
sub
and
jge
data16
stos
inc
lcall
bound
imulb
mov
outsb
push
and
in
shll
xchg
add
pushf
mov
stos
mov
out
push
stos
jo
lret
lcall
in
lcall
nop
mov
lret
sarb
arpl
push
cmpsb
jno
in
add
and
xor
sarb
or
mov
push
xor
xchg
lret
jge
sarb
ds
gs
neg
mov
les
loop
fisttpll
push
inc
test
mov
imul
fsubp
pop
sbb
mov
xchg
call
pop
xor
sbb
mov
stos
icebp
jecxz
add
sbb
in
in
std
sbb
out
jmp
cmp
xchg
stos
out
inc
jp
adc
sbb
or
out
test
mov
push
xchg
push
sub
dec
int3
push
and
in
ds
je
pop
sub
or
es
out
ret
push
aad
jb
jno
and
popa
push
push
sbb
movsb
loope
xor
or
orl
int3
push
and
lods
mov
push
and
int
xor
cs
inc
sub
mov
xchg
cli
lods
jo
fiaddl
fidivrs
shl
or
or
fcoms
mov
add
fsubrl
jge
out
xchg
add
and
les
scas
mov
lahf
outsl
jge
jl
das
clc
inc
andb
popa
pop
add
loop
adc
in
and
test
xchg
jno
mov
pop
xor
jno
in
cmp
lods
call
cmpsl
test
pusha
les
fwait
sbb
divl
daa
push
xor
fidivrs
adc
or
out
std
or
inc
push
movb
popa
inc
dec
imul
push
test
int
pop
pop
mov
fdiv
adc
add
mov
lds
cltd
ds
fnstenv
mov
dec
lcall
imul
lea
lods
mov
jbe
inc
adc
sarl
pop
aaa
cmpsl
aad
fwait
imul
fnstenv
mov
cli
cld
mov
mov
sbb
xchg
mov
mov
stos
mov
sub
into
mov
mov
inc
inc
in
movsl
mov
cs
flds
test
out
mov
adc
in
sub
pop
jmp
shlb
dec
push
shlb
cltd
les
jno
pop
mov
cmc
adc
inc
jne
loopne
mov
call
inc
cmp
push
imul
movsb
scas
divb
xchg
pop
adc
add
insl
ficoml
push
and
f2xm1
xlat
lcall
jns
and
test
sub
lcall
es
cmp
sub
iret
mov
mov
pushf
lods
gs
xchg
out
push
stos
lretw
push
andb
mov
pop
mov
rol
insb
aad
jnp
push
loope,pn
leave
leave
repz
or
mov
mov
add
sub
push
push
movsl
clc
fdivp
incb
mov
sub
popa
pop
cmpsl
and
movsb
inc
sete
popa
push
std
test
fdivl
fiaddl
jne
and
sbb
lahf
jo
cld
insl
mov
push
pop
adc
sbb
mov
jp
or
out
shrl
es
int3
xor
jns
dec
test
push
xor
movswl
popa
imul
insl
push
push
xchg
int
jnp
cmc
bswap
das
pop
dec
in
pop
inc
mov
push
push
insl
mull
cmp
add
lds
cmp
pop
test
pop
fidivs
in
jl
sbb
add
jno
ljmp
stos
std
loop
mov
push
test
jmp
push
sbb
push
aad
iret
ret
data16
dec
pop
jle
add
pop
jne
dec
test
into
rcll
lcall
xor
inc
sub
stc
iret
and
out
jle
out
lret
gs
sbb
xchg
mull
mov
out
push
push
test
ljmp
push
or
fwait
mov
add
or
push
add
dec
test
dec
movsb
orps
insl
scas
mov
pusha
call
dec
pop
sbb
sbb
cmc
ja
push
fldenv
ljmp
cmp
in
test
scas
xchg
or
cmp
mov
mov
adc
or
cmp
cmp
mov
dec
inc
fsubrl
scas
stos
xor
sahf
aas
mov
mov
pop
pushf
mov
test
push
jno
cmpsb
shlw
mov
xor
out
mov
loope
inc
inc
sub
push
add
push
icebp
pushl
jle
mov
mov
push
sarb
movsb
repz
mov
sbb
sub
jo
insb
add
jno
stos
in
sub
mov
xlat
sub
push
push
cwtl
and
add
and
mov
stos
fwait
jecxz
inc
inc
fimull
push
das
scas
push
sbb
shrb
in
push
sub
mov
dec
dec
cli
cmp
lahf
push
jns
jp
shrl
ds
add
sarl
lods
cmc
in
insb
aad
scas
add
rdmsr
mov
outsl
pop
and
cmp
fwait
jb
push
inc
xchg
int3
mov
pop
dec
adcb
sub
mov
or
pop
imul
pop
pop
sub
push
xor
and
std
jnp
or
cltd
popa
cltd
jp
es
out
int
jno
mov
and
clc
adc
pop
scas
notl
mov
or
mov
mov
or
mov
jle
sarb
pop
inc
jb
popf
cmp
or
jno
or
movsl
mov
ficomps
stos
div
pushf
jge
cmpl
lahf
fldenv
or
outsb
sbb
cli
rcr
mov
mov
cmp
or
into
in
sbb
inc
dec
ss
clc
scas
or
push
cmc
pop
xchg
mov
es
outsb
lds
out
pop
fucomp
call
int
jg
loopne
sbb
js
fidivrl
and
dec
sub
or
cli
xor
mov
ds
xchg
or
jmp
test
adc
bound
je
jb,pn
pop
imul
mov
fs
mov
push
scas
xor
mov
push
iret
cmp
fwait
out
adc
int
jp
and
rcr
cmp
pop
clc
stos
fdivl
int
sbb
arpl
sbb
dec
bound
dec
dec
and
repz
jp
mov
pop
std
or
es
jge
call
xchg
jo
fs
or
cwtl
add
out
loopne
xlat
test
inc
xchg
mov
fs
sbb
lods
ret
xchg
hlt
mov
xchg
xor
loope
or
pop
xchg
pop
push
cmp
fnstcw
and
notl
jge
jns
adc
hlt
int
scas
outsl
or
xchg
dec
icebp
push
repnz
mov
test
js
js
mov
jp
cmp
ret
mov
xor
add
aaa
insb
jge
mov
loope
mov
ljmp
mov
push
fs
mov
mov
dec
clc
lret
loope
jne
jb
sub
sti
push
xchg
jb
dec
push
fcmovu
std
xchg
mov
and
in
stos
push
dec
pop
push
repz
adc
ret
mov
push
lods
mov
pop
aam
or
fldt
and
pop
das
xchg
cmp
add
mov
pusha
aaa
dec
xchg
fcmovb
sbb
nop
sub
mov
fnsave
add
lret
xchg
fs
push
push
frstor
out
sub
mov
in
dec
xlat
and
xor
pop
enter
or
pushl
sub
push
repz
xchg
mov
jae
dec
sbb
and
fisttps
sbb
pop
in
scas
mov
arpl
add
mov
adc
jp
inc
lock
lods
pop
pop
dec
mov
or
push
cmp
not
xor
movsb
lret
add
cmp
enter
stc
push
and
mov
inc
cmp
add
push
mov
pop
sbb
or
sub
add
or
sahf
push
or
popa
sub
sahf
pop
xchg
jg
bound
js
sti
cmp
mov
enter
cli
dec
lods
jge
xchg
mov
aad
outsb
pusha
push
push
dec
fsubl
jbe
addr16
sub
xor
xchg
add
imul
xchg
stos
inc
add
out
lock
and
roll
es
dec
test
int3
in
out
movsl
addr16
subb
out
add
sahf
inc
mov
jl
into
mov
xor
add
xorb
inc
andl
orl
lcall
jp
call
pop
adc
lahf
pop
inc
jmp
cltd
int
mov
ds
ret
ja
in
insl
pop
mov
int
ja
cmp
mov
out
dec
cmp
dec
and
test
aad
je
inc
sub
and
popa
shrl
out
sbb
or
pop
jle
jne
insl
mov
mov
aas
movsb
bound
in
aad
leave
pop
gs
xor
pop
stos
popf
popa
push
lret
push
add
inc
sbb
lea
mov
or
and
cmp
clc
std
cmpsb
std
cmpsl
ja
popa
ljmp
lahf
mov
inc
xor
push
mov
fcompl
xor
or
adc
sti
push
xor
cmp
mov
out
push
mov
leave
pop
xlat
scas
pop
dec
bound
aad
aad
inc
push
jge
pop
testb
testb
xchg
push
test
jb
int
in
imul
mov
jle
add
fwait
pop
fs
mov
mov
push
rcrl
ss
in
jo
pop
xor
ljmp
int3
test
jae
xchg
ja
cmp
fsubrp
xor
add
inc
test
pop
pop
out
and
sub
test
pop
push
lds
andb
imul
aas
arpl
lahf
subl
push
fidivrs
cli
insl
jae
xchg
fwait
stos
xchg
xchg
lahf
int
sbb
lods
jg
or
dec
shrb
stos
sbb
fidivrl
out
insl
aam
fldcw
mov
cmp
add
ret
sub
rcl
fwait
mov
pop
and
mov
shrb
push
fildl
aaa
aas
jge
int
xchg
mov
adc
cmpsl
mov
in
dec
adc
jae
in
dec
push
pop
loopne
fst
out
cmp
push
pop
mov
cmpsb
rcll
insb
js
ja
stos
push
popf
outsl
insb
lea
daa
mov
dec
jmp
pop
out
pop
add
decl
pop
pop
cmc
xchg
in
mov
xchg
iret
popf
das
xchg
pop
xor
in
mov
repz
lea
and
aad
dec
or
sbb
pop
adc
sub
push
outsb
jnp
dec
sarl
pushl
aad
mov
out
xor
xor
sbb
jle
pop
sub
jne
js
cmp
sbb
dec
cmpsb
jo
addr16
jp
inc
repnz
dec
imul
dec
jb
push
push
xor
sub
inc
adc
or
in
loop
mov
hlt
xchg
out
sub
mov
jnp
movsb
popl
dec
jbe
in
divl
sti
jecxz
xchg
jb
test
out
imul
jno
add
ret
jbe
mov
sarb
fidivs
pusha
lods
call
js
jmp
xchg
fildl
icebp
aas
pop
ret
sub
xor
mov
mov
mov
mov
push
add
iret
sahf
add
gs
mov
les
dec
popa
loop
aas
loopne
xlat
popa
mov
shrb
pop
xchg
shll
loopne
insb
mov
push
jns
mov
xchg
add
and
adc
outsb
and
mov
jge
ror
dec
ret
or
sbb
inc
xor
cltd
loopne
adc
roll
inc
mov
cmp
xor
mov
ja
jne
push
cmp
adc
stc
sub
push
lahf
subl
pusha
sbbl
push
jno
mov
and
stos
lods
sub
sbb
mov
subb
sti
push
mov
xor
pop
mov
push
sbb
push
lret
pop
das
dec
pop
cmpsl
flds
inc
sub
dec
mov
jb
xor
mov
mov
lahf
jecxz
enter
xor
and
in
xlat
xor
xchg
or
push
inc
mov
add
or
xor
stc
and
xchg
pop
sti
cwtl
xor
movsb
xchg
out
pop
cmp
lcall
les
jmp
mov
xor
rorl
outsl
jb
mov
je
fists
push
and
push
in
mov
fimull
xor
int
pushf
dec
xchg
mov
iret
cmc
dec
lcall
mov
fstl
push
mov
lock
rcr
sub
mov
mov
xchg
mov
lea
mov
mov
mov
xor
add
mov
mov
mov
xor
add
pop
cmp
jne
mov
xor
mov
add
imul
mov
pushl
jmp
mov
add
mov
mov
mov
movsbw
mov
sub
mov
xor
mov
cmp
jne
mov
mov
mov
jmp
mov
cmp
jne
push
pushl
pushl
pushl
pushl
call
pop
pop
leave
ret
push
mov
sub
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
pushl
push
pushl
push
pushl
pushl
push
push
push
pushl
pushl
push
call
cmpl
jne
mov
inc
mov
jmp
andl
jmp
xor
or
inc
mov
cmpl
jae
cmpl
jne
pushl
pushl
push
push
call
jmp
push
mov
xor
mov
movl
mov
mov
sub
add
push
mov
mov
mov
mov
xor
xor
mov
add
add
imul
mov
cmp
je
mov
mov
mov
xor
lea
mov
mov
mov
mov
xor
xor
add
add
imul
mov
cmp
je
mov
xor
mov
add
imul
add
mov
mov
jmp
mov
mov
xor
xor
add
add
imul
pop
pop
leave
ret
push
mov
push
andl
xor
or
inc
mov
cmpl
jne
push
pushl
push
pushl
call
cmpl
jb
movl
mov
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
call
jmp
mov
xor
add
mov
mov
xor
push
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
pop
leave
ret
push
mov
sub
adc
jmp
xor
jg
mov
pop
ja
inc
fchs
xchg
jmp
inc
pop
jl
jmp
cmpsb
push
stos
arpl
jg
test
inc
sub
loopne
lods
mov
das
scas
lcall
cltd
jo
xchg
enter
call
jle
lods
popf
bound
or
mov
inc
fsubp
cmp
rcll
jno
jbe
out
test
fisubs
inc
sub
int
lea
mov
mov
xchg
adc
xlat
sbb
ja
or
xchg
das
and
loop
push
in
push
repnz
loope
movsl
push
aaa
pop
xchg
jg
cltd
in
ds
push
pop
xor
mov
sbb
insl
setp
cmpsl
mov
and
mov
or
movsb
icebp
add
cs
test
mov
or
push
push
das
sub
inc
and
in
sar
fistps
xchg
int3
sub
lret
or
cmp
adc
bound
pop
fxch
mov
adc
stc
aas
pop
sub
or
push
in
icebp
mull
shll
or
or
popf
imulb
push
movsl
inc
add
fdivrl
stos
xchg
xchg
push
pop
sbb
int
xchg
xchg
cmp
into
mov
jecxz
sbb
xor
pop
xor
sbb
pop
inc
lahf
pop
sub
pop
iret
cmc
pop
stc
mov
pop
les
dec
inc
mov
dec
cld
or
or
dec
xor
std
mov
sbb
je
aas
out
push
pop
adc
sbb
es
xor
call
lock
shll
adc
mov
sbb
loop
leave
jnp
das
out
jno
push
ljmp
inc
mov
fidivrl
pop
mov
inc
mov
lock
pop
push
inc
xchg
sub
add
inc
push
pop
mov
mov
pusha
mov
movsl
xlat
lock
cmp
inc
push
add
ds
pop
stos
std
bound
test
add
lock
mov
lcall
xor
je
sub
out
jg
jnp
inc
mov
pop
es
loop
es
fwait
popa
pop
jle
test
je
adc
pop
inc
insl
mov
ret
orl
xchg
insb
cld
push
jp
js
sub
and
push
fidivrl
xor
sub
andb
nop
adc
jge
push
and
push
push
add
dec
aaa
push
call
ds
in
mov
xlat
jae
or
jno
xchg
jp
fnstcw
in
ja
sbb
sub
fdivl
dec
outsl
jns
lret
adc
adcl
add
add
movsb
mov
leave
cmpb
push
aad
pop
loope
insb
es
dec
ds
movsb
out
xchg
fistpl
insl
dec
pop
cmpsb
xor
push
push
dec
les
bound
dec
pop
jnp
jne
push
sbb
mov
popl
sbb
cwtl
lcall
xor
cmp
push
lahf
popa
cmp
lahf
dec
sub
mov
cmp
sbb
subl
fs
cltd
xor
int
subb
inc
shlb
movsb
inc
imull
mov
sub
and
jmp
mov
xchg
cmpsl
ret
sub
int3
fimuls
xor
cli
xchg
popa
jmp
jl
jg
add
xor
lock
cmc
or
dec
jcxz
xchg
xchg
push
pop
push
cmp
xchg
lock
mov
fdivr
inc
insb
mov
addr16
inc
add
mov
add
scas
sbb
cmp
int3
imul
inc
subb
mov
std
push
pop
andb
insl
dec
xlat
xlat
cs
rclb
std
in
mov
repz
push
sub
push
add
pop
vpunpckhdq
leave
out
or
inc
out
adc
cmc
cwtl
in
cld
add
aad
test
xor
movsl
mov
in
lock
ljmp
lret
inc
lods
adc
pop
cltd
xchg
insb
fs
in
push
add
sub
xchg
or
aam
mov
and
test
mov
les
adc
push
test
testb
sbb
inc
and
mov
xchg
sbb
flds
push
stos
fisttpl
jae
push
cmp
cltd
xchg
dec
lock
cmp
test
insl
mov
inc
shlb
or
repnz
jbe
in
xor
pop
cmpb
imul
fildl
and
lds
push
sub
sbb
jmp
sbb
mov
loop
jnp
inc
sbb
mov
jnp
lock
sub
repz
ficomps
add
outsb
ljmp
fs
xchg
lret
mov
dec
rol
adc
pop
test
sub
xor
or
inc
jp
lret
add
inc
adc
out
and
xor
mov
sti
in
movsl
mov
inc
insb
lea
cmp
sti
in
in
mov
adc
fimuls
add
cmpsl
push
push
xor
pop
sahf
testb
shl
fwait
xor
lahf
jo
imul
sbb
addr16
insl
stos
negb
in
divl
and
mov
pop
and
cld
add
adc
jbe
pop
push
push
ds
pushf
dec
jo
sbb
push
es
xor
mov
icebp
push
jae
add
test
cmp
mov
adc
push
add
mov
aas
mov
mov
lods
cmp
movsl
xor
ds
icebp
adc
push
into
insl
sahf
mov
xchg
jb
adc
pusha
cmp
or
jne
into
pop
and
lcall
pop
inc
jne
out
fcompl
and
lock
data16
mov
int
shlb
sbbb
pusha
jne
pop
and
outsl
into
xchg
or
in
pusha
cmp
xor
or
dec
jg
movsb
push
popa
dec
cmp
add
fimuls
sbb
xor
mov
xlat
push
loop
pushf
pusha
pushl
xor
jnp
mov
and
xor
sar
xchg
adc
cmp
ss
mov
iret
xchg
out
cmp
mov
test
inc
xchg
cmp
add
rorl
add
enter
inc
and
and
sahf
dec
mov
inc
sbbb
push
popa
in
or
sub
jmp
cmpsb
push
test
nop
aad
aad
or
dec
push
in
lret
sub
aaa
sub
adc
sbbb
xchg
mov
and
repz
adc
and
fisubrl
adc
pop
add
popa
out
icebp
fwait
xchg
inc
or
ja
jae
dec
mov
jb
mov
or
lea
out
xlat
lock
shll
adcl
mov
ret
add
add
add
and
jp
popf
add
sub
int
std
jo
mov
mov
imul
or
int
rcll
add
cmp
mov
sarb
adc
push
inc
xor
cwtl
inc
jae
sub
sub
push
sub
dec
mov
stos
out
js
pop
ret
fldt
adc
imul
in
mov
pushf
test
subl
out
sbb
popf
or
divb
cmpsl
mov
sub
pop
adcb
cmp
fdivs
pop
push
xlat
pop
je
jo
pop
cmc
scas
pop
lods
dec
inc
xchg
dec
add
xchg
movsb
icebp
dec
xor
adc
arpl
js
std
dec
repnz
cmp
cmp
ds
mov
imul
aaa
add
paddusw
test
popf
pop
dec
xor
insb
adcb
push
fbld
jbe
jp,pt
mov
cmpsb
push
jge
inc
sub
xor
aas
add
jno
pop
jo
pop
sub
xchg
cmp
insl
jecxz
cmp
or
ss
mov
ror
mov
lret
xchg
lock
fcomi
mov
push
cmp
shlb
imul
xchg
and
xchg
push
sahf
ss
rcll
jecxz
call
jle
mov
push
lods
and
cmc
rol
mov
pop
cmp
cmc
lods
push
lcall
stos
mov
lea
or
mov
inc
adc
or
cltd
and
or
and
mov
insl
popf
ja
pop
xchg
mov
std
test
jae
pop
dec
cmp
adc
xor
rcr
popa
cmc
jno
fiadds
mov
dec
or
mov
xchg
xor
jbe
mov
add
orl
call
xchg
mov
dec
pop
inc
out
fisttps
add
mov
pusha
cs
out
fwait
cld
jle
adc
cwtl
dec
sbb
enter
mov
xchg
xchg
ss
sbb
sbb
test
pop
pushf
push
mov
or
ljmp
and
in
iret
in
dec
push
dec
hlt
std
mov
shlb
stc
xchg
sbb
test
stc
push
jno
mov
sahf
mov
or
arpl
pop
stos
sti
aas
inc
jecxz
lret
dec
in
jp
fidivrs
inc
insl
inc
sub
jns
test
inc
pop
jnp
daa
rolb
addr16
out
fucomi
mov
xchg
and
aas
in
mov
in
adc
add
adc
mov
mov
dec
jae
mov
das
push
mov
jecxz
mov
gs
mov
dec
pop
pusha
push
dec
loope
outsb
insb
xchg
and
loopne
xchg
scas
push
adc
scas
adc
sti
push
data16
mov
jb
pushf
mov
mov
mov
push
jmp
fsubrp
adc
sub
in
xor
cmp
mov
sub
iret
push
es
sbbb
mov
outsl
inc
sbb
je
add
fwait
sti
aad
pop
adcb
or
sub
test
cmp
movsl
ljmp
xchg
jg
ds
push
ret
pop
jge
adc
cmp
mov
push
das
mov
push
insl
and
scas
jle
outsb
addb
add
test
jle
mov
je
mov
adc
clc
int
sbb
pop
and
xor
lret
sub
add
sbb
xchg
dec
mov
fldl
push
int3
jmp
fwait
add
into
dec
out
add
sahf
xchg
int3
xchg
gs
add
cmp
gs
int3
xor
and
mov
mov
xor
popa
xchg
mov
insb
push
loopne
jne
pop
out
xchg
pop
mov
sbb
xorb
arpl
pop
xchg
fdiv
jl
je
add
and
push
cmp
push
imul
push
and
fidivl
aam
mov
push
cli
pop
movsb
push
enter
cmc
gs
cli
mov
xchg
mov
mov
out
pop
xacquire
fs
mov
inc
adc
out
out
mov
push
in
test
cwtl
push
inc
push
push
mov
test
cli
popf
fistps
xchg
inc
jle
jle
aam
mov
inc
cmp
xlat
push
vmread
push
jne
mov
xchg
in
mov
in
int
in
sbb
lcall
sbb
je
xlat
jmp
loope
aad
pop
xor
cmc
jge
arpl
push
gs
mov
ss
aas
push
mov
fdivp
lret
je
push
test
mov
fimull
in
shr
les
fs
mov
sub
mov
loopnew
mov
push
loope
fbld
xchg
sbb
dec
and
stos
xchg
inc
dec
add
mov
es
and
push
xchg
lret
add
sahf
mov
mov
xor
outsb
fwait
xor
cwtl
scas
sahf
movsl
hlt
shrl
inc
sbb
daa
mov
adc
icebp
iret
ja
xor
push
loop
icebp
xlat
loop
test
scas
xchg
aam
int
sbb
sti
cmp
lcall
in
sarb
sub
add
cmpsl
sbb
sbb
fcoms
data16
jle
adc
cmpsl
dec
mov
gs
aaa
mov
mov
int
push
xchg
iret
popa
hlt
mov
xchg
inc
lret
push
adc
ret
inc
xchg
pop
inc
mov
push
in
cmp
lret
adc
mov
mov
lret
xchg
lea
sbb
pop
imul
fwait
add
xor
mov
push
mov
dec
fisubrs
icebp
adcl
push
add
cmpsb
cwtl
mov
repnz
push
jns
psllq
cmp
loop
add
push
out
or
test
jmp
fists
xchg
add
inc
dec
cmp
jnp
add
push
jmp
shl
xchg
inc
leave
ret
cmc
push
and
xor
dec
inc
test
xchg
movsb
cld
dec
mov
lods
test
pop
aad
push
sub
jp
aas
xor
add
sti
mov
xorl
enter
nop
pop
lock
fdiv
pushf
sbb
and
sbb
mov
movb
fcos
pop
sbb
pop
cltd
out
mov
lock
lods
ret
jecxz
jbe
ret
lret
aam
jecxz
aam
mull
sbb
cmp
andb
and
test
pop
cltd
lock
insl
xor
push
inc
in
and
mov
lret
mov
popf
mov
xor
cs
packsswb
testb
ret
mov
popl
mov
cmpb
adc
rcl
sub
je
add
mov
xchg
mov
movsl
out
jle
imul
in
jbe
sub
mov
lahf
push
add
int
stos
mov
imul
mov
in
cmp
or
rorb
out
sbb
popf
and
xlat
jmp
cmp
hlt
je
in
and
ljmp
test
push
push
sub
insl
stos
cwtl
pop
hlt
mov
xchg
jle
insl
cmp
hlt
jns
repz
fidivl
test
pop
ds
cmp
jge
jae
loope
sbb
pop
and
gs
aam
adc
push
cltd
jmp
iret
xor
add
iret
push
dec
jl
or
mov
and
adc
shrl
mov
pop
or
push
icebp
stos
dec
ror
push
push
popa
inc
outsb
int3
add
jo
call
and
or
mov
es
leave
mov
ss
add
jmp
test
rol
fmul
mov
and
es
addb
mov
fcmovu
cmp
shrl
dec
iret
mov
jle
orl
cmp
xor
insl
jnp
test
ret
nop
cmp
dec
pop
sbb
jl
push
pop
push
cmp
es
test
xchg
jo
ret
xorb
daa
cld
shrl
cmpsb
push
fs
mov
shrb
xor
stos
or
ljmp
outsl
incb
and
cmc
repz
dec
les
lret
xchg
sub
cld
mov
aad
lods
repnz
jecxz
or
xchg
jmp
fwait
repz
jle
fnop
adc
mov
pop
pop
adc
pop
add
sbb
inc
push
je
leave
int3
mov
mov
rorb
cld
sbb
cmpsb
and
jg
lock
fistps
mov
test
daa
filds
fcompl
push
add
filds
jae
sbb
mov
push
clc
mov
lahf
fldl
or
cmp
inc
ret
ror
pop
jae
clc
call
mov
cmpl
dec
xorl
cli
scas
mov
cmp
stos
sbb
jbe
mov
enter
inc
inc
mov
in
cmp
sbb
push
shr
inc
pop
leave
mov
sbb
cmp
jno
in
adc
div
cmp
in
sub
lret
dec
test
in
mov
jmp
sbb
sub
and
out
add
cli
xchg
jl
outsl
jl
test
inc
cwtl
aad
fwait
aaa
jl
sub
sub
mov
mov
cltd
mov
ljmp
adc
mov
push
int3
inc
sub
lods
test
fldenv
adc
nop
imul
sub
ljmp
push
pop
push
jno
sbb
rcrl
add
roll
in
fldenv
dec
sahf
mov
inc
popa
mov
in
add
adc
stos
mov
mov
popa
mov
jp
outsb
mov
push
cld
jg
lea
inc
movsb
je
stos
lret
mov
ds
scas
cmc
sti
pop
enter
movsb
insl
push
sahf
cmp
jo
push
loope
adc
test
mov
ja
adc
ljmp
ret
movsb
mull
popf
mov
aaa
call
pushf
imul
shl
xchg
outsb
cmpsl
xor
or
mov
dec
pop
or
cld
insb
cmc
int3
xorb
and
lds
xchg
std
xor
faddl
mov
jge
mov
repz
dec
sbb
outsl
sbb
lret
cmpsl
outsb
je
test
andl
sbb
sbb
or
sti
outsb
pop
xchg
sbb
sub
xor
gs
mov
stc
popa
icebp
xor
insl
push
mov
mov
mov
adc
pop
imul
mov
nop
popa
inc
fildl
mov
mov
cmp
or
push
xor
scas
sub
sbb
dec
dec
jg
add
inc
mov
mov
mov
push
xor
push
stos
sbb
inc
push
jb
jg
aam
lock
aam
xchg
cmpsl
gs
mov
xorl
jmp
aaa
jnp
sarl
xor
add
jb
out
xchg
cmp
or
inc
loopne
orb
lahf
add
sub
ja
xor
sbb
roll
lods
push
or
rcrb
fcomip
out
add
mov
or
jns
mov
dec
aam
imul
sub
or
xor
mov
sbb
sub
in
cmp
push
arpl
push
mov
push
xchg
add
inc
add
cmpl
jl
adc
jmp
sbb
insb
lcall
pop
inc
fists
xor
jae
scas
add
pop
dec
out
cmp
fs
test
push
rcrb
xchg
adc
loop
add
sti
cmp
pop
xchg
popa
into
cmp
push
push
pop
fcomps
pop
mov
dec
stos
sub
shll
sub
cmp
and
inc
sub
mov
out
jl
sub
mov
pushl
out
jle
mov
xchg
enter
lds
add
pop
xchg
mov
hlt
sbb
int3
outsb
fsubrs
jge
test
in
cmp
cmp
or
aas
mov
ret
pop
xor
dec
or
pushf
repz
aaa
ds
rclb
jmp
push
bound
pop
and
cli
sbb
sbb
jmp
dec
stos
cld
adc
xor
lods
cs
xchg
xchg
adc
adc
call
xor
rcr
lret
cmpsl
arpl
xchg
cmp
int3
cmpsb
aam
add
add
xor
and
sbb
jle
pop
ret
mov
and
xchg
es
jbe
fsubrp
ror
stos
dec
inc
mov
adc
test
xorl
fidivl
jbe
test
dec
fldt
fsub
orb
add
cwtl
push
xor
in
roll
push
push
push
in
bound
dec
push
inc
outsb
add
xchg
aam
xchg
testb
clc
mov
outsb
int
pop
out
and
mov
in
gs
push
xchg
and
addr16
fstpl
pop
lret
or
pop
mov
jecxz
xchg
mov
xor
jnp
addb
test
mov
xchg
jle
sarb
lods
out
add
flds
xlat
pop
dec
mov
push
aad
push
sbb
jnp
cmp
lcall
jno
dec
adc
lods
jge
dec
dec
xor
xlat
ret
or
sub
add
add
inc
inc
push
inc
jbe
sbb
fimull
mov
in
aam
pop
xor
push
xorb
xchg
insl
lods
cli
vcmppd
test
push
jb
xor
mov
pop
ret
cltd
xchg
or
cmp
das
sahf
xorl
loop
jg
xchg
ja
leave
cwtl
mov
xor
add
mov
sahf
and
inc
sub
push
sbb
sbb
leave
lock
mov
movsl
pop
loopne
pop
xor
xor
test
mov
mov
lret
inc
sahf
sbb
aam
push
jne
mov
mov
insb
xor
cli
dec
cmc
dec
ja
popa
jne
mov
xorb
shll
pop
mov
xor
jne
es
inc
lcall
jne
into
ds
xor
cli
jo
cmp
and
xchg
test
jecxz
push
lret
mov
nop
adcl
cli
sub
mov
inc
adc
xchg
clc
out
mov
out
inc
and
sbb
adc
mov
icebp
fxam
cwtl
mov
push
xor
lea
or
lods
inc
stos
jns
cli
cltd
bound
test
push
out
out
loope
shll
add
adc
shr
xchg
aaa
dec
adc
lds
gs
or
lock
push
adc
arpl
pop
dec
loope
push
cmp
sbb
jbe
fsubrp
aam
call
dec
jp
mov
hlt
fimull
mov
mov
sarl
or
repnz
dec
dec
fcoms
sub
sbb
clc
insb
mov
xor
in
adc
or
rcr
mov
push
mov
cmpsl
fcompl
mov
pop
es
icebp
pop
popl
fcmovbe
push
fs
dec
sar
pop
in
push
frstor
in
pop
dec
mov
fsubr
sbb
adc
in
enter
incb
shlb
mov
mov
push
sub
sbb
jl
dec
jle
adc
and
jp
cli
mov
rorb
lock
cmp
xchg
lahf
ret
dec
mov
loop
mov
fistpl
scas
mov
mov
pop
adc
je
in
std
jecxz
and
push
call
mov
sti
test
popf
addl
js
mov
not
orl
nop
or
sbb
mov
addr16
nop
jg
and
xchg
inc
or
add
lret
fdivrs
popf
pop
enter
sub
inc
lcall
in
push
pop
jo
inc
movl
inc
sbb
std
js
cmp
mov
inc
cltd
push
add
les
stc
dec
xlat
pop
pop
loopne
packsswb
loope
test
cmp
xor
cmp
and
mul
mov
push
sbb
mov
iret
andb
test
lret
cmp
mov
mov
jne
xchg
fcom
es
nop
orl
inc
negl
sbb
pop
lock
stc
push
lret
in
xchg
test
ficoms
pop
dec
sub
add
pusha
mov
std
mov
clc
out
movsl
pop
cltd
fstl
xchg
and
les
inc
mull
mov
mov
dec
mov
aas
sbb
loop
jno
cwtl
test
xor
in
sbb
mov
dec
mov
hlt
std
xlat
or
mov
dec
repz
testb
mov
into
fisubl
scas
jp
adc
xchg
lahf
add
dec
fwait
add
and
movsl
adc
and
pop
cltd
and
mov
xor
xchg
orb
jge
lds
pop
or
xor
adc
cmp
rcl
out
mov
add
pusha
add
scas
mov
xchg
rcl
jae
test
stos
mov
repz
pushf
inc
jmp
push
dec
dec
mov
fstl
mov
imul
cmp
inc
fs
inc
pop
push
repz
out
lea
jl
inc
ljmp
or
sbb
add
dec
cmp
jecxz
xchg
dec
out
ja
daa
jmp
mov
and
pusha
pop
adc
and
adcb
push
add
fidivs
sahf
aad
xchg
stos
pop
insl
push
sarl
jge
inc
push
xor
mov
fistl
arpl
std
pop
dec
repnz
lods
cmp
jle
jb
xor
sbb
rcl
mov
push
xchg
push
ds
imul
subl
lods
iret
jnp
sub
sub
cmc
add
adc
or
in
into
and
or
sub
mov
loope
fildll
jg
repnz
cmpsb
fs
xchg
dec
fdivrs
jbe
or
ss
scas
dec
xorb
negb
shll
inc
add
aas
xorl
mov
repz
cmp
hlt
sahf
jbe
lods
ja
xchg
popa
imul
pop
dec
sbb
pop
or
fnstcw
xor
sub
faddl
rcl
xor
xor
jmp
mov
enter
stc
mov
mov
mov
es
or
xchg
pop
test
xor
push
pop
sbb
scas
dec
cmp
imul
mov
sub
fs
cmp
sti
mov
mov
cld
jl
mov
sub
aam
inc
mov
jns
lock
push
push
cwtl
push
movsb
sbb
orl
xor
mov
les
in
scas
and
test
rcll
inc
mov
arpl
or
int
movsb
push
pop
sti
or
lock
aas
adc
ret
movsl
fidivs
mov
fstpl
fists
popf
out
sbb
into
inc
mov
pop
cmp
add
jle
or
inc
mov
mov
xor
out
repz
add
pop
add
cmpsb
mov
mov
sahf
mov
mov
push
ss
lods
repnz
push
add
popf
into
int3
pop
scas
ja
andl
into
push
imul
stos
jo
inc
inc
or
js
pop
mov
aam
adc
push
insl
push
mov
fldt
dec
incl
loope
call
sub
push
in
in
pop
sbbb
pop
and
xchg
je
inc
lods
xchg
push
or
push
jo
sbb
xor
aas
xchg
cmpsb
popa
out
adc
sub
scas
dec
pop
orl
xor
or
push
push
daa
add
or
and
cli
dec
call
ret
stos
cmp
ret
arpl
sub
and
add
test
shlb
rorb
pop
mov
cmc
out
pop
cmp
xchg
imul
nop
shr
pop
cmc
iret
loopne
scas
not
pop
pushf
adc
adc
add
sar
sti
into
mov
jecxz
pushf
popf
dec
and
cvtsd2si
sub
dec
es
add
or
xchg
lret
xchg
add
cmpsb
das
in
and
sub
dec
fdivl
aas
add
mov
mov
ret
icebp
pop
ljmp
stos
es
mov
xor
aaa
cltd
pop
pop
ficompl
bound
adc
cwtl
mov
pop
jmp
test
jbe
inc
mov
push
cs
out
rcrb
and
sbb
int3
fidivrl
or
cli
cmp
sahf
out
xor
mov
out
lods
push
aad
cld
loope
fwait
dec
ljmp
les
in
imulb
popf
cmpl
es
or
and
jne
mov
test
loope
pop
jg
add
outsb
daa
stos
out
sub
mov
xchg
fcoml
outsb
ljmp
cwtl
fwait
cltd
es
and
into
fsubl
mov
mov
mov
dec
mov
sbb
or
jp
add
xchg
push
mov
sub
int
repz
jecxz
decb
loope,pt
ffreep
das
arpl
fcoms
inc
add
jge
and
cli
cmp
aaa
loop
and
scas
mov
imul
xchg
or
stc
nop
add
sbb
jecxz
arpl
ret
mov
aad
or
add
cmpsb
sarb
cmp
nop
rorl
mov
add
les
adc
dec
lds
fidivl
and
fwait
movsbl
orb
sbb
imul
push
lds
fsubl
cs
fs
aad
and
addr16
int3
or
sub
pop
xchg
cmpsl
insb
pop
mov
ret
adcb
xchg
dec
sbb
fsubs
fists
xchg
jmp
stos
bound
sub
js
mov
aaa
cltd
sbb
dec
cmp
in
movsb
pop
xor
dec
push
fwait
popl
xor
jns
aam
test
pushf
daa
lret
add
in
sti
jmp
xchg
in
cmpl
adc
dec
in
frstor
imul
jle
inc
dec
pop
xchg
lret
orb
outsl
jl
dec
dec
idiv
rolb
pusha
shrl
push
add
mov
data16
jmp
sti
cmpsb
cs
sub
imul
dec
bnd
jge
jae
mov
pop
mul
push
icebp
lcall
add
div
xchg
pusha
les
jle
xor
out
xchg
mov
in
and
or
or
dec
je
out
mov
sub
xchg
mov
xchg
test
lock
stos
dec
mov
inc
shrb
xchg
push
cmc
sbb
int
jmp
sahf
cmp
mov
dec
mov
xlat
push
cmpsl
push
sti
xchg
ds
sbb
fbld
in
or
inc
inc
or
xor
insl
add
imul
xchg
mov
pop
and
push
clc
sub
xlat
push
fcompl
or
loope
adc
lret
sub
push
mov
push
or
inc
les
xchg
fcomps
push
sti
add
imul
test
cwtl
dec
xor
loop
movsb
shl
sub
xchg
inc
lds
push
sbb
pop
aaa
dec
daa
sub
daa
sahf
mov
and
outsl
lea
add
insb
xchg
jmp
js
jae
mov
cmp
xor
push
and
outsb
sbbl
inc
and
mov
jecxz
mov
xchg
mov
adc
jecxz
rol
push
loop
test
xor
lret
shrl
xchg
push
xlat
ja
jmp
and
mov
xlat
jne
out
adcl
clc
pusha
dec
sbb
jae
jp
jne
rolb
xchg
nop
sub
test
repnz
sbb
sbbl
sbb
cmp
hlt
in
dec
dec
xchg
pusha
dec
xchg
cmp
and
fimuls
pop
nop
xchg
sub
loope
sbb
mov
int3
popf
mov
and
flds
lods
pop
jle
jl
aam
movsl
fsub
mov
mov
xor
adcl
mov
orl
add
or
movzwl
mov
xor
movb
lea
and
mov
mov
mov
xorl
xor
sub
addl
mov
movl
andl
jmp
xor
add
inc
mov
cmpl
jae
cmpl
jne
call
cmpl
jne
xor
xor
inc
mov
jmp
movl
push
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
jmp
andl
mov
inc
mov
cmpl
jne
pushl
push
push
call
cmpl
jb
xor
movl
andl
jmp
xor
or
inc
mov
cmpl
jae
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
jmp
xor
mov
decl
push
mov
mov
mov
sub
xor
inc
mov
addl
push
orl
add
jmp
movl
mov
movl
mov
movl
inc
movl
cmp
movl
jb
mov
xor
add
jmp
sub
mov
add
mov
xor
sub
mov
xorl
add
movzwl
mov
mov
sbbl
movzwl
xor
adcl
add
mov
movl
mov
inc
mov
movl
cmp
movl
jne
movl
cmpl
je
cmpl
jne
call
cmpl
jne
xor
add
dec
mov
mov
dec
mov
jmp
adc
mov
or
mov
neg
xor
add
add
mov
andl
mov
inc
mov
cmpl
jne
push
push
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
or
mov
xor
sbbl
add
mov
movl
movl
cmpl
je
cmpl
jne
push
pushl
push
pushl
call
cmpl
jne
xor
or
dec
mov
mov
dec
mov
jmp
xor
xor
mov
sub
or
movl
movl
andl
mov
inc
mov
cmpl
jne
pushl
pushl
pushl
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
mov
mov
movl
cmpl
je
cmpl
jne
push
call
xor
add
dec
mov
jmp
xor
movzbl
sub
mov
add
movl
mov
mov
mov
je
orl
mov
mov
andl
xor
jmp
test
jno
cmc
jo
pop
mov
mov
inc
pop
jl
cmp
into
inc
or
js
sar
jae
pop
repz
cmp
mov
ja
pop
movsb
add
and
enter
sarb
ljmp
mov
jae
mov
daa
mov
adc
out
addr16
into
data16
jle
inc
sbb
test
mov
cwtl
cmpsl
mov
lods
xchg
repnz
addr16
push
jbe
mov
je
cwtl
movsb
mov
imul
jno
dec
mov
jl
andl
sbb
sbb
push
xor
sbbb
mov
sbb
addr16
inc
xchg
mov
push
adc
jnp
icebp
ja
gs
ret
clc
inc
imul
jnp
push
adc
fimuls
xor
mov
aam
fistps
pusha
int
sti
cli
mov
cmp
sbb
enter
sbbb
mov
cmp
add
sbbl
cmpl
cs
mov
lret
lods
xor
das
pop
cmp
js
aaa
xchg
ja
xchg
aaa
test
mov
inc
push
mov
pusha
mov
mov
cmpsl
aas
xchg
pop
dec
cwtl
sbb
stos
vpunpckhbw
add
push
aad
test
es
sbb
adc
xchg
enter
out
fldpi
stos
aas
push
sbb
popl
jb
lods
mov
gs
push
push
popl
jg
stos
jae
lahf
fwait
lret
xor
xor
aam
and
ret
lcall
jmp
mov
or
imul
cmc
popf
and
push
adc
adc
jecxz
and
outsl
xor
adc
push
jo
or
sub
xlat
fbstp
mov
hlt
pop
xchg
mov
pop
push
sub
jg
sahf
lret
mov
lock
add
cltd
or
cmpl
imul
int
lahf
out
mov
push
jo
ss
sbb
lret
cli
push
adc
sbb
pop
fadds
xchg
stos
fcomip
ds
dec
shll
pop
mov
pop
rolb
fcom
xchg
jle
and
call
xor
mov
sbb
ljmp
stos
fidivrs
scas
lea
push
stc
in
dec
sbb
mov
pop
aas
insb
inc
dec
inc
adc
mov
scas
fmull
inc
and
sub
jecxz
or
push
adc
rclb
enter
jge
in
hlt
mov
stc
mov
int
loopne
mov
jo
mov
js
xchg
arpl
cld
cmpsb
data16
cltd
cmp
insl
sbb
scas
add
or
lret
sti
dec
lret
jg
add
stc
les
sbb
imul
and
dec
mov
in
or
xlat
ret
popa
loopne
divps
aaa
nop
xchg
lock
fadd
dec
int
fs
dec
psubsw
mov
lea
sbbb
and
sbb
popa
sub
mov
cmp
push
inc
adc
ljmp
sub
jb
pop
pop
jo
dec
adc
mov
push
xchg
outsb
mov
dec
in
jge
jl
shll
sub
push
pop
jae,pt
lret
mov
lds
arpl
out
xlat
add
cltd
into
or
xchg
repnz
add
push
popl
or
adc
idivl
push
xlat
cwtl
mov
loop
jb
add
mov
sahf
lahf
mov
rcrb
dec
iret
fisubrs
jp
in
jno
out
jg
cmpsl
cltd
test
inc
orb
and
clc
pop
lods
pop
jle
mov
mov
jecxz
mov
sub
call
ja
fistps
pop
or
icebp
nop
sbb
mov
and
push
sarl
push
jne
xchg
and
jge
pop
cli
aam
xlat
dec
outsb
mov
fdivrs
rolb
loopne
gs
xchg
aad
out
lcall
outsl
movsb
std
loope
inc
lret
xchg
cld
push
pop
fisttps
sbb
loop
jecxz
jge
xchg
pop
hlt
rep
push
fs
out
and
xchg
sub
sbb
test
ja
sub
mov
pop
int
lods
fistpll
scas
mov
shl
or
dec
je
sub
daa
push
fldenv
imul
jl
dec
addl
xchg
shlb
inc
mov
aaa
sub
repnz
cltd
loopne
daa
mov
test
pusha
xchg
outsb
popa
shll
lret
stc
mov
xlat
cmc
inc
xchg
push
adc
xchg
daa
mov
push
out
mov
sub
loopne
lcall
test
loope
mov
jmp
leave
sub
dec
flds
sbb
lods
ret
jecxz
das
out
push
daa
xchg
mov
mov
cld
stos
xor
cmp
xchg
adc
cld
xor
imul
inc
add
adc
cltd
add
rolb
lahf
inc
sti
sar
add
inc
sbb
add
pop
lea
push
sub
jns
shrb
nop
cmp
fdivs
insl
int3
imul
movsb
aaa
clc
jp
mov
jge
bound
mov
arpl
pop
cmp
popl
gs
negb
sub
stos
cmc
and
int
xchg
push
shlb
stos
and
sbb
into
mov
rcrl
mov
movsb
ret
push
orb
mov
imulb
add
or
and
mov
mov
hlt
fnsave
rcll
jns
jbe
lea
push
imul
test
push
add
mov
push
inc
cmp
int3
adc
mov
push
or
jb
fsubl
fsubr
ja
sub
add
incb
fdivs
push
mov
notl
adc
fidivl
mov
dec
je
scas
mov
add
mov
mov
mov
dec
xor
jle
bound
loope
push
shrb
test
dec
stos
pusha
outsb
pop
mov
push
cmc
outsl
fcoms
xorl
sub
std
adc
xchg
mov
mov
cltd
scas
ficomps
popf
and
xor
sub
xor
testl
cmp
xor
mov
dec
sbb
pop
dec
adc
out
or
insb
nop
push
mov
ds
dec
mov
lahf
push
enter
dec
inc
push
cs
jae
pop
jbe
cmpb
int3
lret
push
jbe
in
pop
push
xchg
mov
jno
jge
adc
sbb
fcmovu
lret
loop
sbb
and
cli
cld
dec
in
or
aad
fldcw
adc
dec
dec
xchg
fcomps
add
andl
aaa
xor
adc
jo
cmp
inc
movsb
psubw
rorl
or
bnd
pusha
ja
imul
fnstcw
jbe
sub
adc
mov
push
stos
mov
push
insl
ds
or
push
cwtl
shlb
fstl
loop
andb
xchg
sbb
test
js
outsb
pop
or
or
ja
subl
insl
mov
xor
fistl
and
lods
iret
ret
sub
pop
jno
push
dec
loop
int3
mov
stos
movsl
sti
mov
push
mov
and
pop
push
mov
lret
cltd
xor
std
cmp
sti
stos
pop
std
mov
lock
cmp
ds
add
bnd
push
out
adcl
dec
xchg
lahf
pop
jle
sub
lret
inc
jmp
sbb
daa
arpl
cmpsl
dec
cli
dec
mov
mov
adc
loop
pop
notl
xchg
xlat
rorl
pop
mov
xlat
scas
xor
jmp
jnp
xor
sahf
shlb
mov
aas
leave
and
inc
jne
fwait
mov
nop
jle
cwtl
xchg
xchg
pop
pop
mov
or
xchg
push
das
test
leave
cmpsl
mov
and
inc
popa
aad
mov
popf
andl
ret
pop
jne
decb
push
loope
ja
jle
imul
in
jns
cmc
adc
jl
shll
and
pop
pop
jmp
dec
out
jle
insb
add
cmp
fnstcw
lds
pop
mov
inc
jl
ss
sbb
stos
lea
sub
mov
aam
sbb
arpl
mov
mov
imul
jmp
inc
xchg
cmc
lahf
or
nop
push
xor
je
cltd
lea
adc
mov
mov
xchg
sub
cmp
pop
test
push
or
mov
cmp
fsubrl
mov
mov
les
movsb
mov
mov
xchg
pop
jl
mov
stc
dec
xor
jne
jne
pop
loop
out
enter
cwtl
xor
jp
and
lahf
and
xor
dec
iret
ljmp
call
lods
aam
jle
addr16
popf
and
lock
dec
push
lea
push
mov
sub
mov
stos
xchg
cld
loope
lret
lods
mov
mov
out
dec
cwtl
test
aaa
es
out
add
jg
jp
mov
pop
inc
inc
scas
sbb
sub
addr16
push
mov
push
ljmp
push
out
adc
imul
mov
jb
sub
push
dec
mov
addr16
lret
repnz
loope
or
or
daa
inc
fnstcw
mov
cmc
fadd
and
xchg
cwtl
sahf
mov
fwait
push
stos
leave
es
adc
int
cmp
mov
lret
mov
aad
imul
je
mov
mov
lcall
xor
push
mov
push
and
stc
or
test
inc
pusha
dec
lock
sahf
cmp
sub
mov
iret
mov
jl
pop
pop
push
jae
sbb
test
mov
lock
ret
shl
sub
rolb
push
jno
and
imul
in
xchg
mov
mov
xor
push
jecxz
inc
repz
pop
push
sarb
sub
sbb
gs
loope
in
add
int3
adc
rcll
imul
ljmp
scas
loop
cmpsb
mov
je
add
out
lcall
sarl
jge
push
jne
add
cmp
or
and
cmp
mov
sbb
xor
push
and
out
mov
mov
dec
xchg
mov
cli
fsubr
shll
test
lcall
jb
sbb
mov
cmp
and
adc
push
cmp
lret
jp
movsb
and
and
jmp
out
and
pop
imul
pop
lret
insl
arpl
adc
ss
out
mov
sub
loopne
mov
jmp
test
push
mov
andb
loope
push
mov
cmp
fcomps
fcoml
mov
dec
cmpb
inc
cmpsl
nop
adc
jb
mov
inc
aas
pop
inc
fwait
iret
scas
mov
arpl
jae
fbstp
inc
push
fisubs
add
mov
sbb
fldcw
push
xchg
push
cmp
inc
ja
enter
pop
repnz
and
mov
leave
xchg
cmp
push
mov
inc
cmp
fcomps
mull
cmp
jmp
pop
cmp
dec
push
pop
filds
movsl
cmp
add
pushf
fsub
xor
add
add
or
int
jo
cli
loope
mov
jl
sbb
sub
out
stc
loop
mov
into
cmp
inc
fdivrp
mov
jp
sbb
divl
add
in
out
jle
fists
lods
stos
pop
enter
mov
xchg
push
fcomps
jno
cmp
add
jb
shl
and
lret
cmc
lret
cmpsl
repnz
xchg
mov
out
stc
lahf
out
push
or
data16
cmpb
scas
fistl
test
sub
jae
clc
cwtl
test
cwtl
adc
inc
add
bound
cmp
sbb
adc
mov
mov
mov
fldl
into
add
add
xchg
jno
xor
push
adc
in
jecxz
es
testl
in
mov
lock
add
push
or
fwait
sbb
decl
push
push
sub
jmp
inc
rcll
xchg
dec
or
fwait
push
mov
cltd
inc
inc
mov
hlt
inc
xchg
fwait
mov
loope
dec
xchg
or
out
adc
clc
mov
test
inc
incl
test
xchg
inc
aaa
out
scas
stc
pop
sbb
inc
insl
repnz
les
idivb
mov
sub
xchg
ret
add
push
jbe
inc
pop
sbb
adc
adc
mov
sahf
or
out
fcomp
mov
rclb
test
push
mov
dec
mov
loopne
sub
ljmp
outsb
sub
add
jns
andl
pop
xor
xor
pusha
ss
lds
dec
cli
jae
gs
xor
jae
dec
adc
ja
push
push
das
insl
mov
pop
cltd
mov
lret
adc
nop
call
hlt
fucomip
je
jne
lcall
jmp
lods
cmp
cmc
scas
push
inc
jnp
mov
ds
je
xor
fidivs
push
pop
lock
popf
shl
fsubrs
jl
mov
mov
mov
ljmp
outsl
stc
sbb
sub
sarb
mov
adc
repz
ds
pusha
adc
icebp
cwtl
dec
push
and
or
mov
or
out
and
out
loop
int3
mov
add
xchg
int3
push
and
addr16
jmp
sub
push
arpl
cmp
and
lock
mov
ss
jg
pop
cmp
dec
ffreep
add
pushf
rorb
pop
loope
sbb
dec
mov
dec
lock
jb
xor
ret
ljmp
add
pop
jp
jns
fdivs
push
lcall
popf
add
xchg
ret
jne
pop
dec
adc
mov
sbb
jo
lcall
cmp
add
fwait
test
push
sub
sti
lcall
or
sub
pop
cltd
inc
lods
push
shr
mov
and
pop
xor
xchg
rorl
in
jecxz
out
push
insl
inc
stos
ja
scas
push
icebp
insb
loop
popa
mov
test
out
incl
mov
mov
xchg
clc
movsb
jmp
es
aaa
mov
dec
sub
mov
pop
or
sbb
mov
mov
leave
mov
pop
and
outsb
je
and
dec
add
or
mov
mov
leave
cmp
test
mov
pop
js
out
rep
int
pop
or
fistl
jmpw
mov
int
sbb
outsl
sti
or
out
cmp
out
xchg
ror
sub
testl
mov
xor
adc
push
mov
and
add
add
sub
dec
push
sub
hlt
fdiv
lcall
cmp
nop
or
push
enter
outsl
enter
scas
dec
sbb
pop
add
leave
sbb
and
ss
add
mov
cmp
and
sbb
inc
jne
mov
repnz
sub
pop
cwtl
dec
dec
cmp
jecxz
mov
pop
jg
add
mov
hlt
mov
dec
dec
movsb
push
dec
call
fs
push
adc
les
mov
cld
inc
jl
cs
cmpsb
xor
mov
lock
fsts
cmc
in
jge
and
cld
sub
xchg
xchg
call
cmp
or
insb
add
ljmp
push
cmc
mov
dec
lods
xor
cmpsb
jae
pop
inc
test
leave
fiadds
das
imul
shlb
inc
rcll
pusha
xchg
inc
pop
or
data16
imul
sub
fwait
mov
and
mov
stos
repnz
test
and
mov
cmp
je
js
out
aaa
mov
jmp
jns
pop
dec
mov
fwait
mov
outsb
cli
lret
xor
push
adc
imul
aam
sbbb
adc
outsb
movsl
stos
pop
loope
cmc
xchg
mov
popa
loop
mov
hlt
cli
cwtl
pushf
cmp
ds
add
stc
int3
mov
and
xlat
int3
in
in
outsl
jne
push
lcall
xor
outsb
mov
and
jb
lea
inc
mov
mov
ss
xor
xor
mov
sub
jl
enter
mov
lock
mov
jp
aaa
dec
push
cmp
push
mov
js
jg
mov
xor
subb
ja
arpl
or
movsl
jo
cmpsl
xor
jne
xchg
cwtl
fdiv
ret
cmp
dec
mov
inc
adc
orb
sarb
sbb
or
shrl
pop
or
inc
and
or
insl
xor
mov
add
push
pop
pop
and
jae
sbb
repnz
in
sbb
fwait
pop
movsb
scas
and
dec
sbb
sahf
data16
dec
test
loopne
repz
lret
in
mov
cltd
stc
addl
andb
push
into
andl
xlat
xchg
push
mov
mov
rcl
cmpsl
and
repnz
sub
jo
sub
sbb
leave
shl
popf
in
jle
and
imul
pushf
punpckldq
fnsave
dec
iret
mov
ret
fidivs
movsl
daa
out
jge
xor
mov
dec
push
nop
mov
ret
cs
clc
mov
mov
imul
dec
movsb
xor
lret
popa
mov
dec
pop
cmp
movsl
test
out
and
aas
movsb
stos
dec
in
adc
push
mov
mov
dec
ficomps
insl
daa
jo
icebp
outsl
fisttpll
lds
jp
sub
xchg
mov
pop
cmp
push
mov
loopne
and
sub
divb
imul
cmpb
add
adc
add
inc
movsb
and
aaa
xor
shrl
dec
pop
cmp
fcomip
jne
sub
add
adc
imul
xchg
pusha
aas
in
fsubs
fbstp
icebp
popf
aam
and
lock
and
dec
mov
sbb
and
dec
cmp
loope
mov
adc
clc
jns
aad
adc
test
mov
pop
hlt
fmull
add
fucom
pop
mov
and
idiv
out
adc
inc
cmp
xchg
pop
call
mov
inc
std
cwtl
inc
xchg
push
fwait
adc
shrl
imul
dec
dec
aad
outsl
adc
bound
xor
inc
test
mov
lret
push
fwait
jb
sub
xlat
cld
aaa
lea
fsubrl
dec
pushf
lods
lods
and
cmpsb
xchg
jp
dec
rorl
sbb
je
inc
push
imul
add
mov
scas
or
loopne
cld
lods
sbbb
dec
cs
and
pushf
pop
xor
xchg
jg
addr16
mov
fistl
adc
fnstcw
sub
hlt
cmp
shl
dec
push
mov
push
mov
mov
cmp
dec
jmp
xor
stc
jl
data16
mov
or
pop
and
cwtl
cmp
jmp
jae
aaa
inc
mov
cmp
sbb
loope
or
add
xor
stos
or
cmpsb
fsubl
push
ljmp
pushl
outsl
mov
cmp
mov
inc
jb
sub
mov
xchg
jmp
imulb
pop
clc
pop
mov
pop
in
lods
jg
inc
sbbl
lea
sbb
mov
int
js
mov
popa
rolb
or
scas
jo
push
aam
add
mov
mov
dec
cmp
movsb
cmc
stos
or
pop
and
mov
je
aam
lock
push
xor
arpl
jne
mov
sub
cwtl
sbb
cmp
sub
in
fnstsw
ja
sub
and
pop
xchg
sbb
outsb
cmp
out
xor
xor
or
jae
jmp
movsl
xchg
fwait
xlat
xor
push
fs
xchg
nop
xchg
outsb
xor
mov
dec
xchg
push
inc
mov
ret
scas
iret
cmp
dec
gs
dec
add
leave
into
call
pusha
dec
mov
mov
fbld
cmp
sbb
enter
popa
sub
sbb
cmpsl
add
adc
fwait
cmp
cmpl
pop
shlb
cmp
pop
add
jl
popa
mov
mov
inc
cmp
test
mov
push
adc
jge
push
cmp
pop
clc
xor
mov
xchg
add
les
mov
cmp
loope
repnz
or
sbb
dec
push
dec
mov
test
subl
movsl
xchg
int3
call
mov
dec
lds
movsl
lret
dec
jp
mov
or
and
aam
sarl
cs
xor
xchg
push
pop
sbb
push
arpl
add
bound
addw
mov
pop
flds
jge
aaa
imul
daa
repnz
das
popf
mov
cmc
arpl
jae
push
leave
arpl
adc
leave
popa
jp
lock
dec
das
aad
xor
push
icebp
arpl
out
pop
cli
jno
fisubrs
shlb
imul
push
xor
clc
xor
add
or
mov
orb
scas
dec
addr16
mov
or
movsb
lods
jae
stc
jp
lods
mov
jecxz
imul
repz
pop
pushf
aad
push
cld
sbb
sub
shll
aas
cmp
sbb
lea
mov
stos
cltd
shlb
hlt
imul
xchg
jb
xchg
push
je
lea
add
push
jo
mov
xorl
adc
scas
inc
mov
lret
push
xchg
sahf
inc
xchg
mov
mov
xor
es
dec
rcr
lea
out
xor
inc
cmp
sub
iret
bound
mov
xchg
sub
cmpsb
leave
cmp
lds
shll
mov
mov
pop
mov
ss
inc
js
test
or
xor
push
jno
xor
or
pop
jge
ljmp
add
pop
or
jne
inc
fcompl
xchg
pop
adc
in
jecxz
cli
add
sbb
lock
sbb
add
xchg
shr
das
xchg
movsl
pop
test
mov
dec
pop
pop
inc
fbstp
daa
popf
loopne
lret
scas
pop
cmp
or
push
adc
xchg
cmp
jp
fisubrs
xchg
or
pop
mul
jmp
xor
sub
lahf
cmp
lds
mov
enter
inc
jbe
add
xor
and
cli
dec
fs
xchg
fmuls
add
inc
popf
test
out
test
enter
dec
fidivrs
bound
xchg
dec
sahf
xchg
ljmp
test
sub
ss
xor
and
inc
cmpsb
cmp
je
dec
fnclex
xor
mov
iret
add
add
pop
xchg
stos
sub
cmp
cmp
loopne
adc
outsl
test
int
ljmp
and
xor
add
push
out
mov
cmp
sub
pop
insb
sti
push
insl
pop
mov
out
add
test
mov
std
outsb
jl
rcll
cmp
ja
inc
jnp
ds
jmp
dec
dec
and
push
dec
nop
imul
xchg
out
push
mov
cmp
rolb
adc
insb
popf
out
push
scas
outsl
test
test
leave
popa
cmp
xchg
mov
mov
daa
sub
inc
jg
cmp
mov
mov
sahf
add
xor
mov
fiaddl
insl
jns
sub
mov
jns
or
sbb
jp
test
int
add
gs
sub
int
js
or
add
test
scas
pusha
adc
dec
jl
sbb
aam
inc
sahf
push
jnp
insl
outsb
in
mov
push
inc
cwtl
lahf
xor
inc
xor
sub
imul
push
push
push
int
jnp
jecxz
scas
mov
fiaddl
in
adcb
mov
xchg
into
sarl
in
mov
pop
bound
sahf
inc
sbb
sti
test
adc
out
mov
dec
jle
or
mov
push
popf
iret
neg
ret
and
pop
fisttps
ja
xor
clc
or
mov
pop
leave
decl
cld
into
cmp
adc
mov
mov
outsl
loopne
xchg
add
in
add
js
push
push
pop
jnp
in
cltd
fstl
mov
je
push
fwait
int
stos
pop
jnp
pop
fsubrs
in
pushl
cmpsl
imul
mov
xor
jge
xor
in
cmp
call
adc
notl
lahf
test
imul
das
xlat
sarl
fs
adc
push
enter
mov
pop
dec
inc
das
out
cmp
ret
call
out
sbb
mov
out
ljmp
mov
testl
fs
mov
dec
lds
mov
add
test
imul
fwait
lcall
addr16
pop
and
insl
pop
xorb
aad
scas
scas
inc
cwtl
test
xchg
orl
out
jb
les
mov
xor
rolb
loope
shll
dec
loopne
flds
mov
sub
psubsw
mov
es
cmpsl
lods
mov
cltd
xchg
jnp
add
ficompl
pop
sbb
push
scas
cmp
cmp
js
mov
sub
adc
lods
lcall
ror
mov
ret
xchg
lcall
sti
jl
popa
xlat
lods
adc
sarb
pop
xchg
loop
pop
std
cli
xor
scas
addb
push
mov
shl
mov
sub
xchg
test
cs
repnz
push
xlat
mov
or
ret
inc
sarl
out
adc
loope
hlt
cmpsl
push
jg
icebp
mov
popa
leave
sbb
fcomi
jle
scas
cmpsb
mov
lea
repnz
iret
mov
sbb
add
push
jae
or
or
aam
or
adc
int3
adc
lcall
jnp
or
clc
jl
loope
lahf
or
sub
mov
fistpll
stos
imul
loope
jno
xchg
in
mov
test
arpl
add
add
repz
stos
aad
mov
jmp
call
rcrb
in
mov
push
cwtl
fwait
pop
std
adc
pop
ljmp
pop
test
ja
fwait
push
mov
sub
sbb
sub
dec
cmc
pop
mov
adc
pushf
mov
ja
lret
push
sbb
xchg
imul
jbe
pushf
inc
jno
cwtl
dec
mov
loope
push
lret
jae
mov
pop
dec
adc
jle
sbb
mov
xchg
lahf
movsl
sahf
in
fcoms
mov
cmp
sub
rcrb
jnp
jns
loope
xchg
je
mov
mov
and
xor
bound
xchg
mov
pop
imul
inc
pop
cmp
pop
and
and
jno
adc
push
stos
cwtl
push
and
jle
adc
and
push
mov
xorb
into
mull
mov
jmp
aaa
cld
inc
mov
mov
or
loope
mov
stc
in
jp
mov
mov
sub
filds
pop
hlt
and
int
test
sbb
pop
fxch
sub
lea
xchg
cmc
repnz
outsl
add
sbb
lahf
mov
or
push
inc
rol
pop
jmp
pop
xchg
cmp
xchg
jmp
add
cwtl
or
fnsave
mov
jecxz
inc
dec
jecxz
and
jl
mov
data16
xchg
xor
sub
xchg
fidivl
fwait
add
xchg
jge
lods
jnp
xor
add
xchg
data16
jg
add
rep
stos
cmpb
psrlq
inc
mov
je
push
add
jmp
es
xchg
jnp
orl
test
adc
in
ds
fsubl
adc
lcall
out
or
enter
jns
sub
or
sbb
dec
adc
adc
pop
jmp
fs
ja
dec
sbb
push
leave
loope
rcl
fcmovnu
push
ret
jne
arpl
xor
xor
sbb
adc
or
adc
inc
pop
xor
cmp
add
adc
subb
mov
xlat
push
insb
leave
nop
pop
dec
mov
cld
daa
jmp
fidivl
mov
adcl
jmp
xchg
cmp
mov
idivb
lret
sbbb
cmp
sbb
subb
test
cmp
xchg
sbb
subl
clc
aam
js
sbb
mov
rcrb
popf
popf
adc
push
mov
daa
nop
push
scas
lods
xor
into
push
or
xchg
and
out
mov
mov
mulb
sub
add
cmp
pusha
mov
lret
mov
idivl
xchg
sarb
fcoml
xor
fs
fisttpll
in
and
push
data16
pop
inc
mov
push
pop
mov
push
loop
into
es
addr16
jmp
sub
iretw
nop
adc
dec
popa
pop
movsb
xchg
fldl
sti
xchg
iret
outsb
ds
jo
pop
push
adc
out
add
jb
or
jl
daa
loopne
jnp
sub
lret
dec
lods
jg
sarl
sbb
add
add
pop
data16
jg
movsl
cld
popf
rcll
fs
nop
and
ror
jo
aas
push
mov
inc
add
add
mov
cld
xchg
or
ret
into
cmpsl
fs
lods
add
int3
or
and
roll
mov
rorb
addr16
or
or
leave
jp
or
mov
dec
jns
cwtl
pop
dec
daa
xlat
lea
fsts
push
push
sbb
jmp
dec
movsb
imul
int3
aad
test
inc
cmp
fstpl
gs
mov
add
orl
xchg
jmp
outsl
push
adc
daa
into
lock
add
ljmp
pop
lret
les
push
xor
andl
sub
sub
adcl
xor
addl
mov
or
mov
mov
subl
add
imul
mov
mov
andl
mov
inc
mov
cmpl
jne
pushl
call
cmpl
jb
andl
mov
inc
mov
cmpl
jne
push
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
add
mov
movl
add
or
addl
mov
mov
mov
andl
add
xorl
xor
mov
add
mov
adc
mov
orl
add
orl
and
xor
mov
movl
cmpl
je
cmpl
jne
push
push
pushl
push
call
mov
dec
mov
jmp
add
mov
sbb
mov
lea
mov
inc
mov
movzbl
sbb
mov
sub
add
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
push
call
jmp
or
mov
movl
cmpl
je
cmpl
jne
push
pushl
push
push
call
mov
dec
mov
jmp
addl
mov
xorl
xor
movl
add
movl
jne
movl
jmp
xor
add
sbb
mov
movl
cmpl
je
cmpl
jne
call
xor
add
dec
mov
jmp
or
sub
xor
mov
mov
sub
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
pushl
call
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
add
imul
mov
mov
mov
add
or
mov
mov
mov
add
jmp
xchg
mov
aad
mov
mov
xor
ja
jo
mov
inc
pop
jl
cmp
cmp
or
loop
and
inc
inc
jle
jmp
shlb
dec
sub
mov
fs
fsubr
fisubs
into
lret
mov
xor
xchg
sbb
ljmp
fs
jo
push
test
inc
stc
sbb
xchg
lds
mov
inc
sub
lret
in
lock
enter
sub
iret
jp
sbb
pop
loope
js
enter
or
out
fwait
xor
in
jmp
push
jmp
inc
xor
insl
lock
adc
ret
xlat
cmp
in
jl
push
xor
jne
mov
gs
test
mov
out
add
or
sbb
cld
ret
mov
jle
sbb
sbb
aad
loop
fistpl
dec
lret
fwait
adc
das
push
fidivrs
fs
pop
jl
mov
sub
mov
ret
or
les
cmp
sub
cmp
and
sbb
and
pop
inc
icebp
jo
add
ljmp
mov
sbb
and
lods
mov
shll
pushf
pop
jo
js
cwtl
ja
sub
daa
bound
mov
pop
nop
or
cwtl
xorl
inc
mov
lods
in
jge
cmp
push
xchg
or
test
in
xor
stos
pushf
adc
mov
mov
cmp
sub
adc
test
jge
lock
jge
int
xchg
out
sub
xchg
mov
ljmp
out
push
movsl
pop
fwait
ja
mov
push
int3
call
or
jl
pop
lcall
cld
cwtl
int
loop
mov
sbb
repz
loop
cmp
ss
push
sub
out
out
mov
push
int3
hlt
outsb
cmpsb
xor
jne
iret
arpl
into
daa
xchg
cmp
push
inc
and
pop
adc
mov
sbb
pop
outsb
ds
ja
jl
add
in
mov
jns
outsl
add
negl
dec
pop
ret
push
cli
add
inc
mov
fadds
and
inc
mov
sbb
jmp
enter
jle
xor
xchg
or
pop
imul
jb
div
mov
add
push
aam
mov
sub
xor
jne
mov
subb
jns
bound
cwtl
mov
pop
mov
sbb
mov
in
pop
lds
inc
sbb
xor
daa
mov
push
xor
lret
repz
cmpsl
mov
lods
and
cwtl
shlb
pop
xor
clc
dec
jg
mov
cwtl
adc
lods
dec
scas
and
cmpsl
call
pop
mov
pop
mov
xchg
cs
sub
addl
jmp
or
cli
pop
xchg
imul
jg
shll
daa
inc
cwtl
cmp
sbb
mov
sbb
popa
add
stos
adc
mov
mov
and
mov
out
jb
fistpll
fisubrl
lahf
cmp
and
adcl
ja
xchg
mov
and
push
daa
sub
mov
jae
or
sbb
mov
fiadds
jecxz
shll
les
mov
movsl
xor
inc
jecxz
pop
stos
cmp
std
mov
loopne
enter
nopl
test
popa
enter
dec
fstl
or
xor
dec
jnp
jo
sbbl
sub
inc
cmp
and
jmp
pop
and
xchg
mov
aas
jns
ljmp
mov
cmp
in
fwait
push
mov
xorb
mov
or
sbb
jl
je
push
mov
repz
xchg
aaa
mov
int
sub
pop
loop
xor
in
negb
jo
jns
aad
ljmp
out
out
mov
jmp
test
lods
ja
sub
xchg
pop
push
mov
arpl
inc
jns
inc
xchg
add
rcrl
dec
push
pop
dec
dec
lea
sbb
dec
imul
dec
out
cmp
push
adcl
sti
xchg
jg
cld
roll
push
fdivrs
jp
cmc
popf
jbe
mov
jne
fst
out
cli
pop
dec
mov
pusha
outsl
mov
daa
lcall
pusha
int
add
add
lret
movsl
push
dec
pop
mov
aaa
loopne
cmp
mov
xorl
mov
dec
sbb
xlat
int
sub
aad
ret
pop
scas
loope
in
push
fdivr
push
sbb
movsl
mov
lahf
mov
inc
push
movsl
or
mov
fdiv
call
rorl
lds
cmp
inc
jle
push
loop
push
jmp
pop
cmp
dec
rclb
add
mov
pop
in
mov
subb
jne
sar
xchg
inc
jbe
mov
movsl
hlt
inc
shlb
imul
cmpb
pop
ss
jmp
out
insl
cltd
js
cmpsb
sub
mov
add
cwtl
lods
dec
sub
jb
jbe
imul
lds
xor
pop
adcb
inc
pop
stc
int
sarl
or
and
lods
jbe
cmp
adc
hlt
cmpsl
xchg
fnsetpm(287
mov
aam
sub
push
cmp
lods
jae
push
sub
adc
stos
stos
test
xorl
cmp
lock
jo
jae
push
mov
ss
aas
mov
pop
mov
in
lods
sbb
cltd
mov
jmp
dec
mov
cmpsb
sbb
mov
push
insb
loop
lret
fimull
ja
sub
pop
in
loope
lods
push
and
xchg
mov
les
rorb
insl
jg
cmp
or
cmc
sub
mov
test
test
inc
cmp
clc
cmp
nop
inc
jg
insb
and
ret
and
insl
or
xlat
push
dec
jae
and
enter
fmuls
sbb
xlat
cmpsb
or
mov
fmulp
cmpsb
adc
mov
mov
rorb
xor
roll
dec
jge
mov
xchg
outsb
push
cs
inc
jbe
pop
cmp
add
xchg
jo
lock
lods
pusha
sub
push
mov
jns
int3
fsubrp
cmpsb
lcall
in
daa
dec
xor
iret
fwait
cwtl
ja
stos
mov
fs
lods
cltd
jge
push
jecxz
cmp
fstps
sar
int
iret
insl
mov
addr16
outsl
push
adc
xchg
fdivp
cmp
cmp
stc
arpl
aam
xor
push
mov
repnz
add
push
xchg
pop
sub
lret
jl
jae
lcall
ror
jno
arpl
inc
and
shll
push
out
enter
je
popf
cmp
test
clc
lods
lock
fwait
insl
je
test
dec
jle
pop
es
ror
xor
and
sub
fistps
ss
dec
sahf
dec
aad
push
inc
inc
je
dec
push
ret
adc
fdivrl
and
in
call
lea
clc
push
mov
mov
or
dec
xchg
and
mov
gs
sbb
pop
lahf
test
jno
add
enter
es
pop
outsl
mov
pop
adcb
xor
add
jp
pop
jmp
xchg
dec
and
mov
scas
and
cmp
xchg
in
inc
repz
adc
jne
push
mov
pop
scas
rcll
fistpl
mov
sub
rcl
out
adc
nop
int3
movsl
in
push
mov
ds
cmpsl
cmp
cwtl
sbb
lods
push
xor
add
int3
stos
xchg
aaa
repz
test
jg
lods
cli
shlb
inc
std
movl
fiaddl
clc
sub
loope
add
xchg
dec
stc
xor
jmp
sbb
popa
subb
das
movsl
stos
mul
mov
insb
popf
push
stos
jo
jl
jg
pop
xor
jmp
adc
push
lods
cmpb
pop
cmp
dec
popf
inc
enter
dec
jno
mov
addr16
mov
push
xchg
dec
lods
xor
adc
and
mov
push
out
cmp
inc
mov
jae
divb
push
ds
push
xor
popf
stos
les
in
xchg
leave
mov
mov
pushl
jl
clc
fldl
repz
enter
mov
mov
jnp
cmp
jae
cwtl
lcall
in
ret
outsb
enter
jp
mov
xorb
ja
mov
int
cmp
scas
mov
in
mov
ja
push
repz
xlat
cltd
mov
jmp
mov
dec
xchg
test
lret
jl
pop
xchg
jg
xchg
sti
stos
xor
addr16
lock
out
mov
movsl
out
ljmp
imul
dec
lret
jge
push
ljmp
cld
sbb
je
or
test
mov
shrb
mov
cmpsl
jle
and
inc
push
and
mov
sub
shl
mov
mov
divl
aam
rcll
sbb
loope
shlb
enter
sub
cmpsl
jg
sub
push
add
mov
in
pushl
xchg
inc
sub
xor
test
out
mov
arpl
lds
adc
push
jl
test
sbbb
mov
divl
push
iret
add
js
fs
sbb
add
cmp
cld
mov
cwtl
mov
movsb
inc
or
or
sbb
movl
loop
xor
add
ficompl
mov
pop
xor
mov
push
popf
dec
int3
xor
rorl
lds
pop
cli
cltd
ret
xchg
andl
sbb
in
and
outsl
in
mov
je
jae
ljmp
pop
dec
xor
aam
stc
sub
bound
sub
mov
ljmp
aad
dec
cmpsb
xor
stos
mov
leave
ret
div
rorb
jns
int3
sahf
mov
xchg
aas
pop
ds
and
xchg
cmp
mov
fcomp
cli
loop
push
loop
fbstp
pop
jbe
sbb
push
in
rorl
push
push
inc
lret
sub
into
lock
and
pop
xchg
out
ret
pop
cmc
jno
outsl
ffree
xor
fcomps
cmp
aad
arpl
xchg
insl
inc
and
jg
nop
mov
or
leave
add
sbb
sub
jmp
cwtl
dec
pop
cmpsl
jp
mov
push
xchg
rcl
ljmp
push
pop
adc
xor
rcrb
push
jecxz
insl
mov
mov
jp
fsubr
rcll
ds
and
jecxz
sbb
sub
mov
mov
rclb
xchg
pop
sbb
lret
lcall
ficomps
std
enter
xchg
or
dec
or
std
mov
in
cmp
aam
icebp
push
stos
das
mov
push
js
out
insl
cmp
mov
or
and
cmpsb
and
loopne
dec
sub
xchg
xor
loope
inc
xor
jl
je
pushf
jle
pop
sub
sbb
mov
pop
aad
cli
outsb
jnp
data16
mov
xchg
mov
mov
mov
rcll
adc
xchg
and
push
daa
push
imul
cmc
mov
push
daa
adc
scas
adc
in
and
xlat
outsb
fidivs
jo
mov
movsl
cmp
sahf
faddl
cmpsl
push
jmp
pop
add
mov
leave
add
xor
cmp
fsubrl
push
xor
mov
leave
roll
adc
mov
mov
mov
mov
or
sbb
mov
dec
mov
dec
ficoml
and
subb
cli
lods
in
mov
dec
das
add
or
outsl
mov
xchg
int3
adc
adc
mov
jno
inc
mov
mov
mov
fs
stos
mov
sti
cwtl
hlt
dec
jb
xchg
pop
dec
pop
xchg
fs
push
movsb
aas
decl
daa
mov
stos
das
les
inc
mov
pop
aaa
imul
dec
add
jnp
arpl
int
je
ror
push
fists
push
les
in
mov
or
mov
xchg
aas
mov
lahf
xor
fbstp
jo
and
mov
cld
loop
xor
test
fidivs
movsb
mov
mov
in
adc
sti
ds
std
clc
data16
jbe
pop
pop
clc
push
xchg
fdiv
scas
addr16
sub
push
mov
popf
cltd
add
sbb
lret
mov
adc
cmp
sub
pusha
dec
out
test
fwait
push
mov
sub
movsl
sahf
imul
es
jno
pop
cmc
push
out
lret
xlat
pop
sbb
bnd
xor
or
pop
inc
fbstp
fs
pushf
jne
mov
pusha
dec
js
jae
dec
adc
shll
mov
lret
jmp
mov
mov
pop
lahf
inc
cmpsb
jecxz
cltd
cmp
fcomi
inc
in
dec
and
lcall
mov
inc
and
rcrb
pusha
stos
and
dec
pop
clc
xor
fdivrl
push
lea
mov
out
fcmovnb
loope
lret
sar
mov
push
imul
gs
in
mov
inc
insb
insl
stos
xchg
lret
nop
push
jle
jg
call
outsb
lea
sub
mov
mov
dec
cwtl
xor
pop
mov
hlt
adc
and
sbb
mov
pop
mov
out
sbb
enter
cld
movsl
test
movsb
pushf
adc
xchg
mov
sub
sbb
jl
std
mov
cmp
jno
xchg
and
add
mov
aam
mov
adc
lret
mov
icebp
dec
mov
push
pushf
and
daa
sahf
dec
lods
pop
rclb
sbb
mov
jne
outsb
push
mov
pop
fwait
push
xor
mov
aam
sbb
sub
inc
or
jle
nop
jge
movsb
aam
sbb
dec
add
sbb
sbb
adc
pop
xor
ds
ljmp
mov
and
in
dec
sbb
pop
adc
xor
lret
ret
in
movsl
sub
mov
add
jge
and
push
fdivrl
xchg
pop
pop
stc
movsb
sub
es
pop
stos
jecxz
popf
mov
push
lea
pop
and
sbb
mov
add
pop
aaa
mov
mov
pop
sahf
in
pop
jmp
addr16
xchg
ljmp
shrl
mov
rolb
call
and
pushf
shll
dec
mov
call
sbb
in
pusha
frstor
test
pop
das
fldenv
jp
mov
sub
xchg
mov
lods
es
mov
sahf
sub
fdivrs
cli
daa
stos
loope
insb
cld
jmp
push
shrb
xchg
dec
cmp
dec
sti
add
xchg
lahf
cmp
sarl
daa
pop
xchg
and
adc
xchg
mov
pop
sub
dec
into
bound
lret
xchg
bound
jne
mov
int3
cmp
dec
dec
pusha
sub
push
cmpsb
lret
sarb
pop
lods
add
pop
sub
pushf
add
scas
rorl
mov
fcomps
mov
mov
daa
pop
push
inc
pop
aas
das
iret
add
sub
sbb
or
xor
fdivr
cmp
loop
jecxz
cmp
lahf
fbld
adc
flds
js
jecxz
xchg
sub
inc
dec
and
and
xchg
and
out
gs
sub
aad
insb
ret
cmp
fmul
inc
outsl
sub
pushf
lock
push
add
lods
lods
inc
or
lret
fcmovbe
div
mov
adc
sub
push
shlb
mov
push
sbb
fiadds
mov
mov
pop
sub
mov
push
aad
jle
add
enter
loope
xchg
xor
and
loop
ja
aad
pusha
scas
pop
lods
or
mov
nop
dec
push
pop
sub
mov
inc
dec
fists
pop
addr16
mov
cmp
loope
sub
cli
push
stos
str
into
mov
push
push
sub
mov
rcrl
dec
cmp
outsl
and
adc
sti
and
jne
xor
scas
push
decb
ret
clc
arpl
loop
insl
addr16
jns
sbb
mov
sub
orb
rorb
inc
lahf
inc
mov
push
jno
sub
xor
arpl
jno
fs
inc
daa
push
test
xlat
dec
add
std
leave
push
dec
ss
loop
push
jbe
push
and
inc
push
xchg
fbld
mov
pop
inc
xor
loope
data16
mov
or
push
icebp
or
in
cmp
mov
mov
incb
cmp
out
xor
movsb
movsl
fcmove
sbb
subb
cld
mov
lahf
jg
add
pop
push
push
sbb
fbld
xchg
xor
sbb
inc
mov
out
int
icebp
and
sub
fists
ja
imul
inc
inc
ret
mov
in
fcmovne
out
cmpsb
cmp
push
mov
xchg
xchg
popa
add
das
in
loope
ret
out
sub
push
pusha
cmpsl
movsl
xorb
mov
dec
scas
bound
ficompl
fdivp
pop
lcall
xchg
imul
movsl
or
dec
push
mov
ja
lock
aad
sbb
inc
popf
mov
aad
sbb
dec
xchg
lock
adc
je
sti
fs
mov
add
jl
movsb
nop
jecxz
hlt
mov
jg
rcr
jge
sub
iret
push
mov
outsb
pushl
ss
addr16
mov
repz
cmp
fs
clc
pushf
adc
in
pop
jmp
dec
mov
xchg
cli
add
adc
mov
imulb
imul
mov
xchg
pop
xchg
xchg
cmp
mov
pop
cmpsl
sub
leave
xchg
mov
push
push
cld
aas
xchg
push
push
inc
cmp
jnp
inc
aas
mov
sbb
stos
out
adc
mov
fisubl
fidivrl
push
mov
stos
stos
into
ds
inc
lret
xlat
das
add
das
inc
call
cmp
lods
mov
push
stc
sub
sbb
fs
dec
dec
sub
sar
add
in
inc
aas
dec
sbbl
fs
int
sub
cmp
ret
lds
test
ret
dec
mov
daa
sub
jns
mov
mov
cltd
adc
jno
pushf
int
inc
push
test
repnz
aad
shrb
ret
faddp
cwtl
ds
dec
mov
insl
jnp
mov
add
adc
repz
mov
ljmp
inc
mov
jno
mov
jmp
in
das
hlt
adc
jne
les
add
add
sbb
stos
push
cmp
xlat
xor
fldenv
in
int3
mov
pop
cmpsl
shrl
cmpb
clc
imul
ja
sub
mov
lds
aaa
xchg
movsl
dec
cld
mov
js
aam
adc
inc
movsl
int
xchg
mov
int3
mov
jae
icebp
pop
and
mov
add
cwtl
jnp
pop
jle
ss
divl
cmp
jno
add
pop
push
push
loope
aad
inc
add
sbb
aam
imul
xor
add
pop
add
scas
rolw
push
or
ficomps
daa
and
clc
sbb
or
sbb
adc
xor
jg
xchg
out
mov
fsubs
mov
popa
aad
or
jmp
pop
out
mov
ror
mov
jge
cld
lea
push
jbe
dec
imul
aas
roll
xor
jmp
pop
mov
pusha
mov
fmulp
push
js
es
dec
daa
call
sbb
mov
movsb
xor
cmpsb
sbb
jg
rolb
mov
jb
mov
pop
lret
fmull
ret
es
test
pop
aas
fsubl
pop
addr16
out
std
loopne
push
sub
scas
sub
insl
adc
aaa
jmp
sbb
jo
xchg
lds
xchg
cld
pop
fwait
movsb
mov
jl
mov
cmpsb
popa
sub
arpl
jmp
mov
cmpsb
cmp
in
adc
mov
or
cmpsb
jbe,pt
xlat
outsb
pop
out
stc
mov
mov
stc
leave
sub
mov
mov
shlb
popf
aas
adc
cli
lea
push
adc
mov
shll
shl
push
test
inc
sub
dec
push
xor
jb
ret
mov
pop
lea
fisttpl
dec
nop
xchg
aam
test
movsl
gs
and
daa
sub
cmp
repnz
xchg
std
cmp
loop
push
sub
jl
inc
jnp
dec
sbb
xchg
arpl
subb
test
lock
dec
push
sahf
es
mov
jae
inc
repz
divl
mov
adc
inc
xor
mov
push
pop
push
pop
cli
testl
pop
or
mov
shll
push
cwtl
jge
fidivs
imul
lods
pop
aas
cmp
adc
mov
je
flds
pusha
scas
lock
adc
push
pop
out
mov
insl
sahf
test
pop
sub
adc
bound
pop
ss
push
cmpsl
repz
sub
lods
mov
xor
mov
lret
cmpsb
movsb
shr
icebp
pop
push
mov
jnp
jns
push
es
loop
xchg
stos
jecxz
mov
test
jp
dec
or
js
ret
stos
mov
cmp
jle
lods
inc
mov
mov
mov
ficoml
cwtl
mov
pop
inc
aaa
insl
je
movsl
idivl
in
sbb
lods
jg
lods
mov
mov
aaa
dec
mov
push
mov
es
push
mov
push
sbb
sbb
shll
mov
push
sbb
adc
xchg
dec
icebp
pop
jge
imul
fsts
addl
out
xorl
mov
dec
cs
mov
xor
mov
popf
dec
popa
leave
icebp
sbb
insl
mov
repz
hlt
bound
sub
fwait
lea
add
sbb
cmp
int3
jae
push
cmp
jmp
add
popf
mov
add
xchg
cmpb
xchg
mov
mov
or
jno
inc
dec
dec
pop
outsb
fidivrs
cmpsb
sub
push
and
pop
mov
ja
mov
sbb
xor
aas
xlat
pushf
sbb
jg
cmc
inc
lcall
stos
mov
jns
xchg
insl
das
test
pop
pusha
xchg
and
pop
and
insb
add
adc
mov
out
adc
fwait
dec
fsts
jp
out
scas
adc
mov
into
shl
fidivs
add
sub
inc
sbb
jg
sbb
enter
sbb
mov
cmpsb
rorb
insl
cmp
mov
inc
sbbl
xchg
je
jp
call
into
pop
popa
mov
mov
mov
fistpl
adc
gs
arpl
pop
icebp
or
lock
xchg
sbb
or
mov
subb
pop
ss
push
and
add
fmul
mov
in
xor
mov
popa
jb
xor
mov
push
mov
push
add
sub
mov
in
push
and
sub
inc
repnz
sub
push
cli
mov
adc
push
cltd
repnz
adc
push
push
inc
sub
and
xchg
mov
testb
cs
push
lods
pop
dec
mov
xchg
add
dec
test
jecxz
sahf
sub
das
int3
imul
pop
xor
popf
arpl
in
push
les
sub
fwait
lock
jo
nop
add
and
push
pop
fimull
clc
stos
bound
scas
pusha
cld
cmp
adc
sbb
push
iret
dec
ret
or
dec
dec
or
aad
scas
call
sbb
repnz
sub
mov
stos
inc
mov
xchg
jne
std
push
dec
push
scas
add
enterw
xchg
adc
jmp
int3
ror
add
outsb
xor
adcb
inc
sti
mov
nop
fwait
inc
inc
jbe
add
outsb
push
jno
lret
js
xchg
pop
mov
or
repnz
aam
int
jge
int3
jmp
or
cmp
test
vmsave
stc
sbb
xor
faddl
cmp
sti
push
push
insb
pop
popf
shrb
ss
pop
jge
call
mov
arpl
jae
mov
das
inc
insb
dec
in
cld
add
push
cli
sbb
repz
repz
and
mov
cmp
aaa
lret
jmp
aam
push
outsl
sbbb
js
cmpsb
adc
movl
pop
xor
imul
and
jns
add
and
adc
fwait
loop
xchg
adc
jo
mov
jns
jae
and
sbb
lock
addb
and
push
or
mov
mov
push
or
cld
popa
mov
adc
ljmp
movsb
or
cmpsl
aas
pop
testl
aaa
mov
mov
rcrl
xor
sbb
repz
or
adc
push
pusha
scas
inc
xchg
cmp
inc
dec
mov
mov
stc
xchg
inc
mov
cmp
sbb
js
lods
loop
xor
nop
jmp
pop
adc
add
xchg
insl
fnstcw
adc
inc
or
pop
add
jbe
movsl
xchg
mov
outsl
std
ss
shll
lock
xchg
aam
andl
push
push
cmpsl
fisttpl
in
fimuls
test
daa
push
xchg
outsl
addr16
mov
ficoml
mov
das
cmp
adc
mov
lea
call
lods
push
jle
xchg
and
inc
test
or
push
mov
xor
xchg
inc
cwtl
xchg
xlat
xor
int3
mov
xchg
jnp
imul
cmc
pop
imul
push
add
lcall
push
xchg
or
sbb
inc
fsubl
push
inc
mov
aas
addb
stc
xchg
cmp
xor
push
dec
pop
or
adc
into
sar
shll
out
cwtl
or
xchg
stos
cmp
jmp
inc
mov
inc
popa
jge
xor
dec
xchg
ret
fcmovnb
les
cld
icebp
in
int3
cmp
push
mov
pop
mov
mov
xlat
mov
and
adc
add
jae
je
cli
ret
xor
jae
loopne
mov
into
cwtl
dec
fildl
push
cmp
cltd
pusha
idivl
cmp
aam
loope
jg
lods
pop
inc
movsl
xchg
add
popa
jno
fcomi
or
push
shl
out
and
out
out
sbb
jp
mov
mov
cmp
mov
leave
imul
sub
sbb
fiaddl
outsb
dec
movsl
loope
ret
ret
lds
lret
popl
cmc
ljmp
and
mov
js
sbb
fildll
cmp
sub
hlt
in
adc
fnstsw
xchg
or
sbb
rolb
and
xchg
test
dec
fsts
loop
insl
mov
sbb
lcall
xchg
cmc
ret
mov
push
mov
or
jg
hlt
push
mov
adc
shlb
push
dec
mov
jno
ljmp
xchg
cmc
leave
cs
rcr
add
and
rcr
xchg
or
int
loop
adc
cmp
insb
in
add
adc
aad
stc
mov
jl
mov
sbb
test
inc
pop
jle
je
mov
das
inc
stos
pushf
repnz
cmp
pop
inc
cltd
dec
mov
adc
cmpsl
dec
in
cmp
gs
rolb
out
es
mov
inc
push
mov
and
inc
fisttpl
xchg
rcrb
xchg
add
sub
mov
xchg
call
mov
fsubrs
push
mov
xor
inc
jecxz
cmp
enter
cmp
sbb
sub
movsb
pop
push
sub
dec
jb
adc
add
inc
aam
mov
or
and
sbb
jns
lods
dec
pop
popa
mov
push
push
mov
outsl
mov
je
xor
push
daa
fmuls
rolb
add
jp
test
fcompl
inc
aam
dec
or
call
add
mov
mov
inc
mov
ljmpw
clc
fisubrl
or
pop
add
cltd
aam
or
pop
sbb
loop
mov
ret
mov
cli
call
adc
out
lea
pushf
ret
stos
sub
repz
push
into
dec
stos
cwtl
lahf
frstor
pop
jl
shll
ja
jmp
ja
sahf
sub
popa
sbb
cmpsl
jbe
daa
les
add
pop
in
jns
shr
in
or
fisttpll
mov
mov
shlb
push
adc
ret
es
cmpsb
dec
mov
fwait
mov
test
pop
mov
rcr
lahf
ljmp
mov
ret
fwait
push
out
or
push
enter
mov
inc
add
push
cwtd
sbb
movsb
mov
cmp
lret
xchg
sub
mov
repz
lret
cmp
jp
push
orb
imul
fs
and
pop
xchg
cs
pavgw
or
scas
xchg
icebp
cmp
add
pop
adc
xor
add
sbb
fimuls
xor
mov
add
mov
cltd
or
fimull
bound
mov
sbb
out
or
push
scas
cmc
jecxz
imull
mov
addl
mov
test
ficompl
push
enter
dec
xchg
and
sub
lahf
repz
or
leave
lahf
cmp
ss
jcxz
mov
aad
dec
push
sbb
mov
jnp
xorb
cmp
mov
imul
sub
adc
sbbb
icebp
imul
insl
jecxz
mov
or
push
idivb
idivb
fnstenv
and
mov
inc
mov
outsl
or
pushf
mov
pop
loope
test
sbb
icebp
shlb
cmp
jg
inc
cltd
out
and
mov
neg
pusha
icebp
push
cmp
sbb
mov
xor
mov
mov
mov
add
and
mov
mov
mov
lea
mov
mov
mov
sub
add
mov
mov
xor
add
jmp
inc
mov
ss
test
and
clc
push
jge
inc
pop
jl
jbe
dec
mov
dec
cmc
in
sahf
stc
ficomps
rcrb
divl
loope
inc
cmp
mov
mov
jle
jge
mov
jns
inc
fmuls
jl
fbld
cmp
push
xor
jb
xlat
or
xchg
adc
loopne
sbb
adc
xor
sbb
idivb
push
sbb
pop
aaa
jbe
shlb
mov
fisubrl
faddl
push
pop
jmp
xchg
push
int
dec
icebp
rcrl
int3
dec
push
xchg
dec
aad
cli
pop
dec
jns
adc
mull
call
in
bound
push
cmp
ret
or
movb
push
shl
xchg
test
push
dec
push
push
inc
add
push
or
push
inc
lahf
mov
cmp
fstpt
jns
rcll
dec
or
lock
icebp
jmp
adc
and
or
and
arpl
sti
xlat
dec
push
cmpsl
out
dec
and
out
ds
dec
daa
scas
push
stos
inc
ja
rorb
popf
fwait
pop
and
xor
jbe
clc
arpl
lret
sarl
pushf
xchg
xchg
add
addr16
mov
inc
mov
or
aaa
std
lahf
push
mov
jnp
add
sbb
ret
inc
lahf
sbb
leave
cmp
xorl
outsl
xchg
push
imul
inc
sti
xor
call
jle
ds
mov
mov
movl
mov
push
sub
push
cmp
shrb
xchg
dec
sub
js
insb
pushf
enter
push
out
jbe
nop
inc
cs
adc
lods
inc
jo
fnsave
lahf
lcall
mov
roll
sbb
imul
std
dec
ss
mov
or
jg
mov
rcrb
arpl
add
push
mov
mov
mov
or
cmp
sub
xor
pop
mov
lock
fndisi(8087
push
inc
sahf
int
mov
movsl
popf
push
mov
mov
aad
imul
shll
es
dec
fcoms
mov
mov
mov
out
lcall
ja
pop
imul
dec
mov
inc
roll
dec
test
cltd
imul
mov
pop
insl
ds
test
adc
ficoml
scas
jg
add
loope
jmp
out
jle
popa
or
jo
subl
jle
insb
movsb
dec
scas
scas
int
test
jl
inc
push
cmc
xchg
mov
arpl
loopne
movsb
andl
pop
fistps
inc
lea
fsubrs
xchg
aam
cs
ja
and
xchg
jl
xor
dec
adc
lea
xor
push
mov
sub
mov
mov
lret
addr16
sbb
sbb
lea
sahf
mov
aas
icebp
sub
mov
jnp
adc
in
fwait
inc
pusha
sbb
insl
enter
cld
lods
subps
jg
into
push
call
mov
call
into
lds
and
into
leave
cmp
and
push
inc
xchg
xor
jmp
test
outsl
fwait
stc
jmp
jns
mov
xor
mov
outsb
sarb
filds
fnstenv
imul
inc
ss
xchg
cltd
leave
rcll
pop
dec
and
push
ret
movsl
ror
cmp
xorb
adc
popf
sub
icebp
jb
sahf
test
test
inc
mov
jne
mov
je
mov
or
hlt
mov
dec
jp
xchg
cmp
insb
data16
in
pop
repnz
inc
dec
xlat
cs
imull
pop
call
cmp
and
mov
pusha
bound
les
mov
les
outsl
js
adc
mov
clc
insb
and
pusha
fstl
push
std
mov
jno
cmp
shll
xor
fldl
xchg
scas
sbb
or
xor
adc
adc
ret
dec
pop
outsb
sub
addr16
mov
push
es
mov
inc
dec
push
dec
or
sub
int3
lret
mov
push
mov
mov
jns
or
js
xchg
data16
arpl
sbb
cs
jne
imull
jmp
add
xor
outsl
xchg
mov
pop
das
xchg
daa
sub
push
push
jae
cwtl
pop
sbb
ret
pop
inc
and
in
inc
jns
add
ret
imul
add
add
arpl
or
push
cli
adc
loopne
mov
sahf
and
fiadds
fst
insl
push
dec
or
pop
rorl
sar
sbb
lret
push
xchg
inc
mov
js
sahf
mov
lea
jns
in
pop
bswap
jmp
lret
or
nop
sbb
jge
stos
dec
push
ret
xchg
and
xor
ja
mov
inc
pop
mov
lret
icebp
movsb
test
pop
in
fsts
pop
popa
dec
pop
mov
in
cmp
dec
pop
adc
out
jno
push
dec
in
popl
sbb
adc
ja
aas
add
rclb
xchg
sti
xlat
shrb
cs
shll
push
fadds
push
and
gs
not
push
jmp
sbb
pop
sahf
jge
pop
add
iret
cltd
and
sbb
dec
push
xor
push
std
and
sbb
fsin
icebp
insl
aam
mov
idivb
pop
icebp
imul
hlt
pop
scas
cmpsb
punpckhdq
push
mov
mov
fldenv
sbb
or
into
mov
push
in
jl
push
cmpsl
aaa
mov
lahf
adc
shll
push
jnp
orb
and
icebp
pop
in
adc
pop
push
adc
repz
and
push
mov
add
lahf
imul
add
sbb
push
pop
int
dec
movsb
mov
insb
cld
jp
mov
mov
push
add
dec
leave
inc
movsb
xchg
and
cmp
xor
and
mov
je
enter
cmp
pop
out
or
insb
mov
pop
loop
push
jns
or
adc
outsb
jecxz
ret
gs
insb
popa
adc
sbb
mov
mov
mov
cmpsb
ret
sbb
jbe
adc
and
arpl
inc
dec
pop
push
xchg
jb
lods
or
jmp
inc
cltd
mov
sbb
daa
add
pop
pop
mov
dec
xchg
xchg
mov
xchg
xchg
push
fldcw
sahf
pop
and
cmpb
jecxz
xor
mov
mov
iret
add
iret
ret
sbb
ret
movsb
mov
fdivs
sbb
outsb
out
daa
cs
cli
and
cli
inc
xchg
inc
sti
es
out
xchg
or
dec
cld
pop
in
mov
xchg
nop
pop
mov
fcomip
pop
fadds
fstps
jb
dec
adc
stos
xlat
xchg
rorl
adc
sub
lret
bound
xor
dec
sbb
cwtl
popf
push
in
xlat
int3
in
jno
add
mov
mov
imul
out
negl
scas
inc
not
lahf
adc
xchg
lock
aad
xchg
andl
mov
adc
inc
int3
xor
out
xlat
jne
inc
jb
sbb
inc
ret
jbe
fisttpl
and
enter
mov
stos
inc
xchg
test
jl
cmc
pushf
cmp
mov
push
stos
push
add
ja
into
sub
repnz
mov
push
fcoml
inc
nop
loopne
std
xor
dec
dec
sbb
fstpt
movsb
push
call
adc
adc
outsl
xchg
loop
icebp
cld
xor
insb
inc
inc
insl
sbb
dec
push
sbb
xchg
or
leave
push
ret
cmpsl
test
add
cmp
push
xor
cmp
rcl
pop
sub
cmp
mov
push
xchg
insb
pushf
ljmp
addr16
and
fldl
daa
pop
cmc
call
maskmovq
testl
mov
lock
xor
cmp
adc
xchg
rorl
jp
cltd
adc
leave
aaa
in
pop
addr16
mov
and
xchg
adc
push
fwait
xor
adc
cmc
dec
clc
mov
inc
dec
gs
cltd
out
repz
inc
sbb
or
lock
mov
cmp
mov
sub
sbb
inc
pop
loopne
mov
in
je
xchg
inc
sbb
or
xor
or
inc
inc
stc
mov
jmp
push
or
aas
jo
cli
ret
xor
pop
add
sbb
sbb
mov
jge
push
cmp
xchg
jg
neg
cs
xchg
je
xchg
cmp
push
leave
orb
in
jmp
or
add
mov
adc
adc
adc
adc
cmp
out
sarl
imul
pop
xchg
in
mov
or
mov
repz
sbb
repz
push
mov
iret
loope
push
dec
xchg
xor
loopne
mov
inc
loop
and
inc
adc
and
mov
mov
push
jp
mov
out
in
in
or
or
int
xchg
push
jmp
mov
mov
jbe
push
sar
mov
addr16
out
imul
sbb
shlb
pop
pop
lds
sub
push
pop
cmp
xlat
shlb
inc
js
fwait
jecxz
jmp
loopne
sub
int3
scas
mov
and
jge
adc
add
shlb
call
xor
sbb
icebp
lcall
sub
test
jecxz
enter
leave
out
mov
adc
cmp
out
sub
ret
push
popf
outsb
dec
xchg
addr16
fisttpll
pop
rcrl
xor
inc
hlt
sti
leave
icebp
and
pop
mov
rclb
enter
js
ret
ds
scas
sub
push
out
ret
lahf
ss
lret
test
outsl
stos
add
jl
imul
hlt
fs
ss
mov
inc
pop
jno
pop
loopne
ss
sti
jnp
inc
xchg
clc
push
fistps
inc
and
pop
sti
stos
out
push
imul
xchg
dec
push
je
add
and
in
movsl
sub
enter
jge
sahf
sub
add
lock
adcl
test
and
or
in
call
ss
fs
cltd
dec
fnstenv
pop
jno
jl
dec
and
cmp
dec
adc
and
lret
adc
push
or
xchg
fidivs
shll
test
inc
sub
push
dec
insl
das
sarl
mov
mov
cltd
pop
fildl
test
add
flds
ja
enter
lods
jmp
or
imul
out
scas
repnz
dec
cmpsb
dec
cmp
stc
ss
lcall
rolb
dec
pusha
cld
xor
js
or
mov
in
es
lcall
xor
je
ds
es
jno
push
repz
je
shrl
xchg
int
dec
sahf
enter
mov
add
in
xchg
aas
ficomps
xor
dec
ret
stc
sbb
lods
inc
mov
inc
or
repz
dec
xor
pusha
inc
fldenv
rol
fbld
sahf
ss
dec
ss
clc
jmp
jb
sub
enter
out
pop
fildll
and
mov
cmp
inc
jbe
test
inc
sti
sub
roll
fisttpl
sub
lcall
cmpsl
aaa
iret
hlt
fldcw
popl
int3
mov
ret
xchg
inc
mov
xchg
mov
scas
std
rcll
adc
cli
sbbl
sub
addb
popf
fiaddl
add
out
add
jl
jne
or
inc
dec
mov
fcoms
enter
jle
fwait
cmp
xor
mov
test
adc
or
loop
movsb
adc
loope
hlt
dec
gs
push
ljmp
mov
setbe
pop
mov
mov
cld
cltd
fsubrs
xchg
jg
call
mov
insb
cwtl
hlt
ja
add
fucomip
pop
and
cmp
and
and
inc
or
xor
subb
and
lret
pop
jbe
pop
scas
out
xchg
sub
jbe
sbb
ret
imull
mov
rcll
sbb
and
pop
addr16
add
cmp
imul
dec
jb
pop
lcall
rcl
xlat
test
jo
lahf
je
shrb
mov
push
xchg
pusha
addr16
test
hlt
xchg
call
mov
leave
lods
cmp
cmp
cld
add
int
daa
lods
mov
jmp
push
rcrl
out
inc
fcmovne
cmp
push
push
cwtl
lods
push
sbb
pop
cmp
push
sbb
rcll
sbb
je
sub
sbb
loope
sbb
sbb
js
inc
aam
and
or
lea
and
sbb
lds
test
icebp
push
loop
mov
in
adc
mov
adc
sub
cmpsl
in
mov
sarl
popa
popf
dec
repnz
xchg
jo
xor
mov
sub
es
sub
xchg
mov
pop
or
pop
add
dec
jne
dec
adc
xor
rcl
jmp
fimuls
inc
cmp
mov
mov
leave
in
aad
dec
push
pop
cltd
cltd
mov
pop
test
mov
jge
cli
mov
hlt
inc
popa
std
stc
movb
pop
fidivrl
jno
cmp
mov
mov
aam
loopne
sub
outsb
push
jbe
fdivr
mov
in
adc
arpl
lods
lea
sbb
mov
adc
stos
mov
mov
pop
add
pop
imul
std
clc
mov
jnp
bound
popf
jmp
out
sub
loope
in
test
push
into
jg
push
popf
fsubrl
insl
push
nop
inc
xchg
std
es
add
mov
lock
fwait
xchg
jne
pop
hlt
sbb
jmp
js
stos
mov
pop
and
mov
mov
int
inc
mov
mov
dec
xchg
add
push
sub
loope
imul
clc
mov
mov
and
inc
add
and
in
aad
xchg
push
cmp
pushf
xchg
stos
sarl
cmp
outsb
sub
cmp
mov
jecxz
jp
sbb
cmpsb
cmpsb
and
mov
jg
test
lea
xchg
push
mov
cmp
inc
rolb
xor
or
adc
movsb
lods
cs
lods
sbb
clc
stos
cli
jno
insl
mov
sbb
or
addr16
or
pop
add
mov
mov
repz
xchg
rol
hlt
ss
push
xchg
mov
leave
int3
inc
int3
dec
pop
cmp
sub
or
ret
inc
mov
and
or
xchg
dec
mov
rol
dec
cmp
repz
or
jnp
jp
pop
mov
jp
mov
lcall
sbbb
mov
push
rorl
jle
packsswb
sbb
pusha
int
fisttpll
jne
arpl
das
pop
mov
mov
rcrb
add
jo
fidivrl
mov
or
jnp
xchg
mov
test
add
xchg
out
rolb
cmp
or
pop
cmp
mov
or
in
shlb
std
and
cli
mov
pop
mov
pop
jne
xchg
cmp
cmpsl
repz
in
mov
fstpl
imul
scas
shr
mov
and
inc
xchg
jl
addl
mov
jo
sbbb
shr
jle
push
mov
and
xor
rclb
fnstenv
sub
sub
mov
js
rcll
sub
mov
popf
filds
imul
pop
xchg
add
pushf
shrl
mov
mov
rorl
loope
jb
lret
addb
fsubs
pop
out
pushf
dec
cld
push
mov
fisttpl
sar
arpl
arpl
mov
mov
divl
dec
lret
push
push
mov
aad
addr16
iret
imul
mov
lea
std
cli
sbb
ret
mov
mov
lcall
mov
adc
xor
stc
adc
mov
and
fcompl
ret
imul
bswap
pusha
cld
cld
hlt
mov
pop
ja
xchg
mov
rorl
pop
stos
mov
xor
repz
iret
xchg
ror
insb
je
testb
ss
adc
stos
push
hlt
jg
jle
push
lcall
aad
lcall
sahf
rclb
sub
or
xchg
pusha
call
repnz
pop
xor
cmp
loope
pop
mov
lret
pushf
mov
js
mov
inc
lds
int3
mov
clc
in
pop
push
mov
pop
jbe
xchg
repz
adc
aad
in
incb
ja
jg
and
or
les
mov
sti
sub
je
dec
dec
das
gs
adc
and
aam
mov
lret
shlb
popf
repz
cmc
inc
sbb
xlat
pop
cmp
sbb
ss
lcall
mov
sbb
dec
adc
xchg
clc
mov
adc
adc
nop
mov
dec
dec
ss
icebp
cmpsb
test
lret
dec
cbtw
mov
imul
enter
idivb
cmp
inc
or
mov
mov
jb
fwait
sbb
out
stos
push
dec
lea
or
push
int
sahf
es
repnz
rcr
dec
adc
jb
imul
addr16
ret
jbe
mov
xchg
shl
xchg
fwait
std
xlat
clc
pop
dec
jns
mov
call
jbe
jle
setne
xlat
lds
xor
mov
jecxz
cli
nop
xlat
shl
lahf
mov
xorl
xchg
mov
lret
jmp
sub
lahf
hlt
jnp
fimull
push
outsb
add
inc
xchg
dec
mov
aaa
ja
cltd
andl
lea
xchg
iret
jmp
stos
cmc
stos
icebp
lods
xor
cmp
into
or
push
and
icebp
xchg
jno
pusha
mov
repz
xchg
add
inc
and
jae
xchg
outsl
enter
inc
push
sbb
mov
mov
sbbb
fdivs
mov
mov
lds
cmp
dec
adc
pop
movsb
mov
jnp
dec
jae
mov
cld
lock
adc
adc
daa
adc
leave
push
ds
enter
bound
or
xchg
cmpsb
outsl
jae
lods
push
sti
mov
adc
and
out
pop
dec
adc
push
out
mov
das
es
mov
and
mov
mov
jle
mov
bound
mov
and
xchg
out
aad
fs
sbb
test
xor
sub
dec
xor
movsb
or
sub
dec
lds
jns
clc
sar
dec
cwtl
mov
xor
cmp
adc
data16
push
jge
dec
repz
idivb
push
xchg
push
jnp
mov
inc
lcall
mov
in
loopne
jbe
ret
jae
flds
mov
pop
inc
sahf
and
out
pop
mov
mov
mov
addr16
or
lahf
lea
iret
adc
lods
stc
stos
dec
mov
popa
mul
hlt
clc
xchg
mov
push
mov
pushf
adc
mov
sub
add
cmp
pop
lret
jmp
popf
test
rcl
jb
cmp
sarb
and
mov
sub
pop
js
push
hlt
push
fwait
xchg
rorl
dec
nop
je
and
mov
shll
xor
lahf
iret
adc
mov
sti
inc
sub
jmp
mov
pop
mov
js
jg
mov
inc
or
cli
jno
xor
test
or
cmp
gs
mov
fisubrs
std
mov
shl
mov
jnp
mov
adc
push
mov
lret
adc
adc
addr16
inc
mov
push
les
das
imul
push
cmp
jmp
mov
sbb
stos
dec
pop
adc
cwtl
jns
lcall
jg
xchg
jl
std
xchg
xchg
adc
andl
adc
sub
cld
iret
bound
jp
iret
dec
jl
ljmp
add
adc
std
add
clc
inc
insl
lock
lods
inc
inc
mov
cmc
popa
mulb
out
pop
sbb
adc
aam
fistpll
cmp
fidivrl
iret
shl
sti
push
movsb
add
dec
inc
mov
sub
cmpsb
xchg
arpl
mov
xor
imul
arpl
out
int3
sub
fisttpl
mov
insb
cmp
inc
inc
lods
push
inc
xchg
lock
push
repz
stc
stc
arpl
cmp
arpl
mov
mov
data16
mov
push
xchg
xorl
movsb
sarl
sbb
into
push
jge
movsb
imul
pop
test
push
inc
mov
adcl
dec
enter
cmp
add
fldenv
stos
add
outsl
push
cmpsb
out
pusha
mov
sbb
xor
js
and
mov
inc
xchg
jbe
sub
pop
in
xchg
mov
imul
repz
push
pop
fs
pop
sbb
mov
aam
xchg
dec
xor
xchg
xor
mov
imulb
dec
jbe
call
or
pop
sahf
mov
pop
pop
add
xlat
in
call
mov
ret
inc
xlat
cmp
popf
sahf
cmp
xlat
adc
mov
rolb
mov
xchg
test
dec
fldenv
mov
mov
insl
xchg
mov
aad
je
daa
gs
push
negb
pop
xor
xor
icebp
test
aaa
mov
cmp
or
or
loopne
ret
add
jmp
out
das
pop
mov
scas
push
clc
lea
or
pop
dec
jae
fstpt
or
cmp
ljmp
and
es
movsb
push
outsb
xchg
mov
fisttpll
mov
out
and
lahf
push
shr
add
adc
xchg
imul
mov
sub
cwtl
lcall
insl
callw
mov
ret
adc
stos
lea
fstps
fs
das
jl
cmpsl
out
lock
inc
pop
ret
incl
outsl
int
stos
mov
add
mov
xchg
ja
xorb
jne
cmp
imull
sbb
test
mov
mov
push
in
aad
idivb
pushf
mov
mov
add
in
mov
ret
int
dec
adc
js
add
pop
inc
out
mov
push
in
lods
pop
fiadds
push
xor
lret
scas
mov
ficompl
xchg
sub
rorl
xor
pushf
bound
test
and
cmpsb
adc
push
out
adc
pop
jnp
xor
inc
lds
nop
test
idivl
pop
adc
pusha
stos
pop
mov
loope
mov
sub
insl
cmp
cmp
stc
cmc
dec
mov
xchg
ljmp
push
mov
adcl
pop
lcall
in
fsub
dec
ljmp
cmc
sub
sub
xor
addr16
insb
push
cmpsb
xchg
int
mov
jp
inc
call
mov
or
pop
mov
rorb
mov
lea
cmp
mov
adc
jne
loope
mov
imul
sbb
xchg
int
jmp
sbb
movsl
mov
aad
das
push
stc
out
cmc
dec
xchg
jno
mov
bound
pop
out
pop
xchg
and
rcll
inc
cmp
mov
jmp
lea
add
sbbl
nop
jg
sbb
push
cli
clc
popa
jo
sub
mov
sbb
cmp
and
enter
fsts
and
pushf
notl
jnp
jae
mov
icebp
push
in
xchg
mov
add
loope
sub
pushf
dec
cmp
pop
push
js
push
int3
adc
call
lret
dec
fldenv
xchg
out
ja
lcall
xchg
inc
cmp
jecxz
mov
clc
cmp
xchg
inc
lock
lds
idivb
mov
fwait
les
mov
out
sbb
cld
rcrl
mov
clc
insl
fsts
shll
jp
stos
aam
int
leave
fistl
push
xor
aaa
jne
leave
aam
movsb
jne
and
divb
std
cld
mov
call
or
popa
test
shl
test
or
pop
or
test
and
test
or
xchg
inc
nop
xchg
aam
insb
out
add
pop
xlat
scas
imul
xorb
sub
dec
inc
adc
ret
xchg
xchg
addr16
mov
xlat
push
push
insl
mov
add
mov
sahf
xchg
out
mov
decb
jge
roll
int3
nop
dec
lcall
sub
jmp
ja
jns,pn
and
push
sub
push
mov
cmp
dec
je
aas
nop
shrl
dec
mov
push
jno
movsb
nop
sub
push
lret
popf
jno
loop
aad
push
and
jae
mov
push
inc
ja
negb
push
das
mov
xchg
sub
add
xor
mov
mov
popa
cmp
dec
pop
into
nop
sub
add
mov
jno
mov
mov
in
scas
std
jno
insb
mov
into
sub
fstl
fstl
push
inc
pop
mov
jge
in
jb
xchg
test
mov
push
cmpsb
popf
lods
inc
shlb
add
or
mov
push
dec
iret
mov
loope
pop
test
mov
cld
add
mov
sqrtps
rdtsc
or
jno
and
mov
or
sti
pop
mov
sti
mov
add
add
jmp
gs
loopne
shll
fsubp
orb
ficompl
js
sbb
rcll
popf
daa
cwtl
mov
lods
arpl
leave
gs
cmp
test
add
cmpsb
jl
adc
aaa
movsb
fsubr
push
pop
push
test
mov
fdivl
sbb
lods
pop
mov
aaa
pop
iret
or
lret
je
cmp
inc
pop
leave
cli
pop
out
cmp
mov
ja
scas
loopne
inc
sub
test
push
jbe
xor
call
xchg
mov
push
xchg
fcomps
cld
jmp
and
or
cli
fisubrs
sbb
xor
shl
push
mov
out
pop
inc
cmovle
mov
jmp
pusha
xadd
sbb
scas
fidivrl
enter
scas
das
cltd
xor
ljmp
xchg
pusha
cwtl
mov
jae
sub
sbb
mov
or
inc
sub
fwait
mov
pushf
ror
aas
jno
mov
bound
cmp
f2xm1
jg
push
dec
cmpsl
jp
sub
or
pop
mov
push
mov
mov
rcr
lock
mov
insb
pop
jns
test
dec
outsb
fstpl
adc
or
fcmovu
pop
sarl
and
add
cmp
sti
int
orl
movsb
adc
push
repnz
fsubr
dec
sar
sub
lods
lods
push
lock
xchg
nop
mov
loopne
imul
lods
gs
test
add
mov
jge
mov
or
insl
jne
cltd
call
fidivs
mov
nop
into
movntq
ret
pop
jne
outsl
mov
jb
mov
xchg
and
fadds
dec
sub
jecxz
sarb
mov
lds
inc
fbld
sysexit
adc
out
inc
fistps
cmp
lock
sahf
addr16
sarl
cltd
dec
mov
sbb
idiv
xor
jo
cwtl
xchg
loope
push
popa
in
pusha
repnz
std
sub
stc
sbb
cmp
pop
mov
dec
in
xchg
dec
xchg
lods
fstl
in
push
out
rcll
dec
cltd
or
jle
lret
lcall
or
insb
sbb
js
fcompl
cmp
xor
sbb
adc
stos
push
mov
in
dec
addr16
add
lods
adc
mov
xor
es
xor
fwait
xchg
or
push
sti
xor
add
mov
mov
test
gs
xchg
lahf
rorl
xchg
lcall
aad
push
mov
mov
shl
push
bound
pusha
outsl
cmp
sbb
cwtl
cmp
sub
mov
inc
mov
mov
mov
iret
les
xchg
mov
lahf
das
movsl
mov
sub
fsub
inc
shll
pop
xor
xchg
lds
enter
jl
daa
mov
out
std
push
jmp
dec
cltd
cmp
in
scas
sub
filds
pop
pop
add
mov
pop
pop
mov
pop
adc
pop
fcmovnb
mov
sbb
rcl
add
hlt
icebp
gs
jecxz
push
aad
mov
lcall
pop
push
lret
ja
add
cmp
sbb
xchg
push
mov
cmc
mov
cmp
nop
fcoml
mov
mov
cmp
fsubp
jmp
stos
mov
cmp
bound
ljmp
mov
into
subl
ret
and
xchg
jecxz
dec
pop
int
xor
push
and
xor
mov
mov
sbb
aad
loope
out
mov
mov
lock
xlat
insl
sub
test
leave
rcll
jae
sbb
cld
adcb
jno
icebp
sbb
fldcw
in
jne
lcall
in
jecxz
mov
aas
xlat
repz
push
xchg
cmc
mov
test
inc
xor
adc
jb
in
and
sbb
push
lret
sbb
es
mov
jnp
inc
adc
ss
dec
push
jle
xchg
outsl
inc
cltd
push
cmp
mov
or
jns
repnz
int
add
sub
xchg
addr16
mov
cmc
out
daa
xchg
mov
loope
aaa
movsb
xchg
out
cmp
dec
mov
out
cmovae
xchg
xor
dec
std
sbb
sbb
test
cmp
lahf
jnp
and
or
inc
lss
in
pop
das
inc
int
dec
fisubrl
cltd
add
xchg
jnp
movsl
inc
iret
adc
lds
xor
jno
adc
mov
mov
and
repnz
adc
cmc
fadd
stc
push
out
pop
mov
rcr
cmpsb
push
inc
shr
dec
lods
cwtl
std
mulb
addl
ljmp
jecxz
xchg
stos
stc
clc
xchg
in
fcmovnb
sub
push
lahf
fdivl
fldln2
shrb
test
mov
hlt
mov
mov
cmp
je
mov
mov
mov
mov
xor
cmp
jne
mov
mov
xor
movsbl
mov
xor
add
cmp
mov
mov
mov
je
xor
add
mov
je
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
add
imul
mov
mov
mov
add
or
mov
mov
mov
add
xor
mov
mov
mov
add
and
mov
mov
mov
lea
mov
mov
mov
sub
add
mov
mov
xor
add
jne
jmp
jmp
adc
lods
fnsave
lock
sbb
cmpsb
sbb
int3
xor
inc
pop
jl
cwtl
mov
mov
xchg
fsubrp
bound
dec
push
mov
insb
aad
add
bound
sub
and
xor
adc
push
stc
dec
jp
enter
dec
es
and
push
lcall
test
cs
adc
je
pop
pop
lods
xchg
xor
push
push
add
push
inc
mov
jp
or
icebp
sahf
mov
scas
lods
iret
sub
lret
rcl
imul
repz
sub
stc
loop
fisttps
mov
jmp
dec
fdivrs
loope
nop
jle
jp
cmp
sbbb
sbb
push
xor
sub
outsl
jg
jno
fbld
jl
mov
pop
fnstsw
mov
movsb
xchg
scas
test
fxam
push
int3
cmp
rcrb
cmp
sbb
pop
jp
imul
pushf
mov
mov
sahf
xor
shll
pop
movsl
aas
outsb
in
adcl
lods
repnz
popl
rcrb
or
dec
popf
ds
jp
mov
push
subb
xor
jnp
stos
mov
push
hlt
xchg
stos
call
les
arpl
mov
fdiv
mov
subb
add
mov
pushf
lahf
inc
dec
and
xchg
icebp
inc
mov
leave
das
sbb
outsb
and
sar
push
adc
std
cmp
ljmp
or
lods
dec
je
mov
push
daa
push
sbb
sbb
arpl
rcrb
outsb
nop
nop
popf
mov
adcl
jle
ds
movsl
daa
dec
stos
mov
lds
out
cmp
hlt
mov
out
or
jmp
inc
push
jge
adc
clc
orb
pop
inc
jae
push
and
rolb
pop
fiaddl
pop
push
loopne
cmpsl
cmp
dec
xchg
repnz
outsl
mov
dec
inc
adc
dec
std
stos
loop
xor
mov
test
adc
loopne
insb
sub
sub
push
repz
cmp
sti
mov
adc
test
fidivs
mov
repnz
xchg
shlb
xchg
aam
ss
popf
inc
cmpsl
ret
lgs
dec
movsl
pop
jnp
imul
mov
mov
push
jnp
sbb
out
and
fucompp
mov
out
outsl
pop
pop
push
pusha
mov
inc
fmuls
xchg
jo
loope
cmpsl
scas
enter
test
mov
mov
cld
xor
push
mov
xor
bound
outsl
mov
sbb
dec
stc
popf
das
sti
push
mov
pop
sub
adc
mov
dec
pop
int3
bound
and
out
push
test
out
add
push
add
dec
je
ss
xorb
rcr
adc
mov
xchg
push
xor
add
push
inc
mov
addr16
add
xchg
scas
dec
inc
out
xchg
xchg
gs
mov
mov
adc
adc
xchg
pop
mov
or
andl
rorl
fimuls
xor
roll
push
ret
out
les
push
jne
daa
loope
cwtl
imul
enter
jns
mov
jg
jp
push
out
aaa
es
arpl
test
int3
xchg
movsl
jecxz
pop
gs
aam
jmp
sbb
pop
out
lcall
out
test
mov
adc
cltd
xor
and
insb
pop
in
add
dec
sub
mov
scas
popf
mov
insb
jl
aam
clc
mov
push
jmp
sti
jns
cmp
std
sub
mov
fcmovne
xchg
jg
dec
stos
loopne
out
loopne
mov
out
adc
jecxz
adc
adc
and
mov
jb
dec
fwait
cmc
lahf
pop
inc
mov
clc
mov
lods
mov
aaa
dec
loope
jg
cmpsb
adc
pop
popf
dec
mov
loope
xchg
aad
ljmp
fucomip
mov
xchg
pop
sbb
dec
or
pop
xor
cmp
mov
ja
ljmp
das
repz
inc
pop
bound
into
roll
xlat
push
ds
ret
lcall
cmpsb
sub
bound
pop
cmp
xor
push
pop
jb
pop
outsl
ljmp
lret
rcrl
mov
ret
aam
xor
jae
push
jnp
sahf
rolb
fbstp
xor
dec
stos
mov
outsl
add
pop
xchg
mov
cs
or
andb
decl
ss
lods
mov
cli
jecxz
inc
sub
fistps
lock
inc
jae
xchg
insl
and
push
cld
sbb
xchg
mov
je
pop
int3
mov
inc
xchg
and
pop
push
or
jo
mov
sti
inc
vunpcklps
xchg
clc
movsl
icebp
mov
fneni(8087
pop
stos
movsb
icebp
sub
mov
inc
in
mov
js
dec
push
shlb
jno
test
pop
rorl
push
adc
push
cli
and
insb
lret
sub
jnp
and
dec
mov
sbb
cmp
cmpsb
jae
mov
inc
push
test
lcall
out
pop
push
mov
xchg
lods
lods
jne
pop
data16
jle
xor
orps
dec
push
inc
jnp
add
lcall
cmpsl
push
loope
inc
mov
pop
mov
stos
inc
or
sub
call
and
jno
push
lock
mov
push
popl
loopne
test
scas
lahf
add
mov
scas
lret
mul
cmp
out
stos
sbb
cmp
or
push
mov
aas
cmp
les
mov
enter
outsl
movsl
lret
cmp
push
repnz
sbb
aam
and
mov
mov
dec
jb
fisubl
shll
xchg
inc
inc
sub
bound
movl
adc
push
push
adc
cwtl
arpl
nop
aad
test
sbb
sub
jbe
push
iret
and
mov
add
nop
cld
xchg
out
push
push
xchg
movsb
cmc
out
pop
cmpsb
outsb
or
imul
js
mov
lods
pusha
loopne
jle
dec
fdivrs
adc
and
cmc
inc
xchg
movsl
mov
jbe
mov
popf
add
lret
dec
popf
jne
inc
adc
sub
enter
adc
cmp
adc
in
adc
xor
mov
push
mov
mov
mov
push
fbld
cld
inc
pop
fcmovu
out
iret
outsl
arpl
xlat
pop
ficompl
xchg
fimuls
push
jmp
call
std
sbb
pop
jl
and
sarb
xor
xchg
arpl
in
repnz
add
lods
out
mov
or
mov
sbb
jecxz
jne
pop
push
aaa
push
mov
mov
addr16
int
sarb
xor
jae
icebp
call
pushw
mov
xchg
pusha
or
add
sbb
sar
add
adc
aad
mov
insl
or
lret
in
clc
movsb
out
mov
imul
mov
add
std
stos
insl
sbb
cmp
in
push
and
push
mov
pop
stos
jno
dec
popf
mov
outsl
fs
inc
sbb
imul
nop
jo
mov
sub
mov
mov
xor
mov
dec
adcb
es
push
int3
mov
push
cltd
test
inc
sub
cmpb
neg
mov
js
lahf
mov
scas
mov
repz
sti
lds
rcrl
lea
xor
cmpsl
mov
cmp
mov
inc
mov
stos
pop
into
add
stc
leave
adc
adc
adc
push
cmp
sub
mov
and
test
es
xor
lods
cmpsb
nop
out
mov
dec
sbb
in
inc
cmpsb
enter
lods
mov
repz
cmc
adc
or
lods
push
dec
jns
push
dec
sbb
scas
mov
fs
jmp
add
adc
lock
std
dec
fistps
movsb
je
sub
fwait
lods
mov
sub
mov
pop
cwtl
inc
adc
fisttpl
cmp
nop
dec
lock
arpl
mov
jns
lahf
fidivs
popa
loop
fidivl
sbb
pop
cld
jmp
add
movsb
pop
loope,pt
sbb
xor
dec
or
mov
ljmp
mov
jge
xchg
addr16
dec
dec
rcrb
insl
mov
cld
jle
jae
test
loope
sbb
popa
ss
dec
push
push
aas
incl
clc
rorb
loopne
xchg
sbb
jmp
or
repnz
addb
inc
fwait
pop
mov
mov
ds
int3
out
jne
adc
xchg
mov
stos
test
sti
pushf
xor
sub
fldt
out
lds
mov
sahf
inc
adc
jge
mov
cs
cmpsb
xchg
xchg
out
adc
sub
xorb
jmp
inc
and
mov
test
mov
and
push
mov
test
je
shll
ljmp
pop
ljmp
push
cld
cmp
sbb
pop
xor
adc
fcmovbe
test
inc
mov
mov
jno
into
ja
test
outsl
add
pop
ss
jae,pn
xchg
imul
xor
or
fs
loop
jb
int
mov
sbb
add
clc
out
movsb
mov
mov
cmpsb
xlat
mov
into
add
movsb
xchg
mov
inc
daa
int3
ror
dec
in
push
mov
push
and
mov
mov
cmp
clc
sbb
daa
pop
fnstcw
fucomip
adc
push
ret
mov
sub
imul
lds
push
test
shll
mov
fistpll
adc
adc
lret
addr16
negl
push
or
outsl
or
jmp
add
jbe
pop
mov
ja
dec
ret
cmp
xchg
adc
popf
or
mov
pusha
mov
imul
daa
jbe
inc
mov
push
out
int
mov
lret
sub
test
lock
dec
inc
into
mov
hlt
jo
in
mov
sub
je
inc
arpl
andb
mov
mov
pop
dec
data16
cmp
jbe
jnp
scas
fwait
aam
inc
or
rclb
sub
scas
dec
pop
in
dec
mov
cli
lds
daa
xorl
xchg
dec
sbb
std
cmp
es
jp
aas
jp
dec
fmuls
std
orl
dec
into
arpl
lods
jne
mov
xor
out
cmc
call
out
cmp
jne
push
add
pop
xchg
adc
pop
stc
inc
xor
loop
push
movsb
stos
loopne
int3
je
add
pop
ja
adc
cltd
cmp
mov
cmpsb
cltd
rcl
cld
pop
imul
push
pop
test
mov
push
xorl
lea
jne
push
pop
add
popf
push
fnstenv
push
inc
mov
cmc
cli
pmaddwd
adc
addb
cmp
inc
es
imul
jmp
mov
dec
mov
mov
in
adc
inc
push
mov
lock
xchg
mov
cmp
add
pop
sarl
jns
out
push
rclb
call
icebp
hlt
jmp
add
aaa
pushf
push
rcll
fwait
imul
cld
fwait
inc
and
push
test
fwait
xor
pop
jp
xchg
inc
add
shrl
inc
leave
outsb
out
mov
shl
pop
data16
data16
gs
jmp
and
cltd
leave
pcmpeqd
fs
movsl
push
rol
stos
test
push
pop
adc
and
test
lods
xchg
pop
fadd
icebp
aam
jle
mov
xchg
mov
xor
nop
in
push
push
pushf
xchg
mov
mov
mov
sbb
decb
cli
mov
lcall
xor
ljmp
mov
leave
xchg
mov
mov
shr
movsb
lret
lds
sbb
pushf
out
js,pt
mov
inc
cwtl
and
rcrb
jecxz
inc
or
adc
shrl
pop
mov
jnp
adc
sub
dec
cmpsl
je
or
fmul
xchg
mov
dec
fnstsw
mov
nopl
js
jge
mov
add
push
xchg
push
jmp
jbe
or
pop
outsb
lahf
ss
mov
jo
cmc
cld
and
daa
sahf
xlat
cmp
push
sarb
fisttps
repz
dec
lret
jbe
mov
adc
cmpsb
cmpb
jle
jmp
or
xor
scas
test
push
sti
stc
jmp
icebp
pop
sbb
jmp
jmp
arpl
in
add
daa
pop
jl
xor
cli
mov
mov
int
jge
loope
adc
outsb
push
scas
aam
fdivl
inc
and
nop
add
cwtl
xchg
dec
test
jle
jo
mov
orb
loopne
and
mov
cmpsl
dec
pushf
or
pusha
popf
mov
xor
loopne
cmc
mov
sub
daa
mov
jbe
aad
rcll
mov
daa
add
gs
xor
xchg
pop
cmpsb
jg
insl
jne
ljmp
mov
push
mulb
xchg
adc
in
scas
mov
cld
jnp
dec
addr16
xchg
dec
and
loop
shr
ds
roll
mov
xor
js
sbb
test
lea
cmp
pop
inc
test
jl
outsl
scas
sbb
cltd
mov
ja
dec
shlb
mov
xor
scas
dec
leave
mov
xchg
ljmp
int
sub
jno
or
mov
nop
mov
rcrb
mov
ljmp
push
cld
pusha
cmp
popf
mov
in
scas
clc
sub
push
call
ficoms
sbb
add
mov
and
add
pop
push
fwait
xor
fdivrl
cmp
ljmp
xor
rorl
sbb
jl
imul
insb
ret
mov
loop
stos
test
pop
mov
cmp
lahf
int3
jno
mov
mov
jne
add
push
daa
inc
mov
sbbl
xchg
mov
push
push
imul
repnz
cmp
add
fcoms
jge
jns
nop
lods
sub
inc
in
fcoms
pushf
mov
lea
pushf
stos
in
push
add
scas
fs
shll
xor
iret
cmc
sbb
mov
ret
jb
int3
sarb
push
push
in
jg
mov
adc
and
outsl
lret
test
sbb
movsl
push
sbb
icebp
push
shrl
js
mov
aaa
and
xchg
je
call
add
and
std
arpl
fidivl
cmp
inc
dec
dec
cli
shrb
and
push
or
or
pop
addb
inc
push
add
push
lcall
xchg
or
daa
mov
je
and
cli
pop
stos
and
cmp
pushf
and
pushf
xchg
cmp
adc
or
std
sbb
scas
inc
jbe
in
mov
inc
daa
movsb
xor
add
rorl
scas
arpl
andl
lahf
sbbl
and
outsl
mov
adc
and
sbb
cltd
es
popf
mov
adc
pop
mov
testb
cmovnp
in
adc
cmpsl
xor
test
nop
sub
sahf
xchg
xor
dec
mov
out
jecxz
loop
sahf
inc
push
insl
jo
xchg
mov
clc
xor
mov
cld
fisttpl
pop
sahf
lods
fwait
jae
mov
iret
negl
cmp
inc
dec
mov
adc
push
mov
jnp
mov
pop
je
popf
mov
push
inc
subb
or
xor
insl
dec
inc
test
pop
cmp
cwtl
add
fisttpl
shrl
shrb
push
push
lcall
jmp
xlat
movsl
sarb
mov
into
sbb
cmp
pushf
inc
stos
dec
push
stos
mov
mov
das
jmp
in
lret
xor
daa
jmp
push
cmp
std
shrl
sti
outsb
dec
addl
inc
lock
popf
cmp
add
xchg
sub
sub
dec
inc
pop
stos
scas
jecxz
stc
jbe
popa
pushf
pop
mov
iret
movsl
iret
filds
je
test
fistpl
mov
sub
test
aad
mov
push
sahf
dec
dec
sub
clc
int
inc
dec
pop
lods
pushf
cli
je
dec
out
lret
xchg
rcr
movsb
mov
jmp
dec
adc
jnp
gs
lods
xchg
ret
daa
jle
fs
mov
shll
adc
jbe
inc
roll
lret
mov
xchg
out
out
jg
outsb
pop
loope
sbb
mov
dec
fsts
or
sbb
loope
adc
out
popf
add
cmp
cmp
aaa
icebp
stos
adc
xchg
out
pop
add
dec
xor
je
adc
ret
jg
add
andb
push
xlat
inc
sub
enter
mov
and
test
dec
or
stos
or
lcall
cmc
sti
imul
mov
mov
mov
pop
rorl
cmpsl
cmc
sub
fcoms
lods
sub
xchg
inc
sbb
test
int
test
dec
test
xor
push
or
rolb
inc
adc
jl
pop
lret
mov
add
les
fsts
insb
xchg
andl
test
or
xlat
ret
inc
sarb
out
imul
lds
in
sbb
mov
into
or
test
imul
fisubs
lahf
dec
jns
or
fsubrl
out
in
add
scas
in
cmp
and
div
int3
jae
jle
clc
pop
subl
mov
sub
push
jo
jns
lret
repnz
jnp
popf
push
aad
in
test
sbb
cs
mov
push
and
jb
xchg
adc
pop
mov
jo
pop
and
mov
and
rolb
aaa
pop
ss
into
jae
or
mov
hlt
sbb
mov
int
aas
xchg
cmpb
mov
stos
pop
rorl
jo
fldt
psubsw
repz
in
repnz
aam
add
test
inc
lods
in
mov
int3
lods
popf
test
shlb
mov
mov
sub
loop
movaps
pushf
xchg
ror
out
adc
jo
dec
enter
stc
xchg
aam
add
inc
xchg
int
stos
es
enter
mov
psubq
out
cwtl
inc
xor
pusha
in
gs
in
jp
cld
add
scas
ljmp
pop
add
je
inc
jbe
mov
mov
fnstsw
test
shl
scas
push
sub
jns
and
and
test
dec
add
call
pop
cmpsl
xchg
sub
cmp
shrl
ds
mov
push
shr
lahf
xchg
movsb
movl
into
shrl
dec
fsubrp
divb
aam
xor
pop
dec
xlat
shl
or
push
push
gs
lods
sbb
ljmp
pop
jns
test
nop
adc
jp
pop
push
mov
test
aas
jl
cmpsb
sahf
les
mov
push
jno
dec
mulb
or
dec
imul
cmpsb
paddusw
lods
fimuls
iret
xchg
lcall
jne
push
inc
iret
call
fwait
jae
pusha
hlt
inc
jb
icebp
hlt
outsb
push
xchg
dec
xor
pop
clc
xchg
push
xlat
dec
in
mov
or
mov
pushf
mov
cwtl
inc
clc
jmpw
mov
pop
cmp
mov
movsb
repz
cmp
arpl
fildll
outsb
mov
cli
sbb
sbb
imul
xchg
xor
mov
add
in
ret
ja
mov
aad
mov
pop
add
test
mov
fs
and
inc
add
sbb
sbb
push
addr16
pop
loope
push
or
pop
dec
mov
sub
aam
fs
rclb
xor
daa
pslld
clc
mov
push
mov
fsubrl
in
mov
pushf
lcall
mov
dec
imul
popf
mov
mov
sub
jmp
cmpsl
cltd
add
into
cmp
fists
sub
mov
sub
fisttpl
jl
fldcw
lret
test
scas
popf
jmp
ret
pop
pop
add
fwait
xchg
mov
push
inc
cs
xchg
daa
mov
lret
xchg
inc
xor
mov
adc
adc
and
mov
push
jmp
add
inc
or
mov
jb
add
stos
das
pusha
jmp
mov
dec
push
lods
jae
adc
arpl
cmp
test
cmp
cmc
fwait
xchg
in
mov
xor
insl
sbb
out
inc
inc
cmp
mov
xchg
lock
stos
dec
bound
into
push
sbb
fs
and
lock
pop
fnstcw
xchg
ja
inc
mov
mov
lods
xor
fs
enter
getsec
leave
sbb
daa
inc
les
jae
shl
jl
push
inc
fadd
sahf
mov
shl
xor
and
lods
mov
insl
or
jg
cmp
xlat
xor
cmpl
rolb
or
xchg
sbb
xchg
sbb
sbb
fstpt
sar
jmp
cmp
mov
icebp
loop
mov
pop
faddl
gs
mov
jl
sahf
add
inc
lods
mov
push
pop
mov
jle
mov
hlt
popf
pop
fs
ss
das
xchg
dec
test
xchg
push
movsl
xor
cmpsl
jp
sub
popa
into
or
cltd
pop
lcall
idivb
mov
stos
addb
cmp
outsb
mov
out
bound
mov
jae
push
xor
mov
adc
call
add
jmp
xchg
ror
push
push
mov
rcr
and
sub
or
cmp
mov
jmp
xchg
addr16
cmp
pinsrw
jmp
mov
cs
cmp
inc
jg
jmp
dec
xchg
cmp
cs
push
clc
fiadds
xchg
sbb
add
pop
fisubrs
xchg
mov
mov
lret
sahf
dec
dec
imul
xchg
or
fwait
cld
int
test
out
pushf
out
subl
inc
lcall
mov
mov
pop
push
clc
sbb
in
add
sbb
jae
cmp
les
fdivrs
enter
shl
mov
loopne
sub
out
in
nop
xor
cmpsl
fld
sub
pop
xlat
dec
jl
or
call
sarl
pushf
in
nop
pop
lds
xor
mov
mov
inc
mov
bound
adc
dec
adc
in
bound
stos
mov
add
out
pop
mov
pop
ss
repz
cmp
testb
or
es
arpl
mov
push
movsl
jmp
loop
lods
sti
outsb
lret
add
mov
fs
add
sub
dec
and
movsb
inc
sbb
sub
loop
xchg
push
sub
ja
subb
push
scas
lds
lods
dec
mov
test
dec
cmp
out
sbb
mov
out
mov
cmpsl
mov
cld
dec
cwtl
mov
rcr
orb
test
jmp
pop
adc
jae
inc
hlt
add
mov
jae
sbb
pop
arpl
adc
push
aad
mov
fwait
aaa
arpl
sarb
mov
ret
mov
push
pop
pop
inc
pop
mov
xor
inc
jmp
add
xchg
adc
cmp
movsb
push
je
xchg
jno
es
insl
xor
add
mov
mov
sub
imul
out
sbb
jns
jno
stos
fisttps
cmc
test
lcall
popf
test
cmp
or
outsl
addr16
or
and
add
push
push
loope
cli
sbb
jecxz
std
jne
xchg
ljmp
or
pop
loope
sahf
sbb
mov
pushf
mov
cmpsb
std
mov
mov
rcrl
sub
mov
dec
push
mov
aad
aaa
pop
mov
fwait
mulb
mov
lret
test
aam
xor
movsb
cld
dec
push
mov
outsb
les
jbe
xor
xlat
add
or
div
xor
add
aas
push
iret
adc
dec
dec
enter
mov
mov
lods
cmc
shlb
rorl
int
shll
shlb
or
mov
das
jl
xor
insb
push
rcrl
sbb
or
push
int
shl
hlt
lds
cld
test
dec
imul
popf
add
jl
mov
push
jno
jge
jg
sub
push
or
dec
je
jl
popa
repz
repz
dec
les
sahf
mov
rclb
loopne
test
jns
or
push
cmp
pop
push
jp
pop
imul
int
sub
ret
and
pop
mov
jp
std
popf
mov
out
fldt
ret
push
pop
or
ret
lret
inc
lret
xchg
dec
int
pop
sub
and
lods
pushf
jp
jnp
xor
icebp
pop
fiadds
filds
jns
mov
add
sbb
adc
cmpsl
pop
into
xchg
pop
and
jmp
aaa
add
stc
popa
and
std
lods
lods
je
lods
test
or
or
fcmove
cmpsb
mov
jne
insl
jne
orb
add
inc
jne
in
scas
ja
lods
cmp
dec
shlb
and
vmwrite
mov
ss
push
xchg
mov
pop
sbb
fwait
les
shlb
out
sub
and
pushf
cs
cld
push
insb
add
inc
dec
push
fldenv
sbb
in
fists
or
loop
push
mov
xor
ret
and
loop
shrb
xlat
cmpsb
xchg
xchg
pop
or
fs
mov
in
dec
lock
sub
outsl
arpl
ret
pop
push
mov
jns
pop
fisttps
sub
add
add
pop
imul
cs
cmc
cli
xchg
ficompl
sysenter
cmc
add
aaa
stc
ss
ret
shl
or
sahf
outsl
addb
stc
cmp
xchg
pop
rorb
cmc
sub
sub
lods
test
jno
push
ja
dec
rcrb
inc
xchg
divb
jb
sub
pop
negb
xchg
mov
xlat
cmpsl
push
outsl
das
loop
nop
mov
inc
in
insb
push
add
xchg
insb
js
xor
xchg
outsl
inc
adc
lcall
enter
mov
les
int
and
and
mov
xchg
mov
in
xlat
push
lret
pop
add
jnp
jmp
fwait
inc
and
add
adc
mov
sbbb
push
lods
pop
insl
lea
push
nop
pop
testl
cmpsl
lea
or
jo
xor
jns
pop
jns
pop
std
dec
mov
fwait
sarb
stc
cltd
loop
popf
fbld
jmp
mov
aad
popf
repnz
mov
and
xor
xor
cmp
repz
add
push
stc
dec
cmp
jle
loope
in
mov
stc
add
xorl
mov
incl
cs
or
dec
xor
xchg
imul
dec
mov
push
xchg
jmp
idivb
cmp
into
sbb
jno
sub
jecxz
mov
mov
gs
fisubrl
mov
mov
repnz
popf
push
idivb
pop
out
loope
add
out
out
push
push
int3
jp
jge
arpl
xchg
gs
std
addr16
loopne
out
xchg
iret
orb
and
into
push
mov
stos
rcll
ss
enter
nop
out
bound
jae
inc
jmp
and
insb
adc
int
adc
sub
mov
xchg
jmp
xchg
sbb
cmpb
or
add
jge
xor
push
pop
mov
or
sub
jmp
sub
lret
int
sbb
and
mov
iret
decb
mov
test
test
in
int3
cmpsl
sub
jne
negb
movsb
inc
sbb
insl
orb
sahf
test
pop
jge
pop
js
leave
iret
sbb
adc
iret
inc
xchg
mov
stos
ret
mov
cmp
push
mov
sub
inc
stc
shll
jmp
mov
push
lret
push
adc
cmpsb
add
xor
frstor
and
dec
xor
xchg
into
std
cmovo
fstpt
out
sub
scas
push
adc
dec
push
or
adc
int
imul
jmp
and
cmp
pushf
xor
decl
or
sbb
push
fs
jp
ljmp
stos
lahf
inc
pop
xchg
dec
cmp
mov
test
subl
out
aas
incl
bound
push
data16
push
mov
notb
stc
or
lahf
mov
repz
cmp
fcomps
sbb
dec
leave
popa
push
xor
xor
xchg
cwtl
loope
ret
mov
mov
pushf
ret
repnz
dec
mov
sarl
sub
mov
test
dec
or
into
aam
lods
cmpsl
mov
pop
js
add
pop
push
nop
mov
xorl
pop
sub
dec
xchg
les
adc
enter
cs
xor
into
in
lea
xchg
movb
xchg
loopne
adc
es
aas
lds
xchg
jmp
das
add
xchg
jmp
add
mov
ja
stos
hlt
add
loopne
mov
sbb
inc
dec
es
mov
popf
aas
or
iret
pop
xchg
arpl
add
jg
sub
add
test
sub
ud0
fisubs
sarb
adc
lret
or
sbb
mov
movb
pop
out
mov
pop
xor
popf
xor
les
push
out
xchg
aaa
int
jmp
fucomp
in
xlat
push
pop
fsubl
push
out
stc
stos
xor
adc
xor
sahf
test
fwait
ds
xor
test
and
push
cmp
outsb
lret
in
push
xchg
inc
fwait
inc
mov
fimuls
sub
add
xchg
scas
rcrl
lock
cmp
daa
and
js
cmc
cmc
mov
int
stc
and
les
mov
xor
jb
shrl
add
xchg
sbb
jns
xor
fsubrl
mov
add
sahf
loopne
out
std
sub
adc
push
xchg
aaa
mov
les
inc
sub
aas
push
rcrl
movl
pop
arpl
sbb
mov
push
sarb
jg
push
sbb
mov
test
mov
addb
push
or
mov
push
or
xor
sub
sub
xor
mov
mov
mov
add
imul
mov
mov
mov
add
or
mov
mov
mov
add
xor
mov
mov
mov
add
jmp
lret
lock
mov
cmp
inc
nop
adc
inc
pop
jl
mov
cli
inc
push
xor
nop
xchg
and
icebp
jne
lret
push
bound
cli
push
add
xchg
push
jmp
add
pop
or
cmp
daa
or
fstpl
nop
shl
pop
cld
mov
ds
xchg
xchg
out
cld
int
or
sti
xor
rclb
test
sbb
sbbb
mov
xor
lods
xchg
imul
push
lcall
push
fwait
cmc
stc
cmp
dec
cld
push
pop
pop
mov
or
fidivl
lods
xor
cmp
arpl
lcall
out
push
aaa
packuswb
push
pop
push
and
pop
ds
jg
jo
mov
cmpsl
xor
dec
xlat
jo
pop
xor
or
dec
xchg
sub
mov
ror
ffreep
stos
fcomps
jl
xchg
inc
jl
xor
les
and
lcall
not
mov
out
ds
daa
xchg
pop
mov
lcall
mov
fiadds
leave
fstps
lds
out
or
sbb
popf
push
out
shr
out
jmp
cmp
xorb
into
andb
xchg
lods
in
lret
std
faddl
out
jbe
in
and
nop
mov
subb
add
jg
arpl
xor
pop
out
cmp
verw
or
adc
push
dec
stos
dec
arpl
in
gs
mov
inc
ds
lcallw
inc
incb
or
jns
fimull
pop
xlat
inc
loope
cmp
inc
adc
jns
out
xor
insl
cmpsb
insl
frstor
xchg
sbb
leave
mov
mov
lret
pusha
add
xorl
aas
dec
cld
shr
dec
frstor
leave
cwtl
push
jb
arpl
inc
push
js
dec
enter
pop
jb
movsl
fmuls
inc
push
and
outsl
iret
pop
out
daa
popf
xchg
jmp
into
push
jmp
dec
inc
dec
inc
bound
xor
xor
lret
shlb
incb
andnps
mov
call
and
adc
lret
lods
xchg
cmp
subb
ret
jecxz
in
sub
push
mov
enter
in
mov
mov
sub
mov
movsb
inc
mov
pop
jecxz,pt
mov
out
mov
sub
inc
sti
ss
xor
stos
lcall
push
xchg
mov
push
inc
std
cmp
pop
ja
sub
xor
inc
xchg
or
and
aad
push
int3
mov
jae
xchg
into
test
aam
aad
adc
xor
lods
pop
iret
inc
cli
mov
push
add
test
push
xor
data16
scas
mov
lods
into
out
jno
cwtl
test
inc
out
out
jae
xchg
insb
enter
adc
mov
call
mov
xlat
and
dec
adc
lock
dec
pop
or
imul
les
push
xchg
jnp
and
rcll
sub
jmp
lret
pop
aas
scas
fwait
jbe
data16
sub
jge
mov
cwtl
or
icebp
dec
mov
into
push
xor
jbe
mov
jns
push
out
je
and
scas
jg
and
pop
movsb
mov
cmp
lods
mov
pop
push
dec
mov
aas
dec
ljmp
cmpsb
loop
xor
mov
pop
rcl
sub
add
jnp
pop
xor
je
inc
jmp
xchg
pop
pop
andl
sbb
int3
push
out
mov
stos
dec
clc
mov
inc
push
ret
daa
sbb
push
stos
outsl
jns
or
mov
mov
pushf
insb
sub
cmp
xchg
jb
jecxz
call
std
iret
jb
add
xchg
add
and
rolb
cmp
push
xorb
cmpsb
and
leave
adc
xlat
push
and
and
dec
jmp
scas
movsb
cli
popa
xchg
add
mov
jmp
aam
pop
dec
jo
pop
xor
push
loopne
xchg
push
mov
inc
jno
into
fnstcw
and
xor
or
sbb
in
and
cltd
imul
std
pop
movsl
sbb
inc
pusha
punpckhwd
scas
ss
sbb
mov
loope
test
addr16
xor
mov
cmp
cmpsl
push
cmp
mov
mov
out
adc
cwtl
pop
or
push
cmp
cs
loopne
mov
dec
inc
jge
adcl
adcl
xor
es
xchg
sbb
out
jb
inc
test
cmpsb
cltd
das
je
fisttpl
scas
cmc
pop
mov
and
lcall
sub
out
jb
adc
daa
cmp
fidivrs
cli
popa
out
cmpb
loopne
fwait
cld
cmp
pop
and
add
test
int
sbb
gs
stos
int3
ret
sarb
or
or
dec
fcompl
sub
sub
push
nop
adc
mov
xlat
mov
pop
leave
call
std
cwtl
mov
mov
pop
adc
ret
jmp
dec
movl
or
mov
mov
dec
dec
icebp
repnz
arpl
dec
pop
mov
shlb
hlt
movsl
test
ret
inc
push
mov
je
nop
orb
fisubrs
mov
cs
fwait
mov
mov
xor
or
data16
or
js
push
adc
mov
push
std
cltd
push
in
cltd
jecxz
pop
jmp
inc
pop
addr16
andb
push
cmp
decb
test
insb
shr
xchg
aaa
test
jecxz
jecxz
pusha
les
mov
mov
mov
mov
and
xchg
inc
dec
mov
add
pop
and
or
pop
cmp
sub
hlt
ds
and
dec
scas
lret
js
inc
xchg
xchg
push
jl
inc
das
ja
shr
mov
fmul
push
and
mov
jg
outsl
ljmp
ds
jno
popf
or
jmp
xchg
test
adc
mov
add
test
dec
leave
mov
or
mov
in
imul
aaa
inc
push
push
inc
call
mov
cmp
sub
and
dec
sbb
mov
mov
imul
andl
test
sbb
or
daa
push
mov
lds
cltd
fcomp
cmp
xor
nop
in
rolb
xchg
lcall
sub
or
push
arpl
imul
test
bound
inc
iret
jns
adc
lea
or
loop
xchg
test
add
call
ds
pop
cmp
and
das
in
pop
xor
pop
fadd
mov
jl
mov
enter
test
test
xchg
fwait
test
pop
out
adc
push
out
je
mov
ss
sub
incl
ja
sub
xchg
in
cmp
jl
sub
insl
test
daa
loope
pop
and
xchg
or
pop
repz
int3
fs
push
sub
push
cmc
in
sti
popf
adc
jnp
pop
in
sbb
rolb
jp
mov
add
xor
mov
cwtl
mov
xor
or
pop
mov
xchg
aad
and
int
loopne
in
adc
rcll
mov
xchg
mov
cwtl
sub
repz
adc
rorb
out
mov
bound
sub
xchg
xchg
mov
imul
mov
xchg
inc
fwait
mov
xor
xchg
xchg
jne
incl
loope
lahf
add
insl
push
es
lcall
jge
adc
and
fists
xchg
cltd
hlt
push
data16
iret
test
mov
test
add
popa
jp
insb
fsubl
movsb
outsl
outsl
and
in
inc
inc
js
pushf
in
test
scas
imulb
and
shll
scas
insl
sub
and
xchg
dec
repnz
xor
mov
jne
xor
clc
push
xor
add
jl
add
lock
pop
nop
adc
xchg
push
imul
gs
xchg
popf
sahf
movsb
inc
xchg
hlt
and
fwait
mov
pusha
enter
dec
mov
rcl
in
int3
sbb
int3
adc
sahf
testl
int3
dec
test
out
push
mov
sub
loope
mov
orb
push
loopne
sahf
dec
psllq
cmp
cld
jge
mov
mov
sbb
ds
jo
adc
jg
bound
mov
fcomps
scas
sbb
mov
jle
scas
pop
data16
cmp
ss
je
cmpsl
mov
mov
jb
sub
pop
push
pop
cmp
out
repz
pop
inc
push
mov
rcrb
adc
cmc
ss
push
rorl
shrl
inc
xlat
ds
jmp
cltd
shrl
mov
inc
mov
das
mov
xchg
inc
lea
les
mov
sbb
or
scas
subl
jae
push
cmp
mov
rcrb
imul
pop
hlt
out
pushl
mov
popa
xadd
popf
mov
negb
sub
cmp
sarl
xor
std
mov
addb
addl
jbe
mov
ds
inc
test
inc
loop
mov
pop
clc
and
test
cmp
arpl
jae
ljmp
xchg
icebp
sub
dec
xchg
arpl
push
cmp
sub
fidivrs
dec
add
pop
jne
ds
bound
int3
mov
or
mov
out
or
fdivl
call
and
gs
sahf
dec
ljmp
sub
and
mov
xchg
sub
pop
pop
ret
lods
sub
or
xor
stc
push
lods
mov
xlat
jb
pop
iret
cmp
inc
pop
loop
in
sub
idivl
pop
loop
push
push
out
enter
fwait
mov
adc
or
lahf
and
cld
stos
cmp
dec
cmp
cmpsl
jl
stc
imul
cmp
enter
js
div
xchg
lret
lcall
int3
test
or
ds
and
sub
push
fsubrl
data16
fstl
je
dec
je
out
fildll
sbb
jge
test
or
or
pushf
mov
rolb
xor
jbe
dec
sbb
lods
add
insb
inc
push
jnp
test
test
cmp
sahf
sub
addr16
mov
push
ja
in
cmp
mov
jle
imul
dec
cmp
enter
push
xor
cmp
enter
jge
adc
ret
push
rcrl
dec
and
inc
adc
cmp
sub
lods
inc
xor
lock
in
mov
or
outsb
push
jle
sbb
push
int3
test
xchg
std
outsl
mov
or
jns
popa
js
xchg
and
in
and
fs
lcall
mov
loopne,pn
fcompl
adc
and
mov
push
es
push
jl
adc
ljmp
ficoms
jno
nop
loop
lods
inc
pop
daa
out
dec
das
dec
dec
inc
mov
fsubr
outsb
sbb
lret
xchg
cmp
test
ret
ret
addb
adc
pusha
cmp
xlat
jne
jb
imulb
xchg
mov
push
cltd
pop
repz
dec
xchg
jns
inc
call
pop
cli
repnz
es
fcomps
and
in
sub
mov
scas
std
scas
xor
push
fisubrs
mov
jbe
inc
stos
loope
adc
shlb
cmp
add
adc
es
jle
jmp
mov
test
dec
inc
cmc
movsb
stos
imull
sbb
fcmovb
cmp
dec
jbe
pusha
cmp
mov
mov
jmp
push
movsl
xchg
adc
mov
repnz
stos
mov
call
hlt
mov
jo
push
add
mov
lds
pop
adc
xchg
test
push
jg
and
inc
fildl
inc
mov
push
cmp
popa
call
push
xchg
mov
sarb
xchg
das
xor
inc
dec
mov
inc
xchg
pushf
bound
ja
xchg
mov
jmp
mov
stos
mov
sub
mov
or
xor
sub
cmp
ds
mov
je
popf
push
and
idivl
iret
call
dec
dec
add
aam
jo
loop
xchg
xchg
das
in
xorb
mov
xor
aas
pop
jb
daa
cld
xchg
push
nop
pop
pop
jle
xor
mov
jae
cmpl
adc
push
jae
inc
add
pop
data16
cmp
repnz
mov
sbb
lret
cmpb
das
gs
fidivl
mov
jg
sahf
xor
add
sets
jmp
adc
pop
and
shlb
pushf
cmp
push
ljmp
aam
mov
test
std
mov
cmp
xor
aam
jmp
sbb
jmp
mov
int
mov
dec
or
pop
cmpsl
and
scas
stos
and
cmp
inc
pop
rolb
push
lods
and
mov
cmc
ss
fstp
dec
push
mov
shrl
lcall
cmp
jb
cmp
jl
fsubr
test
push
or
jecxz
xor
data16
imul
daa
inc
insl
repnz
aad
or
and
test
daa
sbb
sub
in
daa
xchg
jb
jg
mov
xchg
pusha
nop
sti
mov
pop
inc
and
mov
sub
outsb
push
or
leave
test
jge
push
mov
in
sub
cmpsb
test
mov
aaa
xor
adc
pop
lods
push
and
push
cmpsl
and
pusha
loop
imul
or
mov
jne
xor
pop
imul
cld
stc
test
int
mov
mov
seto
ja
xor
jp
outsb
xor
loopne
loope
bound
enter
push
cmp
push
mov
out
fistpl
adc
sub
ret
push
lret
addl
add
mov
pop
xchg
popf
imul
fcomp
xor
outsb
or
ljmp
inc
cmpb
adc
test
xor
ss
sub
fimuls
lret
jecxz
sbb
jns
inc
push
jbe
cli
mov
jo
fistpll
enter
mov
arpl
lahf
gs
loopne
or
mov
pop
push
aam
mov
mov
jnp
mov
add
mov
jmp
fdivrs
dec
mov
mov
xchg
lahf
xor
sub
push
xor
cli
stos
testb
ret
leave
sbb
aad
je
lret
pop
cmpsl
dec
imul
sti
xchg
jae
dec
push
inc
repz
shll
push
push
loope
cmp
pop
lret
frstor
pop
movsb
cmpsb
mov
pop
out
inc
leave
scas
xchg
loop
rclb
test
leave
sub
mov
outsb
mov
popa
mov
lcall
or
je
sti
sub
dec
jb
fisttps
out
mov
ret
lahf
mov
sub
and
out
test
popf
nop
sbb
and
jle
push
dec
out
pop
jle
lret
add
stc
test
xor
cmp
rcrb
jb,pn
cmpsb
and
test
jle
inc
add
imul
cmpsl
cmp
rcrl
xchg
and
cmp
inc
ret
out
or
cmp
dec
xor
push
in
cwtl
sbb
clc
es
js
in
popa
inc
cmp
mov
adc
xchg
stos
push
repnz
cmp
mov
shr
jne
push
pop
incl
inc
test
push
fistl
aas
lea
setle
mov
mov
movsl
sbb
scas
bound
dec
loopne
jne
push
cwtl
add
pop
insl
iret
mov
cmp
sbb
std
flds
out
dec
scas
inc
mov
sub
jns
or
dec
pop
sbb
sbb
inc
and
imul
arpl
cmc
mov
mov
jnp
sbb
and
sub
adc
and
mov
adc
loope
frstpm(287
scas
and
jmp
lods
mov
jno
xorl
xor
out
pop
jnp
outsb
aas
or
cmpsl
mov
cltd
mov
int3
push
add
lds
cmp
adc
sub
dec
adc
mov
clc
jg
jp
ljmp
adc
rcll
leave
out
std
idivl
mov
je
fsubl
fs
xchg
adc
inc
out
lret
or
mov
into
push
adc
xor
mov
xchg
mov
dec
or
and
and
aad
data16
jns
in
ss
dec
jmp
mov
popf
imul
pop
fwait
xlat
mov
pushf
sub
jecxz
dec
add
jns
push
cld
xchg
pop
mov
jl
in
cmc
xchg
call
cmp
cmp
cmp
pop
shrl
pop
jb
scas
cmc
inc
iret
jo
je
out
jb
aas
and
xchg
sub
add
inc
add
loope
and
ret
pop
xlat
cmpsb
pop
dec
loope
das
fisttps
iret
aam
or
popa
iret
stos
pop
mov
jns
pop
jmp
lods
repz
fwait
mov
cmp
inc
mov
jne
pop
xor
jp
pop
cmpsb
mov
int
test
imul
xchg
mov
fwait
mov
sub
nop
or
jecxz
movsl
push
cmp
gs
popf
insb
jnp
outsl
fildll
sbb
fcomps
vphadddq
jl
loope
xor
in
les
ja
dec
lock
push
cwtl
stos
and
jmp
push
and
pushf
cmp
add
pop
rorb
test
sbb
je
mov
xor
and
mov
ret
subb
rcrl
movsb
jmp
sbb
adc
sbb
leave
xchg
movsb
push
rclb
out
jmp
loope
fcmovnb
push
jp
push
mov
sbb
sarb
sbb
loop
mov
and
lds
dec
dec
or
ds
mov
int
and
mov
scas
mov
int3
xor
mov
jg
pop
frstor
jge
iret
dec
inc
notl
jns
nop
pop
imul
in
mov
flds
ds
cmp
add
fwait
jae
dec
hlt
scas
enter
adc
push
ja
cli
ds
adc
push
jmp
movsb
ds
jle
mov
enter
hlt
jae
cwtl
in
cltd
lahf
loop
cmp
push
loop
insb
sub
jle
mov
adc
sub
and
jno
mov
push
or
inc
aas
mov
lods
pop
in
movsl
dec
int
jne
enter
bound
mov
les
push
push
mov
sarb
adc
ret
popf
inc
push
xchg
out
mov
and
ret
jb
or
stos
mov
inc
fadds
jl
mov
mov
test
cli
rclb
jmp
enter
enter
jb
fildl
xor
loop
lcall
movsb
inc
int3
inc
jne
js
iret
out
pop
cmpsb
mov
das
mov
fwait
jb
mov
xchg
orl
aaa
outsl
lods
out
jns
out
adc
push
inc
movsb
add
inc
movsb
xchg
out
daa
aam
test
lret
ret
fstpl
fucomi
int3
stos
adc
scas
pop
pop
mov
icebp
mov
ret
mov
jb
mov
fmulp
xor
push
ds
rcrb
add
sbb
sbb
mov
ror
or
jb
pop
bnd
add
pop
loop
leave
inc
clc
lret
lret
dec
pushf
xchg
dec
loopne
push
adc
sub
enter
stc
inc
in
mov
inc
push
push
jbe
mov
and
dec
dec
into
js
sub
adc
out
mov
pop
fneni(8087
scas
mov
push
or
mov
push
pop
mov
or
cld
push
int3
mov
fdivrs
outsl
daa
dec
add
xor
lret
ljmp
jl
add
int3
rcll
jp
idiv
nop
adc
les
dec
sbb
pop
xor
mov
lcall
adc
push
cmp
divb
aad
xor
sub
xor
aam
jle
mov
lahf
xchg
ficoms
add
ss
lret
inc
sarb
das
or
push
daa
in
mov
mov
in
cwtl
pop
rorb
movsl
shl
pusha
decl
hlt
int3
and
or
icebp
jg
je
lea
insl
dec
lret
loope
fstpl
lret
cli
mov
push
scas
adc
xor
rorb
mov
es
pop
lret
rcl
lret
fwait
push
mov
jp
or
mov
mov
fcmovnb
outsl
lret
add
outsl
inc
jmp
mov
daa
dec
mov
push
ds
clc
data16
inc
push
mov
adc
xor
inc
or
xor
aaa
push
pop
jno
add
jbe
and
cmp
jp
aas
dec
in
add
insb
fmulp
jecxz
inc
dec
pop
dec
mov
cmpb
mov
inc
les
push
dec
dec
in
mov
mov
arpl
cld
ss
or
push
lret
push
ret
pop
or
rorl
mov
ljmp
in
mov
arpl
out
mov
xchg
enter
add
ficomps
rorl
push
mov
adc
xor
scas
push
aad
xor
push
mov
pop
xor
push
mov
cmp
rcll
mov
sbb
inc
cmp
add
lret
dec
ror
faddp
pop
je
les
jmp
mov
in
test
sbb
pop
mov
in
or
enter
es
roll
hlt
push
imull
test
cltd
aaa
mov
shlb
stc
scas
xor
xor
jg
ja
shll
arpl
pushf
roll
orb
pop
mov
mov
jae
adc
cmp
pusha
mov
pop
fucomp
outsl
cs
stos
adc
repz
pop
fxch
adc
lds
outsb
and
fmull
dec
xor
out
push
dec
dec
orb
jp
ret
push
ljmp
ljmp
pop
jo
rcrb
int
add
pop
insb
mov
mov
enter
icebp
mov
icebp
jmp
dec
push
fwait
cmp
cmp
mov
fistl
out
push
xchg
add
js
xchg
mov
pop
mov
movsb
call
xor
adc
adc
xchg
mov
cmp
add
lret
cmp
rcl
pushf
xchg
dec
cmp
sub
popa
inc
add
mov
jle
data16
clc
imul
sub
test
sub
sbb
rcll
repz
fnstsw
lcall
fsubrl
jl
addl
imul
mov
imul
mov
fdivs
repz
mov
sbb
lret
mov
push
push
ffreep
dec
clc
add
test
mov
jmp
and
in
jbe
dec
cli
jno
push
dec
rcl
mov
mov
add
pushl
xor
cmp
push
sbb
scas
test
int3
or
mov
fdivrs
push
mov
ss
sbb
leave
dec
loopne
mov
inc
aam
xchg
jbe
repz
orb
fmul
pop
leave
pop
cmp
mov
test
inc
adc
mov
or
sub
xchg
or
push
pop
mov
adc
loope
cmpsl
aaa
cmpsb
mov
bswap
nop
cltd
push
mov
pop
dec
pop
sbb
pop
ds
xor
mov
daa
lret
or
in
jge
cmpsb
ss
enter
cmp
mov
addr16
ljmp
cwtl
push
xlat
cmpsb
loopne
mov
pop
mov
dec
mov
rorl
bound
lock
mov
fsub
xor
jb
adc
fistpll
icebp
mov
mov
sbb
test
xor
out
dec
mov
lods
bound
mov
jo
and
xchg
pop
movsb
jecxz
ja
shrb
dec
cmc
cmp
fnstenv
mov
lret
test
xor
cmp
fs
jle
adc
mov
je
and
inc
xor
inc
xor
pop
mov
stc
and
pop
in
out
push
repz
daa
dec
cmp
xchg
mov
add
pop
ficoml
mov
and
dec
fimuls
lahf
sub
cmp
inc
xor
lock
pop
pushf
sahf
sahf
inc
aas
and
mov
inc
scas
leave
jne
mov
sub
aad
insl
push
jecxz
dec
xchg
mov
push
fisubl
dec
int
lcall
negl
cld
push
adc
incb
loope
neg
fldt
out
je
xor
mov
mov
cmp
mov
test
cwtl
adc
xor
sarl
push
js
std
dec
in
push
cmp
xchg
dec
mov
je
mov
jl
int3
popf
iret
xor
test
inc
outsl
mov
hlt
pop
mov
and
shrl
lret
and
cs
lahf
movsb
mov
and
rolb
jae
push
lock
mov
out
xchg
sbb
jno
mov
sbb
pop
cmp
mov
add
or
sub
pushf
pop
jecxz
jmp
push
sub
aad
daa
clc
mov
pop
divb
fabs
sbb
mov
fldenv
cli
in
test
cli
adc
shll
sahf
pop
ss
mov
decb
pop
int3
pop
push
aad
push
pop
sub
adc
scas
xchg
or
jg
jge
leave
push
inc
sub
adc
inc
ds
movsb
push
rclb
or
pushf
mov
sub
in
and
adc
pop
mov
test
test
pop
cmp
push
sbb
push
lcall
lretw
xchg
and
loop
icebp
cmc
mov
xor
cltd
sbb
outsb
jno
repnz
xchg
ja
mov
enter
cmp
out
lock
cmc
into
add
dec
test
out
shll
push
lret
push
jl
ljmp
fimull
push
loopne
fcomp
push
fidivl
into
push
adc
cmpsb
push
ret
mov
fisubrs
stos
jo
ret
cmpsb
push
sbb
stc
sbb
sbb
orl
mov
mov
pop
cmpsl
std
lds
mov
pop
pop
mov
ljmp
lret
daa
sub
out
mov
mov
or
lcall
jo
push
icebp
lods
mov
xor
jo
or
das
stos
out
dec
and
pop
imulb
aad
das
pop
and
jecxz
or
daa
mov
loope
popa
xchg
mov
add
push
ljmp
lods
push
aas
into
mov
sub
add
insl
mov
adc
or
test
out
mov
sbb
sub
inc
icebp
sbb
pop
outsl
aas
orl
lock
ret
cmp
les
adc
aaa
xchg
js
xlat
and
fisubrl
jg
cmpl
sbb
jge
pop
adc
out
cld
aaa
bound
lock
jmp
or
pop
lock
xchg
shl
add
mov
sbb
jle
mov
dec
xor
add
nop
mov
fwait
mov
fsubrl
add
ret
lret
mov
insl
mov
dec
fs
faddl
nop
adc
pop
mov
add
test
jecxz
leave
popa
lds
add
xchg
out
jns
adc
setg
mov
jmp
clc
and
shrb
pop
xor
icebp
mov
rcrl
mov
xor
cmp
sub
jg
cmp
lds
pop
mov
adcl
ret
xor
lock
push
inc
push
rclb
repz
fisubs
push
jns
mov
add
jg
inc
xchg
and
mov
and
push
jg
inc
adc
mov
cld
xor
mov
inc
cmp
push
mov
mov
xchg
add
dec
jnp
fadds
lea
mov
inc
loope
or
xchg
mov
push
jno
and
jae
and
xor
repz
xlat
push
loope
xor
out
mov
cld
cmpsb
aad
bound
das
mov
jno
and
push
cmpsl
rorl
lret
xchg
jno
push
aaa
daa
sub
lahf
cmp
jg
andl
mov
adc
inc
test
imul
je
icebp
outsb
cmc
rolb
aaa
rorl
add
jns
jno
ja
xor
dec
mov
jl
add
movsl
cli
fisttpll
mov
lea
repz
add
pop
imul
mov
test
lods
mov
insb
push
add
pop
cmp
mov
test
negl
into
xor
getsec
jecxz
sbb
ljmp
outsb
test
pop
fsts
adc
and
sbb
xor
fildl
movsb
cmc
xchg
lock
ljmp
leave
push
aam
cmpb
xor
xor
sbb
xor
cli
dec
sti
popf
jbe
mov
mov
fs
push
sub
dec
out
cwtl
dec
int3
mov
pop
mov
test
scas
sar
cmp
pop
cld
movsb
add
pop
inc
dec
inc
sbbl
cmpsb
lods
in
or
xlat
inc
fwait
subl
and
imul
subl
cmpl
les
jg
aad
scas
mulb
adc
aad
ret
bound
xor
xchg
scas
inc
mov
cmpb
enter
insb
pop
pop
mov
adc
add
and
sbb
or
jmp
scas
pushf
movsl
jp
lods
aas
cmp
aaa
mov
dec
out
insl
cld
jb
pop
das
push
mov
mov
push
pop
pop
pop
scas
inc
cmp
mov
push
out
pop
adc
cmp
cmp
cmp
les
mov
fucom
push
in
je
dec
inc
jmp
test
imul
mov
mov
mov
adc
test
fcompl
idivb
mov
mov
xor
jae
jle
bound
adc
cmpsl
mov
std
xor
cmp
sub
or
mov
mov
orb
sbb
adc
leave
cmpsb
imulb
pop
jns
pop
mov
sti
cltd
push
sub
and
sbb
xor
or
jo
bound
inc
cmp
push
push
ret
push
dec
int
movl
fwait
and
filds
xor
enter
popl
daa
sti
cmpsb
es
inc
xchg
add
pop
jmp
fdivp
into
sbb
and
and
mov
mov
mov
lea
mov
mov
mov
sub
add
mov
mov
xor
add
jne
mov
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
add
imul
mov
mov
mov
add
or
mov
mov
mov
add
xor
mov
mov
mov
add
and
mov
mov
mov
lea
mov
mov
mov
sub
add
mov
mov
xor
add
jne
mov
mov
xor
lea
mov
mov
xor
add
jne
jmp
mov
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
add
imul
mov
mov
mov
add
or
mov
mov
mov
add
xor
mov
mov
mov
add
and
mov
mov
mov
lea
mov
mov
mov
sub
add
mov
mov
xor
add
jne
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
add
imul
mov
mov
mov
add
or
mov
mov
mov
add
xor
mov
mov
mov
add
and
mov
mov
mov
lea
mov
mov
mov
sub
add
mov
mov
xor
add
jne
mov
xor
mov
add
mov
pop
pop
pop
leave
ret
add
inc
add
mov
inc
add
mov
inc
add
mov
inc
add
rolb
add
inc
add
rolb
or
inc
add
rolb
adc
inc
add
rolb
sbb
inc
rcr
xor
add
add
add
add
into
add
inc
ret
add
inc
add
nop
inc
add
inc
add
nop
inc
add
inc
add
nop
inc
add
inc
add
nop
inc
add
inc
add
nop
inc
add
mov
add
inc
add
mov
add
inc
add
mov
add
inc
add
mov
add
inc
add
rolb
rolb
rolb
rolb
rolb
rolb
rolb
rolb
add
add
add
add
inc
push
data16
pop
xchg
lods
stc
dec
xchg
test
xor
sbb
add
add
inc
cmp
jb
outsb
je
popa
je
pop
dec
outsl
imul
insb
imul
dec
gs
mov
sub
push
push
mov
xchg
mov
mov
cmp
jne
mov
cmp
jne
mov
mov
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
push
movb
movb
push
movb
movb
xor
pop
mov
lea
movzbl
xor
add
inc
mov
cmp
jb
xor
lea
movzbl
xor
add
inc
mov
cmp
jb
xor
lea
movzbl
xor
add
inc
mov
cmp
jb
lea
mov
mov
mov
mov
mov
cmp
jne
mov
movl
mov
mov
xor
mov
cmp
jne
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
lea
mov
mov
mov
lea
mov
add
mov
lea
mov
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
lea
push
mov
movl
movl
lea
pop
mov
xor
sub
mov
inc
dec
jne
lea
mov
lea
push
mov
mov
xor
add
push
mov
add
push
mov
mov
movl
pushl
mov
call
mov
xor
add
mov
cmp
jne
mov
or
mov
add
mov
mov
mov
mov
mov
mov
mov
lea
mov
add
mov
lea
mov
add
mov
lea
mov
mov
mov
mov
lea
mov
mov
mov
mov
add
mov
mov
add
mov
lea
mov
add
mov
mov
mov
mov
movzwl
xor
add
xor
mov
mov
movzwl
xor
add
xor
mov
xor
mov
mov
mov
lea
lea
movl
mov
call
mov
lea
push
mov
xor
add
push
lea
push
pushl
mov
call
mov
lea
lea
mov
call
mov
mov
pushl
pushl
pushl
pushl
pushl
pushl
pushl
call
test
je
add
pushl
lea
call
mov
mov
mov
xor
add
mov
jne
mov
mov
pushl
mov
call
jmp
mov
mov
add
pop
pop
pop
leave
ret
push
push
push
push
mov
mov
add
push
cld
mov
add
push
mov
lods
xchg
push
mov
or
shl
not
push
mov
or
shl
not
push
add
mov
sub
sub
inc
push
push
push
push
push
push
sub
push
or
mov
shl
lea
mov
shr
rep
push
pop
call
loop
lea
lea
mov
mov
sub
and
mov
mov
call
jne
mov
and
shl
sub
neg
shr
pop
add
pop
lea
shl
cmp
pop
lea
push
push
mov
push
mov
jb
mov
sub
movzbl
mov
shl
mov
and
add
lea
call
mov
shr
and
cmp
mov
jne
cmp
jb
jmp
mov
call
inc
inc
sub
sub
cmp
jb
pop
inc
cmp
dec
mov
jb
inc
cmp
dec
mov
dec
jb
mov
dec
sub
push
jmp
mov
dec
call
jne
pop
pop
pop
pop
pop
pop
pushl
push
push
mov
mov
jmp
mov
dec
call
jne
mov
dec
call
jne
pop
cmp
mov
jb
mov
push
mov
sub
cmp
jb
lods
mov
stos
jmp
mov
call
mov
je
mov
call
mov
je
mov
mov
mov
mov
mov
mov
mov
mov
pop
pop
pop
mov
mov
add
push
push
cmp
mov
jb
add
push
mov
call
jne
mov
mov
shl
sub
push
pop
lea
jmp
mov
add
call
jne
mov
mov
shl
push
pop
push
pop
lea
jmp
mov
add
push
pop
mov
mov
sub
inc
mov
call
mov
sub
jb
add
cmpl
jae
addl
mov
cmp
jb
push
pop
mov
shl
sub
inc
push
pop
lea
mov
call
mov
sub
jb
mov
mov
cmp
jb
mov
andl
shr
orl
dec
cmp
jae
mov
sub
mov
shlb
add
shl
add
mov
jmp
sub
call
shr
shll
cmp
jb
incl
sub
dec
jne
mov
add
mov
shll
push
pop
sub
inc
mov
mov
call
test
je
or
shl
dec
jne
jmp
incl
mov
add
mov
mov
sub
cmp
ja
mov
sub
mov
lods
stos
cmp
jae
dec
jne
mov
movzbl
cmp
jb
call
sub
lea
mov
mov
sub
mov
mov
mov
sub
mov
leave
pop
pop
pop
ret
pop
pop
sub
inc
jmp
cmp
jb
ret
shl
push
mov
cmp
jae
mov
shl
lods
mov
mov
pop
ret
mov
movzbl
shl
add
add
jmp
movzbl
add
mov
lea
sub
lea
cmp
jae
mov
shll
cmp
jae
mov
incl
shl
mov
mov
movzwl
shr
imul
cmp
jae
mov
mov
sub
shr
add
add
lea
ret
shr
sub
sub
sub
add
add
lea
ret
push
mov
sub
push
push
push
movl
movl
mov
mov
mov
mov
xor
mov
add
mov
mov
xor
add
mov
mov
xor
add
mov
mov
xor
add
mov
movl
movl
movl
push
pop
mov
mov
push
pop
mov
mov
movl
movl
mov
xor
add
mov
mov
xor
add
mov
movl
movl
movl
lea
lea
call
decl
jne
decl
jne
decl
jne
movl
mov
xor
mov
add
mov
mov
andl
xor
add
mov
mov
mov
mov
mov
mov
mov
mov
lea
mov
mov
lea
mov
mov
pushl
lea
mov
call
mov
xor
add
cmp
je
mov
mov
mov
mov
mov
mov
add
mov
mov
lea
push
mov
mov
mov
add
push
pushl
push
call
pushl
mov
mov
mov
movl
movl
movw
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
call
push
mov
mov
pushl
call
test
jne
mov
mov
mov
add
mov
mov
mov
call
push
mov
call
test
jne
mov
mov
mov
add
mov
mov
mov
call
push
mov
call
mov
mov
xor
add
cmp
je
mov
xor
mov
sub
add
mov
cmp
ja
movl
pushl
mov
mov
mov
call
push
mov
mov
pushl
call
mov
mov
mov
mov
mov
mov
xor
lea
call
push
mov
mov
pushl
call
mov
mov
mov
mov
xor
lea
call
push
mov
mov
pushl
call
andl
mov
and
add
push
call
test
jne
and
jmp
mov
mov
mov
xor
lea
call
push
mov
mov
pushl
call
mov
incl
cmpl
jb
mov
mov
xor
mov
add
lea
call
push
mov
mov
xor
add
lea
call
push
call
mov
xor
add
cmp
jne
movl
mov
mov
xor
lea
mov
mov
test
je
mov
mov
xor
lea
mov
mov
xor
mov
sub
add
mov
cmp
jbe
mov
mov
mov
cmp
jne
pushl
lea
push
call
mov
jmp
mov
mov
xor
add
xor
mov
mov
xor
add
cmp
je
mov
mov
xor
add
cmp
je
mov
xor
add
jmp
mov
mov
and
or
sub
add
mov
xor
lea
mov
cmp
jb
mov
mov
mov
movl
mov
mov
mov
mov
xor
add
mov
mov
xor
add
mov
movl
movl
mov
mov
xor
add
cmp
je
jmp
mov
mov
sub
mov
xor
add
xor
div
mov
mov
mov
xor
add
cmp
jbe
mov
xor
add
mov
mov
mov
xor
add
imul
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
add
movl
mov
movl
mov
movl
mov
mov
xor
add
jmp
movl
movl
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
xor
add
add
imul
add
mov
mov
mov
cmp
jb
mov
mov
xor
add
imul
mov
xor
add
or
mov
xor
add
mov
xor
add
mov
lea
jmp
mov
mov
xor
lea
mov
mov
xor
mov
sub
add
mov
mov
xor
add
imul
cmp
jbe
mov
mov
mov
mov
mov
xor
add
push
mov
xor
add
push
push
mov
mov
xor
add
push
call
mov
mov
xor
add
cmp
je
mov
jmp
mov
xor
mov
mov
mov
xor
lea
xor
mov
sub
xor
cmp
jne
mov
mov
mov
xor
add
push
mov
xor
add
push
pushl
call
mov
mov
mov
mov
mov
mov
mov
xor
add
movl
movl
jmp
mov
mov
xor
mov
movsbl
xor
sub
movzbl
cmp
jne
mov
xor
lea
xor
cmp
jne
jmp
mov
xor
add
mov
xor
add
cmp
je
mov
mov
movl
movl
movl
movl
mov
mov
mov
xor
add
push
mov
mov
xor
add
push
mov
xor
add
push
mov
xor
add
push
call
mov
mov
mov
mov
xor
add
push
mov
xor
add
push
mov
pushl
xor
add
push
call
mov
xor
add
mov
cmp
je
mov
xor
add
cmp
je
movl
movl
mov
xor
sub
mov
mov
xor
sub
mov
mov
xor
sub
mov
andl
andl
lea
push
pushl
push
lea
push
mov
pushl
mov
add
push
push
call
mov
mov
mov
mov
xor
add
push
mov
xor
add
push
push
call
mov
add
xor
cmp
mov
mov
mov
jne
xor
add
push
mov
xor
add
push
pushl
call
mov
mov
mov
mov
jmp
xor
add
push
mov
xor
add
push
pushl
call
mov
mov
mov
movl
mov
mov
mov
mov
xor
add
mov
mov
xor
add
mov
movl
movl
mov
mov
xor
add
cmp
je
jmp
mov
mov
sub
mov
xor
add
xor
div
mov
mov
mov
xor
add
cmp
jbe
mov
xor
add
mov
mov
mov
xor
add
imul
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
add
movl
mov
movl
mov
movl
mov
mov
xor
add
jmp
movl
movl
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
xor
add
add
imul
add
mov
mov
mov
cmp
jb
mov
mov
xor
add
imul
mov
xor
add
or
mov
xor
add
mov
xor
add
mov
lea
jmp
mov
mov
xor
lea
mov
mov
xor
mov
sub
add
mov
mov
xor
add
imul
cmp
jbe
pushl
mov
pushl
lea
push
mov
mov
pushl
mov
mov
pushl
pushl
pushl
call
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
xor
add
push
mov
xor
add
push
pushl
call
pop
pop
pop
leave
ret
push
mov
push
push
lea
mov
push
mov
mov
mov
mov
cmp
pop
jne
movb
movb
movb
movb
leave
ret
push
mov
push
push
lea
mov
mov
mov
mov
mov
cmp
jne
mov
movb
movb
movb
movb
leave
ret
push
mov
push
push
lea
mov
mov
mov
mov
mov
cmp
jne
movb
mov
movb
movb
leave
ret
push
mov
push
push
lea
mov
push
mov
mov
mov
mov
cmp
pop
jne
movb
movw
movb
leave
ret
push
mov
push
push
lea
mov
mov
mov
mov
mov
cmp
jne
mov
movb
movb
movb
leave
ret
push
mov
call
mov
mov
movb
call
push
mov
movb
call
push
movb
call
movb
mov
jmp
push
mov
push
mov
push
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
movl
mov
movzwl
xor
add
pop
test
je
mov
movl
leave
ret
push
mov
sub
andl
movl
movl
movl
movl
movl
mov
mov
mov
mov
push
push
mov
mov
mov
mov
mov
push
mov
test
jne
pushl
mov
call
mov
mov
add
mov
mov
mov
mov
xor
mov
add
cmp
jne
mov
mov
mov
mov
mov
mov
xor
add
mov
mov
andl
xor
add
mov
lea
push
mov
xor
add
push
mov
add
push
mov
mov
movl
pushl
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
mov
lea
mov
lea
push
mov
xor
add
push
mov
add
push
mov
mov
movl
pushl
mov
call
test
je
andl
cmpl
jbe
mov
mov
sub
mov
incl
mov
mov
inc
cmp
jb
mov
mov
add
mov
mov
add
sub
add
mov
mov
mov
movl
jmp
add
shr
mov
je
lea
mov
mov
mov
mov
movzwl
mov
and
mov
mov
shr
add
xor
cmp
jne
mov
add
mov
cmpl
je
mov
add
mov
mov
mov
mov
addl
decl
jne
mov
add
mov
cmp
jae
add
mov
mov
test
jne
mov
mov
movl
mov
mov
mov
xor
add
mov
lea
mov
lea
push
mov
xor
add
push
mov
add
push
mov
mov
pushl
mov
call
mov
mov
add
mov
pushl
mov
pushl
pushl
call
mov
add
lea
mov
mov
mov
mov
mov
mov
mov
cmp
jb
mov
mov
mov
lea
mov
add
cmp
jae
mov
mov
mov
sub
add
mov
mov
jmp
xor
pop
pop
pop
leave
ret
push
mov
sub
push
mov
mov
cmpl
je
test
je
test
je
mov
test
je
cmpl
je
cmp
je
mov
andl
mov
sub
add
movzwl
mov
movzwl
add
je
lea
push
mov
mov
push
test
je
mov
andl
and
add
movzwl
movzwl
add
je
lea
mov
test
je
mov
andl
and
add
movzwl
movzwl
add
je
lea
mov
mov
mov
test
je
mov
add
movzwl
movzwl
incl
addl
add
cmp
jb
movzwl
movzwl
mov
incl
add
add
mov
cmp
jb
mov
movzwl
movzwl
incl
add
add
mov
cmp
jb
pop
pop
xor
inc
jmp
xor
pop
leave
ret
push
mov
mov
mov
sub
push
xor
push
push
cmp
je
cmp
je
cmp
jne
xor
inc
jmp
mov
add
mov
mov
mov
mov
add
add
mov
cmp
ja
mov
mov
cmp
jbe
cmp
jae
movzwl
jmp
mov
lea
mov
test
je
add
mov
cmp
jbe
mov
mov
add
cmp
jae
mov
jmp
sub
mov
mov
test
je
mov
inc
mov
cmp
jb
jmp
xor
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
movl
mov
mov
mov
mov
mov
mov
push
mov
push
mov
movl
mov
mov
push
mov
xor
xor
add
add
mov
cmp
je
mov
mov
xor
add
cmp
je
mov
mov
xor
add
cmp
je
add
mov
mov
xor
add
mov
mov
cmp
je
mov
mov
imul
xor
add
cmp
jne
mov
mov
imul
xor
add
cmp
je
mov
mov
mov
imul
add
mov
add
xor
mov
mov
mov
xor
add
xor
mov
mov
add
add
cmp
je
add
mov
mov
xor
add
mov
lea
mov
movl
mov
pushl
mov
call
mov
xor
add
mov
cmp
jne
mov
pushl
mov
call
mov
movl
movl
mov
xor
add
cmp
jne
mov
mov
xor
xor
lea
mov
mov
add
imul
push
call
mov
xor
add
cmp
jne
mov
xor
add
cmp
jbe
mov
xor
add
cmp
jne
mov
mov
xor
lea
mov
jmp
movl
movl
mov
xor
add
jmp
mov
xor
add
mov
mov
xor
add
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
mov
mov
mov
xor
add
cmp
je
mov
mov
xor
add
shr
cmp
je
mov
mov
mov
movzwl
push
pushl
call
jmp
mov
add
mov
mov
add
push
pushl
call
mov
mov
mov
xor
add
cmp
mov
jne
mov
xor
lea
mov
jmp
mov
xor
add
imul
mov
mov
mov
xor
lea
mov
mov
xor
add
cmp
jne
mov
mov
mov
sub
xor
jmp
mov
xor
add
cmp
mov
jne
mov
jmp
mov
xor
add
pop
pop
pop
leave
ret
push
mov
sub
movl
movl
mov
mov
push
mov
mov
mov
mov
xor
mov
add
cmp
je
mov
mov
add
push
mov
movl
mov
mov
mov
xor
xor
add
cmp
je
mov
mov
add
mov
mov
sub
mov
xor
add
mov
cmp
je
mov
xor
add
mov
push
movl
jmp
mov
xor
lea
add
shr
cmp
jae
sub
lea
mov
movzwl
and
mov
mov
mov
sub
add
movzwl
shr
xor
mov
mov
mov
mov
xor
lea
mov
mov
mov
xor
add
cmp
jne
mov
mov
xor
add
cmp
jne
mov
mov
add
add
decl
jne
mov
add
mov
mov
mov
xor
cmp
jae
add
mov
mov
xor
add
mov
cmp
jne
pop
mov
pop
jmp
mov
xor
add
pop
leave
ret
push
mov
sub
movl
movl
mov
push
push
mov
xor
push
mov
add
mov
mov
xor
add
mov
mov
mov
mov
xor
mov
addl
mov
mov
xor
mov
addl
mov
mov
xor
mov
addl
mov
mov
xor
mov
addl
mov
mov
mov
test
je
mov
test
je
mov
test
je
mov
mov
xor
mov
add
mov
cmp
jne
mov
xor
add
mov
mov
mov
mov
add
mov
mov
test
je
movl
mov
xor
add
mov
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
cmp
jne
mov
lea
push
mov
xor
add
push
pushl
pushl
call
mov
mov
mov
sub
add
push
call
mov
mov
mov
mov
pushl
pushl
push
call
mov
mov
add
movzwl
lea
mov
mov
movzwl
xor
add
mov
cmp
je
mov
xor
add
mov
mov
movzwl
xor
sub
sub
cmp
ja
mov
add
mov
jmp
mov
mov
lea
mov
mov
test
je
not
and
add
mov
add
push
call
mov
mov
mov
xor
add
cmp
je
push
mov
add
mov
add
push
push
call
mov
mov
mov
add
xor
lea
mov
mov
mov
movzwl
xor
sub
mov
sub
mov
cmp
jbe
mov
mov
cmp
jne
mov
lea
push
mov
xor
add
push
mov
pushl
push
call
test
je
mov
mov
mov
xor
add
je
andl
andl
mov
lea
movl
movl
mov
mov
mov
movl
mov
mov
xor
mov
add
mov
incl
cmpl
mov
jb
mov
mov
mov
mov
mov
lea
mov
mov
mov
movl
mov
mov
movl
movl
movl
movl
movl
mov
movl
mov
movl
mov
movl
mov
movl
movl
xor
mov
xor
sub
mov
inc
cmp
jb
mov
lea
push
call
mov
lea
push
push
call
lea
push
mov
pushl
call
mov
test
je
mov
jmp
mov
mov
cmp
je
mov
mov
cmp
jne
mov
mov
cmp
jne
mov
mov
mov
add
mov
mov
push
push
pushl
call
test
je
pushl
mov
pushl
call
test
je
mov
mov
mov
call
test
je
push
pushl
call
test
je
mov
mov
cmp
jne
mov
lea
push
pushl
mov
pushl
push
call
mov
mov
mov
xor
add
je
mov
mov
movl
mov
pushl
xor
pushl
add
or
add
push
call
movl
jmp
mov
mov
add
call
mov
mov
mov
mov
movl
cmpl
jne
andl
mov
jmp
xor
pop
pop
pop
leave
ret
push
mov
movzwl
movzwl
push
push
xor
lea
test
je
mov
lea
cmp
jb
mov
add
add
cmp
jb
add
inc
cmp
jb
xor
pop
pop
pop
ret
push
mov
sub
movl
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
push
mov
xor
push
mov
mov
add
push
cmp
je
mov
mov
xor
add
cmp
je
mov
xor
add
mov
mov
xor
add
mov
mov
mov
mov
xor
mov
xor
add
add
sub
mov
jmp
mov
mov
xor
add
cmp
je
mov
mov
xor
add
cmp
mov
mov
je
cmp
je
mov
mov
xor
add
cmp
jb
mov
mov
xor
add
cmp
ja
movzwl
movzwl
add
mov
mov
mov
xor
add
cmp
jb
mov
mov
xor
add
cmp
ja
movzwl
movzwl
add
mov
mov
mov
cmp
jne
mov
mov
xor
lea
mov
mov
mov
xor
lea
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
cmp
jne
mov
mov
xor
add
imul
mov
jmp
mov
mov
xor
lea
mov
mov
sub
xor
mov
mov
sub
xor
mov
mov
mov
xor
add
xor
add
imul
mov
movzwl
mov
mov
xor
add
xor
add
imul
mov
movzwl
sub
sub
xor
xor
cmp
jne
mov
mov
xor
add
xor
add
imul
mov
movzwl
mov
sub
xor
cmp
mov
je
mov
pop
xor
pop
add
pop
leave
ret
push
mov
push
mov
push
mov
sub
mov
xor
mov
movl
mov
cmp
je
push
push
movzwl
mov
mov
mov
cmp
jne
mov
lea
xor
mov
xor
mov
mov
sub
mov
xor
mov
cmp
jne
mov
pop
pop
cmp
je
xor
lea
pop
leave
ret
push
mov
push
push
push
movl
mov
call
mov
mov
add
xor
cmp
je
mov
mov
mov
push
mov
mov
sub
mov
xor
mov
cmp
jne
mov
lea
xor
mov
xor
lea
mov
add
xor
cmp
jne
mov
pop
cmp
je
xor
xor
mov
mov
pop
pop
leave
ret
push
mov
push
push
movl
mov
call
mov
mov
sub
mov
xor
mov
cmp
je
push
push
movzwl
mov
mov
mov
cmp
jne
mov
lea
xor
mov
xor
mov
mov
sub
mov
xor
mov
cmp
jne
cmpl
pop
pop
je
xor
inc
jmp
xor
pop
leave
ret
push
mov
push
mov
movzwl
push
lea
mov
push
xor
mov
mov
cmp
je
mov
sub
mov
jmp
mov
mov
add
movzwl
mov
add
xor
mov
cmp
jne
xor
pop
mov
mov
pop
leave
ret
push
mov
sub
movl
movl
mov
xor
add
mov
movl
movl
movl
mov
xor
mov
lea
mov
xor
add
mov
imul
cmp
jae
mov
mov
sub
mov
xor
add
cmp
jbe
mov
add
mov
add
mov
mov
mov
mov
mov
xor
mov
lea
mov
jmp
mov
mov
sub
mov
xor
add
cmp
jbe
mov
add
mov
add
mov
mov
mov
xor
mov
lea
mov
jmp
mov
mov
sub
mov
xor
add
cmp
jbe
mov
add
mov
add
mov
mov
mov
xor
mov
lea
mov
jmp
mov
add
mov
add
mov
mov
mov
inc
mov
jmp
leave
ret
push
mov
sub
movl
push
mov
movl
mov
mov
xor
mov
add
cmp
je
push
push
mov
mov
xor
mov
sub
add
lea
xor
mov
mov
mov
xor
sub
xor
mov
mov
xor
add
cmp
jne
pop
pop
pop
leave
ret
push
mov
sub
movl
movl
mov
mov
mov
push
push
mov
xor
mov
add
cmp
mov
jne
xor
add
jmp
mov
xor
add
cmp
jne
mov
jmp
lea
mov
mov
mov
mov
xor
add
mov
mov
push
call
mov
mov
mov
jmp
mov
sub
mov
mov
mov
call
mov
pushl
mov
call
mov
xor
add
cmp
jne
mov
call
mov
xor
add
push
pushl
mov
call
mov
xor
add
cmp
je
mov
mov
mov
mov
mov
add
cmp
jne
mov
xor
add
pop
pop
pop
leave
ret
mov
mov
jmp
push
mov
mov
sub
cmpl
push
push
push
je
test
je
movzwl
mov
mov
xor
and
mov
xor
add
mov
andl
xor
push
pop
cmp
jae
lea
xor
movzwl
mov
lea
cmp
jne
movzwl
mov
cmp
jne
mov
movzwl
cmpb
je
mov
movzwl
movsbw
mov
sub
xor
cmp
je
push
pop
incl
mov
cmp
jb
jmp
incl
push
pop
mov
movzwl
cmpb
je
inc
cmp
jne
xor
pop
pop
pop
leave
ret
mov
add
xor
xor
cmp
sete
jmp
push
mov
sub
push
mov
mov
cmpl
jne
xor
jmp
pushl
push
pop
call
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
push
mov
mov
call
push
mov
pushl
call
mov
test
je
mov
push
push
mov
add
mov
mov
mov
mov
add
mov
mov
add
add
mov
mov
mov
cmp
ja
mov
xor
mov
cmp
jbe
jmp
mov
mov
movzwl
cmp
jae
cmp
jae
mov
mov
mov
mov
lea
add
add
sub
movl
mov
mov
cmpl
jne
mov
pushl
push
call
mov
test
je
mov
mov
mov
addl
decl
jne
mov
inc
mov
cmp
jb
pop
pop
pop
leave
ret
push
mov
mov
push
pushl
lea
mov
call
mov
mov
mov
xor
cmp
pop
setne
mov
pop
ret
mov
push
jmp
xor
add
mov
add
add
movzwl
mov
cmp
jne
xor
mov
mov
pop
ret
push
mov
mov
shl
add
jmp
xor
sub
mov
inc
inc
mov
cmp
jne
movb
mov
add
pop
ret
push
mov
sub
push
mov
mov
lea
push
mov
mov
mov
mov
push
xor
mov
add
cmp
je
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
mov
movl
mov
mov
mov
movl
mov
mov
xor
mov
sub
add
mov
movl
jmp
mov
mov
xor
xor
lea
mov
xor
div
mov
mov
xor
xor
sub
cmp
jne
mov
add
mov
mov
mov
xor
xor
add
add
cmp
jae
lea
mov
mov
xor
add
lea
mov
mov
cmp
jbe
addl
jmp
addl
mov
xor
inc
incl
add
cmp
jb
mov
mov
test
jne
xor
sub
jmp
mov
xor
mov
sub
add
mov
xor
sub
ror
xor
mov
add
mov
mov
mov
sub
xor
cmp
jne
mov
mov
xor
xor
sub
sub
xor
mov
mov
xor
mov
sub
add
jmp
mov
xor
mov
sub
add
mov
mov
cmp
jne
mov
jmp
mov
xor
add
pop
pop
pop
leave
ret
push
mov
sub
movl
movl
mov
mov
movl
push
push
movl
mov
mov
mov
xor
mov
xor
add
add
imul
jmp
mov
mov
xor
xor
add
add
test
mov
mov
je
xor
xor
add
add
shr
mov
xor
add
xor
jmp
xor
xor
add
add
shr
mov
mov
xor
lea
mov
mov
xor
xor
sub
cmp
jbe
mov
pop
mov
mov
pop
leave
ret
push
mov
sub
movl
movl
movl
push
movl
mov
push
mov
push
xor
mov
add
mov
movl
movl
movl
mov
mov
mov
xor
xor
add
add
imul
jmp
mov
sub
xor
mov
lea
call
mov
mov
mov
mov
mov
mov
xor
lea
mov
mov
mov
xor
xor
sub
mov
cmp
jbe
mov
xor
add
mov
movl
mov
jmp
mov
mov
xor
add
shr
mov
mov
mov
mov
mov
mov
movzbl
xor
mov
mov
mov
xor
add
and
mov
mov
xor
mov
mov
xor
lea
mov
mov
xor
mov
sub
add
mov
mov
mov
xor
add
cmp
jne
mov
mov
xor
add
pop
pop
xor
pop
leave
ret
push
mov
mov
mov
mov
mov
mov
sub
push
push
push
mov
xor
mov
add
cmp
jne
orl
jmp
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
mov
mov
movl
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
mov
xor
add
mov
mov
xor
add
mov
mov
mov
sub
mov
mov
mov
mov
dec
test
mov
je
mov
mov
mov
dec
not
and
mov
mov
add
jmp
mov
mov
mov
xor
add
mov
mov
xor
add
mov
mov
mov
xor
add
mov
mov
movl
movl
movl
mov
mov
xor
add
imul
mov
mov
xor
lea
cmp
jae
mov
xor
add
mov
mov
add
mov
pushl
mov
mov
call
mov
movl
mov
xor
lea
add
push
call
mov
test
je
mov
xor
add
push
pushl
lea
push
call
mov
mov
mov
mov
sub
mov
mov
mov
mov
add
mov
cmp
jb
mov
mov
mov
add
mov
sub
jmp
push
pushl
lea
push
call
mov
mov
movl
movl
movl
lea
mov
lea
mov
lea
mov
lea
mov
mov
xor
add
mov
jmp
cmp
je
mov
xor
mov
add
mov
mov
xor
lea
mov
mov
mov
xor
add
cmp
jne
mov
xor
add
push
push
lea
push
call
mov
mov
xor
mov
mov
xor
movzbl
add
cmp
je
mov
mov
xor
mov
mov
xor
movzbl
add
cmp
je
mov
mov
xor
mov
mov
xor
movzbl
add
cmp
je
mov
mov
xor
mov
mov
xor
movzbl
add
cmp
je
mov
mov
xor
mov
mov
mov
xor
mov
xor
mov
mov
xor
mov
or
mov
mov
xor
mov
cmp
jne
mov
mov
xor
mov
mov
mov
xor
mov
xor
mov
mov
xor
mov
or
mov
mov
xor
mov
cmp
jne
mov
mov
xor
mov
mov
mov
xor
mov
xor
mov
mov
xor
mov
or
mov
mov
xor
mov
cmp
jne
mov
mov
xor
mov
mov
mov
xor
mov
xor
mov
mov
xor
mov
or
mov
mov
xor
mov
cmp
jne
lea
push
call
mov
cmp
je
mov
xor
add
mov
mov
xor
lea
xor
mov
mov
xor
add
cmp
je
mov
mov
xor
add
cmp
jne
mov
mov
xor
lea
jmp
push
pushl
lea
push
call
mov
mov
xor
add
cmp
je
mov
xor
add
push
push
lea
push
call
mov
add
mov
pushl
pushl
mov
add
push
call
mov
mov
xor
add
cmp
je
push
pushl
mov
add
push
call
mov
mov
add
mov
add
mov
mov
mov
xor
add
imul
mov
mov
xor
lea
cmp
jb
mov
mov
mov
jmp
mov
mov
xor
xor
add
add
cmp
jne
mov
imul
mov
jmp
mov
xor
add
cmp
je
subl
jmp
andl
pop
pop
pop
leave
ret
push
mov
and
mov
sub
push
mov
push
push
cmp
jne
push
jmp
mov
cmp
jne
push
jmp
mov
cmp
jne
push
jmp
mov
cmp
jne
push
jmp
mov
mov
cmp
jne
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
mov
add
mov
mov
mov
mov
mov
mov
mov
add
mov
mov
mov
push
push
pushl
push
call
mov
mov
pushl
xor
add
mov
lea
push
push
pushl
pushl
pushl
call
mov
mov
xor
add
cmp
je
mov
mov
xor
add
imul
mov
jmp
mov
cmp
jne
push
jmp
mov
cmp
jne
push
jmp
mov
cmp
jne
push
pushl
pushl
push
pushl
pushl
pushl
call
mov
mov
pop
pop
pop
mov
pop
ret
push
mov
sub
mov
mov
movl
mov
xor
add
mov
mov
push
mov
pushl
lea
pushl
push
pushl
pushl
pushl
call
mov
mov
leave
ret
jg
jge
add
sbb
sub
or
add
leave
mov
mov
jl
stos
in
dec
loopne
mov
negl
testb
mov
pushf
shl
cmp
imull
les
mull
or
xlat
xchg
jno
pop
hlt
pop
sbb
mov
lock
stc
sub
and
sub
jno
pop
test
jns
pop
pop
popa
jecxz
rcll
sub
push
mov
pop
mov
or
cmp
adc
adc
mov
add
outsb
adc
xchg
or
int3
jno
or
xchg
mov
dec
inc
sti
push
leave
ss
jbe
xor
mov
cmc
cmpsl
adc
icebp
mov
mov
out
mov
inc
pop
aas
je
dec
push
test
pop
fiadds
mov
fadds
pop
sti
outsb
push
and
jne
addb
cmp
addl
enter
jp
cmp
mov
mov
ret
loopne
call
push
aas
pop
add
jmp
jae
out
cmp
mov
cmpl
subl
adc
hlt
mov
jae
sub
add
lret
ds
xchg
push
push
lods
or
sbb
cld
xchg
pushf
movsl
lock
dec
in
push
lods
or
jg
xchg
scas
dec
pop
sub
enter
sbb
cmp
je
mov
sub
sbb
std
mov
out
aam
loopne
mov
int
aaa
dec
fisubrs
and
ret
mov
add
inc
adc
jp
xor
push
push
and
aad
cmc
in
push
push
jle
add
out
leave
dec
cltd
scas
mov
sub
sbb
or
mov
or
mov
inc
add
jmp
ljmp
and
sbb
add
add
idiv
jg
mulb
repz
add
add
add
push
push
ljmp
std
mov
and
sub
jecxz
cmp
mov
jb
aas
jmp
fucom
jle
push
clc
jae
cld
jp
mov
andl
mov
jne
lcall
hlt
push
popf
mov
pop
pop
xlat
mov
fcomp
stos
or
xchg
pusha
adc
cli
cmc
cltd
popf
or
clc
nop
and
or
or
fcom
int3
add
dec
movsb
jecxz
xchg
inc
mov
xor
stos
pusha
and
adc
adc
das
jle
out
mov
push
pop
in
stos
and
mov
lcall
je
nop
sbb
add
ja
adc
stc
mov
call
sub
dec
scas
rcrb
dec
and
and
in
mov
xchg
bound
sbb
ljmp
call
mov
cmp
add
adcb
xchg
aam
jbe
xor
add
ror
mov
mov
ficompl
xor
rorl
push
pop
fisttpl
fldt
or
hlt
pop
pushf
dec
dec
clc
hlt
cs
in
mov
ljmp
pop
scas
sbb
inc
nop
adc
mov
ljmp
mov
jg
popf
or
inc
arpl
loopne
fidivl
mov
lock
and
popf
loopne
lcall
mov
xor
inc
and
test
mov
pop
inc
and
lret
cmp
push
push
xchg
mov
pop
mov
add
jg
in
sarb
lods
dec
dec
in
cwtl
hlt
inc
scas
dec
push
in
stc
mov
aas
int3
rclb
lahf
add
sub
insl
xchg
call
sbb
int3
add
dec
dec
fstpt
fwait
cmpsb
lds
add
pop
sbb
pop
std
jg
jnp
addl
add
std
add
add
sti
data16
adc
jle
sbb
dec
das
cmp
jbe
add
add
leave
and
bound
push
jge
in
dec
xor
cmpsl
shlb
xchg
dec
loope
add
inc
nop
fldcw
sarb
xchg
pop
addl
mov
inc
out
loope
fisubs
pop
sbb
jp
faddl
hlt
daa
adc
sbb
aam
push
push
mov
imul
cmp
add
test
jno
scas
jno
xchg
bound
xor
jae
pop
cld
hlt
decl
leave
sbb
push
dec
pop
out
mov
cmp
ss
mov
xorl
popf
and
push
add
cmpsl
out
in
out
and
imul
push
lods
push
push
sbb
xchg
ret
mul
jns
cmp
push
xchg
jle
cli
imul
pop
jle
aam
lods
inc
dec
dec
jno
jle
inc
and
xor
adc
and
andl
xor
lods
and
mov
pop
neg
out
setg
movsl
sbb
dec
or
out
out
mov
xchg
inc
mov
hlt
xor
sbb
fildll
xchg
orb
call
jmp
mov
fisubrs
into
rorl
xchg
inc
jo
iret
outsl
mov
lcall
xor
inc
int3
adcl
cs
mov
mov
sub
mov
pop
sarb
pop
mov
adc
imul
lahf
int
sarb
mov
mov
lret
or
inc
inc
xchg
pop
mov
xor
push
inc
push
mov
lds
daa
sti
mov
xchg
dec
jl
out
subl
add
add
add
add
mov
int
mov
push
decl
add
addr16
lret
pop
je
sub
icebp
aas
lods
jl
cmpsb
xor
push
dec
rcrl
sub
fimuls
xchg
or
or
push
fbld
shrl
sbb
sbb
sbb
xor
pop
loop
scas
out
iret
lret
pop
popa
stos
leave
sub
dec
outsb
jmp
movsl
test
out
mov
push
int3
xchg
addr16
test
fistpl
sbb
sub
test
aaa
mov
jmp
insl
xor
xor
movsb
aad
imul
cmpsl
inc
pop
cmp
outsl
fnstcw
or
ds
jno
xor
pushf
iret
dec
sbb
out
scas
pop
adc
ret
or
fs
dec
inc
xlat
pusha
movsl
cmpsb
rsm
dec
leave
lret
jne
xor
shll
mov
pop
ds
pop
cmc
leave
sbb
xchg
pop
mov
inc
jb
rcrl
fimull
add
nop
insl
inc
repnz
jl
scas
rcrb
push
pop
mov
ret
scas
xor
mov
or
ds
out
push
ss
adc
std
scas
sub
in
mov
wbinvd
testl
inc
dec
push
testb
cwtl
pusha
or
inc
aad
mov
sub
aaa
lret
andb
stos
idivb
adc
push
out
outsl
in
and
sbb
mov
je
out
push
mov
xor
lods
je
or
sub
push
or
mov
enter
ss
and
and
insl
sub
jnp
aam
mov
cwtl
movsl
or
pop
xchg
sub
push
xchg
sub
out
ds
add
and
pop
cmpsb
push
lahf
pop
cmp
imul
add
add
hlt
mov
std
jl
xor
jg
pusha
sbb
add
add
mov
xor
das
mov
pop
jno
rcrb
ret
rorl
jecxz
imul
pusha
incl
andb
loopne
sahf
mov
and
push
mov
mov
leave
dec
in
add
xchg
cs
loopne
scas
or
repz
sbb
jb
pop
insb
sbb
shrl
rcll
daa
pop
pop
js
xor
mov
xor
mov
addr16
and
jmp
pop
fcompl
fcmovbe
pushf
pop
mov
shrl
jmp
xor
lea
lahf
and
xor
mov
mov
pop
xor
xchg
xchg
sbb
cmp
adc
and
pushf
in
cmp
xor
mov
gs
or
add
popf
inc
pop
push
movsb
test
jnp
push
into
fcmovu
pop
dec
ja
sbb
push
or
and
shll
out
insl
sub
stos
frstor
aaa
std
fistpll
repz
dec
fsubl
fcmove
xor
cli
xchg
aad
ss
inc
imul
mov
pop
ret
ret
cld
lock
test
jb
adc
jb
sub
adc
mov
loope
hlt
xor
repz
pusha
jp
orl
cld
loopne
loop
enter
dec
or
adc
jae
push
scas
aaa
ja
aad
jno
sahf
xor
fisubl
pop
cmp
xchg
xchg
hlt
xchg
scas
adc
dec
insl
je
inc
lods
daa
jmp
xchg
ret
les
mov
mov
adc
fisubs
xchg
xor
cmpsl
adc
cltd
dec
sub
sbb
div
cmpsl
mov
add
add
imul
fdivrl
mov
mov
add
add
add
scas
mov
cltd
sbb
sbb
aaa
push
lds
scas
sbb
aad
stos
cmpsl
push
test
test
ficoml
adc
mov
mov
add
sar
jl
mov
aaa
pop
fcoms
mov
mov
mov
and
inc
shrl
pop
clc
dec
pop
cmp
or
mov
pusha
jbe
leave
pop
xor
mov
xchg
or
inc
aam
xor
xor
out
lea
mov
add
ljmp
adc
arpl
aas
jg
lret
imul
inc
xchg
decb
js
xor
mov
shlb
lea
cli
xor
push
sbb
testb
mov
pop
mov
jo
fwait
mov
scas
dec
ds
sub
lcall
dec
aas
into
imul
pushf
mov
jae
mov
cmp
mov
dec
aas
leave
nop
push
and
sub
and
xchg
pop
xchg
pop
popf
jp
pop
js
mov
push
andb
imul
mov
mov
pop
das
stc
push
out
stos
push
or
addr16
cmp
or
incb
or
adc
inc
fwait
mov
mov
adc
mov
xchg
ret
das
jbe
inc
fwait
xchg
mov
ljmp
and
or
lret
lods
dec
add
jge
test
push
and
or
aaa
and
mov
ja
into
xchg
notl
cmp
pop
adc
mov
push
add
xchg
stos
addb
mov
ret
into
sbb
in
adc
pusha
dec
ljmp
dec
into
mov
mov
test
pop
fdivl
jp
mov
cmpsl
sbb
jg
pop
fstps
testb
add
in
das
inc
mov
mov
cmpsl
lods
sbb
lahf
jl
stc
into
out
sti
pop
lcall
popf
jnp
sub
cmp
add
pop
ja
adc
loopne
mov
mov
add
ja
icebp
sub
ja
cmc
jecxz
inc
jle
jns
sahf
lea
jbe
stos
in
sahf
aaa
dec
xchg
adc
ret
ljmp
cmp
test
jge
inc
addr16
xchg
mov
cmpsl
fnsave
ret
cmp
cmp
cmpb
mov
std
stos
sub
mov
bound
fs
decb
fsts
jmp
lcall
cmp
or
xchg
mov
add
in
or
push
aaa
gs
pop
ret
imul
imul
mov
mov
arpl
push
lods
xchg
sub
repnz
pusha
jp
push
cs
aad
ljmp
adc
rcr
push
bound
or
dec
lods
or
inc
inc
jae
jns
cmp
push
inc
cli
cmp
mov
sub
test
push
in
pop
adc
jp
les
sub
push
ss
inc
sub
pop
dec
jmp
inc
pop
inc
xor
iret
movsb
mov
mov
dec
bound
stos
cmp
mov
aad
adc
jbe
hlt
ja
mov
stos
popf
and
cmp
pop
jbe
cmpl
test
jae
aas
push
sbb
xor
dec
dec
out
and
xchg
andb
aad
pop
ds
fwait
in
xor
pop
mov
sbb
xchg
pop
mov
test
cs
sbb
mov
repz
mov
add
sbb
les
into
and
add
popf
paddd
fidivl
mov
nop
add
std
add
add
mov
popf
jne
ret
test
xchg
or
std
push
sti
sub
xor
out
mov
imul
cli
cs
push
cmc
cmp
dec
sub
xchg
dec
aas
cld
xor
sub
hlt
and
dec
push
add
xchg
add
mov
lods
pop
lds
pushf
ja
icebp
into
sti
cs
fadd
rcrb
inc
push
sub
mov
das
push
xchg
mov
xchg
xchg
sti
add
subl
pop
mov
adc
inc
xchg
add
mov
out
adc
mov
lea
sbb
jnp
xor
pop
jno
push
ret
jecxz
or
lods
sbb
mov
sub
cmp
push
xchg
fs
jne
pop
insl
push
sub
xor
mov
lcall
xor
xor
in
mov
cmp
andl
shrl
lret
dec
ljmp
sarb
cli
movsb
lcall
into
pushf
adc
sbb
lea
es
inc
pop
push
pop
addr16
ss
ret
xorb
push
movsb
mov
aaa
xor
dec
aaa
inc
prefetchwt1
or
sarl
add
stos
sub
mov
pusha
shr
cmpsb
inc
stc
lret
lds
fwait
cmp
add
imul
add
adc
adc
das
xchg
xor
adc
fildl
fiadds
push
mulb
pushf
jne
cmpsb
push
in
adc
stc
clc
sub
adc
test
ficompl
mov
aad
lcall
jge
inc
shll
sub
imul
gs
mov
xchg
movsb
and
ret
mov
sahf
es
call
mov
or
out
xchg
fidivs
lods
pop
fisubrl
add
push
movsb
lea
sub
testb
lock
add
std
add
add
hlt
das
stos
fwait
dec
popf
mov
pushf
fcoms
sbbl
stos
and
fsqrt
and
and
mov
push
cld
mov
mov
xor
iret
cwtl
lret
or
xor
cmp
jge
xchg
loop
push
pop
mov
xchg
fwait
inc
pop
mov
adc
test
loopne
loop
sub
ror
negb
mov
pop
mov
addr16
mov
iret
xor
pop
cmc
dec
movsl
idivb
pop
leave
xor
sbb
addr16
inc
xor
inc
cli
into
popf
ret
lods
dec
fwait
push
pushw
dec
xor
ja
add
enter
movsb
add
sub
pop
movsl
xchg
jno
scas
mov
jbe
jbe
jne
clc
rolb
cmpsl
inc
jle
popf
sub
mov
mov
push
xchg
push
repnz
lret
xchg
aas
dec
mov
in
jecxz
movsb
push
les
sbb
dec
jle
lcall
cli
mov
dec
imul
pop
jo
jmp
fs
ja
aaa
daa
test
ss
sbb
lods
xchg
lds
out
sub
in
or
xchg
add
push
bound
xchg
mov
leave
push
ljmp
call
ja
subb
sbb
and
pop
ds
jno
fnstsw
jmp
mov
outsl
mov
and
cld
xor
mov
xlat
push
mov
sub
std
lock
mov
or
push
mov
mov
mov
cwtl
enter
cmp
sbb
sbb
mov
idiv
cmp
pusha
push
movsb
and
jne
iret
xchg
loopne
shll
mov
jmp
mov
call
test
fldt
sbb
insl
ret
mov
add
mov
cmp
popl
mov
pop
std
dec
in
xchg
add
std
add
add
test
out
leave
jle
sub
arpl
jmp
cmc
loope
mov
int
aas
push
jp
xor
cltd
call
fs
jle
or
aam
pusha
pop
and
jne
jmp
or
xchg
loope
pop
outsb
loop
lret
lahf
fidivl
test
je
pop
mov
test
or
mov
add
jno
push
sbb
adc
adc
repz
adc
pop
pop
clc
imul
gs
aas
outsl
mov
jno
test
int3
fisubrl
inc
ret
nop
ror
inc
mov
div
pop
fisubs
push
ret
hlt
test
cmpsl
loope
adc
out
call
fwait
add
in
push
loope
mov
js
pop
lcall
cmpsb
jp
pop
inc
mov
sbb
clc
sbb
jbe
jae
mov
hlt
cli
cmc
lret
scas
adc
or
dec
dec
jno
cmp
jg
jbe
mov
lods
adc
mov
cs
sub
test
adc
js
test
sub
ret
add
lea
dec
lret
adc
leave
in
inc
scas
jle
rclb
pop
cmp
mov
cmp
push
xchg
and
add
jmp
mov
mov
mov
adc
clc
shl
jno
adc
lods
addr16
frstpm(287
add
psrad
xchg
xor
nop
cmpb
xor
out
jp
test
or
hlt
mov
test
xlat
notl
lcall
pusha
pop
fcoml
mov
aaa
dec
mov
or
jecxz
jle
cld
call
or
rcrb
dec
movsl
sbb
cmp
clc
out
cmp
cmpsl
add
dec
xchg
add
add
xchg
std
jg
mov
ficoml
ljmp
add
push
pop
jbe
add
std
sarb
imul
rcrl
push
jbe
imul
and
xor
pushf
into
pop
ja
or
rol
cltd
scas
int3
out
mov
push
test
test
cs
outsl
insb
clc
push
mov
inc
push
mov
out
jns
sub
mov
mov
mov
data16
pop
xchg
fs
jmp
flds
xchg
adc
pop
dec
sub
jne
pop
sub
loopne
call
inc
loopne
sub
adc
sti
mov
mov
xor
aaa
fmuls
mov
sbb
jbe
test
cmpsb
insl
mov
repnz
jg
jge
push
lcall
mov
orb
cmp
cmpsb
call
sub
imul
pop
inc
lcall
mov
add
pop
mov
inc
mov
cmp
sub
mov
das
int3
mov
push
sbb
pop
int
sub
leave
mov
aad
cli
stos
xor
push
hlt
mov
xchg
in
clc
ret
loopne
das
js
cmp
jl
lods
andl
cltd
lcall
repnz
jae
lret
gs
enter
jecxz
cwtl
sub
pop
and
push
mov
daa
mov
push
rolb
fwait
pop
cmp
repz
mov
loope
xchg
fsubs
inc
pushf
das
mov
pop
jecxz
call
mov
imul
mov
mov
pop
mov
outsb
mov
dec
pusha
das
out
xor
repz
icebp
push
inc
cltd
lcall
iret
repnz
xchg
sbb
add
and
aad
test
ret
xor
or
out
int
rclb
mov
cld
sbb
and
lret
and
ret
or
xor
fidivs
out
add
add
idiv
iret
rorl
adc
cwtl
add
std
add
add
sub
in
mov
lods
inc
sub
mov
mov
popf
and
lock
cmp
arpl
or
pop
ds
adc
mov
fsubrs
sbb
jge
pop
rolb
dec
fisttpll
mov
dec
xor
rcrb
push
sub
insb
iret
jns
xlat
mov
stos
and
mov
lock
sub
and
xlat
jecxz
pop
cmp
imul
cmp
int
insb
dec
enter
stos
popf
icebp
xchg
ficoml
insb
mov
aad
mov
sbb
inc
adc
insb
in
inc
sub
cmc
imul
and
pop
bound
andl
orb
std
push
outsb
dec
cmp
sub
dec
popa
mov
lret
test
call
mov
loopne
test
pop
movsb
inc
push
add
jno
insb
out
lret
push
fwait
aas
movsb
ficomps
pushf
aad
fidivl
and
out
test
push
dec
addr16
or
out
ss
pop
sub
mov
mov
mov
sub
hlt
fs
outsl
mov
int
addl
dec
pop
inc
mov
inc
sub
inc
pushl
les
push
cmp
mov
shll
dec
call
xchg
cmc
dec
lret
lods
cltd
sub
orb
push
cmp
xor
jge
loopne
into
sbb
pop
nop
inc
fnstcw
jnp
fnclex
and
pusha
enter
push
imul
jo
pop
jmp
bswap
dec
push
xor
fisubrs
lods
int3
push
movsb
nop
outsb
imul
push
sub
fbld
or
out
pop
mov
sub
es
add
add
ret
mov
ja
or
lcall
idivb
adcb
mov
test
out
push
fnstcw
and
in
adc
pop
sub
pop
test
shlb
sti
sub
sbb
mov
xor
mov
adc
jge
mov
adc
mov
fcoms
xchg
sub
mov
aaa
daa
andb
mov
push
push
lret
and
lahf
jp
cmpsl
mov
add
mov
ja
push
adc
adc
movsl
scas
das
ret
push
sbb
aaa
rcrl
adc
scas
std
imul
fildl
icebp
dec
pop
out
xchg
rcr
or
rcrl
inc
xchg
pop
hlt
nop
fildll
pop
sub
or
pop
fwait
out
les
xchg
daa
loop
daa
add
leave
xchg
rolb
popa
fwait
add
je
inc
js
inc
push
fsubp
xchg
stos
push
mov
mov
jnp
sti
xor
stos
shrb
sub
pop
jnp
pusha
call
flds
adc
dec
pushf
ds
scas
hlt
test
out
and
mov
mov
xor
xor
stos
ror
jbe
int3
inc
jnp
je
loop
ds
and
xchg
dec
inc
xchg
mov
aaa
incl
mov
lcall
adc
int
or
arpl
cld
cli
cwtl
push
cwtl
lret
shll
pop
cmpsb
pop
mov
subb
pop
daa
adc
mov
push
mov
mov
mov
mov
hlt
push
jb
in
sbb
mov
lcall
testb
movsb
cmp
inc
mov
cmp
ljmp
and
inc
inc
adc
ds
xor
push
fwait
je
mov
fstpl
in
lods
mov
add
add
push
jle
xlat
lret
push
testl
pushf
add
std
add
add
fnsave
pop
ror
sbb
clc
cltd
cmp
lret
pop
xor
int
or
push
iret
pop
xor
mov
ret
xchg
movsb
push
ds
aad
mov
nop
sbb
stos
pop
adc
jecxz
insl
xchg
pop
into
xor
outsl
stos
cmc
cltd
adc
aaa
int3
mov
mov
stc
mov
ret
cmp
jno
scas
add
mov
sbb
cmpsl
aas
xor
or
js
mov
test
out
test
xchg
mov
mov
xchg
xchg
pop
jg
and
dec
nop
fisubs
fidivs
xchg
mov
sub
mov
prefetcht2
mov
sti
cli
jge
mov
insb
std
push
loopne,pn
in
mov
jge
rcrb
lds
jecxz
mov
mov
dec
or
es
in
ja
imul
scas
mov
dec
aad
add
inc
test
ficoms
shll
leave
and
sbb
imul
pop
arpl
shrb
and
lods
inc
xchg
cmp
jl
jge
stos
inc
mov
push
or
mov
cmp
shr
movsl
insl
insl
dec
lods
jp
int
mov
jne
cli
cmpsl
popa
aas
rol
stc
lcall
push
push
adc
cmc
fldl
fs
push
cmc
es
aaa
sub
pop
mov
in
outsb
fs
test
leave
stc
jns
scas
dec
hlt
adc
movsb
sahf
ret
and
inc
inc
push
test
mov
int
fadd
mov
mov
daa
cmp
dec
divl
addr16
pop
cmp
inc
addr16
cmp
das
dec
xor
fwait
sbb
sbb
aam
stos
sahf
push
xor
xor
jle
mov
xor
pop
les
jge
add
mov
movsb
dec
ss
or
add
add
push
or
pop
out
repz
fucomp
jb
and
ficomps
add
notl
outsb
js
sub
push
enter
mov
jmp
rol
adc
aaa
and
xlat
rolb
out
lcall
out
cmpsl
rolb
data16
add
mov
andb
mov
in
lods
and
iret
adc
hlt
int
cli
repnz
or
sbb
ret
int3
cmp
subl
mov
nop
dec
adc
mov
out
data16
sti
or
jae
fists
fnstenv
mov
mov
mov
adc
gs
shrl
pop
mov
lcall
mov
push
mov
bound
lods
loope
ljmp
inc
cld
pushl
cmpsl
pop
or
sbb
cmp
xor
rclb
clc
cwtl
or
mov
mov
jecxz
xor
leave
inc
aas
add
xlat
jb
pop
jle
int
push
cmp
pop
inc
sahf
dec
std
mov
aam
stos
adc
andl
dec
add
inc
repz
cmp
or
ljmp
pop
out
stos
mov
into
and
stc
mov
pop
xor
cltd
ret
call
pusha
cwtl
into
sti
cmpsl
dec
test
inc
lret
movl
andb
mov
loop
std
dec
cmpsl
lret
notl
outsl
push
addr16
or
jb
pop
test
cmpsb
adc
arpl
sbb
sbb
adcb
jle
add
fwait
fwait
ret
mov
hlt
inc
pusha
leave
test
stc
out
add
popf
jle
jle
inc
sbb
sub
insl
adcl
add
inc
push
lds
mov
sahf
fdivrl
test
cli
lcall
cli
shll
add
add
xchg
insl
mov
out
nop
sbb
call
std
add
add
xchg
mov
lret
adc
call
inc
push
inc
push
andb
cmovae
pop
cld
rcll
jge
adc
stos
fcmovu
dec
ljmp
mov
aaa
xor
mov
lods
jo
or
sub
xchg
popa
sarb
mov
xchg
movsl
aam
mov
sub
push
sub
dec
bound
mov
cmp
insl
xchg
mov
dec
and
pop
push
inc
sti
shl
jle
pop
jns
in
adc
insl
sarb
and
arpl
into
or
xor
mov
fs
adc
adc
add
push
cmpsl
dec
lock
mov
fmull
aam
xchg
and
xchg
loope
jmp
pop
and
mov
xor
mov
mov
xchg
push
mov
xor
mov
ja
cmp
xchg
sbbl
insl
push
pop
pop
and
jne
sbb
fistps
sbb
rcl
sub
inc
cmp
xor
adc
jg
out
inc
into
ljmp
gs
xor
mov
ficoml
xor
and
xor
mov
jecxz
xor
pop
jg
clc
call
insb
int
test
clc
mov
xor
push
out
out
jbe
faddl
push
sbbb
roll
push
addl
and
loop
cmpl
enter
push
cmp
rcrl
add
xchg
js
bound
cmc
les
daa
cwtl
xchg
sbb
xor
repnz
add
ffree
icebp
or
ja
inc
cmp
xchg
push
adc
fstl
dec
das
daa
sbb
push
in
adc
icebp
add
add
ja
idiv
pop
out
cmp
and
mov
add
mov
out
cmp
jno
cmc
mov
fcmovu
jne
shrb
xchg
or
inc
inc
xchg
es
lods
dec
or
les
fisubl
adc
div
sbb
sub
fs
popa
loopne
pop
lock
movsb
aam
in
and
mov
push
ljmp
pop
xor
leave
mov
fisttpll
cmp
fcoml
decb
xchg
test
nopl
pop
js
sbb
mov
testb
outsb
jge
pop
jecxz
fwait
into
xor
xorb
iret
inc
dec
ss
aam
add
movsl
mov
adc
lret
sub
lock
ds
and
inc
inc
movntq
and
scas
jns
ret
sbbl
mov
cltd
lahf
xor
pop
fdivs
jns
xchg
sti
sbb
lea
shrb
cmp
fimuls
xchg
lahf
and
outsl
sahf
ljmp
mov
jmp
jge
jmp
jne
mov
stos
lds
shrl
aam
repz
adc
pop
mov
add
pop
ret
lret
pop
add
inc
movsl
fcomps
add
pop
push
cmp
sub
xchg
sbb
or
sbb
je
jecxz
nop
mov
cmpsb
test
fcoms
cmp
and
stc
test
ds
mov
jnp
imull
xchg
sub
cmpsl
xchg
fimull
nop
adc
aaa
shll
mov
or
xor
test
and
xchg
cmpsb
adc
shrb
lds
lock
xchg
pusha
std
push
adc
adc
outsl
out
stc
popf
and
and
and
lods
inc
subl
aam
sbb
inc
add
add
sti
mov
inc
pop
cmpsl
jge
aad
add
std
add
add
divl
or
int
mov
push
push
pop
and
call
push
jbe
repnz
dec
cld
jmp
popa
lret
lods
cmp
lret
cmp
dec
in
int
lahf
cmp
cltd
xor
arpl
arpl
cmp
imul
push
gs
sub
sbbl
es
mov
aaa
testb
das
xor
push
mov
jmp
stos
divl
mov
in
xor
aam
adc
cmp
mov
mov
enter
sub
jo
push
dec
dec
or
sarl
lea
inc
lret
mov
fidivs
jns
inc
jecxz
call
ljmp
jb
sbb
push
outsb
out
dec
inc
ds
add
in
xchg
outsl
mov
xchg
cmp
fisubs
fldl
in
lret
fisubrl
mov
jp
pushf
add
and
ret
rolb
jbe
dec
adc
mov
lret
xchg
pusha
jns
clc
fdiv
int
pop
xor
fildl
popf
icebp
add
rcr
lods
loop
leave
jae
xor
out
jbe
rcrb
hlt
or
lahf
nop
push
in
sub
mov
inc
mov
in
cmp
popf
sarb
aas
repnz
fimull
adc
mov
int
push
ret
cmp
fistl
loopne
inc
sub
aas
mov
daa
insl
inc
in
push
outsb
pop
and
mov
test
test
js
jbe
push
jp
and
xchg
mov
fwait
out
out
add
inc
imul
add
scas
mov
ja
nop
addl
inc
and
pop
and
ss
sub
xchg
cmp
test
mov
call
add
add
add
add
sahf
xor
sub
cmpsb
add
std
add
add
add
lahf
pavgw
ret
mov
mov
aas
aam
pminsw
pop
mov
sahf
add
test
adc
mov
mov
dec
imul
adc
cmpsb
test
ret
fwait
es
or
jno
or
popf
das
jle
imul
out
inc
mov
fwait
lds
or
push
addb
add
pop
pusha
out
outsl
subb
xchg
cwtl
orb
and
rorl
mov
and
adc
jae
dec
test
push
push
xchg
pop
test
xor
outsl
xchg
sub
pop
call
dec
ljmp
mov
scas
sub
lods
popf
mov
sub
ja
cmp
das
mov
cmp
cmp
dec
and
inc
lock
or
push
add
sbb
je
mov
repz
xor
dec
fisubl
add
addr16
ficomps
xor
xlat
sbb
sub
push
or
int
ret
xchg
das
jmp
cmp
mov
arpl
icebp
scas
fadds
push
sbb
aaa
xor
adc
inc
fs
cmp
pop
adc
mov
adc
mov
sbb
loopne
add
cmp
std
and
sub
mov
pop
dec
cmpsl
mov
sbb
inc
loopew
cmp
and
jnp
dec
mov
rol
and
adc
arpl
mov
push
sbbl
test
jb
std
idivb
sub
and
andl
andb
jmp
lahf
sahf
inc
or
loop
cli
pop
mov
inc
xchg
xor
add
add
std
in
mov
mov
std
cmp
xchg
iret
test
add
add
add
std
dec
xchg
adc
rorl
or
cld
nop
popf
in
ds
mov
xrelease
cmp
xchg
push
pop
icebp
sbb
pop
rcl
loop
sbb
cmc
rcrl
jbe
cli
sub
push
xor
inc
jmp
mov
fcmovne
shll
adc
jl
inc
imul
testl
pop
in
sub
fnsave
int
xchg
xorb
scas
jmp
cwtl
loop
loop
aaa
loopne
xchg
mov
rolb
pop
dec
xor
sbb
ljmp
movsl
das
test
mov
pop
add
and
xchg
shr
xchg
xor
out
insl
and
mov
sub
ret
and
ret
shl
adc
pop
inc
dec
mov
sub
das
cmp
xchg
adc
xchg
fnstenv
aas
lock
sbb
icebp
add
gs
das
cli
push
lret
shll
and
adc
pop
outsb
insb
xchg
nop
stc
sti
jae
xor
sub
push
movsl
sbb
dec
mov
out
mov
jmp
mov
ficoml
inc
stos
sbb
stos
and
xchg
ljmp
jbe
pop
mov
adc
aaa
inc
leave
fmuls
push
fldcw
pop
cvtdq2ps
sbb
arpl
ss
jns
fsubrl
add
scas
xchg
jb
fldl
mov
int
cli
test
mov
and
sarl
dec
mov
ret
sub
cmpsb
shrl
mov
fldenv
jns
call
xchg
mov
outsl
mov
fsubrl
loop
jbe
push
jge
outsl
mov
outsb
cltd
std
inc
pop
mov
inc
enter
cmpsl
mov
add
rolb
testb
inc
mov
repnz
add
std
add
add
push
int3
leave
pop
jge
shlb
inc
add
addb
add
or
inc
nop
incl
jl
sub
std
fistpll
xchg
ror
hlt
jno
push
lods
and
sub
push
lea
into
mov
in
lahf
dec
arpl
add
imul
outsl
jmp
lret
and
jne
xchg
mov
jecxz
push
in
clc
das
add
jg
cmp
xor
pop
mov
mov
xchg
lret
ret
mov
push
lahf
fdivrs
mov
out
sbb
pop
mov
jecxz
cmp
ret
or
add
sub
lods
movsb
dec
sbb
testb
cmc
iret
popf
jmp
or
cmc
fmuls
inc
imul
push
dec
xor
and
aaa
sub
dec
jns
xor
test
mov
cmp
push
lock
sub
outsl
popf
jne
sti
add
cmpl
idivb
andnps
xchg
mov
mov
jbe
push
ds
mov
cmp
mov
cmp
jnp
inc
iret
clc
add
sub
add
sti
aas
adc
imulb
scas
sub
dec
mov
cmpl
sbb
cmovno
or
sub
pop
ret
shr
out
aam
and
sbb
test
out
pop
les
mov
push
loopne
xchg
movsl
add
adc
stc
lds
jge
cltd
inc
lret
gs
das
sub
test
aam
ja
insb
mov
pop
mov
addr16
sub
ror
lcall
or
jl
mov
jne
jbe
cs
lcall
cmpl
scas
not
or
shll
dec
loopne
or
out
xor
add
popa
data16
gs
mov
jmp
lods
add
std
add
add
and
filds
dec
and
xchg
xor
shll
cmp
out
in
mov
cmp
hlt
js
stc
testb
outsb
pop
cmp
cmpl
lods
out
test
lcall
mov
fidivrl
fucomp
les
stos
pop
fsubs
mov
pop
mov
mov
dec
cmc
jge
inc
pop
xchg
sub
iret
sbb
mov
jnp
in
insl
cmp
call
fxtract
xchg
xchg
ds
leave
dec
adc
or
xchg
cld
in
xchg
loope
sahf
push
cltd
xchg
cld
dec
xor
mov
mov
negl
inc
cmp
sub
xchg
ficoml
cmp
and
enter
in
xchg
insl
or
cmp
std
into
mov
xchg
mov
sar
fidivrl
ret
adc
shrl
into
scas
ljmp
ss
notb
fisubrs
dec
cmp
pop
push
lret
mov
lret
xor
mov
loop
lret
jmp
mov
enter
imul
dec
fsts
lret
xchg
subb
dec
das
jo
push
lret
vmovups
out
lahf
push
mov
lret
dec
mov
lcall
and
sbb
mov
sti
popf
dec
add
daa
shl
cli
pop
xor
sbb
fs
scas
in
mov
je
scas
in
xchg
dec
mov
insb
or
mov
es
push
imul
gs
inc
fs
cmp
pushf
inc
leave
add
int
sbb
mov
sub
xor
xchg
or
mov
push
fstpl
mov
fchs
xchg
push
out
mov
ljmp
dec
inc
add
add
cmp
cli
cmp
adc
and
mov
scas
add
std
add
add
lds
test
xor
xchg
rorl
jae
popf
mov
xchg
inc
icebp
repz
lds
sbbl
iret
stc
lock
scas
stos
and
adc
cwtl
out
rol
mov
test
in
jns
pop
shll
mov
fs
add
fstps
test
sbb
lods
cmp
rolb
sti
test
loopne
daa
jbe
and
adc
inc
adcb
dec
shl
or
imul
jns
lahf
adc
lds
mov
jge
push
sbb
sbb
inc
inc
ret
and
jl
add
push
jnp
sub
or
add
mov
sbb
pusha
in
sub
repz
hlt
add
jl
mov
movsb
decl
sub
ret
iret
xor
dec
mov
mov
cwtl
inc
cmp
push
mov
xor
pop
adc
and
je
pop
add
mov
inc
jns
add
inc
addb
sbb
in
jle
xor
xor
vmaxsd
xchg
jns
aaa
outsb
out
sbb
mov
sbb
push
test
pusha
push
ret
fidivs
mov
dec
ljmp
push
int
stc
sbb
pop
int
and
sbb
mov
sahf
jbe
mov
and
sub
xor
stos
fldenv
xor
xor
shl
cmp
adcl
pop
jp
mov
pop
dec
push
scas
daa
jmp
arpl
movsl
in
test
ret
ficomps
test
idivl
lcall
dec
mov
pushf
and
cwtl
into
test
movsb
mov
nop
mov
dec
cs
icebp
add
add
and
push
push
cmp
inc
push
cmp
mov
add
add
add
pop
int
in
xor
loopne
add
xchg
dec
push
push
xchg
loope
stos
push
xchg
mov
mov
xlat
test
xchg
push
sarl
inc
mov
call
pop
clc
jp
cs
loopne
shll
adc
mov
repz
jbe
in
test
xchg
les
pop
adc
jno
push
mov
mov
sbb
lret
and
ljmp
jno
mov
dec
clc
or
add
adc
sub
jmp
sub
pop
xlat
mov
pop
cmp
dec
in
stc
xchg
stc
push
push
or
nop
insl
fldl
dec
jg
and
dec
icebp
jmp
aad
xchg
lahf
dec
sub
xchg
adc
mov
mov
rcl
iret
pop
fnstenv
hlt
push
and
enter
das
or
mov
sub
mov
out
push
pop
and
pop
and
cmp
mov
dec
jle
cmp
iret
fmuls
imul
xor
mov
mov
jecxz
cmp
push
push
imul
jns
popa
popa
mov
daa
sbb
sbb
fwait
xor
jge
push
sbb
xchg
daa
aam
fisttps
test
xor
clc
fcomps
repz
daa
add
xchg
xchg
test
jmp
enter
lahf
insl
shll
mov
jp
jne
mov
sub
mov
mov
icebp
sub
clc
cmp
les
push
adc
pop
ret
stos
sub
les
adc
or
test
sahf
push
pop
ja
xchg
fsubrl
xchg
sbb
sbb
cmpsl
popl
scas
aas
movsb
aas
stc
cmp
jno
sti
pusha
xchg
fdivs
pop
jle
pop
pop
inc
xchg
or
push
add
add
cmp
mov
in
outsb
fs
push
stos
ret
mov
add
add
add
adc
stc
lds
mov
stos
shl
xor
movsb
adc
mov
jg
daa
or
mov
xor
ret
stc
and
push
addr16
or
das
popf
les
jge
xor
adc
div
fwait
mov
rorb
loop
out
add
xchg
xchg
lret
mov
adc
stos
pop
movsl
inc
stc
dec
shrl
push
pop
out
in
inc
xor
adc
mov
push
arpl
and
dec
pop
mov
das
xchg
ret
inc
xchg
clc
jbe
push
nop
loopne
rcrb
push
rolb
mov
aas
shlb
bound
and
scas
pop
mov
mov
imul
dec
push
sbb
outsb
mov
xchg
dec
stos
inc
push
or
leave
scas
jno
jle
sbb
cmp
jge
xchg
jo
push
sahf
fldl
or
in
pushf
mov
int
popf
pop
clc
cmpsl
in
lds
cwtl
sbb
fs
xchg
and
das
add
insl
sbb
sahf
push
lcall
cmp
xchg
adc
inc
sahf
fsubr
and
and
cmpsb
fstps
mov
imul
ret
and
scas
jbe
push
nop
jle
inc
xor
das
sub
add
jmp
dec
push
movsl
mov
sahf
pusha
xor
xor
cmp
pop
nop
rorl
int3
fidivrl
sub
movsl
jne
mov
mov
lahf
scas
pop
add
sbb
mov
sub
cltd
andl
aad
fsubr
and
mov
cmpsl
jl
popf
inc
cmpsl
sub
and
jae
xlat
add
pop
mov
out
xor
push
cmp
sbb
jne
push
mov
or
cmp
jnp
aam
push
and
ja
add
mov
fwait
add
inc
mov
jb
shlb
mov
add
add
pop
imul
aaa
dec
xchg
cmpl
xor
cmpsb
adc
mov
jecxz
mov
cmc
lds
push
and
xor
pop
mov
idivl
outsl
loope
dec
xchg
loop
mov
sbb
int3
dec
mov
imul
add
jp
int3
lods
in
inc
and
xchg
mov
imul
cmp
mov
jbe
pop
xlat
inc
cmp
dec
jae
lret
vpavgb
jbe
addr16
das
push
or
std
cs
nop
mov
loopne
dec
lods
repnz
mov
cmp
push
out
jo
sbb
xor
mov
pop
push
popa
int
or
xchg
jp
lods
rcrb
enter
add
mov
jo
repnz
repnz
cmp
mov
add
lea
aaa
adc
sub
popa
orl
cld
pop
cmp
dec
vdivsd
js
xor
jo
push
imul
xchg
rorl
insl
es
sbb
xlat
and
cltd
fwait
xchg
xchg
jg
in
lret
xor
iret
mov
rcrb
sbb
es
loopne
adc
sub
inc
in
ret
xchg
cld
adc
push
cmp
addl
and
mov
in
dec
pop
repz
popf
adc
push
or
pop
pop
nop
and
scas
outsb
push
push
lea
fiadds
mov
inc
in
jecxz
jno
push
cli
pop
or
cmp
aas
jl
movsb
cmc
lock
lahf
add
mov
pop
push
pop
adc
rcl
jo
rcl
or
cs
jno
dec
push
and
aas
dec
pop
lds
jnp
xor
clc
mov
cmp
mov
mov
sbb
std
add
add
cmp
cmp
mov
cwtl
movsl
pop
xchg
pop
movsl
or
rcll
std
add
out
mov
push
gs
insb
jbe
inc
in
mov
scas
xchg
pop
xor
pop
push
push
cmp
push
add
mull
lock
orb
jbe
insb
shlb
and
mov
lcall
addl
sbb
mov
fsub
cmpsb
int
jmp
ficomps
push
rcrb
jmp
in
orb
inc
out
into
mov
std
dec
mov
mov
xchg
add
mov
and
sub
xor
xlat
shlb
in
xchg
push
test
dec
rol
aas
push
ret
fwait
sbb
jmp
js
lock
push
int
fistpll
sub
jnp
jbe
pop
insl
pop
sbb
inc
mov
mov
xchg
add
movsl
aam
int
cmp
push
sub
stos
sbb
cmpsl
nop
dec
and
sub
lret
fstl
adcl
sub
aam
inc
jbe
mov
shl
ja
pop
dec
enter
mov
test
or
icebp
dec
fcmovne
fcmovu
cmp
mov
adc
xchg
imul
mov
test
jmp
or
test
jg
push
repz
and
and
insb
add
ret
lock
jnp
leave
shr
mov
sahf
ds
pop
mov
inc
or
push
xchg
aas
or
xor
int3
pop
fdivs
flds
mov
inc
mov
aas
mov
jo
push
aad
jle
mov
pop
xor
or
mov
xor
push
mov
cmpsl
ror
mov
icebp
push
movsb
fadds
dec
stc
xchg
xor
into
add
add
sbb
out
idivl
test
sub
call
std
add
add
xor
std
push
iret
pop
mov
rcll
sbb
sarb
out
fwait
icebp
cmp
cmp
ljmp
rcrl
out
sub
inc
out
cmp
dec
mov
inc
call
mov
repz
add
xorb
pop
inc
scas
nop
or
adc
fisttpl
or
movsb
scas
mov
out
push
test
mov
fwait
subl
data16
lods
mov
mov
pop
xor
lods
mov
cmpsb
and
add
xor
mov
adc
out
sbb
push
js
xchg
leave
movsl
pop
movsl
les
insl
push
adc
add
fisubrl
cltd
in
add
pop
lea
es
dec
push
int3
and
mov
push
rcrl
orl
gs
test
outsb
pop
testl
outsl
outsl
movsb
add
mov
nop
inc
jne
leave
push
mov
xlat
in
call
add
mov
or
cmpl
inc
scas
iret
jl
das
push
inc
cli
pop
or
xchg
push
mov
mov
xchg
sub
test
sub
jbe
inc
hlt
daa
lret
xor
gs
mov
js
sahf
xor
cmp
adc
insb
xor
fisubl
add
shl
xor
or
mov
dec
mov
out
insb
add
into
aas
xchg
cmp
icebp
stos
push
std
mov
pop
das
push
push
mov
daa
xor
xor
adc
inc
lahf
push
mov
mov
or
mov
xor
movsl
jo
cld
ss
das
filds
pop
add
add
sbb
fsin
out
fs
popf
outsb
fwait
sub
xorl
add
fs
mov
xchg
add
push
jle
imul
mov
fwait
leave
adc
vmaxps
sub
aaa
loop
push
bound
inc
cltd
pop
xchg
adc
rolb
lock
stos
sub
sbbb
and
inc
loopne
mov
cltd
dec
arpl
out
sub
stos
adc
inc
mull
aas
shrl
cmp
lahf
mov
push
adc
ss
jae
into
lret
lods
pushl
xchg
lods
mov
stos
cmp
in
cmp
mov
test
pop
subb
stos
push
in
rolb
ds
ss
add
arpl
scas
xchg
inc
loope
insl
int
in
test
and
jle
ja
and
ret
repnz
and
int3
xchg
out
dec
mov
jp
pop
push
jmp
test
fdivs
adc
cld
pop
leave
das
jo
xor
cwtl
jo
pop
cmp
mov
nop
and
testl
data16
mov
pusha
sub
mov
mov
imul
sbb
icebp
xor
xor
lods
jecxz
and
or
sbb
dec
cmp
mov
xchg
dec
dec
cmp
mov
xchg
cmp
inc
xlat
mov
fists
adc
jne
imul
pop
in
cmpsl
and
rorb
jp
ja
jp
rcrl
ffree
je
xor
mov
xor
stos
orl
pop
push
mov
xor
xor
sbb
cmp
into
int
movsb
jecxz
sahf
loopne
lods
mov
or
jb
lcall
insl
add
jo
cmp
adc
ljmp
addl
aam
out
push
mov
add
fsubs
jmp
adc
jl
dec
dec
testl
add
fidivs
mov
leave
xor
popf
mov
leave
xchg
dec
sbb
fwait
sub
in
push
les
enter
rolb
insl
sub
out
imul
cmpsb
jns
push
or
sub
sbb
xchg
push
lods
ss
std
ja
test
loope
loope
loop
and
fcoms
push
movsl
or
sahf
add
xor
cmpsl
xchg
push
daa
out
adc
rorl
xor
cld
mov
push
fsts
sbb
push
pmulhuw
cmpsb
xchg
mov
cmp
dec
xchg
sub
push
call
mov
mov
insb
femms
jl
dec
xchg
rcr
mov
sub
mov
bound
or
lock
mov
xchg
push
mov
leave
jmp
jae
xchg
loop
divb
sbb
adc
scas
or
pop
or
sbb
aaa
sbb
test
xor
add
not
stc
rclb
mov
int
sub
sbb
inc
pop
aaa
xchg
test
and
mull
outsl
jp
xchg
dec
inc
mov
fcmovu
xor
mov
cmp
std
push
int
push
cmpsl
push
pop
or
mov
add
sbb
xchg
test
sbb
sbb
hlt
sbb
imul
idivb
mov
cld
leave
test
dec
push
and
sub
clc
inc
sbb
push
pop
hlt
call
and
fmul
out
cmp
mov
sbb
add
rcll
popa
push
gs
dec
lock
pop
sbb
arpl
adc
xchg
ror
je
sub
stos
or
push
in
inc
ficomps
je
inc
xchg
jp
ret
inc
adc
jae
adc
sar
add
add
and
xor
sub
repnz
mov
add
fistpl
sub
fisubl
pop
pop
xchg
pop
add
movsl
xchg
movsb
jo
lods
mov
divl
outsl
xor
das
mov
push
sarl
faddl
lahf
mov
iret
pop
pop
in
movsl
ja
rcll
push
or
or
cld
aaa
das
push
jge
test
rolb
cmp
xor
movsl
addb
std
test
mov
out
in
push
in
jmp
pop
insb
pop
adc
xor
repz
dec
mov
fildll
mov
push
mov
cmp
rcll
push
scas
or
xchg
inc
mov
pop
ljmp
and
sar
adc
xor
data16
push
xchg
loope
ret
mov
gs
out
jle
adc
fildl
jg
stc
aad
and
xchg
sbb
out
fcoms
sbb
loop
pusha
push
cmp
jnp
sub
push
aaa
xchg
inc
fs
outsb
cmc
pop
adc
icebp
rolb
sub
or
test
cmp
ret
data16
shrb
pop
sti
rorl
xor
push
sbb
xchg
scas
pusha
rorb
push
mov
scas
scas
or
pop
scas
jbe
inc
imul
fistl
jge
xor
pop
pop
xor
xchg
sub
mov
stos
and
pusha
lret
inc
mov
popa
std
or
stos
data16
push
dec
cmp
aad
hlt
jg
sbb
fistps
cmpsl
inc
mov
lcall
cli
imul
or
sbb
xchg
jecxz
ret
jo
ret
hlt
pop
sub
dec
add
jg
pusha
xchg
add
sbb
xor
es
mov
cmp
sti
outsb
outsl
sbb
jns
in
test
sub
testl
add
add
add
pop
mov
jg
data16
sbb
leave
push
add
add
add
cld
and
aad
cmpsl
or
js
xor
mov
mov
mov
add
int
sbb
cmp
pop
fstpl
dec
or
jmp
jns
enter
push
mov
sbb
or
cmp
test
xor
jb
test
inc
sbb
call
lds
sub
dec
iret
mov
out
sub
mov
xchg
fimuls
lea
cmp
addr16
in
push
push
mov
pop
hlt
lds
fiadds
adc
roll
hlt
ficoml
in
sahf
cwtl
mov
push
lahf
cmp
std
mov
mov
push
mov
or
mov
pushf
jmp
fisttps
push
sti
xchg
cld
sbbb
orl
test
fistps
adc
mov
or
xchg
daa
in
pop
dec
shll
mov
push
inc
push
mov
in
fsts
mov
mov
lds
inc
fbstp
sub
push
pop
mov
mov
lcall
loopne
aam
scas
jge
adc
jns
out
fidivs
jmp
test
and
jmp
movsl
inc
sbb
pop
add
pop
and
dec
cmp
repnz
lahf
pop
mov
jmp
mov
dec
aam
fmuls
stos
fstps
xchg
popf
mov
mov
or
push
sub
jp,pn
lods
sub
dec
subl
mov
imul
jb
pop
xor
outsl
cmp
mov
popa
stos
adc
xlat
sarb
add
loope
jnp
mulb
cli
jbe
jmp
insb
sub
mov
inc
add
mov
outsb
pushl
enter
jmp
bound
scas
bnd
stc
lret
out
dec
loopne
or
add
inc
push
pusha
jbe
out
test
stos
pop
inc
xor
std
add
add
call
pop
in
fwait
mov
stos
mov
pop
mov
mov
dec
sub
inc
ret
jmp
sahf
into
cmp
outsb
jecxz
sbb
dec
lock
mov
repnz
js
jno
iret
jg
in
adcl
andl
cmc
inc
cmp
fadd
aad
ds
mov
jbe
jo
sti
aad
fcom
out
and
ror
outsl
cmp
ljmp
je
fcoml
xchg
aam
cmp
push
sbb
and
fidivrl
and
push
push
loop
loop
test
push
pushl
xlat
pop
sub
or
das
jg
shlb
push
jge
int
push
aad
push
sbb
or
pop
repz
or
xchg
cmc
jnp
int
jno
adc
dec
jle
push
insw
cmpsl
sub
loopne
dec
jo
aas
and
add
inc
cwtl
out
pop
xor
in
dec
sbb
test
cld
in
fmul
mov
mov
lahf
cld
pushf
dec
call
int
inc
loope
gs
int
inc
jne
pop
push
dec
ljmp
rcl
fldt
sti
neg
in
loope
jae
cs
in
mov
pop
lret
test
sti
push
pusha
mov
loop
sub
cmpsl
in
orb
pop
ljmp
data16
pushf
inc
mov
negl
test
insb
nop
movsb
scas
sbb
sarb
cmp
pop
xor
addr16
out
into
pop
enter
dec
push
loope
pop
push
mov
das
pop
sahf
pop
lods
ja
imul
loop
test
out
push
add
cld
nop
xchg
mov
pop
xchg
adc
sbb
imul
in
mov
outsb
imul
and
cmpl
sbb
call
add
add
pop
lcall
addr16
insb
mov
add
add
add
mov
pop
cmp
popf
lods
scas
mov
cmp
push
loop
les
lret
jecxz
mov
fnsave
int3
pop
ds
cmp
mov
mov
imull
dec
pop
fmuls
pop
mov
mul
jo
inc
adc
fwait
rclb
adc
das
test
jecxz
mov
mov
pop
in
arpl
dec
dec
inc
out
push
and
or
repnz
out
rorb
inc
or
xchg
mov
shlb
add
jmp
mov
push
in
mov
push
loop
or
testl
shl
sahf
hlt
xor
sub
adc
rclb
mov
andl
xor
cltd
push
out
aam
sbb
rcll
add
pop
or
shlb
pop
sub
pushf
pop
dec
mov
outsb
notl
xchg
cli
pop
mov
in
shrl
stos
ficoms
push
mov
out
adc
aam
jb
dec
or
js
ljmp
add
sbb
add
cld
lock
popa
dec
inc
lea
sbb
push
or
xchg
inc
mov
mov
mov
xor
popf
fs
inc
jle
jl
mov
cmp
sbb
cmc
iret
sar
cltd
jns
inc
xor
xchg
pop
imul
repnz
gs
and
out
mov
sbb
sub
imul
lahf
xor
mov
shl
in
inc
xchg
ds
xchg
fs
jae
mov
cmpsb
dec
add
sbb
rolb
xchg
bound
fucomi
lods
push
mov
insl
xor
pop
test
mov
fnstcw
lock
aas
call
jg
mov
loope
mov
test
push
test
cltd
fsubp
pop
jge
fildll
inc
sbb
jo
add
push
add
add
outsl
daa
insl
push
addb
add
dec
mov
add
add
hlt
mov
pop
push
insl
adc
sarl
fsub
pop
or
cmpsl
and
outsl
sbb
enter
ja
int3
ja
dec
andl
pop
fbld
xor
fnstsw
lea
mov
adc
nop
jne
sub
and
std
cwtl
jp
aas
inc
loop
pop
mov
push
clc
add
xchg
arpl
int
fmull
pop
jmp
mov
pop
leave
nop
fstps
cltd
cmp
jbe
and
jge
das
out
sbb
sub
outsl
sub
jle
mov
popf
je
mov
out
lods
dec
mov
push
je
lcall
insl
mov
or
cli
mov
xor
ss
sub
popf
mov
sbb
movsb
mov
dec
rcr
pop
ret
xor
lcall
cli
or
mov
idivb
xchg
cmpsl
sub
add
orl
andl
loop
dec
inc
jmp
jl
sbb
orl
call
inc
pop
dec
dec
sahf
xchg
gs
inc
jmp
sarl
mov
int
rcrb
cltd
jae
lods
int3
mov
popa
shrb
iret
shlb
push
dec
repz
xchg
lock
roll
sbb
dec
dec
pop
or
repz
clc
addl
fmull
out
add
sbb
push
and
and
ss
add
scas
movsb
or
mov
aas
push
movsb
mov
jmp
repnz
cltd
push
add
outsb
sub
lods
xlat
ror
out
lods
ljmp
push
pop
jmp
adc
jns
sub
xor
mov
stos
gs
mov
push
rorb
jb
mov
push
mov
orb
add
add
pop
and
mov
out
leave
enter
fbld
lahf
enter
add
add
adc
out
jecxz
xchg
in
std
jae
pop
ret
mov
mov
xor
movsl
es
add
data16
fnstenv
lea
or
jp
dec
rolb
int
test
jnp,pt
lods
aam
cmp
mov
push
lahf
cmp
xchg
push
push
adc
cmp
pop
pop
xchg
cltd
addl
into
push
and
mov
bound
sbb
dec
insl
bound
jbe
fisubrl
pop
pop
sbb
add
jl
das
dec
and
pop
mov
pop
subl
mov
push
dec
cmpsb
dec
xchg
mov
and
adc
bound
cmpsl
sub
imul
add
and
xchg
sbb
mov
sbb
xor
shll
aas
pop
ljmp
mov
lods
mov
hlt
xchg
xlat
and
imul
je
not
hlt
fdivr
pop
inc
inc
push
adc
mov
add
shll
dec
mov
mov
call
xchg
sbb
rolb
sub
push
test
repnz
dec
dec
ficomps
pop
call
es
clc
jns
mov
mov
sub
add
sti
pop
movsl
testb
rcrl
mov
xor
and
and
sbb
sbb
sti
cwtl
and
ficoms
push
fmulp
test
in
sahf
xor
xchg
shll
jle
dec
inc
mov
pop
ss
or
sbb
jbe
mov
cmp
xor
std
ret
adc
ss
mov
scas
pop
push
lret
push
or
mov
and
je
push
sub
fcmovb
movsb
dec
in
mov
hlt
cmp
mov
xchg
loope
xlat
pushf
lret
std
add
add
xchg
dec
xor
mov
not
cmpsb
or
aam
and
icebp
idivb
test
sbb
stos
les
movl
jg
push
mov
sbb
cmp
scas
mov
mov
jno
pop
loop
pop
pop
sbb
loopne
and
and
sti
mov
movsl
pop
mov
jmp
outsl
loopne
cwtl
add
jno
and
jo
cltd
jg
aam
inc
xor
xchg
inc
sbb
xor
in
pop
push
adc
xchg
mov
xlat
in
out
imul
push
dec
out
fdivrs
mov
popa
mov
push
dec
rcrb
das
nop
push
ret
dec
pop
push
fistps
pop
outsb
pop
inc
iret
or
xlat
cmc
pop
test
gs
cmpsb
out
repz
mov
adc
movlps
sub
inc
sbb
out
shrb
push
repnz
in
scas
mov
icebp
jl
ret
push
or
inc
loope
push
xor
push
or
mov
shll
cmp
loopne
ret
mov
add
fucom
pop
in
inc
add
pushf
xchg
pop
fwait
in
mov
sbb
pop
cmc
push
imul
sahf
mov
jae
jecxz
shrb
dec
scas
pop
mov
dec
cmc
out
repnz
push
push
stos
cld
sub
push
pop
sbb
mov
add
shlb
pop
sti
add
imul
push
idivl
dec
rcrb
mov
or
stc
bnd
test
add
sub
js
mov
jmp
nop
icebp
xchg
push
gs
jb
add
sti
xor
add
add
add
add
sbb
jge
aam
dec
outsb
data16
std
add
add
sub
dec
or
add
leave
mov
pop
fiaddl
mov
mov
out
das
mov
frstor
mov
jae
dec
push
mov
or
jo
add
pushf
inc
mov
ds
mov
std
popa
push
lds
mov
lock
jp
orl
je
arpl
pop
aad
fidivs
cmp
mov
cmpsl
dec
test
insl
jae
mov
sti
mov
stc
andl
push
fstl
cmpsb
movsb
adcb
int
and
leave
fucomp
scas
lods
rcll
push
jmp
and
gs
sbb
bound
xor
mul
daa
shll
lods
or
lods
cmp
outsb
sub
movsb
fldcw
aad
in
aaa
push
pop
es
fnstsw
leave
mov
mov
xor
aam
push
mov
rol
pop
shr
daa
and
cmpsb
scas
dec
gs
pop
adc
fwait
cmpsb
lret
and
xchg
mov
cmp
pmulhuw
arpl
js
jno
mov
jne
fisubs
sub
fbld
pop
loop
dec
ds
push
cmpsl
jne
mov
dec
test
mov
push
inc
jg
out
outsl
stos
imul
sbb
adc
js
jp
mov
clc
test
adc
mulb
add
stos
jno
test
mov
xchg
aaa
dec
sbb
xor
test
inc
data16
sub
xor
xlat
fisubrl
mov
std
fsubp
xchg
xor
and
loope
pusha
add
cmp
mov
ffree
sub
xlat
stos
xchg
push
xchg
fsub
lret
adc
sub
add
mov
mov
nop
in
adc
add
add
pusha
push
lahf
jmp
rorb
daa
inc
into
mov
mov
shlb
mov
push
pop
test
clc
dec
jl
rcll
leave
movsl
call
stc
xchg
push
xor
pop
push
enter
mov
add
adc
or
push
adc
dec
loope
test
xchg
sti
enter
outsb
mov
sbb
in
add
cmpsb
into
dec
loope
and
movsb
push
jl
in
and
mov
in
popa
ret
push
mulb
lea
mov
or
add
push
or
push
fidivl
xchg
push
test
cwtl
xchg
push
dec
fldenv
sub
jae
mov
out
lock
push
out
cmpb
and
pop
pop
mov
rorl
lods
fidivl
mov
leave
or
mov
jae
mov
jmp
arpl
pop
clc
push
into
imul
and
push
lods
cmp
mov
jp
pushf
sub
dec
insl
fstps
sarl
fs
repz
mov
push
das
mov
push
leave
jae
idivb
dec
jno
cltd
push
popf
cld
mov
jp
sbb
lret
addr16
adc
mov
jge
sbb
imul
mov
xor
xchg
mov
sbb
jge
iret
and
adc
cmp
mov
clc
inc
frstor
lds
roll
je
add
inc
pushf
sarb
xchg
call
movsb
push
push
int3
out
rcrb
daa
loopne
dec
or
dec
xchg
js
lahf
sbb
jae
lcall
xchg
sbb
sub
test
std
mov
mov
push
jae
mov
sub
push
jge
rcr
adc
jp
sbb
push
xor
out
add
dec
inc
mov
in
dec
cmp
pop
in
push
xchg
rolb
add
add
add
out
xchg
repz
mov
lret
xor
leave
decb
popa
push
cmp
or
sbb
jecxz
scas
out
mov
mov
cli
sub
cwtl
filds
jae
adc
hlt
xchg
inc
out
js
sub
xchg
in
shll
pushl
mov
inc
imul
int3
and
mov
pop
out
push
xchg
mov
push
fisubl
xor
xchg
imulb
push
mov
enter
ret
insl
sub
data16
sti
divl
stos
xlat
dec
push
clc
out
icebp
scas
popf
arpl
es
pushf
test
mov
jno
push
dec
dec
ja
mov
sub
inc
lods
leave
cs
out
cld
jecxz
rcrb
adc
xchg
jl
xchg
add
insl
subl
lahf
push
push
das
inc
sbb
jl
add
sub
dec
lods
inc
sbb
push
rclb
mov
xor
ds
movsb
pop
jbe
in
jbe
sub
xor
and
mov
ljmp
mov
aas
dec
lret
or
rorb
mov
and
pop
inc
pop
ljmp
mov
mov
int
mov
xchg
and
inc
jecxz
bound
gs
fwait
orb
popa
pop
push
jno
cmp
push
add
inc
test
pop
cld
dec
pushf
ficoms
popf
in
jo
test
arpl
jp
push
mov
int3
ret
fadds
insb
int3
jmp
jecxz
fbstp
arpl
and
adc
outsb
xor
push
fisubs
dec
sbb
jecxz
mov
inc
enter
ss
in
mov
stos
inc
bound
gs
inc
rolb
and
cmp
inc
xchg
das
stos
sbb
mov
shll
mov
pop
andl
add
add
add
add
fldcw
test
mull
nop
rolb
add
add
add
push
rcl
data16
pop
cld
xor
aad
test
mov
sub
int
cmpsb
sub
aaa
jp
pushf
cmp
dec
inc
les
int3
sbb
aad
xor
aad
jl
js
mov
inc
mov
ds
pop
and
add
add
cld
iret
bound
xchg
mov
test
fildll
ja
btl
and
adcl
xor
loop
or
sub
sbb
loopne
call
cmpb
adc
cwtl
sbb
lods
mov
xor
jb
or
imul
lods
outsb
mov
insb
add
and
sub
fs
dec
test
and
xchg
out
test
dec
sbb
mov
lods
pop
cmp
lock
loope
push
les
add
push
cmp
push
ror
lret
mov
sbb
sub
in
stc
sbb
mov
insl
ret
add
aaa
cmp
movsb
xor
sbb
in
insb
sub
out
jl
or
lea
test
sbb
loope
inc
xchg
test
mov
sub
int3
sub
repnz
dec
dec
mov
push
pop
inc
je
jns
es
inc
mov
push
sbb
cmp
cmc
pop
push
inc
lods
jle
mov
inc
mov
xchg
dec
sbb
pop
fnstcw
out
call
ljmp
adc
sahf
adc
daa
jl
mov
ja
or
xlat
loope
mov
cmp
test
inc
mov
sahf
inc
pop
sub
pop
lcall
cmp
cmp
inc
and
push
xchg
pop
iret
outsb
push
js
mov
icebp
out
inc
stos
dec
ret
js
fwait
cltd
imul
add
add
add
dec
xchg
pop
xchg
pop
jnp
aam
add
add
add
inc
push
imul
mov
adc
add
jne
lcall
mov
mov
pop
cmp
xor
insl
mov
xchg
adc
int3
es
or
lock
inc
cmp
test
popa
fadd
out
aad
nop
xchg
sbb
out
mul
adc
dec
push
mov
xor
hlt
adc
loopne
jmp
outsl
mov
xor
arpl
or
jecxz
xchg
add
test
popw
lret
fldt
jns
pop
jl
imul
stos
and
lea
out
es
loope
add
adc
scas
shlb
shrb
sub
test
add
pop
cmpl
notl
rclb
jnp
enter
push
cld
pop
popf
pop
in
jmp
popa
mov
fmull
cmp
lods
ds
lds
addr16
jmp
cs
mov
add
and
push
mov
std
lret
ljmp
sub
gs
addl
stos
mov
in
cmp
fs
lods
jmp
cltd
leave
xor
imul
adc
push
popa
jo
jge,pt
inc
pusha
roll
hlt
arpl
lea
in
out
jg
mov
stos
jns
dec
stc
pop
popl
fnstcw
ss
test
dec
out
popf
ds
push
andl
sbb
inc
mov
in
imul
fnstsw
outsl
mov
xor
fcmovnbe
idivl
lret
mov
lds
lods
mov
lock
inc
icebp
insb
cmpl
jg
loop
cmpsl
stos
call
add
pusha
mov
jecxz
lcall
je
mov
in
lds
sbb
out
push
loopne
sbb
add
add
xchg
jl
cld
decl
or
sub
notb
add
std
add
add
cmpsl
dec
and
pop
sarl
pushf
push
and
and
sub
jecxz
sub
or
push
enter
in
lret
dec
lds
int
sti
mov
fldl
stos
xor
jnp
inc
mov
jl
mov
negl
cld
mov
push
adc
pushf
loopne
lret
sbb
mov
jnp
fildl
dec
add
sbb
jecxz
or
inc
pop
xor
movups
push
pusha
cltd
mov
repz
insb
xchg
imul
ds
push
push
xchg
js
pushf
adc
mov
jno
push
and
imul
lds
and
das
inc
sub
xorb
es
cmp
sub
insl
sub
ja
fstpt
jb
adc
mov
sti
push
xlat
nop
bound
add
into
push
aad
add
and
jb
mov
adc
arpl
and
les
cmpsl
and
or
xor
pop
cmpsl
or
pop
inc
gs
mov
xchg
incl
das
stos
push
sub
push
das
mov
cltd
jp
sub
push
inc
imul
sbb
aaa
jno
jp
mov
ljmp
ljmp
ja
movsl
xor
fimuls
test
jp
outsb
rcrb
xor
dec
ffreep
adc
dec
add
subb
xor
jecxz
sub
cmpsb
sbb
cmp
hlt
pop
out
push
movsb
push
pop
iret
stc
scas
push
jne
scas
jne
loop
addr16
and
lahf
jg
push
mov
aam
lahf
jne
jns
fnstcw
popf
repnz
cmp
in
add
add
int
lret
das
insb
out
sub
mov
add
and
dec
repz
fldt
cli
mov
add
std
add
add
fs
addr16
add
cltd
rorb
sahf
cltd
jmp
ja
add
add
out
cmc
nop
dec
jecxz
mov
arpl
fdivl
addb
inc
outsb
pop
dec
inc
addr16
sub
and
xor
popf
dec
lods
rclb
subb
push
jp
xchg
pop
test
xchg
jno
aad
fsubl
cld
arpl
or
inc
mov
lahf
mov
ret
movsb
adc
dec
fidivrs
jae
dec
je
aad
lods
sarb
pop
push
inc
aaa
jbe
push
push
or
jp
stos
cmp
cmp
rolb
ret
mov
nop
pusha
jmp
jb
dec
subl
pop
dec
lret
add
ljmp
mov
fwait
sbb
sub
dec
sbb
sbb
insl
data16
out
mulb
rcrb
fidivrl
and
sub
adc
sar
ficomps
and
out
mov
std
sbb
addr16
pop
jle
mov
iret
out
movsb
movsb
test
inc
pop
movsb
push
mov
adc
fsubrs
mov
push
inc
and
fistl
jno
and
and
push
icebp
jle
push
in
mov
ror
insl
sbb
pop
roll
in
pop
push
and
pop
pop
jnp
mov
insb
mov
rol
adc
jae
stc
cwtl
add
mov
lock
sbb
int3
pop
into
dec
jbe
out
test
les
inc
push
dec
xchg
sbb
inc
cmp
push
shrl
push
das
pop
dec
mov
cmp
mov
int3
leave
push
xor
sahf
fs
and
mov
mov
dec
aam
adc
and
pusha
lret
int3
outsl
mov
mov
add
jmp
pop
popa
inc
or
loop
pop
imul
lret
pop
xlat
xchg
leave
mov
js
mov
lcall
jnp
push
mov
mov
fiaddl
add
add
add
xor
in
push
fstpt
sahf
fs
cmpsb
cmc
inc
mov
pushf
pop
xchg
imul
adc
ja
ret
and
lahf
inc
dec
icebp
mov
mov
daa
test
mov
sub
mov
mov
sub
and
sbb
adcl
add
push
add
out
xchg
pusha
mov
call
or
les
sub
aaa
and
adc
or
ds
or
add
add
or
addb
shlb
sub
mov
rcrb
sub
inc
fs
pop
rcrb
pop
sub
push
cmp
fcomps
rcr
mov
rcrb
shrl
fisubrl
gs
or
mov
mov
inc
int3
mov
cmp
mov
push
xchg
mov
loopne
cli
jno
mov
push
and
jb
xchg
in
daa
clc
fidivrl
cmp
repz
xchg
ljmp
xchg
loopne
add
cs
or
pop
icebp
mov
and
mov
push
inc
mov
cli
aam
aam
mov
jnp
push
ficoml
fidivs
shl
fwait
iret
pop
push
mov
loop
imul
mov
out
dec
sub
loope
and
lds
aam
cmp
pusha
fisubl
rclb
push
sub
test
or
cmp
mov
pop
dec
js
mov
cltd
in
adc
xchg
bound
xor
loope
jge
mov
shll
dec
mov
jbe
shl
xchg
xchg
fcoml
mov
sahf
mov
push
or
in
divl
in
ss
scas
divb
add
add
idivl
jg
rcr
imul
add
inc
cmpsl
adc
xor
shrl
jecxz
fwait
dec
fnsave
pop
lar
sahf
outsb
lahf
fs
out
lea
sbb
dec
add
pop
int3
test
xorl
fisubrl
xchg
push
push
insl
inc
cmp
mov
popa
iret
xor
inc
popf
sub
inc
filds
sbb
pop
lods
test
mov
xchg
pop
adc
mov
adc
push
idivl
jns
cmc
call
push
insb
gs
and
test
xchg
hlt
jno
push
jo
xor
ja
push
add
bnd
pop
sub
insl
cltd
xchg
push
add
insb
inc
test
in
xchg
pop
sti
mov
inc
ret
test
enter
js
fbstp
dec
popf
add
inc
inc
fisubs
ss
movsl
data16
mov
dec
idiv
push
fwait
push
std
xor
and
jno
loopne
outsb
aad
jns
mov
mov
fisubrs
les
mov
jl
and
ret
repz
push
std
dec
xchg
add
pop
or
pop
or
xlat
test
inc
xchg
push
dec
push
mul
int3
xchg
xor
loop
push
xor
xchg
lahf
or
stos
sbb
sahf
mov
push
or
jmp
jns
mov
add
mov
mov
xchg
lods
xchg
mov
fcomps
or
and
adcb
popa
fstps
push
stos
jbe
xor
andnps
dec
adc
pop
sub
cmc
test
add
sub
lahf
stos
sub
cmp
aad
dec
mov
pop
inc
movsl
adc
pop
and
in
dec
data16
xchg
xchg
movl
adc
movhps
stos
pop
add
add
jecxz
mov
mov
fiadds
add
add
add
jge
sbb
mov
add
pop
sub
push
sub
xchg
nop
mov
popf
adc
cltd
push
and
pop
cmc
call
frstor
xor
js
movsl
dec
test
dec
stos
int3
cwtl
jne
adcl
push
data16
adc
mov
cmp
sahf
std
les
idiv
nop
jb
mov
ljmp
test
and
mov
jmp
mov
mov
movsl
xchg
ficomps
cli
enter
ss
mov
loopne
insl
add
mov
std
cmpsb
jno
int
mov
or
scas
out
inc
mov
sahf
in
out
cwtl
idivl
push
mov
inc
in
outsl
xchg
fsubr
fisttpl
lods
out
or
gs
lock
inc
jo
inc
mov
cli
xor
js
xor
leave
xchg
ucomiss
push
rclb
inc
int3
sbb
lods
loope
sahf
jbe
dec
sarb
aaa
mov
shrb
dec
in
aam
xlat
mov
or
sbb
push
in
sbb
cwtl
lods
popf
adc
repz
pop
push
jge
stos
out
add
jno
or
cs
js
mov
imul
and
xor
jmp
jl
adc
xchg
les
sub
push
add
push
insb
aaa
jno
xor
mov
pop
sar
loope
lods
aas
xor
cld
mov
fcoml
call
sub
fcomip
cmpsl
pop
outsl
in
pop
in
in
mov
lcall
shrb
movsb
daa
orb
mulb
test
or
mov
dec
xor
mov
std
inc
dec
pop
mov
mov
nop
insl
jp
sub
cs
push
mov
movsb
xlat
mov
addl
pop
jo
cmp
xchg
cs
xchg
add
add
ficompl
mov
loopne
add
add
add
repz
bnd
sbbl
ret
imul
lods
insl
mov
in
aas
sarl
push
aad
addr16
inc
mov
out
xchg
xchg
push
dec
mov
push
adc
add
gs
add
sub
int3
in
push
jae
popf
pushf
rcrb
mov
test
push
jg
leave
mov
dec
lcall
movsl
adc
loop
icebp
imul
cs
sub
sub
adcb
dec
cmp
shll
loopne
mov
push
adc
lret
xor
sub
push
or
test
mov
mov
ss
sub
pop
out
pop
dec
mov
rcrl
xchg
or
cli
into
inc
fs
lahf
sub
cmc
dec
sar
or
or
sbb
xor
or
push
stos
sarb
xchg
sti
ds
jae
ret
cmpb
pop
sti
cld
add
pushf
xchg
push
mov
mov
pop
test
lret
fsts
cwtl
sbb
sti
cltd
adc
cmp
ret
ja
xor
arpl
imul
or
mov
negl
enter
out
sbb
loopne
push
sbb
cmc
movsb
mov
dec
push
or
cmp
repnz
mov
mov
xchg
or
jg
clc
mov
mov
dec
jno
fsub
xor
jbe
test
insb
or
outsb
inc
popf
push
popf
inc
sub
cmp
clc
ret
jb
aam
fmul
jae
dec
cmp
std
cmpsl
or
or
fsubl
iret
jl
jne
outsb
imul
xor
lahf
das
push
cmp
loop
cmp
add
inc
stos
pop
sbb
cli
inc
cli
mov
inc
mov
js
add
std
add
add
mov
add
movsl
leave
in
pop
jbe
mov
out
loopne
mov
fistpll
push
iret
mov
push
xchg
add
popw
leave
lods
cmp
mov
inc
mov
mov
popa
or
nop
jb
sbbb
ror
pop
sub
fld
imul
mov
cmpsl
lcall
popf
and
pop
mov
mov
mov
pop
jo
adcb
jb
enter
jp
dec
add
mov
mov
test
test
mov
sbb
xor
in
xchg
ficompl
insb
push
inc
scas
adc
fldcw
xor
fs
push
sti
pop
adc
js
es
scas
imul
xchg
cmp
data16
pop
insl
movsb
loopne
mov
inc
enter
fmull
pop
mov
dec
rcrl
push
test
pop
xchg
sbb
adc
sahf
mov
xchg
pop
movsb
and
mov
repnz
cld
je
subb
mov
jns
xchg
or
lahf
fimuls
jnp
inc
push
dec
push
jae
mov
data16
mov
in
add
in
lahf
scas
repz
pop
jo
enter
mov
mov
xlat
inc
cmc
add
pop
in
test
adc
mov
push
xchg
mov
adc
fldenv
shll
mov
sub
dec
popf
iret
decb
cmp
mov
sarb
xor
add
sbb
xor
cmp
push
outsl
rcrl
xchg
jmp
xchg
inc
mov
xchg
insl
push
jp
add
sub
cs
inc
dec
sub
cwtl
cmpsl
sub
bound
push
in
movsb
fstpt
mov
add
ja
out
push
lahf
sub
sbb
std
add
add
cmp
xchg
in
in
mov
mov
mov
xchg
out
stc
inc
inc
fists
add
popa
add
cmp
or
jno
iret
mov
mov
in
lock
in
inc
add
cmc
adc
out
cmp
lods
pop
push
jns
es
xchg
std
lods
add
jne
push
xchg
or
sub
cmpsb
lock
addr16
mov
add
pop
int
popa
and
data16
xchg
into
push
dec
pop
sub
jno
inc
pop
imull
mov
push
lods
sbb
and
cs
mov
lret
jae
fstps
outsl
add
movsb
sti
xchg
xor
jmp
xchg
imul
push
dec
mov
cli
icebp
ror
aad
outsb
sbb
pop
mov
pop
xchg
js
jmp
out
dec
mov
cmpsl
push
bound
jae
pop
cmp
mov
dec
je
in
rorl
pop
mov
push
add
lret
push
mov
adc
push
jle
mov
xchg
xor
mov
pop
rclb
adc
push
xlat
fwait
pop
lods
test
and
mov
cmp
add
adc
and
mov
sub
cli
test
mov
adc
mov
ss
xor
fidivrl
cld
mov
xchg
mov
jmp
dec
push
inc
mov
ret
int
push
shrb
mov
and
cli
or
sub
jo
jno
shr
cs
mov
lcall
mov
loopne
sub
or
cmp
pop
mov
flds
dec
cmp
push
and
out
sub
les
adc
loopne
gs
mov
loope
fstl
clc
mov
pop
andb
daa
aaa
sub
xor
xchg
inc
adc
add
cli
rcll
jmp
popf
add
add
add
add
xor
aam
pminsw
xor
dec
outsl
fdivrp
mov
and
inc
mov
push
loop
mov
or
mov
or
xlat
mov
ret
lahf
push
and
ds
mov
inc
std
in
sub
ss
fs
sbb
sub
xor
int
and
test
mov
arpl
sbb
rcr
push
mov
pushf
jne
out
jmp
jl
aam
stos
mov
xchg
mov
xor
jae
in
mov
or
inc
cmp
js
adc
pop
clc
enter
iret
rcrb
lods
ljmp
out
mov
or
adc
rcrl
sti
leave
mov
shr
or
sbb
mov
adc
lods
aad
add
mov
repnz
add
popf
orl
icebp
roll
pop
cld
pop
iret
mov
data16
shlb
inc
leave
adc
xchg
sbb
dec
rorb
in
or
sbb
add
jmp
xor
daa
repnz
dec
fs
stos
push
mov
inc
sbb
clc
out
outsb
xchg
movsb
inc
in
cmp
fmull
loope
popa
jbe
enter
lods
fwait
ret
sub
xor
mov
jle
xchg
push
mull
sub
lahf
leave
jbe
pop
cmp
push
xlat
in
aas
lea
sbb
sbb
jns
cmpsb
hlt
and
xor
inc
les
inc
call
adc
add
push
outsl
xchg
ret
mov
clc
dec
int3
dec
dec
xchg
in
mov
out
repz
and
arpl
aam
and
movlps
jo
add
iret
negb
mov
mov
add
std
add
add
xchg
dec
pop
pop
pop
mov
fistl
push
imul
fildll
mov
pusha
inc
adc
pop
jns
xchg
mov
xchg
xchg
test
jmp
mov
orb
mov
ljmp
in
aad
push
cld
fldenv
add
lds
pop
cmp
push
jecxz
scas
setl
pop
mov
dec
dec
loop
jg
rcrl
in
push
xchg
mov
cmp
cmc
or
mov
loopne
cmp
push
sub
sub
push
fdivr
repnz
shrb
ret
xor
ja
ljmp
jmp
xchg
lcall
outsb
jae
sbb
arpl
push
add
aam
dec
xchg
sahf
push
lret
lret
movb
cmpsb
pop
mov
inc
lock
push
loope
add
xor
xchg
inc
cmp
imul
adc
mov
lods
adc
dec
pop
scas
cmp
fisubs
ret
dec
movsl
mov
not
adc
sbbl
dec
shl
lret
mov
mov
jbe
jmp
fs
out
mov
int3
push
sbb
lahf
int3
in
aas
ja
push
out
and
mov
sbb
pop
les
cmp
lcall
fwait
ret
mov
xchg
jle
ljmp
aas
lret
cmc
mov
jl
dec
sbb
das
mov
dec
js
loopne
xor
dec
cmpsl
out
jns
jl
push
mov
push
push
cld
mov
jb
je
jo
jae
xor
cmp
mov
pop
inc
popf
add
lods
clc
inc
jp
xor
movsb
fmull
pop
pusha
and
mov
call
inc
arpl
popf
insl
jno
es
mov
mov
mov
lea
add
push
push
jnp
outsl
jno
dec
pop
sub
add
add
add
insl
call
sub
ret
jle
stc
in
cmp
pop
add
push
lahf
add
stos
jle
or
sub
sub
push
push
inc
mov
imul
cmpsl
inc
jl
ja
aas
or
xchg
mov
fprem1
mov
stc
mov
inc
push
movsl
outsl
lods
ss
sbb
sub
pop
cld
dec
xor
mov
popa
cmp
push
loopne
xchg
inc
push
cwtl
in
aas
cmp
ss
push
icebp
sub
push
lea
popf
into
in
xchg
push
sub
dec
adc
add
pushf
fs
xor
push
sbb
ror
push
pushf
faddl
jo
movq
inc
and
mov
sbb
push
dec
bound
pusha
int
lret
xor
xchg
iret
mov
fadds
pusha
mov
mov
popa
lahf
jle
orb
jbe
hlt
fwait
and
pushf
mov
aas
test
pusha
jp
and
fsubrs
and
subb
hlt
enter
add
nop
outsb
pop
lahf
das
aaa
daa
mov
xchg
enter
jbe
aam
or
sbb
mov
dec
add
roll
push
jnp
movsl
daa
push
pop
lahf
daa
out
jle
out
and
mov
dec
xor
xchg
xor
pushf
push
fadds
je
scas
mov
xor
dec
add
push
cmp
adc
sahf
fcmove
addb
je
popa
in
xor
es
and
inc
mov
call
cmpb
jecxz
push
outsl
jb
ljmp
ja
adc
push
push
inc
fnsave
into
js
divl
loopne
push
pop
push
sbb
scas
fisttpl
mov
and
xlat
inc
inc
test
pusha
adc
frstor
inc
lea
push
cmpsb
fwait
je
jecxz
add
cltd
enter
mov
stc
popf
inc
sbb
push
imul
add
mov
add
mov
cs
stc
or
lret
add
roll
ret
add
pop
jmp
test
cmp
mov
out
ljmp
pop
and
xchg
mov
cld
pop
addl
aam
repnz
mov
in
clc
lods
jmp
xor
adc
into
aad
pop
dec
ret
jns
ljmp
ljmp
push
shll
push
out
jmp
fdivp
pop
jmp
jnp
andb
cmpsb
loopne
xchg
add
mov
loope
test
cmpl
push
iret
inc
fwait
xchg
out
xchg
push
fincstp
cmp
out
xchg
mov
mov
mov
movsl
sub
dec
pop
lahf
pop
dec
movsl
mov
mov
push
out
icebp
or
sbb
pushf
je
pop
cmp
xchg
ret
pop
jp
sub
mov
add
int3
xor
mov
cmp
dec
in
das
daa
dec
push
mov
mov
movsl
jl
pop
ret
cld
xchg
mov
leave
jbe
xorl
mov
mov
popf
sbb
mov
iret
mov
icebp
mov
add
adc
dec
adc
arpl
mov
adc
fnstenv
pop
fcoml
cld
sub
fcomp
ja
sub
icebp
fiadds
jb
stos
cmp
add
xchg
jle
xor
sub
push
je
adc
in
movsb
insl
inc
jp
pop
mov
jp
js
mov
sahf
test
iret
ljmp
rcll
and
push
cmpsb
aam
dec
inc
test
sub
pop
stc
mov
divl
fcmovu
inc
xchg
jl
lcall
xchg
lcall
add
jns
sbb
jge
and
dec
dec
and
out
add
std
add
add
inc
mov
test
insl
ja
mov
dec
loopne
sub
jb
js
or
scas
jne
mov
inc
cmp
cmp
xor
lret
mov
test
sub
fildll
cmpl
dec
sbb
adc
fcomi
and
cmp
xchg
das
shrl
xor
imul
add
sbb
jae
push
dec
mov
cmpsl
jp
pop
cmpsb
adc
sub
push
mov
fdivs
add
clc
dec
sub
push
sub
jo
dec
mov
cmc
jl
and
sbb
lcall
jae
jp
or
adcl
jl
in
stc
jbe
or
call
jae
or
sub
cmp
fwait
inc
ja
push
mov
mov
xchg
into
add
sarb
fwait
loop
sbb
and
adc
fwait
dec
push
pushf
sbb
or
iret
mov
loopne
jle
dec
test
or
add
dec
jne
dec
jge
xchg
imul
pop
jne
mov
fldl
pop
pop
push
xor
icebp
popf
movsb
and
nop
out
pop
testl
fisttpll
mov
mov
aam
jae
cmc
add
xchg
pop
rcr
pop
fistpll
inc
dec
jns
je
arpl
ss
adc
rolb
aaa
test
scas
mov
insl
jne
push
dec
jl
fs
xor
sahf
jle
loopne
test
loope
add
inc
sbb
test
jg
dec
inc
ret
in
xchg
push
mov
ret
stos
jp
cltd
lods
push
dec
faddl
pop
stos
ljmp
xchg
cmpb
pop
clc
fs
xchg
xchg
push
pop
int
xchg
in
push
insb
dec
jo
add
add
roll
pop
arpl
int3
dec
arpl
add
std
add
add
in
mov
push
out
fists
outsl
xchg
fwait
das
testl
enter
pusha
adc
mov
cmp
ret
and
pop
inc
pop
jg
push
sbb
jb
mov
jmp
or
fcomip
insl
xchg
pop
fs
dec
jp
fwait
xchg
mov
pop
mov
adc
pop
add
add
mov
mov
push
aaa
inc
sbb
lds
lds
loop
dec
mov
push
lds
mov
out
icebp
mov
hlt
inc
testl
pop
mov
inc
jnp
iret
mov
outsb
lods
roll
repz
ljmp
in
add
dec
ljmp
lret
mov
push
test
iret
fmuls
or
les
addr16
movsl
pushl
and
xchg
ds
addl
insl
cmpsb
jae
sar
sbb
sub
mov
cli
bound
mov
clc
bound
outsb
cmp
jbe
mov
dec
mov
ds
mov
push
lods
cmpb
mov
shll
jecxz
insl
fcmovu
rcr
xor
sahf
mov
and
in
cwtl
and
lea
movsl
mov
out
int3
leave
push
jne
pusha
stos
fcomps
loop
ret
pop
xor
xor
push
sub
and
or
ss
adc
sbb
xchg
xor
xchg
add
test
das
shl
and
fwait
or
or
fcomp
repnz
bound
das
nop
out
xor
cli
mov
jmp
pop
xacquire
xor
pop
fcompl
dec
test
nop
int
lret
repz
xchg
xchg
icebp
out
test
dec
sub
jnp
lock
push
gs
into
shlb
fwait
sub
mov
add
sbb
pushf
cli
mov
xchg
out
cltd
xchg
or
std
add
add
pop
dec
std
mov
adc
lea
call
jo
loop
sbb
in
inc
mov
out
mov
inc
cltd
push
add
enter
sub
shrl
push
and
or
imul
fistpll
psubb
das
pop
pop
pop
je
clc
pop
jl
cwtl
mov
jecxz
adc
xchg
sbb
xchg
fs
push
inc
dec
in
pop
addr16
clc
adc
jno
push
dec
mov
push
je
fdivrl
jl
jnp
and
aas
cmc
lods
aam
cmp
jae
scas
shrl
mov
sbb
cmp
arpl
pop
dec
mov
push
imul
add
filds
adc
jmp
daa
pusha
jmp
std
stc
rorl
cmp
sub
loopne
mov
sub
dec
mov
pusha
in
mov
dec
push
jg
clc
movsl
imul
cmp
cli
push
cli
or
loopne
add
mov
mov
push
scas
test
scas
cmpsl
xchg
movsb
sub
fcomps
xor
pop
xor
out
icebp
sbb
cs
pop
adc
fwait
push
jle
inc
in
push
inc
dec
fdivl
jo
aad
lock
aam
test
dec
mov
add
pop
adc
aad
cmpl
push
pop
cmp
xor
inc
jne
or
cmc
lret
daa
bound
inc
in
lock
mov
incl
push
outsb
loop
loope
mov
shrl
or
stc
sub
nop
or
mov
or
call
mov
pop
mov
mov
xchg
movsb
mov
push
sub
stos
xchg
cmp
mov
xchg
and
mov
dec
lds
mov
into
jle
add
push
jnp
pop
movsb
jge
adc
add
add
add
add
fisubl
and
mov
add
std
add
add
xchg
ret
mov
ss
cmpsb
mov
in
daa
mov
call
loope
xor
jle
adc
nop
daa
mov
mov
out
div
inc
or
mov
push
ljmp
mov
jmp
aad
int3
pop
fstps
movsl
fstpl
and
cwtl
xor
push
cmp
push
xchg
push
jmp
push
lahf
fisubs
adc
sbb
imul
icebp
into
xchg
in
xchg
xchg
lock
ljmp
sub
fmulp
scas
scas
mov
arpl
sti
fisttpll
adc
pop
ds
jns
jg
imul
fldl
int
push
xchg
into
inc
rol
pop
xchg
pop
push
outsb
scas
pop
jmp
out
je
cmpsl
or
and
insl
fidivl
jae
ja
or
cmp
mov
inc
mov
jb
loop
pop
mov
sahf
mov
push
lods
cmp
pop
nop
rcl
or
mov
sti
sti
ljmp
jle
lock
sub
jne
or
xchg
mov
pop
jne
xor
dec
mov
xchg
std
sbb
and
jge
ja
jl
mov
xchg
out
push
ret
jp
popf
ret
dec
imul
mov
lret
cmpsb
pop
jns
imul
mov
and
add
pop
sub
ja
inc
std
cld
cmp
jmp
enter
leave
rol
mov
and
pop
mov
mov
ret
sahf
mov
cwtl
fdivrl
inc
mov
cmc
popa
add
inc
lahf
push
lret
mov
jb
jbe
mov
push
ret
xor
fs
mov
sarb
add
in
aaa
sbb
or
sbb
test
mov
add
nop
stos
es
aas
iret
cmc
sti
pushf
and
push
mov
testb
std
add
add
hlt
loope
adc
mov
sub
mov
aam
mov
inc
mov
lods
movsl
push
and
cmp
sub
in
stos
mov
js
mov
test
jmp
hlt
xor
aas
imul
jne
pop
mov
fucomi
sbb
jbe
ficomps
inc
popf
imul
roll
push
sub
adc
dec
in
test
xchg
mov
pusha
inc
adc
pop
sbb
dec
loop
xchg
int
jo
out
dec
adc
je
movsb
jnp
not
pop
and
dec
mov
jnp
scas
pushf
and
aam
outsb
jae
loope
add
push
aam
lods
add
cli
aaa
call
pop
mov
lea
jne
movsl
iret
fisttpl
sbb
jmp
enter
mov
arpl
scas
icebp
aaa
dec
sarl
dec
push
xchg
xchg
mov
jg
iret
mov
push
rclb
push
sub
stc
outsb
stos
add
mov
xorb
je
pop
sbb
sbb
loopne
dec
repnz
mov
mov
pop
jg
inc
in
imul
fidivrl
mov
sbb
adc
mov
icebp
sub
lea
jbe
out
mov
xchg
mov
insb
ret
idiv
andb
adc
pop
test
xor
or
es
dec
xor
iret
test
loop
int
push
cmp
pop
push
jl
sub
sbb
testl
mov
dec
inc
xchg
loopne
notb
std
dec
fdivl
jle
ljmp
jae
inc
loop
rcrl
sbb
stos
clc
in
in
pusha
xlat
js
pop
fsts
xchg
push
cmp
push
shlb
add
jb
xchg
stos
sarl
dec
aam
aad
lods
mov
or
pop
or
add
add
cmp
stc
jl
stc
jne
jg
xchg
push
clc
add
std
add
add
movl
ljmp
sar
sti
mov
gs
test
bound
dec
mov
es
jae
push
lock
dec
pop
xchg
pop
ja
mov
adc
lea
scas
cltd
fsubrl
repz
lds
rorl
pop
es
inc
mov
into
cmp
mov
inc
scas
mov
or
xlat
mov
sub
sub
std
leave
mov
cld
pop
insb
sahf
xchg
std
sbb
pop
sbb
enter
loopne
out
sbb
or
imul
outsb
stos
cmp
mov
or
je
sub
fwait
adc
popl
pop
mov
push
xchg
fsubrs
add
repz
sub
push
out
out
jmp
addl
xorl
cwtl
gs
xor
fcoms
mov
dec
pushf
sbb
xchg
cmp
mov
fld
mov
fldcw
pop
shlb
lcall
jg
pop
add
jl
inc
or
cmp
xchg
xlat
xchg
cmp
out
daa
aas
std
daa
push
dec
leave
sbb
mov
into
mov
iret
or
add
out
cltd
mov
das
mov
xchg
out
pusha
jl
cmc
inc
xor
xchg
in
mov
inc
push
add
fisubrl
dec
insb
aad
inc
fsubs
mov
mov
add
sub
fldenv
loope
pop
push
or
xchg
mov
dec
pop
jmp
aad
adc
shll
stos
sub
scas
jg
scas
shll
push
pop
mov
popw
ja
push
scas
orl
push
jg
pop
icebp
lods
lds
clc
adc
jp
adc
add
cmp
test
push
cli
add
sldt
add
fwait
push
ss
cld
xorl
add
