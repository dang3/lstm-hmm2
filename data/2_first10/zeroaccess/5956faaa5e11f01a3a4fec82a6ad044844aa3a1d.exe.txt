push
mov
sub
orl
push
adcl
push
decl
xor
notl
inc
push
push
call
test
movl
je
lea
notl
push
adcl
call
movl
jmp
subl
push
mov
push
subl
push
subl
call
sbbl
test
movl
je
lea
andl
push
incl
call
jmp
xorl
push
mov
addl
push
adcl
push
push
andl
call
test
movl
je
sbbl
lea
xorl
push
orl
call
movl
jmp
push
sbbl
push
sbbl
call
decl
test
jne
push
push
call
adcl
test
movl
jne
push
xorl
push
andl
call
test
movl
jne
push
adcl
push
push
call
xorl
test
movl
jne
sbbl
push
push
sbbl
push
sbbl
call
adcl
test
movl
jne
subl
push
addl
push
call
test
movl
jne
orl
push
push
xorl
call
test
movl
jne
push
orl
push
sbbl
call
test
movl
jne
orl
push
push
subl
push
xorl
call
test
jne
subl
push
adcl
push
xorl
push
orl
call
subl
test
movl
jne
push
push
adcl
call
test
movl
jne
push
adcl
push
subl
call
adcl
test
jne
orl
push
subl
push
call
xorl
test
movl
jne
push
push
sbbl
push
call
sbbl
test
movl
jne
push
push
push
call
sbbl
test
movl
jne
adcl
push
push
sbbl
call
test
movl
jne
movl
push
orl
push
call
xorl
test
movl
jne
push
push
subl
call
subl
test
movl
jne
xorl
push
andl
push
push
sbbl
call
test
movl
jne
xorl
push
andl
push
orl
push
addl
call
xorl
test
movl
jne
movl
push
andl
push
call
test
movl
jne
sbbl
push
adcl
push
movl
call
xorl
test
jne
orl
push
orl
push
call
test
movl
jne
push
subl
push
adcl
push
addl
call
addl
test
movl
jne
addl
push
push
push
call
test
jne
subl
push
xorl
push
subl
call
notl
test
movl
jne
push
negl
push
call
xorl
test
jne
subl
push
notl
push
orl
call
test
jne
orl
push
push
andl
push
call
subl
test
movl
jne
push
andl
push
push
call
subl
test
jne
push
push
call
orl
test
je
addl
xor
movl
jmp
subl
movl
sub
mov
adc
mov
sub
mov
xor
or
adc
mov
mov
sbb
mov
movl
add
lea
xor
mov
lea
movl
cmpl
je
cmpl
jne
push
push
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
adc
mov
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
pushl
call
jmp
adc
mov
movl
cmpl
je
cmpl
jne
pushl
push
push
pushl
pushl
push
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
and
mov
xorl
mov
or
mov
xor
mov
add
mov
movl
mov
cmp
movl
jne
adcl
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
push
pushl
pushl
call
jmp
and
mov
sbb
mov
inc
xor
movzwl
or
add
sub
mov
add
mov
movl
cmpl
je
cmpl
jne
push
call
cmpl
jne
mov
dec
mov
xor
add
dec
mov
jmp
xor
movl
cmpl
je
cmpl
jne
pushl
push
push
pushl
call
mov
dec
mov
jmp
not
add
xor
mov
xorl
mov
andl
mov
inc
mov
cmpl
jne
call
cmpl
jne
mov
inc
mov
cmpl
jb
addl
mov
mov
mov
or
mov
mov
mov
add
mov
or
mov
movl
cmpl
je
cmpl
jne
pushl
push
push
push
pushl
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
andl
xor
add
inc
mov
cmpl
jne
call
cmpl
jne
mov
inc
mov
cmpl
jb
or
mov
xor
movl
mov
xor
orl
add
movl
jmp
andl
xor
add
inc
mov
cmpl
jne
pushl
push
push
call
cmpl
jb
mov
adc
mov
xor
lea
push
mov
orl
xor
addl
lea
orl
push
adc
mov
pushl
sbbl
call
xor
mov
mov
xor
lea
mov
not
mov
sbbl
xor
xor
subl
add
mov
xor
movl
lea
mov
cmp
movl
jbe
movl
cmpl
je
cmpl
jne
push
push
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
sbb
mov
dec
mov
movl
mov
andl
mov
inc
mov
cmpl
jne
push
call
cmpl
jb
mov
mov
add
mov
andl
sub
xorl
xor
mov
movzbl
mov
cmp
movl
jne
lea
mov
orl
lea
addl
mov
mov
test
movl
je
xor
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
cmpl
jne
xor
add
inc
mov
jmp
mov
movl
cmpl
je
cmpl
jne
push
push
push
call
mov
dec
mov
jmp
mov
addl
mov
mov
mov
movzbl
and
mov
notl
mov
cltd
andl
jmp
xor
xor
inc
mov
cmpl
jae
cmpl
jne
push
pushl
push
call
cmpl
jne
mov
inc
mov
jmp
and
mov
add
mov
sbb
add
adc
mov
adc
andl
add
xor
mov
mov
movl
cmpl
je
cmpl
jne
pushl
pushl
push
pushl
pushl
pushl
pushl
call
mov
dec
mov
jmp
xor
add
and
mov
mov
xor
add
mov
adcl
xor
mov
mov
xor
mov
cmp
jne
mov
cmp
je
mov
mov
mov
xor
add
adc
xor
xor
cmp
jne
cmp
jne
mov
mov
xor
mov
mov
mov
add
jmp
mov
cmp
je
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
pushl
mov
pushl
add
mov
mov
pushl
call
mov
mov
mov
jmp
mov
mov
xor
add
cmp
jne
mov
mov
mov
xor
add
cmp
jne
mov
push
xor
add
push
push
pushl
pushl
call
mov
mov
mov
mov
mov
xor
add
mov
mov
mov
mov
mov
mov
mov
movl
mov
xor
add
mov
mov
mov
mov
mov
mov
push
pop
sub
add
movl
mov
mov
mov
mov
mov
mov
mov
xor
add
mov
lea
mov
mov
xor
add
mov
lea
push
mov
xor
add
push
mov
push
pushl
call
mov
mov
mov
mov
xor
mov
add
jmp
lea
mov
mov
sub
mov
mov
mov
mov
movl
mov
movl
mov
xor
add
mov
mov
xor
add
mov
movl
movl
mov
mov
xor
add
cmp
je
mov
xor
mov
sub
add
mov
mov
xor
add
imul
cmp
ja
mov
mov
mov
sub
xor
xor
add
div
mov
mov
mov
xor
add
cmp
jbe
mov
xor
add
mov
mov
mov
xor
add
imul
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
add
movl
mov
mov
mov
movl
movl
mov
mov
xor
add
jmp
movl
movl
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
xor
add
add
imul
add
mov
mov
mov
cmp
jb
mov
mov
xor
add
imul
mov
xor
add
or
mov
xor
add
mov
xor
add
mov
lea
jmp
mov
mov
xor
lea
mov
jmp
mov
mov
xor
lea
lea
xor
cmp
jne
mov
mov
mov
xor
mov
xor
mov
xor
mov
mov
xor
mov
mov
mov
xor
add
mov
mov
xor
add
mov
lea
mov
lea
mov
mov
test
je
movl
movl
movl
movl
call
mov
mov
mov
mov
mov
mov
mov
mov
cltd
mov
mov
add
adc
andl
xor
mov
mov
mov
mov
xor
add
mov
adcl
xor
mov
mov
xor
mov
cmp
jne
mov
cmp
je
mov
mov
mov
xor
add
adc
xor
xor
cmp
jne
cmp
jne
mov
mov
xor
mov
mov
mov
add
mov
mov
mov
xor
mov
add
xor
add
adc
xor
xor
xor
add
adc
xor
xor
cmp
jne
cmp
jne
mov
mov
mov
push
add
push
lea
push
call
mov
mov
pop
pop
pop
leave
ret
xor
subl
inc
ret
push
mov
sub
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
push
push
push
call
cmpl
jne
mov
inc
mov
jmp
mov
or
mov
movl
mov
xor
push
adc
mov
sbbl
xor
and
mov
push
movl
mov
subl
add
cmp
movl
je
mov
mov
sbb
mov
xor
xor
xorl
add
xorl
add
adc
notl
xor
addl
mov
inc
push
add
xor
xor
mov
add
adc
movl
xor
xor
movl
cmp
movl
jne
cmp
je
jmp
mov
mov
mov
xor
add
mov
imul
mov
xor
add
mov
mov
mov
mov
xor
xor
add
adc
lea
xor
xor
xor
mov
add
adc
xor
xor
cmp
jne
cmp
jne
mov
pop
pop
pop
leave
ret
push
mov
push
andl
jmp
xor
add
inc
mov
cmpl
jae
cmpl
jne
push
call
jmp
movl
add
mov
movsbl
add
mov
sbbl
sub
mov
xorl
xor
movl
cmp
movl
jne
mov
push
mov
add
mov
mov
mov
xor
add
cmp
pop
je
mov
jmp
mov
xor
add
leave
ret
push
mov
sub
push
adcl
push
push
lea
push
addl
lea
push
xorl
call
subl
push
push
sbbl
push
subl
call
xor
movl
movl
mov
mov
xor
mov
adc
mov
add
decl
mov
mov
adcl
test
je
mov
mov
mov
xor
xor
and
mov
mov
xor
adc
add
mov
sbb
mov
movl
cmpl
je
cmpl
jne
push
pushl
push
push
call
xor
or
dec
mov
jmp
xor
andl
mov
inc
mov
cmpl
jne
call
cmpl
jne
mov
inc
mov
cmpl
jb
or
add
sub
mov
mov
xor
add
dec
mov
movl
cmpl
je
cmpl
jne
pushl
push
pushl
push
push
push
call
xor
xor
dec
mov
jmp
andl
xor
xor
inc
mov
cmpl
jne
call
cmpl
jb
and
mov
xor
adcl
add
xorl
mov
xorl
sub
lea
adcl
xor
xor
cmp
movl
je
andl
jmp
xor
or
inc
mov
cmpl
jae
cmpl
jne
push
push
pushl
call
jmp
mov
and
mov
mov
xor
movl
add
cmp
movl
jne
pushl
negl
call
movzbl
xor
mov
sbb
mov
mov
sbbl
xor
add
movl
jmp
dec
je
dec
stos
cmp
adc
jp
jp
xor
jp
sub
cmp
popa
xor
cmp
push
xor
fdivr
insb
inc
imul
jl
push
iret
pop
dec
cmp
cli
xchg
dec
jg
mov
sub
data16
push
jg
jmp
xchg
fimuls
mov
imull
add
push
cli
es
or
imul
pop
add
jo
les
sbb
je
arpl
xchg
pop
mov
repz
cmp
or
sub
xor
push
jecxz
mov
test
inc
push
dec
or
repz
faddl
push
stc
push
push
mov
inc
pop
movsl
sbb
stc
popf
xchg
xchg
imul
mov
xchg
inc
xchg
add
ffreep
in
inc
loop
and
jl
sbb
ljmp
enter
repz
int
je
xor
aam
fldcw
or
les
fdivs
cmc
cmc
or
mov
lods
repnz
push
fbld
add
sar
sarl
inc
jmp
xor
in
fldl
fisttpl
test
mov
clc
movsl
jg
idivb
lods
add
rcl
xchg
insb
test
mov
cmp
mov
xor
cltd
lea
ret
loopne
sub
sbb
sbb
sbb
cli
jmp
inc
sub
out
aaa
lods
mov
outsb
push
hlt
xor
out
movl
lahf
mov
daa
mov
pop
rcrl
scas
fisubs
or
push
add
sbb
fcom
or
mov
dec
aaa
lcall
sbb
or
popa
inc
rcr
mov
add
sub
das
jno
fnstenv
aad
aad
scas
mov
and
fbstp
jns
aaa
xor
jmp
andl
aas
or
sub
jbe
jne
mov
mov
sbb
imul
cmp
aaa
ss
adc
xchg
cmp
mov
sub
push
mov
enter
pop
cmpsl
fnstenv
gs
and
pop
mov
fisubrl
xor
in
aam
and
in
lock
and
clc
jmp
cli
or
cltd
mov
gs
mov
push
jmp
sbb
pushf
jge
push
add
mov
insb
cli
cmp
add
or
xlat
jp
sub
lret
cmp
jle
push
xor
loopne
mov
pop
movb
mov
mov
lahf
add
and
adc
addb
into
loop
push
xor
pop
and
add
push
jl
mov
jmp
fldt
cltd
loope
mov
hlt
dec
and
inc
xchg
jp
sub
cmc
lahf
sbb
lods
xlat
mov
rcrb
inc
les
nop
and
inc
jmp
jg
inc
adc
sbb
pop
ljmp
mov
mov
mov
adc
sbb
ja
mov
call
lods
sarb
xchg
add
loope
mov
and
loopne
pop
xchg
pop
iret
dec
push
jo
jae
out
lods
jecxz
inc
xor
adc
mov
repz
cli
sbb
jno
loop
add
push
imul
mov
pop
xchg
je
cltd
push
sbbl
and
cmp
cmp
les
enter
call
icebp
sbb
mov
repz
inc
adc
jl
push
cli
popf
mov
ds
dec
pop
fsubl
gs
sti
pop
das
inc
sub
cmp
ret
inc
cmp
cmpsb
mov
adc
stc
sub
pop
mov
in
inc
mov
xor
dec
push
jmp
jge
std
and
repz
ljmp
jnp
into
adc
scas
or
addps
jae
iret
push
jecxz
int
leave
rclb
jns
adc
arpl
jge
dec
ret
and
adcb
sub
repz
icebp
test
sbb
inc
dec
add
cmp
sbb
mov
adc
repnz
stos
mov
imull
jmp
push
mov
ffree
lock
cmpsb
call
xlat
jg
pop
in
add
repnz
add
pop
sti
ds
xor
add
lret
or
pusha
icebp
push
xor
imull
sbb
pop
inc
imul
add
cmp
mov
ficoml
js
fs
lods
mov
cmpsl
mov
in
xor
aad
loope
in
daa
iret
loope
leave
imul
maskmovq
mull
adc
mulb
out
js
xchg
sbb
repz
fildll
daa
in
pop
popf
mov
loope
adc
je
cmp
iret
lods
cmp
push
imul
addb
cmc
dec
and
loop
push
push
pop
xchg
stos
dec
popa
sbb
int3
push
pusha
je
and
xchg
es
arpl
ljmp
in
jecxz
aam
in
xor
repnz
inc
dec
mov
sbb
push
jns
mov
stc
scas
mov
sbb
mov
pop
push
dec
test
xchg
push
cmpsl
clc
dec
call
dec
mov
xchg
push
lods
fwait
test
outsb
mov
cmp
dec
mov
and
jbe
pop
maxps
jge
popf
cli
pop
jg
mov
call
push
mov
fmul
in
fs
mov
cmp
subl
inc
fimuls
xchg
cmp
cmp
cld
bound
cwtl
sbb
cmp
pushf
dec
pop
adc
das
imul
iret
add
enter
adc
lahf
or
into
sub
aaa
fwait
or
outsb
adc
add
jne
cld
fucomip
popa
test
test
orb
mov
dec
out
jne
daa
adc
call
mov
pandn
lret
mov
sub
fadd
push
stc
xlat
inc
movsl
sub
and
clc
pop
and
int
jne
iret
in
rclb
bound
mov
dec
stc
imul
mov
loopne
dec
adc
jo
add
bound
lcall
push
mov
sub
sbb
xchg
mov
add
push
fcoms
ja
mov
mov
outsl
push
xchg
push
dec
out
xor
das
cld
jp
lods
aas
fst
push
repz
out
imul
int
test
add
mov
adcb
outsl
adc
test
fistpll
mov
cs
nop
ja
xor
push
and
inc
movl
sti
loop
fisubl
int
data16
push
adc
xor
scas
jb
mov
cmp
xchg
jge
pop
sub
and
rolb
addl
fisttpll
js
push
xor
mov
jle
push
cmp
in
lods
popa
dec
sbb
pop
mov
xor
and
mov
inc
mov
and
mov
cmp
cmc
push
outsl
aas
cmp
test
push
mov
jo
pop
push
stos
inc
cld
nop
mov
addl
push
lods
sub
pusha
mov
sub
jmp
or
pop
int
movsl
or
gs
loopne
inc
je
je
je
andb
scas
sub
cld
mov
adc
add
arpl
or
mov
dec
test
xor
movsl
sbb
das
and
rorb
repz
fcmovnbe
jno
add
lret
push
not
add
int
cwtl
dec
inc
push
mov
mov
test
push
jbe
push
cmpsl
aad
in
push
fstp
xchg
aad
jns
mov
mov
repnz
stc
lods
loope
popa
adc
scas
xchg
xchg
push
lea
inc
mov
ret
push
add
in
push
outsb
lock
mov
pop
or
and
ljmp
je
gs
sub
mov
jo
xchg
movsb
dec
pop
or
sub
dec
out
mov
out
xchg
pop
jge
insl
lret
dec
jmp
in
push
leave
in
test
cmp
fdivs
sub
sub
stos
xorl
mov
repnz
or
cmc
mov
jno
int
sub
pop
arpl
dec
test
jl
dec
mov
aaa
hlt
or
aad
xor
pop
daa
adc
or
mov
add
pminub
adc
cmp
push
mov
or
cmp
icebp
dec
jecxz
inc
adc
addr16
fsubrl
jnp
popf
scas
fwait
aam
sbb
inc
adc
popa
jp
dec
push
jmp
cmp
or
pop
or
jle
mov
and
test
icebp
mov
dec
add
dec
cmc
lret
inc
sahf
cmp
add
dec
int
pop
bound
jmp
rcll
jae
sahf
mov
leave
jmp
es
mov
repnz
pop
mov
mov
daa
arpl
vcvttss2si
jmp
or
add
jns
sbb
sub
jl
bound
pop
dec
pop
dec
in
inc
pop
scas
or
dec
push
scas
lret
addr16
sbb
mov
in
incb
or
cmp
xor
testb
cwtl
lcall
xchg
out
and
mov
jp
xor
dec
and
push
cs
js
popf
mov
mov
mov
scas
jno
ficoml
lock
outsl
or
insb
out
sbb
test
mov
mov
mov
lret
jb
jg
jb
popa
mov
jne
icebp
xchg
mov
retw
leave
sub
push
and
jg
fstl
dec
mov
sub
insb
xor
or
mov
and
dec
aaa
push
adc
movsb
cmp
enter
ds
es
aad
stc
fcmovu
mov
inc
mov
inc
push
xchg
pusha
shll
lcall
dec
icebp
fistl
sub
in
jle
cs
or
inc
gs
mov
dec
in
xor
dec
mov
pop
ret
pop
ds
pusha
push
xchg
jbe
lahf
stos
cmp
dec
mov
and
daa
inc
jge
mov
or
shlb
xchg
pusha
jbe
xchg
sti
add
data16
fsub
pop
icebp
adc
lock
and
sahf
pop
mov
jl
xchg
jge
cmp
mov
push
addr16
add
xchg
mov
adc
sbb
or
push
xor
enter
fmull
popf
das
shlb
xchg
pavgb
int3
mov
outsl
and
sub
or
adc
inc
ds
jne
push
cli
mov
in
bound
leave
cmp
fisubrl
test
andb
rcl
jo
xchg
sub
daa
call
and
mov
ds
incl
sbb
mov
push
bound
xor
adc
xor
xor
sarl
sbb
pusha
sub
in
adc
dec
sysexit
in
or
into
cmp
xchg
in
bound
jg
mov
es
insb
shlb
push
inc
lahf
decb
and
sbb
push
orl
jge
pop
clc
push
push
imul
lods
or
jg
cmp
and
or
lds
xchg
pushl
lcall
test
jl
xchg
int
lea
jecxz
ret
fidivl
xchg
or
jns
xorl
dec
pop
inc
outsl
jp
xchg
aam
pop
sbb
pop
and
sahf
mov
lods
cmp
mov
nop
incl
loopne
fsubrs
icebp
fimull
or
push
sub
push
clc
test
jnp
xchg
xorb
rorb
push
pop
mov
mov
sbb
in
arpl
test
adc
add
dec
mov
mov
arpl
rorl
xchg
mov
dec
xor
fadd
xorl
pop
jae
fucomi
lahf
ljmp
sub
repnz
test
add
or
ffreep
out
jle
fisttpl
or
or
call
in
or
repnz
out
fmull
icebp
cli
xchg
pushf
cmp
adc
mov
sbb
and
xor
xchg
inc
dec
or
dec
lret
sahf
add
push
lahf
loop
ja
roll
sub
add
and
add
ret
inc
mov
outsl
push
in
cmp
inc
aas
std
sarl
add
fdivr
or
jae
or
enter
outsb
push
andl
or
test
cli
rcr
arpl
les
lods
iret
rorl
cltd
pop
std
shr
subb
pusha
jbe,pt
and
pushw
jns
adc
xor
xor
mov
inc
and
xchg
or
sbb
lods
mov
stos
ss
jae
jb
js
negb
jb
movsl
adc
cld
aas
repnz
jg
roll
push
xchg
lret
pop
push
add
in
push
jnp
push
addr16
cmc
inc
out
adc
loopne
push
push
or
add
add
dec
pop
inc
repnz
test
stc
pop
xchg
inc
mov
mov
pop
lods
insl
fwait
stos
addl
aad
loopne
cmp
ljmp
ljmp
int3
lea
sbb
fwait
xchg
xor
inc
addr16
es
cwtl
dec
sbb
jne
jge
adc
xchg
ss
lea
ret
imul
rorb
jbe
scas
dec
mov
into
push
fs
or
loop
add
andb
adc
loop
xor
pop
add
out
adc
daa
lahf
cmp
mov
das
imul
jp
xchg
jne
lret
and
dec
xchg
or
orl
sub
aas
mov
pop
add
mov
mov
fsubl
mov
sbb
mov
adc
clc
mov
cli
pop
andl
pop
jge
push
or
xor
sub
xchg
add
cmp
lods
xchg
daa
xchg
sahf
add
or
cmpsl
daa
pop
insl
clc
test
sbb
les
add
stos
jne
lock
push
cmpb
push
pop
andb
push
inc
fbld
andb
insl
push
pop
into
movsl
xchg
mov
sub
jmp
xchg
out
rol
cli
push
sbb
call
loopne
in
cmp
outsb
faddp
mov
mov
sbbb
mov
outsl
pop
pop
sbb
jge
cld
fs
or
aad
test
arpl
outsl
push
sub
cmpsb
fmul
ss
cmp
dec
xchg
sti
bound
jb
imul
out
popf
sbb
dec
in
rorb
jo
in
cmp
xchg
sarl
push
fwait
lods
dec
addr16
sbb
xchg
stc
hlt
fsts
roll
dec
iret
lods
push
jl
cmpsl
mov
movsl
pop
mov
lds
das
pop
sarl
cmc
mov
cmp
fstps
pop
inc
sbb
sub
scas
push
push
inc
stos
gs
cmpsb
pop
sub
sub
add
xchg
lock
sti
fnstcw
adc
xchg
jnp
daa
xor
push
mov
dec
mov
sub
jno
cmpsl
notl
xorl
adc
mov
dec
push
into
or
push
dec
mov
dec
add
mov
mov
push
inc
adc
movsl
adc
and
cmp
test
inc
dec
daa
jl
push
xor
mov
test
fisttpll
sahf
add
ret
jecxz
and
dec
lcall
push
sar
cmpsl
pop
gs
add
mov
push
out
sub
jbe
ficoml
or
cltd
stos
mov
mov
fisttpll
push
or
dec
shlb
dec
mov
sub
sarl
fwait
rorl
push
outsl
aas
push
pop
mov
xchg
pop
xor
scas
inc
pop
cs
add
pop
xor
mov
mov
sub
xchg
je
ljmp
mov
rcrb
pop
jle
popa
repz
and
cmpsl
mov
js
xchg
stc
enter
cmp
ds
les
and
outsl
lods
test
int
arpl
xor
imul
mov
pop
lds
js
cmp
sub
pusha
lcall
inc
cmc
movsb
cld
lcall
mov
cmpsl
dec
fwait
push
lret
icebp
mov
lahf
dec
inc
inc
pop
mov
mov
push
or
jl
xor
and
jae
lea
imull
stos
das
divb
hlt
mov
rcl
sbb
fnstcw
inc
loope
xchg
inc
inc
mov
xor
inc
jge
fdivr
loopne
push
pop
bound
dec
shrl
lock
movsb
adc
cmpsl
pop
repnz
fidivl
cmpl
sbb
int3
xor
xor
das
push
out
sbb
sub
adc
dec
out
dec
sub
mov
fwait
scas
adc
lock
push
arpl
sub
int
imul
pop
aaa
aas
cmpsb
mov
or
faddp
das
inc
push
loopne
test
pop
jmp
or
sarb
pop
lds
insb
pop
pusha
ds
fwait
gs
movsb
repnz
ret
test
decb
js
adc
cmp
push
mov
in
loopne,pn
cmpl
cmp
adc
jo
popa
and
loope
cmp
lods
push
pop
jo
sar
jp
gs
aaa
xchg
mov
mov
jecxz
sbb
xchg
pop
sub
xor
ret
cmp
stos
inc
cmp
or
inc
dec
inc
cmc
add
xchg
sbb
xor
arpl
ficoml
fs
mov
adc
push
pop
and
lcall
sbb
aad
xchg
imul
sbb
ss
mov
and
xor
adcb
test
jne
bound
mov
jnp
and
dec
outsb
mov
cmp
and
jnp
ljmp
mov
ljmp
stos
pop
in
jg
dec
adc
fbld
lods
jmp
mov
jo
in
out
stc
jg
test
inc
xor
xbegin
mov
cld
lock
jne
jg
pop
iret
sti
jl
stos
dec
into
cli
leave
out
pop
icebp
mov
or
add
mov
imul
cmpsl
dec
aaa
sub
fwait
pop
xor
je
jp
shr
cmp
xchg
mov
sbb
or
xchg
fmull
mov
xchg
or
xchg
or
pop
leave
dec
push
mov
loopne
popl
mov
or
add
push
jge
or
and
mov
in
mov
mov
jb
adc
fmull
rcll
and
imul
push
pop
jle
in
pop
inc
inc
sbbb
ret
lds
xor
add
inc
outsl
sub
inc
add
mov
hlt
arpl
fidivrl
lods
cmpl
cwtl
sbb
sbb
cmp
gs
test
test
xchg
sbb
adc
inc
pop
inc
inc
dec
imul
fbld
add
out
repz
cltd
mov
insb
dec
int3
ret
dec
inc
fisubrl
adc
or
cmc
imul
add
jecxz
out
push
cmp
jle
es
fwait
movl
adc
cltd
rcrb
mov
pop
sbb
jb
aas
loopne
sbb
pusha
xor
jmp
or
loopne
shlb
gs
mov
test
and
mov
cmp
cmp
sbb
adc
jg
dec
fcompl
lock
std
fdivl
das
add
pushf
push
js
push
lock
out
lea
and
data16
xor
js
cmp
daa
xchg
cld
int
popa
fs
xor
sbb
lods
loopne
or
scas
dec
push
shr
jae
inc
xchg
dec
sbb
lret
and
inc
mov
or
imul
sbb
les
xlat
sub
ffreep
fistpl
pop
imul
cltd
jmp
daa
in
jnp
or
lock
pop
cwtl
cmp
sub
fistps
mov
in
add
inc
and
bound
jns
add
dec
push
mov
icebp
pop
or
stos
cmp
sbb
mov
jne
push
repnz
loope
adc
test
mov
mov
int
add
scas
cmpsl
mov
xchg
arpl
out
mov
push
addr16
sub
push
inc
pop
inc
lcall
lods
xor
repz
pop
cmp
mov
data16
arpl
cwtl
mov
xchg
jb
addr16
mov
inc
in
movsb
sub
push
jl
fs
testl
cmp
push
pop
out
iret
dec
mov
pusha
dec
mov
xor
dec
mov
stc
xor
add
or
cltd
inc
push
sbb
les
or
mov
jo
out
dec
les
int3
lods
jmp
out
iret
dec
loop
das
pop
sub
push
ror
adc
dec
or
js
clc
iret
add
sti
mov
lock
inc
loop
push
xor
jmp
inc
cs
xchg
repnz
push
loop
fadds
test
adc
xor
lods
sbb
sub
or
xchg
movsl
add
das
mov
andb
movsl
shrb
scas
jmp
test
push
rol
xor
jp
icebp
fistl
inc
xchg
sub
rorb
push
sti
xchg
sbb
idiv
data16
test
pusha
inc
mov
mov
mov
add
add
fadds
mov
dec
cmc
das
inc
sbb
pop
jp
adc
lea
outsb
in
test
scas
mov
cltd
in
add
xchg
enter
lea
lcallw
test
push
and
cmpsl
or
popa
xor
cli
mov
dec
stos
in
vpminsw
add
or
pop
xor
ds
jge
nop
mov
jg
fistps
decl
outsb
icebp
mov
pslld
xor
xor
popa
icebp
lods
adc
inc
int
adc
add
cmpsb
mov
adcb
xor
or
les
fisubrs
movsb
in
mov
sub
cltd
mov
sbb
fbld
sbb
into
jmp
and
icebp
push
hlt
rcrl
pop
adc
push
test
pop
xor
outsb
dec
pushl
and
jb
adc
or
pop
clc
leave
sub
or
bnd
dec
add
xchg
mov
fs
fistps
repnz
loope
pop
in
mov
mov
dec
in
push
jmp
push
add
xchg
cmpsl
jp
jg
loopne
outsl
inc
mov
mov
xchg
sbb
fistps
sbb
adcl
and
scas
aad
cmp
cmc
xchg
es
add
adc
mov
jp
push
icebp
push
cwtl
sahf
or
fisubrs
fwait
pop
adc
call
add
inc
sbb
iret
jge
sahf
mov
imul
mov
xchg
lret
cmpsl
and
enter
outsb
nop
and
leave
adc
pop
mov
sbb
shrb
cmpsl
xor
fisttpl
rclb
sbb
mov
mov
xchg
mov
pop
mov
sub
adcl
ret
cmc
in
fidivrs
xor
fadd
push
lahf
mov
out
adc
call
jmp
mov
xor
push
imul
dec
mov
enter
lret
xchg
inc
pusha
add
popf
cs
cmp
and
mov
mov
lahf
std
mov
push
jb
into
daa
ss
xlat
jno
es
cli
fwait
push
bnd
xchg
mov
imul
popa
jmp
cmp
subb
mov
xchg
clc
pushf
outsl
mov
jecxz
test
outsl
xchg
sar
clc
sub
mov
and
push
adc
xor
cs
cmpsb
add
hlt
sbb
jmp
shll
les
cmp
fnstcw
test
xorb
cmpsl
les
mul
jg
aaa
sbb
pop
push
sbb
bound
fcompl
test
ds
enter
negl
add
lcall
loopne
pop
lret
pushf
lods
mov
xor
sbb
iret
mov
shl
das
mov
int3
dec
bound
mov
or
in
das
dec
jl
push
push
sub
add
xchg
sbb
mov
testl
jmp
push
cmc
dec
inc
sbb
adc
in
sub
jmp
and
jmp
js
loop
or
mov
xor
je
pop
add
xlat
cmc
ficomps
push
inc
pushf
xchg
insl
inc
vmwrite
rcll
aas
inc
or
xor
sbb
and
cmp
rorl
call
sbb
loop
fisubrl
mov
xchg
shlb
ja
fwait
mov
pextrw
cmp
nop
adc
les
arpl
inc
outsb
gs
dec
pop
jle
pusha
mov
repnz
mov
push
inc
mov
add
ret
add
mov
fs
sub
pop
mov
cmp
and
ljmp
mov
cmpl
mov
sub
sbb
lcall
test
cltd
addr16
test
sbb
xchg
lret
jns
loope
xchg
ds
add
ds
imul
cmp
pop
fidivl
add
outsb
out
xor
stos
xchg
clc
jns
lods
shlb
ret
cmp
gs
and
add
enter
xchg
adc
pop
sub
ds
nop
aaa
stos
push
pushf
aad
clc
scas
arpl
dec
mov
mov
sbb
adc
xchg
loopne
mov
push
outsl
mov
ljmp
xor
push
lahf
imul
cmpsb
cld
jp
in
adc
adc
out
arpl
aam
imul
add
aas
sub
mov
mov
subb
fld
adc
jnp
sbb
ds
inc
xchg
inc
and
rorb
das
out
adc
shll
and
scas
sbb
arpl
aas
jns
adc
test
test
lods
into
xor
frstor
pushf
repnz
aam
push
or
adc
sbbl
sbb
jo
cmc
lcall
cltd
mov
xchg
ja
icebp
jne
cld
aam
test
lods
dec
push
es
sub
mov
xchg
jo
add
pop
pusha
jge
decl
adc
cmpsb
sbb
fs
jae
mov
iret
cmpsl
cwtl
jb
mov
mov
cmpsl
sbb
push
jb
and
mov
mov
push
pop
mov
mov
adc
pop
mov
les
call
test
jb
mov
sbb
xor
and
mov
jbe
test
lock
mov
movsb
sbb
test
xchg
add
or
or
rol
cmp
ret
iret
jecxz
inc
lods
xchg
xor
addr16
ja
fiadds
dec
adc
add
mov
aam
mov
push
outsl
mov
lret
inc
cmp
jmp
add
not
test
mov
loope
pop
rcll
push
scas
jmp
aam
and
mov
xor
adc
aas
fcmovu
das
test
jle
pop
xlat
cmp
add
insb
xor
mov
je
add
out
mov
repnz
int
cmp
negl
cmp
xor
jmp
loopne
popf
inc
mov
test
mov
mov
xchg
add
pop
stc
insb
mov
mov
push
push
inc
call
arpl
mov
mov
repnz
lret
ljmp
in
jne
cmp
frstor
xor
and
jl
pop
jl
inc
roll
pop
pusha
pop
subb
and
aaa
pop
orb
cmp
cld
subl
lcall
pop
leave
xchg
dec
mov
mov
insb
cmpsl
into
psrld
push
inc
cltd
test
stos
inc
xor
push
imul
push
std
decb
inc
enter
divb
push
lods
xchg
das
mov
rclb
sarb
xor
inc
repnz
adc
pop
cmp
push
or
repnz
loope
popf
mov
cs
jo
adc
or
mov
jne
sbb
xchg
mov
mov
push
mov
sahf
adc
mov
push
pop
test
int
pop
mov
test
lock
and
mov
and
in
push
test
add
bound
jb
cltd
mov
push
push
cmp
hlt
mov
ds
mov
int
sbb
fistl
jbe
pushf
mov
ss
jne
imul
lea
stc
xchg
xor
popf
clc
imul
jge
sbbl
hlt
sbb
loope
aas
in
jno
in
ljmp
xor
into
stos
jae
in
loop
fnstcw
jecxz
out
movsb
fists
lret
jnp
xor
ss
loop
outsb
pop
into
jle
into
inc
sub
jno
scas
cmp
mov
mov
jle
sbb
dec
les
es
xchg
fmull
sbb
lret
cltd
push
add
push
repz
push
jo
push
aam
int3
aam
mov
mov
dec
sbb
icebp
xorl
mov
xchg
mov
imul
lods
cmpsb
jbe
mov
in
jno
push
and
push
pop
dec
push
jmp
xor
das
rolb
test
hlt
out
mov
mov
fistps
sub
and
cmp
push
js
sbb
cmp
inc
dec
je
jns
xchg
clc
dec
pop
outsl
std
mov
pop
xchg
adcb
or
int
iret
arpl
movsl
ret
jb
xor
mov
ror
xor
dec
inc
in
xor
add
ficomps
mov
sahf
aas
lret
fcomip
fdivrp
aaa
inc
insb
jns
pop
inc
in
mov
push
pop
sbb
jmp
adc
xor
lret
lock
push
adc
dec
stos
mov
shrl
push
in
push
cmp
insb
jg
decl
sub
xchg
lods
xlat
loopne
pop
outsl
lods
sub
fdivrp
cs
xlat
and
flds
roll
mov
rcl
mov
xor
ss
int3
xchg
pushl
push
jg
repnz
or
xchg
xchg
inc
add
dec
inc
je
add
sub
int
arpl
jmp
leave
jmp
jecxz
mov
adc
dec
xor
filds
mov
out
cli
dec
les
sub
icebp
cld
cld
jle
iret
mov
push
mov
mov
mov
cld
outsb
pop
sarb
pop
popf
shr
jns
out
inc
xchg
fcoml
ret
pop
movsb
dec
pop
out
roll
cmp
je
addl
pushl
xorl
pushl
call
sbb
mov
or
mov
mov
adcl
xor
add
movl
cmp
movl
je
mov
mov
sbb
mov
mov
add
mov
sbbl
mov
xorl
add
xor
mov
or
mov
xor
mov
andl
add
mov
movzbl
sbb
mov
movl
cmpl
je
cmpl
jne
push
push
push
call
cmpl
jne
mov
dec
mov
xor
or
dec
mov
jmp
incl
mov
add
mov
jmp
sub
mov
mov
sbbl
add
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
cmpl
jne
xor
xor
inc
mov
jmp
xorl
mov
mov
mov
xor
add
cmp
je
jmp
mov
mov
xor
add
cmp
mov
je
mov
xor
add
cmp
je
lea
push
pushl
pushl
call
mov
mov
xor
add
cmp
je
mov
movzwl
mov
mov
mov
jmp
mov
xor
lea
jmp
mov
xor
add
jmp
mov
add
mov
mov
test
je
movl
push
xor
pop
add
push
pop
push
dec
pop
dec
xchg
sub
xchg
dec
mov
imul
sub
mov
mov
xor
add
jmp
mov
mov
mov
mov
xor
add
xor
div
mov
xor
lea
mov
mov
mov
mov
mov
xor
lea
mov
mov
mov
xor
add
imul
mov
mov
xor
lea
cmp
jne
mov
xor
add
mov
mov
add
xchg
xor
push
mov
pop
mov
add
lea
add
add
push
inc
pop
dec
xchg
dec
xchg
dec
xchg
dec
push
mov
pop
dec
call
cmp
je
xchg
push
pop
push
pop
inc
xchg
sub
xchg
dec
dec
mov
imul
add
xchg
push
xor
mov
dec
inc
add
dec
xor
add
pop
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
xor
mov
push
andl
jmp
xor
or
inc
mov
cmpl
jae
cmpl
jne
push
call
cmpl
jne
xor
or
inc
mov
jmp
andl
jmp
xor
or
inc
mov
cmpl
jae
cmpl
jne
push
push
push
call
cmpl
jne
mov
inc
mov
jmp
movl
cmpl
je
cmpl
jne
push
push
pushl
call
mov
dec
mov
jmp
push
adc
mov
mov
and
mov
mov
mov
movl
cmpl
je
cmpl
jne
push
pushl
push
push
pushl
push
push
call
mov
dec
mov
jmp
andl
movl
add
movl
add
mov
andl
mov
inc
mov
cmpl
jne
push
pushl
push
pushl
push
call
cmpl
jne
xor
xor
inc
mov
cmpl
jb
andl
xor
xor
inc
mov
cmpl
jne
push
call
cmpl
jb
and
mov
sub
mov
xorl
mov
mov
sub
mov
orl
jmp
negl
pop
adc
divl
jge
aam
inc
jecxz
xor
jp
pop
jp
imul
pop
mov
mov
cmp
sbb
sarb
out
xor
jmp
and
mov
lds
jae
inc
and
cmp
aam
lock
jns
ja
sub
cmp
push
cmpsb
rcrb
cmp
outsb
shlb
push
mov
fdivr
sub
subl
lret
arpl
stos
mul
and
lods
nop
mov
push
dec
mov
outsb
in
and
mov
mov
adc
addr16
mov
jne
movsl
sub
rorb
icebp
js
pop
xor
mov
cld
stos
nop
loopne
sub
lods
adc
pop
jecxz
ret
ret
dec
outsl
mov
ss
dec
xchg
push
sub
cmp
push
and
xorl
fisttpll
ds
pop
push
pop
and
dec
xchg
int3
xchg
xchg
fsubs
sub
divl
cmp
inc
enter
dec
cmp
test
mov
xchg
add
push
pop
fstps
stos
rcr
inc
push
rcrl
sbb
mov
std
es
mov
in
xor
stc
xchg
outsl
mov
pop
mov
insl
cli
sarl
mov
in
out
xchg
inc
sub
mov
in
loope
inc
adc
lret
int3
filds
cmp
push
dec
pop
movsb
out
jl
int
insb
dec
xchg
xchg
in
sbb
pop
or
mov
xor
sub
jbe
xchg
hlt
lock
or
lret
subb
repz
push
enter
add
outsb
push
cld
rcrl
cmp
mov
jb
pop
je
and
repz
add
iret
fstl
cltd
mov
jp
repz
negb
ret
pop
incl
pop
ljmp
mov
and
das
lret
adc
xchg
push
and
ficomps
iret
and
imul
xor
mov
sbb
sub
nop
or
test
outsb
pop
hlt
add
orl
jbe
fdivr
icebp
jg
mov
cmp
xchg
pop
lea
out
scas
cltd
jge
incb
sti
xor
stmxcsr
jae
jnp
sub
arpl
imul
mov
fldt
push
adc
repnz
fs
dec
std
inc
mov
mov
hlt
push
cmc
jecxz
loop
adc
out
test
call
roll
lods
xorl
scas
fstl
pop
test
in
adc
and
pop
sti
notb
inc
mov
push
imul
stos
mov
outsb
dec
pop
stos
lods
aaa
and
cmp
hlt
and
mov
xlat
pop
xchg
push
adc
push
aad
sub
test
push
bound
lea
cltd
imul
mov
paddq
out
cmp
dec
enter
pushf
pop
imul
fucomi
shlb
pop
sbb
ret
pusha
pushl
sbb
je
jbe
mov
and
loop
call
inc
std
xor
xor
cvttps2pi
stc
orl
cwtl
enter
cwtl
xor
and
mov
lret
push
cltd
iret
rorl
in
sbb
imul
rcrb
out
push
cmpsb
shrb
pop
or
lods
in
adc
dec
scas
mov
mov
jecxz
andps
push
stc
pop
loop
neg
rol
das
sub
bound
pushf
cs
test
push
inc
sub
ficoms
iret
ficoml
ja
fwait
js
int3
iret
inc
mov
stos
mov
pmulhuw
or
imul
pop
imulb
cmc
divl
aaa
sbbl
ja
leave
pop
xchg
mov
inc
xorl
aam
push
shl
inc
push
cmp
pop
add
mov
out
das
mov
test
sbb
js
pop
in
clc
dec
xor
adc
add
push
and
pop
cmc
ds
loop
or
mov
je
pop
je
pop
sbb
add
aad
insl
sub
cs
xlat
test
int3
shlb
loopne
daa
je
gs
jb
outsb
fisttpll
lahf
out
mov
mov
adc
xchg
push
fisubl
jl
push
dec
mov
xor
xor
ror
std
mov
add
add
rclb
xchg
push
lds
jne
std
fstpl
stos
addr16
out
outsb
xchg
orb
scas
push
or
test
or
ljmp
sbb
push
data16
sub
ja
repnz
pop
jbe
hlt
push
outsb
lcall
jb
rdpmc
out
mov
ffreep
les
sahf
mov
jg
inc
js
movsl
mov
fdiv
cmp
cmp
sbb
out
loop
push
or
shlb
xchg
out
es
popa
mov
mov
cmp
mov
gs
es
aas
mov
test
or
mov
cmc
push
pop
lret
addl
pop
fs
loope
stc
mov
icebp
test
insb
rcrl
pop
mov
adc
mov
mov
ret
call
jo
aam
sar
fwait
imul
push
fidivs
xchg
sub
pop
sub
ja
subb
pop
popa
mov
jl
cmpsb
xor
jbe
es
rcrl
sti
data16
xchg
cmc
leave
je
xchg
mov
inc
mov
ror
cmp
in
xor
xchg
cld
inc
in
jp
ret
stos
push
shlb
inc
test
jnp
aas
rcl
lcall
mov
cmp
and
loope
mov
cltd
mov
daa
loop
jbe
jp
rorl
and
cmp
pushf
add
or
push
sbb
sbb
mov
scas
out
testb
data16
loop
dec
dec
out
out
enter
rcrl
mov
mov
mov
adc
aas
pop
jbe
xor
xor
or
js
stc
lahf
lds
test
inc
lret
scas
test
dec
mov
insb
std
mov
or
in
jl
scas
addl
enter
loopne
loope
jmp
ret
into
cmpsb
int
cmp
in
dec
movb
jl
ljmp
arpl
jge
xchg
iret
add
std
xor
mov
jp
std
int3
addr16
jno
mov
add
xchg
mov
or
xor
jb
daa
and
in
in
out
xchg
dec
repnz
adc
dec
pop
int
out
sbb
loope
leave
in
inc
mov
jbe
or
jmp
or
stos
sub
cmpsb
ds
inc
mov
mov
div
out
xchg
and
xor
ret
xchg
mov
push
call
mov
loop
mov
mov
push
add
aas
out
pop
imul
mov
mov
pop
rclb
adc
int
jbe
sarl
cmpsb
stos
push
dec
daa
push
cmp
lret
daa
xchg
cmp
aaa
sbb
aaa
mov
stos
imul
sub
sub
add
test
ds
out
cwtl
jb
daa
inc
test
or
push
cli
jge
jecxz
and
sbb
icebp
mov
testb
jmp
pop
sub
dec
cld
xorb
stos
inc
push
ja
and
mov
xor
mov
jp
daa
jb
setns
dec
cmp
pushf
in
cmp
push
sbb
pop
push
xor
js
fcoms
aaa
mov
mov
stc
pusha
pop
mov
xchg
xchg
hlt
test
out
call
mov
and
fwait
stc
xor
stos
sub
lahf
and
push
mov
sbb
xchg
dec
sahf
out
shlb
xor
add
out
mov
pop
imul
fsubl
dec
test
pop
xchg
cmp
lea
fcmovnb
imul
mov
pop
scas
push
sub
out
cmp
das
les
mov
in
ljmp
adc
hlt
out
arpl
push
jno
scas
les
int3
mov
rolb
test
mov
inc
aam
sub
stos
sbbl
and
jno
cld
push
int
jl
adc
jnp
cmpsl
pusha
enter
rolb
push
ja
or
out
mov
insl
iret
sub
gs
mov
or
cmpsb
adc
std
sahf
sub
mov
jne
add
outsl
lret
adc
popf
jns
sbb
pushf
xchg
xchg
dec
nop
ljmp
mov
mov
cmp
pop
popa
popa
cmp
push
int3
push
mov
arpl
sub
sbb
clc
inc
ljmp
ret
dec
ja
in
mov
not
mov
inc
lret
inc
xor
sahf
pop
cwtl
mov
add
into
jge
cs
mov
dec
pop
daa
popa
iret
dec
icebp
jbe
pusha
dec
out
pop
push
push
cmp
xchg
xor
pop
xchg
pop
das
fs
stos
sbb
movsl
out
ja
imul
add
xchg
cmc
loopne
call
lds
shl
xlat
aaa
adc
dec
mov
push
push
vminps
scas
ss
jne
rorl
icebp
push
ffree
mov
in
jle
loope
add
aas
xor
stos
stos
insl
enter
mov
iret
sti
jno
daa
lods
cli
push
test
int
adc
push
push
test
imul
clc
out
jg
cmp
enter
xchg
cmp
push
mov
cmpsb
sbbb
jmp
cmp
xchg
pop
decl
hlt
add
lcall
push
jmp
and
xor
sub
test
les
mov
icebp
dec
popl
aaa
loopne
dec
pusha
sahf
outsb
mulb
inc
aas
adc
push
jne
cli
and
or
in
cmpsb
sbb
push
lcallw
insl
data16
loop
inc
dec
repnz
lock
ret
iret
pop
les
cmp
xor
scas
jno
dec
jg
jae
fcompl
xor
cmp
sub
inc
cmpsl
pop
icebp
cs
push
sub
mov
and
xchg
sbb
loope
out
fldl
xchg
sbb
mov
lea
jp
lods
fsubs
jbe
adc
mov
dec
mov
xchg
das
incb
sub
inc
insl
pusha
inc
mov
and
sub
iret
and
push
mov
shlb
es
outsl
imul
or
xor
pop
inc
sub
imul
or
adc
repnz
xchg
icebp
mov
xchg
dec
sbbl
push
out
pop
xchg
pop
bound
clc
ja
adc
push
incb
insb
test
and
and
ds
adc
lods
ss
ss
pop
dec
aam
xor
pop
mov
pusha
popa
jbe
mov
lods
push
inc
mov
lea
fdivp
test
mov
scas
int3
into
adc
cwtl
bsr
xchg
inc
cmp
xor
jp
fistpl
addr16
inc
sbb
mov
rorl
sub
dec
mov
pushf
dec
loop
int3
cmp
and
inc
mov
mov
icebp
dec
push
out
es
add
push
testb
sbb
scas
cmpsl
cli
fdivl
mov
cmp
jae
and
mov
push
es
adc
cld
js
mov
pop
xor
and
and
ljmp
cmp
fisubrl
mov
pop
pop
subb
mov
insl
inc
xchg
xchg
or
push
lea
incl
xorl
cmpsl
jecxz
mov
sbb
mov
mov
xor
data16
ljmp
add
aaa
mov
sbb
inc
or
xor
mov
idiv
stc
sub
mov
and
inc
xchg
xlat
lret
mov
rorb
cwtl
repz
xorl
shrb
lods
negl
push
pop
xchg
adc
movsl
jp
cld
sahf
mov
loope
orl
mov
push
gs
sahf
jp
push
sub
mov
out
push
mov
scas
lahf
xor
pop
adc
pop
sbb
or
ret
xchg
cmp
cmp
test
and
push
ret
je
mov
pop
addr16
and
imul
int3
push
xor
sub
cmp
xchg
fsubrs
jmp
lock
rol
out
call
aad
es
xchg
pusha
mov
or
xchg
xchg
fcoms
test
fwait
jne
mov
mov
mov
xchg
jmp
popf
test
popf
scas
mov
sbb
cmp
cmpsb
lahf
movsb
sub
push
out
gs
repz
xlat
xchg
mov
insb
inc
imulb
add
xor
insl
andb
call
mov
pop
inc
imul
out
xchg
xchg
out
push
xchg
inc
lds
lret
pop
es
xchg
addr16
inc
cmp
lcall
mov
sub
mov
data16
jns
xchg
lods
adc
adc
and
inc
mov
pop
aam
scas
or
outsb
mov
outsb
hlt
mov
add
jle
gs
adc
mov
movsl
mov
int3
fwait
cmp
mov
mov
pop
sub
pop
js
adc
insl
xchg
inc
sbb
pop
int
incb
jno
mov
stos
sbb
bound
and
or
test
call
or
loopne
and
mov
inc
out
shl
test
xchg
cmp
mov
dec
enter
lock
add
pusha
push
dec
test
sti
ds
push
or
scas
cmp
stos
xor
lods
sar
loope
sbb
or
push
dec
mov
xchg
push
fwait
jmp
mov
test
outsl
sub
fs
xlat
push
lahf
push
pop
daa
sub
ret
xchg
mov
inc
and
xchg
cwtl
out
mov
xor
add
adc
call
cmp
or
push
ds
xchg
cmp
loope
sub
pop
mov
sbb
mov
fildll
jmp
call
add
out
mov
rorl
add
mov
fldcw
adc
add
xchg
sbbl
mov
js
dec
fcom
mov
fisubl
cmc
pop
jmp
cmp
xorb
flds
and
adc
xor
test
xor
add
adc
cs
adc
pop
sub
mov
push
outsl
push
or
inc
xor
in
xchg
nop
shrl
sub
lods
sti
inc
pop
push
ret
or
dec
sub
mov
pop
cmpsb
or
fidivrs
xor
outsl
dec
pop
cmp
mov
xchg
cmp
in
stos
mov
mov
pusha
cld
xchg
mov
jo
mov
xlat
mov
lret
pop
pop
into
test
mov
mov
cltd
in
sbbl
xor
in
xor
push
cmp
lock
sbb
jmp
shll
mov
in
jge
mov
fadd
fidivrs
sub
jb
jbe
shlb
setle
adc
and
scas
xchg
add
and
mov
inc
popf
xchg
lods
stos
stos
cmpsb
nop
or
sti
ljmp
movsb
loopne
add
xchg
shll
cmp
das
in
cli
cli
mov
imul
cmpsb
mov
xor
cmp
insb
fnstsw
hlt
icebp
sub
aaa
cmpl
ds
loop
add
mov
xchg
jo
out
pop
ja
loope
and
in
repnz
sub
fwait
inc
adc
or
lret
cli
mov
or
inc
shrl
lahf
testb
dec
sbb
lock
gs
sub
and
jg
jg
mov
sub
scas
add
leave
scas
mov
adc
pop
hlt
insb
ret
arpl
push
sti
mov
sub
das
cmp
mov
dec
stos
sub
rorl
lods
jo
pop
mov
and
or
mov
cmp
jecxz
jne
lahf
in
inc
sbb
pop
push
inc
mov
aas
xchg
adcl
cld
mov
adc
movaps
push
ja
pop
ljmp
ja
jae
call
dec
fsub
std
movsb
ret
pop
or
inc
adc
pop
mov
cmp
dec
mov
aaa
add
fld
inc
mov
push
call
je
daa
jae
jae
int3
jnp
cmp
cmp
push
mov
pop
lret
jne
leave
inc
movsb
mov
out
std
daa
popf
int3
not
js
mov
jbe
int
dec
bound
pop
sbb
les
or
xchg
icebp
jae
insl
testl
inc
push
inc
roll
fdivl
sub
mov
popa
int
add
cwtl
jecxz
aaa
roll
imul
lahf
fdivrl
push
sub
loop
and
mov
gs
and
xchg
and
fiaddl
in
pusha
loop
xor
stos
les
pop
movsb
and
nop
inc
xor
daa
dec
push
cmp
jbe
lods
mov
sbb
fsts
pop
jbe
pop
out
cmpsl
inc
fwait
incl
pop
xor
cmp
xchg
sbb
mov
cmp
lret
xchg
push
gs
int
mov
or
ss
adc
cmp
adcl
aad
adc
insb
stc
pushf
mov
scas
jp
cmp
pop
jle
cmp
loopne
sub
add
pop
scas
inc
cmpsb
insb
scas
ja
jb
mov
pop
lret
scas
fstps
std
lea
inc
mov
aam
sbb
jp
and
pusha
jbe
movsb
sub
jecxz
nop
mov
cltd
or
lret
jb
pop
jp
std
push
negl
out
clc
xchg
je
inc
addr16
into
stos
push
xchg
xchg
xor
out
xchg
cs
repnz
mov
or
test
adc
xchg
cmp
push
test
mov
dec
add
jmp
pushf
fildll
shl
push
cmp
movl
cmp
ja
xor
dec
xchg
outsl
movsl
pop
stos
and
lods
mov
aam
mov
imul
int
psadbw
dec
xchg
icebp
icebp
cli
sti
pop
pop
lods
mov
and
lcall
jb
add
ret
pop
scas
shrb
and
cltd
inc
xor
push
or
lahf
sub
adc
popf
orb
mov
sub
enter
adcl
fs
xchg
sahf
fcomps
ljmp
xor
xchg
sbb
addb
xchg
xchg
jle
mov
jle
out
inc
in
dec
adcl
jecxz
mov
test
cli
adc
data16
lea
mov
push
xorl
aas
pop
adc
or
es
pop
iret
lds
sbb
arpl
dec
or
add
fimuls
jo
pop
shlb
mov
call
pop
imul
mov
sahf
lock
or
push
pop
aaa
push
and
pop
mov
lods
insl
mov
int
movsl
jl
notb
ficoms
push
adc
jno
fdivl
mov
and
inc
adc
inc
xor
mov
out
cmpsb
or
pop
pop
dec
ret
pushf
mov
push
sub
push
rclb
outsb
mov
daa
inc
or
rclb
and
pop
adc
xchg
jne
movsb
cmp
mov
sahf
aam
test
mov
pop
jo
inc
insb
and
mov
jo
cmp
sub
shll
inc
mov
int3
adc
leave
adc
or
add
inc
dec
mov
mov
es
leave
mov
es
outsb
in
jmp
fwait
dec
pushf
daa
jne
mov
std
ljmp
rcrb
lock
cli
xor
lds
int3
xor
mov
cwtl
aad
out
jae
repz
clc
sbb
popa
adc
andb
sub
push
cmpsb
adc
daa
clc
mov
mov
jne
sub
xchg
sti
pop
mov
mov
rcr
mov
das
fidivrs
mulb
inc
notl
in
and
lcall
dec
xor
jne
mov
mov
aad
or
jb
sbb
jl
mov
xchg
mull
mov
adc
daa
mov
mov
inc
mov
je
test
sbb
add
fsubs
pop
pop
xor
cli
jbe
loope
and
mov
ret
into
fdivl
sub
lods
popa
or
xchg
dec
in
lock
outsb
pop
inc
mov
jmp
in
push
jno
sub
ljmp
sbb
ds
into
aam
or
xchg
xchg
arpl
and
shlb
adc
jp
pop
aaa
jle
mov
pop
xor
test
dec
gs
arpl
insl
enter
or
adc
out
lea
mov
push
lret
fs
dec
mov
add
xchg
cwtl
jo
add
lret
cld
sub
push
jl
jmp
cltd
rorl
aaa
lods
and
xor
cmp
xor
push
in
jno
cmc
mov
jnp
add
dec
mov
xchg
cmp
sbb
out
sbb
mov
or
pop
sbb
pop
jne
stc
xor
rolb
popa
adc
sub
or
clc
nop
pop
shrl
push
inc
sub
jp
add
out
je
fisubs
jge
and
gs
add
cmp
xor
clc
fstps
push
scas
ret
push
xchg
cli
mov
push
into
push
ret
stos
pop
mov
orb
add
and
push
cs
negb
mov
insl
xchg
xlat
jbe
push
insb
sbb
idivb
rcrl
adc
mov
leave
imul
lahf
mov
fidivrs
push
xor
add
mov
lds
fimuls
pop
fs
sub
stc
mov
test
pop
dec
test
pop
out
dec
adc
fwait
xor
jno
pop
es
fstpl
mov
rolb
fwait
aas
cmc
shlb
pop
dec
pusha
xchg
movsl
pop
mov
cmp
mov
sarl
imulb
push
sub
xor
push
or
loope
and
or
mov
aad
outsb
outsl
ss
leave
inc
mov
add
rolb
inc
arpl
fistpll
fwait
bound
sahf
dec
ds
xorl
jo
mov
sbb
cmp
jbe
cltd
out
sbb
pop
cld
fs
mov
test
mov
fdivrs
adc
enter
xlat
or
sti
mov
rolb
in
sbb
xor
inc
into
sbb
sbb
xchg
sarl
and
sbb
mov
icebp
das
add
pop
and
nop
mov
je
cld
aaa
aaa
sbb
inc
pop
mov
push
push
dec
add
shr
cmc
out
dec
cmp
test
sub
sub
out
pop
mov
mov
popa
adc
cmc
mov
popf
pop
enter
loop
jae
scas
adc
paddsb
add
lods
hlt
jecxz
movsb
mov
cmp
ljmp
arpl
mov
jecxz
mov
js
jo
imul
xor
dec
xchg
xorl
sub
sub
xchg
arpl
fsubs
mov
push
push
jbe
je
out
jae
pop
rclb
cld
mov
adc
and
xor
fdivrl
inc
lods
stc
rcll
xchg
shl
js
test
repz
dec
mov
int
es
data16
movsb
mov
stos
jecxz
mov
cmpsl
mov
out
shlb
xchg
sahf
inc
shrl
adc
dec
fldl
lahf
push
cwtl
push
in
push
leave
mov
repnz
push
fbld
dec
jnp
cltd
lret
cmp
push
xor
aam
inc
leave
jnp
fwait
lea
outsb
int
hlt
push
dec
mov
movsb
jl
scas
call
add
insl
stos
lahf
jmp
lret
movsl
popf
imul
fnstenv
jge
push
sti
xor
test
add
data16
popl
dec
repnz
xchg
mov
enter
adc
bound
cltd
or
out
mov
arpl
cwtl
mov
andb
jp
orl
outsl
jae
jne
mov
pop
adc
dec
pop
xchg
or
sti
mov
jmp
cmp
mov
into
dec
inc
adc
xchg
inc
or
mov
cmp
sbbl
push
adc
test
nop
mov
sbb
hlt
adc
aaa
stos
ljmp
cld
mov
cmp
jns
jmp
cmc
sub
xor
or
inc
mov
scas
mov
subl
icebp
iret
popa
scas
mov
icebp
sbb
dec
push
cmp
pop
mov
jno
push
pop
dec
enter
fwait
or
jb
pushf
and
add
testl
xchg
push
shl
mov
mov
mov
mov
pop
mov
push
xor
and
les
mov
and
int
mov
cmpsl
aad
stc
fistpl
sbb
sub
mov
sahf
dec
cmpsb
insl
sub
mov
dec
test
ja
shll
xchg
pop
sbb
push
sbb
hlt
add
ljmp
ds
push
fxch
jl
mov
adc
leave
gs
imul
idivb
lods
adc
dec
mov
sub
xchg
sbb
ffree
ret
aad
cltd
add
and
cmp
dec
mov
enter
mov
sbb
xor
faddl
fisttpll
or
imul
mov
into
add
push
xchg
add
xor
sub
nop
pop
stc
sub
mov
loop
jne
add
pushf
dec
int
insl
sub
fstl
pop
test
jmp
fldt
or
dec
cmp
mov
rclb
and
cmp
xchg
push
idivl
xor
jecxz
inc
pop
mov
jle
dec
xchg
insl
setae
cmp
sub
jecxz
xor
jbe
sahf
jle
int3
mov
xor
mov
lock
loopne
xchg
sub
inc
data16
inc
inc
ficomps
ds
fsub
test
setl
imul
mov
add
ret
aaa
xor
mov
sti
dec
cltd
es
lock
adc
jo
cld
inc
sbbb
das
movsl
dec
xor
es
repz
cwtl
addr16
dec
mov
mov
mov
sbb
sbb
xor
pop
jmp
stos
dec
in
or
aam
movups
fwait
dec
mov
xor
lcall
xor
push
dec
in
rcrb
out
and
push
mov
sahf
mov
inc
inc
push
test
push
fs
sbb
std
andl
jae
test
jno
push
icebp
outsl
movq
insb
push
data16
jns
pop
xor
fwait
dec
pop
aas
in
mov
bound
cwtl
ja
adcl
mov
hlt
divb
lock
repnz
fcmove
popf
movd
or
lahf
popa
jge
clc
sub
test
icebp
xchg
sbb
int
add
xor
push
rorl
pop
out
ljmp
js
out
jno,pn
leave
push
loopne
std
mov
outsb
mov
vrsqrtps
popl
nop
outsb
xchg
scas
shll
xchg
stos
ds
push
bswap
jns
pop
dec
outsb
icebp
bound
mov
cltd
mov
mov
ds
scas
mov
or
cmp
mov
lods
xor
int3
lods
andl
movsl
inc
jge
lock
push
frstor
cmpsb
push
filds
enter
push
push
loopne
and
dec
pop
inc
lret
aas
add
jl
mov
and
fisttpl
xchg
sub
data16
stos
add
adc
movsl
daa
out
or
dec
mov
lahf
divl
int3
and
jl
dec
fstl
xchg
sbb
or
xlat
sub
jmp
ja
rclb
push
in
test
xchg
test
daa
in
adc
push
stc
or
shlb
lods
push
push
sbb
mov
xchg
mov
hlt
nop
scas
jo
stos
ret
test
pop
test
test
pop
rcrb
addb
ds
lret
add
sbb
xchg
adc
mov
mov
xchg
rorl
daa
leave
fnstcw
adc
mov
ret
scas
fimuls
mov
iret
and
nop
cmc
push
not
out
pop
stos
pop
leave
sub
test
into
cmp
addps
and
cwtl
scas
fnstcw
mov
decb
and
xchg
test
cs
ret
push
insb
loopne
xlat
scas
mov
sbb
mov
mov
or
pushf
xchg
sbb
fidivs
imul
fiadds
out
cli
mov
aam
jae
lds
xor
xorl
stos
int3
add
mov
insb
xchg
adc
sbb
movl
push
sub
mov
mov
dec
xor
pop
lods
lods
lret
ret
dec
cmp
pop
in
mov
mov
dec
jo
or
popa
sub
scas
pushw
xor
fs
lahf
out
fcoms
cmp
clc
icebp
or
aad
cli
inc
jecxz
fwait
dec
clc
fdivl
xchg
call
cmpsl
fidivs
mov
fdivp
int
fidivl
push
shlb
mov
std
dec
bound
aad
mov
mov
fcmovb
imul
xor
inc
test
mov
xor
out
jo
hlt
out
sti
and
cmpsl
xor
xchg
repz
push
mov
mov
imul
adc
cs
push
push
jne
int3
pop
movsl
cmp
xor
addr16
jge
pop
call
daa
call
std
mov
fwait
or
call
addr16
mov
xchg
sahf
pop
mov
add
mov
in
xchg
out
inc
add
sbb
cmpsb
dec
testl
xor
mov
fdivp
jnp
test
cmc
or
jl
call
cmp
pop
testl
mov
cmp
pop
adc
xor
into
in
imul
insl
iret
fsubl
fbstp
jb
imul
push
mov
pop
out
or
mov
in
sbb
jl
adc
push
push
ljmp
mov
add
xlat
push
xchg
or
imul
sub
cmp
mov
xorl
mov
mov
fdivs
bound
xor
lret
fld
cmovp
inc
out
shll
pop
mov
in
mov
hlt
or
dec
rcr
cltd
sub
mov
xchg
jmp
jmp
push
xlat
cwtl
orps
and
test
mov
cmpsl
push
dec
clc
mov
mov
std
popf
shlb
enter
rcl
pop
mov
aam
enter
mov
inc
hlt
mov
sub
mov
orl
mov
mov
sub
mov
orl
mov
mov
sub
mov
mov
mov
mov
xor
mov
add
or
mov
mov
mov
jmp
clc
mov
cmpl
push
mov
jp
pop
jp
jbe
les
jae
lret
cwtl
sbb
xchg
leave
xorb
pop
subl
mov
fwait
notl
inc
or
cmp
lret
push
adc
cmp
popa
and
or
sub
mov
xor
dec
mov
adc
mov
in
insl
in
xor
cli
push
lret
clc
jmp
mov
cld
dec
idivl
sbb
push
inc
test
jge
sub
xchg
pop
inc
mov
dec
clc
mov
dec
jle
mov
adc
test
adc
in
sub
dec
mov
mov
mov
xorb
cld
and
lods
xor
stc
jmp
mov
repz
and
push
scas
cmp
push
fimuls
mov
inc
mov
pop
xor
jbe
mov
jae
or
xor
mov
adc
adcl
leave
lea
test
scas
cmpsl
pop
into
inc
das
push
pushf
repz
and
lret
push
in
fdivs
jae
push
aas
adc
sahf
push
and
mov
mov
or
ss
out
xchg
movsb
xor
mov
arpl
fcmovb
and
sub
add
or
jb
out
xchg
cmc
cmp
add
outsb
pop
jne
push
js
xlat
out
lock
int
nop
inc
stc
lcall
ret
arpl
vphaddwq
mov
loop
add
dec
xchg
sub
data16
mov
out
push
mov
test
xchg
mov
shlb
pushl
mov
lcall
push
mov
ja
mov
outsb
adc
ret
frstor
mov
gs
push
mov
sub
pop
dec
in
mov
arpl
addr16
mov
mov
or
pushf
fdivs
imul
dec
nop
pop
mov
pushf
mov
fistps
out
ljmp
imul
and
out
jg
popa
in
xlat
ljmp
sub
push
or
out
lcall
xchg
lods
cld
ret
loopne
mov
sbb
fs
out
jp
ret
cmpsb
shrl
push
push
add
mov
cmp
std
push
jo
fsts
cs
sbb
and
sarl
xchg
inc
or
or
shlb
pop
cmc
lods
addr16
addl
jp
mov
loopne
lods
rolb
or
xchg
lret
punpckhdq
cmp
aad
cmpl
cmpsb
out
pop
cli
cmc
sbb
js
xor
aas
or
inc
cmp
push
push
sbb
adc
mov
je
pop
out
sbb
sbb
mov
jbe
dec
xor
mov
nop
repz
xor
xor
rcll
mov
jmp
xchg
mov
pop
cmp
fmulp
icebp
mov
add
loope
aam
stos
rolb
shrb
lds
xchg
flds
jl
adc
adc
imul
mov
mov
jp
mov
jge
ret
push
adc
test
cmp
out
out
push
dec
loope
push
xlat
out
out
mov
ds
out
cltd
xchg
fisubs
je
cmc
data16
ja
cmpsl
stos
pop
add
fildl
push
add
push
fistl
out
ret
stc
push
lcall
leave
xchg
jbe
rcll
fistpl
icebp
mov
cmp
into
and
mov
mov
sbb
addr16
test
and
int3
pop
jp
jns
into
and
mov
sbb
dec
std
stos
or
repz
pop
jnp
sbb
jns
lahf
imul
mov
cltd
repnz
mov
mov
and
ret
pop
js
mov
cltd
sahf
hlt
ret
xchg
jns
lret
xchg
dec
jg
jge
ja
sub
subl
push
sub
subl
mov
xchg
xor
jo
fisttps
mov
push
xor
push
js
add
dec
fildll
xor
or
andl
xchg
and
xchg
mov
xor
push
sub
jae
add
inc
push
lea
inc
or
mov
add
push
xor
pop
jne
push
les
dec
cmp
xor
stc
cwtl
cwtl
out
mov
push
pushl
lea
xor
daa
inc
sub
and
stos
mov
fimuls
js
sbb
ss
dec
jmp
add
ss
fildl
cmp
jle
jl
leave
repz
mov
out
loopne
pushf
adc
xor
rcrl
in
inc
mov
nop
mov
mov
scas
cli
xor
ret
iret
fs
pop
dec
icebp
xor
jle
fdivs
in
mov
hlt
jle
in
int
bound
mov
mov
mov
and
cmp
mov
mov
rcrb
faddl
lcall
mov
push
xchg
aas
ljmp
add
popf
dec
and
mov
out
push
push
pushf
mov
cld
push
push
je
cmp
into
loopne
shr
mov
and
jae
dec
add
adc
es
fsubs
fcoms
mov
stos
hlt
mov
xor
add
jl
lahf
or
movsl
roll
ret
jb
stos
or
mov
fdiv
cmp
stc
xor
lods
and
in
js
pushf
mov
jp
sbb
sub
addb
dec
outsb
loopne
sbb
sub
adc
pop
sbb
xchg
sahf
mov
orb
jmp
pop
icebp
cmpsb
mov
insb
mov
lea
popa
xchg
stos
jge
in
icebp
pusha
add
push
mov
in
out
insl
pop
ret
inc
add
mov
into
mov
fcomip
jmp
dec
out
push
cld
icebp
scas
pop
xor
add
mov
sarl
fimull
ss
mov
mov
mov
xor
dec
out
cmp
popa
inc
push
shrb
fistl
add
call
mov
adc
cltd
iret
xor
xlat
mov
mov
inc
push
xor
pop
ror
jecxz
jo
mov
mov
shlb
mov
jo
loopne
xchg
sub
lret
out
mov
pushf
addr16
add
adc
mov
push
scas
sbb
and
movsl
pushf
push
enter
inc
addl
jo
rolb
aaa
mov
rcl
lds
or
data16
cmp
push
notb
cmp
cmp
fiadds
cmc
enter
and
cmp
inc
fidivs
fucomip
aas
stos
insl
pop
out
xchg
std
movsb
adcb
lods
dec
lods
push
xor
dec
mov
jne
adc
or
dec
pop
lods
cli
and
test
sub
dec
cltd
cltd
mov
in
pop
mov
movsb
adc
xlat
ds
mov
sarl
in
pop
mov
sbb
inc
xchg
in
xchg
mov
aam
scas
stc
jp
push
idivl
sbb
in
popa
sub
dec
push
out
xchg
fs
jp
divb
fiaddl
or
mov
push
addr16
daa
scas
pop
xchg
adc
out
pop
mov
jg
cli
mov
xor
add
repnz
arpl
mov
sbb
mov
jg
push
jle
add
cs
lods
sub
call
imul
xchg
inc
xor
sub
enter
out
add
inc
pop
inc
inc
js
fcmovnbe
dec
adc
test
sbb
jne
adc
mov
sahf
je
sub
in
out
jmp
inc
xchg
test
out
pusha
mov
or
repnz
fdivrp
stos
std
inc
add
xchg
and
xor
mov
lahf
xor
lret
ds
cmc
push
mov
jb
pop
mov
jnp
inc
pop
mov
andl
out
test
mov
and
popf
aas
jns
lods
xchg
movsb
adc
dec
adc
sbb
out
inc
orl
rorb
in
mov
inc
dec
pop
inc
dec
xchg
inc
push
push
loopne
or
xchg
xchg
jecxz
jne
push
sahf
adc
jle
jne
jl
adc
pusha
and
ss
pop
dec
sub
mov
sbbb
loope
dec
stos
dec
and
add
addl
add
sub
sbb
movb
ljmp
lret
fldcw
out
lea
cli
daa
movsl
pop
jbe
mov
lret
jl
cld
inc
sbb
mov
es
je
lock
out
cmpsl
xchg
dec
pop
loopne
stos
pop
add
loop
out
test
in
enter
mov
or
inc
fcmovbe
cmp
ds
insl
sub
mov
ret
fbstp
out
jne
decb
in
into
inc
cwtl
xchg
scas
pop
aam
ret
add
jo
xchg
cltd
sub
ror
pop
dec
call
sub
and
and
mov
mov
js
inc
out
cmpsb
test
xchg
inc
dec
cmp
jmp
dec
push
fsts
push
pop
inc
loope
loope
mov
iret
sbb
ljmp
scas
cs
cmp
sbb
pop
rorb
js
jae
push
imul
mov
add
out
push
mov
scas
xor
xchg
jecxz
xlat
les
and
dec
ss
cwtl
pop
rcrb
adc
push
adc
cmc
popf
mov
xchg
loop
pop
xchg
js
es
jle
ds
sbb
jge
nopl
les
push
pop
daa
into
push
or
bound
xlat
mov
jns
and
movsl
cmc
xchg
dec
jns
les
xchg
pop
fistpll
xor
fistpll
dec
adc
shl
inc
inc
pop
mov
stos
jae
js
popa
add
jns
jg
pop
ficomps
mov
xchg
mov
lock
loop
idiv
repnz
imul
out
mov
enter
xor
enter
sarb
mov
mov
andb
fucomp
jae
push
sub
mov
jne
or
push
cli
sbb
mov
push
outsb
rorl
inc
loop
ja
je
outsl
mov
lea
add
inc
orl
mov
mov
filds
lock
scas
in
les
mov
cli
mov
ja
inc
jmp
push
sub
xor
dec
adc
mov
sbb
ret
cmc
scas
test
jnp
push
jmp
out
insb
orb
xchg
adc
pop
add
mov
xorl
push
and
pop
jl
in
fwait
inc
or
rcrb
sub
insb
push
popa
scas
addr16
mov
aaa
push
sub
mov
xchg
div
and
jge
jne
das
notl
mov
out
mov
mov
shl
daa
clc
ja
shll
pop
mov
mov
pop
int
int3
outsb
xlat
lahf
sbb
cmp
mov
cmpsl
pop
inc
mov
shll
sbb
in
cli
inc
out
aad
out
sbb
arpl
jp
cmp
sahf
iret
sbb
cmp
add
cmp
inc
cmp
and
lea
and
rcrb
sub
sub
xchg
test
add
jae
popa
ss
sbb
pop
adc
pop
add
imulb
pop
push
mov
ss
lret
dec
sbb
hlt
and
adc
xchg
or
flds
dec
clc
cmp
xchg
sbb
out
gs
arpl
idivl
inc
cs
xorl
xchg
out
add
es
xor
jecxz
shrl
xor
test
lcall
push
out
sub
inc
inc
data16
test
test
pop
fldl
inc
loope
dec
repnz
jno
and
jo
sbb
ljmp
stc
data16
insl
push
cmc
mov
imul
push
jbe
subl
aad
leave
xchg
nop
mov
xor
push
popf
and
notb
sbb
cmc
pop
cmp
push
jno
cmp
adc
cmp
xchg
out
popa
dec
pop
lods
pop
inc
push
stos
cmpb
pop
fdivrl
clc
fsubrs
sbb
xchg
scas
out
sub
fnstcw
sbb
dec
push
call
sbb
mov
add
add
pop
adc
sub
pop
je
xchg
inc
nop
xchg
dec
mov
and
pop
mov
shl
les
push
in
into
or
not
out
jne
cmpsb
loope
imul
fcomps
mov
lods
xor
prefetch
or
mov
ficomps
outsl
jl
test
fdivp
into
insl
lahf
xchg
cld
rcr
inc
movl
sub
and
jnp
rol
ljmp
or
inc
movnti
fstps
push
lods
sub
repnz
inc
ror
fsubrl
mov
inc
add
dec
xchg
les
mov
mull
or
xchg
cmp
and
mov
dec
enter
in
into
ss
or
mov
xor
hlt
int
out
add
inc
and
sbb
jnp
rcrl
leave
cmp
xlat
test
xchg
xchg
mov
inc
andl
inc
lods
jb
hlt
stos
adc
mov
insl
adc
cld
mov
inc
push
cli
mov
sbbb
std
xchg
imul
mov
popa
sub
sahf
cld
cld
stc
jae
int3
jo
ror
inc
sub
insb
and
push
movl
or
xlat
popa
movsl
mov
mov
cmpsl
clc
aad
xchg
ljmp
and
mov
adc
loope
mov
sbb
fisubs
outsb
pop
fs
or
push
shl
jp
gs
mov
in
imul
loop
lods
pop
dec
inc
mov
flds
mov
or
fisubs
sub
sub
in
jb
push
fldl
pop
fwait
sub
cmp
std
test
xchg
and
cltd
mov
pop
mov
adc
stc
xorl
pushf
mov
mov
sub
pop
inc
dec
ljmp
pusha
rep
and
loopne
sarb
push
mov
cs
pop
jge
mov
dec
inc
add
cmp
jne
data16
repnz
sbb
pop
outsb
stos
adc
inc
fsubs
or
je
lods
add
out
pop
in
lret
orl
movb
sub
adc
out
scas
push
out
sti
sbb
mov
out
xchg
mov
and
das
sub
cmpsb
and
outsl
or
sub
add
xor
js
jo
scas
sub
adc
push
dec
jo
cmc
xchg
xor
cld
incl
jg
mov
or
scas
jb
xchg
lods
mov
mov
cmp
inc
test
mov
jmp
ret
ja
mov
and
xlat
shll
outsb
mov
inc
lods
sub
cmpb
add
mov
clc
test
sbb
pop
push
jle
jp
stc
pop
daa
push
aas
test
jecxz
dec
dec
mov
ret
arpl
inc
pop
mov
leave
push
jno
xchg
cmp
pusha
scas
cmp
in
mov
push
xlat
and
rcll
loop
jae
rcrl
xlat
xchg
hlt
lret
push
shrl
popa
in
test
cmp
dec
xchg
cmc
mov
lahf
and
pop
or
loope
xchg
xor
cmp
mov
cwtl
inc
sub
mov
xchg
stos
out
into
fists
jbe
cmp
popa
xchg
push
mov
js
pop
int3
daa
push
xchg
push
sub
psubsb
pop
adc
jg
pop
inc
in
aas
inc
sbb
dec
add
js
in
mov
lahf
push
push
push
movsl
xchg
pop
dec
adc
jmp
xchg
jl
lods
nop
popf
fidivl
jns
aaa
fdivs
sti
xlat
xchg
inc
mov
xchg
pop
stos
add
lahf
pop
cmpsl
ds
and
das
sbb
pop
es
cmp
adc
mov
or
je
push
mov
movlps
popa
or
rcl
and
mov
int
popa
jno
inc
out
repz
std
pop
sbb
or
mov
mov
fwait
in
jo
jno
mov
sbb
subb
mov
adc
fldenv
test
scas
cld
add
mov
loop
in
xchg
inc
aam
mov
sbb
hlt
dec
iret
mov
lods
rolb
push
jp
jp
jecxz
cwtl
xchg
push
int
ret
or
push
xchg
je
addr16
ss
movsl
dec
leave
movsl
mov
dec
inc
jg
sbb
mov
jecxz
test
xor
mov
mov
pop
mov
xor
sbb
jle
xchg
sbb
mov
or
ss
in
pop
mov
stos
pop
mov
jge
mov
mov
jmp
lock
cmpsl
add
mov
sbb
sub
sbb
test
inc
iret
jbe
sarl
dec
test
xlat
mov
fdecstp
sbb
sbb
cli
sbb
jl
fcoms
cltd
test
idivb
inc
outsl
fmuls
jne
pop
mov
ficoml
mov
mov
stos
cmp
push
push
fwait
in
cmp
and
mov
dec
dec
ja
ficompl
repnz
mov
shrb
ljmp
pop
pop
sahf
cmp
ja
andl
and
stos
cmp
dec
jno
push
push
ss
out
insl
mov
daa
icebp
in
lods
mull
sbb
rolb
mov
scas
and
lret
jmp
inc
rcrl
or
xchg
push
lock
mov
cmp
xchg
mov
out
sahf
lcall
inc
icebp
out
pop
push
cmp
insb
sbb
and
lods
dec
add
dec
mov
dec
in
gs
adc
mov
test
xchg
push
or
test
test
xchg
loop
xor
cmp
xchg
fisubrs
ds
push
ss
dec
pop
xchg
adc
out
xor
enter
push
rcll
bound
dec
xor
inc
mov
pushf
pop
pop
mov
dec
xchg
sub
data16
push
sbb
sub
pop
fsubs
fcompl
dec
mov
adc
inc
push
js
test
mov
mov
lret
inc
mov
out
sub
icebp
xor
rcl
or
fildl
sbb
loop
jg
or
sub
je
ret
add
xor
jno
lea
xlat
hlt
das
movsb
lds
push
mov
ljmp
lods
sahf
xor
rorb
idiv
xchg
jecxz
out
lahf
imul
jl
addb
mov
cmp
and
bound
cmpb
inc
jge
clc
lods
test
scas
cmpsl
lahf
push
lahf
add
and
sahf
and
inc
int3
cmp
xor
add
pop
std
stc
stos
fimuls
add
dec
daa
jo
ret
adc
test
flds
push
addr16
lret
mov
jnp
fistpl
jb
pop
mov
stos
icebp
jecxz
gs
in
xchg
sahf
xchg
mov
fwait
cmp
je
into
pusha
out
pop
popf
jp
pop
xchg
cmpsl
fucomi
mov
and
mov
stc
dec
test
inc
xor
test
jns
sahf
icebp
push
or
fs
add
mov
mov
add
mov
inc
incb
lods
mov
dec
jmp
inc
repnz
in
neg
pusha
in
mov
adc
dec
mov
xor
cmp
movsl
jg,pn
jno
aaa
fiaddl
jmp
pop
call
imul
xchg
mov
xchg
fistpll
cwtl
arpl
jae
roll
jg
loop
and
in
jmp
clc
mov
add
subl
jno
adc
push
out
leave
pop
pop
outsb
imul
insb
leave
fmuls
add
ds
stc
pop
dec
setl
cmpl
mov
sub
add
xor
sti
in
jns
movsb
inc
daa
push
xor
mov
xchg
mov
mov
sbb
mov
leave
out
mov
test
sub
lds
fistpl
aaa
sahf
jbe
xchg
cli
xor
or
jecxz
imul
mov
cmp
sub
in
sbb
mov
jle
xor
int3
imul
pop
lods
fimuls
inc
and
mov
and
sbb
cs
push
add
dec
inc
cmpsl
fsubrs
std
imul
pusha
sbb
jl
lret
inc
or
xor
ret
movsl
fdivrl
cltd
push
mov
pusha
xorl
aam
adc
push
mov
inc
sti
push
cltd
cmp
mov
es
out
hlt
mov
inc
fistpll
dec
xchg
lret
aad
mov
aaa
and
or
rcrl
or
lahf
xor
pop
fdivr
insb
jmp
jns
inc
rclb
xchg
repz
in
into
cmpsl
gs
cmp
mov
movsb
mov
clc
cwtl
sub
jnp
out
sbb
sahf
jns
xor
mov
inc
xor
das
xchg
scas
js
sbb
and
xchg
push
data16
cltd
xchg
insl
and
scas
mov
loope
inc
in
and
jmp
xor
pop
clc
xchg
push
cwtl
or
sbb
test
mov
xchg
and
sbb
mov
lds
adc
shrb
call
in
dec
push
pop
fisubrl
fldcw
adc
bound
pop
pop
test
filds
sbb
and
sbb
jae
fs
sbb
sbb
add
aas
stos
xor
push
and
xor
into
mov
outsb
cwtl
mov
adc
out
pop
lock
ret
call
push
mov
outsl
aaa
fcompl
lea
lret
cmc
negb
aam
adc
lret
cltd
sub
jae
mov
add
mov
pop
add
xchg
stos
ror
push
sahf
pop
shlb
xlat
jecxz
lods
rorl
or
loope
dec
sbb
jl
mov
pop
xchg
xor
ret
add
loope
adc
xchg
call
mov
lret
and
in
out
test
mov
in
cld
imul
lods
rorl
and
aad
add
test
mov
les
ss
insl
pop
jge
xor
notb
sub
das
stos
lock
dec
fldt
mov
cmp
add
insb
pop
xchg
cs
lahf
lcall
push
mov
add
pop
jmp
cmpsl
dec
in
call
xchg
ja
divb
loop
rorb
mov
and
mov
pop
jnp
push
fsubrp
and
xchg
into
add
cmpsl
dec
shl
add
cmp
gs
jmp
addl
dec
shr
call
out
lods
pop
cmpsl
in
iret
xor
imul
or
cmpsb
mov
int
jecxz
or
dec
fs
jo
mov
pop
mov
mov
insl
leave
inc
cmpb
cli
lret
jl
push
inc
xor
sbb
scas
shl
shrl
insl
add
das
in
pop
vpsubb
xchg
fstpt
arpl
mov
and
xorl
int
mov
and
add
arpl
je
int
jne
aad
dec
pop
fsubr
cmc
inc
jp
adc
ds
mov
mov
movsb
cmp
pop
mov
cmp
and
jns
mov
imul
or
add
add
das
mov
jle
pop
mov
shld
in
inc
cld
sahf
xchg
xchg
mov
les
xchg
mov
jge
aad
and
sbb
addr16
add
sti
xchg
push
imul
jno
mov
das
test
sub
dec
and
inc
ret
pop
and
mov
cmc
cltd
pushf
scas
cmc
xchg
xor
repnz
aaa
imul
pop
adc
xchg
les
cmp
inc
xchg
mov
mov
jle
int
jo
rclb
xlat
ss
fistl
jns
mov
mov
add
clc
mov
cwtl
sub
testb
subl
mov
loop
ja
pop
leave
pop
or
mov
sbb
sbb
ja
mov
loop
into
and
xchg
imul
fsubrl
mov
testb
movsl
rcll
mov
add
sar
and
jns
mov
push
aas
lds
lock
and
hlt
cld
cmp
jmp
aad
lods
pop
xor
sub
jge
dec
insl
cmp
filds
and
xchg
rcl
popa
add
adc
neg
cmpb
cmpsb
mov
test
xchg
xchg
in
and
cmp
xlat
sti
insb
fstpl
lahf
nop
insb
repnz
popf
add
outsb
ficomps
rcl
dec
ss
mov
dec
cli
mov
xor
aaa
pusha
stos
dec
jl
insb
insl
cmp
xlat
outsl
xor
call
xchg
inc
add
leave
sti
mov
mov
mov
into
cmpb
icebp
sub
xor
daa
cli
loopne
lret
in
xor
push
push
xor
cmp
subb
adc
and
adc
shlb
les
pop
scas
jne
xchg
dec
cmp
out
popf
mov
or
gs
das
sbb
mov
test
push
ss
icebp
mov
cli
or
ret
jnp
addr16
aaa
das
stos
andnps
cmp
mov
or
aad
mov
sarb
in
arpl
push
icebp
mov
enter
xchg
mov
shr
adc
popf
cmp
sub
aam
xchg
aad
push
js
movb
mov
in
push
popf
iret
dec
cmp
add
mov
lods
loopne
inc
pop
pop
lds
cmp
mov
sti
mov
inc
fwait
xlat
das
xchg
ficompl
cld
cmp
mov
ljmp
cmpb
jae
arpl
lods
cli
pop
cld
insl
loop
or
pop
repnz
fnstsw
insl
push
add
mov
lss
roll
or
jne
daa
adc
mov
dec
lock
add
fistpl
add
lock
mov
jmp
adc
imul
mov
mov
and
notb
push
mov
xchg
test
add
xchg
mov
sub
fisubrl
sub
ficomps
loope
adc
or
mov
cmp
inc
push
add
movsb
cs
cmp
test
cld
lahf
xchg
add
loop
sahf
xor
inc
jb
outsl
fcoml
mov
out
cmp
jbe
ss
mov
jecxz
mov
imull
mov
lea
xor
popf
and
shrl
push
fisubrl
pop
mov
mov
sbb
stos
imul
pop
das
xchg
mov
nop
mov
out
xor
in
sub
inc
xchg
pop
daa
cmpsl
mov
add
and
lahf
mov
lcall
into
pop
js
iret
in
leave
insl
loopne
cwtl
sub
rcrl
cmpsb
call
daa
and
in
sub
dec
popa
scas
in
aad
push
mov
pop
jp
sub
out
pushf
jecxz
push
das
imul
cs
movsb
call
or
fistpl
pushf
in
lret
lods
sbbl
loopne
mov
aas
jne
sbb
loopne
pop
lret
xlat
sub
inc
inc
jnp
pop
mov
ror
dec
imul
jno
ret
jmp
inc
pop
int3
adc
subb
sub
leave
out
js
xor
aad
mov
mov
adc
out
jo
add
push
xchg
cmp
fdivrs
clc
lcall
pushl
lea
lock
sbb
xchg
push
jns
cmp
sub
stc
lahf
cltd
mov
mov
push
cmp
or
fcoms
sti
push
out
outsl
or
mov
jae
ret
and
int
mov
test
pop
cltd
pop
nop
mov
adcl
in
and
test
inc
mov
push
pusha
out
in
jg
loop
jae
and
cmp
jg
test
aad
jbe
jno
jmp
outsb
in
add
dec
pop
data16
pop
test
mov
mov
and
nop
or
push
dec
and
aam
sahf
jge
dec
movsb
cmpsl
movsl
xchg
decl
add
loopne
movsb
lret
xor
pop
jl
in
movsl
push
subb
adc
movsl
mov
jmp
add
dec
into
leave
adc
fldcw
leave
xchg
fwait
das
jne
int
xchg
jmp
sub
inc
dec
sbb
fadd
into
mov
test
call
mov
js
push
imul
je
sbb
fcmovbe
stc
xchg
and
jl
inc
loopne
shrl
pop
outsb
or
sub
decb
sub
nop
rol
lret
add
jmp
mov
nop
sbb
push
add
movsl
test
ljmp
stos
cmpsl
mov
mov
mov
pop
xor
rcll
cmp
bound
add
mov
lods
cmp
push
pushf
fincstp
je
dec
mov
lret
dec
and
push
leave
ss
xchg
pop
lock
stos
jbe
push
dec
or
inc
loopne
mov
icebp
movsl
sbb
ss
in
mov
aas
iret
push
add
pop
xchg
inc
xchg
jle
dec
clc
and
lods
fstps
int3
inc
and
insl
cmp
xor
mull
pop
pushl
out
mov
sub
inc
mov
lock
insl
jbe
jae
pop
push
xor
es
shl
mov
aam
not
sub
xchg
cwtl
stos
fcoml
dec
mov
mov
xchg
adc
lahf
mov
adc
add
scas
xchg
adc
fs
push
and
dec
sbb
lods
xlat
call
mov
stos
xchg
dec
or
jg
icebp
sahf
fistps
pop
xchg
lock
insl
aam
lret
rorl
adc
sub
cmp
sbb
xor
outsb
add
mov
loope
out
pop
mov
or
cmp
fcoml
ret
pop
fisttps
dec
arpl
popf
ds
xchg
fisttpl
pop
adc
sbb
jo,pn
sbbl
or
dec
and
les
jo
jecxz
mov
mov
cmp
rcll
addr16
lahf
mov
sti
jle
pop
loopne
mov
cmp
sbb
movsb
jg
jge
sarl
mov
adc
fidivrs
es
cmp
inc
add
shlb
sub
and
les
in
mov
and
nop
fnstcw
popf
mov
or
nop
in
js
int
es
push
jmp
mov
bound
subl
jbe
push
test
xor
loopne,pt
jle
cmp
inc
sbb
vcvttpd2dqx
rcrb
test
mov
fsubl
arpl
loopne
lods
inc
mov
inc
jl
sub
rorl
mov
inc
hlt
xor
add
push
mov
xor
add
push
mov
xor
add
push
lea
push
pushl
pushl
call
test
je
lea
push
mov
xor
add
push
mov
add
push
mov
mov
pushl
call
mov
lea
mov
mov
test
je
lea
mov
mov
mov
mov
mov
sub
mov
mov
xor
mov
sub
add
mov
mov
mov
mov
pushl
movb
mov
pushl
pushl
pushl
pushl
pushl
pushl
pushl
mov
call
mov
mov
add
pop
pop
leave
ret
push
mov
sub
add
movl
xorl
lea
sbb
mov
add
push
movl
cmpl
je
cmpl
jne
pushl
push
push
pushl
call
cmpl
jne
xor
or
dec
mov
mov
dec
mov
jmp
mov
mov
sub
xor
mov
xor
mov
sub
lea
movzbl
adc
mov
mov
orl
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
call
cmpl
jne
mov
inc
mov
jmp
sub
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
push
push
pushl
pushl
push
call
jmp
mov
xor
add
mov
mov
add
mov
mov
addl
add
sbb
push
mov
andl
jmp
xor
add
inc
mov
cmpl
jae
cmpl
jne
call
cmpl
jne
xor
xor
inc
mov
jmp
andl
jmp
xor
or
inc
mov
cmpl
jae
cmpl
jne
pushl
push
pushl
call
jmp
movzbl
sbb
mov
adc
mov
mov
xor
movl
cmpl
je
cmpl
jne
push
push
push
call
xor
add
dec
mov
jmp
mov
xorl
add
cmp
movl
je
movl
mov
movl
jmp
mov
mov
cmp
jne
movl
push
movl
jmp
mov
mov
mov
cmp
movl
jne
add
mov
add
xor
or
add
mov
sbb
mov
add
mov
xor
movl
add
addl
imul
addl
mov
xor
add
cmp
mov
push
je
mov
add
mov
mov
xor
add
imul
mov
jmp
mov
xor
mov
mov
xor
mov
mov
sub
add
mov
mov
add
mov
mov
mov
xor
jmp
neg
jns
xchg
mov
popf
outsb
mov
inc
idiv
jl
add
inc
pop
jp
repnz
scas
or
xchg
cmp
ljmp
fmuls
push
jne
addl
nop
bound
cmp
lock
xor
push
loopne
int
dec
sub
xchg
pop
cmc
cmp
push
push
outsb
jp
fcomps
aas
jae
xor
add
lahf
add
pop
jae
bound
testb
or
push
push
popa
sti
insl
gs
loop
and
inc
int3
stos
dec
mov
imul
out
jo
aam
sbb
dec
push
mov
push
pushl
jns
imul
cs
xchg
dec
imull
lock
jbe
scas
cmp
jge
ret
pusha
outsl
nop
cwtl
out
adc
jae
cmp
cmc
hlt
dec
cmp
cmp
xlat
mov
and
sub
adc
stos
jb
push
ret
data16
pop
popa
mov
and
std
and
scas
rolb
clc
fistpll
mov
es
fwait
xchg
pop
imul
cmc
cmc
loopne
or
aad
and
xchg
sti
push
ss
cmp
push
push
cld
lea
and
fimuls
and
icebp
shrb
xor
adc
or
lea
mov
insl
mov
movsb
lcall
mov
in
inc
movsl
movb
rep
mov
inc
mov
cmp
loop
lods
push
shlb
lock
pusha
sub
test
jb
sahf
add
rcll
cmpsl
mov
pop
in
mov
ja
notl
scas
lcall
ret
or
mov
push
call
bswap
adc
cmp
pop
and
jne
mov
icebp
or
lods
sub
cs
mov
pop
cltd
out
jns
jle
pop
push
cmp
jae
je
jp
pusha
xchg
dec
push
adc
jle
out
popa
scas
xlat
ficoms
pop
insl
fs
or
int3
lahf
or
sar
addr16
pop
mov
cmp
pop
iret
sti
fisubl
adc
add
add
sub
and
xchg
jns
cli
nop
xchg
adcl
jg
mov
rclb
sbb
xchg
cltd
shll
dec
lds
mov
lea
adc
scas
sub
xor
inc
jle
inc
add
and
push
add
jnp
stos
fldt
rolb
xchg
insb
gs
xchg
cli
xor
mov
dec
out
cmp
and
sub
and
lock
mov
fbstp
pushf
and
jmp
lea
ret
inc
out
mov
andl
insb
sub
add
pushf
xchg
imul
ds
divb
sub
xchg
std
popf
cmpsl
loopne
hlt
fisubl
jmp
and
repz
aaa
cwtl
xor
push
ja
push
fcomip
movsb
jno
pusha
sbb
cwtl
mov
in
repnz
out
sub
adc
popa
add
cld
mov
cs
xor
sarb
cmc
sbb
sub
jo
sbb
fwait
call
arpl
bound
inc
jno
cmp
dec
jmp
fldcw
sbb
subb
xor
jnp
ds
iret
mov
ljmp
xchg
push
aam
movsl
pop
jg
mov
push
sbb
and
xchg
movsb
jmp
ljmp
popf
jge
pop
hlt
subb
inc
sub
jbe
cs
xchg
dec
aaa
dec
iret
or
outsb
mov
or
mov
test
mov
lahf
imul
push
sbb
dec
mov
or
lods
iret
movsl
rcl
in
addr16
jne
in
movsl
scas
into
mul
push
mov
mov
mov
enter
rol
sub
test
aas
inc
scas
xchg
not
out
in
aas
jne
idivb
push
jge
or
sbb
outsb
pop
jmp
clc
cwtl
inc
das
aas
sub
xchg
cmpsl
or
mov
lea
dec
xor
rcrl
hlt
sbb
push
pop
sahf
aam
jbe
xor
test
sub
popa
fildll
test
dec
pop
add
imul
adcl
in
stos
aad
xorb
nop
and
sbb
inc
aad
add
lahf
jle
cmp
aaa
decl
push
or
cwtl
out
outsb
xchg
jle
xor
pop
dec
movsl
rolb
fimull
fnstenv
ret
adc
rolb
sbb
pop
mov
xchg
dec
imul
rorl
arpl
je
shll
ret
stc
and
lahf
sbb
fsubl
lea
pop
push
dec
call
insl
nop
inc
pop
cmp
mov
mov
js
stc
mov
insb
mov
adc
insl
pop
test
das
mov
dec
xchg
in
mov
sub
mov
dec
lahf
xchg
xchg
inc
pop
mov
test
movsb
es
cmp
cli
push
jb
out
clc
or
xchg
xchg
int3
lock
repz
cmp
fs
add
add
int
iret
addl
push
mov
orl
jnp
ret
jne
cmpsb
jp
out
enter
push
xor
in
and
jo
add
rcll
clc
sub
ljmp
loopne
mov
je
xor
xor
rorb
or
mov
jmp
in
stc
mov
shlb
lock
add
mov
adc
fldcw
push
jno
mov
and
inc
rclb
pop
enter
pop
xchg
mov
xchg
lahf
sbb
stc
sbb
addr16
dec
fsubrs
push
inc
pusha
scas
cli
add
les
lret
in
add
aas
cld
out
pop
sti
inc
sbb
or
movb
or
inc
pop
outsl
stc
inc
nopl
cmp
mov
test
push
fadd
inc
in
sbb
pusha
inc
and
jno
out
movsb
into
pop
cmp
ja
imul
sbb
mov
out
push
rcll
mov
inc
or
add
mov
jne
mov
ja
sbb
ds
cmp
push
sbb
lret
scas
and
test
lods
or
in
sahf
sub
inc
sub
add
scas
aas
jle
loope
cwtl
xchg
cmp
xor
rcrl
es
ret
pop
in
jp
cs
xchg
iret
cmc
xchg
adc
cmp
xor
inc
pop
or
stc
test
jno
fs
adc
push
pop
mulb
pusha
inc
lock
or
cmp
das
xor
add
mov
rcrb
js
adc
adc
jl,pn
or
aad
sbb
sub
jmp
inc
adc
test
lods
fnsave
pop
mov
mov
jnp
pop
push
out
daa
pop
mov
dec
es
sbb
mov
pop
rol
lock
mov
shr
fbld
or
mov
mov
xor
imul
lea
int
loop
cmp
pop
sahf
dec
sub
sbb
xor
dec
lds
lock
into
loopne
out
push
fstpl
test
xor
enter
mov
push
xor
cmpsb
aas
stos
push
mov
push
clc
outsb
push
adc
daa
fbld
sub
test
mov
orb
out
mov
pusha
cmp
fldl
orb
jne
dec
in
enter
cs
loopne
orl
cmpl
xlat
pop
mov
cltd
out
push
and
cmpsl
notl
push
lahf
adc
lods
cmp
pop
mov
shll
pop
mov
inc
cmpsl
push
push
cmp
pop
push
sbb
jmp
sahf
or
lcall
mov
call
adc
fucomi
aam
daa
jb
pop
rorb
adc
and
enter
lock
sti
std
add
mov
out
int
roll
cmc
out
sahf
push
std
add
das
and
xor
jns
sti
jnp
push
fwait
mov
cmpsl
aam
or
push
add
cmp
loope
and
mov
pop
shrb
sub
je
mov
push
cld
sbb
ja
jecxz
mov
mov
adc
mov
push
pushf
arpl
roll
lods
sub
inc
and
sub
popf
adc
das
adc
add
int3
rclb
add
xor
cmp
cmpsb
movsl
adc
jmp
and
ds
mov
icebp
jo
xor
negl
jp
outsl
xchg
mov
frstor
clc
test
rcl
mov
lds
adc
lds
xchg
fsts
push
mov
adc
jge
jb
dec
sbb
stos
int
mov
inc
and
adc
or
test
fstpt
xchg
mov
call
lcall
jmp
mov
mov
inc
add
mov
add
bound
ficoml
pushl
and
popa
pop
cli
add
mov
pushf
cmp
out
gs
mov
shll
mov
loopne
incl
sbb
fs
out
or
movsl
cmp
stc
fst
scas
sub
movsl
not
inc
mov
outsl
scas
mov
push
sbb
pop
and
sbb
sub
lret
or
ss
aas
mov
in
xchg
stos
mov
jno
sahf
push
js
out
stos
stos
loope
movsb
data16
fwait
add
pop
daa
mov
mov
cmp
movsb
push
je
test
cmpsb
mov
mov
outsl
pusha
fcmovnb
les
or
int
insl
cmp
repz
push
ja
repnz
scas
out
stos
mov
sub
clc
ror
pop
mov
xor
hlt
mov
push
dec
mov
andl
mov
js
imul
stos
and
loop
mov
adc
push
ja
dec
ret
jne
loop
jmp
adc
push
jno
mov
sub
in
inc
jnp
inc
or
aam
daa
repnz
add
mov
adc
bnd
push
sbb
shll
mov
push
icebp
in
xchg
in
sub
mov
jmp
shrl
mov
push
lea
adc
mov
dec
dec
lcall
xchg
mov
mov
xchg
mov
xchg
or
cli
add
adc
into
add
push
inc
add
sbb
cmp
lock
xchg
xchg
sub
xchg
xor
scas
sub
lods
jbe
call
arpl
jae
mov
push
cs
pop
cmc
sbb
mov
fmulp
popf
je
pop
mov
je
pop
movsl
das
popa
lea
cli
dec
arpl
add
pusha
lods
andb
xor
insb
push
arpl
sub
in
cld
cmc
and
scas
add
push
push
mov
push
mov
es
inc
mov
imul
mov
imul
popf
dec
lret
bnd
in
mov
push
pop
cltd
mov
pusha
inc
filds
jns
xchg
mov
ret
lock
inc
int3
dec
jl
mov
push
ds
cli
sub
xchg
add
mov
roll
inc
mov
mov
or
add
leave
ljmp
mov
xorl
adc
aam
jl
int3
cmc
dec
mov
jns
xor
dec
mov
cwtl
add
bound
mov
cltd
test
cmp
out
sbb
mov
inc
sbb
mov
mov
xchg
and
push
repnz
fcoms
pop
push
xchg
jge
xor
int
xchg
inc
or
cmovl
xchg
xchg
mov
insl
cmp
jae
les
jb
fcoml
ss
inc
in
jle
rcl
dec
punpcklbw
bnd
lock
adc
popa
or
out
push
enter
cmp
push
sbbb
fisttpll
scas
lds
mov
adc
pop
jbe
and
enter
ss
pop
insb
dec
popa
push
dec
push
cli
pop
std
xchg
mov
negb
inc
rorb
or
inc
out
dec
imul
mov
jns
push
pop
cwtl
pop
inc
mov
lea
stc
dec
popa
jp
push
sbb
sbb
loop
jecxz
dec
in
mov
push
out
imul
movsl
xchg
xor
adc
push
clc
mov
into
fadds
lods
dec
push
jle
xor
or
scas
lods
push
daa
pop
mov
daa
ds
cmp
mov
xlat
xchg
and
xchg
mov
pop
jl
mov
jle
aaa
inc
jp
cmp
aad
les
movntq
aam
daa
adc
sbb
sub
adc
and
popf
cmp
pop
xor
mov
sub
sti
into
es
cmp
or
out
mov
fldz
pusha
cmp
or
mov
cmpsl
mov
jbe
xor
popf
jmp
sti
jae
pusha
lret
sahf
addb
enter
add
and
dec
jno
cmp
ja
popa
aam
pop
lcall
shrb
sbb
and
clc
adc
mov
xorl
jmp
mov
mov
inc
mov
movsb
popf
mov
sahf
dec
sub
in
pop
ja
mov
adc
and
ja
xchg
mov
and
jg
scas
fbstp
cli
dec
into
sub
test
in
dec
je
mov
lea
push
add
xor
cmp
fcmovnu
sarb
sub
mov
sbb
dec
fcoms
mov
or
push
mov
cmc
popf
outsb
lcall
andb
mov
test
addb
lcall
ljmp
ret
mov
mov
xor
push
shrl
mov
cmp
lahf
out
jo
mov
and
lods
push
lods
loope
cmp
add
xchg
pop
test
pop
clc
in
cmc
jl
mov
dec
dec
fsubl
mov
ret
or
jp
fs
loopne
pop
out
push
dec
fwait
mov
inc
lcall
je
inc
push
out
ret
pop
ja
jne
in
lds
arpl
sbb
das
icebp
test
mov
leave
aas
sti
mov
pop
mov
pushf
inc
fwait
and
nop
enter
xor
pop
in
pop
and
pop
inc
popf
mov
sub
jnp
ja
pop
cmp
aaa
jne
sub
inc
xor
jbe
mov
adc
addl
fidivrl
cs
xor
jl
sarb
jb
ja
mulb
dec
xchg
mov
and
fs
stos
popa
adc
icebp
imul
add
scas
mov
inc
cmpsl
inc
sarl
mov
xor
sbb
addr16
push
aam
lret
cs
out
or
cltd
inc
push
dec
pcmpgtw
xor
add
outsl
lahf
xor
shrb
jmp
or
js
xchg
mov
sub
fwait
xchg
cmp
mov
xchg
dec
jnp
pop
adc
dec
insb
xchg
jmp
inc
inc
int
add
cmp
cld
lcall
xchg
les
sbb
jnp
lcall
add
sub
in
cmc
ror
lea
dec
fisubs
ficoms
sbb
addr16
pop
inc
cmp
popf
iret
mov
jle
fists
loope
addb
sbb
mov
andl
movsb
in
xorl
ret
daa
mov
sahf
js
aas
mov
dec
xor
pop
mov
dec
pop
add
or
xorl
aas
ja
jp
insb
dec
sarb
inc
mov
inc
popa
push
mov
icebp
mov
inc
int3
call
mov
cmp
sub
dec
cld
andb
xchg
in
imul
sub
ds
push
ficompl
xlat
leave
es
ds
mov
ret
sar
inc
ljmp
in
jle
leave
mov
fidivrs
cmpsb
inc
mov
inc
ja
mov
or
int3
cmp
test
jns
xchg
mov
hlt
and
mov
mov
jo
cs
ja
aaa
imul
stc
push
lds
mov
add
popf
sub
fcoms
in
cs
xor
addr16
mov
gs
sbb
jnp
or
mov
push
ss
gs
sub
inc
ljmp
out
jp
sbb
int
dec
lds
sub
push
mov
adc
push
cmc
subl
push
das
xchg
fs
jp
jmp
jno
and
mov
fdivs
mov
icebp
stc
js
sub
push
std
mov
hlt
xlat
dec
out
lods
inc
jl
sbb
popa
cmpsl
pop
push
mov
movsb
test
aad
xor
adc
sahf
xorl
add
mov
cmovnp
in
pop
hlt
inc
sub
sbb
dec
je
std
mov
adc
mov
enter
icebp
test
xor
mov
or
daa
in
in
xchg
xchg
ret
testl
and
or
pop
rolb
cmp
lret
or
mov
mov
movsb
adc
adc
push
int
mov
outsl
mov
dec
stos
fisubrl
or
add
fimull
or
lds
mov
sub
mov
jmp
mov
or
test
mov
pop
shll
push
xchg
sbb
dec
sub
and
scas
sub
sub
mov
lahf
cmp
sub
mov
mov
inc
mov
aas
insl
jb
pop
rolb
xchg
jecxz
inc
lods
fisubl
lret
add
loop
fdivl
or
not
sub
add
cmc
sub
jle
pop
rorb
cmp
sbb
inc
pusha
aam
mov
cmpsb
pushf
out
loope
pop
mov
cmp
adc
push
adc
orl
lcall
sbb
test
cmpsl
jno
ja
mov
mov
mov
xchg
mov
cmp
cld
mov
shll
hlt
and
push
xchg
jecxz
mov
fsincos
cld
loope
ljmp
call
push
repz
mull
add
hlt
inc
aas
pop
pop
stos
mov
movsb
bound
sub
adc
lret
faddp
sub
out
add
hlt
lret
loope
mov
mov
jl
sti
pop
scas
out
imul
xor
add
hlt
loopne
cmp
push
loope
iret
pop
lahf
adc
push
in
mov
cmpsl
sub
dec
test
adc
push
inc
repnz
das
lds
loopne
pop
sub
add
sub
and
sahf
cmp
lods
daa
adc
cmp
jp
in
xorb
sbb
push
popf
xorb
leave
sbb
pop
lcall
bound
adc
arpl
fsubl
stc
lds
repnz
cmp
in
push
aad
mov
in
fisttps
inc
out
xchg
xor
mov
mov
pop
test
mov
imul
enter
dec
lds
testl
mov
sbb
xchg
pop
cmp
pop
mov
lahf
mov
or
cmc
sub
cwtl
mov
sub
push
xchg
ret
hlt
out
out
in
and
dec
outsb
pop
pusha
scas
mov
stc
mov
or
pop
dec
lret
mov
testb
jp
cmp
cmp
sbb
lods
adc
push
loopne
jge
xorl
fs
into
iret
ds
inc
sahf
jmp
push
xchg
je
dec
test
mov
cld
sbb
ja
popf
sub
pop
popa
outsl
rorb
pop
jno
repnz
push
jbe
sub
inc
cmp
rorb
in
fwait
xchg
outsb
fwait
lds
add
adc
mov
sub
inc
jne
xchg
pop
xchg
fucomip
pop
xchg
sub
lahf
sub
push
fincstp
adcl
test
pushf
or
cmp
std
pop
leave
push
fsubl
scas
cmp
inc
mov
dec
and
roll
pushf
xchg
xchg
mov
pusha
in
pop
pop
xor
mov
mov
icebp
iret
add
std
add
push
clc
inc
lcall
ja
cmp
leave
sbb
rcrb
xor
pop
push
dec
cld
das
nop
dec
popf
xlat
je
rorl
lcall
bound
xor
ret
or
pop
cwtl
xchg
lret
mov
mov
jge
data16
xor
js
mov
dec
rcrb
cli
jne
cmp
imul
jmp
cmpl
aam
mov
mov
dec
xor
rcrb
mov
sub
rorb
cmp
cmp
inc
repnz
js
xchg
mov
int3
or
dec
scas
push
les
fldenv
clc
and
add
jno
pop
daa
dec
cmc
mov
gs
or
cmp
bound
inc
xchg
rcrl
sbb
pop
in
mov
xchg
ja
xchg
in
xlat
ret
jl
insb
cld
loope
adc
lret
add
dec
inc
inc
cltd
adc
js
cld
add
imul
std
cli
jge
rcll
pusha
aas
push
jb
cs
js
mov
pop
out
mov
push
in
inc
in
jb
mov
sti
shll
sbb
xor
push
and
mov
xchg
push
in
cmp
movsl
cmp
fidivrs
xchg
jle
int3
out
sub
mov
xchg
xor
fisttpl
push
dec
ret
andl
cmpsb
mov
mov
addr16
mov
das
or
inc
xchg
aaa
testl
bound
xchg
outsb
jns
push
xor
cli
xchg
jmp
mov
aam
dec
sub
fadds
push
sbb
mov
jns
iret
sbb
mov
insb
std
jge
pop
push
cmp
inc
test
mov
dec
pop
fidivs
push
mov
cmp
inc
xor
insl
mov
jmp
sub
ss
mov
jle
enter
leave
jnp
nop
sarl
xor
movsb
add
push
xchg
jno
cmp
xchg
push
mov
mov
sub
ret
ret
fimuls
jbe
sbb
add
ficoms
add
sbb
and
cmp
inc
insb
adcl
adc
xor
jmp
lods
xor
xchg
mov
push
or
mov
push
js
sub
mov
and
dec
dec
into
cmpsb
xchg
addr16
mov
mov
movsl
outsl
dec
jbe
sub
leave
fucom
mov
mov
lods
test
mov
mov
cmp
sub
and
jecxz
das
adc
mov
pop
mov
addr16
fcomp
lock
inc
cwtl
outsl
and
ja,pt
sbb
rcrb
std
sub
mov
insl
pop
in
fwait
and
test
add
push
imul
pop
enter
mov
add
pop
mul
insl
nopl
or
or
and
jo
jg
adc
sub
add
out
clc
and
nopl
pop
xchg
mov
push
rol
and
in
loopne
into
mov
pushf
pop
sbb
repz
pop
mov
or
cli
mov
out
movsb
pop
jae
pushf
sbb
push
mov
jb
pop
jp
xchg
cmp
xor
negb
fsubrl
scas
inc
outsl
lods
lods
aad
in
add
mov
pop
pop
in
xor
inc
sbb
mov
xchg
cwtd
and
cmp
stos
mov
call
lcall
lahf
addr16
fs
negb
mov
xor
jo
fwait
loopne
inc
scas
movsl
mov
rol
push
push
mov
call
sbb
mov
test
or
sti
add
test
ret
push
inc
insl
cmpsl
push
fidivrs
cmp
fdiv
sbbb
mov
fnstcw
into
dec
sub
and
dec
cmpl
in
sub
mov
out
je
xchg
and
iret
mov
pop
out
jmp
xchg
popf
aas
mov
insb
cs
inc
arpl
and
ficomps
pop
enter
das
punpckhwd
adc
jno
sbb
lahf
dec
xor
jge
and
cmpsl
shl
in
fnstcw
pop
inc
push
pusha
dec
adc
outsw
mov
push
imull
movntps
jo
fprem
sub
addr16
lret
lods
mov
testb
in
lcall
jne
shlb
insl
or
ja
fdivrl
inc
xchg
sbb
add
cld
fs
in
pushf
push
insb
mov
loop
mov
push
fcmovbe
loope
sbb
push
iret
push
jno
std
addl
ja
repz
lahf
cmp
pop
mov
mov
cmp
mov
je
and
notl
shl
fistps
js
push
fidivrl
mov
jmp
imul
stos
dec
push
sbb
gs
cmp
adc
mov
popf
push
inc
lahf
stos
or
arpl
adc
int
outsb
dec
xchg
into
sub
jno
or
test
add
pop
lods
dec
cmp
xchg
cwtl
or
jmp
rcll
bound
cmp
pop
add
xor
clc
jl
sahf
sub
fsubr
notl
dec
repnz
cwtl
mov
gs
cmp
mov
fisubl
icebp
into
dec
sbb
mov
scas
and
mov
pop
push
mov
in
mov
in
push
addr16
xchg
xchg
negb
xchg
and
jmp
push
xchg
xor
adc
push
loopne
paddd
lock
ds
xor
pop
lret
push
aam
mov
fwait
repnz
cli
inc
mov
hlt
mov
jns
ret
mov
roll
xchg
push
push
push
lds
inc
jae
add
mov
xor
jae
mov
push
inc
test
add
pop
addr16
sbb
or
orb
lods
adc
pop
loop
push
sbb
fidivl
test
sub
jecxz
push
jle
push
pop
push
cmp
rorl
mov
sbbb
fnstcw
out
mov
cmpsl
xchg
pop
fwait
or
pop
fsubr
push
ja
mov
sbb
andl
pop
out
add
lds
xchg
stos
lea
repz
movsl
add
jo
mov
pusha
sub
loop
gs
or
into
mov
ret
std
lods
cmpsl
mov
mov
dec
ret
mov
call
rol
andl
sbb
shrb
sbb
push
jle
push
call
cld
sub
mov
or
stos
dec
dec
and
int3
push
arpl
inc
lret
ret
icebp
mov
cmpsl
push
dec
and
dec
push
xor
inc
gs
sbb
rolb
rcrb
out
test
mov
push
sub
push
out
fstpt
xor
add
xlat
into
add
jl
sub
mov
jmp
stc
inc
mov
stos
hlt
or
pop
dec
outsl
mov
adc
mov
push
push
scas
lcall
xchg
mov
mov
lcall
push
loopne
lods
jecxz
mov
jnp
iret
cmp
sbb
iret
fbstp
pop
out
mov
movsb
xor
popa
push
sbb
cmp
repnz
pop
jp
push
xchg
das
pop
iret
shll
jl
jmp
clc
out
inc
nop
fsin
and
cld
jmp
sub
mov
mov
std
in
cli
shl
mov
fs
sbb
xchg
int3
int
jl
fsubl
popf
nop
and
add
push
adcl
mov
cltd
mov
or
test
xor
sbbl
mov
scas
jb
mov
subb
inc
pop
inc
push
call
inc
dec
insb
std
pop
test
sub
jnp
ljmp
add
sub
mov
dec
xchg
jne
xchg
jae
leave
imul
outsb
xor
and
sub
cmp
mov
or
adc
stos
jbe
mov
mov
or
data16
shrl
jb
pop
mov
add
int
jae
and
mov
or
int
lret
adc
movsb
aas
int
sbb
mov
and
jo
jbe
and
daa
and
enter
notb
jmp
adc
cmp
movsl
pop
scas
jbe
pushf
xchg
and
xchg
adc
jl
jae
push
aaa
push
loopne
xchg
popf
test
jno
adc
lahf
or
inc
or
sahf
mov
test
pop
jb
xor
xchg
mulb
out
hlt
arpl
xchg
mov
fidivrl
lahf
leave
movsb
xchg
negl
xchg
inc
call
mov
add
lods
int3
outsl
out
iret
gs
in
or
stos
das
outsb
clc
pushf
das
fwait
xchg
fs
pushf
xchg
sub
sbb
xor
mov
in
mov
and
das
cmp
aas
mov
std
lods
push
pop
into
shll
nop
mov
xor
push
xor
jmp
icebp
push
daa
cmpsl
shrb
in
or
jnp
pop
push
xchg
mov
cmp
mov
cld
cli
xchg
xor
mov
icebp
inc
dec
in
add
sar
or
popf
lods
das
sub
loope
mov
add
lods
jno
jae
xchg
jno
push
jae
subb
mov
lahf
inc
push
jnp
bound
push
xor
sub
lcall
mov
enter
mov
fld
jge
sbb
push
icebp
stos
in
sbbb
and
outsl
jecxz
jns
movsb
sbb
or
loope
loop
ret
fcomip
jns
inc
sbb
popf
cmp
out
add
push
sbb
cmpsl
mov
dec
sub
add
mov
push
fstpl
divb
add
ret
xchg
mov
pop
stc
xchg
addr16
lcall
lds
cs
mov
and
pop
pop
hlt
sahf
push
xor
movsb
mov
sub
jl
mov
cmpsb
fwait
push
jae
pop
inc
pop
leave
pop
les
daa
mov
imul
mov
pop
jae
iret
int3
inc
sub
and
or
pop
mov
ss
mov
mov
fcmovbe
mov
dec
loop
mov
lret
in
or
pop
xchg
xor
dec
lods
into
cwtl
stos
adc
push
inc
mov
xor
inc
setns
push
sahf
jno
adc
or
fninit
mov
xlat
xor
jno
jns
cwtl
jmp
jno
cli
rcrl
pushf
arpl
jmp
pop
sbb
xchg
ja
insl
push
dec
sub
and
loope
mov
pop
testl
and
fbstp
pop
jecxz
divb
insl
mov
sub
xchg
mov
and
mov
add
jle
mov
jmp
cld
stos
add
lods
lds
jge
mov
leave
imul
sbb
rorl
add
add
imul
mov
xor
sub
mov
add
cmp
mov
mov
jg
xor
mov
sub
add
jmp
xor
add
add
mov
mov
mov
xor
add
not
and
movsbw
mov
sub
mov
xor
mov
cmp
jne
movsbw
mov
sub
mov
xor
mov
cmp
je
mov
xor
mov
sub
add
jmp
mov
mov
mov
lea
mov
mov
mov
xor
add
mov
mov
mov
xor
add
pop
cmp
jne
mov
xor
mov
add
imul
mov
pushl
jmp
mov
add
mov
mov
mov
movsbw
mov
sub
mov
xor
mov
cmp
jne
mov
mov
mov
jmp
mov
cmp
jne
push
pushl
pushl
pushl
pushl
call
pop
pop
leave
ret
push
mov
sub
push
mov
mov
sub
xor
mov
sub
mov
sub
movl
andl
mov
inc
mov
cmpl
jne
push
call
cmpl
jb
push
mov
mov
mov
mov
xor
sub
xor
adcl
mov
movl
add
add
imul
mov
mov
cmp
je
mov
mov
sbbl
mov
subl
xor
lea
addl
mov
mov
not
mov
mov
orl
xor
xor
sbbl
add
add
imul
mov
cmp
je
mov
xor
mov
add
imul
add
mov
mov
jmp
mov
mov
xor
xor
add
add
imul
pop
pop
leave
ret
push
mov
push
add
movl
adc
mov
mov
movl
cmpl
je
cmpl
jne
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
andl
mov
xor
xorl
add
mov
movl
cmpl
je
cmpl
jne
push
push
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
xor
push
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
pop
leave
ret
push
mov
sub
mov
movl
cmpl
je
cmpl
jne
pushl
pushl
push
call
cmpl
jne
xor
add
dec
mov
xor
add
dec
mov
jmp
andl
mov
inc
mov
cmpl
jne
pushl
pushl
push
pushl
push
push
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
xor
andl
jmp
xor
or
inc
mov
cmpl
jae
cmpl
jne
push
pushl
push
push
pushl
call
jmp
movl
cmpl
je
cmpl
jne
push
call
cmpl
jne
xor
xor
dec
mov
mov
dec
mov
jmp
mov
subl
add
movzwl
movl
cmpl
je
cmpl
jne
push
pushl
push
pushl
call
mov
dec
mov
jmp
mov
movzbl
or
mov
movb
lea
and
mov
xor
jmp
mov
lea
sahf
push
sbb
jp
pop
jp
mov
jp
mov
jle
xchg
add
lods
push
inc
mov
push
jl
push
pop
and
rorl
dec
stos
jae
imul
je
jecxz
lods
fmul
test
and
les
xor
leave
push
movsb
mov
aad
fnsave
pop
jnp
inc
fdivrs
int3
or
push
lods
int
xchg
pop
add
dec
xor
dec
mov
push
test
push
testl
jge
test
xor
inc
pop
jno
mov
fcomp
mov
in
xchg
push
or
loope
or
xchg
pop
mov
and
cmp
jo
scas
dec
dec
mov
mov
loopne
out
test
nop
adc
sub
in
dec
lds
adcb
jge
repnz
test
or
enter
sbb
jno
addl
add
jbe
hlt
push
xchg
cltd
sbb
dec
hlt
xor
cmpb
iret
pop
xor
inc
imul
ror
iret
ljmp
shr
mov
pop
repz
cld
insb
pop
in
add
sbbl
aam
lret
sub
add
dec
cmpb
and
mov
js
and
xor
ret
jno
insl
cmp
fs
test
dec
fmull
mov
mov
arpl
sub
mov
nop
enter
jb
adcl
pop
push
fsubrl
mov
lcall
imul
stos
cmc
push
adc
mov
xor
push
sbb
xchg
pop
repnz
mov
mov
mull
ret
cmp
and
push
daa
xor
add
lahf
hlt
ss
shl
sbb
arpl
mov
faddl
pushl
stos
xor
lods
push
or
add
inc
push
fldt
sbb
ss
outsl
fadds
push
inc
xorl
lods
fs
jbe
icebp
aam
sub
ret
dec
pop
sbb
cmp
add
test
inc
out
in
les
sbb
mov
xor
sbb
add
xchg
push
sahf
fsubrl
push
xchg
aad
int3
jge
sub
dec
mov
push
cmpsb
inc
cli
adc
add
push
enter
arpl
cmp
mov
push
les
inc
xor
mov
lods
xor
or
dec
cmpsl
adc
mov
lret
mov
pop
xchg
xchg
inc
inc
xor
cmp
leave
cltd
xchg
cmpsb
lea
je
bt
inc
stos
xchg
sti
cld
xor
gs
pop
je
dec
repz
imul
je
mov
push
aad
pushf
popa
and
mov
fcomps
in
ret
pushf
xchg
cmp
mov
leave
test
ljmp
inc
in
ds
gs
xchg
xchg
std
adcw
int
lods
int3
insb
shll
in
jno
inc
sbb
insl
fwait
pop
movsb
inc
dec
mov
decl
xor
xchg
mov
add
les
out
xor
dec
sti
shll
xor
inc
cmp
pop
in
stos
xchg
outsb
push
and
mov
enter
or
adc
jge
adc
scas
sbb
push
pop
lea
shll
lea
adc
sbb
add
sub
sub
xorb
xorl
jecxz
or
enter
mov
inc
sbb
clc
jb
adc
mov
sub
inc
adc
jg
and
aaa
jno
test
xor
testl
mov
imul
cltd
cmp
movsl
lcall
movsb
pop
cmp
clc
rcll
mov
dec
dec
sbb
add
push
lret
jns
jb
push
lret
xchg
imul
bound
cmc
xchg
fcmovnb
mov
push
test
pop
cmp
dec
mov
push
or
mov
jg
dec
inc
out
cmpb
sbb
dec
push
icebp
mov
sbb
pusha
xchg
pop
pushf
outsl
jmp
mov
cld
xor
out
notb
stos
lahf
jp
orl
ret
insl
out
ret
push
jae
mov
aam
pushf
sbb
pop
pop
sbb
dec
push
sub
ss
sub
jmp
jae
mov
mov
aas
vorpd
xchg
lret
in
xchg
cltd
fscale
divl
movsl
sarl
lods
pushf
addb
aam
fnstsw
shr
adc
xor
xor
std
cmpb
call
add
test
and
out
xor
xor
int3
fistpll
aas
pop
pop
and
shll
loopne
inc
adc
add
es
cmp
es
mov
in
add
in
call
inc
mov
jnp
std
xchg
sub
sub
inc
xchg
pop
inc
hlt
mov
outsb
dec
shl
jae
je
pop
mov
orb
fwait
xor
loopne
sbb
mov
push
pop
inc
test
or
push
xor
mov
ds
cmp
clc
pop
inc
aam
ret
xchg
arpl
inc
sbb
xchg
push
stos
addr16
mov
xchg
pop
sahf
sub
aad
inc
sub
inc
fsub
repz
cmp
stc
and
xchg
jne
hlt
je
loope
push
adc
loopne
xchg
adc
popf
mov
pop
sbbl
pop
mov
repnz
dec
fwait
jmp
dec
sub
xchg
push
xchg
push
pusha
repnz
fbld
arpl
lret
dec
sbb
inc
sbb
mov
cmp
inc
rorb
jmp
mov
mov
inc
dec
pop
in
xchg
leave
mov
add
popf
push
dec
mov
pop
loope
mov
pop
pop
cmp
jnp
push
mov
or
fwait
add
movb
or
add
ficoml
mov
push
mov
sbb
pop
lods
dec
sbbb
lret
jnp
mov
jo
inc
scas
push
sub
cmpsb
cmp
test
js
and
mov
push
sub
call
push
pop
imul
mov
dec
cmp
push
push
and
jnp
adc
repz
push
xchg
lahf
jne
in
jo,pt
mov
test
rclb
pop
rorb
jne
xor
cmc
mov
jnp
orl
arpl
lods
int
imul
push
scas
mov
cmp
mov
xor
mov
outsl
iret
sbb
cmpsb
sbb
mov
lds
std
push
mov
jge
daa
sub
pop
das
sub
daa
xchg
jle
mov
lods
xchg
loop
lret
popa
push
mov
aaa
out
mov
jo
mov
mov
lcall
xchg
je
ds
into
ja
sbb
aas
je
pop
mov
rolb
sbb
xchg
mov
pop
imul
jg
pop
clc
jg
out
loope
insl
faddl
pushf
adc
mov
sub
stos
adcb
lods
imul
pop
pushf
push
xchg
jmp
inc
iret
adc
aaa
pop
insl
mov
fimuls
cmp
and
mov
mov
mov
sbb
fwait
in
push
sub
in
xchg
inc
ds
and
mov
mov
loopne
dec
mov
add
icebp
push
push
mov
cmp
push
jle
mov
push
lock
push
mov
adc
cmpsb
jnp
jns
pop
xchg
inc
inc
or
jnp
out
pop
adc
aaa
aam
popa
mov
lods
mov
push
jmp
stc
jmp
imul
rcl
in
inc
stc
cld
insl
lret
sbb
jne
xchg
xchg
jae
pop
mov
outsl
jnp
inc
stc
or
stos
movsl
xor
push
jg
xor
push
mov
in
jl
or
xor
sbb
fidivrl
lahf
xor
mov
lcall
and
jne
inc
cmp
cmp
bound
fnstsw
test
and
cwtl
fnstenv
pop
lods
jp
daa
adc
or
jbe
or
mov
repnz
fcoms
sahf
test
dec
pushf
push
shl
dec
lods
push
ret
dec
sahf
xchg
push
adc
cmpsb
cmpsb
or
push
imul
leave
bound
imul
cmpsl
imul
iret
or
inc
xchg
insb
adc
inc
es
mov
pop
dec
push
push
repz
test
xlat
jb
jo
mov
aam
mov
movlps
push
or
push
mov
into
sti
dec
and
sub
lret
cld
and
jbe
xchg
setno
adc
add
push
andl
inc
nop
pop
mov
idivl
dec
sub
push
pop
mov
pop
sub
push
in
jecxz
jb
out
xchg
loope
push
mov
jmp
pop
fildll
inc
mov
idivb
jge
std
adc
xchg
and
pop
inc
aaa
mov
xor
insb
cltd
movsb
insb
xor
and
pushf
and
jbe
mov
inc
movsl
jl
in
and
leavew
push
xchg
test
notb
add
aaa
jae
lcall
push
sbb
sahf
fisubrl
add
mov
jecxz
iret
sbb
push
inc
pushf
pop
enter
in
in
sub
push
xchg
jmp
sub
mov
inc
aad
or
insb
imul
stos
mov
dec
pusha
sahf
outsb
ss
ds
cltd
jbe
incb
cmp
nop
ss
hlt
jae
jle
movsl
push
xor
jp
pushf
cmc
sbb
mov
scas
and
jp
jle
sub
lret
test
add
sbb
and
nop
movsl
das
cmpl
fstl
test
add
data16
mov
push
in
mov
repnz
scas
les
iret
pushf
push
mov
in
leave
stc
movsl
jns
dec
roll
je
stc
outsl
fcmovnbe
movsb
ret
sbb
pop
aad
mov
jno
orl
push
dec
pop
and
subl
jnp
sbb
cmp
lds
pop
or
xchg
stc
jbe
and
or
cmp
mov
pop
adc
sbb
adc
mov
mov
mov
cld
sub
jg
sahf
call
xchg
call
outsb
mov
lret
xchg
in
or
in
mov
dec
daa
and
jecxz
inc
jns
mov
sahf
add
mov
sub
mov
or
daa
ljmp
jg
cmp
and
jb
mov
jp
vprotd
ror
jne
sbb
dec
sub
inc
insl
cmp
repz
mov
xchg
xlat
sub
mov
dec
mov
cmp
loop
out
fistpl
xchg
sbb
inc
or
es
dec
dec
xchg
cmp
pop
inc
icebp
mov
lods
jo
jp
inc
or
test
pop
cmp
out
jmp
pop
push
pop
mov
ss
and
test
ret
mov
outsb
and
lds
in
sahf
out
shlb
jne
and
xorl
sub
sub
loope
icebp
sub
push
pop
cld
aad
cmpsb
mov
call
jmp
dec
cmp
add
jg
shlb
repnz
mov
int
mov
mov
out
imul
push
pop
and
push
inc
cmpl
push
cmc
je
xchg
and
jg
in
lea
mov
dec
pusha
lods
fdivs
test
inc
mov
sbb
int
sub
in
dec
cmp
ja
lret
sbb
outsb
xor
out
dec
das
lahf
sti
aaa
std
icebp
rcrl
push
mov
je
fidivrs
dec
sbb
add
jmp
add
mov
push
arpl
loope
sbb
stos
arpl
stc
mov
in
movsb
fadds
xchg
movsb
push
inc
inc
pushf
data16
ret
xor
sbb
pop
jge,pt
sbb
sub
sbb
pop
lret
and
js
and
cwtl
lds
lcall
sub
jae
adc
fldl
ja
push
mov
push
xchg
dec
les
imul
jb
cmp
cli
mov
lods
mov
pop
and
stos
daa
in
cmp
lods
dec
sbbb
sub
scas
xchg
cmp
cmpb
inc
pop
fisttpl
and
dec
and
mov
mov
or
aad
outsb
dec
mov
jp
or
ss
jp
pop
arpl
cltd
scas
jecxz
and
repnz
adc
sti
mov
fsubr
pop
shlb
enter
outsl
jnp
scas
xor
jo
loope
dec
or
pop
cs
sub
mov
sahf
cmpsl
sbb
pushf
sbb
js
mov
mov
jle
mov
xchg
add
cmp
fs
pushf
xchg
inc
fadds
data16
cmp
and
sahf
mov
cmp
dec
xor
dec
pop
cltd
mov
sub
or
push
jbe
lret
sti
mov
es
lcall
sbb
lcall
mov
pop
imul
aad
popf
leave
jmp
int3
cmp
xor
les
out
pop
xor
in
pop
adc
jmp
mov
dec
mov
mov
sub
outsb
int
cmp
sub
jb
insb
repnz
xor
pop
xchg
jno
mov
mov
inc
add
enter
int
adc
lock
mov
loopne
push
ss
push
leave
ja
add
mov
jno
push
lods
lds
call
shll
por
mov
push
jge
cmp
daa
into
sbb
out
lock
cli
test
je
lret
sbb
mov
mov
out
mov
jbe
cli
scas
bound
mov
cli
inc
das
inc
pop
jle
xlat
mov
nop
cwtl
xor
in
loopne
lds
cmpsl
mov
sub
repz
xchg
cmc
push
jae
sarb
and
cmp
jbe
jl
rorl
sub
mov
repz
sub
jge
dec
test
nop
jns
data16
push
inc
repz
shrl
call
adc
test
or
push
cmc
fisubrs
mov
loope
leave
inc
iret
jmp
call
push
lret
cwtl
outsl
xchg
shrb
or
clc
xlat
push
add
add
dec
xchg
stc
sahf
xchg
out
stos
negl
dec
add
pop
fxch
mov
cmp
stos
divl
shlb
dec
xchg
test
arpl
mov
jge
leave
push
cld
cmp
sbb
sbb
dec
cmpsb
xchg
and
test
xchg
jl
or
xor
in
mov
jne
or
loop
push
cld
or
xchg
xor
test
sbb
pop
sarl
shll
in
mov
mov
jnp
xor
clc
loop
jecxz
std
adc
sbb
adc
ret
sbb
std
sbbl
cmp
inc
push
outsb
xchg
or
enter
bnd
mov
dec
lods
inc
aas
test
mov
rcl
or
jmp
mov
mov
adc
mov
sbb
cmp
lea
call
shl
fs
inc
dec
cmpsb
inc
cmpsb
cwtl
mov
insl
cmp
add
gs
and
jnp
push
jl
clc
ljmp
jecxz
in
ret
xchg
mov
not
sbb
dec
mov
pop
add
and
cli
xchg
das
rolb
xor
sub
in
nop
xor
shrl
dec
test
inc
push
cmp
inc
pop
repz
sbb
lock
jbe
sahf
imul
std
cmp
xchg
jns
pop
add
data16
push
in
out
data16
je
xchg
dec
ret
outsb
movsb
int
out
shl
inc
adc
decb
xchg
jg
push
std
xchg
and
fistps
mov
daa
mov
out
lcall
mov
jge
or
popf
pop
cli
lahf
ret
xchg
cmpl
jg
iret
fnop
loopne
iret
dec
adc
fstp
mov
test
in
adc
stos
lea
pop
xorb
inc
xor
inc
repnz
decb
jmp
daa
jmp
xor
clc
mov
mov
mov
mov
pop
mov
xchg
stos
std
hlt
dec
fdivrs
mov
jecxz
mov
pop
add
push
sbbl
repz
sbb
pop
mov
jbe
mov
fmul
mov
rcrb
rcl
cli
dec
mov
push
pop
dec
or
pop
push
in
fimuls
jmp
sti
xor
push
lret
add
loopne
adc
insb
ja
mov
push
inc
cmp
mov
push
test
mov
shrl
xchg
push
adc
sbb
mov
pop
push
out
mov
jae
xchg
insl
ret
repz
ljmp
and
mov
push
imul
subl
imul
xor
xchg
in
xor
dec
sub
xchg
lcall
jg
mov
dec
fidivl
adc
mov
daa
sub
popf
les
repnz
rclb
xchg
fwait
jecxz
pusha
ja
movsl
outsb
mov
loop
filds
cli
aaa
std
cli
jbe
lods
movsl
cmpsb
jns
sub
popa
inc
sub
cmp
cltd
movsl
clc
sarl
add
push
sub
and
cmp
mov
adc
je,pn
sbb
xor
aam
minps
addb
insb
add
add
add
lds
cs
lds
sub
cmp
mov
pop
out
cmpsl
push
enter
sbb
sbb
jge
or
clc
std
bswap
aam
mov
sbb
scas
mov
xchg
addr16
jnp
cli
fisubs
sbb
pop
mov
mov
mov
fmuls
jb
sub
js
cltd
clc
fsts
fidivrs
xlat
or
aam
js
adc
and
cmpsb
cmpsl
jecxz
fs
add
mov
adc
sub
jp
movsl
xchg
fwait
sbb
test
pop
xor
dec
xchg
jmp
daa
mov
push
adc
add
dec
mov
sub
cwtl
hlt
adc
dec
jno
jne
mov
cmp
mov
mov
adc
mov
data16
sbb
ss
imul
out
fldl2e
stos
pop
or
dec
sbb
push
push
xor
jp
ss
xchg
cmp
test
popf
and
mov
test
mov
mov
mov
inc
jmp
xor
pop
add
pop
mov
shl
push
gs
std
fiadds
add
cli
mov
call
in
xchg
dec
add
loope
push
jmp
lea
xor
clc
fcoms
mov
jno
jecxz
das
xchg
xor
xchg
lds
das
push
roll
clc
sahf
xchg
lock
jecxz
and
dec
sarl
jno
adc
pop
or
outsb
xchg
xor
or
mov
cli
add
mov
mov
filds
insl
leave
adc
jb,pn
int
mov
pop
aas
mov
pop
mov
mov
sbb
cld
lods
pop
loopne
lds
sub
sbb
gs
jbe
arpl
jb
sub
pop
dec
mov
push
push
or
fiadds
std
cli
sbb
mov
mov
pusha
arpl
add
sbb
cmp
mov
cmpsl
mov
mov
pushf
rol
clc
js
mov
inc
loope
pop
je
jg
clc
inc
insb
fistpl
mov
aad
sub
xor
or
ret
sbb
leave
cmp
push
fadds
inc
fisubl
xchg
mov
test
push
sub
cli
repnz
aaa
sbb
leave
push
cmp
ret
les
adc
sbb
daa
mov
push
jmp
push
cli
xchg
mov
inc
dec
ss
adc
les
dec
xlat
jmp
jp
mov
adc
shrl
mov
out
add
mov
popf
push
fsubrp
jns
mov
popa
popa
pop
xlat
dec
sbb
cmpsb
pop
sbb
pop
xor
daa
ret
jo
lods
andl
mov
pop
xchg
cs
lea
xchg
data16
mov
lods
daa
mov
cli
jno
rcrb
cmpsb
int3
jb
pop
fnstsw
shr
jb
std
jge
jae
imul
cmpsl
iret
jl
addr16
push
dec
adc
in
adc
cmp
aaa
dec
ret
add
pop
test
mov
cmpsl
mov
push
cli
clc
popa
mov
jne
jae
dec
add
je
pop
pop
pop
jl
jp
lret
xor
out
add
inc
or
jge
shrb
test
outsb
xor
xchg
xchg
inc
dec
fistpl
add
mov
sbbl
test
std
out
loope
sbb
pop
data16
cltd
or
push
ds
jl
loope
dec
and
push
dec
movsl
pop
fstpl
jg
pop
xchg
add
out
andb
jbe
xlat
lods
push
das
and
and
stc
in
jnp
or
flds
inc
jnp
shll
fidivl
cmp
repz
rolb
cmp
inc
pop
add
cli
cmp
cmpsl
mov
orb
call
mov
cmpsl
mov
jle
mov
fdivrs
mov
push
pop
dec
inc
pop
mov
dec
xor
roll
cmc
xchg
out
pop
sbb
push
imull
cmp
and
ljmp
cltd
push
repz
sub
jbe
cltd
jo
je
push
pop
xchg
addb
jmp
and
adc
sub
clc
aaa
int3
cmp
addl
in
loop
mov
or
add
cmc
jae
cmpsb
iret
mov
in
jmp
ret
enter
lret
out
cmp
jae
scas
mov
jp
jge
mov
mov
repnz
pop
aam
mov
imul
xor
gs
xor
pop
cmp
bound
testl
mov
stc
and
add
adcb
xchg
in
inc
ror
dec
orb
lahf
mov
and
test
leave
out
jecxz
jo
inc
xor
push
push
lret
sbb
mov
mov
jnp
mov
lcall
mov
repz
push
dec
cmp
adc
add
loopne
push
and
fisttpll
lret
sbb
ja
iret
int
inc
dec
dec
rorl
add
test
adcl
int3
mov
fxch
cmp
xchg
mov
pop
xchg
lahf
repz
add
add
xor
mov
dec
sahf
in
sub
in
dec
cmpsl
dec
mov
pop
popa
mov
fisttps
and
inc
xchg
aaa
sbb
es
cmp
adc
adc
sahf
sbb
cmp
and
movsb
xchg
leave
jecxz
mov
xor
arpl
repz
pop
js
cmp
test
outsl
dec
js
mov
and
mov
cmc
inc
jns
aas
adc
push
out
negb
jg
data16
xchg
jno
push
inc
push
es
xor
jns
jl
sub
xor
and
jb
inc
int3
leave
es
rcrb
jbe
inc
clc
inc
mov
cs
or
xor
into
test
sbb
repz
cld
xor
fwait
pop
ljmp
lcall
pushl
neg
movsb
add
ja
jp
or
es
adc
push
insl
pop
insl
lods
mov
out
lahf
add
lock
insb
addr16
add
dec
arpl
add
out
pop
and
cmp
pop
inc
ss
and
push
xor
movsl
jno
push
xchg
inc
inc
cs
mov
jb
incl
mov
loopne
push
sbb
dec
cmpsb
mov
call
inc
data16
lcall
jb
pop
aad
repz
push
lret
sahf
sbb
lea
mov
gs
jl
adc
cmpsb
pop
fiaddl
mov
iret
xchg
movsb
sti
pop
jo
cld
xchg
movsl
inc
push
xchg
rcll
jmp
sub
lret
dec
pop
cmpsl
push
and
subl
jmp
jl
into
cmpl
adc
enter
cmc
push
int
push
lock
cmp
jmp
pop
movsl
cmc
xor
fiadds
imul
sub
std
lret
enter
xchg
ficompl
xchg
cmp
dec
mov
push
cmp
loopne
push
sbb
adc
ret
cmp
gs
jne
and
add
cmp
dec
ret
jbe
mov
add
or
jge
je
sbb
movsl
xlat
jnp
ror
fimull
mov
jb
adc
jecxz
and
test
mov
mov
ljmp
movsb
dec
shll
xor
daa
std
fimuls
dec
mov
push
mov
fdiv
pop
xor
jo
orb
mov
add
loopne
fldl2e
mov
push
pop
je
sbb
mov
xlat
push
cli
pop
mov
adc
sbb
out
add
inc
inc
add
pop
dec
sub
jae
mov
ljmp
lcall
pop
shll
lods
pop
mov
push
add
test
addr16
mov
fcmovb
test
cmp
scas
sub
fdivs
std
or
push
cltd
mov
dec
es
mov
shll
pushf
fisubs
mov
in
mov
stos
test
lcall
aam
out
in
sub
mov
adc
rcll
add
mov
inc
enter
inc
sbb
cmp
mov
cmp
mov
and
mov
in
popa
lods
push
test
bound
mov
test
std
dec
and
cmp
sahf
jle
mov
loop
imul
ret
push
mov
mov
filds
mov
icebp
mov
cmp
test
insb
nop
or
lds
inc
inc
add
pop
mov
ljmp
nop
push
and
xchg
pusha
push
adc
cmp
jae
out
push
xlat
mov
paddsw
rclb
jbe
cld
pop
mov
mov
stc
test
sbb
jbe
pop
ret
jno
cld
inc
imul
and
adc
stos
in
mov
lds
shrb
in
outsb
insb
mov
ss
push
push
push
jmp
cmp
dec
push
lret
fdiv
test
cld
jmp
mov
dec
insb
in
push
mov
push
cli
dec
into
push
sub
and
pop
call
sbb
inc
testb
stos
push
push
ret
xchg
bound
mov
in
repz
jne
pop
cwtl
shlb
or
aas
lret
dec
adc
xor
pop
out
mov
push
cli
aas
je
popa
inc
mov
roll
hlt
mov
xor
cld
xchg
push
out
cmp
insl
push
mov
out
jg
mov
mov
je
mov
std
inc
push
mov
div
lods
cmp
sbb
push
int3
push
out
stos
lcall
outsb
push
or
je
lods
lea
out
cwtl
jns
fidivl
andb
repz
dec
cmp
sub
lret
dec
sti
movsl
fs
lret
dec
jae
mov
ror
jo
sbb
adc
int3
std
push
pop
mov
dec
push
into
negl
in
adc
xchg
pop
idiv
xor
and
add
in
cld
pop
mul
pushf
inc
or
pop
xchg
in
cwtl
loop
or
ret
out
fsub
push
cwtl
cmp
std
gs
test
jl
or
pop
imul
cmp
popa
insl
sub
in
fprem1
stos
inc
mov
cld
push
mov
stos
xchg
std
jno
loope
lret
fimuls
insl
sbb
daa
scas
mov
sub
and
or
pop
cmp
or
pop
jle
xor
popf
xor
pop
sub
mov
xor
arpl
sti
mov
push
arpl
mov
jo
jb
push
nop
sbb
pop
pop
jp
or
outsb
push
sub
popf
mov
pop
push
and
jnp
sti
inc
pop
pop
pop
leave
inc
data16
xorb
xor
inc
jmp
jmp
popa
and
pop
dec
cs
out
mov
xor
unpckhps
jns
ds
add
mov
pusha
movb
jne
sbb
int3
and
mov
notb
cmpsl
in
push
imul
popf
ret
jge
ss
pop
gs
pop
lock
lahf
xchg
adc
call
imul
leave
sub
es
cmp
pop
into
xor
sbb
push
jae
jle
icebp
pushf
pop
push
jmp
jb
push
xor
mov
cmp
jle
dec
rorl
test
rcr
or
cmp
iret
pop
decl
stos
insb
pushf
outsb
jmp
jecxz
xchg
push
jle
push
iret
in
xchg
stos
pop
push
or
mov
lea
mov
inc
addb
decl
lods
fnstsw
pop
dec
dec
add
sbb
cmp
dec
lret
aas
sahf
xchg
adc
push
xchg
daa
or
movsb
sub
push
and
je
mov
sub
movsl
adc
rcrb
mov
sbb
or
mov
mov
in
sahf
mov
lds
jmp
call
clc
xchg
pop
aam
pop
cltd
inc
pop
fnstcw
pop
pop
inc
add
repz
push
bound
lret
sbb
sub
stc
fs
mov
adcb
je
fnstcw
mov
xchg
cmp
fisttpll
mov
ljmp
out
mov
outsl
sbbb
loopne
je
push
inc
adc
and
andl
lods
mov
add
sbb
test
ret
leave
lods
add
aad
push
mov
mov
frstor
adc
add
mov
jecxz
sub
in
or
mov
mov
mov
mov
int3
adc
xlat
jp
pushf
fiaddl
sub
sbb
pop
js
pop
pop
mov
xlat
adc
popf
sbb
popa
push
inc
leave
mov
pushf
jg
xor
xor
inc
pop
mov
adc
mov
lret
adc
inc
call
xor
addr16
sub
jg
jmp
mov
push
jg
pop
mov
and
loope
push
les
dec
mov
jle
inc
mov
pop
bswap
fiaddl
out
call
fwait
test
mov
inc
inc
sbb
xor
add
push
enter
xlat
fisubrl
ficompl
xchg
xlat
rorl
gs
aas
negb
daa
shrb
rorl
andl
xor
or
inc
mov
cmpl
jne
call
cmpl
jne
mov
inc
mov
cmpl
jb
sub
mov
xor
sub
movl
mov
andl
movl
sbbl
push
movl
mov
xor
push
andl
jmp
xor
add
inc
mov
cmpl
jae
cmpl
jne
pushl
push
pushl
pushl
pushl
push
call
cmpl
jne
mov
inc
mov
jmp
mov
xor
mov
adcl
push
add
jmp
movl
mov
mov
movl
inc
movl
cmp
jb
mov
xor
add
movl
jmp
sub
mov
andl
jmp
xor
or
inc
mov
cmpl
jae
cmpl
jne
call
jmp
xor
mov
xorl
xor
mov
addl
add
xorl
movzwl
mov
mov
addl
movzwl
movl
xor
add
mov
mov
mov
inc
movl
mov
movl
cmp
jne
xor
mov
andl
jmp
xor
or
inc
mov
cmpl
jae
cmpl
jne
pushl
push
pushl
call
cmpl
jne
xor
xor
inc
mov
jmp
adcl
mov
xor
xor
decl
add
mov
sbbl
mov
inc
xor
mov
xor
add
movl
cmpl
je
cmpl
jne
push
push
pushl
call
mov
dec
mov
jmp
mov
not
movl
movl
movl
and
mov
movl
cmpl
je
cmpl
jne
push
call
cmpl
jne
mov
dec
mov
xor
xor
dec
mov
jmp
notl
mov
sub
mov
andl
xor
add
mov
not
mov
je
mov
orl
mov
adcl
xor
xor
subl
sub
sub
xor
mov
incl
mov
mov
add
subl
imul
xor
mov
andl
mov
inc
mov
cmpl
jne
push
call
cmpl
jb
mov
mov
add
xorl
or
adcl
mov
addl
mov
subl
mov
xorl
add
adcl
xor
mov
andl
mov
inc
mov
cmpl
jne
push
push
push
call
cmpl
jb
inc
mov
mov
addl
add
adcl
and
mov
or
mov
mov
sub
mov
orl
lea
mov
mov
mov
incl
sub
movzwl
adc
mov
add
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
pushl
call
cmpl
jne
mov
inc
mov
jmp
movl
cmpl
je
cmpl
jne
push
pushl
push
pushl
push
push
pushl
call
mov
dec
mov
jmp
addl
mov
adcl
xor
adcl
add
movl
jne
jmp
adc
mov
sub
xor
mov
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
jmp
aaa
xchg
jae
mov
xor
add
lret
add
jp
fwait
in
lock
xor
sub
iret
mov
or
movsl
push
loopne
push
mov
sub
ds
adc
bound
inc
mov
xor
dec
aaa
mov
and
dec
insl
in
rorb
jecxz
push
adc
aam
and
xor
test
push
mov
in
popa
test
fs
or
inc
fisubs
adc
imul
add
repnz
adc
pop
cmp
je
mov
insl
pop
data16
xor
iret
repnz
and
rolb
cmpsb
dec
aam
insb
aas
scas
imul
mov
xchg
mov
lcall
mov
lds
bound
xchg
fwait
mov
pop
outsl
int3
bnd
and
jns
xchg
repz
cmpsl
sub
scas
rolb
jg
sub
jb
xor
aad
test
inc
and
fcoml
sub
mov
out
pop
test
and
stos
lret
dec
push
and
int
lahf
sbb
mov
call
jecxz
dec
insl
add
or
or
jns
cmp
daa
cmp
scas
aam
mov
mov
faddl
leave
xchg
daa
and
inc
mov
push
enter
push
cmp
xor
jae
sti
cs
ret
cmpsl
xchg
pop
add
mov
jno
popa
mov
xchg
push
or
mov
rcl
repnz
mov
insl
add
mov
fwait
outsl
fidivs
lcall
mov
fmull
icebp
or
dec
iret
jg
cmp
movb
sub
shl
pop
fmull
xor
out
dec
xchg
outsl
mov
mov
cmp
mov
mov
mov
imul
fldt
insb
jecxz
inc
loope
or
xor
xchg
test
cmp
xor
in
outsb
adc
sti
mov
mov
jbe
in
out
iret
jg
mov
std
pop
xchg
mov
shl
imul
loop
inc
adc
adc
push
mov
sbb
adc
cmp
scas
mov
adc
cmc
sbb
test
and
call
sbb
mov
sbb
mov
fildll
popa
jne
imul
out
sti
fimuls
divb
into
in
in
mov
addl
scas
cld
xchg
ljmp
add
sbb
mov
hlt
cmp
in
cs
dec
fmull
adc
inc
decb
test
mov
repz
scas
pusha
andb
loop
xchg
nop
and
iret
or
fdivl
lcall
mov
cmp
or
fucomip
dec
bound
bound
pop
mov
add
mov
mov
fcmove
outsb
mov
imul
ret
lea
rcrl
mov
sbb
add
mov
xchg
adc
loopne
pop
push
rol
mov
cmc
cmpsb
mov
fdivrl
repnz
testl
cmc
insl
test
repz
mov
add
int
imul
pusha
dec
nop
add
adc
mov
push
mov
lcall
push
push
add
dec
sbb
xlat
xchg
mov
inc
adc
lret
add
pop
and
outsl
inc
cmp
popa
ja
xchg
mov
inc
lds
sub
in
fwait
jmp
add
shr
rcr
in
mov
xor
cltd
add
jbe
into
xorb
xchg
test
cmp
mov
mov
cld
inc
lock
xchg
popf
dec
jmp
aaa
pop
inc
xchg
or
xchg
ss
dec
xor
addr16
push
call
xor
stc
mov
mov
movq
mov
imul
das
or
daa
mov
out
std
aas
adc
addr16
xor
cmpsb
loop
xor
mull
repz
jl
pop
fisubs
int
leave
xchg
test
in
pop
adc
imul
dec
addr16
inc
ret
pop
adc
out
sub
jp
xchg
mov
arpl
or
xchg
dec
cmc
repnz
xor
sub
divl
adc
movsl
xchg
popf
fstl
push
out
lock
test
sbb
sbb
mov
and
hlt
test
fdivl
cwtl
mov
xchg
sbb
in
cltd
jb
dec
popf
xor
gs
ja
mov
xor
insb
subl
cld
idiv
notl
out
stc
mov
mov
movsb
mov
lcall
fmulp
mov
in
mov
cmp
lcall
add
ss
inc
xor
cmpsl
rcrl
out
sbb
mov
inc
stos
lret
sbb
mov
rcl
clc
xor
sbb
loope
stos
fadds
rclb
call
xor
pop
dec
in
stc
std
fstp
std
int
or
dec
imulb
mov
mov
pop
lret
repnz
lahf
jmp
pop
mov
push
mov
test
cwtl
inc
or
mov
mov
mov
inc
es
fldl
je
xor
lods
xchg
mov
adc
test
mov
or
sbb
cmp
dec
and
mov
sbb
shrl
call
pusha
in
bound
push
pushf
cmp
add
inc
bound
popf
rcr
push
push
add
outsb
xchg
and
je
lods
outsl
mov
das
mov
shll
or
adc
shll
jne
int
cmpsl
pop
jge
mov
into
cmp
jbe
sub
mov
insb
cmp
and
mov
shll
fsubrs
loop
cmp
cmc
pop
ret
mov
push
pop
pop
outsl
dec
jg
repnz
adc
fimuls
inc
mov
inc
adc
insb
push
lret
and
clc
sbb
out
repz
cld
jle
mov
push
and
mov
jg
fs
push
rclb
jle
sti
xchg
mov
push
hlt
les
add
and
fwait
cmp
clc
shlb
arpl
shlb
int
nop
loopne
jge
and
shlb
mov
xchg
inc
sahf
rol
jmp
rcll
mov
adc
lods
and
out
pop
cmova
or
push
and
push
gs
jns
dec
jmp
push
dec
dec
mov
mov
and
sbb
fmulp
mov
pop
jb
loope
clc
in
in
cmp
hlt
out
push
jp
mov
pop
scas
cmpl
jp
jmp
mov
movsl
gs
aaa
pop
fcoms
dec
or
adc
roll
push
inc
cmp
cmpsb
in
jb
xor
sti
add
movsl
mov
push
mov
sub
loopne
add
sub
xchg
in
sbb
test
inc
mov
add
push
jnp
mov
dec
test
dec
lds
jmp
cmp
sub
xor
popa
fucom
cmp
xchg
hlt
push
int
add
and
cmp
lods
mov
lret
xor
sbb
pop
lods
sbb
fs
fisubrs
loopne
dec
add
das
inc
xor
cmp
xlat
xchg
dec
cltd
mov
imul
pushf
lret
cmp
xchg
push
mov
xor
cmp
xchg
add
ds
lcall
adc
imul
outsb
jl
rclb
cwtl
aad
pop
ret
jge
sbb
cmpsl
adc
add
pop
cmpsb
inc
aaa
adc
cmc
add
sarl
rorl
sub
mov
pop
sbb
pop
cli
movsb
scas
mov
pop
xchg
ret
push
cmp
or
push
clc
jmp
dec
lods
cmc
mov
dec
pop
dec
inc
repz
add
das
int3
inc
ss
cwtl
sbb
nop
jns
jl
or
rcl
xor
mov
push
enter
rcl
lret
xor
mov
shr
mov
and
jne
sar
adc
arpl
xchg
jb
out
mov
mov
mov
mov
or
inc
lea
lcall
insb
popf
in
out
mov
data16
jp
inc
push
jae,pt
or
popf
imul
addl
mov
stos
popa
pushf
dec
cmpsb
sbb
lret
call
jb
sbb
adc
int
dec
fiaddl
xchg
loopne
xchg
jge
call
fld
xchg
shlb
ljmp
fldl
pusha
lret
aas
mov
fcomps
sub
addb
pop
neg
cmpsb
jbe
inc
pop
mov
inc
mov
jno
jnp
jmp
stc
data16
das
cmp
push
cmpsb
push
das
sbb
lock
nop
outsb
cmp
fwait
ss
outsl
dec
or
les
push
dec
xor
dec
sbb
mov
or
nop
scas
adc
int
arpl
dec
push
sub
pop
into
mov
rcr
adc
addl
mov
test
inc
sbb
inc
shl
adc
and
jecxz
sbb
mov
loopne
push
jg
int3
pushf
shrb
push
add
adc
xchg
insl
out
fsubl
and
aam
cmp
in
out
sbb
inc
add
mov
inc
subl
mov
test
clc
sbb
xor
stos
data16
push
push
inc
es
jg
pushl
adc
outsb
ja
mov
std
jge
cmp
bound
or
add
test
bound
dec
lea
in
jbe
insb
cmp
jl
cmc
xchg
cmp
dec
les
daa
scas
in
rcll
jnp
loope
test
cmp
mov
xor
jg
pop
data16
sbbb
scas
or
les
cmp
sub
pop
mov
mov
notb
xlat
mov
dec
xchg
lahf
inc
and
dec
pusha
cltd
dec
add
adc
daa
lret
sarb
mov
xchg
xor
jmp
sub
push
gs
cmc
pop
xchg
stos
and
sbb
cmpb
idivb
in
jmp
jl
out
cmp
addr16
insb
pop
bound
mov
adc
icebp
add
push
cmpsl
outsl
xchg
cltd
mov
add
in
push
dec
dec
ds
rorb
hlt
andb
stc
hlt
mov
inc
jo
cmc
mov
push
inc
arpl
adc
push
call
mov
mov
jo
push
fsubp
mov
xchg
loop
mov
pop
xor
push
popa
jl
inc
cmp
stos
lock
jo
mov
sti
xor
rorb
mov
mov
insl
inc
sarl
inc
xchg
into
xchg
jne
inc
jmp
xor
sbb
push
lea
stos
fisttps
inc
fwait
or
test
jp
sub
push
mov
outsb
push
addr16
jmp
xchg
hlt
sbb
mov
jl
aaa
jnp
pop
out
psubsw
mov
jp
mov
jmp
push
aam
cmp
testb
imul
ret
sbbl
xor
cmp
fmuls
stos
pop
ja
xlat
jno
pop
jne
data16
cmp
pop
pop
pop
sub
cmp
jno
sbb
adc
adc
dec
sbb
xor
inc
test
mov
ja
inc
inc
movsl
mov
dec
lods
jbe
es
inc
add
add
sub
xchg
out
mov
or
ss
lahf
pop
mulb
add
mov
mov
adc
dec
and
cld
xor
cmp
pusha
clc
addr16
in
addr16
push
or
and
mov
add
loopne
movsb
xchg
out
test
adc
xchg
push
mov
fdiv
add
or
inc
jmp
and
mov
loopne
fldl
cmp
push
mov
lds
decl
repnz
mov
mov
ud0
ja
lock
aam
jne
xchg
pop
scas
mov
pop
cmpsl
repnz
icebp
adc
outsb
jae
jae
or
std
movsb
jno
fists
lea
rclb
sub
adc
push
ds
push
mov
inc
pop
ss
into
and
pop
je
outsb
xchg
ret
mov
stos
mov
mov
psrld
pushf
stc
adc
hlt
filds
enter
outsl
or
sbb
cmp
mov
pop
mov
jl
cs
stos
out
mov
mov
lret
fs
xor
sub
cwtl
out
mov
cs
jg
data16
arpl
loopne
hlt
xor
adc
push
push
push
in
ret
mov
dec
xor
ret
pop
imul
xchg
push
push
cltd
or
into
push
mov
pop
loop
jecxz
cmp
inc
adc
scas
rcrb
xchg
jo
aas
or
dec
pop
xchg
xchg
movsl
sahf
sbb
cmpsl
add
sub
and
push
loope
pop
mov
dec
mov
sti
jmp
scas
pop
jp
jne
jbe
jl
and
pop
inc
fadd
jno
or
loopne
shr
add
jbe
jae
mov
xchg
push
sub
ljmp
adc
jns
push
inc
push
je
ss
pop
jbe
dec
mov
inc
sub
xor
adcl
jo
mov
stc
clc
sti
hlt
ja
mov
les
call
clc
imull
hlt
repz
sbb
mov
cmp
add
pop
dec
ljmp
lods
push
fbld
push
dec
jl
sbbl
imul
inc
clc
jge
sahf
stos
mov
xor
test
inc
lcall
inc
fistps
or
mov
loopne
sub
aad
popf
xor
cltd
shl
lahf
sarb
cmc
daa
repz
xchg
daa
popf
inc
push
lods
dec
inc
popa
or
mov
sub
clc
pop
pop
mov
mov
inc
jns
test
fistpl
ffree
adc
mov
scas
mov
int
mov
sbb
or
push
or
mov
lea
arpl
jg
xchg
xacquire
mov
mov
fisttps
push
push
sbb
xchg
hlt
and
call
aam
add
or
es
pop
lahf
dec
xor
xchg
cli
pop
insl
das
pushf
lds
mov
daa
add
cwtl
movsb
imul
setae
popf
shll
dec
testl
jmp
mov
mov
ljmp
push
mov
jecxz
adc
mov
aas
lcall
sbb
test
loop
neg
and
mov
sbb
and
int3
adc
push
pusha
call
or
jmp
mov
pop
mov
jle
sub
ffree
push
and
stos
mov
jb
sub
xchg
xor
mov
dec
mov
sub
sbb
mov
or
stos
ds
inc
push
scas
xor
addr16
mov
aas
xchg
lea
jge
mov
ret
int3
add
bound
mov
cmp
das
fidivl
scas
cli
movsl
mov
fs
xchg
test
xor
push
xor
enter
push
push
sub
jb
inc
mov
rorl
ror
in
jb
add
mov
enter
cmpsb
fsubs
sahf
test
lods
mov
xchg
dec
cltd
dec
push
icebp
or
jecxz
sub
xchg
test
out
lods
jbe
xor
inc
dec
lods
cmpsl
cmp
mov
mov
pop
mov
xchg
sbb
push
pusha
push
and
push
push
lods
jo
inc
arpl
pop
add
mov
std
mov
bnd
sub
int
aas
inc
hlt
fisttps
sbb
iret
pop
add
mov
jle
cmp
cmp
call
les
xor
js
movsl
inc
pop
ss
sub
xchg
movsl
loope
jecxz
outsl
es
dec
cmpsb
lret
jns
outsb
mov
mov
shrb
lahf
in
shll
ret
setno
pop
outsl
out
dec
and
sarb
xor
mov
enter
ss
jae
dec
popf
cli
icebp
xchg
cmpsl
sbb
sbb
lock
imul
adc
bound
aas
mov
add
cmpsl
sbb
mov
stos
adcb
orl
xchg
out
sbb
adc
scas
cmpl
ja
mov
setb
adc
inc
test
mov
in
xor
loop
jnp
jbe
mov
fbld
push
movsb
daa
bound
sbb
aas
aaa
dec
cmp
enter
rolb
pop
testl
xchg
aad
pop
movsb
xlat
xor
mov
pop
inc
dec
add
inc
std
adc
movsl
jge
in
pop
gs
enter
push
shrb
imul
cmp
scas
dec
jb
mov
xor
imul
jp
adcb
mov
lret
inc
add
pusha
std
xchg
dec
add
sti
test
or
sub
mov
sbb
int3
push
repz
push
jno
push
mov
out
inc
sti
out
mov
cmp
sbb
sub
int
jbe
inc
mov
aam
pop
push
pushf
es
je
cltd
cltd
test
sarb
push
test
and
ds
lds
jne
sbb
push
mov
add
mov
sub
setp
inc
pop
insl
fdivl
and
adc
jb
das
insl
xchg
cs
sub
imull
xor
dec
inc
pop
clc
or
movsb
aaa
sub
adc
jbe
lock
cmp
cld
insl
push
cmp
jle
ljmp
std
mov
dec
xchg
adc
ss
mov
rcr
fcompl
sub
mov
push
insl
aas
movsb
jmp
iret
adc
gs
mov
ret
pop
mov
inc
or
sbb
pop
adc
mov
aam
mov
sbb
jp
jg
mov
rcrl
out
mov
dec
jns
pavgw
sbb
pop
ret
xchg
pop
jge
icebp
pop
push
sahf
jge
lds
adc
leave
xorl
push
movsl
xor
test
add
mov
sahf
imul
sbb
faddl
movb
or
jecxz
dec
mov
cmp
cmpsl
shr
in
push
mov
mov
in
shl
call
jmp
pop
and
shr
aaa
push
mov
sbb
outsb
or
adc
or
jno
loopne
cmp
xchg
lea
arpl
pop
push
scas
mov
cs
xchg
dec
fmul
sub
lcall
popf
or
mov
popa
loopne
pop
inc
aas
mov
xchg
jle
imul
jge
inc
xchg
mov
xchg
mov
fisubrs
sbb
push
xchg
lds
push
or
ds
or
pop
mov
outsb
gs
push
sahf
mov
cld
outsl
and
mov
mov
cmp
notb
rorb
xchg
jp
cwtl
lods
pop
and
cli
icebp
xlat
cltd
lret
jbe
mov
sub
push
xor
adcl
mov
mov
popa
fsts
or
stos
je
jl
pop
sub
scas
push
mov
cld
inc
pop
hlt
pop
push
mov
push
add
cli
push
add
sahf
ret
shll
cli
out
inc
sub
ja
adc
mov
add
mov
ja
adc
fimull
xor
lret
xor
or
add
adc
push
ss
jno
mov
adc
adc
push
jns
movsl
enter
je
sbb
dec
in
dec
fidivrs
sbb
popl
clc
outsl
int
sub
push
cmp
insb
push
dec
jp
or
repnz
mov
fdivp
pop
jmp
cmpsl
mov
jo
bound
add
insl
inc
movl
out
add
inc
jno
aaa
fstl
sti
or
insl
and
dec
fdivl
xlat
jae
mov
xor
iret
push
sub
scas
xchg
jp
adc
push
lods
outsb
mov
lret
int
ret
lods
mov
xchg
mov
outsb
and
sti
mov
and
cmp
dec
int
jg
aad
adc
shrl
xor
xchg
out
jnp
inc
jp
mov
loop
rcr
mov
iret
leave
push
test
push
pop
rol
call
stc
in
dec
pop
sti
sub
lret
xor
divl
add
mov
je
pusha
je
js
jb
mov
add
or
xor
mov
push
int
xorl
lcall
data16
jo,pn
cwtl
push
call
sub
mov
jmp
loop
mov
mov
stos
dec
sbb
ss
sti
aaa
sub
jbe
aas
jo
mov
fcmovu
adc
movsl
subb
adc
mov
ret
dec
inc
xor
mov
mov
mov
int
or
outsl
xchg
pop
mov
sahf
enter
adc
aas
push
out
scas
sub
push
pop
test
jb
test
test
dec
push
xchg
test
or
add
jno
imul
cmc
lock
inc
insb
push
sub
pop
sub
mov
inc
cs
ret
push
lods
std
lods
xor
sbb
jo
imul
jne
push
lock
push
clc
or
mov
xor
xor
insb
in
fchs
imul
or
testb
gs
mov
pop
js
jmp
lcall
out
rcrb
dec
jl
mov
pop
add
mov
loopne
cmp
sbb
pop
repnz
jmp
sbb
outsl
and
jb
or
xchg
outsb
mov
fs
lahf
add
lock
icebp
dec
addr16
addr16
mov
inc
das
fwait
and
push
mov
pusha
lock
sahf
fisubs
ss
inc
jecxz
jp,pt
les
or
lds
xchg
cmp
xor
hlt
xor
jecxz
add
cmp
dec
jno
aas
mov
pop
xor
neg
jae
xor
xor
outsb
repz
add
mov
push
and
pop
adc
lods
lods
test
es
inc
add
adcb
add
cmp
insl
rol
cmp
hlt
fdiv
mull
sbb
sub
fistpl
faddl
stos
rcll
dec
dec
cmp
subb
xchg
fldt
jle
movsl
and
nop
lahf
adc
outsb
adc
sub
inc
xchg
cmp
cld
lock
xorl
lret
xchg
mov
mov
pusha
andl
push
cmp
push
xor
or
mov
daa
xchg
out
leave
test
subl
mov
inc
in
loope
jne
outsb
divb
push
mov
or
lds
arpl
inc
dec
test
arpl
shl
pop
mov
int
mov
mov
sbb
shll
dec
push
sbb
push
cmp
roll
mov
sbb
divl
cmp
lahf
inc
pop
cmp
adc
lock
rclb
xchg
and
pop
or
mov
xor
popa
hlt
decb
adc
push
sub
adc
fsubr
xchg
adc
mov
pusha
shlb
dec
mov
inc
js
sbb
adc
in
jns
mov
mov
daa
inc
mov
inc
pop
call
xchg
dec
out
stos
xor
mov
push
dec
push
test
dec
cmpsb
cwtl
xchg
mov
out
inc
loope
and
sbb
push
mov
dec
pushf
mov
xchg
adc
fnstsw
mov
cltd
push
sarl
das
jae
loope
jle
out
decb
icebp
arpl
mov
push
and
imul
pop
xchg
arpl
push
jg
adc
cmpsl
or
cs
movsb
popa
data16
in
mov
add
popa
mov
inc
addl
lret
pop
sub
pop
mov
movsl
sub
dec
incb
sbbl
push
inc
testl
jge
mov
xchg
mov
jge
pop
push
sub
divb
mov
fcoms
clc
dec
pusha
pop
sbb
mov
pop
sub
jp
push
xor
mov
and
scas
dec
pop
mov
adc
mov
xlat
mov
pop
movsl
mov
int3
sarb
std
mov
out
dec
jge
mov
arpl
or
ljmp
clc
out
cmp
stos
or
and
pop
pop
or
mov
sbb
loope
cmp
test
pop
sbb
orb
lret
stos
cmp
xor
mov
imul
lods
les
repnz
int3
data16
subl
jmp
mov
sub
ret
cld
mov
add
mov
xchg
jle
jmp
call
and
cmp
dec
imul
or
sub
push
push
mov
clc
icebp
insb
arpl
push
out
push
stos
mov
add
xchg
aas
popa
out
inc
paddb
or
repz
enter
sbb
or
loopne
pusha
loop
inc
js
add
and
arpl
inc
fmul
addr16
clc
jne
rclb
fwait
outsl
imul
and
mov
or
fwait
inc
mov
movsl
mov
jg
dec
sbb
insl
pop
adc
lahf
fistpl
lea
mov
xchg
psrlq
stc
mov
addr16
lret
movsl
aam
shll
int3
mov
mov
or
sahf
scas
data16
cs
ds
push
mov
imul
cmp
lods
push
mov
ret
xor
mov
mov
and
int
fistps
adc
leave
adc
mov
cs
inc
push
sub
dec
pop
sub
pop
mov
xchg
rcrb
pop
in
imul
push
sbb
iret
jp
inc
sub
inc
xchg
das
addr16
enter
mov
pop
dec
insl
or
mov
mov
cmpsb
jg
aaa
les
or
mov
dec
add
dec
xlat
lea
push
dec
test
das
adc
jb
call
inc
test
xchg
mov
pushf
push
lret
addb
mov
ja
andb
outsl
aas
fadds
aaa
inc
mov
cmpsl
gs
adc
mov
hlt
int
mov
pusha
fcmovbe
iret
adc
jne
push
popa
out
push
pop
lock
inc
movb
cvtpi2ps
aaa
inc
lahf
movl
in
arpl
pusha
popf
mov
notl
and
xor
and
mov
pop
mov
scas
stc
loope
pop
push
loop
int3
ss
into
or
mov
mov
cwtl
cmp
int3
push
out
lea
push
dec
push
add
es
push
out
imul
popf
xchg
xchg
fcmove
xor
adc
sbb
mov
loopne
cmp
ss
mov
inc
lods
xchg
jno
jp
stc
add
xchg
mov
scas
or
leave
mov
bound
or
sub
pop
int3
mov
mov
ret
mov
cwtl
mov
dec
dec
cmpsb
push
add
jo
adc
inc
pop
daa
push
sbb
mov
lret
mov
decl
xor
aad
jo
xor
icebp
jno
out
push
mov
loope
shlb
adc
mov
sub
cmp
mov
cmpsl
lret
jbe
or
paddsw
ret
repnz
stos
scas
mov
insl
jg
sti
sbb
or
xchg
push
out
add
dec
icebp
push
nop
jno
push
mov
or
jp
fs
add
xor
jle
dec
or
lret
inc
and
dec
mov
jno
cmp
inc
dec
shll
pop
pop
mov
call
fcomps
mov
out
aaa
push
fists
rcrl
xchg
lods
xchg
les
mov
xor
cmp
aad
in
sub
sbb
lock
dec
scas
fsubrp
or
adc
pop
pushf
adc
mov
test
movsb
jbe
sub
insb
call
mov
jg
lds
mov
or
scas
stc
scas
movb
pop
xchg
jnp
jmp
shlb
ss
out
out
push
test
mov
je
fwait
xor
mov
pushl
mov
mov
lahf
insb
add
xchg
and
push
sub
in
ret
shll
push
jmp
inc
mov
decb
divl
daa
mov
inc
adc
fistl
adc
bound
and
inc
ret
cmpsl
mov
add
jnp
or
cltd
push
icebp
jmp
std
test
mov
sbb
imul
lods
adc
inc
fistl
xor
movq
add
jbe
movb
push
sub
mov
push
pop
and
orl
fdivrs
mov
repz
and
iret
jmp
std
sarl
cmc
pop
sbb
imul
fildl
mov
mov
dec
bound
loope
cmpsw
insb
pop
sti
cltd
dec
mov
sti
pop
dec
cli
or
cmpsl
aam
mov
loop
fchs
sub
cs
adc
xchg
sbb
stos
mov
shrb
push
xor
push
nop
sbb
mov
jle
cwtl
stos
lock
bound
or
pop
sti
dec
xor
shr
scas
ss
loopne
js
ja
dec
jmp
test
or
hlt
jns
xor
arpl
fcmovu
jnp
and
and
xor
jno
add
cmp
jge
xor
mov
ds
rolb
pop
mov
je
adc
fsubl
insl
mov
hlt
out
mov
push
nop
mov
pop
mov
push
pusha
dec
jno
test
aaa
sbbl
push
jp
int
xchg
imul
xor
movsb
fyl2x
xor
xchg
jl
gs
movsb
mov
add
rcrb
movsl
shl
xlat
rep
in
cmpsb
insl
movsl
sub
dec
xor
adc
test
pop
xor
or
xorb
push
push
idivb
mov
pop
out
dec
sbb
sbb
or
inc
dec
iret
fstp
jl
add
mov
mov
dec
push
popl
xlat
push
repnz
inc
pop
pop
mov
lock
jno
cli
int3
loop
mov
inc
das
mov
scas
test
mov
lods
dec
dec
lods
add
mov
out
add
ret
adc
xchg
cmpsb
xor
cmp
mov
fldl
xchg
inc
bound
sub
sbb
ret
add
cmp
loope
push
in
adc
xlat
and
les
add
lcall
mov
fldl
xor
stos
cmpsl
cli
cmpsb
std
mov
mov
mov
add
imul
mov
mov
mov
add
or
mov
mov
mov
add
xor
mov
mov
mov
add
and
mov
mov
mov
lea
mov
mov
mov
sub
add
mov
mov
xor
add
jne
mov
mov
mov
cmp
je
mov
mov
mov
mov
xor
cmp
jne
mov
mov
xor
movsbl
mov
xor
add
cmp
mov
mov
mov
je
xor
add
mov
je
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
add
imul
mov
mov
mov
add
or
mov
mov
mov
add
xor
mov
mov
mov
add
and
mov
mov
mov
lea
mov
mov
mov
sub
add
mov
mov
xor
add
jne
jmp
jmp
out
push
and
outsb
fs
aam
scas
jp
add
jp
addl
ficoml
js
jb
jns
test
push
mov
lahf
mov
ret
adc
push
xchg
dec
es
sbb
adc
addr16
inc
in
jmp
stos
push
push
and
and
push
and
add
cmpsl
mov
jge
push
pop
or
insl
or
popf
ja
out
or
dec
mov
jns
loopne
xor
dec
sbb
push
mov
cmp
lea
imul
mov
in
mov
inc
mov
sbb
inc
inc
outsb
out
rorb
jmp
cld
in
cmp
inc
bound
das
dec
arpl
xchg
stos
scas
pop
adc
lods
fmull
stos
xor
xchg
test
push
push
pop
fwait
cmp
aaa
lea
fimuls
inc
test
lds
push
jbe
ficomps
sub
add
cli
or
xchg
dec
cmp
and
inc
mov
push
mov
jmp
fcmovu
lea
mov
xor
adcl
xchg
mov
fwait
das
and
jge
in
pushf
push
mov
mov
sub
adc
mov
lea
sbb
jmp
das
xor
lcall
imul
jmp
fucomi
xor
xor
arpl
nop
leave
and
pop
push
mov
inc
gs
ret
jp
mov
test
jb
js
pop
andb
sub
ds
lret
scas
and
mov
fidivs
adcb
int
cmc
xor
add
xorl
aam
and
or
push
pop
repnz
pop
push
jno
push
jl
inc
arpl
dec
mov
xor
daa
xor
lahf
xor
dec
or
lcall
adc
sbb
addr16
lret
repz
imul
sub
mov
dec
or
inc
push
dec
jecxz
inc
aad
or
fdivrs
fdivrp
and
pop
addr16
sbb
mov
icebp
js
jb
cmp
mov
fwait
jno
lock
push
rclb
in
mov
pop
imul
ja
mov
adcb
lea
add
test
xchg
inc
or
sbb
mov
lods
out
in
and
ret
adcb
lahf
movsl
cmp
xor
mov
lret
nop
mov
fists
add
cmp
stos
lock
jne
fs
cwtl
out
push
popa
xchg
jmp
mov
daa
in
ljmp
divb
testb
je
lcall
xchg
cmp
dec
sar
sub
icebp
mov
jmp
jl
nop
jae
xchg
stos
mov
mov
sub
insb
inc
fnclex
into
pop
jno
lods
das
pop
fdivrs
inc
add
out
mov
out
cmpsl
stc
pop
fldlg2
clc
cmpl
test
add
cmp
mov
fs
jp
push
fwait
push
int
push
inc
jo
push
cmp
loop
push
xchg
mov
cltd
rolb
adc
xchg
xor
jae
cmp
stos
jae
and
mov
jns
cwtl
cmpsl
adc
frstor
xor
rorl
dec
push
pop
xor
xor
mov
cmp
pop
rcrb
mov
and
imul
add
lds
cltd
aaa
inc
lods
shlb
fldt
fwait
xchg
aam
jl
and
int3
pop
push
mov
mov
mov
and
cmpsb
adc
xchg
ja
leave
loope
jp
jp
outsl
xchg
xlat
sub
fdivrl
mov
add
fcmove
movsl
sbb
idivl
int
sbb
jns
inc
cli
push
inc
jg
lahf
pop
sbbl
cmp
mov
add
ud1
movzbl
dec
fsubp
adc
pop
sub
pop
adcl
xor
ja
daa
jmp
dec
xchg
mov
pop
adc
xlat
loopne
cmpsl
jl
leave
sbb
les
adc
rorb
arpl
add
adc
mov
xor
scas
xchg
push
int
cmp
push
popf
fistl
or
ss
lods
inc
lahf
or
or
add
jnp
outsb
pop
pop
aad
adc
push
sbb
out
std
mov
lds
add
and
ffreep
lods
scas
leave
cs
jbe
out
xchg
lcall
xor
push
inc
ja
add
adc
daa
jle
dec
sbb
jne
sub
sub
movsl
push
inc
and
dec
or
sub
test
sarb
stc
push
add
adc
sbb
dec
call
mov
cmp
addr16
cmp
pop
das
js
add
sbb
popf
mov
lcall
push
cli
ret
jbe
xor
mov
mov
push
jae
mov
sbb
pop
fstpl
sbb
fcompl
sbb
insl
add
push
and
add
lock
fldcw
imul
mov
insl
push
xor
push
cld
and
out
sbb
ds
aaa
push
xor
push
fs
mov
outsl
pop
insb
xchg
dec
cmp
in
jge
fwait
sub
inc
xor
or
cmp
daa
or
dec
insb
mov
fnstsw
fistps
stos
sub
xchg
pop
mov
push
sub
jecxz
adc
fstps
xchg
int3
mov
push
mov
add
daa
xlat
lcall
dec
jl
jbe
rcr
xor
daa
jg
rcr
jns
fs
test
jnp
xchg
cmc
dec
and
or
sbb
xchg
bnd
push
pop
xor
or
jg
les
jg
push
jbe
fwait
call
popl
ror
insl
xor
ds
insb
out
pop
cwtl
push
repnz
push
stos
dec
andl
xchg
push
pop
imul
cmp
push
iret
xchg
rorl
sbb
mov
push
sbb
lods
lock
cs
or
mov
gs
es
inc
add
mov
pop
push
pop
lahf
loop
mov
leave
pop
mov
mov
cmp
aaa
test
add
push
js
bound
int
jg
fs
add
xchg
push
jl
clc
or
fcoml
mov
push
mov
jbe
fiaddl
nop
ss
loop
insl
xchg
sbb
inc
iret
jnp
movsb
jno
cmp
push
push
pop
fwait
in
pusha
add
in
into
lods
xor
frstor
scas
sbb
imul
shlb
nop
mov
lahf
out
adc
hlt
lahf
dec
in
shrl
mov
xchg
inc
cmp
push
sub
aam
xchg
mov
mov
and
add
fwait
popa
daa
pop
ret
adc
ret
adc
mov
bound
mov
aam
sub
jae
fistl
sbb
mov
push
pop
xchg
popa
pop
mov
outsl
dec
jns
jg
jbe
pop
mov
aad
jb
xor
adc
inc
xchg
pop
clc
mov
mov
pop
adc
cld
jno
popf
inc
push
inc
les
xchg
cmp
mov
lock
pop
sbb
and
test
jecxz
or
push
movsb
add
das
push
pop
call
pop
sbb
and
adcb
inc
sub
sub
sti
inc
cmp
inc
adc
out
bound
jo
outsl
lock
clc
and
pop
js
adc
sbb
and
inc
adc
enter
fcmovu
sub
xor
mov
sub
sub
push
iret
and
sub
mov
cmpsl
mov
adc
mov
jle
stos
shlb
pop
addr16
lds
mov
and
mov
ljmp
xor
pop
fmull
sbb
stos
or
nop
mov
aas
int3
dec
mov
mov
cmp
outsl
stc
call
loope
inc
test
out
xchg
or
jne
xor
push
lcall
addr16
imul
or
xor
int3
fidivrl
sbb
movsb
inc
adc
inc
inc
dec
mov
add
mov
add
imul
mov
scas
sub
scas
sbb
push
add
inc
arpl
repnz
imul
sbb
repnz
mov
pop
sbb
mov
cmp
test
and
daa
xorb
and
mov
repnz
cwtl
add
jmp
adc
push
inc
jge
jno
std
lcall
pop
push
inc
imul
fstps
push
fnsave
push
and
loop
inc
cmpsb
loopne
jp
loopne
nop
fsts
mov
mov
stc
aad
and
in
insl
test
ja
test
in
out
cmp
sbb
test
test
in
ret
in
fwait
cmp
jecxz
movsl
jno
dec
fmull
ss
jecxz
adc
pop
andl
leave
lods
loope
xchg
sbb
xchg
loope
dec
mov
xchg
fimull
pop
cmpsl
lcall
inc
sub
test
icebp
xor
xchg
mov
mov
lret
in
mov
jno
fadd
jg
int
lods
rcrl
push
or
cs
sbb
xor
mov
fldt
inc
lds
push
movsl
inc
movsb
imul
push
fdivrp
xor
mov
mov
mov
andb
cmp
xchg
sti
hlt
mov
divb
fwait
jge
sbb
mov
xor
inc
mov
aaa
ret
cmpsl
inc
cmp
add
jnp
in
and
repz
scas
cmp
pop
jecxz
insl
std
testl
out
xor
inc
jle
popa
or
mov
pop
paddd
adc
ret
inc
push
mov
sub
pop
mov
inc
out
lock
ja
fisubrl
or
xor
inc
lret
mov
loop
sub
adc
daa
testb
lods
mov
xor
insl
xor
pop
les
mov
outsb
insb
gs
sbb
adc
pop
jno
gs
mov
mov
cmp
dec
add
push
push
and
out
enter
mov
lods
inc
jle
lret
std
push
scas
mov
out
push
lods
jge
lahf
les
cmovns
mov
adc
divb
jge
inc
or
mov
fisttpll
sbb
into
pop
cmpsb
insb
popa
sarl
enter
pushf
push
fnsave
in
aas
fildll
mov
cmp
or
xor
adc
stos
cwtl
movsb
jle
cli
jae
data16
xor
out
mov
pop
xlat
aas
mov
faddl
or
inc
sub
or
and
cld
imul
push
shl
push
push
push
push
xchg
or
xor
sbb
clc
jp
ss
or
subl
push
negl
dec
cmp
inc
xor
mov
mov
or
cmp
addr16
add
outsb
pop
incb
jns
sahf
andl
out
fdivl
jns
xchg
imul
jae
cmc
push
ss
cmpsb
sub
push
into
insl
icebp
ret
jge
mov
aam
mov
test
mov
or
pushf
dec
loope
sahf
iret
cmp
xchg
cmp
es
mov
std
nop
fcomp
scas
inc
sub
xchg
sub
shlb
subb
fdiv
outsb
mov
sbb
orl
icebp
dec
repz
sub
xchg
sub
cmp
test
jb
fsub
sbb
ds
in
in
cmpsb
adc
jno
fcompl
insl
fs
jge
dec
jmp
jnp
cs
jp
test
aam
cmpsl
shlb
or
in
pop
loop
outsb
mov
gs
xchg
sub
mov
outsb
loop
push
aam
dec
dec
pop
pop
push
movsl
lock
mov
xor
mov
cltd
es
out
fbstp
mov
and
cli
ss
inc
out
sbb
inc
sub
or
jno
inc
sbb
adc
pop
pop
ret
cmpsl
ljmp
icebp
fsts
cmp
add
jno
inc
mov
push
sbb
jb
push
xchg
add
cmpsb
sbb
pop
cld
call
adc
and
mov
out
data16
test
scas
jns
int
or
and
or
cmp
in
jns
jb
arpl
push
cmp
add
sahf
jne
dec
cld
jmp
das
shrb
out
int
ds
push
repz
outsb
js
cmp
rorb
dec
cmp
cs
push
mov
and
adc
fisubs
lcall
hlt
cmc
cmp
xor
stos
or
stos
ret
xchg
or
cltd
adc
mov
push
pop
andb
or
shl
shlb
sub
xor
mov
xor
adc
push
loop
push
inc
popa
pop
push
xor
lahf
int3
or
cwtl
xchg
pop
mov
inc
lret
sti
and
jg
adc
mov
sbb
jle
mov
enter
lcall
outsl
mov
pop
mov
addb
xchg
clc
xchg
cmp
test
test
sbb
dec
imul
clc
shlb
sbb
iret
dec
fcom
or
test
arpl
nop
loopne
push
xor
int3
jge
aas
dec
jg
mov
jb
mov
jle
jns
negb
jl
adc
in
sti
mov
sbb
xor
fstpl
shrl
add
in
fidivrl
adc
mov
imul
mov
sub
jns
or
sbb
add
mov
loope
jns
test
ja
mov
aad
push
and
xchg
sub
daa
inc
push
add
pop
push
xchg
mov
dec
dec
pop
jo
int3
repz
test
or
shrl
cwtl
out
pusha
mov
xchg
pop
ja
stos
popa
cltd
jo
rcrl
sbb
daa
cli
push
add
and
mov
loope
pusha
bound
aam
inc
insb
cwtl
arpl
lret
fildll
js
cmc
push
xchg
loope
shlb
sub
pop
and
lods
in
push
jl
sub
loope
jbe
sbb
jnp
pop
cli
mov
and
push
pop
inc
xor
push
clc
dec
stc
les
sub
add
stos
pushf
sub
push
push
xlat
insl
jno
mov
sub
addr16
call
loopne
stos
cmp
fidivs
mov
jno
outsb
xchg
mov
or
movl
hlt
ja
cmpl
mov
push
mov
fcmovne
ss
ljmp
mov
fnstsw
xchg
pop
dec
and
mov
sarb
or
push
fisubl
push
out
jp
pop
lcall
repnz
call
jmp
scas
add
pop
cmp
aam
fstpt
rolb
or
movsl
into
ja
pushf
add
popa
fs
fldcw
jle
lock
inc
dec
cli
outsl
jbe
xor
adc
out
add
pop
sahf
imul
pop
fdivs
aam
cmpsb
mov
lret
in
jle
mov
repz
adc
xor
test
or
add
xchg
test
inc
outsb
das
shr
clc
fidivs
inc
loop
movsb
mov
xlat
push
mov
dec
jg
inc
xor
xchg
mov
xor
outsb
xor
das
push
dec
xorl
sub
in
push
mov
adc
mov
xor
cmp
stos
call
and
jp
ja
imul
ret
pop
mov
jecxz
push
popf
pop
cli
aad
sbb
pop
push
dec
sub
lahf
popf
out
push
repz
idivl
dec
out
cwtl
clc
inc
aaa
es
inc
jb
dec
cmp
fwait
adc
fdivl
repnz
mov
cmp
pop
push
jnp
or
stos
fwait
int3
mov
inc
imul
ret
inc
xchg
loope
add
sbb
ja
movsb
leave
inc
lds
mov
pushf
loop
xor
iret
sahf
gs
int3
add
js
dec
stc
sub
jecxz
xlat
test
push
arpl
sbb
xchg
dec
movsb
gs
divb
adc
rcll
add
subl
mov
jo
nop
xor
sub
mov
stc
andl
sbb
push
mov
jg
mov
outsl
lahf
adc
push
jmp
stc
repnz
dec
pop
xchg
push
fsubl
xchg
sub
push
add
cmp
stos
roll
cwtl
xchg
movsb
dec
mov
xor
pop
mov
adc
movsb
les
jb
adc
mov
inc
lods
das
test
sub
sqrtps
cmp
jl
pushf
mov
mov
fisubrl
mov
daa
sbb
mov
mov
add
in
push
xchg
mov
dec
subb
ret
adc
mov
cmp
xor
mov
lahf
lcall
sub
cli
mov
into
dec
out
inc
popa
dec
cmc
ljmp
jnp
mov
jmp
mov
add
push
cmpl
jo
mov
dec
xor
push
pop
push
push
fldt
mov
sub
inc
adc
mov
loope
lods
xchg
add
addb
fldl
and
repnz
inc
ret
jo
mov
adc
fidivrs
lds
imulb
into
cmp
fisubrs
jae
pop
lret
sub
mov
mov
adc
jl
mov
incb
sub
and
rcll
mov
mov
pop
mov
sub
int3
cmc
cmpsb
enter
sub
ds
mov
inc
xor
in
push
popf
mov
ja
dec
loopne
add
mov
lock
push
cmpb
or
movsb
imul
aaa
xchg
es
ret
dec
inc
sar
loop
mov
mov
cwtl
adc
in
cmc
mov
dec
pushf
xchg
ja
pop
push
shrb
mov
and
push
adc
fbld
lock
loopne
movsl
sbb
test
mov
cmpsb
insl
sbb
adc
popw
add
pop
xor
mov
jmp
jne
repz
popa
incl
test
outsl
out
adc
or
es
jmp
std
lcall
cltd
jae
nop
stos
sbb
sub
js
ljmp
jp
insb
pusha
pop
xchg
adc
iret
jg
adc
push
out
scas
add
sbb
xchg
cwtl
mov
fstpl
andb
xchg
push
xchg
aad
call
xchg
jg
sub
pop
mov
mov
aaa
mov
jno
cwtl
subl
aad
pop
pusha
test
fnsave
int3
sbb
add
lcall
mov
test
sub
jne
mov
andl
sub
and
push
dec
fdivrs
int
mov
lret
cmp
lret
and
or
decb
incb
xchg
leave
or
rcrl
shll
cmp
sub
inc
test
mov
pop
js
push
lcall
bound
sbb
dec
mov
insl
cltd
enter
cmp
pushl
mov
popl
sbb
hlt
fisubrl
push
inc
cmp
sub
pusha
xor
fisubs
jp
add
sub
sub
mov
dec
imul
inc
iret
dec
xor
ss
mov
xchg
leave
out
sbb
aam
enter
dec
fdivr
lcall
in
and
xchg
xchg
nop
outsl
mov
int3
pop
fwait
dec
pusha
jecxz
subl
negl
inc
jle
fldcw
mov
rorl
and
sbbl
mov
ficomps
scas
movsb
push
sbb
fsubrl
aam
dec
stos
add
jecxz
das
add
lds
push
imul
lods
inc
mov
fdivrl
pop
inc
jae
jle
jo
addr16
testl
pop
mov
mov
mov
xor
movsl
mov
push
incb
xchg
add
inc
xlat
xor
decb
rolb
and
rcll
jno
add
addr16
push
test
addr16
pop
test
xor
xlat
push
mov
mov
lods
mov
shr
inc
cld
cmc
mov
cld
add
cmp
mov
xchg
addr16
in
stos
movlps
test
adc
cmp
jbe
ss
leave
jne
rcrb
cmp
testb
mov
movsl
adc
sbb
pop
cltd
push
addb
pop
mov
push
sbb
dec
les
cmp
leave
pop
sti
in
shll
imul
mov
inc
fsubs
flds
lds
xchg
xor
pushf
adc
shrl
and
icebp
push
sub
pop
lahf
jns
lods
es
cwtl
ret
cld
imul
jecxz
jg
cld
out
fsts
push
or
mov
movsb
dec
gs
popa
repz
lods
sti
mov
cmp
fildl
inc
out
test
mov
fstpt
cs
test
imulb
sub
fidivs
sahf
xor
push
or
sbb
cmp
xchg
cmp
jb
dec
shrb
out
pop
xor
mov
push
test
push
dec
mov
sbb
popf
in
popf
orb
mov
int3
cmp
jecxz
or
outsl
int3
out
test
jle
testb
loop
insb
sub
lds
orl
ret
insl
push
lea
das
inc
icebp
push
stc
mov
jp
mov
and
or
cld
jo
xorl
adc
mov
push
jo
cs
sub
sub
sub
push
lahf
cmp
out
stc
push
lods
fisubl
out
addr16
adc
jbe
fstps
fnstsw
fbstp
sub
pop
sub
add
test
aaa
shlb
mov
ds
cmp
and
sbbb
adc
repz
sbb
scas
int
or
js
inc
add
lcall
cwtl
mov
aad
fcoml
xor
inc
jbe
inc
xchg
sbb
stos
mov
in
jge
lret
mov
dec
pop
push
sbb
jno
stc
leave
addr16
lahf
push
shl
or
inc
and
test
insl
cmpsl
mov
ror
pusha
std
es
shrl
pop
cvttps2pi
mov
loop
mov
add
pop
shll
addr16
ret
xchg
or
cmpsl
push
xchg
scas
das
xchg
sbb
dec
loope
mov
je
pushf
sub
negb
pop
aaa
shlb
add
loope
icebp
test
sbb
ja
loopne
cmpsb
lods
pop
test
popa
lods
cmp
scas
xor
mov
movsl
test
jo
xchg
ss
pop
mov
icebp
lahf
xor
xchg
xchg
inc
push
or
mov
adc
dec
jp
iret
or
push
jne
dec
movsl
push
in
and
bound
ljmp
push
inc
inc
das
xchg
lds
dec
xor
mov
dec
mov
push
imul
push
test
leave
xchg
test
int3
pop
mov
ret
add
loopne
hlt
mov
dec
psubw
loop
out
lock
pop
dec
cmc
mov
jnp
and
pop
cmpsl
dec
mov
adc
or
xchg
xchg
fcompl
cld
mov
add
mov
mov
pop
aaa
push
addl
adc
enter
je
test
imulb
mov
test
popa
rcr
push
mov
xchg
mov
imul
add
divl
xor
in
loope
jae
push
sub
orl
shl
cltd
or
xchg
sub
sbb
mov
jo
in
add
vucomisd
dec
inc
mov
out
push
jae
jp
sub
lods
insl
clc
mov
inc
pushf
mov
in
mov
nop
jecxz
int
push
xchg
jae
fcoml
push
xlat
adc
or
jmp
cmpsb
imul
adc
lods
jae
mov
leave
inc
add
xor
push
jmp
std
push
xchg
int
or
pop
insb
cmc
sub
sbb
jg
outsb
xchg
sbb
sar
add
dec
movsb
std
je
popa
mov
test
mov
into
xor
add
loop
testl
mov
or
pop
imul
push
cmp
fnsave
out
addl
into
clc
ja
xchg
pusha
out
mov
loope
aas
notb
jne
insl
pop
sahf
push
or
fists
pop
jno
stos
sti
insl
ja
adc
sahf
dec
shl
repz
pop
fstl
push
imul
push
or
jo
aas
push
icebp
test
cmp
stc
jge
jb
sbb
jl
loop
punpckhwd
or
sahf
push
les
test
sbb
pushf
insl
shlb
pop
icebp
in
xchg
or
jmp
shrb
int
add
push
cmpsb
ret
popf
imul
adc
dec
push
rsm
insb
dec
push
mov
mov
and
jo
fmull
and
push
pop
lea
cmpsl
adc
adc
push
addr16
call
das
sahf
add
xchg
dec
in
xor
jo
xchg
lods
xchg
call
dec
les
out
bound
sub
and
xor
sti
das
hlt
pop
xlat
add
call
in
repnz
xor
loope
test
pop
inc
jmp
shll
aam
nop
pop
subb
jns
mov
mov
mov
cmpsb
mov
adc
popa
sahf
jnp
sbb
rorb
jge
xchg
filds
mov
fmull
xchg
and
iret
push
mov
inc
inc
dec
sub
jo
add
roll
je
lods
lock
test
mov
loope
movsb
jno
das
push
pop
shrl
cs
or
dec
mov
sbb
fs
les
mov
mov
shll
ljmp
lods
mov
push
pusha
push
pop
jge
jnp
addb
lret
or
data16
sub
out
ret
in
adcb
jno
fcom
push
xchg
pop
mov
insl
or
lret
testl
add
clc
lahf
and
mov
jo
int3
jbe
stc
cs
xor
jbe
testl
jb
jl
xchg
jge
imul
jle
test
sub
xchg
cmp
pop
stos
dec
and
sbb
loop
cmp
mov
jns
add
add
cmp
dec
xchg
or
jae
in
cwtl
cmc
dec
lret
pop
loop
cli
adc
mov
sbb
and
dec
sarb
popf
fcoml
lods
dec
sbb
xchg
cltd
jnp
add
inc
mov
clc
nop
add
fsts
lret
mov
mov
cmp
add
iret
into
mov
xor
jnp
out
stos
call
xchg
ret
inc
push
lds
pop
dec
push
mov
aad
inc
jmp
mov
nop
scas
cwtl
adc
jmp
xlat
push
cmpsl
lret
loopne
cs
push
test
mov
sar
cmp
cmp
ficomps
ffree
mov
fs
out
scas
sbb
adc
out
pushf
mov
icebp
jmp
and
cld
out
sbb
inc
mov
push
adc
mov
add
pop
dec
sbb
xor
mov
pop
cmp
and
test
mov
sbb
jge
xor
adc
pop
add
pop
cmp
mov
mov
push
xchg
mov
aas
fdivrl
xor
dec
ljmp
inc
je
xor
fmull
mov
sub
xlat
js
stos
daa
xor
and
mov
les
repnz
push
lock
xchg
lret
jbe
gs
test
rcl
sub
add
jnp
add
call
nop
outsb
dec
xchg
inc
add
int3
mov
push
pop
sahf
jbe
push
jns
cmp
loopne
aas
iret
jns
lcall
aad
fisubs
les
and
imul
loopne
movsb
ds
fdivl
mov
pushf
data16
fucomp
mov
leave
add
inc
shlb
repz
mov
mov
dec
jmp
outsb
mov
test
dec
sub
imul
stos
addb
cmpsb
das
mov
sbbl
adc
pop
jbe
cs
mov
nop
mov
mov
mov
jmp
bound
daa
xchg
xchg
jno
mov
adc
mov
rcrb
cmpsb
cmp
divb
inc
jle
sub
pushf
inc
aas
push
fisubrs
cwtl
stos
dec
mov
fsubp
mov
lret
test
or
jp
pop
mov
or
add
pop
pop
add
bound
lods
add
and
jb
std
cmp
ret
out
rorb
inc
jmp
xchg
mov
push
les
insb
xor
mov
movsb
dec
jge
in
xor
jb
aaa
dec
xor
and
pop
enter
leave
cwtl
lods
mov
stos
push
sub
out
cli
fbld
xor
ja
out
je
mov
dec
addl
mov
fmul
mov
stos
push
inc
in
xchg
idivl
or
or
and
pusha
jmp
mov
and
jge
or
xor
loop
adc
mov
cs
movsb
dec
push
add
push
mov
push
xor
and
or
movsl
add
rcrl
icebp
mov
sahf
or
adc
cmp
lea
gs
test
leave
mov
fidivs
jns
orl
js
rolw
mov
js
mov
xor
ja
jecxz
mov
sbb
sti
shl
inc
push
shlb
pop
sub
mov
mov
sbbb
mov
pop
and
insl
or
sarl
lea
mov
cld
insl
lods
sub
pop
sbb
xor
cwtl
rorl
lahf
and
push
psrlw
pop
aaa
mov
mov
out
sub
fcoms
mov
inc
not
adc
push
add
pop
pop
jo
inc
imul
test
cmp
lahf
add
shll
pop
jle
sub
xor
push
lock
sub
mov
or
lods
in
test
xchg
inc
and
imull
stos
outsl
cli
and
ret
push
adc
jb
imul
insl
hlt
cmpsb
cld
std
iret
mov
fisttps
mov
cmpb
xor
jne
clc
ljmp
stos
and
pop
mov
stc
sub
jl
bound
in
in
popf
xchg
mov
inc
sub
mov
lods
bound
aaa
cmc
mov
fcoml
data16
mov
xchg
aaa
out
jg
pop
xor
movsl
mov
sbb
loopne
jb
pushf
test
cli
orb
jp
or
mov
mov
iret
dec
sbb
imul
mov
jp
add
cmc
xor
mov
or
and
mov
out
icebp
mov
mov
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
add
imul
jmp
push
pusha
clc
push
call
add
or
adc
add
jp
leave
and
mov
iret
cmc
xchg
inc
pop
dec
jle
push
test
mov
aam
hlt
mov
inc
xlat
cs
aas
sti
aas
stos
push
in
xlat
in
loope
repnz
lcall
push
pop
mov
inc
sub
add
roll
lods
outsb
add
push
aam
xchg
pop
jecxz
outsl
icebp
dec
ljmp
xchg
push
icebp
sbb
cli
int3
cmp
sbb
hlt
mov
push
dec
loopne
scas
in
shll
bound
and
or
mov
mov
cmp
or
push
popf
xor
cmpsl
jb
xchg
fdivrl
cmpl
inc
into
add
nop
xchg
push
pop
and
push
lret
int
stos
mov
or
or
pop
leave
shl
jns
inc
out
fwait
cltd
mov
jle
fisubs
dec
adc
jne
and
cmpsl
lods
adc
or
inc
ret
or
in
lret
cmc
cli
dec
fwait
push
sub
jbe
fnstenv
jp
inc
cmp
out
dec
fisubrs
in
int3
jmp
pop
sub
enter
sti
sbb
or
xchg
sahf
cld
icebp
push
adc
inc
sarb
mov
jns
mov
xchg
rcll
dec
cmp
sub
mov
mov
imul
cmp
push
mov
cmp
ret
cmp
loopne
fisubl
ds
and
adc
inc
adc
arpl
push
stos
pop
sub
aad
enter
data16
pop
jg
jmp
or
mov
inc
xor
scas
pop
std
mov
mov
mov
push
mov
jbe
or
lahf
lods
fs
inc
lret
pop
cwtl
lods
je
sbb
xchg
shlb
sub
out
xor
loope
sub
test
pop
mov
xchg
cmp
or
mov
shl
sub
je
int3
adc
inc
outsb
mov
pop
dec
dec
inc
popa
jne
pop
push
push
call
in
addb
mov
push
sti
sub
mov
clc
aad
xchg
rorb
adc
out
in
ljmp
cmp
jp
and
aaa
xor
mov
jle
jmp
arpl
test
xor
adc
add
inc
cmpl
push
lret
je
ficoms
push
mov
mov
xchg
mov
add
int3
scas
jae
jns
or
subb
or
les
ret
pop
aam
sbb
test
cmp
fmul
movsb
push
in
fildl
enter
shl
js
add
dec
cld
jle
imul
jno
cmpsl
hlt
mov
and
xor
pusha
in
mov
push
imul
push
roll
sbb
and
pop
adc
mov
adc
aaa
add
inc
addr16
outsl
in
insb
jl
cmc
sbb
xchg
pusha
sub
andl
imul
adc
inc
iret
adc
pop
xchg
loop
jmp
xor
cltd
fstl
das
mov
xchg
and
dec
xor
insl
or
sbb
cmp
fldt
xchg
mov
push
iret
repz
mov
sub
ret
iret
lods
imul
and
pop
arpl
jg
mov
bound
pusha
iret
push
lcall
test
xchg
dec
insb
dec
xor
add
sbb
dec
imul
aaa
stos
mov
push
xchg
mov
inc
mov
xchg
pop
push
push
int3
mov
push
outsb
ret
adc
push
push
inc
push
test
pop
dec
mov
xchg
lahf
xor
popf
ds
fistps
arpl
sub
push
fwait
xor
pop
outsl
or
and
ret
out
cld
cs
out
xor
pusha
jns
xchg
imul
test
outsl
adc
pop
and
dec
pop
clc
pop
sub
gs
jbe
mov
lret
aas
mov
push
inc
pop
ret
inc
loop
sar
jns
push
push
inc
xor
sbb
out
ja
pop
and
mov
or
lds
loope
jbe
cmc
mov
in
jne
xchg
aad
in
mov
inc
pop
pop
shlb
aam
lret
stos
cmp
jg
outsb
clc
sbb
std
cmp
inc
insb
daa
sti
dec
arpl
adcl
add
push
outsl
aas
push
mov
and
mov
mov
in
dec
add
push
dec
cmp
xchg
clc
pop
fadd
jne
sub
or
lcall
mov
outsb
scas
cmp
add
cmpsb
sar
mov
pop
pop
lods
addl
in
mov
lea
addl
or
pop
leave
frstor
or
mov
jmp
push
lea
xlat
insb
jno
jg
das
jmp
xlat
js
push
xchg
dec
or
imul
mov
push
xchg
test
fimuls
lret
jnp
pusha
ror
pop
insl
adc
test
mov
sub
rorb
jae
cmpsl
inc
ja
pusha
ljmp
xlat
aam
sub
jmp
mov
xchg
cmpsl
cltd
jmp
inc
fsubs
aad
push
lahf
or
adc
stos
in
adc
xor
jle
pusha
cmpsl
jnp
cs
lods
rcr
hlt
test
movsb
das
pop
pusha
jg
aad
leave
out
fisubs
jg
xchg
lods
ss
mov
aad
lahf
inc
cli
in
lcall
ds
pop
hlt
push
jmp
cli
add
inc
imul
das
ds
call
and
mov
int3
push
push
jae
pop
jb
inc
fcmovnu
leave
and
div
jb
pop
mov
lahf
sbb
sbb
cmpsl
dec
mov
push
adc
mov
lcall
in
cmp
mov
mov
xchg
fstps
lcall
inc
push
jbe
scas
mov
decl
pop
cld
repz
rcrb
pop
adc
inc
hlt
mov
mov
mov
cmp
mov
filds
in
mov
push
fdivrl
gs
popf
add
push
jnp
out
xchg
mov
mov
xor
jp
imul
sahf
addr16
mov
xor
jg
sub
leave
mov
push
data16
adc
cmpsl
sbb
and
enter
xchg
inc
fadds
push
xchg
pop
sbb
mov
fbstp
push
cmpsl
scas
ds
cltd
in
adc
cmpsl
sbb
jnp
lea
inc
cwtl
stc
cmp
int
hlt
ds
sbb
aam
in
cmp
xchg
mov
mov
loopne
sbb
test
or
leave
je
adc
div
test
aam
push
mov
push
fdivl
ss
out
mov
inc
std
cmp
stos
adc
xor
jmp
or
mov
out
inc
out
inc
in
cmp
cld
push
mul
ss
lods
add
pop
fdivrl
jb
xchg
mov
adc
fnsave
pop
cmp
sar
stc
cmpsl
jns
push
push
xor
add
dec
mov
xchg
jmp
lret
cmp
jl
int3
dec
jmp
sbb
sbb
adc
aad
shll
movsl
repnz
mov
adc
push
pop
aas
xor
test
test
test
lds
push
lahf
test
jb
lret
mov
loope
xchg
pop
dec
fnsave
pop
inc
lods
xor
push
pop
repz
jmp
xlat
mov
sub
add
pop
cmp
movzwl
cmp
dec
sarl
or
jge
add
inc
mov
movsb
and
es
je
cmp
cmp
push
dec
jmp
xor
cmpsl
mov
and
mov
fwait
out
sbb
pop
jne
ljmp
mov
lods
outsl
mov
aad
repnz
fsts
and
test
out
sub
push
adc
inc
into
mov
mov
or
pop
push
lock
jb,pt
sbb
and
jge
arpl
mov
les
iret
xchg
stos
push
notl
xlat
fs
adc
push
xchg
mov
sti
cmpsb
mov
pop
outsl
insb
xor
pushf
mov
mov
pop
ret
push
subl
adc
cltd
xor
pusha
stos
or
insl
xor
inc
pop
sub
or
lock
xor
sub
pop
dec
sbb
jl
adc
adc
add
jnp
lahf
or
in
jb
pop
daa
jnp
mov
in
fwait
pop
jecxz
ffreep
push
xchg
rcrb
cmp
pushf
test
push
jno
push
scas
jns
pop
and
sbb
out
lods
jns
cmp
filds
cmp
jno
leave
nop
xor
add
push
nop
inc
shll
mov
or
or
push
sbb
sbb
les
jno
add
mulb
in
push
push
mov
pop
sbb
scas
ret
xchg
sbb
push
ret
jno
out
mov
xchg
test
pop
pushf
das
or
sbb
fld
insb
push
push
mov
mov
dec
and
pop
flds
cmc
jns
rcrb
fwait
cmpsb
out
sub
in
add
push
sbb
mov
fnstenv
fsubr
clc
cli
jmp
jne
jbe
nop
jo
jecxz
in
in
out
fldt
mov
das
add
inc
iret
repz
lods
aas
ljmp
sbb
inc
popa
pushf
push
add
cltd
lahf
add
call
out
inc
lret
je
xchg
xchg
into
in
or
xchg
dec
or
jo
push
js
cs
cmpsl
insb
mov
nop
mov
out
push
sub
in
testb
mov
or
in
pop
mov
xor
or
aad
adc
test
dec
insl
stc
subl
mov
inc
jo
mov
add
sub
cmpsl
subl
imul
aaa
ljmp
sbb
das
jns
and
jl
loop
test
sete
hlt
sarb
xchg
mov
imul
bound
or
pop
gs
mov
sub
insl
stos
push
sbb
jecxz
bound
mov
sbb
jl
flds
hlt
les
fs
stos
mov
cmpb
mov
xchg
and
test
pusha
inc
rol
jnp
xchg
out
cmc
push
fldl
pop
arpl
mov
jp
pop
xchg
insl
lret
adc
push
ja
dec
pop
dec
stc
mov
ret
aaa
out
fidivrl
aam
imul
rcrl
shr
cwtl
mov
fadd
clc
jge
mov
ss
enter
inc
jns
mov
xor
rorb
into
add
sbb
push
inc
cmp
lock
push
sub
add
and
add
and
jge
out
aad
cmp
das
or
mov
fiaddl
cmp
xorl
mov
out
movsb
fucom
push
iret
fimuls
idivb
sbb
or
sbb
rorl
popf
mov
xorb
repnz
es
mov
or
es
not
adc
test
imul
sbb
in
jbe
adc
sub
mov
sbbb
sbb
sbb
test
xor
gs
aas
outsb
mov
in
xor
das
je
dec
enter
stos
inc
shll
insb
adc
and
aaa
fists
mov
adc
lahf
sbb
dec
sbb
pop
xchg
push
fldl
je
mov
mov
pop
lock
scas
insb
test
mov
data16
xor
add
cmp
mov
fwait
nop
cltd
xchg
mov
xor
or
pop
cmp
out
cld
icebp
pop
repnz
xchg
cmp
clc
outsb
mov
mov
jnp
or
fbstp
in
mov
out
ret
stc
mov
mov
mov
roll
sub
ja
dec
fcom
in
inc
lea
dec
or
add
lods
and
add
mov
orb
adc
es
mov
nop
jg
inc
adc
mov
jae
test
adc
sub
mov
cmpsl
sbb
xchg
xor
sbbl
and
stos
sbb
ss
pop
push
mov
jmp
stos
xchg
push
push
scas
in
loope
aam
jae
pop
adc
das
adc
ror
add
loop
stos
hlt
dec
in
imul
cmp
inc
cli
faddl
les
xchg
enter
cmc
add
test
repnz
dec
das
xchg
popf
mov
popa
sub
cld
scas
scas
ret
xor
sub
lods
and
mov
cmc
testb
fs
les
cmp
jns
push
mov
mov
jg
cld
mov
mov
cmp
sub
jne
mov
test
jae
sub
or
stos
xlat
sub
enter
ret
xor
pop
test
sti
lcall
test
or
incl
inc
in
icebp
rcrl
ds
jle
push
jp
jge
or
fwait
cmpsl
test
jp
xchg
in
mov
xor
or
sbb
pop
jcxz
dec
push
and
dec
mov
or
inc
pop
aas
loopne
imul
dec
test
mov
xor
xor
pop
jecxz
push
arpl
sbb
ret
in
roll
jb
mov
fwait
lea
pop
adc
adc
pop
hlt
mov
or
cmp
sbb
add
or
or
mov
daa
add
mov
or
dec
add
mov
daa
xor
test
mov
sysexit
in
sub
jp
mov
scas
repnz
pop
xchg
pop
nop
xor
rolb
mov
lret
or
and
cmp
sbbl
push
aas
cmp
aaa
mov
loop
jnp
std
mov
xor
pop
pop
xchg
icebp
bound
add
lock
push
xchg
in
sbb
adc
mov
jecxz
or
and
stos
or
jno
popl
xchg
jle
dec
nop
xchg
or
mov
cmpsl
test
sub
into
cltd
mov
loop
mov
jg
jno
in
and
adc
push
push
lods
push
mov
in
scas
inc
aam
add
and
out
cmpsb
cmp
imul
adc
mov
faddp
lea
cmc
dec
loope
add
jle
movsl
inc
inc
jo
into
cld
in
repnz
shll
or
xchg
shll
das
xchg
mov
mov
pusha
pop
mov
push
leave
loope
pop
pop
jle
ret
test
stos
pop
aas
xchg
jmp
rcl
mov
fcmovne
mov
ret
jno
mov
xor
xchg
nop
inc
xor
ret
jbe
push
fprem
lea
sarl
push
mov
xor
inc
fmuls
dec
lret
or
inc
add
mov
and
lods
imul
add
xchg
mov
fisubrl
pop
ds
inc
fscale
pop
dec
mov
xchg
push
clc
pop
loopne
push
andb
sbb
ret
and
mov
xchg
mov
jmp
and
in
or
shl
xchg
jo
fs
ds
movsl
out
xchg
inc
cltd
mov
dec
cmp
or
adc
sbb
roll
jnp
cmc
mov
mov
in
push
aas
push
aaa
lahf
or
pusha
cltd
adc
xchg
loopne
mov
cmp
push
ja
add
mov
mov
sub
adc
fisubrs
std
data16
lret
cs
inc
add
stc
pop
sbb
sbb
sbb
ret
hlt
push
push
fstpl
imul
or
or
ret
and
sub
pop
push
popf
ja
add
add
dec
mov
xchg
fstp
testl
mov
xchg
pop
pop
or
jae
jecxz
pop
xchg
inc
pop
movsb
dec
dec
pop
cmc
jbe
jno
movsb
je
cmp
inc
je
sub
inc
fnstsw
shll
jp
inc
test
push
dec
add
xor
inc
push
cmp
popa
daa
pusha
scas
inc
scas
arpl
aas
stc
adc
jecxz
cmp
adc
mov
and
sbb
dec
clc
orl
testb
and
mov
ficomps
loopne
pop
mov
leave
sarb
fxtract
cld
sub
or
xchg
cmp
mov
pop
mov
pop
repnz
fdivrp
lret
or
loope
fisubl
mov
sbb
push
cmp
add
jmp
pop
leave
int
popf
enter
fucom
fucomi
xchg
adc
mov
sub
pop
xchg
push
push
gs
insl
movsb
scas
sbb
iret
add
or
pop
dec
xchg
out
fdivl
mov
je
sti
sub
enter
adc
fwait
and
jp
repz
cs
sub
add
out
cmp
push
out
rcr
or
xor
dec
aas
push
out
imul
xor
pop
nop
das
js
movsl
rorb
cmp
push
mov
xor
daa
out
add
fcmovu
adc
pop
or
aam
add
mov
outsb
fsubrl
leave
lcall
mov
scas
mov
mov
xchg
sbbl
loop
push
jge
or
xchg
or
insl
mov
lea
or
orb
jbe
clc
dec
aaa
jmp
loopne
loop
mov
cmp
cli
cmp
xchg
mov
cmpsb
loope
adc
ds
mov
sbb
sbb
std
stos
movsb
aam
cmp
aaa
mov
pop
lcall
mov
and
adc
pop
mov
xchg
sbb
arpl
pop
divl
daa
cmp
fisttpl
adc
sarl
pop
xchg
ret
push
popf
scas
sti
imul
clc
mov
lods
or
mov
enter
out
icebp
insb
cmpsl
adc
push
in
xor
mov
push
mov
daa
lods
scas
ret
fidivrs
popa
jns
and
cmp
jmp
sahf
pop
xor
jne
xlat
xor
das
and
sub
jnp
sub
cmp
fisubrs
adc
add
out
cmpsb
inc
bound
push
lcall
inc
or
roll
sbb
ss
dec
fsubrs
and
ret
je
mov
push
fmuls
push
sub
inc
pop
das
and
add
fcompp
lea
mov
mov
movsl
adc
inc
lcall
mov
dec
mov
addr16
pushf
adc
mov
add
jl
dec
nop
in
fcomp
cmp
mov
cs
fdivr
popf
push
dec
push
daa
jno
aas
je
test
mov
iret
insl
inc
push
push
outsb
sbb
out
movsl
pop
add
scas
rcrl
outsb
sahf
sub
inc
mov
push
adc
scas
rol
jg
dec
test
jge
negb
lea
sahf
sbb
imul
dec
insl
fninit
sahf
mov
rolb
cmpsl
cmpsb
mov
lock
push
dec
in
outsl
aam
mov
sbb
jg
rolb
pop
jno
js
dec
mov
jmp
inc
mov
out
pop
mov
xor
add
mov
sbb
jae
push
and
xor
out
div
mov
lea
adc
mov
or
sub
repz
cmp
jmp
cmp
add
mov
add
xchg
mov
lods
mov
dec
mov
mov
inc
in
mov
mov
mov
scas
hlt
lret
dec
adc
inc
add
mov
sbb
push
mov
fsubrs
cmp
fcomp
fistl
lods
ret
sahf
out
add
adc
iret
xorb
add
sub
dec
out
mov
enter
sub
ds
mov
xchg
jae
xchg
and
jo
es
add
fiadds
call
popa
cmp
xor
scas
lods
popf
and
or
xor
aas
ljmp
rcll
lods
inc
dec
xchg
sahf
cmp
icebp
faddl
cmp
cli
fwait
pop
mov
cmp
sub
arpl
lods
repz
std
mov
push
outsl
add
aaa
in
btr
lods
xchg
les
sub
push
popf
push
outsb
or
mov
fadd
dec
mov
ret
aaa
loop
inc
xchg
icebp
roll
scas
fcoms
repz
das
in
mov
das
cs
inc
mov
and
shll
sti
repnz
jne
xor
xor
mov
mov
cltd
mov
lea
gs
mov
sarl
sbb
pop
xchg
aaa
xor
lret
fbstp
mov
or
pop
lods
lea
shll
mov
push
mov
sbb
enter
imul
cmpsl
pop
aas
push
movsb
repnz
add
in
push
imul
mov
shrl
imul
xchg
jge
stos
sbb
or
inc
push
repnz
test
lods
lods
icebp
sbb
lahf
test
clc
xlat
pusha
sbb
daa
fwait
jns
loop,pt
dec
scas
std
cmp
daa
stc
push
mov
popf
cmpsb
cmp
arpl
and
or
mov
push
lret
pop
pop
jae
xchg
daa
dec
mov
mov
adcl
xor
mov
mov
adc
imul
cmp
sub
and
fwait
loop
jg
xchg
lcall
ret
inc
arpl
jb
lock
mov
and
cltd
xchg
pop
xchg
and
cs
fildll
dec
stos
cmp
repnz
ljmp
imul
jns
scas
shll
hlt
inc
lds
jg
repz
imul
repz
stc
push
mov
addr16
fstp
xchg
adcb
and
sbb
cmp
fstp
pop
sbbb
aaa
add
mov
sbb
inc
dec
mov
in
in
sbb
mov
loopne
mov
xchg
std
mov
fistps
lahf
or
rorl
xor
cwtl
adc
inc
inc
inc
imul
push
cli
xchg
loope
xchg
xor
dec
es
fistps
xlat
adc
loop
xchg
or
shrb
and
and
and
enter
or
sub
ja
out
mov
test
xor
mov
outsl
ret
xchg
outsl
or
push
sub
stc
cmp
inc
sub
adc
dec
ret
addr16
call
adc
mov
pop
jae
xor
test
cwtl
call
scas
aas
or
divl
mov
into
sarb
scas
call
or
lcall
outsb
dec
dec
lfs
outsl
nop
ljmp
cltd
in
adc
js
insb
adc
adc
add
test
and
loopne
insb
sar
cmpsb
mov
mov
leave
ja
lods
xchg
outsb
cld
mov
imul
aas
popf
stc
jae
sahf
les
insb
dec
inc
inc
mov
pushf
sbb
xchg
push
mov
loop
pop
cs
int3
sub
testb
push
lds
sub
mov
inc
ljmp
add
sub
pop
jns
xchg
repnz
or
ficompl
repnz
fstpl
sbb
lea
mov
lcall
popf
outsl
cmpsl
ss
mov
push
sbb
addr16
subb
sbb
cmp
mov
jbe
adcb
add
or
das
or
push
inc
jno
cltd
xor
and
sbb
js
cmc
or
adc
mov
jo
or
inc
pop
xor
push
test
and
dec
push
mov
add
outsb
xchg
xchg
inc
xor
fwait
mov
lret
repnz
clc
in
lahf
add
jo
add
cmp
popa
and
inc
jmp
xchg
inc
dec
int
and
or
mov
loop
push
std
fldenv
mov
and
cmp
xor
jmp
push
movsb
mov
mov
movsl
mov
repnz
aam
sarl
daa
xorb
stc
repz
sub
aaa
jp
mov
rcrb
subb
fldcw
lea
adc
mov
out
mov
xchg
or
ret
dec
pop
push
pusha
repnz
mov
jno
movsb
mov
les
push
push
jns
sub
es
sub
mov
fsubp
or
jmp
mov
pop
adc
rcll
loope
ja
in
loop
xchg
mov
dec
popa
adc
mov
jge
sbb
dec
sbb
imull
push
and
jl
imul
mov
or
push
and
jae
stos
inc
gs
or
jg
push
dec
mov
or
out
jp
mov
repnz
inc
cmp
outsl
push
pusha
aam
adc
jnp
popa
fildll
loope
call
lods
dec
jbe
cmp
popa
iret
mov
dec
fistpll
cmc
cltd
aad
jne
jg
add
sti
jle
push
popa
out
cmp
mov
add
in
sub
mov
sbb
sbb
aad
insl
dec
in
sub
and
scas
or
pop
in
xchg
out
mov
xchg
insb
xchg
dec
orb
imul
cmpsl
push
sub
sub
and
inc
mov
icebp
jge
fcoms
jns
add
and
add
sbb
jg
je
iret
out
jl
stos
outsl
shrl
push
cmp
xchg
lret
or
das
insb
dec
pop
lods
in
fadds
inc
arpl
cmp
add
mov
in
cmpsl
ljmp
pop
inc
sub
jbe
fsubrl
movsb
jp
in
mov
lret
fisubrl
daa
sub
daa
scas
cwtl
inc
cmpsl
cwtl
xor
or
lret
in
jmp
xchg
divb
insb
push
in
dec
hlt
cmp
jecxz
pop
imul
imul
icebp
clc
adc
lds
pop
pop
cli
lods
sbb
and
fwait
push
test
js
stos
pop
insb
xchg
sub
movsl
stos
stc
jno
push
imul
add
lock
sbb
xchg
stc
inc
insl
pop
lds
in
stos
lock
sbb
jo
xor
adc
or
mov
int
xlat
lea
push
fisttpll
push
lock
or
ret
leave
incb
int3
cmp
dec
imulb
adc
cmp
into
cmc
test
fstpl
fdivp
push
aad
into
cli
out
stos
sbb
sbb
insl
gs
popa
inc
jne
jle
sub
mov
add
xor
shrl
cmpsb
mov
sbb
sub
scas
hlt
jecxz
and
rcrl
jl
and
push
mov
and
inc
std
dec
sbb
rorl
ror
bound
lods
jno
stc
inc
repz
out
xor
mov
mov
or
or
push
mov
xchg
stos
int3
fstpl
cltd
mov
ja
ljmp
adc
shr
push
js
pushf
fidivs
cld
mov
in
adc
sti
adc
mov
xor
or
dec
scas
int3
or
mov
mov
cmp
decl
jns
xchg
fisubs
test
subb
mov
loope
ret
daa
mov
dec
pop
adc
ss
aad
inc
and
sub
sub
ljmp
and
cmp
add
cltd
out
in
loopne
push
outsl
pop
arpl
leave
inc
ret
clc
cmp
add
push
jns,pt
es
ds
mov
int
inc
inc
fistps
fst
scas
sub
iret
loopne
dec
fimuls
inc
dec
outsb
mov
add
dec
pop
in
jecxz
enter
cmp
add
adc
cmpsb
mov
rorl
sbb
sbb
xchg
lahf
jo
and
fcomps
int3
movsb
pop
dec
fidivrl
dec
scas
add
gs
jle
ret
mov
hlt
and
mov
xor
cmp
aas
cmpsl
mov
addr16
mov
mov
jb
cmp
jmp
jl
ret
inc
clc
or
xor
je
inc
hlt
dec
cltd
sbb
add
movsl
cmp
xchg
addr16
cmp
pushf
fucomip
mov
fmuls
rcrb
inc
leave
xchg
lds
mov
cmp
jno
sbb
pop
inc
cmp
push
push
push
and
cmp
daa
pop
sub
dec
pushf
je
int
jae,pt
xchg
jnp
mov
clc
test
pop
push
jne
inc
loop
in
fwait
aaa
sarl
dec
test
les
out
jnp
xchg
cld
lret
xchg
daa
rorb
lods
xchg
in
mov
flds
or
leave
imul
out
xor
jbe
jnp
dec
jno
rcrb
lret
adc
cmp
int3
cld
xor
xchg
test
xor
jne
push
mov
sti
shlb
arpl
mov
jo
mov
cmp
cli
inc
js
cmc
xchg
popf
xchg
leave
imul
inc
push
or
mov
stc
das
pop
cs
cmpsb
add
jne
mov
in
pop
dec
pop
cld
in
and
xchg
mov
loopne
mov
cmp
or
mov
dec
mov
mov
xor
cmp
mov
cmp
mov
mov
push
jecxz
icebp
mov
dec
adc
add
dec
dec
inc
testl
add
aam
sub
mov
mov
out
aad
cmp
mov
rcll
lods
sub
dec
inc
mov
mov
inc
or
push
sub
cmp
test
int
orl
andl
lahf
pop
lods
flds
mov
xchg
ja
aam
inc
das
sub
cmp
shr
jae
pop
mov
cmp
bnd
aas
jns
pop
ljmp
xchg
pop
add
dec
test
pop
ds
outsl
cmp
rorb
out
sbb
in
jb
push
cmc
js
hlt
xor
jno
push
push
fisttpl
shrl
fs
pop
test
inc
ret
jo
jmp
dec
mov
adc
dec
jae
das
sti
test
adc
icebp
xorl
std
imul
and
adc
daa
ficoml
imul
shl
dec
pop
in
into
int3
sub
cmp
fisttpl
inc
dec
clc
inc
push
ret
hlt
jle
xchg
mov
cmp
xchg
scas
addr16
push
mov
shufps
fistl
push
push
js,pt
je
inc
xchg
fsubp
add
push
stc
cld
mov
or
cmc
cvttps2pi
outsb
jl
loopne
inc
mov
mov
aam
cmc
jp
ret
sarl
popf
dec
inc
xchg
leave
dec
test
add
outsl
pop
es
cmp
inc
popa
mov
mov
inc
imul
jle
pop
cmpsl
in
cld
int
inc
jno
or
pop
mov
ret
xchg
movsl
pop
xorb
out
loopne
fistpl
pusha
iret
jo
inc
adc
gs
or
mov
mov
mov
add
or
mov
mov
mov
add
xor
mov
mov
mov
add
and
mov
mov
mov
lea
mov
mov
mov
sub
add
mov
mov
xor
add
jne
mov
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
add
imul
mov
mov
mov
add
or
mov
mov
mov
add
xor
mov
mov
mov
add
and
mov
mov
mov
lea
mov
mov
mov
sub
add
mov
mov
xor
add
jne
mov
mov
jmp
nop
testb
add
out
pop
mov
jp
pop
jp
fst
and
xor
and
push
cmpsl
cmp
or
jne
in
outsl
movsb
push
mov
sbb
cmp
sub
cmp
adc
push
sub
sub
mov
arpl
mov
out
repz
push
or
dec
gs
dec
out
fdivs
ss
push
out
js
push
inc
repz
cmpsl
inc
cmp
lea
xor
rolb
popa
mov
into
xor
adc
xchg
scas
outsl
and
dec
pop
jne
jle
mov
dec
icebp
ret
sbb
cmp
and
adc
in
mov
adc
in
xchg
push
test
pop
shll
jo
in
adc
xchg
aam
cwtl
leave
movsl
pusha
or
insl
mul
call
fstl
xor
or
cmpsl
fdivrl
stc
jl
pop
and
ljmp
roll
push
xor
add
rep
icebp
mov
movsb
cli
out
ret
lret
sbb
add
or
mov
fcmovu
in
cs
cmc
rclb
aam
scas
fmuls
or
hlt
cltd
cmp
popf
xor
aam
xor
mov
test
mov
das
gs
insb
loopne
sub
ret
mov
mov
dec
popa
rolb
popf
dec
push
xchg
cmpsl
arpl
rcrl
mov
dec
mov
stos
xchg
or
push
rcll
cltd
test
fdiv
adc
bound
sbb
fdivl
ljmp
mov
dec
jmp
rclb
loopne
sub
pop
in
mov
cmpsb
jg
mov
xchg
xor
mov
data16
inc
pop
mov
rclb
btc
jne
lods
ljmp
pushf
xchg
aam
add
push
test
adc
add
ljmp
adc
sub
imul
push
loop
add
jb
add
inc
shlb
cltd
es
xor
push
mov
cmpsl
std
inc
cmpsl
jnp
mov
outsb
lcall
lret
xchg
cltd
xchg
stos
int
cmpl
and
mov
lods
or
xchg
repnz
mov
inc
jl
adc
mov
mov
jbe
insb
jb
gs
lods
mov
lcall
pop
cmc
inc
add
mov
leave
andl
fmuls
arpl
pop
xor
mov
or
mov
adcl
mov
testl
adc
aad
lcall
idivl
xor
xor
mov
gs
fadds
in
and
das
dec
lock
fs
filds
jne
pop
inc
cmp
aaa
pop
pop
push
jo
rorl
aad
and
and
cwtl
ret
mov
lock
and
in
imul
popf
imul
mov
in
push
stos
cwtl
lret
adcl
mov
and
xor
ss
nop
lcall
cmpsl
add
mov
xor
je
sub
mov
cmp
xor
jle
outsb
repnz
outsl
out
test
push
sbb
scas
int
andb
fwait
and
lahf
call
es
cmp
pop
jmp
push
xchg
fists
or
adc
mov
pop
mov
mov
ficomps
out
cmc
mov
cmp
mov
mov
xchg
sbb
sbb
xchg
mov
mov
mov
or
pop
pop
cmp
pop
arpl
pop
cld
mov
test
scas
add
mov
dec
adc
pushf
jecxz
xor
cmpsb
cmpsb
or
mov
enter
mov
mov
in
pop
addr16
dec
lock
xchg
ss
dec
sub
dec
sub
int
jns
pop
adc
mov
xchg
pop
pop
in
lods
xchg
push
ljmp
dec
in
jecxz
sar
pop
mov
push
fadds
adc
test
fsubl
rcrl
into
stos
xor
mov
outsl
test
ja
xchg
or
inc
sti
jle
gs
es
push
adcb
data16
das
pop
sahf
mov
int3
push
nop
loopne
out
int3
mov
pop
inc
mov
mov
dec
xchg
bound
xlat
jle
push
notb
fidivs
cld
insl
iret
lcall
adc
test
jl
js
ret
shll
and
add
and
sbb
shll
popf
or
xchg
in
dec
mov
cmc
jbe
test
cmp
sub
mov
pop
jo
popa
or
incb
cmpsb
outsl
fcmovnb
add
cwtl
xchg
sti
pop
dec
ret
ja
sub
lahf
gs
push
ds
ss
in
inc
roll
cltd
ret
jnp
cmp
xlat
dec
dec
xor
test
rolb
dec
js
stos
cmp
mov
in
jmp
xchg
add
orb
out
pop
enter
jp
test
int
xchg
mov
int
jne,pt
stc
or
int3
leave
or
mov
push
push
xor
stos
and
sub
fcoml
xor
mov
inc
test
repnz
subl
shlb
add
cmp
mov
jne
repz
mov
mov
test
mov
negb
xchg
pop
outsl
fnstsw
cs
xor
jne
ss
xchg
nop
stc
loop
movsl
ss
sarb
into
into
mov
pop
pop
and
insl
add
xor
insb
cli
mov
repnz
add
cltd
sbb
imul
js
push
push
fisubrs
orl
xorl
jno
mov
push
loopne
or
aad
xor
or
lock
movsb
rcll
mov
sub
push
data16
adc
movsb
daa
les
and
mov
imul
aam
and
mov
mov
mov
mov
pop
aas
pop
inc
inc
pop
jmp
xor
or
jb
mov
pop
push
cmp
xor
fwait
sti
and
ds
pop
repnz
jl
jae
ret
dec
push
xlat
sbb
cltd
arpl
cmp
jle
lret
adc
nop
jle
inc
jns
jle
inc
add
cs
jp
and
xor
dec
jbe
sub
lahf
rorl
loop
mov
push
pop
mov
jge
dec
leave
or
pop
or
add
fsincos
mov
xorb
les
push
inc
mov
cltd
xchg
mov
das
out
cmc
mov
fstpt
mov
sub
cmpsb
iret
hlt
sub
pusha
lcall
jl
std
xchg
out
inc
lret
mov
xchg
addr16
mov
cwtl
mov
pop
mov
loope
movsb
xchg
ret
jg
mov
out
add
jle
adc
sbb
jl
cmp
popa
scas
push
pop
pop
mov
clc
push
cmpsb
mov
adc
adc
rcrl
cmp
mov
sbb
inc
data16
outsl
xor
push
sbb
xor
xchg
mov
inc
dec
mov
nop
xchg
sub
int
dec
in
lea
xor
sbb
mov
sub
mov
xor
icebp
sub
sbb
or
imul
sub
sbb
push
movsb
enter
mov
cltd
fidivl
inc
and
and
in
push
xchg
mov
inc
jmp
sub
shlb
or
loope
outsb
pop
jb
sub
or
scas
fmuls
movsl
adcb
adc
lds
out
xor
jne
lds
into
mov
lock
push
xor
cwtl
lods
push
adc
and
sbb
mov
and
cmp
repnz
pop
ret
sbb
ljmp
sub
add
or
xchg
xchg
jle
jbe
ja
stos
push
fildl
lcall
sbb
popa
mov
jns
mov
push
cmc
xorl
xchg
inc
dec
les
jae
icebp
push
stos
pushf
shll
mov
fwait
cmp
out
adc
rcl
fistl
mov
inc
push
sbb
and
jmp
mov
or
imul
movsl
aas
cmp
push
add
flds
sub
pushf
fbld
fs
test
mov
cmp
jle
fsubs
xchg
jmp
mov
push
cmpb
pop
ljmp
fs
mov
jnp
sub
xchg
int
xlat
and
test
or
pop
in
rolb
pop
outsb
fcomi
jecxz
outsb
dec
or
js
sub
lds
rol
jo
scas
outsl
adc
insl
jg
rcrl
sub
dec
repnz
bnd
push
sub
div
test
and
rcll
sbb
xor
and
leave
add
pop
out
pop
out
add
int3
fidivrs
nop
bound
leave
rorb
adcb
jnp
pop
sbb
int
sub
sbb
lea
adc
mov
adc
fdiv
sub
cmp
stos
ret
repz
aaa
daa
dec
loope
jns
dec
aad
sub
push
jnp
jae
jecxz
aaa
dec
ret
shr
push
fwait
out
xchg
adc
jo
jns
inc
xchg
or
sbb
jg
fisubs
and
sbb
iret
leave
xchg
shlb
mov
push
cmp
adc
aad
mov
sbbl
xchg
les
arpl
mov
sbb
xchg
adc
loopne
mov
lea
add
sbb
mov
cmp
std
scas
out
mov
ffree
cmpsb
push
or
mov
icebp
rorb
outsl
sti
insb
fmuls
aas
rcr
dec
imul
out
seta
and
and
and
cmpsl
xor
jp
addr16
fstpl
and
jb
scas
mov
mov
imul
inc
push
inc
dec
test
sti
insb
and
adc
inc
dec
xlat
icebp
data16
pop
push
subl
adc
test
fstpt
outsl
mov
aaa
push
jl
pop
pop
lret
jp
loop
cltd
pop
repnz
mov
mov
out
stc
mov
mov
dec
push
sbb
test
enterw
test
out
pusha
out
mov
shl
xlat
insl
mov
sub
mov
shrl
lcall
mov
loopne
sbb
mov
daa
mov
xlat
in
jne
icebp
jp
push
xor
jmp
ret
sbb
push
mov
out
lret
cmp
adc
sbb
mov
cmp
sti
mov
lcall
scas
and
sahf
mov
mov
adcb
decl
in
lret
and
aam
sti
inc
mov
dec
or
outsl
inc
dec
or
orb
and
movsl
stos
jg
mov
inc
loopne
push
xlat
dec
push
popa
stos
scas
or
mov
cmc
mov
or
xor
mov
stos
sbb
clc
push
mov
xchg
filds
stos
sub
adc
xlat
scas
or
fdivp
adc
cwtl
and
mov
or
fnstcw
adc
jo
xor
lods
sub
pop
cld
jnp
dec
enter
and
movsb
in
pop
in
test
adc
mov
adc
jp
int3
xchg
outsl
scas
dec
repz
nop
in
leave
js
add
jb
addr16
outsl
add
je
mov
fdivl
sub
or
clc
jns
push
in
add
jno
adc
mov
sub
jnp
xor
fisttpll
and
sbb
aaa
push
inc
push
jp
and
sbb
xchg
inc
xlat
push
nop
xchg
popa
shlb
jl
inc
pop
bound
aam
cs
mov
mov
sub
mov
int
aad
lods
xor
pusha
frstor
adc
adc
in
dec
mov
push
es
je
xchg
adc
cli
icebp
test
mov
xchg
sarl
adc
sar
mov
jns
hlt
aam
mov
mov
dec
jmp
inc
orl
mov
sub
dec
rorb
jg
xchg
dec
pop
adc
sub
cmp
out
jecxz
fwait
jmp
mov
fisttpl
add
mov
mov
mov
push
jge
push
pop
jl
cld
frstor
and
aas
push
xchg
nop
add
sbb
mov
inc
cwtl
clc
dec
stos
rolb
jns
std
out
dec
jp
jecxz
stos
lret
lea
imul
popf
js
data16
mov
or
or
pushf
neg
mov
cmp
mov
mov
bound
mov
push
or
mov
adc
mov
push
data16
sbb
xchg
loop
jge
test
push
pop
test
xor
pop
mov
cmp
cmp
push
jnp
lcall
add
pusha
and
stos
mov
mov
shll
mov
scas
or
outsl
movsb
adc
mov
and
xor
je
pushf
mov
add
mov
bound
cmc
jl
fstp
les
sbb
lahf
hlt
or
lds
shll
jg
dec
xchg
inc
imul
sbbb
xor
mov
sbb
mov
mov
insl
dec
jbe
arpl
repnz
jbe
xchg
mov
pop
inc
xor
pop
jl
bound
cmp
xor
dec
lock
jp
sub
sub
mov
ds
and
mov
jmp
add
add
pop
sbb
mov
icebp
stos
popl
sub
mov
sub
lods
stc
stos
insb
add
jnp
adc
push
sahf
xlat
ret
cmc
adc
test
jge
fwait
repnz
ja
xchg
cmpl
inc
cwtl
inc
jp
mov
stos
scas
cmp
dec
cmp
repnz
push
imul
adc
addr16
lock
pop
mov
mov
adc
in
rorl
fisubrs
adc
cmp
iret
adc
cmc
sarb
in
addb
sti
mov
sahf
sub
cmp
xchg
mov
loopne
fstps
or
mov
mov
mov
or
mov
push
fiadds
xor
pop
test
pop
dec
or
cmpsb
push
adc
out
push
sub
sub
rorl
or
sbb
mov
fadds
mov
outsb
xchg
pushf
or
mov
dec
cld
mov
pop
fcoms
outsl
or
and
sbb
cli
or
inc
push
push
adc
cmpsb
add
ret
inc
jmp
fmull
insl
cmp
inc
and
push
xchg
mov
in
add
int
insb
repnz
pop
jb
cmp
outsb
or
pop
mov
jg
dec
xchg
sub
std
dec
jle
jno
pop
xor
and
popf
push
jp
xchg
aam
movsl
fidivrl
das
cld
jae
outsb
out
xor
mov
inc
jecxz
inc
xchg
xchg
out
divl
cld
call
fdivrl
or
pop
stos
scas
dec
repnz
es
orb
bound
xor
dec
jmp
mov
mov
pop
setg
push
push
adc
fisttpll
dec
push
sub
push
dec
dec
cmc
sub
mov
clc
adc
jmp
pop
and
mov
mov
sti
inc
push
inc
xor
test
and
lret
push
sub
xorl
aas
mov
js
mov
sub
dec
add
push
data16
daa
push
add
lret
popa
insb
pop
xor
loop
out
or
rcr
ljmp
in
cs
cmp
popa
fistpll
cmp
and
xor
scas
iret
xchg
mov
dec
pop
and
repnz
imul
jb
xor
lahf
push
mov
push
adc
xchg
adc
sbb
mov
out
sub
cmp
mov
cmp
sbb
mov
xchg
mov
enter
mov
lret
jb
adc
js
dec
gs
enter
pop
push
daa
push
or
lds
xor
mov
adc
xor
bound
leave
outsb
mov
das
idivb
dec
jae
jo
pop
xor
jl
pop
fisttps
out
mov
or
xchg
insb
push
lcall
test
sbb
and
push
mov
sahf
mov
fiaddl
loopne
xor
das
das
out
push
nop
mov
enter
insb
sti
call
test
popf
push
fistpl
xlat
mov
inc
xor
sahf
inc
in
fidivrl
gs
inc
xchg
adcb
sbb
jmp
jge
arpl
and
fadds
jecxz
bound
loop
repz
jl
and
bound
loopne
cld
dec
lds
mov
jp
cli
mov
vmovaps
jl
nop
imul
cmp
mov
js
adc
push
cmp
push
pop
push
aaa
mov
push
mov
mov
xor
jmp
cmp
push
sub
in
cltd
inc
test
and
bound
into
lahf
or
in
test
fs
mov
outsb
or
ja
lock
rcrb
jnp
pop
loope
jge
fisubs
mov
xchg
sub
and
lock
sub
adc
iret
xchg
lcall
lods
mov
cwtl
lods
mov
or
jo
mov
outsl
pushf
push
ret
cmp
inc
icebp
xchg
jle
push
ds
and
mov
and
sbb
sarb
out
jne
push
jecxz
pop
push
jno
mov
leave
imulb
mov
lock
xchg
ds
add
imul
mov
and
mov
leave
xchg
fcmovnbe
adc
ss
ja
mov
sbb
dec
mov
push
push
adc
popa
mov
adc
dec
push
mov
clc
bnd
test
fisttpl
scas
pop
or
lods
xchg
icebp
sti
scas
test
pusha
adc
and
sarl
jb
stos
fs
arpl
lds
jb
adc
movsb
rorb
mov
loopne
popa
adc
call
stc
into
dec
or
add
xchg
in
lahf
outsl
pop
jbe
iret
mov
mov
inc
in
daa
rclb
xlat
out
and
xchg
xchg
jecxz
and
outsl
ja
arpl
fwait
sbb
mov
inc
fnstsw
int
in
pop
push
loop
in
sub
lcall
repz
cmp
pushf
sbb
jecxz
and
jnp
jae
pop
sub
shl
adc
ret
mov
cmp
loopne
inc
test
sbb
push
adc
mov
pop
adc
mov
mov
mov
orb
clc
out
mov
adc
ret
cmp
pop
pusha
jge
cmc
jecxz
inc
dec
into
sub
stos
cmp
dec
cmp
data16
test
mov
xchg
push
xchg
stc
jno
call
ds
fnstenv
sahf
rcrl
and
hlt
mov
xor
and
lock
stc
out
mov
xchg
jb
rcll
int
sub
mov
jns
sub
into
inc
mov
scas
test
lds
jbe
mov
cld
movl
popl
add
les
aad
push
cmp
movsb
mov
xchg
add
repz
adc
jge
and
and
test
mov
fcoms
mov
in
je
gs
xchg
lret
testb
xchg
add
loop
or
jns
or
ss
fisttps
add
sbb
adc
mov
cmp
dec
adc
push
sub
push
xchg
dec
adc
imul
pop
mov
sub
js
push
aam
leave
mov
hlt
xchg
push
addl
into
adc
xchg
nop
test
out
inc
popa
test
or
mov
and
fdivrl
xchg
xlat
and
pop
dec
dec
in
leave
cmpsb
mov
ficoms
mov
fadd
add
xchg
jmp
movsb
rclb
inc
push
cmpsb
push
pop
xchg
call
push
aas
cmpsl
mov
jmp
or
lahf
lock
lret
jb
imul
adc
lret
in
xor
sbb
jne
imul
pop
flds
xchg
mov
fcomps
inc
cmpsb
nop
imul
dec
mov
pop
mov
push
out
imulb
out
xchg
mov
inc
mov
add
inc
or
adc
ficompl
mov
cmp
jp
mov
xchg
or
or
cmp
clc
pop
rol
popa
xor
push
mov
cltd
shrb
or
pop
pop
out
hlt
fsubs
das
adc
inc
dec
mov
xchg
mov
and
int
mov
mov
into
cmpsl
xchg
inc
mov
test
xchg
push
lret
mov
jne
mov
out
test
je
pop
and
clc
xor
mov
mov
jno
cmp
mov
nop
cmp
mov
test
jl
cmpl
xor
pop
cwtl
aas
arpl
pop
xchg
add
fcom
jns
sub
mov
inc
xor
mov
enter
mov
ja
jo
push
jb
test
dec
mov
jno
hlt
dec
xchg
mov
and
jg
mov
jns
pop
divb
adc
shll
lahf
pushf
adc
test
popf
filds
in
mov
out
cli
clc
hlt
inc
xchg
jl
pop
mov
scas
jmp
jp
cmpl
cmp
hlt
xor
xchg
add
push
test
loope
pop
jnp
hlt
pop
sti
sbbl
pop
push
andl
ficoml
dec
ret
int3
jo
cld
cmp
std
aad
subl
xor
adc
pop
jp
insb
jle
out
cmc
daa
mov
lret
mov
xor
addr16
jns
ret
scas
test
inc
pushl
xchg
mov
dec
inc
fistpl
inc
xor
aad
dec
fs
mov
iret
jnp
jns
or
and
mov
push
adc
je
sbb
jne
jle
imul
int
fs
mov
out
push
aaa
mov
mov
pop
cmpsl
mov
lret
outsb
es
stos
push
mov
xrelease
insl
mov
mov
push
pushf
push
insl
sahf
cmc
pop
pushf
jl
jo
cmpsl
aas
inc
faddl
movsl
adc
jne
packsswb
sbb
mov
pop
jbe
inc
cmp
das
dec
adc
sbb
push
rol
or
inc
push
cld
outsl
pusha
jno
xchg
cmp
dec
or
fcoms
ret
push
iret
mov
or
cmp
ss
in
sbbl
jg
fsts
jnp
and
int3
pop
mov
pusha
xchg
fwait
popf
jo
push
add
pop
pop
cwtl
adc
push
cltd
enter
mov
mov
scas
jo
sbb
sbb
jl
loope
mov
inc
pop
addr16
and
xor
dec
imul
jp
sub
dec
mov
lcall
push
lret
xchg
mov
sbb
sbb
sarl
movsl
cmp
and
repnz
jae
adc
mull
pusha
jp
insb
cld
js
xchg
add
in
adc
sub
sbb
aas
lret
ret
ss
cmp
jnp
sbb
mov
adc
cmp
inc
pop
push
dec
push
enter
sbbl
jl
cmp
movsb
outsb
mov
cmc
js
cld
dec
lahf
decb
dec
or
mov
pop
mov
addr16
xchg
dec
push
repz
cmp
pop
dec
and
push
ja
adc
and
adc
xlat
insb
adc
xchg
fstps
ds
outsl
jge
mov
out
mov
pushf
pop
add
mov
pop
pop
movsl
fs
jo
and
mulb
lods
lods
cmp
cmp
das
adc
xlat
pop
les
sbb
test
xor
hlt
xchg
jg
mov
lods
fistl
lock
fwait
lock
leave
jl
add
stos
sbb
xlat
dec
pop
cltd
jg
cmp
push
mov
mov
divl
and
call
subb
jmp
cld
ja
jg
imul
mov
inc
out
push
xorl
ds
bound
mov
mov
cmp
adc
dec
enter
dec
sbb
mov
push
ds
cmp
inc
js
rclb
cli
push
repnz
sub
outsl
les
addr16
lea
push
aam
dec
push
push
jnp
adc
fiadds
cmp
pop
and
cli
push
mov
push
jae
jno
dec
sub
icebp
push
idivl
in
mov
mov
imul
mov
lods
sbb
imul
inc
daa
xchg
aad
and
out
fisubrs
jp
mov
xchg
cltd
and
or
mov
sbb
cwtl
or
rclb
dec
mov
repnz
iret
jns
icebp
xlat
rcll
icebp
lds
ss
out
loop
sahf
sbb
divb
add
or
dec
aas
sti
push
xor
insb
loop
mov
add
and
jno
pop
xor
aas
loop
add
pushf
push
out
imul
cmp
mov
popf
mov
fldenv
jnp
addr16
jno
cmc
fs
iret
adc
dec
sbb
sub
js
or
call
rcrl
dec
add
jle
xchg
ljmp
jge
push
push
inc
xchg
fisttps
shll
xchg
test
jle,pn
mov
imull
imul
icebp
adc
and
cmpsb
jo
mov
lea
out
notl
xchg
daa
add
push
xor
shll
mov
shll
ja
out
xchg
push
inc
mov
cs
popa
enter
imul
and
mov
pop
lcall
push
mov
adc
hlt
out
dec
mov
in
shll
addr16
add
sub
pop
pop
inc
push
pop
mov
sbb
or
or
pop
jbe
enter
sbb
dec
in
lret
pop
add
scas
cltd
mov
fwait
in
das
bound
popa
cmpl
xchg
push
add
stc
adcb
clc
outsb
enter
sahf
fcomip
test
xchg
jb
clc
cmp
sbb
mov
jnp
outsl
add
sbb
jmp
mov
rep
fwait
mov
mov
jno
xchg
outsb
shr
pop
aas
jne
test
mov
addl
stos
xor
dec
mov
sbb
xchg
mov
fcmovnbe
push
fsubr
sbb
test
bnd
pushf
rclb
inc
and
cs
pop
imull
loope
jnp
lock
push
out
pushf
cmp
mov
ds
es
sbb
jg
jbe
cld
xchg
stos
jbe
jle
xchg
xor
xor
mov
jne
inc
sbb
xor
xchg
mov
lret
push
mov
cltd
sti
dec
adc
cmp
out
cmp
sbb
lret
lods
mov
mov
xor
jecxz
ret
ret
jo
mov
loopne
lret
cmp
aas
or
test
outsl
sub
idivl
hlt
xchg
xchg
sub
pop
cmp
sti
fimuls
inc
cmp
and
pop
jno
sbb
pop
mov
push
xor
sbb
stos
cmc
ds
jno
out
aam
icebp
fs
iret
hlt
jecxz
mov
pop
add
cmp
cmp
pop
sbb
pushf
xlat
in
push
jae
imul
dec
add
adc
insl
add
int
ret
jb
cmp
rcrb
fsubl
inc
std
lret
outsl
mov
sub
out
insb
lods
xor
pop
popa
and
jno
test
into
imul
loop
push
cmp
or
xor
out
std
ja
in
push
sub
dec
dec
jae
outsl
add
arpl
sub
push
cmp
mov
out
adc
cmp
out
mov
lods
gs
inc
into
pop
inc
xlat
xchg
es
aaa
scas
inc
fstpt
and
adc
mov
mov
ja
adc
jae
adcb
out
and
sub
add
cmp
nop
sti
jmp
subl
jns
mov
jp
or
push
jne
jmp
insb
leave
cmp
inc
push
inc
xchg
pop
iret
cmpl
sub
fwait
dec
mov
pop
jmp
out
ljmp
xchg
negl
lods
movsb
mov
pushf
cli
pop
and
ret
jmp
aam
js
popa
mov
stos
mov
jl
pop
push
test
fsubrs
enter
lcall
hlt
mov
inc
aaa
jno
mov
dec
mov
jb
mov
cs
dec
mov
sub
lcall
or
pop
pop
aaa
ds
fsubl
sub
das
adc
fcoml
stos
call
test
adc
nop
or
and
jne
mov
scas
popf
or
xchg
jno
dec
outsb
mov
jae
or
jbe
dec
inc
lahf
jge
push
mov
lcall
jl
rorb
cmpsb
inc
mov
pop
mov
lcall
subb
int3
stos
pop
enter
stos
jle
adc
inc
mov
sub
fisubrs
es
pop
dec
jg
fwait
imul
cmp
xchg
xor
cmpsl
stos
and
ret
jns
repz
inc
sub
imul
pop
les
jl
xchg
mov
and
cmc
xchg
ja
xor
ss
mov
test
pop
dec
scas
ja
sbb
xchg
sar
jge
push
rep
stc
lock
ljmp
cmp
sub
je
xchg
lods
insl
sub
mov
in
mov
cwtl
mov
sub
mov
pop
inc
xchg
add
or
push
icebp
int3
jmp
or
push
std
lcall
les
jo
adc
fs
pop
aad
and
lea
in
cli
jge
repz
mov
xchg
pop
lcall
cmp
xchg
movsb
mov
test
xor
mov
dec
rorl
popf
adc
out
push
add
aaa
adc
addb
mov
pusha
lods
out
push
loope
or
fs
scas
ljmp
push
fildll
adc
out
mov
pop
xchg
xchg
push
scas
sub
xor
les
mov
sbb
and
call
push
dec
and
in
test
movsb
mov
mov
push
push
in
sub
mov
xchg
mov
adc
push
adc
ja
mov
stos
jbe
in
cmpsl
repnz
or
jp
and
in
add
dec
mov
bound
lock
enter
ss
sbb
faddl
fidivl
mov
xor
repnz
imul
pop
jp
mov
inc
fistps
sbb
adc
sbb
jb
add
lock
add
jne
jmp
mov
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
add
imul
mov
mov
mov
add
or
mov
mov
mov
add
xor
mov
mov
mov
add
and
mov
mov
mov
lea
mov
mov
mov
sub
add
mov
mov
xor
add
jne
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
jmp
sub
fwait
lods
fistpl
pop
imull
dec
addr16
shr
xor
jp
pop
jp
mov
ja
and
mov
mov
xchg
das
add
sbb
jle
sbb
mov
add
or
or
dec
fisttpll
mov
das
jb
inc
jne
lcall
in
outsb
ja
sub
fsubrs
cmp
adc
lret
xchg
dec
aam
mov
mov
into
inc
ret
aad
or
in
sbb
cltd
xchg
sub
sarl
mov
xlat
orb
pavgb
dec
mov
lds
mov
jne
inc
sub
mov
outsl
shrl
add
aaa
push
loopne
jne
adc
push
outsb
mov
call
mov
xor
bound
jns
xchg
pop
or
ljmp
adc
push
pop
in
push
addb
pop
pop
cmp
leave
cmc
cmp
sub
fwait
pop
imul
test
mov
fmull
outsl
push
cmp
cli
and
and
xlat
test
stos
pushf
adc
pop
loope
or
pop
inc
xchg
andl
out
push
mov
out
sti
scas
rcrl
jge
mov
bound
mov
mov
mov
push
lcall
jecxz
mov
rep
cld
inc
stc
cli
ss
pop
int
pushf
cmp
push
jb
jge
inc
mov
mov
sbb
xchg
sbb
iret
sub
cmc
jmp
ds
mov
in
mov
jns
ljmp
push
jmp
pop
jb
unpckhps
push
xchg
dec
mov
mov
inc
movsl
sar
outsb
int
pop
insl
mov
loope
xor
mov
repz
lea
stos
push
das
push
pop
jnp
aad
lret
std
iret
daa
mov
sub
test
mov
sbb
push
fdivs
rol
pop
pop
dec
or
pop
cmp
push
fs
xor
xor
fwait
test
jne
sub
int
mov
dec
inc
dec
xlat
push
dec
popf
dec
sub
stos
dec
lds
lods
fisttpll
aaa
data16
fstl
xchg
popf
push
inc
das
scas
dec
lcall
loope
popa
outsl
dec
mov
pop
xchg
fsubs
xorb
mov
roll
jle
shl
int3
xchg
push
xor
lcall
cmp
dec
scas
mov
lds
sbb
imul
stos
xchg
mov
std
inc
adc
outsb
leave
ss
out
and
cmp
les
fisubl
imul
or
icebp
mov
xchg
imul
mov
add
imul
push
cld
iret
std
xlat
scas
mov
or
leave
icebp
in
insb
cmp
call
or
outsb
dec
adc
testl
cmpsb
ret
mov
out
scas
push
jle
inc
std
adcb
mov
fwait
mov
inc
repnz
mov
jmp
repnz
xor
or
leave
sbb
fcmove
insb
sub
pop
cmp
add
out
in
dec
push
sbb
cmp
ss
dec
repnz
fnstenv
add
inc
popf
mov
inc
nop
mov
or
sarl
jge
or
dec
mov
xlat
aam
jl
push
sub
mov
jg
push
aas
mov
imul
movsb
mov
xchg
xor
aaa
push
or
xorb
xor
aad
dec
dec
out
cltd
add
pushf
push
test
push
lret
sbb
scas
cs
enter
push
test
andl
loopne
jnp
leave
cmpsb
movsb
jb
xchg
in
in
sub
xchg
cmp
loopne
out
pop
and
icebp
ja
jo
jo
or
xor
jae
jg
lds
mov
stos
out
xor
mov
lret
push
stos
movsb
fstps
mov
dec
stc
dec
inc
xlat
iret
jb
out
repz
add
loope
xor
push
dec
mov
mov
dec
movsl
xchg
cmpsb
mov
mov
or
jl
inc
fsub
rcrb
mov
dec
sbb
sub
and
int3
movsb
sbb
push
scas
pop
das
pop
lea
mov
mov
pop
cwtl
pop
pop
dec
scas
in
loope
push
adc
stos
in
pop
push
hlt
popf
in
rolb
in
subb
mov
fimull
hlt
fldenv
mov
jg
mov
mov
pop
stos
fstpt
dec
les
jg
lea
jecxz
dec
in
std
jne
and
mov
imul
inc
stc
arpl
mov
into
dec
mov
rol
cmp
xchg
test
jmp
push
pop
roll
das
sub
sbb
sub
xor
mov
cmp
iret
enter
jne
pop
mov
dec
mov
push
js
pop
xor
mov
lahf
test
mov
ret
inc
bnd
mov
iret
dec
lret
dec
xchg
sub
add
mov
mov
cmpb
sti
pop
pop
stos
pop
push
jp
sub
and
jg
cwtl
or
jg
loopne
icebp
cmp
insl
or
mov
aaa
pop
insb
aad
push
pop
sbbb
enter
push
push
movsb
sub
push
fnstsw
ja,pn
pop
mov
jge
mov
xor
mov
or
lea
je
hlt
mov
push
jl
inc
jnp
imul
bound
jl
or
pop
js
push
hlt
inc
mov
xlat
xchg
cmpsl
aas
cmp
sahf
iret
xchg
pop
test
je
fistpl
jp
out
dec
mov
rol
pusha
xchg
cs
push
popa
mov
push
mov
pushf
or
dec
in
sub
or
lods
jle
popf
movb
jp
fwait
loop
lods
xlat
test
inc
call
push
cltd
outsl
push
mov
das
adc
inc
aaa
jb
sub
call
jmp
mov
or
cmpsb
jge
das
lret
jbe
scas
clc
lahf
ficomps
imul
sub
pop
repz
mov
test
sti
lret
pop
jno
lahf
hlt
or
dec
inc
cmp
imul
leave
push
repnz
jne
cmpsb
into
jne
aas
fcom
pop
pop
mov
jge
or
push
push
xor
xchg
dec
mov
or
or
xor
add
jne
jo
test
jmp
push
cli
sub
aas
xor
or
lahf
and
xchg
icebp
sub
out
mov
add
mov
cmp
cmp
sbb
pop
sub
mov
in
push
and
pop
add
pop
inc
xchg
stc
add
out
fisubrs
es
and
mov
rcl
pop
lods
mov
dec
pop
stos
ss
les
and
call
in
inc
jne
into
push
xor
ss
mov
outsb
mov
test
pusha
xchg
mov
int
iret
aam
push
js
xor
dec
fdivr
sbb
mov
push
bound
popl
in
mov
xchg
sub
dec
and
lock
add
ds
lea
pusha
shll
ficompl
dec
ljmp
cmp
add
inc
out
push
mov
ja
lds
xchg
inc
xchg
aad
sub
movsl
and
clc
mov
nop
sahf
cmp
xor
dec
lock
sbb
ja
popf
sarb
jmp
std
dec
dec
pushf
mov
arpl
jnp
jecxz
addb
loopne
xor
in
mov
and
or
rcl
jo
fildll
ret
dec
cwtl
xor
adc
lret
mulb
sbb
mov
fwait
dec
imul
fnstcw
adc
adc
outsl
xchg
sbb
adc
mov
mov
jge
and
out
xchg
rcl
mov
or
cmpb
fs
test
lret
insl
mov
mov
nop
scas
xchg
aad
jle
cltd
inc
mov
xor
out
pop
in
or
adc
das
mov
cmpb
jp
imul
cmpsb
outsb
add
mov
in
orb
inc
push
mov
inc
pop
cli
mov
inc
xor
mov
pop
cmc
es
and
push
sahf
fstpl
lds
dec
rorb
mov
jle
dec
mov
sbb
aaa
add
aas
cmpb
pop
shlb
test
jl
mov
cs
mov
insl
std
sbb
or
xchg
adc
repnz
insb
sbb
xor
rcrl
out
fcomps
push
out
incl
dec
stc
jp
jg
les
and
push
int3
in
sbb
scas
rclb
sub
popf
xchg
adc
fldcw
mov
dec
xchg
test
cmp
in
int
lods
xor
insb
mov
mov
sub
dec
lret
ret
cmp
aas
lcall
sbb
daa
cmpsb
inc
jbe
lret
cmp
xchg
pop
cmpl
cmp
jbe
push
mov
pop
aas
sub
xchg
or
lret
mov
in
mov
in
sub
cmp
mov
subl
mov
int3
psllq
jecxz
inc
scas
out
xor
es
stos
inc
mov
sub
lea
dec
sub
jmp
mov
dec
sbb
loopne
xchg
andb
add
insb
mov
push
jns
stc
or
fucomp
out
adc
lods
sub
lea
mov
xchg
mov
cmc
repnz
sbb
push
mov
xlat
pop
aam
jge
and
mov
adcl
lock
pop
pop
adc
mov
dec
cld
add
pop
int3
in
lea
test
inc
scas
inc
sbb
mov
subl
into
sti
mov
lret
rclb
add
sub
outsl
push
pop
xchg
lock
lret
dec
shlb
mov
imul
pop
dec
sarl
je
pop
lods
jge
adc
and
popf
mov
cmpsb
cwtl
sahf
test
jo
ret
or
push
outsl
mov
push
cmp
jnp
mov
add
cld
cmp
aad
cld
mov
fcmovu
inc
fsubs
cmp
sub
dec
sub
insb
pop
xor
cwtl
jae
jp
imul
cmp
mov
popf
das
test
and
sub
add
cmp
mov
pop
xchg
loopne
sbb
and
ret
add
cmp
ret
ficomps
mov
add
add
mov
mov
test
mov
shlb
cltd
dec
and
and
aaa
decb
cltd
pushf
lahf
aas
in
adc
clc
test
xchg
inc
jne
sub
cmp
fnstsw
daa
xchg
inc
mov
mov
sub
mov
popa
sub
inc
add
into
in
sub
fwait
jns
jnp
push
fdivl
mov
test
mov
arpl
mov
inc
mov
test
inc
inc
pop
icebp
mov
fcoms
ja
add
add
mov
push
mov
pop
std
out
xor
push
out
sub
xchg
xor
jp
xchg
loopne
shr
stc
xor
mov
lret
repnz
sub
sub
fwait
ds
sub
pop
icebp
out
out
inc
das
out
xor
xchg
popf
sbb
cld
movsl
int
push
adc
jp
jae
pop
cmpsl
imul
loopne
sub
hlt
fstpl
xchg
cmp
shlb
mov
lea
add
hlt
mov
and
in
mov
pushf
mov
inc
insl
aad
ret
mov
scas
and
std
bound
mov
cmpsb
xchg
sbb
inc
push
xlat
push
mov
cmp
xchg
add
xchg
xchg
lahf
ss
mov
outsb
sbb
lds
xchg
dec
dec
movsl
rcrb
sub
jns
out
mov
dec
test
add
fbld
lea
add
dec
cmp
mov
and
push
mov
lcall
shll
mov
in
dec
cmpsb
popa
jge
xor
daa
nop
inc
xchg
inc
mov
arpl
imul
daa
dec
mov
fildll
sub
cmc
jno
sub
sub
cld
pop
cmpsl
adc
mov
testb
fisttpll
lods
loopne
lret
mov
pop
enter
or
sahf
lahf
cmp
pusha
xchg
inc
stc
mov
lahf
repz
popf
add
pop
in
sbb
push
jns
mov
lret
add
fdivrs
out
cmp
sbb
shll
cmp
insb
mov
push
xchg
fstp
out
outsl
mov
fs
push
jbe
mov
stos
sbbl
pop
in
inc
and
xor
sbb
push
test
pusha
sub
lock
and
daa
cmp
or
sub
mov
test
sub
xchg
inc
mov
sbb
je
out
mov
out
cmp
dec
mov
jg
lret
out
icebp
add
mov
enter
imul
out
or
dec
stos
dec
or
mov
sbb
inc
cmpsl
sahf
xchg
xchg
lock
into
rcrl
test
gs
mov
aam
cmp
jno
sbb
ds
sbb
int
mov
mov
inc
repnz
jno
xchg
sub
jo
xchg
add
sub
adcb
cld
jp
adc
in
xor
cltd
loopne
ret
out
dec
pop
test
pop
add
mov
xor
sbb
or
shlb
leave
inc
andnps
add
in
fdivl
mov
out
into
push
enter
lock
fiadds
in
and
cli
mov
clc
pop
fidivrl
mov
mov
fimuls
lret
sbb
cld
mov
sub
insl
or
pop
ja
adc
xor
sub
mov
in
mov
xchg
sbb
mov
xlat
popf
inc
imul
scas
sub
xchg
out
test
int
cmp
sbbl
fstpl
push
mov
lds
cs
popf
cmp
lea
sub
loope
push
lock
cmp
test
imul
pushf
lret
xchg
icebp
cli
cltd
test
adc
mov
sbb
xchg
pop
in
and
jp
jnp
xchg
push
cmp
lods
inc
sub
push
xchg
cmp
cmp
cmp
dec
dec
fisttpl
mov
ja
mov
jb
jb
cmp
pusha
pop
ret
fwait
pop
jge
jne
cmpsb
enter
test
daa
inc
les
add
rcll
mov
add
dec
sysexit
ret
out
push
push
or
ret
fstps
mov
mov
lcall
stos
fcmovu
sub
insl
ret
lods
xchg
out
jae
cmp
and
inc
pop
pop
out
lock
xchg
cmc
cmp
or
data16
ficomps
push
xchg
and
daa
adc
cmp
test
pop
push
or
cwtl
push
arpl
xchg
shll
gs
jae
or
aam
call
fiadds
mov
adc
mov
and
lds
xchg
xorb
mov
mov
dec
and
dec
aaa
call
xor
insl
add
es
sub
repnz
sbb
cmpsl
cltd
clc
lds
sub
or
xor
cwtl
pop
imul
arpl
mov
xchg
lds
sbb
add
cwtd
lret
loopne
call
in
sahf
pop
push
movsb
or
or
pop
std
enter
mov
xchg
push
add
jae
inc
into
jl
jl
or
fcomp
iret
cmp
loope
mov
fistl
push
lds
xchg
sub
pop
je
sub
fisttpll
hlt
cmp
or
leave
push
mov
adc
leave
and
out
mov
mov
or
inc
frstor
loopne
pop
out
pop
scas
notrack
mov
mov
pop
mov
xchg
imul
inc
jb
and
pop
add
scas
sub
add
mov
lock
fcmovb
xlat
pop
jnp
shll
lock
mov
mov
pop
adcb
and
fisttpl
push
mov
sahf
stos
xchg
dec
mov
add
out
ljmp
popa
out
nop
adc
adcb
cmpsb
adc
fwait
jo
test
mov
mov
notl
in
aad
push
mov
mov
loop
xchg
mov
mov
and
mov
lock
mov
inc
push
pop
dec
xchg
popf
or
push
xor
arpl
mov
xchg
push
imul
das
pop
call
inc
adc
push
push
scas
ljmp
stos
jmp
rcrl
hlt
std
lods
flds
cmc
rcrl
lret
in
jp
pop
insl
out
sti
pop
mov
sbb
std
arpl
xchg
pop
sbb
jp
xor
fsts
scas
pop
je
sub
aam
mov
int
in
mov
dec
cmp
sub
fdivrp
cs
pop
xchg
ret
adc
fs
cmpsl
out
rcll
call
lds
mov
push
test
push
and
into
inc
adc
xchg
mov
test
mov
jmp
dec
ds
std
inc
out
inc
sbb
jecxz
mov
mov
adc
stc
int
mov
sbb
fidivrs
and
fadd
mov
fildll
out
sti
jbe
shlb
testb
dec
pop
ret
and
jge
xor
mov
arpl
es
xchg
movsl
sbb
pop
pop
pop
shlb
mov
sub
subl
jns
inc
sbb
mov
jcxz
loopne
int
push
rep
ja
xchg
push
fidivs
std
out
sub
mov
lret
out
stos
xchg
cmpsb
cmp
popl
cwtl
mov
mov
mov
mov
jns
cwtl
scas
dec
std
inc
cmpb
adc
xchg
push
xchg
push
xchg
mov
sti
and
fisubrl
enter
in
idivl
xor
cmc
xor
fcoml
lretw
cmpb
jmp
std
sbb
sub
mov
pusha
inc
jo
pop
lret
out
ljmp
fimull
sub
xor
cmpsb
rol
jo
shr
cmp
ret
sub
lock
vpunpckhbw
mov
cld
fists
push
ret
and
daa
sub
outsl
inc
test
dec
inc
icebp
or
aam
loopne
pop
mov
sbb
add
xchg
lea
ret
jge
inc
sub
adc
bound
adc
mov
mov
ret
fldcw
test
push
pop
adc
cmp
or
call
jno
jle
pop
lods
jno
mov
test
xchg
pop
pop
outsb
xchg
ljmp
add
push
fidivl
cs
xor
mov
add
adc
mov
ljmp
push
jle
mov
push
dec
push
cmpsb
roll
testl
or
pop
dec
nop
pop
inc
xchg
push
icebp
cmpsl
mov
out
sub
out
pop
bound
lods
xor
push
popa
mov
sbb
mov
cmp
bound
or
lcall
fisttps
jno
mov
ljmp
cmpsb
imul
shlb
fdivp
dec
test
jmp
cltd
dec
in
sbb
xchg
cwtl
adc
shrb
push
popf
xor
dec
scas
or
es
or
add
pop
mov
jbe
and
add
je
pop
mov
push
inc
dec
not
popf
add
fcmove
or
insb
mov
mov
push
flds
das
je
jl
orl
mov
mov
xor
dec
and
mov
and
cs
sbb
jl
or
call
rorb
and
jno
test
mov
lds
jmp
cmpsl
pop
cli
in
clc
aas
mov
jge
sbb
pop
jg
push
pushf
jne
and
pop
and
rorl
mov
outsl
outsb
mov
les
sbb
stc
rclb
add
jno
push
rol
paddusb
stos
jp
push
xor
pop
xchg
push
jge
mov
dec
scas
pop
sarl
mov
out
je
lds
stos
jmp
fmuls
pop
jne
outsb
outsb
mov
es
inc
xor
popf
or
fstpt
stos
in
cs
test
push
add
insb
movl
mov
popa
mov
pushf
ret
jmp
fdivr
mov
xor
sub
xchg
sbb
clc
pushf
push
cmp
hlt
in
lahf
pop
out
idiv
dec
mov
ljmp
inc
add
mov
lods
add
add
adc
jmp
xchg
add
leave
add
or
mov
sbb
or
push
loope
mov
jmp
mov
gs
testl
inc
aaa
and
dec
test
clc
popa
cmp
dec
inc
cmpb
outsb
addr16
mov
push
push
repz
std
mov
xor
ss
xor
mov
imul
jbe
sub
ss
pusha
outsl
inc
movsl
in
adc
mov
mov
and
outsb
cmpb
clc
adc
mov
fstl
push
insb
mov
jno
outsl
dec
jo
jae
xchg
inc
jnp
mov
in
mov
stos
lods
scas
lods
jbe
ret
push
fsubrs
mov
loope
pop
inc
mov
aad
xchg
in
push
adc
adc
add
dec
insb
xchg
pop
or
add
fisttps
ljmp
hlt
push
mov
cmp
or
sti
cmpl
sbb
dec
std
jne
out
repz
movsb
mov
xchg
repnz
push
adc
jno
pop
mov
xchg
flds
xor
int
pop
jge
jne
fdiv
xor
pop
movsb
inc
cld
in
add
jg
cld
xchg
std
xor
push
iret
call
insb
or
xlat
cmp
or
mov
leave
inc
cli
fisttpll
push
sbb
add
sbb
cmpsb
mov
push
cmp
xlat
paddd
xor
mov
aas
mov
jno
in
push
mov
pusha
clc
adc
aad
dec
push
mov
sbb
loopne
or
test
pushf
les
sub
orl
movsb
scas
adc
mov
sub
push
push
bound
push
pop
inc
xchg
lahf
arpl
roll
lea
ljmp
fdivl
or
inc
repnz
aas
popa
inc
xchg
jns
es
mov
imul
pop
enter
mov
mov
cmp
stc
adc
mov
xorl
mov
test
cwtl
hlt
cmp
mov
fistps
mov
icebp
test
in
into
pop
jmp
lds
cmp
and
jno
arpl
test
adc
sti
mov
and
cmp
jns
cwtl
loopne
add
mov
jle
pop
push
cld
imul
mov
popf
in
push
or
aas
aad
jge
push
mov
xchg
xchg
inc
xlat
mov
adc
test
cmp
daa
mov
mulb
push
jo
jno
pop
mov
add
xor
in
out
in
sbb
lcall
mov
in
cmp
cmpsb
outsb
mov
pop
into
fwait
ret
cltd
sbb
inc
jnp
sub
sub
or
cmp
hlt
fs
in
mov
add
cwtl
and
sbb
pop
jecxz
pop
inc
ret
ss
gs
and
repz
push
arpl
cmpsb
shll
sub
jbe
outsb
movsl
xor
fimull
dec
adc
bound
mov
daa
ds
ss
sub
lahf
pop
sarl
leave
lds
sbb
cmp
scas
jae
out
mov
repz
dec
push
int3
popa
and
cmova
mov
gs
cs
inc
pop
xor
xlat
daa
jo
sub
sbb
and
mov
dec
sub
or
sbb
or
ljmp
int
fwait
cli
lds
xorl
sbb
xor
cmc
mov
mov
mov
test
arpl
push
nop
ficomps
push
cld
jno
mov
mulb
push
cli
jb
or
mov
push
aas
fistpll
or
hlt
and
sbb
out
inc
push
inc
popfw
out
or
orps
adc
std
jne
leave
mov
mov
xor
mov
mov
inc
xchg
rep
xchg
enter
and
scas
adc
dec
add
cmp
inc
fwait
push
movsl
jbe
popf
xchg
dec
dec
inc
push
std
dec
adc
and
nop
and
jo
inc
dec
lods
notl
mov
sbb
jmp
add
xchg
pop
fbld
cmp
push
xchg
dec
pop
sti
aam
push
cld
pop
mov
movsb
xchg
sbbb
fstps
ljmp
adc
or
cli
out
fldt
inc
repnz
dec
in
mov
dec
data16
mov
push
jno
fwait
lret
out
lods
sub
scas
test
xor
mov
stos
sahf
sti
push
xchg
add
xor
pop
and
aad
mov
push
sti
fmuls
jae
inc
mov
lock
cmpsl
vandps
jnp
mov
rcrb
sub
clc
and
je
push
arpl
fstpt
xor
lret
imul
mov
fs
data16
decb
xchg
xor
bnd
popf
insl
pop
out
jecxz
jp
jp
xor
vpermq
dec
fnstcw
xchg
pop
xchg
jbe
pop
mov
test
loope
lock
stc
es
test
call
out
aaa
mov
ret
enter
push
dec
mov
pusha
leave
mov
test
arpl
dec
movsl
fnstenv
sub
jmp
jle
xor
fisubrl
pop
mov
inc
mov
xchg
loopne
mov
out
stos
jns
rorb
xchg
sub
cmp
je
repz
sub
add
xchg
das
mov
bound
ja
xchg
add
mov
mov
cmpsb
fsts
sbb
cmp
mov
mov
sbb
xor
scas
mov
ss
sbb
mov
and
pop
cs
xor
loop
xor
push
outsb
jp
popa
rolb
dec
stos
dec
cmp
lret
cwtl
stos
sarl
mov
shl
js
sbb
ficoms
dec
push
xor
pop
sub
insl
add
cltd
mov
dec
scas
test
clc
pop
push
mov
sbb
xlat
and
in
jg
jl
pop
and
fsubrl
mov
sub
lds
adc
mov
mov
xchg
pop
icebp
mov
jb
std
jne
mov
adc
jne
cmpsl
stos
ja
js
push
jmp
inc
jbe
cmpsb
adc
sbb
iret
xchg
stos
pop
add
adc
imul
sti
dec
mov
add
pop
dec
test
jl
dec
sbb
pop
ljmp
insb
add
sti
daa
mov
sahf
pop
mov
add
push
dec
add
daa
jp
test
out
pusha
pextrw
pop
sub
ja
inc
iret
clc
push
inc
loop
or
outsl
in
call
push
and
shr
mov
pop
aaa
pop
lock
mov
mov
int
inc
fcmovbe
jmp
or
ss
sbb
xchg
pop
cmp
mov
notl
fcmove
bound
jle
imul
out
movsl
int
cli
scas
orb
pop
ja
popf
sbb
rcrl
mov
push
jge
or
sub
dec
cld
neg
aas
jae
xor
mov
or
pop
test
incb
inc
imul
push
int
push
in
mov
std
cwtl
xchg
aas
inc
hlt
pop
mov
ds
repnz
andl
cs
lea
sbb
orb
push
cmp
enter
in
int3
sbb
mov
ror
push
imul
repnz
push
movsb
mov
repnz
inc
mov
dec
lock
mov
loope
loope
mov
add
lock
stos
mov
jg
mov
xchg
push
mov
mov
inc
xchg
pop
push
daa
jo
sbb
cmc
movsb
insb
mov
daa
gs
icebp
bound
push
pushf
mov
sub
out
rolb
or
imul
repz
pop
xor
dec
in
mov
in
arpl
xchg
nop
xor
addr16
xor
pushf
cwtl
mov
sbb
movsl
add
or
fisubl
sbb
jb
add
lahf
pop
fisttps
fnsave
xor
sub
ja
sbb
repz
popf
dec
sti
xor
cltd
jmp
mov
or
xchg
mov
cmpsl
clc
sbb
xor
or
mov
sbb
outsb
inc
incb
inc
sahf
data16
sbb
aaa
inc
or
xchg
test
cmc
pop
pop
daa
popa
test
mov
in
inc
es
jg
lds
mov
outsb
mov
lods
xlat
scas
cmp
hlt
dec
sub
scas
add
movsl
xor
or
loope
scas
mov
movsl
pop
push
mov
aas
fstpt
ret
out
cs
jno
pop
adc
pusha
ret
jp
lret
pop
into
mov
add
lea
mov
adc
add
jle
and
or
repz
fsubrs
jae
fwait
cmc
push
sub
cmc
jmp
mov
mov
decb
aam
aam
fidivs
bound
iret
mov
pop
xlat
add
push
and
xchg
xchg
sub
mov
loopne
push
or
mov
cs
dec
add
xchg
daa
push
nop
jp
add
cli
pop
push
push
imul
hlt
adc
sub
mov
and
cmp
stc
mov
dec
fldenv
push
lret
imul
cmp
mov
rcll
dec
or
pop
test
xchg
popf
sub
xchg
mov
fndisi(8087
or
push
mov
xchg
and
cmpsl
out
dec
xorb
fisttpll
and
and
dec
call
sbb
imul
movsb
jg
pop
imulb
int
dec
hlt
sti
mov
gs
jae
add
cld
jle
daa
push
sbb
out
leave
push
sti
xchg
outsl
jmp
int3
and
lods
fstpt
add
jg
push
mov
icebp
push
add
fnsave
pop
fistpll
cs
call
push
int
mov
into
sbb
xor
bound
fsub
push
addr16
int3
pop
mov
mov
rep
push
jmp
mov
cmp
cwtl
pop
push
xor
dec
jnp
hlt
dec
adc
int
notl
mov
dec
xchg
pop
incl
add
scas
lret
test
dec
or
add
lret
lods
mov
mov
add
xor
mov
mov
mov
add
and
mov
mov
mov
lea
mov
mov
mov
sub
add
mov
mov
xor
add
jne
mov
xor
mov
add
mov
pop
pop
pop
leave
ret
add
inc
add
mov
inc
add
mov
inc
add
mov
inc
add
rolb
add
inc
add
rolb
or
inc
add
rolb
adc
inc
add
rolb
sbb
inc
scas
pop
nop
dec
add
add
add
add
cmp
lods
add
mov
add
add
inc
add
nop
inc
add
inc
add
nop
inc
add
inc
add
nop
inc
add
inc
add
nop
inc
add
inc
add
nop
inc
add
mov
add
inc
add
mov
add
inc
add
mov
add
inc
add
mov
add
inc
add
rolb
rolb
rolb
rolb
rolb
rolb
rolb
rolb
add
add
add
add
inc
push
dec
call
adc
inc
lret
cmpsb
mov
add
add
pop
inc
jne
jb
outsb
je
popa
je
pop
dec
outsl
imul
insb
imul
dec
gs
mov
sub
push
push
mov
xchg
mov
mov
cmp
jne
mov
cmp
jne
mov
mov
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
push
movb
xor
movb
xor
mov
lea
movzbl
xor
add
inc
mov
cmp
jb
xor
lea
movzbl
xor
add
inc
mov
cmp
jb
xor
lea
movzbl
xor
add
inc
mov
cmp
jb
lea
mov
mov
mov
mov
mov
cmp
jne
mov
movl
mov
mov
mov
mov
cmp
jne
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
lea
mov
mov
mov
lea
mov
add
mov
lea
mov
mov
mov
dec
mov
mov
mov
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
lea
push
mov
movl
movl
lea
pop
mov
xor
sub
mov
inc
dec
jne
lea
mov
lea
push
mov
xor
add
push
mov
add
push
mov
mov
movl
pushl
mov
call
mov
xor
add
mov
cmp
jne
mov
or
mov
add
mov
mov
mov
mov
mov
mov
mov
lea
mov
add
mov
lea
mov
add
mov
lea
mov
mov
mov
mov
lea
mov
mov
mov
mov
add
mov
mov
add
mov
lea
mov
add
mov
mov
mov
mov
movzwl
xor
add
xor
mov
mov
movzwl
xor
add
xor
mov
xor
mov
mov
mov
lea
lea
movl
mov
call
mov
lea
push
mov
xor
add
push
lea
push
pushl
mov
call
mov
lea
lea
mov
call
mov
lea
push
mov
xor
add
push
lea
push
pushl
mov
call
mov
pushl
pushl
pushl
pushl
pushl
pushl
pushl
call
test
je
add
pushl
lea
call
mov
mov
mov
xor
add
mov
jne
mov
mov
pushl
mov
call
jmp
mov
mov
add
pop
pop
pop
leave
ret
push
push
push
push
mov
mov
add
push
cld
mov
add
push
mov
lods
xchg
push
mov
or
shl
not
push
mov
or
shl
not
push
add
mov
sub
sub
inc
push
push
push
push
push
push
sub
push
or
mov
shl
lea
mov
shr
rep
push
pop
call
loop
lea
lea
mov
mov
sub
and
mov
mov
call
jne
mov
and
shl
sub
neg
shr
pop
add
pop
lea
shl
cmp
pop
lea
push
push
mov
push
mov
jb
mov
sub
movzbl
mov
shl
mov
and
add
lea
call
mov
shr
and
cmp
mov
jne
cmp
jb
jmp
mov
call
inc
inc
sub
sub
cmp
jb
pop
inc
cmp
dec
mov
jb
inc
cmp
dec
mov
dec
jb
mov
dec
sub
push
jmp
mov
dec
call
jne
pop
pop
pop
pop
pop
pop
pushl
push
push
mov
mov
jmp
mov
dec
call
jne
mov
dec
call
jne
pop
cmp
mov
jb
mov
push
mov
sub
cmp
jb
lods
mov
stos
jmp
mov
call
mov
je
mov
call
mov
je
mov
mov
mov
mov
mov
mov
mov
mov
pop
pop
pop
mov
mov
add
push
push
cmp
mov
jb
add
push
mov
call
jne
mov
mov
shl
sub
push
pop
lea
jmp
mov
add
call
jne
mov
mov
shl
push
pop
push
pop
lea
jmp
mov
add
push
pop
mov
mov
sub
inc
mov
call
mov
sub
jb
add
cmpl
jae
addl
mov
cmp
jb
push
pop
mov
shl
sub
inc
push
pop
lea
mov
call
mov
sub
jb
mov
mov
cmp
jb
mov
andl
shr
orl
dec
cmp
jae
mov
sub
mov
shlb
add
shl
add
mov
jmp
sub
call
shr
shll
cmp
jb
incl
sub
dec
jne
mov
add
mov
shll
push
pop
sub
inc
mov
mov
call
test
je
or
shl
dec
jne
jmp
incl
mov
add
mov
mov
sub
cmp
ja
mov
sub
mov
lods
stos
cmp
jae
dec
jne
mov
movzbl
cmp
jb
call
sub
lea
mov
mov
sub
mov
mov
mov
sub
mov
leave
pop
pop
pop
ret
pop
pop
sub
inc
jmp
cmp
jb
ret
shl
push
mov
cmp
jae
mov
shl
lods
mov
mov
pop
ret
mov
movzbl
shl
add
add
jmp
movzbl
add
mov
lea
sub
lea
cmp
jae
mov
shll
cmp
jae
mov
incl
shl
mov
mov
movzwl
shr
imul
cmp
jae
mov
mov
sub
shr
add
add
lea
ret
shr
sub
sub
sub
add
add
lea
ret
push
mov
sub
push
push
push
movl
movl
mov
mov
mov
mov
xor
mov
add
mov
mov
xor
add
mov
mov
xor
add
mov
mov
xor
add
mov
movl
movl
movl
push
pop
mov
mov
push
pop
mov
mov
movl
movl
mov
xor
add
mov
mov
xor
add
mov
movl
movl
movl
lea
lea
call
decl
jne
decl
jne
decl
jne
movl
mov
xor
mov
add
mov
mov
andl
xor
add
mov
mov
mov
mov
mov
mov
mov
mov
lea
mov
mov
lea
mov
mov
pushl
lea
mov
call
mov
xor
add
cmp
je
mov
mov
mov
mov
mov
mov
add
mov
mov
lea
push
mov
mov
mov
add
push
pushl
push
call
pushl
mov
mov
mov
movl
movl
movw
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
call
push
mov
mov
pushl
call
test
jne
mov
mov
mov
add
mov
mov
mov
call
push
mov
call
test
jne
mov
mov
mov
add
mov
mov
mov
call
push
mov
call
mov
mov
xor
add
cmp
je
mov
xor
mov
sub
add
mov
cmp
ja
movl
pushl
mov
mov
mov
call
push
mov
mov
pushl
call
mov
mov
mov
mov
mov
mov
xor
lea
call
push
mov
mov
pushl
call
mov
mov
mov
mov
xor
lea
call
push
mov
mov
pushl
call
andl
mov
and
add
push
call
test
jne
and
jmp
mov
mov
mov
xor
lea
call
push
mov
mov
pushl
call
mov
incl
cmpl
jb
mov
mov
xor
mov
add
lea
call
push
mov
mov
xor
add
lea
call
push
call
mov
xor
add
cmp
jne
movl
mov
mov
xor
lea
mov
mov
test
je
mov
mov
xor
lea
mov
mov
xor
mov
sub
add
mov
cmp
jbe
mov
mov
mov
cmp
jne
pushl
lea
push
call
mov
jmp
mov
mov
xor
add
xor
mov
mov
xor
add
cmp
je
mov
mov
xor
add
cmp
je
mov
xor
add
jmp
mov
mov
and
or
sub
add
mov
xor
lea
mov
cmp
jb
mov
mov
mov
movl
mov
mov
mov
mov
xor
add
mov
mov
xor
add
mov
movl
movl
mov
mov
xor
add
cmp
je
jmp
mov
mov
sub
mov
xor
add
xor
div
mov
mov
mov
xor
add
cmp
jbe
mov
xor
add
mov
mov
mov
xor
add
imul
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
add
movl
mov
movl
mov
movl
mov
mov
xor
add
jmp
movl
movl
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
xor
add
add
imul
add
mov
mov
mov
cmp
jb
mov
mov
xor
add
imul
mov
xor
add
or
mov
xor
add
mov
xor
add
mov
lea
jmp
mov
mov
xor
lea
mov
mov
xor
mov
sub
add
mov
mov
xor
add
imul
cmp
jbe
mov
mov
mov
mov
mov
xor
add
push
mov
xor
add
push
push
mov
mov
xor
add
push
call
mov
mov
xor
add
cmp
je
mov
jmp
mov
xor
mov
mov
mov
xor
lea
xor
mov
sub
xor
cmp
jne
mov
mov
mov
xor
add
push
mov
xor
add
push
pushl
call
mov
mov
mov
mov
mov
mov
xor
mov
add
movl
movl
jmp
xor
mov
xor
sub
mov
movsbl
movzbl
cmp
jne
mov
mov
xor
lea
xor
cmp
jne
jmp
mov
xor
add
mov
xor
add
cmp
je
mov
movl
movl
movl
movl
mov
mov
mov
xor
add
push
mov
mov
xor
add
push
mov
xor
add
push
mov
xor
add
push
call
mov
mov
mov
mov
xor
add
push
mov
xor
add
push
mov
pushl
xor
add
push
call
mov
xor
add
mov
cmp
je
mov
xor
add
cmp
je
movl
movl
mov
xor
sub
mov
mov
xor
sub
mov
mov
xor
sub
mov
andl
andl
lea
push
pushl
push
lea
push
mov
pushl
mov
add
push
push
call
mov
mov
mov
mov
xor
add
push
mov
xor
add
push
push
call
mov
add
xor
cmp
mov
mov
mov
jne
xor
add
push
mov
xor
add
push
pushl
call
mov
mov
mov
mov
jmp
xor
add
push
mov
xor
add
push
pushl
call
mov
mov
mov
movl
mov
mov
mov
mov
xor
add
mov
mov
xor
add
mov
movl
movl
mov
mov
xor
add
cmp
je
jmp
mov
mov
sub
mov
xor
add
xor
div
mov
mov
mov
xor
add
cmp
jbe
mov
xor
add
mov
mov
mov
xor
add
imul
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
add
movl
mov
movl
mov
movl
mov
mov
xor
add
jmp
movl
movl
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
xor
add
add
imul
add
mov
mov
mov
cmp
jb
mov
mov
xor
add
imul
mov
xor
add
or
mov
xor
add
mov
xor
add
mov
lea
jmp
mov
mov
xor
lea
mov
mov
xor
mov
sub
add
mov
mov
xor
add
imul
cmp
jbe
pushl
mov
pushl
lea
push
mov
mov
pushl
mov
mov
pushl
pushl
pushl
call
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
xor
add
push
mov
xor
add
push
pushl
call
pop
pop
pop
leave
ret
push
mov
push
push
lea
mov
push
mov
mov
mov
mov
cmp
pop
jne
movb
movb
movb
movb
leave
ret
push
mov
push
push
lea
mov
mov
mov
mov
mov
cmp
jne
mov
movb
movb
movb
movb
leave
ret
push
mov
push
push
lea
mov
mov
mov
mov
mov
cmp
jne
movb
mov
movb
movb
leave
ret
push
mov
push
push
lea
mov
push
mov
mov
mov
mov
cmp
pop
jne
movb
movw
movb
leave
ret
push
mov
push
push
lea
mov
mov
mov
mov
mov
cmp
jne
mov
movb
movb
movb
leave
ret
push
mov
call
mov
mov
movb
call
push
mov
movb
call
push
movb
call
movb
mov
jmp
push
mov
push
mov
push
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
movl
mov
movzwl
xor
add
pop
test
je
mov
movl
leave
ret
push
mov
sub
andl
movl
movl
movl
movl
movl
mov
mov
mov
mov
push
push
mov
mov
mov
mov
mov
push
mov
test
jne
pushl
mov
call
mov
mov
add
mov
mov
mov
mov
xor
mov
add
cmp
jne
mov
mov
mov
mov
mov
mov
xor
add
mov
mov
andl
xor
add
mov
lea
push
mov
xor
add
push
mov
add
push
mov
mov
movl
pushl
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
mov
lea
mov
lea
push
mov
xor
add
push
mov
add
push
mov
mov
movl
pushl
mov
call
test
je
andl
cmpl
jbe
mov
mov
sub
mov
incl
mov
mov
inc
cmp
jb
mov
mov
add
mov
mov
add
sub
add
mov
mov
mov
movl
jmp
add
shr
mov
je
lea
mov
mov
mov
mov
movzwl
mov
and
mov
mov
shr
add
xor
cmp
jne
mov
add
mov
cmpl
je
mov
add
mov
mov
mov
mov
addl
decl
jne
mov
add
mov
cmp
jae
add
mov
mov
test
jne
mov
mov
movl
mov
mov
mov
xor
add
mov
lea
mov
lea
push
mov
xor
add
push
mov
add
push
mov
mov
pushl
mov
call
mov
mov
add
mov
pushl
mov
pushl
pushl
call
mov
add
lea
mov
mov
mov
mov
mov
mov
mov
cmp
jb
mov
mov
mov
lea
mov
add
cmp
jae
mov
mov
mov
sub
add
mov
mov
jmp
xor
pop
pop
pop
leave
ret
push
mov
sub
push
mov
mov
cmpl
je
test
je
test
je
mov
test
je
cmpl
je
cmp
je
mov
andl
mov
sub
add
movzwl
mov
movzwl
add
je
lea
push
mov
mov
push
test
je
mov
andl
and
add
movzwl
movzwl
add
je
lea
mov
test
je
mov
andl
and
add
movzwl
movzwl
add
je
lea
mov
mov
mov
test
je
mov
add
movzwl
movzwl
incl
addl
add
cmp
jb
movzwl
movzwl
mov
incl
add
add
mov
cmp
jb
mov
movzwl
movzwl
incl
add
add
mov
cmp
jb
pop
pop
xor
inc
jmp
xor
pop
leave
ret
push
mov
mov
mov
sub
push
xor
push
push
cmp
je
cmp
je
cmp
jne
xor
inc
jmp
mov
add
mov
mov
mov
mov
add
add
mov
cmp
ja
mov
mov
cmp
jbe
cmp
jae
movzwl
jmp
mov
lea
mov
test
je
add
mov
cmp
jbe
mov
mov
add
cmp
jae
mov
jmp
sub
mov
mov
test
je
mov
inc
mov
cmp
jb
jmp
xor
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
movl
mov
mov
mov
mov
mov
mov
push
mov
push
mov
movl
mov
mov
push
mov
xor
xor
add
add
mov
cmp
je
mov
mov
xor
add
cmp
je
mov
mov
xor
add
cmp
je
add
mov
mov
xor
add
mov
mov
cmp
je
mov
mov
imul
xor
add
cmp
jne
mov
mov
imul
xor
add
cmp
je
mov
mov
mov
imul
add
mov
add
xor
mov
mov
mov
xor
add
xor
mov
mov
add
add
cmp
je
add
mov
mov
xor
add
mov
lea
mov
movl
mov
pushl
mov
call
mov
xor
add
mov
cmp
jne
mov
pushl
mov
call
mov
movl
movl
mov
xor
add
cmp
jne
mov
mov
xor
xor
lea
mov
mov
add
imul
push
call
mov
xor
add
cmp
jne
mov
xor
add
cmp
jbe
mov
xor
add
cmp
jne
mov
mov
xor
lea
mov
jmp
movl
movl
mov
xor
add
jmp
mov
xor
add
mov
mov
xor
add
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
mov
mov
mov
xor
add
cmp
je
mov
mov
xor
add
shr
cmp
je
mov
mov
mov
movzwl
push
pushl
call
jmp
mov
add
mov
mov
add
push
pushl
call
mov
mov
mov
xor
add
cmp
mov
jne
mov
xor
lea
mov
jmp
mov
xor
add
imul
mov
mov
mov
xor
lea
mov
mov
xor
add
cmp
jne
mov
mov
mov
sub
xor
jmp
mov
xor
add
cmp
mov
jne
mov
jmp
mov
xor
add
pop
pop
pop
leave
ret
push
mov
sub
movl
movl
mov
mov
push
mov
mov
mov
mov
xor
mov
add
cmp
je
mov
mov
add
push
mov
movl
mov
mov
mov
xor
xor
add
cmp
je
mov
mov
add
mov
mov
sub
mov
xor
add
mov
cmp
je
mov
xor
add
mov
push
movl
jmp
mov
xor
lea
add
shr
cmp
jae
sub
lea
mov
movzwl
and
mov
mov
mov
sub
add
movzwl
shr
xor
mov
mov
mov
mov
xor
lea
mov
mov
mov
xor
add
cmp
jne
mov
mov
xor
add
cmp
jne
mov
mov
add
add
decl
jne
mov
add
mov
mov
mov
xor
cmp
jae
add
mov
mov
xor
add
mov
cmp
jne
pop
mov
pop
jmp
mov
xor
add
pop
leave
ret
push
mov
sub
movl
movl
mov
push
push
mov
xor
push
mov
add
mov
mov
xor
add
mov
mov
mov
mov
xor
mov
addl
mov
mov
xor
mov
addl
mov
mov
xor
mov
addl
mov
mov
xor
mov
addl
mov
mov
mov
test
je
mov
test
je
mov
test
je
mov
mov
xor
mov
add
mov
cmp
jne
mov
xor
add
mov
mov
mov
mov
add
mov
mov
test
je
movl
mov
xor
add
mov
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
cmp
jne
mov
lea
push
mov
xor
add
push
pushl
pushl
call
mov
mov
mov
sub
add
push
call
mov
mov
mov
mov
pushl
pushl
push
call
mov
mov
add
movzwl
lea
mov
mov
movzwl
xor
add
mov
cmp
je
mov
xor
add
mov
mov
movzwl
xor
sub
sub
cmp
ja
mov
add
mov
jmp
mov
mov
lea
mov
mov
test
je
not
and
add
mov
add
push
call
mov
mov
mov
xor
add
cmp
je
push
mov
add
mov
add
push
push
call
mov
mov
mov
add
xor
lea
mov
mov
mov
movzwl
xor
sub
mov
sub
mov
cmp
jbe
mov
mov
cmp
jne
mov
lea
push
mov
xor
add
push
mov
pushl
push
call
test
je
mov
mov
mov
xor
add
je
andl
andl
mov
lea
movl
movl
mov
mov
mov
movl
mov
mov
xor
mov
add
mov
incl
cmpl
mov
jb
mov
mov
mov
mov
mov
lea
mov
mov
mov
movl
mov
mov
movl
movl
movl
movl
movl
mov
movl
mov
movl
mov
movl
mov
movl
movl
xor
mov
xor
sub
mov
inc
cmp
jb
mov
lea
push
call
mov
lea
push
push
call
lea
push
mov
pushl
call
mov
test
je
mov
jmp
mov
mov
cmp
je
mov
mov
cmp
jne
mov
mov
cmp
jne
mov
mov
mov
add
mov
mov
push
push
pushl
call
test
je
pushl
mov
pushl
call
test
je
mov
mov
mov
call
test
je
push
pushl
call
test
je
mov
mov
cmp
jne
mov
lea
push
pushl
mov
pushl
push
call
mov
mov
mov
xor
add
je
mov
mov
movl
mov
pushl
xor
pushl
add
or
add
push
call
movl
jmp
mov
mov
add
call
mov
mov
mov
mov
movl
cmpl
jne
andl
mov
jmp
xor
pop
pop
pop
leave
ret
push
mov
movzwl
movzwl
push
push
xor
lea
test
je
mov
lea
cmp
jb
mov
add
add
cmp
jb
add
inc
cmp
jb
xor
pop
pop
pop
ret
push
mov
sub
movl
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
push
mov
xor
push
mov
mov
add
push
cmp
je
mov
mov
xor
add
cmp
je
mov
xor
add
mov
mov
xor
add
mov
mov
mov
mov
xor
mov
xor
add
add
sub
mov
jmp
mov
mov
xor
add
cmp
je
mov
mov
xor
add
cmp
mov
mov
je
cmp
je
mov
mov
xor
add
cmp
jb
mov
mov
xor
add
cmp
ja
movzwl
movzwl
add
mov
mov
mov
xor
add
cmp
jb
mov
mov
xor
add
cmp
ja
movzwl
movzwl
add
mov
mov
mov
cmp
jne
mov
mov
xor
lea
mov
mov
mov
xor
lea
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
cmp
jne
mov
mov
xor
add
imul
mov
jmp
mov
mov
xor
lea
mov
mov
sub
xor
mov
mov
sub
xor
mov
mov
mov
xor
add
xor
add
imul
mov
movzwl
mov
mov
xor
add
xor
add
imul
mov
movzwl
sub
sub
xor
xor
cmp
jne
mov
mov
xor
add
xor
add
imul
mov
movzwl
mov
sub
xor
cmp
mov
je
mov
pop
xor
pop
add
pop
leave
ret
push
mov
push
mov
push
mov
sub
mov
xor
mov
movl
mov
cmp
je
push
push
movzwl
mov
mov
mov
cmp
jne
mov
lea
xor
mov
xor
mov
mov
sub
mov
xor
mov
cmp
jne
mov
pop
pop
cmp
je
xor
lea
pop
leave
ret
push
mov
push
push
push
movl
mov
call
mov
mov
add
xor
cmp
je
mov
mov
mov
push
mov
mov
sub
mov
xor
mov
cmp
jne
mov
lea
xor
mov
xor
lea
mov
add
xor
cmp
jne
mov
pop
cmp
je
xor
xor
mov
mov
pop
pop
leave
ret
push
mov
push
push
movl
mov
call
mov
mov
sub
mov
xor
mov
cmp
je
push
push
movzwl
mov
mov
mov
cmp
jne
mov
lea
xor
mov
xor
mov
mov
sub
mov
xor
mov
cmp
jne
cmpl
pop
pop
je
xor
inc
jmp
xor
pop
leave
ret
push
mov
push
mov
movzwl
push
lea
mov
push
xor
mov
mov
cmp
je
mov
sub
mov
jmp
mov
mov
add
movzwl
mov
add
xor
mov
cmp
jne
xor
pop
mov
mov
pop
leave
ret
push
mov
sub
movl
movl
mov
xor
add
mov
movl
movl
movl
mov
xor
mov
lea
mov
xor
add
mov
imul
cmp
jae
mov
mov
sub
mov
xor
add
cmp
jbe
mov
add
mov
add
mov
mov
mov
mov
mov
xor
mov
lea
mov
jmp
mov
mov
sub
mov
xor
add
cmp
jbe
mov
add
mov
add
mov
mov
mov
xor
mov
lea
mov
jmp
mov
mov
sub
mov
xor
add
cmp
jbe
mov
add
mov
add
mov
mov
mov
xor
mov
lea
mov
jmp
mov
add
mov
add
mov
mov
mov
inc
mov
jmp
leave
ret
push
mov
sub
movl
push
mov
movl
mov
mov
xor
mov
add
cmp
je
push
push
mov
mov
xor
mov
sub
add
lea
xor
mov
mov
mov
xor
sub
xor
mov
mov
xor
add
cmp
jne
pop
pop
pop
leave
ret
push
mov
sub
movl
movl
mov
mov
mov
push
push
mov
xor
mov
add
cmp
mov
jne
xor
add
jmp
mov
xor
add
cmp
jne
mov
jmp
lea
mov
mov
mov
mov
xor
add
mov
mov
push
call
mov
mov
mov
jmp
mov
sub
mov
mov
mov
call
mov
pushl
mov
call
mov
xor
add
cmp
jne
mov
call
mov
xor
add
push
pushl
mov
call
mov
xor
add
cmp
je
mov
mov
mov
mov
mov
add
cmp
jne
mov
xor
add
pop
pop
pop
leave
ret
mov
mov
jmp
push
mov
mov
sub
cmpl
push
push
push
je
test
je
movzwl
mov
mov
xor
and
mov
xor
add
mov
andl
xor
push
pop
cmp
jae
lea
xor
movzwl
mov
lea
cmp
jne
movzwl
mov
cmp
jne
mov
movzwl
cmpb
je
mov
movzwl
movsbw
mov
sub
xor
cmp
je
push
pop
incl
mov
cmp
jb
jmp
incl
push
pop
mov
movzwl
cmpb
je
inc
cmp
jne
xor
pop
pop
pop
leave
ret
mov
add
xor
xor
cmp
sete
jmp
push
mov
sub
push
mov
mov
cmpl
jne
xor
jmp
pushl
push
pop
call
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
push
mov
mov
call
push
mov
pushl
call
mov
test
je
mov
push
push
mov
add
mov
mov
mov
mov
add
mov
mov
add
add
mov
mov
mov
cmp
ja
mov
xor
mov
cmp
jbe
jmp
mov
mov
movzwl
cmp
jae
cmp
jae
mov
mov
mov
mov
lea
add
add
sub
movl
mov
mov
cmpl
jne
mov
pushl
push
call
mov
test
je
mov
mov
mov
addl
decl
jne
mov
inc
mov
cmp
jb
pop
pop
pop
leave
ret
push
mov
mov
push
pushl
lea
mov
call
mov
mov
mov
xor
cmp
pop
setne
mov
pop
ret
mov
push
jmp
xor
add
mov
add
add
movzwl
mov
cmp
jne
xor
mov
mov
pop
ret
push
mov
mov
shl
add
jmp
xor
sub
mov
inc
inc
mov
cmp
jne
movb
mov
add
pop
ret
push
mov
sub
push
mov
mov
lea
push
mov
mov
mov
mov
push
xor
mov
add
cmp
je
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
mov
movl
mov
mov
mov
movl
mov
mov
xor
mov
sub
add
mov
movl
jmp
mov
mov
xor
xor
lea
mov
xor
div
mov
mov
xor
xor
sub
cmp
jne
mov
add
mov
mov
mov
xor
xor
add
add
cmp
jae
lea
mov
mov
xor
add
lea
mov
mov
cmp
jbe
addl
jmp
addl
mov
xor
inc
incl
add
cmp
jb
mov
mov
test
jne
xor
sub
jmp
mov
xor
mov
sub
add
mov
xor
sub
ror
xor
mov
add
mov
mov
mov
sub
xor
cmp
jne
mov
mov
xor
xor
sub
sub
xor
mov
mov
xor
mov
sub
add
jmp
mov
xor
mov
sub
add
mov
mov
cmp
jne
mov
jmp
mov
xor
add
pop
pop
pop
leave
ret
push
mov
sub
movl
movl
mov
mov
movl
push
push
movl
mov
mov
mov
xor
mov
xor
add
add
imul
jmp
mov
mov
xor
xor
add
add
test
mov
mov
je
xor
xor
add
add
shr
mov
xor
add
xor
jmp
xor
xor
add
add
shr
mov
mov
xor
lea
mov
mov
xor
xor
sub
cmp
jbe
mov
pop
mov
mov
pop
leave
ret
push
mov
sub
movl
movl
movl
push
movl
mov
push
mov
push
xor
mov
add
mov
movl
movl
movl
mov
mov
mov
xor
xor
add
add
imul
jmp
mov
sub
xor
mov
lea
call
mov
mov
mov
mov
mov
mov
xor
lea
mov
mov
mov
xor
xor
sub
mov
cmp
jbe
mov
xor
add
mov
movl
mov
jmp
mov
mov
xor
add
shr
mov
mov
mov
mov
mov
mov
movzbl
xor
mov
mov
mov
xor
add
and
mov
mov
xor
mov
mov
xor
lea
mov
mov
xor
mov
sub
add
mov
mov
mov
xor
add
cmp
jne
mov
mov
xor
add
pop
pop
xor
pop
leave
ret
push
mov
mov
mov
mov
mov
mov
sub
push
push
push
mov
xor
mov
add
cmp
jne
orl
jmp
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
mov
mov
movl
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
mov
xor
add
mov
mov
xor
add
mov
mov
mov
sub
mov
mov
mov
mov
dec
test
mov
je
mov
mov
mov
dec
not
and
mov
mov
add
jmp
mov
mov
mov
xor
add
mov
mov
xor
add
mov
mov
mov
xor
add
mov
mov
movl
movl
movl
mov
mov
xor
add
imul
mov
mov
xor
lea
cmp
jae
mov
xor
add
mov
mov
add
mov
pushl
mov
mov
call
mov
movl
mov
xor
lea
add
push
call
mov
test
je
mov
xor
add
push
pushl
lea
push
call
mov
mov
mov
mov
sub
mov
mov
mov
mov
add
mov
cmp
jb
mov
mov
mov
add
mov
sub
jmp
push
pushl
lea
push
call
mov
mov
movl
movl
movl
lea
mov
lea
mov
lea
mov
lea
mov
mov
xor
add
mov
jmp
cmp
je
mov
xor
mov
add
mov
mov
xor
lea
mov
mov
mov
xor
add
cmp
jne
mov
xor
add
push
push
lea
push
call
mov
mov
xor
mov
mov
xor
movzbl
add
cmp
je
mov
mov
xor
mov
mov
xor
movzbl
add
cmp
je
mov
mov
xor
mov
mov
xor
movzbl
add
cmp
je
mov
mov
xor
mov
mov
xor
movzbl
add
cmp
je
mov
mov
xor
mov
mov
mov
xor
mov
xor
mov
mov
xor
mov
or
mov
mov
xor
mov
cmp
jne
mov
mov
xor
mov
mov
mov
xor
mov
xor
mov
mov
xor
mov
or
mov
mov
xor
mov
cmp
jne
mov
mov
xor
mov
mov
mov
xor
mov
xor
mov
mov
xor
mov
or
mov
mov
xor
mov
cmp
jne
mov
mov
xor
mov
mov
mov
xor
mov
xor
mov
mov
xor
mov
or
mov
mov
xor
mov
cmp
jne
lea
push
call
mov
cmp
je
mov
xor
add
mov
mov
xor
lea
xor
mov
mov
xor
add
cmp
je
mov
mov
xor
add
cmp
jne
mov
mov
xor
lea
jmp
push
pushl
lea
push
call
mov
mov
xor
add
cmp
je
mov
xor
add
push
push
lea
push
call
mov
add
mov
pushl
pushl
mov
add
push
call
mov
mov
xor
add
cmp
je
push
pushl
mov
add
push
call
mov
mov
add
mov
add
mov
mov
mov
xor
add
imul
mov
mov
xor
lea
cmp
jb
mov
mov
mov
jmp
mov
mov
xor
xor
add
add
cmp
jne
mov
imul
mov
jmp
mov
xor
add
cmp
je
subl
jmp
andl
pop
pop
pop
leave
ret
push
mov
and
mov
sub
push
mov
push
push
cmp
jne
push
jmp
mov
cmp
jne
push
jmp
mov
cmp
jne
push
jmp
mov
cmp
jne
push
jmp
mov
mov
cmp
jne
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
mov
add
mov
mov
mov
mov
mov
mov
mov
add
mov
mov
mov
push
push
pushl
push
call
mov
mov
pushl
xor
add
mov
lea
push
push
pushl
pushl
pushl
call
mov
mov
xor
add
cmp
je
mov
mov
xor
add
imul
mov
jmp
mov
cmp
jne
push
jmp
mov
cmp
jne
push
jmp
mov
cmp
jne
push
pushl
pushl
push
pushl
pushl
pushl
call
mov
mov
pop
pop
pop
mov
pop
ret
push
mov
sub
mov
mov
movl
mov
xor
add
mov
mov
push
mov
pushl
lea
pushl
push
pushl
pushl
pushl
call
mov
mov
leave
ret
jg
jge
xorb
jge
popa
add
xchg
add
push
fs
jg
inc
fstl
push
loopne
por
jecxz
sub
je
movsb
in
data16
jo
sub
outsl
int3
cmp
cltd
sbb
jmp
out
sbb
and
scas
clc
xchg
nop
nop
push
repnz
cld
mov
jb
scas
or
push
int3
les
and
push
push
fnstcw
lret
mov
sbb
push
mov
mov
icebp
xchg
in
push
cmc
sbb
or
xchg
sarl
stos
adc
sub
and
jne
inc
stos
out
dec
fists
mov
sub
mov
cmp
rorb
sub
loop
leave
cmpxchg
test
push
inc
mov
jle
xchg
cmpsb
jl
cld
ja
out
imul
mov
push
aam
shlb
insl
mov
lret
sbb
cmp
sub
test
xor
mov
loopne
mov
add
add
repz
shl
pop
daa
cmp
arpl
nop
repnz
les
stc
clc
jmp
push
cs
fidivrl
dec
pop
xchg
aad
push
inc
std
xor
psubusw
in
dec
es
into
or
xor
and
jmp
or
adc
xor
and
xchg
inc
or
sti
outsl
xchg
int3
dec
add
cli
sub
mov
std
fwait
sarl
loop
mov
mov
dec
out
into
add
mov
pop
mov
xchg
mov
mov
pop
stos
out
cwtl
fninit
mov
rorl
jge
fld1
pusha
fstpl
or
sub
xor
mov
sbb
cmp
inc
out
insl
lahf
pusha
adc
fimuls
and
and
pusha
xor
add
sarl
adc
dec
call
bound
fs
cmp
in
xchg
daa
mov
iret
mov
jmp
dec
mov
push
or
repnz
dec
dec
dec
fmulp
jl
daa
fnstsw
xchg
mov
cmc
mov
psubsb
add
movsb
mov
int3
out
outsl
push
nop
push
iret
addl
xchg
rclb
push
les
fs
aam
repz
popf
xchg
pop
pop
jae
push
cmp
mov
data16
popf
and
add
ja
idiv
jg
mov
mov
jmp
sahf
addr16
add
xchg
add
mov
cwtl
cmpsb
les
inc
dec
sub
insl
cli
adc
pop
pop
pop
scas
push
in
mov
roll
fdivl
js
cmp
out
jnp
lods
and
xor
andb
push
nop
mov
mov
cmp
cmpsl
fcmovnbe
addl
sbb
jmp
test
dec
jecxz
je
mov
jmp
icebp
es
adc
push
aam
cmpsl
roll
insb
mov
adc
mov
mov
roll
xor
adc
dec
int
imulb
sbb
int3
cmp
ret
sarl
pop
cltd
sbb
push
inc
rcrl
or
lds
mov
pop
lahf
cld
add
xchg
sahf
pop
push
aas
and
push
add
jp
or
lock
gs
andb
shr
fisttpl
iret
repz
shlb
or
leave
xchg
sub
inc
push
push
fdivrs
fildl
sbb
lret
outsb
fldcw
mov
inc
stos
fildl
add
sti
cmpsl
daa
cmp
js
dec
aas
iret
push
pop
push
and
push
adc
inc
in
push
repz
mov
cmpsb
es
and
pop
int3
outsl
push
and
loopne
add
push
pop
jg
and
mov
shl
sahf
or
cmp
scas
sub
test
or
mov
ret
add
and
push
sub
imul
ret
add
movsl
and
out
out
dec
out
mov
pushf
cmp
imul
dec
ljmp
inc
add
mov
and
add
test
inc
and
addb
cmp
xchg
mov
add
pop
pop
jbe
lahf
and
test
ljmp
faddl
xchg
push
xor
jg
or
lock
cmp
aad
sub
pop
pop
sbb
inc
push
sub
or
add
inc
sub
jno
sub
push
pop
xor
inc
sti
fsub
jmp
add
add
addl
or
cmp
loop
ret
mov
fwait
in
or
scas
inc
ficomps
in
push
xlat
or
cmp
jp
add
sbb
mov
dec
rcrb
add
sbb
pop
xchg
mov
xchg
add
xchg
add
scas
xor
or
cmp
jmp
stos
sbb
cld
outsb
lea
jbe
aad
sbb
mov
cmp
dec
jae
paddsb
mov
btrl
mov
ret
addb
stos
scas
ja
test
adc
movsb
xchg
jl
cmc
dec
jg
ret
pop
push
xchg
inc
dec
fistpll
insl
push
jge
cmp
inc
cwtl
jb
add
in
jne
enter
and
test
cltd
ljmp
cmp
test
push
shr
mov
insl
orl
push
shlb
sbb
stc
iret
push
pop
xchg
add
jo
dec
mov
repnz
popf
dec
cltd
outsb
fmull
jbe
rol
sub
xchg
ja
rcrb
or
sarl
insl
mov
push
adc
or
mov
push
mov
out
cmp
jmp
sahf
mov
lret
fcomps
ficomps
push
push
hlt
ss
std
das
inc
lahf
mov
xlat
out
mov
inc
stc
push
sub
prefetchnta
addb
xor
adc
leave
push
in
sub
mov
xor
cmp
cmpsl
sti
dec
jecxz
outsb
shlb
lds
mov
test
scas
lea
mov
fisubrl
shl
std
xor
js
gs
test
mov
dec
popf
jnp
add
bound
pop
cmp
ss
push
adc
jo
xor
es
loop
dec
test
idivb
daa
loope
sub
xchg
push
xchg
je
test
mov
scas
dec
shll
and
push
push
sbb
jb
bswap
negb
cwtl
pop
aaa
iret
pop
mov
insb
imul
dec
dec
bound
pop
ljmp
mov
xor
mov
cmp
lods
mov
add
xlat
insb
call
push
lods
test
dec
cmc
xor
xchg
mov
int3
dec
loop
cs
repnz
mov
shll
dec
jnp
xor
loopne
enter
xor
loopne
arpl
loopne
mov
mov
and
loopne
daa
aas
push
pop
das
in
sbb
pusha
jno
cmp
jno
push
jmp
mov
inc
inc
hlt
sbb
idiv
out
add
mov
ljmp
imul
cld
jecxz,pt
lods
or
add
add
mov
jp
push
dec
out
bound
add
add
fiaddl
jno
mov
test
and
jne
or
sarb
out
cmp
loop
xor
cmp
mov
ret
pushf
aaa
adc
leave
int3
add
inc
and
jle
push
xor
jmp
lret
or
sbb
add
in
pop
xchg
sub
mov
mov
dec
data16
pushf
call
stc
mov
leave
add
or
pop
jo
sub
xor
gs
cmp
sbb
jo
sbb
lcall
inc
pushf
shrl
cwtl
in
dec
cmp
call
out
add
jbe
cmpb
das
pusha
lods
inc
iret
mov
mov
push
or
push
cmp
sbb
jns
inc
xchg
mov
into
ret
mov
xchg
mov
mov
aaa
mov
xor
repz
inc
mov
push
sub
loop
inc
push
pop
leave
inc
jl
xchg
push
pop
jge
add
loope
and
sti
mov
push
popf
ret
cmc
adcb
stc
rcrb
push
pop
xchg
mov
fisubrl
cli
mov
testb
inc
push
outsl
lahf
mov
add
jb
adc
aad
mov
xchg
in
negl
and
lahf
cwtl
mov
pop
sbb
xor
sub
xchg
out
cmpb
ds
mov
shlb
mov
push
xor
and
inc
mov
mov
fs
cmp
shrb
in
cli
ret
imul
insl
sub
fidivrs
clc
sub
test
loopne
sub
sub
jge
adc
inc
mov
pop
pop
lea
mov
mov
cmp
xchg
inc
xchg
shll
lds
mov
gs
xchg
push
ss
fs
sub
dec
cmp
sub
sbb
filds
xchg
out
mov
lods
push
popf
loop
adc
leave
cli
outsl
cmpsb
mov
cmpl
push
out
adc
imul
push
dec
lods
sub
fcomps
outsl
je
adc
jmp
mov
nop
rcrb
push
dec
push
and
xor
ret
loope
xor
stc
sbb
and
cs
stos
addr16
inc
add
sbb
call
or
addl
js
hlt
mov
std
jl
dec
pop
cmp
cli
test
adc
xchg
add
inc
mov
jge
cwtl
inc
dec
xchg
nop
pop
sbb
adc
dec
enter
in
imul
subl
leave
mov
xchg
xchg
lea
repz
mull
gs
mov
adc
or
push
mov
push
push
push
pusha
add
fiaddl
pop
lock
inc
fbstp
jo
xor
jge
mov
loopne
inc
es
push
js
mov
jns
mov
roll
cmp
jg
mov
dec
sub
scas
stc
in
jnp
pminub
sub
mov
sbb
loopne
xchg
add
jl
push
das
push
and
outsb
shl
xchg
fs
shrl
or
and
jl
ja
push
push
sti
pop
ja
xlat
addr16
loop
xor
lea
addl
int3
mov
sahf
lcall
into
lock
adc
jle
movsl
jge
push
jmp
popf
or
dec
sti
xchg
ret
enter
push
jnp
jge
jecxz
sbb
sbb
rolb
inc
or
fistl
adc
push
iret
lret
in
dec
cmp
add
cmp
cltd
and
xor
in
mov
sbb
lea
add
xor
ss
sub
push
mov
pop
insl
mov
movsl
ret
inc
xchg
sbb
push
imul
pop
mov
cmpl
mov
lcall
push
icebp
or
push
or
pusha
dec
xchg
mov
rcrb
cltd
jp
jb
mov
cmpsl
jle
push
incb
mov
mov
pop
pop
inc
data16
int3
jmp
or
scas
push
jne
insl
ja
cltd
in
lock
mov
fdivs
jle
push
es
pusha
and
sbb
xchg
out
mov
fbstp
jbe
rorl
cwtl
dec
push
cmp
enter
xchg
rcll
cmc
out
and
outsb
fisubs
dec
jbe
iret
and
rcrl
cmp
mov
outsl
xchg
loopne
scas
repnz
sbb
push
mov
cmp
in
mov
mov
std
lret
lcall
inc
mov
push
push
ror
or
add
pop
mov
mov
dec
sbb
lea
add
add
orb
out
fists
xor
push
pop
mov
call
jecxz
adc
push
mov
xlat
jnp
outsb
push
mov
aas
dec
je
jne
jo
lds
lods
fbld
mov
mov
adc
sub
adcl
xchg
out
cmpsb
inc
cli
jge
clc
pop
xchg
mov
dec
mov
dec
jae
lcall
adc
roll
xchg
jmp
cltd
ror
repnz
test
and
lret
and
mov
dec
pusha
sbb
rol
ret
mov
or
cmp
data16
cmpsb
out
ds
mov
dec
std
jns
xchg
gs
enter
mov
icebp
xchg
mov
testl
add
mov
mov
out
test
cmc
imul
jg
in
cmp
adc
mov
fstl
out
inc
mov
push
adc
adc
lahf
leave
jecxz
mov
dec
adc
xchg
xchg
push
push
xchg
and
inc
inc
sbbb
add
push
outsl
push
repnz
mov
fld
lea
daa
mov
inc
sbb
dec
roll
scas
xor
jns
mov
add
ljmp
push
dec
aad
jns
cmp
into
mov
int3
add
push
inc
test
and
cmc
daa
add
aas
test
out
xchg
mov
enter
jne
sbb
push
loope
lahf
sub
mov
lods
push
cmp
loop
xor
push
roll
push
sbb
inc
inc
lahf
and
orl
sahf
push
jge
lods
shll
inc
mov
pusha
iret
add
std
push
mov
cld
sub
add
add
icebp
cmpsl
jb
addr16
adc
push
lods
mov
pop
jp
add
out
popf
fcompl
mov
testb
fisttps
testb
idivb
jecxz
push
insb
lahf
mov
outsl
inc
loopne
imul
lret
dec
aam
dec
jns
push
push
jmp
insl
pop
outsl
mov
ljmp
vsubsd
xchg
pop
aaa
daa
les
fiadds
add
jg
pop
aad
or
add
xchg
add
imul
pop
fxch
stos
or
xor
out
mov
mov
leave
xchg
cs
int
lret
imul
cmp
leave
daa
mov
cmp
lock
loop
push
cs
lock
push
imul
loop
sti
std
scas
add
aad
mov
mov
lods
cmp
jp
xchg
insb
inc
mov
or
in
ret
pop
iret
std
push
and
and
lds
fs
mov
fs
and
add
std
pop
cmp
sbb
and
and
cmpsl
adc
and
out
pop
cmc
shll
inc
shl
inc
xchg
lock
lock
imul
shll
push
cs
hlt
int
inc
ss
ret
push
add
ret
jns
fdivrp
cld
lret
xchg
jle
sub
fiadds
mov
jmp
fmuls
jnp
fldenv
lds
xchg
cmp
dec
cmp
test
or
pop
xor
sub
enter
dec
jmp
pop
xor
adc
inc
xor
dec
scas
push
std
scas
lret
inc
sub
lret
push
not
mov
scas
test
out
mov
or
lahf
pop
mov
mov
rcll
mov
dec
adc
mov
aaa
fnstsw
inc
popf
aaa
enter
mov
roll
das
aaa
stc
jo
ds
mov
add
dec
jmp
xorb
rorb
lods
jb
bound
mov
lret
jae
add
and
jb
loop
call
insb
sbb
out
adc
outsb
dec
push
mov
loop
enter
mov
fildll
test
pusha
repnz
inc
dec
mov
scas
jbe
sbb
or
xchg
mov
imul
loop
jle
or
sarb
hlt
sub
bound
and
xorb
mov
jp
adc
in
mov
jbe
pop
es
add
imulb
stos
bnd
xor
test
loopne
fs
ret
jp
call
cmpsl
xor
data16
ljmp
adc
shrb
push
test
das
fcompl
add
popf
paddd
cmpsl
mov
dec
lcall
xchg
add
scas
loopne
xor
clc
xchg
inc
mov
ds
cmp
adc
daa
fcoml
dec
pshufw
pop
push
mov
jae
pop
inc
mov
in
sub
je
pop
aam
cmp
push
fwait
jge
imul
fmuls
fstps
iret
add
cmp
aaa
adc
outsl
jo
xchg
ss
pop
cmp
inc
sbb
data16
or
sbb
mov
pop
dec
repz
aaa
sahf
xor
hlt
fisubrs
jmp
ds
xor
ss
add
repnz
dec
stos
add
cmp
cmp
fildll
sbb
js
cmpsb
and
sahf
dec
fstpt
stc
push
out
shrb
fldl
movsl
insb
in
pushf
push
xor
into
fwait
jns
pop
jae
xor
icebp
popw
mov
cmc
cmpsb
and
fyl2x
call
dec
int
ja
mov
fwait
outsl
jns
pop
mov
insl
mov
jo
mov
mov
adc
mov
outsb
cltd
xchg
loope
es
jmp
xchg
ret
mov
sbb
pop
outsb
leave
push
sbb
cltd
out
pop
cmp
push
test
inc
data16
push
ficoms
cmp
shr
fisttps
inc
sbb
inc
insl
inc
gs
nop
mov
loope
inc
and
out
xchg
cmp
mov
pop
test
std
inc
push
mov
jb
leave
movsb
aad
mov
insb
inc
dec
dec
out
cs
ret
lcall
pop
mov
cmpsl
mov
push
adc
or
mov
ss
sub
hlt
add
outsb
adc
cmp
pop
or
fs
fstpl
mov
jp
adc
mov
ja
sbb
out
cmp
mov
cmp
jge
inc
pop
ja
js
jg
rcll
repnz
dec
adc
mov
gs
int
lock
sbb
push
sbb
xchg
adcl
or
shl
scas
mov
push
xor
or
repnz
sti
jns
ds
push
lock
xorb
mov
mov
xchg
xchg
jle
mov
mov
or
xchg
sub
lret
dec
loop
sahf
push
pop
xor
jns
jno
xor
arpl
xchg
mov
push
ret
inc
out
sahf
xor
add
and
movsb
lea
lods
and
mov
jbe
add
cwtl
data16
hlt
out
daa
jo
les
inc
mov
pop
adc
hlt
lods
loopne
push
cmp
call
cmc
mov
out
and
test
test
jb
xchg
cli
push
push
mov
add
jge
and
and
shr
loopne
roll
cmp
pop
sub
add
int3
stc
mov
xchg
jge
mov
stos
push
xchg
pop
loopne
mov
lds
adc
mov
jb
lock
mov
leave
lea
enterw
mov
add
and
jmp
es
jne
out
out
jo
cwtl
in
sub
sbb
mov
adc
xchg
xor
sub
xlat
inc
cwtl
popf
fxch
fldenv
shrb
fldcw
cltd
xor
and
adc
add
mov
arpl
incb
mov
xlat
test
cmp
aam
inc
cmp
or
aam
cmpsl
shrb
imul
imul
repnz
mov
dec
cmpsl
negb
andb
pushf
xor
call
pop
or
add
mov
in
loope
mov
sbb
lcall
sub
les
or
insl
push
shrl
orb
xor
adc
notb
pop
inc
movsl
xchg
and
scas
insb
jecxz
icebp
ret
ret
out
mov
xchg
pop
pop
mov
lods
bnd
xor
stc
or
xor
xchg
push
pop
out
inc
ljmp
mov
lea
and
std
jp
rcrl
lds
jg
adc
mov
or
lret
mov
push
jo
inc
jbe
jge
stc
andb
test
cmp
xchg
cmc
sbbb
fisubs
lea
pop
and
cltd
enter
popa
fisttpll
push
sub
pop
adc
testb
pop
jmp
popa
in
jmp
fdivl
dec
xchg
mov
out
xchg
sahf
add
aaa
scas
push
addr16
sbb
pop
fildll
xchg
mov
push
and
xor
mov
popf
add
pop
add
test
mov
outsb
scas
js
add
inc
push
adc
pop
push
xor
push
mov
inc
gs
xchg
imul
push
or
adc
mov
out
cvtps2pd
adc
mov
pop
cmp
popa
sub
es
pop
or
mov
jb
cmpsb
mov
jp
push
lret
and
les
repnz
jp
xchg
fstpt
call
dec
adcl
cmp
pop
arpl
push
jmp
out
ficoms
add
movl
stos
or
jle
xchg
lret
movsl
ss
jmp
stc
jbe
sbb
or
mov
jno
and
int
mov
xor
pusha
ss
sub
cs
ss
into
stos
xor
and
mov
xchg
gs
mov
stos
xchg
sahf
mov
lds
aad
out
fstps
push
out
or
xchg
inc
inc
and
dec
mov
jge
lcall
pop
movsl
movsl
pushf
jl
pop
jge
in
sbb
or
adc
jnp
add
dec
movsl
cmpsl
and
mov
stos
out
xchg
mov
loop
imul
lods
jno
adc
subb
loopne
das
inc
cmc
in
push
mov
dec
movsb
and
sbb
mov
popf
lods
xor
std
lods
xchg
cli
adc
sub
dec
sub
pop
pop
hlt
push
loop
adc
adcl
lods
mov
fcompl
lahf
ljmp
push
mov
mov
push
mov
outsl
jne
stos
and
test
test
xor
out
mov
mov
lret
mov
cli
test
lock
fs
adc
ficoml
es
shrl
leave
xchg
mov
out
push
xor
mov
sub
lea
xor
fldcw
sbb
sahf
sarb
sbb
or
loop
icebp
cmc
data16
mov
loope
or
in
movsl
repz
pop
sbb
mov
jb
stos
mov
push
mov
sbb
lods
movsb
lcall
fidivl
ficomps
in
mov
xor
xchg
je
stos
mov
ficoms
sub
jmp
fs
sub
xchg
inc
jo
dec
jne
test
jb
fstps
add
xchg
std
jg
in
pop
fwait
pop
rep
xor
add
xchg
add
mov
xchg
jecxz
push
inc
add
outsl
adc
adc
ds
pop
lods
pusha
arpl
ss
in
pop
push
sub
popa
pop
aaa
dec
add
inc
pop
in
loop
pop
test
lahf
jb
adc
fnop
xor
out
mov
mov
inc
pop
mov
sbb
lock
fildll
sbb
cli
xchg
insl
pusha
cs
push
stos
je
or
fimull
jb
jl
pop
mov
cwtl
sbb
jb
and
lods
mov
mov
lock
shlb
push
push
jno
das
das
loopne
lret
mov
jge
mov
imull
jp
outsl
je
cld
daa
add
aam
or
cli
push
inc
and
and
jle
and
mov
jp
icebp
mov
lods
pop
mov
bound
stos
arpl
sub
adc
std
or
push
lea
cmp
das
xorb
mov
stos
data16
clc
jnp
lds
cmp
ds
xchg
adc
iret
ficoml
sbb
inc
scas
xchg
mov
cwtl
mov
stos
sbb
sub
das
cmpsl
adc
lret
jecxz
fistps
aas
sub
add
cltd
xchg
mov
in
out
stos
aad
jne
pop
clc
xchg
mov
scas
jno
mov
adc
frstor
daa
jo
lds
ss
xchg
mov
popf
push
ret
dec
mov
aas
and
dec
and
cmp
pop
push
mov
je
pop
scas
lret
arpl
test
cld
sub
adc
push
add
jno
jecxz
add
xchg
xchg
mov
xchg
popa
xchg
ror
in
sbb
in
sbb
scas
addr16
out
lea
stos
lds
or
ret
gs
xchg
out
pop
sbb
add
mov
xor
icebp
insb
imulb
push
jae
stc
stc
daa
cld
je
sub
xor
loop
fsubr
ret
pop
insb
arpl
adc
xor
xchg
out
mov
outsl
sbb
out
in
adc
or
jp
mov
std
mov
out
xchg
in
mov
outsb
cmp
mov
fildl
or
cmp
js
gs
addl
mov
idiv
iret
std
mov
bound
add
add
dec
mov
movsl
hlt
pop
dec
pop
mov
sub
jne
mov
sbbb
mov
repz
adc
test
cmp
mov
pop
cmovs
pop
and
in
js,pn
adc
insb
rcl
or
ljmp
enter
clc
pop
push
popf
outsb
inc
cmp
push
sbb
test
adc
dec
insl
cmp
lds
dec
adc
mov
mov
into
into
and
xor
stos
fcomi
push
push
lea
cwtl
push
mov
push
mov
jns
pop
andb
mov
jle
jb
pop
xor
repz
sub
jmp
xorb
shll
xlat
mov
aam
xlat
mov
dec
aaa
enter
daa
add
xor
mov
test
or
roll
jmp
insb
mov
dec
loopne
push
mov
ja
push
xchg
cltd
ja
cmp
cmp
aas
adc
cmp
bound
or
xor
jb
pop
orl
ret
loope
scas
adc
xchg
mov
fnstenv
sub
test
cmp
movsb
scas
dec
fmuls
mov
sbbl
push
cmp
and
mov
bound
sbb
sub
cmpsl
ficompl
xchg
xorl
jne
outsl
insb
cmp
mov
sub
cltd
mov
loope
lock
stos
xchg
ret
hlt
sbb
pop
scas
xor
in
jmp
icebp
cmpsl
and
in
jge
in
xor
cmpl
mov
in
inc
pop
jl
les
xor
notb
add
dec
xlat
repnz
mov
or
sub
xor
push
mov
ljmp
daa
aas
mov
sahf
sbb
pop
hlt
sarl
sub
cmc
mov
jbe
hlt
jb
popa
add
xor
popf
faddl
sub
cli
pusha
sub
bound
out
or
repnz
test
in
mov
mov
js
pop
jnp
inc
ds
xchg
das
dec
and
xchg
out
popa
pop
movsl
cld
leave
xor
adc
push
test
loopne
add
mov
mov
loop
sbb
ret
shll
ljmp
call
pop
add
out
ret
mov
out
mov
inc
inc
addb
xchg
add
arpl
xlat
addb
fsubrl
in
mov
add
cli
adc
mov
mov
mov
cli
sbb
add
loop
aam
aas
lahf
imul
test
jge
test
mov
test
push
pusha
xor
xor
jecxz
mull
rorl
pop
icebp
sbbl
inc
imul
je
xchg
inc
or
or
mov
iret
fchs
dec
sbb
lock
aam
scas
pop
lret
push
mov
xchg
fcoml
xor
adc
mov
fmull
mov
inc
pop
test
je
push
inc
test
ljmp
mov
call
cmp
xchg
lret
jge
adc
into
pop
pop
js
ret
fistpll
lods
fbld
out
cmp
fcomi
imul
out
mov
ss
jecxz
sti
mov
and
lods
inc
mov
lret
jmp
xchg
xor
add
repz
xor
sub
in
dec
mov
jge
jge
add
mov
or
add
cmpsl
or
or
mov
jb
les
xchg
jge
cmpsl
mov
addr16
jecxz
pusha
pop
inc
ret
mov
push
in
ret
push
mov
lock
mov
ds
pop
jmp
sbb
pop
sub
or
cltd
out
scas
insl
std
shll
es
test
lret
clc
das
lret
lods
out
shr
pop
lods
dec
in
fs
imul
in
pop
scas
push
cmp
and
mov
iret
push
adc
movsl
ljmp
fistpll
mov
outsb
pop
rcrb
and
fisttps
push
in
cli
loop
jno
es
xor
dec
call
xchg
inc
xor
cltd
cwtl
sub
loop
andl
std
cmp
notl
xchg
sti
ja
jne
xor
test
inc
out
stos
inc
cmp
sahf
es
mov
xor
mov
movb
arpl
aas
xchg
fimuls
sub
dec
das
stos
inc
fcmovne
jo
mov
iret
sub
aaa
and
shrl
clc
dec
data16
scas
jns
push
mov
adc
pusha
movb
dec
push
idivb
mov
rcrl
and
push
pop
imul
insl
repz
test
push
push
jle
xlat
outsl
mov
lcall
add
xchg
add
test
leave
xor
test
inc
mov
dec
jns
add
sub
push
ljmp
inc
xchg
pop
adc
sbb
jp
shl
mov
or
xor
call
and
xchg
mov
and
jl
push
frstor
cld
rcrb
push
or
jnp
mov
ljmp
nopl
cmp
inc
dec
popa
xor
dec
js
movsl
push
mov
adc
pop
incl
insb
inc
enter
xchg
sbb
add
fistl
shlb
fldl
jns
popf
aam
dec
dec
cmp
dec
test
mov
test
adc
mov
push
hlt
inc
loope
movsl
outsb
xchg
aad
sub
aaa
lcall
pusha
leave
or
pop
pop
repz
and
sub
stos
xor
dec
subb
push
loop
jb
jecxz
sahf
xor
jmp
cmp
ljmp
sbb
test
in
add
mov
pop
push
add
mov
mov
cli
adc
mov
jne
pushf
or
das
pop
call
adc
adc
clc
mov
daa
add
cmp
dec
jnp
dec
fwait
loope
rorb
lcall
lds
mov
outsl
inc
adc
ret
fsts
and
add
jno
pusha
inc
clc
lock
xchg
lds
ds
fadds
pop
xor
decb
dec
jp
push
jo
lahf
movsl
push
lret
push
pop
nop
jle
cmp
pusha
mov
or
movsb
mov
mov
mov
sbbl
popa
inc
or
or
out
add
push
xor
lods
pop
and
mov
push
sbb
adc
lea
cmp
jnp
mov
mov
rcr
push
rcl
sub
push
xchg
call
insb
pop
xor
or
scas
xchg
dec
adc
or
xchg
stc
pusha
call
xchg
cmp
fimuls
mov
insb
mov
ljmp
or
pop
sbb
mov
movsl
sub
std
lret
add
adc
or
pop
out
repz
mov
add
xchg
add
outsb
test
xchg
out
mov
in
sub
pop
bound
mov
fyl2x
pslld
mov
pop
fdivs
xchg
lret
test
push
xchg
pop
addb
or
inc
push
insb
aas
lea
mov
jo
stos
dec
mov
shrd
mov
dec
shll
movsb
mov
and
jge
and
rol
mov
push
andl
std
adc
mov
stos
test
insb
movb
pop
adc
xchg
cli
sub
js
test
cmp
out
xor
xor
lock
lahf
add
inc
cmp
adc
inc
cli
fistpll
mov
std
xor
fisttpll
aam
xchg
mov
mov
fld
jb
mov
mov
addb
push
mov
fsts
std
fisubs
sarb
mov
ss
cmp
cmp
lods
xchg
pusha
lret
adc
sbb
sbb
stos
mov
inc
cmc
mov
pop
rol
fucom
addb
mulb
inc
inc
dec
mov
aas
push
dec
adc
out
fisubs
outsb
sub
fs
lea
sbb
gs
mov
or
jne
les
shrl
dec
pusha
and
mov
push
push
ljmp
fdivrl
ret
and
and
mov
les
push
push
mov
add
push
push
out
ja
push
sbb
idivb
cmp
sub
test
leave
push
scas
cmpsl
movl
or
inc
mov
and
sahf
push
fisttpl
int
mov
ret
pop
inc
mov
xor
fistpll
xchg
xchg
mov
adc
mov
fistpll
mov
dec
fs
cmp
movsb
xchg
xlat
js
movsl
ret
xchg
ds
ret
shlb
push
inc
ss
ja
fcomps
ficompl
daa
xchg
jb
ret
cld
or
icebp
jge
nop
movsb
xor
aam
adc
sbb
pop
and
clc
scas
push
fsubrp
mov
int
frstor
inc
loope
or
mov
nop
shll
push
push
mov
dec
dec
xor
jmp
jge
cld
add
leave
xchg
insl
mov
aam
inc
fadd
jp
fst
xchg
add
inc
xor
sub
stc
pop
out
xchg
imul
sub
rep
subb
jns
fs
in
ljmp
mov
cwtl
test
aam
aas
fidivl
jno
and
pop
stos
sub
jmp
mull
testb
fstl
imul
or
mov
push
gs
sbb
xchg
add
mov
add
outsb
clc
mov
stos
cli
mov
sub
leave
dec
outsb
dec
mov
scas
pusha
movl
pop
fwait
repz
push
add
push
aam
pop
ret
xor
inc
into
fildl
mov
pushw
jne
fwait
sub
movsb
data16
mov
sub
adc
std
and
mov
cs
fistpll
stos
adc
scas
push
adc
and
dec
adc
push
in
rclb
in
mov
mov
js
ret
jg
push
cmpsl
xchg
jmp
lock
xchg
jne
sbb
sbb
addr16
sub
or
lret
cmp
sbb
xor
push
mov
jae
jl
lock
ret
push
rorl
adc
lods
lret
jns
sub
jb
sub
xchg
adc
arpl
or
sahf
insb
test
mov
mov
lock
sbb
xchg
and
xor
adc
scas
mov
inc
and
dec
dec
mov
imul
sti
rorl
bound
pop
movsl
mov
xor
or
movsb
xor
rorb
xchg
mov
adc
jno
lahf
sti
jle
gs
jns
pop
addb
gs
imul
mov
dec
jns
lock
mov
dec
mov
cmpsb
dec
in
or
add
inc
into
movsl
rol
ficomps
push
adc
sbb
cld
sbbl
add
jnp
es
aaa
mov
mov
stos
inc
ja
dec
cmc
cld
dec
loope
ror
jbe
cmp
xchg
mov
out
sbb
aam
inc
lock
push
inc
stc
mov
sub
scas
mov
add
aam
movsb
shl
add
dec
out
ja
idiv
pop
out
dec
mulb
jo
aad
pop
mov
add
in
add
cli
jne
xchg
stos
sbb
test
les
out
js
and
lods
or
inc
and
dec
xchg
into
in
lret
fstpt
pop
jns
pop
clc
and
add
inc
mov
pop
mov
fwait
mov
repz
in
sti
sbb
mov
cmp
faddl
inc
imul
and
xor
leave
dec
dec
roll
dec
add
popa
jle
ret
fnstsw
into
movl
and
inc
inc
outsb
pushf
dec
mov
adc
and
imul
nop
mov
rcrl
inc
pusha
imul
jge
movsb
mov
aad
ss
adc
jo
jb
ret
lahf
mov
or
lock
test
es
or
adc
inc
mulb
jg
push
adc
push
stos
xlat
adc
repz
mov
xchg
ret
out
dec
mov
cmpsl
sub
push
jle
xchg
xchg
lcall
sti
int
enter
outsb
jl
mov
in
add
loopne
arpl
sbb
test
jmp
fs
fimuls
fidivs
mov
mov
push
lret
sbb
jbe
and
dec
rcl
enter
mov
mov
les
inc
roll
add
inc
nop
sbb
or
movsb
std
daa
xor
jmp
ss
mov
iret
xlat
aam
adc
cltd
ret
out
lahf
insb
dec
xor
jle
mov
dec
loope
xlat
sub
dec
jbe
jo
xchg
out
dec
pop
jbe
out
or
in
sbb
pop
xlat
fists
aam
enter
mov
in
push
adc
icebp
shrl
repz
loope
ljmp
fisubrs
aaa
mov
adc
lods
push
mov
je
pop
sbb
jmp
cmp
movsb
shrb
cld
sub
es
adc
mov
in
js
jmp
lea
cmp
or
in
flds
mov
cmp
inc
inc
push
dec
jle
movsl
mov
jecxz
ss
add
adc
and
push
shll
cmp
jo
loopne
mov
pop
in
and
add
sti
mov
test
fstpl
xchg
add
push
insb
and
roll
fsts
add
push
jno
negl
cmp
data16
sub
jmp
in
adc
jecxz
int3
jl
sbb
ds
outsb
add
fnstcw
cmp
mov
and
mov
and
xchg
mov
pop
add
mov
out
repnz
iret
sbb
sub
out
test
sbb
mov
add
adc
mov
xor
cltd
call
fnstcw
inc
in
sub
xchg
push
or
adc
movsb
mov
ds
int3
lcall
int3
mov
gs
xchg
xchg
rorb
std
mov
sbb
lods
xorb
gs
pop
pop
sbb
jge
push
xor
nop
lahf
mov
add
mov
imul
mov
mov
xor
dec
xchg
pop
xchg
std
and
adc
repnz
cltd
xor
dec
into
sub
vpmovzxbw
aaa
out
ret
sub
jo
call
or
sub
or
addl
inc
dec
aam
aas
dec
femms
sub
push
push
mov
sub
sbb
out
hlt
test
sbb
sti
push
or
and
cmc
inc
imul
pop
xchg
mov
popa
in
push
inc
mov
iret
adc
add
or
es
in
sarl
sbb
out
inc
out
test
test
xor
adc
sahf
sbb
ret
mov
outsl
xchg
jp
movlps
addr16
ss
mov
mov
addl
add
push
dec
enter
shrl
loope
mov
cmp
dec
mov
push
pop
and
lret
iret
mov
jecxz
scas
nop
add
int3
pop
xor
iret
es
push
push
bound
jnp
dec
test
mov
mov
flds
test
mov
das
sbb
push
push
jbe
sbb
sti
andb
mov
out
iret
xchg
and
je
push
xlat
mov
imul
inc
sub
decb
inc
aam
add
sti
add
xor
sahf
xor
mov
popl
add
inc
xchg
jb
jbe
repz
pop
xchg
call
mov
mov
xchg
sarl
dec
popa
and
xchg
jnp
inc
hlt
push
mov
jne
mov
in
jns
iret
pop
mov
adc
jmp
aas
sti
stos
jle
mov
mov
mov
lret
dec
jne
pusha
xor
mov
addr16
pop
fbld
or
mov
sub
loope
or
daa
and
or
dec
adc
mov
mov
push
push
adc
aad
lahf
ret
enter
dec
jmp
arpl
mov
cmpsl
mov
outsb
pop
xor
mov
mov
inc
sbb
stc
imul
ss
ds
lahf
xchg
mov
cs
dec
hlt
sbb
popf
shll
in
push
mov
dec
loopne
clc
mov
xor
shl
jb
pop
sub
jmp
enter
fsubs
dec
ret
jge
xchg
shlb
test
jg
pop
cli
pop
adc
or
mov
cmpl
cmpsb
fistps
xchg
sbb
mov
shll
popa
int3
pop
imul
pop
pop
bound
mov
xchg
insl
jb
push
fdivs
xchg
stc
test
fadds
je
or
jmp
jae
int3
xchg
inc
or
pop
mov
daa
add
sbb
aas
ret
xchg
jge
mov
sbb
adc
sub
inc
dec
test
fwait
mov
stos
test
mov
cmpsl
stc
movsb
mov
insb
jae
and
nop
aam
xor
push
mov
pop
outsb
sbb
in
cmp
out
fsubr
push
fisubrl
xchg
movsb
imul
in
pop
mov
add
ja
mov
roll
add
rolb
add
testb
sub
xchg
pop
mov
js
inc
iret
jae
repz
adc
lods
pop
int3
dec
cld
or
mov
sub
or
fwait
lcall
or
dec
shll
push
mov
mov
sbb
adc
jne
mulb
incl
dec
ret
xchg
test
mov
add
std
in
mov
mov
std
pop
xor
push
int
in
xchg
add
xchg
add
sbb
sbb
dec
repz
rclb
shll
jae
add
in
fidivs
loope
cwtl
rclb
jne
notb
sti
out
lret
ss
rolb
mov
ljmp
cmp
out
push
or
pop
jne
xchg
xchg
and
xlat
cmp
jbe
pop
mov
repnz
dec
jp
rcrb
lret
enter
dec
test
pop
int3
rcrb
pop
mov
fistpl
or
add
jnp
adc
arpl
cmp
jg
mov
adc
scas
cwtl
imul
adc
xor
into
or
jge
enter
sub
cli
aam
push
adc
add
sub
jmp
add
xchg
inc
pop
idivl
popa
ja
or
mov
add
push
test
sub
mov
mov
cmp
push
xchg
add
xchg
or
fwait
xchg
loope
ficompl
lret
xor
mov
xlat
dec
shlb
cmp
inc
test
cmc
push
sbb
xchg
and
or
adc
icebp
push
push
inc
adcl
lret
pop
rcll
shll
ret
jne
cmpsl
gs
cmp
dec
xchg
dec
xchg
mov
sahf
dec
in
add
xchg
mov
push
lret
and
or
dec
mov
xchg
xchg
andl
scas
into
rolb
push
test
push
sub
cmp
frstor
mov
ljmp
push
pop
inc
scas
aaa
xor
rolb
das
iret
mov
jbe
lods
out
leave
dec
and
clc
sbb
cli
or
add
push
jecxz
and
loopne
pusha
loop
jb
mov
add
dec
into
inc
clc
push
jmp
int
fneni(8087
scas
test
lahf
fimull
pop
shrl
add
add
mov
or
sbbb
jnp
loopne
adc
nop
pop
inc
push
and
xorl
arpl
je
mov
cmp
mov
cmp
out
rcl
fistpl
and
pop
in
movsb
mov
inc
xor
sub
add
repnz
out
sub
movd
push
xchg
add
mov
mov
inc
in
xchg
in
lahf
ss
sbb
fwait
mov
mov
movsl
mov
jg
rcrl
cmp
mov
adc
adc
mov
mov
xchg
lock
inc
inc
repnz
lds
mov
lea
fidivs
mov
jne
xchg
fldt
jmp
push
sub
pop
pop
dec
pushf
nop
push
push
mov
nop
fs
push
jnp
aaa
push
imul
lret
imul
aas
call
mov
adcb
sbb
gs
or
sub
adc
and
mov
cltd
rcr
lret
fcmovbe
movsl
mov
xor
xor
push
xor
inc
gs
cltd
lret
stos
cli
cltd
scas
dec
out
repz
xchg
cmpsl
push
fidivs
jle
sahf
xor
pop
pusha
mov
aad
or
nop
pop
xchg
inc
cltd
arpl
jge
outsl
mov
test
aam
aad
loopne
cmp
pop
mov
int3
andl
packssdw
cmpsb
sub
movsl
xchg
push
out
jb
stos
ret
das
inc
add
shrl
inc
jmp
lea
mulb
sbb
outsb
inc
xchg
pop
xchg
dec
xor
add
scas
cmpb
mov
dec
fcmovnu
cmp
cmp
out
mov
cwtl
add
mov
push
imul
pop
mov
and
sbb
aad
icebp
fsubrl
jecxz
testb
jmp
mov
xchg
add
lock
sarb
mov
sbb
mov
ret
ret
xchg
out
aad
aad
mov
pushf
mov
inc
cmp
inc
adc
insl
out
leave
push
jl
sbb
lret
xchg
es
jns
mov
pop
aad
xlat
sarb
push
out
pop
out
jmp
pop
in
push
adc
pop
mov
dec
inc
repnz
fbstp
mov
clc
xchg
cmc
int3
push
aaa
sbb
add
insb
out
mov
or
adc
mov
or
xlat
pop
add
out
pop
sub
xchg
dec
mov
hlt
mov
xor
ljmp
lock
xchg
lea
cli
in
lret
mov
fldl
adc
add
popa
data16
rcrl
xor
or
xchg
add
xchg
add
push
and
addl
aas
or
sti
loope
call
push
add
test
xor
stc
sbb
sarb
xor
js
ds
push
int3
push
insb
cmpl
out
movsb
jge
das
push
mov
xchg
xor
shrb
roll
mov
arpl
paddsb
pop
mov
mov
mov
cmp
mov
lock
add
mov
fsubrl
scas
jl
jle
fistpll
xor
jno
jbe
in
mov
sub
or
dec
loop
push
inc
pushf
mov
xchg
aaa
jle
mov
xorb
push
repz
addb
lahf
ljmp
mov
popa
lods
scas
fisubl
cmpsb
je
cmp
xchg
call
scas
mov
fdivrl
jle
data16
pop
and
push
stos
add
cmpsb
into
clc
cmp
jnp
dec
jnp
and
pop
popa
inc
insb
xor
fildll
dec
sub
xor
sub
mov
scas
fcoms
push
xor
pop
gs
leave
cwtl
push
push
push
stos
frstor
sub
outsl
xor
sub
stos
sbb
add
iret
lahf
std
popf
mov
jb
mov
insb
jl
inc
or
cli
sbb
mov
aam
jnp
das
mov
pop
rclb
add
xchg
or
dec
inc
mov
mov
test
loop
outsl
push
out
in
insl
push
mov
push
mov
add
je
inc
ds
es
enter
adc
cmpsl
mov
mov
repnz
sbb
xor
and
sbb
dec
and
pop
ja
sub
in
dec
mov
repnz
and
adc
sub
dec
dec
or
cmovs
xchg
mov
inc
jb
sub
push
sbb
sti
cwtl
sbb
cli
test
dec
ss
adc
outsl
push
and
out
loopne
pop
mov
shld
push
repnz
clc
mov
jne
mov
addr16
dec
inc
mov
jge
js
adc
cmp
mov
mov
cltd
cmp
mov
pop
imul
out
and
je
pop
sbb
add
lods
xchg
adc
int
add
adc
mull
pop
push
faddl
jnp
fldt
sbb
add
cmp
cli
in
jg
loopne
cmp
out
jl
add
xchg
add
in
mov
mov
or
cmc
in
mov
inc
sbb
xchg
adc
mov
fldcw
or
xchg
inc
or
sub
clc
pusha
xchg
mov
or
scas
subb
push
lock
stos
add
imul
dec
shrl
cmp
or
testb
add
sub
sub
jo
mov
jle
sub
cmp
or
and
and
ret
cmp
scas
shlb
xchg
out
outsb
sbb
fstl
loop
out
fwait
mov
or
jb
mov
pop
inc
add
dec
xor
ret
adc
mov
or
stos
mov
lock
and
and
aas
fstps
adc
bound
sub
bound
test
lcall
xlat
das
adc
divl
out
and
xchg
mov
adc
stos
sbb
ja
scas
orl
push
cltd
push
dec
and
pop
outsl
ljmp
xor
inc
in
inc
cltd
lods
jo
inc
or
or
push
repz
mov
lret
pop
push
outsl
pop
push
mov
sbb
scas
paddw
cmpsb
mov
int
push
addr16
imul
cmc
dec
mov
and
mov
hlt
test
xor
lea
pop
scas
movsb
rcrb
iret
aad
jmp
or
or
inc
movsb
les
out
aad
out
push
jmp
jae
cmpsl
shrb
xchg
add
imul
jbe
push
mov
fmul
jo
outsb
loopne
or
push
fcoms
fstps
add
jl
cmp
xor
fimuls
adc
push
sbb
jmp
cs
pop
mov
fsubrl
inc
add
or
dec
xchg
movsl
jl
xor
ret
sarb
inc
lds
nop
add
test
and
sbb
std
fdivr
jmp
addr16
xor
das
pop
imul
adc
mov
incl
call
jo
in
pushf
aas
in
stos
dec
adc
mov
jo
hlt
call
loop
sahf
sbb
and
push
push
cmpsb
and
ss
out
add
add
repz
mov
xor
jno
push
das
push
cmpsl
mov
test
bound
clc
mov
pop
or
or
data16
sbb
adc
jne
test
sbb
xor
xchg
mov
or
movsl
pop
cmp
pop
data16
jno
outsl
shrl
scas
push
rcrl
dec
into
cmp
xor
mov
xchg
popf
ja
dec
dec
insw
and
xor
jne
push
and
dec
shll
stos
or
lods
sub
sub
and
imul
js
les
out
and
cmpsl
jl
hlt
scas
stos
inc
scas
cltd
sub
popf
movsl
dec
repnz
mov
and
in
pop
gs
ret
ror
push
sti
push
and
test
fstps
sti
rolb
and
push
jmp
iret
shlb
stc
mov
and
clc
mov
ljmp
mov
cwtl
sarb
inc
inc
xor
cmp
pop
push
mov
insl
and
popf
pop
rcll
push
xchg
sbb
sub
inc
fildl
sub
loope
mov
adc
mov
pop
addl
mov
mov
lea
or
sbb
leave
aaa
in
inc
inc
test
inc
add
in
xor
icebp
mov
pusha
sbb
and
bound
jmp
pop
bound
test
inc
hlt
mov
scas
xchg
pop
or
dec
lcall
mov
jno
sbb
int3
xchg
mov
jae
adc
cli
jne
movsb
sbb
jo
jmp
cmp
jecxz
xor
cld
pop
rol
jle
stos
movsl
add
jmp
xchg
push
sub
filds
pop
mov
push
std
lahf
cld
and
or
or
jbe
xchg
pusha
fsubs
mov
outsl
cmc
and
insl
mov
jno
stos
lcall
sbb
gs
out
cli
pop
mov
xchg
xor
xchg
push
es
sub
mov
shll
adc
fisubrs
je
lods
aam
and
insb
leave
clc
out
das
mov
mull
inc
xor
enter
push
faddl
outsl
mov
mull
mov
call
add
cmp
mov
add
jne
mov
add
sbb
adc
dec
sbb
sti
repz
or
fcomps
lea
shl
popf
je
mov
call
call
mov
xlat
fs
add
lcall
adc
mov
jae
andb
cmpsb
push
call
hlt
subb
push
xchg
out
cmp
dec
cs
mull
xor
inc
testb
pop
add
movsb
popa
mov
es
push
xor
call
mov
repz
and
test
xchg
dec
push
repnz
les
mov
push
das
fnstenv
testb
jno
pop
cmp
push
mov
cmp
in
and
inc
xorl
sarb
lock
jns
add
jno
adc
xchg
mov
add
dec
imul
inc
inc
mov
in
inc
push
loope
div
mov
cmp
and
sbb
add
pop
inc
push
mov
pop
jge
shl
mov
ss
sub
cli
add
inc
cmp
ficompl
into
dec
gs
cmp
add
int3
lcall
jl
in
inc
cmp
test
orl
std
rorl
cli
push
gs
mov
mov
in
out
popf
fsubr
fucomi
inc
xchg
negl
add
das
sub
push
xchg
cmp
repz
inc
insb
in
jmp
push
cltd
sbb
ror
stos
pop
sbb
lock
push
notb
aam
xorb
and
movsb
pop
xchg
addr16
ljmp
inc
inc
cmpsl
imul
cmp
push
or
cli
repnz
mov
push
pop
push
test
pop
ret
fisttps
jg
out
shll
pop
call
add
mov
mov
shl
cmp
fcompl
mov
pop
jp
imul
adc
nop
mov
in
sub
aam
testb
mov
cwtl
sub
pop
es
push
aas
out
add
incl
lds
pop
dec
and
data16
xor
enter
dec
loopne
into
mov
jg
cmp
add
mov
fwait
add
inc
mov
and
push
mov
add
push
cmp
and
imul
push
adc
aas
mov
pop
push
and
lcall
jge
das
mov
popf
xchg
or
ret
mov
pop
xor
or
loopne
jae
aas
xlat
ja
or
pop
cmp
mov
in
jmp
mov
int
mov
lret
lock
call
in
loop
out
lods
mov
push
ret
fistpl
xor
ficomps
pushf
mov
aas
inc
mov
les
into
insl
pop
les
cmp
and
roll
push
fsts
jp
fdivrl
shrb
jno
insb
jmp
int3
orb
push
mov
dec
cltd
das
inc
or
movsl
mov
fwait
pop
push
roll
mov
rorl
out
push
je
aaa
adc
ja
add
subb
fxtract
mul
jae
jne
xorl
pop
xchg
cmp
pushf
or
std
push
mov
or
push
stos
mov
icebp
popf
loope
stos
aaa
dec
rcrb
add
jmp
cltd
jnp
xor
jbe
inc
push
in
fisubl
out
hlt
jo
in
jle
call
mov
mov
or
int3
flds
cmp
dec
add
sarl
push
lcall
or
cmp
rcrb
add
loopne
jmp
ret
jp
scas
dec
adc
outsl
scas
inc
mov
lods
test
push
stos
imul
push
call
mov
mov
call
leave
sbb
pop
mov
pop
and
pop
ret
clc
jbe
xchg
jne
jb
jmp
sahf
ds
pop
xchg
dec
fsubs
dec
mov
pop
fcoms
mov
scas
shrb
es
adc
sbb
xchg
sbb
xchg
in
mov
xor
shlb
mov
cmc
and
stc
loop
aaa
ret
xchg
adc
pop
aaa
lea
std
adc
repnz
cwtl
dec
push
inc
jl
ss
jae
sarb
mov
dec
sub
cmpsb
aas
rclb
lock
jg
mov
loop
jp
leave
fildl
pushf
mov
fdiv
pop
popf
dec
sub
cmp
xor
cmp
jnp
popf
lds
jp
shrl
sbb
add
mov
cmp
jle
xor
and
add
lds
xor
pop
and
lret
xchg
imul
insl
inc
xchg
xor
shl
scas
rcrb
rcrl
sub
jnp
and
inc
outsl
into
lods
dec
sti
pop
pop
idivb
inc
dec
jge
and
clc
dec
stos
jecxz
test
push
xchg
xchg
mov
push
movsb
sahf
xchg
pop
cmpsb
and
cmpsb
icebp
sub
das
cmp
int
dec
in
inc
loope
clc
cli
dec
or
aaa
pop
std
aam
mov
pushf
int3
push
jb
cwtl
sub
jg
addb
mov
repnz
in
mov
popf
inc
mov
mov
cli
hlt
lret
jg
sub
mov
into
sub
test
mov
push
mov
jp
cmp
int3
or
pop
cmpsb
icebp
jmp
incl
outsb
sbb
inc
cltd
int3
xor
ja
pop
cli
add
and
mov
push
and
stc
js
inc
imul
inc
ss
ljmp
mov
inc
push
leave
test
pop
lods
test
mov
mov
out
cmpsl
hlt
out
lock
rclb
pop
adc
std
mov
mov
xor
and
cli
and
pop
outsl
pop
mov
je
int
repz
lcall
clc
lods
mov
inc
out
mov
xchg
stos
or
mov
rcll
test
xlat
mov
out
cmpsb
sbb
inc
pop
mov
je
mov
inc
mov
and
mov
and
mov
and
ss
lret
fwait
scas
into
mov
sbb
xor
mov
push
cmp
test
sbb
lcall
roll
pop
mov
ret
cwtl
add
dec
jnp
add
insb
xchg
mov
or
push
mov
ja
faddp
sub
fdivrs
testl
dec
stos
push
xchg
incb
pop
int
xor
in
hlt
jmp
sbb
sub
aas
mov
ss
in
sahf
fldl
xchg
cmp
sub
add
aaa
outsb
in
mov
rcrl
es
cmpsb
mov
mov
push
hlt
push
push
cmp
cmp
ret
out
push
push
hlt
imull
inc
jge
xor
pushf
arpl
lods
add
cmp
out
idivl
mov
cmpl
add
add
cmp
lretw
xor
in
testl
push
mov
mov
in
jmp
std
ljmp
es
mov
xlat
dec
shll
icebp
pop
rorl
mov
lds
jp
imul
jmp
das
in
xchg
cli
and
or
es
dec
shrb
inc
test
popa
ja
xchg
sub
cli
imulb
lock
loope
out
pop
sbb
pusha
mov
push
push
jb
and
addr16
mov
dec
loop
mul
sub
js
inc
les
pop
mov
push
popf
clc
adc
lret
aam
icebp
pop
inc
lcall
lods
ljmp
sbb
jmp
mov
pushf
movsl
adc
shr
dec
pop
enter
iret
or
and
sahf
aam
xor
mov
mov
popf
pop
add
jo
jg
mov
pusha
sarl
cmp
push
jno
outsb
mov
mov
pop
gs
call
pop
sub
dec
shl
insl
jl
sti
push
into
fcmovne
mov
jae
pop
mov
xor
fsubp
mov
jmp
cmpsl
push
sbb
or
push
jmp
dec
pop
cmp
lea
je
jb
inc
test
addr16
jo
fstpl
insb
mov
pop
loop
test
std
cmc
and
in
imul
sub
jl
das
mov
lret
lods
in
idivb
gs
nop
clc
jne
xchg
add
mov
adc
push
add
int
cmp
cmpw
shrb
flds
sbb
add
mov
xchg
std
ret
shr
dec
mov
sub
push
cmp
out
sub
mov
mov
add
out
es
movsl
pusha
andb
mov
imul
mov
in
fstl
loopnew
fldcw
paddq
jle
inc
lret
fcmovu
jecxz
jmp
sub
push
cltd
pop
xor
push
arpl
cmc
pop
mov
outsl
push
out
mov
pop
mov
ss
fmul
imul
mov
pop
mov
jae
inc
xchg
cld
sbb
cltd
add
gs
fcompp
out
gs
mul
insl
sub
xchg
add
je
jge
mov
fwait
stc
dec
jl
imul
push
sbbl
ss
fmuls
or
pop
mov
shl
sub
fmul
dec
mov
jecxz
xor
mov
sbb
mov
mov
inc
push
int3
inc
mov
out
outsl
jle
pop
push
xchg
sub
les
pop
mov
mov
add
lock
bound
pop
fidivrl
mov
lods
jecxz
push
repnz
aaa
iret
lea
mov
out
push
test
out
stos
jne
pop
fiaddl
nop
mov
inc
xchg
push
ss
ja
inc
decl
mov
jmp
inc
inc
idivb
mov
cmp
or
mov
int
dec
xor
xchg
jge
int
popf
xor
fsts
std
or
jle
jle
xor
mov
jmp
faddl
xchg
add
sub
sbb
and
fiadds
and
inc
lret
frstor
mov
xor
loopne
xor
sbb
xchg
mov
js
xchg
cs
dec
inc
mov
fwait
pop
ja
fwait
cmpsb
or
xchg
adc
mov
in
xor
loop,pt
adc
push
adc
mov
cmp
mov
pop
pop
leave
shll
cld
jbe
dec
mov
repnz
mov
jge
mov
or
rorb
mov
add
fwait
adc
inc
push
les
test
pop
arpl
aad
loopne
push
out
clc
adc
gs
in
mov
mov
xchg
inc
inc
sbb
mov
xor
cmc
mov
fidivl
xor
lea
mov
out
dec
int3
ja
mov
aam
popa
pop
mov
scas
ret
lret
inc
cmp
out
or
jmp
mov
out
or
add
repnz
mov
add
loop
dec
and
xor
xor
insb
sub
inc
loop
lcall
fs
mov
mov
push
enter
jne
pop
push
scas
lcall
negl
loopne
jmp
push
xor
fildll
ljmp
adc
arpl
sti
adc
sub
mov
add
or
sbb
std
sbb
dec
and
das
xor
ret
movsl
in
sbb
push
mov
movsl
aas
int
and
repz
dec
inc
xlat
leave
xor
jb
push
testl
fistpl
mov
sbb
inc
hlt
dec
jbe
fsubl
adc
into
push
cmp
pop
arpl
idivl
mov
fprem1
shrd
pushf
dec
mov
add
xchg
push
mov
fwait
aaa
push
js
lahf
pop
cmpsb
sbb
sbb
mov
mov
pop
sbb
sti
cwtl
sbb
pop
push
in
sub
xchg
sbb
mov
push
inc
sbb
cmc
adc
mov
push
repz
std
dec
push
aam
add
lret
cmpsl
inc
mov
mov
pop
sbb
jmp
les
lret
icebp
push
shll
pop
sbb
push
push
sbb
inc
mov
dec
neg
stc
mov
mov
scas
mov
les
cmpsl
imul
lret
lds
imul
in
lock
hlt
sub
pop
fnstenv
push
stc
shl
xchg
mov
lret
aam
xchg
push
je
nop
loop
or
inc
or
mov
jne,pt
sub
clc
push
sbb
xchg
int
sbb
mov
shll
or
sub
and
mov
adc
cmp
out
cmp
into
js
xchg
call
inc
mov
mov
push
adc
adc
xor
inc
pop
xchg
aaa
shlb
dec
popf
out
dec
arpl
daa
jecxz
adcl
test
pusha
daa
push
or
outsl
xor
int3
nop
in
adc
fcomps
negl
out
loopne
xor
xchg
mov
fisubrl
or
das
adc
sbb
gs
cmp
and
cmp
add
je
dec
outsb
in
and
pop
push
in
shrl
xor
movsl
in
adc
call
add
test
fadds
icebp
ljmp
out
push
pusha
js
leave
out
push
xor
cmpsb
mov
shrl
mov
mov
dec
xor
xchg
loope
cmc
xchg
cli
sub
rcr
dec
and
fwait
pop
loopne
sar
sti
xchg
push
cwtl
push
add
aad
out
xor
in
xchg
dec
stos
mov
movsl
xchg
xchg
add
push
and
xor
mov
add
xchg
add
cmp
and
fdiv
int3
push
addr16
cmc
or
dec
adc
pop
ret
stos
sbb
adc
jo
popf
in
cld
daa
or
or
inc
bound
inc
mov
popa
inc
pop
xchg
call
mov
xor
hlt
clc
aaa
xor
pop
neg
dec
mov
nop
std
jge
xchg
jg
insl
arpl
int
mov
xchg
push
jb
repz
stos
mov
lahf
xchg
and
mov
stos
push
mov
jecxz
faddp
cmp
xchg
mov
xchg
dec
xor
jb
ss
or
mov
fstl
mov
mov
ds
gs
flds
jp
gs
or
and
out
aam
cmp
lods
and
push
cmp
mov
add
jnp
pop
int3
popa
push
add
lods
bound
cmp
mov
test
lods
rcr
inc
mov
adc
leave
jnp
sub
dec
or
daa
add
push
mov
and
outsl
popf
test
ficompl
int3
repnz
orl
mov
adc
bound
gs
test
sub
mov
cmp
shll
mov
cld
enter
xchg
adc
push
fstp
ficompl
cltd
aam
cld
push
movsb
adc
je
ret
mov
sbb
mov
hlt
mov
test
ljmp
adc
jns
sti
mov
jns
lds
iret
ja
xchg
push
add
pop
sub
enter
push
pop
stc
shlb
inc
push
lods
mov
pop
sub
add
pop
cmpsb
loope
mov
pop
push
lods
push
mov
cmc
sbb
or
add
sbb
mov
pusha
add
push
popl
fsubrl
xor
mov
push
jge
adc
lcall
dec
add
mov
mov
iret
out
lds
mov
fidivrl
xchg
mov
xchg
or
loope
inc
das
xchg
repz
movsl
stc
in
rorl
rorl
loopne
sbb
cmp
xchg
fs
xor
lods
and
dec
jb
ds
insb
lahf
pop
mov
mov
ret
and
sti
add
pop
mov
jg
popa
hlt
mov
add
mov
add
cli
mov
mov
lods
lahf
mov
lret
or
fwait
outsl
pop
dec
cwtl
mov
xor
test
sub
push
xchg
fwait
mov
inc
test
rolb
jge
jecxz
add
mov
and
lods
jns
jo
add
push
daa
repz
fcomps
dec
cmp
cli
mov
jae
int3
push
gs
xchg
insb
scas
jo
xchg
scas
mov
sub
cmpsb
or
adc
lock
xchg
adc
stos
sbb
push
fiadds
push
push
xchg
sbb
xor
gs
inc
xor
and
repnz
xchg
insb
fs
push
and
sub
pop
xchg
insb
sbb
test
pushf
or
cmp
ret
jb
cmc
mov
jl
and
repz
jmp
mov
jb
repz
ljmp
xor
outsb
xchg
push
cmp
out
sbb
adc
dec
or
orl
adc
xchg
pop
ljmp
xchg
pusha
jb
mov
js
push
rcrl
pop
ljmp
sub
add
pop
pop
dec
lock
aad
mov
cmp
das
repnz
int
sahf
dec
cmp
add
lds
loopne
shrl
mov
ficomps
push
cmpsb
mov
lret
insl
inc
ds
jl
imul
dec
pop
cmp
mov
call
out
pop
loopne
add
out
mov
push
icebp
fldcw
fnstenv
popa
jge
mov
fsubrl
dec
sub
and
xchg
lods
mov
xlat
pop
and
fstl
xor
out
cmp
sbb
jmp
sbb
sub
fdivl
mov
mov
fldt
es
push
fs
pop
lea
in
test
pop
or
in
sbb
adc
jmp
and
cmp
push
pop
rolb
jecxz
movsb
inc
pop
out
mov
or
mov
cmpsl
jb
cld
dec
mov
jnp
rorl
sub
pop
lahf
fs
sbb
stos
aam
movl
sbb
push
xchg
rolb
pop
hlt
dec
mov
inc
xlat
rol
push
inc
mov
sub
mov
add
pusha
jbe
out
fnstsw
popf
cmpb
add
in
sbb
cmp
gs
fistps
sti
xor
xchg
pop
ja
or
fcmovnb
movd
and
sahf
adc
cltd
mov
xchg
movsb
push
insb
aas
pop
mov
and
mov
adc
inc
iret
aam
jl
jo
pop
sbb
nop
xchg
lods
add
push
mov
sub
pushf
aad
cmpsb
movsb
orl
mov
shr
into
xchg
pop
sbb
leave
pop
out
push
jmp
fsubl
fistps
adc
mov
dec
dec
int3
jnp
in
lret
icebp
cmp
mov
inc
mull
cli
sbb
in
js
out
ljmp
xchg
jo
addr16
into
xor
sub
inc
add
push
shlb
mov
filds
popa
fs
xchg
xchg
repnz
xor
mov
add
sarb
repnz
in
fucomip
iret
inc
pushf
push
jge
jecxz
loopne
bound
iret
add
test
add
xchg
cmpsb
cmp
mov
inc
popa
push
adc
je
sar
jbe
rorl
daa
jne
daa
mov
adc
pop
jns
rol
mov
popa
sub
mov
xchg
sub
sub
subl
lret
jl
jmp
push
cmp
sarb
icebp
and
addl
jae
das
push
xchg
xor
scas
inc
and
je
outsl
mov
lret
js
add
scas
mov
imul
sbb
add
dec
je
test
int
in
jg
jge
xchg
jno
xchg
add
xor
nop
jns
sahf
lock
jo
repnz
xchg
subl
dec
mov
xchg
into
xchg
push
cwtl
adc
mov
iret
pop
mov
imul
dec
and
insb
test
pop
cmp
out
dec
loope
cmc
lret
or
mov
adc
jno
loop
adc
mov
cmp
scas
aam
call
adc
cmp
stos
mov
pop
in
jecxz
cmp
mov
pop
xor
jge
outsl
rcl
ds
jb
arpl
or
mov
pop
cmp
nop
dec
sbb
loopne
and
aad
decb
cmpl
mov
add
push
mov
add
push
sub
fucomip
ficoms
adc
call
add
xchg
add
sbb
aam
fucom
inc
rcrl
sub
xchg
lcall
test
out
push
inc
movsl
jg
in
cmp
cmp
mov
ret
push
push
push
fstpt
jae
lock
jmp
push
xor
sbb
mov
bound
cmp
mov
mov
or
mov
xchg
sbb
mov
jg
ret
das
jle
shl
jbe
rorl
insb
jge
jmp
sub
xchg
cmpb
xchg
push
or
loope
movsb
push
out
mov
sti
ret
mov
jge
outsb
es
cli
xchg
pop
cmp
mov
cld
in
add
inc
enter
mov
dec
data16
sbb
mov
daa
movb
pushf
fcoms
aam
int
mov
lods
jge
in
mov
lret
psubd
sub
jne
ret
enter
pop
and
popf
adc
sarb
data16
in
jnp
repnz
pop
js
pop
jae
mov
out
or
push
lds
inc
pusha
iret
clc
inc
insl
jbe
jb
dec
xchg
xchg
inc
adc
call
or
push
pop
push
or
cmpsb
inc
xor
dec
jmp
cli
mov
scas
xor
sub
mov
test
add
adc
xor
scas
and
add
push
fsts
outsb
shl
test
push
cmp
pop
or
fs
sub
ror
inc
xor
enter
inc
fsub
decb
push
push
jb
jae
or
inc
sbb
pop
sub
into
cmp
or
jg
sbb
insl
mov
mov
test
in
out
dec
dec
rclb
stos
int
cmp
sarb
pop
mov
out
aaa
loop
inc
jl
mov
sub
addr16
inc
push
stos
test
dec
sbb
mov
adc
xchg
jne
orb
xor
xchg
mov
rolb
in
in
lret
in
cmpsb
mov
xchg
xor
adc
jnp
xor
mov
add
imul
out
cmp
das
loope
sub
in
sub
leave
pusha
mov
sub
outsl
daa
insl
push
push
stos
adc
pop
jne
les
add
adc
mov
ficoms
ds
xchg
insb
jge
mov
jl,pt
mov
lea
cmp
xchg
int
push
lock
sub
mov
sbb
pop
or
jae
xchg
dec
inc
jo
pushf
adc
add
xchg
data16
pop
int
fsubr
or
aas
xchg
sub
andl
lret
movsb
popa
dec
in
ja
dec
in
loope
mov
pop
loop
imul
push
pop
loop
insl
sub
inc
jl
shl
lea
mov
rolb
out
repnz
jp
jae
or
lahf
jmp
into
and
push
sub
add
data16
rcrl
xor
imul
aad
pop
xchg
xchg
insb
inc
insl
xchg
xchg
jge
jge
mov
imul
dec
lods
stos
sbb
andb
notl
fadds
sub
cmp
test
or
push
sub
jb
js
push
fcoml
sahf
or
fcoml
mov
adc
imul
inc
sbb
icebp
pop
xor
xchg
iret
sub
jg
rcrl
fdivrp
rcr
pushf
call
addl
insl
dec
movsb
andl
pop
test
loope
push
mov
insb
lods
in
leave
jbe
sbb
repz
sti
iret
or
push
sub
std
shll
and
jnp
js
xor
sub
sbb
add
das
setnp
ret
mov
call
popa
push
aam
shrb
fsubrs
xor
ljmp
cmpb
aam
cmp
and
jnp
sbb
sarl
into
pop
movsb
or
inc
cmp
fs
and
rcrl
sub
mov
cmp
lods
and
outsl
adc
xchg
es
push
and
or
scas
cs
ss
gs
mov
inc
push
pop
out
dec
scas
lods
xor
ret
add
pop
xchg
adc
jae
sbb
dec
or
pop
bnd
daa
sbb
inc
movsb
mov
inc
inc
ret
dec
lock
es
fbstp
and
mov
pop
ja
outsl
inc
leave
fdivl
fiadds
push
pop
cmp
mov
imul
add
or
xchg
es
sbb
mov
rclb
lods
jae
test
cmp
mov
dec
out
ds
lea
and
mov
out
add
pmullw
add
xchg
add
jmp
lcall
fnstcw
or
jnp
les
mov
lret
dec
std
jg
and
sbb
jl
inc
xchg
fistpl
sti
arpl
mov
sahf
test
adc
andnps
ds
pushw
cmp
and
adc
imul
pop
roll
dec
out
cwtl
sub
mov
fbld
cmpsl
ss
ret
jl
push
arpl
push
cmp
dec
aam
pop
lds
loope
sbb
cwtl
sahf
cmp
out
xor
adc
jbe
add
pop
out
dec
jnp
jecxz
loop
test
mov
repz
cld
mov
std
je
iret
inc
sarl
adc
nop
bound
repz
mov
cltd
jae
jl
int3
and
cwtl
xlat
cmpsb
or
idiv
cli
out
adc
push
sti
int3
jmp
mov
sti
bnd
push
pop
movl
test
lea
sbb
out
mov
cmp
push
add
jns
fistpl
out
inc
pushf
push
nop
xchg
cmc
xlat
cli
inc
mov
jno
int3
clc
jno
out
popa
arpl
test
push
cld
sbb
pop
loopne
xor
xchg
lret
inc
mov
adc
mov
inc
pusha
lods
add
daa
or
sub
in
xchg
xor
dec
cmp
dec
sub
or
push
xor
cmp
enter
mov
adc
fmuls
aaa
mov
pop
sbb
mov
sbb
ret
inc
pushf
dec
jle
mov
js
mov
jmp
mov
push
sbb
mov
sub
ja
jmp
push
ret
movb
jl
mov
inc
push
xchg
imul
push
scas
aad
jns
adc
sub
loop
add
iret
sub
and
pop
or
mov
xchg
je
adc
cltd
sbb
or
mov
dec
jns
mov
cmp
popf
jne
xchg
cmp
mov
loop
scas
pop
mov
movsb
in
out
lcall
add
ja
pushf
cmp
cmp
pusha
sub
mov
fs
scas
in
enter
sub
ret
dec
push
or
daa
inc
test
lock
ja
mov
mov
xchg
stos
sbb
cwtl
adcl
xor
cmp
push
in
mov
cmp
mov
pusha
shlb
add
sub
cmp
xchg
lahf
inc
fildll
inc
mov
cmp
xchg
notb
add
and
ja
das
test
pushf
xchg
mov
loop
mov
lcall
pop
and
and
cltd
mov
sbb
adc
cmp
dec
iret
xchg
mov
scas
outsl
sbb
sti
adcb
mov
roll
dec
mulb
movb
dec
xor
mov
mov
je
pushf
js
cmp
push
xchg
aaa
sbb
mov
jns
aas
pop
dec
sub
push
arpl
lret
jp
enter
in
pop
or
sub
icebp
mov
xchg
or
iret
and
push
push
mov
stos
mov
rorl
cmp
ds
scas
jmp
mov
sbb
pop
gs
inc
aam
leave
xchg
stc
xor
adc
jnp
outsl
dec
push
mov
jb
sbb
mov
xchg
insb
cmp
fcoms
leave
and
jne
xchg
insl
iret
sbbb
in
xor
jns
rcll
add
dec
adc
retw
mov
imul
fwait
cmp
pop
mov
stc
loopne
push
dec
jns
cmp
std
cmpb
cltd
xor
sub
dec
fwait
cmpsl
jp
mov
mov
sbb
jmp
jle
inc
pop
or
aaa
add
jne
jb
pop
dec
cmp
xor
scas
jb
push
or
repnz
pop
cli
mov
cmp
popf
xchg
pushl
lret
xchg
sti
repnz
sub
clc
dec
mov
and
in
mov
cmp
in
sbb
lods
dec
clc
ficoms
cmp
aas
incb
popf
xlat
dec
inc
shlb
adc
std
popf
pop
pop
mov
pop
mov
inc
pusha
push
add
push
sarl
mov
and
pop
mov
int
stos
or
and
sbbb
pusha
sbb
movsl
mov
fildl
test
in
insb
loopne
outsl
insl
xor
sbb
enter
into
xor
sti
arpl
jae
lods
daa
cmpsb
icebp
frstor
mov
jg
jmp
pop
inc
cmp
jne
cld
stc
push
sbb
add
arpl
sbb
add
sbb
jge
mov
shrb
add
xchg
add
dec
fdivs
jae
pop
pop
or
add
and
dec
add
icebp
mov
in
xor
mov
inc
leave
mov
cmp
sub
mov
sbb
std
mov
fldenv
push
stos
xlat
push
pop
inc
xchg
jge
mov
pop
add
lcall
dec
cmp
movsl
or
sbb
psubsw
xor
scas
push
mov
in
sub
pop
and
in
mov
jno
push
stc
push
loop
sbb
push
fisubrl
inc
push
cmp
jmp
jae
popa
notb
pop
fld
rcrl
dec
push
lock
jnp
cs
lods
repz
sbbb
jge
adc
insl
fstps
loope
scas
mov
sub
adcb
out
lods
sbb
inc
push
pop
test
test
clc
fstl
cmpsl
into
aas
lret
jmp
js
mov
xchg
sbb
sbb
rcrb
push
stos
xchg
dec
adc
sub
jp
xchg
pop
mov
adc
insl
inc
out
cmpsl
shlb
jbe
inc
pushf
loopne
xchg
lods
aas
sti
jmp
inc
push
add
dec
dec
jno
stos
xor
mov
cmp
cmp
into
and
push
mov
icebp
pop
and
mov
and
sbb
cmpsb
jbe
cmpsl
into
icebp
jnp
sete
dec
pop
gs
nop
fcmove
int3
cmp
ret
push
mov
sti
sbb
mov
jns
iret
cmpsl
jb
push
xchg
aaa
dec
out
adc
jno
sbb
ds
nop
test
xchg
cmpsl
sarl
push
adc
pop
sub
cmc
jne
mov
mov
roll
daa
lock
mov
nop
pop
pop
out
and
pop
mov
cld
or
ss
inc
aam
imul
scas
ljmp
mov
push
xchg
loop,pn
out
stos
mov
xchg
cmpsb
jmp
ljmp
jp
std
jb
adcb
addr16
xor
sahf
inc
repz
or
repnz
pop
and
xchg
sub
nop
push
mov
xchg
into
cmp
sbb
jecxz
dec
jl
pop
adc
int3
mov
int
add
ljmp
out
je
mov
xor
popa
adc
roll
xchg
add
int
shrb
int
mov
xor
decl
mov
mov
repnz
sbb
jae
pop
or
int
movsl
cli
xor
jmp
jg
cltd
cmp
sub
jg
fisubs
mov
ret
sub
aas
ror
push
std
rep
pop
xchg
stos
ss
lret
dec
xor
fbld
mulb
dec
fs
mov
insb
fs
filds
arpl
or
cli
stos
mov
popf
fldl
inc
xor
jns
add
out
repz
jns
and
fsts
push
mov
lock
imul
xor
adc
std
ficomps
movsb
fisttpll
and
sub
lods
movsb
jle
xor
mov
repz
mov
pop
pop
push
stos
xchg
mov
out
call
vpsubusw
pop
add
xor
pop
hlt
adc
stc
pop
adc
mov
cmpb
ja
inc
lahf
add
add
pop
into
and
test
push
cmpsl
jmp
test
shrb
outsl
jp
xchg
lock
jge
ret
push
shrb
xchg
xorb
push
mov
pop
sbb
adc
sub
shrl
movsl
imull
lret
cmc
cmp
in
stos
cmp
sbb
imull
adc
rorb
int3
cmp
xchg
and
sub
icebp
into
ss
das
inc
out
in
cmp
call
lods
aaa
cmp
shrl
or
mov
adc
popf
sbb
shr
add
pop
push
inc
imul
lahf
stos
cmp
mov
stos
jp
xchg
idiv
pop
enter
and
dec
mov
lods
cmp
xchg
pop
aas
rcl
stos
mov
sub
jbe
popf
fwait
insb
out
outsl
cmpl
mov
int3
and
cld
add
iret
insl
mov
adc
scas
leave
sub
pusha
cmc
test
adc
dec
sub
orl
ljmp
ret
inc
xchg
lods
out
cmp
or
sar
lea
inc
push
push
cmp
push
mov
adc
sahf
sub
mov
mov
movsl
scas
jae
lahf
in
add
dec
inc
mov
in
stos
clc
adc
lret
push
les
add
bound
aaa
cmp
xlat
stos
mov
mov
mov
xor
sub
daa
rorb
lods
mov
scas
add
test
push
aas
mov
dec
push
leave
pushf
test
inc
imul
jne
push
repnz
popa
adc
testb
rdtsc
fisttps
mov
inc
sbb
cltd
mov
std
hlt
or
jno
scas
or
hlt
fldcw
lcall
inc
jmp
iret
jne
or
cmpsb
sub
xor
loopne
push
inc
mov
push
nop
aas
xor
pop
xchg
imul
sti
dec
unpcklps
lahf
adc
mov
xchg
push
subb
inc
mov
int3
inc
push
fwait
lcall
addb
addr16
push
aam
enter
jle
pop
xor
xchg
sarb
pop
sahf
loop
shlb
pop
in
pop
rcl
leave
int
xchg
jg,pt
xchg
in
outsl
sub
pop
sbb
push
xchg
int
clc
inc
mov
lods
incl
push
xlat
mov
jns
sbb
and
sbb
mov
enter
jg
ja
dec
popa
jge
pushf
sub
pop
popw
mov
fisubs
scas
inc
xchg
push
sub
lods
stc
jmp
cmp
push
test
mov
mov
std
test
insl
ja
jg
out
dec
mov
sub
dec
adcl
xchg
mov
xchg
adc
das
and
cmp
jns
push
cmp
push
jne
inc
jnp
sbb
fmuls
clc
or
xchg
roll
jnp
pop
nop
inc
sbb
push
jns
cmc
iret
mov
jb
adc
sub
pop
fildl
xor
xchg
pop
ja
aaa
cs
loop
lds
mov
scas
push
es
stc
dec
mov
mov
mov
and
fistps
rcrl
repnz
in
rcrb
loopne
xchg
aad
incl
mov
scas
xchg
rol
inc
cmpsl
sub
mov
bound
and
stc
gs
mov
jbe
aam
mov
arpl
mov
sti
pop
xor
mov
mov
add
lock
stc
in
and
js
in
ret
add
fldcw
loopne
ret
call
add
add
outsb
sbb
fsubl
es
pushf
pop
iret
fwait
pop
and
push
jle
jg
rep
imul
outsl
les
pop
es
sar
enter
fldenv
sahf
xchg
adc
or
rcrb
inc
xor
xchg
jle
and
popa
setnp
cmp
test
xor
push
xchg
pop
or
cmp
test
or
shr
jnp
fyl2xp1
enter
scas
sbb
ss
jl
jge
cmp
pop
xchg
sar
push
jne
sbb
rolb
and
or
ss
pusha
insl
inc
sub
aaa
push
add
test
ds
push
test
and
cmc
jo
xlat
xchg
ja
pushf
xchg
dec
xchg
adc
rcr
ja
push
cmp
test
test
xchg
inc
xorl
jp
js
mov
sti
jb
roll
jb
fstpl
cli
out
jle
lret
or
push
aas
int
outsl
cwtl
jb
sbb
out
outsb
mov
lret
sbbb
lret
into
andl
sbb
sbb
mov
sub
or
cmp
jle
pop
repz
xchg
cmpsb
pop
rorb
dec
int3
out
jo
cmc
mov
pushf
cmp
adc
andb
push
call
mov
push
lock
addl
aaa
mov
cmp
mov
or
xchg
frstor
cltd
sbb
push
stos
fwait
ljmp
lahf
push
pop
add
shll
mov
les
mov
es
xor
dec
xchg
pop
mov
xchg
jp
in
addr16
mov
mov
fldenv
test
and
adc
fs
mov
loop
cmc
pop
aam
inc
outsb
mov
jo
xchg
xchg
xor
daa
push
dec
fdivl
add
popf
stos
mov
clc
inc
adc
stos
fs
fstpt
rorl
cs
sub
mov
mov
sbb
movsl
pop
sahf
or
dec
xlat
jne
mov
xor
sbb
hlt
addl
jge
adc
inc
repnz
bound
cs
cli
outsl
sbb
repz
push
fistpl
faddp
ja
dec
add
dec
xchg
pop
xchg
js
mov
outsb
leave
add
xchg
add
mov
pop
adc
fldenv
jo
aas
dec
movsl
mov
jnp
xor
cmp
stc
or
inc
add
rclb
add
daa
inc
aad
cmp
jl
sub
cmp
pop
jb
les
lcall
mov
inc
jne
fisubs
push
jo
fdivrl
lea
stos
add
sbb
fs
into
call
inc
roll
pop
mov
js
jecxz
and
inc
les
sbb
inc
std
daa
and
js
cwtl
mov
mov
dec
pop
shlb
pop
movsb
push
pop
mov
push
ficoml
in
and
mov
ret
or
xor
out
lret
mov
jno
jns
pop
das
mov
or
bound
and
dec
push
mov
lods
sbb
imul
cmp
ljmp
dec
xchg
sub
ja
xchg
lock
psadbw
adc
mov
sbb
sub
push
cmp
es
mov
rcr
cmc
mov
or
cmp
es
cmpsl
insb
in
outsb
sti
push
cwtl
aad
push
add
clc
setge
mov
mov
imul
jmp
sbb
insl
sbb
push
xor
jle
mov
lret
adc
mov
xchg
and
testl
in
jo
adc
subb
cmp
adc
or
call
dec
and
pop
test
xchg
or
mov
popa
and
or
fbstp
jle
scas
pop
lahf
push
lock
or
mov
cmp
push
insl
inc
adc
loopne
out
jmp
mov
mov
or
call
mov
jb
push
jmp
jo
jmp
aas
sub
inc
popf
xor
lds
out
shrb
mov
sbb
mov
inc
pusha
pop
shll
jmp
xor
addr16
or
adc
les
cld
push
pushf
hlt
pop
push
fld
push
sti
mov
cmpsl
pop
lea
inc
mov
popf
xchg
in
cltd
sbb
out
rclb
push
jge
daa
or
pop
cltd
dec
int3
jne
enter
mov
pop
push
pop
add
or
dec
mov
jo
lea
sarl
lret
add
xchg
add
pop
int
pusha
nop
jnp
int
stos
dec
ss
push
ljmp
stc
imul
push
cwtl
cmp
mov
adc
inc
cmpsl
push
push
cmp
shl
cmp
xor
in
jge
mov
leave
das
jp
icebp
inc
pushf
sysexit
test
lahf
pop
arpl
cli
pop
imul
cmp
xchg
mov
pop
pushf
idivl
add
leave
test
rcl
xorb
and
sahf
and
call
adc
push
jae
out
add
or
pop
mov
faddl
test
mov
inc
xlat
repnz
lea
ds
sbb
xchg
cmp
shlb
dec
jecxz
mov
notl
adc
pop
cltd
dec
aad
inc
inc
enter
push
repz
mov
es
mov
cmp
jecxz
test
or
inc
pop
xlat
cmp
sub
add
andl
call
dec
xchg
sbb
enter
cmpsb
popa
enter
mov
xlat
xchg
xchg
movsl
enter
mov
insl
gs
int3
fucomp
bswap
je
hlt
adc
adc
loop
insb
inc
adc
sar
in
arpl
or
pop
stos
or
jl
repnz
dec
pop
lcall
cmp
mov
inc
push
negb
pop
add
xacquire
jae
movsb
mov
push
or
jb
data16
popa
imul
andl
out
xchg
cld
sub
mov
push
stc
cmc
jl
pop
or
push
inc
sub
add
je
or
and
inc
dec
repz
jo
lds
adc
cmp
sbb
cs
pop
loopne
add
inc
inc
sbb
mov
pop
jle
jp
pop
inc
arpl
jns
aad
dec
xor
push
mov
lods
das
call
sub
push
inc
imul
fwait
jns
mov
pop
movsl
jae
mov
in
mov
out
jb
inc
xor
sub
pop
aaa
mov
mov
mov
xor
out
rolb
jl
out
repz
daa
dec
fucomp
or
mov
and
dec
out
mov
lahf
sahf
sbb
clc
dec
stos
rcrl
mov
call
data16
not
dec
jp
jbe
cli
sbb
add
ret
and
dec
repz
fldt
leave
pop
addr16
add
xchg
add
aas
ljmp
dec
int3
push
sub
and
ss
jae
cwtl
mov
fidivrs
sbb
sub
test
inc
add
daa
test
aam
dec
push
mov
inc
cld
cli
xchg
loopne
repnz
aas
add
outsl
adc
mov
leave
push
mov
dec
sbb
enter
js
shlb
jge
pop
sbb
sub
or
out
and
bts
lahf
lds
mov
test
mov
push
inc
lds
and
mov
fdivs
or
pop
cmp
scas
pop
cmp
in
inc
dec
adc
repnz
stc
lcall
inc
lcall
outsb
cli
rcll
push
or
mov
pushf
add
inc
sub
cmp
out
pop
stos
lock
push
or
jbe
mov
jbe
jne
mov
push
int3
adc
jmp
lret
insb
ret
cmp
jnp
insb
ljmp
sahf
xchg
outsl
mov
push
jle
or
hlt
int3
je
sub
in
cmp
sti
and
jecxz
or
sbb
pop
ljmp
faddp
push
in
push
fildl
lds
dec
sarb
mov
or
ljmp
xchg
sbb
push
push
jbe
lock
jns
test
aad
lret
push
and
push
mov
push
fadd
shl
mov
fs
repnz
imul
or
addb
sub
hlt
push
hlt
sub
push
sub
xlat
je
inc
dec
push
enter
ja
xor
inc
xor
dec
jns
mov
bound
mov
ljmp
lcall
dec
push
add
cmp
pop
add
and
adc
push
inc
or
stc
outsl
in
in
sub
pop
pushw
popl
icebp
mov
test
jmp
and
adcl
rolb
xor
mov
sti
fwait
pushf
ret
fdivr
sub
add
subl
push
inc
push
fildl
jne
mov
test
fiaddl
cld
outsb
add
lcall
jnp
pop
pop
mov
jb
and
roll
add
push
in
and
loop
clc
cmpsb
sbb
out
mov
enter
pop
dec
cmp
dec
fs
sub
enter
cmp
jne
dec
mov
popf
aas
xlat
push
push
sub
incb
jmp
or
cmp
xchg
push
xchg
dec
mov
cmp
pop
aas
loop
jbe
adc
xor
xor
jno
movb
lret
lcall
push
and
mov
push
adc
cli
inc
loopne
scas
rorb
cmp
xor
outsb
mov
inc
cmpsl
pop
sub
int
imul
xchg
sub
test
jns
loop
pop
inc
call
hlt
and
sbb
incl
xchg
lods
lods
in
enter
mov
pop
test
insl
xor
popf
aaa
lods
inc
xchg
push
push
popf
cmpsb
and
xlat
inc
mov
mov
push
add
cmp
sbb
adc
jge
adc
adc
pop
jecxz
sbb
clc
shr
nop
lock
lret
fs
arpl
push
push
push
rclb
cltd
mov
jns
xor
pusha
push
dec
movsb
ret
lret
call
into
and
scas
xor
and
jno
push
movsl
test
lcall
out
in
out
decb
mov
jne
stos
lock
pushf
mov
push
inc
jnp
add
repnz
arpl
or
test
test
xchg
inc
mov
mov
push
fnstenv
jae
shll
mov
xchg
cmpl
xor
out
pop
ret
and
jg
and
mov
xchg
cmc
faddl
std
mov
cs
and
xor
sbb
push
mov
lods
push
add
cmp
jae
loopne
mov
stos
int
mov
push
add
xorb
into
xchg
ds
lret
movsb
enter
mov
mov
shll
repz
jbe
pop
stos
xlat
jne
dec
mov
xor
sbb
adc
sbb
rol
popa
mov
pusha
hlt
dec
dec
push
pop
filds
fdivrs
jg
xor
mov
cmp
jae
ss
xor
jmp
mov
insb
mov
insl
inc
xchg
int3
dec
outsl
fcmovnu
mov
sub
inc
push
test
inc
in
orb
push
xorl
add
idivl
fldl
and
add
clc
push
aad
fwait
aad
inc
xor
mov
and
stc
aam
ljmp
cmp
nop
enter
addr16
popa
mov
mov
outsb
pop
sahf
pop
mov
xor
scas
dec
xchg
cmp
pop
jns
out
push
adc
pop
data16
sbb
int
int
hlt
sub
push
aam
scas
push
lea
add
arpl
in
lds
mov
mov
cmpsb
inc
scas
test
or
jmp
int3
sbb
fwait
push
sbb
insl
lret
xlat
roll
xor
add
imul
push
addr16
push
jg
bound
pusha
add
mov
fisubrl
push
cmpsb
push
mov
fs
xor
and
xchg
orl
in
jl
gs
xchg
xor
add
popf
mov
int3
jnp
xlat
jge
jge
push
ret
and
jl
flds
mov
data16
out
push
cmc
outsb
testb
in
mov
into
mov
repz
mov
decb
add
jae
idivl
mov
sbb
nop
mov
push
clc
and
sub
and
je
aad
xchg
pop
std
pushf
and
std
pop
into
push
ficoms
mov
cmp
fdiv
adc
ficoms
push
insb
lods
add
cwtl
xor
push
imul
push
adc
js
pop
lods
in
out
push
cmpsb
sub
imul
push
push
out
test
mov
sub
test
arpl
xor
jae
loope
rcrb
cltd
shrl
xor
hlt
mov
les
fiadds
orb
int
roll
jp
sbb
or
and
scas
sarl
xor
mov
sbbb
push
jg
imul
pusha
mov
jmp
insl
mov
in
fistpl
iret
mov
lock
bound
popa
mov
jmp
cmp
hlt
sbb
adc
scas
or
rcl
sbb
cmp
jl
or
dec
scas
mov
jmp
jne
aad
test
scas
cmpsb
cmp
incl
mov
rclb
mov
cmp
and
inc
test
add
xchg
add
or
pop
pushf
inc
in
ds
lods
fstps
cmpsl
outsb
adc
sub
cmpl
adc
sbb
scas
fstl
inc
fiadds
inc
inc
ret
jno
in
pop
sub
js
ret
pop
or
fcoms
fldcw
arpl
push
cmp
ret
cmc
repnz
push
xor
and
rclb
sbb
jno
loope
pushf
lea
push
ret
ret
movsb
pop
and
call
adc
add
mov
xor
das
movsl
out
jmp
cmp
xlat
mov
dec
pop
dec
jne
add
ljmp
in
mov
inc
mov
cld
mov
push
cli
cli
mov
fs
in
xor
push
pcmpeqb
rcr
inc
subb
jne
icebp
cmc
shll
aas
lret
loope
sbb
jae
ror
insb
xchg
iret
and
dec
lock
xor
jmp
jecxz
ret
fisubrs
dec
arpl
sub
cwtl
outsl
mov
push
scas
mov
int
js
cld
or
push
out
xlat
sahf
fistps
loopne
or
add
jl
addl
call
scas
mov
dec
ret
bound
and
pop
mov
jp
mov
arpl
adc
mov
pop
repnz
int
push
out
sub
add
mov
and
imul
popf
jno
cli
sbb
outsb
jne
xchg
lret
inc
lock
arpl
pushf
in
inc
cltd
stos
ret
stos
jl
adc
inc
push
iret
loop
mov
xchg
xor
and
addr16
xor
xchg
or
stos
mov
and
lahf
enter
jae
sub
ss
xor
mov
pop
xchg
loope
fwait
xor
enter
jg
sti
adc
sbb
cli
and
sub
outsb
jbe
sahf
mov
push
and
push
jae
xlat
mov
shll
sub
dec
out
cmp
push
or
jle
testb
pop
adc
lcall
mov
clc
out
scas
fdivr
xor
sub
pusha
jecxz
loopne
ss
imul
gs
push
mov
xrelease
hlt
pop
ret
imul
jmp
sub
push
push
das
sub
add
sub
mov
fsub
subl
adc
add
xchg
add
xchg
push
ja
or
jge
jecxz
inc
mov
shrd
cmpsb
and
push
ja
inc
stos
sub
rcr
insl
cmovge
jmp
mov
lock
fdivl
adc
iret
add
dec
ljmp
movsb
jl
cmp
call
mov
popa
adc
mov
in
jne
xchg
and
fwait
push
iret
ds
mov
xor
adc
lods
sbb
scas
sub
pop
push
push
sbb
fs
or
and
cmp
pop
mov
jo
mov
xlat
pop
sbb
push
stos
lcall
pop
pop
nop
mov
test
sti
xchg
mov
sbb
ja
outsb
bound
and
das
jns
test
mov
sbb
je
lret
bound
adc
pop
pop
je
icebp
mov
movsl
pop
pop
push
sub
lods
rcr
psllw
sbb
repz
sub
lahf
xor
mov
scas
mov
in
sbb
dec
jg
or
push
jns
mov
arpl
mov
inc
xchg
pushf
and
push
cwtl
icebp
or
cmp
bnd
adc
fimuls
xchg
push
stos
pusha
outsb
imul
pusha
xchg
adc
hlt
lea
mov
cmp
inc
shl
adc
bound
ljmp
push
cwtl
in
fsqrt
arpl
mov
repnz
xor
add
xchg
sub
fs
add
add
pmuludq
pop
mov
xchg
fmuls
xlat
dec
xor
jle
mov
aas
sub
loopne
jb
addr16
sbb
movsl
mov
lret
mov
out
fidivs
mov
xchg
test
and
add
xchg
cmp
cmp
or
iret
out
leave
scas
std
arpl
xlat
cwtl
fsubrl
jmp
jae
fwait
xor
shlb
xlat
jae
xor
and
lock
imul
shrb
in
inc
lahf
jo
sbb
les
add
lret
and
push
xchg
xor
loopne
mov
cmp
dec
clc
les
mov
out
iret
mov
leave
jmp
add
inc
stos
pop
sbb
cli
inc
cli
outsb
ljmp
sbb
add
xchg
add
movsb
mov
mov
cmc
add
loopne
cmpsb
sbbl
lea
icebp
jne
int
out
int3
push
test
fdiv
mov
ret
jmp
mov
mov
mov
mov
sbb
sbb
rcrl
rolb
pop
and
dec
lds
js
mov
shll
sahf
push
stos
stos
movsl
pop
out
insl
jne
cmp
mov
movsl
and
lock
scas
test
sbb
lahf
and
adc
rep
sub
xor
xchg
or
mov
mov
jle
add
push
jg
out
push
fistpl
adc
addr16
repnz
movnti
out
and
push
inc
out
in
dec
mov
xchg
lahf
stos
mov
mov
mov
xchg
das
mov
in
xor
sub
xchg
cmp
inc
inc
js
movsl
mov
pop
sbb
test
lods
and
pop
outsl
addps
or
mov
pop
mov
dec
pop
or
mov
lret
pop
rol
cld
jecxz
or
push
push
rdtsc
push
cmpsl
pop
jns
cs
popa
das
popf
mov
fmull
sarb
xchg
loop
adc
aam
arpl
xor
sbb
sub
por
jb
repnz
or
int3
mov
das
pop
jl
mov
push
sarb
imul
dec
jecxz
inc
push
cmc
jb
dec
adc
sarl
lcall
jle
shl
and
mov
xchg
loope
shll
cmp
xchg
cltd
cmp
push
xor
dec
aas
hlt
in
bound
sbb
fistpl
xchg
xchg
fldenv
rclb
sbbl
sbb
jge
popf
cmc
scas
lds
mov
cwtl
push
ljmp
dec
movsb
clc
test
icebp
aad
xchg
dec
es
js
lds
out
cmp
jecxz,pn
jmp
cmpsl
in
addr16
jl
cmp
pop
mov
fbstp
fstl
popf
push
adc
pop
xor
in
mov
push
jg
es
cmpb
mov
imul
cmp
aaa
adc
cmp
xchg
pushf
shlb
push
in
push
xlat
ja
out
ss
mov
sahf
fldl
add
jb
mov
xor
jo
mov
mov
rorl
dec
rcl
out
and
fisttps
pop
mov
xchg
mov
sub
daa
into
jns
sub
push
lods
adc
fstp
test
push
jae
sub
mov
add
sarl
out
decl
push
mov
jo
dec
ljmp
jne
xor
mov
ljmp
andl
pop
xor
lahf
insl
xor
xchg
cwtl
inc
sub
outsb
sbb
mov
cmp
and
jp
lods
mov
jne
ds
dec
inc
dec
jae
mov
adc
or
mov
jo
adc
pop
xchg
arpl
jle
imul
jne
sbbb
mov
pop
xor
outsb
pop
add
dec
cmp
sbb
lahf
bound
loop
ljmp
dec
push
inc
add
push
pop
dec
jge
ret
js
mov
testl
fiaddl
clc
jmp
imul
dec
out
inc
sbb
push
xchg
push
push
xor
cmp
loop
xchg
pop
or
sbb
enter
popa
and
xor
test
xchg
sbb
out
and
cmpsb
pusha
inc
xor
in
ret
popa
lds
mov
lods
sub
aaa
aas
mov
in
push
in
int3
scas
fs
xchg
mov
stos
dec
mov
nop
test
shlb
adc
iret
rorb
aas
ds
mov
add
lods
inc
adc
sti
mov
mov
push
fisubrs
ror
pop
push
jno
ret
sub
lds
sub
lods
pop
inc
out
loope
pop
push
mov
inc
sti
lods
push
test
cmpsb
pop
sahf
xchg
mov
ds
pusha
roll
xchg
mov
mov
lds
bound
sbb
adc
or
test
push
int3
idiv
adc
add
jno
testl
das
lahf
mov
test
xor
inc
mov
jle
popf
clc
je
ds
fcoml
inc
xor
mov
pop
pop
mov
hlt
cmp
dec
sub
mov
pop
sub
test
mov
lods
sahf
and
push
lret
mov
cltd
and
dec
in
repnz
xor
leave
fists
add
rcll
pushl
call
add
xchg
add
push
into
cmpsl
mov
or
xor
dec
test
xchg
mov
xor
in
ljmp
sub
jo
clc
sub
ljmp
add
lret
cmovbe
stos
ficomps
pushf
stos
and
xchg
sbb
push
les
jg
mov
xor
jp
mov
or
and
xor
jns
in
pusha
insl
push
inc
push
and
arpl
adc
mov
out
add
push
pusha
jle
aaa
pop
push
out
ret
push
and
jns
sbb
mov
mov
ljmp
mov
adc
ljmp
aas
xchg
pushf
pop
aam
mov
nop
rcll
pop
mov
and
mov
mov
xchg
xor
in
cmc
mov
cli
insb
data16
lret
jp
das
or
inc
lahf
mov
xchg
mov
push
sub
fldt
jl
jbe
jp
adc
mov
mov
jle
ficoml
cltd
adc
aam
ret
inc
mov
lods
cmc
or
pusha
push
xchg
testl
aaa
loope
jl
call
ds
jmp
sarl
jle
xchg
mov
in
inc
cltd
push
imul
inc
aam
cs
xchg
shrl
dec
jmp
je
scas
stc
sbb
addl
pop
jecxz
inc
mov
xor
lock
mov
and
mov
push
sarl
push
fwait
cli
add
int3
lods
ljmp
jae
sub
repnz
test
mov
lcall
push
sahf
aad
and
ss
cld
into
pop
inc
outsb
insb
jnp
push
test
fs
out
mov
and
cmp
lret
sbb
mov
rcrb
dec
icebp
add
pop
lret
push
stos
sbb
jne
cli
fsubl
sub
add
jg
outsb
or
jnp
dec
gs
lock
mov
xchg
test
in
sub
negl
adc
sbb
sub
xor
mov
xchg
lcall
je
add
fstpt
loop
xlat
in
add
negb
out
lods
push
xchg
push
jl
loop
add
cltd
call
stc
pop
data16
pop
mov
outsl
in
ficoms
jecxz
push
jno
clc
xchg
mov
repnz
int3
inc
arpl
lds
add
popa
dec
fst
ret
int3
mov
and
pop
jp
hlt
bound
ret
sbb
or
pop
pop
sbb
xchg
xor
cmp
push
inc
cmp
mov
pop
xchg
push
inc
nop
iret
shl
jno
cmp
jmp
cmp
cmp
je
sub
cmp
mov
xchg
adc
mov
lret
scas
das
or
mov
push
lea
je
push
je
movsb
fsubs
mov
cmpl
cmpsl
adc
dec
int3
cmpsl
movl
cmp
fcmove
lods
test
roll
inc
xchg
jl
push
jbe
jno
pop
pushf
jb
xorb
jne
pop
dec
mov
push
mov
lds
add
out
rcr
inc
xor
inc
pop
int3
and
jae
xchg
ljmp
jecxz
sub
lret
push
add
adc
fisttps
mov
nop
jge
rcrb
in
daa
add
xchg
jg
add
imul
dec
add
sti
lahf
add
int
pop
xlat
pushf
pop
jnp
push
push
inc
lds
inc
pop
aaa
sbb
push
arpl
mov
xor
fldenv
mov
dec
mov
enter
mov
or
sbb
mov
inc
dec
sub
cmc
out
int3
out
push
push
das
add
pusha
rolb
sbb
mov
ljmp
setl
inc
push
mov
cs
test
hlt
int
nop
mov
mov
mov
push
inc
sahf
pop
xor
inc
adc
mov
xor
pop
jne
sbb
dec
imul
xor
loope
cmpsl
xchg
stos
add
cwtl
mov
gs
fstp
sub
test
notl
lret
adc
push
mov
subb
pop
pop
subb
inc
cmpsl
add
pop
daa
pop
pop
dec
adc
cmp
cmp
es
pop
aaa
sbb
rcrl
mov
mov
dec
fldenv
xchg
sub
adc
mov
mov
add
push
push
jnp
fisubs
mov
xor
add
xchg
add
ss
out
in
adc
xorb
pop
dec
es
rcrl
push
jbe
sbb
adc
scas
sti
cmc
leave
xchg
push
add
data16
cmp
dec
subl
adc
push
xchg
cmp
mov
cmc
mov
jne
sub
gs
lock
cmp
out
aas
rolb
lret
lea
pop
lret
test
call
inc
outsb
mov
mov
gs
lods
sbb
shlb
in
cmp
or
notl
add
gs
and
xlat
cmp
lret
js
cmpsb
test
cmpl
insb
add
std
xchg
cwtl
add
cs
mov
xchg
rcll
xlat
in
mov
mov
insl
add
push
in
jmp
mov
pop
add
inc
xor
loope
xor
add
xor
and
into
jle
sbb
add
cmp
icebp
push
push
jo
xchg
adc
js
int3
outsb
aas
sahf
test
pop
gs
fs
push
mov
and
inc
test
or
dec
das
mov
ljmp
je
out
xchg
cmpsb
rorb
icebp
aas
or
sbb
iret
pop
pop
mov
bound
lcall
push
sub
fxch
shrl
sti
data16
mov
ds
aam
insl
push
popl
or
sahf
insl
add
add
mov
cmpsl
adcb
out
jo
jno
clc
test
mov
and
push
sub
mull
dec
sub
mov
jecxz
shll
pop
mov
sub
in
add
mov
shll
pop
ljmp
movsl
in
lds
cmp
icebp
popa
xor
sbb
pushf
cmpsb
mov
loope
mov
dec
mov
gs
fisttpl
mov
out
xlat
sbb
jno
int
popf
sub
xchg
icebp
add
or
and
cltd
and
fcompp
pushf
adcl
mov
inc
inc
pop
xlat
in
js
loop
jbe
insb
inc
out
pop
aaa
add
packssdw
in
pop
push
pop
das
push
mov
std
dec
decb
inc
shll
mov
fwait
ljmp
inc
xor
jp
xchg
in
aas
fwait
and
mov
add
mov
push
outsb
shr
or
xchg
add
ds
insl
push
inc
cmp
xlat
pop
rolb
xchg
fldcw
sti
outsb
push
jbe
sub
mov
or
dec
add
call
add
insb
and
adc
jp
shl
inc
or
jo,pt
push
les
aaa
add
cmp
daa
or
push
jno
push
xor
jo
jle
scas
adc
push
movsb
gs
mov
adc
pop
ja
pop
cmp
outsl
dec
mov
sub
sub
mov
xlat
in
aam
push
mov
push
mov
xor
jp
pop
sti
pop
gs
sbb
mov
xor
in
add
hlt
push
insl
push
mov
xchg
add
inc
add
int
imul
jmp
stos
sbb
jo
roll
hlt
jge
xor
cmp
gs
pop
adc
jnp
jne
adc
fbld
jb
gs
mov
fadd
push
push
cmp
mov
test
jmp
jge
pop
nop
pop
shrl
dec
fbld
shl
or
xor
sbb
sbb
negb
xor
mov
icebp
ret
in
pop
adc
push
aam
mov
loop
movsb
push
incb
cwtl
and
sub
or
sahf
mov
add
les
or
mov
or
lret
or
pop
pop
fld
ja
pop
mov
pop
mov
cmp
icebp
lods
push
push
pop
lock
mov
pop
dec
int3
mov
dec
sub
cwtl
nop
cmp
fsubrl
aaa
mov
cmpsl
mov
sbb
xlat
clc
in
popf
dec
test
insb
out
or
push
test
push
aad
xchg
sbb
fsubs
cmpsb
mov
dec
popf
or
in
xor
negl
repnz
rclb
stos
adc
jle
out
insl
sbb
dec
sbb
out
dec
addr16
cmp
sub
jno
add
mov
sub
popf
enter
ss
ret
daa
fistl
add
mov
sub
out
loope
xchg
shrl
mov
sub
inc
xchg
cmp
lahf
mov
cmpsl
pusha
clc
and
clc
test
dec
mov
ds
test
int3
jae
inc
sub
jae
out
in
sbb
pop
jno
add
in
cmp
nop
aad
pop
cwtl
repnz
lock
mov
sbb
jge
int3
outsb
xchg
cmpl
add
pushf
movsl
jnp
mov
jns
add
outsl
adc
repz
pusha
xchg
jmp
push
xchg
mov
cmpsb
or
std
mov
jle
sbb
psubsw
test
xchg
pop
lds
jbe
push
loope
out
push
cmpsl
jecxz
rcrl
lea
jo
adcl
dec
add
sbb
push
jmp
jns
push
ficoms
add
jp
insl
insb
aam
jmp
je
fisttpl
movsb
fdivl
add
fldenv
adc
fwait
pusha
sub
sub
cmpl
push
cli
test
daa
mov
and
push
bound
or
push
pop
pushf
ds
xor
shrb
dec
cmp
lea
cmp
cmc
loope
std
fsubr
fisttps
nop
add
stos
cmp
dec
mov
movsl
mov
push
lcall
loop
fwait
add
jge
pushf
int3
enter
jo
sbb
bound
or
loope
push
cli
cld
nop
add
bnd
cmp
ja
out
shlb
ret
inc
mov
fisubs
sub
inc
xor
xor
mov
cwtl
jae
mov
sbb
mov
push
mov
or
jmp
out
sbb
adc
shrb
dec
sub
xchg
outsb
aam
sub
push
aam
scas
jle
mov
rolb
out
pop
push
pusha
sahf
jle
je
int
and
jne
inc
repz
leave
push
pop
call
dec
das
es
jns
rorl
out
jns
xchg
mov
or
roll
movsb
jb
mov
and
lcall
and
repnz
outsb
add
cld
lods
jle
sbb
lahf
xlat
pop
inc
ja
outsb
add
movsb
pop
lods
cwtl
xlat
test
mov
mov
push
dec
scas
ljmp
push
popf
xchg
xchg
mov
or
mov
je
xchg
fs
mov
sbb
pop
mov
dec
popf
adc
fmul
and
push
mov
stos
push
sbb
mov
adc
lcall
aad
iret
std
lods
add
js
or
scas
rep
push
lods
mov
add
roll
pop
sub
pusha
inc
ret
add
shr
add
mov
bound
add
or
inc
insb
pop
popf
ss
jae
out
arpl
xchg
lock
in
sbb
mov
pop
cltd
aam
mov
sbb
mov
push
icebp
or
xchg
rcrb
popf
inc
push
lods
andb
sbb
mov
sbb
xchg
xorb
inc
call
outsb
or
pop
mov
into
push
jb
aas
or
les
sub
mov
insb
mov
dec
mov
sub
into
add
or
shrb
xchg
mov
pop
and
gs
jge
mov
lods
popa
add
lret
vpaddusw
repnz
dec
call
xchg
cmp
stos
subl
popa
cmp
gs
dec
push
pop
repnz
and
rclb
ljmp
stc
out
aas
shl
lods
and
add
mov
xlat
bound
fcoml
insl
mov
sti
out
leave
into
mov
sahf
pop
shll
jmp
and
cmpsl
lret
sbb
mov
sub
inc
ret
inc
xor
aam
leave
or
xchg
daa
bound
fsubrp
push
mov
ds
int3
gs
in
lock
push
je
xchg
mov
push
lds
inc
mov
xor
and
jb
stos
mov
sahf
sbb
cld
outsb
or
stc
dec
cmp
and
push
bound
xchg
sub
repnz
test
push
xor
leave
pop
mov
les
fdivl
jo
sub
adc
pusha
sub
dec
int
inc
out
and
push
cmp
clc
hlt
jmp
cltd
les
nop
lds
popf
pop
add
mov
cld
lea
pop
push
inc
mov
push
mov
dec
or
lods
mov
int3
or
loopne
repz
ja
push
das
pop
fmulp
mov
ss
adcb
das
push
mov
mov
jbe
add
int3
incl
xchg
bound
xor
orb
pop
sbbl
insl
cs
psrld
test
jne
push
mov
pop
add
cmpsb
popa
sbb
push
out
mov
out
xchg
dec
clc
add
insb
jmp
jg
sub
out
push
ss
cmp
daa
pushf
cli
mov
scas
aad
aad
test
xchg
add
mov
push
ficomps
daa
mov
stc
dec
inc
sarb
mov
pop
push
rolb
cmp
int
stos
or
mov
mov
pop
jle
mov
jbe
xchg
cli
sahf
xchg
daa
call
imul
jb
mov
sub
iret
mov
sahf
arpl
add
dec
jno
shl
sbb
adcb
mov
cmpsl
inc
inc
mov
add
push
mov
cmp
or
repnz
in
cmp
outsb
les
mov
sbb
out
clc
movsl
inc
push
fwait
mov
inc
aas
sahf
sbb
cmovae
sbb
adc
fs
mov
push
push
sti
push
int
inc
popf
adc
cmp
pop
movsb
jl
cmp
cmc
mov
mov
add
jo
mov
stos
lds
ror
sub
push
lods
and
pop
call
sub
and
movsb
sbbb
sbb
test
ljmp
dec
fs
sub
sbb
cmp
xchg
filds
in
lock
mov
cmp
fwait
mov
cli
pop
fimuls
pushf
cmp
fidivs
mov
sub
ret
mov
sbb
sub
adc
stos
rcl
test
scas
pop
insb
push
cmp
dec
sub
stos
pop
inc
push
cmpl
jno
aaa
pop
lret
adc
clc
imul
repnz
lea
add
inc
out
lcall
or
clc
pop
cli
lahf
sub
ss
std
push
mov
in
cmp
je
loope
inc
mov
popa
pop
pop
sbb
adcb
xor
dec
repnz
mov
xchg
dec
cmp
ret
xor
xchg
mov
jp
call
data16
stc
mov
dec
inc
cmp
jae
mov
out
pop
sub
fcoms
in
scas
pop
push
jnp
jg
inc
xchg
in
and
out
scas
dec
xor
adc
loope
mov
push
cmp
popf
lcall
hlt
dec
or
rcll
jg
das
sbb
mov
sbb
cli
add
lcall
bound
dec
sub
icebp
add
xchg
add
scas
sub
xor
leave
xor
cmp
movsl
and
push
fsubrs
push
mov
push
mov
ret
push
sti
mov
lahf
xor
adcb
movsb
xchg
mov
sar
test
dec
ljmp
sub
jb
adc
inc
nop
mov
and
sub
jge
pusha
mov
addr16
pop
in
sbb
das
fmuls
repz
push
xlat
mov
and
pushf
out
pop
dec
pop
mov
insl
bound
inc
lret
xchg
or
lret
xor
pop
nop
xor
mov
fs
scas
inc
and
fistpll
arpl
test
xchg
jae
ljmp
pop
mov
xchg
mov
push
test
nop
lods
xorb
pop
mov
mov
sub
cwtl
mov
pushf
cmp
xchg
jo
adc
mov
repnz
inc
xchg
idivl
movsl
sbb
dec
in
cmp
hlt
xor
and
mov
jb
mov
pop
push
leave
lret
push
adc
mov
sbb
popa
and
inc
push
add
fstpt
das
aad
popf
push
push
push
mov
icebp
mov
cmp
sbb
mov
inc
dec
sub
les
stos
fsubl
dec
std
xchg
pop
adc
adc
dec
mov
adc
cwtl
scas
xchg
add
in
mov
sbb
mov
mov
ret
cmp
insb
push
mov
aad
sub
xchg
mov
test
sar
xor
or
out
inc
imul
mov
jg
movsl
xchg
rcr
aas
jl
push
outsb
mov
pop
mov
jecxz
xor
push
dec
mov
rorb
ds
call
mov
jbe
sti
call
repnz
addr16
mov
add
les
cmp
mov
int
push
insl
sub
orl
push
and
inc
adc
scas
and
scas
test
jbe
inc
push
adc
in
iret
int
xchg
adc
stos
cmpsl
jge
and
ror
orl
push
ret
je
insb
jl
fldl
cld
testb
shlb
cmpsb
movsb
inc
sbb
add
nop
stos
es
aas
iret
cmc
sti
pushf
loop,pt
dec
daa
adc
hlt
add
xchg
add
icebp
dec
or
int
xchg
pop
test
adc
fsubl
sub
push
add
lahf
shrb
in
sarl
mov
test
int3
clc
add
scas
jle
stos
add
jbe
dec
push
lea
mov
je
ret
adc
pop
mov
gs
jnp
out
mov
cltd
pop
hlt
push
cmp
loop
fbld
xchg
je
test
cld
movsb
aam
cwtl
out
loop
push
xchg
or
xchg
out
xor
pop
cmp
and
ja
mov
jmp
add
xor
adc
call
ficoms
mov
fsub
push
inc
sti
ret
in
sub
adc
mov
and
push
pop
adc
cmc
icebp
adc
cmp
mov
lcall
jmp
in
stc
push
xchg
iret
jecxz
fldl
push
aaa
dec
push
sahf
push
jmp
sub
adc
mul
aaa
les
and
mov
cmp
outsl
sbb
sbb
jge
test
aad
lret
pop
pop
addb
inc
les
dec
xchg
ret
iret
inc
push
jl
mov
inc
jbe
inc
rolb
xor
popa
jl
cmp
add
jecxz
xor
repz
aas
sub
dec
dec
or
sarb
popf
jmp
jne
test
fmulp
loop
sub
add
jle
out
mov
fstps
es
pop
les
stos
add
and
cmpsb
stos
or
mov
ret
in
jno
xlat
cmp
int3
or
or
lret
ret
jbe
mov
int3
jae
pushl
pushf
test
sub
leave
imul
sub
jecxz
ja
ret
sub
jnp
cli
inc
je
push
test
fdivrs
or
mov
dec
and
push
or
dec
shlb
adc
mov
or
pop
adc
fdivs
xchg
xor
lcall
jmp
xchg
dec
in
xchg
cmp
sub
dec
sbb
xchg
dec
push
adc
sahf
jb
mov
nop
mov
push
adc
clc
lods
lods
lea
lahf
jge
dec
cmpsl
mov
xlat
and
push
push
push
call
push
rcr
repz
sbb
lea
inc
cwtl
fldenv
add
dec
sub
sbb
inc
ret
test
add
cmp
stc
int
xor
mov
testb
outsb
add
add
pop
nop
or
movsb
cmp
xchg
mov
pop
mov
jmp
cmp
test
sbb
andl
and
xorb
inc
lods
push
decb
dec
pushf
daa
sbb
outsb
mov
xchg
push
testl
inc
rorl
pop
dec
xchg
or
rcr
jecxz
arpl
imul
adc
sbb
adc
pop
imul
jnp
sbb
popf
cmc
std
repz
shrl
scas
sbb
es
aad
cmp
outsl
cmc
sub
add
nop
cmp
sub
or
hlt
sbb
mov
cmp
stos
jnp
cltd
push
mov
pushf
pop
jmp
pop
cmpsl
pop
fistps
xor
dec
mov
xor
and
aam
fiadds
sub
test
int3
jae
std
enter
in
aas
pop
and
ljmp
enter
mov
idivl
sbb
jecxz
xchg
push
loopne
mov
lods
insb
inc
das
sub
adc
mov
jecxz
nop
jecxz
jae
push
sbb
push
fiadds
stos
ljmp
jno
mul
xchg
cmp
xorb
aam
push
add
dec
pop
xlat
sbb
jle
notb
js
and
out
inc
pop
and
jb
repz
shlb
into
xchg
daa
jne
shll
jecxz
mov
ljmp
cltd
push
xchg
add
ret
cmp
jne
lods
adc
mov
out
cmpsl
adc
adc
dec
cs
idiv
cmpl
outsl
mov
popa
bound
inc
inc
fcomip
mov
ljmp
imul
js
lods
fdivrs
in
incl
lret
in
jp
cmp
xchg
add
mov
ds
inc
inc
or
sqrtps
lahf
inc
sbb
mov
movsb
sub
pop
push
js
cld
mov
add
xor
aas
enter
sub
int
das
enter
je
inc
orl
out
in
lea
lret
push
mov
test
and
cli
push
mov
xchg
test
fadds
and
cmovs
and
or
