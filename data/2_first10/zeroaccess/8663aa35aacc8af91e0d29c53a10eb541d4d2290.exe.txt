push
mov
sub
xor
mov
mov
cmpl
movl
mov
mov
mov
jmp
movl
jne
push
push
push
push
push
push
pushl
push
call
xor
subl
sub
neg
movzwl
sub
mov
mov
sub
inc
push
mov
mov
sbb
addl
mov
orl
movzwl
adc
mov
orl
and
mov
cmpl
mov
mov
not
jmp
movl
mov
jl
push
push
pushl
pushl
push
push
call
xor
dec
add
sbb
mov
add
add
mov
sub
mov
cmpl
mov
mov
jmp
movl
mov
jb
pushl
push
call
andl
mov
mov
or
sbb
orl
mov
sub
mov
sbb
add
mov
orl
orl
dec
lea
mov
mov
xor
mov
mov
add
mov
sbb
mov
and
mov
and
mov
and
shrd
shr
mov
xor
mov
adc
mov
jmp
stos
xchg
sarl
cmp
and
icebp
push
cmpb
movlps
outsl
call
dec
mov
stos
cmpsb
mov
lea
ret
pop
rorb
mov
hlt
test
popf
fldcw
push
rorb
scas
inc
sbb
scas
ror
arpl
icebp
dec
js
mov
adc
js
dec
cmp
mov
jns
pop
lahf
or
inc
les
call
sub
movsb
fsts
pop
mov
fidivrs
xor
inc
dec
xchg
in
xor
mov
shlb
stos
iret
mov
cltd
cmp
mov
lock
mov
xchg
lods
pop
sbbl
in
enter
out
test
in
inc
aad
and
pop
add
or
lcall
loope
xor
xor
adcb
popa
xor
mov
sub
out
dec
pop
data16
xchg
gs
loopne
inc
xor
dec
int
sub
mov
stos
jmp
roll
popf
fwait
out
fdivr
je
add
lods
mov
mov
push
inc
jp
in
xor
or
cmpsb
xor
pop
out
adc
ljmp
mov
leave
xor
mov
adc
jae
push
pop
push
cmp
lea
push
xchg
adc
in
ja
out
add
push
sub
jne
inc
lret
mov
jae
es
sbb
int3
es
out
enter
add
inc
jle
add
xchg
xchg
xor
insl
pusha
dec
movsl
push
cmp
scas
push
pavgw
xor
out
xchg
or
std
in
or
pop
inc
push
cmp
ret
fldcw
mov
and
lahf
inc
flds
in
and
adc
mov
fisttpl
or
in
dec
cmp
adc
push
dec
nop
dec
adc
xor
subl
xor
jmp
mov
push
xchg
mov
movlps
movlps
sbb
mov
pop
icebp
pop
push
or
bound
adc
cmp
outsb
xor
pop
lahf
aam
bound
repz
xchg
pusha
push
sar
shlb
jo
sub
xchg
leave
pushf
fs
push
inc
rcr
lret
jecxz
mov
fwait
adc
movsl
mov
gs
xor
add
cmp
pop
mov
mov
jns
jmp
je
inc
sbb
in
pop
lret
dec
popa
nop
xchg
jmp
dec
rcrb
mov
out
testl
pop
xchg
and
push
mov
scas
jmp
push
mov
push
mov
adc
bound
mov
imul
xor
aas
repz
mov
andb
int
xor
dec
stos
jb
call
dec
xchg
xchg
cmpsl
arpl
jmp
add
ljmp
and
cwtl
shlb
stos
stos
dec
xchg
mov
inc
in
pop
scas
xchg
cs
add
cmp
ficomps
es
clc
mov
mov
mov
add
mov
in
movsb
lret
test
pop
adc
movl
sbbl
sub
iret
jmp
and
mov
outsb
adc
loop
mov
fsubs
push
shlb
fidivrl
xor
sbb
in
jl
and
add
sbb
mov
push
adc
clc
test
ljmp
push
aas
push
and
lods
mov
cmp
andb
push
xor
inc
insb
jle
ds
mov
ljmp
inc
inc
icebp
pop
loop
fldt
push
xchg
pop
mov
cwtl
mov
dec
inc
lods
xchg
xlat
adc
jle
push
ficoms
rorl
rorb
nop
push
sub
add
inc
xchg
outsl
inc
add
adcl
movl
movl
and
movl
movzbl
xor
movl
subl
movl
cmpl
mov
movl
mov
movl
jmp
mov
je
push
push
push
call
andl
andl
orl
andl
sub
adcl
cmpl
movl
movl
movl
jmp
mov
jne
pushl
pushl
call
subl
orl
or
xorl
andl
sub
adcl
xor
dec
movl
and
movl
movl
mov
add
movl
movl
movl
movl
and
movl
cmpl
movl
movl
movl
movl
jmp
mov
mov
jb
pushl
push
call
addl
adcl
addl
andl
orl
neg
movl
xor
movl
adcl
movl
sbb
movl
movl
movl
sbbl
movl
adc
mov
orl
shl
mov
adcl
push
push
push
push
subl
call
mov
xor
mov
negl
xor
cmpl
mov
mov
jmp
movl
mov
ja
push
push
pushl
pushl
call
adc
adcl
adc
or
mov
subl
jmp
jno
sub
cmp
push
pop
js
mov
adc
movlps
cmp
nop
xor
imul
fwait
mov
mov
xlat
fistps
xlat
lret
ljmp
jo
sbb
jbe
jns
xor
fldenv
lods
or
sub
cwtl
gs
xchg
lock
sbb
ljmp
mov
xchg
shrl
push
movsb
lret
xchg
xlat
push
ja
notl
loope
ja
jmp
pop
jmp
adc
mov
xchg
sub
xchg
test
popa
call
xor
mov
mov
iret
aam
push
push
adc
in
mov
lea
mov
sbb
inc
fistl
inc
hlt
js
push
mov
cmp
mov
in
xor
aad
testb
movsl
pop
cmp
adc
movsb
mov
lcall
cld
ds
outsb
outsb
push
cmp
inc
mov
movsb
daa
sbb
mov
loop
cmp
fldcw
ss
pop
pop
sub
jnp
jge
add
in
fst
push
fwait
in
repz
sbb
inc
aad
shrb
test
inc
pop
mov
dec
aas
pop
adc
fcom
pop
jo
or
xor
push
loopne
and
cmp
mov
or
and
push
call
jns
push
das
popf
lds
sub
push
inc
lahf
xchg
mov
adc
push
dec
pop
pop
push
into
mov
fwait
mov
lahf
xor
adc
cld
cmp
into
popf
stc
insl
mov
je
movsb
stc
les
rcll
push
sahf
jmp
je
push
mov
cmc
pop
pop
and
jge
ja
loope
lock
or
mov
insl
mov
loope
dec
data16
ljmp
gs
dec
adc
sbb
and
les
inc
iret
cwtl
xchg
mov
roll
sub
cmpl
notl
mov
jmp
movl
movl
jbe
push
pushl
pushl
push
pushl
call
adc
add
movzbl
xor
mov
sbb
adc
sbb
xorl
mov
lea
sbb
mov
mov
adcl
or
andl
and
cmpl
movl
mov
mov
jmp
movl
jg
push
push
call
adc
xor
xorl
and
orl
cmpl
movl
mov
movl
jmp
movl
jb
pushl
push
pushl
push
pushl
pushl
call
dec
movzwl
adc
addl
add
and
movzwl
or
mov
inc
not
mov
xorl
or
notl
xor
movl
cmp
jne
mov
adc
mov
jmp
push
sbb
xor
adc
pop
pop
adc
movlps
ljmp
pushf
out
mov
jns
push
imul
mov
mov
fs
imul
dec
and
push
stos
fmulp
dec
xor
sub
and
and
mov
fcoms
adc
aad
das
push
cli
pop
leave
in
push
loop
sub
orl
add
neg
cli
cltd
sbbb
push
hlt
pop
sti
popa
shlb
adcl
add
or
xchg
and
mov
mov
fistl
sbb
pushf
ficoms
pusha
rolb
mov
mov
jp
mov
mov
clc
pushf
repz
jns
loop
add
imul
daa
push
aas
repnz
mov
and
mov
das
or
push
dec
cmpsl
pop
lahf
mov
movsb
cwtl
fiadds
lahf
faddl
hlt
mov
jb
xor
cmp
adc
and
int3
xchg
push
cmp
lret
in
jae
xchg
popf
sbb
adc
mov
pop
or
mov
push
test
fdivrl
xchg
adc
sbb
inc
mov
sbbb
repz
push
sub
lods
pop
ret
mov
insl
loope
jae
stos
jbe
neg
sub
dec
fstpt
jno
dec
sub
push
inc
cmpsb
stc
dec
subb
repz
dec
adcl
push
ja
outsb
mov
aam
ret
push
into
scas
push
jge
hlt
hlt
jle
mov
mov
div
mov
sbbl
popa
or
call
divb
sub
ret
mov
push
outsl
sbb
insl
xlat
jmp
negl
aas
test
mov
addr16
xor
jg
stc
add
adc
shrl
push
lret
or
add
lods
roll
cmp
add
movl
movl
movzbl
jmp
movl
mov
jl
push
push
push
push
push
call
dec
xor
add
xor
xor
adc
and
orl
movl
shr
sub
mov
mov
shl
addl
xor
andl
xor
subl
or
mov
mov
cmp
jne
mov
adc
mov
cmpl
movl
mov
movl
mov
jmp
movl
mov
jle
pushl
pushl
pushl
push
call
add
xor
add
or
xor
adcl
neg
movzbl
add
mov
sbbl
xor
mov
cmpl
mov
mov
mov
jmp
mov
movl
ja
push
push
pushl
call
xor
sbbl
and
movzwl
xor
mov
adcl
sbb
mov
mov
shrd
subl
mov
cmpl
mov
mov
mov
mov
jmp
mov
mov
jge
push
push
push
push
push
push
push
call
adc
notl
sbbl
mov
or
decl
mov
xor
shr
xorl
jmp
and
aaa
and
ljmp
mov
movlps
scas
sub
ljmp
mov
and
pop
push
dec
mov
xchg
xchg
inc
adc
sbb
pushl
dec
inc
in
loop
mov
cltd
jns
ljmp
hlt
jnp
les
arpl
dec
xor
jbe
insl
and
rorl
dec
or
and
inc
adc
cmpsl
rolb
popf
add
loopne
out
test
pop
inc
or
lahf
mov
jbe
inc
out
jmp
mov
mov
mov
jp
or
sbb
aas
mov
aam
sbb
mov
push
dec
xor
and
ja
sbb
call
js
add
out
sub
pop
out
mov
cmp
sahf
sub
ret
push
push
push
mov
ret
xchg
mov
mov
test
mov
mov
dec
pop
pop
cmp
addr16
das
sub
xchg
pop
cwtl
inc
hlt
out
sti
push
sar
pusha
shlb
xchg
cmp
dec
data16
shll
bound
fwait
xchg
push
lahf
push
xchg
fnstsw
push
and
jg
and
out
mov
in
in
test
xchg
shlb
mov
push
dec
fdiv
pop
int
mov
lret
push
xor
xor
leave
ret
jp
pop
rolb
insl
jg
jp
test
push
rcrl
stos
sbb
rcll
push
push
insb
inc
cmpsl
stos
fnstsw
inc
pop
jb
adc
int
pop
jle
lahf
dec
dec
inc
add
inc
mov
xor
add
lret
test
cltd
pop
or
mov
and
add
dec
jbe
scas
shll
shlb
cwtl
cli
in
mov
daa
jns
cli
ret
cmp
or
test
cmp
repnz
out
mov
notl
xor
orl
or
adcl
shl
sub
mov
mov
sbbl
mov
xor
add
mov
mov
cmpl
notl
movl
jmp
mov
jg
push
call
negl
xorl
sbb
sbb
add
mov
or
mov
jmp
test
and
and
test
ljmp
lods
call
adc
movlps
out
dec
xor
inc
xchg
mov
add
mov
imul
aaa
test
mov
repz
mov
xor
in
mov
outsb
fstps
mov
aad
push
or
xchg
or
ret
stos
fwait
jmp
pusha
shl
sbb
mov
int
jg
inc
in
call
mov
xchg
sbb
xchg
hlt
or
aad
fldl
fildll
lahf
add
mov
sar
cltd
lret
push
ljmp
mov
cmp
jae
xor
lods
enter
push
sub
dec
jns
push
mov
stos
test
daa
and
sahf
mov
lods
cmp
pop
hlt
hlt
in
or
outsl
xor
rclb
add
gs
into
xor
lret
hlt
mov
inc
mov
pop
orb
pop
shll
mov
div
test
add
repnz
pushf
xor
mov
out
shrb
dec
daa
call
inc
mov
mov
out
push
test
outsb
or
xor
mov
into
xchg
cmp
iret
xor
mov
push
adc
jmp
mov
jae
fidivrs
das
test
outsl
ds
or
out
cmc
sub
or
or
cmpsb
or
fidivl
push
inc
loop
sarb
imul
sub
push
addr16
jmp
mov
sub
mov
and
sbb
sahf
leave
jp
add
aam
or
aad
shll
rcr
ret
sbb
xchg
xor
push
push
leave
dec
imul
test
jecxz
inc
test
fcomps
jmp
in
loop
js
jle
xor
sbb
or
jno
stos
insl
mov
inc
add
adc
sbb
mov
shrd
shr
adc
mov
xorl
mov
dec
xor
shl
mov
adc
mov
xor
cmpl
movl
mov
mov
jmp
movl
movl
jbe
push
pushl
call
add
xorl
or
movzbl
or
mov
mov
or
mov
addl
or
movzbl
and
mov
mov
xor
or
add
mov
shrd
orl
shr
adc
mov
mov
cmpl
movl
mov
jmp
movl
jg
push
pushl
push
push
call
dec
sub
sbb
decl
sbb
cmpl
mov
movl
jmp
movl
jae
push
call
sbbl
and
adc
mov
add
add
or
sbbl
adcl
mov
movl
xor
xor
or
shl
lea
mov
mov
adcl
shrd
shr
cmpl
movl
mov
jmp
mov
movl
ja
push
call
sbb
mov
sbb
inc
inc
sub
subl
cmpl
mov
mov
jmp
mov
jl
pushl
call
xorl
add
xor
xor
xor
sub
or
mov
mov
mov
or
xor
mov
or
mov
xor
or
addl
shl
imul
cmpl
movzbl
mov
mov
movl
jmp
mov
ja
pushl
push
pushl
push
pushl
pushl
push
call
movzwl
sbb
addl
or
sbb
and
mov
cmpl
mov
mov
mov
jmp
movl
je
call
sub
orl
and
sbb
sbbl
decl
subl
xor
mov
shrd
orl
mov
jmp
xchg
arpl
pop
inc
push
pop
pop
adc
in
jle
cmp
js
sti
adc
movlps
cmpb
inc
xor
push
out
sbb
adc
dec
fidivrl
jg
mov
int3
mov
subb
add
lods
adc
lcall
pop
adcb
mov
or
test
xor
call
imul
mov
mov
pusha
or
or
add
jle
jae
lods
dec
sub
fsub
sub
inc
adc
loop
stos
pop
pop
push
mov
mov
mov
repz
pop
stos
or
out
mov
je
jl
push
imul
lcall
inc
mov
and
jle
push
push
imul
push
imul
pop
sbb
jl
jmp
mov
loopne
jle
pop
notb
xchg
ss
xchg
mov
aam
icebp
mov
xchg
push
shll
pop
push
out
jp
adcl
mov
mov
les
lcall
xor
ja
lods
push
stc
jge
imul
dec
jnp
aaa
pcmpgtw
in
pop
test
xor
mov
les
es
icebp
cld
hlt
jb
repnz
or
into
sbb
cmp
addr16
ret
mov
bound
cmpsl
jp
ret
pop
add
dec
in
xor
cmp
mov
cmp
testb
mov
mov
and
ja
jb
pop
sub
iret
adcl
lcall
mov
fbstp
lock
and
sub
pop
rclb
mov
mulb
jb
icebp
add
add
daa
in
add
jge
loope
sbb
xlat
aad
out
popf
fnstsw
cmpsb
jp
cwtl
repnz
addl
xor
imul
rcrb
sub
jno
adc
mov
addl
xor
sbbl
shr
mov
mov
orl
xor
subl
or
addl
shl
negl
sub
movl
mov
jmp
add
add
and
test
div
adc
movlps
and
into
cs
inc
push
cli
dec
loopne
insl
push
daa
out
cmc
push
adc
loopne
lea
pop
push
sysret
sub
cmpsb
cld
dec
jecxz
movzbl
dec
lret
cmp
add
cmp
insl
or
cwtl
jge
std
into
or
push
adc
jne
pusha
pop
ds
mov
insb
sbb
ret
inc
aam
sub
mov
cmp
jae
movsl
data16
pop
lret
add
call
add
dec
mov
mov
shlb
cmp
adc
imul
sbb
xchg
mov
xchg
ss
test
adc
adc
scas
dec
and
mov
jle
testb
and
lret
inc
pop
movsl
mov
dec
pop
test
xchg
mov
pop
push
cmp
jno
jae
push
cmp
fimuls
mov
jge
jo
jl
enter
mov
hlt
jmp
push
mov
adc
xchg
cs
inc
mov
or
sbb
inc
cmp
imul
es
sbb
sub
stc
rcll
push
mov
inc
adc
sub
es
jg
or
push
in
aad
mov
leave
mov
jle
imul
adc
loop
shlb
jmp
mov
jle
jne
sbb
xchg
into
imull
imul
lcall
mov
lret
imul
test
jmp
add
outsl
cld
fsub
jne
sbb
aas
sub
cmpsb
ja
sub
jne
rcll
fldcw
leave
ss
push
into
or
and
vmwrite
jns
outsb
mov
clc
out
mov
scas
lea
and
xlat
fdivr
stos
call
sub
jnp
pop
jecxz
inc
xchg
lret
fistpll
out
ja
xchg
or
cmp
mov
mov
jg
mov
orl
mov
adcl
shrd
mov
or
mov
sbbl
xor
orl
shl
xor
or
shr
mov
cmpl
not
not
mov
jmp
movl
jb
push
pushl
call
not
inc
sub
mov
and
mov
mov
sub
sub
addl
and
movl
mov
sub
mov
xor
mov
shrd
shr
mov
mov
adc
mov
mov
mov
movl
xor
xor
andl
or
shl
imul
sub
jmp
or
mov
mov
xor
mov
addl
shrd
mov
mov
sbbl
xor
sbbl
shl
xor
or
sbbl
shr
mov
adcl
mov
mov
movzbl
sbb
mov
addl
shrd
shr
mov
jmp
cwtl
mov
lcall
cmp
adc
movlps
xchg
ret
cs
jg
stos
aas
mov
and
fucomp
dec
mov
mov
rcrb
sbb
ss
and
movl
xor
es
pop
lods
mov
fsts
scas
dec
or
sbb
fnstenv
xor
cmp
inc
sub
mov
xor
call
ret
mov
lret
adc
pushf
clc
je
jnp
lahf
int3
cmpb
cs
push
repnz
and
sti
shrb
inc
mov
sbb
mov
test
loope
fiadds
das
pop
mov
xchg
jb
dec
xor
mov
add
cmp
sub
add
mov
lock
xchg
negb
out
std
iret
nop
push
mov
andl
ret
inc
sub
inc
dec
dec
pop
mov
mov
scas
sarl
mov
gs
fildll
cmp
push
xor
jg
xor
dec
adc
pop
bts
movsl
int3
sbb
lahf
in
xchg
mov
movsb
push
add
mov
pop
scas
scas
lahf
flds
sub
jle
push
inc
push
and
xorb
sub
call
scas
cld
sbb
mov
mov
jecxz
cmp
push
xchg
ja
cmpsb
dec
xor
push
in
mov
test
loopne
data16
int
jge
loopne
iret
mov
stos
push
jnp
and
xchg
shlb
movsl
rcll
cmp
ret
pusha
add
push
xorb
sbb
mov
sub
roll
cwtl
and
dec
sti
nop
push
cltd
aam
loope
cld
xchg
data16
ret
mov
fwait
lea
inc
outsl
or
cltd
in
loopne
mov
jmp
cmpb
out
or
sti
xor
std
sbb
xchg
aas
fisttps
pop
ret
or
ss
mov
dec
pop
cmp
icebp
fdivl
mov
addl
mov
andl
xor
andl
xor
adcl
or
shl
andl
add
cmpl
mov
mov
not
jmp
not
jbe
push
push
call
adc
mov
xor
mov
sbb
sub
xor
add
mov
sub
mov
cmpl
movl
mov
movl
jmp
movl
mov
jge
call
movzbl
sub
mov
mov
add
and
sbb
sbb
dec
shrd
shr
mov
mov
xor
shl
xor
or
mov
movl
mov
mov
movl
mov
movl
mov
movl
mov
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
lea
mov
mov
mov
shrd
shr
mov
mov
shl
mov
xor
xor
or
mov
mov
xor
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
lea
mov
mov
mov
shrd
shr
mov
mov
shl
mov
xor
xor
or
mov
mov
or
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
lea
mov
mov
mov
shrd
shr
mov
mov
xor
shl
mov
xor
or
mov
mov
add
mov
mov
shrd
shr
mov
mov
xor
xor
or
lea
mov
mov
shl
mov
shrd
shr
mov
mov
xor
xor
or
mov
shl
mov
mov
mov
or
mov
mov
shrd
jmp
sbb
sbb
jmp
jp
js
out
adc
movlps
test
lods
pusha
mov
xchg
mov
jmp
addb
arpl
ss
mov
mov
ret
fmulp
mov
mov
fdiv
insb
mov
push
push
stc
or
addl
cmp
movsb
loop
stos
mov
je
mov
bound
rcrl
fsubrl
test
arpl
pop
cmp
dec
sub
ret
jl
and
inc
sbb
jae
stos
jle
xlat
inc
pop
cltd
sbb
cmpsb
xchg
lcall
mov
in
fisubrl
push
insl
jge
xchg
sbb
negb
mov
cwtl
jmp
mov
or
mov
xchg
rcl
jl
insl
xor
scas
push
pop
call
addr16
sbb
push
mov
bound
mov
cwtl
in
lret
jns
mov
sbb
sbb
dec
sub
and
jb
xor
pop
repnz
and
cmp
xchg
dec
cwtl
xchg
jg
push
popl
mov
data16
jle
jns
lock
aad
mov
dec
loopne
mov
je
mov
sub
xchg
jge
dec
add
es
push
cmpb
loop
add
xchg
push
lods
and
negb
pop
stos
mov
and
popf
mov
push
xor
rcpps
in
js
movsb
lds
roll
test
jmp
test
adc
movsl
test
push
sbb
sub
outsb
jo
adc
enter
pop
xchg
test
fnstsw
sti
mov
xchg
lds
pop
xchg
sub
add
jl
and
imul
sub
aas
imul
insl
imul
filds
clts
xchg
lahf
ss
inc
out
add
pusha
js
inc
jecxz
mov
cmc
stc
jbe
ja
dec
xlat
push
into
jmp
dec
jecxz
jp
xor
jmp
loopne
shr
mov
mov
xor
mov
xor
or
mov
dec
not
and
xor
mov
mov
xor
or
mov
jmp
mov
imul
test
adc
movlps
adcb
clc
sbb
out
insb
add
movsb
sti
or
lret
lret
push
xchg
call
sahf
jge
ret
inc
dec
dec
jne
jae
mov
mov
pop
xor
stos
mov
notl
mov
push
out
subb
push
mov
mov
ficompl
in
fwait
jb
sub
jge
push
sbb
or
data16
rorl
popa
push
push
mov
mov
stos
repz
sbb
shrl
or
inc
pusha
out
cmp
out
inc
pop
insb
movsb
sub
mov
adc
jo
into
rorl
ljmp
mov
clc
jbe
sub
jge
inc
lds
mov
cwtl
sub
adc
and
mulb
inc
lcall
pop
or
cmp
insl
sub
inc
push
mov
jns
jmp
mov
std
clc
jns
mov
fxch
jl
dec
test
dec
enter
insl
sbb
sub
out
in
aas
push
mov
adc
push
push
mov
repnz
inc
lock
jno
xchg
cmp
movsb
xchg
adc
mov
test
shrl
or
cmp
cwtl
ret
loop
cmp
sub
xchg
dec
movsl
scas
push
sbbb
iret
imul
pop
pop
lods
loope
cmp
cmp
inc
sbb
push
dec
sbb
in
movsl
xchg
mov
jb
pushf
popa
cmpsb
xchg
push
icebp
mov
push
pop
popa
jo
mov
add
sub
adc
xchg
push
out
mov
dec
imulb
mov
subl
cli
pop
push
inc
mov
xchg
jge
mov
aad
dec
or
xchg
push
out
test
stc
rcl
fcomip
add
lock
icebp
je
popa
jne
mov
xor
popa
sbb
shrd
shr
mov
mov
mov
xor
mov
xor
shl
mov
or
jmp
mov
outsb
mov
fidivrl
push
call
adc
sub
xchg
insl
push
test
mov
mov
sub
cs
jp
repz
and
lahf
ficoms
aam
aas
scas
inc
movsl
mov
test
test
ljmp
sub
jle
scas
ja
pop
mov
push
iret
stos
xchg
inc
jbe
stc
lds
mov
loopne
lahf
aaa
cld
bnd
fdivs
fdivrs
cmc
xchg
pop
fwait
stc
lds
fists
mov
xor
fs
ret
fldpi
mov
fidivl
or
es
cwtl
pop
jbe
mov
js
in
pop
cmp
lret
repz
ret
hlt
xchg
push
shr
insl
dec
popf
add
pushf
mov
shl
cmc
sub
subl
sbb
orl
inc
pop
in
repz
push
xchg
sbb
test
mov
lds
and
cmp
mov
out
outsl
xchg
addr16
mov
shlb
cmp
pop
jns
cmp
movsb
jne
in
jl
ret
xor
in
leave
sub
dec
shll
cmpsb
jnp
dec
cli
fistl
xchg
nop
add
loope
sbb
popf
imul
adc
and
lahf
dec
sbb
cli
test
lods
aas
lods
pop
out
scas
cmpsl
pop
lds
int3
jnp
jge
push
aam
nop
xchg
mov
cmpsb
sbb
pop
out
clc
xor
in
in
pop
clc
test
pop
pop
pushf
scas
loop
mov
repz
dec
jg
xchg
testl
cmp
xchg
xchg
test
insl
lahf
stos
push
sub
cs
loop
sub
dec
filds
pusha
cmp
incb
lock
cwtl
mov
out
and
sub
imul
mov
cmpb
cli
xchg
jle
xchg
fwait
decl
or
and
jmp
mov
mov
popf
fwait
push
jnp
dec
cld
cmp
je
mov
sub
mov
mov
xor
xor
shrd
shr
mov
mov
mov
mov
xor
or
mov
mov
mov
xor
xor
mov
mov
mov
shrd
shl
or
mov
mov
mov
shll
mov
mov
mov
xor
or
shr
or
cmp
jne
cmp
je
jmp
mov
mov
jmp
adcl
stos
xchg
or
in
adc
movlps
dec
adc
sbb
in
lea
cmp
repnz
ss
fidivrl
xchg
repz
imul
leave
mov
dec
imul
outsl
and
je
dec
and
subl
leave
outsl
cmpsl
cmp
testl
repz
mov
adc
push
shr
jg
adc
jl
pop
adc
pop
insl
mov
xor
cmpsb
cmpsb
in
cmp
inc
aad
outsl
hlt
rorl
mov
stos
push
mov
sub
pop
cmp
adc
cmp
and
adc
fidivl
pop
xchg
andb
movsl
add
and
ret
sti
out
ja
sbb
and
fucomp
nop
mov
pop
out
dec
xor
mov
pop
les
mov
push
cmpsl
test
fwait
shrb
mov
xor
rorl
pushf
insb
hlt
stos
pop
xchg
or
xor
and
push
fnsave
or
icebp
hlt
hlt
dec
out
fwait
aaa
test
cs
outsb
add
pushf
mov
jp
in
fnsave
bswap
gs
aaa
inc
das
in
into
stc
push
mov
orb
jecxz
outsb
test
insl
inc
jnp
notl
xor
sub
shll
mov
bound
or
subl
or
adc
insb
mov
adc
fwait
out
jnp
shlb
adc
add
sub
jmp
dec
lods
leave
ret
xor
dec
or
cltd
add
sub
pop
pop
es
call
test
lahf
push
mov
and
or
xor
mov
stc
sar
jg
imul
lcall
or
hlt
in
mov
pusha
or
sbb
scas
add
jecxz
imul
xor
fmuls
ja
imul
shr
mov
mov
mov
mov
xor
or
shl
or
mov
mov
xor
mov
mov
mov
mov
xor
mov
mov
shrd
shr
mov
mov
mov
shll
xor
mov
jmp
stc
popa
mov
inc
xor
jle
aad
insb
loopne
adc
movlps
adc
ret
das
or
or
daa
xor
and
xchg
cmc
xchg
push
xor
ret
hlt
add
dec
push
xor
xor
inc
cli
jl
cli
pop
inc
mov
in
test
dec
out
cli
mov
js
or
fcoml
je
or
mov
ret
in
in
sub
stos
mov
outsl
dec
cld
cmp
stos
push
cmp
xor
sub
test
fidivrl
loopne
mov
jns
sti
push
fmul
jg
pop
cltd
and
push
repnz
cmp
and
push
xor
jg
inc
outsl
sahf
sbbb
xor
hlt
xchg
cs
pop
insl
xor
or
inc
imul
test
loop
xchg
push
add
ret
jl
out
or
or
roll
mov
sub
sbb
jmp
adc
inc
fldlg2
add
popf
adc
xchg
repz
hlt
xor
push
je
sub
pop
sbb
dec
pop
movsl
aaa
iret
cmpsl
arpl
pop
cmp
in
mov
outsb
fs
leave
out
sub
jbe
decb
adc
push
jle
mov
inc
andb
push
repz
shlb
in
cmp
in
test
dec
fwait
int
xorb
mov
in
mov
inc
adc
leave
jg
jb
out
jle
out
xchg
lcall
xor
push
xchg
aaa
or
jmp
or
sub
adc
pushf
jmp
xchg
push
and
insb
fcmovb
aad
push
cmp
push
fnstenv
sbb
nop
outsl
scas
push
xchg
cmp
xor
cld
dec
addr16
aad
movsl
mov
mov
xchg
out
xchg
pop
sub
ss
in
xchg
cmp
sbb
arpl
pop
pusha
adc
mov
or
mov
mov
mov
or
mov
mov
cmp
jne
mov
cmp
je
mov
mov
mov
mov
lea
mov
mov
mov
mov
mov
shrd
mov
mov
xor
shr
mov
xor
shl
or
mov
mov
mov
xor
xor
xor
shld
mov
mov
mov
mov
shl
mov
cmp
jne
mov
cmp
jne
mov
mov
mov
mov
xor
xor
mov
mov
shrd
shr
mov
mov
mov
mov
xor
or
mov
shl
mov
mov
or
mov
push
jmp
mov
pop
lahf
push
or
lods
repnz
std
jle
fcoml
adc
movlps
jno
xchg
jmp
mulb
icebp
sub
inc
ljmp
int
jmp
pop
outsb
dec
nop
iret
ds
push
dec
daa
test
and
aam
std
pop
nop
lea
ficompl
popa
imul
xchg
mov
std
dec
jns
imul
inc
add
movsb
int3
leave
movsb
out
dec
adc
and
repz
jl
or
ja
push
call
mov
or
and
jle
ljmp
lret
push
and
fsubrs
mov
mov
cmpsb
sub
sahf
repnz
xlat
and
ljmp
pushf
insb
popf
addr16
repz
push
mov
inc
pop
inc
aad
sbb
pop
lret
pop
std
jmp
es
cmp
pop
jmp
pop
stos
mov
int
aad
and
cld
ljmp
mov
mov
adc
pop
pushf
mov
mov
xor
test
lds
pop
lods
scas
in
js
push
mov
xchg
les
xor
out
and
pmaxsw
lahf
or
outsb
xchg
push
cmp
and
sub
sub
jbe
inc
leave
pop
push
outsb
dec
push
xor
jb
jl
dec
xchg
iret
and
lret
xor
lods
jb
pop
sub
shrb
imul
in
pop
sub
xchg
jnp
add
and
pop
lret
clc
test
daa
jo
bound
insb
cmp
dec
fs
inc
scas
sub
insl
cmp
ds
xor
lea
and
inc
dec
in
mov
aaa
mov
push
outsb
iret
push
sub
lea
out
loope
pop
fwait
push
xor
in
into
push
inc
daa
lcall
out
sub
in
ret
pop
cmp
fisttps
adc
lret
add
mov
inc
dec
iret
or
jne
push
push
call
mov
mov
andl
shrd
shr
shr
xor
push
xor
jmp
push
shl
dec
jne
sub
lods
popf
mov
fcomp
adc
movlps
inc
cld
mov
and
dec
rorl
fisubrl
jmp
xor
xchg
daa
sarl
repz
test
adc
pusha
add
jg
fwait
adc
insl
or
adc
jae
bound
mov
scas
add
fwait
mov
lods
outsb
mov
stc
lcall
jge
jp
fsts
push
outsb
call
out
dec
int3
insb
add
mov
gs
outsl
je
jnp
adc
xchg
mov
pop
clc
xor
lods
lds
jge
je
int3
cmp
jnp
in
push
in
sbb
sub
mov
sub
scas
sub
xor
mov
cmc
and
cmp
fmull
cmovs
push
scas
sbb
or
sub
mov
mov
mov
pop
cmp
fdivrp
nop
cmp
sti
hlt
xor
push
jae
rcll
mov
bsf
add
jne
mov
mov
inc
outsl
jae
xchg
lret
jl
push
shr
psrld
pushf
cmpsl
das
rorw
mov
das
cmp
cmp
adc
test
mov
clc
adcl
or
jns
adc
leave
adc
stc
inc
ds
push
push
pop
rolb
inc
pop
mov
fsubrl
jp
jmp
and
pop
dec
in
adc
cli
mov
insl
mov
lods
or
or
adc
popf
sbb
loope
roll
imulb
jbe
in
imul
loop
adc
or
sbb
nop
pushf
cmpsl
mov
mov
or
std
sub
scas
flds
ss
outsb
dec
stc
cmpsb
jecxz
stc
iret
ljmpw
mov
mov
add
cmp
js
mov
out
pop
das
fwait
sbb
sar
loop
mov
jmp
sub
mov
fstpt
cmp
mov
movlps
test
ljmp
ljmp
xor
xchg
jno
daa
push
enter
test
xchg
cmp
out
adcl
push
mov
mov
xor
mov
ds
into
leave
jnp
inc
outsl
jne
sbb
mov
fst
pop
dec
mov
in
lea
cvtdq2ps
and
mov
sub
mov
jl
cltd
imul
in
js
sahf
ss
or
pop
cmp
mov
or
lds
popf
xchg
movsl
pop
jbe
add
sbb
push
sub
sub
ret
lds
dec
loopne
push
pop
or
popf
and
cwtl
inc
or
jp
sbb
dec
cmp
pushf
add
add
jl
mov
into
jge
pop
jo
loop
jge
popl
int3
aaa
inc
pushf
xor
jg
ds
aas
sti
xor
iret
mov
mov
or
mov
xor
pop
icebp
out
add
push
mov
sub
mov
sbb
mov
jne
idivl
jg,pn
mov
mov
dec
in
cmpsb
in
mov
or
mov
fistps
mov
mov
pop
add
mov
adc
push
lahf
cmpb
out
icebp
push
mov
adc
int3
lea
mul
cpuid
stc
ja
cmp
daa
xor
jmp
mov
push
out
rcll
fisttps
sub
les
int3
ds
in
push
inc
scas
jg
enter
push
xor
outsb
dec
xchg
data16
icebp
outsb
mov
stos
and
shl
sub
ds
adc
out
sbb
mov
js
stc
out
pop
pop
adc
adc
mov
sbb
mov
mov
mov
out
dec
js
sub
mov
mov
push
push
push
call
shld
mov
mov
or
mov
shl
or
xor
xor
xor
xor
jmp
lods
mov
xor
pop
sbb
js
xor
adc
movlps
inc
movsw
sbb
shrb
or
dec
loope
jl
pop
jmp
jbe
int
cmp
push
lret
mov
std
data16
rcrl
mov
sbb
clc
dec
jns
es
mov
int3
lds
popa
loope
mov
scas
outsl
clc
mov
push
arpl
daa
rcrb
push
mov
pop
xchg
dec
mov
or
mov
mov
push
mov
inc
lret
sbb
cltd
xchg
cmp
mov
mov
cmp
mov
adc
cmp
jno
jge
xor
out
popf
shrb
xor
sub
push
test
fxch
sti
pop
sahf
lea
push
jecxz
inc
fildl
mov
jmp
psubusw
hlt
add
loopne
adc
insb
repnz
nop
scas
in
adc
sbb
mov
pop
fs
nop
inc
ficomps
jp
pop
cltd
dec
fisubrs
inc
dec
mov
jne
test
xchg
lret
fldt
jl
mov
in
aad
add
mov
aad
lods
dec
xor
in
inc
dec
cltd
push
sub
loopne
xor
add
clc
pop
cmpsb
xchg
sbb
outsb
push
jnp
ss
ljmp
aam
dec
add
imul
ret
dec
xor
jns
jmp
jecxz
popa
add
fistpll
sbb
nop
loopne
clc
xorl
push
xor
out
jl
loopne
stos
rcl
pop
and
or
mov
mov
mov
jp
into
cmpl
sbb
outsb
mov
roll
leave
xor
lea
les
cltd
rorb
pop
dec
fnstenv
pushf
imull
ret
push
cmp
sbb
sbb
mov
pop
add
popf
push
sub
idivl
sti
jecxz
push
mov
jmp
mov
add
mov
mov
mov
mov
mov
mov
movzwl
cltd
xor
xor
shld
mov
mov
mov
mov
shl
mov
cmp
jne
mov
cmp
jne
movl
mov
movl
mov
movl
mov
movl
mov
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
add
mov
jmp
inc
mov
aaa
cwtl
arpl
push
cmp
push
int3
adc
movlps
push
mov
adc
push
sub
add
or
mov
or
aad
scas
cmp
ret
dec
dec
xchg
js
dec
push
fs
jp
cli
cld
inc
sbb
pop
aam
repnz
into
sub
loope
jmp
xchg
sbbb
stos
shrl
out
aam
outsb
xlat
cmp
jno
mov
sti
mov
add
in
mov
pop
xlat
pop
push
or
rorl
add
lcall
test
les
outsl
dec
cmp
inc
clc
iret
add
cli
stc
f2xm1
mov
test
negl
aam
addr16
xor
or
add
cwtl
std
sub
xor
inc
sbbb
movsl
cs
add
xchg
out
push
into
adcb
adc
mov
movsb
ror
movb
and
cmpsb
iret
test
cmp
lods
sub
sub
sbb
ss
fadds
cli
mov
xchg
nop
data16
inc
fwait
sub
int
test
out
movsb
jno
sub
stos
je
movsb
shlb
dec
imul
adc
loopne
jae
les
outsb
adc
ja
and
jnp
and
lods
test
cld
adcb
mov
dec
push
mov
jbe
aas
cs
jecxz
cmp
adc
xor
push
inc
mov
das
or
mov
out
enter
cmp
int
xchg
sub
pop
dec
mov
xchg
fisubrs
addr16
test
sub
lock
jmp
sub
shll
int
mov
sub
inc
xor
pop
push
lahf
cmp
push
int3
fwait
mov
stos
add
pushf
inc
jg
pop
sub
xchg
aad
stos
pop
xorb
lcall
in
inc
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
mov
mov
xor
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
add
mov
mov
mov
shrd
shr
mov
mov
xor
jmp
add
lret
lret
add
lcall
adc
movlps
push
xchg
sub
push
repz
imul
out
nop
jnp
fimuls
jb
fimuls
loope
fs
jge
jge
out
aaa
movsl
std
je
mov
out
pop
call
add
lret
push
jb
mov
inc
fmul
arpl
jno
mov
bound
imul
xchg
sbb
das
scas
push
iret
scas
loop
push
pop
adc
cld
sbb
out
xchg
pushf
pop
cli
testl
pmulhuw
shl
cmc
cli
jb
lcall
or
stc
int
xor
faddl
pop
mov
popf
sahf
or
pop
add
pop
std
cmp
or
xchg
inc
pushf
pop
aam
jg
mov
cmpsb
pop
xor
orl
loop
cltd
nop
icebp
dec
jne
data16
imul
dec
icebp
sarl
mov
mov
sub
xor
fs
in
test
cmpsb
jl
out
jo
jmp
mov
je
and
lcall
sub
in
cmp
aaa
lods
popa
gs
imul
xlat
fistps
sbb
scas
pop
xor
pop
fsubrs
add
aaa
mov
pop
inc
stos
jp
cmp
je
mov
pusha
push
xor
mov
pop
mov
aaa
cmpsl
ja
push
lods
mov
jge
mov
out
dec
outsb
jecxz
icebp
push
push
jecxz
mov
and
std
mov
mov
push
push
jl
mov
sbb
mov
imul
xchg
popf
jp
sub
mov
cmpsb
add
imul
sbb
out
sti
push
pop
adcl
loop
notb
pop
push
push
out
les
popf
or
sahf
inc
mov
rcrb
lahf
ss
out
and
jb
subb
scas
shl
xor
or
mov
mov
or
mov
mov
shrd
shr
mov
mov
jmp
inc
jl
xchg
pop
xor
js
push
loopne
les
adc
movlps
add
fistpl
xor
push
add
scas
mov
sbb
in
cmp
mov
mov
jae
test
push
dec
fdivl
cmpsl
lods
push
push
mov
push
cmpb
outsl
cmpsb
cld
fists
inc
out
hlt
fs
sub
out
cmp
inc
jl
mov
ficoml
aaa
mov
dec
in
loope
scas
xor
mov
mov
push
int3
cmpb
insl
push
mov
push
adc
into
xchg
xchg
adc
and
mull
lahf
aas
shrb
ret
xor
idiv
mov
daa
xor
repz
lret
push
adc
xchg
push
jmp
mov
xchg
cli
inc
lock
stos
outsb
popf
push
and
mov
fstps
add
pusha
lea
repz
div
push
sbb
mov
sub
sbb
pop
dec
addr16
jae
jnp
test
loop
jle
mov
mov
mov
mov
icebp
adc
inc
jo
stc
cmc
push
iret
and
cmpl
or
add
fstpt
jecxz
imul
add
xor
jge
push
add
gs
and
cld
mov
jb
fwait
mov
cmp
movsb
test
adc
mov
dec
mov
test
mov
cmp
in
and
sub
lods
mov
or
mov
mov
mov
mov
das
push
int3
loope
into
fnstsw
cli
jbe
sbb
lret
aaa
inc
je
js
ljmp
dec
fs
repnz
jne
push
fisttpl
cmp
push
push
sbb
jg
mov
sub
lock
mov
rol
sbb
xor
mov
bound
imulb
dec
fcompl
scas
aas
adc
shll
hlt
fcomp
std
fistps
dec
sbb
xor
or
add
shl
mov
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
mov
mov
add
mov
mov
shrd
shr
mov
mov
xor
shl
mov
xor
or
mov
shrd
add
xor
shr
mov
mov
xor
or
mov
or
shl
mov
mov
xor
mov
xor
shrd
shr
mov
mov
mov
mov
xor
or
mov
mov
mov
xor
xor
mov
mov
mov
shrd
shl
or
mov
mov
mov
shll
mov
mov
mov
xor
or
shr
or
cmp
jne
cmp
jne
jmp
jmp
jb
jecxz
gs
sbb
push
xchg
sub
adc
movlps
jp
xor
xor
xor
mov
out
out
adc
mov
ja
orb
mov
add
inc
out
pop
inc
adc
aas
push
xor
sbb
xchg
inc
xor
cmp
mov
pop
pop
push
pop
dec
fldl
pop
xchg
roll
aad
cld
repz
std
sub
icebp
sbb
pop
pop
gs
daa
or
pop
push
cmp
lcall
cmpsb
sbb
jne
mov
arpl
jle
out
lcall
sub
dec
or
imulb
mov
add
cmpsl
push
pop
mov
in
cmp
into
ss
inc
mov
das
aad
out
cli
jnp
xchg
clc
fmull
sbb
xchg
or
pop
sub
push
xor
scas
and
negb
jnp
inc
push
pushf
lret
jo
stos
shlb
inc
gs
jnp
in
daa
fsubr
push
pusha
subb
adc
js
jae
pop
pop
repz
mov
pop
mov
jmp
shll
lcall
sbb
loope
inc
fcmovnbe
out
mov
lcall
insl
mov
sub
push
cmp
loopne
or
jo
xor
or
stos
popf
int
push
outsb
ja
call
sahf
pushf
or
stos
xor
enter
jmp
sbb
sbb
add
mov
xchg
sahf
mov
ss
jno
xor
inc
push
dec
push
inc
jl
xchg
inc
outsb
mov
imul
inc
scas
dec
push
xchg
fistl
sbb
mov
movsb
xor
xchg
jbe
inc
je
add
mov
push
mov
or
mov
push
jo
std
sahf
test
popf
sbbl
pop
mov
adc
mov
test
es
das
mov
stos
mov
popf
push
sbb
mov
mov
mov
mov
xor
xor
mov
mov
shrd
shr
mov
mov
mov
mov
xor
or
jmp
imul
xor
and
mov
xchg
adc
mov
adc
fldenv
xor
jle
or
pop
sahf
loop
push
lods
push
test
mov
outsl
mov
lods
xor
into
pop
jg
sbb
lahf
insl
repnz
jle
xlat
cltd
and
cmp
cmp
adc
mov
mov
add
sub
loop
lds
xchg
xor
mov
xor
mov
push
sysenter
and
cs
das
pop
pop
sbb
sbb
sti
push
mov
int3
je
pop
cs
jecxz
test
add
fcmovne
cwtl
xor
add
push
xor
test
mov
jle
bound
xor
sbb
ret
xchg
out
stos
mov
fwait
mov
lcall
repnz
push
cltd
adc
jl
cmp
out
cli
hlt
sbb
xchg
rcl
int
xchg
nop
and
dec
or
adc
jb
idivl
mov
sbbb
fildl
test
cmp
rcr
ret
or
pop
in
mov
xchg
or
inc
xor
and
outsb
inc
xchg
push
sub
std
aam
pop
pop
aas
mov
adc
mov
ror
cmp
jb
and
decl
lock
adc
out
comiss
and
aad
mov
daa
mov
les
cmp
xor
push
leave
mov
push
sub
adc
push
cs
into
test
sbb
inc
jle
mov
jno
jp
or
outsl
mov
or
pusha
sub
cmp
aas
dec
lds
mov
jnp
xchg
test
ss
xchg
imulb
push
mov
int
ficomps
out
std
jnp
mov
cmc
out
jecxz
loop
aas
add
pop
adc
dec
lea
arpl
jno
push
mov
add
xlat
push
jo
mov
push
sar
cld
sub
mov
mov
or
mov
push
pushl
push
push
call
mov
mov
andl
shrd
shr
shr
xor
push
xor
mov
mov
mov
push
push
push
call
shld
or
shl
or
xor
xor
mov
mov
mov
mov
mov
xor
xor
shrd
shr
mov
jmp
mov
xlat
sbb
pop
inc
ss
mov
movlps
inc
mov
adc
loope
mov
loopne
push
ret
test
je
repz
push
push
fdivrp
mov
adc
pop
mov
pop
jns
aas
out
xor
lcall
mov
stos
pop
and
mov
push
mov
push
xor
mov
push
pop
cmove
loopne
loop
stos
dec
shll
adc
lds
into
rcr
and
cmp
xchg
mov
jo
jmp
xchg
xchg
sti
adc
add
jecxz
inc
dec
pop
shrl
fs
mov
test
test
sahf
sub
int3
cmp
ja
adc
cmpsl
mov
mov
call
scas
xor
shl
xchg
orl
outsl
inc
add
add
mov
cmpb
sbb
ljmp
push
xchg
adc
inc
sbb
xor
jg
dec
sbb
in
jmp
mov
inc
jmp
jl
sti
mov
enter
and
ljmp
or
pop
jp
push
addr16
rcrb
and
add
cmp
xchg
xor
or
std
and
pop
or
call
in
in
in
aas
inc
int3
ret
jb
test
call
sahf
sbb
cmp
aad
mov
jge
repnz
dec
lret
daa
scas
inc
and
outsb
xchg
dec
aas
cs
or
xor
dec
pop
xor
aad
mov
push
rclb
movb
mov
jp
mov
sarl
ljmp
push
dec
add
cmp
xor
insl
dec
and
aam
rcrl
sarl
mov
push
testb
iret
mull
mov
push
jbe
sub
lret
push
pusha
mov
jnp
jae
or
shl
or
xor
or
mov
mov
mov
mov
xor
xor
mov
mov
mov
shrd
xor
shr
shl
or
or
cmp
jne
cmp
je
pushl
pushl
pushl
push
push
call
pop
leave
ret
cmp
jae
cmp
movl
jae
subl
shrd
movl
shr
ret
mov
xorl
xor
and
movl
shr
ret
xor
xor
ret
push
mov
sub
and
movl
cmpl
movl
mov
mov
movl
jmp
movl
jae
push
pushl
call
adc
and
mov
sbb
sub
andl
mov
cmpl
movzbl
notl
movl
mov
jmp
notl
jle
push
pushl
push
pushl
call
xor
add
andl
movl
or
add
mov
movl
mov
mov
or
movl
movl
sbb
movl
mov
mov
or
push
and
movl
cmpl
mov
movl
mov
jmp
mov
notl
jge
pushl
pushl
call
sub
and
sub
movzbl
or
add
neg
subl
movl
movzbl
sbb
push
adc
movl
add
mov
mov
push
orl
push
orl
push
sbbl
jmp
shrb
push
sbb
mov
mov
adc
lahf
movlps
inc
xchg
sbb
roll
push
in
stos
add
sbb
add
jbe
pop
call
hlt
jg
xor
mov
pop
outsb
jbe
mov
mov
ds
in
add
fdivs
add
sbb
leave
cli
mov
test
test
cmpsl
cmpsb
pop
jb
dec
std
ret
mov
les
mov
int3
pop
push
mov
lcall
scas
cld
mov
mov
das
ficoms
push
js
dec
out
aaa
cli
mov
clc
sbb
shlb
inc
jno
or
xchg
cli
fcompl
inc
xor
or
push
push
cltd
arpl
pusha
push
fmull
sub
pop
xor
jge
hlt
xlat
xor
mov
scas
adc
shlb
js
push
jl
shr
jbe
insb
cmpl
xchg
mov
pop
jp
push
stos
in
popf
stc
ret
jmp
sbb
xchg
xchg
incb
iret
sahf
jns
mov
mov
fsubrp
and
inc
jmp
js
push
aas
sub
adc
nop
dec
lds
into
push
push
enter
inc
push
jne
fld
mov
sahf
dec
lea
pop
pop
mov
call
lret
cmp
jmp
push
sti
out
jp
mov
cmp
lds
inc
dec
jnp
push
mov
into
pop
lock
sub
dec
pop
cs
cmp
testb
aad
xor
inc
js
cld
push
stos
test
mov
adc
cltd
cmp
and
mov
jp
inc
mov
mov
xor
mov
scas
adc
filds
ds
xchg
dec
cs
es
scas
movsl
loopne
sbb
adc
push
xor
sub
and
pop
xchg
or
lret
pop
adcl
pop
in
xchg
popl
lcall
sub
push
mov
lods
negb
xchg
inc
sub
push
dec
jae
mov
bound
ljmp
and
mov
dec
insb
cltd
stos
popa
loope
pop
pushf
mov
xor
xchg
imul
data16
pop
xor
hlt
outsb
push
xchg
dec
push
push
mov
mov
fisttpl
iret
add
orb
test
mov
in
int
je
lret
std
xor
imul
dec
push
and
xor
sbb
loope
inc
lds
cmp
inc
dec
jae
std
scas
mov
sbb
call
cmpl
mov
movl
jmp
mov
mov
jae
push
call
mov
mov
sub
xor
andl
sbb
adc
adc
or
mov
xor
mov
mov
orl
push
addl
or
sbbl
push
addl
or
sbbl
xor
subl
xor
decl
push
push
call
not
mov
and
mov
push
push
push
push
call
cmpl
mov
mov
jmp
movzbl
movl
ja
push
push
pushl
call
add
mov
sub
addl
sub
sub
sbb
mov
mov
adc
mov
and
movl
cmpl
notl
mov
jmp
movl
jbe
pushl
pushl
push
call
mov
sbb
andl
subl
addl
and
xor
xor
mov
sub
add
andl
movl
xor
movl
movl
movl
cmpl
movl
mov
jmp
movl
not
jne
push
call
subl
or
sub
sub
add
movl
mov
mov
mov
mov
add
adc
or
mov
or
mov
or
mov
or
mov
or
or
cmp
jne
cmp
je
movl
movl
jmp
mov
and
loopne
jl
lods
aas
mov
adc
mov
xor
arpl
scas
leave
lock
addr16
scas
icebp
rol
pop
outsl
sarl
test
add
mov
loop
jne
sbb
xor
push
dec
adc
repz
jge
mov
aas
dec
inc
dec
out
cmp
aas
mov
insb
and
xor
jno
stos
dec
jle
push
xchg
push
scas
adc
jge
push
hlt
jns
and
test
pop
pop
lock
cmp
xlat
cmpsb
aaa
lods
leave
add
and
mov
inc
les
faddl
sbbb
orb
jbe
popf
fsubrl
push
cmp
pop
shr
arpl
mov
or
xchg
mov
inc
jge
into
inc
or
sub
popa
stos
add
jecxz
lret
popa
adc
cwtl
hlt
adc
outsl
mov
bound
out
xchg
out
mov
jge
aas
es
push
sub
loop
jb
ret
cmpsl
fs
push
and
adc
gs
int
dec
pop
cmp
fsts
sbb
addr16
mov
push
add
adc
mov
fcompl
movsl
test
push
mov
mov
mov
dec
jae
cmp
or
adc
test
push
hlt
lret
add
repz
xor
shl
lcall
int3
test
inc
daa
mov
jmp
das
ljmp
icebp
adc
cmp
fmull
lret
inc
push
mov
ljmp
and
xor
cmp
jo
pop
push
jae
lret
xor
subl
imul
rcrb
imul
dec
cld
sub
push
aaa
negb
test
rclb
loop
cmp
mov
je
xor
pop
rorb
lds
jecxz
push
sbb
dec
stos
push
dec
cwtl
std
or
dec
add
popa
or
and
lods
fstpt
sub
fsubrl
jne
jbe
jnp
es
in
adc
in
rcrl
addr16
pushf
pop
xor
fdivs
mov
mov
aaa
lock
leave
lds
mov
push
mov
fnstsw
icebp
test
mov
jp
repz
jae
mov
adc
ja
mov
and
dec
add
mov
lds
lea
test
mov
jno
or
add
mov
rol
fisubrl
aam
add
in
iret
int3
ret
ljmp
xor
xor
and
and
mov
mov
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
add
mov
adc
mov
add
adc
jmp
jbe
mov
imul
cmpl
scas
adc
lahf
movlps
adc
hlt
filds
jl
movsl
shlb
int3
cmp
imul
push
mov
lcall
ret
fisttpl
hlt
cmp
fcomip
xor
pushf
and
push
xor
aad
fiaddl
andb
dec
or
lods
lea
pop
cltd
jb
sahf
pop
xchg
mov
and
jno,pn
push
jno,pn
mov
pop
inc
xorl
mov
mov
lods
xor
aaa
lcall
ret
out
lea
sbb
into
fistpll
mov
lea
adc
lahf
mov
movsb
sbb
or
out
pop
int3
mov
stos
pop
pushfw
add
sti
xchg
sbb
jmp
sbb
cld
scas
not
inc
cmpl
in
inc
inc
jbe
fidivrl
and
dec
mov
fs
xchg
push
xchg
in
cs
jl
pop
clc
jns
add
out
repz
pop
and
cmp
or
das
xor
shr
xchg
jmp
shlb
lret
shll
icebp
je
cltd
lock
incl
mov
loop
dec
mov
mov
sub
and
mov
test
and
ljmp
popf
ljmp
lods
loope
and
adc
add
insl
xchg
in
xor
xlat
fucom
lock
sub
js
imulb
mov
into
xchg
sarb
in
lods
divb
mov
popf
out
mov
daa
xor
mov
pop
stos
jno
xor
and
push
into
movl
inc
outsb
shrl
jb
and
lcall
scas
mov
sbb
clc
mov
sub
xor
pop
aam
and
sbb
stc
cmpsl
out
sub
jmp
scas
sub
fnstcw
sbb
jp
mov
ret
mov
sbb
and
pop
jns
sub
je
int3
not
jbe
push
cmp
fdivrl
push
xchg
call
pop
js
inc
and
negb
xchg
sahf
xor
xor
stc
adc
sub
out
add
jo
dec
jp
adc
mov
repnz
push
xchg
pop
popa
filds
scas
lahf
mov
xor
call
je
add
fadd
pop
idivb
xchg
dec
cmp
test
xchg
out
xor
pop
pop
jmp
adc
add
add
ret
lock
jmp
addl
scas
sbb
pop
add
lds
pop
movsb
adc
lahf
movlps
mov
test
jl
sub
stos
shrb
lds
xor
iret
loop
lods
loop
sub
inc
adc
adc
ror
push
icebp
xchg
testb
fs
mov
hlt
inc
pop
lret
adc
and
addl
pop
hlt
cmp
sub
ret
cmp
ret
je
inc
mov
xor
mov
xor
iret
imul
fldenv
mov
and
push
iret
out
insb
sbb
ljmp
mov
shlb
pop
cmp
into
mov
jl
dec
jno
dec
ficomps
mov
and
adc
sub
in
adc
push
inc
add
xchg
mov
mov
push
push
inc
mov
pop
sbb
jae
daa
jecxz
mov
mov
imul
cmp
jne
adc
rcrl
mov
lahf
fldt
call
addr16
mov
and
cltd
xchg
dec
dec
jl
repnz
in
notl
push
pushf
mov
xlat
addb
sbb
dec
mov
lret
sbb
xchg
movsl
and
mov
andl
int
dec
sub
pop
into
mov
or
jbe
jnp
jns
adc
dec
or
mov
ljmp
cmp
cmp
sub
mov
dec
mov
add
lock
cli
push
fs
jnp
roll
jge
ljmp
mov
repnz
out
mov
mov
loopne
hlt
push
inc
js
repz
out
mov
enter
and
test
inc
mov
push
ret
sbb
mov
add
icebp
jae
repnz
pop
mov
hlt
fnsetpm(287
lods
xor
jge
mov
cmp
lds
pushf
lret
add
pop
fwait
ja
dec
adc
and
loope
in
jmp
pop
and
cmp
push
lcall
movsl
nop
mov
cmpsl
xchg
jns
pushf
adc
inc
shr
cmp
push
mov
lcall
or
push
mov
pusha
and
pushf
clc
push
adc
mov
pop
arpl
dec
inc
or
movsb
shrb
inc
call
mov
sub
mov
fwait
add
dec
jne
lret
dec
lret
cli
inc
dec
mov
arpl
lock
mov
lea
stc
add
xor
or
mov
cmp
jne
cmp
je
movl
movl
jmp
pop
repnz
push
mov
call
push
mov
adc
loope
out
shl
sbb
cmp
or
mov
movsl
jp
and
fmull
pop
test
notl
es
aad
rcrl
repz
mov
and
mov
dec
mov
mov
adc
out
dec
scas
mov
addl
cmp
mov
imul
testl
push
xor
pop
add
out
lock
dec
imul
popf
or
add
shrb
mov
push
out
dec
dec
call
sbb
imul
jge
and
push
cmc
add
adc
stc
mov
jl
mov
rorb
mov
aad
stos
sti
add
mov
jno
cmpsl
xor
mov
aad
inc
and
push
dec
shlb
lods
inc
int3
dec
into
ret
mov
gs
sbb
icebp
xor
int
int
ja
dec
add
ret
and
mov
ss
mov
inc
into
in
xchg
jae
mov
fcomps
mov
mov
scas
inc
sub
addr16
std
repz
jl
mov
push
mov
inc
jg
sub
icebp
incb
jg
popf
jns
mov
in
add
mov
jns
dec
xorl
pop
ljmp
enter
test
aad
repz
lar
push
cmpsb
adc
cwtl
aad
xchg
adc
inc
cmp
fbld
sti
test
push
out
movsl
ss
std
push
pop
outsb
imul
push
bound
mov
sub
adc
jbe
cmpsl
sub
push
stc
data16
jmp
xorb
add
pop
or
xchg
rorl
mov
sbb
sahf
push
sub
cmc
leave
leave
aad
xchg
or
cmp
in
xor
pop
adc
sar
mov
out
push
add
js
xchg
out
je
aam
ret
xor
lahf
cmp
adcb
xchg
mov
ss
movsl
sti
push
imul
push
pop
push
mov
mov
ret
dec
cmp
mov
sbb
cmpsl
aas
mov
pop
adc
xor
lods
jbe
adc
xchg
rol
or
pop
insb
dec
adc
dec
in
cmc
sub
push
daa
push
aam
daa
lret
fnstsw
sbb
mov
stos
jnp
mov
ja
xchg
daa
or
sub
add
add
add
pop
add
rcll
push
bound
xchg
test
outsl
sahf
adc
lahf
movlps
stos
dec
mov
or
mov
popa
xorb
mov
popf
notb
sti
xor
mov
dec
out
sbb
or
insl
push
cmp
ret
lea
inc
in
add
and
pop
loopne
adc
or
loopne
es
inc
xchg
ret
mov
inc
lds
in
or
test
jmp
and
cmp
div
add
and
or
and
sbb
mov
rcl
mov
inc
in
imulb
scas
push
mov
fnstsw
fildl
cld
adc
test
clc
adc
popa
push
dec
add
imul
outsl
subb
fiaddl
dec
adc
mov
push
push
enter
push
xor
cwtl
pop
mov
cmpsl
inc
sti
adcl
pop
xor
xor
nop
ss
cmp
shlb
mov
or
sub
mov
int
mov
sub
mov
mov
pop
movsl
pop
dec
faddl
or
or
xchg
mov
hlt
xorb
push
js
fsubrl
repz
lret
jbe
pop
in
inc
jnp
enter
mov
mov
sbb
xor
int
iret
mov
in
aas
fadds
jecxz
adc
into
outsl
lcall
shll
icebp
in
scas
sbb
shll
sbb
mov
test
push
xlat
jb
dec
ja
sub
jmp
fcoml
test
imul
inc
adc
xchg
push
mov
ss
mov
mov
jmp
push
dec
imul
jecxz
mov
dec
adc
cmc
sbb
imul
mov
enter
push
dec
push
pop
cld
arpl
out
cmp
adc
outsb
cmpsl
lcall
std
dec
mov
jo
push
push
adc
mov
unpckhps
push
dec
das
xor
insl
ret
xor
add
jbe
jmp
and
repz
inc
lret
stos
push
enter
icebp
mov
ficoml
insl
out
or
dec
and
fidivrs
inc
sbb
into
dec
mov
mov
in
scas
mov
sbb
xchg
pop
jne
lret
movsl
stos
mov
dec
push
addr16
pop
cli
jae
lock
pop
mov
out
cmpsb
xor
iret
repz
pop
and
imul
movl
mov
mov
push
push
push
call
mov
mov
push
push
and
and
push
push
call
xor
xor
mov
mov
mov
cmp
jne
mov
mov
mov
mov
shrd
shl
mov
mov
shr
xor
mov
xor
or
mov
mov
mov
shrd
shr
mov
mov
xor
xor
or
mov
movb
movb
movzbl
shl
mov
jmp
sbb
cmp
sbb
notl
jl
cld
xchg
adc
lahf
movlps
stos
sbb
mov
sbb
add
stos
test
imul
mov
ficoml
mov
lret
push
sarb
pushf
sbb
fmull
dec
jbe
xor
scas
push
sbb
adc
int3
sbb
jg
pop
jg
pop
jb
push
movsb
pop
ljmp
ja
imul
movd
lods
jne
lods
xchg
repnz
dec
mov
push
push
cmc
adc
pop
sub
mov
pop
mov
test
jno
out
pop
xor
cld
sub
rorb
push
sbb
mov
fwait
sub
jg
insb
adcb
push
shlb
or
movsb
adc
int
pop
mov
or
mov
mov
mov
daa
bound
xchg
dec
xor
test
inc
inc
aas
sub
sub
lret
pop
fildl
in
insb
xchg
sbb
add
pop
mov
out
out
sbb
xchg
add
stos
cs
mov
lods
fwait
ret
aas
dec
jp
adc
or
subl
and
jno,pt
insl
ljmp
repnz
adc
loop
insb
ja
aaa
call
sbb
mov
out
xor
dec
ficomps
inc
jnp
add
add
or
inc
nop
jmp
movsb
fdivs
xor
jne
pop
xor
xor
xchg
mov
push
xchg
in
jl
xchg
test
adc
idiv
imul
test
mov
pop
movsb
ret
lock
mov
ffree
and
scas
or
pop
stc
repz
cli
lock
or
out
adcl
nop
xchg
pusha
mov
ret
pop
aaa
aad
dec
jae
inc
xor
inc
jmp
in
inc
iret
test
push
lret
and
cmp
insl
xor
decb
inc
pop
enter
sbb
hlt
sub
jl,pn
mov
sub
push
cmpl
cmpsb
jge
out
jae
xchg
lea
roll
lock
mov
sarb
je
ljmp
dec
fstp
cmp
adc
xor
mov
clc
lea
jg
mov
jb
mov
cld
add
sbb
repz
lahf
daa
cli
mov
cmpl
jae
add
pop
clc
push
ret
dec
push
int3
test
jb
dec
push
pop
xchg
popa
jb
dec
dec
in
xchg
or
xor
add
push
add
mov
movb
pop
mov
movb
mov
movzbl
cltd
idiv
mov
add
mov
or
mov
add
cmp
jae
mov
mov
shrd
xor
mov
shr
mov
xor
jmp
xchg
jnp
stc
pop
jno
loop
cmp
sbb
jle
xchg
adc
lahf
movlps
jb
out
bound
mov
scas
int3
lock
dec
jo
cmpsl
bound
imul
cmp
adc
mov
inc
fldl
iret
push
xchg
addl
outsb
mov
jae
cs
jbe
mov
adc
adc
adc
sarl
mov
fstpl
and
out
fbld
pop
mov
sbb
fmul
add
js
add
sub
mov
leave
cmp
hlt
stos
push
sub
xchg
stos
xchg
mov
sti
and
js
add
mov
aad
mov
mov
sti
scas
push
in
or
push
minps
mov
adc
push
divl
gs
iret
adc
add
inc
clc
jns
aad
mov
sbb
aad
add
sub
bound
add
lock
daa
faddl
out
inc
lds
mov
cmp
idivb
ror
andl
int
jecxz
out
popf
jne
xchg
push
in
dec
push
mov
addr16
mov
lret
lret
sub
rcl
mov
jl
imul
out
fsubrl
or
sub
jns
fisttpl
jne
bound
mov
pop
fsubp
out
mov
push
xor
std
dec
xchg
jo
mov
pop
mov
jne
popa
xchg
lods
jo
fildll
adc
pop
int
mov
ds
mov
out
xchg
add
sbb
dec
scas
xchg
ds
hlt
enter
call
sub
jbe
xor
mov
xor
mov
aam
jecxz
in
das
mov
imul
mov
cli
mov
adc
push
mov
xorb
movd
adcb
mov
cmpsb
mov
in
adc
scas
and
mov
out
repnz
mov
xor
testb
int3
addr16
jae
jge
clc
sti
cmp
fs
xor
orb
int
fwait
dec
sbb
xchg
and
jmp
xchg
add
mov
rorl
jge
mov
mov
sahf
fstps
daa
test
adc
ret
inc
mov
sub
add
call
mov
sub
xor
fwait
sbb
ljmp
sarl
ljmp
dec
and
call
add
inc
scas
sub
cld
xchg
into
and
test
xchg
loope
or
mov
pop
leave
ret
push
mov
sub
push
push
push
movl
movl
movl
movl
movl
movl
movl
movl
xor
inc
mov
movl
mov
mov
sub
add
add
imul
add
xor
movl
movl
movl
movl
mov
or
add
mov
and
mov
sub
mov
mov
mov
add
or
sub
xor
sub
jmp
sbb
ja
pop
sbb
stos
and
mov
pop
movlps
nop
xor
add
cmp
sub
out
and
jecxz
jne
sub
into
jne
sub
pop
out
sub
imul
nop
jnp
data16
pop
dec
enter
adc
mov
or
lcall
rolb
and
mov
xchg
fsubl
repz
push
add
test
push
mov
repz
sbb
mov
ja
mov
in
cmp
push
xor
sub
add
mov
ljmp
mov
imul
test
pop
lock
xchg
out
call
mov
fimull
mov
scas
rolb
sub
lds
push
test
cwtl
pop
ljmp
adc
ss
fildl
sbb
adcl
insb
call
mov
flds
out
xchg
insl
cmp
push
insl
push
test
xchg
sbbl
inc
jecxz
sbb
inc
out
dec
jle
sub
inc
adc
sub
ret
hlt
ret
in
cltd
dec
lea
push
add
pop
jo
pop
mov
fs
lea
mov
lods
or
sbb
mov
cmp
pop
push
mov
clc
or
jmp
mov
mov
sub
hlt
stos
outsb
cmp
pop
aas
inc
xor
xchg
cmp
mov
jmp
sbb
test
pop
test
pop
push
push
jle
adc
popa
call
loope
cmpsl
mov
pop
dec
clc
inc
iret
pushf
fsubrp
lds
sbb
addr16
push
xlat
test
rcr
jg
ljmp
sub
lret
cltd
rclb
rcrb
icebp
push
icebp
test
cmpsl
imulb
pop
or
inc
cltd
push
add
jp
shl
cmp
cmp
mov
movsl
jg
push
adc
xchg
or
arpl
fwait
sbb
lods
in
call
and
pop
push
loopne
lret
jmp
repnz
jno
xlat
adc
movsb
xor
jmp
or
lahf
or
or
add
push
mov
mov
and
xor
xor
div
lea
mov
add
mov
and
mov
imul
mov
sub
cmp
jbe
push
pop
mov
mov
movl
movl
movl
mov
movl
movl
xor
movl
mov
mov
sub
div
mov
xor
mov
div
mov
xor
div
xor
mov
mov
imul
mov
add
div
jmp
sbb
sbb
and
ja
insb
pop
test
adc
adc
add
xchg
das
fcompl
mov
jle
ljmp
adc
lock
jp
pop
xor
repnz
and
inc
stos
or
aas
das
mov
iret
sub
pop
out
xor
fnstsw
dec
rcrb
call
dec
lcall
push
mov
pop
call
shll
in
scas
mov
or
mov
cwtl
or
dec
ss
sub
cmpsb
insb
outsb
sub
aas
add
and
pop
jb
and
mov
jmp
fwait
xor
add
add
add
cmp
movsb
mov
decl
repz
cmc
mov
add
shl
push
lock
push
sub
sbb
cmp
cmp
stos
lahf
sbb
rcll
mov
aas
mov
lea
cld
and
les
mov
shl
enter
cmp
das
sbb
fstps
and
add
sti
and
call
and
and
mov
xchg
xor
int3
sbb
push
sub
jle
push
shrl
imul
mov
mov
xchg
jo
lcall
ds
push
sahf
sub
and
mov
mov
and
jge
sub
cmp
loope
mov
cmp
and
lret
rclb
push
jae
arpl
shrl
push
push
push
dec
sbb
ret
mov
mov
mov
out
bound
sub
test
test
xchg
mov
or
mov
in
adc
inc
pmaxsw
push
lret
mov
outsb
xor
or
mov
rcrb
and
jb
orb
adc
rorb
jno
pop
sti
imul
out
loope
xor
mov
fcoml
incb
xchg
pop
jb
sbbb
push
mov
sbb
mov
or
fidivl
loop
and
pushf
paddusw
nop
insb
in
cmp
mov
scas
imul
div
push
mov
stos
inc
mov
push
clc
mov
jmp
fdivl
fnstcw
sbb
push
push
or
pop
movlps
loopne
dec
ljmp
in
mov
cld
notl
cmp
inc
fimull
roll
insb
pop
adc
movsb
popa
add
sarb
cld
test
push
gs
lods
sahf
stc
xchg
cmp
sbb
mov
inc
xor
add
xchg
jp
and
pop
add
xchg
jbe
sti
sub
mov
push
or
add
fnsave
test
jmp
pop
test
out
call
or
dec
js
in
dec
dec
aaa
cli
push
cmp
dec
decl
add
xchg
fadd
sbb
je
adc
inc
es
loopne
movsl
inc
inc
hlt
or
stos
push
jo
sti
pop
insl
outsb
sbbb
pop
sti
mov
mov
lret
mov
rorl
xchg
push
adc
push
icebp
rcrb
pop
push
pop
push
lahf
stc
outsl
or
and
in
imul
push
shr
js
inc
jecxz
add
out
mov
int
pop
sti
adc
dec
jno
xchg
loopne
adc
dec
mov
adc
mov
lahf
movsb
das
shrb
fldenv
insl
mov
xor
lea
xchg
jae
fwait
or
inc
scas
mov
fimull
mov
xchg
das
push
push
scas
pusha
mov
or
dec
sub
outsl
mov
imul
psrlq
arpl
jge
mov
fcoms
xchg
sbb
or
cmp
fmul
mov
and
or
rcl
sti
xchg
mov
and
out
mov
pop
cs
push
mov
fsub
sbb
cmc
insl
sbb
roll
cmp
lret
push
popf
es
insb
notb
mov
jge,pn
iret
out
and
ficompl
repz
mov
push
cmp
ficompl
pop
push
inc
pushf
xchg
add
test
fistpl
and
sbb
inc
das
testl
adc
ds
cmp
not
push
jp
xchg
inc
andb
xchg
sahf
es
aas
stc
dec
xlat
dec
movsl
lock
pop
cmc
mov
je
lahf
jcxz
and
nop
ret
push
pop
add
push
dec
mov
sar
xor
jmp
sub
xor
div
mov
add
cmp
jae
movl
movl
movl
movl
xor
movl
movl
mov
push
pop
div
mov
mov
mov
sub
mov
mov
imul
mov
xor
sub
add
and
mov
sub
mov
sub
mov
sub
mov
mov
mov
mov
xor
add
xor
and
lea
mov
mov
add
div
mov
mov
sub
xor
div
add
cmp
jb
xor
inc
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
add
and
xor
mov
sub
movl
movl
mov
movl
movl
mov
mov
imul
xor
or
xor
mov
sub
mov
mov
mov
or
sub
xor
div
mov
mov
sub
mov
mov
mov
mov
mov
imul
mov
imul
or
jmp
nop
xchg
cltd
lret
pop
dec
mov
push
jg
mov
pop
movlps
mull
mov
mov
mov
imul
add
dec
test
jp
jmp
or
push
fwait
adc
call
js
xchg
aam
mov
or
xor
ss
inc
mov
inc
lret
add
outsl
and
cmp
jmp
pusha
jns
cmpsb
cmp
repz
mov
fnclex
inc
shlb
iret
repnz
mov
fmull
imul
icebp
cmp
mov
js
loopne
fdiv
inc
xchg
cmp
ja
push
stos
sub
nop
in
movsb
cld
pop
dec
repz
dec
mov
arpl
arpl
jno
xor
loopne
outsl
ljmp
arpl
in
out
push
jecxz
and
test
mov
push
cmp
jo
and
sbb
idivb
cmp
sahf
movsl
movsl
push
aad
daa
cltd
sub
les
push
in
push
xchg
add
popa
lock
jne
push
jns
aad
test
dec
mov
outsl
out
push
ror
mov
mov
cmp
xchg
pop
scas
sbb
dec
sbb
aaa
xchg
adc
add
test
test
jne
cmpsb
loop
gs
pop
in
dec
ljmp
push
fbld
cmp
std
sbb
repz
fisubs
int3
push
sarb
imul
sub
arpl
pop
xchg
cld
mov
xor
inc
adc
pop
ja
mov
aad
rclb
cltd
cmc
imul
push
inc
push
mov
or
xchg
ljmp
sub
jge
pop
push
adc
neg
xor
enter
inc
push
xor
add
mov
js
lds
je
push
lds
jecxz
adcl
dec
lret
jbe
cmpsl
lds
jae
popa
imul
dec
mov
pop
and
fimuls
push
xor
lods
lahf
push
pop
push
shr
fnstenv
sbb
cmp
xchg
dec
fcmovne
sahf
ret
dec
cmpsl
add
jne
cmc
push
daa
push
sub
xor
lea
mov
and
add
xor
add
cmp
jne
pop
pop
pop
leave
ret
push
mov
sub
push
push
movl
movl
mov
mov
add
or
mov
lea
mov
movl
movl
mov
mov
and
xor
mov
imul
xor
lea
mov
movl
movl
mov
xor
push
pop
div
mov
xor
push
add
and
mov
sub
mov
movl
movl
movl
mov
mov
lea
mov
div
mov
lea
mov
movl
movl
movl
jmp
add
popf
pop
sbb
push
in
stos
sub
adc
ficoms
adc
xchg
and
testl
jge
fisubl
daa
mov
jb
rolb
outsb
jbe
xchg
cwtl
xchg
xlat
cmpb
sti
stc
insb
add
jnp
jle
mov
shrl
and
inc
jno
jne
dec
fldcw
out
jecxz
mov
enter
ljmp
mov
pop
jecxz
pop
mov
cmp
dec
mov
test
mov
ds
pop
test
pop
repz
fprem
das
add
dec
loope
adc
cs
xchg
rcrl
fldl
cs
jne
sbb
ret
repnz
test
mov
push
xchg
add
stc
dec
insb
arpl
mov
fcompl
sbb
loop
mov
imul
add
xchg
cmpb
add
stos
push
shlb
push
sub
jae
jno
inc
insl
cmp
jne
cmp
loop
fwait
in
insb
xor
add
sbb
in
mov
popf
int3
roll
pop
sbb
jle
adc
xchg
jle
mov
and
out
mov
imul
push
adc
into
mov
dec
cmpsb
lcall
cmc
outsl
rcrl
mov
aad
adc
incl
outsb
stc
pop
bound
sub
les
in
mov
adc
or
jb
add
adc
leave
mov
pusha
nop
sbb
sub
mov
xor
pop
cltd
push
jle
test
pop
cmc
push
les
enter
sbb
lret
ror
fsubrl
pop
int
sbb
pop
cmp
jnp
lods
fistl
inc
adc
daa
mov
in
push
push
mov
dec
or
xchg
call
out
push
ret
add
adcb
sub
sub
sub
divb
icebp
mov
sub
inc
sarb
in
and
pop
mov
out
je
test
xchg
mov
pop
sarb
sbb
movsl
push
jo
repz
bound
aam
sub
jecxz
mov
jmp
stos
loop
pop
cmpsb
xor
clc
jae
daa
aaa
aam
mov
je
sbb
scas
jmp
add
clc
inc
lods
cmp
mov
mov
push
lcall
or
rorl
jns
cmp
push
xchg
imul
sahf
test
pop
mov
push
pop
mov
adc
out
push
cld
jle
movsl
ret
scas
insl
or
enter
daa
pop
push
in
pop
rorb
push
leave
and
loop
xchg
cld
test
add
or
stc
dec
and
test
mov
aam
jb
jmp
orl
or
cmpsl
nop
jle
loope
aas
dec
jmp
dec
clc
xor
sub
mov
sub
xor
mov
movl
pop
mov
movl
movl
mov
mov
mov
xor
xor
div
mov
and
sub
mov
movl
movl
movl
movl
movl
movl
mov
add
mov
xor
mov
or
mov
or
mov
and
mov
sub
mov
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
add
adc
or
mov
or
or
mov
mov
or
mov
sub
mov
sbb
mov
or
or
add
mov
adc
mov
movl
movl
movl
movl
movl
movl
movl
xor
inc
mov
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
movl
mov
movl
movl
mov
or
add
mov
jmp
std
push
mov
ja
pop
jmp
cmp
jle
jo
adc
adc
adc
sub
mov
popa
add
hlt
lahf
push
pop
and
fs
or
adc
mov
mov
fsub
fwait
gs
test
jp
pushf
out
daa
repnz
arpl
adc
imul
daa
mov
pminsw
xchg
mov
out
adc
stos
out
pop
icebp
add
xchg
sbb
fidivl
inc
dec
mov
mov
ffree
xor
jmp
je
or
bound
movsb
repz
pop
sarb
imul
pop
icebp
dec
lods
mov
sub
xor
pusha
inc
iretw
push
es
cmp
lahf
or
lret
cmp
jae
jp
adc
sbb
dec
out
fstps
xchg
push
out
lds
lds
dec
addr16
xor
cli
mov
fcomps
movsb
lcall
enterw
xor
mov
les
fs
scas
insl
xchg
bound
or
add
dec
lock
mov
xchg
fmull
ret
leave
xor
int
adc
mov
or
inc
xabort
dec
inc
imul
adc
or
lods
mov
jmp
adc
cmpb
push
sub
sahf
cmp
cmpsl
xchg
xchg
cmp
loopne
mov
aad
inc
mov
int3
loopne
sub
nop
push
pusha
imul
sub
jmp
jns
and
xor
es
and
or
mov
and
xchg
mov
jmp
jp
pop
ljmp
mov
sarb
dec
stos
roll
inc
imul
adc
lods
cmovne
cld
lods
or
inc
jl
adc
and
or
test
cmp
in
xchg
pushf
loop
insb
push
in
jbe
mov
cwtl
push
dec
and
sub
out
mov
xlat
inc
mov
jg
repz
loop
push
daa
xor
rcrl
ret
nopl
adc
das
adc
mov
popf
cmp
cli
fisttpll
cmp
testl
sub
adc
test
add
je
mov
jl,pn
cmp
inc
ja
xchg
ljmp
shll
sbb
jge
push
stos
daa
dec
mov
aas
dec
je
dec
adc
imul
or
lahf
cli
jmp
fiaddl
sbb
cwtl
cwtl
aad
outsl
xlat
cmp
sub
adc
push
js
std
movsb
das
pop
jb
add
ss
imul
std
aas
repz
mov
lahf
sub
push
daa
mov
stos
mov
in
wrmsr
sbbl
xchg
mov
push
push
rorl
stc
ret
sub
flds
scas
and
inc
out
fsubrs
test
into
into
push
cmp
insl
jbe
and
mov
lods
mov
in
xor
mov
into
add
sub
mov
sub
imul
add
mov
push
mov
lea
mov
xor
div
mov
lea
push
mov
mov
push
push
push
push
call
mov
mov
push
push
or
or
push
push
call
mov
mov
xor
mov
jmp
decb
sub
ficoms
jle
outsb
adc
ficoms
adc
lcall
lcall
fmuls
or
xor
fdivs
cmp
fidivrl
inc
aas
fstpl
pop
sbbl
mov
pop
sub
loopne
fidivrl
sbb
movsl
popa
mov
incl
push
icebp
cmpsb
mov
xor
popf
imul
mov
stc
or
inc
xor
xchg
cmp
and
adc
gs
push
inc
push
add
mov
mov
stc
dec
mov
popa
pop
sub
adc
repnz
xchg
cmp
adc
jg
cmpsl
xchg
inc
jp
and
in
mov
pop
and
jp
pop
std
jecxz
test
sahf
subb
fwait
sub
mov
in
es
or
sbb
loop
cmc
mov
shlb
movl
cld
out
out
push
cld
dec
jp
cltd
mov
jp
aaa
cmp
scas
test
mov
fistpll
mov
mov
cwtl
std
ljmp
pop
xlat
xor
inc
fwait
imul
les
daa
mov
fidivs
jle
pop
mov
outsb
xchg
leave
bound
pusha
dec
or
pop
test
push
inc
mov
push
jecxz
xchg
fs
cs
pop
xor
push
jl
cwtl
mov
cmp
inc
mov
sub
int
stos
mov
push
adc
mov
sub
mov
enter
adc
sbb
aad
fwait
dec
adc
sub
adc
cld
xor
sub
repnz
inc
xor
fidivl
push
in
dec
popa
inc
bound
ljmp
xor
cs
les
xor
js,pn
movsb
sahf
or
fwait
sahf
stos
jb
rorl
lock
xor
bound
xchg
xor
movb
lcall
sbb
mov
add
cmp
test
mov
cmpsl
sub
fistpll
rcr
jbe
mov
pop
fs
add
stos
ret
adc
stos
fucom
cs
push
mov
dec
xchg
int
adc
mov
in
sub
fcoms
cli
dec
mov
mov
dec
pusha
pop
dec
idiv
sub
lret
dec
outsb
outsl
pop
rcrl
cmp
push
adc
rcrl
rcrl
fcompl
test
mov
repnz
rclb
dec
sub
xchg
inc
fnstcw
cmp
jmp
xchg
jg
and
xor
jne
jno
sub
sub
dec
lcall
push
xchg
dec
push
gs
js
xchg
in
divb
fwait
test
ss
test
lds
cmpsl
leave
shl
and
cmp
imul
jp
xchg
lea
stos
sub
into
loope
vmread
andb
fwait
bound
add
incl
add
mov
insl
ret
call
mov
mov
mov
sub
xor
imul
add
xor
xor
mov
div
cmp
jne
mov
xor
mov
div
mov
mov
xor
sub
mov
xor
sub
or
lea
push
mov
push
pop
div
mov
xor
div
mov
mov
xor
xor
div
imul
sub
push
mov
add
jmp
aam
lock
mov
insb
fdivs
adc
ficoms
adc
inc
pusha
push
xor
jo
jno
sbb
stos
mov
xchg
jne
fwait
sbb
fwait
mov
sub
dec
les
inc
scas
insl
inc
out
cwtl
inc
push
sbb
shll
ret
and
fildll
mov
mov
pushf
adc
dec
sbb
mov
cmpsb
xor
adc
lock
fsubr
adcb
and
mov
jo
xchg
lret
std
ljmp
xchg
mov
jl
lahf
outsl
clc
popf
lock
cmp
repz
sub
xchg
adc
mov
jb
jno
jp
ljmp
adc
pop
and
push
xchg
jge
nop
fcmovnbe
ja
divb
call
pop
pop
ret
outsl
xchg
cwtl
push
in
xor
lds
aas
ja
scas
xor
or
mov
fcmovnbe
jnp
dec
mov
xorb
jl,pn
mov
in
jecxz
dec
sub
call
in
or
arpl
ret
leave
mull
cmpsl
push
adc
add
cs
ret
dec
mov
xchg
mov
xchg
lea
stos
pusha
fs
sub
inc
lret
mov
jno
imul
out
shrl
mov
imul
scas
push
mov
sub
mov
out
stos
testl
add
inc
f2xm1
inc
mov
dec
mov
add
xchg
pop
inc
sub
loopne
testl
push
call
and
xor
mov
loope
pop
cltd
push
movsb
push
or
or
outsl
and
add
testb
jns
adcl
cmp
sbb
into
push
cmp
mov
dec
push
mov
cmp
jl
mov
mov
sub
in
sbb
gs
xchg
subb
xor
int
pop
aam
es
fldl
xchg
mov
mov
adc
sahf
pop
add
cmpsb
mov
sub
jmp
lock
fxch
mov
arpl
mov
in
ret
xchg
gs
jnp
xchg
mov
and
test
cli
pop
push
out
pop
nop
mov
ficompl
jae
jge
sub
jne
ljmp
mov
jecxz
jl
xchg
icebp
fldl
aam
xchg
jnp
testl
add
enter
aam
addb
inc
jnp
je
std
push
movsl
xchg
jmp
mov
ret
jl
mov
sub
and
jp
daa
sub
or
faddl
push
ret
mov
inc
cmpl
dec
mov
dec
mov
lods
stos
popf
aam
shll
repz
fs
pop
mov
outsl
add
adc
out
and
adc
mov
mov
fldt
push
mov
sub
mov
pushl
call
mov
mov
lea
mov
incl
mov
mov
xor
mov
xor
xor
and
cmp
jne
cmp
jne
mov
jmp
lea
mov
mov
mov
mov
mov
sub
mov
mov
mov
sub
mov
movl
movl
jmp
jae
jge
jge
and
xchg
hlt
je
inc
bound
adc
adc
adc
stos
loopne
out
loop
outsb
inc
adc
scas
mov
push
fs
outsl
jae
ja
out
fwait
in
inc
cmpsl
jle
sbb
push
xor
sub
loopne
mov
sub
fistl
shl
sahf
jl
xor
or
aam
loopne
or
es
js
push
jnp
cltd
pop
shrb
rorb
jbe
xchg
incl
int3
push
xorl
call
inc
daa
xchg
xchg
mov
imul
sub
notb
dec
mov
cs
cltd
stos
xor
mov
test
push
and
rorl
sub
cmp
call
push
rcrl
adc
pop
jge
aad
std
dec
fwait
mov
dec
shll
mov
sbb
or
gs
andb
sub
pop
cltd
mov
nop
fisttps
cmc
pop
aaa
mov
cmp
mov
lea
test
fwait
inc
sub
pop
xor
mulps
xchg
int
test
jns
push
stos
xchg
rorb
divb
enter
adc
enter
cmc
cmpl
or
jae
xor
cld
adc
and
ret
mov
ficoms
and
cmpsb
lahf
sahf
sub
gs
sub
xor
mov
pop
pushf
ss
dec
adc
jg
push
xchg
sub
xchg
inc
xorl
add
fidivrs
leave
inc
sub
pop
push
add
cmpsl
sahf
mov
lret
and
xchg
hlt
arpl
cmc
dec
and
pusha
rol
ret
cmp
fwait
jb
sub
sbb
xor
inc
mov
es
add
bound
lea
leave
imul
dec
sbb
test
sbb
cmp
fnsave
inc
mov
mov
xchg
aam
pop
mov
cmp
test
iretw
mov
pop
xor
call
test
test
inc
push
pop
div
or
mov
ljmp
jnp
sbb
adc
scas
pop
add
mov
add
sbb
in
lahf
pop
xchg
sbb
daa
and
mov
icebp
lods
and
bound
push
jge
push
push
cmp
dec
xchg
dec
in
lret
out
jl
adc
arpl
test
cmp
push
icebp
repz
and
dec
aaa
es
sub
hlt
gs
inc
aaa
dec
xchg
xor
lret
jecxz
inc
jno
adc
lcall
add
test
jmp
outsb
xchg
sbb
dec
xchg
lods
and
cmp
sbb
push
aam
jle
mov
insl
push
jno
xor
cld
or
mov
das
jae
fdivs
mov
or
outsb
ss
les
and
sub
popf
ror
push
aad
out
mov
mov
mov
mov
pushl
pushl
pushl
pushl
pushl
push
push
pushl
mov
call
mov
mov
pushl
call
mov
push
add
push
push
call
mov
jmp
mov
pop
mov
pop
leave
ret
push
mov
jmp
gs
icebp
pop
ficompl
das
mov
cmpb
movlps
enter
jg
data16
adc
inc
cmp
insl
movsl
idiv
cmp
std
mov
jl
xchg
dec
dec
mov
mov
lods
mov
mov
test
add
andb
sahf
jb
and
sub
inc
movsl
out
or
call
and
mov
jge
aam
xchg
fidivs
cmc
outsb
jae
push
int3
adc
sbb
lcall
push
or
jns
std
sbb
add
inc
roll
push
iret
aam
fisubs
xorb
xor
sahf
jnp
xchg
dec
movsl
pop
jae
push
push
sub
stos
mov
mov
aad
pop
sbb
and
into
xchg
mov
test
into
xorl
xlat
ljmp
iret
add
push
ds
dec
and
push
stos
repnz
test
movsb
and
outsl
xor
jg
mov
xchg
sbb
fldenv
and
adc
loope
mov
les
ret
pop
sbb
les
jbe
dec
test
mov
lahf
out
and
testb
cli
cmp
jne
cmp
dec
out
ja
push
sbb
sbb
cltd
daa
mov
es
and
data16
adc
push
pop
or
mov
clc
xchg
cmpsb
call
imul
or
outsb
es
addl
mov
test
xor
sbb
rclb
enter
mov
push
or
dec
adc
push
notl
pushf
xchg
sbb
jb
dec
nop
daa
inc
cli
test
and
ss
das
insl
jmp
test
psubq
push
sbb
rolb
mov
jns
iret
ret
xlat
sarb
sarb
lret
xchg
fs
dec
mov
out
jno
ljmp
mov
sbb
cmp
movsb
push
adc
cs
lret
das
push
jecxz
test
cltd
out
jno
xor
test
jecxz
jle
mov
pop
cmp
mov
or
mov
lea
cmp
out
stc
push
rclb
std
xchg
movsb
out
ret
jmp
and
and
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
push
push
push
push
call
mov
mov
add
adc
and
push
and
or
push
or
xor
xor
push
push
call
mov
movl
movl
movl
movl
xor
movl
push
inc
mov
mov
mov
push
push
push
call
mov
mov
or
or
push
add
push
adc
push
push
call
mov
lea
xor
mov
div
mov
sub
mov
movl
mov
movl
mov
mov
sub
mov
xor
div
mov
xor
or
or
mov
jmp
sbb
pop
loope
pop
pop
cmp
stc
xor
xor
adc
outsl
rcrl
sub
add
pop
jl
sub
lods
xor
mov
sub
xchg
pop
xchg
push
or
cli
cs
sub
jb
pop
fcmovb
das
mov
adc
les
inc
orb
bound
sti
test
std
adc
adc
mov
adc
leave
in
jbe
pop
cmpsl
xadd
in
push
or
push
fldcw
in
xor
jns
mov
inc
dec
and
outsl
test
or
shlb
mov
jnp
cmpsb
out
pop
fs
outsb
lret
cmp
push
fdivrl
pop
fs
push
notl
cwtl
mov
pop
iret
inc
and
insb
orl
int3
pop
shlb
or
add
mov
mov
or
jecxz
sbb
push
mov
xor
jmp
incl
xchg
sub
into
mov
es
notb
jne
les
gs
jmp
jmp
add
fmull
popa
add
or
lcall
xchg
fsubs
jb
adc
jge
add
fnstcw
fnstsw
sbb
daa
ja
adc
subl
sbb
inc
pop
xchg
les
pusha
mov
or
jb
xlat
dec
add
push
jmp
inc
in
and
push
sbb
in
mov
xor
xchg
jmp
fucomp
inc
dec
jmp
lahf
adc
pushf
dec
dec
mov
jl
cmp
xor
sbb
enter
lret
fdivs
imul
aam
jg
out
cli
or
push
sti
pop
push
pop
jecxz
cmp
and
mov
cwtl
mov
test
adc
cmpl
fwait
xor
idivb
dec
push
jmp
mov
xor
or
adc
push
sti
cmp
xor
push
cwtl
adc
jbe
test
add
mov
daa
out
mov
popf
lcall
fidivrl
dec
sbb
add
das
loop
jge
mov
cmp
and
imul
outsb
mov
adcl
ds
jnp
stc
cli
roll
mov
movl
movl
movl
mov
add
mov
and
lea
mov
mov
mov
movl
movl
movl
mov
mov
sub
add
xor
add
mov
div
mov
xor
pop
pop
or
mov
movl
movl
movl
mov
mov
and
sub
or
mov
imul
mov
div
leave
ret
push
mov
sub
push
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
jmp
lods
mov
lods
cmp
sub
es
push
adc
push
adc
adc
mov
fisubrs
mov
push
push
xchg
mov
jle
inc
popa
rcr
adc
sub
sub
mov
lea
adc
sub
xchg
dec
cwtl
shlb
ss
cwtl
in
inc
call
jnp
push
push
push
inc
xchg
test
enter
adc
add
pop
fiaddl
mov
sbb
pushf
aad
push
lahf
cli
mov
pop
rol
sbb
xchg
test
lods
pushf
call
filds
test
pop
testb
sbb
std
stc
jp
popf
mov
mov
jl
stc
ds
es
idivb
aam
jle
scas
dec
mov
mov
mov
je
add
push
inc
test
mov
mov
shlb
int
pop
dec
push
or
out
jo
sar
add
and
in
pop
out
nop
jno
je
stos
xchg
jle
or
jns
nop
sahf
add
add
lret
gs
jo
rorb
or
pushf
pop
aad
je
dec
faddl
xchg
mov
pop
push
inc
fldt
lods
xchg
fsubrs
clc
push
cltd
leave
notl
inc
jbe
xor
and
jbe
mov
sarl
pop
shl
fwait
jo
addr16
xchg
mov
repnz
out
outsb
jae
std
in
or
adcb
sub
loope
or
int3
mov
lcall
xchg
in
clc
or
mov
lock
mov
push
or
popa
mov
mov
fstl
and
mov
adc
movsb
in
dec
push
add
mov
dec
loopne
stos
in
sbb
inc
xchg
test
xor
pop
icebp
je
jae
jle
dec
adc
out
cmp
and
mov
jb
adc
data16
sub
loopne
repz
mov
cld
jle
hlt
je
arpl
ret
lcall
mov
mov
push
fsts
mov
cmpsl
push
push
adc
xor
push
out
jne
mov
jne
adc
jmp
inc
push
xchg
movsb
sahf
jnp
scas
scas
add
mov
mov
ret
pop
inc
scas
mov
lods
pop
mov
call
data16
in
inc
jmp
and
shrl
dec
mull
sub
imul
out
iret
or
sahf
imul
mov
mov
sub
sub
xchg
ljmp
cmp
test
dec
arpl
jg
ljmp
hlt
xchg
rclb
mov
gs
cwtl
rorl
fisttpll
mov
mov
dec
dec
inc
jp
ja
js
xchg
or
pop
adc
pop
sub
push
inc
inc
mov
xor
fwait
xor
das
out
test
xlat
pop
out
mov
push
xlat
cmc
pushf
inc
inc
fnsave
jno
loope
pop
adc
jge
mov
inc
pop
int
inc
mov
fwait
dec
mov
sub
shlb
aaa
sbb
mov
mov
out
arpl
hlt
cli
xlat
subb
add
dec
fstl
orb
mov
xchg
xor
fiadds
push
movl
mov
mov
push
push
push
call
mov
mov
xor
jmp
fcomps
pop
sub
and
rcrb
mov
push
adc
adc
call
add
jge
stos
mov
cmp
mov
sbb
dec
jle
jp
xchg
test
cwtl
out
mov
out
sbb
ja
fidivrs
inc
mov
push
lods
lret
mov
mov
out
lock
pusha
cmpsl
pop
and
into
mov
outsl
or
and
and
divb
sbb
jno
stos
shlb
pushf
cli
hlt
sbb
sub
in
gs
sbb
mov
push
mov
mov
cmpl
leave
fucomp
cmp
xor
and
pop
mov
adc
test
sbb
das
jbe
rcr
xor
or
cmpl
mov
adc
dec
mov
mov
sbb
xor
daa
push
fidivrl
sbb
mov
test
repz
sub
ss
testl
call
test
mov
mov
enter
xchg
xchg
test
rolb
cmp
divl
mov
pushl
adc
leave
mov
test
pop
mov
lds
rorw
lods
pop
pushf
jge
fcmovb
mov
push
lcall
dec
dec
out
jno
out
in
decb
lock
xchg
adc
inc
mov
mov
mov
dec
aas
dec
xchg
xor
and
addr16
mov
and
scas
cld
xor
out
push
sub
dec
addl
jmp
or
mov
mov
scas
mov
ja
je
push
scas
push
cmp
adc
push
ja
mov
into
aam
gs
mov
xlat
xchg
loope
sahf
jae
sbb
fiaddl
ljmp
sbb
inc
test
in
and
inc
outsl
pop
cmp
push
push
or
popfw
add
mov
cmpl
jg
into
adc
adc
insb
mov
jp
sbb
popf
xchg
hlt
jns
add
outsl
hlt
adc
in
inc
das
shll
lcall
and
fcom
lahf
mov
adc
loopne
sbb
add
std
rcl
subb
stc
popa
je
jbe
jae
mov
lods
push
push
jae
mov
dec
in
roll
sub
jnp
or
xor
aaa
mul
lret
fstl
ja
fwait
and
dec
test
enter
in
incl
push
in
push
inc
loopne
sbbb
push
xor
leave
cltd
push
sub
test
push
pop
rcrb
je
xchg
es
pusha
pop
lods
jmp
cld
scas
lea
test
xchg
je
mov
imul
jp
in
lret
sub
lock
xor
dec
or
mov
and
scas
sbb
mov
sub
xor
jo
lods
pop
dec
inc
sbb
das
out
insl
into
mov
and
mov
in
xlat
dec
mov
xchg
adc
insl
rolb
mov
xchg
inc
xchg
sysenter
sub
jg
pop
fidivs
les
xlat
lds
shll
inc
aas
leave
add
insl
out
rolb
lahf
fwait
fwait
xchg
outsl
sbb
repnz
mov
xor
mov
xor
jmp
sarl
sbb
jbe
stos
outsl
mov
adc
adc
imul
pop
movsl
aaa
ss
in
cmpsb
or
adc
inc
loope
jnp
jo
adc
lock
mov
push
xchg
inc
lret
mov
push
hlt
aaa
in
clc
sub
jge
dec
stos
out
loop
mov
inc
movl
add
cwtl
mov
data16
xchg
xor
mov
mov
popa
ficoml
hlt
push
popf
lret
or
addl
push
lods
xor
or
lret
ds
jmp
lds
ret
ror
inc
sbb
nop
sbb
lods
aad
aas
pop
inc
enter
nop
xor
push
xchg
inc
rcrb
mov
sahf
lcall
xchg
mov
and
lahf
cmc
adc
data16
mov
jl
jno
push
push
icebp
or
inc
mov
leave
popa
pop
jns
movsl
mov
popf
jl
fildll
cmp
mov
not
mov
jcxz
push
cmp
xchg
or
lea
adc
fwait
sbb
leave
cmp
in
scas
test
sbb
pop
pop
pop
std
cmpsb
cmc
outsl
jge
pop
push
xchg
jbe
push
out
or
add
xchg
js
data16
ljmp
cld
ja
sub
imul
int
jb
imul
adc
cmp
out
pop
cmp
jp
pop
insl
xor
jg
pop
sbb
jae
mov
fldenv
xor
into
sbb
in
in
lret
cmpsl
or
cmp
mov
push
mov
inc
jge
sub
cmpsb
xchg
stc
cli
ja
in
femms
add
cmp
lods
push
push
rcll
push
mov
adc
sbb
movsl
incl
sahf
int3
mov
fnstcw
lods
push
lods
fnsave
push
test
mov
das
cmc
pop
in
push
push
jg
outsl
je
adc
push
jne
adc
leave
ss
fsubp
lret
js
or
and
or
mov
repnz
loope
adc
inc
adc
xchg
cmp
ret
or
gs
es
scas
call
clc
and
gs
scas
ss
das
movsb
fwait
call
lods
mov
int
add
adc
dec
fnstsw
enter
push
adc
rcrb
sbb
dec
insb
mov
inc
add
xorl
add
ficomps
mov
or
nop
insb
std
dec
push
scas
in
sub
es
mov
fbld
sub
inc
je
add
jecxz
pusha
addl
rcrb
dec
dec
insl
mov
loop
scas
sub
cmp
test
or
jmp
out
cmp
test
cs
and
xchg
xchg
push
add
pop
pop
jbe
cli
outsl
int3
xor
popa
loopne
jno
daa
subl
idiv
pop
fimull
les
loop
les
xchg
ja
in
push
dec
lds
outsb
add
sbb
inc
xor
and
add
mov
or
push
daa
out
data16
cmp
xchg
dec
in
jne
xor
movsl
pop
mov
stos
fyl2x
in
xchg
popa
xor
add
cld
arpl
push
scas
das
inc
fs
insl
inc
add
add
data16
or
add
cltd
adc
cmp
jne
cmp
jmp
mov
imul
test
stos
mov
add
push
adc
adc
dec
cmp
jnp
xor
mov
or
cmpsl
sbb
nop
or
cmp
mov
cmpsb
lds
sub
mov
enter
add
nop
stc
jns
sbb
bswap
pop
out
andb
scas
xor
sub
or
movsl
xlat
jbe
fwait
inc
test
lret
and
push
push
xchg
pop
notl
loop
aad
jle
pop
fisubl
test
jp,pn
sub
lea
in
decl
arpl
adc
js
jge
mov
jbe
adc
test
dec
xchg
idivl
mov
clc
sub
les
outsl
pop
push
and
in
dec
push
lock
and
sbb
fwait
jns
add
mov
pop
sbb
out
and
adc
jg
les
ret
shrb
sub
jecxz
insl
popf
push
sti
daa
adc
or
hlt
xchg
loopne
push
les
imul
jmp
adc
dec
enter
leave
stc
dec
lcall
aaa
int
mov
out
xchg
cmp
xchg
dec
inc
mov
outsb
lea
ret
out
adc
fwait
ja
cmp
sarb
cmp
arpl
jbe
lock
or
aaa
icebp
into
and
int
pushf
xor
je
add
or
dec
in
inc
loope
negl
int3
rcl
jl
test
push
jl
push
xor
push
and
mov
mov
rcrl
daa
sub
push
loope
inc
adc
jno
mov
loopne
movsl
sub
push
mov
lcall
dec
mov
or
lods
repz
rcrl
mov
cmp
pushf
xchg
jnp
popa
ljmp
mov
xchg
nop
cmc
divl
test
sub
pop
lret
movsl
addr16
sub
daa
mov
repnz
sahf
popf
scas
sub
push
cmp
ja
inc
push
inc
lea
sbb
jl
gs
or
pop
divb
lret
mov
stos
mov
xor
inc
push
sbb
enter
pop
stos
out
aad
add
mov
stos
fildl
insb
int3
pushl
ljmp
ljmp
cmp
ficomps
pop
inc
lahf
add
xchg
mov
sub
adc
div
in
pop
js
int
test
ss
popf
sub
xchg
xor
lret
mov
add
and
add
shlb
icebp
pop
cmpsl
sub
arpl
testb
jle
test
enter
xor
or
fwait
inc
push
popf
xor
fimuls
cmp
pop
mov
pop
push
pop
mov
jnp
in
jg
xchg
lret
dec
es
xchg
inc
or
mov
imul
mov
loope
or
insb
pop
adc
mov
clc
mov
in
pusha
lock
cmpsb
cmc
or
data16
xchg
and
std
sbb
test
or
fldenv
aam
cmpsb
scas
mov
xlat
add
repnz
cmp
mov
mov
mov
cltd
cmpsl
fpatan
mov
xchg
in
jnp
inc
addr16
mov
lahf
icebp
and
fadd
add
and
je
jmp
insb
ror
shlb
insb
daa
ret
mov
repnz
adc
adc
adc
cmp
mov
pop
inc
int
cmp
arpl
jecxz
stos
test
pop
mov
in
or
sub
aad
and
loope
mov
out
fadds
fisubrl
cmp
lahf
jl
mov
and
daa
pop
push
xchg
jecxz
jp
push
mov
test
aad
push
pop
enter
cltd
dec
pop
icebp
test
int
imul
js
or
push
movsb
lods
jge
xchg
xchg
dec
pop
fwait
cmpsl
ja
cltd
push
jo
aam
jle
xor
push
mov
mov
fs
inc
inc
add
das
movsl
xchg
loop
and
aaa
shlb
insl
add
push
pop
insl
mov
rorl
shll
sub
out
or
enter
pushf
out
scas
inc
addr16
adc
dec
or
push
add
pushf
clc
scas
add
rol
cs
mov
xor
pop
xor
bnd
test
and
cli
in
jnp
iret
adc
sbb
test
mov
sarb
test
loop
mov
cli
cmp
xor
mov
mov
or
loopne
mov
ret
rorl
jmp
sub
jo
mov
insl
roll
xchg
push
sbb
lds
arpl
lret
int
int3
ja
cmc
mov
adc
bound
cmpsb
mov
into
push
mov
pop
sub
adc
inc
pop
icebp
mov
repnz
frstor
push
jmp
sbb
dec
inc
mov
sbb
mov
inc
push
push
xor
mov
inc
push
or
pop
pop
mov
je
mov
push
loop
es
mov
lock
dec
xor
xchg
repnz
jb
aam
loop
bound
frstor
fwait
pop
shrl
sar
or
sbbl
mov
test
push
jns
mov
scas
xchg
imul
mov
jne
enter
out
and
movsl
add
es
push
fnstcw
mov
int
dec
test
aam
push
dec
decl
sub
sahf
fldcw
jns
sbb
mov
xor
mov
lods
loopne
xor
xchg
or
cmpsl
xlat
mov
mov
popa
out
and
jp
push
jg
push
add
loope
push
pop
popa
jne
fcmovnu
pop
add
clc
jb
loope
dec
lock
pushf
inc
adc
fimuls
jecxz
ds
clc
push
test
cwtl
ret
cmp
test
imul
std
or
loope
jo
add
stc
es
xchg
sarb
mov
mov
xor
idiv
xchg
mov
cmp
jge,pt
or
cmp
and
out
in
and
sub
xchg
jnp
push
mov
cmc
adcb
rcrl
iret
and
add
sbb
mov
addb
cmp
enter
mov
push
leave
jbe
pop
add
xchg
xchg
add
repnz
push
stc
clc
sub
cmp
cmpsb
out
rorb
mov
repz
fs
push
in
dec
mov
add
jbe
jns
or
lret
loopne
lcall
fnstenv
cld
mov
mov
dec
mov
push
mov
sbb
add
add
ret
nop
jmp
les
lds
pop
inc
daa
and
mov
out
adc
push
adc
adc
imul
in
jecxz
cwtl
aam
call
jge
in
cld
leave
mov
xchg
sub
jp
out
pushf
push
xchg
xlat
pop
shrb
push
ret
sub
sbb
dec
movsl
jecxz
push
lret
cli
fbld
es
std
sub
jnp
adcb
out
mov
xlat
xchg
int
imull
cmp
adc
nop
and
cmp
inc
rcll
test
movsl
jmp
dec
xor
and
mov
popa
mov
lret
in
fisubrs
push
add
sub
shl
mov
inc
mov
gs
repnz
mov
sarb
dec
test
pop
mov
ret
adc
mov
rcr
cmpsl
adc
mov
and
cld
imul
shl
or
push
mov
out
stos
dec
aaa
test
lock
jg
add
add
mov
mov
addr16
ret
adc
fwait
loop
in
cmpsb
and
inc
pushf
sub
jle
in
or
push
and
push
adc
jecxz
popa
xchg
jb
push
cld
jl
test
mov
add
adc
in
shl
mov
mov
in
sbb
nop
jmp
aaa
push
xor
imul
js
fldenv
fdivs
push
dec
popa
repnz
imul
movsb
pop
mov
push
scas
insl
mov
xor
pop
sbb
dec
xor
in
push
enter
adc
xchg
push
xor
fstpt
and
add
iret
cld
mov
pop
divb
pop
repnz
mov
mov
and
dec
sbb
add
add
cmp
fiadds
or
xchg
cmp
hlt
jns
xchg
test
in
or
mov
pop
mov
jnp
dec
mov
jecxz
jge
jg
mov
test
ficompl
sahf
inc
jmp
jge
xor
add
call
xor
cwtl
dec
inc
punpckhdq
mov
mov
xor
dec
and
shlb
fwait
bound
imul
sbbw
pop
sbbl
imul
cld
and
inc
cs
push
jle
test
arpl
into
dec
imul
push
pushf
sbb
add
and
clc
inc
push
and
pop
aad
or
dec
lods
xor
in
orl
fs
xor
mov
or
cmp
mov
mov
test
int
test
and
jge
push
fwait
std
add
pop
lock
adc
js
movsb
loop
fldt
gs
sarb
xchg
loop
mov
jg
sbb
loope
pop
fstps
imul
dec
dec
in
and
roll
add
es
sub
lea
jns
test
cmp
in
les
out
into
inc
jo
mov
ret
mov
and
jne
jo
cmp
hlt
mov
add
shll
pop
xor
inc
sbb
sbb
push
push
push
push
call
mov
mov
and
mov
mov
mov
and
xor
xor
xor
cmp
jne
cmp
jne
mov
mov
add
or
mov
or
xor
lea
xor
mov
and
add
mov
xor
xor
div
mov
mov
xor
imul
mov
push
push
xor
mov
lea
mov
mov
lea
mov
mov
or
xor
div
mov
add
xor
add
mov
add
mov
mov
mov
mov
sub
mov
sbb
mov
xor
mov
xor
mov
add
adc
jmp
push
add
aaa
mov
inc
sub
xchg
scas
insb
fisubl
adc
push
adc
adc
shlb
lods
add
sbb
mov
mov
inc
lcall
mov
dec
xchg
mov
xchg
xor
jmp
icebp
into
shrl
sbb
enter
mov
fidivl
adc
cmp
jmp
dec
inc
fldenv
stos
jbe
cmc
repnz
out
mov
xchg
pop
inc
inc
inc
dec
sub
jmp
mov
scas
ret
test
xchg
sub
cmp
xorb
mov
jecxz
xor
pop
out
mov
push
pop
push
nop
lret
xor
lods
dec
movsb
fiaddl
aad
or
xchg
mov
mov
mov
pop
jno
imul
ss
clc
sbb
dec
imul
adc
and
outsb
shrb
jno
aad
popa
fistl
bnd
xor
push
push
dec
aam
negb
imul
ret
lcall
movsb
pusha
ret
fdivrl
mov
cld
pushf
mov
dec
daa
cmp
pop
push
mov
and
lods
icebp
ret
add
mov
leave
and
mov
jb
push
aad
icebp
mov
pop
bound
push
pop
jae
into
stos
pop
dec
jge
js
add
dec
lea
dec
add
mov
xchg
popf
mov
leave
mov
filds
dec
and
sub
test
sbb
jne
les
jno
push
scas
lock
arpl
xchg
or
loop
xchg
pop
mov
shlb
dec
or
je
jmp
cmp
mov
inc
fs
cmpsb
in
jnp
pushf
ds
movsb
push
imulb
xor
xchg
add
mov
inc
push
fldt
xor
push
fistps
movsb
cli
sbb
notb
aaa
push
pop
test
cmpsl
loopne
adc
insl
xchg
ja
sub
cmp
lret
pop
cli
jae
sub
add
stc
and
cmp
sub
jl
push
pop
adc
adc
ds
push
or
lock
mov
push
loope
lret
movsb
ljmp
pop
sbb
jbe
lds
rorb
xchg
adc
sbb
int
push
sarb
loope
mov
fwait
mov
stc
fmul
xor
mov
ljmp
push
imul
inc
mov
in
push
or
jbe
out
mov
fstl
out
sub
inc
cmp
fs
xchg
sbb
data16
mov
lcall
add
jecxz
repz
xchg
sub
fbstp
fsubrl
mov
loop
cmp
push
sahf
iret
test
cmpsb
push
mov
int3
mov
shrl
ss
jecxz
mov
mov
rolb
adc
sbb
pop
lret
dec
out
mov
aam
mov
data16
rcrb
sti
sbb
dec
loope
gs
mov
insl
jp
sub
shrl
mov
iret
xor
loopne
jmp
mov
push
sti
leave
in
aas
stos
pop
sbb
ds
pusha
bound
mov
xor
iret
add
data16
pop
xor
leave
jecxz
testb
adc
push
push
call
mov
sub
push
pop
sbb
mov
xor
cmp
jne
cmp
jne
mov
mov
add
shr
or
mov
xor
xor
add
mov
pop
leave
ret
push
mov
sub
push
push
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
adc
mov
push
push
jmp
and
pop
sbb
push
pusha
jo
ret
sbb
adc
movlps
cltd
loopne
jbe
adcb
and
lahf
xor
mov
mov
vcvttss2si
sub
cs
fistpll
ljmp
hlt
push
cs
push
cwtl
rcl
or
jnp
and
and
jge
add
stc
inc
int
sub
test
ret
fstpl
out
sub
push
jbe
repz
mov
int
adc
push
push
bound
add
add
or
dec
faddl
imul
je
outsl
leave
inc
aad
add
pop
lahf
jnp
mov
inc
mov
fidivl
mov
or
subl
in
inc
jp
cs
dec
pop
cli
loopne
leave
cmp
into
adc
shl
inc
jg
pop
dec
gs
inc
mov
add
or
dec
jnp
shlb
xchg
dec
movsb
in
adc
arpl
sbb
stos
int
xor
inc
call
sbb
mov
lods
aad
in
pusha
out
pop
idivb
aaa
push
rcll
push
xchg
scas
lret
stc
xchg
les
mov
or
shll
push
in
lods
pop
repz
sbb
sub
xor
cmp
out
pop
cwtl
pop
and
scas
or
jmp
out
xchg
test
mov
xor
sub
dec
inc
fsubrs
fisubl
mov
mov
cmc
pop
iret
jecxz
mov
scas
rcll
scas
pusha
rcl
loope
inc
jo
push
repnz
iret
cmp
sti
rcl
int3
mov
ret
pushf
mov
pop
sub
pop
mov
aaa
jns
je
mov
stc
jl
je
ds
movsb
inc
data16
lret
push
inc
jno
ljmp
addr16
imul
lods
inc
inc
jp
mov
xor
call
cld
and
es
add
es
pop
or
or
lret
stc
je
cmc
push
fs
jmp
pop
push
cmp
or
pop
pop
lcall
fwait
inc
pop
mov
ficoms
les
or
cmp
pusha
rol
xorb
outsl
hlt
cli
pop
out
ret
fs
aam
jg
mov
push
aaa
sarb
addr16
jae
aam
or
add
or
out
in
mov
sub
fwait
ja
pop
testb
cmp
xchg
push
aas
lods
outsl
scas
dec
pop
add
add
cwtl
pop
pop
js
leave
xor
add
push
push
call
mov
mov
and
or
mov
mov
and
or
xor
xor
shld
shl
shr
xor
jmp
pop
rolb
sbb
sbb
popf
fs
outsl
xchg
js
sbb
adc
movlps
test
cwtl
jmp
out
sbb
cmp
mov
push
aas
sub
adc
push
add
push
push
ja
imul
lret
cmp
xchg
out
fnstsw
mov
pop
push
ret
dec
or
or
out
out
xchg
sbb
fisttpl
dec
test
hlt
mov
and
and
mov
mov
jp
xchg
test
mov
push
xchg
adc
sbb
sbb
or
mov
push
add
mov
pop
push
leave
inc
hlt
xor
xor
mov
jno
and
roll
jnp
ficomps
mov
dec
int
mov
sbb
pop
out
in
hlt
mov
ljmp
xchg
lcall
xchg
push
sahf
stos
sbb
push
push
push
mov
cmp
cmc
lock
pop
jns
xor
adc
xor
pushf
ret
mov
adc
fucomip
mov
pop
loop
loope
inc
inc
inc
xchg
scas
popf
xchg
clc
cmp
lret
lret
mov
or
or
jb
lods
pop
es
cmp
xchg
sbb
sti
jge
xor
sarb
push
hlt
rcrl
test
jecxz
add
sahf
xchg
sbb
ret
fmuls
cmp
sbb
lea
sti
mov
lcall
shl
and
das
inc
repz
push
int
xor
rcr
loop
movsb
test
and
int
adc
imul
adc
mov
xchg
xchg
outsb
xchg
lret
xchg
xchg
xor
fstpl
rol
cmp
add
cli
xor
pop
xchg
pusha
inc
xor
call
pop
test
sbb
cmpsb
xchg
sbb
in
gs
sub
icebp
pop
lret
incb
test
dec
xor
out
es
dec
sbb
call
test
das
inc
inc
leave
push
fwait
xor
out
or
aam
lahf
xor
lret
mov
int3
cli
test
lea
ret
mov
pop
js
outsl
mov
dec
cmp
les
rcrl
les
jg
sar
add
sbb
push
les
aam
lahf
mov
adc
or
pop
push
je
stc
stos
xchg
cltd
push
test
scas
xor
sahf
or
hlt
cltd
push
scas
sahf
cmp
loop
negl
or
or
xor
mov
mov
xor
mov
mov
mov
mov
mov
push
push
push
push
call
add
push
adc
push
push
push
call
mov
mov
mov
xor
xor
add
mov
adc
mov
mov
mov
mov
mov
jmp
repz
push
cmpb
adc
xchg
loopne
push
adc
decb
adc
repnz
sbb
pop
cltd
dec
ret
dec
and
cmp
test
xchg
xchg
sti
jb
loope,pt
mov
incl
and
mov
inc
mov
add
sarl
jl
sbb
pop
ja
div
gs
stos
in
xchg
outsl
xor
jge
xlat
in
call
leave
mov
mov
pop
mov
inc
push
mov
mov
mov
push
mov
fdivs
adc
cmp
sbb
cmp
notl
loopne
adc
push
xor
fdivs
fwait
cmp
ret
pop
jb
mov
stos
fisttps
call
neg
push
shll
pop
mov
cmpsl
mov
cmp
add
lock
test
mov
lcall
adc
fucomip
stos
popa
lret
and
sbb
xor
add
jbe
cwtl
mov
push
dec
aad
bound
sbb
pop
lahf
sbb
jge
pop
mov
and
sbb
adc
pop
out
cmc
sahf
mov
dec
addr16
mov
push
aas
gs
fucomip
scas
shl
lods
out
dec
fsubrl
fucomi
pop
and
cs
popf
jmp
jae
test
mov
subb
mov
mov
sub
and
pop
clc
or
jne
ljmp
dec
inc
mov
movsl
loopne
stos
ss
test
inc
inc
cmp
fs
or
jl
test
idivl
push
or
fs
out
and
adc
in
and
xor
adc
int
pop
jne
sbb
fdivp
pop
dec
outsb
bound
bound
adc
cmc
popa
test
rcrl
sbb
sub
sbb
inc
xchg
stc
fcomi
add
lea
pop
dec
and
jnp
shrl
outsl
push
imul
loope
bts
jne
repz
loop
or
gs
cld
mov
jno
fildll
mov
xchg
sub
out
sbb
daa
out
lret
cmp
jbe
dec
sbb
jl
outsl
sub
insl
arpl
sbb
in
aad
sbb
push
pop
pushl
call
cmp
sbb
pushf
clc
sbb
inc
fdivrs
sbb
mov
sub
mov
sbb
add
jmp
mov
bound
popa
adc
mov
mov
adc
movlps
fistpll
mov
das
pop
jg
jns
gs
enter
inc
dec
pop
mov
sub
lret
push
ss
pavgb
test
ds
mov
xor
in
add
fisubrl
mov
xchg
inc
sub
inc
cmc
inc
push
push
fimuls
xorb
xor
sub
div
or
and
out
sbb
inc
mov
mov
fcoml
je
cli
xor
hlt
int3
test
ds
add
pop
out
push
xchg
mov
ja
bound
push
adc
divb
inc
push
orl
es
pop
sub
sbb
mov
cmp
cmp
cmp
loope
xchg
das
leave
cmc
add
mov
cmp
and
hlt
enter
js
dec
pop
in
add
ljmp
adc
sbb
xchg
push
repnz
xchg
rcr
fsubrl
ret
lcall
jg
movsb
andb
sub
roll
ss
pop
insl
mov
dec
stos
adc
mov
das
pop
mov
adc
mov
cmpsl
mov
dec
addr16
cmp
out
clc
test
int3
int3
in
lret
and
stos
lock
xor
sti
mov
hlt
stos
mov
sub
fdiv
fnop
sbb
subl
adc
dec
and
or
pop
adc
xlat
pop
push
cmp
scas
std
sub
jnp
bound
sbb
add
aam
mov
mov
cmp
aaa
push
xor
jmp
loop
sub
icebp
add
lock
sti
mov
cmp
rcrb
sbb
and
sbb
push
popa
mov
sbb
xchg
cmpsb
cmp
add
mov
stos
push
adc
cli
mov
push
cli
fstps
sbb
inc
jno
movsl
stc
adcl
shlb
dec
gs
dec
dec
loopne
cmpsl
stc
sbb
dec
popa
jo
cmp
in
incb
push
xlat
sub
push
mov
push
dec
jge
push
push
or
das
sti
rolb
sbbb
dec
and
imulb
push
rcrb
call
fdivp
xor
xor
push
mov
dec
fcoms
js
push
xor
mov
pop
sub
mov
sub
mov
mov
mov
add
xor
shrd
xor
shr
or
shl
or
mov
push
mov
mov
mov
push
push
push
call
mov
mov
mov
or
mov
or
mov
add
mov
adc
jmp
jp
push
sub
pop
cmp
dec
mov
adc
decb
adc
adc
out
add
inc
cmp
lea
imul
adc
mov
dec
jp
cmp
push
insl
pop
mov
jecxz
rclb
add
ja
fwait
xor
mov
lret
xchg
adc
jae
repnz
imul
jne
xor
out
push
cltd
push
inc
rcr
and
cmc
lds
mov
xor
sbb
mov
push
aad
dec
adc
jmp
iret
jo
or
js
outsl
aaa
adc
arpl
ja
and
ret
in
cmp
addr16
repz
call
sub
std
dec
cmc
lods
cmp
or
pop
in
mov
sbb
int
out
sub
negl
push
repnz
lods
sahf
jne
rcll
push
sarb
push
jns
cmpsb
xlat
xchg
cmp
sbb
cmpsb
aad
pop
stos
or
mov
push
pop
push
mov
dec
sub
fstl
pusha
leave
push
in
fmuls
jbe
cwtl
das
dec
dec
adc
fisubrs
inc
popa
gs
mov
mov
add
imul
and
jb
mov
pop
sbb
jecxz
insl
cmp
pop
push
out
adc
xor
ja
mov
sbb
push
jecxz
cs
push
adc
enter
test
jle
xor
cmp
add
and
xchg
xchg
sub
pop
bound
sahf
loopne
jo
js
repnz
lods
arpl
loopne
insb
cmp
icebp
jo
adc
add
cmp
cld
insb
ret
sub
push
insb
cmpsl
pop
inc
pop
fwait
inc
xlat
mov
das
ret
cmp
adc
xor
lock
outsl
inc
stc
daa
xchg
and
push
pop
daa
and
jg
xchg
fldenv
repz
sbb
mov
call
cmp
roll
sbbb
cmp
jbe
mov
push
mov
outsb
ret
sub
pop
out
pop
lock
out
cs
popf
xchg
lds
add
ljmp
lret
push
dec
sarb
inc
ss
jecxz,pn
jbe
inc
sbb
adc
cli
push
cltd
push
scas
shrb
adc
out
add
enter
adc
add
adc
pop
mov
mov
pop
leave
ret
push
mov
sub
movl
movl
movl
movl
movl
movl
movl
jmp
mov
call
sub
push
mov
push
adc
rorl
adc
or
mov
les
sti
or
sub
test
xchg
mov
mov
cltd
iret
adc
sub
cmp
test
sub
xchg
outsb
xor
jle
mov
pusha
xorl
lret
ret
rcrb
int3
cmpsl
cltd
jae
mov
movzbl
lock
leave
pop
push
cwtl
or
movsl
std
adc
test
pop
roll
std
xchg
xor
js
decb
aas
lods
es
into
stc
es
mov
push
imul
adc
nop
and
addr16
ljmp
int3
mov
aas
ficoml
xchg
lods
lds
and
leave
pop
fsts
mov
insl
sarl
pop
mov
push
icebp
call
int3
and
jg
sub
mov
cmpsb
dec
shlb
push
and
movb
xor
add
test
std
imul
cmp
mov
decl
out
ror
xor
fistpll
add
adc
jae
push
and
push
sub
sub
cmp
add
push
sub
mov
sahf
movsb
cmpl
adc
lock
lret
and
sbb
sbb
mov
aad
lret
scas
lds
mov
scas
cltd
pop
inc
in
lret
icebp
mov
add
mov
enter
loopne
push
loopne
mov
fs
mov
bound
mov
call
sub
xchg
into
xchg
ja
iret
pop
mov
cmp
push
ja
pusha
lret
std
push
cwtl
cmp
outsl
std
stos
outsb
mov
xchg
into
icebp
outsb
add
out
push
fs
fstpt
adc
incl
imul
mov
hlt
inc
mov
pop
arpl
mov
incb
push
das
arpl
loopne
mov
insl
jb
sbb
insb
xor
mul
test
mov
lahf
out
andb
addl
pusha
fsts
lret
dec
or
repnz
mov
out
mov
imul
aam
mov
jl
adc
jb
fwait
imul
cmpsl
imul
sbb
addr16
sub
stos
test
push
mov
jb
popa
push
pushl
mov
ljmp
jmp
inc
int3
mov
add
inc
rcr
jg
add
inc
aam
sub
add
inc
fmuls
sldt
movl
movl
mov
mov
and
add
mov
and
mov
sub
and
mov
mov
imul
add
add
xor
cmp
jne
mov
mov
mov
sub
add
mov
or
mov
imul
sub
add
mov
or
mov
mov
add
imul
add
mov
add
mov
mov
mov
and
mov
and
mov
imul
mov
or
mov
imul
mov
sub
cmp
je
mov
jmp
mov
sub
xor
add
jmp
movl
movl
mov
mov
imul
add
and
add
or
sub
leave
ret
push
mov
and
sub
push
push
lea
mov
mov
mov
mov
sub
sbb
mov
orl
orl
lea
push
lea
push
call
mov
mov
pushl
mov
pushl
mov
pushl
pushl
pushl
pushl
pushl
call
pop
pop
mov
pop
ret
push
mov
sub
movl
movl
movl
movl
movl
movl
jmp
jl
and
pop
popa
loopne
stos
fwait
lcall
popa
movlps
cmp
sub
cmp
xchg
jle
sbb
dec
inc
call
fcmovbe
push
pop
movsb
inc
pop
in
xor
sbb
cli
jcxz
xchg
lret
iret
out
mov
and
lcall
fstl
je
push
inc
dec
bound
adc
mov
xor
jl
notb
scas
in
rcrl
lcall
adc
cmc
and
sbb
xorl
sbb
and
mov
cmp
popl
pop
push
mov
cmp
pop
arpl
mov
pop
test
mov
comiss
xchg
xor
pop
mov
jle
sub
out
xor
popa
pop
xchg
mov
cmp
sub
andb
lret
imul
lods
repz
sbb
pop
mov
and
in
test
test
lahf
or
mov
lods
pop
sbb
dec
jl
cmc
inc
push
loop
mov
sbb
mov
cmp
fstp
cmpsb
imul
inc
mov
testb
es
pop
dec
push
xchg
adc
mov
xchg
dec
mov
mov
test
loope
popf
jg
mov
pop
das
jl
sbb
lock
js
enter
inc
or
pushf
fsubl
cmp
adc
movb
lret
inc
sbb
jecxz
jmp
mov
mov
or
push
loope
into
into
dec
push
fildll
and
dec
popa
stos
or
mov
jae
xchg
jno
ror
cmp
jo
push
jb
test
bound
xchg
cltd
mov
fidivl
pop
mov
shlb
cmp
jb
xchg
push
arpl
std
mov
xlat
sbb
cs
and
mov
psrlw
inc
or
js
insb
int3
push
pushf
mov
jl
sbb
pop
cmc
and
xchg
stos
jo
pop
lock
mov
jo
pop
int3
sbb
orl
not
cmpsb
jmp
mov
out
mov
mov
adcl
sbb
clc
lret
push
bound
or
mov
outsl
mov
repz
and
cwtl
fdivrl
or
or
test
sahf
jbe
xchg
mov
and
mov
fdecstp
push
sbbb
repz
mov
mov
lods
arpl
arpl
jecxz
push
dec
addl
pop
jge
imul
inc
cld
dec
pusha
add
movl
movl
movl
movl
movl
mov
mov
add
xor
mov
and
imul
xor
push
movl
movl
movl
mov
jmp
mov
loop
lcall
stos
scas
jp
lods
dec
clc
adc
popa
movlps
or
xor
jle
out
cli
pop
cmc
push
jns
movsl
loope
mov
lock
stos
stc
jno
into
sub
cmp
ror
push
mov
fnstsw
sbb
pop
dec
add
loope
and
cmp
out
xchg
mov
in
or
out
dec
cli
mov
and
pop
inc
adc
loopne
or
jae
adc
jp
jp,pn
in
decl
into
xor
xorl
xor
loope
adc
sahf
lcall
sub
dec
sbb
jno
adc
mov
aad
push
mov
fbld
ret
pop
sub
ret
lods
int3
lock
xchg
xchg
inc
ss
jne
sbbl
mov
aaa
das
test
or
fcmovnb
rclb
push
and
cwtl
mov
fs
enter
popa
stos
movsl
test
lods
mov
test
std
rorb
aad
dec
mov
xlat
inc
int
adc
adc
or
jnp
mov
sub
or
fwait
xor
aas
push
ss
sub
push
cwtl
or
pop
lcall
mov
clc
loop
shll
ljmp
push
cmp
leave
pop
lret
dec
fcomps
hlt
bound
enter
iret
movsl
int3
imul
aas
jge
enter
mov
xchg
lods
out
int
in
xchg
add
outsb
mov
cmpsb
test
fcomps
and
js
enter
out
add
loope
jbe
mov
sahf
clc
pop
dec
ficoml
mov
pop
sbbb
mov
adc
lods
adc
jne
shrb
push
stos
and
xlat
movsb
mov
push
inc
mov
movsb
jg
push
inc
add
mov
mov
stos
jle
push
xchg
and
mov
aaa
dec
add
push
addr16
cmp
in
add
movsb
add
lret
jb
lahf
sub
imul
push
std
and
push
dec
sub
outsb
out
adc
js
mov
test
mov
and
test
jne
rcrl
neg
inc
fisubrl
pushf
shl
xchg
adcb
inc
cli
sbb
cmpsl
add
dec
out
mov
mov
push
jno
xchg
inc
cmp
je
jp
dec
ja
push
mov
push
in
out
lahf
push
mov
inc
repnz
pop
popf
push
add
pop
dec
pop
mov
adcb
mov
or
movsb
mov
mov
movd
push
cli
mov
ret
push
out
and
movsl
adc
dec
add
dec
dec
cld
sub
inc
ds
mov
xor
sub
div
mov
mov
or
xor
mov
jmp
sti
je,pn
sub
stos
pop
inc
stos
cltd
notb
adc
adc
mov
cmpsl
xor
in
movsb
in
mov
mov
ljmp
daa
add
xchg
mov
pop
and
leave
ret
icebp
cmc
mov
dec
jb
and
fldcw
std
pop
or
jg
andl
inc
out
aad
mov
ret
mov
fldl
scas
xor
cmp
inc
push
outsb
add
adc
in
jl
lea
adc
cmpsb
leave
fistpll
adcb
int
in
xor
pop
addb
movsl
sub
shrb
fldenvs
mov
lret
mov
and
or
dec
std
lods
or
sub
pop
aam
rcrb
jp,pt
jmp
xor
and
mov
add
xlat
mov
pop
dec
cmc
lods
sahf
lods
jb
mov
sub
scas
add
mov
inc
mov
scas
stos
jge
mov
jle
adc
enter
ja
aam
and
sarb
and
push
ds
pop
add
fsubrl
adc
sbb
add
jmp
xchg
mov
shr
push
sbb
inc
add
cmp
inc
in
sbb
data16
lods
jae
xchg
fdivl
inc
mov
stos
add
jle
stc
sbb
push
mov
movsl
xchg
ss
popa
inc
sub
into
ljmp
xor
lcall
mov
jns
jl
roll
lods
cmp
add
push
lret
jb
pop
mov
and
sub
stc
popa
sti
arpl
jle
pop
sub
mov
fldl
fcom
pop
push
adc
pusha
ljmp
jns
into
xor
or
push
movsb
cmp
dec
mov
mov
in
or
jmp
repnz
xchg
mov
clc
cmp
adc
inc
or
ss
or
imul
lock
out
lock
icebp
insl
push
out
and
mov
pop
sub
ds
test
test
xchg
lods
lret
out
ret
aas
dec
sbb
inc
jo
and
push
cwtl
hlt
or
icebp
add
lea
cmp
xchg
cmp
inc
iret
out
gs
sbb
nop
jb
outsl
int3
xchg
mov
add
lcall
and
xchg
ficoml
in
popa
test
sub
dec
lret
mov
jg
mov
lret
imul
xor
movsl
das
arpl
imul
jns
inc
data16
mov
jge
sub
mov
mov
mov
mov
mov
mov
mov
mov
imul
and
or
xor
add
mov
mov
sub
add
mov
xor
mov
jmp
xchg
and
jp
sbb
lods
jo
fidivrs
popa
movlps
addr16
inc
ficoml
gs
mov
idivb
and
and
das
sti
xorl
add
lcall
iret
and
dec
cltd
test
shl
scas
rol
scas
mov
adc
insl
mov
cmp
and
es
in
jnp
cmpsl
jg
and
fs
ds
popf
push
xchg
xchg
call
lcall
jno
push
pop
or
xor
push
test
xchg
adc
stos
mov
adc
pop
xchg
dec
pop
test
fstl
loope
and
inc
andb
mov
cmp
push
or
pop
jle
mov
add
cmc
cmc
adc
test
rcrb
dec
push
test
fnstsw
fcoms
xor
push
jecxz
mov
pop
cmc
jecxz
pop
mov
adc
jo
mov
in
xchg
out
fcoms
popfw
mov
inc
addr16
lea
addl
popf
inc
inc
jmp
dec
sbb
push
push
loopne
inc
sbb
bnd
push
inc
or
cli
push
xchg
jb
adc
mov
adc
adc
lcall
lea
outsb
cmc
push
jnp
mov
cmpsb
pop
jge
mov
jbe
fistl
adc
dec
xor
fsubrs
xchg
mov
out
in
into
insb
mov
out
mov
insl
mov
enter
jge
cmpsl
std
inc
adc
fisubs
scas
push
decb
mov
shl
test
ret
jge
sahf
out
sub
out
je
call
pusha
jmp
mov
push
add
xchg
mov
in
or
mov
sbb
lret
mov
and
dec
scas
pop
pop
in
popa
or
mov
cmp
out
sbbb
test
push
in
xchg
call
or
mov
lret
dec
faddp
scas
mov
aam
mulb
enter
and
pop
push
inc
jmp
jb
in
in
adc
inc
hlt
pop
sbb
mov
in
ja
xor
clc
cltd
shll
xor
inc
cmp
mov
push
rcrl
bound
out
or
enter
jle
je
inc
ljmp
jp
stc
and
rcll
push
cltd
or
adc
mov
xchg
cmp
inc
stc
pop
lret
das
cmpsl
movsl
test
nop
rol
lret
inc
subb
lahf
adc
jp
mov
popa
or
mov
push
icebp
gs
xchg
mov
push
insb
adc
mov
clc
test
jno
jo
jge
lea
adc
movsl
inc
fcoml
adc
add
ret
fmuls
jnp
add
lea
mov
shr
or
mov
sub
add
cmp
jbe
pop
leave
ret
push
mov
sub
push
addl
push
mov
or
mov
push
mov
sub
mov
shrd
cmpl
mov
mov
mov
jmp
movl
not
jae
push
push
pushl
pushl
call
movl
sbb
xor
mov
mov
sub
imul
add
xorl
mov
or
addl
shr
mov
mov
mov
mov
xor
mov
xor
xor
cmpl
mov
mov
movl
jmp
movl
ja
push
push
pushl
call
or
orl
sub
movl
mov
mov
sbb
sbbl
mov
sbb
mov
or
mov
mov
andl
shl
adc
mov
add
shrd
negl
xor
shr
xor
mov
adc
mov
xor
or
mov
mov
negl
mov
mov
mov
mov
cmpl
movl
mov
mov
jmp
mov
mov
ja
push
push
push
push
push
push
call
mov
mov
sub
sub
and
mov
xor
xor
sub
imul
sbb
add
mov
mov
andl
mov
mov
shl
xor
jmp
filds
scas
pop
sub
out
imulb
mov
xchg
movlps
pop
xchg
push
ljmp
mov
lds
dec
jns
lods
insb
xchg
dec
inc
in
push
aad
sub
dec
aaa
aaa
jae
push
outsl
ljmp
adcb
mov
push
pop
inc
sub
insl
std
adc
in
mov
pop
fucom
das
out
adc
jnp
icebp
mov
pop
cli
push
jae
lods
stos
fsubs
enter
jns
cwtl
ja
pop
lods
nop
push
xchg
jp
mov
enter
lods
movsl
lahf
push
sarl
icebp
dec
cmpl
loop
inc
and
into
cmp
pushf
sarl
inc
cmp
and
dec
lcall
push
or
icebp
decl
hlt
mov
out
push
stc
sub
mov
adc
lahf
xor
push
notl
psadbw
xchg
or
and
lret
lods
mulps
int3
adc
cmp
lods
mov
jo
divb
fimull
mov
outsb
scas
loope
sbb
cld
clc
fidivl
adc
rcrb
mov
xchg
pop
popl
ret
or
inc
push
mov
mov
xor
mov
iret
push
vpsrlq
movsl
fwait
lahf
jo
mov
cmc
aad
js
lock
aad
lock
and
insb
adc
fimull
leave
aas
or
lds
adc
outsb
js
sub
pop
in
out
dec
imul
daa
ret
iret
lock
popf
lds
pop
sbb
mov
xor
fwait
xchg
arpl
hlt
aaa
test
mov
mov
clc
jb
push
or
call
push
dec
shrl
ja
inc
ss
out
es
inc
push
cmp
mov
setns
jns
jg
mov
in
popf
andl
ror
es
loop
pop
push
mov
xorb
dec
das
lret
fmull
jmp
pop
add
cli
pop
xchg
xchg
or
xchg
inc
mov
mov
jl
push
or
sub
and
das
rorl
xchg
mov
dec
and
shlb
pop
call
pop
stos
std
sbb
aaa
cmp
jne
dec
roll
imul
pop
pop
pop
push
add
sbb
in
gs
pop
pop
mov
negb
dec
pop
adc
jecxz
inc
lahf
jle
cmp
adc
xchg
jp
jl
imul
mov
in
xor
das
leave
lea
mov
fs
loope
jo
call
popa
and
fnstenv
sub
rclb
in
cmp
fs
movl
xor
sub
mov
xor
adc
shld
mov
shl
mov
movl
movl
movl
cmp
movl
jne
cmp
je
mov
cmpl
mov
notl
movzbl
mov
jmp
mov
jbe
pushl
push
push
push
push
call
or
sbb
not
movzwl
adc
xor
xor
and
mov
add
xor
add
xor
add
movzwl
xor
mov
cmpl
movl
movl
not
mov
jmp
mov
movl
jge
pushl
push
push
call
or
or
movl
andl
orl
movzwl
adc
andl
adc
xor
incl
xor
xor
xor
mov
sbb
mov
shld
movl
shl
movl
cmp
movl
jne
movl
cmp
movl
je
cmpl
mov
mov
jmp
mov
jne
push
call
addl
and
and
and
movzbl
or
xor
mov
mov
mov
adc
mov
mov
mov
sub
xor
push
pop
xor
xor
xor
jmp
shlb
jno
jno
stos
sub
cmpsb
js
out
lods
test
adc
xchg
movlps
adc
push
xor
lahf
and
mov
sbb
or
lods
out
pushf
fsubs
shrl
daa
sub
mov
fadd
scas
imul
jnp
ret
or
lea
stc
sbb
cli
add
cmp
fisttpl
mov
mov
sub
inc
xlat
mov
push
and
lret
dec
dec
rcrb
dec
int3
lods
and
in
xchg
sbb
adc
iret
mov
push
mov
or
out
jnp
dec
push
add
push
push
inc
or
jne
sbb
sbb
imull
cmpsb
shll
xchg
mov
xchg
rclb
inc
xor
sti
jne
pop
sarl
inc
add
enter
mov
dec
mov
notb
inc
scas
outsl
inc
pop
push
clc
mov
xchg
stos
ficomps
idivb
mov
outsb
or
addr16
mov
inc
sub
sbb
lret
xchg
daa
lods
movsl
sub
lahf
inc
loope
loopne
mov
inc
push
or
stos
mov
ret
leave
movsl
xlat
xor
mov
jp
mov
lods
push
pushf
inc
fdivrs
andb
popf
addl
inc
je
rclb
xchg
and
lcall
jl
jae
push
lea
pop
fidivrl
aad
test
int3
sbb
decb
out
shrl
xlat
pop
adc
mov
mov
in
das
cmp
mov
pop
inc
enter
pushf
ljmp
pusha
hlt
dec
outsl
lods
call
mov
out
lcall
fsubrs
aad
push
cs
jo
fisubrs
lcall
lahf
jg
sbb
push
mov
adc
dec
repz
mov
rolb
pushl
lock
inc
sub
mov
xor
and
scas
fwait
jg
inc
lds
shlb
test
jle
popf
sbbl
pop
or
mov
in
data16
or
popf
and
push
sub
sub
push
sbb
cld
push
mov
iret
push
repz
cmp
sahf
rcrb
dec
sbb
xchg
rorl
mov
int3
repnz
jecxz
mov
dec
cmp
cli
pushl
loope
and
out
xlat
fsubl
lcall
sbb
xor
ret
jmp
fdivl
cmp
or
testb
inc
dec
mov
adc
mov
bnd
cmpsl
inc
adc
xchg
xchg
jg
or
cld
fdiv
sti
cmp
push
sub
adcl
mov
xorl
xor
movl
shr
or
cmpl
mov
mov
movl
jmp
movl
movl
ja
pushl
pushl
pushl
push
pushl
call
or
or
xor
add
and
add
xor
mov
xor
mov
mov
mov
mov
mov
push
cmpl
mov
movl
jmp
mov
mov
jae
pushl
call
sbb
adc
xor
movl
orl
add
pop
andl
sub
cmpl
mov
mov
jmp
movl
movl
jne
push
push
push
call
xor
movl
or
or
subl
adcl
mov
xorl
add
addl
mov
subl
lea
mov
mov
mov
xorl
jmp
outsb
xchg
or
pop
pop
stos
adcb
fistl
adc
jb
das
loope
loope
test
fsub
or
sub
ljmp
or
rorl
mov
movsb
das
or
xor
push
fdivrs
lock
mov
shr
adc
jnp
push
cmpsb
repz
dec
stos
test
scas
push
js
lods
out
pop
xchg
add
jmp
add
adc
mov
ja
stc
lahf
and
mov
idivl
cmp
push
ds
inc
outsb
loope
int3
xchg
xchg
int3
push
xlat
clc
sub
jns
idivl
pop
jae
movsb
and
or
int3
dec
jl
xor
adc
lods
xor
fucomip
push
cmp
andl
fildl
xchg
add
inc
xchg
mov
sub
cmp
lret
add
pop
jl
cmpl
or
aam
jmp
mov
and
js
or
sahf
adc
push
in
pop
xchg
aas
sub
cs
xchg
pop
fs
into
fdivrs
xchg
insl
jne
xlat
fs
repz
pop
sub
adc
pushf
mov
aaa
call
sub
rol
out
sbb
push
adc
shr
in
mov
std
or
jle
fidivrl
xchg
xchg
pop
xor
dec
pusha
test
imul
daa
mov
adc
and
test
std
push
inc
dec
ja
dec
cs
xchg
fists
or
test
pushf
int3
lret
or
psubd
test
je
dec
add
out
mov
movsl
jno
popa
xchg
adc
fwait
mov
or
inc
jg
test
add
push
dec
pop
test
int3
mov
cs
xor
push
dec
cmp
imul
aam
xchg
int3
imull
push
iret
frstor
cltd
xchg
loopne
inc
movsb
psllq
enter
jnp
pop
jns
mov
mov
repz
in
push
mov
dec
mov
in
sub
pop
cld
or
insb
popf
fldenv
gs
fadd
inc
xor
mov
push
pusha
rolb
lods
adc
ds
pop
cmp
iret
mov
xchg
pop
mov
cmp
lahf
and
mov
rcrb
dec
jecxz
push
and
leave
sub
or
add
or
call
in
mov
nop
out
popa
loop
cld
cwtl
xor
shrb
dec
outsb
mov
adc
xchg
push
pop
add
popf
xchg
arpl
clc
and
dec
cmpsl
jae
call
lret
andl
jmp
sub
sbbl
pop
js
lods
or
rep
mov
movlps
clc
mov
sbb
cld
repnz
cmp
cwtl
sahf
push
sahf
sbb
add
stc
lds
and
jmp
sti
out
jo
es
mov
cwtl
cmp
pop
ss
jne
cmp
sbb
insl
loop
jne
sbb
std
mov
fcomps
into
sbb
lods
inc
jmp
stc
repnz
les
mov
pop
ror
inc
clc
jp
sbb
push
out
testb
adc
dec
and
insl
insl
enter
insb
push
pusha
pop
xor
inc
dec
or
xor
dec
insb
rorb
mov
or
jns
jg
inc
xchg
push
jp
cwtl
sbb
hlt
fnstenv
adc
fwait
rcr
mov
clc
sbb
mov
shl
xchg
xorb
mov
outsl
aam
push
sub
in
mov
inc
js
idiv
popl
sub
sub
mov
fisttpl
cwtl
push
fmull
dec
cmpsl
ficomps
gs
mov
stos
addl
dec
addr16
pop
nop
mov
inc
lock
cli
movsl
pop
xor
lcall
push
push
inc
cwtl
sbb
jns
pop
jbe
inc
sub
sbb
out
test
shlb
in
sub
sub
mov
sub
pop
sbb
fs
xor
xchg
mov
inc
cmc
and
pop
dec
mov
cmp
enter
movsl
push
or
shr
add
mov
data16
movsb
jae
icebp
ret
jle
lods
lods
std
mov
mov
xor
movsb
add
lcall
jecxz
cmpl
rcrb
jbe
ss
sub
lods
jl
sub
ja
push
outsb
jmp
mov
cmp
mov
orb
sub
dec
in
lcall
inc
add
dec
inc
xorb
pop
popf
adc
push
imul
jbe
xor
cwtl
add
arpl
dec
enter
sub
sbb
mov
or
or
cli
rcl
xorl
test
pushf
adc
sti
jnp
ss
fisttpl
add
inc
pop
push
in
fcomi
lahf
or
repnz
cmp
stos
and
and
mov
adc
jge
add
imul
js
lock
push
dec
pop
sub
bound
or
add
test
xor
jno
ret
frndint
repnz
ficoms
outsb
sub
ffree
call
enter
leave
inc
add
loope
sbbl
or
xor
mov
movl
jmp
test
repnz
cltd
dec
sbb
mov
es
adc
xchg
movlps
fcoms
jmp
or
sbb
pop
in
scas
inc
push
push
adc
mov
and
aas
xchg
push
cltd
inc
movsl
xorb
inc
cmp
loope
sti
rorl
sub
rcll
xlat
add
inc
add
in
xor
xchg
out
push
shr
inc
pop
call
addl
xor
adc
lcall
mov
cmpb
sbb
test
push
rcl
xchg
push
push
xchg
jae
pop
into
xlat
inc
sub
push
lahf
clc
xor
sub
adc
insb
xor
mull
cmp
pushf
sarb
push
mov
or
add
mov
cmp
out
xlat
fstpl
out
sbb
sbb
jge
pusha
loop
and
ljmp
data16
stos
not
pop
mov
loop
imul
cmp
xchg
xorb
adcl
int3
adc
sub
mov
addr16
jo
scas
scas
mov
mov
pop
mov
mov
and
or
inc
sub
jl
dec
test
mov
insb
rcrl
and
jmp
sub
jne
es
inc
xchg
mov
cmp
sub
enter
adc
ds
or
aaa
andl
xchg
dec
xor
mov
mov
rcl
dec
pop
out
dec
ss
cmp
sbb
ffree
xlat
pushf
inc
mov
jns
mov
out
jp
adc
les
sbb
out
pop
and
roll
movsb
lret
inc
icebp
push
cmp
and
jl
sub
xor
lahf
push
gs
imul
sbb
fadds
test
cmp
es
xor
jp
mov
ja
jge
xchg
pushf
pop
mov
mov
movsl
mov
jg
aam
push
and
xchg
cmp
lret
inc
xor
ret
mov
shrb
add
sbb
incb
jge
jg
into
fcomps
mov
xor
or
xchg
out
xor
sbb
mov
sbb
leave
ljmp
mov
fmul
daa
push
jne
push
mov
es
adcl
inc
sub
bound
inc
je
ret
sub
sti
xor
mov
and
leave
push
push
xchg
mov
pop
mov
mov
clc
cmpl
mov
movl
mov
jmp
movl
ja
push
push
push
push
push
push
push
push
push
call
addl
and
orl
and
add
movl
jmp
mov
jns
sbb
into
lods
imul
adc
dec
movsb
loop
sarl
idivb
dec
popa
xchg
shl
xchg
jae
aas
inc
xor
jp
jmp
sbb
adc
push
mov
stos
aas
cmp
xchg
xchg
movl
mov
adc
stc
push
pop
fs
pop
leave
mov
loope
mov
jne
int3
lods
pop
and
out
sub
int3
add
notl
jmp
dec
xchg
sub
jl
mov
movsl
addb
stos
dec
repnz
mov
loop
xchg
lahf
pop
stos
test
dec
and
or
mov
pop
jne
xchg
testb
dec
push
pop
ljmp
mov
sahf
fsubrs
push
lret
lods
je
pop
aas
outsl
fs
sbb
loope
and
add
pop
push
imul
adc
mov
cli
das
adc
push
lret
stos
sti
outsl
mov
inc
push
add
sbb
shrb
jge
pop
push
in
out
in
jne
outsl
outsb
push
loope
scas
sbb
pop
test
aam
cmp
fnstenv
int3
stos
adc
arpl
fbld
lea
push
bound
jae
dec
mov
cmp
mov
sarb
ja
rclb
das
jne
rorl
int
in
lods
inc
push
add
jle
out
iret
and
pop
mov
into
ljmp
loope
rcrb
lds
xchg
sahf
dec
fcoml
mov
loop
push
sahf
add
nop
inc
xchg
push
cmc
jne
xor
sahf
insb
mov
pop
fsubs
adc
test
inc
and
mul
mov
xor
dec
mov
adc
dec
and
lcall
ror
sub
push
int3
xor
pusha
and
mov
inc
adc
leave
je
imul
fdivl
add
inc
leave
pop
rol
cwtl
out
sub
mov
mov
sbb
clc
adc
outsb
pop
iret
dec
or
and
cmp
pusha
int
movsl
push
rcr
jns
or
and
xor
xchg
jnp
adc
imul
lret
call
pop
repnz
inc
in
mov
pusha
clc
or
jae
jb
mov
lcall
xchg
push
push
into
cmpsl
push
mov
scas
into
popa
sti
mov
xor
mov
sub
insl
xchg
jle
and
pop
xchg
fcoms
push
and
fdivrl
pusha
mov
xchg
aas
test
jno
lods
mov
adcb
jno
out
sub
push
adcl
dec
clc
xor
adcl
xor
shr
adcl
shl
sbbl
or
push
lea
subl
push
lea
push
call
mov
mov
xor
xor
shr
shl
or
push
lea
push
mov
mov
shrd
shr
mov
mov
xor
xor
or
lea
push
shl
call
mov
mov
xor
xor
shr
shl
or
push
lea
push
mov
mov
shrd
shr
mov
mov
xor
xor
or
lea
push
shl
call
mov
mov
xor
xor
shl
shr
or
push
lea
push
mov
mov
shrd
shr
mov
mov
xor
xor
or
shl
mov
mov
shrd
shr
mov
mov
xor
xor
or
add
lea
push
shl
call
mov
mov
xor
shl
xor
shr
or
push
lea
push
mov
mov
shrd
shr
mov
mov
xor
shl
mov
xor
or
mov
shrd
shr
mov
mov
xor
xor
or
shl
add
mov
mov
shrd
shr
xor
mov
mov
xor
or
jmp
icebp
mov
cmp
pushf
mov
mov
ret
leave
adc
xchg
movlps
pusha
hlt
fs
sub
int3
scas
leave
ret
iret
idivl
pop
and
loop
loope
inc
hlt
das
jo
test
insb
push
adc
pop
push
mov
jmp
inc
cmp
hlt
xchg
popf
andl
sahf
and
add
lods
mov
data16
cmpsl
dec
cmpsb
ss
mov
arpl
or
in
aad
sbb
mov
into
add
ds
call
lock
enter
xor
push
stc
jmp
jb
clc
icebp
sub
push
nop
jbe
jecxz
cli
sub
sbb
adc
mov
in
push
addr16
out
test
mov
jno
xor
out
add
xor
call
loop
xlat
jno
sub
jp
es
in
ds
mov
filds
xchg
or
das
push
inc
imul
xchg
mov
push
mov
divb
xor
push
scas
adc
fcoml
xchg
ds
xor
cwtl
add
inc
xchg
shll
dec
pop
call
mov
stos
sbb
sub
mov
xlat
iret
popa
lds
sub
outsb
enter
sub
mov
jmpw
fs
mov
das
cmp
rolb
std
inc
or
outsl
push
into
int3
gs
jecxz
movsb
fists
sub
addr16
ljmp
jo
pop
enter
pushf
test
jbe
iret
jbe
and
in
mov
movsb
fsubl
lret
cmpsb
mov
aam
fdivrs
aam
adcl
ret
gs
iret
sti
fstps
mov
sub
in
cmpsb
shrl
sbb
adc
adc
jae
cmpsb
lds
dec
rorb
fnstsw
adc
push
mov
aaa
pop
pop
outsl
clc
or
adc
sub
pop
jns
mov
test
xchg
leave
adc
pop
jmp
nop
mov
mov
push
fisubs
je
jno
mov
jne
mov
fwait
cs
fs
cmpsl
stos
loop
scas
es
std
jl
add
push
into
mov
std
cltd
repnz
push
sbb
jl
sub
add
pushf
rcll
cmc
repz
inc
pop
jo
mov
inc
pop
pop
mov
shll
pusha
lahf
jmp
ljmp
push
in
adc
loop
mov
lods
jae
pop
jb
inc
fbld
out
cs
mov
lea
push
shl
call
mov
mov
xor
xor
shr
shl
or
mov
lea
push
mov
mov
shrd
shr
mov
mov
xor
xor
or
push
mov
mov
jmp
iret
xchg
stc
cmp
dec
mov
fwait
mov
adc
jb
sub
xor
mov
and
sti
push
mov
jle
jo
aad
xor
repnz
pop
pop
add
out
cmp
rcrl
xchg
push
jne
push
mov
lret
test
mov
out
jbe
arpl
scas
xchg
xchg
in
sub
xor
sbb
mov
sub
into
test
test
xchg
jge
cwtl
lret
xchg
mov
dec
dec
inc
or
push
sub
jno
test
mov
cli
push
ja
cmc
punpckhwd
mov
xchg
mov
cmpsl
int3
or
xchg
add
sub
mov
cmp
cmp
add
mov
nop
sahf
pop
int
cmp
jno
xor
inc
fcom
lahf
cmpsl
add
cmpb
std
xchg
xor
xchg
dec
push
in
push
cmp
or
pop
int3
mov
in
dec
mov
pop
mov
xlat
or
arpl
fcomip
cmpsb
cmp
xlat
cmp
and
fistps
shll
inc
sahf
das
mov
or
sarb
inc
cli
adc
or
cmpl
xchg
adc
rolb
jns
shl
scas
push
test
dec
loopne
push
xor
cld
subl
push
push
xchg
inc
fistl
pusha
mov
cmpsb
jecxz
jge
xlat
fwait
dec
cmp
xchg
leave
and
arpl
push
or
inc
adc
mov
inc
mov
mov
dec
es
int
sbb
inc
loopne
inc
ds
jg
jp
cld
faddl
lahf
mov
cmp
add
cmp
xor
imul
pop
roll
mov
dec
stos
insb
xchg
sbb
mov
mov
out
push
dec
hlt
into
ret
pop
xor
nop
into
sub
leave
jl
xchg
insb
cli
lahf
xor
push
decl
add
dec
les
add
sti
das
test
xor
or
iret
jge
mov
setnp
sti
movl
pusha
nop
imul
in
lcall
sbb
jecxz
cmc
mov
xlat
stos
cmp
daa
inc
cwtl
loope
jo
dec
push
inc
push
jmp
in
adc
inc
aad
xor
lret
cs
push
and
test
ljmp
decb
push
in
test
out
sbb
jg
ror
movsl
sub
daa
fildl
inc
cmp
repz
fistps
icebp
inc
icebp
std
mov
push
sub
xlat
push
mov
inc
mov
shl
call
jmp
imul
cltd
sbb
imul
push
push
mov
adc
loop
shrl
ss
and
in
andl
shl
pop
sub
cmp
icebp
xchg
mov
popa
sbb
loopne
cmc
in
fwait
lds
call
imul
mov
shrb
lock
lret
and
mov
ret
lahf
pop
aad
das
lock
cmp
sbb
lods
xchg
sub
xchg
push
jae
ret
xchg
in
inc
cs
test
mov
push
sti
mov
mov
test
inc
mov
hlt
iret
inc
in
cmp
mov
push
xor
in
pop
push
cli
out
xor
loope
sbb
fdivrp
rorl
add
mov
out
int
loope
imul
mov
sbb
outsl
out
scas
jae
or
pop
add
cmp
enter
repnz
data16
pop
push
cwtl
out
cmpsb
popf
sbb
orl
test
xchg
sti
sub
push
scas
jl
push
adc
push
dec
lods
stos
or
jo
fistpl
scas
push
lock
pushaw
popa
faddl
ss
jl
mov
fs
call
dec
push
inc
mov
push
xlat
inc
int3
in
push
hlt
mov
fucomp
mov
pop
pop
jo
fisubrl
mov
out
fists
sarb
aad
add
mov
in
push
cmp
pop
call
dec
sbb
add
push
pop
jno
filds
sbb
cs
cmp
inc
test
iret
xor
push
sbb
add
pop
or
xor
dec
push
stos
and
aas
xchg
rdmsr
add
out
test
dec
mov
sbb
sbb
mov
mov
or
aas
outsl
addr16
ret
mov
inc
test
xchg
inc
cmp
frstor
adc
pop
cmc
ss
nop
dec
cmpsb
cld
popf
mov
mov
test
pop
loopne
movsb
sti
jne
out
jl
mov
lahf
les
mov
mov
lret
xchg
dec
jl
and
or
in
dec
cmc
iret
pop
xchg
sbb
sbb
xor
repnz
sub
mov
imulb
and
fdivrs
jmp
and
lret
add
dec
add
or
xchg
mov
imul
pop
stos
enter
addps
rclb
sub
xor
fisubl
dec
jb
inc
adc
inc
lahf
jno
mov
push
xchg
push
mov
nop
loop
mov
sub
inc
mov
inc
adc
enter
add
adc
jmp
mov
mov
pop
pop
mov
lods
push
dec
adc
mov
adc
stc
sub
shll
inc
pop
icebp
aad
scas
pop
sub
cmp
mov
inc
cmpl
jle
gs
inc
add
push
push
dec
sbb
or
jecxz
insl
push
adc
mov
xlat
ret
and
stc
cmpsl
fistpll
lds
jp
je
popf
shrl
insb
mov
ret
imul
xchg
out
sbb
enter
sbb
xor
pop
jle
adc
nop
adc
xchg
jmp
pop
xchg
xchg
mov
cmp
insb
fldl
lods
mov
lret
dec
int3
lea
push
je
fsub
inc
inc
pop
stos
nop
push
icebp
pushf
cmpsl
pop
ret
out
bound
fwait
fwait
mov
rcll
pop
or
cmp
pop
inc
jb
inc
popf
inc
push
cmp
js,pn
pushf
push
mov
xchg
pop
enter
push
lret
pop
cs
in
jno
xchg
inc
sbb
mov
xchg
xor
pop
xor
in
lahf
cmovne
mov
into
scas
popf
movsl
call
mov
aad
cs
test
lret
int
adc
push
adc
mov
jl
sub
int
pop
lods
in
xchg
mov
dec
and
mov
je
or
inc
push
stos
push
out
inc
mov
out
fdiv
adc
push
andl
adc
mov
out
lret
clc
or
jnp
sbbb
stos
add
popa
std
lret
sub
cmp
arpl
mov
bnd
ret
mov
pop
dec
or
or
jg
inc
push
jb
sub
mov
iret
andl
mov
orl
or
fwait
gs
mov
adc
jl
push
fwait
jno
leave
fldenv
je
popa
inc
cmp
movsl
icebp
mov
cmpsb
or
out
xor
dec
aad
in
jmp
push
loop
pop
xor
in
xchg
mov
fldt
push
popa
jb
dec
pop
mov
dec
inc
mov
mov
in
sti
push
push
fwait
test
rorl
insb
insb
push
sub
dec
mov
xor
cmpb
or
sub
fsubr
mov
popf
add
lds
subl
mov
gs
mov
push
sbb
cmp
mov
js
dec
lret
pop
outsb
lcall
jg
ret
jo
and
sbb
outsb
sbb
stos
les
shll
jmp
into
jge
fxtract
call
lods
in
push
xchg
repz
ret
push
pushl
shl
call
mov
mov
mov
mov
mov
mov
rol
mov
xor
cmp
je
mov
mov
xor
test
je
mov
mov
jmp
cwtl
push
cwtl
sbb
mov
insb
sbb
adc
push
sarb
rorb
notb
cmpb
cmpsl
pop
jae
mov
cld
add
cmpsb
es
jae
push
adc
dec
int
jb
ret
jnp
xchg
jbe
jmp
mov
dec
adc
mov
adc
jl
and
lods
cli
gs
out
cmpsl
push
shl
add
in
cmpsb
push
enter
xor
stc
mov
fwait
jle
push
sbb
addr16
subl
in
subb
cmpsb
mov
mov
lods
jns
xchg
and
sub
sub
mov
cmp
sbb
mov
test
xchg
mov
lods
jp
cld
inc
iret
sti
xor
movsb
or
push
add
fwait
jl
add
in
mov
notb
add
dec
fmuls
mov
inc
fucomi
cmpps
jb
loope
jbe
cwtl
xor
inc
and
mov
sahf
test
xchg
ss
std
mov
int
jp
mov
lods
mov
jbe
mov
mov
inc
fdiv
dec
and
ret
stos
fwait
dec
orb
test
in
divps
dec
adc
or
aaa
ljmp
mov
xlat
xchg
pop
shll
cs
mov
mov
outsb
dec
push
test
inc
filds
sbb
orb
xchg
xor
xlat
pop
les
out
add
fistpll
or
jp
xchg
stos
sbb
adc
push
add
inc
leave
shrl
lods
in
out
mov
push
enter
jmp
mov
je
mov
pop
adc
fcompl
xor
imul
jns
loopne
fidivrl
or
arpl
scas
jmp
mov
aad
mov
roll
in
std
jno
stos
aam
jge
dec
pop
sti
pinsrw
loopne
testl
pop
mov
pop
xchg
outsb
xlat
insl
cmpsl
push
or
adc
notb
add
movsb
out
adc
push
rolb
mov
xorb
mov
aaa
adc
sahf
fmul
sahf
mov
pop
pop
xchg
inc
mov
addl
and
ret
es
mov
mov
pop
and
mov
orb
xchg
jnp
test
mov
fwait
mov
cltd
jns
push
xchg
int
test
mov
push
movzbl
sub
mov
rorb
mov
mov
inc
cmp
jb
dec
jne
mov
mov
shrd
shr
mov
mov
xor
xor
or
push
add
push
lea
push
shl
call
mov
mov
shrd
shr
mov
mov
xor
xor
or
add
push
push
mov
shl
mov
shrd
shr
mov
mov
xor
xor
or
add
push
shl
call
push
lea
push
mov
mov
shrd
shr
mov
mov
xor
xor
or
add
push
shl
call
mov
mov
shrd
shr
mov
mov
pop
xor
xor
pop
shl
jmp
jno
cmp
cmp
jno
xchg
xlat
test
int
add
xchg
movlps
call
sbb
xor
cmp
sbb
push
xchg
andb
fwait
mov
mov
add
push
add
clc
xor
repnz
mov
cli
pop
adc
cmp
push
xchg
dec
stos
mov
dec
pop
jmp
movsl
rcrl
fimull
hlt
cmp
dec
jae
out
iret
aad
rorl
inc
cs
push
and
and
test
mov
or
push
push
jge
mov
int3
mov
cmp
and
jle
cmp
mov
jno
xchg
push
add
lret
sub
cmp
icebp
ret
insb
mov
jg
ret
inc
pop
lea
mov
mov
shrl
or
fs
in
popf
aad
xor
daa
fs
aaa
cmpsb
out
or
stos
push
clc
mov
cvtdq2ps
inc
int3
ljmp
decb
in
shrl
add
push
loopne
pop
mov
dec
push
das
das
mov
xchg
inc
stos
adc
sub
ret
lds
cli
inc
shrl
mov
pop
lahf
inc
mov
inc
xor
cs
lcall
inc
adc
adc
cmc
dec
test
xlat
lret
sbbl
mov
adc
fnstcw
dec
mul
addl
push
enter
dec
cli
gs
dec
test
aam
scas
int3
and
dec
push
lock
mov
stos
mov
xchg
xor
mov
clc
xlat
cmp
xchg
mov
mov
mov
or
xchg
add
xchg
push
mov
js
test
inc
push
test
mov
cmp
js
mov
mov
adc
dec
icebp
dec
lcall
jg
int
sub
icebp
mov
cli
xchg
mov
int
enter
xchg
lds
pop
test
fwait
in
test
jge
in
push
nop
cmp
pushw
dec
mov
cmp
xchg
popa
aas
clc
mov
out
lea
adcb
into
sub
xchg
scas
xchg
out
loop
or
cli
mov
fdivrp
imul
mov
and
fcompl
pushf
xchg
xor
mull
jl
add
pop
aam
dec
shl
xor
xchg
loope
mov
lock
xlat
mov
arpl
pop
int3
pop
fcmovu
jp
jne
negb
test
jp
and
fidivl
cwtl
mov
or
dec
outsb
push
xor
mov
sahf
or
pop
leave
ret
mov
and
mov
or
mov
jne
sbb
mov
sbbl
mul
ret
subl
push
cmpl
mov
mov
movl
mov
jmp
movl
jne
push
pushl
pushl
call
adc
not
movzbl
xor
mov
movzwl
adc
or
mul
mov
mov
mull
add
mov
mul
add
pop
ret
push
mov
sub
push
jmp
adc
fscale
fyl2xp1
lock
popf
sbb
mov
inc
sti
call
das
inc
mov
pushf
insb
dec
pushf
loopne
into
and
aaa
push
jecxz
subl
pop
ret
mov
aad
movsl
mov
in
jne
ja
cmp
push
xor
xchg
out
inc
inc
xchg
movsb
push
into
lock
mov
aam
adc
cmp
jecxz
xor
std
cli
or
pop
icebp
mov
jl
and
aam
nop
into
out
lahf
pop
arpl
mov
push
loop
xchg
push
fildll
icebp
pop
popf
movl
in
leave
aam
mov
xor
bound
xchg
push
test
shrd
decl
lods
mov
dec
mov
pop
inc
xchg
mov
adc
xorl
repz
les
ret
outsl
int
or
pop
push
popa
mov
xchg
jmp
ds
call
push
in
rorb
scas
adc
pop
js
enter
lcall
loop
inc
ret
imul
jmp
mov
pop
mov
cmp
repnz
xor
push
nop
loopne
xchg
adc
jo
cltd
ja
fs
adc
iret
test
test
out
out
and
sahf
out
bound
lret
in
cwtl
mov
mov
clc
or
ljmp
mov
test
mov
dec
mov
scas
dec
rclb
and
hlt
rcll
mov
xchg
scas
sbb
xor
lldt
fisubrl
pushf
xor
sbb
stc
pop
push
insb
aaa
fisubrs
test
shlb
imul
mov
mov
mov
cmp
out
push
jecxz
aaa
xor
adcb
xchg
sub
push
in
cmp
push
xchg
push
clc
sarb
mov
negl
push
stos
aad
or
push
gs
mulb
push
sbbb
mov
out
xchg
mov
insl
mov
pop
rclb
inc
and
aaa
cmpsb
fcoms
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
xor
div
mov
xor
mov
push
div
mov
xor
xor
sub
mov
lea
mov
jmp
pop
mov
push
sbb
loope
push
divb
mov
lods
loop
pop
shl
jecxz
sub
jbe
jl
outsb
dec
mov
imull
mov
pop
adc
add
jno
dec
jmp
out
movsb
mov
mov
ret
pop
mov
or
test
push
cmp
arpl
shrb
fs
aaa
in
ret
fmul
pop
sub
mov
in
iret
mov
jge
jge
jg
cmc
inc
sbb
or
mov
inc
add
mov
in
std
mov
mov
test
pop
dec
cli
aad
icebp
sti
stos
dec
push
xor
rorl
rolb
test
or
filds
in
mov
lret
aaa
push
sub
popf
xorb
lea
cmc
or
add
adc
xchg
pop
fsubrl
inc
inc
xor
inc
fwait
sbb
jno
jmp
icebp
dec
mov
fcomp
jo
mov
push
loopne
int
test
pop
test
aaa
add
xchg
enter
subl
push
sahf
adc
or
mov
mov
cld
pop
push
push
sub
xor
mov
pop
imulb
xor
dec
push
ret
cmp
gs
arpl
aam
and
xlat
mov
cwtl
cmpsl
add
outsb
inc
in
ficoml
sbb
xlat
xchg
cmp
xor
adc
mov
mov
sbb
mov
mov
jmp
mov
dec
sbbb
xlat
icebp
mov
out
xor
xor
lock
mov
cmp
ljmp
aas
lcall
sub
sahf
ss
mov
imul
dec
dec
dec
inc
lds
lret
in
sti
sbb
lret
dec
adc
test
sbb
cltd
push
inc
xchg
lcall
es
mov
xchg
mov
test
pop
adc
push
sub
mov
mov
loopne
pop
mov
lock
lahf
fidivrl
add
xchg
inc
addr16
mov
loop
les
clc
sub
xor
mov
xor
or
xor
mov
sub
mov
mov
xor
mov
sub
div
mov
pop
xor
jmp
and
popa
and
clc
inc
jbe
mov
cmp
pop
fwait
adc
mov
enter
or
sub
lret
gs
sbb
jl
pop
sub
inc
icebp
out
dec
pop
ret
jb
dec
xchg
mov
xchg
sub
xchg
mov
leave
fsubr
jmp
je
fwait
hlt
jbe
iret
mov
popa
repnz
lahf
lret
mov
loopne
inc
push
orb
out
incb
sbb
pop
mov
bnd
js
in
push
cmpsb
inc
xor
outsl
mull
pop
out
dec
sub
andl
imul
inc
lret
mov
pop
or
test
mov
lcall
pop
shr
mov
sbb
xchg
or
sub
enter
in
int
lods
shll
mov
xchg
add
and
fisubrl
cmp
jge
adc
lods
pop
stos
in
xor
mov
std
add
lahf
shrb
jbe
mov
push
out
mov
repz
sbb
je
jo
mov
out
pop
pop
in
cmp
addr16
sbbl
ret
ret
lock
adc
xor
dec
pop
jo
mov
push
cmp
xchg
stos
mov
pop
mov
lds
ljmp
mov
xchg
mov
jo
sub
lods
outsl
shr
les
scas
roll
lcall
fcmovnb
jge
mov
lods
mov
shr
idivl
xchg
cmpl
push
and
and
lahf
and
and
jl
sub
in
adc
rcl
test
cmc
pop
outsl
mov
dec
pop
dec
outsl
fucom
jp
stos
hlt
test
xchg
inc
outsb
sarl
mov
popf
popf
mov
sub
ret
subl
ret
adc
jae
lea
pop
int
jmp
dec
cmp
cmc
leave
xchg
addb
incl
stc
sub
insl
sub
cmpsb
cli
out
psubsb
push
ret
in
adc
sarb
fimull
xchg
add
jmp
mov
movl
movl
movl
movl
mov
mov
mov
sub
imul
xor
jmp
lret
push
out
sub
rorb
js
cltd
adc
mov
wrmsr
loope
insl
xor
lds
out
lods
cmpb
pop
les
sahf
pop
xor
loope
test
or
mov
out
loop
bnd
mov
cmp
adc
jmp
fcmovnu
cmp
cmc
or
mov
jg
dec
push
mov
mov
pop
int3
xor
jno
mov
mov
push
mov
sahf
in
in
jb
jp
shll
lret
aaa
fs
movsl
xchg
std
ljmp
stc
jns
mov
testb
jmp
sti
sub
ss
stc
push
ret
xor
xlat
mov
mov
loope
add
bound
sbb
mov
mov
mov
push
dec
and
lret
push
push
push
adc
cmp
mov
mov
stos
test
xor
ret
negl
cmp
lahf
hlt
pop
jnp
movsb
push
fs
sbb
jge
lret
and
out
cld
insl
sub
dec
mov
scas
fdivrs
pushf
jmp
jo
mov
mov
jecxz
sbb
imul
testb
cltd
adc
xchg
loope
or
xchg
rorb
mov
push
lcall
insb
jecxz
aad
xchg
fndisi(8087
fisttpll
push
add
fcoml
mov
repnz
mov
aas
mov
cwtl
js
push
cmp
dec
loopne
jle
divb
out
fadds
aaa
adc
sub
int
xor
jle
push
or
iret
cli
push
orl
imul
cmp
out
outsb
cmp
and
pop
test
adc
ret
pop
push
cmp
mov
call
or
ja
add
mov
imul
jmp
dec
inc
mov
lret
outsl
adc
movsl
addr16
test
rorb
repnz
xor
add
outsl
mov
inc
test
fidivl
sbb
add
inc
testl
out
xchg
fbld
lods
sti
xor
div
mov
mov
push
and
mov
sub
sub
mov
mov
mov
xor
mov
xor
and
add
add
mov
mov
add
mov
xor
mov
xor
mov
sub
mov
add
mov
sub
xor
mov
xor
or
xor
mov
sub
mov
mov
mov
xor
xor
sub
div
pop
xor
sub
cmp
jbe
pop
pop
pop
leave
ret
push
mov
and
sub
push
push
push
push
push
call
mov
movzwl
push
call
test
jne
xor
movl
jmp
mov
mov
and
mov
mov
push
cmpl
movl
movl
jmp
mov
movl
ja
pushl
call
addl
subl
subl
orl
pop
mov
mov
mov
mov
mov
andl
movzwl
subl
or
andl
cltd
adcl
movzwl
sbbl
idiv
xor
movzwl
adcl
or
and
mov
and
mov
cmpl
mov
mov
jmp
movl
movl
jne
pushl
push
call
orl
sbb
sbb
xor
add
and
mov
mov
mov
subl
mov
mov
andl
sub
andl
mov
movl
xor
add
mov
sub
movl
mov
movl
cmp
movl
jb
cmpl
movl
mov
mov
mov
jmp
movl
jbe
push
push
call
adc
movzbl
add
mov
adcl
and
add
subl
movl
movl
adc
movl
add
jmp
loope
jnp
cmp
pop
popf
push
xor
stos
pop
fdivrl
jle
xchg
adc
pop
adc
adc
js
cmpsb
cmp
mov
test
movsl
xor
pop
aam
or
cli
lods
call
outsb
lret
xchg
leave
dec
icebp
sbb
pop
gs
enter
js
cli
ficomps
mov
sbb
popl
fmull
push
or
mov
rorl
or
dec
fs
xchg
adc
inc
rolb
cltd
loope
cld
aad
int3
pushf
adc
out
movl
cmp
cltd
mov
pop
xor
movsb
aam
insb
mov
movsl
pop
jno
shrb
mulb
pop
insl
pop
inc
loope
nop
nop
xor
pop
lods
mov
roll
sub
fldl
rcr
insb
mov
mov
pop
fsubl
cmpsb
lea
popa
repz
sti
cmp
aaa
int
jbe
ret
jnp
adc
mov
inc
jae
mov
dec
rol
fwait
int3
mov
and
adc
dec
inc
or
bound
mov
cmp
inc
xlat
jecxz
sbb
movsb
imulb
mov
xchg
and
lret
int
inc
mov
daa
sub
inc
test
pop
in
mov
push
clc
mov
ficomps
data16
cwtl
fildl
mov
stos
jns
mov
pop
in
jl
cmpsb
push
adc
push
sti
loop
jg
inc
cmp
mov
testl
pop
scas
es
jns
or
nop
rcll
pushf
aam
das
add
pop
dec
sub
pop
adc
pop
inc
push
lods
lods
inc
adc
enter
dec
repnz
shlb
mov
lret
xor
mov
call
cmp
mov
dec
adc
mov
fxam
dec
jmp
mov
lock
add
cs
fdivs
gs
inc
in
push
lahf
sarl
sti
fbstp
bound
data16
in
xchg
test
xchg
pop
jecxz
leave
cltd
jns
xor
pop
hlt
and
ss
cmc
imull
pop
test
popa
and
jo
movsl
cmp
push
push
dec
and
mov
dec
inc
push
mov
adc
xor
or
aam
imul
add
cmc
pop
push
aam
xchg
mov
push
push
cwtl
imul
in
test
xor
fmuls
pop
rcr
fsubl
rep
or
scas
add
adc
cltd
jle
xor
mov
and
xchg
shll
pop
cs
and
pop
cmpsb
adc
add
xchg
cs
rorb
xor
lahf
clc
aam
adc
sbb
imul
arpl
mov
cmc
sahf
stos
stos
sarb
pop
inc
dec
test
out
mov
jmp
aad
bound
cld
into
mov
aad
lock
xlat
gs
into
popf
dec
in
sub
mov
in
pop
adc
mov
add
mov
xchg
divb
in
out
dec
push
ficomps
pop
daa
dec
clc
pop
mov
std
mov
jo
or
mov
cmp
and
mulb
jmp
je
aad
jae
movl
mov
xor
mov
mov
sub
add
add
mov
xor
incl
div
mov
add
adcl
and
subl
pushl
xorl
pushl
call
movl
cmpl
movl
mov
jmp
mov
mov
jl
push
push
pushl
push
pushl
call
neg
sbb
addl
sbb
addl
sub
adc
movl
sbbl
movl
orl
mov
mov
and
or
adc
mov
and
xor
andl
pushl
adcl
pushl
call
or
pushl
movl
movl
movl
cmpl
mov
notl
jmp
mov
ja
push
pushl
pushl
pushl
push
pushl
pushl
push
call
or
and
xor
add
movl
adcl
movl
sbb
movl
movl
add
movl
xor
mov
cmpl
mov
mov
mov
jmp
movl
not
jbe
push
pushl
push
call
movl
movzwl
or
mov
mov
add
xor
and
andl
adc
mov
sub
mov
or
addl
and
mov
xorl
sub
pushl
mov
mov
incl
add
andl
and
mov
adc
jmp
pop
push
shlb
lcall
jle
jmp
insb
in
adc
pop
adc
adc
int
daa
ret
pop
popa
pop
and
add
jo
imul
sub
cmp
push
or
and
scas
pop
mov
pop
jno
sub
push
xor
rcll
or
lea
rorl
adc
icebp
cmpsb
in
dec
sub
test
sub
pop
ds
mov
imul
add
addr16
leave
stos
pop
stos
repz
fidivrl
dec
cld
mov
in
mov
and
lds
in
push
cmpb
sub
cmp
jmp
xor
cmp
mov
es
jmpw
call
push
mov
push
or
or
cmpl
std
lea
mov
jbe
jae
cwtl
dec
pop
adcl
xchg
cltd
cld
lock
push
int
cltd
mov
sub
jns
push
push
idivb
in
ror
ror
sub
pushf
adc
cmp
xor
push
dec
dec
in
les
into
clc
stc
fldenv
repnz
add
lds
jne
ljmp
fnclex
aam
aaa
shrb
js
cmp
sbb
aad
pop
into
mov
out
dec
xchg
mov
jb
lahf
dec
push
cmc
cmp
dec
cltd
cmp
aaa
xchg
inc
jle
ja
push
icebp
mov
mov
je
iret
push
cmp
pop
sub
arpl
cmp
in
cwtl
adc
pop
inc
pop
ds
jge
cmp
push
ss
push
jmp
xor
in
mov
enter
adc
lret
xchg
jle
or
sbb
cwtl
in
jne
fdivl
ret
mov
push
out
add
rol
pop
jae
mov
rcrl
aas
sahf
inc
hlt
and
jae
dec
call
idivl
xchg
fwait
loopne
adc
add
cld
xchg
adc
rcrl
pop
out
loopne
mov
xor
lahf
insb
add
in
ret
je
mov
test
rcrl
test
dec
add
xor
fwait
xor
pop
inc
adc
cmp
mov
sarb
adc
cmp
pop
ljmp
imulb
cmp
pop
sub
xchg
addr16
push
pop
push
mov
das
lret
popa
enter
or
sub
popf
js
es
dec
fiadds
pop
add
cmp
mov
mov
adc
andl
lods
ret
mov
or
or
cmpsb
dec
xchg
sbb
pop
mov
in
jae
jae
adc
inc
adc
xlat
dec
sub
bound
mov
xchg
adc
inc
int3
pop
sub
mov
mov
je
pop
addr16
nop
stc
xchg
movsl
rolb
daa
neg
scas
mov
inc
mov
mov
cld
mov
lcall
sahf
outsb
sbb
lret
pop
mov
mov
mov
cmp
xchg
clc
xchg
xlat
xor
out
fsubl
add
inc
jbe
push
shlb
mov
arpl
mov
sub
mov
orl
xor
adcl
and
pushl
mov
movzbl
and
mov
imul
sbbl
xor
subl
or
andl
mov
sub
pushl
call
andl
dec
movl
jne
sbb
movl
mov
subl
mov
movl
sbbl
mov
call
inc
lea
cmpl
mov
mov
jmp
mov
jbe
push
pushl
call
movzbl
add
dec
dec
sbb
sbb
mov
xor
xor
sub
add
mov
adcl
lea
mov
xor
mov
mov
cmpl
mov
mov
mov
not
jmp
movl
movl
jle
push
push
pushl
pushl
call
adc
sbb
and
or
and
sbb
adc
xor
mov
adc
mov
cmpl
mov
mov
movl
jmp
mov
jbe
pushl
push
call
mov
adc
and
or
orl
sbb
dec
xor
xor
movzwl
xor
shl
adcl
shr
or
movzbl
and
mov
xor
mov
cmpl
mov
movl
mov
movl
jmp
not
mov
jne
push
call
and
movzbl
adc
sub
movzbl
sub
movl
and
sub
mov
xor
mov
and
mov
xor
mov
mov
xor
xor
sub
or
mov
shrd
shr
inc
mov
and
mov
cmpl
mov
mov
movzwl
jmp
movl
mov
ja
push
push
pushl
push
pushl
push
call
sbb
add
mov
xor
mov
not
and
inc
mov
xor
xorl
xor
or
or
mov
adcl
push
sbbl
pushl
incl
lea
andl
push
andl
shl
orl
call
lea
sbbl
push
adcl
mov
orl
mov
xorl
lea
orl
push
mov
lea
mov
adcl
mov
adcl
mov
push
call
push
push
addl
pushl
xorl
jmp
nop
fwait
inc
stos
pop
sbb
dec
sti
adc
aaa
cmp
sub
adc
adc
lret
test
adc
xor
fwait
pushl
daa
in
push
mov
adc
mov
mov
bound
cmp
mov
scas
fldcw
mov
xor
xor
mov
scas
pushw
jae
outsl
xchg
inc
inc
test
dec
roll
push
nop
into
pop
leave
mov
repnz
lods
or
les
or
and
sub
ret
popf
outsl
mov
inc
add
mov
clc
inc
xor
out
jbe
inc
inc
andb
sti
addr16
out
mov
popa
pop
lret
idivb
mov
andb
or
push
jae
int3
mov
jmp
cltd
cmp
inc
lods
mov
adc
and
notl
aas
lret
in
sub
lods
scas
pop
testb
jbe
push
push
inc
sbb
popf
mov
int3
push
inc
sahf
inc
jecxz
jae
popa
mov
loopne
jmp
dec
mov
stos
ss
test
je
out
pop
mov
clc
call
xchg
mov
test
hlt
add
jmp
xchg
js
imul
mov
mov
sub
outsl
adc
movsb
cwtl
push
add
mov
jecxz
sub
pop
cmp
mov
sahf
adc
outsb
iret
add
pop
mov
leave
mov
jmp
jle
les
stos
mov
ss
push
mov
lods
daa
xchg
in
fmull
out
jmp
push
xchg
pop
and
repnz
loope
jl
jmp
pop
xor
ret
gs
popf
ljmp
sbb
pop
inc
mov
popf
inc
and
dec
sub
push
iret
dec
push
nop
mov
mov
dec
lods
cmp
adc
in
mov
sub
and
mov
rcrb
fstpl
mov
inc
mov
out
inc
pop
sbb
inc
andl
orb
xor
addr16
add
cli
pcmpeqb
adc
mov
mov
add
lahf
dec
mull
insb
rcrb
hlt
stc
cmp
jp
mov
imul
cmpsb
decb
inc
scas
jl
push
xchg
pop
xchg
imul
and
fisubrl
jne
push
adc
pop
xor
in
out
or
test
dec
int3
bound
cmpb
test
xor
cmc
fwait
mov
ret
add
jnp
rclb
cmp
mov
mov
in
lcall
xchg
inc
mov
mov
ret
ret
outsl
xchg
aam
xchg
leave
bound
adc
pusha
pop
loopne
pop
add
das
mov
lret
test
mov
movsl
push
or
aas
pop
xchg
dec
loope
xchg
inc
inc
add
and
adc
xchg
dec
pusha
jne
mov
dec
or
push
outsl
ret
push
inc
call
mov
cmpl
mov
mov
jmp
mov
jge
push
call
mov
add
add
add
xor
adc
xor
movzwl
and
sbb
mov
mov
cmpl
mov
mov
mov
jmp
movl
jne
pushl
push
push
call
or
mov
add
sub
sbb
subl
mov
adc
shr
adcl
shl
or
adcl
mov
xorl
xor
cmpl
movl
movl
mov
jmp
mov
mov
jb
pushl
pushl
call
not
mov
or
or
add
adc
mov
cmpl
mov
mov
mov
jmp
movl
jbe
pushl
call
xor
inc
add
adc
sbb
sub
sub
cmpl
movl
mov
jmp
mov
movl
jge
pushl
push
push
pushl
call
or
mov
mov
sub
add
orl
neg
movl
incl
xor
lea
mov
adc
mov
lea
mov
mov
or
mov
adc
mov
sub
sub
andl
lea
xor
subl
movl
cmpl
mov
movl
movl
jmp
movl
jle
push
push
pushl
call
sbb
addl
xor
mov
sbb
adc
adc
subl
movl
movl
movl
cmpl
mov
movl
mov
jmp
mov
mov
jl
push
call
and
movl
xor
or
xor
add
sub
add
adc
mov
mov
or
and
mov
mov
mov
mov
add
adc
xor
xor
and
mov
and
mov
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
push
push
or
or
push
push
call
mov
jmp
aaa
mov
add
aaa
dec
faddl
push
adcl
adc
pop
sbb
icebp
xchg
lds
cmp
mov
testb
pop
adc
push
aad
or
sbb
push
mov
popa
add
test
mov
adc
icebp
sbb
jo
ja
inc
test
call
mov
mov
inc
or
das
sub
out
int3
or
clc
sahf
add
data16
sub
or
mov
and
add
jl
test
ljmp
cmp
sbb
sbb
test
pmovmskb
jns
js
repnz
pop
ret
mov
dec
js
add
mov
pushf
inc
pop
sti
mov
cmp
mov
xlat
shlb
jmp
jbe
mov
test
test
xchg
pop
mull
out
cmpsl
insl
add
std
jp
sub
outsb
adc
hlt
jmp
outsb
popf
dec
ljmp
jmp
dec
push
icebp
rdmsr
or
xchg
jmp
in
scas
add
incl
out
je
sub
movsl
push
sahf
popf
in
lock
xchg
xchg
scas
jle
mov
and
xchg
aam
stos
push
arpl
cmp
dec
int3
ds
insl
gs
fnstenv
inc
movsb
insl
js
pop
insl
push
xchg
icebp
mov
mov
dec
subb
or
outsl
in
xor
or
xchg
out
imul
sbbb
test
lock
xchg
popa
popa
ds
movsl
lds
test
adc
mov
faddl
je
daa
adc
inc
or
shll
arpl
mov
jg
fstp
call
pusha
and
push
mov
jno
pop
divl
or
sbb
inc
adc
leave
mov
out
gs
rcrb
xchg
nop
jle
addr16
jp
fsubrp
je
lds
inc
jmp
dec
mov
lea
cmp
mov
push
mov
dec
and
sub
push
push
jecxz
sbb
out
outsl
pop
pop
arpl
xchg
inc
loopne
jne,pt
or
sbb
rorl
jge
cli
mov
repnz
pop
fsubs
cld
mov
scas
ljmp
jmp
rol
jno
sub
negb
out
loopne
call
sub
mov
aam
adc
loopne
mov
in
cwtl
cltd
in
push
mov
mov
mov
and
cs
dec
hlt
xor
cltd
cmp
test
add
movsb
pop
pop
xchg
adc
ljmp
push
sub
pop
or
xor
lret
adc
int
test
push
les
cltd
iret
cmpsl
xor
ret
gs
adc
jg
in
mov
xchg
and
rorb
nop
enter
or
mov
jmp
push
and
jge
ffreep
rcrl
sub
fsub
or
lock
dec
adc
xchg
ret
jl
push
sub
mov
sbb
mov
cmp
jne
cmp
jmp
mov
and
fwait
iret
test
dec
mov
pop
adc
adc
std
push
call
mov
and
std
sbb
outsl
cmp
in
dec
mov
sub
push
add
jg
stos
push
inc
cmpb
jns
mov
je
add
mov
lods
jns
in
pop
lock
out
cmp
popa
jb
pusha
add
sub
test
cmp
sbb
cmpsb
cwtl
mov
adc
push
shr
fcmovne
xchg
or
pop
aam
stos
dec
hlt
aaa
loop
inc
mov
jmp
adc
cmp
fstps
push
sbb
mov
int3
inc
or
dec
sub
int3
fisubrl
mov
sbb
fstpt
xchg
push
in
push
cmp
xorl
sbb
push
xchg
cmpsl
loopne
pop
or
fcompl
adc
pop
sbb
push
sahf
stos
call
shrb
xor
ss
in
sub
je
arpl
push
fs
and
pop
mov
pop
sub
addr16
movsb
jno
iret
out
or
int3
lcall
in
add
test
or
movsb
notb
xchg
mov
insl
sub
jne
jge
pop
or
mov
insb
mov
sub
add
cmovo
adc
clc
idivb
js
pop
mov
pushl
sbb
jl
push
or
enter
js
iret
pop
outsl
and
repnz
sbb
lret
in
shll
xchg
test
aad
jmp
inc
ret
cmp
sub
xchg
mov
adc
clc
and
xchg
mov
jo
das
add
andb
mov
push
cmp
lahf
push
sahf
or
lret
push
nop
jecxz
and
sar
outsl
ljmp
inc
pop
add
push
cs
mov
or
dec
jp
dec
inc
ljmp
testl
mov
dec
ss
or
fcomip
xor
idiv
cld
push
cmpsb
ds
stos
scas
and
xchg
sar
jae
or
dec
shrb
xor
inc
cld
mov
push
and
fisttpll
mov
ds
adc
das
mov
adc
mov
test
fcmovnu
aad
jg
cmp
jmp
mov
mov
jl
lcall
ret
js
lods
sbb
mov
aam
ss
in
sub
cs
mov
mul
lea
or
mov
mov
xchg
cmpl
rcrl
loop
sbb
mov
sbb
out
call
inc
pushf
cmp
mov
iret
sahf
mov
mov
mov
pop
sarb
inc
jb
push
pop
mov
xorb
mov
mov
stos
and
shrb
loop
jp
clc
dec
sbb
mov
js
mov
icebp
sbb
loope
jmp
cmp
cld
sub
mov
sbb
je
jnp
mov
sbb
fldt
pop
pusha
pop
loop
mov
test
dec
jns
ret
je
movl
movl
movl
movl
mov
mov
mov
mov
add
adc
xor
xor
and
mov
and
mov
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
push
push
xor
xor
push
push
call
mov
mov
push
push
push
push
call
mov
mov
push
push
push
push
call
mov
mov
add
mov
adc
mov
cmp
jne
jmp
sbb
je
sub
cmp
mov
in
jle
outsl
adc
pop
adc
adc
aad
sti
sbb
lds
cld
lret
adc
jp
sbb
jbe
fcmovb
pop
push
jg
loopne
push
arpl
sub
pop
xchg
in
mov
fstl
enter
pop
mov
dec
or
add
and
inc
imul
fdivs
push
cmpsb
sub
pop
clc
push
push
mov
sub
jl
jmp
cmpsb
in
xorl
fstpl
adc
and
mov
sub
mov
lea
int3
dec
pushw
push
fs
sbb
add
cmpsl
in
data16
cmp
imul
push
lea
and
mov
je
mov
jo
push
jns
shrb
ficoms
xchg
bound
mov
xchg
or
and
jle
pop
mov
loopne
cmc
push
scas
cmp
mov
std
cltd
sbb
push
cli
xor
mov
pop
int
inc
js
adc
or
dec
sbb
mov
cld
movsb
popf
lds
mov
daa
sahf
test
cld
jbe
aad
cmp
jns
pop
xchg
iret
mov
xor
lret
dec
leave
mov
rolb
pop
sarb
add
pop
push
dec
xchg
xor
jb
push
push
mov
aad
inc
sahf
xor
mov
int3
outsb
pop
jne
loop
mov
push
stos
jo
fldt
bndldx
movsb
cltd
cmc
jne
cltd
rcrb
call
bound
cmp
or
loop
pushf
aam
jb
cmpsl
sbb
shll
add
jno
in
mov
les
lods
mov
and
cmp
lcall
sbb
inc
mov
xchg
and
jbe
pop
xchg
xor
mov
and
mov
shlb
loope
dec
add
cmp
inc
adc
dec
mov
pop
call
test
cltd
mov
pop
mov
stc
mov
mov
cmpl
dec
movsl
cmp
mov
cmpsb
cli
sahf
mov
pop
jo
icebp
lcall
test
stos
inc
dec
insb
negb
mov
mov
sti
pop
stc
cmp
out
push
jae
xchg
jg
loop
push
xor
in
popa
adc
jge
sahf
psrlw
pop
xchg
pop
adcb
scas
jnp
or
les
cmp
pop
fs
xor
adc
pusha
and
arpl
sahf
rol
push
push
mov
dec
add
movsb
push
jne
fdivrs
mov
lods
ja
xchg
aaa
cli
sti
pop
int3
inc
and
cmp
add
push
lret
push
add
addr16
push
loopne
dec
sub
xchg
inc
dec
push
mov
fld
adc
andl
mov
fmul
adc
loope
or
inc
or
mov
xor
pop
or
mov
sahf
sub
mov
sub
cmp
orb
popa
jno
adc
and
add
mov
xchg
jo
ljmp
ja
sbb
addr16
jmp
movsb
sbb
push
sti
mov
fcmovu
cmp
je
mov
mov
mov
xor
xor
xor
shld
shl
cmp
jne
cmp
je
mov
cmp
je
mov
mov
mov
mov
xor
xor
shrd
mov
shr
shl
or
mov
xor
or
cltd
cmp
jne
cmp
jne
movl
movl
mov
mov
mov
mov
xor
xor
xor
shld
shl
cmp
jne
cmp
jne
movl
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
mov
mov
cmp
jne
mov
mov
mov
mov
mov
mov
movzwl
mov
and
mov
or
mov
add
or
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
or
mov
jmp
adc
or
addb
dec
insl
adc
pop
adc
adc
pop
loopne
enter
cmp
sbb
cld
ljmp
jae
sub
adc
jne
sbb
sub
sbb
pop
out
cmp
push
push
popf
into
mov
test
sub
dec
mov
cmp
lods
fmul
cmpl
inc
rcr
js
mov
jnp
push
popf
test
int3
mov
jl
or
insl
dec
and
mov
sbb
lods
outsb
xchg
hlt
jbe
sub
inc
dec
test
mov
jbe
pop
jnp
push
xlat
repz
ja
or
adc
int3
dec
push
and
add
std
xor
dec
into
inc
les
xchg
cvtps2pi
add
addb
loop
out
or
mov
fs
sbb
adc
outsb
adc
es
jecxz
repz
loope
push
jns
clc
cmp
iret
cli
cmp
xor
test
pop
decb
nop
xorl
je
insb
sbb
cmpsb
lahf
out
mov
mov
rorb
repz
dec
inc
ds
in
mov
fisttpll
mov
cltd
in
inc
dec
rclb
xchg
push
pop
xchg
test
mov
or
imul
in
xchg
or
lods
push
mov
sub
sub
andb
cmp
cmpl
lds
mov
insb
mov
call
push
xchg
dec
sbb
in
test
jbe
andb
loop
in
push
mov
or
mov
mov
int3
adc
push
into
test
std
inc
dec
cwtl
pop
and
mov
or
xchg
inc
mov
in
int3
movsb
fdivl
mov
lds
pop
push
mov
adc
inc
sub
adc
fcmovnu
mov
cmp
es
or
jb
sub
out
xor
mov
add
and
outsl
mov
dec
test
lods
inc
dec
xor
push
sub
dec
cmp
xor
sbb
inc
and
jae
jp
dec
icebp
xchg
jl
insb
fwait
pop
jno
lea
movsb
adc
xor
cwtl
in
sbb
push
movsb
lret
mov
mov
packuswb
test
lods
ds
mov
mov
xchg
mov
daa
jo
dec
mov
not
pushf
into
mov
popf
cmp
adc
leave
std
in
mov
dec
sub
dec
out
push
sahf
mov
cmp
es
push
fwait
jbe
jnp
sbb
les
lret
call
xchg
mov
and
loopne
jns
mov
xor
leave
cmp
adc
mov
xor
or
in
xchg
daa
pop
cltd
xchg
inc
testl
loope
push
icebp
sti
xchg
test
and
lret
jl
cmpl
or
jle
and
xchg
stos
xchg
add
xchg
fs
add
sub
lret
jns
mov
dec
imul
stc
fisubl
imul
test
add
cltd
lret
rolb
repnz
mov
xchg
add
sbb
or
mov
sub
mov
sub
mov
cmp
jbe
mov
mov
mov
mov
movzwl
mov
or
mov
sub
mov
or
imul
mov
mov
mov
mov
mov
mov
mov
mov
mov
jmp
lods
test
jmp
insl
pushf
inc
fs
lods
add
pop
adc
adc
js
sbb
jl
and
loop
addr16
mov
popf
hlt
mov
inc
add
out
ret
stc
lock
jmp
mov
test
push
jg
in
jb
mov
jae
jmp
pop
add
sbb
cld
mov
mov
push
clc
out
xchg
cwtl
inc
mov
aas
call
inc
mov
test
mov
xlat
ljmp
sbb
or
fnsave
hlt
mov
inc
mov
sub
sub
mov
hlt
mov
out
addr16
cmpsl
mov
sti
jg
pop
mov
xchg
out
enter
popa
mov
ljmp
mov
or
jl
adc
dec
ds
mov
jbe
cmpsb
inc
test
idivb
cmp
sbb
cwtl
inc
push
lds
rorl
negl
stos
stos
pop
movb
sahf
xor
xor
add
testb
aaa
rolb
ficomps
fcoml
cwtl
mov
mov
pop
add
jns
adc
mov
loope
je
jecxz
inc
sub
or
repnz
fldenv
negb
addr16
arpl
and
movsb
lea
dec
mov
lahf
fyl2xp1
dec
enter
and
out
fs
jne
movsl
ficoms
subb
xchg
lea
mov
scas
jnp
mov
out
les
in
shlb
xchg
ljmp
jnp
hlt
icebp
or
xchg
in
int3
sub
sub
pop
stos
push
inc
jne
inc
pop
icebp
nop
pop
testb
mov
aam
nop
stc
xchg
push
fiaddl
out
and
ret
and
sbb
sbb
cmpsb
fdivs
xchg
pop
popa
stos
push
lock
int
in
pop
jo
mov
xor
xchg
les
in
pop
ja
xor
sub
in
push
repz
adc
sbb
jno
cmc
in
aaa
push
stos
fnsave
lret
or
ror
test
adc
and
jo
push
mov
pop
shlb
jne
das
push
inc
push
iret
pop
xchg
je
push
add
in
xor
xchg
cmp
rclb
pop
scas
and
stos
aam
mov
cmp
imul
sbb
inc
or
cwtl
sub
push
stc
sarb
pop
shl
decb
fsubrs
call
sahf
cmp
mov
lods
je
cld
and
imul
or
aam
leave
out
pop
sbb
cmp
push
int3
jnp
call
pushf
push
or
mov
jmp
int
and
xor
inc
jecxz
xchg
sbb
ss
lds
aaa
repz
mov
xchg
das
into
dec
adc
lods
or
jp
inc
clc
icebp
push
xlat
and
test
out
pushf
sbb
sbb
push
pop
jae
loope
mov
into
fstps
stos
dec
adc
adc
repnz
fbld
mov
sub
mov
xor
mov
imul
mov
and
mov
and
mov
cmp
ja
mov
mov
shrd
shr
mov
mov
xor
xor
or
jmp
mov
test
cwtl
lods
and
enter
adc
pop
adc
adc
jge
xor
jp
test
imul
xor
mov
lods
pop
sbbl
popf
push
sbb
movd
dec
lods
iret
and
jl
cmpsb
je
xlat
cltd
lock
cs
adc
pushf
adc
xor
pop
inc
xchg
sub
inc
xchg
sub
and
lret
cmp
push
sti
push
dec
scas
mov
fst
jmp
movsb
fdivl
or
ret
or
out
insb
or
mov
add
in
mov
push
jns
ljmp
mov
fcmove
rorb
hlt
gs
test
inc
ret
push
loopne
loope
sbb
subb
xor
inc
sbb
jmp
xchg
fldt
fistpl
ss
mov
or
lret
xchg
jge
stc
into
pop
aad
xchg
jnp
pop
sbb
ljmp
ret
int3
mov
add
fimuls
popf
cltd
push
lods
rcr
xor
adc
pop
bound
rcrl
loopne
sbb
adc
sbb
mov
cli
or
inc
iret
pop
pop
add
pop
lods
shr
mov
jae
shl
popa
filds
jl
testl
sbb
jns
fcoml
es
leave
lock
dec
jge
xbegin
into
push
bound
insb
pop
fisttps
or
pop
push
xchg
loope
adc
sub
jp
sti
hlt
shr
mov
lods
shll
cwtl
aas
adc
push
scas
mov
rcll
push
hlt
cld
dec
xchg
xchg
adc
jb
cld
jno
jmp
jae
push
xchg
aaa
and
fsts
and
enter
cld
mov
ss
scas
shlb
das
xchg
xchg
pop
repz
sub
divps
shlb
inc
add
xor
test
mov
mov
faddl
icebp
aas
outsb
cmp
in
shl
mov
cli
xchg
adc
in
in
sbb
lods
mov
mov
int3
call
cmp
flds
outsl
scas
aam
mov
rorb
in
shlb
sbb
ds
pop
loope
mov
repz
xor
gs
sbb
jecxz
lret
push
jmp
in
outsb
pusha
shr
xchg
inc
aaa
sbb
orb
popa
adc
icebp
sahf
sbb
pop
in
push
cmp
sbb
and
fwait
sbb
test
push
popf
mov
outsl
jp
adc
jecxz
pop
ret
jecxz
loop
movswl
jmp
fstpl
mov
rclb
xor
cmp
push
sahf
sub
xchg
mov
mov
bound
pop
sbb
aas
outsb
add
mov
jbe
cmp
ds
and
aaa
das
gs
loop
mov
outsl
ror
ds
subl
insl
pop
imul
add
rcl
mov
out
jae
cmpsb
fs
dec
adc
jl
and
xchg
adc
inc
gs
into
or
push
push
push
jmp
jne
pcmpgtb
sbb
aaa
data16
loope
lret
pop
adc
pop
adc
adc
sub
xor
test
cmc
sub
sub
in
in
dec
or
decb
jp
sub
lea
int3
jecxz
loopne
out
mov
add
sti
jle
ds
and
mov
mov
fs
sub
in
leave
test
sbb
not
mov
mov
mov
push
mov
imul
mov
test
shlb
stos
sub
fldcw
mov
xor
popa
pop
ss
xchg
xchg
sbb
xor
test
lds
jae
je
ficoml
cltd
ret
xor
push
jne
out
dec
pusha
mov
push
inc
mov
repz
fisubrs
sub
setno
push
sahf
addr16
dec
jg
mov
xchg
push
add
pop
nop
xorl
cmp
repnz
and
xchg
fdivrs
push
not
xchg
mov
lret
popa
jb
push
dec
mov
dec
adc
les
rcrl
xor
ljmp
cmp
sahf
cmpsb
enter
lcall
mov
mov
mov
les
ret
adc
or
imul
mov
or
xchg
ljmp
cmp
test
cltd
and
mov
test
sbb
jle
mov
adc
mov
mov
cmc
and
enter
and
mov
mov
pop
aad
repz
icebp
mov
mov
arpl
sbb
mov
inc
mov
jg
add
in
dec
in
mov
and
das
cmpsb
movsb
fidivrl
xor
shrl
pop
jg
xchg
andb
dec
aas
cmpsb
push
push
sub
inc
arpl
decb
jmp
jbe
test
sti
pop
inc
jg
cmp
jle
or
repz
xchg
xchg
loop
push
or
jle
aas
push
lods
or
sbb
fidivrs
adc
mov
ljmp
mov
adc
mov
ret
xchg
xor
shrb
sub
lcall
mov
jae
mov
xorb
lods
jp
faddl
repz
mov
cltd
je
jl
insb
jge
xor
addr16
pop
ss
sub
jl
sub
push
movsl
aam
movsl
dec
add
and
fadds
cld
je
popf
pop
cld
and
ja
mov
pop
push
imul
cmc
xor
negb
shrl
fistpll
out
fcoml
int
repnz
test
call
lds
fildll
dec
jo
notb
inc
aaa
push
imul
test
and
in
cmp
mov
xor
dec
cmp
lods
mul
lahf
fdivl
outsl
adc
sbb
dec
xlat
xchg
ss
outsb
jno
mov
into
mov
add
xor
or
das
push
lods
ret
stos
mov
lds
push
jno
or
lcall
xchg
cwtl
fprem1
pop
add
dec
mov
and
push
lea
push
shl
call
pushl
pushl
pushl
pushl
call
mov
mov
shrd
shr
mov
mov
shl
xor
xor
or
mov
mov
mov
mov
shrd
shr
mov
mov
shl
xor
xor
or
mov
mov
mov
mov
mov
cmp
jne
mov
mov
mov
cmp
jne
movb
movb
jmp
pushf
cmpsb
mov
scas
fwait
cmp
mov
adc
adc
mov
xor
incb
pop
xchg
dec
sbb
and
stc
and
xchg
cmp
iret
adc
leave
sub
popa
sbb
in
int
arpl
popa
sub
fwait
rorb
push
int3
cld
pushf
sti
and
popf
arpl
dec
cwtl
mov
lahf
push
imul
psrlw
shlb
lret
push
pop
loope
sahf
mov
jp
test
cmp
aas
push
les
adc
mov
push
call
sarl
dec
xor
add
xchg
stos
dec
mov
imul
lcall
adc
cmp
aas
or
inc
call
mov
test
jns
add
les
imul
lds
xchg
mov
push
xorl
push
inc
fxch
negl
sub
stos
push
xor
movsl
adc
out
cmp
sarb
sbb
xchg
mov
into
adc
adc
in
lea
xchg
out
addr16
xor
pusha
mov
pusha
adc
xchg
ret
xchg
in
or
mov
imul
pop
adc
mov
hlt
out
mov
cmp
fcoms
decb
xorl
scas
stos
mov
cmpsl
xlat
std
jbe
or
cmpsl
mov
adc
jecxz
cmpsb
test
mov
jnp
jbe
xchg
movsb
jne
or
cmp
ss
out
push
sbb
insl
pop
in
outsb
and
ret
push
fldt
xchg
sbb
pop
sti
ret
loopne
or
cmc
jns
sbb
stos
mov
mov
mov
fisttps
sarl
mov
pop
adc
loope
lcall
adc
popf
xchg
ja
jae
mov
pop
lds
es
fisubrl
test
mov
mov
pop
mov
mov
mov
cli
or
clc
icebp
rcrb
inc
jp
jmp
inc
sub
adc
xchg
and
inc
iret
jmp
push
push
adc
loopne
push
cli
movl
shl
dec
fcmovbe
sbb
lcall
cs
cli
xchg
aad
iret
ds
rolb
popa
sub
out
xchg
sub
cwtl
out
xchg
jb
sti
mov
dec
es
xor
xor
dec
aas
jge
addb
cli
lahf
cmpsb
inc
les
lret
jno
rcrl
dec
mov
mov
sub
push
rcll
repnz
xlat
mov
jmp
cmpsb
imul
sti
fwait
ss
shlb
xchg
loopne
jno
idivl
mov
outsb
add
and
cltd
hlt
dec
filds
mov
js
sar
ja
jmp
repnz
mov
hlt
cltd
ss
iret
dec
inc
sahf
clc
rolb
adc
pop
sbb
out
jns
in
sbb
mov
pusha
jae
inc
nop
dec
aad
sbb
push
aaa
arpl
repnz
cli
fisttpl
insl
movb
mov
mov
or
sub
mov
sub
jmp
sbb
insl
imull
sub
out
stos
mov
adc
pop
adc
adc
nop
xchg
and
outsb
mov
mov
shl
outsb
adc
sbbl
mov
cmpsb
lock
or
stc
pop
int
xchg
lock
mov
inc
cmpsl
mov
fildll
mov
int
cmp
gs
sbb
les
xchg
lret
movsl
sbb
add
out
dec
cli
cmp
or
and
fistps
mov
add
out
jno
add
mov
mov
cmp
mov
xchg
pop
mov
xor
in
sub
sub
mov
add
sub
lock
mov
mov
fistps
dec
xchg
insl
and
leave
xlat
rcrl
xchg
mov
daa
xchg
or
mov
outsb
xor
dec
out
mov
aad
enter
inc
lods
adc
test
aas
aam
addb
cmp
inc
dec
mov
insb
call
insb
sub
mov
cltd
push
mov
jecxz
xchg
jmp
rcl
push
mov
jmp
mov
xor
mov
ljmp
and
sub
imul
cmp
jo
ret
inc
inc
arpl
ds
xor
push
cmpsb
add
xchg
mov
stos
mov
inc
inc
cwtl
add
or
xlat
cmc
lea
push
insl
icebp
xchg
xor
mov
xor
sub
addl
jbe
adc
dec
dec
test
mov
les
cmp
clc
push
lock
dec
mov
in
adc
push
jecxz
out
rcll
xchg
mov
pop
add
sbb
out
sub
testl
nop
sbb
in
mov
iret
je
adc
push
add
fiadds
xor
cmp
mov
xor
jae
xchg
xchg
mov
das
push
mov
mov
or
psubw
pop
idivb
cmp
scas
push
add
ret
pop
out
je
mov
mov
mov
sub
aam
mov
push
mov
xchg
inc
into
in
push
and
xchg
out
enter
and
jecxz
fsubl
xlat
notl
add
and
jns
push
cwtl
je
js
dec
jmp
pop
test
add
mov
std
push
and
aaa
dec
mov
sbb
cmpsb
adc
sbb
xor
les
shl
push
lods
stos
scas
shll
adc
imull
adc
sbb
into
cmp
mov
dec
and
dec
scas
mov
jg
daa
cmp
push
xchg
jmp
test
out
int
push
xor
imul
ret
push
icebp
in
cmp
jns
dec
fwait
arpl
ds
mov
inc
push
lret
or
ss
xchg
adc
dec
xchg
std
lods
fisubl
outsb
push
sbb
cli
mov
kmovw
out
inc
imul
or
and
mov
cmp
mov
cmpsb
mov
inc
fdivrl
mov
sub
lret
je
movzbl
movzbl
cltd
idiv
movzbl
jmp
rclb
dec
push
add
mov
pop
cmp
insb
incb
adc
adc
xorb
ror
shll
loopne
jns
push
mov
xor
mov
mov
out
movsl
lea
lods
xor
xchg
mov
iret
xor
hlt
dec
dec
test
nop
sbb
xchg
mov
mov
mov
mov
add
inc
pop
lret
int3
xchg
cmpsb
mov
shll
lahf
cmp
in
rolb
and
call
ja
jecxz,pn
leave
pop
pop
xlat
push
jnp
dec
xor
sub
mov
sbb
sbb
lods
adc
rcrb
mov
mov
dec
push
addr16
cmp
xor
and
aad
xor
cltd
xchg
pop
out
cmp
data16
jmp
mov
aam
add
mov
iret
ljmp
sahf
mov
cmp
scas
cmp
ficompl
scas
jg
mov
nop
fcmovnb
cltd
inc
mov
sub
imulb
ret
adc
xor
add
into
std
jge
lea
jo
sti
jecxz
movsb
notl
call
das
jge
or
or
inc
mov
and
int3
pop
or
mov
lds
stos
add
or
fisubs
mov
fmuls
shrl
cli
fcomi
int3
imul
xchg
cwtl
xor
scas
cmp
xor
mov
sub
fiadds
xchg
shll
cmp
icebp
and
sbb
gs
ret
loop
in
pushw
mov
mov
jmp
test
bound
xchg
shll
and
call
popf
xor
shll
xchg
jmp
lret
repnz
insb
lock
imul
jl
jmp
test
push
cmp
or
and
and
hlt
sbb
mov
in
lret
fnsave
push
or
mov
js
or
push
jmp
cmp
negl
push
jno
adc
adc
shrl
icebp
xchg
sbb
ficoml
mov
pop
push
pop
jnp
cmp
dec
cmp
sub
xor
dec
lret
dec
sub
cld
add
loope
das
add
rcl
mov
mov
or
jbe
pop
dec
fstl
bound
cvtps2pi
stc
out
sbb
sub
sub
or
je
bound
pop
xchg
and
adc
and
lds
xchg
mov
lcall
or
adc
iret
push
fistpll
es
inc
out
pusha
or
adc
pop
push
out
mov
cli
and
push
jge
cmpb
add
sub
ds
xchg
jecxz
xor
addl
leave
mov
in
or
aam
fistps
sub
mov
jo
push
sub
out
ljmp
or
adc
cmp
xchg
lret
pop
jb
outsl
xor
repnz
ret
in
testl
xor
rorl
and
add
inc
and
iret
movb
movb
movb
mov
mov
jmp
iret
xchg
mov
dec
daa
mov
pop
mov
mov
inc
cmp
adc
adc
dec
xlat
fisttps
xchg
mov
or
fwait
mov
jle
mov
mov
rclb
fwait
xchg
adc
mov
xor
push
insl
mov
sbb
lret
lea
jge
cld
jbe
xchg
pop
xlat
xor
fs
in
pop
dec
movsl
mov
sub
add
fmuls
sbb
loope
jb
or
pop
testb
and
push
sub
fimull
mov
outsb
jae
and
cmp
es
jo
lds
mov
inc
fisttpll
mov
rcpps
addr16
dec
lods
lock
pushl
push
xor
cltd
movb
cmp
roll
mov
mov
jl
inc
inc
rcl
ret
xchg
imul
shll
insb
and
jge
subb
popa
subb
sti
addr16
pop
incb
and
and
mov
leave
pop
xor
scas
or
js
add
mov
in
adc
mov
in
lret
popa
lahf
push
iret
push
fcmovnb
cld
aas
jae
sub
mov
mov
sbb
cmp
addb
es
mov
adc
xor
inc
or
dec
xchg
sbb
sti
cmp
pusha
lock
fwait
mov
sub
adc
xor
fldenv
stc
sbb
push
test
dec
nopl
sbb
stos
cmc
and
dec
cmpsb
loop
sub
push
adcb
mov
mov
dec
sbbb
and
xor
shrl
out
test
mov
mov
fisttpl
push
test
std
pop
jae
pop
popf
mov
aad
xchg
cmp
test
int3
add
fwait
aas
hlt
data16
mov
sub
lock
int
xor
mov
adc
jno
sub
rcll
test
roll
in
cmp
cmp
loopne
fdivs
and
bound
and
xchg
mov
inc
cmp
xor
enter
jg
sbb
test
sarl
aas
mov
loope
test
popf
fidivrs
push
xchg
scas
mov
push
test
stos
pop
fnstsw
sbb
out
or
movsl
pop
inc
cmc
cmc
pop
xchg
and
mov
jl
add
iret
jmp
and
in
sbb
jmp
out
xchg
sub
mov
nop
ja
mov
clc
sbb
mov
sahf
mov
or
loop
out
out
jnp
mov
or
pop
fwait
int3
stos
cmp
mov
arpl
fcomps
and
lods
fld
sahf
push
and
xchg
push
data16
hlt
insb
pop
adc
cmp
dec
out
push
imul
jnp
mov
fisubrs
add
mov
or
ds
cs
data16
jmp
clc
idivb
imul
lods
xchg
lret
frstor
jle
jmp
add
or
and
mov
imul
mov
movzbl
movzbl
and
mov
movzbl
cltd
idiv
mov
cmp
je
lea
push
lea
call
cmp
jne
cmp
jne
jmp
mov
mov
mov
mov
add
adc
mov
mov
push
push
lea
push
call
mov
push
pushl
lea
push
call
mov
mov
mov
mov
mov
mov
mov
lea
mov
add
movl
movl
mov
and
add
jmp
and
mov
mov
dec
fidivrl
mov
adc
pop
adc
adc
and
das
sbb
leave
js
ds
push
sub
or
repnz
and
je
pushf
adc
adc
repnz
adc
dec
aad
or
xchg
sbb
test
mov
xor
jae
int3
mov
xor
fcompl
rclb
sub
jno
es
xchg
loopne
jne
mov
mov
sbb
cmp
lahf
xchg
int3
pop
fwait
daa
sbb
std
ret
pushf
popf
mov
jge
jno
pop
mov
jl
std
into
sub
mov
mov
fnstsw
out
and
xor
iret
dec
push
xchg
jnp
xchg
sbb
cmp
cwtl
mov
fwait
mov
cmp
cwtl
mov
mov
and
je
inc
daa
data16
imulb
mov
xchg
dec
mov
sbbl
push
into
inc
lods
je
js
std
hlt
ja
or
and
inc
xor
jecxz
out
push
arpl
mov
jns
fldcw
and
cli
cld
inc
imul
sub
push
push
jns
scas
mov
lods
and
ja
int
insl
xchg
cs
imul
push
xor
sahf
mov
sbbl
inc
nop
or
pop
fwait
test
and
rorb
mov
cmp
mov
dec
jnp
dec
loope
push
sub
jo
das
outsb
dec
repz
adc
leave
test
mov
jp
test
cmpsb
mov
hlt
pop
cmp
test
arpl
adc
in
xchg
aas
pushf
add
sub
dec
fs
xchg
lds
cmc
cmpb
sub
lds
out
int
push
sbb
cltd
stos
notb
cmpsl
aaa
test
in
sbb
ja
std
es
inc
mov
movsb
xlat
ds
js
jge
add
movsl
inc
xchg
mov
inc
xchg
sbb
or
pop
int
mov
and
inc
lcall
dec
movsl
aas
scas
mov
loop
mov
lods
xor
sub
push
or
ljmp
dec
lock
inc
jb
dec
and
insb
out
hlt
fmuls
sub
sbb
stc
aas
xlat
mov
xchg
insl
sti
and
psubsw
or
pop
dec
pop
idivl
stos
rcrb
mov
popf
xchg
iret
xchg
jns
les
add
inc
mov
addr16
sbb
adc
and
popa
das
bound
iret
xchg
hlt
mov
std
xor
xor
icebp
cmp
gs
adc
fsubp
test
jecxz
push
inc
decl
daa
fs
mov
add
mov
mov
jb
inc
dec
lock
cmpsb
push
or
stos
movsb
mov
dec
ret
add
movsb
add
xor
add
lods
call
roll
or
sbb
sub
ds
lods
inc
xchg
or
loope
in
mov
ja
out
xor
pop
ljmp
and
mov
movl
mov
mov
or
add
cmp
je
mov
mov
mov
xor
xor
xor
shld
shl
cmp
jne
cmp
je
mov
mov
mov
mov
xor
xor
shl
shr
or
xor
xor
xor
and
cmp
jne
cmp
je
mov
cltd
mov
mov
cltd
shld
shr
xor
shl
or
or
mov
mov
xor
xor
mov
cmp
jne
cmp
je
pushl
jmp
sbb
sbb
stos
int
stos
test
xor
adc
adc
flds
cmpsb
scas
pushf
fimull
inc
add
pop
sti
mov
fsubrs
int
push
shrb
cmc
mov
xor
hlt
fwait
aam
or
lds
adc
dec
xchg
cmc
leave
loop
pop
fidivrs
mov
add
add
test
push
cmp
repnz
add
push
adc
stos
pop
sub
out
mov
out
sbb
sti
sub
and
jae
push
seto
push
xchg
add
lds
mov
sbb
movsb
sti
stos
and
push
ds
pop
adc
repz
sub
fcmovu
xchg
or
bound
jl
and
jg
out
xor
mov
call
mov
mov
mov
enter
das
mov
pop
dec
imul
test
mov
fdivrp
push
sub
xor
mov
add
imul
mov
sub
cltd
cli
jge
sbb
add
add
sahf
sub
or
push
ds
pop
push
mov
xchg
jge
pop
xchg
adc
fistl
outsl
mov
mov
jmp
lret
mov
mov
mov
fdivrl
mov
mov
add
mov
andl
mov
aam
mov
add
rcll
push
movsl
xor
lcall
xlat
add
adc
inc
icebp
jb
lock
push
enter
insl
decl
movhps
cs
push
add
insl
cwtl
sbb
hlt
xor
icebp
fucomi
mov
push
cmp
cmpl
mov
inc
out
jno
mov
mov
xor
mov
pop
jnp
jecxz
loopne
cltd
mov
push
xchg
out
cmpsb
push
add
jle
cmp
sub
push
dec
mov
out
xor
lods
mov
js
stc
dec
mov
pop
push
pop
sub
ds
xor
iret
sbb
test
ret
imull
push
dec
mov
lds
ret
inc
xor
sub
sub
and
or
in
inc
sbb
mov
test
stos
mov
push
movsb
jnp
inc
scas
inc
or
sbb
test
nop
ja
add
fwait
jmp
lds
mov
sti
lret
addr16
pop
xor
or
cltd
out
in
or
jae
loopne
stc
fcoms
loop
ret
jecxz
adc
pop
mov
ds
scas
stc
push
pop
jmp
sbb
mov
pop
and
rol
push
outsb
call
mov
jle
pop
pop
test
sub
imul
frstor
push
jmp
stos
rcrl
and
jecxz
ljmp
lcall
cld
pop
test
dec
push
sbb
notl
mov
cli
mov
aas
push
js
dec
xor
fs
dec
fwait
jae
popl
fstpt
or
sbb
or
fcmovu
adcb
jle
pushl
mov
mov
pushl
mov
call
mov
mov
mov
mov
push
add
push
lea
push
call
mov
mov
pop
pop
pop
mov
pop
ret
push
mov
sub
adc
jmp
jne
rcl
cmp
adc
scas
insb
xlat
jmp
adc
int3
movlps
dec
xchg
mov
jl
mov
pop
add
adc
jge
leave
in
adc
adc
out
pop
icebp
gs
popf
out
push
add
pusha
or
testl
popf
insl
je
jg
push
incl
adc
popa
push
xchg
xchg
mov
inc
mov
xchg
ds
pop
fldt
push
jne
adc
xorb
sbb
inc
lahf
push
stc
add
scas
and
ret
jns
bts
pop
jecxz
xor
mov
inc
mov
fiadds
in
jge
jns
leave
sbb
insl
xor
adc
sbb
int
pop
lcall
and
in
dec
jae
fnstenv
and
es
lea
push
inc
mov
push
mov
lock
xor
aaa
and
inc
into
xchg
xor
and
iret
or
imul
stos
cmp
movsl
mov
dec
lahf
xchg
sub
xor
shrl
jno
mov
cs
push
call
pop
mov
in
adc
lock
cld
into
push
mov
addl
adc
shrl
idiv
mov
add
and
push
insb
dec
in
shll
cwtl
fucomip
xor
nop
jno
or
pop
mov
fldenv
dec
adc
mov
in
and
in
xor
div
outsb
pushl
mov
andl
arpl
sbb
push
xchg
sub
adc
testb
fnsave
xor
int3
fisubrl
insl
mov
jge
sbb
adcl
mov
dec
ljmp
inc
daa
je
daa
push
pop
hlt
enter
shrl
jno
popa
insb
push
leave
inc
adc
repnz
push
addr16
xchg
test
cmp
iret
enter
xchg
sub
scas
jnp
xchg
nop
sub
enter
inc
add
add
dec
adc
jb
sti
push
cmp
and
adc
mov
clc
inc
push
fmull
mov
xchg
ds
sahf
lods
add
orb
test
push
jmp
lods
out
insb
xchg
loope
loop
mov
xchg
or
xor
data16
push
push
sbb
scas
and
js
lahf
cmp
into
cmp
psraw
fdivs
cmp
sub
pushf
aas
scas
movsl
sbb
push
out
lods
mov
xlat
and
lahf
mov
cmc
inc
scas
xor
and
xor
mov
ret
xchg
add
xor
lcall
lock
imul
icebp
lds
and
adc
mov
rcrl
jge
jne
mov
test
test
sarl
hlt
push
or
adc
sbb
shr
scas
dec
and
outsb
push
add
jnp
arpl
pusha
sub
adc
sarb
gs
aaa
sbb
push
inc
push
cli
pop
mov
lret
repz
shl
mov
rol
inc
iret
loop
loopne
push
inc
setg
cmp
sar
and
in
jnp
jp
cmp
aam
out
sti
data16
data16
jp
adc
movsb
and
jle
pop
stos
or
fimull
adc
cmp
add
mov
cs
and
cmp
jle
push
push
xchg
lcall
lds
jbe
out
ljmp
loope
jo
into
or
push
mov
pop
jns
xor
inc
mov
test
cmp
pop
adc
leave
mov
lds
or
xor
fwait
repnz
clc
adc
lret
popa
imul
jae
rorl
pop
or
rolb
mov
inc
ja
dec
aam
mov
push
pop
in
loopne
mov
sub
dec
push
jle
jno
push
mov
enter
pop
jb
xchg
popa
iret
and
mov
add
jae
and
dec
adc
testl
movl
not
movl
mov
jmp
mov
jb
pushl
pushl
call
or
xor
or
sub
mov
mov
sbb
sbbl
andl
push
mov
sub
movl
movl
movl
jmp
mov
pop
test
shll
ret
and
adc
movlps
out
sub
loop
xor
push
lods
cmpsb
dec
cmp
ss
dec
test
pusha
cld
jns
mov
mov
lods
dec
call
xor
add
xchg
mov
cmp
mov
cli
lahf
test
mov
pop
push
lods
jae
cmp
shl
pusha
test
jbe
das
testl
popa
mov
xchg
loope
adc
mov
and
std
jae
and
inc
push
jnp
jmp
pop
jle
push
clc
fs
push
xchg
cmp
arpl
repnz
lods
push
xor
bound
jns
call
mov
sti
and
push
ds
xchg
mov
fdivl
jb
imul
ret
stos
in
shlb
mov
dec
adc
cmpsl
cmp
cmp
and
jecxz
out
test
jl
pop
inc
pop
add
mov
inc
adc
xchg
sub
lcall
push
imul
clc
movsl
fwait
add
outsl
pop
test
mov
addr16
rcrl
mov
test
sub
ss
xchg
cli
sbb
scas
inc
out
popl
outsl
mov
add
mov
imul
inc
in
dec
jne
arpl
jp
scas
fisubrs
jo
sub
fsub
sbb
pop
push
sarl
cmp
aam
scas
fiaddl
push
data16
push
int3
imul
mov
icebp
adc
inc
lds
cmp
lods
dec
cmp
movsb
int3
jno
cmpsl
mov
sbb
fdivp
test
inc
lock
inc
pop
fs
fisubl
jnp
pop
pop
jae
mov
in
stc
test
mov
sbb
mov
sti
aas
add
inc
testl
std
shl
jge
sub
sub
pop
sbb
sbb
leave
inc
stos
out
movsb
cs
in
cltd
xor
jbe
cmp
jge
dec
push
pop
clc
xchg
mov
mov
movl
xor
subl
div
adc
imul
cmpl
mov
movl
mov
jmp
movl
jne
push
pushl
push
call
adc
adc
mov
add
mov
or
xor
sbb
movzbl
xor
mov
subl
xor
add
and
mov
movl
xor
xorl
div
sub
xor
mov
cmpl
movl
mov
jmp
movl
movl
jae
push
pushl
push
call
orl
movzwl
adc
dec
and
cmpl
mov
mov
jmp
mov
mov
jg
push
pushl
call
sbb
and
addl
adcl
adc
movzbl
sbb
mov
mov
or
jmp
bound
adc
popa
add
lcall
sbb
adc
sti
xor
mov
loop
in
sbb
adc
sbb
loope
cmpsl
dec
pusha
cmp
ja
aas
mov
leave
lock
inc
mulb
cmp
iret
adc
or
in
fwait
cmc
aad
rolb
pushf
fimull
in
popa
outsl
addr16
jo
mov
and
outsb
sbb
xor
stc
cmp
pop
or
imul
mov
aad
mov
inc
mull
std
sbb
dec
add
popa
sti
xchg
mov
jae
and
inc
mov
ret
cld
negb
mov
out
test
icebp
scas
movsb
cltd
sub
add
fisubs
insl
mov
negl
aam
ds
mov
sub
in
mov
jecxz
aad
stos
jmp
and
jl
stos
ljmp
push
or
jae
lret
popa
jge
in
pop
and
loop
popa
lahf
shl
add
ljmp
sbbb
hlt
out
adc
sub
test
add
out
ja
daa
mov
push
in
lods
shll
adc
mov
mov
cmpsl
add
push
ja
dec
lods
jno
jo
lret
cs
adc
rorb
insb
push
cmp
mov
xchg
add
pop
fwait
pop
jge
fwait
cmp
push
mov
add
mov
das
pop
jno
push
movsb
fidivl
mov
andl
jne
pop
xchg
loop
push
ja
dec
sub
jo
cs
mov
pop
imul
add
inc
and
loop
pop
inc
xchg
addl
mov
or
hlt
jmp
nop
es
rcrl
popa
cmpsb
push
jecxz
ljmp
inc
jg
sub
jbe
jecxz
add
nop
cmpl
jno
loopne
sub
inc
jb
lods
aam
lahf
adcb
push
adc
mov
test
pop
pop
sahf
mov
jg
mov
or
mov
test
clc
das
add
movl
addl
jmp
pop
repz
cmp
pop
data16
nop
js
sbb
adc
movlps
imul
loopne
mov
mov
cmp
jb
fcmovu
cld
mov
aam
or
clc
imul
jmp
and
scas
stos
jb
aas
jg
fwait
add
mov
rolb
sbb
les
xchg
cmpb
xchg
cltd
bnd
ljmp
arpl
test
jbe
clc
popf
or
cmp
cmp
or
push
adc
pusha
outsb
inc
mov
adc
pop
hlt
shlb
xchg
aaa
xor
jecxz
cmp
cs
pop
mov
jae
fldenv
test
sbb
jno
enter
adc
stos
lock
mov
cwtl
and
mov
mov
inc
cmp
pop
pushf
dec
push
and
jnp
out
xor
jne
jg
fimuls
int3
icebp
arpl
jle
pop
hlt
xchg
inc
push
or
mov
xorb
shlb
cwtl
add
jno
or
push
aad
sbb
push
pop
push
sahf
jns
pop
scas
mov
push
sub
test
jae
addb
rorb
pop
push
mov
ret
or
fs
or
movl
and
pop
ds
push
divl
mov
adc
cmpl
aam
enter
add
add
out
jg
lods
mov
fmuls
lret
out
sbbl
fstp
lahf
cmc
jg
jnp
xor
and
sub
push
hlt
xchg
or
sti
push
add
xchg
lahf
jl
scas
dec
shlb
adc
jmp
lea
pop
cmp
ret
jae
scas
sbb
cmp
or
in
fcoms
sub
jno
jno
pop
push
jae
jmp
push
inc
pop
jl
in
adc
cld
push
push
mov
sbb
daa
fcompl
arpl
jb
sbb
ret
leave
pop
test
bound
xchg
in
jno
or
and
not
movl
xorl
mov
add
xor
or
xor
imul
cmpl
movl
movl
jmp
mov
jl
push
push
pushl
call
not
movzwl
adc
add
sub
xor
mov
xor
add
sub
and
mov
xor
and
sub
mov
mov
mov
sub
add
movl
orl
movl
movl
cmpl
movl
movl
jmp
mov
je
push
push
call
and
addl
orl
xor
add
or
mov
mov
xor
xor
sub
or
movl
and
mov
cmpl
mov
mov
mov
jmp
movl
movl
jb
pushl
push
pushl
pushl
call
neg
xor
sbb
or
neg
subl
imul
mov
imul
imul
mov
adc
mov
adcl
and
or
xorl
mov
xor
mov
add
mov
mov
addl
lea
cmpl
mov
movl
movl
jmp
movl
jae
push
call
notl
or
addl
movzwl
sbb
mov
sub
xorl
neg
inc
mov
cmpl
movl
movl
mov
jmp
mov
mov
jbe
push
push
push
call
and
andl
sbb
neg
movl
movl
cmpl
mov
movl
mov
jmp
movl
jge
push
pushl
pushl
pushl
pushl
push
push
call
neg
or
movzwl
and
mov
movl
xorl
xor
and
movl
mov
xor
jmp
int3
cs
lahf
push
pop
leave
sbb
xor
mov
adc
adc
ds
sub
adc
pop
shlb
sti
lods
test
jno
push
andl
lea
inc
loope
nop
cmc
in
xchg
and
sarl
sub
xor
scas
jecxz
or
add
and
lods
push
neg
adc
pop
xor
fxch
dec
fnstenv
fsubrl
jae
sarb
mov
add
sub
aaa
mov
add
push
pop
push
test
decb
fcoms
xor
dec
fwait
das
rorb
mov
lret
addr16
adc
lds
pop
sub
lret
xchg
inc
dec
sbb
js
ds
shll
insb
jl
cli
subl
pop
pop
adc
push
push
adc
dec
jne
dec
lret
add
ficoml
adc
xor
mov
sbb
insb
test
testl
pop
xchg
test
inc
inc
dec
mov
out
jns
and
mov
and
push
and
clc
sti
ds
loopne
imul
pushf
jecxz
sbb
xor
loopne
in
sub
negb
fdivrl
jp
mov
scas
mov
mov
or
ss
sbb
das
xor
out
jbe
sub
pop
repnz
xlat
adc
out
push
outsl
inc
adc
mov
test
out
outsb
pop
push
or
cmp
mov
jae
in
xchg
or
inc
cmp
in
lret
push
mov
ret
sbb
pop
push
lock
addr16
cmp
or
cmp
pop
pop
adc
jmp
xlat
cmp
jae
jl
push
xchg
push
adc
arpl
add
out
mov
mov
popa
daa
imul
inc
mov
inc
dec
sbb
xchg
push
ja
test
pop
cmp
mov
scas
movsb
ds
jnp
cmp
or
and
stos
sub
or
ja
hlt
mov
addl
or
add
mov
sbbl
or
movzwl
sbb
add
movl
xor
mov
xor
movl
sub
movl
movl
sub
mov
movzbl
and
add
or
mov
sbbl
sub
cmpl
mov
mov
jmp
mov
je
push
pushl
pushl
push
call
xorl
sbb
mov
adc
mov
add
adc
mov
lea
add
or
cmpl
movl
not
movl
jmp
movl
movl
jge
push
call
adcl
orl
xor
or
or
add
subl
inc
xor
xor
sub
sbb
sub
xor
xor
and
mov
mov
andl
movl
xor
movl
incl
mov
inc
add
cmpl
mov
movl
mov
mov
jmp
movl
mov
jb
push
pushl
push
pushl
push
call
mov
adc
mov
negl
andl
movzwl
xor
mov
adc
imul
jmp
aas
mov
cmp
add
stos
pop
shll
insl
adc
adc
jmp
mov
push
out
mov
cmp
es
fbstp
and
adc
dec
outsb
inc
xor
aas
lret
cmpsb
shll
hlt
lock
call
adc
fdivs
dec
cmpsl
cmp
push
repnz
or
loopne
push
sbb
dec
adc
jae
push
mov
int
insb
fs
out
call
xor
jg
jns
addb
js
jae
cld
or
imul
sahf
and
ljmp
pop
popf
lods
jmp
jbe
ja
andl
pop
or
fstl
sbb
cmpl
cld
push
cmp
mov
push
mov
movsb
sub
fcoms
and
add
in
arpl
push
inc
fldt
xchg
lret
push
out
add
bound
dec
mov
das
mov
sar
pop
dec
addr16
or
adc
aaa
adc
test
jne
sub
sub
cmp
repz
adc
cmp
adc
pop
fmull
jmp
mov
jg
enter
mov
shrl
mov
mov
fdivl
std
lret
mov
mov
cltd
lahf
xor
cmc
aaa
mov
int3
xchg
dec
xchg
mov
jo
rcr
mov
sub
cmp
or
push
shr
mov
test
add
insb
gs
lahf
mov
jge
sbb
cmpsl
shl
test
mov
loopne
add
pop
les
insl
mov
inc
sub
jno
push
stos
dec
inc
je
lea
dec
push
sbb
adc
sub
test
jmp
in
mov
decb
inc
daa
mov
dec
movsl
add
sub
test
dec
pop
outsl
cli
add
test
aaa
jl
xlat
push
cltd
enter
or
sbb
pop
pushf
add
push
mov
clc
iret
inc
pop
mov
xchg
dec
aaa
cli
sti
pop
dec
push
loop
dec
xchg
imul
adcl
xor
subl
mov
div
sub
mov
sbb
mov
cmpl
mov
mov
mov
jmp
movl
mov
jg
pushl
pushl
pushl
push
call
add
negl
sbbl
and
sub
xor
movl
movl
movl
sub
mov
mov
movl
xor
jmp
jbe
and
sub
ret
or
adc
loopne
pusha
loop
leave
pop
adc
inc
mov
mov
xchg
adc
fiaddl
dec
add
jl
aad
movsl
cmp
lret
mov
gs
add
lret
xchg
mov
pop
adc
stos
jbe
fcomps
mov
inc
jbe
cwtl
xor
mov
or
outsb
cmp
mov
sub
pop
and
and
cli
or
sbb
lods
jl
fildll
push
mov
jmp
push
shll
sub
je
arpl
adc
dec
mov
fs
sub
jns
adc
xchg
popa
push
add
movb
sub
ss
test
sub
or
aad
mov
fcomps
movsb
call
mov
push
or
fistl
mov
adc
adc
dec
les
stc
mov
or
push
je
jbe
sahf
in
pop
or
repz
insl
loopne
cmp
xor
xor
inc
lods
and
mov
int
pop
inc
mov
pop
pop
in
arpl
inc
pop
dec
jb
lahf
jmp
dec
add
push
mov
xchg
orb
cmp
pop
scas
call
dec
pop
gs
mov
in
arpl
fiaddl
jae
hlt
or
imul
outsb
sbbb
fists
test
sbb
in
aaa
test
xor
out
jns
mov
fisttpll
scas
sbb
es
imull
out
cmp
aam
movsl
insl
pusha
jns
add
xor
xor
addr16
cwtl
sbb
sub
xlat
aad
sbb
sti
xorb
jmp
adc
scas
push
or
dec
imul
in
dec
inc
cli
shll
mov
mov
in
gs
push
scas
or
enter
cmp
repz
clc
cwtl
mov
mov
sub
mov
inc
add
out
or
adc
hlt
div
mov
add
imul
add
add
sbbl
mov
xor
xor
xorl
mov
div
xor
cmpl
mov
mov
jmp
mov
mov
jl
push
push
push
push
call
sbb
adcl
movzbl
adc
mov
mov
xor
adcl
mov
inc
movl
sbbl
movl
adcl
movl
cmpl
mov
movzwl
jmp
movl
ja
push
push
call
sbb
and
neg
or
sub
adcl
and
mov
mov
orl
sub
shr
mov
xor
sub
mov
imul
cmpl
movl
movl
movl
jmp
mov
jne
push
pushl
call
sbbl
sbbl
sub
xorl
adcl
cmpl
movl
movl
movl
movl
jmp
movl
mov
jle
push
pushl
call
notl
xorl
sub
xorl
mov
adcl
and
mov
sbbl
sub
add
mov
movl
sbb
movl
mov
add
or
mov
or
sub
mov
or
mov
sbbl
movl
incl
movl
movl
movl
movl
and
movl
sbb
movl
sbb
movl
notl
mov
add
mov
sub
cmpl
movl
movl
jmp
movl
movl
jg
push
call
and
and
andl
xor
negl
and
or
orl
mov
imul
sbbl
imul
orl
mov
sbbl
or
andl
mov
lea
xorl
push
call
mov
orl
mov
or
imul
xor
xor
xor
mov
add
cmpl
mov
movl
mov
mov
jmp
movl
jb
push
call
addl
sub
sbbl
movzwl
adc
adc
movzbl
or
and
sub
jmp
xchg
out
lcall
mov
cmc
stos
push
xchg
std
jle
add
adc
in
xchg
sti
rorb
dec
jo
idiv
dec
arpl
cmp
movsb
push
push
icebp
mov
stc
pop
pop
mov
adc
fwait
decb
jb
pop
ja
cmp
add
iret
cltd
jle
repz
sub
inc
sub
jb
cltd
and
lret
xor
pop
xlat
add
aam
jns
cli
jae
jp
mov
gs
pop
nop
xchg
jl
and
inc
mov
rorb
mov
sbb
mov
dec
jp
mov
iret
mov
test
dec
mov
cmp
out
int
sub
rcl
inc
or
ds
mov
sub
shl
pushf
jne
out
in
mov
jae
push
mov
xorl
xchg
xchg
addb
inc
mov
ja
in
jno
sbb
sub
cmp
pop
fildl
jb
cltd
fisubrl
es
das
lods
cmp
cmpsb
sbb
jp
mov
xor
int
in
and
lock
pop
or
test
jb
pop
xlat
mov
in
fwait
inc
outsb
inc
ljmp
test
jge
lcall
leave
jge
push
dec
loope
cltd
fadd
sbbl
cld
addr16
jl
cmc
or
f2xm1
out
fisttpll
pop
out
sbb
outsb
test
je
sub
in
ret
and
add
cwtl
dec
fs
lods
xchg
adc
xor
out
adc
sub
lcall
nop
test
jbe
rorb
test
xchg
xchg
xor
jns
inc
jge
xchg
jno
movsb
cmp
fnstcw
mov
cltd
movsl
jecxz
js
xor
push
in
addr16
mov
fdivrl
sub
sbb
or
jmp
cmp
int3
aad
and
hlt
push
xor
jp
mov
js
mov
adc
and
sub
cmpl
mov
movl
movl
jmp
movl
movl
jb
pushl
push
call
xor
subl
movl
add
movzbl
adc
sub
adc
neg
xor
xor
mov
andl
div
xor
sub
add
mov
cmpl
mov
not
jmp
not
notl
jl
push
pushl
push
push
push
call
mov
add
mov
andl
add
subl
xorl
decl
movl
xor
movl
movl
cmpl
movl
movl
mov
jmp
mov
jae
push
call
or
adc
inc
adcl
or
adcl
adcl
movl
movl
xor
or
sbb
movl
movl
movl
movl
not
movl
movl
sbbl
movl
orl
mov
mov
add
mov
cmpl
movl
mov
movl
jmp
movl
movl
jl
pushl
push
push
call
or
or
sbbl
sbb
andl
and
xor
sub
sub
imul
cmpl
mov
mov
movl
mov
jmp
mov
movl
jle
pushl
call
sub
sbb
adc
sub
movzwl
sub
movl
mov
lea
cmpl
mov
movl
jmp
movl
mov
jbe
pushl
call
or
movzwl
or
mov
sbbl
sub
inc
xor
add
sub
xor
mov
sub
mov
mov
mov
sub
sub
mov
and
mov
xor
add
mov
or
lea
cmpl
movl
mov
not
jmp
movl
jle
push
push
call
xor
adc
mov
mov
sub
and
xor
subl
and
sbb
mov
orl
sub
cmpl
movzwl
notl
jmp
movl
jg
pushl
push
pushl
pushl
call
subl
adcl
sbb
xor
add
add
adc
sbb
add
sbb
mov
movl
adc
movl
mov
sbb
mov
movl
neg
movl
mov
xor
mov
sbb
mov
subl
xor
addl
xor
andl
mov
andl
call
mov
cmpl
movl
mov
jmp
mov
jl
push
push
call
xor
or
or
mov
or
sub
notl
andl
mov
and
mov
mov
sbbl
mov
xor
movl
xor
andl
mov
xorl
call
addl
or
xorl
or
mov
adc
mov
adcl
xor
sbbl
xor
mov
orl
call
sub
mov
and
mov
mov
subl
mov
andl
jmp
aam
jle
cmp
xor
xchg
call
adc
sub
aad
push
and
std
cld
pushf
je
mov
jle
jns
mov
sbb
xor
cmp
and
pop
insl
add
cmpsb
push
lahf
hlt
sbb
pop
xchg
stos
mov
pop
stos
int3
push
xor
xor
or
test
lahf
js
dec
test
mov
movsb
in
test
lods
dec
out
inc
aad
mov
mov
add
pop
in
stos
fs
xchg
mov
in
clc
daa
mov
fst
and
lock
outsb
loop
adc
insl
dec
or
fsubp
cs
mov
adc
xor
sbb
sahf
aam
cmp
cltd
cmpsb
insl
in
inc
mov
and
int
cmp
jle
cmc
addr16
or
inc
cmpsl
jb
arpl
aaa
cs
push
add
std
jno
dec
xor
jle
and
mov
ficompl
pop
cmpsb
fisubrl
dec
push
xchg
jle
sub
outsb
rcrb
or
xchg
jb
mov
int3
movsl
mov
push
adc
xor
adcl
das
lock
xchg
icebp
sub
les
dec
stos
xor
adc
sbb
data16
push
roll
js
lock
fcomps
fcomip
push
sub
das
or
dec
add
insl
and
stos
loope
pop
movsb
dec
cwtl
jmp
stos
dec
push
jnp
xchg
pop
cmpsl
xchg
addl
cli
push
clc
xor
je
in
push
cmp
ljmp
scas
lret
inc
loop
dec
out
push
test
mov
adc
or
cs
sbb
ja
mov
out
push
jno
jns
sbb
or
popf
xor
sbb
or
scas
fsub
mov
jl
testl
dec
jne
fs
in
dec
mov
dec
push
mov
mov
pop
push
add
push
test
in
mov
push
repnz
call
imul
or
incl
add
leave
inc
add
lret
mov
orl
mov
addl
mov
call
mov
add
mov
mov
sbbl
or
sub
mov
movl
or
xorl
push
push
push
push
call
mov
cmp
jne
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
mov
mov
call
or
jmp
pop
dec
scas
jns
pop
sbb
stos
repnz
lods
dec
sti
adc
adc
cld
xor
arpl
enter
aaa
sbb
fidivs
bound
dec
ret
sbb
add
mov
add
mov
movsl
inc
push
cmp
pop
les
in
pusha
pusha
jnp
insb
inc
in
lds
bound
hlt
jne
xchg
loope
pop
sbb
imul
incl
pop
loop
sbb
test
shrl
and
or
or
mov
cmpsl
sbb
cmp
sub
pushf
orb
jecxz
cmp
stos
shlb
popf
call
push
xor
in
orl
sbb
loop
icebp
push
pop
ljmp
mov
dec
cmp
mov
popl
xchg
enter
jbe
jge
xorl
in
adc
and
es
rcll
mov
mov
scas
orl
mov
shll
into
sbb
cmp
xchg
hlt
sub
lahf
rol
dec
pop
ss
jmp
arpl
mov
cmp
fldt
cwtl
test
xor
aad
ja
js
mov
lcall
paddq
cmp
cli
pop
movl
adc
and
sub
sub
scas
and
sub
call
jnp
jecxz
xchg
mov
int
add
push
std
and
lods
sahf
loopne
or
ss
fwait
xchg
pop
adc
or
test
rcll
and
mov
xchg
scas
dec
mov
addr16
ret
test
mov
jp
leave
jne
xor
fdivrl
fisttpll
pop
insb
mov
das
outsl
jb
push
int
cmp
pop
sbb
jb
loopne
xchg
inc
movsb
popa
pop
call
jb
fildl
mov
out
cmp
imul
int3
inc
imul
dec
or
mov
dec
sub
lods
mov
cmp
push
je
cmp
sbb
mov
or
jmp
movsl
or
add
jo
js
adc
stos
push
notl
adc
hlt
mov
negl
mov
cli
repnz
lock
mov
xor
inc
hlt
push
pop
js
xchg
xchg
in
lock
or
bnd
sti
or
cmp
xor
pop
xchg
or
sub
pop
mov
ret
fcoml
dec
xor
pop
loopne
mov
pushf
sbb
pop
sub
dec
addb
pop
mov
in
mov
sbb
cmpl
movsb
push
shlb
jge
push
mov
inc
aam
mov
lret
mov
xchg
mov
xor
dec
cmc
jne
xor
outsw
aas
clc
mov
push
fcoms
lods
mov
ret
pop
jp
xchg
adc
ror
sahf
dec
push
add
mov
test
clc
and
cmpsb
js
pop
call
pop
xchg
cmp
dec
lahf
imul
inc
adc
cmp
rol
inc
dec
in
xchg
cmpsb
repnz
int
std
cld
add
sub
sub
cmc
sub
hlt
pop
div
pop
dec
rorl
ljmp
loop
out
mov
jo
lret
andb
gs
out
icebp
jmp
movsb
pop
inc
mov
rcrl
movsl
or
cwtl
pop
inc
lahf
movsb
leave
push
loopne
mov
pop
xchg
mov
arpl
jp
cmp
rcr
push
pop
push
inc
pusha
shll
in
in
lea
add
in
into
or
add
jl
mov
and
mov
call
mov
je
cli
mov
lock
adc
add
fidivs
pop
mov
xchg
in
push
add
cmp
mov
std
ret
fldl
movsb
outsb
mov
add
mov
xchg
fisttpl
mov
test
int
adc
and
sti
cmpsb
ljmp
mov
shr
mov
dec
adc
xor
daa
out
push
mov
mov
mov
jl
test
push
pop
cli
dec
scas
xchg
pop
adc
push
hlt
loope
or
sti
mov
jle
inc
push
push
push
push
call
mov
jmp
jmp
lea
mov
mov
movl
mov
jmp
ljmp
pop
inc
lea
mov
movlps
xor
loopne
jmp
mov
into
push
sub
pop
stc
lock
insb
pop
shr
and
ljmp
xlat
xchg
mov
aaa
and
xor
cltd
ss
mov
cmpb
mov
ds
data16
ja
jmp
adc
ret
stos
push
cmpsb
fsts
push
daa
sbb
lret
aad
int3
out
mov
adc
push
arpl
or
popf
xor
in
in
xchg
ja
mov
fisubrl
orl
push
shrl
jecxz
jbe
sub
into
repnz
out
mov
aaa
xchg
mov
jle
sbb
ljmp
and
xlat
adc
fisttpll
push
pushf
add
push
and
dec
sub
cld
jle
ds
mov
test
cmp
sub
dec
inc
outsb
pop
jl
imul
dec
xlat
add
arpl
push
mov
bound
push
pop
xorb
inc
imul
mov
stos
in
pushf
jb
pushf
bound
push
mov
lret
ja
fisubs
out
jg
mov
cld
popa
outsl
adc
pop
lcall
jl
adc
and
aad
mov
and
add
sbb
xchg
mov
loopne
jne
es
fmul
mov
jbe
out
lret
cmpsl
aaa
orl
push
jle
pop
push
cli
cli
sbbb
add
jge
iret
fimuls
mov
inc
jnp
sbbb
rcr
dec
dec
mov
into
inc
mov
lret
out
xlat
out
jns
ss
xchg
inc
flds
cmp
fdivrl
fisttps
imul
mov
jl
jp
jl
xor
lock
or
fidivs
push
jne
fidivs
mov
xorb
sbb
dec
cmp
mov
mov
into
or
rcrl
pusha
push
push
cwtl
lret
decb
scas
cltd
loopne
cli
enter
lods
dec
stos
push
imull
in
xor
lcall
inc
add
add
pop
sbb
sbb
ss
cmp
js
loop
mov
int3
movlps
clc
xor
aam
test
shlb
pop
into
push
std
lods
pop
imul
int
mov
cmc
fcmovnb
fcmovnu
out
lcall
shl
sub
sub
insb
jecxz
and
inc
clc
sarb
and
andl
movsb
cmp
xor
mov
sbb
popf
ss
idivb
cmp
or
pop
and
pop
or
add
fwait
cld
shrb
loopne
imul
hlt
lahf
fwait
lock
aas
jecxz
outsl
shlb
arpl
push
aas
fdivs
push
ja
leave
xor
mov
imul
xchg
pop
in
hlt
xor
rcl
test
add
sbb
mov
xchg
sub
test
les
lcall
cmp
sub
sbb
out
clc
sbb
add
lds
popf
lret
inc
push
vpmacswd
mov
jmp
push
nop
sahf
inc
lret
jns
inc
dec
or
fildl
sbb
sub
or
outsb
push
mov
or
lret
adc
ficoml
andb
xor
xchg
cmp
adc
das
add
inc
aad
call
adc
xchg
dec
cmpsb
push
cmpsb
push
mov
adc
or
fdivrp
cmpsl
ds
loopne
test
jns
adc
icebp
push
int
fcomps
inc
cmpsb
in
into
sub
fdivr
mov
dec
stos
adc
jg
sahf
mov
mov
icebp
rcll
outsb
lea
cmp
adc
loopne
xchg
or
xchg
andl
mov
mov
cmp
or
outsb
imul
sbb
cmp
in
lods
jmp
stos
clc
inc
jp
aad
repnz
or
push
sub
add
dec
mov
xor
outsb
dec
xchg
mov
pop
add
cltd
lcall
mov
xor
shl
or
mov
mov
mov
mov
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
xor
xor
mov
call
mov
mov
jmp
arpl
das
sub
sub
and
or
sub
movlps
add
imul
lea
jle
adc
jnp
loopne
fnstsw
loop
cmpsb
xchg
cs
push
inc
adc
lea
andb
mov
leave
pop
lcall
je
in
xor
xor
pop
xchg
test
in
or
je
aam
jae
sbb
and
mov
loopne
push
push
and
popf
jle
push
es
addb
mov
push
shl
jmp
xor
mov
pop
arpl
xor
inc
js
leave
imul
lea
sbb
mov
lahf
fucom
int3
sbb
cmp
outsb
pop
sbb
lret
divl
fildl
cmp
mov
xchg
push
lahf
sbb
mov
push
in
push
push
jo
mov
dec
enter
js
push
and
mov
jo
loop
inc
xor
pop
rcrb
pop
push
movb
sbb
stos
xlat
jmp
xchg
pop
jge
iret
pusha
inc
sbb
adc
sbb
out
sti
sarb
add
adc
jb
pop
mov
dec
rol
pop
out
outsb
ret
neg
inc
ljmp
fidivl
insl
pop
or
and
mov
push
jg
out
out
push
pop
test
lret
pop
or
scas
inc
dec
movsb
test
xchg
or
rcrl
xchg
imul
pop
add
out
mov
xchg
pushf
subb
pop
and
jg
jmp
jp
sub
std
cmp
icebp
nop
sub
xor
push
std
pop
mov
and
cmp
in
xchg
je
mov
mov
fdivrs
adc
je
push
mov
test
cld
aad
shlb
xchg
std
int3
repz
adc
adc
test
cs
int
push
sti
add
xor
xchg
sub
imul
decl
jmp
xor
fisttpll
and
rcrb
stos
out
adc
adc
pop
outsb
sbb
mov
scas
js
push
ja
ficompl
mov
fists
outsl
inc
fcompl
mov
jb
dec
imul
inc
jno
out
xor
xor
lock
shrl
rcrb
dec
push
fs
lea
aad
cmp
adc
into
loop
icebp
add
xchg
mov
mov
mov
lcall
aad
clc
mov
pop
stc
fildll
push
fwait
xchg
dec
sub
ss
cs
adc
sbb
insl
daa
xchg
aam
cmp
sbb
add
lret
adcl
aas
inc
clc
inc
mov
dec
jb
andl
fildll
adc
push
pop
sub
dec
xchg
jmp
cmp
adc
inc
pop
add
fistpl
sub
xchg
scas
lahf
mov
pop
std
mov
sahf
in
dec
or
mov
jge
clc
addr16
push
cld
addr16
lcall
xchg
xchg
mov
popa
fcoml
scas
clc
adc
mov
scas
xchg
les
repnz
adc
pusha
repz
mov
js
pop
outsb
xchg
sti
bound
mov
sbb
movsb
pushf
sbb
scas
or
sbb
jns
int3
stos
rclb
mov
cmp
aas
imul
and
push
add
mov
loop
inc
dec
cs
jbe
pop
jle
inc
jne
or
or
ret
cmp
sub
scas
mov
fxch
inc
cli
outsl
push
loope
scas
repnz
loop
xor
orl
cmc
movhps
adc
scas
xor
xchg
push
sub
dec
mov
or
cmp
rorl
nop
ja
and
add
or
in
into
int
push
lods
loope,pt
mov
lret
xor
rorl
dec
xchg
add
cmp
cli
sbb
iret
adc
xor
xor
mov
mov
mov
mov
mov
call
mov
or
mov
or
push
push
push
push
call
mov
cmp
je
mov
mov
xor
xor
mov
call
jmp
les
jp
pop
test
mov
out
adc
movlps
dec
std
xchg
das
or
icebp
ret
fmul
jl
mov
pop
mov
push
push
jmp
jns
repz
and
adc
fisubrl
scas
enter
fdivrl
cmpb
ficompl
mov
inc
jg
xchg
test
dec
out
mov
pop
fistl
push
push
imulb
outsl
ds
xchg
xor
sbb
add
cmp
mov
add
dec
inc
gs
mov
add
or
cmp
cmp
das
mov
mov
add
sub
imul
or
shl
cwtl
shll
scas
jecxz
stos
mov
je
insb
hlt
in
cmp
pop
mov
dec
jae
or
mov
dec
and
callw
jns
int
roll
jp
loopne
add
insl
loope
sbb
lcall
jecxz
mov
lret
mov
aaa
into
inc
mov
pop
sbb
and
aad
jbe
in
hlt
mov
fidivs
lcall
adc
jecxz
mov
xor
pop
shlb
sub
in
arpl
xchg
jecxz
dec
aad
dec
int3
ss
add
ljmp
out
dec
bound
push
cwtl
mov
jecxz
stos
jle
lock
das
jns
jp
call
popf
inc
sub
mov
and
jno
aam
sarb
push
add
repz
gs
mov
mov
sti
mov
lcall
xchg
fisttpl
mov
cmp
in
out
and
scas
lret
lds
lea
inc
xchg
jno
movsb
imul
out
pop
xchg
addb
cld
nop
push
les
stos
orl
shlb
and
lods
pop
cli
mov
dec
movsb
mov
aad
scas
cmp
faddl
gs
pop
jge
jns
dec
sbb
push
rorb
test
mov
pushl
xor
mov
call
jmp
cmpsb
test
fistpll
and
fadds
push
loop
adc
movlps
inc
cwtl
jno
negl
cs
out
dec
shl
ja
jnp
push
adc
sub
mov
mov
shlb
sbb
fisubrl
into
mov
loope
xor
mov
xor
pop
rcl
xchg
rclb
ljmp
aaa
sbb
mov
adc
cld
mov
rol
adc
lcall
push
shll
ffreep
lcall
jno
subb
pop
pop
cmp
ss
xorl
dec
insl
dec
and
adc
int3
mov
mov
sub
pop
jp
out
xor
lret
loopne
jae
cwtl
daa
mov
jecxz
int3
jns
push
lds
lcall
stos
mov
mov
sub
arpl
into
sub
in
pop
dec
inc
xchg
test
jmp
jae
stos
xchg
dec
stos
bound
dec
test
mov
mov
pop
cmpsb
pop
mov
je
sub
cmc
or
filds
hlt
movl
lds
push
sahf
dec
push
rolb
gs
adc
xor
jecxz
ja
testl
shrl
repz
xchg
xor
xchg
mov
mov
mov
mov
in
push
sub
cs
inc
jge
inc
pop
std
push
jnp
sub
pop
pop
sub
clc
pusha
fistps
mov
loope
jb
sub
add
dec
mov
and
add
fisubl
sbb
cmpsb
fisttps
in
ss
fsts
and
jo
out
dec
push
mov
push
adc
vpaddusw
fdivl
mov
inc
insl
add
and
fld
adc
inc
loop
fdiv
pop
sbb
mov
aad
sbb
fidivs
ss
jmp
sbbl
decl
scas
lock
mov
mov
mov
jmp
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
mov
mov
call
or
mov
or
push
push
push
push
call
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
jmp
push
insl
mov
pop
mov
sti
jle
sbb
mov
int3
movlps
adc
ljmp
pop
andb
jns
push
pop
xchg
sbb
daa
test
sub
aad
or
mov
lods
outsb
and
icebp
mov
sbb
in
push
test
loope
hlt
or
mov
mov
cltd
inc
mov
mov
mov
push
jne
sbb
imul
cmp
leave
imul
push
lock
cltd
mov
sbb
ficoml
push
pop
push
lock
ret
movsb
mov
fsubrp
mov
das
and
scas
test
xchg
popf
fs
call
fisubrs
xchg
movsl
ds
mov
fsubr
or
push
out
sti
sub
sti
iret
inc
not
hlt
adc
leave
in
mov
xor
xor
test
mov
mov
shl
mov
cmp
stos
outsb
js
sub
or
mov
hlt
in
imul
es
outsb
nop
scas
add
aaa
lods
mov
mov
lret
jns
dec
mov
adc
or
into
notl
mov
mov
mov
or
xor
pop
stos
mov
bound
insl
sti
jp
aas
clc
push
mov
incl
jb
adc
rclb
out
adc
cmp
lretw
sar
adc
lods
lret
cmp
mov
mov
ss
mov
pop
cld
outsb
rorb
inc
ror
xchg
xchg
mov
jno
jl
rcrb
adc
pop
lock
mov
pop
pop
adc
dec
mov
scas
xchg
loop
mov
neg
cmpsl
loop
pop
push
sahf
das
xchg
xor
and
cmp
data16
outsl
leave
jb
sub
jge
push
xchg
push
shl
push
mov
mov
xor
cwtl
push
cmp
lods
inc
shll
xchg
repnz
or
xchg
pusha
int
out
out
sbb
cmp
or
mov
mov
mov
xor
div
mov
and
add
mov
lea
xor
add
mov
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
xor
div
add
mov
and
xor
add
mov
mov
sub
mov
or
mov
and
mov
xor
jmp
adcl
inc
cmp
mov
int3
movlps
daa
aaa
or
mov
icebp
and
sbb
cmp
loopne
jp
orl
sbb
daa
cmp
shrb
test
jmp
mov
scas
xor
pop
fmul
mov
out
incl
gs
add
cmpsl
iret
sbb
jns
iret
ljmp
decl
ljmp
ret
movsl
and
inc
cmp
loopne
push
xor
loop
fldl
shrb
pop
pop
jb
out
mov
movsb
insb
sub
push
mov
into
pop
jmp
push
jp
enter
cmp
mov
xchg
xor
cmc
mov
shll
mov
scas
mov
mov
add
fwait
jnp
nop
fnsave
mov
sub
jmp
ret
add
dec
jb
mov
daa
push
pop
jb
dec
aaa
push
dec
xor
pop
jns
lds
pusha
push
in
adc
pusha
or
mov
mov
jno
sbb
xor
repnz
in
inc
sbb
xchg
in
mov
adc
or
dec
mov
lret
je
xchg
push
aam
fucom
lods
dec
dec
or
sub
dec
je
xchg
push
clc
imul
rcrb
add
popf
push
icebp
xchg
ds
stos
and
ffreep
mov
add
sbb
icebp
or
add
inc
sbb
and
sbb
push
lahf
jle
adc
pop
mov
sbb
sub
ret
jmp
iret
rolb
pop
sub
les
jns
or
sarl
xor
bound
roll
pop
pop
not
cmpl
mov
mov
out
cwtl
adc
ror
pop
sbbb
in
cli
insl
arpl
pop
and
dec
mov
aas
movsl
sub
or
pop
jno
mov
daa
dec
rorl
adc
pop
xchg
insl
test
push
pop
xchg
mov
jg
or
aaa
frstor
xchg
hlt
mov
sub
mov
imul
xor
xor
mov
mov
add
add
mov
movl
movl
movl
movl
jmp
stos
in
inc
cwtl
inc
sbb
fidivs
mov
js
adc
adc
bound
fbld
sahf
mov
cltd
add
je
inc
mov
mov
test
jns
jnp
imul
lret
imul
daa
rcrl
jae
sahf
fwait
adc
int
in
sbbl
ret
negb
test
push
sub
xor
add
or
nop
mov
enter
out
sahf
or
scas
push
shl
imul
fisttps
adc
les
loope
insb
sbb
inc
pusha
incl
cmpsb
xor
mov
insl
andb
call
mull
stos
sbb
daa
in
mov
bound
or
imul
mov
mov
notl
sbb
push
xor
mov
lcall
and
push
out
fdivr
into
ljmp
sbb
cmp
mov
pusha
outsl
fsts
loopne
leave
aad
pop
cs
cmp
pop
push
mov
pop
lods
mov
sub
bound
scas
and
adcl
xchg
int3
leave
out
mov
test
or
inc
loope
inc
push
cmp
imul
or
jg
sbb
lahf
test
je
gs
imul
push
test
lret
pminsw
stos
stos
jae
jno
mov
sbbb
mov
cmp
inc
xorb
pop
cmp
pushf
enter
loope
aaa
stc
pusha
jns
mov
out
or
dec
mov
call
repz
or
mov
iret
sti
cs
aaa
fiaddl
pop
push
sub
loope
stos
sarb
cmpsb
push
sbb
cmp
xor
jnp
dec
cs
fnsave
adc
daa
out
jns
cmp
fistps
nop
mov
jge
adc
mov
lds
push
dec
xor
adc
push
in
mov
and
test
push
test
mov
imul
push
insl
inc
pusha
push
rep
jbe
je
imul
mov
cmpsl
insl
lcall
into
leave
xchg
popf
movl
movl
mov
xor
mov
imul
mov
lea
mov
and
and
xor
push
pop
jmp
enter
cmp
jp
aas
inc
stos
movsb
push
cmpsb
js
rclb
adc
lahf
repz
std
add
sub
call
mov
push
mov
lret
xchg
add
sub
cmp
cltd
adc
dec
into
mov
lds
mov
pop
mov
xchg
flds
inc
lcall
cmp
inc
jg
sbb
out
xorb
testb
cli
sahf
push
hlt
lods
filds
sbb
mov
fisubrl
fwait
and
decb
cmp
rorb
mov
mov
adc
pushf
ljmp
ficomps
mov
pop
pop
mov
ss
mov
enter
orps
fidivrl
nop
sbb
clc
mov
pop
std
push
pop
cli
mov
inc
pop
imul
cmpb
setae
mov
sbb
pop
cltd
mov
cmp
sarb
xor
lock
sbb
pop
sub
fdivrs
adc
cmp
pop
mov
xlat
sahf
or
dec
ljmp
mov
push
imul
cltd
sub
bound
std
mov
cltd
ljmp
or
bound
inc
push
cmp
push
jb
mov
push
push
mov
push
fimuls
imul
mov
rcrb
jge
push
cltd
xchg
stos
inc
movsl
inc
mov
mov
jne
andb
pop
xor
add
fst
sub
decl
orl
add
or
add
xor
subl
fwait
xlat
orb
movsb
fcmovu
rol
cwtl
add
leave
jecxz
and
lea
or
loope
out
jmp
mov
jo
mov
xchg
ret
add
lods
sub
fld
and
add
inc
pmuludq
mov
mov
mov
mov
push
pop
js
jb
dec
ja
push
mov
push
xor
out
stc
ds
mov
imulb
mov
push
les
add
decl
add
imul
mov
xor
xor
mov
mov
add
add
mov
movl
movl
movl
movl
movl
movl
mov
jmp
xchg
sbb
les
ficoms
jle
enter
movlps
adc
sahf
pushf
repz
inc
inc
or
push
jnp
in
jnp
sarb
xchg
cld
or
arpl
pop
loopne
addl
sbb
jmp
adc
or
push
cmp
in
popa
adc
push
repz
scas
xchg
in
ret
sbb
les
or
fsubrs
aad
mov
inc
push
sub
sub
lods
dec
sti
fdivl
xor
testb
loopne
xorb
js
mov
xor
in
stc
enter
dec
fisubs
cmp
mov
inc
aad
inc
mov
jo
ret
nop
or
jb
sub
jecxz
repz
hlt
icebp
push
sub
jecxz
cmp
in
in
jle
xchg
lret
mov
imul
int3
xchg
lea
popf
aaa
pushf
mov
aaa
xor
fs
lods
pop
fmull
in
call
jp
in
xor
sbb
jno
xchg
xchg
xchg
jns
imul
lods
icebp
inc
loop
fdivs
mov
ret
fwait
adc
shlb
aad
xchg
dec
cmpsl
dec
inc
ljmp
push
pop
aam
pop
add
mov
fdivrp
xor
sub
push
pmullw
shlb
mov
jp
xor
mov
repz
push
daa
sbb
lods
mov
imul
ja
es
sub
lock
sarl
and
and
sbb
mov
push
pop
sbb
in
cwtl
leave
movsb
lods
fdivrs
sbb
stc
pop
sub
mov
rcr
mov
or
or
jo
xchg
cmp
sbb
roll
sbb
dec
bound
cmpsl
and
icebp
mov
cmp
repz
push
fstl
scas
pop
pop
icebp
jecxz
popf
add
or
hlt
loope
xchg
xchg
stos
movhps
and
mov
sti
sbbb
addr16
sbb
cmp
pop
div
mov
or
mov
xor
div
imul
mov
lea
mov
and
and
sub
jmp
xor
inc
popa
inc
and
iret
mov
js
les
adc
insb
loopne
scas
pop
xlat
sub
inc
lea
mov
xchg
popf
fucomp
mov
add
mov
andb
cmpsl
push
sti
out
aaa
fmull
in
enter
ja
lret
mov
je
push
aam
fildl
xor
loop
orl
mov
outsb
mov
dec
push
sbbb
movl
dec
xor
hlt
push
outsl
push
movsb
std
add
mov
fstp
lahf
adc
xchg
inc
loop
sub
scas
pushf
push
fwait
and
sbb
inc
xchg
and
xor
dec
xor
mov
pop
subl
in
repz
mov
jns
mov
aam
mov
mov
test
push
xorb
cmp
add
test
xchg
out
add
adc
aas
inc
gs
mov
pusha
mov
sub
repz
rcrb
leave
sbb
test
xor
jo
leave
add
imul
cmpsb
sub
mov
push
xor
lret
xor
aaa
mov
mov
loopne
in
add
cltd
inc
push
mov
cmp
cmp
stc
mov
nop
imul
and
xlat
loope
add
je
push
add
lret
inc
and
push
sub
out
xchg
mov
pop
bound
sub
popa
mov
bound
rclb
and
mov
pop
je
and
rorl
loop
and
inc
out
ds
sub
ret
sarl
dec
lods
inc
js
mov
hlt
mov
out
dec
push
sub
int3
sti
ss
int3
lret
push
data16
lcall
movsb
subl
pop
xor
xchg
iret
in
insb
mov
rol
or
in
xor
push
lods
daa
or
pop
jo
icebp
lods
and
cld
incl
add
jmp
and
or
mov
mov
add
lea
mov
andl
jmp
mov
inc
mov
mov
mov
cmp
je
mov
mov
mov
add
mov
mov
mov
mov
mov
movl
movl
movl
movl
lea
mov
mov
movzwl
xor
movzwl
sar
mov
movzwl
xor
movzwl
shl
or
movzwl
mov
mov
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
movzbl
push
lea
push
call
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
jmp
sub
mov
and
outsb
sbb
pop
rclb
dec
jg
call
dec
jnp
add
rorl
and
call
push
lahf
xor
sbb
xchg
ficompl
or
sub
sahf
xchg
jecxz
add
jae
mov
roll
pusha
std
std
mov
aaa
adc
in
jmp
addb
xchg
ja
sahf
in
jp
cmpsb
mov
out
and
mov
cwtl
xor
dec
inc
push
int
pop
inc
sub
jno
cmp
add
adc
dec
mov
cwtl
push
clc
sbb
or
mov
je
dec
inc
inc
add
lock
mov
cmpsl
inc
sbb
ljmp
mov
dec
jl
insb
add
sub
sub
jb
test
adc
and
cld
mov
jae
test
dec
clc
clc
adc
arpl
insl
and
mov
jae
adc
mov
xor
mov
jae
loopne
je
or
pop
pop
popf
add
cmp
out
mov
xor
loop
nop
and
stc
cwtl
lret
xor
bound
pop
jne
insb
push
aas
cmp
inc
es
lods
and
push
cltd
imul
fsts
and
test
push
dec
mov
leave
rcrb
mov
add
sbb
cmp
fdivrs
aas
gs
test
stos
add
dec
push
pop
leave
adc
arpl
sahf
inc
dec
aad
cwtl
add
xchg
and
repz
fs
sub
adc
xchg
in
adc
xchg
out
push
pop
cmovae
ret
mov
sbb
mov
iret
stos
movsl
fisttps
enter
fisubrl
fisubl
sbb
xor
mov
leave
rcrl
fucomip
cli
and
jne
push
js
cmp
mov
dec
mov
dec
cmp
enter
ret
or
fcmovnbe
push
inc
cld
daa
test
jle
movsl
sarl
je
jg
mov
mov
inc
push
cmpsl
pushf
mov
mov
cwtl
sbb
movsb
rsqrtps
xor
mov
call
or
or
add
mov
mov
cmp
je
mov
mov
movzwl
xor
movzwl
sar
mov
jmp
out
imul
lock
mov
adc
mov
sbb
mov
subl
shll
movsl
sbb
out
stc
sbb
mov
cmp
ret
in
movlps
push
push
adc
cmc
sub
add
roll
xchg
push
iret
lret
nop
lds
ss
mov
mov
imull
aad
push
jno
adcb
xchg
aas
repnz
inc
and
je
cltd
xor
xchg
rcll
pop
jae
add
bswap
popa
add
mov
push
jae
dec
pusha
cmp
xorb
popa
js
std
or
inc
pop
jg
mov
cli
add
pop
and
pop
sub
insb
mov
lahf
push
adcl
xchg
data16
cmp
jno
mov
aad
xor
outsl
push
adc
adc
push
data16
mov
cmp
pushf
jmp
ds
insb
nop
push
ret
lcall
ljmp
repz
mov
jns
sub
mov
leave
rcrb
and
jnp
xor
lds
repnz
inc
adc
jnp
sbb
scas
imul
sbb
inc
pop
cltd
push
loope
dec
push
or
outsb
mov
and
cmpsl
add
and
push
iret
xchg
and
lret
negl
jle
sbb
mulb
pop
test
add
das
sub
lock
cmpsb
mov
ljmp
gs
adc
cmp
cwtl
shlb
mull
xor
es
mov
inc
cwtl
and
jg
lea
mov
inc
rclb
mov
mov
scas
pop
xor
mov
sub
mov
es
int
ret
inc
inc
mov
imul
aam
pusha
ret
sub
les
xlat
gs
neg
mov
fwait
inc
inc
cltd
andl
fucom
xor
xor
push
sub
inc
in
hlt
lea
dec
lods
ds
out
mov
movzwl
xor
movzwl
shl
or
movzwl
mov
mov
mov
movzwl
xor
movzwl
sar
mov
jmp
cltd
outsl
sbb
and
js
mov
int3
movlps
sbb
imul
sub
mov
add
enter
jg
fistpll
xchg
stc
cli
fwait
inc
xor
scas
sbb
insl
sub
out
xor
xchg
or
jno
popa
adc
popf
inc
mov
insl
sub
les
mov
pop
pushf
push
rclb
repz
xchg
jge
mov
fstpt
xchg
push
adc
ds
outsl
cmp
cmpsb
xchg
xor
or
jmp
ficomps
std
inc
in
mov
dec
aam
loope
cmc
out
or
pop
clc
xor
adcb
sbb
arpl
jge
push
loopne
jb
xlat
cwtl
loop,pt
jnp
push
call
shll
roll
jg
xchg
xchg
movsb
jle
inc
jle
mov
outsl
adc
xchg
testl
flds
outsl
lret
mov
xchg
mov
add
repnz
and
setae
sbb
lea
push
sub
mov
cli
inc
rcrl
sti
xchg
mov
jb
es
sub
sub
inc
xor
mov
es
fnstsw
lods
mov
jnp
push
roll
subl
lcall
test
dec
mov
cmpsl
xchg
std
out
adc
pop
pop
pop
cwtl
mov
push
mov
mov
push
mov
movsl
mov
mov
sub
cmp
ja
jp,pt
test
sbb
rclb
pushf
lcall
cmp
mov
out
lahf
fmul
jp
or
mov
xchg
cmp
aas
jecxz
in
jbe
jg
dec
push
stc
imul
shr
dec
cmp
shl
or
pop
mov
pop
xor
push
dec
nop
pop
pop
mov
in
sub
xor
pop
rorb
and
pop
adc
mov
int
push
negb
cmc
mov
jb
add
mov
movzwl
xor
movzwl
shl
or
mov
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
jmp
jg
loope
mov
mov
mov
test
adc
add
dec
std
push
lods
cmp
mov
push
push
call
cmp
test
fs
sbb
dec
and
add
pop
mov
aaa
out
test
rol
add
out
adcl
or
test
pop
ret
push
push
repnz
stos
sbb
pop
xor
lods
hlt
pop
adc
jmp
adc
aad
mov
xor
mov
stos
push
fdivrs
ja
push
outsb
aam
shll
sbb
testb
outsb
add
push
mov
and
in
call
mov
xchg
cwtl
pop
jecxz
fldcw
std
leave
xchg
out
jmp
cltd
in
jl
sbb
jg
push
cmpsl
pushf
and
icebp
mov
jnp
js
adc
sub
jne
mov
dec
xor
inc
shll
add
xchg
std
cmp
ja
rorl
leave
add
jmp
push
adc
push
cwtl
inc
and
jo
leave
mov
xchg
mov
popl
dec
popa
and
add
cmp
push
pop
cmp
aam
loope
addr16
ret
push
mov
inc
jle
mov
adc
dec
mov
jecxz
inc
lahf
call
pop
sub
addr16
rcrw
jge
es
cmpsb
jb
adc
fadd
ja
repz
pop
pop
into
push
pusha
sbb
push
and
hlt
fldt
adcb
xlat
and
fidivrs
sti
sbb
pop
adc
in
cmpsb
sti
pop
insl
jno
pcmpeqd
cmp
ja
mov
fists
add
inc
xchg
cli
dec
cmp
sbb
mov
add
xor
push
adc
or
clc
cmp
fcoml
testb
push
sub
push
jge
xchg
and
insb
cmp
subl
or
imul
test
aam
ds
or
or
mov
mov
mov
jmp
cltd
jns
dec
and
cltd
pop
sub
cmp
cmp
movlps
sbb
out
mov
movl
lods
xchg
inc
sub
stc
fistpll
pop
rolb
mov
and
or
scas
aaa
xchg
shll
mov
jns
gs
in
lods
pop
aas
iret
sbbl
add
mov
loopne
jbe
jne
insb
dec
mov
pop
xchg
mov
mov
cmp
and
int
jle
mov
mov
shrb
loope
leave
xchg
sub
decl
add
loop
dec
fsubs
mov
rcrb
push
xchg
and
repz
ret
out
andb
mov
mov
pop
dec
cs
cs
es
lahf
ljmp
jne
or
adc
aaa
bound
add
inc
xor
sub
js
call
int3
sbb
pop
push
mov
cmc
push
in
popf
pop
sub
add
push
jno
xchg
jno
cli
or
loopne
sbb
shrl
mov
or
mov
mov
in
sahf
mov
xor
push
mov
test
jnp
sbb
mov
fsubrl
test
adc
cli
lcall
cmp
ret
popa
mov
push
and
sbb
gs
and
xor
mov
sbb
ss
adc
push
xchg
push
cmp
xor
sub
mov
cmp
aaa
jnp
into
stos
add
inc
pop
jp
jp
test
sub
imul
cmp
adcb
pop
pop
sub
adc
xorl
enter
dec
dec
out
mov
cld
iret
mov
mov
xchg
inc
pop
adc
mov
mov
jmp
xchg
jnp
fldcw
dec
mov
aad
mov
sub
ljmp
add
cmp
adc
jmp
in
loope
adc
int3
mov
adc
stc
in
jmp
xor
xor
mov
call
mov
mov
mov
mov
jmp
sub
sbb
sbb
cs
icebp
mov
cmp
scas
adc
adc
jo
fdiv
mov
test
or
test
leave
sub
mov
mov
or
add
mov
std
das
cmp
mov
outsl
fidivrs
sbb
imul
je
sbb
push
add
xlat
dec
clc
test
or
rcrl
fs
lret
cli
jmp
das
adc
push
sub
stc
sub
mov
pushf
jmp
pop
adc
push
popa
lcall
nop
jge
cmpsl
or
in
jb
testl
push
inc
adc
add
sbb
mov
mov
cwtl
out
cltd
hlt
pop
sub
and
push
lret
subb
lea
cltd
mov
push
xor
hlt
and
ja
add
in
loopne
aaa
pushf
call
jnp
leave
push
scas
pushaw
mov
inc
inc
and
imull
sti
sub
loop
push
cmp
insl
xor
sti
adc
out
dec
jbe
movsb
or
es
sbb
jno
scas
in
xchg
pop
pop
pop
mov
jbe
jle
mov
mov
vpshufd
or
push
jbe
mov
add
into
mov
in
test
mov
sub
push
sub
mov
test
pop
into
into
out
in
sbb
pop
stos
cmpsl
out
adc
aam
bndstx
repnz
xchg
push
sub
xchg
out
daa
push
jnp
push
sar
add
xor
xchg
test
outsl
adc
dec
ds
mov
jno
cmp
pop
sbb
add
call
jne
in
mov
or
daa
mov
insl
stos
xorb
push
lds
mov
add
mov
outsl
jl
lock
mov
imul
popa
xor
jecxz
mov
mov
xchg
inc
xchg
int3
add
mov
enter
adc
jl
inc
fwait
mov
mov
mov
mov
sub
imul
or
add
or
or
mov
mov
mov
or
je
lea
mov
mov
xor
mov
call
mov
mov
mov
jmp
insl
ja
add
popf
sub
xlat
mov
push
stos
adc
adc
stc
cmc
pop
mov
inc
ljmp
test
lock
xor
inc
cmpsb
fwait
xor
jno
data16
lret
push
mov
push
test
cld
push
lods
or
cmpsl
jo
inc
sbb
push
inc
shlb
fdivrl
leave
dec
scas
sbb
dec
dec
and
dec
cltd
cmpsl
cmp
lods
push
aam
ds
pop
cld
scas
dec
add
lcall
push
iret
aaa
push
movsl
mov
repz
in
add
js
arpl
mov
iret
in
clc
or
or
xchg
sbb
test
push
push
and
xor
js
fstpl
dec
aam
shrl
jle
ret
aaa
sbbb
fs
push
scas
out
arpl
lret
dec
lcall
loopne
jb
cwtl
insl
out
inc
xor
pusha
jmp
and
int
fistps
clc
pop
aaa
in
sahf
jo
xchg
xor
cmpsl
mov
cmp
test
mov
scas
pop
fdivl
outsl
add
xor
outsl
aaa
in
negl
call
xlat
lahf
nop
pop
in
jns
lock
out
xor
leave
loop
popa
out
unpcklps
shll
sub
jbe
mov
call
cmpsl
xchg
repz
sbb
pop
sub
loopne
lea
cmp
popf
mov
pop
sub
mov
mov
orb
and
out
adc
dec
inc
mov
mov
hlt
pop
dec
bound
add
int3
mov
cwtl
mov
xlat
sub
in
push
mov
pop
adc
dec
jge,pn
xor
jnp
xchg
push
sub
mov
xchg
push
frstor
cmpsb
jo
mov
mov
xor
cmp
inc
push
les
add
mov
clc
push
sarl
adc
pop
cli
push
xchg
je
rcrl
jle
enter
pop
pop
jle
mov
adc
inc
cmp
xchg
int
enter
shlb
decl
lock
xor
xor
mov
mov
jmp
addr16
pusha
out
sbb
xor
mov
adc
movlps
repnz
xchg
xor
fdivs
and
arpl
pop
int3
push
loopne
in
pop
inc
lds
inc
xchg
xchg
mov
inc
add
das
test
xor
push
xchg
xor
pushf
jns
mov
call
sub
mov
lret
pop
adcb
das
pop
xor
pop
mov
sub
xor
jecxz
sarl
mov
aaa
cld
aaa
sbb
push
adc
inc
jmp
popa
mov
xor
push
les
add
xchg
les
shll
push
loopne
cmpb
mov
xchg
adc
int3
lahf
mov
mov
lds
mov
push
mov
mov
test
add
jge
in
pop
stos
mov
scas
sub
leave
and
je
mov
lahf
test
add
scas
mov
pop
sub
cmp
mov
pusha
jl
shll
jmp
fcmovnbe
adc
dec
inc
jmp
lock
cmp
push
int
sbb
sbb
inc
or
loop
in
jp
out
jle
iret
xchg
ret
dec
subb
lock
fstpt
imul
cld
test
lods
xchg
jnp
mov
sbb
inc
out
jle
lret
inc
int
and
add
cmpsb
and
or
out
daa
mov
jg
rcrb
test
icebp
lds
movsl
iret
ret
jg
jmp
in
mov
mov
lods
rclb
loop
cltd
cli
push
jo
xchg
pop
xchg
cmc
cmp
test
sub
jae
jmp
fs
cld
xchg
insb
inc
push
pop
and
cmp
mov
in
mov
or
es
shlb
jo
jle
jns
rcr
mov
test
mov
sti
and
scas
xchg
data16
sahf
push
fisttpl
or
mov
adc
pop
jge
aaa
mov
in
orl
test
adc
xchg
fcoms
orl
xchg
test
xchg
roll
js
mov
movsbl
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
jmp
ds
jnp
pop
and
popf
cmc
inc
in
dec
xchg
bound
mov
adc
adc
in
inc
lahf
out
sbb
xchg
les
sub
mov
fxtract
mov
sahf
imul
aas
mov
xchg
ljmp
loop
loope
aas
stos
cmp
insl
out
jae
stos
lahf
cld
stos
pop
jnp
adc
sbb
lods
mov
imul
jcxz
pop
or
rorb
mov
pushf
lahf
in
ds
enter
add
lahf
xchg
mov
icebp
andnps
lret
cmovp
push
aas
and
xor
and
adc
cmpsl
sbb
dec
call
mov
cmc
xchg
sahf
and
je
xor
mov
dec
mov
push
push
bound
pop
call
lret
push
idivl
push
jno
fwait
xchg
jne
mov
mov
adc
cmpsl
adc
add
fnstcw
push
fisttpll
sbb
xor
jne
jno
mov
cmp
out
lods
ja
dec
adc
cmp
out
add
cmp
push
jp
pop
lcall
mov
pop
add
out
jg
jo
mov
xor
inc
fisubrl
gs
cmp
cmp
orl
sahf
outsl
lret
and
clc
call
in
daa
pop
pop
push
add
lods
mov
pop
aam
out
dec
outsb
ret
fistpl
in
fwait
mov
scas
repnz
je
dec
enter
sahf
into
les
insb
mov
mov
cmc
sub
sahf
xchg
hlt
cmpsl
int
loope
gs
xchg
push
aas
clc
dec
push
leave
sbb
cmpsl
inc
out
fsts
sub
push
pushf
rcrb
xchg
imul
push
leave
fwait
pop
mov
push
push
push
jmp
add
cmp
jg
data16
sub
popf
inc
jne
imul
pop
dec
dec
jl
xchg
mov
scas
mov
data16
fdivl
popf
ljmp
jle
popf
lret
out
aaa
js
je
imul
or
add
or
or
movsbl
cmp
je
mov
movsbl
mov
mov
xor
xor
mov
call
mov
mov
mov
jmp
out
xor
and
mov
rcrb
sahf
adc
adc
dec
push
int3
cmp
and
jg
or
push
loop
scas
in
adc
iret
cmp
inc
stos
fs
pop
ljmp
cmp
mov
mov
mov
jnp
add
xchg
pop
dec
xchg
sti
mov
mov
sbb
add
rcrb
jge
mov
out
sbb
popf
pop
sbb
psrlq
shlb
fsubs
pop
jae
pop
lds
pusha
leave
movsl
addl
inc
jp
push
loop
push
adc
and
xchg
das
sub
aam
xchg
ljmp
popf
inc
jo
cltd
jecxz
mov
dec
enter
into
js
push
inc
jnp
or
sub
stos
orb
test
les
lret
lret
stos
mov
cli
lods
jmp
mov
cmp
enter
xchg
enter
ljmp
scas
mov
into
imul
nop
addr16
push
mov
ljmp
push
nop
addb
xchg
shr
and
vmread
dec
test
jge
sbb
inc
mov
xor
insb
jnp
pop
jnp
or
jnp
outsb
scas
or
adc
xorl
shll
mov
sbb
pop
jbe
mulb
test
test
inc
dec
cmp
movsb
or
jmp
or
mov
sub
ljmp
mov
addl
lea
or
pop
stos
xor
xchg
loopne
pushf
inc
jno
mov
cmp
xchg
mov
adc
jg
adc
inc
jno
in
faddl
arpl
push
sbb
sub
push
xor
mov
or
sub
in
ds
mov
int
mov
andb
mov
pop
ljmp
subb
cmp
and
mov
loop
xor
xor
sub
lret
sub
mov
pushl
xor
mov
jmp
call
push
pop
popa
cwtl
daa
punpckhdq
loop
mov
int3
movlps
mov
xchg
loopne
fisubl
or
sbb
sub
aam
lret
sbb
push
rol
scas
in
add
or
pop
adc
pop
xchg
fistl
stos
cli
mov
aam
and
push
lahf
int3
scas
ret
hlt
jge
imul
hlt
cltd
popa
push
icebp
inc
imul
adc
dec
in
lds
nop
stos
push
jecxz
xor
jno
mov
mov
stc
loope
jg
mov
jmp
rcl
fcmovb
fucomp
mov
inc
or
cmp
mov
cmp
pusha
cmpsb
mov
sahf
jecxz
stos
mov
insb
and
mov
repnz
movsl
jne
xor
test
xor
ret
mov
inc
js
xchg
mov
xchg
jb
jne
push
cmp
sub
rcr
jbe
add
xor
jecxz
xchg
mov
xchg
int3
add
and
ja
mov
loopne
sti
loop
inc
lahf
fldenv
es
out
mov
and
test
scas
xor
mov
or
push
int
pop
cmp
shrl
cli
daa
jmp
fistpll
push
sub
xchg
ror
sub
roll
pusha
xor
jns
dec
sbb
xchg
push
pop
mov
xor
subb
xchg
xor
cmpsb
jns
lahf
push
cmp
ss
repz
sbb
lods
sub
stos
mov
jo,pt
mov
dec
pusha
cli
cmp
jle
fisubrs
int3
fcmovu
sub
and
pop
mov
xor
in
pop
or
rorb
insl
or
inc
push
mov
scas
or
rorl
in
push
push
and
jmp
pop
jae
rol
cld
inc
shlb
nop
hlt
push
test
pop
je
mov
sbb
ss
jns
enter
into
xor
ds
int
mov
mov
dec
outsb
fucompp
push
in
inc
ss
mov
mov
add
or
in
add
or
or
mov
movsbl
cmp
je
jmp
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
movsbl
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
movsbl
jmp
fwait
xchg
out
cmp
aaa
sbb
lods
fists
stos
inc
xchg
adc
adc
push
arpl
push
leave
lock
test
jp
in
or
outsb
aaa
ss
add
enter
leave
sub
cwtl
push
xchg
insb
push
outsl
test
je
cmp
in
cmp
bound
dec
test
mov
lock
popf
add
or
cmp
inc
mov
and
push
lahf
loopne
mov
adc
cmpsb
fmull
mov
mov
xchg
jbe
jb
fs
jmp
fsubs
sbb
jb
jne
movsl
imul
fiaddl
or
dec
lahf
add
shrl
ljmp
les
inc
lcall
es
and
mov
sub
sub
xor
mov
push
in
stc
inc
das
pop
push
push
movsl
mov
std
xor
push
loopne
mov
cmpsb
rcrb
sbb
rcr
inc
adc
test
arpl
data16
idivb
fldenv
stos
test
loop
push
scas
cmp
mov
test
cli
pushf
add
mov
aam
js
movsb
mov
inc
les
imul
push
jo
pop
pop
iret
pusha
cmp
mov
inc
mov
sbb
dec
add
push
mov
push
mov
jnp
cmp
sub
cwtl
repnz
push
pop
js
test
xor
add
ret
es
adc
dec
ret
insl
adc
loope
mov
aad
sti
adc
popa
sub
push
mov
pop
jecxz
loopne
pusha
loopne
int3
pop
pushf
cmpsl
mov
mov
mov
mov
arpl
lret
ret
sbb
icebp
lods
cmpsl
fcmovnb
sub
add
dec
orl
popf
mov
andl
sub
push
jb
push
cmp
sub
gs
or
sbb
cmc
cwtl
xchg
adc
adc
in
lcall
cmp
cmpsb
push
stos
xor
and
jle
lock
faddl
push
mov
cmp
jne
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
jmp
jmp
stos
f2xm1
mov
sahf
cmpsl
fldpi
xor
stos
inc
insl
dec
mov
int3
movlps
cwtl
adcl
fcmovnu
or
jl
lods
xorl
dec
leave
add
mov
push
fnstsw
roll
insb
imul
inc
movsb
negl
jno
int
pop
aas
jb
mov
ds
shll
lret
stc
add
sub
popa
pop
dec
cmpsb
repnz
sarl
loopne
pop
add
and
xor
mov
adc
mov
repnz
lahf
cmp
in
das
test
shlb
rcll
dec
lods
cmp
cmpsl
das
leave
out
pop
sbb
incl
push
fiadds
das
cmpsl
out
push
adc
movsb
imul
mov
outsl
jmp
xchg
sbb
and
out
push
ljmp
inc
mov
repz
in
cmp
popf
xchg
mov
xor
out
test
mov
outsl
imul
cmp
lods
inc
ljmp
cwtl
adc
xchg
or
ds
mov
nop
and
lods
pop
movb
imul
test
movb
jno
mov
out
std
shlb
cmp
vrcpss
sub
in
scas
and
xor
rolb
das
lret
lcall
fsubrs
fxam
dec
aam
enter
les
lods
lea
sub
sahf
int3
lahf
icebp
leave
inc
push
lods
popf
lcall
jae
fcoms
cmpsb
pop
mov
cld
sbb
fwait
rorl
cmpsl
jle
jecxz
out
xchg
dec
adc
mov
insl
pop
push
jle
mov
ficomps
inc
xchg
loop
and
roll
mov
les
neg
fs
cmp
loop
push
add
push
gs
push
stc
add
and
mov
add
testl
popl
repz
call
not
cwtl
jp
test
dec
xchg
aam
lcall
outsl
and
add
dec
loopne
repnz
shl
sbb
imul
pushl
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
add
mov
jmp
jmp
mov
mov
xor
xor
mov
call
mov
mov
jmp
push
loope
dec
cmp
push
fsts
es
mov
int3
movlps
pop
and
fwait
div
dec
push
add
mov
sbb
sbb
not
adc
adc
jmp
lods
adc
cltd
js
xchg
dec
push
stos
ja
arpl
dec
in
mov
stos
imul
jb
adc
xor
enter
les
sbb
pop
mov
cld
cmpsb
xor
xchg
pop
ljmp
jl
ret
outsl
sub
cs
pop
jle
add
enter
add
pop
or
xchg
int
in
mov
ja
mov
call
shll
dec
jl
sbb
lcall
push
leave
push
sub
in
fwait
inc
jp
or
xchg
negl
xlat
push
add
cmc
cmp
out
test
pushf
push
pop
xchg
lret
push
pop
xchg
cmpsl
jmp
cmc
jne
mov
mov
aas
jo
or
call
gs
add
xor
add
mov
inc
sbb
sahf
scas
pop
add
movsl
pop
lds
and
mov
push
ljmp
mov
sub
nop
rcr
push
dec
lahf
inc
les
fcmove
jmp
jnp
adc
stos
popf
pushf
jecxz
rclb
and
dec
xchg
xor
adc
test
or
dec
mov
inc
iret
aaa
testl
movsb
out
mov
sub
pop
in
cmpsb
mov
cmp
in
sub
dec
aaa
mov
pop
sub
arpl
scas
and
mov
inc
or
loop
pop
shlb
ja
cmpsl
xchg
addr16
push
mov
dec
filds
call
je
xor
enter
sahf
nop
jne
mov
jp
cmp
rcll
sti
dec
xchg
sub
push
lock
mov
mov
lods
jge
mov
fcmovb
sub
mov
mov
xor
xor
mov
call
or
or
mov
mov
mov
cmpl
je
mov
mov
movzwl
mov
mov
mov
jmp
jmp
cmpl
jne
xor
jmp
mov
add
mov
movl
cmpl
je
cmpl
je
mov
shl
mov
movl
sub
mov
movl
mov
cmp
je
mov
mov
mov
mov
mov
mov
mov
inc
mov
jmp
movl
push
jmp
mov
mov
ret
cmpl
movl
movl
jmp
mov
jl
push
push
pushl
pushl
pushl
push
push
push
push
push
pushl
pushl
pushl
pushl
call
adcl
orl
sbbl
xor
and
movl
sbb
push
adcl
push
movzwl
and
mov
adcl
or
movl
jne
or
mov
mov
cmpl
movl
movl
jmp
movl
mov
jle
push
push
push
push
pushl
pushl
push
call
sub
and
inc
notl
or
or
xor
div
mov
mov
div
mov
jmp
mov
mov
mov
mov
jmp
mov
sub
push
cmpsb
push
outsb
test
adc
mov
or
push
into
dec
dec
and
enter
add
mov
mov
cwtl
or
ret
xchg
cmp
aad
dec
push
adc
mov
inc
adc
mov
xor
int3
push
cs
cmpsl
imul
pop
negb
pop
mov
movsl
int3
add
cmp
in
sbb
ja
lods
adc
mov
mov
jb
sub
or
pop
rorb
aaa
lcall
mov
insl
out
add
shll
and
aas
and
mov
xchg
jmp
fists
mov
mov
mov
dec
andl
xchg
imul
sbb
sbb
pusha
sub
icebp
xor
push
mov
mov
xor
mov
outsl
cmpsl
lahf
xor
ja
fbstp
sbbb
xor
mov
and
mov
xchg
add
mov
sub
jne
test
xchg
xchg
inc
pop
adc
iret
jb
pushf
cltd
addr16
stos
dec
call
add
inc
divl
out
adc
in
pop
add
mov
dec
cs
adc
loop
jl
xor
lret
sti
sub
pusha
mov
ret
int3
cmc
xchg
mov
mov
xor
or
insl
dec
or
lret
scas
jne
or
icebp
xor
mov
adc
ror
ljmp
xor
push
mov
lret
mov
aad
popa
or
fwait
mov
popa
jbe
loope
and
cmp
popa
out
imull
stc
out
lods
stos
add
pop
loopne
popf
inc
sub
sub
addr16
xor
ret
push
push
rcrl
imul
ret
sub
pop
push
aam
subb
fs
popa
xchg
das
xchg
mov
scas
jmp
filds
in
xlat
scas
pop
lods
popf
sbb
dec
sahf
dec
icebp
js
movb
push
popf
mov
outsl
int
repz
sub
push
inc
push
lods
mov
xchg
lea
pushf
mov
adc
sbb
xor
test
pop
rcll
inc
sbb
fcomps
inc
in
sub
pop
clc
cmp
xchg
and
mov
andl
cmp
sbb
in
adc
in
fnstenv
dec
fwait
pop
pop
in
cmp
pop
and
xor
rcll
into
test
dec
pop
mov
jl
cmc
and
push
pop
enter
loopne
pop
loopne
jb
xchg
inc
aaa
push
mov
stos
clc
push
xor
repnz
mov
in
or
mov
movsb
jg
lods
or
mov
mov
add
cmp
loopne
jb
les
or
mov
sbb
push
out
sbbl
scas
mov
lods
mov
pop
and
testb
mov
mov
scas
shrb
dec
xchg
call
addr16
and
lcall
into
pop
cmpsl
popa
les
dec
jl
push
xor
out
xor
push
or
inc
es
shr
jmp
les
jno
sbb
and
lret
push
fwait
dec
mov
push
adc
adc
push
call
pop
lcall
sahf
adc
and
push
fdivrp
sbb
mov
out
pop
ss
mov
lea
cli
jecxz
jae
xchg
test
fldcw
xor
jmp
in
pop
adc
adc
stos
jne
xor
jo
insl
mov
dec
scas
push
ljmp
xor
cmp
inc
adc
jnp
xchg
and
daa
adc
cmp
ljmp
lods
daa
imul
lahf
dec
sbb
xchg
push
inc
mov
xchg
fsin
loop
incb
sti
nop
mov
mov
lds
jo
adc
mov
test
xor
cmp
xor
jmp
scas
adc
cld
test
lds
mov
xchg
xor
lret
loopne
imul
adc
mov
push
sahf
test
cmp
lcall
clc
cmp
daa
fcmovnbe
jnp
outsb
cmp
int3
mov
mov
dec
mov
aaa
mov
cld
loope
loopne
cmp
insb
iret
and
and
pop
ljmp
jno
sub
lods
lock
mov
and
lock
cmc
and
pop
sub
adc
sarl
or
mov
cwtl
add
adc
test
fsubl
jg
sub
dec
xor
dec
mov
and
jno
test
pop
and
mov
jp
sbb
adc
pop
inc
xchg
incl
jno
push
sbb
repz
repz
xchg
push
insb
mov
inc
xor
sub
push
lea
xor
movsl
cmc
sbb
jle
push
loopne
add
and
shlb
push
push
insl
loop
pop
out
arpl
inc
jo
adc
call
fs
xor
and
loope
repz
cmpsl
or
add
xchg
xor
xor
or
mov
add
jne
xor
js
sbb
call
jmp
pushf
xor
jmp
hlt
fmuls
daa
and
out
xchg
ja
imul
mov
mov
jecxz
pop
jge
sub
mov
sbb
or
add
test
pop
jb
pusha
add
adc
aad
inc
stc
xchg
adc
dec
stc
mov
je
mov
xchg
pushf
mov
mov
pop
shll
into
inc
nop
push
aam
dec
jmp
xchg
jl
fcoml
adc
das
mov
push
and
cwtl
arpl
popa
sbb
mov
jmp
pop
fimull
push
sub
jne
lcall
int3
cltd
leave
cld
je
adc
mov
mov
dec
call
sarl
outsb
out
cmp
mov
jmp
and
leave
test
sub
insb
adc
cltd
es
and
out
fsubl
jmp
aas
and
ret
sbb
xchg
hlt
or
lahf
fadds
push
push
mov
mov
sbb
dec
adcl
pusha
in
fdivl
rcr
shr
rcr
or
jne
div
mov
mull
mov
mov
mul
add
jb
cmp
ja
jb
cmp
jbe
dec
xor
mov
pop
pop
ret
subl
movl
cmpl
movl
je
sbb
add
mov
movzbl
mov
pop
pop
pop
leave
ret
movl
cmp
movl
jae
movl
cmp
jae
shld
movl
shl
ret
mov
xor
subl
and
shl
ret
xor
xor
ret
