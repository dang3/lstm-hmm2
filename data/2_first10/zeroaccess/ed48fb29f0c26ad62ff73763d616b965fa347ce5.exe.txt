push
mov
sub
mov
mov
mov
sbbl
sub
push
mov
mov
mov
sbb
add
mov
orl
orl
mov
mov
inc
mov
adcl
mov
sub
mov
mov
sbb
xor
mov
adc
orl
orl
lea
mov
add
mov
mov
mov
xorl
add
xor
or
mov
and
jmp
and
xor
sbb
mov
and
push
push
push
cmp
test
mov
dec
popf
add
rolb
push
mov
testl
movsl
dec
sbb
xor
pop
cmp
dec
rcl
inc
inc
push
jl
pop
mov
dec
dec
dec
rorb
or
mov
daa
bound
scas
test
mov
pop
push
inc
fdivs
imul
mov
jecxz
add
cmpsb
inc
fucomp
loopne
mov
hlt
push
rcll
out
jmp
rol
lret
mov
xor
push
and
inc
fiaddl
sti
inc
push
sbb
xchg
ds
sbb
add
outsb
popa
sub
jns
pop
adc
push
push
mov
or
cmp
adc
add
loopne
pop
mov
cmc
cwtl
and
pushf
outsb
andl
mov
xor
cmp
ficoms
xchg
std
flds
dec
imul
stos
adc
inc
fbld
movsb
cmpsl
mov
dec
mov
inc
icebp
cmp
mov
cmp
mov
orl
shr
gs
sbb
jo
dec
popf
or
pop
aaa
push
xchg
std
lret
pop
adc
aas
int3
xlat
ret
inc
test
fs
cwtl
daa
fs
leave
andb
adc
mov
shll
cmp
lret
mov
inc
int3
outsb
icebp
dec
cmpsl
mov
pop
inc
fnstsw
push
and
pushf
xchg
iret
ficomps
lods
or
aas
lahf
and
mov
sub
inc
pop
adcb
scas
fwait
rcrb
leave
bound
and
jbe
sahf
lds
lret
jl
xor
pop
subb
jle
mov
xchg
jmp
mov
sbb
sti
pusha
or
xchg
and
xor
cmp
pop
xlat
mov
ja
rclb
mov
sbb
lahf
data16
and
out
xlat
sub
rclb
aam
repnz
mov
pmovmskb
ficoms
or
xor
loop
es
inc
shlb
shlb
mov
stos
iret
andb
mov
mov
jecxz
aad
es
cld
data16
jbe
hlt
loope
jg
jge
xchg
cmp
sbb
dec
pop
jmp
xor
lcall
adc
xchg
xchg
cmpsl
sub
int
sub
rcrl
xor
loope
outsl
in
fdiv
jg
lret
aas
rcl
mov
inc
ret
pop
shrb
jp
mov
or
lods
lds
loope
mulb
es
test
mov
mov
mov
pop
call
das
jg
add
jge
cmpsl
jns
mov
push
loope
jo
and
jo
push
imul
sti
sbb
sbb
dec
scas
mov
push
pop
inc
jecxz
test
js
shll
xchg
inc
rolb
loope
sub
or
scas
daa
xchg
add
outsl
inc
sub
ret
mov
jecxz
dec
inc
jbe
cmp
jp
or
insb
aad
call
lcall
mov
push
in
pop
cli
out
jns
shlb
lea
in
mov
fidivl
iret
lcall
mov
pop
or
in
push
adc
mov
jle
movsb
inc
xor
test
push
mov
ret
cmp
das
inc
inc
fsubr
mov
or
imul
xor
ljmp
rcll
push
or
jl
push
inc
jno
out
cmp
jno
mov
fs
cmp
out
mov
or
loope
aaa
sub
lock
mov
add
and
xor
dec
enter
jle
mov
popa
in
sti
leave
push
hlt
fstpl
jo
insb
sub
arpl
lcall
xchg
test
lods
nop
mov
jbe
inc
cltd
mov
in
shld
inc
cmp
xor
jno
andb
out
mov
movsl
sub
mov
and
rcll
mov
in
int
xor
push
and
cmpsb
out
fs
mov
lock
out
int3
hlt
stos
in
fnstcw
cs
aaa
push
test
fstps
sbb
popa
xor
push
mov
inc
pop
mov
addb
loop
cmc
cmpsb
push
push
pop
outsl
mov
orl
and
xchg
sbb
sarl
negb
stos
enter
add
and
dec
pop
pand
mov
fldl
sti
fs
add
xchg
in
aaa
test
and
push
pop
inc
mov
mov
mov
insl
movb
mov
rolb
or
or
enter
pop
inc
cmp
xchg
dec
mov
xlat
negl
out
pop
add
cmp
in
push
test
xchg
mov
add
mov
movsl
mov
addr16
mov
lods
jae
push
popa
mov
xor
mov
add
mov
jmp
fdivrs
lds
xchg
pop
and
add
push
push
cmp
add
out
cmp
cmpsl
mov
dec
out
sarb
test
sbb
popa
mov
dec
cli
loopne
aam
mov
mov
add
mov
dec
mov
imul
testl
sub
incl
mov
inc
add
pop
xchg
rcl
inc
ss
mov
test
adc
fistl
mov
cmpb
repz
scas
mov
adc
stc
subb
jne
rcr
pop
repz
iret
sbb
js
lock
push
mov
popf
sub
maskmovq
divl
inc
jae
push
add
mov
ficoml
ljmp
aad
les
or
es
inc
outsl
enter
movl
mov
cmc
aaa
out
xchg
mov
mov
pop
mov
add
les
inc
leave
add
aas
xor
xor
xor
or
jae
xchg
mov
fiaddl
mov
rep
push
popa
mov
hlt
push
pop
xchg
lds
cmp
mov
jnp
scas
out
ficomps
call
push
sub
xchg
fldl
inc
push
cld
in
fidivrl
in
mov
inc
lret
popf
xchg
lds
les
xchg
lods
imul
pusha
ret
dec
xor
xor
fldcw
cmp
jns
cmp
test
frstor
push
dec
pop
pop
fwait
or
sbb
jge
aam
adc
ja
out
inc
push
sbb
dec
adc
add
add
fcmovne
in
jno
dec
movl
pop
lahf
rcll
mov
xor
mov
cmpsl
jmp
outsb
adc
push
fstpl
push
jb
loope
pop
xor
leave
adc
xchg
out
xor
mov
test
mov
inc
adc
fsubl
or
ds
mov
dec
lods
pop
jecxz
mov
mov
inc
sub
dec
stc
push
mov
hlt
cli
cmp
jl
mov
lret
xchg
jecxz
inc
push
sahf
aam
mov
cmp
outsl
mov
push
movsl
cli
rolb
push
jno
sbb
enter
sti
stc
scas
nop
bound
mov
ret
orl
mov
push
or
test
jno
out
jge
inc
insl
push
xlat
movsb
in
adc
ss
fwait
pop
cld
mov
push
roll
sub
adc
aam
mov
jg
fmull
xlat
mov
imull
lahf
jecxz
dec
xor
pop
ss
sub
mov
xchg
addr16
sub
push
dec
ret
loope
mov
xor
jns,pt
fcomp
cmp
lock
add
inc
insl
inc
mov
into
pop
xchg
lcall
mov
xchg
fcmovnu
stc
add
xor
ljmp
fcomps
mov
cmp
inc
ds
loopne
out
arpl
sbb
and
xor
mov
loop
and
imul
cmp
fs
jmp
aas
cmpsb
nop
xlat
data16
add
mov
or
loop
cmpsl
mov
shrw
iret
pop
jl
add
push
repz
lcall
sbb
inc
ss
rclb
sbb
test
pop
or
sub
jns
int
jle
jno
es
and
loopne
jge
fsubr
xlat
jecxz
addl
lea
jg
xchg
xor
faddl
fildl
enter
sub
insl
add
mov
outsb
pop
iret
fisubl
mov
or
and
xor
cmp
cltd
jne
cmp
shrl
push
mov
pop
sub
jecxz
fcmovne
or
jg
negl
push
cmpb
jmp
mov
test
lcall
mull
mov
inc
ljmp
mov
enter
fs
js
jmp
mul
shlb
iret
dec
sbb
jns
out
jmp
loop
add
mov
decb
js
xchg
shr
mov
inc
pand
movsb
call
ret
enter
popw
inc
dec
test
subb
nop
sub
dec
ljmp
push
mov
mov
aam
dec
xor
sub
add
inc
lea
insl
lret
int
dec
cli
mov
jp
mov
mov
xor
mov
mov
nop
mov
jnp
xchg
daa
pop
pop
bound
mov
mov
push
sub
add
or
xchg
mov
lds
fsubrl
pushf
lahf
test
fwait
sbb
mov
and
jp
icebp
and
pop
jmp
sub
xor
repnz
imul
test
and
cmp
jle
mov
adc
mov
dec
sarb
dec
pop
mov
mov
sbb
lods
enter
add
rorb
push
sbb
movl
add
rol
add
mov
add
or
adcl
mov
neg
movl
movl
cmpl
movl
movl
movl
movl
jmp
movl
mov
je
push
pushl
call
andl
subl
and
orl
xorl
mov
sub
movl
movzbl
or
jmp
in
in
testl
daa
sbb
push
push
push
cmp
pop
adc
into
or
cmp
popa
xlat
inc
jmp
mov
sbb
repz
dec
je
dec
imul
xchg
or
and
fwait
xchg
leave
mov
xchg
add
sbb
cmpsl
cwtl
push
xlat
sub
pop
pop
xchg
xchg
and
push
pushf
push
pop
or
jb
shr
clc
insl
cmpsl
mov
jo
fs
mov
jmp
repnz
jo
int
jno
cmpsb
mov
dec
movsb
jns
jns
sbb
loopne
ffreep
mov
xchg
mov
mov
inc
jp
into
jne
imul
insb
andb
daa
xor
cmpsl
mov
cmpl
shl
dec
repz
push
and
sbb
pop
or
jb
stos
pop
in
cli
jno
jbe
jo
jo
adc
push
adc
mov
sub
outsb
insb
mov
lret
jmp
mov
sub
sub
pop
clc
jl
aam
das
popa
ja
xlat
andl
mov
xor
or
dec
ret
test
rcl
in
add
pop
xor
sarl
add
push
mov
dec
cmp
std
stos
iret
ja
xor
or
subl
es
leave
rclb
ret
adc
push
int3
rcrb
gs
fucomip
inc
fdivl
loop
enter
insl
push
sbb
pop
ja
jno
clc
pop
shrl
xchg
cwtl
popf
push
fstps
xchg
aam
les
adc
dec
xchg
dec
repz
mov
call
lods
pop
dec
shl
cld
ror
pop
pop
popa
mov
pop
inc
pusha
ja
jmp
ret
repnz
inc
push
sbb
mov
fs
stc
push
add
hlt
or
inc
stos
inc
loop
in
adc
popf
pop
push
xlat
enter
pop
or
icebp
and
and
test
mov
lcall
xchg
je
push
mov
cwtl
mov
sub
add
adc
inc
mov
inc
or
stc
mov
addr16
in
push
fwait
dec
clc
xor
and
outsb
and
push
inc
adc
mov
adc
pop
pop
test
out
enter
ja
sar
cmp
sub
int
cmpsb
loop
mov
jl
jo
add
aas
inc
stos
or
iret
std
mov
enter
xchg
cmp
add
lahf
mov
pusha
pop
or
loope
or
pusha
sub
fsts
gs
or
dec
pop
mov
int
clc
mov
push
mov
mov
fistl
add
fiaddl
test
mov
std
push
dec
icebp
adc
mov
aaa
shll
inc
mov
ret
inc
call
sbb
and
xchg
lods
mov
mov
dec
push
and
dec
mov
fildl
adc
test
sbb
cmpl
push
cmpsb
sbb
mov
test
or
scas
repz
mov
mov
mov
enter
push
or
sub
jae
lea
in
sqrtps
add
lahf
pusha
jb
xor
popl
sbb
cltd
gs
xchg
icebp
test
xchg
sbb
xchg
xor
sub
inc
and
inc
pop
add
jo
mov
mov
mov
aaa
push
adc
pop
lret
or
loope
out
and
cmpb
mov
in
mov
sahf
fsubs
add
call
arpl
cmpsl
xchg
and
sub
popa
les
movsb
imul
mov
sub
push
mov
push
inc
adc
outsb
in
adc
or
mov
mov
jp
dec
int
data16
bound
sub
pop
in
jns
xor
cmp
mov
dec
inc
mov
sbb
mov
sub
xlat
adc
popf
pushf
pop
mov
xlat
sub
les
mov
sbb
popa
stos
mov
jmp
push
arpl
nop
pop
sbb
mov
rorb
or
loopne
add
ja
and
sub
sub
stc
test
ja
sub
int
loopne
sub
cld
rorl
push
mov
ret
gs
sbb
push
jl
xchg
mov
inc
mov
push
lods
jge
aam
daa
push
and
rcrl
sub
add
je
push
or
aaa
push
mov
mov
xchg
jbe
sbb
cwtl
push
in
daa
je
or
cmp
insl
sti
jnp
inc
cmc
cwtl
out
pop
cmp
or
xor
fisttpl
mov
pop
push
xchg
into
lcall
pop
sub
dec
test
jne
into
fs
add
daa
cmc
fbstp
and
jb
ljmp
daa
std
js
xchg
pusha
sti
loope
bound
repz
cmp
scas
rcl
enter
int3
dec
daa
popa
imul
je
pop
mov
stos
scas
scas
das
xor
xchg
mov
in
les
insb
out
adc
fisttpll
inc
xchg
mov
add
movl
and
jmp
loope
mov
scas
sbb
dec
lret
pop
gs
mov
add
push
sub
leave
pop
sub
cmp
jle
and
xor
out
arpl
mov
addr16
cmp
pop
addb
lahf
dec
jb
xor
jp
mov
loope
addb
fstpl
mov
push
int
mov
aad
pop
xor
xor
cmp
push
cmp
std
push
push
mov
js
push
cltd
inc
sub
mov
sub
jno
out
pop
pushf
xor
ja
mov
dec
push
test
push
leave
lods
add
loopne
imul
dec
adc
xor
mov
outsl
dec
xor
stos
lret
jp
fisttpll
add
mov
jle
adc
jnp
push
in
mov
leave
lds
xchg
xor
push
out
mov
adc
das
fistps
in
imul
int3
cld
or
dec
or
pop
cs
cmp
stos
lea
mov
aam
lea
jbe
inc
icebp
stos
or
scas
fs
add
adc
xor
lret
push
lahf
int
mov
wbinvd
mov
cwtl
test
and
cmpsl
sbb
adc
sbb
lahf
pop
insb
cld
cmp
mov
into
jbe
mov
int3
xchg
lds
movb
mov
xchg
ret
scas
pop
or
cld
cmpl
push
mov
pop
sarb
stc
cmpsl
insb
loope
ficoms
lock
dec
push
mov
stc
ja
enter
push
nop
stos
push
lods
xchg
mov
movsl
sub
push
sti
fldcw
out
mov
cld
loopne
and
popf
sbb
jp
jno
dec
adc
mov
push
cmp
mov
dec
sbb
inc
inc
jbe
imul
std
xchg
loope
xchg
pop
mov
xchg
xchg
xchg
mov
mov
insb
sbb
shll
mov
jl
xchg
cmp
sub
pop
mov
and
pop
add
arpl
scas
adc
clc
inc
xchg
scas
mov
fcmovb
fldenv
mov
outsb
ret
ja
push
sbb
out
pmaddwd
push
cmc
push
and
jecxz
sbb
xchg
jae
mov
mov
mov
in
sub
pop
mov
pop
fdivl
vcvtdq2pd
and
push
or
dec
movsb
or
test
ja
mov
push
cwtl
or
dec
add
iret
pop
mov
pop
das
stc
lods
xor
push
popf
fisubs
xchg
rolb
cmc
out
imul
loope
insb
push
sbbb
scas
sbb
and
scas
jae
mov
dec
jg
inc
dec
cmpsl
subb
addr16
and
inc
imul
pop
sbb
mov
xorb
lods
push
jo
or
fs
sub
xor
rolb
and
dec
push
push
jae
ret
mov
aad
outsl
push
mov
pushf
xchg
push
inc
cmp
mov
or
out
int3
mov
sub
imul
inc
sub
jmp
add
mov
mov
data16
into
or
out
aad
pop
test
test
xchg
lret
sbb
std
aam
stc
cmp
fcoml
in
mov
mov
cmp
and
push
daa
fsubrs
les
sti
mov
movsb
negb
pop
shll
stos
inc
mov
and
mov
ret
jge
test
xlat
jge
cmpsl
cmp
std
jbe
int
std
scas
jb
cmp
xor
lds
cmp
ja
mov
fistpl
mov
scas
xchg
out
lea
stos
sub
scas
cmp
xchg
pop
loop
mov
adc
aas
cmp
inc
ljmp
mov
out
jb
cmp
mov
out
dec
lret
dec
xor
pop
movsb
sub
sbb
add
ss
adc
ds
mov
mov
cld
rcll
lret
add
add
lahf
and
cmp
dec
xlat
out
cmp
sub
jecxz
sbb
stos
ret
ljmp
sti
mov
aaa
jne
je
xor
adc
sub
and
jbe
in
pusha
and
call
xchg
jmp
cmp
inc
cmp
sub
inc
or
mov
gs
push
inc
lock
inc
mov
pop
xor
repnz
push
inc
or
and
pop
fiaddl
fdiv
ja
push
jle
fldenv
pushf
dec
call
jno
jno
lock
jbe
sub
jge
repnz
mov
mov
sub
jmp
daa
out
xor
rolb
outsl
outsb
dec
scas
shrl
xchg
jnp
xchg
or
daa
jmp
cmp
pushf
mov
into
out
xchg
mov
repnz
rol
sbb
fs
add
inc
xchg
sbb
add
movl
cmpl
movl
movl
jmp
notl
jg
push
pushl
push
push
push
call
xorl
adcl
xor
or
or
sbb
movl
mov
add
mov
movl
sbb
movl
movl
movl
jmp
cmpsb
in
ficoml
adc
stos
popf
pop
mov
in
push
cmp
sbb
out
clc
int
scas
sbb
xchg
cmp
adc
cmpsb
imul
insb
pop
shlb
xchg
cmp
movsb
cli
jg
ljmp
out
push
jnp
fadds
scas
pop
mov
imul
pop
mov
cmp
push
testl
sbb
xchg
xchg
repnz
movsb
jo
or
shrb
out
mov
mov
clc
pop
stos
lret
testl
mov
test
jl
ljmp
xchg
jns
mov
in
ss
sti
push
mull
sarb
enter
sbb
cld
lret
pop
mov
movsb
mov
push
je
arpl
sub
jecxz
imul
mov
pushf
mov
push
mov
push
cmp
sarb
frstor
stos
push
pushfw
icebp
pusha
pop
imulb
inc
in
insb
inc
mov
outsl
fistpll
mov
insl
aam
sbb
movsb
add
imul
xchg
or
push
push
adc
add
mov
jnp
xor
jae
and
mov
shll
cmp
and
and
pop
cltd
cmp
and
stc
out
dec
stc
mov
push
test
jbe
xor
test
test
dec
insb
mov
cld
rol
dec
iret
mov
sub
pop
ss
dec
clc
call
dec
stc
inc
jns
adc
or
test
dec
cmp
sub
int3
add
ficompl
jle
lea
scas
shl
pop
sbb
es
scas
sub
inc
into
xor
pop
lds
movsl
xchg
pop
jl
pop
int
mov
or
test
mov
out
pop
sbb
dec
pop
mov
icebp
mov
shll
fs
leave
arpl
jns
xchg
jns
fistpl
cltd
popf
jg
fistpll
stos
ja
pop
loop
mov
pop
aaa
xchg
into
dec
xchg
loope
jnp
mov
arpl
push
push
insl
mov
sbb
push
repz
pusha
lret
dec
lea
xlat
ljmp
popa
and
out
sub
cmpsb
push
test
mov
inc
xchg
cltd
xor
dec
stos
nop
imul
cmpsb
stos
dec
cmp
aas
adc
mov
pop
jl
clc
das
pop
bound
xchg
leave
mov
cmpsl
mov
and
or
mov
sarl
cmp
int3
bswap
sbb
in
je
dec
push
mov
or
and
mov
repnz
js
es
das
lock
scas
add
sbbl
in
clc
jne
cmpsl
dec
mov
jge
inc
push
dec
pop
dec
sub
add
xor
mov
mov
cmp
lods
std
lea
mov
pushf
aad
jb
xchg
inc
fimull
in
in
out
adcl
mov
xchg
inc
es
push
or
or
dec
pushf
mov
push
scas
jp
cmp
lret
stc
sub
mov
bound
sbb
jnp
adc
repz
lahf
stos
cmp
cmp
jno
call
mov
mov
lods
pop
mov
mov
add
shlb
push
out
push
movl
push
push
sub
test
enter
pop
incb
loopne
push
adc
push
addr16
pushf
lock
arpl
rolb
xchg
pop
add
fs
scas
adc
sahf
aaa
fbstp
push
or
and
addb
jnp
aas
and
lcall
xor
inc
jns
fsubrs
ljmp
mov
je
pop
jg
xlat
test
jo
popa
jle
ja
add
mov
aam
mov
das
and
sarb
xor
mov
xchg
xor
mov
ja
or
xor
fdivrs
addl
add
mov
sbb
scas
lcall
inc
in
clc
leave
gs
fidivl
in
sub
aaa
xor
xchg
xor
pop
pop
call
push
mov
scas
cli
aam
test
lods
pop
cmp
adc
mov
push
or
xchg
test
stos
fcom
aam
mov
shrl
dec
push
aam
xchg
scas
shl
ds
sbb
daa
mov
jl
rcr
int
fstpl
mov
and
push
mov
fistpll
xlat
sti
sbb
jg
inc
insl
or
lahf
mov
lret
pop
sbbb
and
fwait
cmp
ljmp
movl
ljmp
out
std
pop
or
stos
scas
test
loope
mov
inc
das
mov
push
jecxz
sbb
movsl
inc
sub
movsl
cmp
mov
sub
cmc
mov
dec
jae
jne
dec
jne
and
popf
push
imul
xor
adc
and
inc
add
sbb
ret
push
loop
fdivl
cmp
call
mov
inc
cwtl
inc
sbb
add
add
sbb
add
movl
cmpl
movl
movl
jmp
movl
not
jne
push
call
add
addl
addl
subl
adcl
add
addl
sub
movl
movl
movl
movl
add
movl
movzwl
and
movl
xor
movl
inc
movl
movl
cmpl
mov
movl
jmp
movl
not
jne
push
pushl
pushl
call
xorl
orl
andl
and
addl
decl
xor
cmpl
movl
movl
movl
jmp
mov
movl
jge
push
call
addl
subl
addl
sub
orl
andl
cmpl
movl
movl
jmp
mov
movl
jl
call
xorl
andl
orl
xor
mov
shl
mov
andl
push
incl
push
push
push
addl
call
mov
addl
mov
subl
xor
not
mov
add
mov
sub
sub
cmpl
movl
mov
movzbl
mov
jmp
movl
mov
jl
push
push
pushl
call
xor
or
mov
sbb
sbb
mov
add
mov
sbb
movzbl
or
mov
mov
mov
mov
xor
lea
jmp
out
decb
lock
sub
loope
push
cmp
xchg
fwait
push
mov
loopne
aam
cmp
jbe
popf
test
loop
mov
and
jp
mov
mov
cmp
push
js
cli
in
stos
inc
mov
int3
jo
repz
js
int3
setl
sbbl
jbe
shl
loop
pusha
lds
add
push
ja
stos
dec
jge
ja
cmp
or
mov
add
push
jmp
in
ds
cmp
mov
mov
out
dec
aas
add
push
out
xor
ret
xlat
lahf
movsl
dec
iret
add
jns
pop
cs
out
insb
aam
push
stos
inc
inc
inc
cmp
loop
push
sub
popf
jnp
lcall
mov
dec
stos
out
sbb
rcrl
leave
adc
jp
cmpsl
mov
cltd
adc
jb
pushf
negl
call
and
pop
push
xor
cmc
dec
fs
loop
stos
into
pop
fcomps
out
and
push
add
dec
test
xor
jge
hlt
push
or
fists
imul
dec
push
iret
aam
sub
shlb
stos
test
or
fidivrs
pop
and
popf
stc
inc
sbb
fcomps
dec
rsm
mov
mul
outsb
aaa
xor
adc
cld
push
push
into
sub
ret
mov
cmc
sbb
outsb
xchg
int
and
mov
and
push
push
daa
cmc
xchg
lds
add
mov
or
test
sub
add
lods
jp
out
in
cmp
repnz
mov
sub
pop
xorb
stc
jmp
jns
popa
push
sub
dec
jno
es
cmc
bound
fists
ja
cltd
and
dec
xor
mov
rorl
and
mov
push
or
mov
pop
and
shrl
aad
mov
or
add
inc
int
adc
or
dec
add
push
frstor
mov
subl
push
fsubl
shll
aad
sub
ljmp
test
push
int
pop
std
pop
loop
cmp
jb
flds
mov
sbb
out
addr16
fldl
mov
sub
mov
inc
xor
out
mov
insb
add
lock
gs
fmull
mov
cld
in
or
scas
lods
push
mov
stos
sbb
lret
sbbb
push
loopne
cli
mov
mov
sbb
in
aas
push
repz
mov
mov
ficoms
pop
sub
pop
leave
movsl
mov
aaa
pop
stos
fwait
mov
fcomps
adcb
mov
sub
les
fdivl
jns
call
outsl
or
lahf
jp
add
iret
popf
cmp
fs
inc
aas
xchg
test
or
inc
and
add
push
movsl
dec
clc
popf
les
cmpsl
mov
int
or
push
inc
push
lret
jb
push
sti
mov
lret
cmpsb
clc
imul
flds
popf
repz
push
daa
jno
add
jg
vpaddq
jne
fs
jp
xchg
and
pop
in
push
jno
add
inc
lret
fnstenv
ret
scas
lcall
mov
adc
add
ror
test
cmp
out
out
xchg
or
popf
cmp
pop
or
out
aad
mov
add
pop
jmp
add
cmp
mov
sbb
roll
or
mov
add
xor
cmp
mov
sarl
fsubl
cmp
ss
and
leave
xor
push
xlat
lcall
inc
adc
pushf
push
add
imul
into
aas
push
mov
lea
mov
mov
mov
bound
cmp
in
sbb
pop
inc
imul
or
mov
xchg
popa
sub
xchg
fdivl
dec
and
lds
jno
inc
stos
adc
pop
sub
jno
cmc
stos
jle
mov
test
jne
leave
arpl
add
scas
sbb
jecxz
adc
jecxz
lea
hlt
repz
or
jecxz
cs
push
xor
icebp
mov
push
adc
push
adc
pop
addb
ret
push
popf
xorl
test
int3
cwtl
fcompl
jns
ret
clc
jmp
icebp
roll
pop
mov
mov
dec
aas
sbb
movsb
xchg
leave
pop
add
movsl
sbb
popf
fldenv
dec
mov
push
jmp
jae
add
scas
xchg
sti
push
dec
imul
loopne
out
lods
inc
or
add
loope
rcl
adc
inc
adc
jecxz
jg
sbb
add
lods
cmp
xrelease
sbb
sbb
imul
sub
add
adc
mov
movzwl
jmp
movl
jg
pushl
call
add
xor
subl
sub
or
xor
mov
orl
or
and
mov
adc
mov
mov
adcl
or
adcl
xor
cmp
jne
andl
mov
subl
mov
and
shrd
shr
sbb
mov
and
mov
shl
addl
xor
subl
jmp
add
sbb
sbb
clc
sbb
jb
xlat
mov
je
xlat
push
push
cmp
push
cli
out
sahf
jmp
ret
loop
test
dec
xchg
sbb
lea
aas
ret
scas
jg
adc
daa
sub
shll
addb
adc
sub
mov
loopne
sub
cltd
xlat
pop
xchg
mov
scas
das
mov
sahf
aam
lret
insb
fbstp
cmp
cli
inc
cltd
push
scas
xchg
inc
mov
mov
push
push
push
or
popf
cmp
repnz
and
daa
aad
cmpsl
jb
fidivrs
scas
push
jbe
cmpl
cmc
insb
dec
sar
stos
popf
mov
push
pop
xorb
jno
cmp
imul
xchg
dec
ds
pusha
scas
std
mov
sub
pop
mov
jle
cmp
pop
insb
xor
data16
out
cmp
sbb
inc
mov
xchg
dec
insl
arpl
repnz
stos
push
or
dec
lods
dec
cs
mov
jae
jp
ss
push
fwait
mov
fildll
lret
rcll
push
mov
dec
ja
sub
pop
imul
ret
adc
bnd
into
dec
dec
or
xlat
mov
inc
ljmp
fcmovnbe
jmp
int3
lret
aad
dec
xor
cmp
xor
test
loop
push
push
jle
jne
push
inc
cmpsb
dec
pop
xor
add
sbbl
mov
aas
js
jbe
test
xor
loope
lds
es
cmp
test
mov
jge
test
fwait
shr
loopne
mov
lret
mov
jo
inc
cli
cs
test
pop
cmpsb
cmp
es
ret
xchg
ljmp
lahf
test
jle
clc
test
je
sbb
and
mov
dec
push
lret
lods
lahf
in
leave
scas
push
pushf
jns
fs
mov
fld
sub
pop
xchg
lock
ficomps
ljmp
movb
in
in
loope
js
inc
insb
push
gs
pop
imul
mov
mov
and
mov
xor
orl
xor
push
mov
loop
adc
cli
push
cmp
jle
or
mov
inc
ja
cwtl
psubusb
fisubrs
fwait
cmp
push
pusha
ljmp
cmc
mov
xor
add
lahf
lea
arpl
in
stc
lods
jae
mov
mov
xor
lods
sbb
shll
xor
movsl
jae
lds
push
lock
dec
or
pusha
jmp
int3
jo
sbb
pop
out
ror
fistps
stos
add
ljmp
icebp
pop
cmp
test
rcr
sub
inc
pop
jbe
jmp
or
dec
addl
adc
jecxz
lcall
clc
push
push
inc
jl
push
sub
hlt
inc
push
ljmp
inc
int
sub
adc
mov
mov
js
testl
ja
pop
sbbl
sbb
or
dec
inc
clc
and
dec
mov
shlb
add
enter
xchg
lahf
pop
jp
or
dec
scas
aam
xchg
and
or
cmp
lds
sbb
leave
sarl
int
add
ljmp
cmp
xor
divb
xor
mov
ja
shll
xchg
add
push
and
stc
jle
cld
inc
sarb
xchg
lret
mov
jne
jne
xchg
cmp
mov
mov
imul
addl
dec
mov
inc
mov
gs
enter
dec
and
push
pop
repnz
lret
xor
mov
push
xchg
or
shll
xchg
cmp
rclb
gs
iret
pop
cld
or
popa
cltd
inc
cmc
stc
imul
dec
mov
cld
pop
fstpl
add
jle
les
idivl
adc
inc
push
scas
add
and
pop
mov
lret
mov
adc
sbb
arpl
or
ja
xchg
ret
mov
mov
mov
dec
jg
aad
mov
cmp
cmpsl
jge
mov
out
jmp
dec
pop
add
adc
scas
sbb
fs
sbb
andl
pusha
test
pusha
das
mov
shl
stos
mov
mov
jbe
mov
or
mov
cmp
or
shlb
ret
test
ret
xor
and
jmp
shrb
pop
movsb
xor
dec
mov
adc
test
mov
and
js
cmp
fiaddl
aad
lret
cmp
pop
inc
pusha
lahf
push
dec
lods
xchg
jo
add
xorl
stos
in
sahf
movsl
int3
jge
sarl
pusha
call
push
add
and
sub
dec
test
adc
pop
loopne
leave
inc
rcr
mov
jbe
add
mov
rolb
scas
add
add
shl
mov
inc
add
test
daa
cmp
sbb
pop
pop
scas
and
movb
push
push
cmp
xchg
aaa
pop
shrl
imul
sbb
xor
push
sub
push
xor
push
inc
or
popf
imul
or
cmp
xchg
dec
fs
inc
jno
lea
fldt
icebp
adc
mov
aad
adc
rolb
mov
or
cld
jge
ret
sbb
xor
mov
adc
cmpsl
sbb
or
test
jle
cmpsb
repz
jo
or
fnstenv
mov
lcall
ret
sbb
movsl
cmpsl
pop
push
shlb
in
jne
mov
std
scas
test
adc
out
sbb
repz
cmpsl
xchg
repz
add
dec
repz
adc
aad
adc
mov
sbbl
sbb
sub
loopne
xor
in
dec
xchg
push
fstps
insl
shl
lea
jp
aaa
push
or
outsb
jno
imul
sahf
rorb
jo
pop
sub
inc
mov
mov
push
popf
ja
cmp
mov
stos
fs
add
loopne
lret
ss
jno
and
fadd
iret
mov
lods
and
mov
inc
or
mov
fildl
push
aam
dec
shl
jle
push
stc
sti
adc
mov
and
iret
cmp
sbb
xlat
and
es
mov
lds
dec
cmpb
push
xchg
mov
bound
cmp
pop
xorl
int3
test
je
mov
fisubrs
test
ret
cmp
jns
xchg
mov
sub
subb
push
or
nop
mov
outsb
add
mov
nop
cmp
mov
or
xor
lock
sub
mov
imul
loopne
sub
ficompl
sti
mov
sub
das
push
push
je,pn
xor
sti
pop
stos
inc
es
popa
adc
ss
or
or
jne
adc
hlt
out
sub
insb
test
outsl
fs
or
les
rcrb
push
sbb
and
or
sbb
jno
cmp
shlb
fidivrs
and
aaa
jge
loop
cmpsl
je
idivl
data16
sahf
in
daa
cmp
fisttpll
sub
pop
mov
cld
aam
into
ja
sub
mov
ds
rcr
rcr
xchg
test
lret
push
xchg
xor
in
mov
enter
out
cwtl
xor
cmp
icebp
mov
lahf
jns
cs
sbb
jecxz
cmp
inc
inc
test
vpshufhw
xchg
jno
movd
jp
lahf
orb
sarl
jb
xor
test
adc
push
push
cmp
xchg
mov
jnp
sbb
cmp
sbb
addr16
idiv
xchg
inc
lret
icebp
ret
je
lret
out
add
clc
sbb
cmp
out
rcll
push
xor
adcl
jle
repz
mov
int3
pusha
roll
mov
ret
loope
and
rorb
pushf
inc
sub
jne
mov
jg
jle
inc
mov
sub
sub
jge
add
jbe
adc
out
dec
stc
pop
shl
lret
std
xchg
lds
sub
or
push
xor
jl
add
or
mov
ja
cmp
mov
lods
pusha
or
mov
or
out
pop
aad
loope
div
and
lods
cmc
data16
or
lods
and
dec
cmpsl
pop
lock
xchg
nop
mov
clc
sbb
je
outsb
mov
movsb
out
out
adc
repnz
movsl
xchg
adc
clc
or
add
inc
inc
leave
push
xchg
aaa
mov
sub
cltd
inc
mov
lea
dec
out
repnz
insl
sbb
cmpb
xchg
sarb
xlat
jnp
insb
les
pusha
jne
add
shll
nop
aad
and
and
insb
inc
push
lods
push
out
lcall
jmp
add
jbe
shrl
and
push
repz
scas
xor
jl
cmp
adc
movsl
iret
int
jbe
fdivrs
xor
push
xchg
cs
pusha
sbb
stos
icebp
or
mov
test
inc
inc
jmp
and
dec
push
mov
dec
or
lds
add
test
sub
test
gs
pop
or
lret
mov
ss
inc
bound
sub
dec
mov
and
and
in
jg
repz
sahf
push
in
leave
cmpsb
jno
maskmovq
mull
or
mov
jg
cltd
movl
loopne
or
dec
inc
jmp
lcall
repz
jae
cs
jle
imul
adc
jne
pop
xor
push
mov
cmp
add
add
jb
add
cmp
movl
jne
or
mov
cmpl
mov
not
jmp
movl
mov
jb
push
call
xor
adc
orl
mov
mov
sub
xor
mov
xor
or
sub
sub
movzbl
add
mov
movzwl
or
mov
xor
mov
mov
adcl
mov
shrd
andl
mov
add
mov
xor
sbbl
shr
mov
addl
xor
andl
or
addl
shl
cmpl
mov
movl
mov
mov
jmp
movl
movl
jl
pushl
call
or
xor
xorl
incl
add
not
sub
mov
mov
sbb
mov
add
mov
and
mov
mov
mov
or
mov
xor
jmp
xlat
mov
push
xor
mov
jb
rcll
cmp
lds
jo
xor
xchg
xorl
and
dec
mov
adc
aaa
inc
xchg
pop
cmp
xchg
xor
aas
pop
pop
enter
jge
xchg
or
sti
jnp
shl
mov
aam
fwait
roll
push
xchg
dec
pop
ror
pop
push
mov
pop
add
out
lea
inc
dec
add
mov
cmp
insb
ficompl
adc
mov
aad
and
es
pop
mov
xchg
mov
fnsave
jge
xor
inc
adcb
arpl
arpl
cmc
movsb
inc
sti
or
jmp
mov
jl
test
inc
aad
pop
repnz
sub
and
xor
pop
mov
mov
sbb
repnz
cmp
mov
jbe
mov
mov
pusha
inc
insl
fstp
imul
cld
push
adc
clc
add
dec
mov
dec
sub
cmp
std
jp
hlt
jne
rcl
outsb
outsb
lcall
mov
pushf
mov
lcall
in
pop
call
mov
pop
repnz
enter
sbb
xorl
rcl
rorb
xchg
inc
push
insb
pushf
cmp
and
movsb
ds
xchg
cwtl
push
sbb
xchg
jns
adc
imul
mov
sub
ret
mov
cmp
xchg
loope
mov
xchg
mov
call
stos
mov
fcomps
sbb
cmpsl
mov
dec
icebp
push
fdiv
dec
out
or
loope
jp
cmp
jecxz
es
fs
jmp
mov
adc
push
dec
sub
sub
cmp
mov
sub
mov
mov
insb
in
jmp
xor
inc
sahf
aaa
pop
cs
loopw
lahf
cld
mov
repnz
movsl
js
loop
xor
inc
es
test
dec
mov
and
sub
adc
popa
rclb
ss
jbe
sbb
cltd
push
xor
mov
fmul
jecxz
clc
jne
mov
mov
mov
int3
push
add
lahf
xchg
push
cmp
xchg
cltd
popf
sbb
insl
pop
mov
movsb
push
jb
jge
enter
aas
rcrl
lea
dec
push
jno
ret
sbb
add
clc
sub
rcrb
sub
daa
nop
dec
pop
aas
js
cmpl
lea
leave
pop
push
aas
add
lds
xor
into
push
daa
movsb
xchg
shll
dec
mov
jmp
push
std
jp
aas
mov
sub
fs
jns
dec
out
dec
lcall
rorl
add
push
mov
movsl
cmc
bound
out
lcall
push
mov
and
mov
enter
adc
shll
outsl
push
lret
je
divb
and
mov
dec
and
xchg
insb
pop
pop
mov
or
pop
loopne
cli
mov
mov
xor
lahf
jg
sbb
jmp
push
fisubrs
out
out
sbb
jle
inc
add
mov
sbb
sahf
mov
jmp
pop
push
jo
or
push
jl
and
imul
fcmovu
arpl
cwtl
push
inc
mov
mov
hlt
jecxz
stos
stos
divl
xchg
pop
ljmp
aam
push
daa
jns
xchg
jg
dec
repnz
mov
pop
outsb
dec
jp
cmpsb
mov
inc
xchg
mov
adc
push
gs
xor
jbe
adc
das
pushf
and
stos
stc
fisubl
cmpsb
in
dec
mov
dec
add
leave
mov
inc
out
mov
int3
imul
es
xor
jl
or
cli
jo
insb
or
xor
repnz
push
std
stc
das
mov
add
push
pop
repz
fsubl
xor
sarb
aad
mov
push
mov
ss
cmp
pop
mov
sti
or
mov
dec
aas
lods
push
gs
ficoms
sub
sarb
mov
sti
aad
inc
cmp
out
and
adc
mov
adc
pmuludq
mov
jmp
pop
movsb
rclb
mov
push
ljmp
fld
inc
xchg
mov
imulb
add
movsl
rcr
mov
push
imul
jl
xchg
imul
or
andb
mov
jns
pop
dec
dec
push
outsb
lcall
outsl
scas
inc
xlat
xor
out
addr16
lds
push
pop
lea
xchg
clc
rep
stos
cmp
sti
add
xchg
lcall
cmpsb
cmc
mov
add
lret
jp
jo
popf
mov
imul
xorb
jg
fsubrs
fiadds
out
sahf
sub
sub
int3
jge
movsl
dec
nop
movsl
cmc
sub
add
and
outsb
jmp
shrd
add
shr
mov
mov
xor
mov
andl
xor
shl
adcl
xor
or
jmp
xchg
fcomps
xor
insb
jp
into
xchg
mov
lods
mov
push
cmp
dec
ret
sub
ljmp
andl
adc
mov
das
incb
imul
loope
push
js
sbb
sub
xchg
add
jo
pop
xchg
movsb
cltd
ja
xchg
adc
cmp
xchg
dec
xor
sbb
test
pop
shll
cwtl
mov
movsb
lea
imul
adc
mov
mov
xor
or
pop
loopne
add
push
mov
nop
mov
lock
mov
and
sub
hlt
cs
xchg
sub
cs
mov
mov
mov
stc
mov
jns
add
mov
out
ds
adc
sahf
jecxz
aas
out
ds
inc
pop
repnz
roll
icebp
and
xor
adc
mov
or
adc
pop
sbb
cmpsb
stc
scas
nop
ljmp
test
inc
mov
pop
ja
loopne
xchg
das
call
andl
scas
scas
test
jns
xchg
push
lock
mov
loope
xchg
call
in
mov
mov
mov
ds
push
mov
adc
rcll
loope
scas
xor
mov
sub
xchg
and
std
enter
jnp
out
adc
mov
mov
push
cmpsl
mov
incl
mov
inc
jecxz
pop
ljmp
loope
fistl
cs
or
sti
cmovbe
sub
outsb
lods
filds
leave
roll
daa
adc
mov
adc
and
adcb
push
adc
jae
mov
dec
js
add
add
pusha
lahf
loope
stos
enter
and
mov
or
loop
dec
cmp
push
bound
bound
push
addr16
mov
imul
sub
ljmp
iret
fiadds
cltd
cmp
std
rclb
incb
mov
pushf
jge
cmp
jns
ret
push
jno
mov
jp,pn
rcll
cmp
add
xorl
cmp
arpl
out
jae
fimull
fwait
repz
cmp
mov
sub
or
xorb
cmp
pop
cmp
fiaddl
mov
cwtl
or
hlt
xchg
lcall
ret
cmp
rcrl
ret
jg
bound
jge
dec
pop
andb
lods
mov
js
gs
imul
jns
pop
inc
mov
push
inc
inc
push
jbe
dec
inc
push
mov
sbbl
push
arpl
shr
fldcw
adc
mov
addr16
xchg
and
xchg
inc
lods
je
xchg
adc
inc
xchg
shll
sub
sahf
jne
popf
jo
data16
inc
into
rorb
mov
in
mov
rcrb
and
mov
add
mov
sbb
shlb
cmp
adc
mov
gs
jb
lahf
imul
mov
fs
add
jne
and
mov
shrb
rcrl
adc
call
jo
rolb
adc
aaa
mov
in
mov
sub
inc
sbb
ret
ds
add
add
icebp
mov
sahf
fcoms
into
lock
ljmp
rcrb
leave
int
and
dec
enter
jmp
mov
fisubl
inc
mov
sbb
pop
fldt
xchg
orb
fs
mov
mov
and
enter
jge
data16
mov
mov
lods
jp
jno
jmp
or
mov
jo
cli
pop
mov
push
jne
xchg
cmp
mov
push
pusha
xchg
fdivr
jmp
int
aas
mov
cld
jmp
lods
enter
or
mov
nop
add
imul
push
popf
jno
shl
mov
icebp
insb
or
adc
xchg
lcall
sbb
sub
lea
push
xor
mov
mov
push
push
push
into
fimuls
mov
imul
hlt
push
mov
jl
out
xor
inc
pusha
std
pop
popa
mov
xchg
push
xor
pop
mov
std
sub
aas
mov
sbb
repz
push
ficoms
or
aad
fwait
sub
sbb
ja
cmpsl
sti
jae
ret
out
inc
pushf
sbb
cmp
pop
sbb
pushf
lret
jp
movsl
movsl
call
push
ret
insl
mov
mov
add
call
mov
add
pop
ret
mov
push
rcrb
addr16
lds
mov
push
in
pushf
cmp
add
sub
mov
add
mov
cmpl
mov
mov
movl
jmp
movl
movl
jae
call
and
subl
add
mov
xor
xor
mov
shrd
shr
dec
mov
mov
cmpl
mov
movl
mov
jmp
mov
je
push
push
call
mov
sbb
orl
or
adcl
xorl
or
mov
orl
xor
sbbl
xor
notl
or
orl
jmp
mov
inc
test
sub
fcomp
dec
int3
outsb
in
pop
mov
mov
push
push
subb
rorb
movsl
in
stos
mov
movsl
mov
lock
leave
dec
test
mov
lea
outsb
mov
lea
lcall
test
mov
add
cld
adc
mov
daa
or
jp
mov
js
ja
mov
xchg
sub
lock
cwtl
mov
xchg
data16
repz
mov
into
inc
jecxz
and
adc
cmp
jecxz
and
push
insl
les
adc
in
cltd
jp
test
push
movsl
fstpl
sbb
test
rcrl
clts
dec
mov
cmp
inc
andps
icebp
clc
dec
jp
sbb
repnz
vmovups
loope
popf
sub
into
xchg
sub
sub
loope
pop
outsl
dec
add
jecxz
call
lcall
cmp
cwtl
out
decb
stc
add
inc
in
hlt
dec
loop
lret
jmp
cmp
icebp
mov
lods
xchg
stc
cld
addr16
insl
iret
inc
imul
jae
inc
jno
in
pop
or
nop
icebp
lock
std
rorb
add
nop
ret
sbb
daa
int3
rcrb
mov
notl
out
idivb
push
dec
arpl
cmp
xor
outsl
or
mov
arpl
imul
push
cmpl
pop
push
les
sahf
jo
xchg
lea
jb
dec
int3
je
cmp
sbb
lret
mov
repz
rolb
cld
cmp
pop
lods
jmp
jge
xchg
mov
rol
add
and
and
mov
stc
mov
and
push
sti
dec
mov
xchg
fwait
mov
xor
ja
dec
sahf
and
push
push
imull
lret
ret
aaa
mov
adcl
aam
sub
mov
test
xor
cltd
call
stos
xor
mov
jno
dec
cmpsb
icebp
mov
psllw
jne
xor
int3
inc
std
jmp
das
nop
aam
fidivs
sbb
in
popa
pop
inc
outsl
imul
test
outsb
xlat
mov
push
stos
xchg
cmp
dec
cmp
xchg
jecxz
inc
or
lret
neg
cwtl
ljmp
inc
jb
lock
jo
lret
je
insl
cmc
xchg
mov
xchg
ja
add
sub
mov
fdivs
cmp
lret
push
inc
cmc
lods
add
sub
es
mov
mov
lret
test
or
xor
repnz
leave
mov
xchg
aam
cmp
mov
iret
push
int
movsb
push
pop
mov
push
mov
add
in
lods
andb
or
dec
shlb
dec
out
pop
mov
imul
sub
xlat
or
push
sete
loopne,pn
int
int3
int3
add
mov
push
jb
decl
mov
pop
in
push
jnp
xchg
xchg
xchg
ficompl
inc
adc
rcrl
mov
fwait
inc
inc
inc
es
cmp
in
clc
jbe
iret
shr
test
repz
jp
xchg
divl
loop
jo
jge
test
adc
sub
cld
test
lods
xor
ljmp
jl
mov
inc
mov
xchg
pop
addr16
stos
lret
je
test
fldcw
movsb
sti
aad
mov
adc
xchg
lahf
shr
xchg
inc
dec
loopne
hlt
pop
xchg
mov
movsl
aam
mov
out
xor
imul
cmc
xchg
lods
loopne
mov
adc
mov
stos
fisubrs
decb
fwait
pop
das
popa
adc
add
out
mov
loop
mov
sti
sub
hlt
lret
mov
or
in
push
inc
or
into
repz
mov
sub
pop
inc
pop
sub
in
out
jae
fcompl
fwait
ret
pop
mov
xchg
ja
gs
out
pop
fnstcw
jb
in
mov
pop
int
insl
push
aam
fdivr
cwtl
or
or
xchg
std
cmp
push
or
ret
mov
out
cmpsl
jne
adc
pop
loop
scas
fnstenv
xor
pop
cmp
test
mov
jg
mov
ret
xchg
lock
push
hlt
xchg
cs
add
lret
aaa
push
cmpsl
dec
ret
mov
imul
mov
xchg
leave
jo
aad
das
dec
cmpsl
xchg
xor
int3
fmulp
mov
sub
jae
test
ret
mov
pop
jmp
mov
add
xchg
lock
and
movsl
repz
test
fs
xchg
insb
cmp
mov
adc
add
test
sbbb
xor
jmp
xchg
mov
orl
inc
fs
jecxz
mov
loop
add
lret
ret
cmpsl
stos
pusha
mov
jg
cltd
out
add
cld
les
repz
dec
push
lea
mov
push
aas
outsb
hlt
inc
shl
lea
mov
movzwl
or
mov
mov
subl
shrd
shr
cmpl
mov
movl
movl
jmp
not
mov
jbe
push
push
call
mov
add
xor
or
add
orl
add
movl
add
not
mov
mov
or
mov
jmp
loope
adc
adc
push
fsubrs
adc
push
push
ljmp
mov
sbb
or
mov
sbb
aam
in
inc
pushf
push
lret
adc
xor
jge
xchg
fiadds
or
pop
mov
xlat
cmpsl
mov
adc
jp
cmpsb
out
push
inc
cmc
and
in
push
popl
enter
jmp
jmp
jmp
ds
push
test
cltd
aas
hlt
pop
ret
stos
insb
pop
dec
inc
cmp
xor
or
mov
lock
clc
inc
fsubrs
pop
test
adc
icebp
push
cmp
lds
inc
push
in
int3
popf
ds
repnz
je
js
jl
idivb
fcomi
sbb
cmp
xor
out
loope
mov
adcl
cli
cltd
imul
pop
and
lahf
ljmp
loop
pop
into
decb
sbbb
outsl
cwtl
adc
repnz
cs
inc
loop
test
cmp
dec
ret
pushf
mov
loop
ljmp
fcomip
call
add
fnsave
add
in
aam
inc
inc
pusha
dec
mov
lock
gs
lock
or
mov
mov
mov
jnp
dec
inc
out
add
movsb
in
scas
out
cmc
outsl
adc
pop
mov
push
mov
xor
jecxz
cmc
mov
xor
and
vunpckhpd
rorl
fmull
icebp
ret
mov
das
les
xchg
test
jo
lea
fistpl
fistpll
mov
movsl
sbb
pop
sbb
dec
insl
icebp
lret
jbe
jo
fldcw
int
add
cmpsl
sbb
std
sub
adc
push
lahf
mov
cmp
pop
xchg
int3
dec
jge
inc
scas
sbb
aam
mov
cmpsb
dec
into
lods
out
cmc
mov
nop
out
mov
jl
jnp
lea
lcall
das
imul
or
fisubl
lds
mov
sub
adc
xor
loopne
mov
jg
xor
xchg
xor
imul
xchg
jmp
mov
je
clc
stos
call
or
daa
movsl
rol
in
mov
ret
mov
sub
cld
iret
cmp
inc
xchg
and
jecxz
stos
fcmovne
cmp
cwtl
mov
ret
int
or
mov
push
insb
sub
repz
fwait
inc
jae
test
popa
ret
mov
shll
mov
inc
sub
imul
add
dec
pusha
and
jo
jbe
rcl
pusha
inc
push
xor
roll
xchg
insl
iret
push
jne
dec
mov
data16
push
frstor
scas
daa
xor
mov
pop
mov
shll
mov
aam
fcomps
lea
int3
mov
aas
aad
xchg
or
loope
out
and
and
call
fs
mov
mov
int3
sub
sub
repnz
sub
or
insl
xchg
cmp
into
ljmp
test
pop
sub
inc
out
lods
aam
sti
es
mov
inc
pushf
inc
jmp
out
xor
dec
imul
xlat
cwtl
mov
rolb
rcll
or
lods
ror
push
idivl
lret
fldenv
ljmp
xor
lret
jg
hlt
fldenv
adc
sbb
inc
test
cld
je
scas
inc
fs
mov
adc
fdivl
xchg
daa
dec
ret
out
iret
pop
and
inc
and
imul
dec
dec
aas
mov
cli
std
inc
and
pop
testb
jmp
sub
icebp
inc
adc
mov
sahf
dec
ret
xor
inc
cmp
xchg
rcrl
sub
fld
mov
push
ret
jae
shll
outsl
lds
sub
cmp
addb
fstl
inc
ret
dec
mov
add
fs
popa
and
pop
mov
lock
cli
hlt
jno
jne
add
add
mov
sarb
dec
dec
out
cld
jmp
cmp
pop
sbb
test
jo
fwait
int
leave
popa
int
inc
stos
fs
out
sbb
pop
es
mov
sub
cli
mov
jg
add
aaa
dec
dec
jl
add
notb
repz
in
jg
sub
mov
xchg
fsubrs
in
cmp
cli
cltd
outsl
mov
rcrb
lahf
xor
jne
in
jno
pop
cmpb
ss
xlat
xor
push
scas
jbe
clc
lods
shll
sub
and
xor
in
stos
mov
ljmp
and
gs
incb
movsb
loop
push
jge
jo
sbb
clc
in
call
aad
jge
xchg
test
mov
cmp
jne
scas
lret
jmp
mov
movzbl
sub
xor
mov
orl
xor
orl
or
shl
subl
imul
mov
mov
shrd
incl
mov
mov
xor
shr
and
mov
movzbl
or
mov
mov
addl
xor
andl
or
sbbl
shl
addl
sub
movl
mov
cmp
mov
mov
jg
xorl
mov
adc
mov
shrd
orl
mov
xorl
mov
xor
shl
xor
addl
or
xorl
shr
mov
mov
mov
or
mov
shrd
subl
jmp
fwait
push
dec
mov
xchg
sbb
inc
push
je
fs
push
cmp
jp
out
dec
cmp
mov
js
adc
cmp
cli
inc
mov
ss
repnz
hlt
xor
mov
mov
sub
xchg
add
loope
hlt
insb
xchg
ja
xchg
sahf
nop
pop
sub
sub
push
loopne
mov
mov
ret
test
nop
inc
sbb
or
into
sbb
and
pop
sub
jge
cmpsb
out
test
adc
test
mul
cmp
std
pop
imul
pop
stc
jmp
dec
jae
sub
in
pop
pop
jmp
stos
imul
stos
lret
jmp
pusha
mov
or
addr16
mov
iret
inc
mov
jb
mov
xlat
pusha
test
enter
ret
pusha
pop
pop
mov
jmp
xchg
popa
mov
jnp
xor
xchg
jb
pop
cmpsl
out
mov
cmc
ret
jne
xor
cvtps2pi
nop
push
decb
out
inc
js
mov
ret
push
or
out
ljmp
cmp
mov
stos
pop
pop
mov
xchg
inc
stc
adc
test
mov
test
aad
cmc
adc
lods
add
push
xor
and
cmpsl
test
mov
mov
cli
cmp
test
add
out
sbb
test
dec
pop
pop
das
leave
jge
dec
jg
data16
mov
bound
loop
ret
sbb
jmp
pushf
shrl
lods
push
ja
adcl
call
and
xor
jge
clc
rcrb
out
or
xchg
mov
cmp
testl
push
adc
sub
mov
jbe
mov
enter
cmc
dec
fsubs
mov
sub
lock
in
lret
clc
fs
inc
push
push
pop
cmpsb
add
push
and
lret
outsb
enter
cmpsl
or
push
sahf
sub
fldt
subb
push
leave
jnp
loop
pop
call
add
mov
push
outsl
mov
mov
adcl
or
mov
pusha
add
inc
add
inc
sbbb
popf
xchg
xor
mov
nop
pop
jno
mov
call
push
out
xor
sub
xchg
movsb
gs
in
jmp
push
jo
xor
sbb
xor
pushf
jl
cmp
popf
mov
aam
lea
in
dec
lods
jne
decb
ficoms
imul
lods
jmp
push
push
and
xor
leave
jne
xchg
les
xor
inc
xor
add
xchg
es
push
jp
cmp
pop
sbb
data16
add
fidivrs
jle
clc
or
xor
in
jmp
pusha
fisubrl
faddl
jg
dec
leave
cld
lcall
aam
push
pushf
adc
dec
test
sar
mov
test
pop
mov
cli
insl
inc
mov
pusha
scas
sti
push
add
in
jecxz
cld
pop
ds
sbb
lret
jmp
jo
jge
shll
push
adc
cmp
and
ljmp
pop
popa
and
test
inc
xchg
sti
ret
int3
inc
je
push
xor
push
mov
push
ss
or
inc
sbb
push
inc
pushf
popf
xchg
ret
dec
jo
imul
xor
shr
pop
cmpl
mov
std
xor
test
pop
fdivrs
jp
jbe
pop
aas
push
rol
sub
and
jecxz
testl
xchg
xchg
or
aas
pop
mov
push
repnz
imul
lods
and
adc
js
sub
xchg
push
mov
rorl
addr16
adc
jno
mov
xchg
and
insb
es
lahf
cmc
push
xchg
cmpb
pop
lods
rorb
aam
or
mov
inc
cmp
add
loopne
push
lock
dec
aad
sbb
xor
or
ds
cmp
rolb
cs
mov
xor
pop
mov
nop
cmp
loop
aad
out
les
orl
mov
movb
orl
dec
and
xchg
pop
fisubrl
dec
pushf
add
pop
lahf
or
inc
mov
mov
and
jmp
aad
int3
push
jg
movsb
or
pop
inc
cmc
test
dec
inc
scas
xchg
sbb
mov
insl
arpl
int
loop
fstps
nop
rcr
jbe
and
jge
jmp
daa
les
leave
fldcw
push
lock
and
lret
sbb
popa
jl
push
adc
loop
in
pop
adc
in
cmp
sbb
adc
mov
jmp
lret
ret
xor
dec
aaa
push
xchg
push
dec
ret
mov
repnz
push
and
scas
push
jp
mov
dec
mov
pop
shr
sub
mov
or
mov
and
mov
xor
orl
xor
jmp
fisttpl
mov
xor
sbb
stos
xor
adcl
cmp
imul
push
mov
enter
and
cmp
xchg
call
mov
fidivrs
pusha
test
sahf
inc
jns
sub
bound
mov
stos
lret
pop
xor
add
in
sbb
cmp
pushf
jbe
push
lock
add
add
dec
add
add
rcll
aas
jg
jno
cld
or
xlat
je
int3
sbb
jle,pn
push
fwait
jmp
cwtl
adc
or
jne
add
push
nop
das
xor
out
sbb
jnp
cmp
test
pop
xor
or
jbe
sub
cmp
sbb
popf
je
outsb
inc
sub
stos
jae
inc
and
shlb
mov
dec
addr16
stos
leave
loopne
xor
xchg
cmp
cld
cwtl
xchg
decb
jo
jle
fsubr
mov
call
jp
pushf
mov
inc
push
movsl
fcomps
jne
inc
sti
fldt
icebp
mov
xchg
xchg
mov
push
adc
inc
dec
lcall
adc
cmp
cli
xor
js
fmuls
mov
rorl
movsl
mov
cmpsl
int3
mov
or
xor
and
fsubs
adc
cmpsb
sbb
inc
jge
fmull
xor
ret
push
jbe
test
add
add
fsubr
ret
jge
jecxz
ljmp
xor
dec
enter
cmc
mov
xor
cmp
ja
hlt
out
sub
mov
push
sahf
and
push
add
cmc
push
das
scas
rcrl
sbb
mov
adc
and
hlt
les
lahf
cmp
xchg
gs
stos
repnz
sbb
push
je
mov
lahf
pop
adc
inc
fmulp
pop
pop
stos
jmp
nop
imul
in
cltd
sbb
push
cld
ficomps
push
fs
jo
scas
xchg
mov
clc
lds
int3
push
hlt
jae
mov
decl
gs
pop
aam
sti
pop
sub
cmp
mov
and
xchg
push
sub
adc
mov
push
inc
mov
es
jl
fwait
inc
adc
push
out
cmc
pop
aas
pop
dec
call
aad
and
out
pop
repz
incl
add
shl
inc
mov
dec
xchg
outsl
rcrl
adc
xchg
sbb
sbb
inc
aad
mov
insb
add
lcall
iret
adc
dec
cmp
jo
aas
test
in
inc
leave
nop
xor
mov
inc
and
js
clc
and
xchg
mov
insl
sbb
out
xchg
outsb
or
adc
jp
and
or
mov
dec
into
xchg
mov
arpl
lods
xlat
pop
stos
in
das
dec
lods
jge
decb
jmp
jo
neg
dec
inc
cmc
js
push
pop
jb
mov
out
mov
and
xor
cmp
lret
xor
lock
insb
jb
pop
jbe
movsb
jnp
cmp
out
fidivrs
cmp
movsl
ljmp
xchg
repz
repz
es
xchg
adc
imulb
ret
ror
jns
mov
dec
lods
mov
int
mov
pushf
mov
rorb
outsl
je
pushf
xor
fwait
int3
into
clc
lcall
cmp
push
adc
outsb
es
popf
and
outsl
jmp
and
mov
sti
pop
push
fisttpl
dec
rcrl
mov
adc
decb
jnp
sub
mov
inc
xchg
xor
xchg
rcl
jg
test
movb
lret
aad
outsb
pop
mov
sbb
pop
lock
pop
adc
fcomip
sbb
int
scas
repz
pop
push
push
push
inc
ds
addb
mov
mov
mov
mov
int
sub
jns
iret
pushf
je
dec
int3
cltd
out
sub
in
xor
inc
cmp
inc
iret
cltd
mov
dec
shl
push
insl
cmp
mov
les
je
adc
mov
cli
lcall
arpl
jl
and
es
inc
mov
mov
imul
or
ret
outsb
mov
lret
dec
mov
icebp
out
inc
pop
aad
imul
pop
outsb
or
cmp
xchg
push
xor
adc
cmp
add
jmp
push
pushf
jge
sub
and
aam
cmp
mov
fldcw
dec
loop
dec
movsb
stos
mov
fs
mov
pop
pop
loope
sub
adc
pop
lcall
jo
mov
nop
fstpl
lea
test
test
and
sub
xor
cltd
xchg
jbe
sti
or
cmp
sahf
pusha
and
sub
int3
inc
adc
cltd
xchg
js
sub
dec
dec
xchg
jbe
mov
jnp
xlat
shrl
push
call
sub
cld
sti
dec
and
inc
sbb
test
jg
insl
or
shl
subl
imul
sub
movl
jmp
sub
mov
mov
sbbl
shrd
mov
mov
xor
adcl
jmp
bound
imul
push
pop
fsts
std
mov
mov
push
cmp
shll
in
jb
xchg
inc
es
sbb
adc
xor
xor
dec
lahf
sbb
movsb
mov
out
jp
movsl
cld
pop
incb
inc
xchg
inc
out
iret
mov
xor
pop
inc
repz
mov
in
outsl
fistl
into
mov
xchg
cmp
shlb
dec
sub
in
jmp
push
dec
subl
sub
and
cmp
arpl
push
and
popa
lret
and
loope
mov
xchg
lcall
sub
inc
xchg
push
dec
pusha
lea
dec
inc
btsl
fnstsw
cmpsl
cmp
add
lahf
mov
mov
cmp
insl
push
sbb
call
cmp
pop
dec
cmpsb
sub
adc
jbe
repnz
cmpsl
testb
add
cltd
dec
mov
xor
cwtl
and
stos
insb
loopne
jmp
dec
mov
mov
jmp
or
mov
pop
movsb
inc
push
movsb
mov
pop
or
jl
jge
je
cltd
mov
fs
fisubrs
and
adc
mov
outsb
sarl
push
xchg
xlat
and
imul
jbe
call
xchg
sbb
cmpsl
mov
fstps
jg
adcl
or
movl
sbb
cmpsb
stc
pushf
xchg
xchg
push
outsl
pushf
cmpsl
xchg
repz
fstpt
dec
mov
flds
cs
jne
push
popa
mov
pop
ja
cmc
jno
dec
fisttpl
inc
inc
pop
stc
mov
mov
push
and
and
dec
jmp
lods
cmc
xor
pushf
mov
inc
iret
adc
sub
push
xchg
push
iret
das
in
push
push
push
sahf
out
pop
mov
sbb
mov
rcrl
mov
inc
jle
imul
xchg
popa
popf
or
pusha
outsl
xor
push
out
lods
mov
and
in
mov
push
adc
push
or
jb
mov
lea
xchg
add
xchg
jg
sarb
jp
add
lret
dec
lea
push
int3
mov
out
cli
iret
sbb
jmp
cmpsl
imul
iret
mov
lods
xchg
imul
jmp
ficoml
or
and
jns
sbb
pop
xchg
pop
movsb
lea
pop
jmp
popa
push
mov
int3
push
movsl
push
adc
inc
inc
mov
ficomps
das
sahf
adc
ret
dec
mov
xchg
daa
push
out
xor
inc
sbb
add
mov
js
adc
mov
adc
jno
mov
lahf
lret
es
add
mov
or
ja
inc
mov
lock
fildl
shlb
jge
mov
xlat
jns
sbb
cmp
lds
or
adc
aas
dec
inc
cld
data16
mov
sub
mov
roll
and
addl
and
pop
out
scas
out
fdivrs
mov
mov
shlb
mov
cmp
push
out
jge
mov
sti
inc
mov
and
push
pop
cmp
out
lahf
xor
and
mov
leave
loope
mov
imul
sahf
jmp
inc
jge
add
push
mov
stos
push
fidivrs
and
mov
xor
data16
jmp
lahf
pop
and
mov
lret
jb
pop
pop
push
movsb
jle
adc
xor
rcrb
fucomi
sarl
and
jo
mov
jns
dec
sub
push
sahf
ret
out
addb
cwtl
and
jle
mov
pusha
cmpsl
lods
gs
lds
loop
out
pusha
xchg
fdivl
jle
lea
movsb
test
pop
outsb
mov
inc
sarl
lahf
addr16
inc
arpl
das
inc
call
cltd
sti
push
mov
push
jno
push
jp
mov
fldcw
sti
loop
fsub
sub
push
int
xchg
add
mov
clc
lret
sbb
std
imul
xchg
sti
xchg
xchg
xor
jne
out
out
mov
addr16
imul
jbe
push
xchg
mov
push
movsl
xlat
jle,pn
subps
mov
hlt
call
aad
dec
cli
push
or
mov
enter
mov
lret
sbb
ljmp
adc
push
and
loope
fs
les
in
mov
fisubrl
adc
inc
xchg
push
outsb
jne
out
xlat
adc
movsl
push
int
add
shll
xchg
jmp
cmp
or
jle
sbb
dec
adc
ljmp
test
arpl
popaw
jb
shl
sub
loop
mov
lds
jle
mov
xor
xorl
or
shr
xor
mov
mov
cmpl
movl
mov
mov
jmp
movl
je
push
call
xor
or
xor
add
inc
or
adcl
mov
cmpl
movl
movl
jmp
movl
jle
pushl
push
push
push
push
push
call
inc
dec
sbbl
sub
cmpl
mov
mov
not
jmp
movl
jae
push
push
call
add
xor
andl
sbbl
adc
xor
xor
add
mov
mov
shrd
addl
jmp
loope
ja
xor
pusha
pushf
sub
scas
jb
aad
je
insl
push
push
cmp
cmp
sbb
pop
scas
mov
mov
inc
sbb
push
lds
or
add
dec
adc
sub
fnstcw
in
push
adc
mov
outsb
jae
test
jb
fdivp
shr
addb
loope
jmp
mov
push
xor
cmp
pushf
les
int
shr
adc
mov
ret
add
pop
mov
mov
sub
test
icebp
popa
dec
push
sbb
lods
adc
sub
dec
arpl
insb
mov
mov
shll
sub
in
stos
push
dec
inc
xor
inc
addr16
cmpsl
pop
lret
stc
mov
call
and
xchg
pop
xor
push
pop
adc
pop
lods
push
enter
addr16
test
mov
mov
dec
aaa
popa
or
jne
lods
fcompl
lret
adc
mov
mov
push
sahf
inc
jb
jl
mov
enter
push
jp
loop
popf
pusha
jb
loope,pt
inc
or
insb
or
pop
mov
hlt
xchg
adc
mov
mov
cltd
arpl
lock
test
test
jnp
jne
pop
add
lds
mov
ret
pop
icebp
jae
or
xor
inc
in
xchg
fldt
sbb
inc
or
and
add
cltd
xchg
outsb
loopne
popf
sbbb
push
je
std
sbb
mov
aas
jno
pop
jecxz
push
push
mov
and
fstps
inc
xlat
movb
call
loope
xor
xchg
clc
stc
or
jne
outsb
inc
stos
ja
jle
mov
pop
fnclex
andl
lods
mov
mov
fs
xchg
cmpsl
xchg
lods
filds
mov
jns
test
jmp
inc
sar
ss
in
jns
mov
fsubr
mov
test
pop
xchg
outsb
insb
outsl
cmp
fistl
jecxz
loopne
popa
jnp
mov
and
push
pop
adc
cmp
shll
stc
stc
jb
jbe
mov
stos
jge
mov
xchg
stc
pop
ffree
and
jge
pop
push
mov
mov
out
out
fildll
loop
mov
jne
fstpl
pushf
inc
sahf
lret
adc
fisttpl
adc
push
dec
pop
nop
fsubrs
mov
and
push
sbb
into
add
imul
pusha
jno
insl
icebp
rcl
sub
and
jnp
iret
jge
inc
add
xchg
xchg
out
add
mov
and
inc
pop
sbb
fwait
int
fneni(8087
adc
mov
jge
es
cmp
xchg
fs
dec
xchg
int3
scas
and
or
jl
xor
cmc
and
fdivl
mov
jae
mov
sub
push
mov
xor
in
and
adc
push
cmp
sbb
cmp
icebp
je
in
ss
call
mov
pop
ljmp
test
cmp
mov
in
test
cld
ljmp
push
sub
stos
mov
sub
dec
ljmp
add
xor
cmpsl
ret
xchg
stos
ja
fmul
test
rcl
mov
subb
xchg
push
js
pop
cwtl
aad
dec
stos
movsl
ja
pop
sbb
add
sub
lret
fnstsw
test
pop
addl
mov
xor
and
aas
sub
xchg
cmp
add
call
inc
xchg
loope
inc
mov
xchg
mov
sub
push
lea
orl
pop
xor
mov
cmp
jbe
lock
inc
adc
call
cwtl
out
scas
mov
xchg
loop
mov
test
nop
xor
das
inc
jmp
xor
aad
in
hlt
inc
addr16
mov
dec
test
cmp
dec
xchg
dec
sub
iret
xor
mov
mov
lods
scas
cmp
cmp
stos
lret
push
jo
in
push
sbb
inc
mov
lock
in
js
out
cmp
cmp
pusha
mov
dec
pop
mov
xchg
sti
pop
dec
ret
cmp
adc
pushf
jle
jmp
add
fnstcw
mov
push
push
pop
subb
and
insb
push
iret
mov
or
cmp
mov
pop
movsb
popa
movsb
jecxz
cmp
popf
push
inc
inc
loope
or
cmp
fbld
cmp
orb
repz
icebp
out
mov
inc
dec
cmp
cld
jl
ds
repnz
popa
aad
push
insl
ret
int3
insl
fxch
pushf
mov
and
mov
js
inc
dec
push
xor
push
insl
or
or
inc
imul
loop
cwtl
imul
cmp
dec
test
cmpsb
sub
fs
ss
rolb
sar
test
sbbb
mov
jne
shr
mov
mov
subl
mov
orl
xor
orl
xor
or
orl
shl
decl
add
add
sbb
mov
sub
mov
movzbl
sub
mov
shrd
shr
sub
mov
cmpl
movl
mov
movl
jmp
movl
movl
jne
push
push
push
pushl
call
and
sub
inc
adcl
dec
mov
mov
xor
mov
xor
shl
xor
or
xor
add
adc
mov
jmp
jle
fucomp
sbb
test
mull
push
cmp
pop
xchg
out
mov
nop
adc
mov
push
adc
dec
and
rol
imul
scas
loope
repz
inc
fwait
sub
daa
je
mov
aad
pushf
sbb
push
popa
adc
ja
or
fstps
fimuls
mov
xor
dec
and
adcl
roll
imul
in
pop
add
fcompl
inc
pusha
xchg
pop
add
dec
and
or
mov
cmp
fs
pop
jnp
popf
sub
loopne
stc
popf
pusha
mov
ret
inc
les
cmp
or
ljmp
loope
cmp
push
jge
pop
addr16
shlb
adc
fsub
mov
adc
push
lods
loop
inc
xchg
ret
mov
adc
xor
xlat
or
push
xor
adc
loopne
imull
aas
mov
mov
add
sub
cmc
dec
jmp
rcll
inc
cmpsb
mov
ljmp
insl
test
add
cs
fistl
xchg
adc
cmpb
aad
xchg
mov
jle
jle
stos
and
imul
shll
or
stos
dec
xor
or
inc
jp
or
cmp
mov
xchg
mov
clc
cwtl
flds
jb
xchg
mov
jmp
mov
fidivrl
imul
ret
push
rcll
aas
insb
fstp
xor
push
out
mov
test
sahf
sbb
movsb
mov
scas
xchg
loop
into
cli
movsbl
mov
mov
mov
jge
add
mov
sub
xchg
mov
adc
mov
or
fnsave
mov
call
mov
cmp
pusha
loop
push
jge
sbb
test
pop
cmp
cmp
cmc
les
push
mov
stos
movsb
inc
lea
mov
in
test
jmp
lcall
ffree
int3
ficoms
andb
jns
mov
or
aad
jle
jmp
mov
xchg
mov
aaa
cmp
jmp
rclb
call
inc
xchg
lss
sub
cli
adcb
gs
insb
cmc
sub
xor
cmp
pop
loope
xchg
mov
adc
xchg
ds
ds
adcl
shlb
pop
adc
sub
pop
imul
pause
rcrb
push
movsl
dec
push
out
arpl
sbb
sbb
arpl
hlt
jmp
xor
fwait
hlt
pop
dec
dec
adc
loop
mov
lea
mov
or
jg
mov
dec
les
mov
and
out
push
cs
in
insl
int
lea
icebp
aas
cs
mov
mov
mov
xor
cld
int3
addb
out
xor
xor
arpl
push
aas
mov
xchg
inc
add
lret
mov
push
jg
add
cmp
xchg
ja
mov
inc
jb
fidivrl
xchg
filds
roll
sbb
push
popa
nop
andb
cwtl
jmpw
movsl
adc
push
sarb
mov
jp
mov
insl
pop
push
mov
mov
pop
dec
jge
imul
movsb
aaa
cmp
data16
xlat
add
sub
pop
xor
add
fwait
mov
xchg
arpl
inc
mov
in
dec
lcall
stc
cmp
inc
sbb
cmpsb
xchg
loope
mul
frstor
jp
repz
fdivl
inc
ljmp
xor
adc
xor
outsl
sbb
mov
nop
mov
sub
lea
sbb
addb
inc
push
pop
jb
jle
mulb
sbb
out
addr16
imul
cwtl
inc
iret
mov
sub
out
int
jnp
or
or
jle
std
movsb
xchg
insb
loope
and
pop
jle
inc
call
mov
xchg
sub
mov
inc
mov
mov
scas
lret
mov
lock
mov
cmpsb
or
push
mov
sub
icebp
outsb
in
mov
mov
call
jb
push
mov
inc
push
out
sti
push
xchg
fildll
pushf
jbe
popa
mov
ret
sub
lret
orl
pop
negl
cmpl
and
int3
popa
aad
dec
rolb
lods
test
push
in
and
lods
aam
imul
dec
roll
push
push
icebp
push
mov
cmpsl
or
add
outsl
ret
imul
sub
add
adc
inc
aas
sub
daa
in
dec
iret
and
lds
das
cmpsl
dec
xchg
xor
jmp
hlt
int
insl
lret
add
pop
or
jle
adc
jle
cmp
fidivrs
push
cld
movl
sbb
mov
or
mov
sub
movl
and
mov
movl
mov
movl
add
mov
sbbl
mov
xorl
jmp
mov
or
sbb
jl
test
popa
push
push
cmp
lcall
or
leave
adc
cltd
jnp
nop
std
xchg
inc
cmp
aas
mov
inc
mov
ljmp
xor
out
mov
or
sub
pop
jg
popf
pop
in
jae
add
xchg
pushf
xchg
les
cmpb
mov
jns
jp
adc
aad
stos
mov
aad
jno
loopne
imul
push
mov
testl
js
xor
in
adc
pop
jp
outsb
adc
shlb
jg
sbb
dec
movl
shrl
xor
push
aas
xlat
enter
out
loope
nop
cmc
adc
adc
ss
lret
leave
jle
js
bound
xor
repz
in
mov
jns
or
imul
fwait
jl
fwait
adc
xorb
data16
cli
ret
fcoms
jg
jae
xlat
adc
sti
out
xchg
aas
xchg
pop
xor
inc
movsb
in
push
add
ds
data16
dec
sub
cmpsb
pop
cwtl
jl
xchg
dec
mov
rcl
shl
lcall
dec
jnp
test
jne
adc
and
ret
xchg
cmp
and
faddl
xor
int3
stc
iret
lock
jne
fbstp
loopne
adc
scas
pop
es
dec
fdivrl
cmp
mov
ds
push
icebp
shll
xor
mov
xchg
and
jg
pop
insl
push
cmpsl
in
mov
in
imul
sub
je
dec
mov
mov
xchg
out
ds
pusha
nop
mov
ja
xchg
jae
stos
fwait
mov
jbe
xchg
pushw
adc
jl
adc
xchg
negl
cmc
scas
aaa
fwait
fwait
mov
hlt
add
out
xor
in
lahf
cmp
or
add
movl
sbb
scas
cmpsb
out
jp
sub
test
ds
popf
mov
xchg
loop
arpl
popf
lods
out
sti
xchg
in
and
into
jle
inc
xchg
xor
aam
xor
lods
xor
mov
shrb
mov
es
or
jp
pop
and
and
shr
add
sarl
loopnew
lret
xor
mov
push
mov
enter
xchg
andl
xor
mov
adc
lds
mov
fidivrl
mov
pop
call
jbe
mov
mov
stos
insl
xor
cltd
sti
xchg
daa
and
ficompl
in
rcl
sbbl
mov
iret
out
out
sub
cmp
mov
and
bound
xchg
std
lcall
icebp
push
pusha
mov
mov
mov
movzwl
or
pusha
xchg
pop
xorb
jmp
cmp
sub
fwait
jge
dec
clc
aas
sbb
test
fwait
ror
sub
aas
lret
sbb
repnz
dec
aaa
imul
jl
fistps
pushf
sbb
stc
out
jno
hlt
ret
sbb
xor
outsb
inc
test
into
pop
add
add
and
mov
outsl
inc
movsl
lahf
jae
or
rclb
in
xchg
jmp
in
popf
push
enter
xchg
mov
pop
mov
pop
outsb
cmp
jl
in
mov
mov
lock
imul
in
in
flds
cmp
lret
aas
lret
adc
gs
add
or
mov
and
xchg
outsb
dec
lods
jne
fistpl
lods
inc
push
into
ret
dec
outsb
jg
or
ds
pop
nop
mov
xlat
movsb
or
ljmp
mov
cmp
push
shr
jmp
pop
shlb
das
in
test
arpl
out
pop
shll
mov
adc
mov
call
shrl
scas
or
inc
mov
xor
dec
add
push
hlt
push
test
xlat
fisubrs
int3
int3
push
loopne,pn
mov
xchg
jnp
adc
cwtl
lcall
inc
cs
sbb
add
add
lods
adc
sbb
adc
mov
adc
nop
divl
jnp
rcr
pop
addb
or
mov
mov
mov
aam
mov
sub
mov
cs
add
jb
fiaddl
and
mov
lret
inc
pop
dec
pushf
test
insb
cmp
xor
adc
pusha
pop
and
cmp
mov
or
outsb
push
xchg
pusha
inc
cmc
ret
sbbl
loopne
fisttpl
jbe
sbb
sbb
repz
sti
adcb
mov
cs
imul
jg
lahf
or
mov
add
jo
imul
sti
inc
cmpsl
mov
pop
mov
jae
loopne
pop
inc
int3
pop
rcrl
cli
icebp
sbb
mov
shrd
cmpl
movzwl
movl
movl
mov
jmp
movl
ja
push
push
push
push
call
adc
orl
movl
and
movl
mov
mov
sub
addl
shr
orl
mov
mov
xor
shl
and
xor
or
lea
sbb
mov
mov
mov
and
shrd
mov
sub
shr
or
jmp
xchg
xchg
pop
test
mov
shrb
dec
push
push
cmp
fidivrl
jl
add
es
stc
ficoml
stos
jno
xor
sbb
fwait
sbb
ret
and
das
mov
int3
xchg
addr16
mov
rcr
mov
mov
lea
dec
pop
jge
repnz
adc
sub
adc
aaa
fmul
mov
lcall
xchg
pop
popa
fwait
les
push
addr16
fldenv
add
jbe
stos
ret
test
leave
iret
mov
ret
sbb
pusha
add
mov
icebp
push
shrb
pop
out
mov
or
test
add
push
ss
mov
xchg
mov
scas
inc
cltd
cmc
dec
adc
pop
enter
pop
pop
xlat
ffree
aad
das
cmp
aas
add
cmp
cmp
lds
lahf
dec
sbb
lock
adc
jmp
adc
ljmp
pop
and
mov
shrl
repz
and
lcall
sbb
loopne
cmp
rorb
test
inc
xor
xchg
inc
punpckhwd
out
push
adc
and
stos
dec
xchg
push
jno
fsubrl
mov
mov
hlt
flds
push
inc
inc
pop
lret
aam
stos
mov
orb
popf
cwtl
or
fisubl
pushf
leave
mov
cld
dec
cmp
int3
es
sub
int
push
jl
push
jae
and
pop
ljmp
cltd
bound
fs
aam
sbb
dec
test
adc
fyl2xp1
cmp
gs
hlt
mov
jne
int
xchg
call
adc
imul
pop
xchg
out
cmc
inc
mov
pushf
mov
mov
cmp
icebp
pop
add
fisubrs
cmpsb
xchg
stos
fldl
mov
push
jle
pusha
push
rcr
test
xchg
add
je
test
and
test
cmp
add
icebp
lret
enter
pop
jne
bound
sti
pop
data16
mov
lock
push
loope
loop
fs
jge
pop
pop
pushf
data16
ficoml
shrl
sbb
mov
xor
in
mov
xchg
jo
les
cmc
push
cli
into
fucomp
xor
leave
mov
xchg
bound
dec
sbb
jg
cwtl
mull
ljmp
or
mov
push
jno
xorb
mov
xlat
jmp
setl
mov
or
lods
sbb
fldcw
inc
les
mov
call
pop
adc
jl
idivb
orb
xchg
jae
loope
push
jo
add
xchg
mov
dec
xor
lret
std
push
add
shll
and
mov
pushf
mov
xlat
mov
les
mov
jge
pop
in
jg
sub
scas
loop
sbb
xchg
mov
jg
in
mov
xchg
pop
inc
jp
aas
cmpsb
dec
imul
imul
pushf
and
ja
adc
mov
push
out
incl
repnz
or
lret
movsl
pop
inc
inc
movsb
shlb
les
mov
xchg
test
xchg
push
or
adc
adc
sbb
dec
cltd
inc
pop
push
cwtl
mov
in
int3
sbb
inc
mov
or
push
sbb
mov
cmp
fstps
stos
jno
xchg
sbb
test
or
notb
js
subb
push
sub
cwtl
pop
push
rorl
mov
push
into
call
or
adc
inc
mov
mov
pop
dec
ds
adc
ret
shll
xorl
cmp
mov
add
sub
cmpsb
mov
xchg
test
in
dec
sbb
pop
jmp
fwait
cmpsb
add
and
and
mov
ss
aad
push
sbb
and
or
shrb
inc
test
jno
movswl
jb
popf
and
or
cmc
or
stos
lods
mov
cld
repz
outsl
pop
es
scas
aas
out
cmc
in
loope
xchg
lahf
mov
ret
enter
sarb
push
mov
mov
mov
jns
idivb
fs
cld
sub
sbb
aam
shll
insb
push
out
adc
out
cmp
insl
xchg
mov
gs
clc
xor
mov
xor
rorl
pop
imul
push
testb
scas
mov
pusha
lcall
dec
fs
data16
pusha
jne
mov
int
cltd
xor
push
pop
xchg
xchg
cmpsl
push
push
mov
aam
sub
cmc
push
jns
sub
dec
rorb
dec
sub
lcall
add
shl
mov
xor
xor
sbbl
or
mov
mov
or
xor
mov
subl
jmp
in
imul
pop
je
pop
mov
test
scas
addb
cmp
xchg
iret
sub
and
hlt
dec
mov
call
xor
enter
loopne
std
shlb
xchg
cmc
add
idivb
xchg
xchg
jecxz
addl
xor
mov
rcrl
testl
mov
push
sbb
jae
push
negl
and
sub
and
xor
sbb
sub
mov
loope
sti
push
addr16
aaa
sbb
out
ss
sub
inc
sbb
push
mov
clc
jl
or
mov
cmpsb
sbb
addr16
outsb
cs
add
gs
mov
stc
xor
int
cld
inc
push
outsb
xchg
pop
test
adc
mov
jl
fcomi
das
data16
ret
ja
add
dec
dec
bnd
stos
scas
push
push
xchg
jge
sbb
pop
loop
mov
fs
int
adc
add
jb
or
mov
mov
xorb
xchg
pop
sub
jnp
arpl
sahf
test
pop
inc
jmp
sbb
divb
sub
cltd
rorb
shrl
cli
je
ficompl
mov
mov
das
lods
mulb
inc
enter
or
psubq
push
ds
repnz
fnstcw
mov
nop
dec
xchg
mov
pop
lea
jns
imul
mov
mov
sbb
fimull
jl
insl
or
test
idivb
test
mov
hlt
mov
sub
sub
ja
jnp
mov
cmp
sar
jge
ret
lds
aam
movsl
adc
lret
push
pusha
xchg
jmp
lret
mov
mov
push
fucomp
cmp
mov
rcl
pusha
test
pminub
fwait
enter
mov
addr16
mov
arpl
push
std
sar
mov
lods
sub
inc
jl
scas
pop
xor
xlat
orb
insb
mov
and
test
out
out
xchg
jne
add
cmc
mov
pop
cmp
sub
scas
int3
inc
lret
lret
ds
mov
xor
hlt
push
xchg
and
add
sub
jecxz
loop
sub
xor
mov
lcall
lahf
sub
ror
stos
mov
stc
pop
mov
stc
sarb
push
xchg
sar
xchg
xlat
loopne
loop
aam
rclb
mov
xchg
push
jp
cmpsl
xor
jl
daa
add
ss
sbb
pop
jmp
xchg
pushf
inc
lds
rolb
xchg
adc
dec
das
xor
mov
sarl
jb
movsl
int
cmp
jecxz
xor
in
adc
xchg
or
les
sub
xor
sub
inc
or
pop
xchg
pop
into
mov
ljmp
iret
push
subl
jbe
icebp
cmp
jl
arpl
pop
xchg
test
xchg
push
push
mov
sbb
ret
addb
pushaw
out
out
clc
mov
lret
addr16
fnstenv
and
scas
in
insl
push
sub
pop
sub
lods
sbb
mov
divb
sub
or
fsubrl
stc
mov
dec
push
pop
pop
or
xor
ret
or
insl
sub
stos
es
xchg
or
jns
jne
xchg
adc
xor
js
incb
dec
les
mov
inc
sub
jb
dec
es
hlt
lods
rcr
dec
mov
mov
stos
jo
cmp
adc
push
adc
inc
or
sub
mov
xor
pop
and
mov
mov
mov
adc
jne
outsl
jmp
jecxz
jl
daa
jae,pt
sub
arpl
sbb
mov
cld
pusha
ljmp
out
push
hlt
pop
mov
sbb
in
out
dec
dec
ds
mov
cs
mov
or
cltd
cmpl
add
cmp
jl
sub
fdivrs
sbb
dec
aad
jle
mov
push
fidivl
mov
sbb
cltd
ja
dec
xchg
lods
or
adc
sub
insl
push
add
pop
push
add
and
jo
test
cmp
sbb
ds
iret
mov
pop
xor
xchg
sti
mov
movl
stos
mov
mov
sub
push
push
inc
push
pop
sub
adc
mov
xchg
clc
xchg
pop
push
ljmp
mov
push
insb
add
sbb
dec
add
stc
enter
or
cmp
rcrb
clc
mov
and
or
sbb
pop
mov
fsubl
xor
loopne
xor
and
or
ret
out
mov
mov
add
aaa
pop
xlat
sbb
lock
stos
jne
mov
out
in
out
or
mov
and
shrd
xor
shr
addl
mov
xor
mov
xorl
xor
shl
sbb
xor
cmpl
mov
movl
mov
jmp
movl
jne
pushl
pushl
pushl
call
xor
add
and
mov
sub
add
xor
mov
or
adc
adcl
or
cmpl
movl
mov
jmp
movl
movl
je
pushl
pushl
push
pushl
call
sbbl
subl
add
sub
and
cmpl
movl
movzbl
mov
jmp
mov
movl
jge
pushl
pushl
call
xor
sbb
mov
mov
sub
sub
movzbl
or
mov
lea
mov
mov
mov
shrd
shr
mov
mov
jmp
add
inc
and
dec
push
test
aas
push
push
cmp
fucomp
pop
or
mov
cli
popf
cltd
sub
les
dec
jge
repnz
sbb
test
xor
loop
push
scas
push
out
push
and
stos
push
popf
ffree
push
adc
jnp
sub
in
mov
push
outsl
das
push
mov
adc
jl
add
lea
sbb
ljmp
and
jmp
stos
xor
push
int
adc
lods
add
or
add
xchg
dec
les
adc
int3
outsb
inc
pop
adc
push
clc
mov
loope
loop
pmaxsw
jbe
fsubs
pushf
push
nop
dec
orb
test
inc
int3
or
pop
dec
dec
clc
xor
add
mov
mov
push
pop
ficoml
dec
lea
mov
test
fistpll
popa
fistl
jo
and
iret
xchg
push
xor
push
andl
mov
mov
pop
pop
pop
fwait
pushf
test
mov
scas
hlt
loop
aam
cs
test
and
inc
stos
ja
xor
cltd
mov
add
fst
fcomp
pextrw
jnp
dec
sbb
sahf
dec
cmp
mov
inc
pusha
xor
cmp
dec
push
xor
push
mov
adc
mul
push
xchg
adc
ficoms
inc
outsl
pop
aad
daa
pop
pop
movsl
and
inc
inc
xchg
mov
faddl
mov
mov
xchg
pushf
aas
jns
mov
and
or
in
or
sub
pusha
pop
adc
clc
mov
or
xor
out
out
xor
pushf
jmp
mov
mov
addr16
mov
outsb
dec
das
and
mov
push
in
in
push
xchg
sub
shrb
cmpsb
jp
dec
xchg
outsb
dec
fwait
loopne
mov
imul
pop
and
int
imul
or
mov
pop
pop
mov
daa
xchg
mov
jge
je
push
andb
mov
clc
rcrb
sti
nop
sub
jns
js
cltd
pop
aas
sub
ror
subb
ds
mov
jp
sub
sub
pop
adc
sti
fldenv
or
leave
and
push
imul
add
sbbl
stos
ss
ficomps
inc
xor
sub
jb
sbb
std
push
data16
rclb
das
rolb
rcrl
scas
popa
ret
rolb
inc
sbb
adc
psubusw
and
mov
xor
lock
dec
add
sahf
imul
jl
cmpb
add
insb
adc
jle
aad
mov
pusha
fs
sub
xchg
adc
iret
and
lds
mov
jns
sbb
cs
and
push
ljmp
test
sbb
add
pop
dec
jns
sbbl
xchg
adc
mov
inc
mov
mov
and
xlat
into
sbb
orl
sbb
movsl
popf
and
jo
jmp
pop
jmp
inc
lret
mov
jae
mov
in
fnstsw
mov
pop
jge
pop
cmpsl
jl
shll
shlb
adc
xchg
dec
inc
push
dec
popa
je
sub
fisubl
and
jle
fsubr
fnstsw
dec
loope
xor
xchg
adc
andb
inc
cmp
insb
mov
adc
cmp
and
roll
xchg
lock
cmp
jmp
push
cmpsb
out
out
and
cmpsb
jmp
adc
and
ss
xor
aaa
mov
test
stos
lret
sbb
cwtl
mov
xchg
test
dec
sub
test
inc
inc
xchg
and
hlt
sbbl
and
roll
andb
lods
mov
add
pop
insl
aaa
repz
mov
xor
fdivrs
adc
leave
or
jecxz
sbb
mov
mov
dec
adcl
adc
jl
xor
mov
pshufw
orb
imull
push
movsb
jno
jmp
or
mov
pop
lahf
jae
pop
sbb
adc
scas
es
push
add
mov
jns
ds
sbb
pop
push
out
jmp
sub
jo
das
in
dec
lods
js
std
sbb
movsb
xchg
out
test
sub
xchg
push
lods
inc
xchg
sti
or
jnp
movsb
adc
testb
aad
sti
std
mov
push
mov
mov
std
dec
pop
enter
mov
fwait
into
ja
mov
dec
push
xchg
mov
pop
imul
out
add
in
xor
mov
adc
mov
push
sbb
jmp
xchg
shll
push
pop
sbb
shr
and
je
enter
adc
frstor
int3
and
dec
in
and
pop
leave
push
and
sbb
xchg
loope
mov
jmp
out
inc
mov
push
sahf
pop
sub
push
push
cmp
pushf
out
aaa
mov
lods
fwait
mov
jno
jl
sbb
mov
fmul
push
jnp
add
xchg
mov
fidivl
lods
cli
jle
adc
push
ljmp
xchg
xor
cmp
nop
xor
ljmp
call
les
mov
jae
rorl
stos
xchg
mov
dec
sti
inc
inc
push
add
fs
popa
push
sbb
cmpsb
jge
jl
jg
imul
int
inc
notb
mov
sbb
outsl
push
add
lret
fmull
or
or
xor
mov
enter
dec
or
testl
enter
fisubrl
pushf
cli
pop
sbb
call
jo
mov
inc
fdivrl
mov
cmp
xor
fcomip
push
rcrl
mov
jb
mov
mov
adc
lcall
sbb
mov
loop
adc
dec
sbbb
push
cmpsl
and
jbe
cmc
rorl
xor
cmp
pop
loope
pop
dec
and
jno
cmp
jns,pt
hlt
clc
cmpsb
adc
testl
pop
sbb
stc
push
mov
dec
mov
cs
rol
dec
lret
iret
sub
push
and
into
or
loope
stos
jae
or
add
pop
and
fmuls
sbb
sarb
lods
push
das
xor
xor
scas
fidivs
xor
incb
mov
cmp
popf
sar
out
loop
lea
outsl
jbe
pusha
pushf
lret
cltd
jle
and
adc
ret
sbb
sub
xchg
in
dec
mov
incl
lahf
push
aad
dec
lcall
hlt
xchg
into
iret
xchg
xor
shlb
dec
dec
sub
outsb
inc
and
pop
adc
mov
stc
inc
and
in
mov
stos
sub
adc
imul
xchg
clc
and
jae
repnz
lods
imul
cmp
xchg
mov
cmp
mov
adc
jge
xor
popf
jae
mov
imul
xchg
mov
js
and
adc
pop
ss
jnp
push
out
inc
mov
xor
stos
test
mov
mov
sbb
xchg
inc
jo
andb
dec
loop
inc
and
fucomip
out
mov
jmp
pushf
data16
inc
cmp
adc
push
adc
mov
mov
into
ljmp
sub
enter
and
xchg
test
push
adc
and
xchg
loopne
inc
inc
lret
or
ror
aas
xchg
xbegin
and
cmc
cmpl
adc
sub
repz
mov
pop
xor
rorb
pop
push
adc
jmp
inc
inc
bound
shll
pop
fchs
mov
ljmp
mov
dec
fmull
ret
sbb
in
or
mov
cmp
inc
stc
bound
ljmp
jmp
or
repz
adc
inc
mov
lahf
sti
bound
adc
push
jae
mov
xchg
in
test
cmp
cltd
ret
fistl
pop
sub
lahf
dec
pop
xchg
sub
fmuls
mov
mov
inc
lods
and
jae
popf
dec
daa
icebp
xchg
lds
sub
jno
scas
cs
jp
xor
lcall
mov
fsubrp
cld
mov
xor
imul
adc
movsb
pop
mov
cmp
xchg
aas
push
dec
and
cmp
bound
lds
int3
ret
jo
xlat
std
cltd
pushf
adc
notl
sbb
and
mov
cmc
testl
js
ret
mov
mov
xor
arpl
sub
xchg
dec
dec
int
xor
jmp
and
inc
sub
cwtl
jo
lret
xor
xor
call
or
dec
jecxz
out
jmp
shl
pop
mov
adc
sbb
into
pushf
rcrb
dec
mov
fists
lods
sahf
sbb
out
mov
jmp
and
lock
xor
daa
push
int3
cmp
outsb
in
je
pop
xchg
in
in
adc
into
sub
arpl
sar
sub
jbe
add
in
test
jb
mov
push
repz
movntsd
bound
dec
aas
test
jns
rcrl
addr16
ja
xor
and
xchg
pop
pop
sbb
sub
sbb
adc
adc
jb
dec
ss
pop
inc
mov
arpl
test
std
je
call
cmc
outsb
mov
cmpsl
inc
and
stos
jnp
das
int
repnz
aam
dec
adc
xlat
add
pusha
pop
std
jmp
pop
sub
mov
push
and
jmp
outsl
fldcw
in
push
daa
shlb
xor
jmp
into
icebp
test
dec
push
mov
pop
mov
sub
push
cmp
out
inc
and
lcall
popa
jle
pop
jne
roll
pop
adc
int3
mov
not
add
cli
xchg
jg
jge
popf
inc
leave
xchg
lcall
jl
ret
push
and
in
jbe
js
and
aas
fcomip
jg
mov
arpl
cmp
aas
aaa
xchg
mov
sub
jne
ffree
jbe
add
dec
cmp
ror
xchg
icebp
lcall
inc
jbe
add
std
jae
inc
mov
adc
xlat
and
decb
pop
inc
lret
std
xorb
mov
ljmp
cltd
iret
std
daa
dec
hlt
jb
sub
jge
imul
or
test
and
clc
sbb
xorl
sahf
mov
mov
cmp
sarl
andl
or
fistl
inc
orb
sar
fiaddl
mov
cmpl
push
mov
call
aas
xlat
mov
in
push
popa
and
xchg
loope
sarl
jle
dec
jnp
cmp
inc
popf
jmp
mov
faddl
pop
mov
mov
xchg
insb
jne
jns
call
mov
dec
ret
insb
cmp
mov
repz
add
push
cld
cli
mov
test
jnp
into
mov
fs
and
cwtl
jno
add
inc
mov
lods
movl
push
clc
js
adc
and
mov
sbb
mov
push
cs
cmp
mov
mov
jp
ljmp
test
mov
or
mov
push
sub
or
ret
jns
add
out
fidivrs
xor
mov
sub
shlb
mov
mov
cs
inc
lcall
mov
mov
cmc
mov
or
mov
push
inc
or
jbe
loope
je
fdivrl
ljmp
lahf
push
fcmovnbe
cmp
cli
imul
imul
pop
dec
fisttpl
inc
lods
cs
lret
xor
jl
rcrl
lea
dec
cs
iret
xchg
sub
jne
xor
into
fmuls
lock
movsb
push
adc
outsl
mov
out
fs
pop
xchg
incl
subb
push
mov
push
push
and
je
mov
and
mov
mov
adc
sarb
pop
add
fiaddl
pop
into
iret
loopne
icebp
enter
sbb
pop
xor
fwait
sub
in
les
gs
rcll
jmp
aas
and
inc
cmp
cld
imull
mov
mov
lock
mov
xor
popf
mov
insl
inc
arpl
fwait
xchg
xchg
add
sub
push
cmpsb
cmp
sti
popf
xchg
push
mov
pop
lock
adc
xor
adc
cmp
ret
xchg
mov
ljmp
in
jg
cmpsl
mov
pop
sti
xchg
int3
pop
sahf
cmp
cmpsb
mov
imul
mov
dec
movsb
sub
pop
cltd
jg
cwtl
mov
shlb
lcall
xor
mov
inc
outsb
int
insl
or
pop
sub
pushf
inc
push
int3
in
scas
enter
xchg
sub
fisubrs
mov
lahf
sbb
dec
pop
jbe
pop
or
std
sub
xor
xor
sbb
fdivrp
sub
sub
mov
rcl
xchg
xchg
push
stc
xorl
icebp
mov
xchg
int3
mov
mov
aaa
cwtl
xlat
cmp
xchg
push
jecxz
adc
or
cmp
icebp
inc
sti
sbb
adc
mov
lods
push
xorl
out
push
test
lcall
jle
dec
pop
testl
push
repz
jmp
in
in
fucomi
sub
inc
xor
jecxz
cmp
popa
inc
aaa
xor
pop
outsb
daa
dec
jp
add
mov
sub
sbb
inc
das
mov
addr16
mov
add
cmc
lahf
mov
popf
mov
cmp
stc
test
scas
cld
sub
out
sub
outsb
js
cwtl
and
stos
pop
mov
sar
movsb
inc
pop
jo
repnz
cwtl
or
inc
loope
jge
inc
scas
test
sti
inc
sbb
sbb
in
fnstenv
out
test
mov
stos
mov
xor
adc
arpl
les
xchg
aaa
rolb
fisttpl
in
jle
mov
xchg
pop
insl
shrl
cmp
or
mov
es
mov
sti
cmp
jle
xchg
sahf
cld
popa
leave
mov
inc
lods
out
orl
mov
or
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
lea
mov
mov
mov
shrd
shr
jmp
sbb
push
sbb
mov
sbb
push
cmp
and
es
in
add
mov
dec
adc
vmwrite
pop
or
hlt
xor
pop
lds
jg
idivb
pop
sub
arpl
mov
hlt
sub
out
cld
div
lds
cmp
jo
cld
dec
arpl
pop
flds
roll
out
scas
xor
fidivl
fimull
mov
or
push
rorb
test
pop
mov
or
out
cmp
in
and
mov
xchg
push
and
mov
mov
mov
or
ds
in
cli
add
dec
adc
lcall
lahf
out
movsb
stos
dec
pop
push
lret
aad
push
stc
hlt
xor
lds
leave
into
add
mov
dec
jge
push
lahf
popf
cmp
aaa
and
cmp
fidivrs
icebp
pushf
lahf
ret
cmp
es
mov
push
adc
push
and
shl
lcall
imul
lret
into
pop
dec
ficompl
or
push
outsl
inc
in
lods
movl
cmp
mov
iret
jb
jb
inc
fdivl
les
ds
add
jmp
inc
je
cmp
push
mov
imul
insl
sub
mov
test
and
mov
cmp
push
cld
nop
outsl
or
sub
mov
shlb
mov
rcll
xlat
push
jmp
lea
mull
push
insb
jl
lods
inc
subb
sbb
int3
stos
mov
and
lods
cmpsb
dec
popa
xor
addr16
pop
cmpsl
mov
popf
cmp
pusha
pusha
loop
push
pop
lock
mov
ret
jmp
mov
outsb
les
mov
call
fisttps
jmp
sbb
rcl
mov
push
mov
adc
arpl
sbb
pop
sub
xchg
or
test
adc
shlb
sub
or
xorb
popf
xchg
add
dec
ss
mov
icebp
adc
add
jle
lahf
mov
jge
pop
adcl
repnz
lds
dec
shl
lods
stos
iret
mov
out
inc
mov
xor
and
jo
push
mov
push
cmpsb
int
pop
std
adc
xor
sbb
jns
mov
sbbb
pusha
xor
jmp
rorb
mov
pop
movsb
sub
sub
sbb
adc
xchg
xor
jns
movsb
or
shll
cmp
stc
mov
push
enter
cwtl
jb
test
test
mov
stos
jb
sbb
add
sti
scas
mulb
in
cmpsl
push
mov
loop
repz
arpl
stc
mov
inc
clc
fs
fs
lret
pusha
xor
adc
push
fsubrp
test
cmpsl
dec
jne
jno
or
jmp
sub
cli
jmp
cs
xchg
pusha
or
ljmp
xchg
jns
jne
dec
jl
inc
adc
pusha
xchg
dec
xchg
shrb
mov
fadds
add
jbe
xchg
xchg
xor
ljmp
cmp
sbb
movsb
fidivl
loope
and
or
negl
xchg
cmp
jl
clc
sahf
in
pop
fidivs
jg
mov
and
test
mov
jecxz
hlt
loopne
and
sbb
and
xchg
out
sub
xchg
inc
pop
xor
dec
mov
jno
movq
xchg
aad
test
outsl
or
cli
pop
pop
jmp
or
or
int
popf
dec
lock
inc
ja
fstps
xchg
push
mov
push
in
outsb
sbb
lods
in
es
repz
mov
fiaddl
mov
iret
in
jmp
js
mov
sbbl
and
dec
add
mov
je
pop
push
mov
ja
xor
dec
pop
sub
and
push
shl
fimull
jp
sub
inc
loopne
in
roll
adc
cmpsb
cmp
lgs
loope
out
in
daa
jmp
sub
lods
cli
test
icebp
ljmp
jg
mov
pop
add
das
sbb
add
sbb
scas
mov
xlat
ds
jp
or
xchg
movsl
xchg
xchg
mov
ret
aad
lea
inc
js
std
push
jbe
aam
cwtl
cmp
mov
rcrb
inc
aad
jge
pop
sub
pop
add
jno
add
ljmp
fldcw
filds
xchg
or
cli
xlat
scas
dec
or
push
pusha
jg
cmpsl
push
xchg
scas
ljmp
int
adc
lods
sbb
adc
pop
push
lahf
jmp
push
setnp
mov
int
mov
outsl
pop
ret
inc
icebp
mov
sti
sahf
loope
ljmp
jecxz
xchg
test
add
shrb
sbb
pop
loopne
mov
mov
xor
shl
mov
xor
or
mov
mov
jmp
inc
dec
aad
fcoms
inc
loop
ds
or
cmp
xor
pop
jo
and
bound
mov
scas
pop
insl
cwtl
push
add
fwait
inc
push
adc
xchg
arpl
lods
inc
jb
inc
rorw
lea
jecxz
lds
das
cltd
jmp
inc
and
add
xor
in
xor
ldmxcsr
frstor
scas
xchg
mov
gs
xor
jmp
push
loop
sub
test
lock
fs
jo
arpl
test
iret
push
sub
mov
mov
push
inc
or
into
push
shlb
push
sub
daa
mov
pop
int3
inc
loopne
mov
jb
jnp
cmpsl
fwait
mov
lods
sub
xchg
loope
andl
aaa
add
inc
cmc
jmp
and
push
lahf
shl
inc
xchg
call
jae
push
mov
popa
pop
fiadds
daa
into
and
fidivl
xchg
bound
jnp
sbb
std
mov
lahf
std
hlt
lret
test
push
pop
out
mov
aaa
xlat
mov
mov
mov
sbb
jno
inc
add
xor
repz
in
xchg
mov
pop
mov
cmpsl
xchg
pop
cmp
jl
mov
lods
pop
or
jmp
cmp
sti
rcrb
inc
loope
sub
mov
in
xor
test
inc
addb
cmp
ds
int
mov
fcompl
add
cmp
mov
scas
cs
in
inc
cmp
jl
mov
fistpl
push
call
lods
sbb
jmp
xor
insl
flds
sbb
ss
stc
mov
lods
mov
sub
mov
lret
testl
adc
lahf
bound
test
lods
mov
addl
inc
sub
push
clc
ret
movsl
sbb
adc
stos
mov
mov
lret
ror
push
unpcklps
mov
sar
mov
jecxz
xor
outsb
cmp
iret
repnz
fsubl
jge
cmp
fbstp
cmp
int3
cmp
dec
clc
lods
in
xor
adcl
jge
notb
xchg
fsubrl
xlat
xchg
push
inc
mov
inc
dec
mov
ss
cmp
push
adc
aad
cmp
addr16
pop
push
xor
jmp
push
dec
push
cmp
or
loope
cmp
and
dec
mov
fimull
pop
cltd
pushf
mov
push
jbe
dec
dec
gs
push
sbb
add
sti
out
repnz
push
out
das
adc
or
cltd
pop
loope
and
std
pop
push
cmp
mov
icebp
outsb
jnp
loop
pop
jecxz
cmovbe
push
or
sbb
stos
jne
inc
call
cs
notl
addl
fwait
imul
jae
ja
or
add
outsl
outsb
aam
xchg
lds
test
lret
adc
sbb
mov
jmp
clc
push
loope
fsts
xor
cmpl
fwait
mov
loope
dec
je
jg
lret
adc
jne
cmp
out
and
xchg
or
jo
int3
adc
mov
xor
jl
or
dec
addr16
pop
stos
inc
sti
pop
push
mov
dec
into
add
cmpsb
adc
xorb
mov
pop
aam
sub
mov
push
adc
rorb
dec
addr16
xchg
hlt
cmpsb
stos
stos
push
cmp
stos
stos
movsb
mov
nop
sbb
inc
ljmp
cmpsb
mov
mov
loop
pop
ljmp
cmp
data16
scas
ret
fmuls
pop
aam
mov
cmp
scas
stos
and
insb
mov
and
out
fistpll
mov
out
test
mov
dec
shlb
dec
sub
lcall
jbe
ljmp
cmpsl
and
std
xchg
out
sti
loop
cmp
or
daa
push
sbb
and
int3
aam
lret
mov
inc
sub
imul
dec
les
adc
sbb
push
sbb
nop
inc
test
lret
leave
in
les
xor
lods
lods
orl
xlat
stos
jns
sbb
mov
pop
adc
fisttpll
dec
xchg
fwait
sub
push
in
lods
xchg
imul
ja
sub
clc
sbb
pop
jl
outsl
inc
test
adc
cmp
cltd
cmp
jg
addr16
lahf
sarl
or
sub
xchg
sub
push
xor
pop
fcmovnu
xchg
hlt
push
pop
pop
pop
nop
sbb
xor
in
rorl
push
mov
stos
lods
push
jb
in
mov
pop
sbb
das
std
or
sbb
push
out
sbb
push
mov
cwtl
add
scas
lea
inc
iret
jmp
bound
or
movsb
shrd
shr
mov
mov
jmp
dec
adc
adc
xchg
inc
mov
push
jmp
lea
push
push
cmp
ljmp
cmp
sub
mov
push
xor
hlt
popa
inc
xor
test
outsl
xor
ljmp
je
mov
inc
daa
xchg
and
lret
fwait
les
jne
jae
or
ljmp
iret
cmpsl
outsl
jb
mov
jno
sbb
sbb
insl
mov
pop
ds
outsl
cmp
mov
sbb
lds
sub
loope
push
xchg
out
jle
and
shlb
pushf
scas
jo
push
lea
jg
cmp
sbb
sbb
shl
cmp
clc
xor
add
int
insl
xlat
pop
jle
pop
js
cwtl
sti
jb
das
mov
pop
loop
push
enter
pop
jbe
sub
je
mov
sub
sub
or
jns
sub
fidivl
mov
mov
lods
jle
dec
mov
pop
cmp
mov
xor
sbb
sub
adc
jne
aad
pop
xor
cmp
adc
addr16
xor
inc
jg
jae
out
aam
xor
sub
xchg
test
inc
cwtl
xor
xor
idivb
dec
adc
call
imul
loop
sub
jbe
lret
sub
pop
mov
xchg
fsubl
outsb
popf
dec
adc
lds
loope
mov
repnz
out
mov
stos
pushf
mov
ret
pusha
mov
jecxz
jae
cmp
movsl
cmp
ret
pop
mov
and
cwtl
jge
sbb
add
sub
fdivs
add
movsl
mov
in
jae
add
adc
mov
pop
out
push
xchg
or
or
mov
pop
jns
xor
mov
cs
mov
mov
xchg
jge
or
fcom
imull
adc
out
inc
daa
inc
lea
test
and
xchg
cmc
push
addb
jb
pop
mov
test
push
push
repz
and
iret
pop
inc
test
jp
xor
sbb
mov
repz
sub
ss
shl
hlt
pop
jno
dec
insb
in
int3
ds
adc
or
mov
popf
mov
incl
out
xor
lret
mov
mov
pop
mov
in
pusha
out
ret
fdivrl
push
test
stos
add
aaa
loop
mov
jb
sub
in
scas
pop
imul
push
nop
mov
ja
inc
add
outsb
gs
jo
shrl
aad
imul
aaa
lods
mov
adc
xchg
jnp
inc
notb
jno
sub
mov
mov
xchg
loop
add
lods
test
imul
push
mov
clc
imul
fldl
repz
mov
int3
mov
nop
jne
dec
cli
fisubrs
push
push
orl
andb
sub
xchg
fwait
push
push
dec
fwait
adc
sbb
inc
xor
mov
sub
add
addr16
sarb
hlt
jne
push
add
negb
fs
add
cmc
loopne
jmp
ss
movsb
inc
subl
xchg
xor
or
xor
pop
decl
sbb
xchg
ret
mov
add
shll
dec
int
std
out
out
cmp
repnz
xchg
or
in
test
mov
lcall
jmp
repz
lcall
dec
ljmp
rclb
xchg
push
mov
fadd
pop
lea
xor
out
aas
cli
and
xor
pop
int
insl
xor
sbb
into
and
pop
ja
mov
lods
imul
pop
mov
out
push
mov
mov
mov
adc
leave
nop
or
lahf
adc
nop
push
in
hlt
xor
fimull
mov
mov
ljmp
iret
adc
fsubs
mov
cwtl
add
outsl
adc
pop
lds
cmp
mov
mov
push
fsubp
and
fwait
lock
mov
xor
out
fwait
xor
xchg
lds
mov
das
pop
and
fdivrs
and
int
cmp
ss
outsb
pop
leave
sbb
in
push
push
xor
add
daa
in
fs
subl
sub
xchg
sub
ljmp
movsb
mov
int
leave
fisubs
les
push
enter
pusha
push
ficoms
jle
lods
mov
lds
mov
enter
add
fs
dec
push
iret
dec
jnp
xchg
xor
sub
push
pop
or
inc
cmpsl
dec
and
xor
xor
or
lea
jmp
dec
outsl
cltd
js
cmp
mov
mov
jno
pop
outsb
mov
add
push
push
pop
ss
inc
push
test
out
jb
inc
mov
add
testb
jb
icebp
adc
dec
inc
xchg
in
je
sub
scas
loop
test
arpl
out
cltd
xchg
sub
shl
adc
es
xchg
add
aam
xlat
int
test
into
pop
jbe
testb
test
pop
push
mov
jge
fdiv
in
into
sahf
sbb
repnz
mov
test
cltd
pop
mov
popf
pop
jge
mov
sti
xchg
adc
pop
pop
jmp
je,pn
shl
or
cld
jl
mov
pop
xchg
out
rorb
movsb
idivl
inc
hlt
fadds
fisttpll
cltd
int
stos
inc
repz
pop
sbb
and
sbb
test
cmpsl
aad
add
test
mov
stc
sbb
jnp
xor
cmp
cmpsb
inc
mov
adcl
mov
in
adc
mov
push
fidivl
sbb
xor
ljmp
pop
and
pop
mov
or
jmp
jno
sub
dec
and
mov
fcoms
adc
into
mov
xor
or
std
mov
stos
lock
sub
jo
fildll
push
not
aad
mov
mov
pop
packuswb
pop
push
inc
mov
scas
push
in
or
mov
or
scas
add
add
push
pop
and
lahf
mov
and
enter
jmp
and
outsl
fdivl
std
or
mov
pop
xor
loopne
addl
dec
adc
mov
mov
or
int
sub
xchg
call
nop
lret
sar
cmp
pop
or
aas
jne
nop
sub
int3
sub
xor
mov
idiv
scas
push
xor
cmpsb
push
imul
sbb
rolb
cmpb
loopne
pop
stos
fbld
mov
xchg
in
insl
dec
or
and
fistl
mov
cmp
sub
out
punpckhwd
push
xor
push
jle
repnz
jns
lock
mov
or
mul
adc
mov
orb
inc
icebp
cmpsb
sbb
lret
inc
stc
mov
leave
mov
fidivl
lret
mov
scas
ja
icebp
fbstp
cmp
pop
sbb
cmp
jnp
pop
mov
push
aaa
push
mov
adc
enterw
insb
insb
mov
mov
xchg
insl
andl
lcall
test
mov
mov
pushl
imul
jbe
add
int3
lods
shrl
inc
bound
mov
je
mov
mov
in
xor
call
jbe
xchg
aad
sub
std
jne
test
sub
notl
or
outsb
xor
fbld
stos
pop
lods
dec
jbe
lods
dec
lret
icebp
test
int3
scas
je
call
sahf
mov
js
or
cmp
test
push
sbb
mov
fstl
nop
lahf
or
pop
das
mov
cld
outsl
loop
pop
push
arpl
mov
lcall
test
pop
cmp
and
cmp
or
mov
std
daa
sub
fcompl
push
ljmp
test
adc
lea
push
test
out
outsb
daa
sti
sub
jnp
pop
jg
test
push
or
bound
jae
adc
mov
ljmp
mov
cld
jge
pop
ret
xlat
cmp
stc
out
push
aad
cwtl
enter
cld
mov
popf
pop
sbb
cmp
aam
xchg
les
jle
ss
push
out
ljmp
push
imul
xchg
xor
icebp
sti
xchg
lret
mov
push
mov
mov
xorb
push
inc
dec
and
imul
scas
jo
aas
sbb
xchg
pop
jae
cmp
pop
xor
push
ds
inc
adc
fmuls
jle
lret
cmp
loopne
test
jecxz
xchg
pop
sbb
cmp
mov
call
cmp
mov
push
ret
in
xchg
das
xchg
shlb
push
in
add
fucomi
ss
out
enter
inc
add
sub
outsl
mov
dec
xchg
mov
out
cmpsl
jmp
insb
cltd
inc
jecxz
pop
jg
add
cmp
push
inc
cli
stos
pop
and
out
push
adc
repz
jb
popw
inc
fdivr
cs
fidivrl
enter
pushf
inc
xchg
repz
mov
int3
and
and
adc
mov
fcoms
lahf
mov
cmpsl
fildl
pop
cmp
xor
xor
or
mov
mov
shl
mov
jmp
lret
movsb
cli
jo
sbb
and
insb
mov
inc
dec
mov
jmp
push
cmp
or
ss
lahf
fisubs
dec
sahf
jp
cmp
into
xchg
mov
lods
movsb
lret
cld
xchg
ret
adc
xor
xor
out
mov
std
cwtl
je
es
push
jae
mov
insb
hlt
arpl
adc
or
sbb
fsubl
in
cwtl
lcall
push
in
sbb
out
add
inc
mov
jbe
lret
cltd
sbb
sub
dec
mov
jns
bound
or
sarl
js
test
lahf
lcall
cmpsb
dec
hlt
add
mov
repz
pop
xchg
cmp
sbb
cmp
das
enter
repnz
ss
lods
mov
mov
fdivs
pop
hlt
fsubs
leave
xchg
sarl
mov
movsb
jo
test
xchg
fwait
aaa
loop
lea
stos
cmp
pop
adc
inc
dec
in
mov
stos
lock
cwtl
les
sub
inc
ret
jne
sbb
sti
movl
scas
add
stos
outsb
loop
jbe
xchg
xchg
sbb
and
dec
push
sub
mov
cld
lret
fsub
nop
and
mov
rolb
xor
lret
gs
lea
xor
lret
or
mov
adc
in
mov
stos
imul
loopne
pop
cmp
std
push
adc
sbb
data16
cmp
cmc
and
xor
ja
clc
lds
iret
fsubrl
and
and
lahf
jo
aad
add
in
rorb
out
pop
nop
sub
loop
xchg
lret
enter
lea
mov
sbb
xchg
inc
mov
aam
mov
dec
icebp
mov
sarb
mov
sub
pushw
jno
push
out
mov
mov
push
rorb
call
sub
mov
sbb
roll
adc
ret
add
aam
mov
pop
and
lods
scas
icebp
mov
popa
sbb
inc
adc
pushf
ljmp
push
pop
fcoml
lds
xchg
mov
leave
stos
bound
mov
push
jns
cmpsb
outsb
stos
xchg
mov
repz
movsb
mov
add
cmp
imul
stos
inc
pop
data16
call
in
out
ret
jne
ss
rcrl
inc
mov
sahf
and
and
lcall
cs
jle
rcl
sbb
jg
jns
dec
xchg
out
or
mov
and
xchg
movsb
and
imul
arpl
fs
pop
ret
xchg
ss
outsb
sbb
jmp
ss
out
frstor
xchg
int
insl
push
push
sub
fsts
adc
jno
mov
cmp
push
or
xorl
fstpt
je
repz
jnp
dec
iret
loope
xor
add
push
and
xor
je
pop
mov
sbb
ds
xchg
mov
cmpsl
jne
inc
popa
out
xchg
lret
ss
movsb
pop
jmp
ja
dec
adc
mulb
test
sub
movl
in
jne
jne
loop
leave
mov
cmp
cltd
fstpt
pushf
stos
dec
jp
mov
pop
in
pop
inc
mov
pop
cmp
outsb
jmp
jmp
jne
mov
dec
sub
faddl
insl
jmp
cs
test
fwait
addl
ds
jo
jge
shlb
mov
mov
xlat
and
inc
movsb
sub
mov
stos
jg
mov
fs
mov
and
testb
test
aas
dec
cmp
push
push
sarl
outsl
subb
mov
cmp
sub
add
hlt
cmpsl
pushf
stos
or
sbb
mov
test
cmpsb
mov
popa
shlb
js
imul
mov
pushl
mov
rcll
outsl
jl
mov
mov
xor
cmp
ljmp
adc
les
loope
jno
jae
inc
pop
xor
jmp
cmp
mov
subl
ret
or
shrb
enter
cwtl
rol
adc
filds
movsl
cmp
in
sbbl
dec
int3
dec
xor
xchg
movsb
dec
jl
hlt
cmc
lret
cld
cmp
das
pop
cli
fidivrl
mov
jl
adc
inc
xor
add
cmc
arpl
xor
inc
cs
test
out
rcrl
popf
or
add
xchg
into
inc
and
inc
loope
mov
fwait
adc
xor
xchg
iret
out
pop
cmpsb
test
outsb
dec
and
cwtl
xchg
mov
roll
nop/reserved
mov
add
int
mov
enter
add
add
orb
js
xor
outsb
es
push
push
cmp
jge
out
fiaddl
shlb
sub
mov
or
shl
sbb
mov
xchg
lret
out
clc
ss
push
lcall
lods
xchg
xor
adc
scas
fs
fs
pop
adc
arpl
push
cmp
mov
adc
arpl
pop
popl
rep
jae
lret
push
mov
inc
inc
movsl
xor
aaa
jb
aaa
mov
das
inc
aas
sbb
movl
pop
mov
out
fisubrs
test
sbb
pop
inc
or
jmp
aaa
xor
fnstcw
cld
cmp
mov
loopne
in
repnz
dec
mov
daa
sti
and
enter
pop
dec
fnsave
cmp
sub
push
dec
ds
mov
pop
inc
adc
test
fwait
cmp
pushw
aaa
sbb
test
lods
or
or
pop
es
adc
gs
mov
clc
cmpsb
lea
insb
pop
adc
ficoms
sbb
push
roll
cwtl
bound
test
mov
sub
jecxz
push
cmp
mov
mov
popa
ljmp
cmpsb
js
pop
into
or
es
and
cmp
add
cmc
pushf
lods
sti
jmp
mov
loop
pop
mov
enter
push
iret
inc
push
bswap
fldl
push
and
add
insb
xor
scas
cmpl
push
imul
loopne
and
adcb
sbb
int3
sbb
and
xor
xchg
jne
call
jb
into
test
ja
xorb
add
xchg
add
mov
sbb
xchg
lcall
jge
xchg
lcall
add
cmp
ja
fwait
pop
loop
aas
mov
push
or
sub
mov
sub
push
int3
jns
in
xchg
xor
insl
insb
insb
mov
lahf
insl
xor
lahf
mov
lock
pop
sbb
mov
dec
call
das
mov
push
iret
shll
dec
lods
les
jnp
pop
push
xchg
inc
cmp
fists
cmpsl
or
jb
pop
es
and
inc
inc
int
inc
lock
es
xor
add
lret
out
sub
push
push
mov
sahf
and
sub
pop
loopne
into
mov
lret
enter
ret
call
imul
fdivr
sahf
mov
inc
cmp
adc
repnz
ja
stos
mov
or
pop
and
cmp
pop
sbb
ret
cltd
sub
dec
inc
and
cli
mov
dec
mov
inc
in
fidivl
and
sub
cltd
xor
add
pop
ret
nop
insl
inc
xchg
jmp
and
inc
dec
sbb
sub
cmp
mov
test
xchg
push
cmp
pop
scas
jl
push
pushw
jge
sub
mov
mull
push
pop
mov
dec
sbb
jg
jnp
add
and
jl
inc
adc
and
lret
ret
imul
and
xchg
mov
testl
jge
xchg
mov
jle
or
mov
dec
mov
idivl
scas
pop
sbb
punpcklbw
es
ret
jg
or
xor
pop
add
ffree
xchg
jbe
aam
int3
repnz
jge
and
das
jmp
or
cmp
or
xor
fisttpll
add
jno
ss
movsl
pop
mov
ss
lret
out
cmc
fisttpll
mov
jp
daa
mov
das
push
jnp
in
cltd
out
jmp
repz
xchg
es
int
jle
out
pop
push
insb
fmuls
add
cltd
jl
add
int
adc
adcl
cmpsb
cmp
xchg
fstl
and
aaa
addr16
pusha
jne
and
xchg
and
mov
mov
pop
inc
cmpsl
mov
push
mov
cmp
pop
faddl
sbb
movsb
jns
idivl
por
sub
inc
das
bound
ss
rcrb
daa
mov
jb
xor
ss
dec
aaa
dec
or
xor
pop
aam
xchg
sub
lret
mov
aad
mov
outsl
fs
pop
add
mov
dec
sahf
mov
xor
mov
mov
repz
loop
push
xchg
subb
xchg
mov
andb
dec
or
incl
ljmp
pop
fwait
and
mov
jns
cmpsl
fistl
clc
je
cmp
out
or
scas
jp
data16
push
mov
cmpsb
stos
inc
inc
shrl
mov
lret
pop
xor
mov
int
out
pop
rorb
repz
push
ja
stc
jne
dec
ja
mov
sub
call
cld
mov
xor
xor
or
mov
shl
jmp
sbb
adc
aad
into
sti
mov
push
sub
ficoms
push
cmp
lock
push
pop
ror
push
subb
inc
fdivr
jmp
cmp
shll
add
mov
gs
xchg
lods
mov
inc
xchg
and
cli
cmp
xor
pop
cwtl
fisttpll
filds
xchg
notb
sub
push
mov
hlt
in
pop
pop
shl
rorl
mov
pop
jo
xchg
stc
loope
pop
shll
jle
cmc
clc
dec
shrl
sub
xchg
shrl
pop
xor
scas
out
lea
push
rcl
or
jnp
fimuls
loopne
xchg
out
popa
ror
jle
mov
push
lcall
and
stc
gs
pop
xor
fists
clc
sbb
xchg
dec
pusha
pop
push
movsl
out
arpl
push
cmp
mov
pushf
xchg
pop
add
push
adc
notl
sub
in
movsb
fidivrs
inc
sbb
in
lcall
sbb
xorb
or
dec
jne
test
cmpsb
imul
dec
push
push
sub
loope
aas
inc
mov
sbb
cltd
insl
out
sarl
add
jns
push
insl
push
xor
push
test
dec
insb
dec
stos
or
xor
mov
clc
sub
add
cwtl
ja
push
push
lods
shl
leave
hlt
mov
out
xor
xchg
setae
and
dec
push
mov
or
scas
xchg
adc
mov
in
sub
jge
jne
outsb
and
pop
mov
jecxz
out
test
sbb
mov
mov
xchg
fs
or
mov
clc
jae
cmc
pusha
push
xchg
insl
push
cli
mov
pop
jne
jo
pop
gs
das
inc
jbe
lds
enter
cmpsb
push
add
xchg
mov
testb
imull
xor
repz
pop
enter
push
xchg
mov
data16
xchg
notb
add
jecxz
out
xchg
jo
inc
idivl
inc
nop
sbb
gs
xchg
fucomip
rclb
into
add
pop
inc
out
or
dec
lods
push
test
incb
jb
push
or
or
jns
jl
inc
mov
in
test
mov
mov
mov
xchg
and
sbb
inc
test
mov
scas
sbb
cmp
popf
loopne
inc
in
ret
inc
ja
fwait
popf
mov
dec
rclb
pop
into
or
dec
in
in
push
and
imul
jne
pop
clc
and
pop
incl
adc
cmp
aad
and
mov
dec
pushw
movsl
ret
out
insb
jmp
mov
jne
rorb
xlat
hlt
inc
clc
sub
inc
outsl
jo
repz
jl
and
and
cmp
pushf
adc
repnz
mul
sbb
cmp
sbb
in
sbb
mov
in
inc
stos
je
out
mov
xor
jbe
mov
es
movsb
jno
pop
popa
cs
movsb
mov
push
adc
shlb
nop
inc
inc
xchg
cmpsl
and
loopne
iret
sti
xor
pop
cld
lcall
fsubs
jns
int
xchg
dec
add
mov
or
inc
mov
add
adcl
lods
sarb
nop
sbb
mov
sbb
in
mov
adc
sub
shrl
or
andl
mov
test
test
bound
mov
dec
mov
dec
dec
mov
rcrb
mov
aam
jb
into
lods
and
push
add
cli
sbb
enter
fs
mov
dec
or
pop
fmuls
add
jp
mov
or
filds
pop
scas
jne
test
inc
lods
sbb
dec
dec
jmp
dec
mov
fs
mov
fstpl
mov
mov
jo
sbb
scas
out
xor
daa
ljmp
pop
lret
push
mov
push
mov
cmpl
dec
iret
mov
mov
mov
cwtl
loop
mov
inc
subl
and
mov
lea
ljmp
jae
cmpsb
xlat
jl
and
push
jae
mov
mov
ret
add
cmovp
les
in
out
ds
and
xor
push
cld
iret
faddp
push
call
lcall
pushf
dec
pusha
cld
fnstsw
inc
test
sub
xlat
dec
inc
mov
mov
daa
push
mov
cmpb
sti
sbb
adc
xchg
adc
arpl
xchg
jg
dec
stos
and
sbbb
or
fsub
sbb
iret
mov
arpl
bound
add
push
fsubrl
lcall
inc
push
mov
cmp
push
sti
sub
mov
or
loopne
jbe
xor
or
inc
iret
xchg
push
testb
mov
or
mov
mov
jmp
and
sbb
in
and
push
jae
push
push
cmp
sub
pusha
sbb
xchg
into
js
lcall
cs
shlb
mov
jb
scas
mov
or
dec
jle
xchg
pop
hlt
mov
sbb
data16
lock
sbb
mov
or
add
mov
and
cmpsl
addr16
pop
insb
ds
mov
dec
sete
add
imulb
xchg
jg
popa
setp
addl
push
xchg
mov
mov
or
addb
fsub
lret
repz
adc
xor
adc
pushf
nop
cs
jg
iret
insl
lahf
push
xor
push
xchg
cltd
in
xchg
daa
sahf
jo
sub
or
fbld
mov
dec
fidivrs
sub
mov
mov
mov
sub
pop
loopne
sub
mov
mov
fs
pop
mov
xchg
dec
mov
andb
cmpsb
fwait
sub
xchg
ret
push
or
mov
inc
pop
pop
xor
mov
ljmp
cmp
insl
push
adc
add
or
adcb
mov
push
arpl
lea
dec
pop
adc
repz
lea
push
fsts
in
xor
je
cmp
and
ds
add
outsl
clc
cmpl
or
arpl
pusha
xchg
fwait
clc
ja
loope
popf
das
cmp
push
ss
xchg
mov
cmp
pop
sub
mov
jl
xchg
dec
sub
dec
sub
pop
cmp
insb
lea
add
in
cli
pop
or
xor
sbb
inc
inc
aas
ljmp
sub
ljmp
js
mov
add
mov
adc
insb
lret
jno
xor
cmp
imul
mov
in
sbb
test
fisttps
ret
cmp
leave
mov
aad
xchg
sbb
push
int3
push
clc
in
in
add
mov
adc
rol
or
cwtl
xor
jmp
mov
stos
lahf
mov
jp
xlat
or
iret
mov
ret
jg
pop
repnz
sbb
sti
mov
movsl
jp
daa
mov
mov
push
fs
dec
add
aam
imul
and
pusha
add
stc
mov
imul
pop
pop
outsl
inc
cmp
aaa
ljmp
add
sbb
pop
flds
mov
ret
pop
ficomps
push
or
mov
scas
or
dec
cs
pushf
mov
sub
mov
add
push
in
sub
cmp
fs
data16
ficoms
popa
stc
dec
mov
outsl
loopne
popf
jns
in
mov
mov
ja
xchg
xor
scas
lods
xchg
push
leave
popa
aad
inc
scas
and
mov
enter
scas
jo
lds
sub
or
jbe
jecxz
xor
pop
insb
xchg
lods
dec
outsb
loopne
orl
std
dec
lods
add
pop
jp
rcrb
repnz
nop
mov
imul
ds
jge
int
push
jbe
fs
call
imul
test
rcll
mov
cmp
lahf
push
xchg
arpl
pop
adc
cmp
jmp
das
scas
jo
pop
negb
cmpsb
ljmp
sub
cmp
or
daa
push
inc
lret
sub
lret
insl
xor
mov
or
jns
xor
addb
lahf
mov
cli
ficoms
das
cmp
push
or
stos
mov
cld
jmp
add
jo
orl
pushf
testb
cld
in
sub
mov
negl
test
loopne
int
mov
mov
sub
cmp
test
mov
jle
push
sbb
mov
push
arpl
mov
jecxz
ds
add
xchg
lods
pop
and
arpl
ret
shr
or
dec
xor
pop
xor
and
loopne
fdivrs
stos
aaa
add
and
repnz
jb
adc
dec
push
sahf
faddp
mov
xchg
iret
das
pop
sbb
loopne
lret
xor
sbb
enter
pop
xor
or
scas
pop
add
outsl
xor
stos
es
lcall
jno
pop
ret
inc
dec
sub
idivb
jge
or
and
adc
jg
sub
repnz
xor
dec
fcomp
js
icebp
lds
sbb
xchg
inc
jne
pop
xor
mov
xor
or
jbe
mov
xchg
scas
iret
sbb
fstpt
es
jge
mov
jle
mull
es
je
pushl
ficoml
repz
movsl
cmp
repnz
xchg
nop
inc
out
fbld
push
xchg
fidivrl
inc
mov
cmpsl
mov
push
dec
or
lods
roll
shl
shr
mov
mov
xor
mov
xor
or
mov
jmp
lock
mov
enter
lret
test
enter
add
push
jmp
and
push
pop
xor
jmp
xchg
popf
cwtl
sbbb
sub
pop
cmp
test
cmp
cmp
adc
pop
push
sbb
sub
push
aam
inc
push
mov
sub
jno
xor
pop
bound
insl
aam
scas
ja
movsl
mov
inc
cli
adc
pop
push
fstps
mov
lcall
cmc
pop
aam
shlb
jbe
add
out
mov
loop
es
shll
cwtl
popf
clc
sub
pop
mov
test
gs
xchg
jge
jns
add
iret
popf
mov
cld
daa
sub
xor
aas
aam
add
jns
push
and
mov
push
fistps
or
jmp
das
add
inc
jae
or
call
aas
in
in
add
orb
xor
insl
jae
inc
ja
popf
adc
stos
sar
test
addr16
xchg
stc
aas
mov
xchg
jb
loopne
jnp
jno
int
sbb
mov
mov
mov
rol
testb
ljmp
cmp
mov
push
and
xor
cmp
and
inc
arpl
int3
stc
pop
adc
xchg
jo
icebp
arpl
inc
out
aad
fwait
mov
or
push
dec
lcall
je
and
gs
sub
or
fisttpll
in
inc
es
jo
xor
dec
sub
lods
jno
shrb
sub
xchg
fidivs
or
inc
mov
mov
icebp
xchg
xchg
test
mov
enter
push
sub
cmp
jmp
mov
shr
mov
mov
jge
sahf
xchg
test
dec
repz
nop
mov
decl
cld
mov
push
dec
xor
sti
or
jnp
loop
jno
mov
jnp
out
cmc
fsubrs
cmc
out
cmpsl
mov
popl
imul
pop
cmp
cmc
out
popa
and
daa
iret
push
mov
mov
sub
cmp
scas
les
lret
cmp
push
xchg
fisubrl
lods
dec
inc
dec
sbb
inc
mov
aam
jo
ret
and
mov
jp
xor
mov
xchg
mov
jmp
neg
cmp
aam
push
ret
in
inc
fisubl
push
sbb
es
mov
in
aaa
inc
je
in
and
jge
int
stc
lock
sub
and
bound
sbb
push
push
pushf
scas
and
enter
in
jmp
mov
repz
hlt
cmp
mov
xor
lahf
shr
in
in
mov
and
scas
inc
mov
int
dec
jno
mov
shrl
push
cmp
adc
daa
pop
sahf
mov
jle
and
adc
cmp
es
aad
jb
aam
pop
mov
push
push
cmp
fst
xor
sbb
add
pop
push
data16
sub
xchg
subl
mov
out
ffree
jg
loope
test
jns
pop
dec
pop
dec
ljmp
dec
pop
add
and
fistl
daa
cmp
mov
mov
out
inc
ret
dec
test
cwtl
loope
adc
call
imul
and
outsl
and
subb
data16
pop
jbe
mov
mov
pop
loopne
cmpsl
jge
imul
loop
cwtl
mov
sti
std
insb
push
xor
sahf
or
push
js
lcall
sub
aad
add
cmp
daa
roll
cli
pop
pop
jnp
sub
cmp
add
das
and
add
adc
add
sti
mov
add
pop
cmp
jno
mov
pop
ret
iret
mov
call
xchg
stc
cmp
ret
pop
cmp
jl
imul
lcall
shlb
mov
popa
in
push
sub
jp
or
test
ja
in
and
cmp
xlat
sub
mov
pusha
test
rcrl
fstps
dec
jle
or
test
imul
sarb
mov
mov
dec
test
hlt
add
xchg
xchg
cs
inc
mov
inc
fcmovbe
and
and
jmp
fwait
cmp
add
push
inc
pop
loopne
test
pushf
push
cmpsb
pop
loope
lods
dec
fwait
pushf
mov
in
loope
mov
cld
cwtl
add
imul
lods
xchg
lret
es
roll
ja
int
je
mov
xchg
dec
push
cld
adc
xchg
xchg
adc
pop
cmpsb
inc
subl
aaa
cmp
fcoms
fs
dec
xor
movb
cmp
or
jb
push
and
mov
enter
xchg
pop
dec
not
and
xor
mov
jmp
mov
sbb
cltd
cmovbe
adc
cmp
push
aad
push
clc
sbbb
xchg
adc
pop
sbb
mov
push
xchg
jp
push
shlb
repz
pop
xor
sub
out
add
insl
call
xchg
cwtl
fcmovu
jne
mov
xor
les
pop
mov
xor
push
lcall
stos
xor
shrb
adc
out
jp
imul
aam
divl
add
sti
daa
insb
push
in
xchg
lcall
sbb
xor
add
or
sub
movsb
outsl
movaps
or
pop
push
sbb
mov
xchg
xchg
or
dec
dec
shlb
shll
jo
imul
movsl
test
test
out
movsl
scas
mov
sbb
data16
mov
stos
sbb
pop
sbbl
xchg
pop
push
into
adc
fistps
mov
xchg
out
leave
mov
xchg
mov
loop
imul
jg
sub
push
in
or
dec
jbe
movsl
popa
gs
test
or
dec
aaa
pop
xchg
mov
shrb
call
sub
mov
out
loopne
lret
ja
popa
sbb
mov
xchg
fnsave
xor
into
pop
inc
jne
in
sub
ss
mov
scas
cmp
cmpsl
shlb
or
sub
enter
inc
push
repz
fisttpl
test
outsl
xchg
stos
xor
jns
repnz
fldcw
push
sub
jne
leave
jo
cmp
in
mov
dec
mov
subl
or
outsl
divb
adc
adc
cmpsb
mov
cs
adc
inc
lret
and
pop
pop
cmp
mov
inc
push
sbb
add
or
and
xchg
mov
add
xor
rclb
sub
and
cmpsl
push
ror
sbb
adc
inc
test
sub
popa
and
outsb
sub
cmpsb
xor
mov
shlb
in
sbb
enter
andb
scas
dec
mov
or
repnz
jnp
stos
lds
dec
adc
sbb
xchg
cmpsb
mov
xchg
mov
xlat
cmp
lahf
and
jae
xchg
jecxz
das
movsb
shl
pusha
push
adc
mov
push
loop
and
pushf
in
xchg
jnp
add
xchg
scas
stos
dec
out
jne
add
dec
xchg
sbb
xchg
mov
dec
std
or
clc
outsl
ret
sahf
ficoms
cmp
ret
and
mov
pushl
push
outsl
sbb
jp
out
lret
jo
push
push
icebp
push
lea
sub
xchg
aaa
push
xorl
lock
call
in
jmp
arpl
jecxz
and
lret
mov
fwait
mov
mov
push
sbb
stos
int3
sub
sub
imulb
mov
adc
or
cmp
xchg
jle
in
aas
push
xchg
stc
popl
xor
int
mov
sub
in
or
mov
int3
fwait
stc
imul
sahf
ds
lret
mov
sub
push
into
cmpsl
stos
daa
iret
mov
insb
push
mov
rolb
mov
jne
adc
adc
insb
shrl
es
ret
loope
clc
jo
int
inc
movsl
inc
pop
out
xchg
andb
sub
movsb
push
sbb
andb
pusha
mov
sbb
outsb
xor
and
or
or
in
inc
xor
and
mov
stos
mov
aas
dec
sub
jo
dec
inc
fstpt
inc
xlat
in
movsl
jg
imul
mov
push
push
sub
push
xor
fiadds
push
adc
std
mov
push
rorb
push
fnstsw
xor
loopne
adc
dec
sahf
cmp
dec
jo
test
in
out
movsb
inc
lret
xchg
xchg
nop
inc
add
jb
sbb
dec
or
popa
clc
adcl
or
mov
mov
outsl
and
loopne
rclb
cmpsb
icebp
adc
sbb
movsb
cmp
and
cld
jbe
xor
stos
push
lock
insb
cli
or
jl
movsl
imul
inc
mov
adc
out
and
sub
mov
mov
cli
sbb
adc
outsl
mov
test
push
loopne
test
loope
jp
daa
test
shlb
xchg
sbb
and
cltd
imul
cld
xor
cli
adc
cli
add
aas
cmp
sarl
cmp
push
jno
xor
fisttps
mov
out
sub
mov
cmp
push
aam
inc
mov
pop
push
insb
outsl
pop
or
mov
jmp
mov
jo
or
lcall
out
movsb
in
mov
mov
int
jecxz
fs
mov
xor
or
mov
mov
shrd
shr
mov
mov
mov
xor
jmp
sbbl
das
je
mov
stos
push
push
cmp
clc
sbb
ljmp
pushf
hlt
movsb
sub
mov
adc
sub
mov
jo
mov
daa
mov
cld
mov
popf
test
enter
mov
jecxz
mov
mov
loopne
lods
xchg
sub
inc
pop
xchg
xor
cmp
cmp
dec
in
cmc
jnp
mov
lahf
iret
rcrb
mov
mov
xlat
loop
mov
and
sar
lea
sbb
fs
adc
dec
or
cmp
mov
popa
mov
bound
data16
sub
jge
xchg
addr16
lods
add
mov
lock
or
int3
shll
mov
frstor
out
pop
mov
arpl
cmp
sub
fisubrl
jbe
sti
sbb
push
insb
aaa
xor
inc
imul
mov
xchg
xchg
test
pop
scas
ja
cs
out
cmp
mov
and
add
mov
cmp
pop
cmp
sub
orl
mov
ja
mov
testl
and
add
cwtl
jp
cmp
sub
add
push
stc
adc
in
xor
rorl
dec
scas
xchg
sub
ds
pop
dec
pop
cmpsb
cmp
xor
dec
mov
insb
lret
sbb
dec
push
pop
daa
xchg
pop
xchg
fwait
das
inc
ret
popf
cmp
xchg
inc
xor
mov
cmpsl
bound
push
out
add
push
mov
lahf
jnp
mov
jns
loopne
xlat
cmp
dec
scas
inc
int
xor
push
incl
pop
or
sub
or
adc
loope
rcrb
icebp
decb
cmp
les
adc
popaw
addr16
inc
scas
jno
addr16
ja
notb
lods
gs
std
ja
popa
iret
jns
jge
rolb
test
cmp
mov
int3
pop
jb
cwtl
pop
mov
rclb
jmp
cmp
imul
push
sahf
adcl
mov
bound
and
aad
outsl
jle
pusha
popf
dec
iret
mov
out
xchg
push
push
add
cmp
and
push
test
jnp
mov
movsb
push
jnp
mov
xor
push
jp
out
adc
test
lock
mov
inc
popa
popf
push
pop
out
aaa
mov
mov
dec
mov
cmc
xchg
inc
pop
jle
ret
fisubl
adc
or
mov
into
cmp
ss
test
xchg
dec
inc
xlat
orb
rcrl
mov
pop
push
jbe
pop
lods
lret
shl
pop
xor
stos
mov
popf
sahf
adc
mov
xor
xor
fsts
ss
outsb
in
addb
popf
lret
int3
mov
or
push
iret
leave
and
or
inc
jl
decl
sub
incb
and
jecxz
xor
dec
mov
mov
enter
sub
les
fsts
jmp
loopne
jl
inc
fwait
outsl
cli
or
xchg
sahf
pop
or
xorb
adc
fldt
movsl
or
pop
ret
pop
xor
dec
gs
or
sbb
add
xchg
and
sbb
les
pop
and
xchg
mov
pop
int3
roll
push
xor
pop
dec
dec
mov
mov
inc
movsb
cmp
imul
xchg
cltd
das
mov
mov
stc
dec
add
sbb
insb
add
in
jmp
fucomi
out
aad
jo
iret
sub
test
jle
jne
sbb
inc
and
mov
inc
pop
aas
rorb
mov
lods
ja
sbb
aam
popa
pop
es
fildl
ja
ja
inc
and
insb
cli
push
js
mov
sub
sahf
or
xchg
cmp
std
jmp
mov
cwtl
pop
lea
sub
add
jbe
and
push
clc
mov
ret
mov
pusha
stc
xchg
loope
fldl
es
inc
mov
fistpll
out
hlt
mov
pop
cmp
sub
add
scas
cli
pop
scas
out
fidivs
dec
push
mov
inc
stos
xchg
in
scas
loope
ljmp
pop
outsl
divb
in
jge
mov
mov
jecxz
aaa
pop
and
inc
adc
mov
pop
sub
xchg
jl
sub
push
and
pop
stos
sbb
cmp
repz
clc
sub
sub
int
mov
ret
mov
xor
cwtl
cmc
dec
pop
inc
data16
outsl
adc
mov
les
fcom
adc
xchg
sbb
gs
in
shll
sbb
push
sahf
in
or
sti
jnp
std
das
dec
vucomisd
icebp
cmc
fisubrl
jns
mov
adc
std
fidivrl
das
sub
xchg
pop
mov
xor
shl
mov
or
mov
cmp
je
mov
sub
mov
mov
mov
jmp
push
cli
test
fs
pop
jb
shrl
sub
push
push
clc
cmp
pop
push
or
ds
or
pop
mov
cmpsl
arpl
mov
in
imull
add
les
jno
xor
int3
pop
dec
fsubrl
icebp
loope
add
sbbb
jnp
mov
adc
mov
push
call
hlt
mov
addr16
aam
push
notb
jge
sbb
mov
popf
daa
or
mov
cld
inc
imul
or
cld
mov
imul
lahf
sub
pushf
pop
push
pop
and
dec
cmp
scas
idivb
lcall
lahf
add
mov
je
lods
aaa
adc
rcll
adc
sbb
ss
hlt
mov
mov
ret
and
push
mov
fwait
out
push
aaa
insl
mov
add
dec
sbb
mov
adc
aam
xchg
sub
pop
test
cmpsb
lea
fs
data16
pop
mov
sub
jge
and
sub
pushf
push
mov
mov
mov
movb
jnp
cmp
or
test
mov
aam
pop
sbbl
cmc
in
sub
lock
sub
mov
jb
scas
sbb
cltd
jo
add
out
jecxz
inc
insl
mov
sub
push
sub
pusha
insb
insb
or
sbbl
xchg
mov
cld
sub
push
dec
push
arpl
jmp
ss
loope
jge
bound
xchg
xchg
out
lods
xor
or
or
subl
mov
bnd
mov
or
xchg
jl
fnstcw
adc
and
lock
jno
es
and
inc
arpl
sbb
outsl
add
in
repnz
std
mov
pop
and
jg
lcall
push
shll
dec
dec
daa
sub
add
movsb
push
push
cmpsl
and
test
int3
mov
arpl
pop
cmp
icebp
and
pop
orl
nop
inc
imul
adc
inc
mov
push
rcrl
dec
lcall
arpl
pop
ljmp
int3
mov
xor
jno
adc
push
icebp
push
sti
repz
sub
std
jl
ds
xchg
cmpsb
ljmp
and
mov
ja
test
dec
add
fistl
out
mov
in
and
pop
and
pop
loop
push
mov
loop
scas
pop
aas
rorl
hlt
adc
push
clc
dec
push
mov
es
lret
ret
sti
mov
inc
mov
sub
jns
mov
imul
xchg
in
sub
insb
mov
je
mov
ljmp
sub
movsb
inc
test
xchg
pop
outsl
mov
lock
push
mov
cmp
jae
stos
or
cmpsb
dec
dec
rep
pop
pop
adc
jbe
push
les
movsl
int3
mov
xchg
sahf
push
and
mov
mov
dec
rcrb
test
dec
sub
cs
dec
cltd
mov
sbb
cmc
popf
cmp
inc
in
or
rorb
inc
add
js
cmpb
ss
imul
popf
or
xchg
mov
mov
jp
mov
imul
xchg
and
daa
stos
mov
inc
mov
enter
into
imul
cmpsl
popa
adc
inc
out
sub
xor
jnp
dec
xchg
sub
subb
lret
enter
xor
out
and
int3
mov
jge
push
pop
push
pop
andl
repz
lahf
adc
cld
sbb
push
mov
mov
cmp
das
push
jmp
cltd
aaa
cli
pusha
out
in
mov
inc
into
fcmovnu
xor
mov
aas
fnsave
mov
test
dec
push
outsb
jp
ja
push
inc
fdivrs
dec
sahf
clc
lods
mov
mov
jbe
int3
dec
dec
push
sbb
and
lds
scas
out
push
hlt
jmp
cwtl
add
mov
cmp
push
clc
pop
inc
js
loop
pop
pusha
or
inc
sbb
mov
loope
out
pop
cmp
adc
sub
repnz
repz
into
stos
push
push
cmp
loope
ds
adc
mov
pusha
jle
hlt
mov
xor
adc
ja
cltd
inc
cltd
gs
mov
mov
push
mov
mov
aaa
cmp
or
fidivrs
inc
mov
out
mov
add
aam
pop
push
xor
lahf
xchg
mov
jg
pop
jo
fnstsw
ret
cmp
dec
mov
sub
test
pop
insl
cmp
xor
xor
jne
mov
fdecstp
pop
mov
inc
fcoms
pop
btr
shl
xor
mov
mov
mov
xor
xor
shrd
shr
or
xor
or
jmp
sahf
or
jp
cmp
sub
mov
xor
mov
xchg
push
push
cmp
int3
in
xor
cltd
pop
xchg
jo
clc
inc
call
push
fstl
inc
pop
pusha
pop
adc
imul
pop
div
pop
shlb
lods
lcall
inc
xlat
rcr
shll
xor
xor
mov
push
shlb
fwait
int3
shrl
movsl
mov
mov
out
sarl
add
subl
sbb
mov
add
icebp
fscale
mov
xchg
jns
jbe
push
in
and
jbe
cmpsb
rcrl
jnp
aam
insl
pop
test
je
sub
dec
dec
push
cwtl
sub
popf
jecxz
push
aas
mov
popa
iret
fldcw
stc
imul
mov
pop
repz
popf
xor
and
sbb
lret
xor
iret
inc
mov
jg
popf
cmp
mov
shl
sahf
dec
push
add
push
jb
mov
pop
addr16
sub
loop
inc
jno
sar
loopne
mov
test
adc
pop
pop
lods
xchg
sbb
aam
push
sbb
jns
ljmp
inc
iret
xchg
add
jno
hlt
jl
mov
jno
and
push
lcall
dec
inc
cs
orb
sbb
push
ret
adcb
stos
xlat
iret
sbb
into
frstor
fmuls
in
xchg
sahf
daa
pop
xchg
shlb
push
jnp
lds
popa
rclb
pushf
sub
notb
iret
fwait
inc
mov
dec
pop
orb
subl
movsl
cmp
mov
xchg
push
dec
cmp
push
into
cmc
pop
adc
cmp
jnp
rolb
gs
xor
sub
fwait
inc
sbb
xchg
mov
cmp
xchg
nop
fwait
push
fs
jp
cmp
add
xchg
ss
mov
and
rorl
test
push
leave
add
adc
imul
or
pop
movsb
xlat
push
jecxz
ds
mov
in
add
roll
loopne
inc
mov
mov
xchg
mov
xor
imul
out
inc
mov
int
aaa
lret
nop
rolb
xor
mov
movsb
xor
js
dec
pavgw
push
je
sbb
popf
fisubrl
xchg
jecxz
fdivr
nop
std
jb
mov
sub
jns
loop
pushf
or
cltd
mov
adc
repz
jnp
data16
icebp
shrb
outsl
xchg
mov
ss
or
addb
fidivrl
rorl
test
push
lods
fldl
sub
jp
xchg
xchg
inc
sbb
jge
pop
jno
scas
in
mov
pop
adc
subb
iret
xorb
lea
out
out
enter
out
cltd
bound
push
xor
push
and
jae
repz
and
ret
addb
rcll
je
and
mov
call
adc
cs
mov
rorb
jne
push
lea
sub
daa
sbb
ret
insb
repz
mov
or
cmp
out
jge
and
and
xchg
jno
fists
in
fwait
in
ljmp
ror
call
mov
int3
out
mov
mov
testl
fidivrl
decb
pop
jecxz
test
mov
sbb
inc
fnsave
xchg
sbb
data16
dec
cmp
in
xor
out
test
movsl
sub
inc
out
xor
xchg
adc
dec
je
icebp
jmp
test
mov
cmc
pop
inc
cmp
mov
push
outsb
push
xchg
add
mov
stos
es
xchg
xchg
sar
cli
or
and
aad
sbb
xchg
repz
mov
call
movsl
pop
push
add
or
and
or
push
repnz
inc
xor
xchg
and
cmp
mov
mov
out
cwtl
pop
cmp
inc
sub
in
gs
pop
or
inc
or
ret
pop
adc
xchg
test
mov
mov
xor
pop
test
leave
in
aaa
mov
rorl
test
push
es
cld
outsb
leave
les
sbb
pushl
or
mov
sub
jle
ja
repnz
push
cli
enter
push
ficomps
jo
add
mov
fnstsw
jecxz
mov
cmp
xor
mov
jmp
mov
and
lcall
jae
cmp
pop
add
mov
cld
dec
adc
faddp
and
test
mov
fbld
incl
mov
insl
int
repnz
and
pusha
lret
xor
mov
jp
addr16
xor
jp
xchg
ljmp
icebp
aaa
ljmp
jle
push
scas
test
ret
imul
out
push
scas
pop
ss
mov
jmp
mov
add
rcl
pmuludq
outsl
mov
mov
mov
mov
xor
shl
xor
mov
mov
mov
mov
xor
xor
shrd
or
shr
mov
mov
or
mov
cmp
jne
cmp
je
jmp
mov
mov
mov
shl
xor
mov
mov
mov
xor
xor
shrd
xor
or
mov
mov
mov
jmp
and
adc
xor
mov
xor
mov
push
push
or
insl
push
xchg
inc
sub
cld
push
or
out
loopne
in
repnz
cld
mov
jo
bound
pop
pop
test
inc
arpl
sub
cmp
sub
mov
pop
dec
pop
and
mov
lods
xchg
cmpsl
mov
and
lods
xor
or
cmpsb
insl
inc
push
push
fldl
clc
aas
mov
push
fcmovne
jo
xchg
ja
or
mov
sti
mov
sub
lods
arpl
pop
insb
xor
push
jmp
sub
int
aaa
test
imulb
xchg
adc
sub
scas
lock
cs
clc
or
inc
sbb
push
std
dec
or
loopne
mov
push
jle
cs
int3
and
cmp
add
pop
cmp
push
jp
shll
add
xor
nop
push
gs
push
push
ja
pop
movsl
add
repz
inc
sub
fisttpl
mov
insb
cwtl
cld
adc
mov
rcll
test
sub
sbb
xchg
fcomps
outsl
lahf
loope
ret
mov
mov
xor
into
stos
adc
inc
push
push
jmp
cmp
sahf
push
xchg
jb
sbb
pusha
push
jp
adc
mov
je
push
fiadds
insl
sbb
in
in
lods
mov
cmp
mov
cwtl
imul
les
nop
mov
jl
call
shlb
xor
dec
iret
je
jecxz
fists
dec
jmp
cmp
mov
hlt
mov
xor
and
push
mov
push
popf
jo
cli
jge
push
sub
clc
cmc
jle
pop
push
lods
ja,pn
imul
sahf
cli
fimuls
mov
in
and
add
sbb
sbbb
mov
xchg
push
lcall
mov
mov
lcall
hlt
ljmp
cmp
lock
sub
inc
mov
je
xchg
pop
rcll
dec
fisubrl
xor
shrl
iret
push
lret
fstpt
push
xor
cltd
sar
or
dec
ficoml
jno
mov
lret
dec
dec
pop
inc
dec
xor
mov
dec
out
add
cli
rorl
cmp
mov
adc
xlat
fsts
loope
fldt
add
in
and
cli
dec
fidivrl
sbb
mov
enter
mov
gs
mov
sbb
jbe
sbb
aaa
push
cmpsl
repz
xchg
dec
stos
sub
mov
push
or
jmp
mov
mov
jl
xor
xor
test
sbb
jae
mov
push
xor
adcb
icebp
inc
sbb
jns
lods
push
xlat
xor
in
call
leave
aaa
cmp
mov
or
sub
mov
xor
mov
jmp
call
xchg
or
ret
pop
inc
pop
loope
aas
in
les
mov
sub
addr16
shr
add
add
addb
imul
push
rorb
sub
int
push
imul
in
test
mov
pushf
pop
mov
jp
and
jecxz
pop
repz
mov
or
in
xchg
hlt
test
js
mov
cmp
xchg
adc
test
or
into
cld
jb
fucom
arpl
add
sbb
lock
sar
imul
std
jne
fwait
nop
adc
cmc
add
mov
repnz
lods
daa
mul
aam
loop
outsl
stos
lcall
fildll
ret
mov
sub
ljmp
mov
das
shl
cmp
lahf
pusha
int
ja
mov
sti
push
daa
push
repz
dec
mov
lret
add
xor
inc
push
pop
mov
jb
sbb
push
xor
popf
into
dec
stc
movb
push
roll
push
adcb
out
adc
cs
mov
imul
aaa
push
mov
cmc
and
add
push
cvttps2pi
js
mov
adc
add
mov
mov
or
pop
mov
jle
push
cmp
push
and
push
sti
adc
insb
xchg
out
ljmp
cmpsl
mov
and
addr16
inc
std
push
sti
and
sahf
lods
test
sub
out
mov
pop
or
ja
push
ljmp
es
imul
lods
movsl
adc
add
or
lock
pusha
loopne
adc
cltd
sub
mov
push
push
shll
enter
das
nop
mov
cmpsl
mov
and
and
xchg
fs
xor
shr
or
mov
mov
shl
xor
mov
mov
xor
mov
mov
xor
shrd
or
shr
mov
mov
or
mov
mov
mov
cmp
jne
mov
cmp
je
mov
mov
mov
mov
lea
mov
mov
mov
jmp
mov
jle
sub
insb
pop
outsb
mov
push
push
cmp
pop
cmc
ss
dec
push
mov
sti
adc
outsl
int3
movl
pop
cmpsl
loop
ret
xchg
rcrl
les
mov
mov
pop
mov
and
dec
cli
mov
jge
test
std
pop
loopne
inc
push
fisubs
mov
sbb
loopne
addr16
sub
popa
aas
and
jb
xlat
mov
ret
mov
dec
xchg
mov
sub
lds
popf
enter
xchg
xor
scas
fcompl
pop
dec
call
pushf
dec
xlat
pop
or
push
mov
pop
sahf
ljmp
xchg
add
xchg
pop
or
inc
or
add
aad
fildl
and
lods
repz
jecxz
add
mov
and
add
test
xor
jmp
inc
push
or
push
and
mov
xor
jge
xchg
repz
test
xchg
push
jmp
sti
outsb
inc
shr
test
jmp
popf
in
je
orb
hlt
fstps
cld
mov
pop
jno
dec
int
pop
out
xchg
jecxz
in
lea
push
movsl
add
push
xchg
sub
or
dec
sbb
lods
mov
std
add
pop
add
scas
imul
dec
sahf
adc
fcompl
mov
sub
and
sbb
push
mov
fstl
or
xor
push
sbb
ja
dec
decb
aaa
pop
cwtl
cmpsb
sub
fwait
cli
cltd
pop
in
xchg
mov
mov
das
hlt
add
mov
es
cmc
repz
fnstsw
or
out
or
adc
xchg
add
jae
mov
push
es
aas
mov
repz
jmp
fimull
out
popf
add
add
push
or
pop
rcll
sub
jnp
mov
arpl
push
adc
or
sub
xchg
xchg
cmp
cmpsl
inc
add
stos
das
loop
jno
dec
dec
add
aad
in
fbstp
test
and
jnp
pop
bnd
rol
lret
mov
movsb
mov
shr
jecxz
decb
xor
or
or
pop
add
sub
adc
mov
test
rclb
bound
fwait
in
or
data16
jp
jle
test
sub
outsb
nop
adc
ffree
mov
adc
inc
jae
in
cmp
xor
cmp
push
adc
repnz
xlat
adc
lea
mov
fidivl
jae
mov
pushf
je
and
es
es
das
addr16
push
out
jmp
lret
in
sbb
rolb
and
jnp
fstpl
jge
adc
jge
cmp
test
rcll
aaa
or
mov
sbb
mov
jge
jl
xchg
sub
mov
sbb
or
mov
incl
rolb
les
push
mov
inc
xchg
es
xchg
mov
ja
pop
adc
mov
lds
imul
cmpl
orl
jns
scas
mov
stos
decl
inc
xchg
mov
int
dec
jg
sbb
jmp
or
or
in
sub
icebp
jns
sub
pop
in
or
call
add
out
stc
cmp
andb
lret
jb
rolb
dec
ljmp
jecxz
pop
aad
addr16
sti
rcrb
lret
xchg
leave
mov
ja
xor
mov
clc
jmp
and
and
dec
cwtl
and
xchg
jnp
divl
inc
mov
sbb
test
mov
mov
cmpsb
dec
loop
ret
xor
lods
xchg
lds
loop
cmp
lcall
xchg
loope
mov
insl
mov
push
jnp
cmpsb
xchg
pop
xchg
in
lock
sub
int
je
sbb
or
xor
cli
gs
add
clc
mov
js
inc
pop
mov
cs
pop
mov
out
and
mov
xor
adc
sub
pushf
mov
or
mov
das
lret
and
fnstenv
mov
test
dec
popf
mov
add
je
push
push
push
xor
insb
rcl
cmc
gs
jae
ds
ds
cmp
xor
jo
mov
rcll
cld
cmpsb
aam
mov
jb
mov
mov
andb
stc
inc
clc
repnz
out
xor
fistl
fwait
jge
push
lods
cs
pop
sub
or
sbb
mov
aas
pop
push
daa
add
mov
xlat
test
lock
test
hlt
iret
mull
cmp
add
lods
rolb
mov
mov
xor
shr
mov
jmp
inc
jecxz
sbb
sub
mov
lods
jp
loop
push
push
cmp
pop
jle
jp
xchg
or
mov
xchg
and
outsl
xchg
cmp
jbe
fimull
lds
mov
cmp
jecxz
sub
pop
mov
inc
movsl
testl
push
mov
into
sub
fmulp
cltd
bound
mov
fimull
jb
sub
icebp
or
or
sbb
pop
mov
movsl
and
push
out
test
cmp
push
pop
mov
push
inc
lods
pop
stos
pop
rcrb
stos
sti
add
fcoms
lea
mov
lock
shll
xchg
ds
cmc
movsl
rcll
jmp
ret
and
dec
push
push
adc
ljmp
iret
inc
imul
inc
loope
add
arpl
out
sub
aam
ljmp
push
push
mov
lock
test
insl
sbb
jno
int
mov
or
bound
xor
fisubrs
stos
cltd
clc
push
or
jl
in
pop
or
sub
xchg
fldt
cs
in
rorb
enter
and
sarl
outsl
push
fnstcw
push
mov
add
add
movsl
mov
inc
shll
arpl
fsubrs
xchg
mov
inc
mov
inc
das
in
mov
rclb
movsb
and
push
push
js
int
popf
sbb
mov
fwait
pop
rcll
xor
aas
ss
mov
cwtl
pop
jl
repz
jbe
inc
or
call
int3
mov
mov
sub
int3
mov
lds
push
fnstenv
mov
dec
aam
lods
xchg
sub
mov
leave
fildll
stos
dec
cs
mov
int
enter
aas
and
push
addr16
out
lret
xor
in
dec
xchg
lods
cmp
inc
add
outsl
out
or
stos
insb
fcompl
push
dec
push
add
rorb
es
xchg
ret
loopne
mov
cmp
loopne
adc
mov
int3
add
xor
fcomps
jae
lahf
mov
movsl
sbb
sub
es
cli
loopne
jp
sbb
pop
hlt
add
into
arpl
cmp
stos
xor
add
sub
push
movsb
cld
sbb
jle
cmpsb
arpl
xchg
sarb
outsb
movsl
inc
test
out
idivb
iret
lods
lret
sub
in
not
bnd
xchg
pop
pop
lds
scas
pop
adc
test
ljmp
stos
or
adc
sub
sbb
and
mov
cwtl
push
out
jno
add
inc
sub
out
sbb
cltd
into
ds
adc
push
out
pop
ds
cltd
adc
or
daa
push
pop
int
and
shr
push
mov
jo
push
mov
lcall
push
mov
lcall
outsb
ss
and
ss
fldl
scas
test
mov
pop
or
addr16
mov
test
sbb
in
jae
test
mov
xchg
fsubrl
dec
test
mov
clc
mov
and
inc
in
xor
xor
push
jnp
xchg
push
mov
ja
loope
push
inc
xchg
movsb
es
test
pushf
js
pop
nop
clc
dec
pop
dec
cmpsb
pushf
adc
je
outsb
jp
xchg
lahf
push
push
test
repz
mov
mov
add
mov
fistl
in
cmp
cmp
lcall
jle
in
pop
out
dec
dec
push
out
lcall
into
adc
fadds
add
mov
pop
aad
fsub
mov
push
lea
xchg
pop
xchg
dec
mov
sarb
into
pop
dec
jp
xor
dec
mov
xlat
pop
mov
adc
push
fnstsw
iret
dec
out
sbb
int3
cmp
test
cmpsl
ss
push
out
pop
lret
pop
push
cs
pushf
cs
decl
lahf
aaa
adc
inc
mov
lock
sti
mov
jns
aaa
jp
fnstenv
adc
jb
fadd
jae
sbb
sbbl
mov
mov
cli
add
fldt
add
loopne
cld
insl
daa
cltd
dec
mov
inc
add
mov
pop
dec
mov
sbb
call
and
dec
sub
jo
sti
mov
insl
stos
cwtl
cmpsb
push
scas
push
lret
mov
mov
es
out
xchg
cltd
sub
test
lock
pop
jle
jg
inc
lea
mov
jp
out
lea
dec
xchg
push
or
scas
xchg
or
in
movsl
sahf
int3
mov
popa
cli
xor
cli
por
inc
sbb
jnp
cmp
ljmp
xchg
ret
inc
jnp
mov
movsb
push
cwtl
imul
inc
jmp
loope
and
pop
xor
or
imul
xchg
fcompl
cmp
xor
shl
or
mov
mov
mov
xor
shld
xor
mov
mov
shl
mov
mov
xor
mov
cmp
jne
jmp
shlb
and
and
test
pop
bound
push
push
cmp
sbb
ret
pop
mov
movsb
push
es
cltd
sub
leave
jns
addr16
loope
cmp
rol
dec
xchg
scas
stos
out
mov
out
cmp
or
xor
jbe
inc
push
cmp
dec
push
ret
inc
xchg
es
xor
stos
sarl
pop
int
lcall
push
push
cmp
xor
xchg
test
mov
inc
mov
mov
dec
adc
mov
in
or
rcrl
pusha
in
popf
or
popf
das
lahf
pop
idiv
sbb
shl
mov
pop
xchg
xchg
push
sub
and
fwait
scas
mov
arpl
lea
mov
jns
or
adc
shlb
sub
jmp
mov
mov
adc
inc
jno
ret
or
movsl
jmp
fisubl
ffree
xlat
fists
lahf
int
lds
push
cmp
arpl
dec
movsl
add
out
fstps
loopne
push
inc
pop
sbb
pusha
or
repnz
sbb
jbe
sub
lcall
mov
lds
das
or
andl
pop
ljmp
dec
or
jb
xchg
cmp
movsb
addb
inc
rcr
push
mov
xchg
inc
xchg
cmp
add
test
in
gs
and
repz
lahf
mov
add
and
sbb
mov
lret
sub
scas
ja
mov
lock
push
cmp
aaa
jle
jb
pop
sub
push
pop
dec
cltd
pusha
add
std
push
ja
test
xor
dec
adc
cwtl
cmp
enter
mov
rcrl
fildll
mov
insb
sbb
fwait
notl
add
es
movsl
sub
or
or
bound
insl
xchg
mov
xchg
pop
or
sbb
lea
cli
and
and
or
je
pusha
add
push
dec
decl
sub
lcall
mov
rcr
out
jae
xchg
mov
adc
fsub
mov
push
int3
jge
push
push
out
jb
lret
add
dec
sarb
cmp
aas
aam
cmp
mov
ss
stc
out
imul
adc
add
xor
decb
cs
fsubs
jge
dec
arpl
mov
sub
sbb
cmpsl
lea
outsb
aaa
mov
jecxz
mov
push
jmp
push
jne
adc
push
stc
xor
jo
push
or
stos
outsl
xchg
jp
rcrl
in
push
xchg
in
fadd
cltd
stc
jnp
mov
dec
out
mov
jo
or
cwtl
int
in
ss
and
push
outsl
xor
imul
mov
ret
mov
into
jbe
jb
adc
je
out
fsubs
mov
lcall
xchg
cld
loop,pn
rorl
stos
push
jp
jecxz
xor
xchg
subl
mov
test
pop
lret
daa
jl
pop
cld
repnz
sarl
adc
adcl
pop
out
cmp
add
and
push
movsb
and
add
mov
or
push
test
and
aad
sub
xlat
push
addr16
xor
ds
push
cs
sti
xor
lods
xlat
dec
imul
movsl
push
pushl
mov
in
sub
or
xor
mov
or
jmp
pushf
or
cmp
inc
in
dec
mov
mov
sub
movsb
sub
push
adc
fldcw
movsl
dec
daa
lahf
mov
push
mov
mov
mov
out
mull
xorl
xor
xchg
pop
sub
stc
std
gs
lret
jge
mov
int3
dec
out
outsl
and
add
out
jo
dec
ret
push
mov
pop
fwait
decb
in
mov
int3
daa
mov
movsb
clc
lds
js
pop
jg
jle
call
sub
mov
mov
movsb
aad
stos
ret
mov
xchg
cmp
jmp
arpl
repnz
jno
dec
push
repnz
test
inc
into
pop
mov
mov
and
push
jmp
xorb
loopne
pusha
out
insl
inc
lcall
mov
out
pop
outsb
adc
mov
je
jecxz
sub
lcall
ss
ret
pop
pop
clc
or
arpl
mov
add
xchg
pop
test
inc
mov
pop
sub
jbe
dec
push
adc
and
cmp
jmp
test
xchg
movsl
stos
daa
cmpsb
sub
ret
or
test
push
add
mov
mov
mov
mov
mov
jmp
shr
ror
shlb
loopne
ret
outsb
inc
pushw
push
cmp
dec
aas
sub
aam
or
jmp
rol
out
pop
push
adcb
mov
pandn
adc
push
ret
mov
jne
jp
or
out
sarb
cmp
jb
in
call
dec
mov
pushf
imul
jno
cmpsl
mov
lods
cmp
fsubs
mov
xchg
jmp
filds
inc
mov
push
sbb
aas
inc
cmp
push
daa
mov
in
cmp
adc
xchg
xchg
jnp
out
pop
das
shrb
and
ret
dec
daa
mov
adc
icebp
imulb
xchg
jmp
adc
and
and
test
adc
xor
jl
sub
iret
jp
xchg
insl
push
xchg
enter
xchg
pop
jg
test
inc
ds
nop
dec
and
xor
fnsave
inc
xchg
hlt
push
inc
mov
jge
into
mov
sbb
mov
pop
xlat
loopne
mov
dec
pop
sub
gs
repnz
cmpsb
in
mov
xchg
mov
mov
int
pop
xorb
loopne
div
xor
call
jecxz
inc
jns
test
mov
mov
lods
mov
mov
mov
jp
xor
stc
cmp
pop
push
test
popa
into
mov
add
xor
cmp
cmpsb
sahf
stos
bound
sub
xchg
decb
ret
hlt
or
movsb
push
aad
ljmp
push
cmp
and
sub
cmpsl
movsl
pop
and
iret
cli
sahf
clc
cmp
sub
outsl
pop
ret
lods
int
sbbl
out
jbe
mov
fisttpll
aam
mov
xchg
daa
sahf
std
subb
rcll
xlat
ficoms
scas
inc
rcll
ljmp
push
dec
push
and
lahf
adc
nop
dec
sti
pusha
xor
add
rcrb
pop
scas
mov
mov
lahf
pop
stos
nop
mov
popa
jge
jae
pop
inc
daa
dec
in
fildll
xor
sub
imull
adc
cltd
pusha
adc
or
push
pop
jle
roll
addb
inc
jmp
pop
das
sub
rorl
dec
mov
mov
pop
xor
imul
pop
or
shll
mov
movsb
mov
icebp
dec
xchg
fistps
jl
adc
and
mov
adc
sub
sarb
add
and
add
gs
inc
sarl
inc
xchg
mov
mov
lods
mov
in
sub
or
or
lret
push
mov
mov
pop
out
rclb
pusha
int
mov
aam
push
fsubs
scas
loope
fwait
lret
rorl
sarl
pusha
fstpt
ljmp
les
mov
or
in
xor
sub
lods
lahf
mov
mov
jns
cmp
push
in
fidivs
in
cltd
pop
aad
pushf
pop
jo
xchg
or
frstpm(287
gs
movsl
fadds
lcall
cmpsl
adc
orb
popa
hlt
jae
std
add
pop
gs
cmp
mov
call
jecxz
in
mov
sbb
stc
enter
mov
push
xchg
jp
int3
inc
cwtl
js
pop
repz
std
add
dec
or
mov
push
aas
or
in
cmp
roll
pop
inc
push
rcl
mov
xor
lret
repz
fsubrl
out
xor
daa
xor
shr
out
leave
daa
push
lds
xchg
cli
mov
sbb
into
pop
or
addl
adc
andb
push
hlt
mov
int3
dec
cli
mov
pop
lahf
daa
aaa
out
add
pop
mov
repnz
push
mov
stos
cli
jp
shr
dec
mov
sub
pop
xchg
negl
sub
test
push
mov
dec
test
mov
outsb
jmp
adc
jmp
cwtl
sbb
mov
out
and
sub
fs
aas
mov
popa
repnz
xor
pop
stos
call
sti
iret
or
pop
push
cmp
jg
xlat
sub
pop
data16
and
jge
add
pop
cwtl
xchg
fwait
minps
inc
and
in
jns
add
push
out
pop
sahf
ds
jle
test
lret
push
out
call
and
dec
jae
aaa
dec
sahf
movsl
sti
xchg
dec
xchg
cmp
inc
sbb
aam
jmp
jno
mov
and
lret
bnd
push
outsl
jp
jle
cmp
nop
sub
xor
mov
inc
enter
cwtl
testl
rcll
call
cli
aaa
out
and
xor
shl
mov
jmp
mov
adc
sbb
cmp
jne
es
or
push
push
cmp
loopne
sub
mov
test
xchg
xchg
pop
aaa
cmp
out
pushf
xchg
fwait
int
scas
enter
fidivl
pop
push
mov
xor
rol
push
cmp
test
sbb
pusha
iret
push
lea
repz
inc
sbb
iret
rorl
rorb
or
call
daa
xchg
nop
xchg
es
fisttps
xchg
enter
in
add
xchg
dec
sbb
pushf
pop
cli
int
outsl
loop
mov
idiv
mov
pop
test
dec
sbb
adc
ret
push
dec
push
sub
or
gs
cmpsl
sbbl
push
push
cmpsb
orl
sti
xor
push
test
jmp
pop
in
orl
mov
lods
out
fsubrp
pop
xlat
shrb
xor
setge
and
popa
stos
jnp
mov
and
jns
into
or
xor
repz
or
fcmovnu
hlt
inc
mov
ljmp
insl
fistps
jbe
mov
push
ljmp
and
gs
pop
add
repnz
sbb
jbe
sbb
movsl
mov
inc
aad
out
aaa
or
xchg
dec
mov
mov
cld
xchg
xchg
pop
xor
nop
rcrl
xchg
int
and
jno
ret
mov
outsl
aaa
push
xor
arpl
push
xchg
xchg
adc
fnstsw
push
cli
fdivl
xor
add
mov
out
or
in
xor
testl
pop
dec
dec
sbb
ds
int
stos
or
call
push
popa
cmp
loopne
sbb
mov
pop
jbe
sbb
lret
and
jne
int
mov
rorb
mov
mov
lret
roll
test
loop
in
jp
and
pop
fwait
or
hlt
test
mov
xchg
addr16
mov
push
cwtl
repnz
jnp
aad
sbb
push
or
push
test
dec
pop
jns
in
sub
ds
xchg
das
loope
mov
rcrl
insl
into
jno
push
cmpsb
aaa
xchg
mov
loop
stos
mov
lret
test
sbbl
mov
in
cmp
dec
and
mov
or
inc
jo
dec
jns
inc
rcr
xor
fisubrl
inc
loopne
pop
int
inc
lahf
or
dec
jns
out
mov
jnp
pop
push
pop
push
subl
lods
sub
and
xlat
mov
sub
push
repnz
jmp
das
stos
stc
and
bnd
fbld
pop
inc
lcall
mov
popf
lahf
sahf
and
test
jmp
jle
add
and
call
and
inc
sbb
jnp
jmp
cs
aaa
subb
ror
mov
xlat
push
out
out
sbb
out
pushf
rolb
addr16
ds
rcll
mov
push
pop
clc
push
mov
shlb
xlat
push
pop
roll
sub
cmp
cld
mov
mov
xlat
inc
dec
mov
inc
xor
cmp
mov
nop
ljmp
and
pop
scas
daa
xchg
movsl
sub
sub
jns
test
and
mov
loopne
push
add
cmpsl
sbb
pop
push
pop
and
and
cmp
jg
mov
mov
das
mov
pop
out
push
mov
jnp
sub
cmpsl
push
and
popa
shlb
in
xor
sarb
ret
pop
shrb
xchg
mov
imul
test
shll
loop
and
test
mov
and
imul
cmpsl
xchg
stos
push
lock
inc
inc
fnsave
mov
jmp
jecxz
scas
sub
fdivrl
sub
jmp
jae
cld
aad
or
fwait
mov
imul
fnsave
pop
xlat
mov
push
in
push
pop
mov
xchg
fcoms
push
mov
lahf
xchg
popf
cmpsb
mov
jns
out
sbb
dec
adc
je
xor
dec
adc
cmp
xchg
repz
or
fs
js
out
popa
std
cmp
jle
or
jle
add
out
or
sbb
jl
sarb
imul
jge
xorl
imul
lahf
mov
scas
outsl
clc
push
push
and
pop
nop
ds
cs
mov
and
cmp
call
sbb
and
pop
mov
add
out
psllq
mov
mov
sahf
add
loope
int3
mov
jb
pop
fcomp
lds
jno
cmp
repnz
xor
mov
mov
xor
xor
shrd
or
shr
mov
mov
or
mov
mov
push
pushl
push
push
call
mov
mov
shrd
shr
shr
jmp
ret
and
cmp
outsb
movsb
pop
mov
push
push
push
cmp
orl
jo
outsl
xor
xor
jl
in
xchg
xchg
aad
xor
fwait
inc
mov
addb
pop
push
rcr
js
cmp
es
dec
jge
cwtl
or
mov
in
stos
inc
mov
xor
popf
rcrb
int
std
mov
pop
cmc
jp
sub
adc
testl
or
outsl
das
xchg
sahf
rclb
cltd
and
cmc
into
dec
dec
enter
mov
loop
sbb
dec
or
out
xor
xchg
mov
ljmp
inc
mov
mov
test
and
test
icebp
adc
inc
mov
dec
push
jns
cmp
out
and
fidivrl
call
mov
nop
sub
sbb
bound
pop
xchg
in
inc
cltd
ds
xchg
jge
pop
xchg
mov
xchg
jns
push
or
imul
ret
lods
mov
and
pop
push
inc
mov
scas
stos
pop
std
insl
mov
lock
repz
mov
dec
testl
or
ja
dec
sbb
dec
out
adc
sbb
ss
sahf
and
lret
pop
lahf
ja
outsl
fcmovu
pop
in
jbe
dec
pop
aas
pop
push
popa
arpl
push
cmpsl
or
push
and
popa
out
pop
test
ss
subl
add
test
jns
nop
adc
sbb
push
repnz
ret
jg
lods
pushf
push
adc
sbb
sub
pushf
or
sbb
leave
fdivl
pushf
xor
cmc
adc
les
inc
jge
lds
ja
lock
test
mov
and
push
cmpsb
add
add
adc
mov
clc
push
push
ljmp
and
and
or
mov
add
daa
into
dec
outsb
sub
ret
lcall
or
imul
mov
sahf
bound
loope
mov
lcall
mov
insb
popf
fsubl
loop
jne
lret
lret
fsts
push
mov
add
push
dec
popf
icebp
sbb
add
push
jbe
sti
pop
les
cmpsb
fisubl
into
decl
jmp
rcrb
cld
andl
sbb
ret
mov
repz
ficompl
jne
stos
push
aaa
sbb
inc
pop
cwtl
mov
mov
add
bt
jg
insb
inc
nop
jno
decb
adc
mov
add
and
mov
xor
mov
ds
jnp
xor
sub
mov
jnp
stos
or
jns
xchg
fsubrl
push
movsl
sbb
cwtl
insl
and
adc
inc
je
mov
sub
outsl
fldenv
fmull
sub
shl
pop
xchg
mov
mov
into
fsubrl
out
and
sbbl
or
shlb
mov
pop
jmp
jae,pn
or
or
or
push
shll
push
jle
jp
fs
cli
mov
hlt
xchg
add
xor
inc
xchg
or
out
and
dec
test
adc
pop
lret
or
dec
cmp
inc
add
mov
stos
push
jg
clc
out
push
xchg
adc
shl
push
or
inc
add
fnstenv
mov
inc
push
setnp
test
pop
pop
mov
gs
sbb
rolb
jge
mov
lds
mov
mov
dec
jmp
pop
mov
mov
stos
and
sbb
stc
pop
adcl
ljmp
dec
dec
mov
jne
mov
stc
xchg
dec
movsl
cltd
fldl
push
sub
cmc
orb
xor
out
cmp
fbld
xchg
lcall
push
aas
js
mov
adc
jo
jg
stc
add
inc
sarb
data16
jno
cmc
mov
xor
cmpxchg
inc
mov
scas
pop
inc
mov
adc
insl
mov
dec
jge
test
mov
mov
repz
jne
cld
adc
xchg
aas
push
shl
movsb
or
mov
add
mov
or
xchg
dec
cmp
jle
jnp
aaa
jmp
ret
add
pop
xor
adc
test
add
roll
mov
sbb
call
ret
sarl
pop
adc
ret
call
cs
inc
jbe
pusha
push
repnz
or
sub
inc
mov
sub
cmpsl
mov
jno
sbb
sbb
sub
fimull
ja
icebp
fcoms
jmp
icebp
jbe
add
push
xor
mov
jmp
jl
mov
inc
jmp
scas
rolb
push
cmp
mov
sub
jge
aaa
xor
ret
cmp
enter
in
imul
sti
cltd
inc
daa
and
int
mov
addr16
ror
xchg
movsb
cmp
xchg
ret
mov
int3
jbe
mov
cmp
pop
xchg
imul
push
jns
addb
jne
movsb
xchg
mov
inc
outsb
lea
jno
rorl
rorb
add
scas
rclb
inc
ret
decb
xchg
xor
add
xor
call
mov
pop
push
inc
adcl
sbbl
repnz
out
mov
push
jne
ret
xor
outsb
xor
and
mov
clc
mulb
hlt
lahf
ret
jno
lcall
inc
in
adc
cs
jno
push
scas
cli
lock
jp
cli
push
shrb
xchg
inc
sbb
insb
fcompp
mov
add
into
mov
cmp
push
push
out
mov
enter
add
jo
adc
fmull
fs
mov
mov
call
pop
inc
jno
xchg
cmp
pop
mov
rclb
push
rolb
pusha
or
inc
or
and
push
and
gs
ret
lahf
xchg
sbb
faddp
stos
mov
pop
into
leave
nop
sbb
push
pop
ret
mov
xor
and
or
jns
push
lods
loop
push
popa
xor
jo
adcb
cmp
mov
ds
jge
sub
and
shlb
inc
adc
or
pushf
aad
data16
dec
cmp
adc
repnz
daa
mov
sub
cwtl
gs
test
nop
pop
scas
cmp
push
xlat
ret
jecxz
mov
or
movsl
mov
xchg
int
xchg
pop
inc
insb
loope
pop
aam
xchg
sub
pop
xchg
aad
pop
in
pop
call
jo
jnp
cmp
mov
daa
testb
xchg
sbb
xchg
adc
lcall
xchg
fs
inc
rclb
sahf
cmp
push
dec
jle
ja
dec
mov
scas
jmp
fimuls
loope
in
add
popa
adcb
nop
shll
cltd
fistl
stos
push
xchg
cwtl
ja
xchg
call
push
stc
inc
sti
push
sarb
in
shrb
push
push
push
ja
ret
push
adcl
cmc
jo
xchg
cld
mov
int3
push
pop
addr16
sub
mov
fsubr
addr16
inc
in
xchg
decb
or
push
mov
rcrb
test
mov
sahf
adc
pop
insb
stos
in
data16
mov
jnp
fdiv
das
repnz
lock
jg
mov
test
ret
cmp
jne
jns
mov
push
add
shll
inc
outsl
movsb
sub
mov
pop
pop
cmpsb
push
pop
shlb
in
pop
daa
xchg
sub
inc
cli
jae
cs
dec
cli
pop
fcom
jnp
xchg
jmp
int
dec
xchg
jecxz
jle
sbb
and
cwtl
pop
mov
lahf
jns
fiaddl
ss
mov
ljmp
cmp
daa
xor
mov
mov
outsb
mov
mov
cwtl
sahf
jle
or
xchg
in
cmpsb
dec
jb
jns
push
dec
cmpsb
cltd
test
stc
xor
dec
mov
mov
testl
leave
jg
inc
push
ljmp
push
dec
out
dec
push
mov
dec
ds
fsubrl
push
in
cs
inc
xchg
iret
pop
push
mov
dec
mov
push
das
or
dec
jbe
ja
fnsave
adc
jne
pusha
adc
lret
int3
les
fbld
cmp
in
mov
adcb
push
shr
fmuls
sub
cmp
and
shl
popf
das
in
cld
jecxz
lret
add
lds
adc
mov
jnp
cmp
loopne
add
roll
and
shl
jmp
lret
cmp
stc
mov
bound
daa
inc
aad
mov
jnp
mov
mov
lods
inc
sti
hlt
inc
fldl
nop
sbb
fdivrp
xchg
adc
int
xchg
mov
or
int
loope
hlt
sbb
fcomip
aaa
mov
lods
push
pop
and
scas
cltd
xor
stc
fists
jbe
neg
add
jecxz
sbb
jp
push
cmp
mov
dec
bound
sti
inc
ret
stos
jns
cmpsb
aaa
xchg
insb
std
sub
pop
pop
aaa
xchg
seta
push
outsl
push
loopne
add
jb
out
push
stc
jp
sub
subb
jne
sub
jb
mov
mov
mov
pop
aas
sub
pop
shll
sub
test
or
iret
sbb
out
in
add
sbb
push
or
pop
jmp
pop
xor
jbe
outsl
into
xchg
and
xor
push
js
pop
sbbb
int
mov
adc
adc
push
call
shld
mov
xor
or
mov
mov
shl
or
xor
xor
xor
xor
mov
mov
jmp
mov
add
mov
mov
mov
mov
mov
mov
movzwl
cltd
shld
xor
mov
mov
jmp
jle
addr16
push
ds
dec
clc
pushf
outsb
dec
inc
outsb
xor
push
cmp
add
and
shrl
jl
pop
fdivrs
push
insl
das
movaps
aas
int3
lret
repnz
cmp
push
fbld
int3
push
mov
movb
xor
push
add
les
sub
xchg
xor
fnstsw
mov
sub
lock
pop
push
or
aas
daa
shl
dec
addr16
outsl
adc
ret
movsl
xor
mov
arpl
imul
fldl
jnp
cmpsb
mov
jle
mov
lock
ja
movsl
mov
dec
stos
xchg
nop
or
outsb
or
daa
popf
sub
lods
aam
cmpsb
mov
mov
or
mov
ficoms
mov
loopne
jns
adc
mov
addr16
jle
mov
test
imul
in
mov
xchg
mov
xor
movsb
outsb
mov
xorl
es
xor
add
sarl
dec
sahf
enter
mov
mov
mov
int
mov
test
stos
xor
je
ficoms
jo
lods
daa
pop
cmp
cmp
cmp
push
cmpl
int
jne
stos
std
movsl
mov
dec
cs
cmp
and
inc
cmc
loopne
xor
and
ja
cs
jg
out
movsb
pop
outsb
pop
xchg
inc
mov
pushf
mov
orl
sbb
ljmp
rclb
mov
dec
sahf
xchg
ret
addr16
adc
push
pop
cli
cli
sahf
loopne
adc
repnz
or
push
xchg
int
push
pusha
inc
mov
stos
in
shl
inc
test
and
jmp
and
fneni(8087
add
outsl
call
mov
ja
xor
sbb
andl
add
sub
les
stos
popa
cmp
cs
push
mov
cmp
ret
popa
mov
insl
jge
dec
and
mov
nop
add
mov
xor
or
sbb
inc
cwtl
cld
and
mov
sbb
and
subb
or
adc
scas
loope
movsl
xchg
inc
adc
xchg
xor
rolb
out
pop
dec
xchg
xor
bound
out
sub
sar
icebp
lcall
sti
push
push
aad
and
add
sub
inc
cmp
sarl
outsb
xchg
dec
incb
lods
pop
leave
loopne
mov
push
sbb
aam
mov
add
push
scas
push
fptan
ljmp
ss
fwait
mov
in
call
ds
inc
and
lcall
add
rcll
mov
lret
js
ror
ljmp
std
push
rcl
sub
test
mov
out
jp
loopne
pop
pop
call
sti
mov
pop
pushf
mov
sarl
stos
pop
imul
jecxz
pop
enter
pop
sub
rcrl
cmp
imul
dec
add
or
pop
mulb
ret
dec
outsl
dec
push
outsl
test
sub
mov
nop
nop
mov
push
fs
push
sub
lods
mov
in
es
jecxz
test
sub
lds
test
or
pop
xor
bound
sbb
into
mov
int3
imul
cmp
cmpsb
es
aas
mov
mov
mov
pop
push
push
dec
cmpsl
mov
es
out
push
hlt
nop
ficompl
push
fwait
add
dec
ret
pusha
jl
sbb
pusha
ja
jmp
aaa
sahf
outsl
in
lds
insb
push
sbb
adcb
mov
push
and
movsb
js
pop
cli
adc
cmpl
sbb
inc
jmp
adc
mov
and
mov
add
xor
movsl
jne
fisttpl
sbb
cmpsb
out
mov
pop
fdivl
into
xchg
pop
mov
cltd
mov
and
adc
and
cmpb
sbb
dec
xchg
mov
mov
pushf
mov
add
outsb
pop
dec
push
or
xor
adc
data16
xor
frstor
popa
clc
hlt
cmp
call
jg
aas
xor
xor
clc
cmovl
inc
hlt
sub
cmpsb
mov
cmpsb
ljmp
and
rcrl
ljmp
sbb
mov
enter
mov
cli
xor
lahf
jae
add
fnstenv
sbb
ss
add
imul
push
mov
in
cmp
sbb
xchg
cmpsb
out
pop
xchg
jno
out
dec
into
and
in
sbb
add
addb
or
stos
xor
mov
cmc
pop
ja
out
dec
out
dec
xor
test
jg
mov
adc
dec
fistl
and
push
ja
push
mov
add
lods
xor
mov
cmp
jne
mov
cmp
jne
movl
jmp
repz
sbb
jmp
pop
je
xor
push
cmp
pop
inc
in
addr16
jmp
or
xor
xchg
jnp
call
mov
inc
push
xchg
movsb
dec
out
jne
add
bound
ret
jge
xor
push
mov
cmp
jmp
loopne
dec
lock
xchg
cmp
mov
mov
test
pop
mov
and
cmp
mov
js
push
pusha
js
xor
inc
lods
push
into
filds
adc
or
movntq
out
xor
and
lea
inc
xchg
or
cmc
movsl
sarb
mov
ret
stos
dec
test
sbb
mov
sti
pusha
nop
loop
cs
inc
add
cmovg
push
aaa
fstl
pop
fwait
daa
or
testl
in
repz
jb
mov
add
test
cs
rcll
sub
shlb
loope
das
out
cmpsl
push
in
xchg
pop
mov
and
mov
test
jmp
or
adc
pop
stc
sub
pop
pop
mov
xchg
mov
lock
test
call
loopne
adc
rorl
dec
mov
clc
push
or
pop
dec
imul
pop
pop
fnstenv
inc
in
arpl
insl
mov
ss
or
adc
lock
inc
mov
mov
inc
or
mov
dec
add
icebp
and
xchg
es
cmp
and
fneni(8087
push
ja
lret
push
pop
sarb
pop
shll
sbb
sarb
in
xor
and
jne
and
lock
mov
adc
inc
dec
jno
pusha
movsl
dec
out
pop
lcall
mov
adc
jo
testl
lea
fildl
push
push
jb
inc
bsf
mov
adc
adc
adc
nop
testb
mov
xor
pusha
xchg
rorb
divb
mov
fnstcw
insb
jl
and
pusha
out
mov
push
add
pop
or
mov
test
in
jbe
cmpsb
shlb
out
adcl
inc
adc
pop
aas
mov
in
sub
loope
add
mov
add
movsl
nop
pop
mov
imul
sub
xor
push
xchg
adc
jno
inc
popf
decb
lret
mulb
scas
jmp
and
insb
and
dec
lods
pusha
jg
hlt
outsb
out
add
inc
addr16
sbb
mov
in
jmp
iret
ret
repz
jns
sti
jle
sarb
pusha
add
icebp
cmp
or
xor
mov
xchg
sbb
loopne
fdivl
xor
mov
jmp
lock
xchg
add
fdivr
sub
lahf
aad
sbb
addb
cmp
and
and
clc
bound
mov
jb
enter
loop
adc
mov
lahf
jge
in
xchg
dec
add
add
and
push
mov
mov
pop
mov
int
inc
adc
pop
mov
inc
cmpsb
dec
mov
bnd
sahf
flds
adc
sub
int
mov
mov
outsl
mov
inc
dec
dec
mov
sbb
mov
xor
divl
mov
fimuls
mov
mov
jnp
and
or
cmp
leave
sbb
stos
sub
mov
xchg
testl
sub
and
repnz
and
pop
push
fwait
inc
sub
adc
cmp
clc
pop
bnd
fnsave
daa
cmp
rcrl
pop
push
test
in
jecxz
mov
call
ret
inc
dec
adc
pop
jle
mov
negl
xchg
fidivs
cmp
pop
add
xchg
and
add
lds
stc
mov
cmp
cmp
movsb
shlb
inc
jno
aaa
and
lds
push
mov
mov
hlt
dec
test
nop
cmp
fs
insl
mov
jns
pop
es
xor
nop
xchg
mov
push
push
jmp
push
imul
bound
fnstcw
ret
xor
rorl
loopne
dec
xor
inc
icebp
cltd
shrl
nop
or
sbb
xchg
xor
outsb
pop
sub
mov
cs
andb
lss
cmpsl
add
pop
mov
dec
adc
lods
and
imul
fnop
popa
sbb
push
add
jno
inc
call
mov
movsl
jno
out
iret
xorps
mov
outsl
xchg
stc
fisubl
inc
jp
ficoml
mov
xchg
test
xor
inc
lock
arpl
aam
je
xchg
add
and
lret
je
ds
dec
xchg
jg
adc
inc
cmc
loope
cs
mov
or
or
call
inc
mov
mov
movl
mov
movl
mov
jmp
xchg
jbe
pop
adc
mov
pop
shrb
push
es
push
cmp
push
sub
lea
and
and
jle
mov
adc
incl
pop
push
lahf
jp
xchg
cmp
js
xor
or
and
fadds
xchg
inc
xchg
adc
rolb
or
scas
imul
xchg
stos
test
icebp
push
adc
adc
and
outsb
mov
push
out
movzwl
dec
mov
cmp
out
push
sete
and
lret
add
adc
das
xchg
pop
shl
les
pop
shlb
push
fwait
mov
mov
lea
loopne
dec
jp
lea
pop
rcrb
add
xchg
jo
les
or
jp
stos
inc
daa
inc
aaa
xor
pop
and
outsl
out
inc
cmova
mov
add
push
fistl
imul
sub
inc
dec
shll
xchg
pusha
mov
and
aas
xchg
clc
push
int
cmp
lds
into
dec
cmp
insl
mov
cs
enter
adcb
addr16
xchg
lock
cltd
fsubl
jae
clc
xchg
xchg
test
ljmp
into
scas
push
int
jns
xchg
pop
fwait
cmp
rorl
leave
fsubrl
or
inc
mov
loopne
and
loopne
fwait
mov
push
dec
shrl
aam
dec
pushf
mov
pop
clc
pop
sar
lcall
test
or
xchg
int
imul
add
inc
out
xchg
mov
mov
adc
mov
pop
adc
sub
in
fistps
dec
and
xor
jl
arpl
adc
jmp
mov
ret
js
dec
and
xchg
sub
xchg
pop
fwait
mov
clc
cld
rorl
cmc
js
cmp
sub
sbb
and
mov
ss
scas
cli
push
push
insl
fwait
dec
xchg
andb
scas
jo
call
outsb
lods
ds
pop
push
call
fstpt
push
movsl
cld
std
add
inc
xlat
add
cmp
out
sbb
loop
ljmp
daa
push
sbb
fisubl
imul
pusha
fists
ds
mov
xchg
nop
insb
xor
push
scas
aaa
lcall
popa
push
pop
mov
lahf
mov
and
mov
inc
xchg
push
push
lods
xchg
loope
sbb
outsl
jo
jmp
loopne
sbb
popf
pop
sbb
mov
push
repnz
push
out
shlb
loop
faddp
add
data16
fisubs
push
or
lods
inc
push
enter
adc
jo
les
jecxz
dec
scas
insb
movsl
shr
out
mov
loop
lds
lock
mov
sub
and
or
xchg
mov
jo
xor
fs
inc
jmp
sub
cmc
sahf
jo
dec
sub
inc
inc
mov
xlat
test
mov
fisubrl
aaa
mov
arpl
mov
jno
std
inc
xchg
xor
push
lock
in
inc
lcall
and
pop
dec
aad
dec
pop
sub
adc
jb
dec
aam
mov
push
enter
jns
filds
xchg
push
sahf
int3
in
cltd
inc
inc
aad
pop
adc
jg
xchg
imul
and
jo
das
ret
adc
adc
fcoml
cs
testl
cld
imul
lods
lret
ss
aaa
ds
les
push
inc
andl
xor
push
jge
xor
xchg
jns
insl
jp
add
je
push
gs
mov
cwtl
jp
adc
push
insb
out
mov
adc
xchg
mov
pop
lea
push
pop
mov
fsubrs
lds
or
dec
pushf
add
adc
or
dec
divb
xchg
jg
inc
loope
mov
repz
movsl
xchg
lds
dec
sbb
mov
xchg
adc
jne
jae
outsl
lds
jno
sarl
mov
incb
lds
jno
xchg
pop
nop
mov
out
mov
push
mov
fwait
insb
mov
pop
inc
cmp
xor
adcl
xor
push
cli
mov
pop
scas
adc
insb
in
aad
or
add
outsl
bound
ret
lock
inc
lcall
xchg
xchg
xor
push
xchg
dec
in
orl
sbb
loop
mov
and
pop
les
jmp
push
outsl
ret
xor
dec
or
inc
mov
lahf
xor
adc
lea
mov
shrb
add
and
add
outsb
sahf
call
lods
int3
aas
mov
loope
xor
mov
ret
out
jb
aaa
jle
pop
cmp
and
jnp
or
lods
enter
add
or
mov
or
add
mov
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
mov
mov
xor
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
add
mov
mov
mov
shrd
shr
mov
mov
jmp
xchg
lret
cs
push
adc
mov
push
adc
push
cmp
cmc
xor
push
fidivs
sbb
mov
insb
jno
mov
push
xor
mov
pop
dec
mov
ja
cmp
cmp
mov
jge
or
xlat
movzwl
dec
jo
idivb
dec
and
xor
lods
loop
add
xchg
sti
int3
faddl
or
push
inc
cmpsb
sbb
sbb
faddl
xchg
test
je,pn
adc
dec
out
cli
sbb
outsl
pop
push
push
rorl
mov
dec
push
xor
push
cmpsb
ss
jbe
push
in
pop
mov
xor
and
xor
xorb
push
mov
jecxz
imul
loope
xchg
dec
stos
ficoml
ja
sbb
cld
pop
jno
in
test
out
or
mov
fwait
into
inc
dec
pushf
dec
pop
daa
push
orb
mov
add
push
push
jle
cwtl
dec
fidivrs
sub
daa
sub
or
rorl
jg
and
rorl
mov
dec
movsl
xor
fcompl
lcall
cmp
jns
push
push
mov
mov
dec
dec
imul
retw
arpl
bound
pushf
push
in
mov
je
lods
pusha
lea
jmp
xchg
pop
dec
adc
sbb
mov
push
or
xchg
repnz
lods
cmp
sub
fsubrl
aad
test
xchg
popf
fisubrs
or
xor
sub
mov
jmp
mov
mov
dec
cmpsl
movsb
orb
in
jl
xchg
imul
xchg
adc
xor
sub
cs
clc
lahf
add
out
sbb
adc
push
mov
gs
inc
jb
in
xchg
test
pop
test
xor
push
mov
je
aad
inc
push
mov
in
lahf
popa
mov
mov
and
ds
aad
pop
movsb
mov
mov
dec
push
out
stos
lcall
mov
mov
aas
movups
int3
daa
movq
cmpb
pop
movsb
test
inc
imull
mov
loope
jge
jl
cmpsb
jo
gs
data16
ja
pusha
shrl
mov
jns
lcall
pusha
mov
sarl
jo
push
jb
pusha
push
or
adc
cwtl
xor
mov
adc
in
mov
mov
cmpsb
test
daa
out
push
push
mov
xchg
aam
test
inc
ret
idivb
mov
and
shlb
insl
or
nop
fidivrs
dec
xchg
cmpsb
xchg
mov
and
je
aas
xor
mov
fdiv
adc
sahf
lds
push
faddp
pop
mov
mov
xchg
je
int
repz
adc
and
xchg
push
in
repz
sub
cmp
cmc
sbbl
push
mov
jg
fbstp
fdivrs
ss
divps
andl
xor
adc
mov
cmp
or
movsb
push
or
out
xchg
test
inc
subb
inc
mov
das
push
cmp
mov
pop
repz
rcrb
sbb
xchg
stos
push
insb
xchg
or
ljmp
inc
jno
add
dec
add
mov
pushf
sub
bound
dec
sahf
loope
jp
push
adc
xlat
cld
sub
leave
mov
insl
add
mov
jnp
mov
fisubl
mov
ret
push
sbb
sub
cmp
xchg
fnstenv
mov
out
daa
adc
sub
sbb
scas
push
pop
icebp
mov
dec
shl
inc
rcrb
fidivl
testb
mov
and
mov
lea
lds
xchg
push
sbb
or
jbe
mov
or
loope
dec
jns
jne
xchg
jnp
sub
mov
push
jo
add
jl
push
jp
movl
mov
loopne
insl
cmp
pop
xor
mov
orb
jo
lods
jno
int
mov
dec
mov
dec
or
inc
mov
xor
nop
fnstsw
add
repz
jge
popa
hlt
mov
and
sub
mov
aas
xchg
rol
ficoml
fninit
jae
pop
addr16
mov
lcall
pop
fiadds
sarl
xchg
push
xchg
faddl
push
xor
stos
sub
ror
data16
scas
pusha
rcll
mov
push
sbb
idivl
push
out
enter
and
push
stos
sti
dec
pop
lds
sub
add
shll
cmp
push
subb
inc
inc
repnz
jno
rcll
xor
sbb
ds
jmp
mov
cs
xchg
lcall
or
mov
js
push
loop
mov
neg
inc
repnz
out
cmpsb
xor
shl
xor
or
mov
mov
or
mov
mov
shrd
shr
mov
mov
xor
xor
or
add
shl
mov
jmp
xchg
fadds
mov
out
shrb
mov
or
cmp
nop
cmpsb
out
inc
mov
or
out
jmp
pop
push
loope
push
pop
fmull
pop
jge
rclb
mov
lds
cs
adc
test
mov
mov
push
repnz
clc
pop
jnp
push
push
in
lds
or
out
mov
hlt
mov
fdivl
jo
xor
pop
sub
sbb
dec
add
push
lcall
outsl
in
dec
sub
lsl
cmpsb
lods
icebp
jne
lock
in
pop
lret
pushf
adc
std
aad
xor
movsl
pop
sub
outsl
scas
dec
mov
insb
mov
or
lret
cmp
adc
sbb
out
lds
cmp
jo
dec
mov
jns
leave
out
jge
xlat
or
repz
mov
scas
rorl
dec
sarl
cmp
icebp
imul
mov
out
dec
bound
sahf
or
js
or
fadds
mov
das
pop
in
insl
dec
stc
mov
xchg
xchg
fidivrl
out
push
ret
popa
ds
lods
mov
sub
ret
xchg
insb
jbe
adc
sbb
jg
inc
loope
bound
push
pop
adc
pushf
loopne
pop
repnz
push
orb
mov
ss
fldt
imul
adc
or
clc
mov
ljmp
jle
xchg
jns,pt
out
inc
pushf
jns
stc
or
lock
dec
jbe
adc
sbb
sbb
dec
movsl
les
lock
jns
inc
nop
inc
rcll
pop
jmp
dec
out
jo
sar
xor
cmp
add
hlt
mov
pop
mov
sub
jle
test
inc
inc
hlt
lds
adc
inc
scas
je
mov
rcr
xorl
mov
push
mov
and
scas
pop
and
aas
or
js
add
loope
ja
jle
dec
loopne
mov
cmpsl
mov
rcrb
push
fadd
push
push
xchg
jo
mov
shll
lcall
mov
repz
mov
adc
cmpsl
mov
mov
shlb
in
push
loop
mov
jmp
sub
int
lret
and
xchg
dec
pushf
xlat
stos
ds
popl
in
lret
mov
dec
sub
or
sti
dec
pop
sub
push
dec
push
and
js
aam
or
adc
test
fsubl
xor
loope
cmp
pop
cmp
dec
out
mov
or
out
jg
and
or
je
lods
push
notb
dec
data16
pop
bound
orb
sbb
out
andl
jo
jne
pop
sbb
and
stos
cmc
ficoms
push
lea
cld
pxor
data16
mov
mov
add
inc
xor
pop
dec
jb
fisttpll
out
push
rcrl
jbe
lahf
push
int
stos
xchg
not
adcl
jl
out
xor
push
xorb
mov
jg
andb
jbe
dec
cmp
jae
xchg
sti
jo
sbb
test
call
cmc
in
inc
jns
jecxz
dec
fs
push
pop
pop
dec
sub
xchg
mov
and
xor
mov
mov
scas
sub
mov
mov
jmp
cs
xchg
cmpsb
pop
icebp
imull
sbb
int
bound
jecxz
lahf
push
sbb
movsl
adc
leave
cmp
inc
pop
ret
sub
loopne
scas
sub
sub
add
mov
stos
pop
mov
jcxz
mov
testb
imul
lret
sub
es
add
push
cmp
out
into
xor
push
daa
inc
test
add
or
ljmp
outsb
shr
add
in
lods
jne
mov
gs
push
pop
jg
mov
inc
sbb
and
cmp
xchg
daa
in
xor
cmp
nop
aas
adc
cmp
lret
les
jae
jmp
mov
xor
call
push
stos
out
mulb
xchg
repnz
test
xor
push
les
test
mov
xchg
cmpsl
add
pop
sbbl
mov
mov
les
ret
sub
sub
in
lock
xchg
jmp
cld
ficompl
in
mov
mov
pop
cwtl
mov
jbe
or
fs
and
cwtl
inc
xchg
mov
subb
fwait
mov
mov
cmp
icebp
jb
dec
repnz
add
aad
mov
jno
mov
fs
push
dec
cmp
mov
or
xchg
jge
sub
std
or
int3
scas
mov
mov
shrd
shr
mov
mov
xor
jmp
jnp
les
jle
nop
outsb
sti
pop
cwtl
mov
cld
or
cmp
fsubp
fisttpll
push
mov
push
jle
xor
adc
scas
sbb
sbb
fistps
cmp
rclb
rcrb
clc
sub
lcall
inc
push
jns
pop
in
insb
adc
mov
mov
int3
cltd
sbb
iret
out
int
jae
jnp
and
mov
popf
inc
push
push
in
movsb
jno
add
enter
jo
out
int3
stc
push
in
fs
repz
add
addr16
push
add
pop
test
pop
or
adc
mov
inc
cli
or
out
adcl
leave
pusha
in
mov
xor
outsb
ret
dec
jmp
and
xchg
scas
aaa
inc
sarl
mov
xchg
dec
cmp
cmpsl
inc
sub
ljmp
loope
dec
and
xchg
fildl
jge
stos
inc
movsl
call
arpl
xor
jle
adc
mov
jecxz
mov
xchg
add
xchg
sub
inc
sub
movsb
push
repnz
add
scas
push
sahf
mov
dec
cmpsb
xchg
push
data16
cwtl
fcoms
es
xchg
push
inc
xchg
jb
push
movsl
add
cwtl
in
sarb
mov
sbb
sbb
or
inc
adc
pop
sahf
inc
out
aam
jnp
xor
insl
or
icebp
hlt
test
imul
repz
lret
inc
and
in
cmp
push
add
in
or
sbb
out
ss
dec
cmpsl
shll
in
js
das
cmp
cmpsl
fcmovne
call
ret
fadds
scas
hlt
sbbl
fsubl
and
imul
adc
pop
mov
fisttpll
pushf
jae
mov
call
int
add
ficoms
cmc
adc
push
data16
pushf
jns
xlat
movb
out
ds
cmp
movsl
nop
fcmovnbe
mov
ret
rorl
aaa
inc
stos
push
cmp
jne
gs
and
in
adc
inc
dec
cmp
insl
mov
mov
cmpsb
or
mov
add
xchg
sub
cmp
fdivr
jg
lahf
shr
or
add
or
lods
fcompl
ret
cmc
push
cltd
fwait
push
outsl
frstor
cmp
jne
scas
in
mov
xor
push
pusha
xor
cltd
icebp
push
add
inc
cwtl
cltd
adc
ss
ds
shlb
xor
jo
ljmp
into
xor
popf
in
cltd
xchg
jg
and
add
jbe
imul
or
es
or
jae
movsl
xor
mov
sbb
jae
cwtl
and
pop
xchg
mov
pusha
sbb
xor
sbb
icebp
or
test
inc
sub
jae
sarb
jecxz
test
test
sbb
mov
xlat
lahf
add
cmp
lock
int3
pop
xchg
and
sub
or
jns
add
test
inc
fnsave
push
loop
mov
sub
cmp
les
lret
ror
push
ret
nop
adcl
cmp
add
movsl
dec
ja
fbld
les
std
ja
jl
mov
in
rolb
sarl
mov
cld
fldcw
push
dec
repz
and
mov
decl
fildll
ds
sbb
dec
mov
aas
int3
in
cmp
sbb
jl
jbe
mov
repz
cmp
pop
fwait
inc
int3
mov
stc
adc
add
xchg
pop
cli
cmpsb
in
sub
xor
test
data16
insb
loopne
stc
dec
sub
aas
mov
jae
fistpll
outsl
mov
pop
sahf
ds
mov
cmpsl
adc
dec
scas
xor
lret
test
adc
sub
add
mov
fsubr
das
aas
outsl
pop
movsl
or
xchg
cmp
movsb
das
cmpsl
cmp
mov
into
pop
iret
mov
pop
mov
out
mov
mov
aad
cmc
out
sub
mov
cli
inc
in
xor
insl
pop
jns
add
mov
negl
call
pop
inc
les
cmp
aad
ds
push
je
xchg
lret
icebp
cltd
fdivl
mov
pop
sbb
sbb
mov
popf
adc
cmp
cmpsb
roll
fst
cmpl
rorb
adc
jmp
dec
fmull
push
mov
mov
jg
mov
inc
jmp
orl
sub
add
cmp
movsb
lahf
push
js
sbb
jmp
lahf
orb
mov
int
and
push
or
fsubrs
pop
xor
cmc
in
aaa
loopne
std
add
shl
xor
or
mov
mov
add
mov
mov
shrd
shr
mov
mov
xor
shl
mov
jmp
sahf
push
sub
sbb
inc
adc
subb
repnz
cmp
jns
pop
jnp
lcall
bound
mov
iret
pop
repnz
pushf
mov
nop
jne
jmp
stos
add
dec
sahf
sbb
xor
sbb
je
mov
loop
cmc
and
test
cmp
xor
cmp
xchg
rcrb
hlt
outsb
xchg
pusha
cmc
cmp
nop
cmp
adc
testb
fstl
pop
ret
das
jecxz
fiadds
cmc
sub
into
fistps
push
sti
add
fidivs
lahf
push
pop
jecxz
inc
pushf
xor
dec
adc
test
mov
push
rolb
int3
or
cmp
cmpsl
xlat
mov
scas
adc
cli
adc
dec
sub
or
jmp
sbb
test
stos
daa
out
mov
bound
test
in
sbb
sub
xchg
add
push
mov
mov
jo
pop
pop
jge
adc
jne
cld
jne
sub
add
push
mov
sahf
adc
sbb
rorl
inc
mov
xor
xchg
push
inc
sub
jmp
das
rcrl
mov
inc
add
mov
dec
mov
lret
sahf
sbb
iret
in
scas
ss
or
gs
mov
out
jg
sbb
out
cmp
push
mull
outsl
rclb
mov
es
aam
int3
mov
and
xor
sub
add
scas
mov
jecxz
psubw
inc
sahf
in
pushf
icebp
es
imul
mov
xor
pop
push
jle
fstpl
pop
mov
movsb
stos
pop
inc
add
mov
loop
add
cmp
or
jns
push
mov
xor
jne
cmp
ss
hlt
jmp
ret
idivb
mov
mov
ja
roll
pop
out
jle
sbbb
aaa
mov
rcll
inc
aad
lahf
bound
push
loop
inc
push
ljmp
dec
or
dec
pop
dec
push
dec
in
jo
shll
aaa
jp
xchg
lods
push
jmp
or
fimuls
int3
decb
mov
cltd
mov
jl
loopnew
ror
and
xor
or
aad
add
pusha
fnstcw
sti
dec
ret
repnz
pop
fdivrp
sbb
aas
daa
pop
or
mov
pop
das
adc
ja
jecxz
and
in
bound
rcrl
mov
outsb
adc
scas
shrl
push
jo
add
add
pop
sbb
es
cwtl
mov
insl
mov
inc
dec
inc
popa
lock
pop
clc
aad
jl
adc
sbb
int
roll
push
imul
popa
xchg
push
and
push
subps
cmpsb
mov
sub
lods
sbb
inc
and
mov
fmull
stc
push
xor
stos
icebp
add
loope
cmp
shll
jge
dec
icebp
or
hlt
jmp
in
fwait
aad
pop
out
xchg
lret
movsb
mov
jg
pop
adc
or
or
aad
sub
rorb
dec
jmp
lods
add
sub
in
sarl
cltd
or
sbb
jb
cmpsl
add
rcl
sub
dec
pusha
dec
mov
popf
jge
pop
sub
rorb
cwtl
outsb
xchg
out
push
jno
ret
sarb
arpl
imul
in
sub
in
mov
ds
push
loop
dec
shl
push
push
shr
pop
xor
sbb
ljmp
xchg
movsb
cltd
add
push
shll
jns
jo
pop
sub
pop
bound
out
xchg
add
mov
adc
imul
shlb
lods
lahf
xlat
lds
in
xor
out
xor
pop
adc
loop
or
movsl
push
cmpsb
jb
mov
popf
inc
mov
lret
mov
loope
xor
jge
ret
les
cmp
mov
arpl
xchg
jae
add
push
sub
cli
push
pop
sti
mov
jbe
sub
mov
jnp
aaa
pop
mov
push
mov
mov
out
test
lret
adc
aas
pop
push
jnp
jb
lcall
je
sub
mov
ds
fyl2xp1
mov
es
dec
push
js
and
pop
xor
mov
movsl
andb
add
adc
rcrb
dec
insl
imul
sub
in
lds
dec
sbbl
dec
aaa
mov
sbb
mov
sub
jmp
xchg
popf
aaa
inc
pushf
cmp
push
mov
add
inc
stos
dec
std
cwtl
pop
mov
aas
jge
cmpsb
or
xchg
add
mov
jle
mov
push
rclb
out
push
movl
jnp
sbb
aas
fcoml
test
ret
int3
add
shrd
xor
shr
mov
mov
xor
jmp
jb
jecxz
sub
push
xchg
das
mov
test
lock
cmp
push
fistpl
push
jbe
lods
inc
out
pop
cmp
xchg
iret
hlt
inc
cmp
bsf
push
mov
cwtl
lcall
outsl
mov
push
push
fdivrs
js
rcll
movsb
mov
sti
jb
aad
sbb
inc
bound
cmp
push
in
xchg
cs
gs
mov
test
or
mov
push
mov
ret
sbb
dec
or
mov
cmova
cmp
popf
cmpl
mov
sarl
adc
mov
shlb
fcoml
fidivl
pop
jno
dec
mov
jle
sub
int
mov
into
pop
in
bound
hlt
fstpt
scas
mov
mov
ljmp
cmpsl
ds
mov
stc
inc
mov
shr
cmp
jb
mov
add
mov
push
push
std
cmp
aam
mov
daa
sbb
or
xchg
inc
jnp
out
mov
fcompl
bound
or
frstor
fdivrl
and
lret
cmp
jmp
xor
iret
dec
or
xchg
pop
jne
or
mov
push
cli
sub
in
pusha
sub
pop
xchg
pop
sub
mov
cmp
cltd
xor
enter
or
mov
clc
mov
negb
in
jl
and
dec
call
sar
inc
in
je
out
int
loope
jne
ja
cmp
test
lods
push
or
jle
es
subb
stos
add
and
jmp
pop
scas
jle
test
cld
add
push
jl
add
lods
pop
sub
inc
outsl
ds
sahf
xchg
inc
mulb
xorl
mov
xchg
test
fs
and
std
mov
cltd
push
mov
mov
xchg
inc
inc
pop
jp
loope
dec
ret
frstor
xlat
leave
sbb
dec
pushf
fisubs
xchg
inc
jnp
xchg
clc
aad
cmp
fs
pop
push
gs
daa
daa
or
inc
in
mov
mov
jle
pop
es
popa
adc
scas
pop
push
dec
pop
movsb
lret
vpavgb
addl
mov
jo
xchg
out
sub
cld
sbb
inc
or
inc
test
jg
das
xchg
scas
and
inc
int3
mov
fidivrs
pushf
xchg
cmp
sbb
adc
arpl
test
inc
ret
or
mov
bound
dec
into
jle
jmp
fidivrs
insl
test
add
cmc
fchs
and
das
xlat
mov
push
cmp
insb
cmpsl
mov
in
cmp
inc
popf
mov
dec
lock
pop
imul
addr16
xchg
jae
pop
xor
fdivp
ret
leave
mov
pop
sbb
and
mov
add
clc
jmp
jge
xchg
dec
pop
push
jg
pop
out
xor
pop
ret
jnp
scas
pop
xchg
ljmp
lods
sbb
push
mov
int3
aam
loope
jmp
sub
notb
popa
aas
addl
xchg
adc
mov
les
in
dec
xchg
stos
lds
cmp
jne
pop
jmp
cmp
test
mov
fldl
arpl
mov
cs
xchg
push
push
pop
cwtl
add
mov
rorb
jle
mov
into
dec
mov
mov
adc
scas
inc
ds
out
mov
flds
fdivs
into
sahf
test
in
inc
sub
js
ja
mov
dec
ret
pop
xchg
enter
adc
clc
xor
adc
sub
jns
jge
lea
adc
das
insl
lods
adc
jae
rclb
pop
mov
leave
cs
cmp
jp
inc
or
sub
movsb
rolb
sub
mov
pop
insl
imul
into
xlat
xor
adc
repz
adc
push
nop
cmp
test
stos
mov
inc
pop
xor
jno
dec
adc
gs
jecxz
cwtl
add
loopne
jl
mov
and
cmpsb
jge
xchg
je
jp
sbb
ret
or
mov
jne
cmp
sub
push
lea
lcall
stos
jne
lahf
notl
jecxz
cli
test
dec
add
push
dec
mov
pop
adc
sarb
fprem
mov
mov
fistl
xor
sbb
jl
push
dec
aas
icebp
xor
ds
bound
std
ljmp
pop
fcmovnbe
clc
push
pop
movb
lahf
daa
loopne
sub
aam
in
stos
push
out
jecxz
fmull
xchg
mov
or
add
jp
repnz
pop
test
dec
sbb
cltd
sbbb
fsubl
das
adc
push
test
or
mov
or
shl
mov
mov
jmp
arpl
and
stos
sub
scas
or
mov
outsl
fisttpll
cmp
sub
adc
insb
lahf
adc
fiaddl
rolb
adc
cmc
lods
cli
dec
xchg
dec
pop
test
lds
ds
add
push
mov
jg
mov
lock
aam
fstpt
push
push
inc
dec
outsb
inc
inc
int
sbb
sbb
imul
xor
lret
add
adc
outsl
scas
mov
mov
mov
add
cmp
out
or
es
jae
imul
incl
pusha
cmpsl
loopne
mov
pop
loopne
sub
push
lcall
movsb
fwait
incb
or
add
mov
mov
jno
push
nop
pop
pop
sub
jae
jb
xchg
daa
jmp
and
cmp
push
mov
mov
sbb
lcall
filds
inc
mov
mov
icebp
lret
dec
fsts
add
cwtl
movsl
push
xchg
jns
fnstsw
fidivrs
push
adc
imul
jae
mov
xchg
push
mov
rcrl
jbe
movsb
mov
je
test
mov
lods
push
pusha
int3
jmp
test
jecxz
cmp
sbb
leave
push
jbe
mov
mov
xchg
sbbb
lods
jmp
mov
mov
filds
inc
mov
idivl
les
lcall
mov
pop
inc
jo
add
add
jp
mov
jne
cltd
push
mov
mov
cld
xchg
pop
cli
pop
sti
pop
das
sarb
push
push
into
test
or
jg
sub
sub
call
js
dec
mov
lahf
sbb
lea
in
stos
cltd
in
inc
fisubl
cmpsb
jmp
mov
fcoms
mov
dec
adcb
loope
inc
jle
jg
inc
inc
xchg
shll
pop
mov
sub
pop
and
sub
ds
loope
addr16
and
fildll
outsb
arpl
jge
jbe
push
mov
mov
sbb
fldcw
outsb
sub
std
arpl
xor
aad
movsb
rcll
mov
int3
cwtl
sbb
es
inc
arpl
mov
dec
xchg
mov
push
jmp
jl
adc
lds
pop
mov
push
test
jge
in
out
std
and
add
repnz
lret
fwait
xchg
mov
sub
sbb
jo
int3
popf
xchg
ret
lret
jb
inc
in
or
lea
sbb
sbb
aas
cmc
push
bound
adc
das
int3
daa
sbb
dec
test
ret
mov
leave
jo
jmp
xchg
pop
roll
out
call
pop
in
xor
pop
scas
outsl
pop
and
ret
xlat
fs
add
in
push
out
dec
or
mov
dec
addr16
in
scas
xchg
cmp
jle
loope
xchg
shl
cltd
xlat
adc
adc
mov
out
dec
push
mov
sbb
dec
popa
ret
jb
or
sub
mov
mov
push
push
and
fwait
push
inc
pusha
pop
jp
jle
or
ret
xchg
sarl
mov
cmp
xchg
loope
pop
cmp
cmpsb
addl
dec
enter
pop
xor
orl
sbb
outsl
stos
lcall
sub
mov
out
add
mov
pop
inc
mov
inc
mov
sbb
xor
sbb
and
dec
xchg
lfs
enter
frstor
xchg
xchg
fidivrl
loope
outsl
imul
mov
enter
cmp
aad
mov
mov
es
in
cmp
pop
jg
mov
jle
jl
jp
fistl
cld
push
sbb
pusha
adcb
sbb
ja
pop
pop
sub
add
dec
push
bound
out
mov
add
movsl
addl
cwtl
jnp
xchg
movsl
xchg
mov
out
sub
mov
push
bound
cmpsl
popf
sbb
test
out
lock
or
cmp
jnp
add
repz
jl
imul
fisttps
push
pop
dec
data16
push
ja
popa
sbb
int3
adc
in
fcomps
jmp
js
pushl
jg
push
into
and
add
xchg
mov
shl
movsb
addr16
rcll
add
inc
and
repz
dec
addr16
daa
pop
fwait
mov
and
lods
call
mov
xor
es
cli
jge
arpl
lock
outsl
adc
aaa
or
ret
enter
and
jmp
mov
xor
xor
xor
or
je
push
cwtl
mov
rorl
cmp
mul
fucom
push
sub
sub
sbb
xorl
xchg
cmp
sub
xchg
scas
lret
or
test
pushl
pop
jg
testb
xchg
out
test
push
out
jmp
ret
fsubrs
arpl
ret
cltd
and
sbb
in
xor
sbb
xor
inc
fwait
mov
cltd
subb
hlt
insb
loope
and
jb
orl
xchg
cmp
lock
dec
mov
mov
rol
lds
icebp
xor
cmp
xor
sbb
lea
and
lods
inc
movsl
in
jle
cli
in
xchg
enter
xor
in
push
adc
mov
dec
sbb
call
imul
pop
divl
data16
mov
add
dec
sub
lea
or
les
icebp
lds
out
lret
pop
inc
mov
je
mov
pop
xchg
or
aas
aad
aam
into
push
clc
jno
aas
jns
cmpl
pop
imull
incb
cmp
pop
add
out
add
sbb
push
push
iret
data16
imul
iret
mov
adc
je
dec
mov
mov
or
push
repz
sub
in
xchg
mov
sub
out
lahf
sub
ficomps
xchg
pop
lahf
mov
or
in
addr16
cmp
sbb
lods
jecxz
aaa
push
ret
jp
loope
sbb
xor
adc
lods
sub
pop
in
add
push
shrd
push
mov
or
mov
dec
ljmp
jno
cmpsl
aas
pop
addr16
addr16
xchg
movsb
andl
jnp
ja
inc
mov
push
outsb
dec
push
cld
pusha
filds
mov
sub
jb
inc
loopne
jbe
inc
out
xor
push
idiv
and
pop
mov
ret
jbe
push
sub
xchg
out
add
adc
scas
pop
leave
cmp
clc
js
xor
pop
cli
leave
sub
cltd
insl
gs
test
loope
pushf
cmp
adc
cmp
pop
test
xchg
sbb
and
aaa
and
xchg
xor
aad
bound
inc
jecxz
jb
inc
push
testb
decb
dec
test
sbb
pop
jg
mov
push
imul
sub
cltd
cmp
mov
pop
fistpl
shlb
idivl
dec
adc
dec
jmp
jbe
and
push
cmpl
mov
icebp
mov
mov
fisubl
xchg
hlt
jecxz
or
out
push
or
jmp
cmp
mov
cmp
jno
fldl
adc
or
and
jp
mov
fdivl
adc
lods
mov
stos
pop
or
sub
cmpsb
sub
roll
inc
imul
mov
fdivrl
adc
or
adc
xor
or
adc
or
pusha
pop
icebp
inc
mov
cmpsb
mov
jp
or
in
push
push
inc
outsb
ret
sub
cmpsb
mov
arpl
lods
sti
orb
lds
loop
sub
jbe
sbb
jae
je
fwait
jp
push
jnp
adc
xchg
push
aas
cli
arpl
idivl
es
cs
sub
cmc
pop
add
xor
data16
and
mov
loope
test
add
push
mov
dec
push
or
in
or
jne
mov
addr16
xor
cmp
xor
loopne
out
pop
mov
sbb
sti
aad
push
mov
inc
adc
lods
push
push
and
mov
adc
and
cltd
dec
jp
cwtl
push
dec
and
adc
jo
lea
out
lcall
lods
imul
dec
add
enter
out
scas
inc
enter
cmp
fimuls
mov
mov
dec
add
push
mov
jmp
movsl
rorl
add
int3
clc
mov
pop
pop
and
in
mov
adc
adc
mov
pop
pop
sub
mov
scas
aas
out
pop
dec
insb
xlat
in
xchg
lret
in
mov
xor
mov
popf
add
mov
dec
pop
or
test
fxrstor
dec
enter
mov
mov
xor
in
ja
sub
aas
xchg
imul
cmpsb
leave
mov
add
xor
cld
mov
inc
clts
das
push
mov
subl
fmull
jg
lods
fsubl
and
push
mov
or
out
sub
mov
adc
xor
adc
loopne
fmuls
shll
ret
mov
xor
cmpsb
mov
xor
mov
mov
mov
xor
jmp
movsb
outsl
test
movsb
ss
sahf
cmp
xchg
sbb
cmp
inc
fistpl
in
aaa
fdivrl
insl
js
sub
and
gs
mov
and
jns
inc
push
add
lock
stc
sub
mov
lock
jnp
mov
push
add
cwtl
out
sub
push
adc
xchg
pop
pop
xchg
enter
rcll
jge
mov
lea
or
push
scas
inc
or
cmp
rolb
mov
pop
xchg
lcall
mov
incb
mov
cmp
add
mov
inc
xor
jl
xor
xor
mov
push
mov
add
mov
cmp
jno
js
mov
or
les
scas
imul
pop
push
aad
dec
stos
inc
imul
arpl
stc
fstps
pop
movsb
lcall
es
cmpsb
mov
push
test
or
xor
mov
pop
in
outsb
sub
mov
and
jo
mov
shlb
inc
outsl
call
cli
xchg
mov
stos
cmpsb
rcr
xchg
mov
shrl
or
push
cmp
mov
add
and
mov
insl
mov
push
sbbb
lahf
or
adc
sbb
outsl
dec
sbb
xor
mov
into
dec
gs
arpl
push
jmp
std
jae
stos
push
mov
or
push
nop
int3
in
aam
pop
lea
or
sub
push
loopne
xor
sub
inc
fcmovnb
jmp
sbbb
lret
sbb
ret
fdivr
out
fmuls
test
pop
add
mov
nop
cwtl
mov
test
pop
xchg
add
sub
xchg
or
push
insl
lods
sti
adc
out
pop
fwait
std
mov
sub
inc
icebp
imul
mov
and
lahf
cmp
dec
mov
xchg
sbb
bound
or
jns
lods
mov
cld
inc
jb
inc
cmp
sti
sbb
mov
cmpsb
pop
lods
int3
sub
outsl
sbb
repnz
sub
sub
mov
sbb
inc
mov
bound
sbb
jno
jne
fsubrl
js
lret
stos
dec
insl
stc
movsl
xorb
imul
pop
fcoml
add
mov
cmp
mov
pushf
adc
fwait
lahf
fiadds
test
jbe
sbb
xor
jge
inc
ret
pop
pop
insb
fiadds
push
sub
adc
and
ds
leave
aad
mov
subb
mov
inc
out
clc
mov
rorl
loope
adc
ds
dec
test
inc
sub
aad
and
cmp
jmp
je
mov
cltd
mov
arpl
out
ds
push
push
lods
xchg
test
or
aas
add
adc
lods
popa
and
jmp
mov
cmc
inc
dec
and
aad
ljmp
mov
lods
jge,pn
je
cmp
cmp
shld
cmc
cmpl
mov
xchg
fnstcw
test
adc
mov
adc
stc
xorl
lcall
jb
jg
jle
lret
pop
and
sbb
lds
mov
pop
mov
pop
movsb
mov
inc
push
popa
inc
mov
sbb
xor
jne
out
mov
sbb
iret
mov
adc
pop
subl
add
ja
xorl
test
cmp
dec
in
pop
add
adc
mov
push
mov
es
sub
addl
mov
cs
int
xlat
jmp
sub
cmc
scas
enter
lds
fisttps
ret
jbe
mov
repnz
mov
inc
push
cmpsl
icebp
and
push
xor
add
or
ds
jmp
scas
in
mov
push
cmp
rclb
mov
jbe
jb
popf
data16
mov
in
lock
nop
aad
fisubl
mov
lahf
in
repnz
jge
mov
movsb
out
jno
xchg
push
xchg
addr16
ror
dec
out
push
sbb
pop
stc
insb
xor
push
mov
mov
cmp
cmc
jg
xchg
pop
in
outsb
and
jmp
mov
fcmovnbe
lods
pop
push
out
daa
mov
push
push
push
jecxz
or
mov
int3
sbb
test
fwait
lods
pop
ds
stos
aad
inc
or
mov
xor
mov
scas
fmuls
in
ss
jns
jle
or
fimuls
mov
stc
cmp
xor
adc
loop
inc
cmpsl
bound
cli
ds
jbe
test
xchg
mov
jg
ljmp
dec
daa
aad
fsubl
dec
mov
enter
adc
cmpl
loop
mov
xchg
imul
jge
xor
or
mov
mov
mov
mov
xor
shl
jmp
scas
rcrb
and
ja
lods
scas
out
mov
mov
push
push
mov
or
xchg
or
sarb
push
bound
inc
cmp
mov
pop
js
xlat
movsb
push
jl
pop
sbb
js
repz
fwait
std
out
jg
daa
lahf
or
addr16
sti
es
notl
jmp
jbe
popf
adc
sti
or
mov
and
adc
jle
adc
pop
js
cmp
enter
cmp
movsb
mov
pushf
scas
push
js
or
cmpsl
rcrl
push
stos
testl
test
loop
out
jne
cld
enter
xor
jle
mov
in
jg
and
lods
or
aas
andl
fwait
call
test
cld
data16
mov
jp
push
cmpsl
mov
jae
inc
inc
leave
cmc
pop
aam
xchg
push
std
test
sbb
stc
aam
mov
fldt
add
or
in
popl
sbb
jo
lret
clc
cwtl
lds
fisubl
les
lock
out
pushf
cmpl
push
cmp
cmp
scas
sbb
sub
pop
orl
and
pop
std
lahf
loop
aad
inc
hlt
push
or
scas
jecxz
stos
mov
test
or
gs
xchg
jnp
add
push
add
jne
rclb
test
enter
dec
clc
mov
fisubl
xchg
mov
icebp
jg
sbb
shlb
and
fistl
pop
mov
mov
inc
jbe
jl
ffree
loope
xchg
mov
cmp
shll
ficomps
fildl
movsl
pop
popf
pop
test
ret
outsb
mov
sbb
out
mov
popf
addb
xchg
cmp
jnp
movsb
sarl
data16
inc
std
xchg
je
cmpsl
push
roll
dec
lret
aad
mov
hlt
icebp
aam
loop
pop
sahf
xor
dec
sub
push
into
dec
jg
fstps
jb
loope
lret
cli
outsl
dec
dec
mov
out
scas
mov
push
fnstcw
jnp
ret
and
call
sbb
sub
mov
rclb
mov
xchg
repnz
ds
rorb
out
sbb
xchg
or
mov
xchg
sub
or
pop
add
xchg
lcall
dec
mov
mov
out
mulb
inc
fwait
jl
add
mov
xor
mov
push
pop
mov
sti
adc
push
xchg
sbb
xchg
mov
push
int
push
lock
int
jno
dec
dec
icebp
jae
sub
test
fldenv
mov
and
rorl
ds
xor
sub
mov
test
cmp
xor
lock
idivb
cld
int3
jno
cmp
lret
mov
xor
lcall
jne
lds
addr16
addr16
jl
out
push
push
gs
inc
push
rcrl
cli
pop
add
push
inc
jne
mov
mov
mov
xor
repz
sub
jns
adc
loopne
mov
repnz
push
mov
mov
or
out
pop
cmp
les
sti
js
imul
jo
dec
jbe
daa
movsl
mov
cltd
aas
jmp
in
mov
pop
push
into
ret
test
push
mov
mov
jne
xchg
mov
jg
xchg
aad
sbb
jae
cltd
xor
and
test
push
xor
jge
inc
pushf
jecxz,pt
mov
cltd
aam
xor
shrb
jg
shlw
or
mov
inc
push
pop
mov
cmp
adc
sbb
hlt
xchg
push
out
jnp
mov
sbb
outsb
aam
pop
inc
pop
mov
or
xor
into
mov
clc
mov
jns
cmpl
inc
ret
adc
jle
outsl
js,pt
cmp
adc
inc
add
sub
sub
in
sub
bound
out
stos
sub
clc
std
mov
sbb
pop
std
clc
lds
es
insb
cmpsl
adc
jmp
push
popa
add
jbe
insb
shl
jg
xlat
jmp
xchg
lods
or
adc
pusha
ljmp
mov
insl
stc
je
loope
cmpb
subl
xor
ds
mov
jmp
lcall
push
ja
mov
add
enter
and
add
inc
out
stc
leave
pop
jmp
and
pop
push
cmp
pusha
pop
int
sbb
add
cmp
icebp
push
es
data16
mov
jecxz
stos
inc
and
jo
fdecstp
loope
jge
andb
cs
adc
outsb
test
lahf
ss
bound
pop
lahf
xor
movsb
sub
inc
mov
xor
mov
jmp
inc
mov
inc
inc
nop
scas
shl
in
jl
es
push
cmp
xchg
inc
adc
xor
pop
enter
pop
fcoml
pop
and
add
inc
jne
xchg
jnp
pusha
cltd
mov
adc
adc
mov
sbbl
jbe
cmp
rcll
lock
cmovne
ret
mov
ja
ss
dec
cmp
inc
testl
mov
jmp
xlat
push
mov
out
into
int3
adc
pop
daa
insb
push
pop
xlat
mov
dec
jl
ret
adc
lods
inc
stc
addb
mov
je
mov
or
pop
add
scas
daa
adc
mov
in
ja
dec
sub
add
xchg
sub
sbb
bound
mov
push
push
cmp
inc
mov
xchg
xchg
adc
in
cmp
cmp
mov
dec
mov
pop
test
cld
push
pop
hlt
or
outsl
xchg
cmp
in
test
xchg
clc
das
ficoms
dec
jle
out
rorb
sub
jmp
xor
xchg
push
mov
sub
push
repnz
add
imul
cs
nop
xor
call
int3
cwtl
imul
jnp
dec
xchg
lds
shlb
in
cltd
add
xor
pop
cmc
roll
xchg
popf
or
xor
fstps
mov
loopne
xchg
mov
jecxz
jnp,pn
mov
mov
sarl
inc
adc
lds
lahf
xor
stos
and
movsb
cmp
mov
out
dec
fwait
cld
jo
mov
ret
jp
scas
inc
stos
fs
lcall
sbb
int3
pushl
and
scas
adc
pop
popa
xlat
lds
lods
inc
lea
mov
push
sbb
mov
pop
sahf
sub
and
sbb
ds
icebp
push
or
push
data16
fldcw
xchg
dec
aad
push
stos
mov
test
sub
dec
push
mov
cmp
addl
cmpsb
mov
cs
adc
push
pop
inc
test
cmc
insb
stc
sub
and
jmp
outsb
add
jnp
pop
mov
inc
inc
cmc
push
dec
cwtl
cwtl
icebp
inc
adc
and
fdivrl
and
inc
cltd
sbb
in
sbb
or
xor
dec
stos
pop
xchg
movsl
movb
push
jns
xor
je
mov
mov
into
test
mov
mov
adc
mov
stc
jae
pop
cmp
fdivl
popf
jl
jne
xchg
daa
and
sbbb
cli
int3
lcall
ret
xchg
push
lods
cld
dec
int
mov
inc
dec
sbb
test
inc
call
fmuls
and
jp
mov
fisubrl
das
iret
stos
ja
and
movsl
sbb
aad
mov
scas
in
dec
and
divl
es
roll
cmp
stc
imul
sbb
sub
cs
dec
into
dec
pop
sbb
xchg
loope
ja
add
repnz
sbb
repz
fwait
push
mov
dec
dec
mov
push
stc
movsl
test
fbstp
out
inc
fadd
jle
adc
in
push
mov
adc
sub
xchg
push
jle
xchg
in
dec
xor
inc
push
xchg
jle
jp
push
inc
movsb
adc
movb
lock
ret
je
push
xor
repz
movsl
jae
or
or
ja
ret
xchg
repnz
xchg
add
dec
idivl
cmp
loopne
sub
xor
xor
insb
test
mov
sub
add
adc
or
das
jmp
push
cmc
add
add
lods
push
fldenv
push
cmp
jg
out
mov
jecxz
pop
sbb
cmp
cld
popa
sbb
add
leave
push
and
fldcw
arpl
sub
xchg
and
xchg
and
lods
sub
shlb
dec
lods
mov
loopne
shlb
cmp
sar
inc
push
sbb
pop
xor
into
push
lods
iret
fidivrl
jle
sti
imul
sti
out
xor
jp
push
add
inc
gs
leave
xchg
ds
pusha
push
das
xchg
pop
cs
mov
test
mov
sub
int3
mov
dec
fwait
mov
pop
lock
fs
aad
outsl
push
or
int3
pop
in
add
test
adc
push
xlat
test
inc
jg
adcb
jp
inc
pop
nop
adcl
mov
popf
cmp
fsub
mov
sbb
mov
push
cmp
into
add
mov
dec
inc
inc
or
xor
das
icebp
or
mov
es
aaa
mov
mov
push
and
mov
mov
xor
xor
shrd
or
shr
mov
mov
or
mov
cmp
jne
cmp
jne
jmp
mov
mov
mov
mov
jmp
and
mov
loopne
lods
scas
pop
in
scas
dec
scas
or
cmp
subw
ja
mov
mov
insb
adc
adc
mov
xchg
xor
test
jle
mov
sbb
mov
pop
jns
jl
rorb
outsb
jl
xchg
xor
dec
or
andl
mov
xor
leave
cmp
jno
iret
stos
pop
mov
xor
pop
insb
in
enter
mov
mov
cmp
stos
imul
lret
ja
jge
aaa
cwtl
rorl
test
mov
pop
movsb
and
xor
sub
mov
mov
mov
clc
pop
xchg
orl
inc
sub
adc
outsb
hlt
scas
fcoms
subb
push
sbb
sbb
imul
call
or
mov
dec
or
sbb
les
mov
jecxz
je
dec
cmpsl
xlat
cmpsl
lock
lods
rclb
je
add
int3
test
lods
cmp
push
mov
dec
fimull
mov
jecxz
push
xchg
sbb
imul
cmpsl
push
jb
enter
lcall
rclb
jmp
sbb
mov
loop
out
dec
push
mov
mov
inc
sbb
mov
loopne
mov
pop
adc
jmp
add
aas
stc
outsl
dec
adc
and
jns
sbb
cltd
inc
sbb
sbb
push
scas
and
mov
cmc
cltd
bswap
addr16
fsubl
push
mov
pusha
inc
inc
scas
push
in
loope
es
push
inc
fwait
dec
mov
test
xorl
arpl
mov
xor
mov
xor
stos
fstps
xor
movsb
out
cs
dec
jns
sbb
pop
jmp
rcr
mov
push
dec
xor
dec
and
es
outsl
ss
mov
inc
lcall
jnp
popa
inc
mov
in
sarl
add
insl
cmp
lods
or
adc
dec
fcmovne
mov
imul
xor
shrb
mov
push
dec
add
jg
xorb
cltd
cmpb
sbb
mull
sbb
xor
in
xor
xor
and
dec
stc
das
dec
cmp
jecxz
mov
mov
mov
lds
mov
xchg
addr16
mov
xchg
mov
mov
pshufw
sbb
mov
test
aad
movntps
mov
mov
xor
lcall
int3
pop
cli
inc
fbld
test
pusha
mov
dec
inc
or
adc
inc
ljmp
enter
rcrl
mov
rol
mov
stos
cmpsb
and
push
jns
ret
test
cwtl
cmpsb
mov
fwait
shrl
inc
cli
addb
sti
mov
nop
jp
stos
cld
jbe
xchg
filds
cld
ja
sbb
das
xor
xchg
mov
test
jecxz
or
and
aas
mov
pop
pop
imul
cmpsb
push
clc
push
cmp
jge
jecxz
outsl
movsb
inc
jb
xchg
aaa
cmp
lods
mov
and
pop
movsb
stos
xchg
mov
xor
add
enter
test
xor
or
push
push
xchg
or
xlat
ljmp
icebp
mov
cltd
xchg
jbe
or
outsb
push
jecxz
fisttpl
andl
jo
mul
pop
out
add
filds
and
add
mov
int
fistl
push
imulb
insb
in
mov
out
nop
push
pop
sub
jge
orb
out
ffree
add
or
mov
push
mov
je
sti
sub
mov
xchg
pop
pop
jae
flds
es
push
pop
xchg
insb
push
inc
test
addb
lock
cmpsb
lock
dec
xchg
shl
sub
dec
add
mov
orl
pushf
xchg
shl
sub
adc
jne
push
dec
mov
and
daa
movsb
fldcw
or
movsl
rolb
clc
add
adc
fcoms
outsl
inc
outsb
jge
mov
fldl2t
xchg
divb
daa
notb
loop
outsl
shr
adc
mov
jg
enter
dec
gs
xchg
add
out
xor
push
sbb
push
mov
jl
mov
movsl
inc
and
outsb
stos
pop
mov
in
dec
repz
or
aam
cwtl
inc
lret
iret
int3
xchg
sahf
popf
sahf
repnz
fadd
aam
and
cmp
mov
out
fcomps
xchg
jmp
ljmp
dec
lds
mov
or
pop
push
rol
shlb
jmp
mov
repz
adc
hlt
test
jecxz
xchg
loop
sub
dec
repz
les
loope,pt
or
pop
and
lods
mov
lea
in
pusha
dec
xchg
xor
lret
pop
or
sub
dec
mov
mov
sub
lods
or
inc
scas
cmp
xchg
lea
shlb
rol
push
mov
mov
xor
mov
mov
jmp
or
jns
stc
repz
jp
or
cmp
mov
out
loope
mov
adc
je
lahf
pop
inc
jne
pop
ljmp
lret
pop
int3
inc
xchg
inc
and
mov
mov
cmp
xchg
push
std
gs
cwtl
icebp
sbb
xlat
roll
dec
inc
out
pop
push
sub
adc
je
inc
aam
jge
dec
nop
adc
incb
jp
int
insl
xchg
movsb
rcll
lds
cs
popf
outsl
ss
dec
pop
push
push
movsl
mov
ror
jl
xrelease
js
cwtl
adc
addr16
sbb
mov
jmp
mov
and
mov
jne
mov
call
mov
push
mov
cmpsl
shll
mov
mov
out
xchg
mov
fcmovnu
in
lds
divb
jns
adc
jae
dec
das
shll
or
stc
outsl
insb
mov
or
cli
dec
add
xlat
jb
orl
divl
dec
cmp
rcrl
add
dec
jae
cmp
and
adc
jbe
xor
or
aad
mov
data16
lcall
dec
fildl
adc
das
pop
or
not
aad
icebp
in
popa
sti
push
es
jno
in
mov
pop
xor
xlat
movsl
or
push
jl
jmp
mov
adc
mov
add
mov
cmpsl
mov
fwait
mov
inc
xchg
arpl
cmpsb
jns
popf
sub
add
bound
loop
leave
cmpl
push
in
mov
and
push
cmpsl
add
xor
jbe
sti
and
xchg
clc
mov
and
push
dec
jno
shrb
je
dec
gs
dec
add
pop
aaa
sbb
add
icebp
les
inc
mov
repz
pop
and
inc
inc
cmp
clc
xchg
lahf
popf
xchg
int
pop
pop
iret
ret
cli
cmp
mov
mov
jmp
dec
push
jmp
jg
sbb
arpl
pop
mov
les
cmpsb
lea
fwait
mov
xchg
repz
cwtl
or
adc
dec
sbb
sbb
cmpsb
jne
out
lret
dec
inc
cmp
push
sti
or
mov
outsl
jae
insb
rolb
jle
ljmp
into
clc
cld
popl
ud0
adc
orl
lret
mov
cwtl
lds
outsb
jno
insl
xchg
push
aad
xor
aam
out
mov
mov
cmp
inc
mov
cmc
mov
xchg
sahf
or
jge
jg
cld
mov
push
cs
cltd
cmc
ljmp
fld
out
xlat
mov
insb
sbb
imul
dec
psubsw
out
std
jmp
xor
push
cmp
sahf
lret
push
jo
popf
das
adc
inc
xor
dec
in
jg
sub
add
sbb
adc
scas
hlt
mov
data16
push
ror
sub
push
jbe
loop
out
sub
add
sub
inc
mov
cmp
shl
adc
fsts
cmp
std
in
adcl
cli
orl
push
sub
or
cmp
mov
dec
pusha
or
repz
push
add
xor
pop
repz
call
add
jg
push
rorl
imul
aam
bound
js
movsb
clc
push
loope
lahf
outsl
dec
fistpll
sub
adc
repnz
leave
pop
mov
sarb
dec
pop
xlat
rclb
xor
adc
add
pop
sarb
sbb
rclb
imul
pop
scas
inc
aaa
jle
sub
aas
mov
lcall
pushf
lds
mov
xchg
fdiv
dec
pushw
into
inc
pop
push
ss
sbb
adc
hlt
aas
jb
daa
xchg
test
fimull
mov
aad
ret
mov
sbb
push
addl
mov
ss
jnp
cs
sub
pop
das
sbb
mov
mov
mov
pusha
nop
gs
xor
jnp
or
cmp
xor
shll
test
std
push
insb
cli
mov
add
mov
add
push
std
int
and
scas
divl
xchg
insl
cmp
mov
shlb
jno
repz
insl
rcl
ja
std
cwtl
push
jl
push
sub
daa
and
push
pushf
adc
test
ficoml
cmp
xchg
jnp
mov
mov
les
mov
aam
insl
and
pop
push
jo
xor
mov
repnz
insl
jecxz
pop
ja
in
xchg
cmp
or
adc
scas
pmaxub
outsb
lahf
subl
hlt
fisubs
div
out
mov
je
xchg
test
or
fs
incb
add
inc
dec
out
out
cs
xor
shrd
or
shr
mov
mov
or
mov
mov
push
pushl
jmp
aaa
or
js
stc
sub
mov
cltd
or
cmp
bound
mov
push
adc
cmp
cmp
rcll
shr
imul
lds
ficomps
idivl
or
dec
fdivrl
add
scas
mov
mov
shll
std
scas
outsl
push
bound
cli
and
sub
mov
shr
cmp
mov
pminsw
xorb
sbb
jl
and
in
in
pop
inc
mov
insb
inc
xlat
cmc
mov
jo
rcll
jno
test
aaa
mov
and
lea
jecxz
sub
test
pusha
bsr
inc
or
jp
lds
arpl
pusha
sub
das
leave
jae
and
push
gs
movsb
mov
xor
cmp
push
int3
jge
inc
jle
dec
test
ss
jl
lret
mov
xchg
jg
stc
add
or
xchg
cmp
jmp
test
pop
movsb
xor
jae
insb
add
decl
jo
out
sbb
jnp
call
xor
fstpl
push
insl
add
leave
out
arpl
fwait
push
insl
subb
mov
imul
xchg
mov
add
or
loopne
andb
cmp
xor
pop
adc
sbb
or
cmpsb
orps
mov
test
dec
xchg
dec
inc
lods
cwtl
push
mov
cmc
loopne
frstor
cs
mov
jl
pop
adc
push
dec
mov
iret
xchg
mov
pop
test
std
inc
or
shlb
sbb
xor
aaa
adc
xchg
movsb
arpl
mov
in
cmp
push
cmp
mov
inc
mov
pop
into
into
and
mov
sbbl
push
xchg
sub
and
xchg
scas
repz
negl
push
loopne
iret
inc
xchg
pop
mov
aam
stos
and
aam
bound
xor
add
or
sahf
sbb
pop
jle
ljmp
mov
arpl
cld
mov
xor
fsubr
roll
sub
das
pop
fiaddl
test
inc
sub
fcomi
enter
adc
sbb
jbe
or
lcall
repz
cs
int3
sbb
pop
mov
adc
aam
or
add
inc
fdivrs
cmc
push
or
negb
ret
inc
inc
sahf
dec
mov
rol
push
dec
ja
or
pop
push
sbb
fnstcw
fmuls
inc
mov
lahf
cs
xchg
dec
scas
repz
stos
or
testl
sti
adc
jg
lahf
inc
or
mov
mov
stos
add
cmp
mov
push
cmp
insb
in
inc
lcall
je
dec
les
cmp
arpl
inc
test
pop
jae
fwait
xorb
test
pop
push
mov
sub
mov
lock
bound
push
inc
and
sti
mov
lock
fdivrl
clc
ret
rcrl
rcll
inc
jno
xor
mov
lds
or
int
rorl
mov
inc
cmc
sbb
mov
cmp
or
cmp
mov
sbb
popf
daa
outsl
lcall
mov
iret
cli
sbb
cltd
or
shlb
pop
sbb
mov
xchg
aas
sahf
cmpsb
bound
addr16
mov
mov
popf
jnp
std
inc
jbe
mov
fldcw
fsts
loope
pop
addr16
rcr
icebp
inc
iret
inc
lds
or
inc
mov
repnz
mov
clc
insb
push
ret
mov
dec
jmp
out
rol
jne
cmp
add
xor
scas
imul
rclb
dec
jmp
lods
in
jl
dec
cmpsb
mov
fyl2x
push
ss
enter
xlat
ret
bound
mov
mov
jmp
rep
loope
jge
cmc
sbb
imul
lds
loop
adc
cmp
test
outsb
fnstenv
imul
pop
jge
jge
mov
sub
lods
in
outsl
mov
mov
inc
xchg
mov
jno
inc
push
push
xchg
cwtl
mov
cmp
xchg
loop
sbb
cmp
outsl
push
mov
adc
xchg
and
mov
cmpsb
inc
push
cmp
and
cwtl
push
add
jge
jp
imull
push
mov
add
sbb
xchg
pop
xchg
adc
cwtl
sbb
cld
sub
pop
js
fstpt
je
sarl
inc
cmp
sbb
cwtl
jnp
xchg
cmp
fisubrs
dec
or
loop
out
xor
loop
faddp
out
outsl
dec
lock
mov
add
out
rolb
push
call
mov
mov
shrd
shr
shr
xor
jmp
repnz
pop
loop
fsubrs
fimuls
push
push
mov
xor
lahf
in
add
dec
cmp
orb
in
rcll
inc
dec
mov
push
inc
and
loopne
ret
push
dec
inc
rclb
pop
jmp
jnp
lds
sahf
outsl
mov
ljmp
cmp
scas
pop
xchg
movsl
call
jp
mov
das
movsb
ljmp
adc
loopne
dec
sbb
movsb
sub
pop
sub
cwtl
and
cmpsb
adc
imul
loope
cmpsb
repnz
sti
call
cmp
jp
scas
in
sbb
push
js
cmpsl
sbb
jne
xchg
push
aad
xorl
rcrl
mov
xor
adc
hlt
stc
sbb
outsb
fdivrs
jb
mov
rcrl
and
pusha
mov
mov
push
cmc
iret
and
adc
cmp
add
sub
pushf
addr16
and
icebp
lea
in
add
inc
dec
pusha
mov
out
jle
repz
jp
cmp
es
push
push
shlb
rcrb
dec
imul
testl
loopne
pop
insb
call
xor
int
cmp
shrl
insb
shlb
mov
xlat
add
pop
movsl
adc
jg
pop
jno
jbe
jecxz
pop
adc
jle
inc
insl
movsl
enter
push
nop
sti
sub
aaa
push
loopne
jb
ret
shlb
mov
inc
mov
popf
add
jg
push
test
into
dec
iret
push
call
mov
and
dec
pop
leave
jno
out
jmp
jb
rol
mov
xchg
push
jmp
sbb
push
xor
cmpsb
mov
out
dec
faddl
jl
inc
fsubs
pop
repz
dec
inc
icebp
inc
sub
das
aaa
mov
aad
push
lods
adcl
sub
jmp
jp
call
jne
subb
push
xchg
push
testb
xor
xchg
lock
or
pop
lret
push
aas
dec
mov
sub
mov
insb
mov
popa
mov
mov
add
add
cmpsb
xor
sub
inc
call
out
bound
rclb
sub
call
mov
sub
push
dec
add
push
xchg
daa
or
dec
dec
jo
sub
sub
pop
add
test
sti
inc
cli
ja
pop
fdivs
and
fs
hlt
std
cld
jp
int3
stc
rcl
out
lcall
pop
jl
xchg
mov
dec
lea
mov
rcll
into
jp
cmpsl
cmp
mov
loopne
fiadds
addr16
and
and
pop
scas
lret
pop
int
xor
inc
mov
repz
add
imul
sbb
mov
dec
popa
nop
or
and
mov
outsl
pushf
leave
push
add
add
rorl
enter
popa
dec
pop
inc
sub
shl
sub
test
adc
cmp
cmp
test
sub
sbb
inc
fistl
push
jecxz
outsb
cli
cltd
pop
shrl
jno
call
push
jge
push
fcmovu
addr16
mov
xlat
mov
sbb
shrl
in
and
add
dec
push
or
fadds
cli
cmp
xlat
push
push
out
add
push
sbb
idivb
stos
jo
sbb
les
pop
gs
inc
pop
push
add
stos
add
sub
xchg
push
push
nop
lock
inc
loop
add
xchg
nop
inc
cltd
rep
js
pop
inc
cmp
push
sub
and
mov
push
out
mov
imul
arpl
mov
dec
xor
lcall
sub
push
mov
test
jbe
inc
fdivrs
adc
mov
or
pop
mov
pmaxsw
int3
jno
ljmp
mov
push
hlt
push
rorl
mov
jns
addr16
aad
fstpt
movsl
xchg
xchg
xchg
lret
sbb
xchg
aad
sub
and
popf
and
push
dec
pop
test
add
xor
dec
adc
jbe
in
mov
lods
shrl
cmpsb
sbb
mov
sub
push
add
push
mov
out
fidivs
adc
aas
xor
decl
rclw
sub
jne
movsl
test
fucomi
jnp
mov
fisttpl
jle
xchg
mov
jge
in
adc
jbe
sub
data16
incb
lcall
fwait
add
mov
mov
inc
or
sub
push
mov
in
ror
jno
bound
addb
push
pop
lock
adc
fsubrs
dec
mov
add
dec
in
push
push
dec
jp
ss
rorb
push
pushf
mov
sar
out
out
movsb
cmp
into
lret
fcoml
jg
in
lret
mov
push
xor
lret
push
xor
mov
mov
jmp
in
and
dec
mov
xorb
jnp
push
cmp
and
add
sbb
mov
filds
inc
bound
into
imul
xchg
pop
jmp
adc
and
call
xlat
mov
movsb
scas
inc
mov
cld
add
leave
adc
mov
call
add
pop
adc
jb
push
push
sub
ficoms
mov
add
loopne
pushf
or
xchg
pushf
dec
adcb
cmp
fsubrp
in
int3
and
movb
inc
inc
jns
jmp
jne
xor
sbb
bound
pushf
stos
aam
fidivl
jp
jns
loopne
xchg
fdivl
add
push
push
fstpl
inc
out
or
mov
in
adc
testb
mov
repz
dec
mov
ljmp
popa
jmp
push
cmp
pop
outsl
fiadds
shlb
mov
lcall
int3
ds
sarl
repz
pop
lret
aam
mov
mov
cmp
adc
jo
arpl
lods
pushf
sub
into
add
push
loop,pn
out
dec
adcl
sbb
imul
sbb
pop
mov
inc
in
faddl
xor
pop
rcr
int3
add
xchg
mov
and
fadd
jl
push
xor
sbb
out
mov
ret
filds
es
outsl
js
rclb
xchg
vcvttsd2si
test
sarl
lea
gs
out
jge
test
mov
pop
jp
dec
out
or
push
inc
clc
and
outsl
cs
nop
mov
mov
idiv
test
rorl
push
and
or
fisubrl
add
iret
mov
aam
dec
xchg
lret
test
add
cmp
std
jo
sbb
sbb
and
mov
xlat
push
sbb
pop
daa
das
mov
push
dec
das
xchg
xor
aas
ja
jae
frstor
dec
scas
cmpl
add
mov
mov
ret
xor
xchg
mov
jmp
sub
mov
andl
push
adc
mov
notl
aaa
mov
add
in
js
std
dec
cmp
popf
xor
push
dec
jg
pop
mov
aam
xchg
mov
sbbb
fldt
mov
outsb
cld
push
fs
imul
in
sub
fsubrl
sub
mov
jns
push
scas
add
lahf
sub
add
test
push
mov
dec
or
scas
push
insl
jp
es
xor
xchg
pop
dec
xlat
into
jmp
cwtl
mov
sub
jg,pn
imul
cmp
mov
sbb
mov
pop
mov
dec
mov
mov
and
aas
or
add
fs
mov
xor
repnz
ret
out
loope
enter
lods
and
mov
sub
pop
jmp
dec
scas
pushf
or
andb
sub
dec
inc
sbb
fimull
pop
push
xchg
imul
mov
insl
xchg
and
cmp
xchg
and
push
push
jns
add
mov
pusha
fmuls
insb
mov
dec
xchg
sub
popf
ja
cmp
jle
xlat
stc
pop
pop
or
jg
and
cli
xlat
shl
fists
sarl
fldt
cwtl
fs
mov
jo
and
pop
cmpsb
jle
movsb
pop
andl
ljmp
cmpl
mov
mov
mov
xor
mov
lret
add
adc
test
xchg
sbb
mov
xchg
ud2
dec
pop
dec
das
int3
pop
push
in
push
pop
outsl
shll
or
gs
lods
mov
lahf
movsl
insl
adc
adc
push
call
mov
stos
lret
push
sub
mov
in
mov
jo
jb
dec
dec
ljmp
fists
sub
jo
insb
cmovb
test
int
dec
dec
mov
jge
xor
pop
inc
mov
fucomp
out
xchg
imul
ret
int
xchg
dec
cwtl
fs
ret
pop
sbb
call
mov
pop
cmp
and
sub
arpl
and
xlat
lcall
inc
cmpsb
push
jp
test
add
jae
push
neg
adc
sahf
mov
pop
movsl
lods
xchg
adc
mov
dec
pop
mov
mov
xor
pushf
and
stc
jbe
cs
ds
mov
out
out
push
fstpt
in
outsl
outsl
cmp
pusha
test
push
jne
sub
sub
call
ja
je
ret
mov
test
xor
sbb
fsubs
xor
mov
mov
imul
mov
push
push
push
call
shld
shl
jmp
lods
jecxz
sarb
sub
hlt
gs
je
int3
outsb
xor
push
cmp
xchg
push
sub
inc
pop
adc
add
push
cmp
cmpsl
mov
les
mov
jno
or
push
insl
decb
inc
or
jnp
and
sarb
mov
out
push
dec
xchg
jmp
lock
fldcw
lods
dec
jmp
mov
or
adc
std
ss
cwtl
aas
xor
xor
pop
jae
in
fcoml
cltd
inc
lret
sbb
sbbl
mov
cmp
imul
ret
mov
not
cmpsl
addl
push
dec
inc
adc
xchg
int3
jne
dec
fldenv
push
mov
fsubrl
jmp
je
inc
sub
or
in
and
xor
sub
cmp
jno
lock
and
insl
xchg
inc
movsb
mov
xchg
mov
es
or
out
loope
out
add
fimuls
in
mov
repnz
and
mov
imul
sbbl
daa
aad
and
das
sub
jl
push
cmp
lods
aad
pusha
cmpsb
xchg
xchg
shl
add
sti
mov
sti
cmc
lock
aas
push
ret
ds
loop
jmp
fadds
aam
fadd
rorl
jbe
lret
fdivr
xor
popa
push
pop
push
or
addr16
insl
fdivp
pop
popa
shlb
cs
xchg
cmp
add
imul
pop
and
sbb
gs
rorb
ds
pop
mov
xchg
inc
jge
rolb
push
sbb
outsb
je
xchg
fimuls
fistl
aad
xorb
cmp
adc
pop
pushf
pop
adc
aad
hlt
icebp
lods
popl
sbb
repz
scas
inc
mov
lret
loopne
add
shl
inc
ficoms
imul
movsb
dec
cltd
arpl
add
lods
jl
dec
das
das
add
es
cmp
outsb
adc
js
pop
xor
xor
push
stc
aam
fisttpl
pushf
sti
push
fsubl
out
dec
mov
mov
mov
mov
cmpsb
sbb
adc
jg
pop
test
xchg
sub
and
or
xchg
jle
pop
dec
jb
fbstp
fsubrs
inc
ljmp
jno
scas
push
push
mov
sub
outsb
and
mov
push
jne
rorl
sbb
push
mov
shrl
stos
mov
dec
jb
lds
mov
cmp
sbb
and
rorb
sub
dec
xorb
cli
aam
mov
sbb
jle
pop
add
int
jmp
sbb
cs
jae
cld
xchg
or
xchg
mov
mov
and
mov
das
push
cmp
subb
add
leave
xchg
ljmp
add
stos
clc
scas
sbb
sbb
mov
jae
pop
pop
pop
sbb
add
adc
loopne
xor
cmp
arpl
int
push
mov
loopne
test
cwtl
jmp
faddp
das
das
and
cld
popa
out
filds
rclb
lcall
enter
mov
push
mov
cmpsb
dec
mov
ds
sub
mov
inc
jne
call
cmpsb
push
mov
jg
inc
cmp
sbb
add
jle
ss
daa
pop
push
sti
sahf
test
inc
arpl
sub
mov
cmp
daa
inc
addr16
jl
cmc
inc
in
dec
xor
cmp
inc
ja
inc
imull
jmp
push
aam
mov
data16
jno
and
sti
jmp
fs
insl
mov
and
push
cmpsb
sar
cld
in
mov
shll
or
jmp
enter
mov
adc
xchg
int3
jo
addr16
mov
push
sbb
jb
das
dec
and
mov
loope
popa
pop
loop
cwtl
inc
or
cltd
sbb
movsb
js
addr16
sti
ret
popa
jmp
inc
rcrb
mov
xor
fiaddl
lea
cmpsb
test
in
dec
out
mov
in
fstp
stc
rcrl
or
pop
test
mov
addl
dec
pusha
inc
lock
jns
adc
out
pop
push
jne
pop
fsubrs
test
cmp
push
ret
jne
pop
jo
mov
daa
xchg
jns
ror
mov
jecxz
mov
leave
frndint
xchg
inc
lea
das
test
test
repnz
sbb
mov
cltd
adc
in
mov
mov
fbld
sub
mov
aaa
movsl
sbb
and
gs
and
sbb
sahf
ljmp
pop
sbb
aaa
dec
dec
mov
and
xor
add
jno
je
mov
push
sbb
mov
sub
push
adc
pop
pop
pop
fistpl
dec
xchg
out
scas
imul
daa
mov
or
xor
or
xor
xor
mov
mov
mov
mov
mov
mov
shl
xor
mov
mov
mov
xor
xor
shrd
shr
or
xor
mov
or
mov
mov
mov
shl
xor
mov
mov
mov
jmp
testl
mov
test
outsl
or
cmp
adc
adc
cmp
dec
fwait
iret
mov
call
sahf
dec
icebp
or
mov
cld
push
add
pop
push
into
sbb
jmp
push
jne
out
sbb
cli
mov
andb
sbb
mov
divb
mov
push
xor
fistpl
loop
jmp
lret
ret
lret
or
fwait
leave
pop
sub
push
idiv
loopne
roll
push
push
add
imul
out
jnp
clc
sub
paddw
or
push
xor
sub
das
and
mov
cmp
icebp
mov
aas
jp
jle
cmp
sub
xchg
loopne
arpl
incb
mov
arpl
or
movsb
ljmp
adc
pushl
insl
ja
and
loopne
mov
ret
aaa
jno
mov
daa
jnp
mov
add
xchg
clc
cmp
sub
lods
inc
jge
in
add
insl
test
mov
dec
sbb
xor
lods
xor
xchg
mov
imulb
stc
ljmp
push
xchg
sahf
add
test
mov
and
out
leave
js
orl
lret
loope
and
adc
xchg
les
xchg
enter
jbe
rorb
sti
int3
xlat
pop
pop
sbb
ss
imul
adc
ja
lds
sub
fmull
cmp
inc
xchg
dec
orb
jmp
xchg
call
xchg
stc
jo
test
inc
lds
mov
mov
cmp
sbbb
mov
xchg
mov
inc
int3
andb
ja
hlt
mov
pop
xchg
es
fbld
iret
leave
fwait
jmp
sti
ja
xor
dec
sub
sub
lds
xchg
mov
loopne
mov
arpl
adc
xchg
mov
outsb
pop
adc
mov
push
and
arpl
jecxz
enter
xor
stos
sbb
addr16
jge
inc
inc
cli
sub
and
xlat
jmp
mov
insl
push
out
add
mov
mov
outsb
sub
jge
add
jno
and
mov
dec
cmp
cmp
cmpsb
movsl
fnsave
in
cmp
loop
jmp
jge
add
sub
and
cmp
rcrb
in
jnp
cld
cli
je
outsl
lcall
pop
sahf
shlb
ss
fadds
cmp
push
dec
std
jno
pop
hlt
mov
pop
sub
mov
adc
push
out
push
fs
fnstcw
aam
add
mov
in
and
fs
lahf
inc
insb
and
sbb
mov
jp
test
scas
ljmp
mov
out
sbb
lret
push
std
out
out
je
or
aas
xchg
mov
enter
clc
adc
lea
in
pop
shrl
sub
popa
sub
add
lret
mov
add
sbbl
pop
mov
xchg
in
cltd
jg
mull
push
jnp
dec
sub
cmp
dec
jno
cmp
movsl
insl
or
aas
aaa
mov
cmp
scas
pop
sbb
lret
cs
jle
mov
insb
in
lds
or
fcoms
addr16
jecxz
add
out
jne
call
ds
movsl
ss
orl
lods
sub
jb
sbb
ja
cmp
jno
gs
lahf
out
and
cmp
dec
xor
addl
mov
notl
iret
push
xorb
sub
popa
dec
lahf
ds
and
dec
sti
cmp
aam
out
cld
and
ret
sbb
jle
jns
arpl
hlt
cli
movsl
cmp
test
scas
add
xor
push
mov
or
stc
outsb
xchg
aam
jns
cmp
xor
stos
aad
mov
test
mov
jb
ljmp
push
mov
mov
std
stc
sub
lock
and
pusha
imul
addr16
fdivrl
nop
sub
fwait
push
adc
icebp
fsubr
std
sar
inc
int3
data16
arpl
mov
pusha
arpl
data16
adc
movsl
lcall
lds
popf
in
aas
inc
js
xor
adc
aam
ja
mov
fucomip
push
cli
xchg
dec
into
adc
mov
mov
cs
call
add
cld
dec
xchg
test
pusha
cmc
and
jl
mov
repz
clc
or
sbb
or
adc
loopne
lret
jmp
jb
and
mov
les
sbb
mov
mov
mov
sub
add
dec
fdivp
hlt
cmpsl
xlat
fsub
fistl
fimuls
push
pop
aad
mov
adc
stos
outsl
dec
aas
adc
mov
adc
adc
add
add
pushf
jp
mov
xor
sub
mov
pushf
xor
shrd
jmp
xorl
mov
and
ret
pop
or
cmp
jmp
xchg
or
push
push
xchg
push
add
lret
push
push
call
test
mov
sarb
fists
pmuludq
mov
push
pop
in
mov
ljmp
popf
outsb
fistl
sub
test
push
fdivrl
aaa
clc
les
mov
cli
mov
imul
xor
lahf
out
adcb
inc
or
pop
push
cmpsb
cmc
ss
or
pcmpeqw
ret
jp
or
mov
inc
sbb
mov
jnp
push
push
sbb
cmp
pop
add
and
loopne
test
sub
dec
out
stos
mov
mov
adc
sbb
jp
inc
push
loopne
xchg
ss
xor
add
or
pop
push
lahf
add
push
mov
ljmp
cmpsl
xor
sbbl
sbb
icebp
out
ficoms
cs
or
ret
dec
out
jbe
sbb
test
lods
cmp
nop
mov
xor
gs
insb
into
les
outsb
ficoml
pop
lea
pop
add
fldl
cmp
cmp
and
xlat
jbe
clc
mov
lret
adc
push
cli
iret
jns
ss
jnp
jne
mov
outsb
mov
cmp
mov
inc
dec
popf
adc
out
pop
cmp
cmp
mov
mov
fwait
xchg
pop
dec
insb
cmpsb
lock
cmp
les
cmpsb
inc
jno
insb
imul
das
packsswb
xor
push
outsl
and
adc
pop
jne
sub
out
sub
clc
lcall
imul
ret
and
xor
pop
int
scas
aaa
jp
ja
cmp
and
stos
adc
lods
mov
xor
test
in
sub
lods
xchg
enter
mov
pop
and
clc
inc
jae
sarl
mov
inc
push
mov
insl
insl
dec
xor
sbb
jne
xor
les
ds
push
shl
pop
jle
push
or
out
jae
rolb
nop
jecxz
out
xor
and
sub
xlat
add
arpl
icebp
sub
adc
jae
test
sub
xor
sub
xchg
inc
rolb
adc
sarb
shll
bound
mov
mov
fisubrl
cmpsl
and
movsl
pop
cmpsl
add
nop
sahf
push
into
pusha
mov
shll
inc
push
xchg
pop
lock
mov
sbb
out
inc
mov
jns
lods
push
ljmp
mov
out
shll
mulb
pop
fcoml
sub
cwtl
pop
pushf
adc
arpl
mov
icebp
stos
loopne
cld
xchg
sbb
int
scas
popf
cld
sub
imul
negb
leave
inc
addr16
movsb
add
sub
adc
xchg
xor
fbld
mov
dec
xchg
gs
fst
adc
adc
sub
pop
or
call
sbb
pop
in
enter
pop
mov
movsb
xlat
test
icebp
dec
imul
popf
xor
cmp
xor
pop
xor
mov
xchg
cmc
jnp
sub
dec
cmpsl
pushf
cmpb
into
xlat
or
daa
roll
orb
xchg
test
ds
sub
bound
clc
cmpsl
test
jmp
rcrl
loop
in
mov
adc
dec
xchg
cld
scas
push
fwait
scas
inc
pop
inc
mov
mov
jle
icebp
insl
inc
jecxz
cmp
mov
push
fcmovb
pop
notl
lahf
mov
lds
mov
sti
test
jp
push
pop
jne,pt
bound
jnp
jns
out
in
jb
sub
outsl
loopne
add
and
in
out
mov
mov
mov
pop
mov
sti
push
enter
adc
bnd
mov
xor
test
add
sbb
pop
jmp
jecxz
jae
aam
mov
stos
int
add
or
sbb
les
jl
fadds
lret
mov
pop
insl
xor
sub
jno
mov
or
cmp
mov
add
mov
adc
xchg
testl
inc
movsb
int3
into
loopne
ja
push
hlt
adc
test
das
jbe
out
test
mov
mov
xchg
jmp
decb
mov
in
lahf
shll
ss
push
lret
popa
cld
jg
shlb
push
jge
xlat
push
es
lahf
rcl
repz
push
ja
outsb
jp
mov
jno
call
jmp
fisubl
mov
out
adc
adc
out
ljmp
sub
or
xorl
lods
imull
lods
add
ret
pop
pop
loope
cmpsb
outsb
insl
idivl
xor
shr
or
or
cmp
jne
cmp
jmp
arpl
cmpsb
adc
xchg
outsb
lea
outsb
mov
add
push
fiaddl
dec
sub
jl
shl
push
hlt
sbb
aaa
shlb
xor
mov
out
sub
push
fmuls
mov
inc
dec
cmp
sti
je
je
and
cld
add
mov
xor
int
xchg
jno
sahf
fiadds
xchg
jnp
xchg
jb
jbe
aam
outsl
push
jp
or
push
or
and
test
push
bnd
mov
cltd
lahf
scas
jg
lret
xorb
add
xchg
arpl
pop
subl
daa
pusha
hlt
adc
pop
add
outsl
daa
mov
vmread
std
daa
fbstp
or
mov
lock
mov
jo
mov
movsb
mov
pop
fsubs
icebp
and
mov
ljmp
jl
mov
sti
stos
sbb
inc
mov
push
fcompl
fstl
inc
xor
jp
cmp
push
push
pop
movsl
xchg
pop
dec
sub
jne
push
fldenv
int3
adc
and
cmc
pop
add
int3
lret
xor
pop
or
sbb
daa
push
sub
in
jb
ja
push
hlt
sbb
dec
movsl
push
adc
lcall
movsb
jmp
fs
cmp
and
sbb
add
dec
pop
push
xor
das
jmp
or
or
icebp
scas
imulb
ss
int
cmp
cmpsb
jbe
out
sbb
int3
shrb
or
out
adc
int
sbb
pop
sub
xchg
fs
and
xor
push
push
mov
dec
push
aaa
stos
icebp
mov
cmp
or
dec
adc
xlat
xor
sarb
nop
push
cmp
stos
hlt
test
popa
pop
out
ljmp
push
ds
fdivr
jno
pop
push
adc
mov
lahf
and
fiaddl
mov
ss
cmp
and
aad
fcom
movsl
add
and
cltd
addr16
mov
pop
sub
fs
inc
mov
ret
filds
loope
out
mov
xchg
push
into
int3
fs
mov
mov
sbb
shll
pop
es
hlt
and
push
filds
jne
clc
fs
push
xor
pop
push
rcll
mov
test
inc
mov
sbb
bt
leave
rcrl
push
pop
mov
push
lods
pushf
aaa
pop
gs
jno
lahf
loopne
test
fwait
jle
arpl
mov
xchg
mov
mov
jmp
jne
push
inc
xchg
dec
cmp
mov
and
imul
inc
push
push
es
push
jbe
pushf
mov
push
jns
and
and
leave
leave
xchg
pusha
push
ffreep
and
fwait
jo
and
ds
jbe
lds
call
or
inc
push
enter
inc
push
dec
jo
inc
push
cmp
in
lret
jecxz
arpl
leave
cmp
sbb
mov
xchg
xchg
mov
aad
jae
fimull
dec
and
call
mov
add
dec
or
inc
sbb
inc
mov
xchg
aas
jle
push
pop
push
mov
aas
push
jb
dec
stos
mov
mulb
orl
push
je
push
mov
test
arpl
ja
jae
aad
or
ja
jmp
jge
xor
inc
and
lcall
test
mov
push
lock
xchg
in
push
clc
mov
les
pop
insl
movsl
sbb
xor
pcmpgtb
add
or
jle
das
mov
daa
jg
xchg
mov
push
adc
jecxz
or
or
mov
xor
addr16
int
lahf
and
scas
jo
stos
mov
dec
lea
push
notb
inc
fidivs
lea
push
cmp
jne
mov
cmpsb
mov
ds
rorl
adc
imul
mov
outsl
push
inc
je
dec
jbe
jnp
or
adc
or
ljmp
mov
out
mov
push
loopne
in
inc
addr16
gs
cmp
mov
fisubl
sub
ljmp
cmp
push
pop
dec
add
dec
cs
testl
pop
or
jns
sbb
lods
aaa
test
out
push
ret
fcmovb
xchg
roll
sub
mov
testb
pop
jg
testb
int
jbe
mov
rcr
xchg
mov
push
jno
cmc
fwait
push
sbb
and
mov
inc
cli
jg
dec
cmpl
dec
lds
hlt
mov
movsb
test
lret
popa
call
push
call
outsb
jmp
out
int3
repnz
or
push
mov
or
sbb
out
mov
or
ret
xchg
call
jmp
dec
ret
mov
xchg
je
pushl
pushl
pushl
jmp
mov
push
inc
push
sbb
add
mov
add
ljmp
push
adc
ljmp
push
mov
cmpsl
outsb
lock
pop
btc
lahf
mov
mov
cmp
sbb
repnz
negl
mov
pop
call
gs
sub
xchg
bound
add
out
call
cmp
sbb
sar
and
pop
lock
pusha
les
rclb
mov
mov
lcall
sbbb
mov
out
add
push
sahf
adc
mov
ss
push
fadds
mov
mov
adc
stc
mov
pusha
lods
mov
pop
insl
call
or
mov
lods
mov
pop
test
ret
xchg
out
sbb
test
adc
movl
pop
movsl
ja
adc
jae
add
jecxz
sub
fwait
lods
es
shr
movsb
jb
mov
rorl
pop
scas
repz
xchg
lds
sbb
sbb
out
shll
push
or
jno
addr16
test
js
and
xlat
mov
adc
jp
mov
inc
lds
jp
mov
test
in
test
and
mov
mov
pop
repnz
out
mov
fadds
jno
mov
sti
add
stos
pop
nop
loopne
aas
enter
pop
jnp
mov
stc
rcrl
or
into
leave
mov
mov
mov
sbb
aas
fimull
setb
adc
js
lcall
xchg
cmp
movsb
sbb
add
in
aam
stos
fdivrl
mov
ljmp
stos
inc
fnstcw
xchg
cld
dec
and
lods
aam
shrb
xor
mov
and
cmp
cmc
sub
scas
xchg
and
in
bound
outsl
sti
orb
aam
cld
mov
and
movsb
insb
cli
add
test
sbb
outsb
shlb
rorb
and
call
adc
sub
cli
and
xchg
adc
fdivr
das
imull
cltd
mov
loopne
sub
sub
mov
andb
xor
jns
jns
fwait
pop
femms
outsb
pop
add
test
mov
imul
cmpsb
icebp
mov
scas
jl
jecxz
fidivs
dec
ds
dec
push
sar
add
fiaddl
dec
sub
mov
lods
dec
adc
imul
cmp
xor
ror
adc
icebp
outsl
push
pushf
out
mov
fidivl
lock
inc
push
mov
ss
dec
cmc
cltd
sub
stos
adc
pop
mov
mov
fistpll
out
cmp
imul
push
ficomps
add
les
mov
cli
mov
nop
sbb
xchg
pop
jbe
dec
aam
test
es
mov
inc
addr16
xchg
stc
cmp
xor
push
inc
or
jl
fimull
inc
sbb
rolb
movsl
mov
outsb
xchg
mov
out
fs
mov
popl
dec
inc
cltd
daa
xchg
sbbl
jno
xchg
jo
frstor
mov
std
cmp
aaa
lods
sti
lock
xchg
std
lds
add
xchg
fbld
jecxz
hlt
bnd
sub
add
nop
out
jnp
bound
int
imul
inc
in
xchg
hlt
add
negb
mov
jecxz
cld
inc
mov
mov
push
incb
idivl
jg
adc
loopne
pop
mov
int3
sub
in
sbb
cwtl
cmp
xchg
mov
not
rorl
mov
cli
in
and
faddp
jecxz
clc
cmp
sub
push
lock
cmp
lret
pop
arpl
ficoms
lret
pusha
xlat
mov
pop
mov
adc
shll
loope
in
popl
adc
sbb
or
imul
pop
inc
sbb
aas
push
call
sub
mov
cmc
rcl
insl
mov
insl
mov
mov
mov
adc
mov
test
es
lds
mov
insl
sbb
jbe
sbb
inc
lock
xor
cmpsl
fsts
insb
jbe
in
int
lods
mov
jns
mov
icebp
jp
js
int
xchg
or
cmpb
adc
scas
pop
je
out
jmp
sub
or
dec
fists
push
mov
mov
int
adc
out
jo
jb
fisttpl
mov
jb
sub
cmp
loopne
aaa
cmc
insl
or
mov
lods
push
cmp
pop
mov
push
cmp
sub
sti
test
cmpsl
into
xorl
fsts
or
xchg
xor
adc
xchg
in
cltd
das
subl
add
inc
ljmp
add
inc
scas
sbb
push
mov
mov
cmp
cmp
daa
jg
pop
test
mov
fucomip
xchg
nop
fidivl
add
push
popf
fldl
outsb
lods
lods
loope
add
imul
jp
int3
mov
jae
inc
fidivrl
mov
adc
out
push
inc
jo
leave
inc
fstpl
subb
add
ss
dec
cmp
loop
mov
popa
mov
ljmp
push
mov
mov
mov
xor
xchg
lock
ftst
jnp
sbb
dec
rcl
mov
popf
iret
cmpsb
movsb
lods
mov
pusha
pop
mov
movb
in
mov
repz
ret
aad
int3
test
lock
sahf
lahf
mov
jno
xor
mov
cs
push
adc
das
xor
loopne
repnz
mov
or
jns
aad
repnz
pop
mov
andl
xorb
mov
jg
scas
add
cltd
lahf
cwtl
lods
pop
lods
jo
push
pop
lea
sub
shll
gs
xor
jl
rcll
cs
insb
fidivrl
ficoml
mov
cltd
call
jb
sub
adc
scas
js
lds
xorl
mov
rcrb
cmp
adcl
mov
out
ja
lods
adc
jle
das
pop
cld
ljmp
int3
mov
inc
cmp
sub
pushf
xchg
sbb
jl
jge
and
movsb
movsb
subl
stc
icebp
xchg
xchg
push
or
cmp
push
cmp
push
fnsave
mov
xchg
sub
cmp
ret
movsb
ret
fisubl
or
xlat
lds
push
inc
sbb
push
mov
xor
fisttpl
cmp
pushf
xor
push
fidivrl
ds
cmp
insb
mov
jb
imul
in
adc
push
push
pop
mov
mov
mov
mov
pop
push
sarl
sbbb
mov
icebp
jge
cmp
aas
std
inc
jns
cmp
xchg
loop
xor
or
push
dec
cmp
rcl
mov
lret
adc
push
loope
xchg
cli
imul
sub
loope
push
inc
jmp
xchg
sbb
dec
inc
push
push
mov
pop
movsl
int
pop
jo
sbb
adc
jecxz
push
insl
xchg
movsl
inc
cmc
mov
sarl
jl
adc
mov
roll
mov
adc
fsubs
mov
jbe
popf
push
lahf
xchg
cmc
enter
stos
pop
loope
or
jne
loope
pop
es
jp
and
jo
stos
sbb
enter
insl
or
aaa
and
lahf
push
sbb
xor
sub
pop
jecxz
cwtl
pop
idivl
inc
jmp
scas
mov
inc
sbb
adc
mov
jo
dec
fwait
mov
xchg
scas
and
adc
xchg
scas
push
loop
or
stc
call
andb
lret
and
jp
insb
dec
add
jmp
or
jbe
es
fisttpl
inc
pop
stos
rol
stos
push
imul
loopne
fsts
adc
ss
call
sbb
movsl
cmp
pop
xor
pop
pop
test
arpl
or
xchg
test
xchg
and
cmp
test
inc
fwait
mov
xchg
leave
divl
je
cmp
or
test
cmp
fstp
int3
popf
xchg
mov
iret
aas
jnp
xor
dec
aas
sub
bt
add
mov
ja
mov
sbb
push
outsl
cmp
gs
aam
aam
andl
mov
out
jbe
rolb
xchg
pop
cs
push
sti
into
fcmove
mov
fs
cmpsl
aad
xlat
enter
xor
mov
in
xor
rcrb
push
ds
out
inc
xor
cltd
ss
sbb
insb
jp
xchg
dec
jne
psllq
in
jg
fwait
xor
xor
sbb
mov
cmpsl
enter
mov
int
in
jo
mov
xor
popl
mov
add
xchg
jno
repnz
mov
adc
pop
jmp
or
mov
int
ss
xlat
xchg
test
gs
cmp
leave
mov
sti
push
std
ja
clc
adc
xor
cmp
int3
or
andl
xchg
or
out
inc
mov
cs
xchg
xchg
xchg
add
and
imul
dec
lahf
dec
les
scas
mov
push
popa
cmp
leave
mov
sbb
hlt
mov
mov
dec
les
packsswb
out
fimull
xor
sub
mov
cmc
cwtl
add
add
in
lods
jnp
fisttps
pop
cmp
push
fildl
shlb
mov
xor
add
ret
movl
cmp
movl
jae
movl
cmp
movl
jae
shrd
movl
shr
ret
neg
mov
jmp
fldenv
inc
cmp
pop
adc
inc
xor
das
out
les
in
push
push
jns
aaa
fnsave
mov
ss
xchg
out
das
jb
icebp
pushf
jae
das
mov
xor
dec
test
stos
push
nop
scas
pop
dec
scas
inc
jbe
inc
icebp
sahf
inc
loope
cmpsb
ja
pusha
mov
cmp
imul
jmp
push
mov
out
mov
int3
sbb
and
dec
insb
lds
lcall
pop
jns
lcall
xorb
imul
cmpsb
mov
int3
ret
sti
je
dec
imul
lret
inc
push
ret
mov
orb
ljmp
add
inc
addr16
and
add
cmp
je
movsb
xchg
cmc
ret
lea
mov
movl
mov
jle
jle
cmp
xchg
mov
push
popf
out
gs
jbe
jbe
inc
mov
pop
mov
jns
call
inc
jne
testl
lods
hlt
mov
pop
pop
or
shrb
jae
addr16
pop
hlt
push
adc
imul
psrld
fldcw
imul
lods
dec
test
rcrb
adc
es
jb
leave
xchg
jp
sbb
nop
mov
inc
xchg
repz
mov
mov
and
loopne
insb
mov
push
cwtl
xchg
leave
adc
or
mov
jno
gs
mov
imul
and
imul
xchg
lock
adc
dec
mov
cmpsb
pop
xor
dec
mov
aad
ds
sahf
inc
jno
leave
sbb
ss
dec
dec
pop
sbb
adcl
in
lods
mov
and
lds
js
ret
in
mov
das
inc
inc
jmp
or
mov
mov
out
shll
xchg
and
add
pop
jo
loope
in
jmp
inc
popa
fsubp
add
mov
push
xor
shll
repnz
mul
loope
pop
sbb
mov
pop
push
mov
or
inc
add
popf
pop
dec
int
pusha
jb
std
test
xchg
sbb
es
imul
loop
push
pop
cmpsl
xor
mov
out
lds
repnz
jecxz
addr16
stos
fcomi
add
xchg
test
cld
push
pop
cmc
icebp
scas
test
faddl
test
fmul
mov
cmp
adc
sub
cmp
mov
push
xor
cld
aam
or
or
xchg
daa
popf
outsb
sub
sahf
ljmp
sbb
cld
push
lret
sbb
cmp
inc
lahf
ljmp
jl
fcmove
pop
rol
fdivs
addb
stc
mov
fsts
imul
push
movsb
js
mov
ud1
inc
lcall
mov
mov
adc
ljmp
mov
xor
inc
inc
dec
cmp
adc
inc
add
aas
out
clc
test
and
insb
and
xor
in
stos
adc
cli
icebp
das
push
addb
push
jmp
push
lret
in
js
push
incb
jl
sbb
out
push
icebp
mov
sti
xorb
clc
inc
mov
or
mov
fwait
aas
jns
mull
cwtl
jecxz
cmp
pop
fsubl
jns
cmp
lods
xchg
sub
jge
cltd
cmpb
push
xchg
icebp
fidivl
mov
lds
lret
in
sbb
dec
pop
loop
sbb
mov
mov
add
clc
xchg
jge
xor
push
nop
adc
inc
xchg
mov
loopne
push
sub
vsqrtps
divl
mov
jae
imul
push
xchg
inc
and
push
movsl
cmp
adc
xor
lock
das
dec
stos
ret
dec
cli
inc
pop
paddw
or
mov
test
inc
ljmp
mov
sub
dec
xlat
jb
push
dec
aad
rol
ja
cs
nop
mov
mov
cmp
dec
pop
sub
push
pop
pop
leave
sar
loope
push
loope
lret
insb
jp
outsb
bound
adc
cld
out
cmpsl
or
cli
xorb
or
nop
popf
cmp
jle
repz
xchg
mov
pop
in
movb
mov
mov
push
in
sbb
in
mov
fildll
rol
stc
gs
roll
nop
adc
popf
pop
push
stos
addl
or
xor
test
dec
loop
xchg
mov
jne
sub
jp
aad
pop
sar
add
arpl
mov
std
data16
sbb
push
ror
xor
dec
jp
pushf
call
push
imul
stc
call
pop
xor
and
shr
ret
xor
xor
ret
push
mov
sub
sub
movl
xor
mov
mov
sbb
mov
movl
sub
mov
sbb
movl
cmpl
mov
mov
mov
jmp
mov
jbe
pushl
call
subl
movzbl
and
mov
add
orl
sbb
sbb
sub
movl
xor
movl
cmpl
mov
mov
mov
jmp
mov
jne
push
call
adc
sub
xorl
dec
movl
movl
movl
mov
subl
mov
jmp
mov
dec
fdivs
adc
std
cs
rcrl
push
push
push
push
pop
in
fcmovnu
sub
loope
inc
jmp
push
testl
cmp
fnstenv
xchg
xor
pop
pop
dec
sub
sub
repnz
sarl
and
in
push
aas
cmc
and
imul
cli
fisubs
mov
mov
fsubs
sub
pop
push
jle
sbb
popf
je
push
scas
les
jl
hlt
push
xchg
pop
xor
aam
cld
sub
lods
loopne
rclb
dec
mov
iret
daa
aad
dec
or
dec
jae
pop
pop
mov
gs
dec
dec
mov
js
scas
stos
pop
das
pusha
sbb
psrlw
clc
mov
movsb
xchg
sbb
mov
dec
mov
mov
fbld
jnp
or
les
cmp
fcomi
cs
in
xchg
dec
roll
enter
push
fidivl
push
mov
pop
xor
inc
addr16
test
aam
sbb
aas
jnp
xchg
je
inc
in
dec
push
mov
jecxz
lahf
mov
dec
sbb
mov
dec
fstpl
lods
push
jle
push
leave
in
mov
mov
icebp
insb
decb
dec
inc
sbb
push
rcrl
adcb
nop
test
data16
incb
nop
jb
mov
stos
xchg
imul
pop
js
xor
mov
push
outsl
lret
test
push
jmp
inc
std
orl
mov
mov
add
insb
std
xchg
jle
jle
movl
popa
and
iret
mov
sbb
jp
rclb
or
add
cmpsl
xchg
cmpb
push
ljmp
sub
bound
xor
fwait
push
dec
mov
mov
xchg
push
mov
roll
xor
mov
xchg
adc
int
mov
mov
into
or
iret
xchg
xor
cmp
orl
inc
and
xor
shlb
fsts
gs
test
mov
cmp
inc
sahf
mov
scas
test
cmpsl
test
scas
les
jmp
pop
sub
xchg
jge
cld
icebp
mov
pop
test
xchg
decb
test
jne
shlb
rorl
lock
cmp
lods
mov
clc
pushf
int3
xlat
push
pop
jae
in
int3
xlat
into
add
inc
inc
ljmp
fwait
jg
pop
add
ret
sbb
push
add
mov
cmp
lds
jae
xchg
pop
insb
outsb
lock
sub
imull
add
addb
into
push
mov
sti
cmp
rcll
hlt
pusha
popa
xor
inc
add
and
push
out
push
mov
xchg
xor
xchg
push
xchg
test
hlt
gs
popf
sbb
and
repz
push
xorl
pop
mov
inc
pop
and
test
xchg
jl
test
push
nop
jae
lret
add
sti
imul
sub
sbb
cmp
sbb
jmp
push
xor
dec
dec
into
gs
dec
lcall
outsb
dec
rorb
outsl
xchg
lock
xchg
push
imul
gs
pop
repz
sar
mov
es
fcmovne
out
add
fwait
push
gs
aad
inc
popa
ret
loopne
cmc
sbb
xchg
add
repnz
into
inc
inc
loopne
arpl
xorl
push
rclb
xchg
mov
addl
lcall
and
xchg
jae
mov
push
mov
aad
imul
mov
int3
ret
adc
shlb
cmpl
pushw
ja
clc
inc
sbb
push
in
xchg
bnd
stos
sbb
pop
ljmp
jne
xor
sub
sbb
enter
jmp
add
addl
sub
mov
push
mov
sbb
cmpl
mov
mov
mov
jmp
notl
jge
push
call
adc
xor
xor
and
sbb
mov
mov
sub
add
xor
xor
or
sbb
mov
mov
jmp
test
sub
cmp
cmc
push
int
or
push
push
push
stos
ds
sub
adc
push
arpl
in
sub
adc
insl
xchg
push
lds
pop
or
fs
sub
ret
xor
mov
ss
jno
cld
xor
ja
cmp
inc
mov
push
addr16
push
roll
dec
dec
xor
and
ret
add
xlat
std
out
in
push
pop
jae
divl
push
pop
aaa
mov
lock
out
add
push
mov
xchg
jmp
xorb
mov
and
jge
or
or
jne
arpl
inc
cltd
push
pop
mov
jae
call
xchg
sub
dec
movsb
push
pextrw
xchg
pusha
adc
jmp
aas
dec
inc
sub
es
xchg
js
popf
xchg
fstl
popa
iret
add
mov
push
add
dec
ss
scas
sbbb
inc
mov
pop
push
fwait
loop
imul
and
shl
pop
mov
outsb
cmpsb
les
push
jp
add
sahf
pop
jnp
cmp
mov
cli
cmp
add
adc
int3
imul
or
popa
mov
mov
addr16
mov
mov
xchg
push
adcb
fidivrl
into
scas
mov
out
xchg
hlt
in
xchg
inc
call
jnp
mov
xor
sbb
das
jae
lock
xchg
hlt
cmp
nop
cmovo
out
xlat
and
out
stc
shl
fnstsw
add
dec
nop
sbb
push
outsb
add
cmpsl
pushf
dec
or
cmp
and
and
xchg
inc
or
jb
adc
inc
imul
je
jns
cmp
sbbb
jmp
jns
mulps
push
es
xor
cmp
pushf
mov
cltd
pop
and
bound
add
adcb
xor
mov
jb
jno
out
loopne
scas
jns
sarl
adc
add
jae
lahf
push
mov
jno
dec
inc
lods
iret
imul
mov
lock
adc
clc
fcmovnbe
xchg
dec
jl
aas
clc
aas
fcomps
cmp
pop
xchg
dec
cld
mov
pushf
loopne
stc
aam
jl
or
arpl
lahf
sbb
sbb
aad
xlat
int
or
ret
xor
into
dec
xor
mull
jge
mov
testb
xor
xchg
and
leave
lock
fldl
jp
test
popa
jbe
jge
jp
xchg
test
scas
lret
pusha
lahf
lcall
sub
jne
dec
dec
adc
mov
aaa
call
cli
push
mov
xor
jbe
mulb
stos
cmc
or
rcrb
iret
add
push
sbb
loop
inc
mov
push
jl
mov
xchg
jo
ds
cmpsb
mov
mov
sub
push
mov
push
xchg
inc
mov
or
cmpb
fnstsw
push
xor
aam
jmp
adc
or
sub
test
data16
cmp
cs
movsl
lret
pop
inc
adc
mov
sbb
dec
jecxz
mov
pop
and
adc
in
push
lret
pop
cld
jb
aam
test
push
jne
sbb
or
icebp
fmuls
je
xchg
ljmp
stos
and
ljmp
ficomps
mov
push
insl
dec
lock
push
cmp
fs
fisttpll
pop
mov
pmuludq
mov
enter
add
lcall
push
mov
mov
lcall
ja
rclb
subl
push
xorl
push
jmp
xor
inc
or
xor
and
fwait
ds
jge
or
push
push
push
mov
pop
stos
xor
adc
adc
jne
pop
push
aaa
fucomp
lods
outsl
loope
and
push
jmp
sub
lahf
pop
mov
movb
lahf
mov
mov
jmp
pop
mov
clc
dec
push
icebp
xchg
jge
cmc
mov
ja
or
pop
aas
inc
call
inc
scas
or
js
pop
inc
sbb
arpl
inc
sahf
sub
or
stos
orl
push
cld
data16
std
lea
xchg
addr16
ds
xchg
fnstsw
aad
sti
ret
and
and
xor
repz
outsl
xchg
mov
into
mov
xor
mov
fsubrs
mov
push
in
loop
jmp
or
shrb
loop
stos
iret
testl
in
andl
cltd
cmp
in
and
and
and
jecxz
xchg
xchg
xchg
test
cmpb
jne
inc
stos
cmpsl
sbb
lds
and
fiadds
dec
je
xchg
lahf
rcrl
pop
push
jo
dec
in
int
and
or
test
imul
dec
jbe
and
jl
add
sub
mov
mov
push
sub
pop
sub
jne
or
inc
pop
mov
lds
and
insb
icebp
add
pop
icebp
push
outsl
or
in
stos
xchg
movsb
sub
mov
ds
popf
push
xlat
cmc
stos
ljmp
mov
push
rcll
int3
insl
aas
rol
dec
adc
lock
mov
test
mov
out
add
push
lcall
and
inc
pop
push
stos
imul
xor
stc
loopne
or
add
jle
pop
out
xlat
xor
push
shlb
xchg
sub
jge
insb
data16
std
dec
sub
lahf
in
jns
loopne
adc
scas
push
add
mov
pop
addr16
je
movsl
xchg
mov
dec
xor
mov
mov
jb
pop
xchg
mov
pop
loop
pop
pop
outsb
sar
and
test
ror
icebp
mov
dec
push
sub
mov
mov
fdivl
or
test
jae
in
dec
popf
or
insb
xchg
scas
xchg
sbb
lahf
inc
ja
jns
adc
ljmp
faddl
sarb
decb
xor
hlt
adc
rorb
mov
push
fmull
inc
cmp
inc
pusha
call
inc
aas
sbb
fdivrs
or
movl
xchg
cmpsl
cli
int3
rolb
jl
fcmovnbe
adc
mov
adc
pop
xchg
jo
xor
ljmp
sbb
adc
mov
lods
and
cltd
xor
inc
or
xchg
out
jp
enter
cmp
xchg
or
mov
int3
adc
test
sti
push
test
notl
clc
sbbl
mov
push
lods
cmp
rol
rorl
xchg
sub
pop
inc
cli
cltd
xchg
bound
add
lahf
mov
lea
and
fidivrl
xchg
add
and
inc
test
cmp
sbb
out
xor
mov
push
xor
pop
mov
fwait
ret
add
mov
fwait
push
lods
sahf
lds
push
cmc
xor
inc
inc
in
icebp
je
outsb
pop
xchg
adc
es
scas
xchg
ret
rcl
cwtl
sbb
mov
in
cs
scas
mov
mov
xor
push
out
mov
je
push
cmp
mov
mov
lahf
inc
es
gs
test
les
out
jp
mov
add
adc
pop
inc
sarl
pop
pop
adc
mov
add
call
jmp
push
adcb
fs
and
adcb
push
push
push
push
add
xor
adc
add
xchg
mov
mov
inc
or
cs
jns
imul
lret
jge
std
pop
stos
sub
jecxz
fucom
addb
mov
cmc
outsl
jmp
push
out
fiaddl
xor
clc
dec
enter
addl
scas
pop
imul
ret
les
jbe
xor
mov
pop
xor
add
xchg
push
cmpb
lret
jae
sub
sbb
loope
stc
xchg
mov
das
mov
mov
addr16
jecxz
mov
lcall
popa
repnz
cmp
aaa
dec
ror
inc
cs
pop
cmp
add
lahf
xchg
andb
lea
push
stos
or
icebp
add
ret
mov
cmp
shll
adc
jmp
xchg
xchg
je
leave
mov
lock
xchg
es
jnp
leave
sahf
dec
insl
adc
dec
movsl
pushl
mov
in
dec
jno
sbb
push
jge
adc
lahf
outsl
and
ret
mov
mov
sbb
cs
xchg
in
inc
add
push
push
pop
pop
ja
jmp
push
scas
fimull
push
inc
shr
cmp
rolb
test
and
stos
loope
ror
cmpsb
mov
cmc
andb
fisttpl
imul
pop
or
call
negl
xchg
jp
imul
ljmp
test
and
mov
outsb
xor
lds
aaa
sub
xchg
fidivrs
mov
lcall
pop
lret
les
js
push
push
xor
xchg
int3
lods
and
mov
movsb
ja
mov
cltd
mov
cmp
inc
pusha
push
xor
pop
sub
scas
lret
in
stc
pop
cmpsb
mov
pop
sbb
xor
out
pop
fdivl
dec
sbb
fisttps
dec
push
setae
pop
out
and
xlat
push
loop
imul
jge
sbb
adc
dec
xlat
cmp
mov
negb
aad
dec
lods
aaa
int
sbb
jg
mov
jne
push
sub
or
inc
test
rcll
or
ljmp
insb
into
ja
and
mov
aad
inc
add
xor
cmp
mov
pop
pop
mov
push
and
inc
enter
or
mov
mov
add
pop
or
jae
shll
mov
and
clc
or
loopne
sub
pop
mov
mov
cwtl
jb
aaa
fsub
mov
or
popa
xchg
dec
outsb
lcall
sub
pushf
jmpw
and
lds
xchg
in
gs
ret
xor
and
in
lods
mov
push
rorl
shlb
jle
test
and
sub
out
sbb
add
dec
xchg
or
bound
sub
in
hlt
mov
jl
add
out
mov
pop
push
pop
push
lret
xchg
jno
sbb
xchg
fsubrs
sub
inc
jns,pn
cmc
ds
ds
jecxz
sub
add
jmp
into
es
push
popf
outsl
jae
cli
or
inc
nop
pop
sbbl
dec
bound
test
dec
xchg
jmp
add
jle
xchg
jl
cmpsb
insb
xor
cmp
paddb
fwait
jo
sahf
sub
add
add
sbb
inc
cltd
mov
xchg
rorb
add
sub
cmp
pop
dec
sbb
adc
cmp
sbb
pop
movsl
fstps
adc
xchg
sub
mov
xor
and
sbbl
xor
and
cmpl
mov
mov
jmp
movl
ja
pushl
pushl
call
sub
xor
adcl
and
adc
and
mov
and
cmpl
mov
mov
mov
jmp
mov
jle
push
call
movzwl
sbb
mov
andl
sub
sbb
sbb
mov
or
add
mov
movl
mov
mov
sub
and
movl
jmp
mov
or
and
pop
fsubl
or
aad
push
push
and
mov
aaa
sbb
push
pop
xchg
sub
ds
dec
ret
test
jo
movsl
or
jbe
jp
lea
mov
cmp
enter
pop
pop
sbb
mov
xchg
outsb
xchg
fmull
aam
and
pop
sbb
sbb
hlt
loopne
sub
xlat
in
cmp
fdivrl
jne
addr16
neg
adc
pusha
xor
mov
es
xchg
add
in
lods
pop
and
stos
sub
cmp
das
xchg
cs
daa
jle
inc
shrl
notl
jge
out
lock
cmp
cld
pop
out
mov
push
xor
xor
fsubrp
lock
mov
inc
jle
jb
in
and
lock
scas
mov
movsb
xor
jns
sbb
call
inc
or
lcall
pop
iret
negl
dec
fwait
sub
jl
xor
das
in
lret
cmc
inc
icebp
lret
and
scas
jo
jno
jne
sbb
mov
imul
or
mov
xchg
loopne
and
fcomps
repz
inc
popf
shll
push
or
fnstcw
jle
sub
add
js
int
flds
jo
xchg
loope
sbb
pushf
jge
out
dec
mov
push
mov
dec
xor
fisubrs
add
bndldx
mov
jmp
nop
xchg
push
jmp
jb
sub
ss
out
lea
mov
lods
mov
test
and
cmp
add
mov
mov
leave
mov
pop
jmp
jge
mov
sub
dec
pop
in
fwait
js
rcr
je
cld
xor
ss
pushl
add
into
lret
stos
adc
aaa
mov
pop
nop
adc
push
pop
dec
cmp
and
dec
cmpsl
xchg
loopne
and
mov
addr16
mov
inc
fcomps
adc
movl
addl
mov
movl
mov
xor
mov
and
mov
add
push
adc
sbbl
push
negl
and
orl
and
subl
push
push
orl
call
movl
mov
mov
mov
cmp
ja
movl
jb
cmp
movl
jae
adc
movl
movl
sub
movl
cmpl
mov
not
jmp
not
jbe
pushl
push
pushl
push
push
push
push
call
sub
sub
sbbl
xorl
addl
mov
mov
sub
add
movl
xor
movl
movl
mov
cmpl
movl
mov
jmp
mov
mov
jl
push
call
sub
sbb
or
andl
sbbl
adc
mov
mov
mov
add
mov
adc
mov
or
or
add
adc
xor
xor
add
mov
adc
mov
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
and
mov
and
mov
push
push
push
push
call
push
push
push
push
call
mov
mov
add
mov
adc
mov
and
mov
and
mov
cmp
jne
cmp
je
movl
movl
mov
mov
push
push
push
push
call
xor
xor
or
or
mov
mov
mov
cmp
jne
mov
mov
mov
mov
shrd
shl
mov
mov
xor
shr
mov
xor
or
mov
mov
mov
shrd
shr
mov
mov
xor
xor
or
mov
movb
movb
movb
movb
movb
movb
mov
movzbl
mov
movzbl
shl
cltd
idiv
mov
movzbl
movzbl
or
mov
movzbl
cltd
idiv
mov
movzbl
movzbl
cltd
idiv
movzbl
and
mov
movb
movb
mov
mov
add
add
mov
imul
mov
cmp
ja
mov
mov
shrd
xor
mov
shr
mov
xor
shl
or
mov
pop
leave
ret
push
mov
sub
push
push
push
movl
movl
movl
movl
movl
movl
movl
movl
xor
inc
mov
movl
mov
mov
sub
add
add
imul
add
xor
movl
movl
movl
movl
mov
or
add
mov
and
mov
sub
mov
mov
mov
add
or
sub
xor
sub
mov
mov
mov
mov
mov
and
xor
xor
div
lea
mov
add
mov
and
mov
imul
mov
sub
cmp
jbe
push
pop
mov
mov
movl
movl
movl
mov
movl
movl
xor
movl
mov
mov
sub
div
mov
xor
mov
div
mov
xor
div
xor
mov
mov
imul
mov
add
div
mov
mov
sub
sub
xor
div
mov
add
cmp
jae
movl
movl
movl
movl
xor
movl
movl
mov
push
pop
div
mov
mov
mov
sub
mov
mov
imul
mov
xor
sub
add
and
mov
sub
mov
sub
mov
sub
mov
mov
mov
mov
xor
add
xor
and
lea
mov
mov
add
div
mov
mov
sub
xor
div
add
cmp
jb
xor
inc
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
add
and
xor
mov
sub
movl
movl
mov
movl
movl
mov
mov
imul
xor
or
xor
mov
sub
mov
mov
mov
or
sub
xor
div
mov
mov
sub
mov
mov
mov
mov
mov
imul
mov
imul
or
mov
or
xor
lea
mov
and
add
xor
add
cmp
jne
pop
pop
pop
leave
ret
push
mov
sub
push
push
movl
movl
mov
mov
add
or
mov
lea
mov
movl
movl
mov
mov
and
xor
mov
imul
xor
lea
mov
movl
movl
mov
xor
push
pop
div
mov
xor
push
add
and
mov
sub
mov
movl
movl
movl
mov
mov
lea
mov
div
mov
lea
mov
movl
movl
movl
mov
mov
xor
sub
mov
sub
xor
mov
movl
pop
mov
movl
movl
mov
mov
mov
xor
xor
div
mov
and
sub
mov
movl
movl
movl
movl
movl
movl
mov
add
mov
xor
mov
or
mov
or
mov
and
mov
sub
mov
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
add
adc
or
mov
or
or
mov
mov
or
mov
sub
mov
sbb
mov
or
or
add
mov
adc
mov
movl
movl
movl
movl
movl
movl
movl
xor
inc
mov
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
movl
mov
movl
movl
mov
or
add
mov
or
mov
sub
mov
sub
imul
add
mov
push
mov
lea
mov
xor
div
mov
lea
push
mov
mov
push
push
push
push
call
mov
mov
push
push
or
or
push
push
call
mov
mov
xor
mov
mov
mov
and
add
lea
xor
push
lea
call
mov
mov
mov
sub
xor
imul
add
xor
xor
mov
div
cmp
jne
mov
xor
mov
div
mov
mov
xor
sub
mov
xor
sub
or
lea
push
mov
push
pop
div
mov
xor
div
mov
mov
xor
xor
div
imul
sub
push
mov
add
push
mov
sub
mov
pushl
call
mov
mov
lea
mov
incl
mov
mov
xor
shld
shl
mov
mov
xor
xor
cmp
jne
cmp
jne
mov
mov
jmp
lea
mov
mov
mov
mov
mov
sub
mov
mov
mov
sub
mov
movl
movl
mov
mov
mov
mov
pushl
pushl
pushl
pushl
pushl
push
push
pushl
mov
call
mov
mov
pushl
call
mov
push
add
push
push
call
mov
jmp
mov
mov
pop
pop
leave
ret
push
mov
sub
push
push
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
push
push
push
push
call
mov
mov
add
adc
and
push
and
or
push
or
xor
xor
push
push
call
mov
movl
movl
movl
movl
xor
movl
push
inc
mov
mov
mov
push
push
push
call
mov
mov
or
or
push
add
push
adc
push
push
call
mov
lea
xor
mov
div
mov
sub
mov
movl
mov
movl
mov
mov
sub
mov
xor
div
mov
xor
or
or
mov
mov
movl
movl
movl
mov
add
mov
and
lea
mov
mov
mov
movl
movl
movl
mov
mov
sub
add
xor
add
mov
div
mov
xor
pop
pop
or
mov
movl
movl
movl
mov
mov
and
sub
or
mov
imul
mov
div
leave
ret
push
mov
sub
push
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
push
movl
mov
mov
push
push
push
call
mov
mov
xor
mov
mov
mov
xor
mov
xor
or
mov
mov
mov
xor
or
add
cltd
adc
cmp
jne
cmp
je
mov
mov
mov
mov
add
adc
or
mov
or
mov
push
push
push
push
call
mov
mov
and
mov
mov
mov
and
xor
xor
xor
cmp
jne
cmp
jne
mov
mov
add
or
mov
or
xor
lea
xor
mov
and
add
mov
xor
xor
div
mov
mov
xor
imul
mov
push
push
xor
mov
lea
mov
mov
lea
mov
mov
or
xor
div
mov
add
xor
add
mov
add
mov
mov
mov
mov
sub
mov
sbb
mov
xor
mov
xor
mov
add
adc
add
adc
push
push
call
mov
sub
push
pop
sbb
mov
xor
cmp
jne
cmp
jne
mov
mov
add
shr
or
mov
xor
xor
add
mov
pop
leave
ret
push
mov
sub
push
push
push
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
adc
mov
push
push
or
or
push
push
call
mov
mov
and
or
mov
mov
and
or
xor
xor
shld
shl
shr
xor
or
or
mov
xor
mov
mov
xor
mov
mov
mov
mov
mov
push
push
push
push
call
add
adc
push
push
push
push
call
mov
mov
mov
xor
xor
add
mov
adc
mov
mov
mov
mov
mov
sub
mov
mov
sbb
mov
sub
mov
sbb
add
mov
adc
push
xor
mov
pop
sub
mov
sub
xor
mov
mov
add
mov
shrd
xor
shl
shr
or
xor
or
mov
push
mov
mov
mov
push
push
push
call
mov
mov
mov
or
mov
or
mov
add
mov
adc
mov
add
mov
adc
add
pop
adc
pop
mov
mov
pop
leave
ret
push
mov
sub
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
and
add
mov
and
mov
sub
and
mov
mov
imul
add
add
xor
cmp
jne
mov
mov
mov
sub
add
mov
or
mov
imul
sub
add
mov
or
mov
mov
add
imul
add
mov
add
mov
mov
mov
and
mov
and
mov
imul
mov
or
mov
imul
mov
sub
cmp
je
mov
jmp
mov
sub
xor
add
jmp
movl
movl
mov
mov
imul
add
and
add
or
sub
leave
ret
push
mov
and
sub
push
push
lea
mov
mov
mov
mov
sub
sbb
mov
orl
orl
lea
push
lea
push
call
mov
mov
pushl
mov
pushl
mov
pushl
pushl
pushl
pushl
pushl
call
pop
pop
mov
pop
ret
push
mov
sub
push
push
push
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
xor
mov
div
mov
mov
mov
mov
imul
mov
imul
xor
or
mov
mov
xor
mov
and
sub
xor
xor
add
div
mov
jmp
movl
mov
movl
movl
mov
mov
or
xor
mov
sub
xor
mov
sub
sub
mov
mov
mov
mov
mov
mov
mov
mov
imul
imul
sub
imul
xor
add
mov
mov
xor
mov
and
sub
xor
xor
mov
div
mov
sub
mov
add
xor
add
mov
xor
sub
cmp
jbe
pop
pop
pop
leave
ret
push
mov
sub
or
push
sub
push
push
movzbl
and
mov
mov
shrd
cmpl
mov
mov
jmp
movzbl
jbe
push
pushl
call
and
mov
add
sub
subl
adcl
xor
or
mov
sub
add
shr
mov
mov
inc
xor
cmpl
mov
movl
mov
movl
jmp
mov
je
pushl
push
push
pushl
call
and
sub
mov
mov
sub
sub
sbb
not
mov
xor
cmpl
mov
movl
movl
mov
jmp
movl
movl
ja
push
push
call
sbb
mov
adc
xor
or
mov
adc
movl
and
sub
adc
movzbl
adc
mov
xor
or
sub
or
or
movl
mov
mov
or
shl
cmpl
mov
mov
movl
jmp
mov
mov
jae
pushl
pushl
call
mov
mov
sub
or
mov
sbb
mov
orl
adcl
mov
mov
sub
or
mov
xor
shrd
adc
xor
adc
shr
mov
inc
mov
xor
xor
or
sub
mov
mov
add
mov
xorl
mov
mov
sub
mov
mov
xor
xor
sub
and
mov
cmpl
mov
movl
jmp
mov
jl
push
call
decl
or
adcl
or
neg
sbb
mov
or
mov
orl
shl
subl
xor
adc
shld
cmpl
movzbl
movl
mov
movzbl
jmp
movl
movl
je
push
push
push
call
xor
add
mov
sub
xor
add
inc
movzbl
or
mov
movl
xor
add
and
mov
mov
shl
and
mov
or
xor
or
mov
xorl
xor
xor
movl
inc
movl
movl
movl
movl
movl
cmp
movl
jne
movl
cmp
movl
je
xor
mov
mov
and
xor
shld
cmpl
not
movl
mov
jmp
movl
jl
pushl
call
mov
xor
add
andl
sub
xorl
sbb
sbbl
shl
xor
mov
cmpl
movl
mov
mov
mov
jmp
mov
jne
push
pushl
push
call
subl
incl
subl
movzbl
or
mov
sub
adcl
andl
mov
xor
movl
cmp
movl
jne
movl
cmp
je
cmpl
movl
movl
jmp
mov
movl
jg
push
pushl
push
push
call
mov
sbb
xorl
dec
sbb
mov
xor
xor
sub
add
mov
adcl
mov
neg
xor
shl
sbb
mov
xor
shr
orl
or
cmpl
movzwl
not
jmp
movl
je
push
call
sub
sub
mov
or
add
xor
adc
xor
xor
or
and
sbb
mov
xor
mov
mov
adc
mov
mov
xor
xor
sbb
mov
cmpl
movl
movzwl
jmp
movl
mov
jg
pushl
push
push
call
and
sub
adc
xorl
dec
addl
mov
and
mov
or
mov
cmpl
movl
mov
jmp
movl
jg
pushl
call
or
add
xor
dec
orl
mov
push
pop
sub
mov
add
mov
lea
mov
mov
mov
xor
xor
shr
shl
or
mov
movl
mov
mov
xor
xor
shr
shl
or
push
lea
push
lea
push
call
mov
mov
xor
xor
shr
shl
or
push
lea
push
mov
mov
shrd
shr
mov
mov
xor
xor
or
lea
push
shl
call
mov
mov
xor
xor
shr
shl
or
push
lea
push
mov
mov
shrd
shr
mov
mov
xor
xor
or
lea
push
shl
call
mov
mov
xor
xor
shl
shr
or
push
lea
push
mov
mov
shrd
shr
mov
mov
xor
xor
or
shl
mov
mov
shrd
shr
mov
mov
xor
xor
or
add
lea
push
shl
call
mov
mov
xor
shl
xor
shr
or
push
lea
push
mov
mov
shrd
shr
mov
mov
xor
shl
mov
xor
or
mov
shrd
shr
mov
mov
xor
xor
or
shl
add
mov
mov
shrd
shr
mov
mov
xor
xor
or
add
lea
push
shl
call
mov
mov
xor
shr
inc
xor
shl
or
mov
lea
push
mov
mov
shrd
shr
mov
mov
xor
xor
or
push
mov
mov
push
pushl
shl
call
lea
push
mov
mov
shrd
shr
mov
mov
xor
xor
or
push
mov
push
pushl
shl
call
mov
mov
mov
mov
mov
mov
rol
mov
xor
cmp
je
movl
mov
xor
mov
test
je
mov
mov
movzbl
sub
mov
rorb
mov
mov
inc
cmp
jb
decl
jne
mov
mov
shrd
shr
mov
mov
xor
xor
or
push
add
push
lea
push
shl
call
mov
mov
shrd
shr
mov
mov
xor
xor
or
add
push
push
mov
shl
mov
shrd
shr
mov
mov
xor
xor
or
add
push
shl
call
push
lea
push
mov
mov
shrd
shr
mov
mov
xor
xor
or
add
push
shl
call
mov
mov
shrd
shr
mov
mov
pop
xor
xor
pop
shl
or
pop
leave
ret
mov
mov
xorl
or
not
mov
movl
jne
cmpl
notl
movl
movl
jmp
mov
jge
push
pushl
pushl
pushl
pushl
push
call
sbbl
xorl
orl
orl
orl
sbb
mov
mul
ret
push
mul
mov
mov
mull
add
mov
mul
add
pop
ret
push
mov
sub
push
push
push
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
imul
add
xor
add
mov
mov
sub
imul
add
xor
div
mov
mov
jmp
movl
movl
movl
movl
mov
mov
or
mov
imul
add
xor
mov
div
mov
mov
xor
sub
mov
mov
mov
xor
sub
mov
sub
mov
add
mov
mov
sub
and
add
xor
mov
div
xor
add
mov
mov
sub
imul
add
div
mov
xor
mov
sub
mov
and
or
sub
xor
mov
sub
cmp
jbe
pop
pop
pop
leave
ret
push
mov
and
sub
push
push
push
push
pushl
pushl
call
test
jle
xor
jmp
movl
or
movl
adc
movl
movl
cmpl
mov
not
jmp
mov
jb
push
push
push
pushl
pushl
push
pushl
call
not
add
sbbl
or
add
sbbl
xor
xor
or
add
movl
cmpl
movl
mov
jmp
notl
movl
jbe
push
call
add
movzbl
and
and
xor
xor
or
add
xor
or
sub
movl
or
movl
xor
xor
mov
sub
and
push
cmpl
movl
mov
mov
jmp
mov
movl
ja
push
pushl
push
call
subl
xor
add
xor
mov
sub
mov
adc
orl
movl
mov
or
mov
push
subl
push
subl
push
call
sbbl
mov
mov
sub
mov
sbbl
push
sbbl
push
addl
push
push
sbbl
call
mov
sub
mov
subl
add
movl
mov
adc
mov
subl
xor
decl
mov
xor
mov
or
movl
movl
movl
xor
movl
cmpl
movl
mov
not
jmp
movl
mov
jle
push
push
pushl
push
pushl
push
call
adcl
or
sub
addl
or
movl
cmpl
mov
mov
jmp
not
je
pushl
push
pushl
push
call
sub
and
and
sub
adc
negl
push
not
movl
movzwl
and
mov
mov
or
mov
adcl
push
push
negl
push
notl
call
mov
movzbl
add
mov
mov
subl
push
orl
push
adcl
push
addl
push
movl
call
and
mov
cmpl
mov
mov
jmp
mov
movl
ja
push
pushl
pushl
push
push
call
orl
movzwl
add
mov
movzbl
add
sub
movzbl
sub
adc
mov
xor
add
mov
orl
xor
xor
mov
sbbl
xor
adcl
xor
cmp
jne
cmp
movl
jne
sbb
movl
andl
movl
dec
movl
mov
inc
imul
mov
mov
and
xor
sbb
mov
div
pushl
xor
adcl
and
xor
cmpl
mov
movl
mov
jmp
movl
movl
jbe
pushl
push
push
push
push
call
andl
xor
or
sbb
mov
sbb
subl
pushl
cmpl
mov
movl
movl
jmp
not
mov
jle
pushl
push
call
and
add
sbb
sbb
mov
push
pop
div
sub
mov
notl
sub
adcl
add
sbbl
imul
and
xor
pushl
addl
pushl
pushl
orl
pushl
pushl
xorl
call
not
movl
cmpl
mov
mov
not
jmp
notl
movl
jb
push
pushl
push
pushl
pushl
call
adcl
sbb
orl
sbb
add
or
movl
mov
sub
mov
xorl
sub
movzbl
sbb
mov
mov
xor
xorl
xor
orl
div
imul
incl
xor
sbbl
pushl
orl
pushl
sbbl
call
and
movl
cmpl
mov
movl
notl
jmp
movl
movl
jb
pushl
push
pushl
pushl
call
and
or
or
and
adcl
xor
xor
xor
xor
sub
add
sub
movzwl
and
movl
cmpl
movzbl
not
movl
jmp
mov
not
jg
push
push
push
call
and
dec
mov
or
mov
mov
or
mov
add
movzwl
and
mov
movl
cmpl
movl
mov
mov
mov
jmp
mov
mov
jb
push
pushl
pushl
push
call
movzbl
and
and
mov
mov
sub
sub
adc
xor
xor
adc
xor
movl
add
mov
adc
mov
mov
adc
mov
negl
push
subl
push
xor
xor
push
push
call
addl
add
mov
adc
mov
adc
movl
movl
cmpl
mov
mov
jmp
mov
jle
push
pushl
pushl
push
push
push
pushl
push
pushl
call
and
xor
xor
xor
or
mov
xor
decl
mov
mov
sub
add
movl
adc
movl
movl
mov
xor
mov
xorl
mov
sbbl
mov
addl
movl
andl
mov
call
lea
xor
or
sbb
mov
mov
mov
sub
and
lea
cmpl
movl
mov
jmp
mov
mov
jge
pushl
call
andl
sbb
mov
adc
mov
incl
adc
and
adcl
xor
mov
mov
and
mov
mov
sub
mov
cmpl
movl
mov
jmp
movl
jae
push
push
call
inc
sbbl
xor
sbb
movl
xor
xor
shl
movl
shr
xor
xor
or
or
mov
mov
sbb
mov
cmpl
movl
movl
jmp
movl
mov
jbe
pushl
pushl
push
pushl
call
sbb
mov
xor
add
mov
mov
adc
subl
sbb
negl
lea
addl
mov
or
mov
mov
mov
sub
shrd
shr
mov
adc
mov
adcl
xor
xor
orl
or
mov
orl
push
pushl
orl
lea
addl
push
shl
call
lea
xorl
push
andl
mov
sbbl
mov
lea
push
movl
mov
lea
sbbl
mov
subl
mov
addl
mov
push
notl
call
orl
push
adcl
push
orl
pushl
adcl
call
mov
adc
mov
add
mov
cmpl
movl
notl
jmp
mov
jle
pushl
call
neg
sbb
notl
not
adcl
mov
shr
shl
or
mov
xor
mov
lea
mov
lea
mov
mov
sub
lea
xor
movl
movl
movl
movl
mov
mov
mov
mov
add
adc
xor
xor
and
mov
and
mov
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
push
push
or
or
push
push
call
mov
mov
sub
mov
sbb
mov
cmp
jne
cmp
je
movl
movl
movl
movl
mov
mov
mov
mov
add
adc
xor
xor
and
mov
and
mov
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
push
push
xor
xor
push
push
call
mov
mov
push
push
push
push
call
mov
mov
push
push
push
push
call
mov
mov
add
mov
adc
mov
cmp
jne
cmp
je
mov
mov
mov
xor
shld
shl
xor
xor
cmp
jne
cmp
je
mov
cmp
je
mov
mov
mov
mov
xor
xor
shrd
mov
shr
xor
mov
mov
or
mov
shl
xor
or
mov
mov
cltd
cmp
jne
cmp
jne
movl
movl
mov
mov
mov
mov
xor
shld
shl
xor
xor
cmp
jne
cmp
jne
movl
mov
mov
shrd
shr
mov
mov
shl
mov
xor
xor
or
mov
mov
cmp
jne
mov
mov
mov
mov
mov
mov
movzwl
mov
and
mov
or
mov
add
or
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
or
mov
or
mov
sub
mov
sub
mov
cmp
jbe
mov
mov
mov
mov
movzwl
mov
or
mov
sub
mov
or
imul
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
sub
mov
xor
mov
imul
mov
and
mov
and
mov
cmp
ja
mov
mov
shrd
shr
mov
mov
xor
xor
or
push
push
push
lea
push
lea
push
shl
call
pushl
pushl
pushl
pushl
call
mov
mov
shrd
shr
mov
mov
shl
xor
xor
or
mov
mov
mov
mov
shrd
shr
mov
mov
shl
xor
xor
or
mov
mov
mov
mov
mov
cmp
jne
mov
mov
mov
cmp
jne
movb
movb
movb
movb
mov
mov
or
sub
mov
sub
movzbl
movzbl
cltd
idiv
movzbl
or
mov
movb
movb
movb
movb
movb
mov
mov
or
and
mov
imul
mov
movzbl
movzbl
and
mov
movzbl
cltd
idiv
mov
cmp
je
lea
push
lea
call
cmp
jne
cmp
jne
jmp
mov
mov
mov
mov
add
adc
mov
mov
push
push
lea
push
call
mov
push
pushl
lea
push
call
mov
mov
mov
mov
mov
mov
mov
lea
mov
add
movl
movl
mov
and
add
and
sub
and
mov
movl
mov
mov
or
add
cmp
je
mov
mov
mov
xor
shld
shl
xor
xor
cmp
jne
cmp
je
mov
mov
mov
mov
xor
xor
shr
shl
or
xor
shld
shl
xor
xor
cmp
jne
cmp
je
mov
cltd
mov
mov
cltd
shld
shr
xor
shl
or
or
mov
mov
xor
xor
mov
cmp
jne
cmp
je
pushl
pushl
mov
mov
pushl
mov
call
mov
mov
mov
mov
push
add
push
lea
push
call
mov
mov
pop
pop
pop
mov
pop
ret
push
mov
sub
cmpl
movl
movl
movzbl
jmp
mov
ja
push
push
pushl
call
movzwl
sub
addl
xorl
mov
or
mov
sbb
sbbl
movl
sbb
push
and
push
movzwl
and
push
xor
movl
movl
movl
or
mov
cmpl
movl
movl
mov
movl
jmp
movzbl
mov
jae
pushl
push
pushl
push
pushl
push
pushl
push
push
pushl
pushl
call
movl
adc
adcl
adcl
cmpl
movl
movl
movl
movl
jmp
mov
jne
pushl
call
xorl
xorl
xorl
addl
subl
adcl
addl
xor
neg
mov
subl
xor
div
cmpl
mov
movl
mov
movl
jmp
movl
jb
push
call
sbbl
sbb
sub
and
or
add
adc
imul
cmpl
mov
movzwl
mov
jmp
mov
ja
push
pushl
pushl
call
movl
notl
sub
sub
adc
sub
mov
xor
sbb
and
mov
andl
xor
orl
div
addl
sub
mov
xor
mov
cmpl
mov
not
movzwl
jmp
not
jae
pushl
call
add
and
addl
and
negl
movl
or
movl
cmpl
movl
mov
mov
jmp
movl
mov
ja
push
call
andl
xor
add
add
mov
mov
xor
dec
subl
mov
sub
movl
movl
mov
adc
add
neg
xor
xor
xor
dec
imul
sub
mov
and
or
sub
andl
mov
movl
cmpl
movl
mov
movzbl
jmp
mov
jae
push
push
push
pushl
push
call
add
or
xorl
adc
sbb
not
movl
adcl
movl
cmpl
movl
mov
jmp
movl
mov
jle
push
call
or
adc
sub
dec
incl
adc
sub
movl
movzwl
sbb
mov
mov
imul
mov
and
imul
sbb
imul
mov
incl
and
sub
or
cmpl
mov
mov
mov
mov
jmp
movl
mov
ja
push
push
push
push
call
mov
adc
mov
not
xor
mov
mov
add
mov
and
movzwl
add
movzwl
xor
mov
mov
xor
addl
mov
mov
addl
lea
sub
mov
movl
movl
andl
movl
mov
xor
movzwl
or
mov
or
xorl
add
mov
addl
or
and
add
cmpl
movzwl
mov
mov
jmp
mov
movl
jb
pushl
pushl
push
push
push
push
pushl
push
call
mov
add
addl
add
sbb
add
sbbl
xor
mov
movl
sbb
movl
movl
mov
cmpl
movl
mov
movzwl
jmp
movl
je
pushl
call
add
and
add
xor
sub
add
mov
xorl
sub
cmpl
mov
mov
mov
jmp
movl
movl
jb
push
call
add
movzwl
add
and
sub
xor
xor
add
mov
movzwl
or
mov
xorl
lea
not
or
xor
sub
andl
mov
addl
movl
movl
mov
and
add
imul
mov
andl
imul
xor
and
mov
div
adcl
sub
cmpl
movl
mov
jmp
movl
notl
jbe
push
call
not
addl
andl
xor
adcl
mov
cmpl
mov
mov
movzwl
jmp
mov
mov
jbe
push
push
pushl
push
call
add
adc
movzbl
and
sub
mov
add
mov
movl
movl
movl
xor
add
add
mov
or
mov
xorl
xor
div
sub
imul
cmpl
movl
movl
movl
jmp
movl
jb
push
push
pushl
push
call
and
mov
xor
sbbl
notl
adc
cmpl
movl
mov
movl
jmp
movl
movl
je
call
or
adcl
negl
sub
or
adc
xorl
adc
add
dec
mov
sbbl
xor
movzwl
sub
mov
xor
mov
div
and
xor
mov
movl
movl
and
movl
xor
movl
mov
mov
orl
sub
dec
shr
sub
cmpl
movl
movl
jmp
mov
notl
jl
push
push
push
call
add
sub
and
adc
adc
add
addl
sub
mov
imul
xor
mov
xorl
and
mov
andl
sub
orl
mov
mov
sbb
movl
xor
movl
xor
mov
add
or
mov
subl
or
and
sub
mov
mov
adc
mov
movl
movl
not
movl
or
movl
movl
movl
movl
notl
mov
cmpl
mov
movl
movzwl
jmp
movl
jl
pushl
push
push
push
pushl
call
and
subl
subl
sub
inc
cmpl
mov
movl
mov
jmp
movzwl
jg
push
call
mov
sub
not
sub
sbb
mov
or
add
cmpl
mov
movl
movl
mov
jmp
movl
jge
call
xor
mov
or
mov
and
subl
add
and
adc
sub
andl
mov
subl
sub
mov
andl
imul
imul
neg
mov
andl
or
mov
lea
xorl
push
subl
call
neg
mov
mov
sub
imul
and
add
and
andl
sub
or
xor
mov
orl
div
xor
cmpl
mov
movl
mov
jmp
movl
jg
pushl
call
sub
sub
or
add
mov
mov
sub
imul
xor
cmpl
movl
mov
jmp
movl
jb
pushl
push
pushl
pushl
pushl
call
xor
adc
sub
xor
and
mov
mov
sub
xor
cmpl
mov
movzwl
mov
jmp
movl
movl
jb
pushl
pushl
call
adc
andl
or
xor
incl
and
add
mov
movl
inc
movl
xor
or
xor
movl
sbb
movl
movl
cmpl
not
movl
movl
mov
jmp
mov
mov
je
push
push
call
xorl
adc
adc
and
sbbl
add
movl
mov
mov
sub
movl
or
movl
movl
adcl
movl
xor
movl
movl
or
mov
adc
mov
mov
add
mov
xor
and
neg
sub
sub
or
imul
cmpl
mov
movl
mov
jmp
mov
mov
jb
pushl
call
sbb
xor
add
mov
sub
xor
and
decl
mov
lea
sub
mov
mov
andl
mov
mov
xor
cmpl
not
movl
jmp
movl
notl
jae
pushl
push
push
push
push
call
sbb
orl
sbb
neg
xor
add
sub
orl
add
adc
mov
lea
and
mov
cmpl
movl
mov
mov
jmp
mov
ja
push
push
push
call
adc
movzbl
xor
or
or
movzwl
sub
sub
add
mov
cmpl
movl
movl
movl
mov
jmp
not
mov
jae
push
push
push
push
pushl
pushl
push
call
adc
xor
orl
sub
xorl
movl
movl
movl
sbb
movl
or
mov
mov
mov
sbbl
xor
subl
xor
mov
call
cmpl
movl
mov
not
mov
jmp
movl
movl
jle
pushl
push
pushl
call
add
movzbl
add
and
inc
neg
xor
xor
mov
mov
and
mov
mov
xor
xor
mov
adcl
call
or
or
cmpl
mov
mov
not
mov
jmp
not
mov
jne
push
call
xorl
mov
mov
sub
adcl
sub
sbb
sbb
mov
neg
mov
subl
xor
sbbl
xor
mov
adcl
call
mov
mov
mov
mov
xor
xor
mov
mov
mov
mov
mov
call
mov
or
mov
or
push
push
push
push
call
mov
cmp
jne
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
mov
mov
call
or
mov
or
push
push
push
push
call
mov
jmp
jmp
lea
mov
mov
movl
mov
xor
shr
mov
xor
shl
or
mov
mov
mov
mov
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
mov
mov
mov
mov
call
mov
or
mov
or
push
push
push
push
call
mov
cmp
je
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
imul
add
mov
mov
mov
jmp
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
mov
mov
call
or
mov
or
push
push
push
push
call
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
mov
xor
div
mov
and
add
mov
lea
xor
add
mov
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
xor
div
add
mov
and
xor
add
mov
mov
sub
mov
or
mov
and
mov
xor
mov
mov
sub
mov
imul
xor
xor
mov
mov
add
add
mov
movl
movl
movl
movl
movl
movl
mov
xor
mov
imul
mov
lea
mov
and
and
xor
push
pop
div
imul
mov
and
mov
or
add
imul
mov
xor
xor
mov
mov
add
add
mov
movl
movl
movl
movl
movl
movl
mov
xor
push
pop
div
mov
or
mov
xor
div
imul
mov
lea
mov
and
and
sub
xor
mov
xor
mov
and
and
or
mov
mov
add
lea
mov
andl
jmp
mov
inc
mov
mov
mov
cmp
je
mov
mov
mov
add
mov
mov
mov
mov
mov
movl
movl
movl
movl
lea
mov
mov
movzwl
xor
movzwl
sar
mov
movzwl
xor
movzwl
shl
or
movzwl
mov
mov
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
movzbl
push
lea
push
call
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
add
mov
mov
cmp
je
mov
mov
movzwl
xor
movzwl
sar
mov
mov
movzwl
xor
movzwl
shl
or
movzwl
mov
mov
mov
movzwl
xor
movzwl
sar
mov
mov
movzwl
xor
movzwl
shl
or
mov
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
mov
or
je
lea
mov
mov
xor
mov
call
mov
mov
mov
xor
mov
call
or
or
xor
xor
mov
mov
mov
mov
movsbl
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
movsbl
cmp
je
mov
movsbl
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
movsbl
cmp
je
jmp
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
movsbl
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
movsbl
cmp
jne
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
add
mov
jmp
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
mov
cmpl
je
mov
mov
movzwl
mov
mov
mov
jmp
jmp
cmpl
jne
xor
jmp
mov
add
mov
movl
cmpl
je
cmpl
je
mov
shl
mov
movl
sub
mov
movl
mov
cmp
je
mov
mov
mov
mov
mov
mov
mov
inc
mov
jmp
movl
push
jmp
mov
mov
ret
sub
push
mov
mov
add
push
inc
mov
or
movl
jne
mov
xorl
mov
mov
add
mov
xor
adcl
div
mov
mov
movl
div
mov
jmp
mov
movzwl
or
mov
mov
adc
mov
mov
sbbl
shr
movl
rcr
orl
shr
rcr
or
jne
div
mov
mull
mov
mov
mul
add
jb
cmp
ja
jb
cmp
jbe
dec
xor
mov
pop
pop
ret
subl
movl
cmpl
je
and
add
mov
mov
mov
mov
pop
pop
pop
leave
ret
movl
cmp
jae
cmp
movl
jae
shld
shl
ret
andl
mov
subl
xor
and
movl
shl
ret
xor
xor
ret
