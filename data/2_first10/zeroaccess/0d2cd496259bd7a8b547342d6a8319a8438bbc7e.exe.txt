push
mov
sub
and
mov
xor
mov
mov
sub
inc
push
mov
movl
mov
sbb
sbbl
mov
and
orl
orl
mov
or
mov
neg
mov
cmpl
mov
movl
mov
movl
jmp
mov
mov
jle
pushl
call
add
mov
or
or
or
sbb
add
cmpl
movzbl
mov
movzwl
jmp
movl
movl
jne
push
push
push
push
call
adcl
sbb
inc
adc
and
mov
addl
sub
mov
mov
sbb
mov
orl
orl
lea
xorl
mov
add
mov
and
mov
cmpl
not
movl
jmp
movl
movl
jle
push
call
andl
addl
add
sub
or
xor
xor
mov
sub
or
mov
add
mov
sbb
mov
mov
mov
shrd
cmpl
mov
mov
mov
mov
jmp
movl
movl
jge
pushl
push
pushl
push
call
addl
subl
movl
sub
dec
shr
mov
mov
xor
xor
subl
or
movzwl
or
mov
mov
movl
cmpl
movl
movl
movl
jmp
movl
mov
jbe
pushl
pushl
push
push
push
call
addl
adcl
movl
movl
cmpl
mov
movl
jmp
mov
jl
pushl
push
push
call
sbbl
xorl
notl
xorl
decl
cmpl
movl
movl
jmp
movzwl
jb
push
pushl
pushl
push
call
add
subl
andl
decl
andl
cmpl
movl
movl
jmp
movl
movl
jl
pushl
pushl
pushl
push
push
pushl
call
and
movl
subl
addl
orl
cmpl
movl
movl
movl
jmp
mov
jne
pushl
push
push
push
call
sbbl
xorl
adcl
addl
andl
sbbl
sbbl
sbb
jmp
push
lods
and
cmp
sub
pushf
jmp
jle
sbb
sbb
adc
sbb
sub
mov
clc
out
or
mov
adc
stc
pop
jno
sbb
mov
and
inc
mov
cld
clc
sub
dec
pop
push
and
fcompl
dec
inc
xchg
lret
xorb
jle
sti
xchg
mov
arpl
jmp
adc
out
push
pop
stc
adc
mov
dec
je
xchg
or
inc
add
fistpll
movsl
bswap
jae
in
stos
mov
mov
outsl
sub
aam
mov
xlat
dec
outsl
push
dec
mov
mov
dec
inc
lret
pop
popf
adc
mov
and
in
mov
lret
int3
aam
pop
push
sub
inc
and
data16
and
adc
dec
xchg
jecxz
enter
push
hlt
xor
fadd
sbb
int3
sub
and
cltd
imul
pop
popf
into
mov
cmp
adc
lahf
lea
test
push
or
lds
inc
cld
loope
push
adcl
scas
ror
js
stos
dec
xor
jge
call
pop
add
pop
js
lods
adc
inc
inc
sahf
mov
or
xchg
lret
push
addr16
stc
jl
loopne
mov
pusha
stos
fsubrs
aam
jmp
add
xor
cmp
mov
xchg
cbtw
clc
add
fnclex
dec
dec
push
loopne
mov
pop
pop
popa
jle
pop
fisubrl
mov
movsb
mov
pop
and
dec
push
sbb
jmp
jp
sub
mov
mov
mov
pusha
xor
push
jns
faddl
xchg
sbb
mov
and
xchg
rclb
repz
cmp
loop
sarl
jnp
pop
mov
mov
rcr
xchg
icebp
xchg
fidivrl
test
mov
test
and
or
xor
xchg
adcb
outsl
mov
push
pop
sbb
or
enter
and
pop
imul
pusha
imul
jno
mov
iret
dec
sub
and
sub
or
xchg
ss
or
pop
cmpsb
and
lock
jae
add
ds
inc
push
adc
mov
in
mov
push
outsl
enter
adc
push
inc
adc
lea
cmp
push
and
mov
scas
loop
ss
xchg
mov
pop
cmp
bound
test
adc
dec
pop
xchg
sbbb
cld
push
sub
jo
cwtl
push
inc
and
scas
imul
scas
jns
jge,pt
testb
lahf
repz
mov
in
sub
or
mov
pop
mov
add
outsl
das
or
in
pop
sub
outsl
inc
add
neg
movl
movl
movl
mov
add
movl
mov
add
movl
cmpl
movl
notl
jmp
movl
mov
jle
push
push
call
adcl
addl
subl
orl
mov
xor
movl
xor
movl
movzwl
adc
movl
adc
movl
cmpl
movl
mov
movl
jmp
mov
mov
je
push
pushl
pushl
pushl
call
sbbl
adcl
subl
andl
addl
movl
sub
movl
movl
addl
movl
movl
cmpl
mov
mov
mov
movl
jmp
mov
mov
ja
push
push
push
call
addl
subl
xorl
decl
and
or
mov
and
movl
movzwl
sbb
movl
or
movl
adcl
movl
movl
sub
movl
not
mov
shl
andl
mov
xorl
push
push
push
push
orl
call
cmpl
movzbl
movl
mov
movl
jmp
movl
jge
pushl
call
adc
orl
or
mov
mov
or
and
mov
mov
dec
xor
or
mov
mov
sub
cmpl
movzbl
mov
mov
jmp
movl
je
pushl
push
push
push
push
push
call
addl
sbb
or
or
not
mov
mov
sub
xor
sub
mov
lea
or
mov
mov
xorl
or
orl
and
mov
or
sbbl
xor
movl
cmp
jne
sub
mov
mov
orl
shrd
add
shr
mov
cmpl
mov
mov
jmp
notl
movl
jl
pushl
push
call
movzbl
sub
mov
mov
add
xor
add
mov
or
xor
or
adc
mov
dec
mov
adc
mov
addl
shl
xor
andl
xor
notl
or
mov
mov
cmp
movl
jne
mov
mov
xor
mov
xor
or
xor
xor
sub
or
mov
sbbl
mov
shrd
mov
xor
mov
andl
xor
shr
mov
xorl
xor
orl
or
shl
movl
sub
andl
mov
mov
mov
and
add
or
mov
sbb
mov
or
mov
shrd
shr
movzbl
sbb
mov
mov
mov
jmp
stc
dec
popa
test
mov
sbb
and
sbb
adc
sbb
idivl
or
bound
icebp
daa
fcomi
pop
sub
movsl
jecxz
out
gs
dec
popa
and
add
pusha
pop
int3
loope
jb
cwtl
fs
dec
mov
adc
rorb
and
xchg
outsb
or
dec
mov
test
fimuls
hlt
xchg
stos
fidivrs
xchg
aad
or
mov
mov
cltd
outsb
ret
adc
mov
sbb
and
js
scas
test
adc
push
arpl
or
jne
push
xchg
or
fdivrs
es
sbbl
jae
jl
cmp
sbb
xchg
pop
addr16
es
mov
mov
stos
scas
bound
inc
cmpsb
xlat
sub
inc
mov
fildl
pop
xchg
lret
push
fdivrp
pop
mov
in
xlat
xor
push
adc
in
inc
stos
xchg
adc
addr16
or
mov
adc
pusha
fildl
and
inc
lret
sahf
sub
jns
push
dec
xlat
outsb
mov
sbb
in
xchg
fcomi
adc
cmpsl
cld
mov
mov
adcb
fwait
mov
outsl
push
mov
cmc
fbld
or
xor
and
push
cmp
mov
arpl
mov
icebp
dec
fwait
inc
rcll
xchg
xrelease
cmp
dec
es
sub
adc
test
fadds
dec
das
jg
pop
adc
adc
cmp
and
pop
or
inc
dec
jmp
dec
ja
stos
repz
out
rorb
mov
sub
push
insb
int
and
xor
jecxz
pop
lock
insl
das
fstpt
jno
add
mov
mov
jae
repz
lahf
popf
lret
ret
divl
arpl
cmpsl
out
test
or
sbb
out
cltd
clc
and
sbb
hlt
mov
sbb
push
xchg
sbb
xor
ficoms
fucom
addr16
lahf
dec
rorb
lret
jp
jmp
and
loopne
inc
out
adc
rcl
pop
es
inc
aas
out
lds
sub
and
and
add
repz
aas
inc
pop
xlat
xchg
pop
xchg
int
sbbb
xor
stc
shr
mov
pop
mov
sub
xchg
xor
dec
mov
call
mov
roll
sub
mov
jno
jmp
imul
add
sub
popf
pcmpeqw
data16
cmp
dec
dec
fwait
ljmp
adc
add
jl
cs
add
fdiv
aad
pusha
cmc
sbb
xor
sub
shl
xor
mov
adc
or
add
mov
sub
mov
sbbl
shrd
xorl
shr
mov
sub
mov
addl
mov
xor
adcl
xor
or
shl
jmp
pop
sahf
pop
add
cmp
inc
inc
mov
sub
sbb
and
sbb
sub
movsb
mov
js
subl
adc
insb
out
scas
pop
rorb
xor
int
xchg
cmp
dec
jns
lods
nop
ja
jmp
mov
int
in
lods
es
iret
push
scas
mov
jle
adc
cmp
jmp
pop
mov
arpl
fldt
out
and
mov
ja
jb
mov
or
jle
mov
or
lods
adc
daa
pop
dec
push
inc
pusha
jle
aas
ss
lahf
lcall
ret
jbe
ljmpw
push
not
pop
out
jmp
mov
iret
sbb
add
mov
out
mov
xchg
xor
in
aad
xchg
cwtl
movsb
pushl
dec
cmpsb
mov
lcall
mov
out
jle
popa
inc
adc
xor
test
loope
psubq
imul
ret
je
xchg
es
fstps
in
or
addr16
stc
sti
outsl
mov
pop
dec
jne
ret
dec
mov
push
fimull
pop
test
fld
stos
mov
lahf
lock
and
jmp
or
fisubrl
cmpsb
and
sbb
lods
lods
out
mov
sbb
jp
jmp
xorl
in
outsl
lods
sbb
in
pop
pop
cmp
mov
cld
xchg
push
dec
insl
dec
pop
aam
jge
xchg
push
jge
adc
xor
arpl
cmp
push
add
rcll
jle
pop
bound
cld
lods
adc
ljmp
dec
adc
mov
mov
enter
pop
scas
xchg
fwait
roll
xor
jl
adc
in
lcall
filds
and
mov
cmp
lret
mov
cmp
or
cmc
in
pop
mov
pusha
xchg
sbb
hlt
bound
out
std
dec
xchg
add
fsubr
cmc
pop
pop
pusha
lahf
out
or
sbb
jo
cld
imul
jo
aam
xor
rolb
add
sub
ret
pop
add
cmp
fstl
sar
or
movsl
dec
bound
out
mov
push
inc
loope
add
push
and
jae
xchg
pop
mov
ret
jg
and
mov
fsubl
aam
push
push
xor
jmp
std
push
inc
data16
mov
call
hlt
sub
pushf
insl
add
and
push
lods
lea
pop
test
pop
ja
cmc
and
insb
stos
in
jae
cmp
push
mov
lock
les
call
xchg
sbb
insl
mov
in
sbb
jns
push
arpl
lret
call
jbe
sahf
push
arpl
iret
mov
sti
into
test
dec
es
lea
mov
mov
subl
shrd
subl
shr
cmpl
mov
movzwl
jmp
movl
jae
push
call
xor
not
movzbl
adc
xor
or
or
addl
adcl
mov
mov
mov
sbb
xor
sbbl
mov
xor
or
sbbl
shl
andl
imul
mov
orl
mov
shrd
mov
orl
mov
xor
shr
movzwl
sub
mov
mov
mov
adcl
xor
addl
or
shl
addl
sub
jmp
inc
ds
cmp
mov
jo
or
sbb
adc
sbb
jnp
xor
mov
movb
pop
pop
xlat
sbb
movsb
or
cltd
hlt
dec
pop
inc
sub
outsl
push
inc
and
inc
cmc
pop
sub
std
jp
add
icebp
les
out
adc
lcall
sub
add
insb
inc
dec
and
lods
sbb
xor
sbb
in
adc
movsb
sti
stc
jae
push
es
notl
cmc
adc
ror
sub
inc
out
jne
xchg
fmul
mov
pop
mov
lea
out
mov
mov
test
sbb
xchg
pushf
pop
cmpsl
ret
leave
jl
les
std
cli
loopne
push
sub
cld
mov
fcomps
dec
fisttps
loop
loop
mov
int
xchg
jge
repz
ret
fisubrs
loopne
pop
push
mov
sbb
xchg
fwait
mulb
fwait
add
mov
in
call
mov
mov
aaa
jmp
out
mov
mov
inc
test
jp
jo
mov
sbb
fimuls
mov
aam
pop
xor
adc
and
popf
pop
mov
enter
insb
mov
addr16
sbb
and
popa
ljmp
add
pop
push
out
adc
rcl
jbe
and
add
push
cmpb
aas
pop
xchg
dec
and
shlb
xchg
loop
jb
cmp
mov
fldenv
out
mov
push
repz
sbb
inc
push
mov
jmp
loope
cli
mov
mov
mov
mov
or
pop
pop
stc
jp
cmpl
adc
pushl
bnd
sub
icebp
inc
mov
stc
pusha
fbstp
rcrl
lret
mov
adc
ja
xchg
filds
sbb
cmovge
xchg
movsl
testl
sub
addl
add
arpl
xchg
test
xchg
fisttps
mov
sub
ds
mov
scas
es
push
adc
icebp
xor
test
notl
imul
fcomps
sub
push
es
iret
xchg
lods
movsl
mov
into
xlat
daa
or
mov
rcrb
sub
xchg
or
rcll
inc
mov
sub
jg
and
push
xchg
push
adc
xchg
mov
dec
gs
and
add
push
iret
inc
mov
cmp
mov
xchg
push
dec
jno
sub
cmp
pop
clc
push
xchg
ret
dec
cmpsb
roll
sub
fldenv
insl
fdivl
andb
xchg
orl
cltd
push
fdivs
xorb
jb
xor
imul
sub
xor
fcoml
insb
cli
push
xor
jmp
sub
jmp
mov
movl
cmp
movzbl
mov
jg
cmpl
mov
movl
mov
jmp
mov
movl
jae
push
push
pushl
push
push
pushl
call
and
and
sbb
negl
or
xor
xor
add
mov
inc
mov
subl
shrd
andl
mov
mov
xor
addl
shl
decl
xor
andl
or
shr
cmpl
notl
movl
jmp
movl
mov
jge
push
push
push
call
mov
mov
add
xor
xor
xor
not
and
adcl
mov
addl
mov
subl
mov
and
mov
shrd
jmp
dec
lods
adc
pop
movsl
cmp
stos
xor
repnz
add
sbb
adc
sbb
subl
loope
imul
lock
jg
sbb
loope
mov
pushf
out
and
mov
out
cli
outsl
sti
lods
push
cmc
or
sbb
and
dec
aad
test
mov
int
cmp
daa
adc
dec
jb
fistps
mov
jo
stos
mov
dec
outsb
inc
lods
or
repz
aas
push
rolb
inc
inc
lods
les
cmp
int
mov
imul
cmovo
push
sub
add
lret
cltd
fstl
ja
std
mov
and
push
xchg
mov
out
jg
test
and
out
fisttpl
fmull
jecxz
adc
push
cltd
test
int3
mov
dec
and
mov
dec
jle
ret
pop
outsl
fstpt
jb
push
mov
outsb
loopne
aad
cmp
loopne
xor
push
mov
push
mov
push
fidivrs
in
jnp
adc
mov
hlt
addl
or
xor
repnz
xor
jo
or
push
push
adc
lret
and
shl
sub
repz
mov
mov
sbb
stos
sub
sti
std
mov
rcrl
rcrb
fcomps
pop
pop
add
es
add
cmp
sbb
shrl
rorl
nop
jae
icebp
adc
mov
add
sub
xchg
stc
mov
push
push
std
int
std
jl
xchg
adc
int
adc
add
int
clc
mov
xor
scas
jbe
addl
sbb
xor
dec
push
outsb
and
sbb
or
decb
adc
sbb
push
jb
clc
in
in
filds
cli
scas
ret
nop
popf
sub
loope
mov
pop
jne
inc
jl
ja
mov
sbb
das
and
jmp
fdiv
in
addb
ficomps
inc
and
sarl
out
sbb
mov
int3
imul
pop
les
adc
testl
inc
xor
sub
rol
cmc
mov
xchg
add
clc
shll
push
jbe
push
sarl
stos
jno
add
cmp
in
adc
push
lea
cs
adc
stos
addr16
pop
lds
inc
mov
push
push
sti
or
orl
inc
cmp
mov
arpl
pop
xchg
out
xchg
in
or
pop
mov
mov
cmp
ja
mov
shrb
xor
push
smsw
cmpsb
mov
mov
xchg
jg
or
dec
adc
sub
ljmp
sub
add
sbb
add
add
ret
xor
sub
out
fnstsw
cmp
stos
inc
cld
sbb
and
sbb
push
sub
push
jge
lods
sbb
and
add
or
jmp
mov
and
xchg
inc
and
ficoml
rclb
inc
jle
lds
mulb
mov
call
pop
xor
shrb
lahf
sub
test
push
push
mov
push
out
inc
fcomp
ja
mov
insl
lahf
out
int3
in
scas
xor
cmpl
lods
sbb
push
scas
sbb
push
mov
sbb
pop
mov
pop
sbb
in
jle
mov
adc
pop
leave
out
call
test
fbstp
pop
clc
fcmovne
arpl
mov
dec
orl
inc
xchg
push
inc
mull
popa
divl
and
adc
push
insl
imul
sub
sahf
push
cwtl
and
loope
push
lds
jle
pop
cmp
negl
jb
ja
fs
orl
xchg
pop
inc
mov
xchg
sbb
lret
in
loope
sbb
push
and
scas
out
lahf
jp
cltd
fcmovu
lahf
test
shrl
aas
int3
imul
rorb
setle
mov
test
xor
mov
sar
gs
imul
dec
xchg
stc
push
mov
push
inc
repnz
movsb
and
ret
sub
sti
sub
cli
loop
fisubs
outsb
repnz
out
xor
data16
jns
test
cmp
xor
or
shl
inc
pushf
icebp
push
xchg
xchg
nop
dec
jnp
stos
mov
sub
mov
xchg
cmpsl
popf
gs
ss
mov
shl
xor
xchg
mov
adc
push
push
stc
sbb
movsb
add
fdivrs
out
dec
mov
dec
std
lcall
and
jbe
mov
cli
inc
jae
test
stos
jns
lea
pop
mulb
sbb
jnp
rorl
mov
mov
or
scas
mov
cmp
jns
adc
iret
jmp
jae
xchg
ds
rclb
pop
jge
dec
push
mov
push
cmp
fnstenv
ficompl
aaa
int
jnp
fwait
stos
jmp
mov
cmp
pop
push
jno
les
rclb
mov
shll
mov
jmp
push
enter
movsb
call
xor
adc
loope
jl
mov
ss
jecxz
jp
sarl
mov
sbbb
mov
in
mov
adc
lds
or
add
push
add
jge
sbbl
xor
adcl
or
shl
adcl
imul
sub
jmp
cmpl
movl
mov
mov
jmp
movl
jge
push
pushl
call
movzwl
and
adc
or
sub
xor
mov
mov
sbb
mov
cmpl
movl
movl
jmp
mov
jge
push
call
add
inc
xor
add
mov
adc
xor
cmpl
movl
mov
mov
jmp
movl
jle
push
pushl
push
push
call
mov
xor
andl
sbb
subl
mov
mov
and
mov
shrd
mov
mov
subl
xor
subl
shl
subl
xor
or
adcl
shr
mov
cmpl
movl
mov
mov
jmp
movl
jle
push
pushl
pushl
pushl
push
pushl
call
or
adc
or
inc
subl
mov
and
sbb
sub
mov
cmpl
movl
mov
mov
jmp
mov
jbe
pushl
pushl
pushl
push
pushl
call
adc
or
mov
xor
or
sub
xor
xor
or
mov
subl
mov
sbbl
shrd
shr
cmpl
movl
mov
mov
jmp
movl
movl
jb
push
pushl
call
xor
addl
inc
xor
neg
notl
cmpl
mov
mov
jmp
mov
jge
pushl
push
call
mov
add
mov
not
subl
mov
mov
xor
adcl
mov
sub
mov
addl
mov
cmpl
mov
movl
mov
jmp
movl
movl
jl
push
push
call
orl
sub
sub
movl
or
jmp
subl
cmp
leave
jl
jecxz
stos
dec
negb
sbb
adc
sbb
xor
sub
adc
cmpsb
iret
pop
loope
in
mov
sub
lret
mov
dec
or
xorl
in
in
mov
rclb
sahf
daa
mov
push
aas
jg
sbb
std
sub
add
push
or
lahf
pusha
xchg
scas
push
jmp
in
cltd
push
and
xor
out
mov
cmp
adc
test
inc
mov
pop
push
call
out
cmp
jp
dec
mov
bound
xbegin
jbe
sub
xor
pop
jmp
sbb
and
jo
mov
mov
sahf
dec
push
iret
sub
loope
dec
int3
iret
popa
mov
adc
push
stos
pop
int3
dec
xchg
mov
fs
ret
push
int3
cmp
xor
enter
scas
jg
or
sub
mov
lret
add
in
add
mov
pop
lcall
imull
and
fsub
or
adc
inc
aaa
lcall
inc
enter
les
orb
cmpsb
cmp
push
xchg
jnp
dec
aas
fiadds
aas
insl
icebp
mov
sti
xor
mov
orb
mov
xchg
bound
push
loop
add
mov
and
push
call
add
pop
pop
mov
jg
or
cltd
mov
in
rcrl
adc
cli
mov
and
xchg
ja
adc
mov
mov
push
cmc
inc
fildl
and
jp
and
jbe
cmp
clc
test
mov
and
andl
mov
add
inc
or
sbb
mov
mov
adc
cmpsb
sti
inc
mov
jne
int
daa
cmp
pop
and
test
sub
or
push
daa
ret
jle
aad
or
adc
and
xor
in
rol
inc
and
pop
int3
ret
jns
gs
jmp
sub
subb
icebp
or
shlb
xchg
push
push
cltd
xchg
xchg
nop
and
stc
jl
sub
movsl
adc
jmp
dec
ds
addr16
insb
mov
outsl
rcrl
push
dec
jbe
sbb
mov
cli
enter
sbb
aam
adc
sarb
xchg
cmp
add
hlt
dec
lret
adc
push
in
cwtl
pushf
mull
std
cltd
in
mov
les
fucomp
rcrb
insl
push
xchg
inc
dec
xor
sahf
push
mov
xchg
lahf
mov
jno
loopne
int
inc
jg
jbe
xor
cltd
add
pushl
push
inc
outsb
add
mov
clc
mov
xor
add
xor
mov
mov
xor
adcl
xor
or
shl
add
add
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
mov
movl
mov
mov
movl
mov
movl
mov
movl
mov
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
lea
mov
mov
mov
shrd
shr
mov
mov
shl
mov
xor
xor
or
mov
mov
xor
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
lea
mov
mov
jmp
inc
mov
mov
and
sub
and
sbb
push
dec
daa
or
push
xor
or
xchg
jecxz
inc
jns
cld
test
sahf
xchg
aad
cmpsb
and
mov
lcall
bound
pop
xchg
xor
jge
in
icebp
popa
mov
movsl
cmpsb
incl
cld
hlt
add
call
fmull
ljmp
or
imul
ret
add
push
sub
adc
stc
jne
jp
shrl
or
add
in
or
and
mov
icebp
stos
rcrb
mov
dec
cmpsb
adc
repz
mov
mov
jmp
fs
lcall
push
mov
and
imul
sbb
int3
jle
sahf
push
lock
cmp
push
inc
pop
loop
dec
cmpsb
call
sub
or
fnsetpm(287
xor
mov
in
inc
and
stos
pop
stos
std
ret
fmuls
pop
fimull
jbe
rolb
icebp
mov
adc
aad
pop
mov
test
pop
ss
jae
lcall
jl
mov
xchg
cmpsl
add
xor
xor
shlb
stos
fcompl
cld
jo
cmp
jle
fadds
pusha
rorb
cwtl
in
ja
int3
popf
addr16
sub
ss
mov
push
jo
sub
insb
loopne
test
push
gs
sub
dec
push
xlat
pushf
sub
cmpsl
lods
dec
inc
jmp
out
pushf
fsubr
je
in
inc
or
mov
adc
mov
mov
inc
cmpsb
and
push
xor
pop
cmp
add
adc
out
pop
mov
andps
sbb
push
pusha
insb
inc
add
outsl
add
nop
add
cmc
add
xchg
cmpsb
lock
imull
into
jp
pop
dec
mov
or
sbb
out
adc
or
and
push
adc
pop
pushf
mov
sub
adcl
inc
sub
or
mov
push
or
lcall
outsl
xor
in
jl
bound
push
or
mov
xor
mov
xor
aad
je
xchg
or
ret
rcl
cwtl
imul
push
call
rcl
mov
push
std
push
bsf
pop
lock
dec
pop
popf
dec
movl
xchg
mov
lea
jmp
ds
aaa
call
ds
xchg
pop
cli
add
outsb
or
push
cmpsl
jne
cmc
lods
leave
pushf
addr16
add
rcrl
push
subb
stc
xchg
mov
xchg
addr16
pop
loop
inc
xlat
mov
andb
dec
and
dec
cld
dec
xchg
mov
xchg
sub
adc
fwait
in
sbb
fs
add
out
les
mov
dec
in
lods
enter
add
add
push
push
push
mov
lcall
and
sbb
xor
dec
xchg
cmp
sub
sbb
cmp
ja
test
mov
push
lock
loop
imul
outsl
aam
das
stos
sub
dec
movsb
clc
cmp
add
jecxz
xchg
mov
cmc
sti
push
outsl
push
pop
inc
pop
jno
jbe
insb
lds
mov
loopne
and
xlat
inc
inc
imul
adc
mov
cmp
hlt
aad
and
jg
xor
mov
push
sbb
in
mov
andb
cld
daa
mov
cmp
xchg
xchg
xor
bound
mov
enter
pop
mov
movb
scas
mov
ficomps
sbb
cwtl
js
mov
push
in
lret
sub
adc
dec
shll
mov
lret
xor
repnz
jge
push
jmp
mov
out
je
lods
or
mov
cmpsb
int
pushw
sahf
call
xor
dec
push
int3
xor
cmp
inc
in
cmp
popa
pop
mov
push
fildl
mov
pop
dec
pop
push
outsl
push
js
loope
ljmp
sti
shlb
cmp
jno
mov
mov
push
ljmp
mov
icebp
and
cwtl
jl
jmp
xor
jo
pop
or
cvtps2pd
mov
pop
mov
add
mov
sub
data16
lock
dec
out
xchg
sti
vmovntps
and
pop
inc
cmp
hlt
mull
stc
mov
mov
imul
sub
pop
jnp
lock
lods
cmp
fsubs
mov
test
jg
inc
jo
or
pop
pop
push
dec
push
pop
pop
popa
mov
push
dec
jmp
nop
stos
sbb
xchg
fidivl
or
call
ljmp
sti
push
cmp
loop
loop
gs
in
pop
subl
shlb
jnp
sub
inc
xor
stos
mov
divps
ja
lods
lods
bound
dec
adc
movsl
push
shll
test
or
mov
mov
push
cmp
push
or
rorb
out
rolb
dec
fwait
mov
jbe
lret
cld
pop
imul
mov
int
cmpsb
es
jne
adc
pop
push
xchg
add
out
outsl
popl
mov
lcall
xor
cmc
fbld
inc
xchg
mov
jle
fildll
adc
mov
fs
xor
fadds
cmp
cwtl
dec
cltd
lret
cmp
mov
shr
mov
mov
shl
mov
xor
xor
or
mov
mov
or
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
lea
mov
mov
mov
shrd
shr
mov
mov
xor
shl
mov
xor
jmp
loopne
cwtl
xchg
mov
pop
add
outsl
mov
cmp
pusha
in
sbb
adc
sbb
push
fisttps
push
cmp
pop
jmp
xchg
fs
in
jmp
imul
ficomps
sub
pop
mov
repz
dec
flds
incb
add
mov
mov
mov
jnp
jle
test
mov
mov
adc
dec
mov
mov
cmp
pop
or
movsl
xor
gs
mov
sti
adc
and
mov
xchg
push
sub
loope
lahf
and
xlat
add
rorl
gs
or
jge
sub
dec
jecxz
mov
push
pushf
pop
or
jo
out
hlt
xchg
call
dec
mov
mov
mov
ret
dec
out
mov
cmp
ljmp
aaa
aad
mov
mov
sub
hlt
cmp
shlb
popf
in
mov
fwait
cmp
testl
adc
pop
scas
pop
repnz
stc
fucomp
jne
xor
loop
and
push
pop
jge
cs
adc
adc
out
push
stc
xchg
add
inc
add
push
cmp
pop
pop
aam
inc
lds
xchg
cs
mov
loope
ljmp
mov
sbb
sbb
jg
arpl
ret
mov
fidivrs
aam
cmpsb
cmc
sub
cmc
popf
je,pt
xchg
scas
insl
inc
push
xor
inc
mov
pop
sub
xchg
pop
orl
cmp
rorb
adc
mov
mov
popf
out
loop
es
push
cwtl
jg
daa
out
mov
xchg
out
mov
in
sbb
in
mulb
pop
mov
fsincos
pop
rclb
and
outsb
icebp
je
cmpsb
lods
shlb
stc
sbb
jo
add
mov
repz
inc
pop
or
jl,pt
xor
aad
insl
mov
sahf
dec
adc
mov
adc
int
in
mov
xor
pop
cmp
xchg
push
ficomps
pop
sub
enter
xor
lock
or
ja
int
cmp
cmpxchg
xor
out
sub
pop
imulb
mov
xchg
mov
sub
push
sub
lret
shll
inc
pop
cs
xchg
mov
mov
and
xchg
aaa
int3
cwtl
and
mov
cwtl
mov
xchg
or
and
jbe
cmc
fwait
in
or
aad
mov
jbe
mov
sbb
sahf
es
add
push
jno
push
sub
outsl
addr16
sbb
scas
bt
movsb
pop
pushf
mov
pop
incb
outsb
dec
jle
hlt
jmp
xorb
lods
push
mov
insl
fimuls
jnp
add
and
adc
popa
jo
dec
mov
std
mov
or
add
add
les
or
xchg
inc
insl
mov
fistps
sbb
adc
sbb
scas
pop
das
inc
cmp
fwait
nop
and
mov
gs
push
xor
cmp
loop
mov
jp
and
dec
paddusb
jecxz
addl
cltd
leave
int3
mov
adc
xchg
sub
jl
pusha
out
lret
push
ss
pop
jb
inc
mov
loopne
mov
outsl
pusha
pop
loop
cmpsl
stc
stc
push
lahf
mov
subl
or
clc
xchg
rorb
iret
movsl
outsl
inc
inc
jmp
adc
out
jo
inc
out
or
jb
adc
out
xor
jns
pop
aam
xor
loopne
mov
push
mov
or
repz
or
inc
in
mov
adc
pop
aaa
mov
ror
pop
ja
leave
cmp
mov
dec
add
popa
repnz
sti
out
insl
dec
push
cmpsb
xlat
int3
cs
icebp
xor
pop
and
pop
iret
add
lcall
pop
es
push
in
ret
fstpl
pusha
ret
xchg
sub
or
iret
mov
into
jecxz
pop
fistl
pop
ffreep
mov
in
push
das
xchg
mov
cmpsb
pop
mov
mov
icebp
mov
add
mov
xchg
movsl
ljmp
adc
mov
mov
cmp
sbb
scas
psubusb
xlat
jge
xchg
jmp
test
loope
mov
mov
xchg
jg
sti
es
add
xchg
inc
jl
cmpsl
mov
out
icebp
mov
xchg
sub
pop
pop
xor
ror
mov
and
pop
jae
mov
fucomip
jmp
int
sub
add
les
jmp
lret
adc
loope
pop
in
adc
movsb
inc
test
movsl
jo
or
iret
cmpsb
jno
push
sub
or
mov
push
pusha
setp
movsbl
cmp
cmp
cwtl
fcmovnu
add
add
mov
add
pushf
popa
cmp
and
mov
divl
in
pop
mov
in
sub
xor
and
fwait
adc
shll
into
fsubl
adc
fscale
cmp
jp
push
in
jbe
xor
lahf
es
cli
jmp
test
push
insb
fidivrl
fcoms
adc
push
sbb
pop
mov
pushf
adc
data16
popa
icebp
push
out
push
cli
aas
lods
xchg
cmp
shrb
loop
dec
xchg
xor
arpl
xor
int3
ja
rorb
pop
xor
shlb
aas
pusha
jp
pop
enter
xchg
int3
hlt
or
jl
jns
int3
sub
mov
sbb
sub
out
aam
sub
mov
in
int3
jne
test
in
cmp
dec
pop
movsb
xor
mov
mov
shrd
shr
mov
mov
xor
xor
jmp
and
xor
ficomps
mov
jo
sbb
and
sbb
sbb
push
mov
xadd
popf
mov
idivb
push
cmp
jg
jecxz
jo
lods
or
add
or
shll
scas
sub
xchg
add
jo
jg
cmp
xchg
jbe
xor
sbbb
call
add
sti
jae
lds
sti
lcall
or
out
outsb
aas
lods
cld
lods
adc
xchg
mov
shll
adc
stc
popa
pop
push
loop
mov
lcall
jbe
inc
push
gs
rcl
test
rol
leave
xchg
shl
bound
or
nop
lods
daa
clc
les
adc
or
add
push
mov
scas
out
mov
xor
mov
sub
push
xchg
xor
in
aam
sbb
popf
mov
pop
lea
sub
mov
dec
lret
lea
test
out
cs
imul
imul
push
dec
and
mov
divb
fmul
icebp
hlt
and
lahf
mov
jg
cmp
fcomps
push
adc
ss
leave
xorb
sbb
jmp
cmp
pop
fidivl
fs
dec
insl
mov
fwait
pop
ljmp
xchg
call
out
push
or
sub
xchg
sub
mov
je
xor
popa
jmp
imul
dec
add
adc
xchg
mov
pusha
adc
jae
call
adc
pop
and
rcrl
fiaddl
leave
mov
mov
ss
loope
inc
jbe
pop
fsubrl
loope
in
mov
inc
push
adc
in
fmull
mov
xchg
aas
add
sub
fisubs
out
sub
sbb
mov
imul
sahf
movsl
push
cmp
jnp
aas
add
enter
popa
mov
stc
data16
cwtl
mov
fdivr
daa
xchg
mov
pop
lahf
mov
inc
icebp
orl
push
lea
add
lcall
push
adc
add
xlat
dec
aaa
pop
fists
movsb
and
fisubs
sub
bound
pop
push
cmc
sbb
ret
fnstcw
sub
jle
jle
inc
stos
xlat
out
jbe
fiadds
add
adc
push
add
sub
hlt
jb
pop
divl
imul
pop
or
jbe
jns
mov
xchg
mov
xor
and
push
jne
push
aaa
test
mov
xorl
je
xor
les
pop
inc
shrl
sub
cmp
je
addr16
faddp
jecxz
hlt
jle
stc
clc
or
lea
mov
mov
shl
mov
shrd
shr
mov
mov
xor
xor
or
mov
shl
mov
mov
mov
or
mov
mov
shrd
shl
shr
mov
mov
xor
mov
xor
or
mov
dec
not
and
xor
mov
mov
xor
or
mov
mov
shrd
jmp
fdiv
sub
mov
sbb
rcrl
sbb
adc
sbb
test
add
xor
adc
push
mov
ret
in
test
mov
rcr
mov
sarl
pop
fiaddl
mov
imul
int3
mov
mov
lds
add
or
out
inc
jne
pop
ficoms
fsubrl
cltd
push
sub
cmpsl
or
push
in
imul
neg
sbbl
or
lds
dec
jne
addr16
sub
ja
pop
xlat
mov
jg
pop
aaa
inc
mov
fbstp
rcrl
cmpsb
test
cmp
jae
jbe
icebp
xchg
mov
mov
mov
outsb
rol
adc
mov
cmc
enter
xlat
xor
push
hlt
cwtl
add
das
push
scas
dec
ljmp
mov
push
sub
fsub
push
xor
push
add
ljmp
es
adc
add
sbb
adc
fldt
dec
call
fdivrs
imul
leave
out
insl
dec
pusha
test
adc
jmp
ret
dec
push
ljmp
xchg
outsb
xchg
nop
mov
jle
gs
jecxz
dec
mov
out
jp
pop
fwait
or
push
inc
fcmovnbe
lret
outsl
sub
jle
stc
cmp
jb
add
push
nop
test
lret
pop
aam
loope
pcmpeqd
das
pop
jbe
or
mov
sbb
mov
inc
out
enter
push
adc
cmp
data16
mov
dec
data16
ja
les
cmp
inc
sbbb
and
movsl
mov
mov
pop
test
jmp
scas
mov
popa
push
pop
mov
cmp
jb
aas
sub
sbb
push
jg
iret
sub
jno
xchg
mov
dec
mov
cs
mov
test
enter
outsb
out
sahf
into
and
out
jle
pop
xor
ret
inc
popa
jb
mov
sub
xchg
test
and
pop
mov
pushf
test
call
xor
mov
add
push
mov
js
mov
fadds
pop
push
enter
sub
out
ftst
mov
adcl
in
push
in
mov
mov
cmp
pusha
dec
xor
rcll
insl
push
fldl
push
or
adc
int
popf
ret
inc
hlt
test
dec
iret
sarl
pop
ret
xor
xchg
cli
jge
push
and
imul
pop
pop
loope
inc
mov
pop
fwait
fists
test
out
add
sahf
enter
and
mov
and
es
insl
mov
mov
dec
shr
mov
mov
mov
xor
mov
xor
shl
mov
or
jmp
out
mov
stos
mov
sub
sbb
and
sbb
mov
sub
subb
outsb
inc
bound
push
iret
shr
lods
fnstcw
push
or
push
adc
and
les
ds
dec
add
or
popa
adc
xlat
fmull
bound
test
fistpl
loop
pop
inc
jg
xor
insl
addr16
shrb
imul
arpl
cmpsb
fsubrs
popa
decb
pop
repz
xor
xchg
lret
lock
pop
shlb
rcrl
and
pop
jmp
shr
xor
cmc
loope
sbb
pop
mov
int3
outsl
add
jb
pop
imul
mov
das
push
sbb
stc
jb
push
mov
add
shlb
pop
sbb
jae
stc
insb
sub
cld
xchg
or
pushf
add
adc
jbe
js
xchg
fsts
cmp
mov
popf
or
pop
icebp
xor
clc
fimull
lock
or
mov
mov
mov
js
lock
sub
inc
xchg
lret
inc
ljmp
xchg
into
nop
push
adc
addr16
ja
sub
cltd
adc
adc
sbb
pop
pop
sub
add
arpl
or
jbe
cmp
dec
add
test
rcll
in
sbbl
push
push
ja
mov
mov
movsb
mov
cmp
xchg
cltd
dec
xor
inc
inc
enter
jecxz
rorl
and
jno
pop
imul
cmpsl
outsl
rcrb
and
cmp
jbe
mov
inc
inc
pop
call
lods
lds
gs
cmp
mov
jb
out
sbb
ret
dec
test
rcrb
ja
int
loop
sbb
imul
sub
cmp
mov
sub
xchg
mov
fcoml
test
add
test
sub
adc
dec
push
mov
jbe
rcrb
sbb
mov
ss
rorl
adc
ds
cmp
iret
sbb
hlt
push
loopne
fcmovbe
push
xor
sbb
pop
in
ficoml
rcr
rcrl
pushf
dec
dec
and
xchg
inc
subb
loopne
mov
ja
hlt
enter
fwait
int
inc
and
rcrb
and
xlat
jne
aad
jns
mov
repnz
mov
sbb
test
int
xlat
lods
jge
mov
jbe
lahf
sub
push
roll
push
xor
mov
mov
and
xchg
in
push
mov
cmp
je
mov
sub
mov
mov
jmp
dec
lret
repz
cmp
fildl
mov
mov
sbb
and
sbb
stc
mov
movsl
jno
mov
cmp
xor
lds
in
mov
sub
mov
inc
repnz
ss
or
addl
mov
xchg
pop
xor
loope
adc
testb
sahf
xacquire
mov
int3
dec
imul
fwait
cltd
call
je
mov
cwtl
iret
push
jne
pop
es
push
push
out
lret
scas
sbb
lds
stos
out
cs
jmp
sbb
addps
fwait
mov
pop
repnz
add
adc
mov
bound
mov
lods
xor
push
mov
inc
mov
scas
les
jne
into
pop
ljmp
and
fsubs
addr16
rorl
xchg
cwtl
pop
iret
aad
jp
ret
push
dec
and
rcll
pop
sahf
inc
inc
adc
fs
call
sub
sti
lock
sahf
pusha
mov
addl
rcrl
push
mov
sbb
rcrb
sbb
fsubs
imul
movsl
cld
ljmp
out
adc
sarb
rcl
add
add
xor
add
notl
pushf
jae
xchg
jmp
pushfw
add
dec
push
xchg
add
mov
outsb
pop
aam
mov
xor
pcmpeqb
popa
inc
les
repz
add
cmc
jo
pop
lahf
jbe
int
adc
cmp
repz
outsb
add
xorl
or
cs
popf
pop
ja
and
pop
push
push
loopew
addb
pop
lret
inc
jo
cmp
pop
xor
push
or
test
fdivrl
push
cwtl
add
in
cmp
stc
sbb
ds
or
jae
adc
pop
rcrb
movsb
add
xchg
sub
dec
stos
sbbl
mov
es
lods
adc
popf
lcall
mov
or
js
cs
dec
lahf
pop
adc
adc
sbbl
clc
mov
mov
sub
sub
lret
xchg
mov
inc
cmp
fcoml
and
jne
pop
notb
dec
gs
and
pusha
outsb
pop
xor
fcmovnbe
fadd
ficompl
inc
lahf
push
jae
aad
adc
rol
xchg
mov
mov
and
push
sbb
jmp
lcall
and
jp
mov
cmp
push
push
mov
dec
test
in
add
jae
add
sti
fdiv
js
cmp
cmpsb
bnd
es
lret
clc
mov
les
dec
inc
cs
jl
pop
fdivrl
fimuls
dec
enter
addr16
addr16
mov
fwait
cmp
cs
xchg
cmpsl
mov
jno
call
icebp
ja
jns
shrd
shr
mov
mov
mov
mov
xor
or
mov
mov
mov
xor
xor
mov
mov
mov
shrd
shl
xor
or
mov
mov
mov
shll
xorl
mov
mov
mov
xor
or
shr
or
cmp
jne
cmp
je
jmp
mov
mov
xor
xor
shrd
shr
mov
mov
mov
mov
xor
or
jmp
iret
xchg
ret
or
cmp
jo
scas
shll
adc
sbb
mov
mov
cwtl
aam
and
cmp
mov
sub
lds
xor
enter
das
xor
or
sub
int3
test
jbe
je
cmp
add
jb
test
xor
rolb
dec
dec
cwtl
loope
scas
add
ds
mov
push
mov
roll
rolb
mov
and
popl
jo
mov
push
fucomip
out
add
sbb
sbb
xchg
cltd
lock
loopne
lods
add
insb
push
xorl
jg
and
jae
mov
in
nop
push
add
pop
js
lock
push
in
cmp
sbb
test
aam
add
loopne
xor
inc
loopne
xor
mov
int
add
in
push
sub
push
fidivs
ljmp
pop
or
sub
pop
sbb
mov
fdivrs
dec
lods
outsl
test
or
movsb
sbb
sahf
loope
mov
jne
xor
ljmp
test
test
mov
add
mov
adc
inc
scas
mov
pop
adc
mov
mov
sbb
call
xor
into
pushf
mov
mov
jmp
adc
fldl
or
aam
push
pushf
in
sbb
and
pop
inc
enter
jne
lret
push
xor
xor
or
xchg
mov
and
sbb
mov
mov
xchg
enter
stos
fldt
xor
mov
and
mov
or
lea
shll
pop
shrb
aam
insl
call
push
test
push
shrl
leave
cmp
js
out
xor
dec
xchg
mov
enter
dec
xor
mov
xchg
inc
clc
xchg
xchg
xchg
test
lock
inc
std
sub
lret
cmpsb
and
mov
scas
das
mov
ss
int3
in
daa
cld
mov
sbb
idivl
sti
nop
add
push
pop
jns
push
mov
bound
mov
cmc
adc
dec
sbb
inc
mov
jmp
cmpsb
sub
ss
push
cltd
mov
fs
mov
push
repnz
imul
into
add
je
insb
lret
insl
jns
mov
ljmp
push
jne
mov
in
negb
es
stc
incl
cmp
mov
filds
and
mov
adc
dec
jmp
mov
outsb
cmp
mov
stc
cmp
out
or
faddl
fmul
test
insb
call
rcr
sti
jg
lock
inc
and
push
shl
xor
or
mov
mov
xor
jmp
fstps
cmp
and
pop
xchg
rcrb
mov
mov
sbb
adc
bound
jno
in
cmpsl
mov
ret
dec
and
add
cmp
mov
scas
sbbb
add
mov
cmpsb
inc
or
or
test
jbe
stc
inc
add
jmp
mov
mov
pop
add
mov
inc
pop
imulb
mov
inc
mov
in
rcll
adc
insb
sbb
xor
jl
mov
adc
xor
in
pop
mov
mov
add
movsl
enter
pusha
idivb
mov
push
aaa
jmp
xlat
add
jge
scas
jecxz
cmpsb
xchg
pop
cmp
shrl
or
in
fdivl
subb
push
fwait
sub
xchg
test
push
xor
pop
daa
into
in
pop
push
xchg
roll
sub
stc
pushl
enter
xorl
mov
sbbl
imul
sub
out
ds
jmp
add
push
in
adc
dec
leave
xchg
xor
popf
scas
adc
xor
jmp
sbb
or
testb
stos
popa
lods
push
cli
sbb
add
mov
insb
xchg
bnd
xor
push
mov
rcll
insl
lock
movsb
inc
mov
jnp
lret
pop
lock
xor
or
cmpsl
je
adc
mov
xor
addr16
loop
and
lcall
fistl
iret
stos
push
lret
add
jbe
lcall
xchg
jg
push
dec
lock
pop
shll
mov
lea
jne
and
out
xchg
mov
shlb
sahf
data16
decl
clc
js
add
push
loop
fs
scas
xor
scas
jmp
gs
nop
arpl
mov
ret
cltd
int
mov
jne
cmpsl
mov
rep
xchg
cmp
mov
push
mov
mov
std
addl
loope
sub
popa
adc
dec
fwait
push
data16
adc
or
mov
push
mov
icebp
adc
test
and
or
mov
in
sbbl
add
lods
add
dec
mov
cs
add
xor
jns
push
lahf
adc
ss
xor
jns
add
movsb
mov
les
pop
daa
fists
jne
add
mov
mov
dec
mov
adc
mov
sbb
aam
andb
in
mov
mov
pop
cmpsb
or
hlt
cli
lods
stc
sub
shrl
aaa
mov
cltd
repnz
sbb
inc
adc
push
pushf
mov
mov
xor
mov
mov
shrd
shr
mov
mov
mov
shll
xorl
xor
mov
or
mov
mov
mov
or
mov
mov
cmp
jne
mov
cmp
je
mov
mov
mov
mov
lea
mov
mov
mov
mov
mov
shrd
mov
mov
xor
jmp
daa
into
dec
cli
sbb
sub
outsb
lret
jo
mov
sbb
adc
sbb
and
cmp
or
jecxz
mov
mov
xchg
and
ja
aaa
lret
xchg
hlt
push
notb
ds
jnp
or
jbe
pop
pop
dec
xchg
loope
cmc
xchg
pop
sub
mov
pop
ljmp
or
jo
fcmovu
xor
fiaddl
movsb
dec
pop
push
aad
fnstsw
jae
mov
dec
jecxz
add
cmc
ds
mov
dec
aas
mov
sarb
push
rorl
dec
test
sbb
xor
pop
jne
jl
push
aas
mov
cwtl
std
and
shl
mov
insb
lret
lods
cmp
lods
stos
add
adc
rcrb
fisubrl
push
rcll
lds
cwtl
pushf
fisubl
lahf
lods
or
push
xchg
push
repz
rcrb
std
inc
pop
add
inc
jp
add
sahf
in
cli
insl
mov
sbb
lds
and
test
loop
inc
or
das
push
jg
das
movsb
pop
push
bound
gs
cmp
mov
ret
push
ds
xchg
movsb
inc
mov
pop
rcrb
fs
fs
lds
scas
jae
aam
out
push
mov
fisubl
in
fdivrl
mov
push
or
mov
add
gs
out
lods
jmp
add
sarb
add
hlt
clc
inc
mov
inc
cmpsl
cmpsb
in
shll
das
push
sbb
pop
inc
xor
and
gs
fsub
ficoms
sub
into
push
aas
or
push
in
sbb
mov
lds
lcall
or
scas
jg
jmp
inc
mov
pop
xchg
jnp
clc
fsubrs
push
sbb
pop
mov
inc
and
out
mov
xor
adc
subl
xor
gs
xchg
add
xchg
sub
ss
adc
jg
xchg
ret
imul
stos
inc
test
mov
pop
aad
mov
inc
xchg
cmp
cld
addr16
jno
in
dec
out
push
sbb
fbstp
inc
dec
roll
xor
jbe
cmpsb
push
imul
xor
mov
pop
push
stos
pop
addl
call
fsubr
xchg
xor
nop
ja
xor
dec
dec
jnp
aas
int3
sub
adc
dec
out
jnp
xchg
ret
cmpl
into
jge
xchg
xchg
fcmovnu
sub
das
jg
mov
pop
enter
pop
leave
mov
push
push
cmpsb
int3
adc
cmc
sbb
add
xchg
lds
stos
mov
cltd
add
jmp
adc
add
cltd
dec
sar
ja
in
push
cmp
out
jbe
push
xor
shr
jmp
inc
inc
lret
dec
lret
inc
dec
and
mov
test
sbb
and
sbb
adc
int3
xchg
mov
pushf
and
mov
out
stos
dec
mov
hlt
and
adc
mov
outsb
das
jl
sub
push
lds
in
repnz
jecxz
jmp
adc
inc
fwait
add
test
out
xchg
movb
icebp
shrl
jno
add
inc
mov
push
inc
sbb
je
mov
popf
data16
mov
cltd
ss
cmpsl
dec
test
cmp
sti
dec
or
enter
push
push
pop
xchg
aad
aam
lods
and
pop
adc
stos
jno
push
scas
cmp
push
push
xchg
sub
sub
mov
mov
jecxz
inc
in
mov
xor
mov
adc
aad
sbb
sub
sbb
pop
fldenv
adc
nop
shrl
out
mov
sti
fisubs
out
enter
lret
loop
call
inc
mov
enter
ret
lea
fisubs
jp
lcall
xor
or
sahf
dec
mov
dec
jge
loop
and
and
cld
mov
call
push
negl
and
sbb
lods
stos
fstps
pop
mov
pop
lods
fldcw
out
dec
dec
xlat
and
lcall
jbe
cmp
mov
and
inc
inc
stc
jecxz
push
and
push
add
add
mov
sbb
popa
adc
aam
lea
mov
lret
in
mov
cmp
lea
ret
ret
fwait
orb
xchg
movsl
dec
adc
mov
push
inc
pop
pop
mov
mov
mov
mov
aaa
inc
xchg
aas
jb
ret
js
lock
pop
shrl
fs
mov
and
jo
lods
pop
or
dec
pop
push
and
and
cwtl
ljmp
push
cmp
sar
push
adc
inc
dec
cmpsb
cmp
jne
rorl
mov
inc
sub
jl
int3
iret
loopne
jp
xor
testl
sub
adc
int
lret
rol
lock
add
mov
sub
push
mov
cs
cs
lret
mov
add
push
enter
pusha
jp
dec
xchg
mov
neg
mov
hlt
cmp
repnz
and
mov
pop
jnp
push
xchg
push
loop
pop
adc
add
mov
mov
xor
cli
out
add
jne
stos
xchg
add
ret
mov
or
in
movsb
jmp
lcall
fmull
gs
movsb
mov
adc
ss
shl
pop
mov
fwait
pop
adc
push
add
rol
loopne
or
mov
mov
mov
xor
shld
xor
mov
mov
shl
mov
mov
xor
mov
cmp
jne
mov
jmp
mov
int3
xchg
sbb
dec
fstpt
mov
jle
test
sbb
iret
pmaxsw
and
aas
in
xchg
jbe
inc
test
sahf
orl
xor
push
push
dec
adc
insl
sbb
mov
mov
je
pusha
dec
cli
add
sti
cmc
rcrl
sbb
repz
scas
sti
std
pop
in
and
setbe
push
divb
mov
lea
cmpsl
stos
mov
lea
xor
inc
mov
push
xchg
or
fidivl
sub
iret
rorl
pop
cmp
dec
inc
push
xchg
or
sbb
or
in
xlat
xor
dec
fsubrl
dec
popa
adc
lds
mov
cmpsb
iret
xlat
icebp
push
into
sbb
test
jae
popf
mov
adc
push
pop
pop
sbb
inc
sti
fistpl
rclb
ja
ss
add
gs
add
xlat
popf
jb
sbb
pop
insl
aas
pop
jbe
or
dec
stos
fisubs
xchg
lock
mov
loope
inc
xor
rorl
lods
mov
and
inc
in
test
xor
push
adc
in
and
lahf
outsl
enter
push
and
aad
add
cmc
ds
js
iret
push
ljmp
xchg
jno
add
test
pop
jae
shll
out
iret
fxch
or
lods
jb
leave
aad
adc
inc
adc
jo
sbb
dec
cltd
mov
movsl
jle
fwait
lds
loop
pop
out
out
push
xchg
bound
int
inc
fwait
push
inc
fldenv
popa
inc
push
iret
adc
adc
mov
scas
jg
xor
aad
add
gs
fs
int
jns
fwait
pop
push
add
aaa
jl
xchg
call
int
loope
in
xchg
movsb
dec
jne
in
dec
mov
xor
repnz
inc
in
stos
xor
pusha
int
jae
mov
ret
popf
loopne
xchg
cli
pop
ror
clc
sub
cmc
lcall
jnp
or
mov
push
jmp
cmp
sub
jmp
pop
mov
inc
negb
mov
jecxz
arpl
aas
cmpsl
sti
pusha
sbb
xor
jg
popa
pop
orl
es
leave
stos
push
fsub
sbb
shll
jle
sbb
mov
xchg
pause
cmp
mov
testb
jae
xor
adc
cld
out
mov
adc
iret
mov
int3
insb
movsl
and
dec
popf
jb
jecxz
sbb
inc
xchg
fbstp
pop
jmp
stc
stos
andl
mov
aas
cwtl
pop
pop
push
movsb
mov
insl
out
data16
jno
shll
rorb
cwtl
sti
mov
das
pop
test
popf
adc
andl
ljmp
test
push
mov
mov
mov
xor
xor
mov
mov
shrd
shr
mov
mov
mov
mov
xor
or
mov
shl
xor
mov
mov
or
mov
push
pushl
push
push
call
mov
mov
shrd
shr
shr
xor
push
xor
mov
mov
mov
push
push
push
call
shld
mov
xor
or
mov
mov
shl
jmp
subl
pop
rclb
in
mov
and
sbb
pop
clc
xor
ja
into
jns
dec
xchg
xchg
fs
gs
mov
xor
idiv
fbstp
adcb
sbb
inc
pop
adc
fistpll
in
popa
inc
inc
loopne
sub
imulb
adc
add
std
in
push
xchg
call
cltd
push
stos
fucomp
sub
sbb
mov
and
leave
bound
pop
cltd
dec
incb
jl
or
arpl
hlt
xchg
sub
popa
pop
jl
adc
orl
cmp
das
jnp
popf
adc
fists
loopne
sbb
cmp
pop
fldenv
vscatterpf1dps
loop
push
xor
mov
loopne
or
loop
enter
wbinvd
pop
rorb
dec
ret
out
dec
dec
sbb
movsb
in
into
nop
ds
pop
loope
lahf
iret
ds
aas
sub
xor
std
mov
push
int3
push
pop
mov
dec
ret
and
imul
fld
pop
mov
push
dec
mov
jno
pop
push
xchg
or
sahf
imul
and
fistl
jns
and
sub
and
adc
or
aad
mov
fists
stc
shlb
jg
dec
pop
jg
mov
mov
in
pop
lods
and
mov
sub
rorb
movsl
sub
jecxz
jmp
pop
and
push
lods
out
adc
loopne
cld
decb
mov
pop
mov
cli
daa
mov
or
out
xchg
imul
mov
stos
mov
xchg
xchg
cltd
or
sbb
mov
dec
lds
rolb
mov
and
test
adc
pop
es
stc
push
xchg
movsb
jbe
nop
add
out
ds
mov
jmp
and
add
adc
in
pushf
shlb
cmpsl
and
mov
xor
cwtl
inc
jle
add
scas
bound
add
mov
and
cmp
scas
add
shrb
shrb
add
jle
test
xchg
xchg
mov
or
xor
pop
test
lret
rolb
es
out
and
or
sbb
movsb
shrl
mov
repnz
and
inc
sub
sarb
dec
daa
loop
jns
inc
sub
bswap
call
cmp
stos
fwait
aaa
jns
testb
cld
lods
pop
sbb
pop
aad
in
sub
popf
xor
divl
in
mov
setns
xor
adc
mov
in
sub
add
icebp
or
and
push
les
sahf
sahf
fsubrl
lods
test
and
int
push
xchg
or
xor
xor
xor
xor
mov
mov
jmp
mov
add
mov
mov
mov
mov
mov
mov
movzwl
cltd
shld
xor
mov
mov
shl
mov
mov
xor
mov
cmp
jmp
lock
or
dec
loopne
pop
ret
mov
popf
sbb
and
sbb
adc
lods
push
inc
mov
test
inc
je
cmp
fildll
js
mov
xlat
add
ljmp
push
push
sbb
pop
es
add
insb
in
call
stos
mov
mov
ret
cmp
cmc
out
jl
jo
jmp
repnz
cmpl
push
popa
das
scas
cltd
fdivs
scas
mov
xchg
inc
cs
xor
stc
fcompl
shlb
addr16
mulb
imul
mov
xor
mov
push
cmp
push
xchg
cmp
fdivp
mov
inc
mov
das
test
jbe
mov
outsb
pop
mov
and
pop
mov
xor
sahf
enter
fwait
movsl
cli
mov
cmc
sub
mov
leave
dec
sub
add
mov
test
sti
decb
lds
lods
adc
and
imull
repz
fmull
xchg
fsubp
popf
and
push
cli
insl
xlat
cmp
inc
or
inc
in
push
mov
and
mov
fiadds
sbb
add
mov
pushf
or
xchg
xlat
and
or
test
hlt
arpl
fidivl
and
std
in
dec
dec
ss
push
in
lahf
pop
push
in
int
jo
dec
divb
mov
jo
fisttps
mov
paddsb
dec
cmc
adc
sub
lret
cmp
sbb
repz
test
fldl
xchg
bound
leave
pop
sub
and
lds
cmp
loop
lahf
cli
pop
or
mov
inc
adc
mov
push
mov
pop
sbb
xorl
ret
gs
popl
cmp
mulb
adc
push
xchg
out
sti
adc
and
cmp
insl
leave
xor
jns
jne
insb
mov
jmp
xor
ja
stos
stc
push
incb
in
ret
stos
add
push
mov
inc
pop
add
neg
mov
push
pop
cwtl
sbb
xchg
stos
cmp
cmp
add
mov
mov
mov
icebp
insb
cwtl
loop
sbb
sarl
jnp
xchg
cmp
leave
iret
aaa
leave
lods
dec
xchg
push
std
sbb
pop
bnd
jne
out
cmp
aad
inc
int3
sarb
call
loopne
je
or
xchg
sbb
push
xor
inc
pop
mov
lahf
sahf
addr16
jns
sbb
rorb
jl
xchg
pusha
xchg
jae
rcrl
sub
jbe
cmp
cmpsb
inc
cltd
xchg
xchg
movsb
sub
jle
and
or
cltd
in
ss
mov
cmp
jne
movl
mov
movl
mov
movl
mov
movl
mov
mov
mov
shrd
shr
mov
jmp
fdivr
fists
ss
shlb
stos
enter
and
sbb
or
push
xchg
stos
jbe
mov
add
pop
fcomi
popa
or
inc
jmp
pop
lods
jp
int3
mov
fstps
sbb
dec
dec
mov
xor
inc
jb
push
pop
and
negb
ret
scas
adc
add
roll
in
in
lret
cmp
ss
imul
dec
xor
stos
sub
or
mov
into
shll
dec
rolb
adc
jb
scas
jecxz
add
jmp
mov
sti
push
test
lcall
mov
xlat
sbb
push
test
movsb
mov
push
mov
mov
scas
leave
sti
cmp
or
fldt
test
add
push
sbb
and
pusha
ja
or
loop
jle
mov
imul
mov
dec
or
data16
leave
mov
data16
xchg
and
fsubrs
mov
fsts
lods
fsubrl
aam
js
in
in
jge
mov
mov
stos
xor
loopne
and
into
mov
test
fwait
inc
dec
inc
mov
xchg
ret
mov
daa
adc
cmp
pop
sbb
pop
cwtl
push
addr16
xchg
push
push
push
cmp
iret
fs
popf
out
mov
loop
mov
clc
jno
test
mov
daa
adc
xchg
int3
mov
add
dec
movsl
sbb
bound
orb
xor
pop
and
shl
mov
pop
dec
rcrb
fstl
finit
and
dec
pop
mov
rol
add
inc
xchg
pushf
dec
and
mov
mov
mov
cs
jg
jp
icebp
inc
cld
jo
jecxz,pt
mov
lea
ret
enter
sub
leave
aad
int3
outsl
pop
mov
sub
js
pop
jle
aaa
xor
xchg
andb
popf
subb
scas
loope
test
cmp
push
cmc
mov
cmp
adcb
jecxz
stos
dec
and
ljmp
fwait
das
mov
cld
sub
xchg
loop
xor
mov
jle
jp
loop
popf
icebp
add
sub
mov
dec
lods
mov
cwtl
mov
es
lods
cmp
shrb
enter
ja
xchg
stc
and
sbb
sbb
ret
sub
roll
nop
out
jle
jmp
idiv
mov
sub
test
mov
xchg
clc
xchg
cmp
out
sub
popl
insl
dec
gs
xor
pop
repnz
loope
adc
lahf
mov
inc
mov
sbb
out
fnsave
xorl
pop
lahf
pop
pop
and
mov
in
jnp
sub
and
popf
mulb
inc
pop
data16
shl
jmp
cmp
sbb
push
push
out
push
sarb
rclb
sbb
cmpl
add
sub
inc
insb
mov
ljmp
enter
or
jecxz
inc
sbb
cmp
pop
push
dec
xor
cmp
push
imul
mov
lds
sti
xchg
dec
or
xchg
fwait
pop
xor
movsb
lea
xor
dec
or
lods
pop
or
addr16
and
ss
pop
cld
aas
sub
dec
ss
loopne
outsl
ljmp
jo
dec
call
push
adc
add
pop
add
cmp
xor
xor
dec
fs
fistl
sarl
mov
mov
insl
or
insb
xlat
cli
lods
and
inc
rclb
popf
movsl
xor
xor
xchg
inc
and
icebp
scas
adc
scas
dec
lds
popf
lea
scas
mov
sbb
rolb
ficoms
or
lret
stos
cmp
adc
lret
adc
in
adc
pop
dec
cmp
or
sbb
sbb
push
jb
std
xor
jne
and
ficoms
les
imul
xchg
sarl
dec
and
push
fs
aad
dec
insl
jecxz
pop
xor
js
insb
or
lea
stos
stc
out
movsb
inc
sbb
adc
scas
xlat
in
mov
stos
dec
pop
aas
into
cmp
movsb
xchg
js
cmovp
xchg
push
iret
xchg
out
and
jecxz
bound
jb
addl
xchg
out
jecxz
jle
int
push
aad
adc
lret
push
call
outsl
popa
mov
push
inc
dec
jmp
add
roll
nop
and
fs
push
scas
cmp
xchg
mov
scas
daa
push
shl
loop
fcomp
aam
movsl
push
adc
fidivl
imul
jno
dec
repnz
andl
and
sub
xchg
xchg
cli
xor
daa
and
add
sbb
int3
cmc
xchg
jl
sbb
jbe
dec
sub
mov
ja
mov
gs
xor
xchg
jno
sbb
xchg
cld
faddp
push
stos
mov
or
adc
fcmovbe
jno
jo
sub
adc
and
cltd
rcl
cld
cmpsl
outsb
out
loop
push
add
lret
pushf
cmp
push
jb
sub
mov
xor
ficompl
mov
cmp
out
or
shlb
pusha
jecxz
cld
imul
mov
dec
pushf
pop
aam
mov
jmp
cmp
mov
out
fcoml
adc
test
xchg
gs
mov
bnd
lods
mov
std
pop
fcompl
pop
lret
lock
stos
mov
dec
cmpsl
out
ret
xchg
jnp
push
ret
sub
or
xor
dec
insl
inc
jno
inc
jb
xor
or
add
mov
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
mov
mov
xor
mov
jmp
push
sub
fldt
mov
mov
fmuls
sbb
neg
in
inc
xchg
or
sbb
aad
xchg
jns
lea
clc
cmc
dec
loop
mov
sub
loop
or
js
les
pushf
inc
push
or
addr16
mov
add
mov
in
push
inc
movsl
inc
jg
sarb
fs
dec
jb
add
shrb
mov
jecxz
cmp
test
stc
push
sti
js
sbb
mov
je
sbb
data16
mov
xor
fwait
repz
ds
mov
enter
add
mov
cmpsl
push
sahf
lock
fistpll
adc
push
das
cld
xchg
int
xor
aad
aam
xchg
loopne
mov
repnz
sahf
mov
dec
jo,pn
dec
rcll
jle
mov
mov
jbe
das
cmp
push
int3
les
pushl
sahf
mov
and
pop
push
mov
xchg
insl
movsb
cld
inc
sbb
sub
mov
popf
aaa
jns
ss
stos
push
mov
outsl
ss
stos
dec
jo
inc
loop
lcall
xchg
dec
mov
mov
sub
gs
jbe
test
pop
fildll
imul
outsb
lret
clc
and
rcrb
mov
or
pushf
pop
cld
jnp
dec
fiaddl
sub
sub
scas
daa
test
inc
xor
fwait
push
and
call
das
roll
push
jl
lds
sub
fs
in
push
into
or
pop
xchg
xor
nop
and
test
dec
lods
mov
andl
pop
pop
in
arpl
pop
pop
je
leave
aas
push
dec
pause
gs
aas
and
outsb
and
out
sub
inc
and
pop
sbb
outsb
lods
fnsaves
sti
push
push
xlat
sbb
int
mov
out
mov
and
sahf
or
into
inc
push
push
test
xor
mov
push
movb
jne
inc
mov
or
adc
push
push
add
cmpsl
xchg
push
mov
dec
sbb
mov
jp
lcall
mov
xor
pop
jmp
adc
sbb
jnp
or
inc
es
divl
cli
mov
inc
mov
scas
lcall
dec
mov
fwait
sbb
and
mull
lahf
fstl
mov
xor
dec
push
or
enter
jg
cwtl
mov
out
inc
jb
ret
fnstsw
xor
cmc
jmp
ret
ja
add
mov
stc
loop
call
shrd
shr
mov
mov
xor
shl
xor
or
add
mov
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
mov
mov
jmp
imul
fs
leave
leave
jl
cmp
sbb
adc
sbb
pop
jp
pop
arpl
pop
mov
push
test
adc
rclb
call
fldl
fwait
in
inc
cmpsl
jae
cmp
mov
stc
into
cmc
xchg
ret
sbb
pop
push
sahf
loope
lret
xor
mov
dec
add
outsb
add
ja
inc
bound
and
pop
data16
mov
jl
push
xchg
dec
std
pop
sub
cmp
out
pop
in
lock
jae
and
das
jb
inc
jp
rclb
mov
pop
stos
vandnps
mov
cmp
or
popf
sub
or
mov
std
mov
sub
and
jg
jbe
cmp
iret
ficoml
ss
mov
ja
push
mov
sub
pop
mov
gs
jge
movsl
push
cmp
xor
cs
ret
pop
pop
fldenv
sub
cwtl
adc
xor
rorl
inc
jne
inc
sbb
mov
xor
enter
rcr
inc
pop
ret
pop
jno
cmc
les
imul
fdivp
lretw
arpl
or
nop
jmp
adc
or
test
mov
pushf
cmpsb
addb
add
mov
xchg
sahf
cld
mov
sub
repz
insb
scas
jbe
subb
mov
push
shl
xor
cmc
iret
divb
fcmovu
mull
cltd
mov
into
pop
push
jb
test
addl
sbb
mov
shr
inc
rclb
pop
mov
loope
scas
push
out
lret
push
xchg
aam
adc
loope
sbb
ret
iret
es
out
lods
sub
inc
xchg
inc
pop
sbb
sbb
aad
mov
in
xorl
sub
xor
imul
cld
mov
scas
xor
sub
adc
frstor
ret
dec
aad
xchg
movsl
push
pop
jb
int
outsb
aaa
out
xchg
or
in
jl
aas
test
mov
stos
pop
pop
and
lods
movsl
push
lret
mov
xchg
popf
std
outsb
jo
mov
ficompl
and
bound
mov
mov
fucomip
pushf
and
xlat
pushf
int3
mov
outsl
iret
mov
loopne
cmpsl
push
or
and
daa
sub
adcl
lea
loop
jo
stos
divl
andb
nop
fcoms
fdivrl
ja
sbb
dec
inc
stc
call
dec
andl
sbb
jae
lds
arpl
and
sbb
and
sub
sbb
xchg
sbb
jge
lea
push
mov
daa
add
and
or
mov
mov
shrd
shr
mov
mov
xor
xor
or
add
shl
mov
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
mov
mov
add
mov
mov
shrd
shr
mov
mov
xor
xor
or
add
shl
mov
mov
shrd
xor
shr
mov
mov
xor
or
mov
or
shl
jmp
dec
sbb
jmp
dec
mov
jle
jg
sbb
adc
sbb
in
scas
js
sbb
adc
fstp
xchg
mov
add
cmp
imul
ficoml
ss
ljmp
mov
test
mov
jbe
arpl
jae
cld
and
cmp
lahf
cmc
icebp
sbb
push
in
repz
cld
ljmp
pop
cmp
lods
sbb
leave
inc
ja
and
jl
and
dec
movsb
mov
test
out
loopne
in
sbb
sahf
lret
gs
popf
or
fcmovnbe
shrl
outsb
push
mov
mov
ficoms
push
mov
incl
jbe
jbe
xor
mov
in
pshufw
test
pop
aas
add
lret
push
or
cmp
mov
mov
jne
or
mov
movzbl
nop
pop
xchg
sbb
out
jg
shll
inc
xchg
fs
xchg
std
mov
mov
mov
movsl
scas
ret
cld
daa
aaa
mov
mov
cmc
pop
out
sbb
mov
repz
out
jae
xor
pop
cmp
or
mov
addr16
push
jle
test
inc
stc
push
loope
ficoml
out
add
mov
dec
cmpsb
lret
mov
mov
adc
cmpl
mov
jo
xchg
mov
jnp
sarb
push
mov
adc
insl
ljmp
lea
in
cmp
xchg
mov
xchg
movsb
pop
shr
in
js
pop
movsl
xchg
inc
add
mov
push
and
cld
and
mov
pusha
jbe
std
sti
inc
sbb
dec
dec
sbb
mov
icebp
adc
jmp
mov
jp
fwait
push
adc
jp
inc
push
ret
dec
shl
shll
imul
cmpsb
int
in
int3
adc
imul
or
and
and
leave
dec
xchg
and
or
add
fisubs
imul
and
mov
aad
call
stos
inc
dec
pusha
sti
xchg
pop
into
into
inc
mov
aad
xchg
mov
pop
aaa
adc
jge
mov
stos
and
fnstenv
das
aas
nop
push
adc
mov
notl
cmpsl
or
xchg
popf
cmc
icebp
hlt
std
andl
mov
outsb
adc
adc
stc
pusha
mov
in
repnz
fcoms
mov
jno
ss
dec
or
pop
test
xchg
mov
test
aas
pop
dec
outsl
adcb
inc
cmp
xor
in
mov
push
or
mov
mov
mov
repz
punpckhbw
stc
enter
dec
or
lcall
rcr
mov
mov
mov
mov
xor
xor
shrd
xor
or
mov
mov
mov
xor
xor
mov
mov
mov
shrd
shr
shl
jmp
mov
mov
sub
jle
aaa
lahf
jo
jns
sbb
adc
sbb
imul
cs
cmp
adc
and
pushf
push
cmp
movsl
pushf
pusha
pop
or
pop
repnz
aam
lret
and
je
out
rorb
jb
shrb
dec
lret
cmpsl
add
lret
mov
shll
jecxz
sbb
xor
stc
sbbl
dec
loop
mov
push
inc
int
cmp
push
lds
mov
cwtl
mov
dec
mov
mov
jecxz
sub
popa
cmp
ljmp
pop
cmp
push
subb
inc
pop
hlt
inc
cmp
push
test
mov
loope
xchg
mov
loop
scas
lods
mov
ror
int
push
adc
cmpsb
ret
andb
xor
cmp
or
aad
pop
mov
roll
or
aam
cmp
push
jbe
mov
cmp
xor
cmp
aas
xlat
adc
sbb
fwait
dec
jmp
movsl
pop
fcoms
stos
push
rorb
iret
sub
rorb
rcll
cmc
das
mov
call
sbb
dec
stc
sbb
in
mov
xchg
xor
cmc
add
inc
or
pop
call
mov
add
cmc
sti
push
mov
mov
jmp
nop
sahf
pop
fwait
adc
call
jbe
xchg
sub
in
adc
aad
insb
int
mov
xchg
arpl
lret
ds
std
xchg
lcall
adc
xor
mov
jecxz
inc
and
sbb
pop
sub
jmp
xchg
add
fistps
mov
scas
add
mov
aam
cmp
push
sbb
mov
cmpsb
popf
pmaddwd
nop
in
and
sub
je
leave
push
out
jnp
add
test
xor
iret
and
test
fs
and
adc
sbb
adc
jmp
fistps
aaa
fldl
and
stos
scas
lss
clc
mov
lea
mov
movsl
outsb
popf
outsb
push
popa
mov
dec
push
mov
add
xchg
jns
test
subb
test
mov
jl
test
and
jnp
shlb
sahf
jle
lcall
lcall
pop
lods
lods
adc
into
int3
inc
invd
push
nop
add
aaa
pop
jno
imul
sbb
fadds
push
scas
push
sbb
cmpsb
lahf
inc
add
and
mov
xchg
arpl
inc
adc
jge
add
cli
jne
xor
stos
ds
push
and
scas
mov
clc
jl
push
sub
les
loope
ret
add
mov
xor
test
bound
imul
ljmp
push
sbb
testl
add
add
clc
or
mov
shll
xor
mov
mov
mov
xor
or
shr
or
cmp
jne
cmp
jne
jmp
mov
jmp
loope
fidivs
insb
pop
pop
dec
xlat
mov
stc
jae
sbb
adc
sbb
lret
inc
inc
add
inc
ds
mov
sti
or
xor
lret
mov
xor
sbb
or
xor
lcall
aas
cmp
pop
fs
sbb
mov
int3
incb
gs
cmp
cli
testb
add
aas
shrb
jbe
rclb
mov
aaa
sbb
xchg
inc
cwtl
lahf
movsb
movsb
lret
loopne
cmp
aaa
cli
imulb
sbb
jg
fs
cs
xor
push
repnz
fcomps
imul
enter
xor
mov
call
lods
mov
pop
out
and
add
pop
fsubrp
popa
mov
sub
jle
dec
test
adc
inc
aad
insl
sub
ljmp
popf
jb
imul
cmp
add
sub
pusha
shll
add
dec
loopne
clc
cwtl
scas
pop
push
test
mov
push
ds
jle
sahf
mov
lea
sub
por
and
call
je
lea
mov
inc
pop
push
out
sahf
ja
add
pop
cmp
jns
sub
jne
arpl
cmp
fisttpl
add
jecxz
cmp
cmpsl
sahf
pop
mov
testl
leave
mov
cli
lcall
dec
ljmp
scas
sahf
fcompl
cmp
push
jmp
fs
js
mov
lds
lcall
das
mov
xor
scas
cmpsl
mov
shrb
pop
pop
fidivs
rorb
ds
pusha
sahf
es
pushf
idivb
mov
mov
in
mov
lock
aam
fwait
test
rcl
pop
data16
jl
adcl
nop
loopne
in
push
loope
push
insb
add
adc
fnstsw
mov
out
rcrb
mov
xor
addb
rorl
in
xor
sbb
add
cmpsb
ds
add
push
xor
addr16
jmp
pop
adc
jbe
mul
mov
mov
ds
sbb
les
jg
xor
pushf
mov
push
or
jmp
adc
fsub
sete
in
call
add
outsl
mov
inc
sub
in
test
xchg
xchg
loop
add
jmp
movsl
fcompl
xchg
fisubs
sbb
aad
mov
xlat
add
or
pushl
mov
int
idivb
mov
lret
push
add
push
mov
xor
xor
mov
mov
shrd
shr
mov
mov
mov
mov
xor
or
mov
shl
xor
mov
mov
or
mov
push
pushl
push
push
call
mov
mov
jmp
mov
pop
lcall
imul
add
sbb
adc
sbb
shl
fdivs
push
xor
sub
orl
cltd
push
subb
jnp
add
mov
mov
and
ret
sbb
push
sbb
mov
jp
or
ds
cmp
mov
popa
xor
mov
pusha
lea
pop
mov
push
xor
xchg
jecxz
mov
je
dec
mov
cs
out
loop
clc
mov
pop
movl
inc
pop
mov
push
outsl
addb
ret
sbb
mov
pop
shl
stos
fadds
aad
dec
jbe
inc
fcom
or
icebp
in
xor
popf
and
std
mov
iret
mov
jg
sbb
or
mov
inc
shrb
shll
movsl
sub
sbb
and
and
fsubrs
test
mov
push
or
fiaddl
loop
cwtl
mov
test
bound
jo
adc
mov
inc
sub
mov
ljmp
sbb
mov
je
push
or
cmc
test
test
cmp
scas
cmpsb
jae
xchg
ds
lds
sub
mov
push
xor
cmpl
xchg
ds
test
bound
lret
in
jb
pushf
int3
in
and
mov
dec
icebp
pop
ret
and
pop
push
mov
mov
out
dec
dec
dec
xchg
xchg
ja
scas
or
pusha
mov
ds
or
mov
inc
test
mov
mov
lods
js,pt
movsl
push
cmp
sub
or
mov
mov
pop
shrl
cmp
mov
imul
mov
cmp
ficomps
sub
iret
or
xor
dec
mov
test
sub
arpl
leave
movl
cmp
sub
xorl
inc
loope
lods
sbb
mov
mov
inc
test
xchg
es
mov
jns
stc
and
es
les
lar
jp
jp
mov
aam
mov
mov
dec
dec
jns
jl
lret
pop
ret
jbe
mov
insl
adcl
adc
cmp
cmp
push
icebp
mov
in
test
dec
cmp
lods
mov
pop
mov
mov
scas
and
in
les
fs
stos
stos
test
dec
imull
sub
cmp
dec
testl
cmp
fs
and
jo
mov
sbb
add
andb
and
shrd
shr
shr
jmp
and
push
sbb
push
hlt
xchg
mov
and
sbb
inc
cmp
sub
icebp
repnz
cli
les
aad
out
lahf
imul
sbb
movsl
dec
jg
fisubl
int3
jg
xchg
rcrl
mov
loop
dec
fbstp
leave
out
or
cld
push
call
lret
repnz
push
mov
cmp
mov
nop
lcall
xchg
cmp
imul
jg
cmp
and
adc
mov
std
in
insl
mov
fdivrl
fwait
cli
pop
dec
lods
adc
push
sbb
adc
add
xchg
ja
int
xor
mov
sub
lds
push
sub
mov
ljmp
cmp
shlb
sbb
pop
dec
incl
aam
and
pop
jge
xchg
inc
pop
xchg
xchg
xchg
dec
pop
xor
int
outsl
sub
cs
inc
ljmp
mov
fdivrl
sub
inc
mov
daa
jo
sbb
jle
stos
seta
mov
xchg
push
push
mov
xchg
and
fidivs
sub
xchg
out
pop
dec
cltd
int
cmp
mov
pop
ja
cmp
xchg
dec
cmp
add
jae
mov
out
dec
push
dec
cld
adc
pushf
jge
add
out
mov
ret
xchg
xor
mov
fs
push
mov
daa
fdivl
adc
jge
pushf
dec
and
outsl
mov
cmpsb
inc
mov
lcall
mov
add
popa
push
xchg
cwtl
fcos
sbb
in
push
test
mov
cltd
int3
jne
adc
dec
insb
aaa
push
cli
cli
mov
inc
shl
pop
xor
add
mov
imul
ja
fnstsw
rcrb
scas
mov
xchg
into
inc
add
push
jae
mov
ds
mov
stc
pop
imul
es
pop
cmc
dec
insl
outsl
push
and
xchg
nop
inc
leave
lcall
scas
cmp
ja
push
jecxz
mov
movb
mov
jge
hlt
sub
and
pop
pop
sbb
inc
jns
sub
fistl
dec
in
jo
jne
shl
jb
and
test
mov
flds
arpl
ljmp
outsb
inc
jecxz
mov
enter
daa
ss
push
insl
aam
adc
push
jg
xchg
jne
inc
xchg
cmp
jmp
in
add
lahf
mov
mov
aam
in
test
push
cmp
jne
popa
push
ds
mov
and
and
gs
insl
and
sahf
test
movsl
sar
out
scas
into
int
popa
insl
div
mov
sti
xlat
imul
jb
jle
dec
jmp
dec
rclb
mov
in
sahf
int
sbb
pop
sbb
push
push
in
xor
hlt
ja
xor
push
xor
mov
mov
mov
push
push
push
call
shld
shl
jmp
popf
xchg
dec
mulb
sbb
fdivs
daa
stos
adc
sbb
adc
sbb
nop
mov
test
jge
out
scas
ss
push
jge
push
sub
aas
stos
inc
mov
std
jnp
repnz
ja
adc
sub
mov
ss
jecxz
sbb
rcrl
cmp
jecxz
dec
jae
lcall
jnp
adc
inc
sub
dec
repz
add
icebp
scas
sbb
and
mov
sub
pop
popa
mov
xchg
test
inc
cmc
ja
js
jg
rolb
aad
mov
add
in
xor
js
scas
aaa
jbe
aaa
jb
idivb
mov
cmp
pop
jle
out
out
push
push
add
std
or
scas
push
sub
mov
std
std
mov
lea
mov
and
cld
adc
xor
lods
sti
mov
xlat
mov
dec
dec
lahf
and
sbb
repnz
imul
mov
sarb
sub
pop
pushf
jecxz
mov
mov
mov
add
std
mov
mov
mov
lea
mov
adc
jb
out
push
inc
xor
mov
incl
aad
jne
adc
pop
cmp
aas
inc
je
cli
dec
jae
mov
lods
xor
int
cmp
out
jae
sub
sbb
mov
es
push
imulb
sub
dec
sub
mov
cmp
mov
push
sub
adcb
xor
stos
orl
xchg
movsl
addr16
mov
xchg
dec
mov
pop
xorl
and
jg
mov
sub
add
mov
mov
out
aas
add
or
mov
add
sub
stos
inc
sbb
add
inc
mov
push
jecxz
dec
push
xchg
push
movsl
sub
cmp
adc
aaa
and
fisttpll
xchg
or
xchg
jo
out
lahf
sub
push
mov
mov
cli
out
mov
sub
push
dec
xchg
cmp
lret
xor
sub
lock
scas
aad
out
mov
les
adc
ja
clc
or
push
cmp
mov
test
js
pop
inc
outsb
lea
lcall
ret
xchg
mov
or
gs
outsl
push
or
mov
daa
push
add
lods
ret
sbb
or
push
js,pt
xchg
popf
lods
sbb
pop
popf
push
xchg
xlat
inc
and
repz
insl
das
inc
jbe
scas
mov
sbb
lret
hlt
jo
mov
cmp
shlb
sbb
dec
mov
cmc
add
testb
enter
push
mov
jno
mov
sti
mov
adc
mov
or
xor
or
xor
xor
mov
mov
jmp
xlat
cmp
jge
jle
or
sbb
sbb
adc
sbb
inc
xchg
pushf
es
jae
dec
push
jle
rcl
inc
pop
inc
push
mov
mov
rclb
sub
xchg
fsub
xchg
pushf
add
xchg
lret
dec
stos
xor
data16
add
and
xor
sbb
mov
sahf
cli
fcmovb
aad
jbe
shll
push
mov
jb
sahf
push
in
mov
add
in
ret
jo
xchg
jo
xchg
pop
outsb
bound
dec
push
int3
cmp
cld
sub
in
das
pop
jne
or
and
ss
bt
or
rorl
scas
lahf
fdivr
mov
idivl
mov
jne
xorl
mov
push
add
cwtl
adc
sub
sbb
xor
lods
adc
pop
fdivrs
adc
inc
dec
js
or
and
push
insb
and
enter
ja
cld
pop
push
imul
push
lods
push
stc
ja
mov
or
sbb
shll
lea
sub
ljmp
shll
insb
add
lret
push
xor
outsb
sub
insl
xor
fistpll
xor
adc
jno
outsl
or
test
or
out
fucomp
adc
gs
pop
add
sub
and
into
adc
pop
scas
ret
repz
sarb
out
cs
add
daa
addb
or
pop
stos
sbb
jne
jge
decl
mov
cmpb
and
sub
jne
cwtl
cmp
jne
leave
adc
jl
dec
push
stos
ret
mov
sahf
inc
rcll
jge
cmp
or
jns
in
ss
cwtl
js
lret
aad
insl
inc
scas
push
les
mov
inc
out
cs
and
mov
cwtl
stos
rolb
shlb
loope
pop
mov
int
pop
addl
jge
jns
jl
xor
cmp
xchg
stos
or
inc
sbb
sub
les
xchg
stc
push
mov
int
int
aam
loope
repnz
aad
jno
outsb
stos
mov
stc
ja
fisttps
aam
push
mov
fisttpll
shlb
and
cwtl
and
inc
scas
or
jb
movsb
add
xor
movsb
cmp
mov
and
dec
shrl
mov
xor
add
cli
sbb
mov
sub
arpl
mov
mov
xchg
pusha
das
cmp
xor
jecxz
inc
test
mov
inc
popa
lds
adc
inc
stos
jnp
sti
or
dec
sti
adc
movsl
sbb
fisubs
mov
mov
mov
xor
xor
shrd
shr
mov
mov
mov
mov
xor
or
mov
mov
mov
xor
xor
shl
mov
mov
mov
shrd
xor
or
mov
mov
mov
mov
shl
xor
or
shr
xor
or
cmp
jne
cmp
je
pushl
pushl
jmp
fwait
ror
dec
mov
scas
in
mov
and
sbb
adc
sbb
cmpsb
popf
inc
cld
cmp
jo
ljmp
inc
jl
xchg
pop
lods
std
les
rol
sbb
outsl
sbb
in
loop
push
std
push
mov
cmp
clc
dec
xchg
mov
cmp
out
pop
or
popf
arpl
inc
push
inc
add
push
insl
std
test
fmulp
shll
cmp
es
in
pusha
flds
lods
in
pavgw
cmp
mov
push
into
addb
hlt
xchg
fsubs
packssdw
or
das
sub
clc
ss
adc
test
cs
dec
jp
pop
das
jo
ret
std
and
leave
out
inc
testl
test
jge
xchg
or
cmp
aaa
jns
add
add
xchg
sahf
xchg
hlt
add
rcr
or
dec
out
cli
jno
je
subb
lret
jg
pop
xor
mov
orb
sub
cmpsb
std
lea
dec
sar
push
pop
push
mov
sahf
jb
icebp
mov
xlat
les
es
or
cwtl
ss
icebp
cs
push
sub
push
and
push
xchg
adc
push
bound
rolb
pop
out
inc
or
into
out
shlb
push
pop
xlat
and
sbb
or
in
inc
or
push
jbe,pn
sub
inc
and
dec
push
test
enter
pop
lods
ss
jecxz
out
jge
xchg
jne
das
jno
stc
aas
mov
pop
mov
outsl
xchg
pop
inc
cmp
fucomp
lea
clc
mov
data16
repnz
inc
mov
outsl
mov
daa
mov
or
cli
xor
adc
icebp
jb
xorb
insb
mov
das
ja
dec
test
push
test
push
adc
mov
sbb
add
mov
andb
mov
dec
cwtl
mov
scas
test
or
loope
std
fistps
lcall
in
add
aad
insl
sbb
stos
aam
shlb
daa
xchg
cmp
jnp
jnp
pop
xchg
mov
pop
ss
fadd
out
sbb
cli
jl
ret
add
adc
inc
sub
add
jp
mov
bound
in
sbb
jg
sbb
mov
aas
pop
and
jmp
and
cmp
or
pushf
dec
outsl
fxch
sbb
dec
daa
inc
clc
and
mov
incl
fisubs
fstl
test
jne
push
divl
hlt
addb
dec
jae
xchg
push
pop
cmpsb
outsl
popf
mov
out
xor
push
std
fistpll
push
movsb
push
xchg
add
bound
in
mov
ja
adc
pushl
push
push
call
jmp
mov
dec
jb
insl
fnstcw
dec
sbb
and
sbb
ljmp
push
out
add
mov
sub
xor
pop
mov
pusha
cmpsb
adc
sub
xchg
xlat
repnz
mov
int
ror
aam
inc
or
pop
cmc
lock
jge
xchg
bound
shr
in
dec
mov
sub
cmp
stos
cmc
lret
repnz
push
pop
jmp
add
pop
dec
popa
dec
data16
pusha
outsb
pop
out
movsb
movsb
fdivs
dec
and
dec
sahf
aaa
imul
addr16
mov
fdivr
xchg
fisttpl
out
adc
repz
hlt
pop
cs
ss
xchg
rcrb
popa
cmpsb
jae
mov
repnz
jne
sub
out
cmpsl
jle
sub
fwait
enter
fdiv
in
lret
or
call
cwtl
loope
fcompl
std
xor
in
ss
mov
xchg
jmp
cmp
frstpm(287
sub
movsb
push
jae
hlt
sbb
fadd
jg
adc
dec
icebp
popa
scas
mov
shrb
sub
cmpsl
push
enter
sbb
mov
in
adc
push
ljmp
mov
lret
dec
mov
pop
jo
push
fwait
sub
adc
shll
dec
test
inc
aaa
stos
fwait
sbb
dec
sub
int
mov
mov
pop
in
mov
pop
inc
adc
cmp
cmpsl
lock
daa
inc
sub
loopne
hlt
decl
mov
and
or
nop
push
addr16
mov
cli
addr16
adc
imul
fs
inc
in
add
std
and
out
bound
pop
xor
adc
pop
add
jle
outsb
imul
xchg
add
hlt
aad
mov
mov
add
cmc
popf
testb
lods
in
test
mov
sbb
pop
jmp
and
repz
insl
inc
mov
fnstenv
mov
mov
mov
mov
push
or
jo
mov
lret
mov
jnp
add
into
add
xor
push
inc
clc
mov
pop
cmp
lock
incl
ret
mov
sbb
jae
adc
jo
hlt
jae
xchg
int
rorl
enter
out
pusha
cmp
xchg
outsl
push
lds
fcompl
pop
cmc
into
lret
mov
jp
or
push
push
ret
enter
repnz
out
sti
mov
push
in
bound
bound
scas
jmp
shrb
mov
mov
jge
out
push
lret
and
int
adc
or
mov
xlat
pop
bound
imul
aad
outsb
xchg
fwait
dec
cld
mov
xchg
mov
cmpsb
mov
xor
clc
repz
pop
xchg
xlat
popf
jbe
adc
mov
add
add
mov
add
cmp
movl
jae
movl
cmp
movl
jae
sbbl
shrd
movl
shr
ret
mov
xorl
xor
and
shr
ret
xor
xor
ret
push
mov
sub
sub
movl
mov
cmpl
movzbl
mov
movzbl
mov
jmp
mov
mov
jne
pushl
pushl
pushl
push
call
mov
and
xorl
add
not
sbb
adc
mov
movl
mov
movl
cmpl
mov
notl
mov
jmp
mov
mov
jbe
pushl
pushl
push
push
push
pushl
push
call
and
movzwl
add
not
mov
adc
andl
add
mov
sbb
movl
movl
push
movzwl
and
movl
cmpl
movl
mov
movzbl
jmp
movl
movl
jge
push
push
pushl
push
push
call
sbb
incl
xorl
add
movzwl
add
add
movl
xor
add
and
push
or
movl
cmpl
not
mov
jmp
movl
mov
jle
pushl
call
mov
mov
adc
not
sub
sbb
or
incl
mov
cmpl
not
mov
mov
not
jmp
movl
movl
jae
push
push
push
call
add
sub
mov
xor
sbb
neg
mov
push
push
sbbl
push
orl
call
jmp
inc
dec
cmpsb
movsb
lcall
mov
ret
xor
sbb
adc
sbb
pusha
xor
clc
pop
pop
or
bound
test
cmpl
loopne
movsl
or
dec
jnp
mov
xor
mov
imul
mov
adc
pop
call
pop
dec
leave
xchg
sub
push
xchg
adc
jp
mov
xor
cmp
addl
pop
push
lret
or
std
dec
ljmp
sbb
fsub
dec
push
mov
lods
xor
loopne
es
daa
test
loop
out
mov
inc
jecxz
fisttpll
push
pop
add
cmp
mov
mov
or
int
adc
inc
rcl
xor
arpl
mov
xchg
ss
gs
mov
fildll
mov
fs
repnz
in
push
or
push
ror
fucomip
dec
jns
pop
sti
mov
cld
clc
int3
and
push
jnp
lea
and
xor
mov
pop
pop
lea
lret
fmul
data16
bnd
mov
std
push
mov
xor
scas
int
cmpsl
out
sub
mov
and
psllq
jg
xor
mov
push
in
roll
loop
pusha
popa
addl
or
add
pop
dec
rolb
add
leave
repnz
out
je
jb
inc
adc
or
mov
mov
mov
push
je
xchg
add
xor
push
xor
loop
cmp
pushf
mov
cmp
fdivrs
push
dec
ret
fdivs
lock
addr16
push
repnz
add
pop
adcl
cwtl
icebp
or
in
addr16
sbbl
ja
xchg
subb
ljmp
lods
test
and
ja
inc
pushf
jb
mov
call
mov
gs
mov
jae
or
pop
aam
movl
fsts
jae
xlat
loop
jecxz
test
adc
test
rcr
dec
jae
mov
inc
iret
and
clc
je
mov
ret
lock
xchg
sub
cmp
pop
jb
lret
test
or
sbb
mov
outsl
les
mov
test
mov
int
fidivs
push
add
inc
sbb
ror
out
movsb
mov
fcomp
add
push
js
add
sub
sbb
mov
or
test
nop
xor
fimuls
or
stos
stos
mov
push
push
data16
mov
mov
pop
cld
movsl
push
sub
mov
push
mov
adc
into
push
mov
aam
xchg
dec
lods
pop
add
clc
repz
inc
mov
jne
out
mov
and
sbb
and
lods
iret
repz
mov
push
orl
or
push
addl
or
sbbl
xor
xor
push
push
negl
call
mov
cmpl
not
movzwl
notl
jmp
movl
jb
push
pushl
pushl
call
adc
movzwl
or
xor
add
sbb
xor
mov
or
xor
neg
sbbl
mov
adcl
push
adcl
push
movl
push
push
decl
call
cmpl
mov
mov
jmp
movl
jae
pushl
call
sub
subl
xor
sbbl
sub
or
xorl
jmp
mov
sbb
sbb
sub
movsl
jae
jl
inc
sbb
add
sbb
je
loopne
cmp
add
mov
jae
in
cli
fidivl
pop
mov
cmp
les
jo
add
sti
in
mov
push
push
push
inc
mov
adc
scas
inc
inc
popf
inc
or
push
add
adcl
imul
fwait
mov
add
sbbl
cmp
pop
add
dec
call
xchg
xchg
fildl
add
add
push
dec
jae
and
insb
in
repz
sbb
cmpsb
adc
imul
loop
sub
sub
pop
sbb
mov
lea
jge
mov
adc
fstp
cmpsl
jns
sarb
aam
mov
je
loopne
movl
sub
jb
add
testl
or
fwait
sbb
es
pop
fcmovnbe
mov
pop
loop
and
mov
cmpsl
mov
or
jle
ror
pop
dec
inc
mov
lcall
sbb
test
xchg
lock
iret
jbe
xchg
pop
ret
push
sub
lds
imul
inc
adc
push
or
shlb
popa
pop
mov
jge,pt
dec
cmp
push
insb
ds
mov
pop
xchg
push
pusha
loopne
negb
jg
std
lea
dec
andb
mov
xor
push
or
xor
mov
fidivrl
stc
dec
xlat
inc
stc
std
mov
mov
and
mov
jno
inc
aaa
fistpll
mov
pop
repnz
cmpl
idiv
and
mov
cli
out
mov
or
lock
pop
std
sarl
xor
cmp
push
mov
dec
pop
test
pop
mov
iret
add
cmpsb
xor
pop
lahf
jbe
inc
in
mov
test
sub
pusha
jmp
mov
jne
mov
jae
sbb
hlt
fimuls
sti
dec
xlat
xchg
popl
pop
pop
jb
xchg
outsl
leave
cmp
sbb
out
ret
jne
das
push
jp
xchg
bnd
std
adc
pushf
movsl
shl
es
aad
cmc
push
xchg
add
hlt
and
mov
imul
xor
mov
loop
sbb
iret
lods
ret
incl
out
xchg
push
addr16
inc
mov
mov
adc
xchg
loopne,pn
subl
push
inc
adc
sbb
xchg
xchg
insb
jl
inc
dec
andl
mov
xchg
mov
sub
add
mov
int3
bound
je
fstpl
mov
push
popf
stos
jp
dec
data16
inc
js
aaa
adc
dec
pushf
out
out
sahf
mov
popf
scas
adc
xorb
sub
inc
rorb
lock
add
movl
movl
movl
movl
movl
mov
mov
mov
mov
add
adc
or
mov
or
mov
or
mov
or
mov
or
or
jmp
add
pop
mov
and
scas
mov
cmp
sbb
xchg
iret
js
mov
inc
jne
xchg
add
into
adc
movsl
mov
aaa
jo
mov
lods
cmpsl
cmp
and
jne
mov
shrb
imul
pop
sbb
inc
fidivs
sbb
mov
pop
pushf
push
add
sbb
cmp
bound
xor
addr16
fsubrl
std
sub
jp
xor
push
xlat
push
xchg
ja
aaa
mov
push
jecxz
jae
jmp
sub
jecxz
xor
test
cs
xchg
push
imul
test
push
lods
cmpsl
mov
sbb
fnstenv
test
push
sbb
mov
mov
xor
push
ja
push
jp
andb
ret
adc
pop
aaa
xchg
popa
and
cmp
data16
inc
push
mov
jo
xchg
or
xchg
mov
mov
jnp
xchg
mov
outsb
ds
push
adc
sbb
loop
stc
mov
jno
xchg
xchg
scas
outsl
mov
into
orb
fucomi
and
scas
iret
mov
xchg
jbe
cmpsb
sbb
cmpsl
ss
popa
push
mov
xor
jp
and
roll
sarb
jmp
sbb
les
jb
rclb
xchg
pop
mov
inc
xor
mov
push
and
add
sub
add
rcrb
add
sbb
std
sbb
fistps
add
fcoms
inc
push
lret
in
mov
inc
push
add
outsl
aad
int3
adc
push
push
inc
xor
cmpsl
loope
and
push
add
clc
daa
mov
push
mov
repnz
adc
xchg
fs
in
sub
cmp
add
inc
adc
loopne
scas
repz
pushf
or
insb
push
jg
jae
or
push
dec
push
imul
mov
popa
jns
rcl
fwait
js
imul
mov
jae
pop
sub
sbb
xchg
sub
dec
fs
in
incl
les
sub
dec
pushf
jnp
push
stos
lods
jne
rcl
shl
pop
cltd
add
inc
lret
pop
cmc
lods
movsb
sbb
adc
icebp
push
cmp
sbb
cmp
insl
dec
dec
jo
xchg
dec
insl
mov
dec
mov
sbb
roll
mov
test
nop
xlat
sbb
repnz
filds
cmp
aad
jae
mull
cmp
divb
xchg
cmc
rclb
mov
sbb
mov
xor
test
add
adc
out
or
call
xlat
test
ss
js
fs
sbb
pop
cmp
jne
cmp
je
movl
movl
mov
mov
xor
xor
and
jmp
xor
jne
insb
sbb
push
out
int3
or
mov
call
adc
sbb
xchg
loopne
add
int
pop
gs
fsubrl
and
dec
rol
cltd
cmp
xchg
in
call
out
lock
add
push
jno
sbb
inc
adc
or
aas
xchg
inc
loop
imul
cmpl
xchg
sub
bound
in
sbb
mov
mov
jb
add
cmc
sti
mov
clc
aad
sub
dec
xchg
inc
rcrb
or
or
out
sbb
push
imul
cmp
lcall
mov
mov
sbb
daa
jbe
ljmp
sub
sub
ss
cld
enter
sub
mov
sahf
push
movsb
jns
and
loop
mov
mov
sbb
xchg
lock
cmp
shl
imul
dec
les
clc
push
incl
lret
movb
fsubr
out
and
add
lods
outsl
aam
push
int
jns
int3
sbb
jns
pop
popa
arpl
jmp
and
sbb
jae
jle
jp
fcompl
aam
fimuls
pop
mov
sub
jmp
jmp
jge
outsl
pop
fsubl
push
loope
fwait
pop
pushf
and
sbb
sbb
lds
jle
movsb
adc
jmp
inc
int3
mov
cmp
dec
pop
rcrl
jle
cmp
pop
sbb
stc
movsb
sub
xchg
xchg
sub
mov
xchg
mov
dec
sub
fs
pop
cmp
push
lods
xor
icebp
test
mov
ror
cltd
jnp
aam
push
fcomi
es
dec
jge
xorb
sub
ljmp
xchg
jg
mov
scas
mov
xlat
sub
subl
shl
in
stos
fidivs
sbbb
pop
dec
adc
adc
and
mov
xchg
sub
xlat
xor
das
leave
adc
push
jmp
addr16
ret
arpl
test
cmp
icebp
gs
fs
clc
and
pop
push
in
fldenv
pop
lret
popa
push
hlt
dec
mov
imulb
subb
sbb
repnz
mov
push
sarb
pop
nop
sbb
fsub
dec
mov
xor
sbb
sub
inc
cmp
cwtl
add
mov
in
out
fstpl
cmp
testb
sahf
ljmp
rcll
inc
mov
fdivr
dec
call
notb
cli
test
aam
popf
loop
push
mov
insb
and
push
cmp
rcrb
imul
and
ret
sbb
loopne
or
mov
enter
or
or
push
pop
test
push
lock
ljmp
bound
add
hlt
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
add
mov
adc
mov
add
adc
xor
xor
add
mov
adc
mov
cmp
jne
cmp
je
movl
movl
movl
push
movl
mov
mov
jmp
in
mov
sub
push
xor
xor
sbb
adc
sbb
fadds
rcl
jne
ror
mov
out
xchg
add
cmp
stos
push
out
jnp
pop
mov
mov
push
and
popa
sti
mov
sub
mov
fsub
add
ret
out
jo
dec
pop
lock
sub
pop
mov
cld
mov
xchg
mov
in
test
inc
in
call
scas
adc
cltd
in
inc
orb
mov
sub
push
fs
push
jbe
jbe
lret
shll
fstpt
sub
sub
cmpl
andl
sub
xor
or
xchg
xor
mov
jg
and
daa
xlat
fistl
push
pop
xchg
adc
and
mov
add
mov
cmp
adc
dec
insl
and
mov
adc
jbe
inc
fnstenv
daa
stos
test
sbb
shlb
std
dec
ss
mov
mov
outsl
inc
ljmp
or
js
mov
int
or
cmpsl
popf
test
repnz
xchg
xor
mov
andb
mov
cmp
xor
adc
fsub
jb
into
push
divl
arpl
pop
sarb
loope
mov
cld
pop
jbe
mov
iret
xor
es
ficompl
movsb
lea
cwtl
cmpsb
push
cmp
jg
jae
clc
sbb
pop
int
mov
push
inc
stc
push
xlat
insl
shll
jae
add
sub
cmp
imul
add
mov
pop
stos
jo
test
dec
cmp
fcomps
fiadds
out
mov
cs
es
jne
jnp
push
fcmovb
fnstcw
pop
push
mov
push
xor
xchg
clc
stc
stos
das
mov
clc
shlb
sbb
mov
mov
pop
inc
jo
mov
outsl
mov
pop
pop
xor
jno
inc
jge
adc
mov
rol
fstpt
mov
or
movsb
sbb
mov
mov
stos
aaa
jns
pop
mov
ret
es
stc
push
inc
sbb
subb
inc
hlt
jns
ja
test
popf
xchg
or
mov
xor
mov
int
xchg
insb
xchg
ret
pop
imul
in
and
push
xor
sbb
popa
pop
outsl
cs
push
ficoml
cwtl
push
test
test
jmp
popf
sbb
idivl
repnz
subl
ficoms
pop
pop
xor
repz
mov
pop
out
es
adcb
arpl
jg
or
add
mov
mov
jl
add
sub
add
add
push
sbb
ja
mov
sub
sbb
adc
sbb
sub
pop
mov
sbb
out
dec
mov
fwait
add
in
push
in
mov
cli
pop
push
sub
int3
jnp
pop
loop
out
xor
cmp
sti
mov
lret
ja
mov
test
data16
xchg
push
fstpt
pcmpeqd
push
fwait
ljmp
pop
push
cmp
push
mov
lret
test
mov
jg
mov
fsubl
cmp
push
imulb
enter
lahf
shrb
movsl
push
pop
push
cmp
mov
jecxz
adc
fsubrs
mov
and
jmp
sbb
aad
repnz
dec
ja
xchg
insl
loopne
xchg
inc
insl
fmul
lods
mov
outsl
push
popa
dec
into
xchg
inc
cmpsl
sahf
dec
xor
iret
jne
xchg
lcall
cmp
loope
jb
push
push
subl
push
mov
test
xor
cmp
jne
clc
inc
inc
loop
fidivs
fsubs
loop
fldl
mov
and
mov
insl
xchg
pop
call
xor
cmp
cltd
xlat
out
xchg
sub
lea
sbb
scas
stos
fs
lods
inc
inc
sub
lods
inc
mov
pop
fildll
pusha
sbb
push
js
xchg
ret
mov
dec
arpl
scas
js
sbb
jnp
xchg
push
jp
add
sti
push
imul
mov
int3
pop
stc
cmp
dec
outsl
jnp
fwait
clc
or
jl
mov
mov
mov
movsl
rcr
icebp
xchg
scas
iret
lahf
dec
subb
out
shlb
push
imul
aam
and
sub
jbe
xor
out
ret
mov
mov
adc
add
jmp
cmp
fsubrl
pushf
lea
lds
push
test
xchg
sbb
fiaddl
xchg
int
lret
push
jbe
push
dec
mov
pop
arpl
mov
xor
inc
sbb
sahf
add
adcl
std
negl
mov
jge
cmp
dec
and
lods
mov
pop
mov
sub
push
sub
mov
mov
decb
enter
aaa
out
adc
xor
in
mov
ljmp
sub
or
mov
xchg
xchg
out
adc
stos
pop
stos
in
outsl
dec
and
jl
movsb
or
inc
sub
inc
mov
scas
push
add
dec
inc
negb
or
mov
ret
scas
leave
ret
or
fdivl
mov
push
jo
mov
mov
popa
clc
inc
adc
jbe
fcmovu
loop
push
test
mov
pop
mov
jb
jns
subl
push
add
lods
popa
js
push
jp
je
imul
dec
jp
mov
incb
jo
dec
lcall
arpl
repz
pop
imul
push
dec
fmuls
mov
int
add
and
push
jmp
addr16
bound
mov
jmp
sbb
add
sbb
add
or
mov
xchg
dec
je
rcr
push
adc
or
adcl
and
inc
es
inc
cmp
mov
out
jecxz
fimull
movsb
aad
or
jbe
mov
and
jbe
jns
cmp
push
lret
dec
leave
xchg
jmp
clc
iret
mov
mov
out
shlb
fildl
out
rclb
dec
insl
arpl
adc
dec
dec
adc
movsl
pop
mov
lahf
mov
jns
push
ds
cmp
and
clc
mov
sti
dec
xchg
test
aaa
mov
test
imul
orl
stc
jb
je
inc
jl
xchg
push
ja
idiv
xchg
ds
lret
and
push
push
test
or
or
cmpsl
push
push
mov
test
jno
stc
xchg
popf
xchg
out
cmp
or
dec
stc
cwtl
sub
xlat
mov
and
xorl
dec
mov
in
pop
jo
or
stc
push
aaa
mov
rcrb
sti
mov
dec
sti
push
mov
or
mov
jae
push
lret
cmpsb
pusha
mov
cmc
pop
aas
inc
inc
test
lahf
popf
add
push
mov
pop
add
inc
int
popa
mov
pop
or
shrd
push
cmp
jmp
or
lods
int3
push
push
push
add
mov
movb
iret
cwtl
fmul
mov
and
sbb
loope
imulb
dec
add
and
push
jo
inc
cmpb
jae
adc
fldcw
shlb
or
aaa
loope
sbb
and
inc
dec
inc
das
fldl
clc
dec
dec
addr16
mov
pop
dec
nop
cmp
aas
ja
test
sbb
rolb
cmp
imul
sbb
data16
cmp
lahf
xchg
xchg
xor
push
jle
in
andb
inc
and
cs
aas
leave
ja
or
jmp
mov
sub
in
pop
aas
or
mov
cmc
xor
cmp
mov
cmp
fists
mulb
push
pop
js
sbb
jne
jbe
jecxz
dec
sbbb
cmc
in
mov
subl
sub
sahf
push
popl
rorl
push
xchg
fs
clc
lds
hlt
test
mov
sub
mov
bound
les
xor
push
repz
xorl
xor
jecxz
or
and
dec
and
add
jns
dec
cmp
jl
or
lods
add
and
lret
repnz
add
dec
gs
cmp
cmpsb
or
cmp
sbb
mov
aad
movsl
push
xlat
das
daa
mov
jb
jns
int
inc
call
and
push
aam
add
mov
mov
mov
cmp
jne
mov
mov
mov
mov
shrd
shl
mov
mov
shr
xor
mov
xor
or
mov
mov
jmp
rcr
sub
sbb
loope
scas
mov
movsl
or
pop
sbb
add
sbb
fbstp
in
shrb
add
hlt
scas
scas
flds
xchg
imul
mov
cmp
nop
dec
repnz
ret
add
lds
push
out
ds
popf
ljmp
insl
jge
xchg
out
insb
clc
aas
dec
shl
out
bound
and
push
clc
frstor
repz
jne
xchg
les
sbb
jo
push
mov
and
test
popf
mov
mov
daa
cltd
jbe
inc
int
adc
xor
mov
xchg
arpl
push
test
lcall
loope
call
pushf
fwait
mov
insl
incl
xchg
lahf
cld
lahf
pop
fs
dec
xchg
lcall
lret
dec
or
push
pop
in
je
inc
and
inc
sbb
ds
shr
sahf
sub
jmp
adc
shll
xchg
mov
sahf
mov
add
lods
inc
imul
scas
xor
fcomi
push
lods
and
xor
stos
std
inc
dec
mov
xor
add
cmp
das
mov
push
inc
out
inc
lret
mov
xchg
out
fldl
jno
int
mov
pop
cltd
cs
loop
dec
inc
fsub
into
mov
ret
arpl
es
adc
imul
nop
test
cwtl
roll
push
sub
orb
cmpsb
icebp
outsl
outsl
cmp
or
sbb
dec
xchg
hlt
test
mov
ret
xchg
fldl
push
test
jbe
lcall
inc
or
pusha
divl
fcomps
or
sub
ret
test
in
mov
mov
sbb
stos
clc
lock
std
xor
adc
xchg
cmc
ret
cmc
test
push
xor
and
sub
out
fists
lods
pop
lahf
push
mov
out
xlat
fs
pushf
push
xchg
sub
dec
imul
ret
out
pop
fisttpl
xor
inc
sar
outsl
pop
cld
xor
fimull
testl
test
je
fisubrs
adc
sbb
pop
daa
or
stos
fidivrs
dec
push
fwait
and
mov
fwait
lods
xchg
scas
mov
dec
xchg
aas
push
push
xchg
sub
fldl
adc
mov
sub
push
add
lods
cmpb
push
negb
push
pop
lock
or
cmc
xor
dec
aaa
jae
loope
mov
xor
aam
add
mov
cltd
test
popf
ja
out
lock
fcomps
and
adc
loop
popa
sbb
or
or
mov
clc
nop
inc
inc
jg
addr16
sbb
out
sbb
loopne
mov
repnz
xchg
xor
jne
clc
inc
push
push
or
sbb
push
in
shrd
shr
mov
mov
xor
xor
or
mov
movb
movb
movzbl
jmp
adc
nop
dec
mov
mov
add
sbb
push
push
mov
inc
fldt
add
pop
xchg
mov
push
fidivrs
jg
mov
in
sub
mov
cmp
sar
in
pushf
idivl
les
iret
xchg
jae
out
int3
ds
mov
inc
es
mov
fbstp
mov
lret
mov
loop
cmp
mov
mov
mov
scas
sub
lret
lahf
cmp
mov
shlb
or
adcl
test
lcall
mov
push
insb
clc
arpl
imull
adc
add
jg
ficoms
dec
jne
fldenv
xchg
fidivrl
lcall
jb
shr
push
mov
jp
lock
adc
sbb
and
aas
in
jnp
dec
dec
int
in
xchg
inc
ljmp
xor
cmp
or
sbb
cmp
outsb
mov
mov
xchg
cwtl
data16
ljmp
add
inc
ret
mov
bound
fwait
dec
pop
mov
ja
repz
ljmp
fistps
inc
pop
sbbl
push
add
in
push
out
and
mov
adc
enter
mov
sub
es
dec
pop
pop
movsl
lods
cwtl
push
iret
in
das
pop
adc
pop
in
inc
dec
xor
dec
movsb
jecxz
push
and
jo
xchg
pusha
push
lcall
stos
icebp
sbb
outsb
ret
es
sub
adc
cltd
test
shl
xor
insb
loopne
fdivs
test
sbb
dec
jp
pop
or
mov
xorb
dec
notl
push
lods
imul
mov
jo
sub
test
arpl
jae
lcall
and
push
pop
clc
fildll
mov
int
pop
jg
insl
adc
adc
add
inc
xchg
pushf
or
iret
cmp
adc
dec
xchg
ja
mov
jl
mov
leave
mov
mov
mov
stos
xor
outsb
mov
daa
mov
or
faddl
cmpb
jnp
mov
jo
sub
test
loope
and
lods
cmp
jmp
jne
in
push
pushf
testl
push
xor
cmp
mov
sub
adc
and
xorl
out
inc
inc
fs
stc
jg
shl
xchg
fiadds
xor
aas
jp
xor
cld
hlt
es
inc
mov
push
cmp
xchg
or
push
cmp
lods
jnp
jno
add
mov
pop
push
jle
cld
out
pop
jg
jae
out
sbb
out
and
mov
inc
into
in
and
movsl
repnz
daa
mov
shl
mov
xor
add
push
add
mov
movb
pop
mov
movb
mov
movzbl
cltd
idiv
mov
add
mov
or
mov
add
cmp
jae
mov
mov
shrd
xor
mov
shr
mov
xor
shl
or
jmp
push
test
and
inc
ja
jo
adc
sbb
adc
sbb
fidivl
ret
xor
shrl
add
sbb
lret
fmul
cmp
mov
adc
jp
call
scas
test
shl
inc
ror
std
bound
dec
shl
mov
and
addr16
stc
pop
sahf
rclb
idivl
in
pop
flds
cmp
jnp
call
sti
push
mov
inc
out
cmc
inc
cs
das
mov
loop
xor
mov
test
inc
pop
jne
inc
pop
cmp
push
push
or
call
adc
mov
adc
jle
lret
cmpsl
lahf
xchg
cmp
negb
fiaddl
aam
mov
lock
mov
addr16
jecxz
hlt
shrl
mov
adc
inc
lcall
push
clc
lods
inc
clc
fcmovne
jno
xchg
pusha
or
sbb
test
inc
ss
sbb
lcall
test
shl
push
dec
xor
mov
mov
push
or
test
xchg
mov
or
inc
xchg
insl
jne
shlb
pop
sbb
jg
hlt
pop
inc
mov
xor
dec
adc
mov
movsb
sbb
adc
dec
enter
ficoml
add
and
pop
nop
jg
in
cmc
repnz
mov
jg
stos
pusha
sbb
mov
inc
das
add
cs
ret
adc
sub
mov
sub
jge
lods
movsb
inc
aam
loopne
subl
jle
mov
sbb
testl
lods
fsubs
outsb
mov
fwait
jle
repz
addr16
pop
cmp
mov
flds
dec
jae
fnstenv
pop
imul
nop
and
fnstcw
loop
add
inc
and
cmp
or
inc
jl
xor
adc
cld
pusha
mov
mov
prefetcht2
cltd
mov
cld
mov
push
imul
sub
and
jl
test
inc
aad
adc
mov
imul
jmp
shll
jmp
jp
dec
shrl
out
mov
or
js
mov
fcompl
popf
nop
xchg
mov
mov
leave
fs
fcmovnbe
movsb
push
dec
xor
jl
bound
mov
cmp
outsb
shlb
push
jp
xor
inc
das
or
orl
mov
popa
lods
cwtl
mov
mov
scas
test
nop
add
pop
jb
push
cmp
sbb
jl
mov
mov
xor
adc
das
push
cmpsb
cmp
or
test
adc
jp
dec
xchg
inc
pop
cmpsl
mov
pop
test
xor
es
add
ret
push
mov
sub
push
push
push
movl
jmp
push
lods
pop
inc
lret
jo
mov
sbb
test
sbb
adc
clc
cmp
jp
in
fcoms
inc
xchg
push
or
jae
push
lret
jl
pop
push
gs
daa
inc
xor
sub
jle
gs
sub
dec
lcall
jmp
shl
pop
inc
jmp
cmp
daa
bound
cmp
xchg
and
es
clc
not
adc
xchg
jmp
inc
lret
stos
sub
loop
rcll
dec
aad
dec
jmp
pop
jae
jl
sub
xchg
pop
mov
add
pop
sub
lret
in
pop
popf
mov
movsb
fstl
in
cmp
mov
pop
pop
mov
or
pop
lods
iret
cmpl
dec
std
lcall
jb
ja
mov
sbb
cli
and
popf
xchg
jge
dec
xchg
ljmp
dec
out
push
jmp
dec
or
mov
inc
stos
lahf
inc
sahf
mov
lahf
or
loop
outsl
sbbb
ss
xchg
dec
loop
lea
repnz
and
outsb
cs
push
mov
xsaves
out
push
dec
out
insb
xor
pop
lahf
ja
mov
int3
jb
sbb
push
test
outsb
and
loopne
jmp
xor
inc
xchg
out
sbb
leave
fbstp
fcomps
cld
dec
enter
push
xchg
pop
mov
js
sub
xor
inc
daa
sub
repz
repz
fldt
bound
xlat
arpl
or
mov
inc
and
ljmp
sub
add
js
stos
or
push
and
mov
lods
test
stos
xchg
inc
fs
call
sbb
imul
daa
inc
push
pop
mov
add
mov
andb
add
xorl
imul
add
mov
adc
jecxz
fstl
pusha
mov
lret
mov
insl
fsts
subl
adc
lods
pop
mov
mov
pop
push
push
popf
mov
adc
adc
add
jp
xor
push
jnp
adc
scas
add
pop
testb
outsb
xor
mov
mov
xchg
ficomps
jbe
leave
rclb
pop
call
rolb
loopne
inc
iret
mov
mov
pop
iret
sbb
sar
mov
adc
in
push
lret
lods
mov
in
clc
sbb
add
xchg
mov
fisubl
mov
pop
mov
inc
cld
es
add
movl
movl
movl
movl
movl
movl
xor
inc
mov
movl
mov
mov
sub
add
add
imul
add
xor
movl
movl
movl
movl
mov
or
add
mov
and
mov
sub
mov
mov
mov
add
or
jmp
xchg
jne
je
es
je
mov
xor
rolb
sbb
test
sbb
push
jnp
divl
ret
repnz
out
pop
sbb
cltd
sub
lods
mov
pushw
pop
lock
cmpsb
ret
mov
jg
mov
mov
es
in
sahf
nop
fisubl
sub
inc
ja
adc
jge
mov
push
mov
xor
icebp
popa
jo
xchg
xlat
cmc
movsl
and
push
mov
fwait
out
dec
pop
lods
xor
call
mov
fildl
adc
dec
out
je
push
xchg
pop
mov
xchg
mov
xor
sub
rorl
jg
jp
hlt
fs
push
add
cs
aam
dec
adc
ret
xchg
cmpsl
nop
push
mov
adc
inc
adc
xor
popf
out
flds
sbbb
add
sbb
mov
sbb
aam
dec
mov
jnp
daa
mov
scas
fisttpll
or
shrb
jno
mov
push
mov
pop
decl
pop
mov
pop
or
insl
jnp
mov
sub
xchg
in
addb
ret
aaa
jle
and
lods
rorl
jge
cwtl
jo
mov
push
arpl
lock
enter
mov
adc
add
add
sbb
xchg
dec
pusha
sub
pop
movsl
cmp
or
movsb
mov
or
clc
test
test
mov
jge
scas
das
lahf
jbe
int
sahf
adc
and
decl
cmpsb
push
sbbb
movsl
jl
xorb
out
jnp
insl
dec
and
cmpsb
mov
std
lods
sub
push
dec
adc
push
into
imul
xchg
orb
test
mov
sti
je
adc
call
mov
xchg
inc
mov
mov
imul
mov
and
or
insl
enter
and
pop
xor
insb
add
test
scas
sbb
test
cmp
scas
daa
mov
mov
push
fs
and
jge
mov
jnp
lea
sub
mov
imul
ja,pn
mov
mov
add
imul
outsl
dec
test
out
loopne
in
add
xchg
lcall
call
add
loopne
shlb
repnz
out
lret
lret
lahf
movsb
aad
dec
imull
in
cli
xchg
fistps
pop
mov
inc
jo
add
sub
mov
mov
mov
mov
mov
and
xor
xor
div
lea
mov
add
mov
jmp
pop
dec
ficoms
daa
ss
push
div
push
add
sbb
fs
xchg
insb
sbb
dec
inc
xor
out
or
mov
push
lcall
and
inc
aas
ja
das
ret
pop
popa
sahf
fwait
push
jne
add
dec
push
int
pop
inc
xor
xor
das
fwait
in
xchg
mov
mov
rcrl
cmc
out
dec
daa
xor
rol
and
shlb
add
rcrl
mov
fwait
pop
arpl
pop
lret
stc
lahf
mov
out
jmp
pop
lahf
dec
adc
div
loope
inc
aam
push
filds
pop
clc
scas
nop
mov
shr
cmp
push
bnd
std
xchg
add
mov
jle
xor
fmull
aaa
in
insl
out
mov
cld
arpl
stos
lods
mov
sub
leave
mov
mov
cli
subb
js
rolb
push
or
sub
cmp
jmp
movsb
sbb
fildll
nop
lock
ja
cmp
pop
fistpl
vpsubsw
pop
cmp
rclb
sbb
jecxz
aad
lret
dec
sub
jae
incb
popa
fmull
leave
repnz
pop
jne
incb
ss
imul
loop
inc
flds
ljmp
into
in
and
cmpl
and
cmp
lods
scas
cwtl
je
add
cli
xchg
shr
jne
les
hlt
aas
sub
lea
dec
mov
xchg
cld
cs
bound
push
push
mov
inc
mov
out
aaa
add
push
push
mov
mov
test
xor
fstpl
shlb
or
mov
and
daa
sbb
rcrl
imul
imul
xchg
leave
popf
jae
sbbl
std
xchg
cmp
push
xchg
jecxz
dec
jge
sbb
xchg
mov
push
imul
cmp
nop
mov
out
out
sbb
test
push
jl
push
xchg
add
cs
xchg
push
xchg
dec
mov
hlt
jp
lock
jg
push
sti
sub
jl
aas
xor
lock
out
jmp
sar
add
sbb
mov
lret
js
xor
sbb
sbb
add
mov
add
xor
mov
cs
mov
jl
push
sbb
mov
inc
jns
and
xlat
mov
sub
test
push
in
xchg
orl
int3
mov
mov
adc
cmpsl
mov
call
xor
jle
outsb
pop
test
sbb
aaa
pop
xor
sbb
fnstenv
jecxz
push
and
mov
imul
mov
sub
cmp
jbe
push
pop
mov
mov
movl
movl
movl
mov
movl
movl
xor
movl
mov
mov
sub
div
mov
xor
mov
div
mov
xor
div
xor
mov
mov
imul
mov
add
div
mov
mov
sub
sub
xor
div
mov
add
cmp
jae
jmp
sbb
dec
push
dec
and
and
pusha
arpl
adc
sbb
xor
push
insb
xor
out
xor
aad
mov
scas
and
test
insl
sub
pop
clc
cmp
xchg
out
or
adc
pushf
call
jp
mov
xor
shl
add
xor
adc
inc
adc
lock
out
mov
popa
mov
jl
jecxz
outsl
dec
cld
aam
xor
push
inc
or
rcrb
mov
sbb
enter
push
addr16
sub
test
add
je
lods
mov
outsb
aas
pop
repnz
mov
jnp
loopne
in
pusha
loop
dec
jnp
insl
ja
mov
mov
mov
jno
lock
lret
pop
mov
jno
mov
xchg
push
ljmp
pop
leave
lcall
and
jg
lahf
int3
das
insb
cmp
push
xorb
add
pushf
pop
lret
sub
in
loop
pop
fcmovnb
mov
jb
and
in
mov
push
inc
je
cmc
mov
ror
mov
das
push
sbb
sbb
fdivrl
sub
fwait
cmpsb
jno
and
testb
lcall
into
add
movntq
lret
xor
add
cwtl
lods
sbb
pop
div
mov
clc
adc
sbb
mov
rsqrtps
fcoms
popf
test
pop
xor
or
out
mov
xchg
incl
push
mov
inc
xor
test
dec
mov
mov
pop
mov
dec
fstpl
mov
popf
cltd
adc
jg
mov
or
aas
clc
cli
mov
inc
mov
push
into
aaa
inc
mov
faddp
push
pop
int
lret
imul
sbb
jl
call
push
sti
mov
lret
jle
pop
xchg
xor
or
xchg
sbb
inc
xor
ret
or
or
std
mov
cmpsb
lods
dec
add
popa
inc
jo
loope
xor
push
cs
jge
jge
pop
cmpsb
cmp
in
outsb
gs
adc
push
inc
adc
loop
stc
lcall
out
inc
push
sbb
lods
bnd
pushf
mov
pop
mov
jo
mov
cld
fstps
push
sbb
mov
fmul
int
and
enter
jle
fistpll
shrl
adc
push
cld
jp
and
xlat
push
sbb
jecxz
test
or
movl
movl
movl
movl
jmp
push
mov
fistpl
cmpsl
add
sbb
test
sbb
mov
and
cli
sahf
jp
mov
or
ret
hlt
or
jb
add
outsl
jbe
mov
mov
sbbl
cltd
icebp
or
adc
lock
push
clc
push
je,pn
sbb
js
sbb
stos
fnstsw
pop
lds
or
push
pop
fstps
rclb
pop
into
jmp
pushf
sbb
rcrb
sbb
scas
mov
adc
push
into
cmp
fcomip
adc
movsl
adc
jge
lret
mov
sahf
or
lcall
mov
mov
ja
sbb
mov
mov
dec
or
cmp
inc
add
repz
fcomps
rcl
mov
popa
push
flds
jns
arpl
jecxz
mov
sbb
cmpsb
loopne
int3
dec
jo
pop
inc
or
mov
test
pop
dec
sub
ret
test
fsubrs
cmc
das
cltd
rorl
mov
fmul
add
movsb
xor
sti
mov
aad
scas
test
push
mov
jb
ds
jg
push
insb
int3
add
in
cmp
adc
icebp
mov
xor
mov
mov
stc
lret
sbb
lret
xchg
push
sbb
je
mov
mov
pop
push
pop
mov
vmwrite
jb
mov
mov
cld
stos
push
stos
inc
loope
mov
push
cmp
leave
out
daa
jecxz
mov
sub
shl
push
hlt
pop
adc
dec
jmp
nop
aas
es
leave
fucomp
or
hlt
pop
sbb
in
dec
and
test
sub
out
in
xor
jmp
aaa
out
rorb
push
and
js
notl
adc
leave
lret
mov
mov
sub
xor
test
xchg
rol
fcomps
sbb
add
dec
ss
ret
sbb
stos
mov
lds
and
add
rcrb
movsb
jmp
sub
cmp
or
dec
sbb
add
in
xchg
ja
loope
add
gs
xor
out
jns
and
dec
cmpsb
mov
aad
jb
mov
cmp
add
jmp
mov
sub
jo
in
cltd
fucom
and
ret
pop
fcomi
adc
cld
ss
loop
mov
shl
dec
pop
scas
fadd
shlb
aas
or
pop
nop
cmp
and
inc
call
movl
jmp
aas
mov
mov
dec
mov
mov
adc
sbb
test
sbb
outsb
fdivrs
xchg
mov
dec
fdivl
sub
pop
ja
das
outsl
gs
pop
adc
sub
subl
mov
out
mov
not
dec
loopne
int
jae
and
in
sbbl
mov
das
mov
pop
subb
sbb
shrl
fs
aam
jnp
je
popl
or
or
mov
add
mov
out
mov
cmp
jle
dec
push
lcall
mov
mov
dec
mov
arpl
pop
aad
lret
lds
fprem1
lods
imul
sub
mov
push
xor
jnp
inc
mov
jg
mov
fwait
inc
xchg
stos
xor
call
ret
testb
lds
es
cmp
scas
ljmp
aam
leave
adc
hlt
ja
lods
dec
jle
jp
std
sbb
mov
push
lds
sbb
sub
bound
xchg
sbb
movsl
orl
lahf
loopne
jge
popf
aam
ss
repnz
xor
add
lret
mov
in
dec
xchg
and
cmpsl
cmp
in
enter
cmp
pop
inc
jbe
cmp
imul
pop
dec
out
lret
dec
jns
add
loop
clc
mov
sbb
imulb
add
pusha
gs
xchg
jle
int3
sbb
sti
jl
outsb
mov
ja
lret
xlat
mul
xor
push
pop
insl
mov
outsb
jle
cmpl
inc
bound
add
xor
and
and
fstpl
or
sub
lcall
insl
jge
frstor
mov
sub
jae
cmp
mov
inc
outsl
in
fsubs
cmp
ja
imul
test
adc
fs
dec
push
cld
jnp
and
push
jns
mov
andb
test
rcrb
ja
addps
cmp
movsb
sub
test
push
loop
cmp
imull
dec
mov
pop
or
xchg
lds
pop
in
and
int3
imulb
fcompl
push
jbe
incb
fstl
mov
add
cmp
in
push
int
out
sar
fcoms
sbb
jno
dec
imulb
cltd
xchg
sub
ja
add
or
push
pop
sbb
mov
xchg
ja
or
lds
leave
cld
sub
lods
sbbb
sar
sbb
pop
icebp
dec
jae
inc
fsubrs
pop
div
mov
jmp
lahf
ds
xor
lcall
das
imulb
ljmp
test
test
sub
int
mull
pop
push
std
fstl
and
or
add
pop
xor
ret
sahf
out
push
stc
sbb
clc
int
jne
dec
pop
sub
outsl
ret
dec
push
add
xor
into
dec
loop
lret
arpl
cld
and
dec
repz
testb
and
hlt
or
in
out
lods
inc
out
jbe
leave
mov
cmp
mov
in
int3
mov
jae
dec
cmp
sbbl
outsb
jge
sbb
out
andl
adc
jle
stc
fs
pop
inc
xchg
loop
dec
mov
in
mov
mov
bound
and
fisubs
sarb
addr16
sti
inc
xchg
inc
jbe
sub
ljmp
lods
clc
incl
cmc
mov
inc
sbb
fisttpll
movsl
loopne
jae
jle
loope
mov
mov
imul
insb
ljmp
js
and
stos
sbb
mov
scas
test
cmp
mov
lahf
and
jno
mov
inc
inc
push
mov
mov
sbb
xchg
sbb
xor
pop
icebp
aad
jbe
pushf
mov
pop
xchg
xchg
shlb
in
int3
dec
test
cld
and
mov
mov
in
lods
and
mov
test
inc
test
cld
dec
lea
mov
mov
or
mov
sbb
xor
sbb
push
cwtl
cmpsb
fwait
jmp
popa
add
daa
or
push
stos
aam
adc
sub
jg
fidivl
call
daa
adc
fs
inc
and
jecxz
adc
adc
icebp
daa
mov
mov
in
jg
xor
xchg
in
mov
js
cmp
clc
add
pushf
loop
pop
adcb
mov
lret
stos
ret
stos
cmp
push
in
jbe
clc
outsl
dec
or
hlt
sub
mov
pop
push
inc
xor
mov
add
xchg
push
pushl
arpl
xlat
inc
inc
loope
push
push
adc
pop
in
pop
out
push
mov
adc
sbb
inc
inc
mov
jns
cwtl
in
xchg
ja
loop
push
gs
negb
sbb
push
jmp
inc
aaa
dec
aaa
int
insb
sub
lea
jp
cmc
xor
or
cli
add
sahf
or
or
or
xchg
loope
hlt
sahf
pop
or
popf
pop
fldt
mov
mov
sub
mov
mov
imul
mov
xor
sub
add
and
mov
sub
mov
sub
mov
sub
mov
mov
mov
mov
xor
add
xor
and
lea
mov
mov
add
div
mov
mov
sub
xor
div
add
cmp
jb
xor
inc
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
add
and
xor
mov
sub
movl
movl
mov
movl
movl
mov
mov
imul
xor
or
xor
mov
sub
mov
mov
mov
jmp
push
push
push
scas
sbb
inc
pop
jns
jo
push
imul
in
dec
fists
lds
fildll
sbb
dec
pop
mov
pop
aas
inc
shr
jmp
popa
mov
mov
jle
jmp
push
add
pop
arpl
or
lcall
sbb
ret
or
push
es
mov
and
cmpsb
jbe
lret
outsb
in
push
into
cmpsb
xor
and
lcall
jl
sbb
jmp
mov
outsb
ljmp
mov
js
cmovns
inc
out
cmpb
xchg
cmp
inc
lods
cmp
lret
mov
sub
test
xchg
insb
pop
mov
sub
mov
ljmp
dec
sub
mov
sbb
lds
lahf
jecxz
pop
jl
or
inc
mov
popf
repnz
mov
lret
cld
movsl
sbb
pop
mov
jns
adc
loopne
fsubs
and
dec
jge
cli
pushf
outsb
push
in
rorl
ja
add
sub
lcall
fcmovb
adc
cld
pop
xchg
fsubrl
mov
dec
inc
xor
inc
cmp
scas
cwtl
dec
or
pop
xlat
dec
push
mov
and
out
jecxz
adc
scas
lahf
aam
mov
imul
pop
mov
sbb
push
adcb
frndint
scas
push
jecxz
mulb
dec
pop
jg
push
cli
sbb
nop
ja
jae,pn
fists
dec
push
daa
cwtl
mov
addl
pop
daa
movsb
sub
inc
mov
fnstenv
loope
inc
imul
movsl
leave
xchg
dec
jo
leave
lds
jp
out
add
fldt
int3
mov
adc
fisttps
cld
les
mov
mov
sbb
xor
dec
lea
push
int3
adcl
sbb
xlat
cmp
or
lock
jb
insb
dec
xor
cmpsl
in
mov
mov
xchg
dec
add
test
in
repz
lea
jecxz
pop
mov
inc
cmp
test
lock
repz
ja
lret
sub
mov
inc
or
jo
inc
test
sbb
sub
cmp
cmp
mov
xlat
push
out
xchg
fdivl
cmpsl
add
lret
leave
inc
mov
mov
xor
ror
mov
in
fidivrs
mov
jne
mov
loope
outsb
and
mov
jl
mov
sti
int
ret
add
ret
div
mov
mov
sub
mov
mov
mov
jmp
jmp
push
and
cmp
push
loopne
sbb
testl
loopne
hlt
and
jae
sbb
adc
les
xor
imul
es
in
les
sub
pop
shl
dec
dec
or
outsl
out
test
adc
aaa
adc
stos
shlb
cld
push
jbe
lea
mov
lds
mov
orl
mov
push
cmpsb
ret
insb
push
jno
sub
data16
cmpsl
hlt
scas
xchg
sbb
sub
lret
lcall
in
sbb
push
cmp
test
mov
stos
daa
mov
scas
cltd
and
je
cmp
sub
dec
add
orl
lret
loopne
push
mov
sbbb
push
lods
inc
fnstsw
xchg
xchg
inc
scas
and
sbb
xchg
ret
push
inc
loopne
and
sub
jo
push
cmp
bound
outsl
mov
hlt
fsubs
in
mov
mov
xchg
jg
into
lods
add
pop
cmp
jecxz
pop
sbb
in
iret
popf
popa
push
out
pop
pop
cmp
mov
pop
mov
nop
mov
pusha
cmp
sbb
sub
insl
pusha
sbb
lret
cmc
add
adc
pop
outsl
or
push
add
pushl
pop
mov
sbb
cmpsl
gs
adc
shll
outsb
jecxz
mov
mov
dec
nop
mov
cld
mov
out
test
push
add
aad
mov
inc
xor
push
jge
into
icebp
mov
test
loopne
aas
cld
fistpll
lds
mov
scas
pop
cmp
inc
test
push
or
nop
into
fdivl
rcll
mov
push
and
repz
hlt
jno
dec
inc
insl
xor
adc
cmp
movsl
stc
cmp
shrd
jg
mov
mov
dec
test
jg
jp
rcr
cmp
in
fstpt
stos
xor
jae
test
ret
fistpl
pop
clc
lret
jl
jno
and
jnp
or
cmp
test
test
inc
jb
fstpt
in
sti
mov
lret
das
in
aam
test
scas
movsl
gs
hlt
nop
out
mov
mov
popf
sahf
mov
daa
mov
xchg
mov
fnstenv
paddusb
adc
lahf
fistps
inc
movsl
pushf
aam
sub
push
fnstenv
inc
mov
mov
in
mov
mov
imul
mov
imul
or
mov
or
xor
lea
mov
and
add
xor
add
cmp
jne
pop
pop
pop
leave
ret
push
mov
sub
push
push
movl
jmp
hlt
aam
adc
pop
and
cmp
test
sbb
xor
sbb
scas
jmp
loop
jbe
jbe
mov
fwait
ja
mov
mov
stos
data16
arpl
sbb
int
push
xchg
sub
push
cmp
sub
push
ds
cwtl
ret
stos
mov
xor
ret
outsl
push
shlb
dec
dec
dec
mov
xchg
aas
movsb
cmp
iret
push
fistps
sbb
fdivrl
pop
or
rcr
push
test
add
sbb
mov
jmp
cmp
pusha
popf
dec
lret
in
jae
cmp
daa
data16
adc
int
jg
xor
sbb
sbb
outsb
insl
pop
into
fcompl
mov
mov
aad
add
and
mov
sarb
rolb
xchg
cs
pop
loopne
sbb
leave
imul
push
fistps
push
dec
fstl
cmp
lods
or
mov
sub
loopne
cmp
daa
mov
xchg
pusha
inc
pop
ja
xchg
roll
neg
mov
hlt
push
add
es
popa
mov
cmpb
jmp
es
popf
xchg
popa
pop
inc
xlat
stos
sti
sti
js
mov
cltd
pop
out
push
inc
inc
push
sub
sahf
mov
inc
aaa
mov
int3
adc
rcrl
in
js
out
and
ret
mov
xor
mov
mov
fimuls
lea
adc
pushf
mov
mov
cmp
mov
jbe
vmread
mov
push
scas
jb
add
push
lea
inc
or
addr16
mov
arpl
jo
push
sbb
jb
fisttpll
stos
cli
cmp
pop
insw
mov
pusha
ss
gs
xchg
mov
andb
push
push
stc
jns
addr16
loope
sub
stos
ret
test
dec
pop
mov
pop
rcl
add
cltd
xor
jns
aad
mov
call
addr16
xor
in
cltd
push
mov
xlat
in
shll
or
push
stos
xor
sbb
sub
and
aaa
lea
movsb
out
fwait
iret
inc
and
ljmp
sub
mov
lret
jle
cmp
xchg
popf
lret
mov
mov
fcompl
dec
and
inc
out
push
addb
dec
dec
rol
lret
push
or
jno
imul
cs
sub
jg
movsb
dec
lahf
lods
mov
stc
sbb
test
push
xor
into
add
sbb
mov
lahf
dec
rclb
xchg
ljmp
sub
xchg
fsubp
dec
cmp
ljmp
xchg
mov
dec
xchg
mov
and
and
xor
lods
cmp
pop
pusha
je
dec
movsl
icebp
jg
jae
hlt
into
cmp
jecxz
xchg
pop
sub
es
adc
jecxz
push
lret
test
pushf
adc
add
add
scas
cwtl
jne
push
push
sbb
fwait
sub
out
fldenv
stos
adc
fs
jl
insl
mov
dec
add
out
inc
movsl
shlb
mov
add
stos
repnz
test
cld
ret
add
clc
add
or
mov
lea
jmp
lcall
ficomps
inc
dec
pop
jle
push
mov
aam
sbb
adc
sbb
mov
stos
sub
sbb
push
mov
je
hlt
adc
aaa
pop
call
push
loopne
cmp
inc
or
popf
cmpsl
inc
xchg
hlt
push
iret
mov
into
add
ret
imul
arpl
je
sahf
push
and
mov
insb
stos
adc
dec
stos
mov
adc
xchg
lds
loopne
movl
frstor
dec
std
inc
dec
decl
outsb
icebp
shl
mov
lahf
inc
push
cmc
add
cmpsb
sub
gs
xchg
pop
xchg
fsubrs
dec
int3
mov
cmpsl
xor
int
mov
mov
in
jmp
push
scas
jae
movsb
fstpt
mov
addr16
jb
push
stc
add
and
clc
inc
ficoms
and
fmull
lods
adc
addl
xchg
lcall
dec
leave
and
jmp
ret
pop
pop
lahf
xlat
mov
gs
out
mov
faddl
je
insb
mulw
jg
loope
dec
inc
xchg
sbb
test
adc
sbb
xor
lods
sahf
pop
push
jmp
pushfw
push
clc
add
add
repnz
rcrl
sub
inc
mov
and
jecxz
jecxz
test
sbbl
test
outsl
leave
in
xchg
push
sbb
ds
push
fwait
hlt
mov
hlt
pusha
pop
push
cmp
pop
add
cmp
dec
ret
mov
fsts
xorb
aas
dec
in
or
jbe
pop
test
outsb
jne
inc
sbb
ret
shl
push
insl
xor
insl
mov
test
in
xor
fwait
and
mov
push
push
loope
ret
jge
and
lahf
movsl
out
push
xchg
add
test
add
addb
pop
fnsave
mov
dec
mov
jbe
mov
push
outsl
jne
adc
inc
mov
insl
ret
lcall
mov
jbe
std
popf
out
sub
jb
mov
hlt
fcompl
xchg
aaa
das
je
pop
ja
cmp
cmp
mov
aaa
mov
fcomip
pop
ljmp
nop
repz
mov
jle
cmp
je
sub
out
and
loopne
xlat
es
mov
jmp
jae
or
jmp
sbb
mov
outsb
aam
xchg
xor
pop
dec
rcrl
jo
arpl
dec
int3
sub
cltd
test
sahf
loopne
pop
lock
cwtl
mov
add
hlt
in
cld
dec
int
mov
push
jb
xchg
lahf
pop
xor
add
push
je
or
dec
pop
push
cmpsb
xor
jmp
loop
enter
int
fwait
mov
out
add
xor
add
pusha
push
ret
push
das
or
mov
pop
lahf
daa
and
shll
fsubr
ljmpw
push
xlat
jbe
sarb
inc
ss
ffreep
mov
mov
movsb
popf
xor
jmp
adc
hlt
xchg
lea
loope
inc
test
jmp
adc
mov
pop
cmp
xor
add
je
loopne
loope
insb
push
call
inc
movsb
movl
movl
mov
mov
and
xor
jmp
out
icebp
aaa
insb
aaa
sub
mov
or
sbb
pusha
enter
aad
xchg
and
scas
xchg
fstpl
jne
out
call
movsl
ret
jno
pop
sub
pop
xor
inc
jo
repz
fs
int
xchg
xchg
test
stc
pop
sub
cli
lar
fsubp
dec
mov
in
push
mov
push
in
aad
test
or
and
cmp
loope
out
test
pop
adc
in
mov
xor
icebp
out
xchg
mov
add
fcmovbe
call
jge
in
jg
push
mov
push
lods
mov
scas
add
mov
mov
cmc
insl
sub
leave
jmp
aad
cmpsb
xchg
scas
and
stos
es
jp
mull
mov
push
pop
xor
xor
or
jns
sub
jne
mov
jle
out
dec
dec
or
add
ja
stos
jno
jbe
push
orl
aas
nop
sbb
sarl
cmpsl
repz
xchg
scas
ss
daa
std
sbb
stos
lcall
mov
movsb
pop
pop
cs
sarb
mov
fs
lods
iret
loope
inc
push
pop
add
dec
shr
push
mov
push
sbb
ror
lock
std
jb
testb
aas
push
or
push
idivl
pop
xchg
xor
enter
cmc
dec
shr
mov
mov
lds
lea
popf
jo
mov
jne
clc
dec
icebp
jmp
and
shrl
mov
pop
lods
shrl
fwait
mov
xor
bound
andl
and
lea
xchg
lods
inc
sub
scas
cmp
addr16
daa
aam
or
fs
mov
add
mov
xchg
out
mov
pop
pop
lods
addb
mov
rorl
sbbb
jne
int3
sti
xor
fildll
pop
cmp
popf
pop
fcmovnb
inc
xor
int
xchg
dec
jge
sti
in
andb
adc
lret
ja
pop
mov
push
mov
push
push
insl
shrl
or
add
adc
dec
jne
mov
jbe
adc
adcl
dec
movsb
mov
and
decl
mov
and
push
sub
aas
mov
aam
gs
mov
sbb
cmpsb
add
scas
sbb
sbb
outsb
shll
and
sti
lcall
xlat
mov
fld1
xor
imull
cmp
fdivrp
pop
les
xor
inc
mov
shlb
inc
lret
fdivrs
push
xor
ss
mov
insb
mov
push
loop
cmp
outsb
jno
dec
mov
mov
push
mov
and
icebp
or
or
mov
js
bound
shrb
ret
out
xchg
scas
repnz
cmp
mov
stos
and
sub
xchg
and
clc
inc
cmpsl
jmp
mov
cmp
mov
mov
mov
test
stc
push
fisttps
fsubl
add
sub
or
add
mov
imul
xor
lea
mov
movl
movl
mov
xor
push
pop
div
jmp
jb
pop
in
sbb
push
lret
rcrb
cmp
mov
xor
sbb
clc
or
and
lahf
sbb
std
cld
test
xorb
mov
sub
add
rclb
insb
push
fabs
xor
les
out
out
dec
rcl
iret
insl
test
mov
orb
addl
aad
test
push
mov
xor
rclb
hlt
pop
jle
jne
hlt
fsubrs
pop
andl
adc
sbb
or
gs
or
data16
pop
jns
das
xchg
xlat
jns
xor
xchg
inc
es
fistpll
mov
loope
leave
fisttps
repnz
jg
leave
lods
mov
jl
in
aaa
jmp
lea
jmp
push
lret
test
push
dec
jne
jns
dec
filds
leave
push
cmp
mov
jp
sbb
mov
xor
mov
stc
int3
inc
jecxz
pop
imul
popa
mov
enter
roll
mov
push
and
pop
cltd
jbe
sbb
gs
xor
sahf
jl
mov
ret
repz
or
xchg
das
cmc
ss
adcb
jo
dec
roll
pop
mov
pushf
jle
push
cmp
insl
and
addb
lahf
ja
nop
jl
pop
xchg
adc
loope
enter
aas
clc
dec
cmp
js
in
popa
adc
cmp
xchg
or
xchg
je
cmp
xchg
fldenv
mov
cmpsl
mov
dec
pop
or
jl
rol
push
mov
xor
mov
ja
rolb
addr16
cmpsl
mov
ds
andb
push
xor
in
stos
enter
inc
lods
arpl
aaa
jp
data16
cmp
or
push
out
stos
or
dec
pushf
mov
cli
and
in
cltd
cld
test
jno
test
push
push
lock
mov
dec
dec
jge
sbb
jne
jmp
adc
cli
push
out
mov
add
mov
into
push
and
or
mov
jae
out
add
push
mov
adc
xchg
xlat
jge
xchg
in
loop
imul
jle
cltd
cmc
ljmp
js
mov
ficoms
mov
clc
clc
sub
aaa
dec
decb
xor
push
int
jge
push
pop
xor
enter
jns
adc
mov
scas
andl
int
repnz
shll
mov
lock
jo
dec
mov
testb
pop
cs
idivl
bound
mov
pusha
lods
adc
outsb
roll
mov
dec
mov
cmp
jae
imul
jne
xorl
call
jns
repnz
daa
jno
and
mov
scas
and
xor
lahf
or
mov
jnp
loope
inc
xlat
ja
flds
sbb
insb
pusha
xchg
push
lds
push
and
push
jg
lea
add
xchg
add
jnp
pop
imul
aad
add
setnp
jle
pushf
or
mov
xor
push
add
and
mov
sub
mov
movl
movl
movl
mov
mov
lea
mov
div
mov
lea
mov
movl
movl
movl
mov
mov
xor
sub
mov
sub
xor
mov
movl
pop
mov
movl
movl
mov
mov
mov
xor
xor
div
mov
and
sub
mov
movl
movl
movl
movl
movl
movl
mov
add
mov
xor
mov
or
mov
or
mov
and
mov
sub
mov
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
add
adc
or
mov
or
or
mov
mov
or
mov
sub
mov
sbb
mov
or
or
add
mov
adc
mov
movl
movl
movl
movl
movl
movl
movl
xor
inc
mov
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
movl
mov
movl
movl
mov
or
add
mov
or
mov
sub
mov
sub
imul
add
mov
push
mov
lea
mov
xor
div
mov
lea
push
mov
mov
push
push
jmp
fmull
fiaddl
clc
push
xchg
sarl
adc
sbb
call
orl
add
inc
adc
xlat
inc
jmp
arpl
cmp
dec
or
in
xchg
mov
pop
mov
cmpsl
lea
stos
int
xchg
mov
in
icebp
pop
in
push
xchg
or
imul
adc
jmp
mov
dec
insb
jb
jle
inc
jnp
and
sub
xchg
out
sti
insb
fdivrs
cli
clc
sahf
cmp
jmp
mov
adc
ret
in
out
cmp
inc
imul
push
pop
out
fs
mov
add
sub
jle
add
adc
sub
push
leave
push
cwtl
shlb
shll
dec
mov
clc
test
jp
lods
test
cmp
or
xchg
mov
outsb
push
enter
sahf
mov
cmp
cmpsb
loop
mov
mov
mov
mov
push
int
testl
mov
push
or
fucomi
mov
xor
pop
mov
push
pushf
adc
push
movsb
call
imul
add
mov
fwait
mov
stos
lahf
mov
cld
icebp
aaa
aas
inc
inc
ret
or
and
push
pop
sub
xchg
jo
jae
frstor
pop
int3
sub
jne
adc
in
mov
orb
aad
pop
mov
mov
fcompl
push
aam
testb
jnp
rep
cmpsb
jo
dec
push
sbb
xchg
orl
jb
xchg
sbb
inc
mov
or
mov
xchg
addr16
jbe
dec
or
xor
aas
popf
pop
xlat
imul
inc
inc
int3
adc
lea
and
scas
pop
frstor
in
push
adc
cmpsl
pop
sahf
nop
and
pop
jbe
xchg
and
out
xchg
mov
jbe
jle
aas
addr16
lret
in
mov
push
pusha
popf
push
jne
dec
lds
dec
addl
shrb
insb
imul
or
mov
mov
test
sub
jbe
and
mov
fwait
and
jne
ljmp
punpckhbw
in
push
rcrl
jne
mov
inc
ret
inc
insl
adc
mov
popf
push
test
push
mov
push
test
mov
or
jb
jb
ja
pop
pop
in
jmp
add
mov
cmpsb
jmp
jns
fcomp
inc
mull
inc
je
xchg
push
pop
daa
loope
negl
inc
push
jno
rcll
pop
ret
ffree
and
push
movsb
js
rorb
iret
leave
idiv
jo
xchg
mov
fcompl
ficoms
cltd
cmpsl
mov
jns
push
out
xchg
dec
negb
addr16
mov
push
sub
ljmp
xchg
mov
jmp
and
pop
xor
pop
in
ficoms
sub
divl
pop
xor
arpl
in
fnsave
ja
fsubr
lods
jp
dec
xchg
out
int3
adc
sub
xchg
and
aad
sbb
sub
inc
daa
xlat
push
and
test
lcall
adc
push
call
mov
mov
push
push
or
or
push
push
call
mov
mov
xor
mov
mov
mov
and
jmp
xchg
fistl
sbb
sbbb
jg
jle
mov
sbb
pop
ret
add
leave
xor
cwtl
dec
stc
clc
mov
pop
jne
rorl
hlt
pop
loopne
ja
imul
adc
pop
add
cmpsl
movsl
test
dec
xchg
mov
mov
adc
or
sub
sub
ret
mov
add
pop
outsl
rcl
sti
cltd
and
dec
or
shl
dec
fstpl
and
jb
mov
mov
insb
bound
xlat
sub
mov
mov
fstpt
sub
adc
test
sbb
mov
in
add
jecxz
mov
in
test
ficomps
or
lret
insb
in
cmpl
and
jg
mov
jbe
jmp
jbe
pop
shlb
pop
std
pusha
cwtl
cmpsb
outsb
inc
push
sbb
dec
or
lea
icebp
mov
mov
leave
imull
ja
popa
sub
in
sub
inc
cmp
dec
xchg
inc
aad
push
push
cld
or
int
aas
inc
adc
mov
daa
fistpll
rcrb
movsb
push
orb
notb
movsb
mov
jbe
pop
or
cmc
test
or
xor
xor
sbb
sar
negb
and
mov
shlb
mov
sub
mov
nop
pop
cwtl
cmp
insb
pop
inc
sbb
cmp
stos
mov
jmp
ret
mov
es
stos
flds
fxch
test
cmc
sbb
xor
cmp
iret
mov
rcll
enter
mov
movsb
dec
pop
mov
lds
jp
sti
je
inc
iret
mov
xchg
in
fistps
mov
pop
stos
popl
call
xor
cmp
imul
xor
jne
sub
negl
dec
push
ja
mov
cmpsb
mov
bound
or
push
popa
inc
cmp
cltd
xor
testb
xchg
fsubp
xchg
nop
mov
push
fs
sarb
adc
enter
fwait
hlt
xor
aas
insb
js
pop
mov
dec
push
daa
cmp
pop
outsl
sub
mov
inc
jecxz
xor
mov
sbb
inc
lret
daa
and
xchg
ret
jg
xchg
cltd
xlat
stos
lcall
pop
roll
xchg
cmpsl
into
add
mov
insb
dec
mov
jne
mov
adc
jle
mov
cmp
sti
js
in
jbe
std
add
xchg
and
repnz
xchg
mov
nop
mov
dec
popa
jne
dec
push
ret
loope
mov
cmpsb
sarb
inc
sbb
int3
ljmp
jae
ficoml
push
rol
mov
and
fidivrl
dec
and
data16
test
inc
pop
nop
cmpsb
pop
clc
jmp
loop
jg
push
mov
out
add
and
mov
and
subl
bound
add
das
je
stc
adc
cpuid
and
mov
stos
inc
push
outsb
push
out
jle
repnz
outsb
loope
sub
or
mov
inc
in
jecxz
stos
in
pop
jmp
add
lea
xor
push
lea
call
mov
mov
mov
sub
xor
imul
add
xor
xor
mov
div
cmp
jne
mov
xor
mov
div
mov
mov
xor
sub
mov
xor
sub
or
lea
push
mov
push
pop
div
mov
xor
div
mov
mov
xor
xor
div
imul
sub
push
mov
add
push
mov
sub
mov
pushl
call
mov
mov
lea
mov
incl
mov
mov
xor
shld
shl
mov
mov
xor
xor
cmp
jne
cmp
jne
mov
mov
jmp
lea
mov
mov
mov
mov
mov
sub
mov
mov
mov
sub
mov
movl
movl
mov
mov
mov
mov
pushl
pushl
pushl
pushl
pushl
push
push
pushl
mov
call
mov
mov
pushl
call
mov
push
add
push
push
jmp
mov
push
sbb
sbb
cmc
cmp
in
jle
mov
sbb
adc
sbb
xor
stc
mov
push
out
fs
xchg
sub
call
mov
stos
nop
push
sbb
cmpl
daa
fnstsw
push
pusha
nop
stos
pusha
minps
enter
push
add
ficoms
in
sbbb
sub
in
cmpsl
jns
push
sbb
loop
test
lcall
scas
jno
and
clc
filds
inc
xchg
and
pop
cmpb
mov
rorl
cli
je
dec
pop
cmp
xchg
inc
popw
add
mov
jo
out
ret
shlb
sub
and
hlt
and
fxch
dec
sbb
push
mov
dec
jae
ret
out
and
jo
ret
imul
int3
push
aas
sbb
sub
cli
gs
sbb
pop
mov
dec
stos
je
sub
lods
mov
repnz
lahf
mov
dec
lods
pop
shlb
rcrl
jg
clc
pushf
clc
push
xchg
add
xor
gs
cmp
jl
or
movsb
push
jg
lret
imul
cld
jno
cs
mov
push
js
loop
cmc
rclb
dec
inc
movb
xor
stos
push
je
and
pop
icebp
inc
adc
outsl
sbb
adcl
xchg
shrl
push
repnz
inc
in
mov
pop
fildll
popf
aas
mov
sbb
and
gs
icebp
cmc
mov
adc
dec
leave
push
push
dec
rorl
testl
insb
enter
add
mov
enter
repnz
add
adc
xchg
mov
ret
sbb
dec
dec
clc
mov
push
in
daa
lds
sbb
adc
pop
add
js
jl
xor
sub
stc
sbb
dec
xchg
dec
call
fiadds
push
loopne
sub
xorb
xchg
das
gs
int
and
push
mov
les
add
fstpl
xor
sub
add
mov
cs
xor
movsl
cmpsl
rcl
lds
jl
movsb
push
ja
bound
in
shll
lods
adc
dec
icebp
imul
adc
push
jnp,pn
pop
xor
hlt
jae
popf
lret
cli
movsl
lret
dec
xchg
sbb
sub
repnz
repnz
pushf
dec
mov
add
xor
mov
in
dec
jp
out
inc
nop
adc
les
mov
mov
pop
in
xchg
mov
cmp
dec
dec
cld
outsb
push
das
out
mov
xchg
in
mov
ds
xor
test
test
fs
subl
mov
pop
xchg
int3
bound
leave
imul
pop
xchg
add
int
imul
jae
aad
push
dec
add
mov
cmc
add
pusha
fistpll
jmp
pop
fbld
xor
mov
loopne
sub
mov
pop
aas
xor
xchg
cli
rcl
call
mov
out
push
xchg
add
mov
xor
stos
loope
pop
cltd
push
xchg
shl
lods
mov
lea
sub
insb
cmp
cs
fsubrs
rcll
fwait
out
pop
call
mov
jmp
mov
mov
pop
pop
leave
ret
push
mov
jmp
cmp
mov
xor
cmp
pop
jo
stos
sbb
test
ret
jae
loop
and
dec
ljmp
cmp
ss
jns
xchg
lods
das
repnz
jl
xchg
jns
mov
iret
hlt
xor
jg
fcoms
adc
fwait
jmp
or
push
dec
fnsave
jmp
cmc
int
movsl
lds
and
lds
jne
or
xlat
add
dec
or
sbb
or
addr16
daa
idiv
iret
pop
xchg
mov
cmp
movsl
cmp
cmpsb
xchg
mov
lret
cmp
cli
adc
pushf
mov
out
mov
out
lock
mov
and
out
xor
stos
mov
push
sti
mov
test
or
mov
xchg
addr16
je
and
and
push
scas
jg
inc
adc
aam
jecxz
addr16
pusha
xor
in
mov
rcl
notl
icebp
lret
and
adc
cmp
aam
cs
jmp
sub
sub
sbb
out
jmp
stc
sbb
and
shll
movsb
push
xor
dec
mov
daa
div
jp
pop
inc
data16
jl
push
test
icebp
pop
inc
js
cmp
dec
pusha
or
pop
pop
jg
cwtl
ret
into
and
push
shll
and
popf
jecxz
add
sbb
inc
rcrb
lods
nop
jmp
or
movsl
jns,pn
pop
jne
mov
dec
sub
push
jle
push
mov
out
mov
sub
ret
mov
ljmp
jne
and
push
sub
daa
mov
std
xlat
sbbl
outsb
rorl
test
mov
xchg
mov
or
fs
clc
xor
jne
addb
cwtl
and
cwtl
cld
cmpsl
dec
aam
lods
int3
ficompl
int3
mov
xor
mov
test
mov
or
dec
xchg
xor
push
test
dec
out
jg
jle
in
and
movl
movl
movl
movl
movl
movl
jmp
mov
xor
movsl
mov
mov
sbb
mov
aaa
outsb
out
aas
shrb
cli
pop
sbb
cmp
adc
cli
push
movsl
es
dec
inc
repnz
mull
leave
mov
adc
xor
adc
push
cmp
or
fcomi
mov
divl
dec
sub
arpl
add
scas
pop
dec
cltd
es
lods
mov
mov
xlat
cmc
add
add
or
add
mov
data16
ja
jle
mov
pop
add
mov
jmp
mov
mov
es
xchg
mov
mov
lds
jg
aam
jne
push
lahf
push
mov
push
pop
dec
popf
insb
mov
and
xchg
mov
pushl
mov
loope
sahf
pop
add
xchg
repz
mov
jns
jg
inc
adc
dec
xor
mov
sub
insl
shrl
scas
mov
sub
roll
cmp
shlb
ret
xorb
lret
fdivl
arpl
aam
cmpsb
mov
mov
and
insb
sub
xchg
out
imul
or
inc
add
insl
loope
add
xchg
imull
das
aad
push
xchg
xorb
scas
in
shlb
pop
pop
mov
pop
or
dec
mov
mov
lea
shlb
add
adc
jb,pn
ret
adc
push
insb
stc
adc
pop
lea
adc
nop
xchg
cltd
frstor
ret
iret
jo
mov
arpl
cmpsb
arpl
js
dec
scas
aaa
ljmp
scas
pop
hlt
jnp
sbb
movsb
jne
sbb
fdivp
dec
ja
jmp
dec
and
faddp
mov
xchg
inc
or
ja
pop
mov
scas
out
and
mov
sbb
repz
mov
popf
pop
mov
ljmp
jno
add
pop
push
leave
sbb
mull
inc
call
push
lock
push
jmp
sub
and
jb
push
stos
xor
add
mov
sbb
dec
pop
sub
add
xor
loop
cs
mov
idivb
fisttps
mov
mov
repnz
push
repz
mov
lcall
call
cmc
rol
adc
stos
push
push
adc
and
shll
mov
or
push
add
mov
fidivrl
jns
mov
lret
and
inc
sti
popa
dec
outsb
inc
sbb
mov
in
test
xchg
in
ss
outsb
cmpsb
sahf
push
enter
lret
xor
inc
fisubl
leave
call
popf
push
mov
scas
mov
sahf
xchg
pop
mov
insl
sub
and
shll
xchg
enter
in
mov
ficoml
shll
cmp
arpl
dec
push
jge
mov
push
inc
fisubrl
hlt
add
cmp
inc
cmp
les
pusha
pop
inc
mov
mov
imul
xlat
adc
push
pop
stos
push
push
sbb
fnsave
in
mov
jb
into
jl
js
and
out
or
les
cmp
mov
leave
movsl
dec
lock
push
mov
or
lods
out
jb
xor
cwtl
adc
jae
pop
fistpl
popf
push
fldz
sbb
movsl
xchg
sub
imul
push
fwait
sbb
mov
jp
push
movsb
sub
adc
dec
or
xor
pop
inc
or
dec
into
imul
pop
jne
lods
mov
jb
pop
push
xor
sub
lcall
inc
pop
dec
inc
add
shlb
jcxz
pusha
sbb
loope
icebp
orl
das
xchg
insb
inc
je
cmp
and
ss
inc
or
adc
dec
hlt
pop
add
out
orl
addr16
mov
or
add
notb
lahf
push
xchg
repz
jns
adc
test
and
mov
adc
mov
dec
push
add
mov
mov
add
adc
and
push
and
or
push
or
xor
xor
push
push
call
mov
movl
movl
movl
movl
xor
jmp
leave
xchg
dec
sub
sub
mov
lods
dec
push
pushf
sbb
test
mov
sbb
adc
mov
cmpsl
mov
add
xor
cs
jge
repz
dec
inc
repnz
cwtl
dec
out
test
inc
aam
int
js
pop
aas
pusha
xor
popf
inc
inc
cltd
push
divb
imul
roll
xor
pop
popf
fdivrl
jecxz
pop
sbb
repz
xor
rcll
lods
pop
je
add
xchg
in
aad
cmp
cmp
cltd
xor
sub
adc
callw
mov
sbb
jmp
fsubr
fwait
cmp
mov
stos
into
les
addl
push
outsb
cwtl
or
sub
inc
mov
inc
out
or
push
scas
jo
mov
fs
sahf
call
cmp
xchg
enter
fisubs
add
jmp
jmp
stc
inc
pop
adc
ffree
jge
daa
pushf
cmp
mov
stos
movsb
add
stos
test
mov
sub
pop
aas
jne
cmc
mov
mov
jg
cs
cmp
pop
jge
jb
add
mov
ds
mov
jo
les
jge
fiaddl
mov
xchg
es
rorb
mov
gs
and
mov
sbb
jle
repz
jbe
test
cmp
fwait
jno
pop
xor
cs
mov
pop
xor
iret
mov
pop
mov
cmpl
ljmp
xchg
sbb
or
or
fcomip
or
ljmp
rclb
aam
sub
in
jecxz
in
pop
mov
jnp
sbb
xor
in
xor
adc
ja
sub
lret
xchg
mov
add
fimuls
gs
out
jmp
test
iret
cmp
mov
jle
inc
pop
popf
aam
into
push
mov
pusha
negl
lret
xor
lahf
xchg
imul
hlt
pop
xor
add
or
add
jge
mov
mov
push
push
push
call
mov
mov
or
or
push
add
push
adc
push
push
call
mov
lea
xor
mov
jmp
insl
jmp
cwtl
xchg
popf
pusha
outsl
mov
inc
cmpl
sbb
mov
mov
cli
push
idiv
sbb
xor
daa
mov
daa
call
mov
call
push
jae
inc
sbb
mov
dec
add
jp
pop
inc
adc
ud2
xchg
fsubs
fdivl
popf
mov
or
or
in
dec
dec
and
push
mov
rcr
jp
jnp
push
add
cmp
imul
sbb
adc
cmp
in
mov
inc
leave
dec
xchg
mov
mov
iret
gs
xlat
mov
imulb
push
and
sbb
in
pop
mov
loope
jno
and
mov
push
push
pop
hlt
dec
mov
xchg
adc
ss
sub
add
add
push
or
ljmp
or
test
arpl
xchg
fisubl
xchg
mov
rcrb
pop
cmp
imull
mov
pushf
jecxz
push
pop
call
popa
and
pop
cmp
gs
inc
pop
lds
inc
pop
mov
and
addb
js
pusha
xchg
jmp
bnd
lret
mov
inc
push
sub
arpl
inc
inc
addr16
fmul
and
dec
test
or
xchg
mov
inc
dec
test
and
stos
icebp
bnd
rol
push
mov
push
lret
push
addr16
mov
pop
xlat
jns
sbb
rorl
jo
push
mov
ret
test
fadds
jle
mov
sbb
aam
jg
test
adc
lock
cwtl
lret
mov
jo
addb
stos
sbb
adc
cltd
mov
lds
cmp
xchg
jg
insb
fwait
hlt
lret
pop
jecxz
add
jno
pop
mov
xorl
jmp
mov
ret
push
push
dec
xchg
lcall
jg
jmp
adc
jg
das
xchg
pop
imul
repz
sub
mov
movl
mov
movl
mov
mov
sub
mov
xor
jmp
push
xchg
mov
and
int
mov
enter
test
cmc
xchg
fiadds
test
int3
sbb
aam
pusha
and
jnp
xor
fsubp
mov
add
call
dec
ret
fists
lret
setle
scas
aam
mov
pusha
inc
and
add
insb
scas
sbb
flds
xor
jp
movsl
aas
and
outsl
dec
test
jbe
clc
jle
hlt
repz
jb
adc
jge
adc
pop
mov
push
jns
aam
leave
push
pushf
lods
pop
cmp
xchg
and
stos
mov
aam
mov
pushf
push
cli
inc
cmp
fnsave
stos
scas
sbb
jns
xchg
out
jl
mov
out
bound
lock
data16
mov
std
imul
cmc
ja
ja
push
pop
push
sbb
cmp
mov
andl
clc
mov
mov
dec
mov
and
divl
sub
jge
nop
jge
mov
mov
fs
add
mov
xor
repnz
add
add
or
das
mov
pop
xchg
push
das
add
xchg
sahf
jae
fbld
test
pushf
out
sub
hlt
ljmp
cli
ds
push
mov
and
push
jl
aam
xchg
sub
aaa
jl
inc
mov
and
sarb
je
stos
call
orb
mov
pop
shlb
nop
cld
movsl
mov
mov
adc
jae
rcrl
cmp
lret
loop
outsb
add
mov
fxch
jb
xchg
shlb
jb
scas
dec
andb
in
dec
rclb
inc
mov
lods
lret
pop
daa
inc
int3
pop
movsb
xchg
sub
int
and
push
fcoml
bound
xchg
jle
pop
mov
push
int3
or
pop
outsb
sub
mull
xor
aad
sbb
push
in
push
push
pop
loope
lret
clc
addr16
inc
ss
outsl
cs
or
test
aad
clc
sub
sub
inc
ret
sub
daa
fdivrl
or
xchg
adc
lahf
and
test
fwait
movsl
repnz
mov
xor
or
jmp
push
and
mov
jle
nop
sbb
test
into
and
fdivrl
mov
icebp
xor
pop
inc
add
dec
aas
out
pop
les
jb
push
push
mov
in
xor
lods
sub
lea
lret
mov
push
mov
adc
adc
cmp
dec
inc
dec
pushf
sti
sar
jg
cmp
mov
push
enter
xor
fisttpl
mov
in
iret
jp
cmp
add
dec
lret
shrl
test
testb
lret
xchg
and
cmp
inc
xlat
cmp
bound
xchg
nop
push
aas
out
stc
scas
out
mov
mov
sbb
aam
out
pop
lds
negl
mov
fmull
int3
aaa
in
scas
outsb
pop
adc
xchg
sarb
sbb
je
xchg
adc
mov
clc
pop
or
pop
cmp
xor
mov
and
daa
mov
loop
das
out
pusha
pop
stos
rcll
stos
std
mov
out
fsubrs
fdiv
mov
xchg
push
xchg
lahf
jbe
mov
lahf
xor
mov
add
dec
lahf
pop
movsl
xor
cmpsl
shr
xor
xchg
sub
fstl
frstor
fisubs
insb
jae
imul
stos
jns
insb
xor
call
mov
and
xor
adcb
fisubs
loop
add
insb
ljmp
call
inc
rcl
fwait
xor
mov
push
cmp
push
fwait
xor
xor
loope
call
stos
or
shr
mov
xchg
mov
mov
ja
adc
xchg
fistl
jmp
fistl
adc
lcall
pushf
rorb
sbb
mov
loope
pop
add
lds
cli
ds
mov
jle
mov
stos
xadd
mov
inc
mov
add
arpl
or
push
in
inc
sub
insb
das
inc
sbb
jecxz
push
in
shr
testl
sub
cmp
mov
xchg
rolb
out
notl
scas
or
mov
mov
movl
movl
movl
mov
add
mov
and
lea
mov
mov
mov
movl
movl
movl
mov
mov
sub
add
xor
add
mov
div
mov
xor
pop
pop
or
mov
movl
movl
jmp
bound
and
lds
cltd
mov
test
test
cmp
and
xchg
lds
xchg
push
adc
ljmp
mov
xor
sarl
ficomps
cltd
imul
inc
lahf
pop
andl
fildll
icebp
jb,pn
test
aaa
pop
fcomps
mov
sar
pop
mov
nop
mov
adc
lret
add
into
or
les
push
cmp
jmp
aam
add
fidivs
jmp
xchg
mov
shr
push
sbb
jp
mov
data16
jbe
xchg
or
inc
jne
adc
sbb
ljmp
push
inc
divl
inc
inc
cmp
mov
shrb
cmp
insl
call
xchg
call
in
or
cmp
xor
cmp
fwait
mov
push
mov
mov
hlt
inc
mov
or
mov
jle
imul
push
and
xor
cwtl
jecxz
pop
rcrl
arpl
pushf
leave
arpl
shlb
xchg
push
in
bound
test
out
imul
xchg
ret
sub
sub
cmp
je
sub
aam
pop
jae
mov
inc
xor
hlt
mov
ret
loope
shrl
dec
sub
call
movsb
sub
fxch
sub
cld
aad
lahf
es
fbstp
jle
or
mov
scas
divb
adc
mov
or
leave
fs
hlt
push
mov
roll
push
sub
in
out
outsl
pop
and
sbb
jecxz
jmp
mov
je
stos
add
lret
mov
cs
xchg
jns
adc
jg
into
aam
dec
adc
sub
cmp
and
or
mov
psllw
icebp
mov
fadds
fisttps
aaa
stos
jae
push
mov
sub
fsubrl
pop
shlb
div
jns
pop
or
out
add
sbb
mov
xorb
movl
mov
mov
and
sub
or
mov
imul
mov
div
leave
ret
push
mov
sub
push
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
jmp
dec
mov
aam
movsb
sub
bound
jle
xchg
sbb
sbb
push
push
jmp
je
test
sbb
xchg
in
push
popa
ljmp
push
sbb
sub
mov
xchg
out
enter
jmp
pop
or
into
andl
mov
test
jne
jmp
mov
cmp
test
push
in
es
shll
iret
sub
xor
shl
cmpsl
adc
loop
decb
sub
adc
or
jns
pusha
or
pop
cmp
loopne
orl
xor
icebp
or
lahf
xchg
aas
or
push
std
iret
sub
fmull
add
rclb
ja
insl
cs
adcl
in
fwait
mov
or
mov
cmp
dec
and
hlt
hlt
mov
mov
sbb
sub
test
fiaddl
inc
xor
loop
popf
dec
and
xchg
les
pop
shrl
pop
lock
stos
mov
pop
into
dec
fsubs
xor
js
xor
or
push
in
xchg
mov
push
pushf
out
lret
lret
jnp
mov
add
movsl
xchg
fisubs
jmp
fistps
add
adc
mov
sbb
xor
xor
inc
xor
adc
je
mov
add
ss
cmp
ret
jbe
xchg
sbb
cmp
fdivs
pop
xor
popa
jl
outsl
jmp
cmpsb
jp
add
cmpsb
mov
in
mov
imul
xor
dec
jecxz
out
iret
movsb
mov
mov
fs
mov
and
ss
add
clc
ficomps
test
push
dec
imul
mov
shrb
insl
mov
fists
sbb
hlt
loopne
cs
mov
mov
test
dec
or
xlat
inc
lahf
nop
movsb
daa
pop
mov
insl
sub
xor
scas
mov
pop
pop
and
jbe
or
out
pop
outsb
pushl
cmpsl
hlt
jle
inc
mov
mov
adc
or
int
test
pop
mov
leave
cmc
cmp
sbb
popf
lea
int
mov
stc
pop
pop
adc
lahf
mov
dec
fiaddl
int
call
lock
cmp
into
enter
jmp
xlat
or
and
aaa
push
jo
add
jecxz
ds
jnp
mov
insl
je
pop
xor
dec
mov
int
fldl2t
sub
pop
inc
cmp
xor
loop
enter
decb
clc
cltd
or
jecxz
cmp
pop
and
or
gs
lods
push
in
dec
xor
push
lret
inc
or
pop
ljmp
cwtl
adc
lds
add
mov
adcl
inc
stos
out
test
and
adc
cmpb
push
mov
cmc
or
ja
lahf
add
sub
in
push
int
push
xchg
sbb
xor
ja
rep
or
movl
jmp
into
jne
inc
sbb
pop
clc
push
shll
sbbb
jns
sbb
mul
in
xor
cmp
lcall
enter
icebp
dec
sbb
xor
loop
pop
imul
fldenv
imul
mov
loop
stc
sub
imul
sahf
popa
ljmp
bts
repnz
insb
and
rcll
mov
ds
jg
lcall
push
or
inc
jl
loope
cmp
xor
push
push
mov
mov
scas
or
mov
in
std
mov
pop
sub
lret
cmp
jp
fisttps
mov
aad
pushf
imul
pop
addb
mov
out
in
mov
xor
cs
mov
or
fisubl
mov
rclb
mov
ss
subb
stos
sbb
fcomp
popa
pop
jmp
pop
clc
xchg
push
dec
in
mov
pop
mov
jb
nop
xchg
or
lret
xchg
push
rcr
pop
outsl
out
dec
in
cs
in
inc
dec
inc
push
scas
nop
xchg
or
push
rcl
lods
cs
dec
jns
out
jle,pt
ds
gs
out
lret
into
push
xor
out
repnz
and
lcall
cmpsb
addr16
out
decl
or
mov
outsb
into
js
js
mov
popf
cmp
into
or
sbb
mov
lock
iret
into
and
adc
shl
out
or
inc
inc
adc
mov
fdivr
aas
adc
jne
negl
subl
stos
mov
push
gs
sub
sub
add
mov
ret
pop
out
mov
inc
inc
or
pop
mov
iret
jbe
movb
nop
sbb
loopne
adc
cmp
fisubs
sub
adc
cmpsb
xchg
rcr
mov
inc
mov
mov
add
shrl
mov
mov
mov
scas
mov
sub
fildl
push
faddp
and
jo
mov
mov
rclb
data16
or
mov
cwtl
dec
stc
xchg
sub
push
inc
sti
fdivl
mov
lret
sarl
mov
movsb
jp
mov
xchg
push
mov
push
insb
xchg
push
mov
mov
jecxz
xchg
and
aas
fldl
inc
jno
inc
daa
mov
pusha
es
fistpl
adc
push
lods
lret
xor
pop
imul
cltd
movsl
jnp
xchg
lcall
pop
mov
fwait
mov
fnstenv
popa
mov
push
dec
incb
sti
mov
mov
jp
push
push
sub
jb
out
shlb
jo
je
dec
ficomps
lahf
lahf
mov
xchg
pop
add
lds
test
inc
cwtl
mov
orl
mov
jl
repz
std
mov
jg
mov
or
popf
xchg
mov
jns
fcmovb
inc
lret
repz
xchg
stc
xor
repnz
arpl
in
into
test
cmpsl
movl
movl
movl
movl
movl
movl
movl
movl
movl
push
movl
mov
mov
push
push
push
call
mov
mov
xor
mov
mov
mov
jmp
das
ret
pop
sub
ret
xchg
mov
cmp
sbb
sbb
mov
add
inc
mull
negb
add
jmp
add
mov
push
aam
int3
lcall
inc
jg
loope
nop
clc
lock
mov
mov
leave
lods
xorl
mov
das
cmp
iret
add
mov
stos
out
rolb
fistpll
lcall
dec
or
xor
mov
or
movsb
xor
push
pop
sbb
jmp
lods
jbe
or
adc
out
mov
or
je
and
mov
add
fwait
push
fs
popa
push
mov
sbb
cmp
inc
jg
mov
lea
push
xor
movsb
pop
fsubrs
rcll
xor
xor
scas
mov
xchg
add
xchg
mov
stc
imul
dec
xor
sbb
xchg
push
in
incl
mov
push
mov
xlat
cmp
es
xor
push
cltd
inc
jg
sbb
xchg
mov
rorl
outsb
xor
and
loop
es
fcmovnu
push
adc
push
dec
lods
cmp
and
xor
dec
test
xchg
dec
pusha
fadds
je
call
rclb
inc
jle
jp
inc
loopne
push
je
sbb
add
add
pop
outsb
add
and
mov
cld
and
sub
jmp
out
jge
dec
fs
inc
aad
xchg
mov
mov
dec
dec
lods
sub
and
sbb
cltd
scas
test
adc
push
mov
cld
xor
cmpsl
mov
jae
jns
mov
je
andb
mov
outsl
js
lret
rorl
mov
inc
pushf
out
js
insb
arpl
subb
gs
xchg
sub
and
fdivrl
mov
outsb
xor
inc
lds
pop
fistl
jne
xor
push
add
cmp
add
sar
mov
cmpsl
push
pop
idivl
cmp
movsb
mov
xchg
and
mov
mov
iret
outsl
mov
popf
icebp
mov
mov
xchg
cld
insb
fimuls
push
mul
adc
scas
ds
int
roll
mov
fucomi
in
and
je
fcom
sub
ja
js
imul
jbe
mov
arpl
lods
test
xor
stos
mov
mov
xchg
popa
mov
adc
pop
jb
stc
outsl
jno
mov
out
cmp
lock
inc
imul
test
mov
mov
in
ret
pop
sbb
dec
loop
or
fists
loopne
sbb
pop
movsb
clc
dec
and
inc
test
push
cltd
fimull
sbb
xchg
dec
leave
pop
lods
sub
mov
mov
add
cld
push
sub
js
sub
in
pop
adc
inc
pop
movsb
lea
je
mov
pop
inc
pop
cmpsl
out
loop
lea
addl
les
add
enter
inc
add
add
data16
or
add
cltd
adc
cmp
jne
cmp
je
mov
mov
mov
mov
add
adc
or
mov
or
mov
push
push
push
push
call
mov
mov
and
mov
mov
jmp
fs
cmp
cmpsb
dec
adc
cltd
jb
sbb
sbb
cltd
cmp
idivl
dec
mov
fnstsw
inc
js
pop
or
inc
jp
cmpsl
daa
leave
jo
es
shlb
sub
inc
xorb
jge
lods
add
fwait
inc
mov
pop
imul
arpl
pop
add
jne
mov
mov
movlps
nop
cmp
cmpsl
lods
xchg
aas
int
cmp
daa
push
adc
mov
jge
xchg
pushf
rcll
xor
cltd
adc
outsb
repnz
pop
shr
push
lds
or
inc
or
imul
pop
mov
mov
arpl
push
sbb
repnz
xchg
outsl
xchg
mov
dec
jbe
mov
lock
push
mov
out
cli
adc
sub
cmpsl
dec
lret
in
inc
sub
pop
pop
push
sahf
sub
movl
loope
cmp
fnstcw
adc
clc
jmp
fistps
out
inc
and
sbb
inc
es
ds
cwtl
faddl
cld
mov
sub
ss
jno
lods
dec
adcb
pop
lret
sbb
xchg
mov
mov
insb
push
out
jno
dec
rorb
sarb
int
cwtl
es
push
insl
dec
sub
xor
mov
push
mov
jp
add
xor
hlt
dec
loope
jl
int
or
xchg
repnz
aad
jmp
push
lret
xchg
insb
lds
mov
cmp
stos
push
xor
cwtl
dec
sbb
les
lret
pop
pop
xor
outsb
mov
fs
nop
mov
mov
je
adc
push
daa
jmp
pop
dec
dec
movups
cwtl
inc
mov
out
pop
lods
push
pop
pop
movsb
mov
add
negl
insl
mov
add
icebp
jns
jmp
adc
in
aam
je
in
and
mov
xchg
and
add
mov
push
xchg
and
sarb
add
cmpsl
pop
rcrl
push
sbb
adcb
jl
out
popa
or
lahf
roll
testl
mov
int
or
int3
sbb
enter
adc
mov
pop
mov
jno
xor
loope
movb
push
in
xor
shlb
ret
sub
or
adc
subb
dec
cmp
xchg
pop
xchg
repz
and
cmp
inc
js
fsubrs
cmp
ljmp
push
mov
sub
mov
jg
dec
inc
test
xchg
or
sub
adc
and
pop
popf
sub
sub
data16
xchg
mov
and
or
pop
adc
pop
aad
mov
dec
xor
and
bound
cmpb
dec
push
dec
xor
inc
loop
stos
xchg
mov
dec
cmc
push
daa
pop
xlat
cmp
in
bound
repz
imul
inc
xorb
push
dec
push
insl
ljmp
mov
mov
and
xor
xor
xor
cmp
jne
cmp
jne
mov
mov
add
or
mov
or
xor
lea
xor
mov
and
add
mov
xor
xor
div
mov
mov
xor
imul
mov
push
push
jmp
sbb
sbb
jo
in
mov
insb
sbb
jns
sbb
shrl
mov
dec
mov
inc
mov
aas
decl
sbb
adc
lahf
add
mov
aaa
enter
movsb
jg
inc
mov
stos
test
xchg
cld
cmp
cwtl
insb
mov
xor
push
test
cmpsb
xchg
gs
fisttpll
mov
adc
bnd
xor
cmp
dec
mov
mov
loope
pop
in
int3
xchg
xorl
test
scas
sub
pop
xchg
out
mov
std
sbb
adc
cmp
stos
repz
xor
imul
in
lret
pusha
test
mov
icebp
std
fimull
iret
rolb
jne
icebp
loopne
mov
cltd
leave
jmp
or
adc
rclb
xor
mov
inc
dec
rclb
xchg
imul
shlb
fidivl
movsb
inc
or
in
and
lret
xor
push
pop
push
movsb
adc
push
fnstenv
shll
or
jge
mov
mov
loopne
push
shlb
sti
sahf
mov
add
cli
loope
fwait
and
sahf
push
mov
dec
btl
mov
aad
dec
rcrb
xchg
nop
stos
jecxz
cmpsl
lods
out
or
pop
das
add
pop
sub
xorps
scas
clc
imul
sbb
push
outsl
adc
jae
nop
mov
sarb
inc
mov
insl
mov
roll
xchg
sub
mov
adc
inc
xchg
movsb
aad
testb
das
xor
and
add
imul
xor
mov
sbb
xchg
sbbb
mov
mov
adc
test
test
mov
sub
shll
pushl
mov
jmp
sub
jp
in
loopne
cmp
movsb
sub
inc
jo
out
orb
icebp
dec
xor
mov
cmp
push
mov
sti
xor
ljmp
mov
rcrb
loop
and
ret
sub
push
aam
jl
xchg
mov
dec
ret
lcall
leave
push
dec
lret
outsl
add
pop
and
inc
scas
ret
mov
xchg
out
imul
fdivp
xor
sub
pop
shll
mov
add
push
lcall
push
in
insl
daa
push
lods
pop
fsubr
ss
call
js
imul
jge
bswap
test
sbb
fmul
adc
leave
cmp
or
sbb
cmp
insl
imul
cli
xchg
pop
xor
testl
cmp
insl
cli
or
aam
test
xor
mov
lds
imul
xor
aad
sub
sub
inc
and
out
mov
lds
ljmp
push
test
pop
jns
adcl
test
add
mov
lea
mov
mov
lea
mov
mov
or
xor
div
mov
add
xor
add
mov
add
mov
mov
mov
mov
sub
mov
sbb
mov
xor
mov
xor
jmp
adc
xor
popf
scas
xchg
sbb
jns
sbb
outsl
test
fisubs
iret
adc
mov
or
repz
mov
loopne
fnstsw
jae
push
pop
lahf
ret
test
adc
sbb
xchg
dec
adc
test
cmpsb
cmpsb
sti
pop
push
jecxz
aaa
dec
int3
xchg
sbb
cmpsb
xchg
sub
xlat
outsl
xlat
call
repz
sbb
cmp
inc
dec
subl
loopne
mov
xor
mov
test
jmp
jg
loope
fmuls
lcall
adc
mov
mov
test
insb
xchg
mov
insl
mov
add
mov
dec
ja
jno
fdivr
push
xchg
dec
in
and
mov
mov
mov
cmc
pop
add
jb
int
dec
loop,pn
orl
push
mov
push
mov
fldl
data16
pop
sub
popf
orb
push
arpl
outsb
dec
inc
test
movsb
mov
push
adc
xor
adc
es
xchg
imul
xchg
push
xor
cld
stos
loop
xchg
inc
in
mov
jecxz
mov
lock
sub
adc
mov
cwtl
add
sub
imul
test
dec
sbb
sbb
fisubs
je
push
mov
cmpsl
insl
mov
mov
lret
es
outsb
hlt
iret
in
add
mov
addr16
imul
jl
jmp
jmp
jecxz
nop
pop
subl
push
repnz
sbb
cmp
pop
sub
mov
shrl
mov
shl
mov
arpl
ffreep
mov
dec
adc
and
loopne
sub
push
cwtl
fwait
sbb
std
repz
imul
test
xor
jmp
lret
push
sti
mov
add
movsb
xchg
jge
out
sbb
cmpsl
pop
pop
in
je
jmp
and
xchg
push
mov
outsb
popf
aam
push
lret
adc
aad
idivl
sbb
xor
push
pop
push
test
dec
popf
imul
shrl
je
rclb
popa
loope
jl
cmp
imull
inc
mov
lret
mov
dec
hlt
shlb
je
push
and
mov
inc
test
shlb
xor
add
dec
pushf
movq
pop
add
dec
xor
mov
or
sbb
test
sbbb
shl
adcb
add
lods
aaa
xor
movb
js
rorb
cmp
aam
sbb
iret
ret
test
sbb
xlat
lods
lods
fistps
inc
and
ss
mov
loope
dec
filds
jl
jno
mov
fildll
rcll
lret
mov
xor
loop
xchg
imul
cmp
call
inc
outsb
xor
mov
arpl
enter
les
outsl
inc
dec
and
fs
push
mov
add
adc
add
adc
push
push
call
mov
sub
push
pop
sbb
mov
xor
cmp
jne
cmp
jne
mov
mov
add
shr
or
mov
xor
xor
add
mov
jmp
or
hlt
add
fistpl
mov
stos
or
sbb
jns
sbb
mov
inc
icebp
jno
insb
aas
cmp
ja
or
cmp
cmovg
mov
and
movsl
sahf
scas
and
push
test
ds
sbb
fisttpl
aas
sti
xchg
adc
push
mov
pop
or
xor
cld
movsl
and
in
ficomps
repnz
into
movsb
gs
push
or
cmp
mov
pusha
mov
xor
adc
cmp
pop
xchg
jbe
jp
and
sbb
sub
mov
xchg
xchg
nop
mov
cmp
xchg
jmp
outsl
hlt
stos
aaa
dec
subl
lds
pop
movsb
push
or
push
arpl
or
cmovno
or
cmp
dec
and
popa
jmp
pop
test
sarb
movsb
adc
hlt
lcall
inc
pop
dec
jge
adc
xadd
ds
push
scas
shr
or
cld
scas
inc
sarb
or
pop
pop
stos
std
sbb
mov
into
xor
in
lcall
dec
adc
aas
mov
cmpsb
dec
in
xchg
push
lds
fnstcw
cmovs
or
addl
loop
icebp
cmpsl
jbe
stos
mov
or
and
out
xchg
and
leave
mov
jns
clc
aam
lea
test
in
mov
aad
das
lret
sub
xchg
rclb
mov
aas
pushf
dec
lods
fdivr
cmpsb
jmp
fdivp
add
in
xor
fldt
sub
add
pop
mov
aam
jmp
inc
ret
xchg
sub
adc
push
subb
arpl
jmp
jmp
loope
inc
pop
inc
test
pop
fwait
int3
adc
pop
mov
xchg
inc
or
pop
aaa
cmp
add
scas
jg
and
aas
enter
insb
testb
daa
and
and
js
int3
insb
sti
int
fidivrl
and
out
fmull
dec
aam
mov
mov
into
call
push
and
inc
cmp
clc
stc
mov
xchg
add
sbb
lcall
pop
sbb
repnz
or
adc
inc
leave
cmp
lea
cmp
imul
mov
les
mov
lea
cwtl
dec
ss
hlt
xchg
or
pop
dec
mov
xlat
es
rcrb
jnp
xchg
push
imul
mov
pop
push
dec
ljmp
inc
mov
rorb
aam
push
adc
xchg
ret
in
daa
push
cmp
jmp
push
jg
popf
gs
out
leave
jp
out
xor
lock
dec
idiv
mov
cmp
cmpsb
pop
dec
jg
outsb
sahf
aas
inc
jge
xchg
jecxz
xor
cwtl
mov
add
xchg
cmpsl
push
in
pop
into
rorb
fs
pop
in
inc
inc
xchg
cmp
pop
icebp
cmovp
inc
ss
adc
cli
mov
add
in
sub
push
push
push
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
adc
mov
push
push
or
or
push
push
call
mov
mov
and
or
mov
mov
and
or
xor
xor
shld
shl
shr
xor
or
or
xor
mov
mov
xor
mov
jmp
aas
cmpl
mov
jl
jle
pop
sbb
je
sbb
push
lret
mov
lock
testb
and
das
inc
xchg
outsb
shll
ret
rolb
push
cmc
mov
mov
ja
out
les
cmc
jnp
and
ja
int
ret
dec
sbb
sbb
jae
fists
xchg
scas
mov
arpl
jle
in
cmp
addl
roll
cwtl
pushl
js
imul
or
add
jge
ss
mov
ret
cmpl
sub
jge
or
adc
dec
push
aaa
js
adc
sub
sbbl
inc
dec
pop
mov
ja
movsl
test
mov
and
lea
test
push
push
scas
jp
xchg
inc
add
xchg
jecxz
mov
mov
mov
and
shl
in
mov
sbb
ss
jge
push
sub
aas
notb
es
mov
push
ljmp
lea
ret
cmpsl
in
ret
mov
cmp
popa
xor
ds
or
sub
xchg
fs
adc
push
stos
and
inc
cld
movsl
out
sbb
insl
jmp
or
dec
vmovss
dec
add
mov
fcoml
sub
push
cmpsb
popf
jno
xor
popf
sub
xor
leave
jge
mov
stos
lods
xor
mov
push
lods
fdivrl
ret
repnz
sbb
lock
mov
sbb
push
daa
xor
dec
push
xchg
cwtl
xchg
and
mov
xchg
jle
rcl
stos
or
bnd
mov
popa
pushf
adc
cmpsl
aas
inc
clc
popa
sub
sbb
test
xor
lods
std
iret
faddl
sbb
mov
int
xor
inc
push
push
bound
es
ja
inc
jp
ret
rcll
mov
fs
clc
outsl
xchg
je
mov
pop
cmp
loope
std
jns
or
fwait
and
jge
xchg
or
es
dec
push
sub
pop
sub
push
scas
lea
push
ja
sbbl
add
push
mov
add
mov
jl
xor
negl
shlb
xchg
daa
pop
notb
mov
bound
fistps
in
push
loopne
adc
ret
xchg
xlat
inc
dec
sub
stos
mov
mov
fsts
pop
sub
dec
push
lret
pushf
pop
ret
stos
sbb
movsl
push
xor
jmp
std
enter
xchg
pop
rcrl
pusha
in
lret
xchg
dec
int
lock
dec
xor
lods
cwtl
cmp
dec
int3
mov
mov
push
push
push
push
call
add
adc
push
push
push
push
call
mov
mov
mov
xor
xor
xor
add
mov
adc
mov
mov
mov
mov
mov
sub
mov
mov
sbb
mov
sub
mov
sbb
add
mov
adc
push
xor
mov
pop
sub
mov
sub
mov
mov
mov
add
xor
shrd
xor
shl
xor
shr
or
xor
or
mov
push
mov
mov
mov
push
push
push
call
mov
mov
mov
or
mov
or
mov
add
mov
adc
mov
add
mov
adc
add
pop
adc
pop
mov
mov
pop
leave
ret
push
mov
sub
movl
jmp
imul
pop
jbe
mov
insl
mov
push
sbb
and
sbb
sbb
and
or
iret
xchg
or
int3
xor
mov
icebp
jg
sbb
lock
cmp
mov
rcll
cmpsb
decb
gs
add
and
pop
cmpsl
inc
mov
mov
xor
fisubrs
les
in
shrb
fisttps
cmp
jmp
pop
add
pop
jo
pop
sub
add
lock
clc
xor
dec
rorl
neg
popa
fildl
flds
imul
cmpsl
loope
inc
pop
mov
inc
inc
ss
adc
scas
in
xlat
sub
push
push
cmp
dec
aam
enter
lods
lret
mov
rcr
enter
and
test
inc
imul
pop
sbb
jb
ljmp
lds
adc
pop
jnp
add
mov
das
sub
xor
push
mov
sub
lret
in
jg
mov
es
data16
inc
clc
rorb
xor
dec
repz
mov
fwait
in
inc
jmp
and
mov
mov
ds
xchg
test
adc
mov
xor
inc
daa
outsb
jae
adcb
adc
jge
jle
dec
sbb
xchg
dec
shrl
xchg
add
cmp
bnd
pushl
pop
jl
xor
movsl
insb
repnz
pushf
sub
enter
add
pop
inc
fsubs
scas
bound
bound
jb
add
int
xor
imull
add
ss
in
adc
add
fsubrl
dec
xor
arpl
movsl
cwtl
push
jno
xchg
cmp
iret
ja
lcall
push
popa
jle
in
roll
repz
cld
sbb
scas
adc
xchg
or
sbb
fst
ljmp
pop
jecxz
jo
sub
jae
nop
int3
dec
jns
cltd
dec
or
test
stc
imul
jnp
cld
adc
add
pop
mov
stc
pop
pop
dec
clc
jne
insb
loopne
aaa
push
call
lods
gs
je
ja
mov
sbb
xchg
pop
sub
xor
mov
mov
lret
lret
sbb
out
or
pop
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
and
add
mov
and
mov
sub
and
mov
mov
imul
add
add
xor
cmp
jne
mov
mov
mov
sub
add
mov
or
mov
imul
sub
add
mov
or
mov
mov
add
imul
add
mov
add
mov
mov
mov
and
mov
and
mov
imul
mov
or
mov
imul
mov
sub
cmp
je
mov
jmp
mov
sub
xor
add
jmp
movl
movl
mov
mov
imul
add
and
add
or
sub
leave
ret
push
mov
and
sub
push
push
lea
mov
mov
mov
mov
sub
sbb
mov
orl
orl
lea
push
lea
push
jmp
pushf
cmp
jl
sti
iret
jo
dec
sbb
scas
adc
sbb
stc
xor
enter
movb
cmp
and
dec
cli
dec
jne
aas
jge
cltd
jnp
and
push
dec
int
pop
cwtl
mov
xor
sbb
inc
inc
adc
adc
xor
mov
cmpsl
push
push
cwtl
int
lcall
fidivs
pop
jns
push
mov
xlat
xchg
sahf
test
inc
sub
stc
adc
mov
pop
test
xor
in
dec
adc
in
sub
sbb
ds
lcall
loopne
lret
xchg
dec
sub
clc
dec
mov
dec
xchg
push
and
xlat
xor
xchg
mov
mov
jmp
pop
mov
mov
in
aaa
fs
ds
cli
into
push
jbe
dec
daa
in
inc
test
and
out
push
lods
jmp
mov
into
jp
push
in
aaa
out
pushl
ljmp
mov
scas
and
je
cmp
into
jge
dec
push
mov
js
pop
jmp
inc
inc
push
mov
cmc
adcb
cmpsb
fisubs
xor
lods
jnp
loop
xlat
rclb
test
or
iret
or
jo
insl
insl
insl
cmpsl
icebp
lea
push
scas
idivb
imul
pop
arpl
shrb
or
cmp
loop
xchg
add
pop
mov
inc
mov
jbe
es
int3
clc
movsl
subl
mov
bound
sbb
lret
insl
cmp
inc
ljmp
pop
in
stos
cmpsl
dec
dec
pop
movsb
icebp
mov
xchg
cltd
push
sbb
lods
fnstsw
lds
xchg
pop
inc
shll
mov
lret
dec
inc
jl
ret
fwait
aam
mov
sahf
dec
lret
jp
cmp
or
aad
scas
jb
and
and
and
stc
or
into
orl
mov
dec
xchg
xor
or
jne
sbb
mov
cs
in
pop
xchg
mov
fisttps
mov
das
les
xor
and
dec
sarl
jo
add
sub
mov
xchg
cmpl
pop
mov
push
mov
or
out
pop
aaa
adc
rcrb
lods
ja
dec
imul
ja
mov
adc
stos
push
aam
cmp
ss
push
fimull
in
scas
in
test
cmp
jp
mov
mov
addr16
cmc
lcall
and
and
push
add
out
push
pop
or
pop
fidivs
lea
int3
test
inc
fsubs
xor
aam
nop
xor
loope
and
clc
add
jmp
add
sti
ljmp
or
mov
sbb
clc
int
in
jo
xlat
push
inc
add
xchg
xlat
cld
scas
xor
jp
ss
inc
jg
push
cmpsl
or
loop
add
dec
cs
add
or
cli
lods
fisubrl
cmp
push
das
test
pop
push
in
lock
lcall
popf
mov
or
sbb
mov
xchg
lods
and
dec
push
leave
sub
jno
mov
xchg
sbb
or
cmove
lods
pop
inc
dec
nop
push
mov
repnz
decl
dec
and
pushl
mov
pushl
mov
pushl
pushl
pushl
pushl
pushl
call
pop
jmp
roll
andb
sbb
loop
jl
dec
or
adc
sbb
add
stc
dec
cmp
hlt
jnp
ljmp
cmp
pop
sbb
stc
add
inc
mov
and
es
shll
outsl
lahf
xor
scas
in
inc
sbb
aas
ljmp
ja
mov
es
jl
inc
out
cwtl
movb
aaa
and
jo
es
lea
mov
fs
and
stos
js
testb
scas
dec
cmpsl
ret
mov
pop
dec
xchg
mov
stos
shll
in
leave
mov
outsb
pop
pop
mov
cmpsl
push
fstps
jecxz
jae
lret
daa
ja
adc
fildl
adc
leave
cmp
mov
xchg
xchg
xor
out
dec
lret
insb
jne
ret
or
cltd
repz
insb
iret
jecxz
mov
add
inc
cmp
lods
ret
outsl
add
sahf
jns
jnp
movups
fisttpl
push
jne
cmp
and
test
mov
call
lahf
rcl
jne
bnd
ret
inc
mov
rcll
mov
cmpsl
and
add
mov
mov
cmp
repnz
ljmp
inc
sub
daa
push
outsl
ljmp
jmp
sbb
inc
xchg
mov
out
push
push
int
das
xor
mov
int3
dec
fistl
je
in
repz
dec
daa
testl
inc
xchg
sbb
or
ss
mov
inc
out
mov
jo
sub
jge
mov
aas
xchg
out
sbb
int3
jmp
mov
test
stos
mull
stos
dec
pop
and
cmp
sub
bound
adcl
sub
sub
bnd
test
jg
gs
stos
imul
adc
into
add
and
popa
sbb
gs
xor
adc
xor
jns
xor
mov
pop
cmc
mov
in
xchg
aam
mov
pop
and
dec
jecxz
gs
mov
mov
jle
mov
xchg
mov
addb
dec
lcall
inc
cltd
out
outsb
sub
mov
ja
sbb
jle
sbb
test
fcoml
std
lds
int3
inc
cltd
addr16
fcmovb
je
xlat
popf
mov
dec
xchg
inc
ret
fiaddl
jp
andl
test
int
push
adc
lea
pop
daa
test
into
xorl
out
cmc
and
sub
inc
and
add
aas
jg
movq
mov
enter
lcall
pushf
and
lret
aas
mov
lods
fwait
dec
lods
jno
andl
xchg
shrb
mov
add
cli
daa
std
hlt
add
int3
cwtl
push
adc
ja
mov
inc
mov
push
fsubl
push
jno
mov
pop
dec
pusha
jmp
mov
daa
repz
and
mov
push
push
push
shl
aam
add
cld
scas
inc
pop
out
int3
es
sub
jle
or
shlb
stos
pop
popf
popa
xchg
inc
cmp
loopne
inc
cmp
cld
arpl
das
jp
push
mov
andb
push
neg
sub
ret
sub
or
loope
and
or
out
arpl
in
ret
push
mov
sub
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
add
xor
mov
and
imul
xor
push
movl
movl
movl
mov
mov
xor
sub
div
mov
mov
or
xor
mov
sub
mov
mov
mov
mov
mov
mov
mov
mov
imul
and
or
xor
add
mov
mov
sub
add
mov
xor
mov
and
mov
xor
sub
mov
mov
and
lea
mov
shr
or
mov
sub
add
cmp
jbe
pop
leave
ret
push
mov
sub
sub
push
push
push
adc
mov
cmpl
mov
mov
mov
mov
jmp
mov
jne
push
pushl
call
mov
mov
sub
and
and
xor
sbb
add
or
mov
or
shrd
shr
mov
and
mov
xor
mov
add
mov
sbbl
xor
xor
or
mov
add
or
mov
mov
adcl
shl
mov
and
shrd
add
xor
xorl
shr
adcl
mov
mov
xor
or
orl
mov
mov
xorl
mov
sbbl
mov
mov
cmpl
movl
notl
mov
movl
jmp
movl
jl
push
call
sbb
and
xor
xor
sbb
or
sbbl
xor
and
mov
sub
mov
mov
and
mov
dec
mov
cmpl
movl
movl
movl
jmp
movl
movl
jl
push
pushl
pushl
call
and
neg
and
adc
not
sbbl
shl
xor
shld
add
shl
mov
mov
mov
mov
addl
xor
xor
movl
movl
movl
mov
cmp
movl
jne
cmp
movl
je
sbb
mov
movzwl
xor
mov
mov
xor
xorl
shld
addl
shl
xorl
xor
mov
mov
adc
mov
xor
mov
mov
cmp
jne
cmp
jmp
push
inc
shlb
cmp
jo
jno
jle
sbb
notb
sbb
and
popa
pop
add
add
in
jns
pop
xor
mov
int
pop
pop
out
pop
and
pop
outsb
adc
adc
cwtl
jnp
shll
lods
aaa
jg
repz
dec
loop
je
sbb
sbb
test
jb
popf
sub
in
push
lods
cltd
push
mov
lahf
aad
pop
test
lods
sbb
push
jecxz
je
popf
popa
xchg
xchg
in
nop
or
in
push
mov
enter
sbbb
out
or
iret
xchg
mov
jmp
inc
movsb
pop
and
je
push
ja
mov
jecxz
aaa
xor
or
ret
jp
push
rcr
mov
or
inc
pop
mov
std
cltd
test
fbld
call
mov
repz
mov
rcrl
test
mov
xchg
stc
sub
mov
in
lret
dec
inc
mov
dec
dec
dec
dec
es
mov
inc
popa
in
mov
fbld
xchg
jecxz
aad
pop
in
pop
pop
pop
inc
xchg
enter
aas
mov
xor
jmp
stc
pop
pop
pop
and
inc
jbe
ffree
lea
dec
xor
cld
test
dec
popf
mov
popa
lds
lods
sbb
jg
aas
or
pop
and
out
push
sahf
mov
imul
out
jns
mov
jl
mov
fcoms
pop
xlat
push
cld
jae
mov
mov
push
dec
in
mov
mov
inc
add
push
xchg
lret
mov
hlt
std
jle
fsubrl
cltd
loopne
sub
jmp
test
imul
jbe
xchg
andb
pop
jne
loop
cld
xchg
aaa
mov
iret
rep
sti
das
jmp
lods
stos
mov
gs
add
dec
mov
int
mov
mov
dec
stos
jmp
push
lods
out
lret
jnp
jne
hlt
or
cmp
ja
into
arpl
test
or
out
addb
inc
add
mov
cmpl
movl
mov
mov
movzwl
jmp
movl
jle
push
call
mov
mov
sub
add
xor
xor
xor
sub
mov
sbbl
adcl
orl
or
mov
push
cmpl
mov
mov
jmp
mov
mov
jge
push
call
mov
sbb
inc
and
and
orl
and
pop
xor
mov
add
shl
neg
mov
xor
notl
shr
or
mov
or
mov
cmpl
notl
mov
jmp
movl
jge
push
push
call
movzbl
add
mov
andl
andl
mov
sub
sub
inc
mov
adcl
mov
mov
cmpl
mov
movzwl
movl
movl
jmp
mov
movl
jle
pushl
call
or
addl
sub
xor
mov
adc
or
mov
push
cmpl
movl
movl
movl
jmp
movzbl
jle
push
call
orl
and
adc
orl
adc
subl
add
sub
pop
sub
adcl
mov
andl
add
subl
mov
sbbl
lea
addl
mov
xor
add
mov
adc
mov
mov
xor
mov
xor
xorl
xor
shr
orl
shl
incl
or
addl
mov
movzwl
adc
movl
mov
dec
mov
xor
subl
xor
xorl
shr
shl
or
adcl
push
lea
xorl
push
lea
adcl
push
andl
call
mov
mov
mov
xor
mov
xor
cmpl
mov
mov
not
jmp
mov
jne
pushl
push
push
pushl
call
sbb
mov
or
mov
or
inc
xorl
inc
xor
cmpl
mov
mov
movl
jmp
movl
movl
jbe
push
call
adc
add
sub
sbb
orl
sub
shr
movzwl
add
mov
shl
or
subl
push
andl
lea
push
mov
mov
shrd
shr
mov
mov
xor
jmp
rorl
lret
jb
jns
shll
jl
cmp
sbb
adc
sbb
xor
loopne
sbb
sub
clc
stc
inc
iret
movb
xor
or
sub
jle
mov
or
adc
mov
sti
dec
and
cmpsl
jno
icebp
push
jno
in
sub
jne
add
inc
pop
push
mov
and
mov
lret
fldt
loopne
gs
pop
loope
leave
add
push
sahf
mov
ss
pmulhuw
pop
call
mov
adc
subl
sbb
and
repz
arpl
neg
gs
jmp
loop
es
jne
stc
and
rorl
push
fs
cmp
imul
or
out
sub
and
test
fnstcw
sbb
std
jbe
cwtl
scas
ss
stc
fwait
add
inc
xor
dec
popf
mov
into
and
adc
push
jno,pn
jns
lahf
in
dec
mov
mov
scas
popa
or
pop
jo
pop
ds
adc
loope
pop
push
xchg
adc
push
dec
fisttpl
cltd
sbb
inc
aas
fucomp
loope
icebp
rolb
iret
or
test
lahf
add
mov
inc
add
mov
mov
xor
lahf
adc
inc
into
das
jmp
movsl
in
daa
and
out
mov
add
inc
cmp
outsb
sub
push
jae
shlb
adc
sbb
in
xor
ss
mov
pop
xor
in
mov
xor
jmp
cmp
jbe
das
sti
xor
push
push
bound
mov
mov
and
leave
add
mov
shr
dec
leave
jno
pop
data16
test
push
test
jo
jno
inc
lock
sarl
sbb
pop
xchg
xor
jnp
sub
xor
cltd
stc
imul
xchg
mov
and
inc
add
and
mov
sub
dec
popf
push
imul
or
lea
push
shl
call
mov
mov
xor
xor
shr
shl
or
push
lea
push
mov
mov
shrd
shr
mov
mov
xor
xor
or
lea
push
shl
call
mov
mov
xor
xor
shl
shr
or
push
lea
push
mov
mov
shrd
shr
mov
mov
jmp
dec
shlb
sbb
ds
jns
icebp
push
mov
sbb
adc
sbb
add
xor
in
inc
outsl
pusha
or
pop
daa
lret
es
jae
or
lcall
sub
es
js
data16
pop
sarl
xlat
adc
adc
and
dec
movsb
pushl
pushl
ret
cs
enter
or
leave
rolb
push
inc
popa
enter
push
int
iret
aam
jb
lcall
es
loop
xor
in
mov
jmp
push
pop
add
notl
cmpsl
add
push
sub
movsl
daa
cmpsb
lcall
arpl
int3
rorl
xlat
daa
mov
imul
lahf
adc
xchg
or
push
jecxz
out
fisubrl
inc
das
inc
push
jno
cmp
clc
bound
fiadds
addl
jmp
inc
pushf
mov
xchg
inc
stos
cmp
sub
jp
push
out
movb
jnp
outsl
mov
ds
fldt
stos
aad
and
mov
mov
cmp
add
pushf
jae
fld
xchg
and
adc
sahf
xchg
adc
shlb
pop
mull
out
nop
lcall
lret
and
xchg
sub
cmp
adc
je
or
cmp
fwait
outsl
jp
aas
iret
and
rorb
in
insb
xor
lods
adcb
loop
xchg
stc
sub
mov
push
ss
mov
adc
cli
inc
jae
cmpsl
sbb
ffree
gs
popf
inc
dec
dec
adc
cltd
xchg
sbb
stos
or
mov
fstl
xchg
movsb
or
js
lahf
mov
lcall
fs
xor
push
jno
mov
jo
xlat
incb
add
lahf
movsl
and
xor
mov
jmp
mov
jmp
jb
mov
in
shlb
or
shl
mov
jmp
in
je
push
fimull
movsl
mov
inc
xor
sbb
adc
sbb
fisubl
jo
mov
in
daa
iret
rep
jnp
mov
lret
das
push
pop
test
and
loope
test
mov
mov
out
js
jae
xchg
mov
mov
andb
mov
or
inc
cli
sub
call
sbb
pop
mov
inc
lret
jg
repnz
cmpsb
lcall
in
dec
loope
xor
aaa
sbb
cmp
dec
jbe
xor
movsb
xlat
into
in
cltd
push
fmulp
mov
pop
stos
push
pop
inc
xlat
sahf
ss
mov
or
mov
dec
cmpsl
sbb
xchg
mov
in
push
dec
fwait
loope
inc
jae
inc
imul
mov
fsubrs
ficoml
leave
mov
and
rcrl
adc
cvttps2pi
into
pop
aad
je
cmp
or
ss
xchg
jmp
cmp
pop
inc
fsubs
fdivl
push
inc
mov
pushf
push
int
push
in
test
cmpsb
sbb
mov
sarb
in
pmovmskb
push
cmp
mov
mov
lret
jbe
or
and
imul
mov
in
adc
sbb
inc
dec
mov
fadds
mov
rclb
mov
adc
mov
mov
xchg
xchg
pop
mov
xor
inc
arpl
clc
shll
mov
outsl
fs
add
repz
dec
cmp
adc
idivl
add
das
dec
push
cmp
popa
push
rclb
cmpsb
mov
dec
mov
fists
inc
outsb
push
sbb
icebp
mov
shl
loop
push
add
pop
call
in
into
xchg
int
int
mov
push
jae
idivb
hlt
std
hlt
out
xor
das
imul
mov
ja
xor
test
or
cmc
mov
shrd
shr
mov
mov
xor
xor
or
add
lea
push
shl
call
mov
mov
xor
shl
xor
shr
or
push
lea
push
mov
mov
shrd
shr
mov
mov
xor
shl
mov
xor
or
mov
shrd
shr
mov
mov
xor
xor
or
shl
add
mov
mov
shrd
shr
xor
mov
mov
xor
or
add
lea
push
shl
call
mov
mov
xor
xor
shr
shl
or
mov
lea
push
mov
mov
shrd
shr
mov
mov
xor
xor
or
push
mov
mov
push
pushl
shl
call
lea
push
mov
mov
shrd
shr
mov
mov
xor
xor
or
push
mov
push
pushl
shl
call
mov
mov
mov
mov
mov
mov
rol
mov
xor
cmp
je
mov
mov
xor
test
je
mov
mov
movzbl
sub
mov
rorb
mov
mov
inc
cmp
jb
dec
jne
mov
mov
shrd
shr
mov
mov
xor
xor
or
push
add
push
lea
push
shl
call
mov
mov
shrd
shr
mov
mov
xor
xor
or
add
push
push
mov
shl
mov
shrd
shr
mov
mov
xor
xor
or
add
push
shl
call
push
jmp
fdivrl
sbb
mov
mov
and
sbb
notb
sbb
insb
push
daa
sub
sbb
xchg
lock
iret
inc
push
cld
sub
xor
test
std
push
add
or
cwtl
shl
push
test
pop
sub
mov
mov
jge
mov
sbbb
mov
subl
mov
mov
loopne
stc
fwait
add
cmp
in
lea
xchg
andb
shl
cli
mov
cmpb
dec
popfw
mov
xorl
inc
ret
adc
loop
ljmp
rcrl
sbb
cld
xor
mov
int
mov
dec
dec
jmp
sahf
in
push
xchg
adc
iret
add
iret
in
jp
cmpsl
cmp
cld
je
daa
push
mov
add
fldcw
jb
mov
cmp
scas
loop
jo
aaa
enter
inc
in
push
stos
or
inc
pop
cmp
inc
ret
ss
jg
movsb
lret
fldl
hlt
stos
xchg
jle
sbb
jmp
int
push
call
push
push
xchg
mov
dec
jge
shll
in
push
stos
shlb
insb
mov
mov
shlb
mov
leave
jbe
sub
xchg
sbb
inc
cmc
mov
pusha
add
in
and
mov
mov
cmp
cmpsl
sub
rcrb
rcll
scas
adc
inc
int3
push
or
jp
jp
loopne
push
xchg
cmpsl
jno
pop
and
aam
pusha
mov
xchg
sbb
test
and
popa
mov
inc
xchg
push
sbb
lahf
jnp
sub
jb
ret
aaa
xor
stc
imul
xchg
test
push
ficoms
pop
cmpsb
adc
or
add
sarl
jp
or
ret
shrb
cmp
xchg
fs
into
gs
cmp
push
popf
mov
or
mov
cmp
lods
inc
out
lea
push
mov
mov
jmp
aaa
and
dec
mov
push
out
add
sbb
notb
sbb
stc
or
popa
fildl
in
xlat
repz
lret
xor
lcall
pop
jns
test
or
jmp
xchg
jge
sbb
mov
dec
xchg
adc
fiadds
pusha
mov
jo
add
enter
iret
or
mov
mov
fsubrl
fnstcw
shlb
add
cmpb
std
rcl
mov
cmpsl
or
call
pop
int
xchg
das
das
js
mov
ljmp
pop
adc
mov
in
push
push
sub
dec
lds
push
pop
sbb
pusha
arpl
arpl
pop
jb
pushf
aam
sub
mov
mov
aam
cmc
push
or
ret
mov
dec
adc
lcall
xchg
leave
adc
pop
xlat
jae
bound
sbb
mov
dec
icebp
jp
aaa
out
xchg
sbbb
inc
jne
and
pop
cmp
and
cld
jmp
rorb
push
xor
push
and
dec
out
adc
pop
scas
in
mov
jae
or
lods
pop
sub
aam
mov
popa
sahf
ss
lds
pop
mov
fidivs
mov
icebp
mov
pop
push
or
ss
cmp
std
sub
adc
dec
movsl
ja
dec
mov
icebp
lret
loope
cwtl
out
lds
xchg
push
pusha
aam
pop
cmp
inc
fistpll
xchg
dec
cmp
adc
dec
mov
sub
sub
mov
loope
and
dec
lea
ja
sbb
pop
incl
jb
je
out
ja
fisttpll
inc
xchg
sub
or
inc
add
or
pop
lcall
cmpsb
call
add
sbb
sti
dec
jge
test
mov
rcl
int3
repz
dec
shrd
shr
mov
mov
xor
xor
or
add
push
shl
call
mov
mov
shrd
shr
jmp
add
bound
cmp
push
fsub
xchg
mov
fsubl
sbb
notb
sbb
xchg
dec
daa
movsb
lret
fsubl
jge
adc
shr
cltd
or
jb
sub
sub
addr16
pop
lods
jmp
adc
push
out
push
add
pop
xchg
imul
mov
add
cmovbe
push
test
out
cmc
in
xchg
adc
pushf
jl
cmpsb
shll
cs
xchg
pop
xchg
sbb
jae
jecxz
or
gs
adc
pop
icebp
push
push
add
outsl
aaa
mov
push
sub
stos
or
out
fstl
ljmp
fistps
or
insl
fisttpll
pop
sub
add
or
pop
aad
rorl
sarb
out
sub
dec
pop
adc
jbe
and
fwait
xchg
add
sub
pop
nop
and
int
in
adc
pop
xchg
and
dec
shl
inc
mov
mov
mov
ljmp
sub
stos
xchg
out
mov
call
mov
jo
cmpsl
inc
out
pop
fnsave
lret
push
mov
mov
shll
lcall
inc
imul
test
fisttpll
arpl
in
cmp
push
pop
cmp
push
or
lcall
jl,pn
xchg
cmpsb
lret
jb
cmc
shl
into
mov
stos
xor
jle
add
jno
pop
mov
movups
stos
inc
inc
ret
repnz
repz
pop
inc
push
cmpsl
iret
dec
inc
mov
or
or
dec
std
fucomp
sbb
sbbb
out
insb
push
add
jp
mov
add
xchg
hlt
hlt
cmpsb
insb
fwait
ret
les
xchg
sub
xor
popa
out
fs
insb
aaa
in
leave
cmp
dec
pop
fxch
inc
scas
mov
popa
inc
jle,pt
outsl
fcoml
mov
stc
xchg
into
roll
gs
int
xchg
add
pop
or
mov
mov
pop
xor
xor
pop
shl
or
pop
leave
ret
mov
mov
xorl
or
mov
jne
mov
andl
mul
ret
push
orl
mul
cmpl
movl
movl
mov
jmp
mov
jbe
call
mov
sub
mov
sub
movzwl
or
add
adc
movzbl
or
add
mov
mov
mull
add
mov
mul
add
pop
ret
push
mov
sub
push
push
push
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
xor
div
mov
xor
mov
push
div
mov
xor
xor
sub
mov
lea
mov
mov
sub
xor
mov
xor
or
xor
mov
sub
mov
mov
xor
mov
sub
div
mov
pop
xor
sub
cmp
ja
jmp
mov
movl
movl
movl
movl
mov
mov
mov
sub
imul
xor
xor
div
mov
mov
push
and
mov
sub
sub
mov
jmp
ss
mov
in
movsl
mov
mov
adc
sbb
movsl
lock
push
jb
pop
test
call
push
call
inc
fimull
sahf
xor
xcrypt-ofb
cmpsl
scas
sbb
fimuls
or
mov
aas
enter
out
mov
out
push
adc
inc
inc
repz
movsb
sub
add
dec
pop
pop
pop
leave
fcom
dec
lock
xchg
or
adc
aam
and
movsb
or
xchg
adc
bt
jne
arpl
xchg
cmp
push
pusha
scas
sub
sarl
mov
mov
xlat
jl
lods
imul
mov
fldl
add
sbb
jle
in
popa
xchg
pop
mov
mov
repnz
mov
or
and
mov
cmp
xchg
pop
mov
or
test
add
mov
fdivs
cmp
pop
aam
icebp
and
pop
xor
adc
lea
fwait
sti
popa
add
das
shll
lea
or
fwait
sbb
jb
loop
or
lods
out
leave
lahf
out
roll
adc
into
aaa
sub
pop
test
push
ret
rorb
mov
int
scas
aam
jle
fistl
lea
cmp
imul
mov
stos
std
rolb
aam
mov
js
inc
out
jbe
pusha
fwait
hlt
mov
sub
cbtw
or
inc
lret
loopne
inc
imul
inc
jnp
mov
and
arpl
mov
mov
xor
push
pop
rorb
add
out
pop
rcrl
adc
sbb
addb
sub
sub
mov
cwtl
sbb
pop
inc
or
outsb
adc
lea
push
pop
shlb
jno
ret
fstpl
sub
fdivrs
out
sub
inc
cld
std
dec
mov
push
mov
xchg
push
add
push
cmp
out
dec
ret
ds
mov
les
jnp
and
or
mov
ja
push
xchg
aaa
xchg
jle
and
xchg
int3
xor
mov
xor
and
add
add
mov
mov
add
mov
xor
jmp
cli
push
test
adc
push
push
sbb
sbb
sbb
dec
xchg
iret
sub
inc
lods
add
shlb
add
ljmp
lret
pop
add
lods
jno
xchg
jl
add
jp
inc
dec
push
cmp
iret
sbb
shrl
mov
nop
fistps
movsb
aam
inc
sti
and
cld
bound
int
je
out
jae
ds
jno
sub
mov
pop
cmp
pop
icebp
aaa
push
lret
inc
adc
fdivp
sarb
xchg
sbb
mov
mov
adc
insl
mov
mov
and
ss
mov
cmp
mov
lods
inc
lea
xchg
stos
cmp
out
or
jne
jns
sbbb
mov
mov
mov
xchg
das
inc
popa
jbe
xor
or
data16
sarb
enter
adc
push
lock
lcall
pushf
mov
jns
fiaddl
das
and
xchg
sahf
push
xchg
ja
inc
dec
adc
sub
cmp
jo
push
mov
push
sbb
adc
fiaddl
push
out
jge
adc
jmp
aam
mov
dec
add
in
rcr
mov
push
pusha
jo
lods
rorb
dec
clc
dec
dec
cmp
cmp
lcall
dec
sbb
je
and
aad
out
testb
xor
nop
sbb
int
sub
xor
sarb
hlt
push
sbb
cmp
push
mov
repnz
test
iret
jp
mov
jns
mov
shrd
pop
rorb
xchg
aad
adc
cmp
mov
iret
fdivl
inc
mov
mov
into
mov
jp
lahf
loopne
leave
mov
lock
jno
out
inc
pop
leave
sub
pop
mov
xor
push
lcall
sti
loopne
in
xchg
cltd
and
sti
sarb
enter
or
fldl
idivb
out
mov
and
stos
enter
stc
push
dec
cmpsb
incb
dec
jb
sbb
loope
clc
add
push
jo
test
fstl
push
mov
xlat
repnz
sbb
adcl
mov
xor
mov
sub
mov
add
mov
sub
xor
mov
xor
or
xor
mov
sub
mov
mov
mov
xor
xor
sub
div
pop
xor
sub
cmp
jbe
pop
pop
pop
leave
ret
push
mov
and
mov
sub
push
push
push
push
pushl
call
mov
movzwl
push
call
test
jne
movl
xor
movl
jmp
subl
mov
cmpl
not
mov
jmp
not
mov
je
push
push
push
push
push
call
mov
add
movzwl
xor
adc
or
or
xor
cmpl
mov
mov
mov
mov
jmp
mov
movl
ja
push
push
call
add
or
or
mov
mov
sub
add
add
movl
movl
xor
or
sbb
mov
xor
or
adc
mov
orl
xor
xorl
imul
adcl
and
subl
sub
cmpl
movl
movl
movl
jmp
movl
jge
pushl
pushl
push
push
call
andl
add
mov
sbb
sub
and
xor
add
xor
movzbl
adc
xor
mov
add
movl
xor
add
mov
sub
and
movl
movl
sbb
movl
mov
movzwl
sbb
mov
sub
movzbl
or
mov
xorl
and
sbb
jmp
dec
test
and
ljmp
stos
inc
sbb
sbb
adc
sbb
push
sub
xchg
lret
rcrb
fstpt
pusha
xchg
mov
call
adc
scas
push
sub
ljmp
add
mov
jo
adc
scas
lds
addr16
sub
adc
inc
push
cmpl
sub
jbe
xor
jmp
mov
push
mov
jl
mov
outsb
jns
mov
into
jae
subb
cmpsl
pushl
or
outsl
pop
adcb
mov
sbb
cmp
mov
loope
and
or
add
test
inc
mov
push
loopne
sub
fs
in
lea
sbb
xor
mov
popa
push
fldl
mov
movsl
push
test
dec
xchg
cmp
xchg
cwtl
mov
jmp
push
je
cli
sub
pop
mov
fisubl
mov
mov
pop
adc
ds
push
add
fcmovne
ja
mov
sub
pop
fldt
mov
adc
cmp
mov
movsl
pop
sub
adc
inc
add
pop
add
lods
outsb
ficoml
or
icebp
cmp
mov
xchg
cwtl
mov
fwait
stos
sbb
xor
movsb
dec
xchg
pop
mov
mov
test
xor
lock
pop
lds
repz
mov
outsb
gs
adc
out
inc
dec
pushl
pop
xchg
mov
push
push
rolb
add
fildl
std
xchg
xor
test
mov
pop
lea
cmp
push
push
fnstcw
mov
repz
or
test
mov
or
sub
scas
mov
pusha
sti
in
iret
mov
jnp
sbb
and
jmp
mov
in
adc
jmp
xchg
cmp
fdivl
pop
fstl
hlt
add
mov
neg
leave
sub
mov
fcomi
xchg
or
or
clc
movsl
fildll
wrmsr
cmp
fidivl
cmp
int
sbb
enter
mov
inc
xor
add
xor
mov
push
in
xlat
sub
cmp
in
mov
dec
mov
lret
pop
sarl
sbbl
or
arpl
adc
jne
xchg
movsb
jge
xor
dec
orb
xor
jl
sub
adc
pop
pusha
bound
sub
add
or
icebp
addr16
dec
xchg
test
xchg
mov
and
sub
scas
xchg
idiv
push
fadds
rolb
fwait
inc
roll
in
mov
jp
jg
add
fdivrl
cmpsb
test
fistpll
xor
cmp
push
add
xor
xchg
jne
fdecstp
adc
jmp
cmp
jg
mov
pop
test
stos
inc
outsl
std
into
stos
mov
mov
xchg
jecxz
dec
sahf
mov
add
shrb
adc
jle
mov
xor
loope
push
push
cmp
pop
sti
xchg
mov
sbb
jle
loop
mov
push
rcll
mov
jo
pop
lods
icebp
fildll
pop
push
shrb
ret
pop
inc
clc
fldl
arpl
shlb
lds
adc
mov
add
xor
sub
imul
movl
mov
movl
cmp
jne
movl
xor
xor
sbb
movl
movl
movl
pushl
mov
or
movl
cmpl
mov
notl
movl
movzwl
jmp
movl
jne
pushl
call
xor
add
mov
sub
orl
mov
mov
adc
movl
movl
movl
sbb
movl
mov
xor
xor
sub
sub
movl
sbb
movl
or
mov
cmpl
movl
mov
jmp
movl
jb
push
call
sbb
add
sbbl
addl
sub
xor
subl
add
mov
notl
imul
movl
or
xor
xor
adcl
pushl
cmpl
movl
mov
mov
jmp
mov
movl
jl
push
push
pushl
call
add
mov
xor
andl
sbb
and
xor
mov
add
push
pop
xor
subl
div
andl
mov
xorl
xor
or
xor
mov
or
sbb
mov
adcl
div
xor
xor
xor
adcl
pushl
sbb
mov
xorl
mov
orl
pushl
movl
add
pushl
imul
pushl
add
mov
adcl
mov
addl
xor
mov
div
and
subl
or
movl
pushl
orl
call
andl
dec
movl
jne
movl
mov
mov
and
mov
mov
andl
movl
adcl
mov
call
mov
mov
sub
xor
lea
subl
mov
add
lea
mov
or
mov
mov
cmpl
mov
mov
jmp
movl
jbe
pushl
push
push
call
sub
or
add
xor
dec
incl
cmpl
movl
movl
movl
jmp
movl
mov
ja
push
pushl
push
pushl
push
push
pushl
push
call
mov
xor
mov
adc
sub
add
adc
mov
sbb
mov
and
mov
cmpl
movl
movl
movl
movl
jmp
mov
mov
ja
push
push
push
push
call
sbb
sub
mov
mov
sub
add
xor
or
add
xor
and
mov
xor
cmpl
not
mov
movl
movl
jmp
mov
movl
je
pushl
pushl
pushl
push
call
neg
add
sbb
xor
movl
and
xor
add
shl
shr
or
mov
cmpl
movzwl
mov
movl
jmp
movl
movl
jae
pushl
push
push
call
movzwl
sub
mov
adc
mov
adc
mov
mov
sub
imul
inc
xorl
and
andl
mov
mov
mov
and
mov
movl
mov
mov
xor
mov
shrd
neg
shr
addl
mov
mov
jmp
push
lcall
lcall
sbb
adc
sbb
cmp
jae
mov
mov
loop
popa
dec
mov
nop
sub
xchg
and
outsl
mov
hlt
push
imul
test
and
aaa
and
adc
arpl
jnp
mov
mov
mov
out
std
lds
xchg
icebp
add
mov
fbstp
mov
lods
ja
fists
push
ret
xchg
pop
ljmp
js
mov
dec
mov
push
insb
cli
out
out
fimull
jbe
jb
push
arpl
mov
xchg
pop
and
ret
popa
lret
push
lods
and
dec
inc
pusha
pop
iret
mov
pop
ja
dec
and
lahf
in
decb
or
adc
lea
popf
stos
xchg
in
sub
mov
inc
fstpl
movsb
iret
jg
test
dec
fwait
outsl
pop
jbe
cwtl
arpl
shll
imul
bound
pop
inc
icebp
pextrw
mov
cmpl
dec
nop
nop
fisubl
jg
rorl
fs
test
xor
lahf
stos
cwtl
flds
int
popa
or
repz
mov
jl
add
mov
lods
rclb
pop
outsb
sub
pop
and
ss
xchg
jb
cmovne
inc
daa
pop
sub
addr16
loop
mov
add
mov
xor
mov
ret
imul
movsl
push
and
dec
in
movsb
fdivl
cli
cld
sbb
or
in
cwtl
inc
xor
fcom
cmp
and
mov
mov
dec
mov
pop
pop
ficompl
nop
xchg
mov
inc
sbb
push
loop
sti
adc
dec
cs
push
das
jo
lods
jb
xchg
mov
loopne
cmp
test
or
adc
loopne
fcmovnu
dec
dec
jo
mov
sub
pop
cmpsb
inc
dec
fbstp
push
jecxz
and
iret
subb
scas
cmp
addr16
jb
and
data16
loope
popa
push
pop
cli
outsb
xchg
add
xor
nop
test
fiaddl
sub
or
adc
in
inc
xor
push
scas
inc
cmp
mov
aad
mull
xchg
loop
mov
loopne
int3
in
push
in
repnz
mov
shlb
fcoml
in
push
push
lods
aaa
sarb
into
push
insl
lock
dec
xchg
cs
pusha
ss
adc
push
lea
test
xor
and
pop
sub
call
idivl
dec
fnstsw
or
inc
mov
leave
jecxz
jecxz
dec
xchg
or
sub
lock
dec
pop
mov
aas
pushf
mov
call
pop
mov
repz
fisttpl
sbb
jle
inc
xor
adc
movsb
loopne
and
add
sbb
push
loope
adc
aaa
cmp
adc
mov
push
push
cs
push
push
mov
aam
lret
mov
inc
sub
or
xchg
cmp
sub
sub
mov
roll
cmp
xor
xlat
mov
mov
adc
add
add
dec
addr16
incl
xor
or
mov
push
pushl
lea
negl
push
andl
shl
call
subl
lea
orl
push
subl
mov
mov
subl
lea
push
mov
orl
lea
mov
xorl
mov
adcl
jmp
imul
inc
push
sbb
inc
or
sbb
adc
sbb
fisubl
and
divb
jb
jbe
adc
jg
lds
sub
dec
jb
cs
inc
mov
xchg
pop
loopne
xor
lods
mov
jle
dec
lds
jnp
lahf
stos
jnp
and
sub
sbbb
add
rdpmc
and
pushf
jmp
sbb
mov
xor
jo
rolb
and
xchg
rol
loope
cmp
test
mov
jge
call
sbb
add
test
lahf
or
mov
jo
inc
inc
push
ss
das
loop
mov
mov
jno
mov
inc
xchg
inc
mov
push
jne
addl
fwait
mov
ja
inc
pushf
mov
lds
jbe
mov
jecxz
xchg
mov
adc
push
icebp
fcmovnbe
pop
sbb
dec
loop
into
insl
and
pop
in
enter
das
mov
adc
pop
cs
iret
data16
stos
mov
sar
jge
rcl
rcl
nop
test
out
jae
and
adc
jo
lods
sub
add
adc
adc
and
adc
out
cmpsl
add
push
adc
popl
or
shl
fst
or
testl
add
xchg
mov
outsb
adc
pop
push
xchg
jae
jmp
pop
into
iret
aam
push
inc
repnz
push
pop
gs
sahf
mov
test
insl
ljmp
jae
push
pop
movsb
pop
or
xchg
clc
mov
jl
inc
cmp
cmp
idiv
outsb
jecxz
cmp
lret
fcoms
pop
add
xor
mov
dec
jl
add
mov
mov
aam
andb
push
in
imul
aaa
iret
adc
cs
dec
sub
pop
jae
pop
add
push
pop
mov
mov
stos
mov
xchg
inc
dec
imul
jmp
repnz
or
and
cmp
adcl
rcr
mov
sbb
xchg
insb
mov
test
jo
out
lea
shrb
test
scas
and
and
sbb
shlb
fwait
shlb
xlat
iret
shrb
daa
ret
push
cmp
lea
mov
or
and
push
test
sub
lret
jecxz
jbe
sti
bound
or
fidivrs
push
addr16
xlat
add
mov
jle
xor
sbb
rcrl
mov
sbb
push
inc
insb
xor
loop
mov
out
sbb
dec
lret
test
inc
add
arpl
pop
push
sbb
cld
and
cmp
mov
call
pop
out
jecxz
fwait
xchg
push
cltd
inc
push
mov
imul
ret
insb
movsl
fnstenv
repnz
out
adc
bound
ret
loop
cmp
sub
cmc
mov
iret
xchg
popf
in
cmp
and
aad
ret
dec
pop
shlb
in
mov
adc
mov
subl
jmp
mov
push
in
xor
in
pop
jle
add
sbb
adc
sbb
mov
mull
xlat
pop
inc
les
shl
jnp
xchg
jmp
shrl
mov
pop
mov
cli
dec
aas
mov
insl
adc
rolb
ds
inc
ret
sahf
or
lcall
shll
add
les
push
push
jg
push
out
int3
mov
or
ficoms
inc
jge
leave
ss
xor
test
mov
push
ja
ja
cmp
lock
jb
inc
imul
push
sub
xchg
push
xchg
aas
mov
test
cmp
push
fstpt
cmp
pop
cmp
fldenv
pop
jl
aaa
jge
cmp
xchg
mov
xchg
aad
sbb
stos
in
aad
push
pop
xor
hlt
test
sbb
int
hlt
sub
mov
dec
add
adc
fs
scas
pop
xor
pushf
repz
push
and
out
iret
and
jo
jne
xchg
ja
jnp
dec
lods
dec
jnp
jp
cld
loopne
les
and
jp
fstps
lds
int3
sbb
pop
jmp
ja
sub
adc
mov
push
jp
pop
ds
subl
rorb
cmpsl
in
imul
inc
mov
sbb
fiaddl
mov
nop
jl
cmp
incl
push
dec
sahf
jl
sbb
pop
push
in
mov
dec
addr16
lds
xchg
adc
imul
les
inc
push
sbb
push
sub
hlt
das
inc
xchg
lds
pop
fistpll
ljmp
sti
push
movsl
fdivrl
inc
push
inc
inc
cs
clc
aam
test
aam
into
jp
mov
fsts
aad
adc
add
shll
xchg
xor
dec
cmp
fsubrs
sahf
cmpsl
mov
cmp
push
das
lods
pop
iret
jno
cs
out
testb
cmp
add
adc
out
rcrl
pop
scas
or
mov
mov
mov
mov
xor
cmc
adc
xor
popf
and
xchg
xchg
lea
sahf
mov
mov
pusha
sub
icebp
inc
scas
xchg
push
mov
pop
jo
imul
icebp
jg,pn
insl
push
sahf
mov
adcl
ret
mov
cmpsb
mov
mov
aaa
jbe
adc
fimull
std
arpl
iret
call
mov
xlat
daa
xor
fstps
in
dec
push
lret
sbb
mov
js
je
sub
pop
sub
pop
cli
scas
je
push
mov
xorl
andl
pop
sub
pop
daa
decb
es
push
in
jnp
popf
lock
ffreep
mov
push
jp
shr
add
cli
and
bound
mov
insb
mov
mov
jge
jg
insl
add
mov
cmp
stos
adc
lock
arpl
jge
ror
pop
cli
sub
nop
jl
and
lret
jle
sbb
jg
into
decl
sti
adc
push
ret
inc
iret
mov
mov
cmp
fistps
xor
mov
xor
outsb
addb
add
xor
push
addb
pop
and
add
add
je
adc
in
decl
dec
and
and
mov
neg
mov
shr
shl
or
mov
xor
add
sub
or
mov
xor
mov
sbb
lea
mov
xor
lea
sub
mov
mov
sub
mov
sub
mov
mov
xor
lea
movzbl
and
xor
cmpl
movl
not
jmp
mov
movl
jbe
push
call
sbb
add
sbbl
subl
movzbl
sub
mov
movl
sub
movl
movl
subl
movl
cmpl
mov
mov
movl
jmp
mov
jbe
pushl
call
sub
mov
sbb
adc
and
adcl
sbb
xor
mov
mov
xor
mov
movzbl
and
mov
xor
mov
add
movl
adc
subl
xor
cmpl
mov
mov
mov
jmp
movl
je
push
push
push
push
call
inc
and
orl
orl
xor
and
mov
mov
xor
mov
adc
and
mov
adc
movl
adc
movl
cmpl
mov
mov
movl
jmp
mov
jne
pushl
push
call
xor
sbb
sbb
movzwl
or
movl
movl
add
movl
movl
movl
notl
mov
movl
mov
cmpl
notl
movl
jmp
not
jg
pushl
push
pushl
push
push
pushl
call
xor
mov
or
sub
adcl
subl
mov
mov
push
push
or
or
push
push
call
mov
mov
sub
mov
jmp
je
or
pop
pop
mov
cmp
inc
cld
push
sbb
adc
sbb
mull
xchg
out
call
xchg
jmp
mov
mov
std
push
das
adc
xchg
bound
jb
xchg
and
rolb
ja
mov
pop
jb
push
jae
dec
aaa
jmp
lea
inc
push
or
xchg
repnz
add
xor
arpl
push
shrd
out
hlt
cwtl
cmpb
sbb
adc
lret
fmul
sub
fnsave
cs
ljmp
pop
add
lods
fbld
adc
sbb
mov
shrb
jnp
outsb
and
pusha
les
aas
adc
mov
sub
les
sub
ret
pusha
and
or
sbb
psubusb
sub
xchg
xchg
outsb
inc
loopne
das
jge
pusha
lods
sbb
xor
jle
movsb
das
insl
shrl
js
mov
stc
add
adc
adc
outsl
popa
out
cmpsl
or
icebp
enter
pop
repz
sbb
mov
cmp
mov
in
jle
in
outsl
sub
mov
jns
sti
sbbl
mov
arpl
shlb
int
sahf
adc
cmpsl
dec
ja
mov
xchg
pop
mov
cmp
add
jbe
mov
cmp
jecxz
jg
enter
sbbl
stos
pop
gs
xor
add
add
ss
pop
push
xlat
lods
mov
jne
mov
or
cmpsb
dec
jecxz
xor
test
sub
int
xadd
out
call
jno
sahf
and
test
in
lret
clc
push
mov
jbe
dec
jns
or
sbb
dec
daa
jge
push
mov
and
decl
in
lods
jp
mov
jbe
pop
pop
shr
fs
clc
out
popa
push
pop
dec
ret
js
add
imul
or
xchg
fstpl
xor
int
push
inc
and
add
lahf
mov
or
adc
fwait
outsb
dec
mov
dec
push
push
cmp
daa
cmpsb
sub
or
jecxz
xor
adc
out
xchg
or
stos
xchg
jecxz
out
pop
sub
lods
repnz
gs
rcrb
idivb
add
mov
xchg
subb
lcall
pusha
pusha
mov
jl
loope
inc
xchg
dec
mov
imul
xchg
loop
in
add
nop
push
aam
mov
cmp
test
push
mov
or
jmp
push
adc
jae
inc
loop
fcmovnb
test
ss
ret
pop
xchg
cmpsl
invd
xor
xor
mov
nopl
sub
mov
hlt
jbe
mov
movsb
aaa
push
cwtl
out
hlt
repnz
mov
cmpsb
sahf
scas
push
scas
in
jb
mov
lret
cmp
and
imul
xor
mov
sti
mov
pop
xor
dec
mov
lret
fucomip
add
mov
xor
incb
fildl
fcmovb
xor
dec
inc
stos
js
ss
lahf
dec
fwait
je
fcomps
lret
and
nop
dec
dec
mov
push
das
xlat
in
sahf
in
movsb
inc
hlt
rclb
and
mov
sbb
mov
cmp
jne
cmp
je
movl
movl
movl
movl
mov
mov
mov
mov
add
adc
xor
xor
and
mov
and
mov
jmp
and
and
inc
and
inc
notb
sbb
adc
sbb
aaa
sti
daa
add
mov
xchg
icebp
rdpmc
movsb
add
lock
adc
mov
mov
jno
sbb
loope
popf
cmpsl
call
adc
rcll
cmp
dec
cmc
in
cltd
outsl
sbb
dec
cmpb
cmpsb
mov
xor
or
fwait
lret
jne
adc
mov
add
or
mov
cmpsl
sahf
stc
push
mov
scas
cmp
add
xchg
std
xor
adc
pop
and
stos
adc
and
and
ja
loope
jno
in
mov
loopne
push
adc
fsubrs
es
push
stc
xor
icebp
xor
fisttpll
divl
insb
pop
lock
push
lcall
dec
pop
push
mov
addr16
mov
sub
rcpps
aam
mov
push
jo
add
adc
stos
xchg
xchg
mov
pop
daa
dec
mov
call
mov
jo
cmp
popa
xchg
mov
push
mov
push
xchg
cmp
and
repnz
mov
jno
adcl
push
mov
and
mov
pop
pop
xor
add
and
scas
daa
sub
cmp
sbbb
daa
ss
and
movsl
pop
mov
test
cmp
aaa
inc
and
dec
shll
ret
pop
or
aad
pop
adc
push
mov
loope
inc
std
les
scas
outsb
mov
push
mov
xor
inc
xchg
call
loop
add
jnp
in
fisubrs
dec
inc
call
and
jo
pop
arpl
jns
xchg
mov
xchg
in
jb
and
outsl
sub
push
cmp
xchg
jnp
test
xor
mov
add
add
popa
ds
shlb
jle
xlat
mov
ficoms
cltd
push
or
scas
daa
andb
popa
sub
mov
rcll
adc
cmp
and
push
add
mull
cmpsb
addl
sub
cmp
cmp
mov
or
shlb
fdiv
dec
adc
or
je
or
jnp
mov
inc
jle
or
into
xor
xchg
jb
mov
jbe
push
pop
jo
loope
in
leave
mov
pop
sub
loope
out
fidivrs
jno
dec
adcl
into
dec
fistpll
div
pop
or
sbb
shrb
aas
in
mov
sbb
jge
pop
dec
mov
mov
enter
sbb
and
push
xchg
in
pop
fsubr
mov
adc
jmp
test
dec
mov
add
mov
push
jmp
lods
mov
mov
fists
add
shlb
shrb
popf
outsl
or
ret
jp
dec
add
push
jo
add
mov
cmpsl
mov
mov
xor
ja
xchg
mov
pushf
rsqrtps
ret
dec
dec
popf
je
push
jbe
inc
ret
sub
and
lahf
xor
mov
jbe
int
lret
pushf
and
lods
les
push
xchg
cmp
jns
mov
movl
movl
movl
movl
movl
movl
movl
movl
mov
jmp
push
pop
xlat
jns
cmp
mov
std
adc
inc
out
push
sbb
adc
sbb
das
adc
cmpsl
adc
xchg
arpl
or
dec
ds
jns
xlat
mov
jmp
pop
pop
cmp
pop
lds
lret
mov
ds
jnp
aaa
loope
pushf
shrb
push
sahf
es
shll
jnp
and
popa
and
cmpsb
jp
int
test
push
test
mov
shrl
add
mov
mov
cmpsb
push
xor
loope
repnz
orl
clc
mov
pop
pop
pop
mov
xor
jl
add
push
sbb
mov
pop
jne
idivb
mov
out
fcompl
iret
in
add
and
leave
movsb
sbb
scas
insl
mov
push
mov
xor
shl
or
call
inc
xor
in
jne
dec
pop
stos
mov
adc
dec
sbb
mov
mov
lods
xchg
sub
das
mov
mov
fs
mov
dec
sbb
mov
adc
movsb
addr16
or
and
sub
push
or
lods
pop
mov
outsb
pop
pop
je
pop
pop
cli
aaa
bound
clc
hlt
in
add
orl
mov
mov
aaa
sti
cli
ret
mov
jnp
sahf
test
and
xchg
cld
mov
test
arpl
ret
xchg
mov
outsl
mov
sti
repz
mov
mov
adc
das
dec
add
pop
popf
lret
push
test
or
pushf
ja
mov
mov
inc
cmp
std
adc
int3
mov
mov
inc
loope
shrb
sbb
or
and
xchg
or
fcoms
es
fwait
into
mov
andl
aad
mov
sub
mov
sahf
jle
outsb
imul
xor
ljmp
add
es
lock
pop
pushf
punpcklwd
and
lock
cld
sub
adc
mov
add
mov
add
icebp
loop
mov
xlat
test
or
in
mov
ret
and
add
xchg
rclb
ret
fmul
out
xchg
dec
inc
std
jl
inc
mov
stos
fistpl
fmulp
arpl
sti
popa
cltd
sbb
and
cmp
mov
arpl
ss
push
adc
fs
mov
pop
mov
repnz
jle
daa
and
push
dec
bound
scas
out
pop
ret
icebp
sbb
jge
arpl
ljmp
mov
cmpsb
or
ret
loop
jle,pn
fstl
mov
sahf
or
pmulhw
push
xchg
mov
cmp
and
scas
add
outsl
xchg
xchg
addl
xlat
ret
test
adc
pop
out
jae
jecxz
gs
clc
je
shrl
mov
lods
addr16
stos
dec
push
mov
pusha
movsb
sub
add
rcll
mov
pop
icebp
sbbb
inc
insl
pop
sbb
lahf
call
cmp
pop
jnp
jns
scas
fwait
or
subl
ja
ret
jns
and
cltd
pop
ds
jno
push
js
bound
adc
imul
stos
enter
and
push
push
xor
xor
push
push
call
mov
mov
push
push
push
push
call
mov
mov
push
push
push
push
call
mov
mov
add
mov
adc
mov
cmp
jne
cmp
je
mov
mov
xor
shld
shl
jmp
sub
lds
and
ds
jno
stos
push
inc
push
jmp
sbb
ss
xor
xor
push
sti
clc
ja
lods
and
dec
imul
cmpsl
pop
jbe
int
mov
push
inc
iret
mov
pop
mov
inc
push
mov
sub
test
orb
mov
xchg
mov
jmp
push
or
cmpsl
in
fistpl
loop
inc
cmpsl
mov
loope
jne
xchg
fsubrs
inc
into
mov
and
and
ds
add
mov
lret
jbe
fstpt
data16
les
push
enter
mov
cmp
jg
push
push
dec
mov
orb
lahf
xchg
mov
jg
leave
mov
pusha
inc
nop
int
jp
or
jne
ss
push
mov
cld
aam
inc
lahf
aas
mov
pop
and
movsl
and
xlat
pop
dec
jae
cld
push
fbstp
lds
stc
jnp
xor
iret
push
mov
into
xor
push
pop
mov
xchg
jge
mov
mov
hlt
cmc
dec
test
bnd
xchg
or
dec
dec
imul
xlat
push
push
xor
jno
test
lahf
mov
orb
aam
out
roll
pusha
pop
xor
jns
sub
xor
jl
cmpsb
movsb
mov
pop
popa
nop
pop
cltd
jae
dec
and
jns
sti
fwait
cmp
push
sub
mov
lret
cmp
mov
stos
push
js
repnz
adc
mov
cmp
test
test
mov
xor
adc
xorb
test
das
test
or
rcrb
clc
and
out
cwtl
pushf
mov
push
push
popa
dec
mov
lcall
shll
pop
not
notl
push
and
pop
shrb
js
imul
sub
jmp
push
add
out
lahf
add
xor
or
mov
push
daa
pop
pop
mov
out
repz
fsubrp
mov
mov
outsl
aas
int3
xchg
and
and
cmp
or
jp
pop
jbe
cmp
enter
aam
inc
or
fimull
cmpsl
cmpl
xchg
cmpsb
je
fimuls
lods
or
lret
mov
adcl
jns
fdivl
out
push
sub
sub
clc
xor
inc
sub
jo
mov
xchg
inc
add
leave
cwtl
in
or
movsb
inc
mov
and
bound
mov
push
mov
cs
sub
and
lret
xor
and
xor
add
sbb
sbb
in
cli
inc
jbe
jmp
push
push
lahf
leave
push
push
mov
sub
ret
mov
cli
pop
fcomps
dec
mov
dec
aaa
repnz
rclb
xchg
mov
pop
inc
dec
repnz
adc
mov
outsl
in
jae
loope
xor
dec
or
mov
call
mov
fcom
xchg
mov
sub
data16
shlb
popa
add
xchg
pop
les
addl
dec
jo
inc
mov
push
pop
cmp
nop
mov
mov
mov
xor
xor
mov
cmp
jne
cmp
je
mov
cmp
je
mov
mov
xor
xor
shrd
shr
mov
mov
mov
shl
xor
or
xor
mov
mov
or
cltd
cmp
jne
cmp
jne
movl
movl
mov
mov
mov
xor
shld
shl
mov
mov
xor
xor
mov
cmp
jne
cmp
jne
movl
mov
mov
shrd
shr
mov
mov
mov
mov
mov
shl
mov
xor
xor
or
cmp
jne
mov
mov
mov
mov
mov
mov
movzwl
mov
and
mov
or
mov
add
or
mov
mov
mov
jmp
cs
and
push
mov
popf
jo
loope
sbb
adc
sbb
mov
xor
in
xchg
jg
call
inc
and
arpl
dec
stos
xchg
movsl
rorl
lret
inc
fwait
sbbl
mov
xchg
pop
inc
int3
fxch
int3
add
in
inc
or
je
jle
stc
inc
mov
sub
mov
insb
jnp
inc
jl
adc
cltd
repnz
pusha
ret
adc
int3
popf
ja
data16
mov
mov
cmp
repnz
cmp
xor
les
sub
scas
loop
enter
push
or
mov
cmp
pop
bnd
push
jbe
adc
lret
xchg
js
add
outsl
inc
icebp
pop
add
shrl
test
and
inc
leave
push
push
test
add
cmpsl
outsb
xor
cmp
xor
add
adc
mov
les
imul
fs
push
cli
sub
loope
cld
xchg
mov
mov
stos
mov
push
mov
mov
push
pop
push
jmp
add
out
lods
push
hlt
nop
bound
loopne
pop
mov
insl
negb
jle
push
jl
mov
daa
cmpsl
data16
cli
mov
xor
fcmove
push
sub
mov
sbb
pop
pop
sbb
bound
test
adc
les
rorb
jg
fimuls
iret
int
outsb
into
mov
negb
ss
cwtl
sub
aas
add
roll
sti
mov
mov
push
popf
cmp
and
push
and
cmp
adc
cmpsl
shll
ror
mov
lock
or
aas
inc
mov
mov
comiss
mov
sti
sahf
outsl
aam
lret
repnz
pop
or
adc
sbb
daa
xchg
popa
sbb
call
mov
dec
repnz
adc
inc
repz
sar
adc
dec
lcall
jl
jnp
sbb
call
mov
jo
clc
or
pusha
stc
lock
push
dec
daa
sbb
imul
jmp
xchg
loopne
fs
sbbl
mov
xchg
or
mov
je
clc
jg
cmp
icebp
xor
push
loop
loopne
in
adc
jg
fwait
hlt
lcall
std
push
enter
cmp
fisubrs
sarb
inc
movsl
scas
inc
jl
out
iret
xchg
or
call
mov
aas
sub
lea
aam
call
out
fnsave
in
enter
stos
adc
mov
lahf
roll
mov
out
jmp
aas
pop
xchg
xchg
data16
fldl
in
out
je
mov
scas
jb
imul
out
subl
sub
add
sahf
add
test
mov
test
xor
adc
pop
add
loopne
gs
mov
shlb
adc
notl
push
idivb
sti
cmp
and
add
mov
mov
mov
mov
mov
mov
mov
or
mov
or
mov
sub
mov
sub
mov
cmp
jbe
mov
mov
mov
mov
movzwl
mov
or
mov
sub
mov
or
imul
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
sub
mov
xor
mov
imul
mov
and
mov
and
jmp
cmp
cmp
stc
push
dec
jle
fistl
sbb
adc
sbb
lock
dec
test
mov
sbb
lock
pop
ss
xchg
mov
xchg
push
cmp
push
inc
push
xchg
cmp
or
in
xor
lock
fdivrl
xor
sbb
adc
push
in
xor
ret
imul
push
arpl
add
sahf
call
xor
sbb
mov
cmpsb
addr16
pop
jg
cltd
xorb
mov
sbb
cmpsb
lods
pop
pop
or
fucomi
mov
cmpsb
sbb
test
dec
and
andb
aam
scas
das
sub
mov
add
int3
test
xor
inc
pop
fxch
and
rorl
add
in
and
mov
push
in
add
jg
js
loop
cmp
and
inc
jnp
mov
mov
dec
shlb
shll
push
pop
mov
mov
test
in
lds
dec
pop
cmpl
outsl
mov
fists
outsb
sets
insl
addb
aam
ret
cs
xor
pop
test
jbe
lock
sub
or
hlt
sub
hlt
mov
dec
push
sub
outsb
sub
inc
push
aam
icebp
aaa
hlt
mov
mov
repz
inc
sub
sub
leave
push
dec
and
loop
rcrl
push
mov
pop
xlat
mov
push
jecxz
mov
sub
stc
clc
add
pushf
sahf
pop
cmp
jecxz
xchg
mov
mov
divb
xchg
lahf
jmp
jo
pop
ds
pop
push
add
jmp
les
cmp
ljmp
nop
xor
arpl
outsb
scas
pop
rorl
in
add
xchg
pushf
cmp
out
daa
movb
xor
xchg
mov
sub
fcompl
inc
bound
sarb
stos
insl
add
jae
test
je
je
call
js
or
popf
push
dec
mov
pop
dec
sub
dec
ljmp
cmp
out
mov
add
cmp
loopne
jns
mov
into
inc
and
fdivr
out
ja
fadds
pop
adcb
mov
les
inc
mov
imul
insb
push
xchg
xchg
fnsave
adc
xchg
push
sub
sti
ss
int3
hlt
cmp
jp
mov
andb
lock
pop
cmpsb
jmp
inc
aam
push
in
mov
xchg
jne
in
add
addr16
cmpsb
push
arpl
and
in
in
mov
mov
or
lret
outsl
dec
punpckldq
shll
dec
cmp
scas
jp
shrl
daa
lods
xchg
pop
ret
mov
add
sbbl
xor
dec
mov
cmp
pop
pop
mov
hlt
sub
aad
xchg
test
imul
repz
movsl
pushf
adc
push
insl
sti
ljmp
loope
repz
adc
out
cmpsb
cwtl
das
and
mov
data16
xor
sbb
enter
add
lods
or
xchg
xchg
and
adc
xchg
sbb
faddl
scas
add
cmp
sub
adc
mov
cmp
ja
mov
mov
shrd
xor
mov
shr
jmp
inc
inc
in
loop
cmp
pop
pop
or
jmp
adc
sbb
sbb
cmp
sub
leave
rsm
in
sar
fcmove
cmpsl
mov
jns
mov
inc
clc
les
stos
addr16
xor
xor
lds
fs
pushf
iret
xorl
mov
adc
sub
xchg
das
imull
xchg
ss
dec
mov
adc
xor
mov
stos
mov
stos
leave
cmp
or
stc
sub
dec
pop
rcl
mov
jae
inc
pop
in
imul
testb
testb
add
out
fsubr
stos
dec
cmp
addr16
dec
lods
add
xlat
dec
push
jno
inc
sti
sub
sbb
push
jne
inc
sbb
pushl
xchg
ret
roll
outsb
jmp
dec
es
sub
pop
es
cli
out
push
xchg
fs
cli
movsb
cmpsl
fmull
inc
xchg
fimuls
mov
cs
int3
mov
push
pop
add
lods
faddl
dec
mov
ljmp
push
mov
pop
pop
mov
ficoml
insl
fildll
test
scas
leave
xchg
sub
imul
adc
in
xchg
push
sub
sub
adc
and
jle
ja
and
rcrb
int3
aas
xor
mov
mov
jle
hlt
in
fwait
push
pop
dec
inc
xor
enter
xor
mov
mov
inc
lods
push
mov
xchg
sub
sbb
sbb
push
dec
insb
add
test
mov
neg
add
inc
push
pop
cwtl
aad
cmp
inc
sbbl
orl
addl
mov
pushf
cmp
das
imul
insl
aaa
jae
xchg
fcmovu
js
test
mov
stos
push
dec
addr16
pop
lcall
sub
xor
push
dec
arpl
outsl
mov
fbstp
fstpl
xor
test
and
add
lds
data16
iret
sahf
and
and
mov
shr
jp
inc
push
ds
add
cmp
jo
addr16
jno
mov
out
aad
pop
cmp
and
std
fcmovb
push
push
sub
dec
jnp
xchg
cs
stos
xchg
shl
imul
fstl
cmp
or
add
dec
stos
xor
pop
enter
fdivr
loopne
sub
out
or
pop
jl
xchg
xchg
pop
shll
and
aam
cmp
fcomip
pop
adc
sub
jno
push
mov
ret
inc
jle
jno
sbb
or
mov
movsb
movb
inc
ss
pop
pop
xor
fdivrs
push
push
and
in
imul
clc
aam
push
popf
inc
loopne
xor
lahf
fnstenv
adc
fwait
mov
mov
ret
jbe
jg
push
mov
mov
push
shlb
je
inc
lock
stos
jle
inc
leave
outsb
push
and
enter
rcl
jg
add
xchg
sti
xchg
repz
xor
push
or
jno
adc
jno
gs
in
lods
inc
cs
inc
add
repz
test
xlat
filds
fisubrl
ljmp
mov
push
and
jmp
inc
mov
jb
jb
cmpsb
xchg
sbb
push
add
jo
int
sbb
adc
sbb
cmp
xor
xor
jo
int3
call
pop
dec
xor
les
cli
xchg
jl
xchg
dec
pushf
fists
mov
insl
adc
mov
stc
jae
ret
and
push
outsl
lock
jl
idivl
fstps
ljmp
sub
addr16
dec
loop
pop
roll
xor
fadd
mov
rclb
lods
jmp
outsb
push
push
enter
fnstcw
jle
and
push
mov
pop
sub
xchg
mov
xor
pop
pop
mov
inc
jle
les
xchg
and
sub
sbb
mov
pop
mov
roll
sarl
jg
test
lods
in
movsl
subps
js
mov
xchg
mov
jae
outsb
mov
sub
div
or
in
push
lret
shlb
xor
mov
sub
jno
jb
jmp
pop
decb
push
leave
add
pop
std
ficompl
cmpsb
iret
rcll
lret
and
xchg
dec
push
or
lahf
xchg
inc
mov
movsb
int
lock
lods
imul
int
dec
insl
daa
test
mov
loop
orl
jg
fstl
test
imul
test
insb
cmpsl
jbe
outsb
repnz
insl
dec
js
ja
outsl
push
stos
pusha
sbb
sub
xor
mov
fwait
stos
pop
out
out
add
shrl
adc
or
mov
mov
or
hlt
cmc
xor
movsb
shll
loopne
ja
dec
xor
sti
sub
rclb
xor
pop
cltd
xor
fistl
ja
ss
mov
pop
lret
xchg
stos
lcall
not
out
call
or
push
mov
or
xchg
inc
fcoms
xor
cmp
xchg
xchg
sbb
pushf
mov
jg
cmpsb
mov
fwait
or
and
imul
lods
mov
xchg
pop
jecxz
cmp
xchg
pop
sub
cltd
jmp
lods
dec
inc
dec
cmp
in
and
cmp
push
test
mov
inc
lock
nop
es
dec
push
cmp
or
out
inc
jne
dec
cwtl
pusha
cld
scas
imul
sbb
jle
push
test
and
xlat
cmpsb
sbb
bnd
xor
mov
int3
push
xor
jbe
rolb
bound
lcall
out
rclb
dec
xor
xchg
mov
clc
add
sbbl
subl
popa
scas
xchg
or
inc
pushf
xchg
cmpsb
xchg
cmp
jnp
inc
addb
in
push
push
pushf
xor
fnsave
popa
mov
cmpsb
and
sbb
sbb
fs
lahf
lahf
push
cmp
cmp
testl
ds
cmp
lret
repz
incl
mov
dec
stc
cld
jae
rorb
mov
push
popl
je
mov
daa
push
jle
push
jne
pop
ljmp
xor
cmp
scas
mov
xchg
ljmp
sti
addr16
adc
enter
clc
leave
lods
icebp
adcb
dec
mov
xchg
mov
fldcw
and
push
xor
cmp
rorb
rcll
shl
push
lea
push
lea
push
call
pushl
pushl
jmp
xor
fistpll
popf
jo
movsl
lahf
jo
lds
sbb
adc
sbb
sub
roll
outsl
aaa
mov
add
outsl
movsl
mov
dec
lret
xchg
mov
lret
xor
mov
cmp
xchg
stc
and
or
mov
fstpl
jle
outsb
cmp
xlat
pop
test
or
push
hlt
int
mov
sub
xchg
pop
cmp
loopne
lret
imul
imul
sbb
mov
push
lcall
push
icebp
mov
ficoms
mov
mov
adc
aad
xor
add
jg
xchg
xchg
jge
pop
mov
push
inc
out
sti
fcomps
jle
add
jle
push
arpl
cmp
mov
xchg
fisubrl
push
add
fnstsw
out
jno
test
sub
push
cli
out
add
xchg
xchg
jmp
xchg
sbb
leave
push
cli
xchg
test
lock
jmp
push
fisubrl
mov
outsl
inc
mov
cmpsb
leave
add
adc
mov
adc
mov
ret
outsl
or
pop
jge
nop
mov
sub
mov
call
enter
pop
jle
stc
bound
jp
in
push
test
scas
je
hlt
sub
loopne
xor
mov
push
call
aas
scas
xor
pop
add
movsb
or
add
in
test
inc
imulb
fdivrs
cli
test
ja
add
pop
imul
loop
out
sbb
in
pop
fcoml
rorl
mov
add
xchg
mov
fldl
lock
mov
bound
jb
cmpl
xor
push
mov
pop
repz
dec
mov
js
in
imull
aam
push
dec
loopne
and
lea
xor
shll
mov
mov
inc
test
jo
fildll
sub
push
mov
repnz
loop
mov
xchg
pop
jnp
push
jo
push
outsl
cmp
or
jecxz
mov
in
push
xchg
dec
arpl
xchg
adc
sti
aas
addr16
mov
add
sub
mov
std
ror
cmp
pop
fnsave
bound
mov
movsl
xchg
outsb
loope
and
push
insb
lret
mov
scas
sbb
lahf
addw
cmp
daa
xor
andl
xchg
pop
popf
mov
iret
adc
outsl
cmp
push
jne
dec
daa
cmpsl
pop
adcl
or
add
lahf
pop
push
mov
mov
push
dec
fmull
xor
aam
stos
xchg
mov
icebp
or
rcrb
cmp
lea
cmp
cwtl
xchg
cmp
push
subl
aad
dec
and
in
mov
push
sbbb
hlt
and
outsb
mov
push
adc
jg
pop
xchg
fs
pop
fimull
adc
xor
xchg
and
xor
xor
int
cmc
jbe
jp
cmpl
mov
mov
inc
loopne
clc
dec
xchg
rcl
test
les
into
das
jo
sub
movsb
in
imul
pushf
add
sbb
test
fnsave
and
pushl
call
mov
mov
mov
mov
shrd
shr
shl
xor
mov
xor
or
mov
mov
mov
mov
shrd
xor
mov
shl
shr
mov
xor
or
mov
mov
mov
mov
mov
cmp
jne
mov
mov
mov
cmp
jne
movb
movb
movb
movb
mov
mov
or
sub
mov
sub
jmp
jns
imul
pop
notl
stos
inc
mov
sbb
or
ljmp
mov
mull
jmp
dec
push
or
inc
out
push
insb
mov
xchg
xor
stc
mov
mov
pop
jl
cmp
aam
test
pop
add
and
mov
stos
hlt
movsl
push
repnz
cmp
in
out
movl
out
cmc
das
cs
fldcw
int3
or
sub
lods
add
sahf
shrl
and
jl
push
dec
sub
jno
dec
dec
popa
sarl
sbb
and
inc
ljmp
sbb
add
outsl
dec
mov
jecxz
popf
mov
sub
and
lret
lds
imul
cmpsl
add
std
ficoms
mov
inc
sti
test
pushf
sbb
in
std
outsl
jno
jne
or
stos
adc
cwtl
push
dec
aad
es
jae
add
inc
icebp
in
out
sti
push
mov
fsubrs
lret
aas
mov
sbb
mov
lahf
pop
and
and
lods
loope
pop
mov
pop
mov
scas
adc
rcll
sbb
pop
popl
loope
inc
mov
push
push
das
xchg
and
cmpsl
pop
adc
gs
neg
aas
idiv
pop
or
pop
int
loopne
inc
push
ret
ja
add
mov
addb
inc
sub
in
rclb
loopne
into
inc
pop
sbb
sbb
mov
scas
test
lahf
sub
aad
mov
leave
std
dec
mov
test
add
jbe
xchg
mov
push
addr16
mov
xchg
add
movsl
fmull
hlt
add
xor
loop
imul
inc
test
or
int
mov
xchg
mov
imul
ret
xchg
mov
test
mov
pop
roll
lock
mov
pop
cs
pop
dec
lods
imul
pop
sub
idivb
movsb
cmp
and
mov
int
jecxz
int3
pop
aam
movsl
ds
and
stos
mov
xchg
stos
push
adc
lock
jg
dec
repnz
xchg
and
leave
into
inc
add
mov
out
data16
sbb
mov
pop
ret
dec
fmuls
es
aad
mov
mov
xlat
and
adc
jmp
and
and
pop
sbb
ljmp
cwtl
sbb
ffree
cmp
pushf
ljmp
adc
pop
aas
lret
pushf
scas
inc
jmp
inc
cmp
pop
int
test
inc
pop
and
push
push
movsl
mov
sub
pop
int3
jmp
add
arpl
cmp
cmp
aas
sbb
adc
add
fldt
into
sub
dec
mov
fwait
xchg
or
and
push
popf
bound
pop
push
jge
pusha
push
push
mov
in
mov
cmpl
and
and
mov
cmp
xchg
mov
or
xchg
in
negl
dec
jnp
ljmp
sub
in
xor
push
or
popf
dec
xor
and
pop
shll
shr
xor
outsb
inc
adc
int3
ds
addr16
pop
lods
cmp
inc
push
movzbl
movzbl
cltd
idiv
movzbl
or
mov
movb
movb
movb
movb
movb
mov
mov
or
and
mov
imul
mov
movzbl
movzbl
and
mov
movzbl
cltd
idiv
mov
cmp
je
lea
push
lea
call
cmp
jne
cmp
jne
jmp
mov
mov
mov
mov
add
adc
mov
mov
jmp
mov
push
push
lea
push
call
mov
push
pushl
lea
push
call
mov
mov
jmp
ss
cs
push
sub
loop
adc
inc
mov
sbb
adc
sbb
mov
mov
mov
movsl
push
mov
mov
mov
pop
push
dec
shll
xor
into
pop
cld
xchg
je
daa
fsubrl
clc
pop
fwait
mov
fdivr
cmp
fiaddl
movb
nop
xchg
es
vpsubusb
jnp,pn
cmp
imull
push
push
jmp
mov
daa
rcrb
outsl
sbb
pop
inc
push
mov
fnstsw
mov
fildll
add
fwait
dec
ljmp
cmp
or
popf
dec
push
in
pop
lods
fildl
int
pop
inc
sub
xchg
jmp
cmp
cmp
pop
cs
add
mov
and
pushf
cmp
inc
lods
mov
or
rol
push
aas
aaa
in
sahf
outsl
cs
ds
mov
testb
cmc
xor
cmpsb
int3
and
sub
enter
sub
mov
fisubs
mov
stc
add
adc
loope
out
rcl
in
enter
mov
pop
pop
popf
lahf
sub
fdivrp
dec
pop
or
inc
data16
cmc
add
xchg
out
out
xor
loopne
sub
jmp
mov
sbb
idivb
cwtl
xchg
fs
and
scas
jecxz
add
add
xchg
shrl
push
jne
fldt
int3
lods
mov
bound
shr
cmpsb
mov
dec
sbb
push
pop
pop
hlt
xor
mov
shrl
or
in
mov
push
cli
leave
xor
sbb
and
mov
hlt
loope
mov
mov
loopne
into
mov
pop
scas
and
int
outsl
add
xlat
or
push
dec
inc
test
data16
mov
lods
scas
out
dec
mov
or
cmp
movsl
jl
sbb
and
js
or
pop
cmp
iret
xchg
pop
es
rorl
jno
popa
cmp
stos
addr16
inc
addr16
ss
mov
aad
sbb
loope
stos
sub
or
inc
xchg
in
adc
and
jmp
scas
xchg
adc
mov
into
arpl
adc
jmp
ret
or
ret
enter
int3
sbbl
add
test
nop
dec
insb
inc
test
xchg
adc
lea
xor
jnp
stos
cmp
xchg
std
dec
sbb
sbb
loopne
lea
bound
out
out
cli
or
sub
sub
mov
xchg
popf
fstpl
mov
mov
enter
jae
insb
cmc
mov
cmp
stos
cld
mov
pop
das
xchg
add
loopne
stos
jae
scas
push
in
insb
jmp
outsl
shrb
pop
adc
xlat
outsl
push
nop
pop
es
outsb
sub
push
dec
in
adc
jnp
xor
mov
sub
fimuls
xchg
adc
imul
out
push
repz
fidivs
js
stc
std
decb
mov
pop
cmp
and
inc
xchg
bound
mov
in
cmp
cwtl
sbb
movsl
cmpb
and
pop
inc
addr16
stos
inc
jp
or
xlat
js
cwtl
data16
jne
xor
outsb
rolb
lret
je
nop
lods
lods
outsl
mov
cmp
xchg
cmp
out
pop
sti
mov
mov
mov
mov
mov
lea
mov
add
movl
movl
mov
and
add
and
jmp
fistpll
jne
sbb
sarl
mov
sbb
adc
sbb
cmp
or
and
aaa
loop
dec
fidivrs
out
xchg
stos
fildll
pop
stos
add
mov
mov
addb
mov
push
insl
sahf
outsl
push
addr16
add
add
jbe
and
adc
jmp
mov
int3
int
lds
jbe
adc
leave
pop
orl
rcrl
cmp
mov
cmpsb
fsub
mov
dec
pop
js
pop
adc
fdivs
mov
stos
aam
mov
cmpsl
or
sbb
rep
xlat
add
xchg
inc
scas
test
mov
test
or
sub
lods
iret
int
sbb
xchg
mov
lahf
mov
xor
repz
insb
sub
adc
clc
or
enter
sbb
mov
xor
jmp
inc
outsl
fldcw
and
cmc
out
inc
ret
aaa
cltd
jecxz
cltd
inc
or
jo
test
outsb
loope
push
dec
imul
mov
in
pop
fnsave
ret
scas
adc
out
mov
pushf
cld
ja
mov
push
cmp
mov
scas
ret
jne
outsb
jbe
add
inc
xchg
jno
icebp
jmp
mov
fs
leave
and
dec
cs
xor
mov
cltd
mov
aaa
mov
std
push
push
or
jl
mov
sbb
fildl
mov
mov
or
inc
inc
inc
jo
arpl
xor
in
push
pop
jecxz
cld
data16
adc
lahf
popf
into
jo
mov
out
mov
outsb
and
out
cmp
mov
push
push
out
clc
sti
test
daa
repz
and
insl
outsb
inc
jecxz
add
inc
clc
adc
xchg
hlt
mov
add
das
sub
adc
mov
out
xor
fiaddl
inc
cmp
nop
mov
push
dec
add
popa
jno
es
inc
xchg
mov
mov
loop
sbb
mov
jge
movsb
sbb
lcall
sbb
ret
xchg
xchg
dec
xor
xor
and
scas
or
sti
sbb
jb
mov
adc
out
les
cwtl
sar
xchg
sbb
mov
cld
addr16
ret
jp
adc
inc
push
jae
mov
cltd
outsb
js
ljmp
push
loope
adc
fldt
dec
push
xchg
les
hlt
movzbl
jle
sahf
into
imul
pop
inc
in
sbb
repz
mov
lods
adc
fsubr
fbld
or
push
cs
filds
cmc
xor
adc
test
scas
pop
adc
pop
shrb
test
cmpsl
mov
lock
fs
lahf
fucomip
push
scas
sbb
inc
and
subl
xchg
adc
sub
mov
or
adc
pop
cwtl
mov
imul
sbb
ss
push
aas
in
adc
into
in
sti
sub
es
shrb
jmp
and
inc
inc
inc
rolb
sub
and
mov
movl
mov
mov
or
add
cmp
je
mov
mov
mov
xor
shld
shl
xor
xor
cmp
jne
cmp
je
mov
mov
mov
mov
xor
xor
shr
shl
or
xor
shld
shl
xor
xor
cmp
jne
cmp
je
mov
cltd
mov
mov
cltd
shld
shr
xor
shl
or
or
mov
mov
xor
xor
mov
cmp
jne
cmp
je
pushl
pushl
mov
mov
pushl
mov
call
mov
mov
mov
mov
push
add
push
lea
push
call
mov
mov
pop
pop
pop
mov
pop
ret
push
mov
sub
and
jmp
sub
push
test
sbb
dec
add
inc
test
sbb
add
repnz
and
insl
pop
xchg
inc
movsl
mov
jmp
hlt
dec
xchg
mov
flds
xchg
rolb
pop
aas
lahf
mov
shrb
arpl
fsubs
mov
test
and
inc
faddp
cltd
in
mov
ljmp
and
lcall
push
aaa
mov
hlt
bnd
orl
pop
popa
pop
ja
jmp
in
shrl
or
vmread
inc
ret
pop
cli
inc
xchg
push
xor
jmp
fcomps
outsb
jge
aas
push
icebp
fsubrs
dec
lret
xchg
mov
cld
addr16
jmp
inc
insb
push
icebp
icebp
mov
ljmp
sbb
fcoms
out
fidivrs
scas
cmpl
pop
mov
push
test
pusha
mov
pop
and
pop
test
push
iret
mov
jne
jp
pop
dec
stos
ror
aaa
jnp
and
ss
and
notb
mov
rol
rcr
pop
lret
cmp
pop
mov
ds
mov
es
jl
into
mov
jle
inc
fcmovu
push
outsb
mov
xchg
insb
aas
push
xor
and
into
hlt
sub
hlt
mov
jae
movsb
iret
or
cli
fnsave
cs
mov
adcb
cs
stc
frstor
push
imul
mov
in
test
fucomi
faddl
sub
aad
pusha
push
imul
mov
mov
icebp
lcall
inc
add
in
pop
lds
push
jp
xchg
pop
subl
push
xchg
nop
and
and
xchg
and
jo
fldt
and
mov
fwait
out
ja
mov
xor
andl
std
into
hlt
ret
lahf
scas
cmp
dec
cli
insb
add
xor
push
adc
hlt
sahf
adc
dec
cmp
insb
xlat
adc
xchg
insb
mov
inc
stc
mov
push
push
in
lods
xchg
pop
push
cmpxchg
fs
xchg
jae
and
fdivl
mov
dec
repz
push
jmp
push
inc
jg
lcall
loopew
sbb
xchg
pushl
test
fadds
fwait
aas
in
add
out
xchg
mov
mov
mov
ja
scas
pop
mov
jmp
loopne
ret
in
adc
sbb
pop
jle
data16
imul
or
push
nop
and
pop
rorb
cmp
xchg
cmp
loop
dec
mov
mov
mov
in
je
movsl
out
mov
arpl
repnz
jo
shl
pop
pop
ret
push
shrl
sbb
fiaddl
jge
inc
adc
enter
repnz
and
popf
fwait
sub
xchg
test
fisttpl
and
incl
sti
and
xchg
data16
scas
push
jns
push
add
mov
or
push
addr16
faddl
mov
cs
test
outsb
dec
mov
daa
ljmp
xchg
adc
adc
neg
push
xor
add
mov
sub
or
movl
or
movl
sbbl
movl
add
mov
mov
movl
xor
div
imul
cmpl
mov
mov
movl
jmp
movl
je
pushl
push
push
push
push
pushl
pushl
call
negl
and
andl
not
sbb
adcl
mov
xor
movzbl
add
and
mov
subl
xor
sbbl
div
cmpl
mov
notl
mov
jmp
movl
jle
pushl
push
pushl
push
push
call
add
movl
xor
add
and
subl
add
sub
cmpl
mov
mov
mov
jmp
movl
je
pushl
push
call
adc
xor
sub
add
mov
mov
and
sub
mov
add
movl
movl
neg
movl
cmpl
not
mov
movl
mov
jmp
movl
jge
push
push
call
negl
mov
mov
sub
and
add
sbb
movzwl
adc
mov
and
add
xor
inc
xor
and
imul
mov
xor
add
adc
and
add
sub
incl
mov
movl
movl
movl
movl
cmpl
mov
movl
mov
jmp
mov
mov
jb
push
pushl
push
pushl
pushl
call
sub
orl
mov
mov
add
mov
mov
sub
or
mov
mov
adc
mov
mov
sub
sub
or
mov
imul
mov
cmpl
notl
mov
notl
mov
jmp
movl
ja
push
push
push
pushl
push
pushl
pushl
call
add
add
negl
mov
sbb
mov
sbb
xor
mov
sub
mov
movzbl
sub
imul
cmpl
not
notl
jmp
movl
not
jne
pushl
call
mov
mov
or
orl
subl
sbb
add
mov
and
mov
xor
imul
cmpl
movl
movl
jmp
movl
movl
jge
call
or
negl
mov
mov
sbb
orl
add
or
mov
and
or
movl
mov
addl
xor
andl
jmp
pop
push
testl
mov
in
mov
and
sbb
and
clc
xor
dec
mov
shl
ja
push
out
lock
jo
cmp
dec
insb
insl
sbb
loope
lea
inc
pop
in
add
jp
stc
notl
mov
and
insb
out
cmp
xchg
or
test
js
ret
adc
adc
jl
push
mov
test
dec
adc
mov
test
lock
mov
jb
xchg
cmp
mov
imul
ror
push
test
adc
addr16
jecxz
or
sbb
adcb
sbb
movsl
xchg
add
in
add
sbb
pop
sub
imul
ss
mov
xor
or
or
sbb
push
popf
mov
dec
mov
pushf
xor
pop
mov
flds
add
fidivs
ljmp
inc
insb
mov
fwait
push
int3
or
arpl
xchg
cmp
cmp
cwtl
jbe
xchg
lret
mov
dec
clc
mov
movsl
shlb
adcb
cmp
and
xor
outsb
dec
ds
add
ljmp
leave
jne
push
fwait
add
popa
daa
and
jae
push
push
daa
ljmp
popa
and
lds
out
sub
push
mov
pop
loope
xchg
cmpb
call
adc
test
shrl
mov
out
es
sbb
xor
dec
cmp
test
dec
lea
or
in
xor
adc
cli
pop
fsubp
push
sbb
push
push
cld
sub
inc
add
sbb
xor
les
jns
pop
nop
xchg
insl
ret
jne
ljmp
popf
stos
or
xor
and
xchg
shll
popf
call
xor
call
sbb
lret
mov
xchg
cmpsb
inc
inc
enter
fistpll
clc
pop
pop
dec
jl
test
loope
ret
xchg
mov
arpl
addr16
pop
inc
xor
pop
mov
in
lret
sub
cmpsl
or
sbb
pop
pop
mov
popf
jl
mov
ja
mov
pop
imul
or
faddl
rcrb
ss
clc
add
scas
dec
dec
je
xchg
call
stc
and
push
aad
xor
inc
and
rcll
shrb
mov
insl
push
xchg
mov
call
aam
xor
pop
jnp
adc
mov
repz
dec
and
mov
into
jne
data16
jmp
dec
dec
cmp
cmp
mov
rolb
and
mov
sbb
cs
xor
sbb
out
cmp
add
xchg
sub
inc
in
pop
call
rorb
xchg
jl
push
sbb
rorb
ja
pop
mov
nop
dec
mov
or
test
mov
push
insb
andb
mov
fs
fidivrs
and
aas
aam
mov
inc
xor
subb
dec
xchg
mov
das
adc
pop
push
enter
test
inc
xchg
mov
lret
mov
mov
andl
lea
mov
add
mov
mov
and
movl
subl
movl
movl
andl
mov
cmpl
mov
mov
jmp
movl
je
push
pushl
push
pushl
call
not
dec
sub
inc
adc
and
movzwl
sub
mov
xor
mov
or
xor
add
subl
mov
or
add
xor
xor
or
adc
mov
mov
mov
sub
sub
movl
movl
adc
movl
mov
cmpl
movl
mov
mov
movl
jmp
mov
jae
pushl
pushl
push
push
push
call
mov
add
add
adcl
decl
addl
sbb
orl
mov
or
add
cmpl
movl
movl
jmp
movl
jl
pushl
call
adcl
xor
xor
add
mov
adcl
sbb
movzwl
or
adc
xor
cmpl
movl
mov
jmp
movl
jae
push
pushl
call
xor
or
adc
mov
sub
movzwl
sub
mov
sbbl
addl
adc
mov
sub
xor
mov
lea
cmpl
mov
mov
jmp
movl
jg
pushl
push
pushl
call
xor
mov
or
mov
add
xor
add
add
and
or
dec
sub
not
mov
movl
movl
cmpl
mov
mov
jmp
mov
jl
pushl
pushl
push
call
add
or
or
and
mov
sbb
and
add
mov
and
add
sub
imul
mov
sbb
mov
imul
xor
mov
xor
mov
mov
div
andl
sub
movzbl
sub
mov
xor
movl
cmpl
movl
movl
mov
mov
jmp
movl
jne
pushl
push
push
push
push
call
xor
dec
add
xorl
add
subl
sub
movl
movl
cmpl
mov
mov
movl
movl
jmp
mov
movl
jle
pushl
push
push
call
add
xorl
or
movl
or
mov
cmpl
mov
mov
jmp
movl
movl
jbe
push
call
dec
add
movl
sbb
and
subl
mov
xor
sbbl
div
orl
imul
sub
add
or
mov
addl
xor
xor
mov
div
xor
movzbl
and
mov
cmpl
mov
mov
mov
jmp
movl
jne
push
call
orl
or
adc
andl
subl
subl
add
mov
mov
sub
and
movl
sbbl
movl
neg
movl
subl
mov
mov
sub
add
shr
sbb
sub
cmpl
movl
movl
movl
jmp
mov
jl
push
push
push
call
orl
xor
sub
addl
adcl
sbbl
mov
subl
imul
or
mov
and
adc
mov
subl
sub
movl
mov
cmpl
mov
movl
movzwl
jmp
movl
jle
pushl
push
push
call
and
or
mov
add
and
adc
movl
cmpl
movl
mov
jmp
mov
mov
jbe
pushl
pushl
push
call
mov
adc
sub
mov
and
mov
and
sub
movzbl
adc
movl
mov
sbb
or
mov
or
sub
sub
mov
movzwl
sbb
movl
movl
mov
mov
sub
or
movl
movl
inc
movl
movl
adc
movl
mov
and
mov
and
add
cmpl
movl
movl
mov
mov
jmp
movl
jbe
push
push
pushl
call
andl
mov
or
xorl
subl
add
dec
mov
add
movzwl
xor
mov
subl
sub
cmpl
mov
movl
mov
jmp
mov
mov
jae
push
push
push
pushl
call
movzbl
or
sbb
or
xor
sbb
or
xorl
movzwl
xor
mov
mov
imul
imul
and
mov
or
cmpl
mov
mov
not
jmp
movl
jl
push
push
pushl
push
call
or
mov
xor
mov
andl
or
mov
mov
and
mov
or
mov
add
xor
add
add
mov
mov
movl
lea
orl
push
xorl
call
adc
mov
adc
mov
sub
jmp
scas
dec
jb
pop
and
push
inc
cmp
sbb
adc
sbb
test
or
leave
es
mov
mov
mov
dec
in
sti
cmp
aam
cmpsl
push
cmp
lock
push
jmp
aam
xchg
dec
and
xor
divl
jge
push
sub
add
cmp
cmp
insb
out
pop
mov
das
test
xor
iret
jbe
and
mov
fisubs
xor
or
jle
lret
mov
xchg
and
pusha
mov
stos
pop
pop
imul
xchg
es
in
inc
pop
xchg
icebp
shlb
xor
enter
test
add
lods
outsl
leave
stos
push
sub
inc
pusha
and
inc
xor
dec
mov
int3
dec
cltd
adc
xchg
test
mov
ss
inc
repnz
adc
push
xor
mov
idivl
in
ffree
and
iret
mov
add
in
cmpsb
push
jnp
mov
adc
fbstp
loopne
insl
mov
xchg
jne
pop
test
mov
clc
addr16
pop
add
adc
scas
imul
fisttps
jo
out
testl
jo
cld
cmpsb
lods
mov
enter
adc
pop
out
cs
orl
test
sbb
imul
shl
shlb
push
xchg
lret
mov
mov
sub
in
ror
call
sbb
fs
adc
xchg
or
dec
jge
jg
cltd
in
push
sbb
jp
std
add
dec
subb
adc
cmp
or
leave
and
jecxz
dec
pop
xchg
imul
or
jg,pn
loopne
fldl
jbe
mov
stc
cmp
bnd
scas
repnz
into
push
xchg
out
jb
mov
jo
scas
aad
das
xchg
push
or
pop
loop
daa
in
sub
fadds
xchg
mov
outsl
cmpsl
push
mov
push
xor
cmpl
scas
xlat
repz
mov
dec
fidivl
mov
stos
sbb
pop
sub
inc
jle
lea
pop
jmp
ja
and
xchg
ss
fmuls
mov
inc
pop
fwait
xchg
jae
mov
sub
fiaddl
andb
mov
leave
test
xchg
les
xchg
pushf
jg
fsubr
add
mov
xor
cltd
sbb
ficoms
iret
repz
leave
sub
push
push
sbb
stos
hlt
sbb
ret
pop
lcall
cmp
jnp
je
mov
hlt
subl
cs
je
inc
jp
inc
xchg
pop
jne
scas
xor
pop
sahf
shll
mov
mov
mov
bound
ds
sarl
sub
push
scas
popa
jnp
setg
fisubs
rol
push
lret
enter
ficoms
iret
insl
add
mov
call
and
ret
loopne
fistl
std
and
cmp
imulb
shl
pushf
mov
xchg
hlt
mov
inc
mov
jl
or
icebp
pop
xchg
pop
or
push
movsl
add
and
fmull
movd
aam
iret
xchg
add
roll
enter
cwtl
and
mov
fstps
sbb
mov
add
cmpl
movl
not
movl
jmp
movl
movl
jg
push
push
call
sub
add
xor
mov
and
or
add
sub
add
sbb
and
sub
xor
mov
andl
div
not
xor
add
mov
movl
dec
movl
movl
and
movl
cmpl
not
mov
jmp
movl
jae
push
call
not
orl
dec
sub
xor
movl
movl
mov
mov
sub
xor
movl
sbbl
movl
sub
movl
xorl
movl
movl
movl
mov
mov
cmpl
mov
not
not
jmp
movl
movl
jge
push
call
or
sub
xor
xor
add
add
add
and
mov
or
cmpl
mov
mov
jmp
movl
ja
pushl
push
pushl
pushl
pushl
push
push
call
mov
adc
mov
movzbl
xor
and
xor
or
xor
add
sub
xor
mov
mov
adc
mov
and
sbb
sub
sub
cmpl
movzwl
mov
jmp
mov
jg
push
call
mov
mov
sbb
adc
dec
sbbl
imul
mov
cmpl
movl
mov
mov
jmp
movl
jle
pushl
call
adc
mov
add
sub
addl
xor
add
sbb
mov
adc
lea
addl
mov
and
mov
adc
mov
mov
mov
xor
mov
xor
add
andl
mov
xor
lea
add
and
cmpl
movl
mov
movl
mov
jmp
movl
jge
push
push
call
and
or
xorl
add
mov
orl
sub
add
mov
movl
jmp
fidivrs
cli
sbb
dec
push
lret
cli
mov
and
sbb
rcll
clc
lods
das
movsb
les
cli
xchg
add
leave
push
movsl
and
loopne
out
sahf
sarb
lret
cmpb
and
cmp
sub
lds
pop
ret
xchg
mov
rorb
adc
fisttps
ss
out
pop
jl
hlt
pop
div
add
lods
test
jg
movsl
pop
xchg
mov
lods
sbb
bound
and
xor
and
out
cmp
xchg
push
pop
sbb
pushf
mov
xor
mov
xor
ror
xchg
mov
push
shrb
out
push
cmp
mov
rolb
add
sbb
dec
xchg
outsb
int3
test
mov
mov
jne
sub
orb
testb
icebp
daa
dec
out
jecxz
call
in
outsb
movsb
gs
dec
add
and
test
jp
orl
xchg
shrl
cmp
out
fcomi
cmc
insl
aas
pop
mov
iret
mov
nopl
fadd
lods
or
int3
dec
je
mov
insb
xor
sub
fldl
inc
cmp
dec
icebp
xchg
xlat
push
jo
adc
rorb
sbb
loope
inc
in
sub
loopne
rcl
and
daa
ds
push
mov
inc
mov
inc
pop
shl
into
movsl
call
fcoml
adc
sbb
push
mov
mov
push
aam
sti
add
pop
or
call
mov
rorl
jecxz
cmp
inc
fucomp
fucomip
fsubrs
lods
outsb
pop
jge
pop
stc
subl
push
pop
mov
jne
pop
xchg
sub
outsb
cmp
js
ja
in
mov
xchg
hlt
jmp
fisubrs
mov
xchg
add
cmp
lea
mov
adc
push
lret
mov
adc
cmp
mov
daa
sbb
cmp
repnz
or
aam
shll
rcll
in
push
xchg
add
repz
dec
mov
pop
stos
push
jg
jg
xor
icebp
lahf
das
ljmp
jnp
scas
cmp
adc
sub
je
loop
pop
jmp
dec
test
int
jnp
push
and
stc
pop
loopne
fildl
jnp
sub
push
fstpt
insb
fildll
push
cmpsl
scas
mov
test
pushf
ds
jl
aaa
mov
jb
insl
pop
leave
loope
push
insb
adc
imul
cmp
sub
and
rcrb
sub
inc
shrb
loopne
fsub
out
fimuls
or
lods
and
scas
cmc
push
pop
stc
in
lea
xchg
lahf
out
jl
scas
adc
cmp
mov
cmp
lret
cmpsl
mov
jae
jae
and
imul
sub
jns
fs
cmpsb
inc
lret
in
mov
cmc
jns
adc
jecxz
loop
out
std
shll
mov
xchg
sbb
lcall
test
xchg
outsb
mov
xor
jno
mov
in
adc
cmp
test
mov
pushf
movl
movl
mov
mov
mov
xor
xor
mov
call
mov
mov
mov
jmp
movsb
add
sub
movsb
jp
int3
push
stos
push
inc
xor
and
sbb
sarl
or
scas
int3
int
mov
popl
popf
push
cs
and
into
cmc
cmp
cwtl
or
push
mov
sbb
lret
mov
mov
jge
stos
orb
pusha
sub
jecxz
xor
pop
xor
dec
push
mov
inc
adc
pusha
inc
arpl
mov
or
dec
sub
sub
cmpsl
test
sbb
nop
bound
mov
movsl
mov
out
addr16
xchg
xor
jns
pop
sbb
cwtl
dec
adc
ja
jmp
insl
mov
add
stc
data16
call
cmp
aam
sub
icebp
or
mov
repnz
aam
test
out
jle
ds
inc
cmpsl
add
lods
adc
stc
testl
mov
out
dec
push
cmp
and
jne
loope
adc
shrb
xor
jmp
hlt
int3
flds
pop
aas
xchg
les
addl
mov
dec
js
or
mov
push
sbb
pop
insl
mov
aam
filds
push
shrl
push
sub
inc
jge
shrb
sub
mov
popf
punpcklwd
mov
pop
xor
repz
imulb
arpl
decl
int
lret
es
sar
mov
int3
test
movsl
sbb
sub
shlb
notb
jb
dec
sbb
outsb
add
in
xlat
mov
ljmp
mov
adc
pop
dec
mov
mov
mov
cmpsl
sub
xchg
sbb
xchg
mov
mov
inc
hlt
loope
mov
sub
ss
lods
push
mov
pop
jl
xchg
insl
jle
addb
lahf
cmp
cmpsl
subl
jae
stos
push
sub
mov
mov
or
inc
iret
mov
sbb
mov
mov
or
dec
push
arpl
icebp
idivb
adc
subb
mov
ret
jns
dec
mov
or
sti
test
inc
mov
or
push
push
xchg
addr16
xor
mov
insl
xchg
arpl
sub
pop
in
cmc
repnz
outsb
inc
dec
sahf
adc
push
adc
fwait
dec
push
adc
xchg
out
sti
cmpsb
cmp
subb
jns
stc
mov
sbb
lea
and
fildl
xchg
sbb
mov
es
sbb
xchg
insl
pop
cmp
test
movsl
cmp
lahf
mov
push
ds
xchg
inc
sub
ficoms
mov
dec
loopne
inc
dec
pop
nop
mov
rorb
nop
test
in
in
xchg
out
cli
mov
mov
jnp
test
mov
rclb
push
insl
sbb
fidivl
pusha
xchg
inc
out
and
push
ljmp
cwtl
cwtl
adc
mov
test
sbb
push
out
in
inc
adc
stc
xchg
testb
push
push
into
mov
pop
movq
mov
xor
xor
mov
call
or
or
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
mov
mov
mov
mov
call
mov
or
mov
or
push
push
push
push
jmp
loopne
add
sbb
fcomps
arpl
push
sbb
adc
sbb
mov
rcrb
pop
dec
daa
jle
dec
or
push
mov
push
rcll
add
push
outsl
xchg
gs
ss
mov
lret
aam
xchg
adc
ja
aas
pop
sbb
xchg
push
movsl
bound
dec
add
and
inc
jns
dec
movsb
and
sbb
cmp
pop
loop
add
and
xchg
pop
jl
pop
inc
pop
mov
push
pop
into
xchg
iret
xchg
dec
rclb
outsl
jne,pt
aaa
push
in
push
dec
lea
shlb
dec
jb
outsl
mov
mov
in
lahf
pop
jge
dec
jne
rolb
xchg
sbb
test
pop
ds
mov
jbe
mov
jb
xchg
pop
cmp
rep
push
and
dec
lret
lock
xchg
mov
add
ja
push
push
push
mov
xor
ss
imul
popf
fwait
lret
addr16
jno
mov
jns
xchg
das
xchg
movsl
and
add
mov
mov
test
scas
loope
mov
adc
imul
inc
mov
test
es
adc
xor
add
scas
mov
fcomip
jle
stc
mov
cmpsl
lds
add
or
mov
mov
fxch
adc
jo
and
rorl
ret
cwtl
jns
ficoms
jmp
push
je
push
add
loopne
push
pop
fwait
leave
pop
repz
jge
popf
add
mov
lahf
xor
dec
pushf
and
inc
jnp
icebp
xorb
int
cltd
mov
push
push
mov
fiadds
pop
xor
dec
add
mov
add
xor
mov
out
sub
push
mov
push
sub
sub
daa
sar
xchg
into
sub
enter
rcrl
sbb
mov
xchg
push
jmp
inc
mov
gs
inc
sahf
jno
and
cmp
repz
push
inc
jg
div
iret
cmp
in
mov
and
cwtl
stos
push
insl
sub
sbb
loope
cmpsl
inc
mov
jno
lea
cmp
mov
jl
bound
out
andb
lea
sbb
sbb
jno
into
shl
mov
lahf
inc
stos
int3
faddl
or
jae
sub
adc
rdtsc
addb
lcall
addr16
shll
add
jge
ficoms
js
icebp
ja
call
or
loope
scas
xorb
aaa
and
loopne
pusha
js
test
adc
jo
push
adcl
shlb
mov
xchg
lret
imul
sub
dec
and
test
mov
mov
cmp
jne
ss
test
aad
and
xchg
roll
mov
call
jecxz
mov
sbbb
outsb
sbb
sbb
sub
sub
in
dec
mov
lods
xor
and
lcall
lcall
xor
inc
xor
xor
pop
jge
decl
cmp
jne
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
mov
mov
jmp
adc
pop
out
loop
loope
add
shll
jg
sbb
adc
sbb
out
xor
xor
mov
pop
out
jge
inc
sub
mov
jns
or
add
xor
pop
test
push
xchg
xchg
imul
sub
test
jl
sbb
dec
cli
cli
daa
and
jge
and
fisubrl
sub
cs
das
and
sti
loopne
popf
aas
mov
mov
push
je
push
mov
mov
mov
jns
jl
sbb
sti
pushf
aad
loope
xor
fdivrs
aam
lret
xchg
inc
cli
or
mov
icebp
cmp
jno
mov
push
in
leave
pop
or
rolb
movsl
mov
insb
xchg
and
pop
mov
inc
mov
dec
lods
inc
fadd
push
dec
push
jbe
scas
sub
dec
and
out
lods
push
insl
cs
clc
mov
add
add
sbb
push
loope
push
mov
jae
add
push
ds
pop
bound
fnstcw
movsl
xchg
dec
push
leave
out
and
bound
jne
sbb
pop
or
jp
jmp
lods
lret
pop
mov
jge
dec
fdiv
lcall
xor
popf
lds
jno
or
sbb
mov
inc
stos
xchg
nop
sub
in
pop
stos
lahf
int
movsb
aaa
jg
iret
je
mov
ja
push
mov
adc
mov
sub
adc
dec
or
dec
adc
jmp
fcomi
jl
push
fcmovu
std
out
sbbb
addr16
addl
sarb
inc
xlat
es
inc
ss
jl
inc
repnz
cmp
scas
cmp
lret
dec
mov
jns
fdivs
idivl
xchg
pop
mov
lock
lret
mov
xor
adc
or
dec
mov
test
push
inc
fstpt
jnp
fisttpll
repnz
outsl
dec
out
sub
lds
into
sub
pop
test
repnz
mov
cmp
pop
sbb
mov
cmp
or
aas
mov
pop
lahf
sub
and
add
in
iret
cmpsb
mov
addr16
add
insl
sbbl
getsec
jmp
push
subl
insl
pusha
xchg
sub
sub
bound
xor
loopne,pt
jg
es
test
nop
pop
xor
cmp
mov
dec
pop
loop
push
inc
jecxz
pop
loop
orl
mov
orb
pop
dec
aam
call
subb
cltd
cld
or
fbld
inc
cmc
clc
rcr
cmc
xor
pop
inc
icebp
loope
xor
fldt
outsb
div
loopne
mov
pop
sbb
adc
sbb
and
mov
inc
mov
mov
sbb
push
mov
loop
aad
mov
outsl
imul
orl
sbb
inc
sbb
andl
adc
inc
dec
pop
ss
icebp
sub
movsb
das
pop
int3
stos
cltd
gs
cs
sub
sbb
adc
xor
outsb
stos
inc
call
or
mov
or
push
push
push
push
call
mov
jmp
jmp
lea
mov
mov
movl
mov
xor
shr
mov
xor
shl
or
mov
mov
mov
jmp
mov
xor
sub
jmp
xlat
mov
push
sbb
adc
sbb
aad
xor
clc
ret
nop
xchg
cmc
lock
sbb
leave
shl
sti
in
cmp
sub
xor
sahf
enter
test
imulb
aaa
push
add
imul
aas
repnz
mov
adc
jmp
push
cmp
outsl
xchg
sti
lods
cmp
icebp
sub
adc
xchg
imul
gs
dec
fwait
cs
repnz
pop
aad
jbe
add
je
out
jns
mov
hlt
sbb
test
repnz
lds
arpl
aad
xor
mov
xor
and
imul
pop
xchg
mov
mov
mov
dec
push
jo
iret
dec
push
sbb
sub
add
mov
mov
lahf
sbb
icebp
or
dec
lods
out
cld
push
outsl
lds
push
jecxz
ds
mov
mov
aaa
xchg
adc
or
pop
lret
jne
std
jo
sbb
sar
stc
or
and
mov
nop
dec
jno
or
or
cmpsl
hlt
addr16
leave
pusha
lock
scas
pop
jmp
stos
adc
pop
mov
add
cwtl
cld
adc
mov
pop
aad
cmp
in
cmpsb
push
jns
pop
aam
stc
mov
nop
mov
push
pop
mov
mov
fstl
repz
mov
push
loop
clc
mov
xchg
mov
in
cs
insl
dec
js
mov
add
pop
pop
insb
push
sub
cmp
mov
les
mov
xchg
nop
scas
out
gs
adc
in
cmp
popf
lods
pop
test
stos
js
leave
sarl
pusha
mov
jns
cmp
test
pop
or
mov
sbb
or
xchg
test
xchg
cld
popa
or
push
jg
mov
popa
insb
testl
sub
ud1
es
xchg
test
or
jle
aam
loope
loop
roll
jecxz
cmp
mov
cs
jne
xor
lds
sub
inc
add
mov
mov
pop
cmp
or
adc
cmc
push
or
aaa
inc
jge
lcall
xorb
mov
sbb
imul
ret
pop
je
dec
lret
mov
sbb
insb
std
mov
pop
data16
popa
ja
js
int
sbb
pop
mov
push
divl
cwtl
ret
std
xlat
sar
adcl
int
jge
hlt
mov
stos
lods
push
pop
push
sub
dec
bound
lret
sti
and
scas
ss
sub
sub
jp
push
ret
imul
push
jbe
mov
cmpl
pop
xorl
popa
pop
lds
dec
pop
dec
std
sahf
xchg
cltd
imul
outsl
pop
cltd
xor
dec
jp
dec
mov
popf
mov
xchg
xchg
push
jbe
out
stos
sub
dec
repz
imul
inc
aam
psubusw
mov
xchg
rclb
add
dec
or
mov
test
mov
pushl
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
jmp
jb
adc
or
xor
shll
push
push
stos
xchg
jno
sbb
adc
sbb
xor
xlat
add
jno
pop
inc
push
mov
and
mov
sbb
bound
pushw
jl
in
test
mov
xchg
ds
xor
cmp
inc
nop
sbb
add
cmp
xor
jns
outsb
popa
mov
mov
lret
sub
cld
fisubs
lret
jo
mov
mov
xor
notl
dec
sub
mov
mov
mov
sti
lret
inc
cmpsb
inc
push
mov
hlt
leave
inc
inc
xchg
js
xchg
dec
push
imul
mov
mov
mov
push
ds
add
rcll
pop
or
mov
add
push
xchg
mov
sbb
lds
aas
jne
xchg
and
push
xor
repnz
xchg
sarl
inc
and
xor
and
push
push
sti
adc
or
mov
stos
mov
add
push
test
push
lcall
push
mov
adc
daa
push
and
test
shll
and
fisttps
mov
xor
cmc
movsb
push
inc
xchg
stc
and
iret
scas
xchg
call
adc
jp
aaa
das
test
sahf
dec
cmpb
pop
shrl
mov
fwait
push
sub
mov
and
cs
test
int
adc
in
add
stos
jge
fnstcw
push
pop
scas
mov
movsl
dec
faddl
fdivs
stc
lock
lds
jno
into
jns
push
js
into
push
nop
or
sbb
xchg
mov
fs
into
mov
aam
lea
mov
fdivrs
dec
jae
dec
test
gs
mov
loop
ds
aas
enter
lds
xchg
lods
jge
add
idivl
pop
movsl
xchg
int
cmp
cmp
pop
inc
jne
daa
lret
jecxz
or
stc
setnp
fcomp
jno
inc
push
inc
sbb
sti
and
fxch
iret
adcl
cmp
jmp
sahf
test
cwtl
xor
xor
inc
sub
pop
mov
dec
inc
pop
ficoml
pop
pop
mov
dec
sub
data16
or
dec
lods
sub
lret
jp
sub
adc
lock
or
mov
sahf
call
sub
mov
sti
and
sbb
mov
outsb
dec
add
out
jecxz
pop
sbb
pop
xchg
sbb
mov
dec
push
mov
cmpsl
pop
jl
sbb
or
mov
sbb
push
jno
pusha
xor
inc
in
cmp
les
jmp
fbstp
shl
xchg
insb
jne
inc
sahf
hlt
jb
fidivrl
loope
sbb
xor
push
cli
mov
and
mov
addr16
xor
arpl
mov
inc
rcrb
test
mov
sbb
push
xlat
fldt
inc
rorb
inc
push
push
insb
jbe
pop
pop
nop
imul
negb
cs
sbb
cwtl
jmp
fsin
addr16
adc
popf
xor
inc
push
enter
ret
mov
mov
call
mov
or
mov
or
push
push
push
push
call
mov
cmp
je
jmp
add
jp
add
jno
jo
imul
and
sbb
mov
arpl
std
ja
aad
push
sub
pop
mov
push
idivb
push
aas
bound
or
xchg
hlt
mov
subl
enter
cmp
mov
andl
cmp
push
dec
ja
adc
sbb
gs
jne
xchg
jbe
pop
push
cmp
ds
fucom
inc
inc
xor
mov
xchg
adc
cmp
inc
imul
sarb
scas
cld
add
cmp
adc
int
mov
dec
stos
int3
jge
xchg
jg
call
jmp
xchg
jnp
push
setg
iret
push
adc
andb
mov
lret
arpl
pop
jmp
insl
push
xchg
gs
jle
lahf
mov
jg
pop
jbe
or
mov
rcl
adc
test
aam
sub
stos
mov
das
cld
aad
inc
pop
mov
rclb
cmp
sbb
das
movb
repz
aaa
xor
repz
pusha
push
insl
sub
sbb
inc
inc
pop
fisubrs
cmp
or
lds
jne
hlt
outsb
ljmp
jb
xchg
dec
ret
es
pop
xchg
es
jmp
cld
sbb
jle
stc
jo
out
ljmp
pop
sub
pop
mov
mov
int
dec
mov
hlt
mov
pop
jge
insb
push
fnstenv
ret
in
jle
cs
outsb
jecxz
push
sbb
out
jecxz
sbb
cld
mov
or
aam
bound
insb
imul
jle
adc
scas
push
xorb
mov
sub
cmp
lahf
push
push
add
pop
mov
sar
mov
jns
sub
imulb
adc
mov
adc
movsl
ficoms
xor
sbb
jae
lahf
sar
inc
es
push
pop
popa
sbb
mov
dec
out
dec
movsb
sub
mov
pushf
dec
aas
mov
and
sbb
pop
ja
in
xchg
jno
aam
out
mov
sbb
xchg
fwait
lods
sub
and
xor
add
push
bswap
sbb
and
sbb
cld
dec
sti
inc
or
adc
fucom
push
jbe
push
std
imul
sub
imul
inc
loope
addr16
add
sub
pusha
sti
imul
xchg
jge
outsl
xchg
push
and
cmp
cld
out
shrl
sbb
es
stos
mov
fwait
dec
pop
push
jle
fndisi(8087
mov
call
inc
or
jnp
cmp
movsl
mov
mulb
mov
ljmp
jne
pop
test
push
fiadds
jo
xchg
leave
lret
cltd
loope
lret
xchg
test
lock
cmp
inc
push
cmpsl
sahf
sar
mov
push
in
pop
xchg
test
jb
les
cltd
js
iret
jg
inc
ss
mov
imul
imul
sahf
int3
sub
in
pop
nop
test
cmp
fldl
push
sahf
pushf
mov
inc
enter
test
mov
pushl
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
jmp
loopne
xchg
es
jnp
imul
mov
and
mov
xchg
sbb
insl
es
cmc
mov
fidivs
stos
jnp
imul
ljmp
mov
ljmp
xchg
test
clc
sbbl
mov
and
pop
and
outsl
jb
push
imul
aaa
cmp
mov
ds
loopne
xor
test
scas
mov
sub
push
sub
xchg
in
arpl
or
jns
inc
scas
push
adc
push
mov
and
jge
sub
fildll
add
mov
rcrb
pop
push
xchg
movsl
or
dec
xchg
testl
decb
cwtl
xor
and
adc
ss
jg
sbb
cmp
out
roll
and
mov
je
out
inc
aam
lods
mov
shlb
push
xchg
mov
pop
jne
push
jmp
cmp
xchg
popa
ret
adc
ds
rorl
movsl
inc
imull
mov
and
push
mov
std
test
pop
inc
cmc
mov
int
sub
and
int3
iret
add
lahf
aam
cmpsb
jmp
fdivrs
les
mov
cmp
scas
push
sti
icebp
test
fistpll
mov
cmp
sub
mov
xchg
push
and
cmpb
sub
mov
dec
pop
sub
adc
iret
ret
shrl
divb
lock
sub
sub
cmp
fdivr
popf
jp
shlb
or
push
cmp
and
out
mov
sti
insb
mov
dec
fs
mov
jle
sub
adc
fsubs
test
stc
jns
outsb
push
int
xchg
jge
test
dec
inc
test
sub
insb
push
and
xchg
jno
sbb
push
dec
test
stos
ficoms
lcall
lahf
ja
jo
sub
or
stos
outsb
sahf
fsubs
add
js
mov
or
mov
jmp
push
lods
push
sub
ss
popf
jae
lahf
mov
pop
xchg
in
cmp
mov
mov
inc
arpl
addr16
bound
lret
outsb
shlb
push
jge
pop
and
stos
out
das
and
sub
xchg
in
jbe
jmp
mov
rcll
xorl
roll
test
jb
rcpps
push
jmp
test
into
add
push
mov
dec
sub
jbe
out
ror
scas
xchg
movb
sbb
sarl
jnp
push
popf
fldl
shlb
out
insl
pop
sti
mov
jno
and
mulb
push
shl
std
xchg
icebp
jecxz
push
or
loopne
mov
inc
rcl
pop
imul
out
jae
and
test
push
sub
stos
lods
dec
sahf
sub
jmp
or
push
inc
inc
pop
adcb
fsubl
xchg
sbb
or
and
cmp
jne
fsts
loopne
adc
or
or
mov
imul
add
mov
mov
mov
jmp
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
xor
jmp
pop
scas
push
sub
push
ja
fstpt
fsubr
mov
and
sbb
js
popa
clc
mov
test
scas
inc
xchg
cltd
jnp
repz
fistps
mov
push
fiaddl
dec
or
add
scas
lcall
push
or
pushf
cmp
dec
mov
adc
daa
pop
mov
ljmp
daa
add
lret
enter
mov
loopne
push
in
lahf
daa
and
insb
stos
stos
mov
pop
xorb
xor
cmp
push
cld
xor
icebp
aam
mov
testl
ret
push
push
sub
loope
and
sbb
insb
fsts
ret
js
pop
dec
js
push
inc
xor
out
push
cmp
repnz
push
rclb
pop
and
cmpsl
xor
rorb
pop
std
and
lcall
into
cmp
movsb
xlat
dec
mov
mov
jbe
hlt
push
and
pop
fstpl
mov
outsl
enter
movhlps
mov
mov
shl
mov
add
test
and
push
js
cli
outsl
stos
xor
pop
mov
clc
or
xchg
mov
movsb
mov
bound
mov
rsqrtps
int3
scas
adc
xlat
in
lods
js
test
dec
ret
stos
and
mov
daa
fnstsw
and
out
sar
clc
pop
sarl
scas
addl
enter
test
sub
xchg
fbld
lods
imul
lds
inc
jge
rcrl
mov
insl
das
insl
into
and
mov
movsb
dec
iret
mov
stos
mov
mov
jge
adc
pop
add
dec
in
popaw
mov
inc
or
and
inc
or
pop
sub
jmp
mov
icebp
aas
scas
dec
mov
adc
sub
das
ficompl
test
mov
adcl
inc
movsl
jnp
ss
decl
movb
das
lds
loope
push
and
mov
lds
xlat
push
jge
lcall
sar
mov
notb
out
jge,pt
sbb
sub
movsl
lret
push
lret
std
or
pop
das
test
arpl
daa
mov
int3
pop
je
pop
gs
int
fistps
pushf
jle
jns
bsr
adc
cmp
xchg
xchg
xlat
cwtl
shrb
test
imul
mov
loop
and
stos
xchg
cmp
popf
mov
add
dec
pop
cmpsb
fmull
sbb
je
sub
movsl
movl
mov
adc
iret
mov
or
cmpb
jmp
pop
xchg
outsb
cmp
fidivs
xorl
xchg
add
jae
and
inc
std
mov
mov
or
daa
cmp
inc
in
js
mov
or
push
push
jg
xchg
fs
mov
loope
add
add
mov
cltd
adc
push
gs
pop
mov
mov
add
adc
pop
push
cld
stos
xchg
jp
push
push
dec
sub
call
repnz
mov
call
mov
mov
mov
mov
xor
xor
mov
mov
mov
call
or
mov
or
push
push
push
push
call
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
mov
xor
div
mov
and
add
mov
lea
xor
add
mov
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
jmp
shrl
into
and
fwait
outsb
mov
add
sbb
adc
sbb
mov
ret
adc
scas
call
mov
cmpsb
push
push
mov
xchg
lret
test
push
or
sbb
mov
jecxz
jg
in
sbb
inc
mov
push
adc
sub
pop
into
scas
xchg
mull
scas
dec
loop
cmp
mov
in
leave
scas
and
push
sub
and
es
out
sub
test
add
lret
cld
mov
xor
ss
movsl
icebp
cmc
ds
and
pop
push
das
inc
sub
aam
fsubp
jo
xlat
addr16
test
lods
pop
cmp
addr16
dec
adc
iret
sub
cwtl
les
push
loope
icebp
les
fldl
stos
adc
cltd
test
and
aaa
xorps
mov
or
int
cld
orb
out
or
adc
mov
js
stos
ss
stos
cmp
sub
mov
mov
popf
add
hlt
push
mov
aam
and
lds
jno
out
pop
in
add
hlt
mov
repz
add
cmp
ss
je
je
iret
cmp
xlat
movsb
xchg
je
fists
xchg
xor
rcl
cmp
xlat
add
pushf
sar
mov
int
cmp
insl
mov
loope
lods
mov
ja
cwtl
stc
out
divb
outsb
inc
xlat
sbb
and
cld
inc
add
ret
sub
inc
mov
jns
je
add
inc
mov
bnd
adc
cs
adc
lahf
push
lcall
inc
loope
adc
pushf
lret
das
adc
ds
in
iret
xor
ret
cmp
mov
sahf
int
xchg
inc
int3
jne
push
jae
andl
inc
pushf
xor
push
cmp
jmp
xor
and
sbb
jp
or
jae
mov
pop
std
add
mov
add
fldenv
push
call
mov
push
mov
mov
mov
in
sahf
adc
cmp
sbb
shlb
mov
mov
test
imull
ret
aas
out
test
xchg
xchg
out
sbb
mov
mov
xchg
popf
aam
aaa
mov
mov
pop
push
les
lahf
lea
cltd
std
add
loope
ljmp
out
lock
pop
mov
jbe
xchg
stos
mov
jns
daa
lea
cs
ds
add
lods
bound
js
jmp
mov
out
ljmp
sub
ret
pop
sub
xchg
sbb
pop
inc
loope
call
std
xlat
dec
lock
sub
pop
lret
hlt
push
jnp
outsb
imulb
sub
out
cmp
jmp
cmp
fstpl
icebp
imul
cwtl
fwait
xor
adc
xor
and
movsb
lea
aam
mov
inc
repnz
fwait
pop
xchg
inc
sbb
test
push
push
add
xchg
incb
adc
jo
call
jle
scas
stc
in
das
mov
out
js
jmp
dec
sbb
pop
jg
iret
cli
mov
mov
cmp
mov
add
mov
and
xor
add
mov
mov
sub
mov
or
mov
and
mov
xor
mov
mov
sub
mov
imul
xor
xor
mov
mov
add
add
mov
movl
movl
movl
movl
movl
movl
mov
xor
mov
imul
mov
lea
mov
and
and
xor
push
pop
div
imul
mov
and
mov
or
add
imul
mov
xor
xor
mov
mov
add
add
jmp
arpl
bound
aam
push
jle
mov
push
sbb
adc
sbb
popa
sbb
push
test
movsb
dec
sub
add
dec
lcall
rorl
test
xchg
xchg
lock
xlat
mov
cld
sub
jp
sbb
mov
sbb
loopne
dec
add
dec
out
ds
pop
and
jo
or
and
out
insl
mov
call
pop
test
and
dec
sbb
dec
push
cmpb
decl
pop
add
dec
fsubrs
or
sbb
dec
xchg
jno
push
adc
push
lret
data16
leave
sbb
jmp
sub
sbb
or
pop
sahf
inc
test
xchg
xor
lea
sub
ror
cmpsb
fsubl
mov
mov
fmuls
movsb
push
sub
and
aad
stc
divl
add
xchg
jg
jne
xor
clc
icebp
push
mov
movsl
int3
sti
jae
daa
adc
sbb
mov
cmp
adc
int3
and
add
lock
icebp
enter
icebp
dec
or
sub
inc
mov
arpl
test
pop
mov
lahf
lods
mov
push
pop
add
push
mov
pop
push
das
and
mov
dec
in
jae
mov
mov
scas
popa
ficoms
in
inc
dec
mov
push
iret
stos
aad
into
pop
xor
notb
pop
inc
out
dec
dec
jg
inc
pushf
in
add
punpckhwd
lret
jbe
das
push
push
ret
pop
xor
xor
push
or
mov
xchg
jae
sahf
popa
repnz
loope
flds
xchg
pop
lods
mov
xchg
arpl
repnz
shrl
les
test
in
lds
xchg
xor
mov
es
jmp
pop
pop
dec
adc
aam
nop
sub
leave
in
std
pop
in
shlb
mov
adc
jl
sub
dec
xchg
bound
jl
pop
clc
enter
sbb
or
out
mov
fwait
les
cmpsl
repnz
push
leave
xor
test
mov
sbb
dec
or
adc
in
push
jns
ret
sbb
mov
test
shlb
mov
sbb
jo
xlat
bound
cwtl
lret
push
popa
out
or
mov
pop
outsb
addr16
cmpsb
mov
and
out
push
jle
lcall
and
fcmovbe
lcall
mov
xchg
fdiv
xlat
mov
jle
imul
in
xor
loopne
sbb
and
xor
dec
cmp
fistpll
int3
jae
mov
das
fstl
call
stos
mov
cli
jge
mov
iret
cwtl
push
sub
jb
fmuls
xchg
daa
mov
in
cmp
vsqrtss
cmp
jne
loop
sbb
frstor
mov
in
imul
les
lock
loop
and
out
or
dec
sbb
sti
sbb
jp
outsb
daa
insl
and
loopne
xchg
inc
push
in
pusha
pop
xchg
sbb
mov
jmp
iret
add
je
ret
je
popf
lahf
cmpsl
cwtl
add
mov
push
es
push
or
mov
out
sbb
push
mov
xchg
je
xchg
push
inc
inc
lods
add
add
jmp
int3
insb
fwait
jo
push
cmp
ret
lahf
jo
add
roll
sbb
adc
sbb
xor
jge
pop
pushf
xchg
fsub
bound
jmp
or
mov
adc
add
in
inc
mov
mov
add
push
mov
inc
ds
mov
outsl
dec
push
ss
push
and
imul
inc
mov
mov
cmpl
and
lret
rcr
xchg
insb
or
mov
mov
or
cmp
xchg
dec
bound
cvttps2pi
mov
loopne
call
mov
lea
cltd
fcomps
sub
lret
jl
xor
mov
push
sub
bound
adc
fimull
fidivrs
fwait
lds
lea
push
and
push
imul
and
cli
out
jb
rcr
mull
mov
daa
xorb
or
clc
into
mov
jg
call
cmpsl
pop
mov
outsl
mov
loopne
jg
mov
cld
push
imul
jl
mov
pop
test
inc
lahf
gs
loop
cmp
fists
ret
call
xor
and
xchg
popf
lret
cmc
xchg
adc
sbb
stos
testl
pop
ja
and
andb
sbb
js
cli
cmpsl
adc
into
xor
jecxz
jmp
cmp
adc
sbb
fwait
sahf
adc
out
fisubl
movsl
mov
aaa
movsl
cltd
cmp
push
adc
add
inc
sub
loopne
xor
jp
mov
fsubrs
bound
ds
mov
mov
xor
jp
dec
inc
mov
fwait
mov
adc
and
mov
mov
mov
clc
jl
out
roll
jne
add
rcrl
jns
aam
stos
push
stos
sbb
movsb
pushf
cmp
sbb
test
xchg
imul
movsl
add
adc
pop
sbb
mov
ret
push
in
cmp
test
pop
xchg
sbb
jg
aas
or
aam
test
fwait
out
imul
lret
mov
outsb
pop
sbb
aam
pop
mov
in
repnz
repz
jno
sbb
aas
aam
ljmp
lock
outsl
in
jl
lea
in
adc
iret
std
sbb
mov
into
push
imul
ret
cmp
inc
pop
je
cmp
mov
xor
pop
icebp
xchg
hlt
ss
push
xchg
jo
in
adc
cld
sbb
and
or
mov
jns
mul
xchg
sarb
scas
cmp
sbb
lret
mov
sti
mov
and
jmp
xor
mov
mov
dec
push
loop
icebp
into
sbb
xorl
mov
and
jmp
shr
dec
nop
loope
pop
sub
sbb
inc
scas
popf
or
jle
addr16
cmp
sub
not
das
or
jecxz
sub
fildll
xchg
in
ss
inc
movsl
pop
fnsave
jecxz
data16
jae
std
adc
adc
out
mov
mov
mov
movl
movl
movl
movl
jmp
jecxz
xchg
sbb
sbb
ret
movsl
mov
faddl
sbb
adc
sbb
adc
xchg
xor
adc
leave
cmp
rol
mov
repz
mov
scas
xlat
push
out
jo
inc
pop
fmull
pop
out
cwtl
shlb
ret
jbe
push
repnz
jp
jle
shl
movsl
cmp
dec
ret
xchg
mov
cmp
mov
sarb
xchg
inc
jmp
icebp
stos
ret
aas
cld
lods
scas
out
notb
insb
pop
and
pop
adc
inc
enter
inc
add
repnz
aas
push
fidivrs
sbb
mov
loope
and
xor
push
pop
arpl
loope
mov
jmp
ja
outsl
mov
mov
xlat
vmovdqu
pusha
pop
sbb
jecxz
push
dec
sbb
jb
loop
mov
cmp
jmp
or
or
daa
sbb
pop
shl
cmp
add
inc
sti
ficompl
call
mov
adc
out
in
nop
inc
cmpsl
js
or
sbb
adc
mov
arpl
fsubrs
dec
shrl
inc
test
jge
mov
mov
fmull
lods
enter
sub
fbld
cli
sub
jmp
cltd
in
std
pop
jge
cmp
cmp
xchg
xchg
pop
mov
mov
popa
xchg
mov
xchg
add
xor
sub
xor
jle
loopne
push
pop
mov
push
pushf
ret
adc
xchg
ljmp
test
mulb
cld
stos
add
push
sub
enter
aad
lret
xor
popf
mov
data16
fdivrs
sbb
jbe
out
push
sahf
out
mov
loopne
les
sub
fldz
cmp
lods
ja
movsb
adc
cmp
xchg
push
arpl
ror
xor
lea
sbb
mov
mov
mov
lcall
inc
jp
dec
pop
jg
add
adc
jns
xor
pop
das
scas
mov
xchg
das
push
jae
or
cmp
mov
sbb
add
ficomps
cmp
mov
negb
or
std
shrl
mov
lret
fwait
ljmp
xchg
ret
push
inc
mov
inc
and
lods
and
sub
sub
sbb
cmp
idivl
test
xchg
mov
pop
out
rolb
jnp
addb
scas
xlat
divb
test
or
cmp
data16
leave
dec
lea
and
mov
stos
mov
push
into
pop
xor
pop
mov
pop
hlt
push
pop
out
cmpsl
pusha
cmp
and
push
rorw
jmp
dec
test
xchg
pop
xchg
ja
xchg
out
hlt
sub
sbb
or
pop
test
cmpsl
or
push
aam
in
sahf
cld
pop
jle
push
icebp
push
pop
cmpsl
outsl
test
repz
sbbl
inc
adc
rcll
and
sbb
rcr
xor
fwait
push
int
jae
mov
push
addr16
mov
dec
stos
gs
jl
xchg
xchg
mov
mov
inc
cmp
add
add
mov
xor
mov
push
adcb
movl
mov
xor
push
pop
div
mov
or
mov
xor
div
jmp
and
popa
into
pop
dec
and
mov
push
cmp
sbb
adc
sbb
pop
push
popa
mov
pop
mov
aad
or
addr16
jnp
fnstsw
sbb
mov
aam
dec
lahf
dec
fdivs
arpl
jnp
dec
cltd
inc
std
mov
loop,pn
lahf
loope
pop
rcrl
mov
movsb
enter
in
mov
ret
daa
int
ret
jne
xchg
pop
inc
cmp
mov
mov
ret
movsl
or
in
dec
adc
nop
lret
jmp
xchg
movsb
mov
xchg
sbb
jbe
jg
mov
inc
adc
lahf
rcl
test
or
ret
aaa
sbb
push
loop
cwtl
cltd
adc
addr16
mov
imul
and
push
mov
xchg
sbb
dec
gs
inc
add
fists
push
jl
gs
incb
or
push
mov
and
pop
out
dec
xchg
loop
add
mov
sub
out
sub
inc
sbb
inc
stc
jg
cmp
cli
adc
or
inc
mov
out
or
sub
push
mov
xor
scas
fwait
cltd
je
dec
out
iret
daa
sub
ss
xchg
sub
mulb
sub
push
lcall
cmp
repz
subl
push
pop
dec
aad
mov
mov
xchg
das
out
int3
mov
in
cmp
jno
pusha
outsb
sub
fxch
pop
sbb
addr16
aam
jmp
pop
jmp
popf
aaa
test
jecxz
jge
mov
faddl
cmp
pop
push
cld
jo
test
sbb
mov
mov
mov
mov
fsubrs
adc
aas
add
push
add
je
ja
cwtl
cmp
out
testl
xor
or
push
int3
out
and
pop
xchg
and
stc
inc
rclb
dec
aas
or
data16
xchg
in
stos
out
mov
cmp
test
adc
mov
scas
push
popf
jl
stos
mov
stos
adc
shll
loop
xor
aam
push
fldt
xchg
sbb
insb
jge
ja
mov
stc
shll
lds
daa
div
sub
aad
sahf
outsb
enter
push
or
add
sbb
push
inc
mov
int
or
jbe
imul
sub
or
imul
push
jecxz
inc
nop
xor
inc
inc
cmpsb
in
lods
lods
adc
jg
jns
inc
jmp
xchg
or
lods
pop
mov
lds
test
aam
or
xor
repnz
popf
enter
mov
xchg
ret
inc
push
push
sti
mov
sub
push
pop
add
jae
sbb
dec
mov
push
mov
outsl
adc
add
pushf
andb
add
xchg
push
lcall
jns
xchg
lea
imul
imul
jg
hlt
pop
jle
aad
test
sub
xor
or
mov
pop
fwait
in
push
add
add
mov
lea
mov
and
and
sub
xor
mov
xor
mov
and
and
or
mov
mov
add
lea
mov
andl
jmp
mov
inc
mov
mov
mov
cmp
je
mov
mov
mov
add
mov
jmp
add
mov
mov
das
or
icebp
xor
sbb
adc
sbb
test
stc
test
sysexit
out
push
push
xor
imull
push
mov
clc
fnsave
out
arpl
push
lods
loopne
cmc
test
pop
and
test
dec
jl
xchg
inc
or
lods
pop
pop
stos
sti
mov
add
cmp
xor
lahf
popf
mov
icebp
rorb
in
mov
addr16
in
enter
mov
or
in
sub
pop
sbb
lock
in
ret
pushaw
lds
repz
mov
lret
ds
popa
outsb
fwait
stos
idivl
mov
aam
je
fldenv
movsb
test
lods
push
sbb
shrl
pop
fs
sub
pop
mov
mov
and
dec
jecxz
loop
pop
out
lods
or
adc
pop
lock
call
adc
movsb
ficoml
rcrl
subl
cmp
inc
in
int
gs
mov
popf
loop
ja
inc
lea
jne
sub
fnstsw
xchg
ret
xor
andl
aaa
dec
xor
arpl
mov
imul
and
outsb
xchg
jg
shrb
gs
js
lret
test
popf
std
xor
fcmovu
and
mov
shr
fwait
cmp
int3
inc
jnp
subb
pop
sub
jecxz
out
mov
or
leave
aam
fimull
repnz
sbb
dec
das
jno
dec
sub
lea
cmp
cmova
enter
pop
and
xchg
movsl
aaa
or
dec
scas
mov
xchg
mov
int3
decb
sbb
test
je
sbb
imul
xor
mov
ficoms
cwtl
lcall
push
inc
mov
and
mov
sub
clc
inc
popf
mov
sub
jnp,pt
test
jecxz
adc
rorb
in
in
xchg
push
loopne
lods
cmp
rcrl
cmc
subb
adc
xchg
int3
and
lret
pushf
loop
mov
push
add
push
stos
push
ss
dec
add
xchg
xor
or
fcompl
sarb
inc
inc
push
repz
fdivrs
ljmp
inc
pop
jno
push
lret
iret
push
adc
mov
mov
aam
lock
mov
in
in
jecxz
inc
rorb
push
stos
inc
and
xchg
jno
mov
push
or
das
add
sbb
push
int3
rol
pop
out
add
push
cmp
lds
push
cld
xor
pop
daa
add
sub
lock
add
cmp
mov
popa
or
outsl
jb
cmp
fadds
sbb
mov
or
ja
adc
pop
adc
out
push
jecxz
sub
or
adcb
imul
lret
jge
out
stos
jnp
dec
outsb
fldt
push
imull
pushf
mov
and
cmpsb
pushf
fnstcw
lods
or
push
pushf
rolb
jne
add
int3
sub
mov
or
xor
jbe
xchg
and
cmc
out
push
gs
inc
mov
decl
hlt
std
inc
test
pushl
jns
movl
movl
movl
lea
mov
mov
movzwl
xor
movzwl
sar
mov
movzwl
xor
movzwl
shl
or
movzwl
mov
mov
mov
mov
xor
jmp
imull
mov
mov
scas
mov
sbb
adc
sbb
addl
pop
xchg
cmp
faddp
or
dec
loopne
mov
stos
imul
jbe
dec
outsb
add
fwait
aas
rorl
mov
stos
gs
cld
mov
push
cmp
popf
popf
sbb
ljmp
mov
lods
lret
adc
arpl
pop
jmp
nop
popl
iret
ss
ds
fs
push
cmp
jno
popf
xchg
outsl
jne
inc
xchg
pusha
rol
fwait
mov
ljmp
repnz
hlt
xchg
aaa
icebp
or
sbb
push
pop
mov
cmp
movl
int3
outsb
jbe
sub
inc
push
popl
gs
pop
inc
das
jo
dec
inc
adcb
xchg
dec
es
jge
mov
rorb
inc
jge
xchg
mov
mov
jl
neg
sub
pop
fucomp
xor
push
and
sub
repz
push
loopne
ljmp
repnz
cmp
iret
dec
imul
mov
pop
pop
pushf
sahf
lret
dec
dec
mov
pop
push
dec
fnstcw
xor
sbb
push
dec
ror
xchg
and
sbb
mov
inc
push
iret
out
adc
add
out
imul
out
fwait
push
mov
sti
lds
xor
mov
cwtl
fcmovnb
adc
push
inc
stos
push
bound
push
ds
mov
outsb
inc
not
push
daa
icebp
mov
jl
insb
adc
je
cmpl
mov
xchg
out
jle
js
je
ja
cmp
xor
jo
adc
in
xor
enter
es
mov
sbb
and
out
sbb
cmp
mov
mov
imul
cmpsl
cmp
and
and
lret
mov
data16
movsl
dec
push
mov
aad
js
stos
mov
gs
into
mov
ss
cmp
daa
push
lock
pushf
push
das
xlat
or
lea
scas
or
dec
push
and
lcall
addr16
out
xchg
js
inc
inc
sub
fldt
jmp
mov
mov
test
mov
push
scas
rcl
cmp
aaa
jbe
sbb
out
sbb
jnp
mov
fwait
lods
push
cmpsb
push
les
add
ja
fs
sbbb
cli
push
sbbl
icebp
mov
in
call
stc
inc
jl
pop
mov
lea
inc
dec
addr16
mov
cld
add
stos
jnp
cmc
lock
test
jge
loop
lret
or
jecxz
add
inc
clc
mov
inc
int
and
pop
pop
mov
mov
adc
xchg
sbb
xor
shrb
shrl
into
mov
and
lock
into
cmpl
mov
xor
xchg
aas
sbb
sti
mov
test
cltd
xchg
jae
loope
das
cwtl
mov
add
out
repnz
cmp
lds
popf
leave
push
stc
cwtl
jg
mov
cwtl
arpl
int
aaa
outsl
mov
loopne
adc
imul
add
dec
movsb
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
movzbl
push
lea
push
call
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
add
mov
mov
cmp
je
mov
mov
movzwl
xor
movzwl
sar
mov
mov
movzwl
xor
movzwl
shl
or
movzwl
mov
mov
mov
movzwl
xor
movzwl
sar
mov
mov
movzwl
xor
movzwl
shl
or
mov
mov
jmp
mov
mov
xor
xor
mov
call
mov
jmp
jecxz
enter
sbb
cltd
mov
in
mov
and
sbb
mov
sbb
out
dec
sbb
sub
movsb
and
inc
xchg
jmp
mov
fcomps
mov
je
adc
adc
xor
mov
sub
out
xchg
lcall
mov
pop
test
mov
pushf
pop
xchg
fistpl
mov
xor
add
xchg
icebp
dec
fisubrl
sbb
dec
nop
aas
dec
and
mov
and
orl
xchg
jge
iret
nop
int
arpl
inc
add
pusha
cmp
repnz
fidivl
test
sub
out
jb
dec
test
mov
movsl
enter
out
xchg
sbb
test
mov
fcomp
pop
jo
roll
xchg
mov
lcall
jae
push
jp
ret
xorl
jne
sti
mov
push
or
sar
xor
hlt
fcmovnb
shlb
stos
movsb
rcr
in
loopne
div
and
sub
int
jg
shll
sahf
dec
dec
hlt
dec
and
ljmp
mov
stos
adc
mov
dec
movsb
imul
sub
push
aam
jmp
xor
stos
mov
or
mov
lret
lea
jge
or
sarl
fcmove
sub
lds
movq
or
js
data16
push
push
aas
sub
rclb
test
ret
pop
sub
dec
add
mull
sub
mov
lds
cs
pop
add
jne
addr16
out
xchg
enter
int3
incb
sti
sbb
sbb
in
divb
shll
cmp
std
jnp
sbb
pop
xchg
icebp
loopne
fidivs
nop
lods
stc
movsl
cmp
pop
xchg
lahf
mov
bound
movsb
xor
shr
fucomi
mov
ficoms
jo
xchg
cmp
xchg
push
push
sub
outsl
push
insl
pop
test
cmp
xor
push
sub
push
sbb
xchg
mov
imul
sbbl
sahf
xchg
nop
xchg
pmaxsw
pop
loop
jl
ja
inc
sbb
jo
cwtl
sar
jne
aaa
push
jno
loope
adc
mov
pop
loop
cli
xchg
flds
xchg
adc
mov
mov
out
bound
clc
fs
sbb
push
addl
fwait
jnp
icebp
ljmp
jg
xchg
inc
push
mov
notl
cli
push
pop
aam
repnz
cld
cvttps2pi
ret
cltd
xchg
outsl
fldt
into
push
pop
xchg
loope
in
add
sub
movsl
mov
adc
xor
mov
jae
cwtl
adc
adc
mov
rcrb
xor
stos
bound
cltd
xorl
icebp
shlb
cmp
cmp
xor
sbb
push
les
xlat
shll
add
add
sub
mov
xchg
xor
mov
dec
fsts
xlat
fs
ja
mov
icebp
add
mov
imul
cli
mov
mov
xor
xor
mov
call
or
or
mov
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
mov
or
je
lea
mov
mov
xor
mov
call
mov
mov
mov
xor
mov
call
or
or
xor
xor
mov
jmp
push
mov
and
daa
rcr
mov
and
sbb
mov
or
pop
fimuls
pop
cmp
adc
js
or
mov
je
xor
jne
fnstenv
je
arpl
lea
or
push
decb
push
dec
inc
imul
jmp
ret
mov
lahf
stos
xchg
lds
imul
mov
pop
push
lds
addr16
je
xor
scas
jecxz
jo
fs
repnz
jo,pn
dec
fnstenv
mov
push
and
in
jno
mov
clc
pop
addl
adc
int3
add
mov
xchg
sub
push
loopne
xchg
lahf
xchg
aam
fdivrl
cmp
enter
mov
loopne
mov
aam
dec
out
mov
out
cmpsb
outsb
xor
stc
arpl
mov
push
bound
inc
movsb
add
insl
dec
lods
mov
push
push
and
jle
sub
ret
daa
push
or
lret
imul
jb
inc
inc
scas
clc
cmp
fldt
out
es
ds
or
jge
mov
sbb
add
call
dec
into
jb
xor
test
and
insl
test
lods
out
jge
pop
leave
fldt
mov
sbb
add
cwtl
xor
and
and
sarb
mull
aad
cltd
insb
ljmp
imul
xlat
ds
fwait
xchg
xchg
xchg
add
jns
aaa
pop
leave
dec
push
sub
enter
outsl
sbb
jle
xchg
cmp
and
leave
xor
mov
jb
adc
insb
xchg
push
mov
xor
ret
imul
mov
inc
inc
push
mov
rclb
and
mov
sub
sahf
int
aaa
aaa
pop
mov
sub
pop
test
push
mov
push
es
add
sbb
cmp
sbb
int3
or
inc
jo
xlat
pop
pop
dec
xor
cmc
cmpsl
call
lock
in
inc
jp
xlat
mov
xchg
fsubrs
nop
jno
in
js
shlb
add
scas
cmp
or
xor
ljmp
pop
xlat
cmp
cwtl
test
lret
gs
xchg
ss
fistpl
jae
daa
negl
fcomp
xor
mov
xor
in
jnp
pop
mov
and
lret
pop
jne
sarb
je
sarl
fld
adc
pop
movsb
stc
xchg
xor
ret
adc
popf
or
mov
iret
push
test
cmp
push
adc
notl
mov
dec
dec
jp
lret
jecxz
add
mov
les
xchg
pusha
repnz
mov
in
add
inc
pop
dec
xchg
and
inc
clc
out
es
cmp
std
addb
xor
mov
ss
and
add
cmpsl
mov
movsl
xchg
int
jge
mov
lds
pop
or
inc
iret
cmp
fcoms
mov
jmp
lahf
pop
in
cmp
dec
movsl
je
inc
adc
and
test
stc
xchg
xlat
test
mov
ljmp
clc
arpl
dec
mov
gs
popa
les
xor
sbb
decl
mov
decl
decl
pushl
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
movsbl
cmp
je
mov
movsbl
jmp
cmp
sub
pop
rcrl
stos
sbb
push
sbb
adc
sbb
jecxz
daa
lods
cltd
pop
pop
mov
jnp
rep
fnstcw
out
inc
mov
xchg
test
scas
adc
pushf
bound
jns
call
movsb
into
mov
mov
lcall
xchg
das
lret
mov
rcrl
cltd
jnp
movsl
pcmpeqb
pushf
in
iret
aaa
jae
popf
es
inc
pop
leave
lods
pop
mov
int
imul
int3
xchg
or
push
xor
arpl
pop
mov
push
pusha
mov
mov
push
sub
loop
xor
data16
sbbb
clc
xchg
pop
dec
lret
movsb
insl
push
mov
xlat
lock
inc
ja
bound
bound
push
xchg
dec
push
sbb
sbb
jnp
mov
or
out
mov
outsb
xor
push
or
mov
jne
test
or
aas
hlt
fdivrs
arpl
mov
jp
icebp
test
insb
and
mov
mov
xor
jle
ror
mov
cmp
loope
mov
cmpsb
adc
pop
dec
mov
or
or
test
cmc
shlb
dec
mov
sbb
je
push
dec
jae
add
mov
out
mov
loopne
das
insb
xor
lcall
rcrb
ljmp
loope
mov
dec
test
movsb
popa
test
xchg
icebp
sbb
fldl
cld
add
add
dec
jp
icebp
mov
lcall
pop
cmp
jno
stos
push
sbb
sti
imul
daa
sbb
mov
xchg
push
sbb
ret
cmpsb
inc
sub
loope
lret
sbbb
out
xor
inc
std
fistps
adc
ja
aam
fmulp
roll
cmp
popf
test
fcmovnb
jle
fmulp
shrb
ror
pop
test
pop
or
test
xor
xchg
inc
in
enter
jbe
pop
push
lock
loop
rcll
pop
pop
inc
je
std
out
xchg
jp
push
popa
pop
imul
sub
xor
inc
mov
cld
ss
scas
xlat
push
pop
jmp
fcoms
call
push
scas
mov
sti
imul
dec
mov
sbb
xlat
cmp
jge
or
push
or
fldt
mov
arpl
cld
mov
xlat
sbb
push
pop
jl
pop
lea
sbb
inc
and
add
pop
cltd
es
hlt
js
arpl
xchg
daa
mov
push
inc
dec
push
add
shlb
xor
dec
push
cmpl
inc
adc
add
add
fnstsw
lock
dec
mov
popf
xchg
xlat
or
jae
dec
sbbl
sub
mov
test
and
mov
mov
inc
jne
arpl
sub
mov
loop
pusha
dec
dec
cli
ds
add
imul
sub
in
push
rcrb
pop
sbb
popa
mov
ret
icebp
pop
fbstp
fs
jo
outsl
cltd
sahf
sbb
scas
xor
and
xchg
pop
cmp
mov
cmp
fs
mov
cld
std
decl
pushl
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
movsbl
cmp
je
jmp
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
movsbl
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
movsbl
cmp
jne
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
jmp
jp
inc
mov
mov
pop
push
popf
jo
or
adc
sbb
sbb
push
xor
stc
xorl
add
cld
test
xor
mov
xor
jns
jnp
frstor
pop
adc
outsb
outsb
btc
outsb
les
mov
je
iret
lods
pop
inc
or
xor
sbb
cld
mov
mov
orb
pushf
cmp
and
ds
push
out
lret
sahf
out
jne
xacquire
mov
in
repz
popl
sbb
in
xor
aam
inc
movsb
mov
fwait
scas
popa
add
cmpsl
jmp
adc
and
jb
in
pop
into
sub
ret
loope
loop
sub
in
mov
loopne
ficoml
ret
and
pop
xor
push
inc
dec
inc
stos
dec
in
orb
mov
cld
iret
faddl
repz
xor
divb
out
enter
aad
xlat
scas
jb
pop
and
add
les
cmp
cmp
xchg
dec
mov
pop
xorl
inc
stos
gs
xchg
fnstenv
scas
jae
push
stos
scas
bnd
test
in
sahf
and
jge
jo
cs
out
mov
dec
jmp
leave
stos
dec
insb
add
dec
push
jge
in
stc
pop
dec
cmpsl
mov
or
cwtl
jl
dec
loopne
shrl
idiv
dec
jo
jmp
add
test
jmp
mov
add
inc
jae
popl
xor
pop
inc
mov
xor
insb
sub
lods
lods
ret
or
adc
push
lahf
mov
push
sub
cmp
dec
xchg
dec
add
adc
xor
inc
mov
idiv
xchg
mov
dec
mov
sti
repz
or
push
inc
sahf
sbb
mov
std
xor
xchg
std
sub
mov
rclb
mov
cmpsl
ret
aam
arpl
mov
dec
adc
xor
push
add
ret
shrl
dec
or
xchg
jp
jbe
inc
cwtl
stc
inc
out
enter
pop
sub
in
xlat
xor
cwtl
sahf
out
bound
cmp
pop
iret
xchg
and
dec
inc
outsb
sbb
insb
jecxz
pop
decl
pop
push
xor
jl
test
xlat
cltd
mov
movsl
repz
movsb
or
in
std
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
add
mov
jmp
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
mov
cmpl
je
mov
mov
movzwl
mov
mov
mov
jmp
jmp
cmpl
jne
xor
jmp
mov
add
mov
movl
cmpl
je
cmpl
je
mov
shl
mov
movl
sub
mov
movl
mov
cmp
je
mov
mov
mov
mov
mov
mov
mov
inc
mov
jmp
movl
push
jmp
mov
mov
ret
dec
push
mov
sub
push
mov
or
jne
sub
mov
mov
mov
mov
sbb
xor
cmpl
mov
mov
jmp
movl
jl
push
pushl
push
push
call
addl
xor
mov
add
sub
mov
adc
mov
mov
mov
sbb
div
dec
mov
not
mov
div
mov
jmp
mov
mov
mov
mov
shr
rcr
shr
rcr
or
jne
div
mov
mull
mov
mov
mul
add
jb
cmp
ja
jb
cmp
jbe
dec
xor
mov
pop
pop
ret
sbbl
subl
movl
cmpl
movl
je
mov
mov
adc
add
mov
mov
pop
pop
pop
leave
ret
cmp
movl
jae
movl
cmp
movl
jae
subl
shld
movl
shl
ret
addl
mov
xorl
xor
and
shl
ret
xor
xor
ret
add
add
add
add
add
add
nop
add
hlt
addl
movsb
xchg
add
add
addl
adc
add
int3
test
add
add
call
add
add
add
add
xchg
add
in
test
add
add
dec
xchg
add
add
add
insb
outsl
outsl
add
add
addr16
popa
je
jb
popa
je
jb
popa
je
jb
popa
je
jb
popa
je
jb
popa
je
jb
popa
je
jb
popa
je
jb
popa
je
jb
popa
je
add
insb
insb
push
gs
insb
push
gs
insb
push
gs
insb
push
gs
insb
push
gs
insb
push
gs
insb
add
add
aam
inc
add
add
jbe
add
push
add
add
push
add
add
push
add
add
push
add
add
push
add
add
push
add
add
push
add
add
push
add
add
in
daa
inc
add
daa
inc
add
push
mov
movsb
popf
movsb
jno
xchg
movsb
or
movsb
sbb
movsb
roll
adc
movsb
popf
movsb
jno
xchg
movsb
or
movsb
xor
movsb
mov
in
xchg
movsb
adc
movsb
popf
movsb
sbb
movsb
fwait
movsb
xchg
sub
cs
push
adc
movsb
fwait
movsb
add
movsb
sbb
movsb
shll
shrl
or
push
pop
outsb
adc
movsb
fwait
movsb
add
movsb
xor
movsb
andl
imull
dec
adc
movsb
fwait
movsb
jae
popf
movsb
sbb
movsb
fwait
movsb
andl
testl
movsb
aaa
movsb
fwait
movsb
jae
popf
movsb
pop
movsb
xchg
movsb
push
movsb
mov
inc
rorl
imulb
xchg
movsb
aaa
movsb
fwait
movsb
jae
popf
movsb
cmp
movsb
fwait
movsb
xchg
mov
mov
out
adc
xchg
movsb
aaa
movsb
fwait
movsb
jae
popf
movsb
cmp
movsb
fwait
movsb
andl
imul
push
into
adc
xchg
movsb
cmp
movsb
popf
movsb
jnp
xchg
movsb
fwait
movsb
xchg
movsb
shl
shr
lock
test
cs
push
push
adc
xchg
movsb
adc
movsb
cmp
movsb
fwait
movsb
lea
or
push
push
outsb
adc
xchg
movsb
add
pop
and
add
inc
add
inc
add
daa
inc
add
add
add
jg
add
add
daa
inc
add
inc
add
add
daa
inc
add
lret
push
movsb
scas
or
movsb
insb
es
add
inc
add
daa
inc
add
inc
add
add
inc
add
es
add
inc
add
inc
out
aam
inc
add
es
add
inc
add
loopne
jbe
pop
cmpsb
add
inc
add
rcl
pop
and
add
add
jno
cvtdq2ps
jbe
cmpsl
mov
xchg
test
es
add
fiadds
movsb
cmpsb
fiaddl
movsb
mov
fiaddl
movsb
mov
fiaddl
movsb
mov
push
movsb
mov
push
movsb
mov
push
movsb
out
fiaddl
movsb
decl
adc
push
and
add
sub
add
add
scas
lcall
das
dec
add
dec
and
add
inc
sbb
hlt
clc
sarb
sub
jle
add
add
add
add
lods
inc
add
push
movsb
jg
inc
movsb
push
movsb
inc
movsb
std
movsb
jmp
movsb
push
movsb
dec
movsb
std
movsb
jmp
movsb
push
movsb
jg
std
movsb
jmp
movsb
dec
movsb
inc
movsb
jne
pop
movsb
jnp
dec
movsb
fwait
movsb
xor
xor
xor
xor
inc
xor
xor
xor
xor
xor
inc
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
push
shlb
rcll
into
xchg
dec
xor
sbb
push
je,pn
mov
imul
leave
daa
dec
out
pushf
mov
dec
xchg
lock
inc
or
js
popa
pop
jecxz
movb
cs
aas
inc
leave
testb
jl
xchg
inc
add
add
add
inc
add
fbld
add
add
je
gs
jo
jo
outsl
insb
je
jae
outsl
popa
add
add
add
add
inc
insl
jns
outsl
js
jns
jb
popa
je
jne
gs
jae
gs
add
add
add
add
inc
jne
jp
outsb
add
add
imul
insb
outsl
add
push
popa
arpl
imul
add
outsb
imul
add
add
add
add
insb
insb
gs
add
add
add
gs
data16
jae
outsb
fs
popa
insb
imul
js
imul
add
add
addr16
insl
ja
jns
popa
jns
outsb
popa
bound
insl
outsl
jb
add
add
je
dec
add
add
add
add
addl
add
loopne
add
mov
add
xchg
in
jno
iret
jbe
or
cwtl
int
std
pop
fsubrs
dec
xor
stc
inc
adc
dec
sbb
mov
jns
dec
sbb
xchg
cmp
in
jno
iret
jbe
or
int
std
pop
jns
pop
xor
stc
inc
icebp
das
int
mov
mov
jns
xchg
lret
rolb
jno
jbe
or
int
std
pop
fdivs
int
stc
inc
icebp
test
mov
int
mov
addl
rolb
jno
jbe
or
cwtl
int
std
pop
ret
cmp
xchg
stc
inc
adc
test
ret
xchg
aad
lds
iret
jbe
or
int
std
pop
pop
insb
cmp
stc
inc
icebp
push
int
mov
mov
jns
test
lcall
jbe
xorl
sbb
and
int
adc
mov
add
add
lods
clc
icebp
jo
jge
aad
clc
icebp
jo
adc
incl
jo
jo
jo
xor
cwtl
add
add
xchg
or
addb
jecxz
hlt
scas
rolb
sub
iret
pop
iret
push
out
int
adc
out
sub
or
rolb
subb
sub
cmc
sub
in
aad
add
mov
fcmovnbe
out
pushf
xchg
test
fs
mov
iret
int3
call
jno
imul
int
std
xor
movsl
das
pop
push
or
sub
xchg
iret
les
addb
add
addl
adc
inc
jns
fldlg2
es
or
add
mov
add
addl
jns
insl
and
push
add
test
push
add
push
mov
test
lret
addb
in
outsl
rcl
jge
outsl
xchg
addb
sahf
mov
jno
popa
mov
addb
push
jge
push
xchg
addb
jge
push
xchg
addb
rorb
jo
std
xor
movsl
inc
xor
or
addl
addl
int
popf
aam
shlb
or
xchg
aam
int
icebp
int
xchg
or
or
or
pushf
stos
sahf
popa
mov
mov
mov
roll
int
or
adc
int
mov
lods
xchg
lret
rorb
in
push
int
or
daa
addl
or
mov
gs
addl
xchg
or
addb
xor
int
mov
int
xor
xor
lea
das
add
addb
int
mov
cli
test
int
jge
xacquire
insl
insb
shrb
outsl
lods
xchg
inc
addl
lea
cli
test
mov
and
xchg
mov
dec
ja
pop
rcll
int
fidivl
jecxz
xchg
or
in
inc
add
test
jecxz
jecxz
movsl
pop
cmpsb
lods
addb
lods
mov
mov
addb
shll
test
add
leave
int
or
cmpb
movsl
jecxz
mov
in
in
addb
movsl
int
mov
rcll
leave
xor
pop
jbe
jnp
int
xor
movsl
int
cmp
inc
inc
add
jle
clc
or
std
das
pop
adc
cmp
or
add
mov
xor
les
int
sub
stc
xor
sbb
inc
int
inc
int
std
xor
xor
pusha
lret
arpl
test
xor
in
popf
adc
addb
shl
mov
and
mov
jbe
shrl
lods
or
stc
test
int
jne
pop
insl
shl
test
in
xchg
pop
insl
xchg
int
jge
les
xor
les
adc
addb
mov
shll
xor
ja
lret
je
pop
shl
mov
xchg
xor
int
das
mov
push
das
rcll
pop
mov
ja
int
pop
orb
jmp
mov
insl
iret
les
test
mov
xor
mov
insl
add
or
cwtl
int
mov
int
int
jns
mov
sub
add
cwtl
int
jns
test
add
mov
jns
xchg
cmp
add
add
inc
addl
leave
jbe
inc
and
or
int
stc
int
stc
pop
cwtl
lcall
ljmp
cmp
sarl
jbe
int
stc
int
stc
cmp
sarl
ljmp
int
stc
int
stc
cmp
sarl
ljmp
int
stc
int
stc
cmp
sarl
ljmp
leave
jbe
dec
and
mov
and
sarb
jbe
or
sarb
ror
jbe
jo
addb
addb
stc
cmp
cmp
sarl
push
rorb
jbe
int
stc
int
stc
cmp
cmp
sarl
push
rorb
jbe
leave
jbe
arpl
lods
pop
addb
addb
add
iret
push
xchg
incl
add
add
lea
xchg
fcmove
jbe
dec
insb
addb
stc
cmp
sarl
cmp
shl
sub
or
int
stc
int
stc
add
cmc
cmpb
sarl
repnz
or
mov
sbb
addb
push
or
int
dec
or
int
mov
cmc
or
rolb
mov
in
or
push
addl
lea
or
pop
addl
stc
int
stc
cmp
cltd
shr
xchg
shr
sub
inc
jge
add
int
mov
add
mov
jbe
int
xor
addb
int
adc
adc
add
int
mov
mov
int
xchg
rolb
bound
jno
cmp
push
push
add
add
cmpsl
aad
leave
push
pop
add
add
adc
add
mov
push
insb
add
add
iret
outsb
add
add
insl
leave
push
sub
add
push
cmpsl
aad
leave
push
xor
add
push
xor
cmp
add
mov
push
inc
add
add
iret
addr16
add
add
jbe
int
adc
mov
int
mov
add
addb
mov
leave
jbe
mov
cmp
leave
jbe
xlat
sbb
push
les
add
push
cmpsl
aad
leave
push
nop
add
add
xlat
inc
leave
push
aam
add
cmp
jge
push
faddl
add
mov
shll
add
xlat
sbb
push
pushf
add
add
cmpsl
aad
leave
push
movsb
add
add
xlat
inc
leave
push
lods
add
add
dec
push
jge
push
mov
add
mov
shll
add
ret
sbb
jo
jbe
add
int
stc
int
stc
cmp
cmp
shl
sub
mov
lea
testb
int
mov
lds
psrlq
sub
mov
lea
insl
inc
shrl
or
addl
int
mov
rclb
addl
add
addb
jo
cwtl
xor
lea
addb
int
adc
mov
insl
iret
pop
pushf
add
add
jo
jbe
int
inc
addl
adc
pop
adc
mov
insl
iret
pop
les
add
mov
jo
jbe
int
inc
addl
mov
pop
adc
mov
insl
iret
pop
push
add
add
jo
jbe
int
inc
addl
pop
orb
xor
push
cmp
sahf
clc
add
shrb
pop
shlb
xchg
xor
int
pop
add
mov
adc
int
mov
pop
adc
mov
insl
iret
xchg
add
jo
jbe
int
cmp
push
add
in
test
or
add
pop
sub
sub
lea
ljmp
sarl
push
ror
pop
cmc
incl
add
jo
jbe
int
stc
int
mov
lds
lock
push
ror
pop
xchg
incl
add
jo
xchg
or
xchg
stc
cmp
jmp
shr
sub
inc
jge
mov
jbe
addl
cmp
sarl
repnz
xchg
or
int
cmp
int
mov
lea
sarl
push
roll
xchg
int
mov
lea
shl
sub
mov
lea
insl
inc
shrl
pop
push
incl
add
ljmp
lea
jge
xor
mov
jbe
jo
stc
jl
orb
jne
sbb
jbe
int
mov
xchg
mov
or
cltd
shr
xchg
shr
sub
push
mov
jbe
int
stc
cmp
cmp
shl
sub
mov
lea
shrl
add
int
stc
int
stc
cmp
cmp
shl
sub
mov
std
inc
shrl
add
int
stc
int
stc
cmp
cmp
sarl
push
shr
adc
lea
or
cltd
shr
xchg
shr
sub
xchg
int
std
inc
roll
or
int
jne
jbe
ret
dec
and
leave
jbe
inc
and
int
inc
cmp
cmp
sarl
push
rorl
jbe
int
inc
int
inc
cmp
cmp
sarl
push
rorl
jbe
leave
jbe
dec
and
ret
xor
lea
lds
psrlq
sub
mov
lea
push
xchg
addb
cmp
jns
or
lods
sub
jmp
push
jge
jbe
xor
cmp
clc
add
jbe
int
sbb
lds
psrlq
sub
mov
lea
int
sbb
lds
psrlq
push
rorl
jbe
int
cmp
lds
psrlq
push
ror
lea
jbe
int
inc
int
inc
cmp
cmp
shl
sub
mov
lea
pusha
xchg
addb
or
jbe
or
xchg
or
pop
inc
and
leave
jbe
cmp
xchg
and
int
xchg
int
xchg
cmp
cmp
sarl
push
rorl
jbe
int
jmp
addl
add
and
push
xchg
add
add
and
insl
int
icebp
int
icebp
cmp
cmp
sarl
push
ror
lea
rcl
int
insl
lret
or
int
int
icebp
int
icebp
cmp
cmp
shl
sub
mov
lea
rcl
int
adc
or
cltd
shr
xchg
shr
sub
xchg
int
insl
das
pop
dec
mov
push
jo
add
int
jo
add
cmp
cmp
ljmp
pop
lea
test
test
xchg
icebp
cmp
cltd
shr
sub
jmp
push
adc
xchg
jge
rcll
int
insl
or
icebp
int
icebp
cmp
cmp
sarl
push
ror
lea
rcl
int
insl
lret
or
int
int
icebp
int
icebp
cmp
sarl
repnz
int
jge
rcl
int
pop
int
pop
cmp
cltd
shr
xchg
shr
sub
xchg
int
insl
das
pop
dec
mov
push
xchg
add
add
pop
xchg
add
add
lds
cltd
sarl
push
rolb
test
test
test
xchg
icebp
cmp
cltd
shr
sub
jmp
push
adc
xchg
jge
rcll
int
insl
or
xor
sub
mov
lea
xchg
pop
cmp
cltd
shr
xchg
shr
sub
das
rcl
xchg
or
int
jge
lea
incl
add
jbe
int
pop
cmp
shl
sub
xchg
push
ror
lea
lea
xchg
push
ror
lea
sub
or
int
popf
int
popf
cmp
shl
sub
xchg
push
ror
lea
or
jmp
cmp
adc
xchg
in
sbb
jbe
int
popf
cmp
cmp
sarl
push
roll
push
int
popf
int
popf
cmp
sarl
repnz
int
lods
xor
jbe
int
popf
cmp
cmp
mov
xchg
push
das
rcl
inc
shrl
pop
adc
add
int
stc
int
stc
int
std
or
int
mov
lea
or
jmp
cmp
addb
jno
lea
xchg
cmp
cltd
shr
xchg
shr
sub
jno
stc
int
stc
add
xor
shr
xchg
shr
sub
jno
jo
int
stc
int
stc
cmp
cltd
shr
xchg
shr
sub
or
inc
jge
add
int
stc
in
int
or
push
cmpsb
lods
int
lods
shr
xchg
cmp
lods
sub
int
jne
dec
orl
mov
lea
or
cltd
shr
sub
jmp
push
adc
xchg
mov
jge
jbe
cmp
add
std
add
std
shr
sub
leave
int
std
int
std
shr
xchg
shr
sub
cmp
inc
rcl
mov
lea
add
addl
shr
sub
jno
stc
int
stc
cmp
cltd
shr
xchg
shr
sub
jno
jne
jo
int
or
int
xor
jbe
cmp
add
test
xor
jbe
int
mov
jbe
int
mov
jns
aad
lods
sub
repz
push
ror
xchg
jne
test
jbe
add
test
xlat
int
std
cmp
add
test
xor
jbe
int
mov
jbe
int
mov
jns
aad
lods
sub
repz
push
ror
xchg
jne
test
jbe
add
test
xlat
int
jne
jbe
int
mov
lea
shl
sub
mov
stc
or
leave
jbe
imul
imul
gs
into
and
addb
sarl
lds
jbe
rol
lods
xchg
or
int
cmp
lods
sub
lods
lret
int3
das
imul
lret
inc
rcl
jle
jbe
int
mov
jbe
int
mov
jns
or
lods
sub
jmp
push
jge
jbe
cmp
lods
sub
lods
cmp
xchg
jbe
add
std
add
std
shr
sub
lock
and
jbe
in
and
jbe
int
stc
cmp
cmp
sarl
push
ror
stc
int
stc
cmp
cltd
shr
xchg
shr
sub
inc
jge
add
int
or
out
leave
jbe
mov
xchg
and
dec
mov
lods
imul
and
xor
jbe
int
lods
int
lods
cmp
jmp
cmp
adc
lea
or
jmp
cmp
addb
jno
lea
xchg
cmp
cltd
shr
xchg
shr
sub
jno
lea
or
cltd
shr
xchg
shr
sub
jno
jo
or
int
mov
lea
or
jmp
cmp
addb
jno
lea
or
cltd
shr
xchg
shr
sub
jno
lea
cmp
shr
xchg
shr
sub
jno
jo
int
mov
jbe
int
mov
or
jns
jmp
shrl
jbe
inc
jge
add
int
mov
xchg
mov
or
cltd
shr
xchg
shr
sub
inc
lea
addb
and
add
mov
lea
add
lea
jmp
add
scas
or
aaa
sbb
add
addb
add
add
add
jno
cmp
add
add
lods
jno
lea
lea
shll
jno
mov
or
int
mov
lea
add
addl
shr
sub
jno
lea
or
cltd
shr
xchg
shr
sub
jno
add
int
rcl
insl
xchg
cmp
inc
leave
int
mov
lea
addb
cmp
cltd
shr
xchg
shr
sub
jno
lea
or
cltd
shr
xchg
shr
sub
jno
jne
jo
int
lods
or
int
cmp
cmp
or
cltd
shr
xchg
shr
sub
jno
lea
or
cltd
shr
xchg
shr
sub
jno
lods
add
int
std
or
int
jne
out
or
leave
jbe
inc
and
int
push
cmp
or
lods
sub
jmp
push
rorl
jbe
int
push
int
push
cmp
or
lods
sub
jmp
push
rorl
jbe
leave
jbe
dec
and
ret
xor
lea
jns
or
jmp
shrl
lea
push
xchg
addb
xchg
int
inc
cmp
cmp
sarl
push
jge
jbe
xor
cmp
clc
add
jbe
int
lods
int
lods
cmp
or
jmp
shrl
lea
int
lods
int
lods
cmp
or
lods
sub
jmp
push
rorl
jbe
int
xchg
int
xchg
cmp
or
lods
sub
jmp
push
ror
lea
jbe
int
push
int
push
cmp
or
jmp
shrl
lea
pusha
xchg
addb
or
jbe
or
cmp
inc
and
leave
jbe
cmp
xchg
and
int
cmp
jns
or
lods
sub
jmp
push
rorl
jbe
int
jmp
addl
add
and
push
jl
add
mull
xchg
int
icebp
int
icebp
cmp
or
lods
sub
jmp
push
ror
lea
rcl
int
pop
lret
or
int
int
icebp
int
icebp
cmp
jns
jmp
shrl
lea
rcl
int
gs
cmp
cmp
shl
sub
repz
push
adc
das
pop
dec
mov
push
mov
add
int
mov
add
cmp
aad
lods
sub
repz
push
rolb
loope
jge
loope
insl
lret
int
icebp
int
icebp
cmp
cmp
shl
xchg
shl
sub
int
jge
rcll
int
pop
or
icebp
int
icebp
cmp
or
lods
sub
jmp
push
ror
lea
rcl
int
pop
lret
or
int
int
icebp
int
icebp
cmp
lods
sub
or
jmp
push
ror
lea
rcl
int
insl
int
insl
cmp
cmp
shl
sub
repz
push
adc
das
pop
dec
mov
push
jl
add
int
jl
add
cmp
aad
lods
sub
repz
push
rolb
loope
jge
loope
insl
lret
int
icebp
int
icebp
cmp
cmp
shl
xchg
shl
sub
int
jge
rcll
int
pop
or
and
or
jns
jmp
shrl
lea
xchg
insl
cmp
cmp
shl
sub
repz
push
adc
rcl
xchg
or
int
jge
lea
incl
add
jbe
int
insl
cmp
jmp
cmp
lods
sub
int
or
lea
sub
int
cmp
xchg
push
rorl
jbe
int
popf
int
popf
cmp
jmp
cmp
lods
sub
int
popf
int
popf
cmp
shl
sub
aad
repz
push
adc
xchg
in
sbb
jbe
int
popf
cmp
or
lods
sub
jmp
push
roll
inc
int
popf
int
popf
cmp
lods
sub
or
jmp
push
ror
lea
popf
int
popf
cmp
aad
repz
shrl
xchg
inc
das
rcl
inc
shrl
pop
adc
add
int
mov
dec
iret
jbe
add
mov
jbe
int
xchg
addl
icebp
addl
jne
test
addb
stc
int
stc
cmp
cmp
shl
sub
mov
lea
rcl
push
int
mov
lea
add
addl
shr
sub
jno
stc
int
stc
cmp
cltd
shr
xchg
shr
sub
jno
jne
jo
stos
test
lret
rorb
add
and
int
int
sub
pop
subb
dec
addl
addb
das
add
int
or
das
add
add
int3
addb
addb
add
int
and
mov
or
xor
shrb
mov
mov
mov
das
add
iret
jl
pop
or
add
or
add
cmc
subb
xchg
das
mov
mov
mov
in
push
push
aam
int
add
stc
subb
xchg
mov
sahf
dec
xchg
aam
iret
ficoms
out
int
std
int
push
add
xchg
cmpsb
mov
and
das
mov
sahf
dec
add
add
std
mov
sbb
mov
mov
add
add
mov
pop
out
subb
jo
das
mov
adc
mov
pop
xchg
adc
or
arpl
insl
insb
in
xchg
cmp
lret
lds
sub
jbe
add
xor
fstpl
add
inc
pop
pushf
test
insl
insb
in
fmul
insb
faddl
and
jo
int
adc
fcompl
lea
std
inc
clc
jnp
or
std
or
fsub
inc
pushf
adc
xchg
mov
int
iret
push
ror
push
add
ds
mov
out
inc
stc
fdivs
int
dec
int
in
popf
inc
cld
ja
int
in
mov
out
or
adc
not
dec
int
stc
dec
or
sbbb
cmp
test
lret
rorb
add
push
pop
cwtl
pop
dec
and
leave
jbe
inc
and
int
std
lcall
psrlq
xchg
stos
cmp
shl
sub
or
int
std
int
std
int
std
int
std
int
std
int
std
int
std
int
std
int
std
leave
jbe
fadd
loope
int
std
int
std
cmp
cmp
shl
sub
jmp
push
or
cmpsb
dec
int
sub
push
das
add
int
std
int
std
cmp
cmp
shr
xchg
shl
sub
inc
adc
add
int
add
std
int
std
cmp
xchg
shl
sub
inc
adc
add
xchg
int
cmp
shl
xchg
shl
sub
or
inc
icebp
aam
int
std
int
std
cmp
cmp
ljmp
int
adc
adc
test
xor
jbe
int
std
cmp
cmp
ljmp
int
adc
adc
je
xor
add
int
std
int
std
int
std
int
std
cmp
cmp
in
xchg
push
popf
int
adc
adc
ror
jl
xchg
int
std
int
std
cmp
cmp
shr
xchg
shr
sub
int
std
or
lea
cltd
cmp
shl
sub
repz
push
jecxz
lea
xchg
int
std
int
std
cmp
cmp
shr
xchg
shr
sub
xchg
jbe
popa
and
or
in
int
dec
int
adc
xor
jbe
add
in
int
adc
dec
leave
jbe
popl
dec
pop
xchg
xchg
std
cmp
cmp
shr
xchg
shr
sub
or
inc
jge
pop
int
stc
int
stc
cmp
lock
sub
mov
lea
fnstcw
psrlq
sub
int
adc
xchg
push
jecxz
rcl
bound
jo
int
std
int
std
cmp
lock
push
roll
mov
and
jbe
int
popf
cmp
cmp
mov
push
jge
fldt
pop
xchg
add
add
jbe
int
std
cmp
lock
push
roll
mov
and
jbe
int
stc
cmp
lock
push
roll
addl
leave
jbe
fdivr
sbb
int
std
int
std
cmp
xchg
shrl
sbb
std
int
std
cmp
lock
push
rorl
jbe
int
std
int
std
cmp
lock
push
rorl
jbe
int
std
int
std
cmp
cmp
shrl
push
jge
jbe
inc
jge
xchg
test
jbe
int
sbb
jbe
int
std
cmp
lock
sub
mov
in
inc
rcl
push
int
std
int
std
cmp
cmp
repnz
mov
in
shr
sub
aam
int
in
int
dec
int
adc
lret
jno
mov
jo
in
push
int
cmc
xchg
int
dec
int
adc
xchg
jo
mov
jno
or
int
std
int
std
cmp
lock
sub
mov
cmc
inc
ror
jbe
int
stc
xor
jns
lock
push
roll
cmp
cmp
repnz
mov
cmc
das
rcl
int
lods
or
stc
cmp
lock
push
roll
int
std
cmp
cmp
repnz
mov
lea
push
or
add
int
adc
lea
insb
sarl
test
int
icebp
push
dec
and
add
int
std
int
std
cmp
lock
push
rcrl
mov
stc
int
stc
in
xchg
jbe
int
std
cmp
cmp
shl
sub
mov
arpl
rorb
add
xor
jbe
dec
and
inc
and
or
cwtl
int
int
std
int
std
sar
shll
xchg
cltd
shr
sub
mov
xchg
mov
das
add
int
mov
xchg
mov
xchg
cmc
leave
jbe
popa
and
int
stc
cmp
rcl
mov
xchg
std
int
std
cmp
cmp
shr
sub
repz
push
fxch
out
pop
xchg
leave
fsubrl
add
int
cmc
int
mov
or
mov
out
xor
pop
int
std
cmp
cmp
in
push
cld
or
add
int
std
int
std
cmp
cmp
shl
xchg
shr
sub
or
mov
xchg
out
cmp
cmp
shl
xchg
shr
sub
jmp
addb
std
add
cmp
sarl
push
cltd
iret
ja
jecxz
inc
cltd
das
add
addb
jo
or
mov
mov
das
addb
in
xchg
int
in
xchg
repz
mov
mov
adc
dec
and
or
int
in
cmp
add
call
repz
sarl
xchg
mov
xchg
in
int
dec
int
dec
cmp
add
call
mov
push
cltd
int
mov
int
dec
int
dec
cmp
add
call
mov
push
cltd
int
mov
int
in
int
movsl
addl
mov
push
xchg
add
add
stc
int
stc
cmp
add
call
mov
push
cltd
int
adc
out
inc
aam
in
sub
xchg
std
int
std
cmp
add
call
repz
sarl
cltd
int
test
das
push
test
add
arpl
jbe
cmp
int
lods
add
ljmp
std
cmp
int
std
cmp
shl
sub
mov
lret
rorb
adc
xchg
addb
and
inc
and
int
std
cwtl
lcall
xor
xchg
mov
sub
or
int
std
int
std
cmp
mov
repnz
or
int
and
jbe
int
in
cmp
or
adc
dec
mov
cmc
int
cmc
cmp
or
adc
dec
lahf
xchg
lea
cmp
or
adc
imul
mov
lea
mov
jbe
dec
and
hlt
mov
insl
das
add
int
dec
push
insl
das
add
int
sbb
insl
das
add
int
and
jbe
int
mov
mov
addb
addl
cmp
mov
repnz
or
int
std
int
std
int
mov
lea
outsb
jo
lea
insl
das
add
leave
jbe
dec
and
int
xchg
pop
int
xchg
cmp
loop
mov
push
popf
or
int
std
int
sub
xor
bound
int
std
int
std
int
and
sbb
xchg
dec
inc
fst
push
cmc
int
adc
lods
int
cmc
cmp
add
call
jmp
shr
sub
int
dec
bound
xchg
jo
add
int
dec
int
xchg
int
jo
jge
xchg
jo
dec
xchg
int
xor
sbb
xchg
xchg
add
mov
or
pop
fs
das
mov
xor
jbe
int
std
int
std
cmp
add
shl
sub
mov
mov
and
jge
add
int
std
int
std
cmp
add
shl
sub
mov
jbe
int
stc
int
stc
add
cmp
repnz
mov
mov
pop
lea
addb
mov
lea
xchg
lea
or
jl
icebp
aam
clc
icebp
sub
xchg
in
xchg
int
jo
outsb
test
test
int
mov
lea
xchg
std
cmp
add
call
jmp
shr
sub
pop
lea
mov
popf
int
test
lds
add
sbb
stc
int
stc
cmp
shr
xchg
add
incl
push
adc
and
jbe
int
stc
int
stc
add
cmp
repnz
mov
lea
mov
pop
lea
add
int
and
sbb
cmp
lea
int
adc
lods
int
adc
sti
call
jmp
shr
sub
int
dec
bound
xchg
xchg
pop
add
push
insl
das
add
int
and
or
or
cmp
add
call
jmp
shrl
add
int
std
int
std
cmp
add
sarl
push
rorl
jbe
pop
push
jl
or
leave
jbe
sbb
shr
lahf
xchg
jbe
dec
and
xchg
iret
inc
shl
xchg
adc
scas
cmp
lea
add
cli
xchg
xchg
add
or
mov
jbe
or
iret
outsb
std
iret
jno
or
or
leave
push
jo
add
sub
pushf
add
add
pop
movsb
add
add
push
lods
add
add
xchg
add
sbb
les
add
popa
lahf
xchg
add
sbb
aam
add
call
iret
faddl
add
leave
push
in
add
mov
add
jbe
and
or
jbe
inc
lahf
xchg
jbe
pusha
lahf
xchg
and
int3
push
jo
add
shr
xchg
add
scas
or
test
add
sbb
addl
add
int
adc
inc
add
add
add
or
iret
jbe
jo
or
push
int
jge
icebp
int
std
int
std
cmp
add
sarl
push
rorl
jbe
int
std
int
std
cmp
add
call
lods
sub
jmp
push
jge
jbe
inc
rcl
xchg
or
in
das
int
int
jne
jbe
int
mov
int
sbb
mov
addl
addl
int
sub
xchg
dec
int
cmp
xor
jo
int
stc
int
stc
cmp
add
sarl
push
rorl
jbe
int
and
pop
mov
push
insl
das
add
add
and
lock
mov
push
insl
das
add
int
and
lock
mov
push
insl
das
add
lcall
push
insl
das
add
int
and
sbb
sbb
or
addl
int
dec
add
and
or
or
cmp
add
call
jmp
shrl
dec
and
int
mov
jbe
shr
xchg
adc
scas
cmp
sbb
insb
cmp
lea
lds
outsb
adc
jbe
leave
addb
sub
pushf
test
jbe
int
sub
outsb
mov
jbe
int
sub
outsb
dec
in
adc
jbe
int
cmp
lea
lds
outsb
adc
jbe
add
or
icebp
addl
cmp
int
arpl
xchg
cmp
test
shlb
xchg
int
jno
das
mov
mov
mov
leave
jbe
dec
and
push
lret
aam
popa
shll
xchg
out
xchg
pop
out
orb
mov
pop
out
cmpb
std
int
std
cmp
add
call
jmp
in
xchg
push
cld
add
std
add
test
sub
adc
dec
and
int
std
int
std
cmp
add
call
jmp
shr
sub
inc
stc
xorb
rorb
add
push
leave
jbe
mov
jbe
xchg
addb
addb
test
lods
addb
addb
addb
addb
addb
addb
addb
mov
stc
cmp
clc
add
repnz
and
movb
addb
or
cmc
icebp
lea
jnp
addb
addb
std
ss
pushf
addb
int
push
jp
addb
int
std
xchg
int
std
xchg
xor
jbe
int
in
sbb
cmpb
int
mov
fadds
jbe
xchg
popa
fists
xor
xchg
int
xor
out
adc
mov
subb
int
xchg
adc
mov
addb
clc
int
icebp
push
out
addb
icebp
adc
pop
push
addb
add
add
adcb
pop
cwtl
lcall
or
adc
addb
addb
addb
addb
addb
addb
addb
addb
addb
addb
addb
addb
addb
addb
movsl
dec
bound
addb
dec
pop
and
pop
xchg
mov
stc
xor
jbe
int
stc
sub
int
cmc
dec
inc
outsl
addb
xor
int
in
push
sarb
fisubrl
ret
add
clc
test
push
addb
int
mov
leave
das
sarl
fisttpl
xchg
mov
popa
addb
push
addb
addb
addb
addb
pop
lcall
xchg
lods
int
mov
int
popf
xor
int
xchg
cmpsb
push
addb
mov
ret
jbe
int
icebp
int
or
int
xchg
xor
inc
test
inc
or
rol
addb
cmp
clc
hlt
int
gs
ss
push
addb
add
xchg
jbe
int
stc
sub
int
cmc
dec
inc
outsl
addb
xor
int
in
push
sarb
hlt
int
dec
xor
int
mov
leave
das
rol
int
xor
das
pop
pop
add
add
mov
in
jo
jbe
xchg
aaa
ficoms
pop
mov
jbe
leave
jbe
mov
jbe
leave
jbe
fidivs
ficoms
or
pop
leave
jbe
scas
aaa
ficoms
or
cwtl
lcall
adc
jbe
cmp
cmp
pop
dec
and
out
ficoms
jp
jbe
int
or
iret
xchg
addl
push
ror
je
ror
xor
pushf
test
inc
loop
shr
xchg
int
int
test
insl
adc
cmpsb
mov
or
xchg
in
inc
jbe
das
or
jbe
add
mov
int
stc
push
insl
aam
cmp
out
int
mov
fs
xchg
mov
lret
xchg
add
xchg
stc
xchg
lret
int
lods
or
lret
int
stc
xchg
int
mov
adc
int
cmc
insb
add
std
sarl
push
sarb
rorl
jbe
push
cmc
int
cmc
add
call
repz
shrl
xchg
stc
inc
rolb
int
adc
xchg
stc
int
mov
test
int
stc
iret
adc
int
dec
shl
sub
cmp
or
push
adc
xchg
adc
call
repz
shrl
xchg
stc
xchg
xor
or
inc
lds
pop
outsl
add
add
jbe
int
mov
ljmp
mov
ror
popf
int
cmp
in
or
or
add
in
xchg
or
test
lret
rorb
add
adc
jbe
leave
jbe
dec
and
inc
and
cwtl
or
leave
jbe
into
and
in
inc
sbb
int
std
sar
shll
xchg
repnz
adc
out
xchg
push
add
lea
int
adc
jge
jmp
shr
sub
das
roll
jmp
addb
xchg
stc
cmp
shr
sub
jge
jmp
push
adc
xchg
std
int
std
cmp
cmp
shl
xchg
shl
sub
push
adc
xchg
stc
int
stc
aam
cmp
shl
sub
icebp
shl
xchg
push
jecxz
std
int
std
cmp
loope
jmp
shl
sub
aad
int
in
int
in
cmp
loope
jmp
shl
sub
cmp
in
sub
lock
sub
icebp
shl
xchg
push
jecxz
std
int
std
cmp
loope
jmp
shl
sub
aad
or
int
std
cmp
jmp
shr
sub
xchg
int
cmc
int
cmc
cmp
cmp
ljmp
int
std
int
std
cmp
cmp
shl
sub
repz
push
aad
adc
das
pop
pop
add
add
jbe
int
mov
jbe
arpl
rolb
insl
pop
jbe
aam
pop
jbe
fdivs
lret
or
das
adc
in
addb
lea
lret
or
insb
inc
jbe
subb
stc
std
add
cmpsb
rorb
adc
cmp
addb
xchg
jbe
inc
and
dec
sub
jno
cli
arpl
jbe
int
adc
subl
repnz
or
leave
jbe
into
and
inc
sbb
mov
int
std
int
std
cmp
shl
sub
jns
mov
lea
int
adc
jmp
shr
sub
das
rcl
in
outsb
int
cmc
int
cmc
sarl
push
sarl
lds
jbe
iret
jbe
jo
mov
jbe
int
stc
int
cmc
or
add
jbe
int
std
cmp
lock
push
roll
cmc
int
in
int
in
cmp
shl
sub
jns
mov
std
int
std
cmp
cmp
shr
xchg
shr
sub
xor
int
cmc
inc
jge
mov
jbe
int
mov
jns
lock
push
rorl
jbe
leave
jbe
bound
xchg
addb
jbe
cmp
shrl
jmp
push
jge
jbe
aad
or
int
mov
orb
in
lret
int
stc
das
pop
insl
cmp
or
int
in
int
in
cmp
mov
repnz
int
cmc
sub
int
push
popf
cld
add
int
popf
cmp
or
int
std
int
std
cmp
lock
push
roll
std
int
std
cmp
lock
push
sarl
jbe
int
adc
lea
cmp
cmp
repnz
mov
lea
imul
add
jbe
int
mov
jns
lock
sub
mov
int
stc
test
shll
rolb
in
xor
lret
pop
lcall
addb
roll
cwtl
sub
lahf
xor
std
or
stc
mov
lret
cmp
leave
jbe
adc
addb
mov
jecxz
mov
stc
iret
dec
into
mov
pop
das
mov
mov
das
mov
mov
fs
adc
das
mov
mov
mov
jge
pop
cmc
aam
leave
jbe
sbb
stc
int
mov
jecxz
mov
inc
in
dec
add
leave
jbe
push
addb
int
mov
lret
pop
dec
sub
push
add
add
cmc
sbb
push
jb
add
cmp
arpl
rolb
jecxz
mov
mov
adc
int
add
mov
inc
add
mov
adc
iret
js
or
iret
js
or
iret
js
or
iret
pop
or
cmp
addb
or
jbe
iret
pop
out
addb
pop
xor
pop
iret
pop
inc
addl
pop
xchg
addl
addb
xchg
icebp
or
or
mov
adc
or
and
lea
out
cmp
adc
jnp
ficoms
das
inc
cli
xchg
rcll
xchg
or
mov
out
int
or
cmp
shl
sub
int
mov
addb
cld
push
lock
stc
das
add
adc
mov
or
and
jbe
mov
movsl
int
jge
or
cmpsb
or
jnp
ficoms
das
inc
add
out
xchg
cmp
cmp
push
or
clc
add
add
add
lea
or
lea
icebp
mov
dec
stc
pop
sbb
mov
xor
std
xor
icebp
mov
xchg
adc
add
mov
jmp
and
lea
cmpsb
or
shr
sub
notl
shr
xchg
push
lock
aaa
ficoms
or
or
or
cmpsb
or
jnp
ficoms
das
inc
add
out
xchg
cmp
cmp
push
or
clc
push
comiss
xor
add
int
stc
push
imull
add
int
fs
push
faddl
int
and
jp
int
sbb
cltd
or
xchg
xchg
in
or
or
xchg
cmpsb
cmc
cmp
or
fcom
in
xchg
jbe
int
or
inc
lcall
ja
int
mov
xchg
mov
and
or
xchg
sbb
mov
jbe
or
push
addb
pusha
adc
jo
jbe
int
xor
int
stc
int
in
push
insl
aam
int
std
or
std
test
lea
movsl
push
or
or
int
test
lret
rolb
int
mov
pop
adc
mov
int
cmp
lret
pop
mov
shll
fwait
sbb
cwtl
int
pop
lahf
xor
cmp
jecxz
mov
xchg
add
xchg
das
mov
repz
mov
sbb
lds
sbb
jmp
dec
add
addl
mov
lret
cli
sbb
adc
or
sbb
leave
stos
lds
mov
addb
and
cmc
xchg
aaa
ficoms
or
aaa
ficoms
or
jbe
dec
and
inc
and
out
ficoms
or
fidivs
ficoms
or
int
adc
inc
icebp
xchg
shl
xchg
int
in
int
adc
ljmp
cmp
cmp
push
jns
jbe
iret
jbe
or
int
or
xor
ficoms
or
std
int
std
cmp
shr
xchg
sar
cmp
shr
sub
int
std
int
std
cmp
popf
shl
sub
xchg
int
std
int
std
cmp
popf
shl
sub
xchg
int
std
int
std
cmp
popf
shl
sub
xchg
or
nop
add
add
lea
icebp
cmp
shr
sub
jmp
push
adc
xchg
mov
cltd
cmp
in
push
aad
int3
pop
aam
add
int
dec
int
int
std
int
std
int
jo
popf
cmp
in
push
aad
int3
pop
aam
add
int
xor
xchg
xor
icebp
cmp
shr
sub
jmp
push
adc
xchg
std
int
std
cmp
cltd
shl
xchg
shl
sub
int
std
cmp
mov
shl
sub
xchg
int
adc
int3
pop
aam
add
int
adc
add
shl
sub
jns
mov
std
int
std
add
cmp
shr
sub
jmp
push
adc
xchg
std
int
std
cmp
repz
shl
sub
xchg
int
std
int
std
cmp
in
shl
xchg
push
aad
adc
add
add
push
nop
add
add
jbe
int
std
sar
cmp
or
mov
push
shll
jbe
iret
or
addb
addb
int
push
or
lea
shr
xchg
int
lods
int
mov
leave
cmp
push
icebp
bound
xor
repnz
inc
mov
int
lods
int
mov
inc
jge
shr
xchg
int
lods
int
mov
leave
cmp
push
icebp
bound
push
shl
sub
cmp
inc
sti
add
int
std
int
std
cmp
repnz
jns
mov
std
int
std
cmp
shr
xchg
cmp
shr
sub
xchg
int
std
int
std
cmp
shr
xchg
cmp
shr
sub
xchg
int
std
int
std
cmp
shr
xchg
cmp
shr
sub
xchg
or
nop
add
add
jbe
int
int
mov
aad
jmp
shr
sub
or
add
jbe
int
int
std
int
std
cmp
shr
xchg
int
jo
aad
ljmp
aam
add
int
sbb
lea
or
repnz
jns
mov
std
int
std
cmp
cmp
shr
sub
jmp
push
adc
xchg
std
int
std
cmp
hlt
call
in
push
aad
adc
add
add
jbe
int
std
add
call
repnz
jns
mov
std
int
std
add
cmp
shr
sub
jmp
push
adc
int
std
add
cmp
shr
sub
jmp
push
adc
pop
nop
add
add
xchg
std
int
std
xchg
cmp
int3
push
aam
add
int
sub
hlt
call
repz
shl
sub
iret
or
addb
addb
xchg
and
insl
aam
int
in
int
adc
inc
jge
shr
xchg
int
int
int
in
int
adc
fidivrl
lock
push
adc
xor
jo
xchg
push
in
push
int
int
push
lret
or
int
cmc
int
stc
das
inc
jge
shr
xchg
int
cmc
int
stc
cmp
cmp
shl
sub
lea
push
lds
int
inc
jo
lea
or
xchg
xchg
push
int
dec
int
int
xchg
sbb
dec
xchg
sub
lea
int
int
push
xor
int
int
xchg
jbe
or
das
inc
jge
shr
xchg
int
in
int
adc
leave
cmp
shl
sub
or
int
xor
les
in
int
adc
inc
jge
shr
xchg
int
in
int
adc
repnz
lea
leave
cmp
add
stc
push
inc
shrl
add
addb
movsb
dec
mov
jge
cmpsb
xor
lea
xchg
das
inc
rcll
jbe
int
xchg
shrl
cmp
cmp
push
or
cmpsb
stc
das
inc
popf
xchg
or
int
cmc
push
out
add
dec
shr
xchg
int
stc
cmp
mov
int
cmc
int
stc
das
inc
or
shrl
shr
xchg
int
stc
cmp
shrl
cmp
push
fcmovne
lea
mov
ror
icebp
or
int
xchg
das
inc
rcll
jbe
int
xchg
shrl
das
mov
cmp
dec
or
rorl
mov
or
and
shrl
ficoms
cmp
fidivs
ficoms
ss
or
cs
int
xor
add
mov
int
xor
xchg
int
orl
push
and
add
in
test
int
adc
jbe
leave
jbe
scas
aaa
ficoms
or
int
jne
inc
jge
shr
xchg
int
insl
int
jne
repnz
lea
cmp
cmp
push
shl
int
inc
inc
mov
int
xor
xor
insb
test
jbe
int
in
int
adc
inc
jge
shr
xchg
int
in
int
adc
fnstsw
leave
push
sub
adc
push
mov
std
int
std
cmp
shr
xchg
sar
cmp
shr
sub
int
std
int
std
cmp
popf
shl
sub
xchg
int
std
int
std
cmp
popf
shl
sub
xchg
int
std
int
std
cmp
xchg
shl
sub
xchg
or
nop
add
add
lea
xchg
mov
cltd
cmp
in
push
aad
int3
pop
aam
add
int
dec
int
int
std
int
std
int
jo
cltd
cmp
in
push
aad
int3
pop
aam
add
int
sbb
xchg
sbb
icebp
shr
sub
psrlq
xchg
push
adc
xchg
std
int
std
cmp
cltd
shl
sub
repz
push
aad
cmpsb
std
cmp
hlt
call
mov
push
lds
aam
add
int
std
int
std
cmp
shr
xchg
sar
cmp
shr
sub
int
std
int
std
cmp
popf
shl
sub
xchg
int
std
int
std
cmp
popf
shl
sub
xchg
iret
xchg
movsl
or
add
iret
nop
add
add
std
int
std
cmp
int
sub
icebp
shr
xchg
shr
sub
jno
pop
out
addb
addl
add
dec
int
mov
mov
dec
int
cmc
int
stc
das
inc
jecxz
shl
xchg
int
cmc
int
stc
cmp
shr
sub
xchg
cmc
cmp
push
bswap
stc
das
inc
sti
xchg
shr
xchg
int
cmc
int
stc
cmp
cmp
push
aad
adc
xchg
cmc
sarl
das
inc
sti
xchg
shr
xchg
int
cmc
int
stc
cmp
cmp
push
aad
adc
xchg
cmc
sarl
das
inc
sti
xchg
shr
xchg
int
cmc
cmp
int
stc
cmp
push
flds
dec
sarl
add
int
or
rclb
xchg
int
add
inc
pop
cwtl
lcall
popf
aaa
ficoms
pop
mov
jbe
leave
jbe
xchg
aaa
ficoms
or
leave
jbe
dec
mov
cmc
dec
lahf
xchg
and
cmp
xchg
and
jbe
int
sbb
shlb
jbe
int
sbb
add
xor
pop
xchg
fs
popf
int
and
out
int
movsl
das
inc
add
out
int
movsl
adc
cmpsb
mov
shr
sub
pop
push
aad
nop
int
or
int
xor
xchg
dec
iret
xchg
lods
bound
stc
jno
cwtl
add
sbb
jbe
add
mov
cmc
add
adc
in
jo
jbe
jo
stos
clc
add
or
int
sbb
lea
outsb
adc
jbe
leave
addb
lods
int
and
outsb
test
jbe
int
and
outsb
mov
jbe
int
and
outsb
dec
int
and
insb
and
addb
sbb
lea
or
and
xorb
or
int
std
stos
test
lret
rcrb
xchg
int
int
dec
adc
cmp
cwtl
lcall
push
mov
jbe
inc
and
dec
addb
ficoms
pop
mov
jbe
leave
jbe
xchg
aaa
ficoms
or
int
mov
jbe
int
cmc
int
mov
or
or
pop
jle
addb
mov
insl
mov
sarl
xor
mov
nop
xchg
iret
sahf
int
mov
aad
or
mov
jno
int
mov
leave
xchg
mov
ficomps
or
pop
mov
or
lret
mov
or
insb
add
add
push
add
add
outsb
add
add
add
inc
mov
add
iret
outsb
xor
add
add
xor
add
mov
add
int
mov
add
int
in
int
adc
inc
jge
shr
xchg
int
in
int
adc
cmpsb
mov
cmp
shl
sub
in
outsb
iret
aam
mov
int
das
mov
cmp
sti
and
shl
das
push
adc
int3
test
lea
inc
jecxz
shl
xchg
int
mov
mov
push
psrlq
sub
popa
int
in
int
adc
inc
jge
shr
xchg
int
in
int
adc
leave
cmp
shl
sub
in
outsb
iret
aam
add
sbb
mov
sti
and
shl
das
push
adc
int3
test
incl
add
lea
inc
jecxz
shl
xchg
int
mov
mov
push
psrlq
sub
popa
int
in
int
adc
inc
jge
shr
xchg
int
in
int
adc
leave
cmp
shl
sub
in
je
push
jbe
add
add
sbb
mov
sti
and
shl
das
push
adc
int3
test
lea
inc
jecxz
shl
xchg
int
mov
mov
push
psrlq
sub
mov
add
or
int
stc
pop
inc
pop
inc
xchg
or
daa
or
int
mov
add
int
mov
mov
xor
pusha
addl
addb
mov
add
int
mov
add
pop
es
push
std
incl
add
xor
push
incl
add
xor
push
addb
add
or
xchg
add
add
jbe
pop
dec
xor
iret
test
add
add
bound
add
pop
push
xor
iret
mov
add
add
pushf
mov
add
int
mov
add
pop
add
addb
add
cmp
adc
cmpb
add
mov
addb
add
pop
lcall
adc
add
int
xor
call
repnz
or
adc
jbe
int
dec
cmp
mov
shl
sub
leave
add
add
add
incl
add
jbe
int
xor
jns
mov
shl
sub
jo
push
stc
incl
add
jbe
int
cmp
push
sbb
add
inc
lret
fwait
xor
adc
icebp
or
int
stc
push
insl
aam
adc
or
fmull
int
dec
int
dec
sar
setl
icebp
shr
sub
jmp
push
adc
xchg
cmc
int
and
dec
das
push
popa
test
int
dec
cmp
shr
xchg
cmp
shr
sub
int
cmc
int
in
addb
int
dec
cmp
shr
xchg
cmp
shr
sub
int
cmc
int
add
pop
xor
mov
add
int
mov
add
pop
es
iret
sub
add
pop
daa
xor
iret
xor
add
add
test
add
add
xor
iret
cmp
add
add
mov
or
cmp
add
pop
fwait
xor
iret
inc
add
add
or
or
inc
add
add
xor
iret
dec
add
add
pop
addb
add
pop
cmp
addb
add
jns
movsl
cmpsl
pop
pop
adc
iret
push
add
add
pop
mov
add
jns
fisttps
jbe
inc
jns
loope
pop
fcom
addb
add
jns
lods
push
pop
jnp
addb
add
jns
repnz
ljmp
mov
add
jns
in
int
xor
xchg
xor
icebp
shr
xchg
shr
sub
in
xchg
int
xor
out
cmp
stc
shr
sub
xor
das
pop
mov
int
xor
out
cmp
stc
shr
sub
int
stc
add
adcl
fwait
addb
movsw
int
xor
lea
cmp
sub
repz
push
jecxz
stc
xchg
int
xor
out
cmp
xchg
shr
sub
add
mov
stc
inc
adc
int
xor
icebp
shr
xchg
shr
sub
or
adc
lea
dec
cmp
cmp
shr
sub
jmp
push
adc
xchg
movsl
or
add
xor
mov
rcl
int
mov
loopne
mov
leave
test
loopne
mov
leave
loop
or
cmp
cli
mov
add
cld
mov
add
cli
mov
loopne
mov
leave
test
loopne
mov
leave
loop
or
popa
mov
or
or
int
dec
cmp
cmp
shr
sub
jmp
push
adc
xchg
dec
int
dec
cmp
mov
jmp
mov
or
int
dec
int
dec
cmp
cmp
shr
xchg
shr
sub
int
dec
iret
mov
out
shl
xchg
cmp
shr
sub
das
mov
or
int
dec
int
dec
cmp
shr
sub
psrlq
xchg
push
adc
xchg
dec
int
dec
cmp
stc
shr
sub
mov
incl
add
lea
dec
cmp
shr
sub
psrlq
xchg
push
adc
xchg
dec
int
dec
cmp
stc
shr
sub
mov
incl
add
lea
int
xor
icebp
cmp
shr
sub
jmp
push
adc
xchg
xor
out
cmp
xchg
shr
sub
xchg
or
adc
lea
dec
int
mov
icebp
cmp
shr
xchg
shr
sub
iret
push
nop
incl
add
add
add
jbe
mov
int
xor
xchg
xor
cmp
stos
cmp
shr
xchg
shr
sub
or
add
jbe
int
dec
cmp
mov
repnz
aam
iret
push
adc
int
xor
lea
cmp
mov
repnz
jo
push
and
add
jo
jbe
rolb
int
dec
cmp
lock
mov
mov
push
ror
iret
movsb
incl
add
int3
push
sbb
jbe
mov
int
xor
xchg
xor
psrlq
xchg
add
call
ljmp
sbb
sub
xor
push
jo
add
iret
mov
mov
add
pop
adc
push
bound
add
int
mov
add
int
mov
add
add
sub
jge
or
mov
mov
mov
add
add
pusha
mov
add
iret
mov
or
les
add
int
mov
add
iret
loopne
pop
add
iret
enter
iret
mov
mov
add
mov
add
add
stc
mov
add
int
pop
leave
xor
iret
addb
add
jge
or
aam
add
int
mov
add
cmp
or
add
add
addr16
add
leave
push
lods
add
add
xor
fadds
add
jae
jno
mov
int
xor
xchg
xor
call
repnz
jns
mov
lea
add
cmp
repz
push
jecxz
lret
add
sbb
lret
cmp
inc
cli
das
or
addb
das
add
addb
xchg
xor
psrlq
xchg
add
call
ljmp
aad
cmp
add
lea
int
xor
psrlq
xchg
add
call
jmp
jge
int
lea
add
mov
repnz
mov
jecxz
lea
int
xor
psrlq
xchg
add
call
jmp
jge
or
add
lea
int
xor
sti
call
jmp
shr
sub
int
xor
add
cmp
repz
push
jecxz
lret
add
sbb
lret
cmp
inc
cli
das
or
pop
pop
add
add
cmpsb
mov
jne
jbe
int
mov
or
insb
test
jbe
int
jge
inc
jge
shr
xchg
int
jne
xchg
jge
leave
cmp
push
icebp
int
cmc
bound
jo
push
cmc
incl
add
repnz
int
in
int
adc
inc
jge
shr
xchg
int
in
int
adc
repnz
iret
cmc
incl
add
mov
leave
cmp
push
rolb
das
push
push
addb
jbe
ficoms
pop
mov
jbe
or
int
xchg
int
popf
das
inc
jge
shr
xchg
int
xchg
int
popf
cmp
cmp
push
icebp
bound
xor
repnz
pop
xor
push
repnz
int
xchg
int
popf
das
inc
jge
shr
xchg
int
xchg
int
popf
cmp
cmp
push
icebp
bound
pop
xor
repnz
pop
sub
xchg
repnz
int
xor
mov
jle
xchg
lea
inc
rcll
jbe
int
icebp
cmp
shrl
ror
lea
push
jge
dec
int
popf
addl
jbe
int
xor
cmp
cmc
add
sub
and
sbb
adc
test
add
or
adc
add
int
cmp
fcoml
aam
int
cmp
fsubl
aam
int
adc
add
int
cmp
outsb
sbb
push
add
cmp
cmc
mov
stos
test
lret
shlb
xchg
int
jno
cwtl
leave
jbe
dec
and
inc
and
int
std
sar
shll
xchg
sti
sarl
push
jns
mov
int
std
aam
int
std
cmp
cmp
sarl
push
jns
dec
inc
adc
pop
int
xor
jbe
cmp
push
add
push
pop
lret
or
das
push
fcmovbe
dec
add
adcl
fwait
addb
dec
adc
in
addb
lea
lret
or
js
clc
orb
int
stc
cmp
int
stc
add
ljmp
std
cmp
int
std
cmp
shl
sub
mov
lret
rorb
int
add
leave
jbe
dec
and
xchg
jbe
or
int
adc
add
lea
addl
lea
std
cwtl
lcall
jns
mov
shl
sub
or
int
std
int
std
cmp
mov
repnz
or
int
mov
insb
jo
mov
int
mov
insb
pop
int
mov
push
outsb
xchg
int
mov
sbb
insb
pop
int
mov
jle
jl
icebp
sub
jbe
int
pop
xchg
in
xchg
insb
xchg
or
int
std
int
std
cmp
lock
push
rorl
jbe
int
std
int
std
cmp
lock
sub
mov
jbe
int
std
int
std
cmp
cmp
repnz
mov
lea
or
jbe
cmp
xchg
and
imul
xchg
int
std
cmp
lock
push
rorl
jbe
int
mov
jbe
add
popf
add
dec
int
mov
neg
add
or
int
adc
insl
aam
int
popf
or
int
movsl
int
dec
xor
or
int
adc
lea
dec
int
movsl
inc
jge
sbb
jbe
int
dec
int
adc
outsb
mov
lea
test
xchg
jbe
inc
and
cmp
xchg
and
or
iret
jbe
or
iret
jbe
or
iret
jbe
or
int
std
int
std
cmp
lock
push
rorl
jbe
jmp
xchg
and
xchg
popf
iret
jbe
jo
xlat
filds
add
jbe
int
stc
cmp
lock
sub
mov
jbe
or
int
xchg
sarl
in
push
popf
or
int
stc
cmp
shl
sub
jns
mov
stc
int
stc
cmp
cmp
shr
xchg
shr
sub
xchg
int
movsl
or
sub
jbe
int
stc
cmp
lock
push
shll
dec
iret
jbe
jo
sti
std
add
int
std
int
std
cmp
lock
sub
mov
lea
int
std
int
std
cmp
lock
push
shll
dec
iret
jbe
jo
mov
jbe
int
cmc
int
int
cmp
cmp
repnz
mov
je
ror
std
int
std
cmp
cmp
shr
xchg
shr
sub
pop
insl
push
adc
das
add
int
adc
lea
int
int
cmp
cmp
repnz
mov
je
ror
std
int
std
cmp
cmp
shr
xchg
shr
sub
pop
insl
push
adc
das
add
int
adc
lea
lock
repnz
mov
je
ror
std
int
std
cmp
cmp
shr
xchg
shr
sub
pop
insl
push
adc
das
add
int
in
int
in
int
int
cmp
cmp
repnz
mov
je
ror
std
int
std
cmp
cmp
shr
xchg
shr
sub
pop
insl
push
adc
das
add
int
adc
lea
int
int
cmp
shl
sub
jns
mov
je
ror
cmc
int
int
cmc
int
cmp
shr
xchg
cmp
shr
sub
lret
rolb
int
adc
mov
xchg
adc
and
psrlq
xchg
cmp
shr
sub
lret
rorb
int
cmc
int
int
cmc
int
cmp
cmp
shr
xchg
shr
sub
lret
push
pusha
jge
push
mov
jbe
int
adc
mov
cmpb
shl
sub
jns
mov
je
ror
lea
int
int
adc
and
psrlq
xchg
cmp
shr
sub
lret
rolb
int
in
int
int
in
int
cmp
shr
xchg
cmp
shr
sub
lret
rorb
int
adc
mov
xchg
adc
and
jmp
shr
sub
lret
push
pusha
jge
push
cmc
addb
in
int
int
cmp
shl
sub
jns
mov
je
ror
lea
int
cmp
shr
xchg
cmp
shr
sub
lret
rolb
int
cmc
int
int
cmc
int
cmp
shr
xchg
cmp
shr
sub
lret
rorb
int
adc
mov
xchg
adc
and
jmp
shr
sub
lret
push
pusha
jge
push
add
in
int
in
int
int
cmp
shl
sub
jns
mov
je
ror
cmc
int
int
cmc
int
cmp
shr
xchg
cmp
shr
sub
lret
rolb
int
adc
mov
xchg
adc
and
psrlq
xchg
cmp
shr
sub
lret
rorb
int
in
int
int
in
int
cmp
cmp
shr
xchg
shr
sub
lret
push
pusha
jge
xor
jbe
jo
outsl
lods
add
int
pop
inc
rcl
push
int
std
int
std
cmp
cmp
repnz
mov
jbe
int
stc
int
stc
int
stc
int
stc
cmp
xchg
shrl
cmpsb
gs
xchg
cmp
add
std
add
std
shr
sub
hlt
dec
and
int
std
cmp
cmp
repnz
mov
lea
push
std
add
int
std
int
std
cmp
lock
sub
mov
lea
int
stc
int
stc
cmp
lock
push
shr
jle
addb
popf
iret
jbe
jo
jge
add
int
std
int
std
cmp
lock
sub
mov
lea
int
stc
int
stc
cmp
lock
sub
mov
lea
int
stc
int
stc
cmp
lock
push
shll
iret
jbe
jo
das
cli
add
int
std
int
std
cmp
lock
push
shll
iret
jbe
jo
sti
stc
add
int
popf
xchg
or
add
cmp
jbe
xchg
jo
push
fildl
add
jbe
int
std
cmp
lock
sub
mov
lea
int
stc
int
stc
cmp
lock
sub
mov
lea
int
stc
int
stc
cmp
mov
repnz
jo
cmp
jbe
jo
add
jbe
int
std
cmp
mov
repnz
jo
cmp
jbe
jo
jb
add
int
inc
int
inc
cmp
cmp
shr
xchg
shrl
lea
addl
jo
cmp
lea
add
jbe
int
cmp
cmp
jbe
int
stc
int
stc
cmp
shl
sub
jns
mov
lea
std
int
std
cmp
cmp
shr
xchg
shr
sub
xchg
or
cli
add
int
mov
xor
in
adc
cwtl
lcall
add
xchg
mov
or
dec
int
mov
cmpsb
dec
or
pop
jnp
ficoms
cmp
pop
mov
adc
inc
sti
xchg
shr
sub
clc
addb
cmp
push
clc
int
sbb
aad
sbb
das
adc
je
push
ja
xchg
shr
addl
xchg
mov
dec
int
mov
dec
int
mov
cmpsb
dec
cmp
cmp
das
inc
sti
xchg
shr
sub
clc
addb
aad
out
xchg
push
clc
int
xor
cmpsb
adc
popf
int
xor
cli
int
adc
inc
loope
shrl
cli
push
addb
push
popf
int
mov
bswap
dec
int
xor
cmpsb
adc
lods
std
add
std
shr
sub
ficoml
aaa
ficoms
adc
mov
clc
aam
ficoms
adc
mov
leave
sbb
push
jge
cltd
pop
mov
add
aaa
ficoms
cmp
adc
out
ficoms
sbb
das
adc
das
stos
push
in
xchg
imul
and
addb
dec
int
mov
out
cmp
pop
jnp
ficoms
cmp
das
inc
sti
xchg
shr
xchg
cmp
shl
sub
cmc
push
fxch
out
imul
cmpsb
and
and
cmpsb
adc
xchg
fiaddl
aam
add
xor
and
sub
std
add
sub
add
or
or
mov
out
cmp
cmp
das
inc
add
out
int
mov
cmpsb
dec
shr
sub
dec
cmc
cmp
push
clc
int
xor
cli
push
aad
cmpsb
adc
popf
int
int
xor
or
cmpsb
adc
inc
jge
shr
sub
fst
jmp
adc
addb
lock
icebp
sbb
and
mov
cmpsl
cmp
sbb
jbe
int
dec
int
mov
dec
adc
mov
jnp
ficoms
das
inc
jge
int
cmp
cmp
sarl
jmp
adc
addb
divps
test
aam
adc
gs
jo
mov
ss
das
sbb
mov
test
lret
shrb
xchg
int
add
dec
int
mov
lea
jge
shr
xchg
int
mov
xchg
dec
cwtl
shl
sub
lea
cmpsb
mov
cmp
push
rorb
or
xor
mov
jbe
int
xor
addb
int
adc
adc
test
nop
jo
add
or
lea
jge
shr
xchg
int
mov
xchg
dec
add
and
jns
ficoml
or
iret
jbe
jo
add
sbb
repnz
adc
xor
dec
add
mov
int
mov
lea
jge
shr
xchg
int
mov
xchg
dec
cmp
fcmovbe
repnz
das
push
rolb
aam
int
xor
lea
inc
jge
shr
xchg
int
xor
xchg
adc
jns
fcmovbe
repnz
lea
shrb
shll
or
adcb
lcall
xchg
inc
int
and
mov
jnp
ficoms
inc
icebp
das
or
addb
test
jnp
inc
hlt
mov
das
add
adc
jno
ficoms
mov
das
add
adc
xchg
aaa
ficoms
mov
das
add
adc
cmpsb
aaa
ficoms
test
aam
adc
scas
aaa
ficoms
mov
das
add
adc
mov
ficoms
das
push
into
addl
sub
addl
adc
xor
dec
add
mov
jmp
addl
mov
das
add
adc
xchg
aaa
ficoms
mov
das
add
adc
aaa
ficoms
test
aam
adc
fidivs
ficoms
mov
das
add
adc
out
ficoms
in
iret
int
mov
dec
int
mov
cmpsb
dec
cmp
cmp
das
inc
sti
xchg
shr
sub
clc
addb
cmp
push
clc
int
mov
int
dec
xchg
sbb
or
int
mov
dec
int
mov
cmpsb
dec
cmp
cmp
das
inc
sti
xchg
shr
sub
fst
out
xchg
adc
addb
clc
ds
xor
adc
xchg
cmp
inc
int
xor
adc
xchg
xor
adc
out
int
adc
adc
jecxz
inc
sti
xchg
shr
sub
fstl
clc
addb
push
clc
int
cmp
aad
cmpsb
inc
cmp
cmp
lea
loope
cmp
shrl
subb
lea
shr
xchg
push
popf
xchg
int
adc
hlt
add
std
shr
sub
insl
adc
aam
ficoms
adc
mov
out
int
inc
add
std
adc
aam
ficoms
adc
mov
lock
and
aad
rclb
or
and
not
aaa
ficoms
cwtl
add
xor
sub
add
sbb
adc
xor
dec
add
mov
or
arpl
sarb
int
mov
dec
int
mov
cmpsb
dec
cmp
cmp
das
inc
sti
xchg
shr
sub
clc
addb
cmp
push
aad
clc
int
xor
cmpsb
adc
fsts
or
int
cmp
inc
int
xor
adc
xchg
mov
dec
int
mov
dec
int
mov
cmpsb
dec
cmp
cmp
das
inc
sti
xchg
shr
sub
clc
addb
aad
out
xchg
push
clc
int
xor
cmpsb
adc
cli
cmp
lea
inc
loope
cmp
push
cli
shrl
subb
push
popf
int
cmp
lea
int
cmp
hlt
int
inc
adc
mov
jnp
ficoms
das
inc
jge
shr
sub
jmp
cmp
adc
addb
lds
lea
out
int
adc
repnz
add
std
adc
aam
ficoms
adc
aam
ficoms
shr
sub
insl
adc
mov
hlt
mov
lock
jmp
incl
add
sbb
pop
aaa
ficoms
or
and
jbe
xchg
aaa
ficoms
or
int
adc
cmc
lcall
xchg
int
adc
out
jo
sti
cmpsb
mov
jno
xchg
std
int
dec
or
iret
jbe
add
mov
mov
dec
add
in
add
mov
adc
stos
or
int
std
test
rorb
add
stc
add
inc
cwtl
leave
je
xor
addb
addb
xor
xor
sub
and
sbb
adc
xor
dec
add
mov
int
mov
je
test
je
xor
insl
das
add
int
xor
push
insl
das
add
add
xor
add
xor
add
xor
int
xor
add
int
xor
int
xor
int
xor
iret
jbe
or
int
xor
xchg
or
int
xor
int
xor
int
xor
int
and
xor
aam
mov
add
sbb
or
xor
push
int
fs
xchg
sbb
push
int
xchg
pop
sbb
add
addl
dec
int
xor
xchg
or
or
xor
push
insl
das
push
cwtl
addl
addl
je
test
add
orb
xor
int
xor
int
or
int
or
int
xor
int
int3
addl
dec
int
xor
int
xor
int
popf
addl
or
imul
jns
add
sarl
push
jge
mov
leave
je
mov
je
xor
insl
aam
int
xor
add
adc
jl
cmp
and
add
xor
add
xor
add
xor
add
xor
int
xor
add
in
cmp
aam
and
aam
and
aam
and
je
push
add
in
and
aam
adc
je
cmp
icebp
in
xchg
je
xor
icebp
or
int
xor
push
insl
aam
int
xor
leave
add
and
mov
mov
int
movsl
addl
and
mov
mov
cmp
add
shl
sub
mov
mov
inc
rcl
and
je
test
mov
int
movsl
addl
addb
cmp
push
iret
jbe
or
int
xor
int
xor
int
in
addb
je
test
add
addl
or
or
adc
mov
int
in
addb
mov
sub
lds
gs
popa
ja
jne
outsl
insl
jne
add
jno
jb
bound
dec
popa
addr16
addr16
js
bound
insb
outsl
add
je
jo
outsl
outsl
push
gs
outsl
jae
jne
imul
jae
dec
jne
imul
gs
outsl
jbe
jae
insb
push
gs
push
outsl
data16
popa
jns
gs
jo
outsl
insb
insb
jo
imul
gs
jne
jae
addr16
jo
gs
outsl
ja
add
outsb
je
gs
popa
je
outsl
jo
insb
fs
arpl
dec
outsl
imul
push
imul
add
je
gs
insb
jne
add
imul
insl
jo
outsb
outsl
add
jae
outsb
add
push
add
add
arpl
push
add
add
push
add
js
jns
push
add
jb
arpl
add
outsl
add
dec
add
outsb
add
je
outsl
add
outsl
add
popa
add
add
dec
add
outsb
add
add
outsb
add
popa
add
add
inc
add
jne
jae
je
add
push
add
jb
jns
add
push
add
popa
add
push
add
insb
add
je
imul
add
add
jo
add
jns
je
push
add
outsl
add
push
add
jo
jns
add
bound
outsl
add
inc
add
popa
add
add
jae
add
add
or
add
xor
add
push
adc
xchg
adc
mov
and
adc
add
adc
add
adc
lcall
add
or
add
add
adc
or
pop
adc
out
adc
into
addb
addb
addb
addb
addb
addb
addb
addb
addb
addb
addb
addb
addb
addl
or
inc
add
addl
cmpsb
addl
scas
addl
mov
inc
add
addl
movb
add
addl
addl
fiadds
inc
add
cmp
add
adc
jbe
adc
or
add
sbb
add
sub
add
adc
movsb
inc
adc
jecxz
adc
shlb
push
push
adc
pop
inc
adc
xchg
rcrl
add
je
add
adc
fldcw
add
pop
adc
nop
push
adc
scas
push
adc
hlt
jbe
add
pop
adc
mov
data16
pop
dec
adc
mov
adc
sub
adc
xchg
cmp
add
addl
out
addl
testb
add
addl
push
addb
addb
addb
addb
addb
addb
addb
addb
and
add
adc
and
inc
adc
ss
adc
leave
jno
add
cmp
add
inc
adc
mov
pop
adc
dec
sub
add
xor
add
adc
jl
adc
xchg
jle
add
data16
data16
addb
addb
addb
addb
addb
addb
addb
addb
addb
addb
addb
addb
addb
addb
addb
imul
mov
adc
addr16
add
add
cmp
add
adc
jecxz
adc
push
or
add
adc
push
dec
adc
mov
adc
sarl
add
add
adc
test
addb
addb
addb
addb
addb
addb
addb
addl
addl
addl
addl
addl
addl
addl
addl
addl
add
je
dec
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
test
add
add
jbe
add
mov
add
mov
add
mov
test
add
test
add
test
add
test
add
add
and
add
xor
add
dec
xchg
add
add
push
xchg
add
add
add
add
add
xchg
add
xchg
add
xchg
add
xchg
add
xchg
add
xchg
add
xchg
add
xchg
add
add
add
outsb
xchg
add
add
mov
add
movsb
xchg
add
xchg
add
xchg
add
xchg
add
mov
add
mov
add
mov
add
mov
add
add
dec
mov
add
add
add
nop
mov
add
mov
add
mov
add
mov
add
mov
add
add
push
mov
add
add
mov
add
add
add
add
add
mov
add
scas
mov
add
add
fmull
add
add
add
sbb
add
mov
add
add
push
mov
add
add
add
mov
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
add
pop
mov
add
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
add
mov
insb
imul
je
add
inc
add
je
dec
inc
inc
outsl
insb
outsl
jb
popa
bound
add
add
jb
popa
insb
imul
arpl
add
je
jb
arpl
imul
xchg
add
gs
je
inc
dec
inc
push
arpl
outsb
add
popl
inc
jb
popa
je
inc
inc
push
add
add
je
imul
je
js
add
add
je
arpl
outsb
add
fadds
push
gs
imul
add
inc
gs
bound
arpl
add
popa
je
inc
outsl
outsb
je
outsb
imul
xchg
inc
gs
gs
inc
js
outsb
je
outsl
imul
mov
popa
je
dec
inc
push
add
add
popa
jb
inc
outsl
arpl
add
push
gs
imul
addr16
js
add
outsl
dec
push
add
std
add
je
gs
inc
outsl
insb
outsl
jb
add
add
je
push
fs
xor
push
add
add
jne
inc
outsl
outsb
je
popa
insl
imul
add
je
dec
inc
imul
xor
fs
insb
add
inc
inc
push
push
xor
cs
insb
add
xchg
inc
gs
insb
addr16
jb
arpl
add
je
outsb
jne
je
insl
push
arpl
add
imul
je
gs
add
add
arpl
insb
addr16
jne
je
outsb
add
addb
push
outsb
outsl
ja
jae
outsb
arpl
add
imul
popa
jae
push
add
xchg
add
outsb
jae
popa
je
inc
arpl
insb
gs
je
jb
add
add
fs
imul
add
je
popa
jb
je
outsl
jae
scas
add
ja
fs
pop
add
gs
je
inc
imul
jb
insl
inc
add
out
inc
jb
insl
gs
arpl
add
je
jo
popa
je
push
arpl
add
je
inc
add
push
imul
outsl
arpl
add
add
imul
push
add
je
outsl
jb
outsb
jo
je
fs
add
hlt
add
jae
push
push
dec
gs
popa
addr16
add
xchg
add
outsb
jae
popa
je
dec
gs
popa
add
test
dec
outsb
jae
jb
dec
outsb
jne
je
insl
push
add
add
outsb
fs
imul
push
add
ja
gs
inc
add
add
je
insb
popa
jae
dec
outsl
outsb
addr16
add
imul
add
cmp
inc
gs
outsb
jne
je
imul
add
outsb
fs
gs
popa
addr16
imul
add
push
jo
popa
dec
jne
gs
arpl
or
inc
imul
jae
push
outsb
imul
outsb
fs
gs
popa
addr16
add
popf
add
insb
outsl
addr16
outsl
js
popa
jb
insl
push
add
push
gs
outsl
arpl
add
stos
add
fs
imul
add
je
insb
popa
jae
dec
outsb
outsw
inc
js
add
popa
insb
imul
add
inc
jb
popa
je
inc
imul
jb
insl
push
add
or
inc
gs
inc
inc
js
repz
je
popa
jb
je
outsl
jae
xchg
add
je
outsl
jns
arpl
insb
gs
je
jb
popa
bound
ret
jbe
jo
imul
lds
dec
jae
push
jo
popa
push
add
sti
add
je
insb
popa
jae
dec
popa
insl
gs
add
push
gs
outsb
jne
gs
jne
je
je
insl
add
pop
add
je
jns
inc
outsl
insb
outsl
jb
add
add
push
gs
ja
imul
cmp
arpl
popa
imul
outsb
add
xor
jb
outsl
dec
gs
push
add
jnp
push
push
jb
outsl
jb
add
add
je
arpl
gs
imul
add
arpl
outsl
jo
jo
outsb
jne
add
add
je
jae
outsb
arpl
jns
je
je
add
xchg
add
je
outsl
jns
arpl
add
inc
push
xor
cs
insb
add
add
addr16
gs
gs
push
popa
insb
jne
inc
add
push
gs
popa
insb
jne
inc
js
add
pop
add
jns
je
gs
jb
jns
gs
popl
push
gs
gs
popa
insb
jne
inc
js
add
das
add
je
data16
outsl
outsl
je
outsl
outsb
imul
je
jae
add
push
gs
insb
outsl
jae
dec
gs
inc
fs
jo
xor
cs
insb
add
arpl
cs
add
bound
push
gs
insb
insb
outsl
arpl
sbb
inc
jb
outsl
jb
outsl
fs
mov
inc
outsl
insl
jo
jb
push
je
imul
add
jae
jb
jo
inc
add
adc
inc
jne
insb
imul
outsb
fs
add
push
gs
push
inc
data16
dec
popa
jae
add
add
fs
imul
add
sub
dec
outsl
arpl
push
imul
push
jns
je
insl
push
imul
insb
gs
imul
inc
gs
gs
inc
jb
je
arpl
push
arpl
outsb
add
add
gs
popa
outsb
fs
gs
outsl
jne
je
add
push
jne
jb
push
gs
outsl
jb
popa
outsb
arpl
outsl
jne
je
jb
testl
imul
and
insl
push
gs
jne
arpl
jns
gs
add
lcall
insb
inc
gs
je
insl
dec
popa
insl
gs
add
loop
inc
jb
popa
je
dec
popa
insl
gs
imul
add
je
outsl
arpl
gs
outsb
outsw
inc
add
lar
je
outsl
fs
gs
imul
add
pop
add
popa
insb
push
imul
insb
gs
jb
outsl
insl
insl
inc
jb
popa
imul
pusha
add
outsb
fs
imul
gs
add
push
add
je
jne
bound
inc
outsl
jb
popa
je
add
dec
inc
push
dec
inc
dec
xor
cs
insb
