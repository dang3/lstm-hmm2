push
mov
jmp
cwtl
jb
inc
pop
pop
cltd
lret
inc
scas
stos
std
mov
jle
jle
xorb
into
xor
xor
ja
or
mov
cmp
int3
adc
sbb
mov
or
rorl
out
mov
or
dec
sbb
loopne
add
mov
xor
jbe
fisttpl
jecxz
and
xchg
dec
incl
mov
loope
pop
sub
jae
lret
lcall
mov
loop
cmp
sub
or
sbb
outsl
insl
je
cmp
jns
popl
shll
movb
sahf
mov
daa
sbb
addr16
in
test
test
test
adc
test
ret
sub
mov
adc
stc
xchg
mov
outsl
jle
push
mov
add
mov
push
rol
dec
imul
cmc
cmp
loop
in
fwait
xor
xchg
add
and
xchg
add
mov
cmp
cmp
test
rcl
mov
sbb
inc
nop
es
rcrb
push
sub
loop
push
movsl
mov
xchg
mov
push
es
sti
imul
outsb
sub
fcoms
pop
cltd
aas
and
mov
jmp
pop
adc
pop
pop
lea
mov
pop
mov
fdivr
insb
push
xchg
sub
fsubl
mov
mov
jle
int3
and
pop
cld
out
pop
ret
cli
mov
cmp
int
dec
insl
fs
orl
outsl
push
pushf
popa
data16
sahf
jmp
sahf
xor
sbb
shrl
iret
test
loope
push
das
in
dec
shl
mov
out
pusha
fnsave
cld
pop
sbb
aaa
jns
sub
add
pop
jno
sahf
cmp
sbb
mov
fs
or
and
adc
adcl
mov
icebp
xchg
out
clc
pop
fwait
lret
js
dec
arpl
ljmp
aas
mov
shlb
lods
outsl
stc
sti
repz
rcrb
mov
popf
fistpll
cmp
rcrb
jns
fwait
movlhps
outsl
push
add
loopne
mov
xor
popa
or
mov
cwtl
fisubl
outsl
push
ljmp
sub
lock
rcl
push
fimuls
cmc
lea
xchg
cmp
insl
add
in
inc
mov
loop
and
xor
push
adc
inc
cltd
xorb
mov
pop
sub
sbb
fwait
xlat
lret
nop
jle
xlat
daa
dec
or
xorl
ret
stos
insb
ds
outsb
or
dec
add
das
fs
cld
xor
adc
fs
scas
sbb
popf
stos
xor
out
test
jmp
fsin
mov
cmp
xchg
jno
adc
stos
test
cltd
sub
add
jae
jmp
hlt
adc
mov
mov
jae
stos
and
incb
pop
sbb
ret
lods
push
insl
pop
aad
out
lock
pop
sti
repnz
mov
or
pop
jecxz
mov
mov
cltd
pusha
mov
xor
cltd
in
adc
push
jle
pop
lea
inc
lds
inc
sub
push
sub
movl
sbb
movl
sub
mov
mov
movl
cmpl
je
cmpl
jne
pushl
call
mov
dec
mov
jmp
sub
lea
movl
cmpl
je
cmpl
jne
pushl
push
push
push
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
and
mov
and
mov
jmp
sub
ljmp
mov
jle
xorb
dec
out
dec
push
test
addl
lock
jnp
enter
add
dec
dec
clc
popa
ficoms
push
push
mov
test
ret
repnz
mov
lahf
pop
jns
jge
jmp
xchg
clc
inc
and
add
aaa
shlb
iret
mov
pop
push
ja
lahf
outsl
leave
sbb
loop
stos
imul
cli
imul
lcall
int3
adc
dec
ror
lret
sarb
jae
xorb
mov
add
mulb
or
aaa
mov
cltd
sar
cmp
mov
into
call
rcrb
inc
or
bound
push
nop
fmuls
mov
dec
stos
inc
mov
sbbl
xchg
add
xchg
pop
or
ror
loope
es
sub
pop
inc
fcmovnbe
int
add
sbb
mov
aad
mov
xor
repnz
sub
adcb
je
lahf
out
out
fcompl
pop
ficomps
pop
les
ret
ljmp
push
rorl
stc
mov
cmp
mov
xchg
test
or
sub
push
mov
iret
mov
or
out
jmp
push
push
cmp
pop
mov
add
movsl
pop
jno
jle
xchg
mov
inc
ret
dec
sbbl
and
xchg
sbb
int3
mov
icebp
mov
out
in
sub
xor
dec
inc
into
insl
cmp
bound
in
out
shl
cmpsb
and
icebp
mov
and
mov
rcrl
cmpsb
cmp
popf
aam
mov
jbe
xor
push
jmp
stos
mov
in
daa
jp
repnz
dec
icebp
int
je
push
rcll
sarl
mov
sub
aad
sbb
fldt
cmp
pop
xchg
popf
xchg
mov
dec
mov
ret
mov
enter
xchg
sti
push
mov
pop
ficoml
or
push
inc
outsb
rolb
test
sbb
mov
mov
fucomp
push
cmp
push
cmp
push
mov
cld
inc
test
seta
cld
cmp
sub
xchg
inc
lock
shlb
xchg
adcb
hlt
adc
out
push
cmc
inc
je
cmp
int
lcall
mov
mov
sub
dec
ja
jno
cmp
inc
popa
push
inc
arpl
or
mov
fadds
pop
lret
out
arpl
sbb
mov
push
or
inc
mov
mulb
pop
pop
ss
jo
js
cmp
and
fwait
cmp
divb
out
in
cltd
jns
xlat
fldl
mov
arpl
cmp
js
cmp
or
int
imul
lds
add
and
pop
sbb
jb
loopne
mov
mov
and
flds
xor
mov
insb
pusha
jge
jle
call
imul
into
fcmovu
pop
sub
inc
mov
cmpsl
faddl
cmovle
xchg
sub
out
out
test
cltd
shrb
scas
lea
iret
xor
or
or
dec
movsb
jnp
ds
cmp
cmp
mov
xor
cmp
ret
jge
mov
sahf
jns
leave
aaa
xor
push
fidivl
jb
das
inc
aad
push
bound
test
imul
inc
loopne
sbb
push
lea
xor
mov
mov
xor
push
sbb
push
adc
mov
mov
movl
cmpl
je
cmpl
jne
push
call
mov
dec
mov
jmp
addl
mov
or
mov
mov
xor
mov
sbbl
xor
xor
xorl
add
add
sbbl
jmp
ret
imul
mov
aaa
sbb
rclb
jne
jle
jno
jle
mov
enter
xchg
movsl
mov
out
test
adc
push
push
dec
add
aad
inc
pop
cmp
xchg
pop
and
inc
mov
aaa
push
incl
dec
mov
mov
mov
push
out
lcall
call
outsl
sar
jns
shrb
out
ret
dec
add
lds
and
push
in
pop
cmp
popa
or
pop
sub
dec
push
pop
ja
les
jg
xor
cmp
in
stc
test
stos
jnp
rclb
mov
sub
jmp
test
out
jae
or
rcrl
mov
xchg
inc
jge
fwait
push
xor
cmpsb
pop
nop
xchg
pushf
loope
les
cs
xor
lea
icebp
xor
aad
mov
pop
mov
ret
into
mov
mov
inc
add
mov
aam
mov
inc
aam
lods
loop
or
bound
mov
mov
insb
in
sub
xor
sub
jne
or
and
clc
add
aad
test
mov
xor
mov
dec
leave
push
or
push
lods
inc
sub
dec
clc
mov
lea
jae
add
xchg
adc
shlb
add
mov
into
add
sub
mov
inc
cli
cmp
or
mov
ss
xchg
cmp
cmp
lahf
dec
test
sbb
mov
cli
or
mov
outsb
xlat
jge
ljmp
dec
cld
std
mov
mov
sub
push
jns
sub
rcr
test
push
add
iret
sbb
fucomip
push
mov
push
adc
mov
ror
imul
xchg
cs
push
add
pop
mov
push
xlat
jge
and
mov
inc
shlb
inc
jge
mov
aaa
std
or
xor
mov
lret
repnz
jp
dec
push
ror
jo
dec
mov
sub
ljmp
sub
fdivrl
bound
cmp
push
xor
push
shrb
mov
inc
mov
mov
sbb
js
pop
dec
imul
and
jae
mov
outsl
add
jl
adc
into
loope
or
adc
movsb
sub
mov
inc
pop
and
fcompl
push
imul
fistl
pop
push
xor
xor
pusha
mov
mov
subb
sbb
adc
xor
outsl
lahf
adc
int
movsl
adc
dec
iret
in
cwtl
inc
test
sub
movsl
cs
movsb
xor
mov
add
sub
mov
mov
push
xor
fdivs
lds
sbb
clc
push
xchg
out
das
add
stos
ret
or
xor
in
divl
mov
or
mov
jmp
jae
jp
cltd
xchg
push
sub
mulb
pop
clc
mov
cwtl
stc
cld
scas
pusha
int
sbb
shrl
jae
push
loop
ja
mov
icebp
jae
js
jle
loope
pop
movsb
and
xor
call
and
dec
fs
mov
add
div
movl
jmp
pop
nop
jl
jge
and
jns
jb
adc
jno
jle
pop
xor
test
imul
xor
std
pop
ja
adc
aam
pop
xor
sub
xchg
imul
and
pop
test
jo
shlb
mov
cmpsl
mov
mov
aam
vhaddpd
xlat
jbe
sub
jecxz
shll
push
and
add
sub
mov
pop
dec
dec
pop
nop
mov
add
mov
and
stos
test
aaa
jnp
fildl
or
jle
std
xor
insb
ds
lcall
les
mov
test
mov
imul
xor
movsl
dec
cwtl
inc
xchg
inc
lret
rcll
sbb
test
stos
push
pop
mov
and
pushf
mov
in
in
cmpsl
and
bound
jg
popa
outsl
jl
add
sbb
bnd
mov
sti
pop
jnp
cmpsl
mov
cltd
xchg
lea
or
jecxz
imul
loope
into
sbb
push
das
roll
sti
jnp
add
mov
cli
push
pminub
cltd
xor
inc
push
inc
test
in
and
pusha
cmp
jae
sti
fdivp
les
shlb
rorl
ficompl
adc
testb
mov
outsl
push
lahf
sbbl
mov
in
outsb
bound
xlat
aaa
inc
mov
and
jge
daa
jmp
or
cmpsb
adc
inc
aad
push
les
loop
pusha
jns
nop
aad
or
adc
jp
shrb
pop
push
inc
hlt
popa
cltd
out
ss
mov
dec
das
ret
lock
loope
sub
xchg
and
fisubl
scas
mov
clc
xor
arpl
adc
bound
and
lods
jne
pushf
push
int3
xchg
xchg
daa
aam
mov
mov
inc
mov
hlt
subb
fbld
xchg
pop
jnp
dec
cmpsl
jo
push
movsl
mov
sbb
sub
test
cltd
push
mov
jno
or
lods
stc
pop
pop
mov
mov
lock
hlt
dec
loopne
cld
sbb
std
mov
sub
or
jns
aam
xchg
sti
mov
push
mov
js
mov
movsl
sub
mov
icebp
movsl
into
imul
jmp
arpl
xchg
adc
inc
push
and
fs
fisubrl
cwtl
xchg
rcll
std
and
or
add
inc
pushf
or
jae
aas
sbb
sbb
cmp
dec
fwait
aam
cmpb
fnstsw
cmp
data16
mov
cmp
pop
rcll
in
sub
xchg
loope
or
fs
adc
lea
sub
mov
in
popa
sahf
rclb
jo
out
cmp
pop
pop
xchg
dec
idivb
into
push
lret
jbe
dec
mov
ljmp
xchg
add
sbb
xchg
cmp
and
xchg
push
incl
inc
push
mov
sub
cmc
clc
mov
out
inc
lock
sbb
into
push
pop
cld
dec
xchg
or
jns
jp
ret
push
loopne
inc
aam
dec
add
movl
cmp
movl
je
movl
sub
lea
mov
sub
mov
not
jmp
inc
test
xchg
mov
rorb
into
or
jle
jno
jle
cmpsl
pop
dec
mov
push
jb
mov
add
sub
pop
arpl
and
jb
inc
das
mov
sarl
cwtl
pusha
int
jo
mov
mov
std
repz
jno
mov
call
inc
xchg
inc
jno
fidivrs
inc
and
ss
inc
in
std
leave
cmpsb
adc
imul
xchg
call
sbb
sbb
pusha
daa
lahf
xchg
push
mov
aas
fwait
mov
hlt
sub
cmc
jle,pn
mov
hlt
pmaxsw
into
push
iret
adc
mov
ret
push
ja
movsb
add
cmp
mov
je
xor
imul
mov
fucomi
or
popa
clc
push
clc
jns
and
push
stos
mov
mov
add
int3
in
in
shrl
push
inc
sti
imul
inc
lods
je
and
hlt
shl
ja
popa
cwtl
out
je
jns
decb
enter
add
mov
mov
popf
loopne
push
ror
ret
lahf
or
or
jbe
lock
repz
dec
pop
iret
int
aam
aam
push
jp
jle
es
leave
sbb
mov
and
and
cmp
cwtl
in
outsb
lahf
dec
out
out
mov
fwait
popl
rcrb
pop
lea
mov
negb
inc
pushf
pop
push
cmc
jp
int
jno
inc
out
mov
scas
mov
push
jecxz
dec
jle
xchg
or
adc
mov
pop
bound
jmp
jmp
mov
push
add
xchg
addr16
rolb
xchg
aaa
out
inc
xchg
pop
dec
ret
inc
pop
jbe
push
push
adc
push
adc
or
leave
or
fcoml
out
mov
xchg
cmpsb
add
and
sbb
lods
push
mov
inc
cld
lock
popl
aam
aas
add
fimull
popf
lcall
out
sahf
pop
pop
cmpsb
outsb
fmul
cmpsl
mov
int3
mov
push
dec
lret
mov
leave
dec
mov
jecxz
hlt
jl
in
lahf
add
out
pop
fildll
ret
pop
mov
jb
std
lahf
aad
mov
nop
mov
je
or
or
les
dec
loopne
jns
pop
pop
into
jns
mov
ljmp
cltd
pop
jl
mov
cwtl
gs
push
and
icebp
stos
mov
sbb
loope
insb
scas
mov
mov
mov
test
aam
jge
inc
iret
shll
adc
jns
sarl
pop
xchg
sbb
push
clc
lcall
aas
adc
clc
jl
push
orb
sub
add
sarl
loopne
pop
das
scas
push
out
pop
nop
out
fsubrp
xor
add
arpl
pop
loop
adc
ja
jns
popa
or
pop
lods
rcrl
pop
icebp
aas
push
or
add
icebp
or
adc
or
arpl
cwtl
ret
es
data16
xor
mov
loopne
push
or
jmp
mov
sub
ret
jns
mov
pop
fcoms
cmpl
or
loopne
sti
add
lret
pop
outsb
sub
mov
push
jl
mov
imul
movl
mov
movl
mov
cmp
movl
je
and
mov
jmp
inc
xchg
ljmp
dec
xchg
lahf
rcr
push
movd
jno
jle
idiv
ret
mov
pop
cltd
jbe
pop
jbe
jge
sahf
lret
cltd
jbe
xchg
jmp
mov
mov
push
aaa
enter
andl
push
fdivl
popa
or
shrl
sub
pop
idiv
test
xor
fcmovnb
jge
sub
cmp
hlt
mov
out
lds
repnz
push
sub
xor
xchg
push
lods
mov
cmp
dec
shrl
adc
jne
fdivs
outsl
jns
pop
nop
rorb
insl
fwait
cmp
push
popl
xchg
adc
icebp
or
lcall
or
pop
out
in
push
clc
lods
mov
lods
or
add
sub
xor
inc
lea
xchg
loop
mov
lea
push
loope
pusha
dec
and
mov
daa
pushf
mov
call
shll
mov
dec
fbld
pusha
mov
mov
jnp
jae
jmp
jle
test
movsb
mov
push
imul
ljmp
xlat
outsl
cmp
xchg
dec
aam
imulb
inc
out
lods
leave
cmp
sub
mov
pushf
mov
lea
movsl
mov
fsubrs
movsb
out
divl
cli
sub
mov
jl
divl
sub
inc
punpcklbw
out
sbb
lret
les
add
ja
fs
imul
outsl
in
mov
shll
popf
enter
lods
bound
add
fcompl
into
bsf
cmp
andb
int
add
ss
repnz
cmp
mov
insb
push
rcr
sahf
mov
cwtl
and
inc
orb
repnz
jns
and
sbb
ror
xchg
leave
xlat
sbb
roll
mov
xchg
sub
cwtl
repnz
jle
loop
fucomip
ret
push
iret
xorb
push
mov
enter
xchg
insl
cmp
sysexit
inc
enter
sarb
aaa
xor
pop
mov
fcoml
dec
inc
test
inc
cmp
mov
lock
lcall
adc
and
pop
sbb
xchg
xor
dec
xchg
out
jle
sbb
cwtl
testb
sub
ss
mov
faddp
imull
fs
mov
or
sbb
sbb
jecxz
pop
stos
fldcw
idivl
aad
mov
xlat
mov
dec
stos
push
cmp
mov
inc
clc
jae
int3
enter
add
icebp
das
test
mov
lahf
mov
loopne
adc
xchg
or
daa
inc
sub
or
loopne
shrl
xchg
xchg
pushf
ss
fisubrl
jo
je
push
mov
shrb
add
notl
les
inc
or
out
pop
and
xchg
outsb
ds
adc
push
mov
jg
push
push
pop
push
in
xchg
cmp
mov
insl
sahf
mov
jge
push
sub
lods
lock
ret
jae
xor
cld
adc
push
icebp
xchg
lahf
adc
scas
les
sub
push
mov
dec
divw
fs
icebp
adcb
icebp
adc
cmp
call
fistps
sbbl
push
flds
jmp
popf
orl
movl
cmpl
je
cmpl
jne
pushl
call
cmpl
jne
xor
xor
dec
mov
mov
dec
mov
jmp
mov
xor
add
pop
pop
pop
leave
ret
mov
add
cmp
je
jmp
clc
inc
adc
xchg
jge
pop
movsl
pop
dec
push
pop
in
add
add
xorb
push
mov
aas
push
jle
rol
int
stos
popf
andl
mov
test
mov
outsl
push
push
or
add
popa
and
loope
enter
xchg
fiaddl
inc
fildl
xor
xor
mov
and
dec
cmpsb
shlb
push
lret
fstl
mov
movsl
aas
jno
sbb
xor
jbe
xor
pop
idivb
pushf
lcall
stc
loop
call
or
jge
in
push
rorb
ja
lret
cld
movsb
mov
insb
ds
mov
cwtl
or
fldt
dec
jae
mov
testl
pop
push
sar
int
adc
lea
or
and
les
cmp
dec
dec
inc
mov
mov
or
inc
test
push
push
xchg
push
pop
mov
push
in
xor
xlat
lods
bound
cmp
add
jo
test
cld
leave
mov
rcl
mov
in
addr16
faddl
sbb
and
mov
pop
es
mov
les
adc
and
sub
popf
adc
lahf
cmp
mov
clc
cs
cmp
dec
push
cmc
adc
dec
fdivs
in
xor
mov
push
sbb
xchg
jb
fistpll
mov
or
jo
dec
push
xor
lret
rol
outsb
mov
cmp
xor
adc
fldl
pop
rcrl
fmuls
loope
dec
add
sbb
pop
mov
mov
repnz
stos
ds
sbb
cmp
jge
cmp
jle
mov
sbb
sar
sbb
pop
sbb
lcall
push
loopne
xchg
mov
pop
jge
lds
ret
xchg
pop
lret
adc
adc
xchg
push
leave
test
mov
cltd
pop
pop
push
sahf
push
mov
mov
in
sbb
lahf
into
ja
lahf
inc
aas
inc
adc
je
mov
or
outsb
outsl
repz
loopne
mov
rcrl
xor
xchg
cmpsb
outsl
pop
push
sub
test
imul
cmp
and
mov
jmp
pop
add
ja
shrl
inc
push
sub
stos
cmpsl
push
jmp
in
cmc
ret
sbb
sbbl
sbb
aam
sbb
jge
mov
mov
iret
cmp
cmpsl
xorl
mov
scas
push
aas
es
inc
pop
push
or
jle
push
clc
pop
dec
push
and
push
addl
adc
bound
shrl
push
lahf
mov
int
mov
test
stc
jp
movsb
push
pop
arpl
adc
stos
mov
xchg
xchg
lock
jl
jl
push
cwtl
das
xchg
jno
xchg
cmpsl
inc
fsts
or
ljmp
push
pop
jne
add
hlt
push
out
xor
dec
sub
mov
imul
lock
roll
push
imul
es
xlat
rcrb
and
ljmp
mov
mov
sub
jg
bound
andl
jmp
mov
mov
or
cmp
je
mov
xorl
jmp
jmp
adc
repnz
mov
test
inc
mov
pop
jle
xorb
and
push
incb
test
cltd
lods
xchg
mov
aaa
mov
mov
jnp
icebp
push
push
push
leave
ljmp
mov
or
mov
paddusb
sbb
push
mov
andl
adc
test
stos
test
fnsave
dec
fwait
jae
lds
or
push
test
push
inc
mov
incb
pushf
lods
mov
inc
and
pop
fwait
ja
jmp
lcall
subl
and
or
fisubs
insb
mov
jne
jbe
insb
dec
jo
data16
xor
mov
xor
loopne
jl
and
jmp
lahf
jae
stos
lods
into
gs
es
add
xchg
cwtl
mov
lea
push
and
mov
inc
clc
pop
jge
xlat
xor
shl
mov
jl
insb
sbb
stos
test
fmul
jno
xchg
cmp
push
sbbl
test
lock
mov
pop
fs
les
or
sbb
xchg
out
movsl
xor
mov
dec
stc
sti
lea
inc
mov
xor
nop
pop
pop
lahf
cmpsb
xor
jno
sub
xchg
out
hlt
pop
arpl
adc
stos
jl
and
xor
gs
inc
jo
jle
sbbb
testb
push
jmp
jl
ss
push
sbb
mov
mov
xchg
cs
rcl
jp
out
xor
test
ja
pop
hlt
push
mov
push
and
call
pop
outsl
fwait
xor
xchg
imul
mov
loope
nop
mov
xchg
jnp
subl
sbb
and
cmpl
cmc
sub
pop
clc
into
push
sbb
arpl
jge
sbb
mov
or
aad
dec
add
push
fisttps
sub
mov
mov
daa
xchg
stc
jecxz
lahf
pop
orb
and
xor
test
icebp
mov
out
push
pop
jmp
dec
mov
push
dec
cmp
aad
out
mov
inc
test
imul
mov
sbb
shlb
xchg
or
aad
xor
test
push
pop
ja
stos
and
shl
fisubl
and
dec
mov
shrb
inc
or
int
dec
add
mov
cmc
mov
scas
jmp
adc
cli
pop
and
xor
mov
aam
and
add
mov
inc
adc
shrl
rcrb
loopne
pop
cmp
and
sub
in
mov
push
dec
mov
add
and
test
in
or
dec
aas
jb
ds
mov
or
pop
push
fildl
add
popa
add
filds
add
test
out
call
cmpl
lds
mov
sbb
dec
insb
mov
lds
push
sub
push
ja
mov
push
rcll
inc
jp
rcl
mov
std
fcomps
jecxz
repz
pop
lea
mov
sahf
mov
xor
mov
andb
mulb
inc
cld
jmp
jl
sub
jge
jge
inc
sbb
fneni(8087
xor
sahf
sbb
xorb
lea
mov
and
pushf
aas
loopne
mov
push
ds
inc
lahf
jmp
ret
sbb
mov
dec
and
test
cmp
in
stos
shll
jo
mov
or
xchg
sub
jge
xor
lods
push
push
inc
mov
adc
sub
cmp
loop
js
xchg
sub
hlt
lods
sub
push
out
mov
mov
cmp
aaa
xorb
out
int
jbe
lahf
sbb
out
xchg
and
daa
rorb
and
xor
sub
je
shll
repz
aas
cmp
or
sbb
imull
mov
std
xchg
das
in
mov
movsb
jmp
adc
jnp
xlat
push
mov
ja
setae
rolb
and
out
cwtl
sub
out
jbe
gs
fs
sub
mov
or
jb
in
out
imul
insl
pushf
adc
aaa
add
fisubl
leave
sub
dec
nop
lret
repz
test
sub
sub
xor
imul
nop
add
lcall
xor
mov
es
and
dec
pushf
stc
jne
or
pop
mov
add
add
inc
lods
in
cmpsl
and
out
push
and
aas
cmp
dec
gs
mov
cmp
xchg
xchg
mov
stc
mov
out
inc
scas
xlat
loopne
xchg
std
and
jne
test
sti
push
sbb
and
iret
outsb
into
adc
dec
xor
jb
xor
js
arpl
rcrl
push
popa
in
mov
sub
xlat
xchg
in
cmp
out
rorb
movsl
aam
fistps
push
mov
mov
push
sub
jbe
cmp
inc
lds
movsb
bound
imul
lret
ret
data16
inc
xlat
mov
je
iret
adc
dec
sbb
icebp
scas
push
adc
jp
fstl
mov
add
push
and
xchg
inc
xor
xor
and
out
pop
je
pop
in
push
xor
and
push
mov
data16
rcrl
fdivs
outsl
adc
icebp
or
lock
pop
pop
fimuls
or
jbe
adc
push
push
clc
les
lea
mov
mov
inc
jg
dec
faddl
movsl
pop
mov
push
repnz
push
andl
filds
push
mov
xchg
mov
xchg
ret
adc
sub
mov
cmp
test
dec
sub
dec
nop
mov
pop
rcrl
addr16
ljmp
rorl
gs
fidivrs
shr
outsl
or
inc
pop
int3
mov
sub
xchg
fwait
mov
jbe
out
std
or
fsts
mov
enter
adc
xor
cmc
cwtl
jo
xchg
pop
inc
lds
sub
jae
test
jmp
fldl
mov
inc
out
fwait
loope
ds
ljmp
arpl
inc
mov
imul
lods
and
les
push
jno
push
inc
xchg
inc
cmpsl
dec
scas
loopne
scas
mov
mov
mov
xor
jmp
nop
cltd
fstl
xlat
push
mov
mulb
jle
xorb
hlt
jb
js
mov
sub
dec
mov
sbb
cs
repz
popa
test
lods
push
cli
loopne
inc
andb
scas
jg
shlb
cmpsl
hlt
sub
lds
je
mov
in
ret
cwtl
shr
nop
jo
mov
in
in
lahf
repz
push
int3
jmp
scas
jno
popf
pop
jle
insl
push
aam
loop
sti
push
loop
xor
cmp
jbe
mov
dec
outsb
xor
mov
mov
lock
js
mov
sub
sbbl
mov
push
imul
mov
fdivrl
mov
rcr
dec
jo
aaa
outsl
dec
mov
filds
ljmp
mov
dec
inc
lock
repz
mov
mov
sub
push
ret
aaa
imul
loop
orb
movsb
sub
pusha
pusha
sbb
fmull
es
mov
jp
add
lret
push
pop
out
into
sub
dec
inc
dec
out
mov
movsb
sub
sbb
fbstp
xor
or
lock
push
cmpsb
gs
xor
xor
pop
mov
mov
mov
push
std
cltd
in
xor
pop
movsb
dec
hlt
mov
pop
pop
in
lret
cmpb
mov
clc
ja
xor
sub
adc
sahf
sarb
xchg
cmp
xchg
mov
pop
sbb
add
cwtl
xchg
jle
xchg
jl
inc
inc
test
loope
inc
cmc
dec
enter
push
dec
shlb
mov
sti
sti
lea
aad
xchg
dec
rcrl
pusha
sub
ret
mov
sbb
incl
shl
loop
cli
push
cmc
movsb
mov
and
fiaddl
pop
loope
outsb
addr16
aad
xchg
shr
add
jne
jge
rcll
lret
inc
stos
pop
sbb
test
push
adc
cmp
sbb
jl
les
xchg
jnp
and
xor
jl
lea
hlt
jecxz
xor
fdivrl
xchg
pop
jl
pop
xchg
pop
xor
mov
cmp
dec
ror
add
mov
addr16
stc
pop
fs
fstps
lea
daa
dec
out
bound
dec
fisubl
ds
leave
sbb
inc
mov
les
les
shlb
rcrb
mov
pop
jno
sbb
loopne
out
jo
int3
ja
mov
loope
test
pop
cmp
pop
xlat
rorb
inc
mov
insb
repz
mov
in
inc
or
push
shrl
inc
leave
scas
popa
push
sub
xchg
pop
ss
out
out
pop
mulb
jp
pop
mov
cmp
ficompl
push
cwtl
dec
or
sbb
push
imul
data16
rcll
or
mov
loope
rcl
inc
cmp
sbb
jne
pushf
dec
inc
fwait
loope
adc
clc
sub
adc
jmp
lods
lods
pop
testb
push
jb
pop
jp
jnp
add
xor
mov
mov
jno
daa
addr16
mov
sub
jecxz
push
lds
stos
adc
stos
add
jg
popa
mov
add
cmp
je
mov
xor
add
mov
mov
mov
mov
xor
add
movzwl
mov
xor
lea
add
mov
mov
mov
xor
add
imul
sub
mov
jmp
mov
mov
xor
cmp
je
mov
addl
jmp
mov
cmp
je
mov
jmp
push
mov
sub
push
mov
andl
mov
mov
andl
jmp
xor
or
inc
mov
cmpl
jae
cmpl
jne
pushl
call
cmpl
jne
mov
inc
mov
jmp
movl
movl
mov
andl
mov
inc
mov
cmpl
jne
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
jmp
add
mov
xor
mov
xor
mov
or
add
adc
mov
mov
movl
cmpl
je
cmpl
jne
pushl
call
mov
dec
mov
jmp
adcl
xor
xor
add
mov
movl
movl
movl
andl
mov
inc
mov
cmpl
jne
push
push
push
call
cmpl
jb
adc
movl
or
movl
movl
xor
movl
mov
xor
mov
add
cmp
movl
je
movl
push
movl
jmp
mov
mov
sub
or
mov
sub
mov
xorl
sub
andl
mov
inc
mov
cmpl
jne
pushl
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
movl
mov
andl
xor
xorl
add
movl
cmp
movl
jb
addl
mov
add
mov
xor
add
and
mov
xor
andl
mov
inc
mov
cmpl
jne
pushl
push
call
cmpl
jb
sbbl
xor
add
movl
cmpl
je
cmpl
jne
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
sbbl
add
sbbl
imul
xor
mov
add
mov
sub
movl
cmp
movl
ja
mov
xor
orl
add
jmp
mov
mov
xor
xor
mov
adc
add
add
imul
mov
sbb
mov
or
mov
sub
cmp
ja
jmp
ljmp
insl
imul
aam
adc
mov
jle
inc
xor
xchg
sub
shrb
es
jmp
lock
vphadduwq
cli
je
imul
shlb
mov
cmp
and
xchg
pop
ljmp
imul
adc
adc
jp
mov
das
cltd
jbe
mov
dec
ret
movsl
lods
or
dec
xor
sbb
mov
inc
aaa
xor
arpl
xchg
lods
mov
ret
stos
push
dec
and
xchg
iret
lahf
add
stos
das
pop
cmp
ficompl
pop
into
scas
cmpsb
add
mov
inc
ljmp
adc
cmp
cmp
lret
sub
movsl
jae
fdivs
add
xor
cmp
or
push
xchg
add
mov
lds
mov
imul
movsb
jecxz
in
pop
in
lret
sub
xchg
imul
lcall
jnp
shrb
mov
fwait
mov
dec
clc
pushf
dec
dec
popl
dec
add
mov
ja
sti
insb
cltd
cmpsl
push
subl
hlt
xchg
test
fnstcw
mov
aas
or
inc
push
dec
mov
mov
pop
movl
incb
mov
mov
test
jns
cwtl
data16
js
mov
xchg
insl
xchg
loop
cmp
arpl
ljmp
jmp
imul
push
rorb
xor
add
add
imul
mov
mov
sub
cmp
ja
jmp
rorb
push
mov
push
stos
mov
cmp
ret
adc
mov
jle
push
xchg
xlat
fwait
sti
adc
loop
mov
sub
jmp
or
push
cmp
xlat
rcl
aaa
faddl
jb
dec
add
push
pop
adc
cli
ss
aam
jge
enter
lods
xchg
pop
push
stos
push
jge
adc
mov
cli
lock
loop
and
dec
pop
xchg
sti
arpl
insl
cmp
push
or
mov
pushf
stos
sbb
jmp
lods
push
sub
mov
into
jne
out
push
dec
rorb
or
and
std
adc
inc
lcall
add
and
cwtl
ffreep
mov
or
sub
ja
fistl
sub
push
bound
or
fwait
insl
dec
lods
sti
shr
fdivl
cmp
cmp
and
inc
outsl
jne
or
popf
mov
xchg
sub
push
iret
idivl
mov
or
in
mov
je
adc
sbb
cmp
scas
xlat
mov
inc
pop
inc
sub
cmp
aas
xor
mov
popf
test
jbe
cmc
lret
shrb
add
cmp
fmulp
mov
push
stc
neg
mov
jl
lock
mov
stc
pop
popa
lods
dec
jmp
adc
inc
pop
test
mov
repz
xchg
and
shrb
pusha
std
mov
jmp
mov
mov
jmp
fs
popf
insl
pop
gs
xchg
popl
push
adc
jle
jg
jle
mov
mov
adc
int
jecxz
adc
and
movsb
dec
mov
mov
sub
push
push
jg
loopne
cmpsb
and
fcomps
sar
cmpsb
pop
out
out
push
lret
repnz
in
add
xchg
scas
fists
ja
mov
roll
loopne
ret
xchg
ret
and
pop
or
pop
roll
push
mov
adc
cld
cmpsl
sahf
push
cltd
test
shl
aas
cmp
dec
mov
or
cmp
out
shrb
loope
jo
out
cltd
ds
push
xlat
xor
mov
or
pop
mov
pop
sub
stos
mov
mov
push
xor
xor
mov
xchg
mov
enter
mov
imul
push
cmpl
ljmp
mov
bound
mov
js
aas
xchg
and
adc
fimuls
test
out
xor
paddusb
jb
jne
xchg
dec
je
xor
sbb
sbb
mov
fiadds
mov
inc
test
mov
das
into
jp
mov
iret
cmpb
popl
cmp
stos
lahf
repz
test
or
or
fisttpl
cld
insl
bound
loop
pop
cs
jmp
xchg
push
int3
jns
imul
push
cs
mov
jle
add
in
movsl
or
aas
jb
decb
sub
movsl
jp
dec
mov
inc
movsl
cmp
in
xchg
outsb
dec
mov
in
cmpsl
mov
ret
xchg
cld
repz
or
cmp
rorb
mov
inc
jne
sub
mov
enter
jg
dec
push
ja
sub
mov
ds
jp
lret
insb
daa
jae
lds
sub
cmp
jns
jp
hlt
jle
out
shrl
cmc
aaa
dec
in
mov
cmpsw
jp
inc
popa
mov
add
mov
and
mov
stos
inc
push
mov
push
int
stos
xchg
icebp
or
insl
ja
xlat
sarb
push
dec
enter
push
dec
popa
mov
fistps
sbb
pusha
test
jle
jb
adcl
or
outsl
mov
cmp
movsb
es
cli
jae
shlb
mov
jne
sub
sub
jecxz
popf
pop
loop
dec
xor
popa
pop
test
in
xchg
xchg
out
sub
or
inc
cmp
push
cs
subl
addb
mov
sub
push
fisubrs
pusha
inc
inc
sbb
xorb
dec
arpl
ja
or
pop
pushf
cld
cld
popf
push
test
push
inc
ds
lea
push
xlat
cmpsb
imul
cli
push
ret
dec
adc
aam
jbe
iret
sub
add
add
imul
mov
mov
sub
cmp
ja
mov
jmp
mov
mov
xor
xor
add
add
imul
mov
mov
sub
cmp
ja
jmp
hlt
mov
add
pop
mov
xchg
jp
jle
mov
jle
dec
test
jb
in
in
clc
jns
pop
stc
mov
scas
ret
hlt
shll
pop
lds
aad
sub
adc
scas
lcall
push
ljmp
popf
test
push
mov
cmp
lcall
push
sbb
std
lods
inc
cltd
and
test
push
out
leave
xchg
sbb
jl
inc
shrl
mov
fdivrl
cwtl
es
ljmp
insb
push
dec
cmp
repnz
lret
arpl
lret
jg
stos
mov
insl
ret
fcmovnbe
and
sbb
jb
aad
jmp
shll
sbb
inc
outsb
scas
in
cmp
int
mov
repz
mov
lret
xchg
fdivr
inc
shrl
jge
dec
insl
ljmp
insb
mov
call
inc
sbb
sbb
dec
push
nop
int
inc
popa
xchg
in
push
ret
sbb
repnz
mov
mov
sbb
and
dec
rcr
mov
sub
mov
xor
js
stc
fxch
lmsw
jmp
test
iret
and
addr16
pop
aaa
inc
xor
sti
stos
sub
les
mov
leave
sub
push
xor
push
ret
mov
ss
push
add
js
inc
adc
into
out
loope
jge
cld
xlat
out
sub
leave
push
xorl
pop
ds
mov
inc
mov
jmp
mov
mov
xor
xor
add
add
imul
mov
mov
sub
cmp
mov
jbe
mov
mov
xor
xor
add
add
imul
mov
mov
mov
mov
add
movl
mov
movl
movl
mov
xor
add
jmp
mov
jmp
dec
push
dec
push
cmpsl
xor
outsb
xor
jle
mov
jle
push
cmp
ds
imul
bound
sbb
popa
mov
js
arpl
or
cmp
jns
nop
pusha
shr
mov
in
or
and
aad
sbb
aad
dec
pop
ds
cmpsb
ret
ja
fdivrp
cmpsl
stc
test
adc
aad
mov
rolb
andl
lea
fiaddl
icebp
std
mov
jmp
pushf
insl
dec
and
inc
fldcw
ss
inc
sahf
movsb
dec
adcl
dec
push
daa
jnp
aam
or
movaps
addr16
jo
adc
stc
aaa
pop
fistpl
or
enter
pop
dec
sbb
cmp
sbb
mov
loopne
mov
push
sbb
mov
sbb
out
or
stos
rcl
jae
mov
data16
dec
pop
out
dec
test
scas
add
push
movsl
mov
aad
outsb
inc
bnd
pop
add
clc
adc
dec
sarb
inc
mov
inc
fwait
sub
call
push
ss
movb
pop
jo
jbe
std
xor
push
xchg
pop
or
inc
sarl
push
sbb
xchg
loope
pop
mov
jb
mov
cmpsl
into
jae
sub
adc
incl
ljmp
sbb
inc
or
and
inc
push
andb
sub
inc
out
in
scas
xor
lds
adc
mov
add
mov
mov
mov
mov
jmp
andb
addw
addb
jle
jg
jle
cld
dec
test
jb
jno
roll
lret
fimull
ss
sbb
push
jae
mov
add
inc
outsl
sarb
cmp
and
xorl
imul
and
sub
pop
jbe
push
pusha
ret
or
inc
paddq
lock
aas
ret
aaa
sbb
xchg
cwtl
das
dec
addb
movsl
testb
inc
sbb
scas
mov
into
add
sbb
fadds
jns
sarl
cs
movsb
aam
jmp
mov
imul
mov
mov
lahf
or
fistpl
sti
adc
cmp
jnp
sahf
imul
xor
clc
adc
mov
out
pop
std
mov
dec
inc
dec
loop
fsts
fldenv
shrl
shl
shrb
adc
int
nop
pop
add
outsl
adc
dec
or
adc
pop
sub
mov
daa
mov
cli
faddl
cwtl
negl
addl
or
popf
outsb
ret
fistpl
push
sub
push
outsb
cwtl
jbe
pop
rclb
cmp
mov
pop
sub
push
and
push
icebp
pop
sbb
fimull
jo
std
fmull
add
jg
negl
lret
popf
dec
in
std
inc
mov
cmpb
push
cmpb
inc
ret
rolb
push
in
jmp
test
xor
push
mov
xor
sub
jle
jg
jle
std
stc
xor
xchg
cmpsl
mov
lods
jne
xchg
icebp
popa
shlb
inc
xor
lock
or
pop
xchg
stc
outsl
push
loopne
push
pop
lret
iret
and
push
xor
std
out
jo
sub
mov
xchg
js
pop
or
rol
scas
scas
push
mov
mov
loop
pop
inc
jns
pop
mov
xchg
mov
jmp
in
or
aam
sbb
jmp
or
fst
push
xchg
sahf
adc
ljmp
lods
test
jb
mov
js
jne
add
xor
insl
jecxz
repnz
pushf
push
cltd
or
mov
jo
or
cmc
xor
bnd
cld
xchg
lret
push
xchg
scas
inc
mov
int3
push
xor
jle
jecxz
popf
mov
pop
adc
stos
or
pop
rol
lods
push
daa
in
sub
out
xchg
ret
cmpl
mov
sub
adc
lcall
rcrl
arpl
pop
cld
in
pop
hlt
stos
int
sub
push
test
jp
ret
push
das
bound
pusha
mov
test
xor
sbb
mov
fs
adc
repz
xor
movsl
out
shrb
pop
fistl
outsl
repz
shrb
jne
jecxz
cmpl
fcompl
mov
out
imul
insl
loopne
pop
in
mov
mov
mov
mov
mov
xor
add
jmp
in
push
adc
movsl
aas
push
adc
add
jle,pn
mov
jle
call
lret
ljmp
xor
sbb
xor
jo
mov
cmp
sbb
mov
ljmp
movsb
cmp
jp
stc
jle
push
dec
mov
rorl
lret
cmp
push
and
andb
jp
jno
xor
repz
out
mov
popf
orl
add
nop
data16
data16
jp
or
xchg
arpl
add
adc
push
pop
or
add
movsb
dec
push
mov
scas
test
pop
rclb
das
stc
js
stos
imul
popa
add
mov
sub
divb
addb
push
movsb
adc
cltd
inc
outsb
pop
int3
sahf
pop
lds
push
mov
out
test
push
aad
arpl
dec
xchg
mov
aad
pop
repnz
xor
pop
aam
ja
mov
mov
add
into
sub
in
adc
cmp
lret
mov
pop
mov
dec
test
inc
and
inc
xchg
inc
loope
push
inc
add
add
out
sub
lahf
jnp
inc
in
and
jmp
dec
xchg
call
mov
dec
mov
je
insl
rclb
xchg
lahf
nop
scas
mov
inc
inc
gs
hlt
mov
push
push
push
mov
mov
mov
mov
xor
add
mov
mov
mov
mov
xor
xor
add
add
imul
add
mov
mov
mov
xor
add
imul
mov
xor
sub
mov
mov
jmp
testl
xchg
and
icebp
pop
idivb
jg
jle
sete
inc
ss
pop
xchg
and
aas
mov
cmp
cwtl
add
addr16
in
adc
cmpsb
xor
nop
rorl
in
jne
mov
faddp
pop
mov
push
pop
out
pop
je
call
mov
jnp
cltd
push
mov
scas
sub
xchg
je
movsl
sarb
and
inc
inc
sbb
and
daa
mov
hlt
fnstenv
add
sub
dec
lods
bound
xor
jne
ja
loop
mov
pop
pop
mov
cwtl
inc
test
push
jno
add
jno
or
mov
scas
push
cld
stc
dec
inc
mov
cmc
aas
fs
fistps
and
mov
stos
int3
pop
flds
ss
call
cmpsb
out
jne
addr16
fdivrp
jo
jp
mov
sub
mov
mov
mov
lods
pop
aad
jmp
out
lcall
cmp
arpl
neg
rorl
lods
adcl
xor
test
pop
pop
mov
and
and
sarb
stos
call
push
mov
loope
pop
jl
push
movsb
mov
mov
sbbl
push
and
mov
push
dec
xor
adc
xchg
sbb
inc
sub
add
inc
sub
incb
imul
clc
add
imul
jmp
mov
jns
dec
mov
icebp
pop
ljmp
jle
imul
jae
pop
xchg
out
cmp
dec
in
and
mov
es
mov
inc
mov
xorb
sub
sbb
add
jae
daa
and
xchg
xlat
and
das
repz
xor
xor
out
aam
sub
stos
std
jns
xlat
add
add
xchg
xor
xchg
test
repz
push
outsb
push
lock
es
popa
mov
in
mov
leave
xor
das
aam
and
xchg
call
aam
ret
ret
es
flds
and
int3
fadds
test
ds
add
push
adc
insb
mov
and
repnz
repnz
mov
mov
push
push
sbb
rcrb
add
mov
stc
adc
xor
or
fnstsw
pop
shr
outsl
push
repz
push
in
test
add
enter
xor
lret
sysenter
lods
adc
test
dec
lock
dec
sub
fcompl
lock
fcmovnbe
ljmp
insb
mov
das
lods
fmul
xchg
dec
lahf
push
mov
repz
ret
aaa
adc
push
shlb
in
jae
jno
addr16
dec
repnz
jle
hlt
cmp
addr16
test
test
mov
pusha
xorl
in
xchg
dec
das
and
mov
xor
sub
lea
cmp
jbe
mov
mov
xor
add
jmp
pop
mov
sbb
or
mov
and
mov
jle
dec
call
push
iret
add
pop
cmpsb
aaa
mov
rclb
mov
jno
daa
and
ss
lock
int3
sti
jle
jle
mov
jne
lods
enter
push
push
jmp
mov
xlat
ja
jb
ret
frstor
nop
push
jne
mov
das
in
or
xchg
fisttpll
mov
xorb
dec
jne
sub
push
in
jns
cmp
or
adc
cld
pop
sbb
push
sub
subl
adc
cmp
movsb
pop
push
pop
push
fidivrs
addl
lods
movsl
jne
add
push
inc
cli
adc
loope
or
jp
loope
sarl
aam
les
mov
cmp
dec
out
cltd
push
cmpsb
push
pop
arpl
shll
xor
mov
or
xchg
ror
xchg
cmp
sti
int
and
mov
pop
stc
inc
xlat
stos
xchg
iret
ss
ss
pop
inc
xor
push
div
mov
jg
cld
push
add
sub
sarb
adc
inc
into
insb
ss
out
mov
fwait
adc
sarb
mov
sti
jg
imul
inc
jnp
mov
pop
lods
inc
xchg
adc
mov
xchg
mov
data16
pop
orl
inc
sub
jnp
sarl
inc
sub
enter
movsl
push
cmc
sbb
iret
pop
imul
mov
xor
add
mov
lea
mov
mov
xor
mov
sub
add
mov
mov
xor
add
imul
cmp
jbe
pop
pop
leave
ret
push
mov
push
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
pushl
push
pushl
push
call
cmpl
jne
mov
inc
mov
jmp
mov
xor
add
sub
or
push
or
mov
sbb
mov
movzbl
add
movl
andl
mov
inc
mov
cmpl
jne
pushl
push
call
cmpl
jb
andl
mov
inc
mov
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
push
mov
xor
mov
push
mov
add
jmp
sub
in
cmpsl
insl
ret
mov
xchg
and
jle
jno
jle
pop
imul
add
shlb
xor
jne
andl
xchg
ss
out
fs
add
hlt
es
dec
ss
jmp
cld
sbbb
adc
pop
mov
xchg
gs
mov
jl
int
jo
add
mov
sub
sub
pop
aam
int3
mov
adc
push
push
fwait
xchg
jns
arpl
das
aam
and
ljmp
gs
pop
das
adc
xlat
jbe
cmc
int3
inc
mov
lock
push
pop
pop
sub
mov
push
inc
in
dec
pop
mov
mov
jne
adc
into
cli
es
mov
les
mov
icebp
ljmp
addr16
mov
aas
push
clc
stc
fucomi
mov
pop
xchg
jl
adcl
mov
mov
mov
jmp
into
nop
pop
repz
cld
outsl
jmp
add
dec
lcall
sub
outsl
lret
mov
cld
xchg
jo
xor
icebp
lods
out
popf
test
loope
les
adc
jle
test
lea
add
cmp
movsb
in
test
int
mov
loopne
outsb
jp
adc
adc
mov
add
out
test
pop
inc
add
dec
sbb
mov
imul
jb,pn
and
stos
mov
je
jae
das
pop
pushf
enter
aas
popa
xchg
into
sahf
into
js
jmp
push
push
mov
add
jmp
add
mov
lcall
sub
ss
jl
jle
mov
sbb
jae
adc
xor
dec
lret
inc
in
push
pop
xor
gs
xchg
fidivrl
mov
test
aas
pushf
and
jp
cmp
mov
or
insl
rclb
mov
mov
pop
dec
or
mov
out
add
pop
shl
insl
mov
mov
push
lock
pop
push
pop
lret
pop
adc
lods
movsb
push
ret
outsb
cmpsb
je
das
pushl
jl
xchg
in
enter
xchg
mov
adc
and
into
or
int
jne
lret
outsb
adc
sbb
cmpsb
inc
add
imul
and
hlt
pop
ja
movsb
ja
xchg
std
sbb
mov
fwait
mov
dec
out
or
sysret
pusha
mov
lahf
xchg
out
jnp
fldl
pop
outsl
pop
or
sbb
mov
mov
and
mov
les
push
mov
lret
and
cmp
aam
shl
test
mov
push
iret
mov
cmp
scas
fdivs
and
mov
test
into
add
xchg
add
hlt
loop
adc
aad
and
xchg
insl
or
mov
popl
push
movsl
leave
adc
push
bound
scas
and
fldenv
xchg
xor
jne
int3
pop
mov
jno
mov
adc
call
loopne
pushf
lahf
out
mov
pushf
jle
dec
push
rorl
jl
divps
mov
or
loop
jb
fistpll
lea
ds
sub
inc
mov
mov
xor
scas
stos
push
adc
jp
lret
mov
xchg
mov
dec
sbb
les
xor
jmp
mov
mov
cli
je
mov
mov
xor
mov
jmp
cmpsb
loop
fmuls
jge
xor
movsl
adc
jle
mov
or
subb
adc
jg
and
les
pop
xchg
into
add
push
ljmp
ror
or
sbb
xor
mov
fimuls
cmp
add
inc
or
cli
pusha
adc
sub
popa
xor
inc
xchg
or
dec
adc
jno
int3
arpl
cwtl
popf
pop
lods
push
xor
inc
xchg
add
mov
in
xchg
ja
pop
mov
rorb
das
int
loop
cmpsb
jle
lods
lret
mov
mov
aas
movl
push
stc
push
into
and
es
icebp
mov
xchg
lods
or
orb
pop
sbb
dec
enter
sbbl
rorl
adc
or
adcl
out
bnd
mov
xchg
stc
addr16
cmp
ret
jg
loop
outsl
stc
jbe
fidivrl
push
push
adc
mov
sahf
xchg
leave
mov
and
inc
sbb
sub
add
and
adc
fs
cmpsb
cmp
xor
jb
sub
mov
test
mov
bound
sbb
sbb
mov
mov
into
add
imul
dec
and
mov
push
mov
es
mov
fnstenv
in
mov
push
mov
dec
xor
xor
aaa
mov
and
mov
fistpll
sbb
addr16
xchg
adc
xor
cli
sub
fsubrs
enter
mov
jge
inc
js
addl
push
cmp
add
ja
jne
into
jmp
stc
mov
ret
into
in
jae
aas
mov
add
xchg
popf
xor
std
cmpsl
out
arpl
cmpsb
jmp
cmpl
xchg
add
jns
lret
push
cmpsl
xor
in
xor
jnp
test
pop
inc
xor
fidivs
cmpsb
jmp
jb
add
ret
jecxz
mov
mov
ds
repz
ret
out
adc
xchg
lock
mov
cmp
mov
icebp
push
push
push
mov
andl
sbb
push
notb
fnstenv
xchg
nop
inc
add
cmpsl
mov
outsb
push
dec
sbb
jle
popf
int3
stos
and
in
mov
mov
mov
xor
xchg
pusha
xor
xchg
orl
add
xchg
mov
mov
pop
lds
xor
mov
es
in
in
sub
xor
inc
and
fcom
cld
pop
insb
cli
stc
sbb
sub
dec
sbb
mov
out
xor
and
mov
out
std
loope
fs
cltd
push
shrb
pusha
pop
outsl
idivl
popf
xlat
jmp
roll
outsb
inc
imul
popa
xlat
mov
jns
dec
xor
adc
xchg
cmp
sub
pop
in
mov
icebp
out
jns
mov
mov
jns
sub
sbb
in
andb
and
and
mov
xor
jecxz
push
rcll
ss
pop
insb
loope
inc
jecxz
adc
dec
inc
xchg
mov
pop
or
in
cmp
pop
adc
lret
insl
pop
ds
push
ljmp
movsb
dec
imul
lods
jae
add
mov
cltd
scas
xor
clc
add
xor
add
cmp
ja
push
jmp
mov
mov
mov
xor
jmp
testl
arpl
add
push
cmp
mov
or
lret
enter
out
pop
hlt
aad
outsb
xchg
js
mov
int3
lret
popf
pop
scas
and
outsl
loopne
in
sbb
ja
stos
xchg
imul
push
cmp
fstp
push
mov
jge
pop
add
push
out
inc
and
jp
push
mov
and
mov
sub
popa
inc
dec
pusha
sahf
ret
xchg
xchg
enter
movsb
jbe
add
test
adc
jle
xlat
dec
add
jl
push
mov
fsubrs
sub
ljmp
xor
insb
dec
cs
loope
fcmove
mov
xchg
pusha
and
push
mov
call
add
and
out
mov
test
fs
cmp
mov
enter
dec
cmp
jbe
loopne
sbb
insb
aad
push
adc
jb
data16
fbstp
xlat
xor
repz
cltd
push
push
dec
scas
ret
jge
push
dec
xchg
aaa
cmpsl
mov
mov
jae
inc
and
fistl
scas
sarl
xchg
jnp
jle
push
inc
lret
stc
data16
insb
fwait
xchg
cmp
clc
pop
sbb
jl
adc
sti
das
fmull
mov
xor
add
push
mov
sbb
pop
add
lret
popa
stos
add
loope
movsl
sbb
outsb
sub
sti
xchg
inc
imul
cs
popw
adc
pop
gs
test
push
cmp
out
mov
jns
cmp
push
test
loopne
out
jo
jno
test
and
dec
pop
outsb
push
rorl
stos
imul
movsb
xor
push
sub
cmp
outsb
mov
pop
popa
decl
loope
push
movsl
cs
adc
mov
sbb
fdivs
clc
cmp
imul
ret
xchg
out
insb
fdivl
cmp
les
pop
inc
and
sbb
and
mov
pop
inc
repz
out
outsl
mov
decb
xor
or
rcl
out
cli
push
incl
inc
dec
or
or
pop
lahf
rcll
jne
xor
add
jge
pop
fs
xor
inc
adc
mov
sbb
cltd
lret
lds
lods
dec
sbb
jmp
cltd
and
insl
je
lock
notl
js
mov
mov
sbb
lea
sub
cmp
jo
mov
sbb
fisttpl
pop
vprotd
pop
addr16
shlb
mov
into
imul
int3
pop
dec
addr16
js
jns
les
inc
jmp
mov
sub
or
arpl
addr16
inc
push
arpl
add
lds
mov
or
jb
mov
xchg
stos
pop
fwait
add
mov
sub
js
mov
jno
fcomps
push
shrl
mov
xor
or
and
jne
shlb
add
mov
in
test
call
add
fucomip
orl
int3
mov
mov
pop
outsl
shlb
mov
pop
xor
pop
ss
xchg
inc
pop
test
xchg
xchg
stos
setg
pop
cmp
cmpsl
ljmp
sbb
out
test
data16
mov
lret
data16
decb
cli
mov
xor
add
mov
mov
mov
xor
lea
mov
xor
mov
sub
add
cmp
jmp
fdiv
es
jge
jge
jae
dec
pusha
jle
xchg
push
lahf
aas
jle
mov
outsl
jle
xlat
daa
inc
negb
ljmp
xor
cmpsb
in
outsb
cld
insb
cmpsb
popf
hlt
inc
dec
xchg
push
dec
xchg
repz
push
cmp
adc
test
xchg
pop
movsb
add
mov
in
xchg
adc
cmp
data16
lds
add
and
sub
jno
pop
shl
gs
mov
and
fmuls
dec
jns
lcall
dec
mov
call
test
stos
stc
adc
mov
inc
cmovb
test
mov
jp
dec
mov
xchg
rcrl
mov
cwtl
bound
ficomps
xor
cmp
js
out
bound
dec
test
out
mov
xchg
push
mov
push
pop
inc
addr16
call
dec
lods
adc
dec
fisubrl
jecxz
jbe
lea
lods
jns
add
lods
fdivl
xchg
sbb
testb
sbb
xor
pushf
pushf
repz
inc
adc
test
insb
out
test
cs
test
es
test
add
cmpsb
das
jnp
sub
adc
dec
lahf
lret
mov
jno
push
cli
pop
aam
stos
test
das
sbb
jae
adc
mov
movsb
lods
aam
cmp
ret
scas
je
jecxz
movsl
jb
das
push
xor
aas
cs
fistl
mov
call
movsl
jae
clc
scas
movsb
cmpl
in
movsl
in
xchg
sub
xorl
pop
std
mov
add
fadds
add
and
xchg
push
push
enter
xchg
push
cmp
jg
subl
mov
push
aaa
test
fistpl
movsl
insb
daa
iret
sub
ret
in
fistps
xor
dec
out
push
or
frstor
dec
loop
xor
shr
cmp
imul
jg
inc
cwtl
mov
mov
arpl
imul
xchg
icebp
xchg
lret
xchg
jecxz
inc
lret
mov
mov
fnstsw
sub
ja
mov
out
cmp
int3
jmp
ljmp
pop
in
pop
adc
mov
sub
popa
push
insb
adc
js
notb
div
test
dec
sti
ss
mov
sub
pop
add
mov
xchg
ja
pushf
rcll
scas
div
outsb
mov
xor
lcall
xchg
popf
shll
mov
push
mov
outsl
dec
push
in
sbb
add
jno
test
xor
sti
imul
out
nop
adc
cld
mov
jg
loop
cld
push
pop
push
cld
int3
jb
gs
imul
call
insb
repnz
jl
jg
and
push
jmp
popf
imul
mov
jbe
dec
add
mov
test
mov
dec
fists
ret
in
das
cmp
out
test
mov
cwtl
pop
cmp
mov
inc
and
mov
jmp
or
fcompl
jno
push
mov
inc
jg
mov
sbb
pop
test
mov
or
and
adc
sub
and
pop
push
mov
lods
sub
xor
movsb
sbb
in
pop
nop
cmpsb
and
lds
inc
lret
push
lds
cmpb
bound
xchg
dec
and
mov
lea
and
push
sub
sahf
and
pop
jbe
pop
mov
pop
pop
leave
ret
push
mov
mov
add
mov
xor
sub
incl
mov
push
sbbl
mov
xor
movl
cmp
movl
je
mov
decl
jmp
fcmovnb
dec
filds
jnp
cmp
fidivs
jle
jmp
jle
inc
cli
lret
mov
mov
fwait
mov
movsb
cmc
and
push
shl
es
dec
xchg
cwtl
mov
movsl
sub
iret
push
sub
lret
fcompl
shll
push
jge
pop
mov
loope
arpl
lock
xlat
push
lret
pop
xchg
dec
push
lods
xor
cmp
nop
jmp
inc
ljmp
orl
lcall
add
and
and
ficoms
jno
pop
mov
inc
xchg
movsb
bound
mov
cmp
popf
js
xchg
mov
sahf
bnd
dec
ficompl
adc
stos
xchg
inc
add
mov
mov
jne
popa
adc
and
pop
in
cmc
or
cmpsl
notl
jg
mov
mov
in
and
lds
or
imul
jmp
fldt
and
hlt
jmp
test
mov
mov
xchg
stos
in
call
and
mov
mov
je
enter
pop
cld
insb
test
fs
sti
push
xchg
inc
pop
jnp
dec
dec
push
adc
mov
mov
add
mov
fisttpll
adc
lock
mov
push
push
fcompl
leave
xor
add
icebp
iret
repz
jns
jge
movsb
adc
cltd
mov
mov
outsb
imul
cld
lods
scas
arpl
fadds
fiadds
dec
mov
pop
mov
je
jecxz
push
mov
cwtl
movsb
imul
lods
sbb
push
adc
push
out
push
sbb
cmpsb
sbb
scas
cli
ret
mov
mov
inc
add
mov
enter
jnp
push
dec
push
xchg
out
fnstsw
test
rcr
mov
cmp
mov
or
sbb
jmp
incl
xchg
mov
sti
xchg
loopne
inc
icebp
addr16
cs
jp
ss
jns
loope
mov
imul
mov
fldl
idivl
add
jno
or
push
mov
lcall
ss
popf
loop
rclb
add
pop
arpl
mov
pop
inc
outsb
xchg
jnp
mov
loope
jb
cwtl
push
add
dec
and
lcall
fwait
pop
jmp
pop
ja
scas
cmpsl
outsb
gs
cmp
xor
dec
inc
es
int
psubd
jns
in
xchg
punpcklbw
in
mov
aas
sbb
inc
dec
inc
sbb
aas
adcl
pop
je
cmp
inc
ds
loop
fistpl
rorb
cmpsb
mov
por
push
xlat
std
out
test
push
xchg
stos
rolb
out
add
cmp
and
sub
loop
sbb
lcall
ja
lock
mov
loopne
mov
jg
sbbb
hlt
in
dec
pop
inc
sbb
dec
jbe
pop
lret
push
jle
test
in
mov
std
pusha
xor
xchg
aam
ljmp
sbb
stos
add
add
ret
movl
cmp
movl
jne
add
mov
add
movl
jmp
mov
xorl
xor
add
movl
jmp
xchg
fcmove
pop
fstpl
dec
out
dec
sbb
dec
ss
jmp
jle
push
sbb
mov
cli
shll
fldcw
test
add
mov
xor
adc
or
ljmp
hlt
push
xor
arpl
out
pop
mov
lods
scas
cmpsl
mov
call
mov
xchg
loopne
bound
int
clc
jle
xlat
repz
lock
cltd
push
sub
pop
sbb
loope
dec
and
ja
jo
and
rcrl
aad
and
stc
push
fistl
cs
insb
or
xchg
pop
movsl
stos
js
cmp
call
inc
data16
or
add
mov
sub
xchg
mov
push
outsb
xchg
cmp
ficoml
cmc
in
xor
int3
pop
insb
push
mov
dec
ja
popf
stc
adc
outsb
imul
out
sub
das
out
adc
mov
jp
rcll
push
adc
pop
pop
mov
js
mov
push
push
int
jge
ficoms
js
mov
inc
mov
xor
in
push
push
and
dec
pop
mov
sbb
iret
or
hlt
leave
jl
pop
mov
inc
arpl
lcall
add
fstpt
xchg
call
in
ss
cmp
jle
jns
stos
push
es
push
gs
imul
fwait
je
adc
arpl
leave
pushf
repnz
movsl
lcall
adc
push
cmp
mov
xor
imul
in
test
jmp
push
cmp
mov
mov
cmp
mov
mov
mov
movsb
mov
pop
scas
icebp
adc
ficoml
mov
lret
cmpsb
nop
iret
imul
pushf
mov
dec
in
ljmp
and
lock
inc
mov
add
push
mov
ja
xor
fnstcw
sbb
out
cmc
mov
es
dec
sub
in
test
push
jmp
ljmp
and
ret
fcoml
fdivl
fbld
int3
pop
call
xor
outsb
xchg
mov
out
lcall
out
stc
aam
xchg
adc
pop
sub
or
jae
test
dec
xor
pushf
popf
rcrl
loope
jge
inc
addr16
inc
mov
in
stc
jne
adc
cmp
es
or
and
test
mov
and
mulb
cmp
jae
adc
jp
fdivs
movsl
popa
mov
sbbb
add
movzwl
inc
repnz
pop
loopne
xor
jbe
int3
pop
cmp
xchg
cmp
scas
int
lcall
aas
push
push
out
jge
mov
shlb
fnstsw
mov
loopne
mov
jle
push
add
pusha
sti
inc
das
or
int
mov
aaa
jmp
xchg
pop
adc
int
leave
lds
data16
pop
dec
aad
cmp
push
dec
xchg
push
cmp
adc
lahf
mov
xor
iret
pop
test
push
jmp
les
ret
jge
lret
jns
mov
mov
xor
jmp
repz
inc
or
pop
inc
and
sub
ljmp
cwtl
cmp
jle
jmp
jle
adc
jmp
pop
jb
mov
ljmp
push
int3
js
mov
mov
insl
pop
das
sub
xchg
jmp
xchg
jl
sub
inc
arpl
xor
push
fmulp
lods
bound
jmp
xor
in
mov
inc
push
xor
gs
dec
adc
pop
repnz
sbb
in
xor
pop
push
mull
xor
ja
loope
xor
vandps
mov
push
sbb
inc
mov
mov
ljmp
push
add
dec
xlat
cmp
inc
jno
in
movaps
js
or
orl
jo
xor
push
int3
sub
push
in
add
mov
dec
cmp
push
iret
pusha
je
sub
fs
jae
subl
lahf
fisttpl
pop
mov
xchg
fwait
sbb
orb
insl
popa
xchg
in
popa
in
ss
pop
cmc
stos
cmp
add
inc
sbb
or
pusha
mov
es
repnz
fimuls
xlat
stc
cmpsl
adcl
mov
inc
daa
mov
cmp
pusha
lret
xor
cmp
daa
aam
jnp
lret
outsl
ljmp
testl
pop
and
cmpsl
mov
mov
jno
fnstcw
jg
dec
in
movsl
adc
int3
icebp
push
xorb
inc
daa
dec
pop
cltd
xor
xlat
mov
ja
dec
je
cld
xor
rcrb
addr16
pop
xor
xchg
add
outsb
hlt
push
mov
pusha
jle
push
sbb
orb
test
add
cltd
push
imul
fldpi
push
aas
adc
and
pop
std
arpl
mov
adc
cmp
xchg
dec
mov
sbb
push
adcl
inc
pop
push
out
jae
dec
mov
icebp
adc
cmp
in
sbb
mov
xchg
addr16
andl
rcrb
sbb
push
jno
vpandn
mov
cmp
mov
inc
jl
cmp
or
push
repz
scas
call
sub
sbb
adc
jnp
push
fsubl
add
popa
test
xchg
lcall
roll
in
int
test
ret
dec
sbb
mov
inc
jle
aam
lods
cld
test
mov
into
mov
outsl
push
and
scas
mov
es
push
xchg
test
inc
enter
mov
flds
cmp
into
stos
int
and
fldl2e
out
jb
popa
std
adc
cmp
adc
out
dec
je
sbb
in
mov
scas
stos
daa
dec
push
xchg
cmpsl
jp
ss
pop
outsb
insl
jecxz
pop
mov
fwait
or
or
stos
jae
je
in
dec
fdivrp
mov
sbb
cmpsl
lret
xor
ljmp
mov
inc
cmp
push
pop
cmpsl
cmp
aaa
jp
pushf
and
outsb
out
sub
mov
ret
and
jmp
mov
mov
mov
mov
mov
add
pop
pop
ret
push
mov
sub
movl
cmpl
je
cmpl
jne
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
mov
xor
sbb
mov
xorl
add
addl
movzwl
mov
xor
movb
lea
andl
xor
or
inc
mov
cmpl
jne
push
pushl
pushl
push
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
sub
mov
adc
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
pushl
push
call
jmp
mov
xor
sub
negl
mov
movl
cmpl
je
cmpl
jne
push
push
call
xor
xor
dec
mov
jmp
movl
add
movl
jmp
rclb
cmpsb
js
pop
mov
xchg
int
jle
jg
jle
or
jb
mov
andb
push
mov
inc
popf
xor
jl
sub
and
cs
sahf
push
adc
dec
xlat
outsb
cmp
into
mov
in
mov
iret
sbb
jg
sub
cmpsb
push
or
adc
popa
loopne
adc
sbb
ja
xchg
stc
jle
inc
pusha
xchg
cld
inc
push
out
pushf
int3
push
xor
jg
jle
pop
daa
in
lock
push
call
repnz
scas
into
xchg
or
out
pop
daa
cmp
pop
jg
in
in
lea
push
or
fwait
imul
inc
dec
setp
mov
or
loop
decb
lods
mov
sbb
mov
mov
and
push
popf
pusha
add
call
jecxz
inc
sti
cmp
sub
loop
jno
rcpps
cs
in
adc
fidivrs
lea
decb
add
icebp
mov
push
test
data16
sub
pop
xchg
mov
xchg
jbe
xchg
lret
icebp
push
push
fidivl
sub
sbb
clc
or
fistpl
nop
aad
jne
in
lods
jmp
dec
popf
and
mov
scas
jo
mov
cmp
inc
and
popa
xchg
sbb
push
pop
push
loope
xor
mov
and
mov
push
mov
sub
xor
mov
subl
add
jmp
mov
mov
movl
inc
jmp
mov
jbe
pushf
pop
dec
fsubs
div
fmuls
iret
jle
sarb
jle
xchg
inc
in
es
aad
movsb
lds
test
xchg
shlb
mov
pop
mov
mov
jns
and
jo
popa
fimuls
jbe
cwtl
div
popa
push
icebp
cmpsl
addl
leave
inc
xchg
notb
sub
or
jno
outsb
push
int3
cltd
dec
mov
shlb
pop
into
inc
fnsave
test
int3
js
or
into
pushl
aam
mov
lret
pop
inc
cmp
sub
mov
inc
mov
jns
int3
aaa
scas
adc
pop
mov
add
std
xchg
mov
sahf
pop
cs
call
sub
mov
add
push
cld
and
push
jg
rcr
jae
mov
das
and
add
test
js
pop
xchg
movsb
cmp
sahf
and
xor
inc
dec
add
cmp
popa
cmp
mov
jg
fsubrs
jge
and
lods
fsts
mov
mov
xchg
xor
xor
shrb
ret
xchg
sub
pop
add
repnz
aas
adc
mov
cmpsb
shlb
sbb
cwtl
push
lret
cmpsb
cs
sbb
sti
jp
mov
cmp
jb
mov
mov
xor
add
cmp
je
push
push
jmp
insb
lds
cmpb
xchg
sub
cmp
jg
jle
movsl
stos
adc
dec
add
je
daa
adc
add
push
test
mov
into
lea
repz
push
pushl
fiaddl
pop
inc
sub
push
jb
jmp
jns
icebp
dec
inc
arpl
or
int
or
mov
rcrl
lret
push
lea
movsb
mov
mov
ljmp
mov
inc
dec
lods
pop
jo
sbb
add
mov
sbb
aad
xor
sub
push
jecxz
shll
add
cmpsl
push
shl
sub
xor
xchg
dec
dec
enter
jb
jns
or
pop
stos
test
inc
fstps
adc
pop
lods
jmp
mov
aam
pop
mov
pop
adc
pop
cmc
push
das
and
gs
leave
mov
cmpb
push
mov
lods
sbb
fiaddl
inc
loop
or
div
jmp
xchg
aaa
mov
adc
inc
mov
mov
mov
fdivrl
mov
int
iret
sti
jg
inc
in
frstor
push
dec
ret
cwtl
mov
adc
xchg
xor
bound
sahf
std
popf
pop
bound
dec
pop
fwait
mull
dec
adc
jge
jmp
jae
cmp
cli
vpaddw
incl
cmp
into
iret
inc
sarl
jg
jle
mov
mov
mov
bound
sub
push
movsl
add
push
and
cmp
call
and
and
mov
mov
jno
jbe
and
push
mov
pop
lcall
mov
push
lods
mov
sub
mov
cwtl
fwait
movsb
test
fisubrs
mov
pop
sti
xchg
and
xor
xchg
lret
in
in
fwait
or
andb
xchg
in
inc
and
xlat
push
push
dec
xor
push
rorb
cmp
in
push
pusha
fisttpl
dec
in
fs
sbb
pop
daa
mov
mov
mov
add
jno
or
sub
cmp
xchg
inc
xchg
push
imul
lods
idivb
icebp
loop
xlat
adc
dec
lea
out
or
call
cltd
cmp
inc
xorb
jl
je
adc
xor
idiv
dec
loop
lds
add
inc
adc
jg
out
into
sub
adc
sbbb
mov
inc
xchg
xor
mov
push
mov
sub
loope
xchg
stos
mov
cld
ret
or
jle
mov
test
mov
sbb
cld
insl
shlb
xor
jb
inc
mov
add
inc
xchg
add
add
jmp
push
fsubs
pop
xchg
push
rcrl
lret
and
jg
jle
or
out
xchg
pop
nop
add
ret
jecxz
mov
or
iret
cmpsl
stos
push
push
cld
jp
imul
lcall
adc
dec
push
fildl
inc
loopne
cltd
ss
sbb
nop
and
data16
pop
bound
add
lret
lahf
aas
pop
aaa
enter
cmp
mov
cmp
push
test
mov
mov
pop
mov
outsl
push
fildl
sub
dec
pop
cli
or
imull
or
cmp
mov
imul
repnz
int3
xor
lcall
repz
xchg
adc
jge
das
shll
out
idivb
std
pop
int
inc
fcoms
scas
mov
add
pop
lret
pop
icebp
shlb
jle
pop
mov
mov
rcrl
jns
das
jns
loop
scas
adc
sbb
xchg
in
dec
push
cmpsl
mul
sub
mov
rcrl
mov
popf
popf
pushf
addr16
iret
shl
push
cmpsl
in
mov
add
mov
imul
lret
movsb
adc
fnstcw
or
cmpsl
pop
repnz
imul
pop
addr16
adc
jb
inc
int3
pop
cmp
mov
jmp
xchg
sbb
cmp
inc
push
cwtl
pop
push
adc
jle
jg
jle
sahf
jg
xchg
andb
lds
pop
insl
in
or
pushf
mov
sbb
aaa
xlat
jae
xchg
lds
pop
cmpsb
push
add
and
lea
and
and
sub
test
xchg
add
fstpl
out
fdivrs
cli
data16
inc
test
mov
xchg
nop
jmp
imul
inc
les
or
int3
out
out
xor
xor
sub
and
mov
jbe
and
lcall
js
adc
mov
cltd
imul
xor
gs
aaa
or
add
fwait
repz
cwtl
ljmp
cmp
mov
lods
push
shlb
movsl
in
ret
xor
outsl
je
das
push
or
cmpsb
std
lret
repnz
std
mov
inc
mov
fwait
inc
mov
sub
shr
mov
cwtl
leave
xchg
push
inc
cmpsb
xor
mov
mov
or
pop
lret
mov
add
push
aad
pop
push
popa
xor
das
add
dec
enter
int3
cmpsl
jg
jb
int
cmpsb
scas
mov
push
dec
add
mov
push
xchg
ret
sbb
inc
xor
fmul
mov
sub
fisttps
or
mov
nop
xor
add
mov
mov
mov
inc
cmp
jne
pop
pop
jmp
fistpll
aas
or
or
jmp
jle
dec
xor
aas
sarb
jle
jg
jle
inc
or
xchg
mov
test
add
repnz
xchg
jb
sbb
mov
or
and
icebp
xor
mov
scas
repnz
out
sub
out
imul
daa
add
sub
xlat
cli
push
sbb
mov
and
pop
pusha
lods
jnp
cld
mov
mov
fildll
xchg
xchg
jp
sbb
mov
popf
xchg
cmp
sub
enter
lods
jl
add
or
or
jae
mov
push
jmp
inc
lcall
push
pop
pop
jo
mov
cmp
cs
and
pusha
movsl
lea
dec
aas
test
shlb
and
bound
xor
add
cmpsb
push
jne
dec
pop
lds
mov
insb
cltd
push
mov
add
mov
mov
cmc
dec
fmuls
mov
mov
jno
pop
popf
in
lods
mov
push
lds
stos
popf
out
pushl
jnp
xchg
out
repnz
mov
cmp
mov
mov
ja
pop
lret
int
loope
insl
push
aaa
pop
mov
loope
fisttps
pop
mov
stos
movsl
pop
rcrl
mov
mov
xor
add
mov
mov
xor
add
jmp
mov
rorl
dec
rorl
repz
jle
sarb
jle
xor
jl
cmpsb
fidivrs
pop
popf
xchg
movsl
dec
and
xchg
xchg
aam
mov
adc
jae
push
je
xor
mov
loop
xchg
mov
mov
test
push
xor
loop
pop
add
dec
insl
dec
std
jle
fwait
mov
mov
mov
adc
imul
cwtl
inc
pop
xchg
push
jae
call
pop
lcall
pop
pop
pop
jbe
pop
cmpsb
sbb
mov
sahf
aam
adc
cmp
hlt
fnstsw
dec
lock
dec
dec
xor
and
add
mov
in
push
jae
adcb
mov
mov
pop
arpl
imul
js
jl
cmpsl
adc
jbe
add
pushf
sub
pop
cmpsl
xlat
imul
inc
add
xor
lods
in
cs
add
dec
setae
pop
in
out
arpl
jecxz
loope
ja
popf
cs
dec
sbb
mov
jle
xchg
ret
mov
pusha
call
add
xorb
fucom
cmc
bound
aam
pop
repnz
or
mov
push
xchg
mov
sbb
jp
aad
xor
out
sbb
aas
scas
mov
push
imul
add
xchg
das
xor
jnp
lea
aaa
outsb
sub
or
add
cmp
je
mov
mov
mov
cmp
jne
mov
mov
movsbl
xor
add
cmp
je
movl
lea
jmp
xchg
mov
or
mov
mov
push
push
inc
mov
jle
sarb
jle
cltd
call
cmp
push
push
popa
push
dec
mov
push
out
mov
and
fidivrs
jle
pop
in
scas
adc
aaa
xor
pop
leave
arpl
mov
xchg
stos
mov
mov
add
cs
inc
add
aad
mov
ret
shll
and
in
pushf
lahf
xor
dec
jg
cmp
push
push
divl
lret
testl
mov
xor
cmp
adc
mov
jl
clc
sbb
xchg
xchg
mov
test
outsb
ret
xor
jl
cmp
xor
jl
cmpsl
jge
imul
jmp
xchg
popa
mov
out
jo
idivl
repnz
popa
cmpsl
pusha
push
in
dec
mov
sbb
popf
popa
ret
jp
sub
mov
and
mov
mov
dec
adc
scas
mov
bound
inc
mov
xchg
sbb
jne
mov
es
adc
lcall
fsub
adc
and
jo
push
idiv
int3
sub
roll
xor
shll
inc
push
xor
lock
in
sub
mov
mov
addl
jmp
test
cmp
jge
xor
imul
sarb
jle
jo
ljmp
sbb
xchg
or
incb
negl
xor
imul
xchg
cwtl
shrb
xor
test
std
jp
rorb
mov
and
dec
jnp
inc
aad
pop
lods
mov
xchg
mov
add
inc
inc
mov
jb
fnsave
daa
clc
sub
push
mov
pop
mov
iret
xchg
push
cmp
xchg
pushl
rcrb
ficoml
jle
push
or
dec
or
stos
cli
int3
and
popa
mov
add
jg
push
or
mov
mov
mov
lret
sub
add
sahf
cmp
inc
cli
jecxz
adc
jns
loop
mov
mov
inc
ret
mov
pop
daa
addr16
xchg
mov
into
sbb
sub
adc
cmp
xchg
add
sub
adc
mov
jno
or
adcb
lea
imul
and
xchg
ret
mov
sub
cltd
fdivr
fucom
mov
sbb
mov
xchg
stos
mov
jp
loop
mov
mov
pop
ja
jg
xor
or
add
mov
and
xor
push
and
mov
dec
and
pop
fdivrs
pusha
mov
inc
lock
xor
jmp
dec
sbb
fstpl
inc
inc
jmp
adc
jg
jle
int
shl
testb
dec
stos
jb
mov
mov
dec
into
jno
inc
add
cmpsb
hlt
jle
aaa
jp
mov
fs
test
mov
popa
xchg
sbb
or
adc
xor
push
inc
dec
pushf
inc
je
stos
mov
pop
fwait
cmp
out
movsl
outsb
adc
bound
and
adc
ss
js
dec
pop
lea
mulb
pop
dec
jl
insb
daa
adc
inc
and
sub
sub
shll
insl
inc
lcall
icebp
mov
popf
pop
shr
ret
rdpmc
in
push
xor
in
in
ret
add
aad
popf
cmp
cmp
gs
sbb
push
test
inc
int3
xor
sub
adc
out
xchg
mov
pop
sbb
inc
mov
add
clc
divl
xchg
dec
jle
mov
push
out
aam
push
arpl
xor
add
xor
mov
mov
mov
mov
cmp
or
stos
cmc
mov
mov
fisttps
mov
mov
aaa
dec
lea
orl
pop
sub
push
xchg
aam
sub
cmp
inc
mov
lcall
mov
jno
out
loope
mov
dec
inc
lea
mov
incl
jmp
mov
xor
mov
add
mov
pop
leave
ret
push
mov
push
movl
neg
mov
movzwl
adc
mov
mov
subl
xor
add
adcl
mov
mov
adc
xor
or
push
movzbl
or
mov
adcl
mov
add
mov
xor
mov
mov
mov
or
mov
dec
mov
sbbl
mov
mov
adc
mov
orl
mov
adc
mov
andl
mov
inc
mov
cmpl
jne
pushl
push
pushl
pushl
pushl
push
call
cmpl
jb
mov
xor
add
pop
leave
ret
push
mov
mov
jmp
cs
orl
arpl
jns
fdivrl
push
jo
jle
inc
out
lods
popa
mov
test
pop
adc
xchg
dec
sarb
popa
std
aad
popf
inc
xchg
pop
mov
dec
or
sub
sbb
xchg
daa
in
lds
push
out
push
mov
into
lea
je
cmpsb
sbb
mov
mov
int
fxch
out
dec
dec
xor
adcb
xor
push
les
nop
mov
jne
push
daa
cmp
inc
aas
xchg
cmp
and
cmp
sbb
add
lods
js
lods
cmp
pop
std
insb
cmp
dec
int3
pop
push
int
es
rcrb
test
mov
push
and
dec
dec
sar
cmp
movsb
out
insl
or
inc
sti
and
jp
and
mull
mov
out
cs
nop
mov
sub
iret
std
push
in
or
mov
fldenv
jbe
test
daa
mov
or
xlat
mov
mov
cmc
mov
sbbl
push
insl
out
dec
push
test
fnsave
dec
jns
jne
lods
fs
mov
mov
sub
push
rcrl
ret
fimull
ficompl
std
pop
addb
jae
leave
cmp
mov
sbb
je
or
jo
sub
mov
jl
push
mov
mov
pop
or
jo
mov
das
jp
shr
fs
dec
sub
jno
xchg
or
sub
test
je
mov
shlb
mov
aas
cmpb
xor
push
jecxz
push
in
cmp
ss
aad
iret
fwait
aad
mov
fdiv
sbb
pop
xchg
stos
hlt
mov
push
adcl
in
scas
stc
mov
or
lds
enter
out
or
in
mov
inc
mov
sbb
mov
xchg
add
and
lret
lods
fnstcw
dec
xor
out
sub
mov
push
fs
mov
ja
add
arpl
cwtl
aad
sbb
cmp
xchg
mov
rorb
inc
push
mov
mov
ss
xchg
adcb
dec
stos
sub
stos
subb
sub
push
and
pop
push
dec
aad
jge
sub
or
cmp
cmp
or
fisttpl
cmp
rorl
xchg
fdivs
sub
fst
out
jne
xlat
pop
in
faddl
xor
mov
div
mov
and
jmp
out
xchg
imul
xlat
sub
push
inc
fistpll
push
jo
jle
pop
in
inc
and
push
and
fwait
dec
or
xor
mov
jnp
scas
cmp
xchg
das
mov
adc
out
xlat
jmp
fbld
sub
subl
cmp
sarb
add
arpl
icebp
dec
mov
data16
xchg
dec
mov
jmp
mov
adc
cmpsl
sub
and
cli
lcall
test
pop
enterw
mov
inc
adc
dec
and
loopne
and
push
sahf
arpl
test
lret
and
dec
cmpsl
add
pop
movl
into
sub
sub
cmpsb
es
mov
inc
dec
inc
scas
scas
pushf
or
sub
pop
inc
add
mov
pop
repz
jnp
inc
pop
jbe
jo
movsl
mov
lret
xchg
xor
loop
push
daa
adc
jnp
imul
xchg
and
adc
adc
rolb
sub
repnz
mov
pop
negl
cmp
mov
xchg
rorb
cmp
out
mov
out
int3
ret
iret
arpl
iret
adc
pop
push
fwait
insb
xlat
cmp
mov
lds
xchg
and
jecxz
rcll
push
mov
mov
ljmp
mov
dec
fildll
jns
inc
and
add
ljmp
push
cli
adc
xor
shlb
ror
mov
xor
xlat
dec
mov
sub
out
inc
mov
push
lods
inc
and
icebp
adc
jmp
inc
inc
xor
gs
adc
or
mov
dec
test
add
xor
fisubrs
in
idivl
fisubrs
nop
inc
push
or
sub
dec
enter
mov
sbb
push
mov
fisttps
jne
cltd
sub
mov
or
adc
xor
loop
cmp
dec
out
push
movb
fdiv
sbb
std
out
pop
loope
dec
mov
add
push
jo
jecxz
loopne
cli
rcl
jae
fidivl
xchg
sti
ss
mov
push
pop
cmp
sbbl
mov
dec
jbe
jg,pn
sbb
mov
mov
fldenv
aaa
or
cmp
testl
add
push
dec
cmc
push
xchg
aam
push
pop
ficompl
fsts
testb
outsb
sti
daa
sarl
push
les
les
test
jno
jecxz
jb
fisttps
jecxz
outsl
or
mov
pop
ret
push
mov
push
movl
cmpl
je
cmpl
jne
push
push
push
call
mov
dec
mov
jmp
adcl
movl
mov
sbb
mov
xorl
mov
xor
jmp
jno
test
gs
or
movsb
outsl
int3
add
jb
sarb
inc
jg
jle
stos
mov
and
adc
sbb
mov
push
sub
cmc
andb
leave
aad
testb
data16
jo
pop
sub
cmp
dec
sbb
jp
xchg
es
aam
xchg
fcmovne
dec
aam
cmp
fadds
cmpsb
lea
mov
xor
mov
or
add
jbe
into
sarb
imul
add
bound
repz
lds
sub
lock
jo
xchg
inc
shll
icebp
cmp
in
cmp
or
jnp
nop
pop
or
nop
aaa
add
push
scas
loopne
popf
push
mov
push
sub
cmp
lahf
pushf
jle
sbb
dec
scas
lahf
push
mov
stos
sbb
fiaddl
mov
in
adc
push
pop
repnz
xor
jns
shlb
scas
call
fwait
mov
push
pop
push
rolb
lret
add
mov
das
pop
mov
stos
ret
cmp
or
mov
xor
in
xchg
outsb
sti
gs
aas
mov
add
cmpsl
imul
dec
pushf
fdivs
pop
xor
mov
cmp
in
and
lods
and
dec
mov
pop
sub
xlat
sbbb
shrb
in
add
std
rclb
mov
insb
cmpsb
cli
xchg
aaa
pop
push
testl
mov
pop
sub
scas
pusha
icebp
aad
push
repnz
xchg
pop
test
add
test
mov
mov
fldt
pop
ljmp
jge
mov
push
xchg
lods
push
hlt
add
fisubs
add
mov
mov
mov
sub
xor
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
test
mov
jne
mov
jmp
test
pushf
dec
pushf
inc
pop
cwtl
mov
aaa
cltd
loop
mov
inc
jg
jle
cmp
mov
pop
mov
mov
clc
push
sbb
or
fnsave
push
pop
int
fwait
ds
or
xor
lret
adc
das
in
pop
jb
xchg
push
int
jae
orb
outsl
cmp
mov
inc
xor
dec
nop
in
fistpll
cs
and
stc
insl
jmp
popa
fst
es
jno
dec
lahf
cmp
jb
sahf
shrb
sub
into
sub
sub
into
fwait
cmpsb
or
bound
sub
jo
sbb
pushf
cmp
arpl
js
sbb
add
push
inc
test
add
mov
adc
cs
out
dec
mov
outsb
and
nop
pop
mov
or
mov
sbb
out
push
sub
clc
into
inc
inc
mov
aam
cmp
mov
mov
pop
mov
jp
es
fsubrp
arpl
lds
fs
pop
cwtl
fisttps
das
cmpsb
dec
mov
mov
lcall
popa
add
cli
mov
add
mov
xor
negb
std
scas
xor
mov
fistpll
xchg
mov
add
xchg
push
in
xor
js
lret
rol
mull
insb
mov
daa
stos
mov
or
jle
pop
mov
pop
ret
cmp
fistl
push
cmp
out
lock
mov
mov
xchg
mov
mov
stos
inc
lret
aad
outsb
and
nop
rcrb
jge
cmpsl
jge
xchg
push
bound
test
push
shll
aad
sbb
and
mov
cmp
jb
add
ret
push
mov
sub
push
sbbl
push
push
xorl
push
sbbl
call
sbbl
test
je
orl
xor
jmp
orl
push
call
sbbl
test
movl
je
push
push
adcl
call
jmp
subl
call
cltd
cmp
movl
jne
cmp
movl
jne
subl
push
call
jmp
negl
push
adcl
call
test
jne
andl
xor
xor
inc
mov
cmpl
jne
pushl
pushl
call
cmpl
jb
mov
and
mov
movzbl
sbb
mov
mov
andl
mov
inc
mov
cmpl
jne
push
push
push
push
call
cmpl
jb
andl
mov
inc
mov
cmpl
jne
push
push
call
cmpl
jb
adc
movl
andl
mov
inc
mov
cmpl
jne
push
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
sub
lea
mov
add
lea
inc
mov
inc
mov
mov
orl
mov
add
mov
xor
xor
adc
mov
xor
xor
mov
add
mov
mov
mov
cmp
mov
movl
je
mov
xor
adcl
add
imul
movl
mov
jmp
xor
adc
add
mov
mov
mov
sub
or
mov
xor
add
mov
subl
mov
add
mov
negl
xor
decl
add
movl
cmp
jne
mov
add
mov
mov
movl
cmpl
je
cmpl
jne
push
push
push
call
mov
dec
mov
jmp
add
mov
orl
mov
mov
not
mov
xor
add
adc
mov
mov
mov
andl
mov
inc
mov
cmpl
jne
pushl
push
call
cmpl
jne
xor
xor
inc
mov
cmpl
jb
xorl
xor
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
call
cmpl
jne
mov
inc
mov
jmp
movl
cmpl
je
cmpl
jne
push
call
xor
or
dec
mov
jmp
and
add
mov
lea
and
mov
mov
adc
mov
mov
sbbl
mov
sbbl
xor
add
movzwl
and
mov
addl
mov
or
lea
mov
sub
mov
mov
movl
cmpl
je
cmpl
jne
pushl
push
call
xor
xor
dec
mov
jmp
movzbl
or
mov
xor
xor
add
mov
mov
sbbl
movl
mov
sbb
mov
movl
cmpl
je
cmpl
jne
pushl
pushl
push
pushl
pushl
pushl
pushl
pushl
push
pushl
push
push
push
call
xor
xor
dec
mov
jmp
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
call
jmp
mov
movzwl
add
xor
movl
mov
mov
add
mov
xor
xor
sub
mov
orl
xor
movl
add
movl
cmp
jne
movl
cmpl
je
cmpl
jne
pushl
push
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
call
jmp
or
mov
movl
cmpl
je
cmpl
jne
push
pushl
push
push
call
xor
or
dec
mov
jmp
mov
xor
adcl
add
movl
cmp
jne
xor
add
sub
mov
xor
mov
incl
xor
andl
mov
inc
mov
cmpl
jne
push
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
add
sbb
mov
movl
cmpl
je
cmpl
jne
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
mov
adc
xor
xor
mov
andl
sub
add
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
pushl
push
pushl
call
cmpl
jne
mov
inc
mov
jmp
not
mov
mov
subl
mov
andl
movzwl
add
andl
jmp
xor
add
inc
mov
cmpl
jae
cmpl
jne
push
push
call
jmp
adc
mov
subl
mov
xor
add
xor
mov
mov
xor
sbbl
add
andl
xor
subl
sub
orl
mov
subl
movzwl
sub
movl
cmp
movl
mov
movzwl
movl
jg
xor
sub
adcl
sub
mov
jmp
notl
xor
lea
mov
mov
mov
not
mov
movl
cmp
movl
je
movl
mov
movl
movl
movl
jmp
mov
cmp
jne
mov
mov
movl
movl
mov
movl
mov
mov
mov
mov
mov
mov
mov
movl
cmp
movl
jne
addl
mov
sbb
mov
xor
xor
mov
add
mov
movzwl
subl
not
sbbl
and
mov
movl
mov
jmp
andl
xorl
mov
notl
pushl
adcl
call
xorl
test
movl
je
jmp
movzwl
mov
cmp
jne
movl
mov
movl
movl
movl
jmp
movl
mov
movl
cmp
jne
sbb
mov
andl
mov
movl
xor
xorl
add
cmp
je
mov
mov
mov
mov
lea
add
mov
mov
mov
mov
mov
xor
add
mov
mov
mov
xor
add
cmp
je
mov
mov
add
mov
mov
mov
mov
mov
mov
add
xor
cmp
je
mov
mov
xor
add
mov
jmp
xorl
jmp
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
movl
cmp
jne
mov
mov
xor
mov
add
mov
movzwl
not
and
mov
mov
jmp
xorl
mov
pushl
call
test
je
jmp
mov
cmp
jne
mov
movl
mov
mov
mov
mov
mov
mov
movl
cmp
jne
mov
mov
xor
mov
add
mov
movzwl
not
and
mov
mov
jmp
xorl
mov
pushl
call
test
je
mov
cmp
je
mov
mov
mov
mov
mov
mov
mov
mov
mov
movl
mov
movl
mov
xor
add
jmp
mov
xor
lea
push
mov
xor
lea
push
mov
pushl
call
mov
xor
lea
mov
mov
xor
xor
add
mov
xor
lea
cmp
jbe
mov
mov
mov
mov
mov
mov
sub
xor
mov
mov
cmp
je
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
pushl
mov
pushl
add
mov
mov
pushl
call
mov
mov
mov
jmp
mov
mov
xor
add
mov
cmp
jne
mov
xor
add
mov
mov
xor
add
mov
mov
mov
mov
mov
mov
xor
add
mov
mov
mov
mov
mov
mov
mov
movl
mov
xor
add
mov
mov
mov
mov
mov
mov
push
pop
sub
add
mov
mov
movl
mov
mov
mov
mov
mov
xor
add
mov
lea
mov
mov
xor
add
mov
lea
push
mov
xor
add
push
mov
push
pushl
call
andl
mov
sub
push
mov
add
push
call
incl
cmpl
jb
mov
mov
mov
mov
mov
movl
movl
mov
xor
add
mov
movl
movl
mov
movl
mov
xor
add
mov
movl
movb
mov
xor
add
mov
mov
xor
add
push
mov
xor
add
push
mov
xor
add
push
lea
push
pushl
pushl
call
test
je
lea
push
mov
xor
add
push
mov
add
push
mov
mov
pushl
call
mov
cmpl
lea
mov
je
lea
push
mov
xor
add
push
mov
xor
add
push
pushl
lea
push
pushl
pushl
call
test
je
lea
push
mov
xor
add
push
mov
add
push
mov
mov
pushl
call
mov
xor
mov
sub
sub
mov
add
mov
mov
mov
mov
xor
sub
mov
lea
incb
inc
push
pop
dec
xchg
decb
pushl
mov
mov
pushl
lea
pushl
lea
pushl
lea
pushl
lea
pushl
xchg
inc
inc
sub
push
pop
call
mov
mov
mov
pushl
lea
push
call
mov
push
add
push
lea
push
call
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
leave
ret
push
mov
push
and
movl
mov
orl
mov
adcl
add
sbbl
xor
movl
cmp
movl
jne
xorl
jmp
lods
inc
movsl
es
lods
inc
pop
push
cmpsb
mov
rcl
jle
fbstp
jle
js
and
call
mov
inc
out
cmc
xor
mov
mov
jecxz
rclb
int
cmp
or
pop
imul
ss
jp
insl
push
adc
dec
orb
rclb
sub
and
pop
or
inc
int3
out
cmp
xchg
dec
push
xchg
into
data16
mov
pusha
lods
iret
cmpsb
dec
js
loope
cmp
scas
cltd
push
arpl
sbb
test
adc
out
popf
clc
out
push
in
adc
cmp
dec
mov
xor
test
iret
add
fs
lgs
add
sahf
sub
push
mov
push
aam
scas
fwait
movsl
aaa
and
ret
fisubrs
les
mov
aad
das
sarb
xor
cwtl
fs
clc
mov
loope
cmp
enter
orl
mov
lock
and
mov
fildll
xchg
mov
sarb
ljmp
sbb
jp
cmpb
adc
cmpsb
sub
enter
fisubrl
sbb
loop
inc
push
fisubl
sbb
sub
in
jl
jno
mov
dec
xchg
mov
lret
sbb
cltd
xchg
pop
insb
int
pushf
mov
and
mov
jle
call
pushf
dec
xor
mov
pop
sbb
pop
lock
xchg
mov
adc
jb
dec
jns
push
stos
push
ds
jle,pn
leave
lret
insb
shrb
leave
jns
pusha
add
jnp
jecxz
insl
cmc
mov
fs
push
repz
push
jl
arpl
and
in
xlat
cmp
inc
inc
sbb
inc
dec
add
cs
mov
mov
in
scas
dec
pushf
fidivl
xchg
push
negb
xchg
xor
gs
aam
mov
xor
ficomps
adc
js
pop
addr16
mov
cmp
xchg
enter
and
dec
xchg
sbb
out
lret
aad
xchg
pop
iret
fldt
mov
sarl
cmc
pop
xchg
out
pop
mov
nop
hlt
mov
movl
cmpl
je
cmpl
jne
pushl
call
mov
dec
mov
jmp
mov
sub
add
and
mov
mov
mov
xor
push
mov
mov
add
cmp
pop
je
mov
jmp
mov
xor
add
jmp
mov
xor
jmp
mov
pop
outsb
adc
jnp
xor
inc
or
jle
cmp
cmpsb
daa
jae
fistps
sub
inc
cmpsl
xor
xor
adc
shll
loopne
inc
mov
push
xor
or
test
jle
pop
ljmp
in
je
mov
out
mov
mov
pop
out
das
jp
xor
inc
stc
inc
adc
ret
imul
int
xchg
leave
test
and
loop
inc
jbe
sub
out
cmc
push
xor
popf
call
addr16
faddp
sbb
cmc
fs
iret
sahf
int3
ret
xchg
jns
mov
aaa
icebp
repz
aam
fnstsw
cltd
jae
fsin
ljmp
add
cmc
push
mov
test
das
aaa
movsl
ja
mov
inc
xchg
and
les
or
mov
push
mov
lock
push
sbb
ret
loopne
sbb
mov
xchg
in
popf
loop
ret
sbb
xor
or
sub
cmp
jae
movsl
mov
jmp
out
push
add
xchg
popaw
addb
adc
addr16
push
xor
add
xchg
aad
mov
clc
xor
mov
lret
add
movl
pushf
and
repz
loopne
dec
cmp
mov
cmp
or
sti
call
pop
repnz
mov
stc
cmp
xchg
shrl
ret
sub
call
mov
jp
std
in
lds
adc
xadd
cmp
or
lret
xor
xor
and
cmp
jle
out
mov
lds
leave
ret
xor
push
jbe
cmpsl
lods
dec
jno
stos
jl
les
movsb
cmc
inc
mov
int
cmp
jo
or
popa
popf
mov
arpl
mov
dec
sub
pop
mov
xchg
and
mov
stos
xchg
es
dec
pop
or
lea
pop
cmpb
cwtl
scas
adc
sbb
sub
pop
dec
push
xchg
shrb
subl
hlt
js
mov
popf
jb
add
ret
push
mov
push
inc
push
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
pushl
call
cmpl
jne
mov
inc
mov
jmp
mov
xor
add
sub
xor
movl
sbb
jmp
imul
jge
dec
jb
jmp
test
jmp
jle
jg
jle
jo
mov
push
push
popf
push
int3
insl
dec
xchg
xor
xchg
push
sbb
mov
lods
pop
cmc
insb
cmp
jb
mov
dec
jle
mov
jns
sbb
or
or
jp
out
inc
mov
gs
ds
daa
xchg
nop
and
addr16
and
xchg
ret
test
jge
into
aaa
cmp
sub
xchg
repnz
outsl
jns
clc
jbe
mov
jns
mov
call
fildll
jp
getsec
cld
cmpsl
cmpsb
in
xor
test
jne
and
movsb
pop
pop
push
xor
xor
arpl
test
add
xchg
xchg
or
lods
pop
loop
jl
pop
add
pushf
inc
ljmp
and
pop
jo
cmp
popf
in
mov
xchg
stc
jecxz
sub
inc
int
add
push
lret
shlw
add
jg
inc
push
and
pushf
loope
dec
nop
bound
pop
jbe
mov
jbe
cli
or
jle
add
dec
mov
js
or
xor
dec
push
scas
add
orl
add
arpl
pop
mov
lods
inc
icebp
testl
adcl
push
mov
inc
xchg
je
add
sbb
inc
icebp
andl
sbb
shlb
insb
push
adc
outsb
cltd
lcall
ds
and
scas
xor
scas
into
mov
imull
insb
lock
cli
idivb
int
jecxz
jae
pop
dec
inc
cmp
and
scas
mov
iret
cmp
xchg
aam
inc
cld
xor
mov
push
or
mov
add
mov
xor
xorl
xor
dec
mov
add
addl
add
imul
mov
movl
cmp
movl
jne
mov
mov
jmp
fisubrl
cld
mov
adc
jp
push
sbb
in
jle
pop
jg
jle
sbb
adc
sbb
mov
jns
out
jl
push
andb
cmpsl
ret
out
cmp
xchg
outsb
or
icebp
push
in
push
inc
adc
in
dec
mov
rclb
shlb
jp
push
mov
push
mov
fstl
sub
andl
stc
out
arpl
pop
fcompl
mov
and
sar
xlat
cmp
mov
pop
lea
push
js
xor
fisttpl
clc
or
cwtl
es
cld
rclb
mov
fimuls
out
sub
sbb
ja
lcall
test
in
je
pop
xchg
and
mov
mov
cmp
movsl
mov
inc
inc
incl
push
clc
in
xor
adc
lahf
adc
mov
popf
jae
jae
in
cmpsl
jo
dec
addr16
fmuls
out
dec
test
dec
fldcw
jl
or
lods
xchg
dec
inc
cmpsb
lret
inc
push
mov
or
jle
imull
decb
stc
cmpsl
movsl
jle
push
outsl
mov
add
push
mov
inc
mov
loope
xchg
imul
int
repz
cmpl
adc
pusha
jge
mov
or
mov
dec
push
jmp
xor
xchg
pop
sar
cmpsb
rcl
sbb
pop
iret
insl
add
pop
cwtl
and
adc
sahf
int3
lret
in
std
test
fcmovbe
xchg
out
dec
xchg
mov
cli
xor
xchg
setge
jle
dec
and
or
dec
lea
dec
xchg
je
out
xor
repnz
jmp
pop
icebp
lds
fs
xchg
imul
cmpsl
push
out
jle
pop
jg
jle
subl
xchg
or
inc
sbb
lret
dec
mov
adc
movsl
movsl
add
sti
addr16
out
cs
stc
loop
ds
out
rcrl
push
adc
pushf
inc
scas
jne
das
pop
pop
fwait
shrl
adc
mov
dec
or
add
lahf
mov
jnp
mov
jp
pop
in
mov
ret
adc
insb
xor
jle
cmp
pop
jecxz
push
stc
push
pushf
adc
cmc
mov
pop
ljmp
add
push
jg
pop
and
sbb
pushf
adc
inc
outsb
mov
mov
and
push
mov
pop
scas
iret
sub
jns
push
xlat
aas
push
loop
push
inc
or
aam
jae
fisttpll
scas
mov
adc
fs
add
inc
loop
cmpsb
scas
in
data16
mov
cmp
ljmp
mov
add
xor
test
pop
fcoms
mov
pop
stc
lret
jns
nop
test
movsl
mov
mov
arpl
and
ret
lds
inc
icebp
loop
das
cmpsb
cld
lea
mov
pop
ljmp
xchg
sbb
into
cmpsb
std
jnp
mov
cmp
mov
mov
std
push
mov
xchg
push
jae
sbb
loop
or
adcl
xchg
scas
mov
jne
jg
push
hlt
and
mov
sub
mov
pop
cltd
mov
ss
jne
ljmp
dec
out
push
lret
pushf
pushf
loopne
decl
and
sub
movsb
pop
or
pop
clc
cld
sbb
ja
cmpsb
dec
push
add
imul
jmp
mov
mov
mov
mov
mov
jmp
aad
outsl
mov
std
jge
outsl
stos
lock
sub
cli
mov
jg
jle
xchg
daa
scas
mov
pop
or
jb
sti
xlat
fs
inc
out
inc
mov
add
imul
mov
mov
mov
mov
leave
hlt
mov
or
sub
mov
xchg
jl
cmpsb
push
push
mov
lea
test
and
mov
pop
aas
mov
pop
addr16
call
jns
mov
xchg
jmp
dec
add
scas
push
push
lahf
sbb
add
pop
pop
arpl
mov
cmp
lock
inc
stos
ss
adc
dec
push
push
mov
js
imul
inc
repz
push
and
ja
adcl
xlat
pop
cli
in
jo
pop
aam
daa
push
in
ss
mov
test
add
dec
repnz
movsl
clc
mov
pushf
lea
inc
shlb
cwtl
clc
das
lods
mov
sahf
lods
movsl
vpbroadcastd
in
and
insl
push
adcl
test
out
pop
jb
int
stos
loopne
or
cld
cltd
inc
xor
push
lock
les
adc
push
ds
test
mov
jle
fisubrl
in
xlat
lds
negb
mov
das
loope
in
jo
jle
out
cltd
sub
lods
pop
dec
cmpsl
pop
cltd
sbb
sahf
pop
test
add
cmp
cmp
aad
lds
scas
push
push
push
shrl
mov
shlb
pop
dec
insb
mov
push
fadds
sar
imul
mov
xor
xchg
ljmp
leave
sbbb
push
popa
xchg
xchg
int
decl
jb
fsubrs
movsl
call
xor
add
add
imul
mov
cmp
mov
je
xor
add
mov
imul
add
mov
mov
jmp
faddl
insl
jns
pop
xchg
xor
in
popf
loop
jle
jg
jle
loop
sbb
imul
sub
daa
cmpsl
imul
loope
stos
ret
inc
ds
movsl
mov
mov
or
popa
add
cmp
cmp
sub
xchg
mov
leave
sarb
xchg
inc
sti
jmp
or
hlt
fs
xor
dec
pop
inc
into
or
mov
cltd
mov
inc
xchg
xchg
xor
aas
mov
testb
add
sub
inc
mov
shll
addb
cmpsb
push
mov
jo
xchg
rcr
pop
out
cmp
lret
les
push
dec
mov
repz
pop
icebp
jmp
ja
loopne
pop
mov
stos
xchg
mov
data16
dec
jge
loop
clc
mov
in
es
cmc
pop
mov
or
mov
mov
insb
movsl
ja
add
scas
stos
sub
lret
cmp
aad
xchg
fmul
ljmp
mov
fidivs
adc
dec
cltd
addb
enter
loopne
push
mov
mov
loop
aam
and
pop
sub
sarb
dec
negl
xlat
ret
ljmp
fsts
imul
shl
and
cli
adc
xchg
loope
test
mov
lea
pop
nop
lds
hlt
mov
xor
pop
and
dec
adc
jge
pop
fists
das
sub
or
push
fdivrs
push
mov
leave
shrl
xor
add
daa
add
pop
cmpb
xor
mov
fwait
mov
arpl
popf
out
add
dec
scas
pop
xor
ret
ret
push
mov
sub
mov
mov
sub
imul
jmp
adc
inc
and
scas
mov
in
jle
jg
jle
adc
imul
hlt
int
dec
call
sub
dec
or
ffree
imul
pop
lret
push
fadds
outsl
icebp
in
movsl
repz
sbb
push
scas
daa
popa
mov
xchg
aam
mov
add
jno
inc
jbe
dec
sbb
cmp
hlt
push
or
movsl
cmp
es
fwait
or
iret
das
rcll
mov
mov
xchg
test
jnp
pop
xor
inc
shlb
sti
jp
pusha
jne
aaa
xchg
sub
jmp
andb
fisttpll
xor
mull
sub
cmpsb
loop
fs
loopne
mov
mov
mov
imul
outsb
pop
or
gs
inc
sub
jo
out
pop
cmpsl
push
mov
xor
mov
sbb
pop
in
adc
mov
xor
push
mov
popf
aaa
testl
jne
cmp
pushf
pop
push
cld
ret
in
jbe
push
xchg
ljmp
shlb
mov
mov
scas
movl
movl
cmpl
je
cmpl
jne
pushl
pushl
push
call
mov
dec
mov
jmp
movl
or
mov
push
add
mov
mov
sbb
xor
mov
sub
mov
xorl
add
xorl
mov
mov
xorl
push
subl
push
andl
test
movl
je
add
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
call
cmpl
jne
mov
inc
mov
jmp
and
mov
mov
movzbl
xor
imul
or
mov
xor
add
mov
andl
mov
inc
mov
cmpl
jne
push
push
push
push
push
push
call
cmpl
jne
xor
or
inc
mov
cmpl
jb
dec
mov
xchg
sub
xor
jmp
mov
add
aad
jl
mov
mov
jle
jg
jle
iret
enter
fsubl
addr16
jle
leave
fstpt
cmp
pop
sub
lret
sub
xchg
xor
ljmp
bound
mov
jno
push
popf
cmp
or
cmpsl
js
push
xor
loope
pop
cmp
push
fadd
mov
or
shlb
gs
lods
push
push
xchg
aas
pop
jge
jmp
aaa
ja
rclb
outsl
push
aam
dec
aam
push
stos
jle
ljmp
fisttps
and
mov
test
inc
and
arpl
lds
jmp
lds
and
sbb
mov
inc
or
and
mov
icebp
push
sbbb
loopne
pop
or
pop
add
jge
fists
sub
mov
ret
into
xchg
movsl
repz
jb
aam
shlb
fidivrs
mov
jno
push
and
xchg
popa
mov
dec
ljmp
sub
stos
mov
add
test
pop
sti
icebp
push
jp
push
lods
pop
jmp
push
outsl
jle
rol
jmp
inc
js
mov
and
mov
or
jmp
gs
xor
pop
xchg
lods
mov
dec
jge
jle
aas
jg
jle
loope
loopne
jno
jecxz
adc
xchg
notb
repnz
sub
fiadds
lds
cli
xor
test
aas
xor
pop
lods
aas
lds
ficomps
mov
jns
arpl
popf
shrb
xchg
hlt
jle
pop
pop
pop
xor
add
jns
jb
test
negb
mulb
enter
xchg
lret
test
orl
repnz
push
in
inc
jbe
ljmp
ja
push
or
mov
aaa
cld
mov
mov
mov
int
jbe
in
outsb
shrb
adc
in
pop
adc
push
dec
add
int3
and
outsb
out
mov
mov
mov
jge
xchg
mov
mov
adc
popf
inc
popa
pop
xor
pushf
repnz
fsubp
jmp
dec
jp
fwait
gs
movsl
repz
jo
cmp
mov
fisttpll
test
out
jge
dec
filds
rorl
sub
adcl
pop
xchg
fs
dec
pop
cmp
imul
mov
cmp
mov
mov
jl
jbe
xor
loopne
xchg
inc
add
clc
xor
mov
negl
xor
sbbl
xor
add
mov
mov
mov
je
xor
mov
xor
xorl
jmp
mov
inc
aam
push
mov
xor
push
cmp
clc
jle
aas
jg
jle
popa
xchg
popf
dec
lret
in
push
mov
lea
or
out
aaa
jno
mov
xchg
and
inc
jmp
push
sub
stc
xchg
xlat
mov
jp
sti
xorl
sbb
mov
lds
mov
int3
mov
jns
inc
sub
les
ret
into
leave
jmp
jcxz
cltd
mov
mov
push
mov
or
jl
jl
test
lods
lods
lea
addr16
jg
push
pop
mov
xorl
les
adc
inc
inc
stc
jae
cmpsl
cltd
and
jnp
ds
cs
lcall
fwait
and
in
sbb
cmp
enter
dec
push
adc
ja
lea
popa
lea
pop
mov
push
insb
notl
andl
dec
ficompl
mov
das
fs
shlb
cs
cmp
adc
cmpsl
adc
mov
sbb
stc
cmp
out
fdecstp
call
test
pusha
daa
ss
inc
lret
in
xor
sub
adc
ja
ret
movl
cmp
movl
jne
orl
pushl
call
mov
mov
mov
andl
mov
inc
mov
cmpl
jne
pushl
pushl
push
call
cmpl
jb
mov
xor
mov
addl
xor
jmp
jns
mov
pop
insl
jns
lods
iret
loopne
lds
jle
aas
jg
jle
in
xchg
in
sbb
aam
dec
and
mov
loopne
int3
dec
shl
movsl
pop
jno
into
push
or
xchg
push
mov
fwait
in
adcl
imul
dec
push
lcall
adc
cmpsl
aaa
xchg
in
scas
lods
adc
scas
jbe
repz
ret
scas
add
outsl
aad
and
aaa
cltd
mov
xchg
inc
sub
push
scas
push
roll
sbb
scas
aas
popf
sbb
mov
mov
ss
insb
js
xchg
outsl
xor
lods
insb
xor
sbb
sub
mov
mov
das
into
out
js
loope
aam
push
add
mov
adc
in
dec
inc
or
and
daa
jo
sbb
dec
sub
andl
sar
mov
dec
insl
sbb
call
pop
push
inc
loopne
xor
push
xchg
outsl
dec
cmc
ret
stos
adc
mov
jnp
lods
cmp
mov
sbb
or
dec
push
mov
test
fistl
mov
lcall
lahf
jae
mov
je
mov
sub
add
push
lcall
add
cmp
movl
je
sbbl
pushl
andl
pushl
call
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
push
push
call
cmpl
jne
xor
add
inc
mov
jmp
mov
xorl
mov
add
mov
xor
orl
add
cmp
movl
je
add
mov
movl
cmpl
je
cmpl
jne
push
call
mov
dec
mov
jmp
mov
sub
mov
jmp
fldl
xor
cmp
push
in
xorb
jle
mov
loop
rcrb
cmp
mov
popf
xor
je
aaa
adc
shl
adc
sbb
rcrl
mov
xor
ret
aad
pusha
popa
sbb
fistl
or
push
dec
xor
jbe
test
xchg
test
mov
push
cmp
push
jg
jo
sbb
mov
dec
or
cmpsl
fs
push
inc
xor
mov
inc
jge
test
cmp
push
aas
xchg
sbb
aas
and
pushf
cmpsl
xor
rcrw
add
sbb
jns
imul
divl
subl
imul
or
iret
leave
movl
sbb
roll
popa
push
mov
adc
push
xchg
ja
mov
xchg
jle
mov
out
jecxz
inc
add
dec
fiadds
lret
movsl
jne
ror
gs
and
or
xchg
ret
cmp
daa
cwtl
xchg
xchg
mov
aad
test
sbb
cs
data16
in
out
xchg
or
cmp
mov
xor
xchg
jns
leave
dec
cmp
in
mov
sbbl
jmp
fmull
cld
popf
mov
scas
jecxz
push
or
jle
aas
jg
jle
push
aas
cmc
loopne
sbb
adc
out
lret
xor
stc
cli
enter
jb
out
out
dec
or
std
add
lods
loopne
mov
or
lret
data16
sbb
dec
adc
sbb
lret
hlt
fiaddl
sbb
movsb
imul
lock
call
adc
mov
push
cmp
adc
push
insl
jb
shlb
pop
xchg
push
push
push
jp
je
pop
test
popa
aam
loop
cmpl
add
mov
dec
stos
dec
sbb
xchg
jbe
cmp
mov
mov
in
cmpsb
fcom
xor
or
enter
push
out
outsb
daa
mov
and
ja
ljmp
jl
cmp
imul
jg
jns
sarl
icebp
fimull
jns
fcmove
shrb
push
add
mov
lcall
ret
js
fcoms
fnsave
js
fucom
cmpsl
cmp
pand
outsb
or
jae
fisttps
repnz
jno
add
pop
out
sub
pop
or
mov
xchg
xor
lock
mov
or
mov
mov
mov
orl
mov
add
mov
xor
mov
mov
andl
mov
inc
mov
cmpl
jne
push
push
pushl
push
pushl
push
pushl
push
call
cmpl
jb
mov
mov
add
xor
jmp
xchg
leave
popa
jge
jge
fldenv
test
lods
fbld
std
jle
aas
jg
jle
xchg
inc
mov
nop
pop
mov
xor
lret
cmc
mov
scas
ret
out
dec
jne
cs
push
stos
std
pop
mov
adc
aaa
sub
rcrl
cwtl
dec
xor
ret
das
ja
ret
pop
dec
mov
dec
sbbl
cmp
incb
xor
xchg
out
push
jmp
idivb
fwait
in
mov
mov
jmp
mov
push
push
lret
mov
pop
daa
dec
cltd
mov
cmpb
pusha
enter
sahf
dec
lcall
dec
add
mov
fldl2e
lcall
and
mov
push
out
mov
mov
sub
cmp
shrw
data16
imulb
cmp
sbb
gs
jecxz
lret
push
fucomi
out
lret
and
nop
dec
mov
dec
inc
ret
lods
inc
dec
jmp
cmc
icebp
repnz
dec
fdivr
push
sbb
add
leave
add
fbstp
adc
ret
repz
test
inc
mov
mov
mov
add
jmp
lea
pop
imul
jle
aas
jg
jle
test
mov
pop
cmp
and
mov
jle
clc
mov
sbb
jle
sarl
jle
mov
rcll
pop
cs
das
pushf
pop
dec
add
jno
mov
repz
out
push
pop
lods
inc
pop
mov
jg
pop
xchg
jge
andl
out
int3
ret
cmc
xchg
stos
fisttpll
push
sub
movsb
mov
aas
fs
adc
fsts
push
mov
mov
add
or
jl
pop
in
mov
and
ret
jmp
or
mov
jb
xor
adc
cltd
subb
ss
mov
insl
dec
decb
movsl
popf
mov
iret
push
push
cwtl
aam
lods
jno
mov
sti
push
jg
jmp
xchg
jmp
xchg
lock
inc
jg
mov
pop
pop
mov
lods
add
xor
pushf
add
mov
mov
dec
fbld
sub
insb
test
and
and
cmc
inc
sub
movsl
mov
push
push
inc
xchg
je
dec
push
xor
or
xor
jmp
and
and
sti
xor
cwtl
in
mov
jle
aas
jg
jle
mov
test
ror
and
sbb
xchg
orl
mov
stos
cmpsl
jns
movsb
xchg
hlt
data16
roll
cltd
loop
jg
mov
pop
inc
xor
mov
mov
out
push
lods
bound
fildl
in
push
movsl
add
adc
push
lret
sbb
shl
mov
lods
mov
mov
mov
cli
mov
add
push
dec
sub
push
adc
enter
ljmp
dec
fwait
and
sar
jge
adc
dec
out
inc
xor
inc
add
rcrl
sahf
lock
icebp
xlat
sbb
mov
mov
enter
fisubrl
pop
dec
stc
push
cmc
imul
loop
or
sub
pop
lods
and
cmpsl
sub
xor
sub
adc
jns
shlb
std
mov
mov
outsl
or
cmp
inc
push
jecxz
jg
or
sub
xor
or
in
stc
mov
xlat
cltd
aam
lods
adc
xchg
sub
rorb
mov
push
pushl
pushl
call
mov
jmp
push
sahf
sbb
fdivrl
or
cmp
jne
jle
aas
jg
jle
pop
lcall
fcomp
xorl
ret
sub
mov
fnstcw
or
jge
sahf
pushf
jg
inc
cmp
subb
mov
mov
adc
int
into
shll
adc
mov
push
imul
jmp
or
pushf
or
pop
test
mov
sahf
mov
sbb
lcall
adc
mov
sub
pushf
xchg
je
mull
js
stos
jb
xor
adc
testl
fdivrs
inc
outsl
xor
shr
mov
insb
pop
pusha
ret
fisubs
adc
xor
in
stos
call
test
pop
pop
dec
cmp
fdivrl
test
aad
int
cmp
add
test
int3
or
clc
pop
movsb
add
icebp
imul
adc
xor
jnp
or
jnp
aas
mov
inc
xchg
rcrl
jbe
jnp
xor
cmpb
fbld
add
cltd
jge
fcompl
hlt
inc
mov
xor
add
cmp
jne
mov
inc
cmp
jb
jmp
mov
xor
add
jmp
mov
movzwl
mov
mov
mov
mov
mov
xor
add
cmp
jne
mov
xor
jmp
jmp
pop
mov
jl
xchg
movsb
pusha
ficoms
jle
jg
jle
mov
lret
mov
das
lds
arpl
jnp
lods
fidivs
jnp
sub
jmp
sub
adc
mov
pushf
popf
sahf
shrl
mov
inc
mov
pop
lds
shll
popa
add
in
outsl
popa
jge
lock
stc
inc
movsb
push
xchg
xchg
pop
popa
sbb
dec
lret
pop
testb
jecxz
dec
repnz
sti
lea
inc
mov
pop
lahf
jo
cmpsl
xor
test
push
out
popa
jecxz
or
xchg
in
push
daa
imul
sarl
cmp
lahf
movsb
js
adc
mov
mov
mov
jg
int
fidivl
fiaddl
xchg
cmpsl
out
jb
mull
out
or
pusha
popf
adc
xor
test
repz
sub
insb
xor
xor
dec
sub
mov
dec
sbb
mov
out
fidivl
or
ljmp
lcall
cmp
adc
clc
or
dec
cmpsl
ret
or
inc
or
in
rorb
jbe
add
mov
push
pop
push
jmp
stos
xchg
fwait
adc
hlt
lcall
jle
aas
jg
jle
push
daa
and
mov
orl
stos
lret
popf
pop
inc
int3
fmul
daa
stos
jae
test
fldl
adc
pop
jl
xchg
dec
mov
idivl
cwtl
call
aaa
scas
inc
in
lcall
sbb
lcall
test
and
rcrl
mov
movsb
pop
xchg
mov
sub
icebp
je
addr16
insb
add
aad
mov
shlb
push
stos
cmpsl
fsubl
xor
dec
pop
xchg
jmp
push
pop
or
loope
sub
std
stc
and
push
call
adc
cmp
js
pushf
mov
mov
xchg
lahf
sar
xchg
mov
lahf
fnsave
je
filds
sub
cld
dec
and
ds
pop
mov
inc
cmp
pop
sub
ret
out
or
jb
jmp
pushf
and
mov
and
sbb
pop
xchg
or
cmc
and
ret
iret
and
lods
dec
mov
fcoms
xchg
out
and
xchg
repz
mov
add
add
xchg
inc
sbb
lods
lret
movsl
sub
cmp
aas
jg
jle
mov
aaa
push
out
bswap
jmp
sbb
addl
mov
mov
fistpl
mov
inc
adc
ret
addr16
mov
or
jl
xchg
jno
test
adc
dec
and
outsb
fisttpl
mov
mov
mov
sub
ficoms
imul
loopne
out
mul
or
mov
ret
fs
cmp
pop
jp
dec
xor
or
push
sahf
push
scas
fsubrl
icebp
add
negl
punpckldq
xchg
mov
test
adcl
cmp
cmp
mov
inc
push
xchg
outsb
out
imul
adc
and
lahf
into
cwtl
cltd
lods
push
hlt
or
pop
xor
rcr
mov
add
aad
jp
push
outsb
jno
sub
mov
add
push
add
test
jl
cs
or
add
pop
xor
mov
push
shl
xchg
sub
fcom
mov
js
dec
sbb
out
mov
cmpsb
or
pop
xchg
sub
xchg
dec
mov
imul
sub
mov
jmp
jp
rcr
std
jnp
mov
jl
enter
idivb
aas
jg
jle
das
ja
int
sbb
aam
mov
adc
arpl
cld
scas
cmp
mov
testl
add
jle
cli
fiadds
gs
inc
pop
lea
out
xlat
pop
xchg
fstl
js
jmp
out
out
jecxz
addr16
jl
inc
loopne
test
in
inc
fmuls
out
out
arpl
loopne
adc
jle
cmpsl
aam
push
negl
and
mov
mov
xor
mov
loop
outsb
fimuls
lods
cmc
or
sub
neg
jns
mov
adc
sbbl
fisubl
xchg
ja
mov
repnz
mov
aaa
pop
sub
mov
mov
or
jo
dec
int3
mov
int
push
pusha
dec
incb
inc
dec
jns
mov
add
or
pop
mov
cmp
add
cmp
mov
jmp
mov
mov
xchg
jno
dec
loop
xor
pop
cmp
js
push
arpl
mov
pop
xchg
jne
push
jge
pop
out
leave
pop
jmp
test
mov
push
or
jmp
test
test
jge
cmp
arpl
cmp
idivl
aas
jg
jle
enter
jo
jno
fisubl
dec
fsubrs
movsl
scas
xchg
aam
sub
cmpsl
fisttpl
inc
cmp
xor
aaa
insb
ret
push
outsl
adc
inc
pop
insb
js
sub
pop
jl
mov
test
test
shll
scas
ja
xorl
insl
test
adc
pop
ficomps
xchg
mov
cmp
mov
imull
xchg
sub
shl
cmp
cwtl
addr16
rclb
mov
mov
xchg
mov
xchg
xorb
push
push
popf
jecxz
enter
jmp
xchg
test
imul
inc
mov
mov
inc
adc
cmp
lcall
je
fistl
lods
negl
pop
mov
pop
imul
jecxz
xlat
scas
cmp
mov
scas
mov
mov
int3
and
add
ret
sahf
mov
inc
movsl
pop
repz
xchg
cwtl
inc
arpl
cs
in
cmp
test
jp
push
stos
jmp
bound
sbb
clc
lock
testb
push
cli
ja,pn
lea
sbb
je
jg
pop
mov
jb
add
push
xor
mov
add
jmp
mov
or
lods
jge
out
mov
movsl
pop
mov
jle
xlat
jnp
push
fimuls
cmpsb
in
shll
setb
push
lahf
rcr
roll
add
inc
mov
imul
test
jbe
lahf
pop
jg
pop
jbe
out
outsb
mov
mov
and
push
aaa
push
mov
ror
jl
std
mov
adc
fisubs
sub
aas
mov
insl
lret
in
out
inc
mull
cmp
push
test
fadds
or
sbb
cmp
fs
call
imul
mov
in
mov
fs
inc
cmp
pushf
push
outsb
dec
pusha
mov
out
dec
pop
shll
pop
push
imul
xor
scas
mov
inc
xchg
and
fmuls
push
and
add
mov
adc
std
fisubrs
xlat
out
xor
inc
sub
push
mov
sub
pushf
sub
je
mov
insb
out
lret
sub
cmp
pusha
popf
stos
adc
inc
cmp
lock
fidivrs
mov
test
xchg
inc
movsl
sbb
arpl
pop
push
xchg
ja
mov
mov
xor
add
mov
imul
mov
jmp
inc
sbb
gs
jae
bound
dec
mov
aas
jg
jle
cmp
jb
call
sub
mov
push
cmp
mov
int
les
fisttpl
jae
dec
cltd
cmp
mov
insl
iret
dec
daa
dec
inc
mov
inc
das
shll
inc
mov
nop
leave
int
sbb
cmpsb
lret
pop
mov
push
mov
cmc
pop
pusha
cs
scas
jecxz
lock
xor
int3
stc
mov
out
sub
fdivrs
test
loope
icebp
nop
movsb
pop
jg
fnstenv
xor
popa
cmp
dec
and
in
xchg
pop
out
jmp
testl
push
and
dec
xor
jg
and
push
dec
pop
ds
mov
movsl
or
daa
aam
pop
lcall
icebp
sub
mov
sbb
and
insl
push
xchg
fwait
adc
push
xchg
outsb
sbb
sbb
and
jmp
scas
sub
in
sbb
fmul
roll
filds
test
mov
sti
lcall
mov
adc
mov
and
ljmp
xchg
xchg
sti
cmp
pop
or
fs
out
out
jecxz
fiadds
rorl
or
enter
add
call
push
adc
inc
addb
or
xor
xor
mov
add
div
mov
xor
jmp
jno
cmp
jge
in
pop
xor
cmpb
sub
jg
jle
lret
or
nop
popa
xchg
cwtl
sarb
xchg
ss
sahf
or
mov
mov
test
and
popf
clc
pop
sub
mov
call
or
arpl
add
add
and
lds
xor
sub
arpl
dec
jne
fidivs
dec
fwait
shl
pushf
mov
movsl
enter
pop
arpl
mov
into
mov
daa
pushf
testl
push
addr16
xlat
testl
mov
mov
push
sbb
inc
es
mov
imul
lahf
push
out
andb
push
inc
mov
mov
pusha
int
icebp
dec
pop
add
pop
add
mov
fcompl
icebp
cmp
cmp
xor
mov
sub
add
into
jl
mov
dec
push
push
test
jno
divb
imul
repz
fwait
push
xor
lods
dec
pop
ret
inc
pop
mov
pushf
into
dec
cmc
icebp
mov
push
inc
inc
adc
sub
push
ds
data16
in
jno
mov
push
pop
push
shlb
xchg
lods
jne
lea
mov
mov
mov
mov
mov
xor
lea
mov
mov
jmp
cs
jecxz
jnp
aad
lock
sti
mov
jle
aas
jg
jle
int3
mov
xor
inc
out
imul
arpl
es
imul
cmp
loopne
test
aam
rclb
push
stos
fdivl
ljmp
sub
cmc
je
ret
js
pushf
jg
nop
xor
iret
mov
fcmove
cmp
mov
out
xlat
test
adc
jmp
jge
sar
push
inc
out
jo
int
je
leave
ljmp
lods
rcrb
test
jb
scas
or
test
jg
cmpsl
mov
push
push
add
repnz
mov
adc
gs
nop
adc
cwtl
lret
int
rclb
jbe
dec
mov
jl
dec
movsl
sbbl
mov
vsqrtsd
fs
fiadds
daa
inc
fiaddl
add
int
fistps
mov
cltd
or
cmp
add
lods
sbb
sub
cli
lcall
stc
sahf
orps
jmp
cs
mov
out
adc
sbb
imulb
shrl
sbb
mov
incl
lock
lcall
cmc
inc
int
mov
xor
add
imul
jmp
into
jb
pop
inc
pop
fisttpll
sarl
jle
aas
jg
jle
movsb
inc
jle
inc
inc
cs
pushf
pop
imul
test
xor
test
cli
jo
hlt
outsb
add
out
mov
div
icebp
movsl
mov
test
or
push
rclb
lcall
push
or
es
rclb
sub
add
xchg
loope
inc
aam
repz
adc
cmp
xor
ljmp
pop
sti
pop
jnp
xchg
clc
into
jmp
fdivrl
jbe
add
adc
stos
sbb
andb
movsb
mov
dec
dec
lods
movsb
push
aam
add
jno
cmp
pop
jae
cmpsb
xchg
shrb
fidivs
repz
dec
fimuls
push
xor
pop
xchg
jb
push
dec
pop
lret
mov
and
xchg
xor
cwtl
push
fscale
cmp
lcall
jns
xor
cmc
ror
mov
gs
aas
push
mov
mov
push
push
jmp
cmp
enter
data16
sti
jecxz
xor
cs
fwait
inc
in
cmp
xchg
xlat
decb
xor
mov
and
pop
decl
sbb
xor
push
pop
push
pop
add
add
idivl
push
jp
sti
inc
aaa
mov
sbb
jle
jg
jle
dec
or
push
dec
insb
lds
pop
xchg
cmp
mov
mov
xchg
je
movsl
xor
dec
pusha
in
int3
sarl
enter
adc
sub
sbb
aaa
jge
add
shlb
outsl
xchg
ret
pop
lcall
push
scas
mov
out
mov
add
fwait
cs
xchg
movsl
cwtl
shrb
movsl
mov
add
inc
push
bound
test
mov
adc
mov
sbb
mov
xchg
add
pop
push
jecxz
cmpb
lods
xor
xchg
mov
popl
jae
mov
add
int3
rolb
out
adc
and
adc
sbb
aad
adcb
mov
loopne
enter
call
lahf
aaa
mov
or
dec
mov
mov
cld
lret
cmp
sbbl
cmp
add
mov
ljmp
out
xor
mov
cltd
pop
fwait
insl
lods
cmc
mov
fucomi
call
sub
popa
fistps
cltd
pop
lret
aaa
inc
mov
inc
loopne
add
cmp
test
or
xor
cmp
jne
mov
jmp
mov
mov
xor
add
mov
xor
lea
add
jmp
xchg
pop
mov
cmp
pop
xchg
or
cmpb
jg
jle
sti
lds
sub
mov
and
cld
push
lahf
fidivrl
loope
lahf
cmpl
sbb
sbb
adc
mov
stos
out
adc
mov
adc
dec
push
into
loopne
pop
in
cwtl
out
add
loopne
and
je
sbb
out
negl
ret
lret
ljmp
or
std
add
gs
fcomps
in
arpl
add
test
test
fistps
xchg
ljmp
and
nop
and
rcrl
cmp
adc
inc
int3
and
addr16
int3
mov
in
out
dec
push
into
cmp
add
movsb
sub
pop
push
mov
pop
mov
pop
loop
fstps
outsb
rcll
mov
fiadds
sarl
mov
imulb
jecxz
pop
mov
or
mov
or
inc
andb
rcrb
push
std
inc
pop
lock
fisubrs
dec
inc
mov
mov
add
jno
lahf
add
idivb
sub
mov
pop
sarb
adc
pop
push
sbb
mov
jno
sahf
push
jl
cmp
shll
fucomi
pop
add
add
arpl
imul
mov
push
out
jo
cmpl
jmp
or
inc
and
or
inc
dec
ja
stos
aaa
inc
cmpsl
sub
inc
sub
jecxz
fstl
jp
daa
mov
out
mov
xor
fs
mulb
test
cmp
mov
xor
mov
adc
push
cmp
and
jae
jb
mulb
dec
jbe
jo
rcll
add
movsb
xchg
mov
sub
mov
mov
outsl
out
out
inc
sarl
push
adcb
movsl
test
lcall
mov
mov
fnstenv
mov
fistl
sbb
cmp
lods
push
or
add
gs
stos
stc
rorb
scas
sub
nop
dec
xor
xor
add
add
leave
jo
testb
and
pop
rorl
loope
ljmp
push
push
push
pop
inc
subl
out
xor
cmp
sbb
pop
and
and
in
jb
inc
jmp
jae
aas
mov
cmp
stos
popf
cwtl
loop
cmpb
jg
jle
mov
out
leave
push
or
faddl
lods
dec
jl
stos
jg
jbe
rclb
cmovb
pop
leave
out
mov
add
repnz
xor
call
cli
sti
insl
and
cwtd
scas
popf
pop
xor
ja
xor
filds
mov
enter
mov
addr16
fstl
fstpt
mul
aaa
adc
aaa
cmp
push
and
jle
movb
pop
cld
jp
loope
inc
inc
lahf
loope
add
iret
jp
adc
sub
rorl
mov
mov
sub
notl
jp
adc
ss
js
pop
cltd
lds
into
push
mov
lock
subb
sbb
mov
cmp
ret
push
icebp
sub
scas
stos
sti
jno
test
fwait
enter
lcall
cmpsl
lret
mov
cmp
jmp
pop
ja
aas
lret
insb
xor
cmp
outsb
data16
sub
les
jg
stos
ljmp
mov
cli
sub
xchg
orb
int
mov
test
clc
or
pop
adc
test
add
add
pop
add
add
cmp
mov
sbb
filds
aas
jg
jle
out
in
xchg
int
negl
cwtl
scas
push
xlat
mov
adc
jg
fucomi
lahf
and
mov
sub
jnp
lret
idivl
inc
push
or
inc
sub
pop
mov
gs
mov
jecxz
pop
ret
mov
testl
add
mov
mov
inc
movsl
mov
shr
sub
out
fistps
and
xchg
dec
es
jmp
pop
inc
add
adc
repz
aad
int
add
loope
fldenv
int3
mov
dec
int
mov
int
into
dec
cmpsl
fidivrs
mov
filds
push
jg
testl
sub
mov
pop
shrb
ret
push
jmp
jle
fsubrs
adc
jmp
or
add
xchg
mov
push
cld
imul
inc
push
andb
hlt
cmp
xchg
cmp
or
push
sub
inc
int3
xchg
jp
mov
xor
aaa
sub
cmp
push
sbb
mov
repnz
xchg
jmp
dec
adc
jns
rclb
mov
add
jg
jle
pop
out
test
sbb
std
mov
jle
adc
in
or
push
ja
sbb
lret
loopne
jle
loopne
pusha
outsb
adc
repz
push
in
loop
fisubrs
jb
shlb
inc
icebp
jcxz
stos
bound
add
adc
mov
inc
popa
dec
cwtl
out
shll
or
xor
jne
jecxz
add
insb
out
pop
mov
fstpl
test
fisubs
mov
stc
lcall
or
orl
jo
int3
xchg
xlat
jno
mov
pop
fsubrl
push
push
fxch
test
nop
lahf
pop
mov
inc
mov
test
push
out
mov
vmovshdup
xlat
mov
inc
sbb
ljmp
mov
dec
jl
fdivp
insb
call
out
xor
movsl
dec
inc
add
mov
mov
jne
adc
dec
clc
push
push
lds
mov
es
push
aad
out
cli
aas
pop
mov
or
pop
out
insb
push
cs
dec
mov
movsb
jl
lcall
sub
xchg
adc
clc
popf
adcb
fdivl
pop
push
pop
inc
xchg
jmp
ss
or
mov
jmp
daa
movb
jle
icebp
popf
cmc
repnz
dec
sbb
adc
jp
sub
shl
lcall
adc
cmc
movsb
ds
pop
int3
jbe
repz
mov
out
and
cmp
lods
lcall
movsl
dec
ljmp
fwait
outsb
in
pop
sbb
popf
or
adc
xor
lods
rcl
xor
xor
test
leave
pop
and
pop
lds
test
aas
lahf
or
test
lock
mov
enter
popf
mov
mov
pop
adc
scas
adc
push
dec
out
mov
divb
adc
aad
cvttps2pi
and
mov
mov
lret
cmp
jb
jl
xor
sahf
mov
sub
push
add
pop
sbb
ja
inc
lds
jge
and
push
xchg
xchg
in
adc
cmpsl
push
mov
or
xchg
mov
mov
lea
insb
in
push
movsl
movsb
push
or
jecxz
nop
and
fldz
add
pop
pushf
es
andl
or
aam
es
adcb
sub
xchg
dec
mov
imul
add
xchg
push
xor
mov
dec
inc
add
dec
xor
add
pop
jmp
mov
pop
pop
in
pop
shll
xchg
aas
jg
jle
mov
sbb
lods
sub
cmc
fcmove
xorl
std
cmp
inc
ja
test
or
cmp
roll
int3
inc
sbb
inc
loop
xor
inc
out
cmp
adc
and
sbbb
mov
sub
cld
inc
xchg
outsl
sti
adc
pop
divl
and
adcb
adc
orb
popf
mov
pop
les
out
jl
pop
sub
mov
sub
sahf
insl
pop
adc
stos
mov
jno
jle
out
aam
add
adc
jno
lcall
hlt
aaa
cmp
dec
sbb
and
aaa
loope
mov
and
add
adc
jle
sahf
cmp
scas
ret
notl
dec
jnp
add
mov
in
jl
shll
fnsave
jl
jle
aam
mov
mov
sbb
outsl
or
int3
ds
add
fisubl
sahf
movsb
in
push
sub
gs
push
stc
cmpl
bound
stos
clc
push
bound
pop
leave
ret
dec
push
mov
mov
or
dec
add
add
add
movl
xor
hlt
clc
lret
enter
mov
hlt
test
pushf
enter
movl
inc
inc
cld
xor
or
mov
call
pop
mov
dec
mov
pushl
or
ljmp
dec
loopne
rorb
add
mov
hlt
add
enter
dec
add
mov
orl
xor
lret
enter
mov
lea
push
mov
fs
decl
push
and
pop
inc
mov
push
pop
cld
dec
lea
mov
add
movl
decl
xor
cld
dec
jne
lea
push
mov
or
add
sub
add
rolb
inc
add
add
mov
incl
lea
call
add
jne
decl
dec
add
xchg
loopne
inc
incl
mov
xor
add
enter
mov
hlt
add
mov
add
add
incl
sbb
jne
mov
mov
movl
incl
rorl
test
inc
aas
inc
lea
pushl
mov
mov
loopne
ljmp
mov
add
incl
xlat
lea
inc
ljmp
incl
aaa
add
repnz
ffreep
aas
add
mov
incl
or
mov
xchg
roll
mov
cmp
dec
lds
add
adcb
add
add
mov
cld
push
decl
push
mov
call
mov
add
test
ljmp
mov
fcom
add
mov
add
add
add
add
push
inc
push
fisttps
test
add
jecxz
roll
inc
jle
test
jmp
incl
loope
jne
mov
cld
incl
mov
mov
add
call
int3
mov
add
add
xor
mov
cld
jle
push
add
add
inc
inc
mov
decl
add
inc
lret
cld
push
mov
add
mov
mov
inc
sub
add
rolb
jne
xor
incl
call
mov
call
xor
push
adc
loopne
ret
loopne
xorl
cmp
bswap
rolb
jmp
mov
add
cld
jne
xor
pusha
add
add
inc
add
mov
test
add
incl
jmp
adc
mov
popf
mov
lea
xor
call
call
jne
xor
add
pushl
call
int3
incl
mov
xor
add
xchg
in
add
add
or
mov
mov
or
inc
test
je
mov
xor
push
or
inc
in
mov
mov
fmul
add
mov
cld
loopne
inc
push
cmp
movaps
cld
fadds
jne
push
in
jne
lea
xor
jmp
mov
xor
adcl
rclb
inc
lock
inc
xchg
ud0
incl
adc
adcb
or
inc
lret
inc
iret
jb
mov
enter
xor
mov
pushf
lea
add
inc
mov
xor
add
mov
fmuls
xor
mov
aad
pushf
xor
mov
clc
enter
mov
test
clc
incl
mov
test
cmp
pushf
inc
mov
popf
push
add
mov
sarb
adc
dec
adc
add
jmp
jb
add
xor
xor
add
clc
enter
pop
mov
push
push
xor
xor
add
add
lret
repnz
cli
fdivr
test
dec
inc
xor
add
mov
mov
clc
jne
mov
into
into
scas
dec
mov
sub
cmp
mov
mov
mov
add
xor
xor
rdtsc
lret
mov
inc
add
mov
lods
test
xor
mov
lock
bswap
lret
test
jmp
add
push
mov
test
push
clc
xor
xor
add
add
push
dec
mov
stc
roll
scas
mov
xor
xor
add
mov
clc
lret
into
mov
mov
mov
int3
add
xor
xor
add
mov
lock
stc
mov
or
jmp
dec
dec
mov
clc
test
clc
rorl
mov
call
les
lret
ja
mov
dec
xor
mov
clc
push
lret
mov
adc
jb
add
call
cmp
movsb
popf
inc
xor
mov
clc
dec
lret
mov
call
scas
mov
popf
sub
cmp
lods
xor
add
mov
mov
cmp
jb
add
dec
scas
mov
shrl
into
cmp
mov
dec
dec
mov
lret
xor
add
imul
mov
xor
mov
add
mov
inc
sysexit
xlat
pushf
jge
xor
sub
cmp
jb
add
rorl
xor
add
jmp
mov
dec
into
mov
popf
shll
lret
or
add
in
push
mov
arpl
int
sub
dec
xor
jge
mov
add
dec
decl
adcb
add
jge
push
push
shlb
xor
xor
inc
add
dec
or
jbe
mov
ror
enter
decl
push
lret
push
mov
mov
cld
subb
sti
add
push
lcall
mov
int3
pop
inc
decl
push
xor
movl
aas
push
inc
xor
add
mov
jmp
mov
rol
mov
mov
mov
cmp
mov
add
xor
popf
lret
cmp
call
inc
inc
mov
mov
add
add
clc
enter
push
pushf
mov
int3
or
test
clc
gs
add
push
xor
sub
dec
add
mov
or
cmp
dec
out
xor
mov
dec
add
push
push
add
sbb
mov
xor
dec
inc
xor
add
push
dec
mov
lret
into
sub
dec
adc
inc
push
test
unpcklps
jmp
add
movl
xor
rolb
clc
arpl
mov
xor
sub
mov
add
sub
mov
mov
clc
addl
lcall
inc
decl
test
decl
push
add
dec
or
rorb
into
add
mov
sar
adc
clc
fadds
mov
push
adcb
add
lret
mov
cld
mov
into
add
jne
incl
rclb
push
mov
mov
sar
or
push
add
pushf
xor
test
clc
inc
inc
mov
sub
mov
dec
arpl
inc
add
dec
arpl
inc
add
inc
add
movsl
pushf
inc
dec
lea
push
xor
pop
lods
incl
mov
rcrb
test
inc
inc
add
pushf
orb
xor
add
adc
add
jmp
add
mov
dec
push
cmp
unpcklps
jne
decl
mov
shlb
inc
add
lret
decl
stc
in
or
dec
clc
xor
mov
rolb
inc
add
clc
inc
lret
mov
in
lret
into
into
scas
dec
mov
sub
cmp
mov
int3
test
xor
xor
rdtsc
lret
mov
inc
add
mov
xor
mov
call
lret
test
jmp
add
push
mov
mov
lret
xor
add
add
push
dec
mov
stc
roll
scas
mov
xor
xor
add
mov
clc
lret
into
mov
test
push
jbe
mov
mov
push
add
rdpmc
lret
add
dec
stc
mov
or
jmp
dec
dec
mov
clc
test
clc
rorl
mov
lock
inc
mov
hlt
pushf
jge
sub
cmp
ja
mov
dec
xor
mov
clc
push
lret
mov
adc
jb
add
lock
sub
mov
mov
mov
mov
lock
ror
push
scas
mov
popf
sub
cmp
movsb
xor
add
mov
mov
cmp
jb
add
dec
scas
mov
shrl
into
cmp
mov
dec
dec
mov
lret
xor
add
imul
mov
xor
mov
add
rolb
sysexit
xlat
pushf
jge
xor
sub
cmp
dec
xchg
incl
jmp
mov
dec
into
mov
popf
shll
lret
or
add
in
push
mov
arpl
int
sub
dec
xor
jge
mov
add
dec
decl
inc
push
decl
lea
push
mov
push
mov
les
add
incl
mov
cld
lret
add
jne
in
ror
clc
into
add
not
adc
inc
push
mov
push
mov
fdivr
sti
sbb
pop
xchg
leave
popf
add
push
cmp
sqrtps
decl
push
cld
xor
lret
clc
xor
add
hlt
or
mov
hlt
dec
add
leave
mov
push
roll
mov
mov
lar
push
lret
jne
mov
or
mov
cld
inc
mov
add
loope
inc
call
inc
mov
cld
mov
clc
xor
mov
loopne
mov
mov
clc
jne
call
sub
test
je
mov
cld
or
push
add
add
inc
push
mov
pop
mov
ret
push
mov
clc
lock
jne
jne
mov
rolb
jne
cmp
pop
mov
push
inc
lea
inc
inc
rorl
xchg
mov
mov
or
inc
inc
mov
cld
jmp
mov
mov
rclb
iret
inc
leave
decl
mov
mov
mov
push
nop
incl
push
leave
iret
add
push
in
push
push
incl
mov
loope
sbb
add
mov
cmp
jne
push
pop
push
mov
or
add
sub
ret
add
sbb
mov
lea
push
enter
testl
enter
negl
or
inc
in
in
sub
inc
in
push
add
push
push
imul
adcl
add
lea
mov
cmp
jne
mov
loope
inc
stc
xlat
ss
aas
in
ret
lock
and
mov
call
push
add
ud0
hlt
add
cmp
flds
out
call
cmp
shr
pop
fisttpll
push
add
add
push
add
sub
jne
lods
mov
dec
out
into
push
loopne
shrb
xorl
roll
mov
cmpl
mov
push
push
push
sub
push
adc
insl
mov
add
inc
mov
pop
addl
add
add
roll
cli
push
pop
lret
add
decb
sub
and
dec
inc
shll
add
pop
add
pop
dec
jmp
and
push
out
jmp
jmp
mov
decb
add
pop
icebp
mov
insb
adc
mov
or
mov
cld
jge
aas
and
adc
mov
and
dec
add
add
fadds
stc
enter
sbb
sbb
in
in
add
jne
cmp
jb
jmp
mov
add
add
jb
pop
faddl
or
inc
or
xlat
dec
push
add
leave
roll
add
mov
int3
jmp
mov
jne
mov
call
pop
add
pop
or
push
mov
int3
add
jae
int
enter
add
mov
push
pop
add
push
lea
mov
jb
mov
push
add
add
add
int3
jne
movsbl
add
add
mov
add
add
mov
sub
jb
add
jge
add
addl
jne
je
mov
rorb
orl
mov
mov
fadds
inc
pop
lea
push
out
add
add
mov
jb
add
push
call
add
jae
icebp
inc
mov
int3
out
loopne
sub
push
pop
push
jl
add
xor
mov
rcrb
rorl
inc
shr
orl
push
pop
add
jmp
mov
fdivrl
push
pop
call
mov
in
rolb
call
pop
enter
repz
xorl
je
or
jne
jmp
pushl
push
pop
cmpl
jge
mov
sub
pop
inc
mov
sub
lods
add
enter
repz
stc
jge
jnp
call
fadd
dec
insb
stc
cmp
push
mov
jne
mov
mov
add
sub
and
cmp
sbb
pop
call
fsubr
sti
add
add
add
roll
mov
clc
jne
mov
loopne
loopne
lods
int3
inc
mov
add
sub
shrb
add
call
add
dec
insl
in
lea
inc
inc
sub
orl
and
rorl
or
mov
stos
adc
inc
add
jne
mov
cmp
sub
sar
ljmp
sub
mov
mov
and
jne
sub
sbb
dec
push
add
ret
mov
leave
sub
ret
pop
push
rolb
addl
jb
ret
in
jecxz
push
xchg
jne
cmp
jne
mov
rorl
mov
pop
nop
mov
les
add
inc
mov
mov
cmp
or
inc
inc
xor
insb
cld
add
add
add
sbb
dec
je
mov
add
and
jae
mov
incl
push
shr
in
push
add
add
inc
mov
add
push
cmovne
xor
push
pop
xor
add
sub
aad
inc
add
add
xlat
insb
inc
inc
and
dec
add
inc
fnstcw
leave
add
lea
ret
mov
xor
mov
sbb
stc
mov
les
mov
add
add
or
mov
add
add
push
movb
or
dec
lea
or
movsl
fiadds
jae
or
loope
inc
xor
pop
inc
shr
inc
and
inc
add
add
out
clc
inc
ret
inc
mov
leave
sub
add
add
sbb
stc
test
lea
mov
dec
int3
mov
movb
dec
ljmp
or
jge
shl
xor
add
rdpmc
sbb
mov
in
cmovne
jecxz
inc
mov
sbb
mov
add
loopne
inc
dec
and
inc
mov
leave
movl
inc
add
inc
xlat
sbb
xor
dec
mov
mov
fadd
inc
rcl
inc
push
movb
xor
lea
inc
jae
ficomps
addb
test
incl
inc
add
mov
cld
mov
mov
pop
sar
cmp
jne
mov
loopne
pushf
jae
add
add
add
jmp
mov
pop
add
add
decl
mov
mov
data16
mov
add
add
data16
ljmp
pop
jle
inc
sbbb
test
jmp
push
jne
lea
movl
sar
mov
loopne
rol
ljmp
push
inc
inc
mov
cwtl
movl
add
add
call
incl
xor
jne
mov
ret
out
mov
push
xor
mov
mov
mov
lcall
and
push
mov
decl
mov
jp
mov
mov
jl
decl
mov
push
decl
orb
xor
call
test
mov
into
xchg
loop
xchg
lods
ret
in
inc
dec
in
xor
add
mov
mov
incl
jno
data16
add
mov
fmull
aam
call
push
mov
xor
add
subl
mov
add
pushl
push
lea
mov
sar
orl
fs
add
add
adc
add
test
inc
incl
dec
mov
mov
push
xor
push
inc
xorl
mov
push
inc
adcw
movl
clc
push
inc
data16
push
pushf
data16
dec
in
test
xor
in
add
decl
mov
lea
push
push
test
inc
inc
mov
push
shlb
test
cs
incl
data16
test
incl
incl
mov
lcall
leavew
xchg
inc
pushl
call
lea
mov
enter
mov
xor
sbb
sbb
dec
mov
mov
movl
mov
mov
sar
sub
mov
add
inc
mov
or
addb
xor
pushf
js
add
mov
inc
xor
lcall
cmp
movl
lcall
dec
inc
mov
mov
mov
nop
ret
add
jne
test
jne
decl
call
sbb
stos
mov
mov
inc
cmp
push
cwtl
inc
add
lcall
test
mov
adcb
add
add
movl
mov
inc
add
cmp
incl
inc
push
xor
add
mov
and
incl
lea
pushf
or
jmp
decl
mov
loopne
movl
sbb
out
mov
push
push
test
mov
cwtl
inc
add
movl
add
add
pushl
or
rorb
cld
sbb
inc
mov
movsb
add
push
movb
jmp
mov
clc
mov
incl
mov
cmp
push
add
xor
add
mov
mov
mov
hlt
movsb
add
add
mov
dec
inc
mov
add
add
add
mov
mov
push
decl
decl
xor
add
push
xchg
inc
incl
jnp
mov
pusha
add
test
decl
ret
add
mov
cli
incl
test
add
or
cmp
add
sub
mov
mov
add
inc
dec
mov
add
mov
inc
push
push
mov
mov
adcl
add
push
add
push
test
decl
mov
sbb
incl
movl
add
add
mov
push
push
test
decl
inc
push
xor
and
call
test
incl
decl
inc
decl
arpl
int
xor
mov
cwtl
pushf
add
mov
mov
incl
adc
addb
adc
push
inc
add
mov
mov
push
adc
mov
mov
addl
incl
inc
cmpsl
mov
add
mov
cmp
movsb
mov
sbb
addb
hlt
add
mov
hlt
pop
inc
xor
pushl
mov
pushl
mov
sub
add
mov
mov
ret
mov
ret
mov
add
mov
sub
sar
test
inc
add
testb
push
add
add
add
add
add
mov
mov
sbb
jne
mov
xorb
add
cld
add
mov
cld
add
lret
add
sbb
dec
or
dec
sbb
inc
dec
mov
sbb
nop
scas
add
add
mov
add
mov
cmp
xor
gs
je
push
sarb
mov
push
cmp
add
dec
mov
in
adc
pop
inc
leave
or
gs
add
into
in
enter
push
xorl
or
jnp
test
add
mov
ltr
decl
clc
out
add
cmp
jge
jb
je
pop
push
mov
in
roll
orl
cmpl
hlt
mov
push
jns
lock
ror
test
dec
rcpps
mov
inc
test
je
mov
adcl
and
jp
rcpps
add
sbb
add
je
cmp
js
add
jns
vmread
add
adc
jge
mov
add
or
push
push
mov
add
pop
add
mov
inc
pop
xorl
add
push
clc
mov
jp
add
divl
test
je
mov
or
decb
jbe
mov
add
cmp
add
je
mov
mov
hlt
orb
jb
jmp
xor
pop
pop
pop
ret
ret
mov
xorl
cld
cmp
xor
cld
or
ret
mov
pop
dec
jne
xor
inc
dec
jbe
inc
pop
add
push
dec
push
mov
and
jo
mov
sbb
mov
nop
or
jne
cmp
cld
xor
add
cmp
js
jae
xor
jmp
mov
fdecstp
test
add
add
mov
cmp
adc
jge
mov
jl
clc
dec
jge
mov
jb
mov
mov
xor
add
mov
inc
pop
jge
cmp
mov
imul
fimuls
fists
in
jne
mov
imul
fdivrp
filds
test
inc
mov
mov
adc
rcll
mov
fiadds
mov
mov
xor
mov
xlat
into
ffreep
lret
iret
dec
inc
mov
fmull
dec
jnp
add
mov
inc
dec
lea
add
jb
add
inc
imul
cld
clc
mov
incl
or
sbb
lret
add
dec
add
enter
inc
pop
decl
add
add
mov
xor
or
pop
cltd
push
clc
mov
xor
add
cmp
hlt
cmp
or
mov
loopne
mov
cld
pushf
pop
popf
mov
lock
adc
orb
xor
dec
mov
iret
inc
jne
mov
cmp
je
add
or
dec
inc
mov
cld
add
cmp
mov
or
mov
test
pushf
call
jne
mov
fcomps
add
incl
cld
add
mov
cld
inc
fidivrs
fbstp
mov
adc
fadd
add
mov
inc
mov
loopne
sbb
sbb
pushf
add
mov
cwtl
inc
inc
jne
mov
clc
add
mov
or
inc
lea
add
inc
rorl
add
shufps
jmp
xor
hlt
mov
fadds
xor
add
cmp
pmuludq
jmp
mov
or
inc
mov
jne
mov
clc
add
xor
jne
pushl
add
mov
cld
add
xor
lea
adc
sub
lea
add
jb
add
inc
add
inc
mov
or
mov
in
scas
inc
mov
in
add
mov
dec
mov
mov
cld
push
dec
add
mov
in
cmp
mov
mov
mov
xor
cmpl
xor
jmp
add
xor
add
cmp
mov
mov
adc
jmp
mov
cld
mov
push
jne
dec
or
push
inc
in
add
or
dec
cld
mov
xorl
pushf
decl
mov
mov
xor
mov
inc
mov
mov
call
add
mov
or
jo
push
xor
pmulhuw
test
mov
mov
xor
xor
xor
add
inc
mov
movl
sub
lock
mov
mov
or
ja
mov
cld
cli
mov
cmp
bswap
mov
mov
clc
repnz
push
xor
xor
pop
jmp
mov
xor
lea
xor
neg
insl
test
clc
pop
inc
or
xor
add
jne
mov
in
push
xor
add
cmp
add
mov
mov
add
mov
mov
popf
pushf
xor
jne
mov
icebp
icebp
shl
mov
pusha
jne
mov
in
jmp
add
mov
or
inc
jne
mov
ret
or
jge
sub
xor
add
mov
clc
negl
xor
cmp
repz
xor
add
mov
mov
cld
lock
test
clc
add
fdivrp
test
jnp
add
jae
sub
shll
leave
call
in
in
add
mov
in
test
mov
xor
pushf
jnp
xor
push
loopne
jne
mov
add
xor
mov
cld
jb
add
jne
mov
jge
mov
lock
xor
mov
lock
jge
xor
dec
mov
loopne
jge
add
cmc
add
dec
hlt
xor
mov
in
jge
mov
dec
xor
inc
hlt
xor
add
icebp
add
mov
cmp
test
fistps
inc
mov
add
inc
test
add
add
ret
jnp
inc
inc
xor
add
xor
add
mov
cmp
setge
mov
call
or
inc
mov
and
lock
movl
mov
clc
xor
mov
inc
mov
mov
mov
mov
hlt
inc
rorl
mov
push
mov
in
jne
mov
addl
clc
mov
clc
add
rolw
mov
jne
incl
inc
push
test
sub
add
and
add
mov
and
inc
adc
inc
inc
push
push
jne
push
enterw
mov
add
add
str
lea
sbb
dec
cmp
inc
push
mov
push
add
mov
inc
add
xor
add
mov
loopne
dec
mov
cld
push
xchg
add
add
or
dec
loopne
xchg
push
add
dec
jmp
mov
sbb
inc
xor
add
push
divl
and
add
jno
incl
inc
push
push
mov
mov
push
inc
enter
push
call
pop
push
mov
mov
push
jo
incl
or
call
fmull
mov
mov
adc
dec
xor
mov
mov
mov
push
lret
movb
inc
movntps
lret
into
dec
lret
mov
mov
fdivl
mov
push
mov
sbb
dec
sarl
push
jne
mov
lea
call
sbb
add
push
mov
push
mov
test
xadd
pop
add
mov
or
push
add
add
and
call
add
mov
add
xor
add
inc
je
push
push
dec
mov
or
inc
add
data16
subl
add
add
enter
int3
loopne
rolb
lea
data16
add
sbb
inc
inc
lldt
xor
sub
mov
or
ror
dec
inc
cmp
cld
or
lret
lret
dec
mov
in
and
or
in
xchg
add
add
push
inc
xor
add
push
push
inc
jmp
push
inc
sbb
rorb
addb
ljmp
xor
mov
fmuls
add
lea
add
popl
add
push
incw
mov
add
xor
test
inc
mov
add
or
or
inc
mov
jne
mov
add
add
adc
adc
push
mov
mov
inc
mov
or
push
jne
call
inc
shlb
add
add
and
fs
inc
test
leave
scas
inc
add
orb
call
shr
xchg
add
add
dec
and
push
decl
mov
mov
lea
mov
add
mov
push
shlb
inc
in
jno
push
mov
mov
je
mov
sbb
popl
add
add
adc
jmp
sub
jne
mov
in
popl
push
incl
adc
add
call
and
and
inc
test
sldt
xor
pushf
jmp
mov
or
inc
call
mov
loopne
inc
add
mov
add
add
cmp
test
sbbl
jne
call
leave
rcrb
add
add
add
inc
mov
fcom
add
lea
pushl
call
mov
fstps
push
pop
mov
addl
mov
xor
xor
pop
or
inc
push
in
or
movsl
xbegin
clc
adc
divb
or
test
add
add
adc
xchg
test
clc
data16
orl
rolb
mov
mov
push
add
push
jge
add
jne
mov
jmp
xor
pop
cvtdq2ps
ret
mov
xor
add
push
rdpmc
out
add
mov
ret
sbb
cmp
or
or
pop
inc
add
add
invd
jge
mov
cli
xor
mov
ret
mov
sub
inc
xor
inc
mov
hlt
test
mov
xor
dec
or
jne
mov
call
inc
mov
add
add
inc
mov
addl
inc
mov
lock
jge
mov
cli
xor
add
test
add
cmp
xadd
test
mov
xor
add
pop
loopne
inc
clc
xor
add
data16
mov
hlt
xor
add
data16
inc
cmp
ja
psubq
ltr
add
add
data16
mov
jge
data16
data16
mov
fdivl
data16
mov
mov
pop
or
clc
mov
lock
jge
invd
pop
add
cmp
data16
mov
pop
fbstp
test
add
add
jge
data16
pop
stc
bsf
mov
in
test
mov
call
inc
popf
add
mov
call
add
mov
jnp
mov
mov
call
mov
data16
xorl
fisttps
cld
jne
xor
mov
sti
repnz
data16
push
xor
mov
popf
data16
mov
mov
fisttps
or
mov
hlt
mov
add
dec
or
mov
or
mov
fdivrl
xor
pop
lock
lea
icebp
jb
add
jge
mov
fsubr
pop
mov
in
rcrl
jb
add
jge
mov
in
pop
data16
cmp
mov
fdivrl
cmp
mov
mov
lock
mov
pushf
idivl
cmp
je
push
loopne
dec
mov
int
mov
movlhps
add
jmp
mov
lock
rorl
or
jb
add
loopne
jne
data16
mov
inc
icebp
add
add
mov
mov
enter
pop
jne
mov
pushf
mov
sub
cmp
jne
xor
in
xor
movl
clc
add
ret
decl
ss
dec
push
jle
popa
data16
into
arpl
add
mov
push
cld
add
inc
pushf
add
into
ret
pop
push
mov
jne
lea
mov
sarl
test
mov
push
xorb
mov
xor
cmp
pop
mov
je
xor
mov
cmp
pop
cmp
jne
mov
cld
push
pop
inc
stc
xor
pushf
clc
mov
test
cmp
fs
or
push
mov
push
push
lret
xor
pushf
mov
mov
dec
mov
push
add
xor
cmp
je
mov
push
lea
push
cmp
mov
add
sub
add
mov
jne
mov
xor
mov
push
cmp
jne
sbbl
clc
dec
pop
sti
add
cld
xor
mov
roll
mov
inc
in
add
mov
mov
push
mov
test
xor
sub
inc
sub
mov
inc
add
or
cmp
mov
cmp
je
push
dec
str
cmp
int
mov
mov
add
data16
push
add
jne
movl
clc
xlat
inc
mov
push
pushf
in
add
push
push
add
add
add
lret
lock
inc
lret
xor
pushf
jge
xor
pushf
test
je
xor
rorb
push
add
jb
add
dec
mov
push
push
adcl
xor
mov
scas
mov
in
cld
add
mov
dec
or
ret
lock
mov
or
mov
xorl
mov
adc
iret
inc
movl
incb
mov
adc
dec
fisttps
add
ret
lea
add
xor
add
inc
test
xor
push
popf
push
xor
inc
cmp
or
inc
test
xor
in
hlt
push
push
push
push
mov
popf
popf
xor
mov
or
mov
clc
jb
add
orl
addl
mov
or
inc
dec
mov
orw
xor
mov
mov
mov
mov
inc
dec
add
add
mov
clc
or
mov
clc
popf
incl
ret
adc
mov
hlt
test
clc
or
xor
pushf
jb
add
inc
daa
inc
inc
xor
dec
popf
add
clc
cmp
or
add
xor
or
lea
add
mov
cld
dec
push
sub
add
or
add
or
add
mov
inc
mov
cmp
xbegin
clc
or
xor
adc
lea
add
inc
add
add
je
push
or
dec
std
mov
mov
mov
or
inc
clc
mov
hlt
call
push
or
push
xor
mov
xor
mov
or
add
inc
mov
or
inc
push
jmp
mov
mov
jne
jmp
mov
clc
lret
push
mov
mov
sub
decl
or
pop
ds
pushl
mov
mov
jmp
leave
jne
call
in
dec
add
add
inc
cmp
or
add
or
adc
enter
rolb
mov
or
rorb
jmp
push
mov
cld
inc
inc
orl
push
push
mov
add
test
add
mov
mov
lock
fcoms
mov
push
enter
cmp
add
mov
call
cmp
jmp
push
call
mov
cld
or
call
add
xor
jne
cmp
jne
mov
or
pop
into
je
mov
or
mov
mov
mov
or
sar
xor
xor
pop
adc
ret
cld
inc
mov
cld
mov
push
pop
or
xorps
test
add
adc
addl
jmp
ror
inc
leave
xor
and
add
xor
xorl
mov
pcmpgtw
add
leave
mov
push
dec
mov
lea
xor
sysret
dec
rorb
pushw
jne
ud0
mov
iret
and
cli
inc
cmp
add
inc
pop
lea
mov
add
mov
mov
add
inc
data16
clc
int3
cmp
je
push
pop
xchg
data16
lea
jb
jmp
call
clc
xchg
mov
or
lea
push
inc
jge
mov
fdivs
incl
xor
xchg
ret
xor
cmp
data16
rolb
add
dec
xchg
push
jmp
push
add
add
mov
clc
dec
xchg
cmp
jne
xor
jmp
add
jne
call
clc
xchg
sti
add
add
xor
pop
mov
jmp
mov
cmp
cmp
lea
jle
jae
mov
lcall
inc
push
lea
mov
int3
push
xchg
add
add
inc
add
cld
mov
aam
xchg
mov
testb
mov
hlt
add
mov
decl
incl
mov
call
je
js
lock
mov
mov
sbb
clc
add
mov
rorb
dec
xchg
mov
in
jge
cmp
clc
pop
fistl
clc
add
mov
mov
mov
adc
add
adc
pop
sbbl
ret
cmp
mov
add
add
sub
or
add
mov
push
push
clc
addl
out
add
jmp
cmp
jmp
je
mov
inc
add
add
add
pop
pop
push
inc
in
pop
in
cmp
xor
leave
call
in
in
dec
push
test
add
leave
inc
test
add
add
dec
push
mov
hlt
push
dec
leave
mov
clc
cmovge
mov
clc
popl
push
add
push
xor
cld
push
inc
add
pushfw
add
add
int
mov
add
cmp
jne
xor
jmp
add
mov
or
mov
mov
mov
or
shl
icebp
addb
or
or
stc
shll
xor
inc
xchg
add
add
mov
test
sub
jmp
mov
lock
lea
mov
or
leave
add
dec
dec
test
paddb
add
dec
mov
mov
or
dec
xor
mov
adc
mov
call
mov
push
clc
or
push
lret
mov
mov
xor
cmp
lsl
call
or
dec
or
inc
xor
in
add
inc
pop
xor
testl
dec
adc
inc
xor
jne
mov
mov
movl
clc
dec
push
ss
pop
aad
xlat
orb
mov
push
clc
ret
xor
xor
js
dec
push
mov
lock
lret
jne
mov
enter
lret
into
out
dec
dec
jmp
xor
xor
mov
sub
add
or
dec
mov
xor
jb
add
dec
pop
mov
cld
mov
call
stc
add
pop
leave
add
in
mov
xor
movl
mov
xor
pushf
inc
cmp
clc
mov
ljmp
push
push
push
push
push
xor
mov
add
mov
clc
lret
cmp
clc
cld
jne
xor
xor
or
add
hlt
dec
dec
je
xor
xor
add
add
rol
mov
in
inc
enter
icebp
mov
clc
lock
enter
lret
inc
jne
mov
cld
dec
enter
popf
sti
xor
mov
mov
xor
xor
mov
mov
push
shr
in
cmp
add
pushf
mov
call
xor
dec
inc
mov
pushf
into
mov
in
call
pop
or
or
or
push
inc
cmpxchg8b
leave
loopne
test
mov
aad
xlat
xor
add
and
mov
leave
sti
inc
decl
mov
clc
dec
iret
xor
jb
add
inc
mov
xabort
loopne
ljmp
mov
clc
lock
dec
mov
loopne
incl
mov
hlt
jne
mov
in
dec
or
jb
add
xor
add
mov
mov
sbb
nop
mov
addl
mov
jne
mov
pushf
push
mov
xor
add
lret
add
rorl
mov
mov
mov
fimuls
mov
xor
mov
or
dec
add
or
out
loopne
jmp
lret
xor
je
mov
mov
sbb
mov
fmuls
mov
mov
mov
sbb
sbb
add
movl
leave
mov
push
mov
add
mov
or
mov
or
inc
add
in
add
mov
adc
xor
adc
inc
popf
mov
push
add
cmp
pushf
mov
dec
fwait
dec
jmp
or
sbb
or
dec
lret
dec
rcl
lret
inc
or
sar
lahf
inc
mov
inc
or
iret
add
mov
adc
inc
add
add
dec
mov
mov
ret
inc
add
push
or
test
test
clc
pushf
inc
mov
lock
inc
mov
test
mov
mov
sbb
scas
dec
mov
xor
jb
add
add
add
mov
or
mov
adc
inc
mov
or
inc
inc
cmp
hlt
inc
jne
mov
inc
bound
clc
push
inc
inc
cmp
cmp
dec
mov
push
idivl
or
inc
inc
add
push
loopne
mov
or
xbegin
mov
or
mov
hlt
inc
inc
mov
xor
add
adc
inc
clc
xor
add
or
dec
test
clc
jb
mov
clc
pushf
inc
mov
xor
shr
add
hlt
mov
push
xor
test
clc
mov
mov
clc
mov
xor
mov
hlt
shlb
clc
fmull
mov
in
icebp
dec
decl
loopne
test
clc
dec
inc
mov
in
dec
push
xor
push
mov
push
mov
clc
cmp
inc
test
add
add
jne
lea
cmc
adc
inc
inc
xor
jb
add
inc
rorl
xor
mov
adc
mov
ret
push
push
lea
cli
add
or
mov
xor
mov
add
jne
lea
lods
psubsb
cmc
lret
inc
xor
add
inc
inc
mov
xor
test
clc
dec
inc
xor
setl
lret
int3
rorl
add
add
lea
lea
mov
xor
bswap
rorb
roll
add
xor
pushf
inc
jnp
mov
lock
lret
xor
mov
loopne
test
xor
mov
mov
mov
ret
add
dec
adc
add
inc
rcll
mov
xor
jb
add
mov
or
add
cmp
jne
mov
mov
xor
mov
mov
mov
xor
jb
add
add
mov
xor
mov
or
xor
mov
mov
xor
jb
add
enter
add
add
inc
mov
mov
add
dec
mov
add
cmp
add
mov
call
xor
mov
in
rorl
iret
mov
xor
add
enter
inc
mov
or
or
mov
cmp
add
roll
mov
or
xor
mov
mov
xor
mov
xor
mov
in
or
mov
xor
inc
or
iret
add
cmp
jge
mov
in
add
mov
mov
clc
test
std
iret
decl
xor
mov
in
enter
inc
mov
or
jmp
push
decl
xor
push
jne
mov
in
add
dec
test
dec
add
cmp
or
mov
dec
push
lea
xchg
mov
call
inc
mov
or
mov
iret
movsb
mov
push
xor
cmp
jne
lea
lods
dec
call
cmp
cmp
decl
add
fadds
mov
lock
inc
test
xor
add
sbb
xor
rdpmc
testl
or
mov
rolb
iret
cmp
cmp
xor
decl
mov
add
mov
jmp
orl
pop
inc
pop
mov
loopne
mov
push
rorl
push
add
inc
push
popf
dec
xor
add
adc
adcb
add
or
fadds
call
cmp
dec
mov
ret
mov
adc
add
add
mov
movsb
push
inc
add
adc
xor
add
add
mov
incl
mov
push
inc
decl
call
mov
mov
xor
lea
adc
add
dec
xorb
add
pcmpeqw
mov
pop
push
leave
or
xor
in
adcl
xor
push
dec
in
or
inc
inc
mov
push
and
mov
jb
add
inc
mov
or
jl
sbb
dec
xorb
add
xor
mov
add
dec
dec
adc
push
sbb
inc
push
decl
mov
or
mov
test
jge
xor
pushf
or
push
or
inc
or
jb
call
mov
mov
adc
and
lea
or
ret
je
sbb
mov
mov
je
pop
and
push
and
and
incb
and
pop
adc
in
ret
mov
pushf
incb
jge
mov
cmp
adc
push
decl
adc
mov
into
scas
mov
das
inc
jne
and
and
lea
jb
xor
adc
xor
jne
sbb
.byte
inc
pop
pop
