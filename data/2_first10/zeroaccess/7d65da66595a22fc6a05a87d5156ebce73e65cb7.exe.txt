push
mov
sub
orl
push
adcl
push
decl
xor
notl
inc
push
push
call
test
movl
je
lea
notl
push
adcl
call
movl
jmp
subl
push
mov
push
subl
push
subl
call
sbbl
test
movl
je
lea
andl
push
incl
call
jmp
xorl
push
mov
addl
push
adcl
push
push
andl
call
test
movl
je
sbbl
lea
xorl
push
orl
call
movl
jmp
push
sbbl
push
sbbl
call
decl
test
jne
push
push
call
adcl
test
movl
jne
push
xorl
push
andl
call
test
movl
jne
push
adcl
push
push
call
xorl
test
movl
jne
sbbl
push
push
sbbl
push
sbbl
call
adcl
test
movl
jne
subl
push
addl
push
call
test
movl
jne
orl
push
push
xorl
call
test
movl
jne
push
orl
push
sbbl
call
test
movl
jne
orl
push
push
subl
push
xorl
call
test
jne
subl
push
adcl
push
xorl
push
orl
call
subl
test
movl
jne
push
push
adcl
call
test
movl
jne
push
adcl
push
subl
call
adcl
test
jne
orl
push
subl
push
call
xorl
test
movl
jne
push
push
sbbl
push
call
sbbl
test
movl
jne
push
push
push
call
sbbl
test
movl
jne
adcl
push
push
sbbl
call
test
movl
jne
movl
push
orl
push
call
xorl
test
movl
jne
push
push
subl
call
subl
test
movl
jne
xorl
push
andl
push
push
sbbl
call
test
movl
jne
xorl
push
andl
push
orl
push
addl
call
xorl
test
movl
jne
movl
push
andl
push
call
test
movl
jne
sbbl
push
adcl
push
movl
call
xorl
test
jne
orl
push
orl
push
call
test
movl
jne
push
subl
push
adcl
push
addl
call
addl
test
movl
jne
addl
push
push
push
call
test
jne
subl
push
xorl
push
subl
call
notl
test
movl
jne
push
negl
push
call
xorl
test
jne
subl
push
notl
push
orl
call
test
jne
orl
push
push
andl
push
call
subl
test
movl
jne
push
andl
push
push
call
subl
test
jne
push
push
call
orl
test
jne
addl
push
subl
push
call
test
movl
jne
xorl
push
push
subl
call
test
movl
jne
push
push
push
movl
call
sbbl
test
movl
jne
push
andl
push
orl
push
call
andl
test
jne
push
orl
push
call
test
jne
push
subl
push
orl
call
orl
test
jne
push
push
call
test
jne
andl
push
push
push
call
movl
test
jne
push
sbbl
push
push
orl
call
test
jne
adcl
push
subl
push
call
test
movl
jne
push
adcl
push
movl
call
decl
test
movl
jne
xorl
push
movl
push
addl
call
test
jne
andl
push
push
push
xorl
call
orl
test
movl
jne
notl
push
orl
push
subl
push
xorl
call
test
jne
subl
push
subl
push
call
test
jne
push
xorl
push
call
test
jne
push
orl
push
addl
call
orl
test
movl
jne
push
orl
push
push
call
orl
test
jne
push
push
notl
push
adcl
call
sbbl
test
movl
jne
adcl
push
push
orl
call
sbbl
test
jne
push
addl
push
andl
call
xorl
test
jne
sbbl
push
addl
push
call
subl
test
movl
jne
push
orl
push
push
addl
call
test
movl
jne
push
incl
push
push
andl
call
movl
test
jne
addl
push
andl
push
call
test
jne
push
notl
push
call
test
jne
push
push
addl
call
test
movl
jne
xorl
push
push
adcl
push
sbbl
call
test
movl
jne
adcl
push
push
sbbl
push
subl
call
test
jne
incl
push
movl
push
subl
call
test
movl
jne
push
andl
push
addl
call
test
movl
jne
addl
push
push
call
test
jne
addl
push
sbbl
push
adcl
push
call
xorl
test
movl
jne
push
andl
push
adcl
push
sbbl
call
sbbl
test
jne
addl
push
push
call
orl
test
jne
andl
push
subl
push
call
xorl
test
movl
je
sbbl
xor
movl
jmp
movl
dec
mov
movl
mov
mov
movl
cmpl
je
cmpl
jne
push
push
push
call
xor
xor
dec
mov
jmp
decl
mov
movl
not
lea
sbbl
mov
mov
add
mov
lea
inc
mov
adc
mov
and
mov
mov
mov
sub
mov
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
pushl
call
cmpl
jne
mov
inc
mov
jmp
xor
mov
movzwl
add
xor
movzbl
xor
mov
subl
add
movl
mov
mov
cmp
movl
jne
mov
andl
mov
inc
mov
cmpl
jne
pushl
push
push
push
push
push
pushl
call
cmpl
jb
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
push
pushl
pushl
call
jmp
andl
mov
inc
mov
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
sbb
mov
mov
xor
xor
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
pushl
push
pushl
call
jmp
adc
add
mov
sbb
mov
andl
mov
inc
mov
cmpl
jne
call
cmpl
jb
mov
add
xor
movzwl
or
add
adcl
mov
and
mov
mov
orl
mov
mov
mov
sbb
mov
andl
mov
inc
mov
cmpl
jne
push
push
push
push
push
push
call
cmpl
jb
mov
neg
mov
movl
cmpl
je
cmpl
jne
call
mov
dec
mov
jmp
or
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
pushl
call
jmp
sbb
mov
movzbl
add
mov
mov
xor
mov
movl
andl
mov
inc
mov
cmpl
jne
push
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
cmpl
jne
xor
add
inc
mov
jmp
sub
mov
xor
subl
add
movl
jmp
mov
mov
xor
andl
lea
push
mov
orl
xor
orl
lea
push
mov
addl
pushl
subl
call
and
mov
decl
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
cmpl
jne
xor
add
inc
mov
jmp
xor
lea
sub
mov
mov
movl
xor
addl
xor
add
sbbl
mov
adcl
xor
lea
movl
mov
cmp
jbe
mov
mov
mov
movl
cmpl
je
cmpl
jne
push
push
push
call
cmpl
jne
mov
dec
mov
xor
or
dec
mov
jmp
mov
mov
mov
sub
xor
mov
mov
cmp
jne
lea
mov
lea
mov
mov
test
je
mov
mov
mov
mov
mov
mov
mov
mov
cltd
mov
mov
add
adc
andl
xor
mov
mov
mov
mov
xor
add
mov
adcl
xor
mov
mov
xor
mov
cmp
jne
mov
cmp
je
mov
mov
mov
xor
add
adc
xor
xor
cmp
jne
cmp
jne
mov
mov
xor
mov
mov
mov
jmp
mov
cmp
je
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
pushl
mov
pushl
add
mov
mov
pushl
call
mov
mov
mov
jmp
mov
mov
xor
add
cmp
jne
mov
mov
mov
xor
add
cmp
jne
mov
push
xor
add
push
push
pushl
pushl
call
mov
mov
mov
mov
mov
xor
add
mov
mov
mov
mov
mov
mov
mov
movl
mov
xor
add
mov
mov
mov
mov
mov
mov
push
pop
sub
add
movl
mov
mov
mov
mov
mov
mov
mov
xor
add
mov
lea
mov
mov
xor
add
mov
lea
push
mov
xor
add
push
mov
push
pushl
call
mov
mov
mov
mov
xor
mov
add
jmp
lea
mov
mov
sub
mov
mov
mov
mov
movl
mov
movl
mov
xor
add
mov
mov
xor
add
mov
movl
movl
mov
mov
xor
add
cmp
je
mov
xor
mov
sub
add
mov
mov
xor
add
imul
cmp
ja
mov
mov
mov
sub
xor
xor
add
div
mov
mov
mov
xor
add
cmp
jbe
mov
xor
add
mov
mov
mov
xor
add
imul
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
add
movl
mov
mov
mov
movl
movl
mov
mov
xor
add
jmp
movl
movl
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
xor
add
add
imul
add
mov
mov
mov
cmp
jb
mov
mov
xor
add
imul
mov
xor
add
or
mov
xor
add
mov
xor
add
mov
lea
jmp
mov
mov
xor
lea
mov
jmp
mov
mov
xor
lea
lea
xor
cmp
jne
mov
mov
mov
xor
mov
xor
mov
xor
mov
mov
xor
mov
mov
mov
xor
add
mov
mov
xor
add
mov
lea
mov
lea
mov
mov
test
je
movl
movl
movl
movl
call
mov
mov
mov
mov
mov
mov
mov
mov
cltd
mov
mov
add
adc
andl
xor
mov
mov
mov
mov
xor
add
mov
adcl
xor
mov
mov
xor
mov
cmp
jne
mov
cmp
je
mov
mov
mov
xor
add
adc
xor
xor
cmp
jne
cmp
jne
mov
mov
xor
mov
mov
mov
add
mov
xor
mov
add
xor
add
adc
xor
xor
xor
add
adc
xor
xor
cmp
jne
cmp
jne
mov
mov
mov
push
add
push
lea
push
call
mov
mov
pop
pop
pop
leave
ret
xor
andl
inc
ret
push
mov
sub
mov
mov
sub
movl
mov
mov
sbb
mov
push
adc
mov
xor
mov
andl
push
or
mov
sbbl
add
movl
cmp
movl
je
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
pushl
call
jmp
sub
mov
xorl
mov
jmp
inc
stos
pop
mov
mov
lods
movsl
and
jp
add
jp
sub
cmp
popa
cmp
shll
push
xor
fdivr
insb
inc
imul
jl
push
iret
pop
dec
cmp
cli
xchg
dec
jg
mov
sub
data16
push
jg
jmp
xchg
fimuls
mov
imull
add
push
cli
es
or
imul
pop
add
jo
les
sbb
je
arpl
xchg
pop
mov
repz
cmp
or
sub
xor
push
jecxz
mov
test
inc
push
dec
or
repz
faddl
push
stc
push
push
mov
inc
add
into
enter
add
pop
sti
xor
jbe
lods
xchg
pop
aaa
arpl
jp
xor
mov
in
add
data16
cs
rclb
push
jle
or
sbb
xor
and
daa
jmp
iret
cmp
out
cmp
add
cmp
dec
fmull
mov
insl
inc
and
stc
xchg
les
pusha
fidivrl
out
cmp
fistpll
data16
pusha
inc
or
pop
mov
jle
lds
cmp
xchg
cmp
bound
rcll
and
mov
sub
aad
add
imulb
addb
adc
stos
mov
mov
add
or
jo
hlt
sub
xchg
loop
ret
out
xor
mov
xchg
hlt
xorb
repz
ret
cmpsl
nop
jo
stc
ds
imul
out
dec
push
fildl
hlt
test
pop
xchg
scas
fldpi
jbe
les
data16
and
inc
mov
mov
into
and
lret
fnstenv
cli
mov
mov
sti
popa
mov
push
sub
cmp
and
arpl
mov
out
sbb
jne
das
cmpsl
arpl
cmp
into
pop
pop
mov
jno
cmc
es
mov
es
lret
sbb
movlps
jg
and
loop
cmpsl
cltd
xchg
push
ror
fimull
mov
sub
outsl
test
cmp
imul
sti
fstpl
out
jecxz
mov
push
iret
adc
adc
inc
inc
add
jae
push
jecxz
mov
sub
into
xor
repz
dec
xchg
mov
movsb
xchg
fs
dec
or
cmp
jb
inc
xchg
sarb
cmc
pop
pop
lahf
in
inc
iret
xchg
lcall
sbb
lods
jmp
ds
int
jns
xor
xor
sbb
or
adc
cmp
cltd
xor
outsb
andb
addr16
fcoml
mov
cmc
sub
jl
mov
xor
or
ja
popf
test
mov
mov
lret
or
cwtl
dec
xchg
xor
outsl
jo
sub
inc
and
pushf
test
xchg
xlat
inc
push
push
mov
jle
gs
movsl
in
xor
xchg
mov
push
in
imul
lea
xor
xchg
icebp
mov
es
mov
pop
popa
insl
sbb
jbe
cmp
mov
and
cmp
sti
push
mulb
mulb
stc
push
mov
mov
and
rolb
mov
adc
ret
scas
mov
mov
hlt
and
jmp
xor
push
lock
roll
fiaddl
iret
loopne
fcmovbe
sbb
xor
adc
or
inc
add
or
fists
lret
push
pushf
shll
push
push
jmp
push
inc
sbb
sbbl
pop
std
pop
out
adc
xchg
adcl
mov
xor
dec
xchg
rcrb
jg
sbb
pop
hlt
mov
xor
sub
xchg
pop
push
push
out
cmpsl
jmp
shr
cmp
xchg
sub
in
cmp
push
sub
xchg
pop
cmp
sahf
pop
in
mov
cmp
push
ljmp
mov
jl
sbb
arpl
jns
jae
and
leave
dec
pop
adc
mov
test
fistpll
cmp
jle
int3
mov
testb
aad
loope
roll
xchg
push
xor
dec
incl
or
aam
lods
pop
xchg
xchg
mov
pop
pop
xchg
dec
mov
lea
push
push
mull
or
dec
cmp
rcll
ret
or
loope
or
jg
addr16
jl
sbb
push
push
push
pop
lods
fs
lcall
fwait
xor
popa
aaa
mov
push
sub
test
push
movsb
insl
push
inc
adc
mov
jno
jg
lahf
sub
fcmovnu
jle
dec
xor
add
xchg
gs
mov
subb
lret
cmp
fidivrs
inc
xchg
in
push
daa
adc
ret
or
cmp
in
jne
push
cmpsb
lds
repnz
push
sub
push
test
ds
pop
add
xor
insb
mov
hlt
orb
xchg
sub
das
pop
inc
jb
sub
and
mov
mov
cs
xor
or
jns
nop
clc
mov
mov
mov
sub
test
and
or
adc
mov
aad
add
adc
jae
jg
xor
aam
cmp
jno
imul
cltd
sbb
cmpsl
inc
or
mulps
cltd
cli
mov
call
jg
push
sub
into
push
sti
cmp
popf
lds
xor
int
push
jl
test
daa
aam
jae
loopne
sub
mov
popa
int
bound
pop
cmpsl
ret
push
test
sub
lock
and
and
arpl
out
mull
mov
sti
and
sub
add
cmpsl
movsb
mov
and
mov
sbb
push
sub
loope
xor
or
pop
scas
adc
mov
int3
push
stos
loopne
add
pop
mov
cmp
cli
sbb
mov
cmp
call
or
and
jle
and
mov
movsl
movsl
out
pop
jl
push
dec
rorb
mov
lods
jo
sbb
inc
leave
pop
xchg
das
push
push
and
loopne
mov
popa
adcb
movsb
adc
inc
mov
and
cmpsl
flds
fnsave
jae
lret
mov
lcall
inc
aas
gs
push
les
xchg
pop
push
stc
or
push
imul
push
xor
iret
loop
and
in
cmpsl
nop
add
int3
ret
out
inc
test
jg
out
xor
call
adc
add
and
iret
pop
ljmp
push
aam
ss
sbb
das
jg
add
cmp
popa
jb
lods
fadds
pop
fsubp
movsl
xor
stc
lock
imull
pop
stc
cmp
rclb
stc
xchg
xchg
cmp
insb
adc
jmp
mov
insb
jp
xchg
pop
repnz
loope
loop
xor
sub
fnstenv
sbb
inc
leave
sub
jno
outsl
jg
jmp
ret
mov
pop
mov
jne
push
mov
insb
fisttps
fs
fcomp
dec
push
xchg
decb
orb
xchg
push
addr16
mov
daa
into
cmp
xchg
or
push
cwtl
xchg
push
lret
loope
xchg
mov
andb
pop
inc
clc
popf
test
insl
mov
cwtl
addb
outsb
push
add
mov
stos
lock
mov
fistpl
std
adcl
jns
pop
stc
pusha
mov
lea
fstpl
push
or
enter
subl
and
lods
pushl
fwait
loopne
jne
jnp
fwait
es
mov
stos
das
push
pushf
int3
or
cs
mov
dec
sarb
and
cli
xchg
in
mov
pushf
mov
xchg
shl
and
jne
cmc
xlat
jp
icebp
and
jle
in
movsl
cmc
mov
cs
add
movsb
push
call
jne
xor
rclb
and
jg
and
movsl
lock
loopne
dec
outsl
inc
out
xchg
in
in
call
or
sbb
jns
gs
lds
add
es
add
outsl
in
addb
sbbl
pop
int3
inc
jbe
incl
xor
push
xchg
mov
jle
stos
sbb
cmp
mov
cmp
iret
adc
cmp
ret
test
les
imul
xchg
push
push
or
or
jg
pop
scas
or
jl
mov
push
dec
xchg
inc
call
pop
pop
fimull
imul
int3
nop
pop
in
jle
mov
push
push
or
jp
inc
cmc
add
adc
sub
inc
int
inc
inc
inc
and
les
fucom
add
outsl
inc
dec
sbb
and
or
push
leave
lcall
data16
fisubrl
sub
icebp
cltd
ret
loop
and
mov
adc
sbb
mov
sub
mov
test
lahf
and
xor
xchg
sub
ljmp
iret
dec
std
xchg
sbb
pop
add
jp
jnp
js
push
pushf
int3
das
mov
inc
fadds
test
fcoml
aad
shlb
test
ret
pop
leave
xor
mov
leave
add
mov
xor
mov
push
pop
xor
dec
ror
mov
mov
inc
jle
out
push
pop
stos
out
xor
daa
dec
jl
loope
and
sahf
mov
das
mov
repnz
jne
pop
dec
or
sahf
mov
arpl
iret
das
stc
push
cld
mov
stos
mov
hlt
mov
jl
inc
push
inc
dec
or
gs
and
arpl
cwtl
in
fisttpll
jmp
sbb
inc
or
dec
iret
outsb
sbb
push
hlt
mov
lahf
mov
iret
push
add
jp
xchg
ja
mov
aad
jg
sub
cmp
loopne
bnd
xor
gs
jmp
cmp
jnp
mov
in
fildll
insb
clc
hlt
jle
xorb
lds
js
mov
popf
sbb
stos
imull
sub
add
sbb
inc
push
aas
sbb
adcl
jbe
add
out
scas
lahf
mov
aaa
pop
push
cld
or
into
xor
movsl
pop
cwtl
negb
jbe
les
or
shl
cmp
mov
cmpsl
adc
push
ja
jnp
cmpl
or
fiaddl
cmp
pop
pop
mov
mov
mov
mov
inc
xchg
enter
test
or
and
subl
adc
nop
shlb
xchg
lcall
aam
push
loopne
jge
mov
ret
sbb
push
insl
andl
clc
bnd
fcmovnu
push
clc
xchg
lahf
xor
xchg
std
xchg
mov
lahf
dec
sbb
or
adc
es
outsb
sbb
and
stos
jbe
js
es
pusha
pop
mov
xchg
movsl
les
dec
sub
ljmp
sahf
xchg
js
repnz
stos
cmp
sub
call
pop
and
xor
loop
jp
mov
fildll
scas
pop
mov
add
fidivrs
daa
and
hlt
xchg
xorl
outsl
dec
out
jae
ljmp
mov
push
or
fstpt
mov
fwait
ret
push
lret
and
stc
jle
pop
cmpsb
xor
xlat
or
cmp
xor
pop
lods
lcall
push
rcll
out
aaa
sub
pop
incl
fs
popw
cmpsb
pop
inc
jb
subb
sbb
aaa
std
popa
lret
adc
pop
sub
xchg
es
outsl
cmp
aad
dec
pop
je
xor
or
outsl
mov
aaa
jp
and
push
lock
loop
std
lret
or
cwtl
cmpsb
xor
cmp
or
fmuls
movsb
insb
xor
out
pop
addb
mov
push
ret
lock
dec
mov
mov
pop
in
cli
das
cmp
outsb
aaa
in
lds
sbb
cmp
cwtl
cld
inc
mov
in
or
ss
xor
fsubl
icebp
test
scas
sbb
adcl
gs
jmp
mov
inc
dec
stc
fucomp
mov
push
cmp
aaa
mov
sub
add
mov
lock
and
loopne
lock
push
sub
xchg
xchg
aas
xor
jl
pop
xchg
aas
and
subb
or
and
loope
das
xchg
aas
les
xlat
lds
push
mov
push
jbe
cltd
or
mov
cmpl
mov
lods
adc
pop
adcb
fisubrl
bound
in
jbe
and
hlt
bound
fdiv
mov
in
imul
xor
imul
xor
cmp
push
rsqrtps
call
mov
mov
jmp
dec
ret
mov
and
inc
sub
sbb
pop
int3
jp
push
inc
loop
fs
addb
fs
cwtl
sbb
movsl
jp
mov
mov
cmc
idivl
pop
inc
cli
jnp
testb
mov
sub
sbb
lret
sbb
xchg
cmpl
sub
xchg
push
cli
sahf
ret
xchg
aad
jno
mov
jg
popl
mov
mov
pop
or
addr16
daa
lret
push
xchg
movsb
mov
lcall
sti
dec
add
inc
outsb
xchg
in
aas
insb
xchg
push
jecxz
cmc
push
sub
inc
inc
push
cmp
in
mov
cmpsl
jecxz
mov
dec
mov
jecxz
jp
or
add
mov
scas
pop
mov
les
inc
imul
mov
mov
je
push
ds
pop
mov
mov
jecxz
mov
pop
cmp
push
js
cmp
gs
test
pusha
sub
std
cld
aam
pop
shll
add
xchg
add
negl
pop
mov
aaa
fwait
mov
imul
adc
and
sbb
and
xchg
xchg
insb
mov
pop
sub
data16
mov
jnp
into
push
ficoms
sbb
aad
push
dec
mov
adc
cmp
adc
xchg
sahf
sbb
ficoms
xchg
fiaddl
fcmovu
or
dec
push
push
pusha
cmpsl
rcl
xor
lahf
repz
or
in
and
cli
movsl
test
lea
loope
data16
xchg
dec
test
lcall
dec
push
fidivs
jnp
inc
push
test
adc
negl
scas
xchg
pop
repnz
icebp
push
jnp
sub
mov
mov
jnp
pop
scas
loope
sbb
mov
lahf
cwtl
aad
push
xchg
imul
aaa
sbb
test
inc
inc
xchg
scas
cmovno
jmp
js
into
cmp
mov
mov
push
jecxz
test
psllq
movsl
cmp
mov
fidivrs
nop
xchg
call
jb
lcall
add
mov
jae
into
mov
popf
xchg
sbb
neg
and
xor
and
ret
mov
mov
sub
and
mov
stos
mov
cmpsl
cmp
out
mov
cmp
cmp
jae
mov
les
jecxz
lock
shll
xchg
sbb
mov
stc
and
push
pushf
add
imull
scas
pop
hlt
mov
sub
loope
jge
and
lea
dec
mov
out
and
sti
sti
pop
jmp
push
inc
sbb
iret
aad
in
xor
clc
loop
mov
adc
xorl
mov
pop
and
cmp
mov
jno
sbb
xchg
mov
sbb
sub
lahf
stc
sti
and
inc
dec
inc
imul
sbb
lock
loope
jle
xor
outsl
push
mov
xor
lds
xchg
push
mov
cmpsl
cmp
cli
pusha
fmul
jmp
ds
mov
add
pop
insl
enter
or
hlt
xchg
xchg
push
push
add
outsl
jg
aad
leave
lret
xor
sub
push
xchg
add
inc
dec
outsl
add
sbb
mov
and
imul
cmpsb
cli
push
pop
mov
repnz
cwtl
movsb
adc
lcall
xchg
cmp
test
test
xchg
sbb
mov
lods
out
iret
insl
or
jo
xchg
bound
mov
call
push
push
mov
das
sbb
inc
shrb
imul
stos
push
sahf
sub
bound
imul
cmp
addl
pop
cmc
stos
push
popa
add
push
out
mov
mov
sbb
lret
xor
cmpsb
inc
shrb
ret
mov
sbb
jb
daa
jg
lods
xchg
int
mov
inc
popf
popl
hlt
jle
data16
mov
xchg
xchg
sbb
cmpsb
cmpsl
dec
sbb
test
cld
in
push
std
jb
xchg
cmp
scas
push
outsb
inc
sbb
repz
inc
pop
imul
dec
ljmp
inc
adc
pop
shrb
arpl
cmpsl
imul
dec
push
inc
in
push
adc
out
push
mov
pop
and
sbb
out
xor
jmp
xchg
icebp
mov
in
je
bound
not
dec
sub
push
mov
jle
sbb
jae
pop
cmpsw
or
out
loope
int
sahf
xor
inc
lods
das
lret
mov
cmp
pop
addl
out
dec
imul
dec
imul
sub
cmp
or
pop
in
xchg
ljmp
inc
xor
push
fcmovnu
ret
adc
imul
jnp
xchg
ds
fdivp
je
mov
pop
mov
js
mov
or
pop
mov
pop
int3
cmc
mov
pop
xor
add
xchg
test
out
push
cli
pop
shl
and
add
test
cwtl
xchg
pop
dec
scas
dec
stos
add
out
repnz
mov
enter
add
in
xchg
xchg
ret
pop
mov
cld
divl
xchg
repnz
bound
sbb
std
in
xor
mov
jmp
or
fldt
sub
hlt
inc
push
sub
adc
andl
test
mov
xchg
int
mov
cwtl
aad
imul
jg
stos
dec
lret
cmp
loope
sbb
mov
jne
xor
add
shrb
insb
mov
mov
push
adc
xchg
test
adc
lock
mov
aaa
xchg
fnstcw
clc
pop
ret
loop
and
out
mov
pop
jo
jnp
shr
and
add
xor
cmp
leave
inc
xchg
shlb
pop
inc
add
mov
bound
xchg
mov
das
pop
xor
ss
fidivrl
aas
jmp
es
dec
lds
pop
mov
pusha
cltd
pop
cmc
jg
cld
testl
push
stc
test
fdivs
mov
mov
dec
sub
rcr
inc
mov
loopne
jb
adc
mov
in
adc
xchg
popl
stos
push
es
icebp
jg
mov
out
jb
pop
mov
adc
and
sbb
mov
stos
inc
stos
or
mov
dec
jl
fcmove
shl
out
js
or
dec
dec
xchg
inc
aaa
fs
jb
pop
enter
dec
fsubrs
imul
mov
sub
pop
lods
hlt
push
or
mov
div
and
push
shrb
xchg
push
dec
es
push
mov
push
dec
jmp
push
jge
pop
lds
ja
jmp
pushf
fbstp
push
shll
pop
push
hlt
and
cmc
lock
sub
xor
frstor
mov
dec
ja
cli
mov
mov
adc
int
jbe
cwtl
dec
fstpt
adcl
sbb
subb
lahf
dec
sbb
lret
mov
push
push
aaa
push
lods
cmp
aad
les
xor
pop
jecxz
cld
add
or
addr16
add
mov
push
daa
xor
inc
mov
andl
add
mov
mov
cld
or
and
mov
stos
psrlw
call
sbb
and
imull
dec
inc
jmp
push
xlat
push
pop
pop
repnz
push
mov
or
stc
jnp
insb
jp
fsubrl
or
pop
outsl
bound
sub
pop
xor
ss
xlat
clc
cmp
push
pop
pop
and
ret
push
jecxz
movsb
addr16
frstor
push
out
sbb
mov
sbb
jmp
pop
mov
xor
mov
mov
pushl
std
and
adc
lea
lock
ficoms
jg
call
mov
push
add
push
outsl
sbb
rolb
sahf
sbb
lret
inc
hlt
ret
sbb
inc
aad
push
add
pop
fwait
shll
les
add
or
cmp
lods
mov
xchg
add
pushf
mov
leave
imul
dec
hlt
cs
mov
pop
lea
xor
jne
test
lret
add
sbb
ss
or
cmp
inc
movsl
mov
inc
rcrl
fdivl
jnp
cmc
and
xchg
sub
stos
ret
shlb
push
loopne
pushf
rcll
push
xor
sbb
add
jnp
fstl
push
jmp
or
jne
test
ljmp
xor
mov
pop
and
fidivrs
mov
repz
incb
adc
dec
and
add
xchg
push
int3
add
push
dec
mov
mov
call
pusha
push
push
fs
xchg
jb
test
sbb
iret
push
in
lret
aas
icebp
xlat
mov
fdivrs
loop
js
and
or
mov
mov
or
inc
and
ret
adc
scas
xchg
pop
xchg
mov
push
rcll
cmp
add
mov
adc
fimuls
and
sbb
mov
pop
push
test
and
dec
inc
xchg
dec
jns
add
sbb
sbb
add
inc
scas
push
orl
sbb
push
inc
sbb
out
sar
testb
test
insl
inc
pop
or
pop
aam
mov
xlat
fs
nop
dec
jl
pop
pop
incb
and
mov
cmp
dec
sbb
out
xchg
cwtl
inc
mov
test
jno
cs
cmp
add
stc
cmp
mov
cmp
xor
ds
aam
in
mov
inc
and
loope
loopne
or
or
sub
hlt
push
outsl
inc
imul
adc
fistl
dec
or
dec
aam
xlat
inc
or
int3
int
xor
jne
or
pop
sub
out
push
mov
cmp
cwtl
sbb
ja
repz
int3
sti
xor
inc
lahf
xchg
mov
push
jnp
mov
int
ror
cmp
lods
mov
inc
adc
je
xchg
mov
inc
movsb
lret
sbb
mov
pop
cmpsl
clc
xchg
out
mov
stos
sub
dec
cmc
mov
xchg
data16
add
clc
jo
cmp
fnsave
cmp
push
mov
ror
cmp
jp
xchg
dec
stos
sti
outsl
push
push
inc
jne
xlat
cs
dec
lret
xchg
test
mov
mov
mov
testl
test
popf
movl
ret
jo
ret
pusha
shll
jp
or
into
imul
js
jbe
and
inc
push
out
and
outsb
jae
call
dec
pop
jbe
xor
push
push
xchg
cli
cmp
pop
lea
into
jae
inc
adc
xchg
lds
add
xlat
jle
xchg
mov
jle
inc
adcb
pop
mov
cs
xchg
repnz
pop
neg
push
sbb
data16
push
aaa
movsl
xor
or
insl
lods
leave
cmp
decl
daa
mov
push
mov
mov
je
int3
subl
pop
nop
aaa
add
repnz
mov
jle
stos
pop
or
data16
hlt
popf
test
repz
push
pop
roll
mov
addl
inc
cltd
js
addr16
sahf
nop
stos
pop
pop
push
pop
shl
jmp
add
or
sub
fnsave
call
in
mov
xchg
divb
xchg
xchg
movsl
das
dec
sarb
mov
lea
mov
mov
xor
sbb
xchg
mov
push
shll
sbb
test
and
shl
outsb
xorb
push
cmp
jl
repnz
jle
je
jae
push
stos
je
pop
lea
jmp
int3
stos
cmc
mov
jecxz
fistl
inc
test
jne
xor
push
popa
dec
aam
stos
in
xchg
mov
aam
sub
mov
add
mov
adc
pop
rorl
gs
fs
dec
push
and
leave
push
mov
mov
pop
xchg
mov
sbb
fwait
push
clc
or
cmpsl
inc
dec
push
hlt
lahf
outsl
cmp
xor
insb
insb
mov
pop
cwtl
push
xor
repnz
pop
bound
aam
hlt
in
inc
popf
leave
pop
sbb
inc
lahf
clc
aas
xchg
inc
test
pusha
sbb
into
sbb
pop
into
mov
fcoml
out
in
shlb
jns
les
lret
mov
inc
movsb
jmp
mov
call
fisubrs
xor
bound
mov
repz
dec
das
inc
jmp
or
sub
jmp
repnz
mov
cmp
fsts
push
adc
push
lahf
dec
xchg
int3
mov
inc
test
sbb
test
dec
sbb
jns
ja
xchg
ret
movsb
cmp
int
call
aas
inc
fidivs
fdivl
adc
push
push
jl
mov
mov
adc
xor
jg
jns
repz
jae
xchg
jnp
sub
shrb
in
push
cmp
mov
frstor
fistl
outsl
cwtl
push
cli
lcall
mov
daa
or
pop
push
repz
xlat
xchg
lock
out
in
lods
pop
dec
aam
fstpl
add
sub
add
add
sbb
mov
push
aad
inc
repz
jo
push
movsb
pop
sub
push
jge
mov
lcall
mov
aaa
lea
hlt
test
mov
mov
scas
out
inc
lret
xchg
add
cmp
ret
in
fildl
in
xchg
pop
mov
fmull
ret
cmp
rcrl
insl
jmp
adc
xor
jne
mov
scas
mov
inc
mov
jo
or
xchg
xchg
roll
aam
fistps
pusha
dec
dec
popf
add
inc
clc
mov
pop
xchg
jp
sub
test
fldcw
sar
in
cmp
xchg
adc
inc
repz
mov
push
icebp
cld
mov
aam
out
sbb
ret
ss
movsl
stos
mov
mov
jb
xor
test
jb
lea
adc
xchg
pop
ljmp
add
imul
add
cmp
mov
xchg
sub
xchg
out
arpl
testl
fwait
mov
xchg
xchg
sub
lret
js
pop
ds
ror
cli
test
aam
mov
mov
fstps
lods
jmp
int
pop
xchg
in
aad
push
jne
ljmp
fstp
push
mov
inc
xor
call
xor
adc
push
test
or
push
inc
mov
mov
push
cs
addb
rcrb
lcall
mov
cmp
mov
leave
popf
scas
cmp
pop
outsl
cld
dec
xor
mov
push
cmp
in
les
add
out
andb
or
ss
mov
insl
imul
cmp
cltd
call
inc
push
jo
push
sub
jb
or
or
dec
iret
and
repz
mov
lods
fistl
xchg
pop
cmc
mov
icebp
push
fstpt
gs
xor
rcrl
imul
jecxz
sbb
inc
mov
shll
mov
jo
inc
xor
sbb
push
xchg
adc
pop
fildl
cmp
call
ret
psubw
adc
xchg
xlat
mov
dec
fimuls
stos
enter
sub
scas
dec
add
mov
fistpll
cli
xor
pop
js
sbb
jb
cmp
and
shll
and
and
insl
mov
xchg
fs
cmovs
popf
mov
xchg
dec
xor
sub
xchg
iret
sub
cld
clc
aam
push
lock
je
pop
fsubs
inc
and
or
and
inc
mov
aaa
sbb
add
dec
mov
xor
mov
cmp
fidivs
sbb
cmpsb
pop
push
or
movsl
iret
xlat
pop
aas
js
pop
scas
fsubrl
inc
js
sti
stos
sub
int3
popf
mov
xchg
push
cmpsb
fsubrs
sub
addr16
sahf
into
das
jge
test
leave
cmp
mov
xor
cmp
out
sahf
sub
mov
cmpb
sbbl
add
scas
daa
scas
test
repz
mov
pop
jbe
mov
insl
faddl
rol
sub
ds
lret
lret
ss
andb
loop
adc
xchg
scas
xlat
popa
mov
ljmp
fimull
push
mov
testb
icebp
outsl
ret
add
pusha
inc
ds
pop
cwtl
xchg
gs
xchg
popf
push
push
sbb
inc
add
js
rcll
imul
adc
in
inc
lret
rolb
pop
pusha
add
dec
ret
pop
pusha
xchg
xchg
arpl
adc
xchg
cmp
test
xchg
sub
mov
bnd
pop
hlt
dec
pop
fildl
cmp
ret
std
xchg
sub
xchg
fnsave
subb
test
push
movsl
jno
inc
mov
mov
in
out
dec
std
adc
and
into
dec
adc
test
inc
mov
push
insb
lret
dec
scas
pop
adcb
mov
sbb
jge
aaa
push
dec
rorb
and
jl
test
adc
xlat
ss
test
xchg
bnd
dec
lret
icebp
and
popa
sub
inc
bnd
xor
push
mov
mov
xchg
movsl
or
inc
loop
mov
loop
inc
dec
leave
jg
hlt
ss
add
xchg
rcrl
sub
cmp
shll
stos
pop
sbbl
xchg
lds
pop
popf
add
xchg
and
xor
sbb
ljmp
in
mov
addb
sub
xor
sub
and
dec
jb
sbb
test
bound
data16
dec
xor
jbe
lahf
in
mov
popa
pop
xchg
sub
pop
pop
adc
xlat
cli
out
decb
ret
cmc
sub
or
cmp
psubsb
nop
inc
flds
and
lods
cmp
sbb
sahf
pop
push
inc
inc
push
push
andl
repnz
ds
mov
cmp
dec
fmul
in
iret
fdivl
cmpb
inc
inc
aad
mov
imull
mov
lret
sub
inc
addr16
jl
push
rorl
sahf
inc
mov
out
xor
adc
inc
add
inc
add
lret
adc
inc
add
into
add
movl
adc
andl
xor
mov
push
add
xor
xor
sbb
mov
add
movl
adc
xor
orl
xor
movl
cmp
jne
cmp
je
jmp
or
mov
mov
mov
xor
add
mov
imul
mov
xor
add
mov
mov
mov
mov
xor
xor
add
adc
lea
xor
xor
xor
mov
add
adc
xor
xor
cmp
jne
cmp
jne
mov
pop
pop
pop
leave
ret
push
mov
push
movl
sub
mov
andl
xor
add
inc
mov
cmpl
jne
pushl
pushl
push
push
push
pushl
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
andl
mov
inc
mov
cmpl
jne
push
push
push
pushl
push
call
cmpl
jne
xor
add
inc
mov
cmpl
jb
movsbl
mov
sub
mov
xor
cmp
jne
mov
push
mov
add
mov
mov
mov
xor
add
cmp
pop
je
mov
jmp
mov
xor
add
leave
ret
push
mov
sub
push
subl
push
movl
push
addl
lea
push
subl
lea
addl
push
call
xorl
push
sbbl
jmp
push
xorb
es
and
adc
sti
add
jp
pop
jp
cmp
or
out
sbb
outsb
and
lea
and
sbb
clc
cld
cli
cwtl
push
dec
pop
inc
add
jecxz
inc
xchg
stos
xchg
lods
aad
xchg
and
rorl
mov
lret
pusha
and
hlt
iret
add
imul
jb
add
mov
mov
jne
fmull
scas
mov
pop
sbb
xor
pusha
js
negl
fldt
xchg
insl
sub
in
js
pop
jnp
dec
push
test
pusha
cmp
xchg
and
cmp
mov
out
lcall
je
push
cmc
repnz
mov
lcall
stos
popaw
enter
jl
xchg
scas
inc
call
ljmp
mov
bound
rcrl
pop
jge
xchg
inc
xor
fisttps
shlb
shll
pushf
pop
sbb
enter
popa
cmp
das
and
call
int
fdivp
test
ret
sbb
add
jb
jbe
call
push
lret
pop
cmp
lcall
bound
jge
mov
or
cmp
xchg
dec
shr
mov
or
iret
repnz
dec
push
dec
pop
add
add
rcrl
mov
hlt
xor
xchg
popa
imul
pusha
adc
jecxz
xchg
jl
popa
sbb
inc
pusha
negl
and
nop
adc
xchg
hlt
cli
sub
int3
add
pop
cmc
fs
lods
add
loopne
dec
inc
jg
data16
pop
ds
xorl
adc
pushf
mov
int3
clc
ret
fsubl
adc
xchg
imul
sahf
js
and
and
outsl
push
cli
mov
or
cmc
lret
stos
repnz
aam
mov
into
mov
sbbl
inc
push
into
js
outsl
rolb
inc
das
push
call
xchg
iret
movsb
xor
popa
lahf
push
in
mov
lcall
or
ret
sub
test
cmp
pop
mov
jle
inc
lahf
lds
ret
jbe
les
sub
sbb
mov
push
scas
xor
std
mov
insb
push
xor
test
or
loopne
add
sub
lret
jg
jge
je
movsb
cli
imul
mov
pop
mov
pop
lea
icebp
imul
movsb
imull
fisubrs
push
aaa
scas
cmpsb
mov
add
xchg
lret
xchg
jno
movsl
gs
or
inc
push
mov
push
jmp
hlt
dec
or
push
xchg
loopne
mov
push
lret
enter
iret
cld
mov
rolb
lret
or
pop
out
clc
aaa
aaa
mov
add
fmuls
jl
jg
add
adc
sub
hlt
mov
bound
setl
out
iret
push
add
stos
pop
aad
mov
out
push
jg
callw
test
cmp
fwait
push
iret
xlat
lcall
rcll
jno
dec
push
sbb
int3
enter
jno
cmp
shll
mov
test
pushf
jg
mov
pop
dec
bound
cmp
loope
ljmp
shll
pop
add
xchg
and
insb
sbb
popa
pop
out
jecxz
push
pop
cmc
adc
repnz
aad
negl
mov
mov
mov
mov
push
repz
sti
cmp
cld
jae
pop
insl
dec
shl
mov
bound
jns
mov
adc
pop
mov
adc
inc
sbb
loop
mov
lcall
adc
testl
clc
jmp
xchg
inc
xor
xlat
lock
jae
sbb
lds
mov
bound
in
or
add
int
dec
mov
push
fstpl
push
dec
fs
stos
pop
mov
push
ret
xchg
sahf
ret
push
stos
dec
dec
and
in
push
lcall
mov
in
mov
add
insl
lds
daa
sub
shlb
shll
mov
loopne
mov
popa
daa
out
jae
daa
mov
xchg
mov
mov
test
into
inc
or
inc
push
jecxz
sub
jmp
cmp
mov
pusha
fisubrs
xchg
data16
gs
and
fists
and
iret
sarb
cmpsl
cmp
ret
fwait
dec
ret
outsb
xchg
sbb
jmp
insl
fmul
mov
push
ljmp
xchg
data16
mov
xorb
sub
and
fldt
rcrl
int3
xchg
sbb
mov
in
cld
fsubl
stos
jnp
push
hlt
jp
js
cmp
mov
cmovae
xor
fwait
sahf
ljmp
or
es
jecxz
js
outsb
dec
add
or
and
scas
push
lock
daa
cmp
push
sub
bound
mov
sarb
push
or
dec
cmp
push
lds
mov
nop
icebp
and
mov
leave
addr16
icebp
loop
je
test
dec
fidivs
cmp
popa
sub
repnz
pop
stos
and
decb
or
pop
jo
andl
clc
bound
mov
jne
aas
fiaddl
fmul
mov
out
cmp
push
lret
push
call
cmp
ret
cltd
sahf
pop
inc
xchg
in
scas
xor
mov
std
jns,pt
sbb
gs
cmp
jp
xor
jne
lahf
test
lock
in
movsb
in
cwtl
int3
jecxz
fwait
adc
add
out
or
xchg
fstl
mov
push
cmp
rcrb
test
pop
shlb
jle
jb
cmp
lret
push
loop
scas
xchg
sub
sub
iret
adc
adc
jmp
lcall
out
sub
outsl
cmpl
sahf
ljmp
loope
mov
call
popa
adc
add
aaa
fs
fistps
cmp
insl
mov
ljmp
xchg
push
out
mov
mov
push
xor
test
pusha
and
xchg
xorb
cmpsb
das
mov
bound
cmpsb
in
enter
fisubrs
add
mov
fwait
in
cmp
sahf
dec
pop
mov
aam
xchg
push
push
loopne
mov
loope
lds
sahf
in
mov
jmp
pop
dec
movsb
jb
mov
pop
jecxz
push
dec
stos
data16
shll
or
addb
sub
inc
pop
scas
stc
add
test
std
repz
rolb
and
push
pushf
adc
add
or
push
sub
insl
outsb
out
mov
jmp
push
jnp
cmp
dec
and
jp
imul
ds
stos
xlat
int
stc
lret
and
push
fstenv
add
movsb
adc
test
and
test
mov
fisttpl
pop
pop
outsl
dec
push
dec
pop
xchg
aad
dec
shlb
xchg
out
and
cmp
nop
in
pop
sbb
inc
mov
fldenv
orb
int
mov
ret
dec
std
fcmovnbe
out
mov
bswap
cmc
testb
mov
push
xor
xor
sbb
popa
popa
cwtl
cmp
sub
mov
ret
leave
xor
xor
xor
push
fimull
sub
and
gs
mov
jb
rcll
movsl
cmpsl
mov
push
dec
bound
add
cmp
xchg
add
xchg
sub
lahf
jl
shll
daa
dec
pop
inc
repnz
decl
sub
cmp
cmp
scas
das
add
dec
rolb
add
jle
and
sub
movsl
out
sbbb
les
sbb
movsb
sub
int3
pop
test
mov
mov
sub
out
jecxz
add
or
jne
adc
push
push
aas
xchg
adc
jae
stos
sarb
mov
xor
dec
cmp
ljmp
in
lret
mov
sar
push
mov
push
jno
jmp
fisubrl
pop
or
leave
xchg
fisubs
mov
xor
pop
outsl
cld
and
arpl
jmp
mov
sti
inc
pop
ss
das
test
cmp
mov
push
or
push
aas
xor
mov
loopne
sarl
pop
pop
repz
dec
sub
mov
ficoml
adc
push
dec
test
jo
adc
lret
or
ret
fxam
sbb
jmp
mov
dec
pop
sbb
inc
pop
jle
lcall
clc
dec
push
sarb
out
mov
in
movsl
popf
cmp
je
ds
imul
pop
cmp
adc
adc
mov
pusha
stos
or
cmpl
ret
test
xchg
lret
add
in
sub
mov
push
or
cmp
sbb
lcall
bound
insl
in
mov
or
lcall
dec
mov
hlt
sbbl
out
je
loop
test
lds
aaa
sbb
stos
jge
or
xchg
repz
mov
or
pop
adc
or
xor
call
mov
xchg
jne
into
push
into
int
in
xchg
ds
push
mov
ret
rol
and
jb
fcompl
stc
inc
cld
add
sub
ja
or
push
push
clc
test
jp
push
rorb
sub
and
in
ret
out
mov
xor
xor
or
xor
jno
mov
xchg
test
pop
jne
push
pop
mov
dec
jp
popf
idivl
dec
dec
cmc
add
mov
loop
mov
cmp
mov
movsb
mov
cmp
jecxz
stc
or
das
xchg
enter
or
mov
cmpxchg
mov
push
loope
push
testl
mov
test
mov
aad
lods
jo
mov
xor
in
jne
add
mov
jns
push
fs
stos
mov
sbbl
add
loopne
stos
jmp
mov
push
and
jb
cltd
mov
xchg
add
push
sahf
cwtl
lcall
adc
push
cmp
movsb
add
adc
mov
out
cmc
mov
das
addr16
and
cmpsb
test
jbe
push
imul
shll
lret
mov
cmpsb
repnz
push
lods
xchg
sub
mov
xchg
int
dec
cmp
push
sub
inc
in
out
push
push
negl
xor
or
idiv
add
inc
jbe
adc
dec
in
test
adc
cmpsl
jle
into
or
test
mov
dec
gs
inc
dec
arpl
sub
in
rcrl
pop
arpl
mov
add
int3
xor
and
cwtl
cld
jns
push
pshufw
mov
es
stc
cmp
lcall
inc
fsubrl
cltd
mov
push
add
data16
sbb
add
loop
dec
repnz
stos
adc
mov
pop
xchg
imul
and
fists
js
cltd
pop
fsubl
in
pop
cmpsb
lods
les
shll
xchg
pop
cmp
dec
jo
clc
mov
inc
mov
xchg
push
ljmp
test
es
push
pop
sbb
mov
inc
push
loope
dec
scas
insl
loope
xchg
mov
arpl
cld
scas
idivb
movd
ret
sbb
mov
mov
add
jbe
pushf
std
mov
mov
mov
sub
les
mov
inc
std
sbb
scas
mov
cli
fs
fildl
push
push
jge
xchg
inc
scas
sbb
xchg
cld
andl
push
mov
sub
stos
fcomip
push
sub
mov
xor
pushf
cmpsb
stc
add
inc
leave
and
sahf
xor
sahf
mov
ret
sbb
mov
leave
adc
push
mov
cmp
adc
push
adc
cmpsl
jl
push
out
push
fcmovb
mov
mov
jle
xor
ret
mov
test
mov
mov
push
inc
fildl
pop
shrl
push
dec
insl
jbe
pop
push
lods
pop
pop
hlt
mov
loopne
pop
xor
pop
lds
repz
mov
jae
mov
cld
test
fiaddl
mov
mov
mov
mov
xor
das
sbb
orb
outsl
mov
xchg
loope
push
sub
and
jl
dec
in
pop
icebp
push
push
inc
rcll
cmp
dec
stos
in
or
push
dec
push
outsl
outsb
jle
pop
or
cs
mov
in
andl
pop
ljmp
rorb
int3
xchg
test
mov
jne
dec
jno
mov
pop
insb
and
sub
push
popf
cmp
mov
mov
pop
insl
pop
test
rorb
push
in
int3
pop
push
mov
out
pop
rorl
in
add
xchg
mov
aas
xchg
pushf
adc
add
push
inc
pop
lcall
out
jne
lods
nop
xchg
in
mov
push
mov
mov
jp
push
jge
xchg
out
add
mov
pop
dec
and
in
sahf
sahf
and
pop
add
les
dec
and
sar
clc
xchg
jl
fwait
xor
loopne
fwait
sbb
and
xchg
add
and
mov
fwait
dec
les
sbb
pop
push
mov
cld
stos
mov
dec
movsl
je
fbld
sub
clts
pmullw
aas
mov
lods
aam
loope
ret
testl
repz
sub
les
stc
cltd
jns
push
push
mov
lock
lock
xchg
or
pop
dec
leave
mov
aad
jmp
inc
push
stc
xor
addr16
push
xor
push
test
inc
mov
add
inc
ja
ljmp
mov
mov
mov
inc
xchg
mov
addr16
out
pop
or
int
lock
testl
mov
mov
xor
add
xchg
adc
cmp
jo,pn
dec
pop
adc
stc
jge
jg
pop
stc
test
dec
mov
push
cld
movsb
mov
jge
mov
add
sub
cli
sub
xor
ret
mov
test
lret
inc
leave
push
dec
daa
dec
push
scas
jmp
push
out
jg
mov
and
imul
rcll
icebp
in
cmp
adc
jns
dec
add
inc
loop
or
lea
mov
scas
test
in
outsl
mov
add
mov
push
xor
hlt
les
inc
cmc
aaa
and
lods
cld
jbe
notl
in
sub
sti
or
pop
inc
jns
jp
movl
scas
call
stos
fdivrs
adc
push
movsb
das
gs
notl
cmc
stos
mov
scas
lock
rorb
popa
cmpsl
cmp
cmpl
fcmovnbe
adc
xor
sub
cmpsb
imulb
sbb
dec
aas
rolb
mov
jg
pop
lds
mov
lods
fsubs
fsubs
mov
addr16
pop
sti
cmp
and
mov
movzwl
adc
cltd
rcrl
shll
adc
xor
rcrl
jne
lds
cmp
test
jb
jp
mov
out
mov
leave
pop
jo
pop
nop
cmp
repz
scas
inc
xchg
cmpsl
stos
mov
stos
notl
adc
sar
xchg
jno
xchg
pusha
inc
adc
mov
mov
popa
cmp
bound
inc
push
xchg
cltd
add
xchg
jle
js
data16
lock
sbb
lahf
mov
pop
dec
mov
ret
dec
adc
bound
int
mov
scas
cmp
mov
int3
test
imul
and
mov
pop
lret
cmp
fistpll
pop
cmp
jge
scas
lock
out
push
push
sbb
sub
dec
addr16
inc
pop
pusha
movb
jbe
or
mov
lret
xor
insl
xorl
mov
mov
xchg
cmp
fmull
pop
iret
fidivrl
push
sub
outsl
push
cltd
pop
or
xor
push
rcll
mov
xor
lcall
faddl
mov
or
iret
mov
sub
call
cld
cs
push
adc
and
pop
xchg
and
ja
out
ret
xchg
bnd
add
inc
lds
movsb
out
mov
mov
pop
xchg
hlt
pop
xchg
loope
aaa
push
add
or
pushf
cli
aas
inc
stos
mov
sbb
jle
jae
push
cmp
mov
jb
xor
adc
mov
ret
and
int
js
lcall
arpl
mov
outsl
aad
icebp
test
enter
daa
cmc
rorb
pop
popa
insb
loop
lret
jmp
push
lods
andl
movsb
mov
push
mov
aaa
movsb
cmpsl
mov
inc
mov
sbb
maxps
mov
out
push
ds
jmp
lods
cltd
popf
and
jne
dec
lods
negb
jno
pop
loopne
dec
push
shl
xchg
sub
fimuls
sbb
push
fdivrs
test
and
mov
mov
cmp
jmp
aam
andb
jae
xor
jp
fimuls
xor
dec
jnp
fidivs
insb
xchg
scas
or
adc
push
xchg
mov
lock
or
xchg
dec
add
sub
jmp
jno
sbb
sub
sbb
jbe
daa
pusha
adc
jns
rcrb
dec
outsb
xchg
jno
jno
scas
loop
retw
or
cs
call
and
dec
jge
dec
pusha
add
arpl
in
adc
mov
cwtl
adc
rcrb
in
add
lret
pop
sub
mov
cmc
or
add
sbb
adc
mov
movb
test
lock
or
inc
stos
mov
in
hlt
mov
cmc
fnstcw
cli
or
pushf
jo
jnp
sbbl
push
test
add
outsl
push
mov
mov
imul
inc
in
mov
jnp
pop
push
gs
push
xchg
pushf
clc
xchg
std
sbb
and
push
addr16
xchg
mov
mov
insl
inc
mov
loope
mov
fmuls
mov
loopne
cmp
test
cmp
mov
rcr
loope
mov
push
insl
divb
inc
pop
mov
pop
fstps
and
idiv
aam
mov
lods
jg
pusha
iret
addr16
mov
or
cmp
or
push
das
subl
loope
push
cmp
lock
xchg
out
jl
lret
mov
mov
add
pusha
int
ljmp
aaa
shll
sub
sbb
repnz
js
or
in
lock
mov
pop
jmp
pop
sub
push
js
or
roll
inc
pusha
pop
lea
ja
divb
add
stos
roll
mov
sub
cs
pop
add
push
xchg
ds
sub
push
in
sub
push
das
push
fisubl
push
pushf
mov
imul
fcomip
sahf
aaa
test
push
enter
nop
ret
mov
insl
xchg
fwait
loop
call
sbb
dec
lea
jns
xlat
pop
sbb
inc
xchg
and
xor
cmpsl
mov
in
jl,pt
rolb
pop
adc
adc
outsb
add
nop
rcrb
js
loope
fisttpll
pop
out
test
ret
jae
push
lock
arpl
lods
insl
mov
pop
pop
mov
movsl
test
test
cmp
or
jecxz
rorl
jne
pop
and
xchg
orl
cmp
push
movsl
mov
sbb
mov
xor
inc
and
cmp
mov
pop
and
test
inc
push
imul
inc
int3
add
subl
negl
push
sbb
adcl
cmpb
adc
push
shrb
xor
out
repz
loop
inc
mov
sti
pusha
inc
push
ret
sbb
in
rcll
stc
fidivrs
jns
lock
popl
dec
scas
xchg
iret
dec
cltd
push
mov
data16
scas
xchg
adc
arpl
jle
out
popa
mov
sub
popf
insb
mov
lods
shlb
arpl
stc
pop
xchg
je
xchg
jnp
jp
jae
add
insb
aad
mov
ss
cmp
in
stos
stc
rorb
adc
mov
xor
pop
lock
not
fnsave
leave
leave
movsl
fildll
dec
pushf
push
mov
xchg
hlt
insb
xlat
mov
sahf
fnsave
mov
ja
rcrb
dec
test
adc
decb
inc
push
fdiv
mov
dec
sarb
orb
insb
xlat
imul
out
or
add
cmp
enter
xchg
into
xchg
dec
leave
jle
inc
mov
xor
out
shll
dec
pop
xchg
mov
ljmp
sub
mov
dec
inc
loop,pn
bound
jbe
mov
int
sub
mov
loopne
lret
sbb
mov
push
js
pop
push
cld
sbb
leave
jo
xchg
lock
in
ljmp
stos
add
std
pop
adc
or
add
or
sub
jl
inc
mov
inc
push
lods
jae
pusha
cmp
call
and
sbb
les
dec
pop
mov
pop
pop
je
inc
ljmp
cmpsl
pop
push
shll
dec
testl
ret
dec
out
inc
pop
ret
in
popa
adc
and
cmpsl
jbe
lea
test
add
xor
cmp
movsb
aaa
cmc
std
repz
xchg
and
mov
scas
out
loop
adc
xor
test
or
xor
loop
ljmp
push
lock
xor
imul
cmpsl
xor
adc
lods
mov
xor
xlat
out
mov
xor
repnz
mov
cmp
push
jl
push
mov
push
sbb
les
or
mov
or
push
mov
outsl
adc
or
xchg
lea
int
sub
mov
add
ret
in
imul
sub
mov
jle
out
cmp
cmp
aas
dec
pop
and
add
mov
cltd
cwtl
sbb
bound
and
mov
das
or
mov
add
out
fldenv
mov
mov
and
adc
or
push
lock
stos
and
dec
into
or
in
pop
xchg
and
dec
cmp
cld
xchg
cwtl
jne
sbb
dec
jp
mov
aas
sbb
xchg
xor
pop
push
xlat
mov
andb
jle
inc
adc
repnz
jae
push
sub
or
sarl
es
leave
negl
aad
or
shlb
rcrl
sub
scas
ret
push
test
adc
movsb
adc
movsl
in
xlat
movsb
mov
into
arpl
pusha
cmp
push
sub
pop
adc
jo
outsl
stos
xlat
in
fcmove
push
ret
mov
or
xor
adcb
into
mov
icebp
test
mov
ret
add
pop
or
push
adc
inc
popa
test
cmp
out
js
ss
fnsave
sbb
sbb
jle
clc
xchg
aad
push
sub
mov
sbbb
mov
mov
rcr
stos
cmc
mov
sub
mov
sbb
adc
gs
adc
push
xor
mov
xor
sbbb
insb
cmc
popa
into
inc
push
xchg
loop
jge
inc
jno
ss
mov
inc
lds
jno
inc
into
sub
jns
xchg
push
movsb
ret
mov
push
inc
sarb
mov
xchg
lea
dec
cltd
lods
sub
fwait
adc
in
mov
sbb
or
mov
lcall
notb
repnz
imul
and
pop
fisttpll
jecxz
lea
sub
imul
sub
daa
fnstenv
nop
xor
inc
cmp
fcoms
dec
fs
and
aam
adc
popa
push
shlb
jae
sbb
cmp
pop
rcll
push
out
movsl
xchg
and
push
and
cmp
test
imul
faddl
jle
mov
add
imul
push
popa
pop
pushf
in
pop
xlat
mov
add
xchg
ret
mov
cmp
sbbl
cltd
dec
dec
aas
and
daa
into
and
inc
stos
pop
popa
loope
jecxz
or
stos
ss
scas
cwtl
and
or
jnp
xor
lea
pushf
pushf
pinsrw
jbe
call
mov
imulb
insl
popl
aas
stos
jp
mov
dec
mov
sahf
and
jae
dec
push
aas
cmpsl
pop
inc
mov
stos
jae
mov
ret
movsb
fs
scas
scas
jp
and
mov
outsb
xor
sahf
aas
mov
stos
dec
xlat
outsl
jg
ffree
xchg
dec
lahf
aas
pop
cmp
sti
xchg
lret
inc
adc
push
push
test
dec
addr16
out
ljmp
packssdw
pop
lret
test
push
dec
setno
or
in
lock
push
sub
cli
fstps
sahf
cmpl
ja
push
icebp
mov
aas
jae
nop
xchg
pop
mov
pop
lods
mov
les
mov
rorl
inc
jnp
aad
adc
pop
cmp
lods
add
pusha
call
add
mov
sub
mov
mov
dec
pushf
push
sbb
int
push
daa
dec
cwtl
cmp
into
xchg
mov
cwtl
sbb
mov
lods
xor
or
orl
mov
mov
and
xchg
xlat
push
out
shlb
or
and
xor
add
in
cmpl
sbb
sbb
pop
icebp
and
in
int3
sbb
sub
jp
sbb
and
pop
in
mov
dec
lret
pushf
mov
push
xchg
jg
push
jb
dec
outsl
leave
pop
cmp
adcb
xchg
out
stos
jmp
out
fistpl
push
fcomps
xchg
ret
mov
aam
hlt
xor
add
jne
pop
inc
adc
lahf
xchg
pop
ljmp
inc
test
js
lea
out
sbb
repz
dec
mov
sbb
in
xchg
nop
push
stos
inc
call
out
cmp
fwait
jno
dec
insl
mov
imul
push
aad
push
mov
and
mov
cmpsl
loop
inc
push
dec
inc
incl
dec
std
pop
lar
outsb
cltd
lds
lahf
mov
mov
cmovb
or
addr16
pop
in
jecxz
add
xor
fldcw
inc
loop
cld
fstp
mov
push
mov
roll
pop
jne
jmp
sbb
ret
sbb
cmp
sarb
mov
xor
adc
les
push
pop
fcmovne
mov
ja
imul
bound
mov
inc
fwait
ja
aaa
jl
mov
lahf
sub
dec
add
mov
cmpsl
jle
xor
jb
xor
dec
fisubl
lcall
ret
push
jo
faddl
jne
add
add
or
mov
mov
lods
push
cmp
add
jae
dec
aam
sub
out
mov
mov
or
and
mov
or
fwait
cld
push
insb
pop
push
movsl
out
sub
insb
lret
mov
daa
popa
dec
cmp
ja
cmp
xchg
mov
in
xchg
loopne
popa
int3
in
mov
in
insb
scas
sub
rcrb
out
std
cmp
rorl
sbbl
sbb
aaa
std
repz
sub
lods
inc
rolb
xor
shrl
dec
jmp
jae
repnz
iret
pushf
cmp
movsl
cli
jecxz
push
xor
adcb
cmp
repnz
sub
jecxz
adc
sbb
lods
sahf
rep
or
lds
mov
cld
mov
dec
push
jle
jnp
leave
xlat
push
dec
iret
xchg
dec
es
and
lret
std
ficompl
popl
popa
xor
out
loop
pop
xchg
cld
outsb
repz
jb
mov
test
xchg
cmpsb
ror
sub
scas
stos
dec
lea
push
jbe
push
push
addb
add
mov
rorb
stos
xor
mov
xchg
jbe
addr16
cmp
push
lret
icebp
inc
mov
adc
push
or
shrl
repnz
cmp
in
test
scas
popa
lock
clc
mov
cmp
lcall
push
into
inc
inc
push
push
xchg
fs
xchg
addb
add
sbb
push
push
cmp
ljmp
test
xorb
rorb
push
jns
dec
add
fmul
push
dec
mov
xchg
movsl
aad
sbb
outsl
js
test
ret
out
or
cltd
xchg
mov
je
dec
jg
mov
sbb
out
adc
js
shrl
aad
sub
and
sub
jno
and
fsubs
and
dec
rorb
push
push
dec
jge
lret
mov
dec
shlb
xchg
push
mov
frstor
dec
enter
sbb
stc
or
jp
les
mov
cmp
inc
jl
roll
notb
dec
mov
fistps
ret
icebp
ljmp
and
aad
movsl
dec
addr16
rcl
mov
pop
lret
fcomps
cmp
adc
mov
adc
faddp
dec
lods
push
xlat
sbb
fimuls
push
imul
pop
fstps
insb
pop
les
out
fimull
gs
inc
pusha
mov
sbb
iret
fwait
leave
outsl
ret
out
inc
xlat
xor
pop
push
and
mov
push
sub
pusha
mov
mov
jmp
xorb
ds
clc
sub
and
lret
loopne
in
push
rolb
pop
popa
clc
lock
jae
in
push
mov
popa
ficomps
pop
pushf
js
adc
fwait
mov
testl
shrl
test
mov
lret
fsubs
xor
push
stos
xchg
add
pop
or
push
lret
ljmp
lret
inc
out
in
mov
pop
mov
js
jg
push
and
sub
popf
call
mov
adc
and
aad
jecxz
repz
rorb
outsl
mov
inc
pop
or
inc
push
lahf
sbb
cli
cmp
insb
or
out
or
outsl
or
leave
and
test
push
mov
mov
push
jmp
notb
stos
scas
out
xorl
pop
mov
fmuls
lcall
js
int
or
mov
mov
repnz
scas
dec
dec
fs
jae
nop
pop
or
aaa
add
bound
xchg
cld
inc
pop
mov
jg
scas
xchg
aas
jge
mov
pop
xchg
shlb
roll
add
add
inc
add
xchg
call
adc
movl
addl
movl
neg
mov
mov
decl
xor
and
mov
andl
add
mov
sub
mov
test
je
and
mov
movzbl
sub
mov
mov
mov
mov
xorl
xor
dec
add
sbb
mov
xor
mov
neg
xor
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
jmp
add
mov
mov
adc
xor
add
sbb
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
push
push
call
cmpl
jne
mov
inc
mov
jmp
mov
sbb
mov
xor
sbb
add
mov
addl
sub
lea
addl
xor
xorl
xor
movl
cmp
movl
je
mov
mov
adc
mov
adcl
xor
adcl
add
cmp
movl
jne
subl
pushl
xorl
call
movl
cmpl
je
cmpl
jne
call
cmpl
jne
xor
xor
dec
mov
mov
dec
mov
jmp
or
mov
mov
mov
xor
decl
add
cmp
je
andl
pushl
pushl
xorl
call
mov
andl
mov
inc
mov
cmpl
jne
push
push
pushl
push
push
push
call
cmpl
jb
mov
mov
xor
add
cmp
je
movl
cmpl
je
cmpl
jne
call
mov
dec
mov
jmp
or
mov
andl
jmp
xor
or
inc
mov
cmpl
jae
cmpl
jne
pushl
push
pushl
call
jmp
xor
mov
mov
mov
mov
sub
and
mov
mov
add
movl
cmpl
je
cmpl
jne
push
push
pushl
call
cmpl
jne
mov
dec
mov
xor
or
dec
mov
jmp
andl
mov
xor
mov
andl
xor
or
inc
mov
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
add
mov
mov
mov
add
mov
jmp
mov
mov
add
mov
mov
jmp
icebp
pop
call
das
sbb
mov
sub
stos
cmp
jp
pop
jp
cmp
sub
adc
dec
popf
xchg
jne
clc
ja
out
push
xor
push
cld
and
pop
pusha
int
out
mov
imul
add
fcmovu
or
jle
inc
fwait
sahf
mov
in
flds
jae
jb
cwtl
push
dec
stos
xor
or
aas
dec
in
insl
nop
cmp
rcll
sub
inc
gs
scas
xlat
fstpl
jecxz
cmc
repnz
mov
arpl
inc
or
and
and
xor
testl
push
xchg
cltd
mov
dec
push
movsb
test
repz
mov
int
sbb
std
aaa
mul
or
cmp
push
jne
pop
add
or
jl,pt
sbb
popf
jmp
mov
in
dec
xchg
xchg
cmc
movsb
and
sub
outsl
leave
idiv
lds
or
sbb
insb
les
popa
sub
mov
cmpsl
push
int3
ror
jb
jne
fiaddl
mov
cmp
loop
testl
mov
mov
dec
mov
push
scas
mov
push
popf
jp
mov
cltd
lea
insb
stos
cli
mov
cmp
outsl
cmp
pop
loope
rcll
dec
sti
jmp
xor
and
mov
popf
movb
push
cmpsl
sbb
sbb
inc
pop
aas
aad
xor
xor
mov
xchg
mov
ret
pop
stos
mulb
popa
push
cmp
lret
std
int
xorps
in
pop
rorb
cmpsl
test
ficoml
lret
shrb
or
sarb
dec
stos
cmp
mov
call
push
jmp
gs
xchg
xor
mov
inc
fwait
out
mov
mov
jmp
xchg
aas
fdivrl
pop
xor
jne
xchg
lret
push
das
push
adc
push
jnp
xor
icebp
in
clc
jmp
xor
mov
or
addb
call
sbb
mov
adc
xor
jge
mov
jecxz
scas
cmp
dec
mov
lock
pop
jmp
xor
xchg
sub
roll
sbb
jl
fsub
inc
lds
xor
sbb
xchg
jle
lds
xchg
push
mov
pop
popf
xor
and
jp
pop
push
pushf
int
jmp
adc
fsubrl
mov
inc
jbe
dec
pop
int3
sub
sbb
cltd
inc
xor
cmpl
push
and
jo
mov
lods
jl
pop
jmp
fstpl
dec
or
cmp
pop
out
pop
cmp
mov
xor
dec
jne
mov
nop
xchg
xor
pusha
sbbb
and
cld
mov
xchg
into
xor
movsl
mov
push
int3
bnd
pop
inc
jg
mov
mov
enter
ds
dec
lock
add
cmpsb
push
add
dec
mov
sbb
adc
mov
xchg
pop
cwtl
push
inc
lods
jp
sub
not
adc
cmc
pop
popf
inc
inc
fdivs
cmp
stos
push
inc
ljmp
add
push
out
jae
inc
jg
mov
mov
mov
cld
fmull
outsl
jge
addl
jbe
imul
inc
icebp
lcall
inc
add
pop
push
mov
mov
fcoml
mov
xor
add
subl
xchg
xchg
mov
push
and
xor
or
jge
xlat
std
mov
hlt
pop
and
add
fistpl
sbb
fs
je
inc
inc
push
sarb
mov
repnz
jecxz
inc
xlat
ljmp
jmp
mov
scas
into
sub
dec
out
test
add
mov
sub
xchg
dec
outsb
pop
stos
mov
mov
xchg
scas
rcll
mov
dec
divb
je
xor
dec
or
xor
hlt
stos
test
and
dec
ja
stc
insb
push
and
out
stos
and
pop
mov
xor
inc
lret
test
andb
inc
dec
adc
adc
ret
add
or
bound
sbb
jp
mov
mov
add
inc
dec
xor
jmp
shl
daa
pop
pop
insl
jne
fadd
or
sti
arpl
in
mov
and
rorb
jb
outsl
add
cmp
add
pop
popf
clc
jp
rcrb
mov
call
js
out
testl
mov
inc
mov
pusha
out
adc
or
daa
repnz
dec
cwtl
mulb
repnz
js
sbb
stos
push
pushf
sbb
push
add
inc
xor
imul
daa
mov
mov
stos
test
sbb
scas
push
mov
mov
mov
mov
pop
mov
xor
lret
dec
push
fildl
xchg
push
add
sbb
outsb
adc
movsl
addb
outsl
aad
fwait
dec
cld
add
push
pop
lock
mov
out
xor
pop
shlb
and
ret
jb
dec
and
lods
sbb
enter
lcall
inc
push
cltd
pop
jbe
cmp
aam
ljmp
mov
sub
ret
out
add
insl
sub
push
xor
and
mov
pusha
loop
jnp
aaa
ljmp
into
cld
mov
ds
je
lock
sbb
mov
dec
lcall
push
insl
test
mov
push
lods
cmp
popa
mov
int
xor
fs
mov
ss
pop
loope
iret
lcall
movsl
dec
stos
stc
paddsb
xor
xor
sub
dec
or
xor
dec
mov
mov
enter
pop
sub
mov
outsl
or
sbb
sub
and
xor
cmp
mov
inc
les
cwtl
and
repnz
sbb
jb
jp
adc
cmpsl
aas
or
jnp
or
add
xor
es
rcll
mov
xor
or
scas
xchg
dec
orl
add
push
inc
loop
ss
dec
arpl
je
inc
xchg
fidivl
adc
lods
sub
pop
jmp
dec
and
imul
mov
mov
leave
inc
dec
outsb
lahf
xor
cmp
adcb
push
xor
and
mov
sbb
mov
aad
mov
out
lds
cmp
xor
jecxz
jns
cltd
mov
insb
shlb
mov
and
cmp
sub
rolb
push
cmpsb
fldl
add
inc
out
ljmp
in
outsb
sbbb
push
pop
or
jmp
mov
dec
lods
fisubs
sub
int
rcrl
insl
shrl
and
cmpsl
pop
xor
out
fwait
aam
and
loop
loop
test
and
ret
stos
jecxz
popf
shll
ja
loop
push
add
rorl
loope
dec
outsl
stos
leave
into
sbb
test
push
leave
or
es
jp
in
adc
mov
sbb
push
movsl
mov
sbb
jne
sub
dec
jae
cwtl
ljmp
fists
xchg
adc
cmp
and
int
mov
bound
push
stc
idivl
mov
mov
inc
or
iret
pushf
out
xchg
add
push
shr
mov
test
jp
ds
mov
push
loopne
fildl
xlat
mov
cld
mov
or
adc
rcrb
in
mov
push
jns
test
in
mov
or
xchg
daa
mov
pop
bound
iret
stos
pop
cld
xlat
and
and
sbb
adcb
jns
ret
xor
and
sbb
cmp
addr16
mov
pop
cmp
add
mov
faddl
mov
push
lcall
cli
dec
xor
jp
mov
cld
sbb
subb
and
loop
inc
stos
in
icebp
icebp
pop
bound
dec
mov
lods
lahf
cltd
jecxz
sarl
mov
mov
sti
andb
cmp
mov
mov
lds
cmpsl
xchg
push
mov
xor
pushf
adc
inc
fstps
push
cld
mov
mov
push
cmp
xor
mov
mov
mov
xchg
cmp
das
fs
sbb
push
adc
mov
mov
imul
lcall
mov
mov
push
mov
cli
xlat
inc
sub
jle
inc
adc
or
stos
push
dec
repz
js
xchg
and
push
mov
cmp
add
aad
sub
sub
push
out
and
and
pop
idivb
cs
pop
jnp
iret
push
outsb
pop
xor
inc
push
or
cmpsl
int
mov
add
addr16
push
and
int3
aam
cld
rcll
pop
cmp
and
lods
jnp
div
inc
call
add
dec
cmpsb
mov
add
cmc
push
xor
adc
pop
mov
je
xchg
not
addr16
test
fidivrl
mov
test
jne
fildl
fstl
orb
xor
dec
stos
sahf
pop
je
les
jae
cmp
cmp
loope
movsb
stos
push
mov
cli
and
jns
jo
dec
or
jo
dec
repz
clc
ja
mov
push
mov
sub
test
sub
push
test
sahf
jne
aas
cmp
lods
pop
mov
cwtl
inc
cmc
jecxz
xor
inc
outsl
add
sub
cld
jbe
pop
mov
mov
loop
into
inc
dec
cwtl
mov
sarb
addr16
js
vpslld
std
daa
pop
sub
mov
rorl
mov
xor
push
inc
lret
mov
lea
popl
or
push
push
jns
fdivr
orb
in
popf
jp
pop
push
jge
or
mov
inc
mov
adc
orl
mov
clc
inc
cmp
and
mov
aaa
nop
mov
cmpl
lds
sbb
lcall
mov
rcrl
xor
jnp
in
pusha
add
test
jb
push
xor
in
pop
xchg
insl
cli
sarl
mov
or
jns
jns
fstpl
movsl
mov
pop
adc
add
scas
or
cli
dec
mov
imul
jo
cs
movsb
test
pop
jo
push
ret
aaa
cmp
out
shll
loope
and
push
dec
mov
mov
out
repz
repz
mov
cmp
mov
sub
push
ja
loope
sbb
cmp
xor
pop
pop
addb
pop
leave
xlat
lcall
int3
or
push
push
cmp
es
pop
pop
xchg
test
rorl
cwtl
sub
and
insb
ss
pop
or
std
sbb
xchg
test
xor
pushf
mov
fs
jb
movsb
mov
pop
inc
gs
xor
iret
pop
adc
mov
arpl
or
pusha
mov
hlt
dec
dec
call
mov
jo
push
test
mov
ret
mov
xor
into
notl
pop
xor
or
or
test
insb
cld
in
iret
adc
dec
xchg
jne
lret
sbb
add
scas
mov
sbb
xor
es
sub
or
jns
fdiv
sub
movsb
push
mov
cmp
inc
ja
dec
ljmp
in
dec
in
inc
xorl
xchg
mov
scas
sbb
inc
jecxz
mov
test
mov
mov
xchg
ret
or
pop
cmc
insl
pop
out
fwait
jb
inc
xchg
mov
pop
or
mov
data16
fdiv
push
add
pop
cmp
cwtl
test
or
adc
push
icebp
adc
out
dec
mov
lret
xor
push
loop
data16
push
mov
repz
push
pop
mov
xor
dec
ljmp
and
popa
pop
sbb
ret
mov
cmovno
fldenv
loope
pop
loop
daa
loopne
leave
insb
sbbb
sbbb
and
ja
fstl
pop
sbb
pop
jnp
or
pop
mov
enter
fcomps
xchg
adc
clc
mov
imul
test
cli
aam
cmpsl
jge
in
xlat
mov
lods
sti
or
jno
pop
inc
push
push
xchg
lret
outsl
iret
fst
xor
pop
lock
xchg
mov
stos
sub
sbb
mov
std
sub
xchg
insb
inc
leave
mov
lods
and
cmpsb
ret
sarl
sbb
push
imul
mov
xchg
imul
in
cmc
adc
dec
mov
push
push
xchg
sahf
pop
sub
fbstp
xchg
jecxz
pop
out
loopne
dec
nop
movsl
popa
mov
xor
rorl
push
xchg
xchg
stos
jg
jle
into
je
lds
hlt
sbb
mov
add
nop
dec
scas
hlt
mov
push
sbb
cmp
lahf
sbb
cwtl
icebp
nop
dec
lret
xor
pop
pusha
cwtl
jbe
cs
sub
fldt
orb
enter
in
scas
dec
outsl
scas
pop
gs
jmp
jae
ret
fcoml
jg
sub
push
cwtl
push
mov
push
jmp
outsl
mov
sahf
int3
pop
sbbl
jmp
mov
lock
and
push
or
xchg
insb
mov
pop
adc
jns
push
jnp
inc
cmp
jns
mov
and
aaa
add
add
add
orl
adc
dec
xchg
xor
or
mov
or
dec
mov
imul
int3
adc
cwtl
push
sbb
jno
bswap
lcall
out
data16
xchg
sbb
mov
imul
popf
jne
xchg
int3
and
adc
xchg
sti
dec
lahf
push
and
out
jne
aaa
mov
addr16
daa
cmc
jbe
jp
cmpl
pop
cltd
pop
dec
enter
xchg
fildl
stos
imul
mov
xor
clc
aam
push
stos
pushf
pop
cmp
sub
sbb
shrl
cwtl
outsl
in
pop
sbb
into
xor
ret
mov
cmp
mov
fidivs
mov
mov
jp
pushf
lahf
aas
sbb
je
sbb
mov
push
inc
rorl
adc
sbb
adc
leave
daa
adc
jno
sbb
mov
add
add
and
loope
push
add
lock
cmp
clc
fnstcw
xchg
icebp
push
pop
nop
fists
mov
sub
add
lcall
inc
and
and
rorl
push
push
xchg
jno
adc
dec
stos
dec
and
push
out
sbb
dec
sti
jns
cwtl
inc
lcall
test
sbb
mov
xchg
inc
mov
jno
std
subb
test
out
and
dec
jge
cltd
and
fnsave
leave
mov
lahf
inc
jle
lret
or
adc
pop
es
scas
mov
cmp
and
add
rclb
enter
mov
in
pop
adcl
pop
add
pusha
pop
jecxz
jmp
shl
add
mov
dec
push
or
mov
inc
decb
mov
lds
pop
aas
mov
lret
mov
mov
pusha
mov
mov
lods
lods
sub
sub
pop
imul
fs
cli
popf
stos
imul
sbb
pop
imul
pop
cmp
jp
xchg
xchg
rcll
ljmp
movsb
cmp
xchg
mov
fwait
or
scas
je,pn
pop
clc
xlat
fistl
rorl
mov
lods
pop
sbb
test
mov
test
jno
cmp
aam
xchg
mov
push
dec
inc
leave
dec
pop
fmull
decb
and
inc
nop
sarb
sub
imul
dec
sub
lds
sub
push
pop
repnz
sbb
dec
movl
clc
test
mov
iret
or
add
push
inc
stc
inc
pop
pusha
fadds
add
lods
mov
dec
push
ljmp
push
or
mov
mov
or
xchg
je
hlt
sub
in
sbb
stc
inc
repnz
loop
ficomps
out
lret
add
push
js
cmc
cmpsb
and
gs
add
xor
xor
xor
in
outsl
xchg
lock
sub
jno
inc
aam
lods
mov
jmp
and
negb
and
sbb
xor
insb
jne
insl
cmp
js
push
push
frstor
hlt
pop
pop
dec
sbb
gs
push
pushf
jp
mov
pop
inc
imulb
mov
fwait
xlat
adc
dec
cmp
xchg
or
mov
movsl
cmpsb
mov
push
mov
movsl
lods
fwait
adc
inc
add
push
outsl
jno
cmp
ja
das
imul
and
add
dec
sbb
or
cltd
inc
repz
pop
xchg
je
stos
xchg
dec
add
mov
jnp
fs
jecxz
dec
in
out
ficomps
sub
push
push
loope
mov
xor
leave
insb
pop
pop
push
repnz
pop
sbb
jg
lods
xchg
jmp
add
push
jbe
aas
and
int
sbb
rol
faddp
iret
popa
arpl
pusha
jmp
lods
loop
and
cmp
in
xor
leave
shr
add
mov
pop
xchg
inc
into
sub
fmuls
mov
test
rclb
mov
into
cld
push
jae
or
xchg
inc
outsl
shrl
mov
inc
jb
mov
jno
loopew
pushf
push
pop
xor
jno
lcall
pop
adc
out
sbbb
sahf
cmpsl
add
push
aam
out
mov
loop
and
pusha
leave
jmp
hlt
outsl
mov
fbstp
popf
popa
pop
call
mov
sub
and
lret
fdivs
adc
addl
test
sbb
mov
outsb
out
or
inc
rcl
sahf
insl
inc
shr
or
popa
add
xchg
data16
dec
mov
hlt
cmc
pop
xor
push
scas
sbb
pop
repnz
call
add
les
xchg
push
sub
negb
in
mov
nop
push
rcr
popa
xchg
imul
pop
mov
repz
sahf
mov
into
ror
and
mov
test
mov
xor
scas
push
or
pop
pop
fld
xor
icebp
cmpb
or
dec
mov
ret
faddp
mov
movsb
popf
mov
test
mov
mov
mov
xchg
clc
or
jo
xchg
cwtl
adc
lahf
repnz
jle
mov
xchg
and
fmull
enter
sbb
jl
jp
inc
pusha
fisubs
inc
ljmp
pop
or
xchg
pop
out
push
inc
mov
clc
mov
mul
cwtl
xor
mov
xchg
and
dec
enter
inc
out
sub
xor
and
ss
into
stc
push
fistl
fnstsw
xchg
dec
roll
addl
cmc
pop
mov
cltd
stos
loopne
sub
cmpsb
cmp
push
adc
jl
movsb
imul
rclb
dec
data16
outsb
and
or
rorb
inc
in
iret
xlat
cmp
sub
or
cmc
enter
popa
xchg
addr16
sbb
or
jl
incb
cmp
cmpb
xchg
mov
jne
idivl
pop
xchg
roll
adc
lds
sub
xchg
cmp
or
loop
mov
arpl
popf
loop
or
in
xor
add
rcrb
add
xor
test
cwtl
clc
mov
cmpsb
lods
push
jo
ja
dec
add
jne
cwtl
inc
std
jecxz
sub
fbld
shlb
xrelease
movb
mov
or
add
and
adc
or
std
out
sahf
cmp
dec
push
int
push
cmp
popf
dec
xor
test
test
xor
stos
aad
jb
pop
mov
and
mov
mov
fwait
jo
add
jo
aam
aad
sahf
or
or
inc
rorl
cmp
pop
cli
xchg
cmp
mov
xor
in
fidivrs
pop
imul
jmp
lahf
dec
xor
jae
cmpsl
movsl
add
push
pusha
mov
jle
cmpsl
dec
xor
loope
in
dec
imul
and
lcall
fdivp
mov
lock
pop
push
dec
ret
adc
dec
adc
clc
or
add
adc
add
loopne
inc
push
mov
mov
push
sbb
adc
filds
inc
nop
push
repz
ret
inc
div
xchg
pushf
pop
andb
or
lahf
jmp
rcll
hlt
call
into
sbb
jge
arpl
bound
or
ds
push
mov
mov
adc
jmp
lods
mov
stc
inc
pop
and
into
in
lea
or
pop
xor
push
shll
lods
test
call
mov
ret
mov
mov
mov
jno
hlt
jl
jge
push
push
pop
rcr
sbb
adcb
rcrl
out
sub
testb
add
fcoml
inc
ret
jnp
pop
push
movsl
arpl
leave
mov
add
cmp
jb
pop
mov
int3
fwait
cmpsl
jb
imul
sub
out
push
clc
push
lret
push
mov
sarl
xchg
aam
or
clc
imul
dec
xorl
mov
xor
test
mov
sbb
inc
jmp
clc
jge
mov
out
movsl
push
dec
lock
sub
add
xchg
gs
fistpl
or
sbb
outsb
fstl
jae
fisubrs
add
mov
xchg
xchg
jl
and
push
sbb
nop
sti
pop
push
lds
pop
xor
inc
adc
mov
xchg
adc
addr16
xchg
in
xchg
repz
lea
leave
inc
xchg
enter
das
jge
push
mov
lea
fsub
clc
mov
mov
fnstenv
pushf
adcl
outsl
mov
dec
rcrl
inc
aam
int3
push
out
xchg
sbb
add
outsb
xor
sbb
mov
inc
test
sbb
cwtl
icebp
cmp
pop
int
out
mov
jbe
and
and
stos
lods
push
mov
xchg
ss
inc
jmp
fimuls
adc
call
mov
adc
adc
mov
xor
jns
jg
jb
or
in
out
jnp
clc
pop
ficoml
rcrb
test
sbb
fs
sub
dec
leave
xchg
out
mov
jecxz
pusha
push
fisttpll
sbb
mov
pop
sub
push
or
fwait
ss
fs
shll
adc
jo
lret
dec
xor
outsl
mov
push
mov
inc
xor
push
sub
sub
pop
cmp
xchg
mov
test
cmp
cmp
inc
stos
fisttpll
cmp
out
in
add
arpl
mov
add
and
dec
pop
fldcw
iret
xor
aam
icebp
lods
sub
pop
rcrb
in
inc
adc
fldcw
and
push
dec
sti
mov
jp
imull
gs
fnstsw
cmp
inc
sub
pop
in
into
mov
pop
gs
mov
xor
scas
rolb
mov
adc
fcmovnu
xchg
and
xchg
je
pop
loopne
lds
xchg
push
push
add
jbe
sar
rcll
out
arpl
mov
push
jnp
aam
std
cmp
xchg
xchg
outsb
ds
push
hlt
pop
and
in
call
sarl
inc
push
aaa
rcrl
xor
test
fcmovnb
fnstcw
ret
add
sbb
jae
mov
imul
jmp
inc
aam
mov
or
push
sahf
and
test
cmpl
push
mov
sarb
nop
add
jecxz
dec
lea
xor
xor
push
fisubrl
xor
loope
push
daa
dec
inc
pusha
imul
mov
xchg
dec
je
arpl
push
aaa
sub
dec
inc
out
imul
xchg
js
cli
pushf
mov
arpl
xchg
sbb
jg
gs
test
cmp
dec
lock
add
iret
mov
in
loop
jnp
xor
or
int
jne
repnz
sub
push
pop
push
pop
fildl
insb
leave
loop
in
sbb
iret
in
jae
mov
or
loope
xor
and
cwtl
push
dec
push
push
fxch
adc
nop
jnp
mov
dec
stc
sub
dec
rolb
dec
imul
xchg
mov
cmp
mov
sub
imul
mov
stc
cmpsl
sub
mov
sbb
loope
addl
inc
lea
mov
push
dec
rclb
xor
add
mov
pop
cmpsl
push
icebp
aaa
mov
mov
add
insl
outsb
shlb
mov
jg
in
cmpsb
push
call
sarl
pop
mov
xor
and
js
jl
pop
xor
cmc
sbb
jns
jg
push
test
sbb
add
xchg
jecxz
mov
loope
dec
mov
jmp
in
mov
push
cld
push
pop
dec
mov
hlt
sub
cmp
mov
inc
lods
nop
mov
cmp
mov
cli
add
adc
sbb
les
or
sub
mov
leave
sbb
mov
lahf
test
mov
shl
add
sub
pop
and
ss
mov
dec
cwtl
imulb
dec
mov
inc
mov
mov
mov
inc
cwtl
out
test
sub
cmpsb
inc
inc
or
shlb
mov
cmp
pop
add
stos
in
mov
cmp
shlb
dec
out
sub
xor
in
dec
sbb
inc
and
stos
popl
test
les
wbinvd
mov
popf
adc
push
xchg
cld
mov
mov
jns
dec
les
dec
mov
das
lahf
call
enter
mov
push
and
fstps
ds
push
cwtl
in
lret
arpl
sub
pop
jbe
dec
jne
or
push
dec
push
pop
popa
add
mov
out
xor
mov
aas
fmuls
dec
add
mov
in
and
sbb
in
mov
xchg
pushl
inc
inc
xchg
fwait
xor
lcall
xchg
pop
sbb
xchg
mov
shlb
push
adc
scas
dec
adc
pop
lods
mov
sti
push
inc
aaa
out
and
push
lods
outsl
mov
dec
xor
pop
fdivs
scas
jg
push
aaa
mov
fdivrl
aad
fmul
sbb
bound
testb
cmc
fmulp
lret
pop
loopne
rclb
fwait
nop
scas
xor
enter
inc
xchg
das
dec
pop
push
pop
adc
dec
dec
cmp
rcll
add
icebp
and
orl
das
pop
push
ficoms
xchg
sub
pop
cmp
loope
imulb
jne
add
inc
das
jns
shl
jns
mov
fmuls
pop
xchg
inc
mov
jnp
sub
mov
in
in
invd
xchg
mov
fwait
dec
aam
pushf
add
sbbl
inc
dec
lds
mov
ja
js
adc
and
out
pusha
movsl
les
push
pop
mov
faddp
in
stos
cs
xchg
mov
sbb
cmp
stos
push
cld
imulb
xor
leave
sbb
nopl
xchg
sarb
sbb
addl
ja
imul
popf
insb
adc
loope
jno
pop
sub
mov
mov
push
xchg
fwait
cmc
jecxz
js
call
add
out
mov
jmp
icebp
cltd
xchg
roll
jns
push
adc
lods
push
test
rol
add
cmp
frstor
xchg
dec
jg
divb
and
fldenv
xchg
pop
sbb
xchg
adc
out
sbb
jge
out
outsl
sbb
popa
int3
pop
dec
sbb
add
mov
popa
inc
sbb
lds
sbb
sbb
sub
daa
push
xor
jmp
imul
daa
mov
sub
jb
inc
xlat
push
mov
mov
xor
add
test
ss
scas
cltd
dec
fdivr
xchg
jne
mov
mov
push
jnp
cmpsb
aam
popl
xor
fidivs
repz
mov
push
pushf
mov
sbb
xchg
bound
add
xchg
stc
cmp
push
fadds
shrl
mov
jmp
dec
mov
stos
lock
sub
lret
jae
les
imul
push
sub
dec
push
fimuls
negl
cs
xchg
sub
std
xchg
pushf
cltd
in
sbb
test
aad
cmpsb
pop
jb
aaa
mov
ret
xchg
xor
ds
push
repnz
sbb
lods
add
loop
jo
cmp
xchg
aas
fld
testl
jno
lret
adcb
lcall
test
xor
dec
xor
std
and
adc
pushl
inc
cli
sub
sbb
or
mov
sub
push
jl
or
mov
fsub
xchg
push
cwtl
inc
adc
movsl
mov
xor
or
xor
cmp
test
fbld
in
mov
fs
add
fst
push
pushf
push
stc
jbe
adc
negb
jge
mov
mov
jp
sbb
mov
popa
sbb
aam
rcrl
shl
lret
adc
shll
cwtl
das
and
shl
dec
popf
out
push
mov
int3
popa
and
push
pop
negl
es
jae
pop
xorl
sbb
in
dec
lds
jmp
push
adc
les
aas
add
mov
push
cs
xchg
popa
je
dec
out
push
js
dec
repz
push
mov
mov
push
mov
cmp
scas
add
mov
cmp
mov
or
fbstp
jno
jle
inc
mov
add
test
or
out
sbb
popa
fstpl
mov
cs
popa
push
cmpsl
int3
cmp
out
and
repz
inc
push
and
hlt
or
dec
xor
lcall
out
orb
rorl
out
ss
imul
popl
ljmp
cmp
xlat
mov
sbb
mov
test
cs
inc
cmp
mov
dec
pop
imul
scas
cld
jns
lret
cmp
fwait
popl
mov
jp
jg
arpl
cmpsb
aas
enter
inc
jns
addr16
sahf
push
add
movb
cmp
je
jmp
mov
mov
xor
add
cmp
mov
je
mov
xor
add
cmp
je
lea
push
pushl
pushl
call
mov
mov
jmp
incl
je
fs
les
add
add
jp
and
push
xchg
mov
mov
dec
lods
pop
and
lods
inc
mov
scas
xchg
sbb
in
call
and
xchg
jb
sub
push
push
mov
inc
lret
inc
rcrl
fs
out
aaa
add
push
lock
or
cmpsl
jl
leave
movsl
jns
cli
flds
push
into
fst
aam
jp
pop
divl
mov
test
in
and
inc
or
out
int3
pop
push
push
cmp
js
xor
dec
in
xchg
fsubrl
cltd
add
sub
lock
mov
mov
jmp
adc
or
push
or
xchg
les
xchg
push
lahf
dec
stc
lds
add
in
pop
pop
test
lret
hlt
and
je
rorb
fdivrl
icebp
rorb
inc
sub
xchg
or
xchg
testb
xchg
ss
sub
lcall
sub
test
adc
and
sub
fistpl
mov
mov
out
shlb
pop
shrb
imul
inc
ja
test
mov
test
aas
dec
enter
pop
scas
cmpsl
iret
cmp
hlt
pop
and
into
lods
fdivrs
and
pop
popa
xchg
negb
fwait
mov
out
inc
push
sub
xor
popf
xchg
mov
mov
insb
push
in
stc
imul
sub
inc
sysret
mov
filds
jp
xor
rclb
outsb
lcall
cmp
pop
fmuls
mov
mov
adc
mov
mov
faddl
add
icebp
fwait
jge
and
jne
mov
loop
jnp
roll
ljmp
dec
sbb
cmpb
out
mov
cmp
mov
push
lea
pop
ljmp
pop
aas
or
call
clc
cmp
mov
daa
leave
inc
test
mov
add
es
pop
sbb
mov
sub
out
fwait
pop
pop
lret
xorb
cmp
jne
outsb
enter
mov
add
xor
in
adc
jle
mov
mov
or
dec
out
or
dec
es
pop
jns
loope
call
in
jae
aas
mov
inc
in
ja
adc
out
push
shll
push
inc
outsl
xchg
fxch
mov
xchg
mov
std
mov
pop
sbb
lret
cmp
sub
lret
popf
mov
mov
movsl
dec
pop
out
sbb
xorl
cmp
add
cmp
jge
repz
sub
je
fwait
xor
js
loopne
mov
dec
sub
scas
or
push
xor
inc
js
pop
sub
repnz
pop
sub
aad
push
inc
cmp
imul
decl
outsl
and
pop
push
push
xlat
ja
popf
sub
popf
adc
nop
arpl
inc
in
pop
push
cmp
sbb
xchg
xor
push
lea
sbb
sbb
loopew
push
popa
loopne
mov
aad
nop
xchg
or
shlb
mov
jae
fcomi
jnp
daa
les
aaa
test
and
test
inc
mov
bound
xor
pop
jns
mov
outsb
jg
insb
inc
jo
lret
inc
mov
add
std
or
mov
xor
call
add
xor
mov
int
mov
lods
push
lret
test
push
or
adc
lcall
shlb
xchg
sbb
insl
ja
add
fs
xlat
xor
and
or
sub
cmp
adc
pop
mov
push
adc
iret
cmp
add
in
jnp
insb
aam
sbb
mov
push
jmp
popf
cmp
clc
outsb
mov
sti
rcl
cmp
inc
lcall
and
push
nop
jo
pop
mov
dec
xor
push
push
pop
fxam
das
addr16
mov
jo
mov
in
xchg
mul
fidivrs
mov
dec
inc
enter
lcall
pop
inc
inc
into
mov
mov
fs
or
push
push
fdivrl
dec
mov
hlt
pop
push
stos
jnp
sbbb
pop
pop
sbb
inc
repz
stc
ret
mov
pop
xchg
add
ljmp
stos
mov
xchg
jno
cmp
cmp
shl
clc
add
ss
adc
insb
mov
xchg
not
inc
dec
push
push
mov
sbbl
adc
int
mov
add
xlat
push
in
data16
add
jle
aaa
push
inc
iret
or
pop
int3
inc
pop
inc
ja
shrb
aas
out
int
mov
pop
imul
mov
in
adc
aaa
insl
sbb
and
pop
dec
pop
cld
cmp
sar
sbb
lcall
xchg
push
pusha
call
test
inc
mov
push
loop
fsubs
pop
mov
adc
lret
je
movsb
aas
mov
fsubrs
sub
iret
sub
push
je
mov
sbb
push
jle
sub
mov
pop
pop
or
popf
xlat
fnstsw
mov
test
notb
loope
icebp
nop
scas
xchg
loop
mov
jecxz
mov
jg
mov
in
dec
popf
repz
loopne
fcmovnu
push
into
daa
ficoml
and
lret
inc
outsl
loopne
mov
adc
int3
sub
mov
xchg
sub
dec
aaa
or
mov
fcmovnb
lods
jecxz
pop
sarl
int
jns
arpl
sbb
mov
sbb
push
add
loopne
pop
sbb
bound
jb
xchg
adc
out
decl
popa
mov
push
push
hlt
test
popa
iret
ficoms
insb
jb
icebp
mov
inc
int
sbb
aad
cs
xor
les
jns
rcrl
fsts
cs
pusha
jb
stc
rclb
mov
insb
aam
lods
jbe
cmc
push
outsb
lahf
sub
mov
lea
jecxz
push
push
out
xchg
int3
aam
sub
icebp
cmp
ja
mov
add
xchg
mov
lods
test
clc
dec
cmp
stos
aad
add
outsl
movsb
mov
xlat
sub
push
mov
push
add
or
ret
out
mov
push
sub
lock
out
sbb
add
andl
push
jge,pn
fistpl
into
sbb
inc
in
popf
in
adc
and
dec
das
rolb
dec
xor
test
inc
sarl
push
xchg
and
loope
arpl
xchg
cmp
std
jp
fiadds
aam
lods
and
push
ja
mov
lods
lods
dec
inc
mov
aas
repz
lea
xlat
aas
bound
dec
imul
and
out
gs
inc
lea
iret
movsb
pop
push
cltd
cmp
and
xchg
lds
xor
adc
xor
fwait
jge
pop
arpl
cmpsb
es
movups
rorb
adc
or
add
adc
iret
das
mov
mov
jge
mov
xchg
icebp
sbb
cmp
mov
or
adc
call
push
dec
add
stos
jne
xchg
push
cmpsl
icebp
outsl
movsb
dec
js
sub
or
push
add
scas
call
in
jmp
push
in
hlt
arpl
jle
cmc
xor
sbb
imul
xor
push
xchg
cmp
daa
mov
add
movsb
xlat
int3
jne
stos
lcall
cld
ret
es
clc
out
cmp
sub
and
adc
clc
bound
cmpsb
ds
mov
int3
aad
rcrb
orb
ja
cltd
add
insl
iret
add
andl
mov
adc
pop
orl
push
dec
xor
or
sbb
mov
pop
push
out
jp
jne
pop
dec
sbb
pop
pop
or
test
jno
pushf
int3
mov
push
subb
and
iret
jg
xchg
xchg
int3
mov
outsl
ret
loopne
fwait
pop
mov
inc
sub
xlat
lahf
inc
fidivl
mov
pop
leave
cmp
lods
sbb
push
mov
jb
sub
inc
lret
mov
adc
jns
mov
out
jnp
push
fisubs
pop
jnp
iret
push
inc
adc
fwait
jnp
add
sarl
cli
mov
rorb
ficompl
ret
xchg
xor
ret
push
adcl
add
pop
or
leave
fadds
rcrl
aaa
or
xor
jp
call
outsb
cmp
ds
and
fbstp
scas
popf
mov
mov
stc
and
xor
push
clc
ds
push
rcr
sub
mov
mov
sbb
push
and
push
enter
pop
or
mov
out
mov
and
and
mov
push
push
loopne
and
adc
mov
popf
add
sub
bound
inc
negl
adc
mov
mov
rcrl
inc
inc
xchg
gs
out
xor
sti
mov
mov
add
repnz
dec
add
xchg
and
or
bound
push
clc
ret
mov
f2xm1
inc
sub
jno
or
arpl
xor
xchg
xchg
stos
fsin
loop
push
push
addl
pop
and
and
jo
push
mov
test
std
mov
roll
leave
push
add
hlt
xchg
bound
clc
xchg
jnp
jmp
loop
push
mov
xchg
fs
and
lahf
cmpsl
push
inc
addb
popa
shrl
xchg
mov
adc
sarl
iret
pop
or
lahf
loopne
jo
xor
jle
js
mov
lea
repz
add
jns
icebp
push
cmpb
js
rorb
loop
xchg
push
scas
int3
add
cli
mov
in
gs
inc
out
mov
mov
push
pop
jmp
shrb
dec
cmp
xchg
inc
pop
icebp
sbb
or
lret
lahf
pop
push
sti
push
sbb
lcall
mov
shrl
test
push
mov
je
and
dec
cld
xor
rcrl
dec
aas
cmp
xchg
mov
lret
push
jns
inc
inc
sahf
aad
dec
repz
xchg
lods
inc
pop
xchg
adc
adc
pop
mov
adc
ljmp
xchg
or
mov
adc
in
popf
int
loop
xor
aam
cmpsb
jle
jmp
cltd
sar
dec
sti
jmp
std
in
push
inc
out
nop
pop
arpl
mov
stos
stc
pop
inc
fidivs
add
mov
jmp
dec
pop
jp
xlat
inc
lock
iret
cmp
push
ds
cmp
cmpsb
popa
addr16
mov
jne
xchg
xlat
repnz
and
aam
mov
mov
dec
push
dec
sub
cs
lods
les
sbb
shlb
mov
ss
push
popf
ds
push
sahf
xchg
popf
pop
movsb
in
lcall
stos
ds
sbb
movsl
cmc
xchg
inc
mov
lea
or
or
xor
cmp
out
fwait
jmp
and
push
push
ja
call
mov
xchg
inc
fstl
pusha
mov
or
scas
xor
pop
in
pop
sub
xor
lret
shlb
push
mov
imul
or
jecxz
addr16
push
xor
xchg
or
xchg
mov
mov
aam
les
and
mov
aaa
jnp
and
popa
sub
int
lock
or
into
mov
mov
mov
mov
xchg
and
dec
mov
jb
xchg
mov
mov
pop
push
sub
gs
loop
loopne
shlb
dec
mov
leave
daa
jmp
and
add
add
and
gs
pop
pop
cs
test
shlb
fists
mov
jp
or
xlat
ljmp
mov
test
mov
push
cld
adc
movsl
lcall
movsb
push
sarl
loopne
add
mov
inc
inc
movb
jge
dec
rcrl
mov
xchg
mov
out
sbb
lahf
xchg
scas
mov
mov
bound
dec
xor
in
repz
aad
sbb
pop
cmp
loop
stos
inc
dec
das
dec
mov
push
adc
xchg
adc
mov
or
mov
push
aad
mov
jmp
leave
dec
push
push
dec
mov
in
adc
nop
adc
jb
icebp
ror
scas
or
sbb
and
leave
add
int3
and
lock
outsb
sub
jl
inc
xor
lahf
ljmp
adc
push
dec
dec
fcmovnbe
sti
mov
outsl
pop
ret
jle
mov
inc
dec
xchg
push
ss
rcrb
bound
cmpb
push
lahf
xor
cli
in
cmp
fistpll
pop
or
hlt
in
fs
fstpt
rcl
pop
in
scas
sbb
push
jmp
or
or
lret
outsl
mov
sub
popa
mov
xor
add
xchg
jle
dec
jl
notb
and
std
mov
pushf
dec
jmp
mov
and
insb
cmpsl
aad
shr
pushf
mov
push
mov
inc
jp
add
pop
jns
fcmovne
adc
ucomiss
lret
sbb
popa
scas
or
push
mov
loopne
in
clc
nop
scas
decb
pop
xchg
xor
add
aad
cltd
fucomi
test
test
sbbl
pop
add
jle
jg
adc
jno
mov
adc
repz
fadd
adc
aaa
cli
dec
roll
jne
xor
xchg
out
data16
ljmp
jb
push
stc
daa
ljmp
adc
movb
push
sbbl
xor
or
xchg
sbb
jae
imul
jg
iret
bound
sub
pop
int3
pop
xor
mov
imul
jae
mov
out
fimull
jl
pop
inc
fsts
ret
adc
push
jp
xchg
sbb
jge
into
insb
shl
lds
imul
mov
mov
xchg
movsl
mov
sbb
jmp
mov
popa
cmp
xchg
push
hlt
test
push
fimull
lea
fcoms
or
fnstenv
push
push
scas
repnz
mov
push
rcll
cmp
jmp
jge
and
repz
pop
les
mov
cld
in
or
mov
and
mov
daa
adc
push
pop
jmp
dec
push
jecxz
push
retw
xchg
call
loopne
incl
dec
stos
rcr
in
and
subl
mov
and
test
mov
push
dec
arpl
cld
dec
fisubrl
andl
andb
dec
ss
out
dec
adc
mov
out
push
cmp
xchg
test
add
pop
and
dec
jle,pt
cld
pop
into
ja
bound
fists
mov
rol
test
outsl
out
imulb
dec
scas
push
repz
gs
jmp
lods
mov
pop
fnsave
add
pop
xchg
movsl
fisubl
inc
dec
negl
sbb
pop
ret
xor
pop
jge
jecxz
cmp
insb
mov
icebp
xor
rcr
addr16
pop
js
mov
fstpt
mov
fstp
ret
loop
sub
cld
jbe
or
adc
pop
mov
cmp
sbb
xchg
int
enter
xchg
xchg
mov
jl
sbb
or
push
in
cmp
dec
dec
and
cmp
xchg
insl
leave
mov
sbb
daa
mov
subb
xchg
push
fwait
out
addb
push
in
stos
dec
add
jo
jg
call
xchg
sarl
dec
ret
pusha
aas
enter
bound
adc
lret
sub
mov
push
jg
inc
sub
loopne
outsl
into
and
icebp
add
loope
pop
shll
cmpsl
sub
jmp
jp
jle
lods
lret
cli
and
cmc
inc
andl
js
sub
divl
shr
push
pop
fwait
push
pop
pop
aaa
mov
call
mov
loopne
inc
cmp
test
push
or
mov
cmp
test
cmp
pop
data16
sub
out
repz
adc
out
jp
adc
divl
pop
bound
movsb
cmc
rorb
push
jbe
push
pop
sbb
cmpsl
cltd
lcall
pop
xchg
jge
pop
mov
sbb
nop
ss
rolb
mov
jl
xchg
cmpl
stos
and
sub
ss
mov
jbe
cmovs
mov
inc
rcll
push
mov
mov
cltd
fsts
push
popa
xchg
lea
pop
sbb
push
and
pop
mov
pop
rclb
rolb
jp
fs
xchg
loop
inc
jno
rclb
call
lds
aad
decl
lcall
lds
adc
xchg
inc
in
xchg
cmp
iret
gs
mov
lods
xor
into
int3
test
pop
repnz
iret
insl
das
out
dec
sbb
xor
sbb
aaa
sbb
mov
cmp
jecxz
arpl
sub
jg
bound
std
cmp
ljmp
test
cmp
les
and
mov
fstl
lods
adc
hlt
xor
lds
lds
mov
dec
sbb
mull
icebp
icebp
or
in
dec
sub
mov
movsl
fsubs
es
js
sahf
mov
gs
add
pop
sbb
test
xor
in
mov
cmc
std
sub
inc
xchg
mov
push
lahf
jmp
sub
pop
mov
sbb
out
inc
loope
add
pop
data16
into
cltd
xchg
out
sbb
rclb
and
cld
lret
adc
stos
out
push
inc
mov
roll
and
scas
mov
in
mov
aam
enter
inc
mov
dec
mov
xchg
xor
adc
call
pop
add
jnp
pop
rcrb
dec
mov
fstps
sub
mov
jp
outsb
push
xlat
or
ret
mov
and
mov
push
data16
or
fninit
cmp
cmp
cmpsb
mov
fnstenv
dec
dec
fwait
pop
mov
rclb
or
pop
decl
insb
fldt
inc
in
iret
call
pop
shrl
cmp
adc
fmuls
pop
mov
push
pop
xor
add
jp
mov
xor
mov
test
fimuls
mov
arpl
out
inc
lahf
adc
jle
adc
adcl
add
shr
dec
add
mov
xor
fisubs
fcoml
ljmp
adc
jo
dec
or
pop
push
movsb
test
mov
cmp
pusha
fstps
stc
es
adc
xchg
add
mov
dec
or
arpl
pushf
int3
movsl
push
xor
adc
and
xor
ret
stos
sbb
cmpsl
pop
and
popa
jbe
sbb
xchg
movsb
insl
int3
pop
rcrl
push
mov
sbb
in
in
ds
cld
flds
jmp
sub
leave
sbb
cwtl
subb
and
add
jae
mov
lock
mov
adc
rorl
xchg
shll
sahf
fmuls
xchg
or
insl
icebp
or
xor
arpl
clc
inc
mov
test
jnp
stos
loopne
jb
mov
push
pop
and
jno
call
loopne
aam
sbb
xor
cmp
in
mov
push
xlat
sbb
int
out
mov
or
jl
xchg
mov
xor
or
std
xchg
movsb
divb
int
or
mov
xor
and
or
push
call
cmp
inc
adc
lret
push
xor
xchg
mov
fcomp
xchg
mov
icebp
gs
ljmp
ret
inc
xor
stos
fimull
stos
mov
fsubl
aad
rcrb
jecxz
lock
js
mov
xor
jg
mov
add
jmp
pop
pop
or
pop
std
pushf
js
fdivs
xchg
les
inc
jp
dec
lahf
sbb
sbb
loope
and
lea
dec
jl
aaa
repnz
pop
aaa
mov
lods
add
adc
mov
xchg
push
outsl
push
and
sbb
pop
imul
lret
sbb
cmp
loope
call
sbb
dec
pop
jae
imul
movb
jno
and
xchg
out
pop
ret
xchg
std
mov
pop
test
pop
je
or
out
inc
push
sub
lds
cmpsl
call
dec
cmp
adc
stc
negl
je
jne
dec
push
test
dec
aad
or
sbb
lea
fisubs
lret
xchg
int
testl
pop
daa
lret
aad
mov
mov
mov
aad
in
dec
dec
cmpb
xor
jge
roll
cli
dec
push
cmp
add
mov
stc
cmpsl
sbb
sbb
repz
mov
fsubrp
imul
push
ficompl
neg
inc
inc
aaa
mov
and
mull
in
xchg
dec
das
push
xchg
mov
xchg
pop
inc
xor
scas
in
insl
mov
daa
push
outsb
test
xchg
cld
mov
ret
rcll
addr16
fwait
pushf
stc
in
mov
jo
and
cmp
int3
inc
and
out
fists
dec
and
aas
xor
sbb
or
xchg
or
or
and
out
mov
aaa
inc
test
mov
mov
test
shlb
mov
adc
rcll
cmp
imul
inc
pop
add
push
scas
loope
push
movsl
aas
jns
jecxz
int
and
out
call
aad
adcl
ficoms
stos
adc
push
push
in
je
shl
lcall
adc
add
xchg
aas
out
js
and
jbe
and
xchg
out
adc
jmp
mov
jns
data16
xchg
leave
sbb
call
sbb
dec
push
test
mov
adc
adc
mov
cmpl
mov
ljmp
mov
mov
lods
mov
push
pop
xchg
ljmp
dec
dec
in
dec
lods
sbb
push
sbb
xchg
popa
or
out
mov
and
sbb
fsubr
test
pop
sti
lods
outsb
jl
shll
shrl
xor
dec
cmc
push
ror
push
sbb
ljmp
pop
mov
and
lret
test
jbe
fists
xor
data16
lret
lcall
mov
test
mov
adc
mov
inc
stos
push
jecxz
daa
mov
jae
andl
or
nop
rcrb
push
scas
cltd
sbb
add
ds
fcoml
out
scas
loop
bound
cs
and
test
adc
cld
dec
popa
push
movsl
aaa
imul
loopne
ret
scas
fs
stos
jae
fucompp
xchg
mov
les
dec
ret
out
loope
addr16
sub
sbb
xor
jb
xor
imul
jns
sub
cli
sar
data16
ss
dec
sbb
je
dec
sahf
dec
xor
mov
mov
les
adc
xor
stos
push
pop
push
dec
imul
fnsave
pusha
fsubs
adc
lods
jecxz
mov
cmc
hlt
cmpsl
fcmovb
xchg
fucomp
pop
mov
xchg
mov
mov
sti
aam
ljmp
mov
stos
dec
test
lret
mov
dec
call
jno
enter
fdivs
push
mov
sbbb
iret
xor
lods
xchg
lds
jmp
cmp
ja
leave
insb
outsl
mov
data16
lretw
rorl
add
mov
cmpsb
ss
je
sbb
mov
or
dec
outsb
mov
lret
scas
rcrb
test
or
sbb
or
mov
in
adc
jmp
adc
pop
inc
loope
jne
ljmp
les
outsl
lods
cmp
out
pop
jle
adc
jbe
outsl
sub
out
cmp
and
imul
lods
xchg
jo
xchg
sahf
or
push
data16
cmovge
push
fildll
jmp
sar
jp
repnz
mov
hlt
jo
jne
mov
movl
addr16
fsts
scas
hlt
lock
sbb
pop
fwait
fwait
cltd
jae
shl
and
add
cmp
shr
jmp
cwtl
fadds
mov
mov
nop
decb
cmp
dec
xor
push
cmc
dec
push
mov
inc
xchg
inc
fs
in
fistps
ss
jnp
jb
xor
mov
or
arpl
inc
xor
sub
ds
jbe
rorb
cltd
subl
sub
sbb
fadds
jns
or
push
ss
mov
add
leave
call
sub
fnstcw
jmp
xchg
into
mov
lods
and
cld
ret
add
bound
xor
fs
je
pop
iret
cmp
inc
movsb
mov
push
push
sbbb
and
mov
loope
xchg
insb
add
sub
shlb
test
sub
mov
cmp
add
dec
push
xchg
pop
or
adc
les
fnsave
xor
sahf
aam
xor
stos
inc
pop
jno
cli
pop
pop
ror
and
dec
in
fcoml
popa
aas
shl
stc
cmpsl
mov
fstl
xchg
cmp
stos
push
push
push
add
cmp
push
out
addl
adc
aad
pushl
xchg
out
jge
repz
adc
in
and
inc
loop
and
repz
outsb
and
mov
bound
insl
stc
stos
scas
add
and
mov
nop
pusha
cmpsl
jecxz
ficoml
adc
sbb
scas
jo
outsl
xor
dec
cmc
pop
mov
ret
or
outsb
outsb
bound
push
sub
mov
push
ljmp
mov
dec
jno
sbb
fs
xor
adc
daa
jbe
iret
out
out
push
mov
lods
jp
lods
es
bswap
aad
add
push
jecxz
ret
es
sbb
outsb
sahf
cmp
jns
int
pushf
jb
hlt
mov
mov
pop
aas
outsl
scas
mov
popf
mov
pop
bound
mov
mov
je
lods
xchg
mov
fnstenv
ds
int3
cli
leave
sub
mov
and
hlt
test
test
push
pop
pop
std
roll
jno
xor
adc
push
sub
sarb
aad
push
popf
ds
mov
mov
test
sub
mov
mov
repnz
insl
ss
pushf
int
rolb
in
loop
cltd
cli
jg
scas
xchg
add
test
stos
pop
fisubl
mov
cld
mov
lcall
lret
iret
inc
pop
jae
out
sub
inc
jb
lock
inc
xchg
mov
jns
pusha
lahf
aam
mov
mov
push
push
mov
jae
or
sbb
pop
jge
pusha
lds
sbb
jl
add
shl
cmc
push
xor
xchg
jp
fs
add
outsb
adc
jne
pusha
fcmovnb
mov
pop
iret
adc
jb
sbb
popa
clc
push
int
lcall
ret
faddl
dec
cld
push
test
out
outsb
fists
jmp
jle
push
enter
aad
mov
fs
xlat
fsub
pop
push
iret
aas
fidivrs
lret
ljmp
dec
sbb
enter
jbe
mov
add
jmp
enter
mov
insl
scas
xchg
jl
imul
xor
pop
adc
mov
scas
mov
aaa
repnz
adc
pop
int3
xor
xchg
pop
aam
pop
add
sbb
fisubs
mov
jb
mov
sub
lahf
in
xor
fs
movsl
or
fld
or
dec
jae
repz
inc
or
sbb
out
scas
gs
adc
aam
mov
mov
and
test
or
jb
mov
jo
pop
dec
push
xor
push
ss
stos
cli
hlt
cs
leave
into
cmpsl
push
dec
sbb
ret
mov
gs
sbb
es
sbb
lret
ds
fnstsw
cmp
and
mov
adc
jmp
push
mov
xor
mov
arpl
loopne
jns
lea
cmp
daa
mov
jmp
push
repnz
mov
add
cmpsb
int
aaa
sub
fdivs
add
mov
imulb
in
call
jno
std
aaa
mov
rol
enter
xor
daa
and
push
push
popf
ret
pop
mov
pusha
gs
loopne
daa
inc
sub
das
jno
sub
mov
into
fucom
pusha
addr16
and
adc
or
or
repz
in
or
sub
mov
mov
adc
loope
xchg
push
jnp
and
ret
notl
push
mov
pop
aaa
ljmp
cmp
bound
ljmp
lahf
popf
pop
lock
xor
inc
outsb
jge
mov
cmp
mov
movb
inc
aas
lahf
cmp
iret
jbe
movsb
mov
add
jns
testl
push
mov
and
mov
jp
mov
rorb
mov
push
stc
inc
cltd
cmp
adc
mov
push
gs
push
lret
mov
ss
xchg
insb
jmp
jmp
mov
xchg
cmp
mov
sbb
xor
jge
lret
push
mov
pop
fwait
shlb
xor
lahf
imull
jp
mov
popf
fstpl
dec
sbb
xchg
rol
daa
test
push
cld
jg
repz
xor
mov
adc
ja
pop
cmpsl
jmp
push
test
mov
sub
xor
adc
stos
aad
mov
int
rclb
sbb
sbb
mov
add
shlb
fldcw
dec
in
fists
fs
inc
pop
cmp
pop
add
out
adc
sbb
pop
addr16
addr16
xchg
dec
ret
pop
lods
jb
mov
adc
imul
add
cmp
xchg
outsl
cmpsb
sbb
dec
xchg
xchg
lcall
pop
lcall
mov
xchg
js
jo
mov
loop
jns
aam
out
in
push
pop
jmp
jecxz
lea
mov
pop
mov
xor
mov
mov
and
cs
xor
pushf
lods
ficoml
xchg
cld
lods
imul
cmp
dec
int3
dec
std
sbb
test
loopne
fwait
leave
cmpsl
ljmp
jbe
test
xlat
mov
sbb
mov
xchg
cmc
in
sahf
adc
or
in
pushf
sub
jg
outsb
aas
xlat
xor
jp
adcb
or
cmp
jbe
aam
cmpsb
fstl
insl
pop
movsl
mov
enter
cmp
adc
mov
lcall
cmp
pop
add
jl
arpl
lock
hlt
mov
cmp
int
or
gs
rorb
xchg
add
jnp
adc
rcrb
test
fstps
dec
stc
data16
mov
xchg
sbb
sub
inc
bound
xor
add
cmp
je
mov
movzwl
mov
mov
mov
jmp
mov
xor
lea
jmp
mov
xor
add
jmp
mov
add
mov
mov
test
je
movl
push
xor
pop
add
push
pop
push
dec
pop
dec
xchg
sub
xchg
dec
mov
imul
sub
mov
mov
xor
add
jmp
mov
mov
mov
mov
xor
add
xor
div
mov
xor
lea
mov
mov
mov
mov
mov
xor
lea
mov
mov
mov
xor
add
imul
mov
mov
xor
lea
cmp
jne
mov
xor
add
mov
mov
add
xchg
xor
push
mov
pop
mov
add
lea
add
add
push
inc
pop
dec
xchg
dec
xchg
dec
xchg
dec
push
mov
pop
dec
call
cmp
je
xchg
push
pop
push
pop
inc
xchg
sub
xchg
dec
dec
mov
imul
add
xchg
push
xor
mov
dec
inc
add
dec
xor
add
pop
mov
pop
pop
pop
leave
ret
push
mov
sub
push
xor
push
mov
mov
mov
mov
movl
cmpl
je
cmpl
jne
push
call
xor
add
dec
mov
jmp
andl
xor
xor
inc
mov
cmpl
jne
push
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
push
call
jmp
andl
movl
movl
mov
andl
mov
inc
mov
cmpl
jne
pushl
pushl
push
push
pushl
pushl
pushl
call
cmpl
jb
xor
mov
mov
and
sub
sub
mov
xorl
mov
andl
jmp
xor
xor
inc
mov
cmpl
jae
cmpl
jne
push
pushl
push
pushl
push
call
jmp
movl
cmpl
je
cmpl
jne
push
call
xor
xor
dec
mov
jmp
sub
mov
sbb
sub
andl
jmp
xor
or
inc
mov
cmpl
jae
cmpl
jne
push
pushl
push
pushl
call
cmpl
jne
mov
inc
mov
jmp
mov
orl
mov
mov
sub
mov
orl
mov
mov
sub
mov
orl
mov
mov
sub
mov
mov
mov
mov
xor
mov
add
or
mov
mov
mov
sub
mov
orl
mov
xor
add
push
mov
xor
add
push
mov
xor
add
push
lea
push
pushl
pushl
call
test
je
lea
push
mov
xor
add
push
mov
add
push
mov
mov
pushl
call
mov
lea
mov
mov
test
je
lea
mov
mov
mov
mov
mov
sub
mov
mov
xor
mov
sub
add
mov
mov
mov
mov
pushl
movb
mov
pushl
pushl
pushl
pushl
pushl
pushl
pushl
mov
call
mov
mov
add
pop
pop
leave
ret
push
mov
sub
adc
movl
add
lea
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
call
cmpl
jne
mov
inc
mov
jmp
xorl
mov
dec
push
andl
mov
inc
mov
cmpl
jne
pushl
push
pushl
push
push
pushl
call
cmpl
jne
xor
xor
inc
mov
cmpl
jb
mov
adc
mov
lea
sbb
mov
xor
or
mov
adc
mov
addl
mov
mov
xor
sbbl
add
xorl
mov
orl
mov
mov
mov
sbbl
add
dec
push
movl
cmpl
je
cmpl
jne
call
cmpl
jne
xor
or
dec
mov
mov
dec
mov
jmp
mov
or
mov
adc
mov
mov
xor
mov
subl
add
movl
cmp
je
mov
jmp
mov
movl
cmp
jne
push
movl
jmp
mov
mov
mov
movl
cmp
movl
jne
add
mov
xor
add
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
push
push
call
jmp
not
mov
sub
mov
mov
or
mov
xor
add
adcl
imul
andl
mov
inc
mov
cmpl
jne
push
push
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
andl
xor
add
cmp
movl
mov
movl
push
movl
je
sub
mov
add
dec
mov
mov
adcl
xor
addl
add
subl
imul
movl
mov
jmp
mov
xor
mov
mov
xor
mov
mov
sub
add
mov
mov
add
mov
mov
mov
xor
xor
lea
mov
xor
add
imul
mov
xor
sub
mov
add
cmp
mov
mov
jg
xor
mov
sub
add
jmp
xor
add
add
mov
mov
mov
xor
add
jmp
xchg
rolb
jae
fs
movsb
push
dec
jns
jp
in
jp
jg
stos
add
mov
xchg
inc
shlb
and
test
mov
mov
cmp
test
fnsetpm(287
sbb
adc
jmp
sbb
pop
ds
sub
and
outsl
icebp
jbe
pusha
mov
jnp
mov
stos
jnp
inc
and
pop
sub
js
mov
outsb
imul
dec
jo
push
xchg
or
jbe
int3
roll
mov
ja
imul
mov
adc
xchg
mov
jae
loope
outsb
jp
movsl
pop
sahf
ljmp
notl
dec
imul
lcall
int3
jmp
mov
popf
cld
cmp
mov
pop
fldt
cmpsb
pop
ss
pusha
fisubrl
das
scas
stos
fs
mov
rorl
scas
adc
push
inc
hlt
jne
rol
and
lds
push
imul
mov
imul
mov
dec
pusha
std
sub
or
adc
jns
inc
push
xchg
sbb
loope
pop
sbb
mov
and
jle
adc
imul
mov
stos
shlb
test
cmpsl
movsl
js
mov
popf
test
out
addr16
out
in
mov
repz
cmp
fstl
inc
cmpl
mov
sbb
arpl
stc
hlt
rcrl
ja
and
out
xor
out
adc
mov
jnp
xor
inc
mov
push
je
sbb
aam
sbb
test
jge
jno
mov
push
das
je
inc
stos
stos
cs
dec
pop
cmp
inc
push
adc
jle
adc
out
cmpsb
outsl
push
and
push
pop
out
in
mov
cmp
xchg
cmp
xchg
mov
push
sub
gs
dec
xchg
sub
xchg
xor
in
push
in
jnp
xlat
add
jns
shlb
lds
or
fidivs
push
cmp
leave
int
out
shll
jne
cld
ds
scas
clc
cmpsb
dec
sub
lea
push
in
mov
xchg
push
pop
cmp
out
repz
scas
loope
mov
aas
pop
sbb
push
pop
pop
loopne
mov
jl
adc
inc
fmuls
clc
cmovno
adc
cld
jae
mov
cmp
cld
push
mov
adc
scas
add
jge
fnsave
in
lods
imul
mov
pop
push
push
jo
sub
fwait
or
loop
nop
sarl
adc
loop
add
ja
es
leave
jb
xchg
aad
push
jecxz
shrl
jo
dec
cmpsb
push
pop
imul
mov
adc
shll
adc
shll
or
push
and
inc
xor
addr16
adc
testb
pusha
jmp
rcrb
xchg
mov
push
bound
xlat
pcmpeqd
mov
fcomps
push
jae
push
mov
xchg
adc
add
rclb
adc
sbbb
mov
mov
inc
push
popl
inc
in
int
xchg
fdivrp
and
stos
insb
or
aad
repnz
jmp
cltd
and
adc
xor
adcl
inc
xor
jns
dec
iret
hlt
pop
call
xchg
add
cmp
shl
in
stos
pop
ss
filds
ja
insb
insl
mov
fdivs
inc
fdivrs
jmp
fmuls
nop
mov
mov
jno
test
je
pop
inc
movsb
je
or
dec
push
add
mov
dec
dec
or
pop
add
enter
mov
xchg
repnz
js
ror
push
xchg
pop
nop
je
lock
sub
idiv
shll
into
cmpsb
lock
test
mov
outsb
sysenter
lods
enter
rorl
jl
adc
xor
cmpsb
mov
mov
and
add
in
daa
imul
dec
push
lods
pop
push
inc
xor
dec
sahf
push
xor
je
mov
inc
rcll
mov
mov
sub
loopne
mov
jnp
push
mov
xor
push
hlt
push
inc
xchg
loope
fistpl
loope
leave
jmp
mov
ja
dec
stc
popf
lret
xor
idiv
dec
cmpsb
std
sbb
jnp
jae
scas
xchg
repnz
clc
mov
or
add
fwait
mov
mov
test
push
jle
std
push
mov
push
mov
dec
lods
mov
call
pop
xchg
clc
inc
imul
mov
cmpb
loop
jne
adc
jp
pop
call
rorb
aad
shll
insl
lcall
cmp
std
mov
rcrb
roll
negl
mov
outsb
or
outsb
loope
aaa
loop
neg
cmp
xor
mov
xor
jnp
movsl
push
push
fprem1
inc
lods
and
ljmp
data16
test
pop
or
js
movsb
add
mov
mov
fcmovu
xchg
stos
cwtl
adc
insl
jmp
clc
lock
cmp
or
pop
sbb
jle
push
insl
clc
and
movsl
loopne
sti
int
fnsave
nop
fwait
push
jnp
fistpl
out
je
add
aaa
std
lret
sub
fwait
push
stc
mov
push
cltd
push
mov
es
pop
xor
push
pop
scas
push
and
loopne
scas
adc
pushf
push
out
nop
fxch
push
inc
ds
rcl
dec
pushf
dec
outsl
or
jp
mov
mov
insl
sete
fnstcw
sub
mov
lods
xlat
mov
popf
les
js
xchg
int3
and
add
hlt
movsb
and
loop
push
mov
sbbb
lcall
in
xor
test
icebp
decb
lret
mov
mov
std
jbe
test
lds
mov
loopne
push
push
jp
aas
outsb
popf
adc
cmp
sbbb
vmovq
xor
mov
sbb
scas
sbbl
test
or
cmp
popa
nop
icebp
xlat
mov
pop
insl
dec
cmp
popf
movsl
pop
jg
cltd
mov
bound
sub
jge
cmpsb
and
sub
add
int3
pop
cmp
xchg
inc
mov
inc
xor
or
dec
ret
mov
jmp
das
cmp
fcomps
mov
inc
dec
mov
stos
push
ret
mov
add
jl
fwait
push
add
adc
repz
xor
int3
or
inc
sub
jae
cmp
lds
inc
push
xchg
not
jp
sar
and
pop
in
rcl
sahf
mov
cwtl
pop
inc
push
outsb
nop
and
mov
subb
mov
xchg
mov
in
ret
xor
mov
jl
dec
in
cld
adc
xchg
hlt
pop
adc
xor
jl
xor
mov
cmpsl
xor
jmp
xor
shlb
repnz
jb
fmull
xchg
adc
push
mov
iret
or
daa
sbb
xor
push
clc
xor
jns
xchg
and
int3
xchg
imul
xchg
pop
insl
mov
sub
mov
and
repnz
lea
div
stos
pop
fstl
jg
add
mov
ja
adc
add
jae
icebp
dec
mov
inc
jb
cld
inc
in
dec
inc
add
mov
and
pop
mov
mov
jg
pop
dec
aaa
add
mov
adc
lcall
jb
and
in
out
or
ljmp
shr
or
popa
jmp
lret
nop
sbb
in
insb
adc
movsb
mov
mov
fisttpll
lea
movsb
ja
pop
fs
pop
cmp
test
sbb
std
mov
dec
stc
in
in
sbbb
or
idivb
push
repnz
xlat
jp
int
mov
mov
pusha
stc
sarb
mov
popa
sarl
ret
cmpl
scas
js
lods
dec
dec
in
mov
inc
popf
mov
pop
dec
lock
mov
loop
imulb
xchg
add
clc
and
loopne
ror
mov
aaa
nop
movsl
lds
loopne
dec
cmp
cmp
test
dec
mov
cmp
clc
int
ret
adc
call
inc
xchg
inc
lcall
inc
mov
bnd
mov
lock
or
test
push
adc
xor
les
iret
mov
push
cmp
jo
ret
ss
push
sub
jl
jge
ja
xchg
mov
pop
mov
orb
mov
stos
bound
push
push
push
daa
mov
and
mov
adc
ret
xchg
mov
bnd
pop
mov
xor
and
push
call
push
xor
sbb
fisubrs
stos
jge
jmp
stos
or
bound
mov
xchg
inc
fsubr
movsb
cmp
sub
and
add
gs
outsb
mov
aam
sahf
pop
dec
sahf
test
arpl
jg
hlt
or
stos
std
lret
pop
popa
enter
pop
mov
stos
adc
cmpb
mov
add
sbb
pop
mov
mov
rol
rol
pop
adc
and
pop
jg
jno
movsl
mov
movsb
jnp
pop
mov
subl
ljmp
pusha
movsl
pusha
dec
xor
out
cmpsl
jns
jle,pt
stc
pop
adcl
cmpb
mov
inc
in
data16
clc
shrl
stc
lret
mov
in
out
pop
mov
xor
jb
aaa
fsubrl
insl
lock
enter
jb,pt
adc
and
adc
mov
aad
test
dec
sahf
leave
mull
push
cmp
xor
insl
mov
mulb
lock
xor
sub
mov
jae
mov
add
sub
mov
in
mov
les
jmp
mov
push
sub
popa
xlat
arpl
mov
out
jp
jecxz
decl
jl
pushf
fisttpl
or
sub
or
xchg
loope
je
cwtl
push
rcr
inc
jno
xlat
cmpsb
pop
sbb
mov
lahf
mov
shll
mov
and
adc
jge
shl
stos
adc
and
rorl
inc
shl
sbb
jge
push
lds
das
jl
sahf
cltd
mov
int3
jnp
xor
shl
pop
dec
popf
cli
push
nop
inc
sbb
data16
ret
xchg
repz
cmp
imul
xchg
xchg
and
movsb
push
mov
nop
dec
mov
dec
mov
xlat
fistpl
sub
mov
mov
mov
jmp
loope
int3
dec
push
or
sub
dec
mov
add
test
lods
dec
pop
mov
jae
lcall
stos
add
mov
adc
leave
mov
pop
mov
dec
into
or
adc
loop
jecxz
popa
into
mov
or
pop
mov
in
pop
cmp
xlat
bound
lea
loop
and
bound
clc
pop
aaa
cmp
adc
test
jle
cmpsl
xchg
lret
push
xchg
insl
sahf
fdivl
fimuls
mov
push
outsb
scas
add
lds
inc
aam
insb
cs
jge
aaa
sbb
cltd
mov
jnp
cmpsb
push
clc
xor
jecxz
imul
adc
inc
cwtl
std
fnstenv
popf
cmp
cmp
mov
sahf
cmp
clc
fcompl
adc
repz
dec
adc
lret
test
cli
enter
ss
jo
mov
cmp
pop
jge
cmpsb
lods
imul
adc
scas
xor
jae
or
add
in
jle
sar
mov
pop
in
or
sbb
cmp
mov
and
popf
lods
xor
aad
std
mov
pop
dec
addr16
dec
and
mov
cld
pushf
mov
enter
pmulhw
clc
jae
lods
nop
push
call
fbstp
inc
and
mov
xchg
sub
das
xorb
dec
scas
xchg
pop
adc
aad
icebp
adc
call
mov
outsb
incl
mov
dec
lahf
mov
aad
aad
adc
pusha
mov
pop
mov
daa
ret
add
cs
das
add
pop
std
pop
pop
lcall
mov
aas
rolb
sbb
sub
repz
icebp
and
cmpsl
adc
cmp
add
pusha
jnp
je
jecxz
pop
arpl
xor
or
sub
add
sti
lret
pop
sub
repz
test
popf
out
mov
pop
pop
mov
inc
cmp
sbb
jo
lods
sbb
or
mov
and
ljmp
add
mov
mov
movsl
outsl
rol
repnz
mov
adc
pop
divps
pop
leave
sbb
insb
inc
and
pop
add
cmp
mov
into
fistl
aad
mov
flds
or
and
sbb
or
jp
jnp,pn
into
leave
hlt
rcrl
adc
mov
aas
cltd
mov
cltd
dec
dec
adc
sarb
dec
sbb
mov
push
je
sti
insl
sahf
insl
mov
mov
xchg
shlb
sub
pop
dec
jo
add
inc
popf
aam
adc
outsl
xchg
stos
cmp
mov
dec
xor
and
cld
pop
or
cmpsl
pop
add
push
jle
sub
adc
mov
inc
mov
das
pop
sub
stos
pop
pop
lea
add
push
push
dec
push
dec
lock
adc
out
cwtl
xor
lea
jb
es
bound
sub
fistpl
xchg
or
pushaw
inc
mov
cmp
ss
popa
psubusb
mov
push
fimuls
pop
gs
dec
and
jmp
push
push
add
cltd
push
call
out
dec
jae
jno
fldenv
jb
loopne
shrb
or
mov
push
adc
int
pop
inc
iret
daa
insb
dec
cmp
cmp
pop
push
mov
aaa
stos
add
ds
rolb
loopne
int
mov
das
dec
cmp
mov
mov
in
ljmp
xchg
dec
mov
js
imulb
sub
sbb
sub
loope
stos
lods
fldlg2
push
xor
dec
rclb
sti
pop
sbb
push
sbbb
enter
out
pop
push
fs
mov
cmpsb
sti
and
dec
xchg
icebp
icebp
mov
repnz
mov
inc
imul
pop
mov
jno
ljmp
mov
jo
sub
sbb
dec
cmp
icebp
mov
jge
mov
xor
jo
cmpl
ljmp
adc
or
aam
adc
shrb
mov
ja
je
jmp
pop
cld
xchg
in
lods
enter
sbbb
xor
push
fstpt
movsl
repnz
int
imul
or
cli
popf
pop
filds
xchg
inc
add
cld
push
jmp
cld
fcomi
push
pop
lea
dec
ja
and
scas
push
or
nop
loop
lds
test
mov
addr16
orb
inc
je
pop
jno
loope
insl
and
jl
insb
xor
lods
dec
fiaddl
int3
inc
sahf
xchg
sbb
insl
decl
dec
jmp
sbb
pop
in
sbb
data16
pushf
stc
cmp
or
daa
fildll
in
inc
loopne
jnp
adc
loop
fsubs
lods
fsubl
jae,pt
or
pop
push
leave
and
push
xchg
mov
push
cmpsb
inc
enter
out
out
dec
out
cwtl
movsl
jbe
mov
and
or
sub
cmp
pusha
jge
fisttpl
add
movsb
jno
add
movsl
pop
loope
in
aad
push
sbb
push
lock
int3
push
push
test
out
aas
adc
negb
pusha
add
add
add
mov
stc
aaa
in
loopne
mov
or
fstpt
loop
and
jnp
icebp
push
xlat
xchg
je
loop
cld
scas
cmp
loop
cmc
outsl
fsubp
mov
jbe
mov
adc
jecxz
jg
inc
mov
mov
lret
push
int
xor
and
cli
mov
or
cld
mov
enter
sub
inc
sbb
pop
loopne
daa
loop
das
add
out
jb
xchg
pushf
sbb
mov
pop
or
mov
add
fidivs
push
cmc
dec
aaa
mov
jmp
or
ret
imul
ret
or
test
ljmp
addr16
ljmp
clc
roll
mov
mov
in
and
pop
idivl
jle
shrb
inc
orb
mov
mov
ss
cwtl
mov
ja
pop
xor
in
ss
mov
mov
jns
stc
or
scas
and
lcall
jecxz
insl
data16
add
jge
sub
call
or
and
mov
jno
andl
pop
ss
fnstcw
lret
xchg
cmp
stos
mov
imul
aad
cmpsl
mov
sub
in
inc
out
ror
gs
xchg
mov
aad
lret
icebp
mov
push
mov
imull
mov
xchg
lret
adc
cmp
lds
decl
cli
pop
adc
lret
mov
ja
testl
mov
sbb
and
jl
stc
and
cmp
sahf
int
js
add
add
lods
in
push
cltd
jbe
xorb
mov
aad
add
xor
and
dec
mov
jge
dec
dec
mov
lahf
ljmp
iret
sbb
fisubs
int3
lods
adc
adc
ds
or
stos
adc
jecxz
push
clc
loope
push
or
mov
daa
cmp
and
incb
xchg
jo
cmp
test
aam
push
mov
xchg
xchg
fimull
je
jle
cli
lcall
lea
push
jmp
jae
repnz
lcall
inc
loope
ret
adc
add
setno
insb
push
aad
je
lds
pop
mov
js
lret
jne
xchg
sbb
in
xchg
fdivl
jg
xchg
push
xchg
hlt
in
leave
movsb
out
push
mov
popa
adc
adc
popf
gs
fldenv
lock
mov
cmp
jg
jl
fistpll
cmpsb
pop
sbb
daa
push
inc
loope
roll
adc
imul
sbb
sahf
sub
sub
xor
out
push
aaa
ret
xchg
fsubl
sub
nopl
repz
cmp
dec
jo
jg
xchg
pop
stos
xchg
fwait
arpl
xchg
lcall
rorl
lock
inc
std
or
lret
sub
imul
int
jmp
out
mov
pusha
cmp
mov
lahf
and
insl
insb
rclb
push
jle
fst
test
mov
test
fnstsw
push
iret
inc
jp
jl
test
cli
sbb
inc
inc
daa
add
lret
in
lahf
add
imul
in
xor
push
shll
in
pusha
mov
push
enter
ljmp
mov
xlat
jl
push
shlb
in
xor
sub
or
jb
insl
fsubs
fistpll
dec
ss
jnp
mov
into
leave
cmp
mov
std
pushf
jmp
adc
push
mov
repnz
aaa
notl
das
sbb
mov
push
adc
xor
fdivrs
mov
daa
sub
xchg
adc
cmp
insl
and
les
xchg
icebp
inc
sarl
xor
ret
inc
rclb
sbb
mov
les
xchg
sarb
sbb
mov
fs
sub
je
mov
xchg
mov
popa
ret
repz
ret
push
inc
dec
xchg
jne
mov
cmc
icebp
jbe
cld
in
aad
outsb
std
xchg
adc
cmp
aas
je
or
popf
lock
cmovne
rcll
mov
xor
cmpsb
dec
loopne
imul
daa
xchg
sbb
xor
xor
loopne
popf
mov
sub
mov
pop
imul
mov
jmp
jl
push
push
jge
mov
mov
ss
inc
fstps
subb
sbb
enter
xchg
sbb
frstor
cmp
sarl
mov
xchg
cmp
fs
or
mov
push
imul
lods
lock
icebp
sub
mov
int3
out
ljmp
movsl
sahf
and
jp
push
paddd
lds
cltd
bound
fadds
or
fbstp
shll
add
sti
sbb
testl
jne
mov
mov
jl
jmp
int
adc
pop
vpandn
mov
lods
clc
dec
xchg
push
add
xchg
pop
or
cmp
pop
std
test
stos
arpl
lahf
inc
jb
aam
rorb
push
or
das
mov
jae
mov
jmp
into
pushf
dec
push
cmp
mov
sub
pushf
dec
push
inc
push
fimull
cmp
and
push
mov
stc
sahf
xor
imul
inc
subb
out
into
fldenv
sub
popf
mov
push
jmp
xchg
insb
xor
mov
ror
in
imul
inc
cwtl
mov
add
xor
in
dec
xchg
lcall
jg
mov
add
and
push
repnz
lock
scas
aam
data16
or
out
jge
pushf
cmp
mov
mov
or
mov
inc
sahf
mov
xchg
xor
movb
inc
in
pop
popa
xchg
jne
mov
cld
scas
ret
dec
mov
sbb
mov
mov
repz
cmpsl
jmp
mov
jb
push
imul
cmp
dec
addl
push
iret
sarl
sub
mov
add
loop
fwait
mov
in
adc
sbb
xchg
mov
cmp
scas
jecxz
es
cmp
adc
sub
daa
or
dec
lcall
mov
push
popa
popf
lret
mov
rclb
pop
xor
imul
fldenv
mov
pop
fnsave
repz
loop
movsb
stc
dec
shll
test
mov
fs
cld
jle
lret
out
sub
mov
iret
mov
jne
push
andb
xchg
out
popf
jecxz
int
bound
pop
pop
ret
les
in
test
lret
adc
mov
in
add
adc
adc
dec
cmp
pop
daa
adc
icebp
ss
cmp
xor
adcb
add
jmp
mov
or
xchg
mov
lea
dec
xor
repnz
xchg
and
aam
and
sarb
mov
cmp
out
cmp
leave
adc
cmp
lahf
mov
scas
or
jl
out
jno
fisttpl
push
inc
cmpsb
adc
sub
jne
push
mov
mov
ret
repz
xchg
addr16
test
push
and
xchg
pop
out
scas
mov
shrd
mov
mov
fsts
cld
pop
rorl
mov
imul
mov
outsl
cltd
xchg
js
lret
cltd
mov
add
xor
sbb
mov
incb
scas
rcrl
leave
sub
mov
jno
loope
sub
out
sub
and
sahf
das
outsb
mov
inc
clc
shll
pop
push
outsl
mov
mov
inc
jae
inc
cld
pop
sbb
adc
mov
ss
mov
mov
mov
in
cwtl
cltd
mov
adc
add
fdivr
je
les
clc
dec
inc
loopne
and
dec
imull
mov
fwait
cmpl
addb
sbb
pop
pop
aaa
inc
xor
lock
add
mov
cwtl
pop
mov
fstl
insl
arpl
stos
or
mov
cli
dec
jae
mull
out
pop
loopne
ss
or
xor
jmp
jbe
fbld
add
rcr
mov
push
lcall
jnp
aad
inc
sub
mov
push
xchg
ljmp
repnz
int
mov
js
add
adc
ret
add
pushf
sub
clc
mov
push
aas
or
cld
jbe
ja
mov
add
fisttpll
hlt
ljmp
aas
aam
sarl
cmpsl
rcr
adc
or
mov
push
add
loopne
pop
shlb
dec
xor
or
movsb
sub
adc
repnz
inc
sahf
push
pop
xchg
scas
sbb
push
ja
push
rcrl
push
sub
xchg
pop
out
lea
hlt
cmc
ret
loope
aaa
mov
dec
inc
popf
in
jae
repnz
pop
shll
ss
sbb
outsb
inc
push
pop
ds
and
and
sub
adc
negl
por
in
das
jge
loope
imul
test
bound
iret
dec
xchg
xacquire
pop
sbb
mov
and
xchg
outsb
sub
adcb
adc
popa
xchg
dec
stos
xchg
xor
ficompl
addr16
ljmp
cli
into
cmpsb
sbb
sub
inc
test
das
add
loopne
push
dec
adc
pushf
sub
imul
xchg
repnz
xor
push
jge
mov
xorb
shl
pop
mov
cmp
jo
outsb
lcall
loop
xchg
out
xor
add
sbb
pop
dec
inc
jp
dec
jmp
sbb
jmp
movsl
dec
lods
xor
jnp
pushf
jo
daa
inc
jge
and
inc
ficomps
mov
xor
jne
loopne
pop
mov
sbb
push
mov
lds
mov
repz
jno
aaa
loopne
mov
jle
mov
mov
adc
add
out
sbb
push
test
fimull
or
xor
xchg
subb
out
cli
sbb
cli
imul
or
push
shlb
popf
ljmp
inc
stos
incl
push
sbb
aas
loopne
rcll
jmp
pop
pop
es
iret
out
cmp
and
roll
mov
jp
sub
inc
ret
decl
enter
jb
add
sbb
cli
sbb
dec
mov
push
jl
loopne
add
push
push
mov
adcb
cs
and
fisubl
fs
sbb
xchg
dec
adc
xor
adc
lods
pusha
mov
adc
cltd
push
cmc
jg
jb
cmc
push
mov
aas
lahf
mov
arpl
adc
mov
orb
stc
rcrl
push
pop
sbbl
sbb
fs
push
xchg
sti
lcall
sub
aam
aaa
test
inc
test
out
loopne
movsb
lret
fcmovne
cmp
push
sub
rolb
and
add
popa
aas
mov
jl
jg
jnp
subb
adcl
cltd
ss
loop
xor
xchg
mov
mov
jne
adc
shlb
and
stos
add
mov
pusha
and
rcrb
mov
jmp
jnp
fcomi
cmc
push
nop
jmp
lea
add
ucomiss
mov
jecxz
push
sub
ret
push
pop
shl
cltd
lahf
enter
or
ljmp
xorb
lret
daa
aas
sahf
sub
sbb
xchg
push
sub
push
mov
mov
add
sbb
xor
je
cmp
lock
negb
rolb
movsb
loopne
adc
xchg
sbb
inc
fs
mov
pop
xchg
js
fcomps
les
dec
lds
sbb
out
sbb
in
lret
jns
jg
nop
mov
repz
adc
xor
jb
jne
lret
rolb
dec
dec
clc
loopne
sti
mov
shll
jecxz
inc
sub
pushf
xchg
cmp
push
or
js
stos
sub
ljmp
xchg
and
pop
pusha
outsb
addr16
mov
addr16
sar
jmp
xor
jb
shr
fimull
push
sbbb
jmp
or
pop
idivb
cli
lret
sub
jecxz
leave
mov
test
in
out
fists
stos
test
stos
sti
adc
iret
loope
out
mov
mov
xchg
xchg
stos
dec
gs
sub
mov
pushl
sbb
cli
push
loope
and
xor
call
and
nop
cmp
fistps
or
push
mov
lret
bound
flds
out
out
mov
lret
addr16
cwtl
xchg
adc
outsb
je
cwtl
call
xor
jae
adc
jo
scas
pop
lcall
mov
cmp
das
sti
fwait
ret
rcl
inc
lcall
push
or
sti
dec
xor
stc
es
fincstp
sub
and
sarl
stc
scas
xchg
push
in
enter
add
rcr
xor
sbb
sti
sbb
insb
ret
cmpsb
push
mov
por
sbb
cmp
pop
test
addl
cltd
in
jg
adc
cs
stc
xor
dec
pushf
in
push
cmp
test
xlat
pop
repnz
jbe
cmc
mov
jecxz
jb
loopne
jnp,pt
inc
lret
cli
adc
aam
push
and
cmpsb
arpl
adc
fisubl
imul
enter
pop
pop
out
test
lock
test
sbb
out
lret
dec
adc
xor
xrstor
inc
or
xchg
pop
and
int3
fidivs
mov
add
push
aaa
jp
in
gs
not
daa
jmp
cwtl
cmp
lret
and
and
movsb
inc
js
arpl
and
pushf
or
cmp
cmp
test
dec
jns
add
pop
and
add
repnz
pop
popf
jno
sbbl
add
mov
mov
jmp
and
insl
icebp
fbstp
cli
mov
bsf
rcl
rcrl
adc
enter
lcall
fnstcw
or
rcll
and
push
xchg
inc
movsb
adc
sbb
or
mov
js
loope
test
mov
dec
sub
orb
or
add
insb
pop
outsl
test
adc
dec
fcomps
push
bnd
popf
cltd
or
mov
cmp
add
xchg
iret
xchg
fisubrs
or
dec
sub
rorb
cltd
cmpsl
or
out
fsts
fsubr
cmp
jecxz
fimull
addb
xchg
imul
aaa
xor
jge
mov
movsl
dec
add
js
jo
iret
mov
push
lret
cld
xchg
mov
or
pusha
or
int
add
or
or
mov
addr16
repz
shlb
aad
insl
test
mov
pop
xor
mov
fdivrl
push
inc
out
mov
pop
sub
test
mov
shlb
sbb
addl
xor
and
movsbw
mov
sub
mov
xor
mov
cmp
jne
movsbw
mov
sub
mov
xor
mov
cmp
je
mov
xor
mov
sub
add
jmp
mov
mov
mov
lea
mov
mov
mov
xor
add
mov
mov
mov
xor
add
pop
cmp
jne
mov
xor
mov
add
imul
mov
pushl
jmp
mov
add
mov
mov
mov
movsbw
mov
sub
mov
xor
mov
cmp
jne
mov
mov
mov
jmp
mov
cmp
jne
push
pushl
pushl
pushl
pushl
call
pop
pop
leave
ret
push
mov
sub
xor
push
mov
mov
sub
add
mov
addl
mov
movl
push
or
mov
mov
xor
mov
mov
mov
incl
xor
movzwl
adc
mov
xor
mov
andl
add
add
imul
movzwl
mov
cmp
movl
je
mov
sub
mov
xor
add
adc
mov
xor
addl
lea
xorl
mov
or
mov
mov
movl
cmpl
je
cmpl
jne
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
xor
xor
add
add
imul
mov
cmp
je
jmp
xor
aaa
fwait
mov
cmp
enter
jp
pop
jp
adc
ljmp
mov
mov
xor
icebp
sbbl
aam
nop
push
repz
test
orb
clc
lahf
mov
das
xchg
std
xor
cmpsb
add
push
ret
in
push
sbb
pop
sarl
test
clc
pop
lret
aad
inc
in
int
and
js
fsubl
aad
sbb
dec
int
out
cmp
outsl
aad
int3
jle
rcrb
xchg
mov
sbb
mov
push
sbb
push
lcall
nop
and
xor
cmp
adc
in
comiss
repnz
mov
sbb
fildll
mov
mov
sbb
repz
inc
xorb
pushf
popa
ret
movb
or
pop
test
cltd
js
cmpsb
iret
lods
aaa
cmp
pop
movsl
in
sahf
adc
shl
xor
in
mov
leave
scas
test
test
or
out
bound
mov
cli
jb
in
es
push
push
mov
int3
nop
leave
inc
push
ljmp
scas
in
bound
sub
cmpsl
neg
add
and
mov
jae
testb
push
jmp
clc
daa
xchg
je
sub
ja
dec
cmp
push
add
and
fs
cmp
cmp
mov
aas
addr16
cmp
push
les
push
sub
inc
add
push
push
outsl
or
inc
jge
mov
sub
fwait
cmp
into
jg
add
push
xor
insl
sub
int
xchg
clc
cltd
mov
jp
push
jo
mov
int
xor
loope
adc
fidivs
mov
rcrl
iret
push
pop
jle
and
push
lcall
icebp
sub
cmp
loop
or
loopne
fnsetpm(287
jmp
mov
push
lods
dec
xchg
xor
rep
adc
hlt
mov
mov
mov
push
pop
push
and
push
xchg
xchg
sub
orl
sub
and
stos
fsts
sub
add
adc
cmc
js
popf
xchg
bound
sub
pusha
hlt
addr16
dec
pop
js
loopne
mov
xor
sbb
cmp
pusha
inc
dec
ficoms
or
sbb
nop
in
dec
lds
add
cltd
fists
pop
xor
jb
adc
rcr
adc
fldcw
out
test
xchg
adc
cmpsl
adc
mov
aam
aas
mov
push
pop
movl
add
das
or
push
mov
sub
dec
insl
fstpl
or
inc
mov
cmp
sbb
xchg
mov
mov
sahf
inc
push
add
leave
add
inc
mov
dec
jge
mov
lock
ja
inc
adc
jle
sbb
int3
push
out
and
mov
aam
adc
add
sbb
leave
jmp
scas
dec
lds
and
dec
mov
cmp
xchg
stos
and
fisttpl
lods
lds
sub
pop
testl
mov
inc
sub
xor
lds
ret
jnp
add
pop
fdivrs
xor
pop
imul
xchg
mov
div
mov
and
aad
loop
dec
jmp
flds
push
jg
sbb
xor
subl
ret
dec
mov
adc
out
rcl
stos
mov
xor
add
cli
and
cmp
xor
mov
sub
adc
xchg
nop
xor
insb
sbb
ret
repnz
inc
xor
cld
shl
sti
jo
fbstp
and
dec
dec
push
cli
adc
cmp
fcomps
xor
cli
dec
mov
dec
dec
repz
aaa
xor
insb
jge
shlb
mov
and
pop
add
int
sbb
ds
inc
push
subb
xchg
adc
cmc
jo
insb
mov
leave
adc
and
inc
add
add
das
pop
pmulhw
add
jnp
shrl
addr16
test
cwtl
addr16
jecxz
push
mov
mov
andl
cld
xorl
out
cmp
mov
test
cmp
je
mov
aas
pop
jne
dec
fcoms
shrd
push
sub
nop
push
out
dec
push
div
mov
out
pop
xor
leave
movsl
adc
fs
daa
pop
adc
std
pop
xchg
or
mov
jno
adc
mov
imul
js
dec
lods
xchg
jo
addr16
mov
mov
cwtl
movb
jae
mov
mov
xor
add
adc
inc
inc
push
je
ss
repz
div
stc
into
dec
xchg
pop
adc
out
jae
mov
jl
xor
scas
adc
cmpsb
js
or
cmp
dec
mov
push
mov
test
cld
add
jne
test
pop
xchg
sub
push
adc
mov
mov
add
mov
aaa
divb
lret
jg
lea
popa
mov
dec
xchg
mov
sti
xor
dec
xchg
sbbl
ret
mov
pop
shlb
shl
sti
mov
fld
icebp
sbb
dec
pop
mov
test
xchg
sub
lods
cmp
scas
xchg
pop
add
cmp
jno
pop
mov
pop
ja
loopne
sbb
add
xchg
mov
adc
mov
fsts
ja
loop
mov
cmp
push
outsb
xor
loop
in
test
xlat
aam
inc
xor
mov
rcl
ljmp
dec
test
cmp
sub
xchg
mov
arpl
add
or
sub
xchg
sub
pop
inc
xor
add
loop
inc
sahf
and
xchg
pop
adcb
jbe
fstpl
mov
xchg
adcb
xchg
fcom
adc
mov
xchg
add
dec
xchg
inc
push
les
popf
pop
gs
orb
push
jl
mov
arpl
and
xchg
ss
ret
xchg
mov
adc
xchg
jge
stos
popa
xor
mov
test
or
aad
fisttpl
loope
addb
xlat
xchg
add
dec
xor
mov
aas
cmpsb
pop
mov
enter
hlt
repz
dec
jge
inc
cwtl
mov
shlb
push
mov
mov
push
stos
jb
outsl
or
xor
jge
int
jnp
stos
inc
scas
iret
cmpsb
or
jecxz
ss
mov
aam
push
or
mov
and
lret
sbb
imul
jo
inc
ret
adc
nop
xor
mov
roll
pop
sti
outsl
inc
ds
push
dec
push
or
orl
and
mov
xor
inc
lret
sub
loopne
add
mov
test
mov
mov
inc
jmp
mov
sub
mov
mov
xchg
movsb
jl
sub
inc
ss
mov
sub
fdivs
std
inc
int3
aas
xchg
push
dec
adcl
add
rcl
push
dec
push
ret
cmp
aas
loop
sbb
mov
or
sub
sub
andb
clc
and
imul
inc
fldl
jo
mov
pop
push
xlat
es
divb
pop
jns
iret
sbb
dec
iret
cmpsl
inc
pop
clc
xchg
jmp
adc
int
lock
jp
lret
aam
mov
int3
adc
pop
inc
push
push
mov
sub
fists
sbb
sbb
inc
test
push
sbb
inc
enter
mov
push
mov
out
clc
outsl
cmp
xlat
xchg
xchg
in
shl
mull
rep
inc
fwait
push
sti
insl
sub
mov
mov
bound
arpl
mov
flds
imul
cmpsl
jnp
fidivrs
sti
xorb
push
cltd
stos
inc
aam
xchg
movl
pslld
popa
mov
mov
adc
aaa
outsl
pop
mov
push
mov
int
fcoml
push
out
loope
loope
sbb
xchg
movsb
pop
sbb
cmp
mov
push
jnp
sti
aad
mov
and
cmpsb
fisubs
pusha
push
scas
je
inc
cltd
loope
fnstcw
add
fcmovbe
sbb
cmpb
add
fs
mov
outsl
iret
push
rolb
and
idivl
mov
adc
cmp
dec
das
mov
cmpsl
mov
pop
ljmp
mov
xchg
das
xor
stc
gs
xchg
in
mov
or
inc
sarl
stc
add
mov
jbe
je
lock
leave
cmpsb
popa
out
push
ja
adc
pop
into
mov
inc
pop
cmp
push
daa
call
dec
pop
int
xor
jl
sub
outsl
fiadds
adc
icebp
gs
and
jle
hlt
mov
mov
in
imul
jae
push
lcall
bound
inc
inc
loope
std
lea
shll
mov
add
lock
mov
adc
sub
mov
push
xor
arpl
mull
mov
xor
insb
out
cmpsl
or
fnsave
pop
or
sahf
mov
stos
lcall
push
cld
sbb
mov
xor
adc
jle
aad
je
movsb
or
in
mov
fldenv
xchg
sar
int
lock
cld
adc
and
jge
loopne
mov
fbstp
mov
xchg
loope
pop
in
xor
loop
nop
ret
inc
xchg
xor
jge
cmpsl
shrl
sbb
iret
fsubs
outsl
or
fbstp
cld
sbb
dec
xchg
outsb
pop
jle
pop
xlat
mov
sbb
insb
cmp
sub
f2xm1
sbb
mov
movsb
mov
add
aam
jg
loope
pop
and
scas
cmp
call
lret
jns
xchg
sarl
imul
sbb
sbbb
and
in
aad
xor
inc
pop
dec
mov
pop
push
sub
dec
hlt
mov
sub
sbb
stos
jbe
xor
inc
movsb
pop
sahf
fldt
aad
lcall
mov
int
fisttps
xor
push
pusha
push
mov
lock
int
orb
dec
stc
lods
fs
hlt
jmp
fwait
movsl
xlat
xchg
or
out
pop
push
lds
cmp
and
sub
mov
in
outsl
shr
loope
and
dec
fdivl
or
push
jmp
jae
fidivs
loopne
and
jbe
js
add
lcall
pop
jl
mov
pop
adc
adc
sarb
mov
pop
andb
rorb
xadd
jns
sahf
movsb
pop
xchg
jae
inc
sti
icebp
jle
add
sarb
in
insl
sub
mov
in
push
fmull
push
subb
rol
pop
ljmp
lds
dec
push
cmpsl
push
mov
sbb
xchg
inc
sbb
iret
push
add
fwait
inc
pop
mov
jge
adc
in
xor
mulb
cmp
push
push
mov
sar
ret
pop
pop
add
add
arpl
adc
lret
and
sbbl
mov
cmp
outsb
je
pop
mov
lea
adc
jns
dec
movsl
sbbb
push
inc
adc
mov
add
test
insb
cmpsb
cli
lahf
or
xor
pop
and
sbb
jg
add
mov
mov
jbe
xchg
pop
cmpsb
movsl
out
out
pop
ret
xchg
clc
shr
loopne
das
inc
or
xchg
arpl
lock
shlb
cmpsl
aas
subb
xor
orb
mov
andb
gs
or
pop
mov
cmpl
pop
pop
push
pop
repnz
xlat
popf
shll
sub
push
and
sbb
mov
lahf
add
and
mov
xor
xchg
and
je
nop
fs
ret
icebp
data16
mov
dec
mov
xor
loop
push
sub
xchg
cli
jns
mov
out
mov
ficoms
xchg
sti
push
or
pop
dec
mov
mov
mov
push
jb
or
test
cmp
or
mov
lds
mov
mov
push
ret
adc
add
popa
daa
xor
and
cld
push
add
cmp
and
push
mov
jp
std
mov
sbb
push
inc
or
mov
mov
mov
jnp
and
pop
adc
jge
xlat
call
push
jmp
not
cs
cmp
xchg
mov
sub
pop
cwtl
outsb
jae
lret
sti
fcomps
dec
pop
mov
jo
int
aad
imul
lret
and
aad
xor
std
ljmp
jns
test
insb
adc
push
and
cltd
and
push
hlt
icebp
les
into
mov
pop
xor
inc
je
xor
int
ret
scas
test
repz
scas
and
mov
sub
arpl
iret
cmp
xchg
loop
or
fisubl
xchg
pop
mov
push
xorb
iret
loope
arpl
xor
aaa
orl
xchg
insl
fisubs
ret
or
jbe
jmp
mov
xor
std
jns
jnp
std
mov
test
xor
jg
lods
out
push
pop
out
mov
imul
dec
cmpsb
jecxz
pop
arpl
mov
out
mov
insl
or
mov
fsubp
popa
mov
in
rol
cmp
bound
jl
loopne
aam
loop
sbb
pushf
stos
sub
call
shlb
pop
jne
iret
arpl
jl
push
rclb
push
mov
or
mov
mov
cmc
shlb
push
jl
into
in
dec
arpl
mov
mov
inc
insb
pop
adc
push
loope
and
gs
inc
mov
outsb
stos
mov
xor
imulb
sub
inc
js
call
in
push
push
adc
jbe
out
mov
and
pop
xchg
xchg
cs
jmp
dec
call
mov
popf
sub
push
jae
fnstenv
xchg
or
into
mov
or
mov
xor
xchg
push
and
cmp
femms
shrl
sbb
les
int3
mov
iret
hlt
mov
clc
mov
ja
lock
jnp
nop
cmp
push
push
xor
mov
inc
addl
sbb
dec
test
outsl
sbb
shll
fidivl
scas
outsb
jg
or
dec
cmp
lea
cmp
dec
loop
dec
outsb
push
popa
jle
or
icebp
insb
jae
jne
es
push
adc
add
or
idiv
sbb
xor
push
dec
mov
mov
mov
xchg
push
fnstsw
sub
repz
mov
mov
xchg
or
aad
pusha
jbe
stos
int3
orb
repnz
mov
dec
sbb
sbb
mov
leave
popl
sub
cmpsl
push
pop
xchg
or
fimull
sbb
rorb
shll
sub
mov
scas
jae
ja
sub
push
mov
loope
xor
fldenv
stos
scas
lahf
or
es
push
aam
cmp
sahf
dec
and
fcomps
mov
repz
xchg
xchg
cmc
pop
fs
add
pushf
movsb
out
adc
pushl
sub
dec
sub
xor
lret
push
sbb
adc
adc
sbb
les
mov
push
xor
cmp
adc
aad
rcll
mov
xor
ret
cmp
adc
inc
lock
inc
xchg
out
xchg
add
aas
test
outsb
adc
hlt
xor
mov
lods
cmc
inc
sub
dec
pop
sub
mov
loopne
push
cmp
pop
mov
mull
js
and
cltd
pusha
mov
gs
sahf
stc
mov
jae
mov
aad
push
daa
mov
cmc
movsb
mov
and
sbb
in
loopne
scas
lock
pop
jne
dec
inc
leave
fstpt
loop
mov
mov
push
lea
scas
jno
jl
pop
fcmovnb
lds
xchg
pop
cmp
rcl
dec
imul
pop
mov
pop
clc
or
dec
push
inc
sti
jno
inc
adc
mov
fsubrs
pop
xchg
int3
mov
mov
jl
jno
lret
cmp
mov
add
xor
mov
test
in
mov
jb
pusha
js
push
push
call
cmp
mov
push
std
adc
push
inc
push
cmc
xchg
adc
js
test
inc
adc
xor
dec
decb
inc
or
push
lea
sahf
popl
es
add
in
xchg
pop
xchg
subb
test
sarb
cmp
dec
push
enter
jecxz
xchg
add
pushf
lret
cli
aad
xchg
lcall
nop
cwtl
and
les
std
sbb
jne
pop
movl
lcall
sti
dec
lcall
fistl
sbb
pop
mov
inc
push
pusha
sub
pop
jb
icebp
jp
je
cli
xchg
orb
cmpsb
mov
sub
incb
push
mov
jmp
push
mov
gs
leave
xchg
cmp
mov
or
adc
cmp
loopne
jnp
loope
rolb
cmpsb
clc
sub
ret
push
lar
push
sub
in
shlb
scas
cmp
xchg
adc
clc
xchg
push
into
and
mov
movsb
xor
mov
sbb
lods
xor
stc
jp
xor
mov
sbb
mov
and
js
ficoms
stos
lock
xchg
das
movsb
enter
fldl
mov
mov
cmp
mov
lods
jb
sti
sbb
or
sbb
sub
inc
hlt
insl
cmpsb
mov
mov
inc
iret
sub
leave
xorb
out
xchg
aas
in
cmp
shlb
lods
test
popf
inc
imul
sar
sub
dec
outsl
pop
sub
int
lahf
push
das
fs
call
out
call
shl
dec
jge
sti
int3
loopne
mov
lret
xor
cs
jg
push
or
andb
out
out
xor
les
mov
iret
jbe
xchg
xchg
inc
mov
ret
dec
xchg
arpl
add
gs
nop
jmp
ret
enter
xor
stos
out
xchg
xchg
shll
call
insl
stc
insl
pop
inc
adc
movsl
je
sbb
test
test
xor
dec
stos
and
xor
or
push
cmp
xor
int3
sbb
icebp
aaa
ja
pop
dec
lea
cmp
or
into
jp
int3
push
shl
aas
and
xor
pop
cmpl
je
fsubrl
inc
jecxz
pop
jg
sbb
mov
mov
adc
das
xor
and
sbb
inc
lahf
loope
sti
sbb
sbbl
es
inc
test
call
cs
testb
cltd
adc
mov
push
xchg
jmp
out
arpl
or
pop
push
or
mov
xchg
dec
movsl
add
je
int3
addb
mov
fnstsw
loop
xchg
shlb
sub
xchg
jae
ljmp
and
js
mov
mov
rcl
into
mul
leave
ret
je
bound
data16
adc
add
mov
push
ja
scas
ljmp
pop
call
imul
cmp
or
mov
icebp
loopne
inc
lcall
nop
sbb
arpl
add
and
push
popf
mov
pusha
pushf
loop
sub
jg
xor
mov
rol
icebp
daa
aas
or
lea
sub
scas
sti
push
dec
and
jns
add
in
mov
cld
jno
movsb
test
or
idivl
sub
stc
dec
sbb
je
xchg
in
jno
mull
xor
mov
imul
aad
imul
pop
and
sbb
repz
inc
negl
mov
andl
mov
movsl
scas
pushf
xchg
cltd
push
mov
addb
cs
cmpsb
data16
mov
sub
mov
fld
insb
mov
or
mov
ret
call
dec
inc
push
mov
pop
jns
adc
sub
adc
jns
sbb
xchg
jnp
jecxz
dec
lcall
mov
cltd
sbb
ja
iret
xor
jns
out
insb
jmp
cmp
add
mov
xor
divb
push
jne
xchg
xchg
push
lahf
fs
lock
push
xchg
test
mov
sti
xor
fsubl
mov
jmp
pop
test
and
fcompl
jecxz
mov
xchg
cmp
and
call
rcrl
inc
mov
pushf
mov
jo
lret
lret
inc
sbb
outsl
int
jle
sub
lods
mov
jno
mov
jg
outsb
ds
dec
lds
add
insb
mov
sbb
mov
mov
sub
mov
mov
xor
in
pop
sbb
mov
jne
jecxz
mov
mov
adc
stc
pushf
inc
add
or
orb
out
ret
leave
daa
dec
rcll
out
addl
jnp
adc
or
stos
and
lret
mov
test
lcall
push
lcall
in
js
inc
or
add
test
hlt
sbb
dec
push
adc
dec
dec
in
push
je
inc
add
dec
or
gs
dec
mov
clc
gs
jmp
ljmp
popf
les
out
pop
mov
push
or
inc
outsl
mov
push
cs
lods
out
in
add
pop
push
mov
clc
arpl
push
sti
int3
pop
dec
mov
fucomi
mov
inc
lods
fadd
idivb
mov
out
mov
push
inc
pop
add
cmp
gs
pop
std
add
outsb
ss
xchg
bound
movsl
sahf
stos
inc
shrb
pop
arpl
push
or
xchg
push
pop
mov
sbb
mov
stc
fstps
push
adc
xchg
mov
cmc
push
mov
in
cmp
cmp
outsl
sbbb
add
bound
sub
jecxz
mov
sub
inc
stos
clc
lcall
mov
pop
pop
jbe
insb
sbb
notl
test
shrb
shll
cmp
adc
lea
cmp
mov
push
fnstsw
cmp
adc
shlb
pusha
push
add
mov
lock
stos
adc
out
push
jl
call
mov
stos
leave
lret
xchg
pop
out
cmp
adc
lds
xchg
cmp
xor
dec
cld
dec
and
pop
cs
xchg
adc
into
jl
std
aaa
fsubrs
mov
insl
or
push
mov
mov
xor
subl
nop
pop
xchg
cwtl
shl
mov
lahf
jnp
in
jecxz
push
stc
nop
bound
mov
cmp
ja
clc
cmpl
sub
cs
sbb
mov
fadd
jne
sub
push
mov
icebp
addb
dec
cmp
subl
lods
ret
fidivrs
clc
push
push
movsb
outsl
add
push
ret
arpl
repnz
pop
push
mov
sub
rolb
pop
xchg
movsl
fistl
pop
dec
push
loop
outsb
mov
outsl
dec
jle
in
sbb
enter
xor
mov
out
xchg
or
or
stos
xor
add
and
cmp
jae
popf
test
movsl
sbbb
fdivp
add
sub
movsl
ds
jmp
xorb
stos
xorb
neg
jnp
inc
lcall
mov
mov
xorl
xor
dec
cwtl
jmp
xchg
jns
mov
adc
stos
adc
pusha
pop
cli
jl
sbb
hlt
andb
mov
mov
clc
int
aaa
cmp
sbb
into
call
daa
cmp
push
xchg
cld
lods
icebp
shlb
fdivr
cmp
fs
es
adc
cmp
ja
out
cmpsb
add
adc
repz
dec
pop
dec
arpl
mov
and
loopne
cltd
loopne
sub
mov
sbb
and
push
lea
push
dec
xchg
leave
cmpsb
and
cmp
xchg
push
sub
mov
push
hlt
stos
and
cmpl
mov
mov
fimull
cmp
lods
test
inc
inc
out
jae
aaa
int
shll
mov
sbbb
inc
push
mov
or
test
push
andl
pop
call
adc
pop
stc
cmpsl
dec
out
test
cmp
xchg
push
xrelease
xchg
fcmovbe
enter
mov
sub
push
sbbb
scas
aad
jns
cs
lea
sbb
sub
insb
cld
lahf
leave
bound
test
pop
xchg
add
lret
imul
push
adc
hlt
xchg
inc
rolb
pop
in
xchg
scas
das
xchg
mov
out
sub
lods
iret
test
mov
or
mov
xor
fists
xchg
jns
lock
cld
inc
xor
cmp
pop
xchg
insl
push
sbb
pop
scas
mov
int
rcrb
sbb
imul
daa
movsl
jmp
adc
dec
adc
xchg
jne
push
insb
jae
inc
sbb
sub
cwtl
outsb
mov
lods
popw
sub
ret
mov
cli
les
push
mov
out
sti
push
push
shrb
js
sahf
movsl
or
test
pop
data16
in
mov
fadds
or
popa
ret
sbb
jmp
xchg
xor
stos
lcall
lret
pop
sub
push
in
neg
or
inc
mov
insb
xor
inc
loop
push
fdiv
pop
mov
popa
loop
cs
pop
call
loopne
ds
ss
js
mov
xchg
std
sbb
aas
loope
mov
sub
aad
pop
arpl
inc
mov
jne
and
in
je
jnp
push
je
jl
cmpsl
push
or
jl
inc
repnz
popa
cltd
sub
pop
gs
cmpb
pop
popf
or
mov
out
orb
add
mov
sub
sub
scas
mov
mov
nop
gs
test
sysenter
shll
mov
and
jmp
fiadds
les
lds
push
xchg
iret
fidivs
xlat
mov
mov
call
idivl
and
xchg
mov
leave
cltd
mov
lahf
mov
fidivs
sub
sti
add
dec
dec
inc
mov
loop
cmpb
imul
frstpm(287
mov
xor
roll
cmp
mov
jb
and
ljmp
hlt
aas
fdivr
jno
insb
pop
lret
fwait
jp
xchg
mov
mov
or
add
pushf
sar
mov
test
ret
sbb
mov
pop
in
stos
add
jg
cmp
fs
divb
or
xchg
hlt
push
lds
xchg
pop
mov
mov
mov
mov
shlb
enter
inc
xchg
xchg
enter
aam
cmp
lods
push
and
lret
frstor
in
lods
int3
movsl
mov
sbb
and
push
push
push
cmpsb
jecxz
popa
sub
mov
xor
adc
mov
or
pop
xchg
mov
daa
roll
insb
sbb
push
in
xor
jecxz
xchg
and
das
scas
cmp
mov
xchg
jge
add
jb
xor
cli
mov
sahf
popa
mov
pop
sahf
jb
sbb
dec
xlat
mov
lods
push
xor
rcrb
mov
or
xor
mov
push
add
cmpsb
jle
in
cmp
lcall
out
cltd
mov
lret
aas
je
sub
and
or
imulb
cltd
jecxz
repz
jnp
xchg
mov
xchg
and
cmp
stos
sub
dec
stos
es
dec
cmpsb
imul
faddp
enter
sub
sbb
adc
push
xchg
pusha
mov
mov
imul
jbe
push
and
add
cltd
int
pop
popa
aad
inc
dec
jle
scas
scas
hlt
mov
js
jle
or
scas
pop
xor
movsl
pop
movsb
std
push
lods
das
jno
cmp
in
sub
mov
inc
into
int
lock
lret
cmp
rolb
in
add
xor
enter
dec
dec
leave
or
sub
int3
mov
in
adc
xor
ret
dec
xchg
test
das
pusha
push
mov
cli
cmp
and
rol
leave
mov
pop
adcb
push
dec
scas
fiadds
jns
insl
sbb
mov
add
xor
mov
inc
mov
push
cwtl
test
mov
shl
xchg
std
mov
xchg
adc
push
pop
lods
cwtl
mov
push
gs
mov
sub
or
test
pop
rcrl
std
std
xor
mov
iret
cmp
cmp
rcll
jns
xchg
mov
add
push
lds
sbb
fidivrs
xor
and
mov
sbb
or
pusha
rsqrtps
dec
pop
inc
push
inc
dec
xlat
jno
adc
jb
xor
add
adc
cmovns
inc
lods
xor
imul
jg
lret
mov
ret
fs
push
and
sub
mov
subb
andl
or
push
fildll
fistl
cld
dec
cmp
addr16
push
js
adc
jae
imul
stos
sbb
imul
scas
ljmp
jge
aas
scas
xor
mov
mov
jmp
out
pop
repnz
fmuls
sar
nop
inc
add
nop
inc
clc
or
sub
sahf
mov
addb
jo
push
mov
cmpsl
jno
ds
int3
adc
push
dec
xchg
xor
sub
fbld
jae
mov
outsl
lods
fcoms
push
addr16
push
decl
cmpl
lods
push
sub
jns
fsubrs
mov
sarb
mov
negb
inc
or
cmpsl
test
xor
cmpsb
xor
lea
cld
xor
mov
add
imul
add
mov
mov
jmp
mov
mov
xor
xor
add
add
imul
pop
pop
leave
ret
push
mov
push
movl
xorl
mov
mov
adcl
mov
xor
sbbl
add
orl
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
jmp
andl
mov
xor
push
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
pop
leave
ret
push
mov
sub
add
mov
movzbl
adc
mov
adcl
xor
mov
orl
add
xorl
movzwl
mov
movb
adc
lea
mov
sub
mov
orl
mov
andl
xor
orl
sub
orl
mov
andl
movl
xor
push
movl
cmpl
je
cmpl
jne
push
push
push
call
cmpl
jne
xor
or
dec
mov
mov
dec
mov
jmp
movl
mov
addl
push
add
mov
movl
cmpl
je
cmpl
jne
pushl
push
push
call
xor
xor
dec
mov
jmp
andl
xor
add
inc
mov
cmpl
jne
push
push
push
pushl
pushl
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
xor
mov
push
add
movl
jmp
mov
movl
mov
movl
inc
movl
cmp
jb
mov
addl
xor
adcl
add
movl
jmp
mov
movzwl
sub
mov
mov
decl
xor
mov
andl
add
andl
movzwl
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
push
push
push
call
cmpl
jne
mov
inc
mov
jmp
add
mov
movzwl
orl
xor
add
mov
mov
mov
inc
movl
mov
movl
cmp
movl
jne
sub
mov
adc
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
cmpl
jne
xor
xor
inc
mov
jmp
xor
andl
mov
inc
mov
cmpl
jne
push
pushl
push
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
add
movl
mov
mov
adc
xor
sbb
add
or
mov
movl
movl
movl
cmpl
je
cmpl
jne
call
xor
xor
dec
mov
jmp
movl
mov
or
mov
mov
xor
add
add
movl
mov
mov
mov
je
mov
mov
jmp
mov
pshufw
push
das
adc
jp
mov
and
ss
dec
jecxz
cli
clc
outsb
sbb
xor
dec
faddl
repnz
xor
aaa
xor
mov
xor
push
gs
imul
xlat
sub
mulb
push
or
aaa
mov
out
pop
setl
push
pop
fidivl
xor
or
sbb
lret
add
fwait
lahf
dec
push
nop
popf
in
xchg
fimuls
dec
enter
lods
mov
out
cmp
sub
mov
cmpsl
or
sbbb
push
jne
mov
adc
arpl
or
sbb
pop
and
push
cmp
les
cmp
enter
push
pop
cmpsb
xchg
jecxz
cmp
xchg
dec
test
int3
ja
mov
dec
dec
jo
inc
jae
xor
nop
call
cmp
pop
jl
addr16
orl
call
add
daa
in
push
pop
fwait
inc
sti
jbe
mov
mov
mov
inc
cli
mov
mov
shll
xor
into
out
xchg
xchg
and
daa
les
notl
pop
cmp
test
jne
int3
add
xor
ret
mov
push
bound
pop
roll
movsb
mov
nop
fsub
push
sbb
int3
xor
aad
imul
cmp
cwtl
mov
cmpsl
add
inc
lcall
jae
in
inc
stos
cs
imul
lcall
jae
movsl
aas
mov
scas
and
incl
mov
mov
ds
dec
out
leave
sub
dec
frstor
xchg
push
lret
out
dec
or
mov
pop
mov
jne
add
leave
inc
fwait
loopne
rcrb
cltd
cmpsb
pushaw
cs
jae
ss
movsl
aas
fists
jg
cmp
jl
mov
pusha
mov
inc
pusha
sbb
jmp
pop
call
sbb
cs
sbb
cmp
adc
mov
mov
mov
shll
xlat
aam
sbb
in
xor
mov
mov
cld
mov
adc
popf
imull
push
adc
cmp
into
add
xor
iret
or
push
cmp
cmp
jne
mov
cwtl
ss
mov
jg
and
call
nop
push
nop
into
leave
xor
rcl
mov
sti
inc
sub
inc
mov
idivl
cld
pusha
mov
jae
mov
jp
pop
mov
mov
cmp
es
mov
push
and
popf
fidivs
fisubrl
in
dec
push
arpl
je
ffreep
push
lahf
adc
adc
or
or
adcl
xchg
je
xchg
inc
test
test
fwait
mov
fidivl
dec
add
xchg
cmpb
sub
xchg
insl
ret
xchg
sbb
xor
xchg
scas
adc
test
jbe
push
pop
arpl
jmp
clc
idiv
popf
loopne
ret
mov
push
xchg
sahf
insl
andb
mov
fiaddl
jge
cli
out
jp
cmp
jg
push
sbb
out
enter
aaa
pop
pop
xchg
lea
jno
div
xor
inc
inc
xchg
mov
scas
jle
adc
pop
into
push
jle
cli
add
mov
leave
pop
fs
mov
lods
pop
sahf
pop
cwtl
jno
fisubs
jno
insl
std
out
arpl
les
push
sbb
gs
std
push
into
stos
inc
in
cmp
mov
xchg
xor
movsb
mov
ret
int
adc
pop
imul
inc
xor
leave
and
dec
fs
rcrb
jb
inc
iret
mov
adc
sub
outsl
inc
data16
sub
mov
pop
dec
fldenv
aam
sahf
stos
popa
repz
imull
inc
xor
repz
sar
inc
push
rcrl
sub
outsb
stos
mov
cld
push
push
ja
insb
int3
and
and
daa
lcall
imul
push
adcb
jae
cli
out
xchg
jg
or
inc
lret
xchg
mov
cmc
add
divb
sbb
pop
jge
movsl
sbb
mov
lea
push
cmpsb
adc
stc
mov
add
mov
mov
aas
add
aas
push
rcrl
adc
inc
repz
fisubrl
xchg
mov
gs
xor
mov
inc
in
mov
sub
mov
and
mov
mov
or
dec
sub
push
jmp
mov
xchg
loop
fildll
mov
lods
or
jne
add
mov
adc
cld
into
mov
mov
rcll
notb
push
sahf
negl
or
mov
shrl
fwait
mov
inc
cmp
cs
fidivs
sbb
mov
lea
mov
adc
xlat
gs
or
sti
jmp
movsl
mov
dec
fisttpl
push
or
sbb
lock
imul
cmp
testb
push
inc
sub
xchg
sbb
jge
aaa
mov
pop
push
rcrl
aam
mov
lahf
test
mov
leave
mov
lods
popf
or
rcll
ds
testb
inc
ss
fisubl
test
cmp
inc
bound
and
lret
aad
adc
push
sbb
jecxz
aaa
jl
jmp
add
xor
test
push
sbb
lods
and
popa
mov
mov
adc
or
fdivrl
cmp
ja
dec
aas
cltd
pop
cmc
cmp
and
or
dec
adc
dec
xchg
push
mov
xchg
adc
sbb
adc
xchg
push
sbb
or
adc
icebp
or
cmp
loope
mov
mov
dec
jp
jle
testl
pop
jae
in
jecxz
and
xor
lock
js
cmpsl
sbb
arpl
mov
lea
mov
inc
popa
movsl
dec
or
jecxz
add
mov
stos
fwait
or
push
outsb
cli
repnz
out
dec
das
push
pop
lock
sahf
test
rcr
mov
mov
pop
fists
jecxz
xchg
sub
fwait
mov
adc
fisubrs
push
xorps
xor
dec
pop
jecxz
ljmp
jns
fdivs
xlat
scas
ljmp
mov
jno
jl
jecxz
adc
outsl
iret
xchg
mov
pop
popf
repnz
xchg
shl
addb
shrb
sub
jl
insb
out
push
incl
std
xor
or
scas
aam
cmp
sbb
or
test
jmp
fadd
lcall
iret
xlat
stos
inc
in
cmp
pop
push
scas
inc
jns
push
outsb
mov
sub
fimull
pop
mov
push
std
in
xor
aaa
inc
add
and
pop
je
cld
cmpsl
pop
mov
pusha
or
fiaddl
fwait
fldl
adc
adc
je
cld
outsb
sub
stc
jg
test
sub
je
popf
inc
insb
mov
test
test
mov
sub
cmpl
push
data16
xorl
fcom
int
call
xor
sbb
cmpsb
lods
mov
adc
adc
clc
jbe
cmpsl
push
jne
movsl
mov
xchg
pop
inc
push
cmc
imul
xchg
xlat
push
enter
and
xchg
dec
ret
xor
shll
test
enter
or
mov
inc
cmp
add
cmp
mov
movsl
addr16
adc
fucompp
pop
lds
popf
mov
sbb
ficoml
bound
push
jg
ss
push
mov
xchg
out
fistl
ljmp
mov
test
nop
enter
std
mov
or
addr16
sti
movsb
lds
xchg
or
inc
nop
push
dec
iret
cmp
clc
push
test
mov
call
verw
dec
insl
into
mov
movsl
pop
mov
scas
add
push
jle
jb
dec
adc
lock
jno
sub
jno
icebp
mov
inc
mov
iret
jp
int3
mov
out
in
out
sbb
dec
dec
dec
cmc
test
push
ret
or
pushf
adc
push
outsl
addl
lcall
fadds
imul
inc
fistpll
stc
mov
xchg
fucomp
dec
push
sub
dec
inc
je
andb
pop
dec
mov
mov
scas
test
push
adc
addr16
pop
mov
or
dec
and
xchg
loopne
jge
add
add
xor
sbbl
jge
fnstenv
arpl
in
adc
lahf
cltd
add
cli
es
out
and
cmpsl
jmp
mov
jle
mov
loopne
test
aad
ficoml
repz
xor
mov
arpl
inc
sbb
adc
cmc
push
scas
and
loop
sbb
lods
ds
add
sbb
mov
mov
inc
test
dec
fbstp
xor
mov
and
or
adc
xor
and
addr16
push
dec
sub
cwtl
xchg
inc
pcmpgtw
shrb
cmp
ljmp
mov
inc
and
pop
dec
push
fbld
into
test
xor
jnp
fs
push
lds
test
lds
jecxz
scas
lret
aas
add
clc
movsb
ret
push
and
sbb
jmp
orb
lret
int3
subb
xor
pop
and
push
lods
iret
pop
xchg
inc
inc
xchg
push
xchg
cmpsl
mov
pop
repz
mov
jmp
push
mov
in
adc
dec
cmp
es
push
clc
movsb
mov
xor
out
stos
sar
out
cmp
adc
es
pop
lret
lcall
repz
fucomi
popf
sbb
lret
and
jne
pop
pushf
int
ss
outsl
outsl
movsb
rolb
rep
push
int3
ret
in
xor
jl
inc
js
packssdw
mov
daa
int3
jne
popf
mov
aaa
shl
push
fldt
les
fbstp
xor
cmc
push
mov
mov
jg
js
or
or
mov
mov
mov
dec
cmp
xchg
mov
dec
insb
mov
jo
jns
pop
dec
sbb
es
outsl
add
pop
frstpm(287
inc
jmp
sbb
push
jge
and
dec
pop
aaa
pop
pop
adc
mov
pop
jne
or
pop
hlt
xchg
or
mov
into
cli
mov
outsb
xchg
es
inc
fadds
xor
inc
daa
cwtl
iret
outsl
dec
mov
push
jge
mov
cmc
push
imul
mov
fcoml
gs
adc
test
fimull
out
xchg
out
into
outsb
add
loopne
icebp
xchg
jle
sub
loopne
jbe
or
add
jle
rol
out
bound
inc
fxch
or
cmp
add
mulb
mov
push
mov
push
mov
sbb
jle
les
add
xchg
fdivrp
mov
in
mov
adc
push
mov
mov
insb
sbb
mov
lcall
sarl
adc
push
dec
into
dec
scas
lock
add
test
rcrb
js
push
and
fbstp
add
cmpsl
into
dec
dec
pop
std
inc
cmpb
inc
pop
loop
xlat
in
push
sahf
and
push
sbb
iret
mov
loop
add
lods
call
sahf
xchg
movsl
xchg
jge
hlt
adc
mov
add
cmpsb
jl,pn
dec
ja
push
and
fucomip
cmpsb
hlt
cmp
pop
and
out
lock
lods
dec
jbe
ja
push
pop
sub
int3
out
ret
dec
add
mov
pop
inc
add
mov
ss
mov
lret
rorl
call
add
loope
in
rol
mov
xchg
dec
lahf
sbb
push
add
inc
loope
aad
jge
adc
fdivl
adc
push
sti
push
xchg
sarb
pop
pop
push
scas
js
mov
and
sti
sbb
push
ret
jmp
mov
lret
jg
subl
fwait
pushf
pop
mov
xor
mov
or
and
sbb
je
std
mov
sub
mov
insl
cmp
ffree
mov
cmp
into
push
xchg
and
jo
cwtl
gs
pop
adc
sub
xor
xchg
mov
adc
inc
popl
call
and
mov
call
in
jge
lds
cmpsb
mov
aaa
cmc
sub
scas
pop
jge
in
icebp
mov
cmp
pushf
and
jns
cmpsb
out
bound
jbe
or
popf
add
pop
ss
pop
dec
aas
mov
xchg
or
popa
jge
nop
aas
xchg
mov
jmp
xchg
mov
cltd
mov
xchg
dec
push
and
mov
sub
shll
pop
xchg
orb
mov
lret
fdivp
repnz
mov
pmullw
xor
mov
loopne
push
das
fs
jl
adc
cltd
cmp
outsb
pop
shl
sbb
stos
cmp
gs
and
into
mov
out
daa
sti
out
call
pop
or
and
jns
mov
inc
dec
xchg
incb
push
sarb
and
sub
clc
or
ret
mov
imulb
and
jne
repnz
mov
ret
mov
cmpsl
mov
push
imul
cmp
and
jo
aas
aad
pop
cld
sti
pop
aas
mov
sbb
sti
fadd
cs
sub
decb
hlt
mov
outsl
repnz
testb
out
test
popa
push
js
das
test
testl
xor
ret
jecxz
popf
es
push
call
test
movsl
in
lret
adc
and
lahf
divl
addr16
in
adc
fadd
fdivl
aam
jl
sub
mov
pop
and
push
movsb
dec
cmp
pop
out
push
arpl
push
pop
pushf
fwait
mov
push
js
mov
cwtl
adc
push
push
mov
mulb
cli
scas
addr16
pop
xchg
inc
mov
push
stc
push
jns
fisubl
mov
in
sub
loope
cmp
xchg
mov
mov
mov
xchg
in
ret
adc
into
imul
jl
sub
int3
lock
test
mov
push
iret
push
or
cmp
or
mov
xchg
cmpsb
and
dec
in
jg
dec
jge
xchg
pop
inc
scas
mov
add
lods
loope
cmp
xor
mov
push
loopne
sub
xchg
sbb
inc
mov
lock
addr16
xlat
xor
jl
pop
adc
leave
xor
or
mov
out
leave
inc
pop
mov
clc
stos
jae
mov
lods
mov
dec
mov
and
mov
jl
dec
or
mov
add
adc
jnp
popf
push
outsl
cs
lea
aas
jecxz
mov
cmp
add
cmpb
adc
inc
mov
in
scas
loope
and
popf
push
andb
and
and
call
mov
lcall
repnz
or
movsb
inc
ror
aam
mov
mov
sub
add
inc
loope
pushf
aaa
lahf
jmp
rcll
out
insl
pop
and
and
dec
fst
or
mov
in
jns
insb
push
lea
dec
inc
and
rcrl
sbb
icebp
sub
shrl
push
xlat
test
fiaddl
das
test
data16
jmp
mov
lds
int
test
sub
test
cmp
sbb
mov
in
in
mov
cltd
bound
addr16
adc
stos
fmul
cmp
incb
mov
popf
jecxz
pop
stc
mov
push
lds
lret
or
cmp
or
xchg
cld
outsb
or
pop
push
sahf
imul
mov
or
fbstp
and
and
push
or
or
test
inc
scas
sub
out
lahf
jle
mov
push
mov
nop
mov
push
cmp
mov
xlat
lods
cvtps2pd
repz
data16
shlb
cmpl
dec
or
je
mov
push
rclb
mov
ljmp
and
xor
lods
jne
insl
nop
add
sub
cli
mov
aam
xor
inc
jns
push
sahf
cwtl
xchg
or
lds
test
fadds
jmp
sub
add
sarl
into
cmpsb
sub
cmp
jb
add
mov
out
call
mov
jmp
aam
pop
push
rcrl
popf
pusha
test
lcall
cmpsb
shl
les
sarl
loope
add
adc
jecxz
pop
push
sar
imul
dec
test
lcall
movsl
or
fmuls
call
cmp
aaa
lods
jnp
clc
pop
addr16
mov
mov
pushf
cmp
adc
je
push
iret
loope
cmpsb
shr
jecxz
push
jmp
pop
push
aam
sub
or
lcall
mov
sbb
ds
jl
and
shlb
mov
jns
cmp
jp
mov
mov
movsb
aas
pop
inc
cld
cli
lcall
cmc
mov
or
jmp
int
push
arpl
jno
inc
icebp
addb
leave
push
sub
add
in
repnz
mov
pushf
sbb
in
push
sub
mov
jmp
out
out
loope
pusha
pop
pop
push
mov
pop
popa
aad
movsl
sbb
inc
pop
xchg
rcl
add
sahf
fisttpll
mov
or
inc
lret
jmp
shll
ds
jp
int3
jge
adc
xchg
andl
pop
insl
add
je
fcoml
stos
lcall
scas
loop
mov
and
ret
xchg
xchg
popf
fs
mov
inc
and
aas
pop
or
sub
xchg
sbb
test
mov
stos
push
shlb
nop
push
xor
ja
out
mov
bound
movsl
add
mov
mov
sahf
mov
arpl
xchg
out
loope
mov
mov
pop
imul
int
push
push
mov
xchg
or
mov
xchg
pop
imul
mov
sbb
sarl
fs
loope
je
outsl
bound
pop
sbb
lret
jle
fnstcw
sbb
jecxz
std
ret
push
sahf
add
xchg
xorl
sar
rcrl
inc
or
scas
inc
xchg
pop
dec
daa
mov
je
out
jno
xor
mov
cmp
sbb
pop
je
loope
or
in
cmp
mulb
xchg
mov
cmp
dec
sub
ss
xchg
dec
push
adc
xor
aam
mov
cmpsb
pop
jae
mov
xor
pop
push
jp
mov
push
xor
pushf
xorl
lahf
cwtl
cmp
stos
xor
pop
sbb
xor
das
outsb
push
mov
dec
cmc
sub
mov
dec
mov
loope
clc
or
add
cli
ss
push
xor
inc
outsb
mov
dec
lcall
inc
jle
or
xchg
push
sarb
xchg
inc
cs
inc
into
pop
idivb
sahf
movsb
mov
or
imul
mov
sti
nop
aaa
sbb
int
sbb
mov
add
mov
in
jb
mov
std
aaa
jo
out
sbb
dec
and
sbb
pop
call
dec
ljmp
mov
sbb
mov
cmp
push
pop
stos
scas
add
test
jmp
sub
and
test
leave
dec
call
mov
cmpsl
iret
insb
cli
pop
cld
jl
nop
es
xchg
xchg
pop
test
test
pop
js
cmp
push
inc
jecxz
jo
cmc
jp
dec
mov
into
loop
xchg
scas
mov
ret
pusha
std
adc
jle
dec
loopne
adc
push
add
dec
pop
loop
cmc
jb
xor
and
mov
sub
and
cltd
aam
jo
push
mov
jns
sti
iret
xor
into
pop
cs
notb
cmpsl
and
mov
mulb
sub
add
nop
xor
add
mov
out
and
pushf
inc
out
sub
jl
xchg
inc
in
adcl
pop
sub
sbb
jl
sbb
push
gs
adc
dec
inc
into
or
shll
lock
lods
and
lds
and
arpl
mov
ja
push
mov
les
int
inc
cmp
cwtl
cli
iret
xor
rcll
std
lea
fwait
sbb
adc
fimuls
xor
sub
mov
out
out
pop
in
jl
mov
ret
inc
scas
aad
aas
lods
rorl
in
adc
mov
in
xor
mov
loop
outsb
stos
test
repz
nop
lcall
jge
mov
pop
jb
push
cwtl
fsubrs
test
es
dec
mov
cmp
jns
daa
loopne
or
and
xchg
out
cltd
inc
xchg
mov
sti
cmc
stos
xchg
xchg
andb
mov
xor
cmp
and
jl
or
lea
push
sti
push
xchg
loope
mov
rcr
ficoms
dec
jmp
ss
inc
std
pusha
aad
fldenv
movsl
xchg
mov
mov
std
imul
pop
pop
clc
roll
ja
mov
out
nop
push
or
aaa
jne
or
sbb
icebp
pop
mov
aad
js
cltd
gs
mov
test
xor
mov
aas
inc
mov
mov
aad
clc
aad
mov
cltd
in
neg
jo
inc
repz
arpl
jns,pt
xor
jae
xor
cltd
out
pusha
popa
pop
or
adc
jae
jno
mov
fs
sahf
inc
in
mov
test
mov
sbbl
or
xchg
loope
add
test
mov
mov
pop
sti
js
hlt
add
inc
cld
shlb
data16
test
movsb
jle
jno
fadds
xchg
xchg
xor
movsl
jmp
lods
adc
iret
jl
pop
add
insl
lods
mov
scas
outsb
insb
mov
orl
ret
popa
inc
pushf
aam
jg
cld
lock
xchg
dec
sbb
cmp
jo
pop
subl
fcmovu
sub
dec
pop
xchg
jno
add
pop
mull
inc
stos
movsb
mov
daa
lret
xchg
sbb
jle
xor
insl
sbb
aam
sub
cmp
pusha
addl
aas
pushf
mov
lea
cli
mov
je
push
fdivrp
aas
insl
pop
pop
outsl
or
mov
inc
or
les
and
jbe
sar
adc
adc
mov
or
cltd
mov
pop
or
into
mov
movsl
pop
test
out
test
movsb
jbe
or
mov
lea
les
mov
xor
ljmp
rolb
push
jg
inc
push
cs
push
lea
popf
enter
jle
mov
pop
inc
loop
popa
notl
mov
incl
cmpsb
icebp
lock
call
ds
test
xor
int3
mov
rolb
xorb
aas
nop
lds
out
test
mov
ljmp
mov
sbb
pop
xchg
mov
lds
sbb
sub
jae
xor
shl
or
aad
addr16
push
xchg
mov
sbb
scas
jno
mov
aam
jp
xchg
sahf
popa
sub
test
fistl
cld
cmpsb
dec
mov
pop
fdivl
mov
cmp
movsb
ror
jb
int3
hlt
bound
call
popf
fisubrl
cmc
jns
aad
lods
test
mov
movsl
test
adc
pusha
jb
idivb
aam
push
pop
push
test
shlb
dec
and
jmp
and
and
test
pop
inc
mov
icebp
out
xor
sub
sbb
mov
cmpsb
xchg
mov
test
inc
shll
int3
outsl
inc
pop
pop
out
sbb
cmp
imul
insb
xchg
jo
les
pop
mov
xor
xlat
je
out
fisttps
lock
lock
xchg
pop
outsl
dec
fstl
addl
lock
xchg
lock
xor
xchg
sbb
ljmp
and
or
loopne
adcl
sbb
xor
pop
mov
sbb
clc
jp
add
lahf
inc
ljmp
fstps
or
stos
dec
in
or
and
dec
shl
mov
adc
shl
out
inc
movsb
sarl
mov
scas
in
fdiv
sbb
dec
adc
sahf
es
xchg
xor
fdivr
ret
xor
cmp
aam
inc
sub
loop
ret
imull
cmc
jb
pop
cmp
shrl
inc
dec
sub
pop
inc
jmp
or
jmp
cmp
sbb
aam
xor
dec
cmp
add
mov
fmulp
cltd
pop
movsl
lret
mov
cwtl
pop
inc
dec
clc
pop
fdivrp
cmp
out
xchg
jp
xor
cmp
movsb
sub
dec
int3
orl
movsb
and
andb
sarb
int
and
adc
dec
roll
fdivrp
sub
xchg
jae
dec
dec
xchg
lret
mov
xchg
mov
jb
icebp
or
fnstcw
sbb
repnz
and
rcrb
push
popf
pop
scas
les
or
dec
lods
fistpl
hlt
adc
or
fiadds
dec
push
sub
sub
imul
cmp
cld
stos
fs
out
mov
sub
mov
xchg
pop
sub
hlt
adc
mov
mov
fwait
jle
sbb
jns
mov
into
je
fs
pop
test
fldcw
push
pop
jb
mov
xor
gs
xchg
das
fs
mov
outsl
fcoml
sbb
inc
fisubs
mov
or
xor
subl
push
mov
popf
rolb
arpl
xor
test
mov
pop
jae
push
loope
inc
das
cmpb
cmp
pop
inc
outsb
xchg
int3
idivl
imul
hlt
cltd
jnp
es
stc
ds
cmc
les
jb
mov
std
insl
inc
inc
in
aas
sub
mov
sbb
repnz
sub
out
inc
outsb
xor
or
fnstsw
shrl
in
xchg
pusha
xlat
das
mov
xchg
push
movsb
or
into
mov
inc
movsl
ret
jo
mov
das
rep
ret
stc
stos
lock
adc
xorb
fimull
lea
aam
xor
pop
sub
test
jne
push
stc
mov
int3
xor
rolb
mov
shrd
ljmp
stos
mov
repz
mull
mov
lock
mov
xor
sti
xchg
out
loope
xchg
pmulhuw
push
fcomps
mov
test
cmpsb
vpmacsww
or
push
aad
test
jle
pop
js
ficoms
pop
push
rcll
mov
inc
mov
test
jb
push
jg
popa
ret
xchg
insl
pop
lret
mov
push
xor
xchg
pop
mov
jl
jle
dec
ljmp
and
out
mov
pop
cld
in
mov
sub
sbb
jno
inc
jp
rorb
mov
mov
pop
nop
sbb
shll
lock
add
push
push
lods
lret
mov
dec
addb
or
or
das
aas
pop
jb
int3
or
shlb
rolb
jp
shl
xor
into
dec
fidivrs
std
loopne
dec
push
jb
xlat
cmp
mov
push
ret
sub
icebp
cmp
pop
add
cmc
pushf
inc
mov
out
dec
repz
jp
jbe
out
xchg
dec
in
adc
pop
test
sub
cmp
adc
pop
scas
sbb
lds
movsb
pop
push
sarl
ljmp
mov
out
xor
loope
cmp
test
fstpt
mov
lods
jmp
pusha
cmc
rcll
filds
sub
imul
push
jo
mov
mov
xchg
out
cs
or
jnp
xor
dec
popa
cmpl
clc
xchg
ljmp
adc
sub
call
pop
jo
inc
imul
insb
outsl
xchg
pop
pop
xchg
cmp
fsubrs
in
inc
ja
xlat
mov
frstor
in
push
add
inc
cwtl
inc
or
clc
mov
mov
and
mov
fbstp
xchg
push
mov
movl
fwait
aaa
jbe
and
pop
cwtl
fucomp
lods
sbb
mov
stos
mov
loope
cli
data16
in
sbb
cld
pop
fdivrs
call
popw
or
push
or
lcall
xorb
mov
sbb
lret
or
cld
fistpl
jnp
pop
adc
add
inc
sbb
push
out
fildl
and
iret
adc
in
pop
xchg
shr
in
fisubs
imul
xor
movsb
roll
and
divl
add
cld
aam
fmuls
push
hlt
push
dec
hlt
sbb
or
push
movd
aaa
sub
out
loopne
cmc
mov
or
dec
enter
push
stc
shlb
dec
inc
inc
dec
sbb
addr16
fimull
cmp
jae
call
inc
daa
or
adcl
sbb
cltd
xchg
inc
mov
sbb
in
daa
stos
aam
mov
mov
jl
jnp
push
ret
or
dec
cmpsb
mov
xlat
inc
jo
repnz
adc
and
mov
test
dec
leave
popa
or
dec
out
or
push
inc
sbb
or
pop
xchg
imul
fistpll
sub
mov
add
int3
test
lock
sub
lods
movsb
pusha
inc
push
jns
add
cmp
cmp
pop
fld
sub
adc
inc
jnp
cmpsl
mov
push
das
mov
mov
jmp
jle
mov
repnz
cmp
jge
shl
pop
xchg
dec
std
je
int
fmull
lahf
mov
and
inc
mov
push
and
shrb
cmp
lcall
out
mov
insl
clc
dec
or
mov
sub
add
lret
int
aas
mov
or
jp
movsl
pusha
xor
push
pop
pop
xor
out
dec
cltd
xor
xor
xorl
sub
movl
sub
or
xor
movl
mov
mov
mov
add
orl
imul
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
push
push
pushl
pushl
push
call
jmp
adc
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
call
cmpl
jne
mov
inc
mov
jmp
movzbl
or
mov
movl
mov
addl
add
xorl
or
mov
not
mov
mov
add
xor
adcl
mov
mov
not
mov
subl
add
subl
and
subl
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
push
pushl
call
cmpl
jne
xor
add
inc
mov
jmp
mov
mov
movl
lea
andl
mov
mov
mov
sub
add
subl
mov
mov
orl
xor
add
movl
jne
movl
jmp
mov
sub
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
push
call
cmpl
jne
mov
inc
mov
jmp
sub
xor
mov
sub
mov
sbbl
mov
incl
xor
addl
xor
movl
sub
subl
sub
xor
movl
mov
mov
movl
mov
jmp
mov
neg
mov
xorl
xor
addl
xor
sub
and
sub
xor
mov
mov
adc
mov
xor
xor
adc
mov
mov
xorl
add
imul
xor
or
add
mov
mov
mov
sbb
mov
xor
xor
add
mov
add
or
mov
mov
mov
add
xor
mov
mov
mov
add
and
mov
mov
mov
lea
mov
mov
mov
sub
add
mov
mov
xor
add
jne
mov
mov
mov
cmp
je
mov
mov
mov
mov
xor
cmp
jne
mov
mov
xor
movsbl
mov
xor
add
cmp
mov
mov
mov
je
xor
add
mov
je
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
add
imul
mov
mov
mov
add
or
mov
mov
mov
add
xor
mov
mov
mov
add
and
mov
mov
mov
lea
mov
mov
mov
sub
add
mov
mov
xor
add
jne
jmp
mov
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
add
imul
mov
mov
mov
add
or
mov
mov
mov
add
xor
mov
mov
mov
add
and
mov
mov
mov
lea
mov
mov
mov
sub
add
mov
mov
xor
add
jne
mov
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
add
imul
mov
mov
mov
add
or
mov
mov
mov
add
xor
mov
mov
mov
add
and
mov
mov
mov
lea
mov
mov
mov
sub
add
mov
mov
xor
add
jne
mov
mov
xor
lea
mov
mov
xor
add
jne
jmp
mov
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
add
imul
mov
mov
mov
add
or
mov
mov
mov
add
xor
mov
mov
mov
add
and
mov
mov
mov
lea
mov
mov
mov
sub
add
mov
mov
xor
add
jne
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
add
imul
mov
mov
mov
add
or
mov
mov
mov
add
xor
mov
mov
mov
add
and
mov
mov
mov
lea
mov
jmp
sub
jg
imul
stc
nop
inc
sub
fisttps
jae
jp
pop
jp
sahf
addr16
enter
call
xchg
ds
jge
sbb
push
cmp
mov
lods
mov
push
mov
stos
cmpsl
adc
adc
inc
xchg
mov
ret
or
xchg
mov
sar
sbb
movsl
out
outsb
outsl
iret
push
out
lahf
xchg
out
popf
movsl
add
add
cmp
dec
jl
jo
mov
xchg
icebp
jbe
add
and
fsubl
xchg
push
adcl
add
addb
pusha
dec
pushf
andl
scas
pusha
pop
mov
scas
into
sahf
dec
add
mov
push
xor
cld
add
out
sbb
fstps
add
pop
jno
push
cmc
dec
dec
ret
pop
loope
ss
stos
aaa
or
and
push
loopne
xchg
or
inc
adc
bound
pushf
je
cmc
addl
mov
mov
push
jns
push
sbb
mov
bound
dec
xor
mov
add
insb
or
out
jp
je
push
rcrb
out
or
rcrb
xchg
in
mov
push
inc
lock
dec
xorb
adc
dec
cmp
push
pop
xor
jo
fmull
pusha
lret
pop
adc
into
inc
lds
call
sbb
or
into
add
aad
pusha
sbb
add
inc
mov
gs
sbb
push
jg
cmp
mov
insl
pop
adc
jnp
and
inc
and
outsb
xor
into
pop
dec
sub
sub
add
ljmp
sbb
int3
cmp
mov
cmp
fidivrs
addr16
mov
je
dec
mov
jg
es
aaa
sti
pop
cmp
in
jbe
cmpsb
stos
fistps
cltd
mov
and
fwait
cli
mov
stos
imul
cmp
ds
into
ret
push
in
xor
or
cmp
mov
outsb
inc
jbe
fidivrl
xor
and
cmp
or
cmp
gs
dec
cmp
xchg
cmp
cmc
mov
ficomps
pop
push
mov
adc
aad
adc
and
push
pusha
stos
pop
stos
movsl
xorb
xchg
fdivrs
push
setno
inc
cmp
outsl
and
fisubl
fsubr
fcmove
jb
pop
pusha
idiv
roll
mov
jg
mov
ds
out
mov
mov
jg
roll
xor
ja
and
call
cld
and
push
mov
xchg
sbb
dec
fsubr
jb
les
sub
lret
and
inc
push
adc
rclb
jle
dec
fwait
inc
cmp
cmpsl
dec
call
xchg
mov
and
dec
insl
popa
scas
cli
shrl
sarl
push
sbb
popa
rclb
mov
addr16
pop
push
mov
xchg
push
mov
jp
and
cmp
sub
xchg
mov
and
dec
ljmp
jle
int3
sti
pushf
mov
repnz
push
push
mov
or
lahf
mov
mov
mov
jl
fstl
loopne
pop
inc
mov
std
jle
sub
and
adc
cmpb
lcall
xchg
adc
dec
out
mov
push
fadds
sahf
inc
dec
push
aaa
movsb
sub
jp
mov
push
out
mov
stc
or
jmp
es
sub
jo
test
jg
pop
rcl
into
insl
sarb
hlt
push
sub
negb
sahf
mov
stos
pop
nop
jg
xchg
mov
xchg
pushf
roll
jns
mov
inc
and
pop
movsb
jp
sub
mov
pop
loopne
clc
mov
push
jae
add
cmpsl
xchg
cmp
pop
repz
push
cmp
pop
xchg
sahf
xchg
add
in
ds
in
pop
push
sbb
push
mov
adc
cmpb
sub
stos
test
in
into
pop
push
into
icebp
test
xchg
or
aam
and
xor
ret
popa
adc
hlt
dec
push
inc
rol
loopne
jb
ja
lahf
xor
pop
jne
sub
pushf
jns
sbb
dec
lcall
std
xor
inc
aas
ss
scas
pushf
adc
sbb
mov
jne
enter
out
ret
adc
inc
xchg
or
arpl
or
dec
adc
stos
and
sbb
cmc
or
mov
mov
pop
mov
outsl
adc
dec
or
add
in
enter
pop
aad
xchg
and
cmp
call
jecxz
stc
mov
fstpl
pop
sub
cltd
xlat
outsl
and
mov
xor
push
lods
jg
xchg
sub
nop
adc
and
lret
mov
xor
bnd
xchg
loopne
mul
push
clc
add
jbe
or
sub
lds
xor
lret
xchg
add
shll
arpl
inc
mov
mov
push
inc
push
xor
into
mov
inc
mov
pop
dec
std
mov
dec
cmp
sbb
repz
mov
icebp
xchg
aam
xor
dec
push
inc
dec
pop
shll
pop
mov
jnp
mov
aaa
fwait
pusha
fisttpll
adc
jmp
aaa
fistpll
inc
push
push
cmp
sub
add
scas
lcall
xor
pusha
dec
test
fucom
aam
ret
sbb
mov
push
push
dec
push
cmp
pop
aad
icebp
xor
cmp
xor
lock
push
rcrb
negb
and
je
ss
or
pop
pop
sub
pop
inc
sbb
cmp
lds
outsl
lcall
jo
add
loope
pop
cwtl
jg
sarb
out
repnz
xchg
sbb
fiadds
aad
gs
popa
cmpsb
lds
shl
dec
lea
mov
inc
adc
leave
mov
hlt
inc
pop
cs
imulb
xchg
xor
sahf
xor
std
cmp
mov
add
push
mov
pop
and
repz
aam
push
inc
decl
pop
lahf
movsl
das
push
jp
sbb
jo
icebp
jne
xor
or
push
jnp
adc
cwtl
fcoms
push
movl
movsl
mov
pop
pop
mov
jb
arpl
nop
cwtl
bound
sbb
ja
lds
dec
das
cmp
jg
add
push
sarl
inc
jae
and
cmp
enter
mov
jle
pop
inc
stc
push
jae
add
inc
fidivl
stos
sub
mov
insb
add
cmp
push
xlat
fistl
dec
xchg
fbld
inc
sbb
add
fsubl
scas
xor
outsl
ja
add
les
fcmove
cltd
mov
pop
mov
mov
stos
and
xlat
js
push
mov
in
mov
sbb
aam
cld
dec
pop
call
pop
jmp
lea
jbe
test
add
pop
push
xor
lods
push
out
jns
js
dec
and
repnz
lea
inc
notb
and
push
or
imul
inc
call
inc
loopne
sub
xor
out
int
pop
dec
mov
cmpsb
cmc
adc
outsb
push
out
add
cwtl
jmp
into
mov
fwait
push
mov
loopne
sbb
mov
cmp
mull
stc
xchg
xor
jl
mov
fsubl
jnp
push
sarb
pop
add
decb
lods
cmp
push
cwtl
iret
mov
loope
and
dec
mov
imul
cmova
add
push
add
push
dec
pop
fistpll
cmp
add
inc
aas
fisubs
dec
sub
ds
adc
stos
xor
pop
stc
and
rcrb
inc
mov
cmp
jl
pop
lret
xorl
lahf
and
mov
outsb
dec
pushf
add
or
adc
sbb
aam
xchg
and
outsl
add
inc
arpl
aad
aam
xor
jbe
cmp
scas
pop
hlt
add
lahf
xchg
sub
sarb
mov
rcll
mov
sub
sub
adc
addl
shl
and
clc
ds
xor
xchg
pusha
bound
or
lods
es
xor
popa
xchg
sbb
enter
xchg
jl
ja
mov
and
mov
dec
addr16
mull
push
jo
loop
jns
mov
inc
dec
out
jb
scas
dec
or
cld
jge
add
or
pop
ljmp
or
arpl
adc
fldl
ljmp
or
sti
loopne
xchg
sub
int
adc
pop
fdivrs
mov
and
test
daa
cmpsb
xor
cmp
fst
inc
xchg
xchg
mov
mov
bound
sbb
or
mov
sub
xor
mov
cmp
rcll
jg
shrl
cli
lret
iret
pop
mov
repnz
cld
fimuls
mov
imull
mov
pop
adcl
ss
jno
testl
mov
xchg
push
insl
mov
or
imul
fidivs
loop
cmp
jg
dec
dec
dec
loopne
mov
adc
add
push
loop
rcl
les
bound
test
push
xchg
incb
sbb
lds
mov
sahf
adc
icebp
xor
movsb
ret
hlt
fdivrl
aas
fmul
and
icebp
inc
jp
inc
test
xchg
test
mov
das
or
fsub
bound
fnstcw
sub
in
stos
fimuls
mov
iret
pop
out
fwait
mov
mov
mov
cmp
test
daa
pop
js
mov
lds
in
imul
mov
sub
xor
stos
xor
mov
daa
push
data16
fisttps
into
adc
mov
jge
mov
sbb
lcall
sub
ret
aas
inc
fwait
mov
xor
nop
mov
out
js
jo
ss
sub
sti
rolb
in
push
shlb
push
mov
inc
mov
push
inc
cld
bswap
test
cs
inc
dec
cltd
cld
bnd
repnz
outsb
fnsave
addl
stos
outsl
notb
jge
jle
jle
push
ljmp
outsb
dec
out
sarb
dec
and
mov
sub
xchg
aas
cld
push
pop
mov
dec
cmp
or
pushf
dec
in
xchg
fs
or
mulb
nop
idivb
cmp
push
das
inc
push
lahf
adcb
dec
das
into
or
mov
jns
in
jns
mulb
xchg
js
fucom
pop
xor
dec
push
pusha
je
icebp
out
mov
daa
xrelease
mov
mov
push
pushf
lret
inc
push
pop
lahf
mov
filds
dec
inc
shll
nop
insb
and
add
jbe
and
daa
or
xchg
jmp
cmp
lock
sbb
push
cmp
mov
jl
pop
lcall
les
push
outsb
dec
jmp
mov
test
sbb
push
sub
jb
xchg
je
cld
shl
out
and
mov
cmp
mov
inc
cld
push
dec
xchg
movsb
push
mov
lss
outsb
roll
inc
inc
cmp
insb
enter
mov
jo
dec
insl
lods
jns
rorl
xchg
test
push
into
mov
mov
ret
push
xchg
nop
and
mov
xor
gs
adc
jmp
movsb
stc
hlt
dec
rcrb
pop
xor
xchg
clc
test
cmp
jle
or
insb
test
in
jb
mov
sbb
insl
aas
fisubl
outsl
bound
dec
xor
cmpsl
aad
mov
loope
jnp
add
mov
leave
push
adc
mov
and
pop
mov
pop
mov
cmp
fmull
push
push
clc
daa
inc
gs
push
pop
das
xchg
mov
addr16
daa
repnz
js
js
gs
jae
xorb
sarl
push
mov
lahf
fisubrl
push
and
add
into
popf
mov
ss
mov
cmp
addr16
or
adc
pusha
cmp
dec
das
lock
scas
jge
and
mov
mov
movl
mov
adc
dec
aam
hlt
mov
and
pop
ret
jp
push
cmp
mov
inc
push
xlat
pop
iret
inc
mov
enter
pop
or
mov
data16
cs
push
bound
pop
ss
pop
leave
cmp
cmc
dec
push
mov
movsb
lret
add
faddl
into
cli
pop
xor
sahf
add
inc
mov
inc
call
mov
sahf
mov
pop
sbb
scas
out
andps
sbb
stc
lcall
js
jno
cmp
jae
sub
bound
ds
movsl
mov
ret
insl
cli
push
dec
push
outsb
pop
loop
inc
call
xchg
jecxz
test
test
mov
pop
mov
xchg
pop
dec
jg
jmp
xor
out
push
iret
inc
push
aam
outsb
stc
sbb
pushf
lods
adc
gs
push
imul
push
add
cmpsl
inc
rorl
pop
cmpl
sti
cltd
hlt
test
wrmsr
push
cs
mov
push
xchg
fcmovu
cld
stc
movsb
cmp
cltd
lods
movsl
and
cmc
dec
push
cltd
call
xor
jp
fistpl
stos
push
bound
fs
outsl
jb
aas
mov
sbb
movsb
addr16
fbld
and
inc
sub
mov
bound
and
inc
test
int3
out
xor
out
repz
mov
dec
sbb
xchg
popa
sub
add
outsb
or
ret
jecxz
sub
sti
nop
pop
jb
shr
jl
jg
outsl
test
mov
inc
inc
jecxz
dec
xchg
push
adc
js
popf
stos
dec
xor
scas
frstor
pushf
xchg
mov
loopne
bound
and
fwait
fwait
sti
aaa
and
jno
or
push
pop
jmp
bound
adc
fwait
pop
cli
in
inc
add
imul
insl
xchg
test
xor
rcl
daa
pusha
push
cli
icebp
sbb
test
or
stos
mov
adc
pop
pop
imul
cld
mov
ds
push
mov
ljmp
xchg
jecxz
data16
xchg
stos
popf
popf
sub
cmp
scas
lea
in
cld
mov
sti
cwtl
lcall
imul
out
mov
stos
xchg
test
fdivs
xchg
outsb
sar
xchg
std
xchg
xor
inc
jp
test
in
sub
pop
lret
or
push
pop
add
mov
jl
pop
sub
adc
xchg
push
outsl
push
sbb
sub
int
in
add
shlb
not
mov
mov
push
push
mov
out
adc
lds
or
push
push
xor
or
lods
jae
repz
jbe
push
test
adc
mov
frstor
push
loope
sti
pop
es
cmp
repnz
mov
shll
or
in
lds
movsl
and
sub
lds
dec
xchg
sub
loop
out
xchg
in
xchg
and
shl
adc
or
jp
xchg
mov
enter
cmc
push
sub
stos
or
pop
push
pop
in
push
inc
cwtl
loop
and
pop
std
jno
mov
cltd
pop
sub
jns
test
or
lods
add
test
push
shlb
popf
sbb
testb
add
orl
call
adc
cmp
jne
out
repz
into
and
adc
loopne
int
jmp
xchg
and
xor
xor
in
xor
add
and
addr16
dec
mov
and
dec
sti
int3
sbb
inc
daa
jl
push
addl
sbb
jo
jmp
hlt
sti
adc
sti
pushf
and
mov
loope
pop
lea
pop
shl
jnp
add
nop
xor
lods
jmp
jg
fisubs
and
rcrl
xor
and
iret
jle
ret
fcomp
into
adc
scas
adc
fidivrs
jmp
shrl
xlat
jl
mov
inc
lock
out
fsubr
adc
push
push
push
ret
roll
cs
pop
fildl
in
jg
nop
push
testl
dec
mov
push
pop
out
push
insl
enter
mov
inc
in
xchg
js
test
inc
and
out
cwtl
mov
mov
fcomps
push
lods
lret
push
mov
pop
test
imul
dec
xchg
ficoms
pop
in
lcall
insl
rclb
and
mov
pop
dec
repnz
fcmovbe
mov
inc
xchg
push
insb
idivl
push
js
sub
lds
adc
mov
addb
cwtl
test
mov
xchg
and
sub
dec
xlat
mov
inc
adc
gs
adc
arpl
fwait
ds
push
mov
enter
ds
inc
loope
inc
inc
cwtl
sub
xchg
test
cwtl
stos
lock
or
pop
pop
movsb
repnz
mov
scas
outsb
loopne
pop
mov
jp
lea
xorb
xor
push
subl
mov
in
push
sub
inc
adc
fwait
ja
or
verr
adc
bound
test
cmpsb
jno
inc
cmp
or
fst
popa
sbb
and
sub
faddl
rolb
jmp
hlt
iret
dec
xchg
inc
sub
int
aaa
mov
lods
and
fdivl
mov
and
bound
sti
add
pop
dec
scas
and
stos
jno
jmp
or
fsubrp
ret
call
cmc
xor
es
out
or
add
lahf
ja
ss
adc
xor
mov
adc
jmp
lcall
cmp
mov
ficompl
and
int
jns
call
sbb
add
jno
pop
mov
adc
repz
enter
push
mov
inc
ds
fnstenv
ss
imul
push
cmpsl
cmpsb
sub
cmp
mov
mov
jp
xchg
hlt
test
sahf
and
push
inc
ret
std
sbb
mov
jns
pop
lea
ja
out
icebp
mov
lds
lret
xor
jle
int3
imul
das
shrb
adc
out
xor
push
add
mov
sahf
clc
mov
lock
xor
dec
sbb
inc
mov
jge
lea
pushf
pop
cltd
popa
fwait
in
ja
push
loope
cmpsl
lods
and
push
mov
xchg
pushf
add
inc
fsubrs
jecxz
pop
lock
test
dec
jnp
mov
mov
push
and
mov
jnp
pop
scas
movsb
int3
or
or
outsl
xchg
inc
fisttpl
mov
jg
pop
xor
pusha
pop
les
sti
add
jge
cli
mov
dec
pop
jb
int3
inc
shll
sub
ret
jmp
xchg
cmpsb
or
lea
in
mov
fbstp
dec
adc
dec
add
jne
mov
addl
push
sub
rorb
and
loope
jg
pushf
pop
scas
dec
cld
jge
xor
adc
push
fcmove
arpl
xchg
nop
stc
imul
sub
jns
jle
inc
dec
cwtl
or
mov
push
repz
mov
push
dec
ss
enter
cmp
mov
movsb
inc
or
pop
xchg
mov
and
sti
dec
pop
dec
mov
jo
dec
dec
xchg
out
push
jne
and
cwtl
out
sbb
add
and
push
pushf
in
mov
in
sbb
and
add
jae
cmpsl
imulb
aam
jne
enter
pushf
fwait
adc
stc
inc
fwait
jge
ljmp
in
or
rclb
test
mov
outsb
lock
sbb
mov
pop
mov
sub
insl
cmp
add
call
cmp
mov
xor
dec
dec
sbb
xchg
aaa
aas
sub
xor
mov
sub
les
adcl
fnstsw
cmp
jnp
ret
and
out
dec
gs
iret
and
mov
push
add
movsb
inc
aam
aaa
aas
vphminposuw
cs
mov
repnz
pop
add
aaa
inc
shrb
lock
dec
inc
lahf
aam
or
inc
es
mov
nop
in
loop
pop
dec
cmp
ret
mov
out
or
out
stc
jne
inc
jg
or
popf
les
stos
idiv
cmp
fs
jmp
divl
and
aad
lret
jl
aad
mov
in
movl
cmp
jb
or
cmpsb
rcrb
push
mov
mov
test
lock
stos
mov
nop
imul
push
cmp
insb
xor
xchg
jecxz
rcrl
les
xchg
inc
lods
sarb
or
mov
arpl
dec
pop
repnz
in
push
mov
shll
inc
jp
std
pop
jb
in
fldenv
in
outsl
lahf
pushf
inc
mov
jg
ja
or
aad
mov
scas
adc
xchg
cmpsb
sub
outsb
dec
mov
sti
clc
pop
xchg
xor
adcb
inc
and
lds
push
dec
movsb
stos
sub
xor
adc
push
mov
fnstcw
subb
das
mov
fwait
cmpsl
sahf
sub
outsb
shll
arpl
mov
push
cmp
pop
jne
rcl
test
push
mov
loop
xchg
jne
mov
pop
scas
or
cwtl
lock
mov
pop
or
stos
add
sub
popf
repnz
lahf
pop
jnp
inc
ret
mov
imul
test
les
es
popa
enter
mov
jp
xchg
pop
aas
orl
mov
je
addr16
mov
ds
pop
aaa
negb
sbb
mov
ljmp
imul
sub
pop
icebp
mov
repz
adc
inc
icebp
ljmp
jne
pop
imul
ss
fcom
sbb
fpatan
inc
sahf
ja
sbb
xchg
dec
sarl
stc
dec
sub
cmpl
call
mov
fs
ret
mov
xor
std
xor
cs
hlt
push
mov
repnz
les
push
mov
xor
jno
and
in
cmc
aaa
int3
enter
push
mov
loopne
mov
repz
xchg
inc
push
jle
mov
fwait
fnstenv
fisttps
arpl
dec
dec
cmp
sbb
push
aas
push
sub
stos
or
jg
out
mov
lcall
in
ja
sbbb
icebp
dec
xchg
push
jns
cmp
add
cmp
add
pop
loope
ret
arpl
xor
jecxz
fcomi
dec
outsl
mov
mov
aaa
sbb
pop
outsb
push
jle
test
decl
in
in
or
push
sti
xorb
add
jnp
and
jns
fdivs
sarb
cmp
lds
ljmp
dec
je
ss
ficompl
adc
push
out
stos
xchg
lcall
push
fnsave
call
mov
lahf
push
pop
aam
data16
aas
ret
mov
int3
js
and
je
in
mov
dec
lea
sbb
scas
loopne
mov
fmull
scas
sahf
inc
mov
xor
xchg
add
jns
gs
repnz
aad
movsl
sti
and
filds
push
outsl
mov
mov
in
int
mov
mov
popf
out
call
and
sahf
incl
imul
repz
jl
or
and
xchg
sub
jo
inc
movsb
aas
gs
lock
testl
cmpsb
jno
cli
nop
jns
in
dec
loopne
sbb
loopne
mov
lcall
fldcw
int3
movsb
dec
xchg
clc
stos
nop
frstor
or
call
pop
push
outsl
cmp
jl
or
xor
inc
popf
mov
xchg
cli
push
rorb
loopne
aad
xor
jae
xchg
and
and
pushf
or
rclb
lahf
inc
push
testb
shrl
sub
pop
sar
std
fdivrs
ja
push
loop
push
sub
jmp
fnstenv
or
ljmp
mov
push
cmpsl
bound
push
xchg
and
aam
push
cmp
hlt
sbb
push
rcl
pop
push
loop
sarb
mov
fwait
mov
sbb
pop
out
negb
push
jno
xor
cmp
mov
lea
push
ljmp
das
rorl
nop
sub
out
mov
mov
lcall
cmp
fs
mov
push
scas
jbe
cli
dec
bound
pop
push
inc
sbb
cmp
cmc
loope
clc
push
loope
shlb
mov
sub
adc
hlt
xchg
inc
mov
jle
stos
in
lret
jle
stc
int3
lods
jge
loopne
rclb
ret
sub
and
fcomps
inc
push
pushf
stos
inc
loope
mov
pusha
iret
cmpb
loope
mov
jns
scas
js
mov
mov
mov
mov
adc
gs
sbb
mov
pop
mov
mov
xchg
push
iret
push
out
aas
pushf
xlat
add
cmp
pop
lods
out
pop
jmp
lar
xor
arpl
sub
call
and
ret
pop
jg
push
mov
pop
mov
jae
mov
outsb
out
mov
outsl
movsl
arpl
loop
xchg
ja
lahf
add
out
xchg
cmp
sbb
xchg
sbb
jp
aam
das
lods
lret
loopne,pt
jp
mov
mov
pop
jno
hlt
mov
xchg
out
arpl
sti
mov
in
in
push
sub
sahf
test
xchg
xor
je
psrad
sub
xchg
push
pop
jnp
adc
add
cmpsl
aam
orl
push
shl
cmpsl
call
aad
insl
jo
adc
and
and
int3
or
adc
mov
add
fistl
sarl
insb
jl
mov
test
out
push
add
fnstenv
add
push
mov
pusha
inc
fmulp
daa
in
out
rclb
mov
xchg
fldz
int3
cmp
dec
and
pop
and
dec
test
jo
mov
mov
inc
pushf
mov
fistpl
dec
sti
in
jmp
aad
popa
mov
push
call
nop
sbb
into
fdiv
cmp
add
jmp
test
repnz
cmp
jecxz
cmpsb
sub
mov
es
enter
sub
mov
cmp
sbb
cmp
in
std
mov
or
sbb
popf
fnstsw
into
pop
adc
mov
into
jle
mov
lret
lds
je
mov
test
fwait
and
fstpt
sub
jge
xor
mov
xchg
xchg
scas
mov
sbb
or
dec
fcompl
fwait
adc
nop
cmp
mov
sub
xor
mov
ret
js
and
xor
out
in
add
aad
pop
xor
fidivs
xchg
mov
jl
popa
jae
xor
dec
or
add
sbb
pop
mov
xchg
jge
stc
cmp
mov
pushf
inc
pop
insl
orb
fimuls
xchg
cmpsb
cmpsb
push
ds
scas
outsl
cmp
add
inc
sub
fwait
jb
pop
sub
add
ret
mov
adc
or
in
outsb
insl
or
lcall
imul
adcb
sub
dec
jg
sub
rolb
pushf
dec
add
jle
ljmp
shll
jns
mov
fldl
pop
ret
cmpsl
add
lret
sub
fisttpl
cmp
mov
ljmp
xchg
in
or
cli
sbb
sar
scas
test
cmp
inc
popa
jle
push
les
adc
jecxz
mov
out
stos
add
mov
mov
xchg
mov
rorb
divl
jne
mov
popa
out
out
mov
or
mov
scas
add
mov
mov
insl
dec
aaa
lds
mov
and
sahf
xorl
leave
enter
mov
pop
inc
addl
icebp
inc
rcrb
inc
enter
les
add
movsl
lea
dec
loopne
mov
push
and
jle
pop
push
fsub
dec
lret
mov
mov
and
add
outsb
cpuid
jl
lret
cmpsl
sub
adc
outsl
out
fsubr
jno
fildll
imulb
aaa
add
pop
out
ds
out
pushf
mov
mov
sub
dec
mov
in
fsubs
pop
cmp
pop
aam
mov
cmp
addl
dec
pusha
jns
popf
rorb
enter
pop
out
add
pop
addr16
rcrb
aaa
outsb
fsub
mov
jecxz
xor
imul
inc
lret
push
xor
popa
enter
lret
fidivl
scas
aaa
ds
sbb
and
xor
es
mov
push
inc
dec
js
enter
hlt
dec
adc
add
xchg
jns
inc
xchg
mov
mov
mov
dec
loopne
movsb
outsb
and
rolb
xchg
es
enter
push
jns
push
push
xchg
scas
mov
xchg
fs
aad
add
dec
sbb
mov
scas
push
sbb
jmp
adc
inc
inc
lahf
in
rcrb
mov
lock
sbb
cmpl
xchg
movsb
int
xchg
lret
in
xor
mov
fsubrl
pop
inc
mov
sarl
xchg
inc
shlb
adc
test
mov
cmp
dec
insb
mov
dec
mov
das
jle
jno
repnz
test
enter
inc
test
rolb
fwait
gs
fwait
mov
dec
jmp
in
nop
scas
or
rorl
sub
mov
mov
es
cmovl
in
lods
add
or
imul
xor
and
fstl
shl
subl
jmp
popf
enter
hlt
jo
aas
adc
cld
pusha
push
inc
and
dec
fsts
mov
fnsave
roll
push
xor
add
cmp
mov
arpl
inc
add
cmp
xlat
cmpsl
out
in
hlt
add
test
pop
pop
movsl
mov
cmp
inc
ss
push
fsubrl
inc
cli
jg
jmp
xlat
insb
gs
push
push
jo
and
jbe
jle
inc
insl
pop
insl
insl
or
in
subb
cmpsl
jno
data16
or
in
mov
aam
fistpl
js
jns
test
fidivs
lahf
jecxz
ret
jmp
lods
sbb
xor
ret
add
cltd
inc
lcall
adc
add
mov
mov
xor
add
jmp
clc
fsub
mov
mov
mov
cmp
push
jns
fcomps
jp
mov
notl
loope
cmp
gs
insl
insl
xchg
cmpsl
and
dec
xor
mov
cld
dec
push
fadds
push
and
aas
mov
push
adc
add
out
jp
mov
cltd
adc
xchg
clc
sub
mov
mov
mov
shlb
jae
fildl
push
mov
xchg
cmpsl
fcmovb
mov
test
or
adcl
out
adc
leave
ja
push
sbb
mov
insl
icebp
sub
jg
in
push
ljmp
subb
arpl
adc
jno
test
fcomps
loopne
scas
scas
pusha
stos
mov
sbb
imul
rcrb
stos
jp
fs
lods
test
jle
mov
popa
dec
fwait
adc
push
je
lods
xchg
or
cltd
fidivl
push
mov
pop
jecxz
sbb
out
popf
sarl
mov
jle
add
mov
pop
orl
sub
push
xor
lcall
aaa
loop
dec
mov
mov
cwtl
cmp
repz
test
mov
out
jmp
mov
fstpl
jae
loope
mov
adc
mov
push
enter
nop
jne
jp
dec
jns
test
mov
scas
ljmp
and
das
mov
pop
cmpsb
mov
adc
cmp
shrw
sub
sub
loope
xchg
iret
out
mov
loope
sbb
cmp
andb
jl
outsl
lock
xor
push
add
fisubrl
add
inc
mov
out
pop
adc
mov
or
mov
rcrl
je
stos
push
pop
shlb
je
mov
pop
shlb
gs
nop
lcall
cmp
or
stos
jmp
ja,pn
push
out
out
or
aad
imul
stos
sub
sbb
and
aaa
xchg
es
fdivrl
lds
push
ljmp
xchg
add
sub
or
cmpsl
mov
das
in
mov
mov
xor
in
lcall
jl
lret
lods
int
inc
and
imul
sbbl
cld
shrw
adc
jp
and
in
xor
sub
pop
mov
sbb
insb
cmp
ljmp
jge
rclb
test
and
inc
leave
fsubp
jecxz
pop
test
adc
jo
jmp
mov
iret
movsl
out
add
add
pusha
je
push
dec
jge
das
out
push
je
add
ss
dec
repnz
or
imul
jle
fimull
jns
call
inc
jmp
xchg
mov
push
das
jecxz
sub
sub
or
pop
ljmp
in
enter
or
std
mov
cmp
repnz
sbb
sbb
jp
insb
xchg
stc
ljmp
mov
dec
sub
cmp
push
lods
dec
sub
adc
dec
push
xchg
aad
aam
jnp
divb
inc
dec
loop
sbb
cltd
adc
jno
pusha
fdivs
mov
into
jle
sub
ret
test
xchg
aaa
mov
fstps
adc
lret
loope
andb
add
mov
imul
mov
subb
data16
dec
pop
sbb
pop
aas
and
pusha
js
mov
push
jne
mov
out
mov
lea
xchg
dec
dec
xchg
pusha
cli
call
adc
es
and
fdivl
scas
iret
xchg
loope
jns
dec
inc
mov
mov
fldt
or
fistl
cmp
pusha
xor
mov
push
xchg
or
sub
fistl
stos
mov
dec
dec
sub
inc
and
hlt
out
xchg
sbb
repnz
xlat
jnp
es
dec
imull
lock
lret
add
fmuls
jnp
cmpsl
jl
adc
mov
adc
dec
iret
pop
and
insl
xchg
xor
pop
inc
push
nop
lret
repnz
dec
stos
in
add
dec
inc
arpl
scas
lret
xchg
sbb
nop
pop
in
js
pop
mov
rcrb
mov
mov
in
lahf
je
lret
adc
popf
mov
adc
pushfw
add
or
inc
pop
jecxz
jp
pop
in
sahf
shr
fistl
add
mov
ret
jp
lcall
ljmp
adc
sub
in
repz
push
inc
dec
ljmp
fnstenv
aad
jo
mov
imulb
sbb
mov
lods
repz
jne
sbb
ds
cmp
test
std
xchg
or
mov
xorb
dec
inc
stos
sbb
cmpb
sbbb
into
cmp
or
idivb
fwait
and
out
jmp
and
jnp
dec
leave
mov
push
jmp
lock
push
or
push
lods
add
xor
ss
dec
push
clc
imul
xchg
pop
call
sbb
xchg
call
jns
fcomp
dec
fwait
sbb
sub
test
push
jmp
addr16
out
sbb
aad
out
xchg
into
scas
mov
pop
fcoml
jmp
pop
aaa
fists
or
out
sbb
movsb
sti
loope
aas
sub
sub
xchg
jo
push
stos
mov
in
sub
cmp
out
hlt
jae
leave
loopne
mov
cwtl
add
mov
mov
or
ss
inc
movsb
sbb
push
push
lods
repnz
xchg
sub
mov
mov
repz
add
jae
sub
in
xchg
adc
inc
xor
cmp
fisttps
jecxz
push
inc
jne
jp,pt
ss
mov
jbe
xchg
dec
inc
cwtl
cmp
out
mov
insb
add
movsl
xchg
jae
add
mov
mov
popf
pop
mov
scas
ret
xchg
jnp
pop
je
sub
pop
adc
cwtl
xchg
sub
test
mov
jmp
inc
cmpsl
sarl
inc
mov
es
mov
cmpsb
pop
mov
push
scas
pop
inc
mov
dec
scas
icebp
xchg
pop
xorl
popf
into
in
cmp
icebp
push
or
sti
lea
sub
fsubl
or
imul
inc
xchg
fldcw
mov
ja
popf
sbb
fnstcw
mov
f2xm1
mov
pop
push
xchg
loopne
scas
pop
out
scas
xchg
int3
ret
and
test
or
xchg
dec
xor
sbb
iret
je
outsl
imul
push
or
inc
cmp
incl
sbb
hlt
lret
and
shlb
loope
cltd
cmc
inc
ds
mov
or
lret
cli
add
pop
lret
gs
bound
jns
movq
sbb
mov
divl
in
adc
popa
xor
adc
bound
xor
sbb
daa
inc
iret
push
mov
xor
mov
add
lods
shlb
sbb
adc
in
jecxz
inc
subl
in
loop
ret
mov
and
enter
push
clc
movsl
mov
add
xchg
xchg
push
roll
flds
repnz
pusha
add
in
ret
adc
pop
aad
pop
adc
fwait
sub
xchg
aaa
jl
shrb
rclb
js
pop
pusha
fldl
nop
inc
insb
icebp
fdivrl
shll
dec
loopne
cmp
scas
in
mov
rcrb
ret
rclb
push
push
cld
mov
xchg
xchg
gs
sub
xor
pop
add
cmp
sti
lret
mov
xchg
call
pop
lahf
cmp
adc
add
lds
inc
mov
into
div
fisttps
aaa
fs
test
or
arpl
insl
push
or
ja
pop
cmp
and
push
xchg
dec
cld
xor
and
push
scas
or
out
fisubrl
and
inc
pop
testl
pop
jo
movsl
scas
mov
pop
add
and
xchg
inc
sbb
mov
mov
hlt
dec
adc
int3
ds
mov
movsb
out
push
rorb
stc
out
push
xchg
inc
leave
ud0
movsl
push
insb
mov
mov
and
mov
mov
jecxz
lcall
pop
dec
jecxz
cmpsb
mov
test
mov
and
pop
add
inc
enter
mov
push
gs
pushf
stos
xor
repnz
lret
pushf
sub
mulb
xlat
mov
roll
adc
inc
inc
insb
sbb
outsb
int3
xchg
xor
xchg
in
test
arpl
not
and
pusha
vmwrite
mov
inc
cmp
roll
cmc
rolb
and
shl
mov
push
repnz
and
xchg
fs
sbb
inc
xchg
sahf
and
repnz
lock
push
push
outsl
inc
bound
js
and
mov
out
push
mov
ja
jmp
mov
mov
jbe
xor
mov
mov
dec
stos
out
cmpsl
es
repnz
fstpt
jge
and
jecxz
ds
cmp
inc
mov
mov
into
inc
jmp
aas
stc
in
aam
push
mov
test
xchg
mov
lret
pop
andb
stos
bound
mov
push
adc
jbe
ret
sub
add
stos
mulb
icebp
dec
loope
pop
cmpl
sbb
lds
xor
push
fstpt
mov
add
xchg
cmp
or
jmp
jnp
mov
mov
shl
out
add
std
imul
and
sub
adc
sbb
stos
sub
outsl
or
cs
out
inc
mov
mov
int
mov
mov
fidivrl
loopne
pop
xor
xchg
lock
sub
lea
dec
sub
xchg
not
lods
outsb
dec
lock
fbld
add
jmp
lret
and
imul
int3
dec
cld
dec
adc
pushf
loopne
jmp
dec
mov
mov
adcb
hlt
jns
icebp
aas
es
mov
adc
mov
cmp
mov
lods
dec
mov
pop
imul
std
cmc
sbb
sbb
out
rorb
inc
stos
sub
push
xchg
fistpll
xchg
lret
jle
mov
in
aas
adc
dec
or
sub
aas
mov
sbb
icebp
mov
xor
jp
cmc
mov
fidivrs
outsl
pop
sbb
call
add
and
movsb
mov
xorb
fisubrl
insl
sti
lods
push
sahf
pop
mov
insb
mov
pusha
sub
and
mov
cmp
orl
xor
pop
test
pop
insb
pop
out
pop
pop
inc
sub
lret
std
stos
pop
pavgw
pop
jmp
cs
in
shlb
call
or
dec
xchg
cmp
pop
out
xor
push
inc
dec
pop
pusha
push
inc
or
divb
idiv
loope
lcall
mov
sarl
push
pop
push
mov
push
xlat
stos
aad
mov
std
push
icebp
xor
dec
je
cwtl
jmp
jno
mov
loope
lret
xor
push
add
shll
adc
out
sub
xchg
xchg
cs
es
movb
sbb
ret
xchg
or
jl
scas
cmp
out
mov
inc
jmp
ret
popa
aad
fistl
cltd
stc
inc
int3
enter
xorl
cs
xchg
loop
iret
jns
ss
inc
movsb
xor
ret
out
fsubs
out
xchg
mov
mov
mov
mov
or
mov
inc
sub
shrl
or
mov
rcrb
xor
adc
xchg
int
int
cmp
add
jmp
movsl
mov
and
outsl
add
in
es
insl
mov
mov
and
scas
jno
pop
push
daa
sbb
sbb
cmp
inc
repz
je
cmp
js
jl
push
lahf
jnp
inc
shlb
jae
mov
arpl
or
jg
mov
imul
xor
sub
test
add
fisubl
push
insl
mov
mov
mov
or
insl
mov
mov
adc
testb
idivl
ljmp
lret
into
mov
in
mov
sub
call
rorl
mov
xchg
dec
testl
clc
mov
and
mov
pop
pop
pop
dec
sti
adc
lahf
or
mov
sbb
sub
xchg
fmull
cmp
mov
and
jp
dec
adc
push
adc
xor
xchg
jb
ret
mov
imull
inc
pop
push
pop
mov
fldlg2
addl
push
mov
jns
inc
inc
adc
jge
adc
mov
sarl
cltd
out
nop
std
add
xchg
jne
mov
iret
xchg
bound
lds
lret
cs
pop
aad
push
cmp
or
in
mov
sbb
into
add
shll
pop
lcall
mov
adc
xor
aaa
lahf
mov
jecxz
ss
sub
jp
jecxz
mov
cmp
loopne
xor
push
in
xor
push
cli
fistpll
lret
lea
inc
jg
or
mov
in
push
inc
adc
jmp
pop
mov
fisubl
xorb
loopne
out
outsl
imul
sbb
adcl
lret
add
fnstcw
mov
jnp
rclb
test
add
push
aaa
nop
sub
xchg
inc
push
jns
or
dec
cli
out
rorb
xchg
adc
gs
ret
mov
mov
je
pop
bound
mov
inc
aam
jb
adc
xor
aaa
ror
aas
mov
ret
pop
das
leave
pushf
iret
mov
dec
dec
mov
xchg
mov
shrl
push
ss
test
call
push
decb
jns
cmp
divl
mov
pop
ja
inc
and
aam
hlt
call
jnp
out
xchg
add
dec
xchg
dec
dec
xchg
pop
pusha
mov
dec
movsb
jno
and
dec
xor
shr
xorl
clc
out
cmc
ljmp
mov
add
popf
lret
mov
ss
xor
cltd
and
pop
fiaddl
pop
pop
pop
cmp
enter
xchg
dec
mov
cmp
sbb
mov
pushf
gs
pop
aam
xor
repz
aad
xchg
cltd
enter
mov
insb
push
or
cmc
inc
out
inc
dec
pop
or
es
rclb
or
scas
lcall
ret
rcll
rcl
das
inc
dec
scas
and
orb
fsubrl
mov
push
and
int3
fisubrl
movsb
lds
scas
ret
imul
xchg
mov
mov
fmuls
addr16
push
std
sbb
dec
pushf
jl
push
popf
nop
jns
inc
aad
adc
ret
adc
test
or
movsb
mov
push
fs
adcl
push
and
jo
push
jb
jle
mov
adc
xchg
loop
out
scas
js
imul
jmp
mov
fistpll
into
adc
pop
jns
lods
inc
out
xchg
mov
xor
adc
cmp
xchg
cmp
je
pop
mov
mov
or
jae
lahf
idivl
xchg
push
mov
nop
jle
jns
dec
bnd
xor
or
jecxz
dec
outsl
mov
aas
sarb
insl
rorl
cmp
and
mov
lahf
mov
inc
add
xor
push
push
mov
and
cmc
mov
and
push
add
les
in
cmp
stos
sub
inc
cmp
data16
cmc
inc
mov
and
push
jb
mov
add
aas
arpl
shrb
xor
loopne
sub
jns
add
cmp
movsl
add
inc
mov
inc
ja
cmp
mov
cmp
mov
loopne
mov
and
and
mov
lods
insb
and
add
push
add
arpl
xchg
mull
imul
sub
imul
push
repz
ss
mov
in
gs
fscale
jne
cmp
push
gs
mov
inc
adc
sub
test
jmp
arpl
adc
cmp
lods
mov
out
test
imul
lahf
sbb
out
and
repz
push
add
sub
cmp
test
pop
insl
mov
sarl
inc
insb
mov
enter
imul
dec
testl
out
cli
ficomps
sar
sub
mov
xor
pop
scas
jmp
inc
mov
sub
clc
sti
xor
inc
jmp
sub
push
mov
jae
push
push
cwtl
mov
sbb
in
jle
cli
rcl
dec
sbb
bound
stos
cli
sbb
div
mov
fs
stos
negb
cld
dec
negl
jns
lods
and
leave
mov
data16
into
out
arpl
stos
sbbl
fisubl
aaa
ss
fistpl
loopne
xor
pop
out
add
cli
lahf
repz
rcrb
push
cmp
insl
xor
sbb
push
add
out
imul
popf
pop
mov
fwait
add
or
pop
ficoml
addb
sarl
call
dec
jmp
sbb
dec
and
loope
sub
ffree
daa
mov
inc
cmp
push
popa
mov
mov
sbb
push
movb
jbe
cltd
shrb
or
mov
cltd
imul
mov
adc
mov
sub
je
push
pop
xor
fidivrl
bound
hlt
stos
cmpsb
adc
inc
jae
cmpsb
ljmp
and
or
int3
inc
jmp
repz
mov
sarl
cmp
or
fwait
fwait
ss
add
adc
xor
shlb
pop
mov
aad
push
mov
leave
ja
out
jecxz
push
ret
xchg
sub
out
xor
ljmp
sbbl
idivl
or
cmp
mov
mov
sbb
jle
iret
aad
inc
cwtl
inc
pop
fisttpll
adc
and
sub
cmpsl
cmp
in
mov
clc
sbb
das
adc
les
movsb
out
stos
in
repz
stos
push
jg
scas
inc
mov
jp
push
loopne
sub
jge
mov
jge
cmpsb
inc
inc
in
mov
shlb
push
out
lods
fadd
cli
pop
lock
ret
stc
inc
inc
insl
in
ret
sti
add
jmp
mov
fwait
sbb
xchg
lock
mov
ficompl
loopne
fmulp
les
sub
call
stos
xchg
sub
lcall
pop
fbstp
dec
xorl
idivb
subb
dec
subl
lock
mov
js,pn
int3
mov
mov
sarl
fldcw
and
fucomip
jg
ret
stos
incb
jle
loopne
jge
inc
cmpsl
pop
adc
mov
les
ret
sbb
sbb
arpl
lret
lds
mov
sub
mov
xor
pop
lock
daa
lret
add
jp
or
out
bound
enter
dec
push
mov
dec
mov
or
dec
scas
dec
and
es
aad
adc
scas
in
pop
cmpsb
sub
push
mov
xlat
xchg
jl
hlt
xor
shrl
xchg
push
mov
punpckldq
mov
cs
dec
cmp
pop
in
and
mov
ds
push
dec
mov
adc
push
test
mov
arpl
loopne
nop
lods
push
dec
push
test
or
or
mov
cmp
jmp
xor
mov
add
scas
adc
out
mov
mov
sub
lods
sbb
push
stos
add
pop
jne
fsts
fs
lds
mov
adc
cs
pop
ret
es
add
jns
pop
data16
fdivp
adc
xlat
adc
cmp
jnp
clc
pop
outsb
xchg
je
cld
and
xchg
ja
cmp
xchg
sub
dec
cmp
ud1
aaa
xor
lahf
popf
add
xor
xor
int
or
xor
cltd
outsb
bound
fbstp
les
jb
fwait
xchg
mov
xchg
lds
xchg
scas
and
insb
jle
fcomps
pop
orb
mov
push
andb
loopne
mov
out
enter
ds
ds
xchg
cld
addl
or
add
sbb
and
mov
stos
fnstsw
out
int3
push
loope
int
test
out
add
mov
jae
fwait
sbb
in
decl
addps
inc
lods
cmp
inc
pop
inc
xchg
pop
bound
mov
pop
jnp
sbb
stos
popf
cwtl
mov
jb
push
jbe
scas
xor
cwtl
xor
lea
jge
enter
dec
push
loopne
fistps
in
test
out
in
call
test
add
jmp
mov
lock
xchg
fisttpl
ret
cmpsb
je
adc
or
jle
in
ja
pushf
dec
push
hlt
push
lods
loope
cmp
into
push
sbb
mov
pusha
outsl
add
mov
sub
in
out
xor
lds
push
mov
pop
push
inc
push
addb
lcall
lock
test
stos
jae
dec
jle
mov
roll
mov
js
clc
pop
jne
scas
lods
rcr
mov
popf
lret
cs
loopne
ret
aas
or
hlt
js
pop
jb
inc
mov
lahf
mov
ja
pop
pop
pop
or
pcmpeqb
sti
pop
cmp
mov
imul
nop
shll
inc
outsl
fnstenv
je
cmpsb
insl
or
adc
or
scas
and
pop
xchg
cmpsb
xchg
cmp
pop
andl
in
lret
fs
dec
mov
add
aam
and
adc
jae
or
sbb
pop
stc
idivb
xor
sub
mov
mov
dec
adc
ds
xor
dec
dec
dec
mov
cmp
lahf
nop
jmp
dec
cltd
lcall
xchg
shlb
mov
dec
mov
or
scas
pushf
js
cmp
mov
jb
fisttpll
out
pusha
sub
hlt
mov
adc
xchg
mull
xchg
fiadds
adc
mov
mov
lock
xor
pop
pop
push
jo
push
or
mov
insl
je
inc
cli
inc
ja
jecxz
pop
ret
stos
test
mov
add
arpl
pop
pop
dec
fimuls
and
fmulp
movsb
enter
push
imul
jg
ja
push
das
inc
movsl
popf
xor
int
and
and
xlat
data16
fidivrs
or
lds
scas
adc
test
and
mov
addr16
add
sarl
or
mov
stos
andb
shll
mov
adc
mov
pusha
pop
cmp
gs
sub
xchg
out
xchg
shll
jo
je
pop
pop
mov
adc
popf
xchg
add
fsts
mov
mov
ret
xor
mov
stos
popa
adc
in
ret
aaa
xchg
cmp
div
movsl
or
lds
enter
jmp
jne
mov
dec
cmc
js
aaa
jbe
adc
dec
jns
jecxz
stos
lret
jbe
insb
mov
stos
iret
push
and
cmp
xchg
loopne
das
or
in
test
mov
imull
imul
pop
pop
es
movsl
and
add
push
fimuls
popf
lock
mov
test
cltd
lcall
lea
xchg
test
pop
and
mov
and
push
xchg
lds
std
pushf
leave
popa
sub
adc
mov
mov
mov
cltd
xchg
add
lods
xor
ret
in
dec
cwtl
enter
inc
pop
pop
jnp
mov
das
shl
pop
and
inc
shrl
in
and
ret
xchg
cmp
fadds
cs
sbbl
or
cmc
lea
xlat
adc
xchg
inc
sahf
cmp
or
sahf
out
inc
pop
jp
fwait
cltd
mov
cmp
lods
scas
test
in
mov
mov
jle
mov
mov
dec
inc
push
movsb
xor
loopne
mov
lcall
mov
sub
sbb
cmp
add
daa
inc
test
test
sub
pop
leave
test
or
and
jne
xchg
scas
fmull
mov
inc
mov
or
enter
leave
pop
dec
repnz
divb
xor
jb
jmp
and
aad
xchg
add
imul
cmc
mov
inc
loope
fisttpl
jmp
or
inc
lods
add
xorl
es
xchg
js
xchg
pop
add
loop
scas
inc
cmp
repnz
stos
std
mov
and
aaa
rorl
dec
fwait
jnp
ljmp
or
jl
inc
pop
pop
cld
or
stos
adc
cld
xchg
sbb
lea
add
xor
sbb
pop
outsb
pop
ljmp
push
sbb
rcrl
insb
lock
fdivs
mov
cmp
pop
xchg
xchg
stc
add
lds
and
cmp
dec
cmp
imul
lds
mov
jnp
mov
sbb
push
adc
sub
jae
aaa
ja
ljmp
push
mov
insb
outsl
add
dec
adc
adc
cltd
adc
sub
loopne
push
repz
add
out
movsb
sbbl
test
jo
push
add
pop
adc
in
fcomps
pop
arpl
std
pop
cmp
fcoms
lock
jns
jecxz
push
lds
jns
shll
mov
cmpsl
adc
aas
cmp
dec
mov
out
out
jmp
icebp
iret
xchg
lret
xchg
sahf
fmul
mov
mov
push
rcrb
mov
mov
mov
sarl
adc
lahf
pusha
cli
mov
push
je
mov
out
stos
fmul
add
int3
sbb
addr16
push
int
jns
out
repz
test
loope
aaa
test
leave
pusha
int
stc
loope
lds
test
loopne
add
mov
cmp
fnstsw
hlt
mov
in
push
incl
loope
push
test
out
inc
loopne
lret
and
xor
pop
xor
xchg
jae
push
ret
sbb
or
xor
or
scas
adcb
nop
dec
jns
cli
push
mov
daa
sbb
les
inc
sahf
sub
mov
fiaddl
pop
mov
push
mov
aaa
test
in
or
add
mov
mov
sub
sarb
filds
inc
sbb
sbb
mov
movsl
inc
cmp
cmp
pushf
xlat
add
xchg
and
scas
push
arpl
scas
movsl
jno
mov
in
xor
aad
pop
stos
pushf
out
repz
and
jmp
inc
xor
xchg
fdivp
testb
aas
pop
sub
xchg
arpl
or
xchg
xor
inc
cltd
in
mov
mov
sbb
icebp
imul
jno
lahf
mov
sub
mov
pop
inc
mov
jae
test
xorb
dec
adc
and
std
jmp
pop
cld
jp
sub
mov
lahf
imul
inc
je
fs
btl
fisttpl
push
sbb
xlat
mov
idivb
out
cld
lods
lret
movsb
ja
dec
std
xor
xor
dec
push
sahf
fldpi
insb
fstps
jmp
pop
loope
icebp
out
mov
sub
xor
lcall
aaa
push
cmp
sub
mov
jo
popf
test
cs
xchg
cmc
add
jl
dec
pop
sub
xor
mov
push
pop
cmp
xchg
addr16
clc
mov
lock
mov
in
push
mov
popa
cmp
xchg
mov
gs
dec
lcall
repnz
inc
cltd
mov
or
rcr
inc
sahf
push
aad
cmp
add
mov
aad
sub
lds
jne
pop
rclb
out
add
rcr
xchg
push
fs
mov
incb
fnstenv
shll
pop
fdivp
or
pop
jb
dec
cmp
fsubl
imul
or
mov
loop
movsl
xchg
pop
cmpsb
push
shll
push
xor
hlt
sahf
leave
mov
cmc
in
movsl
pusha
call
push
pop
aaa
std
stos
adc
out
lahf
mov
mov
xchg
mov
insb
jg
sbb
ds
rep
pop
cmpsl
sbb
fisubrl
aam
lds
fsubrl
testl
dec
insl
gs
inc
lcall
rcrb
adc
sbb
adc
mov
pop
mov
and
test
mov
add
mul
pop
xor
icebp
xchg
sub
loop
add
in
incl
add
jo
mov
outsl
leave
negl
cli
adc
and
sbb
ljmp
jae
or
in
call
negb
mov
or
jecxz
jb
jne
outsl
lock
addr16
pop
test
and
lcall
cmpsl
xchg
sub
js
fiaddl
enter
jmp
out
gs
pop
cmp
pusha
adc
xor
test
sbb
std
jns
adc
enter
xor
mov
push
adc
in
je
cmc
or
imul
rcrb
jp
fcompl
inc
mov
arpl
or
sti
cli
pop
orb
pop
arpl
iret
inc
loope
dec
mov
push
mov
and
xor
and
xor
in
adc
cld
xlat
loope
je
jo
mov
fistpll
and
and
pusha
jo
insb
in
loopne
jne
pop
dec
and
test
in
xchg
xchg
cmp
loope
divps
jb
mov
pop
ljmp
icebp
dec
jle
insl
xor
add
fistps
push
clc
jbe
popa
ret
loop
repz
add
jae
movsl
push
xor
sti
ds
shl
adc
push
sub
xor
mov
add
aam
sbb
cltd
sub
push
jbe
push
cmp
daa
bound
cmp
addr16
push
stc
cmp
dec
je
lds
fwait
fs
lods
mov
dec
dec
cmpsb
dec
or
sub
leave
mov
xor
xchg
shrd
inc
lds
cld
and
dec
pop
cmp
in
movsl
jb
shl
mov
add
cld
add
ds
cld
pushf
jp,pt
push
or
xchg
xchg
and
test
mov
imul
jnp
cli
lods
xchg
dec
dec
lea
cmp
test
mov
inc
and
inc
scas
xor
push
stos
pshufw
xor
mov
loope
out
in
mov
xor
jmp
xor
into
out
inc
sbb
test
mov
movups
aaa
xchg
cli
xchg
inc
aam
mov
push
mov
test
mov
clc
xor
mov
add
mov
pop
pop
pop
leave
ret
add
inc
add
mov
inc
add
mov
inc
add
mov
inc
add
rolb
add
inc
add
rolb
or
inc
add
rolb
adc
inc
add
rolb
sbb
inc
add
sub
pop
dec
add
add
add
add
cmp
popl
add
add
add
add
add
pop
dec
add
add
add
add
add
add
add
add
clc
mov
add
mov
add
popl
add
sub
add
popl
add
add
popa
insl
imul
aas
inc
gs
jae
jb
bound
arpl
arpl
imul
gs
bound
arpl
arpl
nop
inc
add
inc
add
nop
inc
add
inc
add
nop
inc
add
inc
add
nop
inc
add
inc
add
nop
inc
add
inc
add
nop
inc
add
mov
add
inc
add
mov
add
inc
add
mov
add
inc
add
mov
add
inc
add
rolb
rolb
rolb
rolb
rolb
rolb
rolb
rolb
add
push
push
inc
push
and
aaa
jmp
mov
shr
add
add
inc
cmp
jb
outsb
je
popa
je
pop
dec
outsl
imul
insb
imul
dec
gs
mov
sub
push
mov
xchg
mov
cmp
jne
mov
cmp
jne
mov
mov
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
push
movb
movb
push
movb
movb
push
movb
xor
movb
xor
pop
mov
lea
movzbl
xor
add
inc
mov
cmp
jb
xor
lea
movzbl
xor
add
inc
mov
cmp
jb
xor
lea
movzbl
xor
add
push
mov
inc
pop
cmp
jb
lea
mov
mov
mov
mov
mov
cmp
jne
movl
movl
mov
mov
cmp
jne
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
lea
mov
mov
mov
lea
mov
add
mov
lea
mov
mov
mov
dec
mov
mov
mov
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
lea
mov
movl
movl
lea
mov
xor
sub
mov
inc
dec
jne
lea
mov
lea
push
mov
mov
xor
mov
add
push
mov
add
push
mov
mov
movl
pushl
mov
call
mov
xor
add
mov
cmp
jne
mov
or
mov
add
mov
mov
mov
mov
mov
mov
mov
lea
mov
add
mov
lea
mov
add
mov
lea
mov
mov
mov
mov
lea
mov
mov
mov
mov
add
mov
mov
add
mov
lea
mov
add
mov
mov
mov
mov
movzwl
xor
add
xor
mov
mov
movzwl
xor
add
xor
mov
xor
mov
mov
mov
lea
lea
movl
mov
call
mov
lea
push
mov
xor
add
push
lea
push
pushl
mov
call
mov
lea
lea
mov
call
mov
lea
push
mov
xor
add
push
lea
push
pushl
mov
call
mov
pushl
pushl
pushl
pushl
pushl
pushl
pushl
call
add
mov
mov
mov
mov
mov
mov
lea
mov
cmp
jb
mov
mov
mov
add
cmp
jae
sub
add
mov
pop
pop
pop
leave
ret
push
push
push
push
mov
mov
add
push
cld
mov
add
push
mov
lods
xchg
push
mov
or
shl
not
push
mov
or
shl
not
push
add
mov
sub
sub
inc
push
push
push
push
push
push
sub
push
or
mov
shl
lea
mov
shr
rep
push
pop
call
loop
lea
lea
mov
mov
sub
and
mov
mov
call
jne
mov
and
shl
sub
neg
shr
pop
add
pop
lea
shl
cmp
pop
lea
push
push
mov
push
mov
jb
mov
sub
movzbl
mov
shl
mov
and
add
lea
call
mov
shr
and
cmp
mov
jne
cmp
jb
jmp
mov
call
inc
inc
sub
sub
cmp
jb
pop
inc
cmp
dec
mov
jb
inc
cmp
dec
mov
dec
jb
mov
dec
sub
push
jmp
mov
dec
call
jne
pop
pop
pop
pop
pop
pop
pushl
push
push
mov
mov
jmp
mov
dec
call
jne
mov
dec
call
jne
pop
cmp
mov
jb
mov
push
mov
sub
cmp
jb
lods
mov
stos
jmp
mov
call
mov
je
mov
call
mov
je
mov
mov
mov
mov
mov
mov
mov
mov
pop
pop
pop
mov
mov
add
push
push
cmp
mov
jb
add
push
mov
call
jne
mov
mov
shl
sub
push
pop
lea
jmp
mov
add
call
jne
mov
mov
shl
push
pop
push
pop
lea
jmp
mov
add
push
pop
mov
mov
sub
inc
mov
call
mov
sub
jb
add
cmpl
jae
addl
mov
cmp
jb
push
pop
mov
shl
sub
inc
push
pop
lea
mov
call
mov
sub
jb
mov
mov
cmp
jb
mov
andl
shr
orl
dec
cmp
jae
mov
sub
mov
shlb
add
shl
add
mov
jmp
sub
call
shr
shll
cmp
jb
incl
sub
dec
jne
mov
add
mov
shll
push
pop
sub
inc
mov
mov
call
test
je
or
shl
dec
jne
jmp
incl
mov
add
mov
mov
sub
cmp
ja
mov
sub
mov
lods
stos
cmp
jae
dec
jne
mov
movzbl
cmp
jb
call
sub
lea
mov
mov
sub
mov
mov
mov
sub
mov
leave
pop
pop
pop
ret
pop
pop
sub
inc
jmp
cmp
jb
ret
shl
push
mov
cmp
jae
mov
shl
lods
mov
mov
pop
ret
mov
movzbl
shl
add
add
jmp
movzbl
add
mov
lea
sub
lea
cmp
jae
mov
shll
cmp
jae
mov
incl
shl
mov
mov
movzwl
shr
imul
cmp
jae
mov
mov
sub
shr
add
add
lea
ret
shr
sub
sub
sub
add
add
lea
ret
push
mov
sub
push
push
push
movl
movl
mov
mov
mov
mov
xor
mov
add
mov
mov
xor
add
mov
mov
xor
add
mov
mov
xor
add
mov
movl
movl
movl
push
pop
mov
mov
push
pop
mov
mov
movl
movl
mov
xor
add
mov
mov
xor
add
mov
movl
movl
movl
lea
lea
call
decl
jne
decl
jne
decl
jne
movl
mov
xor
mov
add
mov
mov
andl
xor
add
mov
mov
mov
mov
mov
mov
mov
mov
lea
mov
mov
lea
mov
mov
pushl
lea
mov
call
mov
xor
add
cmp
je
mov
mov
mov
mov
mov
mov
add
mov
mov
lea
push
mov
mov
mov
add
push
pushl
push
call
pushl
mov
mov
mov
movl
movl
movw
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
call
push
mov
mov
pushl
call
test
jne
mov
mov
mov
add
mov
mov
mov
call
push
mov
call
test
jne
mov
mov
mov
add
mov
mov
mov
call
push
mov
call
mov
mov
xor
add
cmp
je
mov
xor
mov
sub
add
mov
cmp
ja
movl
pushl
mov
mov
mov
call
push
mov
mov
pushl
call
mov
mov
mov
mov
mov
mov
xor
lea
call
push
mov
mov
pushl
call
mov
mov
mov
mov
xor
lea
call
push
mov
mov
pushl
call
andl
mov
and
add
push
call
test
jne
and
jmp
mov
mov
mov
xor
lea
call
push
mov
mov
pushl
call
mov
incl
cmpl
jb
mov
mov
xor
mov
add
lea
call
push
mov
mov
xor
add
lea
call
push
call
mov
xor
add
cmp
jne
movl
mov
mov
xor
lea
mov
mov
test
je
mov
mov
xor
lea
mov
mov
xor
mov
sub
add
mov
cmp
jbe
mov
mov
mov
cmp
jne
pushl
lea
push
call
mov
jmp
mov
mov
xor
add
xor
mov
mov
xor
add
cmp
je
mov
mov
xor
add
cmp
je
mov
xor
add
jmp
mov
mov
and
or
sub
add
mov
xor
lea
mov
cmp
jb
mov
mov
mov
movl
mov
mov
mov
mov
xor
add
mov
mov
xor
add
mov
movl
movl
mov
mov
xor
add
cmp
je
jmp
mov
mov
sub
mov
xor
add
xor
div
mov
mov
mov
xor
add
cmp
jbe
mov
xor
add
mov
mov
mov
xor
add
imul
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
add
movl
mov
movl
mov
movl
mov
mov
xor
add
jmp
movl
movl
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
xor
add
add
imul
add
mov
mov
mov
cmp
jb
mov
mov
xor
add
imul
mov
xor
add
or
mov
xor
add
mov
xor
add
mov
lea
jmp
mov
mov
xor
lea
mov
mov
xor
mov
sub
add
mov
mov
xor
add
imul
cmp
jbe
mov
mov
mov
mov
mov
xor
add
push
mov
xor
add
push
push
mov
mov
xor
add
push
call
mov
mov
xor
add
cmp
je
mov
jmp
mov
xor
mov
mov
mov
xor
lea
xor
mov
sub
xor
cmp
jne
mov
mov
mov
xor
add
push
mov
xor
add
push
pushl
call
mov
mov
mov
mov
mov
mov
xor
mov
add
movl
movl
jmp
xor
mov
xor
sub
mov
movsbl
movzbl
cmp
jne
mov
mov
xor
lea
xor
cmp
jne
jmp
mov
xor
add
mov
xor
add
cmp
je
mov
movl
movl
movl
movl
mov
mov
mov
xor
add
push
mov
mov
xor
add
push
mov
xor
add
push
mov
xor
add
push
call
mov
mov
mov
mov
xor
add
push
mov
xor
add
push
mov
pushl
xor
add
push
call
mov
xor
add
mov
cmp
je
mov
xor
add
cmp
je
movl
movl
mov
xor
sub
mov
mov
xor
sub
mov
mov
xor
sub
mov
andl
andl
lea
push
pushl
push
lea
push
mov
pushl
mov
add
push
push
call
mov
mov
mov
mov
xor
add
push
mov
xor
add
push
push
call
mov
add
xor
cmp
mov
mov
mov
jne
xor
add
push
mov
xor
add
push
pushl
call
mov
mov
mov
mov
jmp
xor
add
push
mov
xor
add
push
pushl
call
mov
mov
mov
movl
mov
mov
mov
mov
xor
add
mov
mov
xor
add
mov
movl
movl
mov
mov
xor
add
cmp
je
jmp
mov
mov
sub
mov
xor
add
xor
div
mov
mov
mov
xor
add
cmp
jbe
mov
xor
add
mov
mov
mov
xor
add
imul
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
add
movl
mov
movl
mov
movl
mov
mov
xor
add
jmp
movl
movl
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
xor
add
add
imul
add
mov
mov
mov
cmp
jb
mov
mov
xor
add
imul
mov
xor
add
or
mov
xor
add
mov
xor
add
mov
lea
jmp
mov
mov
xor
lea
mov
mov
xor
mov
sub
add
mov
mov
xor
add
imul
cmp
jbe
pushl
mov
pushl
lea
push
mov
mov
pushl
mov
mov
pushl
pushl
pushl
call
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
xor
add
push
mov
xor
add
push
pushl
call
pop
pop
pop
leave
ret
push
mov
push
push
lea
mov
push
mov
mov
mov
mov
cmp
pop
jne
movb
movb
movb
movb
leave
ret
push
mov
push
push
lea
mov
mov
mov
mov
mov
cmp
jne
mov
movb
movb
movb
movb
leave
ret
push
mov
push
push
lea
mov
mov
mov
mov
mov
cmp
jne
movb
mov
movb
movb
leave
ret
push
mov
push
push
lea
mov
push
mov
mov
mov
mov
cmp
pop
jne
movb
movw
movb
leave
ret
push
mov
push
push
lea
mov
mov
mov
mov
mov
cmp
jne
mov
movb
movb
movb
leave
ret
push
mov
call
mov
mov
movb
call
push
mov
movb
call
push
movb
call
movb
mov
jmp
push
mov
push
mov
push
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
movl
mov
movzwl
xor
add
pop
test
je
mov
movl
leave
ret
push
mov
sub
andl
movl
movl
movl
movl
movl
mov
mov
mov
mov
push
push
mov
mov
mov
mov
mov
push
mov
test
jne
pushl
mov
call
mov
mov
add
mov
mov
mov
mov
xor
mov
add
cmp
jne
mov
mov
mov
mov
mov
mov
xor
add
mov
mov
andl
xor
add
mov
lea
push
mov
xor
add
push
mov
add
push
mov
mov
movl
pushl
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
mov
lea
mov
lea
push
mov
xor
add
push
mov
add
push
mov
mov
movl
pushl
mov
call
test
je
andl
cmpl
jbe
mov
mov
sub
mov
incl
mov
mov
inc
cmp
jb
mov
mov
add
mov
mov
add
sub
add
mov
mov
mov
movl
jmp
add
shr
mov
je
lea
mov
mov
mov
mov
movzwl
mov
and
mov
mov
shr
add
xor
cmp
jne
mov
add
mov
cmpl
je
mov
add
mov
mov
mov
mov
addl
decl
jne
mov
add
mov
cmp
jae
add
mov
mov
test
jne
mov
mov
movl
mov
mov
mov
xor
add
mov
lea
mov
lea
push
mov
xor
add
push
mov
add
push
mov
mov
pushl
mov
call
mov
mov
add
mov
pushl
mov
pushl
pushl
call
mov
add
lea
mov
mov
mov
mov
mov
mov
mov
cmp
jb
mov
mov
mov
lea
mov
add
cmp
jae
mov
mov
mov
sub
add
mov
mov
jmp
pushl
call
mov
mov
mov
xor
add
mov
jne
mov
mov
pushl
mov
call
jmp
mov
mov
lea
add
xor
pop
pop
pop
leave
ret
push
mov
sub
push
mov
mov
cmpl
je
test
je
test
je
mov
test
je
cmpl
je
cmp
je
mov
andl
mov
sub
add
movzwl
mov
movzwl
add
je
lea
push
mov
mov
push
test
je
mov
andl
and
add
movzwl
movzwl
add
je
lea
mov
test
je
mov
andl
and
add
movzwl
movzwl
add
je
lea
mov
mov
mov
test
je
mov
add
movzwl
movzwl
incl
addl
add
cmp
jb
movzwl
movzwl
mov
incl
add
add
mov
cmp
jb
mov
movzwl
movzwl
incl
add
add
mov
cmp
jb
pop
pop
xor
inc
jmp
xor
pop
leave
ret
push
mov
mov
mov
sub
push
xor
push
push
cmp
je
cmp
je
cmp
jne
xor
inc
jmp
mov
add
mov
mov
mov
mov
add
add
mov
cmp
ja
mov
mov
cmp
jbe
cmp
jae
movzwl
jmp
mov
lea
mov
test
je
add
mov
cmp
jbe
mov
mov
add
cmp
jae
mov
jmp
sub
mov
mov
test
je
mov
inc
mov
cmp
jb
jmp
xor
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
movl
mov
mov
mov
mov
mov
mov
push
mov
push
mov
movl
mov
mov
push
mov
xor
xor
add
add
mov
cmp
je
mov
mov
xor
add
cmp
je
mov
mov
xor
add
cmp
je
add
mov
mov
xor
add
mov
mov
cmp
je
mov
mov
imul
xor
add
cmp
jne
mov
mov
imul
xor
add
cmp
je
mov
mov
mov
imul
add
mov
add
xor
mov
mov
mov
xor
add
xor
mov
mov
add
add
cmp
je
add
mov
mov
xor
add
mov
lea
mov
movl
mov
pushl
mov
call
mov
xor
add
mov
cmp
jne
mov
pushl
mov
call
mov
movl
movl
mov
xor
add
cmp
jne
mov
mov
xor
xor
lea
mov
mov
add
imul
push
call
mov
xor
add
cmp
jne
mov
xor
add
cmp
jbe
mov
xor
add
cmp
jne
mov
mov
xor
lea
mov
jmp
movl
movl
mov
xor
add
jmp
mov
xor
add
mov
mov
xor
add
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
mov
mov
mov
xor
add
cmp
je
mov
mov
xor
add
shr
cmp
je
mov
mov
mov
movzwl
push
pushl
call
jmp
mov
add
mov
mov
add
push
pushl
call
mov
mov
mov
xor
add
cmp
mov
jne
mov
xor
lea
mov
jmp
mov
xor
add
imul
mov
mov
mov
xor
lea
mov
mov
xor
add
cmp
jne
mov
mov
mov
sub
xor
jmp
mov
xor
add
cmp
mov
jne
mov
jmp
mov
xor
add
pop
pop
pop
leave
ret
push
mov
sub
movl
movl
mov
mov
push
mov
mov
mov
mov
xor
mov
add
cmp
je
mov
mov
add
push
mov
movl
mov
mov
mov
xor
xor
add
cmp
je
mov
mov
add
mov
mov
sub
mov
xor
add
mov
cmp
je
mov
xor
add
mov
push
movl
jmp
mov
xor
lea
add
shr
cmp
jae
sub
lea
mov
movzwl
and
mov
mov
mov
sub
add
movzwl
shr
xor
mov
mov
mov
mov
xor
lea
mov
mov
mov
xor
add
cmp
jne
mov
mov
xor
add
cmp
jne
mov
mov
add
add
decl
jne
mov
add
mov
mov
mov
xor
cmp
jae
add
mov
mov
xor
add
mov
cmp
jne
pop
mov
pop
jmp
mov
xor
add
pop
leave
ret
push
mov
sub
movl
movl
mov
push
push
mov
xor
push
mov
add
mov
mov
xor
add
mov
mov
mov
mov
xor
mov
addl
mov
mov
xor
mov
addl
mov
mov
xor
mov
addl
mov
mov
xor
mov
addl
mov
mov
mov
test
je
mov
test
je
mov
test
je
mov
mov
xor
mov
add
mov
cmp
jne
mov
xor
add
mov
mov
mov
mov
add
mov
mov
test
je
movl
mov
xor
add
mov
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
cmp
jne
mov
lea
push
mov
xor
add
push
pushl
pushl
call
mov
mov
mov
sub
add
push
push
call
mov
mov
mov
mov
pushl
pushl
push
call
mov
mov
add
movzwl
lea
mov
mov
movzwl
xor
add
mov
cmp
je
mov
xor
add
mov
mov
movzwl
xor
sub
sub
cmp
ja
mov
add
mov
jmp
mov
mov
lea
mov
mov
test
je
not
and
add
push
mov
add
push
call
mov
mov
mov
xor
add
cmp
je
push
mov
add
mov
add
push
push
call
mov
mov
mov
add
xor
lea
mov
mov
mov
movzwl
xor
sub
mov
sub
mov
cmp
jbe
mov
mov
cmp
jne
mov
lea
push
mov
xor
add
push
mov
pushl
push
call
test
je
mov
mov
mov
xor
add
je
andl
andl
mov
lea
movl
movl
mov
mov
mov
movl
mov
mov
xor
mov
add
mov
incl
cmpl
mov
jb
mov
mov
mov
mov
mov
lea
mov
mov
mov
movl
mov
mov
movl
movl
movl
movl
movl
mov
movl
mov
movl
mov
movl
mov
movl
movl
xor
mov
xor
sub
mov
inc
cmp
jb
mov
lea
push
call
mov
lea
push
push
call
lea
push
mov
pushl
call
mov
test
je
mov
jmp
mov
mov
cmp
je
mov
mov
cmp
jne
mov
mov
cmp
jne
mov
mov
mov
add
mov
mov
push
push
pushl
call
test
je
pushl
mov
pushl
call
test
je
mov
mov
mov
call
test
je
push
pushl
call
test
je
mov
mov
cmp
jne
mov
lea
push
pushl
mov
pushl
push
call
mov
mov
mov
xor
add
je
mov
mov
movl
mov
pushl
xor
pushl
add
or
add
push
call
movl
jmp
mov
mov
add
call
mov
mov
mov
mov
movl
cmpl
jne
andl
mov
jmp
xor
pop
pop
pop
leave
ret
push
mov
movzwl
movzwl
push
push
xor
lea
test
je
mov
lea
cmp
jb
mov
add
add
cmp
jb
add
inc
cmp
jb
xor
pop
pop
pop
ret
push
mov
sub
movl
movl
movl
mov
mov
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
mov
push
mov
xor
push
mov
mov
add
push
cmp
je
mov
mov
xor
add
cmp
je
mov
xor
add
mov
mov
xor
add
mov
movzwl
movzwl
mov
xor
mov
xor
mov
add
add
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
jmp
mov
mov
xor
add
cmp
je
mov
mov
xor
add
cmp
mov
mov
je
cmp
je
mov
mov
xor
mov
add
cmp
jb
mov
mov
xor
mov
add
cmp
ja
movzwl
movzwl
add
mov
mov
mov
xor
mov
add
cmp
jb
mov
mov
xor
mov
add
cmp
ja
movzwl
movzwl
add
mov
mov
mov
cmp
jne
mov
mov
xor
lea
mov
mov
mov
xor
lea
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
cmp
jne
mov
xor
mov
add
imul
mov
jmp
mov
xor
mov
lea
mov
mov
mov
mov
mov
sub
mov
xor
mov
cmp
jne
mov
mov
mov
sub
xor
cmp
jne
xor
jmp
xor
inc
jmp
mov
xor
add
pop
pop
pop
leave
ret
push
mov
push
mov
push
mov
sub
mov
xor
mov
movl
mov
cmp
je
push
push
movzwl
mov
mov
mov
cmp
jne
mov
lea
xor
mov
xor
mov
mov
sub
mov
xor
mov
cmp
jne
mov
pop
pop
cmp
je
xor
lea
pop
leave
ret
push
mov
push
push
push
movl
mov
call
mov
mov
add
xor
cmp
je
mov
mov
mov
push
mov
mov
sub
mov
xor
mov
cmp
jne
mov
lea
xor
mov
xor
lea
mov
add
xor
cmp
jne
mov
pop
cmp
je
xor
xor
mov
mov
pop
pop
leave
ret
push
mov
push
push
movl
mov
call
mov
mov
sub
mov
xor
mov
cmp
je
push
push
movzwl
mov
mov
mov
cmp
jne
mov
lea
xor
mov
xor
mov
mov
sub
mov
xor
mov
cmp
jne
cmpl
pop
pop
je
xor
inc
jmp
xor
pop
leave
ret
push
mov
push
mov
movzwl
push
lea
mov
push
xor
mov
mov
cmp
je
mov
sub
mov
jmp
mov
mov
add
movzwl
mov
add
xor
mov
cmp
jne
xor
pop
mov
mov
pop
leave
ret
push
mov
sub
movl
movl
mov
xor
add
mov
movl
movl
movl
mov
xor
mov
lea
mov
xor
add
mov
imul
cmp
jae
mov
mov
sub
mov
xor
add
cmp
jbe
mov
add
mov
add
mov
mov
mov
mov
mov
xor
mov
lea
mov
jmp
mov
mov
sub
mov
xor
add
cmp
jbe
mov
add
mov
add
mov
mov
mov
xor
mov
lea
mov
jmp
mov
mov
sub
mov
xor
add
cmp
jbe
mov
add
mov
add
mov
mov
mov
xor
mov
lea
mov
jmp
mov
add
mov
add
mov
mov
mov
inc
mov
jmp
leave
ret
push
mov
push
push
movl
movl
xor
inc
je
mov
xor
add
cmp
jne
jmp
mov
xor
add
mov
sub
mov
mov
xor
add
mov
add
mov
jmp
leave
ret
push
mov
sub
movl
movl
mov
mov
mov
push
push
mov
xor
mov
add
cmp
mov
jne
xor
add
jmp
mov
xor
add
cmp
jne
mov
jmp
lea
mov
mov
mov
mov
xor
add
mov
mov
push
call
mov
mov
mov
jmp
mov
sub
mov
mov
mov
call
mov
pushl
mov
call
mov
xor
add
cmp
jne
mov
call
mov
xor
add
push
pushl
pushl
call
mov
xor
add
cmp
je
mov
mov
mov
mov
mov
add
cmp
jne
mov
xor
add
pop
pop
pop
leave
ret
mov
mov
jmp
push
mov
mov
sub
cmpl
push
push
push
je
test
je
movzwl
mov
mov
xor
and
mov
xor
add
mov
andl
xor
push
pop
cmp
jae
lea
xor
movzwl
mov
lea
cmp
jne
movzwl
mov
cmp
jne
mov
movzwl
cmpb
je
mov
movzwl
movsbw
mov
sub
xor
cmp
je
push
pop
incl
mov
cmp
jb
jmp
incl
push
pop
mov
movzwl
cmpb
je
inc
cmp
jne
xor
pop
pop
pop
leave
ret
mov
add
xor
xor
cmp
sete
jmp
push
mov
sub
push
mov
mov
cmpl
jne
xor
jmp
push
pushl
call
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
push
mov
mov
call
push
mov
pushl
call
mov
test
je
mov
push
push
mov
add
mov
mov
mov
mov
add
mov
mov
add
add
mov
mov
mov
cmp
ja
mov
xor
mov
cmp
jbe
jmp
mov
mov
movzwl
cmp
jae
cmp
jae
mov
mov
mov
mov
lea
add
add
sub
movl
mov
mov
cmpl
jne
mov
pushl
push
call
mov
test
je
mov
mov
mov
addl
decl
jne
mov
inc
mov
cmp
jb
pop
pop
pop
leave
ret
push
mov
mov
push
pushl
lea
mov
call
mov
mov
mov
xor
cmp
pop
setne
mov
pop
ret
mov
push
jmp
xor
add
mov
add
add
movzwl
mov
cmp
jne
xor
mov
mov
pop
ret
push
mov
mov
shl
add
jmp
xor
sub
mov
inc
inc
mov
cmp
jne
movb
mov
add
pop
ret
push
mov
sub
push
mov
mov
lea
push
mov
mov
mov
mov
push
xor
mov
add
cmp
je
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
mov
movl
mov
mov
mov
movl
mov
mov
xor
mov
sub
add
mov
movl
jmp
mov
mov
xor
xor
lea
mov
xor
div
mov
mov
xor
xor
sub
cmp
jne
mov
add
mov
mov
mov
xor
xor
add
add
cmp
jae
lea
mov
mov
xor
add
lea
mov
mov
cmp
jbe
addl
jmp
addl
mov
xor
inc
incl
add
cmp
jb
mov
mov
test
jne
xor
sub
jmp
mov
xor
mov
sub
add
mov
xor
sub
ror
xor
mov
add
mov
mov
mov
sub
xor
cmp
jne
mov
mov
xor
xor
sub
sub
xor
mov
mov
xor
mov
sub
add
jmp
mov
xor
mov
sub
add
mov
mov
cmp
jne
mov
jmp
mov
xor
add
pop
pop
pop
leave
ret
push
mov
sub
movl
movl
mov
mov
movl
push
push
movl
mov
mov
mov
xor
mov
xor
add
add
imul
jmp
mov
mov
xor
xor
add
add
test
mov
mov
je
xor
xor
add
add
shr
mov
xor
add
xor
jmp
xor
xor
add
add
shr
mov
mov
xor
lea
mov
mov
xor
xor
sub
cmp
jbe
mov
pop
mov
mov
pop
leave
ret
push
mov
sub
movl
movl
movl
push
movl
mov
push
mov
push
xor
mov
add
mov
movl
movl
movl
mov
mov
mov
xor
xor
add
add
imul
jmp
mov
sub
xor
mov
lea
call
mov
mov
mov
mov
mov
mov
xor
lea
mov
mov
mov
xor
xor
sub
mov
cmp
jbe
mov
xor
add
mov
movl
mov
jmp
mov
mov
xor
add
shr
mov
mov
mov
mov
mov
mov
movzbl
xor
mov
mov
mov
xor
add
and
mov
mov
xor
mov
mov
xor
lea
mov
mov
xor
mov
sub
add
mov
mov
mov
xor
add
cmp
jne
mov
mov
xor
add
pop
pop
xor
pop
leave
ret
push
mov
mov
mov
mov
mov
mov
sub
push
push
push
mov
xor
mov
add
cmp
jne
orl
jmp
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
mov
mov
movl
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
mov
xor
add
mov
mov
xor
add
mov
mov
mov
sub
mov
mov
mov
mov
dec
test
mov
je
mov
mov
mov
dec
not
and
mov
mov
add
jmp
mov
mov
mov
xor
add
mov
mov
xor
add
mov
mov
mov
xor
add
mov
mov
movl
movl
movl
mov
mov
xor
add
imul
mov
mov
xor
lea
cmp
jae
mov
xor
add
mov
mov
add
mov
pushl
mov
mov
call
mov
movl
mov
xor
add
push
lea
push
call
mov
test
je
mov
xor
add
push
pushl
lea
push
call
mov
mov
mov
mov
sub
mov
mov
mov
mov
add
mov
cmp
jb
mov
mov
mov
add
mov
sub
jmp
push
pushl
lea
push
call
mov
mov
movl
movl
movl
lea
mov
lea
mov
lea
mov
lea
mov
mov
xor
add
mov
jmp
cmp
je
mov
xor
mov
add
mov
mov
xor
lea
mov
mov
mov
xor
add
cmp
jne
mov
xor
add
push
push
lea
push
call
mov
mov
xor
mov
mov
xor
movzbl
add
cmp
je
mov
mov
xor
mov
mov
xor
movzbl
add
cmp
je
mov
mov
xor
mov
mov
xor
movzbl
add
cmp
je
mov
mov
xor
mov
mov
xor
movzbl
add
cmp
je
mov
mov
xor
mov
mov
mov
xor
mov
xor
mov
mov
xor
mov
or
mov
mov
xor
mov
cmp
jne
mov
mov
xor
mov
mov
mov
xor
mov
xor
mov
mov
xor
mov
or
mov
mov
xor
mov
cmp
jne
mov
mov
xor
mov
mov
mov
xor
mov
xor
mov
mov
xor
mov
or
mov
mov
xor
mov
cmp
jne
mov
mov
xor
mov
mov
mov
xor
mov
xor
mov
mov
xor
mov
or
mov
mov
xor
mov
cmp
jne
lea
push
call
mov
cmp
je
mov
xor
add
mov
mov
xor
lea
xor
mov
mov
xor
add
cmp
je
mov
mov
xor
add
cmp
jne
mov
mov
xor
lea
jmp
push
pushl
lea
push
call
mov
mov
xor
add
cmp
je
mov
xor
add
push
push
lea
push
call
mov
add
mov
pushl
pushl
mov
add
push
call
mov
mov
xor
add
cmp
je
push
pushl
mov
add
push
call
mov
mov
add
mov
add
mov
mov
mov
xor
add
imul
mov
mov
xor
lea
cmp
jb
mov
mov
mov
jmp
mov
mov
xor
xor
add
add
cmp
jne
mov
imul
mov
jmp
mov
xor
add
cmp
je
subl
jmp
andl
pop
pop
pop
leave
ret
push
mov
and
mov
sub
push
mov
push
push
cmp
jne
push
jmp
mov
cmp
jne
push
jmp
mov
cmp
jne
push
jmp
mov
cmp
jne
push
jmp
mov
mov
cmp
jne
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
mov
add
mov
mov
mov
mov
mov
mov
mov
add
mov
mov
mov
push
push
pushl
push
call
mov
mov
pushl
xor
add
mov
lea
push
push
pushl
pushl
pushl
call
mov
mov
xor
add
cmp
je
mov
mov
xor
add
imul
mov
jmp
mov
cmp
jne
push
jmp
mov
cmp
jne
push
jmp
mov
cmp
jne
push
pushl
pushl
push
pushl
pushl
pushl
call
mov
mov
pop
pop
pop
mov
pop
ret
push
mov
sub
mov
mov
movl
mov
xor
add
mov
mov
push
mov
pushl
lea
pushl
push
pushl
pushl
pushl
call
mov
mov
leave
ret
jg
jge
xorb
movsb
ds
add
sub
add
fimull
fidivs
xchg
repnz
pop
gs
es
mov
mov
xor
insl
mov
cltd
jo
icebp
dec
loop
push
stos
and
js
push
leave
sbb
rcrl
out
mov
pop
mov
rcr
call
fildll
jb
mov
push
int3
sbb
dec
out
mov
ror
mov
inc
jecxz
out
pusha
push
sbb
sbb
clc
gs
mov
push
jge
pop
inc
add
int
mov
adc
mov
or
or
add
mov
pushf
dec
jno
mov
mov
mov
mov
mov
jns
mov
cmp
test
mov
imul
sub
cltd
add
jp
fcmovb
dec
xor
pop
lds
sbb
cs
insb
repz
hlt
or
mov
mov
or
inc
and
mov
sbb
push
cwtl
jb
push
inc
pop
call
lcall
adc
cmpb
je
fstl
sbb
cmp
sbb
fstpt
insl
cmp
inc
cmp
mov
mov
out
lock
faddl
and
lock
dec
cmpl
fisubrl
or
mov
mov
mov
testl
rolb
ret
repz
mov
imul
ds
xchg
cmp
loope
push
jmp
lret
inc
cmp
stos
cmp
dec
ja
mov
or
mov
mov
daa
inc
mov
push
fwait
pop
dec
push
int3
and
jge
and
out
lcall
jmp
mov
lods
fimuls
outsb
mov
lods
jbe
testb
daa
adc
sbb
decl
repz
cwtl
sarb
mov
adc
sub
cmp
cltd
jb
int
aad
xchg
cmpl
mov
aas
adc
adc
aam
fsubl
xor
fidivs
mov
cmp
add
cs
mov
pminsw
scas
fdiv
icebp
pop
pop
in
in
push
cmp
rclb
or
pop
lea
clc
mov
add
loope
sbb
adc
nop
fldcw
and
cwtl
out
mov
adc
out
ljmp
adc
or
sub
or
stos
add
jecxz
inc
pop
jae
imul
stc
sub
sbb
cmpsb
mov
mov
into
loopne
out
sahf
xchg
push
mov
mov
xchg
and
lods
push
sub
pushf
rcll
fidivl
pop
not
aas
ja
idiv
jg
mov
mov
xchg
sub
push
add
sub
add
mov
mov
inc
dec
andl
mov
push
mov
mov
int3
int3
addr16
add
lcall
cmc
lock
shrb
cwtl
scas
pop
cld
mov
test
adc
mov
cmc
or
or
outsl
dec
test
pop
inc
pop
adc
xchg
ss
shll
leave
pop
aaa
sti
dec
push
mov
mov
out
call
mov
mov
cmp
xchg
cmp
hlt
lods
in
inc
cmpsl
popf
or
pop
out
adc
repnz
push
cmp
mov
cmpsb
adc
push
push
int3
in
sbb
mov
xor
dec
mov
add
mov
pop
pushf
push
gs
lods
sbb
inc
sahf
jle
stos
mov
ja
cvtpi2ps
mov
dec
sahf
repnz
mov
inc
sub
lahf
sub
cmp
mov
addr16
movsb
leave
mov
fisttps
negl
dec
or
popf
fdiv
xor
push
mov
cmp
cmpsb
mov
mov
addr16
push
cltd
in
test
push
lcall
push
into
repz
std
mov
lahf
push
mov
mov
inc
cmc
leave
inc
rcll
in
shll
popl
loope
into
imul
lea
push
and
mov
scas
mov
push
shlb
mov
mov
mov
jne
push
cs
sub
jg
in
mov
jp
pop
insb
bound
jl
xor
lahf
pop
bound
jae
sub
loop
cmpsl
mov
mov
jge
lock
movsb
call
dec
fnstsw
push
jnp
in
xchg
pop
int
icebp
cmp
test
inc
add
jnp
roll
add
in
dec
dec
lods
movsl
dec
jbe
pusha
test
pushf
xchg
xchg
jae
sahf
test
add
add
cmp
test
jns
addr16
nop
mov
nop
out
mov
call
mov
dec
mov
mov
fildll
mov
test
add
xor
jg
xchg
xor
enter
aas
add
sbb
cmp
rol
xor
add
sub
push
pushf
push
test
shrl
insl
cmp
pop
in
cmp
cmp
in
out
into
fldl
sbb
xchg
insl
jl
aas
divl
add
in
aad
jnp
movsb
shrl
dec
out
inc
dec
mov
lcall
cmp
xor
aas
into
adc
pop
je
or
fildl
fisubs
cmp
mov
jns
inc
scas
nop
sub
adc
cmpl
iret
int
popa
sub
fcom
pop
adc
aam
push
mov
jge
and
add
mov
or
mov
hlt
jns
popa
repnz
idiv
loope
jns
mov
in
add
add
sbb
pop
xchg
mov
stos
xchg
inc
add
sub
add
ja
mov
ficompl
lret
insl
test
nop
xor
mov
nop
sub
jmp
cs
add
orl
cs
dec
icebp
clc
fadds
jge
fisubl
fldenv
cwtl
mov
add
jg
sub
sbb
inc
xchg
inc
adc
pop
arpl
imul
mov
push
loope
mov
sub
addr16
les
stos
ficoml
ret
and
mov
fisubrl
add
and
jbe
out
xor
jmp
jmp
test
orl
push
jl
nop
das
cmp
je
pushw
mov
cmp
cmp
dec
fidivrl
loop
sub
mov
push
mov
mov
inc
loope
cmp
xchg
inc
andl
fnstcw
loope
adc
jns
sbb
sbb
insl
movsb
bound
inc
mov
in
mov
lea
movsb
push
sarl
sbb
push
adc
push
and
xor
sahf
pusha
nop
popf
popf
int
lret
lcall
pop
lock
bound
or
andl
ljmp
push
stos
inc
daa
and
mov
stos
inc
mov
data16
xor
inc
xchg
mul
ret
jg
jb
cwtl
in
stos
aas
mov
lret
in
aad
aaa
insb
popf
pop
scas
outsb
lret
jns
jo
push
rclb
in
push
ss
jecxz
push
adc
cmpsl
dec
clc
repnz
adc
outsl
roll
daa
cmp
lahf
pop
sti
or
cmpsb
lods
jl
cmp
dec
je
jb
dec
mov
inc
jae
lret
mov
and
pop
xchg
cld
jle
dec
or
int
mov
xor
test
adc
fstpl
dec
lcall
mov
fs
push
jge
dec
xlat
leave
push
push
adc
add
cmpsb
inc
jb
leave
cli
jo
rep
xchg
push
cmp
cmp
pop
mov
cmp
dec
pop
clc
adc
pop
inc
ljmp
pop
call
cs
mov
mov
call
jne
fstpl
mov
sub
adc
jle
push
adc
pop
lock
aam
outsb
js
cmp
test
cmc
push
data16
bound
outsb
aad
mov
or
mov
xchg
scas
mov
aam
fcom
dec
arpl
xor
bound
pop
mov
orb
pop
enter
inc
jmp
cmp
insl
das
std
idivl
xchg
out
inc
shl
mov
or
out
adc
insb
rorl
lods
cmpsl
jo
inc
push
daa
in
std
push
cmp
adc
dec
cltd
dec
fs
mov
in
aaa
stos
xchg
cmp
pop
std
out
jl
in
and
cmc
movsl
outsl
cmpl
push
add
jnp
cs
dec
inc
jb
test
rol
in
cli
lds
mov
add
push
add
mov
jp
push
or
push
fs
add
add
pop
dec
aad
add
xchg
rcrb
cmp
mov
subb
jl
jno
push
mov
in
dec
test
and
sub
dec
and
enter
les
outsb
das
cmove
std
cmp
jl
sub
lock
insb
ret
rcrl
xor
out
xor
jns
fucomi
lock
and
xor
xchg
dec
inc
scas
and
push
xchg
xor
jo
aam
jmp
push
lcall
mov
xor
cmp
cmp
rclb
sarl
adc
insl
xchg
push
loopne
add
jle
push
ficoms
jle
cmc
inc
jge
push
add
xchg
xchg
pop
pop
stos
lods
inc
jns
cmp
out
clc
mov
repz
mov
fs
bound
pop
xchg
push
xlat
cmpsl
mov
mov
mov
xor
or
jg
sbb
sub
ret
cld
les
gs
inc
cs
push
stos
jo
push
cmp
cltd
movsb
pop
push
popa
mov
pop
cmp
lods
das
es
mov
jp
pushf
jno
repnz
xchg
sbb
sub
add
mov
icebp
xlat
mov
outsb
xchg
adc
mov
mov
add
inc
repz
dec
adc
push
insb
push
xchg
loop
adc
mov
test
sbb
fcmovu
outsb
adc
in
jb
push
fisttpl
mov
int3
ret
hlt
clc
or
xor
fsubl
fstps
sahf
je
mov
jb
pop
mov
testb
mov
jae
or
mov
gs
sbbl
in
cmc
ss
inc
insb
imul
and
cmpb
nop
ja
lret
mov
imul
lock
imul
or
movsl
sub
mov
adc
mov
add
sbb
xor
mov
mov
adc
rcll
mov
inc
mov
xor
js,pt
mov
and
lock
rolb
push
mov
mov
xchg
lods
xor
insl
iret
dec
dec
scas
imul
es
mov
adcb
jge
leave
mov
mov
mov
imul
mull
scas
push
pop
out
xor
fwait
adc
mov
cwtl
jns
or
jg
dec
pop
daa
mov
fcompl
push
fcomp
fmul
out
sbb
ret
xor
xchg
mov
addr16
test
sub
dec
ss
and
js
mov
frstor
pop
mov
roll
adc
jp
dec
sbb
jbe
fldenv
push
mov
adc
repz
pop
xor
int3
adc
xor
mov
sub
dec
xlat
shr
stos
mov
add
add
hlt
mov
std
jl
dec
pop
cmp
movl
sub
add
daa
inc
enter
pushf
xchg
nop
mov
xor
sub
pushf
push
xor
adc
mov
loopne
jno
adc
int
push
mov
dec
sub
stos
xchg
push
cmpsl
mov
or
loop
push
xchg
divl
clc
daa
roll
lret
test
jmp
ljmp
xlat
jl
aam
cmp
cs
aam
sbb
in
fs
pop
popa
xchg
sub
cld
lcall
and
andl
mov
iret
mov
or
sbb
mov
cld
pusha
or
repnz
cwtl
and
xchg
jae
lods
cmpsw
or
cmp
cli
push
xor
mov
dec
js
mov
jmp
mov
repnz
mov
mov
lcall
xor
es
mov
add
sbb
into
jp
mov
inc
cmp
jmp
sbb
negl
xor
test
movl
and
push
cld
cmp
out
xor
mov
push
les
jae
pop
sub
and
hlt
mov
cmpsl
push
lods
rcrl
inc
aaa
fs
dec
in
sbb
movl
ljmp
cmp
out
sub
dec
out
sub
jg
inc
xchg
sti
sub
fcoms
inc
xor
pop
jl
ret
fcoms
add
fsubp
pop
daa
add
aam
sub
push
dec
inc
out
add
nop
cmp
inc
lods
sbb
sbb
inc
xchg
xor
lea
push
cmp
jno
pushw
dec
jae
jbe
dec
stc
imul
ja
jne
and
mov
in
frstor
inc
xchg
xchg
aad
add
mov
jle
push
xchg
jmp
mov
fists
lds
repz
in
or
shl
sub
je
mov
sbb
mov
sbb
int
inc
out
addl
xchg
add
nop
or
jbe
out
loop
mov
xor
mov
or
xor
sub
stc
sub
test
rcll
jge
or
jb
dec
sub
sbbl
inc
push
xor
ja
fmull
ljmp
add
cmp
xor
test
stc
ret
mov
rclb
xchg
dec
addb
sub
add
fistpl
jg
cmpsb
push
aaa
or
popa
push
daa
fisttpl
xor
bound
movsl
mov
and
cld
das
mov
mov
sti
mov
popa
lods
shll
cmp
fstps
xchg
cltd
clc
xchg
push
add
sbbb
out
shlb
mov
sub
jecxz
jne
sbb
add
add
imul
fdivrl
mov
popf
rcrb
dec
add
sub
add
and
inc
sti
fidivs
push
clc
cmp
std
jae
mov
shll
out
xor
es
js
mov
xor
jp
inc
mov
push
movsb
and
test
mov
add
mov
xchg
sahf
adc
sarb
popa
push
mov
pop
stos
and
xchg
ds
mov
inc
adc
je
or
mov
inc
test
mov
repnz
enter
ret
ret
cmp
jbe
movsb
cmpsb
mov
rorb
jns
or
mov
test
test
pop
out
aad
fs
test
mov
mov
mov
cmpsl
xor
adc
lea
lods
sub
nop
stc
cwtl
shll
sbb
aam
pop
dec
sub
loope
addr16
repz
ret
std
jge
adc
xchg
dec
add
outsl
xchg
scas
lds
loope
fistps
dec
xor
mov
lret
mov
and
in
ljmp
in
cmpsl
sbb
in
pop
mov
or
jecxz
popf
jl
add
push
mov
mov
mov
jg
pop
push
cld
push
lds
ror
mov
hlt
cmpsb
aaa
loope
scas
xor
cltd
cmovne
cmp
fwait
xchg
pop
jns
mov
jg
cmp
movsl
or
negb
mov
or
xchg
jb
popf
xor
pop
push
mov
sbb
xor
lret
icebp
jns
enter
push
add
push
and
mov
int
push
test
cmpsl
cwtl
jns
insb
xor
jns
les
daa
scas
shll
sub
fidivrs
aam
xchg
fcoml
hlt
push
addl
add
jp
xchg
sub
pop
pop
push
mov
xor
push
cltd
mov
dec
into
iret
lods
push
loope
xchg
imul
sub
roll
add
lcall
push
or
push
sub
and
out
sub
push
xor
jmp
mov
int
insl
pusha
mov
repnz
out
mov
out
add
in
adc
sti
mov
sbb
xor
stc
push
or
dec
add
jno
xchg
in
jae
adc
cmpsl
or
mov
sub
mov
sbb
push
mov
les
mov
xor
daa
jne
aaa
hlt
xchg
adc
pop
lock
lods
mov
imul
mov
xor
push
dec
test
mov
in
sbb
inc
imul
popf
test
jbe
jmp
lds
or
adc
pop
dec
jne
or
popa
sahf
jg
mov
xchg
sub
sub
jo
mov
sbb
fs
add
sahf
adc
cs
xor
and
add
add
jg
pop
aad
inc
mov
push
inc
push
add
sub
add
sbb
pop
inc
inc
or
inc
inc
imul
leave
or
inc
adc
sbb
mov
push
and
pop
in
push
lahf
daa
lcall
xor
jge,pn
adc
sub
sarl
cwtl
jle
ljmp
cmpb
jno
adc
mov
popf
dec
sub
aas
shlb
cmp
js
sar
cltd
repz
das
movsl
fmul
xor
xchg
mov
ficoms
adc
clc
pop
cs
inc
gs
push
out
jl
mov
loop
xor
cld
sbb
kmovb
adc
pushf
fmull
in
lods
mov
dec
and
or
mov
mov
fwait
cmp
pop
stos
stos
fdivrl
aad
xchg
jl
push
inc
and
test
inc
out
cmpsb
jle
pop
mov
dec
pop
mov
pcmpeqb
sarb
sub
dec
lret
pushf
jmp
mov
adc
push
notb
popf
mov
inc
lock
std
sahf
movsl
cmp
jmp
ds
fdivs
subl
pop
sub
das
cmp
sub
jbe
xor
ljmp
mov
jae
mov
aam
enter
jae
cli
pop
mov
push
pop
pop
push
xor
pushf
cmp
ret
push
in
mov
adc
in
dec
aad
fnstsw
fimull
fistpl
lret
lcall
sarb
movsb
pop
cmp
rcll
dec
clc
roll
push
jne
push
call
add
mov
jno
movsl
sbb
mov
call
xchg
cmp
mov
into
ljmp
jle
xor
outsb
mov
jo
jo
sbb
test
cwtl
add
pop
lret
mov
and
sbb
fstpl
mov
fisttpll
cli
jmp
push
xchg
ret
fcmovnb
rcrl
dec
add
fisttpll
sub
lea
pushf
sub
mov
pop
cmc
adc
in
rcrl
adc
mov
aas
sbb
sub
add
push
sbb
mov
mov
in
mov
xchg
cmp
jne
pop
aaa
xchg
pop
addl
xchg
or
imul
mov
mov
pop
sbb
sbb
cmpsb
clc
push
lret
mov
cltd
dec
mov
in
mov
test
lds
push
push
movsb
pop
jle
mov
add
pop
add
out
adc
or
popa
shlb
xor
lret
out
mov
xor
push
rsqrtps
cmp
lahf
pop
xchg
insb
adc
jge
push
mov
lret
xchg
push
jne
cld
sbbl
cmpsb
xchg
or
mov
pushf
sbb
sub
sbb
ds
add
dec
enter
ss
lods
sbb
xor
sub
add
add
cmc
fistpll
stc
cmpsl
mov
dec
xchg
jg
jb
add
sub
add
mov
cmp
nop
pop
es
jnp
dec
jge
sbb
sti
enter
lock
or
cmp
fdivl
inc
xchg
mov
mov
mov
push
lret
cltd
mov
add
add
imul
in
jae
cmp
mov
adc
or
sub
xchg
aaa
or
popa
jnp
and
ret
mov
jg
out
sbb
inc
in
jbe
shr
insl
jl
stos
movsb
pop
fld
cmp
xchg
jnp
push
mov
ss
aaa
cmc
out
mov
push
imul
out
xor
sub
outsb
cmpl
inc
movsl
jp
lods
sbb
mov
in
movsb
enter
push
cmp
cli
addb
mov
test
push
daa
testb
mov
jb
std
aas
and
shlb
insb
sub
aas
jae
jnp
add
dec
sbb
jb
shlb
xchg
pop
mov
repnz
jge
ret
xor
outsl
xor
push
cmp
ss
sub
frstor
fsubs
cmpsb
add
sbb
aad
into
xchg
int3
pusha
jmp
sarl
out
dec
icebp
dec
push
negl
inc
mov
or
repz
adc
pop
cld
push
jb
iret
in
mov
xchg
dec
icebp
pop
pop
lods
shll
or
inc
arpl
mov
adc
xchg
test
inc
dec
testl
cmpsb
mov
adc
mov
cmp
jne
enter
add
lret
aam
mov
jns
decl
mov
xchg
ret
in
rcl
decl
push
sub
aaa
add
dec
mov
fisubrl
bound
ficoms
jo
addl
ret
mov
outsb
or
push
xchg
rcr
jecxz
dec
faddp
pusha
orps
mov
jae
testl
jg
jae
gs
fcmovnu
xor
jl
xor
addb
out
sbb
jb
jno
shlb
and
ret
or
mov
popf
in
addr16
outsb
fcom
cmp
out
insl
jl
sbb
jnp
in
add
fs
pop
sub
sti
mov
mov
jae
call
xchg
mov
loop
cld
jns
pop
cltd
adc
or
mov
gs
mov
xor
aad
adc
mov
into
js
testb
gs
push
popa
ss
mov
outsb
les
mov
into
sbb
mov
mov
mov
mov
dec
push
aad
je
addr16
xchg
scas
in
pop
enter
pusha
dec
fbstp
xor
sbb
loopne
dec
pop
mov
fimuls
push
test
mov
roll
xor
add
and
movsb
lea
lods
and
mov
data16
pop
add
sub
add
push
jp
lods
sbb
jmp
mov
in
pop
fisubl
ret
int3
push
popf
xor
adc
or
push
rcrl
sahf
push
lock
mov
mov
mov
in
ret
mov
cmc
cmp
mov
les
add
fnstenv
push
lahf
aaa
sub
pop
lock
testl
adc
aam
inc
leave
push
add
jb
mov
xor
xchg
mov
mov
jne
mov
cmp
into
setns
out
xchg
dec
pop
mov
jo
inc
loopne
pop
fdivrl
sbb
dec
enter
fnsave
push
mov
push
mov
pop
sbb
dec
add
and
cmp
mov
jmp
aad
xor
dec
mov
push
pushf
fs
jno
outsl
lahf
lock
push
add
pop
or
dec
mov
popf
mov
push
xor
dec
aam
pushf
mov
mov
shll
or
cmc
mov
mov
jae
mov
pushf
jo
ficomps
pop
cmp
jne
pop
stc
into
std
adc
and
enter
clc
jp
shl
adc
pop
inc
das
xchg
ds
inc
cmc
in
mull
or
jge
sub
or
ret
stc
inc
push
sbb
pusha
int
pop
mov
and
std
mov
test
negb
mov
insb
or
stos
mov
lret
inc
inc
lea
cmp
jb
arpl
cwtl
das
jmp
pusha
insl
int
lret
leave
mov
aaa
push
shrb
js
dec
movsl
sbb
mov
or
xor
pop
pop
gs
out
xchg
push
sahf
loope
sbb
out
lea
mov
jl
out
iret
fadds
lret
leave
movsl
xor
adc
les
call
js
sbb
push
aad
fadds
mov
push
jno
mov
fiaddl
sbbl
pop
push
test
fcoml
in
test
fildl
mov
pop
cwtl
adc
pop
mov
icebp
jns
lock
mov
add
andps
adc
push
je
lods
fistl
cmpsl
sub
jle
pop
sbb
js
sub
dec
sub
jp
fistps
dec
test
cmp
mov
cmp
xchg
pop
jno
shrl
xchg
outsl
pop
sub
cmpsb
sub
aas
nop
outsl
jge
fwait
push
lods
std
lods
pusha
fnstcw
ss
dec
stc
sarl
int3
jp
movsl
lahf
fstpl
mov
ljmp
or
roll
pop
pop
inc
xor
sahf
mov
rorl
lods
sti
or
jge
push
sub
dec
test
mov
push
fcoms
mov
inc
icebp
loop
repz
cwtl
xchg
stc
xchg
adc
cmp
aad
popf
aad
adc
js
cli
mov
mov
mov
cmp
test
inc
cltd
lret
add
add
gs
out
and
out
or
sahf
dec
movsb
int
mov
push
and
or
test
sub
imul
jo
lcall
popa
adc
sub
fdivrl
adc
xor
or
cmpsl
call
call
xchg
popf
mov
cs
and
push
add
insl
add
adc
dec
cmpsl
scas
dec
inc
in
inc
or
loop
xchg
lods
loope
lret
lret
mov
pop
jne
fisubrl
inc
popl
push
lret
add
or
ret
rcrb
mov
cli
mov
sub
pop
and
pop
lock
nop
testb
pop
mov
jge
sbb
leave
bound
lods
jg
jecxz
jb
cmp
ljmp
jle
mov
dec
test
dec
xor
dec
lds
fs
jo
xchg
addr16
mov
in
movsl
imul
push
dec
push
pushf
fisttpll
in
aam
nop
test
and
xchg
push
je
js
mov
jg
push
xchg
dec
push
add
add
shld
mov
xlat
punpcklwd
inc
mov
add
les
es
gs
aas
push
aam
sbb
cld
mov
mov
cmp
ret
orl
cmpsl
cmp
or
insb
lds
sar
and
fbld
jp
jno
stos
xlat
enter
mov
and
add
mov
add
pop
inc
jne
std
sbb
or
xor
jbe
fimull
ret
cltd
lods
xchg
cmp
mov
mov
repnz
orb
addr16
loopne
les
jmp
inc
fs
inc
and
jb
ret
or
addb
in
adc
lods
xor
dec
movsb
cmp
ss
mov
lods
stc
pop
pop
mov
lahf
push
mov
rclb
xor
ja
mov
push
jp
mov
jo
in
jecxz
ja
inc
jbe
addb
mov
mov
xchg
pop
inc
daa
sub
mov
inc
test
inc
xor
dec
stos
pop
hlt
sub
hlt
pop
lock
orl
mov
jns
mov
xchg
cs
xchg
sti
add
outsb
push
pop
in
int
cmpb
popa
out
insl
xchg
fwait
int3
pop
jmp
aaa
pop
adc
shll
cli
push
mov
subb
mov
dec
cmp
pop
stos
mov
mov
loop
test
stc
lcall
xchg
rolb
mov
out
dec
push
outsb
and
in
cmp
aad
out
jp
out
cli
jge
ret
add
mov
in
shl
add
shrl
add
cmpsb
loop
stos
jge
repz
ret
in
mov
sub
or
inc
out
shrb
ljmp
adc
cmp
xor
jno
pop
jns
lret
mov
lahf
jb
ja
aad
add
add
xchg
std
jg
in
pop
out
ret
mov
negb
add
add
cli
fmuls
sbb
pop
cmp
fidivrl
lcall
roll
js
int3
mov
mov
in
xchg
repz
add
data16
mov
mov
mov
cmpl
add
ja
aad
cltd
inc
scas
scas
dec
lret
dec
add
lea
hlt
out
int
mov
mov
adc
xorl
ds
test
test
adc
mov
mov
mov
jnp
outsl
fucomp
mov
xor
repnz
sub
ja
mov
cmp
add
pop
mov
push
xchg
mov
nop
jge
pop
pop
mov
lds
jae
push
sti
call
xor
sub
jle
adc
push
lfs
out
dec
jecxz
mov
movsb
jecxz
lahf
lods
sub
inc
je
faddl
and
pusha
push
cmp
jnp
sbb
call
inc
adcl
mov
les
scas
lea
ss
xor
mov
loope
aas
ss
sub
lds
inc
fdivrp
lea
jp
xchg
cmpsb
shl
lret
mov
and
push
jbe
scas
test
popa
rorb
push
mov
movsl
add
addl
std
scas
mov
push
or
insb
out
insb
data16
mov
in
push
dec
ds
or
fmull
adc
leave
xor
ror
cmp
in
outsb
push
cwtl
xchg
cmpsb
inc
leave
add
sbb
sub
loopne
dec
in
pop
sti
clc
mov
or
fs
frstor
mov
jnp
mov
pop
lret
cwtl
shlb
adc
out
lret
jg
dec
shrb
test
mov
lret
jge
cmp
sbb
add
popa
cmp
fiadds
mov
xor
and
xchg
mov
mov
adc
or
jg
sbb
mov
je
pop
cmp
into
loopne
movsb
jbe
sub
stos
loope
repz
sub
pusha
push
ljmp
pop
fcomps
icebp
adc
sub
inc
sbb
sbb
scas
mov
stos
cmp
enter
mov
adc
cld
out
add
mov
mov
notb
adc
xchg
fdivl
xlat
bound
jge
loope
jle
and
jno
xchg
adc
mov
adc
pop
ljmp
push
je
enter
popa
xchg
xchg
xchg
xchg
nop
jne
in
scas
push
inc
es
shl
out
pop
lcall
int3
jg
lcall
mov
lods
xor
out
cmp
or
sub
mov
mov
sbb
mov
call
dec
push
das
mov
fcomps
stc
push
pop
push
inc
push
mov
mov
idiv
iret
std
mov
mov
sub
add
out
pop
clc
xor
dec
cmc
gs
pop
int3
xchg
sub
ja
enter
lret
imul
stos
sbb
notl
enter
xchg
aam
adcb
mov
gs
adc
xchg
dec
lret
subl
pop
icebp
mov
sahf
inc
add
jnp
sbb
push
ficoms
ret
dec
cmp
loopne
je
inc
sahf
add
hlt
xlat
cltd
lock
dec
mov
dec
mov
sbb
test
loope
jge
aaa
cmc
in
pusha
xlat
xor
gs
jno
jmp
hlt
sub
or
out
idivb
popf
dec
dec
sub
cmp
add
add
push
enter
inc
fstpt
testb
sbbl
sub
cmp
xor
adc
fstpt
xchg
repz
push
and
jmp
mov
cmp
das
mov
nop
push
xchg
mov
push
or
inc
lds
aaa
push
pop
push
or
xchg
push
lods
xchg
jg
jg
add
dec
sarl
xlat
daa
nop
rcll
imul
mov
sbb
ret
mov
sbb
dec
mov
push
sub
call
orl
pop
aad
push
mov
outsl
scas
mov
push
bound
pop
mov
bswap
les
push
jmp
test
add
in
adc
cmp
std
ds
sbb
push
jg
push
sub
push
ja
pop
xor
fwait
add
or
adc
xchg
in
sar
jbe
or
mov
or
stc
jae
pop
jmp
push
mov
mov
daa
xchg
and
loopne
aad
out
mov
mov
mov
gs
jnp
jae
imul
sub
popa
loope
movsb
hlt
sahf
fs
jns
sub
dec
orl
dec
jae
mov
mov
lcall
aas
xchg
arpl
mov
jmp
rorl
or
mov
pop
sbb
mov
shlb
xchg
mov
jg
fstpl
movsl
test
ja
data16
jecxz
inc
cmp
loop
inc
mov
adc
loope
mov
ja
jmp
xchg
ja
pop
and
test
cltd
in
loope
xchg
or
pop
xlat
add
adc
or
fisttps
mull
jb
lret
test
adc
repz
push
fs
mov
or
test
mov
bound
sbb
sub
loopne
ds
hlt
mov
cmp
loope,pn
imul
xor
and
decl
iret
js
rol
aam
jae
jno
jo
xor
negb
icebp
and
cmp
inc
addr16
mov
add
add
ret
mov
out
mov
fimull
add
sub
add
push
or
add
fs
stos
lea
push
ds
add
mov
sbb
mov
scas
pop
jge
adc
cmp
adc
icebp
mov
jp
mov
xchg
loop
sti
icebp
ret
xor
enter
push
js
jne
mov
xor
jo
or
decl
inc
sub
shrb
iret
cmp
xor
push
sbb
loope
ret
pushf
pop
push
inc
mov
xchg
ret
inc
jae
dec
int3
adc
fsts
movsb
jns
lahf
out
inc
out
inc
push
fs
orb
cmp
sbb
mov
inc
lcall
pop
outsb
aas
push
ja
sbb
inc
inc
cmpsb
dec
sbb
stc
out
repnz
sub
insb
mov
loope
imul
jmp
mov
movsl
xor
pushf
jl
fnstenv
fcomps
adc
das
inc
cs
xchg
xchg
jmp
and
inc
leave
orl
add
mov
sub
lcall
notl
xchg
mov
and
mov
mov
imul
data16
into
push
lcall
aam
sub
pop
push
std
jbe
mov
mov
enter
jno
sbbl
sub
jmp
mov
add
mov
adc
cmpsb
sbb
repz
pusha
test
or
mov
aas
jno
pushf
inc
inc
inc
and
sbbl
rorb
shr
pusha
je,pt
inc
pop
sbb
sahf
xchg
pop
test
pop
test
adc
or
sub
mov
xchg
dec
jecxz
jle,pt
aaa
xor
lods
fimull
xchg
ret
cmp
mov
fucomip
fcoml
xchg
fldl
lcall
mov
jae
sbb
mov
xor
ss
out
mov
dec
mov
fdivs
mov
sahf
call
int
aas
add
push
dec
lret
sbb
aam
push
push
cmp
push
clc
lods
imul
test
mov
test
jp
test
sub
popa
jns
fcompl
mov
mov
dec
or
and
call
lahf
adc
mov
xor
xchg
lods
push
mov
das
rorl
push
ss
adc
jg,pt
pop
mov
xchg
push
sahf
je
js
jg
inc
dec
cld
cld
mov
jge
dec
stos
lret
xchg
pop
sbbb
data16
mov
popa
das
and
push
pop
adc
loop
xchg
leave
movsl
sbb
push
and
push
inc
dec
cwtl
pop
mov
mov
cmp
pop
loop
sbb
push
cmp
aas
rcll
js
adc
inc
push
mov
loope
xchg
add
xchg
cmp
mov
inc
jge
pop
jnp
in
mov
add
push
push
jle
xlat
outsl
mov
lcall
add
sub
add
sub
pop
mov
jp
movsl
mov
or
vpunpckhwd
add
xchg
inc
push
and
sarb
xchg
outsl
aas
out
pop
pop
or
and
enter
push
sahf
cltd
sbb
jbe
mov
adc
mov
out
inc
jne
neg
ret
dec
jno
mov
repz
bound
fwait
movsl
movsb
stos
cs
sub
xor
sbb
ds
decl
in
iret
out
xchg
sbb
adc
mov
les
mov
pop
iret
push
das
mov
fisubl
les
xchg
repz
repz
jmp
movsb
inc
pushf
cs
xor
xchg
into
enter
inc
or
das
mov
pop
sub
push
or
jne
stc
add
aam
cli
dec
xchg
lret
in
sub
or
jecxz
add
push
push
push
jle
in
xchg
mov
jmp
or
inc
xor
or
push
dec
mov
xchg
loop
jo
int3
xor
rcrb
sti
mov
jp
ja
and
mov
cmp
andl
pop
sbb
fiadds
cld
and
sub
push
arpl
rcrl
aad
mov
xchg
jbe
xchg
pop
cmp
es
sahf
xor
dec
xor
xchg
xor
pop
cmp
mov
inc
dec
pop
popa
pusha
fstps
or
sbb
cmpsl
sbb
add
jne
jo
rorl
orw
add
loopne
lock
cmpsb
or
lret
iret
ljmp
pop
pop
sbb
xor
mov
and
add
cmp
xorb
testb
mov
mov
mov
sub
mov
cmpb
jp
xchg
cmp
mov
xorl
lods
sarb
call
imul
mov
sti
and
xor
push
insb
mov
and
scas
sub
and
and
jp
xor
popa
push
addr16
jnp
incb
mov
in
les
std
out
dec
and
mov
or
mov
bound
and
sub
insb
loope
movsl
loop
repz
inc
mov
out
dec
or
loop
push
jmp
adc
rolb
int
xor
pop
fidivrs
pop
push
addr16
or
jmp
aam
lods
ja
mov
mov
inc
pop
mulb
mov
cmp
inc
cmp
out
push
int
aas
push
adc
mov
in
xchg
stos
mov
aad
sbb
ss
gs
xlat
enter
mov
lcall
jge
mov
cmp
mov
pop
mov
mov
pop
bound
jmp
fcomi
jo
test
mov
push
and
cmc
vcvttpd2dqx
mov
add
adc
or
pop
out
repz
fildl
cmpsb
imul
sub
add
enter
pop
outsl
popa
mov
iret
pop
push
outsb
data16
out
add
pop
cmp
hlt
arpl
in
push
adc
pop
add
lds
cmpsb
xor
jns
lret
lret
push
repz
push
lret
xchg
cmpsl
ljmp
cltd
mov
mov
fucom
push
rclb
lret
negb
mov
lock
pop
sarl
mov
xchg
nop
test
jl
lods
les
jge
jmp
and
add
adc
cmpsl
mov
mov
xor
call
fwait
enter
pop
les
dec
push
pop
out
loop
je
xchg
clc
mov
cmpsb
push
out
out
sbb
cmp
xchg
sbb
add
lods
and
dec
or
test
mov
pop
mov
or
xlat
and
inc
xor
jecxz
sbb
rcrb
lret
lock
sub
fwait
mov
daa
xor
add
xchg
sub
or
sbb
ss
loop
jnp
sahf
pop
loopne
lea
int3
jb
mov
sbb
dec
xchg
and
pushl
mov
jnp
dec
sub
aaa
dec
xor
fsubrl
mov
jmp
pop
and
xchg
ja
inc
adc
fistpll
mov
push
or
inc
aad
sbb
jbe
cmpsb
xchg
lahf
icebp
pop
gs
fmul
and
mov
sub
mov
xchg
mov
rcr
push
jae
sub
and
out
jmp
jne
loop
js
imul
adc
cmp
jns
sbb
dec
fwait
iret
adcb
push
shrb
nop
out
es
add
dec
xchg
pop
cmp
and
cwtl
repz
pop
xchg
cmp
or
push
lahf
stc
cmc
in
mov
xor
ret
jnp
pop
mov
sub
and
out
iret
mov
sbb
and
mov
fimull
in
inc
arpl
popa
outsl
push
repnz
ror
inc
xor
jb
dec
cmp
dec
loop
mov
movsb
mov
rorl
stos
pop
xchg
sub
lcall
push
mov
in
loopne
call
cmpb
fisttps
xchg
data16
xchg
movsb
lods
jle
outsl
dec
sub
es
lods
sub
jmp
push
jmp
cmp
dec
dec
inc
mov
inc
mov
sahf
inc
std
icebp
int
call
lea
sub
repz
sbb
es
pop
ss
data16
jne
and
pop
mov
and
in
pop
bound
mov
xchg
jmp
jno
pop
pop
in
adc
xchg
addr16
testl
aas
icebp
jecxz
cmp
push
lods
push
xchg
sbb
mov
push
mov
inc
mov
fistpl
in
mov
leave
xchg
insl
mov
aam
inc
fsubs
outsb
add
sub
add
in
in
xchg
mov
pusha
xchg
out
movl
cmpsl
xlat
pop
das
aam
jnp
jbe
sub
push
movsb
pop
mov
xchg
insb
test
jg
test
bound
mov
in
mov
add
hlt
rol
xor
fadd
mov
add
mov
jle
xchg
add
xchg
xor
adc
jle
adc
adc
xorb
les
pop
add
addr16
or
cld
ficoms
mov
add
test
mov
lcall
pop
repnz
sbb
inc
mov
mov
or
arpl
xchg
push
cmc
cwtl
jmp
pop
pop
jmp
shrb
jl
or
push
es
sub
add
enter
and
inc
inc
cli
adc
mov
push
cs
mov
out
popa
sbb
pop
jo
mov
ret
jo
mov
jg
inc
push
mov
popf
dec
repnz
movsl
sub
inc
fistl
popa
push
or
dec
push
push
or
adcb
xchg
or
test
test
push
inc
mov
popf
mov
mov
test
into
lods
sbb
sbb
lcall
inc
lea
adc
push
out
sahf
imul
pushf
push
sub
cmp
in
jge
inc
inc
popf
out
pusha
dec
mov
add
out
rcrl
int
and
dec
xor
jl
jecxz
pop
jmp
ficompl
int3
out
adc
inc
mov
rcll
aas
adc
jne
fistpll
std
addl
popf
mov
push
xchg
mov
inc
inc
cmp
jb
mov
loop
orl
idivb
cltd
sbb
sti
or
or
or
adc
pop
cmp
and
jmp
xor
xor
inc
lahf
sbb
int
or
cli
pop
pop
mov
mov
hlt
adc
add
inc
bound
aam
xchg
mov
into
sbb
jnp
inc
lock
sbb
xchg
pop
sub
cmp
std
dec
out
aad
mov
in
push
arpl
push
add
mov
jl
sbb
gs
ja
in
incl
and
aad
shl
or
idivb
pop
mov
sbb
aaa
jo
dec
and
fsubr
ss
adc
and
lods
ret
aam
sarb
sub
mov
xchg
ja,pt
cmp
push
cmpsb
fisttpll
mov
push
push
adc
cltd
xor
jmp
lods
pushf
and
imulb
les
mov
loope
pop
cwtl
fidivl
mov
hlt
les
push
fmull
dec
mov
add
loop
mov
sub
jl
inc
cmp
sbb
mov
pushf
mov
xchg
mov
je
call
dec
out
ja
idiv
pop
out
dec
mulb
or
add
sub
add
repz
xor
push
in
lahf
xorb
push
mov
fistps
sahf
mov
mov
pop
jp
pop
test
mov
sub
xor
stos
int3
sub
or
jge
mov
sub
jns
sbb
loopne
lock
test
cmp
sub
fmull
cwtl
xor
imul
bound
shrb
imul
push
outsl
cs
xor
in
imul
nop
inc
fsubrl
pop
dec
and
cmpsl
jb
mov
nop
arpl
faddl
jns
sub
lahf
xor
stos
addr16
sbb
mov
pop
enter
popf
xor
xchg
test
dec
dec
mov
scas
leave
jno
insl
add
add
mov
push
jmp
xchg
push
outsl
addl
rcrl
ss
add
pop
mov
scas
xchg
inc
cmc
in
jmp
push
outsl
pop
scas
popa
jmp
test
xchg
dec
cmpb
loopne
fdivrs
xor
test
mov
pop
fistps
sahf
cmpsb
repz
and
rol
inc
mov
pop
sbb
push
or
adc
push
jnp
and
add
jp
or
xchg
jnp
fneni(8087
jge
mov
xchg
ret
ds
sbbb
or
adc
jno
xor
scas
cmpsb
add
dec
jmp
pshufw
lret
cmp
push
adc
jae
pop
js
movsb
sbb
arpl
movsl
sbb
cmp
add
and
rclb
sub
in
das
mov
push
cmpl
push
or
sahf
jo
js
stos
addr16
movsb
mov
add
and
jbe
fistpll
inc
loopne
test
in
fistps
iret
fists
iret
addr16
stc
xor
sub
fmulp
sbb
xor
ret
pop
sub
arpl
xor
dec
xor
add
out
mov
push
cltd
pop
xchg
frstor
mov
fisubl
cmp
and
push
jle
dec
push
push
or
bound
test
aad
xchg
stc
inc
cmp
xor
scas
add
mov
push
adc
or
mov
jp
cmp
and
inc
loope
pop
cli
xorl
adc
ljmp
test
xor
inc
sti
mov
les
push
dec
sub
dec
add
xchg
sub
adc
cmp
pop
ffree
fisttpl
test
xchg
xor
and
decl
dec
pushf
xor
std
jl
fistl
cmpsb
add
lret
push
dec
ljmp
lds
push
cmp
test
fcmovbe
sbb
bnd
fcomps
ret
push
sar
cmpsl
mov
or
out
clc
xchg
mov
add
mov
pop
jecxz
sti
mov
test
jne
add
add
ds
and
sahf
inc
sahf
shrl
cmpsb
add
popf
shll
shlb
dec
lcall
lea
aaa
popa
adc
fistl
ja
cmpsl
gs
stos
pushf
fbstp
cmp
clc
inc
pushf
fcompl
ss
or
dec
pop
daa
ret
mov
cmp
jg
sbb
into
and
aam
cmp
mov
out
adc
out
movsl
out
jmp
push
cltd
frstor
mov
push
subb
jle
popl
add
and
ret
jae
pop
test
addr16
movsb
daa
and
cs
les
xchg
fxch
xlat
aaa
imul
cwtl
inc
or
outsl
xor
jb
jbe
mov
push
inc
cld
subb
and
or
test
cmpsb
out
aam
repz
xchg
push
fisttpll
arpl
aaa
push
repz
fdivr
sbb
les
mov
mov
jnp
lock
stos
or
push
jp
movsl
int3
mov
cmc
and
out
cli
lcall
dec
xorb
pop
mov
sbb
mov
cs
or
jno
vpsraw
std
pmaxsw
cmp
or
cmpsb
lret
shll
xchg
hlt
aaa
mov
clc
inc
sbb
jns
lods
jmp
and
mov
lods
or
adc
and
cltd
aas
mov
fdivrl
mov
orl
mov
inc
dec
or
incl
je
rorb
outsb
mov
fldt
jae
lret
push
cmp
in
fcoml
mov
xor
outsb
sbb
das
xchg
fcomps
clc
imul
sub
add
pop
dec
jmp
dec
loop
jecxz
mov
push
data16
dec
mov
cmpsl
or
jge
xor
fmull
fsubrl
xchg
add
fstpl
loopne
outsl
pop
ffree
pop
adc
and
rcll
lods
sbb
es
movsl
mov
pop
cmp
fisttps
mov
xchg
pop
leave
shlb
insl
push
xchg
mov
pusha
pop
cmp
loop
sahf
daa
xchg
push
or
pop
rolb
adc
das
sub
mov
jl
xor
cmp
ds
xchg
lods
xor
out
mov
add
push
mov
ret
xor
xchg
sbb
and
and
out
xor
add
mov
stc
adc
xchg
xor
in
pop
mov
inc
xchg
insl
cwtl
das
cmpsb
inc
jb
inc
addl
mov
nop
dec
sub
daa
fs
jns
fidivs
xor
inc
push
xor
rorl
dec
test
xchg
push
jo
push
nop
jle
int
scas
mov
loope
dec
push
xor
sahf
xor
mov
push
js
add
add
cmp
fisttpll
and
cli
pop
cli
in
lods
mov
adc
into
jmp
or
cmc
adc
or
mov
mov
imul
into
cs
mov
and
fildl
dec
mov
sub
xchg
stos
ss
jns
daa
or
lret
xchg
xchg
sbb
cld
repz
mov
add
sub
mov
cli
push
dec
insl
xchg
imul
xor
jl
pop
inc
js
add
je
mov
push
push
add
mov
pop
mov
filds
adc
divb
sbb
hlt
pop
fmull
xor
sbb
cwtl
xor
ds
xchg
mov
mov
aad
dec
sbb
pop
in
lds
sub
xchg
movsb
idivb
fstps
jge
push
int
cmp
push
pushf
lahf
hlt
js
jge
jge
lods
mov
cmp
int3
xor
xlat
fists
sbb
out
xchg
insl
test
push
sbb
outsb
mov
or
and
repnz
pop
call
addr16
push
pop
in
or
adc
loop
fcos
aas
push
pop
xchg
and
mov
popf
xlat
mov
dec
xchg
gs
and
fldt
jne
sti
cs
in
dec
pusha
push
fs
jmp
add
out
pop
scas
icebp
sbb
in
popf
out
jl
jg
inc
cmpsl
sbb
out
pop
test
add
jo
adc
sub
cwtl
lahf
lods
xor
xchg
sbb
jo
or
sub
pop
ret
test
in
out
fld
stos
gs
and
fwait
aaa
outsl
mov
sub
callw
dec
cmpsl
sbb
and
cmp
jecxz
iret
push
xchg
inc
add
mov
inc
sub
outsl
adc
loope
fnsave
mov
and
pop
push
inc
div
movsl
and
fdiv
clc
ja
notl
imul
inc
cmp
jbe
add
in
inc
and
sbb
bound
enter
mov
addr16
mov
decb
adc
mov
fs
inc
movsb
hlt
data16
rcrb
loope
ja
shr
inc
push
gs
negl
outsl
rol
jo
xchg
dec
mov
xor
push
sarb
xor
pop
in
cmp
lods
fwait
and
clc
jnp
inc
and
stos
fisubl
ret
mov
xchg
xor
popa
or
js
jno
adc
jno
jo
jbe
mov
xor
pop
sub
jle
setnp
movsb
loope
test
jno
cli
push
movsl
sub
pop
shl
xor
add
into
enter
add
je
push
mov
fwait
cmp
fstps
call
rolb
and
push
jp,pt
cwtl
out
pop
test
idivb
ret
push
sub
mov
movups
push
into
pop
out
aaa
push
fisubrs
and
push
adc
inc
js
out
xor
stc
std
in
mov
mov
std
pop
xor
pop
xor
cmpb
sub
add
stc
jb
mov
loopne
bound
xchg
sub
pop
jo
xchg
lods
int3
jne
push
push
inc
xchg
cld
xchg
repz
mov
fistpl
xchg
cwtl
dec
or
mov
arpl
sub
add
cmc
mov
repz
nop
mov
shll
push
xor
or
insl
inc
lea
scas
imul
cmp
lea
or
repnz
inc
inc
fdivrp
mov
xor
adc
lock
sbb
xor
or
mov
mov
jo
test
out
sub
xchg
in
out
push
pop
or
xchg
adc
shr
inc
fsub
lds
sub
loopne
loop
push
into
jbe
pop
or
popf
rolb
cmpl
addl
sbb
inc
dec
pop
push
ds
xchg
add
and
and
sahf
hlt
cmp
push
outsl
das
in
out
lret
enter
shrb
popa
cmp
inc
sbb
add
fs
scas
pop
adc
xchg
pop
imul
pop
cld
push
mov
inc
mov
inc
inc
lret
fbld
leave
mov
and
dec
loope
repnz
sti
int3
sub
std
xchg
dec
movsb
test
inc
push
sub
jb
xchg
inc
dec
cs
sti
loop
xlat
xor
lea
adcl
shr
daa
xchg
sub
popa
movsb
stos
push
pop
push
bound
add
sahf
ret
jb
add
test
fisttpl
mov
mov
imul
xchg
pop
cmpsl
add
mov
mov
cmpsb
add
add
xor
movsl
sbb
stos
ja
inc
shlb
inc
sub
mov
stc
scas
adc
inc
jmp
sub
push
insb
mov
repnz
out
mov
mov
and
das
jns
inc
pop
pop
divb
add
sub
ds
xchg
shrl
mov
arpl
nop
ret
cltd
push
mov
add
xchg
cmp
mov
sub
sub
mov
jecxz
js
andl
sub
dec
iret
sub
dec
or
insl
lods
mov
jecxz
sub
data16
insl
in
pop
das
sub
cmp
js
gs
xchg
xchg
push
push
adc
mov
in
adc
mov
sahf
sbb
jbe
repnz
insb
fdiv
gs
pop
rclb
pushf
or
jg
cmc
int3
xor
dec
testl
lods
cmpsb
xchg
push
shl
pavgw
or
divl
cwtl
jo
cld
xchg
ljmp
aaa
xchg
jg
call
cmpsl
xchg
popf
bound
dec
in
outsb
inc
insl
test
cli
mov
ret
push
pop
outsb
ret
pop
gs
sub
andb
jo
dec
lds
add
repnz
out
sub
sub
add
add
dec
movsl
fucomip
popf
sbb
clc
inc
push
outsb
jg
loopne
in
iret
pop
lock
addr16
jp
dec
push
bound
cmp
and
mov
cmpsb
cmp
fistps
or
shrb
sbb
outsl
push
stos
fldt
int
leave
lds
icebp
adc
daa
jecxz
pop
inc
iret
imul
sub
mov
sub
mov
pushw
daa
test
lods
inc
fsubs
in
mov
xchg
jge
xchg
sub
jbe
daa
imul
sbb
nop
cld
xchg
lahf
jae
mov
xchg
cmpsl
lret
xor
sti
dec
pop
and
lea
dec
jl
xlat
leave
bound
pop
jl
test
rcr
insl
pop
mov
xor
gs
fildl
inc
mov
push
pop
xchg
call
repnz
nop
aaa
cmp
sbb
pushf
sub
mull
int
cltd
inc
adcb
sub
pop
cltd
bound
imul
xchg
mov
aas
inc
orl
mov
je
and
mov
ret
in
into
cs
arpl
cmpsb
xchg
aad
jb
mov
jecxz
push
test
jecxz
cmp
stc
and
movsb
nop
cmp
fistpll
shll
movsb
cld
xchg
out
mov
and
sbb
fs
or
ss
jecxz
je
and
cltd
xor
pop
inc
push
and
lcall
je
or
icebp
add
push
mov
ljmp
scas
rolb
ljmp
push
int3
jbe
push
mov
shrl
lret
in
add
push
hlt
les
push
inc
mov
lds
jbe
sub
mov
leave
dec
shll
add
in
cmovg
lods
push
inc
loope
inc
fisubrs
lret
dec
adc
or
hlt
sub
sahf
add
stos
dec
sahf
pop
subl
mov
mov
popa
loopne
xchg
push
inc
loope
pop
mov
push
ja
adc
sarb
sbb
gs
jae
adc
or
mov
mov
pop
jg
fwait
aas
jo
sub
ret
dec
jl
lret
fcoms
xchg
push
int3
jg
add
mov
jecxz
fst
dec
fmull
js
andl
pop
sbb
loopne
xchg
xor
mov
adc
lcall
insl
push
xchg
es
cmp
addr16
icebp
ret
test
mov
insb
or
aas
push
in
pop
cli
push
add
inc
nop
arpl
mov
stos
stos
js
aam
daa
sub
xor
mov
in
mov
cld
mov
shl
andb
scas
daa
stos
insb
dec
inc
add
sub
inc
pop
adc
push
xchg
inc
inc
sub
scas
adc
mov
cmp
iret
and
sbb
add
add
popa
data16
rcrl
xor
addl
add
int
ja
lods
aas
loope
and
lock
cmp
mov
std
pop
nop
adc
jge
cli
mov
in
bound
inc
xchg
push
popf
inc
orl
sub
iret
les
mov
cmp
insb
push
mov
shll
push
push
icebp
mov
pop
je
xchg
push
mov
testl
jbe
push
cli
xor
mov
mov
gs
cmp
mov
or
pop
mov
stos
gs
dec
mov
imul
cmc
cmp
fldz
mov
decl
xor
sbb
mov
cmp
clc
sub
scas
jmp
sbb
xor
jp
std
add
dec
add
pop
xchg
stos
std
push
push
add
inc
outsl
sbb
or
leave
rclb
lret
int3
movsb
popf
mov
mov
pop
mov
cmp
popf
dec
jle
and
repz
popa
pop
sahf
mov
lahf
mov
add
dec
sbb
cld
sbb
shll
loope
mov
push
mov
adc
lock
shl
movsl
call
sub
dec
cmp
paddq
into
sti
out
cmp
repnz
sahf
cs
jmp
in
xchg
mov
xchg
adc
xchg
out
mov
and
jp
push
push
xor
adc
push
cmc
stos
and
pop
mov
adc
addr16
hlt
dec
push
aas
loop
outsl
or
cmp
in
sbbb
mov
push
clc
orl
xchg
fdivrs
push
ret
js
aaa
in
mov
mov
inc
stos
mov
scas
lret
jae
xor
cmp
call
shlb
lret
add
sbb
leave
and
andl
gs
mov
pop
popf
inc
mov
mov
sub
and
pusha
nop
pop
jo
sti
bound
iret
in
xchg
aaa
aam
in
test
in
enter
in
lods
dec
dec
fisubl
cltd
rclb
lcall
or
pop
inc
push
mov
push
xchg
ret
aad
testb
daa
add
add
xor
jp
loop
cmp
hlt
pop
xor
push
xchg
inc
ret
pusha
shll
inc
cmc
inc
push
xchg
repz
hlt
adc
cmp
das
xor
mov
or
inc
aam
xchg
andl
jns
mov
or
jnp
pop
mov
fwait
ja
inc
sahf
inc
push
imulb
fadds
cmp
inc
rclb
shll
hlt
push
stos
adcb
push
adc
pushf
orl
popa
sub
or
mov
lds
and
mov
or
stos
out
repnz
adc
or
add
jno,pt
imul
jg
sub
es
cmpsl
out
out
or
mov
ret
ds
mov
rcrl
repz
cli
in
jg
loopne
clc
sti
and
test
add
add
pop
push
inc
jle
ficoms
jno
sbb
push
sbb
cmpsb
sbb
cmpsl
fbstp
pop
clc
and
dec
imul
test
imul
jmp
adc
imul
ficompl
lahf
js
adc
or
jae
cld
inc
lret
cs
mov
sub
push
in
add
jmp
and
xor
sub
push
pusha
popa
mov
sarb
or
inc
lods
sub
int
loopne
add
push
adc
movb
sarl
pushf
xchg
cmp
jns
ss
and
mov
in
jnp
pop
add
xor
jbe
daa
jmp
orb
fcmovne
cmpsl
cmpsb
fwait
lock
stos
jns
lods
sbb
adc
add
xchg
pop
xlat
adc
in
scas
pop
mov
test
fisubrs
data16
ret
sbb
fs
dec
dec
xchg
lock
add
push
adc
push
loopne
shrl
cmp
adc
mov
cmpsb
adc
test
roll
xchg
sub
pop
pop
xchg
test
and
repz
xor
aam
out
dec
sbb
sub
mov
sti
lock
xchg
mov
in
xchg
shlb
jmp
push
cmp
jecxz
mov
mov
push
pusha
scas
xchg
mov
cmp
cmp
lock
outsl
add
call
fstps
jno
xor
sar
js
mov
mov
mov
and
dec
sbb
pop
arpl
lret
mov
and
rcr
xchg
outsb
je
adc
jecxz
cld
sbb
and
mov
lock
ja
or
jb
push
sbb
push
mov
mov
mov
xor
shl
into
aas
cwtl
rol
hlt
or
pop
lock
pop
inc
enter
je
int3
int3
or
xor
enter
add
aas
sub
mov
xor
cmpsb
call
dec
mov
cli
arpl
ucomiss
jbe
jmp
xor
mov
int3
or
and
add
negl
lcall
add
or
int
aam
mov
out
loopne
mov
loope
shll
push
cmp
aaa
push
sarl
popf
inc
psrad
or
push
mov
mov
hlt
orb
bound
movsb
xchg
cmc
out
mov
jp
repz
into
dec
mov
popw
fstpl
sbb
ja
out
arpl
mov
add
jo
sti
mov
and
fldcw
ja
push
cld
cs
hlt
xor
sbbl
jbe
bound
scas
cs
inc
pop
add
add
shlb
xchg
lcall
cmpsb
and
ljmp
add
add
inc
inc
mov
cltd
mov
test
adc
or
mov
push
sbb
aad
pop
lea
mov
test
sbb
nop
xchg
in
lods
push
pop
dec
mov
test
stc
push
cmp
sti
push
mov
adc
shlb
in
xchg
or
test
les
add
or
leave
inc
pop
xchg
sbb
push
inc
pop
xchg
fisttpll
lahf
push
xchg
les
cli
roll
sti
mov
orl
or
jae
cld
xlat
pop
lods
scas
fsub
ljmp
lods
jbe
gs
out
push
pop
xchg
cltd
pop
mov
sub
lea
inc
adc
add
dec
daa
xor
inc
xchg
mov
xor
fdivrl
ljmp
mov
insb
sarl
inc
mov
adc
push
fadd
and
sub
jns
mov
mov
xor
sub
cmpsl
dec
repnz
dec
sbb
ret
dec
fistpll
ljmp
xchg
enter
mov
std
orb
mov
les
pop
ret
dec
mov
sarl
or
fucomi
pop
jbe
cmp
mov
arpl
jg
xor
in
fcoms
fwait
out
mov
inc
insb
cwtl
pop
jns
push
test
or
subb
outsb
or
scas
cwtl
xchg
lret
pushf
sub
sbb
mov
jmp
ja
shrl
sub
clc
xchg
mov
mov
fistl
mov
add
sbb
out
push
movsl
ret
pop
sub
mov
loope
lods
pushf
out
mov
cmp
sbb
cs
cmp
xor
xor
sub
jg
xchg
ss
sahf
icebp
pop
or
mov
lret
stos
iret
jae
adc
jo
lahf
jb
icebp
out
jecxz
lret
pop
pop
push
xor
mov
push
inc
lods
lea
dec
xor
pusha
out
jne
dec
xchg
mov
aaa
sbb
sub
sbb
pop
popl
lcall
jle
push
ret
push
xchg
dec
idivl
push
mov
dec
mov
dec
mov
data16
or
mov
mov
mov
jge
adc
stos
test
out
add
sub
arpl
mov
leave
inc
push
mov
xor
jmp
jns
sbb
adc
add
js
and
jns
mov
sti
cltd
into
sub
ret
jnp
push
insl
xor
cmp
scas
mov
and
nop
or
cmpsl
xlat
sub
dec
sub
rcll
imul
jae
pop
xor
xor
sarb
ja
jns
fstpl
inc
pusha
insl
mov
in
jle
add
add
cmp
mov
add
mov
pop
mov
add
add
scas
faddl
shll
mov
inc
popf
push
xor
loopne
xchg
sub
jns
and
xor
sub
insl
jbe
mov
fcoml
int
adc
imulb
xor
jge
mov
stos
sbb
inc
sti
inc
and
insb
cmc
cmp
cwtl
push
sub
mulb
add
movsl
cmp
out
jge
outsb
add
pop
or
adc
mov
cmp
jo
jg
hlt
add
sbb
daa
scas
out
xchg
push
movsl
dec
pop
sahf
int3
xor
and
imul
pop
xchg
mov
cmp
stos
xchg
inc
xorl
adc
aad
sbb
cmpsb
push
and
sbb
mov
xchg
in
jo
inc
mov
mov
add
mov
and
js
sti
ja
das
mov
fsubr
ret
test
ret
std
js
inc
cltd
jle
daa
fldcw
es
jl
mov
imul
cmpsl
cmp
jbe
in
inc
pop
filds
imul
test
lcall
mov
aam
dec
or
xchg
call
in
fwait
ds
cwtl
icebp
scas
repnz
out
dec
mov
add
dec
jns
jnp
lahf
or
in
in
ret
add
ja
or
mov
and
je
mov
rcrb
aad
stos
jg
add
es
ret
push
push
fs
pop
inc
xor
inc
add
xchg
jmp
insl
jbe
adc
pop
cwtl
into
mov
shll
dec
into
inc
cmpsl
mov
dec
jle
xchg
jnp
xchg
add
lret
inc
pop
loop
add
cld
jno
sub
vxorpd
out
aaa
and
fmull
movsb
aad
cltd
push
dec
movlps
cmpsb
cld
lret
sbb
cmpsb
outsl
push
repz
cmpsl
dec
pop
or
sub
push
inc
mov
add
bts
lea
subb
shll
lods
mov
pop
mov
xor
icebp
add
in
andb
xor
js
lds
mov
mov
add
sub
stos
inc
jle
mov
fsubp
testl
in
daa
cmp
es
or
jnp
rcl
in
xchg
mov
jns
in
das
adc
or
mov
out
mov
mov
stos
push
mov
sbbb
in
shll
jbe
xor
sub
fdivrp
clc
test
rol
mov
test
loope
fcmovnu
mov
dec
xchg
ficoms
mov
add
push
jecxz
daa
jo
xchg
movmskps
cltd
lahf
mov
sub
mov
mov
mov
rorl
scas
xor
add
add
inc
mov
and
mov
add
mov
mov
push
fsubrp
int3
hlt
jns
lods
cmp
adc
sbb
daa
rcrl
lret
enter
xlat
cmpsb
inc
jp
es
lods
mov
pop
aam
loope
mov
mov
cld
dec
cmp
add
sbb
orl
into
imul
mov
cmc
sbb
nop
dec
mov
adc
sub
sub
xchg
test
xor
sbb
sbb
ret
fcmove
js
ror
push
pop
nop
fmul
jns
mov
imul
movsl
in
jbe
pop
adc
hlt
lds
fimull
xor
pop
rol
sub
adc
rcll
mov
or
adc
adc
dec
sbb
lds
subb
add
lds
and
je
ja
andl
aas
mov
outsl
ret
outsb
arpl
push
jmp
dec
test
data16
xchg
push
mov
xchg
out
push
jecxz
push
and
cmp
fadd
int
lods
pop
xchg
loopne
push
mov
mov
clc
mov
inc
popa
push
aaa
or
dec
aam
sub
aad
ss
mov
push
shlb
cs
mov
add
les
sbb
cltd
push
lahf
scas
mov
mov
and
ret
jns
js
mov
movsl
mov
sti
xor
test
jne
insl
scas
dec
enter
std
cmp
les
loopne
jge
jmp
lods
pop
add
jae
imul
xor
insb
sub
xchg
aas
insb
call
hlt
push
jne
xchg
xchg
fidivrs
stos
adc
ret
repz
in
xchg
mov
adc
jmp
cmpsb
push
in
inc
fistpll
repz
movsl
jno
sahf
mov
outsb
mov
mov
mov
out
popa
or
or
and
dec
sbb
adc
and
nop
mov
mov
in
and
push
outsb
jge
sar
test
mov
scas
call
in
push
mov
shl
int3
push
std
sahf
lods
adc
jl
cs
cmp
std
jne
and
and
dec
stc
mov
adcl
or
jae
add
push
mov
ja
sub
movsb
push
cmpsb
inc
xor
aas
and
xchg
fucomip
sbb
and
into
stos
add
and
fsts
std
mov
push
call
lods
pop
fwait
nop
gs
stos
mov
push
and
ret
adc
or
push
push
cmp
or
mov
cmpsl
and
jmp
jmp
fcmove
rcrb
repnz
imul
jb
xchg
popa
test
jb
push
push
enter
dec
ret
test
stos
enter
imul
adc
add
add
mov
cmp
jle
xor
sub
sti
mov
add
sub
add
sahf
mov
sub
cmpb
pop
addb
mov
add
dec
push
test
mov
ds
cmp
dec
lret
fidivrl
xor
and
or
rcl
pushf
push
pop
push
iret
mov
mov
lds
in
pushf
inc
xor
sub
bound
mov
popf
push
enter
inc
out
xor
inc
loop
test
in
cmp
cmpsl
mov
and
rcr
movsb
inc
mov
loop
adc
sti
sub
and
out
sahf
sti
push
xchg
ja
fidivl
cmpsb
out
push
decb
cltd
lret
push
cmc
xchg
call
rorl
push
inc
mov
bound
cmp
fucom
lods
xorb
pop
push
repz
aad
nop
jmp
mov
dec
xlat
es
adc
aad
jg
movsl
add
test
inc
inc
xchg
or
hlt
jmp
jbe
stc
std
sti
aaa
std
mov
inc
mov
mov
jae
fwait
test
stc
fcmovnb
pushf
or
aad
xchg
int
movsl
icebp
jge
into
shr
jecxz
fld
cmpsl
mov
or
adc
inc
xacquire
mov
mov
js
or
mov
adc
shr
jo
sbb
jnp
lret
in
push
mov
mov
ljmp
cmp
insb
push
mov
inc
stc
shrb
xchg
scas
adc
add
inc
test
adc
das
call
lret
pop
std
xchg
addr16
clc
xchg
or
fildl
cmp
adc
and
fsubs
and
and
inc
dec
add
popf
inc
xor
repz
xchg
insb
push
sub
icebp
sub
sub
push
lahf
adc
jns
cmp
jb
cmp
aad
jno
cmp
sahf
scas
mov
cmpb
movsl
dec
lcall
out
rclb
dec
pop
adc
aaa
test
mov
mov
jmp
dec
scas
insl
std
test
insl
test
mov
mov
mov
int
sbb
das
bound
mov
add
lret
and
aam
leave
in
std
out
pop
out
mov
cmpsl
fnsave
ret
adc
mov
inc
adc
fcmovnbe
xor
jl
xchg
mov
mov
cs
xor
jmp
jle
je
jle
jg
cmp
scas
cmp
gs
and
enter
outsl
rcrl
or
add
adc
sbb
cmp
test
mov
sbb
ja
stos
pop
inc
jle
pop
inc
js
or
out
int3
clc
xchg
xor
adc
setl
ret
mov
and
inc
lods
dec
push
nop
sahf
mov
repnz
test
sub
add
add
sbb
out
idivl
mov
xor
xchg
add
sub
add
ret
inc
sub
sbb
push
mov
push
xchg
out
lods
cmp
adc
rcr
sub
xchg
mov
popf
clc
mov
adcl
aas
adc
pop
sbb
insl
imul
dec
mov
lea
loop
jae
adc
inc
inc
fistl
add
ss
loopne
dec
popf
mov
popf
mov
mov
fcmovu
cli
mov
aas
sbb
lret
aam
jno
dec
int
jg
repz
jecxz
xchg
cmpsb
pop
dec
mov
leave
test
adc
cs
xchg
push
sbb
dec
mov
aam
xchg
ds
js
arpl
xchg
jl
push
add
mov
test
aas
inc
sbb
das
jp
adc
dec
xchg
and
ficoml
sub
lahf
or
cmp
mov
pusha
clc
movsl
jae
rolb
popa
std
mov
inc
inc
inc
sub
mov
mov
out
loopne
add
sarl
jo
out
pop
and
cmp
pushf
std
push
pop
loope
call
dec
pop
fs
add
cmp
jmp
fwait
pop
mov
inc
or
movsl
fidivl
scas
repnz
push
push
call
ljmp
push
shrl
inc
xor
vpcmpeqd
jg
push
rep
cs
aam
loopne
fisttpl
icebp
sbb
pop
or
dec
mov
lcall
shll
lea
cmpsb
out
loop
dec
test
testl
and
lret
inc
fcmovnbe
idivb
sub
or
sbb
test
sub
enter
ficompl
ds
push
xor
and
nop
jb
imul
setg
dec
jns
add
mov
cmpl
add
inc
jp
sub
int3
cld
and
sbbl
pop
filds
out
pop
jnp
jl
jmp
imul
subb
fistpll
xchg
cmp
ljmp
add
xchg
insl
lahf
push
mov
cs
push
out
sub
xchg
lret
call
mov
jb
sarl
xor
cmc
pop
mov
jecxz
and
ljmp
push
arpl
lods
pushf
sbb
dec
rolb
dec
lods
es
out
shll
mov
std
mov
cmp
and
subb
cmp
ljmp
out
call
or
dec
dec
push
mov
lods
idivb
push
inc
or
int3
addr16
push
inc
dec
push
gs
mov
inc
mov
lods
cld
push
sbb
fidivs
or
adc
adc
adc
sbb
rcrl
mov
and
pop
add
call
popa
or
fcomip
gs
fcompp
out
gs
testb
add
sub
add
mov
add
ljmp
add
or
cmp
and
mov
push
inc
shr
cmp
push
push
sbb
push
icebp
sbb
cli
inc
loopne
mov
scas
inc
pop
std
inc
dec
sub
push
mov
pop
mov
imul
call
cwtl
lds
mov
mov
mov
fistps
bound
cmpsl
sarl
int
bound
aaa
pop
lods
mov
push
push
sub
or
and
or
clc
add
in
ret
cmc
mov
sbb
or
mov
out
or
adc
leavew
clc
xor
dec
jl
xorl
icebp
sar
fs
adc
mov
pop
mov
push
push
out
inc
jmp
in
cmp
pop
andl
es
aaa
bound
pop
pop
cmp
daa
in
xchg
push
pop
push
gs
mov
and
pop
imulb
mov
sub
cmp
jo
jnp
jne
pusha
mov
test
adc
stos
testl
xchg
rorb
aad
ret
xchg
jp
mov
fwait
cld
sbb
jnp
mov
mov
and
imul
adc
add
pop
mov
xchg
insb
lock
jge
jmp
fisubs
mov
ss
jno
push
aad
pop
inc
cmp
lods
inc
lret
int3
adc
test
lods
int3
xchg
and
pop
mov
nop
lahf
push
xchg
add
aad
pop
jb
push
bound
mov
lret
dec
add
test
insl
call
roll
fwait
inc
xor
nop
lahf
ss
xchg
sub
adc
int3
push
ja
repnz
loop
movsb
push
xor
xchg
aad
jo
aam
and
ret
insl
shrb
inc
popa
in
loope
mov
push
fucomip
xchg
icebp
rcr
call
dec
pop
lods
out
xchg
mov
and
outsb
mov
cmp
movsb
pop
fstl
mull
sbb
push
outsb
inc
cmp
aaa
int3
adc
pushf
test
ss
mov
or
loopne
sub
push
shll
xchg
sub
cwtl
inc
movsl
mov
pop
icebp
insb
test
jmp
out
push
add
hlt
inc
add
test
sub
mov
inc
test
pop
push
inc
cli
lret
dec
lret
mov
jno
or
imul
lahf
int
xchg
test
ds
cmp
xchg
rclb
cmp
int
cmpsb
popf
enter
js
in
bound
jg
jnp
arpl
xchg
adc
adc
ja
leave
enter
pop
jbe
cmp
mov
push
mov
scas
adc
in
sahf
negb
push
out
adc
arpl
sti
adc
sub
jmp
add
add
adc
imulb
inc
mov
addb
fbld
repnz
pop
mov
or
sub
cwtl
xor
adc
rorb
or
pop
insl
dec
scas
push
flds
dec
ret
ss
lret
lahf
lock
sbb
sbb
jmp
jp
xlat
mov
dec
jbe
add
jae
iret
fisttpll
out
insl
dec
xor
xchg
pop
jnp
cwtl
pop
sti
xorb
popa
xchg
or
mov
or
std
test
lahf
push
mov
or
mov
aaa
call
mov
fadds
popa
shrb
sbb
imul
daa
mov
test
add
popf
jns
or
fdivrs
data16
insl
inc
out
fadds
pop
outsb
dec
movsl
dec
add
cmp
lock
inc
jl
dec
movsl
mov
pop
bound
mov
push
xor
iret
icebp
mov
sub
daa
xor
popa
mov
push
adc
pop
sub
movl
xchg
gs
pop
jg
sub
call
jo
jecxz
or
adc
mov
and
push
leave
out
jbe
mov
sbb
enter
xchg
out
scas
pop
inc
sahf
es
mov
inc
aaa
or
inc
insl
insl
add
repz
jns,pt
les
mov
xchg
data16
lods
pop
pop
js
mov
jnp
push
ja
jle
sbb
sub
cmpsl
sub
and
imulb
sbb
xchg
sub
pusha
fbstp
repz
mov
push
aaa
adc
jo
test
push
push
mov
mov
popf
inc
add
shrl
mov
mov
push
mov
addl
outsb
xchg
daa
cld
mov
xor
scas
xor
leave
sbb
mov
dec
cmpsl
mov
jmp
pop
xor
dec
popf
push
dec
and
sbb
repnz
jb
sti
or
in
lahf
aad
pop
lret
inc
pop
hlt
add
outsb
cmp
in
lcall
test
das
mov
popa
cli
pop
imul
sbb
stc
lods
test
cltd
push
lods
sub
or
fnsave
push
inc
loop
stc
sbb
pop
into
pop
pusha
dec
mov
ss
mulb
jg
sbb
fimuls
mov
test
sbb
cmp
mov
cmpsb
xlat
loope
jle
pop
mov
add
pop
lret
and
sub
dec
xchg
add
out
sub
loop
fsubp
test
iret
pop
sub
pop
adc
mov
data16
sub
pop
cli
divb
and
lock
rcrb
nop
out
lret
ljmp
xchg
shl
push
pop
sbb
lods
or
icebp
pop
adc
mov
sub
mov
inc
fmuls
sub
push
ret
cmpsb
int3
out
xchg
sub
push
cmp
stos
sbbl
sbb
add
mov
add
add
and
xor
mov
add
add
ljmp
mov
lcall
pop
pop
notb
mov
jl
and
iret
jo
mov
stc
and
or
cli
dec
lea
push
xor
sbb
ret
sbb
sub
mov
adcl
push
cmp
xchg
shr
lahf
inc
lds
and
jae
adc
cmpsl
lds
fldenv
mov
xchg
repnz
adc
mov
lods
mov
inc
adc
cmp
call
and
out
push
int
sub
stos
jl
mov
mov
add
divb
xor
adc
arpl
pop
gs
push
loop
ficoms
mov
sbb
cli
bound
into
jge
mov
gs
out
insl
imul
jb
cmp
aas
mull
addr16
or
loop
cmp
xlat
andb
insl
dec
and
pop
adcb
pop
fildl
xor
cmp
add
loope
movsl
add
inc
shll
iret
dec
cmp
or
jp
jb
in
lahf
hlt
call
loop
fmuls
sbb
cwtl
aaa
or
frstor
fmulp
dec
in
sub
xchg
or
lea
sbb
push
add
sbb
inc
add
cli
fs
push
inc
roll
scas
xchg
scas
sub
ret
fimull
lock
popa
int3
fildll
sub
call
pop
adc
inc
aaa
and
insl
adc
or
movsl
jo
es
and
add
scas
call
cmp
daa
dec
lret
sbbb
mov
inc
add
inc
test
dec
std
pop
add
and
cs
pop
inc
sbb
loopne
loope
mov
pop
imul
cmp
dec
pop
mov
mov
or
inc
pop
daa
repnz
adc
aad
pop
xchg
ljmp
je
inc
push
jne
scas
lcall
shrl
imul
pop
cli
jae
mov
fistpll
ss
outsl
and
test
ss
xchg
mov
mov
mov
outsb
ljmpw
imul
jbe
call
fmull
sti
pop
add
pop
test
movsl
cmp
jg
cmp
pop
out
push
jnp
and
fdivrs
sub
xchg
jno
xchg
mov
xchg
js
cmp
and
mov
movsl
mov
or
mov
out
nop
lcall
je
jecxz
cs
iret
outsb
and
jle
pushf
or
cmp
add
pop
std
push
add
mov
in
pop
stos
push
inc
mov
xchg
add
pop
lods
dec
lret
jecxz
xchg
inc
test
jb
outsb
icebp
cmpl
sub
push
je
es
movl
out
pop
pop
mov
jg
popa
hlt
mov
mov
sub
add
add
xor
aaa
fidivrs
mov
xlat
mov
pop
pusha
test
push
dec
sub
cmc
or
outsb
int3
aam
fcmovnbe
das
fmuls
loop
ss
movsb
mov
fwait
jge,pt
xlat
aad
sbb
inc
fdivs
pop
ds
mov
gs
scas
or
aad
cmp
xchg
sub
out
mov
lret
dec
test
jns
sub
in
pushf
fsubs
aaa
cmp
sbb
mov
fnstcw
idiv
mov
stc
inc
pusha
loopne
stos
clc
jb
in
mov
loope
xor
cld
leave
clc
push
leave
std
or
ror
orb
xchg
cwtl
cmp
lock
pop
ss
mov
mov
decb
out
popf
jns
push
push
mov
push
inc
les
pop
mov
dec
pop
in
cli
push
roll
aad
and
mov
hlt
inc
lock
cmp
lcall
jg
jne
sbb
mov
and
rolb
jle
xchg
mov
aaa
add
leave
addr16
sbb
dec
sbb
add
pop
pop
xchg
cmp
mov
shrl
aaa
add
mov
add
cmp
mov
sbbb
leave
leave
sbb
gs
xchg
loop
aaa
jmp
pop
fldz
mov
lahf
mov
jge
call
jmp
jne
je
push
push
sbb
xchg
adc
subl
test
and
out
popa
adc
lea
jae
pop
jmp
mov
daa
je
out
inc
mov
sbb
adc
or
pop
or
jle
xlat
pop
sbb
dec
sarl
xor
inc
popf
mov
cli
lahf
sti
outsl
js
je
leave
pop
test
sub
out
jnp
adc
mov
push
lods
fstps
out
push
and
fs
imul
lahf
push
pop
ds
adc
sub
sti
add
or
scas
jb
imul
mov
pop
jmp
mov
lods
or
movsl
jnp
aad
dec
push
iret
test
cmp
out
loopne
xchg
sbbb
jmp
fs
sub
push
push
push
out
xor
pop
sti
xchg
mov
mov
enter
mov
jns
sarb
sbb
iret
les
adc
rorb
pop
test
inc
out
mov
inc
int3
adc
das
shrb
pop
mov
fwait
xchg
xchg
inc
inc
stos
xchg
ds
jb
push
cmp
or
fs
pop
test
call
xchg
mov
mov
enter
cltd
fcmovnbe
out
xor
repz
dec
imull
mov
dec
test
inc
aaa
pop
sub
and
sub
aad
sub
fcmovnu
adc
fldl
repz
out
mov
or
inc
push
pusha
jbe
out
fnstsw
add
cwtl
mov
add
add
enter
dec
loopne
js
sbbl
cmc
sahf
in
ret
jno
les
mov
std
dec
shrb
dec
aad
mov
xchg
push
aam
std
push
clc
push
mov
pop
inc
xor
sub
jne
ret
xor
cltd
insb
add
mov
xchg
dec
outsl
push
pop
cmc
xor
aam
dec
shll
add
ljmp
roll
sub
pop
bound
sub
stc
pop
mov
stos
dec
mov
cmp
sub
sub
cmc
sbb
fidivrs
je
daa
pusha
popa
pop
call
movsl
fidivrl
adc
sbb
push
movsb
clc
push
lods
out
add
mov
imul
andl
jne
and
jge
ja
cld
mov
pop
ds
sbb
cs
xchg
pusha
sub
push
or
call
loop
cmpsl
xchg
outsl
ds
roll
mov
adc
mov
popa
icebp
push
lcall
adc
sub
add
mov
and
scas
lret
test
in
pushf
loop
movsl
lret
fcoml
int3
and
pop
test
test
sbb
aam
or
sbb
ret
cmp
xchg
mov
out
jmp
aas
sub
adc
cwtl
repz
xchg
shr
insl
lahf
xorb
iret
lods
sbb
jl
sbb
fiaddl
jg
clc
iret
or
jbe
in
cmp
cmp
insl
aas
mov
push
sbb
loopne
lock
mov
movsb
in
test
xchg
jecxz
pop
bnd
pop
ja
add
jb
sbb
cmp
lock
imul
aaa
dec
add
pop
xlat
or
cli
pop
clc
inc
xchg
pop
xchg
jbe
jnp
pop
rorb
insb
fs
fwait
sbb
repnz
aas
lret
xchg
xchg
into
push
mov
lock
push
fdivr
inc
mov
inc
repz
mov
sbb
dec
clc
inc
xor
mov
in
jmp
ss
leave
stos
jne
mov
pop
pop
pop
js
and
push
xchg
mov
pop
shlb
je
lea
popf
cmpsb
dec
mov
xchg
add
lods
enter
pushf
dec
or
xchg
xor
xor
inc
dec
rcrb
or
popf
dec
mov
adc
pop
xor
int
sub
fcmovnbe
idivl
sbb
dec
xchg
xor
adc
outsb
std
push
lock
mov
fldl
or
out
pop
xlat
dec
inc
inc
adc
out
jbe
mov
mov
fwait
lret
es
lods
jbe
mov
in
inc
fildl
fimull
movb
jge
orb
add
xchg
sbb
ja
jmp
nop
fsub
sbb
push
sub
fucomip
ficoms
adc
insl
mov
add
add
aad
push
cli
sbb
sub
sbb
jo
push
out
sub
pop
mov
sub
add
rcrb
in
xchg
es
lret
popf
ret
loop
sbb
in
dec
dec
mov
cmpsl
mov
mov
add
inc
sub
test
arpl
in
mov
xor
cmp
stos
push
fidivl
std
or
xchg
add
pop
push
cmp
sub
loop
push
mov
adc
setnp
ud2
mov
in
mov
mov
addb
add
cmp
pop
cwtl
arpl
pop
subb
iret
cmp
in
dec
subb
mov
imul
fs
mov
jnp
pop
ficompl
shll
sub
or
jecxz
rorl
ss
add
aam
loopne
sahf
in
jmp
and
lods
sbbl
pop
shrl
sub
test
pop
ret
out
inc
lcall
repnz
sbb
inc
jae
dec
add
rol
in
lods
adc
and
punpckhbw
pop
push
jl
repnz
pop
insb
mov
ja
push
jge
in
fldl
fisttpl
mov
loopne
fcomp
cmp
les
adc
push
sub
mov
dec
pop
push
mov
pop
inc
and
jmp
sbb
not
shrb
pop
adc
test
lret
jecxz
mov
mov
dec
ljmp
push
inc
call
stc
and
jge
pusha
sub
sbb
push
mov
push
xor
jae
test
fs
inc
dec
xchg
lahf
ret
test
cmp
pop
sbb
push
mov
iret
cli
push
pushf
inc
mov
adc
xor
cwtl
pop
orb
mov
xor
mov
rol
sbb
xor
movsb
jae
sbb
divl
or
sbb
aad
pop
cmpsb
test
lret
aad
xlat
cmpsb
scas
or
xchg
push
loope
lret
inc
sub
insl
cmp
mov
lods
and
push
jbe
or
outsb
or
popf
sbb
push
and
or
repnz
out
stc
xor
or
imul
clc
sbb
cmp
jle
jmp
iret
iret
push
mov
idivb
pop
lcall
lods
inc
mov
bound
add
xchg
sub
adc
loopne
mov
sbb
or
rcll
and
pop
cmc
cmpsb
push
shr
mov
jae
xchg
incl
aaa
cmpsl
pop
xchg
rorl
lret
adc
xchg
push
push
inc
xor
lock
movsb
mov
in
test
jns
jmp
stos
call
mov
mov
add
inc
leave
cmp
add
insb
sub
outsl
daa
insl
push
push
stos
adc
stos
add
sub
add
and
lods
jmp
and
pop
inc
gs
inc
pop
ds
push
sbbb
ja
add
rcll
sbb
inc
pushf
push
cmp
pop
xor
or
xchg
inc
mov
in
mov
mov
stc
push
sub
int
sahf
aaa
jne
cmpsb
jae
push
mov
dec
cmp
jge
adc
aaa
cld
movsl
icebp
adcl
and
insb
mov
sub
mov
sbb
jg
dec
pop
faddp
sbb
pop
xchg
inc
leave
and
inc
out
add
dec
add
nop
xchg
dec
sbb
repnz
mov
enter
xchg
sbb
ja
pop
negl
push
or
dec
push
jge
add
int
cs
testb
pop
int
into
lods
rcl
out
adc
cld
xchg
inc
inc
mov
and
sub
insb
mov
xchg
xor
cmp
jle
mov
jae
and
sahf
nop
sub
ret
cld
push
sbb
ror
fxch
addr16
cmpsb
fiadds
sahf
mov
fsubl
into
call
adc
jb
in
or
adc
mov
pop
movsb
scas
xor
dec
test
lret
push
adc
add
and
inc
mov
pop
jnp
es
cmp
mov
xchg
pop
subb
addb
aaa
fwait
add
push
lds
loope
mov
adc
inc
inc
lds
ds
push
ret
pushf
mov
addb
cld
mov
xor
pop
aad
fs
sbb
or
mov
pop
dec
imul
arpl
push
dec
and
and
mov
icebp
imul
mov
sbb
stos
in
add
mov
sub
sbb
fildl
mov
mov
adc
loopne
sbb
or
enter
and
push
inc
mov
xchg
sbb
dec
into
iret
jbe
jbe
cld
dec
cmp
insl
push
cwtl
mov
movsl
mov
call
pusha
jne
pop
lods
lock
mov
push
and
push
loopne
loop
mov
fidivrl
sbb
xlat
out
cmp
and
stos
xchg
popf
push
leave
inc
inc
and
mov
imul
inc
shl
sbb
inc
movsb
movsl
fsubr
loopne
mov
scas
or
clc
js
pop
lcall
jbe
and
pop
inc
cmp
or
dec
shlb
adc
cmp
mov
dec
clc
mov
inc
aam
inc
dec
dec
add
iret
ljmp
int3
ret
dec
cmc
and
scas
add
xor
push
xchg
xor
xor
pop
cmpsb
rcll
cmp
mov
out
xchg
in
nop
div
push
xchg
or
dec
ds
cmp
test
fs
mov
xorb
leave
push
stos
int
fidivs
ljmp
add
add
add
add
pop
and
mov
out
add
jb
inc
scas
add
sub
add
jle
jmp
leave
mov
pop
popf
test
pop
insb
mov
xlat
pop
adcb
xor
mov
scas
adc
fs
jg
in
add
cmp
adc
bound
out
mov
ds
std
and
mov
and
or
std
scas
jl
push
pop
dec
xchg
push
push
in
ror
ret
icebp
pop
add
mov
dec
jp
mov
xchg
xchg
sti
popa
stos
bound
shrb
jg
adc
insb
hlt
mov
adc
sbb
sub
mov
movsb
movsb
sub
xchg
mov
scas
inc
addl
mov
popa
aad
and
dec
frstor
ds
lds
iret
je
insb
std
movsb
leave
mov
xor
mov
stc
test
pop
jae
xchg
or
lret
ds
jns
das
lcall
inc
mov
call
incl
jno
popa
fcompl
xor
mov
push
js
xchg
jno
sub
fsubrs
in
sub
hlt
jl
cs
push
cmp
rorb
xor
adc
xor
outsl
mov
jnp
xlat
int
push
push
fisttpll
aam
or
push
arpl
out
xchg
add
lods
flds
in
and
repz
mov
mov
repnz
outsl
mov
mov
sub
or
js
fwait
divl
call
pop
inc
fnsave
clc
mov
pop
or
sub
sbb
pusha
xchg
out
lahf
pop
fcmovnb
push
call
adcb
push
in
xor
repnz
addr16
popa
sbb
popf
rorl
sbb
dec
mov
add
lss
xchg
inc
mov
sbb
jle
in
scas
icebp
push
xchg
mov
data16
fsubs
push
popf
sbb
add
add
mov
cmp
js
push
pop
xchg
rorl
mov
push
jne
shlb
sbb
ds
sbb
cmp
adc
out
xor
jns
outsl
push
sbb
mov
xchg
insl
sub
xchg
add
test
pop
adc
aam
mov
vpcmpeqb
mov
xor
xchg
adc
pop
mov
inc
jmp
cmpsl
movsb
push
ss
in
scas
pushf
std
cmp
xor
test
pop
pusha
mov
cmp
fcomps
sarb
cwtl
mov
insl
scas
aam
or
rolb
jnp
cmp
mov
cmc
jge
decl
add
fcompl
push
sbb
outsl
inc
and
sub
fcom
ljmp
lock
fwait
fs
jg
data16
lock
mov
fisubl
adc
mov
bnd
inc
call
sub
mov
in
fdivl
cltd
push
faddl
les
lahf
out
inc
and
jecxz
repnz
imul
bound
add
add
cmp
mov
out
ss
adc
add
sub
add
push
sub
or
xor
dec
fisubrs
popf
add
ret
ror
mov
insl
test
cmpsl
ret
push
add
movsl
dec
dec
out
xchg
push
xchg
insl
and
imul
sub
in
adc
loopne
fwait
stc
and
dec
cmpsb
push
addr16
mov
dec
loopne
cmp
mov
mov
jb
call
das
mov
in
ja
subb
ja
cmp
shrb
fisubrs
mov
fcmovnu
add
aad
cmpb
loopne
adc
les
in
outsl
js
add
pop
rcrb
push
jnp
jbe
mov
cmp
mov
mov
shrl
add
jnp
into
inc
gs
xchg
pop
push
sub
pop
push
out
das
mov
divb
pop
adc
sti
mov
fldenv
sub
jmp
cmpsb
fwait
lods
inc
pop
sub
pop
ret
sub
fimuls
mov
add
sbb
outsl
ja
rcll
out
inc
cmpsb
mov
mov
or
pop
xlat
ja
xlat
push
adc
pop
icebp
orl
icebp
mov
lahf
mull
or
into
out
mov
xlat
or
push
rolb
push
mov
shll
pop
mov
or
mov
jns
nop
pop
in
int3
ja
leave
add
mov
push
jp
insl
es
xchg
adc
rorl
rolb
fistl
cld
imul
mov
cmp
cmpsl
xor
movsb
or
jno
sbb
inc
and
mov
pop
inc
xor
leave
mov
lds
mov
or
jle
lock
jg
push
mov
adc
cmp
jno
out
data16
jg
js
pushf
in
cmp
aas
scas
xor
rcrb
rsm
push
nop
je
cmp
lods
push
in
into
inc
stos
rclb
add
sub
fcomip
pop
scas
fcmovne
enter
bound
mov
and
and
lcall
dec
push
dec
dec
insl
jmp
fcmovu
dec
xor
in
out
mov
cmp
fisubrs
and
sub
aaa
lea
adc
jno
or
lods
test
push
adcb
mov
sub
mov
aaa
adc
sbb
mov
push
in
dec
jmp
add
cmp
fs
adc
mov
xchg
outsl
data16
cmp
add
icebp
in
adc
pop
dec
loopne
data16
pop
icebp
fildll
pusha
push
cmp
les
push
mov
jbe
push
mov
repz
xlat
in
push
int3
out
test
icebp
pop
jp
push
in
push
pop
movsb
in
out
sub
rcrb
mov
int3
mov
sbb
outsl
sub
sahf
add
xor
and
call
movsl
sbb
clc
sub
push
ds
outsb
sbb
mov
mov
add
add
lods
adc
lock
cmpsb
lods
push
cmp
mov
fbld
sbb
hlt
xchg
out
stc
lahf
sbb
fs
pushf
mov
push
push
repz
xchg
rorl
popf
ja
bt
pop
faddp
pop
lods
cmp
outsb
jecxz
es
in
cmpsl
lock
jae
sub
dec
xor
jmp
xchg
jb
test
test
ljmp
fmulp
xor
pop
insl
inc
stos
mov
dec
mov
aad
stos
test
test
punpcklbw
lahf
push
mov
test
add
sub
or
in
in
test
mov
stc
jne
jne
movsb
repnz
mov
out
jns
push
pop
fnstcw
adc
sti
xchg
inc
loop
repnz
cmpsl
jbe
or
out
mov
add
cmp
sbb
sub
lods
sub
xchg
pop
insl
jmp
jnp
nop
xchg
push
lea
int3
lret
add
fmull
pop
and
pusha
out
rclb
xchg
clc
xor
xor
lahf
inc
loopne
in
xor
and
lds
les
dec
daa
add
mov
mov
and
stos
sub
or
xchg
rcr
sub
cmp
loope
jg
scas
pop
push
cwtl
repnz
out
push
mov
pusha
xor
dec
test
jns
or
sub
sbbb
xchg
cs
mov
fistpl
fyl2xp1
adc
and
jle
sub
mov
xor
loopne
cli
mov
ss
loope
push
mov
mov
dec
and
mov
lcall
cmp
testb
stc
jmp
pop
in
pop
cmp
add
movsl
sub
and
xorl
stos
ljmp
repnz
out
push
sub
xor
sahf
mov
push
sbb
mov
cld
pop
dec
gs
repnz
and
push
loope
mov
enter
mov
xchg
leave
mov
mov
sub
sub
data16
jae
insl
xchg
out
cld
insl
loopne
mov
sbb
or
cli
sbb
adc
lods
cwtl
iret
loopne
mov
into
push
ret
std
jno
iret
jne
scas
movsb
jmp
pop
cs
lea
fs
jb
xchg
pusha
push
push
cmpsb
rol
mov
aaa
test
jp
lcall
adc
out
insl
daa
scas
lret
pop
shl
xchg
dec
in
xor
imul
rcrl
orb
xchg
imul
shll
popf
lds
iret
jg
cmp
xor
mov
and
mov
movsb
iret
mov
mov
push
inc
jns
inc
or
push
adc
sbb
leave
push
es
add
xadd
adc
pop
and
jle
in
insb
shrl
adc
xchg
adcb
add
add
add
add
mov
xor
or
sub
add
jo
push
adc
scas
pusha
pop
dec
mov
ja
mov
fmuls
int
outsb
xor
push
shrb
daa
insl
in
or
xor
scas
mov
dec
inc
mov
or
jbe
in
xor
jg
pop
js
mov
push
push
jg
or
sub
jg
xchg
jne
lods
sbb
in
mov
mov
popf
fs
lahf
fdivrp
sarb
imul
mov
xor
idivb
pop
ss
push
mov
shr
ja
ficoml
push
or
jo
add
mov
fsts
mov
and
add
cmpsb
leave
add
dec
out
inc
rclb
mov
ds
das
xorl
adc
cmp
sub
fwait
dec
enter
mov
and
divl
stos
adc
jle
cmp
xchg
cwtl
dec
jae
loope
add
sarl
aam
std
adc
sub
pop
insl
cwtl
std
loopne
dec
sub
test
faddl
mov
cmp
test
mov
push
fistpl
xchg
push
fwait
movsl
push
flds
mov
ljmp
sbb
clc
ja
cwtl
adc
movsl
mov
lret
je
repz
hlt
cwtl
xor
fsubrl
and
ret
fldenv
jge
mov
call
aad
rcrl
jp
or
dec
aaa
pop
sub
xchg
jg
outsb
leave
jp
sbb
rcll
rcr
loopne
cli
xlat
ret
outsl
push
cmp
pop
stos
mov
insb
mov
mov
pop
dec
icebp
xchg
jb
jecxz
and
lahf
pop
push
jo
mov
xor
jbe
push
stos
inc
loopne
and
lock
popa
lret
int
mov
xor
adc
mov
in
xor
pop
xor
or
jne
in
popa
sbb
inc
adc
jb
pop
pop
push
mov
fstl
lret
and
loopw
pop
cli
and
outsb
jno
ret
lret
inc
xchg
jo
test
dec
repz
and
mov
pop
test
and
xchg
jbe,pn
cld
jl
sub
push
xor
je
mov
jae
loope
xchg
mov
out
inc
push
mov
jne
mov
cmc
inc
or
xor
gs
inc
xor
mov
sub
es
mov
cmp
daa
and
lret
insb
rorb
pop
loopne
mov
stos
lea
sub
bound
pop
cmpsl
dec
push
dec
pop
or
cmpl
mov
mov
fcoms
or
adc
insb
cmc
push
aaa
sbb
xor
cwtl
ja
ss
push
fdivr
xchg
fwait
icebp
add
cmp
xor
dec
inc
mov
in
stos
clc
adc
insb
jmp
repnz
add
aam
jne
jl
adc
mov
inc
sti
and
inc
pushf
rorl
out
inc
mov
addr16
sub
and
xlat
xlat
pop
adc
jnp
adc
fisubl
dec
jmp
jns
and
aas
aad
mov
pop
mov
enter
iret
dec
aad
adc
insl
or
hlt
mov
in
arpl
and
xchg
mov
int3
loop
inc
cmp
call
mov
jns
push
jmp
push
mov
das
fsubr
or
out
xlat
push
pop
or
add
out
jecxz
add
aas
and
scas
pushf
push
sbb
subl
es
insb
cltd
mov
aaa
int3
or
aaa
insb
inc
loop
push
lea
pusha
es
aad
sbb
fmulp
add
push
xchg
lret
hlt
dec
pop
sub
pop
lods
incl
add
or
inc
ja
or
jl
test
xlat
or
dec
ja
or
jns
sahf
push
mov
jns
mov
ret
xor
jg
or
js
js
xor
mov
out
js
dec
mov
mov
mov
nop
add
or
mov
pop
cli
popa
adc
adc
imul
cmp
jp
hlt
and
aam
mov
lcall
fs
and
sub
mov
xchg
imul
jbe
fnstcw
inc
push
hlt
or
mov
aaa
or
loopne
push
sub
movsl
and
dec
or
mov
insl
mov
xchg
sbb
insb
lea
mov
push
int
xor
lds
mov
add
ror
das
add
cltd
fnsave
lcall
lea
cmp
dec
jnp
lods
ficoms
ret
pusha
popa
mov
mov
scas
pop
popf
shlb
jns
push
rcrl
test
aas
loopne,pn
or
scas
fldcw
add
xor
mov
adcl
js
xchg
sub
ljmp
sub
push
push
movsl
in
mov
fdivr
jl
dec
ja
mov
mov
cmp
cmp
sahf
fstpt
stc
mov
sub
mov
mov
push
pop
mov
js
jp
rolb
aad
xor
jecxz
and
jmp
pop
fcmovnb
mov
cmp
inc
sbb
push
push
mov
jns
push
cmp
cwtl
push
aam
adc
mov
mov
in
in
scas
stc
cwtl
and
cmc
add
insb
cmp
fists
jb
aam
pop
loope
mov
mov
jmp
lret
push
test
push
pop
testb
cmp
sub
sbb
lods
cmpsl
dec
pop
cmp
mov
mov
fstpl
ds
add
stos
jo
dec
cli
fldcw
loopne
popf
out
aad
mov
add
cmpsb
and
dec
aam
or
xchg
jp
push
xor
cmpsb
mov
lar
dec
mov
data16
lret
inc
sub
xchg
xchg
or
jb
das
lods
push
sbb
js
dec
or
and
adc
mov
fwait
ja
shr
aas
test
and
mov
pop
mov
loopne
sbb
nop
and
add
shlb
or
sbb
fnstenv
add
xchg
push
adc
pop
fs
jnp
sbb
xchg
mov
imul
psubsw
sub
lock
dec
xor
mov
jae
insl
mov
sti
adc
push
mov
xor
lret
xchg
xlat
rcl
lret
xchg
cwtl
in
ss
mov
push
push
int
mov
pop
mov
in
inc
inc
mov
sbb
ja
shl
pop
sub
jmp
xor
lahf
mov
or
popf
test
jp
inc
push
inc
dec
mov
popf
aas
dec
leave
fildl
mov
int
clc
stos
mov
cmp
or
andb
xor
jno
push
inc
inc
es
xlat
sub
fstl
pop
cmp
push
imul
popa
pop
dec
out
jne
xchg
es
xchg
call
xor
mov
inc
xor
mov
mov
xor
sahf
lds
mov
or
sahf
pop
cmp
jnp
sahf
jbe
fcmovne
mov
pop
mov
lret
scas
add
and
inc
mov
into
cmc
add
les
gs
lahf
jge
adc
mov
and
jl
adc
scas
leave
mov
sarl
loopne
je
call
xor
mov
sub
or
mov
xchg
or
pop
rcrb
fwait
nop
add
sub
ljmp
cmp
fdivr
cmpb
ljmp
mov
push
inc
add
insl
dec
pop
addb
mov
mov
test
jb
mov
into
xchg
jno
jle
or
add
ds
add
jno
sub
loope
pusha
scas
mov
outsb
jmp
fs
mov
mov
lcall
mov
dec
divb
mov
cli
sub
popa
adc
inc
mov
testl
stos
movsl
loop
mov
lret
lret
mov
jge
sbb
mov
pop
inc
bound
stos
cmp
add
cmp
dec
cmpsb
inc
push
adc
pop
daa
scas
mov
jb
inc
scas
mov
push
xor
cmp
mov
sbb
or
pop
lods
loope
cs
push
mov
mov
fucom
loope
dec
lahf
call
in
test
clc
loopne
call
add
insb
cmpsl
mov
push
xchg
push
push
inc
sahf
xchg
sub
test
add
dec
xchg
pop
xchg
js
mov
dec
roll
sub
add
loopne
aad
inc
jo
mov
mov
dec
pop
mov
iret
mov
sbb
sub
cmc
imul
inc
test
rorb
popf
xor
pop
mov
loop
imul
ja
cmp
mov
pop
adc
stos
fwait
test
xchg
pop
leave
xor
cli
repz
std
and
sbb
xor
pop
pop
das
rcrb
jl
fisubrl
sub
mov
mov
adc
add
cs
sub
pop
adc
pop
lods
cmc
stos
popf
sbb
aas
or
push
fwait
push
ror
mov
lahf
push
push
lods
push
or
fisttpl
mov
cmpsl
add
xchg
testl
inc
js
xchg
adc
in
mov
adc
orl
in
jb
fsts
mov
push
push
sub
push
in
mov
fdivr
adc
push
xor
jb
arpl
sub
cld
sti
call
test
mov
xchg
cld
adc
mov
dec
mov
fs
and
cmp
movsb
insb
and
ss
dec
adcl
das
xlat
neg
dec
shrl
sysret
dec
mov
cmp
cli
adc
push
and
js
mov
xor
pushf
cmp
mov
cmp
add
sub
jnp
xor
xor
out
ret
mov
pop
ljmp
sti
std
scas
sub
sbb
dec
pop
and
pushf
int3
pop
popf
lods
sbb
imul
lcall
xchg
cmp
adc
jo
sub
lcall
ds
mov
aad
adc
mov
mov
sbbb
daa
or
pop
insb
adcb
xchg
mov
mov
mov
gs
popf
xor
sbb
mov
in
rcll
xchg
jg
pop
sub
hlt
sub
push
icebp
or
les
adc
jge
loope
xchg
xor
mov
push
push
test
pop
xchg
scas
xchg
sbb
cmp
addr16
adc
push
movsl
movsb
mov
mov
xchg
enter
add
mov
lret
add
out
popf
jno
sti
fsqrt
aas
in
inc
xchg
shl
iret
lret
sbbb
fcompp
lock
shlb
inc
es
and
adc
loop
lahf
rcll
call
push
or
call
push
dec
aam
subl
sub
sub
jo
dec
jecxz,pn
loopne
inc
adc
add
xchg
int
ss
and
ror
imul
jo
mov
ja
in
xchg
sarl
insl
push
cmpsl
xor
sub
std
dec
loopne
jns
adc
hlt
or
dec
mov
jo
lea
add
add
add
sub
jno
mov
out
ja
push
lret
imul
stos
xchg
ret
sub
or
xchg
mov
fldenv
sarl
push
stos
jae
pusha
inc
adc
or
scas
adcb
adc
mov
jmp
push
xchg
cs
or
dec
dec
jae
cmp
lods
xchg
sbb
mov
outsb
les
xchg
ss
inc
cmpsl
mov
cli
xlat
fistps
push
lret
push
mov
and
test
dec
and
shl
mull
and
jae
mov
lret
xor
iret
sub
test
rcr
jnp
ret
add
ret
pop
fcom
xchg
std
xor
jle
mov
add
in
mov
outsb
add
cmp
sub
cltd
loop
xrelease
or
xor
and
push
dec
push
mov
in
outsl
stc
or
cmp
int
loop
mov
jbe
xor
loope
into
test
push
aam
cmp
ret
push
jecxz
lods
xor
stos
add
dec
xor
xadd
ja
rclb
popf
pmulhuw
mov
sarl
xchg
adc
inc
mov
inc
push
mov
je
imul
pusha
ret
pop
fldenv
inc
je
sahf
cmp
push
mov
inc
cmp
stos
xchg
and
xchg
lcall
adc
push
inc
sbb
jne
stc
jecxz
insb
lods
std
jle
mov
dec
push
ds
mov
and
mov
std
jge
cwtl
jmp
andl
add
fwait
lea
rorl
mull
repnz
popa
push
out
sub
in
jnp
cld
out
xchg
adc
mov
insb
cmp
gs
sti
cmp
rorl
daa
cmp
cli
adc
jmp
cmc
xor
mov
sub
cmp
pop
stc
out
xchg
fbstp
cltd
pop
sbb
cmp
or
or
loopne
inc
enter
sub
sbb
mov
pop
pop
icebp
mov
xchg
mov
mov
daa
out
jno
test
adc
fstl
and
inc
xlat
mov
push
cwtl
mov
mov
cltd
xor
cld
dec
xchg
fcoms
xorb
imul
dec
stos
cmp
pop
outsb
jl
mov
sbb
mov
data16
lods
jnp
cmp
push
lahf
sbb
inc
jge
rcll
dec
cmp
add
sub
add
mov
es
xchg
mov
sbb
mov
call
insb
jbe
out
mov
imul
rcl
sti
cmp
dec
jl
es
andb
mov
cmpsb
pusha
cmpsl
shrb
js
jmp
sub
hlt
mov
add
and
dec
repz
fldt
xchg
add
or
add
add
shlb
je
in
pop
or
mov
mov
mov
mov
push
mov
jnp
mov
sub
addr16
sbb
shll
lret
and
mov
pop
xchg
pusha
fsubl
repz
ret
push
ffree
fs
xchg
sbb
fst
faddp
icebp
aam
int3
hlt
test
sbb
sub
xor
push
pop
pop
pop
dec
sbb
nop
pop
cmpsl
addr16
xor
rcrl
sub
das
pusha
mov
mov
lret
inc
cld
mov
test
xchg
sub
idivb
mov
inc
sti
out
sub
cmp
jnp
test
popf
ss
rorl
mov
insb
test
clc
mov
ret
dec
rorl
cmp
sbb
pushf
sub
inc
adc
icebp
sahf
enter
dec
mov
mov
xlat
daa
jg
or
and
mov
inc
loop
data16
inc
mov
test
xor
fwait
xchg
lret
inc
mov
insl
lds
popa
mov
fbld
pushf
sub
pop
pushf
cmpsl
sub
std
lock
mov
push
and
cmp
jns
fsubp
test
push
mov
into
icebp
push
inc
out
flds
jg
jl
int3
mov
es
xchg
adc
and
ljmp
loope
sti
inc
mov
das
jo
mov
push
aaa
repz
enter
int
or
mov
xlat
jae
fsubs
invd
mov
add
and
mov
stc
mov
stc
and
sub
push
rorb
clc
adc
jae
inc
inc
call
mov
push
movsb
mov
mov
dec
or
xor
add
bound
lds
or
cmc
add
push
fbstp
and
and
movsl
jge
ficoms
lret
jle
rcrl
pop
ljmp
stc
pop
or
nop
cld
cmp
std
xchg
mov
xor
xlat
xor
add
fldt
jl
or
sbb
xor
mov
lahf
ja
ja
pop
xorb
add
ds
mov
inc
fwait
les
cmp
jp
or
in
pop
jbe
jne
loop
add
stos
out
rcrl
sbb
aas
dec
cmp
mov
jo
mov
xlat
sub
movsl
lahf
jb
int
sub
daa
cmp
inc
cmp
push
les
xchg
nop
in
or
push
dec
adc
jb
jecxz
dec
jp
dec
out
aam
enter
dec
ja
and
mov
cmp
insb
sub
pop
and
mov
adc
cmpsb
rorl
fisubl
stos
fstpl
lret
mov
into
inc
ss
mov
in
push
sbb
xchg
fstps
and
stc
std
lcall
jnp
pop
pop
mov
lretw
lret
sub
add
mov
pop
movb
mov
pop
sbb
inc
incl
mov
mov
jne
shrb
es
pusha
jnp
movsb
popa
mov
ror
icebp
fnstsw
subb
les
dec
aam
jg
and
lret
sub
push
mov
scas
lret
xchg
and
sete
sti
mov
fnsave
adc
sbb
jo
or
pop
test
sub
fistpll
dec
dec
cmp
lret
lea
fs
bnd
lret
mov
jae
xchg
pop
pop
lahf
mov
sub
push
xchg
dec
nop
insb
jbe
mov
gs
push
jg
pop
xchg
inc
imul
xchg
das
and
add
jbe
cs
mov
ljmp
inc
fsub
add
pop
adc
outsb
cld
sbb
or
icebp
jp
push
pop
out
mov
inc
fwait
mov
in
dec
adc
hlt
dec
add
sbb
mov
pop
push
cld
or
dec
jnp
data16
pop
test
or
out
pop
loopne
fsubrs
push
icebp
jns
jns
jbe
mov
cmp
sbb
sub
scas
inc
mov
jle
cmp
or
add
arpl
pop
lds
dec
cmc
mov
leave
out
cmpsb
sarb
inc
ret
add
jp
rolb
ret
dec
arpl
aad
push
pop
add
inc
cmp
icebp
fs
inc
xor
xchg
adc
lcall
out
stc
push
movsl
adc
jge
call
dec
jnp
test
xchg
xor
mov
subb
daa
mov
xor
ret
test
rorb
cmovl
outsl
stos
mov
iret
leave
add
fs
mov
sbb
mov
push
das
pop
push
imul
shrb
push
sbb
ja
lea
add
mov
cmp
testb
add
sbb
inc
cmpsb
daa
jecxz,pt
inc
jecxz
mov
mov
pop
and
cmp
scas
das
push
lcall
lahf
xchg
jb
decl
mov
call
std
dec
dec
lahf
lods
push
pop
repz
in
sbb
jmp
cmp
xor
int3
adc
push
xor
xchg
in
dec
xchg
jg
inc
mov
inc
aad
inc
cli
cmp
shll
push
in
pop
push
push
aaa
xor
mov
js
test
xchg
lcall
inc
add
push
mov
sub
push
pop
dec
inc
repz
mov
pop
xor
xchg
xchg
bound
xchg
int
lods
lea
mov
in
mov
push
adc
lret
sbb
dec
adc
popa
rolb
dec
idivl
cmp
int
add
add
cmp
or
cmc
sti
add
jo
in
je
call
test
push
and
out
shl
loope
stos
ds
clc
xchg
mov
psrld
in
leave
lret
les
push
jl
add
jmp
gs
int
xor
or
popl
mov
add
xor
lret
insb
pop
cmp
sub
incl
mov
pop
pusha
and
add
dec
pop
ficomps
mov
enter
sbb
jg
push
cmp
icebp
lds
scas
stos
incl
ret
insb
fldenv
ret
test
push
daa
pushf
das
adc
fcmovne
inc
outsb
pop
sub
jmp
fldcw
mov
test
mov
stc
popf
sbb
stc
mov
lcall
test
cmp
cmp
mov
cltd
dec
lea
adc
pusha
aam
cld
enter
adc
out
clc
cmp
pop
ljmp
int3
jge
mov
xor
push
xor
cli
mov
pop
mov
sub
xor
lock
stos
xor
popf
sbbb
adc
loopne
data16
lea
xor
pushf
inc
jbe
shll
mov
push
mov
fcomps
jns
push
mov
ret
mov
mov
int
mov
or
cmpsl
add
add
jb
cltd
cmc
sbbl
jp
lcall
mov
fstps
mov
rolb
xchg
or
cli
dec
scas
mov
shlb
pextrw
mov
or
xor
mov
mov
add
fnstcw
popf
ljmp
mov
sbb
je
cs
out
mov
mov
or
pop
mov
jle
lret
sar
sbb
fisttps
dec
mov
call
fisubrs
loop
ss
test
cmc
cmp
cmp
ret
inc
push
mov
sbb
cmp
or
nopl
jl
mov
outsb
adc
xor
int3
cld
mov
add
jl
fildl
sub
mov
cmp
scas
mov
dec
xor
ds
leave
cld
mov
xchg
stos
fistpl
scas
fwait
cmp
dec
xchg
mov
mov
push
pushf
into
push
mov
incl
xlat
es
add
mov
or
sbb
adc
sbb
inc
adc
cmpsb
xor
iret
pop
or
lea
jno
mov
mov
adc
mov
int
test
lods
cmpsl
ja
jl
fsts
mov
rolb
repnz
mov
les
pop
xor
cmp
add
jecxz
mov
push
dec
loopne
roll
add
add
mov
pop
add
mov
lret
sbb
sub
fwait
push
insb
sub
dec
jae
lahf
lock
jle
xor
roll
ljmp
add
rcl
cmp
jle
and
jmp
or
jle
push
iret
mov
fstps
sbb
ret
mov
xchg
mov
repz
cli
sbb
and
xor
stos
daa
fwait
sub
data16
mov
sub
mul
mov
cmpsl
out
pcmpgtw
call
add
push
das
inc
push
mov
mov
inc
fwait
arpl
imul
insl
xchg
xor
arpl
das
mov
stos
into
push
scas
push
adc
lahf
sbb
push
adc
scas
scas
inc
enter
push
fimull
enter
mov
inc
subl
or
mov
and
add
jmp
inc
pop
jecxz
in
push
jo
lods
sarb
dec
data16
jb
adc
xchg
fisttpl
xor
cmp
jp
pop
jne
pop
or
mov
ret
sbb
mov
std
int3
lcall
std
test
sti
cwtl
pop
pop
test
lret
sub
lahf
iret
popa
push
xor
sub
mov
loope
mov
sbb
mov
add
push
stos
dec
mov
mov
arpl
jne
jmp
lock
popa
loope
add
push
pop
xor
outsb
popf
push
pop
stos
add
addr16
lcall
imul
in
invd
pusha
std
inc
jecxz
push
add
pop
sub
outsb
fs
pusha
aam
add
pop
cli
clc
js
dec
add
in
add
mov
mov
inc
rcll
xor
xchg
mov
push
lods
or
fisttpl
movsl
sbb
dec
or
sbb
adc
ja
and
imul
mov
mov
inc
cli
pop
pop
push
scas
sbb
into
add
xchg
je
xchg
push
cmp
jmp
pop
xchg
pop
inc
cmp
outsb
inc
add
js
adc
jl
pop
ds
sti
push
xor
push
out
pop
je
notl
dec
enter
int3
popf
or
xchg
xchg
insl
std
sub
push
loope
cli
std
xchg
mov
pop
out
mov
or
dec
lods
xchg
incl
mov
pop
call
push
push
filds
ret
jmp
ja
cmpsb
cwtl
adc
mov
add
cmp
fxch
addr16
dec
aam
data16
dec
ss
inc
dec
jmp
jo
jns
xchg
call
xor
sbb
and
mov
mov
dec
push
pushl
mov
sub
cwtl
je
test
cld
push
mov
fsub
subl
push
jns
gs
aam
add
add
xchg
sub
push
fmul
sbb
or
and
jmp
out
idivb
scas
mov
mov
and
cmp
xchg
xor
push
cli
jno
xchg
add
hlt
out
subb
mov
add
mov
mov
scas
jl
cld
mov
dec
pop
shl
pop
out
loopne
lret
adc
mov
loop
scas
mov
cmp
fdivrp
ss
xchg
pop
mov
jl
fimull
ljmp
mov
add
pop
cwtl
or
cmpl
fisttpl
pop
and
jae
lret
mov
aaa
cmp
mov
js
popf
push
into
in
cmp
inc
lods
sub
pop
pop
pop
aad
add
movsl
icebp
jecxz
sub
out
push
scas
stos
adc
in
loopne
jmp
idiv
and
clc
js
test
inc
mov
mov
fwait
add
and
cmp
pop
push
push
pop
enter
pop
sbb
sub
mov
lcall
inc
lods
or
cmpsb
out
lret
xor
pop
mov
ss
jp
pop
cwtl
add
test
icebp
jb
cli
mov
aaa
pop
xchg
jl
in
lahf
cmpsb
popf
int
cwtl
push
lahf
push
jg
les
insb
stos
cld
inc
dec
aaa
movsb
jnp
rcl
dec
xchg
arpl
popa
push
jne
adc
adc
cli
lret
or
lret
rolb
mov
mov
xchg
mov
jbe
cs
cmpsl
push
insl
jae
mov
jmp
jecxz
incl
or
std
xchg
sahf
je
cmc
out
std
jo
pop
lea
jne
sub
sti
push
or
jno
push
out
fbld
fstl
adc
test
lret
sbb
das
stos
mov
xchg
dec
xchg
mov
int3
pop
repnz
push
adc
int3
mov
cmc
jmp
fadd
scas
lods
dec
push
inc
or
adc
sub
sub
aas
cmp
dec
lods
notl
repnz
jle
pusha
pop
inc
or
sbb
cmp
hlt
jg
rclb
int
fnstcw
lods
mov
xchg
loop
inc
or
mov
sbb
jae
mov
jle
jp
pop
mov
test
jle
movsb
xchg
xchg
xchg
test
clc
shll
out
adc
leave
jne
xchg
mov
sub
test
jl
outsl
inc
mov
inc
xchg
js
pop
or
mov
xchg
dec
mov
mov
or
repz
add
and
loopne
xchg
pop
adc
adc
mov
push
sbb
push
sub
movl
pop
xchg
mov
mov
mov
rcrb
jb
mov
subl
and
and
test
sbb
jns
insb
inc
add
repz
hlt
in
xlat
mov
inc
stos
pop
sbb
cli
inc
cli
outsb
ljmp
jle
add
sub
add
jo
push
in
sub
inc
and
fwait
adc
dec
scas
push
sub
popa
test
mov
in
pusha
cli
push
and
and
out
imul
out
inc
push
dec
dec
jmp
mov
pop
jns
int3
pop
pop
and
cld
cmp
arpl
pop
or
xchg
push
cli
cli
and
imul
leave
pop
fwait
int3
into
jns
sbb
xchg
lods
aam
icebp
mov
rorb
outsb
sub
ret
gs
pop
pop
xchg
inc
lods
scas
mov
adc
mov
push
sub
mov
aam
xchg
pushf
pusha
hlt
outsb
sub
push
les
outsl
or
je
inc
jmp
cmp
aad
xor
push
aam
mov
jl
bound
xor
sbb
f2xm1
sbb
movsb
daa
hlt
js
arpl
sbb
stos
dec
cld
in
jecxz
mov
jbe
cmp
repz
rorl
mov
jnp
mov
and
adc
mov
or
cmp
ret
out
jge
mov
push
out
nop
iret
jg
outsb
and
dec
mov
les
push
fwait
adc
mov
add
imul
cld
aaa
push
mov
adc
pop
adc
clc
mov
pop
lea
or
cmp
fsubl
fidivrl
addr16
loope
xor
iret
inc
jne
mov
int3
push
mov
sahf
imul
sar
xor
inc
inc
cmc
pop
pop
inc
jp
js
std
test
shrl
test
orl
lea
pop
popa
mov
cmc
adc
dec
pusha
sbb
adc
lods
mov
cmp
and
std
inc
test
ret
aad
cs
cltd
xor
arpl
or
call
out
in
and
mov
dec
popa
idiv
xor
xchg
cmp
cmp
je
xor
xor
arpl
call
dec
lret
insl
lds
dec
cs
add
push
repnz
mov
ret
scas
inc
push
inc
pop
jecxz
sub
out
pop
aas
les
sub
mov
lret
dec
ss
iret
pop
rorb
stos
mov
sbb
mov
daa
and
dec
fldl
xchg
insb
daa
imul
pop
loop
xchg
les
and
in
imul
cmpsl
push
inc
dec
lret
test
pop
in
add
test
call
jmp
xchg
jecxz
inc
xor
decl
push
insl
repz
mov
repz
mov
fisubs
add
pop
and
repnz
xchg
mov
cmp
sbb
enter
sub
sub
mov
ljmp
xchg
xchg
mov
jns
repnz
mov
xlat
push
xlat
ja
out
ss
mov
stos
fiaddl
add
add
xchg
mov
or
pop
mov
ljmp
pop
lcall
cmpsb
mov
aad
cmp
or
aaa
xor
fdivl
push
es
cmc
add
pop
ror
push
icebp
movsbl
leave
xchg
and
aad
add
shlb
stos
addr16
and
outsl
and
daa
mov
push
and
and
sbb
inc
push
inc
adc
cmpb
cmpsl
mov
sub
push
mov
xchg
and
inc
add
push
lret
jmp
mov
in
xchg
mov
lods
lea
sub
imull
inc
movsb
movsb
xchg
mov
sbb
outsb
ds
gs
adc
jne
sub
or
push
shrb
les
lock
out
iret
mov
lcall
inc
lret
outsb
mov
jmp
push
sub
icebp
xchg
dec
std
xchg
mov
sahf
xor
xchg
ftst
adc
cmp
mov
es
and
mov
push
mov
push
movsb
je
mov
imul
inc
jmp
fisubl
pop
lcallw
xchg
jge
leave
mov
leave
je
mov
out
inc
xchg
mov
das
add
mov
scas
mov
xchg
add
dec
xadd
mov
bound
and
shll
add
jae
xor
hlt
rorb
stc
jl
xchg
mov
xor
loope
les
faddl
xchg
out
adc
mov
loop
mov
mov
sub
frstor
mov
mov
xchg
out
and
inc
aam
js
cmpsb
dec
adc
lret
test
sbb
xchg
call
test
loope
lahf
adc
mov
mov
scas
mov
cli
das
inc
cmp
cmp
mov
fcomps
and
mov
enter
xchg
push
adc
xor
test
test
xchg
xchg
and
cwtl
in
fisttps
imul
xlat
xor
mov
sarl
rorl
xor
adc
push
pop
outsb
insl
or
mov
push
adc
ret
cmp
test
sbb
jno
shlb
sub
data16
push
stos
lock
daa
cmp
sahf
xchg
cmp
jl
dec
lods
leave
imul
xchg
shlb
call
cli
xchg
rcl
jo
xchg
loopne
aad
fisttps
dec
cltd
std
sbb
rcll
aaa
or
add
and
icebp
out
pop
xchg
sbb
int
repnz
fldt
sbb
mov
adc
fistl
xor
or
jecxz
jg
out
lret
pop
sub
or
outsb
jne
in
clc
test
add
add
rcll
pushl
xchg
lds
sub
add
jo
test
clc
mov
movb
cmp
jno
or
nop
mov
or
mov
jns
xchg
fadds
cmpsl
dec
fcmovnbe
test
out
shl
jne
mov
jmp
push
jle
adc
mov
inc
gs
jmp
loop
loopne
rorb
pop
aad
out
in
jb
aaa
mov
negl
mov
ja
xchg
in
push
inc
mov
outsb
mov
mov
js
jge
mov
push
scas
iret
mov
fwait
jne
mov
cli
jl
push
out
lods
add
ret
ret
cld
sbb
push
cmp
clc
test
popf
add
stos
add
test
mov
xchg
ljmp
xor
push
lods
mov
mov
arpl
lock
bswap
loop
cs
out
repnz
or
and
sub
dec
and
and
or
aaa
mov
movsl
rolb
fildl
add
repz
scas
sahf
dec
pop
mov
out
shlb
arpl
inc
int
mov
sub
push
aaa
cwtl
or
mov
scas
sub
mov
pusha
rcll
adc
out
mov
sbb
pop
je
repnz
fcomps
adc
xor
imul
or
fisttps
push
cltd
adc
cmc
sbb
add
popf
out
into
xor
xchg
out
pop
scas
frstor
pop
lock
sub
mov
lods
xor
outsl
adc
lret
enter
ljmp
stos
das
rclb
or
and
neg
sbb
sbb
out
shrb
test
aas
out
outsl
push
sahf
xor
jo
pop
adc
bound
sbb
jl
jno
pop
jecxz
xchg
xchg
das
inc
mov
dec
dec
inc
push
sbb
and
add
jo
push
test
cmp
dec
inc
push
call
fdivrl
xor
pop
out
mov
mov
sbb
dec
add
xchg
push
lea
add
push
xchg
pop
mov
not
pop
outsb
fcoms
in
out
int3
push
sub
test
push
jle
xchg
and
lcall
push
and
sub
mov
mov
fcom
movsl
hlt
mov
push
sbbl
pop
push
cwtl
icebp
stos
ja
xchg
jbe
or
movsb
push
out
dec
mov
cmpsb
pop
cmp
arpl
mov
dec
lret
lret
pop
ss
lret
loop
mov
cmp
pushf
or
xchg
scas
inc
mov
adc
fs
popa
xchg
add
iret
jmp
cmp
clts
cmp
dec
mov
addb
pop
cmpl
cwtl
aas
cmpsl
lcall
decb
iret
negb
out
lods
push
ror
xchg
mov
loope
add
add
pushf
nop
inc
je
mov
add
popa
push
cmp
dec
loop
push
shrl
test
je
jp
push
sarb
call
inc
cmc
ret
push
dec
hlt
test
xchg
pop
fildl
notb
sbbl
fcom
rcrb
lea
vpunpckhwd
adc
test
sub
in
pop
push
fs
jp
movsl
lret
dec
fsubs
cld
sbb
ret
shrl
or
jmp
dec
aas
das
jne
sbb
push
dec
loopne
pop
imulb
negb
pop
repz
shrb
adc
cmp
cmc
add
es
mov
xor
xchg
js
ja
pop
lret
pushf
xor
pop
flds
insb
hlt
sbb
inc
mov
fnsave
mov
insb
adc
mov
cld
jbe
and
stc
loop
mov
mov
xor
sbb
push
popa
shll
test
shrb
mov
lcall
mov
mov
rorl
fldl
push
sub
push
icebp
pop
data16
xor
leave
and
lock
mov
sbb
push
sbb
andl
lods
mov
cmp
push
cltd
imul
jne
sbb
or
xchg
push
mov
lahf
mov
shlb
jns
push
sub
jbe
cmp
lea
jmp
in
sub
cmp
ja
and
fcmove
cmp
in
adcb
adc
adc
lock
in
sub
or
jecxz
mov
pushf
fstps
fidivl
aam
jae
inc
mov
or
pop
scas
mov
cmpsl
sub
iret
repnz
movsb
out
and
pop
dec
repz
mov
add
fldenv
iret
mov
jp
xlat
mov
xor
mov
andl
ret
mov
xchg
dec
sbbl
lcall
lahf
or
out
fadd
jns
jmp
test
add
scas
aaa
jbe
pop
out
add
and
or
sub
lea
xchg
shrl
popa
or
out
cmp
popa
sub
push
jns
push
or
gs
inc
outsl
test
sti
jno
in
dec
sub
scas
push
sub
ljmp
js
mov
jmp
sub
xchg
in
pushf
mov
pop
test
sub
jg
or
sbb
inc
push
orl
pop
in
ds
push
cli
push
sti
fs
loope
movsl
sti
std
int3
push
jp
jle
stos
rcrl
scas
pop
addr16
mov
and
cmpb
mov
mov
rolb
fcomps
mov
dec
adc
push
xchg
jle
clc
mov
mov
mov
pop
sbb
cmpb
xchg
ss
subb
add
push
push
jnp
fisubs
inc
stos
cs
add
add
repz
das
iret
sbb
xchg
and
adc
cmpsl
dec
jg
mov
xor
test
xchg
jmp
xor
aad
filds
sub
repz
and
int
lea
or
lret
cmc
jo
mov
mov
add
push
mov
aaa
pop
push
ss
out
lahf
push
loopne
lret
cmp
mov
and
cmc
pop
mov
nop
or
mov
xor
add
fcmovnb
int
jp
jg
std
xchg
sub
lock
in
cld
andl
popa
push
into
sub
mov
daa
jecxz
sbb
pop
repnz
dec
pop
addb
lcall
jecxz
movsl
js
notb
mov
pusha
cmpsl
leave
dec
data16
sbb
das
push
js
lds
or
xchg
dec
inc
cmp
mov
stos
fidivs
pop
sahf
sarl
pop
in
xor
sbb
xor
out
add
and
dec
mov
call
and
mov
int3
mov
jnp
lds
inc
xor
ret
pop
and
repnz
cmp
mov
adc
adc
pop
lock
sub
js
lret
mov
daa
mov
fimuls
cmpsb
cli
adc
scas
sub
test
das
xchg
mov
jb
jbe
xchg
jno
std
pop
push
inc
mov
fldt
cmp
ret
andb
push
xor
or
mov
shl
test
jmp
cwtl
pop
test
adc
in
cmp
mov
sti
ret
pushw
orb
inc
shrb
jns
sbb
and
mov
shll
ljmp
dec
int3
jl
unpckhps
stos
idivl
out
sahf
sbb
ds
push
push
sbbl
xlat
roll
or
push
push
xchg
add
push
outsb
lods
mov
fisubrs
sub
sbb
cltd
push
mov
popf
pop
fwait
xchg
es
int3
push
stos
lods
mov
daa
lcall
jle
ret
xor
adc
xchg
cmc
lea
pop
aas
mov
shll
jae
lcall
je
xlat
and
xlat
mov
mov
ds
test
mov
push
shlb
push
jmp
into
sbb
rclb
insb
rcrb
adc
pop
repz
inc
mov
and
mov
lcall
notl
inc
lcall
shll
daa
scas
pop
and
xchg
fildl
jp
ss
repz
fstps
rcll
mov
jbe
mov
fisttpll
scas
testl
mov
or
sub
in
cltd
lret
bnd
push
push
stc
mov
pop
popf
adcl
add
mov
push
outsb
jl
ficoms
pop
out
add
add
cmp
mov
movsb
lods
negb
rcrb
adc
adc
scas
and
fbld
push
cmp
mov
les
xor
xor
int
das
inc
inc
rolb
aam
sub
test
mov
lret
test
int
add
data16
dec
sbb
cmp
mov
lods
or
dec
repz
sbb
fs
xor
lock
sbb
bound
dec
sti
sbb
inc
dec
call
sbb
out
orl
dec
mov
inc
add
cmp
das
and
fadd
mov
or
sbb
mov
dec
or
xor
popa
hlt
out
push
mov
lea
xor
xor
cmp
xchg
cltd
cmp
mov
push
fcoms
outsl
shl
outsb
orl
faddl
dec
inc
add
lea
cmpsb
mov
out
jne
dec
int3
jns
lods
mov
pop
pop
mov
dec
xchg
fcoml
cltd
sahf
pusha
lret
inc
outsb
mov
ja
push
jbe
in
loopne
iret
inc
gs
decl
stos
xchg
push
in
adc
xorl
mov
imulb
cld
int
cmpb
or
js
inc
lock
mov
jne
mov
push
pop
aad
in
mov
lods
test
jecxz
mov
sub
xchg
out
scas
gs
popa
add
popf
push
jbe
add
xorl
or
fcmovb
fld
ja
lock
loopne
pop
ret
shrl
pop
mov
jo
enter
stos
rolb
lds
cltd
xchg
jmp
js
rclb
inc
pop
mov
test
nop
mov
inc
lods
add
lret
es
in
sahf
out
test
imul
in
test
into
cmp
mov
imul
add
or
lods
mov
popa
int
cs
jo
pushf
cmp
lret
ds
call
call
cmc
xchg
pop
dec
xchg
fwait
xchg
stos
testb
sub
or
mov
xchg
flds
sbb
scas
jmp
fprem
test
add
cli
jmp
adc
out
mov
add
pushf
pop
xor
xor
cld
test
pushl
out
aam
fadd
test
dec
push
push
pop
daa
dec
imul
lea
popf
out
push
arpl
cmp
subb
push
add
pop
pop
push
add
mov
mov
movsl
mov
cmp
xchg
sarl
sbb
fcompl
jg
push
lret
and
movsl
cltd
hlt
inc
add
cmp
pop
movsb
add
imul
jmp
jne
insb
and
pushf
pop
in
adc
mov
add
add
sbb
jge
int3
outsb
xchg
fimull
aas
xchg
add
sub
add
pop
cmp
mov
pusha
sub
sti
xchg
mov
pop
xor
lods
mov
inc
cmp
push
fnsave
js
aam
mov
xor
lods
std
pop
mov
sub
jo
loopne
xchg
adc
pop
in
aas
nop
dec
jnp
mov
mov
xchg
iret
or
rcrb
cmp
in
lret
daa
xor
test
dec
inc
inc
lds
fisubrs
adc
out
pop
js
and
xor
adc
call
pop
xchg
outsb
arpl
cmp
out
sti
xor
insb
sbb
in
mov
ds
add
sbb
pusha
xorb
push
lahf
or
sub
popa
pop
jmp
mov
sbb
popa
pop
pop
pop
xlat
xchg
xlat
test
inc
mov
cmp
rcrb
jl
adc
jae
or
xor
mul
shll
iret
bound
xor
call
mov
adc
mov
jne
cmp
rcrl
sbb
lcall
or
xchg
inc
hlt
repnz
and
sbb
inc
cs
cmp
xchg
int
inc
xchg
shlb
push
xchg
sbb
or
and
stos
dec
push
sub
ret
add
dec
xchg
insl
adcb
inc
and
enter
sbb
cmp
or
pop
jge
iret
mov
int
xor
pop
and
lods
jle
in
push
call
lds
pop
lock
andl
dec
dec
inc
outsl
pop
lahf
cld
pop
jmp
icebp
add
test
sarl
mov
sbb
in
lahf
mov
push
in
fildll
cmp
mov
iret
clc
sub
sbb
inc
xchg
jl
fidivl
lcall
mov
inc
outsb
popf
mov
out
pop
daa
lds
jmp
mov
sbb
out
pop
and
push
and
test
popa
sbb
divl
pop
dec
out
inc
movsb
ds
dec
and
pop
inc
insb
nop
pop
test
xor
mov
je
jae
mov
addr16
mov
cmp
test
clc
insl
pushf
aad
push
pop
testl
negb
push
pop
mov
sub
pop
scas
sub
xor
push
cmp
std
dec
dec
inc
jmp
repnz
leave
dec
cmpsl
lret
clc
sbb
add
iret
push
outsl
lret
xchg
cmp
mov
jbe
outsl
mov
xor
cmp
inc
xchg
mov
js
sub
out
fsubs
or
mov
add
mov
testl
jne
inc
fdivl
pop
nop
cmp
jmp
shll
lock
aad
popl
mov
add
pop
add
inc
fcmovnb
fstpl
sub
or
mov
add
sub
add
mov
mov
mov
ficoms
shl
lahf
imul
in
hlt
jae
pop
xor
outsl
cmpsl
pushf
push
mov
push
sbb
aas
lock
adc
ret
or
ja
clc
and
mov
fwait
bound
lods
aam
sub
pop
add
outsl
pop
repnz
cmpb
outsl
xchg
adc
repz
ja
mov
in
push
fxch
lock
and
outsl
inc
pop
rorb
movsl
jle
mov
sub
insb
stos
xchg
mov
push
xor
mov
pop
xchg
subl
xor
pop
pop
mov
ja
mov
push
inc
sbb
fs
imul
ja
cwtl
ljmp
sbb
idiv
xor
ja
insl
mov
dec
pop
and
shl
outsl
mov
dec
inc
aaa
test
cmp
sub
xchg
mov
rclb
mov
or
xchg
adcl
mov
hlt
cmpsl
and
and
jle
xor
sbb
frstor
mov
and
xor
dec
popa
cmpsb
sbb
pop
push
xchg
push
aad
or
jae
test
cs
out
sahf
lds
sub
mov
xchg
jg
movsl
sahf
xchg
pop
jae
xlat
cwtl
int3
ja
in
adc
popa
mov
add
jmp
shlb
xor
xchg
cmp
ja
jp
in
mov
idiv
movsb
sbb
dec
outsb
fnstcw
dec
and
and
pop
dec
lret
rcrb
lcall
ss
lcall
lret
popf
and
or
std
jl
aaa
fs
pop
push
outsl
mov
or
xchg
adc
fs
stos
out
adc
jb
inc
push
rolb
xchg
jg
inc
add
jne
sub
mov
mov
in
jns
dec
ret
gs
xor
inc
orb
cmp
cmp
lret
mov
shll
adc
pop
pop
mov
lcall
mov
in
mov
sub
orl
mov
addb
xor
add
sbb
inc
lret
sub
mov
dec
lods
mov
lahf
hlt
ficoml
mov
bound
into
sbb
lret
sub
call
roll
xchg
jge
pop
xlat
dec
lods
cmp
in
push
sbb
mov
popf
sbb
fabs
scas
or
adc
inc
addr16
pmulhw
push
xchg
loope
push
daa
dec
pop
dec
lahf
arpl
int3
ss
inc
aad
scas
loope
push
mov
push
pop
pop
pop
jb
cmp
mov
push
mov
nop
dec
or
psraw
pusha
add
cmp
cmp
shrb
fisttpll
sahf
push
jl
sbb
pushf
cli
mov
scas
aad
sbbl
add
xor
popa
stos
fs
or
cmc
popa
pop
push
scas
mov
in
push
xchg
push
mulb
and
jl
mov
test
les
push
adc
test
ret
mov
ljmp
aam
jae
mov
sub
and
test
outsb
xor
aam
js
sub
es
cmp
xor
stos
push
insl
shll
fisubrl
daa
in
adc
sbb
and
lods
mov
loopne
pushf
dec
imul
clc
lcall
int
mov
add
jno
inc
cmpsl
adc
sti
xor
jnp
dec
ss
or
xor
shll
mov
sbb
fcompl
mov
popa
sub
push
nop
pop
lods
pop
jmp
jmp
add
int3
sbbl
fdivr
jmp
fisubrs
pop
and
lea
aaa
jmp
test
aam
call
pop
fwait
scas
xor
leave
jbe
sub
cli
or
lcall
xor
pop
mov
iret
mov
inc
bound
test
push
add
pop
arpl
inc
bound
mov
mov
pop
icebp
shll
ret
int3
jge
imul
loop,pt
add
lock
pop
cld
mov
pop
mov
popl
test
out
mov
cmp
and
les
lock
xlat
jno
js
inc
pop
loopne
xchg
jge
mov
mov
shrl
scas
pop
push
in
mov
int3
into
fdivl
stc
cmp
jb
jl
cmp
outsl
aad
xor
sbb
xor
xor
dec
and
call
popa
sbb
scas
push
fidivl
stos
or
xchg
and
push
add
cmp
mov
cmp
loop
or
jns
jecxz
js
popf
mov
dec
cmp
stos
out
jl
cltd
mov
mov
sbb
fwait
or
lds
push
mov
xor
aaa
scas
jno
xchg
js
mov
sub
or
outsl
aaa
cmc
je
xchg
push
cld
sub
repnz
lret
fs
ret
cmp
jae
sub
shlb
rclb
pop
cmp
je
lods
jl
sub
insl
popf
loope
enter
push
and
out
adc
bound
xchg
adc
in
xchg
cmp
dec
add
hlt
aam
mov
or
pop
xor
aam
mulb
std
ficoms
cmp
and
jmp
es
mov
dec
bound
xchg
lea
test
push
insb
xor
fdivs
out
mov
cltd
lds
aas
push
inc
inc
cs
loope
outsl
shll
push
mov
jg
mov
loop
mov
cmpsb
or
faddl
dec
jmp
fisubrs
jnp
jb
sbb
mov
xor
lcall
bound
arpl
hlt
add
sub
add
inc
jae
fdivs
jno
add
sahf
cmp
arpl
pop
mov
xor
jle
je
fisubs
mov
xchg
cmp
pop
cmc
inc
adc
test
ss
adc
mov
push
or
into
cmp
cmc
rclb
add
add
jp
fmuls
lea
and
aad
sub
ljmp
daa
daa
xor
repnz
mov
mov
clc
adc
dec
add
pop
push
xor
adc
pop
pop
push
inc
test
aad
adc
cmp
insb
ret
daa
mov
push
test
pop
inc
sub
cmp
lods
fsubs
jl
movsb
cmp
testb
rclb
stos
cmp
fisttpl
movsb
idiv
dec
je
xchg
sub
je
jns
and
out
push
sub
cmp
in
shl
aas
pushf
fwait
lock
addl
mov
mov
inc
stc
push
pop
push
mov
sti
xor
in
mov
push
mov
imul
test
sub
aas
push
stc
jmp
sti
imul
ljmp
test
mov
mov
sub
pop
nop
test
sarb
mov
repz
call
leave
gs
scas
sti
std
inc
xor
add
cld
xchg
test
loope
aas
in
cmp
adc
aam
test
lock
in
sub
ret
fdivs
or
mov
lock
mov
xchg
pop
or
clc
push
mov
cmp
leave
inc
xor
pop
insl
cmovs
add
rclb
std
adc
dec
inc
int3
jle
cmp
push
pushf
push
imul
in
and
add
lahf
enter
loope
sahf
push
cmpsb
popa
xchg
sbb
mov
adc
sarl
sbb
pop
lret
incl
xchg
stos
xor
cmpsl
add
outsb
mov
jmp
push
or
aaa
push
mov
nop
or
fndisi(8087
xlat
dec
or
mov
mov
mov
test
and
push
mov
rcr
lcall
jmp
mov
jns
cmp
lds
out
jmp
lds
ss
iret
inc
das
fimull
inc
push
lock
leave
out
in
mov
sub
popa
lds
outsb
test
mov
lods
dec
lret
jecxz
mov
imul
xor
and
stc
bound
fidivrs
push
dec
push
or
sbb
fmul
jo
rolb
xchg
sbb
rorl
pop
je
cld
mov
xor
push
inc
add
jne
jae
fistps
mov
pop
and
negl
in
js
cmp
pop
add
insl
aas
mov
pop
test
push
hlt
nop
stos
es
aas
iret
cmc
sti
pushf
loop,pt
push
testl
add
out
loop
xchg
sbb
aaa
popf
out
pop
xchg
movsb
loopne
sbb
frstor
mov
fs
mov
jae
sub
xor
xchg
out
and
orb
mov
pusha
test
mov
std
mov
shll
push
outsb
inc
ret
sub
scas
fcmovbe
leave
adcb
cmp
mov
xchg
mov
and
jg
nop
xchg
int3
ss
xchg
adc
fstpl
cltd
imul
rorb
cltd
push
or
out
xchg
push
pusha
dec
inc
ja
cmp
sti
shl
stos
cmpsb
and
cmp
mov
adc
inc
cmp
mov
idivb
push
jl
xchg
lret
mov
clc
add
mov
stc
shr
daa
fadds
mov
dec
sub
aam
jno
sarb
in
cwtl
jne
sub
xor
xor
aas
push
push
mov
ret
add
dec
mov
mov
clc
sbb
inc
sbb
adc
pop
ret
add
xor
aas
subb
or
lea
mov
movsb
inc
and
ja
sbb
mov
or
arpl
std
je
aas
fcompl
pusha
rclb
and
testl
cmp
push
jo
lahf
cmp
mulb
es
enter
ret
int
or
jno
stos
dec
xor
adc
push
pop
in
out
lret
lock
jl
jo
inc
out
inc
xor
pop
mov
mov
subl
fsubrp
fcomps
cmp
lcall
cld
push
mov
jmp
nop
mov
xor
xchg
push
mov
daa
add
aas
sbbl
imul
mov
or
out
sbb
add
push
mov
push
fidivl
dec
mov
jmp
and
xor
je
stos
mov
sub
pop
pop
and
add
sarl
xchg
mov
shll
nop
les
cld
lea
sbb
inc
out
movsb
aas
add
jmp
test
lock
aam
fcmovnb
inc
call
dec
jnp
xchg
ficomps
cmpsb
data16
mov
lea
stos
fistps
clc
jmp
push
or
movsl
aas
data16
push
push
xchg
adc
insl
aaa
cld
xlat
lret
cmp
in
lcall
aam
or
in
cmp
xor
lcall
mov
push
push
xchg
jmp
mov
jnp
out
test
js
stos
and
notl
scas
addr16
push
ss
cmp
ljmp
mov
ds
add
aas
ret
and
faddp
pop
inc
jo
jo
dec
cmpsl
jo
loopne
leave
sub
aam
sub
std
cmp
stc
int
xor
rcll
add
sub
add
inc
cmp
rcrl
movsl
dec
lea
dec
xor
sti
int3
mov
insl
loopne
and
inc
add
mov
or
mov
dec
inc
push
inc
sbbb
jle
or
or
xchg
call
pop
lods
cld
and
pushf
gs
fsubr
pop
fbstp
sbb
adc
cmpb
add
mov
jnp
mov
jmpw
sbb
cmp
dec
scas
lods
xlat
insb
add
test
or
paddw
sbb
mov
mov
je
sub
adc
into
push
mov
ljmp
ljmp
sbb
rorb
loop
mov
mov
call
jnp
into
es
filds
mov
les
fdivrs
push
imul
pop
cmpsb
js
outsl
fiadds
pop
aas
push
fstpl
je
adc
test
and
xchg
test
xchg
jne
dec
divl
xor
cwtl
pop
pushf
jp
add
inc
test
inc
add
loopne
popl
fisttpll
mov
cmp
shll
into
push
inc
mov
js
push
mov
test
pop
or
pop
test
in
les
pusha
mov
push
js
add
push
xor
rcrl
sbb
les
add
sub
lret
xlat
insb
jnp
mov
xchg
out
enter
leave
pusha
hlt
mov
test
push
iret
jp
cmc
insb
pushf
sbb
dec
inc
mov
ss
jb
fwait
mov
adc
push
rclb
in
dec
xlat
ud2
pop
xchg
movswl
mov
scas
push
outsb
bound
add
movsb
pop
movsb
adc
jecxz
loope
mov
pop
sbb
or
ret
les
mov
lcall
je
std
fisubs
mov
add
rcrl
mov
inc
movsb
xchg
repnz
jle
icebp
fs
shll
loop
ds
into
cwtl
mov
and
lret
jle
daa
cld
iret
or
test
leave
xchg
add
mov
dec
mov
mov
jbe
dec
in
push
aas
xorb
push
adc
mov
inc
insb
xor
ficomps
sahf
lcall
cmp
cs
sbb
in
inc
cmp
sbb
iret
cmpsb
fidivs
je
jne
repz
jmp
mov
xchg
aad
pop
dec
scas
cmp
int
cmp
pop
adc
std
stos
sbb
pusha
pushf
jae
add
mov
cltd
xor
pop
fsub
and
sbb
jp
mov
push
hlt
and
loope
lea
mov
les
xchg
sub
dec
scas
clc
cmp
mov
lret
sahf
movzbl
cwtl
mov
mov
push
lahf
mov
xchg
repz
mov
test
cmp
mov
sahf
mov
add
push
add
add
movsb
dec
lea
inc
sbb
