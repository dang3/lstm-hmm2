push
mov
sub
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
push
push
pushl
call
cmpl
jne
mov
inc
mov
jmp
or
mov
orl
xor
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
cmpl
jne
xor
xor
inc
mov
jmp
mov
incl
add
movzwl
adc
mov
mov
mov
sub
movb
and
lea
sbb
mov
xor
xor
adc
mov
mov
mov
sub
mov
xor
xorl
sub
mov
adcl
movl
movl
cmpl
je
cmpl
jne
pushl
call
mov
dec
mov
jmp
sub
push
and
movl
mov
push
mov
or
xor
andl
mov
subl
push
andl
add
jmp
mov
mov
inc
movl
cmp
movl
jb
mov
xor
add
movl
jmp
adc
mov
sbb
mov
subl
xor
xor
mov
andl
add
addl
movzwl
sbbl
mov
subl
mov
xorl
movzwl
orl
xor
sbbl
add
mov
mov
mov
movzbl
inc
mov
movl
cmp
movl
jne
mov
movl
cmpl
je
cmpl
jne
push
push
pushl
pushl
push
pushl
call
mov
dec
mov
jmp
xorl
mov
addl
xor
orl
add
mov
sbbl
mov
xor
add
mov
movl
movl
movl
mov
mov
movl
jmp
movzbl
sbb
mov
xor
xor
or
mov
mov
xor
movl
xor
addl
sub
subl
sub
xor
or
sub
xor
mov
mov
mov
lea
mov
movl
cmpl
je
cmpl
jne
push
push
call
mov
dec
mov
jmp
and
mov
or
mov
sbbl
lea
inc
mov
mov
mov
subl
lea
andl
mov
inc
mov
cmpl
jne
push
call
cmpl
jb
mov
sbb
mov
andl
mov
inc
mov
cmpl
jne
push
push
call
cmpl
jb
mov
xorl
lea
andl
mov
inc
mov
cmpl
jne
push
push
call
cmpl
jb
mov
mov
mov
lea
andl
mov
inc
mov
cmpl
jne
pushl
call
cmpl
jb
mov
or
mov
andl
mov
lea
mov
xor
mov
xor
add
jne
movl
jmp
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
pushl
push
call
cmpl
jne
mov
inc
mov
jmp
mov
orl
mov
orl
xor
addl
xor
sub
sub
xor
movl
mov
mov
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
imul
xor
add
lea
mov
add
mov
mov
xor
add
jne
mov
mov
mov
cmp
je
mov
mov
mov
cmp
jne
mov
mov
movsbl
xor
add
cmp
mov
mov
mov
je
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
xor
imul
add
lea
mov
add
mov
mov
xor
add
jne
mov
mov
xor
xor
add
add
cmp
jae
lea
mov
mov
movl
lea
mov
mov
addl
mov
xor
add
lea
mov
xor
mov
mov
xor
inc
incl
add
cmp
jb
jmp
mov
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
imul
xor
add
lea
mov
add
mov
mov
xor
add
jne
mov
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
imul
xor
add
lea
mov
add
mov
mov
xor
add
jne
mov
mov
xor
lea
mov
incl
mov
xor
add
jne
jmp
mov
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
imul
xor
add
lea
mov
add
mov
mov
xor
add
jne
jmp
mov
mov
xor
xor
sub
sub
jmp
cmpsl
js
movsb
mov
je
stos
stos
pop
mov
bound
pop
bound
xor
cmp
jns
jbe
lret
cmpsl
jb
jno
fld
std
dec
push
jae
inc
mov
scas
inc
push
cmp
loop
data16
lcall
hlt
xor
dec
and
std
pop
int
xor
test
mov
clc
cmp
mov
mov
mov
idivb
push
arpl
push
jne
and
stos
adc
cmp
mov
dec
ret
adc
and
jmp
fwait
into
or
divl
mov
add
retw
sti
lret
xor
or
and
or
mov
ljmp
adc
hlt
add
movsb
pop
mov
or
adc
fmuls
push
in
lcall
push
movb
xor
mov
pop
push
ja
cvtps2pi
prefetch
mov
out
cmp
dec
or
stos
xchg
cmc
out
shlb
pop
cmp
lock
into
lods
aad
rorl
andl
movl
xor
loop
cwtl
mov
jo
push
dec
push
scas
adc
mull
dec
dec
jg
sub
movsl
es
loope
cld
sbb
sbb
sbb
mov
popa
xor
cmp
sub
std
cmp
sahf
sub
mov
sub
pusha
mov
xor
fdivl
adc
cmp
stos
ja
xor
mov
clc
mov
mov
jge
and
cmp
sub
aam
dec
mov
sub
lods
add
ljmp
leave
adc
rorb
xchg
sbb
int
inc
nop
test
cmp
mov
cmpsb
stc
popf
ja
pop
adc
dec
cs
fwait
ds
or
mov
mov
adc
scas
pusha
imul
loop
cmp
mov
lar
jge
and
lds
ret
sub
stos
xchg
jp
mov
jns
mov
ljmp
dec
sub
jne
cmp
and
cmp
lahf
inc
jne
xlat
cwtl
andb
roll
pop
sbb
jge
push
xchg
sbb
scas
add
xchg
pushf
inc
cmp
pop
jbe
mov
xor
jne
fisubs
test
fnstsw
imul
sarl
mov
repnz
pop
faddl
fdivs
cmpsb
pop
jmp
stos
out
pop
aad
push
mov
leave
sbb
out
testl
pushf
or
cmpsl
mov
mov
jecxz
in
add
negl
push
push
inc
incl
sahf
movsb
pop
inc
loop
sbb
loope
adc
adc
test
out
pop
pop
mov
mov
xchg
jge
xchg
mov
xor
sub
iret
test
xchg
xor
cmp
ficompl
es
add
or
movsb
cmp
hlt
sahf
and
and
adc
arpl
sub
stc
and
jl
imul
mov
xchg
test
pop
jg
pusha
scas
sbb
les
sbb
out
add
lds
cmpsb
xchg
or
sbb
test
inc
add
push
pop
lock
add
jb
test
pshufw
xor
pusha
add
decb
jno
sbb
nop
and
mov
mov
pop
sub
lcall
shlb
pop
mov
fimuls
stc
sub
repz
mov
push
push
ljmp
orl
test
or
pushl
clc
mov
das
arpl
aas
mov
aam
push
push
cmp
cmp
ret
inc
rcr
les
out
pop
ret
pop
jl
dec
lds
sub
pop
adc
mov
fnsave
cmp
sub
cmpsb
data16
jae
ja
xor
push
nop
rorl
test
mov
sbb
or
mov
call
ja
ja
mov
add
ja
call
fidivl
add
ds
ret
jo
push
lahf
cmp
adc
mov
mov
js
mov
xor
sbb
adc
mul
popf
dec
mov
xor
xor
test
shr
call
jg
ret
loopne
cmp
enter
and
jns
cmp
mov
cmc
enter
jnp
sub
pop
idivl
sar
fs
adc
mov
stos
inc
pop
and
jnp
out
or
add
enter
imul
ret
lods
ret
sub
repz
xor
pop
rcrb
xor
orl
sbb
push
cltd
arpl
cmp
addr16
pop
sub
cmpsl
jo
test
sbb
hlt
fwait
imulb
mov
out
xchg
stc
mov
out
movb
ficompl
int3
movsl
fnstenv
push
pop
divb
push
loop
pop
mov
mov
adc
in
scas
iret
test
cli
and
data16
jo
push
push
mov
add
mov
inc
test
cmp
add
dec
pop
dec
jno
jns
and
mov
sub
in
mov
xor
in
in
mov
shlb
loop
das
adcb
sar
loopne
xchg
pusha
jle
popa
out
test
insl
rcrl
inc
dec
adc
icebp
dec
xchg
fwait
or
orl
fnstcw
mov
jmp
and
outsb
or
repz
pusha
sub
jmp
jne
inc
jns
push
xor
in
sbb
outsb
ja
jbe
cmc
xor
adc
pop
outsl
lock
xor
int
shrb
cld
mov
in
mov
call
and
push
dec
fdivs
rolb
sti
movsl
out
mov
mov
mov
cmp
aas
xlat
rcrl
cmp
cmp
jl
cmp
popf
mov
push
sub
popf
lds
inc
add
rcr
dec
sbb
fiaddl
jge
xchg
fs
or
loopne
adc
mov
sub
mov
and
cmpsl
jge
lea
mov
adc
sbb
inc
push
aad
hlt
jecxz
cmp
gs
js
movsl
ficoml
jmp
xlat
pop
inc
mov
sub
add
mov
or
stos
ret
sub
movsl
sub
dec
pop
fisubl
push
cmp
mov
das
pop
mov
out
push
jno
sub
jne
scas
adc
pusha
xor
out
aad
sub
pushf
sti
test
and
cli
insl
or
imul
mov
jno
int
mov
add
jmp
pop
push
rcrb
aam
adc
imul
inc
cmp
sbbl
jnp
test
fsubl
mov
xor
adc
cld
and
dec
rcrb
mov
sub
test
out
jg
xchg
imul
adc
sbb
fildll
and
mov
push
jns
test
sqrtps
iret
add
cmp
iret
mov
jge
mov
push
icebp
arpl
pop
adc
ret
clc
mov
xchg
or
repnz
jle
mov
pop
rorl
aas
cmpb
jae
mov
inc
inc
jl
test
cmpsb
adc
mov
and
inc
jge
mov
stos
enter
xchg
enter
jne
xor
mov
clc
pop
mov
addr16
dec
call
mov
xor
fwait
cld
push
dec
pop
inc
int
xor
int3
sarl
mov
scas
cld
and
xor
add
cmp
cltd
aaa
inc
fmul
push
cmp
clc
mov
pop
inc
arpl
mov
inc
jge
cli
sbb
sub
lods
mov
je
pop
xorb
sarl
mov
inc
dec
jns
fwait
popa
fcompl
push
pop
lock
sahf
jmp
pop
in
sub
out
or
jnp
mov
movzbl
mov
std
cmp
movsb
outsb
cmp
nop
loope
push
lahf
xchg
fildll
pop
ja
xor
inc
jge
inc
imul
mov
pop
mov
sub
mov
jl
jmp
imul
jecxz
sbb
pop
pop
and
inc
fs
add
inc
push
pusha
pop
fadds
lods
xchg
lret
sub
push
mov
mov
cmp
pop
test
jmp
push
movsb
lahf
out
xchg
test
cmp
int3
js
inc
inc
sti
andps
rolb
pop
call
push
xlat
out
sub
insl
dec
sub
mov
aam
adc
lret
sahf
in
call
cltd
pushf
pushf
insb
adc
cltd
xchg
sbb
daa
adc
outsb
aad
shll
movb
sbb
outsl
push
mov
jnp
cwtl
pushf
icebp
cmp
mulb
cld
mov
pop
pop
mov
jmp
repnz
cwtl
and
pop
popa
mov
jno
or
es
cmp
call
stc
sub
jge
in
stos
daa
in
mov
jg
add
lods
pop
push
fisubrs
jnp
adc
pop
fsubl
stos
scas
leave
sub
outsl
aad
push
dec
inc
sbb
pop
dec
mov
subb
mov
cltd
or
data16
sub
lret
push
sub
mov
loopne
push
out
imul
fs
mov
in
iret
push
inc
sbb
fcmovbe
fcomps
aad
fpatan
movsl
cmpsb
xchg
xor
jg
inc
sub
mov
mov
clc
xchg
leave
out
push
cmpsb
fs
gs
sub
and
inc
push
out
push
add
cmp
inc
adc
in
push
addr16
insl
dec
js
xchg
lds
lret
cwtl
mov
scas
jle
jmp
add
and
clc
pop
push
add
fidivrs
inc
xchg
push
cmpsl
test
inc
xor
pop
and
pop
push
xchg
scas
adc
notb
ja
add
xchg
sub
or
push
divb
out
sbb
xchg
outsl
fisttpll
sahf
cwtl
pop
into
dec
lret
outsb
stos
xchg
divb
movsl
xchg
sahf
dec
sub
neg
pop
inc
and
or
ja
sbb
and
and
mov
lea
mov
mov
es
movsb
jne
sbb
and
pop
rorb
out
ret
jmp
and
or
mov
sarb
add
lock
cmp
sub
sub
std
xor
les
aam
xor
loop
fisttpl
in
out
sbb
mov
test
js
lcall
clc
and
jo
push
test
popf
xchg
aam
sahf
mov
daa
out
icebp
test
xchg
mov
lea
gs
mov
sarb
and
jge
fimuls
jo
mov
sub
dec
adc
dec
xor
icebp
mov
cmp
adc
arpl
jp
and
xor
std
mov
mov
add
ss
and
adc
or
clc
test
or
insb
out
push
leave
sbb
aam
push
push
dec
add
push
ljmp
movsl
outsl
in
pop
mov
inc
jnp
cmc
xchg
sub
movsb
adc
cwtl
xor
lock
or
aam
mov
xor
test
stos
mov
or
ficoml
int
dec
cmp
inc
or
popa
flds
lret
sbb
test
dec
mov
test
gs
lahf
ljmp
aam
int
sub
xor
je
dec
cmc
ss
mull
rcll
shll
mov
add
cmp
loope
pop
pop
imul
or
mov
out
stos
cltd
stc
jecxz
inc
mov
test
loope
fidivrl
in
mov
xchg
ljmp
ds
cs
push
nop
idivb
movsb
aam
and
inc
fs
sbb
bnd
das
cmpsb
popa
es
scas
mov
fildl
dec
addr16
das
add
ljmp
subb
sti
mov
shl
cmp
mov
mov
stos
xor
ja
shlb
ljmp
jmp
push
imul
dec
sbb
push
sub
xor
movsl
push
int
push
dec
ljmp
sub
push
es
adcl
add
testb
mov
nop
xchg
rep
dec
hlt
jae
dec
sbb
add
sub
jns
out
loopne
cs
jo
daa
repnz
jo
and
cs
xchg
cli
mull
push
push
fdivr
pop
mov
cmc
mov
test
and
jp
cmp
and
fimull
loopne
ret
pop
int
mov
adc
cmp
mov
dec
mov
out
or
jecxz
xor
push
mov
arpl
push
scas
jg
xchg
add
mov
aaa
stos
pop
popf
jo
out
aad
push
fucomp
int
loope
inc
push
xchg
das
xchg
rcrb
jg
dec
fistpl
outsb
mov
cwtl
and
adc
push
or
push
loope
inc
cmp
adc
pop
leave
adc
adc
ss
sub
inc
movsb
ds
push
rorb
pop
stc
jbe
aam
and
jl
sti
jbe
cs
ror
inc
mov
popf
sbb
jle
sbb
cmpsl
jns
push
int3
pop
jge
gs
mov
cltd
iret
dec
ss
mov
loopne
jmp
inc
pop
cmpsb
pop
arpl
int
jno
jns
clc
jg
inc
lcall
loopne
lahf
orl
xor
xchg
rcrb
sbb
ror
fiaddl
inc
lret
out
les
jmp
stos
imul
push
out
dec
cs
addb
out
cmp
mov
pop
lods
imul
xchg
lds
mov
cld
lods
push
dec
les
repz
test
add
popf
xchg
adc
xor
rcl
ja
xor
fidivs
sub
mov
fisubrl
add
std
pop
mov
into
iret
test
aad
movsl
jnp
xlat
and
mov
or
fimull
mov
jne
mov
icebp
cmp
mov
and
insl
push
jmp
gs
popf
loop
sbb
pusha
mov
lcall
pop
cld
jl
test
cmp
cmp
lret
sub
outsb
out
dec
sub
mov
mov
inc
movsl
mov
push
rcrb
repz
mov
popa
rol
les
xchg
and
pusha
mov
sbb
std
bound
aad
sarl
and
adc
mov
je
mov
hlt
ljmp
add
hlt
mov
adc
xlat
sub
popa
in
fimuls
inc
mov
data16
mov
mov
or
cmpsl
lret
dec
jg
ret
pop
xchg
and
mov
xor
xchg
aad
sbb
pop
scas
mov
push
add
cld
aad
cmpsl
cltd
fstpl
push
das
icebp
scas
inc
jecxz
inc
or
inc
in
cmp
fsubs
shl
inc
jno
repz
mov
cmp
inc
fmull
cwtl
and
stos
lret
and
incb
push
cmc
loopne
inc
cmp
ja
inc
fstpt
push
cmpsl
push
jnp,pt
decb
cmp
out
and
mov
mov
mov
test
mov
mov
pop
test
mov
stc
scas
adc
sti
ds
jge
cmpsl
cltd
xchg
or
xor
stos
pushf
inc
sub
loope
and
dec
data16
sbb
pop
add
push
or
nop
insl
add
scas
popf
pop
adc
nop
int3
pop
dec
mov
vcmpps
jno
lds
fcoms
push
lret
jns
xchg
in
out
ljmp
aas
pop
mov
xchg
adc
push
xchg
stos
cli
cmp
loopne
sbb
pusha
into
adc
popa
xor
push
movsl
xchg
push
adc
jmp
add
in
aaa
jge
jl
test
xor
jp
dec
mov
inc
lock
mov
movsb
insl
adc
pop
sub
mov
mov
xor
cmp
jno
pop
nop
and
or
inc
mov
xchg
movsb
lods
cltd
pop
rorl
pop
lcall
mov
loopne
cmpsb
cltd
xchg
cmc
sbb
sub
dec
mov
lahf
push
dec
imul
pop
fidivs
jmp
cmp
lret
pop
andl
bound
push
ror
and
stc
jge
insl
lret
ret
rorl
or
sub
mov
sti
mov
sub
repz
or
imul
movsl
add
test
and
inc
inc
jns
mov
outsb
xchg
insl
cmp
enter
mov
imul
adc
lcall
xchg
lcall
in
hlt
sub
dec
loope
out
sbb
xor
fidivs
cli
push
insl
and
jle
data16
outsl
stos
sti
int3
jle
jecxz
mov
sub
fldl
and
sub
dec
jb
jb
push
cmp
sub
push
mov
mov
mull
jp
xor
xor
dec
shrb
cmp
ret
imul
ret
aas
mov
adcl
dec
add
xor
movsb
mov
push
test
cmp
lods
jne
je
jne
cltd
xchg
in
int
clc
pop
ret
out
ljmp
out
dec
jne
jle
inc
data16
mov
aad
and
dec
movsl
neg
movsl
and
arpl
das
inc
push
mov
dec
inc
aas
fwait
add
repnz
adc
adc
lret
sub
mov
mov
add
pushf
or
xchg
ljmp
test
mov
xchg
arpl
je
sbb
pop
sub
cmp
shll
cld
or
add
scas
or
stos
mov
mov
cmp
and
cmp
cmp
cmp
push
push
lods
mov
mov
push
les
sti
dec
cmp
add
cwtl
enter
inc
sti
add
call
mov
loop
lea
mov
pop
mov
stos
xor
sub
out
lahf
scas
sub
enter
sbb
arpl
jl
in
divl
mov
xchg
and
adc
loop
xchg
gs
xor
mov
gs
repz
orl
xchg
loop
cmpl
xchg
mov
sub
xchg
sbb
call
shll
popf
or
cmp
push
aas
rorl
cmp
sti
dec
push
outsl
int
out
aaa
pop
mov
mov
cs
rorl
xchg
jo
jmp
xor
xchg
pop
imul
int
jg
mov
lea
inc
cwtl
cltd
mov
repnz
cmp
ljmp
xor
push
inc
and
inc
or
cmp
test
orl
shrb
repnz
mov
inc
cmc
test
call
sbb
in
in
xlat
adc
cs
lds
sbb
stos
pop
cmpsb
xchg
cwtl
popf
repnz
test
test
xor
sub
mov
cmp
sub
mov
add
int3
and
fists
sub
rclb
sbb
xchg
inc
fisubrs
dec
das
mov
pop
stos
sub
sub
pop
fwait
sub
cltd
push
mov
cmpsb
cmp
leave
push
les
sbb
enter
cli
xchg
test
dec
inc
adc
test
in
fldt
sub
xchg
push
rcll
xor
add
fdivl
inc
cmp
into
into
in
and
mov
lods
add
popa
pop
pop
insb
imul
adc
fs
jns
xchg
aas
inc
adc
aaa
xor
sahf
repz
cli
and
jae
or
ds
add
es
cli
xor
push
lds
fldenv
int
jae
push
gs
jmp
xchg
and
mov
fistpl
aaa
aad
repz
shll
sti
jg
rcll
mov
popa
adc
enter
jno
or
xorb
sbbl
jne
scas
and
and
dec
jg
out
imul
imul
mov
dec
pop
cmp
cmpsl
ret
fldenv
aad
dec
adc
mov
cltd
lock
setge
mul
pop
andl
iret
cmc
ret
addr16
mov
psubq
imul
test
into
push
ficomps
xor
movsl
and
or
adc
sbbl
js
xor
arpl
add
jno
xchg
mov
test
fisttps
jb
das
mov
dec
lods
cmp
lods
mov
sbb
xchg
inc
sub
mov
cmp
and
inc
sbb
jp
jl
push
das
xor
sub
adc
inc
icebp
mov
pop
cmp
outsb
xor
push
iret
xor
fcmovnu
sub
dec
sar
ss
ds
xor
jbe
gs
in
push
rolb
cmp
pusha
ucomiss
dec
loop
or
push
sub
pop
ja
insb
ss
rcll
in
repz
fistpl
movsb
leave
mov
mov
xor
and
dec
ror
sub
mov
out
test
pop
and
js
ja
ret
cmp
inc
sub
pop
jle
ljmp
and
lahf
imul
mov
fsubrs
repz
mov
insb
add
cwtl
icebp
add
jo
scas
mov
mov
outsl
adc
out
pop
movb
fdivrp
cmc
xchg
outsl
inc
sahf
xorb
adc
sub
pop
fxch
inc
fnstenv
ds
pusha
lret
mov
addr16
mov
cli
pop
stc
mov
xchg
sbb
mov
in
daa
cmpsl
sar
fwait
push
mov
add
push
adc
add
cmpsl
sub
xor
adc
movsl
mov
pop
xchg
add
in
and
inc
adcb
ficompl
out
dec
pop
push
mov
lcall
lods
js
outsb
and
inc
stos
xchg
cltd
jl
fs
jecxz
ret
aam
hlt
repz
scas
ljmp
test
mov
outsl
loopne
jb
mov
mov
js
out
xor
inc
scas
lcall
push
cs
xor
xchg
lds
jns
pop
notb
add
push
and
repz
stos
sub
pop
mov
xor
iret
sub
xchg
nop
mov
dec
mov
adc
lret
mov
imul
stos
add
add
sub
hlt
jmp
and
neg
scas
mov
js
into
mov
cltd
push
rep
push
mov
dec
sbb
push
sub
push
sbbl
sub
mov
adc
in
mov
sarb
dec
ret
xorl
sti
js
mov
insb
inc
sarb
dec
lret
jb
mov
pop
push
daa
cld
pop
sahf
es
push
xchg
dec
in
xchg
or
fisubs
int3
sahf
inc
or
cmpsl
out
mov
inc
sbb
in
aam
mov
lea
lock
push
insl
lcall
cmp
mov
out
js
out
mov
cmp
mov
mov
sti
leave
mov
scas
rcll
clc
lahf
sbb
xor
pop
sub
pop
nop
mov
loop
cwtl
ja
cmp
and
rcrl
push
jne
test
jae
cmp
in
pop
mov
daa
adc
pop
dec
lret
xor
scas
js
cmp
fxch
les
nop
fwait
sbb
gs
mov
pop
jl
adc
sbb
and
mov
or
push
leave
stc
lret
clc
jmp
inc
jo
pop
mov
inc
inc
neg
cmpsb
mov
vpsllw
dec
cmp
mov
pop
mov
in
call
or
lret
ss
or
sbb
dec
sbb
mov
jo
sub
nop
and
jge
repnz
dec
mov
dec
xor
lea
ret
std
shrl
jno
inc
jns
lahf
mov
enter
cmp
lods
push
pop
adc
lods
stc
fisttpl
ret
jecxz
jge
inc
mov
or
stos
shrb
mov
jo
sbb
push
jno
loope
stc
leave
sbb
jne
arpl
push
hlt
xor
mov
out
pop
test
sti
xchg
sub
bound
xor
mov
xchg
adc
jae
test
inc
pop
jns
shl
cld
jmp
adc
aaa
jb
dec
mov
add
sbb
loope
push
leave
push
mov
or
daa
push
shl
imul
leave
cmp
enter
fmuls
popa
pop
sbb
cmp
mov
out
rcr
xor
adc
pop
dec
xor
fmuls
cli
fcmovbe
outsb
js
mov
xchg
lahf
subl
bound
and
adc
jp
bound
sahf
xchg
and
imul
aad
sbb
fs
xor
or
fwait
insb
nop
es
pop
outsb
leave
sub
jae
and
bound
stc
sbbl
stc
cltd
shrl
push
push
pusha
mov
leave
dec
xchg
sbb
popf
pop
sub
xor
dec
cmp
test
jl
mov
ret
imul
mov
jbe
mov
push
adc
push
rcr
cltd
pop
push
sbb
add
aaa
jne
jns
adc
mov
xor
stc
push
xlat
pop
cmp
sbb
cwtl
out
bound
rcrb
shl
mov
test
mov
daa
leave
xor
dec
lahf
mov
inc
imul
sub
or
ss
fcoml
mov
out
ficompl
jns
aad
enter
test
nop
lcall
push
lds
adcl
nop
sbb
inc
fdivrl
scas
ds
aad
ds
mov
js
push
ljmp
jb
pusha
xor
ja
repnz
das
push
adc
pop
iret
push
inc
sub
cmp
pop
xor
xlat
aam
sub
xor
mov
jge
inc
adcl
out
and
rcll
lods
push
daa
xchg
xor
vcmppd
jbe
in
lods
cmp
mov
subb
mov
mov
pop
push
adc
push
push
pop
cmp
sub
scas
jle
cwtl
fsubl
xor
repz
into
pop
pop
pop
pop
filds
jns
jns
cmp
jmp
fldt
cmp
iret
cmp
gs
mov
add
and
inc
or
lret
std
push
mov
mov
xchg
pop
iret
rolb
mov
daa
add
repz
imul
inc
enter
dec
lock
test
cmpsl
std
pop
dec
mov
fcoml
push
int
sets
je
mov
xchg
mov
int
fmuls
or
push
testb
in
lret
xchg
and
popf
xchg
cwtl
subl
add
adc
imul
or
iret
mov
in
jbe
imul
stos
fimuls
xor
push
inc
outsl
adc
mov
testl
lcall
xor
push
push
push
cs
jl
dec
fs
lods
es
dec
movsl
ret
movsl
add
out
andl
pusha
sbb
cld
mov
ja
call
test
mov
aad
cmp
mov
jae
xor
dec
xchg
arpl
push
ja
adc
filds
or
dec
les
outsb
push
cmp
test
roll
test
pushf
stos
sub
out
dec
in
and
es
inc
add
mov
scas
stos
ret
mov
rclb
pop
aas
inc
repnz
jne
sub
fcomip
in
cli
add
test
xchg
dec
mov
adc
cli
mov
and
shll
cmp
dec
fs
out
cli
mov
cli
xor
lods
or
enter
lea
iret
mov
sbbb
sub
in
fwait
dec
in
or
in
cmp
aas
mov
imul
dec
mov
shrb
sub
in
icebp
fidivrs
sub
aad
push
sub
mov
loop
imul
lea
mov
xchg
and
mov
sbbb
out
xchg
push
test
fcoms
mov
mov
lods
inc
and
mov
incl
iret
push
mov
out
mov
add
outsl
jge
inc
pushf
and
and
ret
cmp
push
or
cmp
insl
mov
mov
imul
push
mov
xchg
push
int
sahf
adc
sub
push
dec
cmp
scas
imul
and
dec
shrl
sbb
mov
lock
gs
cmc
or
sbb
rcl
mov
fidivl
mov
and
adc
add
es
cltd
sub
add
aaa
dec
xchg
sub
fcmovnbe
cmp
jp
xchg
dec
clc
push
xor
call
out
adc
inc
ljmp
lahf
adc
push
lahf
mov
ds
loop
add
addr16
sahf
dec
shrl
mov
sbb
lods
mov
dec
inc
call
mov
add
addb
jmp
aaa
out
cmpsl
test
pop
pop
adc
pop
fstpt
rolb
sbb
pop
dec
and
andb
adc
push
shll
xor
jg
mov
or
push
ret
aas
sub
jmp
or
inc
inc
mov
pop
push
cmp
ja
out
and
int
mov
movsl
sbb
aaa
repnz
subb
add
fwait
inc
lret
movsl
movsb
pushf
in
mov
jae
adc
mov
shlb
push
movb
ffreep
mov
pop
fcom
xchg
ljmp
or
xchg
inc
pop
cmp
xor
xor
xor
sub
test
or
popf
lahf
mov
pushf
mov
mov
daa
rcrb
inc
leave
shll
loope
cmpsb
jmp
rolb
mov
aaa
cs
xor
int3
movsl
je
inc
bnd
hlt
ret
sbb
stos
push
pop
fildl
ds
into
pop
ret
cwtl
xor
mov
cmc
dec
lea
xchg
les
in
repz
lods
leave
mov
test
enter
jbe
or
jns
inc
nop
add
repz
es
outsb
adc
jg
sbb
or
mov
in
roll
pop
out
jb
pop
pop
sub
push
sbb
jmp
mov
sbb
loope
pop
cmpsl
and
mov
add
mov
inc
lret
in
insb
mov
faddl
mov
or
or
enter
or
add
lea
mov
add
mov
mov
xor
add
jne
mov
xor
mov
add
mov
pop
pop
pop
leave
ret
push
mov
movl
pop
movl
jmp
sbb
mov
ret
push
mov
sub
mov
movl
cmpl
je
cmpl
jne
pushl
pushl
pushl
call
mov
dec
mov
jmp
xorl
mov
movl
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
push
pushl
call
cmpl
jne
mov
inc
mov
jmp
add
mov
adc
push
or
mov
andl
mov
inc
mov
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
movzbl
sub
xor
mov
push
sbb
mov
add
movl
cmp
movl
je
mov
sub
mov
xor
xor
add
add
adc
xor
mov
push
xor
xor
mov
add
adc
xor
xor
cmp
jne
cmp
je
jmp
mov
mov
mov
xor
add
mov
imul
mov
xor
add
mov
mov
mov
mov
xor
xor
add
adc
lea
xor
xor
xor
mov
add
adc
xor
xor
cmp
jne
cmp
jne
mov
pop
pop
pop
leave
ret
push
mov
sub
adcl
push
push
push
push
subl
lea
sbbl
push
addl
push
subl
call
push
andl
call
andl
mov
inc
mov
cmpl
jne
push
push
pushl
push
pushl
push
pushl
push
push
push
call
cmpl
jb
add
movl
movl
orl
mov
adc
mov
xor
xor
mov
add
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
call
jmp
mov
adcl
test
movl
je
mov
mov
mov
mov
imul
orl
mov
sbbl
add
xchg
or
mov
sub
xor
mov
xorl
xor
movl
cmpl
je
cmpl
jne
push
push
pushl
call
mov
dec
mov
jmp
sbbl
add
mov
sbb
mov
sub
mov
movl
xor
add
mov
mov
sbb
mov
xor
movl
cmpl
je
cmpl
jne
push
push
pushl
call
xor
add
dec
mov
jmp
neg
add
adc
mov
orl
mov
andl
mov
inc
mov
cmpl
jne
pushl
push
call
cmpl
jb
xor
movl
cmpl
je
cmpl
jne
pushl
push
push
pushl
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
add
sub
mov
orl
sub
jmp
div
and
xchg
lods
mov
push
jne
sbb
bound
pop
bound
rcrl
aam
bound
inc
add
lock
data16
ficoms
addb
iret
fistps
mov
add
mov
dec
call
xchg
outsb
push
xor
xor
lock
mov
mov
aam
and
packssdw
jbe
dec
nop
mov
pop
hlt
jae
mov
cmp
and
aam
xchg
mov
and
stos
insl
loop
lret
xchg
push
inc
mov
fsubl
or
mov
jo
xlat
mov
jl
mov
inc
fnstsw
mov
sub
or
ja
scas
lods
push
xchg
mov
sbb
cmpsb
push
cld
xor
lock
xchg
das
xchg
int
sbb
jne
shrb
repnz
movsl
push
mov
xchg
inc
inc
and
lods
insb
jb
mov
jns
and
test
mov
aam
mov
mov
leave
mov
sub
in
dec
cltd
and
and
or
test
ss
xor
insb
dec
mov
loopne
lods
jae
push
aam
dec
jle
cmp
mov
out
xor
pop
les
fs
adc
orb
dec
inc
ror
in
mov
mov
jle
push
stos
fstl
xor
fidivrs
lods
mov
mov
pop
adcl
rol
ja
lea
in
cs
ret
sbb
das
dec
cmp
or
out
xor
mov
mov
mov
jg
or
cmp
jbe
out
popa
and
sbb
pushw
add
sbb
jb
in
inc
popf
xchg
or
jmp
lods
xlat
adc
insb
orl
movsb
adc
hlt
xchg
jl
shlb
sbb
inc
in
outsb
adc
shl
sbb
outsb
jl
mov
inc
test
mov
pop
push
les
sub
mov
xchg
pusha
cld
sub
loope
add
jb
iret
dec
add
push
pop
sarb
dec
test
mov
notl
xchg
adc
jmp
enter
negb
cmp
fcompl
mov
lods
push
out
xchg
nop
xchg
mov
push
dec
fmuls
pop
and
push
sub
mov
syscall
loop
fldt
xchg
aam
add
js
push
jbe
xchg
js
mov
sbb
mov
lcall
aam
cmp
aad
dec
inc
lret
scas
push
test
scas
sarl
daa
pop
push
inc
out
mov
jnp
fs
and
mov
fdiv
mov
outsw
movsl
adc
aad
enter
outsb
jnp
stc
pusha
mov
adc
outsl
sti
sub
xchg
mov
xchg
cmp
push
jp
nop
sti
inc
mov
mov
hlt
sub
mov
test
outsl
outsb
mov
and
repz
pushl
pop
mov
xor
dec
imull
cmp
push
jp
dec
fwait
mov
push
xchg
jno
push
pop
mov
loop
or
sub
pop
xor
push
bound
push
mov
add
cltd
aas
lock
aam
inc
incb
mov
jge
adc
mov
icebp
add
es
inc
dec
inc
lcall
js
cli
test
cli
and
mov
hlt
dec
and
mov
inc
dec
xor
mov
jae
pop
ror
xchg
shll
into
outsb
dec
popa
cmp
cmovno
push
xchg
dec
out
das
mov
mov
aam
add
dec
cld
xor
lea
add
bound
aam
mov
jno
cmp
into
push
rclb
clc
xor
and
jge
cmp
jmp
mov
and
cmp
aad
sub
add
addr16
pop
in
push
and
fstl
pop
xchg
xchg
push
cmpsl
and
data16
loope
xlat
popa
cmp
xchg
popf
movsb
xlat
sbb
aam
adc
lret
pop
imul
jg
test
aas
mov
add
cmovp
sbb
pop
or
pusha
in
jge
lahf
push
gs
mov
dec
push
xchg
lds
adc
imul
pop
mov
mov
dec
pop
and
lods
test
push
dec
inc
out
push
vmread
jecxz
add
xchg
pusha
jp
sub
pop
push
mov
jne
cld
add
iret
pop
push
pop
out
jns
in
cltd
jae
mov
call
xchg
stc
jno
outsb
stos
ss
mov
push
adc
cmc
mov
aaa
or
pop
mov
in
sbb
or
xchg
or
stc
iret
dec
insb
lods
ja
imul
mov
cmpsb
xchg
andb
sbb
aad
icebp
ret
push
xchg
daa
inc
sbb
push
pop
std
or
pop
and
je
jecxz
mov
fstpt
decb
int
jns
fdivs
jmp
pop
mov
push
mov
fst
in
xor
push
add
mov
sbb
ss
dec
mov
repz
movl
ret
mov
mov
leave
adc
movsb
cmpsl
insl
inc
dec
clc
inc
adc
and
inc
sub
je
jno
gs
fildll
dec
jno
or
cwtl
or
sarl
int3
fcom
sti
loop
push
and
xor
fs
mov
add
mov
lock
test
jno
jmp
mov
ss
mov
pop
mov
enter
cmp
fmull
in
jmp
mov
clc
into
popa
pop
push
pop
lahf
mov
sbb
out
inc
adc
mov
test
sbb
ja
xchg
mov
pop
and
jne
mov
aad
sbb
fnstcw
cmpsl
push
into
out
iret
rcl
dec
and
push
pop
jne
out
in
mov
mov
test
mov
rorl
sbb
fwait
and
aad
mov
wrmsr
fucomip
into
cli
cltd
cmp
add
mov
enter
pop
pop
jmp
cmc
inc
mov
aas
fwait
pushf
mov
aad
mov
dec
dec
jl
mov
mov
jecxz
jmp
scas
cli
lret
pop
mov
sub
jle
xchg
sub
pop
ficoms
loop
in
sarb
adc
dec
and
push
push
lret
in
mov
fiadds
jl
and
mov
data16
imul
jmp
and
adc
aaa
ret
outsb
clc
call
lds
aad
inc
xor
lods
aam
push
push
sbb
int
stos
loope
cli
test
adc
pop
or
pop
scas
repz
aam
pop
xchg
sti
jb
lcall
mov
movsl
clc
and
jne
dec
scas
or
push
dec
xchg
lret
push
mov
out
mov
sub
mov
mov
or
sahf
mov
jno
adc
mov
outsl
adc
fisubs
in
jmp
or
adc
je
out
push
lds
inc
das
dec
jmp
mov
pop
roll
sbb
mov
mov
cmp
das
test
dec
aas
mov
ja
imulb
rcrl
shlb
dec
daa
dec
repz
or
clc
sub
leave
clc
loop
adc
aam
mov
mov
daa
in
xchg
inc
lret
mov
pop
push
mov
cmpb
scas
adc
aaa
ror
cmp
bnd
leave
das
push
mov
or
test
fsts
into
jo
out
dec
enter
movsb
push
mov
test
insl
aad
add
mov
or
scas
test
mov
stos
in
mov
xchg
add
pop
cli
in
movsb
lock
ds
fwait
mov
daa
pop
mov
es
xchg
jp
repz
mov
and
push
dec
popa
sub
clc
or
jp
cmp
sbb
lret
and
sbb
shll
sahf
mov
mov
add
cmpsb
dec
mov
lods
add
lret
aad
inc
cmp
rcrl
sti
adc
imul
shll
bound
leave
lds
insb
mov
mov
idivl
jecxz
jecxz
cmp
mov
inc
lahf
push
iret
and
jns
jle
inc
add
cmp
cmp
lret
push
pop
xchg
inc
bswap
rclb
jl
clc
call
iret
adc
movsl
jo
jle
sti
dec
vpextrb
push
jns
sbb
mov
lock
sub
fisubrs
pop
fdivs
fildll
popa
adc
testl
int
xor
lahf
jl
in
sub
inc
leave
and
xor
xor
jno
push
stc
gs
fcomip
dec
mov
pushf
iret
shll
mov
test
xchg
push
lcall
int
arpl
adc
in
mov
sub
or
jo
add
ds
insl
pop
sti
imul
outsb
rcrb
and
repz
ljmp
dec
test
das
outsl
addr16
mov
punpcklbw
in
rolb
pop
clc
inc
lock
scas
out
inc
dec
pusha
jb
sub
xor
pop
aad
pusha
jecxz,pn
popf
inc
or
fsubrs
mov
loop
rdpmc
cmp
cli
popa
jb
xchg
push
mov
push
add
pop
sbb
sti
fbld
sbb
push
xchg
mov
inc
and
ret
sub
scas
add
add
aam
lahf
imul
mov
push
shll
push
mov
enter
jae
inc
and
lahf
imul
or
mov
loopne
js
push
mov
jne
sahf
test
dec
mov
mov
ja
mov
ret
jbe,pt
xorb
xlat
sbbl
cmp
or
sub
pop
sahf
push
cli
xchg
and
mov
andb
or
movsl
adc
pusha
call
ss
adc
xchg
imul
mov
fdivl
xor
push
or
push
xlat
dec
nop
lock
dec
inc
outsl
push
dec
or
subb
decb
rclb
cmp
scas
ss
jge
stc
test
lds
dec
adc
mov
aad
into
or
pop
outsb
and
mov
cmp
mov
aaa
cltd
xchg
fcompl
mov
in
pop
push
sub
les
push
fnstenv
push
sbb
jo
popa
xor
mov
sub
xor
push
xchg
jno
sbb
cmp
daa
dec
inc
sarb
mov
aaa
mov
mov
push
xor
xchg
xchg
mov
movsl
clc
lea
cmpsb
push
outsl
rorl
mov
imul
sbb
fadds
fidivs
scas
rcr
jnp
fidivrs
aad
iret
popa
push
mov
cmpsl
repz
lea
adc
add
xor
mov
push
xchg
dec
in
mov
cmpsb
mov
add
iret
fsubs
out
push
in
mov
dec
pop
push
jp
dec
lods
or
idivl
jno
mov
es
int
mov
test
add
jmp
ret
adc
jae
ffreep
pop
sub
stos
ret
in
pop
jg
mov
xor
loopne
daa
lea
repz
jb
out
test
jbe
mov
fs
add
mov
int3
movsb
push
dec
xchg
push
dec
jle
lret
mov
jnp
cli
jmp
mov
jnp
inc
mov
sbb
adc
add
sub
clc
xlat
sbb
lret
xor
test
jge
jl
push
jge
add
sub
sub
in
push
and
lock
dec
inc
pop
sub
jmp
cmp
test
pushf
mov
pop
mov
jmp
insl
cmp
test
fwait
jo
sbb
pop
cmpsb
cmpsl
sub
sub
and
jo
fdivrs
mov
test
lods
mov
mov
dec
orb
imulb
mov
dec
fwait
mov
jp
mov
ds
rolb
cmpsl
sarl
lret
daa
inc
mov
sbb
or
dec
mov
xchg
xor
cmp
dec
sbb
adc
adc
xchg
push
lret
dec
xchg
sub
mov
negl
cmp
int
pop
and
js
push
add
cmp
xchg
jno
push
inc
push
dec
pop
fisttps
add
cmp
mov
ds
cmp
sbb
arpl
test
mov
xor
ffree
push
lret
dec
sbb
pop
bound
mov
shrb
imull
cltd
pop
mov
aaa
pop
dec
fdivs
cmp
or
popf
push
orb
mov
dec
dec
push
pop
int
push
push
cs
lock
idivb
xchg
lods
stos
movsbl
xchg
jo
xor
sbb
cld
pop
xor
test
iret
sub
cmpsl
lahf
sbb
xchg
xchg
into
repnz
test
inc
je
lock
cld
pop
mov
add
inc
pop
sbb
mov
and
pop
lcall
pop
cltd
mov
jnp
out
insb
scas
test
dec
out
data16
mov
sub
insl
mov
mov
mov
inc
xchg
cmp
pop
stos
push
lret
lret
xor
jbe
out
inc
leave
adc
push
sbb
decb
xchg
addb
test
or
femms
aaa
pop
std
enter
cmpl
pop
test
repnz
sub
mov
cmp
pop
stos
adc
pop
loop
movsl
subl
in
jecxz
aas
xchg
sub
repz
or
mov
mov
aas
pushf
popl
jne
dec
mov
or
insb
inc
push
mov
loopne
imul
inc
sbb
repz
inc
shlb
cmp
sti
daa
jge
adc
ret
push
into
ljmp
das
dec
int
in
add
sbb
mov
loope
enter
mov
lcall
pop
insl
pop
imul
push
mov
push
repz
aad
sub
hlt
fcoms
cli
sbb
mov
pop
mov
popa
cmp
imulb
divl
push
add
mov
divb
mov
shr
dec
jno
pop
std
imul
mov
repnz
lea
or
push
mov
out
inc
repnz
fidivrs
add
mov
ljmp
lock
sub
out
mov
mov
aam
jg
sub
push
dec
divb
decb
inc
gs
xorb
sti
sbb
adc
in
hlt
jbe
push
inc
mov
xor
sahf
or
xor
add
pop
xlat
pusha
push
sub
les
das
hlt
pop
ret
scas
pushl
cmpsb
mov
movsl
test
mov
jmp
adc
icebp
jnp
out
imul
mov
lea
out
cmp
mov
and
hlt
lret
inc
js
aaa
rcrb
frstor
mov
add
imul
sti
xor
je
negl
bound
cmp
push
pusha
pop
adc
dec
xchg
xor
call
xchg
pop
test
mov
repz
xchg
sar
pop
mov
inc
mov
inc
inc
shrb
dec
pop
sub
push
mov
jl
shll
or
cmp
aam
dec
mov
jl
xor
in
jg
pop
xor
or
xchg
icebp
mov
sbb
mulb
dec
sub
pop
pop
sub
cmp
enter
sarl
dec
adcl
and
popf
repnz
mov
sub
cmp
sbb
push
xchg
call
ja
aaa
mov
sub
aaa
mov
or
arpl
push
cmp
and
mov
mov
jp
dec
sahf
and
push
jo
add
cmc
or
and
mov
scas
mov
or
out
adc
mov
mov
push
daa
mov
jne
lock
popa
xor
fwait
mov
cmc
and
pop
mov
icebp
and
str
loop
dec
or
pop
xor
mov
pop
adc
and
movsl
lods
inc
repz
push
nop
xor
lods
rorb
jb
dec
sub
std
stos
out
out
loope
pushf
xchg
fsubrl
adc
aam
mov
rcl
xchg
mov
je
daa
add
lret
add
mov
cs
jb
push
loope
popa
adc
mov
pop
insb
adc
scas
cmp
jne
and
call
lret
loop
lahf
xor
push
ret
ffreep
mov
aam
sub
or
jne
imul
jb
adcb
jo
dec
xlat
sbb
and
subl
jne
mov
cmp
stos
dec
adc
insl
in
pop
cmp
jecxz
mov
lock
mov
pop
popf
aas
hlt
cmp
cwtl
mov
insl
jo
push
xchg
mov
nop
push
loope
add
mov
pusha
jbe
stos
out
mov
scas
xchg
or
xchg
dec
xchg
loopne
call
lcall
lret
jbe
pop
sub
xor
insb
mov
ret
out
mov
mov
add
xchg
sbb
jo
pop
imul
adc
xchg
repnz
stos
les
sbbb
jae
decl
sub
dec
fs
daa
xchg
ljmp
jl
dec
lods
jbe
sub
inc
pop
shrl
jae
mov
and
aam
stos
mov
imul
push
fdivp
insb
push
xor
imul
fstl
push
lea
je
fstpl
inc
incb
add
push
or
aaa
lods
sub
lock
popf
mov
cmp
xchg
sbb
mov
jle
cmpsb
rorb
lret
cli
lods
xchg
aad
sahf
jg
ret
shr
xor
fs
cwtl
data16
push
mov
lcall
fsubl
cmp
movsb
and
das
shr
inc
js
mov
jbe
dec
lret
pop
push
push
xchg
xchg
sarb
and
cmp
test
loop
into
mov
jp
dec
leave
in
orl
fbstp
mov
mov
push
insl
dec
mov
mov
jp
pop
jbe
in
sbb
or
ja
pop
sbb
pop
push
icebp
clc
loop
adc
push
and
pop
dec
leave
fsubrl
xor
je
loopne
add
rcrl
mov
shufps
ret
arpl
sbb
xor
pushl
or
inc
jns
leave
cmp
dec
mov
and
or
scas
inc
dec
pop
int
repnz
js
pusha
mov
or
call
pop
out
aaa
mov
pop
xor
pop
dec
add
push
inc
push
pop
push
add
jae
pushf
xchg
ss
pop
sarl
push
je
cld
adc
push
xchg
sbb
ss
icebp
shrl
push
lock
push
packssdw
push
stos
push
adcl
mov
xor
adc
mov
mov
lds
xor
jg
adc
jl
sahf
ja
mov
repnz
nop
fidivl
fldt
js
shrl
sar
in
stc
fadds
gs
enter
mulb
or
push
xchg
cmp
sbb
push
out
adc
add
les
sub
fwait
scas
stos
notl
loopne
mov
or
mov
imul
cmp
clc
pop
dec
scas
pop
js
push
and
xor
jle
add
mov
int3
add
pop
pop
xchg
ds
sbb
int
negb
jnp
aad
data16
push
test
mov
mov
aaa
xchg
insl
movsb
xchg
jnp
sub
outsl
out
and
in
and
cmp
mov
scas
out
or
pop
popf
shll
inc
or
dec
nop
xor
inc
lods
dec
mov
xchg
push
test
shll
lcall
mov
jno
or
test
dec
sbb
insb
shlb
cli
adc
mov
std
jne
filds
dec
test
int3
mov
adc
mov
inc
push
mov
pop
int
push
mov
imul
out
mov
add
aad
or
enter
mov
out
rolb
sub
inc
ljmp
cmc
popf
xor
push
or
cld
sbb
sub
and
in
add
inc
movsb
inc
popa
inc
stos
and
aam
rcl
cmp
push
xchg
inc
xchg
xor
push
jmp
pushf
mov
dec
dec
repz
mov
adc
mov
sub
mov
cmp
ljmp
jmp
ror
dec
push
adcl
cs
gs
pop
inc
adc
pop
add
push
cmc
das
in
pushf
sub
fiadds
inc
dec
test
into
adcl
mov
push
mov
clc
cmp
clc
lcall
xor
subb
mov
or
repnz
lods
adc
xchg
mov
cmp
sub
loopne
int
add
rol
loope
call
sub
sub
push
out
jg
pusha
scas
dec
aad
inc
cmp
and
mov
add
lock
fs
fistpl
ljmp
aaa
enter
mov
xchg
add
push
mov
xor
jmp
dec
in
fwait
mov
mov
pop
cltd
insl
in
gs
inc
cltd
lds
leave
and
int3
std
xchg
mov
sbb
mov
mov
cwtl
xchg
ja
sub
fadd
sub
add
popf
jnp
jo
clc
in
mov
scas
mov
fwait
pop
mov
pop
jno
mov
out
out
cmp
push
std
push
test
add
movsb
add
or
pop
shr
out
dec
xchg
cwtl
pop
shr
test
xchg
or
or
das
stos
jg
pop
inc
sarl
flds
call
jns
mov
je
xchg
push
sbb
pop
outsl
in
fwait
loope
gs
gs
adc
mov
mov
push
mov
loopne
jle
xchg
mov
jge
sub
xchg
mov
out
mov
xchg
shll
xor
push
hlt
jmp
push
stos
mov
loope
mov
ds
xor
jo
lds
test
lret
out
cmp
xchg
push
mov
iret
sbb
outsl
sahf
loope
sbb
push
int
fidivrs
jg
fistl
rolb
dec
cmc
mov
jmp
cmp
xlat
or
inc
dec
nop
jne
push
into
xchg
add
outsb
add
mov
jp
inc
fnstcw
stc
cwtl
test
or
xor
in
cmp
add
mov
cmp
clc
mov
push
inc
pop
bound
mov
in
or
call
cmp
sub
rorb
mov
inc
js
dec
int
div
sub
jno
mov
push
jb
dec
gs
fnsave
fists
popa
pop
pop
inc
popa
pop
add
xchg
insb
push
pop
pop
and
flds
shlb
jno
cmc
sub
loope
mov
pop
mov
add
push
jge
aas
fsubl
cmp
mov
notb
scas
or
mov
mov
imul
les
adc
test
gs
pusha
lods
test
call
cli
aam
in
inc
sbb
xor
jo
and
fwait
stc
and
mov
imul
movsl
dec
mov
xchg
xor
sbb
mov
ds
push
sti
inc
aad
fists
std
dec
push
or
loope
pop
add
daa
scas
cmp
sub
dec
add
mov
aas
and
mov
cs
sbb
pop
jnp
sub
pop
push
imul
fs
xor
negl
cwtl
nop
stos
cs
add
push
test
push
out
orl
loop
inc
fsubp
and
mov
dec
pop
and
imul
push
push
loopne
js
sub
dec
mov
hlt
xor
mov
xchg
pop
fsubrl
xchg
sbb
inc
sub
clc
xchg
inc
icebp
stos
int
imulb
shlb
and
out
je
roll
xor
cmp
push
mov
mov
icebp
sub
or
pop
jecxz
stos
shrl
and
mov
movsl
fs
ss
call
sbb
pop
movsb
les
fsubr
mov
or
nop
jns
fsubrp
mov
push
xchg
cmp
hlt
jne
and
loop
pop
or
xchg
or
test
cmp
hlt
and
mov
lods
push
add
ret
cwtl
fisttpll
imul
mov
jbe
stos
xchg
mov
jo
xor
les
cs
mov
jne
div
mov
xchg
adc
fsubl
gs
js
mov
dec
rcr
lods
mov
pop
jo
js
inc
test
inc
push
hlt
pop
iret
pop
mov
cltd
cmpb
dec
mov
stos
rorb
mov
fs
scas
cmpb
inc
sarl
insb
jge
mov
sbb
cmc
les
mov
jne
ret
inc
mov
imul
mov
pop
aad
xor
xchg
std
push
loop
inc
cmpsl
adc
out
push
mov
jne
pop
outsl
ja
inc
clc
push
cmc
in
pop
inc
xor
xchg
in
xchg
fcmovne
inc
sbb
mov
push
add
inc
push
insb
sbb
dec
stc
in
in
ljmp
in
dec
add
shlb
aas
out
xchg
pop
xchg
scas
iret
adc
sub
adc
xlat
push
test
lret
dec
sbb
out
or
loop
aas
jae
bound
fdivrl
mov
sarb
subb
inc
icebp
xor
scas
cmpsl
xor
subb
add
push
jp
sub
cmp
sub
mov
and
bound
repz
insl
loop
jnp
or
fbstp
pop
or
sub
sub
jecxz
xor
fwait
jne
mov
add
sbb
mov
cltd
lock
sbb
aaa
repnz
xchg
mov
xchg
cmpl
fcoms
ds
adc
aas
add
dec
sahf
sbb
mov
xchg
pusha
pop
pop
sti
push
fdivl
mov
and
push
and
aas
push
outsl
dec
pop
xor
jne
or
sub
insb
jns
loop
jg
movsb
loop
sbb
jg
adc
stos
int3
rolb
aas
pop
jno
sub
outsb
insb
pusha
daa
jne
mov
mov
jle
dec
int
mov
sub
lret
pusha
pop
test
push
push
popf
push
inc
sub
aam
dec
pop
enter
jo
mov
xchg
xchg
mov
imul
jo
cmp
iret
add
dec
imulb
repnz
or
int
bound
add
sub
fisttpll
mul
imul
rolb
push
movsl
insl
fwait
loop
iret
shl
test
lea
js
ret
xchg
jl
sbb
lahf
insl
scas
push
and
pop
xor
cmpb
jecxz
push
or
das
scas
mov
into
sti
jns
inc
or
sarb
movsl
and
ss
fistpl
add
mov
mov
sbb
daa
push
les
in
inc
fsubrl
xor
mov
inc
add
or
arpl
push
sub
xchg
rorb
sarb
adc
jns
cld
lock
mov
cmpsl
xchg
cmc
stc
roll
data16
cwtl
lahf
lret
int3
in
gs
mov
add
sub
or
add
cmpb
sti
jmp
jnp
dec
mov
sub
popf
fs
icebp
aad
aad
or
sbbl
inc
mov
push
decb
cmovne
jnp
mov
pop
add
mov
xor
xor
lahf
int
ret
loop
stos
hlt
cmc
out
jne
lret
inc
jne
cmp
in
xor
or
jle
dec
pop
imul
or
xor
aad
cs
sarl
inc
cmp
xchg
hlt
push
or
jbe
pop
cmp
xor
pop
sub
fbld
pop
mov
data16
aam
aad
mov
js
adc
pop
jg
mov
and
adcl
jmp
filds
scas
fsts
cmp
jnp
cmpsb
fs
int
mov
icebp
sub
mov
imulb
les
aad
add
jnp
daa
xchg
rcl
out
in
pop
lea
in
xor
add
jmp
dec
push
stos
stos
push
sbb
in
test
sbb
jae
in
outsl
jo
push
aaa
or
les
or
loop
and
mov
adc
jp
jl
fnsave
sarl
inc
out
add
or
adc
inc
cmp
push
faddl
rclb
test
xchg
adc
push
test
mov
adc
data16
mov
lds
jecxz
movsl
stos
imul
nop
scas
cli
insl
enter
fsubrs
lcall
popf
xlat
sbb
bound
cmpb
xchg
xor
out
arpl
nop
mov
cmp
jnp
xor
cld
popa
jmp
rcrb
hlt
sbb
ljmp
jno
cltd
or
or
cmp
mov
mov
or
and
cltd
and
inc
roll
outsb
adc
popf
arpl
pop
imul
mov
sbb
and
push
inc
es
sub
std
inc
movsb
xchg
pop
cmp
mov
xchg
mov
pushf
das
mov
sub
pushf
inc
les
sub
pop
push
shlb
cmpsl
movsb
notl
xor
pop
hlt
cmp
test
fcmovnu
imul
repz
fldenv
stos
dec
sbb
cmp
movsl
inc
int3
lret
fs
inc
xchg
lret
cltd
jnp
push
rcl
inc
push
sub
mov
jle
pop
mov
or
xchg
push
sahf
cmpb
addr16
les
pop
in
and
and
andl
push
je
subl
jne
mov
mov
ss
cmp
ja
iret
sbb
pop
pushf
imul
lret
cmp
movsb
cld
pop
jnp
mov
stos
mov
fimuls
scas
sub
pop
or
int
es
push
add
mul
cmpsb
push
cmp
je
lahf
fisubrs
push
cmp
push
jge
mov
sbb
sar
in
mov
leave
loopne
pop
add
out
mov
std
pop
scas
fnstcw
ret
mov
sub
das
iret
xor
jae
dec
xchg
jmp
fwait
lds
mov
cmc
or
push
popa
call
dec
stos
lcall
xlat
lea
sbbl
xor
xorl
xor
movl
cmp
movl
je
mov
xor
adcl
add
cmp
jne
pushl
call
mov
mov
and
mov
mov
movl
cmpl
je
cmpl
jne
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
mov
sub
add
mov
xor
mov
add
movl
cmp
je
sbbl
pushl
pushl
call
sbb
mov
dec
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
call
jmp
sbb
mov
xorl
xor
subl
add
cmp
movl
je
mov
mov
mov
or
mov
mov
mov
add
mov
and
mov
and
mov
adcl
add
movzwl
sbb
mov
mov
or
mov
mov
sbbl
add
not
mov
mov
jmp
movzbl
add
mov
mov
xor
mov
andl
add
inc
mov
sub
mov
sbbl
mov
xor
decl
add
cmp
je
jmp
mov
mov
xor
add
cmp
je
mov
mov
xor
add
cmp
je
lea
push
pushl
pushl
call
mov
mov
mov
xor
add
cmp
je
mov
movzwl
mov
mov
mov
jmp
mov
xor
lea
jmp
mov
xor
add
jmp
mov
xor
add
jmp
mov
add
mov
mov
test
je
movl
push
xor
pop
add
push
pop
push
dec
pop
dec
xchg
sub
xchg
dec
mov
imul
sub
mov
mov
mov
xor
mov
add
mov
mov
xor
add
mov
imul
mov
xor
mov
lea
cmp
je
mov
mov
mov
mov
mov
xor
xor
mov
add
div
mov
xor
lea
mov
mov
mov
mov
mov
xor
lea
mov
mov
mov
xor
add
imul
mov
xor
mov
lea
cmp
jmp
into
mov
adc
shll
jl
ret
bound
pop
bound
fs
loop
adc
lock
ret
iret
mov
popf
js
popa
inc
pop
xor
aam
add
adc
mov
dec
dec
add
push
in
imul
push
lods
icebp
push
adc
stc
hlt
push
outsb
inc
fmulp
mov
lret
aad
rcrl
jle
mov
mov
xchg
and
insl
shlb
mov
cmp
or
icebp
mov
popa
push
fmul
psrld
aad
out
and
xor
lret
aaa
aad
cmp
cmp
or
jae
rcll
xchg
jecxz
or
jle
repnz
test
cmpsb
sbb
xchg
dec
ret
leave
push
sub
dec
mov
rcrb
dec
adc
jge
and
ds
int
in
test
xchg
lahf
jb
imul
mov
ret
add
out
xlat
jae
xor
mov
jmp
stc
dec
xchg
sbb
mov
inc
mov
ret
jno
sub
sbb
cmpsb
sbb
jle
test
add
mov
push
fidivl
rcrb
xchg
dec
jp
clc
mov
aaa
mov
mov
pop
sub
out
mov
loope
dec
jle
pop
lods
jnp
adcl
dec
addb
mov
jnp
mov
ljmp
mov
cmc
insb
aas
cmp
stos
in
xor
jb
xor
jge
test
cli
push
cmpsl
xor
cltd
ret
xchg
mov
jl
cwtl
sahf
or
pop
xchg
xchg
negl
inc
and
jecxz
imul
rclb
insl
fpatan
add
jmp
xchg
pop
mov
mov
add
dec
into
fs
cwtl
or
mov
dec
pop
push
sahf
sahf
loopne
dec
fnstsw
pop
mov
mov
add
fisubl
and
jno
xor
aam
cli
das
xchg
insb
dec
sub
pop
jl
fxam
stos
aas
loopne
and
dec
mov
sbbb
data16
cli
lret
xor
mov
gs
lret
leave
dec
cmp
addr16
sbb
outsl
add
pop
adc
sahf
adc
andb
aas
imul
add
jl
xchg
inc
fwait
mov
pop
je
scas
nop
jmp
lock
add
dec
pusha
xor
and
inc
push
mov
pop
fst
negb
push
mov
flds
fisubs
pop
xor
push
push
mov
cmpsl
jmp
lods
sbb
push
pop
outsl
ja
out
xor
push
dec
pop
dec
aam
mov
ljmp
and
lret
loope
std
xor
in
aad
push
jp
mov
adc
fdivrs
std
jmp
mov
adc
sbb
shlb
fnsave
or
or
lahf
push
and
scas
das
fistl
mov
mov
jae
ret
dec
sub
out
pop
stos
or
cmp
adc
dec
pushf
ror
cmc
jle
cmp
addr16
mov
gs
inc
cltd
mov
sbb
ror
imul
xchg
jno
sub
int3
ss
inc
aaa
cmp
cmp
cltd
push
inc
rolb
cli
push
fs
pop
push
push
cmpsl
jmp
lret
xor
jnp
lahf
clc
fsubs
nopl
sub
mov
je
aad
sub
sbb
gs
orl
lock
rorl
sbb
jecxz
push
pop
icebp
cli
inc
dec
adc
sub
ret
scas
sub
add
mov
push
push
cmp
shl
dec
popf
daa
cmp
bound
loopne
pop
dec
push
jmp
push
lcall
loope
xor
sub
fmull
setnp
pop
fildl
mov
dec
add
mov
lds
or
insl
push
mov
adc
stc
xchg
aam
jp
xor
addl
shrb
and
pop
cmp
sub
push
mov
addps
bound
xor
fstpt
push
cmp
inc
mov
loope
or
adc
sub
jne
idivl
sarb
ret
cmp
test
in
mov
dec
les
add
rol
jb
sub
cmp
into
and
inc
xchg
xchg
mov
xor
xchg
pop
cmp
fcompl
ret
mov
jnp
shll
cmp
lea
xor
lret
mov
repnz
cmp
add
push
loop
mov
fcoml
fxch
dec
dec
sbbb
cltd
adc
push
pop
bound
push
jp
mov
jg,pn
xlat
dec
cmc
pop
sub
xchg
pop
mov
idiv
add
out
push
xor
fwait
jp
inc
dec
xchg
fisttps
pop
mov
push
ret
sbb
jne
or
sbb
lods
xor
popa
cltd
hlt
pop
xchg
lods
cltd
test
xor
pusha
push
push
addr16
scas
popf
mov
and
xor
adc
cmpsb
mov
pop
mov
pop
out
push
ret
xchg
pop
mul
cwtl
mov
jo
cli
cmp
dec
jnp
imul
or
test
outsl
lea
sbb
and
popa
xor
int3
fcomi
cmp
scas
insb
adc
jmp
aas
es
filds
cltd
int3
je
mov
xchg
sub
jae
xor
or
or
loopne
mov
xor
imulb
xor
xlat
fcmovnu
adc
adc
fsub
adc
pop
out
rcrl
xor
mov
pop
pushf
test
cmp
in
fwait
scas
cmp
xor
or
push
js
jb
test
or
enter
js
ja
xchg
cmp
and
inc
and
adcb
in
imul
xor
rolb
mov
pusha
daa
andb
out
into
inc
das
push
popf
popa
js
mul
repz
cmpsl
fs
shll
fsubl
lea
test
cmp
xlat
scas
mov
push
ljmp
fstps
popa
insl
cmc
out
push
in
mov
cld
pop
mov
movsb
xchg
mov
xor
mov
orb
cmpsb
inc
cs
xchg
jae
repnz
jno
adc
cmp
pop
adc
pop
arpl
mov
les
mov
sub
daa
cmp
and
adc
adc
lds
mov
popf
mov
cli
data16
cwtd
sbb
or
jno
negl
lds
add
xor
push
xchg
test
mov
xchg
add
and
shll
fs
in
jecxz
clc
xchg
aas
cmp
xchg
daa
jno
pop
push
divb
nop
pusha
cmc
mov
push
iret
xchg
roll
scas
test
in
sti
loope
ret
in
mov
mull
inc
in
adc
repnz
imul
xchg
pushaw
enter
imul
lret
call
jns
xchg
ja
shll
push
int3
test
cmc
mov
roll
jno
cmp
dec
inc
lods
shrb
sahf
jg
cltd
dec
test
mov
fwait
and
testl
mov
cmpsl
pop
ss
mov
pushf
pushf
in
pop
fdivrs
sbb
outsl
int
iret
inc
push
and
loop
and
jb
testb
test
push
pop
imul
aas
imul
pop
sbb
jns
repz
dec
loopne
cmp
add
jnp
pop
scas
or
in
fs
mov
xor
mov
stc
insb
mov
cltd
push
test
scas
push
cmpsl
xor
push
cmpsl
push
mov
mov
leave
mov
jle
and
mov
outsl
iret
cmp
addr16
orb
lea
iret
pop
cmp
add
rcr
jp
clc
orpd
push
mov
push
sbb
sbbl
jp
in
sbb
push
mov
test
xor
leave
scas
mov
in
mov
js
data16
xchg
adc
sbbl
sbb
inc
mov
aam
pause
lds
rclb
add
pop
xor
cmp
adc
sbb
lock
iret
and
jmp
mov
cwtl
mov
jb,pn
sbb
add
clc
dec
inc
movsb
lods
aam
stc
xor
sbbl
ret
out
idiv
jne
lods
cmp
lret
std
or
imul
idivb
pop
dec
jl
sbb
iret
lret
adc
push
or
add
mov
inc
ss
int3
cmp
mov
pop
jle
arpl
test
mov
cmp
ret
dec
popf
fistps
inc
ret
test
jbe
or
dec
push
and
add
pop
loope
sbb
dec
jne
pop
xchg
mov
mov
popa
loopne
mov
push
pop
rcrl
jae
mov
or
push
add
inc
das
add
push
lods
call
xchg
mov
aam
pop
lods
cltd
data16
iret
out
popa
repnz
cmp
mov
or
adc
enter
mov
cmpsl
mov
scas
test
lock
lahf
in
pop
pop
mov
push
add
mov
or
gs
xorl
js
sub
mov
repnz
and
and
sub
scas
push
lods
pop
jae
gs
mov
leave
jnp
mov
push
ljmp
cmp
adc
cmp
xchg
xchg
popa
fwait
sbb
enter
lea
stc
ret
insb
and
mov
std
in
mov
les
jns
hlt
inc
xor
mov
xchg
cwtl
js
pop
pop
fimull
push
mov
cmp
push
add
cld
push
imull
pop
enter
xor
fstpt
cli
or
cmp
iret
imul
dec
mov
sbb
popa
cmovnp
inc
push
pop
adc
push
and
popf
mov
dec
enter
in
adcb
push
int
lret
xor
ds
addb
test
jbe
sbb
jbe
movsb
rcll
xchg
push
fdivrs
inc
stos
sbb
jp
ret
inc
mov
mov
mov
push
stc
or
dec
pop
int3
clc
outsb
pop
cltd
les
cmp
lret
loopne
aaa
or
or
mov
mov
cmpsl
push
pop
jge
xor
or
inc
mov
dec
jl
in
xor
popf
fldt
fimull
test
int3
xorb
sbb
test
push
arpl
adc
out
xchg
xor
cmp
loope
xchg
jno
jnp
addr16
sub
cmp
iret
out
lods
popa
jo
in
stos
sub
in
mov
and
jge
jge
and
and
sbb
mov
lea
mov
pop
cmc
sub
data16
adc
pop
jl
xchg
in
xchg
addl
fiaddl
lret
sbb
dec
xchg
inc
sahf
mov
cmp
cmp
rolb
pop
add
enter
mov
dec
aad
add
xor
scas
jne
movsb
pop
xchg
addb
sahf
ja
sbb
std
out
scas
xchg
aas
incl
pop
lret
inc
pop
jne
in
mov
xor
adc
mov
repz
xor
cs
cmpsb
std
aas
cmpl
xchg
fsubl
enter
daa
pusha
sub
push
jbe
imul
dec
xchg
shrb
mov
inc
pop
and
xchg
lcall
jp
arpl
pop
pshufw
mov
xchg
icebp
int3
icebp
jmp
in
ror
fsubr
addr16
dec
adc
add
scas
mov
inc
xor
dec
call
pop
dec
xor
sarl
sahf
dec
fcoml
and
insb
dec
imul
cmc
or
mov
addr16
xchg
rclb
inc
aaa
inc
xchg
xchg
arpl
fucomi
mov
pop
dec
out
dec
or
mov
fmul
cmp
sbb
outsb
sub
cmpsl
repnz
andb
imul
xchg
or
dec
xchg
das
sbb
and
mov
push
bound
and
jg
test
jle
pop
and
pop
inc
xchg
cmpsl
imul
orb
lcall
push
loopne
jb
dec
mov
cmp
inc
jo
arpl
dec
scas
cmp
mov
adc
aas
jnp
mov
loopne
mov
and
add
jge
push
stos
jae
cld
jmp
mov
bound
cmp
or
adc
push
iret
stc
call
cwtl
movsl
xchg
adc
xchg
inc
shr
int
jmp
filds
subb
popa
dec
pop
fstl
xlat
ret
stc
idivb
cmc
push
or
and
ja
sahf
push
lret
bound
inc
inc
mov
hlt
push
jo
xchg
push
xor
xlat
into
jbe
xor
test
xor
popf
insb
lcall
add
cmp
cltd
mov
in
cmpsb
rcrl
sar
pop
add
mov
adc
sbb
fisubrl
mov
xchg
out
das
and
jbe
nop
ss
mov
outsl
mov
lret
sahf
inc
or
cmp
int
cwtl
push
xchg
aaa
sub
lds
mov
ds
ficoml
das
fnstenv
push
ret
lods
or
adc
pop
push
ficompl
fisttpll
out
in
push
sbb
pop
imul
xchg
gs
mov
test
xchg
es
in
popf
xchg
not
mov
mov
ret
daa
loopne
mov
hlt
lcall
push
hlt
mov
in
mov
jae
and
inc
stc
push
mov
lds
ja
ja
ljmp
ljmp
or
pop
fnstsw
pop
and
ja
or
mov
cltd
sub
mov
loope
and
sub
pop
jae
jns
sbb
mov
mov
jnp
sbb
cmp
xchg
inc
gs
ret
insl
lods
in
inc
icebp
sbbb
pop
inc
push
int3
jbe
and
int
cmp
pop
jmp
addr16
addl
and
popa
fbld
cli
stos
mov
jne
xchg
mov
xlat
sub
or
inc
out
cmp
je
stos
jge
mov
cmpsb
push
jle
push
push
jp
mov
sub
jl
out
mov
dec
cmp
push
cld
adc
insl
xchg
adc
jmp
xchg
add
lcall
aad
loop
cmc
int
ret
sbb
subb
mov
mov
xchg
dec
jne
stos
lret
es
sub
push
mov
mov
leave
xchg
sub
aad
pop
popa
xchg
leave
les
loope
jb
cmpsl
xrelease
jnp
sub
cmp
mov
fcoml
xchg
inc
mov
cmp
adc
jp
cmp
shlb
jne
filds
mov
stc
bound
jge
insl
inc
cmp
shll
dec
test
xlat
paddusb
jno
loop
fists
xor
inc
test
xchg
das
clc
cmp
push
jmp
mov
push
mov
dec
lahf
hlt
sub
dec
pop
pop
pop
sub
int3
les
pushf
lods
xor
cwtl
jmp
cmc
ret
jg
in
jnp
out
stos
sbb
call
fwait
xchg
sbb
mov
xchg
scas
popa
xchg
rcrb
mov
mov
cmp
iret
mov
or
mov
mov
adc
cltd
popf
adc
inc
inc
xor
lods
pop
call
jb
ljmp
adc
addr16
jns
adc
icebp
sbb
xor
mov
enter
nop
sahf
jecxz
cmp
cld
test
sub
jo
adc
pop
sbb
xchg
push
inc
inc
mulb
mov
mov
mov
add
dec
loop
xchg
cmc
int
inc
gs
cli
daa
xor
setle
adcb
jmp
inc
ds
andl
pop
fcmovnbe
lods
in
shl
xor
fisubrl
mov
das
pop
adc
pop
sbb
sbb
mov
es
arpl
cltd
sbb
dec
ljmp
cli
mov
mov
icebp
and
popa
mov
ret
es
ja
mov
outsl
inc
out
cmp
push
std
outsb
ret
stos
add
icebp
jae
cmp
xor
pop
mov
jl
cmp
subb
and
fbstp
xor
popf
xor
sub
out
or
adc
out
dec
jecxz
and
stos
or
or
adc
arpl
arpl
fsubrs
aam
pop
scas
xchg
jge
adcl
add
rclb
sarb
pop
aad
cmpsb
int
mov
mov
dec
push
inc
mov
in
mov
rcrl
jbe
add
fimull
sub
push
insb
cmp
fnstenv
imul
inc
xor
outsb
pop
add
clc
push
mov
dec
test
shlb
jp
ret
punpckhdq
mov
and
mov
push
clc
mov
jl
dec
xchg
imul
mov
inc
xor
push
ds
xchg
or
sahf
leave
and
and
jno
push
aam
or
fmul
push
aad
aaa
fistpl
add
push
xchg
push
and
int3
inc
adc
inc
mov
sbb
sbb
cmp
das
pop
xor
mov
pop
cmc
xchg
sub
push
mov
imul
push
dec
imul
test
into
add
jmp
dec
mov
pushf
cmc
push
mov
or
mov
xor
pusha
mov
mov
mov
movsl
adc
test
outsl
dec
aad
pop
fisubl
fst
fldcw
push
mov
fstps
arpl
dec
loop
pop
mov
test
jl
cltd
stos
inc
rclb
sbb
dec
ljmp
pop
iretw
dec
sahf
pop
lods
sti
mov
orl
lcall
inc
fwait
mov
stc
and
into
mov
xchg
mov
pop
push
xchg
and
add
dec
push
push
cs
neg
xor
aam
jnp
inc
mov
push
pusha
sbb
jb
jae
jl
fcomip
push
cli
ss
je
outsl
ljmp
imul
scas
mov
shll
pop
push
xchg
loopne
or
mov
cmp
mov
inc
into
ds
cmp
sbb
inc
mov
into
pop
push
pop
call
xchg
inc
push
cmp
mov
jle
mov
mov
ja
push
sbb
cwtl
and
push
jle
or
adc
jne
hlt
adc
or
les
dec
jb
enter
scas
inc
inc
aam
aaa
fstpt
fs
jo
aad
adc
mov
sbb
push
mov
pcmpeqw
scas
push
in
out
adcl
sub
sarl
push
lcall
adc
push
cmc
xor
clc
cmp
loop
insb
rcrb
js
sbb
push
fdivrp
out
aam
sbb
dec
scas
adc
sbb
add
sub
jns
jo
cmp
push
sub
js
mov
jp
rolb
popf
inc
mov
xor
into
mov
jp
aas
jl
adc
push
lds
out
roll
ja
mov
or
fmuls
inc
push
dec
iret
push
xor
push
bound
push
jae
enter
fwait
les
cmc
enter
hlt
jmp
ret
adc
adc
std
loope
jp
jo
sbb
xchg
inc
rcrb
jb
mov
inc
test
push
lcall
dec
push
pop
cltd
shl
push
loopne
add
ja
or
cmc
pushf
mov
repz
fnstsw
js
dec
jae
clc
xor
push
bound
jae
fs
cmc
in
repnz
cwtl
mov
fs
xchg
mov
dec
and
stos
inc
jo
xchg
inc
in
scas
fcoms
dec
sbb
and
mov
adc
dec
cmp
loopne
adc
add
push
in
xchg
lods
inc
arpl
fistps
jge
xchg
sub
addr16
ja
or
mov
stos
enter
divl
sub
cltd
sti
or
or
mov
push
cmp
pop
leave
scas
xchg
shrb
clc
inc
inc
jmp
mov
and
enter
test
inc
add
pop
xor
aad
pushf
cli
push
mov
std
les
xchg
pop
pop
add
aaa
jno
cwtl
repnz
and
sub
int3
mov
mov
mov
stos
adc
push
gs
les
sbb
jg
sbb
sbb
mov
lds
mov
in
addl
in
push
out
call
cmc
insb
pop
clc
xchg
shlb
loopne
add
clc
mov
lahf
jmp
cwtl
inc
cltd
and
cld
and
icebp
cmp
pop
bound
shll
push
daa
cmc
das
cltd
lret
lahf
add
mov
adc
push
cmpsl
jno
jmp
adc
std
shll
or
jno
push
lret
mov
sub
jge
shlb
hlt
xorl
inc
fbld
inc
push
out
xchg
jge
sbb
popf
mov
idivl
pop
sbb
psubb
jo
adc
ja
cmpsl
fcmovnu
cmp
mov
mov
push
push
jecxz
pop
mov
test
or
inc
shll
wbinvd
sub
pop
dec
inc
mov
dec
mov
jle
mov
or
add
xchg
or
add
push
xchg
add
nop
cmc
cmp
push
or
xchg
inc
jo
and
or
outsb
sbb
pop
sbb
lcall
cmc
testl
push
or
lods
xchg
and
aam
jbe
push
fcoms
and
jnp
sub
inc
aaa
jp
int3
xchg
sahf
and
aaa
fistpl
lret
rep
pushf
add
ret
and
out
hlt
stos
jg
inc
popl
mov
insb
push
add
sub
or
cmpsl
cld
test
pop
xchg
push
jns
rdmsr
rcl
sub
cmpsl
add
mov
xchg
sub
ljmp
pusha
jmp
int3
or
push
sbb
pop
into
pop
pop
cmp
jl
js
popa
test
cwtl
mov
cs
arpl
mov
and
dec
mov
cltd
ljmp
jne
rcll
sbb
sbb
lret
test
xchg
jae
mov
std
cmp
aaa
mov
xchg
popa
jae
mov
fildll
push
movsl
mov
and
xchg
adc
adc
sub
push
push
imul
jmp
ja
movsl
push
add
push
fprem1
adc
decl
hlt
push
into
fldlg2
insb
sub
and
xchg
sbb
xlat
mov
lea
pop
or
mov
lea
es
out
pusha
ds
pushf
cltd
jae
push
sub
jle
xchg
shll
or
mov
adcl
in
sub
popf
fiaddl
add
mov
out
cmp
push
adc
and
mov
mov
pop
lods
imul
pop
lea
stc
add
mov
movsl
pusha
pop
adc
xchg
pop
xor
andb
inc
je
cwtl
incb
shlb
outsl
mov
pop
enter
mov
lods
scas
repnz
mov
push
addr16
or
rolb
dec
mov
pop
out
add
xor
repnz
xor
jge
add
sbb
inc
adc
sub
dec
mov
cmp
shrb
stc
jp
pusha
mov
or
dec
in
aad
sub
inc
xor
inc
mov
and
cmp
lds
mov
clc
jl
dec
pop
xor
adc
cmpsb
inc
jg
lret
push
fsub
repz
cmp
nop
mov
push
pop
inc
inc
mov
mov
xor
mov
adc
xcrypt-ecb
cmpsl
or
sahf
xor
shll
adc
notl
stos
jmp
mov
sbb
add
pop
jo
add
xchg
inc
cmp
add
push
fisubrs
jns
pushf
mov
cmp
xlat
sti
fdivrl
sbb
cmpsb
push
adc
adc
stos
pop
inc
mov
push
mov
cmc
call
inc
sub
dec
cmpl
pop
mov
and
pop
es
jmp
cmp
lods
cltd
mov
mov
int
int
cmp
jg
fildl
mov
sarb
add
adc
xchg
out
cmp
lea
jno
push
pop
pop
in
pop
enter
cmc
lea
jne
loopne
jp
inc
fldenv
xchg
jne
bound
adc
std
rcl
incl
cli
xchg
cmpsl
cmp
imul
int
or
push
popf
hlt
pop
dec
xor
cld
mull
aas
sub
cwtl
xchg
xchg
std
es
and
out
pop
mov
imul
sahf
xlat
sarb
cli
add
mov
test
xor
mov
mov
lods
lods
mov
subb
movsl
aad
jmp
rorb
and
lahf
insl
daa
inc
addl
cmp
int
insl
dec
sbb
cmp
jmp
sub
add
jne
ret
mov
lea
xor
inc
dec
mov
jl
fnstsw
cltd
push
jmp
pop
mov
mov
xchg
jnp
add
int
sub
pop
sub
xchg
loope
ljmp
jle
push
or
mov
sub
jmp
adc
mov
mov
incl
out
into
and
mov
cmpsb
pushf
lea
arpl
mov
xchg
adc
jb
mov
pop
and
or
je
outsb
sub
sbb
test
xchg
js
call
sbb
sbb
icebp
adc
or
daa
movsl
xchg
adc
jno
xchg
nop
pusha
mov
xchg
lods
filds
cmp
loopne
and
call
aaa
and
xchg
lock
fcoml
dec
inc
adc
mov
pop
ss
mov
pushf
jb
scas
sbb
xor
adc
por
push
xchg
ror
lret
adc
dec
xor
or
mov
jae
aas
ds
repnz
xchg
mov
adc
scas
sti
shlb
ljmp
jb
cmp
adc
or
les
pop
fidivs
sub
xor
lods
lret
loop
add
test
xchg
pop
cmp
int3
dec
movsl
sub
ds
adc
leave
add
cmp
repnz
mov
push
adc
ja
mov
int3
aas
lods
scas
jno
xor
shl
jmp
xor
jne
out
fisttpll
cmc
dec
sti
pop
inc
push
mov
inc
push
je
or
in
negl
out
ret
pop
push
jge
mov
adcb
jecxz
xchg
aaa
addr16
lcall
fnstenv
mov
dec
cmpsb
mov
mov
jae
push
xor
mov
lret
scas
dec
xchg
push
in
cmpl
das
dec
out
adc
lahf
test
cmp
sub
xchg
fbstp
aam
out
push
nop
lret
mov
dec
sarb
addl
xchg
xor
add
cmp
popa
cmp
push
imul
and
repnz
mov
lods
fwait
cld
das
add
test
pop
loopne
sbb
sbb
add
inc
pushf
in
xchg
lods
push
fisubs
pop
ret
movsb
jmp
addb
cwtl
pop
adcl
mov
lea
xor
jo
adc
lret
pop
jecxz
fdivl
loopne
test
call
out
pop
dec
xchg
cwtl
push
cwtl
mov
out
lods
aas
loopne
iret
pop
test
mov
add
lods
cmpsl
jne
inc
pushf
cwtl
pop
add
mov
out
add
loope
pop
adc
icebp
cmp
test
in
scas
fldenv
push
ljmp
jb
push
sarl
mov
cmp
rorl
push
mov
adc
in
es
add
pop
jno
cmp
add
xchg
jb
lds
in
push
fwait
sub
xor
arpl
jmp
push
xor
cmc
stos
cld
inc
mov
movsl
sti
idivl
outsl
and
push
push
and
jle,pt
iret
dec
cmc
mov
inc
imul
lock
and
dec
aaa
movsl
das
outsl
cs
cmp
mov
push
pop
fldl
imul
out
imul
rorl
sbb
sbb
pop
add
jp
cld
xor
loop
add
scas
mov
xor
mov
adcl
dec
xchg
lret
scas
mov
push
jle
jnp
dec
jmp
imul
sbb
lahf
dec
clc
inc
push
in
jecxz
lock
jmp
add
test
xor
std
outsb
mov
lock
clc
inc
dec
push
mov
jge
xor
arpl
insl
and
or
jmp
stos
adc
mov
cmp
rorb
hlt
or
repnz
lret
mov
inc
mov
xchg
sahf
mov
shlb
mov
fdivrs
movsl
add
push
std
shrb
out
test
cmp
test
dec
push
mov
mov
movsb
pop
cld
es
mov
loopne
jae
and
cmp
jl
mov
jns
jle
xchg
pushf
int
pop
mov
imul
je
movsl
es
into
scas
fwait
add
jmp
push
das
lahf
and
stos
in
ds
dec
mov
sbb
and
loop
cmp
in
hlt
jns
mov
jno
test
jbe
sbb
clc
ja
or
xchg
lahf
jnp
ss
or
xor
arpl
lock
sbb
cmc
movsb
mov
addr16
mov
adc
mov
mov
and
hlt
push
fwait
jle
inc
cs
fdivrs
push
mov
addr16
mov
xor
xor
movsb
cmp
xchg
lds
loopne
inc
ret
into
add
push
outsl
adc
stc
aad
fwait
adc
fs
test
das
rcll
cmp
cltd
cmpsb
mov
mov
xor
movsb
lds
aas
fs
test
dec
cmc
int3
pusha
shr
mov
mov
jnp
pop
xchg
jle
dec
sbb
inc
push
scas
pop
sub
lods
adc
add
out
leave
stos
xchg
mov
mov
test
cld
shlb
pop
ss
leave
outsb
jno
mov
lret
jnp
daa
ljmp
sbb
enter
cmp
push
shll
and
cltd
leave
add
jge
jne
mov
jmp
mov
mov
mov
xor
add
mov
mov
add
xchg
xor
push
mov
pop
mov
add
lea
add
add
push
inc
pop
dec
xchg
dec
xchg
dec
xchg
dec
push
mov
pop
dec
call
cmp
je
xchg
push
pop
push
pop
inc
xchg
sub
xchg
dec
dec
mov
imul
add
xchg
push
xor
mov
dec
inc
add
dec
xor
add
pop
mov
pop
pop
pop
leave
ret
push
mov
push
xor
xor
and
movl
mov
sub
mov
and
mov
xor
add
mov
movl
mov
sbbl
xor
andl
mov
inc
mov
cmpl
jne
push
push
call
cmpl
jb
xor
push
mov
mov
add
mov
mov
mov
mov
jmp
push
add
mov
add
js
xor
pop
bound
mov
fidivrl
mov
inc
mov
pop
cmpsl
enter
in
shlb
mov
into
xchg
dec
mov
je,pt
fwait
call
cli
push
dec
ret
sbb
pop
xchg
loop
enter
test
or
in
mov
dec
cmp
faddl
inc
cmpb
out
mov
fs
lcall
xchg
daa
ja
call
mov
daa
lods
adcl
push
mov
inc
lret
xor
pushf
jmp
mov
jb
stos
cmp
arpl
pop
or
xchg
add
jo
push
cld
xor
movsb
das
inc
mov
xor
dec
dec
rorl
mov
ret
jp
test
pop
popa
push
push
mov
xchg
fiaddl
shl
test
jae
test
jo
jg
push
pushf
mov
out
jnp
pop
inc
sbb
xchg
fcoms
pop
fisubs
stos
ljmp
xchg
jge
and
shr
stos
adc
xor
xchg
ds
rcrb
enter
xchg
jmp
adc
adcl
jo
lods
pop
daa
push
dec
mov
int
add
xchg
insb
inc
outsl
dec
fiaddl
insb
std
push
ss
cmp
mov
imul
fidivs
insb
push
mov
mov
imul
adc
mov
add
pop
scas
mov
sbb
cwtl
aad
dec
push
shll
test
inc
pop
mov
in
cmp
sub
push
push
inc
mov
popf
fimuls
mov
insb
aam
inc
mov
out
or
jmp
cmp
add
dec
sarl
inc
jnp
adc
scas
mov
push
cli
sbb
insl
rcr
adc
insl
das
inc
movsb
mov
jnp
jmp
mov
ret
jnp
mov
jo
shl
aas
mov
in
mov
stos
mov
fwait
sbb
adc
mov
mov
xchg
pop
pushf
shrb
fucomp
push
das
clc
aaa
push
pop
pop
in
mov
sbb
jle
test
mov
outsl
sbb
jmp
test
hlt
ljmp
movsl
pop
jmp
daa
mov
sbb
out
push
aaa
outsl
jmp
fistps
mov
test
and
loope
xlat
test
cmp
mov
arpl
cmc
push
test
or
add
cmp
test
inc
xor
pop
and
mov
adc
push
adc
std
mov
adc
xor
div
adc
rcll
cwtl
cmpsb
subb
xor
rorl
add
jecxz
les
inc
and
shlb
sub
xchg
mov
les
mov
xchg
dec
jle
hlt
leave
pop
aaa
pop
cmp
fimuls
rorb
sbb
push
mov
mov
lahf
sbb
lods
sar
mov
lcall
hlt
mov
pop
inc
test
int
movsb
jb
pusha
shrl
sub
test
js
jle
push
push
popf
xor
mov
enterw
jnp
mov
sbb
push
adc
fcompl
dec
subb
cmc
push
repnz
pop
stc
addb
out
aad
je
mov
xchg
fdivr
sbb
xor
sub
adc
inc
adc
loopne
test
stc
lret
xchg
clc
cmp
pushf
lock
and
sti
leave
cwtl
scas
jmp
fs
in
mov
iret
or
clc
cmpl
and
cmp
push
pop
cs
adc
mov
addr16
cmp
nop
cmp
xor
or
cmp
arpl
sar
out
push
jo
xchg
dec
cmpsb
lahf
mov
xlat
dec
int3
inc
inc
ljmp
xor
mov
fstps
dec
push
mov
adc
ret
mov
test
ljmp
cmp
mov
loop
movsb
xor
jecxz
add
mov
pop
add
leave
cmpsb
mov
stos
fnstcw
pop
in
imul
mov
push
inc
ret
sub
and
cmp
aas
shll
in
fwait
sub
outsb
test
bound
pop
cmp
inc
xor
xor
fs
ljmp
aaa
mov
and
xchg
das
imul
mov
dec
into
int
es
mov
jbe
xrelease
pop
in
jp
xchg
loopne
test
mov
cwtl
mov
adc
rcrl
xchg
ret
mov
decb
shll
xchg
pop
int
sub
mov
xor
aad
fmul
push
subb
fcomp
dec
outsl
sub
mov
dec
jo
cmp
push
data16
out
pop
pop
popa
loop
in
repz
sub
jl
enter
push
dec
out
fcmovnbe
xchg
and
pop
jns
cmp
scas
adc
aam
jecxz
scas
push
xor
cmc
outsl
dec
jecxz
xchg
mov
test
sub
jo
jb
adc
insl
shll
inc
sbb
push
test
pusha
mov
loopne
ret
mov
cwtl
add
lods
arpl
test
and
or
pop
int
inc
push
fwait
cmp
jl
xor
mov
adc
hlt
adc
decl
jg
dec
push
lret
add
imul
popf
lcall
ret
cs
repz
dec
lret
aas
mov
sbb
lds
jno
bound
ja
mov
jae
lret
and
mov
lea
dec
and
fcompl
roll
push
jmp
mov
repz
lahf
in
dec
rcrb
fcmovnu
imul
lods
loop
lret
jl
fsubrl
mov
mov
bound
push
jo
and
xchg
pop
add
std
dec
or
jns
js
mov
in
ret
out
push
out
pop
out
pop
xor
cmp
int
xchg
jmp
cli
dec
sarb
mov
jnp
lock
adc
adc
push
iret
xorl
fadd
mov
pop
cld
pop
lods
gs
adc
repnz
push
mov
inc
ds
xor
xor
jns
fstpl
fnclex
pop
dec
imul
insb
pop
push
dec
xor
stos
and
test
xor
inc
cmpsl
dec
add
repz
pop
popa
adc
ljmp
test
and
push
sbb
xchg
cmpl
inc
jbe
cmc
fsubs
test
jecxz
jae
jns
mov
xchg
jle
cmp
insl
into
or
shlb
lock
out
mov
insb
popf
cwtl
cld
push
lahf
lods
je
cmc
mov
xchg
call
mov
ret
stos
fisubs
jnp
adc
test
mov
and
mov
jp
jecxz
push
inc
add
sub
fsubl
mov
xor
and
out
push
push
adc
mov
out
xor
les
cmp
test
jbe
decl
mov
mov
pop
cmc
push
stos
jne
jne
mov
ret
dec
mov
rcll
imul
or
pop
addb
lret
add
sub
es
mov
mov
pop
cmp
adc
cmp
dec
pop
mov
ret
repnz
adc
in
cmc
and
pop
sahf
pop
adc
nop
xchg
sbb
xlat
and
cmp
push
lods
mov
push
and
imul
outsb
and
cltd
jbe
insl
mov
aaa
out
pop
or
jo
ret
repz
jo
dec
mov
dec
cmp
dec
add
and
xchg
jne
fbstp
notl
bound
lret
mov
jns
push
lea
dec
loop
sbb
pop
cmp
lods
sbb
push
xor
fwait
inc
lods
das
push
mov
js
into
lods
jecxz
and
gs
shll
inc
jmp
subb
sti
ja
test
mov
inc
xor
and
hlt
cwtl
popf
inc
add
fstpl
std
call
mov
dec
xor
movsl
mov
lds
dec
insl
mov
out
jl
inc
mov
cmpsb
and
ja
stos
insb
aad
loopne
xor
add
in
in
daa
sbb
lds
mov
fsubl
sub
mov
inc
add
pusha
sub
sub
mov
enter
stos
push
out
jg
mov
and
xchg
or
testl
mov
and
jl
je
push
add
out
cmp
sti
push
daa
scas
or
inc
add
jecxz
mov
lods
jecxz
mov
push
mov
sbb
xchg
cmp
xorb
std
push
add
ret
hlt
xchg
es
jne
lods
inc
adc
andl
lret
push
fsts
jp
data16
mov
xor
scas
sub
cmp
or
mov
popf
rcll
repnz
int
cmpsl
pop
xchg
add
sbb
std
lods
push
lcall
mov
movsl
out
pop
mov
lea
in
out
test
cmpsb
test
mov
dec
push
lret
sbb
scas
add
test
or
insl
sbb
test
push
fnop
jg
fiaddl
xchg
scas
in
ss
xor
dec
push
stos
and
popl
test
loope
mov
add
sub
push
push
sti
cmpsb
mov
or
loopne
loopne
xor
ds
iret
test
sub
jnp
inc
cmp
or
dec
movsb
adc
shr
sahf
je
gs
in
mov
inc
lret
js
leave
mov
push
sahf
adc
popa
lret
xchg
and
int
cmp
cmp
and
pop
push
fists
and
jae
mov
fptan
inc
add
test
mov
push
xor
imul
enter
mov
or
into
jae
std
sub
shl
bound
xchg
loop
pop
add
inc
push
mov
arpl
mov
out
jns
lahf
or
shll
ja
movsb
or
push
mov
in
or
pop
pop
jp
imull
adc
daa
xchg
jl
mov
test
mov
mov
aas
dec
lret
sub
shll
mov
cld
mov
rcl
lahf
sbb
fdivs
xor
sbbb
lods
xchg
add
pop
pop
out
pop
roll
mov
push
push
ret
jo
rorl
xchg
int
sbb
cmp
dec
ljmp
aas
das
cld
pop
push
sub
sarl
push
mov
lret
dec
xchg
hlt
fidivs
or
jmp
adc
push
mov
add
jmp
xchg
dec
xchg
loopne
pusha
xor
xor
inc
xor
xor
fwait
push
cmp
mov
testb
stos
lock
fwait
push
popa
divl
jo
fisubl
insl
push
ds
std
xchg
sub
test
aas
xchg
cmp
inc
cmp
jp
dec
push
and
push
or
scas
or
inc
out
ja
inc
mov
add
ds
scas
rep
dec
aad
iret
les
sbb
and
mov
popa
push
movsl
or
mov
sbb
cwtl
jecxz
lret
xor
jmp
xor
in
fistpl
notl
cmp
inc
pop
loop
jp
jp
int
sub
fs
sbb
push
xchg
insb
dec
fiadds
jp
add
push
mov
mov
dec
fisttpll
mov
jecxz
dec
test
push
fs
dec
xchg
jbe
sahf
leave
mov
out
scas
fidivrs
xor
lahf
movsb
mov
nop
and
ja,pt
stos
cmc
mov
inc
push
enter
dec
sti
iret
xchg
punpckldq
xor
dec
cmp
sbb
jecxz
mov
push
push
into
jle
scas
sub
ds
std
shll
pop
jecxz
and
mov
pusha
mov
cmp
inc
mov
stos
jge
xchg
and
outsb
aad
push
jmp
push
jnp
adc
ss
jo
cmp
xor
jp
inc
cltd
rclb
push
add
adc
cmp
mov
sbb
iret
sub
inc
out
sbb
jge
jne
cld
mov
bound
and
sahf
fsub
push
fsubrs
inc
xchg
xchg
mov
mov
bound
insl
ret
test
xchg
or
icebp
dec
sub
cmp
out
pop
lds
xchg
mov
xchg
sub
mov
jg
jecxz
fbld
call
test
ret
dec
xchg
mov
and
mov
ss
out
and
push
movsl
pop
push
cmpsl
jg
lret
or
xor
xlat
outsl
jo
js
test
into
adc
mov
iret
rcr
or
cvtps2pi
movsl
jo
mov
dec
lret
sbb
stc
sbb
adc
xchg
push
int
jno
rol
ds
rolb
out
fsubp
inc
adc
jecxz
mov
loope
iret
push
or
jno
scas
mov
ds
fs
mov
ret
repnz
into
jg
cmp
xor
xorb
dec
xchg
add
out
cmc
popa
jp
std
shrb
iret
subb
mov
fstpt
jo
mov
dec
into
add
jmp
aaa
leave
rcl
mov
xor
je
cmp
lods
pop
int3
push
int3
pop
pop
repnz
js
xchg
insb
inc
cmc
movsl
or
fidivrs
cmpl
add
adc
lret
dec
adcb
test
dec
cltd
push
incl
fsts
insb
jmp
mov
in
jmp
stos
imul
addr16
dec
int3
push
cmp
icebp
jg
repz
sub
int
ret
dec
xchg
in
ljmp
lds
outsb
out
mov
inc
scas
xchg
and
iret
jo
subb
dec
daa
fucom
mov
movsl
mov
repnz
into
ret
push
mov
mov
mov
mov
arpl
aam
sbb
xor
mov
ffree
push
popa
push
mov
push
push
mov
inc
xchg
aas
xor
lret
stc
xchg
cmp
stc
sbb
dec
sti
jb
cmc
out
out
jecxz
mov
fdivrs
push
ret
dec
and
test
lods
sub
outsb
jbe
lret
pop
mov
pusha
jmp
xchg
mov
mov
bound
cmpb
dec
jmp
and
cwtl
push
fwait
push
jmp
imul
mov
and
pop
mov
repnz
push
lds
push
jns
lds
mov
aas
int
fisttpl
cltd
or
jecxz
xor
out
out
mov
cmpsb
lock
inc
pop
jge
pop
xor
dec
out
daa
adc
xor
lcall
iret
cltd
clc
orl
pop
insb
mul
std
je
inc
push
jae
cmpl
aaa
or
stc
repnz
adcl
call
dec
xor
sub
jge
cmp
dec
jnp
sti
add
aas
test
int
and
ffreep
xor
shr
lods
inc
dec
inc
popl
aad
into
pop
sub
mov
insb
xor
fwait
adc
xchg
dec
cld
cltd
pop
sbb
cli
add
mov
adc
add
jecxz
jno
jle
mov
mov
mov
adc
outsb
sti
xchg
dec
loop
dec
lcall
out
fidivl
add
push
rcll
incb
jl
jae
mov
movsb
insl
lret
jno
loop
icebp
cld
jecxz
dec
mov
leave
stc
pop
pushf
in
xor
lahf
out
mov
xor
fstps
aas
push
jle
insb
dec
xchg
in
xlat
arpl
add
dec
lcall
cmc
mov
in
mov
mov
aad
and
pop
jno
dec
xchg
sbb
sub
pusha
cwtl
adc
or
pop
mov
cs
jo
inc
cmpsl
out
xor
call
mov
lea
mov
pushf
ret
mov
stos
xlat
mov
mov
add
xor
xchg
mov
sbb
or
cwtl
inc
or
add
clc
mov
int3
sub
fists
inc
mov
xorb
clc
pop
lahf
push
test
sub
sub
sub
and
adc
jg
jb
cmp
dec
jl
mov
dec
jne
cli
gs
pop
mov
icebp
dec
rorb
add
mov
xor
loop
lea
out
insb
jl
icebp
lods
pop
jp
call
out
mov
negb
lock
sub
xchg
and
cmp
pop
xor
out
cwtl
xchg
mov
or
and
xor
xor
ja
push
loop
push
int3
mov
cmp
push
lret
cmpsb
movsb
int3
negl
stos
sbb
ret
pop
xor
test
leave
mov
repnz
xchg
lret
cs
adc
adc
ficomps
sbbl
xor
das
and
push
adc
push
jecxz
lahf
xchg
out
loope
pop
pop
stos
jns
mov
mov
sub
push
xor
jge
lret
pop
lcall
dec
push
test
pmuludq
mov
jb
jns
mov
insb
lret
mov
and
push
test
mov
jg
sarb
sub
xor
hlt
shrb
popl
and
mov
inc
rcl
xor
jmp
dec
xchg
fisttps
filds
xchg
into
inc
and
inc
mov
pop
mov
push
test
orl
mov
nop
cmp
mov
loopne
sbb
movsb
mov
dec
add
or
mov
movsb
bound
jns
push
mov
or
dec
in
mov
mov
fdivrs
lds
data16
outsb
lock
scas
lcall
mov
mov
push
push
mov
push
push
dec
in
mov
sbb
push
sbb
inc
adc
push
lea
ds
movsb
call
mov
nop
and
test
mov
cmp
mov
dec
sarb
mov
movsl
cmpsb
pop
fwait
xchg
arpl
mov
popa
cli
sub
or
cmp
inc
nop
jmp
add
mov
mov
fidivrs
cmp
aas
xor
lods
mov
pop
ja
mov
xchg
mov
out
sub
xor
adc
cli
jne
sti
cld
jno
pop
imul
mov
test
jae
adc
cmp
gs
data16
loope
pop
clc
pop
sarl
push
mov
arpl
add
jg
cmpsl
xchg
or
ret
fidivrs
push
rcrl
jge
mov
gs
das
jmp
inc
sbbl
shl
cmp
add
fsts
xchg
jp
mov
xchg
outsb
lcall
not
je
inc
add
push
jbe
or
scas
mov
bound
enter
scas
inc
or
adc
loopne
out
test
out
dec
insl
pop
lret
idivl
cmc
int3
add
or
mov
pop
fildl
mov
cmp
cmpsl
movsb
imul
and
push
jecxz
bswap
pop
sbb
pop
sub
adc
mov
inc
fsubs
sbb
add
jbe
ja
lret
lods
mov
xchg
pop
inc
mov
xchg
or
mov
cld
mov
ss
arpl
leave
out
jno
push
and
sub
push
repnz
xchg
dec
daa
sbb
subb
jae
xlat
pop
aaa
dec
jbe
call
inc
and
dec
test
iret
cmovo
sub
ljmp
clc
dec
adc
push
lret
mov
inc
fists
xchg
xor
dec
test
xchg
out
rclb
bound
xchg
inc
pushf
aam
loope
scas
inc
and
pop
mov
fisubl
cmpsl
and
insl
andb
loopne
hlt
outsb
xchg
stc
cmpsl
pop
jge
mov
cmp
cld
int3
loop
pop
xor
jmp
mov
pop
adc
sub
loope
inc
jno
mov
in
pop
and
xchg
andl
shlb
or
test
xchg
xchg
mulb
mov
insl
lods
push
push
add
jo
aaa
jmp
mov
das
fisttpll
lcall
out
in
scas
lods
ss
ret
andb
pop
fs
iret
and
mov
push
and
cmp
int
test
hlt
add
popa
enter
jae
dec
adc
pop
ficomps
mov
outsl
fs
repnz
neg
adc
outsb
into
lods
cmp
fstpl
adc
jns
sbb
mov
push
bswap
imul
movsb
cmp
test
in
add
jo
not
les
or
hlt
mov
idivl
shrd
imul
push
dec
es
test
jbe
in
or
aas
mov
cmpsb
or
and
mov
into
xor
aad
mov
sti
movsb
cwtl
cmp
or
insb
scas
test
inc
mov
insl
arpl
sbb
gs
xor
aas
push
pop
or
or
push
pop
jmp
xchg
addr16
mov
jmp
dec
out
out
sbb
or
into
test
int3
fs
add
mov
jmp
cmpsb
scas
pop
lahf
mov
fidivrs
cmp
test
loope
or
mov
sub
pop
cmp
jns
push
dec
pushf
jp
mov
push
push
rclb
imull
fisttpll
int
push
jmp
cltd
xorb
aaa
and
mov
and
in
cmpsl
movsb
mov
push
dec
dec
inc
sahf
inc
mov
hlt
mov
loope
cltd
lahf
jl
push
out
cmp
fistl
scas
loopne
cwtl
push
adc
loope
mov
mov
cli
or
jae
sub
jbe
aam
or
imul
pop
enter
ds
cwtl
daa
ret
insl
out
or
mov
xor
or
cmpsl
inc
push
nop
sub
inc
rolb
lock
add
dec
insb
push
add
push
sbb
movsb
sub
or
addr16
pop
inc
ret
adc
mov
cld
or
ret
mov
add
jle
xlat
jno
inc
dec
or
ds
test
jne
mov
into
adc
scas
lcall
pop
leave
pop
mov
mov
cmpsb
mov
pop
and
mov
movsl
lret
mov
in
enter
stc
mov
pusha
jo
cld
inc
push
mov
mov
test
jecxz
cmp
cmp
mov
ja
or
xor
mov
out
sarl
in
int
pop
clc
lcall
pop
scas
pop
dec
xor
pop
scas
sbb
pop
dec
imulb
or
pop
cmp
push
iret
and
lahf
mov
pop
dec
int
or
in
rcl
pop
inc
mov
xchg
cltd
adcl
pop
sub
xor
push
pop
adc
push
xorb
testb
fldt
mov
idivl
mov
int
fwait
sub
push
pop
in
xor
mov
mov
dec
in
gs
lcall
adc
sbb
add
hlt
dec
sar
push
sub
subb
fwait
addb
test
iret
push
jecxz
imul
pop
and
shrl
sbb
sub
lahf
mov
push
jbe
mov
enter
cli
mov
pop
movsl
dec
mov
adc
das
lret
cmp
daa
jno
mov
icebp
jecxz
outsb
fidivrl
les
decl
pusha
or
fwait
loopne
aas
adc
lahf
fcomip
mov
in
ja
test
out
scas
cmpsl
imul
mov
lea
psubsw
cwtl
out
mov
mov
call
xorl
loope
ds
or
stos
inc
mov
push
mov
adc
fidivs
push
sar
sub
aaa
ja
pop
rolb
rcll
faddl
fs
jbe
insl
lcall
push
mov
dec
pop
test
cmp
inc
push
push
jbe
ljmp
leave
push
xor
ds
xor
pop
pop
das
bound
sarb
sbb
cs
jecxz
mov
mov
push
push
pop
shrb
pop
cmpsb
es
xor
das
or
scas
ret
cltd
mov
jb
insb
loopne
add
in
in
or
repz
arpl
pop
pop
xor
scas
mov
jmp
jg
mov
and
inc
aad
mov
repnz
cmp
fisubrl
das
xor
pop
repz
clc
ss
ss
inc
fs
pop
stc
cmpl
jnp
jbe
jge
jns
orb
and
xchg
mov
pop
out
xor
mov
in
jne
pop
mov
mull
cmc
fdecstp
mov
pop
cmpsl
outsl
or
out
fwait
jle
inc
shl
push
add
js
shrl
testl
pop
dec
jae
xor
nop
or
mov
fsubrs
flds
inc
outsl
setge
pushf
out
repnz
push
fiaddl
jb
js
arpl
movsl
mov
push
stos
xchg
js
adc
jo
jne
pop
scas
mov
pop
sub
push
mov
jmp
push
fimull
inc
add
cmpsl
adc
pop
pop
and
lock
gs
outsb
mov
repnz
call
dec
push
mov
insb
and
mov
push
std
xchg
push
rcll
push
movaps
mov
or
push
sbb
adc
imul
stos
jg
gs
mov
jns
mov
xor
movsb
orl
push
aam
pop
pop
push
dec
mov
sbb
sub
mov
push
mov
xlat
pop
in
adc
lcall
popa
and
fldcw
adc
sub
js
iret
shll
xor
mov
mov
sbb
arpl
je
mov
in
adc
add
lods
or
aam
jge
in
dec
out
add
mov
cmc
scas
add
jecxz
push
sub
mov
mov
push
xor
and
mov
dec
mov
ret
adc
and
add
push
imul
mov
repz
mov
pusha
push
lds
out
cmp
rcll
inc
push
dec
xchg
std
and
in
xor
sub
mov
mov
incl
sub
sahf
and
cmc
mov
adc
mov
sub
cmp
std
xor
lock
mov
inc
mov
scas
aas
mov
add
or
pusha
dec
ds
dec
sti
icebp
movsl
dec
xor
call
popf
mov
imul
lret
int
mov
jl
sub
imul
adc
dec
fwait
inc
ljmp
pushf
sbb
addr16
push
out
outsb
insb
adc
mov
rclb
daa
test
in
fsubs
xchg
push
stos
jbe
aaa
aas
dec
vmovsldup
mov
test
inc
sbb
or
hlt
es
pop
adc
enter
pop
adc
inc
xchg
adc
add
out
dec
pop
mov
aas
xor
cmp
push
mov
cmp
push
scas
jl
pop
inc
outsb
mov
sar
xchg
jg
ljmp
mov
pop
cmp
in
scas
cmpsl
lret
testb
adc
mov
addr16
clc
dec
repnz
jo
add
test
sbb
push
fisubrs
sti
rclb
jne
imul
ficoms
ror
icebp
leave
pop
mov
aaa
int
pop
movsb
mov
cli
pop
push
jg
pop
movsb
pop
mov
xchg
cli
mov
push
pop
push
pop
or
xchg
in
jae
or
or
mov
iret
dec
fwait
lods
mov
adc
inc
cwtl
out
dec
mov
sbb
sub
jl
pop
pushf
jne
insb
jecxz
fwait
je
jle
lret
mov
xlat
push
mov
incl
pop
test
or
xorb
mov
out
arpl
scas
sub
sahf
shlb
mov
push
jns
jbe
cwtl
loop
jmp
xor
jl
mov
or
dec
pop
enter
add
xor
jno
mov
inc
cmc
mov
push
mov
push
jmp
mov
inc
test
cld
adc
and
mov
scas
je
pusha
mov
in
lcall
mov
mov
iret
in
clc
stos
inc
and
adc
jbe
loopne
push
pop
push
mov
jae
xchg
rcrb
daa
dec
xchg
in
push
jo
lret
mov
jbe
jo
and
push
cld
jno
inc
movsl
mov
cmpsl
jp
data16
push
pusha
movsb
fdivl
addr16
push
fdivp
add
gs
and
shll
cmpsl
jge
add
dec
pop
and
jo
sti
dec
out
popf
xor
cmc
add
test
mov
outsl
or
adc
push
xor
pop
ja
or
movsb
dec
mov
mov
pop
cli
lret
pop
xor
push
fs
pop
ficomps
lahf
jne
mov
ret
mov
lret
mov
push
andb
shll
ss
add
test
xchg
stos
adc
jle
push
cmp
repz
mov
cmp
aam
dec
sub
push
lahf
out
add
jle
mov
cmp
inc
adc
fmuls
filds
fidivrs
shl
shr
mov
inc
mov
testb
mov
xorl
call
dec
addl
xor
bound
inc
insl
add
dec
sbb
pop
and
shll
push
aad
cltd
and
inc
in
jno
or
or
aam
lahf
mov
push
shr
add
ja
jecxz,pt
les
sbb
int
mov
les
cld
add
cmpb
mov
dec
pop
pop
inc
ret
sbb
or
sub
add
add
sahf
dec
jo
decb
dec
lret
xrelease
out
sarb
push
leave
out
jne
hlt
dec
pop
jae
pop
or
sub
pop
and
mov
iret
lds
ljmp
dec
cld
add
out
fs
mov
inc
sbb
call
fmul
dec
popa
cld
stc
push
insl
call
ljmp
xchg
mov
xor
mov
ss
xor
sub
mov
xchg
mov
sahf
aaa
pop
cmp
or
jmp
bound
pop
push
or
sbb
mov
sbb
pop
and
push
xchg
loopne,pn
push
mov
cld
inc
inc
xchg
out
mov
push
cmc
hlt
xor
lds
fstps
sbb
inc
or
and
xor
add
xor
cmp
adc
pop
sbb
pusha
adc
push
cmpsb
push
pop
test
aas
fsubrl
jg
pop
inc
mov
mov
mov
mov
mov
mov
mov
xor
add
pop
leave
ret
push
mov
mov
sub
mov
mov
subl
cltd
sub
push
add
mov
add
inc
adc
push
push
mov
movl
mov
mov
mov
xor
xor
orl
xor
adcl
add
movl
adc
xorl
xor
xorl
xor
movl
cmp
movl
jne
movl
cmp
movl
je
andl
mov
inc
mov
cmpl
jne
push
push
pushl
push
push
pushl
call
cmpl
jne
xor
xor
inc
mov
cmpl
jb
orl
mov
orl
mov
mov
orl
xor
adcl
add
adc
xor
xor
cmp
jne
cmp
jne
mov
mov
xor
mov
mov
mov
mov
mov
add
mov
mov
xor
add
xor
add
adc
xor
xor
xor
add
adc
xor
xor
cmp
jne
cmp
jne
mov
mov
pop
pop
pop
pop
ret
push
mov
sub
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
call
jmp
movzbl
sub
push
or
push
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
pushl
call
jmp
mov
and
mov
sub
mov
mov
andl
movl
addl
movl
andl
mov
xorl
mov
sub
xor
mov
mov
sub
sub
mov
orl
add
mov
xor
mov
or
xor
mov
addl
sub
mov
mov
xor
adc
mov
notl
addl
mov
mov
sub
and
mov
mov
xor
and
mov
addl
mov
mov
xor
andl
mov
mov
mov
sub
xor
mov
movl
cmpl
je
cmpl
jne
push
push
call
mov
dec
mov
jmp
mov
mov
negl
xor
mov
add
xor
mov
sbbl
mov
xor
mov
sub
and
mov
addl
xor
mov
add
movzbl
movzbl
adcl
sub
mov
movzbl
xor
mov
or
mov
xor
add
andl
mov
andl
lea
adcl
mov
adcl
lea
mov
sbbl
lea
mov
orl
lea
andl
mov
adc
mov
sbbl
xor
add
andl
push
mov
xor
add
push
mov
xor
add
push
lea
push
pushl
pushl
call
test
je
lea
push
mov
xor
add
push
mov
add
push
mov
mov
pushl
call
mov
lea
mov
mov
mov
mov
mov
test
je
lea
mov
mov
mov
mov
mov
mov
mov
sub
mov
xor
mov
sub
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
pushl
xor
sub
mov
mov
pushl
pushl
pushl
pushl
pushl
pushl
pushl
mov
mov
mov
mov
call
mov
mov
add
pop
pop
leave
ret
push
mov
sub
movl
lea
neg
mov
push
sbb
mov
mov
lea
add
mov
sub
mov
dec
mov
and
mov
orl
xor
add
subl
mov
xorl
mov
mov
mov
xor
mov
mov
andl
add
movl
cmpl
je
cmpl
jne
push
call
xor
add
dec
mov
jmp
push
mov
sub
mov
movl
cmpl
je
cmpl
jne
push
push
pushl
call
mov
dec
mov
jmp
mov
addl
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
jmp
adcl
xor
mov
mov
and
mov
add
movl
cmp
je
movl
mov
movl
jmp
mov
mov
cmp
jne
movl
push
jmp
mov
notl
mov
movl
cmp
movl
jne
or
mov
add
xor
addl
add
movl
cmpl
je
cmpl
jne
push
push
pushl
push
call
cmpl
jne
mov
dec
mov
xor
add
dec
mov
jmp
mov
adc
mov
mov
orl
xor
add
xorl
imul
mov
sbbl
xor
addl
add
cmp
jmp
jl
lret
mov
test
rcl
ljmp
bound
pop
bound
dec
xorl
jle
push
popa
pop
mov
mov
inc
loope
xchg
push
xchg
sub
cmc
lret
lock
cmp
xor
lock
test
fwait
ret
repnz
sbb
xor
imul
mov
or
xchg
out
fistps
add
pop
or
leave
or
xlat
test
ss
stos
out
cmpsl
jge
mov
out
hlt
addr16
push
or
cld
fimull
imull
test
cld
ret
dec
roll
mov
xchg
xchg
jmp
mov
nop
sti
add
clc
adc
xchg
mov
iret
je
sbb
inc
mov
pop
inc
insl
int3
mov
testl
ror
cs
adc
arpl
dec
mov
xor
cltd
addr16
sbb
inc
pop
mov
in
adc
in
xor
xor
popa
hlt
dec
push
jge
out
mov
cmp
push
add
out
xchg
jge
mov
lcall
push
cmp
mov
jns
test
enter
mov
inc
and
sub
push
mov
mov
es
push
or
lret
inc
jnp
daa
loop
adc
lods
adc
cld
adc
insl
into
mov
lods
into
sbb
push
sbb
pop
pop
mov
cmp
outsl
mov
mov
pop
ret
stos
sub
mov
incl
jecxz
add
sbb
add
adc
jb
pushf
lock
add
jecxz
xor
xchg
mov
xor
adc
lret
pop
and
push
mov
pop
ret
xchg
mov
sub
cmc
cmpsl
lahf
cs
cli
mulb
sub
mov
pop
cltd
push
adc
lea
insb
movsb
aam
adc
std
dec
xchg
push
and
mov
cmp
scas
pop
mov
ljmp
xchg
adc
movsl
into
jns
sbb
fimull
mov
pop
or
pushf
into
stos
pop
push
nop
push
into
inc
cmp
pop
sub
mov
xor
inc
xor
lods
inc
mov
je
jb
xchg
adc
jp
popa
inc
call
pushf
mov
mov
lock
dec
mov
pop
outsl
mov
sbb
sub
pop
adc
push
in
aad
cmpsb
ret
inc
push
fsubl
ret
mov
push
scas
lcall
loop
or
test
push
jecxz
lods
test
or
popa
je
or
or
shl
stos
clc
jle
addr16
out
inc
and
adc
fucomip
imul
jbe
test
push
mov
xchg
outsb
pop
stos
sbb
add
mov
inc
out
mov
and
cmp
loope
icebp
adc
mov
xchg
outsl
pop
jae
icebp
hlt
lahf
stc
icebp
aad
shl
dec
mov
xor
fistpll
jno
sub
pusha
xor
push
iret
mov
or
aaa
sti
jge
jne
sbb
mov
jbe
ja
mov
shll
pop
cmp
add
cmp
and
cmp
cli
xor
pop
push
loope
cmp
xchg
mov
adc
mov
imul
outsl
ljmp
xor
and
lods
pop
lahf
jge
or
mov
cld
mov
daa
or
mov
rclb
in
out
test
jl
pusha
xor
xchg
stc
arpl
int3
inc
lds
jne
dec
cmp
aam
push
dec
jbe
je
push
nop
cmp
ds
xchg
or
into
js
mov
push
jae
scas
and
xchg
mov
mov
sbb
enter
add
sarb
sub
loope
pop
shll
pop
and
test
or
int
pop
jg
js
out
sti
aaa
push
adc
rol
lret
jno
das
and
mov
in
cmp
in
sub
or
ds
fidivs
sub
mov
xchg
push
jo
pop
stos
test
mov
sub
pop
orl
and
xchg
fidivs
stos
jg
sbb
and
push
inc
sub
fs
mov
mov
mov
nop
dec
adc
mov
scas
enter
pop
mov
xchg
pop
mov
adc
and
mov
mov
xchg
mov
jnp
sub
lea
pop
or
inc
lock
push
mov
shr
mov
pushf
ljmp
push
pop
xchg
outsb
cmp
fistpl
cmp
mov
inc
lock
in
loope
dec
cmp
push
mov
lea
push
imul
clc
jmp
aad
adc
or
test
add
stos
ret
cli
xor
inc
fisttpl
inc
mov
stc
dec
and
sub
int
mov
add
cmp
add
insl
or
sahf
xorl
mov
push
jmp
dec
push
sub
and
jnp
sbb
cmp
xor
jle
pop
adc
imul
xchg
xchg
in
out
sbbl
xchg
push
add
lret
mov
fisubl
add
adc
add
jmp
das
mov
sbb
sti
cmpsl
mov
paddb
cs
xor
jg
rcll
inc
fadd
push
fldl
aas
pushf
pop
lea
ja
into
clc
sub
pop
adc
jo
sub
mov
or
pop
and
clc
out
jecxz
sbb
jmp
outsb
jbe
pop
push
push
sub
scas
outsl
dec
clc
or
test
or
lcall
and
dec
daa
mov
mov
jns
loop
mov
and
cmp
ret
cld
jmp
or
pop
pop
repnz
push
out
out
adcl
push
pushf
jg
jns
pop
pop
stos
mov
aad
test
pushf
in
sar
mov
and
dec
testb
test
pop
sbb
jp
lock
mov
cmp
fcoml
mov
dec
add
idivb
popa
gs
xchg
clc
in
push
mov
sbb
sbb
fisttpl
mov
and
arpl
jae
adcb
or
inc
inc
cmp
push
decb
subl
push
xor
inc
shlb
sub
jbe
xlat
mov
push
rorb
popf
add
js
ljmp
inc
mov
scas
sub
push
test
fstpl
std
or
out
push
jge
and
popa
rcr
pop
ret
cli
pop
je
add
push
push
mov
xor
arpl
nop
rcl
push
xchg
jb
jo
mov
out
add
adc
inc
xchg
or
push
xchg
adc
popf
aas
sub
inc
and
jo
xor
pop
xor
add
fdivs
sti
push
addr16
scas
int
cli
adcl
mov
mov
pop
mov
in
sahf
cmpsb
stc
and
test
mov
mov
mov
lds
movsb
rolb
xor
add
stos
adc
or
push
mov
leave
push
loopne
jbe
mov
arpl
inc
loopne
movsl
push
movsb
adc
popl
jmp
mov
mov
das
out
fsubs
cmpsb
inc
fstpt
push
loope
outsb
or
push
sub
je
arpl
out
js
cmp
and
push
xor
cwtl
arpl
fildll
cmp
out
fdivl
jmp
aas
inc
hlt
mov
cld
xchg
xchg
rclb
add
ror
mov
idivb
outsb
push
sub
cmp
jae
std
pop
add
pop
cmp
and
add
in
ficoms
jmp
mov
sbb
dec
ret
jmp
lods
mov
mov
and
je
add
subl
imul
shrb
stos
sbb
push
roll
inc
push
pop
ja
adc
xor
ficoms
adc
xor
cmp
push
and
adc
xchg
mull
mov
sbb
dec
and
jg
pusha
stos
faddl
bound
jp
sbb
jg
inc
inc
ret
xchg
sahf
cld
sbb
inc
sub
mov
and
sub
lret
cli
insb
xchg
lret
fnstcw
mov
jmp
mov
cmc
jl
addr16
pop
aas
in
outsb
and
nop
pop
adc
cmpl
pop
sub
adc
jmp
repnz
xlat
and
insl
push
sub
or
sub
jle,pn
and
inc
xchg
xchg
pand
cltd
arpl
or
test
inc
rcrl
mov
lahf
pop
xchg
lods
mov
dec
cmc
mull
rclb
test
jge
les
adc
ficoms
adc
arpl
outsb
push
push
daa
test
jno
inc
fcmovnbe
subl
cwtl
cli
push
pop
test
pop
pushf
jae
mov
xchg
mov
sub
push
mov
or
mov
dec
xchg
push
jg
push
mov
lods
out
or
ficoms
mov
es
or
loopne
pop
inc
mov
and
je
xchg
or
loopne
and
out
push
mov
daa
aaa
adc
push
popf
add
aad
mov
std
xchg
or
mov
push
inc
scas
bound
pop
stos
into
stos
mov
mov
cmp
cmp
enter
mov
test
jg
test
or
sub
out
cld
adc
mov
xorl
push
push
jb
pop
mov
mov
sbbl
outsl
fldt
loope
lods
imul
push
push
sub
out
ja
and
jge
cmpsl
lock
or
cmp
aaa
std
mov
cmp
sti
jns
ss
cmc
jle
mov
ret
repz
popa
aaa
jl
mov
incl
sbb
sbb
fld1
sbb
push
sbb
out
repz
pop
insb
fisubl
push
or
or
ret
xor
lret
mov
pop
cmp
mov
ret
sbb
cmpb
pop
xchg
repnz
or
and
ljmp
jl
xlat
sbb
push
rcrl
push
xchg
mov
rclb
jb
cwtl
add
mov
aam
mov
pop
xor
cmpsl
xchg
lods
pop
outsb
ss
lods
dec
shlb
sub
jle
cltd
jg
adc
mov
add
cmp
xor
inc
add
push
cwtl
in
inc
in
dec
cmp
jecxz
fadd
cmp
imul
jge
shlb
mov
mov
ret
insb
adc
inc
jns
jecxz
xchg
cmp
sub
movsb
xor
pop
xor
scas
ja
sub
mov
jo
jmp
pop
testl
lret
in
mov
and
xchg
adc
das
dec
add
push
xchg
cs
in
add
mov
adc
push
xlat
and
std
mov
jns
shll
sarb
push
push
notb
cmp
in
mov
js
mov
push
je
call
add
push
es
mov
cmp
mov
lea
fs
shlb
es
icebp
jne
add
and
shll
mov
lods
stc
and
imul
mov
xchg
lcall
pop
or
or
cmp
rep
adc
fcomps
and
jae
jb
cwtl
shlb
mov
outsl
cmp
push
adc
leave
repz
stos
mov
dec
jae
cltd
fsubrl
fwait
adc
adc
ficoms
int
add
in
fdivl
xor
bound
xchg
scas
pushf
cld
adc
add
lock
xchg
push
push
nop
loop
xor
subb
mov
test
mov
dec
jb
cmp
leave
xchg
insl
mov
pop
sbbb
push
pusha
fldcw
pop
ficoms
addl
xchg
cmpsl
mov
scas
push
loope
data16
into
pop
sub
aaa
cld
cmpsl
insl
dec
mov
mov
and
push
xor
fmul
leave
es
cmp
loopne
pop
mov
mov
insl
or
je
shlb
xor
pop
cli
adc
adcl
fsubrl
ljmp
and
inc
inc
ss
dec
pushf
sbb
xchg
push
xor
mov
and
mov
rcl
lret
cmpsb
dec
or
and
stos
mov
cmp
clc
lret
sbb
mov
dec
repz
leave
xor
subl
fdivrl
xchg
loope
dec
sahf
and
insb
push
sub
shl
cmpsb
push
lcall
push
les
fistpll
in
mov
js
imul
int3
mov
inc
repnz
dec
inc
add
mov
xchg
pop
adc
inc
bound
mov
dec
fucom
call
out
pop
jno
mov
pop
hlt
ljmp
push
xor
ffreep
roll
sub
or
cs
xchg
dec
sub
bound
fildll
aas
ds
loopne
jmp
sub
xor
stc
add
or
jg
cli
and
or
lds
dec
sbb
mov
xchg
or
dec
scas
mov
adc
ret
jnp
popf
clc
or
adc
mov
jnp
test
pop
pop
xlat
xchg
fbld
mov
or
mov
sbb
jg
cmc
insl
insb
and
pop
inc
adc
icebp
insl
lock
or
mov
mov
outsl
sbb
sbb
cmp
or
les
add
jg
mov
pop
cmp
inc
repz
arpl
xchg
mov
fsubr
mov
into
inc
scas
ds
imul
scas
fisubrs
cmp
sub
jns
xchg
das
jne
sub
cli
insb
bound
mov
inc
pop
ficoml
pop
or
dec
inc
or
ror
je
jae
mov
push
dec
insl
push
mov
call
xchg
mov
push
or
cmp
push
add
xor
cmp
push
enter
push
stos
mov
bound
mov
mov
push
pusha
or
and
and
data16
inc
xchg
mov
pop
and
aaa
jge
or
cmovae
ret
lods
std
fnstcw
jle
fs
xor
mov
flds
adcb
not
adc
xchg
jno
lret
pop
cltd
mov
and
movsl
mov
jg
push
xor
cmp
ss
ror
mov
pop
lods
cmp
cwtl
xor
and
rcll
lock
dec
mov
mov
mov
push
fwait
jo
fwait
les
adc
test
fnsave
enterw
outsb
inc
cmpsl
lds
or
mov
sbb
mov
inc
and
push
aad
add
adc
xchg
ljmp
cltd
mov
cmp
leave
inc
xor
pop
jbe
push
xlat
cmp
mov
popa
jo
jns
xchg
add
pop
and
sarb
or
push
dec
jle
jmp
inc
lahf
into
sti
push
xchg
movsl
mov
dec
mov
add
insb
or
in
loopne
or
inc
movb
daa
push
cmc
andb
and
neg
xor
std
iret
add
add
lret
sbb
movsl
pop
jno
xchg
shr
popa
or
cld
cmp
xchg
popa
addb
leave
mov
push
mov
dec
add
pop
cli
dec
push
aas
adc
jg
or
mov
xchg
test
lret
call
out
pop
inc
sbb
ja
out
inc
ss
pop
arpl
ds
and
dec
in
pop
lea
pusha
push
sub
out
scas
or
xlat
xor
mov
sub
outsb
mov
orb
mov
lcall
mov
sub
fs
jae
sub
push
aad
mov
out
pop
out
xadd
fstps
shlb
into
or
lret
lds
jne
nop
mov
leave
aas
fcmovnu
jo
popf
scas
ljmp
mov
mov
rcr
sbb
push
fwait
sub
iret
xor
iret
sti
sbb
ja
jp
push
bound
sar
stos
mov
insl
jp
xor
jmp
inc
pop
clc
stos
jae
dec
inc
dec
pop
pop
jmp
imul
push
les
fsubl
lds
dec
jmp
clc
nop
and
das
mov
mov
das
cmp
ljmp
pop
sub
sbb
shr
test
lahf
movsl
aam
mov
push
repnz
pop
test
shll
xchg
sti
mov
cmp
sbb
mov
repnz
pop
dec
push
cmpl
lds
fldenv
dec
inc
adc
int3
pop
lods
mov
daa
mov
loope
mov
sub
pop
negl
mov
push
cmp
stos
jecxz
not
mov
and
xorb
adc
mov
dec
and
push
inc
pop
ficoml
lds
jae
sbb
out
or
fnsave
lcall
test
mov
add
inc
or
mov
sarb
cmp
sahf
push
aaa
mov
dec
test
ret
leave
sti
sub
popa
sub
xor
push
aaa
push
sbb
mov
lods
add
iret
push
sbb
mov
inc
jno
mov
ret
out
inc
inc
cmp
jmp
loopne
push
push
out
inc
xchg
pop
incl
or
mov
mov
jns
xchg
xchg
popa
lret
sti
test
xchg
leave
ficomps
ja
sub
inc
cmpsb
adc
add
rcl
insb
nop
jecxz
mov
lret
cmp
test
arpl
je
mov
sbb
push
call
in
mov
xchg
test
pop
hlt
sbb
xor
rorl
inc
pushf
xchg
sbb
pop
insb
out
push
insb
in
ret
dec
in
pop
mov
adc
mov
or
div
and
loope
scas
mov
and
hlt
out
sub
outsb
int3
inc
fiadds
and
fisttpll
cmp
ret
mov
dec
jge
mov
repnz
lcall
arpl
mov
lret
xchg
mov
lods
push
and
insb
je
inc
and
pop
jge
popa
testb
or
hlt
shll
fiaddl
mov
sub
jae
and
mov
fisubs
outsb
mov
mov
cmpb
add
jmp
out
jne
xor
jp
inc
cld
push
cld
int
mov
iret
scas
mov
in
mov
sub
and
adc
cld
addl
dec
call
xchg
cmp
xchg
push
cmp
mov
aam
jae
fs
jnp
imul
adc
mov
mov
pushf
jecxz
pmovmskb
mov
test
outsl
std
xchg
loop
xor
pop
adc
fistps
push
test
clc
in
iret
movsl
add
scas
int
xchg
fstps
cmp
fcoms
test
repnz
add
push
outsb
push
dec
nop
or
sbb
repnz
xor
clc
sbb
inc
cmpsb
shll
cmp
sti
lea
stos
jno
mov
sti
daa
cmpsl
mov
inc
sbb
mov
mov
xchg
push
lock
aad
pop
cmp
dec
push
movsl
int
cmp
dec
scas
fisttpll
and
dec
jnp
fisubrl
xlat
adc
imul
fisubl
test
test
mov
repnz
ss
and
loope
xor
cmp
and
cmc
sti
pop
es
stos
dec
adc
in
out
jbe
adc
nop
adc
mov
loop
outsb
cmp
push
mov
mov
sub
dec
out
icebp
cmp
gs
jmp
dec
xchg
aaa
in
mov
lret
lods
ret
je
cltd
std
adcb
add
push
lahf
or
jg
lret
push
rorb
push
repnz
push
pop
jp
pusha
pop
loopne
push
mov
mov
test
jns
push
fbstp
fstcw
loopne
pushf
add
icebp
add
adc
divl
jle
nop
add
inc
gs
xor
dec
inc
outsl
cmpsl
stos
fwait
xchg
stc
or
outsl
shll
mov
sbb
ficompl
jns
outsl
cmp
rcrb
out
jns
pusha
aaa
inc
add
inc
aam
push
lret
jnp
nop
dec
stos
sahf
adc
into
call
xor
or
sbb
dec
std
nop
jb
add
adc
loopne
repz
incb
sbb
fidivs
push
mov
mov
nop
adc
cmp
repnz
fs
push
incb
inc
incb
mov
pop
add
mov
jge
or
sbb
lcall
aaa
mov
inc
fs
sub
mov
insl
push
rorl
pop
inc
je
incb
in
xchg
sti
bound
mov
in
fiaddl
add
or
movsl
jns
add
mov
sbb
cmpsb
push
or
adc
out
ret
adc
fadds
out
nop
inc
mov
add
cli
cmp
lahf
lret
add
mov
and
mov
xchg
push
fwait
xor
js
outsb
jecxz
lret
or
popa
xchg
cltd
js
mov
ret
movsb
push
push
jmp
std
js
dec
in
add
xchg
sahf
adc
subl
hlt
aas
int
dec
jl
jo
mov
cwtl
cs
push
cwtl
jmp
pop
jp
andl
add
sbb
repz
clc
lahf
icebp
testb
inc
push
mov
lcall
stos
cmp
xchg
lcall
imul
negl
imul
lods
rorb
out
lods
fdiv
les
fs
mov
cs
xor
xchg
es
jge
mov
cmp
fimull
sahf
cmp
mov
xchg
push
js
adc
pop
flds
test
fidivrl
repz
iret
or
in
adc
rolb
cld
aad
rcr
test
xchg
inc
fdivs
je
jne
out
fcmove
mov
inc
mov
push
mov
gs
jbe
ret
in
pop
clc
stos
xor
out
cmp
pop
mov
test
jge
adc
fnstcw
adc
xchg
icebp
mov
mov
cmp
mov
xchg
faddl
movsb
out
popf
xchg
out
mov
mov
push
sub
xchg
add
into
sbb
cmp
sbb
mov
fsubrl
pop
xchg
jne
addr16
adc
and
dec
xlat
add
pop
mov
cmpsb
adc
or
add
jg
test
popf
shr
xchg
mov
stc
mov
jb
xor
xor
loopne
push
adc
cmpsb
mov
cmp
loopne
xchg
dec
adc
mov
push
movsl
sub
push
xchg
and
jae
es
xor
jp
push
dec
out
adc
icebp
insl
loopne
adc
xor
ret
adc
rorl
push
scas
add
xchg
cmp
pop
in
jge
gs
push
test
jns
push
das
lock
pop
test
pop
pop
loop
incl
pop
lcall
loopne
mov
daa
lock
into
xchg
jo
daa
xchg
fsubrp
mov
pop
je
iret
xchg
js
pop
shrl
push
xchg
add
cmp
call
push
xchg
movsb
into
testb
sarb
paddw
je
adcb
jmp
loopne
lret
and
lcall
divl
jne
loopne
inc
ja
ja
insb
sbb
in
jecxz
stos
scas
mov
mov
std
dec
fs
pop
jae
sti
fldl
iret
adc
jae
sbb
jecxz
jge
or
jmp
pop
lods
out
je
or
mov
ficoml
inc
dec
sbb
and
enter
int3
cmp
addr16
mov
stos
or
mov
ss
sbb
insb
push
iret
add
add
push
imul
jne
outsl
push
sub
or
cs
wrmsr
pop
push
imul
adc
dec
fists
push
or
cmp
lods
push
ret
in
sbb
mov
ja
dec
insl
test
push
mov
jne
xchg
jne
jle
push
les
push
icebp
mov
lahf
pop
std
xchg
mov
xchg
shrl
sbb
cmp
test
inc
lret
push
add
adc
add
cs
gs
xor
mov
push
cmp
shll
inc
fisubl
sub
rclb
xchg
test
mov
adc
addr16
mov
popl
mov
dec
imul
loop
fwait
sub
es
sub
dec
mov
out
addr16
jnp
xchg
insb
xchg
in
iret
movsl
xchg
daa
es
aas
shl
inc
xchg
in
into
hlt
in
adc
insb
movsl
mov
repnz
lret
outsb
xchg
inc
jns,pn
add
jge
mov
push
mov
inc
in
pop
dec
add
xchg
dec
leave
std
cltd
add
push
fsubs
push
test
xor
xor
testl
std
xchg
lret
cmpsl
add
addb
loopne
int3
loopne
dec
aad
sbb
adc
cmpsb
push
popa
das
cwtl
pxor
xor
scas
es
fcomps
in
push
add
and
xlat
cmp
shlb
jne
daa
repz
mov
cmp
cli
fsubrl
popf
mov
mov
fsubrl
pop
stos
sub
sahf
or
stc
sbbl
inc
jae
cli
fstp
in
xor
inc
pop
cli
inc
cs
ret
divb
pop
std
scas
addr16
xor
leave
xchg
add
mov
jmp
mov
jno
fcmovnu
sbb
fistpl
int3
jmp
movsl
ss
movsb
aas
mov
fsubs
or
bound
lea
inc
push
popf
sbb
mov
bound
in
fcomps
mov
mov
push
movsb
nop
push
jae
repnz
arpl
xchg
leave
mul
lret
xor
mov
int3
mov
push
out
lret
sbb
cwtl
pop
cmpsw
mov
push
ret
jne
pop
divl
pop
mov
in
out
daa
mov
adc
fdivr
xor
stc
je
dec
or
mov
lds
shrl
push
in
test
in
arpl
insb
mov
cmp
in
xchg
add
push
add
jno
jne
insb
xor
xor
jae
shll
je
sub
stos
fldl
sub
sbb
lock
jo
pushf
lds
inc
sub
jbe
dec
mov
pop
fucomp
cs
sarl
sahf
and
sbb
adc
loopne
pop
jns
arpl
into
push
pop
lds
ljmp
outsb
aam
in
adcb
sub
cmc
rdpmc
cmp
sbb
fmuls
sub
dec
movsl
jg
xor
fdivs
jecxz
jge
sub
xchg
hlt
icebp
mov
jp
and
sbb
jno
movsl
test
aam
mov
out
fmuls
pop
or
cmp
sub
shll
fcomip
movsb
es
add
jne
in
lods
jecxz
sahf
dec
ljmp
dec
push
push
addl
aam
jnp
jns
lds
pop
out
cmp
imul
imul
or
mov
xlat
or
pop
in
add
push
push
adc
or
push
adc
fsubrs
loope
inc
jns
push
inc
aam
xor
shlb
adc
mov
pop
push
mov
imul
xor
inc
mov
addr16
in
test
gs
mov
test
pop
sub
mov
rorl
xchg
movsb
xor
adc
cs
add
xchg
insb
in
push
mov
jecxz
xor
jns
jmp
add
in
jge
add
gs
popa
cmp
lock
jmp
nop
xchg
iret
cmp
inc
push
add
fwait
add
xchg
imul
adc
cmp
sub
pop
lods
mov
sbb
std
push
mov
xor
fdivrp
hlt
adc
mov
jecxz
dec
mov
mov
dec
ljmp
push
mov
mov
xchg
cmp
inc
loop
cmpsl
scas
pushf
xor
mov
jp
sbb
adc
stos
outsb
sbb
lods
sub
filds
pop
inc
pop
jbe
jo
js
out
push
cld
and
sar
dec
mov
cld
loopne
mov
or
repnz
das
pop
cmp
mov
out
dec
mov
ret
cmp
push
inc
mov
push
jnp
adc
mov
mov
pop
loope
jmp
jp
sahf
fsts
mov
mov
dec
in
insl
pop
gs
sub
xlat
iret
or
mov
scas
in
lds
mov
int3
jecxz
jne
imul
push
in
enter
dec
lds
popa
sub
loopne
mov
jbe
shll
sar
mov
add
push
pop
jnp
cmpsl
xchg
orl
mov
jno
or
xorl
cmp
cmpsl
stc
push
cli
rorb
xchg
and
les
mov
popf
xchg
pusha
rol
cs
xchg
cmp
loop,pt
ret
xor
fcom
inc
lahf
insb
lods
adc
mov
popf
or
or
iret
aam
movsl
add
jmp
aad
sub
add
fidivrl
push
fs
in
pop
adc
pop
adc
outsl
rcrb
inc
jns
movsl
pop
inc
test
xchg
mov
or
fidivrl
popa
pop
test
pop
inc
mov
sub
push
dec
sub
stos
mul
popfw
xchg
pop
ds
dec
mov
sbb
inc
adc
sub
adcl
and
mov
adc
fwait
mov
outsb
insl
dec
dec
sti
cmp
in
sub
icebp
mov
stos
aaa
sub
lret
sub
lods
cwtl
cmp
stc
nop
leave
ds
hlt
in
mov
inc
in
dec
jae
movsl
mov
idivb
jl
imul
pop
fdivrl
divb
scas
xor
inc
loopne
mov
aad
pop
test
lods
mov
push
xchg
and
jno
mov
dec
inc
lods
cwtl
adc
cmpsl
xor
dec
int
insl
mov
xchg
and
insl
dec
cli
push
mov
lret
jae
rcll
out
lds
jo
fstl
mov
lret
nop
mov
xchg
dec
addr16
mov
shll
xchg
cmpsb
or
inc
into
inc
sub
popf
gs
dec
jmp
or
int
mov
push
sarb
pop
sub
repnz
and
or
jg
pavgw
mov
daa
pop
jl
lahf
lods
add
mov
ret
add
repz
lahf
and
xchg
pop
fisubl
mov
push
addr16
in
insb
cmp
mov
call
inc
fadd
inc
popa
push
lock
loope
inc
jle
jbe
jle
nop
mov
cld
pop
daa
fs
xchg
pusha
lock
jns
add
fcompl
mov
cmpsl
jae
mov
bound
sub
lods
rcrb
pop
xlat
in
loopne
dec
scas
mov
push
cwtl
sbbl
arpl
push
pusha
loop
push
inc
or
aaa
cmp
jp
pop
arpl
jns
and
sbbl
mov
cmp
inc
cld
push
movl
je
or
mov
movl
add
mov
xor
or
or
mov
decl
xor
add
subl
imul
movl
mov
jmp
subl
mov
xor
sub
mov
andl
mov
add
xor
or
mov
decl
mov
sub
add
movl
cmpl
je
cmpl
jne
pushl
push
push
call
cmpl
jne
mov
dec
mov
xor
xor
dec
mov
jmp
mov
mov
add
mov
mov
mov
xor
xor
lea
mov
xor
add
imul
mov
xor
sub
mov
add
cmp
mov
mov
jg
xor
mov
sub
add
jmp
xor
add
add
mov
mov
mov
xor
add
not
and
movsbw
jmp
jge
xor
xor
add
mov
mov
jb
push
hlt
pop
bound
dec
dec
xor
roll
push
pop
jmp
gs
push
sub
outsl
jp
fcmovu
push
rorb
popa
sarl
fistpl
test
pop
scas
and
jb,pt
add
pop
clc
mov
jno
inc
xchg
inc
sbb
sbb
lcall
mov
test
and
ret
in
fstl
dec
push
sbb
adc
test
pop
push
outsl
mov
outsl
jb
leave
push
sti
in
xchg
lea
mov
rcrl
adc
pushl
cmp
mov
outsl
test
add
pop
and
lret
iret
mov
adc
insb
gs
lods
or
pop
addr16
mov
and
scas
js
loopne
adc
jbe
xchg
mov
sbb
jl
shl
cmc
je
or
dec
adc
mov
mov
ffreep
xchg
xchg
mov
and
push
je
mov
inc
loopne
and
jmp
test
movsl
inc
push
movsl
scas
dec
daa
mov
loope
std
jno
ror
sub
sub
push
fwait
shll
lods
push
sub
push
stos
and
data16
out
xchg
sbb
cmp
shlb
test
add
push
loop
icebp
in
xor
mov
cmc
cld
je
cmp
push
js
in
cmp
and
sbb
adc
ss
sub
in
pop
push
push
mov
imul
lret
test
xlat
jmp
xchg
inc
adc
push
sub
lret
pop
testb
frstor
push
in
and
mov
insl
in
push
xor
movsb
movsb
or
aaa
xor
xchg
cmp
pop
js
aam
subb
cmp
dec
shll
test
leave
cmc
jle
cmp
dec
test
fidivs
xchg
addr16
idiv
or
adc
scas
mov
andl
sub
ret
push
shlb
jl
xchg
fdivr
daa
mov
js
push
sbb
lock
filds
adc
mov
sbb
popa
jl
sub
or
mov
sbb
out
lods
stc
push
insb
ret
imul
mov
pop
mov
push
inc
loopne
lret
sub
inc
dec
xlat
insl
xchg
stc
fcomps
or
pop
push
pop
ja
jno
jmp
out
inc
sbb
inc
mov
sbb
lcall
out
scas
jo
test
jb
inc
lea
out
addl
mov
inc
or
sub
pop
sti
stos
push
inc
sahf
js
shrb
or
les
add
shlb
test
push
cmp
sbb
add
into
out
mov
jns
mov
movsb
xor
nop
inc
shrb
js
jle
call
mov
jle
dec
mov
sbb
lcall
add
pop
sub
fld
sti
stos
js
xor
scas
dec
mov
and
push
dec
mov
out
and
stos
pop
adc
dec
xchg
cmp
fsin
pop
dec
xor
jmp
adc
pop
push
inc
punpckhbw
xor
push
xor
add
popa
inc
mov
dec
out
in
pop
jecxz
out
push
das
or
inc
lods
lahf
add
and
and
and
and
mov
movsb
inc
xchg
fnstsw
in
push
push
cmc
dec
ret
xchg
pop
std
adc
inc
daa
jle
je
out
fists
cmp
insl
lret
pop
fdivl
insb
sbbb
pop
fistl
push
jbe
or
jp
pop
cwtl
mov
fisttpl
std
adc
jno
aam
es
je
int3
pop
enter
lods
xor
sub
aam
mov
rorl
mov
test
dec
orl
inc
push
fwait
and
dec
push
mov
popf
test
into
or
test
push
mov
call
or
negb
jge
push
pop
aad
test
push
and
in
mov
cld
aam
jl
cmp
pop
ja
mov
inc
rolb
ret
xchg
outsl
in
jae
cltd
xchg
vmptrld
xor
das
test
aas
cmc
inc
testl
adc
jae
inc
xor
mov
sbb
stos
jae
ret
pop
jo
gs
dec
insb
stos
fistpll
fs
sti
sbbb
adc
mov
loope
gs
movsl
mov
jae
xchg
mov
jmp
mov
xor
ret
pop
sbb
insl
xor
aam
addr16
test
repz
int3
pusha
loopne
or
push
xchg
sarl
fldl2e
mov
adc
inc
jbe
test
test
inc
insl
push
push
ss
sbb
xchg
mov
xchg
add
sbb
in
jne
inc
cli
iret
lods
daa
cwtl
push
out
and
sub
add
push
push
sti
xchg
xchg
or
icebp
data16
ljmp
push
call
test
dec
ljmp
pop
loopne
fisttpl
lock
fnstsw
push
jmp
and
movsb
popa
sbbl
xor
mov
pop
mov
lcall
push
xchg
sub
xor
inc
stc
xor
xchg
das
insl
inc
mov
notb
pop
fistpl
ja
xlat
push
bound
and
out
movsb
and
jae
rclb
pop
clc
mov
pop
std
mov
or
inc
aad
dec
fcomp
add
adc
push
nop
jecxz
xlat
push
inc
and
mov
popa
mov
xor
push
dec
sub
repnz
clc
mov
xchg
and
out
pop
aad
stos
sub
mov
jle
roll
fistl
mov
mov
test
or
fimull
test
ret
sbb
or
push
ss
test
int
mov
lret
push
fsubs
xor
shlb
loope
rcl
jl
push
sbb
push
add
dec
addr16
popa
pop
jle
jnp
xchg
push
mov
or
pop
mov
and
int
iret
cld
daa
sbb
pop
mov
lods
cs
pop
rcll
pushf
mulb
adc
cmp
cmp
push
orb
xor
cld
dec
outsb
xlat
jnp
sbb
pushf
mov
xor
arpl
enter
sbb
pop
in
add
pop
mov
testl
cmp
push
outsb
mov
inc
pop
lock
xchg
out
cmp
movzwl
inc
movsb
add
mov
adc
jne
inc
and
jge
xchg
in
mov
pusha
fcomip
icebp
icebp
jno
fsubrl
ja
ret
inc
rcrb
je
mov
mov
vunpcklpd
cld
dec
lret
inc
out
stos
mov
add
das
cmp
adc
ja
addr16
stos
sti
pop
test
mov
and
inc
jp
xor
pop
dec
lea
les
out
fsub
xor
inc
jo
out
push
sbb
or
xorb
lods
cli
xor
pop
dec
mov
test
call
sub
push
jne
scas
jne
add
inc
dec
jns
pop
mov
imul
pop
fldenv
sahf
orb
xor
icebp
in
and
mov
jmp
cmp
adc
push
pop
pop
fs
mov
jnp
iret
xor
mov
mov
addb
inc
jns
xchg
es
xchg
in
pop
rcr
andl
ss
ljmp
out
lea
or
mov
out
mov
les
push
out
sub
fnstcw
sub
pop
out
aas
pop
mov
cwtl
xlat
xchg
insb
lds
dec
gs
test
mov
jbe
cmp
sub
cli
stos
enter
inc
mov
and
cmp
add
neg
xchg
xor
das
mov
mov
jne
pop
push
ds
pop
ret
rcr
call
add
je
shl
push
lret
stc
pop
add
roll
mov
outsl
cmp
insl
stos
mov
sbb
mov
out
addr16
cmp
add
lods
fldl
jae
sti
scas
jge
push
jb
clc
or
enter
pop
enter
pop
pop
dec
test
sbb
xchg
push
mov
and
jmp
or
scas
cld
jno
cwtl
shll
mov
ret
cmpsl
js
out
into
fwait
push
xchg
or
jmp
lds
gs
cs
inc
pop
lret
insb
adc
inc
mov
sub
int3
xchg
stos
rorb
xor
cld
insl
int3
add
mov
addr16
push
enter
ljmp
xchg
out
inc
test
pop
push
inc
mov
scas
out
pushf
xchg
push
xchg
jecxz
test
dec
mov
xchg
dec
add
insb
pushl
fnclex
add
xor
sub
xor
rorl
repnz
aas
jbe
das
push
stos
jbe
cmpsl
es
push
push
pop
pusha
leave
pop
and
mov
mov
and
jge
cmc
inc
cmpsb
cltd
jbe
mov
ljmp
cmpsb
fidivrs
das
icebp
sti
int3
jecxz
cmp
push
cwtl
push
sahf
cmp
or
rclb
je
mov
pop
adc
cli
je
xchg
adc
push
push
or
mov
push
loopne
cmp
jbe
loope
dec
dec
punpckldq
test
std
dec
es
xchg
add
lret
xchg
hlt
xlat
pop
or
std
insl
call
mov
addr16
sub
dec
popa
js
or
leave
call
pop
icebp
out
mov
inc
sub
xchg
aas
jp
repnz
hlt
fdivl
jno
out
les
mov
lret
push
mov
mov
mov
mov
sbb
rcrl
jnp
push
fnstcw
fsts
push
stc
mov
jns
les
pop
out
push
outsl
lods
cmp
jle
push
fwait
add
cmp
jbe
dec
scas
sbb
or
mov
sub
inc
pop
jmp
stos
repz
popa
arpl
call
add
and
repz
gs
add
pop
aam
sub
xor
pop
lea
loopne
ja
push
xor
push
incb
push
push
sub
repz
jp
js
xchg
imull
lods
jne
mov
gs
or
sub
fistl
mov
aam
inc
or
std
js
mov
fimull
loop
cmp
adc
std
mov
mov
jg
dec
inc
and
jp
sub
jbe
push
cmp
imul
dec
sub
mov
repnz
nop
lcall
push
adc
mov
sti
mov
or
inc
loopne
test
and
push
or
mov
cmp
push
cmp
lds
hlt
mov
xor
mov
rorb
fnstenv
sub
adc
mov
jns
pushf
lahf
cwtl
adcb
cmp
jle
xchg
imul
dec
adc
in
add
jnp
sub
nop
ficomps
sub
mov
lods
sub
daa
lcall
fldenv
or
dec
fdivr
ret
fistps
aad
mov
and
in
and
mov
sbb
repz
stc
add
in
rdtsc
push
jmp
mov
or
sub
ja
push
inc
jnp
outsl
xor
test
addr16
call
aad
jle
pusha
adc
add
js
repnz
mov
cld
test
jg
or
je
jmp
out
pop
mov
cmp
xor
imul
rorl
pop
add
decb
and
aad
dec
fmuls
aad
sub
scas
sub
pop
lods
mov
push
push
jns
pop
jae
push
fwait
inc
stos
cmp
mov
in
mov
insl
sub
add
cmp
cmpsl
sub
rcll
repz
pop
xor
jns
mov
jbe
imul
sub
lods
and
push
add
ficoml
movsl
xor
push
mov
cmpsl
aad
mov
cs
mov
jo
cmpsl
and
movsl
sub
into
sub
and
insl
dec
or
xlat
aas
sub
dec
mov
push
mov
pop
sub
push
cmp
js
imul
andl
add
lds
fistl
add
fisubrl
mov
add
stos
dec
dec
or
push
iret
roll
inc
inc
les
mov
hlt
add
daa
dec
jge
enter
pop
cmp
rcrl
insb
leave
dec
pushf
out
adc
loop
jg
clc
and
popa
inc
aam
repz
ret
clc
cltd
xchg
repz
jg
fnstenv
out
adc
sbbb
sub
ljmp
push
adcl
xor
ss
add
fwait
pusha
test
pop
jg
mov
in
shll
int
sbb
jmp
pusha
push
paddb
mov
mov
xchg
add
pushf
sub
aaa
popa
adc
sub
sahf
sub
mov
call
push
or
mov
xchg
cmp
aaa
in
mov
dec
sbb
pop
pushf
rorb
scas
mov
xor
inc
outsl
arpl
jnp
call
arpl
in
pop
jne
xor
or
cmp
outsl
in
push
or
sub
or
repz
sarl
out
into
mov
inc
sbb
jo
fcmovne
arpl
stos
add
xchg
test
xchg
pop
mov
mov
push
adc
fcmovnbe
cli
inc
jo
mov
les
jne
mov
ficoms
jmp
loopne
dec
mov
inc
sbb
stos
sub
xor
dec
test
pop
sbb
inc
jmp
cmp
bound
ljmp
int3
popf
pop
ret
les
fs
cmpsb
insl
sub
sub
idivl
sub
bound
imul
div
add
add
xchg
push
repz
stos
jbe
xor
arpl
jo
repnz
fcoms
inc
aam
fisubrs
cmpsl
stos
frstpm(287
pop
xchg
pop
xor
mov
pop
sti
shl
mov
and
sub
gs
or
rol
dec
out
dec
dec
xor
mov
xchg
negl
out
out
mov
fwait
xchg
cmpsl
xor
cmpsl
ror
lods
cmp
xlat
xor
mov
test
insl
out
mov
dec
cmpsl
lods
or
lock
insl
and
cmp
and
cmpsl
test
cwtl
xor
sbb
mov
mov
in
test
loope
pop
out
fstps
or
orl
dec
sub
loopne
mov
and
jecxz
dec
mov
xorb
xchg
and
inc
orl
add
cmp
sub
fwait
jle
les
sub
xchg
jnp
xchg
push
xchg
movsb
push
in
lods
jmp
push
fimull
adc
adc
inc
pop
mov
imul
mov
sub
add
jge
mov
int3
inc
lcall
sbb
xlat
xchg
jo
sub
adc
fnop
test
mov
in
shlb
cli
cmp
xor
jmp
dec
dec
mov
dec
ss
les
xchg
dec
pop
ljmp
sub
xor
lret
out
addr16
ljmp
or
cmp
movsl
arpl
ret
xchg
test
sti
push
test
inc
jo
xchg
out
xchg
cmp
pop
sub
cmp
rcll
ret
jns
adc
pop
jb
pop
sub
adc
push
mov
icebp
insl
jae,pt
xor
leave
sub
lock
cmpsb
loop
xchg
mov
addr16
push
aaa
inc
sbb
into
cmc
xor
cmpsl
mov
add
cmp
sub
outsl
push
mov
adc
push
push
out
mov
push
xchg
xchg
aas
xor
insl
sbb
fidivs
mov
cmp
cmp
lods
nop/reserved
add
je
leave
fwait
iret
mov
test
sbb
and
cs
and
int
xchg
mov
inc
pop
or
stos
fidivrs
inc
addr16
cmpsb
sbb
loop
lcall
mov
and
inc
and
adc
add
scas
jbe
xlat
aaa
sarb
test
repnz
push
dec
pop
sti
pop
inc
dec
jle
xor
aam
repz
sub
pop
shll
pop
mov
fildl
and
xchg
aad
push
xor
mov
xchg
or
aad
aas
pop
shlb
push
mov
dec
fwait
das
loop
inc
or
dec
pop
arpl
mov
int
leave
in
jg
xchg
mov
dec
fildll
inc
lahf
or
cld
test
scas
jns
push
inc
sub
fmull
stos
orb
mov
iret
in
pop
mov
ja
jp
adc
push
mov
clc
cmpsb
push
jae
add
loopne
insl
clc
repnz
sub
mov
or
jp
jo
pop
lret
cmp
shrb
dec
pop
adc
add
and
cld
dec
orb
out
mov
out
xor
mov
std
loop
popa
push
out
push
in
jbe
cwtl
andb
sbb
int3
or
aam
cmc
push
cmpsl
add
and
add
sub
stos
jge
hlt
shl
pushfw
lcall
test
push
arpl
out
cmp
mov
fisttpl
int
clc
fcompl
push
or
xlat
fdivrs
es
sar
jne
mov
xor
mov
mov
jae
repz
sub
sti
add
call
iret
xor
sub
mov
cld
rep
ret
sbb
les
inc
shl
pop
xchg
adc
arpl
outsb
dec
xor
cmp
in
inc
mov
jecxz,pt
pop
add
cwtl
in
push
dec
jno
sub
push
nop
js
cli
stos
arpl
mov
mov
movsb
and
or
mov
jnp
fmuls
addr16
scas
test
jl
fwait
shrl
adc
xchg
jns
sub
pop
adc
cmpsl
xchg
out
jae
mov
jno
jle
jp
push
fistl
cs
sub
mov
dec
aam
add
dec
sahf
lret
lcall
ret
or
pop
sub
push
cld
dec
in
xchg
scas
jmp
mov
and
scas
jecxz
jl
mov
dec
sub
mov
cmc
xchg
cmc
add
xchg
mov
fists
ret
std
mov
push
xor
sub
mov
mov
inc
inc
adc
mov
testl
mov
pushf
imul
cld
cmpsl
fimuls
push
jns
push
dec
push
dec
mov
mov
lods
dec
push
inc
mov
in
cmp
mov
mov
call
repz
sub
or
sti
fistpl
pop
lret
mov
push
into
mov
pop
scas
push
sub
cltd
mov
push
inc
jg,pn
and
push
jg
xor
sti
shlb
bound
incb
mov
cmpsb
mov
mov
call
test
popa
in
adc
loop
pop
bound
cmc
clc
lret
pusha
pop
rcr
mov
int3
nop
mov
mov
js
scas
mov
lods
mov
ret
or
sti
sbb
iret
sahf
xchg
std
push
adc
dec
sahf
popa
and
add
sbb
jmp
dec
mov
stc
lea
dec
loop
inc
mov
lea
pusha
icebp
sbb
mov
sahf
dec
shrl
sub
in
das
xchg
call
cltd
scas
and
icebp
aas
adc
aaa
iret
int3
fistpl
cs
les
xchg
and
out
mov
sub
push
push
stc
fcmovne
xor
ja
push
cmp
scas
fisubs
mov
int
xchg
sti
imul
inc
mov
xchg
jne
sub
lret
or
xor
out
push
jo
fimuls
ds
js
and
jl
jno
add
pop
movsb
mov
dec
scas
in
fwait
dec
hlt
cmc
cmpsb
repnz
push
mov
daa
test
fsubrl
sarl
cmp
cwtl
push
pop
ja
mov
and
enter
cmpl
mov
mov
xlat
ret
jb
ds
push
pop
aaa
xor
ds
inc
jmp
imul
mov
outsl
fcompl
dec
sbb
addb
iret
cmp
mov
rcll
idivb
jg
push
push
popa
push
loop
sti
add
fmuls
xchg
and
outsl
aad
mov
mov
dec
push
stos
jg
inc
test
out
pushf
mov
and
jecxz
test
lock
inc
rclb
or
std
or
mov
lcall
cmp
pop
les
xchg
jno
cmc
push
xchg
cmpl
xchg
xchg
jo
shl
lods
lods
stc
ss
xor
cmp
dec
aad
pop
mov
mov
xchg
and
aad
add
or
arpl
repz
mov
js
in
mov
lcall
mov
lods
les
stc
mov
ret
call
mov
jns
mov
out
cwtl
insb
sbb
mov
dec
cmp
je
sbb
add
dec
push
mov
hlt
jecxz
xor
dec
outsb
xchg
aad
mov
push
lcall
mov
inc
fidivl
adc
pop
push
test
rol
ljmp
and
inc
stos
lcall
ja
push
jp
and
push
sub
ret
dec
outsb
cwtl
jmp
inc
jae
stos
pop
je
lock
cmp
cmp
sbb
stos
out
sar
inc
rcrl
inc
imul
fldt
mov
xchg
lea
mov
jno
imul
push
popa
aad
dec
add
or
or
je
stc
jmp
je
aas
loopne
mov
inc
out
or
fisubrl
ss
xchg
add
lcall
adc
and
cltd
rclb
adc
push
outsl
clc
shr
push
ja
movsl
add
mov
movsl
mov
mov
sub
mov
cs
addr16
test
stc
cld
loop
xor
mov
cwtl
jo
xchg
and
inc
pop
add
lock
data16
mov
cmp
scas
pop
mov
mov
fcomps
cltd
sbb
push
in
in
sti
cmc
ss
fiaddl
xchg
call
test
and
test
in
or
push
or
ss
or
test
pop
sbb
cli
dec
vpand
vrsqrtss
cmp
cmp
mov
rorl
aam
lock
movsl
add
insl
push
dec
pop
aaa
scas
jae
mov
shlb
sub
rorb
push
jg
out
mov
push
inc
lret
inc
ret
and
push
mov
mov
rol
fdivrs
ds
cmc
dec
inc
testb
repnz
and
notb
outsl
add
rcr
mov
imulb
test
jae
iret
stos
aad
bound
into
jle
repz
or
sbb
mov
and
inc
mov
pusha
mov
flds
cmp
lock
add
xor
pop
rolb
jecxz
mov
cwtl
pop
or
pusha
xchg
lods
mov
clc
mov
movsl
add
imul
or
or
out
es
pop
dec
adc
jecxz
inc
cltd
pop
or
mov
or
or
push
shlb
fcomps
or
nop
lret
xor
pop
or
and
mov
stos
push
pop
daa
cmp
mov
stc
in
add
insb
fiadds
mov
dec
jmp
dec
push
mov
test
out
ljmp
mov
ror
mov
jb
cmpb
cli
xor
sub
xor
jno
sbb
mov
mov
xor
mov
js
test
pop
ret
and
pop
cmp
mov
lcall
fiadds
shrl
outsl
sub
ss
or
dec
jae
faddp
outsl
lods
cmpsl
not
xchg
scas
push
xchg
clc
xchg
fisttpll
cli
xor
and
push
rclb
test
icebp
repz
or
push
sbb
pop
fdivrl
mov
sbb
das
sahf
sbb
mov
mov
filds
enter
lret
or
and
add
and
jge
and
add
scas
emms
sti
push
enter
or
nop
mov
cmp
popa
add
dec
cmp
push
sub
cmpsb
pushf
out
xor
push
jmp
or
daa
sub
in
sbb
xchg
arpl
xor
xchg
mov
mov
sub
loopne
ljmp
dec
in
aam
lahf
or
jmp
cld
shl
ret
pop
adc
lret
jo
sub
jg
ljmp
inc
lahf
cli
cmp
pop
jle
pop
mov
test
xor
mov
jle
rcrb
mov
and
mov
cmp
pop
xchg
jbe
in
cli
xchg
call
das
add
cld
jecxz
cmp
dec
jmp
insb
inc
decb
icebp
lret
cmp
jmp
inc
int3
stc
nop
jb
cmc
out
pop
cmc
imul
jge
out
stos
mov
mov
in
push
pop
sti
or
lods
xor
cmp
mov
push
shrb
xlat
add
jle
andl
sbb
cmp
ret
aas
test
cmc
call
ret
inc
popa
push
lret
xor
sub
ss
in
idivl
mov
es
bound
pop
loopne
push
adc
pusha
cmp
rol
xchg
xor
in
std
mov
iret
cld
sbb
ljmp
mov
cmp
xchg
lcall
outsl
pop
scas
sbb
enter
mov
inc
testb
idivb
adc
out
and
fidivs
sub
mov
ss
pop
or
ret
shlb
hlt
and
fsts
femms
jno
jl
sub
in
fwait
or
inc
pop
daa
cs
sbb
xor
lods
pop
gs
jp
in
add
into
cmpb
mov
push
push
pop
nop
dec
mov
negl
lfs
mov
inc
sub
push
push
xor
stc
ret
cmpsb
xor
pop
add
lock
vminsd
mov
xchg
cmp
imul
cmp
ds
in
rclb
insb
test
clc
ret
cmp
es
inc
xchg
out
xchg
jns
dec
imul
inc
outsl
xchg
mov
jne
dec
add
insb
xchg
mov
loope
mov
add
dec
ss
stc
ret
pop
mul
xor
sub
lret
xlat
aad
or
push
es
fistps
test
or
sbb
or
cmp
aad
and
xor
shlb
fcmovb
and
push
lahf
stos
addr16
mov
and
pop
gs
push
cs
dec
aam
jp
jge
loope
cmpsl
sub
jo
mov
push
ret
push
test
lcall
xor
cmp
mov
js
lock
mov
push
push
ds
fcompl
cmp
xchg
ja
orb
insl
cmp
fldcw
sub
and
fildll
mov
std
push
dec
outsb
add
push
inc
scas
dec
loopne
fsts
rol
push
call
xor
out
test
fsub
adc
aas
imul
adc
test
jge
lods
lahf
lods
mov
add
jo
fwait
test
mov
in
sub
add
bound
call
out
icebp
sti
fnstsw
nop
int3
gs
cs
push
stos
out
pop
aaa
or
inc
mov
inc
xchg
ret
insb
adc
loope
test
sub
mov
mov
xlat
movsl
shlb
sbb
into
mov
imul
lds
shl
pop
movsb
pop
push
lods
pop
or
popa
pop
or
or
pop
lahf
jno
mov
stos
dec
sbb
sbb
in
data16
xchg
fisttpl
dec
or
adc
dec
adc
sbb
push
je
or
sbb
pop
and
es
fisubl
xchg
or
pop
inc
sbbl
xor
jnp
subb
mov
mov
bound
dec
sub
out
shrb
mov
push
dec
adc
fs
and
sbb
cmp
sub
jns
lcall
cli
rclb
inc
cltd
lret
lahf
jae
pusha
dec
jae
and
loop
xchg
test
ficoms
jp
imul
pop
repz
out
imul
sbb
lret
inc
mov
mov
iret
bound
iret
test
and
push
fidivrl
jge
jae
cltd
sbb
aam
fiadds
stos
cmp
fsubrs
filds
loopne
dec
cli
jge
std
pop
add
xor
dec
push
lea
shl
or
bound
cmp
jmp
leave
sti
push
loope
xor
push
gs
inc
pop
push
nop
sbb
sub
sbb
movsl
jno
jp
push
shl
dec
mov
rcl
mov
sbb
sbbl
movsl
fdivl
fidivrl
mov
mov
call
pop
add
and
mov
mov
xor
cmp
leave
mov
sbb
jnp
mov
mov
jbe
push
mov
mov
aad
dec
mov
jmp
push
divb
repnz
xchg
iret
in
cmpsb
es
stos
imul
dec
cmpsl
addl
enter
hlt
stos
jb
mov
fcomi
jp
pusha
mov
in
cmpsb
nop
lahf
xor
jmp
mov
push
add
xchg
add
subb
push
mov
push
cmp
jp
test
sahf
das
jmp
mov
cmp
or
add
in
cs
aad
dec
mov
mov
sti
mov
push
rcrl
fidivs
pop
mov
cli
or
sbb
sub
adc
pop
lods
jmp
push
rcrl
lock
les
and
adc
testl
inc
xor
aas
dec
rorb
mov
and
arpl
xorb
mov
pop
test
outsl
or
mov
push
pop
push
nop
in
dec
arpl
ret
sbb
std
std
xor
sub
cmp
dec
sub
addr16
mov
cld
fiaddl
pop
inc
es
rclb
pop
mov
jmp
jae
mov
cwtl
pop
mov
test
repz
add
fldenv
sbb
les
cmpsl
xchg
jp
mov
in
push
inc
mov
jo
mov
repz
xchg
dec
out
pop
int
out
push
movsl
xor
mov
dec
enter
add
repz
cmp
mov
shl
test
fsubl
sbb
push
xchg
cmp
enter
pop
jge
mov
adc
loopne
aad
xchg
add
shl
mov
sbb
mov
pop
and
sbb
dec
cmp
add
sti
mov
xor
mov
cmp
jne
movsbw
mov
sub
mov
xor
mov
cmp
je
mov
xor
mov
sub
add
jmp
mov
mov
mov
lea
mov
mov
mov
xor
add
mov
mov
mov
xor
add
pop
cmp
jne
mov
xor
mov
add
imul
mov
pushl
jmp
mov
add
mov
mov
mov
movsbw
mov
sub
mov
xor
mov
cmp
jne
mov
mov
mov
jmp
mov
cmp
jne
push
pushl
pushl
pushl
pushl
call
pop
pop
leave
ret
push
mov
sub
andl
mov
inc
mov
cmpl
jne
pushl
pushl
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
adc
push
movl
cmpl
je
cmpl
jne
push
call
xor
xor
dec
mov
jmp
movzwl
sub
mov
push
push
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
push
push
pushl
pushl
pushl
push
pushl
push
push
call
jmp
and
xor
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
push
pushl
call
cmpl
jne
mov
inc
mov
jmp
mov
or
mov
push
and
mov
add
pop
addl
push
call
push
andl
push
adcl
push
xorl
push
push
addl
push
push
call
xorl
push
addl
push
andl
push
notl
push
orl
push
push
call
dec
movl
jne
mov
mov
mov
cmp
movl
jne
orl
movl
addl
pushl
sbbl
pushl
pushl
call
movl
cmpl
je
cmpl
jne
pushl
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
andl
mov
inc
mov
cmpl
jne
push
pushl
push
push
pushl
call
cmpl
jb
mov
sub
mov
and
mov
or
mov
movl
lea
xor
mov
sbb
lea
andl
mov
inc
mov
cmpl
jne
push
call
cmpl
jb
sbb
mov
andl
mov
inc
mov
cmpl
jne
push
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
and
mov
sub
mov
mov
mov
not
mov
xor
movzbl
add
mov
adcl
add
movl
mov
mov
mov
movl
cmp
jne
andl
xor
or
inc
mov
cmpl
jne
pushl
call
cmpl
jb
mov
mov
mov
xor
add
mov
mov
xor
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
movl
mov
mov
mov
xor
xor
add
mov
xor
xor
add
lea
cmp
ja
mov
xor
lea
push
mov
xor
lea
push
mov
pushl
call
mov
xor
lea
mov
mov
xor
xor
add
mov
xor
lea
cmp
jbe
mov
mov
mov
mov
mov
mov
mov
sub
xor
mov
mov
mov
cmp
jne
lea
mov
lea
mov
mov
test
je
mov
mov
lea
jmp
mov
cmp
je
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
pushl
mov
pushl
add
mov
mov
pushl
call
mov
mov
mov
jmp
mov
mov
xor
add
cmp
jne
mov
mov
mov
xor
add
cmp
jne
push
mov
xor
add
push
push
pushl
pushl
call
pushl
pushl
call
mov
xor
add
mov
mov
xor
add
mov
lea
mov
lea
mov
mov
test
je
movl
movl
movl
movl
call
mov
mov
lea
push
pushl
call
mov
push
add
push
lea
push
call
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
or
push
push
and
push
inc
mov
xor
mov
add
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
push
push
pushl
push
call
jmp
mov
sub
mov
sbb
mov
mov
andl
mov
inc
mov
cmpl
jne
push
call
cmpl
jb
movl
cmpl
je
cmpl
jne
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
inc
mov
mov
movl
sbbl
mov
andl
mov
inc
mov
cmpl
jne
push
pushl
pushl
pushl
call
cmpl
jne
xor
xor
inc
mov
cmpl
jb
xor
andl
add
mov
sbb
mov
sbbl
mov
add
mov
mov
sbbl
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
call
cmpl
jne
mov
inc
mov
jmp
and
push
pop
sub
add
movl
mov
movl
or
mov
xorl
mov
sbbl
mov
mov
movl
cmpl
je
cmpl
jne
pushl
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
call
jmp
mov
orl
xor
add
mov
lea
mov
xorl
mov
xorl
xor
add
adcl
mov
lea
adcl
push
adcl
mov
subl
xor
addl
add
xorl
push
movl
mov
andl
push
pushl
call
sub
mov
adc
mov
xorl
mov
mov
adcl
xor
addl
mov
add
movl
jmp
andl
mov
inc
mov
cmpl
jne
push
push
push
call
cmpl
jb
andl
xor
add
inc
mov
cmpl
jne
pushl
push
push
call
cmpl
jb
adc
lea
sbbl
mov
mov
mov
sub
sub
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
push
call
jmp
sub
xor
mov
andl
mov
inc
mov
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
movzwl
sbb
mov
or
mov
mov
movl
mov
movl
mov
xor
add
mov
mov
xor
add
mov
movl
movl
mov
mov
xor
add
cmp
je
mov
xor
mov
sub
add
mov
mov
xor
add
imul
cmp
ja
mov
mov
mov
sub
xor
xor
add
div
mov
mov
mov
xor
add
cmp
jbe
mov
xor
add
mov
mov
mov
xor
add
imul
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
add
movl
mov
mov
mov
movl
movl
mov
mov
xor
add
jmp
movl
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
jmp
cli
jl
popa
fs
repz
push
and
aas
push
mov
int
bound
hlt
pusha
in
out
pushf
push
pop
push
mov
bound
mov
sub
sub
ljmp
inc
jns
pop
loop
inc
xor
push
fwait
inc
in
in
lcall
test
mov
xchg
clc
fcmovu
cmpsl
jecxz
pop
jae
xchg
push
in
xor
bswap
pop
pop
sub
and
movq
rep
push
addr16
insl
insl
out
pop
add
push
jbe
lret
cmpsl
xor
jmp
pop
lods
dec
sub
mov
xchg
jmp
pop
push
add
cmp
inc
mov
mov
pop
pushl
mov
in
xor
cwtl
pop
fcomi
repnz
subb
mov
sub
lahf
push
lea
mov
add
mov
sbb
push
mov
aas
pusha
inc
jg
test
mov
loope
xchg
jmp
data16
sbb
cs
xchg
dec
xor
das
outsb
std
mov
jns
pop
incl
in
or
pop
sti
and
call
int
jge
sub
or
push
clc
fistpl
scas
adc
or
loop
sahf
testl
xor
and
jmp
push
mov
shl
jo
ss
pop
mov
push
add
jl
sbb
add
scas
es
sbb
leave
mov
xor
push
ret
push
in
adc
inc
inc
dec
mov
sub
and
add
imul
test
cltd
clc
mov
cltd
mov
ret
insl
testb
es
aas
jg
loop
test
add
aaa
rorb
pop
in
dec
dec
mov
lods
fadds
bnd
push
mov
arpl
andb
adc
fists
mov
fimuls
mov
fstpt
sti
rcll
adc
int3
mov
mov
popa
outsl
jp
add
mov
cmpsl
andb
aad
pop
xchg
adc
in
js
xchg
or
std
mov
mov
pop
xor
push
in
push
idivb
dec
fmull
in
orl
loopne
jno
les
and
roll
inc
inc
and
push
jle
dec
insb
jne
xor
inc
lods
push
cmp
arpl
sbb
shlb
mov
pop
adc
cmpsl
inc
push
pop
mov
xor
fwait
dec
daa
jge
fsubrl
outsb
fstl
test
add
jne
fcoml
mov
fwait
aas
cmp
add
sub
nop
arpl
push
jns
add
push
ret
pop
inc
mov
cli
jmp
aas
mov
xchg
pushf
ja
and
daa
jle
push
ja
lock
jnp
test
pushf
jb
add
rcr
and
pop
adcb
les
jecxz
pushf
out
xor
mov
cmp
rcll
int3
jge
movsl
lods
sahf
mov
mov
call
xchg
sbb
or
inc
xchg
jns
outsl
jecxz
lea
ja
into
sub
lods
pusha
cwtl
push
popa
or
enter
add
mov
popa
adc
xchg
pop
cli
in
pop
lea
js
jb
and
insb
inc
shll
push
sbb
inc
mov
out
mov
xchg
stc
sub
jbe
pop
outsb
fisubrs
cmp
cmp
cmc
lock
js
and
fmuls
jo
and
mov
jne
enter
inc
inc
mov
push
cmp
and
mov
mov
cs
pop
loopne
inc
jg
mov
mov
dec
or
mov
arpl
mov
ret
inc
cmpsb
sub
rcr
sub
movsl
cmovl
test
push
adc
inc
mov
inc
push
and
mov
dec
dec
add
stos
int3
and
ret
jae
mov
xchg
in
or
sbb
push
ja
lods
cmpsl
jbe
or
movsl
xor
push
jne
int
mov
or
into
lret
xlat
shl
stos
data16
or
out
aad
fdivl
sbb
loop
and
mov
pop
mov
lret
and
sarb
mov
iret
dec
adc
xchg
int3
sub
dec
js
or
xlat
xor
das
jg
xor
leave
jge
imul
or
jp
and
je
clc
lahf
cli
mov
inc
psubq
addr16
xchg
adc
scas
mov
mov
mov
cltd
pop
rep
aaa
xchg
aad
lods
dec
cltd
jbe,pn
enter
fisttpl
mov
adc
push
arpl
adc
pop
stos
fidivl
xor
lret
sbb
std
or
clc
mov
mov
pop
xchg
cmp
jbe
divb
xchg
mov
mov
jno
mov
test
pop
pop
jge
ss
push
test
xchg
gs
xchg
stos
pop
pop
into
aad
cmp
dec
sbb
sti
xor
cmp
cmp
jbe
sahf
sbb
adc
add
add
std
pop
jl
out
jge
call
dec
lcall
mov
dec
adc
out
inc
push
shrb
mov
dec
ja
xor
in
int3
adc
in
xchg
add
mov
push
insb
jb
jp
in
or
xor
and
std
cmp
lret
and
push
pop
into
or
dec
jo
test
push
jno
rcl
stc
add
cmp
int
ja
sub
mov
adc
mov
push
fs
ja
ljmp
sbb
add
push
shlb
jb
mov
push
dec
loopne
add
lret
or
lods
inc
push
rol
jmp
scas
hlt
jb
icebp
sbb
push
cmp
push
shrl
stos
push
shlb
aaa
lods
sti
stos
or
test
jae
mov
data16
out
push
jp
sub
sub
or
shr
jp
sbb
sti
or
xchg
xchg
jmp
dec
sti
dec
scas
sahf
inc
add
or
xlat
test
dec
sbbb
cli
inc
stos
or
mov
insb
inc
dec
jle
inc
mov
add
push
push
pop
rcrl
mov
icebp
fwait
imulb
mov
inc
cld
jbe
pop
pop
sbb
dec
inc
enter
push
aad
sub
and
push
pop
mov
jg,pn
jp
push
add
sahf
shlb
sbb
dec
mov
ror
mov
xchg
pop
lcall
xchg
adc
cmp
xchg
jp
inc
aas
icebp
mov
cmc
pop
xor
xor
jno
in
cwtl
punpckhdq
dec
xor
out
mov
xchg
test
cmc
aam
pshufw
inc
add
adc
ja
jnp
fdivs
fs
xchg
push
loope
mov
sbb
lea
jg
or
sbb
std
fcmovnu
mov
pop
adc
iret
clc
adc
les
mov
insb
xor
or
lret
leave
sub
xlat
jg
sub
adc
or
movsb
xlat
cmpsb
dec
pop
push
in
ds
push
scas
ret
mov
cmp
repz
lahf
ror
insl
js
xlat
pusha
jb
xor
cmp
and
push
scas
cmp
or
adc
stc
pop
andb
mov
inc
sub
loopne
add
aad
mov
psubusw
dec
push
pop
cltd
cltd
jae
inc
nop
fs
jb
pop
insl
sub
mov
test
scas
leave
dec
jp
mov
pop
cmp
aas
sar
bound
cmpb
ljmp
or
test
xchg
add
aaa
inc
push
imul
lock
jp
mov
ss
sub
and
mov
cmp
iret
jae
inc
js
std
out
pop
ret
or
pop
paddsb
repnz
scas
cmp
mov
enter
pusha
pushf
mov
popa
call
std
arpl
int
jnp
mov
loop
imul
push
fwait
mov
push
ss
hlt
dec
movsb
push
inc
pop
adc
adc
mov
and
pop
jmp
ss
arpl
pusha
and
in
dec
mov
add
jne
adc
mov
outsl
shll
aam
mov
inc
or
mov
lret
mov
addr16
dec
nop
xor
movsl
jmp
xor
or
mov
cmpsl
int
lods
mov
out
adc
mov
stc
sbb
and
sbb
push
xchg
stos
inc
xorb
xchg
cmp
adc
xor
mov
shlb
daa
lret
inc
jnp
push
les
addb
jle
mov
in
cltd
push
pop
call
inc
ljmp
fs
mov
lods
cmp
dec
cmp
adc
call
std
es
jno
loop
sub
popa
sub
fistl
and
mov
enter
sar
outsb
mov
data16
movsl
mov
dec
cmpsl
mov
test
sub
clc
jnp
mov
inc
aaa
cmovbe
out
scas
xchg
pop
test
icebp
lret
dec
and
imul
lcall
addr16
std
inc
lcall
lods
mov
scas
adc
arpl
test
scas
or
adc
mov
pop
pop
jae
pop
aaa
cmp
mov
mov
pop
and
cmp
xchg
test
add
dec
xor
addr16
lret
lea
daa
push
lock
cwtl
sbb
out
in
mov
es
fwait
inc
inc
mov
inc
int
test
jne
std
int
dec
clc
iret
jne
push
cs
xchg
jb
add
dec
jb
fstpt
adc
mov
or
add
mov
mov
cmp
jge
pop
jl
imul
cmpsb
xor
movsb
sbbl
adc
dec
add
fnstcw
jns
arpl
outsl
push
xor
popf
adc
std
out
aad
outsl
dec
mov
xchg
cld
aaa
dec
sbb
and
ja
or
add
add
stos
mov
mov
adc
fwait
stos
insb
sub
cwtl
dec
stos
lea
push
pop
cmp
dec
dec
or
in
pop
movsl
movsl
sahf
out
movsb
cli
ss
xor
jb
sbb
mov
add
sbb
ljmp
mov
dec
cmp
pop
adc
int
jbe
out
xchg
fucomip
inc
or
xchg
mov
mov
fdivl
mov
insl
jge
mov
outsl
lahf
mov
xor
cli
pop
fldl
xchg
jmp
aas
dec
add
outsb
sub
imul
shll
sti
icebp
adc
add
adc
rcr
arpl
dec
dec
mov
sub
stos
lret
cmp
fs
addr16
shl
sub
xor
aad
aam
pop
fcmovnbe
xor
pop
mov
sti
fldcw
jle
mov
lds
fstl
insl
pop
mov
push
cmp
pop
fcomip
aam
xchg
mov
inc
dec
jle
xchg
in
es
in
imul
scas
popa
mov
in
push
stc
repz
in
mov
stc
jge
xchg
cmp
mov
xor
hlt
ficompl
ljmp
pop
xor
fadd
test
mov
xchg
dec
icebp
xchg
mov
mov
stos
in
pop
add
xchg
orl
xorb
orb
jae
cmp
addl
fistl
jno
add
mov
mov
adc
cmp
cmpsb
xor
mov
dec
jmp
jmp
pop
adc
dec
dec
cmpsb
xchg
fcmovb
or
or
ljmp
add
out
imul
inc
out
xchg
sahf
fisubl
inc
adc
lahf
jnp
jge
cmp
adc
pop
stos
ss
loope
dec
cmp
sahf
scas
or
lds
push
lea
mov
enter
stos
aad
adc
fimuls
push
inc
push
ljmp
mov
cmc
jmp
pop
adc
mov
mov
mov
sbb
adc
sbb
mov
pop
scas
orl
sub
not
sub
lods
mov
cmpsl
mov
mov
gs
enter
mov
mov
rcrl
and
dec
jle
arpl
cmp
add
cmp
mov
pop
mov
mov
xchg
sub
pop
and
or
jno
cmp
sarl
nop
xorb
aas
repnz
inc
mov
jo
mov
mov
popa
xchg
dec
dec
cmp
xor
ja
cmp
insl
shll
dec
iret
adc
jnp
lea
jnp
ret
cmp
incl
subb
cmp
push
in
into
add
imul
insl
in
jl
ror
cmp
xor
xchg
mov
loopne
in
cli
xchg
xchg
outsl
jae
scas
clc
cmovns
xchg
mov
jae
mov
cmp
inc
push
mov
loope
sbb
jo
clc
loope
xchg
jb
jge
shrl
int
mov
sahf
aad
push
add
or
xchg
mov
fnstsw
aaa
je
xchg
dec
push
xor
adc
mov
jnp
and
cmp
loopne
out
arpl
sbb
mov
lahf
stos
xchg
cltd
jnp
fisttpll
dec
sub
sbb
xor
in
xor
arpl
inc
dec
in
pop
push
sub
xor
adc
insl
in
jbe
cmc
pop
int3
movsl
call
les
cwtl
mov
std
mov
mov
fstl
sbb
js
inc
mov
lret
rcrl
lret
ret
jnp
cwtl
lret
pop
mov
sbb
gs
dec
subl
lods
mov
mov
push
mov
cwtl
es
mov
pop
or
push
xchg
loope
mov
sahf
push
mov
cmp
hlt
dec
mov
cmp
push
cltd
sahf
cltd
inc
outsb
mov
sbb
stc
or
sbb
in
mov
rclb
ljmp
lcall
lods
xor
sarb
outsb
adc
popf
dec
ret
les
aas
cltd
mov
jg
and
sbb
xchg
jmp
test
adc
dec
cmp
jnp
jg
jmp
sti
sub
loopne
cmpsb
cltd
lret
ficompl
pop
add
mov
gs
icebp
clc
mov
lds
icebp
push
les
or
mov
lret
sub
fidivrl
jge
iret
mov
xchg
mov
and
fndisi(8087
push
jb
cmp
mov
test
adc
out
popa
sub
pop
arpl
idivb
or
icebp
or
pop
hlt
gs
mov
pop
into
andl
test
js
pop
outsl
jne
add
test
faddl
insb
idiv
das
sub
and
test
cmpsl
cmpsb
pop
int3
mov
adc
push
std
mov
pop
xchg
lret
shlb
push
push
pop
push
pop
aas
pop
inc
out
pop
jp
rolb
cmp
mov
inc
shrl
jb
push
pop
cmp
out
pop
test
fisubs
lea
out
add
adc
sbb
sub
lahf
fmuls
dec
ss
jnp
cmpsl
pop
dec
leave
scas
mov
movsl
addr16
insb
sbb
dec
in
mov
mov
dec
jmp
insb
int
mov
adc
jp
inc
repz
out
loopne
fwait
divl
lock
mov
adc
inc
pop
arpl
dec
std
int
or
scas
sahf
rol
je
jmp
dec
cmp
cmpsb
outsb
pop
clc
mov
cmp
sahf
ror
nop
jno
mov
xchg
insl
push
inc
loope
in
jmp
push
mov
push
popf
xor
push
insb
sub
sahf
test
xchg
xchg
pusha
sub
cld
cs
cmc
add
mov
repnz
movsb
addr16
js
cmp
fsub
outsl
cld
out
mov
fidivrs
sahf
add
in
xchg
mov
in
dec
mov
nop
push
xchg
sbb
or
mov
out
ss
lock
mov
or
push
insl
icebp
sbb
pop
iret
sbb
mov
pop
call
fiaddl
fistpl
hlt
xorb
int
rorl
insb
iret
cwtl
mov
fs
or
in
cmp
dec
xchg
dec
xor
daa
fs
mov
out
dec
pop
out
movsl
xchg
repz
pop
push
mov
int
push
dec
pop
lcall
mov
std
scas
es
outsl
pusha
lods
jl
add
mov
jg
movsb
or
adc
mov
test
scas
dec
sub
lret
sbb
iret
aam
xor
sub
lea
dec
pop
xor
fcoms
xor
push
in
adc
xchg
or
out
imul
pop
dec
mov
shr
jno
stos
push
test
stc
inc
push
dec
inc
rclb
lock
add
xor
hlt
lods
cli
lret
add
add
inc
enter
mov
faddp
pop
cmc
mov
iret
sbb
out
loope
dec
sbb
mov
nop
jae
jae
or
pop
sub
mov
inc
gs
and
mov
and
jmp
dec
cwtd
hlt
mov
push
nop
cli
aaa
pop
nop
mov
cwtl
jo
mov
insb
xor
dec
mov
mov
fistl
add
cmp
dec
mov
dec
pop
sub
or
movsb
aas
lret
fcompl
push
shl
cld
xor
mov
int
loop
or
loop
fidivl
jge
into
call
push
sbb
jg
dec
sub
pop
loopne
pop
repz
fists
adc
scas
mov
mov
lds
jns
sub
xor
shll
mov
or
dec
xchg
test
sub
push
pop
popa
mov
jbe
push
rcrl
push
mov
ret
or
shll
add
nop
addr16
cmp
les
shrl
cld
data16
push
cmp
lret
fs
sti
pop
loope
mov
push
std
dec
sbb
jns
pop
add
int
sbb
inc
sbbb
and
js
inc
lcall
movsl
sbb
add
sub
sub
or
xchg
je
ds
cmp
or
bound
sti
and
cmpsl
push
adc
out
push
lea
inc
mov
dec
inc
push
jle
push
movsl
lock
cmpsl
pop
mov
inc
cmp
adc
xor
adc
pop
xor
mov
sbb
and
inc
mov
stc
shll
sbb
xor
jbe
loope
and
adc
fstps
cld
pop
cmpsl
adc
push
icebp
aaa
ds
mov
into
aam
stc
insl
aad
jecxz
in
fwait
dec
fs
inc
dec
xchg
out
sbb
movsl
inc
and
mov
fisttpl
or
and
out
cmp
test
cmc
pop
pushf
xor
adc
decb
add
xchg
and
pop
inc
daa
mov
outsl
sub
outsb
xor
imul
sbb
mov
xchg
or
and
jl
jle
or
pop
ret
shr
hlt
inc
jecxz
jle
out
jge
rcrb
mov
push
sarb
lcall
js
xchg
mulb
stos
jne
mov
sbb
in
adc
loopne
stos
icebp
mov
jecxz
add
push
mov
push
mov
sbb
insb
jno
jle
xchg
xchg
fstps
stc
mov
out
cmp
les
mov
aaa
mov
sbb
cmp
cmp
mov
xchg
aad
into
push
out
pop
into
dec
push
jae
out
cltd
rorl
sahf
out
adcb
jns
mov
test
sbb
imull
popa
xor
dec
adcl
mov
in
rcll
cltd
std
mov
mov
stc
dec
mov
ret
dec
add
fs
hlt
and
test
sti
scas
push
dec
jecxz
test
mov
mov
mov
adc
mov
ja
cmp
stos
xor
xchg
xor
bound
push
cli
xchg
aad
cmp
ljmp
jp
sub
push
icebp
mov
lds
pop
scas
adc
aad
add
pop
movsl
dec
xor
sub
stc
repz
repz
push
sarb
out
mov
push
popf
std
call
inc
sub
cwtl
sub
sub
jns
icebp
int3
js
pop
lahf
call
cmp
xor
insb
sbb
inc
mov
sub
sar
and
xchg
imul
sub
jmp
mov
out
push
inc
add
std
adc
dec
je
or
mov
lahf
ret
ret
dec
fbld
imul
mov
dec
sbb
cwtl
push
cwtl
or
sub
hlt
out
push
subl
push
mov
xchg
adc
mul
aaa
xchg
and
push
mov
xor
dec
sahf
pop
fisubrl
stos
push
iret
cmpsb
cmp
add
movsl
cld
xorl
jmp
inc
push
sub
sbb
lretw
ja
jp
dec
pop
and
call
dec
scas
mov
or
scas
pop
sar
add
mov
movsl
lock
push
lret
xor
jp
add
mov
jne
scas
jb
into
add
inc
xlat
popa
jg
lds
push
jns
mov
gs
fisttpll
add
outsb
mov
aad
jne
add
out
xchg
hlt
mov
lock
sub
in
sub
add
outsb
test
dec
mov
mov
imul
roll
sub
lcallw
sti
push
jmp
cmp
pop
sahf
sbb
xor
sbb
into
lret
mov
out
cld
xchg
mov
loope
cmp
push
pop
popf
cli
sub
mov
xlat
decb
loope
jnp
jl
or
cmpsl
ja
add
pop
divb
testb
xor
lds
add
adc
push
nop
dec
adc
cmpsl
sbb
dec
rolb
mov
cmp
mov
in
pop
scas
pop
das
pop
cmp
push
insb
cmp
leave
in
roll
add
insb
leave
push
sbb
jmp
fs
scas
push
mov
mov
push
pushf
push
enter
pop
sub
sbb
gs
pop
mov
inc
ds
mov
xchg
test
pop
xor
add
cli
mov
xchg
scas
adc
cld
test
lds
push
cld
mov
cltd
dec
roll
lcall
insl
add
mov
minps
mov
mov
sub
ja
xchg
je
inc
sbb
cmpsb
testb
adc
sub
inc
fisttpl
out
lds
lods
inc
add
icebp
lods
aad
aas
leave
push
lret
das
stos
aam
add
or
pop
lea
fisttps
mov
xchg
fadd
ret
inc
hlt
adc
addr16
jl
add
xor
fcomi
dec
adc
xor
sahf
push
push
push
xor
sti
push
hlt
mov
add
push
mov
mov
aas
adc
mov
pop
test
lcall
push
scas
loop
jno
not
call
mov
mov
aad
call
subb
andb
loopne
push
call
dec
mov
and
popf
mull
loopne
arpl
into
adcl
jl
jecxz
and
push
cld
adc
es
int
mov
sub
test
xor
out
or
inc
mov
adc
xor
or
rorl
sarb
popa
aas
shll
jnp
into
xchg
nop
mov
hlt
mov
cmp
sub
daa
ss
popf
pusha
push
xor
cmp
push
mov
leave
mov
jmp
adc
sub
js
mov
push
mov
push
push
cmp
call
aad
xchg
add
and
scas
test
cltd
mov
mov
je
push
mov
lea
aad
test
push
frstor
mov
out
rolb
ss
push
faddp
adc
pop
insb
jo
pop
xorl
nop
add
pop
or
roll
mov
lock
dec
stos
or
lods
call
cmpsb
mov
lcall
movsl
inc
inc
xchg
mov
or
inc
push
sub
sub
push
and
add
lahf
and
mov
push
jg
enter
xor
and
mov
push
xchg
jae
inc
adc
or
cmp
push
sbb
rcrb
mov
or
sub
mov
stc
xchg
mov
enter
call
rolb
lea
mov
aaa
xor
shrl
arpl
mov
sub
cmp
jo
mov
lds
xchg
mov
rcrl
push
mov
push
sti
xchg
xchg
fldenv
xchg
or
adc
shrl
shlb
movsb
push
fidivrl
fbld
stos
rorl
add
mov
mov
pop
scas
jge
sub
mov
mov
adc
aaa
jg
sbb
cmp
mov
movsb
xor
jns
cmp
push
lea
mov
stc
shll
xchg
cmp
fidivrs
or
setbe
pop
jmp
outsl
pop
ja
out
pop
ret
pusha
insb
ja
mov
inc
lahf
pop
or
mov
push
sbb
xchg
shrb
cmpsl
fisubrs
pop
test
ds
stos
mov
ss
data16
in
and
jl
adc
inc
popf
addr16
mov
mov
jecxz
loope,pn
pop
cmc
mov
or
loopne
pop
sbb
enter
xor
pop
inc
aam
xor
dec
and
xchg
xor
sbb
adc
sbb
call
dec
push
fmul
arpl
bound
pop
lcall
adc
aam
adc
leave
jecxz
adc
mov
sub
in
scas
mov
inc
mov
subl
test
andb
fbld
xchg
inc
and
notl
lods
jns
insl
dec
clc
repz
movsl
movsb
call
lret
jo
cmc
mov
jae
cmpsl
pop
call
pop
mov
pop
pushf
pop
test
jecxz
andl
sbb
inc
push
and
and
imul
iret
jp
aas
mov
addb
mov
int3
arpl
dec
cmp
lsl
shll
push
cmp
pushf
fildll
add
stos
in
stos
addr16
addr16
sub
or
push
loopne
cmp
mov
dec
cmp
loopne
fmull
and
daa
mov
dec
pop
and
push
mov
mov
ljmp
iret
xor
mov
inc
add
insb
adc
mov
mov
xlat
sahf
mov
mov
xorl
adc
jae
sti
cmpsb
push
rcll
push
dec
ljmp
sub
out
or
dec
cli
adc
adc
in
dec
xor
out
pop
pop
inc
lret
xor
mov
xchg
mov
sbb
xor
push
dec
into
lahf
js
sti
out
rcrb
lret
cmpsl
sub
sbb
scas
dec
xor
stos
inc
dec
sub
dec
xchg
and
sub
and
mov
cmp
scas
xchg
xchg
les
leave
repnz
dec
movsl
daa
dec
das
movsl
cwtl
std
sbb
ss
icebp
aaa
mov
in
lods
xchg
dec
insb
std
jo
fmul
jmp
jl
out
push
out
jno
push
inc
or
adc
sbb
jae
lods
push
mov
add
cmc
sub
fcoml
pop
test
pusha
inc
mov
faddl
popf
out
fdivs
fsub
in
inc
aam
cmc
mov
and
push
mov
push
sbbl
sub
mov
lea
xor
mov
jno
mov
sub
mov
add
cltd
das
or
outsb
and
ljmp
mov
push
imul
ds
movsb
jge
lds
into
outsb
inc
add
add
adcl
andl
inc
ljmp
loope
sbb
jno
and
adc
aaa
sub
sarl
enter
fwait
inc
leave
add
js
lcall
mov
adc
and
ficomps
call
xor
mov
dec
lcall
repnz
xor
or
inc
pop
mov
push
int3
mov
mov
lret
sahf
aaa
mov
stos
jns
pop
pop
nop
xor
nop
mov
je
xchg
popf
rclb
aaa
xchg
pop
mov
xor
inc
ret
pop
push
mov
popf
inc
scas
jno
or
add
fldcw
jp
stos
fistpll
jne
jns
pop
mov
lret
ret
fisubrl
fnsave
sub
add
pop
jb
mov
aaa
jl
xchg
xor
out
ret
nop
arpl
cwtl
push
adcl
cmp
push
add
cmp
mov
sbb
mov
outsl
fwait
jno
add
mov
lds
jle
into
jg
loope
test
add
cltd
sbb
push
push
dec
fpatan
mov
jecxz
inc
daa
xchg
mov
fnsave
push
add
cld
das
cltd
push
mov
cwtl
jp
sub
bound
dec
sub
fwait
mov
aad
dec
lock
repnz
sub
xchg
or
stc
dec
sbb
lahf
jge
cmp
mov
cmp
or
pop
sarb
jmp
int
xor
push
xor
jg
cld
mov
inc
and
ja
imul
rclb
rclb
cmpsb
push
or
int
cltd
cmp
push
jbe
mov
fiadds
xor
int
and
or
mov
cmc
dec
xchg
sub
push
bound
mov
sarl
stos
fiaddl
lcall
das
push
and
push
in
lret
fidivl
jp
rcll
clc
popf
or
adc
or
mov
imul
sub
mov
cmp
dec
push
jmp
jl
inc
mov
inc
sbb
xchg
popf
mov
jne
test
pop
dec
test
mov
leave
mov
fs
cltd
ret
and
fsubl
aam
outsb
jns
ljmp
pop
rcll
sti
mov
call
sub
xchg
xor
xor
push
fistpll
push
push
push
mov
jno
bound
stos
pop
stc
jno
and
jno
inc
cmc
xchg
sahf
jne
lods
jns
or
les
test
mov
testl
push
ret
xchg
shrb
rorb
dec
dec
add
xor
sarb
hlt
mov
imul
ja
adcb
mov
push
or
dec
fisubrl
retw
stc
mov
pop
sarb
dec
and
mov
dec
out
lods
jle
dec
out
inc
mov
jmp
arpl
mov
xchg
mov
and
cmpsb
mov
das
jnp
repnz
push
mov
adc
pop
notl
orl
sub
add
in
fcoml
fisubrl
sbb
fidivl
cwtl
loop
jo
fadd
or
add
dec
pop
jne
mov
mov
xchg
inc
push
inc
jle
addr16
pop
sub
mov
xor
add
imul
mov
mov
mov
mov
xor
xor
add
add
imul
add
mov
mov
mov
cmp
jb
mov
mov
xor
add
imul
mov
xor
add
or
mov
xor
add
mov
xor
add
mov
lea
jmp
mov
mov
xor
lea
mov
jmp
mov
mov
xor
lea
lea
xor
cmp
jne
mov
mov
mov
xor
mov
xor
mov
xor
mov
jmp
xlat
repz
xchg
mov
mov
jo
shll
pop
bound
mov
push
or
jmp
push
decb
push
inc
or
sbb
lods
data16
inc
ja
into
test
xor
and
jl
test
popw
aas
pop
push
mov
je
cmpsl
dec
inc
add
and
sub
or
ret
iret
adcl
stc
dec
in
pcmpeqb
aas
scas
sti
push
test
push
xchg
adc
dec
pop
xor
scas
lret
xlat
and
ds
lock
and
inc
mov
cmp
outsl
inc
sub
and
popf
adc
fstpl
test
dec
pop
lea
xchg
jp
push
in
shrb
test
xor
scas
scas
and
inc
testb
inc
ret
pop
xchg
fsts
pop
inc
test
repnz
and
stos
mov
repz
add
ret
outsl
int3
sbb
int3
or
jne
or
inc
jne
in
dec
dec
jecxz
pop
jl
xchg
outsl
and
stos
int3
clc
aam
mov
pop
dec
int
addr16
fisubl
imul
aad
push
inc
mov
call
hlt
inc
enter
or
jb
jbe
mov
insl
mov
xchg
aam
jecxz
lea
lods
enter
lock
mov
mov
cmc
mov
mov
mov
push
xor
js
push
inc
sti
scas
in
xor
jae
xchg
cltd
test
pop
daa
popa
insb
ret
lea
stos
shll
jg
cltd
out
loope
rcll
jns
xchg
xchg
repz
jb
jae
icebp
adc
enter
dec
movsb
sti
repnz
mov
xchg
sbb
xchg
lock
jns
scas
ret
sbb
cmp
xor
lods
ljmp
mov
ficomps
add
and
cmp
sub
movsb
pusha
xchg
xorb
aam
pop
lcall
adc
insb
pop
and
dec
popf
stos
mov
popf
pcmpeqb
cld
jmp
fdivr
fstl
mov
enter
push
inc
inc
fs
stos
push
xor
test
fwait
sbb
jl
jae
mov
fcoml
je
xlat
mov
xor
jge
aam
or
jecxz
insb
jo
aam
scas
int
and
or
movb
movsb
push
jae
mov
fcmovnu
adc
inc
lods
xchg
in
rcrl
mov
add
dec
xor
inc
pop
flds
shlb
out
es
in
sbb
pushf
jno
sti
icebp
xchg
add
idivl
and
out
xor
in
mov
mov
out
dec
fldt
lods
rol
test
pop
nop
mov
cmp
xchg
mov
cs
fsts
and
pop
fistl
mov
cs
push
mov
inc
fdiv
sarb
dec
in
daa
jbe
movsl
xchg
cmp
rolb
flds
xchg
pop
notl
fists
sub
sub
push
pop
aam
scas
and
lock
or
mov
or
ror
ficomps
iret
jg
xchg
fwait
addr16
mov
stos
mov
sub
dec
mov
mov
or
lods
add
cmc
daa
xchg
lds
xchg
scas
fcoms
shlb
imull
sbb
push
shrb
sti
outsb
pop
sbb
pop
push
fildl
mov
in
mov
push
pop
fwait
or
addr16
inc
adc
test
xchg
push
fimull
es
fnsave
dec
jle
mov
js
sbb
inc
jl
mov
mov
pop
hlt
add
xchg
lds
dec
pop
cmp
movsl
push
xchg
addr16
mov
into
push
adc
outsl
gs
dec
jge
mov
jno
xchg
imul
hlt
in
xor
movl
int3
jnp
in
xchg
nop
pop
jl
pop
push
adc
loop
data16
cmp
ret
clc
ljmp
outsb
xchg
xor
addb
test
push
or
movsb
in
jb
fisttpl
mov
out
call
out
ja
inc
inc
push
int3
int
cs
jbe
test
pop
pop
and
adc
ja
sahf
test
dec
cs
das
add
cs
fs
jnp
rcrl
sbb
or
pop
pusha
push
fldt
jbe
inc
and
dec
mov
pushf
stos
push
test
push
jnp
mov
sahf
or
scas
mov
cmc
xchg
inc
xchg
sub
jmp
mov
xchg
fisttpll
adc
jmp
xor
addr16
mov
mov
loopne
push
stc
daa
mov
cmpsb
cltd
push
add
mov
std
shll
jnp
cmp
sub
insb
pop
cld
aaa
mov
jmp
lahf
mov
cld
fldt
xchg
push
add
out
push
shll
cmp
inc
pop
add
ret
aam
cmp
xchg
jp
dec
cmpsl
push
ss
sub
mov
subl
sub
test
jo
push
aas
int3
scas
test
sbb
xchg
sub
pop
test
pushf
lock
aaa
push
pushf
out
lret
xchg
clc
ret
mov
pop
sub
aas
imul
dec
movsb
aas
cwtl
or
sahf
popa
jb
adc
mov
lods
shll
mov
lods
into
inc
fcmovne
addl
enter
dec
push
push
rorl
inc
data16
jp
push
shrl
cwtl
fsub
mov
mov
lcall
push
and
xchg
jge
ja
movsb
and
fdivrl
repz
loop
div
jb
mov
and
lds
enter
aam
mov
mov
lret
jbe
push
mov
sub
mov
stos
jae
push
js
mov
into
jp
push
xchg
mov
in
sahf
jns
jmp
mov
cmp
push
insl
adc
gs
shrl
xchg
es
hlt
mov
popa
push
and
sti
mov
movsl
jecxz
jno
insb
cmp
xchg
xchg
pop
sarl
mov
mov
ficoml
test
mov
and
sbb
mov
mov
push
ja
xchg
test
mov
add
push
jae
push
jmp
out
dec
lcall
ja
xlat
push
adc
mov
or
mov
jne
cmpsb
rclb
jge
fbld
cmp
mov
jnp
ret
mov
inc
push
movsl
bound
movsl
cmp
je
cwtl
push
sub
clc
in
push
ss
aas
loope
cmc
inc
cmp
mov
ljmp
js
test
push
lods
jmp
mov
jmp
xchg
or
test
xchg
outsb
sbb
mov
in
push
pop
jle
push
and
jae
push
inc
and
push
icebp
ret
and
stos
push
pop
enter
sbb
jbe
xchg
push
mov
ret
js
push
fdivs
mov
aam
xchg
insl
shll
fs
cmp
hlt
nop
lahf
testb
jle
fidivs
les
cmp
push
push
and
or
xchg
xchg
sbb
lcall
stc
add
cs
enter
pop
imul
add
cld
jb
pop
pushf
jmp
sti
adc
iret
insb
cmp
gs
pop
movsl
mov
push
int3
push
dec
jg
mov
movl
cmp
clc
jb
div
jg
mov
cmpsl
jo
xor
adc
dec
int
into
jle
adc
ds
jmp
cmc
inc
lret
jmp
xlat
into
mov
jns
jnp
in
sbb
pop
outsb
lods
pop
enter
lret
xchg
test
add
lcall
leave
outsb
aaa
fcoml
xchg
xchg
out
jb
je
out
stos
sbb
testl
pop
mov
add
nop
add
lods
imulb
or
cs
or
cmp
xor
xor
aad
aas
xchg
inc
dec
ds
test
add
stos
cmp
or
mov
mov
cltd
enter
into
bound
in
xchg
daa
std
in
cmpsl
mov
mov
pusha
into
pop
dec
or
aaa
ret
das
mov
in
xchg
dec
jmp
loope
push
notl
sbb
jge
les
jns
movsl
cli
mov
add
add
jp
decw
mov
loopne
adc
jae
movsb
dec
std
push
in
cmp
pop
inc
dec
push
xchg
adc
rolb
mov
data16
out
lods
cmpsb
je
roll
ret
mov
and
push
je
icebp
mov
out
dec
bound
mov
cmc
adc
push
inc
xchg
add
xor
and
mov
xchg
and
mov
mov
leave
shrb
sti
aam
pop
mov
mov
cmpl
jmp
adc
push
inc
inc
mov
cli
sahf
cltd
stc
aad
xchg
insl
mov
pop
movsb
ljmp
hlt
xchg
xlat
pop
das
rolb
hlt
pop
add
adc
xor
loope
out
push
je
popa
stos
in
adc
into
mov
push
mov
cltd
push
adc
cmp
mov
mov
xor
out
enter
push
pushf
dec
test
fimull
imul
xchg
cmp
xor
pop
sub
negl
and
arpl
xchg
lahf
daa
scas
push
jb
cmp
test
mov
cmp
add
ret
mov
rcr
int
pop
in
sub
rcrl
xor
push
jmp
lock
sbb
ss
adc
push
xchg
push
cmp
fidivrl
fisttpl
xchg
jae
dec
orb
mov
lret
outsb
pop
cmp
jmp
or
sub
pop
or
pop
repnz
lods
inc
ja
and
movsb
mov
pop
out
xor
mov
mov
and
cmp
mov
dec
mov
sti
push
test
jae
mov
int
mov
xor
insb
cltd
int3
les
imul
xchg
mov
and
and
add
xchg
cmp
cmpsl
loope
xchg
in
push
inc
adc
lret
aaa
mov
cmp
orl
dec
lcall
or
inc
xchg
and
jl
movsl
mov
popf
test
shr
mov
pop
adc
inc
xchg
mov
cmpsl
and
fstp
lods
fstpl
jnp
shll
jnp
rorl
aam
jge
jge
ret
pop
jmp
adc
lods
cmpsb
int
and
mov
adc
xor
push
cmpsb
popa
popf
xadd
outsl
inc
divb
jg
cmc
sub
rcrb
outsl
pop
jns
xchg
jg
mov
push
sbb
loope
sbb
in
and
add
andb
ja
divl
adc
sub
push
xchg
and
out
fcom
pop
inc
cltd
sbb
std
jno
xor
or
sub
xchg
adc
dec
insb
loope
push
call
xchg
cmp
pop
aad
lds
popf
fisubrl
test
stc
push
jne
push
push
pop
loop
aaa
std
dec
mov
stos
fdivrl
leave
hlt
mov
and
mov
insl
sahf
xor
sub
lcall
lds
sbb
in
ds
scas
cmp
clc
sbb
jp
cli
mov
pop
push
cmp
add
add
fwait
popa
js
or
lock
mov
dec
sub
pop
dec
ret
xor
mov
adc
dec
cmp
pusha
shlb
bound
das
push
xlat
push
sbb
cmc
out
pop
jp
jne
xorb
pop
in
mov
inc
ljmp
push
rclb
repnz
xchg
lock
iret
cwtl
sbb
xchg
jecxz
sbb
adc
mov
jmp
mov
jge
idiv
jo
ret
call
cmc
clc
das
int3
adc
adc
mov
pop
adc
xchg
ret
dec
je
sub
sub
add
inc
dec
shrl
movsl
xchg
xchg
sti
popl
add
dec
jle
cmc
cmc
adc
ja
sub
sahf
ret
mov
mov
lods
and
loop
cmp
push
mov
into
dec
mov
mov
das
push
pushf
clc
adc
jmp
cmc
add
bound
jbe
inc
outsl
bound
ret
cmpsl
push
subb
inc
or
mov
fisubl
fstpt
imul
mov
cmp
pop
aas
out
cli
pop
movsb
out
out
adcb
add
loopne
sub
dec
pusha
stc
test
out
mov
stos
mov
mov
dec
and
movsl
lods
pusha
loope
pop
adc
nop
daa
push
xor
jp
mov
test
xchg
jle
mov
stos
push
mov
in
adc
push
nop
add
call
mov
and
adc
jle
cmp
xchg
rcll
fcoml
xchg
fwait
xor
lea
mov
int
popf
fs
lods
fndisi(8087
and
sbb
les
jmp
cmp
pop
mov
lods
or
mov
mov
pop
push
popa
add
cltd
mov
add
insb
dec
pop
shll
push
push
ds
cmpsb
das
jecxz
test
mov
or
ljmp
sbb
cltd
andb
add
push
xchg
inc
push
push
adc
js
xor
sbb
mov
xchg
xchg
or
sbb
push
jbe
movsb
lock
cltd
in
mov
sbb
sbb
dec
pop
movsl
iret
inc
adc
inc
jne
fucom
mov
jg
enter
cs
sub
loopne
test
push
inc
lods
mov
cmp
add
or
clc
movsl
aas
pop
cmp
dec
jecxz
cmp
dec
and
xchg
add
mov
sbb
jl
jnp
xor
aad
les
dec
xlat
dec
cli
ljmp
add
xchg
inc
fcomp
jg
jmp
xchg
sbb
or
or
andb
and
in
out
inc
ljmp
jns
xorl
cltd
iret
movsb
cltd
pop
cmp
cmpsl
lods
pop
or
insb
sub
in
xchg
pop
imul
fcompl
ja
cmp
jp
and
adc
std
push
dec
int
mov
add
push
push
stc
fists
inc
adc
mov
leave
sbb
pop
loop
xchg
fsub
push
lahf
jns
xchg
fdivrs
sub
cld
and
sbb
dec
lcall
inc
and
pop
dec
sahf
fiadds
nop
call
or
inc
nop
or
lea
inc
stos
imul
ret
hlt
xchg
inc
fcoml
out
sbb
lret
sbb
je
aas
dec
aas
orl
xor
mov
xchg
mov
jb
imul
mov
ds
notl
aad
cmp
pusha
jo
jge
popa
leave
lods
rcrb
cmp
cld
popa
push
and
adc
imul
adc
mov
cli
lahf
sub
mov
jbe
ficoml
stc
popf
in
jo
dec
fwait
cmc
jb
fsubrl
loop
jne
int3
and
adcb
leave
fs
push
fwait
roll
push
or
aaa
arpl
xor
push
push
ljmp
lods
sub
jae
loopne
clc
loop
pop
pop
adc
jo
push
fcmovnbe
arpl
xchg
mov
sub
mov
jecxz
dec
jmp
add
out
lret
test
mov
jmp
repnz
fildl
js
mov
das
push
cltd
jp
xor
je
jg
aaa
ret
and
inc
aad
popf
xor
iret
or
pop
xchg
fcmovnu
mov
mov
ja
xor
pop
mov
out
sbb
mov
sti
call
dec
xchg
lret
nop
mov
sti
push
dec
push
pop
fisttpll
mov
dec
or
pop
mov
dec
xor
inc
in
insb
cmp
mov
sbb
xchg
sub
dec
gs
shll
cwtl
mov
out
or
xchg
pop
add
xchg
mov
ficoms
cmc
xchg
imul
pop
xor
jnp
jne
add
fidivs
in
xchg
shll
or
add
test
in
pop
lds
dec
popa
aas
inc
xor
iret
adc
xchg
pop
xchg
inc
fnstenv
jo
pop
les
sub
repnz
rcpps
mov
subl
dec
push
rcrb
xchg
inc
cld
daa
fs
and
push
or
jo
mov
or
or
inc
out
icebp
push
xchg
xor
scas
ja
adc
or
pop
sets
or
push
out
out
lahf
out
pop
pop
enter
adc
xchg
push
push
imul
sahf
and
pop
mov
dec
and
icebp
and
mov
fs
rcr
sub
loope
or
mov
sbb
fcmovu
movsb
icebp
scas
and
add
push
jmp
js
sub
xor
iret
mov
fcmovb
xor
xchg
lret
out
sbb
and
loop
fadds
pop
push
leave
mov
stos
inc
sbb
jns
jae
and
hlt
inc
cmp
push
push
jo
push
sub
add
jp
in
inc
jp
mov
adc
shll
jmp
and
pop
fldl
pop
insl
movsl
sbb
xorb
jl
ss
xor
jnp
inc
xchg
rcrb
cmp
test
sub
fsubs
loopne
mov
or
decl
cld
push
pop
mov
mov
push
pop
xchg
add
test
ja
loop
xchg
mov
outsl
inc
pop
dec
jo
daa
mov
mov
cld
inc
xor
fnsave
sub
fisubl
and
fdivl
out
cwtl
push
sbb
pusha
sbb
into
sub
mov
leave
cmp
aam
jne
pop
stos
cmp
lret
nop
out
dec
outsb
cs
loopne
lret
jo
test
sub
lods
repnz
mov
adc
mov
mov
mov
xlat
je
mov
or
fsubl
ds
jmp
scas
fsts
jo
lods
mov
pop
pop
lret
push
out
dec
mov
xchg
hlt
call
mov
mov
push
data16
add
or
xor
xor
pop
clc
iret
dec
inc
mov
mov
cltd
test
mov
inc
bnd
mov
testl
mov
jo
adc
cmpb
repnz
test
xor
in
aaa
hlt
xor
xlat
imul
scas
cmp
adc
xchg
clc
cmp
or
jb
sub
mov
and
call
iret
sbb
mov
mov
pop
les
rcl
push
inc
xor
cltd
mov
lea
js
repnz
adc
fstps
stos
add
test
in
pop
cmpsb
mov
repz
in
leave
fldenv
int3
out
data16
pop
pop
ffree
scas
fwait
mov
movsb
xlat
repnz
mov
cltd
in
dec
push
fcoml
cmp
test
cmp
shl
xchg
aaa
es
in
lea
outsb
lcall
notl
adc
fists
shr
pop
test
scas
jge
mov
add
adc
in
jne
stc
sti
mov
out
push
sub
lock
xor
rol
repz
aaa
pop
lds
stc
int
pop
cmp
enter
in
dec
movsl
add
jb
xchg
sub
jns
in
outsb
xchg
jbe
movsl
ljmp
mov
lea
mov
sub
call
popf
xor
sub
movsl
roll
cmpsb
xor
mov
or
iret
leave
dec
add
jmp
xor
cs
mov
cmpsb
popa
inc
mov
adc
pop
mov
je
pusha
and
xchg
jl
jnp
pop
fcom
cmp
lock
loopne
mov
mov
adc
pop
fwait
xchg
das
add
or
rorb
bound
inc
hlt
mov
pusha
cmpsl
outsb
or
mov
in
pop
sub
jecxz
push
sub
imul
pop
fldcw
jbe
pop
cmp
xchg
mov
and
into
sub
insb
inc
mov
sahf
sub
lcall
push
push
mov
inc
and
pop
inc
jecxz
and
inc
test
mov
cmp
ja
rcrb
mov
cmp
jo
add
test
or
xchg
gs
loop
xchg
icebp
insb
cmp
mov
bound
push
xchg
nop
lea
aam
pop
push
faddp
dec
shlb
bound
and
pop
loope
inc
or
mov
sarb
xor
mov
lcall
sti
mov
dec
dec
cmp
add
rcrb
inc
mov
xchg
push
fstpt
lret
or
insl
push
iret
mov
popa
sbb
xchg
movsb
cltd
aad
std
data16
stc
sbb
lret
int3
push
int
negb
jg
cmp
mov
das
in
rorl
push
push
lock
push
pop
stc
xor
std
fcmovu
sbb
scas
cmpsb
pop
mov
push
jno
pop
sbb
inc
out
sarb
xchg
int3
add
and
imul
dec
or
mov
idiv
push
pop
cmp
sbb
addb
leave
push
iret
imul
clc
sarb
mov
sub
pop
addr16
ljmp
repz
int
push
push
cmp
loope
out
fidivs
sbb
and
dec
test
jg
int3
out
or
inc
or
popa
dec
push
shl
mov
sub
inc
cmpsb
jae
adc
mov
fwait
jecxz
pop
cwtl
dec
stc
push
dec
jbe
mov
xor
pop
sbb
jl
jb
int
out
cmpsl
hlt
push
mov
mov
insl
or
cli
pop
mov
aad
pop
daa
sub
jnp
add
repnz
or
fsub
pop
sarl
lods
ja
lock
pusha
lret
inc
mov
mov
lock
xor
dec
xchg
sbb
xor
aaa
movsl
pop
inc
fildl
fs
fwait
ja
js
inc
mov
dec
sbb
lock
and
subl
int3
dec
push
movsb
lods
adcl
lods
aad
sub
movsb
loop
inc
loopne
mov
inc
imul
fstpl
or
cmp
dec
in
push
dec
sbbl
lock
lahf
sbb
xchg
or
int
jmp
xor
scas
inc
push
jae
iret
mov
and
jns
int
adc
push
mov
stc
inc
clc
jg
xchg
cmc
jle
and
lcall
pusha
xchg
lret
adcl
rol
scas
mov
jbe
ja
fidivs
mov
mov
pop
push
pop
stos
dec
jle
jge
and
leave
rcrl
mov
dec
mov
dec
stc
imul
push
jo
inc
mov
fdiv
or
sub
dec
iret
mov
cmc
loopne
xchg
inc
mov
mov
orl
xchg
add
std
adc
imull
aas
push
mov
lods
das
add
and
push
int
sub
fidivrl
xorb
mov
fsubrl
and
lds
inc
pop
sbb
mov
inc
sbb
scas
std
push
and
cli
out
cmp
inc
movsl
dec
stc
xchg
mov
iret
jle
enter
xchg
pop
insl
sub
jmp
mov
pop
andl
and
fldcw
cmpsl
xor
push
or
aad
xor
negl
push
jb
sub
aaa
dec
sub
movsbl
add
fcoms
dec
into
cmp
stc
mov
lea
out
int3
data16
cmp
mov
cmp
test
add
outsb
xchg
xchg
arpl
jbe
pop
fs
es
pop
pushf
add
or
rcrb
adc
data16
dec
sub
and
xchg
shl
and
mov
mov
adcb
xchg
nop
adc
ljmp
insl
mov
out
pop
arpl
xchg
mov
ja
in
sbb
fbld
xlat
fwait
je
movsb
inc
xor
aad
xchg
or
pop
pop
push
sbb
loop
lock
andb
and
xchg
icebp
mov
in
cmp
add
andl
pop
sub
imul
repz
frstpm(287
push
xchg
xchg
xor
or
add
dec
mov
test
pop
in
sbb
mov
in
je
int
repnz
xor
mov
out
enter
insb
push
sti
jbe
icebp
aas
push
js,pt
xchg
fldcw
cmpsl
in
and
push
inc
outsb
test
es
or
push
mov
mov
mov
add
call
movsb
xchg
fnstenv
jo
and
sub
dec
and
inc
jmp
lods
mov
inc
jnp
cli
jp
repz
adc
leave
xor
mov
outsl
push
jo
push
push
jle
ja
sbb
pop
sub
or
cli
dec
push
add
or
mov
and
loopne
xchg
fwait
aas
xlat
cmc
cmp
shlb
ds
arpl
inc
xchg
sbb
add
and
mov
and
mov
mov
ljmp
in
or
mov
lcall
imul
inc
xchg
subl
icebp
out
dec
xchg
sbb
mov
stc
and
lock
dec
cmp
scas
mov
add
push
dec
ljmp
int
movsl
jno
sub
adc
cmp
sub
cmp
aad
xor
out
push
decb
add
mov
mov
mov
dec
aad
stos
addr16
stos
in
scas
shll
test
sbb
jno
repz
aas
and
clc
dec
pop
in
fistl
xlat
ficompl
fisubrs
sub
cli
push
dec
add
pop
mov
and
ljmp
movsb
xlat
dec
pop
add
xor
sahf
and
mov
push
sbb
fdiv
sub
out
push
lods
sub
cli
movl
lock
mov
cmpsl
mov
inc
or
mov
or
cli
sub
mov
jge
mov
call
in
mov
in
sbb
add
pop
xchg
cmp
jns
cmpsb
loop
push
mull
lahf
ja
adc
cs
popa
add
lea
mov
loop
scas
scas
adc
stos
push
mov
lret
mov
icebp
das
lahf
mov
add
dec
stc
cwtl
aas
dec
mov
jns
cmpsl
xchg
adc
xchg
pop
call
lret
mov
mov
xchg
jge
jo
mov
in
out
cld
sahf
pop
test
inc
filds
sbb
cmp
sub
add
lds
jo
lea
dec
xchg
mov
dec
fimuls
ret
jae
push
ret
sub
lret
fwait
popa
fcmovnbe
mov
pop
cmc
xorb
sti
loope
and
movzwl
lds
cmp
iret
pop
enter
test
or
mov
cmpsl
lods
pop
hlt
inc
in
jle
mov
jae
fs
imul
ja
das
inc
cltd
cwtl
inc
enter
dec
addl
test
in
enter
mov
cltd
cli
pop
sbb
push
push
fsubrl
fisubs
shll
outsb
mov
push
cmpsl
mov
lret
out
fistps
xor
and
mov
pusha
fldenv
jmp
iret
and
ds
call
and
adc
mov
lahf
dec
mov
sti
jp
push
ss
sahf
test
or
aaa
bound
inc
cli
jbe
xchg
jne
ljmp
sbbb
inc
add
cmpsl
push
sub
repnz
out
lret
fucomp
movsl
inc
jno
leave
mov
xchg
imul
icebp
data16
imul
je
xor
sub
fistl
mov
push
repnz
dec
out
in
shlb
jecxz
jns
test
push
fsubs
lock
daa
xchg
insb
int3
stos
push
sbb
push
adc
std
dec
or
sahf
cmp
loopne
sbb
js
leave
data16
jbe
xor
cwtl
hlt
xchg
mov
add
aas
pusha
div
sbb
push
mov
loop
and
jl
dec
imul
lds
jae
inc
adcl
std
int3
and
mov
push
mov
stos
daa
negb
mov
inc
int3
cs
pop
cmp
sbb
xchg
xchg
out
mov
loope
and
fcomps
shl
or
cld
pop
push
sbb
adc
cltd
cltd
ret
stos
xchg
xchg
in
xchg
push
pop
popa
mov
xor
ss
dec
push
pop
adc
dec
jae
sbb
testb
and
movsl
fisubl
sub
ds
shll
popf
jmp
fmull
test
repnz
xchg
mov
jecxz
jne
push
loop
sbb
jecxz
ja
dec
push
sahf
and
adc
cmp
fnsave
pop
sbb
lds
inc
lret
lock
lcall
fst
xor
insb
jo
call
nop
out
sti
imulb
inc
sub
pop
pop
insl
and
adc
dec
cmc
mov
not
ljmp
push
dec
cmp
inc
lds
jl
out
mov
rcpps
push
jnp
mov
pop
inc
movsl
add
pop
and
mov
cld
jns
lods
in
lret
cmp
insl
cmp
out
jbe
vmovq
inc
enter
scas
xor
ljmp
lds
test
jmp
sub
jg
push
dec
int
stc
inc
and
nop
and
mov
dec
dec
jae
cmp
adc
xchg
push
jne
xor
loope
adc
and
push
sub
adc
xchg
mov
sub
push
cmp
cmp
sub
sbb
jne
or
aaa
xchg
addb
mov
adc
insb
scas
pop
movsb
or
hlt
and
add
loope
sarl
pop
aaa
das
mov
shl
out
gs
daa
fwait
add
jb
out
stos
test
bound
push
inc
insl
cmpsb
jge
shlb
es
adc
test
jb
jl
dec
stos
into
cld
jns
push
inc
pop
jmp
imul
add
pop
outsl
dec
test
int
out
into
fs
pop
dec
cmp
repnz
dec
xor
shll
std
mov
jecxz
rcr
rcrb
sub
mov
push
mov
fsubl
test
div
repz
xor
push
pusha
inc
inc
xor
xor
dec
xchg
xor
pop
mov
test
mov
jle
cltd
pop
in
scas
inc
out
jnp
fistps
push
lret
ffreep
inc
inc
xor
lock
out
sbb
add
repz
dec
adc
mov
divb
mov
pop
cwtl
test
popa
mov
rcrl
cli
jae
and
dec
lret
add
or
enter
jnp
sbbl
repz
jnp
nop
xor
adc
sti
xor
xchg
add
lods
outsb
xor
arpl
or
mov
lret
xchg
xchg
lea
lea
sbb
fbstp
daa
mov
lahf
cmp
cmp
push
out
and
rorl
mov
icebp
or
xor
mov
mov
xor
add
pop
pop
pop
leave
ret
push
mov
push
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
pushl
pushl
push
pushl
push
push
push
pushl
call
jmp
movl
adc
mov
addl
jmp
into
or
jg
fildll
dec
mov
call
inc
popa
bound
bound
mov
jne
fildll
adc
lret
mov
rclb
pop
js
and
jge
jno
into
add
stos
push
test
sbb
sbb
or
sub
cmpl
jg
xchg
xor
loop
and
xor
cmp
stc
mov
xchg
addb
es
movsl
and
sub
hlt
jg
pop
and
lahf
push
push
jle
fildl
loop
sbb
ss
inc
pusha
inc
outsl
movsb
addr16
mov
in
add
aad
or
fcmovnb
push
inc
mov
mov
lods
in
and
je
push
push
push
xor
into
mov
stos
dec
adc
rorb
sbb
push
add
adcb
std
gs
dec
push
pop
call
xchg
and
pushf
xor
pop
jae
sbb
mov
addr16
test
push
rcll
xor
mov
and
inc
add
push
cld
inc
inc
cmpsl
mov
xchg
xorb
loope
push
out
out
unpcklps
sbb
ljmp
rcrl
mov
call
mov
lds
adc
mov
sbb
jnp
shll
and
pop
and
inc
jnp
push
cmp
inc
daa
mov
xchg
cmp
outsl
push
lret
ret
pop
aaa
jmp
pop
sub
mov
iret
sub
call
adc
stc
call
push
sub
lods
dec
sub
repnz
fsubrl
inc
inc
push
sbb
mov
and
sahf
sarl
dec
popf
pusha
ficomps
dec
jb
jbe
dec
out
cmp
lret
lds
xchg
mov
push
pop
mov
cmpsb
mov
adc
ror
insl
sbb
add
lods
sti
insl
sbb
rorl
mov
cmp
in
call
in
dec
shlb
mov
cmp
cmp
insb
incl
sbbb
cmpsl
test
cmp
in
lret
shl
pop
inc
jo
dec
arpl
pop
out
iret
push
jle
inc
out
ficoms
shll
imul
shlb
cmp
pop
mov
call
add
iret
pop
pop
jno
inc
jne
pop
mov
imul
mov
iret
cmp
xor
xchg
mov
cmp
arpl
fldt
mov
aaa
mov
outsb
aaa
dec
push
test
cld
dec
mov
jmp
mov
jp
dec
xchg
outsl
and
out
mov
icebp
imul
cwtl
gs
gs
popa
int3
jl
xor
dec
mov
cmc
xchg
loopne
shll
xchg
or
shll
hlt
sub
nop
sbb
call
mov
xor
in
repnz
imul
sahf
xor
sbb
enter
pop
test
or
shll
shl
dec
jno
lods
mov
cmpsb
mov
mov
lock
daa
lods
xorl
add
lcall
test
into
roll
cmp
add
mov
mov
fs
ret
scas
mov
repz
push
jnp
dec
loope
mov
jo
lahf
sbb
inc
xchg
repnz
out
pop
scas
lret
adc
scas
push
or
loopne
test
xchg
shll
xchg
xlat
hlt
dec
imul
and
mov
bound
mov
and
dec
pop
lods
sub
jg
movsl
stos
adcl
mov
ds
mov
cltd
mov
mov
add
cmc
mov
dec
iret
cmp
fcompp
shrb
inc
sub
loope
hlt
rorl
das
pusha
jns
in
ds
fbld
movsb
into
mov
dec
sub
inc
dec
mov
sti
jp
jmp
mov
and
test
xchg
test
daa
daa
xor
sahf
and
lahf
dec
and
push
sti
pop
sub
jns
jmp
cmp
xor
push
mov
jmp
push
cmp
js
cmpsb
push
cmp
mov
mov
jb
jmp
cmova
push
mov
in
inc
adc
dec
dec
sub
inc
add
dec
push
ljmpw
mov
divl
bound
in
xor
mov
inc
fldenv
int3
mov
lahf
and
xor
jns
into
js
clc
ja
or
push
aas
pop
lock
push
imul
into
push
add
aam
nop
adc
stos
inc
mov
movsl
out
or
sub
dec
inc
ja
cmp
jecxz
in
call
das
daa
gs
iret
mov
sbb
pop
and
adc
addr16
dec
scas
jmp
sub
dec
jae
mov
lods
mov
lahf
mov
ljmp
xor
push
mov
mov
test
ret
sbb
sub
repnz
inc
mov
mov
fxch
sbb
jmp
jne
push
add
jnp
jmp
xchg
sbb
aaa
and
xchg
inc
xor
popl
das
xchg
mov
cld
pop
mov
add
ds
jno
sbb
iret
mov
out
test
xor
roll
lea
push
xchg
mov
call
jmp
xor
push
pop
out
xorb
lea
std
and
test
jg
xor
movsl
lock
pop
shlb
jns
insb
jge
sti
pop
and
hlt
or
or
dec
push
add
loopne
inc
in
or
jecxz
into
jmp
pop
cld
push
push
aas
add
sbb
mov
shrb
mov
test
inc
pop
fbstp
xchg
adc
pop
lods
adc
xor
lods
jl
dec
or
pop
mov
jle
mov
rolb
sbb
jno
add
psubusw
mov
hlt
lcall
dec
pop
sbb
adc
imul
mov
stos
jge
mov
xchg
push
fstpt
inc
enter
pusha
inc
add
push
gs
adc
repz
insl
adc
and
dec
xor
aam
xor
rol
or
adc
and
cmp
xchg
mov
in
jae
ss
cli
or
loopne
into
scas
sbb
mov
mov
out
mov
push
icebp
mov
mov
scas
pop
mov
adc
adc
movsb
adc
jae
andl
aad
adc
cwtl
xor
mov
mov
out
inc
fs
je
add
cmp
shrb
insl
lods
scas
ljmp
sbb
mov
in
pop
jns
adc
mov
loop
inc
inc
iret
lock
mov
cs
push
xchg
pop
mov
jle
add
cmpsb
lret
push
pusha
pop
subl
lret
add
dec
in
xchg
loope
lret
ret
lea
addr16
arpl
rcrl
mov
mov
pop
sbb
fldl
test
dec
rcl
daa
fcmovu
sub
add
add
inc
xchg
inc
enter
jnp
aaa
testl
das
inc
insb
lds
bound
sub
and
inc
jge
pop
lss
arpl
xor
into
shll
arpl
sub
push
test
rorl
dec
sbb
jg
mov
or
pop
and
iret
shlb
mov
lret
fcompl
stos
es
jbe,pn
fisttps
mov
sub
notl
sub
incb
mov
push
test
aaa
dec
lfs
repnz
push
mov
je
xchg
call
test
leave
mov
adc
popa
add
mov
xchg
push
push
jmp
outsl
sbb
aas
xchg
iret
lret
stc
jle
pop
add
data16
dec
pop
jmp
je
inc
dec
cld
test
mov
mov
xchg
jae
xchg
mov
or
pop
jp
scas
ds
xor
jmp
xor
push
fcmovne
rorl
cs
je
adc
rcrb
stos
roll
adc
xor
xchg
mov
inc
xchg
sub
dec
cmp
fistpll
iret
inc
outsb
mov
push
scas
incl
clc
pop
cmp
or
aad
xor
sbb
mov
xor
call
outsb
pop
out
mov
mov
sbb
pusha
mov
sbb
ret
lds
push
loope
mov
jbe
push
cmp
mov
sbbl
sti
mov
stos
jmp
adc
fcompl
popa
cmpsl
push
imul
jecxz
or
or
fdivs
mov
xor
inc
dec
pushf
inc
pop
icebp
mov
add
shrb
push
mov
dec
inc
jbe
iret
repz
pusha
mov
test
adc
xchg
sarb
ds
insb
xchg
push
and
pop
inc
jmp
xchg
push
lods
mov
test
movsb
addr16
or
stos
and
xchg
cmp
push
fstps
ret
push
mov
mov
cmp
mov
aaa
mov
lcall
mov
dec
icebp
sarb
in
ss
or
mov
test
ljmp
jae
cs
ds
dec
incl
mov
lods
leave
fs
sub
and
xor
and
mov
mov
arpl
pop
mov
adc
or
xor
xlat
jmp
and
nop
jle
jnp
imul
dec
add
push
or
mov
pop
in
daa
inc
mov
push
or
mov
cmp
xchg
and
cs
jb
jnp
test
aam
xor
push
test
lods
mov
and
inc
xchg
insb
int3
mov
and
sarb
aas
cmp
fnstcw
mov
adc
loope
add
jae
and
adc
sub
mov
dec
data16
dec
jns
es
pop
jecxz
call
and
insl
push
out
iret
mov
in
mov
inc
or
cmp
add
mov
pop
adc
push
cmp
test
std
imul
fldl2e
pop
clc
push
mov
sub
cmp
lods
mov
sbb
pop
cmp
cld
inc
inc
jne
rolb
jg
stos
shlb
jecxz
jge
fstpt
sarb
mov
vcvtss2sd
bound
xchg
mov
jecxz
inc
iret
push
push
sub
aaa
cmpb
push
scas
mov
push
mov
add
mov
xor
shlb
sbb
aas
xor
xlat
js
imul
lea
cmp
add
xchg
int
pop
mov
mov
cmpb
ljmp
rolb
es
fdivl
or
dec
dec
insb
mov
es
test
call
and
jle
fildl
js
lock
sbb
or
shl
mov
repnz
and
inc
sti
movb
in
test
test
cmp
repz
std
hlt
xchg
sbb
aaa
aam
pop
arpl
repz
addr16
test
ljmp
pop
lret
lds
and
test
add
pop
ljmp
xchg
cltd
test
cs
fistpll
daa
add
xor
jns
in
rorb
ljmp
scas
lcall
or
push
cmp
push
or
jl
lret
fmull
lcall
dec
inc
rorb
iret
in
add
mov
jns
shrl
push
xchg
push
enter
dec
sbb
add
int3
jle
push
sub
adc
movsb
mov
mov
test
push
push
inc
jae
ficomps
movsl
cmp
and
xor
ficoml
ret
stos
mov
push
in
dec
mov
dec
adc
std
mov
adc
ret
mov
insb
out
push
fistpl
insb
pop
or
jo
dec
ss
lcall
add
jbe
mov
cmp
mov
jnp
mov
cli
test
jnp
add
sub
inc
xchg
rolb
stos
loop
ret
ret
sub
push
mov
insl
in
fildl
in
into
ret
mov
mov
lock
xchg
jmp
das
ljmp
mov
lret
repnz
dec
push
mov
pop
aaa
sti
sub
into
movsl
mov
lea
mov
cmp
shr
repnz
ret
cmc
jnp
or
outsl
stos
fldt
mov
adc
mov
dec
mov
imul
je
pushf
xchg
sbb
xchg
push
dec
lods
fsubrl
ret
movb
jno
lock
fxch
push
test
bound
and
mov
int3
add
scas
daa
xor
mov
mov
jmp
dec
nop
pushf
xor
mov
ret
mov
pop
xchg
dec
and
and
dec
pop
xor
and
fwait
addr16
dec
adc
arpl
inc
shlb
add
mov
mov
fdivl
xor
inc
sbbb
add
pop
xor
xchg
xor
sbb
push
adc
push
arpl
xchg
nop
es
out
jecxz
in
lds
mov
movsb
dec
in
mov
negb
stc
mov
es
scas
loop
mov
jle
and
lods
adc
cmp
lods
int3
bound
push
xchg
adc
add
sbb
fs
sub
insb
test
inc
repz
rclb
out
mov
test
mov
or
xlat
fimuls
insb
jno
xorl
daa
inc
andb
hlt
jg
fistl
clc
push
or
popa
xorb
adc
push
push
push
faddl
insl
sub
sub
popa
xor
addr16
inc
mov
sub
lcall
loope
es
int
inc
stos
fnsave
jg
mov
dec
sti
or
int3
addr16
imul
add
jnp
pop
jge
repnz
mov
nop
rclb
ja
cmp
test
leave
fisubl
inc
xor
xorb
or
lods
jnp
insl
cmp
outsl
and
xchg
xchg
mov
movsl
loopne
mov
adcb
fildl
mov
xorb
movsl
insb
jge
jnp,pn
iret
mov
or
cmpsl
mov
pop
popa
and
jmp
adc
ss
dec
loope
dec
in
or
cmp
sub
imul
dec
daa
adc
xlat
and
cmpl
out
mov
mov
mov
cmpsl
fadds
mov
pop
insl
aam
mov
lret
fstpt
pop
rcr
or
mov
xchg
sahf
sub
cmp
les
aad
cmp
mov
ja
xor
mov
dec
mov
loop
cmc
mov
push
sub
jb
or
aam
movsb
jp
push
push
inc
in
fidivrl
ljmp
mov
test
mov
call
jg
es
or
fstpl
sti
sbb
jbe
mull
mov
rcll
mov
fsubrl
jno
push
out
jg
cltd
in
sbb
mov
cmp
scas
fisubrs
xchg
xor
stc
and
xor
mov
cmp
xor
imul
addb
cmp
pushf
in
xchg
push
insl
or
push
stos
lahf
scas
inc
dec
sbb
dec
mov
jo
fistl
pop
xor
cmp
imul
dec
loope
pop
out
xchg
test
jbe
mov
sub
inc
negl
dec
mov
dec
mov
pop
mov
arpl
push
mov
xorb
xchg
ss
adc
jnp
cmc
mov
das
add
cs
fsub
int
rcrl
fcomip
xchg
imul
arpl
fmuls
cli
dec
mov
sti
mov
stc
mov
jo
push
gs
jge
xchg
mov
cmp
adc
arpl
push
mov
jns
mov
cwtl
aaa
mov
mov
pop
int
rclb
jbe
cmc
mov
dec
xor
adc
mov
imul
loopne
push
fcomps
push
addl
lock
mov
jbe
push
pop
cmpsb
xchg
and
mov
pop
and
xor
fadds
mov
mov
and
adc
ret
sub
mov
sbb
ret
push
mov
sub
idivl
pop
sbb
sbb
push
inc
test
fisubs
sbb
out
movsb
sti
outsl
pop
pushf
daa
ret
pop
pop
xor
popa
cmp
push
push
adc
push
push
popf
dec
loop
mov
add
sbb
pop
out
add
mov
push
sub
test
xchg
pop
fsub
movsb
mov
fcoml
popf
loope
or
cmp
arpl
xor
adcl
jg
cmpsb
rol
fimull
mov
xlat
adc
movsb
push
mov
ljmp
jge
paddusw
mov
sub
shll
es
jnp
sub
lahf
repz
and
ret
fists
orb
sbb
sbb
rolb
push
insl
out
xchg
jne
jo
mov
add
mov
shlb
push
stos
mov
fstpl
cmp
loop
lret
or
fwait
pop
mov
or
adcb
mov
pop
pusha
je
push
xchg
lcall
loopne
inc
xchg
cmc
xor
sbb
push
cmp
jl
insl
das
dec
scas
push
jg
mov
subb
jnp
outsl
dec
jbe
icebp
sub
xchg
and
or
pop
dec
mov
adc
sbb
xchg
scas
cmovo
dec
mov
jmp
or
xchg
mov
std
or
shlb
stos
inc
aam
rolb
push
arpl
fdivs
xlat
pop
fs
imul
pop
sti
push
mov
outsl
jbe
or
pop
cmpsb
sub
jg
fmull
lods
fs
scas
in
call
cmpsl
out
hlt
test
jbe
cmp
lret
mov
insb
stos
dec
dec
jmp
movsb
out
adc
sbb
jnp
test
cwtl
in
sahf
cmp
dec
push
cld
or
ja
inc
inc
pop
pop
negl
xor
mov
xor
mov
adc
cmp
push
jge,pt
cmc
xchg
dec
repz
and
jmp
in
and
lcall
push
in
gs
xor
push
cltd
adc
push
jbe
sahf
lret
dec
into
cwtl
dec
inc
outsb
dec
sarb
aaa
xor
sbb
lods
repnz
fldt
inc
or
stc
push
push
arpl
pop
sarl
dec
std
lret
xor
cmp
jns
aam
scas
pop
icebp
sub
lock
fsub
mov
rclb
movsb
xor
mov
jecxz
jp
mov
and
ds
cmp
jnp
mov
sbb
data16
leave
orb
dec
add
mov
aam
sub
pushw
add
cmp
es
imul
push
add
or
inc
rcr
hlt
inc
addr16
cmp
cmp
fnstenv
lretw
jg
shrb
cli
push
jnp
xchg
mov
out
and
mov
or
mov
ljmp
arpl
insb
cbtw
rcrl
xchg
pop
enter
pop
mov
lods
inc
jge
jb
js
sbb
iret
loop
iret
jns
inc
xor
xor
lock
dec
pop
xor
xchg
sbb
sub
rcrl
and
push
ret
push
cli
adc
sbb
pop
push
xchg
sub
lock
mov
daa
mov
jns
or
inc
jge
pop
sub
mov
xor
lea
xor
mov
das
add
inc
sahf
push
mov
push
mov
mov
lahf
les
out
xchg
cli
outsb
adc
mov
out
aaa
pop
xchg
pcmpeqb
fdivrs
pop
shrl
push
adc
int3
test
add
sbb
fucom
sbb
mull
lcall
mov
xor
ss
inc
jp
das
mov
fwait
out
jge
outsb
icebp
jge
aas
repz
push
lods
cmpl
mov
push
iret
push
and
sub
xor
pop
add
jmp
stc
dec
mov
push
mov
int3
or
push
and
stos
aam
daa
push
adc
mov
mov
sub
in
addr16
sub
rep
cmp
push
xchg
mov
or
pop
mov
add
das
ja
cmp
lock
rcrl
loop
and
pop
addr16
xor
jae
mov
add
pinsrw
cltd
xor
sub
mov
mov
pop
ret
or
ljmp
lock
mov
xchg
out
mov
aas
xchg
hlt
and
sub
inc
or
xor
add
sbb
xlat
mov
adc
add
and
pop
repz
mov
cmp
pop
add
or
in
push
out
inc
xor
inc
leave
ds
lea
inc
idiv
fnop
shrb
bound
and
pop
mov
push
aam
mov
lea
pop
cmc
xor
push
or
inc
add
jl
adc
lcall
sub
mov
in
mov
mov
push
outsb
arpl
adcb
bound
cmc
inc
aaa
call
jb
add
js
aas
loop
adc
inc
fs
or
xchg
imul
pusha
lock
out
fwait
sub
pop
repnz
cmpsl
and
xor
repnz
lods
mov
sti
call
js
sti
xor
mov
cmpsb
mov
dec
pushl
add
sub
imul
stos
int
push
cmp
sbb
les
push
or
xchg
jl
out
push
int3
repnz
add
sub
mov
jns
mov
mov
and
add
mov
dec
stc
pop
push
and
into
mov
xor
out
ret
cmp
stos
sub
sub
cs
pop
mov
mov
pushf
mov
ret
ret
sub
les
mov
sbb
push
inc
add
popa
imul
int3
adc
mul
cmpsb
popa
not
and
inc
xor
aas
push
ds
cmp
out
ja
mov
jae
sub
push
loop
adc
adc
in
xor
aad
mov
iret
push
add
cmp
jnp
fistpl
dec
mov
test
cmp
mov
sbb
mov
cmp
lods
xor
into
adc
add
in
adc
fisubl
testb
mov
nop
sbb
fcmovnbe
or
pop
mov
insl
test
add
sbb
adc
out
mov
test
je
xor
aaa
sub
aas
lret
sbb
shlb
jns
mov
jo
jl
xchg
pop
sbb
out
insl
imul
cmp
mov
or
das
cmp
adc
inc
jge
adc
mov
mov
pop
retw
lock
lods
fidivs
jmp
or
pop
mov
imul
out
shlb
lret
out
inc
sub
ffree
mov
inc
mov
mov
into
imul
inc
push
lds
rcrb
out
jg
std
test
das
dec
cltd
xor
add
mov
cltd
test
xor
cltd
loopne
cmp
imul
cwtl
aad
add
nopl
and
lea
ja
cmc
jp
mov
jbe
sbb
push
dec
dec
inc
pop
inc
aaa
es
int3
jb
popf
and
xor
jae
xchg
shlb
mull
or
scas
push
inc
aad
jnp
inc
inc
jl
xchg
cwtl
xchg
or
push
jbe
fs
lahf
mov
into
cli
xchg
pop
out
rcll
sbb
outsl
sahf
mov
shrl
adc
sbb
insl
in
sbb
stos
outsl
std
cltd
aad
lret
and
gs
and
test
xchg
xchg
mov
jl
shl
pushf
cmp
cmp
ja
les
add
jle
cmpsl
jge
rcr
dec
call
sub
hlt
fs
adc
add
lahf
adc
cmp
adc
xorl
xlat
mov
and
xchg
push
scas
ja
push
push
dec
out
xchg
xchg
adc
adc
cwtl
test
iret
or
jge
leave
in
lds
out
sbb
mov
xor
pop
fldl
jns
fsubr
sub
and
test
xor
or
inc
cs
fisubs
icebp
fcoml
shrl
adc
jns
push
lahf
mov
gs
outsl
repz
jmp
and
fwait
fs
insw
ret
fadds
clc
and
lret
push
sub
cmp
xor
mov
or
ds
ss
and
and
mov
jnp
out
sub
add
les
ret
inc
mov
insl
mov
out
rclb
pusha
add
and
les
push
outsb
or
fs
pop
ljmp
aam
cmp
fistps
dec
outsb
js
rclb
sar
in
dec
pop
sub
orb
push
movsl
dec
and
ret
xor
jnp
mov
cltd
add
pusha
movsl
rcll
mov
out
mov
cmp
nop
jp
dec
jbe
jo
orl
out
fsubrp
push
sbb
cld
in
jge
mov
jmp
cmpsl
or
pop
push
fstl
ret
jns
sub
jbe
push
movsb
adcb
dec
flds
pop
cmp
xor
clc
mov
enter
lock
xchg
xchg
sub
jmp
int
pop
stos
mov
imul
mov
and
outsb
es
and
mov
movsl
rolb
jnp
jge
rorb
subb
fwait
cltd
loop
fs
dec
dec
outsb
mov
jecxz
iret
xchg
or
xchg
adc
xchg
adc
hlt
arpl
js
lods
xor
in
fnstsw
outsl
sbb
sbb
mov
add
add
jbe
dec
dec
das
inc
or
mov
jge
orl
xor
stos
sub
push
ret
aad
lahf
out
iret
mov
jmp
arpl
lret
xor
das
bound
hlt
xchg
xor
cmova
sbb
aad
repz
jb
bound
addl
and
mov
pusha
test
sub
scas
in
mov
fs
sti
jbe
int3
cvtpi2ps
adc
repnz
or
mov
stc
inc
sbb
fs
mov
movsb
lret
lahf
pop
inc
jp
push
add
sar
sti
pop
jne
sub
add
mov
cwtl
or
leave
pop
push
loopne
sub
mov
mov
sub
notl
popa
dec
sbb
mov
stc
or
pop
add
inc
mov
gs
arpl
mov
imul
call
xchg
call
repnz
xchg
inc
rcll
pop
loope
out
test
out
push
jnp
adc
xchg
in
pusha
scas
int3
jbe
shl
xor
push
adc
add
ret
push
dec
or
fwait
inc
xchg
sub
pop
pop
sarb
test
dec
cmp
cs
leave
and
adc
xor
adc
push
mull
xor
pop
xchg
aas
daa
icebp
xchg
dec
fisubrl
sbbl
mov
int3
jl
xchg
leave
push
mov
fwait
xchg
shlb
in
jmp
sub
out
adc
icebp
shrd
mov
jp
sbb
adc
dec
fstps
jp
adc
aam
lods
add
out
push
cmp
mov
data16
imul
adc
dec
lock
aas
aad
int3
addr16
or
xor
test
iret
sub
mov
cmc
test
in
arpl
mov
repz
mov
out
jmp
addr16
dec
cmp
dec
xchg
adc
or
and
jmp
js
sub
mov
dec
std
cmpb
or
daa
xor
pop
jns
inc
in
fs
vpsllq
shll
les
xor
lods
inc
add
pop
add
mov
xor
lahf
xchg
and
dec
sub
push
fs
shrl
in
add
sbb
jecxz
out
dec
je
jno
mov
mov
mov
inc
je
add
mov
sahf
push
or
inc
out
hlt
jb
pusha
pushf
sbb
adc
dec
mov
pop
out
push
cmp
inc
out
cmp
and
cmp
and
dec
cvtdq2ps
cli
shlb
mov
or
cmpsb
pop
loope
sub
and
lods
sbb
cmp
add
inc
inc
dec
aas
push
jecxz
xchg
adc
and
test
dec
das
cmpsl
or
bnd
add
mov
push
dec
mov
outsb
js
movsl
stos
arpl
cld
mov
mov
sub
mov
lret
divb
mov
loope
sub
mov
cmp
push
cmpsb
dec
push
mov
insl
cmp
cltd
mov
mov
repz
and
lahf
push
aad
je
stos
mov
push
in
push
xor
test
shlb
out
pop
jo
jmp
movsl
xchg
lds
jo
rorb
addr16
and
sub
cmp
adcb
push
cmp
or
jb
jge
aaa
jno
xor
push
lods
push
test
jmp
push
pop
add
jl
dec
or
out
dec
cmc
add
or
je
inc
add
lods
dec
xchg
pop
loope
imul
jge
cmp
arpl
mov
push
add
sub
mov
into
inc
adcl
call
xchg
or
jns
fs
into
inc
jp
sbb
mov
mov
orl
xchg
mov
fwait
add
jbe
dec
mov
dec
sahf
enter
hlt
cmc
int
cld
fistpl
mov
cmp
xchg
pop
out
cmpsl
dec
popa
inc
xor
xor
mov
int
in
add
push
xchg
and
cmc
cs
jo
sbb
dec
imul
cli
call
xlat
fmul
test
jne
into
xchg
push
add
mov
push
xor
leave
jno
dec
imul
sarb
repz
inc
dec
push
in
push
cs
jmp
ds
in
scas
mov
pop
scas
cwtl
jno
pop
xchg
je
out
pop
out
ret
xchg
pop
pop
add
add
add
inc
movsb
imul
imul
mov
mov
add
test
and
sbb
mov
jo
xor
pop
inc
lret
test
push
imul
cmp
insl
mov
mov
sbb
and
imul
rcrl
mov
add
dec
and
add
inc
add
inc
add
movl
cmp
jne
mov
mov
add
mov
mov
mov
xor
push
mov
mov
add
cmp
pop
je
mov
jmp
mov
xor
add
jmp
mov
xor
add
leave
ret
push
mov
push
push
movl
cmpl
je
cmpl
jne
pushl
push
push
call
xor
add
dec
mov
jmp
movl
movl
cmpl
je
cmpl
jne
pushl
push
call
mov
dec
mov
jmp
movl
mov
add
push
mov
xor
add
sub
and
mov
addl
mov
xor
xor
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
push
push
pushl
pushl
call
cmpl
jne
mov
inc
mov
jmp
mov
add
add
imul
mov
cmp
jne
mov
mov
xor
jmp
mov
subl
mov
test
and
std
and
int
bound
ja
imul
add
loope
adc
add
orb
ljmp
xchg
sti
cmp
in
adc
xor
popa
add
mov
in
pop
out
flds
iret
pop
jbe
push
jo
bound
scas
pop
popf
iret
push
add
jae
mov
push
inc
fbstp
jmp
dec
outsl
test
or
ljmp
xchg
inc
pop
movl
pusha
push
mov
pop
pop
mov
roll
adc
and
movswl
popf
jmp
daa
xchg
aad
or
push
xor
pop
push
lea
ljmp
xchg
or
sarl
enter
movsl
and
push
clc
push
adc
jecxz
push
cmc
rclb
dec
into
cmpsb
jns
push
cmp
mov
push
imul
jl
insb
addl
push
cs
loop
mov
mov
jge
or
add
mov
inc
jb
loopne
mov
mov
lahf
or
shrb
or
rcll
xchg
sbbb
or
lret
fisttpl
fwait
int3
movsb
and
insl
add
loop
push
mov
inc
push
xor
ror
adc
xor
test
enter
dec
xchg
mov
pop
std
dec
jg
jg
xor
loopne
adc
fdivp
shrl
xchg
leave
gs
sti
lret
mov
clc
sub
xor
cs
cmpsl
mov
pop
aam
mov
push
fwait
lcall
sahf
xor
add
rolb
sub
fs
jl
int
sbb
ret
xchg
ljmp
dec
or
mov
ss
mov
decl
dec
xor
and
dec
leave
sbb
in
push
inc
inc
pop
je
or
fldt
jp
hlt
mov
sub
inc
sbb
out
mov
dec
fwait
dec
mov
jae
pop
idivl
xlat
fisttpll
mov
cli
xchg
push
jb
xor
mov
mov
mov
xchg
mov
mov
and
nopl
dec
ss
lea
rcrl
push
addr16
mov
mov
fidivl
inc
xchg
lea
cmc
jo
jnp
jb
arpl
call
pop
into
sub
fdivs
lret
mov
sahf
movsb
add
push
dec
aaa
inc
mov
mov
cld
mov
dec
mov
xchg
mov
inc
push
and
into
and
mov
jo
arpl
sbb
pop
sub
imul
sbb
cwtl
inc
pop
addb
pop
gs
out
stc
and
and
fadd
jp
cmp
cmp
fisttpl
mov
and
push
inc
aas
dec
subb
jns
pop
fsts
jnp
and
test
int3
push
add
sbbl
jo
dec
sbb
movsl
fldt
cltd
bound
into
or
mov
cwtl
mov
mov
and
iret
xchg
and
ficoml
jnp
scas
shll
ljmp
int
aaa
movsb
bound
ss
loop
adc
pop
ja
shl
xor
test
xchg
gs
sbb
sub
sti
add
and
dec
pop
mov
test
or
mov
fsubr
lock
xor
jbe
ret
nop
and
xor
sti
push
test
xchg
dec
sbb
lock
sub
aas
clc
loope
cmp
sahf
outsl
add
movsb
adc
mov
xchg
dec
or
clc
fwait
or
xchg
jmp
scas
aam
push
xlat
mov
sti
sub
in
mov
xlat
mov
and
in
dec
sub
add
int
fwait
jle
aad
pop
and
das
out
loopne
sbb
repz
cmc
fsubrl
or
scas
sub
push
xor
sub
and
lcall
scas
mov
inc
lods
jno
sbb
mov
push
sub
test
sub
test
mov
xlat
dec
jecxz
pop
inc
push
push
and
pusha
loop
mov
loopne
test
add
and
int
stos
xchg
sub
out
sarl
fnstcw
test
pop
test
and
fbstp
xor
dec
loope
imul
inc
push
push
jae
add
movsb
dec
fs
negb
push
adc
mov
mov
pop
fmul
ret
outsb
mov
insl
or
push
lcall
cli
mov
sub
sub
fisttpl
cwtl
adc
loop
push
add
pusha
mov
fdivrs
jo
scas
aas
loope
fistl
out
dec
in
mov
test
fnstcw
dec
mov
push
dec
stc
push
jbe
es
cli
sbb
and
daa
pop
ret
xchg
jb
fbstp
call
pop
faddl
and
lock
je
xchg
dec
push
dec
imul
jbe
pop
adc
dec
inc
mov
aam
add
xchg
fwait
lahf
inc
cld
add
jecxz
testl
lods
add
outsl
in
mov
loopne
sarl
mov
aam
jecxz
jmp
xchg
push
xlat
mov
dec
movsl
cmp
jns
adc
push
js
adc
stc
adc
in
dec
leave
les
jnp
outsl
xchg
xor
push
xchg
add
xor
jge
nop
cmp
movl
add
mov
inc
jo
xor
cmp
rcr
das
pop
aas
push
mov
or
adc
gs
insb
mov
adc
test
into
mov
mov
mov
ret
clc
xorb
fwait
cmc
mov
push
lock
divl
pop
mov
out
lods
gs
sbb
add
or
push
xchg
or
inc
sbb
pop
xor
aad
out
inc
xchg
cltd
mov
pop
push
dec
pusha
mov
inc
cltd
jge
mov
pop
mov
lods
mov
sub
out
add
push
dec
or
push
mov
in
clc
dec
xor
pop
xor
loop
incl
imul
ja
cmp
cmp
or
fcoml
icebp
fstps
adcb
mov
sub
xchg
fdivs
pop
lcall
arpl
jb
push
fildll
gs
sbb
xchg
or
or
cmpb
xchg
adc
pop
addr16
fistl
jge
mov
mov
or
adc
enter
je
adc
lds
lcall
xchg
icebp
out
jp
xlat
push
imul
sbb
pop
add
lcall
xor
pop
pop
imul
mov
sub
mov
jnp
push
lret
out
adc
cmp
out
and
test
aas
inc
stc
inc
sub
stc
in
or
cld
xchg
scas
inc
in
adc
jle
jmp
cmp
inc
inc
mov
or
aam
popf
cmpl
pop
add
das
test
mov
mov
mov
push
dec
mov
scas
subl
push
sbb
sub
jb
push
nop
test
sbb
not
leave
or
push
inc
enter
or
scas
mov
push
mov
arpl
and
add
xor
fimull
aad
mov
and
cmp
scas
inc
pop
outsb
test
inc
jo
inc
push
sbb
call
sbb
jl
fidivrl
xchg
nop
cmc
xchg
and
addr16
insb
loope
loope
mov
loop
int
aaa
jo
cwtl
and
dec
pop
jl
out
js
pop
les
andps
jmp
pushf
push
adc
add
in
jne
icebp
jne
sub
mov
test
ja
in
aaa
add
sub
dec
pop
mov
lds
divl
shl
fldt
sub
repnz
imul
cmp
dec
ret
daa
movb
icebp
add
xor
mov
xor
arpl
mov
add
shlb
mov
clc
xchg
lret
dec
popa
test
inc
mov
mov
lds
fsubrs
mov
iret
jo
pop
mov
es
sub
out
rol
xchg
push
icebp
pop
jmp
idivb
inc
xor
icebp
loope
pop
call
push
cld
aas
pop
jo
clc
cmp
pop
cmovp
mov
cmovae
push
add
stc
lcall
repnz
sarl
addr16
iret
adc
out
xchg
adc
xchg
int3
push
test
jecxz
mov
mov
int3
in
xor
pop
mov
out
xchg
pop
popa
pop
inc
xor
inc
mov
movsl
push
outsl
aas
into
sbb
leave
jg
and
dec
pop
aad
push
mov
xor
cli
mulb
sub
mov
pop
jb
shlb
lahf
psllq
xchg
mov
fdivp
inc
push
pusha
dec
and
add
out
lret
inc
test
out
in
mov
mov
stos
push
inc
adc
or
adc
add
dec
xor
jge
xor
fwait
cs
add
es
jbe
mov
negl
push
fimuls
and
and
xchg
pop
and
sub
inc
jge
addr16
cmp
mov
pusha
xor
pusha
repz
mov
dec
mov
in
adc
and
clc
clc
addl
inc
adc
jbe
clc
outsb
xor
sbb
aam
push
sub
xchg
pop
filds
xor
xor
jp
pop
daa
sti
sbb
push
iret
and
mov
and
mov
push
lock
pop
popf
fmuls
imul
xchg
push
mov
ss
sahf
fwait
adc
das
into
movsl
or
pop
sbb
dec
cmc
jo
xorl
dec
cltd
rolb
sahf
mov
sti
adc
pop
int
sub
subb
fdivrs
add
push
jmp
pushf
dec
popa
mov
or
arpl
fbld
bound
inc
pop
pusha
push
fstl
aad
shr
adc
fidivs
mov
sbb
je
inc
xor
inc
aad
mov
bound
jno
repnz
xchg
inc
jge
mov
cmc
xlat
mov
out
mov
push
jne
outsb
jns
pop
adc
cmp
xchg
inc
arpl
sbb
insl
mov
xlat
push
paddsw
cmc
cmpsl
int3
mov
cmp
xchg
fsubrs
out
pushf
mov
add
aas
iret
imul
das
push
loope
xchg
sbb
xchg
lea
arpl
mov
mov
fisttps
mov
mov
rorl
cmp
xor
shl
adc
stos
xor
mov
mov
std
shll
jp
aaa
mov
pop
inc
ret
cmp
fcmovb
aad
out
xor
add
les
xchg
pushf
push
loopne
jle
lods
inc
push
movsb
inc
cld
inc
in
stc
dec
test
pop
lret
mov
test
mov
adc
push
xor
test
jl
movsl
hlt
imul
rorb
cmp
xchg
inc
sbb
xor
cwtl
xor
mov
das
mov
adcl
mov
insl
pop
repnz
dec
fmul
sbb
or
inc
xchg
xor
dec
out
push
mov
pop
in
xor
mov
mov
arpl
ror
mov
std
jne
lahf
xor
and
movsl
xchg
mov
addr16
or
rorb
imul
mov
pop
sbb
popa
out
lods
lret
inc
adcb
inc
fs
mov
xchg
jo
je
mov
sub
xlat
sti
stos
sbb
subb
cmp
ljmp
dec
pop
popa
divb
testb
dec
cmp
icebp
mov
insl
cmp
fists
push
insb
xor
psubq
pop
loopne
inc
jno
push
lahf
testl
mov
andl
js
or
shlb
cmp
adc
dec
test
cmpsl
inc
cltd
jnp
test
pop
jmp
pop
sub
test
pop
mov
neg
cmp
cmp
pop
out
jo
and
xor
mov
aad
ret
mov
fs
mulb
and
popf
mov
mov
push
cmp
fldt
mov
mov
sub
pop
adc
dec
inc
mov
ja
sbb
xchg
xor
mov
pop
pop
inc
push
jl
idivl
lcall
in
mov
ficomps
cmp
inc
inc
je
pushf
adc
push
sbb
test
prefetch
or
div
popf
cwtl
jne
lock
loopne
mov
fxch
fildll
xor
pusha
enter
mov
add
aad
insl
fstl
ret
mov
jmp
pop
or
fwait
cmp
jmp
es
movsl
scas
clc
scas
pop
pop
cmpsl
xor
jecxz
ret
xchg
adc
jae
aam
dec
addl
mov
sub
inc
pop
xor
nop
pop
ror
clc
and
pop
pop
xchg
dec
inc
xor
enter
jp
shrl
cli
jnp
mov
mov
pop
mov
xchg
sub
iret
sbb
jb
lods
into
xor
rcl
dec
scas
fs
nop
in
repz
mov
jmp
xor
repz
cmp
jmp
xchg
loope
sarl
pushf
add
lds
fists
push
lcall
mov
addr16
adc
or
adc
adc
in
daa
sub
add
out
enter
or
or
pop
cmp
jge
lods
mov
pusha
filds
mov
sbb
mov
mov
dec
enter
ficompl
mov
or
addr16
jmp
dec
aad
loop
gs
jl
ret
in
dec
mov
cmp
mov
rorb
xor
or
fistpll
adc
xchg
fsubl
jb
fdivr
fidivs
out
pushf
pop
or
popf
jb
popf
into
adc
daa
xchg
imul
lahf
daa
push
inc
mov
xchg
test
out
xchg
cmpsl
ja
adc
cli
inc
sahf
bound
imul
xor
jo
jae
pop
or
sub
testb
mov
mov
scas
mov
jns
pop
mov
and
scas
jb
sbb
xor
outsb
mov
mov
lea
mov
and
lret
dec
popf
sub
cs
aas
repz
and
cltd
rorb
repz
push
xlat
sarl
scas
out
ss
pusha
aad
xor
xchg
das
fisubrs
jp
ljmp
ret
andb
mov
test
aaa
jmp
addr16
sub
mov
push
cmp
or
push
add
xor
icebp
push
push
push
cmpsb
inc
pop
cmp
les
ds
imul
xor
scas
adc
mov
push
addb
mov
outsl
push
pop
fimuls
sahf
lea
sub
dec
dec
cltd
into
adc
push
or
mov
stc
inc
push
jnp
movsb
mov
rolb
jb
testl
add
dec
mov
xchg
cmp
dec
test
ds
fdivs
and
xchg
mov
mov
hlt
add
stos
addl
dec
inc
leave
dec
jo
out
sbb
xor
add
mov
cld
aaa
sahf
sub
mov
cmpl
add
mov
jae
jno
cmpsb
and
sbb
les
dec
xor
inc
xor
cmpsb
int3
sub
adc
clc
dec
push
repz
jl
jmp
sbb
or
pop
adc
fdivrl
mov
sbb
test
test
lea
jae
inc
outsl
movsl
imul
out
push
dec
mov
dec
bound
push
jno
repz
cmp
and
popf
adc
sahf
adc
mov
dec
pop
jnp
mov
jle
xchg
add
repz
loopne
xor
shlb
ds
nop
loop
fildll
xchg
add
std
cmp
sbb
lock
mov
jecxz
push
push
ljmp
sub
or
push
stc
or
jge
clc
in
add
lcall
aaa
shrl
ret
je
mov
adc
pop
push
je
add
cli
clc
lahf
outsl
shlb
imul
cmp
notl
xor
fwait
pushf
push
add
inc
xor
cmp
pushf
jl
fnstenv
icebp
js
loope
push
or
push
lahf
xchg
sbb
rolb
loopne
adc
mov
cmpsb
push
gs
out
rclb
dec
or
inc
ret
jmp
imul
out
ret
in
jns
icebp
outsl
rcll
xchg
shll
mov
popa
repnz
aas
fstpt
mov
jae
insl
inc
dec
mov
xlat
xchg
lret
mov
jge
push
and
cmp
sub
jbe
int
push
ja
adc
mov
dec
inc
push
cs
jecxz
mov
jge
push
jnp,pn
in
mov
cltd
lea
xchg
fwait
test
sub
jns
cmc
in
cmp
das
les
pop
mov
bnd
leave
call
jns
mov
movsl
or
pop
push
roll
pop
subl
pop
or
cwtl
mov
jmp
ret
enter
dec
mov
je
lret
in
push
sti
bound
clc
push
mov
adcl
sbb
cmpsb
call
mov
pop
dec
popa
outsb
mov
sbbl
or
adc
mov
dec
jecxz
xor
dec
arpl
jle
orb
add
dec
push
ss
out
popf
xor
repz
movsb
sub
outsl
mov
iret
xchg
add
xchg
dec
loop
jns
jae
and
or
pushf
inc
fldcw
sbb
jnp
stc
lcall
dec
shll
pop
popa
fwait
push
sub
andl
jae
mov
xchg
fxch
call
cmp
adc
stc
jecxz
fimull
sub
ds
les
dec
dec
cltd
mov
andb
pusha
mov
and
mov
push
cmp
xor
scas
mov
scas
pop
pushf
and
jp
adc
xchg
pop
aad
inc
aaa
cltd
int
add
mov
mov
sar
leave
or
aaa
pop
jp
scas
test
mov
xchg
insl
sub
fstps
hlt
inc
dec
sbb
add
add
fists
insb
das
inc
mov
out
and
es
adc
insb
pusha
push
mov
scas
sbb
jae
push
and
sbb
out
mov
scas
fdivl
cmp
out
adc
les
notl
jne
gs
mov
out
out
int
sub
in
add
mov
add
mov
cmpsl
inc
fimuls
stos
cmpsl
and
add
test
cs
xchg
dec
inc
or
mul
adc
push
add
jmp
push
call
sti
xor
lcall
jnp
and
std
pusha
adc
cmp
cmc
xchg
shll
mov
jb
aam
divb
dec
in
addl
decb
imul
pop
aam
or
dec
outsb
lea
pop
pop
scas
shl
xchg
mov
inc
inc
push
and
in
arpl
aad
mov
push
shlb
push
je
push
push
in
in
imul
xchg
add
cmp
sbb
push
ljmp
stos
pusha
lods
sbb
adc
and
or
popa
cmp
movsl
test
icebp
fidivs
pop
inc
pop
push
aas
in
mov
jo
mov
pop
pop
subl
out
jb
hlt
or
mov
cli
inc
sbb
lcall
sub
fcom
scas
out
push
push
sub
rcl
xor
clc
js
xor
outsb
jns
inc
or
das
push
pop
adc
aam
test
push
inc
les
rol
aas
iret
xor
ljmp
lahf
sub
ret
sub
cmpsb
add
sbb
arpl
fidivrs
inc
ljmp
cld
movsl
sarl
inc
sub
push
pop
test
xchg
mov
or
loope
daa
outsb
dec
mov
adc
scas
enter
popf
or
cld
int3
hlt
mov
shll
icebp
jmp
xor
xor
in
push
hlt
mov
loope
cs
dec
int
cltd
repz
pcmpeqd
push
je
sahf
pop
in
push
or
test
ljmp
pop
iret
dec
sbb
mov
adc
xor
pop
mov
rorw
sbb
xchg
lret
and
loope
std
leave
dec
xchg
pop
xor
push
out
inc
mov
pop
ljmp
xor
lahf
cmp
mov
add
subb
ficoml
imul
aam
jno
std
test
inc
popf
iret
inc
sub
mov
call
pop
insw
xor
aas
mov
jns
jle
adc
andl
dec
es
ret
lret
fisttpl
daa
add
shlb
loop
sub
add
jecxz
push
xor
test
fs
xchg
dec
loop
nop
push
pop
orb
dec
cmp
push
jge
scas
mov
pop
data16
negl
jns
fcmovu
jbe
and
push
mov
addl
dec
dec
nop
adc
or
pop
fwait
xlat
push
cmp
imul
call
lret
or
xchg
and
es
lods
inc
jno
std
cwtl
or
pop
rcrl
stc
lods
pushf
stos
dec
inc
out
rcll
mov
add
add
dec
mov
faddp
sub
data16
insb
imulb
fwait
test
add
arpl
insb
loopne
xchg
cmpsb
fildll
loopne
push
pop
scas
enter
mov
pop
mov
mov
into
sub
mov
adc
mov
idiv
jg
lods
sbb
dec
lcall
in
addr16
xor
imul
jmp
flds
inc
jne
lock
mov
mov
scas
inc
pop
data16
sbb
xchg
out
xor
loopne
je
mov
xorb
movsb
lods
hlt
pop
mov
sbb
mov
mov
mov
ret
movsb
daa
adc
dec
push
jb
mov
pop
mov
dec
shlb
mov
fcoms
inc
inc
inc
cmp
sub
fstpl
push
sub
rorl
pop
dec
stos
mov
dec
mov
aad
mov
insl
test
daa
dec
and
insl
xchg
jle
jg
mov
push
aad
mov
push
push
cmp
pop
dec
dec
inc
popa
fistpl
mov
clc
push
xchg
pop
popa
shlb
and
cmpsl
sub
aas
cmpsl
lds
std
in
xor
out
lds
push
mov
pushf
lcall
push
sub
pop
adc
xor
and
les
imul
and
add
popf
ljmp
adc
sbb
clc
scas
push
fldenv
sarl
xchg
in
jmp
push
ljmp
cltd
adc
insb
aas
inc
or
mov
clc
test
push
dec
push
push
jg
fwait
jg
sub
pusha
aad
cmp
int
rol
call
cmp
pop
xchg
je
inc
rorl
jae
in
push
push
dec
xchg
lret
sub
fsub
xor
push
sbb
adc
xchg
add
addr16
jno
mov
or
sub
pop
push
pop
push
jne
mov
push
sub
icebp
push
xchg
lods
jnp
mov
dec
fcmovne
pop
dec
push
stos
pop
rcr
nop
push
push
jl
cs
push
test
mov
int3
stos
ret
xor
adc
sub
subl
adc
notb
mov
aad
scas
and
xor
ret
iret
ret
pop
sub
loop
xor
jmp
int
xchg
pop
push
out
outsb
idivl
dec
mov
js
mov
adc
imul
loop
mov
sbb
in
lcall
or
in
inc
or
test
mov
mov
mov
outsl
or
lock
sbb
cmpsb
cmpsb
xor
or
insl
scas
clc
inc
lret
or
xlat
cmp
jno
and
jle
int3
rep
mov
xchg
xchg
stos
notl
dec
cmpsb
sbb
xchg
sbb
cmp
repz
mov
mov
xorl
mov
jg
inc
fnstsw
cmp
loopne
subl
sub
jae
inc
movl
inc
xchg
mov
adc
inc
add
packssdw
pop
push
stos
notl
imul
pusha
add
sbb
inc
out
jle
out
repz
stc
popf
and
xor
mov
ss
rol
popa
jp
add
dec
mov
cwtl
jne
add
iret
xor
adc
ret
xor
pop
pop
test
or
movsl
jecxz
stc
int3
push
mov
inc
test
out
mov
pop
mov
xchg
aas
mov
pop
adc
push
test
push
push
xor
mov
out
xchg
ss
call
out
int3
inc
xor
cli
mov
lahf
pop
lahf
jp
ljmp
test
sbb
scas
xlat
adc
call
dec
pop
sub
mov
inc
daa
in
push
mov
into
pop
dec
pop
jo
cmpsb
sub
mov
mov
xor
sti
sbb
mov
xchg
movsl
dec
or
fisubrs
fs
pop
fimuls
mov
jo
dec
test
pop
cmp
xchg
and
mov
inc
mov
stos
jno
insl
dec
lods
xor
scas
decl
setne
push
fnsave
lds
jg
push
add
lock
xchg
inc
jae
dec
sbb
aas
fisubl
adcl
mov
jge
scas
xor
dec
mov
js
pop
test
popf
sbb
sub
cmp
push
enter
popa
call
cmp
into
or
mov
xor
xor
leave
popa
push
in
addb
int3
fstpl
jne
outsl
cld
lahf
icebp
pop
jmp
xlat
mov
rcll
out
leave
cmp
cmp
fistps
stc
das
pop
mov
push
outsb
test
push
pop
xchg
aaa
or
and
push
pushf
xor
movsb
movsb
mov
lods
jnp
pop
pop
jbe
pop
shrb
add
jnp
scas
lret
inc
sbb
sahf
jle
xlat
icebp
pop
cmp
aas
xor
and
nop
push
xchg
out
pop
in
bound
or
sbb
test
jmp
jno
mov
lds
inc
xchg
test
movb
push
add
lcall
lcall
add
test
cli
or
pop
mov
and
nop
insb
gs
les
out
or
lahf
mov
push
inc
or
pushf
mov
inc
scas
dec
xchg
loope
add
xor
out
sbb
mov
cmpsl
inc
andb
out
mov
sub
iret
lods
xchg
push
scas
cmp
clc
popf
sub
rorl
ret
lcall
jp
jge
sub
pop
adc
or
jne
repnz
sbb
les
pop
jae
out
push
gs
dec
adc
test
adc
loope
mov
pop
icebp
or
repz
cmpsb
dec
mov
sbb
and
push
out
mov
sbb
adc
cmc
push
jnp
mov
ficomps
pushf
cmp
mov
pop
mov
push
cwtl
mov
jmp
mov
lret
pop
push
hlt
pop
bound
xchg
sub
mov
pop
jmp
fstpt
les
push
mov
inc
mov
test
mov
pop
mov
aad
add
insb
aas
nop
idivb
test
insb
repnz
xchg
popf
cmp
xlat
out
inc
mov
push
mov
cmp
lret
mov
imul
cli
fsubrl
roll
cmp
push
jne
inc
pop
and
lea
mov
or
or
inc
add
xchg
sub
jns
lods
pop
or
ret
sbb
pop
mov
sahf
xchg
imul
adc
mov
jb
fwait
mov
out
cmp
js
adc
xor
xchg
jae
rolb
je
dec
and
aas
and
pop
cmp
test
sbb
mov
imul
pop
lods
mov
dec
les
lock
imull
imul
in
inc
lcall
add
mov
stos
gs
sti
ljmp
inc
clc
add
in
stc
mov
xchg
add
xorl
and
adc
sbb
out
cmp
out
mov
hlt
test
push
lret
mov
je
in
mov
icebp
lds
out
cli
test
divb
adc
or
orb
loop
and
sub
jb
jns
mov
aam
into
jmp
pop
aaa
in
out
pop
fcmovu
mov
xor
add
mov
nop
adc
push
jnp
push
sub
shl
dec
dec
cmpsb
xlat
inc
inc
cli
out
mov
xchg
inc
xchg
jge
scas
sbb
fmull
mov
mov
hlt
or
jb
leave
jno
imul
ret
or
sahf
fisubrs
xchg
shll
in
jbe
lods
mov
xchg
addr16
mov
mov
or
roll
jne
ljmp
xor
push
pop
xor
xor
or
jge
jmp
int3
push
add
jl
lock
xchg
inc
inc
sub
xchg
adc
dec
inc
out
cmp
int3
add
xor
sti
in
les
add
or
js
xchg
scas
or
rolb
sub
pusha
js
dec
cmp
inc
mov
fs
dec
or
ss
notl
test
adc
mov
arpl
pop
lahf
loop
mov
inc
sub
jne
fisubl
mov
adcl
pushf
out
dec
popa
cwtl
cmpsl
mov
sti
addl
stos
cltd
dec
cmp
and
out
outsl
aas
adc
std
xor
sbb
imul
mov
stc
iret
sbb
cmc
push
cmp
repz
jmp
or
xor
addl
inc
inc
repz
or
mov
inc
lahf
sbb
fildl
loope
push
pop
xchg
mov
leave
or
out
mov
loopne
test
push
popa
mov
push
mov
aad
inc
adc
pop
mull
enter
push
inc
jp
pop
fidivrs
sub
add
pusha
sub
or
adc
sub
test
pop
sbb
sub
pop
sub
sbb
xchg
test
lcall
xlat
vpand
mov
xor
dec
sub
nop
dec
pop
xor
gs
int
sub
ljmp
scas
xchg
aas
fcoml
cmp
jae
movsl
sbb
ja
addb
jg
xchg
mov
jmp
in
repnz
ss
outsb
movb
adc
cltd
xchg
hlt
arpl
nop
xchg
jbe
jno
jmp
jb
mov
mov
cmp
xor
or
pop
out
rol
out
rcr
adc
pop
ja
jmp
repnz
add
imul
jmp
mov
mov
mov
mov
mov
xor
xor
add
add
imul
mov
cmp
mov
je
xor
jmp
aaa
dec
cmpsl
sbb
xchg
and
and
popa
int
bound
jmp
jns
mov
xor
cmp
lds
pop
xor
mov
sub
cmpsb
adc
les
test
loop
adc
lods
sub
mov
aaa
clc
add
ja
adc
int3
arpl
hlt
pop
fdiv
mov
test
lods
xchg
jecxz
mov
ret
push
mov
pop
mov
adc
and
repz
repz
jns
out
sbbl
mov
hlt
add
loopne
ret
ja
mov
icebp
and
push
insl
xchg
dec
enter
xchg
cmp
lods
pusha
leave
pusha
iret
xlat
clc
jnp
mov
dec
pop
jns
ss
push
jne
jge
adc
push
jno
mov
int3
addr16
mov
rcrl
push
fisttps
mov
mov
add
mov
or
enter
rcrb
hlt
popf
sbb
pop
fwait
les
dec
sbb
popf
push
or
pop
hlt
pop
lahf
inc
out
dec
repnz
push
dec
out
cs
out
repnz
das
rsqrtps
addb
aam
lcall
repnz
inc
sbb
add
shll
pop
sti
add
test
dec
inc
dec
mov
mov
sbb
pop
pushf
push
pop
sahf
push
pop
or
mov
adc
negl
cwtl
int3
test
flds
add
sub
scas
and
ret
xchg
test
pop
out
inc
rolb
cmp
cmpsb
dec
loop
dec
xor
push
inc
clc
jecxz
in
cli
inc
fs
push
adc
aaa
xchg
inc
lods
outsb
stos
jecxz
dec
jp
shrb
mov
iret
mov
cmc
or
sub
pop
xchg
dec
and
inc
je
stos
lcall
add
jb
mov
xor
nop
push
inc
pushl
sarb
into
mov
or
mov
and
lock
xor
and
call
insb
testb
ret
scas
mov
xchg
cs
push
popf
iret
loope
bound
aam
into
test
adc
inc
xor
push
dec
and
clc
dec
jns
rcll
mov
add
inc
or
in
lods
sbb
jo
sub
jns
sbb
and
mov
mov
push
or
loop
sbb
dec
mov
dec
mov
push
in
add
pop
repz
cmp
test
jo
sbb
test
jnp
add
push
mov
sub
stos
adc
mov
pusha
stos
jb
dec
divl
call
loop
push
fsubrl
adc
ljmp
or
mov
xlat
inc
hlt
cmp
xor
mov
lods
inc
mov
sbb
push
lcall
jl
and
pop
rol
pop
les
cmp
gs
aad
aad
or
jp
fimuls
pop
dec
push
scas
sarb
xor
je
fbstp
sub
xchg
inc
adc
cmp
mov
dec
jne
sbb
push
std
push
cmp
nop
pop
insb
push
cltd
in
subb
xor
test
pusha
sbbb
out
push
imul
or
pop
cmpsb
lods
inc
not
iret
and
and
or
iret
sahf
cmp
fs
fisttps
rcrl
lahf
shrl
in
xlat
pushf
dec
mov
jns
cli
and
addr16
ficomps
in
scas
add
add
sti
mov
es
cmp
scas
aaa
cmp
sbb
mov
jne
imul
or
pop
aas
fdivrl
cli
cli
int
loopne
lods
push
outsl
ljmp
inc
fs
mov
push
mov
xchg
xor
add
mov
nop
test
aas
test
lods
cmpsl
das
fcoms
out
jae
jge
xchg
sub
push
and
pop
fidivrl
jae
adc
sar
icebp
pop
rclb
or
pop
xor
rorl
mov
cmp
stos
or
adc
dec
push
fsubrl
add
out
jnp
xlat
andb
xchg
ja
movsb
and
or
mov
adc
mov
dec
rclb
jns
and
lahf
rcll
and
lahf
movsl
sub
adcl
or
leave
adc
data16
jmp
pop
out
stos
lret
xlat
sub
sub
dec
test
test
pop
mov
in
cmpsl
push
ljmp
arpl
or
lods
mov
pop
cmc
push
call
loope
cmp
cld
cli
mov
mov
and
dec
xchg
cmp
xchg
and
fisttpll
call
mov
bnd
push
repnz
cmp
out
mov
dec
adc
mov
add
pop
pop
movsl
mov
lret
pop
or
xchg
mov
xchg
scas
push
stos
pop
adc
dec
lock
jno
push
dec
xor
push
jle
mov
sbb
push
jns
sbb
lea
stos
push
test
add
inc
clc
cld
sti
pop
inc
push
dec
fcom
mull
dec
ja
pop
add
mov
mov
pop
jle
xchg
or
inc
mov
nop
xor
sub
out
add
clc
sub
aad
jmp
cmp
les
push
jp
or
xchg
push
out
xchg
inc
sbb
xchg
sti
into
xchg
mov
xor
and
inc
xchg
sbb
mov
int3
dec
out
xchg
lret
test
cmc
adc
test
mov
mov
mov
cmp
int3
sahf
mov
mov
orl
lds
dec
sbb
je
mov
jmp
inc
sarl
adc
xor
inc
sbb
enter
push
gs
jo
std
movzwl
lret
pop
mov
add
addr16
and
sbb
xchg
fstpl
cmpl
xor
push
outsb
in
mov
xor
in
pop
sub
insl
out
dec
sbb
mov
jle
add
mov
xchg
fs
sbb
clc
xchg
inc
out
push
fstps
or
in
test
aam
sub
pusha
sub
shl
adc
ret
or
dec
or
mov
push
out
push
dec
xchg
ret
data16
es
mov
dec
or
and
cmpsl
adc
cmp
mov
mov
mov
sbb
fisubrs
and
pushf
in
aas
lods
sahf
scas
data16
xor
sub
pop
cmc
jne
dec
daa
fdivs
ret
in
leave
mov
mov
inc
test
fs
pop
jl
push
dec
cmp
insl
dec
mov
dec
movsl
mov
jo
dec
imul
jbe
add
mov
push
mov
movsl
lret
jmp
jnp
sub
cmpsl
mov
test
sbb
mov
xor
sbb
hlt
add
insb
fidivl
jmp
pop
or
xchg
lock
push
push
pop
jle
clc
sti
hlt
add
lock
adc
dec
in
cmc
xor
jne
lock
sbb
aaa
ljmp
aad
push
cmp
roll
and
push
rorb
les
js
xor
lds
subl
mov
repnz
mov
xchg
xchg
shrl
jbe
pop
mov
mov
xor
popf
xor
cmp
roll
loopne
loope
inc
pop
clc
inc
cs
xlat
leave
ss
cmp
shll
mov
sbb
push
icebp
adc
mov
das
adc
dec
jne
and
movsb
nop
xor
or
andl
cmp
mov
xchg
cs
xchg
lock
and
ss
push
hlt
xchg
jg
xor
cmpsb
or
jmp
pop
fstl
mov
cmp
cwtl
jns
sub
mov
xchg
adc
mov
pusha
sub
loop
out
and
push
sahf
jl
jg
divl
int3
lcall
push
sti
xchg
jmp
lock
mov
roll
shl
arpl
pop
ret
mov
mov
sbb
movsl
xchg
jns
bound
sbb
popf
cmpsb
xchg
pop
xchg
dec
popa
aas
lret
imulb
rcll
gs
std
sahf
adc
pop
sbb
sub
mov
shlb
mov
shll
mov
push
int
mov
call
cs
or
push
mov
ret
aas
mov
addl
leave
into
andl
lea
stc
shrb
pusha
outsb
cmp
xchg
test
cmp
sbb
mulb
sub
add
out
cmp
push
es
insl
pslld
xor
dec
fadds
in
scas
cmovb
sbb
cmp
dec
lods
mov
in
cmpsb
jle
cmp
mov
lret
inc
push
ss
cmp
stos
data16
fsub
mov
jmp
mov
int3
enter
enter
popf
outsb
lds
and
sub
std
xor
leave
inc
adc
jae
mov
js
push
inc
popa
fstpl
pusha
mov
add
sbb
orl
pop
sahf
push
sub
into
or
jbe
dec
lcall
dec
adc
leave
enter
jmp
push
std
cmpsl
fisubl
pop
js
xor
pop
dec
hlt
mov
shrl
mov
mov
stos
dec
pop
or
xchg
push
add
insb
sbb
or
xlat
dec
push
in
and
dec
or
cmpsb
pop
fwait
cli
sarb
sub
cmc
push
dec
repnz
fmull
out
inc
js
mov
enter
or
pushf
mull
push
sbb
push
cmpsl
or
mov
mov
loop
mov
rclb
adc
sahf
or
fstpt
int3
sub
adc
stc
push
into
push
push
lret
adc
dec
pusha
cli
mov
dec
xchg
test
pop
int3
dec
enter
mov
mov
rcrb
test
dec
push
fstpt
ficoms
ret
adc
mov
cld
pop
mov
add
mov
mov
in
lds
stos
xchg
icebp
pusha
out
push
xchg
mov
adc
enter
lret
out
mov
add
push
stos
outsb
pusha
dec
lahf
shlb
pusha
lret
in
pusha
fsubs
ljmp
push
out
cmp
sub
nop
repz
xchg
push
sbb
sbb
stc
pop
pop
or
jmp
pop
sahf
aas
fsub
jmp
pop
cs
mov
mov
loop
inc
rclb
xchg
sbb
adc
sub
inc
pop
dec
movsl
das
into
jmp
sub
mov
inc
mov
xlat
push
jnp
in
mov
mov
lcall
push
adc
je
xor
cmpl
les
jmp
movsl
clc
jp
in
adc
and
cltd
inc
test
jae
imul
cmp
mov
jo
and
pop
rcll
out
or
rcrl
sbb
or
and
stc
and
mov
ds
aas
ljmp
fnstcw
cmpsb
in
or
xor
adc
adc
aas
sub
ss
dec
popf
push
mov
sbb
dec
mov
cmpsb
mov
sub
xorb
jnp
mov
inc
xchg
adc
add
inc
pop
cltd
mov
mov
sbb
xchg
jnp
jns
insb
mov
stc
push
jp
fdivrl
push
imul
sbb
cs
adc
xchg
push
fistl
lea
sarb
add
add
mov
pop
sahf
test
nop
lcall
inc
insb
bswap
push
jne
xchg
inc
fdivrl
push
mov
cmp
into
popf
movlps
in
ds
adc
sbb
cmpl
jb
xor
jnp
pop
cmp
and
dec
call
jno
fcomps
loopne
add
mov
push
in
popa
adc
movsl
out
sahf
lea
inc
jnp
xchg
pop
or
push
xor
push
mov
cmpsb
sbb
jae
in
lcall
mov
lock
push
jmp
jge
pop
bound
push
sub
lea
cmp
rcll
mov
hlt
outsb
jae
daa
sahf
scas
push
into
cmp
in
test
push
lahf
scas
adc
push
lods
dec
imul
mov
in
test
inc
cmp
sahf
cmp
in
je
insb
xchg
xchg
xor
ss
mov
jg
repz
xlat
ficomps
movl
sub
sbb
push
leave
pop
repnz
or
ds
aam
pop
or
rorb
and
xor
gs
dec
xchg
out
lcall
mov
sbb
xchg
stos
jmp
dec
pop
cmpsl
incl
xchg
add
dec
push
test
and
lahf
sbb
push
jp
leave
fildl
push
or
mov
outsl
int3
loopne
push
out
sub
rorl
jmp
cmp
outsb
outsb
mov
dec
dec
lahf
inc
adc
sbb
fwait
push
sti
xor
loopne
pop
fisttpl
in
shll
inc
lds
mov
add
and
sti
cltd
mov
sub
testl
out
sub
add
xlat
ret
or
or
add
inc
sbb
ljmp
daa
pop
data16
sub
leave
in
sub
adc
jb
fwait
in
cmpsb
adc
cmpsl
nop
jp
push
push
pop
sub
mov
pop
push
xor
jl
shlb
or
jno
out
inc
jl
ficoms
push
shl
hlt
add
adc
mov
mov
sub
popa
ret
mov
mov
lahf
mov
mov
arpl
pop
jl
push
push
fs
out
cli
jle
mov
fwait
sbb
ja
push
adc
mov
jbe
punpcklbw
or
sbb
cmp
add
fsqrt
push
imul
push
and
push
daa
enter
add
movsl
jp
mov
push
cmc
jo
test
test
sbb
les
stos
out
cmp
sbb
in
adc
clc
ljmp
and
add
add
pop
pop
pop
ds
cltd
fcompl
cmp
cmp
mov
scas
insl
mov
repz
roll
pop
sub
int3
add
imul
cli
push
lcall
inc
into
test
iret
fisttpl
jbe
mov
scas
out
sub
sbb
adcb
jp
jmp
xchg
add
mov
popf
jle
lods
cmpsb
cmc
sahf
add
mov
xchg
dec
mov
mov
imul
jno
aam
lcall
xor
mov
xchg
xor
inc
enter
fildl
les
pop
xor
push
clc
inc
push
push
xchg
ds
js
loope
shlb
mov
lods
jp
cmp
out
or
in
leave
mov
jl
clts
data16
and
jo
stc
mov
je
pop
in
popf
outsl
inc
jle
push
xchg
mov
adc
lahf
sti
sub
mov
out
pop
adc
mov
mov
push
mov
and
fcom
lods
nop
std
fyl2x
add
fisubrs
pop
or
jno
icebp
andl
adc
sub
outsb
clc
loop
xchg
dec
stc
aas
sahf
xor
stos
adc
push
xchg
cwtl
data16
add
adc
mov
out
out
jle
in
rcr
jbe
movsl
jmp
ja
pop
arpl
pop
loope
fcmovne
notb
pop
sar
pop
mov
add
leave
push
ss
jnp
ja
movl
add
shlb
jle
sarl
outsb
sub
xor
aas
xor
push
inc
inc
push
out
xchg
inc
push
adc
push
fsubl
xchg
hlt
dec
ret
aas
jnp
cmp
push
out
popa
xchg
scas
cmp
stc
std
icebp
add
mov
mov
pop
test
repnz
xor
xor
mov
aas
jle
outsb
sub
fsubrl
pop
pop
adc
xlat
test
mov
xchg
sbb
enter
or
or
addl
cmp
loopne
ret
push
sti
inc
mov
out
mov
vpaddusw
repz
xchg
idivl
lcall
xchg
dec
and
shr
and
scas
mov
inc
and
mov
sub
cmp
dec
sub
add
sub
out
in
xchg
sarb
je
aaa
cltd
or
dec
and
xchg
add
fnstenv
cmpsb
mov
fdiv
sub
shrb
sub
popf
mov
stos
xor
std
aad
inc
rcl
aad
je
mov
mov
lods
xchg
dec
pushf
std
mov
lahf
sbb
push
bound
sahf
push
loopne
mov
test
push
xorl
scas
inc
negl
sub
stos
xchg
lds
push
loopne
lock
mov
cmp
ja
push
sub
jnp
insb
mov
ror
int
sbb
data16
jno
jge
sbb
add
pop
fbstp
dec
dec
inc
out
push
xchg
addr16
dec
in
jo
sahf
dec
push
mov
xchg
sbb
xor
push
popa
jecxz
fildl
stos
mov
pop
xor
andl
jb
sbb
adc
in
pop
pop
jbe
sub
adcb
not
mov
std
add
inc
sahf
lock
fists
mov
fmul
xor
xor
repnz
add
add
in
mov
sub
sbb
dec
clc
stc
aaa
div
popf
inc
scas
and
cltd
call
popw
enter
outsl
pop
arpl
sub
mov
mov
int
loopne
insl
and
push
or
popa
scas
inc
shll
ds
lea
mov
inc
lods
flds
fstpt
adc
sub
lock
mov
mov
sbb
out
jnp
xchg
xor
xchg
popa
mov
push
paddusb
ret
ja
call
sbb
dec
negb
push
and
pop
sbb
mov
ret
cld
jns
pop
jmp
mov
mov
imul
cmp
xor
jl,pn
push
inc
add
pop
lods
cmpsb
ficomps
shl
es
pop
jle,pt
sahf
shlb
xor
xchg
jp
pop
les
mov
insl
ja
xchg
xchg
lret
lods
daa
jmp
pusha
jecxz
xor
int
inc
fs
repnz
xchg
xchg
dec
xchg
xor
dec
pop
inc
xorb
stos
pushf
cmpb
pop
fimull
sahf
mov
imul
push
ds
inc
les
dec
push
cmc
arpl
or
out
pop
sub
pop
in
mov
cli
in
sbb
adc
out
inc
jno
rorl
fsubrs
adc
mov
mov
ja
orb
jecxz
gs
out
mov
jl
addr16
fistpl
pushf
mov
lock
aas
lahf
inc
rorl
xchg
inc
int
or
inc
inc
outsl
jae
in
xchg
loopne
sbb
and
dec
sub
sbb
mov
pop
sub
xchg
lret
loope
push
sub
dec
sub
hlt
lods
iret
or
sbb
addr16
aas
cltd
mov
push
and
xlat
test
loop
nop
pusha
aas
fistps
pop
jns
jge
sbb
test
lds
loop
pop
xor
pop
add
popa
push
pop
adc
mov
xchg
gs
dec
pop
fwait
inc
or
mov
scas
testb
lahf
test
and
int3
xor
mov
inc
xor
and
loope
imul
lcall
sub
pop
jg
iret
rorb
insl
mov
adc
mov
xchg
xchg
inc
orb
xchg
cld
aas
push
jl
inc
test
adc
pushf
sahf
mov
shr
aas
lock
mov
es
cmp
xchg
int3
insl
add
pop
cli
mov
nop
or
jmp
adc
loopne
cmpsl
fistpl
loop
lock
dec
stos
xor
clc
lock
fisttpll
push
xlat
pop
sbb
in
ret
adc
mov
repz
les
enter
les
add
inc
sbb
ficomps
loop
and
mov
sub
push
decl
jp
mov
es
dec
enter
and
in
jl
xchg
hlt
and
push
repnz
mov
push
outsb
fisubrs
inc
popf
dec
or
gs
imul
fwait
shlb
mov
xor
mov
and
add
xchg
add
popa
xchg
or
repz
stos
pop
jbe
pop
nop
mov
xchg
mov
xchg
in
dec
mov
inc
sbb
je
lods
addr16
jne
xor
xchg
insl
ret
mov
insb
xchg
rcr
mov
adc
out
not
sbbl
mov
jl
cld
call
fidivs
stos
stos
mov
add
jne
shr
lods
jae,pn
cmc
jmp
mov
push
cmp
cmpsl
jl
movsb
fcompl
ja
inc
movsb
sti
fnstenv
loope
xchg
inc
mov
and
dec
rcll
outsl
mov
out
stc
and
lock
mov
mov
test
sbb
jp
flds
stos
jo
movsl
mov
inc
stos
fptan
mov
nop
cwtl
dec
sub
push
iret
fildll
scas
or
stos
rorl
insl
mov
jno
mov
pop
ja
enter
lock
inc
enter
jp
fbstp
jb
loop
jbe
movsb
mov
js
cwtl
jno
push
in
lds
dec
mov
lahf
adc
ss
xchg
lods
pop
cld
jg
aam
push
xchg
push
rcrl
clc
inc
jns
cltd
mov
xchg
adc
xchg
xchg
rcl
nop
mov
or
repz
or
and
jecxz
outsl
into
push
mov
or
inc
lods
js
je
mov
clc
cmp
lods
add
bound
sub
pop
out
fdecstp
push
cmpsl
push
dec
jecxz
lcall
dec
ss
cs
andl
mov
jge
sbb
repz
sub
ret
insl
hlt
push
fnsave
mov
dec
and
pop
jmp
add
cmpsl
loopne
mov
mov
cmp
inc
iret
nop
mov
out
jb
addr16
jb
push
pop
push
sbbb
xchg
dec
cmp
pop
add
incl
cli
mov
jmp
cmp
rcrb
ljmp
mov
push
cmp
sbb
sbb
jns
or
inc
jno
pop
filds
int
pop
movntps
lea
out
and
aam
iret
and
lods
mov
pop
jle
mov
mov
xchg
mov
push
mov
mov
xacquire
fildll
test
scas
out
cmp
in
sub
test
jns
stos
int
or
xor
add
popa
pop
sub
rcll
setg
fmull
test
test
daa
rcrb
mov
add
jg
mov
add
out
lods
ljmp
push
xor
aam
adc
repnz
stc
add
fcmovne
sbb
bound
gs
push
mov
lret
cmpsl
scas
shl
jb
cmp
push
or
cmp
icebp
loop
add
adc
jno
pop
sbb
xchg
sub
adc
pop
ljmp
jo
fcoms
popf
lret
mov
mov
fldcw
lret
adc
or
adc
ret
pop
adc
das
call
aas
int3
ss
add
shl
fisttpll
sti
out
fdiv
add
aas
aas
mov
sub
jne
testb
mov
or
mov
push
je
sbb
aas
jo
outsb
xor
inc
addb
movsb
loopne
add
cmpsl
pop
dec
add
sti
xchg
negl
jno
repnz
fcompl
into
popa
popf
in
jmp
or
push
sub
sarb
ja
mov
cli
ffreep
cmp
sbb
pop
mov
add
adc
inc
rclb
insl
aaa
and
jne
daa
imul
out
int3
ret
nop
decb
mov
cmp
jae
push
cmc
mov
fwait
jmp
cmp
lahf
jmp
sbb
out
cmp
sub
fwait
add
decl
cmp
sub
rorb
sahf
mov
adc
std
sub
lret
sbb
mov
adc
sti
xchg
test
pop
push
cld
xchg
mov
pop
xlat
inc
cmpsl
shr
mov
xchg
xchg
pop
mov
xlat
mov
cli
push
jbe
into
shll
and
xor
test
cs
push
sti
bound
xchg
jo
insb
xor
popf
mov
inc
lds
cmpsl
push
test
cmp
aad
mov
rcrb
nop
addr16
mov
jns
data16
or
xor
pop
mov
jb
inc
inc
adc
arpl
rorb
in
jmp
cwtl
and
pop
dec
stos
scas
js
imul
aaa
jae
outsb
outsb
push
sub
stos
in
lods
mov
in
push
repnz
adc
addr16
shll
push
ljmp
adc
fdivr
cmp
sbb
nop
lock
das
push
lods
frstor
pop
das
or
pop
jbe
jo
std
mov
pop
es
mov
cmpl
sub
subl
addl
fnstcw
decb
mov
test
fnsave
pop
xor
movsl
jae
adc
sti
movsl
test
cld
fwait
mov
jmp
xlat
mov
mov
jno
aaa
nop
jge
or
add
js
cmp
dec
jbe
inc
jmp
adc
dec
out
mov
mov
push
or
imul
stos
add
das
lret
or
dec
sar
jb
pop
mov
rorl
shl
ret
sahf
inc
mov
inc
test
mov
push
jecxz
scas
dec
out
ret
cmp
fdivrl
sub
lock
push
inc
jp
in
movsl
push
cmp
in
push
stos
sbb
mov
ss
movsl
sub
sub
sbb
adc
frstor
sarl
and
push
xchg
push
pop
jle
jmp
mov
add
rcr
fidivl
fcompl
mov
inc
imul
xchg
mov
clc
push
pushf
cmc
cmp
push
outsl
sbb
lret
mov
sub
xor
sti
leave
arpl
jle
in
pop
mov
ret
adc
add
jge
hlt
je
fmull
lret
xchg
arpl
jp
push
jg
hlt
inc
ljmp
sbb
fnstenv
bound
notb
ret
imul
shlb
into
scas
adc
cmp
mov
bound
xchg
ror
dec
push
inc
ja
fmull
sbb
xchg
mov
daa
push
inc
cmp
adc
std
cmp
and
mov
add
insl
cmpsl
std
mov
pusha
dec
xor
mov
lret
sub
sarb
int3
pop
jns
test
or
sbb
js
lods
pop
hlt
and
lcall
pop
and
test
in
ljmp
movsb
xor
es
jl
les
ds
adc
push
cmpsl
ret
cmp
mov
add
rol
out
cmp
lea
dec
jmp
dec
jno
shlb
jg
pop
mov
fistpll
js
mov
lahf
pop
or
cltd
imul
xchg
in
ret
cmpb
dec
sub
cld
mov
stos
insl
pop
or
mov
sub
out
add
inc
lea
inc
scas
sbb
sbb
sub
xlat
outsb
inc
jno,pn
jp
and
ja
push
xchg
push
call
and
inc
repnz
mov
pushf
sysexit
push
or
sahf
adc
and
pop
cmc
inc
or
shrl
mov
and
mov
lret
xchg
fldt
in
or
push
cli
cwtl
or
pusha
and
sti
jmp
lods
cmp
pop
imul
mov
stos
dec
inc
movsl
out
aad
sbb
push
bound
fldenv
push
outsb
mov
pop
das
stc
cmc
stos
sbb
push
in
vstmxcsr
sub
pop
icebp
adc
in
push
hlt
vmovss
rorb
xchg
cltd
xor
fiadds
pop
inc
cmpsl
inc
push
mov
cmpsb
add
testl
mov
add
inc
xor
out
insb
mov
or
ljmp
mov
sti
les
push
scas
push
or
enter
fsubs
xchg
outsl
rorb
into
push
fmuls
inc
repz
sbb
mov
xor
je
xchg
cltd
mov
scas
push
wbinvd
pop
add
aaa
repnz
sbb
gs
rep
cmpsl
mov
add
das
jmp
jb
std
dec
pop
mov
mov
push
push
xchg
jns
push
loop
mov
imul
outsb
fs
add
bound
ret
cltd
mov
jl
lds
xor
fldcw
addl
cmpl
clc
dec
fwait
lock
xchg
cmp
pop
in
loop
jecxz
out
mov
and
sub
or
xchg
dec
in
xchg
push
popf
mov
lock
mov
ret
aaa
dec
add
stos
ss
pop
xchg
clc
lock
jmp
jo
repz
loopne
mov
loopne
imul
roll
and
jge
in
sbb
jae
and
negb
xor
loope
adc
xor
stos
daa
shlb
in
dec
js
fimuls
jle
push
cltd
xlat
xor
dec
cwtl
pushw
jp
xor
call
scas
pop
adc
and
xor
jns
pop
test
test
lret
loop
add
dec
lahf
jb
jns
in
mov
xchg
cwtl
xchg
mov
jge
bound
jo
mov
lods
cli
cmpsb
out
mov
cmp
hlt
ret
mov
cmc
in
stos
dec
cmp
ja
stc
jmp
int3
xor
mov
sbb
cmp
in
adc
push
movsb
repz
mov
jmp
fcomps
add
dec
or
mov
bound
add
ret
jmp
mov
add
adc
lcall
pop
ljmp
arpl
add
dec
adc
xchg
lahf
out
stos
jbe
mov
dec
repz
lret
out
imul
in
jne
jbe
xchg
cli
mov
jae
testl
add
in
jle
mov
stc
fcoml
loope
lock
mov
adc
cmpl
xchg
lods
xor
fldl
sahf
mov
pop
inc
pop
push
out
jae
cmp
ja
dec
push
jmp
mov
movsb
imul
or
faddp
loop
into
adc
or
push
add
mov
rolb
insb
fiaddl
mov
sbb
popf
sub
jns
sub
rorl
add
mov
mov
pop
leave
ret
pop
or
repz
sti
ja
stos
mov
repnz
add
add
xor
into
daa
pop
cmpsl
sbbl
cltd
cmpsl
ret
mov
neg
in
rcll
mov
js
pop
push
enter
jno
xor
or
xchg
cmpsl
mov
jp
xor
mov
cmpsb
mov
in
adc
push
add
lods
and
fldl
inc
pusha
test
rcrl
movsb
repz
jg
dec
mov
mov
dec
cmp
xor
popf
in
loope
sarl
mov
adc
add
lret
jbe
cmpsb
movsl
sub
xor
lcall
xor
nop
xchg
pop
iret
push
add
shrl
adc
cmp
out
pop
xchg
push
pop
xchg
add
pop
push
or
dec
rcrl
repz
rcll
leave
fsubl
jmp
imul
xchg
mov
fisttps
leave
cmp
push
clc
mov
iret
jge
in
push
sub
and
inc
clc
pusha
jno
xor
stc
add
pop
adc
and
fiadds
mov
mov
push
mov
jno
movsb
cmp
cmpsl
ret
cwtl
cld
mov
clc
out
aad
mov
loop
leave
lahf
push
cltd
push
aas
and
add
sbbb
add
sub
sub
addb
xchg
add
and
inc
mov
xor
icebp
jge
inc
push
int
adc
lea
cs
clc
cmp
decb
adc
sbb
mov
mov
xchg
dec
into
test
ja
sti
inc
aas
jo
out
inc
inc
into
cmpsl
xchg
fistl
xlat
adc
mov
xchg
sahf
push
fiaddl
es
jns
mov
sub
mov
mov
mov
add
dec
jl
jnp
pop
lods
sbb
adcl
jbe
iret
xorl
add
sbb
hlt
into
xchg
imull
bound
jnp
jg
scas
add
das
and
aam
aam
ljmp
je
lods
lods
mov
add
mov
insb
pop
stos
sbb
cld
popf
mov
les
sti
out
xor
jmpw
popa
sarl
popa
or
and
loope
mov
push
dec
test
addb
xchg
dec
stc
dec
sub
sub
inc
paddsb
mov
mov
lock
int
cmp
out
fs
sbb
mov
daa
gs
xchg
add
pop
rolb
popa
aaa
out
in
icebp
mov
rcrb
in
add
jo
dec
adcl
xor
cmp
int
add
lret
dec
jle
sti
cmpsl
mov
dec
mov
push
mov
add
mulb
das
test
out
call
ficoml
mov
xchg
aad
mov
bound
cmpsb
lcall
add
mov
mov
in
stc
cwtl
lret
mov
in
sbb
sti
add
call
mov
xor
arpl
cmp
cmp
jle
bswap
mov
jg
mov
mov
popf
nop
pop
add
adc
addr16
loopne
lahf
aad
or
aad
mov
or
stos
jmp
adc
icebp
adc
fisubrl
imul
cwtl
insl
adc
fisttpl
jmp
int
cmp
nop
jl
add
out
lods
cmp
stc
stc
loope
xchg
add
add
jg
divl
inc
xor
jge
jno
mov
int3
jp
pop
iret
mov
push
xchg
idivl
mov
jb
mov
pushf
in
add
add
pop
pushf
lds
xchg
inc
test
jo
push
repz
out
mov
hlt
add
pop
xchg
adc
push
jne
imul
or
data16
fs
test
cmp
cmp
lods
push
and
jns
adc
push
jmp
jle
mov
pushl
mov
xor
xor
xchg
add
push
xor
gs
aaa
push
loopne
mov
add
add
or
xor
test
mov
pop
adc
or
pop
push
lods
flds
mov
pop
jecxz
adc
sar
and
dec
repnz
mov
pop
bound
les
mov
xchg
iret
aas
cli
xor
cli
lods
mov
std
outsl
mov
pop
fisttpll
das
mov
in
imul
adc
test
test
mov
out
dec
aam
mov
inc
xor
iret
dec
fisubs
ret
xchg
inc
data16
push
test
or
inc
loope
enter
pop
add
dec
inc
sub
das
jle
jg
imul
or
arpl
fildll
add
jnp
pop
fsubs
divb
icebp
push
lock
adc
sahf
std
adc
fisubrs
std
or
int3
jl
jp
bound
cmp
add
inc
int
mov
mov
or
mov
setbe
pop
stos
lcall
test
push
xor
ljmp
push
jae
cmpsl
pop
xchg
mov
inc
mov
in
int
dec
mov
mov
xor
xor
roll
jecxz
lahf
jnp
xchg
mov
icebp
in
lods
sbb
lds
fstps
add
addr16
and
mov
mov
xor
mov
add
test
stc
stc
fcoml
mov
cwtl
mov
jo
loope
lret
repnz
add
loope
mov
je
pop
pop
sub
call
mov
xchg
rep
test
mov
push
or
xchg
jl
dec
jl
sbbb
sbb
pop
repz
xchg
or
les
or
xor
movsb
sbb
repnz
andl
mov
inc
xor
mov
daa
fwait
xchg
push
push
cmp
addr16
add
push
idivl
out
out
jno
dec
imul
scas
loop
and
add
ret
or
ret
lods
sub
mov
pop
xor
add
iret
repnz
lret
mov
ret
add
sbb
in
dec
rcl
push
xchg
sbb
sub
dec
xchg
jge
cmp
in
nop
in
fdivl
sub
and
ss
xlat
inc
scas
or
mov
and
pop
mov
mov
rcrb
xchg
inc
out
fsubl
call
dec
inc
jle
fninit
jno
dec
aas
and
add
rcl
or
cli
inc
mov
fildll
lret
int3
es
xor
fucom
mov
xchg
adc
lcall
lock
add
fld
add
ror
outsl
clc
rorb
push
push
movsb
add
out
pop
inc
mov
out
mov
xchg
cmc
iret
lret
ja
into
mov
aad
cmp
adc
cmp
cmp
push
cmp
sbb
mov
movsb
pop
push
pop
sbb
jnp
mov
aad
cmp
int
jl
mov
dec
fcomi
inc
cmp
lret
leave
inc
mov
cmpsl
hlt
imul
test
ds
bound
lods
jg
mov
adcl
mov
dec
add
lock
lods
rcr
iret
jb
push
add
jmp
add
lock
out
repz
mov
ret
in
sbb
push
xchg
add
add
les
and
es
mov
sbb
add
add
add
add
inc
add
pusha
inc
add
inc
add
pusha
inc
add
inc
add
pusha
inc
add
inc
add
jo
add
inc
add
jo
add
inc
add
jo
add
inc
add
jo
add
inc
add
addb
addb
addb
addb
addb
addb
addb
addb
data16
jp
jbe
ja
js
jno
arpl
inc
dec
outsl
pop
inc
jb
jns
inc
pop
dec
add
add
inc
add
aad
add
mov
jns
xor
dec
cmp
dec
js
cmp
dec
inc
dec
jae
inc
dec
xor
dec
pop
pop
pop
push
cmp
dec
xor
dec
cmp
dec
js
cmp
dec
inc
dec
mov
dec
xor
dec
pop
insl
pop
bound
dec
jns
xor
dec
cmp
dec
mov
dec
inc
dec
pop
jge
jb
subb
xchg
jns
aas
dec
test
dec
test
dec
mov
dec
inc
dec
xor
dec
pop
lea
outsl
xchg
outsb
xchg
jle
jns
aas
dec
test
dec
test
dec
mov
dec
inc
dec
xor
dec
pop
popf
pop
xchg
outsl
mov
jns
aas
dec
mov
dec
lods
dec
cmp
dec
mov
dec
inc
dec
pop
lods
pop
mov
jle
jns
aas
dec
mov
dec
lods
dec
cmp
dec
lahf
dec
cmp
dec
inc
dec
pop
mov
outsb
ret
jle
jns
aas
dec
mov
dec
lods
dec
cmp
dec
lods
dec
cmp
dec
inc
dec
pop
int
ret
outsb
sarl
jns
aas
dec
mov
dec
lods
dec
cmp
dec
mov
dec
inc
dec
pop
fstpl
outsl
loop
jecxz
repz
aas
dec
lea
dec
lahf
dec
cmp
dec
xor
dec
pop
in
pop
loop
repnz
repz
jns
jle
jns
cmp
jg
xor
dec
xor
dec
cmp
lods
dec
cmp
dec
inc
dec
pop
or
outsb
adc
jns
aas
dec
add
rolb
pop
aam
add
inc
add
aad
add
add
aad
add
inc
add
add
aad
add
test
pushf
clc
pop
aam
add
inc
add
inc
add
inc
add
inc
add
aad
add
or
subl
push
orl
add
cmp
ds
add
inc
imul
in
incb
aas
cli
mov
add
xchg
pushf
clc
mov
pushf
clc
mov
xchg
pushf
clc
mov
xchg
pushf
clc
mov
xchg
pushf
clc
mov
xchg
pushf
clc
ljmp
add
jbe
mov
pushf
clc
sbb
push
pop
es
add
push
rolb
sbb
add
mov
inc
add
pushw
addr16
pushw
push
es
inc
add
dec
cmpsb
dec
lahf
dec
movsb
dec
insl
dec
bound
dec
add
cltd
dec
pushf
dec
fwait
dec
insl
dec
bound
dec
scas
dec
lods
dec
lahf
dec
mov
dec
xor
add
dec
test
dec
fwait
dec
xor
add
add
add
add
mov
mov
mov
mov
mov
mov
mov
jae
jo
jno
jbe
ja
je
jne
mov
mov
lods
jge
jge
jns
mov
insl
enter
jb
test
hlt
test
test
fnstenv
mov
push
or
xlat
out
add
scas
adc
jge
fidivs
leave
hlt
cmpsb
cmp
mov
cmpsb
and
and
cmc
enter
adc
jno
jp
dec
aam
add
adc
imul
insb
push
imul
push
insb
inc
push
inc
jo
dec
dec
pop
jp
jbe
pop
jo
inc
push
jb
inc
je
inc
jae
dec
gs
inc
push
jno
ja
dec
dec
dec
inc
jno
jae
dec
inc
inc
inc
push
dec
insb
dec
jbe
pop
jbe
inc
fs
push
inc
add
inc
outsb
imul
push
push
push
jne
insl
push
push
jo
addr16
pop
add
push
pop
inc
inc
outsb
popa
imul
jne
dec
add
bound
dec
ja
dec
inc
inc
push
add
je
bound
dec
bound
pop
outsl
push
inc
gs
dec
js
inc
js
arpl
add
add
add
jb
outsl
pop
dec
push
dec
jns
js
outsb
pop
jae
push
arpl
push
push
je
addr16
dec
inc
insl
inc
inc
inc
arpl
push
inc
popa
push
dec
imul
push
push
imul
dec
jns
push
inc
jo
imul
fs
inc
push
push
ja
jp
push
arpl
dec
dec
data16
imul
dec
cmp
dec
lods
out
mov
js
std
ljmp
stos
add
add
add
mov
sub
fwait
jno
loop
popa
lock
mov
cmc
inc
xor
jno
cld
cwtl
stos
fmuls
out
push
sbb
js
inc
xor
fs
call
loope,pt
les
por
mov
pop
daa
ljmp
or
jg
adc
mov
out
mov
js
jl
lods
pop
popf
pop
xchg
pop
dec
testb
lcall
shlb
xchg
mov
mov
xchg
in
add
sbbb
add
push
lock
sub
cli
jl
xlat
push
sub
ss
repz
add
stos
add
add
daa
cltd
jmp
aad
loopne
cmp
cmp
mov
dec
fidivrs
loop
xor
jno
test
lret
int3
dec
mov
xchg
dec
loopne
mov
dec
outsl
ss
loop
icebp
pop
sti
ficoml
jg
cmpsl
or
repnz
fxch
clc
dec
sete
sbb
movsl
sbb
push
and
sbbb
xchg
lods
sub
inc
dec
aaa
jno
outsl
in
add
xor
sub
or
lret
add
outsb
cmpsl
mov
mov
or
pop
xchg
cmp
inc
mov
pop
push
xchg
pusha
ror
mov
inc
add
mov
jg
ljmp
push
pushf
popf
xchg
add
stos
add
add
nop
lods
xor
cmc
and
and
lea
call
test
insl
sbb
cmp
icebp
jb
push
cltd
and
outsb
jle
stos
andb
xor
mov
mov
mov
int
sub
lods
adc
out
and
mov
test
int
xchg
and
xchg
sbb
xchg
pushf
test
pop
dec
mov
mov
icebp
sti
rcrb
xchg
sbb
mov
and
xchg
repz
xlat
or
in
dec
sbb
std
out
stos
inc
loope
adc
clc
out
sub
xor
jecxz
add
cmp
cmp
in
fimuls
test
inc
cwtl
add
stos
add
add
or
sbb
cmpsl
fnsave
lahf
adc
pushf
fiadds
xchg
cmp
mov
shlb
pop
pop
insb
jle
jne
xchg
jmp
je
sahf
xchg
pop
scas
popa
adc
xor
push
adc
xlat
pop
sbb
push
fbld
in
lock
add
dec
test
sbb
lahf
xor
outsb
push
arpl
fs
js
jge
mov
aas
adc
pop
sub
js
inc
sbb
rep
lock
aam
mov
leave
insb
sarl
xchg
sub
mov
aas
jmp
popf
adc
mov
fnstenv
std
negb
sub
pop
mov
sti
icebp
cwtl
add
stos
add
add
jns
loop
or
loope
out
add
pushf
cmp
mov
pop
test
jns
mov
inc
notl
cmp
mov
clc
fldenv
sbb
pop
jne
dec
cmp
sub
xor
adc
dec
push
adc
mov
mov
sub
out
mov
iret
cli
mov
mov
btl
loope
mov
pop
je
add
cs
dec
cmp
adc
cmp
adc
lea
jmp
lahf
hlt
es
cmp
cwtl
pushf
aad
adc
pop
scas
push
push
xor
mov
pop
daa
decb
add
xor
jb
inc
mov
loop
cltd
add
stos
add
add
rcll
and
inc
ljmp
adc
push
adcb
lret
adc
into
es
adc
mov
imul
call
bound
and
push
orb
out
inc
adc
out
sub
ret
icebp
push
and
psubb
fsubrl
addr16
cmp
cltd
jl
inc
jge
cmpsb
push
int3
stc
cwtl
cmp
subl
lods
pop
sti
mov
icebp
sbb
and
inc
sub
out
sub
in
je
call
movsl
jge
xchg
in
mov
add
dec
in
fwait
scas
fdiv
pop
sub
roll
add
stos
add
add
sti
sub
idivb
pop
jge
sbb
inc
sbb
leave
fistl
cmp
cmc
dec
int3
dec
pop
xorl
shlb
ficoml
push
jg
jnp
popf
inc
lret
pop
popa
xor
pop
imul
stos
pop
mov
cld
repz
jecxz
cmp
jecxz
call
fstps
sbb
pop
jb
lods
push
jo
push
jo
inc
jno
dec
aad
and
push
sub
int3
mov
add
sbb
jle
cmp
pushf
and
push
cmp
aaa
sub
mov
stos
sub
je
add
mov
aam
xor
and
out
lcall
fildll
in
xor
jae
xor
sub
dec
adc
inc
adc
scas
insl
pop
test
fstl
mov
test
movsl
xor
jo
test
mov
xchg
movsl
dec
icebp
test
cmpsb
pop
cmp
lcall
and
push
pop
mov
and
movsl
jge
fs
or
sbb
xor
shl
add
mov
data16
out
imul
dec
mov
stc
pusha
mov
in
jae
inc
das
sub
fnstenv
sbb
cmpsb
movsl
outsb
sbb
add
push
add
mov
out
add
cltd
fwait
add
stos
add
add
stc
outsl
loope
jle
dec
aad
push
lock
sub
sub
int3
shll
cs
xlat
sub
inc
xchg
jle
mov
inc
aaa
lea
push
mov
add
cmp
add
sahf
mov
sub
xchg
jl
imul
cmpl
loop
lods
out
fcompl
mov
jmp
les
mov
push
inc
sub
lret
mov
test
les
lcallw
adc
loop
jbe
mov
jb
std
in
jl
dec
sahf
dec
mov
das
jle
cwtl
xchg
enter
adc
add
mov
jmp
fimull
fadd
ret
add
stos
add
add
das
cmp
and
or
push
jns
lods
inc
imul
or
sahf
xor
or
aaa
popa
sub
mov
sub
cmp
jg
popl
mov
outsl
aaa
cmp
int
jecxz
jbe
out
pushf
push
add
insb
in
clc
xor
outsl
sub
pusha
jge
stc
out
xor
jg
mov
xor
aam
push
jmp
iret
movsb
punpckhwd
das
pop
cmp
aad
dec
shll
jnp
mov
pusha
sub
mov
repnz
xchg
out
dec
popf
ja
jp
jae
mov
fsubr
dec
scas
mov
icebp
dec
sarl
fimuls
pop
inc
pop
iret
pop
aad
ss
dec
mov
stc
in
pushf
add
stos
add
add
icebp
mov
pusha
out
out
lds
pop
xchg
mov
mov
ret
push
xchg
fcompl
iret
dec
rorb
mov
or
sahf
xchg
push
pop
ja
sti
xor
or
xchg
movntq
out
add
mov
push
in
imull
sub
fisubrl
jmp
xor
hlt
lea
inc
dec
add
push
ja
arpl
mov
jb
ja
mov
imul
fstl
jmp
aas
xor
int3
mov
and
gs
sub
cmp
and
cmp
icebp
cmc
jg
jg
cmpsb
lahf
or
xchg
add
cld
or
popf
add
stos
add
add
mov
fwait
mov
mov
and
fidivl
aaa
out
out
repnz
insb
stc
std
dec
aad
cwtl
test
sti
leave
lahf
push
loopne
add
mov
mov
pop
dec
iret
adc
cmp
stos
add
jp
test
mov
sbb
inc
ret
cmp
sahf
scas
and
sub
mov
lret
add
gs
lcall
pop
sub
cmp
jnp
lret
mov
shrb
icebp
sbb
add
outsb
jae
lret
jle
repz
jno
inc
sahf
add
stos
add
add
dec
pop
pop
sub
pushf
fists
out
sbb
in
das
add
push
stos
les
push
cmc
jb
fs
mov
dec
sbb
lcall
cwtl
inc
add
sub
push
pop
bound
pop
je
fistpl
adc
cmc
jbe
ljmp
js
push
push
shrl
mov
adc
fstps
insb
and
add
dec
loope
loop
push
aam
lock
jle
sbb
inc
cmp
mov
inc
xchg
das
jmp
push
xor
cmp
inc
add
cmc
adc
adc
mov
lds
jmp
add
stos
add
add
push
inc
ljmp
test
push
outsl
pop
cmp
stos
push
enter
cmp
shlb
sbb
in
pusha
xchg
addr16
xchg
adc
ss
test
push
xchg
shll
inc
fdiv
xchg
lods
or
push
or
data16
mov
mov
aaa
imul
mov
xchg
push
das
cmp
or
push
dec
fldl
dec
dec
fcmovnbe
cmp
or
js
cmp
jns
mov
popl
lock
pop
mov
sbb
mov
jecxz
dec
dec
push
int3
lahf
cmp
mov
gs
into
and
je
add
mov
lock
mov
rcl
adc
xchg
lahf
add
stos
add
add
cmp
xchg
pop
shr
lcall
jo
jmp
adc
scas
lret
add
fucomp
push
push
add
push
jg
mov
mov
fldt
sbb
jmp
mov
mov
jnp
jg
in
lcall
xlat
or
in
cmc
cwtl
icebp
insb
ss
dec
push
mov
add
xchg
push
aaa
mov
enter
jp
ret
pop
jb
cltd
imul
popf
push
jb
outsb
and
clc
sub
jae
xchg
or
cmp
push
mov
mov
add
sqrtps
cmc
das
sbb
xchg
iret
push
xor
add
stos
add
add
inc
lret
mov
ficoml
sub
sub
sub
scas
mov
cmc
lret
jmp
push
and
aaa
sub
dec
adc
push
lret
clc
xlat
dec
xchg
test
addb
outsl
adc
movsl
push
fistpll
push
push
mov
sbb
mov
lcall
add
jbe
icebp
pop
xor
mov
mov
aad
add
lahf
jo
inc
push
insl
dec
xchg
dec
out
jbe
inc
test
or
jle
dec
push
mov
push
jge
sbb
jle
and
xchg
out
fstpl
add
int
xchg
inc
cmc
sti
fildll
push
imul
stos
add
add
mov
mov
clc
xchg
movsl
cmp
fldenv
sbb
sbb
mov
inc
dec
xchg
imul
mov
sahf
dec
popf
addr16
out
jg
xor
lret
inc
daa
xchg
test
lret
adc
in
packuswb
movsl
jl
and
movsb
fsubrl
and
mov
fisubl
xor
sbb
pushf
jae
xor
std
out
push
jmp
fistpll
sub
mov
inc
outsb
addr16
loope
or
jp
xlat
enter
xchg
inc
movsb
andb
stos
or
jge
xchg
add
add
adc
testl
push
bound
add
add
sti
jle
das
xor
lods
ja
sub
push
xchg
lods
insl
filds
mov
jecxz
mov
fxam
xor
sbb
scas
mov
aam
lods
xchg
stc
stc
adc
and
push
rolb
cmp
sarb
cld
pusha
rcrl
cmpsb
xor
cmpsb
inc
jnp
inc
mov
sbb
insb
push
inc
cmp
inc
sub
inc
clc
or
sbb
dec
add
ret
int
repnz
cmp
mov
jo
push
shl
enter
add
mov
push
rcrl
and
push
cmp
cmp
add
push
imul
cmc
and
stos
add
add
out
and
push
xchg
jecxz
pop
cmp
adc
xchg
jmp
mov
sbb
js
test
in
cmpsl
mov
jb
sbb
bound
mov
xchg
inc
rorl
popa
pop
scas
sbb
push
idivl
sbb
add
add
mov
stos
pop
mov
pop
mov
pop
sub
inc
adc
arpl
jp
sub
dec
jge
sub
in
fdivs
push
xlat
jg
fcomi
sbb
aaa
or
mov
cmp
cltd
xchg
push
add
add
jne
jg
clc
cs
push
push
mov
add
sbb
jno
and
fimuls
mov
jmp
push
sahf
outsl
ficompl
adc
jl
ret
fadds
adc
jg
jle
ss
lods
jp
shrb
fnstcw
das
scas
xor
movsl
or
push
push
movsb
aam
mov
mov
test
xor
ss
mov
fsubr
dec
push
ja
fsubrl
insl
dec
xchg
stos
iret
push
sub
pop
int
repz
mov
sahf
and
pop
call
jo
mov
mov
pop
fnstenv
dec
rorl
or
dec
mov
je
lcall
add
stos
add
add
jae
push
dec
out
enter
lods
cmp
adc
cmp
scas
dec
xor
mov
ret
mov
in
mov
jp
sub
inc
mov
es
mov
mov
filds
bound
mov
mov
loop
xchg
fistl
ret
insb
xchg
adc
dec
popf
mov
jae
je
bound
add
push
push
clc
or
test
push
xchg
leave
dec
dec
dec
fbstp
fcompl
ret
push
shll
cltd
jecxz
mov
sbb
pushf
inc
aaa
aam
push
add
fists
dec
mov
xchg
adc
mov
add
stos
add
add
dec
and
popf
jno
sbb
stc
xchg
fs
and
and
push
mov
loope
dec
es
push
add
in
add
loopne
popa
xchg
ret
cli
pop
outsb
lock
mov
inc
mov
cmp
mov
dec
sbb
add
inc
movsb
loop
push
loopne
push
add
popa
mov
mov
dec
cmpsl
sbb
inc
or
inc
shll
mov
mov
xor
pushf
mov
dec
jecxz
push
pop
mov
shll
shrb
cltd
adc
cmp
mov
lock
imul
movsb
xchg
add
fisttps
push
mov
jno
push
mov
add
sbb
daa
sar
add
insl
cmp
jo
mulb
pop
mov
stos
xor
cli
pop
xchg
or
jecxz
cmpsl
jnp
mov
negl
cli
test
int
sub
inc
or
xor
idiv
nop
xchg
es
fisubs
in
push
jnp
dec
add
loopne
jl
dec
call
dec
add
push
pop
fldcw
mov
xor
or
lret
dec
xchg
or
dec
pop
mov
mov
fiadds
dec
dec
not
xchg
dec
cwtl
mov
mull
aaa
sub
add
add
jle
out
sbb
mov
mov
add
arpl
iret
clc
hlt
in
jno
dec
jle
sub
jl
stos
rcrl
lods
cs
and
push
ds
jne
ret
loopne
push
cmpsl
stos
mov
inc
jns
ds
clc
addr16
mov
data16
cld
sbb
mov
insl
dec
iret
inc
or
imul
pop
fcmovnb
push
cltd
jg
fistpl
push
out
icebp
jl
mov
icebp
bound
pop
cltd
or
sub
sub
call
xor
xchg
sbb
ficompl
pop
fnstsw
push
inc
popf
lret
fs
push
jmp
add
and
cmp
add
cmpsl
lea
add
xchg
cs
in
and
and
popl
jg
mov
test
data16
aas
cltd
rcll
rcl
cwtl
mov
cmpsl
jnp
mov
jl
add
mov
idivb
mov
sub
aaa
nop
daa
sahf
mov
pop
cmpsl
imul
adc
jecxz
test
mov
fbstp
mov
data16
pop
mov
loopne
sahf
and
popw
out
sbbb
cwtl
icebp
je
movsb
shll
imul
ja
sub
ja
fstl
repnz
sub
gs
jg
cwtl
aas
add
xchg
nop
ffree
popf
aam
inc
sub
push
mov
add
xchg
mov
ja
out
cmp
cmp
lret
fsubr
jne
mov
ja
in
mov
inc
jb
xchg
pop
loope
faddp
jg
negl
cmpsb
mov
cli
dec
enter
mov
cmpsb
add
jb
mov
sbb
cs
adc
and
cld
push
pop
add
mov
xor
pop
fiaddl
scas
pop
insb
jecxz
jmp
ja
sar
mov
lahf
add
lods
out
add
fmull
sbb
nopl
cmpsl
ss
movsb
mov
add
mov
jbe
hlt
mov
and
cmpsb
sbb
mov
add
fstps
ja
push
sub
ljmp
sub
out
dec
and
js
lea
sbb
and
loopne
faddp
test
iret
cmc
inc
nop
adc
shlb
in
sub
jae
sbb
ret
jl
aaa
cwtl
mov
insb
mov
std
sbb
pop
pop
in
xorl
and
jo
outsb
or
lahf
aaa
cwtl
insb
jbe
incl
xchg
jmp
push
sbb
add
popa
push
outsl
popa
push
fadds
mov
cltd
xchg
lret
push
lea
mov
sub
adc
repnz
xor
into
mov
sub
out
mov
popl
add
loop
cmpb
jne
pop
xchg
jae
push
jno
pusha
sub
loopne
xchg
gs
icebp
or
xchg
add
popf
inc
stc
mov
leavew
loope
xchg
push
lods
pop
cs
inc
xchg
mov
or
mov
sub
mov
aad
stos
dec
sbb
fnstcw
gs
lret
adc
and
sbb
sti
ret
lcall
push
dec
mov
test
cwtl
jb
xlat
mov
stos
push
sti
enter
mov
and
mov
popf
jae
nop
notb
adc
mov
insl
dec
mov
cmpsl
and
mov
add
in
outsb
and
pop
mov
dec
nop
add
stos
add
add
push
jg
outsl
sti
ficoml
dec
push
test
mov
fstps
cmc
jne
dec
inc
int3
cmp
dec
mov
rolb
or
shll
cmp
xor
or
xchg
xor
add
sbb
xchg
xor
sbb
in
aad
ds
pop
fwait
lds
stos
dec
clc
cmpsl
out
push
pop
dec
or
pop
ficompl
or
int3
dec
imul
sti
jl
les
rcrb
adc
adc
cmpl
std
ja
add
add
mov
and
jl
nop
add
stos
add
add
or
xor
gs
ret
divl
out
cmp
aaa
out
xchg
iret
inc
arpl
sbb
in
sbb
dec
cmp
mov
inc
dec
xor
add
inc
pop
mov
inc
push
int
jo
call
cmc
adc
popf
subl
mov
shll
fldenv
mov
test
dec
mov
mov
loope
int
outsb
ficoml
out
xchg
dec
cmp
fcom
ljmp
mov
pop
pop
and
cwtl
ret
ds
lds
add
stc
call
into
inc
mov
icebp
and
mov
add
add
xchg
adc
pop
sbb
popa
daa
pushf
lds
cmpsl
or
insl
outsl
pop
stc
xor
flds
mov
xchg
jmp
add
xchg
lret
icebp
test
shl
jg
or
sbb
mov
xchg
iret
test
add
movsl
push
cltd
enter
mov
push
jge
sub
mov
or
hlt
jne
push
dec
inc
mov
pusha
aad
push
or
dec
mov
push
adcb
lods
stos
repz
xor
lods
test
int
clc
add
aas
aad
cmp
push
sbb
add
fisubrs
cwtl
sar
repz
xchg
ja
lods
dec
xchg
add
stos
add
add
into
fsts
xor
xor
movsb
dec
mov
fdivs
sub
xchg
sahf
push
adc
loope
mov
in
test
jecxz
outsb
fildl
fwait
push
xor
jle
je
push
in
mov
or
ss
inc
mov
push
imul
push
push
cmp
sbbb
jnp
xor
in
stc
and
sub
dec
sub
popf
cvtps2pd
cmc
xor
cltd
decl
inc
nop
sub
push
push
pop
out
xchg
add
jg
push
cmc
add
dec
aas
int3
sbb
out
loopne
lods
outsb
xchg
ds
stos
add
add
pusha
sbb
cmp
ds
add
add
inc
mov
and
add
stc
xor
clc
out
mov
mov
mov
and
cwtl
test
stos
jg
pop
out
jg
shrl
or
add
dec
cmpsl
mov
call
std
cmpb
insb
gs
jmp
dec
mov
in
push
test
pop
sub
adc
jo
inc
xchg
les
shll
cmp
adc
je
jmp
loope
pop
adc
mov
sahf
sbb
out
outsb
icebp
les
in
std
ja
lods
mov
add
test
fildll
fnstsw
sti
pop
mov
add
add
adc
xchg
cmpsb
out
or
rclb
xchg
imul
lahf
scas
add
xor
jge
mov
sbb
or
pop
fldcw
out
jmp
sbb
sub
mov
cmp
xor
mov
cwtl
ljmp
popa
jg
xor
push
fistpll
icebp
je
add
and
dec
jae
mov
dec
inc
shrb
std
xchg
cmp
xor
pushl
popf
outsl
inc
cmp
cmp
jmp
and
cmp
xchg
sbbl
or
sub
xchg
add
fwait
loope
sub
sarb
add
decb
dec
xchg
add
stos
add
add
and
pop
fxch
xchg
movsb
je
jnp
jle
push
cmp
rcrb
scas
leave
jnp
shrb
mov
aas
add
iret
xor
mov
sbb
dec
insl
notb
int
iret
mov
mov
popf
add
es
sub
popa
pushw
lahf
lds
pop
outsb
sbb
gs
std
stos
data16
scas
lods
xchg
xchg
rcrl
add
mov
push
and
lock
xor
cmp
leave
stos
sub
xchg
and
into
pusha
aad
int
xor
add
or
ja
dec
cmp
dec
mov
xchg
add
stos
add
add
xor
lods
jo
pop
adc
mov
push
mov
loop
mov
push
inc
mov
andl
test
xchg
push
imul
pop
addr16
lret
mull
add
into
pop
and
jne
nop
and
and
sbb
cwtl
sbb
ljmp
dec
sub
push
inc
sbb
xorb
in
xchg
mov
pushf
lcall
jo
dec
mov
repnz
push
adc
add
pop
pop
push
mov
jmp
mov
mov
add
arpl
jge
mov
daa
push
xchg
dec
lahf
xchg
add
stos
add
add
ja
dec
shlb
mov
xor
push
xor
mov
pop
cmp
imul
cld
enter
insl
mov
cmp
mov
std
jne
mov
adc
cwtl
jmp
add
add
mov
add
inc
das
ret
stc
lds
pop
sub
imul
inc
fbstp
hlt
mov
out
testl
test
xor
sbb
pop
push
call
fsubl
push
inc
imul
cmp
push
inc
lods
ss
cmp
sbb
add
daa
ss
xor
and
push
movsb
out
add
stos
add
add
adcl
lods
mov
dec
jns
loope
dec
repnz
ljmp
or
pop
stc
adc
jecxz
sub
aad
or
mov
add
jns
xor
test
mov
pop
scas
mov
cmp
inc
rol
push
xor
or
idivl
dec
adc
jns
pop
push
or
popf
pop
push
push
aam
jle
inc
cmp
dec
inc
rorl
mov
ljmp
lret
out
pop
or
movsl
popf
mov
adc
loopne
test
adc
add
add
out
mul
aaa
cmc
xchg
lcall
xchg
mov
add
mov
sbbl
fwait
mov
xchg
xchg
aas
cli
mov
and
lock
adc
enter
or
push
mov
addr16
sub
jo
js
push
hlt
mov
jmp
push
fcoms
rcl
push
ficomps
cli
mov
in
add
lret
es
sbb
fs
xchg
push
stc
xchg
push
lcall
adc
pop
sbb
lret
int3
xchg
mov
pop
inc
leave
into
orl
outsb
out
mov
jl
dec
dec
add
push
aad
out
fucomip
ss
cmp
or
cmp
add
enter
int
mov
aas
xchg
in
xchg
jne
sub
adcb
int3
int
rcrl
mov
sahf
lds
cld
mov
add
lret
mov
lcall
pushf
mov
mov
sbb
adc
fnstenv
popf
mov
lret
aad
cwtl
loopne
scas
or
stos
xlat
sbb
add
jns
jnp
mov
add
dec
ljmp
mov
aad
xor
jmp
fisubrs
inc
fsts
stos
xchg
mov
cmpsl
mov
inc
pop
arpl
pop
mov
xor
pop
sarb
add
outsb
jbe
lret
outsb
negb
xchg
xchg
in
add
stos
add
add
enter
jb
mov
jmp
mov
arpl
and
shl
out
cmpsb
roll
mov
cs
mov
popl
and
push
mov
inc
shrb
lahf
jecxz
ljmp
andl
cmp
inc
fucom
cmpl
int
mov
pop
add
stos
fwait
repnz
push
cltd
rclb
push
outsb
rcll
daa
jae
pushf
in
inc
aas
pop
lods
mov
daa
rcr
ja
vpackuswb
mov
not
jmp
movsb
ja
shr
add
lret
mov
or
pop
dec
cmp
add
push
les
in
lahf
sti
ja
rcll
orl
add
add
jmp
imul
push
push
adc
repnz
dec
pusha
mov
add
sbb
daa
fwait
or
dec
test
and
addr16
lahf
mov
pop
out
or
inc
mov
push
dec
daa
cmp
or
xlat
mov
mov
js
insl
jbe
inc
lahf
add
syscall
fists
mov
adc
movsb
sbb
out
push
mov
andl
daa
and
push
dec
pop
sbb
xchg
frstor
add
jae
push
jg
aas
popa
xor
xor
imul
btc
mov
add
xchg
cmpl
push
loopne
lcall
add
stos
add
add
je
iret
and
sub
lcall
notb
inc
pop
int
jae
out
and
sub
and
mov
jo
push
scas
xchg
inc
out
shll
jo
or
dec
jae
sbb
add
cld
std
sti
movsl
add
lock
les
mov
sub
in
mov
cs
cmp
push
insb
lahf
fcompl
lahf
push
iret
addr16
movsl
jnp
lea
mov
ss
mov
xchg
jp
lahf
loope
movsl
mov
mov
test
xchg
ret
push
in
add
test
and
pop
dec
sbb
add
stos
add
add
pop
mov
push
ficompl
add
andl
scas
sub
jae
test
push
sbb
in
sub
lock
cmp
jmp
clc
ja
mov
cmp
xor
loop
ret
int
xlat
shll
lods
fcompl
fsubs
mov
dec
mov
pop
into
pusha
pop
xor
lods
test
sbb
mov
mov
arpl
xchg
cmp
int3
push
sbb
push
paddusb
push
out
lret
mov
cmp
addr16
dec
lods
fidivl
insb
scas
js
pop
cmp
int
mov
add
add
aam
fnstsw
out
fcmovu
in
leave
mov
add
lahf
inc
cmp
fidivrl
pop
in
out
mov
lods
in
test
ljmp
loopne
imul
fimuls
push
inc
cmc
inc
sbb
push
xlat
add
mov
mov
mov
pop
insb
arpl
cld
and
xlat
test
stos
mov
stc
jge
imul
mov
inc
mul
sub
movsl
pushf
xor
int3
mov
hlt
dec
insl
add
leave
push
inc
nop
or
pop
sub
mov
lret
pop
bswap
xor
subl
pop
lds
mov
stos
add
stc
sbb
inc
jecxz
mov
lcall
add
stos
add
add
sbb
sub
arpl
push
sbb
out
mov
fimull
adc
cmc
sti
jbe
imul
jno
fs
push
aad
xchg
movsb
imul
movsl
loope
fwait
push
lret
dec
imul
push
jbe
jne
ljmp
mov
cmp
add
push
in
mov
out
ret
sub
out
mov
pop
das
adc
fiadds
inc
gs
imul
sub
jns
iret
out
push
rclb
pop
inc
ret
cld
repnz
and
aaa
je
inc
fildl
inc
jmp
fcomi
pop
xor
add
mov
mov
icebp
and
xchg
push
loope
add
stos
add
add
push
mov
mov
ja
jne
inc
mov
scas
fadds
inc
outsl
xchg
xchg
jmp
or
mov
scas
mov
cltd
cmpsl
sub
adc
sub
fnstenv
mov
mov
pop
mov
out
popa
leave
ljmp
jle
idivb
repnz
lods
fbld
xchg
xchg
mov
lock
xchg
aam
lea
xlat
daa
add
rcl
in
outsl
pop
push
mov
fwait
pop
out
push
repz
gs
mov
imul
adc
xchg
repnz
add
ds
pop
icebp
pop
dec
sub
mov
add
add
xlat
repz
das
cli
fists
dec
es
mov
add
stos
add
add
pop
sbb
clc
adc
cld
mov
mov
mov
mov
inc
out
mov
pop
popa
jae
popa
cld
add
sbb
jne
mov
jo
mov
mov
cltd
lods
push
pop
lahf
xchg
ljmp
out
into
test
jno
jb
mov
pop
mov
addr16
push
jne
add
jnp
push
fnstcw
mov
mov
scas
mov
and
push
inc
fisubl
lea
leave
aam
xlat
ficompl
out
test
xor
cmp
add
adc
push
adc
cwtl
out
cwtl
add
or
stos
add
add
imul
bound
imul
mov
adc
jae
test
add
pop
ret
xor
push
jl
dec
jns
adc
scas
sti
mov
jle
sbb
das
xor
sub
fdivr
pop
out
imul
inc
stos
out
dec
hlt
out
xor
scas
stos
outsb
push
xchg
outsb
add
fsubrs
dec
xchg
mov
jecxz
testl
dec
pop
sub
out
lahf
add
in
mov
pop
jg
mov
mov
iret
and
add
xlat
faddl
nop
inc
add
inc
add
nop
inc
add
inc
add
nop
inc
add
inc
add
nop
inc
add
inc
add
dec
pop
pop
dec
inc
xor
push
push
inc
cmp
pop
ss
pop
add
inc
pop
inc
pop
push
dec
inc
pop
cmp
dec
add
cmp
xor
aaa
inc
inc
pop
xor
pop
push
push
inc
push
cmp
push
push
inc
xor
xor
add
cmp
dec
cmp
pop
dec
xor
add
xor
pop
inc
dec
pop
pop
xor
pop
inc
xor
inc
dec
cmp
inc
cmp
ss
dec
add
xor
dec
xor
push
add
aaa
pop
push
dec
dec
cmp
inc
xor
add
pop
add
dec
add
xor
pop
add
add
push
add
dec
add
add
inc
add
add
xor
pop
add
xor
dec
add
push
add
add
cmp
push
add
push
add
add
add
add
add
dec
add
push
add
add
add
add
add
dec
add
add
pop
add
add
push
add
add
pop
add
xor
xor
push
add
add
add
add
inc
add
xor
cmp
add
add
add
inc
add
push
inc
add
inc
add
push
inc
add
inc
add
push
inc
add
inc
add
push
inc
add
inc
add
push
inc
add
lcall
add
add
add
add
add
add
add
add
add
cmp
add
add
jb
push
imul
aas
inc
insb
outsl
jae
push
imul
popa
je
outsl
outsb
inc
insb
outsl
jae
push
imul
