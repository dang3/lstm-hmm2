push
mov
sub
movl
cmpl
je
cmpl
jne
pushl
push
pushl
push
push
pushl
call
mov
dec
mov
jmp
or
mov
mov
jmp
rcl
fmul
rcr
add
cltd
push
cmpsb
insl
jle
jle
movsl
add
fld
fcom
enter
leave
cld
icebp
fmulp
test
sar
rcl
mov
nop
fsub
nop
cld
jmp
leave
ss
xor
neg
aad
int
fnsetpm(287
lock
in
cli
sti
jmp
xchg
in
cli
fxch
out
leave
icebp
idiv
iret
ds
lock
repz
enter
out
fildl
ret
sub
shl
xlat
fdiv
stc
aas
adc
call
fmuls
repz
mul
ret
into
jmp
loopne
iret
lock
in
repnz
into
sub
sti
ljmp
int
into
out
rorb
fimull
div
aam
hlt
cmc
aad
ss
int3
rcl
rol
idivb
icebp
les
out
sti
xchg
jmp
repnz
cmp
fcomi
cld
repz
std
in
loope
fsubr
sub
decl
sbb
icebp
stc
jmp
fidivrs
call
xor
jmp
in
fdivp
lds
std
into
int
int
test
in
rcr
sarl
jecxz
loopne
sar
int3
jmp
mov
hlt
cmp
stc
shr
sar
in
xlat
fdivrp
out
clc
test
ret
repz
movl
leave
loopne
cld
stc
in
in
cmc
hlt
cmp
mov
addb
in
lock
loopne
cmc
jmp
cli
add
push
stc
shl
xlat
orl
xor
lock
out
sub
cmp
lret
int
clc
test
test
mov
int3
shr
mov
out
xor
hlt
shr
fdiv
imul
aas
fmul
stc
repz
ret
mov
lret
icebp
call
jecxz
xor
leave
repnz
fcomi
into
shl
cli
cmc
lret
jmp
clc
fsubrp
fst
mov
cli
icebp
out
test
ljmp
sbb
mov
imulb
enter
clc
out
push
cmp
rcl
out
call
lret
or
fsubr
out
out
xor
shr
lock
aas
std
ret
out
sub
ret
out
icebp
shl
int
fxam
out
fsubrp
fcmovnbe
repnz
shr
in
fst
aad
lret
xchg
xchg
jecxz
lret
clc
into
xor
hlt
cmp
cmc
fld
lock
mul
or
orb
lock
in
shll
into
xor
int
rcl
jecxz
cmc
out
hlt
addb
hlt
xchg
nop
int
jmp
clc
int3
out
hlt
loopne
roll
in
out
neg
stc
out
xchg
rcl
xor
out
repz
aad
stc
cmc
cld
loop
not
enter
dec
fiadds
lock
in
jmp
icebp
rcr
std
jmp
cld
mov
in
decb
neg
shr
cmc
cmp
shr
repz
or
fdiv
mul
cli
xlat
test
iret
out
out
iret
shl
aaa
icebp
into
aaa
xor
fxch
ror
int3
ror
call
stc
call
test
xchg
mul
neg
sar
lret
cmp
aam
fcmovnu
stc
jecxz
in
flds
into
sbb
aaa
iret
shll
rcl
clc
in
fldz
aam
loopne
jmp
sar
loopne
fldl
loopne
aam
in
cli
out
fst
not
rol
int3
repz
fildl
fisttpl
mul
cmp
iret
shr
out
loope
iret
in
sar
testb
mov
sbb
lock
lock
fcmovnb
shl
sbb
repnz
lock
cli
fincstp
mul
int
out
cld
in
in
div
lret
repz
lock
loop
loopne
into
call
stc
jmp
std
fsubr
cmp
loope
aaa
mul
sti
into
ret
in
cmc
loop
xchg
leave
enter
std
in
loope
mov
lret
aad
xor
rcl
stc
sar
rcl
ljmp
sti
cld
addb
leave
iret
jmp
int3
repz
cmp
loop
jecxz
jmp
jmp
jecxz
call
in
shr
aad
or
ror
sti
in
mov
test
mov
into
repz
call
icebp
mov
sbb
mov
mov
orl
push
movl
cmpl
je
cmpl
jne
pushl
push
call
cmpl
jne
mov
dec
mov
xor
add
dec
mov
jmp
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
pushl
pushl
call
cmpl
jne
mov
inc
mov
jmp
add
push
mov
andl
mov
inc
mov
cmpl
jne
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
xor
movl
cmpl
je
cmpl
jne
pushl
pushl
push
pushl
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
movl
push
adc
mov
andl
xor
xor
inc
mov
cmpl
jne
push
pushl
pushl
push
call
cmpl
jne
xor
or
inc
mov
cmpl
jb
andl
mov
inc
mov
cmpl
jne
push
push
call
cmpl
jb
add
jmp
xlat
iret
into
fst
xor
mov
mov
jle
add
fucomip
fsubp
addb
out
in
in
addb
icebp
iret
out
xor
aad
sarl
hlt
fldl
in
test
test
std
call
into
sub
cmp
xor
fsubp
lds
stc
aad
fmulp
in
lret
mov
in
icebp
rol
fcmovnu
test
repz
call
jmp
loope
xchg
in
aad
cli
xlat
cld
ror
lret
aam
test
jecxz
jmp
jecxz
lock
hlt
rol
cmp
rol
repnz
fnstsw
aas
fcmovb
in
cmc
mov
ret
rcr
xchg
fmulp
int
clc
aam
xor
cmp
repnz
test
roll
jmp
jecxz
out
lret
sti
xorl
cmp
nop
jecxz
out
mov
shr
cmp
cmp
ss
sarl
call
sarb
stc
lret
leave
or
jmp
aam
iret
aaa
cmc
cmp
ds
ror
fdivr
faddp
cli
xchg
enter
int3
and
adcl
stc
xor
into
sti
jmp
in
movl
mov
icebp
ret
leave
cmc
fdivrs
aam
jmp
sti
fcos
cld
shl
fld
fdivp
loope
jmp
icebp
ljmp
shl
aam
aam
in
cmp
ret
stc
xchg
xor
mov
cmc
in
fdiv
jmp
ror
xor
testl
ret
loope
mov
ret
int3
lock
adc
std
cmc
std
add
std
lock
test
icebp
out
fbstp
int3
lret
divl
xlat
cmp
hlt
enter
ljmp
in
int3
lock
shll
fidivrs
hlt
cmp
clc
fiaddl
sti
stc
idiv
in
rorl
enter
stc
in
cld
icebp
sti
out
int
roll
ret
in
cli
jmp
icebp
out
int3
fcomp
repnz
aad
in
cld
stc
aam
inc
cld
cld
sub
cli
xchg
lret
lock
jmp
sub
ret
cmp
cld
out
stc
into
cmp
shl
fiaddl
int3
in
clc
fsub
adcb
out
fdivrs
in
neg
addl
call
int
std
mov
aaa
xor
icebp
std
in
sti
les
fdivr
xor
std
imul
jmp
mov
test
lock
lret
cli
repnz
cmp
xlat
cmp
cmp
cld
in
loope
mov
movl
jmp
sbb
in
repnz
loope
fiadds
fsubr
shl
loop
xchg
loopne
xor
enter
out
int
sar
ret
aad
loopne
enter
out
sti
orl
out
xlat
fdivl
cli
stc
fcmovbe
cmpl
loope
stc
loopne
jecxz
loop
cli
in
in
sar
aam
icebp
repnz
ds
int
into
repz
idiv
repz
lret
testl
call
ss
xlat
fstpt
aam
xchg
cld
into
in
faddl
leave
ret
stc
repnz
frndint
shl
in
cmc
icebp
xlat
cmc
ret
int3
out
std
call
xchg
out
jmp
in
hlt
das
xor
fmulp
aam
sar
aas
jmp
lret
in
loopne
call
cli
lret
out
ror
sarl
loop
sti
sarb
out
test
loope
jmp
into
call
shr
out
in
fdivr
clc
iret
stc
lret
cmp
xchg
ror
xchg
ror
xchg
in
mov
out
cmp
sti
fdivs
icebp
cli
enter
sbb
cmc
xor
ljmp
ljmp
lock
cmp
loope
ds
fldln2
icebp
loope
xchg
ljmp
fidivrs
cld
fdivrp
clc
xlat
jecxz
aas
out
stc
in
and
test
jmp
in
xlat
cmp
jmp
stc
xlat
aad
sub
loop
out
cmp
xchg
xchg
in
ret
cli
in
vpaddsw
xlat
into
fistpll
xchg
shr
in
testl
shl
jecxz
xor
leave
sti
shl
in
add
mov
fadd
leave
int
bound
inc
aad
mov
repnz
pop
jle
movsl
add
fdiv
rol
cli
test
mov
fsubp
fcmovnbe
loop
shr
lock
int
cmc
cmp
aas
test
cmp
test
addb
leave
lock
repnz
xor
enter
repnz
jmp
cli
neg
adc
fadd
out
into
leave
xchg
repz
jecxz
ror
call
cmp
repnz
std
fnclex
cmp
test
fdiv
out
mov
jmp
fidivrs
jmp
aas
repz
sti
cmp
jmp
out
out
shl
shr
jmp
repz
int
fdivp
ror
faddp
xlat
mov
cld
out
mov
lock
ror
lock
xor
hlt
icebp
sbb
cmp
sti
jecxz
aam
ljmp
lret
xchg
pushl
clc
lret
ds
mul
in
in
loop
test
ljmp
faddp
aam
iret
into
in
jmp
cmp
cmp
cld
xchg
fimuls
in
out
in
in
repnz
xor
aad
aas
int
stc
div
aas
out
out
fsub
xchg
lret
xchg
in
divl
xor
rcl
xor
cmp
repnz
stc
movl
xchg
out
loope
sub
lret
leave
lock
ljmp
test
leave
filds
xorb
ljmp
repnz
out
int
repnz
lock
sti
ds
int
test
enter
ljmp
flds
in
in
loop
decb
ret
std
fucomip
cld
in
icebp
bnd
shl
ret
leave
fdivr
lock
loop
imul
xor
cmc
cmp
out
hlt
lock
aaa
into
cmc
fprem1
mov
in
in
flds
loope
in
shl
cmc
fdiv
out
fdivp
int
cmp
loopne
in
fsubr
leave
fdivr
ret
sar
sbb
xor
ds
repz
sbb
mov
xchg
lret
mov
aad
stc
leave
cmp
repz
aas
roll
sti
mov
shl
out
repz
stc
in
out
lret
jmp
ds
aad
ljmp
fld
in
xchg
jecxz
ss
shll
idivb
fiadds
fnstcw
aam
fdiv
faddp
out
jecxz
into
cmc
in
shr
int3
cmp
jmp
iret
loope
out
div
mov
repnz
lret
iret
icebp
iret
in
neg
out
rcl
cmc
iret
movb
xchg
xchg
sar
ror
out
out
in
aaa
into
push
fst
rorl
in
iret
std
int
rolb
aaa
cmp
cmc
int3
sti
flds
loopne
test
loope
lea
loop
loope
in
in
aam
out
aas
aas
and
cmp
in
fadd
in
in
and
and
stc
cmp
cmp
jmp
out
fcmovnu
aad
loopne
std
out
xchg
ror
out
repnz
loope
sarb
sub
cmp
enter
cmc
xor
ret
fadds
int3
adc
xor
iret
cs
rol
add
in
in
decl
cld
out
cs
cmp
in
ljmp
xlat
test
rcr
ffree
lea
cld
mov
ret
lret
lret
cmp
fcom
ret
testl
flds
bnd
cmp
fmul
out
ror
out
stc
mov
leave
enter
mov
in
in
rclb
rcl
sar
jmp
in
xor
ret
imul
cli
filds
int3
loop
lret
ljmp
jmp
int3
fsubrp
ds
xchg
lret
in
shl
lea
out
jmp
fucomip
stc
loopne
loop
test
fldl
xchg
das
aaa
into
clc
xor
rcr
cmp
jecxz
test
std
iret
decb
jmp
lock
shl
in
fucom
out
fnclex
clc
add
movl
out
fstpt
jmp
sbb
xchg
rolb
sbb
add
add
lret
and
mov
mov
and
mov
orl
xor
xor
add
mov
add
jmp
rcl
lret
fst
jmp
fwait
jae
jle
movsl
add
mov
loop
mov
jecxz
in
xchg
xor
ljmp
neg
ret
cli
xlat
xchg
xchg
stc
testb
repnz
int
aad
lret
hlt
into
aaa
fcmovu
sti
out
addl
loopne
mov
stc
mul
ljmp
sub
lret
loope
aam
ss
aad
aad
jmp
loop
loope
fadds
xlat
aam
loop
clc
lret
out
fadd
aas
loope
ret
fcmovb
enter
mov
int
lea
call
fstp
shr
int
idiv
loop
sar
mov
jecxz
fldl
lret
call
idiv
stc
aam
aad
ret
roll
test
shl
aaa
vpaddusb
sti
out
cmp
mov
fldl
test
xchg
neg
out
sti
fstp
sub
sub
ret
in
fcmovu
ret
out
xchg
ljmp
xor
cld
fcmove
loopne
ror
cmp
aam
imul
ret
mov
mov
in
hlt
aad
icebp
out
fnstenv
sub
sarl
repz
fimull
in
mov
xor
cld
shl
in
aam
not
fildl
rcr
movl
in
enter
jmp
into
cmp
fisttpl
clc
test
loopne
fiadds
out
cmc
cmp
cmp
enter
loopne
xlat
ret
cmp
std
out
out
icebp
int
xor
aad
cmc
cmp
out
repnz
jmp
imul
mov
xchg
mov
cmc
repnz
fst
not
rcl
test
loope
rcr
jecxz
inc
loopne
xchg
in
xchg
cmc
ss
jmp
xor
into
fsubr
ret
stc
cmp
int3
mul
loop
into
loopne
xchg
lret
into
in
loop
jecxz
fmul
cmp
sti
iret
rol
testl
icebp
mov
leave
shrb
fcomip
int
fdivr
ffree
cld
std
xchg
enter
or
in
mov
aam
out
cmp
repnz
cmp
cmc
neg
test
aam
mov
xchg
addb
mov
ljmp
aad
cmp
xlat
repz
repz
call
aad
vpaddsb
leave
enter
cmp
fdivr
cmp
cli
cmp
cmc
fcomp
fsubp
in
std
nop
jecxz
xor
out
fcomp
repz
out
shl
ret
lock
mov
out
into
hlt
lea
icebp
int
ss
cmp
fcmovnbe
cli
std
clc
aas
fucomi
ret
lret
fmul
adcb
ret
stc
shr
repz
repz
cmc
shl
fdiv
repnz
not
out
addb
loope
fadd
cmp
icebp
out
call
out
icebp
cmp
in
stc
lret
mov
sbb
iret
in
aaa
clc
fstp
std
aad
shl
jecxz
cmp
mov
test
repnz
test
aam
int3
aad
hlt
in
out
repz
lret
mul
fisttpl
lret
xchg
ror
fmul
aam
icebp
int
hlt
rol
cld
rol
xor
call
in
rclb
in
aaa
repnz
in
ror
out
out
fdivrs
xchg
call
int
xchg
ror
xor
repnz
repnz
sub
out
and
aas
mov
mov
fnstsw
dec
xchg
repnz
sarl
ds
int3
icebp
std
xlat
loop
out
adcb
in
stc
ror
fcmovne
fcompp
hlt
fnstcw
shl
repnz
test
imul
ljmp
imulb
enter
cmp
xor
shr
mov
std
cld
orb
nop
lock
div
repnz
out
call
hlt
std
ret
incb
leave
in
jecxz
xchg
test
jecxz
xor
ss
stc
xor
cmp
ds
neg
repz
in
fdivr
jmp
loopne
stc
out
xor
cmp
call
cmp
fdivr
cmc
lret
ljmp
in
cmc
fnop
jmp
lock
adc
adc
jmp
stc
nop
in
add
mov
jmp
int3
rcl
aad
int3
call
dec
cmc
lcall
jle
jmp
repz
call
aad
cmp
aam
cmp
rcl
xlat
stc
fimull
cld
ror
aam
shl
cmp
icebp
lock
aaa
cmp
test
out
out
lret
test
test
std
test
aam
repz
ss
hlt
aas
iret
test
out
out
incl
in
cld
in
int
loope
sub
cmc
iret
divl
in
jmp
aam
in
jmp
xor
rcr
bnd
cmc
test
cmc
leave
iret
div
leave
loope
ds
rcr
ret
xchg
addb
lock
shl
cmp
in
jmp
aas
xor
clc
xchg
fisttpll
fdiv
cmp
iret
xchg
shl
jmp
jmp
cmp
rol
iret
aad
and
jecxz
xchg
loope
rcll
repz
repnz
jecxz
fdivrs
shl
roll
loope
out
jmp
ret
stc
int3
lret
fdivrs
cmp
repnz
xchg
cmc
stc
fstpt
mov
int
shl
repnz
lock
cmp
out
clc
repz
xchg
call
into
out
adcl
cli
aas
xor
loopne
ret
in
lock
rorb
loop
adcb
int3
xlat
ror
hlt
imul
out
call
cmp
sti
les
faddp
fdivrp
in
in
call
test
ljmp
ror
add
test
test
xchg
lea
ljmp
iret
cmp
test
out
jecxz
and
movl
mov
lret
leave
in
xor
cmc
cmpl
mov
in
idiv
xlat
int3
decb
shr
leave
sti
hlt
enter
cmp
call
ljmp
shl
in
shrl
out
call
cmc
fcmovnbe
stc
cmp
rcl
mov
fnclex
call
orl
cmc
into
stc
ror
fdivp
icebp
std
shl
ret
loopne
loopne
in
or
lock
xchg
fistpll
repnz
cmp
lret
out
test
out
shl
fdivr
aam
in
lock
adcl
icebp
lret
fnop
xlat
mul
leave
and
test
int
shl
mov
out
cmp
imul
fdivr
iret
repnz
xor
test
jecxz
lds
xchg
hlt
xor
bnd
cmp
xor
sbb
in
dec
loope
repnz
icebp
in
cmc
call
out
fcmovu
les
rol
leave
out
jmp
loop
mov
ljmp
xor
not
aas
shl
fcomp
in
and
mov
jecxz
xlat
in
call
rcr
or
repnz
les
out
lret
loopne
call
leave
xlat
mov
fcmovnbe
enter
lock
flds
in
enter
in
out
das
xor
icebp
int
fidivrl
rolb
loop
cli
sar
or
loope
xchg
iret
in
cmp
cmp
cmp
cmp
in
fcomi
jecxz
xlat
test
lret
jecxz
cld
loope
filds
call
int
loope
adc
and
fucomip
xchg
out
mov
cli
shr
out
xchg
aad
in
repnz
cld
sti
in
out
std
repz
std
sbb
loope
lret
out
stc
in
jmp
repnz
div
cld
in
sti
xchg
addl
ljmp
int
fcomp
int3
shl
cmc
fildl
lock
lret
jecxz
rol
in
enter
ljmp
sar
aam
clc
lret
xchg
sar
icebp
aad
call
sti
addb
loop
add
jecxz
loopne
iret
sbb
mov
jecxz
clc
cmc
rcl
fdivrl
enter
xor
icebp
std
ret
sub
out
icebp
mov
mov
out
fsqrt
icebp
fcomi
cmp
leave
xor
fabs
aam
rcr
ret
jecxz
sti
lret
test
in
enter
aam
rcl
cmp
int3
sti
clc
icebp
lock
in
aas
sarb
testl
fmull
mul
lret
in
and
add
add
rcl
fstp
fldt
xchg
sub
adc
jle
cmc
ss
into
call
stc
enter
shr
out
mov
in
cmp
call
cmp
div
cmp
int3
icebp
fmul
sti
loope
mov
cld
jecxz
xchg
nop
cmc
das
aam
ss
cmp
fsubrp
aad
fdivr
cld
ffreep
jmp
and
out
ljmp
hlt
out
clc
cmpl
fidivrl
cmp
out
out
shr
test
shr
rcl
leave
div
enter
fidivrl
icebp
xchg
fstp
mov
fsubr
into
fcmove
rcl
hlt
loope
aad
jmp
shlb
clc
cmp
loop
call
faddl
out
loope
aad
xor
cmp
lock
enter
sar
cmp
sbb
fimull
out
jecxz
nop
jmp
in
int
out
cmp
aas
repnz
in
in
fdivr
ret
lds
int
loopne
shl
loope
aaa
int3
in
fcmovu
lret
test
hlt
testl
iret
loopne
lock
int3
divl
jmp
xlat
lret
cmp
cmc
in
fnstcw
out
addl
and
cld
cld
nop
test
enter
test
cmp
rol
xlat
loopne
cld
testl
and
rcl
stc
out
aam
in
fcomp
cmp
in
xchg
lock
out
jmp
into
in
divb
dec
sti
sarb
fcmove
fadd
jecxz
mov
loopne
jmp
xor
fcmovbe
cmp
xor
cmp
sti
hlt
cli
in
lret
addb
into
mov
xchg
vshufps
in
repnz
aas
out
jmp
cmc
int
cmp
cli
std
clc
lret
mov
faddl
lock
aaa
shr
hlt
cli
out
cmpl
in
cld
and
fucom
shr
aad
ret
ror
ds
int
fcmovnb
cmp
idiv
jecxz
test
fadd
fisttpl
ss
int3
enter
cmp
loope
in
shl
fldl
enter
sti
in
call
xor
leave
repnz
jmp
cmp
sti
ss
cld
loopne
cld
in
aas
int
std
ret
and
xchg
faddp
in
jmp
repz
imul
hlt
loop
cmc
enter
enter
rorb
aad
xor
xor
out
lds
ss
in
test
aas
repz
test
loopne
cmp
in
fiadds
cmp
xor
cmp
int
repnz
hlt
out
shl
mov
std
in
out
popl
rorl
cmp
fxch
sti
cmp
cmc
cld
call
and
fcmovnb
out
std
mov
fdivp
mov
lret
sti
cld
cmc
fadds
xlat
mov
cmp
into
out
lds
out
stc
leave
enter
enter
std
in
cmp
in
in
out
in
out
fucomip
repz
xor
in
xor
shr
out
out
aam
cli
mov
int3
into
rcl
xor
fld1
aas
fdivs
int3
int
mov
jecxz
cmp
call
mov
lret
cmp
cmp
lret
stc
ljmp
ret
fld
ret
ljmp
xchg
call
into
iret
lret
hlt
rcr
loope
stc
cmp
aas
rolb
loopne
lret
mov
fcmove
stc
cmp
cli
sar
cmp
repz
repz
mov
fisttpll
out
in
xor
ror
in
ror
loop
in
cld
into
loope
lock
cli
mov
icebp
repz
mul
rcl
xor
hlt
cmp
ret
push
out
xchg
shr
xchg
mov
repnz
hlt
cmp
out
ljmp
aam
fld1
cld
mov
ret
leave
fdivr
in
test
xchg
in
xchg
cmc
lock
repz
repnz
fmulp
sbb
icebp
mov
lret
int
fcmovb
xlat
fadd
div
out
loope
ret
fcomp
jecxz
mov
jmp
mov
cli
mov
mov
ljmp
fucomp
xlat
cmc
incl
repnz
loop
nop
leave
repz
jecxz
rcl
aaa
ljmp
sar
icebp
stc
enter
lret
out
incl
out
xor
neg
out
lea
mov
mov
mov
xor
add
mov
mov
mov
mov
mov
mov
jmp
iret
xlat
rcl
fcomp
iret
bound
movsb
outsl
test
add
repz
out
jecxz
repnz
mov
or
aam
ljmp
in
rcr
fsubr
fsubr
iret
aas
fcos
loop
aam
in
mov
mov
mov
in
fldcw
shlb
out
call
cmp
ret
ror
xchg
out
mov
fdivr
push
in
lret
fsubrp
stc
aaa
fdivr
cli
sti
loope
repz
mov
aas
into
sub
enter
repnz
xor
in
cld
cmc
aaa
fst
call
cmp
fincstp
mov
roll
aaa
shll
sti
cmc
int
repz
jecxz
lock
fst
xchg
test
loopne
lret
shl
icebp
cmc
jmp
ljmp
shr
ret
ret
stc
addl
test
xchg
xor
stc
repz
ds
cmp
loop
loop
hlt
in
in
std
fildl
in
out
icebp
xor
fdivrs
cmp
hlt
enter
aad
in
stc
test
lret
rorl
aad
out
stc
enter
lret
aam
aas
call
out
stc
lret
mov
out
out
out
ss
xlat
jmp
ss
add
aam
fld
loope
lret
lret
xchg
mov
cmc
test
fidivrl
lock
in
leave
icebp
rcr
clc
test
sar
rcl
in
mov
in
test
imulb
xor
repz
rcl
fmul
cmp
fadds
jmp
test
int3
jmp
int3
aaa
repnz
cmp
stc
ror
aam
into
loopne
test
xrelease
icebp
leave
clc
cli
aam
rcl
jecxz
test
cli
std
loope
mov
test
in
lret
xchg
aad
stc
sti
aam
sti
icebp
out
out
adc
test
adc
mov
cli
in
lret
dec
call
cmc
call
sti
rcr
stc
fcmove
ret
cld
repz
call
mov
ss
in
out
cmp
cmp
cmc
aad
loopne
fucomi
lock
clc
repnz
cld
shl
int
rcr
lock
xchg
fmull
iret
lock
out
out
int3
loope
idiv
xor
fcomip
loope
std
out
xlat
shr
sti
sar
cli
fdivr
xchg
shr
xchg
rcl
repnz
cmpl
lock
repnz
out
pop
jecxz
xchg
in
lea
cmc
in
jmp
out
ds
jmp
sti
in
rcr
fildl
in
in
adcb
hlt
in
fsubr
fsubrp
hlt
fcmovnbe
fcom
fadd
shl
clc
out
in
in
in
icebp
lock
xor
shr
int3
clc
cli
call
aaa
rcl
shl
aam
xchg
jecxz
loop
cli
xchg
out
mov
fmul
xlat
hlt
enter
aam
out
stc
mov
aaa
int
lock
in
out
xlat
sbb
shr
xlat
int3
into
mov
cmp
fsubrp
xchg
xlat
hlt
les
xlat
cmp
loope
repz
aad
loope
enter
out
loopne
mov
leave
loop
test
call
stc
out
ds
out
ret
test
lret
nop
out
cmc
test
out
jmp
shr
ds
shl
iret
aad
vpaddw
std
loop
f2xm1
lock
int3
hlt
out
xor
enter
cmp
out
or
fdivrp
cmp
in
fucomp
in
mov
std
out
aad
into
jmp
lret
ror
cmpl
clc
jecxz
call
in
cmc
ret
rcl
std
cmp
aad
shl
sar
sti
out
call
ret
mov
loope
std
in
in
sub
icebp
lret
cmc
int3
cmp
rcl
incl
mov
std
xchg
xchg
mov
ljmp
test
sti
repz
sti
cmc
sub
out
repz
fcmovbe
cmp
cmp
repz
repz
sti
cmp
sbb
int
xchg
fdiv
loope
mul
cmp
call
cli
out
clc
sar
into
cmc
shl
xchg
aad
in
fucom
dec
sub
stc
cmp
hlt
dec
cmp
cmp
xchg
xchg
mov
loope
xchg
decb
cmc
int
std
into
fucomp
repnz
fstp
out
mov
jmp
ret
aas
ret
aad
aad
mov
jg
push
jle
movsl
add
repnz
cmp
ljmp
jmp
xchg
xor
mov
cmc
cmp
int3
cmp
shl
out
mov
call
jecxz
sti
xor
sub
leave
aaa
xor
fdiv
ds
rcr
jecxz
in
cld
idiv
loop
sub
repz
fcmove
out
aad
into
loop
cli
sti
fcomip
fsubp
leave
fdivp
call
in
repz
int
xlat
cmp
repnz
mul
aas
lds
in
jmp
into
ljmp
sub
imul
xlat
call
int
cli
out
call
lret
nop
jecxz
into
xchg
in
xlat
rol
ss
fucomp
sti
int
rolb
test
fcmovb
shl
loop
xchg
loop
rol
xlat
in
xor
ror
into
int3
in
aam
into
out
rcr
ret
enter
int3
fsubr
test
cli
sarb
shl
ret
idivl
orl
out
mov
hlt
lret
sarb
out
leave
cmp
loopne
into
fcmovb
test
in
orl
xchg
xchg
leave
sti
cmp
sar
sub
shl
push
aam
cmp
hlt
out
clc
popl
enter
hlt
repz
cli
fistpll
bnd
jmp
std
in
into
loope
loopne
call
aam
cmp
iret
repz
shl
neg
testl
cld
in
lock
aaa
xor
clc
shll
cmp
test
loope
jecxz
mov
aad
fcmove
adcb
cmc
cmc
cmp
out
in
cmp
lock
sbb
imul
in
lret
out
in
aad
sar
jmp
in
sar
flds
mov
adcb
lret
xor
fadd
repz
cmp
iret
ret
rcr
test
loopne
test
stc
xchg
jecxz
in
shlb
xlat
cmp
ljmp
cmp
aas
add
clc
stc
in
out
in
fucomp
xchg
sub
aad
into
fstp
fnop
sti
ret
rcr
mov
xlat
out
sti
shr
shr
enter
repnz
ljmp
in
ffree
loopne
incb
ffreep
repz
jmp
ljmp
fst
iret
not
loopne
enter
int3
in
loope
jecxz
out
ss
int
aaa
idivl
fdivs
lret
jecxz
ss
shl
cld
fimuls
adc
jmp
in
ror
cld
cmp
shl
clc
add
out
out
in
and
cmc
in
out
into
fsubr
idivl
ljmp
fiadds
hlt
jmp
roll
in
lock
out
cmc
rcl
shl
loop
cmp
stc
in
lret
out
iret
mov
fsubp
repnz
lock
cld
iret
leave
cmp
clc
in
test
idiv
fdivrp
cmp
in
nop
int3
xchg
xchg
test
cmp
jmp
out
cld
clc
loop
cmp
fisttpll
sbb
icebp
iret
repz
ss
cmp
fcmovu
hlt
cld
cld
in
jecxz
clc
aam
mov
call
aam
jmp
lret
xlat
repz
fcmovnbe
xlat
aam
xlat
call
lret
in
loop
ret
out
call
sbb
call
out
in
mov
in
push
xor
lock
repz
into
in
flds
in
mov
fcomi
mov
loope
ror
rcl
repz
into
fidivrl
cmp
aas
hlt
faddp
rcl
cmc
loope
lret
icebp
call
xor
lock
hlt
loopne
sbb
in
fucom
lret
lret
enter
adc
jmp
cld
sar
int
loopne
fisttpl
inc
out
fcmovnu
xchg
xchg
icebp
cs
aaa
iret
dec
int
sarl
out
rorl
ljmp
xor
cmp
lret
aad
fcmovbe
loope
loop
cmc
xchg
ret
ljmp
xor
ror
lock
lret
ss
shl
repz
idiv
les
mov
xchg
xchg
xor
xlat
test
sarb
hlt
xchg
cld
mov
rcr
fcmovnu
mov
inc
cltd
and
movsl
add
in
xchg
rorb
jecxz
cmp
icebp
ljmp
iret
cld
test
clc
test
iret
loopne
test
loop
enter
imul
shll
out
into
sbb
fld
ds
icebp
xchg
in
lock
loope
loop
hlt
cmp
xor
hlt
ss
loopne
fcmove
jmp
ret
aad
fimull
xchg
xchg
shlb
shlb
jmp
aam
repnz
jmp
aam
ds
shl
ret
mov
in
lret
loope
xor
lret
xor
enter
lret
in
xchg
sbb
in
sub
out
lret
loopne
sbb
in
and
jmp
cmp
loopne
lock
repz
in
sti
sub
cli
rcl
cmp
jecxz
mov
rorb
mov
ret
cmp
ss
xor
std
rcr
ljmp
call
iret
add
sub
in
fxch
hlt
cmp
stc
repnz
ret
roll
leave
loope
xchg
loope
out
clc
aad
xor
repz
cmp
xor
repz
fnop
test
test
addb
out
jecxz
shl
idiv
lret
lret
rcl
sti
icebp
int
ret
fadds
std
test
and
nop
mov
lret
lret
aam
xor
call
int
xlat
out
stc
repnz
enter
loopne
loop
repnz
sub
iret
lock
out
cli
incl
addb
out
lret
test
xchg
repz
jmp
out
or
fdivrs
addb
in
ffreep
fucomp
fmulp
shl
cmp
ljmp
cld
stc
iret
std
rol
idiv
out
lret
mov
repz
out
cs
repz
cmc
das
cmp
lret
cli
out
fsub
xor
repz
out
test
mov
notb
cld
aam
repnz
sti
fsub
aad
sar
fcmovb
hlt
in
clc
xchg
icebp
call
int3
lret
sub
cmp
fmul
out
fidivrs
call
mov
jmp
jmp
shl
loope
jecxz
xor
cld
rcl
cmc
cmp
xor
xchg
jecxz
clc
stc
jecxz
icebp
sub
cmc
out
loop
xor
loopne
cmpl
cld
ror
xor
out
in
loop
loope
icebp
in
call
clc
sti
lret
into
in
cli
test
xchg
leave
xlat
and
rcl
loope
sub
aam
clc
ds
jecxz
loope
fsub
call
fxch
test
cld
in
sub
clc
repz
fcmovbe
ret
shl
fdivr
ret
call
in
fmul
sub
rcr
out
repz
sti
cmp
ret
fidivrs
sub
leave
ret
fadd
lret
jmp
fmull
into
sti
call
aaa
adc
into
loop
div
stc
mov
mov
call
stc
out
rcl
xor
aam
repnz
repnz
aam
movb
fcomip
iret
loope
xor
aad
repz
imul
lret
jecxz
repnz
cmc
add
hlt
ds
adcl
leave
jmp
fidivrl
fldln2
push
repnz
xchg
rolb
mov
mov
out
lea
repz
out
iret
aad
jecxz
cli
mul
icebp
ret
fucomp
loope
mov
int3
out
xchg
xor
jmp
call
cmp
loope
aam
roll
mov
out
repnz
les
ss
out
xor
in
ljmp
call
hlt
jecxz
orb
int3
ret
int
cmc
in
repnz
cmp
cmc
sbb
in
addl
jmp
das
shr
cld
ror
int
cmp
rorl
in
in
mov
lock
in
ljmp
fdivrl
cmp
rol
cmp
fdivrp
mov
fld
fsubr
xchg
out
jmp
out
cmc
cmp
int3
xor
loopne
fsub
fxch
sarl
idivl
ret
sub
mov
mov
imul
sarb
cs
ljmp
cmp
std
jmp
enter
jecxz
out
cmc
aas
in
into
cmc
cmp
cmp
hlt
xor
fucom
test
in
ret
into
int
sbb
std
mov
mov
jmp
ret
leave
aad
fcmovnu
sub
sub
and
movsl
add
loope
in
xlat
cld
sar
cmp
xlat
shl
icebp
loopne
cmp
xlat
inc
in
in
lret
jmp
fbstp
test
iret
out
rcr
cld
xlat
bnd
jmp
test
in
out
rcll
icebp
int3
int3
cmp
imul
out
int
aam
sar
std
lock
std
loopne
in
roll
xor
cmp
in
clc
shl
cmp
call
sti
int
lock
aad
out
shl
call
aas
xchg
cld
adc
cli
leave
fists
jmp
leave
hlt
repnz
shl
test
rcr
fsubr
aad
ljmp
in
in
sub
lret
int
cmp
fpatan
fdivp
cmp
out
cmc
fld
cmc
mov
out
mov
cmc
shr
cmp
div
lock
fcmovbe
icebp
int3
repnz
sti
stc
and
xlat
mov
clc
fcmovbe
out
std
cld
call
fsubr
stc
rol
not
icebp
clc
neg
aad
inc
stc
fsubr
cld
ror
iret
aad
shrl
hlt
xor
in
std
out
into
xor
loope
adc
cli
rcl
fcmovnu
fiadds
xchg
mov
xor
xor
enter
fstpt
fcom
loopne
icebp
add
loopne
fsqrt
fcmovnb
int
test
out
xchg
int
ret
int
iret
int3
leave
repnz
fsubrp
rol
in
test
nop
loope
enter
divb
ss
aaa
ror
xor
rcl
lock
fdivr
cmp
icebp
int
hlt
shll
call
sar
fmulp
xor
lock
cmp
ret
mov
mov
sti
mov
sbb
fcoml
out
clc
sar
cmp
aam
loop
mov
mov
hlt
lea
xchg
and
cmp
ret
in
cmp
xlat
cld
icebp
adc
int
iret
std
loop
enter
int
loopne
rcr
lock
clc
divl
out
ret
ljmp
clc
in
xlat
enter
cli
out
in
int
sub
in
les
sub
in
lret
cmp
rolb
call
lock
test
ret
jmp
lret
fcmovu
cmp
int
repz
loopne
sti
call
jmp
loopne
in
push
out
ss
stc
call
fdiv
shl
shl
call
int
jecxz
repz
aam
in
xor
xor
cld
neg
lock
cmp
cmp
sti
clc
and
fcos
xchg
rcl
mov
shlb
jmp
aad
out
sub
sti
in
test
mov
out
cld
nop
test
xlat
out
repnz
cmp
jecxz
in
into
aas
std
call
mov
std
and
loope
int
hlt
iret
loop
test
int3
lock
fnstsw
cmp
fiaddl
ljmp
xor
enter
repnz
loope
sub
hlt
test
in
cli
incl
loopne
clc
enter
icebp
ror
cmp
ds
incl
loopne
cli
neg
cli
fucomp
fdivrp
loop
ret
xor
repnz
cmc
ss
into
jecxz
stc
sbb
lock
sti
lea
repz
lret
loopne
in
in
out
out
iret
aad
cld
call
out
xor
call
icebp
into
shl
call
fidivrs
in
ljmp
fsub
mov
and
jmp
cmp
out
out
in
sar
cmp
clc
out
jecxz
loop
incb
mov
les
out
leave
sar
cmp
ret
std
cli
loopne
cli
out
idiv
lret
in
ljmp
aam
lock
std
cmp
lock
cmc
xchg
aad
sti
xlat
in
int3
loopne
fmul
out
out
out
out
icebp
jmp
repnz
clc
in
cmp
fsubp
loopne
cld
cld
loope
fucomi
int3
int
into
mov
clc
fadd
das
leave
fcomp
sti
fcmovnbe
ret
xlat
rolb
xlat
lock
xchg
loop
hlt
cmp
hlt
cmp
jmp
in
rcr
xlat
ffree
out
mov
lret
or
loope
xlat
in
cmc
inc
xlat
aaa
jmp
lock
cli
aam
incl
faddl
roll
call
cmp
not
out
test
std
ds
mov
loopne
int
call
out
out
mov
xor
add
cmp
jmp
vaddsubpd
rcr
pop
push
xchg
fildl
sub
jle
add
ss
int3
jmp
fcom
in
jmp
fst
mov
lret
test
jmp
loop
ljmp
fnstcw
out
out
xlat
aam
repz
aam
cld
fldpi
fsts
ljmp
cmp
loop
loopne
fcmovnu
icebp
cmc
xlat
lret
jmp
call
cmp
jmp
cmp
fdivp
fmuls
clc
lret
call
iret
orl
hlt
leave
xlat
neg
xor
std
cld
rol
jmp
fldl
das
out
test
enter
jecxz
in
test
xlat
hlt
sti
loop
fsub
mov
in
jmp
aad
fstpt
cld
fsubr
fdivr
aam
out
test
addb
mov
into
enter
sti
enter
fmulp
repz
cmp
mov
int
lock
mov
ljmp
dec
sar
loopne
xchg
int3
fmull
out
xchg
xor
repz
lock
leave
lock
in
fdivp
fcmovnbe
loope
fcmovnu
enter
leave
aam
in
mul
ljmp
neg
test
cld
test
mov
enter
xchg
rorl
cmp
int3
neg
clc
ret
hlt
cld
test
sub
jecxz
xchg
shr
xor
rcl
in
fdivr
iret
cli
repz
cli
iret
out
fiaddl
inc
xchg
nop
in
shl
fsub
aad
leave
aaa
jmp
xlat
cmp
repz
out
or
loopne
mov
nop
sub
out
div
cmp
ret
aam
filds
xlat
lret
lret
xchg
jecxz
ret
icebp
out
into
cld
cmp
loopne
out
fcmovb
clc
lret
mov
repz
enter
xlat
aam
sar
in
fnclex
fistpll
icebp
test
filds
shl
jmp
divb
int3
sarl
sti
fucom
cmp
ds
neg
test
xchg
lret
xor
iret
xlat
out
sar
fxam
shl
test
clc
testb
hlt
fucomip
shl
xor
not
lret
repz
jecxz
roll
mov
xchg
out
test
xor
out
iret
out
cld
int
roll
mov
fisttpll
in
int
xlat
loope
cli
in
cmp
ljmp
out
xlat
vpsllq
fsub
mov
cld
loopne
rcll
enter
fdivrs
loope
out
loopne
loop
cmp
xlat
call
xchg
out
in
shll
fsub
in
ljmp
lock
cld
idiv
in
lret
repnz
aam
shll
hlt
vmaskmovdqu
int3
fdivrs
fcmovnbe
jmp
out
std
repnz
in
out
call
iret
into
repnz
enter
orl
and
cli
xor
stc
out
icebp
fcom
aam
xlat
fmuls
rolb
rol
enter
aam
lock
stc
idiv
ret
repnz
fyl2xp1
ljmp
xchg
test
xchg
int
aam
stc
int
in
lock
iret
into
clc
aad
test
xchg
cmp
test
repnz
into
xlat
out
iret
enter
addl
xchg
icebp
repnz
sar
in
lock
cmp
xor
fstp
ret
loope
flds
xchg
int
hlt
xor
call
in
xor
test
fdivr
ret
cli
std
mul
in
out
fucom
loopne
iret
repz
shll
in
cmp
out
sti
fiaddl
fucomip
mov
clc
in
out
in
in
out
xchg
std
imul
loopne
das
cmp
in
stc
sar
sarl
sar
fcmovbe
xlat
mov
out
int3
mov
in
mov
clc
int3
jmp
aad
cmp
icebp
inc
rol
in
neg
fcmovne
cli
out
loopne
jmp
clc
aam
cmp
cmp
cmp
in
shl
xor
std
in
loope
test
loop
leave
fdiv
fdiv
loope
into
xlat
xchg
rcl
idiv
add
mov
dec
xchg
fucom
xor
jmp
call
cmp
add
mov
jmp
rcl
fcom
fcom
fstp
outsb
push
mov
adc
jl
sub
jle
movsl
add
fnstsw
loopne
and
mov
aas
cld
sti
icebp
mov
out
decl
in
cmp
clc
stc
xlat
div
in
lock
sar
push
stc
test
cli
ljmp
xor
fsub
shl
aam
iret
ds
loopne
aas
enter
into
lock
out
repnz
xchg
loop
enter
out
lock
xor
hlt
out
and
mov
icebp
iret
xchg
cmp
call
lret
not
ret
in
lret
out
std
leave
jmp
or
xlat
fdiv
fsubr
into
ljmp
xchg
out
fmulp
cli
xlat
lock
lret
test
xor
icebp
shlb
stc
div
jmp
fdivrs
faddl
cld
cmp
xor
shr
cmp
repnz
cmc
jmp
fcmovnbe
cli
not
loopne
xchg
mov
hlt
xchg
fmulp
xor
divb
icebp
repz
cmpb
cli
xlat
out
jecxz
rol
int3
fcmovne
ljmp
xchg
das
int3
repnz
xor
cmp
ret
cli
xchg
out
testb
call
ret
xor
sarl
pushl
int
cmc
jecxz
or
cld
not
cld
test
lock
fcmovne
in
xchg
ret
ret
int3
ss
loope
ds
std
jecxz
fstp
cli
and
fnclex
mov
xchg
repz
lret
into
lock
cld
cmc
out
fmul
in
in
addb
cli
ret
popl
ss
int
cmc
fsubr
aam
out
sar
jecxz
fdivr
les
int
cmp
div
xor
leave
idiv
iret
fst
cld
out
div
addb
test
adc
lret
aad
ljmp
fstp
cmp
cmp
aas
fucom
ljmp
ljmp
sub
leave
fucomp
fsub
in
loop
ret
fdiv
leave
test
xor
in
repz
shl
xor
cmp
cmc
int
ds
fldl
in
leave
int3
enter
roll
vcvtdq2pd
aad
call
test
xlat
repnz
enter
loope
fmull
in
icebp
cld
repnz
fcmovbe
roll
fadds
test
cmc
aad
aaa
jmp
rcr
cmp
lds
in
fmull
xchg
xor
clc
repz
in
aam
xlat
jmp
sarl
cld
cmp
leave
sti
les
shl
repnz
cmp
out
fcmovne
xor
loop
out
call
fcompp
stc
lret
jmp
mov
jecxz
xor
out
xor
in
cmp
out
ljmp
idivb
fsub
in
lret
jmp
std
xchg
repnz
sti
in
xlat
fdiv
fldln2
icebp
fnstsw
movb
call
xchg
mov
cmc
icebp
cli
out
call
out
aam
clc
cld
loop
in
fisttpl
dec
shrl
sarb
ljmp
rcr
mov
ljmp
sti
test
out
in
repnz
fcmovu
leave
out
sbb
cmp
cmp
xchg
loopne
mov
fistl
jmp
xor
in
int3
lret
xor
loope
test
in
sti
neg
lret
lret
icebp
loope
loop
out
call
xlat
out
lock
lret
div
fnstsw
ffree
hlt
lret
lret
stc
xchg
out
out
into
in
xchg
icebp
ret
jmp
cmc
cmp
cmc
ret
mov
aam
xchg
notb
int
out
xor
xor
aam
dec
leave
rolb
out
sbb
iret
fmull
fcmove
ljmp
cmp
aas
ret
rorl
in
cli
fisttpll
adc
stc
repnz
iret
out
in
stc
rol
cmp
icebp
mov
mov
jmp
xchg
mov
xchg
dec
sar
aaa
lret
xlat
lret
fcom
aad
clc
aam
hlt
leave
enter
jmp
test
out
cld
jecxz
out
cs
shl
jmp
into
shl
sarl
in
mov
jmp
ror
in
decl
xbegin
in
sti
jmp
and
in
fdiv
lret
mov
leave
out
rol
cmc
ljmp
hlt
cmp
out
mov
xor
add
cmp
jne
mov
mov
xor
add
mov
mov
mov
jmp
ret
fstp
ret
frstor
mov
in
js
push
xor
jle
vpmaxsw
out
mov
roll
xor
xor
out
out
cmp
cmp
int
ret
call
loopne
fmuls
xchg
loop
ret
ljmp
ror
xlat
imul
sti
ds
in
sbb
mov
jmp
repnz
in
shll
clc
aam
std
jmp
repnz
rolb
fcomi
loopne
clc
in
std
mov
iret
in
xor
repz
das
aaa
icebp
clc
clc
icebp
fst
aad
sarb
orb
iret
out
jecxz
enter
rcr
xor
ret
les
mov
xlat
jmp
lock
xlat
sarb
stc
fcom
fprem
xor
leave
ljmp
jmp
lret
out
lock
in
iret
cmp
loope
out
lret
call
icebp
iret
div
loope
ret
enter
loop
cmp
aam
xlat
aam
ds
jmp
ljmp
cmc
cmp
divb
fidivrs
fcom
ss
fmuls
nop
int
out
aam
fcomp
out
shl
clc
aam
fnstcw
idivl
in
ret
sub
shl
xchg
aaa
jecxz
call
fsubrp
ljmp
loope
ret
loope
in
in
mov
sti
shl
ljmp
fdivr
jecxz
repz
shr
std
mov
mov
std
repnz
sub
idivl
xlat
cmp
imul
cld
int
fadd
call
sti
decb
sti
out
jmp
int
ror
cmc
rcl
cmp
fsubr
aas
in
in
loopne
lds
mov
cmp
lock
ror
cmp
cmc
cld
std
test
fucomip
call
adc
in
cli
stc
stc
aam
repnz
in
fucomip
aam
loope
mov
fcmovnbe
cmp
in
jmp
rolb
out
std
cmp
out
jmp
neg
hlt
lock
std
cmc
xchg
leave
nop
in
cmc
or
loop
ret
repnz
cmp
hlt
test
clc
mov
incl
stc
rol
enter
cmp
cmp
roll
xchg
jmp
orb
in
xlat
lret
enter
cld
fiadds
sti
lret
loopne
flds
loop,pn
aam
ss
rcl
lret
shl
and
sbb
std
ljmp
xor
repz
clc
cli
into
cmp
aad
repz
std
ljmp
test
loope
loope
sub
enter
xlat
xorb
rcr
in
stc
mov
jecxz
fcomp
fstl
leave
enter
aaa
leave
aas
xorl
cmp
jmp
std
vpmacssww
int
mov
enter
int
jmp
ljmp
test
fildl
lret
ljmp
xlat
cmp
xor
repz
out
stc
fnstcw
rcr
and
fldl
clc
stc
test
into
aaa
aaa
cmp
in
fucom
inc
cli
iret
testb
test
out
stc
int
xchg
nop
xchg
aas
xor
cmp
cmp
call
lock
fsub
in
icebp
xchg
loop
int3
mov
sti
lock
in
sub
call
cmp
rcl
lret
in
ds
in
cmp
ffree
into
xchg
call
in
icebp
call
fstp
dec
loop
ss
xlat
fsin
xlat
cli
mov
into
jmp
rcl
rcr
int3
jmp
test
sbb
test
mov
fadds
repnz
fucomi
leave
repz
fdivr
ds
cmc
call
cld
loopne
dec
rorl
das
leave
int3
icebp
xor
shr
fldl
rcr
imul
in
enter
mov
in
enter
fldln2
aad
lret
aas
aad
icebp
stc
fmulp
out
fildl
in
clc
cmp
in
stc
in
icebp
shl
aas
loop
jecxz
std
out
fucomi
sti
out
mov
jmp
jmp
rcr
xor
int
cld
loopne
addl
test
mov
loop
mov
decl
clc
in
sti
or
aad
rolb
les
xor
mov
sub
add
mov
mov
mov
movzwl
add
mov
mov
mov
xor
jmp
aam
fistl
stos
lahf
std
stc
cmp
movsl
add
addb
xor
fdiv
xor
fndisi(8087
fidivrs
add
rol
shr
out
ror
out
repnz
xor
icebp
std
cmp
sarl
aam
faddl
xchg
out
vpsllq
into
fst
leave
xlat
out
idivb
fadds
rcr
lret
out
testl
in
imul
fldz
repz
fucomi
adc
aam
repnz
in
jmp
fdiv
test
in
shl
xor
fsubr
jmp
idivl
add
test
ds
xlat
lea
xchg
repz
cmp
div
xlat
cmp
fsub
icebp
fisttps
mov
cmp
fdivp
iret
in
cmp
aad
aad
xlat
ffree
shl
rcr
fldz
cld
sbb
test
jmp
cmc
icebp
icebp
into
int
jmp
sti
std
clc
out
hlt
fstp
xchg
std
in
lret
xchg
enter
out
shr
rcr
repz
mov
cld
fsubr
xchg
cld
xchg
and
ss
repz
hlt
jmp
inc
into
jmp
loope
mov
faddl
in
test
repz
jmp
imul
jmp
fsub
test
jmp
idiv
popl
jmp
cmp
fidivs
in
cli
cmc
repz
aad
repz
mov
in
fpatan
rolb
out
shr
cmp
repnz
loope
fstp
int
clc
lock
loop
shr
lock
cmc
shl
xor
std
xor
fcomp
cmpl
call
in
loop
leave
enter
mov
aad
sar
cmp
xor
hlt
xlat
cmpb
repz
sti
mov
mov
loop
out
std
loopne
cmc
call
shl
in
cmp
fstpt
test
fsubp
icebp
enter
clc
cli
mov
ljmp
aam
sar
aam
jmp
int
repz
hlt
jecxz
lret
mov
or
nop
sub
ljmp
lret
fcomip
in
stc
mul
out
mov
test
mov
mov
orl
ret
jecxz
xor
cmp
int
cld
icebp
xor
fiadds
mov
sti
enter
loop
cmp
out
cmc
repz
cmp
lret
cmp
fdiv
enter
test
call
iret
xor
fcmovu
ljmp
div
out
shl
ljmp
repnz
or
jmp
aam
and
fadds
movl
repnz
stc
int3
shr
cmp
in
sti
fucompp
xchg
cli
mov
into
into
fucomi
call
aaa
cmp
stc
out
idivb
aad
cld
loopne
lock
in
test
cld
int3
nop
out
leave
in
out
iret
loope
shl
lock
std
and
xlat
lret
lock
shl
cmc
stc
aad
jmp
cmp
cmp
fildl
cld
enter
cli
roll
shl
cli
int
fsubr
into
leave
xor
ss
adc
neg
xchg
lret
xor
xchg
mov
mov
rol
stc
fnstenv
fdiv
fidivs
lret
ss
shl
sar
cmp
jmp
call
xlat
cmp
in
cmp
repz
repz
addl
xor
fadd
das
aad
in
lret
xlat
in
into
ss
addb
lret
lret
repnz
xchg
lock
ret
neg
int3
cmp
or
test
out
hlt
loope
mov
fmul
fdiv
out
xor
in
cmp
sti
sbb
cmp
std
adc
mov
in
int3
in
leave
xchg
out
out
in
cmp
ss
aam
rol
std
fnstcw
cmc
std
sbb
in
orb
xor
shll
xlat
jmp
fdivp
xor
icebp
fsubrp
fcmovne
loopne
sti
fucomi
leave
rclb
xor
in
cmp
out
out
cmp
repz
sbb
jecxz
iret
out
addl
repnz
sub
cmp
out
fdivr
mov
xchg
mov
ljmp
out
lret
cmp
lret
shl
repz
faddp
aam
ffree
std
test
repnz
or
add
jmp
fstp
je
xchg
or
and
jle
movsl
add
jmp
aaa
clc
aaa
std
hlt
fistpll
roll
fmul
jecxz
call
aas
xlat
lret
fnstcw
in
cmp
ljmp
shl
cmp
fucomp
mov
lock
xor
fnstenv
cmp
loop
cmc
aaa
rcl
test
enter
mov
mov
cli
xor
call
into
shr
roll
jmp
shr
dec
aam
ss
enter
cmp
cmp
std
and
repz
jmp
mov
out
enter
out
jmp
std
shl
clc
sbb
icebp
sar
rol
fsubp
stc
test
ljmp
jmp
icebp
sub
cld
fdivr
out
aas
int
fpatan
icebp
cli
shl
aam
jecxz
jecxz
rorl
shl
loopne
clc
call
iret
dec
sarl
out
loope
clc
test
clc
out
or
in
cld
mov
int3
imul
out
in
shr
ss
cmp
aam
and
test
lock
cmc
fdivs
leave
aam
lret
cmp
cli
fxch
cmp
fadds
orb
icebp
fbstp
jmp
out
clc
ds
rcr
cld
icebp
clc
sbb
stc
lret
fsubr
repz
xor
xor
cmp
push
in
loope
cmc
lock
rorb
fcomip
cs
fdiv
in
cmp
aaa
aam
in
aaa
sbb
neg
ret
loop
lret
in
in
out
xchg
rcr
out
shr
fst
cmp
sarb
in
fcom
icebp
shl
cli
les
xchg
in
mov
xchg
cs
jmp
sub
lock
icebp
loopne
clc
lock
call
out
ret
fucomip
bnd
jmp
cmc
fincstp
cmp
jecxz
loop
cmc
fiadds
mov
std
into
in
or
sar
leave
call
fdivr
ret
cmp
repz
fucomp
in
hlt
faddp
in
in
fstpt
out
cmp
shl
lock
xor
faddp
test
call
xchg
sub
cld
lret
enter
aas
aam
iret
ret
inc
xlat
in
jmp
mov
aad
xor
sti
cli
bnd
fcmovbe
rol
mov
mov
xchg
mov
out
ror
cmc
aaa
cmp
lock
cld
fsubr
ffree
int
cmc
aam
in
ret
testl
enter
jmp
rcl
fsubr
fcom
idivl
loope
ret
rol
fcomp
mov
fmuls
nop
loope
xor
in
cmp
icebp
test
xlat
sti
iret
enter
xchg
xchg
in
filds
lret
jmp
rcr
clc
rol
fcmovb
repz
enter
mov
mov
in
hlt
xor
cmp
jecxz
jecxz
aad
neg
orl
into
loopne
xchg
out
int3
lock
std
int3
ror
hlt
cmp
fdivr
cli
jmp
lret
out
leave
lret
out
adcb
int
cmp
iret
std
repz
fildl
into
flds
xchg
xor
fprem1
xor
cli
in
fidivrs
xor
in
add
filds
mov
loopne
ljmp
xor
fstp
shr
iret
xor
int
icebp
fsubp
aam
jecxz
xlat
sti
int3
out
ficoml
jmp
rol
mul
ds
neg
lret
loopne
test
mov
in
call
rcl
into
out
clc
in
fdivr
iret
call
fcmovnbe
cmc
cmp
sbb
cmc
in
out
addl
rcr
shl
repz
clc
aad
iret
xlat
int3
rcr
loope
cli
loope
faddl
into
call
out
lret
clc
cmp
ds
fcomi
xlat
xchg
sbb
fcomip
out
hlt
out
xchg
lock
lock
cld
out
cli
xlat
mov
lret
in
in
leave
into
in
test
lret
fcmovb
sarb
int3
xor
fldl
jmp
xchg
xchg
cs
lock
loop
inc
jecxz
iret
fimull
call
cld
xchg
out
call
rcr
rcr
rcr
ret
aas
in
ds
call
mov
repz
jmp
shlb
ljmp
mov
movzwl
sub
cmp
mov
movzwl
jg
jmp
int
rol
fst
lcall
roll
jle
movsl
add
fadd
iret
in
icebp
fldl
in
loopne
out
flds
fcomip
out
in
idiv
cmp
add
jecxz
in
cmc
leave
enter
lock
xchg
imull
into
enter
repnz
loopne
jecxz
cmp
addb
fimuls
icebp
mov
lock
enter
lret
out
cmp
cmp
cld
jmp
fxch
into
out
cli
fucom
ljmp
aaa
stc
xor
aam
ret
fidivrl
cmc
fcomip
sti
jecxz
or
ljmp
xlat
jmp
out
out
lret
stc
cmp
sbb
movl
xchg
std
test
xchg
xlat
out
int3
cmp
lock
fsubrp
lret
test
clc
lret
lret
fdivp
xchg
iret
xabort
div
out
cmp
sti
fnstenv
iret
in
sti
clc
sar
in
fchs
xchg
call
mov
loope
out
in
fbstp
cmc
test
aam
mov
loop
leave
incb
in
xor
lret
ljmp
cmc
rcl
cmc
repnz
aas
xlat
fst
mov
iret
cld
nop
adc
int3
cmc
out
repz
xor
loopne
in
xlat
xchg
cmc
std
test
in
testl
xor
enter
out
in
xlat
clc
int
test
aad
cmp
adc
xchg
cld
orl
jmp
idivl
shl
incl
fiaddl
mov
xor
std
jmp
out
xlat
loopne
loope
faddl
stc
fdivr
fucom
test
cmc
testb
int
icebp
cmc
div
jecxz
clc
roll
mov
leave
fsub
in
xchg
call
stc
jmp
icebp
in
loope
sar
clc
jmp
std
std
call
repz
jecxz
aaa
cli
into
out
into
fndisi(8087
std
aaa
fsqrt
icebp
fnstsw
enter
mov
fptan
repnz
out
aas
in
jmp
div
int3
xorb
in
std
fmuls
jecxz
repz
xor
clc
aaa
cmc
repnz
in
clc
repnz
leave
jmp
out
ljmp
rcl
out
cmp
cmc
int
dec
ret
ds
orl
test
repnz
ds
test
aad
cli
ret
les
lret
aas
lret
xor
shl
aam
xor
cld
loope
iret
fadd
loopne
cmc
cmc
mov
rolb
leave
ss
fidivrs
cmp
rol
stc
cmp
xchg
fiaddl
in
pushl
das
aam
cmp
cmp
xlat
in
loopne
icebp
iret
inc
hlt
fsub
addl
lea
enter
shr
cli
cmp
rcl
aas
xchg
shl
call
xchg
in
int
enter
cli
xor
fucomip
rcr
into
rol
fadd
loope
call
out
out
mov
ffreep
enter
cmp
iret
lret
icebp
aad
clc
xlat
repz
loopne
fcmove
sub
lret
xchg
xlat
rol
cmp
cmc
ds
cmp
not
stc
shl
aas
test
cmc
into
in
loop
out
xchg
jecxz
xor
xor
xor
adc
cld
fcomi
loop
test
into
loop
call
xlat
icebp
aam
repz
rcr
rol
inc
out
out
mov
sub
incl
out
into
in
in
lret
xor
repz
sarb
loop
cld
idiv
xlat
jecxz
jmp
into
ljmp
cmp
xor
repnz
stc
repnz
icebp
sar
enter
lret
jmp
in
into
int3
aam
out
repnz
out
clc
xlat
ret
rcl
fisttps
mov
xorl
hlt
in
into
cld
repz
xlat
lock
addb
jmp
and
mov
out
shll
iret
cmp
rcl
loopne
out
loop
loope
test
in
loop
fdivp
xor
out
cmp
cmp
sarb
shl
sub
sar
fsubr
mov
mov
mov
lea
vpsadbw
shl
in
aas
cmc
int
rcr
std
cmc
in
lock
jmp
lret
shl
fdiv
xor
sub
sub
mov
jmp
jmp
leave
ret
int
int
mov
push
cmp
jle
add
in
in
xchg
and
loop
test
ret
jecxz
aaa
in
fdivr
in
aad
roll
aam
cmp
sub
hlt
loope
mov
xor
into
test
shr
lock
out
jmp
aas
jecxz
icebp
test
cmp
ljmp
clc
inc
std
fptan
roll
fsubp
in
xchg
int
repnz
hlt
into
jmp
lock
cld
ret
sub
fcmovnb
mov
test
leave
out
mov
xor
lret
sarb
lock
loop
rcr
mov
in
xor
xlat
int3
lock
in
push
std
cmc
cmp
jmp
xchg
jecxz
xor
jmp
fsubr
ret
loope
clc
enter
orl
jecxz
aad
cmp
cmpl
iret
call
push
lret
leave
fimuls
lret
repnz
icebp
xor
cli
xchg
mov
in
loopne
jecxz
call
ss
int
clc
rcr
iret
rolb
aam
cmc
mov
lock
mov
call
hlt
fcom
lock
lock
xor
out
sar
shl
call
into
in
jmp
clc
stc
in
loop
in
aam
out
roll
out
test
fadd
shr
ljmp
into
std
xlat
iret
hlt
aam
repz
cmp
clc
jecxz
add
fmul
loope
xchg
shr
or
ss
jmp
ds
loopne
ds
in
stc
icebp
std
xlat
in
or
clc
addl
jmp
lret
cld
out
fcmovbe
cli
fnstcw
in
cld
xor
xchg
ror
xchg
cli
xchg
cmp
enter
xor
fstpt
ffreep
sti
rcr
aas
mov
loope
out
mov
mov
jmp
cmc
in
in
out
fchs
lret
clc
cmp
jmp
xchg
jmp
lock
xor
imul
xor
cmc
rcl
clc
loopne
cmpb
rol
loop
out
fdivr
orb
aad
fcomp
repz
cmp
shl
cld
in
mov
ret
fcmovb
fmul
into
addl
rcr
shlb
iret
repnz
cmc
stc
test
out
out
in
out
nop
int3
ror
shl
aaa
rcr
fldz
repz
test
loop
roll
ljmp
lret
xor
ss
in
cmp
lret
cmp
aad
mov
jecxz
test
shl
xlat
xor
out
cmc
cmp
rcl
div
in
jecxz
add
ljmp
mov
sarb
iret
lret
iret
or
out
fnstcw
loope
aas
cli
shl
xchg
cmp
leave
repz
shl
iret
out
fdivrs
out
ds
ret
sti
cli
mov
iret
int3
leave
shl
mov
test
aam
call
xlat
icebp
hlt
test
leave
mov
loop
nop
or
cmp
repz
sarl
jmp
jmp
aad
out
sti
cld
int
xchg
loope
ret
xor
xlat
enter
loope
idiv
loopne
ds
xchg
fimuls
loop
in
shr
jmp
xor
in
xor
cmp
std
leave
leave
in
fcmove
repnz
mov
shl
xor
enter
clc
mul
fsubp
hlt
mul
fimuls
leave
out
repz
out
ss
jmp
call
leave
fucomi
into
clc
jecxz
ret
xchg
clc
movl
in
aas
out
ljmp
rol
addl
mov
out
cs
xor
stc
repz
lret
neg
lock
sti
xlat
cli
xlat
stc
loopne
mov
test
int
enter
repz
fldl
cli
stc
fsincos
out
xchg
cli
iret
xchg
in
cmp
hlt
leave
cmp
aaa
rcl
cmc
xor
cli
iret
stc
loop
mov
jmp
in
flds
in
ret
xor
out
xor
aaa
cmp
clc
ds
rcl
jecxz
out
test
jmp
shr
cmp
ror
iret
fucomip
cmc
rcr
aaa
rol
test
loop
fadds
add
add
aam
mov
xchg
int
jle
add
in
addb
out
lret
ljmp
ret
repnz
loop
out
loop
ljmp
xchg
out
iret
out
enter
sti
aam
sbb
fnstcw
clc
in
mov
call
xchg
jecxz
out
xor
xor
icebp
out
test
loop
ret
cld
enter
fldl2e
lds
ror
ss
out
rcl
xlat
cmpl
testl
shl
leave
call
aaa
int
in
aad
fcmovb
ret
fdivr
shl
in
ljmp
out
cmp
jmp
sti
or
shl
test
adcb
int3
shlb
aam
fadd
std
lret
aas
fsub
sar
sbb
fsubp
mov
or
enter
xchg
aad
lret
sti
cmp
in
stc
aam
lret
imul
iret
out
stc
shl
aad
ljmp
repz
int3
enter
xlat
fcmove
addl
fmull
ffree
int
mov
int
stc
jmp
cmp
xlat
iret
sarl
xlat
call
mov
xor
shr
xchg
hlt
in
fsubr
shll
int3
std
sti
int3
in
out
repnz
xlat
loop
std
fimuls
jmp
rcl
fdiv
ret
cmp
neg
aam
cmc
into
fcmovu
sti
mov
in
mov
out
lret
in
cmp
fdiv
out
aam
out
shl
fdivr
aas
aas
flds
fisttpll
aad
aad
out
sti
rcl
lret
aam
aas
std
jecxz,pt
xchg
mov
repnz
iret
call
cmp
int3
cld
int
cld
cmp
fsubp
or
jmp
out
roll
fld
clc
int
enter
cmc
cmp
rol
ljmp
loope
loope
fdivs
stc
aad
ret
shl
xchg
out
nop
in
fmull
into
leave
ljmp
int3
lock
xchg
xchg
and
cmc
test
xchg
xchg
loop
in
repnz
rcl
lret
divl
out
sti
sarl
fld
cmc
jmp
enter
xchg
leave
repz
std
enter
lret
loopne
repz
idiv
aas
sti
adc
jecxz
xchg
nop
out
test
jecxz
out
std
icebp
aaa
loopne
ret
aas
cmp
idiv
fcmovne
fstp
nop
filds
shr
shr
out
shll
cld
icebp
aaa
cmp
iret
loopne
fcmovu
cmc
fucomip
sbb
icebp
call
ss
ror
repz
cmp
sarl
jecxz
cli
hlt
out
cmp
repz
popl
in
cmp
lret
jmp
cmp
jecxz
test
and
incb
in
lret
shr
hlt
shr
cld
lret
hlt
cmp
cmc
loope
stc
fmul
loop
cmp
enter
rorb
icebp
cli
xlat
aad
xor
into
rol
cmp
out
mov
test
sub
ret
jmp
xchg
ret
out
lret
ljmp
adc
mov
leave
sub
cli
in
cmp
cmp
sbb
ret
cld
mov
mov
int
into
mov
xlat
xor
bnd
jmp
cmp
leave
aad
sbb
in
loopne
repnz
xor
in
leave
aad
aad
cmp
iret
hlt
loope
lret
jecxz
mov
xchg
jmp
bnd
int3
clc
icebp
std
push
test
loope
and
xchg
jecxz
icebp
leave
lret
xorl
ss
cmc
out
fdivp
clc
sarl
hlt
orb
in
decb
int3
xor
stc
hlt
sar
ds
aad
cmp
ffreep
cli
cmp
mov
test
hlt
sub
out
xor
cmp
in
out
xlat
repz
ss
in
loopne
jmp
imul
jmp
lock
std
cmp
int
iret
in
icebp
into
fincstp
sbb
std
call
leave
in
shrb
lret
cmp
cmp
into
cmp
idivl
in
out
int3
leave
jmp
xchg
mov
out
int3
stc
in
in
jmp
fmulp
ret
test
cli
fucomp
test
loopne
mov
lea
mov
mov
cmp
je
jmp
xlat
rol
xlat
enter
push
cs
fs
add
in
repz
xor
aaa
fcmovnb
in
addl
repz
test
fucomi
test
leave
loopne
inc
ret
jmp
cli
divl
jmp
test
loopne
testl
shl
xchg
imull
enter
jmp
fcomp
imul
sbb
shl
cld
mov
xchg
jecxz
ss
call
clc
hlt
aam
ds
in
loope
repnz
nop
out
repnz
sti
sarb
loopne
clc
cmp
cmp
fstp
fists
iret
nop
in
loopne
ret
out
lret
xor
mov
xchg
jmp
lret
nop
std
jmp
in
cli
fdivl
aam
int
aad
loopne
xlat
out
jmp
in
fsubr
leave
jecxz
hlt
xchg
repnz
jecxz
shr
fdivrp
in
shr
cmp
fcmovb
mov
in
xlat
int3
loope
icebp
lret
into
aam
in
call
stc
rcl
faddl
hlt
xchg
out
out
icebp
int3
mov
bnd
jmp
cmp
cmp
out
int3
in
in
in
int3
nop
in
fdivrp
xor
into
fdiv
hlt
out
test
aam
sub
in
fimuls
fdiv
int
not
ret
int3
lret
into
out
aam
loope
into
shl
jmp
ret
leave
std
xchg
into
into
xchg
out
out
aad
idivl
jecxz
jecxz
in
addl
jmp
jmp
shl
rcl
ss
repz
rol
sbb
fucom
fcmovu
fucom
out
int3
iret
cmc
int
xor
in
xor
repnz
fcmovne
fildl
jmp
int3
test
divb
sar
sbb
jmp
fnstcw
movl
sub
lock
fildl
ret
addl
call
out
loopne
iret
repnz
xor
iret
call
test
xchg
enter
loope
leave
jmp
loopne
cmc
fmulp
ss
fiadds
std
call
cmp
xchg
int3
iret
ret
jmp
iret
std
sar
cmp
aad
jmp
fmul
out
fsubp
loop
cmc
in
xchg
lock
div
cmp
rcr
addl
in
leave
ret
xlat
fdiv
mov
int
lea
xor
cmp
fsubrp
aas
out
in
stc
cli
fsub
cmp
mov
orb
cmc
lock
lret
fsubr
ljmp
cld
leave
shr
clc
fsincos
test
fistl
hlt
test
neg
xor
repnz
cld
ret
xlat
loop
leave
nop
fsubrp
in
shl
xlat
iret
not
fcom
clc
lret
cmp
iret
sbb
mov
aam
cmp
icebp
ss
aam
rcl
fdivrs
clc
out
ror
shl
aad
fisttps
decb
lret
shl
cmc
ror
loope
test
mov
fdivr
fdivr
cld
rorl
mov
xor
fucomi
ss
cmp
in
xor
loopne
mov
int3
cld
loope
shlb
jmp
cld
repnz
fcmovbe
ret
aaa
into
ffree
aam
aad
in
out
mov
and
xor
std
in
enter
add
in
fadd
mov
filds
xchg
lret
les
stc
hlt
sti
std
shl
loope
out
out
loope
fcomp
cmp
mov
sar
mov
inc
sub
hlt
int
cmp
rcl
iret
cmpb
cli
fsubr
sub
cli
stc
jmp
iret
out
in
shr
iret
jmp
sar
div
sbb
ret
xchg
call
out
into
clc
xlat
lock
jmp
ret
les
jecxz
add
leave
in
ljmp
cmp
rcr
ds
sarb
sar
loope
fisttps
test
in
out
jmp
aam
stc
sarb
idivl
fmulp
xor
rcl
cld
cmp
cli
test
fucomi
jecxz
xchg
jmp
shl
sub
cmp
cmp
out
test
ret
mov
sbb
mov
xchg
clc
jecxz
div
mov
jmp
into
ror
fxch
fst
cmc
mov
mov
jecxz
jle
movsl
add
xor
out
xor
in
iret
icebp
or
fimull
mov
out
xchg
loopne
xor
fidivl
iret
test
in
cli
test
sbb
xchg
lock
xchg
xor
xor
int
cmp
int
fucom
shl
ret
inc
clc
roll
int
int
ljmp
in
cli
idivb
cmp
sarb
in
mov
mov
aam
icebp
shr
lret
sti
xor
fstp
enter
jecxz
ffree
iret
out
fimull
fcmovnu
mov
iret
jmp
enter
sti
xor
jecxz
cmc
fdecstp
cmp
loopne
icebp
out
ljmp
shr
shl
fdivr
std
loop
aam
vcmpss
in
ljmp
int
cmp
cmc
fnstsw
loop
loopne
fiaddl
cld
in
mov
iret
ljmp
cmp
fnstsw
repz
bnd
in
xlat
ret
loop
and
fisttpll
repz
clc
lret
lret
int3
sarb
icebp
cmp
jecxz
clc
loopne
cmp
out
test
nop
loopne
in
xchg
repz
in
xor
enter
iret
ror
std
mov
adc
mov
jecxz
add
hlt
shl
repnz
shl
stc
ljmp
cmp
in
test
cld
jmp
out
mov
int
aad
fxch
out
jmp
shr
test
sarb
fisttpll
int
rcl
xor
cmp
div
aam
cmpb
in
xor
cli
mov
leave
leave
in
mov
fldl
hlt
sub
out
jmp
xchg
shl
cld
aam
fdivr
lock
xchg
aad
shlb
in
cli
out
int3
cmp
lock
aad
fadds
fcoml
fdecstp
test
int3
fdiv
cmp
repnz
rcr
fucom
enter
test
xor
lock
imul
clc
shl
test
hlt
jmp
orb
xchg
cmp
lock
icebp
cmp
ds
fldl
in
jmp
lret
lret
mov
rcr
fmul
lret
out
cmp
lock
repz
mov
in
int
mov
in
out
cmp
ljmp
cli
shr
adc
xlat
vpaddsw
mov
xchg
xorl
int3
rcl
cmp
cld
cmp
cld
shl
rcl
clc
rol
test
jmp
xchg
test
fucomp
int3
testb
stc
ss
int
loope
sti
out
rcl
jecxz
fcmovne
out
fsubr
ret
adc
mov
in
lret
cmp
jmp
fdivp
ret
ds
cmp
shl
jmp
xor
cmp
in
stc
fdivr
dec
ds
call
in
addl
xchg
lock
das
hlt
out
clc
call
test
in
cmp
aad
orl
aad
xor
ljmp
int3
in
testl
and
in
neg
ret
fdivr
repnz
in
icebp
out
out
std
iret
lock
cli
mov
fsubr
loop
out
int3
hlt
jecxz
xchg
ljmp
fdiv
hlt
shlb
cld
fcmovnbe
in
cli
fmull
decl
xor
cmp
orb
stc
mov
sbb
fiadds
cs
aad
sarl
les
neg
mov
ljmp
aad
out
not
enter
int3
loopne
fpatan
cli
in
lock
aad
cli
lea
ror
xchg
fdiv
jmp
xor
rcl
testl
adc
rorb
aad
xor
aaa
idivb
cmp
xor
stc
add
loopne
sti
test
xlat
fimull
in
int3
div
enter
fucomip
aas
bnd
into
loopne
cld
lret
idiv
loop
std
mov
shll
xor
out
int
leave
hlt
cmc
testl
jecxz
jmp
jmp
lret
cmp
std
cmp
std
stc
sar
fcomp
fnclex
cld
sti
enter
in
lret
lret
out
fnstsw
sti
jmp
inc
add
xlat
cmp
add
add
add
rol
rcl
rcl
sar
and
adc
fstpt
movsl
add
fsub
ret
cmpl
test
iret
loop
call
xor
jecxz
jmp
cmc
aas
xor
rcr
cli
loope
bnd
mov
test
xchg
hlt
xchg
call
in
cmp
loop
aas
ret
loopne
jmp
in
ljmp
orb
repz
jmp
jmp
icebp
sbb
idiv
jecxz
test
cld
out
xchg
call
aad
loopne
ds
lock
mov
ret
cmc
int
loope
mov
in
stc
cmp
fnstenv
cmp
out
ret
test
xchg
sub
mov
cmc
in
das
cli
fcmovne
in
fidivs
divb
fcmovnbe
lds
mov
int
nop
mov
shl
in
cmp
jmp
addb
mov
cld
in
mov
lret
xor
xor
jmp
cmc
cli
int3
cmc
cmp
repz
mov
lret
in
int
repz
repnz
loope
into
ret
leave
shl
loope
cmp
ror
sub
sti
addb
call
ss
aam
int3
fidivrl
sbb
rcr
imul
mov
xchg
into
cs
sarl
cmp
cmp
test
rcr
mov
aam
mov
leave
out
in
sub
sub
clc
fdivr
rol
test
hlt
neg
sar
fstp
mov
mov
xor
jmp
ljmp
ret
decl
enter
and
xchg
imul
into
ret
out
cmc
xor
cmp
in
loope
fnstcw
xlat
out
aad
cli
loopne
call
cs
xor
repz
fdivrs
repnz
fadd
lret
fisttpl
xchg
mov
aaa
xor
jmp
aad
ret
into
fndisi(8087
mul
xlat
nop
shr
loop
adc
int3
xor
xor
jmp
rcr
xor
incb
jecxz
mov
aam
divb
repnz
cmp
out
cmp
aam
hlt
rcr
ljmp
nop
xchg
int3
xor
stc
xor
ss
call
loope
iret
jecxz
leave
shr
test
fimuls
jmp
cmc
xor
int3
vmovq
idiv
aam
loop
clc
xchg
clc
lret
xor
sti
ljmp
jecxz
cld
addb
in
out
cld
in
shl
call
sti
stc
clc
jecxz
shl
sti
call
jmp
decb
xor
fnstenv
sarl
not
loope
out
testb
xchg
loopne
in
xor
lret
lret
cld
fdiv
fcmovnbe
cli
rcl
fucom
call
clc
mov
into
hlt
lret
int
std
sti
cmp
shl
cld
repz
aas
in
mov
ljmp
hlt
xor
cmp
dec
ror
rcr
dec
ret
clc
ret
mov
shr
mov
out
shl
call
fdivp
fcmovnu
cmp
aad
faddp
rorl
test
jmp
loope
jmp
ss
xor
stc
aad
loope
ds
ret
xchg
loopne
addl
out
icebp
cmp
ss
stc
in
aad
rolb
cli
fadds
call
enter
stc
fld1
cli
sub
cli
out
aad
mov
loop
iret
loope
clc
lds
cmp
xor
div
stc
int3
loope
ds
repz
out
and
sti
icebp
shl
in
lret
hlt
sub
loope
lret
rcr
sti
aas
jmp
neg
rcr
int
lret
and
in
xor
sti
xor
stc
ffree
aam
int3
icebp
jecxz
call
test
jmp
xchg
in
jmp
out
jmp
loope
adc
fucomi
std
out
mov
xor
hlt
fimuls
in
enter
fdivp
cmp
test
fcomp
stc
ffree
out
faddp
into
xchg
ljmp
stc
int
fsubr
iret
std
cmp
in
lock
cmp
mov
ret
aad
enter
std
loope
xchg
loop
jmp
aam
xor
int3
cmp
out
test
fld
mov
xor
add
cmp
jmp
rcl
rcl
fstp
rcr
cld
cmp
jmp
adc
jle
add
aad
imul
clc
stc
jmp
mov
out
fcmovbe
stc
std
jmp
fdivp
ds
std
call
rcll
ret
iret
in
lock
fsubp
cmc
in
stc
rcr
cld
in
xchg
repz
into
in
ror
sub
out
cmc
enter
in
jmp
cmp
stc
fcmovb
fdivrp
aam
cld
popl
mov
fdiv
enter
cmp
stc
xlat
repz
xlat
mov
loopne
in
mov
lret
cmp
xlat
ljmp
repnz
icebp
in
xlat
cmc
fmulp
lret
loope
test
adcl
fcmovbe
in
call
repz
aam
roll
int
and
into
repz
cmc
in
xor
xlat
stc
fnstsw
iret
loopne
out
xchg
testb
rcll
sti
ljmp
shl
out
lock
in
mov
int3
fcmovnu
xchg
xchg
xchg
ret
shr
out
out
cmp
into
fdivp
addl
lret
or
std
loope
xor
clc
lock
lret
stc
roll
jmp
ret
flds
cmc
shr
jmp
cmp
cmp
div
and
fadds
mov
jmp
clc
hlt
aaa
shl
fcmovnbe
iret
sar
xor
sar
add
stc
jmp
mov
idiv
lock
xor
cmp
xor
filds
cld
fdivrp
xlat
jecxz
adc
xchg
in
shl
hlt
int
aad
cmp
ret
test
leave
clc
loope
cld
out
shr
int
xor
fdivr
enter
ret
hlt
leave
fnstcw
test
into
call
out
ret
xor
aam
std
fdivp
sti
xor
call
ret
in
test
call
int3
enter
test
jmp
cmp
xlat
fsubrp
test
out
aad
test
lret
std
incl
repz
ror
ljmp
aas
lret
int
in
enter
mov
add
and
cmc
int3
xchg
test
xor
aad
aad
cmp
ret
loope
xlat
test
cld
xchg
in
xlat
not
enter
fdivr
cld
int
into
lock
cmp
lret
enter
xchg
int
loop
cmp
jmp
iret
cld
aad
dec
out
test
jmp
xor
ss
clc
cmc
stc
lock
repz
loope
rcr
clc
int3
test
fucomip
lret
repz
out
out
stc
fadds
cmp
neg
stc
addb
xchg
incl
jmp
aad
in
loopne
loopne
ret
imul
sti
cmp
and
out
call
fcom
cmp
shl
shl
stc
fcomip
xlat
out
leave
int
repz
ljmp
fiaddl
in
lret
int
mov
lret
in
xor
enter
cmp
std
rol
test
sbb
in
and
out
loope
xlat
xor
cmc
xor
ss
out
fnclex
clc
adc
std
cld
mov
clc
jecxz
cli
sub
addb
test
repz
adc
out
rol
xlat
ret
inc
mov
xchg
into
loopne
xchg
call
rcl
ds
iret
std
adc
aas
sti
test
cli
loope
nop
out
xchg
out
repz
repz
out
clc
test
loope
test
aad
in
ret
enter
xchg
leave
idiv
into
cmp
cld
into
cmp
leave
fcomip
testb
in
ret
int
out
out
int
std
mov
icebp
xor
loope
ljmp
aam
in
fcomip
loope
mul
int3
fadd
enter
xchg
jmp
ljmp
repnz
ljmp
test
repz
ljmp
fnclex
xchg
mov
ljmp
aad
fidivrs
ffree
xchg
out
rol
in
mov
incb
fucomip
ret
fmul
cmp
repz
out
std
jecxz,pt
std
hlt
fcmovu
jecxz
int3
out
mov
mov
jmp
in
xor
hlt
shr
cmp
cmp
cld
jmp
ds
ljmp
je
mov
mov
jmp
int3
enter
lret
int
stos
test
and
mov
fsub
jle
movsl
add
mov
mov
xor
xor
aam
cld
out
imul
fptan
fcmovnbe
addl
flds
aam
aam
cmp
sar
lock
xor
ss
cmp
fxtract
cmc
loopne
leave
int3
out
sti
mov
xor
in
cli
icebp
ljmp
loop
call
std
stc
in
cld
mov
test
xor
xor
jecxz
repnz
fdiv
add
out
in
nop
filds
shl
leave
jmp
xor
out
fxch
cmc
icebp
cmp
aam
fcomp
fcmovne
jecxz
test
shr
int
int
in
xlat
aad
icebp
repnz
loopne
roll
repz
jmp
out
sub
test
cmc
loopne
into
fucomip
idiv
rcl
sub
in
in
mov
repz
jmp
repz
std
cli
lock
jecxz
loop
jecxz
mov
fucomi
lret
xchg
hlt
int3
hlt
clc
cmp
shl
xlat
xor
int
lock
fmul
ret
fcmovu
jmp
sub
fsubr
rcl
cs
int
aaa
sti
imul
add
cli
fadds
fdivrp
lret
xchg
cli
out
xor
int
fidivrl
fcmovu
rcr
repnz
shr
aad
faddp
sti
add
cmp
mov
repz
leave
out
ror
leave
cmp
cld
fdivr
ror
add
iret
into
and
out
sub
xor
xor
icebp
loopne
cmp
loop
out
out
loopne
or
in
test
shl
out
jecxz
shl
in
ret
cmp
ror
xlat
sar
aam
clc
neg
rorl
shl
xchg
xchg
in
ror
xor
repz
icebp
fnstcw
and
shl
mov
fucomip
in
iret
shrb
ret
call
shr
loope
cmp
test
cmp
aad
repnz
add
mov
in
iret
rcr
stc
out
fcmovnu
aaa
hlt
int3
cli
hlt
aad
lret
in
int3
fsts
mov
jmp
into
ror
cmp
loope
roll
jmp
mov
out
shl
add
shlb
in
xor
fcmovne
fst
into
shl
in
les
dec
call
out
cs
out
ss
enter
cmp
cld
cmp
fadd
int
loop
shl
test
ror
aad
out
ds
div
cmp
adc
ftst
std
loopne
jmp
pop
loop
loope
rol
xor
rcr
div
xlat
loop
fiaddl
mov
mov
in
subb
cmp
ljmp
fcmovbe
ret
aas
ds
test
int
mov
in
call
rol
fstpt
repz
fdivp
mul
xchg
test
xchg
cli
loope
xchg
in
shl
in
idiv
fcmovnu
loope
fdivr
out
aad
leave
cmp
in
decl
out
test
out
lret
rcr
cmc
xor
shl
cmp
cmp
out
loope
std
jmp
sub
rcl
xor
aam
in
fptan
mul
fildl
fld
ljmp
int
hlt
div
fcom
cmp
clc
ljmp
icebp
icebp
orb
mov
xchg
mov
xchg
int3
in
aad
fcmove
stc
iret
aas
ret
in
shl
or
dec
std
int
test
jecxz
aad
cmc
xor
cmp
shll
fnstsw
repz
int
rcr
idiv
enter
std
sub
cld
out
jmp
fldl2e
cmc
std
cmp
lock
shl
out
loope
sub
flds
std
int3
das
int
out
xor
ds
aaa
cmp
loope
xlat
loope
loopne
in
lret
std
in
lret
iret
mov
rcl
hlt
lret
aad
cld
xor
not
cld
div
out
loop
aad
sti
cli
xchg
xchg
jmp
fucompp
std
cmp
icebp
rcr
loop
idivl
mov
in
xlat
mov
out
test
int
fucomip
rcl
aaa
lret
cmp
divl
ret
cmp
icebp
incb
enter
stc
adcl
repnz
shr
fdivr
cmc
repnz
loopne
in
cld
xchg
lret
out
out
fcomip
hlt
cli
out
repz
stc
repz
hlt
repz
enter
out
loopne
mov
mov
lea
add
mov
mov
mov
jmp
int
rcl
fcmovu
int
xchg
daa
ljmp
jmp
jle
mul
neg
repz
aas
lret
ret
neg
call
out
xchg
repnz
fiadds
rcl
repnz
stc
jecxz
cmp
add
sti
mov
icebp
fucomp
out
xor
test
int3
repnz
call
out
fiadds
cmc
mov
cld
ficoms
fidivl
jmp
cli
ffreep
loop
sar
cld
shr
repnz
aad
int
std
jmp
lret
in
xor
addb
xchg
xchg
cmc
sti
std
orl
neg
jecxz
xor
jmp
call
not
std
fiadds
ret
xchg
out
hlt
cmp
sub
jmp
sti
cli
shr
cmp
cli
cmp
stc
cmc
neg
xchg
ljmp
out
ror
not
lret
cmc
loope
cmp
out
out
xlat
iret
filds
xlat
xlat
iret
cmc
aad
sti
fmul
hlt
adc
call
loop
enter
mov
xor
in
mov
icebp
fdivp
lret
int
cmp
incb
rcr
xlat
sub
ffree
icebp
rorb
sti
xor
stc
std
jecxz
ds
aas
hlt
clc
aad
cli
loopne
mov
cld
test
shr
ret
out
cmp
not
cli
int3
rcr
hlt
loope
fld1
decb
in
jecxz
in
jmp
sti
cmp
out
f2xm1
ds
cmp
out
xchg
or
mov
aam
ljmp
icebp
xor
cmpb
stc
test
ljmp
adc
bnd
jecxz
int3
out
cmp
ffreep
icebp
ror
out
loopne
xlat
test
mov
jecxz
clc
rol
jmp
call
idiv
fcmovnu
cld
aam
out
jmp
leave
roll
repnz
enter
int
cmp
sar
les
in
in
out
xchg
call
xor
lret
repnz
int3
cmp
cli
sub
in
fcmovbe
xlat
xchg
cld
ret
xchg
std
and
enter
enter
fmulp
fsubr
cmp
in
jecxz
roll
ljmp
repz
stc
lock
xor
shl
lds
fldl
in
in
int3
lret
aaa
xor
cmp
clc
jmp
cmpb
fdivp
imul
loop
testb
in
fmull
aam
jmp
fnstsw
cmc
repz
ret
hlt
ds
cmp
in
int3
in
out
lock
rolb
ret
in
out
fnstsw
fcompp
jmp
cmp
mov
loope
call
out
neg
neg
repz
cmp
rol
cmp
clc
mov
xlat
call
std
out
loope
ret
xor
xor
jmp
rol
rorb
and
int3
out
ficoml
out
iret
ret
enter
call
shl
aas
rcl
test
fucomip
in
std
int3
in
enter
subb
aam
idivl
cmp
cli
fincstp
in
shr
iret
cli
repz
les
leave
xchg
xchg
loop
ret
in
repnz
rol
faddl
ret
mov
out
int
ret
cmp
out
out
shlb
int
stc
cmp
repnz
in
jmp
int3
into
loope
repnz
icebp
hlt
jmp
cld
jmp
int
cmp
fucomp
fld
fdivrp
mov
flds
in
aam
lock
hlt
repnz
fdiv
call
repnz
test
rcr
cmc
jmp
fstl
ljmp
cli
cld
cli
clc
in
ret
not
rcl
fsubrp
incb
loop
aaa
loopne
xor
shl
in
ljmp
sar
cmp
clc
ljmp
enter
loopne
shl
cmp
aaa
into
aad
aas
aad
neg
sar
cmp
rcl
std
test
in
int3
xchg
int
int3
cmp
xor
xor
shl
lret
cmp
xchg
loop
jecxz
in
nop
jmp
jecxz
ljmp
icebp
cmc
ljmp
icebp
dec
fucomp
stc
clc
in
lock
or
out
in
call
icebp
addb
fstp
iret
fisttps
xlat
in
jmp
mov
mov
xor
add
mov
jmp
mov
fst
fxch
jg
lods
loop
jg
fisubs
add
stc
ror
cmp
ffree
ljmp
mov
out
sarl
out
fdivr
lock
in
aad
xchg
out
test
in
addb
aad
icebp
xor
aaa
cmp
out
cmp
fcmovu
icebp
lock
out
jmp
lea
xchg
int3
mov
ret
lret
jmp
xor
cmp
filds
fsub
in
rcl
int3
xchg
loopne
ss
out
cld
into
fsubr
out
repnz
shr
aas
call
lock
mov
xchg
ljmp
xor
sar
aaa
iret
rcl
sar
out
shl
loope
cld
out
leave
into
call
loop
cs
leave
xor
test
mov
leave
in
xlat
test
cld
ljmp
cmc
ljmp
out
or
rolb
fisttps
loope
ficoms
ret
fdivrs
addb
out
enter
in
filds
hlt
xor
int
repz
shl
out
test
fcmovbe
icebp
out
fcmovu
mov
fldln2
lock
xchg
adc
ljmp
clc
xor
hlt
jmp
clc
xchg
addl
int3
xor
jmp
cmc
loope
jmp
loopne
icebp
lock
xchg
jmp
xor
in
xchg
loope
hlt
loopne
clc
out
xor
repz
in
cli
fsub
addb
repnz
xor
lock
aas
aad
loop
in
jecxz
loop
mov
rcl
xor
cmp
loop
ret
fdiv
fisttpll
test
jmp
or
icebp
cmp
rcl
hlt
int
loop
mul
sti
icebp
shl
fildl
fsub
in
fisttps
aaa
xlat
lock
ss
into
sar
ds
mov
mov
out
in
xchg
enter
iret
call
out
sti
rcl
cmp
mov
sub
in
rol
adc
cmp
in
cld
icebp
iret
cmp
jmp
cld
int3
iret
cmc
testl
xchg
loope
mov
into
xor
xor
out
ret
cmp
std
in
in
fsub
loop
fildl
sub
repnz
stc
rcr
and
fisttps
xchg
filds
repnz
aad
xor
sti
cld
lret
hlt
std
mul
loop
mov
loop
enter
test
ss
leave
not
out
cld
fadds
ret
cld
fldl
cld
fildl
icebp
shl
in
sub
imul
fchs
icebp
div
out
clc
fiaddl
jmp
xchg
aas
int
lock
in
repz
fcmovu
lret
fcmovu
fst
ret
stc
out
jecxz
mov
sub
into
out
stc
ljmp
rcl
std
std
lret
cli
icebp
xchg
lret
aam
out
cli
fmulp
leave
lret
cld
sti
repz
clc
fnstsw
xacquire
orb
das
jmp
cmp
std
aam
loop
test
jmp
call
addb
jmp
jmp
cmp
rcr
aas
aad
fxch
test
fsincos
out
out
test
rcr
cmp
out
int
div
clc
clc
loope
aad
out
mov
loopne
into
and
lds
lret
rcl
int
repnz
loop
cmp
aad
mov
mov
cmp
ficoms
in
ss
not
cmc
stc
test
fimuls
aas
mov
enter
in
jmp
test
sti
cld
iret
cmp
stc
mul
iret
clc
test
stc
stc
enter
out
mov
xchg
lret
int3
int3
das
cmp
shlb
iret
ror
int
mov
clc
leave
lret
sti
out
jecxz
lret
loop
jmp
cld
lock
ror
hlt
loope
cmc
out
sbb
jecxz
sti
ret
iret
out
int3
or
ljmp
cmp
in
cli
sti
div
test
clc
repnz
dec
ljmp
test
cmp
int3
fidivrl
cmc
xor
aam
sti
stc
fadd
stc
ret
mov
addb
clc
jecxz
jmp
cs
in
int3
fidivrl
inc
or
add
cmp
je
mov
mov
add
mov
mov
mov
jmp
rol
lret
aad
mov
push
int
jle
movsl
add
rcl
roll
jmp
int3
fdivp
shl
shl
not
jmp
aad
loopne
rcr
clc
loop
aad
loope
test
jmp
std
test
orl
xor
aas
rol
adc
into
fiadds
cld
mov
lock
loopne
jecxz
jmp
aad
xlat
int3
ljmp
fmul
aam
cmp
fsts
out
loop
ljmp
xor
lock
icebp
loope
enter
faddl
test
shl
cmp
out
hlt
cmc
std
roll
loope
incl
enter
roll
xor
std
xor
lret
ds
cld
out
adc
fcmove
in
xchg
aam
fcomp
fsincos
ss
shr
fstp
in
shl
neg
loope
sar
jmp
mov
sbb
std
mov
jmp
cli
sub
icebp
cmp
in
ret
loopne
xchg
ljmp
test
aad
out
fsubr
icebp
cli
fcmovnbe
in
neg
out
test
in
in
mov
repnz
out
aad
adc
xchg
xlat
fsub
cli
mul
fisttpl
xchg
int
sub
into
in
xlat
lret
xlat
cmp
sar
faddp
test
cmc
lret
sti
in
std
test
mov
jmp
jmp
cmc
repnz
rcl
fdivrp
cmc
out
into
mov
xchg
repz
in
out
ss
repz
shlb
rol
fstpt
out
fdivp
test
in
xchg
aam
fyl2x
ljmp
loope
call
out
call
fists
stc
enter
ds
ds
fidivrs
fidivrs
xlat
fidivrl
mov
xchg
sti
out
addb
lret
icebp
out
idivb
aam
sarb
loop
in
shr
mov
out
leave
xchg
into
in
fcomip
test
jmp
shr
ror
cmp
mul
out
rcl
clc
lret
mov
mov
test
cmp
cmp
into
out
fdivrs
rol
in
ds
ds
mov
xchg
mov
fbstp
xor
aaa
fidivl
loopne
out
shl
aam
in
in
out
out
std
cld
xchg
rclb
xor
cmp
ss
repz
cmp
aad
fdiv
mov
fisttps
ljmp
enter
ror
aas
cli
jecxz
fisttpll
int
mov
call
hlt
fmulp
sub
cmp
call
leave
jmp
std
hlt
enter
cmp
xor
xlat
call
shr
into
mov
call
xchg
mov
xor
xor
xor
cmp
fcom
lret
and
cmp
cmp
enter
jmp
test
aam
cmp
add
ret
cli
lea
lret
int
xchg
xchg
int
cmc
in
ljmp
out
xor
sar
lret
enter
xchg
jmp
lret
into
repnz
jmp
xlat
sbb
cmp
clc
jecxz
cmp
fimuls
cld
repnz
ljmp
iret
cli
stc
jmp
stc
cmp
div
sar
fmulp
call
in
cld
jecxz
addl
fxch
sarl
int3
xor
sbb
fiaddl
xchg
fcomp
cmp
sub
iret
lock
aas
addl
fsubrp
mov
xor
sti
int
int
out
div
fucomip
int
loopne
mov
sti
fiadds
shl
iret
lock
int
jmp
ljmp
fucom
call
xor
idivb
stc
into
test
stc
fcmovu
sbb
xlat
stc
xchg
repnz
sti
inc
or
mov
rcl
lock
int3
in
in
jmp
cli
rcr
shl
aam
fcmovbe
cli
out
in
fadds
stc
shr
repnz
sub
hlt
jmp
aad
cmp
cmp
ror
ret
fsubr
fmul
loopne
mov
fsub
loop
shl
in
lock
out
xor
out
loope
addb
loope
sti
in
out
test
int3
sti
bnd
aam
ffreep
out
aad
out
inc
or
or
mov
ror
aad
fldt
sbb
je
jle
movsl
add
cmc
test
into
mov
cmc
cmp
cmp
rol
loop
in
loope
sub
in
leave
pause
in
xor
xor
enter
fptan
sbb
out
test
addl
in
lock
imul
clc
hlt
jecxz
add
ftst
xchg
lret
orb
ljmp
jmp
cmp
stc
fcomip
xchg
in
fldpi
out
enter
mov
into
out
idivl
ret
fcompp
rcr
cli
mov
xlat
test
rcll
icebp
cmp
ljmp
fld
fcmovnbe
xlat
xchg
test
ljmp
cmp
aaa
aad
xor
fadds
test
clc
jecxz
mov
in
adcl
aaa
xlat
repnz
cld
rcl
rcl
cld
ljmp
iret
repz
out
xor
xor
cmc
fcmovu
cli
testb
filds
nop
xchg
icebp
iret
call
neg
shlb
stc
aam
repnz
inc
in
faddl
dec
sti
test
iret
shl
xor
shl
hlt
fnstcw
rol
std
sti
sar
call
int3
out
int3
aam
in
jmp
cmp
repnz
and
cmp
cli
repz
clc
clc
mov
rol
in
leave
mov
cmp
cmp
xor
loope
jmp
int3
out
jecxz
das
shll
repz
leave
fcmovne
roll
rcr
xchg
std
aad
in
out
divb
lock
cmp
leave
int
fnsave
aam
lock
jecxz
mov
int
repnz
lea
xor
jmp
xor
aaa
call
loope
cli
loopne
stc
std
repnz
out
out
loope
aad
in
xor
jmp
lret
fstp
lock
roll
out
jecxz
xchg
mov
xchg
hlt
mov
shl
cmp
int
cmp
int
lret
jmp
loop
fmul
cmc
cld
fucomp
mul
jmp
out
mov
test
enter
int3
call
jecxz
rcl
mov
mov
fsub
xlat
iret
fcomi
faddl
ror
cmp
repz
ror
rolb
in
test
mov
fsubp
call
sarb
cmp
out
cli
xlat
xlat
test
xchg
xchg
nop
xor
ror
aaa
out
xlat
sar
ds
fidivrs
testb
mov
mov
repz
cmp
call
repz
cmp
test
stc
fimuls
mov
shl
lock
xor
cmp
ror
aam
cmp
test
jecxz
xchg
loope
loop
out
cs
xor
shl
faddp
mov
jecxz
loop
rcl
xor
shl
ljmp
jmp
fdivr
shl
repnz
in
vpavgw
mov
mov
test
aaa
std
out
fsubr
div
lock
ret
sar
fst
loope
loop
leave
lret
fscale
mov
shr
test
fdivrp
sar
rcl
and
cli
in
loope
fstp
and
shl
out
leave
cmp
xor
cmpb
flds
in
fmull
in
lret
shrb
call
rcl
out
rcl
int3
loop
repnz
repz
lret
or
xchg
xchg
mov
shr
cmp
hlt
in
icebp
rcl
sbb
ds
fstpt
incb
into
cld
jmp
repnz
loope
aam
cld
rcl
in
icebp
stc
test
inc
fistpll
shl
lret
cli
fxch
test
mov
cmp
out
ljmp
rcr
aam
loope
fidivrs
into
out
rcr
out
mov
lds
repz
out
repz
stc
dec
out
enter
loopne
sti
int3
int3
xchg
int3
rcl
das
mov
sti
xlat
cmp
ds
ret
aas
test
cld
kmovb
cs
aam
loop
fmul
call
lds
loop
test
loopne
fcomip
repnz
aam
lock
int
cmp
cmp
out
ds
xchg
clc
int3
int3
xchg
call
ds
aam
iret
int3
fst
outsl
fmull
jnp
dec
fwait
sti
jle
movsl
add
out
in
loope
lret
cmp
hlt
fmul
lret
ffreep
std
adc
fcmovnbe
shl
aad
fcmovnu
icebp
jmp
fldl2e
out
lock
loope
sarb
stc
out
fprem
test
mov
enter
adc
shlb
das
jecxz
ret
lret
cli
ror
idivl
fcmovnb
ret
call
orl
into
aam
enter
xor
std
aas
rorl
int3
lret
jecxz
aam
rol
ret
cli
fxch
out
out
fdivrp
add
aas
fucom
loope
neg
std
and
out
xchg
xchg
lret
roll
xor
into
out
jmp
cmp
movl
mov
clc
xor
shll
cmc
cmp
aam
cmc
sti
aas
shl
fsubrp
ljmp
hlt
xchg
xchg
mov
out
jecxz
cli
shl
fistpll
xlat
fcmovnbe
fldl
loope
out
int
ljmp
out
xor
icebp
repnz
call
cmp
repz
mov
int
loope
mov
out
lret
sub
cli
in
fcomip
ret
cld
cld
enter
call
lock
into
aad
iret
out
lret
aad
std
into
fbstp
xor
cmp
cli
mov
int
enter
leave
loopne
xor
cld
aam
hlt
iret
test
shl
add
fcmovnb
flds
mov
int3
cmc
cli
clc
cmc
cmp
jmp
icebp
repz
call
idiv
jecxz
int3
loope
mov
fildll
in
jmp
lock
ror
addl
clc
mov
enter
shl
xlat
cmp
fxch
ror
jmp
clc
fidivrl
in
test
sarl
lret
loope
repnz
rorl
out
aaa
clc
icebp
cmp
in
test
fnstsw
dec
loope
leave
fcomp
lea
call
xor
shr
cmpl
in
aad
stc
cld
clc
decb
sub
das
int
in
stc
cmp
shl
ret
lds
int
popl
leave
cli
fidivrl
call
in
fucom
roll
call
fimull
out
jecxz
cmp
out
cld
int3
enter
in
int
hlt
repz
sar
xchg
lds
in
call
cmp
lock
loope
fcmovb
mov
mov
push
call
fsubr
mov
not
sar
std
ffreep
in
ret
aad
xchg
out
jmp
shl
roll
sub
cmp
lret
xlat
dec
hlt
fdivrp
dec
loopne
faddl
in
int
hlt
imul
xor
aaa
aad
lret
lret
fst
loopne
sub
repnz
in
out
in
mov
ret
cli
int3
dec
int3
iret
out
and
rcl
stc
aad
cmc
mov
loope
out
mov
mov
in
out
cmp
inc
cmp
hlt
ret
enter
and
fisttpll
das
out
sti
rcr
loopne
stc
cli
iret
ds
idivl
fcomp
lret
int
jmp
jmp
loopne
in
xor
hlt
neg
fldl2e
ds
aad
ds
out
clc
in
mov
in
jmp
enter
jmp
ror
iret
std
rol
mov
ret
fcmovnb
idiv
into
int3
hlt
int
ljmp
fidivrl
stc
aas
shl
xchg
fucomip
mov
rolb
stc
hlt
lret
int
roll
iret
rcr
aam
loope
cld
test
fcmovbe
lret
sub
out
fxch
repz
shr
sti
repz
aad
aas
lock
ffree
out
sub
and
shl
shlb
shr
out
cmp
fxch
rcr
call
loopne
xlat
stc
fcmovnu
cmp
std
jmp
jecxz
out
cmp
cmp
cmp
int3
cmp
and
std
jecxz
sti
out
test
mov
loope
neg
ss
aad
xlat
out
fcmovbe
or
cld
ret
xlat
ret
in
mov
in
xchg
int
out
fdiv
idiv
out
icebp
shr
loopne
loop
sti
out
jmp
in
nop
repz
xor
cmp
out
les
stc
testb
jecxz
out
lds
enter
cmp
jmp
ret
xlat
int
fstp
cltd
sbb
aas
ret
jle
add
in
cmp
aad
jmp
std
fdivr
cmp
lret
lret
jecxz
mov
leave
cmc
mov
icebp
aam
div
xor
aas
loop
ret
cmc
inc
jmp
in
out
in
out
in
test
out
rolb
xchg
aam
loop
cli
loop
nop
xchg
xchg
xchg
lds
repnz
repz
cmp
sarb
rcr
cmp
std
loopne
cli
in
out
repz
iret
sti
in
cmp
fnop
call
mov
out
sbb
int3
jmp
into
cmp
cmp
lret
rcl
out
loopne
fiadds
fdivp
int3
out
int
iret
das
sti
cmp
neg
repnz
xor
in
cmp
cmp
in
leave
loope
out
repnz
out
shlb
cli
cmp
std
cmc
in
in
ljmp
out
jmp
xor
rol
cmp
fdivr
loope
loop
jmp
fdivrp
loop
jmp
orl
loope
aaa
leave
lds
leave
ds
cmc
fnstsw
cmp
xchg
enter
ret
decl
xlat
call
loopne
fucomip
sarl
xchg
loop
in
int
xchg
hlt
addl
in
repz
cld
aad
sti
out
icebp
rcr
repz
repz
mov
cmp
ret
sti
cmpl
lret
mov
mov
enter
hlt
loope
int
sti
cmp
sarb
not
sti
vcvttpd2dq
sti
mov
int3
jmp
aam
ss
xor
ljmp
aad
call
shr
xchg
in
out
xor
xor
ljmp
repz
cmp
mov
addb
fcomi
fdiv
ljmp
ljmp
out
cmp
fmull
in
fdivr
repz
loop
hlt
fldl
fildl
ret
sub
cmp
cmp
aad
into
aas
icebp
repz
test
sti
ret
mov
sub
xchg
xor
jecxz
repnz
sti
cmp
out
loope
call
sarx
rclb
ljmp
lret
aaa
fildl
mov
aad
out
xchg
fucomip
int
shlb
test
repnz
xlat
ret
test
mov
xchg
xchg
repnz
repz
ljmp
xor
cmp
icebp
cli
mov
in
call
out
cld
xchg
or
stc
cmc
in
xor
cli
fcmovu
out
cli
hlt
rolb
fisttpl
int
xchg
rcl
ss
cli
cmp
loope,pt
fsqrt
roll
clc
mov
out
in
cmc
int
repz
cmc
aas
fcmove
cmp
cmc
cmp
incl
loopne
rorl
shlb
cmp
jmp
test
repz
fyl2xp1
vmaskmovdqu
in
nop
loopne
repnz
enter
lock
test
ret
into
cld
icebp
jecxz
rcl
xchg
in
clc
ret
cld
xor
leave
loop
into
into
sti
ffreep
shl
sar
aad
loope
mov
int
in
ret
lret
cmp
ds
lret
leave
enter
les
lret
hlt
cld
div
xlat
fadds
shl
sbb
fildl
xorl
out
lock
cmp
cmc
jmp
addb
sar
ljmp
xchg
clc
fcomi
cmp
jmp
std
repnz
cld
or
jmp
out
xchg
rolb
xor
jmp
hlt
loopne
lret
out
out
out
loopne
out
add
iret
sti
in
xchg
xchg
in
loopne
repz
cmp
int
repz
test
xor
cmc
les
in
out
mov
into
fcomip
lret
jmp
xor
into
shl
rcl
lock
loop
cmc
loopne
mov
lret
fsubp
out
aas
out
xor
shl
std
ds
cmp
fucompp
fimuls
nop
call
ror
in
sti
in
jmp
orb
aad
add
mov
mov
xor
add
jmp
rol
xlat
int
arpl
mov
stos
and
jle
movsl
add
in
sarl
out
cmc
cli
loope
mov
in
fcomi
cli
test
jecxz
loopne
int
aaa
idiv
cmp
stc
aaa
in
shl
cmp
jmp
xchg
xchg
cld
icebp
test
clc
into
shr
xor
fidivrs
cmp
iret
into
test
xchg
mov
std
fcmovbe
mov
ficoms
jmp
xor
sar
leave
sar
aad
cli
mov
out
sbb
int
in
bnd
std
lret
iret
fsubp
icebp
icebp
rolb
or
cld
lock
repz
ret
imull
rcl
idiv
aas
cmp
les
std
cld
mov
test
out
cld
filds
xor
test
xor
and
ffreep
sti
in
cmp
loope
sti
lret
xchg
clc
fcmovbe
xor
sti
rol
cmp
aad
in
ds
ret
out
jmp
jmp
or
in
icebp
stc
shr
out
cmp
mov
mov
int3
xchg
repnz
jecxz
out
repnz
cmpl
out
xchg
test
jecxz
lret
int
cld
int
in
loopne
out
iret
cmp
ljmp
std
not
rcl
std
in
loope
lock
call
call
cmp
jmp
aas
loop
shl
sti
mov
cmc
cmp
in
stc
mov
aam
int3
sub
clc
cmp
not
out
hlt
sarl
ds
in
aas
rcr
xchg
cli
mov
in
rorb
ljmp
lret
testl
sub
in
in
and
xchg
sub
shlb
cmp
cmp
cmp
testl
faddl
ss
aaa
in
repz
into
ljmp
cli
mov
loop
add
into
les
xor
jmp
out
fdivrp
rol
and
std
fdiv
cmp
stc
int3
in
fimull
xchg
enter
ljmp
and
testl
in
xchg
jecxz
mov
leave
out
out
fcmove
in
xor
cli
xor
repnz
faddl
xchg
call
xor
ret
xor
in
jmp
std
cmp
in
repnz
mov
lock
icebp
in
xchg
out
xchg
das
enter
sti
xor
cld
aas
xlat
shr
xor
aad
lds
int3
int3
xor
in
ljmp
loop
ds
fdivrl
fxch
push
stc
ror
cmc
jmp
ljmp
std
push
into
icebp
fidivrs
repnz
mov
xchg
jmp
lret
out
jmp
test
xor
cmp
in
repz
xor
test
std
mov
fcomp
lret
std
lret
enter
into
out
xlat
out
cmp
xchg
xchg
int3
adc
cmc
icebp
out
into
xor
sti
icebp
ljmp
call
enter
xchg
sti
cld
shl
aam
icebp
loop
cmp
jmp
aam
out
xlat
icebp
and
fsubp
loope
loopne
jmp
out
nop
sbb
loopne
out
ret
jmp
hlt
int
jmp
into
shl
ret
mov
jmp
ror
lret
ljmp
aad
adc
mov
mov
test
leave
xchg
out
jecxz
repz
fucomi
leave
enter
repnz
out
fucomi
jmp
in
into
stc
sub
cmc
addb
leave
xor
cmp
int3
rcl
ds
cld
repnz
stc
movb
mov
jecxz
les
xlat
in
hlt
sar
std
stc
cmp
addb
repz
ljmp
int
mov
cmp
int
out
ret
fmul
loop
ret
mov
incl
in
hlt
cs
ds
push
cld
into
fdiv
out
mov
movb
in
leave
hlt
jmp
icebp
int
cli
iret
repz
lock
cld
ds
cmp
roll
lret
shr
xchg
filds
stc
fdivs
std
clc
std
fcmovu
loopne
fnstenv
loop
mul
mov
testb
test
out
sub
aam
ljmp
in
and
fimull
fucom
adc
in
ret
xor
into
fcom
loope
aam
icebp
std
ffreep
mov
jmp
xorl
jmp
mov
mov
mov
mov
mov
mov
jmp
lret
ffree
fcmovu
sbb
jb
lds
push
sbb
add
cmc
loope
test
leave
std
rcr
out
mov
rcl
fnop
cli
shr
hlt
iret
inc
jecxz
jecxz
cmp
test
out
loop
ror
mov
cmp
ret
repz
int3
fdivrp
fdivr
mov
loop
mov
int
loopne
cmc
ficoms
in
call
int
aas
cmp
in
ror
cmp
ret
out
int
clc
call
cmp
jmp
cmp
int
cli
cmp
fadd
mov
lret
sti
stc
int
repnz
das
xor
fcmovu
stc
enter
stc
cld
cmp
aam
test
enter
in
mov
div
fcmove
hlt
in
repnz
enter
sarl
enter
orl
out
aas
xor
xor
out
fidivs
rcl
fdivp
and
call
jecxz
loop
rcl
in
out
leave
in
aaa
fbstp
jmp
sarb
imul
std
loope
test
in
lea
iret
cld
lret
enter
enter
call
adc
jecxz
test
loop
int
nop
fsub
hlt
mov
xlat
jmp
std
shl
xchg
rorb
lret
in
xchg
jmp
shr
int
sub
aam
cmp
cmp
shl
out
std
iret
leave
mov
push
icebp
xor
lock
in
xlat
leave
jmp
fdivr
aas
faddp
test
lret
mov
fmul
into
out
xorb
xor
enter
stc
rcl
fsubr
aam
xchg
int
in
call
or
xlat
out
fcomp
idiv
iret
cmp
loopne
cli
fdiv
std
fmulp
fsub
test
in
xor
sub
ljmp
fcomip
icebp
lock
xchg
xchg
ljmp
jmp
orb
stc
aaa
shl
ljmp
loopne
jmp
out
xchg
int3
in
decl
repnz
aam
in
enter
cmc
hlt
fsubr
aas
icebp
xor
faddl
jmp
repz
lret
cld
bnd
aad
sti
rolb
mov
rcr
cmp
xlat
into
xlat
enter
lock
lret
int
addb
call
out
lock
addl
xor
fnstcw
jmp
hlt
std
ds
int
fiadds
jmp
fdivr
adc
test
das
int
aad
rcr
cld
aas
sar
rcl
aad
cld
fsub
test
iret
loope
cmc
xor
mov
lock
int
addb
repz
ret
out
out
in
int
fists
stc
jmp
fstpt
fmul
out
sti
out
cmc
fmull
mov
xchg
hlt
xchg
xchg
jmp
cli
cld
cli
rcr
sarb
fnstcw
test
std
sub
addb
in
shr
fmul
lock
aad
aas
ds
rorl
loop
cld
shl
testb
fidivs
repnz
flds
jmp
loope
int3
mov
aaa
divb
sti
sar
icebp
iret
loopne
lret
xlat
rol
lock
mov
fcmovu
in
mov
fists
cmp
jmp
aas
aas
jmp
test
cmp
in
fiadds
in
mov
xor
jecxz
out
div
fmul
xlat
lock
out
cld
cmp
sar
mov
xor
fcmove
rcl
sarb
ljmp
fcmovnu
xchg
std
out
aad
jecxz
fcomp
jmp
cmp
out
loope
call
cmp
addl
add
out
rcr
roll
out
aaa
loopne
lret
iret
fnstsw
stc
ds
test
mov
repz
xchg
into
into
cli
shr
cmc
out
fcom
aas
int3
cmp
std
test
clc
leave
jmp
in
out
xchg
hlt
xor
xor
aas
int3
fcomi
out
jmp
inc
out
mov
cmc
aad
cmc
sarl
aam
out
aam
int3
in
icebp
out
xchg
mov
test
xchg
nop
sti
int
jmp
test
enter
cli
cmp
fcom
into
lret
fstpt
fsubrp
cmc
test
out
adc
xchg
out
aam
cmc
shl
fcmovbe
out
clc
rcl
into
in
in
cmp
cmp
pushl
jmp
int
into
fst
das
inc
aam
in
or
pop
aaa
mov
movsl
add
out
mov
iret
jmp
cmp
xor
hlt
fcmove
cli
stc
neg
in
call
cli
fiaddl
xchg
xchg
xlat
int
shll
xor
cmp
out
std
aad
mul
aam
mov
ret
xchg
aam
xor
fucomp
out
in
ret
fcmovb
ret
aad
push
into
stc
ret
ljmp
enter
call
fsubr
cmp
in
cmp
sti
ljmp
ret
lret
in
in
out
jmp
cmc
cmp
sti
sti
cmp
clc
cmp
enter
mov
movl
cmp
repnz
ss
call
cmc
adc
out
ffreep
fmul
loop
call
cmp
aaa
cmp
test
into
test
out
sub
xchg
enter
ljmp
in
jmp
cmp
int
repnz
test
in
out
repnz
idivb
hlt
cmp
rcl
rcl
sti
fmulp
xor
fdivp
faddl
fucomi
mov
loope
xor
aaa
rcl
in
fadds
aam
xchg
and
leave
clc
lea
loope
in
xor
xor
int
iret
stc
cmp
aas
rcl
xchg
ljmp
lock
fldt
loope
fsubr
ret
fdivrp
jecxz
fsubr
lds
in
mov
int3
xor
std
hlt
cmp
repz
hlt
fadd
out
call
loopne
into
xchg
sub
cli
cmp
lret
ljmp
cmp
clc
out
fsub
jmp
xchg
xchg
ror
into
hlt
hlt
out
cmp
cli
faddl
test
out
in
repz
in
sub
repnz
jmp
loope
in
in
int
repnz
repnz
fildl
xlat
call
fdivp
lock
lret
ret
in
cld
enter
int
cmp
aam
xor
mov
sar
mov
fucomp
hlt
in
cli
out
xor
divb
cmp
icebp
loopne
ret
cli
leave
leave
int3
sub
xchg
in
lock
shl
call
std
fcmovnbe
in
ret
loope
mov
mov
ljmp
fldz
cld
aaa
ror
ror
ds
cmp
and
mov
call
call
shr
call
xor
std
jecxz
rcr
cmc
div
fadd
clc
mov
dec
shr
std
rol
in
loope
int
lret
into
fcomp
fcmovnbe
in
cmp
out
aas
rorl
fimuls
xor
fcmovb
int3
aam
ror
cmp
roll
lret
in
xchg
xchg
in
loopne
enter
xlat
aaa
repnz
fdivrs
aam
fsubr
leave
out
std
icebp
faddl
les
call
fsubr
xor
out
aas
rcr
jmp
ljmp
ljmp
fcomip
repz
sbb
ds
std
ret
xchg
or
repz
xchg
in
shr
rol
in
rol
lret
repz
loopne
icebp
aad
out
test
enter
enter
xchg
xchg
into
cli
fsubr
cmp
aam
lock
cmp
loope
ffreep
jmp
adc
decb
jmp
ret
leave
cmp
xlat
aad
lret
out
in
add
aad
test
fmull
repz
in
cmp
in
repz
push
add
mov
xchg
test
addb
shr
xor
cmpb
xor
fst
cli
hlt
fiaddl
rorl
shl
ljmp
ftst
xlat
rolb
jmp
out
stc
icebp
int
sti
lret
out
shl
xor
cmp
loope
out
ds
push
in
out
out
sbb
lock
into
leave
in
rcl
fcomip
loop
shl
enter
or
nop
lret
ror
call
idiv
out
aad
in
jmp
xor
xchg
cmc
stc
fdivr
in
nop
sti
hlt
out
jmp
in
cmc
cmp
shr
rcl
lret
sti
xlat
cmp
mov
stc
loop
test
call
ss
cmp
repz
rcl
into
aam
leave
stc
les
fcomi
out
aam
call
mov
cmp
je
mov
mov
pop
jmp
into
lret
fcmovne
into
fistpl
adcl
pop
xchg
jle
movsl
add
xor
xor
fdivl
stc
jmp
shl
call
int
fmul
in
fistl
call
int3
sarl
in
int
aam
cmp
neg
jecxz
out
addl
xor
cmp
sarb
shl
fcmovb
ret
test
mov
frndint
icebp
fstl
xor
not
repnz
lock
fsubrp
xchg
neg
out
int3
ljmp
loope
sub
repnz
neg
aas
jecxz
lock
loop
aad
mov
xchg
fld
in
cmp
cmp
shl
loop
cmp
cmpb
out
repz
repnz
ljmp
sbb
test
out
jecxz
fadds
xchg
lret
out
xor
into
ljmp
aas
fadd
xchg
xlat
cmp
jmp
mov
cld
loop
rol
jecxz
xlat
in
aam
rcl
rcl
fst
inc
fcmovbe
out
aad
stc
cld
test
fst
test
xchg
out
rol
cmp
out
cmp
lret
add
xlat
stc
addb
out
rolb
in
not
xor
cmp
in
aaa
loopne
xor
iret
shl
mov
movl
in
xchg
lock
loopne
sti
loopne
cmp
orl
into
ljmp
jmp
addl
mov
in
lret
lock
xchg
mov
xchg
aam
lret
xor
xor
ljmp
iret
fstp
enter
fscale
in
lret
out
les
int3
out
aaa
xor
cmp
adc
sbb
xor
mov
std
ror
addl
fabs
fdivr
int3
ds
cmc
rcl
decl
xchg
iret
imul
fcmovne
icebp
clc
jmp
cmp
test
fcmovu
std
loopne
idiv
icebp
fdiv
iret
ret
xor
in
sar
cmc
sub
jmp
clc
sti
loope
sar
in
incl
fsubp
jecxz
ljmp
fucomi
rcr
std
loop
testb
cld
mov
lret
lret
loop
lret
jmp
aam
out
cmp
repz
mov
rorb
ror
out
xor
cmc
div
aaa
jecxz
xor
out
cmp
ret
cmp
xlat
in
cmp
fistl
sub
call
hlt
rcr
cmp
test
fildl
fiaddl
rcl
jmp
repz
out
cmp
cmp
sub
aas
out
enter
ljmp
hlt
cld
xchg
xor
repnz
out
clc
in
cld
in
loopne
std
fldl
mov
jmp
jmp
in
cld
loop
aad
shll
jmp
cmp
cmp
stc
fld
in
cli
aam
sti
clc
ret
nop
ljmp
cmc
cmp
xor
int
ds
repnz
incl
ds
int
cld
mov
imul
lret
jmp
idiv
repnz
loopne
aad
test
lret
test
xchg
out
hlt
in
inc
out
iret
aad
aaa
ss
ror
loope
cld
fnsetpm(287
call
jecxz
sti
rolb
hlt
aad
out
xor
sti
cld
fldl
jmp
mov
in
nop
shl
les
lret
sti
out
stc
out
iret
icebp
fnstcw
fcomp
repnz
fmulp
cld
out
mov
xchg
iret
loope
bnd
hlt
shlb
aad
into
cld
aad
jecxz
ret
les
out
in
shl
int
out
clc
lret
hlt
into
iret
loope
fmulp
loope
enter
in
lret
xchg
mov
fsubp
xchg
shl
rcl
divb
fucomi
std
xlat
or
sti
mov
sti
test
enter
lds
cmp
fsubr
stc
ds
rol
aas
cld
repnz
fdivrl
in
lret
mov
mov
icebp
iret
lret
xor
loope
fcmovu
in
stc
sar
cld
cmc
aas
rol
fsub
test
fucomp
out
jmp
das
ror
cmc
fidivl
cmp
cmpb
fndisi(8087
sar
hlt
rorl
into
and
aaa
out
in
cli
out
cmp
cmp
repz
jmp
rolb
xchg
ret
into
aam
pop
pop
leave
ret
push
mov
sub
leave
ret
push
mov
jmp
aad
into
aad
fst
int
loopne
movb
jle
xchg
add
cmc
hlt
loopne
clc
cmp
jmp
iret
fimull
ror
cmc
xor
cmp
jmp
cmp
iret
ret
clc
out
jmp
ffree
out
icebp
sbb
aad
iret
ret
in
hlt
ljmp
lock
clc
fiadds
xchg
xchg
enter
aas
clc
cmp
testb
in
loopne
stc
mov
xchg
fimuls
not
xor
fptan
cli
out
stc
xchg
xlat
xchg
add
addb
aam
hlt
ret
jmp
repnz
loope
ds
in
fdivr
rcl
adc
mov
iret
xchg
int3
loope
ss
cmc
icebp
aas
fcmove
int3
int3
addl
testl
in
repnz
iret
shll
testb
jecxz
mov
stc
mov
mov
in
xlat
jmp
aaa
ror
fdecstp
out
lock
lock
ret
lret
in
cli
into
cld
mov
int
hlt
ds
loopne
stc
into
cmp
addb
ljmp
ss
cli
out
in
aad
sbb
ret
out
mov
aad
jmp
mov
icebp
iret
fmul
xor
out
jmp
repz
div
repnz
cld
loopne
in
rcl
sar
mov
cmp
icebp
lret
cld
out
loope
loop
test
cld
loope
not
aam
jmp
nop
incb
jecxz
in
fcmovbe
xor
stc
aas
stc
rol
neg
hlt
stc
sti
out
out
std
test
int3
xchg
neg
cmp
shll
jmp
cmp
ret
xchg
ficoms
aam
jmp
iret
cmp
cmc
cli
lock
loope
sar
sti
std
loope
out
rolb
out
leave
jecxz
int3
cmp
or
rol
decl
loope
or
in
iret
aaa
ret
out
leave
cmp
aaa
sarb
shr
int
cld
lock
ror
mov
ficoms
xor
fdivrs
das
into
xor
repnz
fdivr
testl
loope
mov
ret
in
call
idiv
cmpl
adc
cmc
repnz
int3
in
out
rclb
jmp
hlt
sarl
sti
cld
sti
sti
idivl
rol
fimull
orb
lock
xor
sar
ror
icebp
sbb
not
test
jmp
or
xchg
loop
repnz
in
iret
hlt
cli
sarb
sbb
cld
call
mov
xchg
in
in
sti
std
fidivrl
jmp
sarl
loope
les
mov
mov
jecxz
xchg
rorb
les
out
out
icebp
ljmp
repz
and
jmp
mov
testb
enter
fdivrl
imul
repz
in
repnz
jmp
loope
shr
lock
lock
clc
cld
in
out
fmulp
out
test
fsubrp
fcmovb
rcl
fmul
std
enter
lret
test
shl
aam
cmp
sti
loopne
ret
cmp
ds
rcr
sbb
jmp
aaa
call
sbb
repz
lock
ret
sbb
faddl
int
fdivs
in
into
ljmp
stc
addl
roll
rol
in
clc
clc
icebp
lret
rcr
into
test
xchg
test
in
fucomip
out
into
mov
bnd
neg
cmp
cmpb
fneni(8087
iret
out
clc
aad
repnz
jmp
sbb
out
call
xor
jmp
xor
cmp
iret
into
into
sar
enter
cli
lret
flds
xchg
cmc
jmp
repnz
sarl
std
cli
hlt
icebp
sar
call
xlat
leave
mov
loop
shl
lock
icebp
icebp
in
cmc
fdivp
rcr
stc
fldl
or
xor
aaa
ljmp
hlt
icebp
ret
cmp
clc
repnz
in
fmul
int
xchg
iret
jecxz
call
stc
fiadds
icebp
cmp
loopne
aam
mov
sti
loopne
iret
fucom
icebp
mov
mov
and
mov
mov
sub
xorl
mov
sbbl
push
mov
xor
movl
cmp
movl
je
sbb
jmp
rcl
rcl
rcl
aad
xchg
stos
mov
pushf
jle
xchg
add
mov
das
repz
leave
shl
in
int3
shl
ret
jmp
fdiv
repnz
ljmp
ljmp
aad
stc
ljmp
ret
jmp
in
lret
fnclex
in
mov
xor
ror
xor
imul
hlt
lret
ror
loop
fdiv
hlt
mul
testl
loope
call
int
out
fidivrl
testl
faddl
aam
rcl
into
xor
xor
cli
sti
lret
xor
lret
fsub
in
jmp
xchg
jmp
jecxz
repz
xor
cmp
xor
shr
cld
int
cmp
hlt
rcl
repz
out
test
xchg
ljmp
shll
out
jmp
lret
rol
out
cmp
cmp
loop
xchg
into
ficoms
jmp
repnz
aaa
into
testl
cmc
in
jmp
lock
imulb
ss
jmp
int3
xlat
fcomi
fdiv
fldl
ret
vpsrlw
xchg
jecxz
in
shl
in
xor
rcr
out
and
fucomi
fadds
fmul
les
loop
fbstp
lock
cmp
lock
lret
jecxz
loope
fcom
mov
mov
int
test
fisttpll
in
out
out
rcr
lock
out
jmp
fabs
cld
sar
dec
int3
loopne
loopne
test
mov
shl
lock
leave
repnz
cld
test
icebp
roll
into
jmp
jmp
ljmp
ds
cmp
add
loop
leave
and
ret
out
xchg
mov
in
cmc
aad
aad
cmp
in
loope
fcomi
cmc
decl
std
cld
fsubp
in
repnz
in
aam
fldln2
sti
jmp
test
xlat
hlt
stc
fsubp
call
jmp
stc
shr
in
ror
ss
cmp
in
std
xlat
loop
loope
leave
mov
lret
shl
leave
shl
xor
cmp
aas
ds
test
out
add
ret
fdiv
sar
out
out
ficoms
ror
jmp
out
cli
int
in
xchg
lds
lret
mov
adc
clc
in
ret
lret
in
fldz
jmp
mul
rol
fdivr
neg
out
mov
in
fcomip
fsub
fld1
imul
aaa
sarl
jmp
out
xchg
fildl
ljmp
test
call
cmp
clc
rorb
jecxz
cli
cmc
repz
iret
xor
cld
cmc
xor
cmc
cmp
loop
call
fstp
int3
cld
fucomi
mov
int3
mov
cli
lret
das
xlat
jmp
sbb
clc
fmuls
loop
xchg
in
jmp
aas
cs
jmp
fistpll
lock
loop
or
aad
dec
call
xchg
ljmp
lret
int
out
cmp
enter
in
addl
ljmp
leave
sti
fidivrl
icebp
iret
clc
roll
stc
lret
mov
out
fmulp
jmp
cld
int
aad
fprem
not
xlat
ret
xchg
rol
xlat
fcomp
int
adcl
jmp
in
clc
rcr
xlat
fld
not
shr
aad
test
cli
iret
iret
xchg
mov
in
repz
out
fcomi
rcl
int
icebp
in
cmp
icebp
jecxz
aam
hlt
out
fmull
mov
iret
int
ret
fcmovnbe
fidivrs
int3
fiadds
loop
leave
in
lret
lock
mov
not
out
cld
cld
ljmp
std
in
cmc
in
ret
cli
cmp
xchg
mov
in
not
out
cld
cmc
lock
fdivrl
xchg
test
int3
ror
ljmp
xor
fyl2x
repnz
fcom
fcmovb
in
mul
in
jmp
fiadds
mov
xor
cli
int
xor
cmp
rcl
fiaddl
stc
incl
mov
jmp
test
lock
int3
cli
out
loope
in
in
fcmovu
lock
fmulp
loope
in
addl
iret
into
repz
cmc
cmp
out
repz
jecxz
mov
loope
mov
sbbl
mov
andl
sub
addl
xor
movl
cmp
jne
adc
mov
sbbl
jmp
enter
int
int
repz
mov
jle
xchg
add
mov
in
out
xchg
mov
out
ljmp
out
stc
sti
fnstsw
sar
leave
out
sti
mov
loop
int3
repz
std
in
xor
in
sti
rol
cmp
aas
fdivrp
in
lds
xchg
ljmp
call
cmc
out
fsub
fucomp
idiv
cmp
fimuls
cld
lret
dec
xor
sti
cmp
sti
aam
fcomip
loope
div
test
aas
rcr
out
cld
loope
fxch
in
xchg
hlt
xlat
shr
int3
jecxz
cmp
out
roll
call
mov
xlat
mov
incb
shl
std
fcom
aam
iret
clc
cld
and
out
leave
fdivrs
cmp
int
lret
repnz
fstpt
cmp
ljmp
mov
ret
mov
out
loop
neg
clc
ss
hlt
cmp
cmp
cld
repz
shl
cmc
sti
xchg
fmulp
icebp
int
cld
mov
mov
mul
xor
shl
icebp
hlt
fidivrs
xor
call
out
enter
xchg
in
hlt
ret
in
cmp
aaa
cmp
aaa
push
in
xlat
icebp
fidivrl
test
mov
int
jmp
xchg
xor
cli
jecxz
in
int3
into
cmp
lret
cmp
cld
repz
mov
ret
in
sub
in
imul
xor
aaa
rol
xor
loop
cld
out
shl
cmp
test
int
test
aad
rol
les
rcl
clc
cmp
div
lret
ds
fadd
ret
jmp
rolb
xor
out
xlat
shl
jmp
leave
ds
fadds
clc
mov
shl
ret
cmp
aaa
cmp
fucomi
out
cmc
fstp
xor
loop
iret
loope
xchg
aad
fsub
hlt
ret
cmc
out
out
fdiv
add
in
in
fcomp
ljmp
lret
int
mov
fst
shr
lret
repnz
loopne
lock
fucom
xlat
std
sub
out
divb
iret
iret
xor
repnz
sti
hlt
ror
cmc
cli
rol
leave
mov
mov
incb
lret
cmp
jmp
and
sar
mov
lret
ljmp
mov
xor
lret
enter
cli
sbb
xchg
sub
aam
in
nop
loope
lret
loop
mov
out
xor
icebp
pushl
jecxz
fld
loope
sar
fildl
jmp
loope
xor
in
int
ss
in
jecxz
and
repnz
cli
stc
call
xchg
icebp
repz
cmp
fcomip
call
adc
ret
cli
mov
xchg
in
into
cmp
out
in
call
cmp
and
ret
mov
xor
enter
cli
stc
into
xor
xlat
xlat
addb
out
fndisi(8087
mov
std
adc
xor
fcmovbe
ss
inc
loope
shl
jmp
fsubrp
into
stc
in
addl
ss
cmc
rcl
fmul
loope
repz
xchg
fisttpll
iret
aad
clc
sub
ror
cld
stc
neg
cmp
lret
fldl
cmc
loop
fcmove
into
clc
out
cmp
cmp
test
fst
loopne
loop
lret
ljmp
xchg
ret
lret
idiv
hlt
icebp
cli
xlat
faddl
xlat
test
jmp
mov
into
fcmove
lock
aas
repz
lds
jmp
out
enter
xchg
sub
fstpt
fdivrl
cmc
iret
flds
xchg
in
sub
mov
addb
rcl
not
shl
adc
iret
shl
fcomp
int3
in
in
dec
and
and
cmp
cmp
xlat
shlb
in
shr
ss
neg
shl
cmc
leave
jmp
loop
hlt
out
iret
into
xor
cmp
fidivs
cmp
cmc
ret
rolb
in
lret
out
in
lock
lret
imul
rol
fsubrp
clc
test
ds
loope
sti
movb
shr
loop
aad
hlt
iret
aad
out
cmc
lret
out
rolb
add
jmp
mov
xorl
xor
add
adcl
mov
sbb
mov
andl
xor
subl
jmp
rol
aad
aad
aad
leave
mov
mov
xchg
add
repnz
stc
fldl
popl
jecxz
call
fdivrl
xlat
test
fcmove
lret
lock
addb
sti
iret
iret
lock
rcr
ret
clc
add
mov
in
cmp
loopne
out
leave
aad
aam
shll
int3
aam
into
out
fdivr
fdivp
ret
test
int
ror
shl
fnstsw
xor
hlt
sti
cmp
loop
sti
repz
test
cli
xchg
lock
ljmp
iret
in
aam
cmp
incb
fistl
imul
divb
jmp
aaa
in
loopne
jecxz
clc
in
repnz
leave
mov
xchg
icebp
mov
lret
in
call
rcl
into
sar
cmp
cli
std
roll
sar
fimuls
xor
xor
fsubrs
out
cmp
ljmp
rorl
test
shr
push
jmp
sub
cli
rcr
cmp
repnz
aam
fsub
ret
fiaddl
in
nop
xchg
icebp
out
xor
out
rcr
int3
sarb
aad
in
ds
repz
add
in
xchg
cs
lret
xlat
int3
cmp
loopne
fxch
int
jecxz
cmp
jecxz
jmp
call
out
xlat
xor
iret
aad
rcl
lock
fdivrp
cli
test
mov
stc
ret
xchg
xchg
or
ffree
repz
out
cli
jecxz
ds
or
movl
call
out
cld
fcmovnu
addl
popl
jmp
in
into
sti
fcmovnbe
out
push
cmp
jmp
in
mov
out
rcll
shlb
hlt
out
fdivrs
cmc
stc
repnz
fadds
cmp
or
nop
fdivr
loop
xchg
sub
out
repz
loopne
in
iret
iret
incl
sbb
std
in
xchg
repz
loop
loopne,pn
cli
repz
cli
dec
lret
sar
cmp
vpmulhuw
lret
repnz
leave
test
in
cmp
stc
cmp
cld
ret
rcl
cli
shl
cli
loopne
lret
out
jecxz
mov
fdiv
cmp
aaa
std
cmpb
cli
flds
in
in
jmp
into
out
icebp
aam
aam
out
int
int
aas
loop
jecxz
fld
fdiv
cli
mul
ret
loopne
enter
out
test
sub
rcr
cmp
into
cmp
std
push
loope
aad
mov
std
cmc
in
in
fnstcw
shlb
fbstp
lret
aad
aas
loopne
out
hlt
aad
fldpi
xchg
shl
lret
xchg
mov
out
enter
loop
xchg
loope
aas
stc
orb
loopne
in
mov
jecxz
ret
cli
enter
iret
idiv
loopne
in
mov
xlat
fscale
jmp
fucom
mov
icebp
leave
aaa
into
fucomp
lock
out
lret
ret
fld
rcr
xchg
ret
int3
shr
mov
xchg
loop
xor
in
out
sarb
icebp
iret
loope
fiaddl
int
mov
mov
mov
into
ljmp
out
out
lret
iret
std
testl
xchg
lock
xchg
hlt
cmc
out
out
jmp
ljmp
rcl
cld
out
mov
in
loope
dec
fmulp
iret
sub
xor
xor
sarb
iret
in
ret
cmc
hlt
in
dec
clc
rolb
test
int3
xlat
xor
out
cld
xlat
fprem1
shl
cmp
fstp
int
stc
fdiv
call
aam
xor
leave
shll
ds
shl
out
aad
fucomi
fcomp
out
icebp
into
fucom
iret
into
ret
hlt
xlat
xor
div
stc
cmp
loope
out
lock
fst
out
call
mov
xchg
call
std
ds
shl
rcl
sarl
cmp
cmc
testb
lock
into
call
repnz
sub
out
in
fisttpl
fstp
xchg
in
loope
lock
xor
xor
repnz
call
jecxz
ljmp
into
adc
div
lret
hlt
aaa
add
mov
jmp
and
mov
mov
mov
mov
mov
add
pop
pop
ret
push
mov
mov
xor
mov
jmp
into
int
fstp
aam
or
in
gs
jle
sti
cmp
cmp
inc
mov
xchg
lock
clc
leave
aad
cld
idivb
into
iret
repnz
xchg
cmc
ds
shr
out
cld
xchg
popl
jmp
fcmovu
aaa
cmp
loop
ret
cli
cmp
fadds
int3
out
out
out
xchg
shlb
icebp
fmul
xlat
out
cld
aad
loop
roll
jecxz
jecxz
out
sti
loope
in
in
in
aam
xor
cmp
cmp
int
loopne
jmp
fscale
loopne
loop
fcmove
lret
ret
std
enter
out
fdivs
std
loopne
std
fcomip
xchg
out
in
lds
in
adcl
fbstp
fcmovne
fldl
rcr
fucomi
jmp
lock
test
xor
out
fst
out
lret
fadd
int
in
mov
and
enter
into
ljmp
aaa
in
xor
out
aam
jmp
xchg
mov
mov
adc
out
jmp
fisubrl
lock
out
cmp
loop
rol
out
clc
xchg
mov
std
lret
shl
mov
loopne
xbegin
cmp
icebp
out
loopne
ret
fsubrp
xchg
repz
jmp
neg
test
mov
or
loop
iret
iret
aaa
aad
lret
stc
out
int
in
std
cmp
stc
leave
xchg
std
xchg
repz
lock
aaa
enter
lret
fdivrl
sbb
out
ret
out
sti
test
in
ljmp
jmp
jmp
ss
lock
sti
fadd
rcl
lds
roll
lds
int3
out
neg
ret
lret
int3
into
lret
roll
mov
call
test
repnz
call
std
fdivrl
sub
aam
test
cmp
xchg
int3
xchg
fxch
rcl
aam
shl
stc
cmp
out
out
stc
out
fadds
mov
cmc
fcmovb
xlat
aaa
in
aad
aad
clc
aad
cmc
mov
jmp
jecxz
rcll
ret
cmc
sar
jmp
cli
in
fst
movb
filds
xor
cmp
aad
repnz
ds
in
cld
in
lret
loopne
lock
mov
rorl
clc
xor
fdiv
icebp
rcl
ffree
cmp
aam
aas
lret
fnclex
mov
xor
shr
fxch
std
int
rcr
fcmovnbe
loope
ds
cld
loope
inc
or
xchg
in
in
fcmovbe
out
ljmp
cmp
cmc
div
mov
enter
in
sti
ret
les
enter
ss
lret
rcl
cmp
add
aad
test
out
shr
in
lret
loopne
loope
rol
lock
cmc
lret
loopne
rcl
in
shl
fcmovu
mul
fninit
out
xchg
call
divl
shl
sub
lock
xor
stc
stc
mov
cli
in
out
incl
in
out
xlat
jmp
stc
fnclex
xchg
ret
cmp
dec
mov
test
jmp
out
xor
int3
std
sar
lock
ret
shl
fdivp
jecxz
orb
fstl
int
aad
xor
ror
sarb
repz
adc
in
jmp
test
mov
stc
in
out
xor
lret
in
sub
fdivr
rcl
jmp
fisttps
fsub
jmp
in
cld
lret
out
lock
shl
out
xchg
mov
cld
xlat
in
out
out
fnstsw
loope
iret
in
fdiv
call
lret
cmp
clc
xlat
loopne
int3
faddl
addb
into
icebp
in
cmp
xor
fld
mov
clc
test
hlt
mov
jmp
shr
icebp
aad
shl
test
or
imul
xchg
in
mov
sub
hlt
ljmp
clc
in
fistpll
cli
mov
jecxz
xor
rol
aaa
in
ljmp
iret
cli
fldl
movl
lret
fisttpll
idiv
leave
in
out
cmp
incl
icebp
adc
test
out
mov
icebp
mov
and
jmp
leave
rol
ret
int
cwtl
stos
cltd
fs
lds
jle
xchg
add
fmulp
leave
xor
cmc
leave
into
jmp
xlat
aad
ss
fiadds
in
test
lret
out
repz
into
cli
iret
fucompp
cli
fstpt
in
cli
lock
xchg
lret
leave
aad
lock
in
rorb
mul
lock
out
cmp
out
or
ljmp
or
loope
ljmp
ror
in
cld
addb
rorb
xlat
lds
shlb
cmc
cli
fcomp
aad
addl
call
ret
lock
lret
aam
fdivr
xor
into
jecxz
std
int
idiv
mov
shr
out
lock
out
aaa
xor
repnz
cmp
xor
incb
stc
sti
jmp
in
aam
out
clc
leave
cmp
fucom
fcmovbe
fdivrl
loop
out
test
in
mov
into
out
out
ljmp
aaa
cmc
lock
xor
ss
rolb
out
out
mov
adcb
fldl2e
cmp
cmp
loope
adc
lret
int3
div
jmp
push
jecxz
iret
in
jmp
repnz
out
repnz
cli
hlt
call
loopne
xchg
mov
xor
repz
lret
cmp
std
ret
dec
cli
test
enter
mov
out
rcl
xor
cli
hlt
fcmovnb
sar
std
in
fdivp
in
jmp
cmp
fucomi
in
cmp
cmp
fldl
ret
mov
mov
ljmp
aad
fucomi
fndisi(8087
into
cmp
and
test
lock
ljmp
stc
xor
rcl
int
sti
iret
icebp
mov
in
mov
mov
sub
mov
orb
leave
icebp
repnz
aad
std
aam
out
cld
fucomip
fmul
jecxz
fmulp
icebp
fmul
xchg
shr
in
jmp
in
cmp
fnstcw
cmp
rorb
sti
test
test
jmp
out
cs
loopne
out
cmp
ror
xchg
rol
loop
out
mov
aad
cmp
cmp
lock
in
fcom
jecxz
test
lock
push
aam
adc
loop
xor
cli
leave
cmp
in
aad
rol
stc
sar
mov
in
aad
in
cmc
into
cmp
in
std
sbb
fcmovnbe
test
in
in
in
cmp
rcr
xor
fucomi
in
hlt
aam
xor
xchg
int3
in
ret
shr
loopne
sub
iret
fsin
int3
repnz
hlt
aas
call
cli
lret
ljmp
aam
clc
lock
cmp
repz
fnstsw
loopne
adc
mov
out
cli
xchg
repz
fsubr
stc
cmp
int3
lock
jecxz
aas
lret
sub
lret
lret
in
loope
xlat
rol
xor
lock
out
into
into
repnz
shlb
aad
flds
loope
faddl
nop
in
out
icebp
icebp
xor
hlt
loope
repz
shl
ljmp
lock
rcl
lock
ss
sti
aam
repnz
loopne
into
cmp
idivl
testb
cli
mov
sti
rclb
lret
icebp
ror
rcr
test
aad
loopne
call
fucom
clc
xchg
iret
adc
in
aaa
stc
ror
div
lret
in
ljmp
or
sub
ficoms
in
call
ror
ds
in
xchg
jmp
mov
jmp
xchg
shr
out
int3
jmp
jmp
in
lock
jmp
flds
in
mov
or
rcr
clc
out
hlt
fdivrl
loope
cmp
std
jmp
cmc
lds
popl
hlt
fsub
sarl
iret
stc
aas
test
test
orl
out
fcmovne
in
test
loop
ret
not
clc
std
lds
out
into
loop
iret
clc
sti
cmp
in
aad
fchs
fcmovu
std
cmp
addb
orl
sub
adc
jmp
rol
lret
iret
fcmovnbe
fcmovb
addr16
scas
push
jmp
adc
add
cli
test
dec
xchg
in
jecxz
jmp
jmp
cmp
rcl
fpatan
cmp
clc
out
in
out
out
shr
jecxz
out
loope
xor
cmp
lret
sbb
jecxz
cmp
fiadds
int3
fimuls
dec
aad
hlt
jmp
repz
xor
fstp
sarb
cld
mov
jecxz
icebp
xchg
xchg
aam
iret
stc
rol
out
int3
jmp
cmp
loop
and
in
mov
xchg
in
xlat
repz
enter
fnstsw
ljmp
xacquire
rorb
iret
mul
divb
cmp
leave
stc
cmp
cmp
test
ffreep
xchg
test
lret
icebp
ljmp
fpatan
repnz
fnstsw
icebp
test
cld
jmp
and
jmp
in
in
lds
in
sti
div
mul
xchg
out
incb
mov
jmp
xor
xor
repz
clc
leave
leave
xlat
icebp
cld
call
clc
loopne
out
or
fcmovnu
jmp
in
nop
cld
in
repnz
aam
int
xlat
aaa
fcmovne
ljmp
lds
orl
int
shlb
rcr
clc
out
idiv
fiaddl
cli
fsubr
cli
addl
xchg
shl
lock
fucomp
ljmp
in
std
xor
jmp
mov
fsubr
hlt
lock
clc
rol
cmp
into
ss
lret
sti
iret
rcl
stc
mov
lret
cmp
mov
test
call
repz
loope
hlt
ffreep
call
cmp
dec
cmc
xlat
lret
into
ror
aad
faddl
icebp
icebp
mov
fisttpl
into
test
xchg
out
nop
repz
cmp
enter
ds
cmp
fsub
xchg
fmul
out
in
xchg
iret
icebp
cmc
repnz
xor
neg
call
fidivrs
std
in
cld
out
lea
divb
iret
sti
repz
repnz
shr
xor
faddp
div
loope
xlat
cmc
jmp
stc
rorl
ljmp
imul
xlat
jmp
cld
fistpll
hlt
in
test
loope
lret
lret
mov
nop
sub
jmp
xor
jecxz
loop
shr
mov
orb
loope
icebp
repz
aaa
jmp
std
cmc
cmp
shl
xchg
call
cli
cmp
decl
cmc
fcmovbe
in
cmp
sarl
fucom
rcr
fucomip
ffreep
out
mov
test
loop
in
lret
jmp
ds
jecxz
clc
xlat
fstp
cld
ret
loope
mov
int
fistl
cs
repnz
std
fsubr
std
lret
test
div
cmp
clc
loopne
mul
stc
cmp
mov
lock
sub
in
rcr
icebp
jmp
ret
into
rcr
fadd
fld
cmp
ljmp
out
fldz
in
neg
shl
enter
in
sti
fcom
xchg
jecxz
mov
rolb
out
fdiv
fdiv
in
repz
ds
loope
sar
testb
addb
shrl
fidivrs
jmp
sarl
idiv
ds
jecxz
aam
loope
loopne
dec
sti
loope
hlt
shl
lock
ss
rcl
xlat
ljmp
loope
cmc
aad
inc
call
jmp
sti
lret
xor
xchg
not
in
in
in
enter
xchg
ror
hlt
shlb
iret
hlt
xor
int
icebp
cmp
rol
mov
mov
repz
out
jmp
repz
fdivr
jecxz
mov
test
fsubr
nop
call
lret
lock
ror
lock
repnz
fucom
mov
cli
mov
in
orb
repz
shl
ds
jecxz
mov
xchg
cld
in
mov
andl
mov
inc
mov
cmpl
jne
push
push
pushl
pushl
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
adcl
xor
adc
mov
add
mov
sbb
mov
jmp
int
lret
int
and
push
mov
jle
add
xchg
loop
int3
fcomip
fsubrp
cmc
fdivs
jmp
in
flds
aas
xlat
out
test
fimull
xchg
xchg
mov
repnz
neg
std
ljmp
lock
hlt
fadd
fiaddl
std
orb
ss
faddp
iret
std
lret
out
and
stc
sub
out
ror
shl
jmp
iret
icebp
repz
cmp
lock
int
rol
rorl
mov
lret
in
jecxz
cmc
repz
in
cmp
sbb
enter
incl
shr
mov
in
ljmp
iret
in
cmc
aam
icebp
into
loopne
mul
call
lock
jecxz
test
xchg
aas
in
xor
imul
das
call
lock
rolb
fcmovnbe
cld
out
ljmp
cmp
xlat
in
pushl
sti
aam
ds
fcomp
loope
xlat
and
fdivrp
cli
mov
xchg
das
xor
in
xlat
cld
std
fdiv
cmp
cmp
and
rol
int
fmul
in
fmul
test
xor
aad
aam
xor
roll
cld
xlat
in
ljmp
mov
hlt
into
aam
aaa
idivb
xor
hlt
call
out
add
ror
aam
xor
shr
xor
icebp
cmp
lock
not
test
std
clc
fsub
mov
int
cli
iret
ror
xchg
test
leave
ss
xlat
das
iret
hlt
icebp
out
out
aam
cli
icebp
loopne
ret
aas
leave
xlat
out
lret
mov
fsubrs
out
iret
call
repz
shl
out
mov
mov
ret
jmp
fiadds
std
xchg
hlt
ss
loope
iret
shl
out
ret
aad
jmp
sbb
ljmp
int
fistpll
sarb
out
mov
ret
orb
mov
out
xor
shl
xlat
out
enter
rol
loop
sar
cld
in
out
orb
test
fadd
in
std
leave
out
ret
out
fcompp
ljmp
test
xchg
lret
fcmovne
xlat
lds
cmp
out
jecxz
out
ret
call
stc
fdivrp
shl
fmulp
rol
aad
jmp
cmp
aas
rolb
test
mov
sti
loop
repnz
out
aam
shr
loopne
add
shl
shl
ljmp
into
and
stc
clc
cmc
lret
ss
xlat
cmp
cmp
fcmovne
call
iret
xacquire
ljmp
cmp
rcr
aam
dec
in
out
in
mov
jecxz
mov
xor
div
rcl
fsubr
ret
and
xlat
int3
jmp
int
cld
sar
lret
ret
xor
xor
out
sar
dec
lret
fsub
fldl
jmp
lea
icebp
int
sub
out
xor
in
cmp
shl
loop
fnclex
repnz
aam
in
cli
cli
call
xchg
shrl
xlat
xor
in
out
icebp
hlt
xor
hlt
iret
sarl
loop
mov
loopne
std
call
out
xchg
xchg
int3
clc
cmp
enter
loopne
lock
ds
mul
imul
mov
rorl
iret
clc
ljmp
fiadds
loope
lret
mov
in
jecxz
into
fmul
in
cmp
test
inc
out
in
lret
iret
in
adc
leave
ret
lock
shl
cli
cli
ljmp
aad
out
mov
loopne
call
in
xchg
repz
xlat
cmp
cmc
ljmp
shl
aam
sti
cmc
sti
mov
jecxz
loope
out
clc
div
into
icebp
sarl
out
cmp
cld
mov
jmp
aam
iret
int3
xor
repz
cli
call
cli
rcr
loop
roll
shlb
les
add
xor
mov
sub
movb
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
push
push
pushl
pushl
pushl
pushl
pushl
pushl
pushl
pushl
push
push
call
cmpl
jne
mov
inc
mov
jmp
jmp
ret
ror
rcr
fnsave
xchg
sti
mov
add
jle
aas
add
nop
fildl
shr
xor
xor
cmp
add
not
cli
ret
cmc
and
out
mul
out
jmp
mul
out
out
enter
icebp
cmp
cmp
loop
roll
ljmp
sti
icebp
hlt
jmp
cmp
out
ret
int
rcr
icebp
cmc
aad
lret
fcmove
loope
dec
mov
in
aaa
fidivl
call
xlat
jecxz
cmp
leave
int
mov
icebp
int3
xchg
rol
cmp
xor
sti
cmc
lret
not
aas
clc
ret
mov
test
fcmovnu
repnz
test
xlat
sar
cld
call
fsubp
sarl
mov
add
xlat
idiv
xchg
in
loop
int3
lret
ljmp
in
shlb
out
ret
ret
fcomip
loopne
clc
test
iret
xor
stc
shr
das
iret
hlt
hlt
in
loopne
cmp
ljmp
out
out
test
lock
repnz
repz
cmp
rorb
jecxz
fcmovne
nop
int3
shr
call
jmp
cmp
out
icebp
cld
repz
idiv
test
leave
std
int3
into
sti
xchg
repnz
nop
aam
hlt
ss
sarl
cmp
jmp
shl
cmp
jecxz
loop
add
lock
test
in
fsubr
out
loope
xor
cmc
out
cld
fucomi
loope
inc
loopne
icebp
rcl
fsubp
xor
das
iret
rcl
lock
enter
fnstsw
mov
hlt
out
in
cli
lret
fdivrp
leave
fmul
xor
xor
lock
repz
vpsllq
enter
incl
icebp
incl
lret
lock
xlat
hlt
cmp
into
cmpb
std
hlt
vpavgw
jmp
addb
imul
rcl
cmp
repnz
jecxz
ret
out
test
cmc
mov
xchg
enter
in
das
out
rcr
cld
std
dec
cmp
mov
cmc
std
lret
call
or
cmc
cmp
leave
ljmp
test
sub
out
jmp
cli
iret
in
lret
xchg
std
or
div
hlt
fsubr
fucom
cmp
repnz
loopne
cli
sub
clc
in
and
lea
clc
aaa
fmul
neg
cmp
out
fstp
cli
rcl
test
cli
xchg
out
icebp
lret
mov
xchg
das
lock
xor
xor
shl
fadd
fdivr
mov
lret
aam
ljmp
fdivp
out
enter
aad
cmp
fucom
cld
ds
shl
lret
in
in
rcl
repnz
std
cmp
ss
rorb
sub
ljmp
jmp
pushl
cmp
repz
out
hlt
hlt
addl
xchg
xor
jmp
out
enter
iret
faddl
shl
aam
or
fisttps
int
notb
repnz
cmp
shl
in
ds
hlt
jecxz
not
jecxz
mov
out
shl
ss
leave
jmp
cmc
cmpl
fiaddl
leave
call
mov
test
sub
xor
clc
xlat
icebp
div
iret
fadd
out
mov
clc
clc
loope
iret
ljmp
out
cmc
test
fcomi
icebp
fldlg2
cli
into
lock
mov
mov
rcr
test
loope
enter
rcl
leave
int3
aad
ret
lock
loopne
clc
test
jecxz
mov
mov
orl
ss
stc
fcmovne
addl
in
into
fsub
out
ljmp
jmp
ret
ret
addb
dec
lret
call
jmp
lock
in
in
ret
jecxz
fcmovnbe
loopne
leave
jecxz
cld
fisttpll
sub
in
not
divb
sub
cmp
lock
in
jmp
jmp
xlat
rcl
fxch
fxch
jp
cmpsl
pop
jecxz
test
mov
jle
fiaddl
lret
aad
shl
call
cmp
sar
iret
test
aas
loop
xchg
out
jmp
cld
loope
shl
repnz
cmc
xor
int3
int
cmp
aas
cmp
fsubp
movb
fmul
xor
xchg
xor
cmp
int
aam
fcom
clc
rolb
cli
sbb
fiaddl
fisttpl
out
fcom
xlat
test
hlt
aas
hlt
loop
loopne
clc
movl
in
shll
in
aaa
jmp
xlat
sar
div
dec
in
out
stc
mov
lds
xor
mul
sar
aas
cmp
out
int
xchg
in
clc
ljmp
fcmovbe
rcr
xchg
loop
xlat
fstpt
fyl2x
std
lock
aad
in
ret
sti
fdivrp
mov
sbb
mov
rorb
les
xor
enter
icebp
rcr
icebp
jmp
cmc
jmp
fsub
int3
out
call
call
loopne
dec
movl
cmp
jecxz
out
repnz
fmulp
divl
jmp
cld
rcr
test
in
mov
jecxz
aam
loop
stc
repz
iret
in
out
hlt
icebp
xchg
addb
loop
lock
cld
std
std
xchg
loopne
jmp
xor
enter
clc
int
out
fcomp
iret
stc
test
rorl
mov
xchg
out
in
leave
out
shl
aaa
out
fidivrl
clc
ret
cmp
cmc
mov
jecxz
mov
xor
cmp
ljmp
fcomp
cmp
xlat
ljmp
shl
subb
jmp
cmp
aad
ljmp
addl
ret
fsubr
fcmovu
repz
xchg
shl
not
aaa
int
std
sar
rol
fcompp
les
decb
ljmp
out
hlt
aam
fstpt
aaa
hlt
std
push
ret
in
fcomi
mov
mov
fucomip
xor
xor
repnz
icebp
cmp
fidivrs
fsubr
sbb
and
jmp
xchg
xor
ss
lds
xor
sub
repz
jmp
cmp
call
std
cmp
stc
in
not
cmp
leave
test
hlt
xor
icebp
xor
out
out
sti
rcl
jmp
xlat
shl
in
mov
rol
clc
loope
mov
imull
jmp
sub
in
int
jecxz
aad
ret
fisttps
out
or
call
xlat
jmp
jmp
loop
rcr
loopne
in
fucomi
std
into
fcoml
cmc
cmp
sti
cmp
jmp
sti
clc
and
fildl
ljmp
adc
aam
ss
cmp
fcmovnbe
in
aas
fcmovnu
jecxz
out
fcmovbe
cmp
loope
sbb
out
rolb
ljmp
imul
into
repnz
cli
mov
cmp
jmp
jmp
xor
lock
xor
lret
aam
xor
xlat
xchg
push
jecxz
fiaddl
xchg
xchg
shr
fsincos
repnz
rcl
cmp
addl
sti
les
jmp
repnz
out
shr
shr
clc
xlat
div
push
in
aad
rcr
out
fsubr
xlat
jecxz
jmp
shl
faddl
lret
xor
lock
cmp
cmp
xchg
mov
cmp
xchg
in
jmp
xor
in
int3
ss
fistpll
loope
jecxz
sar
in
fcomi
jecxz
sti
sub
fldl
shl
out
stc
lret
sar
fsubr
jmp
cld
shl
jmp
fcmovu
iret
clc
iret
loope
in
add
xor
fcomip
aad
lret
ret
fidivrl
int
mov
jmp
mov
out
xbegin
test
icebp
call
sti
xchg
lock
cmpl
je
cmpl
jne
push
call
mov
dec
mov
jmp
xor
add
mov
add
mov
mov
xor
subl
jmp
sarb
into
rcl
ror
add
jmp
aad
adc
jle
add
jmp
mov
out
fidivrl
div
aas
xor
jecxz
out
inc
imul
in
cld
addb
rcl
test
ljmp
in
cld
clc
fucomip
xchg
loope
fsubp
ficoms
mul
icebp
clc
out
lret
cmp
out
fcmovnu
ljmp
int
sti
mov
xchg
ret
loopne
into
rcr
enter
cmp
addb
hlt
sti
in
mov
fiadds
lret
repz
int
fsubr
aas
xchg
call
ljmp
in
out
xor
test
call
loop
int
cld
test
jmp
fcmovu
int3
jmp
loope
shl
clc
rcr
xor
idiv
std
stc
repz
aam
out
in
lds
loopne
fucomip
aam
shl
fdiv
cmp
hlt
clc
jecxz
iret
cmp
ljmp
lret
jecxz
shl
in
in
movl
idiv
jmp
aam
fdiv
clc
int
into
aas
xor
out
repnz
in
lret
or
enter
xor
xor
out
loopne
int
adc
sti
out
cmp
call
mov
lret
lret
iret
cmp
loopne
in
fcmove
int
test
xlat
loopne
xor
fdecstp
addb
iret
mov
xor
mov
mov
mov
iret
shl
shl
icebp
enter
aas
jmp
inc
shl
cmpb
in
xchg
loopne
cs
xlat
std
lock
jmp
repnz
fimuls
xor
filds
loope
sub
jmp
fistpll
cmp
sarl
fcmovnu
cli
aad
in
xchg
sti
into
call
iret
xlat
mov
dec
loopne
fucom
cmc
lock
enter
stc
jmp
icebp
mov
cmc
not
cmp
frndint
fcom
xor
ror
std
leave
in
enter
out
call
loope
leave
xor
aam
out
cmp
repnz
jecxz
orb
mov
shl
in
into
iret
not
call
aaa
cmc
idiv
shl
hlt
test
int
sti
loope
xchg
mov
aas
in
sub
enter
aas
in
stc
ret
xor
filds
fisttpll
shl
repz
cld
icebp
aad
leave
repz
loop
fucom
jecxz
xchg
stc
jecxz
ljmp
aad
stc
repnz
idiv
cli
lret
or
ret
in
hlt
test
out
loope
xor
int
cmc
fsubr
cmpb
not
xchg
cmc
shr
cli
addl
sub
clc
shl
cmp
test
shl
faddl
mov
roll
enter
fmul
cmc
cmpl
mov
xchg
std
out
in
int3
mov
xchg
out
das
lret
out
lret
cmp
cmp
ds
fcom
sub
xchg
in
in
int3
leave
out
xor
leave
ljmp
iret
cld
mov
jmp
int3
jmp
sti
mov
call
in
fcmovnu
stc
ds
cmp
loopne
jmp
fucomp
mov
loopne
in
icebp
enter
das
ljmp
testl
fcmove
ljmp
test
out
lock
fidivrs
int
loope
repnz
mov
out
clc
fucomp
test
xchg
xchg
ret
stc
in
icebp
leave
cmp
shl
loop
fptan
jecxz
loope
aam
jmp
frndint
in
jmp
jmp
cld
into
fcmovne
int
fdiv
rcl
enter
fsub
int3
fiadds
out
lret
div
int
out
clc
cmp
shl
fsincos
sbb
rcr
ror
sub
orl
mov
xor
movl
inc
movl
mov
sbb
jmp
iret
fcmovnb
stc
inc
sti
mov
fimull
jle
add
fstp
movl
lret
cmp
mov
xchg
out
sti
out
and
jecxz
cmp
std
out
in
rcl
fstp
call
out
ret
mov
testb
iret
xchg
in
sub
cmp
idivl
lock
aas
hlt
les
aad
cld
stc
ljmp
ljmp
ljmp
ret
aas
fidivrs
rol
in
cld
lret
test
jmp
xor
jecxz
out
leave
cmp
cmp
ds
icebp
fadd
ret
mov
incb
ljmp
cmp
in
dec
iret
repnz
roll
loope
lret
lret
cld
test
test
leave
into
xor
cmp
int3
fcmovnu
loope
std
jmp
loop
into
loopne
xchg
movl
xor
stc
aas
loopne
add
movb
mov
faddl
out
out
call
fistpll
test
out
shl
in
loopne
sbb
call
xchg
out
shlb
xor
cmp
jmp
iret
fyl2xp1
std
hlt
lret
out
int3
iret
clc
in
in
ljmp
not
ss
aas
sti
aam
test
out
mov
loope
shr
jecxz
out
aam
aaa
repnz
cmp
cmp
cld
icebp
or
xlat
shl
in
rcr
iret
ror
in
test
cmp
fdivp
cmp
in
flds
std
loope
ljmp
int
out
int3
cmp
cmp
jecxz
mov
mov
out
nop
xchg
loope
loop
fdivs
cmp
cmp
call
clc
out
ffreep
icebp
enter
in
fldl
lock
enter
iret
leave
cld
hlt
clc
cmp
fdiv
fdivp
jecxz
hlt
fucomip
cld
sar
mov
das
lret
fcmovnb
out
aad
cmp
aaa
cmp
cmp
lret
mov
faddp
lock
xor
jmp
xor
ss
xchg
call
ljmp
xchg
std
jmp
lret
int3
repz
cmp
enter
loop
ret
addb
int3
mov
fnstcw
xor
imul
xlat
lret
cmp
div
ds
ret
stc
mov
out
rolb
ror
cmp
xlat
aam
ds
out
in
fstp
mov
out
int3
call
shl
xchg
out
ljmp
fstpt
sub
fcomip
test
enter
in
test
mov
mul
in
out
xor
cmp
fdivrp
iret
in
fldl
in
call
int
xor
xor
aad
cli
sar
fimull
ljmp
xor
std
stc
hlt
neg
cli
out
fimuls
out
fdiv
in
out
aam
icebp
iret
sub
clc
xor
ds
cmp
xor
fdivp
addl
clc
sbb
notb
sub
in
xor
sti
xlat
shr
cmp
mov
in
fiaddl
lret
ljmp
fld1
cmp
fdivrs
iret
ret
test
fstp
mov
fmul
in
nop
out
xchg
jecxz
xchg
jmp
cmc
stc
in
iret
xor
fldl
ljmp
mov
loop
xchg
jmp
ret
xlat
xlat
fmulp
in
shl
std
icebp
ror
loope
fiaddl
ljmp
in
repz
ds
aad
into
faddl
cmp
shl
loope
jmp
out
repz
rol
xor
ss
cld
out
in
loop
aad
xchg
in
xchg
in
rcl
jmp
into
xlat
lret
stc
int
xlat
mov
enter
std
in
fst
mov
cmc
stc
into
fucomp
cmp
cli
ret
ftst
rol
rol
ret
mov
into
int3
in
xchg
mov
mov
orl
push
xor
mov
add
jmp
mov
mov
inc
cmp
jmp
aad
aas
ret
fcmovne
aad
mov
fistpl
dec
jle
aas
add
faddl
out
clc
repz
call
in
test
rorb
xor
stc
ss
xlat
repnz
loopne
fcom
shr
cmp
xlat
loope
in
mov
cli
test
mul
stc
ror
xor
xor
cmp
hlt
out
ret
cmp
mov
sti
in
sub
aam
ror
cmp
shl
test
shl
idiv
fninit
std
iret
icebp
xchg
in
ret
cmp
icebp
shl
loope
fsub
cmp
loope
incb
cld
jecxz
ret
sti
lret
jmp
leave
hlt
int
loop
addl
enter
stc
iret
fcmovnu
test
rcl
imulb
ljmp
cmp
hlt
test
repz
jmp
xabort
ljmp
loopne
cmp
aad
call
sti
enter
in
into
test
ror
lret
cli
fsub
in
int
clc
repnz
loop
xchg
cli
fucomi
in
and
mov
lock
icebp
ss
aad
loop
lock
stc
stc
mul
in
jmp
mov
loop
test
icebp
div
shl
fld
aad
xlat
cmp
jmp
test
cld
lret
xchg
xor
ljmp
lret
ror
int
out
icebp
mov
ret
mov
cli
in
fst
cmp
into
in
sar
repz
fcomip
in
into
clc
in
repnz
jecxz
loopne
out
in
sarb
fucom
xchg
fimuls
nop
in
loope
xchg
aam
cs
sti
div
fcmovbe
shl
int
repz
std
out
fmul
faddl
fucom
xchg
lock
rcl
ret
aaa
cmp
leave
jmp
addb
aam
std
movl
aad
in
cmp
hlt
repnz
cld
enter
fnstsw
fldl
lret
xchg
out
enter
iret
stc
cld
cmp
lret
fildl
test
in
aas
in
xchg
in
in
repnz
aad
stc
xor
std
idiv
icebp
add
out
loope
repz
or
mov
loope
icebp
sti
sar
ss
sarb
fxch
cmc
xchg
filds
jmp
adcl
xor
cmp
leave
div
ror
xchg
fadds
xchg
out
lret
lock
out
fnstenv
jmp
cmp
jmp
cmp
hlt
in
les
incl
aad
out
ret
not
std
lret
hlt
icebp
int3
into
hlt
xchg
loop
ljmp
lock
out
jmp
imul
cmc
shl
shl
fnstsw
sar
rcl
fdivr
xor
out
mov
mov
rcll
mul
in
in
aas
xlat
fldl
repnz
loop
xlat
mov
std
mov
loope
call
repz
fucom
sub
stc
hlt
mov
nop
in
sti
xchg
lret
xor
clc
stc
lret
fcmovnu
fidivrs
cmpl
fmul
test
cli
loopne
lock
shl
clc
icebp
out
lock
repnz
int
loope
fadd
test
repz
shl
out
xor
in
rcr
out
shl
cmp
fst
adc
loopne
test
int
mov
in
jecxz
iret
in
stc
cmp
int3
ret
xchg
xchg
stc
into
fldl
aad
sar
fdiv
cmp
lock
mov
sti
int
or
cld
into
loop
call
ss
shl
fidivrs
xor
jecxz
clc
ret
jecxz
inc
ret
out
ficoml
shl
sub
iret
out
cmp
stc
cmp
ds
aam
loope
clc
jecxz
sti
jmp
into
jmp
enter
ror
int
sti
icebp
cmc
neg
fucomp
ret
out
clc
cld
dec
mov
jmp
rcl
xlat
fcmovnu
shl
cwtl
clc
xchg
clc
xchg
mov
pop
push
jle
aas
add
test
rcl
mov
fdivr
shll
ret
std
stc
leave
stc
out
test
orl
aad
in
cmp
jmp
cmp
filds
mov
loopne
loop
cli
nop
xchg
xchg
repz
rcl
iret
xlat
std
repz
cli
in
fpatan
ljmp
mov
aad
cld
lret
jmp
in
ret
clc
loop
repz
or
int3
lds
out
ret
xor
out
out
repz
fidivs
fsub
jecxz
ret
loope
mov
std
out
out
pushl
lret
cli
cmp
cmp
hlt
and
fcmovnbe
xchg
mov
fucom
out
lret
in
repnz
repz
sti
in
fdivr
aam
fadd
xchg
xchg
shl
xchg
mov
cmp
das
rcl
aas
lock
fcomip
cmp
mov
out
inc
out
pop
ljmp
idiv
xlat
repnz
cli
xlat
ret
xchg
idivl
ret
hlt
xchg
lret
in
mov
shl
cli
xor
int
rcr
fnstenv
mul
aad
sar
fcmovb
mov
lret
stc
ret
int
icebp
jmp
xor
sub
in
icebp
lret
loopne
loopne
ret
rcr
jmp
out
filds
xchg
in
xor
xor
bnd
out
fnstcw
lock
filds
in
out
jecxz
xchg
ror
hlt
cs
repnz
xor
loope
fiadds
not
lea
lret
xor
shr
clc
ss
clc
in
rol
sti
repnz
in
in
leave
test
lret
aas
neg
loope
fadd
loope
fsubrp
incl
sub
in
stc
shlb
fcomi
test
ds
ljmp
xchg
loope
addl
cmp
cmp
fcomp
stc
loop
aam
hlt
cmc
in
cld
lret
addl
in
cmp
cli
cmp
in
out
sti
idiv
loop
test
jmp
shl
out
aad
loope
xor
cmp
fxch
fcmove
aaa
cld
idiv
iret
xor
in
mov
orl
aad
cmp
enter
into
cmc
xlat
cmc
in
jecxz
xchg
cli
jecxz
jmp
fcoml
icebp
jmp
xor
cli
into
cmp
rol
idiv
xlat
fisttpll
enter
jmp
cld
test
ret
in
enter
idivl
in
aad
test
idiv
hlt
jmp
mov
in
jmp
jmp
ss
sarl
int
cmp
out
xlat
xor
jmp
adcb
call
aam
enter
fxam
aad
loop
loop
into
mov
jmp
aad
repnz
cmp
cmp
mul
cmpb
test
repnz
aad
idivb
jmp
orb
lea
div
cmc
fcmovnb
cmp
lock
aad
cmp
int3
std
sti
mov
repz
in
aaa
xor
fcomi
rcr
out
in
ss
faddp
std
out
aam
loopne
jmp
repnz
xchg
cs
sar
enter
lret
std
repnz
fidivrs
loope
shl
out
imull
aas
xor
lret
loope
aam
repnz
neg
fnsetpm(287
call
ljmp
ror
fdivr
cmc
ror
fiadds
jecxz
xchg
std
out
lret
sti
out
out
pushl
in
cmp
shl
fdivrl
sarl
loopne
aad
aad
test
out
ret
aam
neg
cmp
cmp
aad
rol
call
loopne
lret
faddl
mov
in
repnz
cmc
stc
fstp
fdiv
into
cli
fidivrs
lock
in
fadd
addl
leave
rcr
repz
sti
lret
loopne
rcr
lock
rcr
fdivp
mov
icebp
xchg
in
mov
mov
jmp
ret
ror
ret
rcl
je
repz
sbb
add
mov
clc
xor
lret
cld
loopne
repz
faddp
fxch
mov
faddp
mov
aaa
out
cmp
jmp
xor
fcmove
fadd
out
test
ret
dec
jmp
fmull
in
jmp
cli
ds
fucom
cmp
fadds
jmp
leave
addb
lret
out
fcmovbe
cmp
lock
aad
mov
fldlg2
fcmove
jmp
mov
mov
lret
fldl2e
in
cmp
std
rcl
loope
loop
fnstsw
int3
sub
repnz
lea
call
ror
rcr
aas
adc
rol
fadd
mul
out
fdivrp
iret
in
sti
jecxz
xchg
ret
shl
xlat
out
sti
in
adc
idivb
rol
std
jmp
cld
sti
mov
lret
xor
in
jecxz
cld
aam
ror
jmp
jmp
lret
mov
xchg
mov
out
xchg
imulb
jmp
fsubrp
fmul
fnstsw
rol
sar
cmp
mov
ror
sti
xchg
xchg
or
fnstenv
aam
sbb
loop
jmp
mov
ljmp
xor
cmp
cmp
cli
cmp
in
fldpi
jecxz
mov
mov
into
lret
xlat
into
aad
dec
loopne
xchg
aam
sti
stc
xchg
jecxz
in
lea
out
fst
sti
jmp
jmp
sti
out
sti
fcmovnu
dec
mov
mov
mov
aam
repz
lret
int
xorl
xchg
sar
jmp
jmp
xor
xor
out
cld
in
cmp
aad
fcomip
jecxz
jmp
std
aad
leave
ret
fnstcw
hlt
iret
out
stc
in
rolb
fadd
aam
fmulp
mov
lea
cs
jmp
lret
loope
iret
loope
icebp
repnz
movl
xchg
test
in
into
ret
jecxz
out
std
sarb
rcl
aam
out
cli
cmp
lret
jecxz
std
jmp
xlat
idiv
ret
int3
hlt
out
cmp
in
aas
repz
in
fidivrl
fcmovne
std
xlat
test
repnz
repnz
xor
xor
icebp
repz
sar
loopne
rcr
fucomp
out
fsubp
cli
int3
test
in
xor
xlat
shl
xlat
fprem
aam
cmp
lock
std
repnz
mov
lret
fdivr
orb
idiv
out
cmp
std
cmp
cmp
out
jmp
std
iret
ljmp
xor
out
clc
lock
addl
lret
mov
out
nop
lret
loopne
rol
xlat
not
cli
ds
pushl
out
loope
aas
jmp
in
mov
out
hlt
lea
fdivrs
aam
std
clc
in
cld
std
jmp
adc
div
repz
fimuls
xor
cmc
out
iret
rcl
cmp
cmp
fdivr
clc
lock
out
xlat
lock
test
lea
in
enter
lret
das
rcr
int3
cmp
test
fdivr
cmp
fcmovnb
neg
fiadds
mov
xlat
xlat
rcl
fidivrl
fcmovnu
ds
repnz
rcl
addl
out
icebp
out
clc
sti
int3
jmp
out
cmp
repz
xchg
div
mov
cld
repz
loope
shr
in
rcr
int3
fmul
fld
ret
test
add
in
faddp
in
mov
aaa
ror
shl
aam
clc
fdivrl
aad
loop
not
repz
test
std
std
in
mov
dec
jmp
leave
sti
aam
repz
xor
loope
call
mov
movl
repz
cmp
cld
std
in
shl
xor
loopne
and
ljmp
test
clc
fsubr
cld
out
int3
aas
cmpb
cmp
cli
adcl
add
iret
vpaddusw
fstp
pop
mov
outsl
mov
sub
jle
add
loope
out
sti
xor
out
int3
not
fcmovnu
cmp
in
hlt
fdivrp
cli
mov
out
aad
in
xor
int
xlat
repnz
lret
into
orl
out
repnz
fnstenv
cmp
xor
xchg
leave
int
in
repnz
loopne
hlt
loopne
out
cmp
hlt
sti
cli
imul
aad
testb
mov
in
mov
mov
clc
jmp
out
fdiv
lret
and
aaa
cmp
mul
ljmp
aam
rcl
lret
in
into
repnz
shr
out
in
vpavgb
sub
sti
shl
sar
rcr
int
enter
jmp
aam
loop
into
and
fdiv
mov
out
out
into
loopne
aad
repz
div
not
xor
cmp
aam
sar
jmp
test
fisttpl
subl
fcomp
xor
fdivrp
rcr
std
mov
leave
cli
mov
sub
repnz
hlt
ror
out
fdivrp
aad
dec
sti
les
test
sub
xor
cld
ds
iret
icebp
sbb
ljmp
sub
int
rol
xor
jmp
fcmovu
clc
cmp
xor
sti
aad
stc
sub
int
xor
lock
xor
not
rcr
fnstsw
or
xor
xchg
adcl
lret
idiv
fidivrs
call
loopne
int
out
mov
ret
int
ds
jmp
cld
fcom
out
testl
xchg
iret
shr
lds
xor
fcomip
out
testl
iret
out
orb
leave
cmp
rcr
cli
cmp
test
aam
enter
xchg
into
decb
int
cmc
in
cli
repz
in
cmp
cmp
sti
lock
orl
loop
xchg
fdivp
into
loopne
xor
aad
sti
fdivr
clc
ds
mul
ret
sub
xchg
xchg
call
jmp
xor
rol
fcom
xor
loopne
ret
clc
lret
std
jmp
jmp
cmp
out
std
int
jecxz
sti
mov
mov
loop
nop
jmp
shl
out
out
mov
aad
out
cmp
cmp
aam
fidivrl
aad
xor
addb
int3
shr
loopne
xor
jecxz
mul
cld
out
cmp
leave
cmp
fidivrl
cli
stc
in
stc
sub
icebp
cld
into
in
jmp
jmp
sti
cmc
ljmp
jmp
nop
sub
ror
shll
cmp
enter
sti
rol
call
xlat
incl
test
out
aam
xor
cmc
rol
sti
fsubp
out
loop
test
clc
inc
std
shl
call
iret
repnz
iret
shl
aaa
cli
repnz
shl
fcmovb
enter
stc
nop
addl
loope
leave
fucompp
xlat
ror
jmp
sbb
test
ret
fxtract
fld1
fimull
xchg
icebp
ss
xor
out
in
neg
aad
fucomip
hlt
jecxz
xchg
fmul
mov
into
fdivrp
mov
sti
out
clc
cmp
cmp
std
into
aas
sbb
fsub
ror
loopne
mov
into
in
rorb
sub
hlt
repz
ret
ret
vpmovmskb
clc
xchg
out
in
in
cmc
lret
test
ffree
fidivrs
hlt
aas
shr
fcmovbe
vpminub
jmp
fimuls
out
leave
sub
cmp
out
test
cmp
in
mov
ror
sbb
icebp
cld
test
out
xor
repnz
out
in
out
sbb
rolb
loop
neg
jecxz
orl
add
fcom
xlat
push
xlat
outsb
rorb
pop
jle
aas
add
ss
aad
iret
into
fucomip
sar
fdivr
out
clc
loopne
repz
jmp
in
out
jmp
xor
fnstcw
stc
lret
std
cmp
loop
aas
lock
rorl
loopne
loope
test
and
cmc
xlat
in
hlt
loope
out
hlt
shl
jecxz
jecxz
ret
jmp
addb
cmc
xchg
out
xor
ss
jmp
hlt
sar
test
fadd
loop
mov
in
nop
test
orb
out
cli
in
jmp
shll
repnz
xchg
in
lds
aad
out
out
aam
sarb
cli
in
fdiv
test
neg
cmc
xchg
call
icebp
ss
fstpt
inc
fdiv
repz
mov
in
nop
mov
xchg
hlt
test
repz
jmp
ds
clc
sti
cli
out
loop
out
mov
hlt
int
std
cmp
rcl
flds
out
fmuls
fsubrp
test
aam
ret
in
in
cld
xor
xor
xor
sar
xchg
aad
mov
test
xchg
xchg
and
das
lret
xor
in
fdiv
bnd
push
cld
out
out
mov
out
cld
xchg
xchg
xor
enter
divl
in
int
cmc
add
cmp
decl
sub
cs
hlt
out
cld
call
jmp
aas
add
loop
lds
jecxz
or
ror
int3
xlat
aad
clc
in
in
ret
icebp
jmp
fucomip
loop
and
xor
rol
idivb
cmp
cli
cld
fadds
mov
test
xchg
xor
ljmp
jmp
stc
iret
loopne
cmp
in
out
test
rcl
test
into
int
shr
aam
cmc
ljmp
jecxz
rcl
jmp
mov
cli
xlat
leave
test
jmp
fcomi
cmp
leave
rolb
ret
loop
hlt
mov
fistl
aam
enter
fistpll
fcmovnb
lock
stc
in
xchg
ret
cli
test
lret
in
in
jmp
hlt
icebp
test
cmp
fmul
cld
int
ds
mov
ljmp
mov
rcl
cld
loopne
into
in
cmp
aad
hlt
loope
decb
xchg
faddp
loopne
cmp
cld
call
aam
xlat
cld
test
cmp
roll
fiadds
in
xlat
hlt
clc
ret
cmp
out
xlat
out
int3
jecxz
ds
loop
std
std
mov
or
mov
in
ret
loop
cli
aas
aas
loop
and
fsubp
cld
idiv
cmp
mov
fnstenv
cli
shl
xor
filds
jmp
rcll
enter
out
sarb
aad
call
fucom
sub
in
loope
xlat
jmp
divb
sti
clc
lret
fcmovne
shl
sti
fldl
lret
test
loope
int
call
hlt
into
fnstsw
cli
rol
lret
mov
test
mov
xchg
divl
fldl2e
hlt
leave
fucomi
std
lock
cmp
lret
loop
mov
into
int3
out
repnz
int
call
out
aas
stc
cli
stc
in
idiv
test
sti
shl
cld
lds
loope
xchg
fdivs
out
sar
cmp
aas
cmc
clc
out
in
fisttps
clc
fidivrl
ljmp
out
cmc
in
cmp
adc
xchg
and
div
call
int3
int
repz
aas
cmp
lock
les
jecxz
out
enter
mov
xlat
int
out
ss
aas
loop
lock
shl
mov
in
cmp
lock
fsubr
cmp
je
push
push
mov
jmp
rcl
rol
rol
rcl
mov
pushf
adc
jle
add
rol
lret
call
fildl
add
sub
out
orb
int
hlt
out
cmc
cmp
cmc
jmp
cmp
int3
repnz
cmp
repz
mov
mov
cmc
ljmp
cld
out
cmp
and
add
jmp
rolb
int
idivl
aaa
xlat
test
test
stc
stc
in
fcmovnu
orl
fstl
repz
in
call
out
aam
std
sar
jmp
sti
mov
xor
cmp
out
aam
cmp
aas
loope
sbb
out
leave
clc
orb
xor
xor
lds
idiv
loopne
jmp
in
test
loope
loopne
jecxz
xchg
loope
xchg
out
fcmovnb
fdiv
iret
fdiv
jmp
fcmovnbe
fcmovnbe
hlt
loopne
call
ljmp
aaa
icebp
std
aaa
hlt
cmp
lret
in
les
out
fiaddl
loopne
loopne
ret
ret
cld
cmc
aam
fnstenv
aas
out
fiaddl
xchg
jmp
jmp
cli
sti
in
xlat
loopne
mul
shr
fsub
cmp
jmp
test
out
in
aam
fdiv
ljmp
rol
rorb
xchg
cld
cmp
enter
in
sti
repnz
clc
xor
loope
sar
push
les
in
stc
jmp
sub
sar
cmp
fcmovu
div
div
xor
rorl
sti
lea
into
loopne
xlat
int3
sti
jmp
cmp
test
roll
jecxz
test
int
fcomip
out
lock
into
aad
out
fdivp
cmp
stc
loope
repz
sub
loop
cli
test
into
xor
out
cld
aad
shl
aad
sti
int3
jmp
test
mov
shll
icebp
clc
rcl
in
fdivrs
loop
iret
adc
jmp
testl
out
sti
clc
lret
shl
filds
fisttpl
nop
out
out
int
xor
clc
in
cli
in
fcmovne
sar
loope
xlat
and
ljmp
xchg
cmc
fdivs
fidivl
ss
cmp
cmc
shl
loopne
aam
fmul
xlat
test
xchg
out
idiv
imul
cmp
cmc
int3
in
test
fldl
lret
in
xchg
into
cmp
cmc
ror
loop
cmp
enter
jecxz
std
mov
out
aad
clc
cmp
call
ss
cmp
testl
xor
hlt
fnstsw
not
cmp
shl
ds
cmp
fsin
loope
fildl
mov
lock
sub
lret
jmp
ret
cli
icebp
fmull
idiv
mov
leave
test
loopne
out
leave
enter
cmp
incl
sti
jmp
sbb
std
out
loopne
mov
imul
int
icebp
cmp
cmp
fcmovb
cmc
fmulp
fcomip
cld
icebp
sbb
aas
test
rcr
ss
in
loope
clc
cmp
neg
in
fisttpll
int
ror
rcl
aam
cld
jmp
cmp
ret
aam
xchg
xor
int3
sbb
test
lret
hlt
shl
hlt
stc
into
ror
aas
cld
neg
loopne
rcl
std
sub
fucomi
xor
addb
int3
lds
rol
test
out
test
cmp
hlt
cmc
mov
aam
rol
xor
into
jecxz
clc
jmp
iret
fdiv
cmp
ret
addl
in
int3
test
in
loope
loop
lret
xor
stc
repz
xlat
out
fucom
out
in
mov
xor
inc
xchg
add
add
movzwl
mov
mov
movzwl
xor
add
jmp
into
mov
fmul
iret
fucomp
sub
inc
mov
data16
aas
add
enter
sti
sarb
fiadds
mov
ljmp
out
cs
in
jecxz
lret
hlt
stc
in
loope
test
sti
enter
fucomi
enter
lock
lret
xlat
int3
hlt
jmp
jmp
cmp
rol
jecxz
out
cmp
loop
jecxz
in
ljmp
cmp
sti
fsub
test
in
mov
in
xchg
shl
xchg
lock
int
xor
out
cs
fdivr
roll
and
lret
or
std
fisttpl
xor
xor
into
rcl
fdivr
int3
fdiv
loope
shl
test
enter
mov
xchg
repz
rcr
fdivr
fidivrl
rcl
test
hlt
loopne
out
test
leave
repz
cmp
cmp
not
aam
cmc
test
test
mov
fcom
and
ljmp
in
sar
int
out
fcmove
rcl
div
fdivr
fucomi
fsubr
xchg
xchg
lret
lret
ss
in
jmp
aam
into
cmp
rcl
xlat
clc
in
xlat
jmp
repnz
mov
xor
ljmp
sbb
cli
cmc
cmc
fucomi
mov
ljmp
lock
fadds
test
and
nop
cld
jecxz
cmp
out
out
cmp
ss
loope
cmc
hlt
rol
fdivrp
or
out
int3
cli
int
loopne
xor
xlat
clc
sub
aad
cmp
cli
aam
shl
test
test
into
fsubrp
sti
leave
fst
ror
cmc
call
aad
repz
cmc
in
neg
sbb
loopne
ds
fiaddl
lock
mov
rcr
sar
cmc
cmp
repnz
rorl
jecxz
leave
jecxz
cld
sbb
cli
shl
xor
out
cmp
out
fmul
lock
addb
lret
orl
sub
jmp
bnd
jmp
cmp
icebp
in
movl
ljmp
cmp
out
sarl
cli
std
cmc
lock
jecxz
in
cli
lret
out
int3
jmp
shlb
repz
fidivrs
lock
test
faddl
std
std
sbb
lret
xchg
ss
lock
std
cmp
into
cmp
sbb
leave
jecxz
aam
int
lock
fdivp
adcb
rol
cmp
cli
into
fsub
xchg
sub
loopne
fldl
aam
ss
hlt
cld
or
rol
xor
stc
jmp
ljmp
out
repnz
fdivrp
cmp
out
rcr
shl
lret
fsubr
xchg
ror
into
aad
hlt
leave
cmp
hlt
repnz
cmp
inc
cld
hlt
cmp
orb
out
sub
fdivr
lret
bnd
ret
aad
call
std
or
lret
xchg
das
call
enter
in
cmp
xchg
loop
repz
in
sti
xabort
in
mov
lock
xor
repnz
cmc
loopne
loop
ret
aad
in
jmp
leave
xchg
std
xchg
sub
cmp
enter
ljmp
in
out
fldl
call
aaa
leave
ss
in
cmc
loopne
cmp
add
fdivrs
in
inc
vpsrad
divb
xor
aam
clc
shl
test
loop
loopne
xor
lock
out
xlat
aam
cmp
shl
sbb
into
fnstsw
fiaddl
ljmp
rcl
jmp
cmp
aaa
lock
std
ret
imul
test
mov
jmp
in
in
stc
out
leave
sub
shll
out
in
idiv
idiv
in
int
ffreep
std
out
xchg
mov
addb
lret
xor
inc
cmp
inc
cmp
jne
pop
jmp
ret
xlat
rcl
lret
xchg
stos
mov
jle
aas
add
out
cmp
stc
cmp
in
ror
aam
fdivrp
icebp
in
ljmp
xchg
nop
bnd
xor
out
std
xor
shl
test
shl
vshufps
repnz
xlat
into
fnstenv
out
in
in
in
fdivr
ret
xlat
mov
loop
fmulp
out
mov
out
cmp
out
shr
sarb
shl
icebp
rcr
fmuls
out
hlt
jmp
cmp
int
cmp
rcl
cmc
cmp
loopne
lret
orl
out
cmp
cmp
out
repnz
sar
repz
int
in
sti
orl
int3
out
call
fnstcw
fdivr
cld
cli
cld
ljmp
mov
rorb
aam
jecxz
hlt
xlat
xlat
hlt
lret
ror
fst
fdivrs
stc
fiadds
shlb
in
xor
ss
cli
div
int
loope
xlat
clc
test
icebp
fxch
loopne
adcl
cmp
cmp
stc
or
rol
filds
out
shl
xchg
ljmp
imul
fidivrl
hlt
fiaddl
ret
imul
out
jmp
flds
xchg
loope
fcom
call
jmp
iret
sbb
in
into
mov
xchg
sub
jmp
call
ffreep
aad
mov
int3
test
icebp
leave
loop
out
jecxz
clc
int
shr
cmp
out
repz
addb
cli
sbb
fucomi
and
int3
xor
repz
sar
fmul
fsubr
in
vshufps
sub
mov
in
xor
leave
xor
lock
cmp
cmpl
testl
out
jmp
aaa
repnz
out
repz
rcl
test
mov
mov
fiadds
in
ror
jmp
cmp
in
fucomp
faddl
ret
loope
orl
out
clc
test
cmp
rcr
fdivp
hlt
ret
cmp
lret
mov
int
fdivp
jmp
fmul
shl
xor
lock
fdiv
xlat
rcl
loopne
ret
jmp
test
xchg
int3
sar
das
xor
out
div
enter
loop
sarb
fcmovb
sti
out
lds
lret
stc
fdivp
xchg
aam
jmp
out
cmp
fidivrs
cmp
clc
clc
aad
enter
fucomp
leave
out
fildl
aaa
in
out
xor
ljmp
loopne
incl
mov
icebp
cmp
not
cmp
ljmp
lock
cmc
int3
out
iret
lock
mov
xor
aam
das
sti
into
enter
ds
mov
mov
or
int3
hlt
out
lock
iret
xor
out
repz
lock
rcl
in
incb
sti
fcmovnu
jmp
xchg
out
sub
xor
int
stc
cmp
out
int3
shl
fld
loope
aad
cmp
fildl
mov
out
xor
clc
clc
cmp
int3
int
repz
stc
div
sbb
leave
sub
lret
ret
ljmp
xor
iret
repnz
flds
cld
cli
aas
loop
out
sti
test
test
lock
xchg
aam
ret
ss
in
cs
loopne
ret
stc
loop
fucom
stc
and
jmp
mov
in
out
cmp
sti
stc
fdivl
cmp
in
ret
shr
aad
ret
ljmp
fldl
cmp
xor
icebp
repz
xlat
hlt
loopne
xlat
fucom
cli
and
push
lock
test
cmp
iret
ret
testl
lock
mov
aaa
ret
in
cmp
push
idivl
ss
filds
loope
fsubr
xchg
lock
ljmp
clc
jmp
aam
fadd
fstp
pusha
shl
mov
cmpsl
mov
add
lds
repz
aam
rcl
loopne
fstp
rcl
in
jecxz
int3
xchg
nop
ljmp
leave
imulb
lret
aaa
cmp
loop
int
aam
cli
fadds
in
int
nop
jmp
das
aam
sti
jmp
ss
test
out
fninit
out
xlat
jecxz
clc
jecxz
loope
in
aad
xor
not
jmp
sbb
fcom
mov
sbb
mov
out
out
ret
lret
lret
aad
ss
leave
std
cli
aas
loop
std
xchg
sti
shl
out
shr
lock
sub
clc
xor
enter
loope
jecxz
loopne
fucom
loop
mov
test
or
ror
iret
les
ljmp
iret
repz
xchg
int3
ror
sub
xor
sti
icebp
int3
fxch
aad
aad
cmp
in
call
xchg
fldl
addb
ss
cmp
loope
out
jecxz
in
shl
jmp
mul
cld
aam
enter
aad
sti
cld
fldl
clc
xchg
jmp
call
shll
out
ss
out
loopne
loope
addb
out
cli
in
cmp
jmp
shlb
xor
hlt
leave
int
cmp
fiadds
cmc
mov
leave
ljmp
lret
lret
fcmovu
clc
cmc
aam
rol
ret
test
out
addl
jmp
sarb
cmp
repz
rol
rcl
not
cmp
jecxz
loope
loope
rcl
aaa
rol
xor
fldl2e
cmp
in
in
fiadds
jmp
xlat
mov
nop
shll
shr
enter
loopne
stc
int
ds
sar
aad
les
sar
out
fst
int3
cmc
loope
int
stc
cmc
jmp
in
out
cli
fcmovb
lock
cld
fucom
in
xchg
fnstsw
into
cmc
in
cmp
cmp
fcom
xor
sti
adc
out
and
stc
sti
fdivr
filds
loope
aam
out
xor
icebp
cmp
add
aam
fldln2
mov
fdivs
ss
cmc
int3
aad
cmp
stc
aaa
shl
sti
out
std
mov
fists
shl
in
repz
cmp
aad
loopne
fdivp
fscale
jecxz
fcom
std
int
out
in
in
lret
call
out
aaa
cli
inc
sar
test
xlat
loop
mov
test
loop
in
test
into
xlat
iret
leave
jmp
jmp
in
ret
fcmovnbe
enter
fistl
mov
ljmp
lret
out
ds
call
test
mov
xchg
cmc
out
repz
cld
aam
enter
std
xchg
not
lds
lret
filds
push
out
out
leave
fdivr
fcmovu
stc
lret
ds
loope
div
movb
jmp
sub
out
out
icebp
sarb
cmp
sbb
iret
fucomp
mov
and
xchg
cli
cli
into
stc
mov
int
fcmovnbe
shl
test
in
test
leave
ret
mov
lock
aaa
xor
in
cld
clc
cmp
icebp
sarb
icebp
stc
out
ljmp
mov
lds
iret
xor
out
clc
stc
ds
sti
test
fmull
in
or
rcl
out
neg
rcl
leave
icebp
lret
int
fiaddl
std
stc
lret
jmp
into
loope
xchg
std
xorl
in
icebp
lret
fcmovnbe
fucom
sar
add
ret
leave
xchg
xchg
out
not
rcr
jmp
int3
int
ret
test
mov
jmp
repnz
clc
cld
xor
fdivr
fistpll
out
xor
sar
cli
cli
in
into
sti
mov
mov
sti
fdiv
mov
xor
jmp
fcomp
fistps
je
test
fs
jle
add
lret
xor
icebp
incl
cmp
lret
cli
sti
mov
mov
int
aad
int3
repz
lock
div
fdiv
std
sub
out
xchg
in
rcr
sar
xlat
xlat
out
stc
into
aam
jecxz
rol
call
jecxz
in
int3
test
add
jmp
in
into
aam
icebp
aad
xlat
in
int3
addl
clc
int
leave
cmp
loope
aaa
and
flds
ljmp
test
in
push
aam
cmp
aaa
in
xchg
loop
lret
int3
orl
cli
cmp
aam
sub
rol
fdivr
add
int
into
out
fisttpll
aam
fldz
out
std
ljmp
out
stc
xchg
loop
inc
out
fisttpll
bnd
int
stc
fsubr
shl
std
icebp
stc
aam
test
ret
idiv
test
int3
xchg
mov
in
aaa
ror
lret
aad
stc
in
fistpll
cmp
call
in
icebp
fdivrp
xchg
cmc
into
int
out
xlat
jmp
div
aas
xlat
shr
rcl
testb
out
mov
lea
leave
out
out
xor
rcr
ljmp
adc
shr
enter
test
in
in
das
fdivrl
in
cli
int
loopne
testb
stc
mov
fsub
out
out
call
test
fsubr
neg
fstpt
in
rcl
and
addb
rcl
lret
jmp
ret
enter
mov
lret
icebp
mov
repnz
ror
call
xor
ds
xchg
fcmovnbe
mov
leave
roll
in
shrb
ljmp
repz
loope
cmc
enter
leave
loope
clc
div
int3
cli
enter
rcl
aam
cmc
mov
xchg
sti
and
test
lret
repnz
fmulp
rol
fucom
xchg
cld
fildl
loope
in
fmul
cli
xor
cmc
jmp
iret
rol
cli
testb
jecxz
loop
mov
shll
sub
jmp
int
sar
shlb
aas
hlt
loop
ljmp
enter
test
cmp
leave
out
repnz
ret
fcomip
ret
cli
xchg
loop
call
lock
xor
cld
cmp
cmc
out
repnz
ljmp
rcl
xor
ret
out
enter
sti
aam
loop
rol
jecxz
addb
in
call
test
xor
das
fmulp
fucomip
cmc
testl
int
sti
sti
out
jmp
jmp
cli
cli
fcmovne
xor
xor
fcomp
call
rol
in
mul
ds
loop
faddp
xchg
xchg
iret
out
xor
idivb
aad
ds
fcom
lret
fdivrp
cmc
shl
mov
fcompp
in
mov
int
loope
repz
in
ljmp
cmp
fcoml
repnz
repnz
into
cli
into
out
cmp
fcmovnu
sarb
loopne
clc
fsubr
xchg
cli
cld
fsubp
orb
lret
cmp
rcr
aam
int3
jmp
sti
xor
loopne
ljmp
fdiv
fcoml
out
in
fdivrp
ljmp
in
ljmp
lock
in
out
enter
cmc
out
jmp
xlat
fidivrs
out
aas
icebp
sub
clc
loop
call
mov
jmp
fnstsw
out
loope
test
mov
sti
rcr
test
mov
loopne
mov
lock
xor
les
xlat
cmp
fnstcw
cmp
test
out
fsubp
xchg
loope
lock
into
loope
out
int3
loop
leave
cmp
mov
jmp
iret
aas
aas
ror
rcl
ret
pushf
mov
xorl
jle
aas
add
lock
into
cmp
test
ds
mov
fldl2t
loop
cmp
fidivrs
aam
not
repnz
iret
into
aad
shr
sti
fcmovnu
and
enter
fcmovne
stc
mov
test
cmc
shlb
test
int3
rcr
fmulp
xor
xor
orl
orl
cmc
out
xlat
repz
not
int
testl
aad
leave
ficoms
icebp
roll
xor
cmp
out
repz
aad
cmc
ljmp
lret
lock
cmc
jmp
sub
xlat
out
out
int
or
faddl
int3
fsubr
jecxz
lock
xchg
aaa
mul
cli
cmp
shl
rol
fadd
fnstcw
loop
cli
jecxz
into
or
xchg
mov
stc
clc
out
xor
loopne
cmp
cmp
sarb
shl
out
clc
ljmp
imul
xor
jmp
xor
cmp
xlat
cmc
stc
repnz
test
fdiv
fadd
out
xlat
mov
loop
mov
rcl
ss
clc
fcom
neg
xor
hlt
xchg
ljmp
test
xor
xor
out
repnz
cmp
shr
fnstcw
fcmovnu
fcomp
loopne
ljmp
repnz
sti
rcr
ljmp
out
icebp
icebp
aas
rolb
mov
loop
out
out
fxch
faddp
loop
mov
cmp
fcmovne
nop
lds
iret
xlat
fucomi
in
cli
shlb
repz
loope
fcmove
jecxz
int3
stc
in
cld
stc
sti
fsubr
xchg
xor
lock
in
enter
rcr
idivb
ds
fdivrp
sti
loope
jmp
lock
das
fcom
idivb
leave
int3
std
int3
cli
cmc
les
std
cld
in
div
into
in
in
int
jecxz
cmc
add
sarl
leave
xor
fxch
std
sti
cmc
mov
out
int
jecxz
icebp
test
shll
fmul
xor
fcmovbe
ljmp
aas
call
fucomi
cli
xchg
xchg
jmp
rcr
fmul
in
jmp
enter
rolb
test
test
out
in
std
cmp
xchg
rol
shll
in
ror
aam
cmp
into
repnz
les
testb
fimuls
shl
in
jmp
repnz
shl
xor
stc
fdivp
mov
fimuls
fsubp
call
shr
lret
in
ljmp
fld
ds
rcr
or
stc
cli
lret
repz
ret
cmp
in
cmp
fidivrs
cmp
in
ljmp
jmp
lea
jecxz
fcmovb
les
cmp
aam
fiadds
repz
enter
int
int
out
out
ljmp
cs
ror
int3
and
cmp
fstpt
mul
std
mov
fcmovu
cld
repz
jecxz
ret
aam
aad
aaa
icebp
cli
fsubp
cmp
lock
cld
cld
iret
faddl
out
aam
les
fst
cmp
out
jecxz
cmc
aad
rcl
mov
aad
fcmovnu
fcmovu
lret
xchg
out
shl
aaa
cmp
int
fcos
jecxz
clc
call
xlat
cli
enter
xchg
adcb
xor
xlat
aaa
hlt
shl
fstp
rcl
addl
frndint
std
jmp
enter
cmp
idiv
out
in
cld
shl
fcmove
orb
dec
aaa
call
int
lret
ror
cmc
fadd
shl
call
enter
int
jecxz
jmp
int3
fucomip
aaa
cmp
fmuls
loope
out
loope
in
cmc
in
in
icebp
rcl
cmp
aam
icebp
out
fstpt
aas
rolb
jmp
icebp
ljmp
sti
ror
xchg
filds
std
lock
sub
in
imul
jmp
aam
shr
add
add
rol
aad
pop
pop
movsb
or
jle
aas
add
out
fdiv
rolb
mov
clc
fcmovb
xchg
into
call
cmc
int3
rcl
std
clc
fsqrt
int3
fdivp
in
hlt
cmc
sub
out
addl
std
in
cmc
roll
cmp
test
in
xchg
xor
int
out
fcomp
int
loop
repnz
out
rol
shl
mov
mov
std
xchg
rcr
int
stc
out
call
repz
xlat
roll
test
sti
orl
into
sar
iret
clc
int
into
aad
repz
test
std
ret
into
ljmp
repz
cmp
std
in
xor
int3
std
std
loop
fyl2xp1
int
loop
cld
lret
fisttpll
cmc
iret
cli
clc
jmp
sar
repnz
ds
call
stc
cli
fscale
leave
incb
in
cmc
out
cmp
aaa
fdecstp
fnstsw
fcomip
out
test
test
mov
repnz
das
sti
lock
lock
ljmp
loop
xchg
std
addb
cld
jmp
sub
icebp
fdiv
aam
sti
fdivrs
xchg
loope
nop
jecxz
loopne
out
orb
xor
jmp
cmp
int
ret
cmp
fcompp
mov
int3
rcl
xor
bnd
int3
icebp
jmp
rcr
cmpl
aas
and
cld
xchg
out
cmp
and
jmp
in
out
in
ds
into
cmp
ror
repz
mov
icebp
jmp
shr
loop
cs
in
in
shl
out
in
div
loop
in
mov
mov
enter
out
div
iret
repnz
iret
cmc
stc
repnz
cmp
and
fcmovnu
aam
fmuls
out
fsubr
out
ljmp
jmp
in
div
std
not
sbb
xlat
in
std
loopne
mov
xchg
xchg
ss
lock
out
rolb
lds
call
out
ret
aam
int3
shlb
cmp
cmp
fmuls
xchg
loop
repz
in
into
hlt
into
fxch
lock
add
cmc
leave
flds
rcl
cli
jecxz
hlt
das
xor
loopne
icebp
rcr
jmp
aas
out
jmp
repnz
sti
fdivr
ds
push
fcom
std
mul
clc
mov
leave
std
fst
xchg
mov
fcmovnb
divb
int
fcmovne
shl
cmp
mov
xchg
cld
ljmp
repz
cmp
fcomi
lock
repz
std
jmp
cmp
aaa
loopne
not
sti
fadds
out
xor
in
cmp
out
into
fcmovnu
repnz
in
stc
icebp
hlt
fimull
jecxz
mov
fsubrp
repnz
fucomi
repnz
cmp
sar
cmp
test
fsubrp
sti
cmp
iret
call
into
imul
icebp
aad
in
jmp
icebp
rcl
loopne
roll
mov
rol
lret
rol
icebp
std
leave
cmp
jmp
jmp
lock
orl
lret
in
into
out
leave
cmp
in
iret
aad
lret
fcmovne
fadd
mul
enter
mov
jmp
enter
jmp
rcl
in
int3
shl
test
aam
xlat
or
test
out
into
or
enter
ds
fcmovu
fildl
aam
mov
jecxz
jmp
xchg
mov
aam
cmc
call
cmp
cld
roll
sbb
loop
lret
cmc
out
cmc
fidivl
stc
cmc
xor
cmp
cmp
xorl
loopne
loope
lret
fucomip
fdivrp
loope
xor
ljmp
out
sar
out
roll
loop
jecxz
xchg
xchg
in
jmp
fcmovbe
out
rolb
mov
mov
mov
jmp
ret
into
sarl
rol
rcl
ja
data16
inc
daa
cmpsl
jg
jle
add
xor
stc
jmp
ret
aad
fmul
sbb
fmul
call
faddp
hlt
into
fprem
aaa
in
repz
loopne
test
xor
in
int
orb
sub
in
hlt
into
stc
jmp
loope
cmp
xchg
stc
loope
int
mov
das
lret
rcr
ss
cmpb
sbb
test
xchg
int3
cli
hlt
fldl
aad
leave
aam
std
hlt
xor
xchg
in
in
nop
mov
into
loop
in
fidivl
ror
lock
cli
repnz
clc
mov
std
repnz
int3
lds
jmp
loopne
into
cmpb
clc
ljmp
mov
xchg
loopne
aad
rcr
lock
ljmp
xlat
aas
cli
out
cmp
in
orb
jmp
iret
int
in
cmc
cmp
test
ret
out
clc
aam
out
in
in
nop
hlt
in
xchg
clc
xor
lret
cmp
cli
div
lret
out
shl
cli
faddl
int3
call
into
out
call
shr
repnz
sarb
jecxz
aad
shr
fmuls
out
leave
xchg
loop
std
aad
loope
out
in
out
aam
cmp
loope
loope
ljmp
in
into
ljmp
iret
cmp
fdivs
cmp
into
out
xchg
repnz
roll
out
loope
roll
cli
cmp
in
ss
repnz
rol
add
cmc
int
mov
xor
loopne
clc
xor
lret
loop
out
loopne
fdivrp
in
clc
leave
xchg
orl
shl
fmul
int3
div
fadd
icebp
xor
ds
loopne
lock
in
xchg
add
shl
fdivrl
cmc
clc
cmp
in
test
clc
ret
in
out
cld
leave
loop
aam
in
sub
ss
icebp
out
ds
in
ret
enter
loopne
cld
cld
fiadds
out
xor
repz
rolb
cli
sti
in
rorl
fsub
div
in
out
lret
loopne
loop
cmp
xlat
rol
addl
shl
shll
lret
sti
in
into
cmp
cld
in
adc
mov
push
cld
fsubp
into
lds
xor
out
fst
call
loop
aad
xlat
stc
add
sti
in
loop
mov
fcomi
lock
repz
jecxz
ljmp
xchg
fadd
rolb
fmulp
and
imul
leave
xor
jmp
cmp
cli
leave
mov
xchg
mov
out
xchg
repz
loope
in
xor
shr
aam
cmp
sar
ffreep
cmp
div
cmp
clc
movl
lock
fdivr
ffree
clc
iret
cli
fadd
test
addl
addl
jmp
xor
aaa
rcr
in
not
cmp
test
xchg
repz
aam
leave
icebp
lock
loope
rolb
in
mov
cs
iret
fsubr
bnd
fnstsw
icebp
cmc
sarl
shr
icebp
clc
loope
mov
xlat
sti
out
fsub
xchg
enter
rcl
xor
ds
aad
ret
aam
fld
ret
cld
mov
nop
out
in
xchg
jmp
repz
shr
leave
jmp
xor
lret
jecxz
fstp
repz
clc
mov
mov
fcmovnb
aaa
int
hlt
sarb
sbb
not
xlat
les
into
loopne
jmp
sar
int
enter
out
into
iret
cmp
cli
fst
cli
xchg
xchg
mov
xor
lret
fcomi
enter
aas
dec
aam
sar
xlat
test
enter
dec
repz
into
hlt
ljmp
fnsave
int3
jmp
ret
sub
inc
or
pop
add
add
fmul
aad
movsb
inc
jb
xchg
pusha
scas
push
add
fcomp
stc
test
lock
rcl
out
orb
test
call
not
cmc
out
loopne
test
addl
fsubr
iret
loope
cld
into
xchg
imul
xor
sti
iret
aad
repnz
cmc
ror
ret
out
fcomp
addl
lock
loope
into
lock
in
shlb
in
loope
sar
rol
cmp
in
lret
mov
incl
in
ror
xlat
cmp
aas
enter
in
lock
call
jmp
call
int
in
loope
in
rcl
cmp
sarb
std
fadds
sti
fucomp
aam
in
icebp
aam
in
cmp
div
icebp
fcomp
cmc
neg
out
addl
xchg
in
rcl
lock
out
cmp
out
test
test
call
int
fcmovne
or
rol
ret
xlat
clc
hlt
stc
in
std
clc
cmp
sar
in
fadds
repz
das
loop
iret
cs
lret
loopne
std
loopne
clc
repz
xchg
icebp
out
repnz
ljmp
iret
repz
int
fdivrp
add
in
lret
lret
mov
shl
aaa
aad
xor
fcos
repnz
aad
hlt
xchg
in
lret
mov
int
in
sub
aad
xor
fadds
aas
testb
or
jmp
hlt
out
fld
out
lret
hlt
out
in
stc
into
stc
ret
test
adc
mov
fstp
mov
jmp
repnz
rcl
cld
int3
out
rcl
adc
cmc
cld
xchg
add
cld
jecxz
movl
rcr
ss
out
xor
icebp
rcl
cli
cld
in
std
test
stc
sti
call
loope
leave
in
div
stc
lret
out
loop
repnz
cmp
ret
out
fsub
in
fmul
loopne
mov
jecxz
sarl
shr
sarb
aas
push
jmp
roll
std
lock
shl
out
nop
xor
out
clc
cmp
push
out
lock
icebp
loop
loope
mov
repnz
mov
add
repz
fldpi
repnz
in
stc
shl
in
fdivr
out
not
lret
lret
sbb
mov
into
in
xlat
repnz
out
aas
loopne
cld
out
aas
repnz
out
fcomp
faddp
ret
loop
mov
aad
cmp
cld
xor
incb
out
ret
cld
out
frndint
in
jmp
repz
vpmaxsw
ljmp
cmp
in
addl
call
in
into
repz
loopne
stc
cmp
aad
ret
dec
xlat
test
mov
xchg
in
nop
out
test
leave
into
div
sarb
in
aad
xlat
cmp
orb
jmp
sti
call
ret
neg
enter
fiadds
shl
stc
test
mov
vpsubw
fistl
cmp
out
aaa
lock
int3
cmp
div
aad
stc
fmull
loope
hlt
xchg
lret
out
lret
divl
fld1
fsubr
fcmovnu
fildl
ret
fldpi
fcmovnbe
iret
out
nop
sti
std
xchg
xorb
iret
xor
cmp
sti
jmp
fdivr
jecxz
mov
xchg
lea
out
ret
jmp
iret
cmp
lret
in
repz
xchg
loope
out
hlt
or
into
out
mov
mov
sub
out
in
xor
idivb
lock
mov
in
fsub
fisttpl
shlb
ret
xor
cld
int
fcomp
cli
aad
aam
xor
sti
mov
int3
xchg
aas
ret
sti
imul
call
test
std
aad
and
out
in
fistl
in
in
cmc
cmp
idiv
aaa
out
adc
sarl
test
fdivrs
xchg
mov
xchg
jmp
call
iret
mov
cmp
jne
mov
jmp
ret
into
aam
aad
fst
stc
hlt
stos
xchg
jae
fistps
aas
add
into
iret
std
lock
sti
fldl
stc
xchg
test
rolb
cmp
xor
ss
lret
aad
cmp
ret
cmc
mov
fisttps
aaa
leave
leave
ror
xlat
stc
fdecstp
push
loopne
fcomp
roll
xchg
fimuls
call
repz
fxtract
xchg
addl
lret
lock
div
int3
ss
xor
into
hlt
jecxz
cmc
shr
jmp
fdiv
test
xchg
orl
icebp
jmp
lock
cmc
xlat
out
fcmovnb
ret
mov
or
out
cld
out
cli
fdivrl
aam
xlat
rcr
ret
loopne
test
in
fldl
aaa
shl
cmp
in
fidivrl
lock
ror
test
cld
xlat
fucomip
in
out
enter
nop
das
in
call
divl
jmp
rol
stc
rol
roll
mov
call
mov
xchg
int
ret
out
in
aaa
aas
cmp
fdiv
shl
shl
mov
jecxz
into
jmp
lock
sti
cmc
cli
hlt
int
cli
repnz
xchg
fadd
out
ficoms
mov
icebp
fdivrp
cli
test
loopne
iret
aad
xchg
fimull
sbb
in
mov
xor
ljmp
repz
test
testl
or
loop
xlat
xlat
in
test
cmp
cmp
rcl
cmp
aad
sub
in
cli
loope
lea
fmul
int
xor
cmp
adc
mov
sub
call
aad
aad
call
int
ret
sti
inc
xchg
in
movl
xchg
shll
rcr
in
cmp
add
shl
in
aam
out
cli
les
ror
sub
cmp
out
cmp
rcl
fcmove
fnclex
jecxz
mul
int
int
loop
xchg
das
out
shl
clc
sar
out
lock
hlt
in
xlat
call
cli
jmp
into
fimuls
leave
cs
cld
loopne
icebp
fidivrl
cmp
push
addl
ljmp
shlb
xor
out
test
out
fcmovnbe
fcmove
testl
xchg
xor
aad
enter
int
cmp
cmp
rol
cmp
in
leave
sti
int3
fcmovne
orl
out
into
fcmovbe
shl
clc
rol
addb
out
in
int3
icebp
cli
jmp
xchg
xchg
cmp
xor
divl
cmp
jmp
cmc
rcr
fcmovnu
loop
sti
lock
lret
in
xchg
cs
int3
shl
out
out
ror
aaa
iret
aas
in
vpandn
fdiv
xchg
aad
int3
in
cld
xchg
roll
enter
int3
aaa
cmp
inc
aas
hlt
roll
mov
jmp
ljmp
cmp
lock
fsub
ret
loop
out
cmp
fmuls
in
in
in
aad
ret
cli
shr
fsubrp
fcmovu
aam
roll
xchg
mov
out
ror
jmp
hlt
cmp
rcr
loope
sarb
clc
loope
xchg
fdivrp
iret
iret
int
loop
cli
shl
jmp
out
rolb
fadds
repnz
loope
repz
out
leave
into
rcr
loop
ret
in
repnz
aam
mul
cld
in
jmp
xchg
repnz
cli
aaa
ss
ss
fdivr
ret
jecxz
enter
ljmp
mov
icebp
loop
icebp
shl
cmp
test
aad
cli
decl
iret
xchg
mov
repnz
loopne
leave
sar
leave
iret
out
cld
ds
test
cmc
hlt
adc
sti
call
out
ss
cmp
hlt
ljmp
mov
add
aam
aad
fstp
movsb
ficomps
shr
or
jle
add
stc
aad
fdivrp
cmp
lret
fucomip
addb
xchg
out
rcl
lock
idivb
rcl
xchg
mov
call
aam
ss
xor
adc
into
test
out
jecxz
mov
adc
loopne
iret
lret
fcmovnbe
fucomi
fdivrs
xor
adc
lea
into
repz
xchg
xor
clc
cmp
lds
cli
icebp
icebp
clc
lock
jmp
loop
fxch
cmp
fisttpll
sti
fyl2x
int
clc
xlat
div
ds
loopne
lret
loop
mov
rcl
int3
ror
rorl
sub
cmp
cmc
cmp
xchg
in
and
icebp
mov
fbstp
stc
cmp
cmp
icebp
rolb
in
mov
fadds
div
aad
xor
out
fxch
in
xlat
addb
cmp
leave
icebp
mov
mov
xor
cli
cmp
out
cmp
sti
lret
mov
fmulp
std
icebp
repz
loopne
lret
ret
cmp
int3
jmp
shlb
shl
ffreep
cmp
jecxz
int3
stc
xor
int
ljmp
cli
leave
out
cmp
cmp
std
dec
xchg
aad
mov
and
out
loop
sub
jmp
lret
rcr
loop
cld
roll
test
stc
out
fstl
loop
lock
cld
lret
std
cmc
shr
jecxz
cmc
call
test
leave
xlat
xchg
loope
int
call
xor
iret
cmp
clc
out
fdiv
loope
jecxz
cli
or
jmp
jecxz
icebp
orl
xor
cli
loopne
jmp
repnz
ljmp
leave
jecxz
fdiv
int3
loop
fdivr
shl
das
jmp
ret
ret
mov
fsubr
test
mov
fmull
in
xlat
out
cmp
fcmovnu
aas
int
sar
std
sarl
fisttpll
call
xchg
mov
enter
repz
cli
enter
rcl
sar
loop
xchg
rcr
or
mul
in
xlat
idiv
fstpt
xlat
idiv
fsub
repz
incl
mov
filds
hlt
out
test
ds
sar
repz
fsub
clc
stc
jmp
mov
xchg
aad
out
call
shl
call
cmp
xchg
xchg
loop
repz
rol
int3
cmp
cld
ds
aas
int3
fidivrs
mov
out
fneni(8087
fisttps
idiv
fprem1
test
into
jmp
repz
inc
fisttpl
fst
in
cmc
out
mov
fsubr
out
leave
aam
in
loopne
lock
into
shl
call
test
in
out
out
out
sub
xor
xor
leave
lock
lock
aad
out
aaa
clc
sti
xchg
mov
out
sti
hlt
jmp
hlt
aaa
aad
out
std
rcl
push
jecxz
mov
cmp
in
xlat
leave
cli
into
call
lock
in
cmc
in
fildl
out
sar
cld
ror
lea
cmc
cmc
fucomi
xlat
neg
cmp
out
fsub
in
std
leave
sbb
enter
leave
out
cld
call
hlt
in
iret
cmp
ljmp
out
test
cli
imul
out
in
fneni(8087
fiadds
into
repnz
stc
in
in
jmp
fcmovnu
icebp
jecxz
hlt
aam
repz
in
clc
jmp
into
in
fnstenv
shl
std
loope
test
shl
fucomip
loope
fsubp
mov
lds
hlt
jecxz
aam
imul
lret
clc
cmc
xchg
mov
repnz
out
sti
xlat
nop
adc
or
call
xor
call
into
jecxz
rcl
shl
call
out
frstpm(287
jecxz
jmp
aam
imul
cmp
add
add
lret
enter
int
cltd
movsb
imul
mov
adc
aas
add
idiv
sti
clc
sti
testl
mov
iret
xor
leave
cmp
ffreep
cmc
sar
loopne
cli
repnz
fsub
mov
xchg
lock
xor
enter
lret
jecxz
clc
loope
hlt
stc
cli
add
stc
fpatan
xchg
lret
nop
out
jmp
ss
shr
addl
loope
mov
sar
in
xchg
mov
xor
cmp
xlat
aas
ss
in
ret
cmp
cli
frndint
sti
xchg
loope
leave
loop
test
out
out
xlat
std
int3
out
cmp
xlat
out
hlt
ljmp
iret
enter
xchg
out
lock
cmp
aaa
hlt
incl
test
xchg
hlt
in
mov
fmulp
rcl
int3
jmp
out
fadd
cmp
lret
cmp
cmpl
fsub
ffree
mov
test
mov
repnz
repnz
fidivl
lret
fiadds
out
jmp
out
test
jmp
xchg
int3
enter
aam
loope
aad
sar
and
ret
mov
fsubp
sub
test
cmc
les
xor
cmp
fidivrl
cmp
fsub
call
jmp
fimuls
cs
ljmp
fcmovbe
fidivs
rolb
ret
fstp
fucom
out
loope
hlt
xchg
jecxz
in
cli
in
fnsave
iret
roll
test
loopne
in
int3
xchg
in
cmc
fidivrl
xor
ljmp
in
xlat
in
test
int3
in
fisttpl
icebp
test
icebp
das
idivb
icebp
iret
fstp
call
cld
cli
cmp
rolb
add
in
sarb
in
call
fcmovnbe
rol
cmp
int
nop
out
xchg
adc
jmp
xor
ret
cmp
clc
fisttpll
sti
xchg
loopne
iret
xchg
imul
divl
xlat
shr
into
hlt
sti
icebp
call
out
lret
ffreep
out
iret
in
xchg
std
shl
das
jmp
int3
out
leave
aas
fstpt
test
out
xchg
hlt
shr
sub
out
shlb
cmp
jecxz
fdivr
lret
int3
test
xchg
test
shl
std
out
int3
cmp
repz
test
std
fdiv
and
in
cmc
test
xchg
out
int
iret
vpsadbw
iret
jmp
cld
mul
cmp
mov
inc
fsub
mov
xchg
divb
ljmp
fdivp
into
int3
cmp
shl
test
test
xchg
xchg
repz
hlt
lock
xor
cmp
cmp
int
ret
fildl
and
mov
xchg
jmp
in
in
repz
ljmp
jecxz
sarl
ljmp
leave
iret
out
rcl
hlt
out
ljmp
repnz
repz
and
fadd
xlat
fdivrp
int3
out
out
repnz
int3
sarb
sti
aas
shl
rolb
xlat
cld
cld
out
xlat
ret
xchg
loope
shr
xor
fucomi
leave
into
out
repnz
loopne
fcmovbe
loop
and
xlat
mov
fstp
lock
loop
aam
in
lret
shl
rcl
hlt
hlt
fdivr
cmp
loope
aam
roll
aad
lret
fsubr
adc
aaa
loop
ret
leave
jmp
rcr
ret
aam
ret
sti
in
in
icebp
into
out
hlt
mov
call
int
in
int3
cld
sar
repz
not
repz
aad
enter
or
xchg
shl
aad
aam
xlat
cmp
fldz
sub
fdiv
rorb
mov
fsubrp
out
in
iret
lret
aaa
enter
jmp
loope
xlat
testl
shr
call
out
leave
stc
sti
iret
or
rolb
fld1
sti
int3
into
out
fadds
test
fdivs
ret
cld
fdivrs
loop
jmp
iret
ror
fcmovnu
out
mov
insb
adc
jle
add
aam
mov
fiaddl
shr
out
rol
not
xlat
cmp
into
aad
fidivrl
fstp
test
add
lock
xchg
in
loopne
in
icebp
sar
clc
cmp
jmp
xlat
cmc
stc
enter
fxch
jmp
leave
adcl
jmp
cmp
fyl2xp1
fcmovnb
test
cmc
out
clc
sub
xchg
xor
mov
ljmp
rcr
sbb
cli
fstp
std
out
idiv
lret
out
out
out
ds
xlat
std
fdivrp
mov
loopne
fiadds
fsub
aam
ljmp
incb
cmp
and
mov
enter
fsubp
test
shr
in
fidivrs
cmpb
add
stc
ljmp
jmp
ljmp
cmc
cld
adc
aad
fld
fmulp
cmp
test
and
xor
call
loopne
cmp
into
and
fadd
in
xchg
in
sti
ljmp
xor
cmc
sar
clc
xor
cmp
leave
mov
xbegin
lock
out
xor
jmp
test
ret
int
int3
std
fcmovnu
xchg
roll
xor
std
fidivrl
clc
idiv
fcmovu
mov
out
mov
sbb
jecxz
testb
enter
into
xlat
out
dec
aaa
addb
lret
test
loopne
xor
iret
ss
cmp
cmp
int3
cmp
test
jecxz
int3
int
sub
rorb
leave
lret
cld
jmp
in
in
fucom
fsubr
vshufps
flds
xchg
loopne
das
sti
sti
repnz
fdiv
xlat
int3
xor
jmp
cmc
sub
in
xchg
out
cld
aad
clc
jmp
into
ljmp
fcmovbe
std
xchg
int
mov
xchg
xor
xor
cmp
icebp
fcom
imul
cli
clc
fdiv
cmp
lret
popl
cmc
jmp
out
cmp
fcomip
lock
mov
orb
cs
aad
shr
aaa
aam
aas
out
roll
repz
lds
shr
loope
xor
lock
lret
clc
xor
ror
cmp
cmp
hlt
mov
lds
int3
test
sub
ret
in
int3
int
fadd
xor
cmp
call
out
stc
xchg
mov
loope
in
rcr
jmp
cs
sti
cld
fstpt
loopne
lret
clc
cmp
mov
stc
lret
clc
out
xchg
int
icebp
call
in
out
iret
das
jmp
loopne
iret
sub
mov
std
cld
fucom
iret
nop
and
adc
jmp
into
jmp
sub
xor
fyl2xp1
rol
jecxz
jecxz
xchg
ljmp
stc
cmp
ror
cli
hlt
les
shl
cmp
iret
ret
aad
lret
imul
stc
loop
cld
cli
neg
bnd
adc
rclb
sar
sar
fcmove
sar
cli
cmp
fadds
out
fucom
addl
cmp
jmp
div
lds
xchg
cli
fcmovnu
test
fimull
out
cmc
repz
rcl
cmp
lret
sar
sar
aas
cli
xor
out
mov
mov
std
xchg
enter
sarl
repz
out
fcmovnb
fucom
inc
cmp
mov
jmp
icebp
test
hlt
xchg
in
aam
cmp
cmp
out
in
xchg
out
mov
ljmp
lock
std
xlat
into
repnz
lock
loopne
or
jecxz
fsubr
rolb
stc
repnz
aaa
rcl
out
stc
loopne
std
loop
cmp
je
movl
jmp
int3
into
fmul
fsubrl
in
jecxz
push
mov
adc
add
cli
adc
lret
lock
cmc
xchg
shll
fcom
lret
sti
jmp
aam
ret
fistpll
aad
mov
fld
test
in
nop
icebp
mov
loopne
in
sarb
aaa
in
cmp
cmp
int3
out
xchg
fildl
cld
lret
mov
aam
jmp
aad
in
fcom
xor
xor
jmp
mov
loop
lock
icebp
into
loope
ret
lret
xor
lret
cmp
cmp
iret
in
iret
ret
rolb
xchg
iret
out
and
xchg
mov
ds
repnz
cli
ss
aas
icebp
sbb
ret
xchg
popl
sar
fidivrl
xor
sti
out
in
icebp
testl
in
out
in
aam
int3
idivl
repnz
icebp
aas
cli
sti
fcmovnb
orl
icebp
loop
jecxz
loopne
cmp
cs
ljmp
cmp
in
aam
jecxz
in
std
enter
call
div
sar
fldpi
rcr
shl
cmp
xchg
out
mov
in
in
ret
test
shr
das
stc
xlat
rcr
fdivr
shr
cmp
aas
cmpb
test
decb
fdivs
out
xor
into
int
sar
fcmovbe
sbb
iret
lret
xchg
ss
neg
cli
rcl
cmp
fcmovnb
loopne
call
mov
cmp
test
xchg
xor
repnz
aam
int3
fld
les
fsubr
in
stc
iret
in
filds
repnz
fscale
xlat
hlt
jecxz
jecxz
cmp
mov
sar
faddp
mov
loope
stc
leave
aam
into
aaa
fdiv
fsubp
loop
shl
orb
loop
roll
loope
fcomp
call
fdiv
roll
mov
fucomp
out
out
int
sar
rcl
int3
repnz
fnstcw
aaa
aad
fmul
sar
leave
repnz
lret
lret
jmp
stc
in
into
rcl
das
xor
hlt
sti
loope
xor
in
idiv
sti
std
mov
jmp
iret
int
ret
fyl2xp1
lock
cmp
xlat
aam
out
rol
in
add
std
cld
enter
orl
lret
neg
jmp
cmp
jecxz
fildl
into
adcl
leave
out
fnop
out
out
rol
fsubr
repnz
mov
in
clc
enter
in
out
enter
xor
lret
int
fcmovnu
sar
stc
ret
xlat
jmp
and
mov
in
cs
xlat
int
ret
cld
orl
xchg
shl
fdivs
imul
rcr
lret
rcr
test
sti
repz
leave
cmc
imul
lock
rorb
xor
ror
sar
ljmp
ds
aam
div
in
mov
out
leave
int
stc
repz
into
adc
cld
fdiv
stc
rcl
test
test
fcomip
lret
int3
loop
int3
std
into
cmp
hlt
mov
sti
in
fucomp
xchg
jecxz
jmp
xor
idiv
int
in
hlt
aas
hlt
clc
stc
fst
std
out
cld
fcomip
mov
fildll
ror
fdivr
cmp
cmp
rol
ret
mov
ret
jmp
out
test
std
icebp
std
lea
clc
out
shlb
int
std
add
mov
test
mov
ljmp
cld
int3
cmp
xor
clc
mov
loope
filds
xchg
mov
sar
in
call
out
cmc
ds
xabort
fdivr
lock
fstl
ret
in
cmp
cli
call
hlt
in
icebp
test
enter
out
loopne
int
int3
test
jmp
int3
sti
in
xlat
std
fnstsw
stc
repnz
cld
testb
add
ret
ror
aam
mov
push
mov
sbb
jle
shl
mul
fucom
mov
lret
hlt
hlt
aad
lret
cmp
lock
repnz
cmc
cmp
adc
ds
rorb
std
sub
shl
in
sti
idiv
loop
lock
std
rolb
xchg
out
out
mov
cmc
hlt
sti
cmp
repnz
sar
out
aad
lea
xchg
xorl
int
icebp
out
fdivr
jmp
loope
out
vpmulhw
incl
fiaddl
mov
shl
jmp
out
clc
xor
into
lock
repz
in
lret
addb
int
leave
jmp
xor
out
dec
test
cli
shl
ret
loop
imul
jmp
rorb
ss
xor
fcomip
imul
cmp
loope
xchg
jecxz
mov
xlat
loope
mov
fsubrp
xchg
xlat
sub
fcmovnu
std
rcr
iret
repz
sub
sar
rcl
mov
sub
xor
rcl
ror
hlt
lock
dec
out
in
loope
in
test
xchg
xchg
loope
in
out
icebp
call
jmp
jmp
ds
in
loop
in
sti
in
nop
std
nop
ljmp
cld
fdivr
clc
cli
fucomi
cmc
fsubrp
ret
in
leave
std
aam
sub
leave
out
enter
repnz
int
cmp
incl
mov
int
into
into
enter
lock
xor
fidivrl
sar
loop
jecxz
iret
fdivr
rcr
mov
jmp
rcll
out
aaa
fcmovnu
f2xm1
std
xor
fdecstp
testb
mov
xchg
xorl
test
int
shl
std
out
xchg
ret
jmp
fcomp
std
mov
lock
leave
repz
cmc
aam
cmp
cld
cmp
loope
jmp
in
sti
fcmovne
xchg
test
lret
xor
shl
cmp
rol
xlat
neg
call
out
fmull
out
shl
aam
leave
cmp
cmp
or
xchg
jmp
leave
std
rcr
test
repnz
ljmp
rcl
repz
jmp
and
loopne
sub
imul
ljmp
div
sti
shl
addl
iret
iret
mov
xchg
loope
sarb
cmp
cmp
in
fucomp
aad
rol
fcmovnu
mov
cmc
xlat
cld
xchg
mov
cmp
rol
xlat
xor
xor
cmp
cli
test
lea
in
lock
iret
xor
aas
int
cmp
test
les
cld
loopne
cld
sar
repnz
jecxz
sub
lock
shl
into
jmp
cmp
loopne
repz
jmp
in
fcmovu
fdivr
out
and
test
dec
stc
aas
shl
roll
fmull
jmp
mov
int3
out
in
cld
sarb
fnstsw
into
out
sti
loop
cmp
jmp
sti
into
int
ret
out
sti
out
xor
lret
adc
repz
cli
fdivrp
cli
leave
jecxz
rol
icebp
in
fcmovnb
fdivrs
xor
fstp
sar
ret
xor
ret
fcmovne
ret
les
loop
leave
cld
shl
neg
lret
repnz
in
test
in
jecxz
xchg
xchg
enter
mov
ret
shr
cmp
fdivrl
repnz
loop
mov
rcl
sti
fmul
mov
mov
sub
repz
lock
in
stc
cld
std
testl
int3
fists
xor
fcmovb
in
jmp
sti
aas
repnz
shr
fdivrp
rolb
cmc
fdivr
fmulp
lret
xchg
test
stc
lock
aad
shr
aad
aad
stc
clc
icebp
shl
mov
clc
fisttps
cmc
ftst
aaa
int3
ss
aad
fmul
cli
lock
rorb
jmp
xlat
lret
aad
aad
int
jle
and
scas
and
aas
add
hlt
stc
xchg
idiv
test
xchg
shr
fxch
repz
fdivrs
rcr
ret
ret
stc
shr
aam
fxch
loop
int3
ljmp
cli
repnz
icebp
in
roll
testb
out
out
rorl
clc
not
idiv
or
repnz
ret
test
mov
and
xchg
out
into
cmp
fnsave
aad
fcom
cmp
out
mov
mov
xchg
repnz
repz
subb
xor
out
xlat
fnstenv
ret
fistpll
xchg
cld
fst
loop
adcb
repz
out
rcr
cmc
jecxz
repz
test
ljmp
stc
repnz
loopne
vshufps
fstpt
into
cli
out
roll
xchg
jmp
fsubrp
shll
xor
loopne
cmp
xor
clc
fdivr
mov
adcl
lock
fyl2x
cmp
cmp
leave
xlat
ret
rol
call
std
mov
orl
call
fcomp
testb
les
in
rorb
aaa
in
xor
fistpll
fcmovnbe
cmc
fadd
loop
mov
rcl
mov
fists
clc
icebp
xlat
out
jmp
jmp
repnz
adc
sti
in
flds
xchg
shl
lret
xlat
xor
xor
fst
idiv
clc
stc
lds
call
xlat
out
cli
xor
sarl
rorl
cli
and
jecxz
xchg
fbstp
aad
aam
repz
sar
inc
in
test
jmp
lret
dec
call
ss
idivl
in
cmc
cmp
ffreep
sti
call
xlat
decb
xor
fdivs
sar
call
rcr
ret
mov
out
cld
dec
jmp
aad
xor
rcl
test
jecxz
fnsetpm(287
sar
popl
lock
sub
int3
xor
cmp
iret
int
loopne
ret
fsub
xor
enter
test
in
inc
ret
cli
aaa
iret
aad
rcl
into
int
ret
cmp
dec
enter
sub
mov
out
test
out
cmp
aas
icebp
loopne
fnsave
in
clc
iret
out
call
cli
test
nop
loop
rcl
out
fcom
out
lret
cmp
cli
xlat
jmp
cli
clc
jecxz
jmp
call
repz
clc
stc
fcom
cmp
xlat
in
mov
shl
loop
call
sti
clc
sti
hlt
jmp
cld
in
fst
out
cld
hlt
mov
out
sarl
cmp
aam
cmp
cmp
test
out
mov
loopne
fst
in
jmp
sarl
aam
call
sti
iret
clc
sar
clc
aas
fadds
loopne
sbb
into
dec
ret
rcr
in
int
hlt
fmulp
loopne
incl
cmc
jmp
clc
xchg
decb
loop
aaa
ret
aad
repz
shr
xor
mul
cli
xchg
loope
rolb
out
xor
enter
hlt
cld
and
in
in
rcr
in
in
sti
sti
mov
ljmp
enter
ljmp
out
rcl
mov
mov
rcll
aas
xor
xor
rcl
icebp
int3
loop
hlt
cld
hlt
cmp
mov
sbb
cmc
fldl
clc
ljmp
sub
aam
fmuls
call
mov
lret
ret
cs
fxch
in
ljmp
fdivr
loope
ljmp
repnz
xchg
in
cmc
hlt
xor
ss
cmp
cmp
aad
iret
testl
mov
xor
lea
mov
jmp
lret
rcr
aad
fsubr
xor
mov
jg
aas
add
shl
sub
test
ljmp
ljmp
xor
rcr
fcmovnb
aas
ret
in
mov
call
in
into
std
xlat
div
cld
repz
cld
ror
not
fcmovnu
jecxz
in
in
lret
out
xor
sti
into
out
xor
sti
aam
std
out
xlat
out
cmc
leave
jmp
loop
xchg
icebp
loopne
leave
icebp
xchg
int3
int3
in
sar
int3
cmp
fadds
loopne
cmc
cmp
jmp
xchg
leave
decb
fcmovb
cmc
cmc
lock
loope
jmp
in
filds
ftst
test
std
lret
jecxz
mov
in
sti
xor
iret
xlat
iret
cli
aad
out
in
hlt
lret
aam
cli
lret
leave
mov
into
cmp
ret
rol
std
into
iret
shl
fcmovnu
filds
out
test
jecxz
jmp
int3
fstp
cld
cli
xlat
aas
out
icebp
bnd
jmp
iret
jmp
call
rcl
iret
aas
cld
cld
fcmovb
incb
repnz
movb
icebp
int
xor
in
cmp
jmp
hlt
ret
repnz
mov
loop
mov
sub
in
aam
in
leave
cmp
rcl
ljmp
rolb
fmul
hlt
int3
in
loopne
xlat
fsqrt
stc
cmp
jmp
ss
idiv
loop
sti
cli
idiv
jmp
in
mov
ljmp
jmp
icebp
testl
enter
jmp
hlt
in
add
in
int
out
xor
loopne
adc
not
into
loope
loop
loopne
jmp
aaa
cmp
icebp
cmp
ret
stc
fsqrt
orb
int
out
hlt
cmp
ljmp
or
cmp
out
test
xchg
sar
mov
loop
int
out
iret
sar
out
std
fnstsw
std
sti
cmc
ds
lock
aaa
aad
lret
repz
ljmp
loope
stc
xchg
fsubrp
mov
in
add
in
fcmovne
imul
cmp
xor
ret
ret
ret
lret
stc
out
mov
lock
in
mov
aas
into
out
iret
enter
jmp
test
loopne
out
xchg
call
lret
xchg
loope
shll
xor
aad
enter
ljmp
stc
aam
loope
test
orl
call
int
stc
lock
jecxz
jecxz
mov
loope
in
xchg
repnz
mov
loope
imulb
shl
jmp
cmp
ret
out
cmp
in
inc
loopne
out
out
cmc
in
into
not
jmp
into
int3
out
fucomip
test
aam
jecxz
testl
lret
aad
int3
rol
hlt
cmp
jmp
rol
enter
mov
shl
jmp
aaa
xlat
cmp
into
ror
xor
loop
loopne
fcmove
xlat
orb
iret
loop
les
hlt
int
xor
fcomp
jecxz
cmp
repnz
loopne
fsub
inc
fisttpl
ljmp
in
into
fdivp
test
std
cli
rcl
mov
fadd
jmp
jmp
ljmp
out
lock
ds
fdiv
orb
xchg
jecxz
aad
sub
fidivrl
out
shl
iret
fcmovnu
loop
mov
jmp
lock
repz
rcr
aam
cmp
mov
adc
in
idiv
cmc
xchg
leave
in
enter
fdivr
iret
xchg
and
ljmp
ljmp
ret
cli
hlt
lret
xchg
filds
ljmp
shl
aad
int
cmp
cmp
out
out
int3
mov
in
std
xchg
loopne
lock
cmp
cmp
cli
xlat
aas
fptan
loop
inc
or
jmp
jmp
ret
iret
enter
int
xchg
cmpsb
push
ja
or
xor
jg
aas
add
in
cmp
fdivp
xchg
aad
rcl
out
iret
jmp
icebp
enter
cld
xchg
std
fucomi
fimull
in
ror
aad
out
int3
fcmovu
aaa
ljmp
addl
shl
xchg
out
in
fidivl
ret
stc
cmp
cmc
cmp
xchg
out
fndisi(8087
in
xchg
in
std
in
std
mov
out
out
jmp
call
loope
iret
stc
cld
mov
fcmovnbe
in
jmp
clc
fcmove
ss
adc
shr
rorl
mov
iret
test
rol
shr
enter
cmp
iret
clc
test
stc
fnstcw
out
jmp
xchg
call
xor
cmp
ljmp
shl
cmc
cmc
and
call
lret
xor
out
enter
lock
sarb
cld
fnstcw
lds
mov
loope
testb
xor
std
out
lock
lock
repz
test
cmp
mov
out
incl
cld
fcmovbe
cli
leave
std
sbb
loopne
lock
cmp
cli
ljmp
jmp
into
call
out
in
ds
cmp
flds
sti
movb
in
xchg
out
repnz
lock
jecxz
clc
cmp
cmp
ror
repz
iret
ret
ret
add
loope
fsubr
xchg
aam
ret
repz
cmc
cmc
into
cmp
in
cli
xlat
fisttpll
out
nop
xchg
in
cs
xlat
lret
fxtract
ds
dec
jmp
test
addb
ror
loope
xlat
rol
ret
xor
enter
incb
in
cld
cmp
enter
int3
xchg
xchg
test
clc
icebp
fucomi
sti
sbb
out
fcomi
hlt
cld
ret
inc
loope
fmul
out
dec
sub
out
out
into
shl
repz
lret
out
lock
fdivp
orb
int3
ror
stc
fneni(8087
int
fistpll
test
aas
stc
aam
cli
out
movb
jecxz
lock
fsubr
repz
leave
fdivrs
repz
out
xor
icebp
test
std
ss
ds
std
in
addb
leave
mov
test
leave
rcl
out
out
mul
icebp
les
fucomi
aam
mov
aam
xchg
out
lret
fcomp
fidivrl
cmc
ljmp
out
lret
fcomi
lret
loop
mov
jmp
ret
in
neg
in
fucomp
fld
sbb
mov
jmp
mov
int
rcr
fsubrl
out
fdivrs
repz
aad
mov
xchg
aad
ljmp
int3
mov
out
in
ret
cmc
repz
out
sti
lret
xlat
clc
cld
addb
xlat
int3
ljmp
xor
in
cmp
lret
fnstcw
test
out
lret
fcmove
mov
loopne
ljmp
out
repz
fadd
sarb
into
std
repz
fmul
cld
fdivrp
loope
cld
icebp
out
call
in
shl
aas
fistpll
hlt
not
stc
xlat
lock
sti
loope
enter
or
ljmp
clc
iret
fucomi
sar
incl
aam
mov
fimuls
icebp
call
aam
int3
shr
ljmp
sar
leave
fcomp
into
cli
mov
aam
jmp
xor
fdivr
mov
repnz
hlt
adc
lock
repz
sarb
out
shr
cmp
aad
out
fcmovnb
ret
mov
ret
fucom
or
out
leave
xor
fdiv
loope
shl
in
std
loop
lret
fisttpl
xchg
cmc
loope
fcmovu
les
jmp
in
int
mul
mov
test
mov
jmp
lret
fst
int
test
cmp
bnd
aas
add
orb
nop
xchg
out
das
shl
lret
shr
ss
ljmp
test
cmp
fisttps
decb
xor
les
ds
lock
repnz
inc
out
ljmp
jecxz
ror
iret
test
clc
in
loope
jmp
sti
xchg
xchg
in
int
loop
xchg
out
loop
iret
in
das
ss
aaa
fmul
xlat
out
les
orl
shl
out
xor
xor
jmp
cli
jmp
into
in
fdivrl
out
xchg
mov
repnz
in
ljmp
aad
repz
out
aam
test
incl
aam
cs
cmc
lret
cli
sarl
cmp
fprem
clc
cld
fcmovne
std
xlat
std
mov
mov
out
in
mov
lock
clc
jmp
cld
in
fsubrp
aam
ret
not
cmp
fmuls
xchg
lock
out
hlt
ss
out
fxch
cmp
ret
repz
and
xchg
loopne
mov
out
cmp
repz
stc
out
out
ret
iret
icebp
repz
fldz
jmp
xchg
mov
test
lret
ljmp
in
ret
out
mov
test
enter
xchg
cmc
shr
fcmovne
idivb
call
test
in
roll
out
int3
push
xchg
sub
in
iret
aam
int3
cld
xlat
into
roll
out
cli
lds
repz
loopne
ljmp
ljmp
lock
iret
xchg
repnz
leave
in
lret
fadds
fldl2e
faddl
icebp
repnz
lret
out
imul
out
sti
cmp
cmp
and
fsubr
fcmovnb
aam
xchg
loope
repz
out
clc
loope
int
cmp
cld
rcr
sti
cld
rol
fcomi
jmp
mul
mov
fadds
out
nop
xor
sar
cmp
jmp
int3
shr
hlt
int3
clc
loop
aam
out
mov
out
iret
leave
mov
jmp
loop
int3
sar
in
repz
fistpll
stc
test
aas
aas
in
sbb
sar
ljmp
loopne
cmp
cmp
xlat
ror
lock
xchg
rorb
call
mov
sub
int
cmc
int3
aad
call
aad
sarl
fld
mov
into
int3
iret
rorl
fdivs
xor
out
jmp
icebp
fxch
sti
repnz
clc
cmp
fimull
xor
ret
enter
lret
shl
aas
fdivrp
std
cmp
ljmp
fsubp
ljmp
ljmp
cli
shl
in
loope,pt
fcmovnbe
neg
out
mov
in
ljmp
aad
hlt
cmp
aad
in
aam
sti
test
xchg
loopne
into
fcomip
shl
xlat
fcmovnbe
shl
repnz
lret
fiadds
fildl
mov
shr
out
in
in
fstp
repnz
loopne
jecxz
cmp
icebp
mov
out
loopne
in
xchg
lock
rorb
xor
in
std
cld
lret
loope
lock
cmp
out
ljmp
loope
out
out
call
das
jmp
into
jmp
out
roll
cld
movb
mov
aad
int3
sub
cmp
loopne
repz
div
cmc
ret
aas
mov
ljmp
stc
cmp
sti
cld
clc
dec
fiaddl
cld
in
cli
mov
icebp
in
clc
repz
cmp
repnz
rcr
out
lock
cld
int3
test
xchg
xor
hlt
icebp
stc
clc
fmul
aad
jmp
cmp
loopne,pt
mov
not
fucomi
mov
fucomp
aad
repnz
sub
out
lret
ffree
ror
inc
aas
leave
enter
mov
pop
leave
ret
push
mov
push
andl
mov
inc
mov
cmpl
jne
push
push
call
cmpl
jb
push
adc
jmp
xlat
ffree
xor
pop
ljmp
jle
add
enter
nop
out
in
fisttpll
lret
lock
repnz
stc
aaa
cmp
call
in
in
icebp
test
xchg
iret
out
call
repnz
cmp
cmp
jecxz
mov
repnz
sub
rorl
into
cmp
stc
aaa
aam
cmp
fmuls
stc
cld
xchg
ljmp
lock
cmp
lock
test
frstpm(287
cld
fsubp
in
rorl
aad
xor
cmp
repnz
fistpll
testl
sti
call
lret
addl
in
hlt
cmp
iret
call
aas
cld
shl
jmp
jecxz
call
out
shl
sarb
xor
cmp
cmp
xlat
sar
rol
stc
fidivrs
lea
mov
fucomip
stc
xlat
lret
cmc
cmp
dec
jmp
ret
loope
fcmovu
testb
out
xchg
jecxz
out
shll
cmp
int3
loope
cmp
fildl
loopne
ret
test
mov
in
ret
cmp
fdivrs
fcmovnu
fcmovnbe
int3
lock
loope
out
in
sbb
sub
shrb
icebp
cmp
in
cmp
cmp
fscale
sbb
rol
idiv
std
dec
rcl
rorl
in
sarl
xlat
into
leave
fdivs
lock
test
fdivp
cli
loope
fsub
xchg
mov
test
jmp
int3
aad
div
lret
out
lret
ret
std
loope
xchg
hlt
cld
into
nop
call
fcom
int
aad
into
ljmp
test
repnz
cmp
xchg
in
int
in
or
shl
cli
clc
stc
lock
cmp
hlt
bnd
call
or
out
in
xchg
fsubrp
jmp
xor
clc
int
out
fdiv
add
aad
in
xlat
incl
hlt
ror
lret
xor
cmp
fxtract
std
std
rolb
clc
cmc
ror
in
lret
nop
xchg
addb
cmp
out
cmp
iret
fimuls
fxch
fmul
call
shl
jmp
sub
test
jmp
loopne
nop
dec
orl
out
cmp
cli
stc
in
in
jecxz
out
jecxz
decb
fisttps
jecxz
cld
xor
jmp
fcmovnb
fxch
stc
ret
in
jmp
int
xchg
fsub
hlt
loopne
stc
cld
test
repnz
cli
lock
test
cmp
cmp
sbb
jecxz
in
hlt
aad
cmp
ret
cld
out
mov
cmp
cmp
not
clc
out
out
xchg
cld
fnstsw
mov
sti
icebp
adc
aaa
fptan
lock
clc
std
xlat
ret
out
leave
fcmovu
out
adcl
xor
fsin
int
aaa
sar
in
sbb
stc
mov
xchg
addl
xor
out
cmp
lret
cli
cmp
aad
shl
les
add
into
iret
aam
lret
aam
std
sti
out
rcl
cmp
aad
faddl
jmp
in
addb
repz
lret
out
fmul
xor
int
repz
cmp
fscale
dec
out
cli
test
mov
xlat
in
aaa
shr
xlat
out
sti
cmp
loopne
idiv
and
test
loop
loope
jmp
int
aam
fldl2e
ss
sbb
icebp
aad
fdiv
jecxz
jmp
int
add
xor
aaa
std
neg
fucom
loop
test
fstp
test
roll
shr
in
xor
fdiv
cld
idiv
test
ret
out
decb
adcb
out
int3
cmp
in
repz
adc
or
in
stc
in
int
rol
neg
xor
loope
imul
int3
out
lock
lock
aam
shl
mov
xchg
ljmp
int
in
int3
out
jmp
out
rol
xlat
icebp
movb
call
rcl
enter
fyl2xp1
fdivrp
ds
cli
iret
jecxz
fdivr
les
fcmovu
xchg
shr
shl
cmc
icebp
cmp
inc
clc
and
mov
leave
add
add
rol
rol
or
push
aaa
or
ss
jg
scas
add
out
ljmp
shl
repnz
test
fucomp
std
in
not
enter
sarl
sar
aam
jmp
ret
and
mov
std
mov
test
out
clc
lret
rcr
in
mul
rcl
cmp
out
lret
rclb
iret
repnz
fldz
lret
sar
fcmovu
out
jmp
cld
sar
out
out
into
clc
aad
out
cmp
cmp
out
loope
orb
enter
rol
aaa
xor
cli
aas
aad
fstp
into
shl
fdivp
icebp
loope
loope
lea
rcr
hlt
cmc
int
ds
xlat
xlat
sar
aas
addb
xchg
repnz
cld
in
fidivs
repz
shl
cmp
clc
or
fdivp
aad
fld1
ret
shl
aad
jecxz
int3
popl
xor
clc
ss
xor
loopne
repz
ret
fld
lret
loopne
stc
test
int3
cld
mov
jecxz
call
cmp
sbb
jmp
out
fst
test
in
sti
mov
rcr
out
xchg
into
test
int3
fcmovnu
cmp
test
aaa
xor
xlat
rorb
shr
out
xor
xlat
repz
loopne
cmc
test
cmp
test
xlat
xchg
icebp
rorb
fnstcw
out
cmp
lock
in
loope
testl
clc
call
out
or
shr
cmc
lret
xor
fsubr
repnz
test
ds
fldl
clc
loopne
out
jmp
cmc
out
in
cmp
out
lret
clc
loopne
repz
in
test
test
xchg
xchg
loope
repnz
cmp
ljmp
aad
loope
lret
test
repz
vpcomb
int
lret
jmp
out
fadd
cmp
loope
jmp
std
mov
jecxz
shr
xbegin
ljmp
ror
ret
neg
sbb
mov
cli
leave
cmp
lret
aam
cmp
xchg
cld
ljmp
shr
int
cmc
loope
shlb
shr
fidivrl
repz
xchg
mov
xchg
mov
xchg
in
lock
in
call
xor
xorb
cli
idivb
in
fmul
fmuls
in
adc
sar
cmp
icebp
lock
sarb
rcl
repnz
imul
in
jmp
mov
loop
fnstenv
in
ljmp
int
iret
repz
neg
shl
aad
test
jecxz
out
aaa
aad
xor
ror
iret
clc
loope
icebp
ds
cmp
repz
loopne
fmul
ret
loopne
enter
fucomp
ljmp
iret
out
fsubr
push
addb
jmp
mov
xchg
mov
cmc
repnz
fldlg2
hlt
aas
ret
ljmp
loope
sub
lock
jmp
cmc
stc
roll
repz
out
std
mul
ret
in
cmc
xchg
rol
repnz
xor
out
out
roll
sar
xchg
call
int
repz
ror
in
enter
clc
test
out
clc
xchg
out
fcmovnb
xchg
nop
icebp
xchg
in
hlt
cmp
cmp
lret
idiv
cmp
fdiv
aad
fiadds
ror
xchg
repnz
iret
jmp
xor
fsubp
in
cli
in
stc
aad
sub
fucomi
mov
orb
clc
aad
dec
hlt
xlat
fdivrs
frndint
addb
out
ljmp
aad
out
in
hlt
aaa
clc
jmp
ret
or
roll
fcmovnb
jecxz
mov
mov
out
xor
rcr
xlat
faddp
rcr
cld
loope
ljmp
loop
xchg
xlat
out
hlt
call
fcmovb
aas
fld
enter
stc
mov
cld
shr
fucomp
mul
int
sarb
lock
cmp
shl
jmp
cmp
aad
jmp
nop
aam
xchg
das
aam
out
hlt
in
iret
in
cmp
xor
adc
fsubr
leave
cli
mov
xchg
icebp
test
int
enter
cmp
test
repz
decl
inc
cld
daa
test
add
ror
fxch
shll
or
inc
mov
jle
add
loopne
inc
nop
icebp
test
jmp
cmp
lock
cmc
aaa
int3
in
or
loopne
sti
sar
std
fcmovu
int3
lret
test
rcll
in
imul
xlat
aas
repnz
loop
fst
xlat
incl
lret
xchg
xacquire
fcmovbe
xlat
fcmovbe
rcl
into
iret
into
cmp
mov
in
test
xlat
jmp
xlat
idivl
not
cmc
fcmovnu
cmp
cmc
mov
out
ffreep
in
shr
shlb
int3
clc
das
sarl
test
cli
repnz
fucomip
fadd
fadds
std
mov
cs
in
lret
sarb
cld
cmc
loop
frstpm(287
roll
cmp
iret
leave
shl
int3
in
cmc
out
xlat
repz
fcmovnu
xlat
shl
repnz
shl
rol
repz
icebp
fucom
out
test
out
loop
cli
aaa
xlat
shl
iret
fstpt
fiaddl
stc
clc
fiaddl
test
aam
loop
jmp
and
jecxz
loop
lock
dec
out
stc
mov
lret
lret
loop
call
stc
in
in
out
fdiv
hlt
mul
cmc
fnsave
loop
rol
cmp
out
std
fsub
hlt
div
xor
aad
icebp
fdivp
out
cmp
test
mov
neg
addb
in
ljmp
clc
aaa
lret
aad
fidivrl
cmc
addb
repnz
call
lret
test
sti
clc
xchg
jmp
test
das
xor
fdivr
cmp
out
divb
into
ds
xchg
loopne
fnclex
mul
call
hlt
std
loopne
cmp
out
icebp
fprem1
lret
shl
aas
fcmovnbe
xchg
xchg
loop
test
mov
sub
rcll
enter
aas
incb
repz
in
lret
testl
out
in
in
shr
jmp
cmp
sbb
idiv
leave
les
iret
incb
xlat
ret
clc
repz
loope
roll
mov
adcb
xor
call
loopne
loopne
loope
idiv
mov
mov
xchg
ljmp
cmp
mul
fcom
in
xchg
xchg
loop
jmp
stc
vpor
out
rclb
in
jmp
aad
aam
jecxz
in
fstp
cld
clc
out
incb
repnz
xor
out
ljmp
iret
ret
rorb
mov
fdivr
enter
xchg
hlt
out
cmp
frndint
cmp
sar
roll
rol
cmp
loope
addl
ffreep
jmp
sti
sti
hlt
or
in
aad
sti
test
add
ljmp
shl
into
rcr
std
cmp
dec
into
loop
cmp
out
out
addb
icebp
loop
aad
shr
call
in
leave
aas
in
rcr
xchg
cld
in
loop
mov
int3
in
repnz
test
jecxz
xor
fmul
loop
and
addb
xchg
out
int
iret
fsub
das
cmp
cmp
fidivs
int3
fmul
std
fiadds
lret
addb
loope
neg
lds
cld
in
aas
iret
test
icebp
rcr
in
flds
jmp
aam
aad
enter
shl
test
lock
test
clc
lret
rorb
shrl
icebp
aaa
enter
cmp
call
out
xchg
nop
mov
out
in
cli
in
cld
out
into
repz
cmc
loope
in
ftst
fucom
mov
loop
cmp
xor
loope
in
xlat
loop
clc
ffreep
ret
mov
rclb
xor
enter
cmp
std
cli
out
rol
xlat
repz
nop
ret
repz
ret
xor
leave
xor
fcmovu
rol
faddl
loop
call
lret
test
lock
fbstp
cmc
lret
std
in
sar
fld
jmp
sar
ljmp
aaa
das
sub
fcmovbe
ss
int
loop
sti
fcmovb
test
jecxz
cld
rcll
ljmp
cmp
rolb
adc
mov
sub
xor
mov
sub
jmp
sarl
aam
aam
fcmovne
inc
cwtl
sbb
inc
sarb
add
idivb
loopne
aad
xor
aam
fincstp
in
addl
clc
in
cli
int3
enter
repnz
jecxz
cmp
icebp
loope
fcmovb
sub
loope
fcmovnu
repnz
xor
aas
out
jmp
aaa
sub
fdivp
xchg
cmpl
out
fnsetpm(287
cli
xchg
out
and
lret
xlat
jmp
ljmp
aas
fcmovbe
out
mov
imul
int
incb
shl
aam
fdivr
out
cmp
out
xlat
aam
repz
mov
in
in
repnz
lret
jmp
aaa
int
cmp
ret
shl
clc
aam
repz
fdiv
int3
leave
jmp
ljmp
icebp
aaa
enter
rcr
aad
out
out
cli
ljmp
out
cmc
sub
lock
jmp
aad
sti
jecxz
repz
ljmp
or
cmc
out
jecxz
lock
sar
out
test
aad
enter
aad
fninit
xchg
lock
ret
ret
jmp
call
int
icebp
in
neg
test
out
shrl
xlat
call
cli
repz
ret
stc
rolb
sti
mov
ss
cmp
cli
fnstcw
clc
loope
in
clc
rcl
jecxz
and
std
fcomi
test
loop
xor
into
in
jmp
cli
or
test
mov
out
ror
cli
repz
xchg
rcl
xor
jmp
out
icebp
jmp
and
cli
incb
mov
ljmp
rcl
les
int
lret
hlt
clc
in
flds
cmc
incl
repz
shl
repnz
icebp
sti
sarb
std
cld
loope
loopne
jecxz
out
neg
cli
fmulp
mov
fcomip
out
fsubp
ret
cmp
fmulp
out
loope
rcl
rolb
cmp
iret
in
fsub
mov
icebp
jecxz
icebp
into
in
cmp
stc
aam
shl
rcl
rol
test
jmp
fucom
icebp
xor
xor
jmp
in
shl
sti
cmp
fucom
fcomi
jmp
call
icebp
imul
stc
ret
jmp
ss
loope
fldz
in
fcmovbe
aam
loopne
hlt
call
ljmp
clc
divb
cmp
push
cmp
fucom
fcompp
fdivrp
fsubrp
cld
enter
nop
in
repz
div
fdivl
sti
cmp
std
into
xchg
repnz
int3
out
fmul
repz
nop
loopne
test
ret
aam
leave
hlt
ljmp
sub
mov
mov
mov
enter
cmp
fidivl
cmp
fstpt
ret
addb
fsub
lock
test
jecxz
ss
repnz
out
adc
clc
std
mov
in
stc
testb
xchg
mov
neg
out
out
shr
aas
lock
test
or
rorl
lret
das
jmp
shr
sti
icebp
lret
xorl
fadd
lret
xchg
loopne
mov
out
into
int3
cmp
fcmove
int
fnstcw
stc
fcom
fst
xlat
rorb
mov
loope
in
mov
int3
jecxz
out
neg
cmp
cmp
rolb
mov
in
loopne
mov
loopne
in
out
loopne
ljmp
call
sbb
cld
sti
fstp
jmp
xchg
jmp
ss
div
cmp
xlat
cmc
cld
rcr
test
repz
mov
imul
neg
in
out
loope
in
xor
loope
fsub
xor
hlt
iret
fidivrl
testl
testb
rol
clc
ret
jmp
int
shl
lock
aad
ffree
fcmovnu
test
xchg
rcl
adcl
aam
out
int3
jmp
cmp
fidivrl
aad
in
lret
jmp
sbb
int3
mov
dec
cld
leave
xlat
aad
fcmovnbe
neg
loope
out
lret
lock
test
lret
call
fdiv
cmp
roll
fmull
jmp
and
mov
enter
call
aad
add
out
test
std
fldl
out
out
cmp
in
fildl
repnz
loopne
repnz
fucomp
mov
mov
movl
cmpl
je
cmpl
jne
push
call
mov
dec
mov
jmp
xor
xor
xor
or
jmp
int
fcmove
fstp
adc
js
call
lds
scas
add
or
decb
cli
fucomi
fsubr
into
lock
testb
or
out
loope
lock
lock
enter
lret
jecxz
out
sbb
out
int
mov
repnz
test
xlat
icebp
lock
rol
cmp
filds
icebp
lret
int
in
ret
out
adc
clc
stc
aad
divl
xor
cmp
rcl
sub
stc
mov
aas
in
leave
call
call
hlt
out
fyl2x
add
fmul
jecxz
jecxz
icebp
xchg
mov
cmp
icebp
xor
out
lock
shl
lock
cli
xchg
sub
xor
xor
div
xor
fdivrp
repz
sbb
and
test
in
xor
xor
aad
cld
lret
shl
out
neg
repnz
out
test
ret
in
mov
mov
jecxz
shl
cmp
fcmove
cld
neg
roll
aad
mov
jmp
cli
fsubrp
lock
ret
sar
fldl2e
aam
fucomip
fidivrl
loope
icebp
vpmovmskb
out
inc
jecxz
fcmovne
hlt
out
ficoms
lret
in
fmulp
hlt
stc
loop
repz
idiv
iret
sti
into
int3
lock
out
lret
lds
in
shl
cmp
xor
fsubp
aad
fnclex
loopne
decl
leave
leave
in
xor
aad
cmp
rcl
xor
cmp
loopne
rcr
cld
vfrczss
test
add
xlat
aad
lret
fdivp
sti
into
ror
sbb
fiadds
faddp
in
in
lret
rcl
or
sar
call
fnstcw
ds
les
fldl
iret
leave
xor
leave
fnstsw
jmp
cld
stc
sti
enter
into
xchg
in
ror
call
in
out
xor
in
imul
sti
cmp
cli
rolb
fsub
test
jmp
sar
lret
shl
xor
cmp
sarl
in
out
mov
test
lock
xor
out
fucom
in
repnz
loop
jecxz
cld
cli
jmp
test
in
mov
aam
cli
out
fstpt
fcmove
cmp
idivb
ret
les
rcl
loope
mov
rcl
call
roll
clc
jecxz
imul
fucomp
fildl
faddl
sub
xor
cmp
ret
aam
cmc
fnstsw
test
sub
fdivrp
cld
repnz
cmc
xor
enter
cmp
clc
ljmp
mov
jmp
std
ret
test
aam
out
aaa
idivl
aam
aas
test
out
test
xchg
test
enter
xor
cmp
fsub
fcmovnbe
loope
ret
fcom
out
ret
jmp
loop
int
aas
in
lret
into
leave
ror
in
aas
iret
cmpb
out
aad
fld
fld
testl
cmc
into
repnz
les
cmp
aad
rol
repnz
cld
neg
sti
cli
std
and
sub
lret
ror
out
cmp
cmp
fldl
ret
lea
lds
clc
cmc
xor
enter
cmc
fcomp
test
rol
idiv
ffree
fiaddl
decl
clc
aaa
xor
iret
shr
cmp
flds
test
test
fldl
das
ss
cld
cli
repnz
faddl
fcomi
jecxz
jecxz
mov
fildl
clc
repz
aam
out
iret
iret
repnz
in
xlat
xlat
out
clc
fadds
ror
out
out
das
shl
aaa
fcmove
shr
xlat
xor
jecxz
repnz
shl
fnsetpm(287
cli
lret
rolb
repz
lret
cmp
out
fnstsw
out
in
in
loopne
int3
out
xchg
xchg
loopne,pn
iret
jmp
fcmovnbe
stc
ror
cmp
out
test
fucomi
leave
mov
dec
fcmovu
aam
fsubrp
repz
fcmovbe
les
out
stc
xchg
icebp
xchg
ss
hlt
out
iret
lret
icebp
cmc
sbb
and
jmp
lds
cld
in
in
xbegin
cmp
mov
add
subl
add
addl
imul
jmp
into
aam
enter
fsubl
dec
pop
das
in
cmc
sub
jg
scas
add
cld
idiv
in
loope
mov
xor
loop
test
std
lret
out
xor
clc
cmp
int3
shr
int
ret
test
call
std
call
jmp
stc
out
mov
xlat
rol
cmp
xor
xlat
fcmovb
cli
ret
mov
fxch
lret
iret
xchg
popl
xor
repnz
int3
hlt
aam
cmp
out
push
and
clc
in
int
call
stc
clc
in
rcr
rcr
xorl
fld1
in
flds
or
adc
loop
fptan
cmp
xor
aam
loop
clc
ds
out
in
clc
lea
imul
repnz
xlat
in
rol
in
cld
cmp
sub
dec
out
aad
jecxz
mov
fists
sub
stc
ret
xor
xor
cmp
loopne
int3
lret
loop
jmp
sbb
jmp
iret
iret
enter
out
stc
fldl
lret
cli
fldpi
xchg
mov
hlt
xlat
cmp
cmp
leave
out
cld
aas
stc
lock
aad
aas
fildl
lock
xchg
xchg
icebp
fsubr
icebp
into
cld
sarl
int3
aaa
loopne
int
cmc
out
loop
addb
int3
roll
divl
repnz
fidivrl
fdivrl
fucom
loop
cmp
ljmp
std
into
int3
shl
das
xlat
lock
hlt
cmp
into
cmp
aam
rol
loope
cli
xchg
fdivr
jmp
ljmp
in
fldlg2
ss
test
mov
sti
rorb
leave
aaa
mul
enter
shl
push
sar
fcomi
call
rcr
in
out
lret
lock
jmp
aad
lret
aad
and
adc
out
iret
xor
shl
lret
in
xlat
sub
shl
sarl
aad
neg
sti
out
test
cmp
cmp
int
sarl
leave
stc
icebp
aas
shl
repz
leave
xchg
in
xchg
test
cmc
fdivp
sar
into
into
in
aad
out
mov
call
out
call
hlt
fsub
stc
hlt
aaa
ss
cmp
dec
test
test
xchg
hlt
shlb
xor
aam
fstp
ljmp
vpminsw
jmp
loope
sti
leave
rcll
aam
fcom
lret
cmp
iret
fcomp
sti
fiadds
loop
cmp
cli
fisttpl
cmc
xor
shrl
icebp
stc
icebp
rcr
cli
test
icebp
addb
mov
in
mov
lret
xor
out
jmp
int
fcomi
fcomip
cld
cld
sbb
fiadds
loop
cmp
xor
sti
fsincos
fld
loope
xor
cld
cmp
jmp
adc
mov
into
xchg
mov
das
out
call
xor
mul
fptan
cmc
xlat
ffree
ljmp
loopne
mov
xor
stc
lret
cmp
fnstcw
stc
fildl
inc
xchg
lea
jmp
cmp
out
xor
aam
movb
jmp
loopne
incb
enter
fnstsw
enter
loope
cmc
cmc
cmp
cmc
mov
fimuls
aam
hlt
in
in
sarb
aaa
aad
fdivrl
cli
aam
repnz
sub
out
or
cli
xor
clc
xor
into
repnz
cmp
movl
jmp
mov
cmc
in
xor
sar
jmp
in
into
sbb
aam
mov
and
in
aad
shr
aam
xlat
xor
ljmp
clc
rol
in
xchg
fstp
mov
hlt
xchg
xlat
aam
das
cld
fcos
cmp
rolb
xlat
ljmp
xchg
test
repnz
xor
cmp
cmp
in
ds
int3
cld
call
xchg
shl
jecxz
lock
out
stc
into
xor
rol
shr
aad
lret
mov
std
out
ffree
jecxz
xchg
lret
in
into
icebp
clc
fst
rol
repz
fmuls
mov
xchg
out
lret
jmp
aas
std
in
loope
in
rcl
aam
loopne
in
cld
addb
lock
mov
mov
xor
xor
add
add
imul
jmp
mov
mov
mov
mov
mov
jmp
int3
rol
xlat
fstp
fst
mov
xchg
pop
into
jg
scas
add
enter
loope
int3
ret
repnz
cmp
cmp
xor
fxch
test
stc
out
test
dec
sub
aam
lret
hlt
lock
loope
fcomp
clc
out
rorl
clc
test
mov
mov
ljmp
addb
and
adcb
xor
loop
xor
out
shl
loop
hlt
into
in
shr
jecxz
jecxz
cli
int3
orl
fsqrt
xor
iret
fdivrl
out
icebp
repz
icebp
fdivrl
cli
lret
mov
movl
fidivl
aam
out
fdivrs
cmp
cld
stc
repz
loope
mov
or
std
sub
int
repz
jecxz
out
idivl
xlat
test
and
loopne
cmc
std
shr
jmp
out
sbb
enter
xchg
ljmp
mov
xor
lret
xor
clc
in
iret
fprem
fadd
call
flds
repz
lret
int3
lret
not
adc
rol
in
dec
loopne
call
repnz
clc
aaa
ror
hlt
out
sar
faddp
in
not
sti
mov
cli
clc
clc
in
into
int
out
stc
out
stc
xor
enter
cli
rcr
cmc
test
in
in
out
cli
leave
jecxz
addl
cmp
lret
aaa
in
rcl
roll
cli
fcmovb
loope
xchg
ss
sti
call
shl
fistpll
in
repz
loopne
fisttpll
lret
xor
cmp
jmp
out
lret
out
cmp
cmc
cmc
ljmp
into
fisttpl
ss
fcmovbe
ljmp
and
rcr
in
int3
out
in
ret
xchg
in
out
test
enter
stc
cmp
lock
fldl
fsubr
loope
testb
lock
call
dec
rol
ret
in
out
clc
icebp
int3
push
in
xchg
cmp
xlat
xor
idivb
jecxz
in
sbb
rorb
repz
clc
enter
cs
rcl
int3
fcomp
lock
xchg
enter
xchg
mov
sub
fbstp
lock
jmp
loope
in
loope
loopne
mov
sti
movb
test
xchg
icebp
iret
mov
ss
repnz
ror
in
repnz
loop
fdivr
std
mov
mov
add
bnd
stc
cmp
rol
cli
in
xor
ret
ds
icebp
in
test
mul
std
into
xchg
int3
idivl
aam
enter
aas
xor
cmp
lds
xchg
fldl
loopne
xchg
xor
cli
ljmp
cmp
test
sti
orb
loopne
mov
repz
sub
int
out
neg
cmp
aas
shl
cli
xlat
in
call
lock
in
hlt
into
ljmp
aam
ds
test
sbb
fldpi
fldl
xchg
out
in
cmp
jmp
fcmove
test
and
in
cld
loope
mov
loopne
in
std
fdivp
aad
rcl
xlat
cmp
fsubr
icebp
clc
lock
out
out
cmc
cmc
sti
cmp
repnz
xor
leave
jecxz
lret
idiv
loope
loope
shl
aam
rolb
loope
mov
cs
fcmovu
fcmovb
fsubr
stc
hlt
rcl
in
xchg
test
test
xor
xlat
cmp
sti
lock
xchg
fsubp
cld
test
lea
shl
in
call
int3
call
in
out
aad
cli
xlat
sti
sbb
test
xchg
out
cs
in
jmp
sarl
sar
test
cmc
clc
call
cli
loope
xchg
nop
xchg
aad
in
iret
ds
fadd
lock
xlat
add
loope
xchg
repz
out
in
out
cmc
ljmp
cmc
hlt
incb
out
dec
nop
or
out
shr
das
ljmp
fdivp
int
out
fsincos
xchg
roll
repnz
xor
fcmovnb
cmp
ss
sti
xor
jmp
rol
rcr
fld
pop
into
shll
mov
jg
scas
add
sbb
out
repnz
stc
adc
jmp
shlb
xor
fcomip
ror
in
rcr
xlat
fcmove
fmull
mov
lds
stc
fnstcw
loopne
aas
fcomip
loop
repz
xchg
std
les
rorb
iret
int
aam
iret
loopne
fnstsw
aam
shl
fcmovu
stc
add
jmp
decb
ret
hlt
shl
std
ss
cmp
loop
aad
in
stc
in
fdivrp
in
in
nop
in
out
mov
lret
aad
jmp
fcmovnb
out
shr
icebp
xlat
lret
and
call
ret
leave
cs
in
jmp
stc
loop
rcl
enter
lret
fmul
nop
out
call
call
clc
lock
test
testl
fisttpl
hlt
out
cs
cmc
ss
cli
int
aad
loopne
out
mov
in
jmp
fadd
loop
xor
out
aas
div
in
fst
shl
leave
call
mov
mov
jecxz
ror
in
icebp
lret
aaa
out
xor
fmul
loop
stc
in
cmp
jmp
cld
out
jmp
les
shr
into
xlat
cmp
rcl
loop
int3
idiv
aam
test
std
fdivp
cli
loope
call
nop
in
shlb
jecxz
lds
aas
xor
sar
adc
loopne
icebp
jmp
in
mov
mov
loope
mov
xchg
in
icebp
sar
out
into
xor
stc
cmp
int
out
lock
jmp
cmc
mov
out
nop
mov
lret
mov
cmc
in
out
cmp
xlat
out
out
fildl
call
sar
xor
xor
repz
loope
cli
std
stc
in
cmp
loope
test
cmp
xor
in
jmp
int3
in
lock
div
cmc
shl
cli
mov
int3
sub
fimull
fsubr
aam
f2xm1
shl
lret
loop
sarl
fsubrp
fimuls
out
loop
out
rolb
call
lret
repnz
loopne
repnz
clc
mov
loope
xchg
into
cmc
ret
jecxz
out
cli
repnz
loope
repnz
stc
xor
int3
or
out
xor
out
aaa
clc
fdiv
fcomp
stc
xlat
xor
cmp
mov
xchg
enter
into
call
xor
into
jmp
loopne
loopne
fsincos
out
loop
clc
xchg
iret
in
int
xor
lret
dec
flds
ror
test
fldln2
call
filds
int
enter
loop
aad
in
mul
div
cld
in
jecxz
call
out
lret
in
std
cmp
ss
jmp
xchg
rcr
mov
xchg
out
mov
in
cmp
in
int3
shr
addl
iret
icebp
xchg
repnz
aam
fmul
out
repz
ffree
jmp
cmp
and
rcl
cmc
aas
fsub
enter
in
jmp
out
icebp
fpatan
cmp
int
hlt
fucomip
movb
fsub
test
or
jecxz
icebp
repnz
leave
enter
out
out
loop
ret
xor
mov
cli
nop
xchg
lret
hlt
ror
leave
out
sar
cld
loopne
out
dec
int
cld
addb
mov
loopne
call
xor
idiv
neg
imul
iret
cli
ds
lock
in
lret
in
call
repnz
cmp
leave
icebp
or
int
cmp
hlt
call
cmc
stc
fiadds
icebp
orb
out
divb
repnz
leave
fdivrp
cmc
ret
std
xor
stc
jmp
std
cmc
loop
idiv
out
lds
cmp
int3
aam
fdiv
iret
xchg
enter
aas
jmp
sti
addl
shll
cli
cmc
fcmovu
out
repnz
stc
mul
xchg
adc
loopne
cli
ror
leave
in
out
int3
xor
iret
out
jmp
icebp
mul
stc
cli
sbb
stc
loopne
nop
leave
xchg
out
call
loopne
repnz
ret
aam
loop
in
int3
xchg
iret
loopne
loopne
fcomip
leave
lret
call
xor
in
cli
call
loop
fcmove
lock
xor
jmp
aas
sarl
fcmovnbe
fcmovb
loope
add
adc
repnz
jg
scas
add
jmp
ror
shl
aam
out
out
in
xlat
out
frstpm(287
sar
lret
jmp
int3
into
int3
jmp
ror
cli
fdivr
out
fdivp
stc
cmp
test
aam
ljmp
int3
icebp
jecxz
rcl
jmp
jecxz
std
out
cmp
cmp
into
test
cmp
les
idiv
out
in
lret
xchg
sub
stc
in
cmc
dec
xlat
cmp
lock
mov
loop
loopne
xchg
test
loopne
xchg
lret
lret
not
xor
in
xlat
xlat
repnz
loope
out
out
rcl
xor
xlat
shl
cmp
repnz
ret
into
rolb
lret
jecxz
mov
testb
cld
lret
out
cmp
bnd
testb
in
fdivrp
out
out
fcomip
call
icebp
aaa
xlat
enter
cmp
incb
jmp
nop
icebp
loop
fisttpl
repz
xlat
shr
xor
aas
cmc
in
aad
fstp
orl
loopne
loop
mov
repz
cmp
cmp
loop
fadds
ret
jmp
adcl
out
fmul
xor
sti
repz
test
shl
aas
lret
out
xlat
out
mov
cmc
cmc
in
leave
in
lret
ljmp
mov
ret
loope
cld
cmp
leave
decl
jmp
cmp
test
not
sti
in
stc
lock
test
adc
fmul
jmp
ss
out
in
xchg
std
cmp
call
sti
fucomp
int
loope
into
xbegin
ljmp
lock
mov
in
shr
dec
aad
aas
int3
fcmovu
cmp
ss
rcl
out
ret
mul
mov
leave
nop
cli
int3
lret
xchg
int3
out
loop
shl
sar
ds
fistpll
clc
ret
cld
xchg
enter
jmp
in
out
sti
call
xor
jmp
cld
int3
iret
aas
out
aam
ret
test
fst
jecxz
test
lea
out
cmp
lret
aam
in
not
clc
cld
aas
mov
lret
test
int
ror
rcl
jecxz
enter
repz
xor
cmp
in
test
out
loop
fst
in
lret
int3
in
iret
cmp
repnz
loopne
out
aas
xchg
cli
rorl
out
lret
addb
int
call
and
shl
cli
ror
loopne
les
mov
int3
xor
fcomp
sti
shr
sar
fsubrp
fdivrs
flds
ret
cld
in
in
shl
xchg
aas
leave
fdivr
sar
lret
sar
stc
loopne
xor
xchg
idiv
mov
mov
repz
ret
cmc
out
fcmovnu
cmp
cmp
lret
in
aam
test
in
in
aad
iret
xchg
lock
jmp
sarl
clc
cmp
cmc
ret
rolb
mov
xchg
icebp
mov
in
hlt
cmp
clc
iret
cmp
std
filds
shl
in
fsqrt
xchg
nop
xchg
hlt
mov
leave
into
out
in
call
in
cmp
mov
mov
push
out
aam
xor
xor
adc
lock
test
cld
xchg
fst
cmc
in
or
aad
out
aaa
fmul
into
in
cli
cmp
call
cli
out
in
loop
mov
int
out
test
repnz
aam
loop
out
call
mov
loope
hlt
in
xor
jecxz
imul
sarl
stc
cmp
leave
out
mov
and
call
fdiv
rcl
cmp
rol
cmp
mov
lret
or
sub
out
out
fsubr
iret
ss
rcl
sub
jecxz
cmc
xlat
incl
rclb
div
div
cmp
in
loop
roll
ljmp
mov
lret
out
shl
ljmp
icebp
cmp
hlt
mov
into
ljmp
xor
jmp
cmp
fidivrs
fidivrs
ret
test
ret
cld
in
in
ljmp
out
fcmovbe
ds
rcl
repnz
add
imul
jmp
into
aas
ror
rcl
sarl
xchg
lods
mov
insb
fdivrl
scas
add
cld
roll
loop
nop
repz
icebp
cmp
cli
shl
xor
std
test
lret
test
int3
iret
mov
xor
sub
in
das
sar
out
aad
test
fdiv
fdivp
clc
mov
loopne
int
lock
out
shl
aas
int
roll
ret
std
test
xchg
lock
icebp
divl
cmp
repz
lds
and
ljmp
jmp
icebp
into
ret
xor
xlat
lret
cmp
repz
cmp
icebp
loope
xchg
jmp
loope
loop
call
out
aam
repz
xor
ss
cmp
cmc
in
testl
enter
pop
sub
cmp
xlat
int3
lret
fldl2e
jmp
lock
cmc
ffreep
mov
fucomp
nop
xchg
repnz
in
fxch
cmc
jmp
fsubp
fcmovu
repnz
hlt
cli
stc
loopne
fsubrp
fneni(8087
loopne
xchg
xor
in
xlat
aaa
rcr
fucomi
into
cmp
clc
fstp
fiaddl
imul
repz
idivb
out
icebp
cmp
cld
sar
fadd
in
and
icebp
mov
cmc
repz
jmp
repnz
cmp
filds
jecxz
hlt
fucomi
stc
fmull
ljmp
xor
cmp
sar
sti
mov
mov
fmuls
les
xor
aam
cmp
fcmovnbe
lock
in
sar
leave
loope
into
in
jmp
xor
out
xor
ss
cmc
stc
adc
fsub
lock
lret
jmp
iret
in
out
decl
cmp
out
icebp
fcmovnbe
push
xlat
cmp
in
rcr
jmp
mov
enter
out
icebp
xchg
iret
jecxz
iret
int3
fcmovb
aaa
fsubrp
shl
fcmovnu
call
rolb
mov
mov
lock
bnd
fdiv
repnz
aam
addb
out
iret
xor
fdivrs
aad
not
sar
jmp
decl
cld
aam
aaa
xor
les
in
in
shr
clc
xchg
xor
repz
fadd
nop
xlat
repz
iret
cli
out
aaa
sti
cmp
fnclex
std
addb
faddp
int3
call
test
fcmove
repz
fdivr
xor
test
sar
xabort
leave
jecxz
and
rorb
lds
idiv
cmp
sti
out
testl
add
rcl
fxch
shl
xlat
clc
jecxz
lock
fdivp
out
aad
xchg
mov
icebp
iret
rcr
int
in
cmc
fldlg2
lock
cmp
faddl
clc
loop
fdivr
int
xchg
fucomp
mov
ret
in
hlt
in
hlt
sti
aam
cmp
out
ret
out
sar
lret
fcmovbe
leave
in
icebp
xchg
cld
push
repnz
loop
repnz
faddl
cmp
fildl
flds
in
aam
cmp
into
xor
cli
jmp
aam
ret
cmp
hlt
jmp
xchg
test
std
int
repnz
cmc
repz
stc
enter
cli
iret
cmp
in
in
aad
test
in
iret
in
lret
out
xor
into
in
fucomi
stc
in
loope
stc
xor
faddp
out
jecxz
fisttpl
ret
cmp
jmp
lret
loope
in
orl
mov
cmc
in
in
leave
leave
cmp
ret
aas
xchg
repnz
loopne
mov
in
lret
cs
int
rcr
lret
fxch
into
orl
out
out
in
in
fucomp
shl
int3
lret
out
repnz
fdivr
dec
aaa
not
test
xor
faddl
xchg
loopne
in
xor
cmc
out
hlt
lret
std
sarb
aas
aam
xchg
sbb
neg
mov
nop
xchg
fists
cmp
clc
hlt
aam
out
shl
cmc
xchg
stc
mov
out
incb
xlat
cli
xor
neg
icebp
loopne
fdivrp
loope
xchg
ret
xchg
test
jmp
hlt
fdiv
nop
divl
cmc
xlat
fadd
cld
fdiv
int
loop
cmp
ror
in
xlat
lea
int
fimuls
leave
add
add
rcl
aad
aad
shll
jl
jg
loope
jle
add
repz
in
clc
aad
divl
idivb
hlt
clc
in
stc
sbb
ljmp
call
int3
lret
shlb
in
call
fcmovnbe
repz
idiv
cmp
testl
jmp
int3
xorl
ret
fdiv
xchg
in
out
or
out
lret
loop
xor
cld
icebp
fnstcw
aad
cmp
cli
testb
rcr
xchg
xor
xor
call
hlt
testl
out
out
in
icebp
fstl
fcom
cmp
xlat
fadd
fdivr
cld
sti
sti
in
jmp
rcr
lret
sub
hlt
xor
cmp
iret
out
fldl2e
cmp
aas
ret
shr
aas
icebp
xchg
aad
cld
mov
mov
ljmp
hlt
enter
in
int3
test
ret
test
mul
in
xchg
mov
ss
fdivrp
fpatan
fchs
fcmovnb
xor
test
xlat
xchg
jmp
shl
mov
lret
icebp
jmp
clc
in
out
and
out
jmp
addl
jecxz
in
clc
cmp
icebp
cmc
cmc
enter
cmp
mul
xlat
mov
in
out
fimuls
fdivp
cmp
repz
cmpl
enter
shl
in
out
lret
repnz
idivl
fucomi
iret
loopne,pt
out
in
into
fcmovbe
icebp
filds
out
ljmp
cmc
out
lret
fcmovne
in
loopne
xchg
fsubr
leave
fnstsw
sti
jmp
ror
xchg
int3
jmp
in
in
adc
rolb
or
int
xchg
xor
fdiv
das
in
aaa
cmp
cmc
fcomi
out
fmuls
into
decl
out
repz
cmp
fidivs
fmul
cmp
std
addl
and
das
sub
divb
out
shr
loopne,pt
cmp
ffreep
ret
and
in
int3
mov
mov
sar
cmp
aas
jmp
cmp
testl
int3
lret
lret
cmc
repz
int3
fldln2
call
loopne
loope
sub
nop
jmp
out
xor
int3
jmp
std
cmp
cmp
sar
fiaddl
mov
clc
clc
vpavgw
cmc
iret
in
jmp
aas
stc
rcr
test
in
iret
xchg
stc
loope
or
addb
sub
in
ljmp
fiaddl
cmc
call
fsubp
in
stc
loope
ljmp
jmp
iret
cmp
cli
xlat
clc
jecxz
sar
rcl
jmp
enter
jmp
xor
shl
enter
call
sarb
repz
push
lret
jecxz
int
fcmovnu
fucomp
int3
jmp
xor
fucom
fcomi
cmp
fnsetpm(287
aad
repz
movl
mov
cld
repz
in
aam
fadd
in
xlat
roll
nop
sti
call
clc
jmp
xlat
cli
cmp
aas
repnz
rcr
clc
aas
faddl
movb
call
out
repnz
iret
stc
in
into
loope
repz
ret
mov
out
mov
in
fsub
in
iret
leave
cmp
xlat
in
xor
idiv
xchg
in
xchg
out
enter
out
xlat
out
cmp
clc
loop
clc
ss
jmp
jmp
out
int
xchg
shl
cs
cmp
xor
out
xchg
xchg
aam
fcomi
cli
addl
repnz
fxch
ret
rcr
in
filds
shl
aas
test
in
in
mov
sbb
lock
lret
fmul
lret
aam
rolb
fdivr
fsubr
test
std
test
ss
clc
adc
ret
ret
in
add
out
mov
in
enter
test
rcl
icebp
shl
aam
cmc
cmc
not
enter
out
shr
int
enter
std
cmp
jmp
fdivrp
fcom
fcomip
repnz
in
clc
xchg
shlb
stc
ror
out
iret
stc
idivb
loopne
stc
cli
int
cmp
mov
je
xor
add
mov
imul
add
jmp
int3
rol
aad
aad
fpatan
int3
and
jnp
push
push
out
jle
add
fadd
in
jecxz
loop
mov
test
xchg
test
xor
out
cmp
das
cld
fcmovbe
xor
cli
into
out
mov
leave
shr
jecxz
xor
cli
cmp
cmc
rcr
cmp
cld
into
shl
ret
xor
test
sti
sbb
int
jmp
xor
aam
sarb
int3
cld
fdiv
sti
call
mov
loopne
xchg
loop
rcr
std
dec
clc
jecxz
idivb
cmc
fstp
fcom
cmp
cmp
in
aad
loopne
lret
icebp
mov
rorl
cmp
out
jmp
sti
aas
fcomip
fdiv
shl
stc
shl
clc
hlt
cld
loopne
faddl
repz
aaa
rol
in
jmp
into
jecxz
in
fcmovne
xlat
fiadds
test
jmp
std
ds
repnz
rol
shr
ret
movb
xor
repz
xor
xor
lock
sub
out
in
lret
in
jmp
sub
loope
repnz
not
out
cli
fcmovnbe
aaa
aad
out
cli
xbegin
leave
int
xchg
ror
jmp
into
lret
sti
aad
sbb
hlt
test
stc
int
shl
mov
and
lret
lret
cli
xor
orb
in
mov
call
mov
fmul
clc
icebp
xor
jmp
jmp
hlt
jecxz
xchg
orb
xchg
out
kmovw
call
xlat
xlat
ror
in
clc
repnz
ret
cmp
xlat
in
cmc
xchg
cmp
call
in
cli
out
hlt
repnz
std
aas
aas
fsin
fisttpl
fmul
icebp
sti
int
aad
jmp
lret
xlat
int3
lret
sarl
call
clc
cmc
mov
fmuls
hlt
test
xlat
aam
sar
hlt
repnz
fmul
int3
in
icebp
cmc
jmp
out
sbb
mov
xor
fld
repz
sar
ret
shr
inc
aas
fcmovnu
mov
mov
loope
cmc
lock
out
clc
cld
fdivl
fadds
fiadds
in
fsubp
shr
cld
out
fst
enter
xor
fcomp
xor
in
fnstcw
in
in
mov
shr
ljmp
icebp
xchg
adc
iret
cmp
loopne
rcl
out
lock
aad
sti
mov
mov
in
filds
lock
lret
ds
faddl
jecxz
loop
mov
out
repnz
std
fmulp
rcr
cmp
jecxz
mov
lea
std
dec
into
ss
cmp
test
shl
test
aad
loop
icebp
fcmovnbe
fsubr
aad
ss
ljmp
test
sti
loop
shl
xchg
test
incl
in
out
rol
int3
sbb
shl
orl
xchg
test
lock
fxch
cld
cli
iret
jmp
lock
clc
leave
filds
out
std
vpmaxsw
in
fcomp
fsin
lret
sarb
shl
stc
aad
mov
nop
leave
fsubr
loopne
ret
shlb
jmp
sbb
adc
jecxz
aam
loope
fcoml
hlt
xlat
jmp
cmc
cmp
aam
ss
cli
shl
addl
fdivrp
xchg
in
call
in
cmp
into
leave
jmp
shl
sbb
out
loopne
ljmp
icebp
sub
lret
hlt
fstp
dec
lock
imul
aad
xchg
out
orl
test
ljmp
fcmovnb
fxch
fdivr
xchg
sub
rcl
out
call
fidivrl
icebp
rol
aam
test
adc
shr
jmp
adc
repz
std
vaddsubpd
jmp
fdivp
xlat
testb
loope
leave
in
lret
into
adcb
cmp
fidivs
fistpll
out
xlat
icebp
fiaddl
fdiv
lret
test
loop
xchg
out
icebp
out
in
aas
in
xor
sti
fdiv
jecxz
jecxz
shl
xchg
sbb
cmp
ror
hlt
cs
test
clc
xor
cmc
neg
add
xchg
inc
loope
mov
jmp
inc
or
inc
or
leave
ret
push
mov
push
push
mov
mov
mov
jmp
into
rol
fcomp
fcomps
sbb
jb
jmp
jle
add
in
lret
cld
aad
aam
xlat
clc
in
rol
mov
jmp
mov
into
out
int3
repz
loope
stc
shr
cld
cmp
fucomp
cld
xor
adc
leave
enter
ljmp
icebp
in
in
xor
in
in
rcr
rol
out
loop
std
mov
in
in
xchg
mov
loop
aaa
stc
cmp
hlt
iret
into
aad
call
loope
fcom
test
out
call
xchg
dec
out
divl
int
xor
cli
ss
cmp
sarl
fsubrp
jecxz
orl
aaa
jecxz
ret
out
out
fldl
ds
hlt
jmp
xchg
aad
out
xor
fcmovu
std
shl
fiadds
clc
xrelease
jmp
into
int3
xor
aad
shr
aad
out
fsincos
out
out
aad
xchg
aam
out
les
out
cmc
call
xor
fsubrp
cld
ds
loope
aam
test
loope
xchg
fdivp
fadd
lock
aad
ds
ljmp
loopne
mov
jmp
std
int3
mov
rol
lret
xor
out
icebp
int3
out
lock
int
or
vpmaddwd
shr
mov
loope
in
cli
sub
mov
in
stc
lock
enter
repnz
repz
repz
div
sti
jmp
mov
xlat
repnz
cmp
in
dec
sar
xchg
sbb
test
hlt
ljmp
in
xchg
imul
loope
int3
aad
fdiv
into
shr
sti
les
cmc
cmc
in
neg
ret
jmp
mov
int3
test
xchg
int3
lock
cs
ljmp
in
rcr
sti
loopne
call
xchg
ljmp
aaa
leave
clc
lock
roll
ret
aam
loopne
loope
mov
xchg
dec
int
in
jecxz
xor
clc
aas
int
lret
int
shl
call
loop
loope
in
in
aad
cmp
fcmovu
cmp
repz
adc
faddl
xchg
add
xchg
shl
in
subb
das
sti
cmp
jmp
sar
fsubr
std
loopne
ror
std
out
jecxz
iret
mov
xchg
repz
leave
xor
ret
shr
int
incl
xchg
in
ret
lret
iret
mov
out
lret
ss
repnz
loope
aad
stc
xchg
incb
loopne
loope
shr
int
repnz
rcl
jecxz
sar
ret
mov
ficoms
leave
in
ljmp
test
in
test
cmc
out
orl
lock
lret
clc
aad
hlt
fcomi
lret
sar
cmp
cli
incb
loope
cld
test
xchg
mov
ffreep
enter
lret
jmp
clc
faddl
mov
mov
sti
enter
xchg
int3
in
icebp
das
ss
cli
adc
test
mov
lock
fldlg2
jecxz
orl
out
cmp
cmp
in
and
sbb
stc
jecxz
mov
fisttpl
clc
shlb
cmp
xor
ret
aam
aam
xchg
fimull
in
xchg
xlat
shr
aad
call
rcl
stc
cmp
vpsubb
fsubr
lret
rolb
lock
xor
cmp
ffree
cmp
repnz
loopne
lea
repnz
xchg
into
leave
xor
icebp
roll
into
fidivrl
lret
ficoml
out
mov
clc
aaa
stc
xor
int
std
cmp
fadds
test
xchg
out
into
ljmp
lret
orl
add
add
icebp
add
add
and
add
ror
rcr
fstp
aam
cmp
lods
pop
xchg
adc
or
jg
or
jle
icebp
aad
in
fmull
in
mov
test
int3
int
out
cmp
ror
testl
rorl
cmc
out
aad
shlb
loope
int3
imul
xor
shl
testl
out
ret
in
out
stc
ds
hlt
cmp
in
mov
ss
cmp
int
cmp
rolb
aam
aas
fcomp
jmp
loopne
icebp
adcb
hlt
xlat
shl
in
aas
repz
cmp
or
int3
loop
call
cmp
call
fiaddl
loope
cld
mov
xor
fucomi
mov
into
aam
fsub
rolb
call
fiadds
stc
fchs
xor
in
enter
fcmovu
rcr
shl
hlt
std
cmc
cmp
call
sti
jmp
call
shl
shl
in
xor
sti
ds
or
iret
aam
rorb
fdivr
xchg
xchg
xchg
xchg
out
call
xor
ror
aad
imul
cmp
xlat
sti
enter
ljmp
nop
rcr
ffreep
ljmp
in
xlat
in
cmc
lock
cli
lock
aam
enter
loopne
in
in
iret
roll
in
out
aaa
rcr
std
not
add
std
clc
sbb
into
lea
aam
in
out
call
into
in
adc
add
loopne
jmp
div
int
xchg
ljmp
not
cmp
xor
clc
rcr
movb
add
out
in
in
mov
repz
mul
sti
int3
ror
cld
cli
repz
iret
loopne
fst
xlat
shr
loop
orl
enter
aam
iret
fst
stc
cmpb
int
out
cmc
test
and
in
test
shr
xchg
mov
xor
ss
rcr
addb
cmc
out
stc
shl
mov
mov
call
cmc
not
cmc
fst
aas
aad
loop
loop
cld
icebp
incb
lret
xor
fst
jmp
loopne
ret
fucomip
jecxz
jecxz
test
in
orb
jecxz
lock
ret
out
cmp
div
repnz
adc
shr
testl
xor
clc
jecxz
shr
shl
sarb
cli
in
jecxz
or
shr
out
lock
ret
iret
in
lock
aaa
repz
div
fsubp
cmp
add
fdiv
fdivr
fimuls
adc
out
enter
cli
cmp
aaa
idiv
jmp
aam
cld
fmull
cli
movb
mov
xor
enter
ss
clc
out
stc
cmp
fdiv
cld
lock
test
in
ffreep
lret
lret
iret
out
shr
repnz
test
aas
leave
aad
lret
out
test
xor
xlat
aam
ljmp
aas
shl
in
mov
int
into
movl
sub
aaa
out
icebp
int
cmp
mul
xchg
ds
mov
test
rolb
ljmp
fstp
adc
testb
in
call
test
fmulp
ret
xor
fld1
xor
loop
repz
repnz
jecxz
loop
lret
cld
repz
jecxz
test
lret
ret
out
xlat
roll
int3
std
int3
out
loop
mov
in
xor
sti
jecxz
leave
iret
ljmp
ret
cld
cli
clc
test
ftst
lret
repnz
sar
hlt
out
xor
aam
out
loopne
rolb
aad
repz
lret
cmp
movl
jne
subl
mov
add
mov
xorl
xor
add
jmp
sarl
ret
ffree
in
jns
pusha
aas
mov
jg
or
jle
fiadds
adc
imul
in
aam
iret
out
in
out
shl
cli
cmp
ret
loopne
int
sub
popl
cli
jmp
fmulp
sti
cmp
std
aas
or
cmp
aad
orb
out
loope
in
jmp
ror
cmp
call
sti
roll
cmc
test
enter
call
cmp
cmp
in
out
in
jecxz
fucomi
ret
lret
mov
hlt
sar
jmp
out
jmp
fcmovnbe
clc
int3
std
aas
cmp
icebp
shl
test
fcomip
test
cld
std
lret
in
adc
repz
shl
divl
in
loope
leave
ret
in
xlat
ffreep
fdivr
into
fcomi
lret
xchg
ret
lret
out
out
cmp
out
clc
stc
shl
in
decb
xchg
mov
sub
std
fdiv
fldl
cld
mov
filds
add
aam
cmp
lret
xor
rcr
xor
add
ljmp
leave
out
ret
in
out
aad
cli
cld
div
flds
jecxz
xchg
out
iret
xchg
or
call
shlb
divb
lock
cmp
loop
ret
ljmp
into
mov
call
xor
ljmp
faddl
leave
mov
fimull
addl
clc
stc
shl
repnz
fldl
loop
cli
lret
xchg
fmul
std
into
jecxz
xor
xor
stc
int3
sarb
test
ret
mov
add
repnz
xchg
in
xor
ret
sti
lock
lock
iret
sarb
in
aam
jmp
ret
fmul
mov
mov
fldl
ljmp
out
rcr
shl
in
out
jmp
mov
loope
xchg
loop
ljmp
call
ss
cli
in
mov
int3
mov
clc
out
ljmp
lret
xor
fincstp
int3
in
adc
cmp
sti
int
adc
ljmp
sarl
in
clc
fcomi
aaa
fdivp
jecxz
in
test
aad
out
out
out
loope
test
xor
ss
int
clc
fnstcw
in
sti
rorl
loope
bnd
cmp
in
enter
loop
mov
rolb
rol
in
in
cld
in
lret
cmp
clc
jecxz
repz
testb
ljmp
fldln2
cli
div
in
cmp
mov
and
test
mov
f2xm1
lock
sub
repnz
cmp
stc
sti
hlt
cmpl
xlat
jmp
jmp
mov
out
mov
addb
cmp
jmp
cld
jecxz
icebp
ret
cmc
mov
std
sbb
in
ret
incb
in
shl
cmp
icebp
clc
ret
xchg
mov
out
lret
adcl
xor
sarl
cmp
aas
xchg
out
mov
out
test
lock
fiadds
in
in
in
sarb
cmp
cli
aas
addb
call
ljmp
in
cld
aaa
mul
cld
ret
stc
loopne
rcr
jecxz
ret
in
loop
ljmp
into
ds
cmp
shl
stc
sub
mov
shl
aad
in
aad
hlt
cld
iret
push
fnstcw
out
loope
call
leave
xchg
loopne
fdivp
xlat
leave
fdivr
cmp
adc
shl
fucom
stc
std
sub
xchg
loope
lock
xor
andl
add
adc
jmp
rcl
aad
rcrl
popa
loopne
idivl
or
jle
int
aam
enter
ljmp
cli
xchg
ret
fiaddl
icebp
xor
call
idivl
clc
repnz
cli
aam
std
in
stc
nop
and
loopne
icebp
enter
cmp
stc
call
lret
into
cmp
fcomi
and
std
sub
in
xchg
out
xor
sarb
lret
out
out
adc
cmp
int
in
mov
repz
fdivs
shr
sar
out
loope
loop
fadd
enter
test
mov
jmp
lock
aad
cmp
repnz
loope
roll
in
int3
sub
mov
xchg
fdivs
cmp
int3
fcmovnbe
into
icebp
lock
out
cli
ret
testb
loopne
test
jmp
aam
cli
ret
sar
roll
add
and
xchg
jmp
shll
call
hlt
cli
rol
out
cli
xchg
fildl
shr
and
jmp
call
cmp
cmp
and
hlt
cmp
xlat
test
icebp
xchg
sbb
test
sar
idivl
fsubr
int3
fdivp
fcomip
mov
mov
stc
jmp
in
jecxz
shr
hlt
cmp
in
fdivp
cmp
sar
fpatan
xchg
add
jmp
out
xchg
lock
cmp
fdivp
stc
fsub
aam
ds
in
cld
int3
addl
int3
loopne
int
xor
repnz
cmpb
loope
fsub
hlt
mov
std
fcomp
sti
test
in
int
out
not
cli
aad
out
cmp
fcom
hlt
add
stc
fcom
jecxz
addb
shr
loop
jmp
rcr
ss
ret
sti
out
cmc
aas
decl
clc
jmp
jmp
mov
jmp
in
fsubr
iret
testl
sbb
lret
out
mov
xor
ljmp
adc
fcom
ret
rorb
jmp
sti
lea
jmp
shr
stc
cmc
lret
repz
in
out
xlat
incb
std
test
into
and
mov
hlt
jecxz
cmp
cmp
xchg
ljmp
xchg
mov
sub
neg
fstpt
jmp
jmp
out
loope
ss
cmc
cmp
addl
jmp
xor
cli
fdivr
ljmp
in
rol
mov
jmp
leave
stc
in
fdivr
out
int3
in
in
lret
ss
icebp
cmp
fucomi
fldl
sti
loop
cmp
decb
divb
aas
enter
int3
aad
loope,pt
ret
leave
leave
loopne
enter
in
in
in
out
fcmovb
int
call
stc
rol
enter
loop
nop
xchg
cmp
mov
jmp
stc
hlt
ret
xor
loopne
in
in
rol
loop
xchg
xchg
mov
aad
into
repz
aad
fucomip
cmp
xlat
cld
stc
loop
enter
out
stc
int
jecxz
repnz
ret
in
stc
cmp
cmp
xlat
loope
cmp
ret
cli
fcomp
mul
into
loopne
out
icebp
xchg
cmp
lock
jmp
cld
aad
clc
cmp
jecxz
in
clc
ljmp
xchg
and
repz
aad
stc
enter
shlb
in
ljmp
lret
loope
repz
loope
out
rcl
out
fdivr
jmp
rol
in
sti
stc
fsqrt
lea
jmp
jecxz
cmp
div
in
mul
sbb
lock
cld
lret
into
out
out
loopne
mov
ror
ret
rcl
out
lock
repz
mov
movzwl
sbbl
not
movl
and
mov
mov
jmp
xorl
mov
pushl
call
test
je
leave
ret
push
mov
sub
subl
jmp
leave
xlat
rcr
mov
cwtl
push
mov
ja
sub
jg
roll
jle
cld
rolb
jmp
jmp
mov
int3
jmp
repnz
idivl
fidivrl
cmp
cmp
in
fdivp
ret
loope
enter
test
mov
repz
xor
iret
ror
jmp
idivl
repnz
hlt
loopne
out
loop
in
jmp
dec
rol
jmp
ror
cmp
fcmovnu
cli
cmp
out
iret
or
fildll
out
lret
lret
cmp
sar
aam
ret
enter
xchg
mov
out
into
call
testl
out
mov
in
nop
rcr
rcl
call
jecxz
cli
leave
xlat
out
lret
cmp
test
fcomi
pop
loop
in
filds
out
fcmovne
call
cli
sti
fildl
repz
in
out
out
mov
hlt
icebp
aad
int3
leave
xor
cmp
fxch
aam
xor
mov
or
iret
adcb
int
call
rolb
stc
xlat
mov
ds
in
mov
loopne
in
aad
fbstp
fnstsw
out
jmp
mov
sub
les
aaa
cmp
xlat
cmp
int3
int
iret
cmp
out
fcomp
fdivr
cmp
and
sar
jecxz
cmp
xor
lret
cmc
fdivrl
jmp
neg
fucomi
sti
adc
mov
xchg
ljmp
mov
loope
int3
leave
leave
sti
in
fldl
out
sti
lret
out
mov
jecxz
jmp
cmp
int3
xor
out
cmp
shl
sbb
ret
jmp
lock
xor
in
ret
rol
std
test
loope
cli
jmp
test
lock
cmc
out
out
test
ror
test
and
add
mov
test
shl
aad
shl
fnstsw
ds
out
loop
xlat
enter
ret
loope
lock
in
loopne
int3
into
out
xlat
out
repz
in
aad
cmp
cld
fisttpl
leave
fisttpl
xor
lock
aaa
xor
in
jecxz
fcmovnb
out
sti
loope
jmp
xchg
into
fucom
aas
shl
cld
imul
out
icebp
ss
cmp
loopne
rorl
mov
int
hlt
loopne
shr
into
xor
ljmp
fld
in
neg
fisttpl
int3
in
in
call
cmc
ss
fdivrp
in
ret
int
rolb
cld
movb
mov
test
in
aaa
xor
idiv
out
shl
rcr
into
mul
fisttpl
xchg
in
xchg
sar
in
call
out
cmp
cmp
ret
in
lret
notb
in
in
out
aad
xor
out
rol
imul
hlt
dec
in
std
aad
xor
call
fstl
iret
shr
imul
fdiv
lock
rcl
xchg
cmc
ret
add
leave
int3
lock
out
leave
std
jmp
in
jecxz
rorl
decl
xchg
into
xlat
icebp
xlat
fcmovnu
std
add
icebp
inc
and
sti
fists
fsubrp
fsub
repnz
iret
aaa
out
shl
std
xlat
ror
ret
jmp
xchg
incl
into
mov
shr
fdivp
loopne
jmp
ret
incb
xchg
repnz
xor
fidivl
divl
ss
iret
cmp
aad
int
into
in
sar
ljmp
int
xchg
mov
xor
cmp
iret
out
repz
rcl
orb
sbb
std
out
lock
xchg
shl
ret
out
jecxz
leave
cmp
icebp
shl
rcl
testb
cli
ljmp
in
aaa
clc
out
jmp
dec
int3
hlt
sar
loope
loopne
ljmp
incb
inc
clc
daa
test
test
add
sbb
jmp
mov
fstp
enter
imul
jg
roll
jle
sub
in
fsincos
dec
clc
xlat
into
cmc
aad
xlat
cli
shl
sub
decl
icebp
shl
out
out
sub
ss
aas
fidivrl
fcmovnbe
fiadds
in
lret
mov
xchg
or
sarl
rcr
cmp
loopne
addl
fldl
sbb
rcl
int3
neg
fcomi
jmp
cmp
ffreep
sub
shr
loope
cmc
or
std
iret
iret
enter
fsubr
enter
int
in
out
fsubp
repz
not
ljmp
test
aam
xor
in
xor
rcl
hlt
cmp
ret
div
cli
vpmovmskb
les
xchg
in
fists
ret
rol
fiaddl
jecxz
jmp
int
fldln2
cli
xchg
test
out
shlb
lret
shr
cmp
sbb
idiv
testl
lock
divl
call
neg
repnz
iret
std
rcr
in
shl
mov
mov
jmp
mov
divl
bnd
sar
call
cmp
out
loop
aam
lds
in
lock
mov
in
ljmp
icebp
std
icebp
lret
fstpt
in
hlt
neg
ffree
sbb
popl
leave
repz
xor
lock
into
out
test
rcr
out
cmc
out
xchg
cli
loop
cmp
xor
out
ljmp
stc
test
xchg
icebp
out
jmp
lock
jmp
out
cli
loop
aas
cmp
xchg
in
stc
loope
enter
xchg
call
hlt
cli
fcmovbe
loopne
sub
into
loope
sti
fmul
test
jmp
xchg
xor
iret
ret
lret
xlat
hlt
rolb
cmp
test
out
ret
frstpm(287
cld
lea
out
fdivp
cmc
icebp
cmp
out
flds
mov
out
sub
std
std
in
ret
cli
sti
xlat
sti
aam
cli
in
aas
in
enter
out
int3
sar
leave
out
xchg
shl
repz
sarb
fsub
shr
cmp
cli
out
in
fdivr
test
xchg
jmp
ss
lret
fidivrs
fsubr
test
clc
inc
jmp
fsubp
test
das
out
in
aam
jmp
fcomip
fldl
enter
into
mov
call
out
cmp
in
or
cmc
jmp
shl
orl
leave
int3
lea
call
xlat
cli
cmp
fidivrs
ds
mov
leave
loopne
enter
decb
cli
in
repnz
cmp
iret
aad
xchg
fiadds
nop
jmp
shl
call
icebp
shl
ljmp
sbb
mov
cli
loop
int
xchg
test
xor
int
stc
xor
rcl
ret
roll
fsubr
mov
lret
adcb
sti
repnz
shl
cmp
loope
fld
cmp
enter
test
in
into
out
aad
clc
out
ljmp
fst
ds
loopne
leave
loope
mov
in
repz
call
jmp
out
aam
ret
loop
out
push
loop
sti
cld
rcll
ss
fnstenv
cmp
sbb
addl
enter
mov
xor
fyl2x
cmp
xlat
cli
repnz
and
loop
in
sti
int
std
xchg
fucomi
jmp
fcmovne
sti
fcmovbe
enter
test
int
mov
jecxz
iret
loope
xor
cmp
xlat
lock
cmp
jmp
in
rol
inc
lret
and
shll
xabort
lds
aam
aas
into
shl
aas
icebp
jmp
cld
jmp
neg
int
fstp
xchg
mov
in
ss
enter
aas
in
rcl
rcl
aam
shll
inc
cld
andl
mov
inc
mov
cmpl
jne
push
push
push
call
cmpl
jb
inc
jmp
lret
aas
fst
fcmove
fidivrs
mov
push
cmpl
add
test
cli
xchg
sti
mov
sub
rcl
ret
in
test
lret
mov
into
int
xchg
out
ret
jmp
lock
aam
int3
lret
fucomip
in
cmpl
aam
fst
test
in
faddl
in
nop
sti
leave
jmp
fdivrp
fcom
rcl
adc
fisttpll
lock
xchg
call
fnstenv
aad
lock
aas
loop
call
xlat
ret
int3
iret
in
mov
fmulp
int3
aad
hlt
stc
in
in
lret
loopne
fst
loopne
stc
xchg
in
fiadds
fmull
loope
shl
sti
icebp
out
iret
hlt
fcmovu
leave
clc
into
out
mov
mov
loop
icebp
in
mov
in
int3
lock
cmc
lret
repnz
lock
lret
sar
rcl
jmp
out
fcmovne
int3
mov
in
ret
xor
xor
jmp
aam
test
leave
imul
ljmp
jmp
shr
jmp
cmp
stc
std
loopne
jmp
sti
into
repz
xchg
fmulp
out
in
loop
fcmovu
std
in
sti
iret
fcom
test
rcr
test
cmc
fdivrp
mov
nop
mov
in
test
idiv
not
int
jecxz
sti
div
xor
rol
ret
xlat
int3
ljmp
repnz
jmp
repnz
leave
cld
shr
cmp
out
rcl
ret
orl
mov
repnz
cmp
lock
addl
lock
icebp
lret
jmp
xor
shr
cmp
in
cmp
int3
aad
repz
cmp
hlt
aad
or
xchg
in
ljmp
idiv
cmp
idiv
rol
shl
fadd
in
xchg
cld
ljmp
aad
int
xor
cmp
stc
repnz
in
ffreep
jecxz
fscale
testl
std
aam
lock
xlat
cld
stc
leave
fmul
cmp
cmp
shl
mov
hlt
and
cld
enter
in
xchg
out
mov
repnz
xor
std
enter
lock
repnz
fdivr
xchg
iret
mov
icebp
in
mov
xchg
repnz
loop
cmc
cmc
sti
xor
ror
lock
sti
enter
xchg
icebp
repz
in
xor
call
lret
loope
int
ds
icebp
loopne
std
mov
xchg
jmp
cmc
xor
sarl
hlt
fldl
fdiv
test
shr
stc
mov
and
call
jecxz
idivb
cmp
fdivr
loop
fiaddl
lds
in
in
int
rclb
idiv
das
stc
lret
lret
sti
loopne
ret
call
lret
call
cmc
aaa
sar
in
fdivr
shr
rcl
fdiv
stc
adc
aas
fcmovu
lret
loop
or
xchg
loope
in
ss
icebp
roll
cmc
cld
imul
test
test
xchg
xchg
jmp
xlat
int3
fst
fcom
hlt
cmp
rol
fucomip
div
loop
jmp
iret
out
rcll
shl
cmp
out
fadd
loope
cmp
ret
xlat
fldl
sti
out
mov
or
ret
ror
cmp
fucomi
ret
loop
out
cmp
in
aad
in
ffreep
mov
mov
div
enter
not
fcmovnb
call
jecxz
fmull
testb
div
aad
loope
cmp
inc
jecxz
cmp
in
lds
xchg
int3
xchg
into
xor
jmp
sbb
xor
rol
neg
fstp
xlat
in
jmp
xchg
dec
in
call
jmp
jmp
push
cmp
adc
test
into
std
rcl
icebp
in
in
out
iret
cmp
jecxz
cld
or
lret
ret
rolb
aad
lret
in
sar
out
int
incl
cmc
in
test
xchg
call
les
sti
cld
lea
movl
jmp
aam
aas
ret
lret
fst
fnstenv
lods
pop
inc
dec
jecxz
jl
mov
roll
jle
ljmp
rcr
in
call
mov
lret
test
mul
clc
shlb
out
xlat
fucomi
std
sti
ret
aas
in
fmul
addl
xchg
in
sarl
xor
jmp
out
ss
int3
fstp
icebp
cmc
test
xlat
faddp
test
int3
int
out
jmp
iret
cmp
int3
icebp
int
ds
out
addl
ljmp
out
lret
das
lret
int
cmp
cmp
in
sbb
cmp
fdiv
loopne
jmp
fxch
repz
loope
xlat
ss
xor
sti
cmp
iret
cmp
call
sbb
in
lock
out
neg
in
cmp
hlt
out
fcmovu
and
icebp
loop
leave
out
call
int3
in
sar
xor
ror
adc
cmp
hlt
test
in
add
and
xchg
xor
lock
leave
repz
or
aam
shl
rol
test
lret
and
roll
xor
xor
xlat
ss
sti
sti
out
loopne
clc
lret
sti
test
in
xor
xor
lret
loopne
cmp
xchg
fimull
nop
mov
ficoms
leave
lock
fucomp
lock
in
int3
out
leave
test
faddl
enter
fdiv
cmp
lock
jmp
jmp
in
icebp
fdivp
leave
out
xor
leave
call
neg
std
add
les
mov
mov
in
ror
hlt
jmp
std
cmp
in
xchg
ret
ret
aad
into
mov
lock
lock
aam
fldl
icebp
jmp
cld
mov
loope
ljmp
cld
neg
sti
ds
sub
call
cmp
test
ljmp
repnz
cmp
fnstsw
fcmovnu
in
jecxz
std
in
out
mov
int3
enter
aam
cmp
loope
std
repz
and
icebp
out
sti
in
testb
ss
rcl
jmp
cli
cmp
movb
stc
mov
out
in
lock
ret
fsubr
out
out
sbb
lret
in
fstpt
cli
aam
sbb
xlat
sub
call
adcb
cs
loope
int3
xlat
loop
cmp
hlt
aad
fld
xchg
loope
lret
loope
int
rol
lock
cmc
xor
incb
icebp
ljmp
lret
xchg
xchg
aad
cmp
sti
out
lret
std
out
clc
aam
hlt
add
test
xchg
out
repz
cmc
xor
cmp
aas
rcr
cmp
jecxz
jecxz
aam
stc
in
out
icebp
icebp
loop
xor
jecxz
jmp
icebp
jmp
iret
in
rol
aas
out
sti
clc
xchg
xlat
xor
lret
lret
fdiv
ljmp
xchg
cmc
loope
out
call
cmc
xor
rcl
aaa
stc
rcr
rol
loope
std
imul
fadd
sub
in
in
int
out
aam
xor
cmp
cmc
icebp
neg
xor
lret
into
popl
loope
ret
fidivrl
fdiv
xlat
out
cmp
int
hlt
loopne
loop
cmp
out
test
leave
rcr
std
mov
fdivs
sub
leave
ss
ljmp
fdivr
test
enter
fsubp
into
in
xchg
dec
mov
out
stc
xor
loopne
std
into
jecxz
rol
xor
call
mov
rolb
enter
aaa
ror
rcr
cmp
ffree
test
out
call
loope
loope
enter
hlt
nop
xor
into
iret
rcr
cmp
std
loope
aas
xchg
rorb
loopne
xchg
aaa
jecxz
sti
leave
sti
repz
in
xor
sar
jecxz
xchg
and
mov
mov
andl
mov
inc
mov
cmpl
jne
push
push
push
pushl
call
cmpl
jne
xor
add
inc
mov
cmpl
jb
neg
mov
sbbl
push
and
lea
andl
mov
neg
jmp
rcl
xlat
fcom
push
outsl
bound
and
testl
dec
xchg
xchg
repnz
clc
cmp
sti
cld
cmp
add
out
loopne
fstp
in
call
repz
fdiv
cmp
hlt
fdivr
xlat
adc
fcmovnb
out
test
cmc
ret
stc
call
and
out
jecxz
sarl
shr
int
stc
lret
loop,pt
adc
clc
int3
xchg
sub
mov
lret
lock
aaa
stc
aas
cmp
in
loopne
loop
cld
out
orb
ljmp
leave
roll
add
loop
stc
nop
cli
cmp
icebp
lock
xor
test
loopne
fstp
ds
repz
int3
fld
out
cld
lock
nop
repnz
repz
lock
xlat
jmp
int3
repnz
cld
clc
xchg
ret
call
mov
out
fyl2xp1
fpatan
lock
cmp
cmp
repz
jmp
sub
icebp
jmp
xor
ss
cmp
shr
fdiv
testl
and
mov
mov
aam
aam
ss
aaa
fcmovnbe
fxch
adc
test
xlat
loopne
stc
sbb
addb
in
xor
cmc
jmp
idiv
xor
ret
test
clc
fcomip
rcl
cmc
mov
mov
mov
fcom
sti
aaa
cmp
xor
in
bnd
out
xor
in
cld
call
xchg
mov
xlat
hlt
xor
sub
lret
ds
fdiv
fisttps
call
int3
mov
cmp
out
xor
aam
int
rol
lock
sti
in
ffree
in
mov
jmp
rcr
aad
hlt
int3
sti
out
loope
shl
loopne
jmp
xchg
or
loope
cmc
leave
sub
leave
in
ss
cmp
repz
fidivrs
cmp
mov
fcoms
iret
xchg
das
jmp
repz
loope
sar
rcl
cli
shl
jmp
test
leave
out
lret
aam
xor
out
cld
fst
rcr
aad
xlat
cmp
repnz
xchg
ret
int
mov
mov
ret
jmp
cmp
repnz
rol
aaa
call
loopne
xchg
cmp
iret
in
cmp
fnstenv
aas
fnstsw
aas
fcmovu
mov
mov
into
test
adc
pop
cs
xlat
into
ds
test
test
roll
fdivrp
mov
aam
ret
loope
aaa
out
aaa
into
sar
out
hlt
fld
out
in
jmp
loopne
mov
xlat
iret
hlt
iret
xlat
flds
cld
sti
fdivrs
cmp
leave
fmull
xchg
hlt
rclb
in
aas
cmp
clc
rolb
fistpll
test
xchg
lock
in
int
fdiv
repnz
xlat
int3
cmp
fmul
in
xchg
loopne
jecxz
jmp
mov
out
rcl
iret
cmp
enter
out
test
fidivrl
add
fstpt
mov
out
incl
call
aam
cmp
xor
fcomi
cld
loope
mov
jecxz
xlat
jmp
das
call
or
out
aad
out
decb
out
test
shr
jmp
loopne
std
sbb
rcr
fmuls
jmp
loop
les
out
cmc
jmp
cld
sarl
icebp
lret
aam
filds
lret
fisttps
out
aaa
xor
out
cmp
lock
cli
rcl
aam
hlt
loop
adcl
stc
int
out
lret
cmp
fsub
cmc
fdivrl
les
stc
fsub
test
call
aam
lret
in
xlat
fcom
repz
bnd
mul
out
sti
nop
cld
loop
xor
xlat
xor
fsub
cmp
ret
test
in
or
xchg
ljmp
cmc
shr
repnz
lock
inc
in
jmp
aam
enter
aad
cmp
and
scas
add
roll
jle
fcmovb
jecxz
fiaddl
in
in
hlt
rcl
aad
fcmovu
out
jmp
icebp
shr
ret
test
loop
imul
addl
enter
loopne
loope
test
call
sti
in
and
xor
enter
cmpb
loop
ds
aam
in
cli
leave
nop
icebp
out
mov
shl
shl
leave
icebp
lock
rcr
int3
rcl
cmp
jmp
orb
rol
ret
in
dec
aam
filds
fiaddl
enter
nop
in
into
in
sar
in
fld
aaa
in
lret
xor
stc
adc
fcmovne
std
or
fisttpll
incl
xor
jmp
aam
fldln2
cmp
xchg
aad
lds
iret
repz
out
aas
fptan
enter
cmp
fdivrl
fucomip
hlt
std
xchg
loope
fadd
fld
out
lret
out
std
popl
jecxz
jmp
out
stc
addb
test
int3
mov
nop
in
neg
cli
fxch
xor
jmp
and
test
loop
dec
ljmp
xlat
xor
xor
in
cld
out
sarb
iret
out
ret
hlt
loop
jecxz
loopne
mov
sbb
std
xchg
jmp
lret
xor
jecxz
ds
jecxz
cmc
in
inc
fstp
leave
orb
idivb
ror
hlt
into
fdivp
ljmp
std
add
cmc
rcl
in
incb
lret
repnz
jmp
repnz
vpavgw
sti
call
lds
out
out
enter
lret
das
fucomip
stc
in
cli
aas
frndint
xlat
lock
xlat
lret
mov
int
lock
cmp
aam
mul
aaa
lock
lret
in
test
rcl
incb
out
aad
stc
ss
repz
shl
cli
and
test
fdivr
or
enter
fiadds
out
in
sti
repz
sarb
cmp
mul
hlt
call
in
ljmp
cli
loop
cmp
in
shlb
clc
rcl
cmp
adc
stc
mov
cld
mov
mov
out
cli
sub
loopne
std
flds
xlat
clc
test
int3
out
shl
sub
fldpi
sti
cmp
out
sub
ret
cmp
fld1
cmc
lret
in
leave
rcr
jecxz
enter
cmc
ss
repnz
xlat
into
out
and
in
lret
sti
xchg
call
rol
lock
iret
test
ret
fdivr
ljmp
incl
clc
xor
jmp
in
iret
stc
loopne
shl
sti
cmp
neg
in
enter
fsubp
xchg
mov
xor
sub
out
lock
cmp
ss
ljmp
addb
shr
xlat
cmp
aad
fcomp
std
hlt
call
mov
in
mov
int3
clc
in
icebp
aam
mul
sti
iret
icebp
in
icebp
call
hlt
clc
xchg
std
sbb
out
incl
icebp
leave
cmp
aam
cmp
into
rol
sar
jmp
fucomi
enter
rcr
bnd
cmp
loope
cli
loop
xchg
ret
mul
loope
lock
fdiv
in
lret
cmp
rcl
and
xlat
leave
cld
fld
loopne
icebp
fsubp
test
xchg
xchg
ss
aaa
fdivrl
ss
in
clc
loopne
int
cmp
mov
xlat
nop
cli
cmp
loopne
test
sub
xor
iret
out
in
enter
stc
loope
fcomi
fildl
fsub
int
rcl
out
loop
out
out
ljmp
test
shl
ffree
xchg
inc
lds
out
aam
enter
in
in
jmp
sbb
fdivr
fdiv
lock
xchg
loop
fstl
push
mov
mov
mov
movl
mov
xor
jmp
rcl
enter
fcmovne
fdivl
xchg
jg
roll
jle
xchg
divl
ret
sti
cmp
cld
in
addl
loopne
jecxz
sbb
fdivs
xor
leave
out
out
fidivrl
cmpb
lds
aam
test
ret
lock
loopne
shlb
lock
push
loope
clc
fsubrp
rol
addb
mov
jmp
iret
sarl
call
ret
aad
rorl
std
fstp
in
mov
out
jecxz
repnz
mov
call
test
xlat
cmp
cli
lret
loopne
iret
add
call
cmp
cmp
rcl
cmp
neg
cmp
xchg
in
lds
xchg
jmp
cli
cmp
cmp
dec
into
shl
fnstsw
shr
lret
ror
out
sub
clc
xor
repnz
ror
in
cld
fcom
aam
mov
fsubr
in
out
adcb
test
lret
sti
ds
out
fmul
hlt
idiv
cmp
lock
jmp
or
out
aam
in
fchs
aad
ret
xlat
hlt
aad
fxch
ljmp
cs
cli
cld
cmp
loopne
testl
adcb
int
div
cmp
jecxz
shl
fld1
ret
ret
out
loopne
xchg
in
das
xor
fcmovb
cld
lock
fcomi
not
faddp
in
jecxz
dec
mov
repnz
cmp
out
repnz
into
cld
int3
in
sti
stc
loope
loope
out
xchg
not
sarl
call
idiv
cld
cli
in
rcl
add
in
out
xchg
aad
aaa
in
int
leave
out
sbb
sti
sti
loope
cli
out
out
loope
repnz
jecxz
int
xor
fadd
ss
push
cld
out
fcmovnbe
iret
repnz
ljmp
cli
lds
test
cmp
cmp
xor
and
clc
lock
jmp
lret
cmp
stc
fdiv
sti
sarl
test
ror
push
in
std
lret
enter
in
movl
div
fiaddl
fucom
aam
orb
addb
das
jmp
cmc
lock
stc
neg
jecxz
xor
cli
cmp
out
repz
shlb
stc
repnz
ret
aad
clc
loopne
in
in
int
mov
jecxz
jmp
ret
icebp
cmp
xor
repnz
rcr
test
cli
idivb
fucom
test
clc
movl
rcl
cmp
fdiv
xor
lret
iret
rol
ds
hlt
mov
mov
lret
icebp
xchg
xor
in
fidivl
repz
repz
in
stc
sbb
ret
aad
fcmovb
out
and
iret
or
enter
cmp
sar
fdiv
and
lret
cli
in
test
out
xor
int
fstpt
lret
ds
jecxz
cmp
and
loopne
fucomip
out
shl
mov
aaa
rol
cli
aad
cmp
ror
fucom
fucom
cld
test
clc
out
lea
shl
loopne
sar
sti
out
hlt
cli
std
loop
cmc
cmp
in
leave
sti
cli
icebp
in
in
in
lock
shl
enter
ror
int
ds
aam
out
loope
idiv
out
mov
xchg
out
roll
int
int
lret
aas
fmul
repnz
fcmovnb
xchg
out
fcmovnu
aam
test
ret
ljmp
lret
iret
roll
rcr
in
std
xchg
stc
test
in
xchg
xchg
fsubr
in
xor
cld
in
sti
std
lret
iret
in
fisttpll
clc
rcr
sub
repz
xor
roll
stc
leave
fld
jmp
decb
cmc
loopne
cmp
fcomp
stc
shl
stc
ds
cmp
mov
movzwl
adc
mov
xor
mov
or
mov
xorl
xor
adcl
jmp
int
rcl
int
stos
fimuls
cltd
jg
roll
jle
hlt
faddp
xlat
ljmp
mov
int
cli
xor
call
sarb
std
loope
shr
fdivp
leave
jmp
ljmp
in
repz
and
aam
test
mov
leave
neg
out
xchg
int3
fucom
nop
lret
in
loop
hlt
into
cld
in
cmp
int
mov
clc
leave
jecxz
jecxz
xchg
lea
xlat
cld
aaa
out
jmp
aaa
repz
mov
loopne
loop
sbb
out
aad
shl
cmc
lock
in
cmp
sti
ds
clc
hlt
test
cmp
iret
out
loope
in
xor
into
sti
in
jmp
loopne
add
rol
mov
std
xlat
lock
jmp
ret
loope
cmc
repz
jmp
sar
ret
sar
in
fcmovbe
test
test
loop
in
xchg
out
jmp
icebp
int3
icebp
fsubp
loopne
cmp
shl
orb
in
xor
clc
stc
ret
lret
repz
loopne
shl
cli
out
fcomp
neg
decl
in
iret
lock
aad
neg
cmp
fiadds
mov
orl
in
out
das
xor
into
ss
adc
stc
idiv
mov
shr
lea
rcr
aam
int3
aas
leave
loope
faddl
loop
cli
jecxz
mov
jmp
ljmp
ljmp
stc
xchg
fisttpl
xchg
xchg
call
hlt
shl
int3
lret
repz
iret
fdivr
or
or
mov
shr
das
fcom
call
aam
aaa
cmp
clc
std
jecxz
loop
loop
cli
std
addl
xlat
repz
int3
aas
int
int3
cmp
cmp
shl
std
out
mov
xchg
xchg
dec
leave
cli
stc
loopne
xlat
stc
in
out
fcmovu
std
shr
loop
out
sub
out
fcmovb
into
fsubrp
aas
int
in
into
stc
cmc
addb
mov
fstp
popl
cmc
lret
xor
lock
ljmp
fdivr
out
xlat
enter
nop
loope
xchg
mov
hlt
sti
in
cmp
shl
cli
rcr
ljmp
fcomi
std
shl
shl
ret
xor
shl
xor
ret
fcmovb
loop
lret
into
ljmp
icebp
cmc
int
leave
lock
iret
stc
out
shl
sbb
aas
adc
decb
loop
mov
jmp
aam
shr
lock
lret
repz
rcr
loop
mov
icebp
decb
repnz
xor
in
enter
in
aad
jecxz
add
clc
loope
test
loopne
mov
cmc
xor
cmc
std
shr
jmp
rcr
roll
stc
leave
leave
int3
mov
shl
fsub
stc
lret
cmc
cmp
int
icebp
cmp
out
ret
cli
xchg
cmp
loopne
xchg
aad
xor
in
fsubr
cmp
fdivs
aad
out
std
rcr
clc
test
les
sub
ror
leave
in
xor
rcr
cmp
xor
rcr
ret
xchg
lret
xchg
xchg
std
ljmp
fstpt
xor
aaa
enter
rcl
test
aam
std
fucomi
cli
enter
mov
shl
in
leave
in
divb
xor
aam
out
rol
aas
sti
cli
vshufps
loopne
enter
in
cmc
ror
out
fcomp
into
xlat
repnz
mov
idivb
xchg
test
int
ss
in
shr
shl
not
sbb
fcmove
addl
ss
lock
lret
cmp
repnz
shl
cmc
mov
mov
test
out
lock
lock
ss
int3
clc
loopne
aam
fdivr
xlat
xchg
testb
test
xlat
loopne
jmp
xor
jmp
enter
fmul
fnstcw
push
lea
popf
jg
roll
jle
cmp
ljmp
in
std
rol
out
orl
out
sub
fdivs
sti
adc
aas
ds
loope
aad
jmp
ret
sti
lret
in
out
rolb
ret
int
xor
iret
in
fsub
jecxz
xlat
roll
out
cli
out
jmp
jecxz
xchg
aam
in
div
jmp
cli
enter
sub
fmull
mov
movb
lret
out
cli
ror
ss
in
std
out
out
repz
mov
cld
jmp
rol
clc
ftst
cmc
stc
cmp
out
out
cmp
xchg
test
cld
orb
stc
jmp
int3
out
divl
cmp
fldl
testb
jmp
stc
mov
jmp
repnz
iret
ss
std
sarb
cld
leave
out
neg
int
into
into
nop
iret
in
repnz
repz
cmp
repnz
shr
xchg
aad
sub
out
sub
std
rcl
xchg
xlat
repnz
icebp
sarb
sar
leave
stc
out
ret
cmp
cmp
rol
xlat
faddl
cld
incb
lock
xor
roll
loopne
jmp
sti
mov
sub
ror
out
fsubr
cmp
aam
cmpl
ljmp
mov
int3
xchg
xor
in
leave
das
hlt
xor
aas
std
out
push
fmuls
xlat
mov
in
cld
nop
call
icebp
cmp
cmp
fsubr
ljmp
ret
repz
in
cli
mov
ljmp
out
shll
out
imul
fcmovnbe
cli
out
fcom
into
icebp
sbb
cli
sar
jecxz
repz
cmp
in
cmp
leave
lret
cmp
ret
loopne
incl
push
repnz
lds
call
std
cmc
cmp
cmc
stc
xlat
rol
lds
fildl
mov
iret
ljmp
out
fmul
leave
repz
loope
addb
orb
shl
shll
aam
cmp
in
rcr
clc
jecxz
hlt
hlt
in
test
leave
rcr
icebp
cmc
std
xchg
ss
int
lret
lret
hlt
loopne
aad
fucomp
rolb
ljmp
in
shl
lret
out
iret
fdivrp
aas
ret
into
mov
loope
xchg
jecxz
repz
mov
ror
shl
in
lock
testl
int
hlt
rorl
repnz
xor
shl
xlat
repz
jmp
mov
testl
shr
fcmovbe
aam
leave
fcmove
in
fcomi
xchg
ret
ffreep
fadd
nop
leave
lea
cs
lret
ljmp
add
out
fucom
ficoml
ljmp
fcmovne
lret
shr
addl
int3
stc
xchg
in
in
repnz
ss
ljmp
lret
stc
fildl
aad
loop
fmulp
into
mov
jecxz
rcr
hlt
ljmp
in
repnz
ss
out
out
jmp
vpminsw
in
in
aaa
lds
in
fdivl
test
sti
cmp
cli
cmc
mov
out
in
jecxz
out
xchg
mov
jecxz
clc
out
out
stc
stc
stc
test
out
stc
jmp
xchg
incb
iret
nop
testb
cli
cmp
cmp
fyl2x
out
mov
mov
xchg
xchg
out
jmp
lret
cmp
fsubr
std
repnz
cmp
neg
mov
xchg
call
icebp
jecxz
fmul
clc
repnz
fidivrl
repnz
mov
lret
test
mov
mov
out
out
out
out
lret
icebp
loopne
fadd
shl
stc
mov
loopne
jecxz
test
aam
jmp
ror
in
fidivrl
cmp
ror
iret
cmc
cmc
out
vpsubq
call
je
inc
add
sub
add
imul
enter
fst
ffree
and
dec
jo
inc
imul
jle
test
orb
ret
int
aaa
lret
ljmp
sbb
out
or
in
int
test
loop
enter
ds
ret
aas
icebp
cld
fdivr
lret
addl
fcomip
in
sub
ljmp
in
fstp
repz
cmp
xor
int
mov
loopne
repnz
idivl
out
aad
f2xm1
rcl
xchg
call
int
iret
cmp
jmp
xor
clc
out
in
cmp
repz
out
mov
les
add
xchg
nop
shl
xbegin
ljmp
shl
rorl
xchg
xchg
icebp
out
xchg
mov
call
jmp
fidivrl
ds
rcl
push
std
jecxz
lret
enter
mov
int
ret
in
xor
clc
divl
xlat
std
xlat
cmp
repnz
test
and
test
test
shr
into
out
aad
repnz
sti
in
aam
in
loop
ret
leave
out
in
in
out
lret
icebp
jmp
aaa
aad
ss
jmp
in
ret
adc
fldl
lret
loop
hlt
repnz
imul
ljmp
hlt
aam
test
jecxz
clc
in
mov
stc
xchg
shr
rorl
int
xor
sub
iret
cmp
out
in
xchg
call
shll
aaa
xor
cmp
sti
ret
loopne
xor
mov
test
into
aad
sub
shl
rcr
ds
div
testb
mov
int3
xlat
fldl
mov
xor
lock
ror
out
out
hlt
ret
hlt
fiaddl
ds
lock
aad
loopne
out
in
cmpl
mov
test
mov
test
rol
fadd
repz
xor
std
cmc
fcmovnu
addl
mov
loope
mov
mov
out
out
sar
lock
icebp
in
imul
in
fdivr
and
xchg
fcmove
fldl
test
sti
cli
cmp
repnz
cmp
xor
sti
fldl
in
in
jecxz
xchg
ret
leave
cs
sar
xor
call
into
clc
fst
xchg
enter
ret
int
movl
fnstcw
rcr
fcom
jecxz
inc
jmp
fimuls
int
call
cmp
loopne
rcr
out
call
std
cld
decl
out
xor
cmp
hlt
cmc
int
lret
sarb
sbb
shl
aad
clc
cld
enter
or
iret
jmp
imul
enter
lock
not
mov
idiv
test
jecxz
out
lock
out
aad
ror
xor
cmp
loop
int
out
lock
cs
sti
aaa
not
out
aam
sti
sar
test
mov
ret
mov
xchg
loopne
rol
jmp
ror
sti
cli
icebp
ret
leave
xlat
lret
test
jmp
decl
sti
lock
xlat
iret
in
lret
iret
and
leave
rolb
mov
repnz
xchg
out
in
loope
clc
ret
fcmove
out
int3
lret
vpmaddwd
fcmovnbe
sbb
ljmp
xchg
leave
shr
cli
icebp
xor
icebp
cmc
ds
fdivrl
mov
fcmovnu
imul
mov
mov
lret
int3
cmp
stc
idivl
shl
loopne
in
into
cld
repnz
and
call
ret
div
rcr
fidivs
jecxz
ffree
xchg
cli
sbb
out
jecxz
in
out
out
mov
loope
loope
xor
lock
int3
hlt
std
sti
ffree
testl
loopne
xchg
std
xchg
xchg
mov
ret
in
aam
fucomp
clc
xlat
out
flds
fimuls
out
xlat
ret
std
jmp
fdivr
add
addl
div
not
mov
movl
cmp
movl
jmp
rol
mov
xchg
mov
cmpsb
jg
roll
jle
in
sti
ds
ret
incb
fisttps
in
lock
xor
aaa
sarl
sar
ss
out
inc
sar
jmp
icebp
int3
into
std
rcl
int3
in
cmc
hlt
hlt
in
rol
sarb
fldl
in
fucomp
std
addl
lock
jmp
int
rcr
rorl
lret
icebp
xchg
into
sub
cs
ret
lock
in
int3
cli
fcom
test
stc
cmc
shl
lret
cld
enter
iret
hlt
xchg
shl
aas
repnz
cmp
xor
cmp
call
aas
vcvttpd2dq
rol
xchg
fmulp
ror
test
shr
lret
xlat
in
cmp
iret
lock
fstpt
sar
mov
mov
loop
fiaddl
aad
loop
iret
ljmp
lret
loop
std
shl
add
cli
mov
ljmp
lock
in
jmp
std
cmc
lock
idivl
fmulp
lock
out
lret
rol
cld
in
in
rcr
xlat
sar
call
fdivrp
in
nop
aam
out
cmp
rcl
iret
movb
rolb
sti
testb
filds
aad
stc
aad
std
lret
aam
clc
cmp
xlat
clc
mul
out
test
shl
cmp
jmp
lock
lock
aas
loop
ret
test
lret
out
in
in
repnz
cs
in
sti
idiv
or
loope
in
ljmp
sbb
enter
aam
leave
int3
cmp
loopne
repz
fstp
ret
fildl
rcl
out
xchg
in
cmp
lret
into
ror
jmp
xchg
hlt
not
jmp
loopne
fimuls
loopne
in
lds
xor
fidivl
ds
in
in
rcr
enter
testl
aam
leave
xor
loope
cmp
in
aas
not
aas
cli
fcom
fdivrp
in
loop
into
xchg
shl
xor
enter
cmp
not
ror
in
flds
fmul
in
xchg
mov
mov
jecxz
ret
int3
repnz
xor
in
loope
mov
mov
call
loopne
mov
test
iret
aam
shl
enter
call
hlt
cmp
clc
in
cmc
ljmp
out
ljmp
ror
fidivrs
lret
cmpb
xchg
in
enter
xor
out
mov
ss
ljmp
cli
jmp
fistpll
aad
test
jmp
test
ss
out
stc
lock
stc
aam
cmp
testl
shr
out
out
ror
lret
fcmovb
cmp
in
std
iret
int3
xor
std
out
ffreep
int
out
jecxz
dec
in
loope
out
iret
shl
out
ljmp
cmp
loopne
sti
cmp
in
decb
out
in
stc
lock
cmp
cmc
jmp
loop
fsub
call
faddl
shrb
jmp
std
cmc
rol
test
decl
in
loope
rorl
into
cmp
iret
out
cld
aas
jmp
cmp
imul
test
cli
addb
cmp
aaa
sti
div
leave
aam
icebp
cmp
in
in
out
nop
adc
xchg
int
int
rcl
ljmp
cmp
shr
cmp
orb
out
fsubr
xorl
in
int3
aam
stc
call
std
cld
cli
and
fucomp
loopne
mov
xchg
bnd
int
out
jmp
loopne
lret
ds
shr
out
xchg
xlat
into
leave
loope
fcmovnbe
loop
aas
ret
fcom
cli
icebp
aam
cmp
lock
decb
test
ljmp
ljmp
sti
fcmovu
ljmp
ret
mov
loope
int3
mov
test
cmp
add
mov
test
inc
add
adc
movl
add
jmp
aas
aam
int3
aad
lret
fstl
cli
cmpb
jle
out
iret
hlt
lock
out
fst
jmp
repnz
repnz
jmp
test
in
in
out
repnz
std
shr
rol
jecxz
ret
loopne
jmp
and
in
adcb
xor
jmp
cli
loope
loope
fxam
in
rolb
ret
repnz
out
shl
repnz
xor
sti
hlt
repz
push
out
shl
std
clc
mul
cld
ljmp
mov
hlt
call
lret
repz
shl
fildl
les
xchg
jmp
jecxz
cli
in
into
xlat
adc
hlt
xchg
cli
xchg
movl
lret
in
sar
cmp
jmp
test
loop
jmp
in
mov
xor
call
cmp
jmp
mov
fdivr
jecxz
jmp
ljmp
in
in
lds
hlt
int
cld
aas
shr
fildl
sbb
call
xor
out
neg
fcmovb
cld
repz
out
loopne
mov
in
loopne
repnz
not
aad
cld
xor
sub
shl
clc
enter
leave
jmp
test
in
out
xchg
add
fmul
in
hlt
into
cli
sarb
jmp
fstp
std
out
out
int
nop
lock
in
int3
in
loop
repz
aam
rol
fdivrp
test
mov
repz
jmp
ljmp
shr
repz
cmp
int3
fmulp
cmp
int
shl
stc
loop
fld1
clc
mov
xchg
int3
fptan
in
imul
cmp
fiadds
div
imul
loopne
addb
imul
lock
clc
leave
lock
lret
ljmp
icebp
aad
aad
jecxz
shr
fcmovnbe
nop
shl
xor
out
not
hlt
xlat
xlat
cmp
cmp
fdiv
sti
fisttps
out
mov
ljmp
fsub
fnstsw
aad
not
ds
fcmovu
mov
out
fdiv
xchg
lret
loop
shl
in
into
cmp
lret
jmp
xlat
roll
cmc
neg
lds
aad
xor
loope
leave
idiv
enter
cmp
cmc
hlt
cmc
faddl
int3
mov
in
in
ret
aad
cmc
repz
icebp
cmc
roll
stc
out
xlat
out
xlat
fucomp
ljmp
bnd
fmul
fidivl
div
test
lds
cli
leave
out
shl
out
xchg
xor
lret
iret
cmp
clc
cmpb
test
mov
repz
out
ljmp
in
rol
xor
in
ss
int3
push
fsubrp
fstp
cmp
loop
mov
ret
shl
fsubrp
out
stc
iret
fcmovne
lret
fstpt
cmp
rcr
sti
in
loopne
mov
int
shrl
lret
lret
idivl
fmul
rcl
std
sti
xchg
aas
mov
jmp
orb
repnz
lret
cmp
icebp
loope
fcmovnu
enter
lret
xchg
xchg
into
sub
out
out
xor
stc
cmp
stc
lret
xor
testl
mov
test
int3
mov
hlt
jecxz
into
xlat
out
cmp
into
cmpb
fmul
cld
fdiv
hlt
in
ljmp
icebp
sub
in
fidivrs
jmp
xlat
loopne
rcl
xor
mov
sti
enter
std
rclb
repnz
cmp
xlat
iret
cmp
idiv
in
xor
in
sti
fucomip
mov
out
lret
rcl
ret
imul
in
into
enter
cmc
iret
fiadds
clc
int
in
jmp
lret
call
ds
rcr
rcr
repz
mov
lock
xchg
incb
xor
fcmovb
in
icebp
out
cmc
repz
loopne
cld
call
in
enter
rcl
decb
aaa
in
fxch
enter
aas
lea
andl
xor
xor
inc
mov
cmpl
jne
push
pushl
pushl
push
push
call
cmpl
jne
xor
add
inc
mov
cmpl
jb
dec
mov
mov
mov
imul
jmp
lret
ror
fstp
fnstsw
out
jo
xchg
dec
rcll
jg
roll
jle
ror
aam
clc
nop
fisttpll
shr
loope
xor
fcmovu
in
repnz
aam
jecxz
std
frstpm(287
call
lret
rclb
int3
std
shl
jmp
not
in
out
ret
jecxz
in
lret
ljmp
repnz
iret
repnz
jecxz
hlt
loop
out
std
xchg
ljmp
xor
fstpt
or
loope
shr
fcomip
sti
mov
mov
test
out
test
fnstenv
in
stc
sti
int
rcl
ds
in
loop
sbb
jmp
shr
fucomip
out
xor
out
aad
in
shl
repnz
addl
jmp
cmp
xchg
bnd
ss
cmp
xor
out
std
lret
mov
hlt
xchg
iret
repz
xor
in
in
cmp
cmp
xor
jmp
jecxz
iret
int
iret
mov
in
out
fdivrl
cmp
xlat
ret
ror
ljmp
lock
mov
jecxz
out
xor
cmp
in
imul
jmp
test
fisttpll
sar
mov
jmp
iret
xor
cmp
icebp
icebp
out
rorl
int
in
rclb
cmp
repnz
aaa
into
jmp
aas
loope
mul
jmp
jmp
mov
rcll
ret
xlat
aam
shl
jmp
aas
xor
fcmovb
rol
idiv
or
nop
cli
lock
int3
std
shl
into
ret
lret
int
fcmovb
neg
aad
sar
call
sti
int3
ficoms
mov
aam
fsub
cli
std
ret
rolb
fldl
lret
std
repz
lret
clc
into
leave
cmp
call
leave
nop
fmulp
out
lret
fmul
int
in
aad
test
loopne
fcomp
sti
loopne
out
cmp
jmp
in
out
cld
in
hlt
cmc
sar
out
rcr
sarb
add
testb
addl
in
cmc
shl
into
xor
fdivl
sub
fsub
repz
xchg
clc
leave
into
jecxz
nop
sar
xor
lds
enter
lret
fcom
shr
decl
testb
test
in
sar
call
ds
loopne
orl
test
xchg
repnz
ret
ss
out
xor
in
loope
fcmovb
cli
rorl
out
iret
fucomip
into
out
jmp
cmp
cmp
lret
int
out
fcmovbe
add
loopne
out
call
ror
lock
sub
aas
fidivrs
int3
sbb
cmc
ret
roll
xchg
lret
lock
jecxz
xor
ss
ds
into
shr
rcr
ret
filds
fmulp
in
xchg
loop
clc
fdivs
out
neg
cmp
fldl
repnz
std
loope
mov
ret
repz
fmul
iret
cmp
repz
into
fcmovb
mul
in
sti
loopne
xchg
repnz
iret
xor
cmp
cmpb
addb
out
leave
ljmp
call
enter
int
sarl
repz
fxch
xlat
testl
sub
xor
ss
std
iret
aaa
loopne
loopne
clc
fcmovbe
sti
fcom
std
faddp
cli
mov
ret
out
ret
out
fdivrs
std
clc
std
sbb
sub
jmp
mul
fdiv
loopne
int3
mul
ret
sarb
fnstenv
int
lock
lock
cld
leave
cmp
cld
sti
out
lret
div
out
cld
in
cmp
aaa
addl
hlt
sti
ljmp
jmp
lock
xor
cmc
cli
int
fnclex
loop
fiadds
leave
loope
out
mov
jmp
mov
mov
cmp
je
mov
orl
mov
xor
add
pop
pop
pop
leave
ret
mov
add
cmp
je
jmp
rcl
rcr
fst
xlat
xchg
sbb
into
xchg
loop
jg
roll
jle
xlat
in
out
fidivl
cmp
cmp
rolb
fcomp
fildl
in
jmp
cmp
repnz
repz
imul
loope
in
in
cld
call
ljmp
test
int
lock
cmc
cli
shl
sti
shl
cld
enter
xchg
test
clc
lock
hlt
fcmove
jecxz
fcomp
fcomip
ret
mov
test
lret
nop
out
out
incb
into
ret
cmc
cmp
cmp
cmp
test
aas
loope
in
lret
sub
xchg
icebp
subl
out
lock
lock
shl
aad
out
and
mov
rorb
call
loopne
sti
xor
fnsetpm(287
jmp
repz
adcb
in
out
xor
aaa
repnz
int3
call
cmp
std
out
cmp
mov
neg
aad
ror
xchg
jmp
in
leave
ss
rcl
test
ret
fxch
mov
lret
icebp
lock
lret
xor
lret
aad
cmp
cmc
sbb
jecxz
fsubp
out
addb
int
icebp
fxch
leave
cmc
aam
repz
xchg
rcl
test
mov
in
lea
clc
idiv
lret
ljmp
fadd
fisttpll
fucomi
inc
iret
jmp
clc
lret
in
cli
jecxz
repz
stc
loopne
ret
fisttps
in
in
repnz
leave
hlt
cmc
cmp
iret
aas
rorl
fcmovnu
fucom
enter
mov
xlat
ret
lret
leave
xlat
sbb
ret
movl
icebp
iret
aam
leave
iret
aaa
into
sar
or
out
fsubr
in
xlat
sti
testb
fstp
xchg
xchg
xor
repz
incb
aad
xchg
sar
ret
mov
std
into
lret
xchg
xor
shl
cld
fcmovbe
call
iret
fabs
ret
leave
std
not
or
mov
in
in
xor
lock
fucomip
fcmovbe
int3
sti
fdivr
addl
addb
test
in
iret
sub
xlat
idiv
out
cmp
rolb
mov
test
int
xchg
jecxz
repz
xor
cmc
xor
loopne
sar
fdivrp
enter
out
out
hlt
mov
clc
fldlg2
neg
loope,pt
cmp
shl
cli
fdivr
cmp
ret
loopne,pt
loop
iret
xchg
xchg
icebp
mov
loope
into
xor
cmp
out
aad
shl
clc
out
in
loope
int3
test
sarl
cmc
into
xor
cmp
shll
out
std
int3
fucomi
xchg
jecxz
clc
std
out
hlt
mov
xor
out
hlt
fdiv
adc
xchg
fisttpll
mov
jmp
int
icebp
lret
aam
jmp
fnstcw
cmp
aam
in
clc
fstp
mov
inc
loope
into
xor
cs
clc
in
aas
hlt
sar
iret
in
call
out
lret
xchg
std
fdivp
mul
aam
rcr
lret
cmp
and
aas
idiv
fcmove
stc
vcvtpd2dqy
hlt
xlat
cmc
int
xor
xor
cli
hlt
out
fiaddl
jmp
std
loope
mov
shl
out
ss
cli
fdiv
loopne
std
test
clc
leave
into
in
mov
sti
test
jmp
cmc
fsubrp
sar
rcl
in
test
neg
les
shl
in
out
aad
xlat
into
in
xlat
lock
iret
into
aad
addl
int
decl
nop
in
enter
mul
enter
fstp
loope
loop
aam
repz
nop
test
test
xlat
hlt
cmp
loop
repz
xchg
stc
cld
cmp
clc
mov
jmp
loopne
aam
aad
leave
cmp
aaa
cmp
icebp
fdivrl
in
jecxz
clc
xchg
cwtl
sbb
add
arpl
decl
call
mov
add
add
stos
cli
push
es
mov
mov
mov
jmp
rcl
mov
aad
sti
adc
mov
jg
roll
jle
ljmp
rcl
xor
icebp
int3
int3
out
clc
stc
cli
rcl
loope
faddl
test
jmp
xchg
lret
lret
fistpll
ror
fidivs
xchg
test
lret
call
loop
call
jmp
cmc
jmp
cmp
cli
iret
hlt
loope
xor
test
decl
fiaddl
lret
in
ror
shll
ljmp
std
fucom
jecxz
aad
loop
lret
into
test
jmp
rolb
ret
out
enter
in
cld
cli
into
fstl
clc
in
ljmp
cmp
loopne
stc
std
idiv
fucomi
in
faddl
sub
cmp
jmp
lret
cmp
into
in
mul
and
div
int3
test
fcomip
fidivl
shl
int
lret
lock
int3
aam
rol
faddp
enter
mov
fstp
and
shll
jmp
sar
repnz
repz
fdivp
cmc
in
cmc
lret
int
fucom
icebp
loop
in
or
cmp
call
shl
cmc
xchg
stc
call
mov
popl
cmp
cmp
lret
loope
cmc
ds
test
sti
addb
shl
lret
in
cs
enter
ret
shl
shl
ret
leave
vpandn
xchg
lock
ret
shl
hlt
iret
call
fld
loop
xlat
and
test
and
repnz
fcomp
lret
cld
cld
fcomip
xlat
enter
loop
stc
jmp
loop
int
aam
out
call
aas
push
addb
aam
lret
sti
xchg
icebp
rcl
iret
ror
in
cmp
call
enter
iret
les
lret
loopne
sbb
icebp
lock
inc
imul
xor
cs
ds
rolb
xchg
aad
div
fucomi
iret
cmp
fdiv
div
std
repnz
out
fcmovnu
lret
in
int3
xorb
rcr
aaa
aaa
in
aam
enter
rolb
mov
clc
xchg
leave
nop
repz
lock
int3
xor
cmp
std
fpatan
aad
lock
stc
cmc
mov
mov
fmul
nop
das
aaa
int
xor
shll
repz
rol
test
xlat
out
fsub
loop
cli
fdivr
mov
xchg
and
xor
cld
call
cld
jecxz
fldl
mov
cld
jecxz
lock
loopne
aad
xlat
cmp
sti
call
in
int3
add
cmp
cli
test
jecxz
out
repz
leave
sti
jmp
fdiv
vpmovmskb
out
repz
rcr
lret
mov
call
cli
icebp
out
aam
fadd
loopne
aam
test
cmp
cmc
in
out
stc
into
into
fcoml
rol
sti
aaa
xor
cmc
leave
cmp
loopne
xchg
hlt
fcomp
xchg
rorb
fcom
fcmovnbe
cli
std
adc
roll
test
xchg
jmp
rol
aad
rcl
lret
aam
idiv
cli
jmp
fcmove
lret
int
fucom
jmp
fmul
fdivr
out
out
std
into
fadds
test
out
aas
cmp
out
xchg
call
xor
xor
loopne
sbb
cmp
aad
clc
and
sti
sti
in
fcomi
lret
xchg
out
into
into
call
rcl
aam
stc
std
rolb
out
lds
out
icebp
ror
in
dec
cmp
jmp
loop
ret
ret
xchg
aad
shl
fimull
loope
in
sub
cli
fistpll
ror
fsubrp
rcl
ret
out
loope
test
mov
mov
mov
xor
test
jmp
shl
iret
clc
frstpm(287
hlt
fsubrp
int3
test
ljmp
lret
clc
neg
mov
xor
mov
add
cmp
jmp
rol
lret
fstp
aad
dec
jns
call
mov
jle
cmp
shl
les
aam
out
fsub
orl
repz
hlt
shr
out
iret
cmp
xchg
mov
fists
xlat
xor
enter
cld
lock
ret
leave
hlt
in
lret
addb
xor
in
in
lret
in
out
fucomip
out
cmp
loop
imul
mov
out
rcr
shl
ror
leave
sti
cmp
cli
cmp
in
div
test
orb
xchg
ror
repz
cli
sar
lret
faddp
dec
orb
sti
fisttpl
out
not
neg
cmp
into
sar
aad
idivl
addl
mov
lret
lret
ljmp
call
cli
sbb
icebp
les
mov
out
ret
decl
test
add
xor
lock
icebp
sti
rcr
hlt
lock
ret
mov
test
fmull
fdivrp
into
xor
in
into
shr
not
int3
jmp
ret
hlt
ret
fcmovu
mul
sti
jmp
ljmp
into
in
enter
ret
cmc
cmp
cmp
idiv
repnz
jecxz
int
leave
in
out
call
lret
ljmp
cli
sbb
in
cli
in
popl
jecxz
shl
cmp
rcl
lret
xor
cmc
in
cmp
jecxz
aad
ret
neg
ret
loopne
mov
lock
enter
ljmp
std
cmp
test
lret
sti
cld
lret
fcmovnu
sub
out
xlat
xlat
ret
cmp
clc
repz
jmp
cmp
aas
fcomip
in
mov
mov
test
fdivp
xor
xor
jmp
rcl
cli
aad
int3
out
out
into
std
sti
std
int
xlat
repz
jmp
cmp
rorb
xlat
int
int
lock
ss
rcr
in
icebp
loopne,pt
test
xlat
aam
cld
jmp
test
int3
cli
std
lret
fcom
repnz
cmp
out
repnz
lret
cmc
ret
sbb
test
lret
xchg
in
adcb
out
cmp
fucom
fdivr
addl
aas
out
stc
jmp
iret
ror
hlt
rcl
out
in
out
ljmp
out
rol
loope
clc
out
mov
mov
fxch
in
aad
aam
out
sar
repz
shr
cmp
fldl
jmp
ljmp
rcll
leave
aad
shll
into
cli
sbb
fcmovu
xchg
rorl
cli
jmp
mov
xor
aaa
ss
fcomi
aad
cli
xlat
incl
stc
cli
orb
int
in
std
mul
cmp
out
loopne
xchg
cli
ret
in
loopne
xchg
fucomp
out
out
lock
cmp
jmp
repnz
xor
lds
jmp
jecxz
movb
cmp
addl
in
in
jecxz
xchg
loopne
out
stc
jmp
cmp
xlat
in
cmp
loope
faddp
stc
loope
in
in
ror
fmul
repz
aas
xlat
fstpt
rorb
in
mov
adcb
shr
rol
stc
cmp
sub
decl
in
loope
lret
nop
in
ljmp
cs
int
int3
out
into
inc
fadd
mov
jmp
test
xchg
leave
mov
fcmovu
sbb
aam
aam
ljmp
xchg
in
jmp
into
aaa
in
aaa
clc
fcom
div
jecxz
ret
ret
rcl
out
fdiv
mov
mov
leave
cmc
out
icebp
lret
cmp
sarb
lock
xor
ffree
orb
rcl
int
fcomp
int
rcl
loopne
test
loop
loope
in
cmp
je
mov
xor
add
jmp
iret
aad
aad
aad
aad
push
push
mov
fildl
jle
add
in
jmp
lret
cli
fbstp
aad
cmc
not
in
testl
out
jecxz
adc
xor
xlat
enter
lret
fnstcw
lock
rorl
neg
xchg
mov
xchg
out
cmp
fsubr
dec
clc
in
cld
xchg
div
jecxz
std
lret
in
lret
lock
ror
xor
icebp
lock
out
sarl
cmc
jecxz
mov
ljmp
in
cld
fucomi
cmc
lock
out
enter
imul
mov
in
aad
out
xor
out
hlt
xlat
fcmovnbe
test
shl
sti
in
ret
ljmp
xchg
sub
fcomp
cmp
aas
loope
lock
sub
cld
clc
lret
sti
out
leave
into
decb
out
ss
in
out
idivb
loop
cmpl
ret
mov
int
int
leave
out
hlt
ret
xlat
ret
xor
repz
leave
jmp
shl
jmp
mov
sti
enter
int
repz
jmp
lret
int3
out
icebp
xlat
jecxz
out
cmp
loopne
sub
int
aad
into
lock
stc
lret
sti
in
shl
fld1
repnz
clc
loopne
xlat
lret
orb
rcr
xlat
cmp
fdiv
xlat
addb
sbb
stc
mov
shr
out
imul
cmp
cli
leave
std
xor
cli
repnz
lea
enter
call
out
xor
ror
xlat
loop
iret
not
call
fsubrp
jecxz
loope
xchg
xchg
loope
jecxz
ret
aaa
xor
cmp
clc
lock
xlat
cld
cld
cli
in
loope
mov
shl
in
in
lret
fsubrp
fnstsw
std
test
repnz
jmp
loopne
call
loop
rol
ret
lret
out
cmp
cmp
cmp
fnstsw
or
xchg
notb
in
out
lock
rcr
roll
test
fadd
fadd
sti
mov
into
out
xchg
int
repz
in
repnz
sti
lret
sbb
repnz
cmp
iret
fsubr
fucom
jecxz
out
in
loopne
cmp
int
cmp
aad
clc
hlt
out
ds
shl
aam
sbb
in
ljmp
lret
int3
clc
repnz
filds
repz
loopne
mov
iret
ljmp
divl
iret
in
sar
repz
sti
push
rcr
lret
jmp
lea
xor
cli
aaa
iret
fxtract
cmp
frndint
testl
test
out
hlt
xchg
shll
aaa
aam
xlat
xor
cmp
loope
sti
sar
cmp
stc
sbb
nop
orl
in
aad
cmpb
ds
loop
loop
leave
jmp
jecxz
lock
lret
ror
int
std
cmp
enter
fnstsw
mov
mov
fisttps
pause
hlt
xor
jecxz
std
hlt
cmp
cmp
ret
test
test
icebp
xlat
call
shr
sti
nop
in
loope
leave
sub
aaa
lret
hlt
out
repnz
cli
jmp
leave
shl
mov
aam
xor
icebp
cmp
idiv
ljmp
ds
mov
mov
rcr
jmp
shl
out
int
icebp
cmp
ds
jecxz
aad
test
xchg
xlat
idiv
fucomp
in
int3
cmc
mov
aad
xor
cli
shr
aam
cli
iret
cli
aaa
addl
in
out
loop
out
std
call
iret
cmp
sar
cmp
in
shl
clc
fdivp
in
vshufps
cld
cld
or
ljmp
lds
sarb
ret
aam
sti
lret
sub
out
sar
fcomip
test
aam
ret
call
shl
jmp
dec
enter
fimull
fmulp
test
loope
jmp
cmc
out
out
div
int
in
fstpt
orb
mov
mov
xor
add
jmp
ror
rcl
mov
ror
scas
inc
jg
roll
jle
test
fiadds
lret
int3
nop
int3
out
xor
test
adc
fsub
ret
movl
mov
call
out
iret
call
filds
aam
cmc
sbb
xchg
and
les
rcr
ss
ret
test
test
cli
stc
stc
lea
ror
xor
cmp
xlat
leave
idivl
xlat
fildl
mov
jecxz
decb
fsub
loop
in
ror
loopne
iret
dec
addl
sti
shr
int
loop
xchg
lret
hlt
cmc
icebp
aam
cmc
shr
rcl
cmp
fcomp
fcomi
cmc
fimull
repnz
fisttps
xor
lret
loopne
fdivrl
addl
test
mov
hlt
lock
hlt
lret
fmulp
aam
xchg
loope
mov
jmp
test
stc
cmc
int
fadds
cli
test
test
out
mov
incl
xlat
fstpt
dec
sub
aad
std
into
out
decb
fsubr
fimuls
hlt
das
lock
lret
fmulp
cmp
fcmovne
stc
jmp
in
out
rorl
ret
repnz
lret
leave
shr
neg
fptan
cmp
fiaddl
lock
mov
out
out
cli
rcl
leave
lret
cmc
shl
xlat
test
shl
fsub
fcmovu
into
test
fiadds
jmp
aaa
ljmp
repnz
cmp
ljmp
cld
fsubp
xchg
call
xor
cmp
fstp
fidivrl
shl
jecxz
out
std
out
lds
mov
shl
aad
fcomp
jmp
repz
ret
ret
aas
call
out
int
call
sub
loop
xlat
cmp
lret
in
cmp
sar
shr
hlt
aas
xchg
cld
fcomp
call
jecxz
loope
jmp
enter
enter
hlt
cmc
stc
hlt
jecxz
fldl
mov
out
fucompp
fisttpl
xlat
cmp
in
neg
shr
repz
cmc
loopne
clc
jecxz
lret
inc
out
xchg
test
lock
ret
cmc
lret
repz
int3
jmp
sarl
std
flds
mov
test
leave
cli
in
rcll
call
jmp
out
out
loop
cmp
in
jmp
nop
in
sub
sar
cmp
int
jmp
xor
lock
fsub
fdiv
sbb
in
xchg
mov
imul
cmp
cmc
fnstcw
jmp
jmp
fdiv
lock
lock
loope
in
jecxz
sub
lret
divl
shr
stc
cmp
xchg
call
fcmovne
loopne
into
out
ss
icebp
iret
call
std
int
cmp
out
rol
sbb
fimuls
xchg
aas
lret
in
xor
repz
int
jecxz
ret
hlt
cmc
stc
aad
jmp
xchg
lret
iret
into
into
sbb
faddl
xlat
in
fiadds
hlt
xchg
in
xchg
shr
idivl
sti
xor
stc
std
aam
loope
mul
ret
std
cmc
xlat
fimuls
in
into
aad
call
in
in
shr
cmp
test
call
out
leave
int
movb
out
fdivrl
aam
fcomip
cmp
vpmaddwd
fadd
clc
out
rcr
lret
icebp
std
shlb
cmc
xor
lret
cld
out
lret
cmp
hlt
out
xlat
mov
repz
std
iret
rol
jmp
out
fcmove
loopne
ret
cmp
icebp
cmc
loop
leave
orb
int3
int
in
ret
int3
sar
sarb
fdivp
out
test
loop
sti
fldl
lret
nop
in
xchg
leave
sti
ss
sbb
test
in
cmc
fcmove
fisttpl
enter
movzwl
mov
xor
lea
add
jmp
rcl
aam
sarb
xchg
sbb
add
jp
dec
jg
roll
jle
ss
in
cmc
cmp
rolb
repz
shl
decl
jmp
ret
cmp
cmc
repnz
fdivrp
std
neg
stc
test
in
out
fcmove
nop
test
in
fidivl
cs
enter
clc
stc
iret
out
cmp
loop
enter
in
aam
xchg
out
aam
cmp
ljmp
adc
repz
out
test
in
loopne
in
ss
xor
cmc
test
sti
into
jecxz
rcl
aam
test
sub
leave
adc
test
ss
cmp
sar
adc
rolb
fmull
rcr
aam
in
clc
in
out
aam
lock
xlat
loope
in
fucomi
enter
mov
lret
xchg
shll
xor
xor
std
cld
aad
loop
mul
call
test
fisttps
lock
leave
xlat
int3
stc
fdivr
shl
clc
lock
xchg
mov
int3
int
xchg
shll
iret
icebp
iret
cmc
ror
neg
repz
repz
in
ret
jmp
in
fmuls
xchg
xchg
icebp
shr
das
aaa
in
out
aaa
cmp
cmp
roll
jecxz
in
test
lock
lret
lret
into
neg
cmp
jmp
sti
cmp
adc
in
aas
cmp
fildl
call
lock
fldl2t
cli
frndint
hlt
out
fmulp
lock
cmp
sti
xchg
lea
xchg
std
std
jmp
jmp
push
cmp
cmc
les
loope
sti
in
xchg
in
xchg
cs
in
out
cmp
repnz
loop
aas
leave
test
fmuls
enter
iret
sarl
icebp
jmp
fucomp
iret
out
out
repnz
out
cld
std
into
cmp
rorb
in
hlt
stc
cmp
fiaddl
sti
fsubp
fadd
stc
in
xchg
in
leave
sub
xor
xor
shl
xor
in
cmp
addb
mov
loope
icebp
sub
out
ror
vpminub
into
fmulp
loopne
loopne
fisttps
mov
xor
in
lret
shr
cmp
out
in
out
enter
int3
sar
icebp
cmc
shll
lock
fcmove
cmp
cmc
std
xchg
test
test
int
fiaddl
test
ds
aaa
cmp
out
aas
cmc
xchg
sti
cmp
jmp
stc
in
orb
repz
dec
cmc
in
ror
test
addb
rcr
int
xchg
repz
xlat
shr
ss
cmp
hlt
fcmovnu
neg
ret
iret
std
enter
jmp
rcl
jmp
lock
out
sar
repnz
int
std
jmp
ret
stc
call
and
test
lret
and
int
cmp
cmp
fdiv
add
xlat
addb
mov
out
jecxz
in
xor
xor
xor
int
sarl
in
fdivr
shl
call
mov
loop
lret
imul
hlt
cli
shr
icebp
rcl
out
jmp
mov
loopne
mov
cmc
loopne
icebp
enter
icebp
in
cmp
loopne
cmc
sar
hlt
add
mov
test
lret
rcl
ljmp
fst
loopne
fcom
cmp
xchg
jmp
xchg
int
xchg
xchg
ljmp
fcomp
cmp
loope
loop
mov
mov
out
loope
jmp
xor
in
out
lret
dec
aas
rcl
sarb
loop
loope
in
in
out
xchg
std
out
icebp
icebp
into
lret
iret
xlat
sar
cmp
fxch
cmp
clc
cmp
sar
jecxz
aad
cld
jmp
out
xchg
out
mov
out
aam
icebp
xor
lret
into
sbb
xchg
sar
sar
test
mov
div
into
loopne
repnz
das
fcmovu
cmp
sar
xchg
test
mov
mov
mov
jmp
rcl
int
int
fstl
dec
push
aam
jg
roll
jle
ljmp
neg
shr
ret
cs
xor
jecxz
cli
cmc
std
stc
out
xlat
loop
lea
shr
int3
cld
cmp
hlt
icebp
shl
fucompp
shl
mov
out
cld
int3
mov
cmc
jmp
loop
lock
out
cmp
sbb
sbb
fdiv
mov
xchg
fdiv
xchg
in
in
int
cmp
cmp
xor
sbb
rcl
loope
aas
les
ret
int
loopne
sub
out
ss
cmp
in
test
cld
cld
lret
ljmp
xor
out
cmp
aas
fcomp
xchg
addb
fiadds
fldl
ljmp
cld
fucomi
test
cli
clc
addb
sar
in
fisttpl
xor
iret
in
neg
xor
aas
ret
lock
clc
out
int3
xchg
shl
ljmp
out
hlt
into
cmp
loopne
cmc
iret
fucom
not
jmp
lret
mov
int
out
sub
xor
out
into
cmp
incl
add
fildl
ljmp
xor
fmul
rcl
out
hlt
lret
aam
iret
ret
test
cld
mov
cli
lret
loop
out
cmp
stc
sub
sti
xor
out
lret
stc
icebp
hlt
cmp
loope
fisttpll
sti
test
fldl
repz
neg
xlat
int3
shl
fnstenv
shl
test
fcmove
aad
idiv
lret
loop
into
not
loop
jmp
std
in
std
rcr
rcr
fucomp
int3
in
jmp
mov
call
in
fstpt
shl
cmp
filds
fmulp
cli
sti
xchg
bnd
fsub
xlat
cmp
cmp
repnz
in
sti
out
mov
rcl
xchg
out
sub
fldl2e
das
repnz
out
aam
cmp
rcr
cmp
out
jmp
nop
sub
out
ret
in
lret
iret
int
sar
clc
roll
mov
loopne
cmp
xor
lret
in
fsincos
aad
cli
shl
sar
hlt
cmc
lret
fildl
out
xchg
into
out
xor
enter
rcl
in
fsubp
adc
loop
flds
ljmp
out
sub
xorl
rcl
repz
in
in
in
loope
xchg
call
ror
cmp
faddp
cld
into
cmp
loopne
loop
sti
cld
xchg
and
fcom
xor
incl
fdivr
jmp
mov
into
fstl
cli
xor
int3
xlat
fcom
fcmovu
rcl
orl
mov
jmp
xor
into
out
neg
loop
fdiv
loop
aas
jmp
call
fcmovne
or
adc
xor
ret
out
into
repnz
out
fcmove
orl
fmulp
repnz
loop
fxch
out
out
cmp
cmp
jmp
mov
out
cld
lret
ljmp
jmp
xor
cld
out
xlat
cli
xlat
sar
leave
not
aas
std
fdivp
ficoms
aam
aam
fprem
stc
int3
int
ror
rol
rol
in
int3
out
cmc
xor
xor
int
in
clc
cmpb
ret
ljmp
xchg
fmull
sub
ss
int
out
fcmovne
ret
ret
xchg
mov
decb
leave
xlat
cmp
cmp
div
enter
enter
repz
repnz
enter
out
jecxz
fdivr
sar
lock
fld
sti
test
mov
leave
xor
sub
int
loop
in
add
call
mov
hlt
lock
fmul
xor
imul
jmp
lret
ret
enter
fcmovnu
dec
lcall
cmpsl
push
jg
roll
jle
std
shr
xor
filds
std
nop
call
hlt
shr
in
jmp
aad
loop
cmp
aam
loopne
lret
sti
fmulp
test
fists
in
cmp
aas
repz
and
sti
mov
test
mov
out
in
xor
in
ss
hlt
stc
ss
rcl
cmp
icebp
cli
fucom
incb
xchg
xchg
in
xlat
stc
iret
in
out
stc
fdiv
cmp
add
icebp
leave
sti
aas
out
in
clc
mov
xor
iret
rcr
xor
xlat
cmp
lock
lock
loop
fadds
mov
out
call
cmp
adc
push
aad
stc
in
leave
fsubp
lret
ljmp
shl
int
into
sti
clc
idivl
repz
test
neg
cld
xchg
loop
loopne
stc
rol
int3
xlat
xor
aam
shr
clc
adc
test
ret
mov
int
test
int
sub
fxch
icebp
int
sarl
add
loope
aad
in
test
xchg
mov
xchg
aam
aam
jmp
lret
lret
fdiv
cmp
ret
cli
clc
jecxz
out
out
enter
xchg
divl
not
shl
into
fldz
cmpl
xchg
mov
loope
ror
fcmovb
shlb
in
leave
shl
cli
neg
ds
in
incb
into
adc
mov
out
lock
out
cli
lret
fidivrl
into
movb
out
lret
call
rcr
enter
lret
xlat
repz
aad
rcl
in
test
test
jmp
enter
adc
int
in
xor
fsub
jmp
cmp
test
sarl
rcr
ljmp
orl
aaa
shl
repz
jmp
shr
fiaddl
in
jecxz
sti
int3
jmp
in
out
xor
xor
cli
leave
fdivr
jmp
aad
xchg
in
icebp
loopne
mov
fnstenv
call
aas
testb
enter
mul
in
orl
rcl
in
out
cli
hlt
int3
ds
cli
inc
div
dec
leave
cmc
ljmp
fsub
push
int3
aam
ss
das
xlat
in
idivl
repnz
ds
fcomp
jmp
mov
loope
int
adcl
xor
incb
fst
hlt
out
test
in
test
iret
aaa
aam
xor
jmp
ffreep
shl
in
std
mov
call
iret
xor
cld
xor
sar
cmc
rcr
cld
repz
jecxz
int3
fsubr
in
sti
mov
loopne
cs
ljmp
fdivrl
jmp
out
loopne
xlat
jmp
loop
adc
ret
call
idivl
leave
cmc
ror
fadd
enter
loopne
jecxz
repnz
mul
ss
cmp
aas
cmp
int3
cmc
cmc
iret
idiv
fmull
out
decb
nop
cs
lret
hlt
repz
cmp
filds
jmp
fmul
int3
enter
adc
sar
cmp
xor
idivb
cld
lock
leave
in
jmp
lock
loope
xor
sti
fcmovu
ss
jecxz
fdivrl
ret
rcr
loope
sti
faddl
out
lock
leave
out
cld
cmp
lret
ret
shl
in
sub
in
lds
testb
faddp
xor
in
in
sti
fsubp
lds
out
in
std
iret
repnz
xor
ret
fnsetpm(287
ss
in
shl
cmp
cmp
fsub
out
fsubp
mov
nop
icebp
in
clc
rcr
out
les
in
lret
cmp
shl
faddp
call
call
out
ljmp
cmp
xor
cli
add
mov
std
ljmp
jmp
add
add
mov
fildl
adc
jp
jg
roll
jle
lock
mov
out
xor
fsubr
in
cmp
leave
not
xor
fsub
lret
leave
stc
addb
shr
ret
hlt
aas
fadd
iret
in
idivb
in
enter
in
mov
out
ljmp
icebp
shlb
aas
aam
cmp
sti
out
loopne
loopne
loopne
push
out
hlt
out
fdiv
cmp
fcomip
fcmovu
cli
xchg
jmp
dec
sti
in
in
shr
test
cmp
lret
out
in
aam
shl
test
xchg
vpmulhuw
mov
ss
cld
jmp
shl
cmp
cmp
stc
ret
cmc
in
stc
mov
xchg
xor
aam
aad
rol
lret
int
in
call
xchg
jecxz
mov
ljmp
sub
xlat
aam
out
clc
out
filds
clc
out
into
mov
xor
cmc
in
std
cmp
clc
or
call
cli
int3
call
loop
fstp
aam
leave
cmp
call
aaa
not
repnz
icebp
cmp
idiv
decl
jmp
out
icebp
cmc
aaa
clc
test
loope
test
fiadds
xlat
icebp
in
incl
fcmovbe
rcl
xor
cmp
leave
jmp
sti
cmp
icebp
fadd
shl
sti
fucomi
repz
mov
hlt
into
iret
in
std
cmp
repz
icebp
xlat
sarb
loopne
hlt
in
jecxz
enter
in
into
into
xor
ljmp
lock
shl
addl
mov
xchg
mov
jmp
jmp
div
test
fdivp
fimuls
sti
test
ljmp
not
in
fmulp
fstpt
ret
fdiv
mul
aam
cmp
aas
xlat
loope
jmp
xor
xchg
out
fidivl
lds
idiv
int3
stc
xor
incl
cmp
mov
int3
xor
fildll
cmp
hlt
cmp
sti
std
cld
stc
shll
iret
movb
sti
xchg
jmp
fst
out
xor
loope
vpaddq
aaa
sar
icebp
cmp
out
lret
cmp
fmuls
shll
clc
cmp
into
int3
neg
icebp
aad
sar
faddp
jecxz
testl
mov
xor
shr
in
cmp
fdivrs
rcl
out
out
cli
lds
in
xchg
std
push
leave
shr
fcmove
cmp
ljmp
not
xlat
repz
jmp
mov
frstpm(287
notb
cli
ljmp
fdivrl
fdiv
rol
test
jmp
mov
sti
clc
shl
rcl
aaa
lock
rol
stc
test
stc
mov
dec
int3
into
icebp
mul
enter
lret
out
cli
sti
fpatan
not
sar
out
rcl
test
fcoml
test
cmp
aam
xlat
cmp
cli
xor
stc
stc
fcmovnb
test
fcomp
out
mov
xor
repz
lret
rcl
out
repnz
ljmp
sti
rol
lock
cmc
aam
int
call
cmp
loope
cmc
in
rol
addb
popl
add
ljmp
cmp
int
fldl
dec
sbb
xchg
leave
sub
jecxz
fcom
fdivrs
stc
int
jecxz
xchg
les
int3
fistl
rcr
sarb
repz
cmp
in
cmc
cld
jmp
std
repz
mov
test
lret
dec
shl
xor
not
out
fsubr
ljmp
rcr
jecxz
call
jecxz
xor
lock
jmp
fdivl
div
not
icebp
lock
movl
out
mov
div
divl
shl
out
cmc
int3
ss
hlt
icebp
iret
cmc
and
stc
xlat
jmp
aam
cmp
ret
out
clc
lret
rcr
iret
ret
in
jmp
mov
mov
jmp
int3
int
fstp
fstp
mov
in
cmp
int
jg
roll
jle
call
cli
jmp
roll
xor
fmul
int
repnz
xchg
loope
call
mov
out
int3
leave
in
shl
fucomp
fyl2xp1
loop
idiv
ds
enter
loopne
mov
orb
iret
shll
int
lret
sti
ljmp
icebp
addl
in
fimuls
xor
cmp
stc
lock
clc
add
xor
rolb
out
nop
jmp
loop
into
in
ljmp
aaa
sti
loopne
loopne
iret
sti
lock
addb
test
call
out
fnsave
std
xor
out
jecxz
lret
xlat
fucomip
xor
into
cmp
out
ljmp
shl
cmp
cli
aas
icebp
in
loop
lock
repnz
lret
lock
aaa
loope
rcl
loop
fadd
clc
lret
lds
test
out
out
fcomp
les
shl
leave
out
add
jmp
out
vpsubusw
jmp
int3
shl
loopne
clc
repnz
fmulp
cmp
and
out
rol
jmp
jecxz
int3
lea
aad
ss
repnz
test
icebp
mov
enter
les
in
xorb
out
div
sar
aam
std
cmc
int
int
cli
test
ds
jmp
cld
jmp
aam
loope
ret
test
xor
sar
xlat
mov
xlat
mov
ret
in
mov
fadds
iret
xor
lds
aas
clc
aad
iret
std
shl
mov
xlat
ds
mul
out
and
decb
hlt
enter
shl
rcl
cmp
fdivr
ffreep
call
xchg
lock
shl
out
int
fdivrp
cli
stc
fdivr
cmpl
lea
aam
lret
mov
clc
ljmp
test
out
int3
test
int
nop
out
int3
in
cmp
cld
in
cmp
xchg
loopne
fld
leave
in
cmc
jecxz
in
cli
out
fst
icebp
jmp
out
fucom
rcl
addb
ret
fxam
int
loope
int3
mov
ljmp
cli
stc
out
fdivrs
cmp
loop
shr
xchg
in
lds
mov
jmp
out
shl
fucom
fcmovnbe
cld
ljmp
out
test
or
lock
cmc
ss
sarb
ret
fstp
xor
lret
cli
mov
in
rcl
sub
not
out
cmp
cmp
in
ss
ds
leave
int3
in
int
loop
iret
das
das
xor
ds
or
jmp
iret
cli
repnz
ret
mov
in
shl
lock
out
stc
sti
xlat
out
sarl
sar
sbb
jmp
xchg
fildl
iret
enter
in
xor
call
rcr
repnz
repz
in
fcomi
lret
mov
orl
lret
repnz
into
cmp
rorl
fiadds
and
loope
clc
into
icebp
stc
out
sti
stc
iret
call
test
cmp
incb
out
test
sub
jmp
roll
addl
push
int3
loopne
out
aaa
xor
xor
cmc
lret
in
xlat
fnsave
mul
cld
mov
mov
sti
xchg
cmc
xchg
in
cmc
loopne
idiv
cld
cmp
xchg
fld
sub
cmp
int
test
icebp
cmp
cmp
ljmp
cmp
test
fmul
ror
in
xchg
sar
stc
sti
les
leave
int
lret
lock
cmc
loope
mov
in
in
icebp
cmc
fsubrp
xor
xlat
stc
xor
sti
sar
lret
aad
vpavgb
movl
icebp
out
repz
xor
cmp
je
mov
jmp
leave
rcl
ret
ffree
arpl
lea
mov
add
aam
rcl
cld
jmp
aad
decl
in
cli
fsubp
mov
ss
ljmp
jecxz
incl
roll
out
jmp
in
xchg
out
shl
ljmp
cld
cmp
fmul
fisttpll
xchg
nop
jmp
das
shl
xor
inc
cld
ret
ror
neg
out
das
repnz
call
stc
sarl
jecxz
testl
mov
clc
loope
repnz
int
mov
std
icebp
repz
test
jecxz
orl
sub
or
int
dec
fildl
orb
xchg
aad
clc
jmp
test
fcmovb
rolb
fldl2t
orl
out
neg
fsubr
repz
lret
in
loope
xor
cld
mov
rcr
xchg
enter
lock
ljmp
icebp
xlat
cli
mov
mov
mov
mov
in
cmp
shl
imul
cmc
xor
aas
enter
cli
aas
cli
test
out
loopne
xchg
ljmp
inc
repz
movb
test
ficoms
shl
out
into
lret
jmp
cmp
sar
out
test
mov
jmp
cmc
loopne
in
lock
cmp
ret
in
aad
cli
hlt
addb
rcl
ror
jecxz
out
out
fiaddl
jecxz
cmc
jecxz
jmp
jmp
hlt
ror
xor
out
leave
repnz
aas
rolb
call
sub
nop
mov
fcmovnu
orl
fdivrl
loop
into
ss
roll
std
mov
mov
test
cmp
lret
cli
sti
loopne
cld
sti
cmp
addl
enter
loopne
icebp
out
out
call
stc
int
in
loope,pt
loope
repnz
xchg
cli
int3
jmp
in
xchg
xlat
shr
in
rcr
imul
jecxz
rcr
inc
fcmovne
mov
std
xchg
cmp
into
rcr
cmc
icebp
int3
xor
test
fnstsw
mov
fucomip
jmp
mov
aam
cmp
jmp
call
aam
repz
test
cld
cli
in
dec
out
out
icebp
lock
ljmp
rolb
mov
out
fldl
in
loope
ss
iret
repz
jmp
cmp
out
lock
test
les
lock
in
out
loop
ljmp
cmp
loop
repnz
cld
fisttps
nop
mov
rcr
out
mul
out
out
sar
int
not
sbb
ds
or
fcmovnu
iret
mov
xchg
fsub
call
iret
leave
fsubrp
ret
lock
rol
lret
mul
or
out
mov
jecxz
lret
sti
int3
sar
iret
ret
test
hlt
loop
out
fcmovnu
lret
out
xchg
ror
lret
iret
shr
in
xlat
lret
in
loope
cmp
leave
aad
fucomip
div
mov
mov
xchg
repnz
sar
cli
cli
enter
std
test
loope
loope
ret
in
out
call
stc
aaa
ret
fucomi
call
test
cld
ds
aam
rcr
stc
lret
loop
les
lock
xor
jmp
xor
aas
out
mov
repnz
xchg
test
rcr
cmc
out
sar
in
out
out
shl
cmp
lret
cmp
faddp
aad
out
mov
int3
repz
repz
icebp
out
xor
xor
ds
loop,pt
rol
mov
repz
stc
std
fadd
in
xchg
mov
icebp
ljmp
out
aam
fldpi
repz
shl
xchg
flds
pop
jmp
mov
jmp
into
rcl
rol
fcomp
lahf
mov
mov
bound
roll
jle
mov
ffreep
stc
shr
xlat
imul
fcmovu
rcr
loopne
repnz
in
ljmp
sti
xchg
icebp
int
jecxz
leave
sar
fucomi
icebp
enter
out
sti
repz
lock
repz
int3
in
adc
rcl
hlt
xlat
int
aas
idivb
fcomi
xor
call
jecxz
xchg
stc
call
xchg
xor
cmc
xor
in
sbb
test
roll
orl
out
in
xor
xor
fnop
xlat
dec
jmp
fcmovu
loop
loop
test
addb
test
ljmp
fdivr
clc
cmp
int
loopne
aas
in
loopne
xlat
call
fstl
in
in
xor
sti
in
fucom
repz
orb
nop
jecxz
xchg
xchg
das
xlat
jecxz
iret
sarb
cmp
cmp
repnz
test
ret
leave
enter
loop
xchg
cmc
repz
sar
cmp
lret
out
fcmovnu
test
ret
ljmp
incl
lock
neg
cli
cmp
stc
loope
xor
idivl
mov
jmp
call
leave
repnz
cmp
cmp
lock
aas
in
jmp
in
lock
lret
xchg
hlt
aam
das
jmp
lock
test
rcl
fiadds
mov
mov
iret
rcll
sar
cmp
lret
and
cmpl
fadd
mov
jmp
std
repz
call
in
cli
cmp
cmp
cmp
filds
xchg
mov
out
mov
repnz
fprem
lret
int
xlat
xor
idiv
loope
fpatan
aam
out
imul
filds
faddp
icebp
fld
in
out
ss
cmc
lock
sarb
enter
enter
xchg
mov
xor
cld
ds
cmp
not
shl
jecxz
mov
in
sti
loopne
sub
jecxz
in
cmp
out
cmp
int
aas
ret
shl
stc
loopne
faddp
mov
mov
ss
into
test
shl
rcr
jmp
loop
mov
lret
in
icebp
into
in
int3
in
icebp
fcmovne
fidivrl
sar
cli
cmc
hlt
call
loopne
ljmp
ror
jecxz
jmp
jmp
cli
stc
addb
mov
sbb
out
adc
addl
int3
lret
cld
cmp
faddl
addl
ret
lds
in
in
ret
test
fidivrs
out
std
vshufps
icebp
xor
cmp
lret
sar
loop
ret
fucomp
xchg
out
call
shll
lret
cli
repz
aas
xor
add
shl
shl
out
mov
xchg
jmp
enter
ss
xor
test
out
and
icebp
xor
jmp
enter
fdivrs
clc
cmp
xlat
rol
hlt
faddp
jecxz
ljmp
ljmp
aam
repnz
std
fdivrs
jecxz
rcr
inc
mov
leave
stc
ret
cli
loop
test
mov
ret
cmp
clc
in
cmp
cmp
call
cli
cld
clc
cld
jmp
jmp
repz
jecxz
jmp
cmp
faddl
movb
iret
xchg
fsubp
ljmp
std
in
lock
sarl
ss
rol
aas
leave
int3
enter
jmp
jecxz
shll
leave
xor
shl
ffree
rol
ret
lret
faddp
fisttps
mov
in
repnz
out
leave
not
rol
cmp
cmp
jecxz
testb
in
loop
in
icebp
cmp
stc
aaa
fcmove
adc
fsubr
idiv
mov
out
iret
into
loope
int
clc
cmp
cmp
je
mov
jmp
push
mov
sub
mov
push
movl
cmpl
je
cmpl
jne
push
pushl
pushl
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
movl
cmpl
je
cmpl
jne
push
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
add
jmp
into
aas
rol
rcl
aam
pop
xchg
and
repz
addr16
push
add
fnstcw
xor
clc
test
loopne
shr
out
leave
sbb
out
lret
out
aaa
icebp
sti
out
aam
cmp
fucomip
hlt
shl
xchg
out
cmc
xchg
mov
xchg
hlt
shr
xor
lret
icebp
jmp
f2xm1
les
lock
in
and
loop
out
aad
lret
sti
in
repnz
xlat
ror
add
rol
std
and
int
enter
into
in
call
iret
jmp
int
roll
enter
faddp
xchg
repnz
in
mov
not
cli
aaa
fcmovbe
lret
std
xorl
ret
cli
out
ljmp
enter
xchg
jmp
lock
aaa
leave
cmp
icebp
ret
loope
icebp
call
xchg
in
bnd
leave
lock
cmp
aaa
in
icebp
cld
int
sbb
cmc
jecxz
mov
mov
xlat
xchg
fsub
int
fucomip
cmc
xlat
shl
int
incb
cmp
cli
cli
fisttpl
jecxz
test
fidivl
out
sarb
leave
roll
mov
hlt
clc
xchg
call
xchg
lock
nop
ror
ret
aam
xlat
aad
cld
sti
idiv
loopne
std
cmp
fstp
fucompp
in
iret
iret
loopne
jmp
xor
in
leave
fxch
cld
fcmovnb
jmp
int
cmc
loop
xchg
testl
xor
xor
cmc
int3
hlt
into
int
hlt
fadd
rcr
hlt
xor
loopne
cld
fucompp
popl
divb
sti
fidivl
sarl
repz
in
add
rol
repnz
ret
mov
sti
in
jmp
in
ljmp
fcmovbe
ljmp
fsubp
fdiv
stc
rcr
enter
out
in
out
out
shlb
aad
in
cmp
sar
ror
out
not
iret
out
aad
lret
cld
xchg
leave
test
lret
cmp
into
clc
fucomip
xor
cmp
icebp
xchg
cli
stc
out
mov
add
mov
ljmp
int
stc
fadd
cld
cmp
aam
out
mov
in
mov
mov
xlat
hlt
fcmovbe
cmp
aad
iret
cmp
cld
loop
cld
neg
loopne
out
lock
jmp
xor
out
xor
int
in
icebp
roll
fucomip
call
loope
ss
xor
sarl
xor
cmp
fcmovu
add
cmc
and
icebp
sub
jmp
iret
leave
lock
loop
jmp
int3
out
jmp
sbb
test
aad
ret
cmc
in
mov
lock
aaa
lock
call
in
cmp
clc
rcr
in
sbb
sti
mov
loopne
cmc
sub
in
leave
in
cmp
int3
out
xor
sarl
jecxz
fdivr
addb
cli
in
hlt
lret
aam
xor
fxch
aam
lock
aad
out
lret
hlt
in
xor
das
in
shrb
out
out
fmul
sar
out
repnz
xchg
in
jmp
repz
rcr
ss
fdivp
icebp
cmp
ds
ffreep
div
add
out
mov
leave
adcb
call
leave
in
fcmovnbe
cmp
cld
sbb
fucomip
into
xchg
lret
fdiv
mov
int3
int
in
cmp
out
cmp
clc
cmp
sub
loopne
cmp
nop
leave
out
mov
clc
xor
idivb
into
ss
aad
into
shl
idiv
roll
fmuls
shr
loopne
clc
xor
sarb
rcl
lret
clc
loopne
iret
rolb
int
out
xchg
icebp
loopne
iret
cmp
leave
clc
xor
into
aaa
int
test
not
clc
ret
jecxz
leave
out
lret
mov
iret
aaa
cmp
in
shl
icebp
loopne
jecxz
cli
addl
sti
fcomp
sti
out
jmp
ret
int3
in
aad
fdivrs
fdivr
sub
lock
enter
ljmp
test
ljmp
imul
aam
loopne
loop
fcomip
sbb
call
adc
into
mov
hlt
int3
jecxz
cmp
cmp
xlat
movl
int
xchg
lock
lret
enter
int3
cmp
shr
xlat
lret
div
xor
lock
cmc
cmp
aaa
faddl
flds
ljmp
out
in
aaa
sub
stc
iret
xor
jmp
fiadds
orl
jmp
movl
cmpl
je
cmpl
jne
push
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
mov
sub
sub
mov
or
jmp
ret
fmul
fstp
xchg
aaa
pop
adc
mov
jle
add
test
ret
call
into
jmp
hlt
cmpb
sub
mov
sar
mov
lret
fdiv
in
std
shlb
loope
shl
leave
out
sti
out
icebp
add
hlt
loopne
shl
leave
ss
fmul
cmp
fiadds
ljmp
out
int
cli
cmp
sar
xor
xlat
cmp
rcl
fdivrp
in
loop
loope
fcomp
test
fsubrp
mov
fcmovnbe
fcmovb
out
fneni(8087
loope
aam
rcl
orl
jmp
xor
clc
fnstcw
out
stc
cmp
cmp
hlt
loope
repnz
mov
mov
adcb
loope
xor
aad
fldz
icebp
ljmp
shl
std
incb
out
jmp
mov
rol
vshufps
ljmp
hlt
inc
jmp
mov
mov
loop
jmp
icebp
lock
xor
sarb
cmp
iret
loope
cmc
fmull
enter
cld
out
jecxz
lock
jmp
fnstenv
fdivrs
cmp
out
ljmp
mov
ss
cli
sti
fdivrp
in
sub
fxch
shl
stc
xchg
cmp
in
xorl
xor
ss
cli
fcomp
int
xor
shl
out
ret
xchg
fdivrp
lret
test
and
aad
iret
xor
out
incl
cmp
ret
cli
jecxz
mov
les
lock
int3
shl
xlat
cmp
aam
clc
cmp
cmp
rolb
in
cmc
in
jmp
out
loope
rcl
fdivrs
xlat
xor
repz
int
in
iret
frndint
cmp
xlat
int
mov
out
fcmovnbe
xchg
loop
xlat
rcl
cli
cmp
hlt
rcr
fdiv
sarb
test
out
nop
loope
leave
fxch
out
ljmp
repz
shr
in
sti
jmp
repnz
out
test
hlt
loope
rcr
inc
xchg
out
repz
loope
int3
rol
xor
in
fcom
idiv
test
loopne
xchg
div
lret
int
out
and
rol
ret
cmc
xor
in
fcom
hlt
cld
loop
ret
fdivrp
or
enter
enter
out
jmp
fdivr
in
fcmovu
xor
jecxz
mov
xchg
mov
lock
rol
lret
fmul
sti
ds
int
adc
cld
in
hlt
int
lret
fadd
lret
in
in
aad
out
out
rcr
jecxz
aas
sbb
mov
ljmp
fcomi
aad
sub
sar
std
fcom
int3
fdivp
cmp
loop
int
out
rorb
in
clc
in
icebp
xor
cmp
cli
repz
fxch
call
fisttps
aad
cmp
ror
rcl
fnstcw
ret
test
jmp
std
in
xchg
xor
in
shlb
icebp
in
jmp
ds
ret
cmp
aas
test
xchg
clc
xlat
xchg
shr
int
and
fcmovbe
clc
in
into
in
rolb
loopne
adc
int3
loop
fisttpll
xor
cmp
out
xlat
std
int
aas
test
fcmovnu
in
enter
in
in
xchg
loop
enter
ror
shlb
icebp
fdiv
repnz
rorl
mov
mov
in
lret
aaa
out
test
int3
out
fdivr
ret
cmp
cmpb
aam
adc
xchg
ljmp
lret
xor
clc
fadd
sbb
enter
xlat
xlat
loope
incl
out
out
hlt
fcmovnbe
sar
int
fdivrp
sarb
fdiv
jecxz
shr
test
leave
out
out
test
mul
cmp
fdivr
repz
cld
cmp
fld
fcmovb
cli
not
nop
cli
test
xor
cli
jmp
rcr
flds
ljmp
icebp
les
shll
in
cld
not
repz
repz
cmp
movl
into
test
repz
int
loop
cld
cmp
ds
hlt
sbb
test
in
fdecstp
ret
fcmovnbe
hlt
xor
rcr
cmc
cli
out
inc
ds
loope
jmp
xchg
repnz
xor
std
ss
cmp
adc
xor
mov
or
mov
mov
adcl
add
xorl
jmp
ror
lret
int
int
bound
and
jg
push
add
ret
clc
int3
cli
xchg
int3
jmp
call
cli
lock
in
aas
loop
cmc
cld
test
testl
ffreep
out
cld
sti
aas
icebp
in
loope
fcmovb
hlt
xchg
idiv
in
lret
fdivr
nop
std
fcomi
repz
aad
aaa
cmp
fcom
rolb
aas
std
fcomip
fucomp
leave
imul
in
mov
ljmp
cmp
in
cmp
shr
icebp
shl
ror
rol
ret
idiv
out
incl
ror
hlt
out
int3
int3
aad
ljmp
xlat
fcmovbe
les
out
lret
iret
xchg
ss
cmc
repnz
lock
aaa
adc
leave
out
loopne
cmc
aam
int
ror
xor
testl
into
cli
decl
aad
repz
fidivrs
iret
fcmovnb
aad
jecxz
out
push
std
clc
ljmp
rclb
ret
out
repz
lock
lret
cmp
xlat
sar
testl
xchg
cmp
lret
std
loope
icebp
sub
rol
hlt
repz
ljmp
iret
int
in
repnz
sti
out
cmp
neg
lock
aad
rcr
xchg
in
or
in
not
icebp
in
fcmovnu
aaa
ds
cmp
test
xchg
fisttpll
int3
repnz
sti
not
cmc
cmp
clc
repnz
aad
fcmovbe
mov
xor
shl
xchg
xor
out
leave
jmp
div
jmp
cmp
sar
idiv
shr
addl
int
sti
in
ljmp
lock
sbb
rol
shl
decb
repnz
xchg
int3
stc
icebp
cmp
leave
ljmp
test
in
fcom
fimull
loope
cmc
shrl
shl
into
jmp
ds
ffreep
cmp
mov
ljmp
mov
divb
in
sti
out
out
rol
ror
cmp
loop
out
decb
out
loop
jecxz
cmp
xlat
repz
ror
cld
loop
adc
out
xchg
out
mov
loope
in
test
cmc
cmc
lock
cmp
stc
fld
jecxz
xlat
mov
xchg
xchg
shr
aas
hlt
iret
aad
in
int
cmc
rcl
repnz
shl
fmuls
test
fcmove
loope
aam
xor
idiv
cmp
sar
idiv
cli
addl
fmul
lret
in
nop
filds
fstpt
cmp
sarb
sti
aam
cmp
xlat
icebp
aam
ret
in
lret
stc
xchg
xchg
ret
out
lds
cmp
cmp
iret
lock
addb
sti
lock
mov
loop
shll
jmp
imul
repnz
fiaddl
in
lret
cld
into
xor
out
out
lock
aas
loopne
xor
mov
call
or
iret
into
ffreep
ret
xor
out
icebp
cmc
ss
lret
flds
lret
lds
loopne
xlat
leave
fcmovu
repz
aaa
hlt
clc
lock
sti
xchg
movb
loope
cs
aad
fnstsw
ljmp
out
mov
jmp
in
fld
sti
fdivrp
xor
loopne
out
cld
hlt
fst
aam
mov
enter
mov
jmp
repz
hlt
xor
std
ds
cmc
jecxz
cli
mov
fiaddl
out
into
mov
loop
ss
shr
leave
clc
int
xor
sti
aam
not
test
fsubp
xchg
xchg
xabort
in
lock
cld
cmp
loope
call
imul
cli
xor
jmp
fcmovb
repz
icebp
cmp
in
cmp
out
rorb
test
in
iret
lret
xchg
int
lock
lock
cmp
out
or
xor
hlt
movl
icebp
ljmp
xor
ds
fidivrs
loopne
ret
fldl
out
fildl
xchg
in
jmp
jmp
jmp
loopne
test
shl
cmp
jmp
into
nop
mov
repz
icebp
cmp
fdivr
lret
sarl
stc
shr
in
fisttpl
xor
lock
clc
notl
mov
int3
arpl
sub
mov
mov
add
mov
xor
negl
movl
adcl
jmp
ror
int3
mov
cmp
jne
jle
add
loopne
hlt
fsubp
xchg
ds
fcmovu
in
cli
shl
shl
jecxz
aaa
hlt
cmp
leave
jmp
fnsave
cmp
sti
leave
loop
out
mov
lret
fisttpll
call
ds
rcl
cmpl
clc
nop
out
sub
jecxz
sar
cmc
in
cs
int3
hlt
mul
ret
or
movl
jmp
out
repnz
in
cld
lock
cmp
fnstsw
hlt
xlat
cmp
dec
cld
repnz
mov
shl
into
xor
fcom
test
jecxz
vpsllq
sti
cmc
clc
jmp
test
in
iret
xor
roll
aaa
xlat
aad
and
test
stc
in
in
in
iret
test
xor
repnz
jmp
add
enter
lret
dec
lock
jmp
in
ss
cmp
repz
not
vpavgw
loope
icebp
out
icebp
divl
icebp
ret
divb
ror
adc
shl
neg
stc
sti
in
mov
out
in
out
out
iret
hlt
loope
loope
xor
xlat
xor
sarb
loopne
sbb
leave
lret
in
rcr
test
decl
xor
cli
leave
shl
cmp
cmc
out
filds
fdivr
cli
call
fsub
fdivrs
xor
fdivr
cmp
testb
leave
decb
cmp
shlb
fucomi
icebp
fscale
int3
hlt
fildl
faddl
nop
out
orb
leave
into
sti
call
cmpl
ror
loop
in
cli
leave
xchg
jmp
out
cli
xor
fst
xlat
cmp
out
out
mov
cld
int
in
cld
shl
ret
aad
jmp
jmp
fdiv
orb
out
enter
ljmp
ss
xlat
fucomp
aas
jmp
rcr
loope
loop
cmpl
and
mov
lret
movl
int3
ds
aam
loope
test
std
mov
test
vprotw
roll
cmc
fdivs
fstpt
fnop
repz
sar
into
rcr
cmp
in
lret
sti
mov
test
shr
repnz
cmp
xor
dec
addb
jecxz
sti
jecxz
mov
in
loopne
shlb
idiv
ljmp
in
cmp
fcmovu
leave
decl
mov
ror
in
ss
cmp
cli
aas
ds
sti
test
out
call
in
test
fcmovnbe
cld
hlt
int
cmc
hlt
sar
aam
sar
fadd
ret
dec
enter
out
fucomip
clc
rcl
ret
int
cmp
test
flds
mov
call
out
xlat
fidivl
in
stc
fst
icebp
ds
jecxz
in
in
mov
xchg
mov
shr
in
xor
loop
in
fcmovb
cmp
fsubr
push
fdiv
ds
out
ljmp
loop
jmp
aam
cmp
cmp
xor
sub
sar
cli
mov
mov
mov
ret
lds
out
jecxz
out
fcmovne
cmp
cmp
jecxz
xchg
int
fsub
lret
jmp
leave
xor
jmp
loope
fdivrs
inc
out
or
std
lret
xchg
lret
in
fmul
xlat
int
cld
leave
cmp
stc
cmp
cmc
std
jmp
out
mov
mov
shl
repnz
loop
xor
shr
hlt
xor
loop
rcl
mov
cmp
into
lret
mov
xchg
repnz
leave
mul
repnz
shl
cli
repz
cmc
fsubr
hlt
icebp
ret
call
call
mov
xchg
hlt
leave
call
stc
leave
or
fcomi
orb
out
xchg
repz
call
cli
aam
jecxz
out
movb
enter
test
jmp
das
fdivr
cmp
cmp
ret
repnz
or
cld
hlt
out
hlt
icebp
loop
xor
out
fucomi
aad
repz
in
jecxz
test
loopne
enter
jmp
adc
shll
cmpl
stc
out
idivb
sbb
out
lret
lret
lret
out
out
ror
cmp
stc
fxch
jmp
icebp
ret
in
and
out
call
fdivp
leave
addb
and
lods
bound
inc
arpl
add
movl
jmp
cmp
movl
jne
jmp
aam
aam
ds
adc
fwait
sahf
jp
jle
add
ffreep
xor
cmp
in
cmp
fucomip
incb
lret
neg
out
mov
shl
xor
bnd
cmp
hlt
mov
out
fadds
fldl
ror
call
stc
loopne
aas
icebp
fsin
fcmovnb
jmp
xchg
repz
stc
sti
push
call
aam
aad
shl
in
jecxz
fisttps
call
out
xor
cmp
rcl
sbb
push
fmul
stc
rcr
loopne
std
std
in
test
out
in
ss
fdivs
lret
ss
fsubr
testb
xchg
nop
rcl
jmp
aas
int3
das
lret
ret
xor
in
hlt
std
repz
lock
leave
stc
fsubr
ret
mov
loopne
loop
aad
idiv
cmp
cmp
jecxz
call
incl
in
in
lret
repz
rcr
loopne
cmp
fcomp
neg
aam
mov
fsubrp
and
into
das
xor
fcmovbe
cmp
add
jmp
sti
xchg
mov
in
xchg
repnz
call
sti
jecxz
rorl
mov
test
jmp
out
out
cmp
aam
jmp
cld
cmp
stc
div
lret
cli
int3
lret
sub
push
call
cmp
aaa
fdivp
cmp
ss
div
call
mov
into
call
fucomp
imulb
enter
lock
loope
cld
cmpb
stc
test
xchg
lock
lock
rcr
xor
repz
shl
cmp
rorl
cmc
mov
fucomip
loope
ljmp
out
aam
cmp
jecxz
add
lret
fmul
enter
test
ljmp
repnz
fucomp
repz
fcmovnu
enter
ljmp
loop
les
fstpt
enter
leave
rcr
fst
fyl2xp1
shl
out
out
loopne
lret
in
loop
xor
fdivs
ljmp
xor
not
div
out
cmc
cld
out
in
nop
cmp
fsubr
ljmp
lret
addb
enter
int
sub
aam
xor
xor
icebp
rcl
loope
stc
xchg
loopne
in
in
sub
mov
decl
cmc
sarb
leave
fcmovnbe
cmp
out
loopne
aad
xlat
mul
in
jmp
loopne
xor
lret
call
loope,pt
rcr
hlt
fcmovnb
fcom
roll
shl
iret
orb
aaa
fstp
enter
in
div
clc
std
aam
xor
test
into
lret
fdivp
jmp
cli
repz
test
shl
fdivr
loop
in
lock
in
out
jmp
jmp
in
rcr
repnz
repnz
icebp
test
ffreep
shl
mov
mov
jecxz
in
in
imull
hlt
xor
inc
enter
in
cmp
cmp
xlat
fildl
sti
popl
nop
int
stc
fnsetpm(287
cmc
repz
out
shl
loope
fcmovu
fst
in
lret
sti
enter
fsubr
mov
rcl
hlt
mov
iret
roll
fld
lds
ljmp
in
rcr
aaa
rcr
ds
cmp
rcr
mov
lock
cs
xor
cmc
xor
mul
test
repz
frstpm(287
xchg
shl
repz
ljmp
loop
out
int
ret
fcom
mov
repz
aad
xchg
int3
in
loop
xchg
int3
into
int3
xlat
in
in
lock
cmp
stc
ss
add
fcmovb
stc
mov
in
int
xchg
shl
sar
in
das
neg
call
enter
neg
test
lock
in
icebp
cli
rolb
aad
clc
std
rcr
call
ljmp
aaa
fdivs
cmp
xor
cmp
lock
neg
decl
xchg
mov
xchg
cld
fisttps
mul
in
cli
leave
iret
lock
in
repz
lret
nop
jecxz
xchg
xchg
shl
loop
sti
xor
into
lret
fdivr
loop
fcmovnb
loopne
in
in
int3
mov
xchg
test
ror
hlt
hlt
ss
xor
jecxz
sar
cld
clc
mov
mov
movl
mov
mov
mov
mov
jmp
int3
ret
int
mov
pusha
das
sub
jg
jle
add
in
mov
loope
xchg
mov
xlat
out
in
aaa
cli
fdivr
rcl
xchg
add
out
incl
enter
fcomi
rcl
fsubp
in
sub
aad
cli
fadd
test
mov
xor
xlat
icebp
xlat
fsubrp
fcmovu
jmp
addl
fsubr
lret
ljmp
shr
idiv
cmp
xlat
stc
in
in
aam
repz
clc
out
fisttpll
ljmp
cmp
cmpb
repz
clc
iret
shl
rcl
stc
stc
loopne
leave
ror
jmp
aad
loop
repnz
aad
ds
int3
hlt
cmc
loope
out
mov
call
cld
mov
fcomip
lock
xor
rcr
lret
incb
incb
stc
test
jmp
stc
jmp
dec
shl
fsubp
cmc
cmc
ds
loopne
cli
sti
sbb
jecxz
div
ror
aaa
cmp
cld
jmp
out
fcomi
idiv
out
fchs
into
mov
xchg
xlat
loope
in
iret
faddl
cmc
fstp
aam
lret
loop
jecxz
std
mov
out
in
stc
cmp
repz
in
shr
lret
out
xchg
call
std
xchg
in
in
call
aam
cmp
aas
adc
icebp
out
decb
std
call
jecxz
lock
cmp
ror
lret
incb
leave
lret
cmp
hlt
out
jmp
xor
enter
jmp
cmp
rcr
int
enter
cli
out
mov
mov
xchg
mov
out
cli
xor
call
sarl
cmp
rol
mov
sbb
int
std
repz
mov
cmp
repnz
ds
in
decb
jecxz
ror
mov
jecxz
frndint
fxch
cmp
shr
rol
xlat
cmc
div
stc
xchg
test
in
mov
xor
int
rolb
mov
int3
int
mov
sub
sub
ss
out
clc
xor
lock
out
loope
call
call
call
icebp
int3
xor
clc
int
cld
or
sar
cld
std
in
in
inc
lret
xor
in
repz
idiv
lret
add
inc
sar
fxtract
std
enter
jecxz
pop
in
clc
lock
cld
sti
fdivs
jmp
shl
incb
in
into
lock
out
test
lock
clc
xor
xor
std
iret
ds
faddp
rcr
stc
ret
adc
test
fmull
xor
xor
aam
xor
clc
les
lret
sbb
out
stc
repnz
cli
cmp
fsub
aad
fldl
loop
fdivr
repnz
popl
repz
cmpl
ret
aad
ret
stc
test
loope
repz
repz
call
aam
aas
shl
jmp
fsqrt
test
clc
mov
fdivr
out
lock
in
lret
int
sti
sbb
int
hlt
rcl
xlat
clc
xchg
cld
out
in
repz
ret
xor
shl
imul
leave
lock
cmp
icebp
hlt
fadd
fisttpl
mov
xchg
out
aad
lret
xor
jmp
rcl
into
loope
dec
jmp
mov
cld
cld
loope
hlt
test
out
sarb
repnz
cmp
aad
addl
call
xor
ret
frndint
repz
shl
aas
test
incb
cmp
int
loop
loop
divl
out
clc
out
cmp
rol
lret
icebp
shl
icebp
push
mov
fdivr
lock
loope
cld
rcll
div
stc
iret
hlt
fdivrp
in
rol
std
jmp
mov
xchg
xchg
xorb
sub
idiv
out
int
sti
aas
idiv
out
rcl
jmp
loopne
sub
cmc
cmp
into
int3
cmp
cmp
std
roll
mov
fmull
mov
xor
leave
call
cli
ret
sub
fdivp
clc
sbb
testb
loopne
mov
shl
out
in
idivb
hlt
rcr
cli
out
sbb
loop
jecxz
out
iret
shl
mov
stc
cmp
jmp
mov
jmp
cmp
jmp
aad
aad
aad
aad
push
push
scas
movl
jle
int3
call
ds
and
loopne
jmp
into
rol
xor
xor
ror
out
aaa
cmp
sti
test
idivl
rcl
leave
les
loopne
lock
fdivr
out
rcr
repz
sar
testb
loop
lret
shr
out
out
out
into
in
std
cmc
iret
cmp
jmp
loopne
ret
fmul
repz
mov
fcom
loop
iret
out
idivl
shl
cmp
lds
mov
fmulp
test
lret
nop
out
out
clc
enter
xor
into
lock
call
in
mov
cli
fiadds
in
xor
fdivr
rol
or
out
int3
int
sti
out
lock
hlt
iret
jmp
in
xor
rcl
in
ret
loope
out
cli
xlat
fucomip
out
std
jecxz
call
cmp
ss
testl
cld
mov
in
lock
icebp
into
out
iret
fdiv
repnz
int
ss
in
imul
mov
jmp
fmull
iret
xor
aam
xor
cmp
clc
call
fsubr
faddp
cli
in
decb
out
cmp
divb
loopne
aaa
cmp
ret
clc
loop
movl
orl
hlt
roll
sbb
std
ljmp
in
test
lock
jecxz
shr
dec
shl
ljmp
movb
xchg
in
out
test
shl
aaa
in
jmp
sub
xlat
xlat
aas
cmp
fcmovnb
cli
lret
mov
in
nop
test
mul
leave
sar
not
inc
not
in
test
faddl
xchg
test
cld
incb
loop
in
shr
cld
cmp
jmp
mul
iret
sti
cld
int3
loop
out
fucomp
adc
les
hlt
rcr
aas
out
loop
hlt
xchg
loop
in
shr
jmp
int
xchg
xor
repz
xor
fmulp
ret
addl
f2xm1
fdivp
loop
in
shr
ljmp
aas
cmp
sti
in
incl
mov
enter
mov
call
std
fucomp
lret
aas
std
ds
jecxz
aas
stc
hlt
testb
int
into
roll
int
repz
out
icebp
ds
cmp
ds
aad
jmp
out
fldl
int
aam
sub
xor
enter
out
hlt
cmp
loopne
rolb
stc
in
rclb
mul
fldln2
ss
ror
std
in
cmp
in
fdivp
out
jmp
jmp
or
out
sub
in
in
call
iret
iret
repnz
jecxz
hlt
testl
xchg
mov
stc
fsub
ss
in
xor
cmp
not
ds
hlt
sbb
lock
repz
cmc
jmp
idivb
test
shl
test
leave
decl
call
loope
lock
cld
cmc
leave
fdivrl
idivl
shlb
iret
xchg
fcmovnu
rol
mov
nop
cld
xchg
mov
iret
shl
fmul
repz
rcl
ror
aam
test
cli
xchg
sti
mov
int3
into
xchg
shll
lret
cmc
fdiv
aad
div
adc
cmp
jmp
out
into
fsub
decb
out
in
xor
cmp
neg
ret
loop
out
mov
fcmovnu
call
shlb
in
out
aad
ss
cmp
cmp
cmc
hlt
loopne
xchg
out
xchg
fildl
out
rcr
ret
loopne
xor
xor
aaa
fdivr
shl
faddl
enter
loope
xchg
iret
mov
xchg
cs
rol
lret
in
std
jmp
std
stc
loope
cmp
std
hlt
enter
jmp
movl
fucompp
repz
aam
sti
cmp
int3
fnstsw
aam
leave
faddl
xchg
mov
leave
lock
hlt
fistpll
stc
icebp
shl
out
ret
jmp
xchg
loopne
rorb
lock
int3
rcr
aad
fcom
fxch
hlt
lret
jmp
ret
fucomp
in
jecxz
xor
fmul
fldz
aas
shll
aam
cmc
icebp
shl
loop,pt
mov
in
incb
in
aad
icebp
xor
cmp
repnz
shl
orl
nop
xchg
not
out
enter
sbb
add
inc
clc
jmp
aas
into
lret
leave
aam
dec
jo
mov
or
jle
add
xor
sub
in
lret
incb
addl
loope
mov
in
xor
stc
enter
aam
enter
cld
test
fcomi
out
add
int3
out
xchg
loope
mov
rcl
cmp
hlt
aaa
xlat
jmp
cmp
shr
aas
sub
cmp
test
in
lret
mov
in
clc
fucomp
int
leave
dec
fcomp
bnd
ret
cld
loop
ret
loope
aad
xor
cli
iret
jmp
fsubp
cmp
in
into
cmp
cli
lret
in
in
fucomip
repnz
into
out
repz
in
int3
dec
clc
clc
jmp
xchg
aad
mov
or
sbb
loop
clc
xlat
cmp
xchg
aam
cmp
jmp
lret
into
aaa
in
xor
fcmovnu
enter
ret
lock
and
orl
notb
out
out
push
fldz
lock
aam
aad
lret
xchg
jmp
xor
aam
hlt
hlt
jmp
sarl
aas
int
aas
out
loopne
jecxz
leave
clc
testb
xchg
fiadds
call
inc
jmp
test
sti
sti
test
incb
icebp
lret
out
lret
rcl
int
adc
iret
jmp
aad
roll
leave
lret
faddl
aaa
aam
jmp
xor
xor
rcl
aad
sarb
out
ljmp
sub
out
cli
ljmp
out
cmc
cmp
shl
addb
xchg
icebp
sti
int
icebp
xchg
out
xor
int
divb
cld
cmpl
fcomi
cli
jmp
xchg
aam
out
xor
cli
ss
loopne
aad
repz
in
xlat
mov
mov
add
sar
ss
enter
cmp
rol
repz
fcmovnu
out
jmp
rcll
aam
icebp
leave
dec
cmp
test
in
lds
ret
fiaddl
jmp
fsub
fdivr
xor
shl
xchg
in
faddp
lret
jecxz
ljmp
out
loopne
clc
ss
clc
aam
fdivr
neg
ret
cmp
mov
lret
fsub
popl
lock
jmp
cmp
cmp
shl
cmp
int
lret
in
lret
xchg
cmp
icebp
icebp
cmc
cmp
rolb
jmp
cmp
mov
ret
xor
cmp
fsubp
rcr
cmp
call
leave
fsubr
aas
in
lret
int3
xchg
fdivp
into
bnd
lock
in
ljmp
icebp
xlat
out
in
decb
xchg
in
test
cs
enter
xlat
repz
ror
faddl
testb
fucomip
adc
xchg
in
ss
ret
aad
ljmp
xchg
xor
fcom
std
mov
movb
xor
ss
lret
loopne
cmp
sbb
aas
orl
dec
out
ret
aam
sti
xor
imul
rcr
shl
fldl
mov
sti
into
xor
fmul
sar
xlat
int3
ret
cmpb
loopne
jmp
fldl
cmc
lret
leave
aaa
fnstenv
cmp
xlat
ret
stc
out
xlat
fisttps
int3
sar
out
lock
ljmp
int3
in
cmp
ret
neg
jecxz
mov
or
out
lret
xchg
xor
out
int3
fcmovnu
fildl
ret
cmp
clc
and
into
cmc
fstl
xor
in
fstpt
fcmovbe
rcr
loopne
idiv
fucom
shl
aad
lock
mov
xchg
cmc
das
ret
xor
iret
cmp
or
sti
mov
in
jmp
hlt
xlat
jecxz
int3
iret
call
repz
stc
cmp
loope
in
and
loop
clc
aam
ss
aaa
fucomp
lret
out
cli
aad
or
clc
sub
fimuls
xlat
int
jmp
cli
std
loope
lock
cld
fdivrp
addb
stc
jmp
into
int
clc
cmp
jmp
out
iret
int
cmp
fldl
fsubr
stc
loopne
mov
mov
ljmp
enter
repz
cmp
lds
sub
sub
push
mov
jmp
int3
ret
int3
int3
sahf
pushf
movhps
dec
cmp
add
add
out
shr
iret
out
orl
leave
sti
clc
cmp
rcr
div
call
mov
dec
rorb
sar
xor
aaa
rcr
stc
leave
lret
faddl
mov
loopne
loop
loopne
enter
fcmove
xlat
xor
sarl
xlat
xlat
xlat
fcmovnbe
xchg
out
in
out
mov
iret
imul
clc
xor
int3
in
aad
aas
out
cld
jmp
ljmp
mov
sub
cmp
div
mul
jmp
xor
icebp
test
shl
aad
fiaddl
lret
out
idiv
xor
sti
cmp
jecxz
ret
fnsetpm(287
adc
loopne
jecxz
leave
loope
out
call
xor
stc
ror
cmp
repz
cld
iret
mov
loop
decl
mov
repz
aad
aad
fidivrs
loope
cld
out
out
mul
loope
fsubp
test
incb
call
lret
ljmp
std
fld
sar
test
xchg
jmp
rorb
out
icebp
xlat
cmp
cmp
aas
sar
adc
add
leave
leave
jmp
out
xchg
int
in
test
cli
repnz
hlt
fstpt
in
xchg
mov
fldl
cs
out
neg
repz
sar
aam
clc
repnz
in
repnz
into
repnz
into
sti
rcr
ljmp
loop
lret
mov
fidivl
hlt
aas
fcmovnbe
in
sarb
les
out
xchg
xchg
ljmp
ljmp
fst
inc
repz
xlat
adc
fsub
icebp
in
lret
xchg
out
sar
ds
jmp
les
or
lret
out
jecxz
cmc
repz
jmp
stc
sbb
jmp
jecxz
out
sar
lea
adcl
aaa
shr
aaa
int
xor
rol
loope
fmul
in
mov
orb
xor
aam
ljmp
into
in
test
xchg
cmc
lret
test
lock
fcmovnbe
jmp
clc
fiadds
mov
rcl
fdivrl
call
jmp
int3
out
test
stc
fdivrp
sti
call
xor
lock
shr
aad
stc
in
out
repz
clc
stc
sti
xchg
out
mov
out
fprem
sbb
into
hlt
in
cli
fcom
std
leave
clc
ret
shl
fcomi
int
mov
mov
hlt
loopne
out
fdivrp
clc
fcmovnbe
fdivr
mov
mov
sti
shl
in
hlt
xchg
sub
aam
cmp
cmp
xlat
fdivp
cmp
addb
jmp
mov
rcl
out
ljmp
sarl
ret
in
std
fcomip
fadd
fadds
out
xchg
rol
out
jmp
jmp
sarl
fcmove
shl
ret
neg
int3
int
in
in
das
icebp
in
xor
ss
icebp
test
test
or
lret
loop
ret
in
repz
cmp
jecxz
fcmovnu
xchg
or
fmuls
call
xor
std
xor
aad
out
aas
jmp
xchg
loope
decb
out
int
ret
out
shl
into
aad
aam
sub
aad
cld
jmp
fdivr
leave
decl
xchg
jmp
xor
idivl
loopne
out
out
test
in
xor
cli
fldl
in
test
int3
aam
lock
clc
call
out
cld
sub
repz
stc
fld1
out
lret
mov
mov
cld
xor
iret
flds
xlat
fucomip
fninit
fmuls
out
xchg
out
rcl
aaa
test
fiaddl
call
in
fdiv
int3
mov
xor
out
cmp
leave
ds
cli
std
cld
ffree
jmp
ret
cli
mov
filds
lret
aaa
lret
cmp
fst
in
sti
cld
test
repz
sub
mov
out
lret
iret
call
in
cmp
ss
neg
cmp
aam
ret
repz
cli
int
leave
lret
lret
cmpl
shl
test
testl
add
add
lret
into
fst
fstp
bound
jmp
push
add
fsqrt
loope
out
ror
fucomi
sub
xchg
ljmp
xor
int
cmp
div
ret
dec
rcl
test
loopne
int
xchg
int3
mov
ljmp
out
int3
icebp
repz
cmc
repnz
mov
mov
out
mov
aaa
aam
shr
cmp
cmp
ret
add
fsubp
cli
les
out
icebp
orl
cmc
aas
clc
out
cmc
fcomi
fmulp
repz
xchg
leave
cmp
icebp
in
int3
loopne
lock
repz
xlat
cmc
stc
fmul
into
into
out
loop
ds
out
jecxz
loope
xchg
xor
repz
hlt
shl
cmp
aad
fcmovu
fdiv
enter
in
jecxz
xchg
loopne
das
int
stc
xor
xor
cmp
out
cli
xchg
xchg
jmp
test
cld
loopne
mov
loop
cmp
repz
xor
cld
into
ret
iret
clc
repz
add
test
fucom
jecxz
repnz
call
jmp
xor
stc
cmp
out
repnz
fimull
out
jmp
mov
and
lock
out
clc
clc
jmp
cmc
fiadds
enter
xchg
and
enter
lret
cli
test
xor
repnz
fcmovnu
idiv
xchg
cmp
test
in
fisttps
xor
ds
cmp
in
fildl
fsubr
jmp
xchg
repz
out
lret
sarb
jmp
repz
fld
out
inc
std
les
jecxz
jmp
jmp
hlt
ljmp
rcl
out
loopne
xchg
lret
ljmp
lret
test
enter
aaa
aad
cli
in
aas
incb
ret
faddl
jecxz
leave
loope
lret
sarl
xor
stc
rcr
ljmp
ds
in
inc
jmp
mov
xchg
in
jecxz
xor
lret
cmp
xor
cmp
xlat
fcmovu
xchg
int3
ljmp
lds
repz
cmp
rol
cmp
aad
out
sar
stc
sti
xor
shl
sub
ror
cmc
rcl
icebp
ds
rcr
rcr
cmp
test
mov
leave
divl
test
ds
test
sarl
cmc
out
orl
into
test
xor
ljmp
cmp
fstp
icebp
test
aas
fninit
loope
leave
enter
cli
fsubrp
repnz
out
lret
repnz
cmp
filds
out
in
ljmp
ret
vpand
cmpb
rolb
lret
fdivrp
in
sti
in
xchg
xchg
hlt
ret
int
jmp
cld
xlat
cmp
div
rolb
hlt
int
test
ljmp
sarb
hlt
lret
cmp
std
jmp
aad
sar
stc
test
adc
out
sti
clc
aad
cmc
in
call
lret
aas
rcl
rol
fsubr
ljmp
repz
out
cmp
cmp
hlt
fucom
aas
aam
test
repz
out
lds
out
xchg
xor
jmp
fsubr
std
cmp
aam
fcmove
aam
mov
jmp
popl
xlat
jmp
loope
cmp
xlat
ret
cmp
out
xchg
fimuls
cmp
lock
int
rolb
mov
cli
test
in
into
fcmovne
xor
vpor
into
fucomp
aam
int3
rolb
aas
fsubp
test
cmp
cld
fcmovnbe
ljmp
cmp
hlt
jmp
in
cmpl
cmp
mov
nop
dec
fndisi(8087
into
rcl
out
imul
cld
shl
xor
fdivr
movb
shl
enter
xchg
mov
xor
sub
fnstsw
lret
clc
call
hlt
sar
ret
and
lret
cld
fcmovnu
loop
xchg
loopne
mov
out
in
into
lret
xlat
enter
fstp
int
adc
vpmullw
lret
fmulp
call
mov
jecxz
sub
int
cmp
fsub
fsin
idiv
xchg
jmp
lock
ljmp
sti
repnz
cmp
ds
xor
clc
ror
fdiv
fmul
orl
out
fxtract
rcr
into
shl
lock
loopne
loop
mov
jmp
mov
jecxz
out
out
xchg
call
push
jmp
int
iret
rcl
aad
inc
xor
cwtl
fidivl
mov
add
aad
xor
xor
fnstsw
cld
sar
ret
in
xchg
loopne
mov
xor
fmul
in
xlat
aad
shl
jecxz
xlat
sti
cmc
std
testl
cmp
ljmp
loopne
icebp
out
fmul
jmp
fcomp
repnz
shr
loope
lret
lock
hlt
aas
iret
sbb
adc
repz
enter
addl
fsubr
enter
clc
fldln2
loopne
cmp
xlat
mov
mov
jecxz
int
out
icebp
aam
ret
cli
xlat
into
xor
sarb
cmp
out
fisttpll
loope
in
mov
lret
lret
cmp
repnz
loope
repnz
aad
cmp
mov
in
loop
iret
out
lock
cmp
aad
ljmp
loope
loopne
int3
sti
fildl
xchg
xor
repz
xor
jmp
fcmove
cli
out
cmp
int
cld
iret
icebp
loop
call
cli
repz
aam
shl
in
shl
faddl
out
call
xchg
xor
loop
out
in
cmp
shr
fcomi
sti
cmp
aas
in
test
and
out
out
sti
ljmp
iret
int
stc
out
sti
not
fdivr
rol
aas
loopne
loope
call
repz
icebp
into
shr
int3
sarb
fcom
aaa
ror
filds
cmp
lea
push
mov
hlt
hlt
shr
out
fmulp
not
in
repnz
fcomp
fmul
leave
fmuls
mov
aaa
hlt
out
lret
aas
ds
cmp
std
loop
leave
fchs
iret
shr
icebp
mov
loope
fcmovb
aam
xor
sar
inc
imul
xchg
leave
in
loope
ljmp
aam
xor
vpmulhw
in
cmc
xor
adc
test
fdiv
xlat
loopne
out
loope
xchg
in
rcl
fld
int
out
cmp
clc
cmp
test
jecxz
icebp
mov
lock
jmp
int
repz
aas
repz
addb
loop
and
int
xchg
sub
cli
cmp
icebp
in
imul
test
jecxz
out
ret
test
jmp
addl
aam
xlat
out
int3
jmp
std
loopne
fstp
sar
hlt
or
out
mov
out
in
sti
fcmovu
fbstp
jmp
rcl
ds
mov
addl
xlat
aam
icebp
ds
rcl
out
icebp
loop
cmc
ret
mov
fst
xchg
xor
loope
lret
idivb
aad
sar
ret
div
fcmovnb
loope
xchg
loope
in
in
in
cmp
enter
dec
repnz
adc
loope
mov
cli
fidivl
inc
aam
shr
ret
rcl
out
faddl
mov
shrb
shl
out
std
sti
call
aas
jecxz
aad
clc
ret
jmp
in
jmp
nop
int3
lock
cmp
ljmp
jmp
int
hlt
aam
fucomp
stc
inc
fld
test
cld
fucomp
int3
aam
clc
icebp
shl
lock
cmp
cmpb
in
xor
sti
test
in
xchg
xchg
ret
ret
fdivr
idiv
cld
rcr
adc
fdiv
xchg
xchg
clc
stc
sti
loop
iret
orb
leave
int3
xor
adc
rcr
fdivr
fldl
xchg
cld
jecxz
loop
xor
clc
cmp
xor
in
rolb
mov
iret
xchg
cmp
icebp
in
fmulp
xlat
cmp
fcmovb
mov
mov
lea
not
shr
xlat
out
leave
fnstcw
test
fst
loope
int
mov
lock
loop
not
loope
xlat
cmp
xor
addb
std
enter
fiadds
mul
cmc
xor
out
jmp
into
cmp
cli
inc
repnz
cmp
clc
fmull
fisubrs
aad
ss
ret
aad
std
add
cld
fsub
leave
and
shr
out
out
loope
repz
lock
clc
xor
fcmovnu
div
rolb
fcomp
out
cld
mov
fcmovb
iret
call
sti
out
fmull
mov
nop
call
incl
jmp
mov
fcmovnu
or
sub
pushf
sbb
clc
sbb
jle
add
out
in
fucom
xor
ss
aam
not
repz
and
roll
in
mov
in
mov
lock
das
cmc
sti
out
cmp
int3
sarl
ret
ret
loop
lock
call
call
repz
cmp
clc
icebp
repz
in
jecxz
loope
addb
rol
fxch
cld
cmp
cmp
out
shl
test
in
clc
mov
xchg
test
iret
jmp
das
clc
jmp
shl
sti
sbb
repz
test
in
xchg
adc
lock
out
jmp
fistpll
in
fxch
fldl
decb
shl
std
fnstenv
hlt
out
idivl
in
repz
sar
popl
in
cmp
test
cmp
cmp
repz
call
ljmp
out
aam
call
aad
repnz
icebp
sar
in
fmull
iret
ljmp
lock
aaa
loopne
sti
loope
ret
shl
fimuls
xchg
out
xchg
out
sub
lret
cli
cmp
repnz
div
loop
mul
cmp
test
jmp
lock
div
xor
cmp
ljmp
ret
xlat
loopne
rol
lret
call
into
in
mov
enter
cmp
repnz
call
or
lret
in
out
sub
sub
shl
cmc
cmp
cld
xlat
call
int3
cld
test
rolb
lret
out
cmc
idivb
icebp
xlat
cld
repnz
test
loopne
hlt
out
int
mov
rcll
cmp
fnstcw
out
sarb
cmp
cld
shl
fcmovnb
fadd
int
xchg
mov
iret
cs
repz
hlt
xor
ror
hlt
cli
in
std
and
faddp
sti
mov
out
xor
jmp
ret
ss
sarb
ljmp
hlt
fadd
mov
lret
test
lret
xchg
int3
std
aam
out
bnd
shr
fst
cmp
cld
std
fcmovb
and
std
sbb
in
loopne
xor
sub
in
icebp
repnz
in
in
cmp
adc
enter
into
cli
iret
loope
mul
xor
test
aaa
jmp
stc
test
lds
mov
mov
ljmp
aaa
xor
aaa
cmpl
repnz
mov
cli
jecxz
xchg
lret
mov
out
icebp
in
aaa
in
sar
icebp
sti
xor
cmp
not
fadds
loopne
roll
cmp
aad
cmp
sub
cld
fadd
out
xchg
idiv
fldl
rcr
nop
icebp
lret
fbstp
cmc
enter
into
ljmp
rcl
ds
shl
loop
out
cld
fucomp
icebp
xchg
ljmp
in
cmp
int
repnz
fstpt
aam
std
neg
imul
lret
or
mov
loope
fmul
jmp
in
jmp
cmp
fneni(8087
aam
mul
in
mov
sti
std
fmul
mov
xor
icebp
fmul
cmp
cmp
test
repnz
leave
std
in
loop
repnz
xlat
int
xor
xor
fldz
cld
f2xm1
ds
and
aam
out
into
jmp
lret
out
xor
int
out
stc
leave
lock
rcr
in
test
fildl
sub
ror
in
shll
out
call
cli
hlt
jecxz
jecxz
cld
test
shl
ds
xchg
hlt
jmp
mov
clc
in
call
cli
shl
iret
shl
aad
in
incl
rorl
in
ror
in
in
iret
idivl
fmul
jmp
loopne
int3
orl
shl
out
iret
in
stc
out
cmc
cmp
ffree
in
roll
leave
lock
test
out
xor
cmc
aam
iret
hlt
icebp
fdivr
inc
loope
xchg
fcmove
fimull
test
in
int3
shr
lret
out
cmp
in
fadd
sti
cld
mov
out
nop
loopne
xchg
test
in
out
leave
mul
cmp
neg
int
loop
leave
cmc
loopne
fldl
xor
lret
fcomi
mul
into
loope
iret
aas
imul
ljmp
lret
addb
repnz
xor
cmpb
in
rcl
cmpl
jb
jmp
cmp
jne
jmp
iret
lret
rcr
aad
int
jge
ja
sbb
inc
into
and
jle
add
ftst
ljmp
clc
out
xchg
rcl
mov
cmp
imul
cmp
int
div
enter
aad
enter
jmp
ss
shlb
cmp
lret
rol
testb
xchg
jmp
nop
xchg
xchg
xor
in
cmp
out
repnz
jecxz
cld
and
sbb
ret
lret
imul
jmp
lock
das
divl
shr
cmp
divl
cld
stc
clc
call
loope
cld
mov
ljmp
fsub
bnd
ss
cmp
cmp
aam
ffree
lret
int
out
addb
cmc
enter
cmp
in
loop
ret
cmc
test
cmp
leave
test
cli
into
flds
in
rcl
sub
cmp
iret
sar
call
aam
cmp
test
add
loopne
xchg
xchg
int
aas
into
clc
neg
in
fnstenv
fprem1
out
ffreep
rcl
shl
ljmp
test
aaa
not
rcr
cmp
aam
sti
xlat
stc
loope
fsubp
ret
in
mul
lret
fst
loopne
cmc
subl
cmc
aam
out
loop,pt
jecxz
and
aad
fsubp
fimuls
imul
lret
aaa
in
cmp
int3
out
cmc
out
hlt
cmp
adc
loop
test
loope
rcl
xchg
shl
aaa
sub
fcmovnu
clc
sarl
testb
ret
test
loope
in
mov
sub
out
shll
fcmovnu
cmp
mul
out
clc
xchg
mov
clc
movb
out
xchg
fdiv
jecxz
cld
ss
repnz
aas
sti
out
cmp
jmp
loope
xchg
xchg
rol
aam
jecxz
in
cmp
xlat
int
cmp
fcmovnu
in
in
enter
fdiv
out
in
lock
mov
out
in
fucom
stc
in
xor
faddl
out
orl
xor
cmp
icebp
rcr
repz
cmc
ret
in
out
sti
cld
cli
loopne
out
xchg
mov
lret
xor
clc
cmp
iret
in
cmc
add
testl
mov
int3
cmp
aam
aad
loope
clc
hlt
ffree
out
ret
in
call
loop
in
rcr
ljmp
lock
cmp
filds
std
loop
mov
fildl
out
shll
out
enter
lock
jecxz
addb
mov
out
jmp
loope
xor
fidivl
icebp
fsub
loopne
rcr
idivb
mov
lret
repnz
call
xor
out
loopne
loop
loope
aad
ret
in
adc
xchg
xchg
into
out
cmp
in
xor
ljmp
cli
les
xchg
test
sub
xor
cmp
into
aas
lock
sar
shr
dec
clc
mov
enter
in
out
icebp
shl
ss
call
sarl
test
xchg
sarl
ret
fcomi
jmp
ret
enter
bnd
int
fsincos
icebp
lret
int
into
rcr
dec
lds
movl
jmp
stc
loop
iret
fmulp
xor
roll
jmp
sti
test
fadd
xchg
int
jmp
ss
icebp
adc
fxtract
jecxz
std
shr
or
lret
cli
cld
xchg
fucomip
fsubrp
xlat
lret
out
cmp
cld
aam
fst
testl
test
iret
lea
xor
in
cmp
clc
enter
cmp
into
cmp
loope
mov
xchg
sti
cld
enter
call
lds
cmp
sar
cmp
in
aad
hlt
test
ret
in
fimull
fimuls
lret
fst
test
rolb
rcl
mov
icebp
call
jecxz
hlt
cmp
cmp
out
ret
cmp
repnz
test
fucomip
jmp
repnz
xlat
std
cli
cmp
aas
add
repnz
aad
or
mov
test
in
sub
into
shr
jmp
divb
cmp
out
cli
call
out
xchg
push
lret
out
shl
ss
icebp
xor
cmp
addb
test
iret
xchg
out
sbb
shl
in
cmp
sti
in
repnz
filds
xchg
into
cmp
xchg
sub
in
cmc
int
ffree
inc
mov
mov
mov
jmp
enter
int
int3
lret
xlat
ja
lea
and
and
add
add
lret
fdiv
enter
roll
testb
incb
leave
out
out
cli
into
ljmp
loope
std
cld
ret
mov
fiaddl
clc
ret
test
sti
repz
fcmovnb
cmc
mov
stc
mov
lret
cli
out
int
shrl
xlat
repz
aam
in
leave
hlt
in
fld
loopne
cld
ds
mov
int3
and
fcomip
sub
fidivl
sti
ljmp
into
fdivrs
adc
fcomp
clc
in
iret
xchg
aam
xor
test
clc
aad
lret
jmp
test
jecxz
fisttpll
cmc
into
icebp
fmul
out
stc
in
xlat
fcmovnbe
imul
sarl
loopne
fcomp
xchg
xchg
mov
xchg
loopne
clc
jmp
repnz
sbb
cmc
lock
ljmp
iret
cld
mov
repz
cmp
cmp
loope
hlt
into
idivl
out
loop
fsubp
addb
lret
iret
xor
loope
incb
loop
fldl2e
out
into
ljmp
lret
rcl
std
in
aam
faddp
ds
hlt
cli
out
ljmp
out
hlt
cmc
xor
fmul
shl
fcomip
ljmp
shl
cld
xchg
xchg
leave
call
enter
div
cmp
std
lret
std
test
call
cld
and
loop
aad
cmp
out
stc
lock
not
fdiv
inc
and
in
std
loopne
xchg
enter
in
lock
jmp
cmp
xchg
xchg
fstl
call
cld
fdiv
fiadds
jmp
lret
out
out
leave
out
jmp
int
icebp
std
repz
call
fdivrl
aad
xabort
testl
repnz
enter
clc
cmc
loope
incb
ret
xchg
mov
out
aaa
sub
shr
lock
fucom
loopne
fdivr
repnz
clc
loopne
and
mov
enter
test
ss
xlat
ds
jecxz
out
leave
jmp
hlt
lea
out
xor
ffree
cld
shl
rcl
aam
ds
out
in
jmp
out
cmp
cmc
div
fdivrl
lret
hlt
clc
ds
xor
in
fldln2
fisttpl
ret
clc
ret
fdiv
xor
shl
loope
xlat
shl
ret
sbb
test
in
xchg
int
fdiv
jecxz
shl
fcomi
leave
jmp
out
cmp
rol
rcl
aam
int3
mov
cld
sti
orl
jmp
aad
repnz
testl
jmp
xchg
out
shr
cmp
ljmp
cld
shl
ret
stc
rcr
loopne
test
and
lds
out
clc
lock
fnstcw
cli
jecxz
cld
ljmp
icebp
int
mov
in
int3
stc
in
rcl
aaa
cmp
loop
aam
loope
hlt
jmp
std
sbb
in
jecxz
fsubr
jmp
ljmp
aam
shl
test
cli
fucomip
mov
fdiv
sub
loopne
cmc
shl
rcl
xor
into
loop
cli
ffree
icebp
fadds
iret
addb
rcl
enter
ljmp
enter
fimuls
lock
loop
cmc
jmp
in
idivl
hlt
std
into
ds
shl
flds
test
ret
xchg
jmp
mov
aaa
icebp
iret
aaa
out
in
repz
repnz
aas
loop
out
lret
xchg
repnz
aam
xchg
int3
repnz
call
std
aas
fchs
fcom
out
jecxz
test
into
testl
lock
in
ss
iret
hlt
sarl
shl
into
not
cli
cmp
mov
fsubp
fisttpll
in
fcmovnb
cli
in
xor
repnz
xchg
sbb
fucomp
enter
rorl
fnstcw
sub
adc
int
cmp
jmp
mov
rcr
repz
lret
in
iret
leave
fcom
idiv
repz
sar
rcr
lock
fsubp
test
std
lret
iret
fucom
iret
fsubp
mov
lret
cmp
cld
int3
repz
ds
lock
call
iret
in
fisttpl
test
inc
hlt
xor
add
mov
lea
jmp
rol
lret
ffree
aam
mov
mov
mov
sub
add
add
rorl
shr
rcl
xor
lock
out
clc
aam
fsubrp
lea
test
not
in
ss
aaa
flds
ret
not
aas
jmp
jmp
fiadds
icebp
cmc
xor
cmp
iret
std
fdiv
testl
call
icebp
enter
cmp
cmp
int3
sbb
loopne
cmc
mov
fidivrl
in
mov
cmp
xchg
ljmp
jmp
idiv
fiaddl
addl
lock
out
in
clc
aam
fidivrl
neg
fucomp
xlat
xchg
rolb
mov
fldl
sub
ror
cmp
in
jmp
fdiv
rcr
call
xlat
xchg
in
std
int
jecxz
lret
out
cmp
rolb
cmp
stc
rol
cmp
fld
mov
mov
fdivp
neg
int3
fnstcw
shll
imul
call
roll
cmp
test
xchg
ljmp
out
fprem1
fdivr
sti
repnz
repz
call
sti
leave
int
loop
aaa
sar
hlt
aam
lock
fldln2
ret
loop
testl
test
lret
shrb
idivl
out
out
lret
aad
loopne
test
test
and
mul
fadds
repnz
int3
cmp
enter
out
rcl
cmp
std
lret
ljmp
int3
repz
call
call
ret
lock
cmc
aad
fidivrl
std
fsts
lret
call
roll
cli
aas
stc
hlt
call
fsincos
into
in
mov
in
aam
leave
cmp
out
int3
cmp
loopne
sbb
lret
xchg
xor
lret
fneni(8087
into
cmp
ds
xchg
sar
fucomp
out
fsubr
rorb
jmp
jmp
loop
in
int
cmc
sti
sti
in
addb
addl
xabort
fsubp
loope
cmp
shl
icebp
cli
lret
int3
out
in
in
fstl
test
int
in
roll
dec
fucomp
in
iret
jmp
call
xor
cmp
int3
div
out
lret
out
aam
and
mov
shl
loope
ftst
aad
cmp
cmp
rcr
les
ret
mov
repnz
leave
jmp
call
loop
fcmovbe
clc
loope
cld
shl
lds
test
xchg
out
sarb
out
in
fadd
ds
out
in
jmp
mov
mov
int3
enter
sub
std
fcmovnbe
test
cld
aas
shr
inc
mov
out
into
mov
orb
xor
fscale
fidivl
sbb
test
mov
cli
xor
aaa
lock
rcr
cmpl
leave
xchg
rorl
stc
aam
hlt
cld
in
aas
fildl
out
out
cmp
orl
enter
cmc
lret
sar
aas
call
mov
iret
in
ljmp
jecxz
rcr
ds
leave
cmc
in
repz
loop
std
in
fcomp
sar
loope
hlt
in
enter
aam
cmp
cmp
cmp
cmp
jmp
out
roll
int3
lock
xor
cmp
mov
imul
in
in
jecxz
cmc
mov
int
xor
aam
cld
cmc
lock
out
loope
jmp
clc
in
icebp
mov
jmp
idiv
fdivs
cmp
lret
loop
lock
in
mov
dec
fmulp
out
test
leave
in
cmp
rcl
shl
rcr
test
xchg
cmc
xchg
fisttpl
cmc
aaa
xor
in
xor
jmp
rcl
cmp
cmc
loop
mul
lret
xchg
xchg
jmp
icebp
out
xor
xor
fdivrs
int
sti
loopne,pt
ret
in
lret
jmp
sti
int
test
ss
xlat
imulb
jmp
cmp
out
cmp
ret
repz
fucomi
orl
out
iret
fsubr
hlt
fucomp
lret
std
shl
in
fimuls
mov
add
add
int
xlat
aam
les
add
add
fscale
ret
test
rol
sbb
addb
ret
sar
repnz
cli
clc
cmp
cli
fildl
loop
mov
cld
call
ret
enter
out
div
xlat
aam
rol
ret
incl
lret
in
iret
loop
aam
out
imul
cmp
fdivp
cmp
in
stc
ret
fmulp
cli
ds
sti
mov
shr
loopne
int
stc
jmp
std
into
not
iret
ret
les
frndint
in
fmulp
int3
call
iret
xor
repz
cmc
int3
fidivrl
ret
rcr
test
mov
orb
xchg
and
iret
icebp
lret
addb
jmp
addb
aam
enter
leave
cmp
icebp
repnz
test
les
mov
flds
xlat
shr
iret
test
cmp
xlat
in
iret
add
fsub
call
jecxz
out
leave
mov
xor
stc
aam
fdiv
out
fcomi
into
aad
out
sti
fisttpll
xchg
xchg
xor
in
xor
in
and
test
mul
sti
jmp
mov
loop
shlb
cmp
aam
repz
fcomp
addl
fisttpl
jecxz
repnz
fpatan
rol
loopne
fiadds
clc
mov
mov
mov
repz
in
lret
ljmp
out
cmp
xlat
test
xchg
mov
loop
stc
out
cmp
aaa
rcr
ret
aad
in
in
in
test
ljmp
ret
lret
ss
fndisi(8087
shl
fstp
ret
cmc
in
lea
mov
out
aam
enter
rcr
cmp
repz
icebp
into
mov
cmc
cmp
lock
rcr
loope
shl
loop
sti
lock
leave
cmp
cli
in
out
fneni(8087
loope
loope
rcl
orb
loop
jecxz
ror
into
fdecstp
xlat
cli
aas
icebp
cli
cmc
int
hlt
fst
lret
sbb
std
xchg
call
mov
aam
xor
in
ror
fcomp
xor
into
fdivr
xlat
cld
loope
imul
cld
enter
ljmp
xor
stc
fdivrl
cmp
std
test
les
repnz
and
jmp
in
rcr
cmp
bnd
aad
div
loope
fdivr
mov
mov
in
leave
enter
std
push
xor
repnz
loopne
mov
out
icebp
rolb
xor
shr
div
shl
sar
call
sbb
mov
jecxz
in
mov
hlt
shlb
enter
cli
xor
std
cmc
clc
rcl
cld
sti
cmc
out
test
mov
fucom
xchg
cmc
int3
hlt
in
loopne
in
fidivl
sbb
rcr
out
ret
cmc
lret
fucomi
addl
shr
hlt
das
rcr
aas
div
cmc
into
repz
leave
int3
jmp
out
mov
fstp
mov
in
lock
sar
fdivrl
fmul
stc
jecxz
std
sar
jecxz
mov
fdivrp
mov
loop
icebp
hlt
lret
divb
rcl
cli
iret
xor
ss
sbb
mul
xlat
mov
stc
fcmovu
cld
xchg
int
fiadds
fidivl
fsubr
ss
ljmp
in
aad
fucom
sub
out
shl
in
out
int
sar
clc
jmp
cmp
cmp
test
cld
ljmp
aas
shlb
sub
std
loope
cmp
mul
cld
rol
fimull
enter
in
into
neg
int
leave
cmp
enter
out
icebp
loop
fmul
out
sti
nop
jmp
fdivr
rclb
stc
fmul
enter
cmp
fiadds
cld
loop
mov
into
out
xchg
loope
in
ljmp
ret
leave
cli
in
loope
test
incb
in
das
call
cmp
lret
repz
shl
in
xor
orl
enter
shl
into
xor
cmc
int3
lret
repz
into
not
aad
enter
les
lock
clc
xor
sti
ds
adc
jecxz
mov
mov
in
xchg
out
out
in
cmc
stc
ljmp
inc
mov
add
aas
int
int
ret
leave
pop
cs
cmpsb
xor
jle
add
out
lret
lret
idiv
sar
sti
enter
jmp
sub
sar
repz
clc
std
out
int3
aaa
cmp
clc
in
test
fucomip
cmp
shl
ror
in
into
shrl
ljmp
bnd
sar
call
out
cli
out
mov
jecxz
lret
xor
sti
out
ds
lret
hlt
fadds
shl
cmc
mov
fisttpl
jecxz
in
repz
fmul
hlt
shr
int3
jmp
cli
add
xchg
aam
cmc
loope
mov
test
xor
in
out
cmp
cmp
sar
fstp
repnz
loop
and
xchg
addb
hlt
cmp
fdiv
fcmovu
fsubp
repz
rcl
aam
testl
or
out
stc
ret
ljmp
repnz
clc
fadd
fdivp
leave
mov
in
xchg
xor
aaa
fsub
cmp
ljmp
test
enter
out
fdivr
in
fmull
jmp
stc
repz
shlb
cmp
out
xor
fadds
mov
loope
in
cs
mul
aaa
lret
out
out
dec
dec
loopne
out
in
or
mov
xchg
loop
shlb
fcmove
enter
ljmp
fcomi
mov
ds
jmp
jmp
loop
loope
jmp
lret
xor
loope
mov
cld
mov
xchg
ljmp
divl
xor
in
sar
jmp
cmp
roll
aam
sti
out
mov
in
in
shl
leave
xor
sti
stc
out
jmp
shr
lret
adc
std
mov
mul
cli
lret
in
mov
shr
clc
clc
leave
cmp
in
rol
xchg
test
enter
iret
nop
test
xor
fsub
lock
repnz
hlt
rcr
mov
call
jecxz
jmp
mov
das
xor
ss
icebp
sti
sarb
sti
xlat
not
ret
repz
call
xchg
enter
mov
xchg
ljmp
stc
iret
std
cmp
ret
rol
cli
xlat
xlat
leave
loop
jmp
lret
mov
call
lret
std
repnz
hlt
test
cld
aad
in
std
iret
nop
loopne
out
xor
jmp
sti
ljmp
fcompp
cmc
cli
xchg
faddl
repnz
cmc
int3
out
aaa
cmp
cmp
lret
shl
les
fucom
jecxz
out
out
in
xchg
hlt
call
in
xor
out
aam
test
aam
xchg
out
mov
mov
test
xor
sti
xor
into
fcomip
jmp
into
aam
cmp
loop
int3
jecxz
int3
cli
xchg
jmp
xchg
ret
sub
out
shl
shl
cmp
aad
loop
addb
fstp
test
fists
out
aaa
jmp
rcr
aad
std
shl
jecxz
std
addl
shl
ror
ljmp
fcmovbe
ds
rol
repz
mul
cld
in
shr
rorl
cli
int
ds
jecxz,pt
cld
sbb
clc
fsub
call
leave
loop
jecxz
xlat
icebp
stc
fidivl
fcmovu
in
stc
repz
loop
aad
jmp
shl
in
std
xchg
and
hlt
shl
ss
cmp
cli
cmp
icebp
flds
imul
imul
sbb
loope
lock
ret
xor
rolb
in
jmp
stc
xchg
xchg
mov
out
cmp
xor
in
iret
in
cld
loop
fnstsw
shl
mov
enter
xchg
call
ret
lock
iret
rcr
stc
cmp
in
mov
xchg
call
test
out
fyl2x
int
fmul
in
jecxz
test
fcmovu
fdivr
fldpi
int3
loope
xchg
int3
repnz
jecxz
int
or
sarl
stc
shl
lock
in
aam
xlat
std
clc
nop
lret
repnz
xor
fcomp
testb
lock
loop
xchg
std
loopne
in
out
shl
shr
leave
iret
idiv
fdivrs
out
aas
std
cmp
cmc
in
roll
in
ljmp
int3
xchg
aam
fsub
clc
cmp
cmp
in
loope
cli
sarl
not
xchg
ret
decl
int3
into
add
out
ret
aaa
fdivr
fdivrs
aam
aas
loopne
aam
out
std
lret
rcr
xchg
lea
push
mov
jmp
aam
ror
fcomp
aam
aas
idivb
lahf
cld
cmp
jle
add
hlt
jmp
iret
ljmp
cmp
fmul
mov
ljmp
call
lock
xor
test
les
loop
ljmp
out
in
clc
shl
shr
hlt
cmpl
fsub
sbb
jmp
fsubrp
out
lea
out
fcom
in
clc
shr
fcmovb
lock
rcl
xchg
mov
loope
xchg
rorb
repz
cli
rcl
aad
int3
out
fcmovnb
flds
loopne
fstl
in
iret
jmp
icebp
lock
mul
out
loope
hlt
std
rolb
cld
fdivr
ljmp
ret
out
into
cmc
ror
xlat
lret
push
rcr
sti
cmc
fisttps
lret
filds
repnz
fstpt
shl
loopne
xlat
incb
std
loop
xchg
incl
xor
xor
fucom
in
repnz
cld
shl
out
fucomi
cmp
leave
leave
in
and
shlb
iret
int3
aaa
out
int
fnstsw
shl
in
aas
in
orl
xchg
mov
sti
xlat
cmp
addl
rcr
mov
lock
into
rcl
aam
hlt
shl
leave
ss
ljmp
filds
loopne
test
ret
shll
cmp
cmp
enter
lock
lds
lret
fldl
lock
repz
out
aad
fidivs
out
mov
int3
fimuls
hlt
test
ljmp
aas
int
rol
loopne
cmc
clc
fucomp
out
mul
loop
hlt
xchg
xchg
in
xor
sarb
enter
sti
fdivrs
shl
xchg
fadds
cld
mov
out
into
lret
mov
shl
out
in
iret
fdivr
fabs
in
aas
aas
in
ret
cmc
enter
fcmovne
faddp
mov
fisubrl
fdivp
into
cli
rcr
sti
xor
loope
ret
jmp
loop
icebp
out
aad
out
divl
test
cld
fdecstp
aam
ret
cld
jecxz
shl
mov
in
call
jmp
aaa
xor
iret
add
testl
rol
out
hlt
ror
xlat
xor
cmp
cmp
lock
iret
sbb
xlat
cli
enter
orb
xchg
in
ljmp
cmp
cmp
into
xlat
loop
cmp
loop
out
rorb
rol
leave
shll
xor
hlt
fcmovnbe
fst
clc
imul
in
call
vpaddsb
out
repz
call
ror
in
leave
neg
ret
fpatan
call
mov
xchg
out
or
in
ss
stc
lock
shl
fst
xor
enter
lret
mov
out
hlt
ljmp
loope
ds
out
call
ret
mov
aam
loop
shr
fidivl
loope
aam
loopne
rcr
sbb
mov
test
loopne
xor
xlat
mul
out
neg
std
fst
hlt
fucomip
aas
jecxz
fcomip
iret
lret
into
shl
das
jmp
fxch
cmp
in
aam
fcmovu
fcmove
ljmp
fcom
cmp
cmp
sti
std
fcomi
repz
ret
test
fucomip
lds
orl
cmp
loop
fucomi
out
jmp
jecxz
test
fisttpl
int3
or
in
int3
cld
idiv
sarb
into
clc
inc
out
in
fimull
mov
sti
xchg
lret
out
jecxz
fptan
div
fidivrs
jmp
test
in
sti
hlt
int3
clc
int3
int
dec
nop
xchg
iret
iret
repz
ss
out
cmp
leave
sarb
cmp
les
movb
int
sub
iret
repz
xlat
cmc
cld
cmc
in
in
in
xchg
orb
ljmp
fcmove
cmp
fcomip
stc
clc
aam
cmc
xchg
lret
rcl
clc
ret
in
not
leave
lock
repz
fstp
cmc
mov
mov
mov
in
in
popl
call
aaa
cmp
clc
xorl
ret
mov
xchg
mov
iret
jmp
sti
out
aas
clc
lret
ret
shl
xrelease
movb
push
mov
push
jmp
ret
rcl
aam
ret
sarl
in
lret
add
add
hlt
mov
mov
flds
hlt
in
cmp
repnz
xor
jecxz
shl
loopne
sti
addl
jmp
mul
xor
cmp
addb
leave
cmp
repz
clc
fmul
out
std
int
sti
rolb
fisttpll
mov
call
loope
rcr
in
lret
iret
iret
repnz
in
in
ljmp
cmc
loop
xor
ss
neg
rcr
jmp
sar
fldl
mov
loope
xor
shr
idivl
lock
aad
int
out
fdivrs
mov
mov
xchg
fst
into
xchg
out
in
das
aam
icebp
cmp
xlat
stc
xlat
iret
in
in
ret
and
xchg
test
int
icebp
xchg
loope
xor
div
into
xor
out
ds
xlat
fadds
iret
loop
xchg
shr
out
shll
into
fmul
icebp
hlt
ds
into
repnz
lds
lret
mov
in
out
into
loop
loopne
out
fcmove
in
out
cld
jmp
in
fcomp
stc
out
ret
and
fmull
mov
into
lret
repnz
fsubr
leave
stc
cmp
fsubr
test
in
fmul
xchg
in
xchg
sar
shl
xlat
int3
fnstcw
iret
lret
rol
fidivrl
repnz
clc
into
in
mov
int
jmp
stc
enter
in
in
loop
aam
aas
lret
mov
loope
loop
xchg
mov
addb
hlt
fcmovne
out
aam
cmp
stc
into
iret
div
clc
xlat
cmp
out
std
mov
adcl
ret
std
cmp
fcmovbe
in
adc
in
sbb
int
fdivr
mov
mov
enter
cld
jmp
cmp
repnz
test
loope
and
xchg
jmp
hlt
out
jmp
out
rol
sti
enter
jecxz
sti
sub
test
in
test
shrl
leave
lret
bnd
shl
test
inc
add
jmp
cmp
aam
iret
aad
aaa
call
ror
repnz
sbb
rcr
int3
mov
call
repnz
stc
ror
leave
lret
cmp
ror
call
test
aam
ret
int3
jmp
ljmp
iret
shl
xor
fnsave
ds
out
fildl
mov
lret
ljmp
hlt
int
cmp
div
aaa
hlt
fucomi
in
fcomi
test
xchg
out
leave
cli
add
orb
cmc
lret
out
shr
shl
out
rcr
cmp
out
std
idiv
mov
into
rcl
ror
cmp
ljmp
rol
repz
fisttpl
mov
faddp
leave
mul
jecxz
cli
xor
sar
adc
out
sti
mov
xchg
out
addb
out
hlt
aam
cmp
xlat
fcomi
xchg
aas
jmp
lock
enter
lret
xlat
sti
xor
stc
ret
vcmpss
enter
mov
int3
xchg
mov
in
cli
sti
int3
enter
loope
out
mov
cmp
test
call
cmp
xor
in
fbstp
fcomi
cmp
fcmovu
in
or
loop
iret
cmc
sub
out
fcmovnu
hlt
out
int3
cli
repz
call
lock
adc
xor
lret
cmp
int
aad
shl
fst
xchg
xor
ljmp
lock
xor
fdiv
cmp
fucomp
cmp
fadds
std
fnstsw
fistl
das
int3
jecxz
fcmovnbe
neg
lret
int
cli
iret
xchg
fdivrp
rol
mov
nop
int3
das
into
fcmovnb
clc
int3
loopne
loope
repz
enter
ret
test
xor
xchg
add
in
xlat
ljmp
fcmovnu
int3
xchg
stc
enter
in
mov
mov
in
shll
iret
cmp
aam
out
div
loope
int
aas
loop
mov
mov
fcmovne
ficoms
ror
ror
aad
idiv
cmp
not
ret
rcr
in
decb
shl
test
sar
into
cmp
repz
iret
repnz
loop
ljmp
call
out
out
lret
xlat
rcl
icebp
fdivr
xor
dec
mov
add
sbb
add
cmp
jne
mov
xor
add
mov
mov
mov
jmp
sarb
ret
enter
fldl
jge
inc
loop
fldt
ret
add
add
fcom
sarl
testl
cmp
xchg
lock
into
out
hlt
jmp
xor
fiadds
fcmovb
aas
repz
mov
decb
call
jmp
cmp
into
repnz
rcr
jmp
rcr
out
sar
aam
fmul
fildl
aam
rcl
ror
rcr
call
out
hlt
loope
idiv
fiaddl
faddl
aaa
in
imul
repz
cli
iret
aam
loope
ret
fcmovbe
ds
cld
sti
enter
test
into
leave
leave
roll
sarl
test
loopne
stc
jmp
lret
enter
rorl
out
jmp
jmp
or
ds
cli
aam
jmp
xor
aad
loope
div
fptan
lret
aam
xor
incb
clc
neg
out
mov
ljmp
fdivrs
cmp
aam
rcl
filds
hlt
lret
fadds
out
call
sti
xor
into
clc
cmpb
leave
incb
int
hlt
hlt
into
xor
sti
cld
iret
loop
cld
repnz
ret
cld
stc
clc
mov
fstp
ror
std
rcl
xor
cmp
cmp
repz
xlat
iret
fsubp
rol
leave
ds
int
int3
in
repz
leave
icebp
in
icebp
cmp
shl
enter
jmp
in
call
in
in
xor
sarb
iret
ret
mov
in
test
or
repz
lock
dec
fxch
aas
cmc
sar
clc
aad
sti
mov
xor
ret
cli
cmp
xlat
hlt
aad
ds
shl
sbb
jecxz
loopne
enter
sbb
das
cmp
xor
std
int
out
xchg
icebp
sub
cld
ljmp
shl
enter
cmp
sarb
clc
icebp
out
sti
sti
addb
xchg
mov
lret
clc
in
aaa
in
aaa
call
addb
cld
mov
lret
std
mov
xchg
in
iret
sub
xor
fcmovne
int
out
div
fdivrs
xchg
mov
jmp
loop
fneni(8087
and
lret
adcl
cmp
std
neg
fldl
fdivr
enter
xlat
cld
out
lock
aad
out
stc
int
in
call
xor
aad
fadds
test
xchg
mov
hlt
xor
lret
shl
int3
rcr
ds
fcomp
aad
vpminub
fsts
hlt
mov
shll
cmp
fcmovnbe
aaa
fcmove
icebp
fdivrl
inc
test
stc
cld
enter
int3
cld
xchg
fcmove
aam
repz
std
hlt
jmp
sti
hlt
ds
ret
test
mov
xchg
out
xchg
test
call
test
shl
shl
addl
into
std
xchg
sti
and
repz
out
shl
cmp
cli
loopne
fmul
lock
test
jmp
in
out
xchg
jmp
jmp
out
out
fcomp
test
lds
movl
xor
fcom
repz
leave
fcomip
fdiv
cmp
fcomip
idivl
lret
in
sti
std
iret
or
iret
nop
push
div
lret
cli
xor
xor
idiv
or
lock
out
out
rcl
xor
out
in
ds
test
test
xchg
rcr
leave
mov
xchg
ret
in
aad
cmp
repnz
rol
out
test
loope
enter
iret
xchg
and
int3
cmp
cld
fdivr
repnz
adc
loope
mov
cld
orb
in
hlt
sti
out
cmp
lret
cld
int
fistpll
ret
out
jmp
jmp
fsub
int
call
cmp
icebp
jmp
cmp
addb
out
in
out
cmc
ss
clc
into
and
out
mul
sti
cmc
enter
xlat
int
cli
fcomip
jecxz
aad
rcl
aaa
repnz
shll
ljmp
mov
ror
xchg
mov
addl
lock
icebp
icebp
div
shl
jecxz
rol
xor
xchg
ljmp
loope
xor
lret
repz
icebp
lret
fsub
stc
in
rol
out
loopne
incl
cmc
in
mov
mov
mov
push
pop
sub
add
mov
jmp
ror
fmul
fcomp
fcmovnb
aad
jp
cmp
inc
jle
add
add
sub
aad
call
icebp
out
fucom
xchg
adc
mov
cld
jmp
call
int
cli
lds
shr
fxch
ror
icebp
in
cmp
fcmovnb
ds
lret
lret
repnz
ror
hlt
call
cmp
out
aad
in
cld
sar
in
out
mov
iret
mov
int
xrelease
fmul
sti
cmp
fdivp
xlat
test
fcmovnu
xlat
adc
out
nop
shl
jmp
fcom
ror
jmp
addb
enter
test
sar
mov
aaa
xor
fcmovnbe
lock
mov
std
orb
icebp
xchg
ror
stc
lret
fsincos
cmp
out
fdiv
test
orb
xchg
jecxz
aam
ljmp
out
int3
in
aas
clc
and
cmc
fcos
fsub
jmp
xchg
iret
aad
cmp
shl
hlt
test
fsub
fidivrl
fdivr
jecxz
cmc
fcompp
jmp
icebp
sar
ljmp
xor
ss
sbb
enter
clc
xor
mov
xor
fnop
in
cmc
ds
shl
ror
ret
sti
fst
ror
cmc
in
lds
and
fdivr
aaa
aad
cmp
iret
addb
loop
xchg
in
fmul
in
int
cmc
call
cmc
cmc
std
adc
stc
rol
xlat
fdivrp
ljmp
cmp
rcr
in
icebp
repz
cmp
cli
in
jmp
neg
xchg
ret
icebp
out
fnstenv
ffree
stc
cmc
int3
cmp
roll
cmc
leave
in
pop
lock
repnz
out
cld
repnz
in
in
adc
aas
loopne
fucomi
lret
or
int
xor
fadd
xor
out
sarb
cmp
jecxz
fcmovnu
cld
jmp
fisttpll
xchg
shrb
int
cmc
sti
in
cmp
fdivr
int3
cmp
enter
mov
jecxz
jmp
ror
cmp
hlt
cmp
in
stc
loop
out
mov
notb
out
cld
xor
ds
ret
xchg
cld
rolb
out
fistl
div
rol
not
cld
fsub
and
stc
rcr
cld
sub
jmp
incl
not
lds
ds
leave
int
cld
in
addl
push
xchg
jmp
xor
out
in
lret
aam
cli
test
inc
out
jmp
icebp
loope
into
xchg
lret
vpinsrw
in
in
sar
div
rcr
sar
rcr
shr
jmp
fld1
loopne
xchg
call
rol
fsubr
cmp
sarl
sarb
ret
test
mov
nop
fsubrp
hlt
adc
ror
out
cmp
iret
in
lret
clc
sar
rcr
test
mov
lret
call
out
call
out
call
sti
fsubrp
loop
loopne
out
jecxz
ror
jecxz
nop
shrb
xor
icebp
out
ror
mul
in
stc
or
loope
adcl
jmp
cli
xor
cmp
fildl
cmp
loop
fmul
lret
into
clc
sti
out
ljmp
stc
fucomi
stc
cli
cmp
shr
cli
aad
ffreep
mov
and
cli
loope
into
adcb
fstpt
xlat
xor
out
fcmove
hlt
loopne
into
loop
jecxz
fnstsw
mov
jecxz
xchg
jecxz
out
ret
leave
cmp
into
lret
out
fucomip
ds
test
xchg
clc
mov
mov
in
jmp
cmc
mov
into
ss
out
fdiv
lock
cmp
ffreep
loopne
les
fadd
test
xchg
out
enter
lret
sar
idivl
cld
cmc
test
shl
stc
out
mov
inc
rorb
int3
in
not
int
rcl
fxam
out
loopne
mov
sub
loopne
in
aaa
imul
iret
repz
faddp
aad
ljmp
and
xchg
jmp
in
aam
out
fyl2x
call
faddl
loope
xchg
icebp
mov
loop
cs
in
xor
sarl
ffree
loope
cmpb
cli
sbb
jecxz
push
loope
out
xor
int
lret
lret
iret
cld
lret
int
cli
rcr
lock
or
lea
cmp
jne
jmp
int3
int
fstp
cmp
pop
pushf
push
adc
cli
push
int3
add
add
clc
int3
mul
loope
out
fists
xor
out
adc
out
loop
loop
fildl
rcl
mov
loopne
xor
aam
int3
cmp
cmp
call
rcl
into
fmul
test
cld
xlat
iret
shl
xorl
rcl
adc
xlat
mul
call
cmp
xor
enter
lret
clc
out
sti
jecxz
fcom
sti
aad
lret
roll
cs
aad
int3
xlat
hlt
fnstenv
fnstcw
in
in
mov
jmp
in
out
in
nop
ror
fsubrs
clc
cmp
cmp
cmp
cmpb
cmp
xlat
sar
mov
jecxz
shr
shrb
lds
stc
iret
xor
aas
cmp
cmc
cmp
loop
nop
int
loop
xchg
jecxz
das
lret
out
in
call
lret
jmp
xor
les
in
test
ljmp
repnz
hlt
in
out
cmc
stc
loope
iret
testl
mov
mov
mov
fucomi
cld
cmp
fdivrp
clc
loope
cmp
rol
in
adc
call
loop
mov
out
hlt
faddp
xlat
into
cmp
shr
jecxz
shr
adc
testl
xor
cmp
cmp
hlt
sarb
xchg
loop
cmpb
jecxz
mov
jmp
xor
ljmp
xorb
aas
test
cli
cld
loop
loope
mov
ret
mov
xchg
repnz
cli
std
ds
int3
int3
in
clc
cmp
lock
stc
int3
lret
xchg
aad
clc
xor
fsubr
xlat
hlt
cmp
aam
jecxz
sti
xor
cmc
fst
lds
mov
lret
f2xm1
cmp
ds
rcr
fcomp
aas
mov
ret
xchg
jmp
aam
aad
sar
shll
cmp
rcr
leave
loopne
fcmovnu
jmp
out
lret
mov
jmp
stc
cmp
xlat
sbb
test
fcmove
enter
jmp
fcmovnu
nop
lret
iret
lds
xor
xor
int3
fcmovbe
test
out
test
xchg
jmp
loop
out
into
iret
lret
jmp
leave
cmp
icebp
sar
loopne
cmp
out
ret
int
in
xchg
jecxz
xchg
in
xor
lock
into
fcmovu
sbb
lock
mov
in
test
in
in
ss
aam
aaa
in
aam
iret
fildl
idiv
enter
fstl
iret
rcl
xor
cmp
jmp
int
shl
clc
iret
rolb
out
cli
fmull
fiadds
cli
xor
in
iret
fnstcw
repnz
cli
fcmovnbe
not
fimull
loope
in
fisttpll
iret
fxch
cld
repz
xchg
addb
mov
xchg
repnz
ljmp
fcomi
cmp
loopne
cmp
fst
in
out
mov
ret
clc
ljmp
std
xchg
not
leave
cmp
out
into
iret
fcmovbe
in
rcl
fadd
in
jmp
cmp
shr
sti
shl
test
jmp
fcmovbe
fsubr
rcl
aas
fdiv
xlat
shl
sub
fadd
rolb
sub
sti
int3
out
ss
cmp
in
shl
rcr
std
ljmp
fstl
int
cmc
hlt
cli
repnz
cmp
cmp
out
cld
jecxz
decb
loop
out
xor
aad
call
iret
fsub
test
rcr
sti
mov
shr
les
in
int
ffree
test
aas
clc
test
hlt
ret
in
testl
iret
lock
jmp
sbb
test
sti
rcr
lret
loop
sub
call
repz
idiv
enter
icebp
rcl
fcomip
stc
xchg
leave
out
enter
lea
clc
into
stc
in
div
lret
cmp
lret
fcmovb
rolb
in
jmp
hlt
mov
xlat
xor
xor
cmp
call
out
fucomp
ret
ret
ror
repz
enter
mov
in
fstl
cmp
div
not
cmp
cmc
ffreep
ds
call
decb
divb
ss
out
cld
aam
sti
in
stc
loope
in
rol
test
in
mov
xchg
fsubr
xchg
into
aad
imul
into
cmp
fcomip
xlat
fmull
out
add
add
xlat
rcl
rcr
lret
push
cmp
aad
dec
gs
stos
roll
jle
add
cmc
roll
mov
jmp
test
test
cmp
ss
cmp
rcr
aas
xchg
mov
fldl
mul
cmp
repnz
lock
repz
jmp
int
ljmp
cmp
fcomi
cmp
sti
rcr
rcr
not
sti
int
mov
rclb
not
out
sti
leave
int3
rcl
clc
repz
shl
cmp
ds
mov
std
xchg
ret
aam
cmp
aaa
std
enter
fdiv
aas
cli
in
mov
cmc
out
lret
enter
repz
loop
cmc
shr
cli
into
cld
fmul
adc
cld
xchg
clc
incl
adc
out
jecxz
in
cs
enter
clc
fcom
into
lock
iret
repnz
std
iret
xchg
in
xchg
das
mul
repnz
int3
fxch
rcr
aad
ror
xchg
aad
mov
lea
decl
lock
icebp
jmp
faddp
int3
fdivr
faddl
in
sti
mov
in
cs
cmp
cld
sti
cmp
neg
clc
aas
stc
cmp
in
lds
jmp
jecxz
xor
repnz
out
repz
cmp
mov
cmc
in
lret
mov
mov
xchg
sti
sub
cmp
test
out
loope
mov
in
leave
movb
xor
rcl
neg
fldl
cmc
addb
xchg
out
sbb
ffreep
jmp
in
cmp
clc
cli
cmp
fsqrt
fcom
jecxz
loopne
fisttpl
fsubrp
in
lea
fxch
test
xor
hlt
ds
test
clc
lret
jecxz
lret
lret
mov
out
lret
out
out
cmp
sarl
xlat
sarl
xchg
lret
xchg
loope
aam
hlt
cmp
repnz
cmp
test
enter
mov
movl
mul
lret
int3
cmpb
icebp
fldl
filds
mov
out
out
loope
leave
jmp
std
shl
cmp
fadds
test
in
out
call
hlt
add
in
aam
cli
jmp
sub
test
cmc
cmp
int3
rol
out
idiv
iret
shl
aaa
aad
aam
jmp
in
xchg
fucomp
xchg
mov
imul
cmp
sbb
cmp
call
loope
lea
lret
rolb
out
jmp
enter
cmp
out
roll
xlat
neg
out
xchg
xchg
icebp
out
out
out
out
jmp
sti
into
sbb
adc
ljmp
jmp
iret
xchg
out
xlat
cmc
xor
ss
in
ret
loope
fcmovb
and
test
xchg
test
loopne
iret
loope
lret
out
repnz
cmp
out
std
stc
test
fxch
fmul
loopne
in
in
test
test
sar
aas
aad
sbb
call
xor
ffree
icebp
rorl
aaa
cmp
in
cmp
fyl2xp1
mul
cmp
lret
flds
fsubrp
test
shrb
xor
iret
repz
fcmovnbe
cmc
rcr
aad
out
aam
loop
hlt
loope
cmp
cli
repz
int3
out
xlat
enter
neg
aam
aaa
fdivrs
std
rolb
in
loope
shl
int
fxam
loop
jmp
aad
xor
idivl
int3
fptan
icebp
idiv
loopne
jmp
int
iret
shr
leave
clc
out
into
in
iret
xor
out
fld
cli
cli
ljmp
cld
int
into
xchg
xchg
lret
ror
repnz
cmp
cmp
xor
sti
idiv
fildl
repnz
divl
jmp
push
into
jmp
repnz
clc
fucomp
out
std
orl
aam
int3
stc
jmp
rcl
in
repz
xchg
std
cld
mov
cld
fsubrp
repnz
xor
xor
cmp
xlat
xor
fisttpll
jecxz
xchg
rol
call
shl
fsubr
cli
div
cmp
faddl
shl
mov
aam
enter
sar
clc
stc
int
flds
ret
ljmp
xchg
out
xor
xor
pop
add
pop
leave
ret
push
mov
jmp
into
lret
rcr
xor
mov
push
adc
jle
add
xor
lock
repz
cmp
into
sbb
rorl
add
repnz
out
int3
in
not
shr
loope
sbb
mov
fcmovnb
int3
out
xchg
out
iret
mov
loopne
das
les
leave
aad
jmp
shl
in
not
adc
and
ljmp
sub
out
enter
in
testb
jecxz
sub
fcmovne
leave
iret
nop
icebp
out
shr
lock
leave
shl
shr
add
fcomip
xchg
orl
repnz
iret
xor
not
ror
cmp
cld
aas
jecxz
cli
in
in
cmc
or
ret
ror
mov
jecxz
hlt
sarl
clc
repz
out
sarb
sbb
repnz
aam
stc
std
or
xchg
loopne
cmc
test
stc
ljmp
sti
shl
rcr
test
sbb
test
testl
enter
lock
aas
fidivrl
addb
test
jmp
xchg
subl
rcr
hlt
cld
shl
in
idiv
into
les
hlt
fucom
and
fdivp
iret
sub
fld
out
fxch
aaa
stc
cmp
imul
cli
repz
jecxz
aad
test
mov
icebp
hlt
call
fcmovu
divb
out
loope
ret
cmp
rol
lea
loope
in
in
jmp
cmp
in
lock
push
jmp
loop
jmp
mov
int
lock
rcl
fstpt
cmp
iret
test
lock
neg
testl
into
aam
in
shl
sar
fucomi
xor
aad
xchg
mov
out
add
xor
iret
lret
shr
sar
sbb
hlt
jecxz
test
cmp
popl
out
fadd
jmp
fcomip
int3
lret
fmul
test
xbegin
out
incl
test
loope
xlat
iret
aad
shl
fdiv
xor
cli
in
test
call
stc
iret
rcl
lock
in
ret
lock
call
int
xlat
lock
imul
test
in
vpaddusw
ljmp
enter
hlt
leave
aam
in
cmc
loopne
repz
call
in
cli
ljmp
cmp
flds
test
addl
repz
hlt
xor
shr
jmp
cmp
cmc
ret
lret
faddl
ljmp
rcl
out
aaa
fsub
clc
test
aam
test
cld
aad
loop
std
jmp
int
iret
loop
repnz
out
leave
std
fabs
rcr
cli
addb
ljmp
divl
fidivl
cmp
ljmp
fdiv
xlat
cld
ljmp
mov
das
iret
lret
out
repnz
sbb
lret
aas
std
cld
ror
out
ror
cmc
jmp
enter
xor
cmp
in
jecxz
cmc
xchg
rol
xlat
fmuls
icebp
repnz
nop
aam
in
sti
cmc
icebp
lock
loopne
ljmp
sti
mov
jmp
loop
leave
out
out
aam
lock
repnz
lret
cmp
ret
out
mov
lret
iret
aam
mul
call
iret
leave
cmp
cmp
rol
out
test
ljmp
testb
cld
enter
repnz
test
aam
enter
testl
enter
jmp
cmp
ss
hlt
orb
out
orl
div
ss
stc
jecxz
enter
into
fucomip
mov
sub
icebp
repnz
aad
ror
aas
stc
repz
ret
loop
mov
mov
lds
in
mov
nop
das
iret
icebp
clc
into
std
aam
cmp
rol
loop
sbb
xor
fsincos
out
jmp
jecxz
rcl
enter
cmp
iret
aam
ret
test
loope
fdivr
enter
or
into
into
call
cmc
cmp
xlat
icebp
aam
jecxz
test
out
loop
orb
xor
ss
jmp
loope
lock
sbb
push
mov
mov
movl
cmpl
je
cmpl
jne
pushl
call
cmpl
jne
mov
dec
mov
xor
add
dec
mov
jmp
sub
mov
sub
movl
adcl
jmp
mov
fcmovne
jnp
xchg
jb
dec
dec
shrb
add
rolb
loope
mov
out
ljmp
jecxz
jmp
rcr
sar
lock
rcl
sbb
xacquire
ss
cmp
int3
and
test
jmp
fcmovnu
cld
repnz
mul
aaa
fidivrl
shl
lret
iret
loope
sub
cmc
xchg
mov
push
jecxz
loop
out
enter
lock
cmc
int
loope
ftst
cli
xchg
cmc
rol
stc
lea
lret
out
into
icebp
loop
out
shl
cld
call
and
hlt
std
mov
loope
test
mov
cmp
leave
in
hlt
cmp
iret
shl
shl
enter
cli
iret
int
fimuls
clc
out
aaa
cmc
enter
aam
repnz
loopne
mov
out
clc
cld
mov
loopne
out
out
sub
fsubr
icebp
cmc
shl
clc
out
sar
icebp
in
test
and
test
out
div
cli
div
ss
loop
out
aas
rcl
aas
jecxz
test
fdivr
into
or
mov
iret
lock
xlat
stc
lret
cmp
aad
stc
fsub
out
test
xlat
mov
jmp
lea
aad
leave
enter
cmp
aaa
aas
rcr
ret
out
ljmp
jmp
ss
hlt
les
enter
fadd
rcl
stc
cmc
mov
ret
out
xchg
repz
lret
icebp
sti
fiaddl
out
std
rolb
call
loopne
leave
fsincos
cmp
cmp
std
lret
xlat
loopne
aam
xchg
sar
clc
sti
mov
jmp
shll
xlat
cmp
shl
idivl
test
repnz
mov
leave
xchg
repnz
incl
into
fistpll
jecxz
fildl
cld
out
mov
cld
jecxz
cmc
testb
repz
aad
aaa
lret
cli
repnz
cmc
ret
jmp
orb
divb
lock
jmp
icebp
test
dec
repz
xchg
mov
loop
ljmp
hlt
lock
repnz
rolb
idiv
jecxz
sub
leave
ljmp
ret
icebp
sarb
std
divb
repnz
loope
sbb
leave
orl
hlt
in
out
repnz
hlt
cli
fistpll
cli
sti
cld
inc
vpandn
mov
xchg
mov
rcr
out
aaa
test
idiv
not
sbb
dec
mov
loop
xchg
xor
clc
in
iret
clc
lret
iret
xlat
addl
fimuls
aam
out
xor
ret
fnstcw
xor
cmp
repz
stc
into
xchg
and
fadd
neg
mov
loope
sarb
xor
sti
ds
sarb
call
jmp
xchg
sti
nop
shl
mov
hlt
loop
lret
cld
out
neg
lock
cmc
std
loopne
cmp
jmp
shl
xor
in
cmc
hlt
idiv
into
sti
addb
addb
int3
xchg
jmp
loopne
iret
cmp
rcl
out
test
aad
mov
int3
in
out
xchg
aaa
icebp
icebp
in
enter
rcr
iret
clc
repz
imul
jmp
lret
repnz
in
fmul
lret
std
std
aam
ret
sarb
incl
test
loopne
mov
loop
cli
sub
aaa
fdivp
out
aas
lock
enter
into
mov
mov
sub
xor
stc
sar
aad
enter
loope
lret
xchg
jecxz
ret
rcr
shl
xor
cld
clc
aas
cld
fst
aas
and
test
out
mov
lock
xor
not
in
rcl
in
frstpm(287
sbb
aad
hlt
std
jecxz
sti
cli
jmp
hlt
xchg
lock
mov
fcomp
int3
sar
shr
stc
loope
jmp
movb
leave
fiadds
out
xor
xlat
cld
hlt
int
cmp
fchs
push
inc
cmc
clc
lret
nop
jmp
aad
in
lret
cmp
cmp
cmp
neg
out
in
sti
stc
in
ret
loop
into
xchg
test
or
adc
mov
mov
jmp
lret
ror
rcr
lret
fistl
mov
jle
add
int
lock
hlt
ss
aaa
out
std
test
cmc
ds
xchg
aad
mov
fcmovu
fcomi
in
call
ss
fucomp
leave
xor
loope
aas
std
aad
ret
mov
mul
mov
cli
out
jmp
f2xm1
out
clc
imul
div
aam
sar
fdiv
flds
clc
lret
out
loope
mov
xor
xor
into
fcomp
ret
xchg
in
jmp
decb
ror
into
xlat
rcl
repz
lret
sar
stc
aam
ds
neg
hlt
jmp
clc
cld
fmulp
int3
into
in
fcomip
enter
fstp
jmp
into
fstp
bnd
xlat
enter
mov
fchs
iret
cld
jmp
xchg
fcomip
das
shl
cmp
fucomi
fst
cli
xor
ret
aad
loop
fimuls
loopne
stc
jmp
fcomi
out
loopne
fcmovnb
loopne
mul
lds
loope
decb
orl
cld
cmp
fadd
fdivr
repnz
cmc
in
in
cmp
shr
loop
into
shr
leave
cmp
stc
cmp
rcr
out
shl
mov
cld
clc
ret
enter
or
xchg
lock
enter
fsubr
lock
in
clc
lret
cmc
aam
sar
repz
xchg
out
jmp
ljmp
in
lret
int3
in
out
iret
fldz
lock
lret
out
orb
mov
shr
fdivrs
ljmp
clc
mov
mov
mov
iret
hlt
int3
nop
xchg
sub
clc
fadd
int3
fidivrl
aas
loope
into
in
icebp
cmp
out
jmp
lret
loop
call
hlt
leave
lret
xlat
cli
aaa
int
out
repnz
enter
cmc
jmp
loope
jmp
repnz
call
in
ljmp
cmp
xchg
clc
leave
decl
xchg
out
fadd
lret
cmp
clc
aaa
in
fnstenv
aaa
ret
add
in
out
jmp
loop
jmp
xor
call
ss
lret
testb
repz
loop
adc
out
xor
enter
fcomi
fidivrs
testl
jmp
in
shll
xor
xor
into
faddl
loopne
sar
cmp
int3
mov
jmp
out
xchg
aam
test
call
sar
call
roll
incb
xchg
into
fadd
xor
fdiv
aaa
ret
ret
out
ljmp
xchg
call
into
rol
sub
hlt
out
xor
int3
repz
stc
fchs
lret
mov
rcr
shr
int3
rcl
xor
std
clc
rcr
in
cmp
cli
fidivrl
cld
nop
mov
xchg
mov
mov
hlt
icebp
divb
icebp
sar
fxch
clc
hlt
stc
rcr
adc
leave
stc
out
out
loopne
iret
aam
in
fcomp
cmp
stc
fdivl
cmpb
flds
lret
int3
repz
das
xor
cmp
int3
stc
lret
sub
fcomp
in
ret
movb
repz
xlat
ror
aam
rolb
xchg
in
cld
jmp
shl
loope
lret
jecxz
stc
cmp
hlt
cmc
cmp
enter
out
sti
jecxz
xchg
xchg
in
adc
repnz
roll
les
and
hlt
xchg
xchg
repz
imul
rcr
aad
aad
iret
int
aam
in
ds
fcmovnu
cmp
xchg
mov
out
shl
idiv
fldl2t
fsub
aad
aas
lret
test
xchg
xor
xor
imul
in
fst
sarb
repnz
aad
int3
loopne
jmp
in
jmp
aaa
in
cmp
sti
hlt
out
aam
clc
test
std
call
ffree
mov
add
sub
ljmp
cmc
fcmove
stc
in
aas
out
fcomp
flds
rcll
out
int3
cmc
fptan
loopne
in
fildl
in
jmp
ret
jmp
int3
rcr
repz
ss
rcr
or
ror
in
adc
jmp
addl
sar
out
xor
jmp
enter
int
fnstenv
movsl
push
leave
xchg
add
add
repz
cmp
loop
sarl
cli
in
sti
fldl
int3
xchg
leave
iret
in
xor
ljmp
test
xlat
repnz
leave
cli
clc
mov
loopne
fcmovnbe
mov
lock
repz
cmp
aas
aas
cmp
test
xor
mov
not
xor
in
cld
aaa
clc
repz
int3
cmp
cmp
out
jmp
into
xchg
mov
incb
stc
repnz
hlt
cmp
out
out
idivb
and
sti
mov
int3
adcl
cmp
rol
idivl
into
fstpt
into
int
in
cmc
test
ret
test
lret
fdiv
xchg
jmp
shlb
in
lds
ss
inc
ret
aas
xchg
ret
lret
lret
int3
mov
xor
call
aas
fdivs
add
in
in
jmp
test
out
iret
hlt
jmp
lock
loopne
neg
xlat
loope
iret
cld
loope
jmp
push
cmc
jmp
jecxz
clc
xor
incl
ret
shl
out
test
xchg
mov
xor
icebp
ss
xor
sar
leave
in
in
cld
test
xchg
icebp
cmc
out
xor
loope
rcl
out
mov
neg
mov
jecxz
xchg
into
lret
sub
cld
in
neg
cmc
stc
sar
xlat
aam
lret
hlt
ljmp
lock
shr
aaa
std
lret
fidivrl
aas
xlat
shl
fistpll
out
jmp
lret
fisttpll
int
in
ret
hlt
fmul
fxch
clc
stc
fldl
shl
jmp
movb
xchg
aad
aaa
enter
xlat
jmp
aas
cmp
rcl
rol
stc
inc
in
mov
rorb
ftst
out
fsubr
cmp
repz
aam
stc
testl
test
out
fldlg2
test
cmp
out
loop
in
nop
lret
loope
xor
not
neg
cmp
jecxz
in
fimuls
xchg
xchg
rorl
repnz
std
hlt
into
neg
cmp
ret
jecxz
mov
out
filds
xor
call
clc
lret
out
cmp
add
in
out
addb
cmc
out
leave
xor
fst
cmp
ljmp
shl
add
sti
mov
enter
fists
ror
xor
shll
lock
std
ret
ds
aad
aad
loope
movb
ret
test
call
repz
cmp
ds
rcr
sbb
enter
enter
rolb
ret
cld
in
xor
fdivp
rcr
in
aas
fmuls
fiaddl
aad
loop
shl
sti
xor
fistpll
shl
test
in
call
jmp
test
into
leave
out
out
in
aad
std
std
sti
xchg
roll
xchg
out
mov
cmp
test
cld
xor
in
cli
rol
clc
sbb
std
in
repnz
mov
mov
xor
cmp
in
leave
cmp
loopne
flds
neg
int3
clc
mov
int3
fsubrp
ror
ror
ss
fnstcw
out
xlat
ffreep
in
cld
cld
lret
sti
int
test
in
lock
hlt
std
loope
inc
or
mov
incl
orl
xor
fcmove
in
fucomp
xlat
loopne
cld
div
sar
cmp
ds
fldl
xchg
not
jecxz
out
test
pushl
cmp
cmp
rol
shl
jmp
int3
lret
fcmovbe
ljmp
hlt
fidivl
cmp
out
call
out
out
cld
sti
sub
aad
ljmp
in
hlt
lret
xlat
fdivrl
ds
repz
test
mov
into
mov
out
xor
hlt
jecxz
jmp
fdivrp
ret
loopne
out
testb
lret
out
fdivr
xchg
out
fdivp
fldz
leave
cmp
in
cmp
xlat
cmp
cmp
loop
mov
out
shr
aad
aad
fdivs
cli
fidivs
fst
xlat
aas
jecxz
addl
int3
mov
sbb
jmp
ret
fmul
fcom
fdiv
jne
test
hlt
cwtl
xor
add
add
ljmp
lock
not
in
lret
sar
in
cmp
enter
enter
lret
lret
jmp
ss
idiv
mul
fiaddl
xlat
ficoml
jmp
out
fnop
cmp
shl
std
iret
aad
in
call
imul
orl
jmp
sti
cmp
cld
out
lock
div
ret
neg
out
loopne
mov
xchg
xchg
enter
fcmove
ret
out
aam
aam
mov
fsubr
filds
div
xlat
ss
ss
out
icebp
sbb
in
loopne
ljmp
cmc
in
cmp
jmp
sti
and
enter
jecxz
loope
orb
lret
out
aam
int3
in
cmp
repz
stc
xlat
xlat
loope
enter
repz
hlt
lock
fdivrs
jmp
loope
aam
ljmp
int
iret
test
aam
repz
rcr
rolb
in
ret
lock
out
filds
in
in
xor
sar
jmp
rol
cmp
leave
call
lret
lret
out
hlt
call
out
xlat
aaa
cmp
leave
roll
call
loopne
iret
sti
dec
out
iret
sub
xor
stc
jmp
aam
aad
ret
mov
leave
call
out
shl
loopne
shl
cli
clc
lret
iret
cli
cmp
fcomp
div
in
out
enter
rcl
in
in
ret
shl
aaa
lock
ffree
icebp
out
sar
mov
fildl
mov
xchg
in
out
jecxz
xlat
ss
cmp
cmp
rcl
in
cld
fadd
sub
cmp
xchg
in
aam
out
clc
aam
call
jmp
fcmovbe
cmpb
aad
jmp
test
aad
hlt
rcr
fprem
in
fmul
clc
xlat
jmp
cld
in
out
flds
in
std
jmp
shr
enter
cmc
shl
cmp
clc
fld
rcl
ret
jmp
or
mov
cs
aad
push
sbb
cmp
aam
cmp
orl
aam
xor
in
xor
stc
out
clc
out
lock
std
in
not
clc
mov
lock
xchg
leave
test
xchg
xor
jecxz
rcr
xor
cmp
mov
idiv
in
ljmp
in
test
call
clc
shl
aad
ret
aad
leave
incb
out
test
ljmp
enter
in
neg
xlat
out
out
repz
aam
lret
loope
mov
into
ror
fidivrl
into
cmp
fptan
out
adc
hlt
xlat
or
into
jecxz
movl
xor
loope
sub
ljmp
repnz
in
mov
in
into
icebp
in
shr
iret
rol
ret
ret
hlt
cld
out
lret
enter
cmc
out
jecxz
in
xor
lock
rcl
rcl
loop
fcmovnb
dec
filds
lret
leave
in
cld
shlb
cld
inc
shr
fsubr
rorl
mov
fcomip
sub
div
clc
repnz
aam
leave
into
into
fidivrl
out
call
ret
in
cld
mov
mov
into
loopne
lret
repnz
repnz
shlb
fidivrl
cmp
xlat
out
mov
lret
mov
lret
in
idiv
std
aad
fcomp
sar
hlt
and
cmc
shr
std
fcmovnbe
pop
mov
call
lret
lret
fadds
out
loope
cmp
stc
xlat
fdiv
into
jmp
mul
out
xor
lret
fdivs
faddl
fmuls
out
int
fxch
mov
fidivrl
repz
fstpt
test
sbb
in
fst
decl
aam
xor
leave
fdiv
idiv
incb
neg
xchg
aam
xchg
in
lock
int
sti
fidivrs
idivl
fcomip
in
decb
call
cli
rcl
and
roll
add
add
add
or
cmp
inc
mov
cmpl
jae
cmpl
jne
pushl
call
cmpl
jne
mov
inc
mov
jmp
andl
mov
inc
mov
cmpl
jne
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
sub
jmp
aas
rcl
aad
fstp
loop
pop
mov
popa
in
add
add
cmp
lret
cmp
fidivrl
aam
clc
xor
jmp
in
mov
xchg
in
nop
ror
xor
shr
cli
leave
int
int3
aad
ds
xor
nop
mov
iret
repnz
fldl
out
lock
cld
mov
mov
jecxz
out
in
out
xor
loop
sti
jmp
jmp
fadd
aam
lock
in
jecxz
xlat
cli
and
adcl
cli
xor
aaa
lock
fdivp
cmp
repnz
mov
icebp
int3
xchg
clc
clc
icebp
xor
ljmp
hlt
lock
xchg
mov
roll
loope
enter
leave
cmp
cmp
fcmovne
std
push
fdivr
cli
fsub
clc
lock
test
fnstenv
into
test
aam
ds
jmp
addl
fdecstp
lock
movl
in
lock
fcmovnu
rcl
cli
out
cmp
fxch
cmp
xchg
mov
cmp
fcmovbe
ret
hlt
aam
cmpl
cli
les
clc
das
cli
aaa
into
sti
idiv
div
aam
sti
xchg
aad
fildl
out
ret
mov
jmp
loopne
fdivs
cmp
lock
loopne
cmc
test
cld
xlat
fcmove
ffreep
jmp
int3
aam
out
loope
mov
xor
cld
int3
aaa
shr
int3
hlt
cmc
call
in
xchg
sub
cmp
repnz
aaa
shl
cmp
in
stc
iret
fsqrt
xchg
orb
test
out
hlt
ljmp
aas
fmulp
out
ror
clc
jmp
in
loopne
out
in
jmp
lret
cld
rcr
fstp
lret
int3
sbb
sti
stc
in
ret
fisttps
cld
mov
jmp
lret
icebp
test
xlat
out
fcomip
fiadds
shl
mov
cld
mov
clc
in
cmc
jmp
cmp
in
jmp
movb
fldl2t
ret
xchg
mov
nop
ror
sarb
fidivl
bnd
pushl
cmp
cmp
rcl
fadd
jmp
mov
ret
ret
fcmovb
cmp
cmp
repnz
cmp
aas
jecxz
aad
in
cld
xchg
aam
aas
fdiv
aas
jmp
int3
ret
fadd
cli
lret
xlat
loope
rcl
orl
loop
cli
out
out
fsubrp
jecxz
fcmovb
fcmovb
ret
mov
int3
fmul
ljmp
out
jecxz
cmp
cmp
shl
aam
pushl
repz
ret
xchg
jmp
enter
lret
xchg
out
bnd
shr
sti
cmp
cmp
test
out
out
fscale
xchg
mov
in
dec
iret
ss
xor
ljmp
loopne
clc
add
in
test
mov
xor
xor
aam
ds
jmp
in
cli
loopne
cli
add
out
into
orl
leave
stc
cli
shl
out
int3
idiv
sbb
xchg
loopne
stc
leave
fcmovnb
test
in
call
cmc
ss
stc
loopne
rol
sar
repnz
in
mov
shl
stc
repnz
sti
cmp
sti
clc
faddl
mov
loop
ljmp
call
shl
aad
sbb
loopne
xor
in
lock
out
xor
rcl
xor
fnstenv
neg
cmp
rcl
aam
mov
out
out
cli
std
fmulp
xchg
sbb
xchg
ret
lret
xor
int
in
into
loop
repz
or
imul
call
mov
loop
cmc
fdivs
into
fcomip
loop
sar
xlat
repz
and
dec
xchg
mov
aad
loopne
out
xor
rcr
call
cli
sti
test
icebp
test
jmp
xchg
mov
int
cli
cmp
int
ljmp
xor
incl
faddl
xchg
rol
jecxz
rol
ss
jmp
fucomp
std
aam
rcl
aam
jecxz
out
stc
int3
mov
loope
aaa
ror
xor
fsubr
into
shl
shl
rcr
xlat
rcl
sti
xchg
fmul
xchg
shl
test
idivl
lret
xor
ljmp
fdivr
mov
sbbl
jmp
leave
aad
xlat
fcmovnu
ret
pop
lock
repz
aas
mov
add
mov
jmp
int3
into
mov
int
ss
cmp
jmp
aas
fiaddl
test
clc
dec
fmull
xor
lret
in
icebp
xor
rol
into
fadds
jmp
xchg
in
cmp
leave
icebp
int
int3
hlt
leave
neg
stc
aas
aad
xchg
rcr
lret
in
iret
dec
mov
ret
sti
cmc
fucomip
hlt
out
sar
rcr
ret
jmp
cld
ljmp
aam
div
cmp
jmp
les
lea
in
loopne
lret
repz
jmp
cmp
jecxz
in
cmp
in
stc
fucomip
jmp
lret
out
sub
xor
stc
xlat
jmp
enter
cmp
stc
stc
movb
cld
and
xor
lret
in
repz
out
fnstsw
xor
rol
roll
xchg
ss
lret
into
cmp
fiadds
cli
shl
loop
call
iret
mov
xchg
jmp
xlat
div
not
cmp
clc
cld
std
filds
imul
loopne
fmul
mov
lock
rcr
in
lock
xorb
in
out
ret
adc
out
addb
out
hlt
in
cmc
cmp
loope
xor
repnz
out
mov
loope
out
lret
std
rclb
not
int3
xlat
into
cld
into
std
fcmovu
hlt
cli
xchg
xlat
into
cld
loope
in
shr
leave
lret
cmc
xor
not
stc
clc
fld
test
cli
fiadds
lock
lret
int
das
cs
aam
fcmovbe
aam
ds
clc
clc
loopne
loopne
adc
test
leave
lret
lock
adcl
out
repz
shl
fldl
xchg
sti
fldl
xor
in
int
fstpt
aas
sar
rcr
clc
aas
ljmp
mov
jecxz
mov
mov
out
xor
xor
jecxz
xor
repz
ljmp
int3
sub
ffreep
xlat
shr
into
cmc
cmp
in
cmp
cmp
xchg
repnz
loopne,pt
mov
repnz
rcr
out
xor
test
fidivs
cmp
fdivr
in
fdivrp
xlat
shl
cli
mov
out
mov
loop
iret
mov
jmp
hlt
std
int
enter
fucom
ds
out
ljmp
test
mov
loop
hlt
repnz
xor
test
cli
aas
loope
std
jmp
lret
lock
int3
xor
ror
cli
into
jmp
cli
out
fcmovnbe
fimuls
cld
loopne
out
and
in
div
ss
fcomi
cmp
fcomp
imul
hlt
out
mov
loope
neg
test
loop
jmp
mov
test
xor
xlat
aad
fsubr
loope
cld
sar
jmp
in
xchg
cld
aad
ret
ret
icebp
iret
cmp
frndint
ret
test
out
enter
iret
out
nop
lea
out
aad
shl
aas
aas
sti
roll
aad
or
std
sub
lret
mov
ror
xor
call
iret
fsubr
jecxz
sbb
cli
mov
loopne
icebp
in
out
xor
xor
cmp
out
aas
cli
rcr
cmp
fisttpl
inc
adc
cmc
enter
repnz
out
xor
xor
rol
cmp
aad
in
fninit
ficoms
clc
out
repnz
leave
int3
loope
cmp
into
clc
rol
addl
shl
rcl
loop
xor
sar
clc
ret
aad
icebp
call
loope
ljmp
lea
ss
out
cs
aad
aad
idiv
cmp
idiv
cli
std
test
cmc
testl
xor
out
xor
ds
sar
aas
test
test
dec
int
and
cmp
call
incb
jmp
stc
fdivr
icebp
nop
call
shlb
aam
neg
out
jmp
div
aad
test
mov
cli
enter
mov
jecxz
shlb
lret
out
out
fcmovnu
jecxz
loope
and
and
in
xchg
fmull
addl
mov
mov
sub
movl
mov
xor
mov
jmp
ror
ret
int
movsb
inc
push
or
add
cmp
add
add
xchg
int3
stc
iret
fdivrl
loopne
fidivrs
ds
test
loopne
loope
sbb
xchg
in
into
aas
stc
das
xlat
xlat
cmp
repz
into
shl
rol
repz
shr
std
mov
clc
out
into
hlt
fiaddl
std
xchg
cli
adc
icebp
test
stc
in
out
xor
icebp
in
fld
shl
mul
xlat
jmp
fmul
fdiv
icebp
fmulp
leave
ret
xlat
lock
out
jmp
xlat
hlt
ljmp
mov
in
xlat
repnz
cmp
int
cmc
cmp
movb
repz
repnz
leave
repnz
leave
sti
leave
ds
ljmp
fmuls
jmp
into
enter
repnz
out
out
cmp
sarb
fcmovu
aaa
ljmp
not
aad
int3
mov
xchg
xchg
nop
rclb
jmp
cmp
lret
rcr
shl
bnd
cld
leave
mov
test
test
and
rol
mul
fmul
repnz
jecxz
sti
int3
test
jmp
loopne
in
cmc
mov
stc
ret
jmp
out
in
out
faddp
lock
out
out
hlt
faddl
ljmp
aad
fsubr
repnz
cmpb
ret
cli
xlat
shl
in
xlat
sti
lea
xor
out
cmp
fcomp
fcmove
out
add
lock
fildl
sbb
aad
lret
out
ljmp
fdivrp
fadd
cmp
idiv
testl
xor
icebp
in
icebp
sti
idivb
std
xor
ds
icebp
incl
cld
cmp
rolb
out
rcr
xlat
cmp
repnz
rcl
in
flds
mov
int3
int
jmp
enter
lret
idiv
adc
sti
cli
icebp
mov
test
nop
lds
in
in
in
sti
ljmp
fcmovu
stc
rcr
ljmp
addl
cmp
cmp
addl
test
stc
vpmulhuw
iret
dec
xorb
in
cmc
stc
cmp
rcr
loopne
incb
jmp
mov
in
call
stc
in
into
iret
out
cmp
cmc
cmc
rcl
repnz
jmp
test
rorl
out
jmp
cmp
in
lret
repz
aam
faddl
fsubp
out
in
mov
cmp
lret
fxch
fsincos
std
loopne
adc
xlat
loope
in
out
vphaddubd
lock
in
mul
repnz
call
aam
loope
test
fucom
cmc
test
fsubr
test
jecxz
in
ror
lret
ss
test
fdivp
loop
lock
cmp
xlat
aam
inc
jmp
fcomip
out
rcl
lock
hlt
iret
out
int3
cli
shr
in
loopne
mov
sti
ljmp
xor
shlb
jmp
fmul
cmp
jmp
incb
ljmp
sar
sbb
loope
ljmp
clc
mov
test
cmp
xor
neg
cmp
loopne
fdiv
movb
fucomip
mov
out
icebp
std
cli
into
aas
sar
jecxz
hlt
fcmove
in
leave
loop
in
stc
xchg
and
out
ret
repz
in
jmp
lock
clc
neg
shl
mov
std
int
into
in
repz
call
fld
not
aad
hlt
int
shl
stc
loop
xchg
call
loop
into
icebp
repnz
imul
fidivl
aam
cli
xlat
aam
loop
xchg
repnz
call
or
in
adcb
cmp
int
fdivrl
fstp
fst
xchg
fcmovnb
in
xlat
call
out
xchg
fiadds
icebp
in
clc
lret
out
out
xor
shl
test
fucompp
mov
enter
loopne
xchg
loop
nop
jecxz
xor
in
into
out
stc
std
roll
jmp
lret
into
out
sti
loop
xchg
icebp
xlat
iret
cmp
fcmovne
jmp
into
ljmp
cld
fadds
in
out
lret
xor
cmp
stc
icebp
rol
fsubs
test
add
int3
rcl
ret
fldl
dec
inc
push
add
stc
loope
cmp
xlat
shl
fcmovu
in
mov
sti
nop
mov
lret
jecxz
ror
cmp
sarl
ds
enter
ret
fxch
lock
fsubp
jmp
loope
enter
cmp
fdivl
hlt
test
loopne
test
fldl
jecxz
repnz
lock
aad
lock
rcr
repnz
into
in
in
out
mov
fcmovu
cmp
bnd
xor
fsubr
aad
fdivrl
adc
stc
les
mov
lock
ror
int
fdivrp
fcomi
out
aaa
faddp
ret
shl
sti
les
fucomp
idivb
repnz
in
xlat
cmp
in
icebp
cmpl
shl
cmp
jecxz
loopne
test
shr
loop
nop
xchg
into
xor
out
ret
jmp
int
cmp
rol
sbb
test
leave
or
out
into
test
lret
fdivr
out
fdivrp
out
cmp
aas
fcmovnu
loopne
fstp
fldlg2
fsubr
jmp
fucomip
xchg
orl
fcmovne
ljmp
fcmovu
neg
call
shl
lea
icebp
xor
icebp
xor
iret
cmc
repnz
add
cmp
aam
in
xchg
out
test
cmp
xor
shl
fcomi
hlt
fcmovbe
aas
cli
leave
jmp
fcomp
out
xchg
out
xchg
in
jecxz
enter
cmp
shl
shlb
aad
lds
out
xchg
mov
jmp
fnstenv
jmp
xorb
repz
fsubrp
ljmp
rcr
mov
aaa
stc
cmp
sar
fdiv
icebp
rcl
mov
lret
in
test
in
out
cmc
lret
hlt
ret
call
enter
shl
ret
xlat
cld
addb
shl
repnz
int3
jmp
xor
cmp
out
idiv
std
aas
cmp
fsub
cli
fdiv
loopne
int3
test
jmp
leave
addb
icebp
ss
out
fdivr
call
fcmovnu
icebp
call
clc
fcom
call
out
out
shr
enter
jmp
aam
ds
fisttps
in
test
xchg
ror
nop
jmp
enter
aam
xlat
lret
rolb
aam
mov
int3
jecxz
cmc
xchg
divb
enter
clc
into
stc
fstpt
ret
clc
loop
cmc
xchg
nop
popl
enter
cmp
into
int
mul
xchg
test
xchg
mov
lret
fisttpll
cli
in
fyl2x
std
hlt
jmp
jmp
test
out
cmp
lret
icebp
lock
fucomip
iret
imul
ss
in
out
jmp
cmp
ror
sar
loope
call
call
mov
repz
xor
idivb
xor
cld
cmp
test
test
test
sar
nop
shr
addl
fcomp
int
sti
out
stc
hlt
test
std
cmp
xchg
fucomip
repnz
shll
hlt
lret
in
out
clc
in
fstp
fldl
mov
leave
xor
ljmp
aas
incl
loope
xor
lret
xchg
xor
shl
enter
shr
cmp
test
in
incb
lock
xor
cld
int
out
fstp
in
aam
and
fucomi
std
xchg
xor
rol
lret
clc
ss
ljmp
in
fscale
leave
ret
out
jmp
xchg
out
lock
jmp
fucomip
enter
into
cli
enter
idivl
out
iret
icebp
addl
fxch
fsub
shl
jmp
jmp
cli
ds
or
hlt
aam
jmp
out
leave
mov
xchg
jmp
aad
sarb
cmp
cmp
cmp
enter
fdiv
cld
shl
mov
out
in
out
stc
in
sub
fucomip
fyl2x
jmp
xor
fdivrp
hlt
out
int3
and
mov
lret
jmp
icebp
in
sub
int3
stc
into
jmp
rcr
test
out
aad
out
out
in
in
loopne
xchg
mov
lret
in
bnd
icebp
jmp
jecxz
call
loopne
cli
loopne
mov
aaa
ret
cmp
std
aas
repz
loop
rcr
cld
xchg
movl
xor
movl
sbb
jmp
fadd
aam
fst
fcoms
sbb
jg
loopne
xchg
xchg
addb
stos
add
lret
lret
out
loope
mov
out
loop
ss
aam
hlt
enter
adc
fcmovb
jmp
cld
addl
sub
out
sarb
clc
cld
in
cmp
cmp
in
xchg
clc
sti
fsubr
shl
xchg
xchg
xchg
orl
rcr
xlat
hlt
int3
stc
ret
mov
stc
ret
out
loop
les
shr
in
out
rol
fdivrp
std
fcmovb
jecxz
ret
rol
xchg
test
and
mov
leave
fucomp
test
xor
aam
ret
aas
jmp
fildl
loope
call
test
iret
call
enter
cmp
mov
leave
mov
lret
ror
int3
out
repz
rol
aad
das
jmp
ss
call
jmp
in
fsub
lock
xchg
repnz
test
aad
rcl
xor
shl
filds
fisttps
mov
in
hlt
fisttps
int
fsubp
ror
adc
clc
not
ds
rol
loope
in
out
repnz
aam
out
loope
into
out
in
cmp
aas
icebp
addb
ret
cli
vpmaxsw
repz
subb
into
repz
xor
in
lock
roll
cmc
cli
int
ror
shr
cmp
fdivrs
sti
rcl
loopne
ret
jmp
jmp
fcmove
adcl
les
into
aam
cli
clc
std
cmp
out
cli
mov
out
leave
jmp
ljmp
cmp
aam
cmp
cli
cli
cld
ljmp
ljmp
jecxz
lock
mov
int
testl
sbb
cmc
rclb
cmp
out
cmp
cmp
xor
in
stc
addb
mov
fstp
sti
xchg
test
xor
enter
in
fcmove
lret
ss
jecxz
clc
std
mov
into
int3
out
std
out
xchg
shl
call
cli
idiv
loope
in
aad
out
enter
leave
mov
jecxz
xchg
rorl
jmp
ss
fcomp
sar
ffree
loop
loop
call
fsub
jmp
icebp
repz
in
idivl
in
fidivrl
cmp
lret
sti
int
xchg
fsub
in
jmp
test
cmp
ror
repnz
enter
jmp
cld
into
shr
loop
out
xor
std
sti
sarb
cmp
fcomip
fadds
ljmp
mov
cmc
mov
lock
cmp
fdivp
cmp
sbb
fucomip
test
rclb
xchg
les
sub
jmp
aad
ss
fdiv
roll
cmp
mov
nop
xchg
xchg
int3
div
xor
hlt
cmp
fcmovbe
fldl
cmp
jmp
in
in
mov
shl
out
enter
fucom
cld
loopne
out
sti
cld
fadds
out
add
mov
xlat
lock
out
jmp
int
ds
loope
shl
test
in
in
ret
jmp
mov
shl
xlat
neg
ljmp
shl
ret
test
in
filds
ror
aam
not
ds
loopne
in
aam
std
cld
filds
cld
mov
int3
shl
jmp
cmpb
testb
mov
fcmovnb
nop
out
ficoms
lock
leave
ds
out
loope
sarl
std
rcr
in
enter
xchg
out
or
shl
xor
das
fst
sti
repnz
xor
loop
stc
inc
sub
mov
xchg
xor
xor
in
cmp
ret
loop
xchg
inc
int
addl
in
sti
cmp
jmp
cli
frndint
ret
stc
leave
mov
fucom
jecxz
icebp
out
lret
in
cli
call
hlt
cmp
cld
in
loop
in
in
xchg
in
shl
sarb
enter
cld
icebp
lret
cli
std
jecxz
out
loopne
xchg
xchg
fimull
out
jecxz
hlt
xchg
shl
ret
ljmp
loope
lock
cli
decl
in
into
xchg
loopne
xor
fld
inc
int3
cmp
movl
sbb
movl
mov
adc
xor
mov
subl
add
jmp
int
int
leave
push
hlt
cltd
loope
mov
add
add
iret
cmc
out
out
ds
into
aad
fsub
aad
stc
enter
jmp
mov
aam
repz
aad
cmp
cld
test
xchg
stc
sti
idiv
lret
incl
aam
sti
shl
cmp
cmp
into
shr
loope
ret
idiv
out
mov
fdivr
into
dec
int3
out
call
xor
out
leave
int
cmp
fnstcw
test
rcl
in
xchg
jecxz
lock
xchg
aam
iret
in
out
cli
leave
in
fdecstp
jecxz
sarb
ds
in
div
loop
call
test
ret
shl
xor
in
aaa
fidivrl
inc
xchg
jmp
loopne
orl
out
shll
fucomip
rcr
add
cld
push
fld
loope
faddl
sar
mov
shl
in
sub
cld
hlt
sar
out
cld
fistpll
fsub
jecxz
ret
out
mov
ljmp
call
xor
out
cld
ljmp
and
int3
nop
xchg
xchg
in
jecxz
fmul
aam
cmp
loop
hlt
std
lock
enter
into
stc
mov
repz
shl
cs
hlt
cmp
cmp
clc
sarb
fcmovnbe
out
fiadds
inc
lds
lret
std
enter
cmp
shl
icebp
aas
in
stc
test
iret
xchg
in
faddp
int
repz
fdivl
lock
lret
pushl
in
fcmovnb
ret
aas
xchg
out
into
jmp
clc
out
stc
imul
clc
out
ds
loop
lock
mov
xchg
out
out
xor
iret
cli
idivl
in
xlat
xlat
orb
sar
repz
mov
jecxz
cmp
call
cmp
cld
ret
rcl
mov
xchg
int
xchg
test
repz
sarl
ss
int
int3
int3
stc
rcl
incl
out
int3
mov
ljmp
hlt
out
into
xor
out
repnz
cmp
cld
shl
jecxz
jecxz
mov
std
div
jmp
repz
clc
sarb
inc
inc
aam
sti
jmp
fsubr
call
shll
icebp
cmp
cmp
rol
xchg
test
jecxz
in
faddl
shl
imul
aaa
stc
fcmove
fdivrl
xlat
div
sti
loop
hlt
sbb
int3
loopne
test
int3
test
shlb
sub
aad
xlat
call
stc
test
sar
rol
clc
shl
loopne
lea
shr
into
rol
cmp
jmp
repnz
cld
cmp
clc
out
sti
sar
loop
incl
repz
loopne
out
aaa
cmc
aam
in
ljmp
cmp
out
sub
loope
loopne
call
out
std
mov
in
div
repz
repz
cld
ds
cld
out
les
rorb
jmp
fucom
repnz
aam
ljmp
stc
ds
cld
test
add
loope
mov
ljmp
dec
loope
icebp
out
cmp
add
stc
mov
call
hlt
ret
div
iret
das
hlt
xor
not
sar
sti
faddl
into
nop
lret
sub
neg
lret
ss
enter
loope
fidivrs
out
rcl
std
ret
call
in
nop
xchg
xchg
out
repz
ss
fsubr
jmp
adc
xchg
ds
mov
mov
mov
or
fucomi
xor
aad
ret
inc
cmc
sbb
in
ret
loopne
aam
aam
xlat
clc
aaa
int
pushl
ljmp
leave
mov
jmp
ret
leave
ljmp
cmp
int3
cld
cmc
in
int
loope
imul
rcr
call
iret
loope
loopne
int3
in
ror
idivb
fucomi
lret
shr
aam
repnz
idiv
loope
lea
lret
in
stc
repnz
ror
sarb
shl
cmp
hlt
std
ljmp
cld
xchg
call
clc
xor
ljmp
repz
xlat
icebp
std
cli
lret
jmp
clc
cld
jecxz
loop
xor
fmul
into
int
fincstp
cmp
fsubrp
cld
cmp
cmp
lret
xchg
aas
test
in
rol
hlt
ljmp
cmp
movl
je
movl
push
movl
jmp
jmp
int
ret
rol
fcmovnu
jecxz,pn
mov
jl
outsl
mov
jle
add
xchg
testb
xchg
aas
xlat
enter
sti
ss
fldl
test
stc
mov
sti
out
ret
jmp
sub
sub
ljmp
int3
cmp
xchg
aad
int
mov
lret
out
sub
xlat
out
iret
jmp
xlat
cmp
jecxz
clc
fneni(8087
and
xlat
fadd
cld
call
fldz
int3
das
out
jmp
in
and
ret
sbb
dec
sbb
shl
adc
jmp
repz
cmp
cmp
aad
repnz
cmc
enter
std
test
lret
rol
lret
icebp
fxch
ror
fcomip
loope
div
sub
enter
loop
out
int3
xchg
or
xchg
jmp
rcr
out
sarl
cmp
shl
jecxz
test
test
loope
shl
clc
icebp
jecxz
sti
shlb
incb
loope
mul
ds
loop
test
xchg
leave
xor
shr
in
jmp
fsubp
cmp
test
fdivp
enter
stc
leave
fmul
mov
aam
xor
ljmp
repnz
jecxz
lret
nop
nop
out
mov
out
sar
jmp
jmp
lock
and
xchg
mov
xchg
in
mov
aad
jmp
jmp
iret
divb
std
cmp
iret
fldl
mov
mov
fucomp
fsubp
shl
nop
xchg
repz
icebp
out
cmp
in
xlat
shl
jecxz
int
jecxz
enter
int3
jecxz
jmp
lret
loope
lret
repnz
lret
std
into
roll
aam
xlat
loop
loopne
fucom
test
or
mov
out
xor
fdiv
sarb
shl
in
repnz
testb
mov
ljmp
icebp
shll
aaa
repz
repz
enter
enter
adcb
ljmp
hlt
fsub
lock
ljmp
nop
leave
icebp
xchg
xchg
repnz
int
cli
faddl
cmp
cld
int3
mov
into
sbb
shll
les
out
int3
shll
sarl
loopne
rorb
jmp
nop
lret
icebp
xchg
out
fsub
icebp
sarl
cmc
out
cmp
idiv
filds
imul
out
in
loop
cmp
into
mov
sub
xlat
jmp
call
lock
jmp
stc
lret
jmp
loope
lret
lret
cld
sarb
stc
fiaddl
ror
sti
leave
test
in
stc
test
out
out
test
cmp
iret
in
sti
loope
loopne
jmp
loope
rcl
xor
icebp
ds
ljmp
ds
in
int3
leave
mov
cmp
jmp
xor
int3
shl
loope
aaa
out
out
xchg
loope
ret
out
aam
mov
xor
shl
cld
aaa
cmp
iret
stc
clc
rcr
out
rol
sar
in
call
loop
in
divb
lock
aam
fcmovnbe
ret
in
hlt
out
fchs
rolb
std
leave
jecxz
cmc
ss
in
shl
std
clc
fprem1
rcr
in
hlt
inc
enter
in
xchg
cld
rolb
xor
cmp
out
iret
iret
shl
in
jmp
jmp
int3
fiadds
aam
xor
out
cld
fcomi
jmp
mov
sti
std
mov
out
clc
stc
in
out
iret
repnz
icebp
test
cli
add
out
in
lret
test
xlat
xor
shr
ljmp
fistpll
ffree
mov
les
out
lret
ss
cli
aam
loope
sti
cmp
cmc
cmc
loop
out
lock
mov
mov
cmc
fdivs
out
lret
repz
fstp
aas
jecxz
incb
xchg
xchg
mov
int
bnd
out
fnstcw
sar
sti
cmp
lret
fimuls
out
in
shll
leave
fucomi
aam
lret
int
iret
fadd
fistpll
fdivrp
leave
shl
in
xchg
imul
cmp
cs
cmc
test
xor
test
stc
out
or
xchg
test
xchg
orl
scas
jle
add
js
inc
add
inc
add
cli
jmp
int
ret
aam
fstp
fstl
fmull
das
mov
jle
add
out
jmp
iret
lret
ss
fucomip
int3
ljmp
adc
int
out
in
ret
call
xor
loop
test
loop
div
fcomip
roll
test
mov
ret
cli
ror
enter
fidivrl
filds
aad
in
sti
roll
in
shl
lock
not
fidivrl
idivb
sti
in
loop
fisttpl
lret
sub
xlat
out
das
out
xlat
cmp
ds
xlat
loope
aas
mov
call
in
into
lret
shl
out
rcl
lret
lret
lock
in
fcmovne
cmc
out
dec
adc
cmp
jmp
into
int3
fistl
in
xor
cmp
aad
into
cmp
icebp
shl
in
lea
shl
out
fadd
fadd
sub
cmp
aas
in
cli
lret
faddp
mov
leave
jecxz
xchg
ss
in
int3
cmc
shl
rcl
std
loopne
cld
leave
shl
sub
into
xlat
vpaddq
jmp
xlat
shr
loope
cmc
fucomi
xlat
cmp
std
sti
in
sti
rorb
hlt
iret
bnd
cmp
sarb
in
xchg
decb
in
repz
cld
hlt
leave
cmp
lock
sti
and
add
cli
fdivr
cli
and
rolb
xlat
icebp
fcmovnu
jmp
xlat
repz
push
in
ffreep
fcomp
stc
nop
sti
hlt
fdivr
xchg
clc
in
cmp
xor
sar
out
lock
cld
stc
loop
test
repnz
mov
sti
enter
cld
ljmp
aad
sarl
cmp
fsubr
cmp
fadd
rcr
loopne
mov
fsubp
fcmovne
iret
ljmp
leave
xor
testb
out
ljmp
cld
xchg
lock
call
sti
enter
fldz
ret
fstp
mov
ret
fiadds
in
in
ljmp
int3
repnz
xlat
cmp
fcmovu
lret
cmp
xchg
rcr
fiaddl
decb
loopne
clc
lret
xor
div
into
ret
std
ds
in
in
call
mov
aad
shl
xor
hlt
cmp
cmp
push
rcl
mov
icebp
movl
lock
cmc
cld
out
cld
jmp
fdivr
mov
cli
adc
int3
inc
rcl
in
in
clc
stc
enter
enter
cmp
aas
mov
repz
test
mov
fdivp
mov
in
ljmp
lret
stc
jmp
idivl
xlat
cmp
aam
test
loope
jecxz
decl
stc
rcr
int
cmp
repnz
cmp
fdivrs
cld
call
xchg
ror
lret
ljmp
jecxz
leave
fcmovne
call
test
xor
lret
xor
cmp
out
out
repz
aas
movb
fimuls
fsubrs
iret
cmp
fstpt
rolb
cmc
fadd
loope
rol
jmp
incl
xchg
mov
lret
rcl
out
icebp
neg
stc
add
rcr
mov
lret
sbb
mov
cmp
leave
shr
cmp
icebp
loop
out
xchg
repnz
out
fcmovnu
loopne
ror
test
fdivp
xlat
fnstcw
call
in
call
fadds
repnz
out
ljmp
enter
out
sar
rcl
hlt
out
rol
ljmp
addb
repnz
iret
fcomi
ss
fcmove
int
fiaddl
in
ret
jmp
xlat
out
ret
loope
rcl
add
cs
in
cli
cmc
cmp
sti
std
rcl
fucomip
aam
mov
int
jmp
loope
loope
xor
stc
fdivr
xor
sar
and
xlat
test
loope
in
ljmp
fsub
cmp
cli
sti
sarl
cmp
idiv
ret
xchg
in
enter
mov
hlt
cmp
int3
clc
aaa
cmp
fdiv
shl
aas
cmp
cli
rol
in
out
rcr
fdivr
adcl
xor
fucomip
into
hlt
fnop
test
loopne
filds
fucompp
mov
hlt
rcr
cmc
iret
in
int
sub
push
cld
xor
adcl
add
movl
cmp
movl
jb
xor
mov
mov
xorl
xor
or
xor
add
jmp
rcl
rcl
dec
mov
testb
ss
stos
add
loope
in
fsub
rorl
mov
jecxz
nop
xchg
xor
repz
iret
in
test
testb
jmp
int
ss
xor
clc
jmp
cli
into
out
fcomip
filds
cld
rorb
loope
lock
ss
out
fndisi(8087
neg
xlat
hlt
rol
jmp
call
in
out
xor
cmp
jmp
cli
int3
rcr
clc
lock
fcom
repz
out
xchg
mov
cli
cmp
jmp
clc
ss
cli
bnd
mul
loopne
mov
fimull
mov
shr
enter
cmp
leave
iret
xor
mov
fld
ljmp
mov
shl
jmp
xor
ds
hlt
test
mov
enter
sti
addb
idiv
fmul
into
in
int
cld
fdivr
stc
cmp
fmul
std
mov
std
mov
fnstenv
icebp
xor
repz
ds
in
mov
hlt
xchg
in
xchg
loop
ffreep
cli
lret
hlt
fcmovne
xlat
stc
ror
ds
sbb
cli
add
jmp
shr
ficoms
jmp
cmp
shl
repz
cmp
mov
out
mov
in
enter
jmp
fst
hlt
icebp
lock
shl
lock
out
clc
fcmovb
xlat
jmp
rorb
iret
leave
in
int
shl
cmp
mul
call
fsub
cli
ret
fnstsw
out
jmp
lock
xlat
imul
rcr
jecxz
shl
sti
test
call
jecxz
cmc
ljmp
leave
call
loope
and
fst
test
xchg
out
test
ret
iret
xlat
out
fnstcw
xor
in
icebp
fsub
test
out
aad
decl
nop
in
icebp
xor
fsub
xor
int
aam
test
xor
rcr
loop
out
lea
imull
loop
lret
out
icebp
jmp
rcr
into
in
cmp
jecxz
ds
mov
in
lock
int3
xor
cli
lret
hlt
enter
int
repz
xchg
ljmp
cli
ljmp
sti
out
xor
fucomp
rcr
cmp
neg
leave
mov
ficoml
xchg
loope
cmc
fidivrl
in
fcmovnu
in
cmp
in
out
sti
fxch
loope
jmp
rcl
repnz
fdivl
clc
neg
loopne
repz
fmul
into
adc
test
xchg
adc
repnz
repnz
out
int3
cli
leave
out
cmp
in
in
sti
clc
jecxz
out
loopne
mov
das
rcr
in
fidivs
shr
ret
hlt
cmp
xlat
out
in
into
addl
shr
lret
aam
sub
div
std
into
ss
div
out
in
test
out
in
repnz
xchg
loop
xchg
shll
int3
aam
cmp
fadds
ffreep
cmp
cmp
test
jmp
jecxz
fcmovne
cmp
into
or
int
out
fucom
test
aad
clc
std
lret
in
fiadds
ror
hlt
fdivr
out
int3
ds
std
flds
add
loope
mov
loope
mov
in
enter
int3
ret
aam
jecxz
aas
leave
test
lock
test
lret
xor
enter
lock
icebp
aam
call
xchg
fsub
xchg
fucomi
loope
jmp
call
aam
cmp
int
add
jecxz
leave
clc
in
loop
out
into
loop
hlt
loopne
in
xor
aad
aam
repnz
repnz
in
xchg
in
jecxz
sub
sub
fmul
shl
cmp
cmp
aam
cmc
aas
roll
in
in
adc
shl
out
clc
xor
int3
cld
aad
cmc
jmp
int3
std
icebp
sbb
aad
loope
aam
out
cmp
dec
std
loope
testb
lret
loopne
leave
adcl
fdivl
out
fcomp
lret
idiv
sti
ret
hlt
xlat
enter
fisttps
repnz
shrl
into
xor
sarb
aam
loop
ljmp
rol
add
sbb
add
cmpl
je
cmpl
jne
pushl
push
pushl
call
mov
dec
mov
jmp
mov
adc
mov
jmp
ror
rcr
ror
js
cmp
push
add
stos
add
fchs
fmulp
lret
xchg
std
shl
shll
cmp
cmp
cmp
ds
repz
cld
loopne
ret
addl
ror
cs
sub
in
ror
fucom
fdiv
repz
ret
xchg
sbb
ljmp
mov
int3
xlat
aam
int
aas
fcmovbe
xlat
cmp
xchg
fisttpl
loopne
ljmp
hlt
sti
test
test
rorl
ljmp
sub
hlt
leave
fucomip
xlat
rcl
cli
sar
call
sti
int3
xchg
call
out
enter
iret
lock
int
icebp
ret
test
fldl
inc
test
jmp
into
mul
cmp
xor
jmp
out
aad
call
sti
nop
fimull
divb
cli
jmp
jmp
cmp
out
xchg
rol
fucomip
std
loope
lds
jmp
cmp
hlt
out
call
and
loope
decb
loope
in
jecxz
in
loopne
xor
out
int
aas
aas
rcl
sarb
sar
hlt
test
out
jecxz
sti
out
repnz
stc
out
in
cmp
into
jmp
sbb
aad
aas
jecxz
out
sar
in
xchg
mov
enter
aaa
leave
cmp
repnz
aad
xchg
add
jmp
xchg
icebp
aam
aaa
in
enter
int
cmpl
aam
in
ret
fmulp
in
adcl
lret
clc
aam
shl
lret
jecxz
shl
icebp
mov
cld
leave
xchg
cmc
xor
shr
loope
xchg
aam
testb
xchg
out
jmp
repnz
aam
cli
stc
fnstcw
cmp
in
sar
fld
xlat
cli
fsub
xor
test
div
xor
in
xor
aad
fucom
roll
aad
fldl
mov
lea
into
aad
lret
cmp
ss
cmc
iret
fldl
jecxz
xchg
call
xchg
fxch
loop
fcmovu
cli
iret
iret
cmp
repnz
incb
fucomp
iret
repz
fcomp
fstp
rcr
jecxz
ds
call
fisttps
mov
lret
out
out
aam
aas
cmp
xlat
std
rcl
add
fmul
cld
cli
ret
jecxz
out
jmp
ret
clc
cmp
int
std
testb
stc
aad
xlat
rol
std
sti
jecxz
sbb
and
out
out
int
cmp
cmp
test
int3
fsubrp
in
std
in
nop
jmp
test
enter
idiv
cli
fdiv
sub
rcr
add
fiadds
call
mul
clc
cli
cmp
adc
aam
jmp
call
jmp
aam
xor
out
loopne
in
aad
ljmp
mov
call
clc
rcr
into
iret
fiadds
out
cmc
std
in
fcomip
hlt
fucomp
aam
fsubr
in
repnz
fstpt
shr
sti
in
shr
sar
jmp
cld
mov
std
xchg
jecxz
in
cli
ljmp
ljmp
filds
call
xchg
xlat
aam
sti
dec
cmp
test
std
ror
aam
mov
lret
loopne
in
adc
jmp
cmp
iret
ljmp
rol
decl
out
int
decl
cmp
in
iret
jmp
ret
iret
sar
loop
enter
cli
mov
test
fnstenv
xor
repz
lret
cmp
in
cmp
sti
in
stc
jmp
test
out
mov
loope
lock
xlat
repz
fdivr
ds
fcmovne
stc
out
xlat
loop
leave
xlat
out
loop
mov
cld
out
aad
fyl2xp1
loop
out
aam
addb
loop
in
fstp
ljmp
jmp
into
xlat
xor
int
loope
repz
out
sub
mov
test
dec
loopne
xor
int
in
aam
repz
sarb
aas
adc
ds
mov
fabs
int3
out
mov
call
xlat
repz
scas
xlat
and
mov
sub
mov
addl
sub
movl
cmp
movl
ja
andl
mov
inc
mov
cmpl
jne
pushl
push
call
cmpl
jb
xor
or
sbb
mov
movl
xor
sbbl
add
movl
jmp
or
mov
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
call
cmpl
jne
mov
inc
mov
jmp
jmp
aad
iret
lret
fstp
push
shrl
mov
add
xor
in
sti
xor
out
icebp
loopne
fucomi
cmc
in
int
mov
lds
in
lret
xor
xlat
rcl
xchg
cli
mov
mov
hlt
into
ljmp
ljmp
stc
fsub
mov
rcll
into
repz
out
repnz
loop
fxch
leave
loop
test
cld
dec
out
nop
cmc
int3
loope
rcl
int3
into
call
test
faddp
addb
lret
call
aam
iret
jmp
xor
lret
out
cmp
out
fimuls
into
repnz
std
rorl
out
cmp
aaa
imul
div
fnsetpm(287
rolb
xchg
cld
jecxz
out
cmc
aaa
in
sti
shl
fmul
cmp
out
rcl
shl
neg
cmc
xlat
in
in
orb
cmc
cmp
fidivrl
int3
cmp
in
shr
sbb
jecxz
loopne
imul
loop
test
repz
nop
aas
loope
lret
cmp
aam
jmp
lret
shl
cld
roll
xchg
in
das
sarb
in
aam
lret
fucomp
aas
out
out
loop
xchg
int3
mov
int
ficoms
int3
hlt
into
enter
cmp
in
cld
loop
fsubp
cmp
sbb
leave
shl
out
rcl
fdecstp
movl
jmp
jecxz
call
xchg
divl
ds
loopne
in
fnclex
aas
cmp
in
xchg
repz
shl
cmp
std
fmul
int3
clc
aam
out
test
xchg
loopne
cmp
loope
int3
mov
xchg
ror
loope
call
ljmp
shl
cli
aam
in
leave
out
mov
out
xor
in
ljmp
sti
aam
out
mov
sbb
jmp
sar
fucomp
out
xor
lock
lret
xor
int
aad
std
int3
shl
jecxz
in
cmp
ffreep
cli
into
jmp
cs
jmp
cmp
lock
jmp
call
mov
loope
into
repz
in
pushl
cmp
aad
loopne
test
sub
adc
adcb
shl
lret
xlat
in
not
fidivrl
aas
sti
lock
fcmovu
addb
cmc
into
cmp
xlat
cmp
cli
idiv
idiv
jecxz
out
leave
fdivp
int3
fcomip
lock
xchg
iret
in
lds
cmp
incl
enter
lock
lret
xchg
fidivl
repz
xor
shl
cli
cld
std
aam
call
jmp
out
xor
xor
xor
ss
cmp
ret
fcmovne
jmp
and
shl
jmp
aam
icebp
xor
fst
jmp
int
clc
jmp
idiv
jmp
xchg
shl
hlt
in
in
in
lock
sti
call
fptan
cld
addl
nop
into
repnz
lret
repz
loopne
into
shl
xlat
lret
xlat
idiv
dec
repnz
shl
leave
lds
loope
repz
in
fcom
cmp
fneni(8087
iret
in
cmp
into
icebp
testl
in
fmull
enter
fdivrl
out
neg
out
testb
int
lret
out
out
int
out
cmc
cmp
aaa
fdivrp
xor
cmc
stc
icebp
iret
xor
test
mov
sti
or
std
xchg
xchg
int
icebp
aad
jmp
iret
repnz
xor
in
cmp
out
out
and
fcmovnu
xchg
xchg
int
hlt
out
neg
fistpll
fadd
rcl
cmp
xchg
loopne
clc
cli
out
fcoml
div
fadd
cmc
clc
repnz
idiv
adc
aas
shl
fiadds
jmp
out
mov
xlat
in
repnz
cld
int3
loopne
int3
fdiv
loopne
enter
hlt
fsub
in
out
in
lds
hlt
leave
icebp
shr
stc
jmp
loop
xchg
out
shl
fcmovnu
out
jmp
and
call
fdivp
cmp
in
add
leave
call
fst
jmp
xor
repnz
cmp
out
enter
fstpt
jecxz
xor
andl
mov
inc
mov
cmpl
jne
push
push
push
call
cmpl
jb
xor
xor
add
orl
add
imul
mov
sbb
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
call
jmp
mov
sub
jmp
rcl
lret
fcmovnbe
lods
pop
mov
aaa
shlb
jle
addl
enter
ljmp
jmp
repnz
rcl
fdivrl
clc
loop
icebp
aad
enter
iret
nop
vphaddubq
aam
lret
fsubrp
icebp
sar
fsubr
jmp
mov
lret
jmp
mov
in
aad
xor
int
cmp
out
ret
rcr
sti
clc
and
nop
int3
rcl
div
xor
lret
stc
xlat
repz
ffreep
loop
in
rcr
enter
int
mov
xor
int
iret
xor
repnz
cld
into
out
rcr
cli
flds
test
stc
shl
int3
xchg
int3
ret
jecxz
neg
fsubr
cmp
cmp
not
cmc
imul
loop
xchg
jmp
lock
hlt
rcl
ss
repnz
xor
aas
call
jmp
in
int
repnz
hlt
xchg
cmc
ljmp
shr
ds
out
xchg
ret
fldlg2
out
rolb
out
out
out
into
std
into
aaa
rcr
div
iret
cmp
xchg
std
call
ljmp
leave
int3
jmp
fcom
test
and
loope
lret
mov
in
in
xchg
repnz
repnz
ljmp
sar
cmp
in
lock
xchg
xchg
ljmp
iret
lret
clc
fdivrl
in
lret
fsub
in
lret
repnz
adc
in
ljmp
aad
aam
ds
fcmovb
neg
aad
int
shr
cld
loopne
ror
f2xm1
fcmovnb
repnz
cmc
stc
ljmp
call
test
int
repz
loopne
int
fucomp
xor
cmp
rolb
cli
call
mov
cld
std
jmp
addl
repnz
sar
loope
in
loopne
mov
loop
addl
in
lock
repz
clc
div
fcomi
iret
repz
aam
rcr
out
loopne
xchg
mov
mov
jmp
shl
out
cmp
sub
repz
neg
ljmp
rcll
in
cmp
in
stc
stc
enter
fdivrp
xchg
hlt
loope
enter
fucomip
loopne
mov
out
idiv
xor
clc
adc
neg
cmp
adc
jecxz
int3
in
ror
in
loopne
in
iret
shr
ljmp
cli
shl
mov
jmp
lret
ljmp
out
enter
cld
into
in
fsub
hlt
aad
addb
xchg
xchg
int3
clc
repz
stc
not
cmc
int3
ds
in
fcmovnb
loopne
ds
fdivr
std
lret
in
xchg
jmp
lret
cmp
in
xlat
roll
jmp
cli
std
shl
in
hlt
xlat
ss
aam
enter
repnz
sar
aaa
aad
xchg
ljmp
loope
out
xchg
out
lock
xor
rol
jmp
aas
jmp
cmp
or
lret
in
xor
stc
in
int
hlt
fdivr
rol
ret
sar
mov
mov
jecxz
or
xchg
out
out
fmulp
jmp
into
clc
fcmovnbe
rcr
cmc
sar
cli
jecxz
movl
nop
divb
shr
cmp
lret
out
cli
repz
roll
fdivr
orl
test
shlb
sti
div
jmp
clc
repz
aad
cmp
mov
out
loop
jmp
out
out
out
bnd
fnstsw
fadds
cli
cld
call
fsubrp
xor
ret
icebp
fstpt
rcl
rol
cld
aas
xchg
loopne
fcmove
clc
idiv
fisttpll
sub
fnstcw
cmc
not
sti
in
fcmovbe
test
int3
in
xchg
loop
xor
lock
shr
iret
int
cld
into
rcr
repnz
test
call
xchg
int3
rcl
mov
xor
aad
out
int3
rcl
sar
cmp
rcr
fcmovnu
loopne
out
dec
lea
loop
cmc
xor
fsubr
xor
out
xor
add
aad
into
or
test
xchg
idivl
lock
call
fxch
fdivr
loop
ret
rcl
loopne
xchg
add
add
aam
rcr
fstp
fnstsw
fmull
inc
mov
add
add
not
xlat
xlat
aam
rcr
int
int3
ljmp
ds
clc
fdivr
in
out
test
sar
fincstp
lock
jmp
rcl
cmp
ljmp
and
xor
out
aad
fsub
repz
in
std
cld
jmp
decl
fsub
test
xor
cmc
ljmp
loope
mov
stc
fimull
jmp
cmc
out
in
xor
cld
sarl
cld
iret
ds
mov
lret
xchg
test
call
repnz
fst
cmpb
loop
add
idiv
in
sti
div
testl
iret
rcr
int3
fcomp
int3
cmp
add
aam
jmp
cli
jecxz
lock
out
xor
xor
ljmp
iret
fsubp
jecxz
cld
rcr
fiaddl
out
loop
aad
call
xlat
xor
std
cmp
cmp
les
loope
std
mov
stc
loop
into
popl
cmp
fcmovbe
repz
cmp
out
lds
out
icebp
leave
xchg
ljmp
xor
fcmove
jmp
rcr
repz
in
inc
and
incb
xchg
call
lret
in
jmp
sar
iret
idiv
rcl
sti
test
test
xor
ljmp
cmp
sti
out
xchg
test
fldlg2
lret
mov
into
aas
aas
rcr
sbb
fimuls
into
in
loop
aas
stc
aaa
into
lds
loopne
rol
ds
mov
ret
fmul
loope
div
aaa
int
leave
xor
fdivr
in
fiaddl
cmp
fisttps
in
mov
in
fmul
ss
cmp
cmp
loope
cmp
aad
std
loopne
std
lret
hlt
lock
jmp
jmp
ss
in
shl
ret
sti
cmp
faddl
xchg
icebp
in
loope
cmp
incb
jecxz
ljmp
lret
in
mov
neg
iret
out
fdiv
xor
out
cmp
test
rol
loopne
in
loopne
fsubr
leave
lret
fsubr
jmp
shr
in
into
div
fnop
loopne
sti
mov
xchg
test
repnz
jmp
divl
fucomi
dec
sar
cmc
repz
cli
mov
lret
fsub
loope
call
jecxz
cld
cmp
inc
hlt
fdivp
shl
aad
cli
cmc
movb
call
jmp
in
aam
out
out
repz
aaa
testl
int3
lret
shl
mul
out
imul
shll
repz
lret
sti
cmp
fcos
out
shl
jmp
mov
xchg
xor
shl
int
xor
in
sti
jmp
cmp
repz
cmp
loop
loope
ret
out
fsubr
cli
mov
adc
sar
cmp
out
in
shl
cmp
iret
loopne
shl
loope
in
cld
addb
sar
xlat
out
xor
fstpt
fistpll
cmp
jmp
iret
cmp
hlt
in
cli
leave
xchg
fistl
imul
cmp
cmp
lret
lret
not
xlat
rcr
sti
mov
addl
mul
lock
fadds
jecxz
jmp
sti
out
sbb
xchg
into
out
out
mov
std
in
fcomp
mov
cld
lret
in
loop
loop
out
repz
jmp
xlat
cmp
ret
std
aas
fisttpll
sti
enter
out
mov
jmp
in
xlat
aam
ljmp
stc
mov
hlt
cli
in
mov
jmp
xchg
rcr
xor
lret
aam
std
das
ss
in
fdivs
loop
loopne
in
mov
mov
enter
jecxz
call
in
aad
rcr
cmc
repnz
xlat
cld
aad
mov
call
and
ljmp
jmp
aam
sar
fstp
loope
cmc
sub
aad
jmp
int
mov
lock
sarl
iret
lret
out
aad
loop
rcr
rorl
mov
in
lret
aam
cmp
ds
cmc
bnd
mov
jmp
jmp
ror
aam
aad
aam
sbb
stos
stos
add
add
aas
loope
fucompp
leave
stc
std
fsub
rorb
xchg
ror
out
iret
cs
loopne
cmp
iret
aas
sarb
jmp
leave
in
out
test
cli
lret
enter
incl
div
mov
std
fldl
frstpm(287
lret
xor
int
sti
into
rcl
int
ret
xchg
flds
lret
lock
int3
rclb
enter
ss
rcr
ss
stc
aas
faddl
mov
lret
in
hlt
xor
xor
lret
fcmovu
cmp
rcl
int
fcmovnu
loop
sub
ret
out
mov
out
fsubp
roll
cmp
stc
xor
fcmovnb
aam
iret
icebp
faddp
hlt
aad
xlat
test
fucomp
int
jmp
clc
fcmovbe
cmp
cmp
aaa
rolb
fmul
leave
in
test
into
in
xchg
in
sarl
leave
xor
fdivs
fcomip
cmp
xchg
orb
shrb
jmp
cs
hlt
int
fcomip
aaa
test
jecxz
sbb
mov
iret
repnz
in
mov
xor
cmp
lock
loope
rcl
sar
loope
nop
int3
test
sar
clc
les
fcmovbe
call
iret
fldl
loop
sub
xlat
iret
cld
enter
jmp
shl
xor
lret
test
fcomi
repz
lret
icebp
cli
adc
mul
hlt
fnsave
fiaddl
lret
aam
mov
in
enter
aad
lret
cmp
cmp
cmp
fcmovu
cmp
loope
int3
jecxz
std
fucomi
roll
out
sti
cld
cmp
clc
out
sar
xor
loopne
fdivr
aam
shl
loope
call
in
sti
cmc
cmp
xor
fistpll
cmp
lea
shr
ret
cmp
aam
repnz
aam
jmp
xchg
ret
mov
and
repz
shl
int3
int3
call
mov
loop
iret
cmp
cmp
xlat
loope
fstp
sti
in
repnz
lock
lock
in
aas
in
shl
cld
out
rcr
rcr
jmp
sti
jmp
mov
shl
out
jmp
cmp
clc
faddl
sti
jecxz
out
sub
leave
xchg
out
fdivr
clc
shlb
fdiv
std
in
icebp
cmp
cmp
cmp
sti
cld
out
jecxz
icebp
loope
stc
aaa
in
cmp
fcomip
repnz
repz
icebp
fimull
lea
into
xchg
in
shr
fsubr
xor
shl
cli
int
ds
iret
jmp
vmaskmovdqu
loope
nop
sti
cld
xchg
out
loope
jecxz
fcmovne
cli
xlat
fidivrs
fabs
loop
cmp
xor
jecxz
call
loopne
int3
xchg
icebp
mov
xor
cli
fbstp
in
cli
cmp
xchg
or
xchg
or
fucomp
sar
lret
jmp
enter
out
xlat
filds
repnz
xchg
fdivr
cli
jecxz
xchg
xchg
mov
nop
out
xor
fld
hlt
xlat
cli
cli
cmp
jecxz
repnz
in
cmpb
xchg
lret
lock
out
loope
in
aad
out
in
stc
xorb
fcmovnbe
hlt
test
ds
lret
sti
out
cmc
shrb
rcl
in
shr
aad
xlat
repnz
fdecstp
call
sar
fcmovnu
dec
loope
ret
jecxz
jecxz
out
aam
into
shr
out
xor
cld
in
cmp
fcomi
out
rcr
loop
mov
xchg
int3
repnz
cli
int3
cli
cmp
xor
cmp
cmc
roll
in
loop
enter
mov
aad
fcmovbe
ss
fucomip
int
shr
aad
cli
ffreep
lret
xlat
iret
int3
xor
in
ljmp
ror
xor
loope
out
cli
ret
std
ret
rol
jecxz
mov
ljmp
out
in
repnz
flds
lret
cmc
mov
rolb
ret
rol
lret
xor
cmp
shl
loopne
out
leave
in
imul
enter
loopne
int3
shl
loop
in
aam
aam
xlat
int3
loope
cli
fsubp
aas
loopne
loop
xchg
out
jmp
in
icebp
out
leave
cmc
icebp
out
icebp
call
icebp
hlt
in
in
in
rcr
out
leave
mov
mov
xor
xor
add
add
imul
jmp
rol
aam
aad
aad
xchg
mov
xchg
push
push
jp
scas
add
add
fists
mov
lock
icebp
cmc
fdivr
std
cmp
repz
repnz
xchg
hlt
fisttpll
rcl
rcl
aaa
ss
aaa
shr
aad
call
cmp
sti
xchg
sti
loopne
nop
mov
loope
xchg
aam
repz
xor
enter
cmp
icebp
fadd
hlt
rcl
loop
mov
shl
sub
lret
xor
jecxz
hlt
sar
repz
enter
into
loopne
mov
neg
xor
cmp
sub
sti
iret
hlt
fdiv
ret
int
fcmove
int
test
repz
loop
leave
repz
out
loopne
int
sar
stc
fdivrs
aas
repnz
cmp
stc
out
fsubr
mov
out
cs
cmp
repnz
cmc
into
add
ret
out
ffree
inc
jmp
loop
out
mov
leave
rol
cmp
cli
xor
fistpll
cmc
sar
xchg
int
sbb
fstp
lock
call
out
into
cmp
fiadds
xchg
in
ret
mov
std
into
out
shlb
fmul
cmp
lock
rcr
test
leave
into
jmp
shr
cmp
cs
std
int
aad
filds
enter
clc
fiadds
xchg
ljmp
out
std
repnz
in
testb
fsubp
adc
out
mov
test
ror
int
out
shlb
int3
idivl
fdiv
shl
hlt
out
enter
xchg
fildl
iret
ror
jmp
cmp
xor
clc
in
repnz
aad
hlt
push
xchg
fxch
mov
out
test
ljmp
lret
stc
ljmp
cmp
xlat
in
mov
int3
loop
cmc
leave
xor
idiv
hlt
aad
cmp
repnz
loop
div
out
fmul
in
dec
test
in
repnz
leave
fdivs
fsqrt
cmp
out
in
stc
add
cld
mov
cli
jecxz
loopne
cmp
mov
mov
sti
aaa
in
repz
fiadds
test
xlat
cli
in
hlt
faddl
filds
xor
jecxz
lock
sar
loop
out
ds
repnz
popl
lret
int
cmp
aam
cmp
std
fdivp
mov
sti
addl
aad
iret
mov
int3
sti
ds
div
xchg
aad
std
ljmp
lret
xchg
test
xor
clc
xor
fsubrp
fdivrs
mul
fcmovnu
neg
rolb
ljmp
enter
lret
lret
clc
std
xor
xor
fdiv
call
out
fistl
ss
ror
iret
fxch
jmp
sar
loop
aam
inc
fdivrp
les
cli
xchg
cmc
in
sub
in
xlat
cmc
das
xor
xlat
out
fdivrs
test
mov
jmp
in
lret
xchg
loopne
repnz
out
loop
int
call
out
int3
in
rcl
sti
in
lret
decb
test
clc
ror
cmp
repz
aad
sti
rcr
inc
ret
xlat
fisttpll
jecxz
aam
lock
in
cmp
sti
repz
call
clc
std
iret
enter
into
into
subb
cmc
in
jmp
xor
cli
roll
rcr
call
filds
in
in
lret
cmp
jmp
leave
leave
ljmp
jmp
clc
int
int3
lock
lret
jmp
idiv
fdivr
fcmovbe
jmp
or
xlat
out
in
mov
out
shl
in
jmp
std
fcomp
cmp
int
div
xlat
out
lret
mul
in
nop
leave
lock
in
int3
fldl2e
repnz
mul
xor
ffree
in
loop
stc
test
jmp
xor
shl
ljmp
int
cld
iret
ds
xlat
stc
mov
loopne
out
int3
in
ljmp
xlat
fdivr
iret
jecxz
out
std
fdivr
ror
enter
xchg
icebp
ljmp
imul
int
loopne
hlt
cmp
and
test
rol
loope
loope
hlt
shl
ss
iret
cmp
cmp
cld
cmp
aas
fcomi
loopne
stc
std
loopne
xchg
icebp
fdiv
mov
fdivp
xor
sub
clc
mov
mov
jmp
rcl
ret
fucomp
insb
fstps
push
mov
jle
jle
jle
xlat
enter
int
rcl
loopne
rcr
int3
xchg
fists
in
shl
ds
cmp
cld
out
aaa
jecxz
cld
test
xchg
xchg
call
ret
fcmovne
ljmp
jecxz
out
cmp
nop
mov
xor
out
xor
fidivrl
repz
sbb
jecxz
stc
incb
orl
mov
fsubrs
cmc
jmp
into
not
push
lock
cli
loopne
jecxz
fadds
xorl
loope
sti
jmp
shr
out
ds
aaa
addb
xchg
lock
xchg
cld
ror
shl
in
cmp
icebp
into
neg
xlat
and
shl
stc
out
ljmp
xor
xor
fcmove
icebp
xor
loopne
cmp
sub
cmp
ja
mov
jmp
mov
mov
xor
xor
add
add
imul
mov
mov
sub
cmp
ja
mov
jmp
mov
mov
xor
xor
add
add
imul
mov
mov
sub
cmp
ja
mov
jmp
mov
mov
xor
xor
add
add
imul
mov
mov
sub
cmp
mov
jbe
mov
mov
xor
xor
add
add
imul
mov
mov
mov
mov
add
movl
mov
movl
movl
mov
xor
add
jmp
mov
xor
add
mov
mov
mov
mov
xor
add
mov
mov
mov
mov
mov
xor
add
mov
mov
mov
mov
xor
add
mov
mov
mov
mov
xor
xor
add
add
imul
add
mov
mov
mov
xor
add
imul
mov
xor
sub
mov
mov
xor
add
imul
mov
xor
sub
lea
cmp
jbe
mov
mov
xor
add
imul
mov
xor
add
mov
lea
mov
mov
xor
mov
sub
add
mov
mov
xor
add
imul
cmp
jbe
pop
pop
leave
ret
push
mov
sub
sbbl
push
push
adcl
push
xor
addl
lea
addl
xor
or
sbbl
xor
andl
add
push
lea
xorl
push
movl
push
xorl
lea
inc
xorl
xor
addl
xor
adcl
call
movl
movl
mov
mov
movl
jmp
movl
xor
sub
xor
xor
xor
xor
mov
add
xor
movl
incl
mov
mov
cmp
movl
jb
andl
xor
add
inc
mov
cmpl
jne
pushl
call
cmpl
jb
add
movl
adc
movl
mov
mov
sub
xor
lea
mov
lea
xorl
mov
mov
mov
or
mov
mov
movl
cmpl
je
cmpl
jne
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
xorl
mov
movl
cmpl
je
cmpl
jne
push
pushl
push
pushl
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
xor
mov
sbb
add
not
mov
mov
mov
mov
cmp
mov
mov
movl
je
movl
cmpl
je
cmpl
jne
push
push
push
call
xor
or
dec
mov
jmp
mov
xor
xorl
add
adcl
imul
mov
jmp
sbb
xor
xorl
add
xor
mov
movzbl
or
mov
mov
andl
mov
inc
mov
cmpl
jne
push
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
xor
or
add
sbbl
mov
mov
movl
cmpl
je
cmpl
jne
push
push
push
call
mov
dec
mov
jmp
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
push
pushl
call
cmpl
jne
mov
inc
mov
jmp
mov
adcl
xor
addl
add
movl
cmp
movl
jne
adcl
push
pushl
addl
pushl
call
mov
mov
sbbl
mov
incl
mov
mov
adc
mov
mov
mov
mov
adc
mov
mov
dec
movl
adc
mov
neg
movl
mov
orl
xor
add
jmp
mov
orl
xor
andl
mov
inc
mov
cmpl
jne
push
push
pushl
call
cmpl
jb
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
push
push
call
cmpl
jne
xor
or
inc
mov
jmp
lea
sub
mov
mov
and
xor
movzbl
and
lea
or
mov
mov
mov
movl
cmpl
je
cmpl
jne
call
mov
dec
mov
jmp
and
movl
or
mov
andl
mov
inc
mov
cmpl
jne
pushl
call
cmpl
jb
movl
cmpl
je
cmpl
jne
push
push
pushl
call
xor
or
dec
mov
jmp
adcl
movl
mov
mov
xor
mov
xor
add
movl
cmp
je
mov
andl
jmp
xor
xor
inc
mov
cmpl
jae
cmpl
jne
pushl
push
pushl
call
cmpl
jne
mov
inc
mov
jmp
inc
xor
add
sub
mov
movl
cmpl
je
cmpl
jne
pushl
call
mov
dec
mov
jmp
mov
andl
mov
inc
mov
cmpl
jne
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
orl
xor
or
mov
sub
xorl
add
mov
mov
cmp
ja
movl
cmpl
je
cmpl
jne
push
push
call
xor
or
dec
mov
jmp
mov
mov
xor
add
imul
xor
add
mov
mov
mov
mov
mov
mov
xor
lea
mov
xor
mov
sub
add
mov
cmp
jbe
mov
mov
mov
xor
lea
mov
mov
xor
xor
add
mov
xor
lea
mov
cmp
jbe
mov
mov
mov
mov
mov
mov
push
sub
push
xor
push
mov
call
pushl
pushl
pushl
call
sub
xor
mov
mov
mov
xor
add
xor
div
mov
cmp
je
mov
jmp
mov
mov
mov
mov
movl
movl
mov
xor
add
mov
movl
movl
movl
movl
mov
xor
add
mov
movl
movb
mov
xor
add
mov
mov
xor
add
mov
mov
xor
add
mov
mov
xor
add
mov
lea
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
mov
mov
mov
xor
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
je
lea
push
mov
xor
add
push
mov
add
push
mov
mov
pushl
call
mov
cmpl
je
lea
mov
mov
xor
add
mov
mov
xor
add
mov
mov
mov
lea
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
test
mov
jne
mov
xor
add
test
je
lea
push
mov
xor
add
push
mov
add
push
mov
mov
pushl
call
mov
xor
mov
sub
sub
mov
add
mov
mov
mov
mov
xor
sub
mov
lea
incb
inc
push
pop
dec
xchg
decb
pushl
mov
mov
pushl
lea
pushl
lea
pushl
lea
pushl
lea
pushl
xchg
inc
push
pop
call
lea
mov
mov
add
mov
lea
movl
mov
movl
mov
xor
movl
mov
add
cmp
je
mov
xor
add
jmp
mov
mov
xor
add
imul
xor
add
mov
mov
mov
mov
mov
mov
xor
lea
mov
xor
mov
sub
add
mov
cmp
jbe
mov
mov
pushl
lea
push
call
mov
mov
pop
pop
pop
leave
ret
push
mov
push
mov
push
mov
mov
movl
push
mov
mov
mov
push
mov
mov
mov
cmp
je
adc
mov
mov
andl
xor
sbbl
add
movl
cmp
je
mov
xor
inc
add
movl
cmpl
je
cmpl
jne
push
push
pushl
call
mov
dec
mov
jmp
sbb
push
adc
pushl
andl
jmp
xor
or
inc
mov
cmpl
jae
cmpl
jne
push
pushl
call
jmp
pushl
mov
call
mov
mov
mov
mov
jmp
mov
mov
xor
add
cmp
jne
mov
xor
add
mov
mov
xor
add
mov
pushl
pushl
call
mov
xor
pop
add
pop
leave
ret
push
mov
push
movl
mov
subl
mov
add
xor
cmp
jne
mov
neg
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
pushl
call
jmp
add
andl
mov
inc
mov
cmpl
jne
push
call
cmpl
jb
mov
mov
mov
xor
push
mov
mov
add
cmp
pop
je
mov
jmp
mov
xor
add
jmp
mov
xor
add
leave
ret
push
mov
push
xorl
mov
mov
adcl
xor
add
movl
mov
movl
movl
not
movl
movl
mov
movl
push
movl
mov
cmp
je
mov
adcl
xor
incl
xor
lea
sbbl
xor
movl
cmp
movl
jne
jmp
add
sub
mov
xor
add
mov
xor
mov
adcl
xor
movzwl
add
xor
mov
sub
mov
adc
mov
mov
add
mov
mov
mov
pop
test
je
pushl
pushl
mov
pushl
mov
call
jmp
mov
leave
ret
push
mov
sub
movl
neg
movl
mov
push
or
mov
mov
sub
xor
mov
xorl
add
orl
mov
and
mov
subl
push
push
adcl
test
movl
je
mov
movzbl
or
mov
mov
andl
mov
mov
sub
mov
imul
mov
subl
add
dec
mov
not
mov
xchg
inc
sub
subl
xor
mov
movzwl
and
mov
negl
mov
mov
sbb
mov
subl
xor
sub
xor
addl
add
mov
movl
mov
je
and
mov
xorl
xor
andl
add
movl
cmp
movl
jne
pushl
adcl
call
sbb
mov
mov
mov
sub
and
mov
mov
mov
sub
mov
mov
andl
xor
orl
add
cmp
je
pushl
incl
pushl
orl
call
xorl
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
jmp
mov
dec
mov
incl
xor
orl
add
movl
cmp
movl
je
sub
mov
xorl
mov
mov
mov
sbb
mov
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
call
jmp
mov
andl
add
mov
mov
subl
mov
add
movzwl
or
mov
mov
mov
add
mov
movzwl
or
mov
mov
addl
add
xor
mov
sbb
mov
mov
addl
add
lea
andl
mov
push
orl
pushl
pushl
call
mov
subl
mov
sbbl
xor
movl
add
movl
cmp
jne
mov
inc
cmp
movl
jb
movl
jmp
mov
xor
xorl
add
movl
jmp
subl
mov
andl
mov
inc
mov
cmpl
jne
push
pushl
push
pushl
push
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
movzwl
mov
mov
mov
mov
mov
xor
add
cmp
jne
mov
xor
jmp
mov
add
mov
mov
test
je
mov
push
pop
push
dec
pop
xchg
sub
xchg
dec
mov
imul
sub
mov
mov
mov
xor
mov
add
mov
mov
xor
add
mov
imul
mov
xor
mov
lea
cmp
je
mov
mov
mov
mov
mov
xor
xor
mov
add
div
mov
xor
lea
mov
mov
mov
mov
mov
xor
lea
mov
mov
mov
xor
add
imul
mov
xor
mov
lea
cmp
jne
mov
jmp
mov
mov
xor
add
mov
xor
lea
add
call
xor
inc
cmp
je
xchg
push
pop
push
pop
inc
xchg
sub
xchg
dec
mov
imul
add
xchg
push
xor
mov
dec
inc
add
dec
xor
add
pop
mov
pop
pop
pop
leave
ret
