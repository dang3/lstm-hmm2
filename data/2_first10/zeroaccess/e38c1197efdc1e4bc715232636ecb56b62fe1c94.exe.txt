push
mov
sub
mov
mov
and
mov
andl
mov
inc
mov
cmpl
jle
jmp
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
push
subl
push
mov
mov
sub
add
push
mov
xor
xor
mov
sbbl
add
andl
mov
mov
sbb
mov
mov
andl
jmp
xor
xor
inc
mov
cmpl
jae
cmpl
ja
jmp
pushl
push
push
pushl
call
cmpl
jne
xor
or
inc
mov
jmp
mov
mov
sbb
mov
mov
mov
sub
add
mov
movl
cmpl
je
cmpl
jle
jmp
pushl
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
orl
mov
movl
sbb
mov
and
xor
add
adcl
mov
mov
mov
mov
mov
and
mov
adcl
mov
and
mov
xor
push
neg
pop
sub
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
ja
jmp
push
call
jmp
add
andl
jmp
xor
xor
inc
mov
cmpl
jae
cmpl
jle
jmp
push
push
call
cmpl
jne
xor
xor
inc
mov
jmp
movl
movl
mov
and
movl
mov
xorl
mov
mov
orl
mov
and
mov
xor
movl
add
mov
adcl
lea
sbbl
mov
mov
or
mov
adcl
xor
add
mov
lea
andl
push
mov
movl
xor
add
andl
push
subl
mov
xorl
push
subl
pushl
xorl
call
andl
mov
inc
mov
cmpl
jb
jmp
push
pushl
pushl
call
cmpl
jb
mov
add
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
ja
jmp
pushl
call
cmpl
jne
mov
inc
mov
jmp
mov
add
movl
mov
incl
mov
lea
incl
mov
movzbl
or
movl
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jge
jmp
push
pushl
push
call
jmp
mov
sbb
xor
sub
mov
sub
mov
mov
movzwl
movl
mov
mov
cmp
movl
je
add
mov
mov
sbbl
xor
xor
lea
mov
orl
xor
div
mov
xor
mov
xor
orl
xor
orl
sub
cmp
jne
mov
mov
add
mov
mov
subl
xor
addl
xor
add
add
movl
mov
movl
cmp
movl
jae
and
lea
not
mov
mov
xor
xorl
add
lea
mov
mov
mov
cmp
jbe
addl
addl
movl
jmp
addl
addl
sub
mov
xorl
xor
decl
inc
sbbl
incl
addl
add
cmp
movl
jb
notl
mov
xor
mov
movl
xor
xorl
mov
sub
add
mov
adcl
xor
sub
andl
ror
movzwl
sbb
xor
mov
mov
mov
adc
mov
orl
jmp
pop
mov
pop
mov
add
das
fldl
pop
addl
cmp
sub
cmp
jae
jb
fcmovu
imul
jb
int3
bound
lea
xchg
xchg
inc
mov
sub
push
rol
repnz
sub
nop
ss
mov
aad
jb
adc
and
aaa
jo
lods
sub
mov
notb
test
pusha
push
and
cmpl
fwait
dec
or
jecxz
imul
xchg
ss
leave
int
outsb
cmc
pop
imul
or
mov
shll
imul
jno
add
mov
adc
pop
leave
jmp
dec
xorb
inc
mov
nop
xchg
cli
pop
mov
xor
pop
mov
std
stos
inc
and
fs
push
aam
imul
fisttps
push
and
mov
add
dec
sbb
xchg
cltd
rorb
sbb
out
mov
lret
insb
xor
jle
insl
mov
loopne
fwait
std
add
repnz
scas
lock
dec
rolb
xlat
clc
int3
xchg
and
sbb
lock
repnz
movsl
mov
inc
ret
pop
lock
dec
dec
int
iret
cwtl
fisttps
mov
in
xlat
shlb
rorl
popf
and
dec
xlat
pop
xor
rcrl
popa
adc
fdivs
outsl
adc
mov
push
inc
jge
sbb
inc
rolb
aam
ror
mov
add
push
mov
fbstp
adc
dec
outsb
std
jmp
jge
repz
add
jne
pop
les
pusha
and
in
mov
stc
sbb
add
sbb
dec
and
rcl
push
inc
mov
mov
sub
daa
mov
xor
xorl
mov
sbb
shlb
test
not
push
cmp
sub
dec
jae
push
dec
fnstcw
std
lahf
stc
xchg
or
ret
mov
pusha
addr16
mov
jmp
sub
push
xchg
out
xor
or
scas
subb
mov
test
fisttpll
int
daa
jmp
adc
lods
cmp
xor
pop
pop
outsl
inc
jbe
mov
xor
push
jmp
outsl
adc
mov
in
add
insl
or
xor
scas
nop
pop
jmp
lock
out
xchg
mov
enter
inc
inc
xor
fisubs
mov
cltd
test
in
mov
push
jecxz
movsl
mov
mov
mov
dec
mov
xchg
pusha
rcrb
jb
adc
in
jb
fists
adc
inc
mov
inc
xchg
sbb
push
add
add
mov
test
js
jno
daa
sub
outsb
lahf
push
aam
xchg
jl
mov
jg
rclb
adc
aam
dec
scas
pop
insl
enter
stc
pop
cld
adc
push
sub
mov
das
clc
cli
je
jno
sub
lods
mov
std
lahf
or
pop
mov
into
es
iret
test
loope
and
mov
mov
imul
rcl
inc
shlb
xchg
mov
sbb
popa
xor
test
inc
shll
sub
push
mov
and
xor
outsb
push
push
cli
cmpsb
mov
xchg
cmp
push
sbb
or
mov
lock
fwait
cmpsl
adc
andb
jbe
mov
leave
mov
adc
inc
ss
test
popa
int
jge
into
pushf
pop
scas
mov
add
mov
les
jp
mov
mov
add
js
add
cltd
mov
jb
outsb
dec
jmp
mov
adc
bound
mov
ss
repnz
out
xchg
sbb
icebp
sti
sub
test
gs
xor
jmp
inc
adc
lea
in
add
fstpl
sub
clc
jge
xor
inc
add
shrb
mov
popf
mov
test
bswap
cmpsb
std
mov
fs
outsb
adc
dec
ret
sahf
cmp
in
into
xor
or
fisttpll
es
or
loopne
fildll
push
aam
push
inc
mov
scas
push
and
and
into
pop
xchg
adcl
adc
inc
dec
cmp
lock
xchg
push
adc
sti
pusha
fildl
fld
adc
int
leave
js
pop
inc
iret
add
dec
movsl
lods
adc
sahf
aad
shlb
ss
add
sti
xchg
inc
sub
int
cmp
push
mov
je
jp
xor
jb
pop
mov
out
mov
pop
mov
push
mov
faddl
ret
pop
nop
mov
jp
push
incl
out
dec
aad
jg
lahf
fistps
into
xchg
sahf
xchg
jl
mov
fdivl
dec
sahf
jb
hlt
cmc
mov
stc
fadds
xchg
xchg
test
ret
icebp
add
mov
sbb
push
into
xchg
dec
pop
mov
push
xlat
insl
mov
clc
and
jge
movsl
push
fldcw
push
daa
jecxz
aad
cli
pusha
jns
fdivrp
jg
pop
pop
ret
jmp
mov
ret
lahf
jp
xchg
add
cwtl
std
ss
or
push
lock
andb
iret
add
xchg
jp
mov
dec
adc
cmp
xor
lock
out
and
ret
jbe
jecxz
cmp
add
out
inc
dec
jno
push
scas
stc
jb
pop
stc
jae
xor
stos
add
adc
jl
pop
or
pop
sti
jp
dec
iret
cmp
inc
mov
insl
fs
sbb
loop
aaa
pop
scas
add
push
sub
and
push
fwait
lock
xor
sti
nop
sbb
pop
sub
sti
int
movsb
inc
shrb
sbb
sub
mov
jp
jbe
insb
inc
icebp
popf
push
adc
sarl
push
push
movsl
out
cld
xchg
je
lahf
aaa
out
inc
push
les
dec
jecxz
cmpsl
add
xor
ret
les
mov
inc
mov
rclb
jne
aaa
mov
push
dec
mov
adcb
xchg
mov
mov
jno,pn
xchg
adc
xor
fistps
mov
xchg
ret
xor
jne
int
and
mov
dec
testl
sbbb
dec
lods
cmp
fstpt
xchg
mov
xchg
ret
insl
insl
repz
mov
int3
in
adc
sbb
jne
enter
iret
mov
dec
push
mov
movsl
addr16
push
pop
adc
cmpb
push
mov
mov
dec
xchg
adc
cmp
inc
mov
and
aam
js
and
cmc
idivb
adc
outsl
test
rclb
jecxz
and
aam
mov
test
je
jb
rorb
loope
mov
inc
outsb
in
outsb
xor
iret
cld
insl
sub
and
xor
xchg
push
scas
inc
xchg
sti
lea
pop
pushf
cli
add
sbb
hlt
and
scas
push
cltd
cmp
jne
sub
daa
jne
mov
push
mov
insl
cmp
jle
jmp
insl
sbb
aas
sbb
movsb
mov
mov
out
xor
mov
addb
push
loope
ret
xchg
sub
adc
inc
jae
pop
cmp
icebp
jecxz
push
sbb
fs
cmc
xchg
insl
mov
repz
cmp
xlat
addr16
add
push
sub
fbstp
add
stos
push
lea
cvtps2pd
mov
scas
mov
mov
stos
cmpsb
in
mov
nop
lods
aas
add
push
daa
push
fucomip
stos
fldcw
push
fmul
lcall
jecxz
rcrb
pop
sub
push
xor
lods
and
sahf
popa
adc
mov
out
ret
add
jb
lret
xor
mov
outsl
jmp
pop
pop
in
pop
mov
jns
xchg
loopne
mov
mov
jl
outsb
ja
fcomps
pop
cmpl
out
loopne
push
cmpb
fnstsw
mov
cmpsb
pop
jae
and
jo
sub
and
sbb
and
sub
dec
std
lods
addr16
mov
movsl
lcall
fnsave
sub
cli
push
or
dec
jo
lods
add
sbbl
dec
push
jae
in
aad
add
imul
in
xchg
icebp
in
jnp
imul
sub
push
mov
dec
jnp
pop
daa
mov
mov
fnstenv
jp
push
pop
xchg
test
shrl
fdivrs
test
imul
popf
je
faddl
in
pop
fs
mov
es
aas
pop
mov
sub
or
aaa
mov
mov
xor
sahf
pop
sub
or
jbe
mov
repnz
popa
jmp
sbb
mov
mov
fdivrl
pop
sub
movsl
adc
filds
adc
imul
add
divb
loop
jo
mov
jmp
scas
in
stc
stos
pop
cmpsb
or
frstor
sub
scas
sub
adc
sub
cmp
and
cmp
xor
shlb
mov
add
mull
daa
icebp
adc
mov
xchg
int
data16
aas
or
push
cmp
cmp
mov
in
xchg
push
lea
movsb
enter
notl
inc
notb
subl
sub
addl
mov
mov
xor
xchg
pop
je
scas
inc
mov
cld
dec
cld
out
mov
xor
repz
push
jno
loop
sub
dec
imul
lahf
add
jno
mov
xor
sub
dec
aaa
mov
pop
mov
jnp
pusha
cmpxchg
inc
mov
fiadds
mov
fisubs
scas
mov
shlb
addb
jo
inc
shlb
hlt
push
sub
mov
add
rorl
ja
stc
xchg
addr16
gs
out
leave
imul
insb
xor
cli
test
mov
lock
cmp
ljmp
cmpsb
setns
aaa
cld
into
daa
inc
adc
aaa
dec
and
pop
dec
pop
inc
sub
enter
mov
or
add
rcrb
ret
pop
jns
mov
pop
adc
dec
add
es
sub
aam
jp,pn
fcomip
jno
aaa
lret
dec
fstpl
and
push
fwait
cmc
sub
mov
and
lock
fs
mov
mov
test
and
xor
push
adc
les
push
pop
test
mov
adc
stos
cld
arpl
lret
jne
fstp
or
out
push
and
xchg
cld
out
jecxz
adc
sbb
stos
loopne
jg
dec
shl
cmpsl
mov
aas
pusha
push
fadds
jg
sahf
xchg
sbb
sbb
mov
mov
loope
roll
fmuls
xchg
jle
fwait
test
clc
or
cmc
imul
push
sbb
push
rorl
loop
in
rcl
stc
gs
mov
js
movsb
imul
pop
loopne
pushf
cmp
mov
clc
mov
push
mov
mov
push
jno
iret
fisubrs
inc
pop
xor
dec
pop
aas
pusha
imul
outsb
jae
add
or
insl
fdivrl
andl
jb
sub
mov
add
out
js
sub
std
ss
and
bound
ss
jecxz
iret
add
arpl
dec
adc
bound
push
test
pop
lcall
add
bts
mov
aaa
loope
bound
pop
pop
adc
sub
or
ret
lahf
aaa
push
lahf
scas
xchg
fildl
scas
scas
pusha
stos
je
pusha
jl
lds
sti
add
add
lahf
cmpsl
dec
mov
aad
add
shl
jmp
and
fsts
mov
outsl
push
test
lret
scas
inc
decl
cmp
add
add
fdivl
mov
test
xchg
mov
jmp
xchg
pop
test
mov
jmp
add
jl
ret
cmp
shlb
popf
mov
sub
test
aad
call
cmpsb
sub
daa
and
in
pop
outsl
xor
cmp
mov
rolb
daa
insl
int
push
mov
rorb
loopne
adc
stc
iret
xor
or
jle
cmpsb
jle
xlat
mov
filds
in
push
xchg
pusha
hlt
inc
ret
cs
mov
mov
adc
repz
js
fmul
popa
adc
mov
sbb
adc
push
push
xchg
movsl
push
test
pop
fstpt
pop
sub
subl
xor
mov
out
mov
int
scas
call
pusha
popf
sub
rcl
les
adc
mov
loop
add
lods
or
mov
rclb
add
mov
mov
icebp
shl
test
out
pop
dec
ss
fwait
aad
inc
notl
pop
xchg
lds
imul
sub
cli
enter
dec
mov
pop
int3
sub
jno
cmpsb
and
lret
jae
mov
cli
and
add
mov
jne
mov
mov
adc
xchg
andb
cmp
inc
loopne
dec
sbbl
les
push
mov
jmp
push
aad
xor
push
push
cmpsl
mov
rol
mov
xor
out
or
cmp
in
push
in
fiaddl
and
cli
nop
jmp
mov
push
sub
or
cltd
lods
frstor
pop
cmp
rorl
jb
inc
push
loopne
lahf
adc
xor
jge
lods
mov
sub
xchg
push
outsb
inc
stos
jno
jge
cwtl
mov
out
push
shlb
pusha
icebp
repz
in
mov
xor
loope
xchg
das
stc
push
popa
and
fistps
ficoms
cwtl
rorb
ss
scas
out
stos
jne
lahf
xchg
sbb
out
cwtl
xchg
xchg
jecxz
add
dec
cmc
cmp
dec
test
jl
cmpsl
or
cmpsl
cmpsl
fwait
cmpb
cmp
aad
sub
arpl
push
inc
mov
push
dec
xor
inc
call
xor
jmp
mov
int3
mov
xchg
fucomp
data16
jmp
mov
test
sub
xor
shll
aam
pop
or
invd
fwait
inc
or
sub
sti
mov
dec
jecxz
and
adc
mov
pop
movb
hlt
xchg
cmp
stc
cmp
mov
jno
pusha
punpckldq
inc
mov
sbb
mov
inc
ret
xchg
mov
add
mov
dec
lret
add
bound
test
jmp
gs
pop
dec
mov
sbb
dec
mov
or
sub
outsl
dec
rcll
add
test
sbb
scas
push
jle
aas
outsb
ret
push
xchg
xchg
or
test
sub
mov
sbb
mov
rcrl
jne
xchg
adc
aas
dec
in
or
jns
outsb
out
xor
fmulp
or
mov
ja
stos
jl
inc
push
inc
out
mov
js
rcrb
lods
ja
inc
pop
mov
mov
stc
cmc
sbb
push
mov
jbe
lret
and
cmpsb
push
cld
leave
or
push
xchg
hlt
dec
xchg
mov
dec
fdivrp
and
dec
mov
aad
cmp
cmp
gs
fucom
adcl
je
or
mov
outsl
iret
inc
pop
lods
mov
ss
lahf
repz
mov
imul
adc
mov
and
scas
mov
push
movsl
sti
mov
sti
xchg
into
cmpsb
and
aad
leave
cmp
out
mov
mov
xchg
pop
adc
push
stos
inc
les
andb
pop
out
xchg
nop
dec
cmpsb
and
pop
sbbl
dec
aas
into
and
and
push
pop
push
or
push
das
xchg
add
jo
cmp
lods
mov
sbb
xchg
and
push
xchg
xor
and
movsl
or
push
xchg
out
int
jg
out
jae
add
xor
cmc
xchg
push
jno
inc
lock
mov
jno
adc
jbe
sub
cmpsb
fstpt
adc
sbb
cld
cs
stos
jmp
mov
fs
add
arpl
into
mov
popa
movsb
sbb
pop
push
push
xchg
roll
cmp
cmc
pop
hlt
add
adc
pop
sbb
add
ret
gs
jmp
pop
pop
and
cmc
cmp
lcall
loopne
cli
ds
inc
xor
hlt
mov
in
adcb
cmp
jns
data16
cmp
pop
xor
popl
push
push
in
pop
push
sub
sbb
fldl
inc
dec
inc
inc
call
loopne
push
mov
push
cld
mov
loop
cltd
orb
leave
in
lds
jo
daa
mov
mov
std
es
inc
test
push
test
rolb
xor
aas
insb
mov
pop
ficoms
inc
add
jne
faddl
mov
sbbb
or
out
cli
jno
frstor
js
imul
inc
leave
fiadds
push
sarl
mov
mov
dec
cmp
fiaddl
pop
out
mov
sbb
ret
mov
jecxz
cmp
fistpll
push
pop
sub
sub
ret
test
lods
dec
int3
insb
or
test
loopne
push
loop
cmp
jle
xchg
pop
out
fcomp
jae
xchg
rolb
jg
std
jge
add
rcll
incl
mov
sbb
pop
enter
imul
pop
popf
push
inc
das
lahf
jbe
inc
xor
in
push
popa
popl
dec
xchg
sar
int
jns
xor
xor
mov
inc
xchg
loope
loopne
pop
aas
fwait
sti
fs
sbb
out
in
mov
ret
repnz
jns
xor
xlat
es
mov
dec
xchg
pop
cld
jge
call
add
jge
subl
add
sub
shlb
jnp
fimull
testl
jp
sub
add
push
sbb
mov
and
dec
or
or
jmp
dec
dec
fnclex
aad
adc
sahf
jmp
cmp
enter
cmp
jmp
push
and
and
insl
and
jg
imul
adc
test
push
inc
sub
push
int
sub
or
sub
mov
push
or
push
ds
inc
icebp
push
fcmovb
leave
sub
outsl
and
into
and
inc
fwait
int
int
jae
cmpsb
scas
mov
sbb
adc
dec
sbb
fsubrl
aam
lods
je
adc
inc
dec
or
aad
push
mov
cltd
loope
jmp
lea
repz
addr16
cld
decl
pop
cld
adc
incl
jecxz
jb
mov
or
imul
cmp
cld
std
xchg
in
jl
shlb
mov
xor
xor
xchg
stc
pushf
je
mov
add
adc
lret
pop
mov
andl
inc
mov
push
mov
push
adc
pop
popl
in
mov
mov
pop
or
je
lods
test
mulb
inc
ds
push
syscall
ret
daa
inc
in
lds
or
mov
mov
jns
mov
cmp
xchg
adc
incb
dec
out
rcrl
mov
add
or
sub
loopne
jno
mov
and
mov
mov
in
mov
test
in
jg
inc
sub
aaa
mov
xchg
je
inc
inc
rolb
scas
clc
and
sbb
imul
add
sub
test
ja
addr16
fildll
scas
lds
cld
mov
mov
cli
push
mov
aaa
cmpb
mov
wrmsr
cmp
scas
movsb
sub
insb
push
jg
mov
clc
sbb
adc
lcall
mov
mov
sti
scas
dec
mov
out
les
fldcw
in
je
push
push
pop
sbbl
loopne
push
push
ljmp
scas
mov
bound
mov
sub
sarb
fisttpl
fwait
jecxz
testl
adc
dec
gs
pop
inc
mov
movsl
addr16
cmp
popa
das
arpl
push
in
cmp
adc
jae
push
insl
push
hlt
out
and
test
test
push
mov
leave
into
mov
fstpl
dec
pop
pop
negl
minps
lahf
jne
out
orl
pop
dec
outsl
pop
mov
int
mov
pop
xchg
push
xor
mov
lods
jg
add
jmp
sarl
pop
enter
mov
add
adc
ljmp
and
mov
negb
sti
inc
cwtl
pop
loopne
push
std
cmp
ret
js
loopne
loop
repnz
stos
out
add
cld
cs
loop
mov
jb
insl
mov
mov
test
cs
dec
and
loope
sub
leave
cmc
adc
fcmovbe
lods
incb
mov
lcall
fs
mov
push
test
and
stc
insl
test
popf
sbb
jns
ja
out
push
adc
mov
jo
pop
fisubl
mov
cs
daa
cmc
pusha
ret
mov
lahf
cmpsl
and
imul
push
pop
sbbl
arpl
xor
pop
daa
mov
mov
inc
fwait
mov
adc
icebp
popa
xchg
loopne
or
xor
sub
lea
std
cs
inc
dec
mov
aas
fiadds
fsubl
test
and
sub
ret
outsb
pop
ljmp
fistl
stos
xchg
int3
add
cld
xchg
ficomps
push
jns
and
mov
mov
or
mov
and
add
cmp
je
loop
adc
pusha
adc
mov
mov
loop
cmp
sub
mov
aaa
dec
cmp
lret
add
add
cld
mov
xchg
outsb
movsb
andb
xor
pop
adc
lahf
repnz
mov
push
add
sub
jp
mov
loopne
popa
and
push
jg
popf
repz
jmp
sub
fisubrl
sbb
movsb
mov
lods
mov
push
in
imul
repz
dec
lods
cmp
pushf
or
cmp
pop
sbbl
mov
iret
sbb
mov
jecxz
lds
js
lds
adc
cmp
int
imul
add
mov
cli
pusha
push
ljmp
cli
test
inc
add
pop
inc
inc
mov
stos
xchg
cld
out
mov
jle
jae
movsl
xor
push
lcall
out
cmp
dec
inc
dec
mov
push
imul
xor
decb
jp
xchg
test
xor
xchg
sub
jbe
pop
sbb
sub
jns
dec
repz
mov
add
pop
repz
or
jb
out
sub
fsts
cmc
aam
push
jge
add
jg
repnz
mov
mov
ljmp
xchg
daa
repnz
pop
lods
popa
xor
mov
shlb
movsb
call
nopl
cli
pusha
fdivrs
hlt
ret
adc
and
outsl
int3
add
in
es
mov
mov
xchg
test
xor
jg
test
mov
lret
stc
xor
aam
scas
pop
lahf
pop
sbb
jb
imul
stos
mov
push
iret
divb
gs
loop
jnp
add
ja
cmp
and
in
add
xchg
mov
pop
ljmp
jo
pop
les
scas
push
inc
jecxz
mov
pop
dec
sub
xor
lahf
sbb
and
or
lds
cmpsl
or
cmp
insb
stos
adc
mov
jmp
push
mov
mov
xchg
mov
pusha
dec
data16
jecxz
into
mov
sarl
dec
ret
mov
enter
xor
cld
jbe
cmc
xchg
xchg
jb
push
adc
mov
pop
mov
jnp
pop
sahf
dec
xchg
xlat
cli
mov
cmp
dec
in
imul
mov
adc
cmp
cmp
shr
outsl
or
lods
mov
out
ret
data16
movsl
mov
xchg
imul
mov
dec
pop
jp
stos
dec
xor
dec
jns
or
mul
fidivrl
inc
and
test
add
mov
shr
xchg
mov
iret
mov
push
mov
xor
and
lds
cld
and
ret
sub
mov
push
sub
jns
inc
adc
sti
jge
cmp
jbe
int
lahf
aas
push
out
inc
mov
and
mov
ljmp
fs
xchg
push
dec
adc
mov
ss
cmpl
negl
mov
andl
jo
jp
fisubrl
imulb
inc
out
loop
mov
xor
pop
or
pop
rolb
es
fiadds
fistpl
cmpsb
test
hlt
shl
iret
xchg
fcompl
je
aaa
daa
jl
xchg
movsl
test
aaa
addr16
pop
fdivs
mov
xchg
dec
mov
or
add
imulb
fcompl
stos
mov
push
cmpsl
clc
stos
in
push
jle
scas
xor
fs
out
std
mov
orl
push
mov
sub
xor
pop
test
push
clc
mov
rol
lods
adc
push
divb
adc
jne
loopne
outsl
mov
cli
inc
insb
jne
sbb
ret
jns
pusha
cmp
jb
rorl
jle
sbb
scas
add
leave
idivl
xchg
mov
add
xor
cmp
leave
cmpsb
jns
ja
pop
data16
out
cli
das
subw
pop
mov
push
xor
fwait
cwtl
jb
out
jae
je
cmp
nop
jg
into
fildl
jae
mov
data16
stos
jle
sbb
mov
fs
dec
ds
sub
lods
add
cld
mov
fnstcw
arpl
arpl
dec
xchg
sarl
jle
push
xor
mov
inc
lock
out
pop
ss
in
popl
push
lods
lahf
fdivrs
adc
rorl
outsb
repnz
lret
push
mov
pop
ds
out
pop
fst
jp
pop
adc
adc
pop
pop
repnz
push
adc
out
js
out
setb
fisttpll
fisubl
xchg
aas
cmp
lock
je
orl
fwait
cs
ja
adc
icebp
mov
mov
insl
cmp
gs
daa
pop
add
movsb
fucom
in
movsb
mov
jns
xor
xchg
jno
sbb
loope
pop
pop
fisubrs
imul
pop
cmp
insl
cwtl
cmp
push
pop
push
je
jb
mov
pop
cltd
dec
or
inc
mov
out
push
data16
mov
add
stc
inc
shr
lahf
fs
lds
sub
rorl
into
mov
in
call
jecxz
repz
inc
inc
sbb
lock
ret
fnstcw
push
loope
fwait
dec
mov
jecxz
xor
cmp
mov
cmp
outsl
int
xor
dec
out
pop
and
std
hlt
sti
mov
and
aaa
lods
mov
xor
dec
es
push
js
xchg
adc
sub
mov
cmp
mov
pop
and
mov
iret
lahf
int3
loop
inc
pop
fisttpl
bound
in
in
jne
jl
jl
xchg
in
pop
jae
dec
jns
dec
js
sub
clc
mov
xchg
mov
push
mov
xchg
push
xlat
inc
cwtl
xchg
adc
and
int3
fcmovb
xchg
lds
lahf
out
sub
mov
cmp
dec
adc
pop
adc
sbb
shl
sbb
jbe
cli
cmp
lret
pusha
js
sahf
sti
push
mov
sti
inc
xchg
imul
mov
cmp
test
pop
mov
inc
cmp
mov
xor
punpckldq
dec
pop
pop
aaa
fsubp
imul
dec
mov
mov
popf
pop
xchg
std
std
adc
insb
shrl
or
leave
cmp
xor
xchg
jae
pop
movsb
stos
inc
cmpsl
mov
addl
cwtl
fcmovne
sbb
pop
das
sub
lret
push
sbb
shrl
or
arpl
mov
cmp
sub
in
push
rcrb
or
xchg
xlat
popa
adc
cli
xchg
test
sbb
dec
scas
jmp
jp
and
mov
loop
mov
pop
les
mov
jl
outsb
add
xchg
stos
or
and
pop
or
xor
icebp
int3
ror
dec
and
testb
mov
push
pop
int3
jne
shlb
cli
fnstsw
stos
add
adc
and
cmp
dec
push
lahf
scas
popa
addr16
mov
xor
jg
push
xor
jmp
push
sbb
mov
inc
mov
xchg
mov
imul
push
xchg
cmp
sbbl
mov
repz
dec
jo
mov
arpl
fisttpl
mov
imul
xchg
mov
in
xchg
mov
pop
fisttps
mov
inc
rclb
cmpsb
lock
daa
dec
jnp
push
jl
lea
add
or
pop
add
cmpsl
push
add
inc
stos
aaa
ja
enter
pop
shrl
lods
lret
sti
pop
hlt
iret
mov
lahf
rolb
shl
sub
fcoml
cwtl
scas
add
adc
inc
push
in
pop
sahf
cwtl
adc
sub
ud2
mov
leave
jnp
mov
ret
test
pushf
or
in
and
mov
movsl
scas
test
jmp
xor
mov
pop
repnz
inc
loope
loopne
pushf
pop
push
xchg
and
jmp
loope
push
push
mov
cmp
cwtl
sbb
out
scas
scas
mov
ja
mov
cltd
fldenv
insl
popf
loop
push
add
sbb
xchg
mov
repnz
jbe
dec
and
sbb
dec
icebp
scas
inc
testb
and
icebp
notl
mov
int3
mov
dec
xor
mull
push
pusha
jbe
lahf
dec
std
mov
ljmp
sub
fs
lods
inc
jo
daa
cmpsl
mov
lods
xchg
mov
call
loop
out
add
ss
add
rorl
divl
jo
scas
or
xor
rcll
push
lods
push
outsl
dec
xchg
ja
mov
ret
xor
push
lret
ljmp
adc
xor
adc
dec
test
mov
aas
in
push
clc
in
call
aaa
rcr
jb
fwait
lcall
inc
fildl
ret
arpl
test
cmpb
fwait
icebp
xlat
push
pop
inc
cltd
dec
shrl
mov
mov
dec
daa
sub
or
pushf
mov
fisttps
mov
or
cwtl
dec
decb
int
sbb
or
pop
jb
es
sub
push
lahf
lock
test
movsb
inc
inc
pop
and
xlat
loopne
mov
fdivp
jns
push
push
das
mov
fimuls
fcomp
movsl
inc
add
repz
cmc
movsl
sub
enter
mov
cmp
jne
or
mov
andl
mov
adcl
xor
xorl
xor
sub
sub
mov
mov
xor
xor
mov
mov
xor
mov
sub
jmp
mov
xor
mov
sub
add
mov
mov
cmp
jne
movl
mov
xor
add
jmp
lea
mov
mov
sub
mov
mov
mov
mov
movl
mov
movl
mov
xor
add
mov
mov
xor
add
mov
movl
movl
mov
mov
xor
add
cmp
je
mov
xor
mov
sub
add
mov
mov
xor
add
imul
cmp
ja
mov
mov
mov
sub
xor
xor
add
div
mov
mov
mov
xor
add
cmp
jbe
mov
xor
add
mov
mov
mov
xor
add
imul
mov
mov
mov
jmp
mov
and
out
mov
dec
sti
out
pop
addl
hlt
and
inc
sub
adcl
mov
dec
add
repnz
sahf
add
push
cmc
pop
fcmovnu
faddp
xor
sbb
in
sub
add
mov
jecxz
and
pop
fsubl
sub
xlat
xor
jns
pop
dec
add
xchg
xchg
and
cmp
xor
in
into
out
mov
inc
jg
or
popf
mov
fsub
addl
daa
arpl
cld
cmp
mov
mov
mov
cltd
mov
test
push
add
orl
sbb
xchg
test
into
ds
aam
cmpsl
jmp
fcom
pop
leave
in
frstor
inc
cmp
ljmp
rolb
ds
mov
push
rcr
out
mov
pop
stos
cmpb
or
addr16
or
cld
inc
push
jmp
idivb
mov
push
xor
jmp
movsl
iret
hlt
bound
mov
mov
daa
bound
dec
pop
divl
repz
lds
pop
pop
je
dec
xchg
or
and
or
movsb
rolb
leave
fsubrl
rcr
popf
pop
dec
lret
dec
dec
mov
or
nop
out
jl
or
mov
mov
out
xor
cmp
sub
mov
xor
in
inc
dec
fnstcw
xor
test
out
shll
out
mov
jp
xchg
sub
dec
or
push
push
pop
fcmovnu
mov
xchg
sub
in
sbb
jecxz
loop
xchg
je
adc
cmp
push
ljmp
lret
popa
and
cli
lcall
jp
sbb
mov
mov
mov
fmul
cwtl
push
in
cwtl
call
push
sub
push
xchg
lahf
faddl
push
imul
lahf
add
fistpll
xchg
sbb
push
jle
pusha
add
dec
pop
out
mov
sub
xchg
test
xchg
pusha
push
pusha
insb
outsl
sbb
jmp
in
mov
mov
or
jbe
repz
fmulp
nop
mov
add
aaa
push
sub
xchg
inc
mov
mov
mov
xor
sub
hlt
mov
inc
dec
sbb
scas
xchg
inc
cmp
xlat
xchg
dec
cmp
push
sahf
fcomps
adc
and
adc
cmpsl
push
vmread
das
mov
cltd
mov
rolb
iret
or
fisttpll
push
int
inc
cld
popa
shlb
xchg
js
addb
sbb
into
aaa
int
shlb
jle
dec
mov
cmpsl
lock
jno
sub
daa
pop
sbb
daa
inc
cmpsb
adc
xchg
lods
jp
sub
mov
sbb
aam
xor
into
shlb
sub
cwtl
scas
inc
pop
jmp
push
icebp
push
in
sub
mov
adc
aam
inc
xor
xor
negl
or
popa
dec
pop
fsts
sub
clc
movsb
cmp
out
inc
push
mov
sahf
outsl
sbb
je
aas
insb
fistps
mov
pusha
or
fs
js
pop
cwtl
or
mov
xor
push
pop
out
dec
sbb
xor
inc
mul
or
add
sub
mov
arpl
aad
cmc
icebp
xchg
in
test
cld
jo
jg
xor
mov
push
xor
xchg
jns
mov
jle
add
fidivrl
in
into
imul
push
daa
fstl
lret
add
lahf
xor
xchg
fidivrs
addb
mov
fiadds
or
std
dec
mov
dec
idivb
fstpl
jbe
out
or
push
hlt
cmp
xor
xchg
mov
out
fsubl
or
std
mov
xchg
addr16
fwait
repnz
sti
fnstsw
into
xor
imul
and
mov
notl
dec
imul
mov
xchg
pop
add
dec
or
cltd
sbb
cli
inc
lret
and
push
xlat
and
xchg
pop
mov
aam
adc
mov
jg
jge
mov
cli
lahf
mov
jno
ficoms
cmp
aaa
frstor
adc
addl
push
push
jle
dec
sbbb
push
jecxz
adc
lods
sub
dec
push
ss
movsl
in
bound
insb
roll
outsb
push
xor
sbb
test
fidivs
fstpt
das
dec
movsb
xor
insb
push
pop
outsl
adcl
cwtl
mov
ret
lcall
test
stc
jbe
decl
gs
or
sub
or
inc
popa
gs
lcall
ret
scas
adc
sbb
aam
addr16
cmp
call
enter
cwtl
gs
fnstenv
sti
push
cmpsb
jb
jne
aad
cmpsb
mov
jmp
mov
sbb
mov
jo
mov
add
arpl
cmpsb
adc
in
xchg
or
mov
cmp
test
pop
inc
pop
dec
sub
jo
adc
test
inc
fbstp
and
lcall
push
pusha
lcall
mov
insl
sub
mov
jbe
mov
push
or
inc
inc
outsb
cmc
dec
outsl
xchg
cwtl
mov
jns
mov
sbb
jle
icebp
xchg
dec
mov
js
stos
cmp
inc
adc
jae
jge
mov
arpl
repz
fidivl
mov
push
aam
dec
std
ret
inc
inc
cs
cli
aam
xor
jo
shrl
xchg
arpl
jns
and
xchg
xchg
jmp
cmp
fistps
das
sbb
pop
dec
xchg
les
add
fistl
stos
imul
in
jmp
les
jp
xor
out
cmp
in
pop
je
jo
jmp
int3
cs
subb
mov
and
mov
and
pop
arpl
in
and
ljmp
sbb
jno
jbe
dec
mov
inc
push
fsubr
mov
add
mov
cli
push
push
shlb
push
push
xchg
rolb
add
test
fdivrp
xor
cli
repnz
leave
adc
je
adc
push
mov
leave
notl
add
ret
xor
sub
sbb
dec
fidivs
scas
js
daa
addr16
sahf
sbb
xchg
ret
push
pop
adc
xchg
cmpsl
mov
hlt
ficompl
pop
leave
insl
repnz
mov
clc
mov
add
cwtl
pop
and
fs
jae
mov
push
jecxz
leave
pop
test
and
push
cld
ret
mov
pop
add
call
mov
mov
insb
inc
stos
jnp
je
add
scas
mov
sub
mov
xchg
ss
inc
xchg
rcl
subb
xchg
jae
jp
stos
add
jno
fisubs
scas
push
jle
cld
and
cmp
push
loope
push
cmp
jnp
push
pushf
sahf
movsl
dec
mov
inc
cwtl
pop
fdivrl
inc
cltd
das
ret
add
int3
ja
outsb
insl
call
mov
in
fsubs
sub
sti
jns
gs
ja
pop
push
mov
push
inc
int
loope
loop
dec
push
xlat
insb
in
insl
add
mov
push
adc
shlb
or
out
or
xchg
mov
popa
arpl
jg
sub
xor
sbbb
jmp
cwtl
push
cltd
sbb
stos
add
jp
lret
data16
std
movb
jnp
mov
icebp
add
negl
into
cmp
jbe
adc
mov
xlat
dec
cmc
adc
push
jo
sbbb
pop
stos
imul
adc
sbb
std
dec
addr16
and
add
je
repnz
mov
clc
push
cld
jle
scas
movsb
dec
loopne
ret
ja
jns
arpl
inc
or
aam
or
pop
imul
pop
mov
aam
stos
outsb
mul
movq
jg
adc
movsb
bnd
dec
sub
mov
and
jmp
rcr
inc
sub
mov
inc
mov
jno
jp
mov
mov
or
push
adc
xchg
or
mov
ss
pop
int3
xor
cli
push
fsubrl
add
jno
sbb
subb
icebp
push
mov
sbb
movl
pop
mov
test
adc
mov
pop
sub
cli
add
je
jne
lret
adc
add
cwtl
xchg
in
and
sti
out
fcompl
fnstenv
xchg
xor
jae
adc
or
lock
bound
lds
ja
arpl
xchg
or
adc
aam
data16
sarl
loopne
add
aam
jmp
inc
push
dec
fsts
dec
sbb
xor
imul
pop
and
fists
inc
mov
add
divl
cli
fwait
insb
enter
push
adc
lret
adc
stos
or
xchg
sbb
mov
pop
mov
fs
jmp
enter
shl
imul
ss
or
adc
cmp
aas
cmc
lea
movsl
cmc
shlb
pop
std
xor
push
and
mov
mov
xor
aam
mov
fidivs
xchg
enter
popa
pop
fwait
shll
stc
adc
xchg
mov
jmp
cmp
push
xor
pop
and
fs
sarl
jl
cmpb
adc
xor
fidivrl
push
sbbl
leave
lahf
pop
and
lret
pushf
aas
dec
push
rcrb
mov
loope
pop
insb
aaa
mov
cltd
addr16
push
mov
fmull
je
or
shlb
dec
or
movsb
cmp
ljmp
orb
mov
rcr
push
mov
mov
add
push
inc
pop
pop
es
les
jb
lret
cmp
dec
jno
cmpsl
cs
inc
push
out
or
add
icebp
mov
jnp
fldcw
dec
jecxz
push
adc
cmp
push
rclb
xor
pop
dec
ja
popa
in
lods
gs
in
fdivr
shr
fnstcw
insb
mov
and
jae
lret
xor
inc
sbb
push
mov
inc
pop
shll
inc
adc
xor
adc
cwtl
adc
outsl
mov
stos
mov
mov
cltd
fwait
inc
add
aaa
test
pop
stos
cmpsb
sarb
jne
mov
jne
pop
int
fiaddl
sti
mov
push
xor
jg
fsts
ss
and
dec
mov
pusha
mov
and
adcb
call
cmp
jg
mov
daa
imul
mov
pop
adcb
scas
xchg
arpl
cmp
inc
dec
pop
or
mov
cs
cli
pop
out
lret
and
xor
mov
dec
mov
adcb
sbb
add
aas
jecxz
aad
add
loopne
push
adc
fisttps
mov
mov
stc
fisubrl
leave
cmp
stos
lcall
cmp
lods
shrb
jnp
jle
cli
add
push
pop
or
movsl
mov
dec
sub
jne
push
jg
sbb
and
loopne
je
jle
subl
insb
cmp
test
lahf
adc
enter
lock
in
fwait
lea
les
nop
fucomip
sbb
cli
popf
xchg
mov
filds
or
inc
pusha
sbb
xor
push
imul
sbb
repnz
jg
jp
out
add
cmpsl
push
fildll
andb
sbb
aad
imul
pop
jae
add
jg
test
pop
lods
stos
into
fistl
ds
aaa
sbb
sbb
mov
fmull
test
mov
add
lock
cltd
imul
xor
xchg
stos
add
inc
and
lods
xchg
stc
jge
jl
movsb
dec
in
cmp
adc
je
negb
call
inc
xchg
inc
sbb
add
fwait
inc
mov
xor
jo
or
mov
data16
sub
mov
insb
out
fs
mov
mov
cwtl
inc
mov
fistps
ret
cmpsb
mov
ljmp
movsl
mov
cmc
daa
cmp
mov
pop
cmpsl
imul
push
jbe
mov
mov
jo
push
pusha
cmp
gs
or
and
adc
int
dec
cli
ret
paddd
rclb
ljmp
negl
and
xchg
std
jns
fisttps
pusha
imul
cmc
push
adc
test
lcall
xlat
mov
mov
pop
and
lahf
pop
cs
mov
jbe
push
ja
mov
int
pop
pop
outsb
shrl
shl
sahf
push
push
pusha
rcll
xor
je
insl
mov
xor
cmp
js
cmp
jecxz
add
jmp
xor
outsl
jg
push
pop
cmp
cmp
inc
loopne
shrl
sub
popf
sahf
xchg
jmp
cmp
into
cli
je
sub
cmc
cmp
xchg
sbb
jne
fiaddl
push
cmpsb
pusha
fildl
jmp
pop
xchg
int
dec
loopne
jecxz
movsl
fsubr
notb
mov
mov
iret
dec
test
jp
cmpsl
mov
sbb
xlat
lods
pusha
scas
cli
aaa
and
xchg
push
sub
dec
ds
jnp
dec
std
sti
mov
dec
add
mov
mov
jnp
xchg
pop
pop
jmp
or
fwait
mov
and
jb
ds
xchg
or
sub
mov
faddl
mov
push
xchg
aad
iret
outsl
xchg
push
aam
inc
scas
add
jae
cmp
int
in
push
sarb
sahf
jo
sbb
lods
cmp
fidivrl
addb
jo
cmp
test
outsl
dec
mov
ss
cmp
add
insb
jl
stc
pop
into
or
test
sbb
mov
inc
xlat
outsl
xor
add
lock
push
mov
dec
pop
ljmp
leave
fsubrp
pop
mov
pop
xchg
movsb
pop
outsl
shlb
pop
movsl
push
test
dec
dec
mov
in
jae
loop
faddl
aam
push
jle
mov
push
les
mov
es
inc
lahf
jp
or
mov
ret
imul
jge
mov
inc
ret
adc
ret
sub
imul
mov
in
cmp
mov
je
scas
sub
repz
imulb
fwait
dec
pop
inc
cli
sbb
push
push
cmp
leave
mov
adcl
sarb
mov
mov
pop
outsl
jb
lcall
in
movsb
jnp
or
insl
push
or
loope
das
enter
mov
jge
pop
gs
or
insl
cli
fwait
xchg
in
dec
push
mov
and
aam
notb
sub
xchg
push
xchg
aaa
ret
push
fwait
mov
test
xor
or
jg
pop
lcall
loopne
lds
pop
pop
cmpsl
sbb
out
and
and
test
call
pushf
lcall
jl
xor
push
push
lea
or
adc
pop
pop
or
add
mov
aam
xchg
frstor
cld
das
cmp
cmp
push
scas
fists
lahf
imul
pop
pop
pop
daa
int
xchg
jno
cmp
stos
adcl
lea
dec
movlps
cmp
pop
jge
mov
repz
mov
inc
add
add
mov
in
mov
cmpb
lcall
add
aas
stc
add
out
mov
shr
pop
roll
and
pop
lahf
in
push
jns
leave
xor
mov
fs
jl
mov
xor
jb
addb
jmp
cmp
mov
xchg
pop
lret
xor
jb
loope
push
aad
int3
rclb
inc
add
inc
fistpl
movsl
outsl
dec
subl
sbb
inc
test
movl
ret
push
inc
jae
mov
into
pushf
xchg
test
inc
ret
lds
aas
fldcw
pop
dec
adc
jle
sub
orl
jnp
scas
loop
xchg
gs
xor
scas
and
and
sub
imul
repnz
subb
push
mov
pop
jg
inc
adc
xor
or
arpl
ja
out
adc
add
bnd
push
add
ja
testb
mov
mov
shll
loope
mov
out
popf
mov
and
stc
push
adc
cmp
scas
push
jns
xchg
jnp
je
xchg
out
add
xchg
pop
aam
add
data16
je
mov
insl
loop
push
dec
xor
pusha
pop
cld
mov
scas
arpl
mov
mov
inc
and
and
mov
popf
loop
cmp
cld
les
inc
daa
scas
push
add
mov
add
movsl
xchg
ja
push
fxch
pop
rcr
aaa
push
ds
sbb
cs
push
pop
pop
ja
pop
xchg
push
sbb
loop
test
pusha
cmpsl
call
inc
inc
push
or
enter
or
das
dec
in
scas
or
push
sahf
arpl
pop
xchg
test
dec
out
push
cmp
mov
xor
daa
int3
dec
dec
push
cmp
mov
enter
cmp
je
test
sub
sahf
and
and
inc
sub
or
fldenv
arpl
test
push
arpl
dec
movb
out
push
xor
test
adc
cmpsb
push
mov
xor
sbb
ljmp
push
into
out
mov
mov
pop
cmc
sbb
movsl
lods
jg
inc
call
bnd
rclb
daa
incl
ljmp
lea
xor
mov
mov
arpl
shlb
dec
cs
aaa
bound
sbb
xor
in
mov
lods
or
sbb
add
adc
push
and
mov
xchg
adc
sub
lea
or
les
add
aaa
aad
cmpsl
xchg
xchg
repnz
test
sub
xor
fstpl
rcrb
or
xor
push
aas
jns
outsl
mov
mov
mov
jg
jnp
add
aaa
mov
adc
xchg
daa
xchg
jnp
pop
lret
les
or
mov
xor
rorl
in
and
cld
sbb
mov
stos
pop
addl
sbb
xchg
out
mov
cmp
jae
sbb
sub
sar
inc
popf
stos
push
mov
xchg
enter
dec
popf
mov
mov
dec
xchg
mov
lock
arpl
push
sbb
xlat
arpl
rol
call
adc
sub
orb
in
jo
inc
pop
fs
adc
es
loopne
adcb
ja
mov
cmpsb
inc
mov
dec
xchg
jecxz
sbb
dec
cltd
adc
jg
stc
loope
dec
sub
lock
mov
shrl
cltd
push
inc
cld
mov
test
fsubp
sbb
pushf
push
mull
stos
stos
xchg
xor
and
call
jo
addr16
inc
scas
stos
subps
fisubrl
out
jp
enter
out
push
aas
lds
imul
pop
add
sub
inc
sub
test
repnz
xchg
and
jmp
out
dec
iret
inc
add
inc
xchg
add
outsb
dec
mov
adc
loope
pop
push
loopne
mov
pop
sti
xor
add
cltd
and
popa
jg
mov
out
js
pusha
dec
and
cmp
jne
mov
imul
je
mov
xchg
and
jae
push
sbb
sub
lods
loope
add
pop
xor
int3
pop
cmp
das
in
lods
pop
pop
adc
bswap
fcomps
lds
xchg
cwtl
fwait
outsb
xchg
cmc
and
mov
xor
frstor
sub
lods
pop
sarl
push
out
faddl
fisubl
lods
enter
dec
outsb
cli
fldenv
push
or
in
shrl
fimull
call
add
push
xchg
xchg
mov
jnp
dec
dec
shlb
xor
out
and
dec
adc
lahf
loop
dec
sbb
enter
loope
inc
aam
repz
clc
stos
dec
jno
cmpsl
aam
adc
or
icebp
inc
inc
in
pop
add
mov
aas
mov
xor
xchg
sub
outsb
fs
sub
pop
jg
fwait
xchg
pop
pop
js
out
jg
cmc
cli
shrb
jge
pop
inc
and
dec
outsb
popl
shll
adc
cmpsb
jle
lods
sbb
cmp
mov
shlb
mov
xor
pop
xchg
mov
aaa
jl
out
mov
and
cmp
aaa
pop
pop
mov
lcall
out
cmp
sbb
dec
lds
and
in
xchg
adc
mov
insl
out
divb
iret
fwait
add
and
and
arpl
lea
filds
sbb
dec
xor
pop
cltd
shl
sub
rorb
xorb
sub
add
wbinvd
cli
imul
xor
fs
iret
mov
cmp
stc
pop
xchg
xchg
inc
mov
jno
lods
lock
xchg
jo
push
xchg
fs
bound
xchg
cmp
sbb
int3
xchg
std
add
jl
pop
jnp
pushf
pop
ret
mov
test
and
adc
sbb
call
mov
inc
cmp
popf
enter
cmc
jmp
or
and
pusha
in
notl
push
add
test
subb
cmp
lret
xlat
inc
and
dec
repz
cmpb
ja
fwait
inc
cmp
sbb
mov
jne
rcrb
negb
cmpsb
clc
xchg
rcr
sub
add
jg
push
cmp
pop
xchg
xor
pop
xchg
cmpsb
xlat
add
imul
adc
shll
repnz
inc
out
mov
out
push
adcl
loopne
je
jne
fwait
insl
inc
adc
or
aaa
les
push
insl
lret
jnp
pop
cltd
fidivrl
pop
mov
je
xchg
pop
and
and
xor
out
hlt
in
xchg
stos
aas
nop
negl
xchg
lock
rcrl
inc
aad
sub
insl
stos
ret
stos
xor
add
incl
adc
cld
sbb
pop
inc
mov
pop
ja
pop
adc
ljmp
inc
jb
pushf
push
pop
dec
pushl
lods
lahf
ss
pop
sahf
push
loope
lcall
les
jg
mov
and
scas
mov
sbb
popa
pop
jle
push
ret
inc
stos
sbb
mov
sti
hlt
jg
push
inc
cltd
icebp
popf
sahf
jno
mov
mov
cld
popf
lods
dec
mov
push
leave
out
mov
sbb
cmp
sbb
jmp
hlt
mov
movsb
loopne
clc
enter
aas
xor
pop
jo
push
jne
fnstenv
dec
jp
into
in
mov
push
ficoml
mov
xchg
fdivr
pop
lahf
lea
xor
test
mov
cmp
gs
in
mov
and
fwait
pop
add
mov
cmpsl
inc
sahf
inc
push
popa
cmp
int
push
push
mov
fadds
decl
sbb
movsb
jmp
push
cmp
cmpsb
lods
push
pop
pushf
lods
dec
xchg
push
cltd
les
mov
sub
mov
add
adc
sub
repnz
mov
adc
jns
pop
stos
ret
and
jnp
and
sub
pop
subl
or
jae
or
push
push
lods
enter
sub
pop
leave
icebp
xor
mov
xlat
sub
jl
and
out
sbb
ret
add
ret
jnp
lods
fucom
xor
ja
push
sub
push
mov
inc
add
dec
movsb
mov
and
cltd
jle
or
sub
sub
jbe
das
imul
arpl
mov
shll
mov
cld
stc
fdivr
int3
add
cltd
fdivrs
test
ds
insb
mov
mov
pushf
roll
jo
cs
mov
xchg
mov
dec
cmp
andb
pusha
add
fldcw
sahf
adc
pop
sbb
mov
xor
jo
js
cmc
lahf
sub
add
mov
inc
lods
iret
mov
fsts
aaa
in
cmp
mov
ja
mov
mov
xchg
arpl
push
mov
lahf
repz
xchg
mov
pushl
in
call
inc
xor
and
outsl
fcoml
negb
out
scas
pop
dec
fidivrs
mov
mov
adc
test
fidivs
xchg
xor
jmp
add
push
inc
shr
dec
movsb
push
repz
sub
adc
dec
jmp
cmp
into
mov
pop
mov
cmp
cltd
xchg
sub
ljmp
test
stc
dec
mov
add
mov
xchg
push
pop
or
push
push
lcall
jge
mov
fdivl
mov
fdiv
fcoms
jb
test
scas
mov
mov
adc
mov
jge
repz
roll
outsb
lods
test
push
xadd
and
inc
in
rcrb
loope
movsl
cmp
mov
pop
icebp
inc
lock
cmp
ret
or
insl
mov
lock
jmp
imul
cmp
aaa
mov
cmpsl
leave
mov
add
repz
in
add
jmp
sub
call
test
into
and
sub
cmp
sahf
xor
scas
stos
je
mov
xchg
mov
adc
mov
push
xchg
insl
push
ljmp
stos
inc
jo
dec
bnd
cmp
rolb
xor
xchg
push
and
adc
mov
fildl
xor
stos
xchg
mov
out
inc
outsb
push
cli
cmp
jl
cmc
stos
inc
dec
rcll
add
jge
movsb
cmpsb
sbb
xchg
std
mov
and
mov
xor
ret
jno
popa
leave
mov
std
sub
cmp
push
adc
push
inc
mov
jg
dec
or
sub
fldt
decb
std
imul
in
into
mov
loopne
fadds
gs
loop
ret
ds
adc
and
or
mov
call
mov
xorl
jl
xchg
cmpsb
push
dec
mov
lods
ds
scas
mov
mov
test
mov
das
js
mov
adc
xchg
jns
inc
mov
xor
stos
and
dec
adc
cmpsb
arpl
inc
adc
ds
leave
pop
ret
dec
mov
mov
mov
and
rorl
mov
daa
fcomp
xchg
mov
sub
mov
pop
aaa
sub
push
stc
syscall
ja
push
rorb
mov
adc
mov
mov
es
fldcw
lods
and
push
pusha
pop
adc
pop
loopne
push
mov
and
adc
shlb
cmp
sbb
leave
cld
or
jo
dec
sbb
ds
loope
out
ret
lods
addr16
cmp
push
jmp
dec
jle
mov
xchg
insl
push
stc
jge
cld
jno
fists
mov
out
dec
out
xor
mov
rcrb
pop
push
xchg
push
jmp
pop
dec
push
and
in
fldl
in
fists
ds
pop
jmp
daa
xor
mov
push
mov
iret
inc
pushf
xchg
mov
add
xor
movsl
repz
stc
fstpt
addr16
sub
add
sbb
pop
pop
pop
sub
push
push
adc
mov
mov
push
inc
jne
mov
mov
insl
cmpsl
loope
icebp
mov
imul
in
push
mov
xchg
jp
into
xor
cs
test
aas
shrb
fdivs
adcb
jne
xor
adc
mov
loop
xchg
popf
loop
and
xorl
in
stos
fsubl
mov
cmp
push
xor
sbb
insb
imul
and
dec
cmp
or
sbb
dec
inc
test
or
sahf
cmp
ds
xor
adc
gs
adc
lcall
pop
shl
nop
inc
sti
mov
loop
or
sub
pop
fdivrs
ror
aad
out
sbb
insb
add
cli
mov
or
mov
adcl
jecxz
imul
push
sbb
in
push
jecxz
push
pop
xorl
insb
aam
lret
mov
inc
push
faddl
jecxz
fdiv
sahf
and
xchg
mov
adc
pop
fwait
jne
arpl
shl
int3
aad
fwait
shlb
fildll
jl
loope
mov
mov
add
leave
xchg
mov
xchg
adc
pusha
fcoms
fldcw
enter
sbb
jne
cwtl
test
mov
mov
sti
mov
ret
scas
mov
mov
pushf
jne
mov
or
push
sbb
loope
adc
fiaddl
rorl
insb
mov
adc
sub
mov
dec
ljmp
in
xchg
insb
jecxz
sub
in
adc
mov
jne
ja
pop
add
out
scas
sub
movsb
xchg
jge
and
in
mov
pop
push
mov
ja
jnp
xchg
in
cmp
mov
andb
adc
xchg
jns
daa
mov
cmp
and
lds
rclb
pop
mov
mov
imul
in
dec
dec
xor
mov
fbstp
lods
cmc
pop
call
mov
sti
popa
addb
or
js,pn
fdivrs
cwtl
rol
and
insb
push
je
xor
xchg
int3
and
jg
mov
ljmp
inc
push
xor
out
imul
jge
pop
pop
mov
mov
mov
push
gs
ljmp
fwait
lahf
out
push
mov
xor
movsl
jae
push
movsl
rclb
inc
cmpb
imul
push
lock
sub
add
adc
rorl
pop
jle
mov
and
mov
repnz
xor
incb
inc
test
cmc
mov
hlt
lods
fisttpl
inc
ljmp
mov
and
xlat
cmpsl
ret
outsb
sbb
repz
cltd
std
and
inc
dec
ret
cltd
mov
es
test
push
call
sub
orl
fs
push
add
and
icebp
cld
in
inc
cld
or
int3
pcmpgtb
fldt
mov
mov
jp
out
push
mov
sub
cs
insb
stos
jp
scas
jg
add
fstl
xchg
inc
addb
push
mov
mov
sbb
jp
outsb
hlt
cwtl
enter
sbb
jmp
mov
mov
and
mov
jne
decl
stos
pop
stos
out
sti
enter
jns
adc
daa
mov
fs
cmp
sub
movb
cmp
je
mov
mov
mov
add
movl
mov
mov
mov
movl
movl
mov
mov
xor
add
jmp
movl
movl
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
jmp
movsl
mov
sbb
scas
mov
nop
cmpsb
call
addl
jns
inc
repz
les
sub
jge
outsb
fwait
adcb
sub
out
mov
hlt
inc
cmp
jg
mov
into
sbb
in
aam
pop
cmp
and
jns
inc
pop
or
andl
repnz
xor
dec
push
xor
insl
or
shlb
xor
adc
cmp
add
mov
xchg
test
jbe
int
sbb
jp
scas
loope
add
inc
xchg
sti
lret
mov
and
ja
adc
xor
mov
push
xor
sbb
ja
lret
aaa
in
out
push
scas
xchg
aam
mov
in
ja
fnstsw
and
pop
enter
ret
jno
mull
fisttpll
or
adc
loope
rorb
push
cmp
popf
hlt
xchg
sbb
stos
popa
mov
shll
jno
jo
outsl
out
test
cmp
rclb
sbb
mov
dec
ficomps
jae
test
loop
push
shll
imul
jb
in
sti
outsb
je
mov
mov
jb
cmp
ds
fmulp
jmp
mov
or
cs
pop
cmc
sbbb
push
lahf
push
shlb
fisubrs
jb
mov
lahf
lahf
jns
scas
mov
inc
imul
xchg
and
mov
sbb
adc
mov
cmp
cmp
in
xlat
dec
mov
push
iret
jno
mov
loope
mov
ret
fcomps
test
inc
fwait
mov
ficoms
mov
or
scas
jbe
jmp
push
test
push
fbld
sti
adc
loop
mov
leave
sti
add
int3
and
lret
dec
pop
jecxz
lock
xor
inc
out
ljmp
sbb
mov
lcall
lcall
out
punpcklbw
std
clc
sub
lret
add
add
mov
sarb
sub
pop
xchg
xchg
xchg
jle
leave
push
es
lret
mov
jb
inc
or
adc
push
movsb
mov
in
mov
mov
and
xor
rcll
pushl
ljmp
mov
add
cmpsl
jae
xchg
jbe
inc
fmuls
roll
sti
inc
xchg
lock
mov
cltd
cmpsb
dec
xchg
push
sub
mov
jb
int
push
mov
mov
pop
pop
mov
pop
cmp
ret
test
sub
fsts
aas
sub
hlt
jmp
xor
mov
in
mov
cltd
sub
adc
adc
adc
sbb
pop
push
decl
lcall
bound
mov
add
or
roll
sahf
cltd
out
pop
aam
sahf
mov
pop
inc
icebp
lea
jae
int3
push
jmp
mov
adc
lods
or
imul
call
in
ljmp
xchg
push
mov
push
loopne
loopne
loop
jb
xor
cmp
ja
add
jmp
and
jnp
subl
in
inc
mov
mov
aam
loop
rcl
sahf
lods
dec
shr
inc
clc
es
je
dec
cmp
int3
pop
push
call
mov
imul
adc
add
call
mov
inc
mov
das
loop
xor
mov
lret
cmp
rorl
jbe
ds
push
or
out
rorb
in
jae
xor
jle
xchg
out
xor
insb
add
xor
cmp
aam
jb
adc
mov
call
in
lea
xchg
jl
jmp
jno
jl
push
stos
sbb
xchg
mov
repnz
xchg
pop
movsl
jecxz
mov
jno
push
xchg
adc
lret
inc
mov
mov
push
sub
repz
mov
loop
push
push
pop
mov
xchg
xchg
mov
in
call
xchg
adc
test
jle
or
mov
popf
push
sti
sub
iret
jge
mov
push
push
js
or
xor
loopne
jnp
xor
loop
lea
xchg
or
hlt
pop
out
cld
sbb
inc
mov
pop
mov
push
test
stc
movsl
movsl
xor
lock
int
mov
cmpsb
aad
scas
push
aam
sbb
pop
lods
in
push
mov
je
fwait
aas
pop
pop
lret
xlat
mov
test
mov
inc
shl
addr16
aaa
sbb
icebp
hlt
loope
mov
push
xchg
xor
out
ss
lcall
push
mov
js
add
dec
and
jns
nop
loop
sbb
ds
int3
fcoms
jno
repz
in
int
xchg
test
jnp
jmp
movsl
mov
mulb
filds
jne
mov
mov
xchg
xchg
mov
lock
cwtl
sbbl
popa
xchg
out
cmp
mov
pop
pusha
movsb
imul
fsubl
dec
sub
gs
incl
mov
cmpsb
sub
pop
dec
inc
into
inc
repz
cmp
or
xchg
xor
lcall
scas
mov
outsb
jne
iret
or
push
push
adc
call
mov
ret
dec
xor
mov
cmpsb
ret
imul
sahf
or
cmpsb
push
das
les
fmuls
orl
negb
arpl
xchg
mov
stos
add
push
fidivrs
rorb
lcall
js
dec
xchg
rcpps
cmpsl
dec
fldt
in
adc
les
mov
ja
mov
pushf
sarb
faddl
xchg
je
dec
popa
ret
sbb
hlt
adcl
add
into
data16
and
bound
xchg
scas
or
pusha
jns
lret
ret
ds
jecxz
fidivl
and
fnstcw
mov
fldenv
aaa
inc
nop
mov
pop
sub
cld
mov
push
into
adc
add
cwtl
xchg
pop
lret
xchg
das
xchg
adc
loope
jno,pt
mov
mov
daa
cwtl
je
sub
addr16
jecxz
movsl
sub
mov
test
into
pushf
mov
ret
jecxz
daa
cmp
or
pushl
dec
pop
das
stos
xchg
daa
ja
cmp
icebp
popl
mov
rorl
test
gs
cmpsl
mov
lcall
and
and
mov
popa
cmp
loopne
pop
jecxz
sahf
mov
lret
mov
hlt
sub
pop
cmp
mov
mov
into
shrb
xchg
sub
mov
mov
xchg
jmp
stc
lock
call
fcmove
and
xchg
jns
ret
mov
les
int
scas
das
cmp
mov
jno
loopne
pop
mov
and
xchg
leave
repnz
lcall
xor
mov
jnp
xor
enter
rcll
jb
cmp
adc
mov
loopne
imul
stos
or
mov
and
mov
inc
add
iret
inc
int
loop
push
sub
rolb
les
jmp
out
push
insb
lcall
inc
outsl
jno
fwait
add
inc
and
mov
sub
lret
push
movsb
cwtl
ljmp
outsb
iret
pusha
sbb
inc
aam
sbbl
xor
js
and
out
fiadds
cmpl
jmp
xchg
lods
ret
and
dec
jae
inc
bound
jbe
loope
cli
pushf
cmpsl
push
iret
mov
out
mov
mov
jb
je
hlt
test
mov
clc
mov
sbb
sub
mov
mov
std
pop
pop
inc
loop
dec
jg
rclb
or
inc
popl
mov
xchg
bound
and
sbb
jp
pop
mov
dec
pusha
orl
adc
or
mov
xchg
mov
mov
xchg
out
jecxz
or
jg
jp
in
fsubs
inc
imul
inc
add
out
xor
repz
xor
bswap
mov
subl
and
xchg
mov
inc
addl
push
je
sbb
fdiv
push
cmp
add
mov
test
xor
or
adc
sbb
sbb
js
sahf
sbb
or
mov
int3
mov
and
inc
movsl
in
mov
scas
sub
sub
or
and
aam
imul
cmp
jle
cmp
push
jnp
add
mov
jmp
xchg
sub
ret
bound
insl
or
loope
or
push
push
test
mov
or
inc
push
outsl
insb
mov
sbb
lea
insb
addl
stc
cwtl
mov
sub
xchg
adc
sbb
xchg
pop
inc
test
enter
sarb
pop
repz
sub
pop
leave
cmp
shrb
cmp
mov
outsl
xchg
pop
jmp
repnz
stos
mov
inc
hlt
mov
fisubl
push
dec
ja
mov
outsl
or
sahf
stos
js
inc
or
je
out
in
cmpsb
lea
adc
imulb
push
popf
cltd
in
mov
repnz
lahf
sbbl
or
or
inc
scas
ja
adc
les
mov
cmp
stos
rcr
fidivs
movsl
fdivr
adc
enter
inc
popf
repnz
rorb
popa
lods
sub
lock
and
fadd
ret
jl
sub
imul
sub
jecxz
mov
and
xor
adc
sbb
add
push
inc
addr16
movsb
xchg
xor
loope
out
lods
in
lods
shlb
cmp
lret
xor
pop
cmc
cmp
stos
inc
push
pop
pop
mov
push
fadds
je
mov
out
sbb
xchg
js
adc
and
add
mov
adc
int3
lcall
mov
xor
insl
js
xor
divl
add
enter
out
push
xchg
xor
subl
xchg
add
adc
jmp
int3
addr16
fdivl
or
cmp
and
mov
lods
out
mov
mov
test
jle
scas
pop
mov
or
cmp
in
lcall
mov
xchg
dec
mov
jae
inc
shl
mov
mov
jae
inc
mulb
and
loop
or
mov
dec
xchg
imul
stc
loopne
in
sub
fisubrl
icebp
pop
and
add
jns
inc
sbb
adc
stc
xor
jo
sub
dec
jmp
jb
aad
lods
outsb
pop
xor
sub
jno
dec
ret
sti
push
scas
inc
push
sub
in
jne
fdivrl
sbb
sbb
aam
xchg
icebp
sbb
jne
ret
jns
pop
imul
sahf
add
stos
push
stos
sbb
jnp
repnz
fsubs
mov
sub
sbb
inc
js
je
jle
bswap
movsl
cmp
inc
scas
test
jecxz
sbb
sub
xchg
rorb
inc
outsl
sbb
loopne
adc
sahf
jp
cmpsl
data16
pushf
jns
adc
add
push
decl
in
jg
jbe
mov
scas
mov
sub
adc
pop
and
inc
dec
enter
pop
movsb
pop
inc
jmp
and
xchg
sub
cld
pop
enter
rclb
inc
rclb
xchg
adc
mov
add
xchg
jns
cmp
fistpl
and
fildll
aas
cs
inc
ret
adc
cmpsl
add
lahf
sti
sub
lcall
aam
out
add
lcall
sbb
cmpsl
das
in
xchg
movsb
in
js
dec
push
mov
outsl
les
aam
mov
xchg
mov
pop
aam
hlt
test
xchg
xor
mov
ja
in
mov
mov
mov
jb
hlt
popf
pop
push
clc
iret
out
int
dec
ret
cmp
jecxz
insl
adc
in
xchg
push
sbb
adc
das
loopne
push
sahf
test
mov
add
lcall
es
hlt
and
xchg
adc
lods
dec
mov
jge
test
fdiv
sub
and
iret
mov
lea
fstpt
loope
int
mov
movsb
loopne
out
pop
fld
dec
pop
mov
add
dec
push
cmc
lds
fstpl
mov
adc
pop
push
lods
add
imul
mov
inc
les
mov
mov
movsb
popa
cld
mov
sub
rorb
sbb
test
ret
dec
mov
adc
lods
fs
pop
test
lods
lods
rcrl
fnstenv
jae
cmp
mov
cmc
and
jb
popa
dec
cmp
jg
pop
loope
pop
or
lcall
loopne
jne
pushf
mov
enter
sbb
outsl
jo
lret
test
add
roll
xor
scas
dec
cmp
dec
gs
pop
fwait
xlat
and
mov
js
adc
xor
inc
mov
idivb
int
mov
clc
rclb
cs
pop
shll
sub
mov
popf
dec
pop
test
cmp
dec
sbb
pushf
push
inc
scas
fisttpll
or
lods
lods
fstl
aaa
push
sti
and
mov
xcrypt-ctr
cmpsl
pop
jg
out
push
adc
popl
cmc
push
movsl
pop
add
sbb
push
out
in
rcrl
shrl
xchg
push
lods
cli
daa
repnz
dec
cmp
or
sub
add
in
fdivs
mov
arpl
insl
out
mov
fsub
mov
mov
icebp
sub
pop
and
push
shll
arpl
sbb
lahf
mov
push
clc
push
sbbl
fdivrs
push
mov
mov
test
or
ret
pop
sbb
scas
inc
adc
test
daa
lock
mov
fldl
lea
inc
shl
es
jge
cmp
fimuls
int
ss
jmp
dec
loope
xchg
xchg
push
test
or
jne
rclb
aam
sbb
sbb
shl
shr
or
js
in
inc
mov
loope,pt
sbb
mov
rcr
imul
dec
cmpsl
add
lods
adc
or
scas
incl
push
loop
js
and
out
mov
sti
dec
xchg
mov
inc
fiaddl
or
mov
ds
jge
and
add
pop
jge
sbb
bound
scas
gs
pop
jp
pop
aam
cmp
mov
and
test
daa
sbb
aam
mov
in
insb
cvtdq2ps
daa
lret
mov
xchg
push
mov
dec
mov
stc
inc
mov
add
xor
inc
lods
add
cmc
insb
xchg
cmpsl
xchg
loop
dec
or
cld
push
loope
lea
and
dec
out
mov
push
iret
push
mov
int3
out
test
mov
xchg
icebp
jp
inc
sti
xor
cmc
dec
sbb
or
lcall
jp,pn
pop
push
xor
mov
push
inc
mov
lea
comiss
push
inc
imul
cmp
ljmp
xor
inc
xchg
xchg
mov
cmp
add
xchg
jae
pop
jp
dec
test
int3
jp
jg
outsl
loope
push
lret
jl
xchg
rolb
jl
push
and
xor
inc
cmp
or
add
insl
cmp
dec
fsubrs
mov
push
imul
lds
je
insl
fcoms
pop
add
and
dec
cmpsl
inc
stos
jle
pusha
addb
fidivs
clc
jnp
sub
clc
dec
icebp
inc
jl
cmp
lea
and
push
shr
inc
into
fiadds
movsl
call
dec
jmp
pusha
dec
push
iret
cmp
cmp
xor
inc
cmpsb
stos
sahf
ret
dec
bound
push
pop
add
repz
cld
cmpsl
cmpb
xchg
mov
pop
xor
das
pop
xchg
sbb
cmp
mov
fsts
inc
fcmovbe
jae
es
cs
adc
sbb
add
dec
orb
push
inc
lret
sbb
in
sti
rorl
adc
cmp
inc
rcl
pop
out
out
push
lods
mov
stc
dec
hlt
out
sahf
rol
xor
mov
fsubrs
out
inc
out
add
in
mov
scas
les
sbb
lods
popf
sub
inc
out
mov
sub
lea
fwait
sbb
dec
mov
jb
out
rolb
std
push
cmpsl
jo
into
sub
add
std
aas
fisubs
sti
cli
mov
mov
cwtl
xlat
adc
push
bound
lret
xchg
dec
inc
xchg
push
out
cmp
das
lcall
addr16
add
fnsave
push
and
add
seta
jge
in
mov
out
js
fninit
loopne
fnstcw
movsl
push
sbb
pop
or
faddl
mov
or
jl
push
sub
div
dec
mov
dec
add
push
cs
xor
push
outsb
cli
out
ds
xchg
shlb
inc
std
test
fwait
mov
mov
iret
cmc
icebp
loop
push
inc
clc
pop
movsb
dec
and
fdivrl
and
std
insl
orb
cmc
jnp
pushf
cmpsl
inc
push
test
and
pop
xor
mov
aaa
fisubs
mov
lock
sbb
shlb
push
pop
pop
push
je
mov
jle
push
sbb
call
je
xchg
aas
xor
mov
cmp
sahf
shrb
test
xlat
push
sbb
pop
ja
cmc
fisubrl
stos
mov
iret
sti
push
xor
and
cmp
inc
push
pushf
mov
xchg
jmp
dec
fwait
lret
jbe
ljmp
xor
xor
imul
sub
push
leave
add
aas
add
push
xchg
fisttpll
fwait
mov
and
adc
add
inc
cmp
adc
push
in
mov
push
adc
or
jp
fsubrl
lock
into
mov
inc
push
cwtl
mov
mov
mov
icebp
mov
mov
addr16
fcoml
mov
enter
inc
fisttpl
mov
or
xchg
lods
mov
outsl
or
cld
sti
test
fcmovnbe
adc
movsl
dec
lods
mov
mov
insl
leave
jns
xchg
add
out
in
cmp
push
push
fs
cmpsl
mov
xchg
jo
sar
jmp
adcl
pop
adc
fsubrs
gs
pop
push
and
rcrb
sbb
inc
nop
pop
adc
mov
push
jle
xchg
aam
adc
jo
lret
inc
jns
mov
mov
out
add
pop
sahf
das
xchg
scas
test
repnz
sub
shrb
imul
and
adc
dec
repz
and
pop
mov
mov
add
fisubl
mov
sub
shl
jno
mov
push
push
xchg
and
push
ss
or
sbb
dec
mov
out
jne
inc
lock
scas
notb
mov
push
pusha
jp
mov
sub
leave
test
push
rolb
and
mov
ja,pn
or
mov
bound
test
mov
mov
adc
mov
add
movb
movsb
cld
popf
cli
in
idivb
pop
aam
jbe
adc
add
dec
add
fstl
popf
ss
jns
out
lahf
negb
jmp
mov
into
aas
or
adc
ret
popa
std
lcall
and
daa
sub
fidivs
inc
sbb
mov
jnp
mov
push
dec
cmp
push
lret
outsb
adc
pop
mov
hlt
pop
and
mov
inc
incb
fdiv
adc
inc
in
sub
fldl
ss
lods
mov
mov
and
mov
in
mov
dec
mov
or
xlat
cmp
mov
popa
mov
shl
cld
jnp
mov
lock
rorl
lret
bound
pop
in
in
xchg
bnd
loope
inc
stos
xchg
jbe
call
lret
stos
push
inc
repnz
sbb
insb
jo
jge
test
pop
movl
jno
sbb
jmp
or
mov
lds
mov
sub
inc
arpl
pusha
xchg
enter
cmp
loope
imul
sarb
dec
mov
xchg
add
int
adc
sub
aam
out
dec
dec
in
and
subl
mov
push
lea
pop
imulb
cmp
mov
inc
cmpsb
addl
outsl
in
lods
jo
pop
add
adc
dec
rcrb
les
ja
push
dec
ja
mov
pop
pop
fwait
pop
mov
jne
pop
and
sbb
imulb
push
push
mov
lahf
adc
pop
mov
loopne
jp
mov
jns
pop
or
in
mov
lahf
daa
in
cltd
adc
outsl
inc
or
jle
cmp
pusha
andl
lret
enter
aas
loope
ret
jg
fiaddl
and
int
adc
xchg
push
adc
stos
xchg
lock
cld
add
mov
mov
dec
jo
and
call
stos
into
sub
add
shll
sarl
push
hlt
push
fidivl
ret
mov
mov
cld
test
movsb
loopne
mov
and
cli
or
rcrb
decl
lret
cli
popa
cmp
cmp
add
cld
mov
or
push
or
dec
and
js
or
movsb
fcom
pusha
mov
leave
loope
icebp
repz
cs
in
gs
ret
push
cld
cmpsl
in
andl
ss
xor
das
lret
xor
test
and
push
fistl
xchg
lret
shll
rcrl
or
jmp
fs
xchg
push
js
in
xor
xchg
das
mov
subb
sub
sub
fisttpl
inc
loopne
push
out
pop
fcompl
imul
or
xchg
jle
sahf
std
cmpsb
je
je
and
movsb
jbe
enter
adc
data16
rdmsr
or
iret
dec
repnz
cwtl
fcmovnbe
push
jmp
mov
mov
test
dec
or
mov
cs
xchg
js
sub
inc
xorb
and
ret
sub
ds
dec
into
push
jb
insl
into
sub
push
sti
dec
mov
jmp
dec
and
adc
outsb
pusha
incl
push
and
outsb
test
push
lea
repnz
pop
mov
fcompl
sbb
or
rolb
testl
das
out
mov
dec
sbb
push
lock
andnps
pushf
daa
cmpb
clc
add
pushf
push
ds
adc
test
and
fcoml
movsb
fcmovu
cltd
sub
cmpsb
out
pop
jmp
aas
shrl
bound
push
mov
xor
push
iret
into
icebp
in
sbb
push
pop
pusha
adc
rcl
addr16
out
sar
lds
test
adc
dec
mov
hlt
ret
mov
pop
sbb
xchg
hlt
xchg
mov
dec
jge
dec
push
clc
outsb
pop
mov
hlt
cmp
pop
std
lahf
or
bound
push
pop
rorb
or
sahf
psrad
sub
push
fs
mov
sub
xor
inc
mov
mov
adc
xor
push
inc
sub
sbb
inc
inc
icebp
cltd
gs
cs
leave
adc
xorl
add
ror
jo
sbb
xchg
test
lret
js
lret
cli
cmp
arpl
pop
out
lret
inc
ret
mov
in
lds
or
js
add
xor
jae
ja
cld
mov
cmp
add
push
lods
ret
add
mov
repz
andb
dec
pop
loop
data16
jne
loop
push
insb
divw
enter
std
push
cld
xor
jns
jg
aas
aaa
lret
or
lods
nop
dec
sti
inc
xor
movsl
push
cmp
out
and
cmp
xchg
ss
mov
and
iret
adc
pop
push
or
xor
daa
xorb
pop
aas
xlat
fsubl
les
xchg
pushf
movsl
cmp
jnp
dec
push
cmp
rcll
cld
mov
mov
dec
dec
in
adc
out
inc
push
out
cmp
sub
gs
pop
pop
out
imul
movsb
aaa
shlb
jb
movups
jb
inc
mov
fiadds
loope
fstl
das
pop
jnp
fwait
push
lret
cltd
or
adc
aaa
aam
pop
jbe
inc
adc
ss
lock
in
inc
xchg
jmp
js
rorl
sub
jp
and
inc
xchg
jl
sbb
sub
dec
mov
lret
mov
mov
lds
repnz
call
mov
dec
orb
xor
jo
loopne
fs
push
scas
inc
adc
cld
movsb
adc
lahf
xchg
clc
jg
jae
stos
lahf
cmp
aaa
pop
fimull
pop
push
addr16
inc
cmpsl
push
xchg
inc
fistpll
jg
xor
pop
loopne
loope
sti
lock
decl
pop
pop
fsubrp
lds
xor
mov
lea
das
mov
dec
bound
movsl
fcomps
lret
cld
stos
cwtl
arpl
movsb
add
lcall
ret
cs
jno
gs
adc
push
out
gs
jb
adcl
iret
jno
int3
mov
clc
jmp
dec
inc
rcr
push
push
mov
xor
ficomps
pusha
stos
mov
cmp
ljmp
jno
or
mov
mov
add
sbb
nop
insl
repz
icebp
adcb
fldcw
xor
cs
movsl
push
into
push
fidivl
shll
aas
test
jo
subl
jle
xchg
inc
cwtl
test
rorb
sbb
push
or
scas
jmp
loopne
mov
push
pushf
mov
dec
std
or
pop
hlt
out
add
sahf
in
add
hlt
in
push
ja
and
in
add
push
or
add
and
jp
xor
in
inc
test
hlt
orl
pop
and
mov
push
push
or
add
sbb
scas
sub
roll
and
fwait
sti
out
pop
aaa
ret
xchg
mov
pop
into
cmp
fs
pop
lret
fstpt
movsb
or
pop
cld
adc
fwait
nop
dec
cltd
cs
and
add
mul
sbb
fisttpll
cmpsl
aaa
push
or
push
mov
jge
pop
in
stc
nop
mov
fwait
add
gs
push
push
in
shlb
aas
inc
mov
fistpll
xor
mov
adc
nop
jmp
aaa
add
test
or
aam
imul
mov
cmc
xor
mov
pop
stos
fcompl
pop
out
xchg
or
add
mov
push
sahf
mov
into
sar
mov
cmp
clc
rcr
cmp
or
pop
insb
and
mov
outsl
movsl
dec
out
lods
jp
xchg
or
jmp
popf
ret
jp
jo
and
xor
sub
movsl
mov
pop
adc
cs
or
push
inc
push
mov
pushf
bound
dec
push
ss
bound
test
push
pop
jno
push
in
dec
cld
sbb
pushf
inc
sub
xor
lahf
lret
aad
les
and
jp
fwait
les
jns
xchg
aas
mov
lahf
sub
out
jp
mov
and
fsubl
mov
test
and
push
movsl
pop
push
xchg
xor
add
or
daa
sbbb
out
sub
sub
cmp
or
int
cli
sbb
lcall
mov
push
xchg
insl
leave
xchg
shrb
inc
xchg
mov
sbb
ficoms
sar
jno
sarl
mov
aad
aam
bound
cli
or
orl
mov
dec
pusha
in
cmp
add
add
jmp
mov
or
adc
xor
ret
sahf
jmp
shr
cmpsl
into
repnz
int3
mov
mov
lret
mov
jecxz
sbb
rcll
repnz
mov
bound
mov
mov
mov
pop
in
sbb
ljmp
loopne
fisttps
shlb
add
cwtl
mov
push
mov
cwtl
cs
fdivs
fwait
shlb
cmp
sbb
jno
xlat
outsl
add
pop
mov
jg
or
jmp
push
stc
in
lods
pop
adc
and
mov
jns
adc
xchg
sbb
ret
shlb
inc
loop
cmp
and
xchg
push
loope
movsl
loope
popf
adc
xchg
pop
adc
xchg
cmp
adc
test
lods
je
inc
incl
mov
fcmovb
ret
movsb
and
sbb
inc
inc
es
add
adc
outsb
inc
pushf
push
fisubrl
or
scas
or
lds
xchg
push
lret
out
sub
in
outsl
push
cld
cmp
lock
int3
ljmp
jns
int
ja
or
push
imul
aaa
ret
negb
xor
stos
jp
push
xor
aas
cli
aas
mov
sub
jp
test
lret
jl
push
sub
loop
pop
imul
pusha
cwtl
lods
xor
lods
imulb
or
cld
pop
test
xchg
mov
in
sub
pusha
pop
ret
cmp
loopne
jo
test
cmp
andb
xchg
enter
or
cmp
xchg
loop
out
xor
sbb
mov
or
test
fwait
xchg
xor
adc
add
xchg
xchg
test
sbb
mov
stc
aam
das
loope
decb
xlat
add
mov
inc
bnd
out
sub
data16
jg
je
inc
ret
rolb
cmpsl
dec
and
das
lds
adc
lods
mov
jge
push
cmpl
imul
shl
inc
xor
mov
clc
insl
adc
push
sub
sti
aad
insl
sarb
mov
sub
aad
gs
insb
aas
dec
xor
jmp
rclb
in
pusha
push
hlt
pop
nop
lock
clc
cmp
aam
pop
dec
push
scas
push
jnp
jne
aaa
jno
mov
fs
sub
fsubr
sub
jp
push
xchg
push
imul
fnstcw
lock
sar
add
testl
xor
fisubl
sbb
mov
outsb
adc
lock
push
fs
mov
xor
js
sbb
xchg
push
out
fstl
xchg
inc
shl
and
fldt
loop
jg
xor
cmp
stc
fadd
jg
jg
mov
ds
lret
jnp
or
mov
repz
mov
sbb
outsl
mov
insl
lock
push
lock
pusha
mov
stos
inc
hlt
ja
mov
dec
repz
scas
inc
clc
andps
lods
dec
in
pop
fbstp
push
test
nop
test
mov
dec
fs
imul
pop
mov
mov
mov
xor
xor
add
add
imul
add
mov
mov
mov
cmp
jb
mov
mov
xor
add
imul
mov
xor
add
or
mov
xor
add
mov
xor
add
mov
lea
jmp
mov
mov
xor
lea
mov
jmp
mov
mov
xor
lea
lea
xor
cmp
jne
decl
jne
mov
mov
mov
xor
mov
xor
mov
xor
mov
mov
xor
mov
mov
xor
add
pop
pop
pop
leave
ret
xor
andl
inc
ret
push
mov
sub
andl
mov
inc
mov
cmpl
jle
jmp
call
cmpl
jb
movl
push
adc
movl
subl
mov
push
mov
adcl
xor
push
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jg
jmp
push
push
call
cmpl
jne
xor
or
inc
mov
jmp
mov
orl
add
andl
mov
mov
addl
test
movl
je
movl
cmpl
je
cmpl
jle
jmp
push
call
mov
dec
mov
jmp
mov
sbb
mov
addl
mov
mov
xor
xor
add
and
mov
mov
and
xor
mov
and
mov
add
sbb
mov
mov
xor
mov
or
mov
add
or
mov
orl
mov
xor
mov
xor
mov
add
mov
sub
sbbl
lea
xor
xorl
xor
movl
cmp
movl
je
xorl
mov
subl
xor
adcl
add
cmp
movl
jne
pushl
call
mov
not
mov
adcl
mov
addl
xor
add
movl
cmp
movl
je
pushl
sbbl
pushl
call
mov
xor
mov
xor
mov
xor
add
movl
cmp
movl
je
mov
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
ja
jmp
push
push
push
call
cmpl
jne
mov
inc
mov
jmp
mov
xor
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jge
jmp
pushl
call
jmp
mov
add
sbbl
mov
mov
mov
sbbl
add
orl
mov
jmp
push
mov
andb
test
jnp
std
adc
addl
sbb
mov
ja
dec
xchg
mov
mov
xor
mov
aaa
int3
jp
test
cmp
mov
loopne
dec
pop
push
ffree
addr16
inc
cmp
iret
mov
les
pop
fbld
or
loope
adc
out
dec
clc
and
mov
or
out
ret
fwait
xor
sti
and
xor
xchg
add
adc
xchg
fcmove
std
bound
jo
adc
cmpsl
mov
push
inc
mov
inc
lods
cmp
jl
inc
add
mov
into
mov
pop
cmpsl
push
repnz
push
inc
mulb
std
and
push
call
dec
out
and
push
mov
lret
mov
mov
mov
in
addb
jle
sub
pop
mov
mov
enter
sbb
xor
lods
mov
mov
fdivrs
mov
jp
out
cmp
cmp
jno
arpl
jae
fidivs
and
push
jne
cltd
cmp
mov
or
gs
or
rcrb
push
popa
jle
out
aam
pminub
sbb
sub
xor
xor
add
mov
add
mov
int
sub
ljmp
int
pop
lret
add
xchg
icebp
enter
push
mov
enter
add
inc
xchg
push
addr16
icebp
or
hlt
out
push
push
dec
push
cld
testl
addr16
mov
or
jg
pusha
xor
dec
dec
mov
inc
stc
scas
jb
enter
imul
test
mov
or
out
mov
jp
shl
pop
cmpsb
dec
divb
jmp
idivb
shrb
push
scas
mov
xchg
inc
mov
lahf
jno
push
imul
or
pop
ret
stos
jno
push
lahf
jae
int3
lea
xchg
in
sti
test
in
and
jbe
mov
cmp
mov
daa
xchg
cs
sub
iret
mov
sbb
testb
loopne
jle
into
pop
or
sub
stc
jl
or
test
pop
push
into
jnp
adc
mov
dec
inc
add
xor
in
jnp
mov
in
sbb
movsb
push
rorl
mov
or
cmpsb
cmp
and
scas
fbld
inc
push
fs
push
push
jae
pop
xchg
inc
inc
add
push
dec
push
inc
bound
cltd
cmp
push
xchg
iret
xor
fs
jg
and
fsts
cmp
aas
cli
cmpsl
lock
and
add
xor
pop
push
inc
test
mov
daa
faddl
cwtl
enter
add
nop
imul
ja
or
int
lahf
cmp
dec
and
test
xchg
adc
and
movsb
out
mov
fdivrl
das
or
jno
pusha
ret
ljmp
sbb
pop
mov
xchg
int3
addr16
scas
addr16
lahf
mov
xchg
ss
pop
push
inc
pop
jns
fdivrl
cmp
xor
mov
jp
mov
cs
cmp
dec
xchg
adc
mov
xor
and
dec
pushf
lret
adc
pop
mov
je
hlt
mov
in
mov
pop
dec
cmp
add
jecxz
pusha
lret
testl
mov
sub
bound
mov
test
mov
lds
int3
cwtl
cmp
std
aaa
pop
enter
rcrl
dec
sbb
pop
sbb
data16
movsb
or
mov
sti
cmpsb
jge
fsubrl
rorl
cmp
mov
test
jl
aaa
cld
push
or
and
mov
ret
adc
pop
cmp
ja
std
daa
mov
sarb
sbb
mov
outsb
addb
stc
incl
adc
xchg
ljmp
mov
pop
in
fwait
aad
mov
sbb
mov
std
cmp
jle
out
bound
lock
cs
adc
icebp
sub
aas
inc
jge
neg
add
cmp
shl
insl
inc
jbe
push
scas
mov
scas
add
mov
and
popf
and
mov
jle
fwait
out
mov
loop
jle
lcall
xor
cmpsb
repnz
xlat
out
xchg
inc
xlat
into
lret
rolb
leave
pop
stos
and
push
mov
inc
jp
lcall
sbb
lret
enter
dec
and
add
sub
les
jl
mov
out
jg
movd
out
and
icebp
pop
sti
sbb
sbb
mov
aas
bound
add
and
push
cld
test
push
push
add
in
out
xchg
xchg
iret
lds
mov
mov
jb
cwtl
sarl
ljmp
inc
clc
mov
push
ja
or
push
dec
and
push
mov
mov
xor
scas
lcall
sbb
std
insl
pop
mov
daa
or
inc
stos
scas
push
imul
mov
in
aas
adc
or
sub
or
lods
shrb
ret
adcl
xchg
xchg
mov
mov
cld
enter
repnz
sbb
sbb
adc
stos
push
jo
jno
arpl
mov
mov
mov
sahf
mov
cmp
mov
mov
jbe
pop
ds
sbb
push
stc
adc
popf
push
jecxz
push
or
imul
sbb
clc
inc
cltd
mov
add
das
int
cmp
dec
or
mov
lret
xor
xchg
dec
push
mov
mov
cmpsl
mov
js
push
xor
jmp
dec
faddp
inc
xchg
pop
out
nop
shl
pop
int3
in
int3
rorb
push
fwait
push
sbb
push
out
push
or
and
dec
dec
dec
lock
ss
jp
popf
and
pop
mov
add
mov
sub
adc
dec
jmp
out
js
adc
sbb
and
in
je
fsts
subl
mov
rorl
repz
adc
sub
push
or
or
leave
and
xchg
ficomps
mov
mov
cmp
in
xor
cli
leave
xchg
mov
xchg
divw
ficomps
test
inc
scas
dec
adc
or
popf
jne
aad
arpl
pop
dec
aam
in
cmpl
les
shll
pop
cltd
fst
xor
repz
push
xchg
jns
mov
adc
es
push
adc
or
jns
mov
hlt
ficompl
add
jl
mov
pop
add
mov
push
and
cmpl
aas
sbb
aas
sbb
dec
or
add
leave
gs
push
add
popa
in
xchg
mov
movsl
xchg
xor
jae
loope
pop
out
insb
or
ja
pushf
push
xlat
fwait
addl
popf
fldenv
jae
and
sbb
cltd
imul
fs
mov
cmp
jno
fadd
stc
or
or
and
test
stc
sub
dec
gs
jbe
enter
mov
jmp
inc
ret
das
stos
xor
mov
ljmp
sub
jb
pusha
lock
sub
aas
arpl
fcmovnbe
lods
outsb
int
jnp
iretw
mov
xor
aam
and
sbb
dec
mov
xchg
rorb
jle
sbb
xchg
jecxz
psrlq
sahf
adcb
sahf
shlb
mov
push
int3
gs
fdivrl
pcmpeqd
mov
stos
gs
lock
imul
xchg
aaa
cwtl
pop
jb
lods
mov
nop
mov
jb
arpl
sub
clc
sub
dec
notb
test
scas
repnz
es
xor
out
lea
mov
xchg
xchg
js
ja
notl
mov
jecxz
push
dec
ljmp
aaa
mov
mov
xchg
and
push
sub
adc
stc
push
cmp
ret
orb
jns
lea
fadd
sub
mov
adc
test
push
popf
into
inc
sti
pushf
cmp
imulb
add
pop
ret
cmp
into
sbb
inc
pushf
adc
push
and
cmp
in
mov
mov
mov
jae
cltd
rcl
sbb
cmpsb
dec
xor
cli
mov
and
dec
int
cli
pop
cmp
sbb
inc
xor
imul
ror
xchg
xlat
mov
push
mov
xchg
vunpcklps
push
mov
in
push
fdivl
mov
push
mov
cltd
popf
int
in
pop
inc
mov
dec
jae
pop
inc
push
into
mov
pop
lret
jne
adc
outsb
vmovdqu
test
sbb
xchg
sbb
mov
mov
lods
inc
xchg
gs
lcall
mov
stos
fistpll
mov
jae
inc
or
fdivp
xchg
pop
inc
out
jo
outsl
inc
bound
scas
insb
imul
pop
pop
into
mov
inc
out
cmpsl
idiv
xor
xchg
push
pop
pusha
sahf
js
mov
movsl
mov
call
mov
scas
test
in
xchg
std
insb
test
aaa
ja
or
mov
aas
imul
fsub
jecxz
cmc
sub
or
sub
dec
pop
fwait
mov
nop
pop
les
xchg
mov
sbb
adc
mov
ss
movsl
pop
sbb
adc
push
dec
fs
push
jb
es
addr16
scas
popf
divl
inc
gs
ror
stos
int
rcl
add
shll
mov
rorl
adc
dec
xor
sub
mov
jno
cmp
pop
sbb
cmp
jne
mov
inc
add
je
fisttpll
cmp
stos
sbb
mov
dec
les
clc
pusha
int3
xchg
dec
jb
lahf
das
xchg
in
fwait
bound
fdiv
and
bound
adc
stos
inc
mov
outsb
jp
aaa
lock
sbb
inc
jecxz
nop
das
cmp
cmpsb
push
subb
push
dec
sub
xchg
iret
xchg
mov
div
or
fs
repnz
lret
mov
adc
fs
adc
testb
adc
mov
pop
jecxz
loopne
mov
scas
outsb
test
mov
mov
rcll
repnz
fwait
cmp
icebp
imul
adc
iret
ja
out
insl
jno
mov
dec
lahf
push
loope
add
push
xorl
pop
sub
or
cmpsl
jp
cmpsl
jp
dec
and
shl
jge
movsl
ret
cmc
mov
adc
pop
hlt
and
lods
out
pop
ret
pop
dec
or
daa
push
mov
mov
out
das
add
mov
and
dec
addl
xchg
push
jp
xor
pop
inc
test
hlt
xchg
clc
stos
scas
sub
nop
shll
fwait
lods
push
adc
std
xor
cmc
sbb
xchg
inc
out
popf
setnp
push
xor
cwtl
jp
mov
push
mov
pop
cli
sub
add
xchg
repnz
out
sbb
je
leave
lods
xchg
xchg
loopne
sarl
sbb
xlat
xchg
add
ret
push
fscale
xchg
xchg
and
adc
and
iret
gs
pusha
inc
jl
dec
or
flds
mov
dec
xor
xor
imul
sub
or
inc
shll
cmpsl
movsl
fcomps
cmpb
and
sbb
scas
dec
xor
fisubrs
and
fstpl
fistl
jecxz
cmovo
adc
inc
fstp
enter
jo
lock
dec
mov
sub
movsl
shll
adc
scas
shrl
cli
in
or
das
scas
fldl
xchg
aad
or
test
push
sub
dec
mov
mov
or
fcomps
popw
lock
daa
or
fwait
xchg
cs
mov
iret
fbstp
add
inc
adc
loopne
mov
fimuls
lock
je
cltd
dec
xchg
stc
xchg
inc
in
sbb
jecxz
push
sub
loop
bound
test
inc
mov
sub
and
jbe
in
push
sub
xchg
insl
cmpsl
pop
push
cwtl
cltd
cltd
mov
sub
adc
xorl
push
and
ret
mov
pop
fisttps
cltd
sbb
pop
xchg
divb
mov
sar
ud1
fs
shlb
jp
xorb
repz
repz
cltd
xchg
cmp
pop
sbb
frstor
xchg
sub
into
cld
outsl
mov
lcall
cmp
shlb
push
ret
sub
sbbb
push
add
fimuls
add
cld
and
test
sub
int3
movsb
dec
cmovae
sub
sbb
popa
jle
or
imul
test
out
inc
adc
repz
hlt
push
bound
outsb
pop
sub
xlat
push
sub
test
mov
rolb
cld
test
test
cmp
xchg
add
or
repz
mov
sbb
iret
cmp
mov
out
sub
mov
lock
jle
addr16
or
das
push
call
test
dec
mov
mov
xor
xlat
das
mov
rolb
push
jp
cltd
ja
cmp
test
imul
ret
fsub
mov
cmpsb
mov
fwait
ss
fsubr
ja
adc
in
push
fs
out
js
nop
push
outsl
out
lods
int
mov
inc
dec
sbb
sub
int3
dec
call
pop
pop
gs
push
orb
adc
add
sub
jno
or
cwtl
cmc
inc
sahf
jno
xchg
pop
inc
push
in
cmp
inc
mov
jmp
pop
jp
push
xor
jmp
sarb
lock
ror
pop
push
mov
jg
jae
fcoms
xlat
jl
jge
loope
add
ds
gs
pop
mov
movsl
xchg
in
cmp
lahf
dec
mov
sbb
aaa
and
mov
mov
decb
inc
ljmp
in
mov
addr16
rcr
daa
test
sub
mov
sbb
push
jb
pop
push
push
add
jne
repnz
sub
mov
jle
pop
cmp
mov
cmp
xchg
popa
sub
lcall
or
leave
xor
ds
sub
lret
es
dec
shrl
push
push
aam
jno
cmp
inc
xor
or
mov
pop
imul
xor
jo
mov
push
push
pop
shl
push
mov
mov
daa
in
add
gs
fmulp
cmc
outsl
movsl
stos
inc
mov
int3
push
aaa
fwait
addr16
js
imul
jno
sbb
nop
mov
pop
mov
pop
jo
addl
sbb
dec
in
imul
pop
cmp
jo
stos
clc
loopne
aam
lea
subb
outsl
fs
cmp
mov
push
and
std
ficomps
mov
adc
inc
pop
test
aas
loope
repz
pop
loopne
stos
add
dec
or
jo
sub
inc
xchg
xchg
dec
and
inc
popf
add
shll
jg
lea
add
and
and
mov
xchg
aad
sti
cmp
pop
bnd
cmp
or
inc
out
xor
pmuludq
sahf
lret
mov
jb
daa
outsl
xor
sub
or
pop
ret
mov
inc
mov
notl
push
repz
xchg
fisubrs
mov
mov
pop
push
mov
add
stos
push
push
ds
js
pop
mov
std
pop
les
push
pop
add
pop
sbb
aam
cmp
jne
fsubrs
pop
cmp
jbe
add
icebp
leave
movsb
inc
push
loope
pop
sbb
hlt
std
push
dec
pop
sub
xchg
push
aad
ja
push
pop
scas
adc
arpl
rcrb
sub
inc
xchg
loope
imul
icebp
and
repnz
pushf
out
bound
mov
popf
xor
push
jmp
push
sub
push
fstl
loop
lcall
add
movsb
test
outsb
add
push
jno
adc
inc
push
sbb
aam
es
sarl
cs
adc
push
loopne
inc
add
imul
xchg
xchg
sbb
mov
std
cmp
sbb
repnz
mov
rcr
out
imul
pop
fwait
nop
rcrl
mov
imul
dec
jns
loop
sbb
fsubrl
mov
iret
repz
or
subb
andb
mov
fistl
cmp
fldenv
or
movsl
adc
mov
fidivs
test
lret
push
dec
lcall
pop
push
or
clc
lcall
rcl
ss
push
popf
stos
popa
into
in
jns
lea
hlt
mov
psubd
mov
xor
jbe
in
xlat
xor
lods
jg
std
add
adc
pushf
mov
inc
ret
popf
in
test
push
jno
push
mov
mov
jecxz
xor
fwait
pop
lock
outsb
das
inc
enter
dec
fwait
lcall
xchg
mov
pop
in
xor
sarl
lds
push
pop
aad
outsl
jns
into
fisttpll
cld
lock
lods
pop
add
repnz
ds
or
shll
mov
sub
shlb
inc
out
pop
hlt
jmp
adc
inc
or
out
mov
psubq
mov
push
mov
int3
into
aam
mov
roll
mov
fdivl
sbb
pop
mov
mov
ret
aad
push
scas
jns
pushf
add
adc
jl
test
mov
sub
jp
leave
mov
stc
push
and
repnz
loope
adc
mov
mov
iret
and
xchg
mov
enter
sbb
es
dec
mov
mov
dec
mov
shr
lahf
pop
addr16
imul
inc
stos
lods
enter
cmp
clc
shll
js
lea
bound
mov
or
outsl
in
mov
cmp
jb
mov
pusha
outsl
str
mov
push
fsub
fmull
shll
rcrb
mov
xor
mov
aas
dec
lock
cmp
and
mov
pop
mov
push
pop
les
pop
pop
les
jns
xchg
cmp
and
xchg
and
test
std
ret
dec
in
push
pop
jle
fisubl
mov
xor
lea
xchg
sbb
fdivs
xor
pop
push
scas
mov
rolb
arpl
or
xor
add
ret
fnsave
aas
dec
mov
shll
icebp
cwtl
loopne
sbb
pop
cld
movsb
push
mov
sbb
addb
imul
in
cmp
cmc
or
pop
int3
dec
loop
imul
inc
mov
js
shr
daa
push
test
mov
out
and
in
shrb
lea
int
push
push
into
push
inc
out
jnp
mov
insb
mov
ret
xlat
in
stos
pop
fldt
mov
inc
push
in
fisttpll
xor
sub
xchg
addr16
adc
in
fcoms
cmc
call
inc
outsl
xor
mov
adc
push
loopne
inc
inc
adc
fidivl
in
adc
cmp
bound
mov
jp
xchg
inc
es
jl
sbb
std
xchg
stos
dec
loopne
rcrl
push
rorb
sbb
mov
jge
aas
test
lahf
adc
xchg
mov
movsb
iret
mov
jle
dec
loop
ja
repz
mov
or
sti
rcll
sbb
lods
in
jmp
int3
xor
mov
xor
arpl
insl
fistl
jle
push
lret
pop
pop
cli
sbb
popa
push
out
inc
dec
xor
lods
pop
jno
cld
mov
pop
mov
jae
mov
sbb
sub
pop
js
sar
mov
xchg
pop
mov
mov
stc
test
mov
adc
aas
pop
xchg
xor
jae
lock
out
push
cmp
imul
cmp
inc
ret
das
push
xchg
xchg
cltd
xchg
das
pop
int
cmp
push
cmpsb
pop
pop
push
xorb
ds
popf
outsb
mov
je
adcb
sahf
xor
daa
lods
jle
cmp
sub
into
shlb
and
push
or
in
fstps
les
xchg
shlb
xchg
jbe
or
cli
dec
test
jp
and
xlat
rolb
sub
inc
popf
out
fdivrl
xor
mov
pushf
imul
lret
inc
stos
in
push
lahf
xchg
loopne
outsl
push
mov
xchg
lock
sti
and
ljmp
roll
sub
cltd
pop
push
cmpb
lds
test
xlat
xchg
xchg
je
lds
out
sub
ss
pop
xchg
cmp
popa
das
rcrb
outsl
or
xor
add
pop
lods
ss
out
jb
insl
fcmovb
cld
xchg
daa
popf
in
push
mov
and
push
gs
aaa
test
lock
adc
movsl
stos
sarl
rorb
jns
mov
inc
rcrb
aam
or
mov
pop
push
in
mov
mov
movsl
ffree
cmp
out
arpl
push
push
xchg
sbb
lods
loopne
push
push
repnz
sarl
cmp
ds
lret
loop
xchg
sub
sub
icebp
mov
cmp
pop
and
loope
mov
jmp
adc
rclb
dec
or
xlat
jle
pop
and
incl
mov
pop
xor
push
jmp
lods
stos
repnz
rorl
in
xchg
mov
arpl
ficoms
xlat
dec
dec
adc
push
imul
fisttpll
pop
jnp
test
stos
push
ret
push
ret
and
push
jecxz
imul
in
or
mov
sbb
fsubs
test
inc
sbb
sbb
dec
xlat
jecxz
pushf
fcompl
gs
sti
stc
mov
adc
outsb
push
jmp
push
mov
lret
adc
jno
jbe
cmp
dec
loope
mov
test
ja
fwait
adc
xlat
pop
nop
mov
sbb
addb
xchg
insb
jbe
or
mov
pop
mov
subl
sub
lret
adc
jg
inc
dec
daa
push
mov
dec
popa
lcall
ds
mov
sti
fbstp
js
test
out
jmp
dec
fiadds
push
sbb
dec
push
scas
add
adc
fbstp
fdivs
adc
inc
popf
xchg
mov
jg
mov
sarl
test
sbb
out
fcoms
sub
lds
and
scas
sub
push
stos
mov
ja
cli
movsb
pop
or
push
dec
pop
lret
xor
and
jmp
cltd
dec
nop
add
xor
rep
iret
pop
leave
cli
pop
fs
pop
fsts
mov
outsl
jbe
cli
lds
xchg
or
int3
mov
inc
xor
jp
lock
loope
test
dec
xchg
pushl
sbb
pop
ret
sbb
lea
int
jnp
js
add
inc
repnz
jns
add
scas
gs
fists
ret
jg
dec
sti
mov
cmp
push
cmpsl
fidivrl
adc
push
jnp
adc
adc
cmp
xchg
out
int3
sbb
mov
decb
into
ret
cld
pop
mov
movsb
sbb
sbb
dec
pop
and
or
xor
jmp
push
jo
xor
aaa
jp
and
xchg
cmp
dec
and
leave
call
fdivs
test
es
arpl
loope
or
push
test
ret
andl
lods
or
pop
or
sbb
icebp
fwait
add
cwtl
fwait
add
mov
test
sub
arpl
fwait
loope
ljmp
sar
jmp
dec
xor
inc
std
push
in
jbe
push
add
xor
mov
inc
inc
aam
mov
pop
inc
pcmpgtd
data16
pop
cwtl
mov
sbb
sbb
daa
cs
int3
add
inc
and
aam
inc
repz
sbb
mov
stc
shrl
arpl
lret
pop
or
dec
cmp
idiv
xor
jns
push
ds
inc
jo
fistl
sub
fcoms
test
xchg
xlat
mov
ss
loope
xor
in
stos
loop
jns
in
sub
or
sbb
jg
cli
movsl
mov
insl
ret
sub
in
mov
jae
loopne
sbbl
stc
mov
fsts
in
push
call
sub
dec
mov
mov
sbb
cmp
das
xchg
xchg
pop
mov
shlb
xor
cmpsl
lock
mov
pop
mov
nop
imul
sub
dec
and
adc
xchg
out
cld
xchg
pushf
js
jle
jecxz
sbb
adc
rol
jle
lods
fidivs
sbb
shlb
cmp
jl
in
shlb
mov
lret
loope
cld
adcb
sub
ss
ljmp
out
jae
mov
cmp
dec
jg
into
test
push
jmp
sahf
xor
sbbl
push
push
push
xor
push
and
inc
xor
or
pextrw
je
js
je
insl
out
fistpll
mov
jle
jae
mov
iret
scas
cmp
stos
mov
lods
pusha
sub
cmp
xor
lea
pop
jne
lds
and
lret
mov
aaa
icebp
in
cld
out
lds
add
xlat
xor
enter
adc
dec
scas
test
shlb
xchg
popa
aam
pop
les
mov
dec
lods
out
into
or
pusha
cmc
or
xchg
mov
sub
aad
xor
inc
outsl
bnd
imul
mov
cmpps
mov
xchg
jle
popf
xor
inc
jmp
mov
stos
sub
jbe
das
and
bound
dec
xchg
out
hlt
cs
lea
cs
adc
scas
pop
test
test
mov
in
testb
cmp
xor
fucomi
and
fildll
pop
adc
icebp
adc
and
mov
adc
mov
push
jb
hlt
icebp
xchg
imul
cli
fiadds
rcll
insl
cwtl
push
xchg
or
in
xchg
jg
repz
mov
out
divb
xchg
cmpsb
push
mov
ja
add
ret
lds
aad
adc
cs
mov
dec
inc
dec
inc
jae
fsubrs
or
cmp
movsl
jl
pop
mov
inc
pop
xchg
notb
loop,pn
out
addr16
sub
es
fcomps
cli
jns
imul
push
pop
ds
jo
inc
xor
jb
add
sub
movsl
lds
inc
xchg
leave
in
hlt
mov
inc
lret
lods
xor
jmp
push
mov
adc
dec
jmp
xchg
gs
mov
push
sub
jae
mov
add
outsb
mov
xor
rorl
bound
mov
fcmove
mov
in
sub
and
js
sub
leave
daa
or
loope
sub
ds
jnp
jno
xor
enter
jb
mov
outsb
les
push
rcrl
in
fs
jg
dec
insb
ret
test
aaa
jns
adc
call
push
sbb
fiadds
test
jmp
into
pushf
sti
fstps
dec
dec
or
pop
xchg
imul
jo
decl
or
ja
or
nop
ds
bsf
mov
push
test
jp
jb
inc
test
ret
xchg
stc
jbe
xor
push
ljmp
xor
push
xchg
lret
mov
jb
jmp
mov
pop
jbe
andb
shlb
dec
jo
inc
push
fstpt
in
clc
test
mov
cmpxchg
mov
jl
push
sbb
sbb
bound
ficoms
loopne
pop
and
cmp
pushf
movsb
cmp
xlat
sub
ljmp
xor
mov
or
icebp
aad
lods
dec
cmp
jp
cld
shrl
cmpsb
std
shlb
aaa
repnz
jecxz
jg
adc
xchg
cmc
inc
lods
jno
shr
inc
xor
test
lds
pop
enter
cld
rorl
outsl
imul
dec
mov
adc
xlat
loope
ret
imul
sti
inc
push
add
or
loop
sbb
mov
outsl
aam
mov
ret
arpl
dec
pop
sub
adc
insl
adc
mov
and
int3
cmp
add
ss
xor
lds
test
pushf
jmp
and
rcrl
mov
arpl
sub
mov
push
adcb
decl
add
in
mov
int
adc
imul
fsubs
mov
clc
or
mov
dec
mov
push
lock
shll
sub
cmp
into
out
test
mov
inc
leave
jmp
xor
fldcw
into
pop
jle
pop
xor
mov
fsubr
dec
xchg
xchg
jns
jle
rcrl
mov
push
mov
sub
sbb
cmp
lret
clc
jo
fwait
push
ja
icebp
sub
mov
adc
out
pop
ret
stos
mov
mov
loopne
cld
addr16
add
cmp
or
add
or
imull
pop
mov
jbe
mov
xchg
aad
mov
mov
rcll
mov
fadd
inc
add
fistpll
loopne
notl
mov
push
jp
mov
mov
jg
std
sarb
or
aaa
rorl
jge
push
pop
xchg
pop
es
loop
ret
das
or
adc
mov
mov
addr16
mov
rcrb
mov
pushf
push
pop
sbb
sbb
ja
add
loop
fimuls
sub
push
mov
negl
in
ss
jo
and
ss
imul
push
std
daa
cld
adc
out
mov
sbb
arpl
jecxz
jmp
mov
lods
lret
aad
popf
push
mov
sarl
mov
and
xor
aad
loop
xchg
xchg
incl
mov
test
xchg
subb
dec
stos
sbb
xchg
repnz
stos
lock
adc
icebp
xor
cltd
pushf
int3
call
inc
cmp
gs
shlb
aas
lcall
bound
js
inc
sbb
cmp
jg
insb
scas
jmp
in
test
push
sub
out
ja
jns
imul
cli
sbbb
test
push
fcoms
lret
dec
addr16
mov
divl
pop
out
stos
inc
test
pop
fcmovbe
clc
arpl
xor
push
and
stos
xor
sub
pop
mov
movzwl
or
mov
add
mov
movl
jmp
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jbe
jmp
push
push
push
pushl
call
cmpl
jne
mov
inc
mov
jmp
mov
add
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jb
jmp
push
pushl
call
cmpl
jne
mov
inc
mov
jmp
mov
add
mov
xor
mov
xor
jmp
add
cld
sbb
nop
andb
push
sub
addl
sbb
dec
int3
iret
mov
sbb
xor
mov
jo
lahf
sub
add
repz
imul
outsl
insb
add
adcb
push
fdivrl
pop
mov
xor
sbb
dec
push
enter
data16
inc
adc
dec
out
loopne
aas
xor
jmp
fwait
aam
sar
out
sbb
sahf
xchg
test
sub
stc
cli
ds
xchg
jne
mov
jmp
sub
xchg
fs
push
xor
xchg
push
cmp
and
call
jae
mov
sahf
iret
mov
das
lahf
inc
stos
jmp
pop
adc
push
fsubrs
or
mov
push
mov
aad
bound
xchg
lds
mov
push
das
ja
nop
call
cmpsb
sbb
sub
xchg
lods
xor
test
dec
pop
mov
xlat
fsubs
push
pushf
xor
addb
movsl
or
xlat
add
dec
inc
std
and
repz
js
pop
les
mov
jbe
dec
je
inc
nop
pop
stc
enter
push
mov
mov
pop
push
jno
imul
loopne
fcomps
subb
mov
jmp
sub
jg
xor
mov
jne
inc
cmp
jno
mov
jg
test
xchg
out
daa
lret
xor
jg
fists
xchg
pop
jp
loop
insl
cwtl
movsl
gs
fisubl
add
cmp
insb
jmp
jb
mov
decl
inc
shlb
aad
dec
imul
sbb
inc
xchg
clc
add
add
push
xchg
xor
mov
adc
pop
xchg
dec
jle
mov
sbb
or
xchg
enter
scas
xchg
lock
mov
pop
jmp
daa
roll
adc
ja
cmp
pusha
repnz
imul
or
sub
out
mov
cmp
fcompl
push
ja
insl
fbld
mov
arpl
sbb
xor
jae
out
xchg
mov
int3
je
mov
test
mov
cmc
inc
xor
fisttpll
lret
enter
aad
or
repnz
cmp
adc
xchg
inc
and
cmp
rcl
jge
adc
es
inc
addr16
adc
insb
fisubl
loopne
in
jge
xchg
pop
xor
popf
xor
pmulhuw
pop
pop
sub
subb
mov
rolb
repnz
add
xor
adc
add
mov
or
sub
repz
dec
sbb
aad
ficoml
sbb
cmp
adc
pop
test
jmp
cld
out
jo
scas
bnd
cmp
scas
fidivrl
imul
nop
push
lods
or
jecxz
add
push
ret
and
adc
fidivrs
into
out
sbbl
mov
dec
jge
jl
fdivrl
inc
popa
in
sub
or
cmp
cld
aad
push
insl
adc
jle
stos
mov
push
adc
jg
and
sarb
sbb
movsl
shrl
lahf
aad
icebp
jge
aas
add
jmp
test
negl
fistpl
mov
cwtl
fnstenv
jnp
jp
jp
leave
insl
inc
repz
rcr
pusha
orl
mov
mov
push
push
mov
or
lret
sub
repnz
push
adcb
adc
cmp
popa
call
push
dec
push
daa
ret
mov
pop
lods
notb
loop
addr16
mov
xchg
mov
addl
stc
xchg
adc
addr16
addl
or
addr16
or
fisubl
jae
inc
lock
mov
imulb
pop
fs
add
sbb
shll
stc
mov
mov
scas
dec
sahf
call
bound
jns
call
sub
mov
bound
jbe
ret
sbb
or
out
in
ss
stc
aam
lock
pushw
jl
push
leave
push
popf
cmc
inc
add
mov
pop
push
js
pop
push
pop
mov
cmpl
movsb
push
inc
sub
out
scas
daa
jmp
jnp
enter
imul
jge
sti
jecxz
cmp
mov
or
mov
movsb
pop
and
and
out
scas
push
push
xorb
mov
call
loope
ds
pop
lret
xor
je
repnz
loope
shll
aad
pop
xchg
adcl
dec
xchg
fisubrl
mov
in
int3
jbe
mov
shr
iret
inc
push
push
hlt
sbb
daa
ret
insl
cltd
and
jl
xorl
sbb
xor
xchg
out
adc
adc
out
mov
out
movhps
insl
and
or
out
and
jne
mov
orb
sub
dec
cmp
addr16
cmp
mul
pop
inc
aam
jge
mov
int3
sub
inc
lds
lret
dec
mov
sub
sbb
cmp
test
std
sbb
call
cmp
push
aaa
pushf
fisubrs
dec
push
ret
test
stc
mov
dec
lods
mov
lea
pushf
enter
fidivs
movb
mov
mov
push
test
sub
cltd
mov
mov
adc
xchg
dec
sub
sub
mov
fistl
sbb
sub
call
pop
xchg
outsb
fisttps
push
push
mov
faddl
push
popl
sub
test
je
push
sub
jae
and
xor
dec
hlt
or
mov
mov
lods
out
add
mov
inc
aad
movb
cmp
pop
xor
sbb
and
repnz
lcall
adc
insb
push
aas
lret
std
sbb
dec
jmp
fcoml
cmp
iret
fstpl
cmp
mov
loope
enter
mov
loop
or
in
jo
arpl
mov
adc
jmp
dec
push
adc
and
sbbb
mov
or
mov
out
cwtl
push
fwait
aam
add
call
adc
popf
sbb
cli
adc
cltd
sub
lods
inc
xchg
pop
test
adc
sub
sahf
call
cli
fsubrs
or
inc
insb
mov
shll
enter
or
fadds
notb
scas
inc
in
mov
in
adc
out
clc
adc
jb
and
dec
icebp
inc
repz
jg
inc
push
mov
push
scas
mov
mov
mov
push
and
pop
push
sbb
gs
dec
in
pop
mov
out
xchg
lock
push
in
jo
andl
addl
dec
js
in
push
sub
daa
push
test
outsl
roll
sub
add
or
hlt
les
orb
adc
cwtl
imul
xlat
shll
sbb
stos
fstpl
lock
enter
cld
push
ja
je
icebp
pusha
test
xor
and
roll
js
sub
mov
jno
mov
xorl
sbb
pusha
cld
loope
adcb
fimull
mov
das
cltd
sahf
aaa
xlat
stc
scas
adc
push
loopne
mov
cmp
push
add
lret
mov
or
sbb
mov
jmp
mov
mov
push
sub
outsl
aaa
cmp
adc
gs
pop
xchg
dec
out
movl
mov
mov
and
xlat
pop
in
push
jae
fldcw
fbld
adc
push
test
daa
jb
mov
bound
push
mov
pop
cmp
push
cli
dec
cmp
cmp
clc
mov
dec
stos
sub
inc
xchg
in
sbb
fsubrl
mov
sbb
imul
xchg
std
pushf
shll
mov
mov
push
and
push
add
dec
jg
int3
roll
push
mov
push
pop
fisubrl
arpl
mov
hlt
je
sub
inc
dec
xchg
mov
clc
mov
jbe
addr16
sbb
jnp
or
fldt
sbb
mov
mov
scas
mov
jg
dec
cmc
scas
ss
and
out
xor
add
adc
sbb
frstor
inc
mov
outsl
aaa
adc
push
sbb
shl
rcrl
int3
ja
enter
daa
in
mov
inc
into
add
fldenv
test
arpl
out
and
cwtl
dec
jmp
xor
ret
push
pop
stc
push
out
push
insl
aas
jmp
adc
pushf
jbe
outsb
movl
mov
lcall
jecxz
int
sub
je
cmp
add
sbb
add
repnz
pop
or
sbb
xchg
stc
pop
std
sbb
mov
test
xchg
cltd
xor
imul
xchg
cld
xlat
cmp
inc
add
cmp
xor
xor
incl
dec
fnstcw
jb
push
cmp
bswap
mov
pop
mov
and
idivb
rcr
jle
mov
repnz
push
inc
add
and
data16
push
cwtl
jbe
das
sbb
dec
lahf
movsb
xchg
adc
call
clc
out
cmp
in
pop
in
enter
push
dec
mov
dec
mov
jg
loope
addr16
push
repz
cltd
dec
sbb
fwait
and
ret
sbb
cmp
push
leave
aaa
addr16
gs
mov
push
xchg
lods
loope
mov
ljmp
lret
fcmovb
mov
xchg
ja
movsb
ja
xchg
ss
mov
xorl
mov
sbb
movsl
xchg
xor
jg
cmp
ds
inc
adc
out
mov
repnz
xor
xlat
cmp
cmpsl
scas
fnstcw
mov
jbe
and
insl
adc
pop
fadds
insl
mov
test
xchg
arpl
xchg
outsl
adc
loope
xor
or
mov
sbb
jle
rcrl
cli
imul
xor
divb
cmp
xlat
fcoml
pop
mov
pop
aaa
mov
push
inc
push
ds
fcompl
xchg
div
in
call
loope
sbb
xor
cwtl
mov
out
rorl
mov
cmpsb
lods
pop
xchg
loop
scas
sub
ds
int
divl
dec
xor
stos
and
testb
push
sbb
mov
out
mov
cwtl
pop
push
or
xchg
insb
xchg
fsubl
lea
sbb
push
aaa
test
inc
pop
mov
and
out
add
sub
cs
add
cld
lahf
sbb
rcrl
je
imul
cmpsb
sahf
xchg
lods
addb
cmp
out
sahf
cmp
dec
fstpt
dec
sar
and
inc
movl
in
adc
adc
mov
jle
fwait
scas
in
inc
sub
pop
and
pop
sub
add
and
sbb
mov
insl
dec
jl
xor
test
lea
cmpsb
or
push
fistl
rdpmc
fadd
or
lcall
xor
pop
mov
jle
scas
cs
out
mov
xor
ljmp
mov
and
xlat
jmp
cmp
lods
cmovo
outsl
xchg
adc
test
jp
fsubl
outsb
xlat
in
ds
xchg
xchg
int
xchg
cmc
je
cld
cmp
cmp
sbb
xor
scas
jmp
insl
dec
pop
sub
dec
out
out
addl
push
icebp
pop
clc
iret
pop
jl
mov
popa
cld
inc
add
mov
jno
enter
out
jge
cmp
movl
inc
pop
shrl
push
pushfw
aam
dec
xchg
pop
and
mov
mov
loopne
in
lret
outsb
jo
into
out
cmp
push
cmp
lea
jle
mov
lea
sbb
int
dec
pop
sbb
hlt
pop
cld
cli
clc
adc
mov
stc
sbb
mov
mov
jae
aas
ficompl
scas
mov
and
and
dec
movsl
hlt
xor
push
dec
imul
push
adc
pop
aas
and
cmp
adc
pop
push
inc
fxch
pushf
pop
lods
outsb
jns
add
js
insl
incb
fdivp
aas
mov
stos
dec
mov
std
adc
jns
sbb
flds
shll
or
jnp
jnp
xchg
xchg
sbbl
les
inc
lahf
cltd
pop
outsb
negb
push
push
sbb
or
and
shl
stos
ret
bnd
mov
fistpl
mov
ja
mov
sbb
loop
shlb
cmp
cmp
enter
ret
jle
insb
add
lock
jg
pop
negb
fdivrl
push
sahf
cld
nop
movsl
cwtl
in
dec
std
cs
lret
in
sbb
pop
insl
enter
xorl
stc
dec
pushf
add
dec
inc
lods
lods
cltd
cmpsb
or
mov
xchg
cld
mov
mov
push
popa
pusha
push
stc
test
xchg
shl
enter
std
cmp
sub
pop
jb
dec
call
inc
push
push
push
stc
inc
dec
shlb
ja
mov
and
xchg
es
add
mov
push
xchg
sbb
mov
push
and
call
out
fnstenv
xchg
aaa
pusha
dec
fstpl
cli
jecxz
or
sbb
xor
movsl
cltd
dec
adc
jb
fs
cmp
outsl
pop
adc
test
sbb
das
adc
xor
pop
pop
pop
pop
dec
dec
sub
xchg
dec
cmpsl
xorb
jp
scas
scas
add
bound
lods
in
stc
push
add
movsb
dec
movsl
fdivl
cltd
adc
sbb
ds
shlb
add
cmp
out
test
sbb
jmp
push
pop
scas
aad
xor
mov
mov
jb
loopne
sahf
sar
imul
clc
push
xchg
xor
adc
lret
das
xor
icebp
xor
jne,pn
test
iret
pushf
sti
xor
ja
insl
pop
lods
pop
popa
pop
mov
outsl
add
sbb
aaa
jb
pop
sbb
xlat
mov
adc
and
testb
lcall
std
jo
enter
sub
cmp
or
cmpsb
adc
mov
outsb
mov
cmc
in
shll
mov
push
test
rorl
fistps
sub
repz
push
add
sub
mov
fnstenv
fcoml
jle
aam
in
scas
in
in
sbb
int
mov
add
icebp
das
arpl
lret
sub
sub
aaa
lods
daa
inc
cmp
mov
pop
fs
dec
nop
fbld
or
mov
out
pop
xor
movsb
push
mov
mov
inc
out
popa
shlb
jg
insb
cld
faddp
add
mov
lods
nop
testl
sub
pop
pop
pop
aaa
fsubrp
xchg
push
pminsw
jecxz
xchg
jmp
outsl
mov
bound
hlt
cmp
imul
into
adc
xchg
fdivp
and
cltd
scas
into
pushf
pop
pop
test
push
jecxz
xchg
shrl
jl
mov
in
jne
add
inc
stc
clc
fimull
nop
pop
ret
mov
int3
cmpsl
cmp
and
dec
loop
lods
fnsave
sub
fisubrl
cmp
jae
add
push
or
cltd
add
js
rorb
xchg
xor
les
add
aad
pop
mov
sbbb
mov
inc
xor
pop
mov
and
js
pop
ds
and
sub
movl
xchg
shl
inc
xor
out
mov
xchg
inc
sar
lahf
int3
jp
xchg
cmp
jne
movsb
mov
jecxz
rorb
jmp
fisttpll
jge
push
pop
loop
xlat
mov
sub
pop
mov
loop
lods
scas
xor
shl
mov
jmp
sbb
das
dec
rep
push
jo
pop
mulb
pop
mov
rcll
dec
pop
in
fs
pop
pop
ja
scas
cmp
jl
loop
inc
mov
mov
loop
fsin
hlt
jbe
pop
dec
insl
adc
sub
lret
ja
test
test
dec
xor
jbe
je
adc
fstl
es
aad
rorl
dec
sar
and
stos
adc
push
mov
mov
pop
in
dec
mov
adc
xchg
popl
pop
inc
xorl
cmpsl
repnz
push
mov
call
jle
and
call
xchg
and
rorb
xchg
mov
sti
xchg
or
cwtl
movb
scas
stos
xchg
aas
fs
std
xchg
add
ret
fmul
popl
in
xor
mov
push
pop
test
les
xabort
movzbl
adc
orb
insl
jbe
add
add
test
or
fsts
dec
fnsave
rolb
insl
data16
push
popf
repnz
imul
cmp
outsl
rorb
mov
in
idivb
in
cmp
mov
mov
ja
pop
mov
test
rcll
stos
xor
jmp
xchg
movsl
lret
xchg
test
lcall
orb
cld
jns
pop
sbb
inc
lret
jnp
sub
xor
xchg
fcmovu
icebp
pop
inc
pop
ficoms
jl
xor
push
pop
out
sub
adc
and
xchg
icebp
cmp
dec
test
mov
sub
les
iret
pop
sti
lds
or
icebp
add
mov
cmp
add
aaa
je
fsts
xor
ficompl
lcall
push
cltd
jae
xlat
dec
cmp
roll
or
mov
sbb
insl
xchg
mov
popf
xchg
lea
push
dec
or
test
mov
fidivl
xor
aas
mov
push
jbe
icebp
jno
shrl
test
addl
mov
es
nop
fstpt
lock
movsb
and
mov
or
in
fmuls
cmp
lds
dec
pop
jmp
sub
iret
repz
mov
cltd
and
cmc
out
dec
testb
mov
lcall
daa
imul
cmp
repnz
cmp
lock
xchg
mov
cs
insb
popa
cld
lret
loope
xchg
mov
adc
sbb
lea
scas
and
sbbb
or
cmp
cs
lret
pop
dec
sbbl
inc
mov
mov
sbb
rcr
cmp
fsts
movsb
xor
test
fsub
cmp
leave
sub
lods
aam
je
and
fildl
xor
mov
mov
lahf
outsb
fdivl
or
xchg
xchg
mov
cmp
enter
fnstcw
rolb
fldl
xchg
out
mov
pop
adc
out
cmp
jne
movsb
test
push
mov
test
stos
loope
cmp
fsubrs
inc
mov
leave
sbb
sahf
rcrl
iret
xchg
stos
in
dec
lods
outsb
lret
sbb
hlt
mov
dec
in
mov
sbb
pop
or
adcb
pop
stos
xchg
xchg
cmp
dec
dec
jnp
xor
jae
cli
call
iret
mov
pop
add
mov
pop
or
jns
adc
out
popf
movsl
sub
out
leave
shlb
sbb
cwtl
fwait
add
movb
mov
and
hlt
inc
push
push
stos
rdmsr
mov
dec
test
xchg
popf
push
lcall
ja
push
loope
mov
into
push
ficoms
adc
les
mov
sbb
jl
and
mov
pop
inc
and
int3
lods
xchg
jp
fcomps
inc
pop
enter
mov
loopne
loop
sbb
addr16
call
xchg
inc
mov
js
mov
inc
js
cmp
mov
push
push
sbb
jb
or
hlt
jle
fs
outsl
je
stos
andl
lahf
and
mov
jle
pop
rolb
sbb
mov
jno
rcr
and
jl
push
mov
ret
aam
jl
std
mov
hlt
adc
lock
push
insb
enter
jp
and
mov
out
int
pop
jle
in
cltd
decl
in
loopne
pop
mov
jae
loope
dec
add
add
decb
mov
xchg
outsb
mov
repnz
andb
mov
adc
mov
pop
dec
and
sbb
nop
add
insl
add
jnp
adcl
xchg
fwait
rcr
add
jg
lret
imul
aam
imul
mov
cltd
leave
add
add
ret
stc
cmp
lods
xor
mov
jl
lsl
sub
adc
xor
dec
or
into
fsubr
pop
outsl
or
adc
xchg
in
jno
or
mov
mov
lret
add
ljmp
lret
out
jnp
sub
loop
mov
lret
subb
jne
sbb
sbb
mov
sub
adc
adc
test
mov
aas
js
push
pop
jmp
and
fcomip
ret
lock
mov
mov
push
iret
pop
stc
pop
and
xor
adc
jp
jno
and
push
dec
inc
push
pop
in
arpl
mov
add
sahf
nop
inc
cs
push
fstps
pop
mov
mov
pop
and
mov
frstor
sbb
in
and
jno
dec
cmp
mov
loopne
movsl
scas
pop
leave
push
and
xchg
adc
pop
arpl
lahf
push
inc
add
pop
ds
popf
xor
xlat
xor
test
hlt
mov
mov
loop
andl
or
fldenv
mov
cmp
add
cmp
idivl
mov
adc
into
clc
pop
dec
dec
mov
clc
clc
xchg
sbb
push
adcb
rcr
test
xchg
rorb
loope
test
gs
int
mov
fwait
mov
xor
test
loop
addr16
xchg
mov
push
sarl
mov
dec
insl
mov
movsl
cmc
out
lret
lods
aad
das
pop
faddl
test
mov
adcb
sbb
sbb
pop
aas
rolb
mov
sbb
push
push
daa
subl
push
xor
sbb
subl
pop
out
push
pop
jecxz
push
mov
inc
mov
js
stc
xchg
push
mov
xor
and
adc
sub
mov
subb
adc
push
inc
negb
and
fildl
mov
xchg
pop
inc
inc
push
mov
xor
jns
jp
mov
scas
lock
jnp
dec
test
inc
shll
lds
insl
inc
or
lahf
and
push
or
shll
loope
mov
movb
push
nop
mov
mov
mov
adc
or
loop
rclb
sbb
lock
pusha
inc
sbb
xor
fs
push
cmp
fistl
fists
cmpsl
xor
aam
lret
push
add
mov
jae
or
addr16
sahf
mov
xor
xor
lods
jne
aam
test
adc
mov
repnz
enter
cmp
mov
iret
loope
jnp
insl
ja
adc
aam
or
dec
and
loop
sahf
mov
mov
arpl
cld
fistl
out
lret
inc
push
dec
lret
aas
mov
into
repnz
popw
lcall
mov
insl
stc
xor
mov
pop
aas
frstor
or
ljmp
inc
pop
stos
rclb
stos
shrl
lcall
roll
mov
jo
dec
testb
int3
pop
dec
xchg
inc
xchg
imul
lret
stc
xchg
mov
mov
add
js
add
cwtl
xlat
mov
stos
cltd
mov
pop
sti
idivb
inc
jno
cmpsl
testl
int3
xorb
fwait
add
imul
test
push
dec
mov
jg
subb
jp
add
fsubr
mov
lods
stos
lock
pop
jl
js
pop
call
push
push
xchg
cmp
add
jne
xor
push
enter
xor
js
pusha
lods
mov
pusha
popl
mov
cmp
sbb
mov
mov
je
aam
inc
push
push
xor
adc
pushf
pop
mov
inc
cmp
sbbb
push
lds
dec
sub
cmp
lret
add
inc
insl
mov
aaa
xchg
repz
aad
adc
xor
xor
sub
mov
imul
inc
jae
mov
lods
mov
xor
jecxz
lret
or
fwait
cmp
ljmp
out
mov
into
outsb
add
punpcklbw
xchg
dec
lods
push
mov
daa
dec
mov
in
xchg
xor
jmp
sbb
test
mov
cld
pusha
das
das
divl
adc
cmpsb
test
mov
xchg
in
push
and
and
mov
jb
jae
or
push
outsb
je
fistl
inc
and
fdivp
push
cmpsl
js
aam
mov
test
test
cltd
mov
lcall
clc
stc
cmp
xchg
xchg
aaa
imul
jns
scas
fistpl
cmp
xchg
loop
inc
adc
xchg
xor
or
pop
in
mov
sub
insb
addr16
cmc
xchg
add
mov
fcmove
push
daa
push
and
lods
adc
fsubrs
loopne
pop
or
test
mov
sbb
push
and
mov
jb
jp
mov
or
push
std
mov
imul
push
icebp
cmpsl
fwait
lret
cltd
inc
pop
push
test
mov
rol
fstpt
lock
stos
inc
mov
clc
iret
cmpsb
cmp
mov
in
pop
cmp
xor
add
clc
daa
sbb
push
scas
orl
mov
mov
lods
xor
sub
out
lcall
mov
mov
dec
jno
test
adc
rclb
pop
dec
std
fisttpll
or
mov
cmp
sahf
popf
and
cli
sbb
movsb
cltd
mov
push
and
add
cmp
outsl
cmp
nop
mov
pop
dec
jnp
cltd
cmp
aad
jmp
push
dec
sub
mov
inc
ret
lahf
fcmovb
dec
dec
insl
mov
sbb
add
and
enter
enter
xchg
push
loop
test
arpl
jl
clc
inc
sbb
adc
rorl
xor
rcl
pop
shl
div
out
or
push
cmpxchg
dec
out
push
cmc
movsl
sahf
jae
pop
jg
iret
mov
aam
div
stos
and
mov
adcl
ret
or
dec
iret
jmp
popa
and
pop
fistpl
outsb
or
fnsave
lahf
jge
lret
out
jmp
add
js
push
aas
or
rolb
outsl
out
pop
stc
and
mov
xor
lock
xchg
and
stos
add
xchg
sbb
mov
popf
jp
bound
sub
xchg
xchg
xchg
inc
inc
or
scas
mov
inc
test
leave
sti
xchg
fists
fisttps
dec
int3
mov
rcl
les
add
lods
pop
mov
push
pop
xchg
movsl
out
std
sub
jb
sub
xchg
add
insl
adc
lods
pop
push
int
cmpsl
pusha
fistps
int
mov
mov
jl
mov
jae
rolb
ds
iret
push
inc
push
pop
add
sbb
imul
inc
loop
dec
sbbl
mov
loop
and
inc
mov
add
mov
movsb
cmc
push
loop
inc
fildll
ds
neg
and
push
sbb
in
pop
test
test
into
xlat
push
aas
cwtl
adc
jb
dec
cmp
repnz
movsl
pop
subb
push
inc
xor
inc
jo
cld
pop
adc
mov
test
pop
aas
cmp
shlb
mov
dec
fistpll
or
shlb
jp
leave
jl
hlt
jnp
call
insl
das
hlt
pusha
jb
sub
pop
push
mov
jno
pop
aad
cmp
inc
loopne
mov
adc
add
sbb
add
lret
sbb
jg
xchg
imul
cmp
lahf
test
filds
xor
pop
xchg
mov
add
pop
add
scas
mov
int3
inc
or
int3
dec
jbe
lcall
mov
add
pop
mov
xor
lea
adc
roll
push
push
test
jae
lret
in
xchg
sub
popf
fs
cmp
mov
test
xchg
mov
stos
pop
jl
in
hlt
in
adc
roll
xor
lds
ret
xor
fwait
les
into
insb
adc
sbbb
bound
stos
imul
cld
adc
lret
jl
mov
aad
hlt
es
xor
xchg
cld
mov
movd
mov
lcall
fisubrs
push
leave
imul
and
fidivl
mov
sbb
dec
ja
hlt
jg
pop
jle
lds
jns
jne
int3
pop
leave
stos
ret
fisubl
imul
adc
xchg
or
mov
stos
lret
lcall
lods
xlat
mov
imul
mov
push
fimuls
xchg
mov
lods
stos
testb
xlat
jmp
inc
mov
lds
mov
lea
ljmp
mov
or
icebp
subb
jnp
dec
cmc
sub
jnp
cli
cmp
into
outsl
sbb
adc
jle
fsubs
pop
push
mov
adc
sbb
jo
cmp
in
mov
dec
and
push
insl
mov
mov
cmp
ljmp
and
or
inc
lcall
adc
cmp
in
mov
cld
xor
lret
xor
or
xlat
adcl
xchg
movb
imul
and
decl
mov
dec
aam
push
xchg
jmp
movsb
inc
push
push
pop
jae
push
cli
ja
jp
cmp
lret
fwait
shlb
ds
inc
cld
sbb
mov
hlt
inc
adc
jg
nop/reserved
ss
mov
mov
mov
loopne
push
pushf
fmull
xchg
iret
add
inc
stos
cwtl
lds
dec
mov
mov
jecxz
fistpll
mov
out
data16
mov
sbb
jnp
inc
sub
pop
push
push
mov
pushf
jl
pushf
cmp
adc
or
hlt
js
jns
adc
lcall
mov
jg
shrl
movl
das
outsl
shll
mov
jns
fimuls
jmp
nop
stos
dec
inc
es
cmp
sti
ficompl
sti
push
dec
fst
inc
in
lods
add
incb
or
cld
pop
push
or
loope
lahf
jno
cmpsl
push
insb
dec
mov
sbb
mov
fsub
jmp
popf
repz
orb
push
lcall
out
hlt
out
push
stos
cmpsb
push
and
jno
add
cmp
je
jmp
mov
mov
xor
add
cmp
mov
je
mov
xor
add
cmp
je
lea
push
pushl
pushl
call
mov
mov
xor
add
cmp
je
mov
movzwl
mov
mov
mov
jmp
mov
xor
lea
jmp
mov
xor
jmp
add
mov
hlt
aas
push
out
jp
xchg
rolb
cmpl
aas
subl
jnp
mov
xchg
and
sbb
add
push
gs
ds
xchg
or
push
popa
add
adc
inc
xlat
rcrb
in
rorb
pop
lahf
fiadds
sahf
jecxz
fisttpl
sub
mov
xchg
stos
jnp
sbb
lds
repz
push
sbb
test
inc
xor
out
movsl
jge
push
ja
pop
cmp
and
push
lret
jb
fisubs
js
xor
cmp
cmpsb
lcall
push
cmp
movsb
sub
mov
fcomps
dec
stos
xor
push
pop
mov
shr
and
xchg
std
or
jnp
repz
mov
pop
cltd
dec
sub
mov
popa
mov
or
lret
cmp
icebp
inc
xchg
in
jg
inc
addr16
hlt
shr
mov
pop
and
xchg
jl
sub
push
fdivrl
xlat
xchg
iret
cltd
outsb
xlat
xorb
cmp
test
pop
sti
or
mov
into
sbb
jno
mov
pop
in
cmp
ss
movsb
ficomps
out
stc
cwtl
jmp
dec
inc
insl
mov
xchg
pop
mov
jae
je
xor
sti
xchg
fdivs
push
mov
pop
push
sahf
sbb
aas
jns
stos
mov
stc
imul
jecxz
push
pop
icebp
test
mov
into
mov
sub
adc
shl
or
fidivrs
push
daa
adc
rolb
stos
imul
dec
mov
das
mov
xchg
xchg
xor
lret
xlat
repz
push
imul
shl
fidivl
addb
fiaddl
pop
lret
bswap
inc
dec
addr16
lret
addl
inc
addb
pminsw
pop
loopne
sahf
ljmp
add
push
sub
push
adc
jno
mov
mov
pop
push
push
xchg
icebp
in
jne
cs
iret
or
loope
out
mov
sbb
jmp
shrb
push
cmp
shrl
pusha
jnp
pop
rolb
in
lds
adc
dec
test
xor
les
inc
cmpsl
imul
test
std
adc
add
je
mov
jo
inc
rorb
jno
mov
push
jns
cmp
gs
sti
sub
out
sbb
cmp
and
data16
xchg
mov
mov
pop
imul
rcrl
mov
gs
sub
cmp
mov
arpl
add
cmpsl
icebp
call
test
in
jno
mov
push
jge
xchg
jbe
movsl
add
test
or
mov
jmp
mov
xchg
mov
stc
jg
lock
push
cmp
aaa
cmp
inc
inc
mov
cmp
pop
push
and
xor
fs
in
pop
cmp
cli
mov
sbb
flds
aam
es
sbb
mov
dec
fnstcw
stc
test
in
icebp
ret
adc
movsl
jmp
or
push
mov
sbb
imul
idiv
mov
ret
mov
nop
dec
scas
test
test
push
jg
and
rcl
push
sbb
imul
mov
jns
addr16
shlb
xor
sbb
xor
lea
dec
imul
ja
lahf
xchg
fisttpll
fcomps
adc
push
sbb
mov
jbe
adc
ss
dec
push
orl
cmpsl
mov
push
mov
cs
and
cs
in
outsb
push
rorb
dec
fs
std
add
in
add
scas
cld
pop
pushf
fcomps
sub
cmp
out
or
fidivrl
pop
sbb
pusha
mov
pop
jne
jnp
call
mov
in
or
dec
inc
adc
or
xor
jns
negl
ret
jle
ljmp
mov
fdivrl
push
jle
inc
pop
xor
das
mov
add
dec
leave
dec
adc
xor
stos
enter
adc
out
enter
jg
inc
xchg
ljmp
mov
int3
and
fnsave
jle
outsl
popa
push
push
call
repz
ret
sub
jl
jnp
in
adc
arpl
call
stc
xor
cmp
mov
call
adc
dec
stc
fs
mov
lods
nop
inc
xor
rcrl
xor
sbb
xadd
test
and
inc
jge
dec
mov
in
adc
les
push
int3
popf
std
in
fistpl
xchg
or
bound
adc
lea
sti
popa
rolb
sbb
or
sbb
sub
dec
cwtl
and
pop
dec
movsl
mov
mov
and
sub
js
or
jecxz
mov
pusha
sub
addr16
jne
addl
push
mov
jp
mov
jb
jp
mov
or
in
leave
xor
mov
cmpl
sbb
aam
out
out
fisubrs
cmc
mov
addr16
loope
imul
test
andw
inc
aam
sub
dec
rcrb
out
pop
int3
stc
add
jmp
sarb
leave
mov
adc
xor
pop
mov
std
test
repz
mov
or
cmc
adc
cmp
mov
jl
add
sbb
movsb
pop
repnz
push
cwtl
inc
push
out
daa
in
jnp
aad
pop
dec
sar
sub
mov
adc
inc
dec
mov
test
inc
jle
fdivp
jo
cltd
push
inc
jno
scas
mov
mov
jmp
sub
or
add
dec
mov
enter
push
mov
flds
jecxz
mov
pop
dec
jb
out
ljmp
loope
and
sbbl
insl
aaa
insl
xor
pop
add
jns
pop
popa
pop
outsb
sbb
fcmovbe
sbb
dec
repz
cmpsw
adc
cmp
cmp
xchg
cmpsl
lahf
into
mov
int3
insb
pop
leave
dec
lock
test
or
sub
dec
ja
mov
daa
jmp
inc
out
xchg
mov
push
and
push
call
imul
aas
dec
or
insl
push
and
xchg
test
mov
mov
and
mov
and
push
hlt
mov
dec
daa
sbb
insl
and
pop
mov
loope
inc
xor
or
leave
xor
adc
lds
stc
xchg
sub
xchg
cmp
adc
popa
or
lods
and
insl
mov
mov
mov
sbb
inc
mov
or
in
and
sahf
fs
bound
clc
clc
jmp
scas
push
adc
push
mov
call
pop
jecxz
lods
jno
out
rclb
adc
sub
jle
sub
ljmp
arpl
std
test
add
mov
in
imul
push
xlat
inc
inc
jl
sbb
test
mov
or
sbb
lcall
lea
repnz
int3
add
cli
jb
jne
xchg
in
in
mov
bnd
sti
sub
sub
xor
mov
shlb
jbe
test
rorl
imul
sub
lods
in
inc
mov
sub
leavew
adc
and
cli
lret
mov
xor
ret
inc
cmp
cmp
shrb
mov
jo
testl
xor
adc
lahf
or
outsb
mov
jg
add
aas
cmpsb
aas
pop
inc
inc
mov
sub
sbb
aaa
std
cmp
shll
mov
dec
push
cmpl
push
lahf
out
and
dec
mov
mov
les
fimull
cmpsl
xor
fisttps
push
int3
xchg
fwait
call
sbb
fadd
neg
fcmovne
push
push
iret
push
mov
fcoml
add
mov
cmovns
outsl
adc
cli
push
call
mov
imul
cmpsb
xor
ret
enter
lods
or
mov
xor
xchg
lret
pop
push
clc
fbld
xchg
aaa
icebp
or
icebp
cs
mov
pop
ror
loope
fcmovnb
push
insb
out
popf
xor
mov
push
inc
add
inc
pop
pop
push
lods
daa
shrl
sbb
lahf
add
dec
lods
leave
mov
movsb
and
inc
out
and
rcrb
add
repnz
jmp
add
js
enter
shl
jns
mov
xchg
jae
push
rorb
aam
inc
push
sar
movsl
test
xchg
cmp
mov
repnz
push
jno
mov
jnp
lods
out
or
pop
fwait
call
jg
out
test
cmp
cmp
aam
mov
mov
push
inc
adc
lods
mov
outsb
cmpsb
stos
loopne
aam
lret
sti
mov
mov
cmp
or
xchg
mov
xor
mov
pop
repnz
das
inc
cld
andl
popa
pop
xor
popa
cmp
enter
add
out
les
test
repnz
mov
mov
sub
loope
inc
outsb
insl
mov
jne
movsb
cwtl
mov
dec
loopne
xchg
xchg
lret
repnz
mov
outsl
push
enter
push
pop
cmp
push
stos
adc
popf
pop
add
pop
lods
mov
js
inc
dec
adc
xchg
fldcw
ja
fdivp
sbb
movsb
lds
inc
xlat
cmp
xor
jmp
and
sarl
add
rcrb
and
insb
in
push
call
js
push
jmp
movsl
sbb
cmc
xor
lods
aaa
mov
xor
mov
test
outsl
adc
add
pop
pop
rcll
inc
out
in
jle
or
inc
rcr
rcrl
nop
inc
aad
subl
dec
pop
std
loopne
dec
dec
cmp
ss
stos
push
mov
xchg
jnp
and
imulb
cltd
xchg
adc
mov
data16
leave
addr16
js
jl
and
inc
add
loopne
addr16
lret
sub
leave
ds
and
dec
add
mov
idivl
jge
fbld
cwtl
mov
push
jo
mov
jns
pop
outsl
lods
xchg
loop
insl
sti
cmp
stos
jmp
pop
out
je
lahf
in
pusha
lret
test
pop
sahf
filds
inc
popa
dec
jae
rorl
leave
das
jge
les
arpl
mov
pop
lods
addl
mov
push
outsb
pop
push
sub
ret
sub
mov
adc
adc
xchg
xor
jo
mov
aad
cltd
dec
popf
mov
jnp
setle
add
dec
lahf
lahf
aam
mov
lods
jne
adc
mov
into
push
in
add
lods
or
fwait
sbb
fldl
pop
jno
cmp
test
pop
divb
out
pop
jae
sub
imull
outsl
xchg
cmp
sarl
aas
jecxz
mov
and
cmc
shlb
or
jmp
mov
mov
jae
test
sub
sahf
in
js
sbb
call
mov
cmp
cmpsb
add
leave
ret
add
push
std
loop
outsl
aam
stos
scas
fcomps
jnp
push
push
and
jne
and
mov
cs
or
repz
andb
insb
in
jno
pop
pop
call
add
mov
push
lea
jmp
out
xchg
aaa
mov
pop
lcall
dec
jp
xchg
mov
inc
inc
xor
repz
add
in
mov
push
mov
cmc
mov
mov
mov
jo
mov
fs
adc
cmpsl
mov
loopnew
xor
mov
dec
dec
repnz
sbb
cmpsl
fsubrs
xlat
and
bound
sub
shlb
call
inc
jg
jnp
pop
jge
mov
or
cmp
cmp
lret
adc
clc
mov
add
fcoml
cmp
lretw
inc
movsb
test
cmp
sbb
cmp
jns
sbb
or
mov
push
push
je
jns
icebp
movsb
push
push
sbb
xor
mov
mov
mov
inc
scas
jno
cltd
sbb
loop
stos
fidivs
fwait
xchg
pop
ffreep
adc
pushf
dec
dec
ficompl
fldenv
cli
repz
mov
pop
sbb
jo
ret
sbbb
lods
xchg
lods
lea
aas
push
mov
es
xchg
mov
push
adc
imul
fadds
jo
or
in
and
gs
cmp
sti
loop
movsl
dec
cld
aad
and
repz
mov
insb
cmp
and
adc
call
xor
mov
inc
adc
inc
ja
cmp
cmp
dec
cmpsl
je
lahf
or
cmpsl
fldl
call
mov
adc
fwait
in
stos
test
mov
and
cmp
mov
adc
xchg
rcrl
rcrb
les
daa
adc
sub
mov
inc
push
ret
fists
cmp
xchg
inc
sub
add
dec
sub
mov
adc
movsl
adc
cmp
push
mov
mov
push
popf
jb
nop
lea
mov
jbe
mov
cld
jge
mov
dec
int3
cwtl
dec
das
mov
gs
inc
clc
or
push
dec
inc
lods
cmc
fwait
add
arpl
out
pop
sbb
notl
push
cmp
or
pusha
stc
push
add
cs
jbe
test
fs
ficoms
adc
mov
xor
fsubl
imull
insb
repz
stos
out
loope
ss
std
iret
in
cmp
xchg
or
mov
pusha
push
iret
test
mov
cmp
xor
or
addr16
add
insb
fsubrp
mov
mov
and
iret
fcompl
adc
jecxz
sti
sub
adc
in
sbb
stos
divb
xor
or
sbb
mov
lods
jbe
leave
push
shlb
sbb
adc
mov
push
dec
sbb
jmp
dec
shrb
pushf
mov
adc
and
mov
imul
add
sub
xchg
xchg
pop
ljmp
pop
jle
and
sub
add
imul
push
push
or
cli
fnstsw
test
push
in
jecxz
xchg
fcoms
xor
insl
or
xor
inc
mov
xor
lods
add
jmp
subb
cs
sbb
mov
xchg
sub
cmpb
jl
lds
pop
sbb
mov
jl
shll
xchg
and
shlb
push
stos
sarl
pop
rcr
push
sbb
das
sti
loope
inc
test
mov
es
in
xchg
mov
mov
add
push
dec
cmp
mov
mov
leave
push
jb
dec
aas
inc
pop
adc
push
dec
lods
xor
and
lds
adc
sub
mov
or
sub
dec
pop
stc
jns
xchg
mov
or
xchg
clc
mov
scas
nop
xchg
mov
dec
xor
loop
test
jno
or
or
jnp
cmpsb
pop
out
outsb
sbb
and
ss
xchg
mov
cmp
and
pop
movsb
jb
es
ror
dec
pop
out
aam
insb
xor
jle
and
jnp
pushf
jge
test
adc
aas
push
mov
shll
test
jae
int3
cwtl
ret
mov
sub
sbb
dec
xor
ret
in
ret
xchg
or
xchg
xchg
xor
adc
stos
xor
adc
pop
into
addr16
mov
in
das
fmul
subb
add
das
adc
mov
add
push
lret
jmp
mov
jb
lock
std
outsl
pop
mov
mov
mov
dec
xor
and
cmpsb
inc
jge
cmp
lahf
sarl
mov
adc
push
mov
mov
pop
pop
xchg
mov
outsl
popa
fwait
jp
sub
adc
lret
cmc
mov
popa
or
loop
mov
cmpsl
fidivs
imul
xchg
lds
adc
pop
pop
in
xlat
loopne
pop
inc
jo
mov
ret
fcoms
in
push
xlat
arpl
pop
push
pop
in
sub
das
ret
into
mov
ficomps
daa
sbb
repnz
push
fmull
fwait
es
sahf
dec
sub
insb
cld
jae
mov
mov
jne
cltd
fcompl
sti
stos
xchg
mov
mov
or
pop
dec
shl
out
clc
or
sub
cmp
fmulp
mov
cmc
inc
jo
xor
dec
enter
fistl
aam
cwtl
sub
dec
leave
shlb
loope
mov
js
xchg
fldcw
outsl
push
pop
xor
jp
aas
roll
xchg
sbb
repz
push
mov
movb
pop
add
sub
enter
mov
push
repz
or
push
shll
sbb
lcall
xchg
and
imul
leave
or
int3
fsubrs
jecxz
test
int3
in
inc
cltd
jns
rclb
push
xlat
push
test
adc
in
pop
xor
popf
inc
stc
pop
jo
ret
dec
push
sbb
pop
mov
sub
mov
mov
pop
push
bound
sbb
in
or
ljmp
mov
out
xor
cmp
rcrb
int
mov
fimuls
sbb
fwait
mov
inc
mov
insb
jg
mov
inc
test
mov
aad
je
mov
movsl
mov
out
and
sbb
das
jae
mov
mov
xchg
aad
xchg
inc
jp
adc
or
or
xchg
mov
push
xchg
ret
pop
inc
fisttpll
sbb
scas
scas
clc
lds
mov
mov
imul
in
xor
cmp
movsl
ror
mov
clc
cs
decl
push
sbb
and
cmc
inc
sbb
inc
loopne
mov
sbb
sub
mov
adc
fcmovnb
sbb
push
adc
sbb
xor
out
fbld
ja
mov
test
imul
mov
mov
push
push
leave
or
dec
inc
aad
in
arpl
mov
jmp
and
mov
pop
gs
mov
sar
mov
subl
jo
and
push
pop
mov
add
add
scas
pop
sbb
lods
push
push
xchg
mull
add
xor
inc
and
fnstcw
sbb
cltd
xor
int3
mov
dec
mov
roll
icebp
mov
inc
push
adc
xor
mov
adc
iret
out
out
xchg
and
roll
call
and
xchg
repz
in
enter
mov
adc
shll
loopne
stos
sub
mov
clc
fs
shlb
hlt
std
sub
pop
cmp
inc
enter
jmp
add
scas
jbe
cltd
inc
into
or
xor
xchg
data16
shlb
out
icebp
sub
lock
dec
or
fldenv
and
stos
xorl
cwtl
lods
pop
ljmp
addr16
lds
cmpl
int
jg
and
sub
inc
das
fiadds
cwtl
mov
mov
pop
and
lret
and
stc
sbbl
fwait
daa
cmp
dec
push
pop
xchg
push
inc
push
xor
adc
mov
call
adc
aad
loop
pop
pop
jmp
adc
inc
jno,pt
test
xchg
mov
jmp
dec
push
pop
cmp
and
pop
mov
pusha
jns
lahf
out
pop
in
scas
and
cmpsl
xchg
sahf
rol
pop
out
div
lea
hlt
insb
xor
inc
xor
test
mov
nop
xchg
jno
push
and
and
aas
icebp
popf
xor
mov
data16
jne
cmp
push
dec
jns
mov
shrb
je
xor
adc
jbe
cmc
idivl
ret
xchg
mov
fildl
fwait
push
inc
mov
inc
ret
dec
outsb
faddl
shl
mov
icebp
shll
inc
mov
dec
jge
cmp
in
leave
mov
adc
lock
outsb
jg
or
imulb
pop
mov
enter
jnp
mov
adc
fldenv
int
pop
clc
jle
lret
add
inc
dec
jp
sub
call
and
rcrb
push
pop
cli
lret
adc
loopne
add
xor
arpl
ja
jo
xchg
in
sbb
and
cmp
add
stos
xor
in
pop
cwtl
adc
andl
lea
lods
dec
sahf
test
pop
loope
out
es
mov
jmp
in
aaa
adcl
inc
inc
loope
mov
jp
push
jbe
add
out
push
lahf
iret
addr16
sub
jo
je
in
pop
cmpsl
jns
repnz
mov
mov
push
mov
dec
arpl
cld
divb
mov
or
bound
les
int
not
iret
fcmovbe
loope
jg
sbb
les
popf
in
pop
xchg
insb
pop
inc
fldenv
sahf
shll
push
popa
add
mov
xchg
add
mov
clc
scas
and
scas
int3
shr
gs
mov
push
enter
inc
std
call
cmp
std
xlat
xor
mov
aaa
ja
arpl
cmp
les
jne
add
push
in
imul
out
inc
sub
addr16
lea
push
pop
jl
sbb
sti
mov
inc
mov
lahf
cmp
push
ret
cmc
lahf
or
mov
lcall
test
inc
jmp
test
lock
inc
fidivrs
mov
loopne
push
and
inc
shr
mov
and
lahf
aam
dec
or
lcall
lock
jp
jne
out
mov
mov
test
ja
push
ss
lock
mov
lods
push
mov
jecxz
negl
inc
sbb
mov
pusha
cmc
adc
jae
mov
mov
decb
data16
out
jle
mov
cmpsb
sub
in
pop
mov
jmp
mov
sub
std
pop
dec
jle
hlt
lods
dec
push
dec
jle
add
jl
mov
mul
cmp
nop
push
xchg
test
mov
ljmp
sub
sbb
push
mov
pinsrw
pop
test
dec
inc
data16
jo
pusha
and
inc
lock
dec
xor
sbb
andl
movsl
dec
cmp
nop
sub
sbb
lret
rorl
ficoms
aam
movsl
roll
lret
mov
adc
push
adc
mov
test
das
ret
and
mov
pop
mov
lret
test
jle
ss
insl
int3
scas
xor
mov
dec
fs
pop
frstor
imul
sbb
adc
scas
out
mov
pop
test
mov
sub
jns
ss
mov
sbb
cmp
leave
push
test
mov
or
insl
movsl
stos
mov
je
test
bound
icebp
int3
cli
loop
out
push
xor
jne
dec
dec
mov
jge
xchg
aas
sub
and
xchg
inc
scas
ds
int3
pop
add
xchg
iret
mov
rol
fdivr
adc
cmp
in
call
js
inc
or
out
mov
mov
movsl
adc
test
mov
xchg
adc
jne
adc
mov
xor
repnz
jp
cwtl
jns
ljmp
add
popa
daa
mov
and
mov
push
and
dec
xor
aaa
jo
xor
out
lret
js
enter
push
mov
ret
cmp
cltd
int
in
test
push
xor
cli
xor
out
shlb
lcall
sbb
xor
mov
test
insb
jl
or
mov
and
lea
ss
inc
push
xchg
testb
fsubs
push
cmp
sub
mov
sbb
repz
rcrl
in
imul
jb
mov
out
cmp
js
xchg
cltd
inc
js
xor
jbe
push
jecxz
or
sub
pop
das
cmp
mov
adc
rcll
call
in
inc
jmp
pushf
push
out
addl
jnp
adc
add
mov
pushf
push
push
in
aam
xchg
inc
xor
adc
mov
jb
jle
mov
in
sub
pop
or
lods
jp
jno
xor
outsb
cmp
jnp
sbb
pop
arpl
sbb
sbb
std
jo
lret
adc
iret
into
stos
fwait
clc
loopne
fistl
fwait
mov
push
xchg
vpslld
popa
mov
xchg
or
mov
mov
sub
cltd
popf
out
add
aam
fsubrl
add
mov
cmp
ja
andb
xchg
lahf
mov
adc
pop
nop
cmc
fisttpll
mov
imul
les
out
daa
push
push
or
adc
pop
mov
jmp
jle
shlb
add
adc
std
push
xor
out
add
jp
pop
xchg
or
sti
cmp
cmp
adc
imul
lods
xchg
inc
jo
shlb
fstp
xchg
lcall
popa
push
adc
xchg
cli
mov
xor
loop
fdivl
inc
fcoms
stos
scas
sbb
dec
cwtl
and
mov
arpl
mov
jno
jb
cmp
nop
in
jo
or
sbb
lea
pop
add
xchg
pop
sbb
jl
test
inc
loope
push
xchg
and
mov
aaa
pop
or
cltd
lcall
loope
call
or
push
sub
jns
ror
sbb
push
nop
iret
adc
cmp
mov
mov
add
test
mov
sub
and
loope
and
shll
jmp
cmp
adc
jae
lods
jb
add
das
imul
out
jb
ja
into
sarl
nop
mov
cmp
sub
mov
pop
outsl
jl
or
adc
std
xlat
cmp
int
jnp
fwait
bound
push
inc
mov
mov
jmp
mov
mov
addr16
dec
das
or
fistpl
into
jmp
aaa
add
aas
pop
mov
xchg
jg
lods
push
push
andb
popf
push
dec
lret
pop
pushf
mov
jae
xchg
mov
mov
pop
daa
push
push
add
mov
mov
sbb
cmp
pop
cmp
sub
fwait
test
cs
neg
fiaddl
mov
lods
push
xor
add
ja
aas
rcl
xchg
push
push
movsb
xchg
mov
mov
mov
pop
sub
std
aas
iret
movsl
sbbb
pop
sub
ret
loopne
push
pop
cmpsb
in
add
xchg
or
push
mov
leave
mov
es
in
int3
xchg
dec
xor
mov
jb
or
jmp
xor
xchg
popa
jb
out
jp
faddl
addb
mov
mov
stos
mov
pop
mov
xchg
aaa
sar
mov
mov
add
out
jmp
scas
mov
dec
dec
jns
dec
outsb
cwtl
loop
gs
or
aam
repnz
cmpsb
addr16
sbb
lea
adc
loope
push
in
fs
cmp
gs
or
loopne
cmp
lret
add
loop
outsb
xlat
fwait
aaa
mov
inc
jmp
pop
clc
ficomps
aas
out
fwait
mov
dec
fucomi
cmp
or
pop
pop
inc
mov
jge
daa
add
hlt
mov
xchg
gs
xor
out
popa
jmp
push
mov
xchg
in
jl
test
imul
mov
xor
enter
shrb
jno
clc
aas
mov
popa
outsl
js
ljmp
mov
mov
sbb
jmp
push
movb
clc
push
inc
adc
mov
negl
insl
mov
mov
xor
jl
inc
in
cmpsl
stc
loopne
and
ja
mov
sti
popf
aam
adc
je
pop
shll
sahf
mov
cmp
sub
mov
test
cmp
sbb
or
rcpps
das
int
addb
cmp
lods
mov
cmpsl
dec
cmpsb
rcr
stos
xchg
dec
push
stos
dec
or
test
outsl
mov
loope
test
call
push
lds
in
lcall
dec
push
dec
sub
shll
xor
jmp
into
mov
mov
imul
sub
mov
jae
testl
xchg
inc
adc
sub
push
jecxz
mov
shll
stc
in
pop
int3
xchg
clc
out
sub
loopne
leave
dec
cmpsb
adc
xor
cld
pop
fs
in
mov
leave
fwait
fs
js
sbb
andl
cltd
scas
mov
test
xor
push
ret
pop
sar
add
nop
jbe
cwtl
push
int3
bound
push
cmp
sbb
mov
subb
cmp
push
sahf
xchg
popf
out
js
into
xor
and
sub
insl
aam
fisubrs
sub
in
or
repz
ret
pop
xchg
and
push
testl
mov
xchg
cmpsb
insb
repnz
mov
inc
sbb
popf
imul
xor
pop
cmp
lock
push
push
cmpsl
cmp
fadds
out
lds
sahf
inc
sub
in
push
xor
push
mov
add
dec
lcall
mov
movsb
xor
push
enter
int
sbb
loop
ss
jno
sbb
cmp
pushf
orb
fstpt
ret
xchg
xchg
mov
mov
lcall
jecxz
call
mov
jge
sbb
jge
movsb
andl
xor
jbe
shlb
in
jne
mov
mov
pop
jo
pop
movsl
push
scas
les
push
pop
add
lret
jbe
and
sub
xor
mov
test
repnz
sarb
xchg
cwtl
pop
xor
jb
lea
xchg
cli
mov
push
and
adc
pop
mov
push
cmp
or
mov
xor
cmp
lahf
mov
mov
cmpsb
roll
and
cmp
loop
es
jle
popf
stos
push
xchg
dec
jae
jmp
mov
xor
cwtl
xchg
dec
xchg
loope
test
pop
lahf
dec
fwait
adc
fs
loop
xchg
sub
into
and
mov
int
mov
mov
shll
add
or
in
rorb
dec
and
add
inc
loopne
add
add
xor
pop
add
push
pop
push
dec
pop
dec
xchg
sub
xchg
dec
mov
imul
sub
mov
mov
xor
add
jmp
mov
mov
mov
mov
xor
add
xor
div
mov
jmp
outsb
lods
or
mov
cmpsb
or
push
add
addl
mov
sbb
shll
pop
jmp
xchg
or
sti
imul
aam
xor
cmp
pop
cltd
aam
jl
mov
or
movsb
pop
es
dec
or
pop
pushf
adc
cmpsl
inc
aam
inc
outsb
loope
sbb
hlt
test
jb
stos
jns
lretw
cmp
add
aaa
jmp
push
std
inc
std
repnz
fstl
pop
imul
xchg
cmp
mov
loope
testl
mov
or
out
out
push
add
xor
lret
sub
rol
cwtl
or
jecxz
out
pop
call
fcoms
cmc
add
fidivrs
ss
test
gs
pop
cmp
jge
inc
adc
into
fwait
call
mov
xchg
mov
sub
repz
aad
xchg
pop
jecxz
mov
loopne
div
psraw
fsub
cmp
in
inc
cs
ret
xor
loope
mov
add
pop
jl
xor
jbe
icebp
jl
xchg
stc
daa
cld
data16
inc
sti
lods
push
cmp
or
hlt
and
cmc
ret
xchg
push
imul
imul
lret
out
pop
and
sti
add
dec
dec
ficoms
fsts
outsl
xchg
push
xlat
cmpsl
insb
shl
jg
popa
inc
ljmp
sarb
inc
test
test
iret
cmpsl
adc
sarb
imul
jle
xchg
adc
rcl
jecxz
lods
test
add
mov
xor
pop
jnp
xchg
jmp
ljmp
pop
test
cmpsl
or
add
xor
mov
vpshuflw
sarl
add
adc
xchg
mov
int
out
into
sub
xor
mov
outsb
pop
dec
addl
dec
dec
sub
or
xchg
mov
mov
jno
fisubs
add
ds
cmp
push
xor
jne
ljmp
dec
fistl
fistl
int
imul
mov
test
or
daa
in
xchg
les
addr16
sub
andb
cmp
or
xlat
lahf
or
pop
loopne
xor
sbb
dec
jb
push
jmp
dec
out
jns
xchg
imul
ret
stc
xorl
movsb
je
or
jae
adc
adc
push
les
pop
cmp
adc
idivb
hlt
add
xlat
fists
mov
inc
push
fnstenv
testb
dec
addr16
pop
add
test
enter
pop
es
dec
mov
scas
or
nop
aad
and
icebp
in
cmp
mov
push
loop
inc
jecxz
push
stos
jo
mov
inc
mov
test
mov
cmpb
inc
sbb
fbstp
js
sub
and
cmpsb
add
add
in
sbbb
enter
mov
popa
lea
dec
mov
fidivrl
xchg
leave
mov
rolb
lock
and
mulb
cmp
ficomps
stc
sbb
or
popf
lcall
adc
fwait
sub
lock
ja
inc
xchg
xchg
or
popf
stc
pop
xchg
mov
push
sbb
arpl
adc
sti
arpl
call
outsb
xchg
cmpsb
imul
jo
add
jne
mov
andl
cmp
out
xchg
or
jge
call
shll
jp
and
sbb
and
pop
dec
out
call
ret
pop
add
fisubrs
push
mov
jecxz
fldt
inc
mov
xchg
sti
popa
sub
jno
movsb
mov
push
sbb
nop
js
jge
insb
mov
out
mov
mov
mov
add
sub
aas
out
pop
xor
pop
sbb
cmp
dec
repz
pop
ds
daa
mov
xchg
inc
sbb
inc
lcall
pop
sub
jo
pop
stos
mov
setp
das
dec
mov
pop
cs
xlat
test
cmp
sbb
adc
scas
stc
adc
loop
and
mov
mov
dec
pop
cmp
cmp
dec
scas
fstps
es
mov
stc
add
fildll
repz
lods
aam
xchg
and
mov
inc
mov
aam
and
cmp
add
pop
adc
cld
fadds
jge
inc
std
orl
push
pop
xlat
insl
into
cld
inc
push
cmpsl
xor
out
cmc
in
push
in
pop
xor
xor
jae
jl
lds
dec
in
sub
dec
std
test
adc
jnp
ljmp
in
xchg
and
mov
jecxz
ffreep
sbb
js
dec
mov
dec
cmpb
pushl
jmp
fisubrs
movsl
out
and
loope
js
lahf
mov
cmp
cmp
jne
xchg
dec
jae
nop
imul
jno
sbb
das
jle
inc
pop
add
in
insl
push
hlt
xchg
mov
push
sbb
stos
add
int3
enter
mov
lods
sbb
push
mov
movsl
mov
sti
sub
hlt
das
fisubl
shll
int3
sub
lret
xchg
jno
jbe
in
aam
cmc
add
test
fdivrl
outsb
sub
adc
push
imul
push
push
pop
and
push
mov
sub
xor
rorl
pop
and
jae
imul
clc
cld
rorb
fldl
mov
jge
jbe
shrb
mov
cmpl
movsb
dec
outsb
xchg
inc
pop
xor
mov
lahf
lret
xchg
repz
adc
dec
mov
stos
bound
xor
add
pop
or
or
or
adc
fwait
sbb
cmp
sbb
xchg
mov
xor
test
add
fmull
mov
mov
cld
inc
nop
fstpt
iret
xchg
mov
push
push
add
cltd
mov
sub
xor
xchg
fwait
mov
std
jb
add
out
gs
shrb
mov
aam
lock
js
sbb
pusha
ret
dec
dec
mov
subl
popa
pop
jbe
xor
insb
and
mov
mov
mov
inc
hlt
das
xor
cltd
inc
fcom
sbb
push
pop
es
mov
int
push
xchg
mov
iret
cmp
test
int3
inc
aaa
repz
adc
out
add
enter
jae
push
pop
mov
cs
sbb
lret
loopne
ljmp
stos
bnd
mov
mov
jae
ja
rol
push
repnz
outsl
mov
nop
adc
shl
cltd
xchg
or
or
pop
stos
adc
cmp
iret
add
sbbb
stos
or
fwait
inc
orl
inc
pop
inc
out
lods
sbb
gs
test
mov
imul
push
mov
mov
sbb
test
mov
mov
lea
insl
push
movsl
mov
pavgb
xor
push
popa
movsb
mov
jle
or
jl
outsl
je
cmp
std
inc
sub
shll
scas
aas
adc
pop
push
xlat
cmp
out
in
add
fdivl
inc
lret
or
push
mov
mov
outsl
pusha
xor
lods
pop
jecxz
xor
jo
pop
mov
ror
outsb
arpl
out
mov
or
sub
fstl
mov
repz
pop
stc
adc
icebp
push
cmp
jecxz
pop
xor
push
int3
mov
sbb
push
lock
push
sarl
fdivp
aad
dec
in
je
stc
ret
dec
sbb
push
sub
sbb
xchg
mov
or
mov
and
inc
ficoms
insl
sub
nop
fisttpll
dec
xor
iret
mov
mov
movsl
mov
hlt
push
push
repnz
pop
lock
add
sub
scas
in
sub
into
mov
sbbl
xlat
or
xchg
mov
xor
or
lahf
sbb
xchg
imul
jbe
pusha
and
xchg
repnz
iret
xchg
xchg
sti
and
popf
mov
push
push
sbb
sub
sub
outsl
sub
enter
push
or
xchg
lods
fsubrs
pop
addr16
push
in
mov
arpl
hlt
jg
xor
mov
push
lcall
fwait
div
xchg
int3
out
loope
loopne
pop
in
inc
popa
push
fmull
negb
scas
out
pushf
or
jecxz
xchg
xor
ret
or
lea
sbb
add
sbb
adc
enter
sbb
out
sub
cmpb
mov
daa
cli
or
mov
jge
dec
loopne,pt
scas
ljmp
outsb
divb
and
movsb
and
cmc
push
shrb
add
and
xchg
xor
fwait
jo
adc
sbb
mov
cmpsb
outsl
roll
push
pop
repz
in
int
ja
jg
push
test
mov
ja
test
add
sub
xorb
outsl
test
aam
or
and
push
dec
sti
sahf
add
sbb
cmp
lcall
sbb
xorl
or
add
dec
mov
std
out
cmp
in
imul
or
cmp
ret
or
scas
ss
nop
fs
imul
pop
or
cmp
jae
stos
or
pop
outsb
lock
pop
mov
xchg
add
cmpsl
push
mov
scas
or
xor
mov
fistpl
inc
push
nop
sti
cmp
mov
fiadds
dec
cli
clc
cmp
xchg
ds
inc
mov
mov
negb
adc
mov
and
mov
and
push
jmp
jns
shll
stos
ljmp
fildll
xchg
movl
sbb
es
shrl
lods
or
popf
jge
mov
aas
cli
push
or
hlt
notb
fs
bnd
leave
in
jo
xor
icebp
sub
icebp
cmp
outsl
xor
mov
xor
jne
jnp
movl
fcomps
cltd
sbb
jl
mov
adcl
pop
or
pop
popa
ret
xchg
fstp
sub
cmc
dec
sub
mov
sbb
icebp
jg
test
or
mov
jp
neg
pop
lcall
scas
enter
mov
cmp
je
insb
add
cli
or
das
inc
xor
adc
adc
ret
stos
push
mov
cld
inc
push
pop
insb
jmp
aas
adc
addr16
jo
adc
push
test
xor
pop
mov
fldenv
mov
sbb
imul
idivb
cs
xchg
mov
bound
aam
cmp
cmpsl
subb
pop
lods
add
int3
dec
or
pop
data16
jle
mov
xchg
mov
add
sbb
mov
imul
mov
lcall
or
sub
xor
adc
test
dec
add
addr16
pop
mov
mov
mov
je
jecxz
imul
aam
stos
in
scas
pop
and
xchg
cld
dec
sahf
mov
xor
pop
cmpb
add
fmull
jbe
pop
outsb
xorb
add
sti
repnz
aaa
imul
xchg
cmp
mov
shlb
scas
xor
stc
or
cli
repnz
repz
popl
aam
sbb
jl
shl
sahf
daa
leave
sub
adc
or
ljmp
ljmp
imul
mov
or
aas
cmp
cltd
test
sub
out
mov
push
shld
out
mov
fdivl
lret
add
inc
fdivs
push
pop
and
inc
push
dec
rcrl
sti
cli
in
flds
jl
pop
jp
or
cmp
icebp
insb
add
repnz
and
push
dec
pop
jl
out
mov
push
aas
out
pop
das
in
xor
aam
dec
mov
jns
adc
mov
clc
in
movsl
fsubrs
mov
shll
sub
pop
pop
in
or
inc
das
pop
iret
popl
or
sub
out
fsub
mov
mov
adc
pop
push
cmpsb
dec
pop
mov
or
fldcw
cwtl
sbb
jmp
xchg
push
sbb
ret
push
repz
cmpb
fnstenv
filds
inc
pop
imul
mov
ja
testb
push
cltd
adc
in
mov
scas
adc
xchg
add
rclb
bound
sub
adc
das
push
sbb
mov
dec
in
loop
push
push
xchg
sbb
lcall
sbb
push
aad
outsl
sbb
je
cmp
filds
pop
in
sub
addr16
mov
jns
mov
je
xor
mov
and
add
mov
pop
imul
add
cmp
xor
pop
or
adc
push
aad
sub
mov
dec
adc
jnp
cmp
or
stc
xchg
pop
call
mov
pusha
call
push
push
pop
add
call
shlb
jge
jmp
xor
mov
loop
cmp
add
push
sbbl
mov
xchg
out
andb
cmp
fwait
decb
add
sub
pushl
outsl
xor
lea
repz
out
inc
jp
jno
xchg
xor
mov
mov
je
push
popf
mov
pop
push
jp
data16
sti
or
mov
pop
push
mov
jle
iret
leave
aas
aad
daa
jmp
int3
dec
jo
xchg
sti
dec
xchg
jns
adcl
cld
stos
or
xor
sub
std
das
and
pop
stc
les
jecxz
pop
stos
addr16
jno
repz
and
push
xor
iret
xchg
jle
sub
int3
jle
das
arpl
mov
iret
pop
dec
int3
or
les
pusha
push
xor
add
or
mov
inc
lea
push
sub
repnz
xor
mov
adc
ficomps
loope
inc
push
pop
add
jge
stos
mov
xchg
fdivl
scas
sbb
push
inc
gs
imul
stos
pop
lock
lock
insl
xchg
mov
jmp
dec
and
out
mull
jecxz
sub
sub
ret
jnp
out
das
xorb
cltd
inc
adc
push
xchg
test
fidivs
push
mov
xlat
mov
inc
cld
jae
daa
or
adcb
mov
lahf
adc
push
bound
mov
push
fdiv
xor
sub
or
movsl
xchg
sub
jp
sahf
mov
out
jne
inc
addr16
and
push
je
jnp
inc
pop
inc
push
add
div
xlat
dec
rcll
roll
mov
imul
test
ljmp
and
enter
jl
pop
adc
lret
data16
cmp
sub
lahf
xchg
or
and
push
mov
pop
inc
int3
lcall
jecxz
and
cld
xchg
sahf
test
xor
jecxz
dec
inc
repz
mov
or
mov
and
sbb
mov
or
mov
pop
mov
mov
jb
loop
dec
pop
pushf
bound
in
lcall
sub
dec
lods
clc
add
lods
cmp
insb
jmp
mov
js
stos
addr16
subb
lods
imul
and
xor
xchg
pop
xor
adc
sbb
sub
movsl
push
inc
push
pop
sbb
dec
aas
andb
in
cwtl
sbb
or
mov
rcrl
jp
pop
mov
je
cwtl
dec
int
scas
roll
shrb
scas
arpl
xchg
mov
push
repnz
add
sbb
fdivl
add
aas
out
icebp
sbb
shr
or
ja
fwait
mov
out
rcll
lock
out
cwtl
cld
xchg
adc
push
sahf
dec
pop
mov
orl
adc
orb
int3
aad
inc
push
push
jp
icebp
mov
xchg
sub
push
clc
dec
xor
add
mov
lea
add
xchg
je
popa
pop
gs
rcr
jnp
inc
fldcw
add
sbb
mov
sti
lds
push
lret
movl
push
jmp
stc
mov
ret
xchg
popf
mov
fwait
push
in
jge
popf
arpl
sbb
pop
push
pop
inc
cmp
sbbb
adc
rcrb
mov
mov
int
lahf
add
in
ror
pop
test
test
fidivs
setge
aam
mov
aad
insb
ja
lea
xor
cltd
pop
mov
ss
and
fistl
pop
into
or
jae
sbb
mov
pop
call
in
push
lret
dec
iret
scas
cltd
sti
andb
sbb
xor
pop
jb
mov
outsl
xor
dec
sti
adc
xchg
and
cmp
inc
xchg
mov
outsb
icebp
in
ficoms
jg
std
popa
adc
repz
ja
jecxz
shl
mov
into
jp
sbb
out
into
jns
cmp
sbb
nop
cmp
push
fs
dec
int3
xor
loope
add
dec
cmpsl
into
add
jg
loop
jge
jge
pop
mov
addl
sar
pop
sub
xchg
ror
decb
gs
pusha
pop
push
scas
mov
jecxz
xlat
rcrl
push
jp
rcrl
push
xor
aaa
sub
cmp
fwait
add
stos
mov
das
ret
push
in
push
mov
push
and
dec
test
dec
shll
cmp
outsl
ret
fcmovu
inc
neg
rcrl
mov
insb
pop
pop
shll
jns
add
inc
pushf
jo
sbb
pop
dec
test
aaa
mov
movsl
int3
lret
pop
cli
shll
cmp
pop
mov
movsl
mov
pop
xchg
aad
mov
imul
in
ret
cmp
lods
cmpps
aad
jecxz
add
repz
dec
gs
dec
test
fstpt
sbb
dec
jae
lods
imul
adcl
int
pop
sbb
mov
xor
frstor
inc
dec
push
xlat
clc
and
adc
mov
sbb
in
jae
lock
mov
ret
push
mov
clc
popf
mov
pop
sub
or
popf
inc
jle
mov
ret
faddp
enter
enter
enter
mov
and
dec
jmp
jae
jge
add
lret
stc
push
loope
inc
cli
stc
jae
arpl
call
leave
push
cmp
pop
sbb
cmp
out
mov
xchg
adc
push
mov
xor
dec
sub
aam
rclb
mov
jo
fwait
jns
xchg
jecxz
sbb
mov
add
lods
and
in
add
push
push
bound
mov
test
jg
push
ret
xchg
cmpsl
int
loop
in
xchg
fstpt
push
mov
mov
cmp
xchg
xorl
aas
mov
out
ret
add
mov
cmp
stos
in
popf
outsl
es
lods
pop
dec
popa
lahf
xor
subl
sbb
sub
lret
and
and
outsb
popa
in
fidivrs
icebp
and
test
sarl
jmp
es
and
es
sbbb
daa
jne
rcrb
cwtl
jge
push
mov
mov
cmc
imul
cmp
ds
sub
cld
mov
stc
push
and
push
xchg
sbb
add
dec
push
stc
or
ss
mov
mov
mov
fwait
lahf
xchg
addb
ja
pop
jno
out
insb
xor
out
mov
shl
sti
xchg
jnp
jo
mov
mov
outsl
shl
push
sbb
xchg
cmp
mov
fcmovne
sbb
lret
add
lods
rolb
xchg
cmp
loop
xchg
mov
sub
and
out
cwtl
popa
or
sub
pop
fimuls
or
cmp
outsb
dec
and
pop
sti
xor
stos
stos
inc
jmp
cli
dec
in
bound
xchg
arpl
and
shr
in
aam
sarl
pushf
lahf
push
inc
dec
mov
inc
stos
inc
add
outsl
int3
push
jno
repz
sub
dec
mov
jnp
adc
in
jmp
xor
mov
mov
jne
xchg
mov
in
lds
push
mov
js
cmp
jnp
dec
and
mov
stc
jno
cli
ljmp
adc
mov
xlat
enter
pop
sahf
and
mov
jmp
push
xchg
lret
rclb
push
cmp
movl
xorb
mov
pop
sbb
jne
jo
lret
insl
sbb
jno
addr16
sub
dec
and
es
arpl
arpl
dec
pop
in
clc
arpl
popa
in
sub
jecxz
xchg
loope
es
imul
add
stc
insl
out
lods
ret
rcl
mov
sbb
xor
fwait
orl
sub
adcl
mov
xchg
sbb
mov
adc
jg
cltd
jo
xlat
iret
xorl
mov
cmp
jns
jg
and
mov
dec
inc
testb
pop
ss
mov
and
cmpsl
movsb
mov
inc
hlt
sbb
jbe
pop
test
pusha
fadds
in
mov
cmpsb
nop
dec
jo
add
cmp
add
rorb
cli
sbb
ja
xchg
inc
cli
lods
mov
pop
cmp
mov
jmp
mov
and
test
adc
sti
lahf
into
or
sub
js
jno
loope
dec
stos
add
adc
lret
bound
pusha
scas
test
clc
in
sbb
mov
in
pop
jno
sub
jbe
ja
lock
mov
pop
mov
pop
push
xchg
lock
aad
jo
fiaddl
ss
out
sarl
or
sub
sub
scas
out
mull
cwtl
fbstp
jae
std
leave
push
xor
aam
ret
sbb
mov
sbb
les
pop
pop
cmc
mov
rcll
jle
scas
dec
sbb
xchg
or
sub
pop
xchg
adc
aaa
jo
or
pop
xchg
lds
addr16
inc
imul
xchg
lcall
dec
xor
push
dec
arpl
fdivl
xor
and
jb
les
xchg
sti
int3
push
fldl2t
and
sub
les
dec
sbb
cmc
xchg
imulb
xchg
jno
enter
inc
insb
mov
push
stos
inc
loop
outsb
inc
mov
mov
inc
mov
hlt
pop
sub
mov
mov
push
push
loopne
dec
pushf
lret
cmpsb
jecxz
dec
fsubr
shlb
adc
mov
and
std
push
xor
add
jge
dec
lret
lcall
or
adc
js
and
outsb
bound
fsubrs
out
aad
cmp
jp
add
mov
jmp
mov
inc
adc
out
mov
xor
loop
or
je
mov
in
dec
and
mov
loope
mov
cld
pop
insl
xchg
test
jns
cmc
xor
mov
sub
jbe
xchg
sbb
or
mov
jo
or
xor
cmp
fiadds
add
add
fisttpll
inc
sub
pop
lock
mov
movsb
dec
mov
repz
sbb
adc
jne
sbb
push
push
mov
int
adc
add
add
and
clc
jl
add
arpl
rcrl
mov
daa
add
mov
cmpsb
es
xchg
mov
and
icebp
loop
cs
pop
enter
fmul
jl
push
outsb
inc
push
xchg
dec
movsb
mov
xlat
sbb
push
popf
mov
scas
lds
jp
pushf
and
and
daa
push
sbb
dec
sbb
outsl
in
mov
rcrb
stos
fcomi
dec
pop
jo
mov
pop
cmpsb
inc
lea
inc
mov
push
jecxz
daa
movsb
ret
dec
and
mov
fdivrl
ret
aas
mov
mov
lcall
bound
xchg
enter
jmp
inc
out
lcall
xchg
enter
aaa
sub
pcmpeqb
outsl
enter
or
xchg
ficoms
imul
pusha
ret
sbb
int
test
dec
and
jg
ret
mov
add
insb
jne
fprem
sub
pop
ljmp
rol
and
cltd
and
push
and
fldl
jne
dec
loop
jne
fidivl
popa
push
dec
adc
popw
popa
push
dec
loope
movsb
cmp
or
cs
dec
mov
fiadds
lock
push
xchg
push
int
negb
xchg
lcall
cmp
xlat
dec
cli
aam
sbb
std
jo
fs
repz
out
push
fsubs
aad
js
clc
sbb
cwtl
push
xchg
jae
lret
out
call
cld
insb
dec
and
jle
cmp
xchg
mov
inc
or
jae
jp
mov
sbb
xchg
test
sti
adcl
stos
push
stc
fwait
xchg
cld
cld
adc
pop
subl
mov
cs
ret
shll
fs
int3
and
or
fmull
roll
bound
push
sbb
cmp
push
dec
cld
pop
push
fisubs
popa
mov
pop
lcall
and
sub
adc
xor
ljmp
shr
insl
cmp
bound
loop
aad
mov
pop
lods
or
dec
mov
ret
dec
xor
je
mov
sbb
loopne
out
fidivs
fld
cmp
jb
repnz
dec
push
leave
enter
cmp
sub
ret
mov
cmp
add
mov
lods
imul
sbb
das
dec
pop
mov
lea
sbb
jmp
lods
scas
push
push
dec
divb
insl
out
je
push
xor
sahf
jbe
add
test
imul
in
push
fs
jb
shrl
pop
bound
pop
loop
push
lcall
stc
lods
mov
mov
xor
dec
shll
lea
cmp
jne
lds
ret
cmpl
pop
mov
pusha
adc
scas
and
cmc
cmp
in
sar
imul
hlt
sbb
pop
arpl
dec
int
dec
orb
lret
jno
xchg
xorl
aam
inc
in
push
add
ret
xchg
mov
jae
sbb
gs
mov
pop
mov
scas
jo
push
pushf
cmp
or
fdivs
outsb
enter
mov
test
call
in
or
fsubrs
pop
ds
push
push
mov
sti
jle
bound
and
or
push
mov
lods
je
pop
cltd
mov
fisubrs
aas
push
repnz
lret
jecxz
xor
push
imul
cmpsb
pop
loope
ja
out
pop
shr
pop
or
inc
pop
and
out
subl
pop
ficompl
pop
fadds
jns
test
decb
sub
scas
jne
ret
dec
pushf
jp
andl
mov
stc
xor
cmp
aam
gs
pop
leave
sub
inc
xchg
xchg
stc
out
or
aas
dec
fnstenv
ss
mov
ret
sub
pop
lock
mov
into
cli
out
outsl
aam
nop
mov
bound
call
pop
sti
out
std
inc
outsb
movsb
in
pop
and
out
sbb
mov
xchg
mov
pop
mov
sbb
mov
jae
jbe
decb
mov
mov
movsb
adc
adc
cmpl
or
adc
loop
inc
mov
add
bound
out
cwtl
adc
pop
jo
out
in
js
dec
sbb
sahf
xlat
in
hlt
leave
push
pop
repnz
test
xchg
jg
int
push
rcll
rol
and
mov
jae
aaa
pop
mov
mov
insl
mov
pop
cmp
test
or
and
js
xor
cwtl
xchg
repz
push
sbb
jle
adc
pop
in
push
out
ja
int
xchg
xchg
sbb
das
test
addr16
jbe
fmull
jnp
mov
gs
fs
adc
imul
mov
ja
loop
cli
push
jmp
out
jb
or
mov
sub
pop
push
xor
cmpsb
shll
sbb
sbb
mov
dec
insl
loopne
insl
pop
cmpsb
out
inc
std
imul
mov
stos
dec
or
adcb
jl
xchg
mov
adc
cmp
mov
adc
sbb
clc
sbb
fbld
shl
rorl
adc
xchg
lock
xchg
cmp
ds
pop
repz
arpl
push
repnz
or
sub
jge
mov
or
dec
dec
dec
add
sbb
cmpsb
mov
mulb
jmp
xchg
sub
mov
mov
xchg
cmpxchg
pop
loop
mov
lret
sub
jns
dec
push
mov
in
sub
fiadds
mov
testb
xchg
jge
in
mov
jne
and
movsb
dec
les
xchg
hlt
faddl
lock
xor
pop
inc
sub
dec
push
mov
vmaxps
or
imul
lods
sub
sub
pop
adc
add
dec
ret
inc
int3
arpl
or
js
call
dec
or
mov
push
mov
movsl
push
test
ds
mov
xchg
lret
test
jne
add
inc
fstl
xchg
push
pop
fwait
inc
pop
push
xchg
ss
pop
adc
jb
or
xchg
sub
jmp
hlt
inc
js
mov
sbb
out
repnz
mov
adc
lret
mov
stos
jecxz
xlat
mov
enter
mov
cmp
adc
pop
jns
in
sahf
lcall
cmp
dec
jb
stos
repz
lods
les
sbb
jge
mov
nop
mov
incl
ret
jnp
push
loop
push
in
xchg
lcall
cmp
lock
in
ds
cmp
add
les
xor
and
mov
mov
imul
test
repz
add
loopne
add
mov
mov
xor
lea
mov
mov
mov
xor
add
imul
mov
mov
xor
lea
cmp
jne
mov
xor
add
mov
mov
add
xchg
xor
push
mov
pop
mov
add
lea
add
add
push
inc
pop
dec
xchg
dec
xchg
dec
xchg
dec
push
mov
pop
dec
call
cmp
je
xchg
push
pop
dec
push
pop
inc
xchg
inc
sub
xchg
dec
dec
mov
imul
add
xchg
push
xor
mov
dec
inc
add
dec
xor
add
pop
mov
pop
pop
pop
leave
ret
push
mov
push
and
movl
andl
mov
inc
mov
cmpl
jbe
jmp
push
call
cmpl
jb
mov
xorl
mov
mov
sbbl
xor
xorl
add
mov
and
mov
and
xor
xorl
push
xor
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
pop
leave
ret
push
mov
sub
movzbl
or
mov
mov
subl
xor
mov
add
andl
mov
inc
mov
cmpl
jl
jmp
pushl
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
movzwl
mov
movb
andl
jmp
xor
add
inc
mov
cmpl
jae
cmpl
jge
jmp
push
push
pushl
call
jmp
lea
incl
mov
mov
andl
mov
inc
mov
cmpl
jbe
jmp
pushl
call
cmpl
jb
mov
xor
movl
add
andl
mov
sbbl
movl
push
movl
movl
cmpl
je
cmpl
jl
jmp
push
push
push
call
mov
dec
mov
jmp
mov
or
push
mov
xor
xor
or
xor
mov
sbb
mov
mov
push
add
jmp
incl
mov
mov
inc
movl
cmp
jb
not
mov
xor
movl
add
jmp
movzwl
or
mov
adc
mov
adcl
xor
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jl
jmp
call
cmpl
jne
xor
xor
inc
mov
jmp
mov
add
addl
movzwl
sbbl
mov
movzwl
and
mov
sbbl
movzwl
xor
add
mov
movl
mov
mov
inc
not
mov
movl
cmp
jne
and
mov
sub
mov
xorl
xor
and
add
mov
mov
sbbl
xor
add
adc
mov
addl
movl
movl
movl
movl
mov
movl
cmpl
je
cmpl
jb
jmp
push
push
call
mov
dec
mov
jmp
mov
mov
xor
add
movzwl
mov
mov
je
mov
subl
mov
xor
xor
notl
sub
notl
sub
xor
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
ja
jmp
push
call
cmpl
jne
mov
inc
mov
jmp
mov
subl
mov
mov
movl
add
andl
imul
mov
xor
mov
mov
add
mov
add
incl
or
mov
mov
mov
sbbl
add
xor
mov
dec
mov
add
mov
add
and
and
mov
xor
mov
subl
mov
lea
mov
andl
mov
inc
mov
cmpl
jge
jmp
push
push
pushl
call
cmpl
jb
mov
or
mov
sub
movzwl
and
add
mov
andl
mov
xor
adcl
add
movl
jne
movl
jmp
xorl
mov
subl
sub
xor
movl
cmpl
je
cmpl
jbe
jmp
push
call
xor
or
dec
mov
jmp
mov
subl
mov
mov
xor
decl
xor
adcl
sub
sub
xor
mov
mov
mov
jmp
mov
movl
cmpl
je
cmpl
jl
jmp
push
push
push
push
call
mov
dec
mov
jmp
mov
xor
xor
sub
sub
xor
mov
mov
mov
add
addl
imul
mov
andl
mov
inc
mov
cmpl
jb
jmp
pushl
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
adc
mov
addl
add
or
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jg
jmp
push
call
jmp
mov
mov
andl
add
movl
xor
mov
subl
mov
mov
xorl
add
xorl
and
or
mov
mov
sbb
mov
xorl
mov
lea
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jle
jmp
pushl
push
call
cmpl
jne
mov
inc
mov
jmp
mov
mov
sub
add
mov
mov
xor
add
jne
mov
mov
mov
cmp
je
mov
mov
mov
mov
xor
cmp
jne
mov
mov
xor
movsbl
mov
xor
add
cmp
mov
mov
mov
je
xor
add
mov
je
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
add
imul
mov
mov
mov
add
or
mov
mov
mov
add
xor
mov
mov
mov
add
and
mov
mov
mov
lea
mov
mov
mov
sub
add
mov
mov
xor
add
jne
jmp
mov
jmp
rcr
sbb
mov
nop
cs
or
outsb
mov
pop
pop
addl
cld
or
push
add
xchg
sbb
test
xchg
cmp
cld
aaa
sbb
scas
mov
jle
add
mov
push
nop
and
movsl
jne
add
sub
shlb
adc
mov
loope
int
iret
leave
adc
pop
pusha
lret
and
cltd
and
and
pop
inc
inc
add
and
add
adc
mov
loop
rorl
lock
inc
mov
test
mov
int
mov
adc
mov
iret
jmp
aad
inc
inc
sub
sbb
xor
push
mov
sbb
mov
out
outsb
lahf
cmpsb
cmc
xlat
pop
jae
inc
sub
pop
gs
aas
js
lar
fcom
xor
and
popa
sub
or
xchg
cmc
jle,pt
cmpsl
pop
cs
push
adc
xchg
lods
ret
leave
xor
mov
test
lcall
repz
dec
sbb
mov
add
mov
or
mov
xor
aad
in
jae
pop
cmp
mov
pop
notl
dec
jae
mov
or
add
mov
sbb
aaa
xchg
or
stc
aas
sbb
add
cld
or
ja
ret
cmpb
jne
xchg
je,pt
out
and
repnz
xlat
pop
push
inc
mov
std
adc
aam
dec
xor
jns
sub
dec
xor
cli
jo
cmp
dec
mov
and
jo
jns
mov
in
outsl
push
clc
jae
scas
inc
dec
mov
xchg
mov
cmp
ljmp
and
dec
cltd
or
push
sbb
mov
out
testl
leave
sahf
les
test
test
mov
xchg
pop
pushf
es
jl
mov
adc
mov
cmc
xor
jmp
cli
or
jbe
test
inc
jo
and
add
mov
gs
xlat
sub
call
repz
bound
and
test
and
sbb
in
mov
mov
jnp
cld
xor
hlt
stc
inc
inc
adc
mov
out
mov
push
lret
outsl
adcb
xor
xchg
cmp
shr
fsubrl
movsl
inc
aad
dec
adc
lret
xchg
das
jmp
popl
dec
add
or
push
sub
xor
loopne
push
gs
popf
lret
decl
enter
in
mov
lahf
dec
pop
lods
divl
hlt
repnz
mov
ret
pop
loope
stc
enter
loopne,pt
imul
xchg
into
sbb
ja,pn
popa
push
ss
cltd
aaa
lods
popa
fwait
sub
cmpl
jecxz
mov
push
subb
das
ret
loopne
stc
mov
js
jne
jmp
push
loopne
mov
ret
add
pusha
test
adc
push
rcrl
or
stos
loop
adc
push
imul
outsb
sub
pop
cmp
into
stos
or
pop
mov
loop
mov
xchg
insl
mov
das
inc
lea
into
leave
js
and
and
cmpsl
mov
push
sbb
xchg
ret
hlt
lock
fists
push
mov
dec
fbld
cmc
cmpl
repnz
pmulhuw
add
sub
inc
aad
or
mov
mov
out
out
fisubs
push
clc
xor
push
mov
inc
rcrl
jbe
sbb
xor
cwtl
mov
aas
adc
popa
insb
dec
mov
pop
pop
or
push
int
adc
sarb
jnp
jb
arpl
int3
aas
fs
xor
aam
cmp
stos
notl
and
adc
in
dec
pop
mov
movsb
push
pop
push
push
adc
call
jno
lock
mov
mov
and
mov
jbe
ljmp
sub
adc
movsl
jnp
pop
icebp
and
sbb
lret
push
loope
stc
data16
mov
mov
les
xchg
rcll
pop
test
cmpb
movsl
pop
pop
imul
pop
push
jg
xchg
in
mov
int3
test
mov
adc
call
repnz
xor
insb
inc
add
xor
push
mov
dec
decl
xor
jne
mov
jp
cltd
xchg
addb
jns
lret
mov
lods
xlat
add
fs
add
inc
ficomps
fs
mov
mov
insl
cld
inc
jmp
fs
imul
fisubl
pop
arpl
loopne
icebp
pop
notl
loope
cmp
push
push
push
mov
aaa
xor
sub
mov
je
dec
lods
fisubs
sub
jmp
loopne
fcomip
addr16
cwtl
add
and
add
nop
cwtl
mov
dec
dec
pop
decl
sbb
cmpb
gs
jp
pop
adc
fisttpl
enter
shlb
cmp
stc
and
pop
jg
ret
pop
xor
sbb
cmp
aas
mov
push
push
inc
cmp
or
sub
es
insl
dec
cmpsl
mov
mov
sti
jno
push
adc
mov
repnz
dec
popf
mov
and
in
xor
push
int
xchg
faddl
aas
inc
adc
xor
popf
sarl
ds
insl
inc
popa
push
cltd
inc
push
aad
xchg
mov
shrb
aas
sub
xchg
icebp
mov
aam
dec
outsl
fcmovb
xor
rolb
addr16
push
xchg
daa
cwtl
dec
cmpsb
dec
jns,pt
call
ret
adcl
xor
dec
mov
push
mov
mov
or
pop
pop
xor
mov
jl
popf
repnz
movsb
pop
xor
jle
pusha
fidivrl
iret
outsl
xlat
cmp
insb
jp
mov
cmp
xor
lret
inc
jecxz
stos
lahf
push
addr16
mov
les
mov
call
sub
clc
inc
cmp
sbb
and
rorl
leave
fistpll
mov
mov
stos
arpl
arpl
aaa
pop
mov
xor
push
outsl
push
jno
pop
mov
out
lock
xchg
jle
ja
faddl
idivl
mov
sarl
sub
ljmp
insb
or
rorb
mov
inc
inc
jo
stos
movsl
fldenv
and
inc
pop
push
sbb
and
icebp
mov
aas
sbbb
cmp
ret
insl
push
inc
pop
mov
jae
mul
xchg
push
dec
xlat
pop
arpl
push
sar
or
xchg
popf
xor
popa
add
pusha
dec
fiaddl
cmpl
clc
fistl
mov
nop
mov
mov
push
push
repnz
outsb
xchg
out
ljmp
mov
or
sbb
sub
cmpsb
push
int3
pop
dec
adc
dec
dec
mov
xor
dec
jg
inc
movsb
cltd
fs
jl
fadds
in
idivl
add
lcall
icebp
lret
cmp
sti
and
jb
xlat
pusha
les
mov
aaa
add
lds
mov
daa
mov
pop
sub
arpl
push
adc
ljmp
aaa
jg
mov
scas
jmp
inc
stos
cmp
test
or
push
stos
sbb
cs
sub
sbb
or
icebp
push
sub
adc
jecxz
out
pop
push
sub
popa
nop
test
rcrb
and
cmp
mov
and
ljmp
mov
xor
xor
add
jmp
insb
inc
in
pop
cmp
xchg
inc
pop
les
outsb
and
or
pop
loopne
dec
push
daa
ss
adc
sahf
mov
cmp
popf
gs
mov
cmp
mov
in
outsl
push
decb
xchg
lods
pusha
pop
sub
repnz
cmp
leave
lock
scas
mull
mov
jg
pop
rorl
icebp
jnp
js
mov
jge
xchg
dec
and
mov
divb
xchg
outsb
std
push
push
dec
pop
pop
or
lret
nop
or
mov
loop
push
ret
test
test
shrl
icebp
lds
lret
imul
add
adc
jae
cli
lea
ficompl
dec
jo
shrb
cmpsl
inc
insl
mov
or
adc
mov
mov
mov
out
inc
ds
fs
pop
lret
imul
push
adc
jb
shlb
gs
scas
push
cmp
pop
sbb
fsts
cmpsl
xchg
xorl
fs
push
xor
inc
callw
test
cli
add
sub
and
lretw
mov
mov
jno
movsb
popf
and
jae
sbb
cs
adc
xorl
ss
repz
sub
clc
mov
push
adc
or
xchg
mov
sub
mov
push
push
cmp
pop
inc
addb
mov
add
adc
pop
shl
inc
outsb
sbb
xchg
or
test
sti
sbb
jge
lea
call
or
das
jle
add
add
adc
icebp
cmp
dec
rcrl
dec
hlt
das
mov
lods
sbb
inc
jmp
fwait
clc
scas
aad
popf
mov
dec
cli
sarl
sbb
mov
and
adc
pop
sbb
aad
inc
push
jno
xchg
js
mov
inc
leave
aad
jnp
in
pop
outsl
aaa
cwtl
loope
cs
push
jo
dec
cltd
cmp
cmp
pushf
mov
cld
shll
inc
shrb
data16
imul
shlb
iret
adc
sub
in
popa
scas
add
and
xchg
xchg
lea
xchg
xchg
insl
cmp
lods
add
sub
or
pushf
dec
push
and
and
popf
ret
cmp
insb
dec
and
mov
and
xchg
sub
aas
push
push
int
stos
loope
subl
out
fs
mov
call
mov
lods
xor
in
push
shlb
clc
and
dec
insb
bound
clc
xor
int
lret
lea
and
lret
test
bnd
or
adc
lret
dec
sbb
sub
adc
xchg
adc
pop
or
push
out
popf
or
repnz
arpl
dec
dec
push
clc
jecxz
imul
xchg
cmc
jno
or
lret
mov
jecxz
or
insl
ret
ss
add
dec
xchg
and
mov
jnp
popf
fistpll
push
lret
or
and
test
cmc
test
notb
setns
pusha
mov
jb
pop
lret
mov
jo
insl
ja
sbb
aas
mov
aam
cmpsb
mov
int
imul
rcl
jnp
loop
mov
pop
fld
inc
psubsw
mov
lret
jb
test
stos
stos
mov
xchg
in
lret
ds
sub
stos
fildll
scas
js
in
cmp
jg
push
jns
pop
stc
or
mov
mov
add
loopne
outsl
jo
jmp
mov
jnp
popf
sahf
sbb
add
clc
xchg
lds
outsl
mov
jle
stos
orl
xor
sbb
adc
and
xor
inc
push
sub
inc
hlt
mov
dec
jmp
nop
push
xor
gs
or
insl
xchg
stos
test
inc
mov
add
fdivs
push
addl
lea
jl
pop
aad
or
sti
jno
hlt
mov
sbb
push
pop
xor
pop
cld
rorb
in
fistps
fwait
mov
sbb
push
lds
sbbb
pop
push
jmp
xchg
sub
jae
clc
push
push
mov
fidivl
or
adc
ljmp
lods
sbb
push
pop
cltd
bound
push
frstor
out
repz
xchg
shrl
in
inc
repnz
xchg
push
and
fs
lcall
xor
xor
addb
pop
cli
sahf
mov
aas
jmp
sbb
fcompl
jle
inc
jg
subb
cmp
les
js
push
hlt
push
lds
pop
fs
aam
push
xor
test
cld
loop
cmp
fildll
mov
and
push
ret
out
sahf
test
lock
add
fistl
arpl
nop
lock
push
xchg
shrb
das
notl
xor
movsl
jecxz
adc
imul
dec
ljmp
rolb
scas
inc
into
ret
jp
mov
loop
shr
mov
jne
repnz
push
cmpsl
rcrb
je
xor
xor
add
cmp
sbb
stos
mov
mov
or
inc
imul
dec
add
ja
nop
mov
adc
out
add
loop
arpl
insl
in
pop
outsl
and
adc
push
push
and
cmpsl
fsts
nop
imul
push
push
ja
xchg
add
xchg
dec
xchg
fwait
push
into
dec
addb
inc
xor
fwait
xor
daa
add
mov
mov
outsb
mov
fdiv
lea
mov
fdivrl
sub
jmp
jmp
sbb
push
push
test
test
andb
insl
push
or
roll
mov
mov
int3
or
push
rcll
data16
jns
mov
push
add
add
mov
push
shrb
clc
cmp
lods
ljmp
cmpsl
stos
pushf
shll
inc
jecxz
fcoml
dec
aaa
jnp
inc
sarl
inc
rcl
scas
pop
jb
outsb
lret
icebp
mov
jmp
or
mov
push
push
movsl
popa
std
out
pop
lea
gs
fsubr
in
jns
sti
insl
fcmovne
push
inc
adc
and
shl
jp
sbb
jl
test
jmp
push
sub
aad
insl
in
test
leave
inc
mov
cmp
inc
xchg
insl
fsts
dec
sbb
into
popa
test
jbe
mov
mov
jecxz
pop
sub
imul
xchg
mov
inc
stos
mov
push
outsl
mov
push
gs
lods
cmp
push
adc
push
aas
insb
mov
int3
cmp
mov
stos
into
jl
or
or
shl
rorb
pop
shl
ljmp
cmp
jecxz
adc
sahf
jmp
xor
clc
jle
std
xlat
stc
mov
dec
lods
or
aas
mov
inc
int
add
out
cltd
dec
dec
rcrl
adc
xchg
mov
cmp
mov
loop
out
sub
in
mov
std
hlt
dec
in
add
scas
into
cmpsl
mov
out
jle
movsb
fcomp
mov
push
fcmovnu
lahf
mov
pop
and
repnz
stos
int
add
test
or
cmc
xor
movsl
lods
xor
xchg
in
movsl
cmp
add
jno
mov
jmp
and
push
add
lock
jo
inc
fwait
test
test
es
mov
jo
push
dec
fmuls
xor
test
ljmp
push
dec
jge
add
mov
mov
nop
sahf
shrb
and
or
dec
cmp
inc
mov
addr16
jecxz
push
pop
jo
push
push
jns
ja
sbb
lods
inc
mov
pop
or
ss
cs
pushf
fstps
test
lods
daa
sub
and
hlt
mov
pop
data16
push
push
push
out
out
push
cltd
iret
jg
sbb
out
pushw
and
jge
adc
fcmovne
loop
shufps
out
loop
das
fcmovnbe
popf
fstpt
test
push
loope
push
aad
sbb
pop
xor
adc
call
daa
push
xchg
popf
push
int
inc
mov
ds
sbb
adc
sbb
and
adc
addr16
fcmovu
cmpsb
fistpll
mov
mov
fcoms
imul
xchg
push
pop
xchg
push
enter
mov
xor
xor
outsb
shlb
cmp
adc
lret
jge
push
iret
jne
stos
popf
mov
xchg
call
push
shll
sub
scas
push
cmpsl
in
xchg
std
pushf
mov
leave
lds
cltd
mov
lods
in
or
lahf
xor
mov
les
pop
push
and
jae
bound
mov
in
mov
cwtl
ljmp
ret
test
xchg
nop
bound
jno
pop
mov
ss
xchg
dec
mov
inc
cmp
xor
sub
inc
das
jl
rcl
dec
movsb
inc
sub
lds
inc
ficoml
or
sub
gs
push
sub
fnstenv
js
sub
pop
xor
aas
xor
xor
xchg
sarb
pop
pushf
lret
cmpsb
cmc
in
clc
jno
mov
adc
stos
adc
mov
lcall
lea
std
sbb
outsl
lods
and
insb
in
xor
mov
dec
fwait
mov
mov
andl
out
sub
cmp
add
xor
das
sbb
pop
leave
pop
xchg
and
jo
sbb
jmp
xchg
insl
daa
and
and
loop
fiadds
std
mov
hlt
and
imul
sarb
out
insb
je
sbb
add
mov
rorb
cmp
xchg
aad
inc
stos
pop
gs
lahf
jb
mov
cs
js
mov
mov
push
adc
xor
xlat
jecxz
mov
cmp
mov
js
imul
dec
outsb
lret
mov
or
stos
jmp
pusha
jmp
pop
lock
sarb
pop
sahf
test
fwait
pop
repz
sub
dec
mov
xchg
rorl
cmp
xor
mov
repnz
sbb
es
aas
popa
xor
push
outsl
aam
addr16
ds
mov
mov
push
test
loopne
xchg
pop
daa
inc
push
pop
mov
lock
jo
insl
movsl
imul
scas
gs
testb
fldenv
std
scas
clc
or
sbb
lods
imul
js
add
nop
push
pop
jb
out
pusha
xchg
inc
jbe
pop
loope
adc
insl
jge
lods
iret
push
lsl
xor
sbb
push
jl
push
lahf
mov
jno
cmp
mov
stos
div
lods
sbb
movsb
xlat
mov
pop
push
jl
sbb
or
add
jns
push
in
or
pop
lahf
push
stos
mov
sbb
cmp
push
mov
adc
call
fidivrs
mov
ljmp
jbe
adc
mov
jmp
add
jg
sbb
dec
pop
xchg
out
adc
and
das
and
shl
fstps
cmp
iret
xchg
cmpsb
adc
push
in
and
xchg
inc
mov
nop
push
ret
popa
fnstcw
push
out
sahf
add
ja
sbb
cmp
add
sub
pop
popa
jg
xor
pop
outsb
push
xchg
adc
bound
push
fldenv
mov
subb
adc
popf
loope
push
popl
out
sub
testl
inc
add
mov
pop
add
outsl
nop
mov
xor
dec
je,pt
push
jl
mov
cmc
add
sbb
sti
in
jb
or
add
cmp
mov
mov
cs
xchg
lds
sbb
xchg
jecxz
push
push
lods
mov
pop
xchg
adc
and
xchg
les
cmc
popa
mov
loop
xor
xchg
jbe
testb
sbb
scas
in
pop
lods
xchg
addr16
adc
rorb
mov
xor
fdivr
or
pop
xchg
sbbl
filds
jle
arpl
push
cwtl
mov
leave
mov
sub
cmc
mov
nop
and
adc
dec
in
or
mov
jmp
in
pop
push
or
mov
add
dec
pop
mov
addr16
in
test
and
or
dec
and
jne
and
fcoml
pop
mov
sub
xor
inc
stc
movsl
lcall
jge
xor
ret
adc
pop
sub
dec
xchg
icebp
push
xor
add
leave
jno
in
push
stos
and
mov
dec
cmp
inc
adc
and
push
pop
ret
arpl
int
sbb
mov
andl
imul
add
push
stos
cmp
mov
icebp
push
fstl
ds
ljmp
mov
filds
jnp
inc
sub
add
cwtl
jge
push
adc
fnstsw
js
xchg
push
sub
call
imul
popf
pop
and
jge
mov
out
call
mov
call
ret
aam
mov
andl
mov
js
imul
push
outsb
jle
jnp
inc
inc
popa
lock
mov
push
adc
jg
cltd
cld
fmull
pop
mov
in
out
cmpsl
jmp
cld
call
out
sub
aas
or
loopne
inc
xor
or
pop
shlb
mov
sbb
stc
xor
test
push
repz
icebp
add
xchg
jp
ret
das
and
push
out
push
xor
cmpsb
jb
out
jnp
cwtl
add
pop
jae
add
lahf
jecxz
add
into
jmp
test
into
cmc
xor
jle
sbb
sbb
outsl
jnp
int3
inc
sub
mulb
test
pop
mov
push
mov
out
sbb
cmp
and
loopne
outsb
ret
xor
leave
repnz
fstl
in
mov
mov
push
pop
fisubrl
push
inc
cli
in
outsb
add
and
jno
jmp
inc
data16
mov
fdivr
out
mov
mov
ss
dec
push
out
das
iret
pop
test
ljmp
je
bound
sub
sub
hlt
loop
popf
notl
and
cmp
cmp
pop
xor
jb
sbb
test
adc
insl
fildll
test
lcall
lret
shlb
mov
cmc
push
push
push
fwait
je
xchg
ds
or
cmpsb
or
mov
pop
rorb
jno
push
sub
lcall
dec
cmp
xor
fistpl
push
in
subl
popw
aaa
xor
sub
jne
mov
xchg
sbbl
xchg
or
jmp
lods
and
pop
testb
sbb
imul
lock
movsb
inc
pusha
rolb
out
xor
into
aam
xchg
cmp
sub
test
adc
push
scas
jge
fsubrs
fdivrl
notb
jno
and
fbstp
mov
pop
mov
cltd
inc
mov
and
dec
pusha
xchg
add
rorl
cmp
das
dec
js
cld
jnp
mov
leave
push
cmp
pusha
test
adc
pop
lret
clc
jne
jg
lods
lods
add
lret
pop
inc
dec
imul
mov
jnp
sbb
into
pusha
ja
mov
mov
loop
in
mov
leave
ja
inc
push
jo
bound
cwtl
mov
push
aaa
pop
cmc
addr16
pushf
push
sbb
lret
imul
or
jl
jns
outsl
pop
mov
or
pushf
ficoms
je
lcall
lock
popf
mov
jmp
pop
aaa
sbb
in
into
cmp
jge
jmp
out
je
ss
lds
mov
mov
mov
push
push
inc
frstor
daa
sti
inc
notb
xor
aas
xlat
xor
out
inc
or
xchg
inc
push
and
aad
ds
sahf
pop
out
xchg
add
cmpsl
ret
ds
xchg
xor
sbb
test
fstl
cmp
ret
mov
xchg
adcl
jge
xor
and
es
cmp
call
andb
in
stos
push
or
inc
pop
mov
andl
mov
cltd
mov
negb
call
inc
mov
jae
mov
cli
mov
xchg
ljmp
jle
and
jg
pop
into
push
shrb
xchg
sbb
push
stos
push
fs
mov
or
mov
push
dec
dec
adc
adc
loopne
cmp
lods
mov
mov
pop
and
dec
lret
sbb
xchg
jmp
aad
xor
or
fwait
mov
sub
sbb
xlat
pushf
ja
rcrl
adc
sbbl
lds
fs
fwait
inc
jl
jmp
dec
arpl
ja
pop
pop
imul
cmp
popf
std
jae
add
push
pop
mov
sbbb
cs
in
iret
sub
repnz
dec
jg
sub
xchg
aaa
push
loopne
mov
jecxz
jns
dec
icebp
xlat
lcall
push
push
fwait
iret
pop
bound
aaa
mov
out
push
sbb
or
jne
stos
ljmp
push
shlb
sbb
mov
sub
out
in
and
lds
push
bswap
rdmsr
orb
adc
xlat
lods
bound
mov
sub
std
or
mov
push
mov
and
and
clc
sbb
mov
cltd
cmp
fcoms
es
jge
or
pop
fs
cmp
dec
and
popf
cmp
add
and
cmp
mov
cmc
adc
je
icebp
ds
dec
xorl
sbb
lret
fidivl
stos
test
aad
std
xchg
repnz
mov
pushf
adcb
cmc
xor
jns
dec
sbb
jb
cmp
push
mov
aas
scas
cmpsl
loopne
fdivrp
xor
mov
cmp
jp
add
aaa
mov
or
mov
popa
sub
mov
int
adc
lods
ds
xchg
bound
stc
jne
daa
into
cwtl
adc
clc
cld
int
jne
repnz
mov
push
add
push
fildl
out
dec
mov
sbb
or
mov
push
cmp
fcomp
loope
enter
cmp
jns
mov
enter
dec
loop
pusha
adc
pushf
add
adc
outsb
rcrl
aaa
xchg
popa
mov
inc
jnp
sub
sahf
xchg
mov
mov
xlat
adc
ja
mov
mov
nop
mov
pop
mov
mov
mov
or
push
xchg
and
sbbl
mov
loopne
in
adc
sbb
push
mov
test
ror
pop
push
inc
imul
daa
lcall
lds
or
inc
dec
mov
adc
scas
bound
in
cmp
pop
iret
jnp
xor
lret
mov
or
mov
jns
adc
mov
xchg
or
sbbb
add
repz
mov
sub
sub
xor
setg
repnz
sub
fimull
repnz
adcb
call
and
add
dec
fucomp
test
xor
mov
les
mov
add
cmp
shrb
mov
mul
pop
test
test
cmp
jo
cld
sbb
xchg
jns
or
mov
pusha
dec
cmc
fsin
xchg
imul
ja
iret
pop
out
fsubrl
xchg
jo
loope
mov
sub
dec
xorl
push
sti
add
rcrb
mov
pop
cmp
aad
fistl
jle
xor
push
pushf
sahf
movsb
inc
and
xchg
lock
outsl
push
lcall
push
aam
das
xchg
es
lcall
aam
insb
loop
xchg
sbbl
sub
pop
hlt
fnsave
sbb
aas
icebp
mov
rorl
dec
sub
std
jle
daa
insb
outsb
lock
lcall
sub
lods
sbb
scas
sbb
int3
mov
lret
mov
leave
cmp
jge,pn
ljmp
xchg
pushf
in
dec
adc
in
mov
sti
and
adc
icebp
cwtl
sbb
loopne
or
push
pop
rol
mov
mov
or
xchg
adc
fisubrl
dec
or
or
dec
jmp
jnp
or
shrd
ss
out
ret
sub
in
jge
mov
jne
mov
cmp
or
xchg
mov
push
fnstcw
dec
repnz
fmull
mov
ret
arpl
lods
test
test
testl
icebp
data16
or
daa
xor
mov
call
mov
fsts
pop
fidivrs
or
lcall
sub
jp
addr16
pop
xchg
xor
das
inc
mov
gs
fadds
xchg
jb
and
movsb
fucom
and
add
cmpsb
jp
cmpsb
mov
xchg
pop
stos
sbb
out
out
jb
scas
bound
mov
test
enter
add
popf
xchg
mov
push
jb
aaa
lahf
add
jg
pop
or
fdiv
mov
mov
jg
jbe
mov
lret
mov
jmp
in
xchg
scas
xchg
pslld
mov
and
jg
and
push
jno
jnp
dec
jo
jge
aad
loope
and
push
mov
xchg
clc
popf
mov
pop
and
lea
cltd
push
jae
adc
sahf
sub
aam
leave
cwtl
imul
mov
out
xchg
cltd
test
pop
lret
dec
addr16
push
and
cmp
add
pop
xlat
mov
ficoms
ret
imul
mov
lret
sbb
push
or
jmp
jbe
pop
or
mov
fwait
cmp
mov
fstpt
lods
gs
adc
xchg
inc
xchg
fiaddl
int3
test
mov
or
push
add
push
adc
add
mov
mov
cwtl
aas
int3
ja
lock
movsl
out
lret
and
xor
in
mov
sbb
xchg
mov
nop
std
cmp
roll
mov
sahf
mov
adc
xchg
out
lret
xor
lock
mov
push
jns
pop
dec
mov
inc
add
mov
mov
mov
movl
int3
loopne
pop
bnd
scas
dec
fwait
xor
xor
xchg
cmpsb
or
adc
mov
sbb
xor
lahf
adc
out
inc
pop
in
out
movsl
xorb
int
mov
loope
sub
andl
jle
inc
mov
cmp
mov
outsl
cmp
gs
inc
mov
out
outsb
jbe
jp
add
jecxz,pt
mov
imul
and
lds
dec
lret
leave
adc
std
cmp
test
mov
call
jg
inc
test
fnstcw
cmp
mov
enter
xchg
das
daa
pusha
lcall
insl
inc
xchg
inc
fs
adc
dec
nop
inc
dec
xchg
inc
jp
dec
push
hlt
shr
aaa
cmp
mov
pop
lret
rcrb
sbb
aam
sbb
mov
loop
cmpsb
ret
add
pushf
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
add
imul
mov
mov
mov
add
or
mov
mov
mov
add
xor
mov
mov
mov
add
and
mov
mov
mov
lea
mov
mov
mov
sub
add
mov
mov
xor
add
jne
mov
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
add
imul
mov
mov
mov
add
or
mov
mov
mov
add
xor
mov
mov
mov
add
and
mov
mov
mov
lea
mov
mov
mov
sub
add
mov
mov
xor
add
jne
mov
mov
xor
lea
mov
mov
xor
add
jne
jmp
mov
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
add
imul
mov
mov
mov
add
or
mov
mov
mov
add
xor
mov
mov
mov
add
and
mov
mov
mov
lea
mov
mov
mov
sub
add
mov
mov
xor
add
jne
jmp
mov
mov
xor
jmp
repnz
repz
add
pop
add
addb
sbb
push
test
or
rorb
or
in
and
das
loopne
and
push
fisubl
xor
and
aad
adc
mov
mov
dec
mov
push
push
clc
push
cwtl
enter
lcall
pop
mov
cmp
cmp
push
sub
out
inc
jbe
dec
dec
sub
cmc
and
sbb
and
mov
sub
mov
pop
push
inc
add
lahf
cmpsb
push
xor
icebp
cltd
xchg
mov
mov
pop
sahf
jmp
mov
pop
or
cmp
sbb
push
stos
mov
loope
cltd
jge
imul
jp
lcall
and
inc
lock
cld
imul
pop
ds
mov
popf
subl
sti
in
or
mov
sahf
test
popa
xchg
fdivrl
aad
lock
std
push
dec
dec
lods
add
xchg
sub
or
mov
movsl
repnz
inc
xchg
lock
xchg
insb
mov
ffree
push
stc
lahf
fimull
lock
lahf
aaa
and
fildl
sub
pop
jo
and
mov
fucomip
cwtl
adc
aad
mov
xchg
rorb
lcall
leave
mov
dec
movsb
and
and
adc
test
nop
add
and
pop
and
xor
mov
and
sbb
mov
or
xchg
sarl
xchg
xchg
cli
pop
sub
rorl
inc
sbb
mov
sub
inc
mov
add
dec
pop
pop
int
dec
enter
inc
fmuls
pop
lret
mov
cmp
fadd
iret
pop
mov
xchg
pop
inc
data16
pcmpgtd
or
xorb
xchg
sub
test
xchg
cmp
and
imul
insl
pop
movsl
adc
add
stos
or
adc
fiaddl
shlb
dec
daa
fsubp
and
jbe
fcmovu
and
sti
cwtl
or
gs
test
sub
int
test
mov
and
scas
dec
add
push
inc
pop
mov
es
inc
pop
mov
icebp
mov
jne
stc
stos
mov
ja
test
fnstenv
lods
mov
push
xchg
mov
push
outsl
sub
adc
popa
mov
jns
shll
pop
pop
andb
push
push
scas
inc
push
inc
mov
cmp
loop
mov
fldl2t
xlat
push
dec
in
push
cmp
push
es
shll
inc
inc
rorb
in
jo
cltd
cmpsb
mov
movb
dec
nop
scas
mov
in
dec
mov
inc
pop
rclb
cwtl
pop
mov
and
add
pop
rorb
dec
sub
clc
cwtl
mov
or
mov
and
int
jnp
and
jnp
jg
sub
test
push
jns
es
add
rcll
inc
pop
leave
xor
ficomps
xchg
xchg
lds
xchg
xor
sbb
dec
std
adc
and
movsl
fcmove
mov
jae
or
mov
jl
xchg
hlt
push
or
xlat
pop
inc
jo
fmull
mov
subl
xorl
pop
push
nop
mov
sti
mov
pop
lcall
insl
pushf
aam
jp
sbbl
mov
mov
inc
jae
inc
sbb
mov
arpl
push
inc
stos
cmp
cmpsb
xchg
in
pop
push
push
mov
mov
pop
push
or
inc
int3
ljmp
or
add
dec
popa
and
sub
push
push
pop
jp
insl
aaa
fistps
cmpsl
lds
les
push
cwtl
xchg
push
add
mov
mov
fdivs
xchg
cmp
rol
mov
pop
into
push
orb
out
xchg
and
jae
jg
out
mov
cmp
and
jae
nop
lahf
sbb
int3
jge
stos
sar
repnz
pusha
addl
inc
popa
xor
leave
mov
ret
push
test
nop
xchg
mov
xchg
xchg
mov
scas
mov
addl
mov
bound
fst
in
in
mov
jo
call
arpl
int
nop
xchg
jp
add
jecxz
jecxz
cmpb
dec
or
addb
fidivl
enter
xchg
imul
ja
and
xchg
cmp
sbb
inc
outsb
insb
mov
xor
insb
out
ss
imul
fwait
sub
push
pop
xchg
cmp
or
inc
or
sub
bound
popf
mulb
bnd
sbb
shlb
and
push
add
outsb
mov
out
sbb
test
std
ret
xor
add
testl
mov
enter
loop
or
pusha
xchg
nop
adc
idivb
push
pop
das
mov
repnz
addb
scas
inc
std
shl
adc
adc
xchg
movsl
pushf
shlb
loopne
adc
lret
jle
loop
xor
cwtl
add
out
sub
out
xor
push
lds
dec
push
cmp
ljmp
add
cmpsl
dec
lret
xor
jns
mov
add
jae
iret
in
loope
into
lock
push
pop
mov
jnp
xchg
dec
pusha
xchg
jge
scas
cmp
pusha
push
int
sbb
and
and
cmp
test
xchg
loope
int3
mov
mov
cmp
cmp
mov
out
and
dec
adc
mov
add
dec
inc
movl
movsl
movsl
xchg
addr16
test
clc
sbb
xchg
push
fs
test
xchg
inc
mov
pop
outsl
repz
mov
dec
add
inc
dec
inc
lods
sbb
ja
mov
xlat
jo
inc
pop
cmp
cmpsb
data16
rcrb
sbb
icebp
jns
repnz
ja
mov
and
or
fistl
js
je
and
das
jg
in
call
mulb
rorl
sub
push
xchg
int3
cmp
fdiv
dec
cwtl
mov
mov
mov
xor
lock
mov
addl
sti
dec
rcl
lcall
cmpsb
mov
mov
mov
inc
fldenv
mov
cld
in
dec
jo
cmpsb
dec
jmp
push
mov
or
jne
jp
js
pop
sarl
push
xchg
mov
mov
push
jecxz
lahf
pop
lret
xchg
sub
mov
dec
pop
call
ja
pop
pop
xor
negb
adc
jb
push
mov
cmpsl
xlat
ja
fadd
es
out
pop
imul
lods
fsubl
int
pop
lret
scas
mov
adc
add
ret
popf
je
xor
fadd
shrb
dec
pop
fists
fmull
popf
jecxz
aas
jecxz
dec
test
fisttpll
or
mov
mov
lds
cmp
lods
pop
mov
jno
int
out
decl
sbb
jge
cmc
or
cs
and
mov
arpl
cs
out
mov
sbb
adc
inc
test
jns
shrl
cmp
ds
push
or
mov
ljmp
in
mov
cwtl
or
fisubrl
test
scas
sahf
xor
inc
pusha
call
or
shrl
dec
insb
test
repz
mov
cld
mov
jg
or
push
cmp
mov
adc
inc
mov
pop
in
cld
clc
int
mov
stos
inc
mov
mull
test
push
push
daa
lods
daa
mov
cs
lds
inc
inc
jge
imul
imul
inc
dec
jl
in
mov
inc
or
xchg
cmc
in
nop
fidivrl
sbb
insl
stos
xor
xchg
push
mov
cmp
jge
mov
test
loopne
icebp
mov
adc
and
mov
daa
push
push
xor
pushf
and
push
xor
mov
imul
dec
pop
pop
dec
inc
push
loop
cwtl
loope
push
into
sbb
mov
jbe
cmpsl
out
jae
mov
mov
ret
xchg
scas
fildll
fyl2xp1
lret
and
mov
mov
and
pusha
mov
or
xchg
sbb
inc
lret
pop
sbb
dec
mov
popf
stos
mov
mov
rcll
jns
jnp
out
xor
lea
in
call
shlb
xor
inc
lock
xchg
sbb
mov
push
fisttpl
out
clc
mov
sbb
daa
icebp
lods
leave
mov
inc
aam
cltd
cld
mov
or
pop
inc
mov
insb
xchg
sbb
mov
jmp
fcoms
fmull
and
dec
test
lahf
pusha
pop
insb
jno
adc
out
popf
addr16
imul
ds
dec
or
call
lods
test
mov
neg
nop
fistpl
or
int
mov
outsb
inc
mov
push
jp
inc
push
pop
jae
xchg
or
subb
xchg
stos
lahf
lret
in
push
std
fwait
icebp
pop
add
nop
pop
es
insb
cwtl
jle
or
negl
dec
pop
mov
data16
lds
sbb
fcomi
fildll
sub
popf
mov
cmpsl
out
push
out
xchg
mov
orb
push
push
hlt
cs
push
lahf
ja
loop
test
lret
pop
cmp
sub
jl
mov
and
adc
add
jecxz
stc
aaa
push
and
les
jnp
ret
cwtl
jmp
sbb
jno
xchg
dec
dec
cmp
and
aam
ja
adc
mov
ret
jmp
or
nop
das
clc
sarl
in
rclb
pop
xchg
push
pusha
xor
push
inc
jns
fistpll
test
pop
std
imul
mov
test
out
loop
xchg
dec
ds
mov
pop
jmp
push
xor
jns
imull
sub
mov
mov
mov
lea
mov
mov
inc
jbe
mov
or
or
sbb
sbb
into
aas
sahf
push
mov
pop
dec
lret
add
sbb
fs
scas
test
test
lods
jle
test
sub
mov
adc
mov
mov
pusha
es
jle
xor
call
gs
mov
xchg
push
jmp
add
lds
lods
in
mov
push
mov
pushf
mov
imul
push
cmp
xchg
cs
mov
cld
jl
call
dec
pop
mov
lahf
mov
add
ret
out
cmpsl
fldenv
and
add
pop
fs
pop
xor
cmpsl
pushf
sbb
popa
mov
scas
pop
lods
push
mov
int3
mov
adc
fstpt
ss
and
mov
dec
mov
xchg
add
insl
insb
mov
jns
push
sbb
lods
push
dec
scas
sbb
cmp
loop
in
mov
jne
pop
sti
push
xchg
fisubs
lock
sbb
scas
popf
sub
rolb
scas
xchg
inc
jae
out
jge
rcl
sbb
sub
out
lret
rcll
add
jae
sbb
test
mov
or
push
clc
lret
push
or
mov
mov
aad
std
test
scas
pop
push
pop
mov
add
int3
xchg
loope
hlt
xor
cmp
imulb
or
wbinvd
mov
movsl
int
dec
xor
jne
fstps
in
xor
or
out
adcb
or
pushf
ret
lahf
jle
inc
adc
in
xor
push
sub
inc
mov
fisubs
popf
mov
jb
mov
mov
pop
stos
ret
mov
ret
int
movsb
popa
xorps
insl
jns
xchg
adcl
outsb
ficomps
ljmp
push
sub
lret
sbb
mov
lods
sub
mov
xchg
bound
sbb
scas
ja
maskmovq
cmpl
xchg
jecxz
or
mov
pop
jno
imul
sub
mov
dec
ss
sbb
mov
call
adcl
mov
insb
inc
hlt
sub
pop
fidivrl
or
sti
sbbl
imul
adc
mov
addr16
inc
movsl
scas
mov
lret
cmp
stos
cwtl
outsb
test
pop
cltd
fdiv
ja
mov
mov
shlb
push
stos
iret
or
repz
outsl
clc
mov
push
pusha
inc
mov
setb
cmc
aaa
inc
inc
jecxz
mov
or
ror
cmpsl
dec
cmc
jl
jle
nop
xor
or
pop
pusha
andl
and
jge
insl
xor
fs
sub
into
ss
xlat
nop
jne
cmp
jg
movsl
xor
gs
sub
sub
sub
xor
dec
dec
xlat
push
pop
stc
dec
imul
cli
into
mov
mov
jne
dec
cmp
cwtl
push
clc
or
lods
sbb
add
xor
mov
pop
ss
test
dec
data16
mov
popa
sbb
or
xor
mov
add
pushf
xchg
mov
cwtl
push
jle
cmp
fwait
cwtl
add
dec
in
sub
inc
fstpt
cmp
push
ja
mov
and
dec
movsb
add
je
repnz
jl
xchg
scas
sti
mov
andb
mov
aas
add
icebp
or
adc
jp
cmp
mov
inc
ret
or
pusha
pop
loop,pn
in
pop
xor
mov
mov
fwait
repnz
dec
in
movsb
jne
lods
adc
xor
int3
adc
xlat
les
xchg
pop
and
testl
inc
cmpsl
bound
cmp
bound
jo
out
ret
sbb
outsb
jbe
ficoml
cmc
orb
jg
ds
testl
push
dec
dec
lods
mov
adc
jnp
mov
pop
and
sbb
lods
test
pop
mov
test
call
test
ret
rcr
out
mov
sbb
out
cwtl
push
adc
stos
mov
data16
adc
outsb
sahf
and
xor
scas
mov
imul
lahf
adc
xlat
mov
enter
popa
xor
fsub
push
push
jae
cmpb
loope
adc
mov
inc
inc
inc
dec
cwtl
xchg
push
sub
sahf
mov
ja
mov
jno
xor
mov
mov
sub
xchg
lds
or
cmp
lret
push
push
pop
out
adc
outsl
outsl
adc
lcall
fwait
cltd
sahf
sub
and
pop
mov
push
xchg
xchg
cmpsl
cwtl
or
pop
popa
nop
lret
xchg
cli
sub
sub
orl
cwtl
pop
add
dec
adc
ret
lods
loop
fists
inc
cltd
mov
jg
lcall
int
das
enter
pop
sbb
mov
sub
pop
xchg
lock
mov
jne
cmp
dec
cmp
stc
daa
sbbb
insl
insb
inc
xchg
aaa
movsb
int
scas
imul
push
test
and
pop
pop
and
in
divb
cwtl
add
fsub
adcb
in
or
jmp
pusha
in
lds
lahf
fsubs
adc
fsubl
pop
mov
in
data16
push
int
dec
mul
mov
aam
sbbl
push
sub
cmp
in
aas
jns
cs
jecxz
ljmp
sarb
scas
mov
dec
cmpsb
add
inc
adc
xchg
add
repnz
adc
out
sub
popa
pop
sub
call
jle
add
fldenv
wbinvd
xchg
lret
shll
jle
test
imul
add
out
cwtl
inc
popa
int3
je
je
mov
adc
xchg
in
movsb
cwtl
mov
mov
push
jmp
loop
sbb
dec
add
and
mov
adc
decb
jne
mov
adc
pop
fdivr
mov
adc
push
std
jae
mov
or
mov
aaa
cmp
das
mov
cwtd
jb
sbb
ss
test
enter
jo
adc
insb
test
add
test
cmc
push
int3
push
ret
cmc
mov
popa
shll
mov
push
jp
mov
xchg
add
xchg
or
cmp
les
mov
and
fmul
xor
pop
sbb
arpl
fldl
aam
daa
cmp
std
push
out
stos
inc
adc
scas
jge
jmp
xor
pop
push
and
add
cmp
fstpl
or
icebp
pop
out
sbb
iret
adc
cmp
sbb
sahf
out
cs
sti
dec
test
sbbl
test
shlb
push
xchg
dec
hlt
movl
sub
dec
cmpsb
or
ljmp
pushl
enter
dec
loop
xlat
fwait
cwtl
adc
push
dec
loop
mov
fnstsw
orl
lret
xchg
gs
out
dec
inc
lahf
or
out
pop
jns
sub
add
test
dec
test
or
mov
imul
jmp
cltd
xchg
jmp
cmc
test
leave
sub
nop
dec
sbb
pop
push
or
loopne
loope
test
push
inc
jae
inc
mov
and
inc
mov
push
pop
push
add
and
inc
outsb
iret
xor
adc
pushf
add
in
and
sbb
nop
sbb
push
adc
mov
jg
pop
pop
xor
jbe
sbb
hlt
aas
sarb
and
loop
or
xor
loopne
inc
push
movsl
push
stos
sub
mov
push
push
push
inc
lret
xor
loopne
or
xor
pushf
cmp
idiv
loope
out
enter
pop
cmp
inc
stos
loop
cmp
stos
push
mov
in
outsb
hlt
inc
ret
lahf
or
and
call
push
inc
lret
push
adc
test
inc
fisttpll
inc
and
mov
ja
xchg
sub
xchg
int
int
sub
aam
sub
mov
sub
mov
and
testl
pushf
outsw
and
cmpsl
mov
aaa
or
push
insb
out
lahf
mov
or
insl
or
jbe
subb
jo
jbe
loope
das
das
bnd
fcoms
and
jno
xchg
inc
movsb
lcall
imul
push
jp
sub
ficompl
cmp
sahf
or
dec
inc
jnp
scas
es
xor
xor
jnp
and
stos
fwait
adc
not
mov
mov
dec
rcrb
mov
cmp
popf
jg
addr16
xor
dec
jb
in
sub
pop
sbb
mov
je
pop
movsl
inc
lea
pand
stc
ss
lret
cmp
xor
sub
out
dec
ret
cmc
mov
mov
pop
jp
addr16
fdivrs
shlb
mov
and
inc
je
cmpb
in
in
jle
in
mov
or
xlat
repnz
mov
adc
cmpsb
jbe
xor
xchg
ret
fistpl
int3
iret
xchg
jle
ret
cld
divl
insl
jbe
dec
in
lahf
es
iret
fwait
bound
push
cmp
mov
inc
test
push
and
js
loop
cmp
inc
sbb
es
cmp
mov
sub
test
dec
in
cli
sar
es
cmp
lahf
mov
ss
pop
pop
into
aam
push
sbb
sub
xor
push
xchg
lret
cmp
sub
sbb
gs
mull
mov
cli
repnz
repz
adc
push
push
inc
and
shll
mov
add
xchg
jno
gs
add
xor
pop
jbe
lret
push
or
mov
xchg
sbb
or
or
iret
into
out
sar
rcr
inc
cmp
jo
test
pop
ret
lds
loope
adc
rclb
negl
mov
pop
cwtl
ja
push
mov
fdivrs
pop
lea
adc
sub
ret
mov
mov
repnz
cwtl
lret
cltd
enter
sbb
push
ss
pop
imul
xchg
adc
out
clc
testl
fst
out
fnstenv
mov
mov
push
inc
pop
inc
pop
shl
inc
mov
popa
mov
inc
lahf
add
repz
xchg
jg
pop
lea
insl
add
cli
xchg
jb
in
xchg
and
or
inc
push
pop
in
add
orl
std
sti
dec
or
mov
insl
sub
cmp
jge
and
repnz
cmp
xor
sbb
mov
and
pop
cs
dec
repz
cmp
lret
out
loopne
ret
lods
mov
out
adc
stc
pop
cmc
xor
and
xchg
cmp
xchg
pop
stc
incl
outsb
ret
mov
lds
adc
aas
or
icebp
aaa
mov
xchg
pop
lods
mov
ds
shlb
mov
xchg
xchg
fsubl
adc
inc
xor
into
add
lods
dec
xlat
mov
shrb
inc
pop
xchg
aaa
mov
bound
sbb
addr16
movsl
xchg
fwait
aaa
loop
cmpsb
lcall
int
les
mov
mov
lds
fcmovnb
xchg
adc
movsb
add
xchg
add
mov
sub
fiadds
jo
fisubrl
lret
lret
cwtl
outsl
xor
jg
add
jae
jo
cs
into
repnz
adc
rep
or
idivl
pop
inc
dec
pop
dec
stos
jno
pushf
cmp
jle
shll
push
add
pop
cmp
xchg
jmp
enter
mov
mov
sbb
mov
xchg
rorl
adcb
not
xchg
pop
ficoms
inc
push
lods
mov
out
in
outsl
push
in
loop
cwtl
imul
shrb
mov
mov
or
mov
mov
ds
jae
ret
lret
or
cld
xchg
push
pop
and
sbb
adc
jle
jp
imul
or
outsb
lods
jmp
insb
imul
mov
repnz
xchg
lret
test
imul
adc
push
out
push
jmp
test
push
mov
push
cmp
cmp
xchg
jnp
push
xchg
cwtl
xor
icebp
mov
cli
mov
fldenv
repnz
dec
cmp
lock
nop
into
shll
dec
xchg
or
sub
lcall
aam
shrl
pop
mov
out
cmp
mov
jnp
inc
jg
pusha
mov
jp
jns
cmp
movsl
inc
sbb
cli
mov
push
lahf
inc
xchg
fidivl
stos
pop
sbb
aam
adc
mov
dec
shrb
repz
lret
and
dec
into
mov
clc
pop
enter
push
mov
orl
push
shl
sub
sbb
in
and
cmc
rcll
and
aas
scas
lods
loop
orb
lock
pop
or
or
pushf
push
lcall
mov
cmp
cs
push
adcb
loopne
xchg
mov
jp
mov
adc
mov
push
das
inc
and
adc
xor
sub
bound
icebp
xor
dec
dec
xchg
out
cli
and
repz
push
xor
movsl
std
scas
xor
mov
xlat
push
inc
sub
xlat
mov
out
jmp
jle
lock
stos
fsubp
enter
in
xchg
fldl
dec
mov
mov
pop
test
cld
lcall
mov
imul
add
add
dec
jb
dec
pop
or
loopne
push
into
xor
lods
cmpsb
daa
jmp
jae
cmp
pextrw
mov
pop
in
jnp
jae
sub
adc
insl
loope
push
xchg
xlat
loopne
and
aas
jmp
call
movsb
or
jl
arpl
movsb
out
pop
dec
cmp
or
cwtl
bound
movsb
call
ja
popa
inc
aaa
clc
les
enter
iret
inc
dec
jne
inc
cmp
adc
xchg
xor
dec
adcb
and
xor
pop
xor
mov
lods
fwait
stos
pop
mov
sbb
dec
fnsave
shll
popa
mov
sarb
fmull
xchg
lret
add
xor
push
or
cld
add
adc
popf
cmp
dec
bound
insb
mov
es
mov
inc
push
push
or
lahf
mov
sahf
jg
out
hlt
loope
clc
lahf
dec
or
add
sbb
cmpsb
cmp
pop
sbb
jb
or
jnp
addr16
sub
jns
push
loopne
or
jg
cmpsb
lds
sub
cmp
test
stos
pop
xchg
mov
scas
pop
imul
fisubl
pusha
enter
enter
imul
movsl
cmp
and
or
push
enter
inc
jo
sarl
scas
out
aam
xchg
jae
cmp
mov
stos
sahf
and
jl
subb
shr
popf
sahf
sub
test
fwait
sub
into
jb
jmp
dec
sub
fdivrl
push
movsl
jmp
mov
dec
jge
inc
fdivrs
adc
and
stos
push
and
outsb
popa
test
or
sbb
cmp
jo
outsl
xor
push
pop
je
fadds
lds
mov
loop
mov
inc
nop
popa
push
movsb
addr16
popf
fwait
ljmp
out
sbb
pop
sub
xchg
ret
jp
out
in
push
in
push
je
rclb
mov
jo
and
mov
inc
and
mov
enter
cmp
mov
pushf
hlt
add
pop
push
incb
in
mov
add
aad
sbb
mov
leave
in
std
cwtl
fsubr
imul
push
xchg
xchg
shrl
nop
bnd
cmpsb
out
xor
push
mov
adc
mov
insb
add
push
mov
pop
mov
idivl
xor
dec
xchg
cmp
sbb
pop
dec
in
or
mov
cmc
pop
xchg
push
ret
inc
movsl
sub
xor
or
lods
mov
cmpsb
jnp
inc
stos
adc
xchg
stos
or
and
ds
mov
push
fs
mov
sbbl
dec
jl
mov
pop
mov
in
sbb
sub
lock
pushf
sbb
jmp
sti
lods
mov
or
out
xchg
lds
outsb
mov
out
leave
sarl
cmp
or
inc
mov
dec
pop
push
inc
lret
pop
mov
daa
lea
jg
push
stc
lahf
add
lahf
int3
xor
jae
sub
dec
lret
and
stos
sub
xchg
inc
inc
xor
bound
inc
fstpt
movsl
fistpll
movsl
lahf
filds
push
xchg
outsb
loope
addr16
ret
push
pop
ret
cmp
lea
mov
xchg
mov
push
shr
inc
mov
loope,pn
jno
and
cld
sub
test
idivb
lahf
add
mov
mov
insl
dec
stos
or
ds
cld
iret
jo
into
ss
xchg
jl
sbb
push
movsb
jno
jl
cmpsb
jecxz
mov
adc
mov
inc
es
xchg
fidivl
and
sbb
mov
fsubr
inc
pop
popf
jb
aad
jge
lret
fucomi
or
lret
cbtw
out
aas
dec
in
aad
adc
push
pushf
movsl
push
stos
cs
fadds
iret
loope
sbb
cmp
mov
lcall
jge
jno
ror
xchg
add
jecxz
movsb
call
sbb
jb
adc
mov
and
inc
jle
xchg
sub
adc
push
push
out
xor
movsb
jae
pop
mov
xchg
cmp
lds
mov
fimuls
add
or
push
xor
fs
jmp
lods
add
jno
testl
sbb
outsb
lods
in
mov
dec
add
fldenv
mov
jle
adc
jmp
stc
cmp
and
xlat
xor
dec
fsub
or
ret
lahf
mov
mov
setp
loope
fwait
in
adc
mov
je
les
js
jp
mov
ffreep
mov
shrl
imulb
push
inc
add
jno,pn
and
dec
dec
cmp
jmp
aam
aas
incl
sub
out
adc
mov
daa
loopne
arpl
jnp
and
mov
bound
loopne
jg
ret
xchg
mov
in
pop
adc
mov
call
hlt
xchg
in
fbstp
icebp
sbb
imul
mov
rolb
pop
nop
add
lock
ds
xor
les
inc
ds
pop
popl
inc
cwtl
gs
fcos
xor
mov
insl
fs
fbstp
hlt
fwait
sub
lcall
cmp
jns
jb
cmp
xchg
lock
fsubl
cmp
imul
push
scas
out
or
jp
aad
jbe
test
ret
xchg
pop
test
dec
cli
dec
dec
jle
dec
dec
mov
insb
mov
stos
fisttps
cmc
add
mov
inc
sub
mov
inc
clc
ret
imul
xchg
mov
ljmp
sti
add
popf
xorb
lcall
in
xchg
fcmovne
mov
sub
xchg
std
test
and
pop
push
insl
cld
jno
jge
loopne
jge
ret
sub
push
stos
inc
mov
cmpsb
xor
fstl
ret
pop
push
popf
cmp
es
daa
push
in
shrl
lock
push
pop
push
shll
mov
arpl
incb
fdivrs
add
insb
add
xchg
imul
adc
loop
add
pop
inc
leave
or
pop
push
push
and
es
nop
jne
and
testb
jae
mov
push
shll
push
sub
mov
lahf
pushl
mov
clc
dec
xchg
inc
std
das
jmp
ds
shl
xor
dec
fs
scas
sbb
sbb
cmp
jnp
push
fsubl
lea
inc
dec
lahf
inc
repz
mov
stc
xchg
mov
mov
jg
or
ret
inc
cwtl
dec
call
jecxz
lret
loope
test
adc
xchg
testl
cmpsb
sub
mov
hlt
or
leave
cmp
jp
sbb
std
lcall
push
cmp
add
aas
movsl
outsb
jecxz
rorb
mov
aam
mov
fnstenv
cmpsb
inc
mov
outsb
lods
pop
cltd
add
lcall
adc
jecxz
lcall
jecxz
ret
fwait
es
shlb
dec
lock
pop
mov
pop
pop
push
orb
movsl
mov
hlt
jno
dec
cmp
or
pop
repz
stc
fisubl
repz
push
jns
clc
mov
sti
sub
pusha
cwtl
inc
mov
cltd
out
fsubp
dec
je
adc
inc
mov
in
fs
es
sbb
movsb
sub
sbb
push
adc
sbb
fs
xchg
es
push
inc
lret
adc
inc
cmp
xor
sub
sub
jmp
adc
test
mov
inc
addb
aam
imul
loop
ret
fsubrs
or
jb
jo
dec
popf
ret
arpl
push
sub
xchg
pushf
add
addb
icebp
push
movaps
into
out
leave
jnp
lock
xor
outsb
ljmp
movl
jno
in
imul
aad
fcomi
xchg
faddp
sbb
popf
push
pop
lds
lret
les
int3
movl
xchg
dec
iret
test
out
notb
stos
sbb
jp
shrb
mulb
inc
sti
aam
pop
lods
gs
mov
pop
sub
inc
sub
test
test
jp
inc
pop
push
push
xchg
outsb
das
mov
jb
mov
dec
pop
lods
idivb
adc
movsb
in
aam
movsl
lcall
adc
fisubl
aam
mov
cmp
adc
sar
fucomp
dec
iret
test
pop
mov
repnz
dec
mov
mov
dec
fistps
pop
inc
xchg
pcmpgtw
mov
push
jb
sub
push
jae
and
repnz
ret
aam
rolb
fidivrl
and
ds
or
cwtl
add
loopne
mov
cmpsb
mov
sbb
xor
shrl
loop
gs
and
loope
jl
mov
sub
shl
xor
fcomip
mov
in
ljmp
push
cmpl
pop
shlb
sub
rolb
cmpsl
pop
xchg
ret
je
add
cmpsb
lock
or
rolb
mov
sub
mov
and
dec
inc
cmp
xchg
outsb
mov
jno
stos
cli
sbb
jmp
mov
jne
fnsave
push
sub
std
adc
sub
push
test
test
fs
xchg
out
jmp
cltd
movsl
ljmp
jae
mov
mov
popa
pop
cmp
add
test
ret
jns
and
fistl
repnz
push
fmul
nop
xchg
hlt
mov
cltd
lods
jo
repz
lcall
ja
cmpl
into
daa
cmp
fldenv
mov
pop
sub
pcmpgtd
rcrl
fnsetpm(287
add
insl
addl
mov
std
sub
xor
mov
jb
mov
jmp
lods
arpl
push
jg
jae
mov
mov
mov
inc
inc
mov
clc
repnz
add
sbb
int
ret
mov
cwtl
and
push
xchg
mov
into
xor
push
jb
jns
mov
addl
popf
inc
sbb
stos
les
pop
movb
jns
wbinvd
jge
mov
jl
addr16
sbb
xor
pop
mov
xor
cmp
fmull
arpl
cmpsb
xchg
iret
iret
cmp
mov
jge
dec
push
sbb
or
dec
xchg
sarl
xlat
cmpsb
cltd
mov
sahf
and
sahf
cmp
mov
cmpsb
mov
lods
push
inc
fisttps
test
int3
and
xor
cmp
jg
imul
movsl
and
push
push
mov
std
push
push
imull
lcall
in
notl
mov
stos
xor
imul
movsl
cwtl
pop
je
or
and
mov
mov
jns
addr16
adc
sahf
xorl
mov
testl
addr16
lods
pushf
aad
dec
push
push
add
mov
test
aas
sbb
sub
fdivrs
in
repz
xorl
mov
in
or
cld
xor
xlat
aad
pop
add
add
arpl
push
arpl
inc
lds
adc
call
dec
imull
cmp
xor
dec
movsl
insb
mov
imul
lret
insb
push
dec
jecxz
dec
lea
jl
dec
cs
xchg
xchg
fstl
pop
lret
lods
cmpsl
in
outsb
push
jnp
mov
inc
paddsb
sub
test
in
adc
lods
xchg
lds
dec
repnz
push
xchg
repnz
aaa
in
movsl
cwtl
jno
sbb
inc
int
cmp
mov
push
shlb
movsl
dec
push
cmp
daa
push
and
sahf
gs
jo
mov
xlat
xchg
lods
jl
int
dec
jle
sahf
or
aas
jecxz
fdiv
ljmp
lret
fnstcw
scas
mov
xor
pusha
push
fwait
sub
shll
or
pusha
xor
clc
adc
pop
jp
filds
lods
dec
push
or
das
aam
movsl
test
sbb
rcrl
fsts
or
push
loop
and
push
sbb
test
mov
mov
fwait
adc
out
out
inc
mov
mov
sub
ljmp
xor
add
dec
aaa
push
stc
jle
xor
stos
inc
pop
mov
loop
jae
and
xchg
out
popf
rolb
push
mov
push
push
jge
xlat
fisttpll
mov
jmp
adcb
insl
dec
imul
pop
xchg
sbb
ror
or
fnclex
mov
add
sbb
mov
adc
or
es
xor
in
mov
lret
test
dec
shlb
fdivrl
mov
push
dec
push
pop
adc
pop
xchg
fldcw
outsb
fcoms
pop
push
mov
xchg
xchg
test
sub
pusha
sbbl
pop
xchg
mov
pop
cmp
imul
mov
ficoml
enter
loopne
lock
jnp
lahf
jo
jge
sub
testl
push
add
mov
adc
sbb
mov
cwtl
lcall
mov
js
fistl
adc
ret
pop
scas
pop
iret
xchg
inc
lahf
dec
je
jbe
sbb
xor
mov
pop
and
sub
mov
lret
cmp
sbb
rcl
gs
sbb
mov
or
clc
pushf
dec
sub
ds
mov
mov
jmp
les
faddl
mov
movsl
lret
pop
jno
xchg
in
insl
imul
cmp
jg
mov
in
push
lret
push
cwtl
negl
lcall
jle
imul
icebp
cmc
and
xchg
repnz
xor
jo
and
or
test
xor
repz
enter
bound
rorb
je
dec
cli
movsl
xchg
clc
xor
insb
push
push
je
push
or
inc
fnstsw
shrb
push
rclb
adc
adc
cmp
cmpxchg
repz
lds
mov
and
addr16
jle
daa
cltd
xor
ficomps
into
outsl
cmp
xchg
mov
mov
enter
les
sbb
xor
out
jbe
loop
push
inc
push
or
adcb
jl
in
clc
inc
pop
jae
test
mov
sbb
xchg
inc
popa
or
cmpsl
clc
sub
adc
mov
je
push
insb
and
aam
insb
sub
mov
std
je
mov
cltd
xor
lods
dec
xchg
inc
cs
mov
pushf
test
mov
out
xchg
lret
cwtl
adc
cmp
xor
jb
mov
lds
out
fldl
dec
aas
xor
xor
adc
xorl
xchg
pushf
repz
outsl
ss
xorl
imul
in
shrb
xchg
ja
sub
std
sub
xchg
nop
inc
fcoms
sbb
ja
xchg
push
cmc
repz
xor
jns,pn
cmp
wrmsr
incb
lods
add
arpl
mov
mov
mov
lods
rorw
leave
imull
push
adc
out
sub
pop
push
dec
xorb
insb
lret
dec
mov
fldl
and
cmc
ss
stos
jmp
in
sub
cmp
sarl
xchg
outsb
repnz
je
sub
add
fisubs
jle
into
lea
xlat
mov
aad
sahf
mov
push
ja
mov
loop
pop
out
leave
adc
cs
into
inc
mov
jae
fnstenv
loop
xchg
xchg
sahf
outsb
push
mov
adc
aam
inc
fs
xor
repz
jbe
adc
int
outsl
adc
pop
push
stos
pop
je
mov
jecxz
mov
ss
jecxz
mov
repz
sub
mov
pop
push
and
ret
sbb
lahf
xor
sbb
addr16
mov
pushf
jmp
mulb
cmc
pop
notb
mov
jae
leave
push
int3
mov
jmp
mov
movups
push
test
test
mov
aad
or
dec
dec
out
aam
leave
jo
cs
cmp
mov
test
ds
sub
cmovbe
movsl
pop
pushf
add
es
push
jp
in
jp
mov
addr16
add
movsb
or
ret
inc
xor
movsl
test
add
mov
lahf
stos
aas
jp
pop
sbb
aas
pusha
lds
sti
icebp
jne
push
fwait
cmp
popa
adc
out
cmp
jecxz
out
cmp
inc
in
loopne
mov
mov
sub
inc
and
icebp
addr16
xlat
mov
out
mov
add
dec
mov
jp
xchg
pop
icebp
jmp
pusha
repz
popa
xchg
scas
test
gs
mov
xor
sub
mov
mov
dec
mov
sbb
roll
sbb
pop
dec
into
push
enter
jle
push
out
xchg
test
mov
jg
or
inc
or
cli
or
adc
gs
sub
pause
or
dec
sti
vcmpsd
add
clc
jnp
jmp
in
cmp
xchg
in
xor
cmp
rcr
mov
pop
inc
pop
mov
pop
in
jo
pop
popl
xchg
dec
or
cmp
push
push
sbbl
lea
jmp
pop
fmull
in
negl
aad
inc
lock
adc
aaa
dec
jl
dec
cmc
jp
sahf
test
jne
mov
decb
jle
mov
jb
mov
out
data16
int
or
xchg
call
mov
shlb
jne
add
sbb
push
dec
inc
mov
mov
insb
lds
cld
push
insl
pop
scas
test
sbb
xor
adc
lea
inc
push
mov
adc
int
jb
stos
lock
movsb
scas
mov
add
adc
int
sahf
xchg
xor
incb
xchg
negl
inc
lock
xchg
fs
xor
nop
xchg
mov
loop
cmpsb
sarl
in
iret
mov
in
test
aaa
lcall
and
mov
iret
dec
push
mov
dec
sbb
ret
inc
ret
add
cmp
loope
pop
movsb
flds
xchg
xchg
xchg
and
cmp
pop
mov
pushf
sahf
ljmp
mov
pop
adc
xchg
xor
hlt
xchg
inc
daa
mov
repz
movsb
pop
jbe
sub
in
mov
jmp
jae
stos
sub
dec
test
outsl
push
xchg
cmp
ja
jno
cld
insb
aaa
lds
cmp
shlb
int
hlt
fldl2e
and
dec
lea
repz
test
paddb
or
lcall
rcrb
mov
testb
inc
dec
test
fwait
lcall
roll
push
subb
aaa
adc
frndint
jae,pn
mov
xor
test
mov
ja
fiaddl
shll
mov
movsb
ds
add
or
dec
fldt
push
jae
xor
pop
std
inc
dec
mov
mov
xor
mov
hlt
in
sub
add
xor
or
push
movsl
dec
aam
sbb
stos
cli
aad
pop
inc
cmpsb
xor
insl
out
rcrl
ja
int3
mov
push
mov
xchg
xor
mov
adc
inc
and
jg
mov
push
push
push
stc
cli
sarl
pop
in
sarl
je
sbb
es
test
cli
inc
cmp
add
loop
add
push
fisubs
aad
jge
fchs
jb
das
aaa
loop
push
stos
cld
iret
lahf
pop
mov
mov
pop
mov
dec
mov
and
mov
out
jge
das
std
insb
pop
popf
xor
xchg
aaa
repnz
xchg
sub
scas
in
inc
pop
outsl
adc
fcoms
movsl
adc
mov
lock
mov
cltd
dec
push
jmp
pop
sti
push
dec
adc
xorl
into
enter
movb
loope
das
call
xchg
ret
testl
fimuls
jo
xchg
dec
out
xor
add
lods
sub
faddl
or
std
mov
and
incl
xchg
mov
repnz
adcb
imull
xchg
sbb
jp
subl
mov
xchg
and
test
xor
xchg
movsl
mov
mov
adc
out
lret
shlb
jae
jmp
sub
notb
mov
iret
into
xchg
ret
jbe
dec
std
cmpsb
dec
adc
and
cmp
fimuls
adc
xchg
add
call
in
or
and
adc
hlt
arpl
pop
rcl
les
jl
lea
xor
movsb
in
das
or
pusha
pop
xchg
mov
sarl
popf
into
dec
cmp
cmc
popa
inc
pop
nop
mov
ret
or
pop
adc
xorl
int
inc
inc
out
dec
jecxz
jmp
lahf
mov
jne
mov
test
std
pop
cmpsl
pop
or
jb
cmp
cmp
mov
int
jb
dec
add
ss
xchg
in
in
pusha
xor
bound
aaa
push
testb
mov
push
ret
mov
add
jno
push
adc
call
jnp
add
ljmp
mov
fs
sub
outsl
mov
stc
dec
jnp
mov
xchg
mov
sub
push
sti
or
and
ret
and
cmp
insl
jne
aam
jge
mov
roll
cmp
pop
icebp
nop
cmovns
sub
loop
into
movsb
pop
mov
add
mov
mov
mov
dec
arpl
lds
loopne
ja
aad
sbb
mov
dec
in
je
sbb
sahf
adc
leave
lret
les
jle
inc
mov
dec
inc
sub
or
repz
pop
orl
mov
cld
mov
loope
jle
mov
out
movsb
inc
dec
js
inc
ret
jmp
subl
cmpsb
ret
aaa
inc
sbb
pop
loopne
dec
sar
shll
stos
cli
push
dec
or
loopne
sbb
in
dec
rcll
mov
jbe
aad
or
pop
inc
cmp
push
sahf
repnz
inc
es
dec
mov
movsl
jmp
sub
outsl
sarb
or
sar
mov
or
adc
std
dec
mov
pop
jp,pt
mov
push
sti
clc
adc
mov
jbe
icebp
or
das
adc
cmp
iret
pop
mov
out
inc
shrb
fdivrl
jge
fdivrl
push
xor
insb
adc
xchg
mov
js
and
cmp
pop
int
inc
mov
loopne
push
inc
cmp
cmp
push
rcrb
jecxz
rorl
jo
or
mov
rclb
lret
in
cli
arpl
mov
mov
jg
jecxz
fwait
mov
pop
push
addr16
out
and
cmp
sub
dec
xchg
out
lods
in
cmp
ljmp
leave
mov
lock
dec
jae
inc
ds
dec
repnz
sub
clc
popf
movsb
xchg
mov
test
push
dec
adc
lock
xchg
dec
clc
sbb
in
dec
sbb
mov
iret
shlb
imul
mov
aam
sti
fimuls
jno
jns
inc
aaa
dec
adc
sbb
mov
dec
sub
pop
add
mov
cmpsl
aad
out
js
iret
adc
push
cli
xor
xor
bound
in
gs
fstpt
testl
jmp
inc
sub
jmp
pop
daa
loope
adc
push
fs
dec
jb
cltd
mov
mov
xor
adc
add
das
roll
adc
bound
push
sbb
xlat
inc
inc
es
iret
push
in
fsubrs
push
adc
cld
jl
testl
mov
test
iret
ret
leave
mov
pop
push
lea
dec
mov
pushf
xchg
out
jo
xchg
test
inc
jl
dec
dec
jmp
les
ds
inc
les
xor
outsb
dec
ss
xchg
and
fnstsw
loopne
mov
mov
out
mov
adc
sbb
les
cli
sub
xchg
ds
and
jne
inc
push
pop
out
clc
mov
int
mov
or
lcall
pop
mov
ds
fidivs
rcrl
mov
or
add
lock
add
aaa
out
add
das
xor
or
sub
int
dec
imul
js
xchg
sub
dec
cmc
cmc
out
pop
cmc
cmpl
arpl
out
in
mov
leave
add
scas
cmp
sub
pushf
xchg
sbb
push
jmp
inc
sub
rcr
and
cmp
push
gs
dec
int
mov
mov
sub
push
bound
lahf
jns
pop
jo
pop
aaa
shrd
xchg
push
daa
call
je
sub
xor
cs
add
fcomi
fcoml
pushf
add
xchg
je
lret
and
neg
icebp
push
cmp
insl
push
sbb
xchg
sub
push
into
fisubrl
jge
ss
jnp
das
cmp
scas
aaa
mov
mov
mov
add
int
ds
add
loope
movsb
mov
loope
mov
data16
push
test
lods
popa
scas
mov
mov
adc
fnsave
jp
test
and
sbb
adcl
xchg
fcom
out
pop
add
cmp
iret
cwtl
inc
jg
lods
daa
js
sbb
jecxz
das
pop
jp
xchg
xchg
je
bound
into
fucom
insb
dec
lcall
shll
mov
dec
jnp
insb
pop
dec
push
pop
dec
js
push
mov
and
rorb
movsl
jecxz
leave
cltd
ret
call
pop
cmp
popa
xchg
lcall
jnp
ljmp
add
mov
sub
insb
mov
hlt
sbb
stos
hlt
mov
sub
dec
inc
aad
ja
and
sahf
notb
addb
push
sub
jae
jns
popf
test
pusha
mov
xchg
cmp
les
cwtl
add
pop
dec
jmp
jg
pop
pusha
ja
pop
call
push
xchg
mov
adc
aas
pop
mov
test
and
pusha
inc
idiv
lret
mov
subb
mov
lahf
jl
sub
lods
push
mull
mov
inc
mov
bound
inc
arpl
jl
outsb
rclb
mov
push
fsubrl
or
inc
nop
cmc
mov
clts
pushf
sub
lea
jo
stos
xor
push
pop
ret
cmpsl
jne
test
arpl
ss
xchg
mov
xchg
mov
sahf
pusha
lea
insl
xchg
jecxz
mov
popf
xchg
sbb
loopne
out
rclb
addr16
sti
xchg
adc
mov
mov
dec
cmp
sbbl
jb
js
outsb
fs
mov
dec
pop
aam
push
mov
ds
mov
jns
sti
sub
adc
xchg
inc
les
sahf
and
in
adc
subl
int
imul
add
andl
sbb
adc
mov
repz
aad
pop
xchg
stos
jg
cltd
push
adc
pop
aad
sbb
mov
mov
lods
out
arpl
es
jmp
mov
clc
bound
and
scas
inc
movsb
add
in
fildll
mov
pop
movsb
pop
mov
sbb
test
and
jne
or
aas
push
add
test
std
mov
arpl
mov
add
xchg
push
stos
movsl
inc
push
stos
inc
adc
sub
jb
sbbl
sbb
xor
push
jp
add
mov
inc
ds
or
cwtl
pop
inc
out
and
int
jle
aaa
repz
or
call
lods
or
xor
pop
jecxz
dec
lock
jns
lret
add
cmp
stc
xchg
orl
lcall
cmpsl
pop
adc
inc
inc
push
mov
fidivrs
xchg
dec
cli
loopne
xor
xor
in
xor
xchg
cmp
ss
in
stos
inc
ret
mov
mov
aad
cli
push
pop
or
cmp
xchg
or
dec
adc
mov
cmp
xor
bound
loope
call
add
cmp
mov
enter
add
pop
dec
cld
push
fstpl
addl
ret
dec
mov
fsts
lds
test
pop
repnz
add
mov
add
sub
loope
xor
lret
and
scas
push
xchg
fmul
mov
orb
pop
daa
xchg
jg
fcmovnb
iretw
int
addl
loope
cmp
je
gs
addl
ja
sti
cli
inc
divl
push
mov
outsl
mov
lds
mov
pop
sbb
or
lea
addr16
inc
pop
and
push
fwait
xchg
lock
pop
clc
add
rclb
dec
sarb
inc
subb
mov
push
add
popf
or
shlb
enter
les
jg
fcom
pop
fcompl
jmp
pop
mov
adc
dec
ljmp
sahf
ds
insb
cmp
mov
pop
cmp
push
push
jnp
fildl
jmp
adcl
movsb
in
dec
sbb
mov
popa
call
pusha
pop
inc
test
mov
dec
ds
sbb
cmp
imul
iret
push
lods
add
xor
pop
jp
push
sbbl
push
int3
daa
jbe
push
out
sbbb
int3
sbb
lea
fldt
sbb
sub
and
xor
mov
rcll
call
ljmp
sbb
ss
ss
jnp
cld
lods
adc
pop
inc
stos
mov
xchg
xor
fwait
jmp
cli
mov
sbb
add
jb
dec
jb
sub
xchg
or
xor
fisubrl
sub
out
repz
fwait
mov
push
cmpsb
mov
fwait
mov
inc
mov
pop
pop
cmp
sub
push
xchg
dec
sarb
lods
dec
adc
repnz
cmp
fistps
out
jne
mov
and
fsubrp
cmp
popa
lcall
cld
sub
inc
mov
cli
mov
in
enter
int3
sbb
ret
shrl
lods
inc
int
std
and
sbb
jle
xchg
fwait
icebp
pop
add
std
push
dec
xor
mov
out
in
in
aas
add
pop
inc
xor
test
jnp
cmp
mov
xchg
or
cmp
sub
mov
ss
jmp
add
or
dec
mov
pusha
fidivrs
pop
clc
cmpsl
in
mov
call
xchg
mov
xor
add
adc
iret
or
push
mov
pop
mov
fidivs
out
pushf
pop
addl
fsubl
mov
cmp
lods
mov
les
das
or
pop
aas
pop
dec
pop
lcall
pusha
sub
sti
push
mov
stos
fldlg2
adc
mov
ret
sub
aas
lods
sbb
jns
outsl
pop
inc
outsl
add
jmp
rcl
pop
jo
sub
push
bound
dec
jbe
push
xchg
add
imul
pop
add
outsl
jbe
popa
nop
and
adc
fcomps
push
adc
daa
xchg
mov
mov
inc
mov
pusha
std
rorb
adc
or
lret
cmp
lret
dec
push
dec
popf
ljmp
sub
push
ficoml
imul
ror
cmpsl
push
push
and
lret
xor
fnsave
push
xlat
push
inc
mov
mov
xchg
ror
out
std
mov
aam
mov
mov
mov
inc
push
xchg
mov
inc
scas
fsubr
xor
nop
inc
fidivrl
mov
pop
or
sbb
pop
xor
dec
sub
test
inc
or
xchg
popa
iret
movsl
jmp
xchg
movsl
aas
sbb
inc
ret
stos
cld
xlat
lret
jmp
push
inc
stc
inc
push
ja
cld
sub
cmpsb
cmc
or
cmp
add
mov
es
push
rcrl
addb
push
add
addr16
lcall
jl
pop
xor
cmpsb
addr16
adc
aaa
lcall
push
push
pop
jnp
mov
mov
test
ja
cmc
mov
aam
inc
cmp
jne
enter
mov
aas
fmuls
push
mov
leave
movaps
sbb
popf
adcl
fcomps
ja
addl
fistpll
rorb
push
cs
pop
movsb
cltd
dec
add
repnz
mov
shrl
sbb
sub
add
aas
mov
inc
add
add
jp
and
sahf
xchg
sbb
dec
jp
in
xchg
pop
xchg
add
dec
adc
xchg
stc
rclb
iret
shl
mov
inc
or
sbb
inc
fdivr
scas
cmpsl
adc
jl
scas
jb
clc
sbb
pop
mov
push
in
jg
mov
aaa
mov
fcompl
cmp
mov
pop
inc
stos
and
mov
jb
sti
fcomps
add
in
imul
cmp
andl
dec
outsl
push
adc
jmp
sahf
push
ror
jnp
cmp
shl
cmp
stc
xor
stc
loopne
scas
ficomps
int3
sarb
sti
push
inc
mov
pop
or
stc
icebp
xor
shlb
inc
mov
into
push
in
push
sbb
rclb
and
lock
in
mov
dec
sbb
jmp
push
cmp
fsubr
push
lds
xor
stos
repz
cmp
jb
mov
cmp
movsb
push
jnp
add
mov
push
adc
cs
xor
or
call
and
insb
popa
int3
bound
push
dec
pop
pop
dec
push
push
or
cmp
push
cmp
push
push
inc
in
call
xchg
sti
mov
push
pop
xor
aaa
cmc
sti
aaa
testl
lods
les
pop
imul
xorb
inc
xchg
mov
xchg
ljmp
jg
ficomps
aaa
and
xchg
sbb
and
inc
cmc
and
out
mov
xor
cmc
in
out
cmp
repz
fldcw
add
loop
mov
cmp
adc
cmpsb
sbb
xor
roll
jl
sbb
sbb
xchg
mov
aaa
lahf
lea
popa
xorl
shlb
and
filds
ret
xor
sbb
jne
lcall
aad
xor
push
cmp
mov
test
std
mov
jle
cmp
xchg
push
out
inc
loopne
jb
add
cmp
stc
rorb
pop
sub
push
xchg
test
es
cmp
cmp
mov
jbe
lods
dec
push
add
pop
mov
adc
test
fldcw
lahf
inc
cli
hlt
mov
ret
insl
adc
in
mov
adc
in
iret
inc
pop
pop
sub
push
fldlg2
jecxz
jb
mov
jl
iret
cmp
leave
fdivl
mulb
pop
push
std
and
fwait
xchg
test
hlt
and
std
xor
pop
in
dec
mov
in
mov
dec
test
inc
in
inc
addr16
inc
xchg
jecxz
xor
xadd
test
pop
or
das
jp
aas
js
aaa
mov
lea
repnz
and
add
mov
aam
mov
scas
push
subl
adc
jo
into
fsubs
pop
stos
pop
jbe
jmp
mov
xor
pop
mov
and
mov
or
mov
insl
sti
add
dec
fidivrl
rclb
clc
inc
and
in
mov
adc
xchg
cmpsl
andb
push
ja
inc
fldl
leave
and
adc
fidivrl
push
or
int
popa
xchg
mov
or
ja
dec
inc
mov
pop
inc
stos
je
out
or
test
std
mov
hlt
cmp
pusha
cmp
in
arpl
fnstcw
psrlw
cwtl
hlt
js
mov
xchg
adc
jle
and
fcomps
xlat
add
pop
leave
push
test
data16
ss
jo
loop
loopne
mov
fwait
sbb
lods
dec
pusha
xchg
pop
jnp
push
stc
mov
sbb
push
dec
call
mov
push
leave
cwtl
adc
in
jnp
and
int3
push
fimull
inc
or
jae
push
add
cltd
fidivrs
int
out
mov
call
das
pop
cmpsb
inc
fistpll
movsl
inc
xor
bound
push
ss
xchg
xor
cltd
in
fwait
mov
lret
cmc
mov
push
cmp
shrb
xlat
pop
scas
lret
xchg
ljmp
xchg
sbb
lcall
adc
pop
push
hlt
sub
imul
repz
add
in
dec
dec
outsl
mov
arpl
push
dec
loope
cmp
mov
or
xor
sbb
dec
push
test
sbb
pop
out
sub
shrl
push
and
outsb
pop
mov
ss
push
sbb
xchg
dec
add
in
push
out
out
mov
roll
shlb
sub
aas
mov
jecxz
sbb
jle
js
pop
sbb
ret
sub
aaa
fdivrp
stc
sbb
lock
cld
jns
arpl
sub
inc
jl
imul
pop
aad
or
addl
popf
mov
lea
div
out
and
push
push
iret
mov
and
jno
and
mov
cmpsl
mov
mov
fnstcw
insb
and
dec
cmp
test
mov
pop
sahf
mov
fisubrl
push
lock
aam
das
add
xor
xor
jno
insb
fsubrs
mov
out
ror
bound
fnstenv
or
sub
sbb
sbb
add
mov
fisubrl
inc
and
cmp
iret
movb
mov
dec
fwait
xchg
inc
idivl
sahf
mov
enter
mov
mov
add
imul
mov
mov
mov
add
or
mov
mov
jmp
aad
mov
mov
rorb
sbb
in
daa
sbb
adcl
addl
adc
test
xchg
xchg
pushf
sub
push
cmp
sub
and
cmp
outsl
adc
dec
pop
daa
cli
jne
pushf
mov
sbb
jae
adc
cmp
call
std
sub
xor
cmpsl
es
shr
jbe
mov
jne
les
roll
mov
paddq
adc
mov
cld
sub
jmp
cmp
inc
std
orl
scas
mov
inc
adc
pop
pop
xor
mov
add
dec
leave
sub
cwtl
popf
iret
daa
jmp
cmp
and
fldcw
ret
ss
int
mov
pop
lret
pop
rcr
cmpsb
jns
adc
push
aaa
gs
call
push
repz
pop
in
outsb
cltd
mov
jg
and
and
imul
jno
and
cmp
ret
or
nop
mov
sahf
cmp
out
add
inc
xchg
shrb
test
jecxz
into
adc
dec
out
insl
sub
daa
or
dec
adc
hlt
js
fdivl
ret
scas
push
xchg
dec
sahf
mov
jb
cmp
xchg
adc
inc
adc
cmp
sahf
mov
addr16
xor
nop
insb
jle
movsb
popf
das
cmp
das
xchg
ds
call
sahf
aam
leave
aam
inc
pop
xchg
mov
sbb
add
add
inc
int
sbb
sub
sbb
in
dec
js
daa
add
mov
pop
icebp
les
cli
out
fxch
adc
in
mov
js
lcall
dec
pushf
cld
sub
ja
xlat
scas
jb
sbb
mov
pushf
inc
xchg
pop
aad
jle
xorb
cltd
pop
sub
test
mov
mov
xor
mov
imul
add
mov
sbb
push
cmpsb
sub
push
sub
ficoms
scas
inc
pop
das
and
pop
jecxz
pop
subl
outsl
and
notl
repnz
or
ja
in
js
and
pop
push
test
cmpsl
inc
fisttpll
mov
xchg
mov
xor
in
push
add
and
mov
add
hlt
mov
jbe
mov
xchg
adc
mov
sub
pop
dec
int
imull
out
test
or
jns
cs
mov
dec
sub
cld
pop
adc
xor
cmpb
ret
inc
inc
dec
xor
jb
push
or
adc
iret
sbb
inc
fcmovb
testl
clc
adc
xor
std
fldcw
push
rcll
xor
shl
sub
mov
jmp
loopne
xor
adc
adc
cmp
nop
imul
popf
or
lret
test
xchg
push
cltd
ja
xor
sbbb
leave
pop
and
cmp
loop
mov
fbstp
cli
cmpsb
mov
push
dec
add
jo
and
or
popf
inc
pusha
and
cmpsl
out
inc
mov
icebp
cld
in
dec
test
push
scas
nop
dec
dec
lods
shlb
mov
aad
insl
inc
aad
into
pop
hlt
jno
nop
les
mov
loop
sarl
push
mov
xor
lahf
stos
clc
jmp
pop
xchg
movsb
aam
inc
lods
mov
sbb
pop
lret
or
push
inc
cwtl
test
mov
rorl
mov
nop
movb
jae
shl
jno
xchg
mov
data16
mov
nop
mov
push
jmp
add
xor
pop
add
push
outsl
cmp
pop
cltd
jge
adc
push
inc
mov
neg
insl
dec
int
pop
jbe
xchg
inc
fsubs
movsb
jge
aad
add
repnz
pop
bound
repnz
xor
popf
add
cmc
cmp
add
popa
xchg
mov
inc
mov
movsb
mov
fldl
call
mov
jge
sahf
mov
add
sarl
clc
dec
cwtl
and
mov
shll
icebp
andl
loope
sbb
mov
xchg
arpl
dec
mov
lods
push
sub
imul
push
pop
frstor
mov
xchg
pop
jecxz
fbstp
xor
dec
inc
andl
lock
and
sub
loopne
cmp
movsl
cmc
jae
lods
xlat
fsubl
mov
and
mov
int
mov
inc
mulb
inc
bound
mov
fcompl
sarl
jp
pop
xchg
out
lds
and
sub
in
enter
mov
ljmp
rolb
jbe
pop
xchg
jo
jmp
jge
adc
fbld
dec
add
test
jo
fsubrl
pop
cmp
cld
ficoml
pop
jle
lods
into
or
xchg
roll
inc
outsb
mov
xor
pop
mov
inc
push
cmc
xchg
movsl
shl
add
dec
addr16
sub
xchg
fucomip
sub
xchg
xor
inc
fdivrp
sarb
lret
adc
imul
pop
popf
fldln2
filds
std
cmp
push
push
xchg
arpl
mov
dec
pop
adc
jge
sub
sub
push
adc
popf
mov
inc
jmp
call
pop
lcall
aas
inc
ss
scas
imul
mov
fs
xchg
pop
inc
sbb
or
mov
sbb
jo
shll
mov
sbb
fucomi
sbb
das
adc
imul
sub
pusha
outsb
pop
dec
and
test
cmp
mov
pop
ds
and
pop
cmc
and
jl
repz
jge
xor
testl
mov
adc
cmp
es
negl
jno
loop
xchg
shrb
mov
imul
popa
inc
int3
or
stc
aaa
fdivrs
dec
sub
push
pop
frstor
push
inc
ss
rorb
and
jp
push
loope
push
push
sbb
lea
aas
in
loop
imul
inc
mov
push
loop
lret
add
adc
xlat
mov
or
and
imul
push
mov
dec
cli
sahf
jne
cmpl
adc
fldenv
push
nop
fsubrs
jmp
andl
in
cmpsb
cmp
lahf
enter
cmp
jp
sub
lds
sub
iret
cltd
aas
pushf
xchg
xor
and
push
testl
rcrl
and
mov
add
in
out
scas
aaa
push
or
in
outsb
lds
jae
movl
jp
test
mov
and
int
test
mov
jo
fldl
fsubs
pushf
js
scas
push
or
and
mov
mov
out
cmpsb
xor
add
or
in
scas
div
adc
fisubrl
aas
iret
js
push
push
mov
mull
sub
pop
xlat
push
sbb
mov
xor
push
and
repz
inc
pop
xchg
mov
add
shrb
xchg
inc
cmpsl
out
and
popa
shl
fsubrs
daa
enter
inc
shll
adc
xor
cmpsb
shll
stos
stc
out
xor
rcrb
xor
pop
cmpsl
pop
lret
adc
imul
add
ficoml
stc
dec
popf
ret
inc
mov
push
sbbb
and
or
lret
xchg
cs
nop
inc
out
out
sbb
loopne
inc
lahf
std
inc
sbb
ret
mov
rcll
or
sub
and
mov
ja
stos
call
jb
dec
lahf
push
jl
dec
sbb
jle
dec
pop
ret
xor
ss
adc
cmp
lods
inc
dec
ss
push
lock
push
fs
mov
ret
jmp
and
adc
out
sahf
or
out
cmpb
sbb
in
repnz
inc
les
dec
popa
adc
xor
insl
push
in
dec
and
dec
mov
hlt
pop
into
and
cld
jg
xchg
jmp
fiaddl
rcr
xor
xor
mov
and
pop
test
stos
in
or
inc
push
ror
fwait
jmp
push
pushf
dec
insb
add
out
ficoml
pop
or
lods
movsl
xchg
dec
mov
jmp
dec
lods
scas
lahf
shlb
cwtl
loope
js
adc
mov
es
adc
sbb
outsb
mov
push
mov
inc
ljmp
push
fwait
inc
ret
mov
cmc
jle
push
pushf
aaa
mov
sbb
insb
clc
cmp
mov
xchg
js
adc
cli
sbb
mov
and
cmpsb
add
jge
mov
nop
mov
add
inc
mov
or
insb
out
jb
in
xchg
and
jp
jge
pop
in
shrl
mov
icebp
imul
mov
out
and
lret
sbb
out
sub
leave
dec
xor
fs
push
pop
jnp
and
push
stc
mov
test
push
cmp
xchg
push
lahf
sub
lahf
xchg
pop
xor
insl
rorb
add
icebp
push
xor
addr16
adc
shll
lea
mov
ds
nop
mov
imul
add
fwait
stc
sub
ss
lret
daa
js
aas
push
movsb
cmc
xchg
jbe
ss
adc
aaa
mov
add
push
aam
int
call
xchg
pop
cli
aam
std
mov
or
cld
pop
subl
pusha
nop
or
push
loop
fistpl
sbb
lahf
mov
test
imul
xor
lock
cmp
and
fucom
les
loop
sub
repz
mov
adc
pop
xchg
iret
push
push
imul
cmp
jb
pop
jg
sub
add
and
mov
nop
rcr
cld
xor
xor
jo
and
icebp
push
lds
mov
insl
jne
hlt
out
repz
gs
aad
popa
outsl
dec
dec
push
into
push
xlat
imul
mov
ret
insl
mov
cmpsl
adc
cmp
adc
mov
ljmp
mov
xchg
xor
mov
pusha
or
into
jne
or
mov
rep
pop
js
lods
jb
pop
jno
push
sbb
das
xchg
and
pop
sub
mov
inc
mov
mov
dec
test
shl
cmc
imul
jae
dec
lret
xchg
pop
and
push
sub
lods
mov
pop
jne
subb
adc
jp
ror
imul
jl
add
lret
loope
rcll
push
xor
sti
ljmp
xor
jbe
mov
mov
and
hlt
test
stc
rorl
fmuls
ss
or
imul
test
pop
cmpsl
data16
mov
js
hlt
xor
adc
jb
xchg
inc
push
daa
pop
imul
in
jb
sbb
imulb
lods
cmc
f2xm1
sub
mov
test
idivl
xor
cld
sub
movsl
jecxz
mov
push
pop
sarb
adc
add
test
mov
or
cld
push
cmpsl
xchg
jb
jnp
mov
inc
mov
mov
mov
jae
int3
rcll
adc
lods
push
insl
push
xchg
jno
inc
push
shlb
pop
adc
aad
push
cmp
cmp
and
sbbb
pusha
mov
shrb
push
test
pop
jbe
in
mov
or
mov
stc
test
out
mov
jge
or
mov
inc
adc
arpl
into
dec
sahf
xorl
cmp
dec
bswap
mov
push
bound
lahf
das
aad
xchg
mov
fildll
ffreep
mov
cmp
push
xchg
mov
icebp
xchg
imul
mov
sub
call
fsubrl
fwait
and
sbb
xchg
xchg
out
fidivrs
sbb
lret
push
ret
pusha
repz
lea
and
ljmp
jecxz
cmp
outsl
lret
sbb
mov
ja
mov
xchg
sub
iret
leave
inc
cltd
push
inc
jnp
enter
sbb
fwait
out
mov
push
xor
jne
mov
lret
movsl
jo
push
or
ljmp
cmp
inc
cmpsl
test
push
mov
movsb
push
mov
ja
pop
das
sti
lds
je
or
xlat
mov
outsl
jbe
xlat
inc
push
cmp
xor
adc
into
jg
scas
pop
sub
pop
idivb
int3
dec
adc
je
movsl
add
js
fidivl
xor
add
xchg
and
and
leave
sahf
test
stos
loopne
icebp
and
test
scas
adc
dec
push
lret
or
ds
outsl
mov
mov
push
pop
xchg
dec
push
loopne
aas
jae
xchg
leave
cmp
mov
push
enter
and
xlat
xor
mov
fadd
out
mov
fstl
mov
and
ljmp
nop
outsb
sub
ret
mov
xor
mov
mov
fucomi
lahf
ret
loope
adc
ret
add
inc
popf
push
fistps
das
push
shll
out
and
clc
stos
mov
lret
ja
dec
xor
and
dec
hlt
xchg
lahf
xlat
mov
and
out
adc
sbb
popf
jge
cmpsb
movsb
out
sub
lods
popl
inc
push
ljmp
aad
add
gs
mov
mov
iret
push
mov
pop
push
or
or
add
mov
out
push
mov
xchg
xchg
sbb
bswap
rclb
lret
testb
je
popa
dec
adc
adc
dec
or
xchg
push
sbb
sbb
jb
cmp
xchg
jbe
ljmp
pop
lcall
lahf
mov
sbb
roll
pop
lock
cld
and
lret
push
xor
adcb
mov
repnz
aad
shlb
mov
in
jnp
mov
je
flds
dec
scas
xchg
push
ljmp
imul
cmpb
bound
test
and
dec
lods
push
out
fisubrs
loopne
add
adc
lcall
xor
sub
loopne
jns
mov
mov
mov
push
dec
jae
or
mov
lds
outsl
sahf
mov
lahf
into
jno
jmp
push
and
pop
xchg
mov
pop
inc
or
add
xchg
push
stos
jne
in
jp
lahf
loope
jl
out
sub
add
imul
mov
leave
jae
stos
cli
daa
addl
aad
lcall
jbe
and
and
push
pop
in
scas
into
sbb
sub
jns
pop
ljmp
add
lret
cvtps2pi
arpl
pop
bound
mov
mov
lock
xor
cmp
scas
mull
sub
cmp
mov
push
mov
cld
scas
das
test
add
hlt
xor
push
mov
lds
jne
mov
sub
in
mov
lds
push
jbe
leave
pop
popf
fstl
loope
or
mov
pop
icebp
fs
dec
fildll
push
and
leave
dec
movsl
lret
popa
ljmp
rclb
test
out
sub
into
push
outsl
popa
test
mov
mov
adc
dec
dec
dec
xor
outsl
lahf
lcall
xlat
test
adc
daa
aas
jns
dec
je
add
mov
sbb
mov
data16
pusha
popf
jge
sub
mov
or
and
mov
jge
mov
xchg
mov
mov
iret
loope
movsl
push
xchg
movsb
cld
cs
outsb
outsb
or
jge
xchg
pop
loope
mov
dec
inc
into
or
sub
lods
and
cmpl
movsl
arpl
push
adc
push
and
jno
inc
pop
adc
mov
cmc
stos
push
insb
jge
mov
and
lret
mov
lcall
or
fs
call
dec
dec
pop
outsl
lret
sbb
sbb
or
xchg
out
sub
cmp
das
std
jae
mov
dec
push
shrb
mov
add
cmp
ss
ljmp
push
mov
ret
add
and
data16
or
into
icebp
add
arpl
leave
lahf
popa
lret
and
sti
cs
es
sub
inc
lock
adc
mov
jg
and
jmp
out
sub
inc
lock
pop
and
xor
push
movsl
dec
mov
std
xor
int
addr16
out
jge
xchg
gs
cmp
pop
cs
out
cmpsl
pop
mov
cmp
xor
and
xchg
pop
sub
lods
lea
icebp
sub
cmp
pop
jbe
mov
outsl
add
mov
xchg
inc
sub
add
cmp
iret
mov
leave
jbe
jnp
push
xrstors
negl
imul
add
pushf
xchg
add
xchg
add
test
lods
pop
or
sub
push
inc
out
je
fmuls
mov
leave
push
mov
add
roll
pop
loope
sbb
movsb
pusha
das
cmc
fcos
dec
sbb
xchg
jnp
loopne
inc
mov
fstps
and
jbe
and
jg
sti
and
outsl
add
sbb
mov
out
lods
pushf
push
out
pop
stos
scas
icebp
fwait
xchg
or
cwtl
xor
ss
out
pop
pop
lds
and
ljmp
enter
ds
adc
or
push
push
adc
mov
out
out
jbe
lea
dec
scas
ljmp
call
pop
sub
sub
jnp
add
ret
sub
es
xchg
fisubl
sbb
or
jmp
lret
xchg
scas
pop
dec
cltd
sub
sbb
and
cmp
out
or
ficoml
add
cmp
imul
jnp
add
ficomps
or
stos
call
in
addr16
call
fcmove
adc
fs
test
ljmp
stos
out
jl
pop
mull
ss
pop
int3
data16
xchg
and
push
and
fsubp
push
xor
adc
dec
out
arpl
mov
or
dec
sub
sbb
repnz
mov
jo
fisttpll
loopne
mov
mov
xchg
jns
shlb
mov
popf
dec
movsb
loopne
add
adc
pop
idiv
sbb
data16
xlat
je
sub
push
mov
or
leave
lret
mov
insb
outsl
cmp
nop
jmp
fsts
jns
pop
adc
adc
mov
addb
ja
inc
daa
lret
insl
jge
jae
je
xor
jno
stos
push
inc
mov
aas
push
xchg
push
jmp
mov
inc
les
sub
xchg
xchg
pop
lret
mov
or
cmp
xchg
xor
pusha
pusha
jo
mov
and
movsb
stos
lds
mov
pusha
xchg
mov
mov
roll
icebp
xor
sbb
imul
imul
adcl
adc
hlt
mov
adc
dec
imul
dec
push
add
dec
jns
mov
lds
sti
mov
jl
test
xchg
sub
repnz
sub
mov
in
rclb
pop
mov
mov
imul
or
mov
dec
roll
sub
insl
pushf
test
add
fldl2e
int3
xchg
xor
cmpsl
xor
pop
call
sub
aas
imul
and
outsl
pop
imul
cmp
lahf
shlb
jno
add
adcl
aaa
mov
out
out
lock
lock
imul
or
push
xrelease
roll
adc
pop
sarb
ss
jmp
adc
jne
outsb
cmpsb
in
or
jb
cmp
push
inc
jnp
sub
daa
out
test
outsb
mov
sbb
lea
add
xchg
mov
ret
fdiv
mov
push
fcoml
es
sbb
lea
movsb
mov
aaa
ss
sarb
bound
outsb
outsb
adc
sysret
mov
repz
add
jno
jecxz
cmc
test
add
dec
add
cmp
jo
xor
test
inc
sub
adc
iret
inc
sbb
push
out
xor
xor
lea
imul
aaa
mov
dec
div
push
xchg
sub
jb
and
push
and
cld
push
mov
pop
dec
or
cmp
fsubl
cld
push
std
push
lahf
out
out
adc
xchg
pop
mov
inc
push
ret
dec
ja
cli
orl
xchg
imul
add
cld
jae
sbb
xchg
mov
mov
adc
shl
jbe
inc
dec
add
je
jecxz
loop
xorb
test
mov
dec
mov
fldcw
mov
xchg
add
or
push
sub
addb
sbb
mov
jecxz
xchg
insl
sub
out
sbb
ss
enter
and
add
dec
mov
movsb
insb
test
xor
ss
mov
jb
jo
shlb
jns
les
cmpsb
lods
xchg
outsb
out
lret
and
mov
ss
out
repnz
xor
xchg
fs
in
push
fcoms
stc
lahf
popf
push
mov
outsb
or
jne
les
sahf
scas
lret
mov
hlt
inc
daa
push
out
mov
test
sub
adc
inc
jmp
push
lahf
push
adc
test
ret
xlat
gs
bound
mov
push
jb
add
sbb
mov
lret
push
sar
stc
dec
xor
inc
push
cwtl
cld
xchg
cltd
inc
and
pop
test
jns
cli
cwtl
jnp
jnp
adc
sub
pop
push
add
cmpsl
clc
xor
xchg
jae
xchg
lods
inc
xor
inc
cmp
decb
insl
insb
dec
mov
imul
xor
leave
sti
mov
movsb
add
fbld
daa
inc
movb
mov
jne
out
mov
dec
dec
dec
rcrb
aad
popa
cmp
iret
and
jle
lret
sub
in
movsb
mov
lods
outsb
fwait
add
add
imul
push
dec
jecxz
push
mov
xor
mov
sub
icebp
adcb
sar
add
cwtl
push
xchg
movb
loopne
pop
pusha
mov
lea
fwait
xchg
pop
mov
adc
push
js
xchg
xchg
xchg
xchg
lea
imul
push
imul
imul
jg
mov
pop
push
adc
pop
test
int
cmc
cltd
xlat
icebp
aaa
adc
cmp
push
and
fstpt
pop
stos
mov
into
cld
cmpsl
sbb
shr
stos
add
testl
cmp
and
inc
push
outsb
cmc
cmc
je
sbb
mov
nop
pop
push
in
cmpsl
adc
std
mov
gs
xchg
push
pop
call
shlb
andb
aaa
mov
push
dec
je
sbb
andl
test
lods
mov
lret
in
mov
movsb
and
adc
movsl
mov
mov
push
mov
fcmovnbe
jmp
test
xchg
aad
fwait
das
shrb
iret
test
xchg
sbb
xchg
mov
xlat
xchg
cmp
aad
and
in
fildll
cmp
nop
push
adc
push
mov
mov
aad
pop
lock
jecxz
fnstenv
in
or
addb
xor
aam
mov
adc
int
add
fsubl
ficompl
sahf
sahf
inc
test
push
mov
jge
lea
repz
test
jo
xchg
popa
inc
aam
in
adc
ss
leave
movsl
mov
cmpsl
pop
mov
aad
lret
cmp
jae
test
into
ret
andl
sub
mov
and
iret
test
jbe
imul
and
in
rcrb
adc
fistl
mulb
inc
push
ret
aas
dec
fst
mov
popf
ret
add
cmp
rcll
xchg
sub
xor
inc
inc
xchg
into
fdivs
inc
sarl
iret
add
sub
xchg
dec
in
xor
les
xchg
lahf
jne
sbb
adc
out
adc
std
dec
imul
dec
fmull
les
pushf
shrb
cltd
mov
mov
and
and
dec
pop
sbb
mov
cs
jno
out
cltd
cmp
pop
lods
xor
xchg
enter
jmp
dec
mov
sbb
sub
sub
jg
int
cmpsb
roll
mov
pusha
popf
sbb
fs
xchg
xor
test
das
out
outsb
inc
add
loope
mov
das
xchg
jae
out
mov
mov
fsubs
and
cmp
ja
rclb
out
xlat
push
jmp
push
add
fsubrl
xchg
xor
sarl
icebp
out
xor
movsb
andl
stos
inc
inc
inc
xchg
inc
fsubs
enter
sub
inc
mov
shlb
or
mov
mov
faddl
cmp
sub
mov
add
xlat
xorb
cmp
out
insl
or
push
rclb
or
mov
shrl
push
pusha
in
pop
jb
dec
jo
movsl
es
adc
add
ljmp
out
movsb
es
sbb
jg
or
add
mov
cmc
add
rcl
ror
jp
xor
bnd
mov
inc
xchg
mov
es
cmp
pop
cwtl
jb
or
push
cs
mov
lds
rol
das
popa
pusha
sub
inc
rolb
mov
cli
or
arpl
mov
idiv
mov
add
sarb
in
imul
dec
testb
inc
or
adc
xor
adc
push
ss
inc
sbb
cmpsl
mov
mov
das
repz
mov
cli
inc
insl
test
mov
jg
aad
out
pusha
mov
dec
insl
inc
cmp
or
jae
adc
repz
inc
sub
jbe
jle
dec
xchg
mov
inc
pop
jae
ds
xchg
int3
mov
and
jecxz
push
and
fs
cmc
in
fisubl
lar
cwtl
or
popl
mov
dec
sub
cmp
jp
xor
cmp
or
sbb
js
push
cltd
call
leave
mov
mov
push
in
mov
mov
in
or
xchg
orl
icebp
jg
sbb
sub
int
push
daa
mov
shrl
out
jno
mov
push
push
lods
xchg
adc
or
mov
or
sbb
notl
cmpsl
leave
adc
dec
out
stos
cmp
xor
push
mov
pop
scas
test
test
dec
lcall
ja
fs
jb
mov
cmpsb
ljmp
loopne
sbb
xchg
in
jo
in
bound
sahf
push
js
pop
mov
jp
add
sub
dec
mov
pop
fcmovbe
addb
das
jp
mov
push
sbb
outsl
sbb
jmp
jle
pop
mov
js
cmp
pop
cmpsb
ret
jle
jmp
mov
les
out
push
lds
inc
cmp
dec
imul
pushf
mov
std
cmp
adc
decl
dec
sub
inc
add
pop
push
test
movsl
jo
push
lret
pop
fs
sub
xor
mov
aad
fwait
inc
pop
sti
adc
cmp
pop
sub
cmpsl
pop
pop
xchg
mov
lods
jl
mov
incb
pop
js
mov
out
jbe
cmp
pusha
mov
pusha
call
lea
icebp
data16
jb
flds
add
dec
adc
in
imul
lcall
cmpsl
mov
xor
add
jmp
and
dec
sarl
aad
adc
or
mov
cs
adc
mov
loopne
and
xchg
or
icebp
dec
sbb
add
add
loopne
jge
sahf
cmp
add
pop
fiadds
sti
loopne
push
adc
lcall
fcmovnu
dec
test
in
gs
sub
insb
repnz
stos
pop
dec
pop
xchg
push
mov
push
lret
xchg
cltd
out
jno
adc
arpl
jae
iret
jmp
fs
and
add
pushf
mov
divl
ds
sbb
lret
rolb
push
in
jle
cmpsl
xchg
pop
dec
ret
lds
aas
xor
mov
lock
aam
sub
mov
cmp
xor
les
pop
inc
or
stc
daa
and
js
sbb
pushf
aaa
lret
loope
inc
addr16
icebp
js
test
cmpsl
sbb
xor
clc
pop
pop
xor
mov
imul
sub
pop
sub
jecxz
popf
pop
cld
adc
mov
test
test
or
cmpsb
jle
cmp
or
ror
imul
jno
add
push
mov
scas
ucomiss
mov
and
cmp
pop
out
jb
fs
loopne
addr16
js
out
add
xlat
arpl
mov
rep
mov
mov
out
push
add
sbb
or
stos
pop
outsb
cmpsb
das
es
pop
push
adc
push
in
movsl
mov
xchg
scas
repz
dec
scas
ss
idivl
adcb
loope
add
add
xchg
mov
pushf
add
push
xor
repnz
sahf
int
inc
ret
es
and
outsl
mov
or
es
popa
push
pop
call
xor
ret
hlt
mov
mov
stos
pop
popf
mov
push
jg
mov
bswap
in
sbb
fadd
cld
mov
aaa
adc
test
movsb
xorb
inc
xor
fmul
jbe
inc
movsb
fs
rcrb
cmp
shlb
dec
fwait
sti
dec
mov
sbb
aad
xor
lods
jb
jno
xchg
dec
push
dec
push
jb
push
or
inc
es
jo
inc
cmpsl
mov
scas
sub
inc
int
xchg
mov
nop
sahf
data16
daa
and
mov
cwtl
dec
stos
sbb
scas
aam
push
mov
je
dec
cs
es
xchg
bnd
cmp
and
fiadds
pop
jbe
imul
inc
outsl
and
lret
adc
es
inc
dec
pop
mov
mov
movsl
mov
arpl
push
ret
lock
mov
sub
push
or
mov
lret
adc
and
or
and
mov
dec
outsb
xchg
dec
pop
loop
mov
sahf
data16
call
mov
out
mov
iret
rclb
jo
ljmp
mov
movsb
cld
nop
mov
add
xor
mov
mov
mov
add
and
mov
mov
mov
lea
mov
mov
mov
sub
add
mov
mov
xor
add
jne
mov
xor
mov
add
mov
pop
pop
pop
leave
ret
push
mov
sub
notl
push
sub
push
sub
mov
mov
mov
inc
mov
or
movl
movzbl
adc
movl
adc
mov
add
mov
adcl
sub
adc
mov
xorl
xorl
mov
andl
mov
inc
mov
cmpl
jle
jmp
push
pushl
pushl
call
cmpl
jb
mov
sub
mov
orl
mov
andl
mov
sub
andl
mov
inc
mov
cmpl
jg
jmp
push
call
cmpl
jb
mov
xorl
orl
mov
andl
mov
andl
mov
inc
mov
cmpl
jg
jmp
push
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
sub
movl
cmpl
je
cmpl
jbe
jmp
call
mov
dec
mov
jmp
mov
orl
add
mov
mov
sub
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jle
jmp
push
push
call
jmp
mov
mov
mov
neg
mov
xor
mov
add
or
mov
mov
mov
sub
mov
orl
mov
xor
add
push
mov
xor
add
push
mov
xor
add
push
lea
push
pushl
pushl
call
test
je
lea
push
mov
xor
add
push
mov
add
push
mov
mov
pushl
call
mov
mov
lea
mov
incl
mov
test
je
lea
mov
mov
mov
mov
mov
sub
mov
mov
xor
mov
sub
add
mov
mov
mov
mov
pushl
movb
mov
pushl
pushl
pushl
pushl
pushl
pushl
pushl
mov
call
pop
pop
leave
ret
push
mov
sub
adcl
movl
subl
lea
movzbl
sbb
mov
mov
movl
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jb
jmp
pushl
call
jmp
lea
add
mov
xor
mov
mov
mov
sub
xor
mov
adc
mov
adcl
xor
orl
add
xorl
mov
andl
xor
add
inc
mov
cmpl
jge
jmp
push
push
pushl
call
cmpl
jb
mov
mov
mov
add
movl
cmpl
je
cmpl
ja
jmp
push
call
xor
or
dec
mov
jmp
push
sub
mov
mov
mov
mov
mov
adc
mov
xor
and
mov
add
movl
cmp
movl
je
notl
mov
jmp
mov
xorl
xor
push
add
xor
xor
sub
mov
add
movl
push
adc
andl
jmp
xor
xor
inc
mov
cmpl
jae
cmpl
jl
jmp
pushl
push
push
pushl
call
jmp
mov
xor
subl
xor
movl
cmp
movl
jne
movl
cmp
jne
push
movl
jmp
mov
xor
adcl
add
subl
xor
add
movl
adc
subl
xor
orl
xor
movl
cmp
movl
jne
cmp
movl
jne
addl
mov
movl
cmpl
je
cmpl
jl
jmp
push
push
call
xor
xor
dec
mov
jmp
xor
add
mov
subl
mov
andl
jmp
xor
add
inc
mov
cmpl
jae
cmpl
jbe
jmp
push
call
jmp
mov
movl
xor
add
adcl
imul
mov
orl
xor
add
movl
cmp
mov
je
movl
cmpl
je
cmpl
ja
jmp
push
push
call
mov
dec
mov
jmp
mov
orl
add
and
mov
mov
xor
add
imul
sbbl
mov
mov
mov
mov
xor
mov
sub
mov
jmp
mov
xor
mov
mov
mov
xor
mov
sub
mov
add
mov
mov
add
mov
mov
mov
xor
xor
lea
mov
xor
add
imul
mov
xor
sub
mov
add
cmp
mov
jg
mov
mov
xor
mov
sub
mov
jmp
mov
xor
add
add
mov
mov
mov
xor
add
not
and
mov
movsbl
cltd
add
adc
jmp
pop
push
xchg
dec
add
shrl
ror
pop
mov
pop
addl
sbb
or
idivb
mov
mov
add
shl
add
dec
jb
ret
xor
enter
sbb
arpl
rorl
stos
cld
inc
or
mov
pop
jl
cwtl
pushf
jle,pn
stos
xor
incb
enter
and
test
sbb
filds
rcrl
inc
fimull
mov
dec
add
hlt
insb
fnsave
pop
push
pop
int
push
xchg
adc
and
test
in
enter
fldl
loope
popf
sub
out
pop
inc
nop
push
cmp
out
push
jecxz
mov
pop
pop
insl
in
jno
rcll
orb
dec
mov
or
mov
les
outsb
popf
mov
in
cli
mov
addr16
stos
push
or
adcb
outsb
xchg
jl
jnp
test
inc
xor
pop
jecxz
sbb
mov
jmp
les
inc
xchg
or
shll
xchg
test
iret
sub
and
adc
gs
jg
or
pop
shlb
xor
pop
sbb
mov
test
adc
bnd
fcoml
in
roll
loope
adc
outsl
push
or
lods
sbb
insb
sub
jns
inc
shlb
adc
fstl
repnz
and
pusha
push
mov
cmpsb
adc
cmpsb
popa
in
arpl
push
push
andb
push
mov
sbb
cmp
sahf
std
fdivrp
pop
and
iret
push
xchg
mov
mov
das
cmp
push
lret
out
sub
mov
dec
inc
fcmovnu
sub
sub
cmc
movsb
daa
sub
xor
sub
ret
mov
ret
sbb
mov
xchg
xorb
pop
pushf
lret
scas
in
sar
xor
push
pop
mov
xor
jns
fcoml
mov
xor
stc
adc
icebp
cwtl
dec
aad
call
dec
and
arpl
dec
mov
les
mov
es
jg
out
lret
dec
push
xchg
pop
cmp
jge
lods
adc
push
daa
push
inc
pushf
mov
add
xor
push
dec
ficomps
cli
enter
jo
shrl
popf
push
pop
push
and
push
cli
test
ret
jl
adc
or
jbe
fstps
pop
xchg
arpl
or
mov
pop
dec
loope
mov
stos
adc
stos
cmp
pop
jg
iret
adc
ret
test
call
shrl
push
cmp
lret
pop
mov
mov
mov
call
pop
xchg
xlat
jp
mov
mov
jl
popl
pop
add
outsb
mov
lcall
fdiv
fwait
negb
insl
js
cli
jmp
imul
lods
outsb
insb
jo
push
call
pop
xor
push
es
loop
sub
mov
push
pop
outsb
dec
and
fidivrs
loop
std
pop
xchg
xor
or
or
into
pushf
xchg
push
lock
outsb
cltd
mov
cld
or
mull
mov
adc
dec
inc
jmp
mov
dec
ljmp
sar
mov
pusha
dec
mov
mov
inc
inc
pop
pop
dec
aas
and
inc
fmull
lret
jns
popf
out
int3
sub
bound
ljmp
cmp
push
shll
out
pop
call
cltd
mov
adc
out
fcmovnb
and
cmp
push
loop
xor
mov
lock
das
sub
lds
jo
fldt
pop
push
adc
mov
adc
mov
aam
fmuls
mov
lds
dec
out
repz
test
outsl
push
push
test
jns
repnz
sbb
cmpsb
mov
nop
push
push
inc
ror
dec
outsb
lret
pop
sbb
mov
mov
addl
cltd
cmp
jg
adc
or
adc
fstpl
in
aas
cmp
and
data16
pop
inc
add
out
lret
xchg
fstp
add
sub
loopne
rcr
shlb
mov
in
xorl
mov
xchg
mov
pop
movsb
xchg
jnp
mov
sub
mov
outsb
test
and
sub
mov
aas
fidivs
mul
and
fsubrs
jmp
mov
test
test
push
mov
mov
inc
int3
cmp
jmp
cli
pop
lret
mov
push
pushf
movsb
pop
inc
loop
push
mov
add
inc
lret
adc
mov
es
cmpsl
in
jne
push
cmp
shl
xor
sub
cmp
fwait
aad
out
aad
or
and
cmp
in
cmp
fcmovnbe
clc
and
pop
mov
xchg
ljmp
sahf
popa
out
xorl
push
int3
xorl
mov
popa
dec
ror
lret
inc
push
les
popa
lods
ficomps
push
sahf
fdivr
imul
lret
shl
loope
jae
adc
mov
jmp
div
insb
inc
lcall
pop
pop
sbb
fsubrl
jmp
dec
in
push
in
gs
pop
add
movb
fsubr
clc
cmp
repz
out
jle
xchg
andl
push
mov
in
ljmp
mov
mov
sbb
jb
pop
cmp
call
cmp
mov
lods
repnz
cmp
jne
pop
hlt
call
loopne
icebp
mov
lret
pop
into
cmp
lods
add
call
mov
jle
ljmpw
xor
out
or
cmp
xor
adc
sub
or
mov
out
sbb
inc
daa
sbb
neg
adc
sub
or
ret
mov
push
icebp
mov
inc
xor
sbb
les
addb
cltd
nop
xor
out
out
inc
adc
mov
repnz
enter
hlt
jecxz
jno
fs
dec
int
dec
sub
sahf
xchg
insb
scas
shrl
pop
outsl
add
push
and
fs
sbb
cmpsb
ret
cmc
gs
xchg
lea
pop
test
aad
loope
and
lea
das
push
mov
ret
pushf
les
push
addl
sub
nop
push
test
out
jns
pop
push
dec
dec
xchg
sar
and
popa
aaa
repz
add
xchg
adcl
and
mov
add
cmp
cs
imul
leave
inc
fstpt
out
arpl
adc
inc
vpaddsw
ret
iret
clc
push
aad
push
in
xor
in
push
repz
data16
jns
xchg
mov
xchg
lret
mov
or
mov
aam
cmp
push
mov
fidivl
add
loop
mov
jg
daa
sbb
pop
shrl
loop
fistl
or
aas
lcall
mov
cmp
jnp
sti
movsl
je
mov
push
dec
test
jb
xchg
dec
pop
mov
push
cmp
dec
or
inc
push
push
mov
repnz
mov
xlat
mov
inc
shl
lret
js
and
clc
nop
and
sbb
fs
dec
add
mov
aas
or
xchg
adc
fsub
leave
daa
pop
xchg
dec
clc
sbb
ljmp
clc
lods
pcmpeqw
out
ficompl
add
xchg
stos
mov
push
or
or
push
and
gs
xchg
js
xor
sbb
pop
dec
inc
outsl
pop
ljmp
mov
and
mov
fisttpll
xchg
add
sub
cmp
push
sti
adc
jns
ficompl
xor
inc
inc
cmpsb
xor
dec
sub
mov
or
leave
adc
pop
sarl
loopne
nop
push
ret
dec
in
out
sbb
icebp
pop
pop
mov
xchg
andl
xor
pushf
in
push
jo
jl
add
inc
fs
inc
mov
insl
lock
jbe
enter
or
cmpb
cmc
in
iret
cmp
fldl
mov
arpl
icebp
xor
pusha
and
dec
pop
add
ljmp
jb
cmp
scas
pop
jbe
jle
pop
xchg
out
shll
hlt
adc
jns
add
mov
icebp
cmp
or
out
xor
fcmovb
das
js
ror
lea
mov
and
test
shlb
adc
add
idiv
cmp
subb
popf
outsb
pop
jecxz
jecxz
sub
mov
cli
pop
insb
fsubl
pusha
pushf
sbb
movsb
and
and
in
inc
xor
fisttpl
hlt
outsl
xchg
xchg
jmp
mov
inc
jecxz
loop
mov
in
dec
fdiv
loopne
push
insb
mov
inc
push
jnp
loopne
dec
xor
call
xor
insl
mov
sub
mov
pusha
in
icebp
lea
xchg
sub
sahf
lahf
out
mov
xchg
or
pop
adc
xor
pop
mov
and
mov
xorb
cmc
hlt
gs
mov
dec
inc
push
inc
pop
or
daa
jmp
ds
dec
arpl
lock
fdivrl
mov
sub
mov
mov
lods
shl
xchg
sbb
xchg
aas
sbb
mov
out
mov
sbb
or
hlt
popf
pop
js
and
xchg
add
inc
jecxz
dec
cli
ss
sub
nop
jmp
fs
out
gs
adc
dec
mov
sub
les
hlt
and
adc
ficoml
pop
sub
ljmp
arpl
or
daa
push
mov
sub
aas
jecxz
adc
push
pop
xor
push
loopne
pushf
mov
movsb
and
inc
mov
jmp
repz
add
dec
add
mov
sbb
sub
daa
xchg
ja
lret
aad
std
inc
jae
push
ffree
cmc
jo
inc
mov
sbb
inc
fdivrl
fistps
push
fisubrl
lds
insl
stc
std
push
arpl
addl
pushl
jp
insb
dec
lods
imull
cli
sbb
jns
sti
bound
pop
data16
std
pop
loopnew
addl
lods
push
xchg
and
pop
inc
sahf
shrb
and
cvtpi2ps
mov
pop
jae
js
ret
mov
jo
mov
push
stos
fsubs
adc
ds
imul
shll
movsb
lahf
loope
inc
and
repz
outsb
and
push
or
movsb
rcr
out
rclb
addr16
jle
in
bnd
cmp
and
mov
int
add
inc
enter
subb
xor
jb
call
scas
push
bnd
mov
cmpsl
in
in
mov
xchg
jae
or
sub
fsubrl
add
push
dec
arpl
lds
cmp
in
subb
pop
jl
mov
or
ds
out
dec
pushf
mov
sub
lds
pop
or
adc
pushf
lods
xor
js
mov
ret
enter
or
xor
lahf
mov
out
add
xchg
cmpsb
aas
fdivp
xchg
movsb
xchg
jle
or
mov
outsb
pop
lods
inc
cmp
punpcklbw
cld
mov
jg
lods
shlb
js
fwait
in
cwtl
ret
jp
sbb
sbb
rcrb
or
fcmove
cmp
add
adc
jge
pop
sub
movsb
xor
push
mov
cmpsl
sbb
push
loope
icebp
adc
or
mov
add
xchg
pop
rolb
pusha
mov
cltd
mov
pop
test
adc
mov
inc
mov
rclb
pop
loope
movsb
aad
mov
ss
push
jb
xchg
mov
xor
push
push
inc
popf
int
gs
push
xchg
push
lods
fmull
inc
dec
dec
sub
or
and
add
pop
fldcw
push
mov
add
mov
sar
mov
loope
push
mov
jbe
add
jo
test
push
sarb
std
dec
fldenv
arpl
les
cmp
push
and
and
daa
repnz
faddl
orl
dec
and
mov
push
xchg
mov
cs
rcrl
add
push
out
and
jb
add
mov
popa
add
lret
dec
loope
inc
mov
popf
xor
lcall
dec
mov
cmp
lods
jge
add
lock
xor
jb
shlb
pop
pop
fisubs
jbe
push
cmp
int3
pusha
cld
xchg
ss
pop
lcall
clc
add
inc
shl
push
std
cli
lods
pop
aam
lods
mov
xor
rolb
jbe
cmpsl
popa
addr16
std
scas
inc
je
add
pop
add
in
add
icebp
cmp
xor
nop
clc
push
sbb
mov
xchg
xorl
xlat
int
add
arpl
dec
xor
outsb
jecxz
ja
std
sub
fists
sbb
iret
mov
cltd
and
add
cmpsb
xor
sub
jb
in
mov
vmovaps
add
scas
je
mov
dec
popa
mull
xor
aas
sub
cli
mov
mov
xchg
mov
or
sub
lods
sub
fnstsw
bound
outsb
out
add
fldcw
mov
rorl
inc
mov
push
ss
jge
movsb
sbb
adc
lret
jl
jae
push
addr16
outsl
lods
nop
jo
xor
xchg
cmpsb
ljmp
pop
cmp
mov
xchg
js
lcall
add
sub
cmc
pop
sti
in
lcall
cmc
popf
jnp
cmp
in
cmp
int
add
fidivrs
pop
xchg
dec
rcl
push
jae
jns
insb
std
das
stos
lcall
les
adc
ja
xor
pop
mov
scas
test
push
xlat
rorl
or
jbe
cmp
lock
push
shll
ja
pop
jg
cwtl
cmpsl
ljmp
xchg
add
sub
pop
sbb
icebp
sub
inc
sti
leave
adc
test
inc
cmpsw
mov
ficoms
je
xchg
movsb
cmpsl
insb
loope
add
in
das
andl
movsbl
je
icebp
lods
sti
shll
mov
jnp
mov
inc
mov
inc
fisttps
push
or
cli
add
mov
lods
ret
insb
clc
lods
mov
mov
or
push
push
push
inc
cmpsb
sahf
inc
leave
pop
xor
sbb
or
pop
inc
cmp
movsl
sbb
push
push
cmpsb
adc
ficoml
sbb
lcall
cmpsl
insl
cltd
lods
addl
push
sarl
pop
push
ljmp
insl
adc
cmc
mov
fdivr
inc
push
xor
movsb
xchg
lret
inc
jno
mov
cmp
into
mov
iret
das
xlat
jb
jno
in
outsb
cli
movb
repnz
mov
sub
loopne
outsl
movswl
adc
pop
scas
sbb
xchg
imul
sub
imul
adc
cwtl
adc
loope
gs
sti
sahf
mov
add
jge
jl
out
push
test
mov
clc
inc
out
cmp
lcall
test
inc
sub
jl
and
stos
sbb
push
inc
iret
les
mov
pop
cmp
push
movsb
inc
dec
and
mov
jp
lret
dec
cmp
dec
xor
fidivrl
loope
dec
fwait
jl
int3
popa
push
inc
xor
mov
xor
pushaw
adc
lret
jno
pusha
xlat
fwait
pop
shl
dec
lods
mov
arpl
popa
push
or
cmp
xor
lldt
inc
jecxz
test
jle
stc
enter
lods
orl
mov
cmpsb
dec
xor
arpl
loope
sub
mov
pop
inc
sub
cmp
fdivs
loop
and
movsb
push
inc
push
lret
gs
dec
stos
or
pop
sahf
movl
scas
orb
adc
pop
mov
ljmp
lods
inc
cld
inc
std
mov
mov
sub
outsb
push
adc
fldl
je
add
lds
pop
data16
es
and
test
mov
dec
mov
insb
cmp
in
cld
sub
rclb
jecxz
mov
loope
cmp
cmp
out
leave
dec
xchg
push
xchg
movsl
stos
xor
mov
cmp
mov
flds
lahf
inc
sahf
stos
add
xchg
out
sahf
pop
test
pop
mov
fsubrp
ficoml
pop
cmc
push
int3
out
dec
repnz
jmp
inc
js
aam
inc
adc
adc
add
xchg
pop
adc
or
pop
aad
push
leave
mov
lea
in
sub
mov
adc
xor
outsb
xor
sub
les
mov
pop
sti
mov
fwait
shrb
jg
pop
inc
mov
mov
cwtl
out
mov
jbe
xchg
push
pop
lods
jb
ja
out
add
stc
cmp
mov
add
cmp
int
call
xchg
xlat
call
cmc
movsb
pushf
mov
fisubl
shll
or
jae
jbe
jne
mov
imul
jl
sti
mov
xor
nop
xchg
xor
outsl
out
in
inc
imul
pop
sbb
outsb
or
and
icebp
mov
sbbb
cli
jne
sahf
imul
add
adc
xorl
or
icebp
scas
addr16
mov
lds
es
orl
into
dec
add
fistps
mov
ljmp
out
dec
fdivl
test
test
popa
xor
add
outsl
sbb
cwtl
mov
xor
decl
mov
xor
push
lods
push
in
inc
lods
es
nopl
into
cmp
mov
push
in
and
or
jmp
dec
shrb
or
test
or
xchg
loopne
or
jbe
jmp
sbb
inc
shlb
push
sub
insl
xchg
dec
xor
pusha
mov
loopne
stos
mov
sbb
test
fcomi
outsb
pop
xor
loop
adc
nop
adc
xor
rorb
call
mov
das
cld
push
int
repz
jle
or
sahf
popa
sub
mov
push
jecxz
xchg
scas
cmp
cmp
jno
rol
ljmp
jl
aad
add
push
jno
scas
ljmp
std
and
stos
iret
inc
mov
ljmp
dec
sub
mov
mov
cs
jmp
mov
mov
inc
icebp
pop
ror
scas
ljmp
push
ja
push
cmp
pop
jp
faddl
test
lahf
in
add
lea
stos
or
fistl
int
and
xor
outsl
sbb
out
mov
out
fcoms
inc
sub
mov
lds
hlt
shl
xchg
or
jnp
shlb
push
ret
repnz
in
mov
xor
mov
rcrb
jge
mov
jp
push
inc
loope
sbb
adc
popf
mov
popa
xor
pop
mov
or
mov
dec
xorl
pop
scas
orl
lods
lods
fidivs
or
pusha
js
loop
out
mov
cmp
cmpb
mov
and
test
jb
jge
mov
sbb
dec
cmc
das
pop
int
jno
push
ret
push
mov
mov
sbbl
dec
jne
inc
popa
xchg
je
jno
xor
inc
lods
sbb
scas
cmpsb
popf
inc
jg
or
push
addr16
loope
fs
jle
mov
sub
adc
push
pop
test
pop
mov
jne
cltd
mov
mov
adcl
mov
stc
pop
popa
cmp
cmpb
mov
mov
idivl
out
aad
std
lods
inc
pop
sub
xchg
fucomi
mov
shll
inc
jecxz
mov
push
in
inc
dec
ret
hlt
in
inc
adc
pop
in
lret
jmp
push
hlt
or
sub
or
jo
add
fwait
stos
sub
add
push
cmp
cli
hlt
rolb
push
fdivrs
popl
lcall
mov
cmp
cli
push
pop
jg
dec
mov
mov
cld
push
ds
cmp
push
loop
test
cmc
and
lret
inc
movsl
jnp
mov
inc
push
xchg
mov
idiv
test
mov
outsl
setae
sbb
in
jns
sti
push
jae
mov
arpl
add
flds
adc
sahf
aas
sub
sbb
popf
int3
cltd
loopne
imul
pop
cld
shlb
pop
aas
test
cmc
inc
cld
mov
mov
mov
pop
xor
push
gs
data16
xor
cmp
jno
outsb
xchg
inc
bound
in
adc
pop
xor
std
popf
aam
lods
cmpsb
loope
push
adcl
or
popa
xchg
inc
inc
mov
mov
call
xor
jno
loope
mov
jbe
sbb
xorb
and
ret
aaa
in
nop
pop
in
clc
bound
or
mov
xchg
inc
xor
stos
adc
mov
repz
and
ficomps
jl
out
in
lock
inc
data16
ss
out
shll
clc
loopne
sub
lea
dec
ds
pop
mov
cmpsb
call
xchg
xor
neg
call
hlt
scas
lahf
add
sbb
xor
icebp
mov
cmp
xlat
add
sub
fwait
pop
mov
enter
loopne
inc
mov
movsl
shrl
mov
pop
sbb
shlb
push
push
aas
mov
xchg
push
jle
in
lahf
lret
mov
add
addb
divl
stc
aad
adc
in
je
pop
mov
in
aas
cli
dec
out
pop
popa
ret
popa
stc
adc
popaw
mov
or
jmp
or
or
mov
imul
out
inc
movsb
shll
es
mov
xor
xchg
push
insl
or
pop
cld
fisubs
xchg
xlat
cmp
aaa
lods
xlat
xlat
mov
pop
push
jge
lret
add
sub
jmp
cmpb
int3
js
lods
dec
jo
xchg
aam
ja
sub
xor
ret
addr16
sbb
push
xor
sbb
lret
or
dec
push
or
loopne
cmp
sbb
xor
loope
xor
jbe
or
bound
or
int3
lahf
or
add
mov
sahf
push
test
sbb
lea
into
mov
mov
sbb
mov
fldenv
shr
dec
outsl
and
cmp
xchg
ret
sub
cmp
std
cmp
sub
sub
insb
mov
push
add
int
ret
xchg
pop
and
sbb
movsl
jge
int3
inc
shld
sub
cmp
pop
lcall
xlat
lret
stos
dec
or
sbb
or
mul
cld
stos
fs
pop
mov
stos
mov
loope
test
test
pusha
fcmove
mov
rclb
add
ds
and
lret
insb
je
es
pop
gs
sub
and
adc
cli
push
rcl
aaa
mov
xor
jb
cmc
aaa
mov
xchg
sub
repz
pop
stos
cmp
mov
sub
aam
sbb
in
cmp
inc
js
jo
sub
cmp
subb
fcmovu
pop
xor
movsl
ss
into
push
and
ret
or
inc
mov
pcmpgtd
iret
aaa
jl
lods
sbb
ret
jecxz
pop
shrl
mov
dec
pop
and
faddp
push
out
js
test
dec
mov
inc
rorl
cmp
lds
aaa
jae
in
dec
inc
and
int3
imul
xchg
inc
pop
or
xor
adc
jb
xor
or
cs
popf
sub
push
mov
xor
pushf
mov
loope
mov
int
xor
inc
jae
insb
rcll
push
mov
add
and
inc
jne
int
xlat
or
enter
rcrb
aaa
add
mov
pop
imul
adc
fs
cmp
imul
negl
lret
int3
scas
out
inc
loope
mov
imul
and
sbb
pop
stos
sub
nop
and
push
push
add
addr16
mov
dec
sub
sbb
pop
cmp
test
mov
aam
pop
sahf
adc
jecxz
xor
xchg
call
scas
jle
xor
xor
jo
sbb
inc
push
mov
hlt
sbb
push
cmp
xchg
inc
push
les
leave
mov
shlb
mov
imul
scas
sbb
mov
sub
imul
or
pop
jbe
jbe
xor
mov
inc
ret
popl
lea
popa
cmp
arpl
push
aaa
stc
xchg
mov
fsubrs
adc
pop
es
dec
inc
or
mov
add
and
daa
fidivl
or
popf
shlb
out
fistpl
imul
shlb
cli
inc
cwtl
addb
lahf
or
sbb
shr
scas
push
insb
enter
jp
dec
push
mov
xor
call
arpl
dec
rcrl
jp
and
push
inc
stos
cmp
jge
das
and
add
ret
mov
stc
mov
fildl
in
xchg
push
adc
mov
mov
pop
pop
and
ds
or
repz
movsl
shrb
push
lret
jns
fidivrl
cwtl
fs
mov
cmp
xor
inc
inc
lahf
lcall
xor
dec
mov
jl
mov
rorb
pop
pop
and
or
fwait
push
sub
leave
mov
mov
sub
pop
scas
int3
sbb
loope
pop
fwait
or
test
xor
test
test
ret
out
pop
orb
js
out
xor
pop
mov
pushf
dec
arpl
call
pop
dec
stos
push
ds
dec
std
sahf
jecxz
pop
sub
and
lods
sbb
popf
insb
in
into
lea
push
rcll
lock
or
push
xor
mov
mov
frstor
aas
or
pop
cmp
pop
push
stos
outsl
mov
sti
pop
xor
aaa
push
or
sbb
xchg
nop
push
cmp
dec
cmpsl
push
adc
lahf
std
mov
loopne
cmp
xchg
adcl
ficoml
mov
ffree
addb
add
fcom
xchg
rol
mov
mov
sbb
adc
push
jno
test
pop
stos
mov
es
shlb
cld
cmp
aaa
scas
push
bound
cld
sbb
lea
push
je
insb
clc
clc
and
push
cltd
pusha
scas
jb
nop
push
cmp
cwtl
pop
push
insb
rorb
loop
je
adcb
cmp
aaa
out
xlat
andb
xor
shrb
mov
aam
dec
mov
rclb
testl
ret
les
add
mov
out
push
pop
setge
in
add
inc
insb
icebp
cmp
loope
xor
push
xchg
cmpsl
jle
fisttpll
push
repnz
xlat
or
mov
outsl
in
cltd
out
xlat
mov
push
movsb
ljmp
je
fnsave
sbb
cmp
cs
adc
in
notb
xchg
in
pop
cwtl
add
lret
int3
jns
enter
or
adc
popa
cwtl
orl
pop
push
cld
or
push
in
in
sbb
lahf
sahf
jns
push
cmp
xchg
and
test
cltd
ss
mov
lcall
xchg
cwtl
mov
shrb
inc
mov
iret
and
ja
sub
mov
mov
mov
roll
popf
into
push
mov
inc
cmp
scas
xchg
xlat
jecxz
mov
cli
cs
xchg
test
fcmovu
pop
add
les
int
icebp
gs
xor
xor
loopne
lea
ljmp
mov
icebp
mov
das
adc
loope
insb
lcall
nop
nop
xchg
in
ret
cmp
aaa
or
dec
fstl
out
ficomps
mov
test
ret
mov
mov
imul
add
xchg
sahf
pop
cmc
push
xchg
or
inc
mov
jne
fwait
je
xor
pop
sbb
pop
add
or
xchg
daa
jmp
or
stos
xchg
out
std
add
and
sahf
mov
repz
mov
sbb
pop
call
and
or
mov
popf
jne
or
daa
cld
and
movsl
xorl
sub
inc
out
and
xchg
or
mov
lcall
rclb
fimull
lods
out
jge
push
sub
mov
dec
inc
jg
pop
js
mov
pop
mov
mov
jns
std
jge
aas
mov
loope
push
in
in
xor
fdivs
xor
mov
pop
shrl
aam
repz
xchg
xchg
inc
enter
add
testl
adc
aam
fdiv
xlat
std
push
scas
js
addr16
loop
xchg
mov
movsl
xchg
repnz
cmpb
jnp
das
jmp
arpl
add
stos
cltd
push
iret
mov
cld
mov
mov
mov
mov
and
incl
and
sbb
adc
sbb
adc
adc
test
add
jmp
mov
jmp
aas
jmp
dec
into
daa
loop
les
arpl
je
xchg
push
pop
xor
cwtl
dec
fidivl
xor
sub
lcall
sbb
outsb
pop
adc
pop
xor
sub
in
mov
shl
mov
add
and
xchg
jns
jbe
xchg
int
sub
jae
inc
cmp
shll
ret
insl
in
add
add
and
dec
jns
repz
xor
xor
cwtl
mov
inc
sbb
dec
dec
and
div
repz
push
or
fistpll
jo
mov
inc
insl
iret
les
and
lcall
mov
add
test
shrb
inc
xchg
mov
enter
pop
pop
pop
imul
xchg
cmp
arpl
andb
in
or
xor
or
push
jg
push
xor
and
xchg
inc
cmp
or
jo
dec
lea
cmc
or
dec
xor
aam
cmp
inc
jp
cltd
push
arpl
test
rorl
inc
push
mov
movl
test
add
add
and
inc
cld
movsbl
cltd
add
adc
xor
xor
cmp
jne
cmp
je
mov
xor
mov
sub
add
mov
jmp
mov
mov
mov
mov
lea
mov
mov
mov
mov
xor
add
mov
mov
mov
xor
add
cmp
jne
mov
xor
mov
add
imul
mov
pushl
jmp
mov
mov
jmp
test
lock
orb
enter
jecxz
jnp
aad
sbb
addl
cld
mov
mov
test
out
mov
ja
and
dec
mov
stos
dec
out
ljmp
lds
inc
fldt
popf
movsl
mov
mov
pop
orb
xor
mov
cmp
cmovbe
add
xor
jmp
xor
adc
cmp
pop
xor
mov
xchg
test
mov
stc
add
testl
xchg
sahf
cmpsl
addl
pop
inc
and
daa
punpckldq
out
inc
fs
xor
xor
lock
call
mov
jp
in
cmpsl
or
mov
dec
inc
sbb
xchg
xor
xor
mov
aad
and
das
aam
ret
test
ret
add
iret
jne
inc
and
packuswb
mov
add
ret
ficomps
outsb
addr16
and
xchg
inc
test
jno
xchg
int3
push
aam
stc
jb
push
adc
and
push
fistpll
add
lock
jl
arpl
adc
and
scas
cmp
es
pop
cld
jns
cli
clc
int3
mov
imul
xor
rorl
mov
imul
cmp
mov
cmc
xor
sub
cmp
jne
cmp
jle
cmp
fbstp
xchg
movsl
cmpsl
push
jg
outsb
pop
mov
mov
lds
inc
insl
mov
cmc
lahf
sbb
insb
imul
inc
lods
mov
cltd
js
push
and
fildl
outsb
out
adcl
sbb
call
mov
lods
test
dec
or
test
lcall
scas
jle
leave
or
push
pop
scas
cmpsl
or
push
das
nop
or
cmpsb
push
adc
inc
and
pop
mov
sub
or
adc
insb
adc
fstpl
sbb
testb
dec
lock
push
int
mov
lock
loope
xchg
jno
and
iret
dec
decl
imul
loop
xchg
cmpl
pop
add
cli
add
out
gs
ss
ret
flds
push
mov
add
mov
out
insb
lret
nop
push
jno
ds
loope
out
test
mov
and
dec
stos
inc
inc
testl
xor
adc
adc
and
push
pusha
movsl
push
lcall
pop
cmp
popa
mov
mov
daa
xchg
lahf
push
fldl
arpl
push
dec
int3
jl
test
lret
adc
iret
add
xchg
negl
std
push
dec
push
lea
rcrl
daa
mov
aam
imul
aam
lods
je
or
or
call
loop
xchg
dec
clc
fcmovnbe
sub
mov
xor
inc
or
inc
jno
inc
test
fstl
movsb
jns
ficomps
pand
dec
dec
repnz
sti
mov
push
xchg
lds
mov
mov
testl
dec
jne
mov
int3
fwait
pop
inc
or
push
dec
xchg
outsb
lcall
or
shll
sbb
xchg
inc
push
dec
stc
lcall
jmp
add
in
pop
xchg
lods
mov
addr16
or
sbb
mov
fdivrl
sti
lcall
and
cltd
ja
daa
or
lahf
out
scas
or
rolb
test
lock
mov
push
and
xlat
push
mov
hlt
jp
imul
push
sbb
fdivrs
sbb
jns
mov
push
adc
pop
mov
pop
pop
loope
sub
mov
mov
mov
in
pop
xchg
iret
loopne
fstl
fwait
dec
out
stos
mov
mov
das
mov
and
lods
pop
add
in
mov
aad
xchg
jnp
flds
push
in
addr16
test
push
pop
mov
sub
jo
stos
jns
int3
and
jp
jns
fistl
aaa
pop
inc
sub
cltd
test
jp
movsl
cmp
and
add
icebp
or
in
sahf
rcll
lahf
jo
xchg
js
add
dec
mov
out
test
xorl
jge
add
incl
adc
add
or
adc
into
and
pop
scas
add
lret
imulb
cmc
push
ret
push
dec
push
push
dec
inc
popa
push
cld
jl
and
add
mov
pop
sbb
dec
mov
ds
ljmp
gs
gs
bound
lds
push
divl
xor
dec
jne
xchg
pushf
pop
addl
cmp
mov
or
nopl
jecxz
pop
cli
cld
sub
xchg
addr16
sar
xchg
shrb
in
mov
sub
cmc
loop
dec
add
shll
jno
sub
ss
mov
test
andl
inc
push
ficomps
movsb
push
cmp
or
popf
jecxz
sub
lret
dec
lret
jg
fnstcw
sub
pop
sub
dec
insb
xchg
int3
hlt
call
aas
shrl
add
sbb
jl
add
push
daa
subb
mov
sbb
iret
hlt
xor
adc
lahf
roll
jo
jp
pop
xchg
mov
pushf
add
loope
cmp
cmp
or
test
shll
sub
inc
repnz
fldt
hlt
outsb
adc
mov
js
int
aam
inc
push
stc
fists
inc
mov
sti
stos
xor
mov
pushf
push
push
sub
aaa
sahf
mov
sub
pop
lret
xor
int
dec
ss
int3
lcall
push
insb
das
cli
xchg
fiaddl
fcoms
loope
and
mov
jnp
ret
push
push
idivl
xrelease
mov
mov
push
and
dec
gs
fbld
fdivs
ljmp
cmpb
cmpsb
add
cmp
out
adc
jno
shl
out
push
jne
leave
repnz
xor
ficoms
jge
sbb
fwait
dec
das
jbe
inc
sub
push
jae
jnp
add
add
ss
ffree
subl
jae
sbb
jnp
adcb
or
adc
out
lcall
lock
in
out
sub
add
sbb
mov
jmp
xchg
sahf
mov
jg
mov
xor
or
ret
and
ljmp
inc
jge
loop
scas
mov
icebp
jns
daa
popf
lods
push
xchg
in
xor
pop
push
stc
jecxz
pop
jg
jge
sti
lods
mov
push
xchg
in
mov
das
push
fdivl
fidivs
scas
jno
enter
inc
mov
mov
pop
aaa
lds
fcmovnu
jp
pop
jmp
cmpsl
or
cmp
and
xor
inc
pop
rorb
sbb
fildll
into
std
aaa
push
jp
xchg
out
aaa
and
lods
int
inc
test
push
scas
dec
jge
mov
sub
leave
test
outsb
pop
mov
add
out
xchg
jns
loopne
mov
mov
jp
out
mov
xchg
dec
sub
mov
xor
loopne
aaa
call
pop
pusha
mov
and
lods
jae
inc
mov
sbb
scas
and
xor
inc
jo
dec
mov
jp
mov
roll
mov
subl
mov
xchg
pop
paddusb
shl
imul
iret
pop
pop
aas
add
adc
int3
dec
pop
shl
dec
das
or
icebp
cmp
mov
cmpsl
fsts
cmc
pop
pop
sbb
add
cmp
sbb
gs
pop
out
int3
cmp
pop
jmp
stc
mov
mov
xor
inc
incl
jg
xchg
repnz
ret
mov
inc
jecxz
mov
jp
clc
inc
fiaddl
pop
adcb
cmpsb
mov
ss
pushf
xor
repnz
cli
mov
je
mov
in
jge
jne
cmpsb
rcll
jo
loopne
hlt
in
xchg
std
add
shlb
into
cmpsb
ret
push
popa
and
mov
shrl
and
push
stos
pop
fs
push
das
xchg
add
outsl
iret
insb
xorl
push
cld
js
shl
popf
aam
cld
in
lea
mov
xchg
cltd
in
sbb
push
sbb
imul
xor
jno
adc
decl
jmp
fs
mov
movsb
lahf
and
jbe
daa
inc
int
incl
inc
inc
pusha
out
pop
sbb
int3
adc
adc
mov
rorb
fistps
push
lcall
adcl
mov
pusha
mov
mov
cs
pop
push
enter
add
inc
mov
fistps
sti
dec
mov
imul
hlt
xchg
add
push
pop
or
testb
out
jne
inc
xchg
addl
cli
sbb
xor
push
lcall
cmpsl
push
gs
push
or
cmp
scas
pop
lods
push
jl
mov
popf
lods
icebp
push
lcall
andb
mov
mov
andb
xor
pop
ja
pop
mov
jo
add
xchg
xchg
sbb
arpl
push
or
mov
ljmp
repnz
push
dec
ret
lea
sub
dec
or
jle
clc
stos
int3
add
sahf
test
cli
loopne
pop
jle
inc
adc
insb
stos
mulb
xchg
jmp
and
lret
jns
mov
lods
mov
es
mov
roll
xchg
pop
jge
sbb
popa
sbb
gs
dec
add
mov
loopne
and
mov
mov
mov
mov
jl
add
push
int
das
nop
xor
and
push
mov
pop
or
and
out
cmpsl
icebp
cs
xchg
mov
mov
and
jl
xchg
gs
decl
add
sbb
push
push
out
or
in
rorl
sbb
cltd
repz
in
addr16
and
in
inc
mov
jg
sbb
es
push
push
cs
cmp
loope
mov
xchg
jg
mov
mov
mov
imul
outsl
cmp
sahf
pop
mov
inc
lock
ret
push
and
adc
dec
nop
dec
icebp
call
cmp
ret
xchg
push
push
mull
fimuls
pop
or
fcomip
xchg
jbe
push
sub
xchg
sahf
hlt
and
push
mov
push
xchg
xor
push
mov
stc
data16
dec
ret
imul
or
hlt
or
data16
nop
fs
out
push
cmpsb
lret
adc
push
xchg
bound
pop
dec
and
mov
icebp
pop
adc
in
in
aas
fs
jge
ss
loop
and
add
in
sbb
test
shrl
shl
cmp
pushf
mov
lret
dec
ret
imul
mov
cwtl
dec
xor
jo
aad
mov
stos
cmp
sub
aaa
xchg
jmp
or
pop
adc
fisubrl
jmp
dec
sub
inc
je
or
dec
push
jb
adc
loope
inc
xor
mov
mov
imul
ficompl
int3
fcompl
sub
sbb
xchg
mov
xor
inc
lea
loope
jmp
sahf
sbb
push
fidivs
int3
push
jae
call
jb
jmp
mov
dec
je
clc
mov
popa
aaa
mov
add
lcall
popf
sbbl
mov
mov
test
loopne
popa
les
pop
insl
xchg
jno
adc
inc
popa
dec
and
mov
jae
stos
push
sbb
inc
test
stos
fcmovbe
jge
fidivrs
adc
mov
xchg
lret
xchg
out
fnstcw
inc
repz
movsl
adc
aad
cmc
add
mov
jmp
sti
sub
adc
hlt
shll
push
mov
out
dec
sub
and
test
fdiv
daa
and
out
jnp
je
clc
into
hlt
xor
jns
lds
inc
divl
inc
cmpsb
mov
out
cld
fadds
xchg
subb
ret
in
add
arpl
fidivrl
mov
orl
test
or
mov
and
sub
and
in
mov
imul
testl
jns
test
fs
notb
leave
enter
ja
cld
arpl
adc
in
sub
sub
bound
aad
popa
loope
lret
outsl
cmp
cmp
inc
inc
daa
jl
sarb
ds
sbb
pop
xchg
push
into
lds
push
push
jp
in
in
adc
mov
scas
and
scas
mov
push
cmp
lret
aam
imul
lea
ds
pop
xor
stos
gs
xor
aam
insl
xlat
ds
push
mov
xlat
sub
and
push
dec
push
or
add
push
test
inc
sub
jl
push
shrl
lea
mov
push
cmc
cmp
arpl
mov
adc
pop
cmp
mov
push
cmp
mov
sar
loope
imul
dec
cmpsb
xchg
adc
negb
pusha
mov
popf
and
jbe
pop
mov
mov
mov
stos
loopne
shlb
jecxz
out
test
sub
in
scas
xor
add
dec
or
imul
mov
cmpsl
faddp
add
xchg
loopne
leave
mov
aaa
and
ret
mov
xor
int3
sub
jns
dec
cmp
in
popf
call
aad
sbb
mov
jmp
loope
xchg
mov
sbb
lods
sbb
push
test
or
daa
decl
jp
mov
pop
movsb
sub
inc
and
dec
mov
sti
or
dec
jae
hlt
dec
push
mov
xor
cmpsl
and
adc
ja
mov
aad
and
inc
lcall
ljmp
mov
sbb
sbb
loop
repnz
mov
pop
dec
and
scas
xlat
push
out
adc
lods
addr16
sub
fwait
test
nop
and
mov
lret
scas
pop
jbe
lret
insl
inc
loopne
xlat
ja
mov
lret
lcall
scas
add
negb
xlat
ja
mov
inc
adc
push
test
lahf
xor
cmp
cmp
jg
mov
fs
jmp
out
mov
inc
cwtl
cmpsl
ret
push
push
push
pop
inc
add
mov
loope
fiadds
and
xchg
fiadds
and
test
insb
pop
inc
mov
mov
pop
enter
xor
push
ret
fcompl
xchg
xor
out
int
adc
cmp
out
fucomi
fdiv
pop
cmp
pop
mov
ja
mov
jge
lret
mov
inc
stos
clc
inc
mov
sub
out
push
push
repnz
cmpsb
clc
mov
jnp
das
int3
icebp
arpl
add
popf
mov
mov
mov
out
mov
sub
aam
lret
add
push
std
inc
dec
pop
in
repnz
push
push
sbb
js
ljmp
enter
mov
fadds
sbb
mov
fpatan
sarb
pop
insl
fs
stos
icebp
mov
scas
and
mov
mov
xchg
and
jns
mov
mov
imul
ret
sbb
nop
loopne
les
mov
hlt
test
scas
pop
in
daa
js
fists
fwait
cltd
repnz
fnstsw
xchg
pop
jg
and
xor
dec
rorb
jno
out
sahf
out
imul
mov
adc
insl
sbb
sahf
or
sahf
push
jl
jne
inc
push
mov
sbb
mov
pop
insb
ds
outsb
movsl
mov
add
sbb
sub
jge
addr16
mov
xchg
insb
sbb
pop
loop
popa
add
lods
mov
pushf
pushf
sbb
add
jecxz
push
dec
push
arpl
gs
and
call
mov
lret
jbe
push
lcall
js
cli
js
jno
or
adcb
iret
adc
cli
jecxz
lds
push
pop
push
pusha
in
das
popf
cmp
in
les
mov
or
pop
shl
pop
xchg
aam
cli
addr16
mov
push
sti
adc
or
xlat
sbb
mov
cmp
jb
xor
add
neg
adc
stos
add
pop
or
out
in
ret
push
adc
or
stc
mov
mov
mov
out
dec
xchg
dec
push
push
std
dec
lret
mov
lea
xor
jne
and
aad
stos
int
xor
dec
mov
rol
leave
inc
jno
lock
pop
xor
ror
lea
jns
mov
push
lahf
imul
negl
stc
dec
inc
sbb
imul
mov
clc
cmpsl
sbb
nop
cmp
scas
cmp
jnp
dec
mov
lahf
cmc
jbe
mov
mov
outsl
popf
icebp
xor
jo
in
mov
int3
fstps
mov
imull
subb
add
aad
mov
aam
jle
add
jne
push
mov
fs
mov
insl
push
inc
leave
cmc
lods
jecxz
xchg
sub
lcall
cmp
into
push
adc
dec
adc
or
mov
adc
pop
jb
test
jno
subl
dec
jmp
sub
sbb
pop
shl
inc
in
movsl
adc
bound
lret
or
xchg
or
rcr
inc
out
jp
xchg
int3
jns
aad
fbld
and
and
repz
stos
cmp
inc
testl
jl
into
sbb
mov
fsubl
jbe
pop
cmpb
jb
jno
sbb
or
cmp
cmp
jl
jl
in
sbb
bound
std
repnz
cmp
js
add
daa
inc
and
mov
test
es
dec
xor
mov
aad
push
mov
xlat
pop
sahf
sbb
push
mov
and
out
push
push
jge
aaa
flds
add
cld
fs
pop
pop
aas
in
insl
das
jmp
jbe
aam
push
or
push
pop
int3
mov
ljmp
pop
sti
mov
push
push
stc
push
adc
repnz
mov
xor
dec
ja
mov
add
lods
xchg
add
sbb
mov
aam
js
pop
add
pop
imul
loop
imul
mov
xchg
jbe
lock
stc
int
movsl
in
call
call
mov
cmc
mov
push
test
cmp
sub
cld
sub
je
lcall
mov
pop
pushl
fwait
jge
mov
jl
and
lods
aas
fistl
leave
out
ds
mov
jle
loope
push
movsl
aaa
jmp
fucomi
sub
xor
xlat
test
adc
stos
mov
pop
or
inc
mov
aas
test
push
sub
jp
push
dec
idivb
mov
xchg
out
es
xchg
in
jae
fs
sahf
outsl
or
in
into
aas
lds
cmp
sbb
lea
push
sbb
cmp
push
test
ret
inc
xchg
outsb
fs
inc
sbb
and
xchg
out
lret
js
dec
or
xchg
loope
dec
mov
xchg
aam
lock
jo
imul
xlat
loope
jo
lock
xor
enter
divl
cli
testb
or
jae
sbb
sub
arpl
mov
jl
ficoml
sub
std
ss
in
imull
jnp
mov
jae
and
jmp
out
mov
sbb
cli
push
fbld
lock
fldenv
pop
jecxz
mov
dec
test
popa
sub
fdivrl
sub
imul
aam
or
sub
push
sbb
xor
not
das
sahf
into
insl
inc
loop
lds
rcr
push
xchg
xchg
loop
push
ret
rcll
aam
int
jge
jne
pop
mov
aam
sub
imul
cmpsb
arpl
mov
push
fistps
mov
mov
cmpsb
push
jl
lds
aam
lds
adc
lret
mov
fcomip
and
into
movsl
je
push
xor
sahf
mov
pop
stos
cltd
pop
jmp
jp
add
loope
fcoms
insb
call
adc
dec
jne
test
dec
mov
cmp
hlt
xchg
sbb
or
jo
pop
inc
inc
cli
movsb
lods
pop
cs
cmc
repnz
ret
inc
adcl
fmull
inc
sbbb
aaa
cmpsl
and
mov
add
roll
fiadds
int3
mov
cmc
mov
and
add
fsubl
aad
jo
je
push
push
xlat
shl
fs
gs
push
fidivl
inc
cs
test
mov
mov
pop
push
je
popf
jg
faddl
add
pop
and
fldenv
cmpsb
xchg
mov
rolb
mov
mov
ret
stc
pop
call
inc
mov
test
sub
push
push
subb
sbb
movsb
fiaddl
sbb
bound
cmp
pop
lahf
daa
mov
ret
js
mov
ret
sahf
xchg
ffreep
xor
push
jbe
or
xchg
iret
cs
mov
jmp
shlb
cmc
lret
aaa
cmp
out
clc
pop
xchg
cli
dec
cs
push
push
lcall
cltd
sbb
jge
insb
mov
jp
lret
es
ficompl
int3
mov
sahf
mov
test
mov
and
daa
push
xchg
cmpsl
mov
sbb
mov
add
mov
enter
mov
sub
mov
dec
mov
inc
pusha
lods
adc
sbb
xchg
or
add
xor
mov
out
sti
out
inc
sbb
imul
or
lds
mov
lds
pop
sbb
xor
sarl
xor
mov
mov
cs
sbb
mov
push
cmc
or
add
pop
mov
sbb
lock
xchg
lahf
or
lods
mov
adc
fwait
stc
push
pop
fsubrs
call
popa
or
rolb
mov
gs
addr16
call
inc
pop
jl
mov
pop
fists
mov
adc
outsb
pushf
or
cli
push
ror
ja
push
sahf
or
mov
inc
cld
push
or
dec
xchg
fstps
add
outsl
pop
adcb
or
add
mov
mov
in
fwait
loop
stc
les
sahf
repnz
sub
inc
jmp
shrb
jae
into
inc
in
std
in
cmpsl
dec
cmp
lea
xchg
pop
and
and
push
mov
test
insb
in
ret
outsl
xchg
dec
cmp
ror
imul
repz
mov
and
addr16
sbb
leave
jmp
insb
insl
jmp
fs
or
and
xor
mov
push
daa
add
and
insl
ret
mov
jle
ret
inc
cmp
or
lea
andb
and
rcll
sub
int
dec
stos
cmp
mov
inc
or
pop
mov
xchg
movb
adc
fsubrs
xor
ficompl
mov
mov
inc
lret
mov
xchg
inc
ljmp
arpl
inc
xchg
jae
mov
sbb
inc
in
pop
nop
int3
xchg
cmp
or
push
stc
mov
iret
pusha
insl
add
ja
lods
out
popl
mov
leave
int
int
jmp
aas
rorl
xchg
out
push
push
adc
mov
jecxz
jbe
stos
test
adc
pop
in
scas
ja
enter
cltd
es
sub
in
lds
sarb
pop
scas
in
outsb
or
shll
jb
dec
xlat
insl
test
mov
daa
insb
dec
and
mov
push
adc
mov
pop
imul
insl
adc
out
stos
sub
aas
and
ljmp
mov
mov
xchg
nop
xchg
icebp
cmpsb
cmp
cltd
lods
lea
push
mov
idivl
mov
insb
roll
adc
cmc
movsb
subb
push
mov
in
add
nop
inc
pop
cmpl
mov
hlt
js
and
jl
imul
jae
sub
sti
pop
sub
push
bound
xchg
xchg
inc
int
js
adc
test
dec
xor
aam
fsubs
pop
ljmp
leave
cwtl
mov
jbe
adc
test
push
mov
movsbl
icebp
cmp
shrb
add
nop
repnz
pop
rolb
aad
out
pop
ret
scas
popa
aad
xchg
mov
push
cs
mov
and
xchg
cli
lea
cmp
pop
in
lea
sbb
jno
aaa
lret
fdivl
ljmp
fisttpl
sub
add
dec
testb
jmp
mov
push
scas
js
push
sub
lds
lahf
aas
sbb
les
jne
push
jnp
push
jmp
adc
in
pop
inc
push
jb
adc
xchg
leave
cmp
xor
add
fwait
sbb
dec
push
stos
shlb
or
dec
test
adcb
mov
and
ss
cmp
adc
cmp
add
xchg
pop
inc
inc
mov
sahf
nop
shl
inc
cmp
dec
push
xchg
shl
outsl
pushf
pop
inc
mov
rcr
pop
push
scas
pop
stc
fdivs
outsl
cmpsl
mov
adc
dec
loopne
xchg
shrb
push
divl
push
inc
mov
outsb
scas
jns
adc
cmp
shrl
push
mov
sub
in
in
mov
popa
ret
fiadds
xchg
incb
xor
and
mov
fstl
daa
jp
aad
pop
jnp
xchg
pushf
adc
movsl
xor
adc
xchg
add
pop
and
mov
add
mov
clc
loop
testb
jns
inc
push
shll
fmull
fcomps
jge
and
ja
cmp
mov
xor
je
nopl
iret
pop
inc
sbb
sub
imul
stos
rcrl
aaa
dec
shl
inc
xchg
mov
inc
pop
lock
jp
cmp
push
add
int
mov
leave
mov
fadds
jno
push
pop
in
xor
scas
lods
push
fimull
mov
add
ja
mov
and
push
popa
push
clc
xor
mov
push
sbb
adc
mov
ljmp
dec
dec
ss
dec
mov
not
fldt
xchg
shl
out
lahf
idivl
mov
hlt
lock
adc
sbb
mov
or
mov
daa
adc
cmc
add
xchg
xor
mov
push
sahf
clc
sbb
cmp
jmp
ficoms
clc
push
and
mov
or
outsb
movsl
mov
into
adc
aas
pop
sub
ret
sahf
aam
je
daa
loopne
and
gs
addr16
push
fwait
rolb
loopne
out
dec
pop
shlb
fnstsw
pop
xor
mov
adc
and
mov
jmp
enter
jmp
add
aam
cmpsb
ljmp
sub
mov
mov
into
mov
adc
cwtl
jmp
cmp
adc
jnp
dec
daa
xor
sbb
cld
cmp
ficompl
sbb
ljmp
lahf
cmp
dec
sub
mov
jl
inc
pop
leave
mov
xor
xlat
or
sbb
mov
call
sbb
lds
sub
cltd
or
inc
scas
xchg
scas
adcl
int
jle
lock
rcl
adc
xchg
sbb
xchg
lahf
movsl
push
ja
xor
xor
mov
arpl
cld
pop
lea
adc
aam
mov
sti
sbb
adc
add
mov
int3
and
ljmp
dec
xchg
mov
scas
test
jne
fsubl
lret
add
std
or
mov
dec
dec
pop
sahf
jmp
push
add
mov
imul
xor
pusha
ret
xchg
add
cmp
subb
out
jne
inc
push
aas
jo
cmpl
mov
xchg
or
pushf
pop
lret
mov
push
or
jl
dec
mov
aaa
and
xor
jb
inc
jmp
inc
call
lret
mov
arpl
hlt
pop
adc
and
hlt
add
and
cmp
push
das
addb
dec
dec
add
dec
sbb
enter
mov
fisttpll
shl
jle
adc
xor
call
enter
jbe
shll
cmp
dec
test
cmpsb
mov
push
pop
mov
pop
mov
cmc
insl
cmp
popf
dec
fldcw
sarl
jmp
or
pop
aam
cmp
daa
jg
js
rcll
add
test
cmpsl
sub
insb
mov
imul
push
or
aam
loopne
xchg
roll
popf
add
dec
push
into
push
dec
mov
sbb
fs
popa
push
in
inc
fsubrs
imul
stos
imul
shll
lret
push
dec
adc
dec
xchg
adc
fidivl
test
cld
inc
dec
cmc
dec
mov
jl
xchg
enter
test
cs
jmp
jg
inc
mov
fsub
clc
sbb
clc
inc
call
cmp
sahf
repnz
push
mov
icebp
mov
pusha
xchg
pop
rol
stos
mov
das
enter
aad
xchg
mov
lods
jp
aad
std
pop
movb
imul
mov
fildll
test
mov
sbb
lret
in
mov
push
jbe
mov
push
aas
add
cltd
sbb
mov
cltd
push
sub
dec
add
js
imul
push
adc
js
sbbb
movl
xchg
in
pop
xor
jg
pop
into
out
jecxz
push
mov
outsb
popa
and
cmp
mov
add
pusha
mov
push
cmp
cmpsl
outsb
dec
movsl
pop
loope
imul
adc
jbe
push
enter
mov
dec
in
sub
lret
jnp
dec
gs
push
sub
mov
orl
loop
xchg
mov
jbe
inc
cs
jnp
add
and
adc
inc
in
mov
mov
or
mov
ss
jo
push
das
daa
sarb
pop
push
fldenv
int
jg
mov
cld
add
test
xor
pop
fadds
xchg
or
pushf
stos
inc
push
xor
cmpsb
xlat
cmp
push
andw
adc
pop
inc
push
sti
inc
xor
dec
movsb
push
cmp
es
jo
aas
sti
roll
push
lahf
lahf
push
add
popa
jb
into
daa
add
adc
stos
push
imul
rorl
mov
movsbl
cltd
add
adc
xor
xor
cmp
jne
cmp
jne
mov
mov
mov
mov
jmp
mov
cmp
jne
push
pushl
pushl
pushl
pushl
call
pop
pop
pop
leave
ret
push
mov
and
orl
sub
sbbl
push
push
push
andl
push
orl
push
orl
call
subl
mov
lea
push
subl
push
movl
call
cmp
je
xorl
xor
jmp
mov
xorl
push
lea
push
push
push
subl
push
adcl
call
imul
cmp
movl
jne
orl
lea
andl
push
addl
push
andl
call
cmp
jne
addl
movl
or
mov
movl
cmpl
je
cmpl
jge
jmp
push
push
pushl
call
cmpl
jne
mov
dec
mov
xor
xor
dec
mov
jmp
mov
addl
movl
mov
or
lea
mov
xor
lea
sbb
mov
or
mov
movl
cmpl
je
cmpl
jl
jmp
push
call
xor
add
dec
mov
jmp
mov
mov
mov
mov
mov
sbb
xor
adcl
mov
addl
add
notl
mov
movl
mov
cmp
movl
jne
mov
andl
jmp
xor
add
inc
mov
cmpl
jae
cmpl
jl
jmp
push
pushl
push
call
cmpl
jne
mov
inc
mov
jmp
mov
adcl
mov
adcl
xor
subl
add
addl
mov
mov
xor
notl
add
sbbl
mov
mov
sbbl
xor
subl
add
mov
andl
xor
xor
inc
mov
cmpl
jb
jmp
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
xorl
mov
addl
mov
mov
mov
mov
addl
mov
orl
mov
mov
decl
mov
andl
xor
add
inc
mov
cmpl
jge
jmp
push
push
call
cmpl
jne
xor
xor
inc
mov
cmpl
jb
movl
sbb
mov
xor
xorl
add
jmp
lea
subl
push
addl
push
addl
call
movl
cmp
jne
push
lea
addl
push
adcl
push
push
orl
push
call
imul
movl
cmp
movl
jne
sbbl
lea
push
push
sbbl
call
movl
cmp
jne
mov
xor
mov
sbbl
xor
sbbl
lea
incl
push
add
mov
xor
lea
xorl
push
movl
mov
xorl
pushl
adcl
call
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jl
jmp
pushl
call
cmpl
jne
mov
inc
mov
jmp
mov
mov
mov
adc
xor
and
lea
mov
neg
mov
orl
xor
orl
xor
xorl
add
mov
addl
xor
movl
lea
movl
mov
cmp
jbe
xor
or
or
mov
andl
mov
inc
mov
cmpl
jge
jmp
push
push
push
call
cmpl
jb
mov
mov
mov
movl
cmpl
je
cmpl
ja
jmp
push
call
cmpl
jne
xor
or
dec
mov
mov
dec
mov
jmp
mov
movzbl
adc
mov
subl
sub
andl
xor
mov
lea
mov
xorl
lea
subl
mov
lea
subl
push
addl
push
call
movl
cmp
movl
jne
push
lea
xorl
push
push
adcl
push
push
call
imul
cmp
jne
lea
push
push
subl
call
movl
cmp
movl
jne
lea
addl
push
negl
push
addl
call
movl
cmp
movl
jne
xorl
push
orl
lea
andl
push
subl
push
adcl
push
xorl
push
orl
call
imul
movl
cmp
jne
orl
lea
push
subl
push
notl
call
movl
cmp
movl
jne
lea
push
subl
push
subl
call
movl
cmp
jne
addl
push
lea
push
sbbl
push
push
push
call
subl
imul
movl
cmp
jne
addl
lea
orl
push
push
andl
call
movl
cmp
movl
jne
andl
lea
adcl
push
orl
push
sbbl
call
movl
cmp
movl
jne
xorl
push
lea
orl
push
push
push
subl
push
call
imul
movl
cmp
movl
jne
addl
lea
orl
push
andl
push
andl
call
cmp
jne
orl
lea
subl
push
xorl
push
addl
call
movl
cmp
movl
jne
adcl
push
xorl
lea
xorl
push
adcl
push
push
sbbl
push
adcl
call
imul
cmp
jne
movl
lea
addl
push
notl
push
call
movl
cmp
jne
lea
xorl
push
push
addl
call
movl
cmp
movl
jne
push
lea
adcl
push
xorl
push
adcl
push
xorl
push
call
adcl
imul
movl
cmp
jne
lea
xorl
push
push
orl
call
movl
cmp
jne
addl
lea
movl
push
push
adcl
call
movl
cmp
jne
andl
push
lea
push
push
subl
push
sbbl
push
call
xorl
imul
movl
cmp
movl
jne
lea
push
push
call
cmp
jne
lea
push
push
call
cmp
jne
push
lea
push
push
push
push
call
imul
cmp
jne
lea
push
push
call
cmp
jne
lea
push
push
call
cmp
jne
push
lea
push
push
push
push
call
imul
cmp
jne
lea
push
push
call
cmp
jne
lea
push
push
call
cmp
jne
push
lea
push
push
push
push
call
imul
cmp
jne
lea
push
push
call
cmp
jne
lea
push
push
call
cmp
jne
push
lea
push
push
push
push
call
imul
cmp
jne
lea
push
push
call
cmp
jne
lea
push
push
call
cmp
jne
push
lea
push
push
push
push
call
imul
cmp
jne
lea
push
push
call
cmp
jne
mov
cmp
je
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
pushl
mov
pushl
add
mov
mov
pushl
call
mov
mov
mov
jmp
mov
mov
xor
add
cmp
jne
mov
mov
mov
xor
add
cmp
jne
mov
push
xor
add
push
push
pushl
pushl
call
pushl
pushl
call
mov
xor
add
mov
mov
xor
add
mov
mov
test
je
lea
movl
push
movl
movl
push
movl
call
cmp
jne
push
lea
push
push
push
push
call
imul
cmp
jne
lea
push
push
call
cmp
jne
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
andl
mov
add
adcl
mov
xor
mov
mov
xor
cmpl
mov
jne
cmp
je
mov
mov
cltd
add
adc
andl
xor
mov
mov
mov
xor
add
mov
adcl
xor
mov
mov
xor
mov
cmp
jne
mov
cmp
je
mov
add
mov
jmp
mov
mov
xor
mov
mov
mov
add
mov
mov
xor
add
xor
add
adc
xor
xor
xor
add
adc
xor
xor
cmp
jne
cmp
jne
mov
mov
lea
push
push
call
cmp
jne
push
lea
push
push
push
push
call
imul
cmp
jne
lea
push
push
call
cmp
jne
mov
push
add
push
lea
push
call
mov
mov
pop
pop
pop
mov
pop
ret
push
mov
sub
sub
mov
and
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jge
jmp
pushl
push
push
push
call
cmpl
jne
mov
inc
mov
jmp
movl
or
mov
push
movl
cmpl
je
cmpl
ja
jmp
push
pushl
call
mov
dec
mov
jmp
mov
xor
mov
push
mov
add
cmp
movl
je
movzwl
adc
mov
mov
incl
xor
andl
xor
add
addl
add
movl
adc
orl
xor
adcl
mov
movl
cmpl
je
cmpl
jge
jmp
push
call
cmpl
jne
xor
add
dec
mov
xor
xor
dec
mov
jmp
push
xor
xor
mov
add
adc
xor
xor
cmp
jne
cmp
je
jmp
mov
mov
mov
xor
add
mov
imul
mov
xor
add
mov
mov
mov
mov
xor
xor
add
adc
lea
xor
xor
xor
mov
add
adc
xor
xor
cmp
jne
cmp
jne
jmp
sbb
cmp
xchg
xchg
dec
push
inc
push
mov
addl
addl
ja
and
pop
mov
cmp
xchg
inc
push
pop
outsl
ds
cmp
jnp
ljmp
cld
sbb
cltd
in
repnz
xchg
mov
popa
and
xchg
sbb
call
dec
loopne
mov
scas
add
movsb
xchg
sbb
push
movsb
addr16
cmp
sub
sbb
ret
les
rol
xchg
xor
cld
pop
sahf
leave
or
inc
sub
fmull
addr16
out
cmp
xchg
loopne
xor
xchg
mov
mov
outsl
cmpsb
jp
pop
fildll
xor
das
adc
jb
popa
dec
repz
int
out
cmc
cmp
xor
pop
mov
mov
daa
xchg
jno
pop
mov
mov
negb
mov
pop
fisubs
inc
es
cmc
add
sub
decb
mov
popa
outsl
outsb
xor
ljmp
out
das
call
popf
mov
mov
or
adc
xchg
sarb
test
fdivrp
leave
jl
pop
xor
negb
dec
jge
xor
or
adcb
cmp
cmpb
es
std
pop
add
pushf
dec
pop
jmp
add
ljmp
and
inc
ds
hlt
cwtl
rcl
sbb
inc
loope
jae
mov
xor
mov
in
insl
lods
mov
pop
leave
ficoml
inc
shrl
pop
test
push
mov
test
ja
mov
cmp
in
lods
inc
lcall
pop
xor
inc
xchg
mov
add
data16
and
pop
sub
leave
add
dec
mov
mov
outsb
incb
cld
pop
movsb
fisttpl
testl
lds
push
inc
inc
js
dec
clc
ret
add
pop
xrelease
cmpsb
pop
aad
lcall
sbb
jns
imul
shl
clc
jg
xchg
inc
xor
xor
jg
jno
and
xchg
stc
cmp
in
jg
test
inc
add
cwtl
jne
jge
outsl
daa
fbld
in
clc
out
cwtl
cs
in
out
sbb
sti
jae
lea
sbb
jns
cmc
mov
repnz
shlb
aaa
loopne
mov
daa
cmp
push
sbb
daa
cs
hlt
jbe
lcall
push
inc
popa
mov
ret
and
outsb
lods
int
mov
inc
les
shlb
mov
mov
sbb
mov
cmp
adc
and
icebp
adc
addr16
xchg
xlat
cmpsb
and
popl
ds
push
outsl
dec
adc
lret
rcll
ja
adc
pop
int
jmp
das
pop
and
insl
ds
ja
adc
adc
out
nop
insl
test
jns
mov
ss
xchg
adc
and
neg
xor
aaa
sti
inc
and
inc
mov
mov
cwtl
sbb
scas
jecxz
adc
orl
mov
stos
xchg
scas
shl
jno
jecxz
cmpsl
push
lea
adc
cmpsl
aad
sub
jecxz
pop
cmp
adc
push
test
scas
and
sti
push
movsb
cmpsb
in
lods
addl
mov
lods
frstor
fisubrl
cmpsl
incb
daa
inc
repz
das
xchg
mov
jno
mov
fwait
mov
fsubrs
movsb
xlat
sub
adc
cmp
mov
ja
fisubrs
dec
mov
out
lahf
out
lock
outsl
push
push
stc
add
rcl
insb
fimull
dec
jge
lods
jecxz
lock
jmp
cmpsl
add
das
pop
xlat
pop
mov
int3
push
push
and
insb
xchg
std
pusha
xchg
sbb
dec
add
dec
out
nop
fcomps
cs
adc
cmpsb
out
sub
pop
aas
adc
fnstcw
mov
jno
dec
sbb
adc
popa
jbe
inc
adc
leave
cmp
mov
movsb
or
repz
mov
adc
mov
jp
pop
dec
cmc
mov
jae
rolb
scas
dec
clc
jl
adc
out
sbb
inc
out
in
ret
out
mov
cmpsb
adc
add
xor
popf
xor
mov
call
pushf
stc
incb
pop
mov
dec
sbbb
in
xor
add
imul
jno
std
cmp
xchg
lcall
fnclex
jmp
popa
xor
aam
jno
jecxz
xchg
sub
gs
mov
mov
jne
xor
sbb
scas
insb
or
push
adc
aad
xlat
mov
jae
mov
xchg
bound
and
jae
xlat
cmp
mov
xorb
mov
imulb
cld
popf
lods
mov
stc
sysexit
movsb
jb
push
faddl
push
mov
cmp
fimull
sub
or
jge
popf
adc
scas
lea
xor
xlat
into
mov
xchg
ljmp
fsubr
push
cmp
xlat
orl
jae
push
data16
mov
sbb
in
adc
aam
leave
inc
push
mov
dec
arpl
lods
outsl
iret
addr16
push
scas
repz
loop
pop
adc
shrb
js
test
pop
mov
add
test
loop
jmp
ret
mov
nop
int
inc
sub
out
add
xchg
adc
sbb
imul
loope
add
mov
push
lret
push
mov
and
fs
push
imulb
jge
popa
int
repz
add
fisttpll
mov
and
iret
adc
xor
pusha
jbe
cltd
in
mov
add
pusha
push
cmp
add
sub
test
lds
call
push
dec
inc
out
iret
stc
aad
aaa
lods
and
pop
cmp
pop
fisubs
mov
negb
dec
in
pop
sub
imul
add
push
insl
bound
jmp
jbe
xchg
jbe
xor
lahf
stc
fistps
repnz
dec
xchg
push
mov
int
jb
iret
cmp
ret
or
mov
cmp
or
mov
bound
pop
or
test
jg
into
sbb
mov
mov
mov
in
sarl
filds
jbe
jge
mov
and
and
ret
inc
push
movsl
sbb
mov
mov
add
pop
jg
pop
xchg
xchg
out
dec
inc
jne
pop
sub
addr16
push
call
push
lcall
xchg
andl
sahf
das
shlb
adc
xor
push
ss
maskmovq
idivl
sbb
and
fstps
shrl
and
jl
mov
mov
out
xchg
popf
faddl
xor
xchg
sbb
jge
pop
mov
inc
arpl
sub
out
outsb
cmc
sub
shrb
jno
cltd
push
and
arpl
in
cltd
sub
adc
mov
scas
stos
jb
ret
mov
xchg
xor
lods
lods
push
dec
add
cmpsl
sbb
neg
das
mov
stos
jg
cmpsb
jns
loopne
sub
push
cmpsb
add
notl
xor
popf
push
xchg
sbbb
xchg
sbb
popf
ja
mov
mov
pushf
lods
xor
insl
mov
jnp
movsl
das
add
inc
xor
orb
sarb
lcall
in
mov
mov
inc
xchg
ret
out
cwtl
cmp
jecxz
dec
cmp
cmpsl
imul
jns
lcall
pop
jnp
mov
test
ffreep
jmp
push
into
xchg
jmp
jb
mov
mov
xor
xlat
or
mov
sub
aas
lret
or
mov
fsubrl
mov
je
int3
sbb
sub
js
xor
inc
dec
push
out
sub
mov
inc
imul
cli
daa
cld
js
mov
pop
scas
lock
imul
lock
jbe
xchg
mov
popf
stos
or
xor
add
movl
jnp
pop
hlt
cltd
lret
cs
packssdw
fmulp
adc
clc
cmc
mov
testl
ljmp
dec
and
in
stos
and
sarb
sbb
fs
fstps
mov
or
xlat
in
inc
push
sub
fisubrl
jge
cmp
and
jle
fmul
bound
adc
aas
enter
or
push
dec
adc
and
stos
sbb
xlat
xor
sarl
bound
vrcpss
xor
and
push
cmp
out
fmuls
xor
lret
loopne
jmp
mov
mov
sbb
xchg
fnstsw
icebp
and
push
lea
sub
scas
stos
aad
xchg
xor
sub
stc
insb
mov
fdivs
js
rcrb
xor
pop
sar
cmp
push
imul
mov
ljmp
sbb
and
fdivr
sti
push
inc
dec
adc
push
clc
xchg
xchg
movl
inc
out
ljmp
repnz
adc
loop
mov
fidivl
lods
fdivrl
and
sti
loope
in
loopne
push
cwtl
stc
call
dec
pop
adc
fisttpl
jl
mov
cmc
cs
jae
shlb
shrl
rcrl
xor
or
mov
mov
xchg
mov
lea
fnstcw
test
std
mov
call
inc
and
fwait
bound
push
adc
mov
push
xlat
in
inc
jns
jne
xchg
adc
cld
push
int3
arpl
das
sbb
aas
adc
and
pop
pop
dec
inc
lret
cs
jb
add
mov
rorl
test
int
inc
hlt
pop
lret
mov
dec
jmp
popf
movsb
into
sub
jecxz
mov
stos
test
rorl
nop
dec
cmc
push
push
push
jecxz
xchg
mov
pop
adcl
adc
push
scas
insl
pop
cmc
mov
jae
js
dec
mov
insb
ljmp
xlat
mov
divb
pop
mov
mov
cs
push
add
jge
jne
adc
clc
or
hlt
jb
ret
push
cmpsl
repnz
xor
or
insb
adc
push
mov
aam
in
data16
cmpsl
ds
scas
jbe
mov
xchg
inc
push
popa
fcmovbe
lods
incl
movsb
mov
jno
pop
sbb
and
sbbb
cltd
scas
sbb
js
xchg
or
and
mov
inc
inc
test
pop
dec
ret
push
bound
imul
incb
clc
in
xor
adc
pop
outsl
pop
fcoms
pop
jns
stc
cld
and
adc
out
jg
call
inc
icebp
mulb
hlt
aaa
scas
loopne
lea
daa
inc
mov
mov
push
das
sub
repz
cmp
jmp
inc
jl
xchg
orl
in
ljmp
mov
and
getsec
mov
sahf
mov
pop
stos
mov
movsl
sbb
filds
subl
movsl
lret
or
inc
fadd
rep
pop
xchg
les
outsl
xor
push
test
cmp
mov
cwtl
jp
or
in
hlt
cmp
shrl
add
test
inc
sbb
push
inc
push
in
inc
fidivs
mov
mov
cmp
jns
push
mov
clc
push
in
mov
lret
dec
jp
daa
adcl
cmp
xchg
lea
or
repnz
jns
es
icebp
repnz
and
mov
lfs
dec
inc
nop
out
mov
mov
push
push
mov
aaa
push
sub
sbb
rol
dec
xchg
sub
inc
scas
add
xor
fidivrs
pop
and
pop
mov
adc
aaa
mov
xor
in
test
lret
stos
pop
stos
iret
std
in
dec
xor
jg
inc
decb
mov
lods
sub
sbb
jg
mov
mov
adc
mov
aad
idivl
clc
mov
out
cmp
movsb
jo
out
cmp
outsl
insl
mov
test
push
jl
outsb
mov
es
push
and
out
and
hlt
mov
imul
pop
mov
aas
push
hlt
sti
std
aam
lods
xchg
mov
aam
add
jo
mov
or
ret
cmp
adc
adc
test
or
jl
mov
mov
mov
inc
mov
loopne
sub
mov
mov
xchg
dec
dec
push
pop
xchg
lcall
popf
stos
je
cld
push
fwait
fwait
pop
and
xchg
and
xlat
jnp
pop
mov
sbb
pop
popf
mov
add
stos
xchg
sbb
dec
sti
xchg
jmp
or
loopne
inc
cmp
mov
sub
aam
push
fldcw
mov
fs
mov
xchg
and
insl
inc
and
std
outsb
sti
mov
pop
sub
push
sub
sarl
loopne
bound
xor
dec
and
popa
jnp
out
icebp
loop
jne
ja
aaa
movsl
jno
dec
jbe
xchg
int3
shrl
mov
movsb
repz
repz
inc
imul
or
cmc
mov
int3
shl
lret
lret
pusha
cmpl
sub
repz
mov
and
hlt
mov
shl
lcall
mov
inc
mov
xchg
xor
aaa
push
dec
inc
mov
in
pop
inc
dec
push
cwtl
xor
cs
lea
lock
cli
call
inc
xchg
aad
in
ficoml
sbb
push
push
fldt
cmp
dec
ss
and
pushf
push
and
lds
pusha
fsubs
adc
mov
ja
jbe
jb
or
xor
push
cmp
jmp
pusha
sbb
push
xor
pusha
jb
out
test
imul
push
ret
lcall
push
cwtl
cmpsb
and
fwait
xlat
sub
or
cltd
ja
sub
stos
push
pop
mov
push
popa
xor
jle
in
mov
and
xchg
sbb
fistps
xchg
fbld
push
lcall
mov
push
test
cmp
fimull
js
jmp
shl
jno
inc
roll
add
mov
sbb
call
lahf
push
sub
mov
xchg
mov
and
cmp
jb
jp
sub
sub
dec
sub
scas
hlt
stos
ficoms
lcall
std
call
pushf
aad
xor
aam
push
bound
cmpsb
pop
inc
cmp
arpl
leave
and
xchg
nopl
call
push
sub
inc
inc
sbb
sbb
scas
and
lock
xchg
jbe
cmp
divl
cmc
jge
cwtl
xchg
popw
mov
and
push
pop
rorb
inc
divl
push
or
mov
sub
xchg
clc
pop
pop
add
or
fmuls
dec
xor
adc
xchg
popf
std
das
outsb
dec
test
movsl
inc
pop
fstpt
jge
sbb
ret
xchg
mov
push
adc
rolb
xchg
rcrl
ret
or
notl
in
push
xchg
adc
add
adc
push
jmp
pusha
mov
add
fsub
out
mov
decb
das
xchg
cmpsb
lds
xor
jle
inc
hlt
jo
jg
cmp
es
popf
inc
xchg
lock
xor
es
xlat
loope
jge
push
pop
or
xchg
in
aaa
dec
and
push
mov
add
mov
sbb
sbb
enter
out
andb
push
adc
pop
inc
stos
je
int3
jp
xchg
in
ja
scas
lret
sub
mov
push
and
aaa
arpl
or
jecxz
mov
es
fdivl
adc
pushf
sub
adc
dec
push
cmp
ljmp
sbb
jbe
clc
outsb
jmp
inc
sbb
inc
add
js
adc
jnp
adc
adc
xchg
jle
jae
mov
aad
arpl
jne
fidivs
adc
loope
jecxz
mulb
int
push
pop
imul
xorl
sub
push
inc
bound
dec
mov
adc
mov
hlt
test
sbbl
sub
cmp
xor
das
outsl
push
lcall
sbb
push
movsl
xchg
int
dec
out
mov
orb
inc
dec
xchg
rorb
rorl
pop
jae
scas
jecxz
ds
pop
lret
bound
lock
dec
xchg
out
lock
out
stc
dec
cmp
fists
cmc
cs
js
test
js
pop
push
or
pop
xchg
jbe
aad
push
imul
jecxz
mov
into
jmp
jle
or
push
cld
enter
decb
leave
mov
pop
pop
rorb
sti
loop
push
sub
lcall
popa
cmp
ss
or
cmp
jnp
jno
cwtl
sub
mov
cwtl
or
data16
sub
jp
sub
mov
lods
repz
imul
dec
mov
test
jno
into
dec
ss
xor
and
stc
or
rolb
add
out
xchg
mov
mov
jb
stos
and
xchg
dec
cmp
jle
into
ss
pop
fimull
add
push
sti
fistpll
dec
inc
mov
push
in
imul
pop
pop
scas
fst
pop
add
or
mov
aaa
cld
xchg
cs
sti
mov
pop
mov
mov
jp
inc
push
dec
flds
adc
push
lods
lahf
loopne
insl
jns
mov
popa
ja
xor
mov
mov
fsubs
jp
rolb
dec
mov
adc
xlat
xor
paddb
mov
jbe
test
mov
add
sarb
adc
ret
pop
movsl
cmp
jnp
add
mov
int
pop
or
mov
inc
mov
xor
adc
pushf
mov
cmpb
ss
mov
pop
movsb
push
fs
pusha
or
rcll
movsb
pop
sub
fmull
jnp
or
xor
shrb
aam
ljmp
inc
in
out
xchg
aaa
xor
mov
rcl
mov
xchg
inc
das
xchg
into
add
dec
jp
jecxz
stc
js
cmp
cld
xchg
movsl
aad
push
test
test
jae
inc
call
addw
icebp
stos
fmuls
ljmp
pop
dec
and
cmp
add
cmp
cmp
int
inc
xor
jge
rorb
mov
or
push
jle
scas
xor
ljmp
repnz
cld
xor
js
cli
xlat
inc
xor
ret
out
xchg
mov
jecxz
in
sbb
sub
inc
adc
inc
sub
xchg
mov
call
fmul
sub
pop
or
jbe
ja
mov
test
icebp
ffree
ss
xchg
jnp
cs
mov
mov
mov
mov
je
int3
cmp
call
dec
jg
push
cmc
xchg
loope
test
adc
daa
mov
push
test
lahf
or
push
movsl
mov
mov
ljmp
mov
and
sub
dec
mov
shl
addb
loope
sarb
add
mov
push
enter
int3
xchg
jns
pop
or
sbb
and
icebp
xchg
jno
mov
xchg
loope
mov
xchg
xchg
les
cwtl
cmp
dec
test
int3
aas
in
mov
xchg
arpl
aad
sbb
sbb
jg
cmp
enter
daa
int3
fcomp
bound
mov
or
mov
sub
cmp
sub
hlt
movsl
inc
sahf
dec
ret
jno
mov
icebp
fcomps
outsb
in
sar
sub
sub
adc
cmpsb
cmpsb
je
cmp
imul
out
jle
or
mov
cmp
addr16
jbe
and
mov
add
orb
int
mov
mov
fnclex
jnp
notb
or
hlt
add
pop
sar
js
xchg
and
xchg
negl
rorb
mov
jnp
aaa
mov
shrb
pop
fnstenv
fiadds
int3
push
and
cmp
in
xor
or
ja
xchg
call
sahf
lods
aad
dec
jne
fwait
cmp
push
lcall
mov
mov
stc
imul
pop
test
mov
push
iret
xor
and
mov
inc
cmpsl
mov
outsl
adcb
mov
adc
rclb
repnz
mov
push
mov
ja
cmp
rolb
push
push
push
mov
ss
shlb
aad
bound
and
jl
cmpsb
imul
cmp
push
sub
sti
push
push
mov
in
int
rcll
cmp
xlat
and
lock
and
pop
cmp
es
mov
and
and
xchg
sub
nop
mov
and
test
ficompl
cmp
cmp
and
scas
xchg
lahf
aad
sub
push
sub
gs
fisttpl
dec
cmpl
mov
cmp
fld1
addr16
or
cmp
ror
ret
xorl
repnz
clc
cli
mov
add
xlat
lds
bound
aaa
sbb
cmp
cwtl
dec
fisubrs
mov
mov
hlt
lea
pop
repz
xor
cmp
aas
sti
inc
mov
and
adc
push
idivl
cmpsb
mov
loope
sbb
add
mov
testb
movsb
mov
lret
dec
push
aaa
cmpsb
lret
xchg
arpl
and
pop
mov
cmp
insl
test
pop
loope
decb
ds
lds
loopne
ret
out
sub
repz
cmpsl
mov
inc
mov
push
cli
inc
and
lret
xor
jle
pop
cmp
push
pop
repnz
cs
shlb
mov
outsl
jecxz
stos
xchg
inc
std
push
clc
sub
imul
pop
rclb
jo
inc
push
dec
repnz
mov
pop
and
pop
mov
sub
mov
add
test
sbb
cmc
add
xor
push
iret
movsl
xchg
pop
adc
ret
push
cmp
movsl
sub
in
inc
shlb
mov
outsb
add
xchg
and
adc
popa
movsl
mov
dec
ljmp
mov
push
cmpl
and
mov
push
in
mov
push
dec
out
and
cs
sub
lret
sub
mov
sub
jb
int3
mov
mov
pop
cmp
ljmp
cld
outsb
jns
pop
scas
in
adc
sbb
jns
repz
outsl
aaa
pop
mov
nop
mov
sbb
fwait
mov
arpl
mov
mov
pop
mov
sub
sub
mov
sbb
jl
jmp
adc
in
sbb
ss
lret
jns
sbb
cmc
mov
dec
sti
in
cld
jnp
in
dec
ret
and
jl
push
aaa
popa
push
mov
roll
add
add
inc
jb
imul
push
cwtl
sahf
mov
mov
lea
jge
sub
shrb
fnsave
and
int
rclb
mov
push
ds
cld
scas
lret
daa
sub
pusha
push
mov
push
inc
mov
sbb
push
sbb
stos
sub
sub
inc
insb
in
outsb
sar
pushf
loop,pn
outsb
inc
xchg
jg
test
loopne
sub
arpl
push
inc
ljmp
pop
pop
push
shlb
pop
sbb
stc
and
mov
imul
adc
pop
fadds
xlat
decb
inc
data16
jo
jbe
cmp
shl
rclb
cli
sbb
jg
mov
lcall
iret
dec
ds
xor
enter
test
popa
cmp
js
icebp
fadds
or
and
into
inc
sti
aad
pop
mov
and
dec
lahf
and
jno
cmpsl
loopne
lcall
or
repnz
jbe
cld
sbb
or
inc
out
push
ds
jae
divb
or
xor
mov
adc
dec
pop
push
sbb
inc
and
jae
adc
scas
aaa
fisttpl
call
fwait
mov
imul
push
cmpsl
leave
jae
lods
stos
add
inc
out
fldl2t
repnz
inc
mov
sbb
push
mov
movsl
or
add
mov
clc
mov
push
out
ret
and
push
sub
into
mov
mov
nop
jne
loope
lds
mov
xor
ret
pop
pop
xchg
pop
xchg
sbb
or
pop
lds
sti
mov
es
dec
jnp
dec
addr16
pop
sub
into
std
shrb
cmpsb
pop
cmpsb
and
fcoml
nop
sub
fidivrl
in
inc
xchg
xchg
aad
bound
inc
leave
push
insl
clc
lcall
int3
rol
jns
cmpsl
xchg
pop
mov
push
pop
push
pop
jbe
mov
cmp
mov
mov
mov
xchg
or
xor
movsb
inc
cmpb
cld
xor
xchg
push
and
outsl
iret
mov
push
jo
int3
mov
jno
aad
sti
int
pop
mov
xor
mov
jmp
or
mov
ret
outsl
dec
pusha
pop
fprem
jns
in
xor
sub
fdivrs
cwtl
jns
je
jo
mov
lods
xor
sbb
iret
xchg
cmpsb
dec
pop
mov
cltd
mov
mov
push
or
in
pop
movsb
fwait
xchg
test
in
in
ret
cmpl
jnp
fnsave
pop
xor
mov
mov
fldenv
jne
mov
in
les
jge
jbe
dec
arpl
jne
or
cmp
adc
and
pushf
rorb
lock
fnsave
cmp
push
in
add
ljmp
adc
mov
jns
in
cmpsb
xchg
xchg
push
and
mov
adc
xchg
mov
push
int3
loopne
inc
dec
repnz
lahf
xchg
jo
mov
mov
notb
repz
stc
pop
push
jp
fildll
push
inc
test
xorl
inc
clc
pop
inc
aaa
ja
bound
ja
adc
negl
mov
jno
inc
in
cmp
std
mov
rolb
test
out
ret
push
cmp
aas
xor
addr16
scas
jno
inc
jb
scas
sbb
cmp
xchg
cmp
pop
push
jno
fiadds
push
inc
movsb
in
inc
sbb
pushfw
dec
lcall
std
jb
xor
in
ds
add
pop
scas
xor
in
push
xchg
dec
ss
lods
jp
cli
xor
icebp
incb
push
sbb
mov
dec
inc
stc
xor
shrl
lods
rcr
mov
xchg
mov
cmovp
pop
inc
lret
inc
push
pop
je
mov
sbb
pushf
xchg
notl
xchg
fcom
icebp
or
lds
xlat
xchg
insl
inc
pop
scas
jge
pop
dec
das
rcl
mov
cmp
adc
or
mov
fildl
cmp
pop
ss
dec
icebp
mov
lcall
mov
stc
shll
jb
jno
insl
movsl
sbb
mov
test
aad
int3
xor
push
cld
dec
or
adc
jmp
push
jmp
cmpsb
icebp
push
cltd
addl
mov
adc
jae
nop
mov
bound
fldl
loopne
ljmp
adc
dec
xchg
jne
stos
aas
pop
stos
scas
movsb
lds
jae
bound
sub
jae
sbb
add
push
cli
pop
imul
add
mov
mov
push
cli
in
es
add
popa
lds
push
xor
cmp
cli
jmp
xchg
incl
jle
ret
addl
inc
jns
fsts
push
adc
mov
fsubrp
dec
jae
mov
mov
lock
cmp
sub
mov
adc
fwait
push
cmp
xchg
aas
sbb
hlt
cltd
int
and
das
adc
mov
or
adc
dec
dec
sub
cld
xor
mov
and
daa
sub
xchg
cs
push
jns
cmp
add
aas
in
fldt
ss
insl
popf
or
test
xchg
mov
ds
jecxz
jns
jl
pop
rorb
sbb
out
scas
cmc
daa
mov
xchg
movsb
sbb
mov
mov
stc
pop
loopne
cmp
loop
gs
cmp
lods
in
movb
jae
shrb
ljmp
imul
cmp
pop
in
mov
lock
repnz
dec
std
into
in
add
mov
adc
xchg
test
sub
rorb
mov
and
cmp
jl
mov
add
fstps
jnp
cmp
fcom
dec
lock
adc
repz
xor
dec
dec
dec
out
enter
inc
push
leave
mov
imul
aas
mov
sub
and
cmpsb
xor
dec
mov
movsb
mov
fcoml
repz
push
sub
lods
cmp
cmp
xor
or
shlb
pushf
xchg
mov
aas
or
pushf
push
lods
push
int3
dec
cs
icebp
xor
pop
mov
aam
cmp
scas
aas
mov
sub
mov
mov
mov
sbb
dec
mov
mov
lahf
mov
mov
mov
xchg
dec
sar
aam
mov
out
cmc
dec
enter
filds
pop
cmp
pop
push
dec
xchg
lret
arpl
mov
outsl
xchg
test
lods
aam
mov
sarl
sub
mov
jge
lret
sar
inc
jno
idivl
push
fcoml
jo
pop
and
push
xor
daa
xchg
jl
pop
mov
loope
sub
cmp
pop
lahf
out
rcr
movsl
push
xor
lods
pushf
sti
lock
loopne
pop
jnp
mov
pop
out
flds
movsl
mov
pop
mov
jmp
out
lds
lds
outsl
push
scas
jns
cmp
std
push
movsl
repnz
stos
lcall
push
pop
sahf
sbb
lds
xchg
lods
imul
cmc
ljmp
dec
outsb
sti
divb
add
mov
mov
fimull
fldcw
cld
and
xor
sub
scas
inc
sbb
and
add
cli
clc
jge
fldl
imul
and
fsubr
pop
stc
je
ror
sti
lock
xor
cmpsb
push
outsb
mov
out
sbbl
or
adc
lds
sti
mov
aaa
add
leave
stos
adc
pop
shrl
outsb
dec
jmp
add
adc
adc
add
xchg
lods
mov
mov
pop
cmp
ret
insl
sub
mov
jbe
out
push
and
fsubs
pushf
clc
pop
pop
pop
leave
ret
push
mov
push
movl
movl
cmpl
je
cmpl
jb
jmp
push
push
call
cmpl
jne
xor
xor
dec
mov
mov
dec
mov
jmp
mov
or
movsbl
or
mov
addl
sub
movl
cmpl
je
cmpl
jl
jmp
push
push
push
call
cmpl
jne
mov
dec
mov
xor
add
dec
mov
jmp
mov
xor
cmp
jne
mov
push
mov
add
mov
mov
mov
xor
add
cmp
pop
je
mov
jmp
mov
xor
add
leave
ret
push
mov
sub
andl
mov
inc
mov
cmpl
jl
jmp
pushl
call
cmpl
jb
push
mov
mov
mov
sub
sub
mov
andl
movl
sub
push
andl
jmp
xor
or
inc
mov
cmpl
jae
cmpl
jbe
jmp
push
pushl
pushl
call
jmp
mov
andl
mov
addl
mov
adc
mov
mov
and
xor
addl
xor
mov
mov
adc
mov
add
add
imul
mov
cmp
je
mov
mov
mov
xor
lea
mov
mov
mov
mov
xor
xor
add
add
imul
mov
cmp
je
mov
xor
mov
add
imul
add
mov
mov
jmp
mov
mov
xor
xor
add
add
imul
pop
pop
leave
ret
add
push
test
add
add
add
add
add
add
add
push
cmp
add
add
add
inc
push
pop
pop
loope
repnz
dec
mov
dec
pop
pop
add
add
inc
cmp
outsb
outsl
ja
and
pop
inc
imul
mov
sub
push
mov
xchg
mov
cmp
jne
mov
cmp
jne
mov
mov
mov
mov
mov
mov
mov
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
xor
lea
movzbl
xor
add
inc
mov
cmp
jb
xor
lea
movzbl
xor
add
inc
mov
cmp
jb
xor
lea
movzbl
xor
add
inc
mov
cmp
jb
lea
mov
mov
mov
mov
mov
push
push
mov
mov
cmp
jne
lea
mov
mov
mov
add
mov
lea
mov
add
mov
lea
mov
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
lea
push
mov
mov
xor
add
push
mov
lea
mov
lea
push
mov
mov
mov
mov
mov
movl
movl
movl
movl
pushl
mov
call
mov
mov
test
je
xorl
jmp
mov
mov
mov
xor
cmp
jne
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
mov
movl
movl
lea
pop
mov
xor
add
mov
inc
dec
jne
lea
mov
lea
push
mov
xor
add
push
mov
add
push
mov
mov
movl
pushl
mov
call
mov
xor
add
mov
cmp
jne
mov
or
mov
add
mov
mov
mov
mov
add
mov
mov
mov
mov
add
mov
mov
mov
inc
mov
mov
mov
mov
mov
mov
lea
mov
mov
mov
mov
mov
mov
mov
lea
mov
inc
mov
lea
mov
mov
mov
mov
movzwl
xor
add
xor
mov
mov
movzwl
xor
add
xor
mov
xor
mov
mov
mov
lea
lea
movl
mov
call
mov
lea
push
mov
xor
add
push
lea
push
pushl
mov
call
mov
lea
lea
mov
call
mov
mov
mov
pushl
pushl
pushl
pushl
pushl
pushl
pushl
call
test
je
add
pushl
lea
call
mov
mov
mov
xor
add
mov
jne
mov
mov
pushl
mov
call
jmp
mov
mov
add
mov
mov
decl
mov
mov
mov
lea
mov
mov
mov
mov
add
pop
pop
pop
leave
ret
push
push
push
push
mov
mov
add
push
cld
mov
add
push
mov
lods
xchg
push
mov
or
shl
not
push
mov
or
shl
not
push
add
mov
sub
sub
inc
push
push
push
push
push
push
sub
push
or
mov
shl
lea
mov
shr
rep
push
pop
call
loop
lea
lea
mov
mov
sub
and
mov
mov
call
jne
mov
and
shl
sub
neg
shr
pop
add
pop
lea
shl
cmp
pop
lea
push
push
mov
push
mov
jb
mov
sub
movzbl
mov
shl
mov
and
add
lea
call
mov
shr
and
cmp
mov
jne
cmp
jb
jmp
mov
call
inc
inc
sub
sub
cmp
jb
pop
inc
cmp
dec
mov
jb
inc
cmp
dec
mov
dec
jb
mov
dec
sub
push
jmp
mov
dec
call
jne
pop
pop
pop
pop
pop
pop
pushl
push
push
mov
mov
jmp
mov
dec
call
jne
mov
dec
call
jne
pop
cmp
mov
jb
mov
push
mov
sub
cmp
jb
lods
mov
stos
jmp
mov
call
mov
je
mov
call
mov
je
mov
mov
mov
mov
mov
mov
mov
mov
pop
pop
pop
mov
mov
add
push
push
cmp
mov
jb
add
push
mov
call
jne
mov
mov
shl
sub
push
pop
lea
jmp
mov
add
call
jne
mov
mov
shl
push
pop
push
pop
lea
jmp
mov
add
push
pop
mov
mov
sub
inc
mov
call
mov
sub
jb
add
cmpl
jae
addl
mov
cmp
jb
push
pop
mov
shl
sub
inc
push
pop
lea
mov
call
mov
sub
jb
mov
mov
cmp
jb
mov
andl
shr
orl
dec
cmp
jae
mov
sub
mov
shlb
add
shl
add
mov
jmp
sub
call
shr
shll
cmp
jb
incl
sub
dec
jne
mov
add
mov
shll
push
pop
sub
inc
mov
mov
call
test
je
or
shl
dec
jne
jmp
incl
mov
add
mov
mov
sub
cmp
ja
mov
sub
mov
lods
stos
cmp
jae
dec
jne
mov
movzbl
cmp
jb
call
sub
lea
mov
mov
sub
mov
mov
mov
jl
lods
outsl
scas
hlt
add
testl
jbe
xchg
mov
cmpsl
loopne
pop
push
pop
notl
pushf
or
pushf
or
mov
lcall
xchg
pushf
sub
popa
mov
stos
mov
mov
jbe
xchg
mov
pop
pop
cmpsl
jae
pop
clc
push
stc
mov
xchg
cmpsl
test
lret
movzwl
shr
imul
cmp
jae
mov
mov
sub
shr
add
add
lea
ret
shr
sub
sub
sub
add
add
lea
ret
push
mov
sub
push
push
push
movl
movl
mov
mov
mov
mov
xor
mov
add
mov
mov
xor
add
mov
mov
xor
add
mov
mov
xor
add
mov
movl
movl
movl
push
pop
mov
mov
push
pop
mov
mov
movl
movl
mov
xor
add
mov
mov
xor
add
mov
movl
movl
movl
lea
lea
call
decl
jne
decl
jne
decl
jne
movl
mov
xor
mov
add
mov
mov
andl
xor
add
mov
mov
mov
mov
mov
mov
mov
mov
lea
mov
mov
lea
mov
mov
pushl
lea
mov
call
mov
xor
add
cmp
je
mov
mov
mov
mov
mov
mov
add
mov
mov
lea
push
mov
mov
mov
add
push
pushl
push
call
pushl
xor
movl
movl
movl
movb
lea
stos
stos
stos
xor
movl
movl
movl
movb
lea
stos
stos
stos
mov
mov
mov
movl
movl
movw
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
call
push
mov
mov
pushl
call
test
jne
mov
mov
mov
add
mov
mov
mov
call
push
mov
call
test
jne
mov
mov
mov
add
mov
mov
mov
call
push
mov
call
mov
mov
xor
add
cmp
je
mov
xor
mov
sub
add
mov
cmp
ja
movl
pushl
mov
mov
mov
call
push
mov
mov
pushl
call
mov
mov
mov
mov
mov
mov
xor
lea
call
push
mov
mov
pushl
call
mov
mov
mov
mov
xor
lea
call
push
mov
mov
pushl
call
mov
mov
mov
xor
lea
call
push
mov
mov
pushl
call
andl
mov
mov
and
add
push
call
test
je
mov
push
xor
pop
div
add
movzbl
push
call
test
jne
mov
mov
mov
xor
lea
call
push
mov
mov
pushl
call
mov
jmp
andl
incl
cmpl
jb
mov
mov
xor
mov
add
lea
call
push
mov
mov
xor
add
lea
call
push
call
mov
xor
add
cmp
jne
movl
mov
mov
xor
lea
mov
mov
test
je
mov
mov
xor
lea
mov
mov
xor
mov
sub
add
mov
cmp
jbe
mov
mov
mov
cmp
jne
pushl
lea
push
call
mov
jmp
mov
mov
xor
add
xor
mov
mov
xor
add
cmp
je
mov
mov
xor
add
cmp
je
mov
xor
add
jmp
mov
mov
and
or
sub
add
mov
xor
lea
mov
cmp
jb
mov
mov
mov
movl
mov
mov
mov
mov
xor
add
mov
mov
xor
add
mov
movl
movl
mov
mov
xor
add
cmp
je
jmp
mov
mov
sub
mov
xor
add
xor
div
mov
mov
mov
xor
add
cmp
jbe
mov
xor
add
mov
mov
mov
xor
add
imul
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
add
movl
mov
movl
mov
movl
mov
mov
xor
add
jmp
movl
movl
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
xor
add
add
imul
add
mov
mov
mov
cmp
jb
mov
mov
xor
add
imul
mov
xor
add
or
mov
xor
add
mov
xor
add
mov
lea
jmp
mov
mov
xor
lea
mov
mov
xor
mov
sub
add
mov
mov
xor
add
imul
cmp
jbe
mov
mov
mov
mov
mov
xor
add
push
mov
xor
add
push
push
mov
mov
xor
add
push
call
mov
mov
xor
add
cmp
je
mov
jmp
mov
xor
mov
mov
mov
xor
lea
xor
mov
sub
xor
cmp
jne
mov
mov
mov
xor
add
push
mov
xor
add
push
pushl
call
mov
mov
mov
mov
mov
mov
xor
mov
add
movl
movl
jmp
xor
mov
xor
add
mov
movsbl
movzbl
cmp
jne
mov
mov
xor
lea
xor
cmp
jne
jmp
mov
xor
add
mov
xor
add
cmp
je
mov
movl
movl
movl
movl
mov
mov
mov
xor
add
push
mov
mov
xor
add
push
mov
xor
add
push
mov
xor
add
push
call
mov
mov
mov
mov
xor
add
push
mov
xor
add
push
mov
pushl
xor
add
push
call
mov
xor
add
mov
cmp
je
mov
xor
add
cmp
je
movl
movl
mov
xor
sub
mov
mov
xor
sub
mov
mov
xor
sub
mov
andl
andl
lea
push
pushl
push
lea
push
mov
pushl
mov
add
push
push
call
mov
mov
mov
mov
xor
add
push
mov
xor
add
push
push
call
mov
add
xor
cmp
mov
mov
mov
jne
xor
add
push
mov
xor
add
push
pushl
call
mov
mov
mov
mov
jmp
xor
add
push
mov
xor
add
push
pushl
call
mov
mov
mov
movl
mov
mov
mov
mov
xor
add
mov
mov
xor
add
mov
movl
movl
mov
mov
xor
add
cmp
je
jmp
mov
mov
sub
mov
xor
add
xor
div
mov
mov
mov
xor
add
cmp
jbe
mov
xor
add
mov
mov
mov
xor
add
imul
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
add
movl
mov
movl
mov
movl
mov
mov
xor
add
jmp
movl
movl
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
xor
add
add
imul
add
mov
mov
mov
cmp
jb
mov
mov
xor
add
imul
mov
xor
add
or
mov
xor
add
mov
xor
add
mov
lea
jmp
mov
mov
xor
lea
mov
mov
xor
mov
sub
add
mov
mov
xor
add
imul
cmp
jbe
pushl
mov
pushl
lea
push
mov
mov
pushl
mov
mov
pushl
pushl
pushl
call
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
xor
add
push
mov
xor
add
push
pushl
call
pop
pop
pop
leave
ret
push
mov
push
push
lea
mov
push
mov
mov
mov
mov
cmp
pop
jne
movb
movb
movb
movb
leave
ret
push
mov
push
push
lea
mov
mov
mov
mov
mov
cmp
jne
mov
movb
movb
movb
movb
leave
ret
push
mov
push
push
lea
mov
mov
mov
mov
mov
cmp
jne
movb
mov
movb
movb
leave
ret
push
mov
push
push
lea
mov
push
mov
mov
mov
mov
cmp
pop
jne
movb
movw
movb
leave
ret
push
mov
push
push
lea
mov
mov
mov
mov
mov
cmp
jne
mov
movb
movb
movb
leave
ret
push
mov
call
mov
mov
movb
call
push
mov
movb
call
push
movb
call
movb
mov
jmp
push
mov
push
mov
push
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
movl
mov
movzwl
xor
add
pop
test
je
mov
movl
leave
ret
push
mov
sub
andl
movl
movl
movl
movl
movl
mov
mov
mov
mov
push
push
mov
mov
mov
mov
mov
push
mov
test
jne
pushl
mov
call
mov
mov
add
mov
mov
mov
mov
xor
mov
add
cmp
jne
mov
mov
mov
mov
mov
mov
xor
add
mov
mov
andl
xor
add
mov
lea
push
mov
xor
add
push
mov
add
push
mov
mov
movl
pushl
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
mov
lea
mov
lea
push
mov
xor
add
push
mov
add
push
mov
mov
movl
pushl
mov
call
test
je
andl
cmpl
jbe
mov
mov
sub
mov
incl
mov
mov
inc
cmp
jb
mov
mov
add
mov
mov
add
sub
add
mov
mov
mov
movl
jmp
add
shr
mov
je
lea
mov
mov
mov
mov
movzwl
mov
and
mov
mov
shr
add
xor
cmp
jne
mov
add
mov
cmpl
je
mov
add
mov
mov
mov
mov
addl
decl
jne
mov
add
mov
cmp
jae
add
mov
mov
test
jne
mov
mov
movl
mov
mov
mov
xor
add
mov
lea
mov
lea
push
mov
xor
add
push
mov
add
push
mov
mov
pushl
mov
call
mov
mov
add
mov
pushl
mov
pushl
pushl
call
mov
add
lea
mov
mov
mov
mov
mov
mov
mov
cmp
jb
mov
mov
mov
lea
mov
add
cmp
jae
mov
mov
mov
sub
add
mov
mov
jmp
xor
pop
pop
pop
leave
ret
push
mov
sub
push
mov
mov
cmpl
je
test
je
test
je
mov
test
je
cmpl
je
cmp
je
mov
andl
mov
sub
add
movzwl
mov
movzwl
add
je
lea
push
mov
mov
push
test
je
mov
andl
and
add
movzwl
movzwl
add
je
lea
mov
test
je
mov
andl
and
add
movzwl
movzwl
add
je
lea
mov
mov
mov
test
je
mov
add
movzwl
movzwl
incl
addl
add
cmp
jb
movzwl
movzwl
mov
incl
add
add
mov
cmp
jb
mov
movzwl
movzwl
incl
add
add
mov
cmp
jb
pop
pop
xor
inc
jmp
xor
pop
leave
ret
push
mov
mov
mov
sub
push
xor
push
push
cmp
je
cmp
je
cmp
jne
xor
inc
jmp
mov
add
mov
mov
mov
mov
add
add
mov
cmp
ja
mov
mov
cmp
jbe
cmp
jae
movzwl
jmp
mov
lea
mov
test
je
add
mov
cmp
jbe
mov
mov
add
cmp
jae
mov
jmp
sub
mov
mov
test
je
mov
inc
mov
cmp
jb
jmp
xor
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
movl
mov
mov
mov
mov
mov
mov
push
mov
push
mov
movl
mov
mov
push
mov
xor
xor
add
add
mov
cmp
je
mov
mov
xor
add
cmp
je
mov
mov
xor
add
cmp
je
add
mov
mov
xor
add
mov
mov
cmp
je
mov
mov
imul
xor
add
cmp
jne
mov
mov
imul
xor
add
cmp
je
mov
mov
mov
imul
add
mov
add
xor
mov
mov
mov
xor
add
xor
mov
mov
add
add
cmp
je
add
mov
mov
xor
add
mov
lea
mov
movl
mov
pushl
mov
call
mov
xor
add
mov
cmp
jne
mov
pushl
mov
call
mov
movl
movl
mov
xor
add
cmp
jne
mov
mov
xor
xor
lea
mov
mov
add
imul
push
call
mov
xor
add
cmp
jne
mov
xor
add
cmp
jbe
mov
xor
add
cmp
jne
mov
mov
xor
lea
mov
jmp
movl
movl
mov
xor
add
jmp
mov
xor
add
mov
mov
xor
add
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
mov
mov
mov
xor
add
cmp
je
mov
mov
xor
add
shr
cmp
je
mov
mov
mov
movzwl
push
pushl
call
jmp
mov
add
mov
mov
add
push
pushl
call
mov
mov
mov
xor
add
cmp
mov
jne
mov
xor
lea
mov
jmp
mov
xor
add
imul
mov
mov
mov
xor
lea
mov
mov
xor
add
cmp
jne
mov
mov
mov
sub
xor
jmp
mov
xor
add
cmp
mov
jne
mov
jmp
mov
xor
add
pop
pop
pop
leave
ret
push
mov
sub
movl
movl
mov
mov
push
mov
mov
mov
mov
xor
mov
add
cmp
je
mov
mov
add
push
mov
movl
mov
mov
mov
xor
xor
add
cmp
je
mov
mov
add
mov
mov
sub
mov
xor
add
mov
cmp
je
mov
xor
add
mov
push
movl
jmp
mov
xor
lea
add
shr
cmp
jae
sub
lea
mov
movzwl
and
mov
mov
mov
sub
add
movzwl
shr
xor
mov
mov
mov
mov
xor
lea
mov
mov
mov
xor
add
cmp
jne
mov
mov
xor
add
cmp
jne
mov
mov
add
add
decl
jne
mov
add
mov
mov
mov
xor
cmp
jae
add
mov
mov
xor
add
mov
cmp
jne
pop
mov
pop
jmp
mov
xor
add
pop
leave
ret
push
mov
sub
movl
movl
mov
push
push
mov
xor
push
mov
add
mov
mov
xor
add
mov
mov
mov
mov
xor
mov
addl
mov
mov
xor
mov
addl
mov
mov
xor
mov
addl
mov
mov
xor
mov
addl
movl
mov
test
je
mov
test
je
mov
test
je
mov
mov
xor
add
cmp
jne
mov
xor
add
mov
mov
mov
mov
add
mov
mov
test
je
movl
mov
xor
add
mov
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
cmp
jne
mov
lea
push
mov
xor
add
push
pushl
pushl
call
mov
mov
mov
sub
add
push
call
mov
mov
mov
mov
pushl
pushl
push
call
mov
mov
add
movzwl
lea
mov
mov
movzwl
xor
add
mov
cmp
je
mov
xor
add
mov
mov
movzwl
xor
sub
sub
cmp
ja
mov
add
mov
jmp
mov
mov
lea
mov
mov
test
je
not
and
add
mov
add
push
call
mov
mov
mov
xor
add
cmp
je
push
mov
add
mov
add
push
push
call
mov
mov
mov
add
xor
lea
mov
mov
mov
movzwl
xor
sub
mov
sub
mov
cmp
jbe
mov
mov
cmp
jne
mov
lea
push
mov
xor
add
push
mov
pushl
push
call
test
je
mov
mov
mov
xor
add
je
mov
xor
add
andl
mov
mov
lea
movl
movl
mov
mov
mov
movl
mov
mov
xor
mov
add
mov
incl
cmpl
mov
jb
mov
mov
mov
mov
mov
mov
lea
mov
mov
movl
mov
mov
movl
movl
movl
movl
movl
mov
movl
mov
movl
mov
movl
mov
movl
movl
xor
mov
xor
sub
mov
inc
cmp
jb
mov
lea
push
call
mov
lea
push
push
call
mov
lea
push
mov
pushl
mov
call
mov
xor
add
mov
mov
mov
xor
add
cmp
je
mov
jmp
mov
mov
mov
mov
cmp
je
mov
mov
cmp
jne
mov
mov
cmp
jne
mov
mov
mov
add
mov
mov
xor
add
mov
mov
push
push
pushl
call
test
je
pushl
mov
pushl
call
test
je
mov
mov
mov
call
test
je
push
pushl
call
test
je
mov
mov
cmp
jne
mov
lea
push
pushl
mov
pushl
push
call
mov
mov
mov
xor
add
je
mov
mov
movl
mov
pushl
xor
pushl
add
or
add
push
call
movl
jmp
mov
mov
add
call
mov
mov
mov
mov
movl
cmpl
jne
andl
mov
jmp
xor
pop
pop
pop
leave
ret
push
mov
movzwl
movzwl
push
push
xor
lea
test
je
mov
lea
cmp
jb
mov
add
add
cmp
jb
add
inc
cmp
jb
xor
pop
pop
pop
ret
push
mov
sub
movl
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
push
mov
xor
push
mov
mov
add
push
cmp
je
mov
mov
xor
add
cmp
je
mov
xor
add
mov
mov
xor
add
mov
mov
mov
mov
xor
mov
xor
add
add
sub
mov
jmp
mov
mov
xor
add
cmp
je
mov
mov
xor
add
cmp
mov
mov
je
cmp
je
mov
mov
xor
add
cmp
jb
mov
mov
xor
add
cmp
ja
movzwl
movzwl
add
mov
mov
mov
xor
add
cmp
jb
mov
mov
xor
add
cmp
ja
movzwl
movzwl
add
mov
mov
mov
cmp
jne
mov
mov
xor
lea
mov
mov
mov
xor
lea
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
cmp
jne
mov
mov
xor
add
imul
mov
jmp
mov
mov
xor
lea
mov
mov
sub
xor
mov
mov
sub
xor
mov
mov
mov
xor
add
xor
add
imul
mov
movzwl
mov
mov
xor
add
xor
add
imul
mov
movzwl
sub
sub
xor
xor
cmp
jne
mov
mov
xor
add
xor
add
imul
mov
movzwl
mov
sub
xor
cmp
mov
je
mov
pop
xor
pop
add
pop
leave
ret
push
mov
push
mov
push
mov
sub
mov
xor
mov
movl
mov
cmp
je
push
push
movzwl
mov
mov
mov
cmp
jne
mov
lea
xor
mov
xor
mov
mov
sub
mov
xor
mov
cmp
jne
mov
pop
pop
cmp
je
xor
lea
pop
leave
ret
push
mov
push
push
push
movl
mov
call
mov
mov
sub
xor
cmp
je
mov
mov
mov
push
mov
mov
sub
mov
xor
mov
cmp
jne
mov
lea
xor
mov
xor
lea
mov
sub
xor
cmp
jne
mov
pop
cmp
je
xor
xor
mov
mov
pop
pop
leave
ret
push
mov
push
push
movl
mov
call
mov
mov
sub
mov
xor
mov
cmp
je
push
push
movzwl
mov
mov
mov
cmp
jne
mov
lea
xor
mov
xor
mov
mov
sub
mov
xor
mov
cmp
jne
cmpl
pop
pop
je
xor
inc
jmp
xor
pop
leave
ret
push
mov
push
mov
movzwl
push
lea
mov
push
xor
mov
mov
cmp
je
mov
sub
mov
jmp
mov
mov
add
movzwl
mov
add
xor
mov
cmp
jne
xor
pop
mov
mov
pop
leave
ret
push
mov
sub
movl
movl
mov
push
mov
xor
mov
add
mov
movl
movl
push
movl
jmp
mov
mov
sub
mov
xor
add
cmp
jbe
mov
add
mov
add
mov
mov
mov
mov
mov
jmp
mov
mov
sub
mov
xor
add
cmp
mov
jbe
add
mov
add
mov
mov
mov
jmp
mov
sub
mov
xor
add
cmp
mov
jbe
add
mov
add
mov
mov
mov
mov
xor
lea
mov
jmp
add
mov
add
mov
mov
incl
mov
mov
xor
add
imul
mov
mov
xor
lea
cmp
jb
pop
pop
leave
ret
push
mov
sub
movl
push
mov
movl
mov
mov
xor
mov
add
cmp
je
push
push
mov
mov
xor
mov
sub
add
lea
xor
mov
mov
mov
xor
sub
xor
mov
mov
xor
add
cmp
jne
pop
pop
pop
leave
ret
push
mov
sub
movl
movl
mov
mov
mov
push
push
mov
xor
mov
add
cmp
mov
jne
xor
add
jmp
mov
xor
add
cmp
jne
mov
jmp
lea
mov
mov
mov
mov
xor
add
mov
mov
push
call
mov
mov
mov
jmp
mov
sub
mov
mov
mov
call
mov
pushl
mov
call
mov
xor
add
cmp
jne
mov
call
mov
xor
add
push
pushl
mov
call
mov
xor
add
cmp
je
mov
mov
mov
mov
mov
add
cmp
jne
mov
xor
add
pop
pop
pop
leave
ret
mov
mov
jmp
push
mov
mov
sub
cmpl
push
push
push
je
test
je
movzwl
mov
mov
xor
and
mov
xor
add
mov
andl
xor
push
pop
cmp
jae
lea
xor
movzwl
mov
lea
cmp
jne
movzwl
mov
cmp
jne
mov
movzwl
cmpb
je
mov
movzwl
movsbw
mov
sub
xor
cmp
je
push
pop
incl
mov
cmp
jb
jmp
incl
push
pop
mov
movzwl
cmpb
je
inc
cmp
jne
xor
pop
pop
pop
leave
ret
mov
add
xor
xor
cmp
sete
jmp
push
mov
sub
push
mov
mov
cmpl
jne
xor
jmp
pushl
push
pop
call
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
push
mov
mov
call
push
mov
pushl
call
mov
test
je
mov
push
push
mov
add
mov
mov
mov
mov
add
mov
mov
add
add
mov
mov
mov
cmp
ja
mov
xor
mov
cmp
jbe
jmp
mov
mov
movzwl
cmp
jae
cmp
jae
mov
mov
mov
mov
lea
add
add
sub
movl
mov
mov
cmpl
jne
mov
pushl
push
call
mov
test
je
mov
mov
mov
addl
decl
jne
mov
inc
mov
cmp
jb
pop
pop
pop
leave
ret
push
mov
mov
push
pushl
lea
mov
call
mov
mov
mov
xor
cmp
pop
setne
mov
pop
ret
mov
push
jmp
xor
add
mov
add
add
movzwl
mov
cmp
jne
xor
mov
mov
pop
ret
push
mov
mov
shl
add
jmp
xor
add
mov
inc
inc
mov
cmp
jne
movb
mov
add
pop
ret
push
mov
sub
movl
movl
mov
mov
movl
push
push
movl
mov
mov
mov
xor
mov
xor
add
add
imul
jmp
mov
mov
xor
xor
add
add
test
mov
mov
je
xor
xor
add
add
shr
mov
xor
add
xor
jmp
xor
xor
add
add
shr
mov
mov
xor
lea
mov
mov
xor
xor
sub
cmp
jbe
mov
pop
mov
mov
pop
leave
ret
push
mov
sub
push
mov
mov
lea
mov
mov
mov
push
mov
xor
push
mov
add
cmp
mov
je
mov
xor
add
cmp
je
mov
mov
mov
mov
movl
mov
lea
mov
mov
mov
mov
mov
xor
mov
sub
sub
mov
movl
jmp
mov
mov
xor
xor
lea
mov
xor
div
mov
mov
xor
xor
sub
cmp
jne
mov
mov
mov
mov
mov
xor
xor
add
add
cmp
jae
lea
mov
mov
xor
add
lea
mov
mov
cmp
jbe
addl
jmp
addl
mov
xor
inc
incl
add
cmp
jb
mov
cmpl
jne
xor
add
jmp
mov
xor
mov
sub
add
mov
xor
sub
ror
xor
mov
mov
mov
mov
mov
sub
xor
cmp
jne
mov
mov
xor
xor
sub
mov
sub
xor
mov
mov
xor
sub
sub
jmp
mov
xor
mov
sub
add
mov
mov
cmp
jne
mov
jmp
mov
xor
add
pop
pop
pop
leave
ret
push
mov
sub
movl
movl
movl
push
movl
mov
push
mov
push
xor
mov
add
mov
movl
movl
movl
mov
mov
mov
xor
xor
add
add
imul
jmp
mov
sub
xor
mov
lea
call
mov
mov
mov
mov
mov
mov
xor
lea
mov
mov
mov
xor
xor
sub
mov
cmp
jbe
mov
xor
add
mov
movl
mov
jmp
mov
mov
xor
add
shr
mov
mov
mov
mov
mov
mov
movzbl
xor
mov
mov
mov
xor
add
and
mov
mov
xor
mov
mov
xor
lea
mov
mov
xor
mov
sub
add
mov
mov
mov
xor
add
cmp
jne
mov
mov
xor
add
pop
pop
xor
pop
leave
ret
push
mov
mov
mov
mov
mov
mov
sub
push
push
push
mov
xor
mov
add
cmp
jne
orl
jmp
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
mov
mov
movl
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
mov
xor
add
mov
mov
xor
add
mov
mov
mov
sub
mov
mov
mov
mov
dec
test
mov
je
mov
mov
mov
dec
not
and
mov
mov
add
jmp
mov
mov
mov
xor
add
mov
mov
xor
add
mov
mov
mov
xor
add
mov
mov
movl
movl
movl
mov
mov
xor
add
imul
mov
mov
xor
lea
cmp
jae
mov
xor
add
mov
mov
add
mov
pushl
mov
mov
call
mov
movl
mov
xor
lea
add
push
call
mov
test
je
mov
xor
add
push
pushl
lea
push
call
mov
mov
mov
mov
sub
mov
mov
mov
mov
add
mov
cmp
jb
mov
mov
mov
add
mov
sub
jmp
push
pushl
lea
push
call
mov
mov
movl
movl
movl
lea
mov
lea
mov
lea
mov
lea
mov
mov
xor
add
mov
jmp
cmp
je
mov
xor
mov
add
mov
mov
xor
lea
mov
mov
mov
xor
add
cmp
jne
mov
xor
add
push
push
lea
push
call
mov
mov
xor
mov
mov
xor
movzbl
add
cmp
je
mov
mov
xor
mov
mov
xor
movzbl
add
cmp
je
mov
mov
xor
mov
mov
xor
movzbl
add
cmp
je
mov
mov
xor
mov
mov
xor
movzbl
add
cmp
je
mov
mov
xor
mov
mov
mov
xor
mov
xor
mov
mov
xor
mov
or
mov
mov
xor
mov
cmp
jne
mov
mov
xor
mov
mov
mov
xor
mov
xor
mov
mov
xor
mov
or
mov
mov
xor
mov
cmp
jne
mov
mov
xor
mov
mov
mov
xor
mov
xor
mov
mov
xor
mov
or
mov
mov
xor
mov
cmp
jne
mov
mov
xor
mov
mov
mov
xor
mov
xor
mov
mov
xor
mov
or
mov
mov
xor
mov
cmp
jne
lea
push
call
mov
cmp
je
mov
xor
add
mov
mov
xor
lea
xor
mov
mov
xor
add
cmp
je
mov
mov
xor
add
cmp
jne
mov
mov
xor
lea
jmp
push
pushl
lea
push
call
mov
mov
xor
add
cmp
je
mov
xor
add
push
push
lea
push
call
mov
add
mov
pushl
pushl
mov
add
push
call
mov
mov
xor
add
cmp
je
push
pushl
mov
add
push
call
mov
mov
add
mov
add
mov
mov
mov
xor
add
imul
mov
mov
xor
lea
cmp
jb
mov
mov
mov
jmp
mov
mov
xor
xor
add
add
cmp
jne
mov
imul
mov
jmp
mov
xor
add
cmp
je
subl
jmp
andl
pop
pop
pop
leave
ret
push
mov
and
mov
sub
push
mov
push
push
cmp
jne
push
jmp
mov
cmp
jne
push
jmp
mov
cmp
jne
push
jmp
mov
cmp
jne
push
jmp
mov
mov
cmp
jne
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
mov
add
mov
mov
mov
mov
mov
mov
mov
add
mov
mov
mov
push
push
pushl
push
call
mov
mov
pushl
xor
add
mov
lea
push
push
pushl
pushl
pushl
call
mov
mov
xor
add
cmp
je
mov
mov
xor
add
imul
mov
jmp
mov
cmp
jne
push
jmp
mov
cmp
jne
push
jmp
mov
cmp
jne
push
pushl
pushl
push
pushl
pushl
pushl
call
mov
mov
pop
pop
pop
mov
pop
ret
push
mov
sub
mov
mov
movl
mov
xor
add
mov
mov
push
mov
pushl
lea
pushl
push
pushl
pushl
pushl
call
mov
mov
leave
ret
