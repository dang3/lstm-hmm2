push
mov
sub
mov
mov
and
mov
andl
mov
inc
mov
cmpl
jle
jmp
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
push
subl
push
mov
mov
sub
add
push
mov
xor
xor
mov
sbbl
add
andl
mov
mov
sbb
mov
mov
andl
jmp
xor
xor
inc
mov
cmpl
jae
cmpl
ja
jmp
pushl
push
push
pushl
call
cmpl
jne
xor
or
inc
mov
jmp
mov
mov
sbb
mov
mov
mov
sub
add
mov
movl
cmpl
je
cmpl
jle
jmp
pushl
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
orl
mov
movl
sbb
mov
and
xor
add
adcl
mov
mov
mov
mov
mov
and
mov
adcl
mov
and
mov
xor
push
neg
pop
sub
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
ja
jmp
push
call
jmp
add
andl
jmp
xor
xor
inc
mov
cmpl
jae
cmpl
jle
jmp
push
push
call
cmpl
jne
xor
xor
inc
mov
jmp
movl
movl
mov
and
movl
mov
xorl
mov
mov
orl
mov
and
mov
xor
movl
add
mov
adcl
lea
sbbl
mov
mov
or
mov
adcl
xor
add
mov
lea
andl
push
mov
movl
xor
add
andl
push
subl
mov
xorl
push
subl
pushl
xorl
call
andl
mov
inc
mov
cmpl
jb
jmp
push
pushl
pushl
call
cmpl
jb
mov
add
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
ja
jmp
pushl
call
cmpl
jne
mov
inc
mov
jmp
mov
add
movl
mov
incl
mov
lea
incl
mov
movzbl
or
movl
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jge
jmp
push
pushl
push
call
jmp
mov
sbb
xor
sub
mov
sub
mov
mov
movzwl
movl
mov
mov
cmp
movl
je
add
mov
mov
sbbl
xor
xor
lea
mov
orl
xor
div
mov
xor
mov
xor
orl
xor
orl
sub
cmp
jne
mov
mov
add
mov
mov
subl
xor
addl
xor
add
add
movl
mov
movl
cmp
movl
jae
and
lea
not
mov
mov
xor
xorl
add
lea
mov
mov
mov
cmp
jbe
addl
addl
movl
jmp
addl
addl
sub
mov
xorl
xor
decl
inc
sbbl
incl
addl
add
cmp
movl
jb
notl
mov
xor
mov
movl
xor
xorl
mov
sub
add
mov
adcl
xor
sub
andl
ror
movzwl
sbb
xor
mov
mov
mov
adc
mov
orl
jmp
pop
mov
pop
mov
add
int
addl
subl
and
cmp
sub
cmp
jae
jb
fcmovu
imul
jb
int3
bound
lea
xchg
xchg
inc
mov
sub
push
rol
repnz
sub
nop
ss
mov
aad
jb
adc
and
aaa
jo
lods
sub
mov
notb
test
pusha
push
and
cmpl
fwait
dec
or
jecxz
imul
xchg
ss
leave
int
outsb
cmc
pop
imul
or
mov
shll
imul
jno
add
push
pop
inc
sub
mov
inc
shl
test
out
push
mov
test
adc
pop
pop
jl
add
jns
mov
bound
les
scas
iret
cmc
or
test
test
mov
ja
add
sbb
or
pop
out
mov
dec
in
lcall
cmp
mov
outsb
mov
pop
pop
cmp
stos
mov
out
pop
mov
adc
mov
sub
cmc
add
xchg
cli
lret
xor
push
mov
cmpsb
arpl
cmp
int3
repnz
fstpl
ss
iret
adc
push
cld
pop
es
stc
scas
data16
sahf
mov
push
cld
out
cmp
mov
icebp
sti
in
sti
sarb
arpl
sub
mov
sbb
cmp
xchg
or
lds
mov
subb
sub
ret
pop
ds
cmp
and
mov
nop
js
mulb
mov
adc
negb
subb
add
rdtsc
push
sarl
ljmp
dec
nop
daa
sub
or
shlb
dec
sub
mov
jne
xor
or
xor
xchg
stos
imul
les
out
clc
notb
adc
pop
or
sti
movsb
sar
and
push
push
push
sbbw
push
mov
mov
cmp
mov
enter
xor
das
add
xchg
jns
cmp
cmp
xchg
js
or
or
dec
es
pop
sahf
fldl
cli
or
push
dec
pop
mov
es
mov
push
push
loop
in
pop
scas
icebp
loopne
cwtl
dec
inc
lret
enter
outsl
sbb
notb
outsb
mov
sarb
push
pusha
test
stos
rcl
call
imul
inc
cmpsb
pop
cmc
or
mov
leave
inc
and
xor
cmpb
outsl
push
call
pop
addl
lds
stc
adc
and
sub
pop
xchg
aam
pop
jnp
xor
or
cmp
mov
push
dec
out
loop
les
andb
pop
lock
jmp
push
in
and
pop
pop
add
loope
clc
and
rclb
xor
mulb
pop
arpl
ret
inc
add
mov
test
adc
loope
and
cld
popf
add
pusha
pop
dec
insb
stc
fistpl
sbb
outsb
stos
xlat
push
add
adc
add
into
lods
lds
push
cmp
and
add
clc
popa
rcll
cltd
mov
mov
test
sbb
sbb
addr16
inc
xchg
jp
loopne
mov
fwait
stos
push
xor
mov
daa
pop
xchg
shr
pop
fdivr
pushf
cmp
xchg
inc
mov
push
daa
pop
add
ds
in
add
out
or
adc
mov
dec
mov
sbb
and
call
push
shrl
faddl
fstl
inc
cmpsl
sub
sbb
adc
add
lods
sub
push
int3
lods
add
les
js
jb
mov
ret
cmp
popa
jg
cmp
nop
into
rcrl
sbb
sbb
out
pushf
gs
roll
scas
lds
and
adc
scas
insl
mov
addb
push
sarl
mov
aad
lods
inc
test
sbb
enter
jo
shr
dec
push
pop
fimull
in
imul
inc
mov
inc
cmp
push
sti
adc
sti
cwtl
cmp
cmpsl
aam
sub
add
aas
mov
jns
mov
push
fldl2e
xchg
xor
sub
rcr
ljmp
sbb
pop
jl
mov
mov
divl
in
dec
sub
lea
loopne
int
xor
mov
add
je
adc
inc
imul
insl
adc
cmp
icebp
add
popa
out
mov
jno
or
jbe
push
loop
adc
pop
xchg
xlat
mov
imul
mov
imulb
test
pop
push
gs
mov
pop
xor
jmp
ror
sub
lds
addr16
test
scas
into
and
fstpt
jg
stos
adc
vmovdqu
mov
ss
add
cmpsl
nop
call
xchg
es
xchg
cld
add
dec
adc
addr16
and
in
dec
jnp
cmp
dec
shrd
cmp
pop
add
pop
mov
into
push
sbb
iret
inc
dec
fwait
mov
gs
dec
jae
cmp
sub
sbb
jecxz
in
cmpl
mov
push
fwait
sbb
xor
mov
test
push
sub
clc
cmpsl
ljmp
shll
xchg
pushf
pop
sbb
arpl
and
andb
fwait
add
mov
test
cmp
push
mov
add
adc
jecxz
or
xchg
aas
ljmp
inc
dec
sub
mov
lea
sub
and
sbb
mov
add
shlb
mov
stos
pusha
xlat
int3
ret
rolb
cmc
xchg
sub
push
pop
shll
add
pop
mov
ja
adcl
xchg
dec
movsb
gs
jg
sub
js
leave
jmp
xchg
outsl
fistps
dec
scas
xor
cmp
rcrl
popf
shll
mov
out
xchg
push
inc
bound
out
mov
sub
stos
lods
sub
in
add
fwait
and
repnz
adc
lahf
cltd
shlb
push
mov
or
cmp
mov
adc
fs
jo
out
push
mov
outsl
adc
jl
sahf
inc
dec
dec
and
xor
xchg
xor
jp
sahf
jo
jnp
out
mov
notl
je
je
les
lods
lahf
sub
adc
andb
cmp
xlat
adcb
into
mov
out
push
inc
and
push
pop
test
fsts
inc
lods
mov
cwtl
sbb
aas
jbe
dec
popa
xlat
mov
push
sti
jmp
mov
sbb
cltd
enter
daa
into
add
movsl
fxch
cmpsl
inc
dec
mov
out
xchg
or
pop
and
in
scas
xchg
mov
negl
sub
idivl
in
cltd
sbb
lock
ror
jno
jge
loope
mov
jmp
or
pop
addr16
inc
and
or
inc
lret
stos
push
jns
aam
leave
cmpsb
fucomi
loopne
xor
fdivrs
cmpsb
clc
xchg
xchg
pop
lret
movsb
sahf
lods
imul
mov
push
std
push
cld
negl
pushf
push
cwtl
call
push
sub
rolb
mov
mov
mov
xchg
xchg
push
inc
cli
test
pop
add
push
clc
adc
push
xor
dec
sti
jmp
adc
sub
and
ss
daa
push
adc
test
sarb
sbb
xlat
inc
push
cmp
fnstsw
daa
jns
sti
stos
out
push
mov
jae
lea
pop
pop
mov
sub
pop
and
inc
imul
mov
and
sarb
cmc
dec
fs
mov
adc
add
mov
pop
add
mov
popa
mov
pop
cli
or
nop
mov
test
les
in
jb
dec
dec
arpl
std
adc
outsb
cmp
faddl
mov
dec
out
aas
movsl
sub
ftst
cmpsb
or
push
or
cmp
dec
jae
xor
pop
out
add
jp
or
mov
mov
push
fidivl
adc
test
mov
jnp
lret
test
cmc
lods
ror
inc
mov
push
insb
insl
lret
ror
je
mov
mov
jae
movsb
dec
adc
cmc
cmp
loop
xchg
icebp
movsl
jbe
mov
int3
es
sahf
shld
in
mov
fmull
xor
mov
cmp
mov
dec
push
daa
sbb
enter
stos
addr16
cs
push
fcomps
push
mov
add
mov
dec
fldt
or
aaa
push
data16
and
loope
hlt
loopne
bound
call
pop
or
jp
adc
push
cli
xlat
xor
insb
or
xchg
in
push
divb
sbb
fwait
jae
scas
lcall
lods
loop
leave
test
scas
lahf
outsb
test
xor
mov
xchg
add
inc
xchg
jmp
mov
movsl
cmp
push
stos
or
inc
dec
sbb
mov
pop
xchg
inc
inc
fsubp
jmp
cld
jno
test
push
test
pop
aad
dec
dec
call
mov
inc
bound
cmp
jp
mov
clc
pop
decl
ja
shll
pushf
or
mov
outsb
in
jg
mov
lahf
stos
movsl
xchg
lea
adc
add
mov
aaa
aam
stos
xor
push
and
push
cmp
es
xchg
pushf
rorb
xchg
cmpb
into
push
mov
sbb
xorl
popf
dec
inc
stos
lret
adc
loope
es
stos
xchg
in
mov
dec
inc
mov
sub
out
out
xchg
stos
cwtl
rolb
xchg
bound
gs
mov
stc
mov
dec
leave
mov
mov
pop
imul
aam
idivl
out
jmp
fidivrs
adc
pop
inc
mov
ljmp
int3
inc
mov
inc
bound
out
imul
leave
pushf
mov
test
sbb
in
xchg
inc
push
inc
cmp
mov
sbb
fdivl
cmp
xchg
inc
scas
adc
test
cltd
je
mov
loop
xchg
mov
stos
and
lock
and
mov
in
mov
push
cmp
dec
inc
sub
pop
daa
xchg
ret
mov
jno
jbe
jbe
mov
hlt
inc
adc
or
cmp
cmpsl
add
xor
xchg
out
adc
ljmp
sbb
pop
cld
or
jno
fwait
push
add
idivb
xor
xor
in
aam
push
sub
repnz
in
stos
push
fists
sarb
jns
arpl
xchg
out
rcr
jl
dec
cmc
jo
rcrl
outsb
pop
repnz
roll
lret
xchg
cmp
xor
mov
push
adc
repz
lret
cld
push
sbb
fists
nop
add
sub
pop
mov
or
call
gs
dec
imul
fdivs
mov
xchg
ret
push
adc
mov
sub
loopne
hlt
mov
fwait
clc
pop
jbe
mov
mov
lret
mov
mov
mov
movsl
xor
push
mov
cmovns
lea
scas
fbstp
dec
sub
jmp
out
mov
aad
sbb
insb
les
jmp
hlt
data16
popf
mov
nop
jne
cmp
jne
shrl
or
sbbl
xor
xchg
mov
loopne
and
fsubs
call
xchg
xor
pusha
iret
shr
ds
add
sub
mov
mul
mov
dec
push
arpl
pop
data16
mov
push
ret
in
cmpsl
out
test
scas
cmpsl
faddl
fcomip
movsb
lods
fmull
add
add
sub
cmp
xchg
jp
and
adc
add
aaa
xor
or
int3
and
and
stos
fidivl
pushf
ffreep
divb
pop
pop
sub
mov
jl
frstor
cld
fldt
ss
test
inc
mov
icebp
repnz
jb
mov
lock
adc
inc
cmc
sbb
push
shl
into
mov
mov
pop
lods
pop
push
adc
das
or
cmpsl
sub
mov
or
das
jb
push
inc
mov
push
sub
sbb
ljmp
sbb
aaa
xor
adc
dec
aaa
dec
dec
jge
int3
test
outsl
inc
xchg
je
mov
mov
pop
inc
sti
lods
mov
ret
dec
add
cmp
jg
aas
mov
shrl
jecxz
push
mov
imul
inc
das
insb
pop
sub
or
xor
ret
and
mov
scas
xor
js
inc
sarb
inc
or
out
push
iret
pop
mov
ret
pop
cli
imul
or
data16
dec
pop
lea
cmp
push
add
push
mov
push
adc
mov
inc
dec
xlat
xchg
into
pop
rorb
shll
pop
ss
dec
jp
int
jl
out
mov
lods
adc
sub
jnp
push
outsb
dec
sbb
push
jb
xchg
adc
mov
testl
test
add
sahf
in
mov
ja
enter
mov
ds
xchg
sub
xor
or
ret
rorl
sbb
cwtl
push
nop
bound
je
fstl
pop
fs
pop
aas
pop
pop
ljmp
ficomps
push
icebp
ficomps
push
repnz
pushf
sti
inc
xor
and
fstpl
je
arpl
ficoms
arpl
cli
adc
ja
enter
sub
aas
js
jno
pushf
inc
sbb
mov
gs
inc
add
push
push
xor
or
scas
lea
push
stc
xchg
dec
pop
jl
push
mov
push
outsl
sub
aaa
pushf
rolb
test
ljmp
icebp
sbbl
sub
dec
mov
or
or
pop
mov
sub
sahf
mov
pop
cmp
aam
sbb
sbb
pop
nop
xor
in
xor
xlat
sti
push
jbe
repz
pushf
inc
jns
arpl
dec
sub
jge
add
jp
ret
sub
mov
adc
adc
adc
jno
or
in
fsubl
sbb
inc
gs
cmp
mov
arpl
mov
xchg
xchg
call
adc
outsl
sub
pop
hlt
push
pop
movsb
xor
loop
hlt
push
cmc
xor
jns
std
aaa
add
sbb
imul
adc
lret
mov
loopne
add
and
mov
fwait
push
stos
pop
pop
push
cli
or
imul
fistpl
pop
mov
or
hlt
ret
sbb
andb
mov
mov
cmp
cmpsb
mov
fbld
arpl
xchg
sbbb
js
addr16
mov
cmp
gs
inc
cmpsb
cwtl
add
jnp
dec
frstor
fimuls
out
pop
aam
or
ret
ss
and
push
sbb
aas
sahf
movl
in
cld
xorl
test
cmpb
insb
cmpsl
cmpsl
add
sbb
jmp
mov
sbb
sbb
mov
js
or
arpl
fldcw
cwtl
or
cli
cmpsb
aas
add
ret
pop
mov
roll
test
pop
mov
jecxz
je
sub
cmpsb
cmpb
jecxz
mov
and
aam
cli
jge
xchg
push
ja
dec
adc
xor
stos
dec
cli
adc
push
pop
lret
pop
jne
iret
roll
loop
pop
lea
and
sbb
insl
dec
adc
sub
mov
ds
mov
xor
ja
fneni(8087
push
pop
insb
icebp
jl
pusha
xchg
add
xchg
jg
pop
popl
cmp
jl
jne
imul
fldt
cld
lret
minps
fst
xchg
adc
xchg
shlb
push
jne
subl
sahf
bound
mov
int
pop
cli
adc
aas
test
xor
sub
call
imul
imul
shrl
ret
sub
je
ds
pusha
jne
and
add
pop
sahf
aad
enter
cmpsl
fs
aad
test
jnp
inc
test
or
sub
je
int3
cltd
fs
push
stos
sahf
dec
xor
hlt
add
and
xchg
jg
dec
sub
and
inc
mov
aad
cli
loop
shrb
mov
mov
pop
mov
bound
push
mov
cmp
push
scas
lret
cltd
jle
and
in
jge
daa
arpl
iret
dec
dec
and
sti
sub
fildll
or
pop
jae
dec
fmull
xchg
lods
daa
loop
push
mov
or
cltd
lahf
xchg
jl
pushf
fildl
mov
and
jnp
push
enter
sti
std
xor
sbb
sub
pop
inc
mov
xor
lret
fistpl
and
dec
movntps
mov
jno
xchg
pop
dec
dec
cmp
shlb
push
jns
and
shlb
adc
ret
icebp
push
push
mov
push
pop
call
push
repnz
add
test
arpl
mov
pop
sbb
ljmp
add
aam
pop
cli
push
mov
jno
mov
fistl
fldt
and
xchg
in
cmp
push
into
cmpsl
and
sbb
push
push
mov
icebp
sbb
jne
push
sar
inc
dec
dec
adcl
cld
jno
adc
jb
pop
inc
pop
inc
pop
mov
xchg
mov
call
fs
mov
push
lret
xor
cli
push
or
cltd
cmp
push
dec
stc
sti
and
call
sahf
adc
xor
dec
add
repnz
push
loope
shr
ss
insb
arpl
mov
stos
arpl
insl
cs
into
jns
dec
pop
hlt
cmpsb
xchg
shrb
xlat
fcmovnu
mov
test
cmp
outsl
loop
stos
shlb
or
test
pop
push
cmp
repnz
popf
cmc
jbe
movsl
mov
xchg
sub
xchg
push
mov
cmp
sbb
inc
lea
popf
daa
pop
xor
out
or
enter
cmp
add
in
test
xor
push
popa
notl
jb
test
cmpsb
mov
inc
lahf
cmc
sub
movsb
nop
jns
sub
xchg
movsl
aas
dec
xchg
sub
inc
sbb
xor
ret
cltd
sbb
sbb
push
popl
sti
lcall
jl
sarb
add
mov
cs
push
insl
jae
mov
xor
loopne
dec
add
mov
xor
xchg
ja
insl
jno
cmp
sbb
scas
in
xchg
push
loope
and
out
and
imul
xchg
int3
int3
jmp
cmc
cmp
inc
daa
stc
jb
call
cmpsb
mov
and
cli
cmovle
mov
adc
jl
inc
es
imul
notl
insl
xchg
pop
sbb
inc
lea
sub
pop
movsl
and
rorb
mov
lcall
xlat
or
fmull
mov
fbstp
adc
push
and
in
fs
jnp
push
fisttps
push
mov
push
sub
mov
sub
mov
add
push
mov
es
push
mov
dec
out
mov
fcomp
test
das
jge
outsl
subb
shr
les
push
ljmp
movsb
dec
jbe
xchg
dec
jae
cmc
adc
clc
xchg
jecxz
shrl
add
mov
jo
cmpsl
sbb
jg
adc
xor
test
xor
mov
mov
sub
es
push
repnz
xlat
ret
push
imul
addr16
jl
pop
or
and
lcall
push
xor
add
push
cmpsb
xchg
push
xor
ljmp
jmp
xor
or
out
out
cmp
adc
push
or
popa
aam
das
clc
test
cmp
out
push
rorl
inc
dec
lret
lcall
addr16
andb
xchg
flds
mov
insl
cltd
and
push
lods
in
sar
cmpsb
xor
dec
inc
sub
xchg
adc
pop
ret
jo
xchg
adc
adc
loope
in
lea
mov
mov
cld
mov
sub
mov
mov
clc
rcrl
in
adc
shrb
sbb
in
push
or
mov
xor
movsl
jne
out
inc
jbe
lods
push
jecxz
and
imul
xchg
aas
adc
push
ficoms
stc
pop
movsl
pop
int3
in
push
test
mov
xorl
push
adcb
sub
and
push
mov
das
mov
clc
sub
cmp
addr16
push
push
xor
cs
adc
xor
mov
push
jnp
rorl
repz
inc
xchg
in
clc
scas
dec
ds
imul
adc
lret
and
arpl
sub
dec
orb
jno
jae
in
lock
and
inc
mov
pop
mov
sbb
push
cmp
or
xchg
inc
jo
fs
lods
sbb
xchg
push
lock
jmp
js
ret
jo
and
popf
inc
cltd
shlb
lods
aad
sub
cmpsb
push
jnp
jmp
enter
jbe
ret
sbb
stos
stos
and
rorb
xor
loope
add
push
aad
sbbl
mov
lcall
aas
jo
inc
dec
jb
int
les
xchg
pop
mov
hlt
adcb
repz
cmpsb
mov
jmp
imul
pop
adc
std
adc
push
insl
xorb
fistps
sbb
addr16
sbb
shr
movsb
pop
sub
and
fs
ss
and
and
ffreep
xchg
std
fs
daa
cmp
bound
mulb
ret
jmp
dec
aam
mov
inc
aas
dec
leave
mov
imull
lds
inc
mov
out
jge
sub
xor
xor
add
cs
pop
jecxz
jae
shl
mov
shrl
into
addr16
dec
mov
add
jmp
iret
je
push
jne
lret
lock
sub
dec
sbb
xor
jg
cmp
push
or
pop
mov
rcrl
mov
push
shl
jnp
xchg
mov
and
into
rcrb
ret
mov
mov
mov
imulb
push
enter
arpl
pop
or
rcll
or
cwtl
dec
jmp
es
pop
mov
out
ja
enter
test
dec
jno
add
xor
iret
cmc
add
fists
rorb
hlt
mov
or
sahf
mov
mov
pusha
mov
ret
mov
or
in
lcall
nop
rorb
pop
scas
dec
inc
iret
pop
or
fwait
push
dec
mov
into
repnz
sbb
mov
call
repnz
shl
jne
push
inc
imul
fwait
sbb
mov
dec
ljmp
sub
dec
jne
jmp
insb
push
mov
xchg
jmp
fyl2xp1
push
cld
icebp
in
out
movsl
xchg
or
push
adc
and
pop
shrb
dec
sbb
mov
loope
sub
cmc
pop
jg
js
addr16
into
or
or
in
das
data16
push
movsb
arpl
mov
icebp
adc
sbb
pop
sahf
adc
les
fidivrl
sub
mov
test
cmp
pop
leave
ret
jecxz
data16
mov
out
adc
push
lds
shlb
and
cmc
cld
and
imul
mov
in
xchg
popa
push
dec
gs
fs
je
adc
rorl
and
pop
in
jae
xor
dec
adc
das
xchg
jno
xor
xlat
shrl
xor
push
or
movsl
es
push
xor
in
enter
cmp
stc
loopne
mov
add
arpl
mov
in
push
in
mov
lds
dec
or
pop
in
mov
dec
fidivrs
sbb
xor
adc
js
into
add
xchg
mov
out
roll
inc
mov
and
in
int
jl
add
cmp
lret
into
pop
sub
push
mov
notb
pop
sub
pop
cld
mov
pop
pop
xor
outsl
mov
sub
mov
fldl
push
fildl
inc
pusha
sbb
add
movsl
dec
push
out
decl
lods
imul
fisubrs
xchg
inc
nop
cmc
pop
jmp
into
xchg
ffreep
inc
aas
ficoml
cmp
lcall
orb
aas
pushf
mov
arpl
cmp
dec
cwtl
jp
hlt
jno
or
inc
fdivs
mov
add
xchg
and
sbb
test
xchg
mov
cmp
xchg
push
sub
mov
dec
fsubl
inc
mov
mov
fisubrl
mov
mov
or
sbb
add
lahf
push
out
push
das
pop
stos
icebp
into
mov
mov
insb
inc
outsb
stos
fwait
mov
push
ja
in
xchg
mov
pop
daa
mov
stos
mov
push
xchg
cwtl
xchg
in
sarl
sub
jb
scas
ds
cld
xlat
cmpsl
cmp
and
jle
adc
jae
dec
imul
and
adc
sub
add
adc
or
sbb
mov
jo
jmp
pop
xchg
sbb
mov
xchg
lock
adc
in
inc
lods
inc
test
xchg
add
fldcw
pop
and
mov
xchg
mov
xor
dec
add
insb
lret
test
sub
out
pop
xor
sti
mov
add
daa
lock
int
fmuls
mov
or
mov
ret
adc
clc
xlat
leave
pop
or
sub
adc
shrd
pop
and
mov
push
xorl
push
cwtl
jns
sti
xor
pop
inc
cmp
jecxz
ja
sbb
int3
test
outsb
fsubrs
lret
xchg
data16
and
sub
xor
sub
inc
repnz
leave
outsb
mov
adc
lods
mov
cmp
ret
sbb
in
xor
loop
sbb
pop
xchg
call
pushf
pop
in
lods
fwait
mov
test
and
dec
mov
add
pop
ja
mov
mov
fcomp
jle
cs
xchg
cmp
and
movsb
add
inc
xchg
xchg
incb
mov
lods
insl
sub
push
cmc
pop
mov
xchg
adc
ds
fildll
fcoml
mov
mov
dec
out
sbb
insb
movsl
push
xor
sub
mov
push
int3
fidivs
popa
inc
imul
mov
jp
jno
cmpsl
inc
mov
jne
stc
inc
loope
jns
out
bound
daa
pusha
add
adc
in
pop
cmpsb
movsl
shll
das
inc
aad
mov
jl
xchg
addr16
insl
into
test
repnz
fwait
je
sub
pop
inc
je
lock
xchg
pop
insb
icebp
xor
imul
inc
mov
add
rclb
push
imul
jmp
sbb
in
xlat
mov
xchg
and
mov
aad
jge
inc
push
aaa
jae
lret
arpl
fcomps
jge
push
pushf
pop
out
fadds
rorb
iret
ds
pushf
fsubrs
call
push
fs
inc
sbb
cmp
mov
adc
fsubs
rolb
aad
into
add
int3
mov
or
push
das
add
hlt
pop
int3
push
scas
in
xchg
enter
in
jo
sub
xor
imul
pop
mov
push
push
sbbl
jns
add
pushl
stos
in
jbe
ret
mov
jbe
shrb
sub
dec
repnz
push
int
das
cmp
mov
aad
push
lods
rorl
jbe
arpl
pop
inc
std
mov
rclb
repnz
shrl
daa
shlb
daa
stc
cltd
jns
aas
dec
jp
cmpl
out
stos
pop
lret
gs
mov
or
mov
int
cmp
nop
xor
in
or
mov
aas
xchg
lahf
mov
adc
loopne
adc
aad
fsubl
and
mov
je
xor
das
jecxz
inc
jo
xchg
loope
xchg
add
call
je
mov
xchg
std
push
xchg
les
pop
adc
pop
push
dec
sbb
je
iret
jns
xlat
and
push
aam
push
jl
int
iret
jmp
jnp
mov
mov
call
jb
fwait
cli
call
ss
daa
jo
add
adc
shll
rol
call
inc
fisubrl
sbb
cld
push
xor
fadds
jno
cmp
lds
divb
mov
mov
ljmp
testl
xor
pop
fdivr
pop
bound
mov
addr16
mov
js
add
sub
rorb
inc
mov
sub
push
fmull
push
mov
mov
mov
adc
and
loope
add
mov
popf
out
mov
dec
mov
sub
push
and
or
xchg
mov
lahf
and
icebp
dec
mov
popa
icebp
sub
addr16
push
lret
add
dec
dec
loopne
and
pop
mov
imul
cwtl
out
pushl
fcoms
jbe
into
shlb
or
mov
xchg
sti
insl
cmpsl
hlt
push
in
pop
adc
call
mov
outsl
aaa
add
pop
pop
and
or
xorl
rol
sbb
mov
mov
out
sahf
out
es
lahf
cmp
sub
sub
mov
negb
inc
scas
lock
lds
in
cvtps2pi
add
pop
stc
mov
sbb
jmp
jmp
inc
push
sbb
icebp
add
inc
pop
out
dec
lods
hlt
cwtl
enter
mov
in
cmpl
xchg
xchg
jmp
push
mov
xor
shr
into
pusha
lds
mov
mov
out
lods
ds
jbe
push
pop
jae
jle
div
mov
les
dec
int
mov
popa
lret
sbb
ss
jp
and
sbb
adc
inc
in
gs
lock
pop
mov
ds
or
add
xchg
mov
imul
fisubs
repnz
scas
cltd
aam
inc
aaa
jns
test
add
mov
in
rclb
les
bound
push
mov
inc
aaa
aaa
fimuls
out
jo
fsubp
xor
std
adc
mov
jg
test
dec
test
inc
push
pop
and
or
cmpb
mov
pushf
loope
jns
sub
hlt
cld
mov
subb
stc
xlat
loop
and
ds
cmp
dec
cmp
rolb
add
jecxz
push
pop
repz
and
gs
xor
cmp
jne
or
mov
andl
mov
adcl
xor
xorl
xor
sub
sub
mov
mov
xor
xor
mov
mov
xor
mov
sub
jmp
mov
xor
mov
sub
add
mov
mov
cmp
jne
movl
mov
xor
add
jmp
lea
mov
mov
sub
mov
mov
mov
mov
movl
mov
movl
mov
xor
add
mov
mov
xor
add
mov
movl
movl
mov
mov
xor
add
cmp
je
mov
xor
mov
sub
add
mov
mov
xor
add
imul
cmp
ja
mov
mov
mov
sub
xor
xor
add
div
mov
mov
mov
xor
add
cmp
jbe
mov
xor
add
mov
mov
mov
xor
add
imul
mov
mov
mov
jmp
mov
and
out
mov
fnstsw
iret
push
or
pop
addl
cmp
out
xchg
push
movsb
jmp
dec
cmp
sub
pop
pop
mov
push
xor
pop
mov
in
fists
je
xchg
jb
cmp
test
out
sub
dec
push
mov
mov
rolb
scas
repz
xchg
fcmove
out
fwait
xor
jbe
test
scas
push
clc
rorb
mov
adc
push
lcall
je
push
mov
icebp
and
pop
and
xchg
ret
test
push
popa
outsl
mov
or
pop
fisubrl
cmc
jmp
loopne
add
cmpsl
pop
push
xor
cmp
sub
mov
xchg
insb
sarb
and
push
xor
ljmp
stc
enter
fsubrp
xorb
lods
jne
mov
mov
aas
pushf
fdivrs
lea
add
dec
pop
add
xchg
sarl
ds
mov
add
push
jg
sbb
jns
and
sbb
cmp
dec
outsl
enter
fucomip
mov
jp
sbbl
xchg
xor
les
cs
movntps
mov
fnstenv
arpl
pop
fsts
insb
aam
int3
js
pushf
mov
push
or
hlt
js
adcl
pop
jl
sub
fcoml
dec
cmpsb
jge
mov
sub
push
aaa
inc
das
add
push
sbb
lods
or
dec
add
sub
lret
rcrl
inc
repz
int3
aaa
pop
fisttps
dec
pop
arpl
lds
or
inc
xchg
xchg
cmpxchg
loopne
sub
jl
lock
test
mov
xlat
shlb
int
push
xchg
lods
lock
jno
push
dec
push
fcmovnb
lock
fs
jnp
mov
outsb
cwtl
aad
fisubl
sbb
or
xor
neg
lea
cmpsb
loopne
int
mov
out
and
in
jae
push
dec
jo
and
mov
aam
call
inc
push
or
ret
or
leave
push
pop
mov
jecxz
stc
sarb
daa
mov
xchg
push
cmp
sbb
cmc
and
or
mov
scas
call
mov
jl
push
mov
out
sub
call
inc
xchg
jae
mov
adc
lock
mov
inc
mov
sbb
frstor
shl
aaa
and
sub
add
pop
fucomi
pop
xor
sub
jle
lahf
jl
hlt
and
jecxz
push
hlt
sbb
mov
dec
rol
hlt
loopne
sbb
sbb
and
xchg
pusha
inc
xchg
outsb
ficomps
sub
aam
flds
hlt
fistps
cwtl
push
xor
roll
into
fnstcw
pop
in
dec
outsb
jge
fdivr
jg
jge
jge
add
insb
sbb
mov
xchg
inc
cmpsb
test
jo
mov
aad
addr16
cwtl
mov
mov
jno
cmp
popf
xchg
roll
dec
fistl
popf
outsb
sbb
loop
dec
or
cwtl
sub
xlat
xor
push
push
xchg
fsubl
sbb
std
imul
jle
cmp
jne
pop
in
and
lds
pop
popf
pusha
shlb
shlb
pop
stc
jnp
iret
mov
dec
pop
sub
push
popf
jmp
mov
inc
arpl
ljmp
lea
push
cli
sub
push
jae
and
ljmp
scas
nop
stos
dec
popf
jg
add
mov
addb
pop
repnz
mov
ficoms
incl
or
cmp
jbe
ljmp
rcrl
lret
int
pop
adc
in
cmp
dec
and
push
jns
push
and
dec
scas
cmp
je
cmpsb
or
loopne
cmc
lods
sbb
out
adc
pusha
fisubrl
andl
xchg
inc
mov
and
fstpt
mov
mov
jno
clc
cmpsb
push
adc
sub
mov
mov
sbb
das
add
fimuls
enter
mov
fcoms
push
fsubrs
lods
jno
jo
sbb
rclb
lahf
xchg
mov
pop
mov
gs
mov
lods
movsb
adc
xor
cmp
sbb
in
xchg
aas
pop
mov
push
mov
mov
mov
xchg
adc
popf
xor
call
mov
cwtl
pusha
icebp
in
or
cmovae
fiaddl
cmc
je
inc
jae
add
cwtl
fists
sub
mov
ds
rcrb
rorb
jmp
mov
xchg
mov
outsl
xchg
out
nop
dec
sub
inc
pop
imul
arpl
mov
in
sbb
outsb
jb
push
mov
add
push
xor
sub
fs
or
push
cmpsl
push
std
test
adc
aam
test
pop
jp
in
xor
fwait
mov
dec
mov
sub
sbb
int
sub
in
dec
sbb
addr16
pushf
lahf
iret
testl
lea
test
jns
cmp
movsl
je
or
mov
xor
ja
cmp
or
insl
add
ret
in
mov
repnz
mov
stc
pop
inc
and
and
push
std
aad
push
push
cmpsb
jg,pn
nop
cmpsl
jns
dec
inc
mov
xchg
xlat
mov
mov
test
jne
insl
das
and
pop
mov
sub
adc
cli
div
adc
push
cmpb
fisubrs
addb
mov
repnz
test
push
movsb
pop
ljmp
int
lock
lcall
xchg
mov
inc
inc
stos
ds
ret
hlt
xchg
mov
out
loop
jb
repnz
testb
loop
sbb
adc
fmull
call
adc
mov
cmp
xchg
sarl
movsl
jg
shr
xorl
test
ss
add
dec
inc
test
sbb
adc
ja
in
std
les
repnz
add
cmp
jnp
insl
pop
push
movsb
xor
push
imul
sub
shlb
rolb
mov
mov
ds
xchg
dec
aad
jb
or
cli
insl
jg
xor
xchg
popf
fstl
ds
shlb
lret
fldt
mov
or
xor
enter
cltd
aam
dec
cwtl
leave
pop
fiaddl
jnp
in
add
push
push
sub
sbb
inc
xchg
dec
jb
sub
loopne
ret
ret
xor
jo
out
in
xchg
pop
inc
inc
data16
cmp
bswap
mov
cmpxchg
dec
jo
xchg
movsl
pop
ret
push
add
adc
xchg
sbb
add
fldenv
dec
aam
or
pop
sub
cmp
shr
dec
scas
inc
push
push
mov
popa
inc
add
outsl
sbb
out
sbbb
and
pop
divl
cmp
xor
out
mov
repnz
stc
imul
sbb
xor
sub
push
insl
in
shl
push
movsb
ja
mov
cmp
mov
shlb
adc
xchg
and
jae
and
pop
sbb
pop
cmp
mov
add
jno
mov
pop
xor
add
aad
sbb
jl
icebp
sub
xor
gs
loope
xlat
push
mov
lret
push
ljmp
daa
inc
jg
incb
jne
sbb
nop
xor
push
add
mov
lock
add
mov
scas
jns
and
or
inc
popa
stc
testb
xchg
jmp
mov
fmuls
idivb
aad
mov
jae
movsl
idivb
add
push
xlat
add
cmpsl
rcll
sbb
lods
daa
movsl
dec
xor
adc
pop
dec
jecxz
btr
xchg
pop
shlb
jae
sarl
dec
test
fwait
andb
rol
jle
mov
push
jecxz
lret
push
jg
xor
mov
mull
loop
inc
cmp
cmpsl
pop
inc
out
pop
lahf
dec
or
cld
and
jge
in
jecxz
jg
or
scas
jmp
bound
jnp
stos
fwait
jmp
outsb
or
dec
add
sub
out
push
pop
jno
cli
sahf
test
je
cmpsb
mov
iret
scas
mov
cwtl
dec
push
adc
imul
xlat
mov
outsb
mov
push
add
test
jge
aaa
add
xchg
adc
adc
ret
push
sbb
inc
sub
cli
mov
popa
jmp
stos
jmp
clc
mov
push
jg
sbb
popa
cmp
inc
mov
shrb
js
push
pop
cmc
hlt
in
and
sbb
fstl
push
stos
mov
out
xor
and
jl
mov
in
stos
pop
sahf
push
ljmp
js
stos
loope
cltd
scas
je
mov
mov
dec
cmp
lret
stos
int
clc
stos
into
adc
insl
cmp
add
aas
frstor
notl
rcrb
out
sub
cs
and
fnsave
scas
lret
xor
aad
cmpsl
shrb
scas
shl
outsl
mov
mov
mov
in
dec
adc
repz
pop
aad
lods
adc
cmp
aad
mov
or
xchg
and
shlb
sbb
jno
mov
pop
jecxz
mov
sahf
dec
adc
neg
arpl
lahf
test
jbe
dec
lret
imul
pop
sbb
pop
and
fs
aad
xor
xor
arpl
push
icebp
xchg
and
cmpsb
push
js
call
dec
pop
push
xchg
lcall
popf
inc
dec
stos
stos
movsb
mov
mov
adc
je
int3
adc
sub
mov
xor
lock
test
jp
and
fmuls
cmpsb
insb
jnp
mov
lds
pusha
lret
mov
jge
push
arpl
les
insb
lret
or
push
push
aas
jo
andb
jle
imulb
mov
adc
push
jno
stc
scas
lcall
mov
sbb
and
add
inc
sbb
xor
arpl
sbb
cmp
lahf
lahf
add
test
rclb
adc
lahf
inc
movsl
or
add
je
mov
or
jo
adc
mov
xor
inc
pop
inc
xor
nop
imul
pop
adc
mov
ljmp
imul
add
outsl
xlat
dec
pop
aas
dec
imull
cmpsl
inc
call
cmp
push
and
cmp
push
iret
outsb
pop
xor
andl
mov
test
push
sub
push
dec
mov
cmp
mov
add
fsubr
xchg
pop
fists
mov
lahf
fisttpl
xchg
xchg
mov
dec
xchg
int
mov
add
stos
push
dec
cmpsl
movsb
out
jne
std
xchg
mov
fmuls
mov
sbb
jno
xchg
xchg
mov
lret
add
repz
in
std
je
call
or
scas
ret
das
cwtl
cmp
mov
sbb
pusha
cmpsb
stos
scas
fiaddl
or
jbe
les
shlb
dec
lods
push
add
sub
cmp
dec
out
lods
out
dec
cli
jnp
out
pop
push
fcoml
mov
dec
or
sbb
dec
push
sub
repz
shlb
inc
dec
add
fwait
sub
rolb
inc
xchg
dec
test
mov
ljmp
in
pusha
lods
push
add
pop
in
sub
fsubp
adc
roll
mov
mov
jecxz
int3
inc
cwtl
out
and
dec
pop
inc
mov
enter
ds
clc
add
pop
fbstp
mov
fists
shlb
test
cld
or
lods
imul
jmp
adc
mov
mov
test
cmc
bound
test
or
and
or
jo
inc
loop
int3
pushf
xor
sahf
add
mov
mov
push
fdivs
inc
cmp
jge
xor
mov
bound
leave
sub
dec
sbbb
dec
mov
mov
rcl
sbb
lock
pusha
movsb
repz
adc
sbb
or
mov
dec
lods
rolb
or
push
mov
sub
fldcw
jmp
sti
sub
jnp
movsb
pop
pop
popf
stos
ds
jl
xchg
xor
mov
pop
sub
sub
cmp
cmp
or
hlt
cmp
sbb
hlt
fldl
sbb
adc
push
daa
fstpl
mov
outsb
jne
xchg
lret
xor
lods
inc
movb
pop
lods
mov
in
lea
add
in
fst
stos
leave
aad
and
adc
cmpl
xor
movsb
push
inc
xchg
sbb
adc
pop
xchg
pop
and
push
ljmp
jnp
dec
cmp
stc
out
out
mov
aam
jmp
push
pop
imul
xchg
mov
inc
sbb
and
aaa
fdiv
imul
push
in
jp
adc
lods
out
cli
movsl
adc
push
xor
shrb
clc
out
or
push
and
xor
xchg
movsl
inc
cmpsl
or
movsb
sub
jge
movsb
loop
stos
shrb
leave
sub
dec
jnp
imul
cmp
inc
push
xor
aas
sub
scas
pushf
and
les
mov
cmpsl
aad
faddl
lret
nop
addl
fldl
stc
or
mov
lods
jecxz
test
lret
das
test
sti
jmp
aam
sbb
ss
mov
sub
and
fimull
insb
jmp
mov
ret
lret
outsb
test
mov
cmp
xchg
icebp
xor
cld
pop
popa
lret
jp
or
lods
dec
fisubs
movsl
adc
pop
mov
pop
out
jno
paddusb
add
mov
mov
aas
jnp
movsb
in
adc
adc
dec
jno
jmp
adc
scas
xchg
popa
ja
loop
push
bound
lcall
pop
into
fistpl
pop
pop
or
shlb
push
sbb
imul
push
les
mov
add
std
push
es
pop
cmp
dec
fwait
adc
sbb
lret
je
adc
add
arpl
inc
mov
inc
leave
lods
dec
mov
mov
or
sbb
and
sbb
sbb
movsl
lret
out
adc
adc
ja
jae
test
bound
pop
sahf
rcrl
and
push
loop
sub
push
insl
dec
cwtl
sub
ret
sahf
jmp
lcall
jbe
inc
test
jb
jo
pushf
shr
lret
pop
dec
sbb
adc
fisttpll
pop
push
sub
pop
sbb
enter
xchg
arpl
lods
fstl
lret
popf
jle
insb
dec
shrb
pop
popa
cmp
jno
lcall
dec
dec
pop
push
xor
and
push
stos
xchg
push
lods
int3
cmp
stos
rcrb
enter
jbe
xchg
mov
out
in
out
inc
push
ss
or
sbb
mov
mov
lds
in
data16
and
add
xchg
sti
jnp,pt
les
js
mov
xchg
pop
xlat
sahf
outsb
addr16
jbe
mov
inc
mov
mov
inc
ljmp
inc
roll
or
popa
xor
jnp
aam
mov
std
push
fnstsw
sub
xor
cmc
dec
adc
lock
pop
add
pop
js
adc
mov
daa
lods
sbb
add
inc
ljmp
inc
arpl
aaa
pop
dec
pop
rolb
out
iret
jle
movsb
out
aaa
lods
jbe
pop
mov
jno
push
insb
jmp
add
jmp
in
sbbb
mov
out
xchg
cwtl
or
std
test
push
sti
push
xchg
out
mov
pop
cwtl
xchg
cmp
or
jae
je
push
jp
aad
scas
bound
iret
shll
lret
std
fmul
adc
cmp
add
sbb
push
js
xchg
ficomps
or
add
push
push
in
nop
adc
jp
jecxz
out
insb
imul
sarl
lahf
stos
in
cmp
sahf
push
cmp
std
mov
add
movsb
clc
std
add
dec
mov
mov
fists
xchg
addr16
xchg
bnd
pop
xchg
xchg
daa
mov
int3
xchg
pushf
mov
mov
outsl
pop
into
cmp
cmc
lds
add
sbb
xchg
mulb
pop
mov
clc
mov
ja
orl
adc
add
scas
es
jp
jne
pop
mov
mov
sbb
push
lcall
xchg
xchg
sub
xchg
mov
add
insb
xor
les
je
xchg
adc
ljmp
or
sub
mov
add
js
inc
push
xorl
rcrb
sahf
pop
or
lods
and
out
xorl
lret
out
daa
cli
mov
push
fs
adc
cmp
cwtl
add
inc
add
xor
and
mov
dec
jle
repz
pop
cmpsb
push
js
jmp
rolb
adc
outsb
pop
cmp
jne
cmp
popa
xchg
sbb
test
scas
and
xor
mov
fisubl
movsl
cld
je
inc
lahf
dec
hlt
inc
bound
out
rorl
pop
mov
dec
mov
divl
inc
inc
xor
std
cmp
jmp
shl
jle
xchg
loop
adc
inc
cmp
popa
dec
mov
pop
push
cmp
fstpt
test
out
dec
fidivl
cmc
xor
negb
dec
push
imul
dec
nop
outsb
bound
and
inc
add
jecxz
xor
pushf
daa
dec
add
int
cmp
dec
push
pop
push
addr16
iret
lahf
mov
xor
lcall
fdiv
andb
xchg
mov
xchg
jno
inc
sub
das
arpl
push
imul
mov
fsubs
dec
addb
ss
ja
pop
dec
and
jg
sbb
jg
je
jp
jb
andb
popf
nop
insl
add
fbld
add
lret
xor
and
or
push
pop
push
mov
test
cs
push
sbb
negb
mov
or
andl
popf
inc
sbb
aam
ficoml
xchg
xchg
sub
and
out
push
inc
mov
or
in
je
xchg
push
inc
push
shrl
or
nop
and
dec
pop
in
pop
sub
dec
fmull
fs
dec
outsl
mov
and
or
sbb
stc
sti
pop
pushf
mov
mov
lds
push
loop
fs
bound
test
and
push
sbb
pop
mov
aad
xor
and
adc
push
data16
push
rcl
aaa
cmpsb
mov
popa
test
add
cltd
into
push
push
pavgb
jno
imulb
pop
mov
and
sub
inc
inc
dec
sub
inc
rol
jae
pop
call
xor
adc
xor
int
out
sbb
jecxz
test
xchg
inc
jnp
andb
mov
push
dec
xor
and
clc
pop
mov
fcompl
mov
fwait
ss
add
and
jmp
inc
fidivs
mov
ss
lret
jo
cmp
inc
push
rcrl
mov
or
mov
add
jmp
cmp
fcoms
cltd
xchg
mov
pop
and
inc
aad
ficoms
hlt
lcall
mov
popa
sbb
pop
mov
mov
out
cld
je
mov
xchg
jns
out
dec
test
push
pusha
and
dec
mull
call
inc
jns
les
cmc
xchg
adc
pop
mov
push
pop
push
jp
out
jns
rcl
jge
ljmp
xchg
rcl
pop
inc
xchg
mov
insb
aad
inc
mov
push
out
lea
lret
test
stos
xor
hlt
arpl
roll
push
jge
add
lods
mov
mov
mov
pop
ljmp
pop
std
outsb
xchg
movsb
sti
cmp
pop
gs
shl
repz
fsubr
jo
jno
aas
xor
idivb
mov
int3
sbb
in
pop
cmp
inc
dec
mov
mov
lea
and
out
push
pmulhw
push
dec
out
faddl
adc
jo
xchg
daa
bound
cmp
imul
and
movsb
stos
mov
mov
je
das
pop
repnz
pop
push
inc
ret
fidivl
jmp
pushf
mov
push
fnsave
out
lret
cmp
rcr
cmpsb
inc
xlat
mov
dec
dec
out
inc
fs
xor
xchg
xorb
jg
sub
out
andl
push
or
in
push
inc
in
outsb
movsl
insl
rcrb
push
orl
jo
jae
cmp
lods
std
inc
idivb
divl
clc
jg
push
test
adc
fiaddl
gs
sbb
rcll
jg
mov
adc
bound
ret
xchg
xlat
insl
nop
pop
pop
or
shrb
call
lds
call
repz
loopne
inc
cltd
decl
bound
clc
fwait
push
cmp
lock
outsl
sub
xchg
leave
ljmp
xchg
pushf
lds
inc
hlt
mov
dec
mov
sti
mov
adc
jge
jne
sbb
cltd
jno
imulb
loope
mov
das
stos
adc
inc
or
cli
dec
arpl
xchg
mov
push
clc
xchg
inc
clc
or
pop
inc
xchg
test
imul
adc
lods
or
pop
repnz
dec
and
mov
xchg
sarl
ss
sahf
add
xor
testl
repz
mov
nop
cltd
or
jb
dec
xchg
sbb
mov
fisubrs
test
push
in
lock
xchg
fs
repz
cmpsl
mov
ficompl
repz
xchg
inc
pop
fists
movl
dec
mov
or
push
cld
jo
insl
in
lock
in
adc
cmp
lea
jle
enter
jge
mov
sub
callw
pop
inc
pop
dec
mov
lcall
and
outsl
mov
popa
jb
cld
movsl
inc
xor
scas
aad
or
stos
mov
sbb
xchg
lahf
sub
xchg
jbe
lds
repz
cmpsb
and
rcrl
adc
pop
jmp
movsb
or
outsl
adc
test
sbb
sub
popf
pop
inc
add
stc
jno
pop
insb
stos
push
insb
fadds
mov
sub
push
movsb
clc
nop
adcb
jp
lods
push
add
xchg
or
dec
pop
mov
je
fmul
or
popf
bound
adc
lcall
ffree
fnsave
jge
aaa
lahf
pop
sub
add
or
pop
jo
test
into
sti
arpl
aad
cmp
xlat
jbe
popa
ljmp
clc
repz
inc
ret
inc
sbb
mov
frstor
push
mov
jno
xchg
pop
pop
out
repz
pop
sub
outsl
mov
sbb
dec
push
xchg
mov
adc
push
mov
mov
subb
add
cmp
ljmp
inc
test
and
mov
mov
lock
data16
cmp
fimuls
cmp
and
xorb
mov
stc
iret
bound
xchg
out
dec
repz
not
int3
push
js
lret
cmp
dec
sub
jecxz
dec
xor
jge
push
inc
data16
ficoms
or
cmp
dec
gs
push
push
or
push
ret
sahf
imul
xchg
iret
frstor
mov
test
jbe
aam
sub
and
insl
cwtl
mov
mul
jp
cli
xchg
jmp
out
fidivrl
nop
icebp
inc
aaa
imul
push
hlt
gs
scas
push
ja
call
addb
repnz
js
jle
int
dec
xchg
loop
mov
jp
adc
mov
test
and
ja
das
hlt
pop
enter
mov
leave
lret
adc
cmp
inc
movl
pusha
cs
add
jecxz
ficomps
fnstcw
xchg
shlb
adc
lret
sub
mov
sub
xor
or
lret
or
jnp
push
fbstp
sbb
jle
adc
cmp
dec
iret
and
loop
cmp
jecxz
dec
dec
dec
dec
pop
sbb
cltd
cmc
notl
fistpll
inc
adc
jmp
mov
imul
mov
shrl
xor
call
int
mov
mov
cwtl
aad
adc
and
fstps
testl
shr
mov
bound
cwtl
pop
pop
jns,pt
inc
xor
mov
sbb
test
int3
adc
in
ret
cmp
adc
testl
xor
add
rcrb
mov
adc
popf
sub
pusha
test
dec
fs
lds
cmc
outsb
jp
ret
jo
add
es
jge
lret
xor
dec
mov
fldcw
jb
int
jno
repnz
test
mov
push
popa
add
cmp
fisttpll
divb
cltd
mov
pop
dec
dec
sbb
inc
shufps
adc
pop
inc
out
das
mov
cmp
int3
mov
inc
dec
cmp
pop
int3
sub
adc
push
pop
pop
sub
sahf
pop
or
push
dec
mov
add
dec
jecxz
mov
nop
fsubp
mov
call
lock
insb
xlat
push
clc
ljmp
sub
fistps
test
sahf
adc
cmp
mov
lret
and
mov
sbb
scas
cwtl
push
push
inc
mov
sub
jmp
mov
xor
pop
dec
and
xor
lahf
cmc
fwait
ret
xchg
fimull
lahf
daa
mov
in
push
push
push
sarb
push
sbb
pushf
dec
adc
aaa
loop
nop
and
cmp
mov
stos
movaps
loope
dec
add
loopne
daa
inc
xchg
dec
repz
addr16
cmp
testb
inc
aam
push
pushf
mov
pop
and
adc
gs
sub
mov
iret
lret
pop
andl
mov
sbb
cmp
sbb
test
into
add
in
repz
popa
arpl
pop
out
out
add
jo
sbb
dec
les
pop
pop
push
sub
gs
fs
repnz
test
xor
xchg
dec
jo
mov
cli
jle
fildl
cmp
out
sbb
leave
imull
out
fwait
ret
push
aam
mov
mov
aad
insb
push
fcompl
movl
push
scas
stos
rolb
cld
pop
mov
dec
push
or
jmp
cs
cltd
mov
inc
add
mov
imul
das
sbbl
mov
cmp
add
ss
inc
cltd
and
mov
cmpsb
jle
stc
xchg
pop
cmc
scas
cli
push
mov
inc
out
lods
or
push
jmp
push
sub
adc
jg
in
or
test
shlb
mov
lods
xchg
mov
jbe
xchg
in
adc
aad
repz
push
and
insl
mov
mov
inc
in
xchg
fimull
push
test
mov
mov
cmp
push
aad
jb
popf
jns
mov
xchg
rclb
mov
xchg
push
hlt
rclb
pop
popf
xor
sbb
shll
fimull
xor
inc
mov
pop
fcmove
dec
lahf
dec
jmp
sub
sub
pop
xchg
leave
movsb
in
out
dec
cli
add
cmp
jb
popa
sbb
leave
ss
fwait
pushf
jbe
add
outsl
bound
xlat
or
jb
sbb
je
cmpsl
shrb
movsb
das
shll
sub
mov
dec
add
pop
or
dec
push
sub
xor
mov
jns
in
lret
pop
lods
stos
rcrl
sbb
xchg
es
dec
enter
cmpsb
jp
jge
out
xor
sub
cmp
sub
outsb
mov
xor
adc
inc
cwtl
rolb
sub
lcall
mov
cmpsb
mov
sub
aam
lds
or
xor
ljmp
into
inc
inc
push
mov
scas
fdivl
fwait
or
rcr
lods
dec
dec
inc
repz
imulb
inc
mov
clc
and
popa
pop
or
out
push
push
test
add
in
adc
mov
and
cmpsl
dec
pushf
lea
out
dec
mov
fmull
addb
mov
and
cld
cli
int3
stos
ja
inc
shlb
mov
ss
daa
xchg
bound
dec
sub
test
inc
mov
in
mov
push
insl
jl
sbb
push
nop
mov
test
jmp
ret
sub
call
cld
sub
das
and
mov
shl
out
mov
add
xor
lds
loope
popf
out
cmpsl
pop
mov
lock
je
aad
cmp
lret
mov
jmp
pop
sbb
cmp
not
mov
mov
mov
mov
sahf
divb
sbb
push
sub
jae
push
adc
add
xchg
sbb
adc
push
fdivrl
adc
inc
outsl
and
add
addl
push
test
mov
jmp
aaa
pop
push
pushl
mov
mov
xchg
or
icebp
fsts
out
in
cmp
cmp
cmp
sbb
lods
mov
push
jg
sbb
sbb
test
int3
pop
fsubs
sub
lret
ror
mov
decl
cmp
xor
xchg
sahf
rolb
movsl
je
cmp
inc
stos
inc
hlt
test
das
popf
repz
add
shll
pop
xacquire
inc
sarb
pop
jne
js
cs
loopew
inc
leave
lcall
push
pop
aam
loopne
lds
insb
pushl
int3
insl
iret
ja
or
mov
sub
mov
sbb
out
xchg
mov
int
scas
mov
cmp
fstl
push
out
pop
inc
fcompl
xchg
imul
lret
adc
js
outsb
daa
sub
insb
cmc
dec
stos
lret
mov
inc
xchg
idivb
sbb
xlat
pop
jl
into
imul
inc
sahf
push
inc
xchg
xor
mov
stc
in
mov
dec
adc
push
sub
sbb
push
test
push
lods
mov
mov
xchg
loopne
aad
cmp
xchg
movsb
mov
fists
data16
insl
xchg
test
das
sbb
ret
jge
xor
add
cmp
je
mov
mov
mov
add
movl
mov
mov
mov
movl
movl
mov
mov
xor
add
jmp
movl
movl
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
jmp
movsl
mov
sbb
scas
mov
nop
push
inc
jo
pop
cmp
orl
sbb
out
mov
leave
hlt
push
lock
pop
pop
fstl
xor
xor
lds
sub
jno
fwait
cmpl
ds
mov
frstor
in
pop
dec
dec
fldt
push
inc
subb
and
mov
xlat
movsl
loopne
inc
and
jne
repz
push
mov
mov
dec
into
push
in
loopne
rorb
loop
xor
push
ffree
push
mov
add
and
cmpsb
mov
lods
mov
jb
bound
adc
xchg
jecxz
mov
sbb
adcl
add
or
jo
clc
jno
or
cmp
or
lcall
inc
mov
loope
mov
xor
ss
jle
push
jnp
aam
cld
jg
notl
jmp
mov
push
nop
icebp
mov
arpl
sbb
mov
cmp
loopne
push
jge
popf
sub
mov
jne
xlat
xchg
jns
call
lahf
jecxz
xor
jns
mov
repz
xchg
inc
dec
jns
xchg
les
xorb
and
dec
das
xor
fnstcw
cli
and
mov
shrl
test
mov
out
aam
mov
sbb
xor
shll
xchg
shl
dec
and
jl
cli
or
dec
movsb
pop
adc
pop
and
fidivl
insl
add
add
adc
lea
pop
and
insl
int
in
jb
mov
xor
lcall
enter
inc
mov
mov
cli
dec
ret
xor
mov
jmp
sub
hlt
mov
xchg
sub
test
lret
dec
jmp
or
sbb
fnsetpm(287
push
xchg
scas
loopne
mov
ror
xor
xor
js
fimuls
jp
movsb
adc
daa
xor
loop
inc
mov
jmp
and
aas
xor
pop
pop
gs
test
aaa
jne
ret
repz
lea
mov
jb
push
inc
sub
shlb
ds
mov
add
adc
jno
cwtl
mov
xlat
cmp
jae
mov
jnp
ret
jno
leave
pop
popa
and
call
stos
mov
xor
repnz
stos
mov
jg
je
or
sub
int3
cmp
fisubrl
sbb
pcmpgtw
adc
push
push
xchg
push
bound
and
push
sahf
ret
test
sbb
inc
aam
add
or
mov
movsb
inc
lock
jg
mov
inc
push
ret
jo
int3
cmpsb
add
leave
andl
pop
daa
cmp
add
hlt
addr16
and
mov
jns
adc
cmc
add
fstl
lea
pop
inc
dec
mov
sbb
push
push
popf
dec
sbb
test
pushf
push
pop
mov
enter
das
shrb
push
lea
and
es
call
and
jmp
sbb
push
pop
stos
test
sub
inc
shll
mov
mov
inc
jecxz
and
out
sahf
mov
sub
test
dec
sti
test
stos
cmpsb
pop
mov
fistl
cli
fisubrs
std
push
pushf
mov
or
push
jg
push
loope
xchg
sub
dec
dec
popa
scas
push
xchg
sahf
fdivrl
repz
inc
out
pop
in
xor
mov
mov
mov
push
sarb
lds
mov
adc
cmp
ds
insl
jg
aaa
dec
popl
dec
inc
scas
sub
push
mov
loope
xchg
ret
and
inc
ss
pusha
pop
mov
int3
movsb
jno
jmp
inc
mov
fistps
shrb
cmpsl
cmovs
out
and
imul
ret
push
sti
mov
das
inc
jne
cmp
aas
data16
les
insb
cmp
mov
inc
idiv
lret
rcrb
shll
or
arpl
mov
rol
jg
xor
and
aaa
mov
lret
outsb
mov
clc
jl
xchg
test
sbb
xor
jno
test
pushl
pop
cmc
into
add
mov
ficoms
jle
mov
lret
jns
xor
mov
lea
dec
push
imul
fmull
add
outsb
insl
pop
call
subl
mov
movsb
mov
sub
mov
and
cmpb
adc
inc
fwait
xchg
push
and
addr16
inc
sbb
mov
adc
pop
cmpsb
mov
rcrb
pop
out
mov
icebp
push
incb
or
cmpb
fistl
std
sub
pop
rol
arpl
push
mov
out
into
pushf
adc
sbb
push
ljmp
rolb
mov
dec
addr16
jnp
mov
cwtl
lods
je
inc
adc
jmp
xchg
xor
inc
data16
in
ret
dec
cmc
out
xchg
pop
insb
dec
inc
jae
pop
int3
xor
add
mov
adc
dec
push
std
stos
sub
insb
mov
sahf
out
push
mov
call
or
adc
pop
sub
mov
in
dec
lea
inc
and
iret
jg
jl
lret
push
ret
jb
jmp
ss
xor
xor
into
es
push
outsb
rclb
mov
loop
loope
icebp
xchg
cltd
push
mov
xchg
sub
mov
jb
jnp
clc
lcall
lcall
xchg
test
sbb
hlt
sbb
gs
jle
dec
jo
mov
add
rol
mov
aam
js
iret
mov
push
imul
cmc
js
loope
repz
aad
mov
stos
cmp
mov
pop
inc
mov
adc
cmc
add
mov
decl
xchg
mov
aas
mov
mov
leave
lcall
add
cmp
fstps
sub
sbb
fldlg2
sbb
dec
pushf
loope
cld
push
fwait
movl
and
or
stos
stos
mov
shl
scas
jae
loopne
inc
jns
push
stos
ret
push
xchg
fs
cld
lret
inc
ret
stos
lcall
and
and
bound
cmp
xchg
sub
xchg
fimuls
int
lret
notl
loope
or
leave
cmp
lods
mov
jno
rcll
cltd
out
pop
push
inc
xorb
xchg
es
fdivs
mov
jns
sbb
test
aas
inc
push
jno
dec
pop
stos
add
jecxz
sub
mov
push
addb
loope
shlb
cmp
outsl
dec
jne
mov
jae
push
pop
mov
add
loopne
pop
hlt
xor
dec
lea
pushf
dec
jb
mov
xchg
test
mov
fdivrs
call
movsb
rcr
les
jmp
aad
insb
pop
dec
fistps
add
pop
stc
add
sub
add
sbb
daa
jmp
test
lahf
loopne
popw
push
inc
xlat
std
mov
filds
rolb
bound
lcall
cmp
adc
pop
dec
jle
mov
je
les
loop
test
push
mov
dec
cs
jbe
mov
dec
jg
mov
dec
pop
mov
jp
push
test
ret
out
and
sbb
int
mov
cld
lahf
in
dec
push
jg
fpatan
inc
lea
fwait
jb
insb
add
adc
cmp
aam
sub
jmp
mov
xchg
xor
fimull
mov
pop
sti
adc
stc
add
hlt
sub
inc
adc
jmp
or
and
xchg
inc
fnstsw
adc
or
aad
shrb
xchg
inc
mov
pop
enter
sbb
aaa
add
lahf
jmp
push
in
lahf
std
pop
jne
add
dec
mulb
incb
out
lret
add
add
in
hlt
cmp
ret
andb
stc
loope
inc
popf
sbb
test
dec
std
add
je
mov
jae
push
pusha
imul
mov
cld
test
pop
xor
mov
pop
loopne
mov
push
enter
cmp
repz
fstl
movsb
movsl
loop
movsl
dec
pop
xchg
pop
xlat
test
cmc
lret
adc
js
es
sbb
and
movsl
dec
fnsave
push
push
enter
adc
mov
out
mov
mov
and
jnp
jp
dec
inc
lds
ds
pusha
mov
mov
xchg
or
sbb
pop
ret
or
sti
and
add
pusha
and
add
dec
loope
cli
in
sbb
mov
pop
popf
mov
in
mov
mov
xchg
inc
jmp
jg
mov
dec
mov
gs
adc
xchg
xor
in
pop
dec
int3
repnz
add
hlt
jno
nop
mov
imul
outsb
leave
aaa
and
das
test
jbe
clc
mov
mov
jmp
nop
ret
or
pusha
xorl
mov
jae
mov
in
dec
js
inc
cmp
inc
push
pop
xchg
es
ljmp
lret
inc
popa
adc
lahf
sub
cmp
lahf
ret
sbb
mov
lods
sbb
notb
dec
push
lahf
xor
adc
mov
push
subb
fists
in
int3
stc
add
pop
mov
pop
xchg
ret
aad
mov
add
cmp
mov
push
xor
jge
loope
popf
aas
sahf
xchg
xchg
push
rclb
jg
enter
sbb
inc
push
push
in
xchg
notl
testl
inc
or
outsl
rcrl
leave
mov
in
push
call
movsb
sub
sbb
lods
popf
cs
mov
lods
and
xor
andl
cwtl
xor
add
sbb
push
cld
loop
jge
daa
negb
dec
sub
leave
add
cmpsl
or
test
sbb
out
xor
lret
cmc
inc
mov
fiaddl
cmp
mov
mov
pop
jl
adc
jae
mov
scas
push
or
lods
push
inc
icebp
sbb
jge
addl
and
adc
mov
fdivrp
repnz
ret
std
xor
loope
push
shll
div
lahf
cmp
outsl
push
daa
aam
lea
cmpsb
cmp
or
xor
sub
bound
cld
xchg
jle
jmp
out
ds
jns
mov
adc
and
call
and
sub
stos
aaa
cmp
sbb
mov
sti
cld
sub
lods
rcll
loop
push
adc
xchg
sbb
cld
mov
and
call
cld
dec
xchg
xor
ficompl
mov
es
test
sbb
cmp
and
xor
mov
adc
and
movsl
hlt
out
xor
sub
sub
lods
shlb
cmp
sub
inc
xorl
in
cli
mov
cmp
lods
or
xchg
loop
sbb
test
insb
lret
push
sub
das
repnz
lods
out
xor
push
mov
push
lods
mov
xchg
andl
dec
inc
fs
rcl
lret
out
mov
jnp
add
jnp
sbb
lret
jmp
test
jo
pop
mov
or
xor
jp
stc
jnp
sbb
push
aaa
int3
popf
push
pop
and
rorl
sahf
xor
int
adc
shlb
mov
out
cmp
outsl
jae
jae
in
sub
test
ror
inc
and
mov
and
pop
insl
icebp
pop
jnp
xor
scas
xor
push
xchg
dec
xchg
icebp
clc
push
sub
and
cmp
push
mov
cmp
xor
in
test
sub
cmc
and
jge
sub
adc
mov
lods
mov
ret
dec
add
enter
jp
pop
in
pop
mov
push
jmp
sbb
js
enter
jno
jb
movsl
push
add
movl
out
fcmovu
or
cmc
add
mov
add
jbe
lret
adc
sbb
xor
aam
jno
cmp
ja
pop
jno
decl
mov
and
int
pop
lds
mov
push
cltd
insl
test
ss
fcompl
cmc
add
mov
fisubs
add
mov
adc
stos
cmp
pop
push
arpl
repz
add
sbb
clc
add
lods
mov
repz
or
loop
adc
les
pop
dec
or
data16
jmp
pop
repz
fcmovbe
fnstenv
sahf
sbb
test
push
ljmp
aam
or
lock
jae
pop
mov
mov
sbb
push
outsb
loope
lahf
jbe
aas
or
andl
sti
xchg
data16
jle
mov
mov
dec
jp
fs
stos
ret
and
or
pop
add
dec
sbb
fiadds
arpl
cmp
pop
push
or
aad
dec
inc
xor
dec
scas
hlt
sub
sub
jae
adc
out
inc
xor
lcall
push
leave
pop
adc
pop
adc
mov
add
xorl
or
sbb
ljmp
inc
pop
mov
lret
ja
rcrb
inc
mov
sub
sti
mov
sub
pop
and
push
subl
mov
lods
popf
push
stos
jae
push
jge
jo
or
mov
inc
inc
sbb
inc
adc
scas
lcall
push
cs
add
cmp
adc
in
jne
add
mov
or
daa
sub
fnsave
bound
dec
xor
stos
and
jne
imull
jb
inc
push
jns
dec
ljmp
sbb
mov
iret
xchg
out
mov
lcall
cmp
xchg
mov
xchg
push
imulb
cmp
sbb
rolb
sbb
movl
bound
push
stos
xor
xchg
xchg
repnz
shll
in
cltd
mov
aam
jae
dec
inc
sub
lds
sahf
mov
and
dec
inc
jge
sub
loope
shr
push
lcall
push
in
mov
fstpl
adc
outsl
push
pop
push
out
add
xchg
sbb
pop
ficoms
clc
jl
fsubrl
xor
fwait
mov
push
mov
shrl
rclb
mov
push
int3
in
push
lods
and
push
jnp
shrb
js
gs
sub
daa
pop
jb
out
mov
and
jg
mov
out
repz
outsl
and
dec
inc
fnstenv
rcrl
clc
mov
push
das
sarl
sbb
push
inc
push
dec
cmp
ja
fs
push
push
mov
stos
jno
lods
xchg
test
dec
inc
jnp
lods
pop
icebp
cmp
bound
xchg
mov
dec
aad
push
int
imul
xchg
sbb
push
mov
inc
call
cmpsl
mov
stc
xor
call
hlt
daa
sub
fidivrl
ret
and
stos
enter
dec
cmpsl
stos
ret
mov
push
mov
mov
pop
inc
icebp
jg
mov
bswap
jns
cwtl
cmp
cli
sbb
xchg
call
mov
pop
fadds
test
sbb
std
push
fidivl
repnz
insb
jp
xchg
dec
or
mov
xor
sub
pop
push
push
out
xor
out
fimuls
inc
fidivrl
imul
loope
loope
or
imul
icebp
xor
push
cmpsb
lods
lods
dec
es
es
mov
pop
pop
push
push
mov
xchg
jmp
cmp
xchg
popa
xchg
lcall
loopne
rolb
es
push
fidivl
mov
or
pop
ljmp
mov
fiadds
cmpsl
and
cmp
adc
inc
pop
out
push
mov
mov
sub
cltd
sti
mov
repz
xchg
and
cmc
cld
cli
adc
popf
enter
sti
mov
stos
fidivs
cld
into
push
lods
ret
pop
or
xchg
lods
xchg
pusha
lds
out
jmp
inc
outsl
sbb
hlt
sub
lahf
sti
jge
out
inc
add
das
sbb
aam
add
in
xor
outsb
fwait
loopne
sub
inc
mov
enter
dec
out
jmp
push
out
test
inc
mov
imul
mov
mov
inc
sbb
push
jg
push
mov
and
sub
lds
fwait
leave
out
imul
add
xchg
or
mov
je
bound
mov
pop
fidivrl
imul
into
pop
movsl
das
daa
inc
outsb
sbb
jl
mov
jno
les
or
loopne
fimuls
call
push
pop
fs
mov
jl
dec
shr
cmp
loop
mov
push
int
dec
sub
mov
adc
jno
ds
xor
cmp
cwtl
test
or
adc
decb
push
pop
jl
popf
xor
ret
push
jbe
push
mov
xchg
sub
and
negb
lods
mov
pop
ds
push
das
pop
fistpll
dec
dec
popa
fidivl
cwtl
or
jns
shlb
movsl
mov
adc
inc
adc
cmp
or
cmp
lret
cmp
push
fdivrl
aas
cmp
mov
test
addr16
dec
push
or
in
popf
lods
cltd
insl
mov
mov
shll
and
mov
jmp
adc
clc
mov
cli
or
ss
jo
push
testl
xlat
mov
loopne
mov
lock
dec
fcomp
shll
ret
push
mov
sti
add
idiv
xlat
xchg
push
or
push
add
cli
scas
or
or
in
ror
add
jnp
iret
pop
push
xchg
sbb
fldcw
sbb
pop
adc
repnz
or
clc
pop
fwait
mov
or
in
out
push
dec
sbb
call
jecxz
shll
lahf
repnz
jl
pop
push
mov
mov
dec
in
je
int3
cmp
or
lahf
imul
es
cmp
leave
outsb
andl
iret
test
xor
ds
sub
lret
std
and
mov
es
mov
enter
cmpb
xchg
fs
dec
lcall
sti
xchg
and
gs
rcl
or
xor
push
test
movsl
cmp
cltd
jmp
fwait
xor
mov
adc
js
xchg
insl
or
or
cltd
dec
ss
jne
push
push
test
mov
jecxz
clc
push
xlat
cli
cmovno
or
lea
xor
jno
out
push
in
out
pop
jnp
iret
xlat
out
pusha
clc
adc
mov
push
js
inc
mov
fwait
into
stc
mov
add
mov
dec
mov
ljmp
jnp
push
lret
leave
sbb
rorl
imul
jle
dec
xchg
pop
mov
cmpsl
out
cmpsl
es
adc
jo
in
mov
pop
pop
sub
lock
inc
mov
sub
mov
popf
out
push
jp
inc
das
nop
mov
or
cmp
je
pop
shrl
push
lea
mov
hlt
gs
int3
jmp
push
jns
fwait
adc
cmp
mov
hlt
stos
popf
cmp
out
push
fwait
dec
and
les
or
fisubs
jecxz
jmp
out
jae
pusha
pop
lcall
and
int3
addr16
inc
add
imul
cmp
inc
and
fbld
sbb
sahf
adc
adc
adc
and
push
xchg
clc
jns
fstpl
test
sub
jb
mov
pop
mov
outsl
out
cli
aad
shlb
cld
add
jb
popf
jo
mov
push
xchg
mov
xor
push
out
xchg
mov
incl
stos
inc
lods
xor
xchg
dec
add
sbb
add
cmpsb
xchg
add
cmpsb
and
mov
outsb
jl
xor
sbb
mov
std
jae
push
or
insl
add
and
mov
aaa
jo
mov
imul
insl
jl
add
cmpsb
and
push
test
xor
dec
jb
cmpsl
inc
cmp
icebp
or
inc
sbb
inc
outsl
sbb
fdivrs
outsl
push
lods
adc
xor
fstpl
pop
popa
cmp
mov
xor
mov
sbb
cmp
pop
jmp
push
mov
cltd
mov
les
test
and
push
add
fdivrs
sub
es
ss
stos
xor
inc
aaa
push
mov
mov
xlat
outsb
mov
sbb
mov
jns
jne
decl
scas
xchg
hlt
popf
mov
in
adc
clc
lret
test
andl
inc
sub
mov
out
adcl
pop
lahf
inc
popa
pop
daa
repz
xchg
les
movb
mov
nop
sbb
push
inc
add
sub
outsl
arpl
pop
push
cld
fincstp
jns
xchg
pop
mov
stos
push
push
imul
fildl
lahf
cwtl
pop
ss
into
popa
and
lods
cs
fdivs
out
mov
loope
cs
jb
lods
outsl
or
scas
mov
cwtl
imul
outsl
sub
or
into
jl
cmp
addr16
pop
push
mov
aas
jnp
cmc
push
insl
inc
out
daa
xor
pop
fsubr
rclb
mov
ror
dec
popa
cld
cmc
mov
bound
aam
xchg
ljmp
and
sub
push
fstpt
cmp
mov
sub
inc
orl
push
and
xlat
dec
ss
aam
pop
cmp
cmp
add
jo
je
adc
fcompl
hlt
lahf
shrl
inc
xor
xor
mov
mov
mov
js
xchg
or
cmc
inc
es
ja
int3
sub
scas
or
pop
lea
sbb
popf
leave
out
jbe
loope
ja
lea
add
int3
adc
mov
std
sbb
xchg
xor
dec
lds
sub
idivb
lods
stos
xor
sub
pop
push
das
jge
jno
mov
mov
and
lea
dec
pop
or
or
daa
out
mov
pop
dec
mov
and
mov
ret
loopne
scas
add
outsl
insl
cltd
jns
imul
xor
cmp
aam
in
addr16
int3
cli
ret
dec
loop
xchg
mov
push
bnd
sub
fcomps
in
mov
test
push
dec
or
xor
in
pop
cwtl
cmpsl
scas
ss
movsl
movsb
fstps
out
push
dec
sub
mov
dec
inc
lods
aad
int3
and
cwtl
aaa
dec
and
jbe
shlb
stos
rorb
mov
ret
fsubrp
stc
pop
or
lds
and
out
mov
mov
fs
dec
push
xor
jecxz
loopne
ja
mull
add
leave
cmpsb
and
adc
scas
push
dec
shrb
jbe
nop
dec
cmpsb
arpl
inc
cmp
cmpsb
notb
sbb
mov
out
jg
xchg
sub
cmp
cmp
imul
mov
ret
enter
lds
hlt
sub
incl
sub
orb
dec
push
fxch
out
sahf
cmp
lods
sub
sub
lods
popa
mov
ret
fisubrl
lods
nop
push
icebp
pop
test
mov
fbstp
mov
arpl
fimull
inc
movsb
scas
adc
xor
jbe
mov
push
jmp
or
dec
push
sbb
add
cmp
mov
aas
jg
mov
dec
add
sbbb
sbb
pop
add
lret
mov
sbb
adc
xchg
cmp
mov
adc
mov
scas
push
int
xor
vrsqrtps
inc
push
lcall
mov
arpl
mov
mov
test
jae
dec
lret
and
pusha
lds
pop
leave
sub
inc
ret
std
and
push
jmp
xor
pop
add
jmp
mov
sub
xchg
imul
sahf
in
std
pop
dec
mov
mov
xchg
test
push
stos
mov
push
pop
sbb
dec
popa
xor
mov
and
jp
lcall
inc
add
xchg
loope
mov
dec
jno
in
cmp
sarb
outsb
mov
jo
adc
imul
adc
std
mov
loop
out
xor
fcmovbe
loop
cltd
sbb
inc
iret
xchg
loop
sub
leave
lds
leave
daa
ja
mov
repnz
mov
cmp
and
mov
movsb
ret
ljmp
sub
int
sbb
iret
jno
push
mov
cwtl
add
jnp
xor
dec
mov
jns
jo
sbbb
adc
sahf
jle
lods
push
pop
repnz
out
in
sbb
dec
test
fwait
sbb
xchg
fsubr
pop
inc
mov
inc
mov
divl
mov
andl
push
xor
sahf
iret
pop
xor
test
cmpsb
lock
adc
sub
or
out
loopne
test
mov
test
sar
flds
in
sub
jg
add
dec
push
xchg
sub
dec
scas
hlt
cmpsb
cmp
cmp
in
jbe
jno
jge
cwtl
mov
mov
xor
xchg
loop
and
enter
adc
xchg
jae
cmp
mov
adc
imul
insl
sbb
jecxz
inc
sahf
mov
cltd
and
mov
xchg
xlat
add
and
mov
cmp
mov
mov
mov
into
ss
hlt
adc
lods
or
adc
andb
out
or
and
aas
icebp
dec
cmp
movsb
jb
add
sahf
adc
es
jae
jne
cli
inc
jns
jae
mov
mov
jo
imul
outsl
sahf
addl
scas
iret
cmpsb
clc
stos
cmc
sbb
enter
ss
mov
push
adc
xchg
inc
call
jns
push
mov
cwtl
outsb
or
or
add
push
jg
adc
dec
mov
push
dec
push
lods
inc
enter
xor
mov
adc
cmp
inc
xor
fstp
popf
loop
mov
mov
out
lretw
adc
sbb
mov
xor
stos
lret
lock
mov
mov
arpl
sti
mov
test
sub
adc
push
ljmp
pop
jnp
mov
sub
jnp
subl
dec
lcall
fcomi
in
movsb
mov
and
inc
mov
and
fcoms
pop
mov
repnz
xor
xor
jb
pop
mov
push
lcall
fidivs
rcl
popa
shl
push
pop
cmpsb
test
addr16
add
pop
sub
push
xchg
leave
or
fnsave
shrb
and
lods
js
gs
xchg
and
inc
push
add
test
pop
add
pop
cmp
mov
roll
sbb
out
mov
daa
jg
cli
std
pop
mov
stos
mov
and
push
out
cmc
pop
xchg
jp
jge
sbb
xor
add
adc
hlt
outsl
pop
cmpsb
push
lret
ss
std
sahf
cli
fiadds
cs
sbb
ret
xor
inc
or
lods
clc
jnp
push
dec
pop
xor
fistpll
sbb
ret
sub
xchg
mov
jle
enter
cmp
bound
loopne
fstl
dec
mov
push
scas
data16
mov
jmp
add
daa
cmp
fnstenv
hlt
insb
rorl
in
sub
popa
lahf
fs
jge
bound
paddq
iret
stc
xchg
jg
sbb
dec
std
add
fldln2
stos
test
in
arpl
inc
loope
int
addr16
adc
fistpll
ljmp
push
jnp
enter
mov
aad
rolb
inc
or
jo
stos
out
dec
mov
xor
lods
jo
pop
pop
in
lock
jbe
das
out
mov
aad
fcmovne
adc
push
outsb
adc
dec
es
and
into
adc
pop
ds
in
iret
lock
bound
orl
in
add
lods
cmp
data16
sbb
xchg
mov
push
test
daa
cwtl
shll
pop
xor
stos
push
into
jmp
mov
out
mov
xchg
fnstcw
push
popa
iret
add
xor
neg
loopne
ret
pop
dec
push
dec
sti
dec
jns
out
cmpl
jmp
incb
xor
inc
sbb
mov
xor
inc
mov
jno
imul
jecxz
arpl
out
mov
add
sahf
aad
andl
add
dec
sbb
xor
scas
sarl
dec
sub
popl
lcall
sbb
mov
mov
push
fdivs
xchg
fadd
mov
sub
lret
xchg
or
xor
test
or
adc
push
ficoms
dec
mov
loope
jmp
rclb
jns
jecxz
mov
and
fistpll
jbe
adc
loopne
inc
cmp
mov
mov
xor
dec
lahf
daa
ljmp
int
loop
push
ja
sbb
dec
in
lahf
rcr
inc
cmp
lcall
or
cltd
es
jno
outsb
fidivrl
or
hlt
adc
mov
aaa
and
or
cmc
and
mov
aad
jp
inc
lods
sub
adc
lret
cltd
add
pop
dec
bound
push
sbb
stos
out
xchg
andb
adc
iret
jb
xchg
dec
jmp
adc
in
addl
mov
loop
add
xor
scas
and
mov
dec
ljmp
clc
hlt
mov
lods
nop
inc
loopne
pop
dec
mov
cmp
outsl
out
leave
xchg
fwait
adc
fidivs
push
adc
cld
data16
into
cmpsl
and
clc
push
sahf
ffreep
jecxz
and
pop
js
or
cwtl
pop
outsb
cmp
dec
jge
dec
outsl
xchg
jecxz
xor
je
scas
xor
inc
push
loope
div
fisubrs
in
cmp
jle
or
loop
mov
xor
pop
rcrb
cmp
ret
xor
add
dec
mov
or
cmpsb
sbb
push
mov
roll
xchg
mov
popa
xchg
sub
and
mov
mov
jmp
push
cmp
and
addl
dec
or
ret
inc
pop
in
adc
pop
add
jne
outsb
ret
jb
dec
or
fstl
es
xchg
xchg
mov
adc
ss
jp
mov
fs
rcll
pop
jl
fisttpl
push
add
movsb
lahf
cmpsl
jno
hlt
push
aam
int3
mov
insb
addb
andb
pop
pushf
scas
mov
aad
lea
mov
sbb
cmp
sub
test
lret
jnp
inc
dec
or
movsl
and
loop
jmp
mov
dec
aam
inc
add
add
xor
ja
dec
mov
sub
xlat
xchg
push
inc
shlb
mov
pop
jbe
stc
jne
imul
add
mov
mov
xor
xor
add
add
imul
add
mov
mov
mov
cmp
jb
mov
mov
xor
add
imul
mov
xor
add
or
mov
xor
add
mov
xor
add
mov
lea
jmp
mov
mov
xor
lea
mov
jmp
mov
mov
xor
lea
lea
xor
cmp
jne
decl
jne
mov
mov
mov
xor
mov
xor
mov
xor
mov
mov
xor
mov
mov
xor
add
pop
pop
pop
leave
ret
xor
andl
inc
ret
push
mov
sub
andl
mov
inc
mov
cmpl
jle
jmp
call
cmpl
jb
movl
push
adc
movl
subl
mov
push
mov
adcl
xor
push
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jg
jmp
push
push
call
cmpl
jne
xor
or
inc
mov
jmp
mov
orl
add
andl
mov
mov
addl
test
movl
je
movl
cmpl
je
cmpl
jle
jmp
push
call
mov
dec
mov
jmp
mov
sbb
mov
addl
mov
mov
xor
xor
add
and
mov
mov
and
xor
mov
and
mov
add
sbb
mov
mov
xor
mov
or
mov
add
or
mov
orl
mov
xor
mov
xor
mov
add
mov
sub
sbbl
lea
xor
xorl
xor
movl
cmp
movl
je
xorl
mov
subl
xor
adcl
add
cmp
movl
jne
pushl
call
mov
not
mov
adcl
mov
addl
xor
add
movl
cmp
movl
je
pushl
sbbl
pushl
call
mov
xor
mov
xor
mov
xor
add
movl
cmp
movl
je
mov
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
ja
jmp
push
push
push
call
cmpl
jne
mov
inc
mov
jmp
mov
xor
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jge
jmp
pushl
call
jmp
mov
add
sbbl
mov
mov
mov
sbbl
add
orl
mov
jmp
push
mov
andb
test
adc
adc
addl
add
mov
cmpsb
sbb
pop
stos
jnp
in
dec
loope
mov
pop
xor
xlat
addr16
inc
jp
test
mov
and
cli
addl
adc
xchg
jmp
or
sbb
sub
mov
out
push
jl
cmc
out
xchg
shll
fimull
pusha
adc
jnp
mov
and
push
xchg
mov
bound
cltd
xor
mov
lahf
dec
aad
fistpl
mov
xor
testb
fbstp
ss
repz
xchg
aad
pop
bound
fstl
jnp
mov
loopne
dec
mov
mov
insb
mov
pushf
aad
jo
data16
movsb
sub
jne
push
jnp
dec
inc
lock
jecxz
mov
cmp
out
das
dec
mov
sub
sbb
mov
adc
ret
in
mov
sub
jmp
pop
push
ret
fwait
loope
out
cltd
jge
jo
push
sbb
mov
xor
iret
cmp
push
cmp
pop
sub
push
jno
cmc
dec
ror
mov
les
enter
and
stc
push
inc
lock
sbb
mov
mov
call
bound
jae
pop
or
fdivrl
inc
test
mov
sbb
mov
cltd
push
jmp
test
je
push
push
xlat
xor
inc
xchg
push
mov
out
cli
xlat
call
addr16
cmp
jge
mov
aaa
inc
cli
sbb
test
dec
or
jl
xchg
lret
rolb
jno
js
adc
jb
ljmp
inc
sar
inc
jge,pn
and
sbb
push
sbb
xor
or
mov
and
sbb
loope
pop
jns
mov
cmpl
jbe
push
push
pop
mov
add
xor
sbb
add
cmp
aam
add
or
xor
sbb
test
dec
sub
shrb
push
or
out
or
stos
lds
std
js
jmp
push
xor
or
loopnew
incl
insl
nop
aam
jecxz
pop
xor
fcoms
stos
lods
shlb
pop
dec
movsl
lea
xor
jle
ds
push
je
adc
lahf
loope
xor
les
mov
int3
fisubrs
cmpsl
enter
lds
gs
ror
in
xchg
mov
data16
mov
idivl
xor
xor
das
dec
xchg
push
pop
daa
ret
mov
inc
add
push
push
test
fidivrl
retw
lahf
out
jecxz
push
pop
mov
sbb
test
adc
fs
bound
dec
sub
xor
pop
inc
add
push
inc
addl
mov
push
into
mov
cmp
inc
divl
push
sbb
call
leave
jae
jle
and
and
dec
scas
sahf
fisttpll
cli
cmp
sarb
incl
jp
jge
fs
or
imul
shrl
pop
push
leave
in
mov
inc
xor
int
pushf
imul
aas
jae
out
orb
call
mov
stos
pusha
fbld
inc
addr16
shr
aaa
test
add
mov
je
sahf
je
xchg
jl
out
fs
cmpsl
insl
mov
lcall
push
loop
jnp
push
inc
lahf
xchg
pushf
movsl
sub
sub
inc
or
pop
popa
adc
jne
sbb
negb
icebp
mov
xchg
mov
out
jae
sbb
xchg
mov
sbb
jge
dec
loop
lea
fwait
int3
test
jmp
adc
scas
testl
and
rorl
add
andb
inc
cmp
pop
test
sbb
xor
neg
xor
add
jbe
in
pop
sbb
push
pop
lods
push
sbb
lret
dec
sub
lret
xchg
aad
and
adc
test
xor
pop
test
ss
and
dec
out
inc
shrb
xchg
cld
fnstcw
xlat
test
enter
and
adc
sbb
hlt
aam
cwtl
xlat
xor
aas
testl
pop
add
fadd
add
mov
xlat
lds
add
jge
jo
fmul
mov
push
out
adc
inc
sti
xor
fcoms
push
sarl
mov
mov
loope
f2xm1
dec
mov
pop
sarl
mov
or
push
jg
aaa
mov
cmpsb
or
cli
cld
mov
sbb
mulb
loope
repz
dec
or
stos
inc
imul
jecxz
std
push
hlt
sahf
xor
sti
out
xchg
mov
aad
pop
sub
push
and
jnp
idivb
out
in
mov
sbbl
mov
mov
aad
and
pop
pop
rcrl
push
lods
cmp
lods
int3
fisubs
mulb
jecxz
mov
mov
cli
cmc
mov
jge
test
mov
mov
sub
mov
mov
mov
testl
enter
and
sbb
out
add
pop
jb
repz
cmp
push
or
stos
push
popa
out
insb
xchg
scas
pop
test
iret
or
mov
mov
lahf
jae
addl
mov
je
scas
out
repz
add
data16
jmp
or
in
insl
movsl
fisttps
out
hlt
pushf
adc
jnp
mov
in
out
jmp
dec
inc
imul
cmp
push
fs
gs
adc
xchg
fwait
xor
arpl
data16
sub
les
cmp
or
pop
cld
insb
push
lds
mulb
testl
arpl
xchg
ss
add
xchg
test
cmp
movsb
fidivl
cmp
popf
mov
inc
mov
jle
pop
push
mov
int
push
xor
scas
movsb
int3
repz
inc
jl
jmp
or
or
sub
ljmp
dec
sub
and
and
iret
imul
ss
ja
aas
or
movsl
stos
nop
and
int3
sub
outsl
leave
jmp
pop
jb
jecxz
mov
push
mov
dec
sbb
cmp
xchg
test
mov
imul
std
jp
add
lret
xchg
iret
mov
shll
aam
adc
stos
pop
addr16
enter
cmp
mov
hlt
shlb
movsl
fdivl
cltd
jne
sub
mov
push
mov
fsave
jp
imul
fwait
lret
add
pushf
les
mov
sub
jle
pop
sub
push
enter
dec
jge
xchg
inc
push
jnp
std
jno
xchg
out
lahf
pop
push
push
dec
addr16
adc
push
repnz
and
ja
addr16
sbb
pushf
adcb
pushl
lock
test
push
cmp
cwtl
pop
or
mov
les
push
inc
iret
sub
adc
adc
scas
pop
dec
xchg
stos
ljmp
out
std
test
jge
cli
xor
mov
or
test
testb
stos
mov
pop
adc
lret
icebp
add
pop
sub
mov
jmp
cs
enter
lods
cmpsl
mov
push
adc
mov
xchg
insb
sub
cmc
in
mov
rorb
sbbl
mov
adc
lea
mov
aaa
out
or
shrb
cltd
outsb
mov
scas
outsb
push
mov
adc
pop
pop
ja
xchg
inc
push
add
mov
adc
fsub
pop
aad
push
jp
mov
sbb
enter
fimuls
pop
mov
pop
pushf
mov
pop
pop
rorb
sub
stos
push
mov
icebp
cmpsl
or
pop
jge
fistpll
inc
push
cmp
mov
jo
inc
and
test
clc
subb
inc
pop
test
xor
ja
imul
stos
mov
arpl
sbb
inc
iret
rcll
movsl
out
push
push
pop
cmpb
cs
cmp
dec
xchg
cmp
mov
js
inc
std
add
jnp
cmpl
insl
cmc
xchg
or
adc
sti
inc
rol
jnp
xlat
inc
ds
shrl
testl
mov
sub
and
notl
xchg
jp
loop
xchg
icebp
fcompl
inc
xor
addr16
stos
ret
sarl
mov
call
xchg
stos
repnz
push
jmp
inc
fstpt
push
dec
imul
test
cmp
mov
xor
gs
adc
in
outsb
in
xor
push
enter
fcomps
xchg
push
cmp
cmpsb
fbstp
jbe
xor
mov
cmpb
cmp
jne
fcoml
movsb
int
push
inc
jno
jbe
mov
mov
adc
pusha
pop
mov
sub
mov
pop
in
ljmp
jg
sbb
es
pop
dec
mov
cmp
add
xchg
push
sbb
popa
jne
cmp
rcl
push
mov
pop
cmp
xlat
mov
push
rcrl
je
das
sub
or
inc
outsb
ja
jo
dec
ja
and
adc
movsl
mov
jo
in
pop
jnp
sub
sbbb
test
shlb
imul
lret
sahf
push
mov
sub
fnstsw
pop
or
jnp
mov
pop
shl
lods
clc
jno
pusha
inc
pop
pop
rcl
scas
mov
sub
push
mov
adc
sbb
xor
shrb
in
xchg
jmp
cltd
push
add
aam
inc
mov
mov
fidivrs
test
jbe
lahf
out
in
aaa
daa
cmp
inc
and
sbb
mov
scas
xchg
cmp
pop
add
push
outsl
int3
outsb
adc
jnp
outsb
pop
icebp
imulb
cld
into
vxorpd
ja
sub
sbb
sbb
push
jo
xor
adcl
inc
xchg
mov
in
cmp
roll
sub
cmp
push
xchg
dec
or
inc
loopne
pop
cmp
lea
xchg
xchg
jns
and
outsb
push
out
pop
jne
andl
cmp
test
test
cmp
outsl
sub
push
jp
mov
add
mov
jb
stos
push
adc
and
push
jl
out
call
ja
add
nop
cmc
fildll
mov
lock
add
sahf
mov
insb
fstl
mov
mov
pop
cmp
mov
popf
or
push
aas
sbb
jb
jg
dec
ds
shr
cld
loope
xchg
push
idivb
stos
lock
push
and
mov
cld
lret
lds
repnz
add
lret
in
and
cli
js
sub
push
mov
repz
mov
xchg
repz
in
dec
imul
ljmp
sahf
add
cmp
cld
xchg
inc
mov
inc
test
sub
pop
xchg
testb
test
mov
sbb
sub
push
js
pop
shl
stc
ja
test
mov
rorl
xchg
push
push
fldenv
dec
js
jae
push
mov
lock
cmpsl
dec
lret
and
lret
fcomip
sub
movsl
test
incb
mov
lret
inc
int
fidivrl
fst
les
xchg
xor
sub
mov
adc
insl
xchg
imul
dec
mov
cs
xchg
mulb
mov
push
out
push
aam
or
loop
imul
scas
cmp
out
pop
jg
out
mov
dec
pusha
jge
mov
sbb
cmp
into
or
pusha
inc
xorl
insb
add
jg
jae
fld
push
pop
sbb
movl
mov
movsl
pop
and
hlt
sbb
push
mov
mov
jp
mov
xor
enter
in
mov
pushf
jno
jle
inc
mov
test
push
push
out
fsubr
call
clc
leave
daa
ljmp
jne
mov
insl
out
jnp
mov
enter
ret
in
ret
arpl
je
mov
sub
or
ss
cltd
sub
ss
mov
push
inc
std
rcll
fstp
dec
scas
addr16
adc
aam
pushl
rclb
xchg
sti
dec
les
jo
lret
mov
and
pop
mov
pop
pop
and
pop
inc
dec
test
les
add
out
js
dec
scas
adc
lret
iret
push
and
sub
fsubrs
sub
test
xchg
inc
push
in
in
sbb
dec
sub
test
dec
pushf
sti
das
cwtl
out
jnp
fisubrl
outsl
cmp
or
or
es
test
int
push
dec
hlt
cli
ja
lret
dec
jae
jl
das
pop
and
cmp
cmp
xchg
push
pop
mov
xor
test
adc
push
rorl
inc
cmp
pop
sti
lret
insb
pop
in
cs
fs
jg
ja
push
or
lods
and
sub
in
cs
enter
ret
loopne
pop
lock
and
push
sahf
jno
add
aad
outsb
hlt
shl
pop
push
cmp
cmp
ss
pop
mov
and
push
inc
sbb
mov
mov
out
mov
pop
dec
lea
out
mov
jmp
mov
faddl
testb
or
sahf
mov
add
stc
sti
ss
mov
mov
jmp
dec
shlb
push
add
pop
rcrb
pop
pop
lea
fistpl
adc
add
jae
cmp
outsb
or
jge
adc
inc
in
jbe
mov
and
sysexit
xor
rolb
push
add
lock
shll
ficoms
pushf
mov
sbb
out
mov
gs
mov
sbb
mov
pop
xor
add
xchg
test
inc
lock
icebp
pop
addr16
nop
sub
adc
into
jnp
lret
mov
or
cmp
jbe
das
and
aaa
pusha
pushf
push
dec
aam
das
lods
and
das
adc
jnp
popa
ss
push
mov
orb
fiaddl
lahf
dec
push
mov
fsubr
jmp
cmpl
xchg
lahf
xchg
xchg
testb
mov
push
fisubs
aas
xchg
cltd
lods
sub
test
hlt
int3
inc
dec
xor
int3
scas
jbe
sub
xlat
stos
fimuls
xchg
push
xchg
popa
sub
in
lea
sub
jle
out
add
inc
mov
dec
or
shl
lods
xchg
testb
cld
orl
sbb
jmp
rclb
mov
jns
ficoms
fdecstp
lret
stos
sub
push
pop
cwtl
jae
add
push
lea
enter
pop
sbb
dec
cwtl
jge
repz
mov
push
ret
addb
add
pop
add
cmp
insb
inc
icebp
call
inc
movsl
mov
sbb
ja
hlt
jecxz
aam
mov
lret
jmp
or
popa
sbb
movsl
enter
jo
xor
test
jno
mov
ljmp
sbb
xchg
fs
cli
pop
in
sub
push
lock
fdiv
xchg
fwait
stos
mov
popa
push
mov
mov
push
lods
jl
mov
ret
movlps
pop
aas
cmpl
lods
mov
ret
subb
sub
mov
cmp
xor
rcr
or
pushf
and
xor
lcall
push
dec
mov
xor
dec
aam
jnp
adc
pop
adc
mov
xchg
das
mov
cs
mul
lock
les
scas
andl
pop
pop
push
dec
sub
add
dec
mov
test
pop
lahf
sbb
lds
jecxz
xchg
pushf
or
jns
imul
imul
xlat
cmp
push
lcall
ret
cwtl
lods
stos
leave
pop
or
insl
js
movsl
cmp
dec
mov
adc
pop
adc
dec
xlat
out
pop
ds
add
scas
outsl
adc
cwtl
mov
inc
call
repnz
rorb
inc
jne
lds
mov
push
pop
fs
mov
mov
stc
pop
sahf
sbbl
arpl
jecxz
bound
cmp
and
pop
clc
dec
cmc
mov
popa
or
cmp
dec
sbb
mov
sar
mov
sbb
push
outsb
je
dec
xchg
les
jmp
stos
xlat
clc
les
push
in
adc
mov
cld
sarb
mov
push
or
inc
cmp
aas
dec
test
daa
js
cmp
ss
cltd
jg
dec
or
in
sub
or
mov
push
pop
mov
pop
mov
out
fldl2e
nop
into
sbb
notl
mov
xchg
xchg
rol
mov
sarb
lret
cmp
cmpsb
push
sub
leave
dec
int3
sbb
add
mov
pop
mov
loopne
push
cmc
add
adc
shrb
dec
outsb
pushf
nop
mov
jle
jns
int
mov
icebp
arpl
dec
push
sahf
fcomps
aas
sbb
push
fcomps
mov
inc
inc
and
sub
mov
dec
pusha
add
ds
adcb
push
xor
xlat
data16
dec
inc
dec
ja
pushf
imul
push
inc
adc
int
add
mov
cmpps
dec
cli
push
inc
adc
mov
xor
inc
cwtl
imul
mov
xor
pop
cmc
sub
push
mov
cmpsb
cmp
loope
leave
adc
and
mov
sub
imul
dec
mov
mov
orb
adc
add
mov
je
out
hlt
cltd
lea
push
movsl
and
dec
int3
dec
test
sub
jp
fildll
out
mov
test
fstp
outsb
adc
ret
std
loop
popf
inc
dec
xchg
repz
sar
repz
mov
addr16
stc
shlb
pop
jne
adc
mov
or
jmp
idiv
sub
add
out
dec
dec
cmp
mov
or
mov
adc
ja
repnz
jns
cmpsl
jo
ds
xor
cmpl
dec
in
push
push
std
lcall
movsl
xor
mov
cmpsl
cli
cmp
jno
mov
mov
xchg
lds
das
aas
rcll
int
fdivl
dec
dec
mov
pop
pop
fdivrs
int
add
push
cmp
mov
dec
hlt
in
xchg
jae
xchg
cmp
pushl
in
adc
cs
ljmp
push
jmp
jecxz
lret
aam
jle
insb
mov
ja
and
shrl
add
mov
in
push
pop
insb
push
cmp
mov
jl
frstor
lods
cmpsb
xchg
sarb
pushf
pop
xchg
loope
loope
cmpsb
dec
cmp
pop
sub
pop
push
sbb
jbe
clc
jp
aaa
xorl
mov
push
sub
mov
popf
cmp
mov
inc
jae
popf
loope
mov
mov
mov
and
add
gs
and
shlb
in
xor
sti
dec
sahf
loop
adc
jne
out
lcall
leave
add
sub
loopne
ds
sbb
flds
sti
cmpsl
xchg
adc
dec
mov
addr16
scas
sub
jne
xchg
leave
stos
xor
into
dec
rcrb
aas
and
lock
in
mov
int
bound
mov
xchg
mov
xchg
in
nop
xor
mov
mov
add
test
xchg
pop
and
in
jp
addr16
or
outsl
cmp
dec
repnz
pop
fstl
xlat
push
fs
pop
lret
fadds
xchg
out
xor
push
xor
test
hlt
stos
cld
movsl
cmc
and
dec
outsb
test
subl
and
xor
push
popf
and
push
mov
arpl
pop
or
mov
pop
imul
adc
or
lret
fs
fisubrl
cmpsl
loope
stos
dec
jecxz
mov
or
into
xor
lds
mov
leave
ds
andb
scas
lcall
sub
sarb
xor
sbb
call
scas
xor
lods
adc
iret
cltd
pop
jbe
or
xor
shr
jmp
popf
mov
scas
outsb
pop
pusha
sbb
or
sub
fwait
push
ret
pusha
lea
iret
sbb
cmp
cmc
cld
xchg
adc
xchg
xor
push
cmp
mov
enter
and
popa
xor
pop
jmp
jge
mov
jmp
fstpt
popf
gs
movsl
mov
pop
cltd
or
jo
mov
rcll
push
push
iret
mov
mov
xor
and
ficoml
dec
repnz
jmp
jle
jne
into
testl
jmp
pop
sbb
ljmp
std
add
pop
rcrl
sahf
mov
mov
scas
add
sti
sub
or
aas
cmpsb
movsl
xlat
fidivrs
adc
repnz
pusha
gs
mov
scas
mov
cli
inc
jg
mov
in
cmpsb
cmp
mov
xor
cmp
adc
cmpsb
sbb
mov
syscall
lcall
xchg
mov
mov
repz
or
addl
fisttpl
jle
out
testl
fwait
pop
stos
add
mov
call
ret
cmpsb
rcl
sbb
jb
adc
adc
or
lret
pop
jecxz
inc
jg
das
inc
pusha
cltd
jle
popf
test
in
sbb
mov
mov
mov
out
call
stos
nop
pop
loop
lcall
push
mov
gs
pop
testb
mov
add
lds
inc
dec
pop
cmp
outsb
pop
jecxz
and
xor
adc
jmp
nop
xlat
mov
xchg
xchg
mov
add
fidivl
sub
sbb
or
jmp
adc
mov
stos
mov
jg
inc
jge
mov
mov
repnz
cmp
cmp
ljmp
dec
and
loopne
jge
je
clc
mov
jb
call
or
fcomi
pop
pusha
mov
or
inc
adcl
xchg
out
pop
or
jns
sarl
lcall
clc
jl
sub
hlt
xor
mov
jmp
xchg
adc
inc
rcl
aaa
jno
in
shll
sahf
aas
inc
shrb
mov
cmp
mov
repnz
xchg
das
jbe
jg
and
idiv
fbstp
pop
mov
cli
rol
fists
xor
mov
subl
fwait
and
push
imul
test
outsl
cmp
or
bound
xchg
andb
xchg
dec
inc
push
shrb
pop
pop
jecxz
js
sub
inc
pop
mov
arpl
sub
or
das
push
dec
cmp
aas
mov
scas
nop
dec
cmc
outsb
scas
mov
je
fistpll
fstpl
js
cmp
adc
jae
cltd
cwtl
jmp
adc
std
ret
stos
and
idivb
xchg
into
or
mov
sub
pop
adc
dec
aad
js
sti
pop
sub
ljmp
adc
scas
xor
mov
adc
inc
scas
mull
jno
push
cmpsb
fistpll
push
xchg
fnstcw
xor
int
jae
mov
std
xchg
fists
sub
adc
sub
mov
mov
sbb
orb
test
scas
cs
pop
insb
mov
mov
ja
mov
and
and
xor
pop
cmp
cmc
insb
lahf
and
mov
sub
aaa
aad
mov
mov
ficoms
call
je
add
dec
stos
dec
add
gs
hlt
sti
and
mov
jae
aam
jns
test
test
add
std
dec
mov
aas
cmpsb
mov
mov
mov
add
inc
cmp
rcll
fwait
pop
or
ljmp
nop
cld
call
add
imul
or
jnp
sub
addr16
adc
push
cmp
xor
sub
jmp
inc
inc
int
add
xor
sub
bound
int
aam
cltd
movsl
fwait
adc
and
mov
xchg
push
cmp
add
insb
or
arpl
sbbb
inc
stos
cmp
xchg
pop
xchg
jne
mov
cmc
cmp
sbb
fstpt
dec
mov
mov
mov
mov
mov
dec
mov
popa
into
imul
ljmp
sub
mov
jb
aaa
insb
enter
push
jae
and
jge
movsb
xchg
push
xor
out
and
or
push
xchg
sub
mov
and
shl
cmc
push
and
mov
pop
andb
inc
mov
ret
inc
push
les
sti
cs
lods
int
sbb
xor
dec
test
arpl
jl
and
pushf
xor
jl
adc
stos
imul
push
insl
fcoml
js
adc
rcl
cmc
gs
lcall
inc
mov
popa
dec
mov
sbb
cmp
xor
xor
mov
or
or
lcall
pop
cmp
pop
cltd
test
sub
int3
pop
stc
rolb
xchg
and
and
jg
aaa
hlt
repnz
fiadds
mov
adc
pop
inc
or
xorb
xor
repz
mov
jge
add
fmull
fildl
adc
push
sub
jmp
inc
or
mov
mov
in
adc
dec
sub
arpl
lcall
add
lea
cld
js
insl
push
fimuls
sbb
fcmovb
dec
outsb
jmp
leave
sbb
inc
es
aam
push
jae
rolb
orb
fmuls
cltd
sti
xchg
cmp
data16
xchg
jno
pop
cmp
inc
jp
inc
fcmovbe
pop
mov
cmp
push
cmpl
mov
push
test
jnp
lret
add
outsb
sbb
mov
jns
xor
lret
jle
xchg
filds
sbb
ret
xchg
ja
cmp
jo
pop
loop
imul
push
out
and
cltd
aaa
pop
push
cmpsl
inc
test
fstpl
lods
lock
adc
incb
pushf
jg
scas
mov
cltd
mov
push
mov
hlt
cwtl
mov
mov
call
sub
bound
jge
dec
gs
je
in
and
cmp
mov
pop
dec
insl
popa
loop
repnz
test
cltd
inc
test
mov
push
or
pop
mov
out
jecxz
jne
rol
loop
mov
stos
fnsave
lcall
xchg
mov
aam
int3
aas
cld
lret
ljmp
and
sub
jns
sbb
add
flds
daa
mov
dec
dec
push
out
jp
add
sub
cld
loope
cld
jmp
mov
iret
decb
in
dec
scas
inc
or
ja
lods
inc
rcll
mov
or
fmuls
push
ljmp
andl
xchg
xor
xchg
mov
xchg
sbb
mov
dec
into
cli
popf
sbb
movsl
out
into
and
adc
cmc
sbb
roll
hlt
fiaddl
xchg
dec
stos
popa
or
ret
dec
lret
and
push
aad
pushf
dec
inc
dec
xor
or
lds
mov
mov
xchg
xchg
mov
push
or
aas
lock
orl
ss
lret
xor
movsb
mov
and
xchg
dec
jle
push
xorb
jbe
dec
cmp
and
call
call
inc
push
sti
sub
iret
jnp
pop
outsb
cli
pop
sbb
mov
push
xor
inc
ljmp
out
insl
push
adc
das
mov
push
jne
idiv
in
lock
popf
mov
roll
shlb
ja
testl
in
jae
add
out
insb
dec
add
imul
cli
lds
fwait
mov
ret
fmuls
imul
dec
mov
lret
paddusw
xchg
pusha
push
mov
mov
in
ret
stos
inc
fildll
push
out
mov
dec
stos
mov
inc
dec
fldcw
icebp
dec
and
sbb
xchg
pop
jg
jecxz
xor
ret
fiaddl
clc
cmp
xchg
cs
push
xchg
mov
pop
mov
and
jmp
fs
fildl
negl
mov
out
mov
ds
dec
xchg
add
mov
test
push
inc
or
xor
mov
fisubrs
std
popa
pop
mov
insb
or
xchg
mov
jns
int3
cmp
pop
insb
aad
add
xchg
lahf
xchg
mov
flds
cltd
and
hlt
fwait
jmp
les
out
pushf
cmp
mov
pop
addb
pop
push
jmp
out
cld
sarl
xlat
xor
cmpsl
mov
xor
dec
cld
jb
arpl
pop
push
mov
lret
mov
test
push
dec
inc
adc
sub
lret
inc
and
in
push
ss
lcall
lahf
loopne
inc
add
fnstcw
decb
arpl
fidivs
mov
cmpsl
pmuludq
pop
sub
push
aam
rcrl
add
dec
adc
mov
mov
jo
mov
mov
popf
fldcw
and
xor
int3
cmp
rcll
add
lret
std
and
cmp
inc
cmp
xchg
pop
xor
clc
cmp
test
int3
rcrb
stos
or
pop
sbb
xchg
mov
mov
enter
push
or
mov
pop
dec
or
sarb
js
fsubl
or
xchg
and
aas
mov
or
push
and
mov
push
rorb
jb
divb
pop
into
mov
scas
fwait
xor
int3
xchg
cmp
arpl
push
sti
mov
xchg
sbb
cmc
arpl
ret
lods
mov
jg
add
inc
add
std
mov
jae
ss
xlat
adc
lods
hlt
cmp
or
insl
loopne
dec
out
mov
xchg
mov
out
sbb
cmpl
repz
and
adc
pop
add
pop
and
lcall
cmpsb
loop
popa
sub
imul
out
movsb
mov
jns
or
mov
call
fidivs
cli
lcall
imul
imul
jmp
pushf
mov
out
int
inc
in
movzwl
or
mov
add
mov
movl
jmp
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jbe
jmp
push
push
push
pushl
call
cmpl
jne
mov
inc
mov
jmp
mov
add
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jb
jmp
push
pushl
call
cmpl
jne
mov
inc
mov
jmp
mov
add
mov
xor
mov
xor
jmp
add
cld
sbb
nop
andb
push
sub
addl
dec
orl
bound
pop
add
xchg
cmpsb
insl
cmp
dec
lods
push
arpl
jb
mov
call
loope
imul
xor
push
add
out
adc
jle
inc
test
push
cmp
jb
push
sbbl
test
mov
fwait
mov
sbb
push
rcrb
jne
ret
xor
aad
notb
sub
fisubs
lcall
fnstenv
je
dec
and
sub
jecxz
out
movzwl
cltd
int3
cmp
add
dec
mov
cmpsl
sti
rolb
fdiv
add
inc
mov
cwtl
decb
hlt
xor
lret
add
in
mov
xor
aas
lahf
fisttps
out
add
or
pop
shl
mov
add
xorb
sbb
mov
pop
push
mov
leave
or
mov
cld
dec
lea
push
xor
rcl
lods
and
dec
and
mov
and
cwtl
loope
cmc
and
test
cld
jg
gs
and
stos
push
inc
fcomps
fsubrp
cld
jns
cs
adc
in
xchg
jp
push
jle
pop
in
hlt
shrb
mov
sub
mov
ret
cmpl
cli
sbb
lods
cmp
dec
jg
jge
testl
xchg
pop
daa
dec
ja
or
jae
popa
jecxz
jne
dec
repnz
xlat
mov
mov
lret
hlt
pop
sbb
push
fs
push
sahf
leave
jbe
inc
inc
in
movsb
movsl
dec
adc
outsl
popf
xor
mov
scas
jae
mov
push
dec
push
ja
xchg
or
xchg
mull
mov
nop
fsubrs
jo
je
push
ds
mov
std
pop
pop
imul
add
jo
xor
fistl
sub
mov
sahf
sub
xchg
sbb
pop
cld
loope
and
dec
ss
sbb
dec
adc
out
lock
dec
xor
cwtl
xor
fisttps
clc
xchg
pop
iret
mov
decl
inc
repz
outsb
fimull
xchg
jl
adc
mov
fsubs
pop
arpl
pop
repnz
nop
dec
aaa
push
cmp
and
xchg
mov
add
jmp
sahf
push
xor
lea
shl
push
out
lock
leave
dec
mov
jb
or
insl
cmp
push
cmp
xchg
pop
xor
push
cmpsl
or
pop
sti
loopne
sbb
push
loop
fwait
lahf
scas
xchg
dec
leave
mov
inc
jmp
lds
gs
adc
fidivs
sbb
mov
cld
int
mov
sub
xor
lcall
or
jmp
cmpb
adc
mov
bound
jbe
arpl
out
pop
mov
adc
lret
addl
adc
and
stos
push
mov
pop
out
xchg
lcall
stos
ljmp
adc
scas
fidivrs
ret
repz
push
aas
lea
xchg
out
test
dec
movsl
xchg
add
inc
adcl
jge
imul
mov
icebp
dec
hlt
xchg
sbb
ss
adc
mov
add
stos
cltd
negb
lret
mov
pop
or
scas
gs
xchg
inc
inc
ja
mov
call
lret
jae
mov
add
adc
adc
xchg
or
jns
mov
dec
mov
std
add
ficoml
in
daa
into
outsl
sarl
cmpl
xchg
stos
insb
jbe
lea
cld
arpl
fucomp
shl
cli
aad
sbb
push
xchg
insb
mov
scas
daa
mov
adc
pop
push
sahf
imul
adc
pop
inc
gs
push
out
xchg
or
jp
cmp
pop
movsl
jp
push
lock
sbbb
loope
cmp
stos
aas
cld
bound
lret
pop
push
xor
sub
dec
add
cmpb
scas
jo
jbe
xlat
sbb
mov
pop
fisubl
addb
jecxz
nop
cmp
rclb
bound
xor
push
out
inc
inc
mov
cmpsl
push
dec
xchg
int3
out
add
inc
jb
inc
fsubrl
or
mov
lcall
aam
mov
jnp
inc
cmp
popa
pop
aad
out
xchg
dec
jmp
push
add
jp
into
xor
les
mov
dec
pop
mov
sub
filds
shrb
xor
add
mov
mov
xor
pop
or
call
adc
jno
xchg
push
movsb
sti
dec
aaa
mov
test
push
lds
mov
dec
stos
adc
sub
arpl
test
pop
inc
sub
test
jmp
fmulp
jns
and
and
jb
sub
or
leave
pop
pusha
mov
ja
push
ds
aad
dec
cmp
ret
mov
mov
es
dec
cmc
div
inc
add
in
lret
lret
fsubrs
ds
mov
xor
jnp
adc
fisttpl
andb
loope
mov
sbb
sti
fmull
fistpll
mov
lret
cwtl
jno
dec
mov
outsl
sbb
push
inc
cmp
jge
insl
andb
inc
mov
clc
scas
mov
arpl
add
adc
je
je
jmp
test
adc
aaa
ljmp
repz
cltd
stos
xor
aam
cmp
xor
ret
sub
lods
and
sbb
jp
ds
pop
push
mov
cmpsb
or
sub
out
sub
pop
mov
and
lds
out
cltd
xor
inc
jnp
test
out
cmp
or
ret
dec
cmc
out
andb
icebp
out
xor
cwtl
lret
out
lahf
pop
decb
std
fdiv
in
add
adcl
pusha
cmp
loope
lods
add
sub
adc
inc
aas
call
pop
inc
ss
sub
data16
imul
movsb
jge
arpl
push
or
call
loope
in
xchg
sub
pop
push
lock
inc
jl
es
mov
mov
sbb
push
nop
pop
aaa
rorl
sbb
cmpsb
arpl
xchg
pusha
lcall
pushf
out
jle
icebp
or
out
rol
rsm
mov
ljmp
fs
xlat
xchg
adc
andl
data16
out
sti
inc
sbb
in
cmpsl
fidivs
xor
movsb
cmp
bound
dec
and
mov
popa
fdivl
fmul
dec
fidivrs
mov
lods
mov
fwait
out
lock
add
add
sbb
sbb
icebp
iret
loop
cmp
pop
inc
cld
mov
int
mov
in
movsb
add
mov
xlat
leave
inc
pop
xchg
pusha
sub
xchg
movsl
xchg
fwait
or
stos
shll
pop
xor
push
sbb
dec
out
loope
mov
lahf
sbb
divb
popf
es
mov
in
or
cmp
movb
jge
push
in
pop
xchg
ljmp
add
mov
jnp
out
push
xor
cltd
ss
lock
cmpsl
and
push
sahf
mov
fimuls
shlb
sahf
jnp
icebp
push
dec
sti
nop
pop
mov
roll
jg
pop
mov
push
push
popf
sbb
outsb
sub
sub
cmpsb
in
xchg
mov
hlt
xor
xchg
icebp
and
sbb
xchg
and
mov
adc
cmpl
insl
mov
test
and
inc
iret
xor
mov
fdivp
sarb
pusha
rcrb
add
icebp
mov
popf
es
test
mov
cli
std
iret
fimull
xlat
fstpl
xor
jne
and
in
mov
ljmp
mov
inc
hlt
mov
adc
mulb
in
les
testl
xor
mov
arpl
push
insl
setae
stc
addb
xor
std
and
fcomps
pop
lret
repnz
aaa
call
jbe
cmp
in
mov
bound
mov
cs
les
xor
ret
or
iret
inc
shll
lea
std
data16
mov
imul
es
mov
shlb
dec
loop
sbb
cmp
xchg
pop
xchg
dec
lock
cli
fists
sar
mov
or
and
cmp
adc
addr16
push
ficoml
repz
jle
into
sub
fstpt
and
pop
sub
outsl
ret
push
xor
jecxz
lock
jle
arpl
inc
dec
lods
xchg
js
outsb
js
inc
jnp
notb
lcall
stc
mov
cmp
stc
mov
or
jbe
xchg
xorl
stos
inc
shlb
jl
pusha
jg
and
loopne
outsl
mov
imul
xchg
lods
scas
cmp
icebp
das
je
mov
mov
ret
jecxz
mov
jmp
inc
aaa
in
mov
mov
fcmovb
lock
pop
insl
dec
subb
jge
in
pop
sbb
mov
fstl
sti
repz
add
js
imul
pop
xchg
mov
aad
cmp
sbb
mov
out
data16
and
imul
mov
call
inc
ds
sbb
cmp
jns
push
and
ss
jo
sub
jno
or
mov
cltd
pop
mov
jle
ss
cmp
xor
push
out
jp
loop
mov
mov
cld
xchg
pop
or
adc
adc
loope
out
imul
lcall
fildll
inc
ret
sub
aad
push
cmp
in
inc
shll
andb
dec
inc
subb
fucomip
or
sbb
adc
fmuls
jb
sub
sub
pushl
sbb
inc
pop
movsl
test
sub
loope
xorl
outsb
inc
xchg
mov
orl
nop
push
jb
dec
cmp
sub
sarl
in
xor
and
push
xchg
pop
scas
loop
js
in
ljmp
fwait
pop
xchg
stos
jnp
sbb
stos
sub
in
inc
jae
loopne
push
mull
or
call
mov
aaa
loop
push
addr16
mov
mov
mov
mov
xlat
mov
ret
test
and
fdiv
and
mov
mov
inc
pop
and
xchg
xor
pop
and
sub
imul
ret
xorb
lcall
imul
pop
jno
aad
pop
std
mov
test
sbb
mov
add
pop
cmpsl
imull
ret
les
cs
daa
mov
cmp
add
cs
inc
jp
adc
or
dec
aaa
scas
cmp
fsubl
or
mov
push
enter
sbbb
sub
fcoml
in
or
ds
pop
push
repz
cmc
push
push
cmp
adc
pop
movb
cs
xor
mov
sub
iret
inc
pop
push
ret
hlt
call
ss
std
mov
push
aas
inc
ljmp
cmp
int
inc
mov
mov
pop
pop
adc
mov
xorl
lods
add
mov
pop
jne
or
aad
scas
out
xchg
add
cmp
test
aad
sbb
lret
ret
aas
stos
cld
sub
mov
mov
fdivrs
or
cmpb
or
notl
mov
inc
jle
cltd
test
inc
sqrtps
dec
movsl
mov
outsl
jae
jecxz
ror
dec
mov
and
sbb
int
fistl
ds
mov
mov
shll
mulb
mov
inc
test
and
stos
mov
xor
mov
cli
xchg
inc
ja
ljmp
orb
jmp
jo
cmp
cmp
cli
pop
bound
push
je
xchg
xlat
jmp
xor
sub
mov
push
jne
mov
lahf
fnstenv
ds
xor
scas
into
inc
xor
adc
fwait
dec
jne
mov
sahf
scas
loopne
jno
leave
insb
or
add
or
mov
mov
ret
negb
jo
push
dec
cvtps2pi
aad
dec
xor
mov
out
mov
adc
add
push
xchg
adc
push
adc
mov
sub
adc
add
pop
pop
popf
in
pop
repz
cli
xchg
cmp
add
stos
decb
aad
adcl
mov
adc
xor
repz
idivl
pop
cmp
xor
cmpsb
or
enter
pop
insb
mov
loopne
cmp
int3
fstl
xor
sbb
mov
sub
shll
and
in
sbb
daa
das
jne
and
std
cli
iret
nop
pop
in
and
push
out
test
xor
mov
mov
int3
xor
js
loope
pop
or
mov
dec
shr
dec
dec
jne
cmp
and
dec
sti
mov
mov
inc
dec
sbb
fsubs
inc
int
xchg
lahf
pop
mov
mov
dec
dec
bound
push
push
in
push
shl
out
xchg
add
xor
xor
jg
outsl
push
stos
scas
pop
pop
lods
jne
adcb
stos
xchg
lods
xlat
jl
jae
jnp
cmp
mov
adc
sahf
xor
jecxz
sbb
leave
daa
and
scas
out
aas
std
inc
ret
inc
aam
push
sub
pop
aad
gs
sbb
je
push
fildll
leave
jae
and
rolb
add
in
sbb
sahf
mov
jecxz
jb
cmp
xor
push
sti
xlat
test
aad
pop
scas
popa
xor
fsubr
sub
imul
inc
mov
dec
cltd
movsb
push
mov
popa
cli
cltd
loopne
popa
pop
aas
inc
repnz
or
dec
into
insb
push
push
push
xor
leave
lcall
mov
into
scas
fdivrs
lock
lea
ja
clc
decb
jmp
in
pop
mov
push
jl
mov
adc
notb
scas
mov
sbb
lahf
add
mov
dec
scas
jb
test
and
out
clc
xor
adc
jmp
outsb
push
notl
roll
ret
ds
cmc
gs
addl
jne
or
or
push
addb
sub
mov
and
in
push
cmpsl
enter
mov
mov
jo
roll
mov
test
pushw
mov
out
shlb
jecxz
mov
mov
stos
and
test
xchg
push
jb
jnp
sbbl
std
inc
outsb
movsl
cmp
lock
ret
mov
sbb
cwtl
cld
lock
sub
stos
data16
push
push
in
xchg
rcll
insl
das
push
or
pushf
pop
out
rorl
cmc
xchg
repnz
push
or
or
sbb
xor
and
ljmp
pop
jge
add
subl
inc
mov
lcall
bound
in
jmp
mov
rcll
call
or
and
aas
jns
fnstenv
mov
fcompl
add
xchg
push
stos
adc
jae
loopne
mov
popa
inc
or
insl
mov
jo
dec
gs
mov
jne
lcall
push
pop
add
add
fwait
sbb
out
push
jge
daa
mov
cmp
jl
sbb
xchg
push
ja
lods
xchg
dec
or
sti
les
and
sub
lods
or
adc
add
push
mov
and
shrb
aaa
mov
mov
daa
into
mov
aas
pop
rsm
pusha
mov
push
je
stos
mov
test
mov
push
clc
fxam
and
fmuls
or
ret
mov
and
sbb
in
movsl
test
push
sbb
popf
enter
test
repnz
pop
add
shrb
scas
hlt
movsl
and
sbb
mov
mov
fucomip
hlt
aad
lods
sbb
nop
cmp
add
stc
aas
fisttpll
mov
push
jge
cmpsl
scas
std
ficompl
pop
mov
fs
clc
or
es
in
lahf
insb
fistl
sbb
out
push
ret
ret
jg
pop
mov
testb
cmpsb
lahf
dec
mov
push
add
sbb
sbb
mov
push
add
sahf
inc
pop
in
mov
imul
and
pop
ljmp
inc
mov
push
test
aam
mov
lahf
cmp
mov
aas
add
jle
jecxz
mov
cmp
xchg
cltd
sbb
ja
pop
xor
mov
outsb
mov
mov
mov
fisubl
rcrb
sbbl
cmp
mov
push
push
shll
ds
push
test
jae
or
mov
mov
inc
lret
lea
cmpsb
add
sub
cli
mov
shll
jge
div
add
call
and
or
push
push
mov
mov
and
inc
lods
je
xor
sub
lock
rcll
push
in
in
aad
dec
mov
in
ds
test
cli
mov
imul
jae
fisubrs
pushf
dec
jbe
mov
hlt
mov
loop
inc
and
jp
ret
iret
jecxz
adc
lahf
sar
jbe
sub
and
xchg
mov
dec
pop
jne
lods
xlat
add
mov
cmpsl
mov
jmp
or
inc
pop
popf
imul
cmp
dec
xchg
mov
cmp
sub
mov
xchg
sbb
in
imulb
push
dec
rorl
test
sbb
jge
lods
jae
arpl
cmp
dec
sbb
sbb
or
popf
mov
outsl
outsb
repnz
fsts
repz
bound
pop
int3
aaa
es
ss
loopne
cltd
aaa
sbb
add
nop
jbe
cmp
xchg
int3
ljmp
and
inc
pop
jge
test
shlb
pop
mov
dec
dec
inc
inc
dec
icebp
and
or
jecxz
and
xorl
out
dec
mov
std
pop
orb
ficomps
movl
js
push
or
and
stos
jp
dec
xchg
sahf
or
shlb
and
inc
or
adc
neg
loop
sbb
pop
outsl
lret
cmp
je
movl
add
mov
inc
imul
into
jp
jns
cmpsl
ret
jno
inc
cmp
std
mov
adc
cmc
mov
inc
push
jno
xlat
js
or
outsl
mov
mov
inc
mov
mov
adc
into
cmc
push
jo
outsl
outsb
in
dec
insl
cmp
in
ret
xor
iret
push
push
fs
adc
mov
cmp
sub
sbb
mov
xchg
mov
dec
fdivrl
mov
dec
and
inc
aas
adcl
cwtl
cli
fsubr
push
push
cmp
int
leave
jo
pop
movsb
xchg
mov
jmp
pop
xor
adc
movb
imul
data16
jne
adc
add
mov
pop
mov
test
jo
movsl
dec
dec
push
sti
shlb
inc
pop
adcb
xor
ljmp
jns
push
xlat
pushf
repnz
ret
or
cmp
push
fucom
icebp
scas
dec
mov
sbb
pop
xchg
loopne
xchg
xlat
sbb
inc
addr16
ljmp
enter
out
in
out
adc
repz
and
mov
mov
jo
inc
movsb
push
pushf
mov
test
loop
cmovle
sbb
dec
icebp
mov
gs
cmc
pop
fistpl
inc
jmp
pusha
ljmp
adc
push
cmp
cmp
pop
test
les
add
jns
mov
cmc
shr
add
xor
into
pop
xorl
lock
scas
mov
mov
enter
xchg
cmpb
dec
adc
bound
leave
incl
mov
cs
jl
es
xchg
inc
out
shll
mov
push
mov
dec
lock
cmp
inc
movsb
popf
sub
mov
mov
inc
inc
les
add
cmp
cmpsb
xchg
sbb
scas
aas
pop
sbb
mov
push
jp
outsl
jmp
mov
xchg
xor
and
mov
mov
mov
or
repz
xor
push
cltd
imul
sub
push
scas
hlt
test
cmpsb
cmc
jno
cli
fwait
push
cs
jbe
inc
xor
jg
push
jns
mov
insl
rcll
ret
and
aad
add
mov
cmp
js
and
sub
jae
in
push
ljmp
mov
cld
adc
and
jp
adc
xchg
enter
dec
icebp
mov
jo
into
sub
enter
add
mov
and
mov
lret
inc
test
sbb
scas
loopne
pushf
mov
mov
dec
xlat
mov
xchg
mov
inc
sub
push
iret
movsl
pop
lods
mov
outsb
fsubl
addb
test
gs
add
hlt
insb
inc
pop
rcll
orb
pop
inc
mov
cwtl
adc
shlb
push
xor
cmpsl
pop
repz
or
pop
and
stos
ret
xchg
loope
pusha
inc
fldenv
shlb
cltd
sub
movsl
or
int
jns
sbb
xchg
insl
pop
lds
pop
call
cld
pop
stc
dec
incb
aam
gs
clc
jb
mov
inc
cmc
push
pop
dec
scas
cmp
cmpsb
sti
out
pop
jl
mov
adc
iret
dec
into
insl
dec
movsl
pop
scas
push
dec
icebp
test
pop
adc
inc
and
lahf
cltd
pop
pop
cmp
outsb
imul
pop
sub
pop
mov
loop
jb
mov
adc
sbb
mov
sub
inc
add
movsb
fs
push
lret
push
mov
aam
push
dec
adc
dec
into
xchg
add
sub
mov
mov
lcall
xor
mov
inc
sbb
pop
and
jg
divl
pop
mov
movsl
cld
mov
lock
test
add
mov
pop
cs
sub
aaa
sub
pop
mov
dec
xchg
mov
dec
pop
sbb
mov
test
adc
pop
cmp
dec
ds
xor
cmp
dec
sub
mov
ret
cmp
leave
popa
push
sub
ficoml
ret
inc
mov
push
lret
xchg
mov
shll
ja
fnstenv
add
pushf
sub
mov
sub
mov
dec
xchg
in
es
xchg
sbb
fsub
lods
jmp
data16
je
xor
cld
mov
xchg
loopne
fs
and
aam
lret
mov
test
dec
lahf
mov
lods
cli
push
cs
pusha
arpl
je
mov
mov
dec
jmp
inc
adc
insl
lock
xor
out
leave
push
adc
fs
outsb
fadd
adc
sub
lret
mov
dec
repz
mov
in
cmpb
scas
push
loope
addr16
dec
sti
cmpl
xchg
or
fwait
test
fwait
sbb
mov
mov
cli
loop
jnp
and
inc
xchg
out
push
xlat
mov
xchg
dec
std
ret
xchg
or
fldenv
and
rcrb
popa
jl
add
pop
push
mov
dec
sbb
sbbl
push
idivl
sbb
ds
jo,pt
mov
mov
and
movsl
add
or
mov
mov
or
adc
lret
adc
ss
push
in
inc
xor
pop
mov
fists
mov
xor
stos
fpatan
enter
outsl
cmp
mov
push
mov
jg
cmpsb
or
stc
cmp
das
ret
nop
and
arpl
sub
add
push
xchg
mov
mov
stc
push
sub
bound
fcmovne
iret
adc
jns
push
out
sahf
test
cmp
movsb
inc
xor
inc
xchg
push
fnstenv
fcmovb
push
fwait
int3
imul
cwtl
leave
or
pop
je
pushf
add
mov
jg
sbb
mov
scas
xchg
pop
ret
stos
leave
aam
idiv
outsb
mov
dec
fisubrl
add
push
push
shlb
mov
cmp
rcrb
adc
push
mov
aaa
aaa
mov
or
in
inc
sub
jg
lods
cmp
mov
dec
inc
sbb
scas
push
mov
cld
adc
cwtl
clc
mov
adc
adc
ds
dec
int3
rcrl
into
xchg
mov
aad
adc
lock
push
rorb
push
cmpsb
adc
jmp
fcomp
adc
push
cmp
loop
mov
shlb
cmp
sbb
adc
flds
jns
icebp
sbb
stos
jmp
lret
push
cmc
dec
in
mov
adc
sub
cmp
mov
push
inc
adc
adc
popf
pop
jg
jecxz
fimull
repz
sbb
jno
and
xchg
outsb
cld
cltd
cmp
push
sub
mov
test
inc
fcompl
add
jl
lods
mov
mov
inc
or
arpl
xchg
fistpll
ljmp
add
mov
icebp
bound
push
mov
fstpl
adc
sbb
jecxz
shlb
call
sbb
test
out
sahf
xchg
xor
into
inc
adc
cli
in
in
aad
add
lahf
lret
imul
mov
out
iret
push
push
adcl
mov
sub
rorl
push
pop
adc
mov
aad
out
or
or
sub
rorl
ss
ret
rcrl
insl
push
xchg
jl
dec
aaa
pop
jae
repnz
cmpsb
xor
rcl
es
fisttpl
push
add
push
cmc
jmp
mov
jl
mov
or
imul
popf
pop
mov
pop
and
xchg
jmp
push
inc
dec
mov
xchg
int
xor
push
bound
sarl
aaa
adc
mov
pop
dec
ja
mov
xrelease
mov
xor
fiadds
leave
sub
inc
movsb
sub
testb
pop
data16
add
loope
outsl
and
daa
push
push
xchg
mov
leave
sahf
movntq
std
out
pop
cmp
fadds
pop
rcrb
inc
pop
xor
push
das
sub
dec
pop
mov
mov
adc
movsb
jns
adc
push
sti
sbb
mov
xor
push
or
ds
xchg
in
add
push
jnp
push
stos
dec
std
jmp
cmpsb
jle
push
sub
shrb
out
cmpsl
int3
cltd
fs
sub
mov
jecxz
mov
sub
in
lret
xchg
sbb
adc
inc
ljmp
add
imul
and
in
dec
jne
xchg
pop
pop
mov
and
js
sbb
sbb
pop
test
fsubrl
inc
push
push
lahf
rclb
lods
imul
mov
in
dec
adc
addr16
push
mov
frstor
scas
and
imul
inc
inc
mov
repz
mov
push
sarl
pop
in
inc
jnp
cmpsb
mov
mov
dec
leave
shlb
repz
hlt
les
repz
mov
pop
repz
inc
adc
and
cmpsb
fsubs
arpl
lods
test
add
xchg
shll
xor
fstl
and
mov
xchg
ds
aam
ss
push
mov
xor
pop
cmpsl
ret
lret
jno
xchg
loop
cmp
and
scas
imul
mov
inc
outsl
mulb
loope
lods
xor
mov
cmpsb
mov
gs
jmp
add
adc
mov
adc
imull
decl
subb
lret
jmp
lret
xorl
xor
sbb
in
loope
push
and
cmpsb
shrl
jne
lahf
xchg
cli
mov
xor
shr
mov
into
ret
pop
mov
sbb
sub
popa
rcll
dec
mov
dec
data16
xor
adc
cmpsb
cli
dec
aad
xor
or
push
in
je
pop
mov
and
xchg
jmp
call
jnp
mov
xchg
icebp
xchg
repz
repnz
lcall
mov
addr16
cmc
std
aad
xchg
pop
repz
xchg
cmpsl
movsb
call
push
jge
pop
cmp
mov
push
dec
pmuludq
add
xor
scas
into
shlb
cmpsb
mov
popf
xor
push
daa
jge
dec
mulb
jbe
cmpsl
inc
mov
inc
mov
dec
ror
cmp
jb
xor
lret
lahf
jns
ret
fldt
cmp
ja
rorl
lds
scas
inc
push
jns
shrb
push
mov
xor
cmp
addr16
je
dec
ficompl
gs
mov
scas
cmpsb
xchg
and
test
jecxz
inc
cmpsl
movsl
add
inc
xchg
xchg
lods
ds
stos
mov
ret
sbb
dec
push
aaa
out
or
mov
clc
dec
mov
mov
imul
xchg
jb
pop
mov
inc
jo
jb
fldenv
stos
pop
test
in
rcrl
fmul
push
adc
jbe
adc
xchg
add
lods
cs
jnp
mov
lret
imul
outsb
cld
push
js
pop
sahf
aaa
mov
ds
and
xchg
push
push
jg
cmp
sbb
mov
call
hlt
shl
es
inc
pop
jno
add
bound
lret
dec
mov
dec
sbb
das
sbb
sbb
scas
mov
pop
fcoml
stos
lds
jae
xor
fcom
cwtl
sub
jbe
inc
cmp
nop
fs
add
enter
pop
test
clc
mov
inc
scas
sub
repz
push
mov
push
jl
mov
sti
cltd
aaa
int
icebp
out
sti
sub
scas
outsl
add
addr16
insl
jo
ret
cmpsb
repnz
mov
addb
and
out
nop
out
jno
fwait
std
cmpsb
rclb
jno
mov
pushf
pop
add
jnp
or
fs
and
lahf
dec
clc
jno
sbb
pop
inc
scas
rclb
lds
pop
sbb
fsubrs
je
repnz
stos
fs
fs
test
xor
mov
lret
add
xchg
sub
cmpl
insl
sahf
inc
sti
jmp
mov
add
addl
add
jae
mov
mov
cs
ret
loop
xchg
add
cmp
je
jmp
mov
mov
xor
add
cmp
mov
je
mov
xor
add
cmp
je
lea
push
pushl
pushl
call
mov
mov
xor
add
cmp
je
mov
movzwl
mov
mov
mov
jmp
mov
xor
lea
jmp
mov
xor
jmp
add
mov
hlt
aas
push
sbb
pop
xchg
rolb
andl
add
xlat
dec
and
push
popa
movsb
pop
add
add
outsl
scas
outsb
push
icebp
dec
cltd
inc
jbe
and
iret
pop
xor
subl
jno
push
add
mov
push
sbb
loope
mov
xchg
cmp
repz
mov
mov
cli
popa
fwait
rcr
adcl
and
jb
rcll
outsl
push
subl
or
aad
popa
xchg
fwait
rcr
movsl
xchg
ja
sbb
sbb
pop
jbe
add
in
jl
pop
push
lock
xchg
stc
icebp
call
ret
imulb
dec
std
dec
jg
fistl
dec
fistpl
adcb
push
xlat
lret
pushf
outsb
inc
fmuls
aam
add
mov
pop
std
push
dec
jl
pop
scas
pushf
daa
xchg
ss
inc
outsb
push
test
ss
pop
pusha
mov
sub
enter
adc
jbe
or
jmp
loop
mov
xchg
int3
aas
xor
jge
mov
pushf
jecxz
test
jnp
cmpsl
in
lods
lea
and
ret
les
je
cltd
sti
jle
push
nop
mov
mov
jb,pt
mov
xchg
lea
adc
nop
sahf
dec
xchg
add
int
jecxz
das
xchg
inc
cltd
push
add
or
xchg
addr16
jge
add
mov
fs
xchg
xor
scas
ss
popa
cmp
sti
push
repnz
ljmp
adc
loopne
jg
sub
test
ja
push
cmpsl
dec
std
inc
push
insb
dec
cmpsl
xor
enter
fisubl
clc
int3
add
test
jmp
jecxz
jo
popa
nop
sbb
pop
jnp
je
outsl
jno
flds
repnz
inc
cmc
aad
push
dec
pop
adc
inc
fimull
pop
sbb
into
cmp
push
jb
cmp
xor
mov
insb
jl
scas
popf
lods
xor
jp
sarb
or
jmp
loope
push
xchg
repnz
inc
pop
enter
ret
cmp
jne
sahf
or
rcl
push
dec
fdivl
or
clc
sub
dec
add
cmp
dec
mov
pop
scas
jge
fdivs
in
pop
in
inc
jle
inc
inc
into
and
mov
std
dec
jbe
xchg
cmp
ss
adc
xorb
addr16
dec
jp
arpl
cmpsb
sahf
pop
outsb
rcr
stos
pop
out
xchg
es
divps
cwtl
popf
push
addl
jle
call
jle
pop
pop
or
stos
sub
sub
mov
mov
dec
sbb
adc
xchg
jge
push
hlt
mov
mov
orb
leave
dec
stos
adc
add
add
mov
repnz
inc
inc
mov
mov
rorl
xchg
sarb
arpl
pusha
add
fdivl
lods
enter
or
repnz
das
mov
cli
sub
mov
xor
cmp
pop
addr16
inc
and
xchg
xchg
mov
mov
data16
iret
add
or
arpl
hlt
mov
jle
sarb
mov
xor
add
pop
aam
sub
fstl
adc
std
cmp
cmp
push
cmpsb
mov
push
jae
mov
xor
push
rclb
xlat
adc
popf
pop
jge
and
pop
repz
push
xchg
daa
dec
inc
sahf
mov
and
popa
xchg
xorb
xchg
sti
inc
mov
xchg
int3
enter
mov
and
mov
jae
test
enter
enter
jbe
repz
popa
stc
mov
cmp
cmp
push
xchg
lret
cmp
pop
ja
push
adc
jmp
cmp
in
xor
jns
lea
jb
cmpb
inc
pop
sub
sub
mov
pushf
pop
mov
es
inc
ds
and
mov
shl
inc
out
xchg
cmpsb
test
lret
inc
sub
jnp
sub
lds
cld
push
lods
mov
xor
popa
mov
pop
pushf
mov
cmp
hlt
imul
hlt
scas
push
ja
loope
aad
les
xor
dec
enter
cmp
jae
jmp
popa
insl
mov
movsl
and
iret
xor
jp
aaa
ret
push
aam
dec
fmul
jl
cmp
fs
ljmp
sub
inc
xchg
mov
add
cmpl
dec
je
push
aas
adc
lret
insl
mov
cmp
lods
xor
xor
fisttpll
out
cmp
or
adc
je
cmp
sub
add
xor
or
xchg
or
push
xchg
mov
sub
inc
je
pop
or
jmp
cli
or
mov
xor
inc
push
pop
orl
test
out
or
jge
xchg
mov
lcall
mov
imul
jmp
xchg
push
xor
add
jge
sar
loope
je
xlat
inc
mov
and
je
ss
in
sub
das
test
lret
sbb
clc
out
mov
movsb
gs
clc
lds
add
push
out
mov
and
cmpsb
xor
lods
cmp
pop
stos
jp
popf
mov
and
adc
arpl
xlat
xlat
fldenv
mov
repz
push
adc
test
std
xchg
call
bound
push
and
pop
jg
and
rcr
mov
loope
jmp
in
stos
pop
vmread
jnp
xor
mov
and
nop
int3
addl
adc
or
jns
jg
fwait
adc
inc
push
add
push
cmp
add
int
adc
mov
mov
pushf
in
imul
mov
pop
pusha
or
adc
sbbl
das
das
cli
fcoms
pop
scas
push
je
xchg
fisubrl
mov
pop
cmp
popf
nop
icebp
repnz
pop
pop
cmp
loop
sub
rorb
cmp
int3
xchg
push
ds
test
pop
imul
aam
in
mov
pop
jmp
xor
adc
mov
int
and
rcll
cmp
cmc
orb
jle
cld
add
adc
mov
pop
in
mov
or
imul
les
mov
shlb
cmp
inc
out
inc
dec
lock
inc
fisttpll
scas
cli
ss
loopne
xchg
dec
adc
xor
fsubp
xor
pop
push
or
xchg
push
sbb
cmp
xor
xor
movsb
xchg
aas
das
jnp
loop
mov
sbb
and
loop
jae
push
xchg
scas
push
es
je
mov
jle
dec
or
scas
ss
jecxz
sub
test
mov
cltd
cmp
dec
xchg
pop
adc
loope
jbe
ret
jmp
adc
lret
jp
and
stos
ret
or
adc
and
mov
xor
lret
sar
jae
pop
add
add
loop
mov
pop
sbb
cmp
cwtl
mov
sbb
cmpsb
push
add
subl
cmc
adc
imul
ficomps
mov
pop
push
mulb
enter
inc
insl
jno
test
dec
push
mov
lods
sub
mov
mov
jg
ds
test
pop
jl
addr16
mov
inc
scas
push
cmpsb
rorl
push
mov
xlat
scas
test
sub
dec
jecxz
push
cmp
jae
lcall
cli
xor
push
inc
adc
cli
popf
shrl
or
dec
popf
jecxz
scas
lret
daa
lods
or
push
ss
inc
stos
insb
fiadds
mov
fs
enter
and
or
cli
fmull
sub
cmpsb
fstpl
into
das
mov
jp
ss
cmp
pop
js
bound
pop
jg
in
icebp
pop
mov
sbb
or
inc
shl
rol
or
mov
sbb
sub
jbe
add
movsl
adc
ret
ja
adc
jmp
cmp
inc
leave
cmc
popf
je
mov
pop
dec
sbb
mov
jne
in
int3
jg
jge
or
addr16
and
insb
aas
movb
inc
jno
out
pop
xchg
addb
mov
fisttpl
jbe
pop
sub
and
mov
jno
push
and
fisttps
pop
fistpl
sub
sbb
outsb
es
mov
mov
sub
push
and
adc
insl
xor
pop
push
mov
rcrl
xor
rclb
data16
adc
test
mov
cmpsl
jp
adc
xchg
testb
dec
sub
push
pusha
icebp
and
mov
rorb
fs
mov
and
or
dec
mov
mov
adc
cmc
fucomp
test
sub
bound
out
in
icebp
lods
in
fisttpl
jne
in
loope
pusha
mov
sub
sub
daa
imul
dec
inc
es
lds
xor
dec
stos
cmc
loopne
stos
imulb
mov
or
fisubrl
pop
push
test
lcall
pop
mov
sbb
jnp
inc
lods
mov
push
loopne
jge,pn
bound
push
jb
sbb
mov
mov
adc
out
fldl
insb
add
push
cmc
sub
inc
sub
inc
dec
mov
jnp
les
sub
out
pop
pop
cmp
sbb
and
fstpl
jg
mov
int
repz
cmc
fidivrl
mov
jne
inc
push
push
es
into
mov
inc
jne
outsb
adc
cli
leave
push
cmpsl
mov
pop
mov
jo
clc
ljmp
shll
cmp
jl
fwait
push
call
jb
lret
or
mov
int
sldt
inc
subl
push
daa
subl
jbe
push
pmaddwd
xchg
mov
push
shrl
sbb
nop
jmp
pop
mov
fmull
loop
adc
ja
data16
shll
sbb
push
and
stos
or
cmp
inc
icebp
cmp
rcrl
repnz
icebp
lods
pop
inc
cs
push
pop
cmpsb
lea
adc
pop
mov
imull
popf
mov
out
mov
mov
and
sbb
insl
mov
xchg
mov
bound
ret
stos
fsubrl
dec
dec
stos
xchg
cmp
sbb
in
leave
cmp
add
test
ret
or
rcrb
adc
pop
jne
insl
mov
or
pop
inc
mov
lods
fwait
lret
sub
adc
ja
bound
scas
adc
es
scas
jb
xlat
xchg
fnsave
mov
push
mov
pop
xchg
jnp
rcll
cmp
add
mov
gs
dec
push
in
ficoms
loopne
test
nop
daa
adc
mov
call
push
mov
mov
arpl
mov
mov
adc
sub
sub
nop
xchg
movsb
sub
mov
sbb
xor
insl
stos
pop
adc
pop
inc
or
cmpsb
push
fdivp
adc
lahf
das
add
cld
fidivrs
sub
mov
xlat
gs
les
sbb
jg
loopne
and
mulb
cld
adc
daa
repnz
sub
into
test
jb
stos
xchg
sbb
enter
cmpsl
add
sbb
fwait
push
pop
mov
clc
jg
pop
mov
inc
xchg
pusha
dec
xchg
lds
aas
js
pushf
mov
pop
gs
fcoms
jmp
xorl
dec
ret
adc
mov
mov
repz
outsb
xor
aas
fdivrs
stos
das
leave
mov
or
mov
cld
mov
dec
inc
lods
mov
shlb
outsb
icebp
pop
push
cmpsl
push
mov
out
roll
or
or
cmp
aaa
insb
push
sub
xchg
fstpl
ret
push
loope
sbb
daa
int
lods
cmpsl
das
pop
sub
aad
inc
cmpsl
das
sub
data16
push
inc
ss
les
ja
mov
sahf
imul
mov
arpl
into
incb
rcrl
push
cmp
in
or
push
mov
repz
push
outsb
push
add
dec
xor
mov
roll
cld
dec
cmp
push
mov
test
test
cmp
aas
fcompl
cmp
xchg
inc
xchg
sub
mov
pusha
bound
test
ret
movsb
sbb
mov
lods
mov
pop
movsl
pop
add
insb
gs
ret
mov
dec
inc
pop
loop
out
add
stos
inc
mov
insb
ss
xchg
or
adc
out
mov
repz
and
andl
push
dec
nop
xchg
xlat
sar
loope
jne
inc
fimull
hlt
or
je
xchg
add
jns
jne
pop
cld
mov
cmp
add
les
mov
xor
pop
and
xchg
test
sysexit
cmp
insl
xchg
xlat
mov
pop
push
xchg
add
inc
es
mov
push
xchg
loope
fdivrs
mulb
dec
loopne
and
xchg
sub
ss
jle
push
ja
mov
push
xorb
inc
stc
jle
enter
cltd
xor
stos
and
pop
js
mov
lahf
loopne
mov
out
adc
addl
mov
outsl
inc
aas
cmp
mov
dec
aas
cmp
xlat
jae
adc
pop
add
inc
idivl
xchg
stc
push
stos
pop
mov
jns
lret
pop
jp
mov
ret
jmp
cs
arpl
in
push
sbb
out
sub
or
push
mov
mov
dec
adc
lock
lcall
movsb
pop
dec
loop
xchg
std
dec
insl
mov
test
in
jnp
sbb
or
shr
lcall
lods
cli
lsl
mov
cmpsb
dec
mov
js
pop
xor
sbb
xor
idivb
test
sub
ss
int
cwtl
adc
sbb
ljmp
jmp
out
or
icebp
ret
movsb
lret
mov
in
add
ret
xor
push
adc
inc
ret
out
stos
daa
sub
jbe
push
adc
dec
xchg
ljmp
or
sbb
scas
stos
fstps
pushf
jbe
addl
ja
jno
and
cmpsl
mov
sbb
cmp
dec
adc
mov
jl
pushf
mov
test
or
enter
test
icebp
xchg
std
mov
xchg
add
cs
inc
jg
lds
push
sub
mov
lods
jae
call
gs
xchg
cmovge
mov
insl
pop
fdivs
lds
stc
fstpl
test
lods
fnstenv
jnp
pop
test
cmp
pop
sahf
mov
stc
push
jg
shlb
mov
stc
xorb
mov
xchg
int
mov
mov
aas
shrb
cmp
dec
pop
jmp
cmp
cmpsl
mov
inc
push
push
add
push
mov
cmp
mov
repz
xchg
incl
push
adc
out
clc
nop
pop
or
data16
jbe
mov
push
movsl
ljmp
sbb
inc
aas
xor
mov
outsl
or
sub
imul
lahf
inc
xchg
ffreep
orl
loopne
nop
rclb
in
int3
sub
fdivr
or
jo
sub
xchg
out
hlt
and
push
mov
mov
inc
inc
ret
inc
fucomi
pop
std
dec
pop
into
movsb
rep
lret
pushf
daa
push
int3
xchg
mov
sbb
jo
jnp
xorb
cmc
push
mov
pop
cmpsb
cs
mov
mov
sub
sahf
cs
xchg
inc
out
add
aaa
jne
mov
mov
pop
xor
outsb
add
jecxz
pusha
or
ret
push
outsl
sbb
mov
pop
imul
out
add
lret
rcrl
out
mov
into
scas
inc
ljmp
inc
cmc
lret
or
sub
pop
mov
lret
inc
out
insb
gs
es
xchg
rorb
or
cmp
pop
mov
aaa
hlt
mov
hlt
cmp
pop
push
popa
dec
push
and
pop
stos
mov
test
lock
pop
mov
cmc
mov
into
popf
out
notl
push
push
add
xchg
adc
psubw
int3
push
cltd
xor
mov
pop
mov
jp
add
scas
adc
inc
or
inc
xor
int
lds
fnsave
mov
fidivl
in
mov
adc
or
sub
aam
mov
mov
cmpsb
xchg
sahf
xor
repnz
sbb
inc
mov
sbb
mov
fsubrs
insl
ret
cmc
andb
push
loope
push
push
fwait
iret
pop
mov
jne
and
and
insl
sub
insl
in
cltd
dec
jb
add
push
cwtl
xor
gs
popw
mov
fadds
stos
lret
cmc
in
sbb
repnz
sbb
negl
jg
out
movl
scas
jbe
sub
xchg
pop
sbb
adc
cli
lahf
lret
ret
jae
insl
popf
add
das
xor
mov
mov
or
out
inc
pusha
aam
aad
out
in
pop
xor
jae
mov
dec
popf
mov
cmc
andb
add
movb
cwtl
sub
dec
jae
and
jle
mov
fisubs
dec
call
outsl
arpl
inc
sbb
push
pand
outsb
push
repz
into
aam
insl
add
jns
mov
jo
insl
xchg
imul
jns
lock
push
xor
jnp
sbb
xlat
mov
add
hlt
and
iret
sub
pushf
sbb
cmp
ss
add
arpl
add
xor
jl
adc
arpl
mov
out
lea
jl
xchg
jle
movsb
mov
push
call
in
xor
sarl
push
outsl
ja
pop
or
inc
mov
dec
and
add
pop
pop
lret
enter
dec
enter
fstl
push
mov
pop
inc
adc
es
or
xor
push
pusha
movsl
orb
in
filds
lahf
add
push
sbb
or
lret
sub
addb
push
je
add
and
jb
cmp
inc
sti
add
or
les
push
stos
iret
lock
mov
sbb
mov
push
js
stos
inc
in
fwait
push
xor
dec
in
push
jmp
fcmovnbe
std
rcrb
scas
push
loop
cmpsl
xor
out
mov
loopne
lods
pop
cs
push
stc
repnz
mov
xchg
mov
dec
mov
pop
movsl
js
movups
jbe
sub
cld
mov
ficoms
jp
inc
lock
fcmovu
mov
dec
xor
dec
and
mov
iret
xorb
mov
dec
iret
fidivrs
inc
lods
hlt
aaa
bound
pop
in
and
fwait
stos
into
outsl
xor
pop
pop
aad
fmul
mov
es
cld
push
pusha
sbb
mov
xor
psubw
push
inc
add
push
cmp
lods
jmp
jmp
mov
pop
divl
icebp
stos
pop
mov
xor
cmp
sub
mov
pop
fstps
jp
or
inc
xor
gs
and
int
subb
and
and
nop
or
jp
sbb
aaa
mov
addr16
insb
jl
dec
inc
jge
divb
movsl
pop
xchg
lods
mov
int
popf
xchg
movsb
scas
sbb
fwait
repz
jp
repnz
mov
pushf
lock
lock
mov
testb
leave
clc
inc
negb
ss
testl
push
call
divl
int3
xchg
mov
cmpsb
push
cmpsb
fists
pop
xor
dec
std
dec
mov
fdivrl
addl
daa
lcall
lods
mov
sub
sub
xor
or
or
xlat
testl
shrl
fsubl
lea
dec
push
pop
mov
test
in
in
jnp
arpl
dec
imul
xchg
mov
insb
mov
jae
inc
mov
adc
pop
cld
ret
fwait
lret
mov
lahf
int
repz
add
and
xor
aaa
sub
and
out
xchg
ror
addr16
out
mov
inc
pushf
sub
mov
daa
ret
pop
enter
and
mov
mov
adc
stos
mov
cmpl
imull
push
pushf
popf
imul
mov
sub
out
adc
inc
jl
adc
add
xor
inc
pop
ret
std
andb
test
leave
inc
lret
imul
or
popf
push
dec
cmp
je
push
push
fwait
scas
cmp
outsb
push
lea
lock
pop
repnz
mov
cs
andl
fildl
decb
cmp
or
repz
jge
mov
jp
das
in
jnp
mov
in
and
add
sbb
add
pop
rcr
xchg
cmpsl
cmc
hlt
int
add
cmp
inc
loop
arpl
faddl
fs
outsl
lods
rorl
jmp
sbb
sub
rsqrtps
and
lret
addr16
outsb
xor
ret
outsb
xor
mov
ss
adc
add
scas
xchg
gs
sub
jb
push
jp
xchg
mov
cwtl
sbb
add
cmpsb
lock
inc
cmc
out
jle
mov
adc
dec
loop
dec
lret
push
sub
jecxz
imul
sub
push
dec
xor
or
sub
and
cmp
add
jae
push
ds
call
cmp
imulb
fidivrl
stc
jecxz
pop
jno
and
mov
loope
jbe
push
push
shlb
shll
xor
push
mov
repz
add
sub
fadd
icebp
outsl
mov
in
cmp
pusha
mov
leave
mov
cmp
mov
pop
dec
xor
jge
loope
jne
stos
jp
sub
pop
jnp
and
pop
ds
xchg
popf
push
fnstsw
sub
and
mov
mov
dec
stc
sarl
push
ja
jge
pop
mov
stos
jle
dec
mov
or
mov
ja
loope
movsb
cmp
fwait
arpl
sub
mov
dec
adc
inc
push
sbb
aas
pop
stos
ds
rcl
cmpsb
loopne
aam
mov
sbb
roll
pop
lea
hlt
push
pop
test
mov
imul
jae
sub
loope
adc
pop
pcmpgtd
ljmp
sti
jge
adc
cli
ljmp
cmc
or
dec
push
and
or
mov
dec
mov
dec
xchg
mov
outsb
lods
mov
pop
mov
jne
push
mov
inc
enter
mov
std
pushf
mov
dec
stos
or
or
cli
aas
push
test
popf
push
xchg
cmp
fldl
dec
scas
pop
jecxz
pop
sub
stos
into
in
test
sub
push
dec
and
fcomps
inc
mov
rcrb
pop
lahf
das
stos
es
lahf
lahf
mov
jl
push
pop
xor
pop
call
pushf
jmp
jae
fldt
add
dec
data16
notb
jnp
cmp
fisubrs
xchg
nop
idivb
loopne
je
xor
cmp
insl
pop
in
fs
sub
nop
test
xor
cmp
pop
dec
ja
push
sub
dec
jns
popa
xchg
roll
out
or
ret
inc
lret
push
mov
fcmovne
jecxz
js
shll
push
mov
mov
lcall
add
xlat
jmp
or
mov
push
jp
sarl
mov
cmpsb
lock
jnp
sub
push
jle
jno
maxps
pop
and
push
cli
mov
cmp
insl
add
or
lods
loop
cld
fstpt
mov
enter
roll
lods
stos
into
cs
inc
fidivl
sbb
and
sub
out
inc
and
or
dec
es
lods
hlt
and
filds
inc
jnp
loop
out
and
das
mov
inc
xchg
out
rcrb
repz
add
push
lret
notb
testl
fs
lods
mov
and
push
setb
push
fisubrs
pushf
pop
stos
dec
mov
out
mov
push
mov
mov
pop
nop
cli
xchg
pop
dec
out
out
sbb
popa
fstps
sbb
and
aad
frstor
xchg
xor
iret
fsubp
or
scas
test
out
jmp
outsb
std
mov
lret
enter
mov
or
scas
int
nop
cmp
xchg
sbb
sbb
fistpll
mov
cmp
add
mov
arpl
mov
outsl
loop
pushf
cmp
and
lea
scas
mov
jg
inc
dec
xchg
inc
and
sbb
jmp
js
test
repz
and
xor
cmp
mov
add
notb
sub
xor
int
pop
stos
jge
jge
lds
or
imulb
aam
jp
pop
out
sub
bound
test
mov
inc
adc
or
mov
xchg
xor
push
add
xchg
adc
rolb
mov
insb
push
out
add
sahf
aaa
scas
pop
jg
std
loopne
fcomip
xor
into
loopne
or
xor
out
inc
popa
wbinvd
add
inc
dec
xchg
bound
into
pop
jns
imul
les
mov
xchg
movsl
or
adc
shll
mov
push
shlb
cmp
aad
ljmp
xor
dec
jp
sar
pop
test
lahf
enter
pop
leave
into
rcr
push
and
xchg
lea
jmp
out
push
stc
add
jle
jp
cmp
mov
xor
loopne
cs
es
faddl
cmc
fiaddl
imull
xlat
aad
add
inc
jno
test
lods
pop
pop
stos
xlat
mov
add
shlb
mov
sub
mov
xchg
adc
xor
dec
lods
mov
addr16
lret
mov
or
mov
xchg
imul
test
or
sarl
xchg
push
stos
adc
arpl
xor
jmp
inc
sub
add
mov
adc
fs
jo
inc
jp
cmpsl
dec
scas
mov
adc
test
test
sbb
inc
ds
jb
andb
or
add
shlb
add
enter
mov
icebp
lahf
cmp
or
inc
xor
insb
dec
imul
dec
jo
mov
mov
out
scas
sbb
lret
or
push
xorl
mov
fisubrs
ljmp
or
fs
cmp
cmc
lods
xor
enter
add
cmc
mov
sar
out
arpl
jnp
pop
mov
repz
popl
mov
rol
call
push
loopne
cmp
sub
jl
add
xor
into
lahf
lretw
and
add
adcl
cmp
dec
add
sub
push
lds
mov
mov
sbb
push
sub
sub
into
push
and
cwtl
sbb
cmpsb
lock
insb
pop
imul
lea
xchg
inc
fucomi
fstpt
add
cmc
xor
mov
lock
loopne
dec
add
js
cmc
rcll
aad
loop
fldl
fdivp
iret
iret
push
aas
fcmovb
dec
test
push
cmp
aas
push
enter
jns
pop
data16
clc
sti
xchg
aad
push
cmp
gs
in
in
push
lds
in
jmp
mov
call
jno
sub
rorl
daa
mov
loope
add
push
ss
xor
xchg
jns
push
hlt
dec
push
scas
ljmp
in
lahf
bound
jo
xor
adc
movsb
mov
sub
out
sub
push
and
mov
add
pop
push
mov
push
mov
loopne
enter
and
loope
ret
pop
jae
sub
pop
sbb
jp
loopne
out
inc
cmp
and
push
ljmp
mov
pop
xchg
orl
lret
ficoml
enter
xor
xchg
and
call
mov
xchg
xchg
in
out
in
sbb
scas
std
push
or
fistl
ljmp
push
cmpsb
enter
test
lret
sbb
adc
gs
hlt
pop
scas
mov
popa
daa
or
xchg
out
or
push
mov
push
xchg
and
stos
jo
test
cmp
inc
orb
mov
shl
add
ss
cwtl
cmc
call
aaa
stos
jb
es
or
sbb
lds
inc
sub
test
adc
push
pop
or
inc
xchg
fnstcw
lds
jbe
cltd
aaa
push
in
lods
sbb
call
or
mov
push
shl
into
outsl
call
pop
sbb
adc
push
movsl
gs
sbb
push
fisttps
pop
gs
cwtl
dec
and
aam
push
stos
jae
mov
mov
out
into
imul
xchg
xchg
sahf
mov
inc
sub
bound
icebp
je
adcl
movsb
lcall
sbb
jge
popf
test
xchg
adc
cli
mov
shlb
mov
stos
add
dec
xor
cmp
pop
mov
inc
ljmp
push
pop
mov
shll
lcall
sub
hlt
push
lock
int
adc
sbb
stos
xor
push
pusha
test
std
aaa
inc
mov
pop
mov
dec
pop
outsb
pop
mov
jbe
je
push
mov
push
test
ss
mov
ret
insb
in
sub
push
push
jg
jp
dec
xchg
push
sub
loopnew
inc
sub
cmp
sbb
sub
mull
adc
sub
mov
outsl
sub
mov
adc
jne
xor
inc
push
ljmp
jge
sarb
jp
test
pop
pop
lcall
mov
xchg
loopne
icebp
add
out
nop
sahf
lahf
cltd
call
fcmovu
add
ss
ja
inc
ror
xor
push
icebp
mov
lret
push
ret
flds
jmp
add
dec
xor
sti
adc
aam
xchg
sbb
xchg
in
xor
xchg
insb
sar
mov
adc
pop
gs
cs
push
mov
add
ljmp
popf
pusha
pop
jmp
test
lea
lahf
rcl
imul
sbb
insl
fldt
notl
jecxz
cmp
cmp
cli
daa
push
xor
out
sub
hlt
pushf
arpl
pop
aam
enter
nop
je
pop
pusha
dec
cmp
add
jmp
mov
add
mov
mov
test
je
movl
push
xor
pop
add
push
pop
push
dec
pop
dec
xchg
sub
xchg
dec
mov
imul
sub
mov
mov
xor
add
jmp
mov
mov
mov
mov
xor
add
xor
div
mov
jmp
outsb
lods
or
mov
cmpsb
or
push
cld
add
addl
pushw
cmp
decb
repz
xor
pop
pop
sub
inc
jns
stos
out
lds
cld
addr16
add
popf
fucomi
getsec
stos
pop
rolb
fmuls
lock
jge
popf
cmpsb
pop
push
addb
sbb
xor
lcall
sbb
cmp
pop
jbe
mov
bound
imul
add
pop
mov
test
scas
cmpsl
loop
fildll
fists
stos
aam
mov
cmc
out
dec
pop
mov
mov
push
xchg
xor
shrb
sbb
pop
push
add
push
xchg
push
push
or
add
and
pop
cmp
shl
cmp
sbb
xor
jb
cmpsl
or
push
enter
add
inc
sbb
out
fdivr
xchg
add
pop
out
xor
rolb
xchg
sbb
daa
sub
dec
mov
sti
xor
sti
lea
fucom
adc
cs
or
packsswb
dec
pop
cmp
bound
mov
cwtl
orl
xchg
gs
dec
das
push
outsb
xchg
sub
mov
movsl
cmp
test
adc
out
mov
mov
mov
fiaddl
xor
adc
jnp
xchg
daa
icebp
lods
jns
mov
lret
inc
xlat
xor
arpl
dec
das
xchg
out
pop
daa
mov
testb
in
in
pop
int3
pop
movsl
cld
scas
pop
jl
pop
dec
out
aaa
mov
test
xor
scas
cmp
mov
shr
and
out
ss
push
orb
mov
jne
push
pop
insl
dec
or
sub
daa
sbb
into
lods
fsubr
js
ja
dec
and
in
in
push
test
dec
fld1
mov
pushf
dec
fstpl
pop
sar
fimuls
sbb
cs
sbb
jg
sahf
js
cmpsl
sbb
filds
bound
xchg
and
daa
fnsave
inc
jle
inc
cwtl
pop
mov
cs
mov
cmp
stc
pop
cmp
xor
fistps
sbb
dec
imul
movsl
push
dec
adc
mov
hlt
push
cmc
in
sahf
mov
cmp
mov
adc
cltd
pop
push
cmpsb
stos
shl
mov
xor
sarb
mov
xor
sbb
mov
mov
sti
dec
imul
xor
lds
mov
rcr
lahf
jo
insb
mov
js
sti
das
ret
push
adc
cmp
adc
fcomip
push
in
aaa
lcall
push
xor
fadd
lea
cmp
dec
pop
add
or
lret
mov
out
out
mov
dec
xchg
or
mov
cld
out
push
xor
sarl
cltd
xchg
add
fiaddl
inc
push
call
jne
add
movsb
jp
hlt
in
inc
mov
pop
push
jp
sub
icebp
addb
mov
mov
xchg
int3
push
pop
mov
mov
adc
outsl
rorb
add
lret
arpl
sbbl
ret
daa
lods
lcall
add
jae
adc
cld
push
push
push
dec
orl
add
or
out
insl
lods
lcall
cmc
ret
mov
fiadds
push
inc
cwtl
sub
test
repz
add
fimuls
cltd
inc
scas
aaa
dec
outsl
add
aad
mov
or
test
in
loop
scas
ret
leave
aad
xor
add
dec
jle
enter
push
inc
push
daa
lahf
xor
ror
scas
out
push
jno
jp
aad
in
inc
in
sub
jnp
pop
int3
inc
rol
into
jnp
scas
fldl
popf
rorl
xlat
push
or
notb
repz
cmp
sbb
adc
xchg
enter
outsl
mov
xor
gs
cltd
and
xor
sbb
fidivs
push
pop
fucom
pop
lods
sub
repz
xor
mov
pop
ja
in
fildl
cltd
xor
inc
pushl
cmc
push
sbb
cli
mov
push
bound
jno
push
push
xor
popa
lods
pop
loope
out
push
gs
push
popa
fs
rorb
mov
lret
xchg
or
jbe
dec
jmp
ss
jae
aaa
lods
cmpsl
loope
sbb
xchg
movsl
lods
sub
ljmp
lds
cmp
pop
mov
cwtl
mov
shlb
bound
int
and
fistpl
loope
sbb
and
or
arpl
mov
mov
mov
lret
cmp
push
icebp
push
inc
mov
or
data16
xchg
pop
xor
loop
cmp
ljmp
cmpl
push
pop
imul
mov
lock
pusha
aam
cmp
call
je
insb
scas
jmp
out
push
mov
fstp
pop
lods
add
lds
sbb
test
mov
decb
int3
pop
mov
inc
aam
adc
insl
mov
xchg
sbb
inc
faddl
or
cmc
cld
add
leave
incb
xorb
add
xor
rcl
inc
jno
mov
xchg
pop
fwait
push
mov
jno
xor
mov
mov
push
push
fildl
and
adc
xchg
and
xlat
cmc
shl
sub
mov
dec
shll
mov
lret
cmp
jle
xchg
pop
and
sbb
adc
adc
ret
adc
or
and
popl
push
cli
outsb
dec
lret
adc
push
imul
std
push
xor
sub
cmp
push
xchg
jl
cmp
jns
sub
push
aas
push
fwait
pop
dec
xchg
inc
jp
inc
sub
cmp
push
lds
fidivs
xchg
aas
push
fnsave
ret
in
cmp
sub
mov
jge
sub
mov
nop
sbb
lahf
push
test
mov
dec
jae
sub
aam
sub
push
sbb
loopne
jno
lock
xor
push
cli
cwtl
psrlw
cs
sbbb
adc
mov
and
push
lock
lods
pop
jo
ret
add
lods
testb
scas
jno
lret
push
lea
scas
stos
loopne
pop
stos
es
ja
xor
andl
inc
xor
mov
jno
jp
jae
adc
je
scas
pop
sub
push
pop
std
jp
cmp
aad
inc
cld
push
imul
outsb
and
and
insl
sahf
sbb
jecxz
shrl
insb
push
in
jns
adc
or
push
sub
testl
nop
xchg
inc
fists
mov
aas
test
fdiv
loopne
mov
lcall
lea
sbb
aaa
mov
and
shll
out
sbbb
pop
shll
jne
daa
and
into
xor
and
pop
pushf
xchg
sub
flds
int3
ss
and
jbe
test
xchg
xor
shrl
aad
mov
leave
pop
push
and
pop
inc
arpl
les
lods
rcrl
enter
pop
pop
or
fldt
lret
ja
leave
pop
pusha
xor
fcomi
shlb
int3
cmp
jle
test
push
clts
outsl
mov
hlt
pop
in
adc
jg
insl
xor
xchg
sti
repz
shll
shlb
data16
out
sbb
sub
push
adc
xor
fxtract
divl
and
lret
rorl
mov
movsb
dec
data16
popa
lahf
fs
push
leave
mov
push
sub
xor
mov
dec
or
ficompl
push
sub
aaa
aaa
push
sbb
aam
adc
movsb
mov
loope
xor
in
es
xchg
sbb
daa
sub
aam
out
outsl
cmp
inc
pop
fs
xchg
adc
xchg
je
int
movsb
inc
fs
dec
nop
movsl
push
dec
jg
dec
inc
sub
sub
or
fcoms
mov
sub
add
sahf
lea
aam
insb
in
das
jecxz,pt
sbb
pop
cmp
test
jnp
push
cmp
lds
fimull
cmp
ja
mov
push
loop
sub
push
jno,pn
imul
jge
bnd
mov
mov
lock
gs
fmull
xor
sbb
out
popl
mov
ret
shlb
std
cmpsl
or
ret
xor
jb
xchg
sahf
add
scas
jne
xchg
popa
not
js
fimuls
adc
orl
xchg
imul
pop
out
add
dec
out
in
pop
out
push
push
mov
lret
in
mov
jae
pushf
rcrl
adc
and
mov
xchg
imul
sbb
xor
seto
xchg
in
loopne
ret
xor
push
cmpsl
stos
cmp
lods
push
inc
test
iret
das
inc
pop
das
dec
inc
les
fld1
sub
in
cmc
in
sbb
out
stc
icebp
cmc
inc
pop
insl
sbb
nop
mov
dec
push
push
rcrb
adc
pop
lret
addl
mov
push
movsl
cmp
in
jecxz
aaa
orl
stos
out
popa
xchg
and
adcb
mov
shll
sar
aam
jecxz,pn
repz
cmp
mov
rcr
in
and
pusha
cwtl
mov
add
lret
mov
int3
ljmp
cmpsb
xchg
mov
scas
lds
inc
data16
mov
mov
or
decl
add
popa
jns
pusha
fmull
leave
xchg
mov
pushf
ljmp
es
cmp
push
addr16
add
mov
inc
sar
jle
sarb
outsl
and
mov
test
std
cltd
sbb
movsb
inc
adc
inc
das
xlat
jecxz
push
into
data16
insl
into
cmp
sti
cmpps
sub
pop
or
in
mov
xchg
push
xchg
ficoms
mov
fldt
jl
jle
daa
addps
sbb
ret
call
and
repz
pop
inc
iret
js
test
into
daa
in
enter
xor
adc
pop
mov
scas
inc
and
mov
xor
push
dec
out
mov
sbb
xchg
and
add
lret
pop
hlt
out
mov
mov
dec
push
jg
xorb
jo
addr16
hlt
pushf
aaa
je
pop
adc
fiadds
inc
in
mov
xchg
test
pop
lock
sahf
push
adc
xchg
adc
mov
jnp
and
sti
sbb
fdivr
cmp
roll
les
addr16
inc
mov
or
sub
test
in
lahf
in
xchg
pop
mov
out
and
push
negb
in
dec
shr
outsl
pop
mov
cmp
je
popf
jle
sbb
pop
outsl
pop
jns
loop
fbld
jmp
xlat
es
sbb
dec
stos
stos
lds
dec
into
cmp
int3
dec
dec
sub
xchg
repz
imul
jecxz
testl
daa
ficoml
test
dec
lods
call
add
mov
mov
mov
jo,pt
pop
or
cmpsl
jo
xchg
bound
push
or
dec
es
stos
add
pusha
push
dec
add
lret
dec
out
add
adc
or
sub
cmpsb
sbb
mov
inc
aas
push
mov
mov
or
jb
lea
or
pop
jecxz
cli
push
loope
mov
push
call
push
or
cs
mov
arpl
cwtl
xor
shrl
ret
cmp
mov
xor
addr16
outsl
filds
jecxz
adc
popa
jle
pop
negb
push
mov
dec
imul
add
or
pop
jp
pop
jae
test
in
aad
sbb
into
repnz
jge
std
xor
lcall
push
adc
cs
popf
mov
mov
sub
or
sbb
or
dec
xorb
notb
add
or
roll
rcrb
std
lds
ljmp
adc
pop
xchg
sub
icebp
mov
shlb
add
xchg
outsl
pop
mov
mov
inc
mov
out
push
push
mov
push
mov
mov
scas
push
ss
push
dec
ret
sub
add
ret
les
push
xor
and
adc
push
cltd
in
push
cmp
or
adc
mov
cs
loopne
lahf
gs
xor
push
jne
test
pusha
insb
les
dec
adc
pop
mov
pop
adcb
repz
and
repnz
xchg
cmp
push
jmp
mov
xor
xchg
mov
pop
pusha
and
mov
paddsw
rorl
dec
add
push
xchg
int
pop
shrd
lret
add
cs
ret
push
leave
dec
pusha
cmp
push
push
outsl
les
mov
insl
lcall
int3
enter
push
pop
push
xchg
push
add
add
fidivrl
pop
lds
loopne
or
jae
rclb
push
xchg
mov
popf
mov
in
xor
and
adc
add
lock
push
push
cwtl
push
fistps
out
ja
xor
add
into
adc
fs
imul
cmp
add
fld1
dec
lret
les
lret
xchg
and
mov
mov
adc
in
cld
xchg
call
mov
hlt
rcll
jle
sahf
notb
std
sub
cmc
cmp
mov
leave
aad
scas
jmp
fs
cmp
into
hlt
es
lahf
mov
pushf
mov
add
jmp
jge
inc
inc
ficoml
xlat
and
sbb
inc
adc
out
das
sub
mov
xor
jmp
jmpw
and
sub
xchg
pop
fmull
cld
mov
add
stos
dec
in
sti
inc
and
imul
add
mov
mov
ja
mov
outsb
cmp
in
ret
hlt
rcrb
xchg
mov
ret
xor
decb
dec
hlt
or
mov
ja
loopne
and
shlb
cmpsb
xor
clc
stc
xor
cmp
dec
insl
stos
adc
push
cs
sti
cmp
mov
sub
sbb
icebp
jecxz
insl
or
frstor
inc
mov
aam
sahf
aas
mov
lock
mov
dec
xchg
imull
adc
cmp
lods
movsl
int3
out
mov
out
mov
cs
mov
push
dec
ret
in
lcall
dec
stos
sub
pop
xor
jns
xchg
dec
cmpsl
sahf
lcall
int3
jno
fsincos
xchg
mov
cmc
loope
and
int3
dec
mov
sti
in
scas
jno
insl
dec
clc
or
ret
stos
cwtl
cmp
jle
dec
outsl
pop
fisttpll
movsl
loop
jecxz
in
pushf
icebp
dec
movsl
aam
jg
fcompl
sbb
dec
fbstp
int3
push
add
lcall
xor
jnp
dec
sub
add
aam
adc
mov
and
mov
repnz
cmpsl
cmp
aaa
jns
add
in
sub
std
les
enter
jno
mov
je
mov
jae
mov
jl
data16
push
pop
rolb
je
add
and
imul
xchg
xor
cltd
imul
jo
push
insb
call
sarl
add
ror
adc
andb
imul
jns
pop
leave
ja
xor
in
xchg
adc
mov
push
std
lea
mov
sti
push
sbb
inc
inc
or
push
lahf
inc
clc
pop
test
jmp
dec
push
inc
pop
scas
or
int
pop
jmp
aas
mov
inc
xchg
js
pusha
jno
cmc
ret
pop
adc
mov
adc
xorb
push
mov
ja
sub
dec
cli
imul
ljmp
mov
repnz
xchg
cmp
lds
xchg
adc
push
imul
fildll
lds
cmpsl
xor
sbbb
loope
pop
sbb
dec
into
ret
leave
clc
scas
fstps
jp
sahf
cmp
mov
ja
int3
out
scas
push
fwait
rolb
sbb
add
test
shll
test
push
lret
outsl
pushf
jle,pt
sub
call
arpl
sub
fsubrs
jno
jno
fsts
mov
aam
scas
dec
in
adc
push
fs
iret
xchg
fadds
push
cmp
out
sub
jae
and
repnz
stos
dec
out
dec
inc
arpl
inc
pop
xor
or
in
mov
mov
sarl
repz
push
imul
and
jg
cmp
out
cmp
pop
rclb
out
or
add
cwtl
stos
xchg
jnp
xchg
fs
lds
and
mov
jle
mov
fists
rcrl
xchg
gs
push
das
xchg
das
lret
mov
aam
aas
adc
jne
mov
adc
push
xchg
gs
dec
outsl
xchg
ret
xor
cmp
lock
ror
js
pop
inc
dec
shl
lret
mov
adc
inc
mov
jecxz
xchg
das
movsb
mov
add
shll
or
dec
xchg
hlt
xchg
push
xorl
dec
jno
cmpsb
mov
or
and
icebp
test
mov
faddl
jl
inc
cmp
jg,pt
imul
test
addr16
mov
mov
push
ret
mull
jge
movsl
scas
jb
imul
xor
outsb
cmp
add
cmp
jne
scas
push
out
mov
cmp
scas
test
movsl
sbbl
xchg
mov
lahf
mov
gs
xor
cmp
inc
dec
or
arpl
lock
cmpb
or
push
ljmp
pop
sub
push
sub
iret
hlt
stos
and
cli
add
test
xchg
lods
dec
sub
dec
lret
les
lret
nop
or
cmpsb
dec
shlb
pusha
sti
xchg
test
lods
sbb
js
xchg
add
xor
xor
mov
repnz
jl
sub
inc
mov
and
dec
clc
fdivl
push
xor
jg
fcomi
inc
cld
add
fdivl
pop
pop
icebp
fadds
xchg
movsb
sbb
mov
inc
adc
into
loope
je
push
cmp
jno
dec
add
daa
push
lods
clc
imul
imul
sbb
out
push
mov
pop
enter
dec
not
mov
or
push
fdivrs
inc
in
cld
mov
pop
mov
mov
mov
rclb
cmpsl
mov
lods
loopne
xchg
movsb
stos
xlat
pushf
mov
add
jmp
mov
sbb
mov
aaa
rcll
mov
adc
adc
push
rorb
dec
mov
jbe
mov
loopne
lret
push
fidivl
adc
cmc
nop
xor
shr
jp
lcall
cli
xchg
pop
sbb
insb
inc
mov
jmp
mov
mov
pop
mov
push
psrad
ja,pt
dec
and
mov
mov
sbb
icebp
pop
andl
test
push
je
pusha
dec
outsb
xchg
call
mov
pop
mov
stc
scas
outsl
pop
shll
lds
mulb
jnp
sbb
insl
das
pop
mov
cmp
subl
adc
xchg
jecxz
scas
mov
jp
and
movsb
mov
xor
nop
sbb
or
std
aas
adc
test
nop
out
mov
lds
in
add
mov
and
jbe
mov
pop
aaa
adc
ds
dec
in
dec
jmp
xchg
mov
lret
scas
mov
loope
adc
imul
sbb
daa
repz
insl
mov
lahf
fistps
pop
stos
mov
add
sbb
bound
into
lahf
sub
iret
jns
pop
dec
lock
sub
sbb
arpl
imul
jl
xor
in
fisubrl
in
xor
std
or
push
stos
bound
and
cmp
out
ljmp
stos
mov
leave
sub
int
xchg
mov
jecxz
ljmp
lret
lock
push
jecxz
cltd
pusha
gs
adc
outsb
push
ja
jp
sahf
xchg
in
outsl
in
inc
mov
iret
or
sti
into
adc
pop
test
test
add
sti
faddl
das
pop
push
insl
sub
stos
in
inc
mov
rcll
pusha
addr16
in
jnp
inc
sbb
adc
mov
jae
jno
rol
push
adc
ljmp
inc
cmpsl
out
lret
lret
xor
pushf
sub
fcomip
push
icebp
loope
cmp
out
mov
ss
add
cld
jp
add
cmpsl
dec
scas
outsb
push
jb
shrb
insl
dec
std
or
cmp
cltd
and
add
not
pop
sti
pop
jmp
sbb
les
cmp
xchg
sub
push
jmp
mov
jl
mov
cmc
mov
ficoms
mov
pop
subl
xor
js
idivb
jl
jmp
lahf
xchg
sahf
jg
test
call
cmp
dec
or
lods
movsl
mov
lret
mov
aaa
sbb
pop
pushf
push
jo
push
insb
push
iret
js
dec
pop
add
insb
lahf
dec
sahf
lcall
ja
ss
shl
add
xor
dec
shr
aaa
or
popf
or
adc
scas
sub
and
test
jle
xchg
push
setge
arpl
cmpsl
pop
push
and
in
test
test
dec
mov
gs
pop
jns
popf
addr16
aam
jne
iret
sub
mov
sub
mov
mov
push
xchg
mov
pop
cmpsb
sbb
sub
sbb
bnd
insb
inc
cmp
lret
lret
ds
aad
jp
push
mov
jnp
jle
imul
orl
es
out
and
stos
roll
xlat
loop
mov
fwait
lahf
bound
and
push
push
fidivrl
arpl
push
and
into
ret
adc
mov
inc
js
inc
out
lret
sub
fdivs
loope
jg
cwtl
in
push
stos
sti
cmc
mov
lods
xchg
lds
and
adcb
sbb
push
aas
jb
testl
adc
jecxz
jl
mov
or
inc
jmp
sub
mov
and
addb
imul
testl
push
sbb
sbb
sub
ss
sbb
pop
bound
lea
in
int3
push
outsb
lcall
cwtl
in
dec
sub
ljmp
es
cld
mov
psubsb
fld
sbb
pop
push
jns
inc
insl
stos
adc
shrl
leave
adc
xchg
insl
mov
lea
sub
in
inc
cmp
cmp
aam
test
push
lret
pop
or
out
xor
sbb
shll
mov
sbb
test
mov
mov
std
xor
and
mov
aaa
in
sub
mov
add
mov
xlat
dec
or
mov
dec
pop
movsb
mov
stc
xchg
punpckhwd
mov
imul
test
lds
add
cld
cs
jp
mov
in
adc
icebp
mov
adc
imul
mov
pop
add
xchg
cmpb
cs
loop
sbb
mov
push
subl
or
sub
dec
jne
cmpsl
push
cmp
mov
int3
and
mov
or
jno
xor
jbe
aam
mov
pop
and
sarl
push
ficoml
cmp
or
adc
rcrl
pop
andb
and
and
sbb
and
cmpsl
jns
or
loope
insb
into
scas
out
push
ljmp
adc
cmc
pushf
clc
mov
or
mov
xor
add
cmpsl
int3
ret
icebp
repnz
mov
push
cltd
je
cmpsb
pop
xchg
in
imul
loopne
pushf
stos
int3
pop
je
call
push
ds
mov
xorb
sbb
out
insb
mov
mov
bound
and
je
movsb
mov
jl
or
mov
push
divl
inc
and
dec
cmp
dec
loopne
inc
shll
push
int3
ret
loope
jne
push
push
pop
sub
or
sub
bound
inc
add
testl
sbb
jge
xor
and
ljmp
add
adc
orl
in
popa
daa
lcall
or
rorl
leave
icebp
mov
iret
ret
leave
inc
sti
les
je
push
stc
add
push
mov
xor
cmp
xchg
cmp
xorb
push
imul
sub
lods
nop
xor
pop
lcall
jle
xor
stos
xor
inc
jnp
movb
outsl
repz
pop
sahf
ret
aad
aam
jp
mov
loop
sti
xchg
push
cli
lds
mov
lret
orl
sub
adc
mov
or
jp
push
adc
fldl
push
frstor
imul
sti
xorl
iret
sbbl
mov
inc
outsb
mov
adc
inc
in
push
dec
insl
mov
insl
std
or
arpl
int
jne
xchg
adc
push
rcll
jns
rclb
loope
push
jmp
and
test
adc
push
mov
adc
push
in
inc
mov
mov
or
ret
aad
mov
stc
rclb
roll
fcomps
out
rep
adc
inc
ljmp
mov
xbegin
loopne
dec
pop
dec
mov
mov
xchg
lahf
lods
imul
xor
loopne
dec
mov
and
cmpsb
movsl
outsb
cmc
add
mov
add
mov
sarl
xchg
sbb
pop
push
test
mov
and
sahf
orl
or
adcb
pop
loope,pt
inc
test
pop
xlat
ficoml
incb
lods
add
mov
fidivrl
adc
xor
and
test
mov
and
stos
mov
add
add
xchg
mov
adc
xchg
int3
into
mov
inc
cltd
push
movsl
out
or
nop
push
jne
fstpl
scas
aad
scas
mov
pop
jb
mov
gs
inc
fmulp
int
mov
jle
push
loopne
dec
jge
and
dec
add
mov
cmpsl
loop
xlat
inc
aas
mov
sub
pop
js
mov
lods
jo
cmp
fs
ds
hlt
sbb
ret
sarb
push
mov
and
xor
xor
rcrb
imul
cmp
mov
and
mov
add
ror
jl
and
mov
lahf
push
aas
inc
xor
pop
mov
mov
scas
mov
repnz
repnz
outsb
stc
push
inc
sub
fisubrs
mov
push
sar
das
std
fidivl
and
les
cmpsb
push
mov
xor
mov
shlb
inc
test
ss
lret
jo
stos
daa
jge
loop
js
adc
sub
fldenv
push
dec
daa
jl
out
cmc
sbb
fnsave
fnstsw
mov
push
cltd
loopne
jo
mov
enter
arpl
sbb
jb
repz
cmpsb
add
fnstcw
fstpl
aas
push
sti
pop
adc
nop
sbb
or
aam
fcmove
cmc
adc
sarl
testl
lds
or
pop
out
dec
dec
push
mov
jbe
mov
push
inc
hlt
mov
stos
sahf
insl
sbb
arpl
pusha
mov
sbb
lcall
popf
lea
fsubl
adc
fsubrl
push
shlb
data16
imul
and
mov
stos
jo
cli
xchg
lret
scas
sub
in
or
loop
pop
jbe
inc
mov
xor
xchg
je
in
fmul
sub
xor
clc
mov
dec
sbb
cmp
cmp
xor
fstps
out
mov
pop
inc
push
mov
pop
pop
lea
sbb
xor
shlb
imul
and
mov
sbbb
mov
in
pop
imul
xorb
mov
faddl
xor
data16
loop
testl
out
sub
fisubs
xchg
or
out
sub
push
push
fwait
pop
leave
xor
sbb
mov
xor
jne
and
sbbl
xchg
adc
fmuls
out
sahf
insl
xor
xchg
xor
pop
or
cmp
mov
fwait
cli
lods
data16
popa
rcrb
xor
mov
aas
out
cmp
scas
pop
jb
mov
push
xchg
sbb
loop
or
mov
pop
jge
mov
mov
in
sbb
insb
dec
mov
into
arpl
addr16
scas
shl
fidivl
adc
fisubrl
sub
xor
std
outsl
clc
dec
sub
push
shlb
adcl
pop
mov
mov
enter
clc
aas
sbb
mov
lea
or
loopne
mov
pop
mov
data16
leave
repz
adc
scas
cmc
or
add
or
xchg
add
add
shlb
jecxz
das
mov
cwtl
lods
add
cli
pop
pop
fadd
movsb
or
pop
mov
jo
inc
sbb
gs
add
cltd
mov
mov
imul
pop
fldlg2
add
inc
sbb
lds
jl
sub
push
fcmovb
scas
sub
cs
xor
out
sbb
dec
popa
cmp
push
aaa
add
loope
scas
fcmovbe
std
sub
fst
loope
je
dec
imul
mov
or
test
ret
add
fs
repnz
in
sbb
ja
cmc
fwait
stos
dec
ds
cwtl
int3
adc
cltd
sahf
cmpsb
sahf
les
fwait
in
jecxz
cmp
pushf
loope
mov
lret
sub
or
fcomi
mov
repz
sbb
cmp
or
out
ret
clc
repnz
jge
jnp
mov
xchg
jmp
xchg
xorb
add
inc
push
mov
mov
mov
push
pop
pop
xchg
jmp
and
test
mov
pusha
inc
daa
dec
dec
cmp
xor
xlat
pop
fs
and
jne
dec
clc
xor
fs
xchg
mov
push
cmpsl
mov
in
dec
xlat
in
inc
or
xor
lcall
push
push
mov
sub
pop
dec
repnz
ret
inc
cwtl
pushf
push
les
mov
fcoml
pop
fists
inc
scas
popf
mov
pop
fxam
push
add
pop
rorb
add
daa
jp
pop
dec
ror
xor
push
xor
xor
je
sub
in
ja
pop
inc
jl
pop
adc
test
into
fstpt
push
jmp
inc
fildll
or
mov
in
inc
push
sbb
pop
xor
inc
loope
mov
imulb
std
mov
test
repz
add
loopne
add
mov
mov
xor
lea
mov
mov
mov
xor
add
imul
mov
mov
xor
lea
cmp
jne
mov
xor
add
mov
mov
add
xchg
xor
push
mov
pop
mov
add
lea
add
add
push
inc
pop
dec
xchg
dec
xchg
dec
xchg
dec
push
mov
pop
dec
call
cmp
je
xchg
push
pop
dec
push
pop
inc
xchg
inc
sub
xchg
dec
dec
mov
imul
add
xchg
push
xor
mov
dec
inc
add
dec
xor
add
pop
mov
pop
pop
pop
leave
ret
push
mov
push
and
movl
andl
mov
inc
mov
cmpl
jbe
jmp
push
call
cmpl
jb
mov
xorl
mov
mov
sbbl
xor
xorl
add
mov
and
mov
and
xor
xorl
push
xor
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
pop
leave
ret
push
mov
sub
movzbl
or
mov
mov
subl
xor
mov
add
andl
mov
inc
mov
cmpl
jl
jmp
pushl
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
movzwl
mov
movb
andl
jmp
xor
add
inc
mov
cmpl
jae
cmpl
jge
jmp
push
push
pushl
call
jmp
lea
incl
mov
mov
andl
mov
inc
mov
cmpl
jbe
jmp
pushl
call
cmpl
jb
mov
xor
movl
add
andl
mov
sbbl
movl
push
movl
movl
cmpl
je
cmpl
jl
jmp
push
push
push
call
mov
dec
mov
jmp
mov
or
push
mov
xor
xor
or
xor
mov
sbb
mov
mov
push
add
jmp
incl
mov
mov
inc
movl
cmp
jb
not
mov
xor
movl
add
jmp
movzwl
or
mov
adc
mov
adcl
xor
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jl
jmp
call
cmpl
jne
xor
xor
inc
mov
jmp
mov
add
addl
movzwl
sbbl
mov
movzwl
and
mov
sbbl
movzwl
xor
add
mov
movl
mov
mov
inc
not
mov
movl
cmp
jne
and
mov
sub
mov
xorl
xor
and
add
mov
mov
sbbl
xor
add
adc
mov
addl
movl
movl
movl
movl
mov
movl
cmpl
je
cmpl
jb
jmp
push
push
call
mov
dec
mov
jmp
mov
mov
xor
add
movzwl
mov
mov
je
mov
subl
mov
xor
xor
notl
sub
notl
sub
xor
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
ja
jmp
push
call
cmpl
jne
mov
inc
mov
jmp
mov
subl
mov
mov
movl
add
andl
imul
mov
xor
mov
mov
add
mov
add
incl
or
mov
mov
mov
sbbl
add
xor
mov
dec
mov
add
mov
add
and
and
mov
xor
mov
subl
mov
lea
mov
andl
mov
inc
mov
cmpl
jge
jmp
push
push
pushl
call
cmpl
jb
mov
or
mov
sub
movzwl
and
add
mov
andl
mov
xor
adcl
add
movl
jne
movl
jmp
xorl
mov
subl
sub
xor
movl
cmpl
je
cmpl
jbe
jmp
push
call
xor
or
dec
mov
jmp
mov
subl
mov
mov
xor
decl
xor
adcl
sub
sub
xor
mov
mov
mov
jmp
mov
movl
cmpl
je
cmpl
jl
jmp
push
push
push
push
call
mov
dec
mov
jmp
mov
xor
xor
sub
sub
xor
mov
mov
mov
add
addl
imul
mov
andl
mov
inc
mov
cmpl
jb
jmp
pushl
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
adc
mov
addl
add
or
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jg
jmp
push
call
jmp
mov
mov
andl
add
movl
xor
mov
subl
mov
mov
xorl
add
xorl
and
or
mov
mov
sbb
mov
xorl
mov
lea
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jle
jmp
pushl
push
call
cmpl
jne
mov
inc
mov
jmp
mov
mov
sub
add
mov
mov
xor
add
jne
mov
mov
mov
cmp
je
mov
mov
mov
mov
xor
cmp
jne
mov
mov
xor
movsbl
mov
xor
add
cmp
mov
mov
mov
je
xor
add
mov
je
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
add
imul
mov
mov
mov
add
or
mov
mov
mov
add
xor
mov
mov
mov
add
and
mov
mov
mov
lea
mov
mov
mov
sub
add
mov
mov
xor
add
jne
jmp
mov
jmp
rcr
sbb
mov
nop
cs
or
pop
outsl
imul
addl
push
cmc
pop
xor
add
enter
dec
idivl
sub
jbe
cmpsb
lock
mov
jl
enter
lahf
outsb
es
out
ficoml
jle
mov
jg
testl
sub
call
add
insb
icebp
cmc
fs
dec
pop
outsl
xor
jo
test
pop
jle
and
adc
cmpsl
test
scas
sahf
loope
rcrl
push
jle
xor
xchg
adc
cli
je
fistpll
xchg
or
aad
out
mov
add
pop
lret
pop
into
and
pushf
pop
mov
xor
loop
push
cltd
adc
addr16
xchg
add
adc
lcall
mov
xor
pop
push
adc
lcall
xchg
pop
sub
stos
inc
pop
test
je
aad
xor
insl
mov
mov
jmp
gs
mov
pop
sub
sub
mov
lock
dec
jl
jp
scas
mov
in
xchg
add
or
mov
enter
cmpsb
bound
imul
outsb
pop
jae
adc
xor
cltd
arpl
and
cmp
jp
and
test
add
xor
xchg
mov
adc
add
or
xor
and
lahf
mov
xchg
sbb
or
mov
jnp
cwtl
call
data16
adc
sub
mov
fcmovu
mov
xor
dec
jo
dec
sub
sahf
out
sub
pop
sub
pusha
xlat
incl
and
push
mov
cmp
sub
cmpsl
hlt
cmp
xchg
or
jo
push
and
sbb
add
jno
push
inc
jns
test
cmp
scas
sbb
and
lods
daa
je
mov
cmpsl
xor
mov
shl
pop
aaa
cmp
inc
push
mov
pop
dec
ja
xchg
cmp
es
mov
sbb
and
lock
adc
loope
icebp
pusha
jne
ja
aaa
and
lcall
adc
or
adc
insb
scas
dec
dec
outsb
loopne
jl
popf
test
jp
cmpsl
addl
sar
shll
leave
mov
fdivp
push
out
push
int
push
mov
jg
call
lahf
inc
dec
ss
jne
dec
arpl
testb
shll
daa
repnz
mov
dec
cmp
add
leave
movl
ljmp
fnsave
mov
iret
sub
popa
dec
sbb
cs
pop
jl
adc
push
imul
cmp
repnz
loop
push
push
scas
sub
inc
push
popa
or
data16
test
cmp
inc
xor
add
or
pop
sbb
push
outsb
arpl
jb
icebp
jg
out
pushf
pop
outsb
or
leave
pop
dec
ss
push
push
arpl
xchg
lea
push
into
inc
cmp
andl
xlat
dec
mov
ss
sarl
push
jg
cmp
xchg
mov
mov
fwait
push
dec
pop
mov
fmul
sahf
jae
pop
stos
jecxz
jmp
mov
inc
pop
xor
sub
jo
test
lret
leave
testb
add
call
in
sahf
hlt
dec
dec
xchg
cltd
out
outsl
mov
out
stos
fists
insl
sub
adc
push
xor
lods
mov
aas
mov
sub
mov
xor
mov
std
or
xor
xor
xchg
or
cmp
mov
mov
js
push
repnz
push
dec
mov
out
test
out
xor
dec
inc
jae
fcom
push
inc
ss
adcl
push
lods
pop
sahf
cmp
daa
cmpsl
in
mov
inc
andb
mov
dec
add
std
call
dec
mov
sarb
data16
push
out
inc
in
add
cltd
push
arpl
testl
mov
loope
and
les
xchg
shlb
fiaddl
cwtl
mov
enter
jae
lock
or
sub
lea
popf
sbb
cmpsb
mov
popa
and
fnstsw
cs
xor
jbe
and
int
mov
pusha
mov
sbb
ja
outsl
adc
mov
cwtl
cltd
enter
fwait
out
mov
ds
int
xchg
ss
mov
cld
pop
push
xchg
sub
cmp
pop
or
arpl
out
push
scas
lock
sbb
xchg
mov
cmp
cmpl
sub
cli
int3
push
enter
jmp
push
pop
cmp
fsts
mov
movsl
mov
push
pop
stos
iret
lret
sbb
mov
call
arpl
inc
push
mov
cmc
sbb
pushf
dec
mov
lock
sarl
mov
xor
pop
fistpll
arpl
mov
aad
aas
lcall
or
test
mov
sbb
imulb
mov
mov
sarb
mov
lea
push
mov
and
xchg
or
cmpsl
add
pop
mov
pusha
popf
inc
cmpb
mov
or
or
aaa
shl
or
filds
mov
lods
rol
je
add
ficomps
iret
out
out
and
aaa
push
dec
mov
push
cwtl
push
dec
xor
stc
popa
adc
mov
popa
pop
into
mov
xorb
cmp
loop
mov
icebp
jmp
ret
iret
mov
push
xor
mov
push
add
div
test
or
enter
push
adc
movsl
jl
jp
sub
add
jmp
inc
fiadds
mov
gs
fabs
icebp
or
or
lods
and
loopne
pusha
pop
cmpsl
les
mov
push
adc
lret
movsb
adc
movsb
adc
push
sbb
jne
imul
pop
jb
std
stos
cld
inc
out
in
mov
dec
jbe
dec
or
pop
xchg
push
scas
jecxz
insb
pop
faddl
std
dec
mov
enter
je
shll
mov
push
pop
and
or
xor
mov
addr16
jbe
lds
mov
iret
and
sub
dec
fwait
ret
mov
jecxz
lahf
jno
dec
leave
push
ficoms
cld
mov
lock
or
fldenv
cmc
or
into
rol
sti
sti
fcomip
test
xor
hlt
jo
sbb
jne
test
orb
mov
aam
mov
cmp
outsl
aam
mov
mov
sti
or
popa
lret
lea
xlat
imul
pop
mov
es
xchg
mov
jge
test
pushl
jl
jge
out
mov
popa
test
jae
xor
xor
inc
cmp
jmp
xorl
int3
and
cmpsl
mov
sbb
inc
rcll
ret
in
repnz
inc
mov
roll
or
xor
mov
jb
push
ret
mov
enter
pop
fistpl
jp
push
push
or
cmpl
sbb
dec
mov
cs
cmp
mov
movsb
rolb
adc
dec
lods
lock
sbb
lods
cmpsl
sti
push
pop
mov
lret
pop
lcall
xlat
sub
mov
imul
adc
pop
fwait
aad
bound
mov
testb
clc
add
mov
xchg
scas
inc
cmp
sarb
push
pop
aaa
xor
inc
xchg
xchg
xor
call
outsb
das
enter
aam
loope
xlat
imul
mov
stos
and
repz
sub
or
fsub
mov
xor
sub
cli
pop
mov
xchg
sbb
sub
sub
add
popf
cmpsb
fbld
repz
adc
or
adcb
jae
pmullw
loop
cmovp
jo
shrb
cmp
cwtl
loop
pop
mov
sub
or
xor
or
push
mov
push
aas
push
cltd
repnz
pusha
stc
aaa
outsb
lds
mov
bound
sub
and
cmp
lcall
cmp
sub
sub
movsb
movsb
adc
out
cs
dec
out
cmp
test
mov
xchg
test
daa
ja
dec
fwait
stos
cmp
outsl
shrb
ljmp
cmpsb
in
out
shll
fisttpl
and
filds
lcall
and
out
out
enter
cpuid
jge
jle
lods
cmp
fnstenv
jno
pop
add
test
adc
stc
lahf
movsb
es
fadd
fidivrs
jbe,pn
xchg
cwtl
sbb
pop
jae
xchg
imul
or
mov
mov
loope
xchg
and
aas
jno
xchg
mov
cltd
das
xchg
adc
mov
xor
inc
and
pop
adcb
cmpsl
fsubrs
imul
dec
mov
pop
jb
cli
icebp
fstps
dec
mov
in
or
stos
ljmp
adc
loop
shl
pop
inc
cmpsl
add
pop
enter
push
insb
cmp
and
outsl
rcrb
sbbb
sub
pop
adc
jo
add
adc
daa
cmp
xor
in
xor
in
jo
lea
sti
fmuls
insl
cs
sub
adc
mov
mov
rorb
fnsave
fadds
cmp
cmpb
pop
mov
inc
jbe
pop
lea
push
push
rcr
jb
sub
sbb
or
and
push
loopne
incb
ror
loop
cmp
mov
push
push
cmp
push
ret
loope
nop
mov
lret
jb
jecxz
adc
or
push
cld
or
xor
add
sbb
push
jmp
xchg
cli
adc
mov
insl
test
lcall
sbb
dec
and
pop
and
loopne
push
jns
into
sub
adc
into
cmp
ret
in
fadds
cmp
dec
inc
sbb
inc
push
and
pop
push
sti
mov
mov
test
add
mov
xor
pop
mov
push
out
add
arpl
insl
imul
mov
pop
mov
xchg
ljmp
mov
mov
push
bound
loope
sbb
jae
cmp
dec
sar
inc
push
ficompl
popf
xlat
in
sub
and
test
pusha
outsl
inc
lret
stc
mov
les
lea
mov
xor
jmp
lock
mov
test
sti
push
add
repz
daa
dec
aam
mov
lahf
test
fstps
clc
push
mov
xchg
leave
add
test
out
inc
ret
push
adc
stos
push
imul
out
dec
push
pushf
sbb
inc
pop
pop
rcrb
ljmp
sub
popa
mov
sub
les
inc
jo
xchg
mov
sbb
push
inc
mov
mov
mov
inc
cs
dec
aaa
add
jle
cmp
out
push
cmpl
into
clc
mov
sbb
out
and
xchg
and
jle
mov
push
push
push
das
push
xor
adc
add
mov
shl
arpl
jp
cmp
xchg
aaa
cmp
mov
cmp
sbb
lock
leave
cltd
mov
xchg
cmpsl
dec
stc
insb
add
negl
push
mov
aam
scas
and
cmp
push
adcl
jne
mov
cmpsb
xchg
xchg
xchg
xchg
sub
leave
cmp
pop
mov
imul
push
mov
inc
sbb
test
idivb
add
ret
mov
pavgb
imul
andl
gs
add
hlt
sub
and
sbb
jg
jns
push
xlat
mov
imul
mov
das
mov
ja
test
cmp
pop
jbe
neg
mov
lahf
flds
add
flds
sub
dec
dec
cmp
mov
dec
or
adc
mov
aaa
or
xchg
dec
sub
enter
push
movsb
icebp
pop
cmc
mov
pop
pop
inc
xor
scas
jle
xchg
scas
cmp
int3
js
mov
xor
adc
dec
test
mov
movb
dec
js
mov
xchg
sbb
bndldx
popf
and
adc
mov
jl
jle
inc
push
ret
fisttpl
insl
rcrl
xchg
and
mov
outsl
pop
cmp
sub
sbb
dec
loopne
arpl
mov
sti
test
into
add
ljmp
lahf
popf
mov
scas
and
test
les
loopne
je
push
adc
sbb
jo
jo
or
dec
aas
sub
dec
sbb
aaa
dec
jb
push
cli
jmp
lock
adc
icebp
pop
mov
mov
xchg
sub
lret
mov
xor
cmp
xchg
mov
mov
push
pop
add
pop
sub
fldcw
sbb
ds
in
decl
cld
ss
sbb
and
nop
rorb
out
int3
popf
cmp
je
add
andb
xchg
fisubrs
dec
subb
movsl
popa
in
inc
insb
sub
sahf
ja
cmp
ds
or
outsl
pushf
mov
push
inc
call
in
jp
dec
cwtl
aas
daa
sub
inc
xor
jb
jmp
xchg
sbb
stos
inc
or
pop
lea
popa
sub
sbb
je
mov
ljmp
insl
ror
xchg
dec
jge
fimull
fistl
fistps
lret
sti
aas
sub
add
mov
adc
sarl
or
add
adc
in
mov
into
test
shlb
add
in
in
mov
test
inc
add
out
mov
lcall
dec
lods
fldt
stc
loopne
pop
jg
insb
xchg
int
mov
or
rolb
pop
mov
or
fisubl
jno
cmp
mov
loop
pop
imul
popa
inc
xchg
jae
arpl
mov
and
pop
sub
out
adc
cmp
ljmp
sub
mov
xchg
sahf
mov
jmp
jle
push
mov
lret
add
rol
rcll
or
mov
movsb
xchg
mov
mov
mov
outsl
sti
outsb
sbb
bound
pslld
into
lahf
adc
mov
rolb
sbb
push
test
sarb
jecxz
adc
jae
pusha
add
dec
jb
and
jno
popf
sar
push
add
fildl
push
fistl
adc
adc
je
mov
jae
movsl
dec
cmp
xor
cmpsb
shrb
aaa
jo
fs
cmp
pop
rorb
lods
shl
fcmovu
xchg
hlt
sbb
aad
cmp
or
cmp
mov
clc
sahf
rcr
pusha
fucomi
test
and
mov
jle
mov
jmp
test
icebp
cmp
inc
cmp
sbb
mov
icebp
out
sbb
pusha
popl
ljmp
ss
mov
cmpsb
cmp
lods
cmpsl
fidivl
out
es
lods
push
push
mov
pop
dec
ljmp
pop
mov
insb
fdivrp
aaa
pop
push
ficomps
jno
xchg
sti
sbb
mov
pusha
dec
jno
push
nop
sub
fs
pop
mov
xlat
xchg
jo
pop
push
adc
jo
mulps
add
mov
in
mov
loope
rol
mov
loopne
popa
jge
stc
cmc
fistps
xor
fucom
mov
dec
lods
jle
mov
xor
pop
or
cmp
mov
out
rcr
test
imul
cmpsl
adc
stc
stos
inc
jns
popf
sahf
and
inc
push
jl
mov
subb
out
js
enter
jno
in
jmp
scas
jecxz
addr16
dec
jb
push
testl
and
jle
testl
loopne
push
popf
jne
mov
insl
jbe
dec
ljmp
and
les
xchg
subb
and
add
xor
dec
and
mov
mov
xchg
pop
not
cwtl
lods
mov
and
sahf
out
jle
into
push
mov
arpl
pop
jmp
pop
mov
das
sub
lods
and
push
in
ret
add
sbb
mov
dec
push
adcb
ret
or
mov
jnp
mov
test
lods
fisttps
sub
cmp
out
adc
cmpl
push
sbb
and
leave
cli
cli
pushf
cmp
adc
pop
jns
add
inc
aas
inc
and
movsb
loop
xor
arpl
mov
rcrb
lahf
sahf
sarb
add
mov
jmp
cli
inc
dec
xor
xchg
add
not
pop
je
rclb
jnp
adc
cmp
cmp
cmp
pop
pop
push
cmp
enter
arpl
inc
leave
mov
test
mov
ret
xchg
nop
xchg
xchg
iret
push
sub
mov
pushl
js
test
imul
or
ja
mov
pop
ds
shll
xor
dec
or
xor
cmp
sti
xchg
fildll
pop
stc
add
sub
out
xlat
inc
sbb
sbb
bound
add
mov
push
hlt
push
stos
in
jg
mov
notb
pusha
cwtl
xchg
in
mov
aam
cli
xchg
je
sub
xchg
repnz
fidivrs
mov
enter
fs
cmpsl
movsl
add
in
lret
xor
mov
cmpsb
xor
jle
mov
add
push
sub
push
mov
aaa
in
stos
nop
xor
xchg
insl
lea
mov
sub
leave
inc
scas
cmp
mov
lds
pop
cmp
jo
sub
shr
push
jg
fxch
pushf
mov
adc
imul
aam
aaa
loopne
in
and
imul
xor
out
mov
roll
push
cmp
mov
fists
loop
add
out
out
js
mov
xchg
cld
cmp
in
push
add
dec
sbb
mov
dec
movl
jge
mov
mov
push
in
arpl
scas
insl
adc
adc
imul
sbb
add
xor
notl
enter
enter
cmp
imul
mov
adc
sti
mov
pop
cmpsl
mov
or
cli
out
dec
orb
neg
sbbb
clc
int3
call
dec
inc
mov
movsl
fwait
mov
mov
mov
mov
fs
icebp
xchg
pop
scas
ljmp
xor
ret
insb
out
test
bound
pop
fimuls
inc
cmpsl
jo
dec
lds
stos
pusha
add
repnz
ljmp
pushf
fwait
lret
repnz
xchg
lock
clc
pop
dec
jne
lar
jmp
sub
inc
jno
sbb
je
and
sbb
inc
subb
ds
xor
nop
sub
add
lea
ds
cld
xor
push
popa
jge
lock
scas
pop
clc
cmp
add
and
and
sbb
clc
fidivrl
mov
das
mov
jns
pop
pop
lcall
je
mov
xor
mov
sub
in
into
jmp
and
and
cmp
dec
and
push
in
aad
push
mov
scas
push
jmp
orl
xor
mov
dec
dec
push
cli
pop
and
rolb
sub
inc
mov
pop
sbb
insb
push
notb
lret
loop
sbb
or
and
pusha
lret
mov
shl
js
mov
scas
pop
ja
lea
loopne
adc
sbb
xor
mov
hlt
mov
imulb
js
fnstenv
pop
jb
test
xor
pop
ja
mov
in
xchg
mov
xor
addr16
mov
push
mov
cld
cmp
out
pop
data16
aaa
loopne
and
mov
add
mov
mov
aad
mov
add
push
stos
inc
xchg
xchg
rcll
test
jecxz
push
xchg
cmpsb
out
arpl
insl
scas
mov
iret
les
xchg
mov
jg
jp
mov
pop
hlt
xor
sahf
lcall
repz
mov
leave
inc
ss
mov
scas
dec
test
jge
aam
dec
inc
mov
sub
pushf
addr16
sahf
lock
xor
jb
mov
daa
dec
pusha
jnp
imul
es
bound
into
fcos
cmp
mov
movsb
cs
mov
cltd
rcrl
arpl
sub
jmp
jmp
fisttpll
fistps
int
sub
std
test
cmc
lcall
xchg
push
and
mov
dec
inc
and
push
inc
hlt
xchg
jl
pusha
pop
mov
push
and
adc
xchg
pop
pop
mov
fildl
sbb
mov
cmpsl
jmp
je
mov
jle
lock
cltd
movsb
jns
cmp
fisubrl
dec
sbb
mov
sub
lcall
mov
xchg
and
outsb
pop
flds
xchg
fadds
je
and
gs
push
sub
ja
test
pop
stc
in
enter
cmpb
adc
lods
fsubl
cld
decb
loop
mov
xchg
xchg
add
das
repz
push
mov
daa
sub
repnz
or
rolb
inc
pop
add
aaa
lods
xor
aam
jnp
orb
sbb
call
idiv
jo
jnp
gs
incl
movsl
jns
jecxz
adc
sub
cmp
mov
les
lods
orl
xchg
pusha
xchg
sbb
outsl
mov
dec
jl
push
enter
cmpsb
loopne
fcmovbe
sti
cmc
fwait
push
mov
mov
dec
into
and
nop
fnstcw
jecxz
jb
sub
gs
cmpsb
pop
sbb
ffreep
test
pop
and
rol
mov
out
cmpsl
or
aas
inc
cmpl
shll
mov
and
loope
xchg
inc
les
in
sub
data16
mov
mov
jmp
jp
inc
mov
jb
mov
and
mov
jle
mov
xor
push
fisttpl
int3
stc
clc
mov
imull
out
or
jnp
jp
jb
and
cli
test
pop
jp
lea
pop
insb
leave
movsb
jbe
loopne
out
jb
pop
add
idiv
mov
lcall
adc
repz
out
lods
xchg
dec
add
mov
push
movsl
mov
adc
cmc
test
push
into
sbb
shrb
cs
pop
daa
divl
or
push
imull
cld
add
insl
into
test
mov
inc
insl
inc
push
lahf
sahf
and
dec
test
push
ret
scas
bound
jne
adc
js
int3
faddl
sti
xchg
mov
sub
movsb
test
cmp
addr16
xor
pop
mov
hlt
dec
fnstsw
idivb
lds
fs
cmp
add
enter
cmp
imul
cmc
clc
aaa
mov
int
in
cmp
into
mov
push
hlt
inc
in
adc
divb
sub
divl
ja
pop
mov
ljmp
aam
push
adc
inc
fwait
dec
mov
insb
sbb
test
push
les
cmp
rcrb
and
rcrl
mov
lods
jg
pop
and
shrl
test
pop
jecxz
jb
dec
ss
jp
in
aad
adc
stos
mov
aam
ss
jle
orb
data16
add
pop
les
xor
mov
and
aas
mov
out
dec
lods
push
inc
pop
or
xor
and
pop
jecxz
cmpsb
outsb
cmp
xchg
ret
jns
inc
jmp
jno
rolb
mov
or
pop
into
xchg
in
and
sarb
in
add
or
jnp
sub
hlt
lahf
leave
scas
mov
test
push
scas
and
or
cmc
ja
inc
sub
xor
sti
mov
adc
rcl
jb
fdiv
push
addr16
or
sbb
add
cltd
mov
jmp
fstl
nop
xor
imul
lret
jp
mov
mov
push
enter
fs
mov
ret
add
jmpw
jl
outsl
ficoml
lahf
je
jae
mov
ljmp
add
mov
xchg
daa
cmp
sbb
inc
aas
adc
pop
mov
insl
mov
enter
mov
inc
popa
cmp
movsl
movsb
addr16
mov
jnp
sub
inc
mov
aaa
lea
mov
push
in
sub
jo
popf
mov
icebp
ret
out
jp
mov
add
sbb
cltd
movsl
jne
xor
aad
aad
jnp
cmp
dec
sub
adc
cmc
mov
aas
insl
pop
outsb
je
movsl
mov
mov
int3
and
mov
fcmovne
pop
pop
inc
negl
andb
paddsw
out
jb
jle
dec
outsl
cmp
fcomps
fwait
mov
dec
jmp
mov
or
mov
test
jno
adc
xor
adc
sbb
andl
in
inc
aam
mov
arpl
cmp
mov
dec
mov
xor
mov
lods
mov
stc
jae
es
leave
adc
frstor
out
in
jae
push
scas
adc
loope
jle
mov
push
push
outsb
and
enter
add
imul
ja
sbb
jb
stc
sub
jle
adc
idiv
int3
jne
cli
jne
lock
mov
call
daa
sbb
les
faddl
in
out
sub
sbb
ds
add
cmp
adc
or
push
xchg
lods
jge
mov
fwait
xchg
inc
sbb
jnp
loopne
jmp
arpl
nop
int3
xchg
loop
mov
push
and
mov
pop
ss
imul
int3
movsb
std
mov
aam
or
adc
bound
and
test
push
xor
mov
aaa
pop
xor
sbb
xchg
pop
mov
ret
mov
inc
push
mov
pop
loop
xchg
sahf
cmpsb
fcomps
scas
inc
push
push
jns
aam
std
out
sbb
fdivrl
enter
mov
inc
cmp
or
xchg
leave
pop
xchg
jbe
popf
clc
dec
mov
loopne
xor
rcrb
cmc
cltd
mov
xchg
and
repnz
addr16
fs
stc
test
mov
inc
xchg
sbb
out
out
jl
push
xchg
bound
bnd
popf
adc
fwait
cmp
int3
jmp
jb
cmp
jle
imul
and
js
lahf
iret
pop
dec
in
or
push
lods
lock
mov
add
xchg
add
mov
jecxz
add
rcl
add
inc
jp
mov
gs
les
jmp
lcall
in
inc
fidivl
and
mov
lret
dec
and
sbb
cs
rol
movsb
or
cwtl
pop
xchg
cmpsb
and
fwait
sarb
or
dec
jmp
xchg
repnz
push
call
addl
mov
mov
rol
sbb
test
sub
mov
and
or
lock
dec
sbb
mov
cmp
xchg
push
fwait
xor
decb
repnz
fcomps
int3
sbb
fldt
push
stc
and
xchg
lods
jp
je
mov
xor
jg
shll
mov
pop
mov
lods
push
inc
inc
mov
inc
cmp
fbld
inc
les
mov
inc
jo
dec
jbe
mov
mov
xor
outsl
mov
sbb
insb
cmp
decb
xor
fwait
sti
in
lahf
push
cmp
repnz
jo
and
pop
xchg
mov
mov
cmp
insb
jo
not
fcmovnu
shlb
mov
into
sub
dec
xchg
inc
les
lea
subb
xchg
inc
ja
push
addr16
cmpsl
ret
sbb
fldcw
dec
push
cmpsl
imul
adc
mov
repz
cmp
jge
loope
divl
aaa
mov
jno
jl
and
mov
ret
mov
sarb
test
xor
out
push
jo
inc
enter
and
pop
data16
add
or
pop
and
jmp
mov
mov
dec
add
fildl
inc
lcall
lea
cmc
stc
fldt
jb
sub
mov
fsubr
pop
push
add
scas
cmp
adcb
xor
lret
sti
inc
push
pop
ds
cmp
mov
or
leave
pusha
mov
subl
shl
add
jp
jns
add
mov
test
js
add
or
fldcw
scas
mov
sbb
sbb
pop
lahf
mov
push
ja
dec
cmp
sbb
mov
and
jae
and
fidivrl
adc
fs
addl
adc
cmp
mov
pop
jno
pop
add
mov
jle
push
or
dec
mov
test
jnp
add
mov
lret
pop
icebp
xchg
add
popf
mov
xchg
fwait
add
out
adc
lock
ret
enter
data16
sub
out
test
sahf
fsubrp
add
cmp
iret
pushf
fnsetpm(287
cmp
jge
add
addl
xlat
add
cmpsl
add
lods
pop
add
mov
sbb
add
mov
jmp
mov
cmp
mov
cmp
cmp
push
adc
lea
scas
cwtl
sarl
shrl
arpl
push
push
fucomi
out
loop
mov
push
decl
jp
push
jns
ficomps
pop
ficoms
sbb
mov
jb
dec
dec
pushf
notl
ljmp
imul
out
mov
mov
mov
hlt
subb
push
lea
adc
mov
call
into
add
cmp
lds
lock
mov
pushf
test
sbb
dec
and
idivl
dec
push
xor
pop
das
mov
mov
mov
mov
je,pn
xchg
jle
xchg
sbb
lcall
xor
das
push
push
out
cmpsb
pop
sub
mov
mov
sub
fs
jbe
pop
repz
lret
ret
sub
xchg
ror
nop
mov
jo
popf
push
xlat
cmp
xor
in
aaa
sbb
jmp
repz
mov
fisubrs
jmp
sub
sbb
mov
jno
push
lcall
inc
push
in
push
or
jo
add
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
add
imul
mov
mov
mov
add
or
mov
mov
mov
add
xor
mov
mov
mov
add
and
mov
mov
mov
lea
mov
mov
mov
sub
add
mov
mov
xor
add
jne
mov
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
add
imul
mov
mov
mov
add
or
mov
mov
mov
add
xor
mov
mov
mov
add
and
mov
mov
mov
lea
mov
mov
mov
sub
add
mov
mov
xor
add
jne
mov
mov
xor
lea
mov
mov
xor
add
jne
jmp
mov
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
add
imul
mov
mov
mov
add
or
mov
mov
mov
add
xor
mov
mov
mov
add
and
mov
mov
mov
lea
mov
mov
mov
sub
add
mov
mov
xor
add
jne
jmp
mov
mov
xor
jmp
repnz
repz
mov
js
jmp
adcl
addl
jmp
inc
rcrb
fcom
icebp
adc
out
nop
outsl
ja
and
jb
cmc
cld
jg
xor
pop
mov
mov
inc
test
movsb
jl
stos
enter
inc
jmp
or
inc
jmp
push
pop
mov
popf
dec
icebp
mov
movsl
in
addr16
out
sub
add
dec
mov
ret
sar
pop
sbb
dec
push
mov
sbb
mov
and
push
pushf
std
jge
stos
js
faddl
inc
aaa
test
add
cmp
jle
aam
inc
inc
in
push
outsb
outsb
pop
inc
push
int3
movsl
lods
shlb
jbe
push
das
inc
inc
inc
push
mov
cltd
sbbb
mov
xchg
mov
stc
or
inc
push
pop
sbb
lret
outsl
jecxz
lods
xchg
mov
push
lahf
enter
jb
mov
jae
pushl
sub
inc
lea
loop
add
in
sbb
push
pop
js
xchg
outsb
fisubs
dec
push
aaa
shr
shlb
add
mov
adc
inc
jmp
bound
sub
dec
push
jg
cltd
lds
fistl
inc
arpl
rcll
std
cmpsb
pop
lret
ficompl
outsb
int
mov
icebp
ffree
pminub
mov
sbb
lahf
adc
xchg
out
lahf
out
test
pop
sub
idivb
xchg
mov
out
stos
fnstcw
lar
fucom
add
push
outsb
mov
jmp
mov
and
stos
mov
in
jl
sti
aas
lahf
inc
cld
int
pop
mov
dec
out
lret
into
stos
mov
iret
leave
inc
mov
aaa
mov
fdiv
dec
jb
lods
stc
popa
xchg
pop
inc
rolb
movsl
loop
sbb
pusha
jecxz
inc
mov
repnz
arpl
dec
loop
lahf
icebp
fnstenv
pop
and
les
adc
nop
fiaddl
sub
ds
mov
mov
pop
movsl
repz
mov
sub
xchg
jmp
test
sub
out
sbb
fs
or
mov
addr16
push
xor
and
arpl
nop
imul
mov
mov
fisttpl
xchg
dec
sub
cmc
pop
push
dec
imul
inc
cmp
adc
lods
insl
mov
push
add
or
decb
mov
ljmp
or
inc
ja
xor
add
into
fcmovnu
dec
inc
fdivs
xchg
or
dec
out
nop
test
outsl
icebp
fidivl
pop
adc
in
cmp
xchg
orl
push
sahf
or
xchg
push
push
push
fcom
in
outsl
push
push
out
pop
scas
mov
je
in
jno
sbb
les
or
inc
fucomi
cld
fsubr
loop
lret
fidivs
mov
imul
jl
add
or
ss
stc
in
iret
dec
insb
mov
inc
in
data16
outsb
xchg
xor
fildl
into
jb
js
jg
add
push
loop
aas
xchg
lcall
xlat
inc
mov
cld
cld
fcompl
mov
lahf
shrl
xchg
cmpb
mov
jne,pt
mov
push
fs
add
outsb
pop
mov
fisubrl
int
loop
clc
xor
lods
mov
aam
xchg
xor
inc
push
in
jnp
icebp
dec
scas
cmp
adc
dec
mov
fcmovnu
cmc
mov
cmp
sahf
js
fwait
push
inc
dec
loop
push
pop
call
sbb
add
xchg
leave
xchg
mov
lea
ret
xchg
leave
sbb
jno
inc
or
popf
mov
or
jae
lods
xlat
mov
cmp
add
add
xchg
dec
mov
mov
aas
mov
les
sbb
repz
cmp
movsb
xchg
shlb
adc
popf
stos
imul
out
xor
popa
jnp
mov
sbbl
cli
jecxz
in
push
inc
popa
jne
data16
out
lods
fwait
or
sbb
dec
aad
ret
mov
push
rorl
xchg
adc
mov
loop
pop
push
scas
inc
cmpl
sbb
pushf
ret
fs
pop
push
fstps
call
test
aaa
mov
sahf
jo
and
rcrl
jmp
jo
ret
jbe
sub
daa
sub
jo
jg
fstps
adc
inc
test
pop
adc
das
in
push
pop
lea
stc
loop
mov
nop
add
in
push
cmp
insb
xchg
xor
jg
jo
cmpsb
jno
push
inc
ljmp
dec
adc
andb
adc
jbe
clc
outsb
out
jecxz
mov
dec
mov
pop
fisubs
inc
pusha
inc
cmp
cmpsl
shll
inc
pop
mov
movsl
jnp
cmp
cmp
xchg
pop
int3
sbb
fists
lahf
out
pop
out
in
xchg
rcrb
add
lock
or
ss
loopne
repz
dec
sbb
imul
or
orb
hlt
jmp
je
lds
jp
fmull
xor
aas
mov
mov
push
out
mov
pusha
mov
pop
xor
stc
and
add
cmpsl
add
shll
loop
aas
inc
out
pop
add
jmp
mov
in
cmpsb
daa
mov
hlt
inc
les
pushf
and
imul
notl
add
push
and
repnz
or
int
test
ja
xlat
js
pushf
jecxz
leave
pop
dec
movsb
or
cld
aad
and
arpl
inc
push
jp
xchg
cmp
pop
cld
xor
push
out
in
inc
fsubr
scas
popf
sub
cli
push
stos
push
push
sub
jle
sub
sbb
xor
add
data16
lock
jmp
test
inc
imull
adc
xor
sub
push
fsubr
mov
mov
adc
lea
mov
fdiv
mov
lcall
stos
cwtl
stos
cwtl
sti
inc
aad
ja
dec
jl
int
pop
sub
popa
sub
sahf
add
adc
pop
xchg
pop
xor
inc
cmpb
fisubrs
adc
cmp
push
sub
enter
or
pop
lods
ljmp
fdivr
addr16
rol
xchg
xchg
push
mov
fadds
aaa
into
insb
mov
pop
ss
push
sbb
jns
cli
pop
lds
adc
aam
add
loope
jnp
add
add
push
cmc
int3
xor
jno
xor
push
or
xchg
ja
into
icebp
add
mov
addr16
mov
rclb
push
fwait
add
imul
jecxz
and
xchg
loopne
cmc
adc
into
add
add
mov
clc
dec
loope
xlat
mov
mov
add
icebp
mov
insb
test
xchg
loope
enter
adc
xchg
inc
addr16
pop
stos
inc
int3
xchg
jb
out
push
dec
popa
or
jmp
push
scas
cmp
cld
cli
sub
xor
mov
into
mov
jno
and
sbb
pushf
add
mov
or
sub
sbb
jno
cwtl
into
popa
mov
xor
jle
mov
xorl
cmp
fmulp
test
ja
jb
fsubrs
repnz
cmp
and
xor
adc
aas
cld
addb
nop
inc
in
mov
mov
push
sahf
test
lods
popf
jae
or
jb
push
xor
fbld
push
push
mov
aaa
inc
mov
outsb
adc
xchg
cltd
das
lods
push
xor
add
imul
pop
and
or
push
fsubl
fwait
add
jmp
push
lea
xchg
fcmove
scas
mov
lds
repz
sahf
adc
in
jb
sahf
cli
adc
into
into
repnz
cmp
push
mov
pop
mov
pop
orb
jecxz
out
ds
roll
lea
jne
ret
mov
out
dec
sub
nop
xchg
mov
xor
cmpsb
addr16
push
test
aam
push
lods
pop
cmp
dec
add
stos
aad
mov
jbe
and
lods
jge
jo
fnstcw
pop
cs
imul
data16
xor
jno
sbb
lcall
mov
loopne
add
pusha
int3
xchg
inc
nop
jb
roll
dec
xor
out
push
mov
cmp
pop
out
fdiv
jl
cvttps2pi
mov
shll
bt
fnsave
push
fidivl
push
add
scas
pop
inc
idivb
mov
jb
jmp
cs
xchg
aaa
pop
in
xor
cmpsl
addl
push
xlat
push
leave
pushf
cmp
cmp
push
lahf
bound
lock
test
and
push
jl
xor
outsl
fwait
xor
bound
pop
xchg
dec
and
mov
or
shrb
ljmp
outsl
sbb
lret
hlt
mov
jmp
sbb
pusha
cld
rclb
test
sub
pop
push
mov
lret
mov
jmp
divl
inc
pop
mov
jnp
mov
shrl
xchg
ljmp
xor
mov
repz
insl
push
arpl
push
mov
inc
call
lahf
mov
cltd
mov
inc
jp
and
adc
and
bound
add
pop
xchg
sti
test
sahf
data16
xchg
fisttpl
movsl
fldcw
mov
repz
addr16
in
daa
and
hlt
mov
pop
cmpsl
push
xchg
fstl
ljmp
ficoml
and
pop
in
add
popf
lods
mov
adc
sub
lock
dec
inc
push
xchg
mov
dec
lret
cmp
mov
enter
mov
sub
pop
mov
cmp
cmp
unpckhps
mov
insl
mov
loope
mov
cld
orb
test
and
inc
cld
xlat
imul
ja
push
add
arpl
lcall
cltd
insb
clc
and
jg
pop
mov
lods
shlb
sub
rclb
jl
pop
inc
xchg
nop
xor
cmp
mov
ss
lret
xor
inc
sbb
dec
mov
dec
jnp
cmp
idivb
jmp
cwtl
adc
jge
jne
mov
out
test
sub
dec
lock
xor
xor
cwtl
jae
dec
add
push
cltd
mov
outsl
mov
inc
movsl
pusha
jbe
cwtl
sar
out
jmp
fwait
imul
sbb
xchg
and
push
cltd
insl
stos
jp
cmp
shr
adc
adcl
sub
inc
sub
push
jmp
push
jno
push
imul
add
xchg
data16
das
mov
sub
repz
rolb
negl
jns
push
stos
call
scas
jp
xchg
ljmp
stc
and
subl
jno
pushf
inc
out
inc
nop
scas
lock
xchg
aam
sbb
cmp
cmp
aaa
add
ds
cld
inc
pop
lea
sbb
xor
movsb
ror
ret
movsl
inc
and
out
mov
lret
adc
cmc
adc
jl
leave
jg
pop
jbe
sub
dec
pop
and
scas
xor
mov
loope
xor
les
mov
jns
cmp
inc
dec
ficoms
std
and
js
clc
movsb
rclb
or
popa
jbe
pop
pop
lds
pusha
push
xorl
xorb
mov
scas
adc
dec
test
mov
sbb
mov
mov
xchg
andb
jnp
lret
xor
mov
in
cmp
int3
scas
loope
in
stos
push
in
lods
pop
jp
fisubl
sbb
push
mov
lcall
ret
xchg
gs
push
or
stos
sbb
pop
call
jmp
in
in
jb
dec
jmp
push
iret
add
loope
cmp
mov
out
fisttps
in
sub
jb
call
daa
xor
jnp
mov
mov
stos
mov
push
test
repnz
dec
and
cmpsl
scas
sbb
jecxz
jb
xchg
ret
dec
jmp
xor
in
inc
cmp
adc
bts
pop
fimuls
mov
mov
xchg
and
push
lea
pause
fsubr
lock
test
dec
js
lret
gs
sub
mov
ljmp
sbb
aam
pop
xor
lds
pop
lcall
sub
xchg
fisttpll
pop
add
mov
pop
or
adc
mov
add
fwait
xor
or
xchg
or
data16
or
jno
aad
popa
roll
xchg
fs
fcompl
xchg
push
aad
out
sbb
dec
xchg
jmp
push
push
out
push
sbb
xchg
xor
push
cmp
or
sbbb
add
xchg
inc
or
idivb
xchg
jl
sub
inc
push
mov
push
cmpl
out
inc
sbb
int
out
jp
cwtl
and
cmp
sbbb
lret
into
and
cmp
stos
lret
inc
jle
ficoml
push
call
xor
jns
test
sahf
enter
xor
out
stos
cli
nop
rol
inc
insl
icebp
jae
test
and
mov
rcl
ss
aam
add
or
cmp
jb
inc
cmpsl
lds
jne
jmp
xchg
add
add
fnstcw
lds
adc
and
push
jg
in
dec
out
ret
pop
sbb
sub
mov
sub
xchg
pop
rorl
mov
ljmp
fadds
jb
nop
enter
clc
sti
sbb
xchg
rcrl
jl
jns
test
mov
ja
xchg
add
or
cmp
pop
add
mov
int3
jbe
pop
inc
mov
int
repnz
jnp
aas
pop
insl
push
pusha
cmp
shll
cmp
fnsave
pop
mov
sub
loope
push
stos
mov
mov
out
negb
dec
fnstenv
mov
lret
push
ret
enter
data16
sbb
faddl
std
push
sub
adc
cmp
clc
mov
frstor
jo
pop
xor
test
xchg
out
add
mov
in
fs
ljmp
pop
cltd
add
push
dec
or
or
and
adc
lods
nop
lahf
shl
inc
mov
cmovne
out
dec
leave
and
movsl
flds
in
mov
sti
xorl
mov
mov
out
cs
imul
sarl
sbb
cmp
adc
cmp
inc
mov
sbb
icebp
rorb
xor
out
pop
cmp
inc
popf
stos
test
repnz
in
dec
stc
fs
mov
test
jbe
adc
icebp
imul
or
int
insl
xchg
adcl
imul
jle
xchg
scas
cmpsb
aas
ret
ljmp
push
pop
inc
push
adc
enter
jnp
or
adc
push
push
jg
xlat
aas
adc
nop
mov
push
mov
inc
adc
leave
hlt
inc
test
ds
insl
out
xchg
adc
and
ds
stc
cmp
or
cmpsl
inc
lret
sub
pop
dec
push
pop
push
mov
xchg
mov
movsb
mov
rorb
adc
cmp
ja
mov
pop
nop
bound
clc
sbb
inc
ret
fucomi
jne
mov
xchg
movsb
or
jl
stos
jecxz
mov
or
inc
inc
xchg
into
outsb
mov
sub
lods
outsl
out
sub
sub
pushf
mov
mov
fwait
adc
pop
bound
das
add
sub
and
adc
mov
icebp
mov
les
jbe
xchg
adcb
ret
pop
sub
cs
enter
cmpsb
inc
aad
outsb
mov
mov
cwtl
ret
aam
and
mov
push
cli
jg
aad
loopne
sbb
mov
dec
out
jge
pop
add
lret
or
dec
cmp
sti
lea
fnstenv
add
adc
popa
fisubrs
sbb
jp
imul
sbb
and
mov
pop
inc
test
adc
lcall
sbb
push
in
call
sub
and
popa
inc
cmp
lret
cli
repnz
je
call
imulb
and
test
stc
fnsave
insl
sbb
pop
add
and
in
je
aas
mov
mov
cld
insl
repz
sti
filds
out
rorl
sub
jae
std
inc
add
sbb
out
cmp
dec
leave
leave
mov
arpl
or
sub
orb
insb
out
mov
push
ficompl
ss
ret
xor
inc
sbb
pushf
ds
mov
xor
minps
push
xor
gs
xor
repz
cmp
add
ficomps
xchg
inc
int
jae
or
mov
rorb
dec
xor
in
jp
test
xor
push
pop
add
test
dec
clc
or
xchg
mov
kmovw
loope
mov
cmpl
push
into
dec
mul
test
or
loope
inc
and
push
jns
cld
xor
pop
daa
dec
dec
mov
repz
das
popa
int
hlt
mov
sarl
movsl
out
push
jge
sbb
int
or
sub
mov
shll
orb
frstor
and
xchg
add
fstps
test
add
lds
cmp
lock
adc
dec
xor
push
insl
lds
iret
les
mov
pushf
push
push
mov
mov
and
in
das
dec
lahf
mov
xor
push
dec
addr16
out
adc
sub
leave
je
rcrb
adc
out
roll
xchg
inc
xor
dec
inc
pop
mov
xor
dec
hlt
popa
mov
aad
jb
cmp
rcll
fsubrl
cmp
cmp
and
stc
movsb
or
std
mov
push
fcompl
jne
call
decb
mov
enter
movsl
insb
daa
xor
mov
fnsave
loope
mov
shrl
xor
xor
inc
xorb
adc
int3
enter
mov
mov
sbb
mov
pop
insb
mov
leave
repnz
mov
dec
xorl
aaa
icebp
mov
sbb
mov
insb
fimuls
out
xor
sub
sbb
fwait
sbb
jmp
add
push
lea
dec
add
mov
aaa
push
stos
mov
dec
sbb
mov
clc
fdivl
pop
imul
jl
jo
ficoml
iret
subl
mov
cmpsl
fbld
jp
fldcw
push
fisttpl
xchg
jae
mov
xchg
out
imul
sbb
hlt
sbb
lret
nop
js
pop
fldcw
fs
arpl
mov
lock
sub
mov
and
arpl
sbb
ds
push
lock
cwtl
push
cmp
sub
out
test
and
test
and
adc
insb
pop
xchg
inc
fdiv
sub
fistpll
je
pop
dec
fidivrs
jl
dec
lret
or
shlb
dec
jecxz
inc
pop
pop
pop
mov
push
int3
or
or
mov
dec
push
and
and
or
das
mov
pop
subl
shl
mov
add
lcall
add
mov
cltd
les
cwtl
mov
jmp
ss
xchg
incl
jl
sub
ja
inc
xchg
xchg
gs
sub
sbb
mov
stos
inc
scas
sbbl
stos
add
pop
and
dec
arpl
xchg
std
ja
xchg
repz
cli
clc
xlat
les
lods
test
insb
shr
pop
fs
pop
mov
ss
or
pop
add
faddp
nop
dec
mov
dec
mov
sub
inc
pushf
push
outsl
add
adc
push
or
scas
jl
lods
fistpl
ja
sub
gs
rcr
mov
dec
enter
lahf
fwait
mov
ret
mov
push
mov
mov
div
in
ljmp
scas
dec
loop
cmc
out
xor
scas
sbb
pop
out
cmp
std
dec
loop,pt
in
mov
adc
push
mov
push
insb
xor
push
js
sub
adc
jnp
ljmp
lret
and
loop
in
shll
mov
add
rorl
out
xlat
sub
in
sub
popf
push
xor
or
and
ljmp
inc
mov
into
pop
inc
push
cwtl
add
add
ja
pop
pop
aam
ret
pop
shl
mov
pop
gs
jl
cmp
xchg
iret
jnp
sub
clc
call
out
or
inc
popf
mov
add
jne
les
push
mov
scas
jae
and
fdivs
mov
push
fwait
sbb
add
pop
mov
or
fisubrl
imul
lret
mov
addr16
pop
jae
mov
pop
pop
aam
ret
mov
arpl
mov
rolb
fs
mov
dec
dec
movl
insl
sub
lahf
mov
dec
mov
negb
sub
ja
lret
bound
clc
scas
test
cmpsb
mov
test
push
clc
bound
cmpsl
je
fst
sub
push
mov
xchg
sub
iret
add
test
xor
in
jb
dec
lahf
xor
dec
aas
ljmp
sub
ljmp
or
mov
jg
jmp
or
mov
push
jo
mov
mov
xchg
pop
mov
or
add
mov
sbb
les
cli
lret
xchg
icebp
sti
mov
repnz
xor
jae
out
or
or
pushf
imul
jne
push
addb
ficompl
push
out
inc
xor
dec
cwtl
out
test
adc
push
jno
inc
push
gs
xorl
je
push
adc
leave
sub
push
addl
daa
sbb
sbb
pop
xor
decl
std
xchg
fwait
testb
mov
dec
addr16
push
push
lock
add
inc
sbb
xchg
fnstsw
lret
in
push
mov
mov
mov
movsl
test
pop
mov
mov
ds
outsb
mov
clc
imul
mov
icebp
xchg
mov
sbb
out
ficoms
jb
call
bound
push
jb
nop
lock
fs
mov
stc
add
addr16
lahf
popf
push
jp
fnstenv
inc
sub
inc
sbb
push
xchg
repnz
xchg
jmp
imulb
outsl
or
in
lods
and
push
imul
sbb
lds
jns
inc
dec
pop
jmp
into
loope
mov
xchg
loop
testb
shl
dec
xchg
inc
imul
mov
jl
out
mov
movsb
je
movsl
imul
movb
lret
lcall
mov
and
stc
sbb
add
xchg
sub
sub
adc
les
dec
mov
adc
int
leave
daa
jmp
rcrb
mov
nop
cmp
fxch
outsb
jnp
mov
in
in
and
outsl
sub
adc
mov
movsl
pop
push
stc
cwtl
add
xchg
jecxz
mov
xchg
push
jnp
repz
rolb
leave
adcb
inc
subb
data16
inc
xlat
pop
mov
outsl
mov
add
int
sti
rolb
mov
sub
cwtl
fldt
and
data16
sbb
lods
sub
mov
jbe
push
sub
xchg
into
repz
lea
ds
push
insb
jno
cmpsl
fmull
test
pop
in
andl
cmpsl
dec
in
shll
add
pusha
cltd
lea
scas
add
xlat
dec
jmp
xor
mov
cmp
pop
add
lcall
jecxz
push
ret
jmp
shrl
aaa
pop
jns
inc
xchg
sahf
insb
sbb
push
add
mov
sub
cmp
scas
add
cmpsb
and
add
call
fs
push
lds
xchg
pop
imul
add
movsl
xor
and
sub
adc
adc
dec
cmp
mov
outsl
movaps
mov
cmp
lcallw
inc
push
iret
mov
cmp
and
jmp
dec
das
jle
es
xor
sbb
in
mov
sub
fcom
mov
sub
je
clc
mov
cmp
or
scas
out
flds
push
sub
aaa
stos
shlb
pop
cmp
rcll
xchg
inc
into
push
push
xchg
shl
inc
dec
xlat
sub
ror
sub
lea
ficomps
jnp
mov
sub
jns
movsl
xor
lret
hlt
sub
cmp
adc
and
iret
xchg
xor
repz
pop
and
fcmovbe
das
sbb
pop
cmp
mov
es
jns
test
arpl
cmp
arpl
mov
lds
mov
sti
aas
inc
push
mov
mov
add
xor
ret
jae
mov
dec
call
mov
mov
sbb
xor
rcrb
test
push
popa
jecxz
adc
outsb
jae
in
or
scas
ret
xlat
mov
jbe
cltd
lcall
mov
push
inc
call
das
js
sbb
xchg
push
je
rclb
mov
mov
mov
pop
fs
sbb
shl
push
arpl
movsl
jg
xlat
out
outsb
scas
mov
adc
decb
icebp
fbld
or
jo
cmp
iret
adc
inc
in
pop
orb
sbb
inc
bnd
test
cli
pusha
cli
fsub
out
inc
mov
movsb
or
push
divl
add
cmp
push
jne
lds
test
xchg
ret
mov
and
icebp
dec
mov
lea
jb
mov
iret
mov
sbb
ret
or
dec
xchg
mov
popf
push
sbb
outsb
shll
lds
imul
mov
bound
in
das
call
test
mov
fwait
jno,pn
insb
loop
movl
pop
insl
push
test
dec
xor
sarl
push
pop
hlt
sahf
div
nop
dec
jnp
xor
pop
inc
jecxz
push
sar
sbb
and
xor
xor
lods
dec
sbb
in
push
xor
ljmp
inc
mov
dec
jp
sub
sbb
or
mov
xor
fwait
cmp
std
punpckhdq
sbb
sbbl
add
and
fwait
mov
inc
adc
or
sub
and
lret
bound
sub
fisubs
in
call
cwtl
aaa
test
addr16
and
orb
push
enter
cmp
push
test
sub
inc
int3
or
jle
pop
and
xchg
out
pusha
and
mov
jb
push
sarl
leave
mov
cmp
jmp
mov
test
filds
adc
xchg
divb
sbb
and
push
add
clc
inc
sbb
ret
aam
inc
pusha
inc
xchg
mov
fisttpll
pushf
mov
fsubl
mov
pop
mov
sti
ljmp
lods
push
pop
mov
lock
dec
sub
shlb
dec
aas
cmp
jl
and
jge
jo
xchg
sbb
out
mov
and
or
ja
fisttpl
outsl
imul
scas
adc
jne
adc
cs
sub
jg
aam
dec
inc
int3
jle
cmp
stos
add
dec
xchg
int
mov
mov
cmpsb
arpl
jnp
sbb
sub
jge
cmp
fcmovne
ja
vmovaps
cmp
mov
scas
inc
aad
xchg
icebp
cmp
xor
js
sbb
lods
mov
jns
cltd
leave
fnstenv
fistpll
mov
jnp
push
repnz
fistps
push
pop
outsl
or
inc
scas
xlat
mov
dec
dec
mov
dec
cmp
jmp
dec
xchg
fstp
add
add
push
scas
mov
js
inc
cmp
sub
pop
pop
mov
pop
jg
sbb
push
and
roll
daa
mov
jmp
cmp
add
lock
sahf
test
fiadds
push
and
jns
mov
pusha
xchg
adc
gs
sbbb
scas
adc
sbb
cwtl
clc
inc
aas
mov
inc
jle
cli
ficomps
lcall
std
or
fstps
xchg
push
inc
add
xor
imul
aad
pushf
lea
repnz
lock
fsubrs
push
mov
add
mov
pushf
in
sbb
jge
aad
and
stos
addb
mov
fstps
in
shll
jmp
fldenv
int
pop
cmp
xor
aam
loope
xlat
and
cmpsb
lock
xchg
add
arpl
pop
sti
sbb
jp
stc
pusha
test
repnz
js
leave
mov
inc
mov
xchg
jb
stos
test
jno
js
mov
vmread
in
mov
xchg
and
je
cltd
push
pop
mov
mov
cmp
cmp
movsl
adc
addr16
cmp
sub
jle
jb
stos
sbb
sub
xlat
mov
dec
push
lods
stos
dec
and
loopne
ljmp
pop
sbb
shlb
cwtl
xchg
fwait
inc
jnp
popf
pop
insb
cld
shll
nop
ret
pop
cmp
dec
outsb
addr16
jmp
iret
pop
inc
cmp
scas
and
pop
jno,pt
lret
sahf
rcrb
je
jmp
pop
jmp
rclb
incl
and
jge
and
ss
push
and
push
sbb
aaa
mov
cmp
repnz
add
ret
xor
bnd
aas
cmpsl
add
movsb
dec
sub
cwtl
fimull
repz
loop
add
bound
dec
jns
lods
hlt
mov
jl
adc
arpl
fistpll
inc
repz
sahf
out
jbe
std
jl
pop
lods
jl
sbb
loope
je
sub
dec
icebp
push
adc
pop
bound
jne
mov
adc
dec
test
leave
jle
lea
out
jns
jbe
mov
dec
inc
pop
xor
dec
fwait
cmp
jmp
adc
lea
popf
loopne
or
push
dec
add
cs
test
out
scas
and
cltd
mov
adc
mov
rorl
lock
mov
jnp
movsl
pop
pop
adc
xor
sub
sub
jmp
adc
test
sub
inc
addb
adc
pop
les
movl
push
adc
push
sarl
mov
loopne
inc
fildll
loop
movsb
push
mov
fadd
and
mov
mov
mov
jbe
in
mov
ror
shrb
mov
push
testb
xchg
or
add
mov
add
add
and
dec
sahf
pushf
pop
lock
mov
pop
xchg
movsb
scas
inc
push
sbb
pop
cmp
xchg
int
out
pop
xchg
jl
push
push
repz
add
stos
cmp
add
jbe
in
jg
mov
mov
out
outsl
fbld
mov
lea
hlt
mov
fistl
jno
mov
js
sub
lods
adc
xorb
or
lret
adc
int
mov
int3
dec
stos
inc
adc
cmp
out
add
fidivl
jmp
xor
add
in
pop
pop
movb
es
gs
andl
dec
xor
addr16
mov
xchg
leave
mov
push
inc
ror
lcall
pop
lods
adc
mov
jl
lahf
popa
xor
divb
nop
push
outsb
fisttps
fwait
adcl
dec
mov
je
adc
jo
lods
out
adc
pushl
icebp
insl
dec
dec
mov
xor
mov
sbb
cmpsb
jp
ja
sar
mov
inc
pusha
pop
leave
xchg
mov
sahf
imul
and
aam
pop
test
xchg
sbb
clc
lock
arpl
sub
popa
dec
inc
je
jo
pop
cltd
add
les
mov
out
repz
in
mov
pop
sahf
jl
lds
lret
daa
in
hlt
inc
iret
es
mov
stos
bound
in
mov
adc
mov
or
ds
lcall
lods
test
dec
mov
movl
jg
jne
cld
addr16
xor
mov
mov
jns
imul
mov
mov
sbb
dec
cwtl
xchg
fsincos
mov
jge
xlat
xchg
fdivrs
lock
mov
ret
imul
aaa
lea
repz
js
cmpsl
ljmp
cmpsb
in
ljmp
sbb
shl
jmp
and
dec
fmul
dec
jbe
mov
movsl
notl
pinsrw
xlat
das
shl
movsb
mov
mov
arpl
add
inc
add
sbb
hlt
data16
pushf
inc
test
movb
sahf
xor
sbb
sub
bound
in
outsl
sbb
leave
pop
xor
add
cli
subb
cmpsl
inc
ds
inc
push
add
adc
xor
mov
rcrl
lock
push
aas
out
repnz
mov
fcmovb
mov
aad
pop
lret
test
inc
push
cmp
mov
lret
hlt
notb
out
fneni(8087
push
pop
mov
outsb
insb
add
sbb
repz
out
add
movq
mov
lret
shll
std
inc
mov
nop
testb
jno
jecxz
scas
mov
ficoml
stos
negb
push
out
cmp
test
fs
insl
mov
xchg
adc
lods
hlt
fidivl
or
mov
dec
gs
push
push
icebp
aad
jno
les
insl
aad
or
sbb
xchg
movsb
in
daa
cmp
inc
jno
out
testl
mov
adcb
gs
cmpsl
xchg
into
outsl
addl
div
lahf
inc
cmp
mov
bound
jmp
emms
inc
add
addr16
imul
jno
rcrl
lods
addr16
mov
xchg
xchg
jbe
dec
xchg
pushf
sbb
add
mov
insl
push
add
adc
fs
push
mov
test
and
dec
mov
in
popa
clc
mov
or
jae
into
repz
ficoml
insl
mov
lods
cli
clc
add
and
ja
cltd
push
lret
adc
mov
inc
repnz
leave
stos
sub
out
cmp
cmpl
daa
mov
enter
push
sahf
pop
push
and
mov
adc
outsb
sub
pop
in
cmp
mov
std
shrb
xchg
fstps
mov
movsl
xor
cld
push
sbb
xchg
mov
sub
les
loop
jns
mov
and
sub
shl
or
aad
and
mov
jb
mov
into
dec
or
cmc
clc
insl
imul
popa
arpl
push
pusha
add
ljmp
xor
or
outsb
mov
cmpsl
popa
sbb
xlat
jg
popa
sahf
mov
aad
das
mov
push
add
dec
inc
xchg
push
push
daa
insb
in
popa
clc
movsl
xor
or
dec
xor
clc
ljmp
cltd
loope
jmp
je,pn
outsb
out
addr16
dec
push
stos
pop
test
dec
cmp
sbb
xor
ret
cmp
fmuls
test
out
sub
mov
aaa
pop
call
insl
or
mov
cmpsb
std
jns
imul
cli
and
mov
cmp
or
and
out
sbb
xchg
add
mul
mov
int
sbbb
xor
sbb
cmp
pop
test
sub
stc
jnp
mov
mov
push
adc
in
cmp
cwtl
adc
mov
sti
loope
cmpsl
pop
jns
scas
jns
push
or
outsl
outsl
imul
xchg
daa
cmp
and
add
jecxz
sbbb
sub
rcr
pop
call
mov
test
sub
test
ds
or
jmp
and
xchg
popf
mov
add
sahf
push
pop
adc
xchg
not
add
inc
clc
les
adc
push
fcmovbe
sbb
sub
and
test
pop
fistpl
pop
shlb
mov
js
mov
clc
mov
in
push
jo
push
xchg
movsb
in
dec
rcrl
sahf
and
pop
or
fsubp
in
scas
cld
pop
xor
movsb
pop
cmova
adc
jne
iret
sub
adc
jo
adc
ret
push
sbb
call
lds
ss
movlps
out
xlat
and
fistps
dec
mov
jmp
jp
sahf
jp
jbe
fbstp
jns
sbb
notb
stos
fcoms
std
jg
ss
sbb
mov
test
jbe
faddl
cmpsl
mov
scas
ret
sbb
scas
ret
out
nop
xor
xor
jns
jne
test
mov
mov
sub
xchg
sub
sbb
lret
dec
push
jle
mov
xchg
or
ss
lds
mov
insb
sbb
shlb
insb
sahf
data16
inc
mov
popa
jae
ds
ret
stos
dec
mov
insb
lock
repnz
xchg
sbb
mov
mov
pop
sub
fidivs
mov
lcall
sub
movsl
pop
imul
xor
addr16
rol
rol
adc
cmp
sub
mov
inc
pop
in
mov
and
loopne
movsl
shl
repnz
sub
dec
ja
mov
and
mov
fwait
cs
and
movsl
sbb
inc
mov
add
sbb
stos
cmc
out
jne
jmp
xor
js
loope
sbb
xchg
divb
out
sbb
inc
std
ss
mov
scas
inc
cmp
xchg
mov
clc
incl
out
mov
pop
loope
sbb
shll
insb
jno
fisttps
dec
sub
cs
imul
jo
sbb
and
inc
je
popf
cmp
sub
call
jg
das
popa
xor
stos
push
xor
or
insl
sarl
sub
dec
cmp
mov
ss
jnp
xor
fbstp
mov
enter
in
jp
cmpb
or
xor
call
push
into
aas
repz
pop
lock
clc
jge
loope
clc
mov
xor
add
pop
xchg
dec
pop
add
test
xchg
xchg
xchg
icebp
das
fisubrs
cmp
fsubrs
mov
data16
fcoms
jle
mov
insl
push
pop
insb
jge
or
out
scas
test
sub
jae
add
lods
pop
hlt
and
sbb
out
jnp
lock
pop
cmp
movups
or
out
sbb
lret
and
push
xchg
xor
jle
movsb
nop
mov
cmpsb
mov
xchg
popf
and
inc
add
sub
adc
mov
sbb
jecxz
xor
push
mov
pop
bound
xsha256
cmpsb
pop
and
pop
push
call
lret
sub
dec
mov
sbb
ljmp
add
dec
pop
sahf
adc
test
pop
rclb
clc
shl
push
inc
stc
add
push
stos
repnz
lcall
push
xorb
add
jl
std
dec
pop
inc
fs
popa
inc
js
pop
jp
add
jge
and
aad
push
jnp
gs
repz
ror
add
aas
fwait
or
add
sub
ret
sti
lcall
push
pop
dec
mov
cmp
shll
mov
jmp
fimull
jp
xor
xor
xchg
jnp
sub
test
cltd
pop
mov
or
mov
movsl
scas
sub
lods
cmp
push
push
aaa
punpckldq
popa
insb
shll
popa
mov
adc
sbb
daa
fists
out
inc
or
push
stos
push
mov
mov
hlt
inc
xchg
push
inc
and
pop
lods
nop
pop
or
cmp
in
loop
jbe
adc
xor
mov
cwtl
mov
idiv
push
hlt
push
lock
ror
in
nop
or
loope
xor
pusha
leave
mov
xchg
scas
mov
sbb
aam
pop
and
stc
fbstp
popa
cmp
stos
or
jnp
inc
and
bound
jno
add
adc
jno
fninit
pop
pop
pop
fimull
inc
lret
pop
jno
mov
sbbb
and
inc
dec
mov
mov
pop
inc
insl
sub
lods
mov
lods
cmp
lcall
push
dec
mov
add
enter
push
pop
or
popf
bound
adc
jne
xchg
aam
jo
es
les
xchg
jb
mov
push
or
aam
addr16
nop
je
push
cmp
push
vprotb
jp
frstor
test
dec
jns
and
ja
xor
cmp
test
xchg
cmp
sbb
lea
jg
push
sub
dec
xchg
or
sbb
jno
stos
adc
aas
or
push
pop
nop
fdivrs
inc
xor
je
test
sub
or
push
les
stc
and
lds
pop
pop
xchg
popa
fdivr
es
sub
pop
cmc
in
mov
jb
outsl
and
push
inc
mov
fs
rcll
sub
sub
sub
push
js
inc
xchg
dec
mov
ja
int
ds
divl
xchg
mov
cmc
add
cmpsl
sahf
orb
add
or
or
ss
jns
xor
pop
cs
lcall
std
mov
pop
iret
pop
ja
pop
test
out
jno
lcall
push
pop
in
decb
mov
ret
mov
addr16
mov
lret
out
cmpsl
gs
data16
jg
adc
push
mov
out
ljmp
xor
mov
push
int
push
iret
out
hlt
nop
into
xor
xchg
and
loopne
ss
dec
dec
flds
cli
popl
pop
imul
inc
scas
sbb
imul
pop
add
loopne
add
insl
repnz
mov
or
mov
pop
cmp
ja,pn
cmp
lahf
call
cmp
cmp
dec
mov
int3
sbb
mov
test
clc
cmp
push
clc
adc
mov
sbb
aam
lret
imul
jle
xchg
test
out
test
in
pusha
sbb
jns
dec
gs
cmc
mov
mulb
mov
and
rorb
fstpt
xchg
cmp
sub
ljmp
fiaddl
daa
jne
shl
mov
add
in
sbb
fadds
or
cmp
mov
insb
inc
sub
loopne
aaa
lock
je
lahf
xchg
shlb
mov
loopne
aam
mov
dec
cmp
paddq
out
or
push
pop
xor
sub
xchg
xor
stc
inc
add
xchg
psubusw
lcall
movsl
in
aam
sub
sahf
inc
xchg
orl
add
or
jg
and
adc
insl
dec
add
insb
andl
dec
cmpsl
add
inc
xor
hlt
and
in
loopne
add
popf
pop
mov
lea
dec
data16
fdiv
lea
fimuls
mov
and
jp
fisubs
fadd
xchg
sbb
mov
cmpl
iret
and
test
inc
fsubs
add
push
sarl
sbb
push
repnz
imul
subb
push
cmp
sub
test
js
lock
fs
and
ret
fxtract
fbstp
data16
lock
aas
add
pop
cmpsb
lea
iret
push
jno
xchg
jae
and
cmpsl
ret
addl
inc
test
int3
inc
out
xchg
jbe
mov
adc
aad
pop
mov
mov
stc
push
lcall
int
fisubrl
mov
cmpsl
sbb
mov
push
xchg
mov
vmxoff
jp
mov
push
insb
out
out
lock
mov
ret
mov
das
iret
sbb
inc
or
shll
les
mov
xchg
push
add
jne
cmp
sub
mov
mov
lods
and
lahf
inc
jne
mov
cmp
push
push
shll
push
add
insl
or
dec
pushf
inc
pop
loope
mov
shrb
out
cwtl
je
cmpsb
in
inc
popa
mov
pusha
je
mov
mov
stos
movsl
das
jae
ficompl
std
mov
pushf
js
out
mov
fisubrl
add
ljmp
gs
sbb
cld
or
lods
loopne
and
and
adc
mov
das
xchg
lods
int3
cli
idivl
inc
push
cli
pop
scas
jmp
outsl
cmp
inc
scas
jne
and
mov
pop
cmp
adc
or
adc
adc
stos
cmp
arpl
std
push
jecxz
push
test
fisubrl
sbb
pop
pusha
sub
push
sbb
icebp
ret
pop
inc
pop
add
push
jle
sbb
xchg
fcoml
xchg
jnp
pop
daa
mov
rolb
aam
dec
subl
dec
sub
push
or
lea
cmp
out
hlt
aas
add
outsb
in
addr16
sahf
lahf
ljmp
mov
repnz
pop
adcb
cwtl
lods
imul
ja
stc
or
add
mov
lds
jo
movsl
push
xor
push
push
xchg
inc
subl
xchg
stos
lods
adc
aas
push
mov
jno
and
out
clc
mov
hlt
xchg
scas
dec
inc
mov
inc
jl
pushf
xchg
bound
std
xchg
jae
push
fldl
cmp
inc
ja
mov
aad
js
fistps
cmp
mov
loop
lea
jnp
push
inc
addb
adc
mov
and
fstl
xchg
cmpsl
leave
xor
lahf
mov
sbb
inc
movb
sbb
xor
popf
dec
clc
div
jle
mov
movsl
aad
test
and
inc
loope
jne
jnp
pop
stos
gs
inc
mov
mov
fnstenv
pop
cwtl
je
shll
test
aaa
and
lahf
lahf
out
mov
inc
dec
dec
aaa
mov
jmp
call
add
jne
xchg
notl
sbb
mov
sti
lret
xor
dec
jne
cmovns
into
js
jmp
repz
mov
xchg
adc
in
nop
mov
or
add
lds
jae
popf
loopne
out
sub
dec
insb
dec
and
jae
xchg
or
mov
stos
movsb
push
pop
jae
ficoml
mov
jne
sbb
pop
pusha
ds
bound
stos
lcall
or
aaa
ficoml
xor
inc
repnz
cmpsb
mov
add
mov
fistpl
and
iret
cmp
pop
repz
push
xchg
cmpsb
mov
repz
add
call
mov
sub
sub
in
pop
or
fstps
or
xor
movsl
stos
cwtl
xchg
jecxz
cwtl
test
in
lretw
xlat
add
jecxz
fucom
inc
inc
cmc
jne
xchg
arpl
test
lods
xchg
sbb
adc
and
cmp
add
mov
or
pop
push
mov
loopne
xchg
xchg
mov
xchg
cmp
xlat
cmpsl
cwtl
sub
arpl
icebp
cmp
lds
fistpl
xchg
ss
pop
sbb
lods
fsubs
mov
and
adc
xor
adc
adc
cwtl
loop
jg
push
mov
dec
mov
sbb
pop
rcrl
enter
fnstcw
jl
popf
and
xchg
or
insb
movsl
pop
rcll
jmp
call
push
daa
pop
bound
sub
stos
jns
add
testb
xor
jmp
xor
pusha
xor
rorb
lock
push
pop
lods
xchg
jae
add
jl
sub
inc
or
sbb
xor
mov
daa
jl
dec
test
fmull
aad
repnz
mov
sahf
mov
mov
icebp
iret
fiadds
inc
sbb
into
xchg
stos
shlb
add
sti
out
movsb
dec
jecxz
and
loope
jne
shll
dec
mov
or
dec
or
dec
xchg
mov
sbb
and
mov
inc
scas
mov
data16
add
aad
lods
test
pushf
or
sbb
mov
add
lods
jge
mov
xor
int3
es
jo
aam
and
lret
inc
sub
fwait
dec
sub
int3
jle
dec
fwait
idiv
pop
aas
push
push
xor
and
cmp
cmpsl
xor
mov
and
cmp
mov
mov
or
mov
xor
mov
mov
sub
icebp
fsubrl
cwtl
jno
push
shll
mov
push
jp
sub
sub
lods
inc
mov
sub
in
push
in
sub
ja
and
iret
cltd
mov
stos
cmc
cmp
sub
rclb
imul
and
roll
shlb
sbb
in
mov
movsl
pop
mov
inc
pop
pop
adc
loopne
adc
in
outsb
xor
popa
jmp
aad
pop
fcompl
addl
and
xchg
cmp
mov
js
or
mov
cld
enter
repz
inc
les
jp
int
dec
xor
jle
mov
in
out
aas
lret
fsts
je
and
shrb
divl
fwait
xlat
lcall
daa
xorl
roll
sbb
dec
add
test
inc
ret
in
nop
mov
dec
jns
cmovne
sahf
mov
push
lock
or
xor
ljmp
shll
push
data16
xor
sahf
mov
in
out
movsb
je
int
sbb
rcll
push
sub
dec
adc
jmp
sub
add
repz
adc
cmp
xchg
push
xor
and
mov
les
pop
or
scas
jae
sti
mov
mov
jecxz
mov
or
popf
mov
push
mov
aam
idivl
lock
sub
mov
mov
xchg
fadds
sbb
mov
imul
mov
fistl
movsl
xchg
jae
xchg
sbb
out
sub
fmuls
cmc
jecxz
mov
xor
clc
or
dec
les
push
in
sarl
add
jge
lock
adc
les
arpl
jp
xchg
leave
and
nop
addb
jns
lods
jecxz
js
lods
insb
scas
cmp
xchg
lret
lds
sub
mov
jae
inc
pop
dec
mov
mov
and
pushf
pop
and
sbb
mov
ss
lret
mov
sbb
lds
jecxz
les
insb
icebp
hlt
fnstenv
test
and
dec
fnstcw
mov
or
and
or
xchg
test
push
and
mov
jp
sahf
loope
bound
mov
mov
cmp
push
lcall
pop
dec
mov
pop
or
dec
xor
mov
dec
cmp
fildl
in
mov
stos
imul
push
mov
imul
adc
arpl
xchg
lea
lock
mov
xor
movsb
test
int3
cmp
mov
arpl
and
mov
and
int
cmp
fdivp
cmp
mov
sbb
mov
mov
fildll
lret
fnstsw
mov
xor
test
cmpsb
popf
sub
cwtl
mov
lahf
aaa
push
xor
add
sub
shrl
cmp
cli
push
push
imul
out
ds
push
cmp
cmp
lcall
aaa
jle
jne
andl
lahf
out
movsb
mov
aam
movsb
je
pusha
fprem1
mov
push
inc
shl
mov
pop
dec
aad
mov
xchg
shll
out
dec
clc
push
imul
jo
sarb
mov
testb
fucomi
and
pop
leave
mov
inc
xor
xchg
repz
test
fwait
and
xchg
mov
leave
cmp
pop
push
addr16
or
adc
std
sti
outsl
fsts
stos
inc
addl
add
sbb
jmp
mov
iret
jnp
hlt
fstps
sub
leave
jge
sbb
cmp
sub
mov
movsb
js
jge
mov
nop
xchg
mov
fistpll
push
jmp
cmp
pop
cwtl
lea
push
mov
hlt
je
cmp
arpl
sbb
push
mov
cmp
add
pop
sti
cs
repz
rcrb
aam
jmp
dec
pop
xchg
ficoms
jmp
scas
or
mov
dec
sbb
mov
imulb
mov
mov
pusha
out
scas
hlt
adc
test
aam
cmp
sub
add
jns
add
ret
mov
lret
xor
lcall
dec
fs
cmp
adc
xor
inc
push
lods
into
mov
jae
rcll
dec
arpl
adc
mov
cltd
push
and
addr16
adc
loope
xor
cmc
dec
cmc
fsubl
mov
adc
ljmp
pop
sarb
call
scas
cltd
dec
scas
push
inc
sub
xchg
adc
mov
out
sar
ret
fcmovnb
mov
lods
lock
aaa
xchg
and
jecxz
and
mov
push
jae
push
das
rolb
push
xor
fdiv
js
sbb
add
sbb
push
mov
enter
icebp
dec
xchg
les
push
adc
pop
mov
cltd
fs
mov
jg
test
cld
into
and
test
shl
push
aad
mov
dec
outsl
mov
add
hlt
bound
pop
xchg
adc
icebp
fsubl
sbb
repnz
jle
push
push
call
mov
and
jns
jne
jb
repnz
mov
mov
sarl
push
popa
arpl
iret
mov
pop
sub
xchg
mov
ret
jecxz
pushf
dec
sbb
scas
daa
test
cmc
sbb
pop
cmp
lods
jge
fdivl
jecxz
cmp
mov
xchg
and
lret
dec
pusha
sub
xchg
mov
sarl
adcb
mov
clc
add
enter
fsubr
iret
or
pop
loop
mov
iret
ljmp
lret
jmp
pushf
ficompl
jg
repz
aaa
jbe
cmp
push
mov
xchg
sub
push
inc
punpckhbw
jp
int3
lock
inc
inc
xchg
jbe
mov
ret
pushf
jg
loop
xchg
imul
out
mov
push
ret
test
insl
add
test
sbb
xchg
mov
pmullw
add
dec
mov
push
insb
push
pop
loope
mov
aas
jp
xchg
cmpsb
adc
lret
outsb
popa
hlt
arpl
push
dec
push
int3
jmp
in
or
loopne
mov
int3
and
pushf
int3
test
and
lret
arpl
fistpl
test
and
pop
movsl
pop
add
xor
xor
sbb
fiadds
dec
mov
arpl
pop
repnz
push
movsl
pop
adc
or
jno
adc
fiadds
add
jle
or
xor
push
xor
sub
dec
data16
cmc
push
dec
mov
shlb
pop
mov
es
and
stos
jp
jno
xor
mov
and
jnp
fcoml
ds
or
mov
dec
in
fimuls
cmpsb
push
adc
mov
mov
add
and
ret
mov
scas
push
repnz
daa
cltd
push
dec
xchg
push
pop
pop
mov
jo
lods
js
jne
lcall
ja
fistpll
test
loop
shlb
xlat
nop
cmp
lcall
add
insb
into
adc
mov
lods
sbb
das
aad
enter
cmp
cli
xchg
and
in
xor
xchg
loopne
cmp
rcll
push
fiaddl
sub
adc
cmp
int
cmp
push
iret
jnp
cwtl
pop
rcr
jns
jns
sub
fdivl
add
ljmp
mov
pop
pop
inc
lea
xlat
les
mov
insb
pop
stos
xchg
add
or
rcll
xor
cmp
and
inc
out
out
gs
and
in
inc
cmc
cmp
pop
mov
adc
loop
and
cmp
xchg
sbb
push
lock
orb
subl
les
mov
call
jecxz
movhps
shrb
cmp
push
icebp
mov
cmp
pmaddwd
fwait
sbb
popf
jecxz
push
add
jge
ret
scas
jbe
or
add
dec
andb
cmp
xchg
lcall
xchg
mov
inc
in
fs
hlt
jne
mov
dec
sbb
loop
cmp
mov
sub
sbb
mov
cmpsb
pop
data16
adc
addr16
icebp
scas
inc
int3
add
cmp
xchg
xor
femms
and
leave
int3
or
loopne
mov
in
into
cmpsb
xchg
jne
js
data16
cmp
xchg
stc
add
imul
gs
shlb
les
add
sbb
inc
fisttpl
cld
push
lret
jmp
mov
repz
mov
sti
in
mov
dec
mov
xor
pushl
or
adc
dec
pop
mov
mov
mov
je
or
pushf
adc
dec
add
push
lcall
das
jge
inc
cld
jb
decb
sbb
fmull
jp
sub
mov
sbb
dec
inc
and
mov
push
into
ds
lret
push
es
into
in
setns
iret
lock
mov
push
in
imull
dec
push
lods
push
repnz
in
outsb
and
ljmp
rcl
jge
and
mov
int3
fnstenv
inc
cld
jmp
dec
pop
jns
in
or
inc
inc
pop
shr
mov
jl
into
int3
mov
sti
sbb
repz
es
repnz
adc
nop
stos
inc
popa
mov
xchg
daa
adc
test
ret
shlb
mov
mov
or
push
mov
push
jne
lret
push
push
cltd
outsb
sub
mov
stos
rorl
jns
push
daa
aam
push
lods
sbb
shll
pop
stos
in
add
dec
imul
loop
cwtl
mov
ficoms
hlt
sub
or
jmp
ja
mov
test
xchg
mov
sbb
push
ljmp
mov
lea
mov
push
xchg
push
mov
aaa
imul
cmp
lods
aam
roll
loopne
movsb
fcoml
jmp
pop
push
xor
dec
mov
pop
ja
hlt
in
sub
jge
cmp
mov
mov
mov
idivl
mov
cmpsl
in
pop
inc
lahf
or
std
stos
fcmovne
push
mov
fiaddl
cld
fs
inc
shlb
dec
hlt
xchg
test
and
dec
movsb
push
movsl
test
cmpb
insl
cmp
pop
subl
mov
testb
leave
and
push
lcall
repnz
addr16
mov
or
arpl
inc
pop
sti
jo
cmp
cltd
outsl
lods
inc
adc
jno
cli
mov
aas
jno
enter
hlt
imul
das
mov
aad
dec
packssdw
int
push
mov
xchg
sbb
sti
int3
sbb
fcmove
movsb
xor
ret
popf
ds
mov
mov
sbb
inc
jns
mov
adc
stc
xchg
sahf
push
fdivrl
sub
push
std
or
arpl
and
mov
mov
pop
cli
mov
in
cmp
jns
add
aam
lods
push
sub
mov
jge
push
mov
adcl
lds
inc
fsubp
adc
and
or
mov
ret
adc
mov
mov
adc
fiadds
pop
jle
fs
add
cld
out
sub
xchg
jns
es
jnp
stos
gs
rorl
sbb
pop
sbb
loop
repz
mov
push
push
aad
push
icebp
es
jmp
xchg
push
xchg
push
mov
in
out
lea
popf
movsb
movb
hlt
mov
mov
ret
or
pop
mov
or
in
call
js
add
std
inc
fs
adc
jecxz
int3
pop
call
das
push
out
and
dec
jecxz
cs
outsb
mov
lds
imul
in
xchg
push
movsl
addb
xchg
jp
stos
repz
or
icebp
sbb
jne
decl
push
mov
adc
sub
fdivrs
jecxz
mov
mov
jmp
icebp
testb
pop
xchg
cmpsb
push
cmp
lea
dec
in
jmp
mov
adcl
out
lret
jo
push
out
mov
push
hlt
add
xchg
stos
or
jne
and
add
xor
mov
mov
mov
add
imul
mov
mov
mov
add
or
mov
mov
jmp
aad
mov
mov
rorb
into
jg
daa
sbb
adcl
addl
xor
add
sub
sti
jne
lods
cmp
cmp
gs
jle
dec
sub
mov
or
outsb
lret
ss
add
outsl
cmp
pop
cld
leave
movsb
std
in
mov
push
fcmovb
cli
aas
push
fistpll
jp
imul
dec
xor
inc
cmc
mov
xor
movnti
sub
mov
fnstcw
xchg
les
mov
sub
std
loop
dec
jno
push
orl
xor
call
mov
lock
cli
xchg
addl
xor
leave
mov
pop
rcrb
stos
dec
pusha
addr16
add
pop
push
pushf
jge
push
pop
sub
add
cmp
movsb
fsubp
or
pop
pop
in
mov
dec
jge
mov
xchg
adc
push
xor
inc
adc
fbld
add
push
inc
or
adc
es
jl
ds
dec
xlat
out
cld
and
movsb
mov
aad
in
pop
jo
repz
sub
orl
fwait
xchg
mov
lock
push
xchg
push
or
mov
or
in
jmp
in
mov
adcl
in
push
sub
pushf
dec
mov
jmp
sbb
test
push
sahf
scas
dec
cmp
pop
cld
pop
mov
xor
pop
clc
push
and
xor
push
popa
pop
pop
push
pop
inc
sbb
inc
ret
jmp
lds
jmp
lods
add
sub
sbb
mov
enter
xchg
les
fs
stos
ds
mov
lahf
fisttps
jns
loopne
orb
and
cli
bound
fimuls
std
pop
rol
fwait
in
cmpsl
lcall
cltd
std
and
imul
jmp
cmp
xchg
cmp
sub
cld
sbb
icebp
dec
sbb
push
xchg
pop
fsubl
movsb
pushf
fldl
mov
ss
stc
daa
arpl
adc
lea
pop
sub
add
je
ror
mov
or
sub
jmp
mov
mov
mov
pop
sub
je
and
pusha
fs
das
inc
xor
gs
cmp
aad
out
mov
in
push
orl
mov
push
add
repz
bound
lret
jge
test
and
mov
or
movsb
iret
jecxz
lods
mov
push
inc
insl
or
or
notl
and
and
pop
and
dec
inc
cmpb
out
xchg
push
or
cmp
adc
pop
out
inc
xchg
call
clc
jb
add
jecxz
fsubrp
sub
loopne
mov
and
dec
pop
add
mov
mov
jnp
jno
sub
adc
jl
cli
xchg
inc
adc
mov
sbb
cmp
daa
in
mov
cmp
in
pop
or
push
xchg
dec
xchg
sub
loopne
mov
mov
mov
adc
aad
mov
fldl
cmc
inc
or
imul
cltd
mov
inc
rolb
xchg
jae
push
jbe
gs
push
ja
mov
jle
mov
int
adc
lods
fcomip
je
mov
leave
push
insb
sub
sub
cwtl
in
cmpsl
setae
stc
movsl
cld
cwtl
imulb
mov
repnz
movsl
iret
mov
adc
sub
xacquire
movsl
loopne
aam
sub
rcrb
cmp
mov
mov
jns
cmp
xor
scas
fiaddl
mov
sbb
mov
bound
push
or
mov
and
and
and
cld
sbbb
repnz
fcomps
add
adc
pop
cli
fs
ds
xchg
pop
lea
iret
sub
xchg
jne
imul
add
leave
mov
mov
sub
inc
lds
lods
in
push
pop
add
subl
arpl
testb
jle
rclb
add
mov
adc
push
mov
add
xchg
test
xchg
rclb
push
adc
inc
je
inc
shrb
mov
push
lea
sahf
xor
cmovb
push
lods
mov
push
jo
cmp
mov
in
ljmp
and
mov
stos
repnz
or
mov
mov
and
adc
push
subb
pop
ljmp
mov
mov
bound
pop
repnz
xor
sub
sub
popf
adc
dec
xor
dec
dec
enter
pop
inc
pop
push
xchg
inc
sbb
daa
mov
fisttps
add
mov
mov
sbb
push
jecxz
ds
sbb
mov
inc
jg
ret
mov
lret
xor
pop
repnz
pushl
je
pop
or
mov
jo
sbb
cld
mov
pop
push
sub
imul
rolb
push
sub
jns
ja
adc
sbb
cli
add
xor
in
pusha
adc
fcmovbe
adc
dec
jle
mov
imul
shl
ror
xchg
jo
das
lods
dec
cmp
in
cwtl
add
jo
rclb
pop
add
mov
pop
pop
sbb
rorl
adc
mov
mov
bswap
mov
fldcw
sub
dec
push
insb
mov
pop
cmp
adc
pop
cmp
aas
mov
adc
cmp
fs
cmpb
out
lret
out
mov
jae
repnz
mov
or
fists
mov
pop
test
cmpsb
add
mov
mov
and
push
inc
neg
or
in
ret
fs
mov
cmp
pop
fwait
cmp
cmp
cmovns
push
test
mov
std
mov
xchg
sbb
pop
push
fiaddl
orb
adc
jge
cmp
addr16
mov
scas
mov
and
test
loopne
outsb
aad
inc
sahf
lea
push
inc
hlt
sub
mov
cmp
inc
and
aaa
scas
mov
sbb
jne
dec
pop
dec
sbb
mov
mov
jge
xor
test
addb
enter
mov
lods
adc
fdivrp
clc
xor
sbb
xlat
push
mov
test
mov
imul
ret
sbb
dec
xchg
cmp
dec
mov
ljmp
cmpsb
push
xlat
shrb
insb
int
ljmp
mov
adc
xchg
into
or
sub
cmp
adc
out
out
loope
push
dec
and
call
js
adc
jb
jo
pop
push
cmp
arpl
ss
sub
int
dec
fwait
fwait
in
lret
pop
sub
xchg
fs
xchg
push
jl
push
fstpl
xchg
pop
call
xor
pop
push
push
add
popa
mov
sbb
cltd
in
negl
sub
or
pop
lods
push
push
loop
les
mov
cwtl
ljmp
shll
jbe
push
push
lods
mov
movsb
fwait
xor
cmp
rorb
int
xlat
subl
or
mov
testl
stos
cmc
mov
add
and
inc
sbb
out
shr
icebp
icebp
inc
pop
iret
popf
or
inc
and
cmp
fstpl
and
lahf
daa
pushf
cmp
repnz
add
lcall
lahf
ja
jno
insb
fprem
ljmp
orb
and
iret
dec
ss
jne
in
sub
xchg
xchg
arpl
jg
fisubl
mov
and
xchg
gs
ficompl
lret
cwtl
cli
mov
pop
xchg
sbb
movsb
sub
jecxz
les
adc
cmpl
pop
xchg
sti
adc
ljmp
in
lds
daa
orl
mov
and
lds
movsb
sbb
mov
inc
sti
fsubl
pop
and
adc
push
inc
push
inc
repz
imul
lods
aam
pop
pop
insb
mov
sbb
sub
call
xchg
push
iret
jmp
lods
push
cmp
cmp
lock
enter
mov
movsb
test
jae
mov
jnp
ret
push
sbb
repnz
xchg
les
xchg
lcall
mov
or
mov
fdiv
add
cmp
sarb
pop
pop
aam
clc
adc
mov
cmp
pop
dec
dec
inc
popf
loop
add
test
mov
inc
mov
mov
pop
call
in
imul
or
pop
cmp
xchg
xchg
arpl
and
mov
push
cmp
shlb
lea
xlat
add
jg
pop
out
or
call
add
je
inc
int
sbb
lds
and
dec
inc
fidivrs
pop
cwtl
into
stos
jb
movsl
add
jmp
push
push
addl
out
mov
push
jmp
mov
mov
jg
les
pop
ds
call
ja
shlb
jle
jno
jl
scas
pop
call
ret
cmc
mov
jne
imull
mov
mov
lea
dec
lock
insl
dec
repnz
jg
in
inc
insl
dec
insb
negl
dec
in
decb
mov
adc
xchg
rolb
jns
mov
popa
divl
movsb
out
aad
push
aas
adc
xchg
jbe
in
push
push
mov
pop
mov
loopne
mov
sub
mov
insb
adc
fs
insb
xchg
jnp
jae
pop
lds
add
push
lock
movsb
mov
jns
mov
sub
adc
sarl
dec
push
ret
push
inc
out
movsb
sub
movsl
sub
aas
mov
mov
add
xchg
daa
or
cld
mov
inc
mov
adc
fisttps
xor
popa
xchg
popf
data16
lea
xor
cmpsb
ss
out
fs
andb
test
jnp
xor
sbb
into
mov
pop
stos
sbb
addr16
int3
ja
sbb
sub
stc
in
in
scas
mov
out
push
mov
mov
test
jp
rcr
pop
cli
test
fisubs
sahf
aam
jne
mov
add
bswap
not
jbe
and
cmp
inc
pop
aas
lea
hlt
jecxz
inc
sub
mov
push
pop
or
stc
pop
shl
stos
push
call
xchg
rolb
and
out
push
sbb
adc
jl
mov
jno
dec
and
mov
pop
and
push
jp
push
enter
mov
filds
xor
test
rolb
adc
dec
out
adc
fmulp
aaa
mov
add
or
inc
jp
ss
xchg
cld
xchg
push
iret
aas
mov
jp
mov
jmp
pop
sbb
or
shr
sub
js
mov
mov
popf
jle
mov
push
jmp
jmp
dec
push
xchg
cmp
fsubs
repnz
cmp
outsb
jg
aaa
mov
add
roll
sub
scas
mov
push
inc
push
in
cli
pop
push
inc
clc
mov
sahf
movsl
lret
cmp
and
sub
lods
out
cmp
shll
dec
mov
aad
stc
fistl
in
jbe
dec
pop
clc
fsub
imull
and
jns
addl
in
or
jnp
test
mov
dec
movsb
ja
jecxz
sbb
and
mov
pop
scas
out
pop
iret
inc
and
mov
pop
loopne
rcrl
sti
stos
hlt
repnz
pop
fisubl
decl
and
dec
mov
lahf
dec
scas
add
jb
test
lcall
push
mov
repz
scas
sbb
fwait
push
and
dec
in
inc
repnz
mov
cmp
out
popf
testl
sub
push
mov
pop
jb
mov
pop
call
jle
in
call
lock
into
push
dec
jp
cli
mov
ret
scas
sahf
rcl
mov
negl
adc
fdivrl
aad
push
and
ss
dec
cmp
jge
cmp
pop
outsl
in
add
pop
inc
pop
fnstcw
mov
icebp
rcl
sti
pop
gs
mov
cmc
repnz
cs
aas
jns
jne
lahf
adc
and
test
dec
addl
xchg
mov
mull
dec
inc
fcoml
out
adc
rorb
jnp
imul
dec
test
lcall
arpl
ds
dec
test
iret
pop
mov
mov
fwait
push
out
fidivs
inc
dec
insb
sub
dec
xor
fs
pop
sbb
fbld
xor
add
xor
movsb
aad
lret
mov
push
xor
scas
andl
xchg
mov
sub
and
mov
ss
jge
push
push
pop
mov
cmp
in
mov
mov
jmp
sub
aas
xor
addr16
icebp
cmp
lods
out
add
jns
and
and
adc
and
lahf
decl
jne
mov
shlb
xor
pop
cmp
xchg
stos
push
push
jb
aad
push
xchg
fsubl
xor
loop
inc
adc
push
pop
into
pop
daa
cs
or
cmp
aaa
jle
leave
mov
mov
ds
out
cwtl
inc
jb
and
gs
sbbb
dec
shr
jnp
add
add
push
aas
mov
popl
call
xchg
es
pop
das
inc
mov
sub
adc
stc
jecxz
sarb
push
movsb
lods
or
cmpb
mov
dec
test
int3
imul
fcmovnb
bound
jbe
xchg
push
and
cmpsb
outsb
dec
sar
xchg
mov
inc
mov
filds
jge
adc
push
push
leave
fistpll
jns
adcl
fwait
inc
gs
out
sub
mov
xchg
test
loopne
rcrb
ljmp
adc
push
add
inc
mov
jmp
ja
jecxz
mov
imull
ret
push
jl
push
int3
xchg
fidivl
fiadds
dec
fisubrl
push
or
scas
lret
test
stos
xor
inc
mov
mov
mov
fwait
stos
xchg
jns
jl
sbb
add
les
addl
gs
or
out
fildl
dec
aaa
mov
nop
sub
cmp
cmp
lret
stos
popf
ja
push
xchg
mov
sub
cmp
inc
mov
das
gs
jl
stos
imul
pop
repz
pop
xor
push
lds
rclb
dec
push
sar
sub
insb
lcall
mov
movsb
dec
mov
sbb
das
cwtl
jbe
xor
mov
jle
addr16
fnstenv
fistpl
mov
js
sub
icebp
xlat
arpl
xchg
mov
jns
cld
lods
mov
lods
leave
jbe
and
shll
push
pushf
jp
jl
and
arpl
or
inc
lods
pop
mov
in
and
int3
jae
push
inc
mov
in
xchg
mov
or
sub
fstpt
test
inc
mov
mov
movsb
jmp
lods
pop
scas
mov
sahf
ret
sti
add
adc
out
inc
data16
sub
jns
testl
and
mov
insl
shrl
xchg
dec
cmp
add
xchg
test
cmpsb
hlt
pop
jne
fsts
movsb
cmp
cmp
pop
je
shll
add
in
test
sbb
inc
arpl
jns
rorb
std
add
jge
jmp
cmp
sub
adc
adcl
outsb
outsb
pop
cmp
mov
push
mov
in
repz
add
fadds
mov
or
cmc
ret
xorl
into
or
in
and
push
ret
jbe
popa
mov
dec
cwtl
mov
and
pop
popa
fwait
mov
ret
xor
in
clc
push
xor
inc
fsubrl
data16
icebp
or
shll
sbb
adc
sub
ficompl
jge
mov
sar
cmp
mov
sbb
lret
mov
roll
sbb
icebp
les
clc
hlt
inc
and
push
jl
shrl
and
mov
dec
inc
push
dec
or
popa
into
stos
inc
mov
mov
out
xor
ljmp
ret
arpl
push
ljmp
push
loope
jo
out
pop
out
cmpsl
lahf
iret
push
call
lret
leave
and
cmp
cmp
sub
int3
lahf
pop
jae
repz
adc
ljmp
lahf
movzbl
push
mov
subb
sub
cmp
pop
icebp
sbb
jnp
popa
mov
imul
mov
sub
fcmovnu
or
in
ja
pop
ret
or
cmp
inc
imul
test
and
aam
jmp
scas
add
xchg
mov
xchg
sbb
scas
pop
jp
lds
int
lret
sub
cli
lahf
mov
stos
mov
sbb
sti
mov
pop
sbb
sbb
and
popf
ja
lahf
scas
mov
and
adc
mov
shrb
or
fadds
or
repnz
push
gs
aam
jmp
insl
push
divl
xchg
inc
add
cmp
jae
ja
adc
scas
fldl
jmp
add
mov
fnsave
xchg
negl
aaa
ljmp
xchg
jbe
or
arpl
ljmp
jmp
fmuls
std
push
pop
mov
jmp
mov
inc
push
jg
popf
pushf
test
fld
mov
fwait
movsb
arpl
inc
adc
cld
fmul
in
ret
mov
cmp
mov
mov
cmovp
std
xchg
rcrl
insb
test
call
dec
shll
rolb
mov
lods
xor
popa
mov
pop
cmp
sarb
cmpsb
pop
jg
stc
mov
add
xchg
sub
and
aas
outsb
pop
aad
dec
adc
leave
insb
aad
pusha
aas
cs
cmp
mov
jecxz
dec
pop
fistl
mov
shll
nop
fsubrs
enter
push
jmp
xchg
dec
lea
mov
loope
shr
cmp
fmulp
or
sbbl
or
add
rcrb
out
inc
xchg
into
shl
add
xchg
es
jl,pt
push
xor
mov
gs
cmp
lods
out
add
scas
mov
ds
int3
dec
inc
enter
stos
std
inc
cmp
inc
and
xor
or
lret
and
sbb
pop
xchg
mov
xor
pop
and
out
mov
sbb
imul
and
cs
lock
push
gs
jno
in
aad
sahf
lahf
inc
xchg
mov
out
mov
fdivrl
push
jae
pop
jecxz
mov
mov
pop
mov
insb
sub
inc
lahf
mov
dec
push
mov
rcll
mov
pop
and
cmpsl
xor
jno
lds
lods
dec
mov
inc
push
xor
xor
push
sbb
call
or
in
add
push
addr16
into
mov
cld
and
jne
divl
dec
rorb
cmp
out
xor
inc
mov
clc
loopne
daa
rorb
cwtl
inc
inc
cld
pusha
sarl
lret
and
sbb
mov
dec
pop
adc
int3
push
out
push
and
sub
mov
and
lretw
dec
or
jnp
clc
les
in
insb
sub
mov
cmc
mov
in
andb
xchg
gs
mov
test
cmp
cs
cli
inc
rclb
push
adc
dec
pop
jg
fisubs
pushf
mov
or
xchg
sti
sbb
pop
push
sub
loop
jnp
or
push
pop
push
dec
cmp
filds
adcl
subl
cmpsl
or
jbe
shr
out
loop
mov
jle
xchg
sub
inc
shll
push
lods
xchg
in
loop
sub
sbb
cmp
addl
mov
lahf
movsb
movsl
out
and
pop
sbb
call
inc
repz
jp
mulb
mov
mov
mov
scas
out
jle
jecxz
add
mov
imul
rorb
xlat
das
jg
int
cmp
sbb
shll
and
dec
sub
push
push
adc
movsl
sub
add
test
sbb
insb
popa
jae
jo
push
push
data16
pop
push
mov
bound
sub
mov
dec
xor
sti
daa
mov
out
subb
je
sub
fwait
pop
insb
scas
outsb
insl
int
xchg
imul
mov
or
enter
xor
sbb
xchg
pop
or
xchg
dec
jne
xor
call
aam
sbb
iret
popa
pop
inc
cltd
js
pop
out
add
test
movsb
sub
add
into
push
mov
mov
lcall
loope
mov
out
dec
imul
ljmp
sbb
fldenv
mov
movsb
roll
stos
test
push
mov
xchg
stos
icebp
mov
lret
cli
jge
pop
loop
push
sub
sbb
pop
dec
pop
mov
test
adc
jbe
js
cs
adc
je
pop
js
push
mov
sarl
push
inc
add
jge
cmp
jne
push
sahf
jecxz
lahf
push
and
xchg
mov
ds
push
shrb
in
ss
dec
inc
pop
icebp
test
loopne
mov
outsb
mov
imul
jmp
je
sub
pop
mov
popa
jo
call
fstpt
jns
sbb
pop
pop
inc
xor
xchg
ljmp
xchg
daa
aad
adc
out
mov
mov
bnd
pop
push
popf
rolb
dec
sub
fstl
mov
lret
lcall
rcl
lea
rcrl
cmc
inc
push
dec
or
ret
sbb
push
lods
and
rcll
stc
dec
scas
fs
loopne
mov
or
fcoml
fimuls
add
iret
outsb
push
xchg
or
mov
sub
fs
push
lahf
sti
cs
scas
xchg
fdivs
push
bound
sti
jo
fptan
or
sbb
mov
stos
les
idivl
cmp
sbb
sub
mov
inc
faddl
lahf
das
push
lea
mov
lock
pop
jae
sti
leave
dec
sahf
xor
ljmp
jbe
in
out
jb
cltd
dec
xor
aad
movsl
pop
ss
loopne
pop
in
sti
stc
imulb
jae
jne
call
jl
and
aaa
ficoml
and
jnp
pop
xchg
bound
sbb
cs
aaa
data16
clc
test
pop
cmp
lea
push
adc
adc
sub
jle
aas
mov
addr16
mov
add
mov
xor
enter
sub
mov
repnz
sbb
aas
test
jp
imul
fistpl
movsb
cmpsb
fdiv
lds
push
enter
jne
mov
into
mov
or
sub
sub
adcb
fstpl
xor
fidivl
leave
orb
inc
jbe
fwait
in
das
mov
ret
cltd
jmp
mov
pop
ss
pop
rorb
push
jge
loope
pop
rorl
insb
adc
xchg
rcll
enter
add
xlat
mov
push
push
mov
test
jge
push
add
add
arpl
les
lcall
dec
repz
jb
scas
sahf
pop
push
or
dec
pop
cwtl
aas
xor
insl
cltd
jle
add
xor
loop
xchg
data16
or
fwait
jge
lahf
adc
pop
fmuls
ja
test
sbb
mov
jmp
cmp
cli
xor
imulb
cli
add
outsb
push
shr
xor
dec
and
sbb
xchg
jo
add
cmp
cmp
ret
outsb
lods
sbb
mov
in
stos
dec
pop
push
push
or
inc
mov
jl
jp
adc
nop
adc
ja
pop
lret
mov
push
inc
lea
test
jb
ret
in
mov
addr16
add
ljmp
and
outsb
jg
cltd
js
xchg
addr16
jl
pop
xor
sub
inc
pop
test
xor
push
aam
cmpl
cmp
xor
and
stc
out
das
jmp
push
adc
sub
test
sbb
fbld
sbb
sbb
test
hlt
test
dec
fisttps
or
jb
mov
pusha
add
mov
push
push
pop
movl
cmp
mov
sub
cmp
sahf
repnz
jge
inc
sti
dec
and
push
fs
filds
jae
cmp
jno
fstpt
bound
loopne
call
xor
es
cld
inc
lds
je
xor
sub
sbb
xchg
mov
imul
or
std
lret
sti
es
adc
pop
shll
adc
mov
xchg
inc
inc
adc
leave
shll
icebp
pop
jmp
mov
jne
enter
dec
or
xor
les
inc
cmc
sbbl
adc
jp
inc
das
dec
inc
lds
sub
sbb
das
add
push
ret
stc
add
cvtdq2ps
mov
mov
dec
mov
mov
aas
ret
mov
cli
dec
jl
push
lods
sub
and
cmpsb
pop
xchg
or
test
in
andb
mov
adc
jbe
jb
shrl
jne
xchg
fisubrl
xchg
call
mov
mov
xchg
jae
adc
insb
push
es
lods
jb
lods
popa
jns
pop
xor
in
pop
push
xlat
dec
ret
mov
sbb
loopne
adc
or
in
cmp
dec
loop
lds
push
ljmp
out
pop
ds
xchg
pop
or
sbb
pop
sub
xchg
sarl
repnz
xor
adc
cli
ret
insl
gs
jp
xlat
mov
cmp
cmp
pop
mov
jp
test
adc
pop
lretw
in
push
movsb
daa
sarb
es
jmp
or
call
mov
adc
push
push
dec
leave
ljmp
scas
and
push
add
arpl
add
ret
cli
mov
fwait
xchg
stos
fldt
ret
adc
inc
pop
jne
aaa
imul
addb
mov
mov
icebp
pop
lods
outsb
int3
mov
xor
jecxz
mov
rcrl
lods
ffree
mov
ret
hlt
xor
and
mov
sub
inc
xchg
dec
fisttpl
inc
adc
cltd
fistl
add
dec
roll
push
cmp
sete
test
inc
adc
int3
mov
es
imul
pop
hlt
popf
jo
addr16
fsubs
adc
and
aam
push
stos
adc
cmp
jl
repnz
icebp
dec
push
cmpl
out
cmp
adc
mov
sub
lea
mov
aam
mov
push
cmpsb
jmp
rep
aam
cltd
or
adc
test
iret
not
fbstp
sbb
insl
xlat
push
mov
gs
dec
and
add
jne,pt
adc
push
xor
sahf
jb
jp
pop
mov
mov
cwtl
mov
jle
insb
pop
xor
loop
add
push
in
xchg
out
rcrl
stos
fs
loop
xchg
and
sub
mov
add
or
js
jns
mov
scas
push
xor
fwait
bt
int
jecxz
rcrb
fldcw
mov
jl
add
jae
outsl
rorb
in
in
push
cwtl
shrl
jae
fstpt
lea
js
mov
jnp
jp
das
int3
mov
cmp
sbb
dec
iret
nop
add
gs
imulb
sahf
into
cmp
sub
rclb
mov
jg
gs
cmc
int
xchg
push
inc
jmp
loopne
into
cmp
sbb
mov
or
sub
mov
data16
dec
push
cmp
mov
arpl
adc
leave
mov
and
adc
loopne
mov
inc
push
addr16
cmpsl
idivb
loopne
xchg
cld
call
push
inc
push
or
push
test
jns
or
bound
sub
fisubl
jl
out
movsb
test
into
xor
xor
pop
xor
dec
ljmp
jg
cli
jae
fisubrl
push
mov
inc
adc
or
ja
stos
cs
push
popa
inc
fidivrs
fnstcw
adc
fcoms
adc
jecxz
inc
cltd
push
out
aaa
dec
sbb
sarb
dec
or
fistps
or
imul
ret
sbb
xchg
jbe
cmp
cmp
sbb
lods
dec
xor
mov
scas
mov
push
pop
jmp
fucomp
outsl
xlat
sahf
push
fisubrs
imul
push
mov
ljmp
xchg
cld
fistps
in
ja
repz
mov
mov
inc
fwait
dec
cli
jnp
xchg
imul
or
inc
pop
jmp
pop
fsub
jle
bound
mov
or
jl
inc
cmp
jecxz
fistps
insl
cmpsb
out
pop
mov
push
or
js
outsb
rcr
ds
mov
orb
pop
push
mov
fisubrl
dec
cli
mov
mov
cs
jb
push
into
cmp
test
jbe
jge
mov
fs
jge
adc
les
shlb
fscale
aam
mov
icebp
lcall
push
sbb
popa
dec
test
loop
inc
xor
or
xchg
incl
pop
mov
shll
int3
jbe
cmpsw
and
inc
outsl
mov
cmp
cli
testl
sahf
leave
test
xchg
int
out
mov
jl
sbb
sub
jl
xchg
xchg
cmpsl
lods
or
inc
aas
insb
pop
pop
in
scas
mov
push
ds
in
scas
jae
je
mov
xchg
jae
dec
in
loopne
pop
jecxz
dec
arpl
lods
cmpsl
out
pop
pushl
jno
jge
sbb
sbb
jo
pushf
clc
cwtl
inc
push
and
push
lods
push
add
xchg
inc
lods
jnp
cmp
popa
xor
adc
fiadds
and
jbe
fisttps
addl
inc
add
lret
mov
dec
or
and
mov
mov
mov
lea
mov
mov
mov
sub
add
mov
mov
xor
add
jne
mov
xor
mov
add
mov
pop
pop
pop
leave
ret
push
mov
sub
notl
push
sub
push
sub
mov
mov
mov
inc
mov
or
movl
movzbl
adc
movl
adc
mov
add
mov
adcl
sub
adc
mov
xorl
xorl
mov
andl
mov
inc
mov
cmpl
jle
jmp
push
pushl
pushl
call
cmpl
jb
mov
sub
mov
orl
mov
andl
mov
sub
andl
mov
inc
mov
cmpl
jg
jmp
push
call
cmpl
jb
mov
xorl
orl
mov
andl
mov
andl
mov
inc
mov
cmpl
jg
jmp
push
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
sub
movl
cmpl
je
cmpl
jbe
jmp
call
mov
dec
mov
jmp
mov
orl
add
mov
mov
sub
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jle
jmp
push
push
call
jmp
mov
mov
mov
neg
mov
xor
mov
add
or
mov
mov
mov
sub
mov
orl
mov
xor
add
push
mov
xor
add
push
mov
xor
add
push
lea
push
pushl
pushl
call
test
je
lea
push
mov
xor
add
push
mov
add
push
mov
mov
pushl
call
mov
mov
lea
mov
incl
mov
test
je
lea
mov
mov
mov
mov
mov
sub
mov
mov
xor
mov
sub
add
mov
mov
mov
mov
pushl
movb
mov
pushl
pushl
pushl
pushl
pushl
pushl
pushl
mov
call
pop
pop
leave
ret
push
mov
sub
adcl
movl
subl
lea
movzbl
sbb
mov
mov
movl
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jb
jmp
pushl
call
jmp
lea
add
mov
xor
mov
mov
mov
sub
xor
mov
adc
mov
adcl
xor
orl
add
xorl
mov
andl
xor
add
inc
mov
cmpl
jge
jmp
push
push
pushl
call
cmpl
jb
mov
mov
mov
add
movl
cmpl
je
cmpl
ja
jmp
push
call
xor
or
dec
mov
jmp
push
sub
mov
mov
mov
mov
mov
adc
mov
xor
and
mov
add
movl
cmp
movl
je
notl
mov
jmp
mov
xorl
xor
push
add
xor
xor
sub
mov
add
movl
push
adc
andl
jmp
xor
xor
inc
mov
cmpl
jae
cmpl
jl
jmp
pushl
push
push
pushl
call
jmp
mov
xor
subl
xor
movl
cmp
movl
jne
movl
cmp
jne
push
movl
jmp
mov
xor
adcl
add
subl
xor
add
movl
adc
subl
xor
orl
xor
movl
cmp
movl
jne
cmp
movl
jne
addl
mov
movl
cmpl
je
cmpl
jl
jmp
push
push
call
xor
xor
dec
mov
jmp
xor
add
mov
subl
mov
andl
jmp
xor
add
inc
mov
cmpl
jae
cmpl
jbe
jmp
push
call
jmp
mov
movl
xor
add
adcl
imul
mov
orl
xor
add
movl
cmp
mov
je
movl
cmpl
je
cmpl
ja
jmp
push
push
call
mov
dec
mov
jmp
mov
orl
add
and
mov
mov
xor
add
imul
sbbl
mov
mov
mov
mov
xor
mov
sub
mov
jmp
mov
xor
mov
mov
mov
xor
mov
sub
mov
add
mov
mov
add
mov
mov
mov
xor
xor
lea
mov
xor
add
imul
mov
xor
sub
mov
add
cmp
mov
jg
mov
mov
xor
mov
sub
mov
jmp
mov
xor
add
add
mov
mov
mov
xor
add
not
and
mov
movsbl
cltd
add
adc
jmp
pop
push
xchg
dec
add
shll
stc
addb
jge
inc
mov
push
jg
ret
in
mov
js
dec
xlat
or
xchg
mov
inc
enter
pop
cs
jg
fstps
dec
mov
inc
adc
pop
adc
mov
rcrl
faddl
jo
push
ja
mov
jbe
lret
arpl
bts
prefetcht0
fwait
outsl
shll
cs
sbb
inc
ss
cmpsb
cmp
je
add
les
cs
das
roll
mov
mov
lret
pop
pusha
pop
rcll
rcrl
jle
ss
lods
sbb
pop
ds
push
add
push
or
cmp
jecxz
daa
out
inc
inc
pop
xchg
jle
ret
aam
push
dec
enter
aad
xchg
addr16
pop
pop
jo
stos
fcoms
cld
mov
jmp
mov
aaa
sbb
sub
fistps
pop
out
insl
shlb
addr16
or
leave
push
xchg
inc
xchg
popf
push
mov
cld
mov
out
sahf
cli
lret
movsl
and
push
hlt
mov
rcr
rclb
ret
out
fnstcw
in
mov
dec
lret
jo
cmp
outsb
adc
dec
add
add
mov
popa
loop
decb
dec
clc
mov
scas
mov
pop
stos
cmp
int
mov
cwtl
test
dec
mov
shll
inc
pushf
arpl
mov
ret
mov
cmp
insb
aam
lret
in
roll
iret
mov
xchg
mov
lock
jmp
push
fimuls
xchg
rol
cmp
add
sbb
xor
push
adc
or
orl
ljmp
jp
xchg
push
sbb
daa
sbb
push
cmp
js
mov
out
push
gs
sub
push
sbb
fistpl
subps
or
cmpb
fimull
aam
xchg
out
test
mov
jae
cmp
es
subb
xor
flds
mov
sbb
push
sub
pusha
dec
adc
xchg
mov
xchg
mov
js
cmp
test
aas
mov
stos
loop
fisttpll
out
daa
fs
movsl
inc
nop
sarb
xchg
xchg
inc
sub
xchg
jle
xchg
ret
nop
or
hlt
dec
mov
test
fdiv
aaa
popf
and
cmp
add
jge
pop
je
mov
inc
push
push
add
mov
or
mov
xchg
pop
das
test
xchg
xchg
fwait
pop
scas
mov
adc
popf
mov
jb
out
repnz
push
inc
adcl
add
arpl
xor
clc
mov
xchg
ret
out
and
xor
outsb
jmp
xorl
mov
add
jbe
jl
out
jae
clc
or
inc
mov
push
mov
stc
jne
sub
mov
inc
aaa
dec
sbb
xor
cwtl
cld
imul
mov
push
push
cmp
or
push
pop
mov
jecxz
inc
sub
aaa
fwait
lret
cs
cltd
stc
stos
xchg
mov
leave
sbb
adc
mov
mov
ja
aas
fisubrs
outsl
jnp
sub
sbb
les
inc
je
cmpsl
add
rcrl
dec
jl
inc
and
jmp
cmp
stos
movsb
jg
psrld
inc
lret
mov
push
ja
pop
in
outsl
mov
and
xchg
lods
in
in
ja
dec
mov
or
test
mov
jb
push
jle
nop
lods
pop
movsb
jo
mov
cmp
test
or
test
inc
lock
testb
inc
push
dec
cltd
xor
lahf
mov
pop
arpl
aas
mov
pop
sub
rorl
push
out
mov
lds
fidivs
aaa
mov
cmc
into
and
push
mov
sbb
bound
sub
xchg
movsb
testl
fisttpll
shr
push
arpl
and
mov
ror
mov
in
shlb
je
lret
insb
adcl
or
test
repz
subb
stc
sbb
pop
jle
icebp
mov
jmp
and
fstps
sub
dec
mov
dec
dec
mov
aad
lods
in
lcall
inc
sarb
adc
lahf
adc
in
mov
mov
scas
cli
mov
cmpl
sbb
ds
mov
mov
lahf
ret
jle
fstpt
add
push
pmulhuw
shl
lret
mov
std
shlb
push
rcr
cmc
jg
ficoml
bound
push
mov
pop
pusha
inc
push
fsubrl
test
dec
mov
rcrb
lds
and
pop
aaa
pop
lret
cmp
shrl
inc
xchg
and
push
and
pop
push
dec
stc
ss
faddp
in
hlt
dec
pop
xor
ss
inc
inc
pop
pop
push
mov
push
out
lea
jge
aas
and
movsl
int3
cmp
imul
xor
pop
push
or
push
push
jo
mov
faddl
xor
push
loopne
inc
sti
frstor
and
notl
pusha
inc
mov
sti
ss
je
aaa
cmp
mov
inc
out
inc
fldcw
jl
pop
faddl
jno
mov
lea
mov
push
scas
shl
pop
movsl
pop
pop
inc
fs
cmpsl
adc
pop
call
ficomps
pusha
mov
in
sarb
int3
testb
fdiv
push
jo
jbe
sub
shrl
in
pop
push
icebp
sti
push
std
jmp
lcall
rclb
ds
push
daa
clc
rolb
mov
popa
push
mov
inc
in
aaa
rorb
loop
xchg
and
into
into
int3
mov
dec
or
pop
push
xor
dec
cmpsl
in
sub
ja
call
dec
jecxz
xchg
or
nop
dec
push
jmp
cmp
test
int
mov
pushf
add
mov
les
xchg
fdivrs
jo
out
arpl
into
cli
inc
push
sub
xchg
inc
push
test
insl
jb
shrl
jg
scas
mov
sti
jle
jl
xchg
fmull
sbb
inc
cmpsl
xor
or
rcrb
mov
aaa
aaa
es
es
cmp
fistl
daa
pop
pop
stos
jnp
bound
jnp
push
push
mov
mov
jne
xchg
mov
insb
sub
push
loop
rcrl
xlat
pop
or
outsl
fcompl
mov
sub
dec
test
dec
mov
xor
dec
ficoms
xchg
idivl
cmpl
mov
ffree
aas
push
test
dec
push
clc
stos
dec
scas
stos
outsb
std
cmc
addr16
and
arpl
inc
mov
jae
fstl
std
mov
xchg
cmp
cmc
sub
test
lret
arpl
or
ss
jecxz
adc
pop
jg
sahf
xor
clc
mov
roll
lock
leave
adc
inc
ret
sub
enter
cltd
push
dec
sub
jno
fwait
notl
movsb
lret
mov
data16
repz
inc
mov
test
jecxz
pop
add
jge
inc
fbstp
jns
xor
mov
fstl
push
fistl
leave
mov
jnp
cmp
notl
cld
mov
in
xlat
mov
mov
and
lcall
jecxz
cmpsb
mov
test
pop
stc
icebp
jmp
or
pushf
push
cmp
fisubrl
push
jg
scas
test
ljmp
xor
jmp
sub
inc
add
sbb
imul
push
mov
mov
xor
ljmp
pop
mov
dec
into
paddb
data16
sub
jle
dec
ljmp
movsl
jnp
ljmp
pop
mov
lods
inc
pop
push
mov
sub
sub
mov
add
aam
mov
mov
pop
and
lret
pop
xlat
sub
cmp
pop
outsb
lret
sahf
loopne
imul
rorl
push
ficompl
cmp
and
jb
popa
inc
mov
ret
push
mov
out
test
add
cli
inc
push
mov
lods
int3
mov
jge
pop
inc
fistpl
sbb
imul
test
in
jno
push
or
aad
mov
sbb
pusha
in
jge
push
jb
add
sarb
cmp
mov
jp
nop
stc
sbb
push
ljmp
mov
or
cmp
je
xchg
add
out
inc
and
push
jae
pop
pusha
mov
cmp
jne
adc
nop
sarl
push
addr16
push
cmc
repz
or
pop
mov
or
stc
or
and
xchg
or
mov
xchg
mov
loopne,pn
hlt
scas
pop
cmp
scas
pop
insb
repnz
test
repnz
popf
push
adcb
ret
adc
cld
jne
mov
cld
jg
inc
ret
pop
dec
shrl
repnz
inc
subb
sub
sahf
pushf
jge
out
push
cwtl
rcll
add
mov
addr16
outsl
xchg
push
xchg
arpl
jg
stos
in
aaa
or
sbb
sub
jecxz
outsb
data16
pusha
and
fdivrl
fsubr
mov
mov
iret
adc
dec
jecxz
jg
scas
aaa
repz
add
xor
xor
xchg
sub
xchg
test
cs
insl
xor
aas
xchg
push
mov
leave
jg
fdivl
mov
imul
jge
mov
sub
pop
ss
mov
loope
sbb
jmp
pusha
or
dec
rcrb
insb
dec
add
mov
iret
lods
cmc
je
cmp
nop
shrb
ss
insl
and
sub
pop
and
dec
cmp
mov
int3
les
mov
sarl
mov
add
add
xchg
inc
or
sub
outsb
dec
push
mov
push
or
mov
push
pop
sbb
das
and
repnz
xchg
loope
jns
sbb
sub
or
repnz
cs
decb
jae
sub
in
pop
xchg
sub
xor
cmp
push
or
mov
mov
scas
xor
iret
adc
aam
mov
lret
rcrb
hlt
cmc
add
nop
mov
inc
dec
xor
xlat
loopne
lods
xor
sbb
jmp
push
cmp
jmp
cmp
cs
jl
mov
ret
or
mov
mov
aad
sbb
xor
jns
cs
pop
jo
lods
shrb
cmp
ljmp
sub
outsl
je
aam
stc
ret
pusha
sarb
loope
lret
mov
fsubrl
mov
push
sbb
lcall
pop
sti
hlt
pop
sahf
push
lahf
js
add
ror
or
hlt
dec
aam
imul
mov
push
push
movb
js
out
push
lret
mov
or
adc
bound
add
enter
mov
stos
mov
add
sub
rorl
sub
movsb
sub
out
push
jne
lods
sbb
lds
xor
mov
add
mov
cwtl
out
and
jne
pushf
jmp
inc
imul
fmull
mov
in
jb
or
int3
lahf
mov
scas
orb
aad
sarl
dec
sbb
jno
sub
mov
lea
repz
mov
xor
mov
adc
sti
jg
xlat
lcall
lds
mov
add
mov
loope
mov
sbb
jo
out
sub
shl
mov
or
mov
push
add
xchg
xchg
add
sbb
or
movb
je
dec
scas
pusha
push
sbb
orl
ret
cmp
mov
js
pushf
subl
and
or
mov
pop
int3
sbb
stos
mov
mov
mov
push
xor
push
push
jle
insb
cmp
mov
cmp
xor
inc
mov
js
push
andb
and
mov
push
decl
cmpsl
inc
sbb
popf
aas
test
rolb
iret
loop
loope
das
pop
sbb
fs
clc
pop
and
orl
in
mov
sub
mov
mov
pop
add
cli
fsubp
fcmovnu
push
std
iret
lods
inc
mov
xchg
ja
jg
mov
scas
idivl
addl
mov
fcmovu
mov
aaa
sbb
jmp
pop
enter
fidivs
or
add
lcall
int3
leave
push
jb
sarb
jo
leave
xor
ja
loope
int
jl
mov
mov
mov
fadd
cmp
sar
mov
xor
xchg
ret
mov
dec
dec
mov
mov
sbb
dec
jbe
xchg
mov
mov
or
repnz
and
cld
sbb
lods
add
mov
xchg
inc
shrl
je
dec
shl
inc
add
mov
add
shrb
aam
push
push
or
int
sbb
into
and
sbb
rcrl
pop
mov
lcall
sti
cmovle
sub
adc
sahf
pop
mov
int3
repnz
pop
ret
sub
mov
cld
mull
in
in
dec
cmpsb
mov
adc
movsb
sub
jns
inc
jge
cmpsb
paddd
mov
jb
and
cld
insb
repnz
add
scas
ds
fcomip
and
andl
lods
mov
sbb
sub
xor
loopne
test
addr16
insb
scas
mov
push
repz
dec
imul
aas
xchg
adc
fwait
or
ds
jle
test
bound
and
lret
add
scas
lea
mov
sub
add
add
clc
mov
insl
lods
das
xor
sub
pop
adc
test
sbb
nop
pop
and
mov
mov
lods
jnp
jl
insl
mul
cli
scas
sbb
adc
xor
rorb
cs
jmp
sub
sub
lcall
sbb
lock
adc
inc
mov
cs
les
hlt
lahf
jnp
es
out
push
jecxz
fbstp
lret
push
lock
ret
outsb
sarb
sahf
mov
clc
pop
fbstp
mov
inc
cmpsb
adc
mov
lahf
mov
adc
sahf
mov
sbb
out
sub
pusha
mov
cmp
imul
sub
loopne
lcall
out
rep
insl
inc
out
push
inc
inc
imul
arpl
mov
pop
dec
push
pop
movl
cld
adc
jb
aaa
mov
insl
lahf
ss
pop
sub
mov
pop
adc
jae
loopne
sub
mov
jle
test
nop
jle
arpl
in
in
inc
fwait
pop
sbb
xor
imul
sub
mov
add
mov
into
insb
hlt
mov
mov
dec
inc
dec
imul
xchg
add
aas
xorb
cwtl
popf
inc
push
jnp
push
jmp
aas
in
lcall
pop
or
push
inc
mov
pushf
cmpsb
mov
mov
jae
push
enterw
xchg
jb
scas
push
cmp
shrl
mov
lahf
mov
jne
jecxz
add
cmp
outsb
pop
adc
pop
xor
aam
adc
xor
lock
pop
adc
ljmp
push
inc
dec
dec
int3
inc
imul
in
xlat
sbb
mov
mov
jecxz
stc
add
jno
shrl
hlt
out
fs
mov
out
fistpll
add
lahf
popl
inc
js
mov
sbb
dec
ss
xchg
scas
fs
mov
rcrl
aaa
ljmp
in
ja
jge
or
sbb
sti
xor
lds
and
data16
js
jbe
cmp
arpl
js
fcompl
add
addb
call
insb
test
lret
push
mov
enter
test
aam
xchg
shrb
mov
test
jecxz
xchg
cmpb
xchg
jo
pop
xor
arpl
leave
xchg
pusha
popa
imul
mov
in
scas
sub
daa
pop
xor
shr
icebp
jge
pop
xchg
in
jne
das
jp
dec
xchg
push
push
xor
sub
push
out
icebp
jae
dec
and
mov
or
xor
xchg
xchg
push
fsubr
movsb
xor
add
fwait
adcb
pop
ja
cmp
dec
sub
sub
add
mov
outsl
and
cltd
cwtl
xor
movsb
inc
dec
pop
mov
or
in
jecxz
je
stos
jno
es
add
fxtract
stos
jmp
jmp
jg
in
push
repnz
jo
rclb
dec
jns
daa
pushl
sub
jp
add
mov
mov
cwtl
pusha
rolb
adc
insl
shl
lea
stos
dec
jg
mov
pop
cmp
int3
pusha
pop
shlb
je
in
mov
mov
sub
dec
xor
in
jnp
sarl
in
bound
cmpsl
stos
jbe
in
jge
or
and
insl
sub
and
jp
sub
rcll
dec
inc
iret
jg
jmp
jns
notb
jo
dec
xchg
popf
aas
pusha
dec
or
jns
fnstenv
xorl
fucomi
push
inc
and
and
cli
mov
adc
jb
pushf
out
push
jp
push
jg
in
adc
test
adc
mov
testl
pop
aas
test
das
cltd
fwait
xchg
lds
mov
repz
popa
or
cltd
pop
cli
loopne
sub
sub
adc
push
cmpsb
cmp
jnp
int3
xor
and
sub
fucomi
movsl
shrb
jp
xor
xlat
or
aaa
xchg
xor
mov
xchg
popf
or
ret
repnz
sti
jge
and
adc
insl
push
lcall
cwtl
pop
fstps
add
call
cld
shlb
mov
leave
mov
imul
pop
arpl
hlt
sahf
xor
mov
divb
sti
mov
sbb
dec
push
inc
xchg
jmp
insb
ror
mov
repnz
icebp
pop
mov
std
push
cs
bound
dec
fsubrs
out
stos
enter
les
outsb
or
push
inc
aad
arpl
sbb
pop
mov
cmc
clc
call
sti
ljmp
xchg
mov
mov
dec
xor
mov
aad
xor
xchg
mov
jns
pop
mov
cmp
and
stos
jle
dec
sarb
in
jge
or
mov
sbb
lds
call
scas
outsl
mov
js
leave
fsubp
mov
lret
test
mov
outsl
mov
arpl
xor
mov
adc
jmp
rcrl
pop
sub
out
dec
mov
aad
cltd
cmp
mov
jecxz
ljmp
sbb
push
push
insl
pop
call
adc
jne
xchg
xchg
xor
jge
les
sbb
and
fidivrl
adc
bound
int3
or
mov
fildl
mov
jl
xchg
push
into
leave
pop
xchg
fcomps
xor
dec
lock
js
mov
les
or
ja
movsb
mov
mov
xlat
push
push
fidivrs
pusha
mov
inc
daa
mov
mov
orb
jb
ds
pop
pop
enter
sub
bound
xchg
lock
mov
jns
cs
inc
xor
pop
mov
cli
je
mov
push
sub
mov
xchg
cli
mov
sub
aas
xchg
cmpsb
sub
clc
jmp
stos
sbb
jns
fldt
lea
roll
xor
int3
xchg
outsb
int
or
add
out
mov
dec
daa
shlb
je
cli
out
pop
mov
xor
jb
and
sub
mov
push
mov
sub
in
dec
clc
dec
xchg
lcall
mov
into
jbe
jnp
je
outsb
inc
or
mov
lods
xchg
or
mov
aam
fldcw
popl
loop
je,pt
dec
cwtl
push
stc
iret
or
fs
xchg
mov
das
cmc
or
jp
fs
incl
fcompl
js
jmp
push
mov
aaa
cmp
pushf
push
bound
loopne
call
sub
pop
pop
shrl
std
les
mov
repz
or
mov
sbb
not
daa
push
xchg
mov
enter
arpl
dec
stc
lahf
ret
xchg
fwait
imul
and
cmp
cmp
sub
shlb
mov
mov
jae
jle
ds
cli
mov
dec
pop
subb
mov
lods
xchg
popf
xor
or
test
cwtl
or
aad
je
sbb
fiaddl
mov
mov
pop
sbb
scas
and
adc
in
xchg
out
or
mov
jns
stos
fldt
int3
inc
scas
repnz
fistl
dec
fnop
xor
jmp
lods
sub
sbb
xchg
sarl
ljmp
addr16
sbb
scas
xchg
es
jge
popa
inc
pusha
adc
sahf
int3
jmp
lds
fsubrl
ret
cmp
xor
cltd
outsb
cmpsb
rclb
add
adc
push
jg
mov
sbb
jl
lcall
jg
loopne
xor
pop
lods
xchg
jg
add
sub
jnp
mov
int
ret
in
xchg
imul
inc
addr16
jns
shll
aad
cmc
sahf
mov
or
cs
jns
mov
negl
xor
xchg
adc
push
fbld
stos
cmpsl
std
out
sub
cmpsl
mov
cmp
testb
ret
pop
and
mov
sbb
mov
sbb
mov
or
mov
into
dec
or
daa
push
stos
aam
pop
dec
call
jb
pop
lods
xchg
fisubrs
dec
dec
daa
call
stos
push
movsl
or
push
jne
add
mov
cwtl
and
loopne
mov
int3
cwtl
rolb
pop
xchg
mov
cmp
scas
adc
jp
xor
jns
mov
mov
push
lcall
push
call
add
insb
inc
enter
mov
or
shll
in
or
lea
andb
mov
cmp
mov
xor
jecxz
in
insl
sahf
mov
maxps
mov
loopne
add
aam
popa
mov
mov
or
mov
nop
mov
mov
adc
sbb
cmp
xor
out
lret
lcall
fdivrs
lods
adc
and
daa
push
loopne
pop
inc
fwait
subb
aaa
popf
mov
divl
movsb
add
or
das
daa
gs
inc
jae
idiv
pop
bnd
mov
push
loope
cmpsb
fwait
and
ja
fimuls
sahf
fildl
adc
mov
push
xchg
hlt
jno
sbb
ss
es
aaa
in
or
outsl
sbb
mov
adc
pop
adc
jo
notl
fs
mov
insb
imul
loope
add
xor
cmp
xchg
push
dec
fmull
icebp
adc
into
shrb
cmp
xorb
xchg
clc
cwtl
scas
mov
xchg
xor
and
icebp
jmp
fidivl
aaa
pop
test
dec
les
jecxz
sub
mov
movb
xchg
icebp
and
push
or
sbb
lret
xchg
cmp
xor
popf
push
loopne
pushf
scas
and
test
cmp
xchg
pop
jmp
inc
xchg
je
push
imul
and
jecxz
loop
out
movsb
push
mov
mov
movsb
test
dec
popf
dec
aad
inc
mov
xor
test
je
adc
shrb
adc
push
in
pop
fdivrs
lods
or
mov
pop
inc
push
sub
cmp
divps
fidivrs
sbb
aaa
lea
test
fisubl
les
roll
ficoms
push
je
mov
pushf
jnp
pop
xchg
mov
cmp
push
popf
or
xchg
push
mov
addr16
scas
sub
lea
xor
ja
ljmp
jnp
fildll
shll
popf
icebp
push
pop
mov
xor
in
mov
lret
pop
push
dec
and
insb
fcmove
mov
movsb
mov
inc
stos
sbb
add
roll
push
adc
rolb
aad
add
enter
and
jns
mov
outsb
dec
add
movsb
xor
cli
push
icebp
mov
inc
jecxz
mov
shl
cmp
jp
fisttpl
es
push
popa
dec
jl
pop
add
xor
mov
push
mov
mov
xchg
bnd
cwtl
icebp
rorl
hlt
push
dec
stos
adc
pop
cmp
popa
iret
add
mov
leave
mov
lods
sahf
cwtl
stc
or
aas
int
or
nop
jbe
xchg
adc
out
sbb
xor
insl
bound
bound
or
scas
mov
mov
aam
icebp
imul
push
jae
repnz
xor
imul
loop
pop
mov
pop
jg
pop
fcmovne
repz
add
lods
jg
subb
ljmp
mulb
enter
xor
in
xchg
scas
pop
dec
sbb
inc
in
pop
xor
imul
scas
decl
aam
aam
out
js
push
jge
fdiv
fbstp
stos
les
add
mov
pop
mov
adc
cmp
mov
add
out
leave
jge
fcoml
sbb
flds
cmp
repnz
mov
sbb
enter
in
pop
push
push
mov
sbb
iret
mov
dec
or
and
jb
push
push
movsl
mov
test
push
test
and
xorl
out
lock
adc
cmpsb
loope
pop
mov
ficomps
and
or
add
inc
adc
sub
adc
fadds
loop
and
push
out
mov
add
cltd
mov
in
jnp
shrb
andb
xor
and
loope
divb
je
js
ret
stos
dec
fistpll
inc
ret
icebp
scas
in
pop
adc
test
stos
push
xchg
std
and
andb
test
fstps
loope
sub
mov
and
xchg
inc
jbe
lock
rorl
scas
push
test
push
cld
das
mov
popf
testb
sbb
sbb
outsl
je
stos
insb
outsb
sub
sub
jmp
popf
repnz
js
inc
mov
dec
adc
or
cmp
cmpsl
jmp
and
insl
dec
movsb
mov
test
loop
push
add
ret
sub
neg
out
loopne
adc
and
popa
int3
add
scas
jb
insb
pop
mov
inc
push
mov
pop
fnstenv
bound
leave
movsl
adc
popl
pop
les
jmp
xor
inc
cmp
add
and
mov
or
push
push
cmp
in
cwtl
in
mov
mov
fsubl
xor
sbb
es
add
rcrb
ja
in
sahf
pop
jno
adc
daa
movsl
mov
sbb
pushf
jno
mov
jl
mov
notl
test
sbb
jg
mov
cmp
mov
xchg
fidivs
stc
xor
push
lahf
aam
pop
jbe
mov
js
xchg
ret
xor
inc
and
xchg
add
scas
sbb
sti
icebp
or
push
dec
bound
das
push
rorl
push
into
fistpll
outsb
nop
pop
ljmp
lret
and
fisttpll
je
cmp
aas
lret
push
enter
mov
enter
jl
imul
push
xchg
xchg
jl
lcall
sub
jnp
lods
xor
and
push
lods
pop
cmp
pop
mov
push
xor
pop
movsb
pop
jmp
jg
inc
mov
and
addb
pusha
test
out
dec
mov
into
sub
mov
lcallw
scas
pop
outsl
xchg
pop
mov
sbb
scas
fs
bound
xor
push
jmp
xor
jnp
cmp
popf
lock
jecxz
sbb
jmp
jns
push
mov
push
push
out
lahf
adc
sub
or
xchg
cmpsl
jmp
das
dec
stos
das
add
inc
pop
jnp
std
pop
jmp
xlat
shll
add
jp
sti
push
fwait
lods
scas
xor
jnp
mov
or
lret
sub
fisubrs
iret
mov
jne
push
imul
lock
loope
adc
scas
adc
add
cmp
in
push
repz
cmp
mov
shlb
fdivl
data16
push
test
outsl
sbb
out
std
nop
lods
jmp
shrl
mov
lcall
and
fidivl
shll
test
ret
xor
lods
popa
lret
dec
mov
push
jae
cmpsl
insl
aaa
mov
add
out
andb
mov
and
rorb
ss
mov
sbb
mov
mov
out
dec
adc
lcall
sub
int3
pushf
aaa
mov
leave
push
js
int3
int3
lods
test
jp
pop
adc
pop
mov
jecxz
mov
loopne
aam
jbe
bnd
movsb
outsb
pop
stos
xchg
mov
cmp
mov
call
xchg
js
inc
data16
mov
xchg
mov
fcomi
fs
out
repz
aad
mov
mov
jmp
cmp
in
jb
fmuls
jae
imul
jp
push
outsb
iret
add
push
fldcw
push
pop
test
sub
cld
in
mov
xchg
ljmp
test
scas
fsub
addr16
sbb
inc
jg
sarl
mov
loop
cmp
ficomps
dec
dec
orps
and
test
ss
jmp
fstps
ja
lock
aaa
xchg
arpl
dec
arpl
call
imulb
hlt
and
mov
lods
addr16
loop
dec
lretw
jge
loop
stc
and
roll
add
and
sbb
sub
imul
sub
shrb
or
add
inc
cmc
daa
inc
cmp
imul
cli
scas
insb
aad
lea
sub
in
add
mov
push
jbe
sbb
pop
das
dec
mov
adc
jno
jmp
stos
lods
push
dec
xchg
push
ljmp
mov
adc
or
mov
sub
ljmp
std
mov
inc
cmp
adc
pop
inc
call
outsb
jno
shrb
or
imul
test
push
mov
or
or
stc
in
dec
sbb
adc
inc
xchg
add
fldenv
push
ja
stc
sbb
mov
es
or
xor
fldl
sub
pop
call
add
cld
repz
ret
cmp
sbb
mov
lret
jnp
lea
ret
inc
pop
add
pusha
pop
scas
inc
push
sbb
xlat
sbb
cmpl
mov
stos
add
push
xor
add
jne
cmp
jne
mov
movsbl
cltd
add
adc
xor
xor
cmp
jne
cmp
je
mov
xor
mov
sub
add
mov
jmp
mov
mov
mov
mov
lea
mov
mov
mov
mov
xor
add
mov
mov
mov
xor
add
cmp
jne
mov
xor
mov
add
imul
mov
pushl
jmp
mov
mov
jmp
test
lock
orb
enter
mov
push
aad
sbb
addl
daa
repnz
aaa
lret
out
outsl
push
in
add
jge
xchg
mov
adc
insb
add
es
sbb
jg
hlt
adcl
ja
mov
outsb
lods
fmulp
adc
xor
dec
testl
dec
pop
test
hlt
andb
adc
lea
shrl
push
xchg
inc
mov
pushf
sti
popl
mov
or
sbb
ret
add
jp
sbb
fs
xlat
and
iret
out
push
fs
jp
jge
out
lret
test
pop
cwtl
fldl
in
out
data16
test
xchg
mov
pop
loope
sbb
inc
push
lcall
xor
orb
pop
sbb
jge
lock
xchg
cmp
jecxz
mov
xchg
test
pusha
push
std
pop
inc
add
dec
mov
xor
push
push
insl
out
sbb
cmp
rcrl
lahf
fdivr
addr16
fwait
ljmp
fs
cs
nop
scas
xchg
pushf
pop
sahf
add
push
dec
jecxz
jp
dec
lods
in
sub
push
inc
sbb
adc
sub
xor
leave
ret
inc
xchg
les
xchg
push
cld
fst
inc
scas
mov
shrl
fsts
cmp
sbb
and
mov
mov
mov
aaa
ret
and
popa
sub
mov
cmp
jp
cmp
jp
xchg
inc
lods
add
jp
jno
push
xor
or
push
cmp
mov
scas
jg
dec
scas
dec
clc
jne
mov
mov
ffree
lds
cmp
push
std
push
mov
gs
cmp
mov
pop
cmp
and
int
mov
mov
inc
lods
fisubs
aas
xchg
xor
mov
das
clc
lret
fdivrs
notb
and
sahf
ret
imul
aam
add
rorb
dec
movsl
repnz
pop
sbb
into
test
cwtl
xchg
xor
mov
mov
lods
out
pop
jno
xorb
into
in
stos
add
sbb
ljmp
add
scas
lcall
repz
or
imull
arpl
scas
jmp
mov
cltd
inc
stc
in
ret
or
lock
add
cwtl
sbb
jae
jb
mov
cmpl
stos
mov
repnz
pop
int
stos
imul
mov
daa
mov
pop
sahf
fadds
shlb
push
push
loop
fcomp
rorl
dec
mov
int3
add
arpl
pop
loopne
cmpsl
rorl
pushf
aad
push
fistps
fstps
xor
xor
pop
enter
pop
inc
dec
mov
add
aad
cmp
mov
fs
leave
rcrb
xor
cmc
mov
xor
filds
cltd
ss
testb
cwtl
rolb
or
xlat
mov
test
xchg
les
mov
or
lock
cmpsl
clc
insb
adc
in
addr16
rcrb
popa
adc
mov
jge
and
lock
pop
mov
push
xor
pop
shl
mov
inc
xor
sub
push
loopne
adc
dec
xchg
js
loopne
mov
push
sbb
loopne
mov
scas
fldt
cmp
jge
mov
data16
xchg
out
mov
cli
push
out
test
dec
xchg
dec
jae
dec
ret
into
je
cmpsl
mov
sti
insl
mov
jg
jmp
fptan
out
xchg
xchg
not
or
cld
add
pop
aas
and
loop
or
cmp
filds
mov
inc
dec
jbe
imul
icebp
and
jb
rcrl
add
xchg
out
jp
mov
shr
mov
cmp
jl
sbb
add
mov
in
jl
add
cmp
xchg
adc
int
stos
xchg
xor
cmpsb
sub
out
push
fwait
mov
pop
fadds
in
pop
xchg
cmpsl
jno
popl
mov
fnstcw
andb
xor
inc
fldenv
mov
mov
enter
in
dec
into
xor
lahf
mov
jg
add
inc
mov
test
push
stc
lods
or
fisubl
or
sbb
cmpb
xchg
insl
addr16
mov
mov
mov
cmp
jmp
push
lea
jae
rcl
push
push
cmp
add
add
and
mov
lock
movsb
stos
ret
rorb
test
add
mov
out
inc
push
xor
mov
xchg
bound
or
push
dec
dec
aaa
xchg
pop
xchg
ds
outsl
lahf
mov
inc
fsubrs
sub
push
dec
outsl
cmc
push
stc
stc
stos
add
pusha
enter
xchg
insl
addr16
outsl
ja
sarb
cwtl
fwait
dec
sbb
jb
daa
cmpsb
out
push
sub
mov
xor
lret
ret
mov
lock
sub
pusha
cmp
sahf
cmp
xchg
mov
mov
fwait
or
mov
cs
cmpsb
cmp
pop
mov
sbb
pusha
cmp
mov
xchg
dec
repnz
stos
add
sbb
and
push
lock
and
rcr
cmc
outsl
cmp
les
pop
fnstenv
jp
push
push
imulb
push
aaa
dec
out
adc
rcrb
fnstcw
cmp
in
faddl
inc
ror
xlat
pop
mov
cltd
lret
pop
lret
mov
cmpsb
or
das
js
hlt
jnp
dec
xchg
push
fdivrl
xor
mov
shl
test
orl
jne
sub
xchg
jb
push
lcall
or
sti
mov
push
jle
jecxz
sbb
sbb
xchg
enter
adc
je
adc
jnp
fcom
imulb
int3
push
pop
adcl
js
fnstsw
stos
fstpt
les
fiadds
inc
push
xor
fwait
loope
mov
push
sbb
scas
and
mov
dec
mov
lds
push
add
pop
or
daa
add
mov
dec
sarl
test
inc
insb
sub
pop
idivb
jp
cmp
rclb
fwait
sub
movsb
xor
jmp
loopne
data16
cmc
sub
pusha
repz
ret
push
and
stc
mov
mov
push
dec
movsb
lock
xor
push
and
pop
push
rorl
in
cmc
sub
loope
mov
loop
fidivl
inc
scas
xor
add
jns
in
add
cld
inc
dec
data16
or
inc
lds
or
and
insl
push
out
inc
xlat
mov
jae
sub
pop
mov
jge
pop
mov
repnz
enter
adc
xlat
dec
xchg
mov
lcall
ja
outsl
test
sti
pop
dec
notl
mov
pushf
mov
jmp
movsl
inc
cld
sbb
jae
mov
ss
pop
cmpsb
add
outsb
addr16
add
imul
scas
fidivl
stos
pop
and
sti
and
icebp
xchg
pop
jecxz
push
test
stc
jmp
push
scas
lea
xor
mov
sbb
dec
cmp
pop
test
xchg
xchg
mov
data16
xchg
sub
cmp
aaa
push
add
ss
cmpsl
pop
sbbb
ja
add
xor
fsubl
pop
and
mov
pop
xlat
cltd
xor
aam
cmp
js
inc
push
int3
lock
decl
scas
cli
dec
mov
jae
xchg
adc
imulb
dec
pop
dec
in
mov
adc
add
inc
push
loop
mov
inc
call
fcoml
jns
push
out
lcall
andb
adc
or
and
bound
push
or
rol
cs
sbb
test
jb
sbb
aad
ss
or
loopne
mov
jbe
addr16
mov
dec
clc
and
fnstsw
fidivrl
cld
pushf
cld
xor
sbb
jo
sti
std
js
mov
or
lock
test
xchg
cmp
ret
or
jge
fcmovnu
push
lret
sahf
in
stc
cmp
push
and
mov
sub
xlat
les
xchg
or
ja
insl
adc
cmp
ljmp
cs
movsl
cmpl
les
int
push
pop
sub
es
sbb
pop
mov
js
int3
ljmp
inc
mov
mov
sbbb
and
cli
hlt
sub
pop
mov
mov
std
adc
outsl
add
test
mov
mov
enter
aad
popl
iret
sbb
jle
push
sahf
inc
jecxz
bound
jb
mov
xor
jecxz
mov
cmc
popa
test
cld
add
jne
sbb
in
dec
mov
push
adc
ret
mov
dec
fcoml
mov
orl
mov
adc
xchg
adc
cli
stos
jo
into
dec
mov
data16
push
or
cmp
push
enter
dec
cmc
daa
jno
add
fcom
dec
add
stos
push
jge
adc
cmp
arpl
add
mov
and
shrl
int3
fcomps
movl
cmp
lahf
mov
lods
pop
es
in
inc
jg
sub
enter
inc
cmp
in
sub
xlat
push
fnstsw
pop
lds
push
or
pop
rolb
fcmove
dec
sahf
jo
cmp
sub
roll
aaa
dec
mov
lea
pop
cltd
arpl
dec
push
lds
stc
fnstsw
imul
addl
add
fsub
fdivl
ret
lret
pop
fisttpll
mov
xchg
and
push
jecxz
repz
ret
out
leave
mov
mov
aas
jb
rol
in
aad
adc
test
mov
sbb
inc
push
xchg
in
shlb
add
out
cmp
cmp
jbe
sarl
mov
mov
mov
clc
clc
in
mov
mov
push
gs
xor
xchg
mov
jbe
pop
mov
repnz
pusha
sahf
mov
xlat
in
cmp
and
ret
push
pop
in
jle
adc
dec
and
and
movsl
inc
inc
ret
pop
mov
popl
add
add
add
sbb
cmpb
pop
hlt
popf
sub
or
insb
mov
addl
lret
enter
sti
fldl2e
jecxz
jecxz
pop
sbb
cmp
and
adc
and
mov
push
jbe
call
test
xor
or
jbe
xchg
mov
push
fidivl
lret
pop
push
jmp
lcall
out
fcmovnu
pop
cmp
pop
adc
jge
cmpb
pop
sbb
gs
mov
orl
push
cmp
xor
xor
repz
leave
and
inc
xchg
ljmp
addr16
mov
cmp
and
mov
gs
mov
insl
push
jo
lods
cmpsb
push
outsl
nop
pusha
test
and
and
and
roll
cmc
add
and
xor
push
out
out
sbb
flds
or
fstpt
mov
out
xchg
sub
or
jmp
mov
shll
iret
push
xchg
mov
xchg
cmp
jno
adc
jo
movsb
iret
xor
push
mov
sti
jb
jb
pop
int
popa
out
xor
push
mov
mov
sbb
mov
les
mov
mov
shlb
mov
fcompl
adc
pop
and
incb
sbb
dec
test
enter
pop
lock
test
fidivl
xchg
jnp
cwtl
push
pop
jno
adc
es
dec
ret
inc
std
test
jno
cmp
adc
mov
mov
mov
mov
and
inc
in
push
mov
mov
mov
mov
cltd
adc
int3
lock
fisttpll
adc
idivb
or
pop
mov
pop
pusha
lahf
idivb
dec
mov
dec
icebp
mov
mov
cwtl
cwtl
jecxz
jl
loope
imul
aaa
mov
push
mov
cs
inc
popf
loopne
mov
fcoml
fisubs
dec
or
std
sbb
movsb
rclb
push
rcrl
dec
or
test
push
lret
test
xlat
or
lcall
mov
addb
mov
add
ljmp
lds
in
dec
cmpsb
scas
dec
shl
dec
mov
mov
add
out
mov
push
mov
mov
iret
sbb
add
pop
lods
out
or
jae
imul
clc
jg
mov
and
lahf
popf
xchg
sbb
push
roll
scas
pushf
adc
xchg
cmc
and
mov
stc
mov
push
xchg
in
xchg
ja
or
push
aaa
add
rolb
dec
out
mov
mov
mov
out
js
mov
mov
aaa
mov
xor
addl
adc
cmp
lcall
cwtl
mov
scas
and
fsubrs
fdivl
addr16
mov
jmp
cmp
stos
mov
imul
je
cmp
inc
mov
xchg
bnd
mov
imul
das
cltd
imul
and
sbb
xor
xchg
rolb
ret
out
mov
pop
push
enter
pop
inc
mov
orl
mov
loope,pn
daa
rcll
mov
fldt
adc
into
dec
xchg
fstpt
adcl
add
xor
jp
ret
mov
xlat
mov
repnz
pop
loopne
mov
dec
flds
mov
insl
sub
jae
dec
push
mov
pop
insl
xor
dec
hlt
mov
loop
adc
add
daa
in
or
cld
ja
call
push
xchg
subl
lods
add
sub
push
push
jg
rcrb
push
or
imul
mov
push
rcrl
repnz
and
lret
dec
ljmp
mov
lods
pop
and
loopne
pop
stos
adc
imul
iret
dec
ret
rorl
ljmp
int
xor
in
fdivl
dec
ret
xchg
pop
insl
mov
inc
sub
out
enter
ret
in
cltd
jle
or
loopne
dec
jnp
mov
mov
and
mov
lret
add
lret
cli
sbb
inc
cmpsl
push
sbb
push
dec
js
and
cmp
cwtl
mov
js
ljmp
mov
pusha
and
shll
xor
enter
lcall
lods
in
test
mov
lea
adc
inc
adc
jnp
pop
add
fwait
rcrb
jns
pop
push
fwait
mov
xchg
clc
pop
ret
addr16
dec
mov
jl
out
push
inc
and
adc
jp
notb
aam
je,pt
cltd
lret
aas
lret
add
mov
cmpsb
mov
sbb
dec
imul
lret
lods
push
sti
icebp
cltd
clc
inc
push
push
mov
push
aad
jecxz
jno
add
cmp
inc
outsl
xchg
pushf
ljmp
mov
dec
lea
add
mov
call
push
xor
sbb
mov
cwtl
push
ss
movsl
sub
movsb
iret
dec
decl
shr
and
stos
mov
and
inc
push
inc
call
adc
pop
or
out
add
dec
mov
lcall
jo
jecxz
leave
test
add
and
call
or
fucom
in
dec
sbb
adc
and
cwtl
pushf
add
pop
test
sbb
xlat
les
mov
into
push
cltd
in
mov
mov
pop
and
push
lock
aam
add
fildl
sub
data16
fbstp
popf
fnsave
pop
jl
sbb
jnp
inc
fiaddl
aas
inc
xor
pop
mov
and
jmp
add
mov
sahf
addr16
mov
je
ds
dec
iret
mov
adc
fstl
or
adc
push
iret
iret
jbe
mov
cmp
and
mov
mov
call
aaa
andl
mov
lcall
lods
subb
ret
cmpsl
mov
dec
je
xchg
enter
sub
dec
sub
decl
ret
pop
repnz
icebp
sbb
mov
inc
rclb
jne
pop
jg
lea
inc
mov
in
fcompl
push
pop
dec
cmpsl
push
imul
jae
ljmp
leave
mov
cmp
xchg
xchg
in
lods
daa
and
and
push
mov
test
mov
pop
mov
stc
xor
shl
push
fcmovu
pop
jnp
pusha
pop
sbb
in
sbb
push
add
mov
add
loopne
and
cltd
shlb
sub
leave
mov
cli
call
hlt
loopne
mov
imul
stc
adc
mov
adc
jge
out
xor
inc
cld
pop
mov
fnsave
decl
lock
lahf
xor
jns
imull
int3
test
sarb
dec
inc
sub
or
jbe
adc
insl
inc
je
inc
das
loop
xor
mov
xchg
cmpsl
push
in
pop
das
mov
or
les
and
stos
xchg
add
nop
mov
sahf
adc
data16
jle
rclb
adc
add
icebp
jns
xchg
cltd
sub
mov
add
aaa
jg
or
dec
adc
sbb
ja
push
xor
lret
mov
setl
sbb
add
jmp
lock
shlb
insb
arpl
ret
aaa
cwtl
ret
ljmp
sub
ss
loopne
cmp
cmpb
xor
inc
out
mov
lods
sub
pop
std
outsb
arpl
sbb
adc
arpl
insl
add
jbe
inc
fnsave
cmp
pushf
mov
popf
inc
jge
xchg
sbb
in
lcall
sbb
xchg
cmp
std
xchg
lcall
mov
mov
mov
loope
add
push
dec
lret
lock
add
cld
push
xor
lahf
inc
push
test
cmp
xchg
xlat
fwait
leave
lea
cmp
stc
push
mov
cmp
dec
icebp
jno
sbbb
lods
xlat
cld
xlat
jne
jo
add
out
sbb
cld
or
xchg
in
movsl
mov
ljmp
xchg
rcll
sbb
pop
into
aas
mov
mov
insb
call
pop
icebp
scas
aas
sub
divl
xchg
xor
inc
sti
jle
rcr
sub
inc
sub
jp
mov
jne
sub
test
mov
addb
mov
pop
pop
mov
fldcw
icebp
or
xorb
lret
psubsb
es
jnp
movsb
lds
aas
jno
bsf
int3
fs
in
repnz
push
pusha
pop
pop
xchg
xchg
aaa
sub
test
fdivrp
lcall
in
dec
add
repnz
mov
push
sbb
cmpl
xchg
fmuls
mov
adc
stos
push
pop
not
pop
and
mov
nop
insb
cli
pop
dec
lea
adc
push
addr16
xchg
popl
nop
and
cmpsb
pusha
mov
xchg
jae
cld
mov
gs
jp
arpl
repnz
mov
mov
cmpsl
icebp
adc
mov
sbb
outsl
inc
in
push
dec
sbb
push
and
sbb
mov
jno
fidivs
orb
ss
iret
imul
adc
int3
cmpsb
in
cmp
xor
not
xor
adc
cmp
jl
in
dec
mov
or
push
lods
pop
push
dec
inc
adc
jecxz
push
out
popl
subb
sbb
jp
or
jle
mov
loopne
cli
cld
cmp
test
or
cmp
mov
sbb
xor
mov
mov
push
leave
mov
ret
xchg
lds
mov
sub
mov
mov
mov
push
or
int
jecxz
push
xchg
inc
fcompl
inc
xchg
bound
xchg
or
je
stos
scas
enter
enter
push
ljmp
cmpb
xor
rorb
and
push
inc
dec
rolb
pop
lcall
lods
push
xchg
aam
push
loop
inc
cwtl
int3
xlat
or
mov
vpsubd
sub
sti
adc
lret
xlat
jmp
mov
cmp
cmp
cmp
je
cld
fs
mov
daa
jg
call
shlb
fdivrl
mov
stos
mov
sub
out
cmp
mov
and
mulb
loop
inc
push
js
xchg
jp
loop
call
repz
cmp
cli
or
push
repz
popa
fcmovnu
mov
rol
filds
addr16
inc
pop
mov
xchg
cmp
xchg
sti
sub
xchg
add
push
pop
dec
pushf
aam
and
push
popf
fwait
cmp
lret
scas
pop
mov
push
outsb
mov
ss
mov
in
push
push
dec
sub
jg
cwtl
mov
mov
call
mov
fbstp
add
aas
ja,pn
jbe
popf
lea
icebp
dec
lret
repz
mov
ja
mov
call
or
lahf
popa
sbb
inc
jo
jl
push
out
mov
mov
xchg
or
ljmp
and
fisubrl
mov
sbb
icebp
push
idivb
jne
xor
cmc
lods
popf
cmp
adcb
dec
adc
sbb
adc
push
xchg
mov
xchg
mov
mov
dec
pop
test
adc
addr16
cmp
push
fwait
mov
outsl
sbb
mov
and
cmpsl
or
jbe
in
mov
dec
or
jbe
mov
pop
ljmp
xlat
dec
mov
xor
clc
dec
stos
or
pop
pop
out
sbb
popa
lret
lods
inc
and
add
jbe
ret
xchg
mov
pushf
pop
lock
cmc
ret
cwtl
push
jmp
sbb
aam
mov
push
ljmp
inc
movlps
ret
cmc
negb
daa
sbb
mov
movsb
in
mov
std
in
fisttpll
aam
mov
icebp
mov
pop
adc
xchg
shll
ja
adc
inc
lds
test
jo
pop
sti
ljmp
mov
xchg
sahf
bound
inc
dec
rolb
mov
rcr
je
xor
ret
jp
mov
shlb
push
or
add
repnz
enter
stc
mov
cmp
jb
insl
and
test
cwtl
inc
pop
xchg
xchg
icebp
ljmp
pop
repnz
pushf
mov
repz
popa
inc
pushf
in
ja
push
cmpl
aaa
fisubrs
sub
push
ss
pop
sbb
dec
aad
mov
or
mov
mov
mov
popf
roll
insl
mov
in
lahf
pop
jg
adc
fcompl
insl
aaa
ljmp
ss
clc
rcrb
das
shll
xchg
add
lret
int3
mov
mov
xchg
ret
js
ja
push
jmp
call
mov
shrl
int
in
inc
adc
dec
dec
addr16
mov
sbb
adc
add
jo
mov
mov
xchg
push
addb
int3
imul
iret
mov
xchg
lahf
xor
cmp
push
and
imul
inc
cmp
call
imul
pop
lds
and
enter
icebp
nop
scas
ret
int
fimull
aad
loope
int3
mov
mov
cltd
pop
adc
lea
ror
mov
ds
or
lods
mov
addl
shrb
cld
jb
out
jmp
imul
loope
scas
mov
push
cmc
jg
insl
movsl
fidivrs
push
lock
test
push
stos
dec
pop
adc
icebp
test
pop
insb
fdivs
cld
repnz
xchg
test
ret
jnp
lea
dec
lret
stos
or
in
sub
jns
xchg
jne
push
jle
xchg
les
xchg
lcall
shl
out
adc
xchg
add
dec
cli
mov
enter
jp
stc
insl
sbb
cmp
jnp
insl
sbb
shlb
sub
popf
enter
adc
pop
loop
mov
aad
je
fiaddl
xlat
pop
repnz
rcrb
add
icebp
cmp
test
jo
pop
subl
or
jge
fdivrl
mov
xchg
mov
popa
popa
push
xchg
sub
or
and
mov
dec
push
lret
and
lahf
and
xorl
dec
xor
pushf
push
and
xchg
lret
cmpb
mov
arpl
in
add
mov
push
jno
ds
out
xchg
sarl
adc
lods
arpl
sub
dec
daa
stc
and
push
push
mov
movsb
jne
adc
jo
sti
stos
jne
and
std
mov
mov
les
and
insl
xchg
jmp
imul
push
cmp
xchg
push
add
pop
xchg
cmp
jle
mov
imul
jp
test
cwtl
xchg
ljmp
nop
cli
adc
daa
pusha
movsw
dec
add
ficompl
loop
out
call
out
pop
lret
cmp
ficoml
repnz
push
pop
xor
mov
loope
or
pushl
push
mov
jle
int3
xchg
sbb
sarl
xor
jo
inc
xchg
pop
lea
lahf
sbb
inc
ret
cmc
jl
stos
ret
sahf
xchg
xchg
mov
jl
cld
fistps
in
test
adc
mov
orl
xchg
mov
dec
cmp
js
int3
in
mov
loopne
mov
sub
lret
inc
icebp
cmpsb
pop
or
pop
pop
sbb
push
out
fbld
mov
pop
andb
dec
nop
leave
nop
dec
aam
sub
sub
xor
pop
cmpb
cmp
cmp
sbb
cli
ret
dec
jl
add
lods
push
sarl
aas
push
ret
fwait
dec
pop
sti
repnz
fs
add
push
add
mov
sub
mov
test
repz
dec
add
and
ficoml
inc
mov
add
add
mov
mov
jo
nop
scas
xor
in
sahf
xchg
into
pop
sbb
xchg
or
icebp
jns
psadbw
imul
hlt
xor
ret
push
jg
data16
push
sub
sbb
push
fsubl
daa
mov
cmp
ja
sbb
dec
faddp
shl
sbb
xchg
lods
fcoms
jl
lret
aas
loope
jge
imul
mov
or
movsb
sub
inc
adc
inc
inc
xchg
xor
jl
in
push
shll
xchg
popa
jnp
out
daa
pusha
xchg
mov
jge
mov
bound
shrb
dec
xor
test
mov
shlb
cmp
xchg
pop
or
lret
bound
sbb
jbe
inc
or
add
inc
xchg
sbb
es
lea
inc
shlb
out
sar
in
jmp
fildll
xchg
stos
addr16
outsl
testl
jp
mov
jl
jb
in
test
mov
pop
mov
pop
mov
add
aad
cmpsb
ljmp
adc
out
sbb
cltd
out
jecxz
xor
dec
aaa
mov
cmp
sbb
mov
scas
mov
push
xchg
mov
sub
xlat
cmp
in
mov
jg
sub
bound
dec
push
adc
or
in
sub
fmulp
fdivrs
insb
lods
adc
sbb
pusha
imull
push
mov
in
jns
adcl
mov
and
sbb
out
and
jecxz
lds
decl
mov
pop
add
faddl
push
sbb
stc
push
mov
pop
pop
pop
pop
out
mov
nop
inc
rorl
xchg
push
cmpsb
test
mov
dec
cmp
mov
mov
or
outsb
xor
call
in
lock
test
xchg
inc
out
mov
test
in
stc
dec
idiv
mov
enter
and
xchg
and
jge
sub
ljmp
scas
mov
ret
pop
pop
push
shlb
mov
rolb
hlt
adc
dec
mov
gs
push
mov
lcall
pop
test
out
incl
xchg
sbb
les
scas
into
or
ljmp
dec
adc
push
cli
mov
jge
xchg
pushf
mov
pop
cltd
mov
cmc
addr16
popl
mov
sub
lahf
cld
mov
and
push
inc
or
xor
int
mov
roll
xchg
nop
sub
push
int3
sbb
cs
jge
mov
mov
lea
gs
fwait
jp
popl
test
fsub
add
arpl
stos
cmc
rorb
sarb
imul
xchg
jnp
mov
pusha
out
test
push
aad
aad
mov
popf
xor
gs
arpl
jo
pop
mov
inc
pop
std
and
clc
xchg
cmp
dec
mov
in
ja
stos
xchg
pop
and
mov
push
mov
push
mov
fsts
lock
adc
sbb
call
mov
test
mov
mov
sbb
insl
and
fldt
fbld
sub
cmp
add
rorb
mov
push
inc
mov
or
inc
push
fsubp
jb
push
and
and
outsl
push
aaa
les
adc
cmp
xor
adc
mov
clc
popl
mov
loop
mov
mov
outsb
repnz
inc
mov
mov
loopne
into
jge
icebp
popf
es
inc
daa
or
ja
mov
arpl
push
fmuls
mov
cmp
push
add
sub
or
cmp
loope
je
fwait
movsb
inc
xor
pop
and
mov
cltd
or
sbb
leave
iret
scas
adc
out
pop
mov
mov
and
jl
xchg
mov
sub
maxps
test
lahf
push
sbb
add
sbb
int
sub
xor
cmp
call
repz
inc
pop
divb
jle
xor
jo
adc
pop
scas
mov
pop
or
shll
jge
dec
ret
or
sbb
out
jge
hlt
fldl
add
mov
popa
lock
dec
pop
cmp
lret
push
vminpd
mov
data16
inc
inc
mov
les
ja
pop
mov
push
sub
pop
fs
sub
mov
rorl
mov
movsbl
cltd
add
adc
xor
xor
cmp
jne
cmp
jne
mov
mov
mov
mov
jmp
mov
cmp
jne
push
pushl
pushl
pushl
pushl
call
pop
pop
pop
leave
ret
push
mov
and
orl
sub
sbbl
push
push
push
andl
push
orl
push
orl
call
subl
mov
lea
push
subl
push
movl
call
cmp
je
xorl
xor
jmp
mov
xorl
push
lea
push
push
push
subl
push
adcl
call
imul
cmp
movl
jne
orl
lea
andl
push
addl
push
andl
call
cmp
jne
addl
movl
or
mov
movl
cmpl
je
cmpl
jge
jmp
push
push
pushl
call
cmpl
jne
mov
dec
mov
xor
xor
dec
mov
jmp
mov
addl
movl
mov
or
lea
mov
xor
lea
sbb
mov
or
mov
movl
cmpl
je
cmpl
jl
jmp
push
call
xor
add
dec
mov
jmp
mov
mov
mov
mov
mov
sbb
xor
adcl
mov
addl
add
notl
mov
movl
mov
cmp
movl
jne
mov
andl
jmp
xor
add
inc
mov
cmpl
jae
cmpl
jl
jmp
push
pushl
push
call
cmpl
jne
mov
inc
mov
jmp
mov
adcl
mov
adcl
xor
subl
add
addl
mov
mov
xor
notl
add
sbbl
mov
mov
sbbl
xor
subl
add
mov
andl
xor
xor
inc
mov
cmpl
jb
jmp
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
xorl
mov
addl
mov
mov
mov
mov
addl
mov
orl
mov
mov
decl
mov
andl
xor
add
inc
mov
cmpl
jge
jmp
push
push
call
cmpl
jne
xor
xor
inc
mov
cmpl
jb
movl
sbb
mov
xor
xorl
add
jmp
lea
subl
push
addl
push
addl
call
movl
cmp
jne
push
lea
addl
push
adcl
push
push
orl
push
call
imul
movl
cmp
movl
jne
sbbl
lea
push
push
sbbl
call
movl
cmp
jne
mov
xor
mov
sbbl
xor
sbbl
lea
incl
push
add
mov
xor
lea
xorl
push
movl
mov
xorl
pushl
adcl
call
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jl
jmp
pushl
call
cmpl
jne
mov
inc
mov
jmp
mov
mov
mov
adc
xor
and
lea
mov
neg
mov
orl
xor
orl
xor
xorl
add
mov
addl
xor
movl
lea
movl
mov
cmp
jbe
xor
or
or
mov
andl
mov
inc
mov
cmpl
jge
jmp
push
push
push
call
cmpl
jb
mov
mov
mov
movl
cmpl
je
cmpl
ja
jmp
push
call
cmpl
jne
xor
or
dec
mov
mov
dec
mov
jmp
mov
movzbl
adc
mov
subl
sub
andl
xor
mov
lea
mov
xorl
lea
subl
mov
lea
subl
push
addl
push
call
movl
cmp
movl
jne
push
lea
xorl
push
push
adcl
push
push
call
imul
cmp
jne
lea
push
push
subl
call
movl
cmp
movl
jne
lea
addl
push
negl
push
addl
call
movl
cmp
movl
jne
xorl
push
orl
lea
andl
push
subl
push
adcl
push
xorl
push
orl
call
imul
movl
cmp
jne
orl
lea
push
subl
push
notl
call
movl
cmp
movl
jne
lea
push
subl
push
subl
call
movl
cmp
jne
addl
push
lea
push
sbbl
push
push
push
call
subl
imul
movl
cmp
jne
addl
lea
orl
push
push
andl
call
movl
cmp
movl
jne
andl
lea
adcl
push
orl
push
sbbl
call
movl
cmp
movl
jne
xorl
push
lea
orl
push
push
push
subl
push
call
imul
movl
cmp
movl
jne
addl
lea
orl
push
andl
push
andl
call
cmp
jne
orl
lea
subl
push
xorl
push
addl
call
movl
cmp
movl
jne
adcl
push
xorl
lea
xorl
push
adcl
push
push
sbbl
push
adcl
call
imul
cmp
jne
movl
lea
addl
push
notl
push
call
movl
cmp
jne
lea
xorl
push
push
addl
call
movl
cmp
movl
jne
push
lea
adcl
push
xorl
push
adcl
push
xorl
push
call
adcl
imul
movl
cmp
jne
lea
xorl
push
push
orl
call
movl
cmp
jne
addl
lea
movl
push
push
adcl
call
movl
cmp
jne
andl
push
lea
push
push
subl
push
sbbl
push
call
xorl
imul
movl
cmp
movl
jne
lea
push
push
call
cmp
jne
lea
push
push
call
cmp
jne
push
lea
push
push
push
push
call
imul
cmp
jne
lea
push
push
call
cmp
jne
lea
push
push
call
cmp
jne
push
lea
push
push
push
push
call
imul
cmp
jne
lea
push
push
call
cmp
jne
lea
push
push
call
cmp
jne
push
lea
push
push
push
push
call
imul
cmp
jne
lea
push
push
call
cmp
jne
lea
push
push
call
cmp
jne
push
lea
push
push
push
push
call
imul
cmp
jne
lea
push
push
call
cmp
jne
lea
push
push
call
cmp
jne
push
lea
push
push
push
push
call
imul
cmp
jne
lea
push
push
call
cmp
jne
mov
cmp
je
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
pushl
mov
pushl
add
mov
mov
pushl
call
mov
mov
mov
jmp
mov
mov
xor
add
cmp
jne
mov
mov
mov
xor
add
cmp
jne
mov
push
xor
add
push
push
pushl
pushl
call
pushl
pushl
call
mov
xor
add
mov
mov
xor
add
mov
mov
test
je
lea
movl
push
movl
movl
push
movl
call
cmp
jne
push
lea
push
push
push
push
call
imul
cmp
jne
lea
push
push
call
cmp
jne
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
andl
mov
add
adcl
mov
xor
mov
mov
xor
cmpl
mov
jne
cmp
je
mov
mov
cltd
add
adc
andl
xor
mov
mov
mov
xor
add
mov
adcl
xor
mov
mov
xor
mov
cmp
jne
mov
cmp
je
mov
add
mov
jmp
mov
mov
xor
mov
mov
mov
add
mov
mov
xor
add
xor
add
adc
xor
xor
xor
add
adc
xor
xor
cmp
jne
cmp
jne
mov
mov
lea
push
push
call
cmp
jne
push
lea
push
push
push
push
call
imul
cmp
jne
lea
push
push
call
cmp
jne
mov
push
add
push
lea
push
call
mov
mov
pop
pop
pop
mov
pop
ret
push
mov
sub
sub
mov
and
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jge
jmp
pushl
push
push
push
call
cmpl
jne
mov
inc
mov
jmp
movl
or
mov
push
movl
cmpl
je
cmpl
ja
jmp
push
pushl
call
mov
dec
mov
jmp
mov
xor
mov
push
mov
add
cmp
movl
je
movzwl
adc
mov
mov
incl
xor
andl
xor
add
addl
add
movl
adc
orl
xor
adcl
mov
movl
cmpl
je
cmpl
jge
jmp
push
call
cmpl
jne
xor
add
dec
mov
xor
xor
dec
mov
jmp
push
xor
xor
mov
add
adc
xor
xor
cmp
jne
cmp
je
jmp
mov
mov
mov
xor
add
mov
imul
mov
xor
add
mov
mov
mov
mov
xor
xor
add
adc
lea
xor
xor
xor
mov
add
adc
xor
xor
cmp
jne
cmp
jne
jmp
sbb
cmp
xchg
xchg
dec
push
inc
inc
mov
outsl
mov
addl
addl
fmulp
sbb
xchg
cmpsl
icebp
sbb
shll
imul
icebp
mov
jbe
mov
add
stc
push
jne
or
rclb
adc
repz
dec
mov
push
sub
sti
sahf
mov
loope
imul
test
jnp
pop
pushf
int3
enter
pusha
out
out
lret
xlat
mov
dec
fsubrs
scas
add
test
stos
jg
jmp
xor
int3
enter
js
lcall
test
and
push
add
sarl
jae
xor
jns
pop
dec
cmp
xor
stc
ja
js
nop
adc
cmp
jge
inc
test
test
mov
bswap
repz
es
jg
rorb
aam
sub
xor
pop
fldcw
mov
les
movsl
add
add
and
xchg
cltd
or
inc
jmp
lea
jae
aaa
mov
pmaxsw
nop
hlt
in
cwtl
mov
sbb
dec
imul
cs
fistps
in
add
mov
mov
lcall
add
xor
pop
jg
lds
push
sub
xchg
jbe
xor
mov
jl
xchg
test
sbb
adc
mov
aad
test
nop
pop
in
jns
mov
out
sub
arpl
js,pn
jg
push
adc
negl
mov
aaa
repz
inc
pop
push
outsl
fimuls
loope
pop
cmc
jno
jno
mov
cmc
in
pop
push
daa
dec
dec
mov
into
popw
lods
js
jecxz
divl
mov
adc
lahf
jl
mov
repnz
inc
and
or
and
mov
add
xchg
push
sub
sbb
dec
loope
adc
mov
repz
in
popf
inc
mov
adc
aam
push
mov
das
fdivl
sub
adc
jae
inc
pusha
lods
stos
js
push
and
outsl
outsl
xlat
xchg
dec
mov
rcrl
popa
arpl
xchg
xor
les
repnz
in
in
imul
fwait
cmp
enter
jno
push
sub
mov
cmpsb
les
adc
shll
dec
sbb
pop
bound
adc
outsl
push
push
movl
cmp
mov
ljmp
inc
add
lret
int3
xlat
add
push
lahf
mov
dec
push
xorl
push
scas
add
ljmp
outsb
cld
cmp
ficoml
hlt
jecxz
mov
mov
js
sti
push
or
cli
insb
aas
cmp
fldcw
mov
jo
cmpsl
pop
stos
lea
mov
cli
push
cmpl
jbe
and
jle
scas
sub
lahf
imul
hlt
divl
mov
inc
mov
xchg
rolb
sub
or
mov
js
ret
inc
mov
mov
mov
test
icebp
test
lcall
xor
lret
add
das
jmp
inc
mov
stc
cmpsl
dec
rol
repnz
xor
xchg
bound
fadds
inc
push
xchg
or
fsub
aas
mov
rolb
popf
mov
pop
popa
orb
xor
sub
cli
add
aad
xorb
jl
push
xor
int3
fimuls
jne
xchg
cmp
xchg
daa
pushl
mov
aad
jecxz
in
fimull
jp
std
inc
cld
je
sbb
mov
std
enter
out
fsts
xor
in
scas
or
push
je
ror
jbe
nop
shr
mov
loopne
push
sub
cmp
imul
inc
xor
iret
inc
dec
inc
add
pop
xor
ficoms
mov
adc
jle
loope
pop
inc
test
or
mov
in
push
xchg
dec
dec
loopne
les
or
les
push
fdivrs
xchg
mov
inc
pop
sbb
adc
jmp
adc
fdivl
sbb
cmpsl
xchg
into
sti
scas
sub
jo
inc
inc
mov
pop
add
cmc
adc
icebp
mov
sub
pop
arpl
pop
into
mov
add
aad
aad
fisttpl
jnp
jb
and
xor
icebp
jbe
mov
inc
sbbb
xchg
xchg
cltd
ds
hlt
xchg
fimull
sahf
xchg
lds
pop
lahf
mov
je
sub
and
enter
fiaddl
out
aas
aas
adcl
hlt
mov
sbb
into
sbb
out
cmpl
pop
pop
jb
aas
repnz
mov
gs
pusha
lock
xor
push
inc
mov
inc
cmp
lret
mov
movsl
adc
cmp
ffreep
sub
or
jns
outsl
adc
hlt
mov
lcall
testl
cmc
mov
pop
add
xchg
into
xchg
mov
or
cmp
xchg
loope
call
pop
jae
mov
or
addr16
mov
repz
xor
push
lea
iret
hlt
mov
mov
xchg
in
push
addr16
mov
inc
xor
mov
sahf
dec
pop
outsb
and
xchg
cltd
inc
cli
mov
outsb
sbb
sub
sbb
mov
stc
inc
mov
xor
in
js
push
outsb
mov
jmp
in
push
aam
dec
mov
dec
sbb
lods
in
aas
mov
pop
call
inc
push
std
lods
dec
push
shl
xchg
dec
xchg
cwtl
push
xchg
gs
add
ljmp
jb
pop
repnz
push
popf
outsb
cmp
in
and
je
mov
or
mov
sarb
dec
mov
ljmp
adc
sti
mov
sub
fstps
lock
insl
xchg
mov
push
inc
loopne
jbe
dec
aam
popf
dec
or
xlat
push
sarb
add
add
loope
sahf
sbb
mov
and
push
or
dec
jmp
cwtl
fidivrs
or
into
mov
cmp
cmp
cmp
or
dec
or
inc
mov
sub
js
adc
es
ds
cmp
cs
push
ret
pop
stos
push
inc
or
cmp
popf
mov
mov
jno
or
icebp
pushf
sbb
dec
gs
leave
ja
popf
jp
jle
stos
adc
nop
test
pop
stos
pop
pop
push
mov
ret
es
aam
mov
js,pt
ss
adc
mov
mov
adc
adc
or
insl
inc
lcall
and
ljmp
movsl
mov
cmpsb
call
sar
dec
sub
sbb
fiadds
inc
lret
lcall
and
pop
push
jmp
ret
lcall
or
cmp
ljmp
loope
add
jp
addr16
push
inc
fwait
cwtl
mov
push
or
into
data16
xorl
jae
and
jle
popf
test
negb
test
jae
in
insl
adc
add
iret
in
notb
std
xor
adc
or
mov
adc
cmp
mov
inc
cli
sub
dec
cwtl
pushf
test
inc
sub
in
xor
outsb
aad
ljmp
dec
mov
cltd
mov
aas
sti
popf
mov
in
arpl
inc
enter
repz
nop
pusha
and
lods
pushf
dec
mov
jmp
pop
pop
imul
cld
clc
cmc
hlt
cmc
lds
in
cltd
jp
cwtl
stos
fs
fwait
jmp
ret
fs
sbb
cwtl
mov
lret
icebp
xor
push
adc
mov
add
fnstenv
cltd
daa
xchg
shrb
imulb
call
adc
and
dec
fucomp
ljmp
popa
test
stos
mov
jnp
je
pop
mov
sub
jl
cmp
call
cmp
xor
jno
das
or
scas
or
and
fdivl
out
sbb
sbb
mov
das
enter
push
ljmp
lea
loop
test
dec
mov
push
mov
movsl
das
fistpl
js
pop
inc
inc
aad
xchg
pushf
cs
cmp
out
mov
int3
movsb
mov
out
push
enter
jmp
or
insb
sub
pop
not
inc
push
icebp
rcl
lds
adc
sahf
mov
pop
popa
fildll
sbb
outsb
in
add
gs
int
insb
mov
mov
enter
hlt
loopne
pop
insl
dec
cltd
cld
xor
jno
mov
std
cltd
cmpb
int
mov
loope
cmp
adc
xlat
sub
pusha
inc
pop
and
inc
je
movsl
pop
in
mov
xlat
mov
xchg
int
test
addl
xchg
pop
ja
test
mov
xlat
cmp
jb
out
into
sub
pop
adc
add
aam
xor
and
mov
push
xor
mov
test
mov
fiadds
fmul
mov
rol
pop
xlat
add
jns
push
push
lret
push
xchg
out
lea
mov
cmc
dec
fmull
repz
mov
dec
andl
push
stc
out
jp
sub
xor
icebp
mov
ret
sbb
push
pop
daa
xchg
jo
outsl
hlt
jbe
and
iret
or
xchg
fstl
les
inc
dec
stos
mov
cwtl
lock
or
popa
xchg
jb
push
ret
adc
and
faddp
pop
xchg
or
pop
leave
xchg
mov
cmp
push
jno
jo
xchg
cwtl
stc
idivl
inc
notl
leave
push
sbb
push
mov
div
loopne
hlt
adc
fimuls
xchg
push
shl
mov
ds
aas
sub
pushf
fmul
cmp
jl
lret
inc
outsl
mov
nop
mov
and
fsub
scas
out
call
test
cmp
lcall
lods
xchg
aad
pushf
xor
adc
cmp
jae
movsl
mov
fistl
mulb
cmp
adc
adcb
sti
pop
adc
popf
lret
movsb
lahf
jg
sub
dec
orb
daa
repz
inc
hlt
addl
stos
loope
test
leave
lahf
stc
shr
sbb
add
mov
adc
out
push
sti
add
jbe
mov
fimuls
cmpsl
jns
and
daa
mov
imul
xor
mov
pop
xchg
in
add
fistl
dec
es
ljmp
xchg
sub
rolb
jbe
aam
cld
test
inc
sub
repz
sti
add
push
mov
ret
inc
iret
shlb
outsb
rorb
push
pop
stos
loop
sbb
mov
stc
test
dec
sti
jle
sbb
sti
or
pushf
test
out
aaa
mov
insl
xchg
cmp
mov
adc
jp
lcall
xor
mov
jl
xor
mov
adc
cmp
dec
xchg
aaa
movsl
dec
jne
jo
mov
icebp
jmp
sbb
pushf
push
lds
fnstenv
adc
mov
sub
pop
or
popa
fdivs
sti
roll
xor
adc
cmp
or
mov
sti
adc
icebp
in
lods
xor
push
ret
dec
pop
mov
adc
insb
sbb
scas
ljmp
cmp
leave
mov
into
je
add
xor
outsb
inc
mov
lea
into
inc
mov
mov
add
mov
dec
dec
jo
in
js
out
xchg
pop
js
xchg
fidivl
iret
cmp
ljmp
xchg
xchg
cmp
jo
mov
cmp
sbb
adc
jmp
pushf
and
jo
in
jb
das
inc
cld
pop
outsb
rclb
js
or
repz
hlt
loope
sbb
lcall
insl
dec
cmp
outsl
sbb
dec
pop
xchg
sti
or
xchg
repnz
inc
loopne
push
mov
pusha
mov
xor
and
xor
lret
mov
pop
push
insb
mov
mov
adc
out
sub
out
adc
outsl
out
stos
pop
mov
cmp
dec
jbe
cmp
mov
jo
inc
popf
xchg
je
cmp
pop
movsb
hlt
fimuls
push
jp
push
mov
adc
dec
neg
stos
xchg
lea
popa
adc
in
mov
and
adc
dec
inc
xor
scas
clc
fstl
inc
cltd
cmpsl
jge
push
call
popa
jbe
rorl
outsl
in
sarb
ret
sub
in
call
xchg
add
cmp
mov
xchg
mov
dec
mov
int
fldl
outsl
mov
shll
pusha
sahf
daa
or
and
ss
jecxz
add
xchg
movsb
adc
or
scas
adc
aaa
int
ljmp
enter
test
fwait
test
pop
scas
sbb
xchg
fwait
xor
sti
ds
cltd
lods
mov
rcrb
out
xchg
out
pop
incb
mov
and
out
jg
iret
shrb
rol
loop
cmp
mov
adc
ljmp
pop
mov
and
rcrb
mov
dec
sbb
or
xchg
pop
sbb
in
lds
mov
push
and
out
mov
mov
inc
insb
notb
mov
es
fstpt
jae
and
sub
dec
mov
jno
out
cmp
stc
mov
lods
mov
aaa
mov
or
inc
dec
iret
arpl
aaa
xchg
mov
addr16
push
push
push
inc
push
xor
and
imul
js
and
das
sbb
jne
push
subl
mov
sub
cwtl
xchg
and
sahf
dec
das
jnp
clc
fcmovb
mov
pop
pop
xchg
xor
and
xchg
cli
mov
dec
mov
cmp
ror
mov
pop
rclb
cmp
ljmp
push
ret
add
sub
insl
add
pop
gs
clc
ss
jmp
loopne
sarl
jl
into
data16
and
lds
xlat
sbb
into
divb
pop
idivb
enter
std
pop
add
ja
loopne
jge
sti
add
push
loope
loopne
xchg
mov
jge
stos
iret
icebp
dec
mov
test
mov
movsb
addb
pop
lea
inc
and
mov
or
or
jge
jl
pop
push
sbb
lahf
mov
or
dec
inc
jle
inc
or
inc
pop
sub
cmp
jbe
add
xchg
jge
add
rolb
shll
loope
or
or
rclb
lock
pop
push
test
or
repz
into
movsl
test
mov
push
inc
out
sub
fmuls
jnp
stos
jns
lahf
dec
or
pop
lods
movsb
mov
xor
cwtl
rcr
adc
arpl
cld
push
ss
dec
inc
in
mov
lea
and
outsl
mov
push
int
sbb
inc
cli
das
cvtps2pi
xlat
push
cld
sahf
or
rcrl
vhaddpd
addr16
sti
jns
lea
sahf
rorl
xlat
sarb
cmpsb
ret
das
cmp
sbb
repz
imul
push
xchg
push
mov
adc
sti
hlt
out
mov
ret
lods
mov
in
mov
sahf
negl
stos
mov
cmpsb
jecxz
fwait
stos
lahf
jns
sti
inc
int
pop
jbe
iret
jle
jecxz
xor
mov
mov
cltd
pop
repnz
enter
push
push
jecxz
adc
jbe
push
scas
mov
sub
push
push
mov
jne
ds
mov
sub
sahf
inc
pushf
push
sub
xor
push
mov
scas
icebp
enter
add
icebp
movsl
cli
ljmp
cmp
fwait
lods
mov
addr16
sub
fs
out
jge
in
test
xor
sub
add
nop
adc
jno
jmp
loop
mov
pop
push
mov
mov
pop
xchg
inc
iret
lods
jp
insl
add
sbb
pop
test
adc
inc
mov
pop
jno
movsb
dec
sub
sahf
imul
mov
xor
lret
push
fwait
dec
dec
sbb
scas
xorl
ds
jbe
enter
mov
jns
mov
aam
jne
pop
fs
sbb
out
loopne
adc
dec
divl
sub
mov
add
jnp
fsubrl
inc
jmp
stc
sbb
fmull
clc
mov
sbb
inc
fdivs
insl
aas
roll
add
inc
cmp
xor
cmp
imul
jge
data16
cltd
es
nop
jne
inc
movb
inc
pop
xor
sub
fidivl
repz
push
test
out
mov
jno
xor
shl
or
loopne
stos
mov
sahf
lods
push
mov
pop
imul
and
cmc
jns
sbb
iret
dec
ds
sbb
insl
insb
xchg
jl
add
incb
cs
inc
mov
mov
jne
add
mov
inc
mov
insl
mov
push
jno
add
arpl
sbb
and
inc
mov
jl
repz
cmpsl
movaps
or
xchg
aaa
add
xor
jbe
pop
mov
mov
xchg
stc
adc
ss
sbb
xor
mov
jecxz
in
add
aas
rcrb
call
pop
loop
scas
cmp
pop
xchg
jge
mov
cmp
call
xor
loop
jge
imul
adc
pop
and
xor
and
out
adc
fs
mov
jecxz
pop
add
push
iret
addl
sub
in
gs
dec
pop
or
out
rclb
push
sahf
add
adc
lods
push
adc
cmpb
inc
adc
mov
lahf
jl
xorb
mov
ds
incl
sbb
test
cltd
out
cmp
enter
mov
jns
fdivrs
dec
fcoml
push
jmp
hlt
cmp
add
dec
sbb
dec
jg
fdivrl
jns
pop
pop
xor
cmp
and
pop
flds
sti
mov
xorl
dec
push
lcall
cwtl
inc
rcl
and
int3
and
aad
clc
leave
sbb
std
inc
pandn
cmp
lret
cld
xor
mov
aaa
pushf
jnp
push
loop
pop
jg
popa
adc
push
sub
push
mov
xchg
mov
sahf
ss
xor
inc
aam
aaa
push
das
add
jns
or
push
movsl
jae
rcrb
repz
icebp
cld
sub
fdivrs
mov
push
or
rdpmc
repz
fisttpl
scas
subl
test
leave
jbe
int3
fnstcw
inc
sbb
adc
mov
xlat
test
sbb
in
jnp
mov
jo
imul
lock
repnz
xchg
insl
outsl
test
roll
imulb
pop
sbb
xor
lahf
xchg
aam
inc
fsubl
sbb
xor
loop
pop
fildl
xor
shl
call
lods
cmpsb
mov
movsb
lods
push
andl
mov
insl
pushf
imul
jae
cltd
les
xchg
pop
inc
mov
lcall
cmp
repnz
into
mov
cmp
pop
add
addr16
enter
and
ds
leave
mov
push
xor
sbb
sbb
push
pop
lods
scas
addr16
xchg
sbb
cmpsb
pop
jp
arpl
aas
mov
outsl
sbb
andb
bound
cmp
out
imul
xchg
adc
aam
xor
sub
negl
cmpsb
fisttpll
and
shrl
movsb
outsl
pop
cmp
ds
loop
push
mov
dec
jns
cwtl
push
aaa
cmpsl
fsubs
jnp
shlb
lods
lock
loop
pop
pop
add
aaa
fwait
repz
push
cmp
mov
out
sub
mov
adc
nop
out
test
ljmp
out
outsb
aaa
bound
lahf
lcall
pop
mov
and
push
adc
jp
pop
xor
and
std
xor
fdivrl
lods
and
mov
push
pushw
xor
cmpsb
outsl
or
pop
mov
daa
adc
xor
inc
sub
xchg
mov
inc
mov
jne
cmp
or
push
ja
adc
dec
adc
push
push
gs
lahf
inc
push
insb
xor
mov
scas
add
sub
scas
ds
pop
and
xor
pop
out
cmp
mov
adc
ror
xorb
push
stc
sub
aam
je
cli
jecxz
push
imul
pusha
scas
push
shr
cltd
fimuls
inc
int3
outsb
pop
mov
jle
xchg
pop
enter
sbb
iret
aaa
nop
cmc
xor
mov
out
sbb
sbb
gs
arpl
out
and
or
lock
mov
aaa
jnp
push
rclb
jae
mov
cli
sti
push
repnz
insb
inc
xor
dec
jg
adc
xor
dec
cmpsl
orl
call
sarl
lcall
cmp
sub
clc
les
cli
in
jmp
pop
pop
jge
push
push
or
sbb
adc
mov
pusha
push
push
jno
jmp
pop
xor
iret
sbb
es
scas
sub
push
popl
push
push
push
movl
fistl
sbb
dec
addr16
paddsb
pop
and
mov
aas
call
rcll
lock
and
lcall
or
repnz
sbb
jmp
icebp
or
sbb
or
jbe
cmpsl
std
cltd
scas
and
cmp
movsb
jge
int3
sbb
div
jmp
fs
adc
sub
xorl
fsts
mov
aam
sbb
fucomi
inc
add
insb
rcrl
adc
pushf
cwtl
jle
movsl
jo
cmp
cmpsl
pop
mov
movsl
loop
loop
lea
cmp
daa
aam
scas
pop
mov
cmpsb
sbb
adc
add
int3
test
std
adc
jo
fdivr
add
sub
clc
inc
out
leave
in
push
lcall
sar
inc
jae
enter
shl
rorb
movsl
adc
gs
sub
push
imul
loop
jmp
rorl
or
and
divl
dec
mov
push
cmp
shrb
std
out
dec
cwtl
mov
lahf
mov
cmp
pusha
inc
orb
push
mov
push
jne
push
int
pop
jmp
mov
adcl
or
push
cs
cmpsb
mov
movsb
mov
das
cmp
popf
inc
xchg
lock
and
sub
cmp
stos
jno
popa
jl
lahf
xlat
cmpsb
hlt
pop
ljmp
repz
arpl
movsb
pushf
adc
scas
pop
and
jns
or
push
jl
js
push
sub
cli
push
or
push
xor
rolb
in
pop
lock
pushf
in
popa
stos
pop
cmp
dec
and
popf
inc
gs
stc
lahf
xor
or
dec
sub
test
or
movsl
dec
stos
mov
in
push
adc
push
cld
cmp
imul
or
dec
adc
xchg
mov
mov
into
mov
jg
lahf
or
std
or
test
push
aaa
jmp
filds
icebp
xor
les
dec
mov
xchg
mov
notl
xchg
cmpsl
sbb
adc
cmpsb
xchg
into
add
dec
push
mov
cmpsl
out
imulb
mov
repz
inc
std
mov
sub
add
sub
push
push
jg
mov
js
push
insb
pop
icebp
mov
std
mov
fmul
addr16
std
std
shrl
lods
loop
mov
es
adc
cmp
push
or
stos
inc
adc
push
outsb
cmpl
scas
adc
ret
fdivs
or
subl
call
ljmp
adc
inc
xchg
mov
sbb
jp
fwait
xor
in
xor
sub
adc
pop
sub
gs
mov
lods
xorb
mov
jns
mov
cs
repz
and
xchg
loopne
sbb
in
mov
lock
mov
lcall
xor
and
stos
jns
adc
loope
add
sbb
insl
cs
xchg
cltd
je
jbe
adc
mov
mov
popf
push
in
out
cmpb
jp
js
daa
sub
movsl
mov
rep
jb
iret
test
das
cmpsb
ror
lret
mov
ljmp
pop
pop
dec
ret
scas
in
sub
out
and
dec
lea
inc
loope
aad
call
int
hlt
or
sub
pop
bound
and
mov
das
jl
clc
xchg
imul
incb
mov
mov
sbb
lds
mov
movsb
sub
and
jg
out
add
sbb
and
mov
xor
xchg
out
mov
mov
jg
in
stc
inc
mov
mov
popa
add
xchg
orl
adc
push
xchg
cmp
mov
les
pop
je
pop
bound
jns
and
stc
xchg
sbb
mov
xor
jl
mov
fildll
sarb
out
add
scas
sahf
mov
or
cld
mov
mov
pop
adc
mov
aaa
clc
pop
pop
in
pop
dec
fwait
adc
push
inc
pop
dec
pop
jns
xor
jg
mov
sub
daa
mov
mov
nop
lahf
sbb
stos
and
jne
sub
xchg
mov
push
add
xchg
hlt
pop
xchg
out
es
in
jg
pop
jge,pn
scas
outsl
jnp
xchg
xchg
call
dec
sub
int3
addr16
sbb
popa
addb
pop
out
pop
stos
bound
sbb
jmp
jno
xchg
and
inc
and
mov
xor
repnz
addr16
lea
pop
push
mov
and
cs
testb
stos
addb
push
or
ds
add
ja
inc
out
mov
test
jg
push
add
mov
jge
or
icebp
push
frstor
dec
mov
stos
push
xor
pop
inc
and
xchg
imul
in
fs
fsubrl
fst
pop
cmpsb
sub
cmpl
mov
inc
cmc
negl
out
arpl
mov
mov
push
adc
fiaddl
jg
enter
inc
fistl
fstpl
mov
divl
jnp
inc
cmc
insb
and
insl
nop
pushf
pop
mov
add
dec
dec
lret
inc
mov
mov
push
jecxz
inc
cmc
inc
jl
pop
mov
adc
or
nop
push
hlt
clc
pop
shl
sub
push
mov
dec
shl
push
dec
cmp
push
dec
loope
xor
dec
sbbl
andnps
js
mov
bound
xchg
dec
push
add
cmpsl
push
je
cs
pop
pop
arpl
jl
jmp
dec
nop
add
mov
je
in
xchg
rorl
andb
mov
inc
add
shll
add
rcll
or
lds
push
int3
push
and
mov
or
scas
xor
fisubs
or
sub
add
dec
ret
inc
aam
mov
sub
movsb
out
test
call
jp
fists
fs
adc
dec
push
mov
mov
inc
jbe
xchg
or
jae
sub
dec
and
jbe
pop
pusha
cmpsl
fisubs
and
pusha
and
negl
jns
leave
inc
outsl
scas
fs
pop
pop
into
repz
xlat
ja
pop
ret
add
ss
lret
data16
push
xor
xor
lret
data16
int
cmp
jns
jo
push
fs
fisttpll
fstl
mov
push
in
sub
insl
sub
cmp
sarl
les
aas
adc
inc
mov
xor
dec
divl
sahf
mov
mov
mov
sbb
lret
mov
loopne
mov
xchg
mov
mov
cmp
testb
dec
nop
das
sub
cmpb
xchg
jl
ret
sbb
adc
sbb
imul
jo
or
aam
cmp
lods
mov
inc
xlat
insl
adc
test
push
js
xor
pop
add
scas
add
out
mov
xchg
pop
scas
pop
xor
pop
mov
mov
sti
movsl
into
adc
lock
enter
mov
pop
pop
push
pushw
aad
cmp
jbe
dec
sub
movsb
jns
jb
icebp
mov
lds
inc
mov
cmp
loope
xor
divl
jp
xchg
in
pop
outsb
mov
mov
cwtl
xchg
enter
lret
leave
in
mov
add
pop
jne
cmpsb
dec
xchg
fisttpl
xorl
mov
mov
inc
mov
sbb
cld
movsb
xchg
dec
mov
inc
jg
jnp
add
mov
push
ljmp
sub
mov
or
idivl
mov
mov
fdivl
dec
pusha
pusha
push
inc
add
lods
pop
lods
adc
lds
lea
int
aam
sub
sbb
sti
push
cs
fs
adc
frstor
push
fidivrl
xchg
mov
cmp
xchg
fldcw
movsl
js
divb
pop
mov
lea
fadds
jne
mov
adc
lahf
cmp
mov
addr16
enter
fidivl
xchg
inc
jmp
sub
movsb
repnz
jb
push
mov
xor
test
mov
dec
mov
enter
push
das
scas
jp
popf
sub
push
cwtl
fnstsw
jno
std
fmull
xchg
pushf
hlt
icebp
idivl
xchg
mov
subb
clc
inc
leave
xor
xor
adc
push
pop
inc
mov
inc
inc
ss
pop
inc
iret
inc
cmp
or
cmp
add
pop
out
dec
cltd
les
dec
imul
cmp
push
adc
or
pop
inc
adc
push
mov
adc
pop
lcall
or
clc
fs
jns
sbb
popf
dec
test
mov
mov
sub
in
sbb
ljmp
push
push
adcl
sbb
jne
jne
into
add
cmp
bound
xor
cmpsl
cmp
je
addr16
aam
sbb
int3
aaa
fs
iret
decb
jmp
xor
cmp
adc
lcall
in
loop
mov
mov
dec
test
into
xchg
mov
fidivs
pop
add
or
jnp
jb
in
cs
sub
dec
incl
imul
scas
insb
fistpl
mov
cmpsb
mov
pop
pop
pop
leave
ret
push
mov
push
movl
movl
cmpl
je
cmpl
jb
jmp
push
push
call
cmpl
jne
xor
xor
dec
mov
mov
dec
mov
jmp
mov
or
movsbl
or
mov
addl
sub
movl
cmpl
je
cmpl
jl
jmp
push
push
push
call
cmpl
jne
mov
dec
mov
xor
add
dec
mov
jmp
mov
xor
cmp
jne
mov
push
mov
add
mov
mov
mov
xor
add
cmp
pop
je
mov
jmp
mov
xor
add
leave
ret
push
mov
sub
andl
mov
inc
mov
cmpl
jl
jmp
pushl
call
cmpl
jb
push
mov
mov
mov
sub
sub
mov
andl
movl
sub
push
andl
jmp
xor
or
inc
mov
cmpl
jae
cmpl
jbe
jmp
push
pushl
pushl
call
jmp
mov
andl
mov
addl
mov
adc
mov
mov
and
xor
addl
xor
mov
mov
adc
mov
add
add
imul
mov
cmp
je
mov
mov
mov
xor
lea
mov
mov
mov
mov
xor
xor
add
add
imul
mov
cmp
je
mov
xor
mov
add
imul
add
mov
mov
jmp
mov
mov
xor
xor
add
add
imul
pop
pop
leave
ret
add
push
test
add
add
add
add
add
add
add
push
cmp
add
add
add
inc
push
push
push
sbb
inc
lahf
scas
jno
leave
aam
fiadds
add
add
pop
push
imul
inc
imul
inc
js
arpl
mov
sub
push
mov
xchg
mov
cmp
jne
mov
cmp
jne
mov
mov
mov
mov
mov
mov
mov
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
xor
lea
movzbl
xor
add
inc
mov
cmp
jb
xor
lea
movzbl
xor
add
inc
mov
cmp
jb
xor
lea
movzbl
xor
add
inc
mov
cmp
jb
lea
mov
mov
mov
mov
mov
push
push
mov
mov
cmp
jne
lea
mov
mov
mov
add
mov
lea
mov
add
mov
lea
mov
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
lea
push
mov
mov
xor
add
push
mov
lea
mov
lea
push
mov
mov
mov
mov
mov
movl
movl
movl
movl
pushl
mov
call
mov
mov
test
je
xorl
jmp
mov
mov
mov
xor
cmp
jne
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
mov
movl
movl
lea
pop
mov
xor
add
mov
inc
dec
jne
lea
mov
lea
push
mov
xor
add
push
mov
add
push
mov
mov
movl
pushl
mov
call
mov
xor
add
mov
cmp
jne
mov
or
mov
add
mov
mov
mov
mov
add
mov
mov
mov
mov
add
mov
mov
mov
inc
mov
mov
mov
mov
mov
mov
lea
mov
mov
mov
mov
mov
mov
mov
lea
mov
inc
mov
lea
mov
mov
mov
mov
movzwl
xor
add
xor
mov
mov
movzwl
xor
add
xor
mov
xor
mov
mov
mov
lea
lea
movl
mov
call
mov
lea
push
mov
xor
add
push
lea
push
pushl
mov
call
mov
lea
lea
mov
call
mov
mov
mov
pushl
pushl
pushl
pushl
pushl
pushl
pushl
call
test
je
add
pushl
lea
call
mov
mov
mov
xor
add
mov
jne
mov
mov
pushl
mov
call
jmp
mov
mov
add
mov
mov
decl
mov
mov
mov
lea
mov
mov
mov
mov
add
pop
pop
pop
leave
ret
push
push
push
push
mov
mov
add
push
cld
mov
add
push
mov
lods
xchg
push
mov
or
shl
not
push
mov
or
shl
not
push
add
mov
sub
sub
inc
push
push
push
push
push
push
sub
push
or
mov
shl
lea
mov
shr
rep
push
pop
call
loop
lea
lea
mov
mov
sub
and
mov
mov
call
jne
mov
and
shl
sub
neg
shr
pop
add
pop
lea
shl
cmp
pop
lea
push
push
mov
push
mov
jb
mov
sub
movzbl
mov
shl
mov
and
add
lea
call
mov
shr
and
cmp
mov
jne
cmp
jb
jmp
mov
call
inc
inc
sub
sub
cmp
jb
pop
inc
cmp
dec
mov
jb
inc
cmp
dec
mov
dec
jb
mov
dec
sub
push
jmp
mov
dec
call
jne
pop
pop
pop
pop
pop
pop
pushl
push
push
mov
mov
jmp
mov
dec
call
jne
mov
dec
call
jne
pop
cmp
mov
jb
mov
push
mov
sub
cmp
jb
lods
mov
stos
jmp
mov
call
mov
je
mov
call
mov
je
mov
mov
mov
mov
mov
mov
mov
mov
pop
pop
pop
mov
mov
add
push
push
cmp
mov
jb
add
push
mov
call
jne
mov
mov
shl
sub
push
pop
lea
jmp
mov
add
call
jne
mov
mov
shl
push
pop
push
pop
lea
jmp
mov
add
push
pop
mov
mov
sub
inc
mov
call
mov
sub
jb
add
cmpl
jae
addl
mov
cmp
jb
push
pop
mov
shl
sub
inc
push
pop
lea
mov
call
mov
sub
jb
mov
mov
cmp
jb
mov
andl
shr
orl
dec
cmp
jae
mov
sub
mov
shlb
add
shl
add
mov
jmp
sub
call
shr
shll
cmp
jb
incl
sub
dec
jne
mov
add
mov
shll
push
pop
sub
inc
mov
mov
call
test
je
or
shl
dec
jne
jmp
incl
mov
add
mov
mov
sub
cmp
ja
mov
sub
mov
lods
stos
cmp
jae
dec
jne
mov
movzbl
cmp
jb
call
sub
lea
mov
mov
sub
mov
mov
mov
jl
lods
outsl
scas
hlt
add
testl
jbe
xchg
mov
cmpsl
loopne
pop
push
pop
notl
pushf
or
pushf
or
mov
lcall
xchg
pushf
sub
popa
mov
stos
mov
mov
jbe
xchg
mov
pop
pop
cmpsl
jae
pop
clc
push
stc
mov
xchg
cmpsl
test
lret
movzwl
shr
imul
cmp
jae
mov
mov
sub
shr
add
add
lea
ret
shr
sub
sub
sub
add
add
lea
ret
push
mov
sub
push
push
push
movl
movl
mov
mov
mov
mov
xor
mov
add
mov
mov
xor
add
mov
mov
xor
add
mov
mov
xor
add
mov
movl
movl
movl
push
pop
mov
mov
push
pop
mov
mov
movl
movl
mov
xor
add
mov
mov
xor
add
mov
movl
movl
movl
lea
lea
call
decl
jne
decl
jne
decl
jne
movl
mov
xor
mov
add
mov
mov
andl
xor
add
mov
mov
mov
mov
mov
mov
mov
mov
lea
mov
mov
lea
mov
mov
pushl
lea
mov
call
mov
xor
add
cmp
je
mov
mov
mov
mov
mov
mov
add
mov
mov
lea
push
mov
mov
mov
add
push
pushl
push
call
pushl
xor
movl
movl
movl
movb
lea
stos
stos
stos
xor
movl
movl
movl
movb
lea
stos
stos
stos
mov
mov
mov
movl
movl
movw
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
call
push
mov
mov
pushl
call
test
jne
mov
mov
mov
add
mov
mov
mov
call
push
mov
call
test
jne
mov
mov
mov
add
mov
mov
mov
call
push
mov
call
mov
mov
xor
add
cmp
je
mov
xor
mov
sub
add
mov
cmp
ja
movl
pushl
mov
mov
mov
call
push
mov
mov
pushl
call
mov
mov
mov
mov
mov
mov
xor
lea
call
push
mov
mov
pushl
call
mov
mov
mov
mov
xor
lea
call
push
mov
mov
pushl
call
mov
mov
mov
xor
lea
call
push
mov
mov
pushl
call
andl
mov
mov
and
add
push
call
test
je
mov
push
xor
pop
div
add
movzbl
push
call
test
jne
mov
mov
mov
xor
lea
call
push
mov
mov
pushl
call
mov
jmp
andl
incl
cmpl
jb
mov
mov
xor
mov
add
lea
call
push
mov
mov
xor
add
lea
call
push
call
mov
xor
add
cmp
jne
movl
mov
mov
xor
lea
mov
mov
test
je
mov
mov
xor
lea
mov
mov
xor
mov
sub
add
mov
cmp
jbe
mov
mov
mov
cmp
jne
pushl
lea
push
call
mov
jmp
mov
mov
xor
add
xor
mov
mov
xor
add
cmp
je
mov
mov
xor
add
cmp
je
mov
xor
add
jmp
mov
mov
and
or
sub
add
mov
xor
lea
mov
cmp
jb
mov
mov
mov
movl
mov
mov
mov
mov
xor
add
mov
mov
xor
add
mov
movl
movl
mov
mov
xor
add
cmp
je
jmp
mov
mov
sub
mov
xor
add
xor
div
mov
mov
mov
xor
add
cmp
jbe
mov
xor
add
mov
mov
mov
xor
add
imul
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
add
movl
mov
movl
mov
movl
mov
mov
xor
add
jmp
movl
movl
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
xor
add
add
imul
add
mov
mov
mov
cmp
jb
mov
mov
xor
add
imul
mov
xor
add
or
mov
xor
add
mov
xor
add
mov
lea
jmp
mov
mov
xor
lea
mov
mov
xor
mov
sub
add
mov
mov
xor
add
imul
cmp
jbe
mov
mov
mov
mov
mov
xor
add
push
mov
xor
add
push
push
mov
mov
xor
add
push
call
mov
mov
xor
add
cmp
je
mov
jmp
mov
xor
mov
mov
mov
xor
lea
xor
mov
sub
xor
cmp
jne
mov
mov
mov
xor
add
push
mov
xor
add
push
pushl
call
mov
mov
mov
mov
mov
mov
xor
mov
add
movl
movl
jmp
xor
mov
xor
add
mov
movsbl
movzbl
cmp
jne
mov
mov
xor
lea
xor
cmp
jne
jmp
mov
xor
add
mov
xor
add
cmp
je
mov
movl
movl
movl
movl
mov
mov
mov
xor
add
push
mov
mov
xor
add
push
mov
xor
add
push
mov
xor
add
push
call
mov
mov
mov
mov
xor
add
push
mov
xor
add
push
mov
pushl
xor
add
push
call
mov
xor
add
mov
cmp
je
mov
xor
add
cmp
je
movl
movl
mov
xor
sub
mov
mov
xor
sub
mov
mov
xor
sub
mov
andl
andl
lea
push
pushl
push
lea
push
mov
pushl
mov
add
push
push
call
mov
mov
mov
mov
xor
add
push
mov
xor
add
push
push
call
mov
add
xor
cmp
mov
mov
mov
jne
xor
add
push
mov
xor
add
push
pushl
call
mov
mov
mov
mov
jmp
xor
add
push
mov
xor
add
push
pushl
call
mov
mov
mov
movl
mov
mov
mov
mov
xor
add
mov
mov
xor
add
mov
movl
movl
mov
mov
xor
add
cmp
je
jmp
mov
mov
sub
mov
xor
add
xor
div
mov
mov
mov
xor
add
cmp
jbe
mov
xor
add
mov
mov
mov
xor
add
imul
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
add
movl
mov
movl
mov
movl
mov
mov
xor
add
jmp
movl
movl
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
xor
add
add
imul
add
mov
mov
mov
cmp
jb
mov
mov
xor
add
imul
mov
xor
add
or
mov
xor
add
mov
xor
add
mov
lea
jmp
mov
mov
xor
lea
mov
mov
xor
mov
sub
add
mov
mov
xor
add
imul
cmp
jbe
pushl
mov
pushl
lea
push
mov
mov
pushl
mov
mov
pushl
pushl
pushl
call
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
xor
add
push
mov
xor
add
push
pushl
call
pop
pop
pop
leave
ret
push
mov
push
push
lea
mov
push
mov
mov
mov
mov
cmp
pop
jne
movb
movb
movb
movb
leave
ret
push
mov
push
push
lea
mov
mov
mov
mov
mov
cmp
jne
mov
movb
movb
movb
movb
leave
ret
push
mov
push
push
lea
mov
mov
mov
mov
mov
cmp
jne
movb
mov
movb
movb
leave
ret
push
mov
push
push
lea
mov
push
mov
mov
mov
mov
cmp
pop
jne
movb
movw
movb
leave
ret
push
mov
push
push
lea
mov
mov
mov
mov
mov
cmp
jne
mov
movb
movb
movb
leave
ret
push
mov
call
mov
mov
movb
call
push
mov
movb
call
push
movb
call
movb
mov
jmp
push
mov
push
mov
push
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
movl
mov
movzwl
xor
add
pop
test
je
mov
movl
leave
ret
push
mov
sub
andl
movl
movl
movl
movl
movl
mov
mov
mov
mov
push
push
mov
mov
mov
mov
mov
push
mov
test
jne
pushl
mov
call
mov
mov
add
mov
mov
mov
mov
xor
mov
add
cmp
jne
mov
mov
mov
mov
mov
mov
xor
add
mov
mov
andl
xor
add
mov
lea
push
mov
xor
add
push
mov
add
push
mov
mov
movl
pushl
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
mov
lea
mov
lea
push
mov
xor
add
push
mov
add
push
mov
mov
movl
pushl
mov
call
test
je
andl
cmpl
jbe
mov
mov
sub
mov
incl
mov
mov
inc
cmp
jb
mov
mov
add
mov
mov
add
sub
add
mov
mov
mov
movl
jmp
add
shr
mov
je
lea
mov
mov
mov
mov
movzwl
mov
and
mov
mov
shr
add
xor
cmp
jne
mov
add
mov
cmpl
je
mov
add
mov
mov
mov
mov
addl
decl
jne
mov
add
mov
cmp
jae
add
mov
mov
test
jne
mov
mov
movl
mov
mov
mov
xor
add
mov
lea
mov
lea
push
mov
xor
add
push
mov
add
push
mov
mov
pushl
mov
call
mov
mov
add
mov
pushl
mov
pushl
pushl
call
mov
add
lea
mov
mov
mov
mov
mov
mov
mov
cmp
jb
mov
mov
mov
lea
mov
add
cmp
jae
mov
mov
mov
sub
add
mov
mov
jmp
xor
pop
pop
pop
leave
ret
push
mov
sub
push
mov
mov
cmpl
je
test
je
test
je
mov
test
je
cmpl
je
cmp
je
mov
andl
mov
sub
add
movzwl
mov
movzwl
add
je
lea
push
mov
mov
push
test
je
mov
andl
and
add
movzwl
movzwl
add
je
lea
mov
test
je
mov
andl
and
add
movzwl
movzwl
add
je
lea
mov
mov
mov
test
je
mov
add
movzwl
movzwl
incl
addl
add
cmp
jb
movzwl
movzwl
mov
incl
add
add
mov
cmp
jb
mov
movzwl
movzwl
incl
add
add
mov
cmp
jb
pop
pop
xor
inc
jmp
xor
pop
leave
ret
push
mov
mov
mov
sub
push
xor
push
push
cmp
je
cmp
je
cmp
jne
xor
inc
jmp
mov
add
mov
mov
mov
mov
add
add
mov
cmp
ja
mov
mov
cmp
jbe
cmp
jae
movzwl
jmp
mov
lea
mov
test
je
add
mov
cmp
jbe
mov
mov
add
cmp
jae
mov
jmp
sub
mov
mov
test
je
mov
inc
mov
cmp
jb
jmp
xor
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
movl
mov
mov
mov
mov
mov
mov
push
mov
push
mov
movl
mov
mov
push
mov
xor
xor
add
add
mov
cmp
je
mov
mov
xor
add
cmp
je
mov
mov
xor
add
cmp
je
add
mov
mov
xor
add
mov
mov
cmp
je
mov
mov
imul
xor
add
cmp
jne
mov
mov
imul
xor
add
cmp
je
mov
mov
mov
imul
add
mov
add
xor
mov
mov
mov
xor
add
xor
mov
mov
add
add
cmp
je
add
mov
mov
xor
add
mov
lea
mov
movl
mov
pushl
mov
call
mov
xor
add
mov
cmp
jne
mov
pushl
mov
call
mov
movl
movl
mov
xor
add
cmp
jne
mov
mov
xor
xor
lea
mov
mov
add
imul
push
call
mov
xor
add
cmp
jne
mov
xor
add
cmp
jbe
mov
xor
add
cmp
jne
mov
mov
xor
lea
mov
jmp
movl
movl
mov
xor
add
jmp
mov
xor
add
mov
mov
xor
add
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
mov
mov
mov
xor
add
cmp
je
mov
mov
xor
add
shr
cmp
je
mov
mov
mov
movzwl
push
pushl
call
jmp
mov
add
mov
mov
add
push
pushl
call
mov
mov
mov
xor
add
cmp
mov
jne
mov
xor
lea
mov
jmp
mov
xor
add
imul
mov
mov
mov
xor
lea
mov
mov
xor
add
cmp
jne
mov
mov
mov
sub
xor
jmp
mov
xor
add
cmp
mov
jne
mov
jmp
mov
xor
add
pop
pop
pop
leave
ret
push
mov
sub
movl
movl
mov
mov
push
mov
mov
mov
mov
xor
mov
add
cmp
je
mov
mov
add
push
mov
movl
mov
mov
mov
xor
xor
add
cmp
je
mov
mov
add
mov
mov
sub
mov
xor
add
mov
cmp
je
mov
xor
add
mov
push
movl
jmp
mov
xor
lea
add
shr
cmp
jae
sub
lea
mov
movzwl
and
mov
mov
mov
sub
add
movzwl
shr
xor
mov
mov
mov
mov
xor
lea
mov
mov
mov
xor
add
cmp
jne
mov
mov
xor
add
cmp
jne
mov
mov
add
add
decl
jne
mov
add
mov
mov
mov
xor
cmp
jae
add
mov
mov
xor
add
mov
cmp
jne
pop
mov
pop
jmp
mov
xor
add
pop
leave
ret
push
mov
sub
movl
movl
mov
push
push
mov
xor
push
mov
add
mov
mov
xor
add
mov
mov
mov
mov
xor
mov
addl
mov
mov
xor
mov
addl
mov
mov
xor
mov
addl
mov
mov
xor
mov
addl
movl
mov
test
je
mov
test
je
mov
test
je
mov
mov
xor
add
cmp
jne
mov
xor
add
mov
mov
mov
mov
add
mov
mov
test
je
movl
mov
xor
add
mov
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
cmp
jne
mov
lea
push
mov
xor
add
push
pushl
pushl
call
mov
mov
mov
sub
add
push
call
mov
mov
mov
mov
pushl
pushl
push
call
mov
mov
add
movzwl
lea
mov
mov
movzwl
xor
add
mov
cmp
je
mov
xor
add
mov
mov
movzwl
xor
sub
sub
cmp
ja
mov
add
mov
jmp
mov
mov
lea
mov
mov
test
je
not
and
add
mov
add
push
call
mov
mov
mov
xor
add
cmp
je
push
mov
add
mov
add
push
push
call
mov
mov
mov
add
xor
lea
mov
mov
mov
movzwl
xor
sub
mov
sub
mov
cmp
jbe
mov
mov
cmp
jne
mov
lea
push
mov
xor
add
push
mov
pushl
push
call
test
je
mov
mov
mov
xor
add
je
mov
xor
add
andl
mov
mov
lea
movl
movl
mov
mov
mov
movl
mov
mov
xor
mov
add
mov
incl
cmpl
mov
jb
mov
mov
mov
mov
mov
mov
lea
mov
mov
movl
mov
mov
movl
movl
movl
movl
movl
mov
movl
mov
movl
mov
movl
mov
movl
movl
xor
mov
xor
sub
mov
inc
cmp
jb
mov
lea
push
call
mov
lea
push
push
call
mov
lea
push
mov
pushl
mov
call
mov
xor
add
mov
mov
mov
xor
add
cmp
je
mov
jmp
mov
mov
mov
mov
cmp
je
mov
mov
cmp
jne
mov
mov
cmp
jne
mov
mov
mov
add
mov
mov
xor
add
mov
mov
push
push
pushl
call
test
je
pushl
mov
pushl
call
test
je
mov
mov
mov
call
test
je
push
pushl
call
test
je
mov
mov
cmp
jne
mov
lea
push
pushl
mov
pushl
push
call
mov
mov
mov
xor
add
je
mov
mov
movl
mov
pushl
xor
pushl
add
or
add
push
call
movl
jmp
mov
mov
add
call
mov
mov
mov
mov
movl
cmpl
jne
andl
mov
jmp
xor
pop
pop
pop
leave
ret
push
mov
movzwl
movzwl
push
push
xor
lea
test
je
mov
lea
cmp
jb
mov
add
add
cmp
jb
add
inc
cmp
jb
xor
pop
pop
pop
ret
push
mov
sub
movl
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
push
mov
xor
push
mov
mov
add
push
cmp
je
mov
mov
xor
add
cmp
je
mov
xor
add
mov
mov
xor
add
mov
mov
mov
mov
xor
mov
xor
add
add
sub
mov
jmp
mov
mov
xor
add
cmp
je
mov
mov
xor
add
cmp
mov
mov
je
cmp
je
mov
mov
xor
add
cmp
jb
mov
mov
xor
add
cmp
ja
movzwl
movzwl
add
mov
mov
mov
xor
add
cmp
jb
mov
mov
xor
add
cmp
ja
movzwl
movzwl
add
mov
mov
mov
cmp
jne
mov
mov
xor
lea
mov
mov
mov
xor
lea
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
cmp
jne
mov
mov
xor
add
imul
mov
jmp
mov
mov
xor
lea
mov
mov
sub
xor
mov
mov
sub
xor
mov
mov
mov
xor
add
xor
add
imul
mov
movzwl
mov
mov
xor
add
xor
add
imul
mov
movzwl
sub
sub
xor
xor
cmp
jne
mov
mov
xor
add
xor
add
imul
mov
movzwl
mov
sub
xor
cmp
mov
je
mov
pop
xor
pop
add
pop
leave
ret
push
mov
push
mov
push
mov
sub
mov
xor
mov
movl
mov
cmp
je
push
push
movzwl
mov
mov
mov
cmp
jne
mov
lea
xor
mov
xor
mov
mov
sub
mov
xor
mov
cmp
jne
mov
pop
pop
cmp
je
xor
lea
pop
leave
ret
push
mov
push
push
push
movl
mov
call
mov
mov
sub
xor
cmp
je
mov
mov
mov
push
mov
mov
sub
mov
xor
mov
cmp
jne
mov
lea
xor
mov
xor
lea
mov
sub
xor
cmp
jne
mov
pop
cmp
je
xor
xor
mov
mov
pop
pop
leave
ret
push
mov
push
push
movl
mov
call
mov
mov
sub
mov
xor
mov
cmp
je
push
push
movzwl
mov
mov
mov
cmp
jne
mov
lea
xor
mov
xor
mov
mov
sub
mov
xor
mov
cmp
jne
cmpl
pop
pop
je
xor
inc
jmp
xor
pop
leave
ret
push
mov
push
mov
movzwl
push
lea
mov
push
xor
mov
mov
cmp
je
mov
sub
mov
jmp
mov
mov
add
movzwl
mov
add
xor
mov
cmp
jne
xor
pop
mov
mov
pop
leave
ret
push
mov
sub
movl
movl
mov
push
mov
xor
mov
add
mov
movl
movl
push
movl
jmp
mov
mov
sub
mov
xor
add
cmp
jbe
mov
add
mov
add
mov
mov
mov
mov
mov
jmp
mov
mov
sub
mov
xor
add
cmp
mov
jbe
add
mov
add
mov
mov
mov
jmp
mov
sub
mov
xor
add
cmp
mov
jbe
add
mov
add
mov
mov
mov
mov
xor
lea
mov
jmp
add
mov
add
mov
mov
incl
mov
mov
xor
add
imul
mov
mov
xor
lea
cmp
jb
pop
pop
leave
ret
push
mov
sub
movl
push
mov
movl
mov
mov
xor
mov
add
cmp
je
push
push
mov
mov
xor
mov
sub
add
lea
xor
mov
mov
mov
xor
sub
xor
mov
mov
xor
add
cmp
jne
pop
pop
pop
leave
ret
push
mov
sub
movl
movl
mov
mov
mov
push
push
mov
xor
mov
add
cmp
mov
jne
xor
add
jmp
mov
xor
add
cmp
jne
mov
jmp
lea
mov
mov
mov
mov
xor
add
mov
mov
push
call
mov
mov
mov
jmp
mov
sub
mov
mov
mov
call
mov
pushl
mov
call
mov
xor
add
cmp
jne
mov
call
mov
xor
add
push
pushl
mov
call
mov
xor
add
cmp
je
mov
mov
mov
mov
mov
add
cmp
jne
mov
xor
add
pop
pop
pop
leave
ret
mov
mov
jmp
push
mov
mov
sub
cmpl
push
push
push
je
test
je
movzwl
mov
mov
xor
and
mov
xor
add
mov
andl
xor
push
pop
cmp
jae
lea
xor
movzwl
mov
lea
cmp
jne
movzwl
mov
cmp
jne
mov
movzwl
cmpb
je
mov
movzwl
movsbw
mov
sub
xor
cmp
je
push
pop
incl
mov
cmp
jb
jmp
incl
push
pop
mov
movzwl
cmpb
je
inc
cmp
jne
xor
pop
pop
pop
leave
ret
mov
add
xor
xor
cmp
sete
jmp
push
mov
sub
push
mov
mov
cmpl
jne
xor
jmp
pushl
push
pop
call
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
push
mov
mov
call
push
mov
pushl
call
mov
test
je
mov
push
push
mov
add
mov
mov
mov
mov
add
mov
mov
add
add
mov
mov
mov
cmp
ja
mov
xor
mov
cmp
jbe
jmp
mov
mov
movzwl
cmp
jae
cmp
jae
mov
mov
mov
mov
lea
add
add
sub
movl
mov
mov
cmpl
jne
mov
pushl
push
call
mov
test
je
mov
mov
mov
addl
decl
jne
mov
inc
mov
cmp
jb
pop
pop
pop
leave
ret
push
mov
mov
push
pushl
lea
mov
call
mov
mov
mov
xor
cmp
pop
setne
mov
pop
ret
mov
push
jmp
xor
add
mov
add
add
movzwl
mov
cmp
jne
xor
mov
mov
pop
ret
push
mov
mov
shl
add
jmp
xor
add
mov
inc
inc
mov
cmp
jne
movb
mov
add
pop
ret
push
mov
sub
movl
movl
mov
mov
movl
push
push
movl
mov
mov
mov
xor
mov
xor
add
add
imul
jmp
mov
mov
xor
xor
add
add
test
mov
mov
je
xor
xor
add
add
shr
mov
xor
add
xor
jmp
xor
xor
add
add
shr
mov
mov
xor
lea
mov
mov
xor
xor
sub
cmp
jbe
mov
pop
mov
mov
pop
leave
ret
push
mov
sub
push
mov
mov
lea
mov
mov
mov
push
mov
xor
push
mov
add
cmp
mov
je
mov
xor
add
cmp
je
mov
mov
mov
mov
movl
mov
lea
mov
mov
mov
mov
mov
xor
mov
sub
sub
mov
movl
jmp
mov
mov
xor
xor
lea
mov
xor
div
mov
mov
xor
xor
sub
cmp
jne
mov
mov
mov
mov
mov
xor
xor
add
add
cmp
jae
lea
mov
mov
xor
add
lea
mov
mov
cmp
jbe
addl
jmp
addl
mov
xor
inc
incl
add
cmp
jb
mov
cmpl
jne
xor
add
jmp
mov
xor
mov
sub
add
mov
xor
sub
ror
xor
mov
mov
mov
mov
mov
sub
xor
cmp
jne
mov
mov
xor
xor
sub
mov
sub
xor
mov
mov
xor
sub
sub
jmp
mov
xor
mov
sub
add
mov
mov
cmp
jne
mov
jmp
mov
xor
add
pop
pop
pop
leave
ret
push
mov
sub
movl
movl
movl
push
movl
mov
push
mov
push
xor
mov
add
mov
movl
movl
movl
mov
mov
mov
xor
xor
add
add
imul
jmp
mov
sub
xor
mov
lea
call
mov
mov
mov
mov
mov
mov
xor
lea
mov
mov
mov
xor
xor
sub
mov
cmp
jbe
mov
xor
add
mov
movl
mov
jmp
mov
mov
xor
add
shr
mov
mov
mov
mov
mov
mov
movzbl
xor
mov
mov
mov
xor
add
and
mov
mov
xor
mov
mov
xor
lea
mov
mov
xor
mov
sub
add
mov
mov
mov
xor
add
cmp
jne
mov
mov
xor
add
pop
pop
xor
pop
leave
ret
push
mov
mov
mov
mov
mov
mov
sub
push
push
push
mov
xor
mov
add
cmp
jne
orl
jmp
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
mov
mov
movl
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
mov
xor
add
mov
mov
xor
add
mov
mov
mov
sub
mov
mov
mov
mov
dec
test
mov
je
mov
mov
mov
dec
not
and
mov
mov
add
jmp
mov
mov
mov
xor
add
mov
mov
xor
add
mov
mov
mov
xor
add
mov
mov
movl
movl
movl
mov
mov
xor
add
imul
mov
mov
xor
lea
cmp
jae
mov
xor
add
mov
mov
add
mov
pushl
mov
mov
call
mov
movl
mov
xor
lea
add
push
call
mov
test
je
mov
xor
add
push
pushl
lea
push
call
mov
mov
mov
mov
sub
mov
mov
mov
mov
add
mov
cmp
jb
mov
mov
mov
add
mov
sub
jmp
push
pushl
lea
push
call
mov
mov
movl
movl
movl
lea
mov
lea
mov
lea
mov
lea
mov
mov
xor
add
mov
jmp
cmp
je
mov
xor
mov
add
mov
mov
xor
lea
mov
mov
mov
xor
add
cmp
jne
mov
xor
add
push
push
lea
push
call
mov
mov
xor
mov
mov
xor
movzbl
add
cmp
je
mov
mov
xor
mov
mov
xor
movzbl
add
cmp
je
mov
mov
xor
mov
mov
xor
movzbl
add
cmp
je
mov
mov
xor
mov
mov
xor
movzbl
add
cmp
je
mov
mov
xor
mov
mov
mov
xor
mov
xor
mov
mov
xor
mov
or
mov
mov
xor
mov
cmp
jne
mov
mov
xor
mov
mov
mov
xor
mov
xor
mov
mov
xor
mov
or
mov
mov
xor
mov
cmp
jne
mov
mov
xor
mov
mov
mov
xor
mov
xor
mov
mov
xor
mov
or
mov
mov
xor
mov
cmp
jne
mov
mov
xor
mov
mov
mov
xor
mov
xor
mov
mov
xor
mov
or
mov
mov
xor
mov
cmp
jne
lea
push
call
mov
cmp
je
mov
xor
add
mov
mov
xor
lea
xor
mov
mov
xor
add
cmp
je
mov
mov
xor
add
cmp
jne
mov
mov
xor
lea
jmp
push
pushl
lea
push
call
mov
mov
xor
add
cmp
je
mov
xor
add
push
push
lea
push
call
mov
add
mov
pushl
pushl
mov
add
push
call
mov
mov
xor
add
cmp
je
push
pushl
mov
add
push
call
mov
mov
add
mov
add
mov
mov
mov
xor
add
imul
mov
mov
xor
lea
cmp
jb
mov
mov
mov
jmp
mov
mov
xor
xor
add
add
cmp
jne
mov
imul
mov
jmp
mov
xor
add
cmp
je
subl
jmp
andl
pop
pop
pop
leave
ret
push
mov
and
mov
sub
push
mov
push
push
cmp
jne
push
jmp
mov
cmp
jne
push
jmp
mov
cmp
jne
push
jmp
mov
cmp
jne
push
jmp
mov
mov
cmp
jne
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
mov
add
mov
mov
mov
mov
mov
mov
mov
add
mov
mov
mov
push
push
pushl
push
call
mov
mov
pushl
xor
add
mov
lea
push
push
pushl
pushl
pushl
call
mov
mov
xor
add
cmp
je
mov
mov
xor
add
imul
mov
jmp
mov
cmp
jne
push
jmp
mov
cmp
jne
push
jmp
mov
cmp
jne
push
pushl
pushl
push
pushl
pushl
pushl
call
mov
mov
pop
pop
pop
mov
pop
ret
push
mov
sub
mov
mov
movl
mov
xor
add
mov
mov
push
mov
pushl
lea
pushl
push
pushl
pushl
pushl
call
mov
mov
leave
ret
