push
mov
sub
add
movl
xor
mov
or
jmp
sub
adc
xchg
add
imul
fstpt
adc
adc
cli
adc
xchg
out
xchg
fidivrl
sahf
adc
cbtw
loop
push
xor
add
push
xchg
xchg
or
xchg
xlat
adc
bound
jmp
xor
push
cmp
push
mov
cwtl
leave
lahf
xor
jle
mov
cmp
leave
repz
andl
inc
cmc
adc
adcl
pop
mov
es
jno
adc
push
jmp
push
imul
dec
and
je
rcrl
inc
cs
int
imul
mov
sahf
push
in
lea
clc
ja
cmp
imul
mov
leave
addr16
popf
scas
dec
inc
fbstp
xchg
das
loope
cmp
mov
push
repz
push
adc
outsl
mov
shlb
jo
addl
or
inc
xchg
jge
xor
popa
xor
add
aaa
dec
or
push
or
fildll
int
lahf
arpl
ja
popa
xor
jmp
mov
or
fincstp
mov
cld
jle
dec
mov
jbe
jb
push
cmpsl
jecxz
test
pop
mov
out
mov
bnd
adc
jae
mov
mov
aaa
adc
mov
leave
pop
xor
jne
pop
cmp
mov
movsl
nop
sarl
and
das
add
mov
pop
xchg
adc
or
add
add
insl
push
inc
mov
cmc
pop
and
aaa
in
and
inc
inc
push
xchg
shl
adc
cwtl
mov
mov
out
inc
stos
clc
pushf
loopne
js
test
cld
sti
or
aaa
inc
mov
fwait
mov
inc
icebp
je
mov
push
lock
arpl
gs
shll
pop
sbb
rcll
xchg
lea
in
imul
aam
mov
pop
cld
xchg
stos
mov
ret
rclb
sbb
fcomi
or
test
into
sub
sbb
mov
mov
jmp
std
in
cmp
jb,pt
call
push
xchg
lret
sub
mov
sbb
push
jecxz
je
inc
jmp
aaa
mov
test
lods
mov
rcrb
scas
pop
push
xor
sahf
loop
cmpsb
pop
test
mov
hlt
or
sbb
in
filds
gs
sti
sahf
xchg
cmp
push
cmpsb
gs
shrd
cmp
or
or
add
das
add
sub
arpl
sub
cs
lds
popf
std
jns
stc
lahf
mov
fisubrs
out
movsb
ja
leave
iret
add
fcmovb
mov
cmp
stos
sbb
dec
cmp
and
jle
imul
inc
and
je
xchg
lock
jns
gs
and
and
jnp
stos
mov
jo
mov
pop
mov
fxam
mov
stos
xor
ljmp
shlb
xor
inc
mov
fldcw
add
jle
push
fmul
mov
mov
jl
mov
pop
mov
mov
out
cs
sbbl
clc
shlb
pop
xchg
jecxz
int3
sub
xor
aas
not
ja
mov
mov
ljmp
cmp
mov
mov
int3
cmpsb
adc
ret
imul
loop
adc
dec
test
mov
sbb
sub
enter
sarl
das
pop
out
inc
outsb
lds
adc
mov
orl
xchg
and
shrb
mov
lock
gs
dec
sbbl
cwtl
xor
clc
or
push
fmuls
and
cmp
cs
loop
push
mov
adc
adc
pop
nop
xchg
mov
and
and
or
int3
dec
pmaxsw
lock
std
je
incl
dec
rol
xchg
cs
cmc
insl
sbb
loope
jge
xor
add
inc
fadd
inc
loopne
xchg
push
mov
add
mov
movl
and
movl
dec
movl
adc
mov
sbb
xor
xor
or
sbb
mov
orl
div
adc
xor
adc
push
mov
adc
mov
add
orl
mov
and
div
and
mov
cmpl
jle
sbbl
jmp
push
push
pushl
call
movl
movl
mov
mov
imul
lea
mov
mov
cmp
movl
je
subl
movl
cmpl
jbe
inc
jmp
push
push
pushl
call
movl
movl
jmp
loop
mov
stos
fcmovnb
lds
adc
daa
cli
adc
addb
mov
jp
or
aad
popf
loop
lahf
movsl
sahf
out
xor
std
push
sub
jge
ja
pop
cmc
lcall
push
lds
inc
js
and
inc
mov
and
dec
in
in
lret
stc
push
add
add
out
mov
jb
fildl
dec
mov
dec
testb
xchg
lcall
mov
frstor
repz
jae
add
sbb
dec
or
scas
and
inc
dec
sub
dec
lods
lahf
icebp
dec
in
push
mov
cmp
push
jae
and
jg
xlat
push
sbb
mov
pop
pusha
ret
rorl
dec
jge
jb
shlb
js
sbb
das
mov
inc
jbe
cmp
push
lock
jp
frstor
ljmp
into
movsb
jne
or
jnp
dec
fcoms
sub
sbb
andb
stos
test
add
fst
mov
cli
loope
lods
mov
fcompl
int
negl
insb
lods
adc
jmp
sbb
insb
inc
xchg
pop
inc
nop
and
jl
repz
adc
mov
fimull
test
insl
or
cld
lret
xchg
and
cli
and
push
cmp
jae
xchg
fcmove
xchg
add
push
or
jmp
sbb
mov
mov
lods
nop
fstpt
or
add
cltd
into
sarl
cmp
pop
daa
loope
xchg
sbb
mov
incb
mov
lods
and
xor
mov
dec
stc
insb
cmp
and
xor
addl
in
rolb
mov
icebp
push
lods
pushf
stos
fiaddl
sub
mov
leave
out
stos
xchg
faddl
rclb
cmpsl
movsl
xchg
subb
xchg
push
and
pusha
je
in
ficompl
xchg
inc
je
pop
pop
lret
mov
jne
adc
mov
or
rclb
dec
inc
dec
sbb
adc
sahf
dec
pop
sub
xchg
or
fldenv
sub
jno
and
daa
xor
lret
inc
lods
xchg
push
mov
adc
and
jae
call
ret
mov
aad
cmp
cli
dec
lret
icebp
mov
lahf
imul
or
or
mov
hlt
repz
and
mov
or
dec
aas
pop
into
ss
mov
dec
dec
mov
push
ds
test
lcall
js
jp
rcrl
test
add
lret
mov
lahf
jo
imul
inc
mov
mov
mov
pop
mov
incl
push
out
xlat
add
js
shl
stos
sub
movsl
les
mov
pop
mov
jl
test
pop
jnp
cmp
and
or
mov
mov
mov
mov
or
shlb
jnp
pop
test
repz
mov
icebp
icebp
pop
and
mov
sub
in
out
aad
adc
imulb
cmp
out
pop
movsb
fwait
mov
ss
inc
int3
scas
leave
jg
xchg
sbb
fcoml
je
aaa
jae
les
nop
test
rclb
ret
xor
mov
xchg
je
outsl
mov
mov
scas
int3
cltd
jge
pop
aaa
aas
add
and
outsb
lahf
gs
mull
adc
xchg
aam
aam
mov
lahf
popa
mov
ds
repz
mov
rcll
mov
lcall
subb
cvtps2pd
jb
popf
aad
mov
jb
imul
out
pop
gs
mov
mov
sub
push
jp
ja
mov
fcompl
cmp
xor
xchg
add
and
inc
icebp
sbb
sbb
test
pop
push
lea
or
rorl
cmpb
aas
inc
adc
repz
nop
sbb
sahf
popf
orl
push
push
inc
in
dec
in
xor
and
mov
movl
xor
sub
mov
sub
movl
add
movl
mov
mov
andl
xor
div
movl
mov
movl
cmp
movl
je
movl
adc
movl
movl
mov
sbb
movl
movl
push
cmpl
jge
mov
xor
jmp
pushl
push
push
pushl
push
call
movl
mov
jmp
subb
xor
lods
insl
lds
add
adc
cli
adc
es
and
sbb
xor
inc
push
adc
fbstp
mov
xor
fisttpl
mov
in
xchg
jle
fldenv
in
push
push
adc
arpl
pop
lock
test
ja
push
nop
or
pop
in
push
mov
std
push
jb
outsl
or
mov
fistl
mov
sahf
addr16
pop
packuswb
or
dec
push
mov
outsb
add
push
xor
mov
mov
dec
xlat
push
lret
cmp
ret
dec
mov
pop
mov
cmp
adc
mov
pop
sbb
mov
iret
out
mov
and
subl
sahf
js
movsl
inc
lds
mov
push
or
xor
in
mov
adc
js
jnp
into
pusha
inc
push
push
pop
aas
sti
daa
mov
pop
jno
into
decb
mov
and
loop
stos
dec
pcmpgtd
or
push
rcl
orb
dec
dec
xor
sub
clc
jp
fistl
je
and
dec
dec
jp
push
jle
jle
cmp
adcl
repz
pop
cmp
pop
sbb
je
in
popa
pop
sbb
or
sbb
ja
incl
pop
dec
mov
sahf
neg
sbb
jbe
stc
ds
mov
test
xor
mov
pushf
aad
outsl
out
stc
loope
fucomp
mov
cmp
mov
movl
sbb
cltd
sbb
push
pop
xchg
inc
push
mov
push
je
les
jns
add
hlt
movsb
jge
cmpsl
adc
xorl
out
icebp
and
loopne
fsubl
ret
add
lret
mov
inc
pop
test
adc
mov
mov
inc
ljmp
xchg
mov
lds
andb
cmp
scas
cmpsb
ljmp
rcrl
popf
push
xor
mov
cmpsb
xchg
lret
fsts
daa
jecxz
rcrb
sbb
jbe
jne
divl
cwtl
imull
dec
mov
pop
xor
pop
pop
sbb
in
lods
pop
pop
popf
inc
mov
pop
cs
in
mov
sti
pop
cli
hlt
mov
pop
add
sbb
xor
out
loop
jmp
aaa
xor
adc
push
adc
sub
dec
sub
mov
sar
push
rolb
mov
dec
pop
mov
aaa
and
adc
and
pop
push
nop
pusha
lret
pop
inc
and
mov
inc
mov
fsub
lods
arpl
xor
jg
icebp
rcl
cwtl
and
cwtl
pop
lock
mov
incb
push
pop
sub
or
add
aaa
xchg
pop
test
ret
sbb
push
add
xor
addr16
lock
xchg
outsl
pop
sbb
std
push
test
fidivrl
std
leave
mov
mov
adc
pusha
repnz
add
imul
pop
mov
mov
mov
out
xchg
mov
bound
js
lods
mov
mov
xor
and
in
repz
test
outsb
sti
add
and
rorb
ret
rorl
and
mov
daa
aad
int3
lcall
jno
ret
mov
xor
fcos
ljmp
pop
das
push
mov
fucomi
inc
and
imul
mov
je
push
mov
and
sub
lock
mov
xor
out
addb
insl
mov
xor
dec
mov
pop
jp
aaa
xor
sub
das
mov
cltd
addl
ret
movsb
pop
cld
rclb
ret
pop
cld
int3
xor
push
das
mul
jae
scas
mov
dec
jle
jns
push
pop
pop
test
dec
jl
inc
loope
xchg
push
ljmp
adc
sub
sahf
fidivrs
arpl
sti
aas
sub
test
jp
mov
in
inc
imul
jmp
int3
test
and
mov
lock
daa
cli
adc
xchg
mov
test
mov
jae
insb
das
test
js
cltd
int3
les
sahf
cmp
sub
pop
sbb
pop
mov
ss
ret
imul
mov
int
xchg
cmp
hlt
sub
scas
sbb
call
push
les
and
lcall
cmp
stc
popf
adc
addr16
mov
inc
out
or
xchg
das
pop
sbb
out
push
jmp
outsl
fldl
and
repz
mov
sub
jmp
sbbb
std
adc
out
mov
adcb
adc
aas
cld
jecxz
xchg
daa
or
cmc
cmc
popa
mov
inc
add
nop
cmc
push
sbb
jbe
into
lcall
xchg
mov
fiadds
fld
ffree
inc
cmp
insb
xor
lods
das
mov
test
jge
pop
and
dec
jecxz
dec
data16
adc
xchg
dec
cmp
adc
mov
sub
orb
mov
cmpsb
sbb
rcll
xor
xor
scas
pushf
cmp
mov
das
mov
pop
push
je
cltd
pop
adc
xor
jnp
enter
iret
pusha
rol
add
test
insb
push
call
pop
sub
jbe
cmp
imul
xchg
addr16
rol
aaa
popf
mov
lahf
sub
test
aam
mov
fidivl
repz
popf
push
pop
mov
repz
or
pusha
js
push
cmp
sub
mov
sbb
xor
mov
adc
lahf
ja
lds
addb
and
or
repnz
and
jae
mov
std
nop
jns
push
scas
sti
callw
cmp
xchg
mov
jne
cmp
les
rol
in
lahf
dec
scas
into
movb
lods
test
call
data16
mov
popa
nop
enter
inc
add
out
mov
cli
flds
add
sub
pop
mov
mov
inc
sub
imul
inc
pop
adc
js
aaa
sbb
jmp
adcl
mov
cmp
clc
cmp
adc
fsubrl
mov
lods
push
mov
lahf
sbbl
outsb
add
ljmp
inc
cmpsl
insb
fs
cmpsb
jle
inc
pop
jl
pushf
insb
stos
out
mov
xchg
dec
cmp
mov
xor
outsb
mov
gs
test
and
cwtl
lret
hlt
jmp
adc
xlat
xchg
sbb
push
mov
inc
jne
add
std
repz
mov
cmp
in
inc
dec
pusha
negb
mov
push
jmp
cmc
ret
dec
push
test
mov
les
mov
ja
fimull
mov
lea
ret
or
adc
add
insb
fldt
out
fisubs
jo
int3
stos
lahf
dec
jmp
xchg
mov
in
lret
mov
out
jnp
xor
jns
mov
movaps
add
lret
fbld
mov
xchg
popa
cld
sbb
pop
inc
notb
lcall
hlt
sub
adc
push
iret
data16
or
out
aaa
adc
pushf
mov
mov
mov
cmp
xchg
cmp
das
cmpsl
loop
pusha
sarl
or
ret
or
out
xor
imul
mov
sub
mov
rorb
xchg
out
ret
xchg
and
lock
je
lea
insb
inc
ror
xlat
cld
cltd
sbb
jo
ljmp
int
xchg
sub
nop
inc
into
inc
dec
and
fwait
loop
test
xor
jecxz
arpl
ficoml
jp
testb
mov
sbb
jno
ljmp
cmp
std
sbb
add
or
repz
inc
add
pop
out
add
add
jg
add
jmp
push
push
push
pushl
push
push
pushl
push
call
mov
mov
and
mov
and
mov
orl
and
and
mov
mov
mov
cmp
jne
mov
mov
mov
mov
shrd
shl
mov
mov
jmp
adc
sahf
sahf
xchg
push
adc
aaa
test
mov
fsts
adc
cli
adc
into
add
sub
loopne
call
fbstp
leave
sub
mov
orb
inc
add
add
push
pop
mov
xchg
cmc
pop
in
jge
cmc
mov
inc
insb
out
cltd
leave
add
pop
call
lcall
pop
adc
cmpl
ficompl
mov
int3
out
ret
ds
pop
clc
adc
cmp
mov
xchg
dec
mov
fs
xchg
shlb
add
cltd
bnd
and
fucom
das
inc
popa
mov
sbb
sub
mov
mov
icebp
test
movsb
jge
stc
sub
pop
aas
xor
fsubs
stc
xchg
mov
hlt
jb
loopne
jne
sub
call
and
data16
js
adc
mov
sarb
or
xchg
sub
dec
sahf
imul
shll
iret
lea
stos
in
lds
jge
ljmp
cmp
insb
mov
call
sub
stos
push
in
jo
mov
andb
rcrl
xor
sub
sub
pop
repz
fistpl
mov
pushf
mov
mov
sti
pop
popa
ss
cli
gs
mov
sahf
inc
sub
xchg
cmpsl
mov
or
test
test
push
stc
dec
outsl
clc
sti
xlat
dec
or
in
fadds
jecxz
fcomps
repz
inc
rcrl
int3
jle
jg
xor
les
fmull
pop
or
push
cld
test
cs
int3
repnz
mov
faddl
push
mov
inc
stos
pusha
xchg
imul
mov
mov
xor
cmpsl
adc
push
in
fs
repnz
ja
in
pop
lcall
aas
mov
mov
mov
lods
icebp
jnp
div
xchg
mov
test
jecxz
lret
xchg
push
and
pusha
je
mov
cmp
add
cmp
fistpll
mov
mov
je
lret
movsl
subl
aas
inc
jp
int
sbbl
sbb
mull
xor
pop
pop
add
js
jne
in
sub
mov
lahf
xchg
push
push
popa
cmp
cmpsb
int
lcall
enter
or
movsb
cmp
mov
imul
mov
popf
mov
jmp
xchg
sbb
imul
push
xchg
cmpsl
lret
and
mov
pop
repnz
jbe
in
xchg
and
sarl
cmpsl
ds
test
push
pop
notb
jb
or
sbb
sbb
adc
push
ss
xor
jns
sub
push
mov
pop
testb
push
es
mov
fbld
and
push
rcll
add
fsubs
dec
dec
cmp
push
outsl
sub
outsb
dec
mov
cltd
gs
ds
push
xchg
xlat
test
cmp
add
rorl
mov
or
std
stos
in
test
aam
test
sub
cmc
les
sub
and
aad
popf
pop
jns
popa
jmp
xchg
pop
lea
jo
push
jo
jbe
insb
add
mov
std
fimull
jp
orb
roll
cld
pop
sub
jb
jmp
cmp
mov
pusha
lret
sbb
jmp
movsl
mov
xor
add
sahf
lahf
xchg
jp
add
mov
leave
adc
push
ficoms
test
cmp
sub
sub
test
sti
mov
jbe
das
fisubrl
sub
push
jle
mov
call
popa
cs
ds
dec
dec
loope
ret
mov
ret
xor
mov
xchg
aaa
scas
bound
cmp
ljmp
nop
popf
leave
and
aam
pop
inc
inc
jo
jl
frstpm(287
leave
call
adc
pop
mov
in
aaa
shr
mov
xor
xor
or
mov
mov
mov
shrd
xor
shr
mov
mov
xor
or
mov
movb
movb
movb
movb
or
shl
mov
sub
mov
xor
mov
and
jmp
lds
js
les
sub
arpl
adc
cli
adc
or
add
mov
sub
iret
data16
and
mov
int
roll
sub
and
xor
sar
int3
lea
cmp
mov
loop
dec
movsl
fsubs
data16
std
jmp
mov
sbb
cmp
pop
add
dec
call
jae
movsb
xorl
loop
testl
lock
fwait
inc
add
xor
scas
rorb
insl
xchg
sbb
mov
fdivrl
pop
sbb
es
adcl
and
cmp
ret
iret
movl
push
mov
shll
cli
int3
cld
fdivr
mov
push
inc
jg
sbb
mov
hlt
xor
sub
clc
or
push
lods
xchg
sub
mov
add
jl
push
scas
xor
jmp
fildl
inc
mov
loope
pop
mov
sarl
test
repz
xor
repz
dec
popa
fisubrs
das
mov
jnp
push
and
push
adc
adcb
int3
test
icebp
push
mov
mov
test
iret
out
or
or
flds
pop
cmp
push
jge
lds
cltd
xchg
lods
cli
sbb
int
dec
es
sahf
push
lds
push
scas
push
stos
sbb
lds
sub
pop
mov
ja
test
sub
mov
fwait
je
or
cmpsl
cmp
scas
ljmp
shrb
mov
cli
cmpsb
iret
push
mov
sarb
mov
sbbl
inc
jmp
subl
pop
int
lds
stos
test
jp
or
lea
loopne
dec
mov
sub
ljmp
xlat
push
out
icebp
add
sbb
xchg
push
sbb
into
mov
cmp
dec
or
push
adc
cmp
fmul
xor
test
adc
lea
or
scas
and
push
jmp
fistl
cmpsl
jg
sbb
fcmovu
push
mov
testl
stos
dec
mov
into
cmp
inc
jecxz
sbb
sbb
repz
gs
je
jmp
pop
push
fstpl
stos
addr16
adc
xchg
insl
pusha
int3
inc
xchg
lods
cs
and
inc
adc
ljmp
popl
cmp
mov
xor
out
mov
pop
sarb
pop
adc
lahf
or
sbb
mov
aad
dec
or
cli
xchg
dec
add
mov
or
push
nop
pop
mov
xlat
cs
mov
aad
add
mov
int3
xlat
and
cmp
push
mov
and
cmp
arpl
adc
shll
clc
test
outsl
iret
repz
cmp
in
and
lret
sub
or
cmpsb
in
lods
inc
pop
or
inc
ljmp
clc
int3
lds
push
in
sarb
inc
push
xchg
pushf
inc
pop
mov
outsl
lock
fsubrp
add
mov
lret
hlt
fnsave
mov
jnp
lret
out
sbb
xchg
repz
cmpsl
lods
mov
fcoms
mov
mov
fiadds
or
imul
pushf
sbb
jbe
sub
loopne
xchg
stc
daa
sub
sub
outsl
std
jb
aad
ljmp
mov
cwtl
pusha
push
cmp
out
xchg
and
jnp
rorl
test
add
pop
sbb
rcr
cmpsl
loope
jl
dec
sub
sti
call
push
cmpl
cmc
cli
and
sbb
mov
and
ud2
data16
icebp
fbld
jb
jnp
push
push
scas
cmp
dec
fidivrl
sub
or
and
test
add
fisttpll
sti
fisubrs
hlt
in
pop
in
inc
sbb
or
decl
xchg
inc
inc
mov
sbb
pop
add
aad
out
xlat
out
out
out
sub
inc
mov
push
lods
xchg
movzbl
shr
mov
movb
movb
movb
mov
mov
sub
xor
sub
mov
add
mov
add
cmp
ja
mov
mov
shrd
xor
mov
shr
mov
xor
shl
jmp
test
dec
push
push
sbb
push
mov
in
jbe
repnz
or
adc
daa
cli
adc
rcr
push
out
insl
mov
mov
scas
sbb
cs
lahf
dec
mov
mov
mov
adc
lret
scas
fwait
insl
jae
add
cmp
mov
or
mov
push
ljmp
insb
jae
jl
movsl
push
pop
mov
ret
rorl
xor
jo
rol
or
bound
stc
imul
mov
mov
jne
mov
andl
dec
out
fidivl
imul
dec
jle
fisttpl
xchg
mov
or
mov
into
jecxz
roll
or
mov
addr16
test
dec
adc
rolb
cwtl
add
jno
cmp
pop
scas
and
lods
inc
and
das
or
inc
and
or
jns
xchg
cltd
pop
pop
add
and
rcl
inc
rorl
popf
fisubrs
push
das
or
mov
add
outsl
mov
inc
call
cltd
inc
pop
pop
test
add
mov
in
mov
rcrb
fwait
mov
mov
test
imul
cmp
inc
sbb
mov
lea
cmp
sbb
cmp
les
adc
js
or
ds
dec
js
in
and
sbb
jecxz
movsl
ret
mov
sbb
push
sbb
in
pop
push
fdivrs
cmpsl
dec
push
mov
mov
mov
xchg
xchg
sbb
shll
arpl
sarl
dec
sub
addr16
mov
jnp
mov
test
jle
xchg
hlt
lods
push
lds
sbb
popf
push
lea
lods
les
sub
imul
push
jp
pop
and
xchg
in
mov
ret
lds
arpl
ret
pusha
cli
test
add
ret
lock
bound
xchg
add
in
mov
outsl
lds
lock
lock
fnstcw
push
rcrl
hlt
lds
and
xchg
push
xlat
mull
or
and
lock
aaa
jnp
dec
sub
test
mov
in
push
iret
jns
mov
or
xchg
and
or
jle
stos
ss
mov
addl
push
lds
mov
xchg
ffreep
bound
enter
push
loopne
mov
fisttps
push
ljmp
xchg
xchg
inc
mov
fimuls
fwait
mov
sbb
daa
fucomi
lret
sub
daa
inc
sti
push
loope
jae
mov
outsb
sub
pop
xor
jl
or
outsb
clc
add
test
stc
aas
iret
mov
dec
fcmovu
jle
mov
cwtl
pop
sbb
dec
shlb
repz
pop
movb
fwait
inc
subl
shr
adc
or
cmp
or
pop
test
xor
mov
rol
scas
in
push
rcrl
sub
fsubrl
roll
lcall
push
pop
xchg
mov
negl
mov
stos
jge
xor
out
pop
cmp
sbb
push
movsl
scas
popf
cmp
movsb
pop
push
clc
adc
cmpb
xchg
cmp
cwtl
rorl
jge,pn
icebp
xchg
fisubs
pop
das
sar
out
cld
xchg
ret
mov
stos
pop
or
or
dec
std
or
add
fisubrl
mov
jb
aad
jbe
test
mov
cmp
mov
sub
ljmp
lods
jnp
mov
mov
in
cmpsl
imul
push
sbb
fnstcw
pop
pop
call
pusha
and
stos
push
roll
enter
mov
lret
out
out
push
daa
stc
mov
test
jge
shrl
push
fidivs
or
into
nop
mov
sub
lret
fdivrp
ja
or
mov
jmp
jae
xor
xor
push
push
int3
sub
ds
adc
daa
cli
adc
jge
hlt
enter
aaa
sbb
pop
and
ret
sub
push
inc
andb
fs
jmp
mov
roll
fadd
test
data16
std
shlb
pop
stos
shrl
adc
or
nop
mov
inc
in
rcll
ja
mov
xchg
mov
cmp
fidivrl
inc
mov
in
mov
test
xchg
sub
sti
jge
adc
inc
or
pop
sub
jb
cmpsl
ljmp
sbbb
or
xlat
imul
loop
mov
leave
repz
mov
sbb
cld
adc
lret
notb
xchg
aam
lods
pop
daa
mov
inc
mov
clc
xor
shll
xchg
gs
aaa
xchg
in
dec
and
stos
xor
xlat
jns
xchg
call
fistpll
push
or
in
jbe
mov
dec
popa
hlt
sahf
xchg
pop
jge
dec
cmp
imul
lock
jb
push
outsl
inc
add
popf
push
jmp
pop
and
sbb
out
or
cltd
sub
mov
fistps
adc
loope
and
mov
in
pop
popl
sbb
jnp
fcomip
pop
shll
mov
out
and
sub
pop
pop
sub
jg
cld
fbld
pushl
repz
popa
cmp
sub
mov
sbb
mov
mov
rcrb
pop
aas
mov
mov
mov
pop
shlb
addr16
ror
push
js
xchg
sub
xor
mov
jae
repz
and
cmp
jg
sbb
call
mov
cli
test
ss
sbb
lcall
cmc
fmul
test
dec
xor
ret
mov
fimuls
push
leave
push
stos
sbb
and
sub
aaa
and
dec
add
nop
dec
ljmp
cmpsl
stc
push
sub
cmpsl
or
notl
rclb
loope
fstpl
sub
sub
cmpsb
and
cmpsb
sbb
sub
in
add
xor
aaa
outsl
cmp
je
push
dec
pusha
inc
ss
aam
add
jl
mov
ss
mov
sbb
sarb
cld
fwait
and
push
mov
or
imul
push
test
int
scas
mov
icebp
mov
cwtl
leave
jae
push
stos
cmp
out
es
push
test
sti
test
mov
movsl
sbb
push
jmp
aad
sub
mov
sub
sbb
jne
jp
mov
jge
insb
pop
adc
xor
test
scas
mov
jle
mov
adc
or
mov
out
arpl
test
and
xchg
cli
xchg
pop
dec
cmpsl
mov
stos
xlat
fwait
mov
jge
sbb
dec
aaa
mov
sub
cs
stc
lods
and
mov
xchg
mov
orb
inc
insb
lea
jp
mov
sti
lcall
mov
inc
pop
fnstenv
bound
jecxz
xchg
mov
and
and
stos
pop
lods
test
lods
dec
adc
popa
test
cmp
and
jae
mov
and
inc
mov
gs
cwtl
jno
or
or
bound
mov
xchg
mov
pop
arpl
xchg
mov
xorb
in
popf
mov
mov
mov
jmp
test
or
xchg
jge
or
lahf
mov
dec
pop
into
clc
inc
sbb
lret
fs
ficoms
std
push
bound
pop
cmp
dec
jbe
mov
cmp
pop
and
mov
or
outsb
scas
insl
scas
es
xchg
add
subl
add
fs
xchg
lods
stc
loop
leave
ret
movl
cmp
movl
jae
movl
cmp
movl
jae
shrd
shr
ret
xor
or
xor
mov
mov
xor
and
shr
ret
xor
xor
ret
mov
mov
ret
mov
mov
ret
push
mov
sub
cmpl
jb
adc
jmp
push
call
mov
mov
mov
sub
push
mov
mov
movl
sbb
mov
subl
orl
orl
movzwl
or
mov
mov
mov
xor
add
mov
adc
mov
mov
addl
sub
mov
mov
movl
sbb
not
mov
jmp
xlat
jmp
loopne
aam
cmc
or
cmp
mov
adc
ret
daa
and
rcrb
mov
movsl
fidivrl
push
lret
pop
sub
test
ret
push
lods
cmpsl
mov
mov
hlt
mov
mov
aas
jmp
or
aam
xchg
mov
push
mov
mov
or
je
sbb
xchg
cmc
adc
cmp
cmc
inc
xchg
call
das
and
shrb
mov
scas
mov
aad
hlt
stos
mov
sbb
test
les
push
js
mov
push
sahf
mov
in
push
xor
jne
mov
cmp
lahf
mov
jle
mov
add
sbb
inc
fdivp
jbe
inc
movsb
push
popa
cmpsl
mov
pop
mov
pop
stos
dec
jns
aaa
sub
stos
lods
adc
ss
add
in
jmp
or
es
add
cs
mov
or
inc
aam
nop
xchg
sarb
popa
jp
insl
cmp
mov
and
add
cmpsl
lea
add
jecxz
dec
fcoml
and
fnsave
sub
or
out
out
jo
pop
pop
or
lcall
arpl
and
outsb
inc
repz
pushf
jl
sahf
in
flds
in
jns
and
and
rol
sub
and
arpl
xchg
jle
cmc
xchg
cmp
fnsave
leave
jbe
adc
nopl
inc
ret
ljmp
mov
hlt
cltd
mov
pop
stos
nop
dec
test
ret
cmp
sub
sbb
add
sbb
inc
push
mov
std
loope
dec
cltd
lock
mov
clc
sbb
test
xor
add
fisubrs
call
sbb
jb
outsl
lret
xor
mov
push
or
sub
lock
int3
mov
xor
xor
test
add
xor
xchg
lahf
test
in
outsl
sbb
mov
fisttps
or
jne
dec
stc
push
xchg
sbb
lods
scas
and
pushf
add
in
div
ficoml
leave
mov
jnp
enter
jnp
iret
fdivl
arpl
sbb
fisttpl
shrb
mulb
data16
mov
and
hlt
movl
inc
xchg
jecxz
dec
int
adc
or
xchg
jno
cltd
push
xchg
imull
or
pop
lods
ja
mov
add
jmp
and
xchg
gs
pop
adc
lods
jmp
fisttpll
fdivrl
jbe
or
sbb
mov
mov
sub
jl
fistpll
mov
dec
sub
or
test
push
xchg
ljmp
lds
cmp
out
int3
cmp
xchg
inc
hlt
jb
jp
jg
mov
or
bound
inc
jae
fnstenv
pop
cld
pop
and
fldl
cwtl
cmp
and
imul
popf
pop
adc
lcall
and
test
push
lret
jmp
andb
insl
cmpsb
jno
jo
lods
aam
shll
rep
shlb
mov
popf
shll
aad
sub
cmpsl
cmp
loopne
jae
shlb
mov
and
pop
inc
adc
xchg
insb
out
adc
mov
inc
jp
je
cld
testb
lret
rorl
pop
lahf
add
add
out
sahf
and
xor
jle
inc
pop
dec
stos
mov
and
jmp
les
aad
inc
shll
push
stos
jnp
pop
xchg
mov
out
mov
lock
xchg
or
vcvtsd2si
movsl
sub
stc
mov
call
aad
pop
add
and
out
jmp
dec
inc
mov
or
fcoml
mov
sbb
es
xlat
shl
mov
cld
pop
out
xchg
cmp
orl
add
orl
lea
cmpl
ja
xor
xor
jmp
pushl
push
pushl
push
pushl
call
mov
mov
mov
mov
add
mov
andl
mov
mov
or
mov
shrd
sbb
shr
cmpl
jl
jmp
pushl
push
pushl
pushl
pushl
push
push
pushl
pushl
push
push
call
mov
mov
xor
xor
or
mov
movl
movl
orl
movl
adc
movl
cmpl
ja
or
jmp
call
movl
movl
movl
movl
movl
movl
sbb
movl
cmpl
jge
xorl
sbbl
jmp
pushl
push
push
pushl
call
movl
movl
movl
movl
movl
movl
jmp
mov
dec
or
loopne
xchg
xchg
lds
adc
cli
adc
imul
nop
sbb
lahf
data16
mov
push
pop
aad
icebp
lahf
mov
rorl
in
stc
push
mov
lret
mov
cmp
and
pop
out
xchg
aaa
or
ds
pusha
lahf
in
pop
jae
or
stos
mov
in
xor
outsl
adcl
push
or
push
dec
imul
xchg
dec
mov
xchg
cmc
fwait
cltd
shl
mov
jecxz
ret
add
pusha
lods
leave
mov
pop
mov
rol
push
adc
pop
add
in
mov
stos
ss
pop
dec
and
js
test
or
jae
mov
push
ret
scas
xor
out
cld
mov
add
cmp
out
das
jecxz
push
jp
std
jnp
lret
xor
icebp
jge
pop
lock
jae
push
subb
pushl
loopne
or
push
scas
sbb
jnp
fwait
cltd
movsb
adc
inc
lret
push
faddp
push
les
jns
shr
jmp
push
add
ljmp
and
or
pop
jb
imul
bound
stos
adc
ret
or
add
pop
or
and
cltd
insl
pop
ljmp
jmp
insl
iret
push
adc
xorl
js
out
push
shl
xchg
popf
stc
int
test
int3
mov
or
stos
inc
jo
mov
mov
and
fwait
and
test
sahf
inc
rcl
adc
iret
xor
imul
out
sub
je
pop
shll
jl
sub
es
les
pop
sbb
les
lret
mov
xchg
add
scas
adc
imul
pusha
xor
or
into
fisubl
cmpsb
push
daa
iret
cld
aaa
push
push
push
dec
repz
mov
mov
imul
mov
xchg
lret
icebp
stos
add
xchg
bound
or
loopne
xchg
jp
shll
outsl
inc
loopne
les
hlt
pusha
fisubs
pop
mov
cltd
rcrb
mov
cmp
push
cli
cs
shlb
popf
inc
xor
out
push
icebp
pop
cmp
xor
or
call
mov
fists
in
pop
sbb
loope
int3
mov
jno
les
imul
hlt
xchg
arpl
mov
cmp
pop
push
xchg
cmpsb
sbb
xchg
popa
test
dec
cmpb
nop
into
out
pop
sbb
cmp
pop
sti
pusha
jae
dec
push
ficoms
lahf
loopne
xchg
mov
pop
jp
push
cmp
call
cli
cmp
push
xchg
cmpsb
repz
mov
popa
aaa
inc
inc
cmp
mov
mov
iret
shlb
add
and
ljmp
inc
mov
cmp
scas
or
sbb
jle
push
jle
ljmp
xor
mov
addr16
rolb
test
mov
mov
pop
inc
test
and
jae
xchg
js
xchg
adc
push
jbe
cmp
and
je
rcl
not
enter
jle
and
insl
aam
cmpsb
fisttpll
es
sub
rorb
cli
test
call
push
dec
or
adc
jl
lret
popf
int3
loopne
mov
pop
jecxz
pop
pop
xchg
xchg
jo
jmp
loop
push
cmpl
sbb
mov
das
inc
pushf
pusha
add
cld
cmpsb
mov
ret
dec
loopne
fsubs
mov
lds
repnz
negb
fnstenv
xchg
push
scas
test
pop
xchg
add
test
pop
mov
sbb
add
and
mov
clc
in
push
jnp
je
push
lret
outsl
mov
jno
sarl
mov
xor
clc
dec
cs
or
nop
xor
or
movsb
aas
adc
pop
push
les
insl
fs
mov
add
pop
jmp
cltd
add
adc
inc
pusha
or
pushf
dec
ret
mov
push
add
cmpl
jg
not
jmp
push
push
push
pushl
pushl
pushl
push
pushl
pushl
call
movl
movl
movl
movl
mov
shl
xor
mov
subl
push
jmp
repnz
push
sub
iret
adc
mov
fstpt
stos
adc
aaa
cli
adc
test
dec
dec
adc
lds
arpl
xor
sbb
push
sti
les
imul
loope
loop
and
xchg
sub
inc
hlt
add
mov
bound
mov
ja
mov
mov
inc
aas
pop
enter
ret
adc
pop
popf
cmp
push
sub
cmpsl
out
mull
jl
xor
fimull
sbb
pop
cmp
sub
jle
jnp
nop
test
add
int
ja
test
jmp
mov
push
mov
or
xor
inc
pushf
out
xchg
cmc
xchg
push
test
add
icebp
push
insb
inc
jo
sbb
pop
or
cs
fs
push
or
test
fsts
pop
dec
aam
sub
mov
xor
add
fnsave
xlat
or
bound
mov
or
repz
dec
push
fs
nop
xchg
jne
scas
sub
lds
xlat
xchg
daa
testb
stc
cs
out
vcmpsd
push
pusha
mov
in
lods
fildl
loope
jae
mov
ljmp
gs
pop
cmp
clc
mov
dec
cld
idiv
fldl
adc
ret
jg
mov
xor
test
fucom
adc
or
xchg
ror
xor
inc
mov
daa
sti
xor
fs
push
into
inc
inc
sbb
push
cwtl
inc
inc
dec
cmpsl
insb
sbb
scas
out
sub
sarb
pop
mov
jge
call
into
and
jge
cs
arpl
add
insb
popa
out
push
xchg
icebp
fcoms
add
push
sub
and
mov
dec
dec
mov
jle
dec
lods
pushf
in
jge
bound
inc
mov
mov
sbb
inc
out
push
dec
rorl
mov
fildll
and
pop
cs
cmp
stos
jmp
dec
xor
sbb
pop
imul
outsb
pop
xchg
int
aas
jp
mov
pop
and
jle
out
test
faddl
cmpsl
or
arpl
mov
into
mov
inc
gs
inc
test
dec
sub
adc
add
pop
cli
mov
jl
decb
std
sub
inc
int
lods
je
xchg
lret
push
pop
inc
outsb
insb
pop
or
addr16
dec
and
insb
mov
pop
iret
xchg
cltd
movsl
movsb
mov
jbe
mov
add
adc
add
rcll
add
imul
jno
pop
push
shlb
xor
or
and
pop
lods
cmp
ret
dec
jmp
aam
inc
jmp
leave
cld
dec
adc
pop
mov
mov
ret
xchg
aad
leave
cltd
mov
rcrl
cmc
in
divl
jno
and
iret
hlt
bound
ss
pop
cmpsl
cwtl
mov
out
sahf
sub
inc
cltd
or
add
xor
and
add
das
cmpsl
adc
call
in
iret
in
mov
xchg
xchg
es
fisubrl
and
out
mov
cwtl
cmpsl
adcl
xor
pop
loop
addb
mov
fnsave
jmp
addr16
leave
dec
fld
mov
jmp
cld
filds
push
xchg
data16
pop
push
into
fstl
cmp
movb
jns
sbbl
fnsave
push
inc
lods
adc
xchg
lods
push
pop
into
push
pushf
jne
fucom
sbb
lret
loopne
test
xlat
jle
dec
fiaddl
test
mov
mov
mov
push
repz
push
push
repz
scas
push
cmp
jno
out
fwait
mov
mov
dec
cmp
or
mov
insl
inc
pop
cmp
mov
loop
and
add
push
push
mov
sub
push
aam
jno
das
icebp
push
jg
pushf
sub
ss
push
jns
into
xchg
pop
int
das
mov
jae
and
jp
insb
and
lock
shrl
aas
xor
push
push
push
push
sbbl
call
cmpl
jbe
jmp
pushl
push
push
push
pushl
call
mov
mov
xor
mov
mov
sub
mov
lea
cmpl
jle
and
jmp
push
call
mov
mov
or
and
mov
or
xorl
xor
movl
cmp
jne
andl
mov
sbb
mov
and
shrd
xorl
jmp
mov
pop
xor
ss
pop
mov
aaa
cli
adc
lret
sahf
cmc
adc
push
pop
lcall
xchg
push
mov
insl
scas
in
fists
out
inc
and
pop
mov
dec
jl
lods
scas
xor
xchg
in
cs
adc
or
movsb
cmc
pavgw
pop
hlt
hlt
pop
je
aaa
mov
in
sub
rclb
out
in
cltd
cmc
xor
inc
scas
cmp
out
call
or
adc
jmp
adcb
aas
cmpsl
enter
lcall
clc
mov
roll
or
les
cld
xchg
jecxz
sbb
pop
push
sbb
xchg
clc
aas
mov
mov
lock
xchg
xchg
mov
add
fmuls
cmpb
shll
mov
movsb
cmpl
or
data16
sbbl
cwtl
pop
push
cld
icebp
mov
out
add
popf
rolb
lcall
popf
int
pushf
les
pop
cli
ret
adc
fnstcw
mov
iret
clc
xor
inc
mov
jne
es
inc
xor
loopne
xlat
push
push
add
sbb
sub
fldcw
and
push
cmpsb
sbb
sbb
rcll
push
mov
or
sar
mov
sbb
pop
and
out
xchg
mov
and
cld
mov
mov
jmp
jno
adc
sub
loope
inc
sbb
mov
sbb
sbb
movsb
mov
jbe
push
ret
divl
mov
dec
fsubs
fistps
ja
pop
mov
xchg
add
repnz
enter
pushf
sahf
dec
lods
iret
adc
mov
pop
sub
cld
or
jno
ljmp
leave
jbe
mov
inc
cld
movsl
fstpt
jns
hlt
lea
xor
push
sbb
mov
push
jns
fidivrl
popf
inc
adc
aaa
or
subb
out
inc
rep
add
pusha
dec
mov
insb
mov
les
ss
lds
icebp
mov
rcll
std
mov
and
jns
or
pop
xchg
sub
xor
ret
pop
cmc
xor
fidivrs
je
out
fwait
xchg
cli
adc
cmp
subb
sub
dec
jb
fdivs
pop
xchg
addb
sub
jg
sbb
or
int
mov
ret
leave
orb
sub
sub
pop
fidivl
sub
or
cmp
mov
adc
cmp
mov
cwtl
sahf
or
push
test
inc
jns
rcll
push
push
sub
dec
lds
sbb
and
aaa
mov
les
mov
mov
cli
jns
in
clc
pop
fbld
icebp
mov
dec
xor
mov
cmp
add
shrb
in
sub
cltd
in
pusha
adc
inc
or
pop
jge
adc
sub
rorl
xor
lock
fucomip
or
stc
iret
xchg
lock
imul
shl
fstps
push
popa
pop
ljmp
rcll
std
sbbl
sbb
fists
or
inc
xchg
adc
pop
xor
dec
jo
insl
loop
push
add
jmp
xor
out
lea
std
jno
sbb
adc
mov
int
movsb
push
bnd
dec
dec
jge
and
add
movsb
push
in
and
xchg
mov
scas
pop
das
sbb
in
mov
sbb
xchg
and
stos
cmpsb
icebp
jo
and
and
fs
mov
mov
or
jl
andb
hlt
push
cld
add
mov
dec
pop
and
clc
insl
pop
xor
fmul
cmp
das
lods
sbb
out
mov
dec
or
push
rcrb
sbbl
rcll
xlat
imul
icebp
xchg
sub
pop
or
xchg
and
cmc
insb
stos
call
mov
aam
xchg
mov
call
rolb
adc
xor
mov
shl
xor
xor
or
mov
mov
cmp
movl
jne
movzbl
and
mov
mov
jmp
adc
mov
pop
rclb
test
lds
adc
aaa
cli
adc
mov
insl
icebp
inc
in
adc
and
xchg
pop
add
sbb
mov
pop
inc
xchg
roll
out
xorl
xchg
sbb
mov
fldt
sub
jae
mov
in
scas
cmc
sarb
out
mov
jno
adc
cmpsl
std
and
push
mov
adc
and
or
pop
ljmp
into
out
fisubrs
or
std
cmp
aas
arpl
push
test
cli
xchg
in
push
inc
stc
pop
pushf
cmc
pop
lret
outsl
aam
sbb
and
repz
bound
stos
movsb
and
mov
cmovle
sub
repz
mov
cmp
test
add
cmp
mov
aaa
enter
outsl
adc
push
push
push
insl
xchg
cmp
in
adcl
jns
lcall
arpl
xchg
fwait
pop
repz
cmp
outsl
lret
loop
std
repz
xor
inc
cmp
stos
pop
mov
dec
stos
pop
pop
rcll
cmc
loopne
push
jnp
sbb
jecxz
xchg
pop
push
xor
push
and
rcll
inc
insl
test
in
dec
jl
sbb
cli
mov
popf
pop
or
mov
and
daa
jp
inc
inc
test
aas
pop
imul
rolb
jne
push
scas
add
adc
push
jb
into
out
test
hlt
mov
and
leave
lods
fmul
jecxz
add
and
xchg
ret
dec
popa
mov
mov
sbb
dec
pop
fmull
xchg
mov
jno
jae
xchg
lret
pushf
mov
add
sub
lret
cmp
pop
push
es
shlb
jge
in
pop
mov
daa
das
and
cmp
pusha
add
or
movsb
mov
stc
xor
xor
sub
pop
popf
sub
jmp
mov
pop
push
sbb
test
bound
jp
test
pop
push
push
dec
sbb
jge
sub
aaa
mov
push
fldenv
dec
and
aas
rorb
xchg
mov
in
fcmove
scas
pusha
adc
lahf
mov
imul
or
test
and
push
adc
or
mov
mov
pop
lahf
shrd
scas
popa
das
sar
cmp
test
xchg
test
enter
test
inc
mov
adc
dec
inc
movsl
jmp
out
inc
push
fistl
and
sbbb
enter
cmpsl
mov
mov
sub
pop
mov
cmp
mov
ret
mov
sub
test
popa
push
sahf
fnsave
ret
dec
lods
mov
or
push
mov
sbb
sbbb
push
push
dec
repnz
fucomip
int
outsl
xorb
or
sahf
push
cmp
xor
imul
mov
jg
dec
in
push
inc
fcmovnb
xchg
sbb
adc
cmp
pop
std
xchg
enter
aaa
push
out
mov
jmp
pop
out
jno
sbb
arpl
lret
dec
jg
jb
fnstenv
ret
lret
daa
pop
into
sbbl
mull
leave
repz
movsb
int3
push
mov
dec
jp
mov
cmp
push
dec
dec
sub
imul
mov
jbe
sbb
stos
add
mov
add
cld
jmp
scas
rolb
push
or
inc
es
xor
sarb
mov
sub
mov
mov
dec
mov
mov
into
push
sti
sub
lods
daa
push
cld
test
mulb
push
push
pop
in
call
pop
pop
sbb
mov
dec
iret
or
in
outsb
xchg
enter
orb
cmpsb
adc
fs
mov
popa
inc
pop
add
or
sub
insl
dec
push
ss
cmp
xchg
adc
sub
pop
mov
push
test
cs
addr16
sarl
test
ret
xchg
shr
aad
or
xchg
cmp
sub
mov
neg
mov
addl
jmp
jo
mov
push
xor
sbb
xchg
mov
add
aaa
cli
adc
in
shlb
xchg
loop
adc
cmpsb
xchg
das
or
bound
xor
pop
pop
je
pop
mov
mov
enter
mov
cmp
xchg
pop
cmp
sub
sub
cmp
fstpt
sub
push
jbe
pop
mov
shl
jle
ret
fcomi
scas
inc
xchg
icebp
inc
jno
pusha
xchg
rcrl
mov
fnstsw
adc
add
mov
pop
cmc
cmp
loopne
bound
in
and
jp
or
dec
and
push
pop
pop
sahf
inc
cmp
aaa
sbb
movsl
jecxz
ret
test
daa
inc
push
pop
mov
pop
mov
test
cltd
scas
mov
cwtl
aas
pop
faddl
and
and
pop
sbb
repnz
add
dec
jecxz
mov
lcall
stos
xor
push
inc
fucomp
sub
daa
movl
in
stc
jecxz
and
xchg
sub
cmp
or
sti
dec
pop
jge
cmp
mov
shlb
mov
add
data16
out
ret
out
ljmp
push
push
cmc
push
inc
cwtl
pop
mov
pop
data16
mov
adc
sbb
mov
pop
bound
mov
enter
mov
dec
sub
vunpcklps
lret
andb
pop
stc
push
xor
ja
mov
jle
adc
fs
dec
push
addr16
mov
jbe
and
daa
fisttpl
adc
jo
pop
mov
int3
mov
and
xlat
fisttpll
ljmp
int3
cs
stc
add
cmp
sub
pop
jae
repnz
and
jns
adc
ja
adc
adc
scas
ret
mov
sar
outsl
inc
jge
fmull
fisttps
dec
call
test
scas
movl
movsl
adcb
inc
jmp
cwtl
sub
lods
inc
loopne
cltd
pop
sbb
mov
shl
test
nop
mov
fmulp
cmp
in
loop
gs
adc
js
fnsave
inc
jbe
sub
stos
jae
loop
mov
fstp
xor
inc
adc
loopne
lcall
push
fnstcw
clc
ja
xchg
xchg
pop
in
or
and
stos
out
adc
xchg
stos
cwtl
jmp
add
mov
jno
jae
das
cmc
and
loope
dec
stos
adc
mov
jecxz
lret
mov
jge
in
or
lcall
push
mov
invd
mov
mov
push
or
sub
leave
or
sbb
daa
cmp
push
out
lock
pop
mov
jae
mov
mov
popf
out
push
in
stos
loopne
jbe
gs
pop
out
clc
mov
xchg
lds
pop
or
and
arpl
cmp
dec
sbb
push
jg
in
enter
sub
cmp
stos
cmp
adc
enter
or
mov
ret
jns
push
mov
push
push
mov
shrl
jne
mov
icebp
cmc
fcmovu
dec
mov
pop
stos
fmulp
lfs
aad
xor
add
jnp
push
inc
add
mov
xor
and
negl
adc
cmp
into
inc
mov
jecxz
mov
pusha
pop
lret
mov
incb
jl
arpl
test
fs
add
lods
adc
in
insb
mov
stc
ds
outsb
dec
out
popa
bound
cmp
aam
cmp
mov
out
fwait
out
push
lods
cmp
addr16
subl
xchg
push
ficompl
adc
fisttpl
pop
lret
adc
dec
xchg
xor
xor
test
sub
xchg
arpl
push
shrd
orl
mov
xor
mov
addl
jmp
lea
popf
adc
adc
push
aaa
ret
lret
adc
cli
adc
iret
xor
cmp
add
pop
pop
xchg
inc
les
cmp
lds
psubsb
lock
dec
cmp
dec
and
mov
mov
push
call
bound
jne
imul
cmp
adc
cmpsl
int3
push
icebp
arpl
js
add
jle
mov
mov
dec
inc
pop
shl
push
mov
mov
xor
pop
pushl
xor
out
clc
cmpsb
sub
mov
mov
push
mov
adc
sub
and
xor
sub
and
mov
xor
xchg
cmp
pop
movsl
jne
jo
cmp
lock
mov
push
in
lahf
xchg
insb
or
jmp
xchg
mov
fwait
cmpsl
xor
cmp
pop
and
add
push
mov
addr16
add
mov
repz
inc
add
iret
fsts
popf
addr16
pop
or
pop
dec
jno
lea
add
fwait
ss
in
pop
popf
cmc
inc
add
sub
inc
fwait
mov
sahf
add
pop
nop
mov
mov
mov
add
les
xor
lcall
rol
lret
ja
and
in
dec
and
mov
notb
jbe
jl
bound
cmp
ret
test
jns
in
orl
dec
test
push
push
gs
pop
mov
pop
es
mov
mov
or
lock
imul
or
rorb
mov
cmp
mov
out
jns
sbb
in
cld
xor
sub
or
lods
rcl
push
push
loope
pop
lret
mov
jmp
and
adc
mov
dec
fidivs
dec
xor
pop
andl
icebp
jl
data16
rcll
int
iret
ss
adc
fildll
sbb
lcall
hlt
mov
loopne
push
cmp
out
dec
repnz
push
pop
mov
out
mov
and
pop
xchg
mov
and
inc
xor
fsubs
mov
orb
mov
xchg
and
lret
xchg
in
fisttps
push
or
gs
fs
lretw
adc
mov
mov
jge
rorb
stos
outsl
hlt
or
testb
pop
test
jne
in
jmp
popf
loope
push
adc
bound
pop
push
jl
sbbb
sbb
push
push
mov
fucomp
stc
mov
aam
lahf
cli
mov
adc
or
fs
gs
xchg
jnp
mov
cmpsl
xchg
jno
insb
and
pushf
psubsb
pop
xor
push
pop
cs
sub
fcmovnbe
pop
and
xor
daa
jp
mov
inc
icebp
sub
or
or
test
mov
cwtl
cltd
push
jp
daa
pop
mov
or
notl
sub
hlt
aas
pop
dec
pop
adc
xchg
xchg
test
mov
idivb
xchg
mov
popf
xchg
inc
or
push
lods
pop
mov
sub
xlat
mov
cmpsb
lods
ljmp
jb
or
jae
push
cmpb
jp
not
mov
les
sti
fbstp
jp
push
mov
lods
pop
mov
adc
icebp
jl
lret
mov
mov
xor
push
and
lea
xor
pop
cmp
xlat
jmp
jp
jns
adc
fiadds
js
xlat
pushf
fdivrs
out
mov
jge
mov
push
loop
data16
imul
and
in
pop
inc
fdivrl
or
mov
into
int3
fs
dec
cld
cmp
mov
lret
dec
mov
jbe
lcall
fs
push
push
push
push
sbb
daa
dec
jg
lahf
jge
jno
clc
pop
imul
add
jmp
mov
xor
shr
xor
or
adc
jmp
dec
sbb
ss
push
or
pop
or
push
jns
adc
cli
adc
cmp
jecxz
xchg
add
jp
sarl
jne
fistpll
popf
adc
cwtl
cli
ss
das
xor
mov
test
cmp
fimull
inc
cmp
lods
ret
repnz
scas
pop
cmp
mov
nop
xchg
mov
call
jae
std
push
cmpl
loop
pop
and
pop
sub
call
or
jae
std
loopne
frstor
push
out
scas
aaa
cwtl
movsb
sub
xchg
out
pop
out
mov
clc
ja
scas
cmc
or
dec
mov
push
cld
sub
arpl
movsl
jp
sbb
xchg
sahf
aam
cmp
sub
sub
loope,pt
xchg
push
jae
lods
std
rcr
fldl
imul
jno
imul
sub
xor
mov
out
sub
ljmp
daa
rcrb
hlt
aaa
mov
adc
mov
je
sbb
and
lahf
scas
jno
and
iret
pop
jnp
ret
sbb
lds
movsb
dec
popl
es
sbb
and
jl
mov
sbb
pushf
mov
mov
or
cmp
clc
call
cli
loopne
cmp
movsb
push
push
jb
adc
lods
or
mov
mov
pop
out
push
cmp
rclb
faddl
pop
sub
jb
icebp
pop
xchg
or
insb
xchg
lahf
jno
imul
push
arpl
jne
imul
cmpl
inc
sbb
xor
and
shrl
pop
xchg
lahf
lcall
out
sarb
xchg
stos
std
test
rcrb
and
in
fs
rol
push
push
xor
or
push
mov
mov
dec
arpl
jno
jnp
scas
mov
push
xchg
sbb
sti
dec
pop
iret
jge
adc
sub
mov
xchg
inc
jb
pop
test
loop
lock
stos
push
dec
cs
outsb
sbb
loop
out
clc
and
mov
or
pop
xchg
push
push
mov
push
in
rcrl
adc
adc
adc
pop
dec
loope
push
push
mov
mov
popf
decb
fcmovnu
mov
sub
inc
mov
or
mov
inc
pop
add
or
test
sub
and
push
pop
iret
orl
mov
sbb
and
cmp
loop
out
jbe
lret
test
orb
push
mov
dec
fs
fisttpll
stos
mov
sub
lcall
jl
mov
bound
fnsave
es
jb
xchg
daa
xchg
add
mov
daa
adc
in
gs
mov
jmp
scas
nop
mov
rol
imul
fsub
mov
jbe
rorb
test
clc
ds
jecxz
fwait
inc
xchg
push
push
in
and
lods
push
mov
subb
or
mov
aaa
xchg
adc
data16
andb
xor
mov
pusha
test
jo
imul
ljmp
push
in
mov
inc
mov
fsubs
nop
cmp
add
dec
and
ret
movsl
js
daa
and
in
and
sarl
insb
stos
jns
ljmp
lods
bound
loope
jge
add
mov
adc
lds
sub
push
adc
scas
mov
inc
lret
xor
xor
jle
sbb
sbb
dec
cld
sbb
add
mov
cmp
dec
add
addr16
and
or
sub
inc
sub
pop
in
sbb
clc
fldcw
decl
mov
mov
lahf
data16
ja
xchg
ret
and
mov
adcl
push
call
fwait
sub
xchg
out
imul
jmp
aaa
punpcklbw
iret
std
rcrl
push
sbb
les
inc
jl
lcall
push
sbb
rolb
add
cmp
or
andl
shl
sbbl
sub
mov
cmpl
jb
sbb
jmp
push
push
call
mov
mov
add
mov
jmp
outsl
sub
push
xor
dec
or
mov
dec
sti
pop
pop
lds
adc
aaa
cli
adc
cmpsl
sahf
push
rol
xchg
daa
dec
dec
cmpsl
cmp
mov
mov
ror
cmc
and
dec
jo
inc
or
add
jge
sub
mov
jne
sub
push
inc
cmpl
mov
fisubs
nopl
test
in
popf
out
and
mov
xor
aad
lcall
rorl
popa
dec
cmp
lds
insl
mov
pop
add
cmc
add
sbb
gs
and
ror
inc
outsb
inc
loope
fcmovbe
pop
push
and
outsb
and
lea
mov
mul
mov
cmpsl
mov
mov
push
mov
jge
lea
mov
dec
loop
test
dec
mov
int
and
xchg
jbe
or
push
jnp
insl
pop
sbb
mov
loopne
add
test
bound
loopne
call
cmpsl
pusha
lret
xchg
idivl
and
and
insl
xor
cli
das
push
popf
cmp
cmpsl
mov
adc
pusha
sub
rorl
cmp
fldt
call
je
or
cmp
dec
mov
outsb
cmp
pop
add
push
lret
cmp
fmuls
sub
iret
jnp
and
scas
pop
fs
or
jge
sub
dec
mov
push
imul
dec
dec
jmp
aaa
adc
lahf
ss
clc
enter
jp
pushf
adc
repnz
loop
add
xchg
out
xchg
int
jg
sbb
mov
mov
imul
aad
iret
les
pushf
cmpl
stos
dec
mov
dec
in
mov
jns
add
push
lahf
shrb
imul
ficompl
jle
mov
mov
rcrb
stos
adc
fs
imul
test
cld
gs
sbb
jl
cld
pop
xchg
roll
rclb
inc
inc
cmpsl
push
ficoml
ret
test
dec
xchg
cmpsl
imul
pop
mov
and
loope
xchg
out
push
inc
popf
lods
dec
add
mov
js
test
in
add
xchg
aam
nop
jo
mov
mov
mov
inc
push
fs
je
ja
or
enter
mov
faddl
das
mov
xchg
rorb
outsl
dec
pop
sub
cltd
jp
outsl
stos
cmp
ror
xchg
adc
xor
mov
lock
sub
fs
jnp
lcall
mov
cwtl
cmpb
nop
mov
or
xchg
mov
add
dec
cwtl
fwait
jg
push
push
and
inc
mov
xchg
or
mov
nop
test
xchg
cmp
je
sahf
xchg
mov
jecxz
in
and
mov
ljmp
sub
adc
cmp
test
add
out
test
je
inc
pop
test
mov
jl
pushl
jg
pop
mov
jae
and
aaa
pop
inc
push
jne
std
push
movsb
add
outsl
scas
incl
jl
push
sub
push
fucomip
pop
test
inc
sub
jle
sbb
dec
jnp
pop
xor
fucomp
daa
mov
mov
push
cmp
sahf
inc
and
xor
hlt
ds
enter
mov
xchg
or
adc
or
loopne
sub
mov
fwait
test
adc
jns
repnz
pop
and
push
jmp
mov
dec
das
lods
mov
sub
and
xorb
movsb
sub
stos
mov
add
xchg
cmp
sbb
add
hlt
fiadds
xchg
inc
nop
enter
push
scas
mov
in
push
dec
xor
lods
scas
dec
lret
dec
mov
lret
bound
push
jg
sbb
or
rolb
mov
dec
xor
mov
jle
lret
cmp
pop
sbb
ljmp
ja
cmp
roll
lock
lahf
add
imul
adc
shrd
shr
and
mov
mov
xor
xor
add
xor
shl
xor
or
add
mov
cmpl
jge
movzbl
sbb
jmp
pushl
pushl
call
mov
shrd
shr
mov
mov
adc
mov
xor
xor
addl
or
shl
sbbl
lea
xor
mov
addl
mov
shrd
subl
shr
andl
mov
add
mov
mov
cmpl
jle
jmp
push
call
xor
mov
xor
or
jmp
scas
mov
nop
inc
push
adc
adcl
adc
aaa
cli
adc
push
mov
ja
outsl
mov
adc
cwtl
mov
bound
outsb
cmc
push
sub
pushf
das
and
sub
sub
lods
adc
sub
int
imul
push
xchg
inc
sbb
aas
ds
and
test
out
movsb
pop
push
arpl
movsb
jnp
mov
dec
loopne
mov
cli
or
adc
inc
add
lret
pop
sbb
jne
mov
pop
jne
fimuls
enter
jle
dec
fisttpl
cmp
test
and
xor
mov
jge
cltd
mov
lret
bnd
lods
jmp
mov
inc
mov
call
cmpl
cmpsb
adc
mov
pushf
sub
std
fdiv
and
aas
arpl
push
jmp
mov
push
repz
rol
mov
adc
xor
rsqrtps
sbb
pop
dec
push
xor
jmp
jae
in
ret
imul
movsb
cmp
or
outsl
mov
and
jno
pop
rcrb
pop
sbb
lock
xchg
pop
loop
jmp
xchg
fldcw
xchg
add
loope
mov
pop
sub
inc
iret
xor
xor
sahf
outsb
pop
pop
movsl
add
movsb
ret
mov
into
mov
pop
push
jle
cmp
lret
push
lea
fmul
xor
ss
rol
adc
lea
lods
mov
call
and
mov
dec
jge
shrl
jnp
imul
adcb
fwait
cmp
dec
pop
stos
add
popf
pop
mov
inc
mov
jmp
inc
cs
ja
cli
in
out
mov
in
pop
bound
adcl
out
xchg
aam
iret
push
inc
bound
cmp
movsb
scas
insl
mov
jo
gs
inc
clc
arpl
sbb
scas
or
jge
mov
or
xlat
xchg
mov
mov
xchg
sbb
xchg
jge
xchg
aad
jno
lods
pushf
enter
insb
sub
addr16
popf
ds
sbb
push
lods
rorl
std
or
push
lret
xchg
cmc
into
mov
cmp
scas
adc
cwtl
movsl
mov
and
jp
pop
pop
xchg
mov
cmp
xchg
js
enter
dec
or
repz
lds
ror
enter
mov
dec
xor
out
test
fdiv
and
adc
push
lock
fstpl
and
add
jle
inc
jecxz
cmp
ret
xlat
aad
rclb
mov
aas
loopne
mov
sbb
icebp
shrb
je
dec
outsb
filds
ds
add
lret
stc
adc
jnp
iret
sti
xor
xor
test
filds
cmpsb
lods
and
iret
jmp
int3
push
js
mov
adc
cmp
fidivs
dec
xor
sbb
cmp
std
adc
scas
xchg
mov
mov
lret
inc
pop
xchg
in
dec
test
push
imul
mov
pop
mov
addr16
jl
mov
xchg
xchg
xor
test
mov
lods
sbbb
mov
cmpsl
rdpmc
dec
fstps
and
push
add
cld
daa
pinsrw
xchg
or
add
push
pop
jae
hlt
and
or
in
mov
loop
jge
jae
loopne
jb
cmp
aam
push
fsubl
aaa
push
adc
mov
lahf
push
push
push
clc
cmpsb
mov
mov
mov
add
movsl
sbb
cmpsb
or
mov
ja
dec
dec
and
or
or
in
js
mov
nop
push
adc
daa
sbb
sbb
fcmovb
cs
sub
or
ja
int
test
repz
cli
not
jp
adc
add
xchg
lods
pop
pushf
add
adc
les
xchg
push
xor
cmp
push
imul
mov
adc
mov
shrd
andl
mov
mov
sbbl
xor
negl
shr
cmpl
jle
or
jmp
push
push
call
mov
mov
xor
or
shl
sub
mov
mov
cmp
jmp
dec
test
push
or
inc
jge
adc
push
mov
cli
adc
fwait
or
sub
sbb
repz
inc
mov
adc
fdivl
and
mov
jp
cmovo
jns
cs
add
imul
mov
scas
fst
mov
das
jbe
mov
insb
and
imul
nop
push
rcl
jp
dec
sub
movsl
cwtl
and
es
push
sub
lret
aam
movsb
inc
sbb
push
pop
push
jge
das
enter
jb
popf
std
xchg
mov
add
cmpsl
insl
add
or
jmp
pop
insb
pop
xchg
sub
sti
loop
mov
lods
jbe
cmp
and
xchg
or
add
loope
inc
addb
or
or
mov
stos
mov
enter
push
sub
jecxz
faddl
sahf
mov
mov
scas
jno
mov
sub
xchg
adc
push
dec
adcl
mov
mov
pop
mov
xchg
xchg
mov
test
addr16
scas
cld
arpl
packuswb
or
lcall
push
test
sub
and
jns
mov
clc
jo
ss
sbb
movsb
sbb
adc
testb
sub
sbb
inc
int
push
add
mov
ljmp
push
es
rcrl
push
pop
add
movsb
cmpb
ret
mov
pop
add
dec
jp
push
jg
imul
lock
push
andl
sbb
sbb
test
inc
pop
gs
jae
filds
xchg
sub
int
test
dec
pop
or
and
imul
jmp
fs
cmp
ret
incl
out
int3
into
icebp
push
pop
pop
pushf
imul
inc
pop
fmuls
push
mov
inc
xlat
decb
or
loope
pop
push
cmp
mov
divl
es
jno
pop
stc
adc
xchg
cld
push
push
pop
xor
or
clc
fcomps
test
movsb
mov
xor
xchg
test
and
xlat
mov
out
popa
cmp
xchg
pop
push
mov
mov
out
pop
hlt
ja
ja
lret
dec
mov
stos
mov
push
stos
adc
dec
ss
lds
aaa
xchg
das
das
mov
mov
mov
push
cmp
mov
sbb
push
cmpsl
aad
push
repnz
jnp
clc
loopne
ljmp
jb
fwait
andl
fnstenv
mov
jl
sahf
mov
ret
stc
lock
popf
jl
inc
pop
sahf
sub
cld
push
cmp
outsl
adc
jns
popa
xchg
push
mov
shrb
pushf
out
jns
fsubrs
out
aaa
sub
sub
jae
push
fsubl
shlb
in
cmc
and
mov
or
in
orb
test
bound
test
sbb
inc
and
iret
iret
or
jmp
add
mov
sbb
js
in
pop
mov
jecxz
movsb
dec
subb
mov
jo
cmp
rclb
pop
push
pop
add
xor
fbld
push
ljmp
cmpsl
xor
mov
imulb
jae
push
dec
clc
jae
inc
pop
mov
mov
lds
rcrl
cwtl
sbb
push
cwtl
jg
and
mov
add
cwtl
jg
xchg
aaa
stc
std
inc
sti
and
push
scas
lods
nop
ret
sbb
add
xchg
dec
xor
hlt
bndldx
sub
cli
inc
sub
xor
sbb
add
or
or
inc
pushf
rcrb
sahf
loope
pusha
ficomps
rol
ficoms
xchg
adc
cmp
push
adc
lods
in
enter
xchg
loop
aam
in
mov
data16
push
scas
inc
adc
push
imul
pushf
shlb
jp
outsb
pop
pop
int
xor
inc
hlt
movl
jg
sbbl
mov
mov
sbbl
shrd
mov
mov
addl
xor
shl
sbbl
xor
andl
or
orl
shr
neg
mov
add
mov
cmpl
jbe
mov
add
mov
jmp
push
push
push
call
mov
mov
shrd
shr
xor
mov
mov
mov
xorl
xor
xor
xorl
or
adcl
shl
adcl
jmp
cmc
push
xor
adc
es
out
outsb
pop
jns
lcall
adc
cli
adc
inc
inc
jns
adc
daa
mov
mov
rcrb
nop
mov
cmp
lret
inc
pusha
cmovne
cmp
fnsave
dec
cmp
push
cmp
or
cli
iret
enter
dec
cmpl
mov
mov
push
push
sub
clc
push
lahf
mov
mull
aaa
ss
pusha
arpl
ds
sahf
loop
xchg
sub
or
dec
and
pop
sub
or
cmpsb
lods
push
adc
push
sti
dec
dec
adcb
mov
pusha
pusha
cmc
jecxz
sarb
outsl
cmp
adc
adc
xchg
lahf
jle
shrl
fdivs
or
push
push
stc
pop
inc
lea
aam
sahf
icebp
jo
dec
sahf
ret
adc
cmp
sbb
cmp
dec
xchg
out
rol
jmp
mov
cmpsl
ds
pop
stos
push
mov
push
and
jge
or
pop
pop
lsl
lea
ljmp
sub
dec
aas
in
fstps
adc
mov
pop
push
mov
lcall
mov
in
fsubr
push
xor
jle
jno
push
add
out
and
add
xchg
adc
jl
xchg
fists
dec
fldenv
pop
popf
pusha
jb
inc
lret
pminub
stos
in
xor
mov
ljmp
mov
jmp
sbb
mov
adc
aaa
sti
mov
jecxz
xor
jge
mov
sub
mov
add
push
in
outsb
out
scas
insb
in
int
jecxz
mov
push
cwtl
mov
into
orb
cld
cmp
sub
stc
inc
andb
ds
imul
mov
adc
lret
cltd
mov
fstps
pop
jo
fs
ret
shlb
pop
and
add
out
imulb
loopne
push
shl
movsl
les
inc
dec
push
xchg
mov
aas
ret
rolb
inc
adc
pushf
rolb
je
popa
leave
repnz
loopne
ljmp
add
lock
mov
insl
push
xor
frstor
insb
mov
adc
sbb
mov
cmpsb
ss
jecxz
adc
xor
jno
xchg
cmp
adc
xlat
in
jle
adc
aad
ret
out
push
rcr
jns
mov
test
out
repnz
fwait
inc
int
sub
cld
push
mov
lahf
sbb
cmp
mov
jl
dec
gs
or
mov
dec
or
sti
mov
mov
sub
xor
loope
add
mov
mov
dec
int
mov
movl
jnp
test
sbb
std
jo
mov
ret
or
xor
mov
lahf
movsl
rcr
adc
rorb
jae
pop
push
fdiv
movb
push
jecxz
adc
ficoms
stc
and
ret
add
cmp
test
push
and
sbb
jb
pop
dec
fidivl
lcall
imul
sub
cli
cmp
addr16
cmp
sub
dec
mull
cmp
ffree
rcll
fnstsw
aad
rolb
popf
fdivrs
movsl
gs
jae
insl
test
movsb
or
enter
pop
jmp
dec
xchg
loope
sbb
dec
push
mov
sub
fs
test
ficomps
orl
mov
cmpsb
iret
mov
adc
adc
push
insb
add
cmp
mov
repz
in
adc
iret
jmp
xor
dec
sub
pop
imul
xchg
pop
int
lret
adc
xchg
loope
mov
out
dec
mov
pushf
jae
fwait
movsb
movsl
and
push
aas
sub
jmp
mov
imul
sbb
add
repnz
ficomps
mov
mov
xchg
xchg
mov
lcall
aam
sbb
lret
add
adc
mov
cmp
add
xor
add
jmp
push
push
pushl
push
pushl
push
push
push
push
call
mov
mov
shrd
mov
mov
jmp
ret
je
cmp
cmp
je
icebp
xchg
xchg
push
jnp
dec
inc
adc
aaa
cli
adc
push
lcall
push
and
xchg
push
xor
fs
jae
dec
mov
in
add
or
jnp
mov
jo
or
cmpsl
sub
and
xchg
cld
in
lds
push
xchg
outsl
cmpsl
call
pop
lds
popf
sub
push
and
xchg
dec
fucomip
and
in
nop
pop
in
add
dec
sahf
sub
pusha
and
pop
inc
lcall
sub
and
dec
xchg
dec
mov
push
cwtl
aaa
fs
imul
scas
in
inc
mov
pop
jg
xchg
mov
sub
addr16
mov
or
and
stc
push
cltd
sub
xor
cmpsb
pop
jo
testb
adc
xchg
push
or
sbb
lret
fadds
jecxz
fldcw
add
sti
pop
pop
add
jge
pop
scas
leave
lds
stos
mov
rcrl
pop
xchg
mov
pop
dec
dec
and
fwait
mov
lock
lret
outsb
pusha
push
xorl
or
je
or
enter
push
dec
add
rcr
in
ss
jnp
aad
jbe
stos
pop
out
cmp
lods
push
rcl
inc
hlt
stos
idivl
lods
out
xor
xchg
std
jns
icebp
test
jbe
mov
mov
test
divl
sub
sub
sahf
orb
in
int
test
call
and
filds
dec
sub
cmp
cmp
mov
pop
rcll
mov
or
icebp
pop
lods
xor
loope
jno
pop
jmp
stos
scas
loope
mov
mov
lea
jbe
xor
lods
ss
sub
ja
scas
cmpsb
adc
fisubl
mov
cmp
fcoms
int
fldenv
fdivl
add
fldenv
push
pop
data16
jo
mov
fstps
xchg
lods
push
jmp
out
and
fbld
jge
lahf
es
neg
in
pop
push
mov
ljmp
lock
push
add
add
jno
mov
dec
adc
into
and
bound
inc
push
pop
std
and
mov
jg
cmp
arpl
push
or
test
pop
ljmp
lock
inc
int
aas
enter
adc
subl
arpl
mov
cltd
ja
in
cmpsl
inc
daa
call
mov
jmp
lods
cmp
sti
mov
sub
jnp
setl
lret
test
fwait
jmp
xchg
inc
fs
or
fs
jo
clc
or
mov
sbb
bound
mov
repz
and
fadd
jp,pt
inc
mov
frstor
and
sbb
sbb
mov
mov
sar
jle
mov
push
ret
adc
pop
xchg
js
cwtl
push
pop
fisttpll
cmp
stc
cli
jb
pop
push
int
scas
add
popa
repnz
int3
lds
aaa
and
bound
shl
xlat
pop
sub
es
ja
out
pop
stos
clc
shrb
inc
testb
out
add
add
pop
cmp
push
cmp
jecxz
loopne
adcb
push
arpl
mov
or
push
or
imul
mov
fs
sub
icebp
mov
jb
stc
push
and
call
pop
sub
inc
pop
scas
imul
cmp
mov
dec
push
xchg
stos
jno
loope
inc
jp
or
mov
mov
and
gs
cltd
lods
jge
mov
imul
mov
cmp
xchg
daa
inc
push
outsb
cmp
mov
cmp
xor
or
std
pop
int3
xchg
subb
popa
and
clc
push
pop
dec
loope
shll
aas
xchg
lods
arpl
mov
pushf
pop
mov
sub
xor
shl
andl
xor
or
andl
shr
mov
cmpl
ja
andl
and
jmp
push
pushl
call
mov
mov
mov
shrd
shr
and
mov
mov
mov
adcl
xor
adcl
xor
xorl
or
andl
shl
add
cmpl
ja
jmp
push
pushl
pushl
push
pushl
pushl
call
add
mov
jmp
sbb
cmpsl
mov
push
push
pusha
jecxz
mov
addr16
adc
aaa
cli
adc
jle
or
lods
movsl
lea
loope
cli
repnz
mov
repnz
pop
jbe
in
into
xor
ret
insb
xchg
lods
das
pop
in
push
cmp
ret
cmp
out
cmc
inc
mov
mov
pusha
push
pop
cmp
data16
push
push
sbb
lret
fdivr
mov
xchg
sub
int
dec
jl
aaa
mov
aaa
dec
popa
mov
cmpsb
mov
insl
out
push
push
fcomi
shl
lods
popa
mov
loope
dec
pop
push
mov
roll
ja
ds
mov
in
push
pusha
cmp
inc
mov
pop
jb
repnz
inc
ret
js
xchg
in
nop
es
push
mov
arpl
inc
mov
lret
dec
aas
sub
out
cmp
xorb
or
nop
movsl
stos
mov
mov
in
mov
sbb
jmp
jno
cmp
mov
xor
aad
adc
dec
lods
fisubrs
outsb
jnp
push
dec
fiadds
push
pop
repz
xor
mov
imul
je
sahf
xor
add
xor
ljmp
xor
das
cli
sahf
bound
loope
gs
repz
jae
inc
rcl
ljmp
popf
in
mov
adc
hlt
cmp
fwait
push
dec
adc
pushf
xlat
cwtl
lods
test
shl
fstp
out
dec
push
xor
std
dec
cmp
xchg
lret
mov
pop
adc
jge
push
fidivrs
cmpsl
lods
loop
cmp
in
inc
push
fnstcw
or
add
icebp
sbb
push
xchg
jmp
inc
decl
dec
xchg
sub
ret
loop
push
lds
or
imul
adc
ljmp
out
out
das
repnz
sbb
insb
inc
arpl
jnp
xchg
cmp
mov
mov
pop
bound
loope
add
std
les
std
movsb
nop
cmp
mov
dec
inc
out
lods
jecxz
out
dec
mov
outsb
add
scas
les
mov
xchg
dec
stc
repnz
je
xchg
cld
in
mov
add
into
ret
fxch
dec
pop
pop
cmp
xchg
movsb
jne
push
data16
cmp
pop
fcoms
dec
and
movsb
lret
mov
fsts
push
fistl
pushf
insb
sub
insb
loope
mov
push
stos
ljmp
jns
rorb
pop
mov
mov
addr16
jg
pop
or
xchg
jle
ljmp
jns
js
push
es
add
aas
mov
mov
adc
daa
std
popf
xchg
jecxz
imul
and
push
ds
pushf
inc
mov
pop
xchg
xchg
xchg
and
xor
mov
ljmp
jmp
and
add
imul
pop
sti
add
lcall
int3
sbb
xor
int
es
popa
repz
sarl
hlt
jbe
enter
jb
inc
xor
int3
les
arpl
jae
adc
lds
mov
int
rep
xlat
cmp
out
pop
pop
sub
enter
sti
sbb
and
negl
cmpsb
das
mov
jmp
dec
add
lods
lock
and
mov
mov
orb
push
sub
and
fadds
sub
dec
js
xchg
pop
loope
idivl
dec
lods
js
ret
popf
and
ds
jne
pop
xor
cli
stos
dec
ret
and
movsl
pop
xchg
cmp
orb
stos
push
test
fs
movsl
cmp
push
mov
push
adc
ret
daa
outsb
jae
lahf
test
cmp
call
or
jge
lods
jl
fwait
daa
clc
push
fwait
cmp
pop
and
add
mov
hlt
mov
xchg
xor
cmp
inc
das
roll
or
adc
jb
in
imul
add
lods
enter
add
sbbl
xor
xorl
shl
cmpl
jle
jmp
pushl
pushl
call
xor
or
mov
movl
mov
mov
movl
and
mov
movl
xor
mov
sbb
movl
xor
mov
or
mov
sub
mov
sbb
shrd
cmpl
jbe
sub
jmp
push
call
shr
mov
mov
xor
shl
xor
xor
or
lea
mov
mov
adc
mov
xorl
shrd
and
shr
cmpl
jb
jmp
pushl
pushl
pushl
pushl
pushl
push
pushl
call
mov
mov
shl
mov
xor
xor
or
add
mov
mov
andl
xor
mov
cmpl
jb
not
jmp
push
push
push
call
mov
shrd
shr
mov
mov
xor
adcl
shl
cmpl
jl
sbb
jmp
push
call
xor
or
lea
mov
mov
mov
movzwl
or
shrd
xorl
jmp
cmp
mov
adc
xor
adc
mov
adc
cli
adc
aas
std
push
jp
fisttps
rorb
out
popa
dec
loopne
in
out
cmpsl
xor
push
cmpsb
test
ret
mov
les
mov
mov
in
dec
mov
imul
sbb
imull
fsubl
jge
push
jecxz
inc
pop
outsb
cmp
dec
mov
into
push
xor
xor
xor
mov
jecxz
pusha
icebp
fdivs
xor
push
and
out
or
push
movsb
add
loop
inc
call
sti
jcxz
sbb
mov
inc
inc
lods
and
inc
push
push
loop
cld
cmpsl
mov
addr16
sbb
mov
jge
fldl
mov
ss
repnz
movsl
or
nop
das
fidivs
pop
sub
mov
jno
pushf
sub
xchg
mov
int
jge
mov
jmp
sbb
ds
scas
js
sub
push
push
je
movsl
popf
cmp
cltd
pusha
sub
rclb
add
inc
xor
inc
leave
lods
push
push
mov
popa
jno
adc
mov
push
nop
sub
loopne
andl
lods
in
add
aas
lea
fcomps
fcom
push
jl
mulb
pop
or
inc
mov
in
jno
adc
mov
sti
ja
mov
mov
push
mov
xor
sti
hlt
inc
cmp
add
jmp
dec
out
pop
xchg
fidivrs
int3
cmp
shl
mov
es
ret
rcl
pop
pop
aaa
sub
jbe
sub
add
imul
fnstcw
mov
sub
add
aad
test
cmp
ret
ficompl
sbb
stc
aad
enter
ljmp
sbb
ret
insb
adc
filds
ss
mov
mov
js
sub
aam
sbb
arpl
push
push
clc
cs
cwtl
cmp
out
sub
aas
gs
push
orl
mov
jae
in
pop
test
das
roll
push
lcall
mov
jecxz
adc
xlat
fwait
dec
std
fdivr
aas
ja
sahf
repz
dec
rcll
daa
icebp
mov
or
mov
in
loopne
cmp
and
popa
mov
scas
movsl
sbb
mov
sbb
pop
int
pusha
xchg
mov
jb
mov
jno
push
cmpsl
aad
add
mov
lcall
in
sbb
out
sub
cmp
pop
stos
mov
sbb
or
cmp
mov
test
mov
pushf
rolb
jle
test
call
popf
outsl
sbb
or
jb
pop
cmp
nop
or
out
repnz
je
test
int
out
int
push
sub
mov
ret
push
mov
sub
sub
inc
lds
inc
mov
dec
sub
ja
repz
cmp
mov
cmp
imul
add
mov
ret
inc
jbe
jp
dec
adc
fdivs
dec
or
sub
push
xchg
imul
lret
mov
jo
or
imul
lea
jae
mov
cmp
negb
in
sub
in
lahf
cmp
xchg
jb
in
and
std
jmp
cwtl
ss
mov
gs
mov
mov
test
int
mov
push
jp,pt
xchg
push
lahf
mov
cmp
std
jnp
mov
inc
cli
daa
mov
pop
add
fidivl
sti
aaa
lret
fwait
gs
jbe
cmp
push
stos
pop
xor
lea
adc
push
test
pop
ficoml
scas
cmp
or
cmp
test
push
and
adc
push
adc
roll
mov
cmpsl
push
and
mov
cmpsl
data16
int3
sub
jmp
scas
out
push
dec
fisttpl
arpl
cmp
movsb
adc
add
call
mov
jmp
dec
loopne
ret
add
mov
shl
sbb
mov
xor
xor
or
mov
mov
or
cmpl
jle
adcl
or
jmp
pushl
call
jmp
jne
scas
leave
scas
dec
adc
xor
sub
adc
cli
adc
mov
and
adc
push
shll
or
mov
aaa
mov
decl
mov
and
pop
outsb
xlat
xor
dec
mov
and
xchg
addr16
test
cmpsl
jecxz
insb
lcall
into
into
push
dec
push
inc
es
pop
test
sbb
sub
lcallw
jnp
or
add
sbb
or
push
adc
mov
fwait
jb
pop
lahf
inc
lea
dec
jg
test
pop
scas
mov
test
shll
mov
pop
rcrl
adc
cli
mov
xor
sti
xchg
in
and
dec
loope
test
pop
scas
mov
xchg
adc
pushf
xor
pop
push
outsl
push
adcb
dec
hlt
jmp
out
pop
adc
inc
lds
xor
or
adc
pop
add
scas
out
xor
pop
xor
jnp
in
push
xor
fildl
jl
daa
pop
xchg
rcrl
imul
mov
test
test
push
jp
in
mov
xchg
out
cltd
mov
mov
aad
fstl
inc
sbb
mov
rclb
aam
int3
nop
jg
adc
mov
sbb
fsts
iret
inc
mov
cmp
int
mov
inc
mov
jl
lea
clc
addr16
mov
icebp
xchg
cmc
popa
pop
and
pop
and
or
cmpsl
in
loop
jns
les
lret
and
out
mov
jg
xchg
fld
scas
ljmp
insl
nop
sub
and
push
dec
jge
es
sti
nop
repz
call
dec
sahf
int
jns
sbb
xchg
repnz
daa
inc
das
and
hlt
sbb
jg
push
lea
xchg
xchg
push
clc
and
push
scas
sub
ret
sbbl
loope
mov
jp
xor
scas
subb
pop
xor
mov
mov
mov
lea
mov
imul
cmpsl
inc
movsb
pop
pop
lret
cmp
sarb
decb
pop
lcall
daa
xchg
mov
jbe
fsub
jbe
jg
push
lcall
in
xchg
mov
sub
xchg
fstps
add
push
jge
push
adc
daa
inc
mov
mov
push
cld
mov
lods
ja
imul
mov
sub
push
adc
cmp
and
push
jno
aad
imulb
adc
pusha
xorl
sub
popf
mov
dec
pusha
lret
inc
test
xor
and
xchg
dec
jge
jecxz
hlt
jbe
inc
inc
mov
pop
add
cs
inc
cmp
mov
push
xor
push
xchg
or
popa
repnz
cmpsl
jg
mov
repnz
outsl
xchg
xor
cs
push
enter
xchg
test
cs
aas
int
std
pop
xor
fistpll
lock
loopne
pop
insb
hlt
sarl
ficomps
or
and
loop
cs
ret
dec
stos
or
push
inc
faddp
scas
and
mov
add
jecxz
xor
push
and
cmp
test
jb
mov
sub
mull
cmp
or
pop
aaa
sub
mov
jg
in
rcl
addr16
sub
test
sub
dec
xchg
push
movsb
sbb
cli
mov
decl
inc
adc
pop
stos
imul
xor
pushl
sub
adc
ss
jno
push
pop
pop
inc
mov
add
adc
sbbb
jne
fs
pop
rcl
rorl
mov
mov
pop
cmc
mov
sahf
scas
arpl
or
xchg
es
push
xor
ss
jo
clc
icebp
jno
sahf
push
jo
mov
fistpll
cmp
mov
das
add
jae
xchg
push
int3
fistl
arpl
aad
movsb
insl
ficomps
sarl
sti
sahf
push
cmp
es
mov
mov
shrd
shr
mov
adcl
mov
andl
xor
shl
sub
xor
or
lea
and
mov
xorl
mov
xor
mov
shrd
shr
and
mov
sbb
mov
andl
xor
andl
shl
mov
decl
jmp
pop
lcall
ret
test
sub
adc
cli
adc
pop
pop
int3
xor
inc
cmp
stos
adc
cmp
cltd
adc
in
stos
inc
jnp
mov
fstps
jo
pusha
into
jb
loopne
dec
adc
adc
pop
ljmp
mov
sbb
cltd
pop
dec
stc
je
shlb
loope
lret
ds
call
sti
or
mov
xchg
loop
sbb
ljmp
xlat
int3
or
sbb
daa
or
sbb
pop
frstor
push
inc
push
jnp
push
or
jecxz
lea
cmp
lods
call
jbe
lret
fucomip
and
mov
bound
pop
or
arpl
push
lret
lock
lods
test
add
out
xchg
pop
pop
mov
jb
movsl
mov
jle
push
cmp
and
xchg
out
cltd
cli
cmpsl
adc
sbb
test
and
cmp
fmuls
jecxz
imull
lahf
popa
push
dec
lods
xor
ds
movsl
lret
jecxz
cmc
push
dec
xor
stos
xchg
cwtl
fsubp
test
mov
xchg
inc
ret
jne
aaa
push
data16
pop
pop
and
scas
jns
inc
jne
mov
repnz
scas
or
mov
mov
sbb
enter
mov
lock
bound
fsubs
push
cmpsl
insl
push
jo
sub
iret
clc
shlb
pop
pop
mov
imul
divl
scas
sub
xchg
loope
gs
and
cld
fnstcw
jge
dec
movsl
pop
inc
out
or
mov
cmc
daa
pop
xchg
mov
pop
push
xchg
sbb
xchg
cmpsb
loopne
and
jmp
fnstcw
outsl
pusha
aad
fidivs
cmp
adc
or
xchg
cs
pushf
ret
es
in
and
mov
sub
stos
mov
push
push
std
enter
scas
fsubr
aas
sbb
mov
rcrl
push
aas
imul
push
sub
adc
jns
pop
jge
inc
sbb
cmp
mov
cmpsl
jge
xchg
fwait
sub
adc
sbb
xchg
xor
xlat
xor
dec
fcomi
jmp
inc
aam
lret
in
or
sarl
jne
jb
add
mov
adc
ret
or
mov
add
mov
push
pop
jp
insb
pop
mov
notl
xchg
das
mov
push
cmpsl
inc
ja
xor
stos
mov
and
xchg
in
jge
movsb
xor
sub
fs
rorl
sbb
adc
inc
fsubrs
ja
hlt
cwtl
popl
mov
loopne
aad
mov
mov
sbb
stc
mov
rcrb
fsubrl
shl
fstpt
cmp
lcall
mov
pop
sbbb
in
cmpsb
and
movsw
xchg
xlat
lods
and
dec
lret
jg
jnp
insl
inc
or
push
mulb
jg
jl
inc
fmul
mov
movsb
cmp
push
push
inc
sbb
push
inc
sub
rorl
adc
lods
ljmp
roll
mov
mov
scas
bound
jnp
jae
pop
adc
arpl
or
or
sub
addr16
out
adc
loope
in
sub
dec
rorb
xchg
incl
sbb
orl
cli
mov
mov
jnp
out
push
sub
das
decl
push
add
add
out
cld
and
repnz
dec
jg
mov
gs
cmc
mov
lods
inc
fsts
lea
out
fisttps
push
pop
insb
out
mov
pop
mov
fstp
lock
inc
imul
stos
mov
push
mov
dec
test
cwtl
push
jge
adc
incb
jp
add
ret
or
int
mov
mov
jae
dec
xor
mov
and
bound
jne
popa
gs
cltd
push
push
popf
dec
mov
mov
aaa
shr
or
bound
lcall
rolb
add
ret
or
cmpl
ja
jmp
pushl
push
push
push
call
mov
add
mov
mov
shrd
shr
mov
mov
xor
movl
xor
andl
or
dec
lea
mov
mov
shl
cmpl
jg
sub
orl
jmp
push
push
call
mov
shrd
shr
mov
mov
andl
xor
xor
xorl
or
cmpl
jg
dec
jmp
push
push
pushl
call
mov
shl
mov
mov
mov
or
cmpl
ja
and
jmp
push
pushl
push
push
pushl
call
jmp
add
mov
adc
xchg
adc
fcomps
jnp
adc
lds
adc
aaa
cli
adc
mov
jns
jmp
push
and
push
sub
push
in
mov
cmp
jae
cmp
mov
jp
aaa
shr
dec
je
inc
inc
lcall
fcmovnb
je
repnz
fnstenv
test
xchg
lds
decb
fistl
xor
mov
js
push
test
aaa
sub
flds
sub
sti
and
xchg
mov
ret
mov
repnz
ljmp
cld
inc
stos
lods
jmp
add
scas
xlat
push
xchg
aas
adc
test
jne
roll
repnz
test
jnp
inc
sub
push
mov
jg
mov
inc
mov
icebp
stos
jmp
and
add
and
icebp
dec
or
ror
pop
mov
fistps
test
loopne
ret
pop
jae
or
hlt
test
xchg
jne
mov
lock
ds
pop
fsubr
fstpt
imul
test
jne
pop
out
mov
xor
test
cmpsb
iret
lret
int
pop
xchg
push
call
repnz
add
xchg
aam
stc
xlat
push
les
lods
cmp
pop
inc
sub
into
mov
add
or
shrb
iret
add
vpmadcswd
rcr
dec
jbe
pop
int3
fcoms
cld
jo
xchg
es
jp
mov
push
mov
ss
ret
stos
addr16
xchg
adcl
imulb
sbb
rolb
sbb
test
lcall
movsb
sbb
enter
dec
inc
cmp
call
mov
rorl
push
mov
mov
scas
xor
addr16
jl
lret
push
sub
sbb
push
outsl
jne
rclb
andl
push
mov
inc
dec
js
xchg
mov
push
xchg
in
inc
pop
mov
cmpsl
xchg
test
push
jp
shl
pop
enter
push
lea
push
mov
dec
je
cmp
dec
daa
insb
pop
dec
loope
jge
mov
add
dec
mov
mov
das
pop
inc
mov
fstpt
lods
stos
xchg
xchg
mov
push
push
enter
out
xchg
scas
and
pop
pop
das
cmpsb
pop
push
xchg
rol
int3
pop
jle
in
pop
nop
xchg
enter
ss
xchg
data16
or
jae
jo
mov
decl
mov
add
and
or
or
in
inc
inc
adc
push
sub
int
loopne
inc
adc
addr16
mov
lods
add
jmp
push
push
cmp
adc
jbe
mov
dec
out
jp
dec
push
fsubl
scas
cmp
inc
lret
xchg
dec
js
loop
xchg
ja
dec
inc
inc
adc
mov
xchg
sub
push
or
push
sub
or
or
adc
scas
mov
dec
pop
add
fsubr
dec
or
pop
xchg
jae
dec
mov
shll
xor
xor
addl
insl
adc
popa
inc
dec
pop
ljmp
leave
out
xlat
mov
pop
fwait
or
aaa
add
adc
dec
jecxz
imul
push
push
xchg
inc
mov
push
sbb
xchg
mov
cmp
push
fcmovu
mov
cmp
and
outsb
lcall
adc
lds
mov
aad
pop
jp
pop
test
jbe
dec
cmp
in
mov
push
lahf
mov
mov
mov
mov
cld
mov
xchg
or
movl
and
pusha
mul
lret
xor
mov
push
clc
inc
call
mov
sbb
cmc
xchg
sahf
jle
inc
lcall
lock
mov
push
fstl
out
inc
adc
add
loopne
shr
mov
subl
mov
xor
xorl
mov
adcl
xor
or
mov
movl
dec
sbbl
not
addl
and
cmpl
ja
add
jmp
pushl
call
xor
mov
mov
xor
or
mov
adcl
jmp
fldln2
aam
aam
enter
imul
dec
xchg
fwait
pop
adc
aaa
cli
adc
push
cmc
pop
out
pop
push
into
int3
push
gs
push
push
push
fisttps
insb
rcl
mov
pusha
seto
fs
inc
push
inc
aad
loopne
inc
test
call
mov
into
or
faddl
xchg
add
ret
inc
sbb
movsl
sub
jecxz
adc
mov
enter
jne
call
inc
inc
mov
mov
popl
fwait
inc
xchg
mov
xor
addr16
popf
mov
lahf
xlat
jmp
pop
les
mov
push
mov
fs
insl
outsl
call
sahf
stos
cwtl
ret
mov
and
sub
push
and
cmp
dec
cmpsb
rolb
sub
inc
lret
sub
or
pop
push
mov
push
nop
jecxz
shlb
mov
fucomp
outsl
push
hlt
incl
jmp
jp
loopne
stos
or
cli
mov
test
cmp
push
mov
adc
ret
adc
or
push
adc
adc
xlat
push
sub
xchg
inc
push
mov
push
xor
jne
cld
out
nop
sbb
push
les
sahf
mov
xchg
push
add
ficompl
inc
movsb
int3
loop
popf
cmc
cmc
mov
pop
sub
cmp
jne
mov
cmp
mov
ds
hlt
ljmp
popf
cmp
cmp
xor
ret
sub
adc
sbb
lds
cmpsb
inc
in
cmp
loope
xrelease
repnz
and
pop
leave
jo
ficoml
les
cmp
mov
fildl
fimull
insb
mov
mov
cmp
push
dec
je
sub
and
mov
inc
in
fildll
mov
pop
ja
cltd
push
jg
xor
and
into
iret
inc
dec
mov
pop
inc
xor
mov
dec
pusha
repnz
inc
sbb
cwtl
imul
add
loope
loopne
mov
in
mov
ret
or
pop
push
cmp
jo
dec
xchg
or
cmp
lret
dec
xchg
mov
mov
add
lds
mov
cmpsb
lret
cmpb
mov
pop
mov
out
pop
xchg
ja
rol
mov
insl
jge
fcompl
xor
jne
xchg
nop
fxch
jle
add
inc
stos
adc
test
inc
scas
rorb
sub
sbb
les
fnstcw
xor
cmpsl
lock
mov
cmp
fstpl
inc
repz
repz
aaa
adc
xchg
inc
sbb
xchg
xchg
push
and
cmpsb
stos
pop
popa
and
jecxz
mov
int3
and
sub
lock
loopne
out
add
adc
dec
jle
es
pusha
xor
sub
xchg
or
fsubl
xchg
popa
subb
mov
test
push
inc
lret
and
in
xchg
dec
sbb
ljmp
xor
dec
or
xchg
imul
subl
cmp
sbb
sahf
dec
mov
lret
andl
jecxz
push
out
ss
sbb
mov
mov
fsubrl
or
jb
xchg
ret
add
les
xor
jl
jle
sub
es
rcr
or
sbb
and
lret
xchg
scas
pop
pop
mov
xchg
mov
pushf
mov
jp
inc
cwtl
cmp
lods
mov
and
js
push
push
xchg
dec
jl
stos
lret
das
lods
sarl
adc
daa
xchg
jnp
mov
and
jmp
mov
lcall
and
adc
fisubrs
sti
cmp
xchg
xor
or
subb
pop
jecxz
mov
dec
adc
outsb
dec
es
push
mov
mov
jnp
mov
lret
or
adc
repz
jbe
mov
stos
int
push
movsb
div
bound
jmp
add
sbb
mov
pop
push
xor
push
ficomps
adc
aaa
cli
adc
pop
jno
and
and
cmp
rorl
imul
aad
lahf
into
cld
fsubs
bound
outsb
pop
mov
es
das
fsubrl
dec
add
mov
sub
clc
test
adc
add
fistpl
cwtl
stos
jp
cmpsl
and
sbb
inc
mov
xorb
inc
mov
cmp
or
inc
adc
mov
jns
addr16
xchg
test
and
and
in
push
ret
xlat
sub
mov
xchg
insb
out
mov
jnp
rcrb
pushf
loope
test
fs
test
mov
dec
sti
add
push
mov
and
pop
lods
call
sub
sbbl
scas
sub
add
cmc
fisubs
inc
pop
sbb
notl
jbe
adc
mov
push
push
mov
and
push
shr
mov
mov
loopne
xchg
cltd
icebp
dec
jle
mov
lods
fsubs
cmp
lock
and
outsb
in
lods
repz
fstps
jns
test
bound
or
in
mov
test
and
and
mov
mov
ret
push
mov
or
pop
fwait
packssdw
mov
je
push
mov
repnz
repnz
dec
movsb
xchg
dec
popf
xor
xor
icebp
or
sarl
stos
insl
sbb
sub
jg
cs
clc
test
jne
xchg
js
fmuls
aaa
ret
ret
scas
cli
repnz
adc
jne
addr16
aas
cmpsl
sbb
mov
and
mov
mov
addr16
hlt
into
sbb
stc
xor
mov
mov
lea
jecxz
pop
sbb
leave
test
stc
leave
sub
cmp
cld
mov
dec
sarb
scas
jecxz
fists
test
sbb
lcall
dec
or
out
push
mov
stos
cmp
test
nop
sbb
xchg
cltd
ja
cltd
imul
outsl
test
nop
sub
push
push
adc
dec
push
cmc
sbb
rol
jae
adc
sub
vmovntps
dec
adc
aad
pop
and
lock
cmp
stos
int3
xor
imul
push
xor
sbb
out
stos
sbb
call
push
xor
dec
and
mov
cmp
test
dec
sbb
paddusb
cmp
out
push
push
movd
xchg
mov
mov
sbb
lods
add
test
aaa
sub
add
xchg
xor
fwait
repnz
sub
mov
in
js
and
or
jb
mov
cmp
mov
stos
pusha
lret
push
shll
jo
test
adc
jb
adc
push
dec
xchg
dec
movsb
inc
js
jo
sub
push
cs
aam
dec
and
mov
dec
adc
int3
les
in
ljmp
and
push
data16
subb
sub
es
shll
jnp
test
xchg
lahf
lds
pop
or
sbb
lret
dec
decl
mov
add
ret
pop
cmpsb
push
push
je
imul
push
push
and
iret
lahf
push
and
mov
jbe
cmpsb
imul
jbe
addr16
pop
enter
add
mov
sub
mov
inc
lds
xchg
jb
fisubrl
sbbb
cli
xor
std
mov
int
ja
insb
sub
inc
jne
cmpb
movsl
out
lock
mov
inc
cmpsl
pop
loope
mov
loopne
push
lea
ljmp
test
mov
push
dec
or
mov
adc
mov
inc
imul
dec
rcl
scas
andl
hlt
cmp
xchg
mov
mov
shrl
xchg
sub
sbb
push
and
enter
add
shlb
enter
add
mov
mov
xor
addl
mov
sbbl
xor
addl
shl
mov
or
mov
cmp
je
mov
sub
mov
sbb
sub
sbbl
mov
cmpl
jl
add
jmp
pushl
pushl
push
call
mov
xor
xor
shrd
shr
mov
mov
andl
mov
cmpl
jge
jmp
push
pushl
pushl
call
mov
xor
or
mov
mov
mov
jmp
and
and
mov
pop
adc
aaa
cli
adc
mov
cmpsb
adc
int
or
mov
rcrb
sub
sub
loope
push
xchg
xchg
push
dec
jle
mov
mov
daa
pop
cmp
cmp
mov
fs
xor
inc
in
inc
sti
dec
stos
lock
mov
push
adc
push
mov
out
or
xor
cmp
xlat
inc
filds
mov
adc
add
hlt
movsl
mov
and
sbb
inc
bnd
inc
es
mov
inc
adc
sub
push
out
mov
xor
in
jnp
pop
mov
lret
clc
into
es
push
addr16
cli
fs
mov
mov
outsb
cmc
les
arpl
bnd
test
aaa
out
fcoml
fcoms
in
pushf
mov
pop
in
dec
push
sub
jmp
xorb
or
mov
jae
flds
cmp
std
stos
repnz
fdivrl
xor
jge
jae
loopne
and
je
dec
inc
in
lods
leave
out
fldl
or
jb,pt
jns
fs
stos
lea
adc
das
push
push
flds
mov
aam
pop
popf
mov
cltd
push
jmp
aas
push
pop
leave
inc
cmpb
loope
sub
out
push
aaa
sahf
pop
pop
imul
fldenv
xlat
push
stos
lock
sbb
fistpll
out
sbb
inc
imul
stos
rcrl
xchg
subb
xchg
andl
cwtl
pop
es
stos
out
sub
jmp
pop
push
jl
jmp
gs
sti
imul
xor
jl
shl
pop
and
mov
mov
sarb
xchg
std
into
or
insb
cld
adc
add
fsubrs
inc
fs
fidivrs
push
lock
or
sahf
and
loop
xchg
push
cmp
adc
idivl
int3
imul
int
sub
cmp
je
in
xchg
xor
cmp
popf
mov
popa
xchg
sub
dec
call
aaa
mov
test
dec
jns
mov
xlat
loop,pt
sahf
loope
lea
in
es
test
aad
aaa
das
and
add
xchg
lock
inc
add
adc
push
dec
fdivr
stc
into
fs
push
cltd
les
inc
inc
and
mov
test
xchg
xchg
stos
mov
inc
in
xchg
mov
mov
pusha
sub
ljmp
sbb
dec
sbb
mov
jbe
addr16
pusha
jle
mov
xchg
popa
jae
push
add
xor
jg
mov
cmpsl
out
cmp
cltd
jne
push
mov
loope
pop
pop
sub
push
mov
or
sbb
mov
cmp
imul
fcmovbe
adc
fsub
dec
add
cmp
shr
insl
cwtl
jmp
cmp
xor
and
bound
icebp
fcoms
aas
fcoms
cmpsl
or
iret
fisubs
icebp
cmc
lods
sbb
cmpsb
stos
popa
lea
in
and
mov
fcomi
or
mov
inc
adc
int3
jb
cli
mov
xchg
pop
mov
add
pushf
or
sbb
pop
outsl
inc
pop
push
movsl
add
inc
movl
mov
in
andl
lds
popf
call
adc
or
push
dec
jl
fucom
rorb
pushf
stc
mov
in
add
push
in
adc
icebp
orl
jmp
mov
dec
loope
rcr
mov
mov
pop
dec
push
enter
fisubrs
jb
aaa
mov
add
pop
stos
mov
push
andb
cmpsl
pop
out
dec
lcall
mov
subb
jae
cs
in
fs
sub
aas
xchg
repnz
repnz
cmp
adc
aas
ljmp
xor
xor
mov
mov
inc
mov
shrd
addl
shl
andl
or
subl
mov
mov
xorl
mov
xorl
shll
andl
mov
cmpl
jb
add
jmp
pushl
push
push
call
mov
mov
xor
or
shr
or
movl
jmp
jb
aad
xchg
adc
sub
jg
je
daa
popl
adc
aaa
cli
adc
push
dec
push
test
shll
out
sbb
lahf
cmp
out
inc
repnz
cmpsb
adc
pop
push
sbb
cli
imul
sahf
push
sahf
pop
jae
aas
and
lods
pop
add
sbb
data16
mov
xchg
arpl
mov
shl
dec
mov
insb
and
push
inc
addr16
ret
mov
outsl
aad
loop
mov
adc
test
movsl
scas
xchg
test
js
mov
lahf
xlat
mov
push
push
iret
cmp
fst
cmp
push
aam
scas
mov
call
mov
mov
inc
adc
sbb
mov
outsl
sub
xlat
imul
js
movsl
pop
add
inc
fiadds
shrl
xor
mov
pop
add
add
and
or
fisubrl
dec
arpl
mov
cld
adc
jle
out
insb
add
xlat
or
jecxz
cmp
dec
pop
sub
in
lds
nop
sbb
and
mov
inc
xchg
mov
sub
sbb
mov
int
jmp
stos
sti
pop
mov
push
lret
inc
clc
clc
dec
xchg
or
insb
test
mov
fadds
nop
inc
test
ss
fcmovbe
and
and
adc
adc
adc
inc
adc
scas
movsl
scas
loopne
jb
fildll
sub
es
ds
sarl
or
enter
lea
cmpsb
data16
loopne
fwait
mov
shll
ret
enter
mov
mov
mov
dec
ret
xchg
push
js
fildl
mov
mov
adc
fwait
notb
pop
mov
adcb
in
adc
lds
lret
dec
cld
leave
lret
xorb
jns
bound
mov
mov
push
in
int
in
mov
jae
mov
ss
jne
je
enter
or
xor
lcall
das
adc
mov
adc
fcomps
add
ret
cmc
adc
xchg
xchg
fsts
jg
sub
shr
push
xor
imul
out
jl
jnp
dec
inc
clc
inc
add
loopne
leave
push
daa
into
imul
push
mov
fldenv
mov
iret
sub
loope
cld
sub
xchg
das
loope
jmp
cmc
push
cmp
ja
or
mov
push
dec
leave
dec
test
or
mov
xchg
stos
sub
pusha
or
mov
mov
push
mov
mov
pop
pushf
mov
and
mov
pop
aas
sbbb
fsubp
idivb
cmc
sbb
outsb
mov
mov
xchg
mov
inc
cmp
adcl
daa
in
pop
loop
mov
inc
out
fwait
push
ja
pop
aas
jno
mov
pop
jg
test
out
rorl
jbe
xor
aaa
scas
xor
or
mov
sub
xor
call
das
adc
mov
xor
sti
fildl
or
call
and
inc
mov
mov
stos
jb
sub
jg
mov
sub
in
jo
rclb
pop
xorl
push
sbb
es
mov
or
mov
fists
mov
outsb
mov
cmp
loopne
mov
subl
mov
cmpsb
insl
xor
andb
or
sti
dec
xchg
push
mov
xlat
pushf
push
xor
xorl
andb
mov
jb
dec
shrl
outsb
ss
das
xor
jnp
into
inc
imul
ss
push
mov
sarb
mov
mov
in
and
sbb
test
mov
xorl
mov
mov
mov
test
cmp
je
jmp
mov
mov
xor
xor
shrd
shr
mov
mov
mov
mov
xor
or
shl
or
jmp
gs
sub
dec
test
jns
test
cli
adc
popf
cltd
lods
and
push
add
xor
jne
insb
test
push
adc
sub
mov
enter
adc
xor
cmp
xchg
adc
or
cmp
lret
mov
cmp
jge
jmp
cmp
or
stc
sbb
outsl
xor
repnz
insb
push
lret
cltd
pop
jge
xor
xchg
rcrl
mov
test
addr16
sub
mov
aas
call
lods
das
inc
ret
test
sub
xchg
movsb
cmp
xor
int3
mov
inc
xchg
int
or
dec
test
cmp
das
cmpl
mov
lods
and
cmp
jne
sub
mov
daa
pushf
mov
lods
push
jmp
mov
fcmovu
sub
and
push
test
outsl
add
dec
test
stos
mov
mov
add
mov
push
nop
fwait
cmp
lea
fisttps
out
inc
cmpb
daa
fbld
pop
sbb
ret
or
repz
mov
or
add
add
push
jno
mov
lds
and
cmpsb
pop
fwait
cmpsl
cmp
call
pop
out
enter
cmp
and
inc
cltd
mov
adc
sub
mov
mov
or
cmp
sbb
jb
in
fildll
in
mov
mov
add
mov
loope
push
in
insb
inc
stos
jle
mov
lods
mov
leave
mov
ret
in
loop
shll
fucomp
jns
and
push
lcall
sub
jo
xor
pop
dec
sub
push
test
leave
out
pop
pop
jle
lods
push
pop
outsb
jo
sbb
mov
ret
sub
sti
dec
sbb
fwait
je
scas
in
repz
mov
xor
sub
jp
sbb
mov
lret
mov
or
xlat
cltd
outsb
outsb
mov
fdivrp
imul
movsl
cmp
fxch
movsb
mov
add
mov
pop
pop
xor
in
stos
out
jmp
enter
ss
push
cltd
pushl
arpl
push
xchg
xchg
mov
mov
outsl
sub
push
jl
xor
jnp
cwtl
sbb
pop
and
sbb
and
sbbl
xchg
ljmp
dec
das
jbe
ret
or
insb
fisubl
mov
push
insl
cmpsl
sub
xorl
adc
js
mov
add
xchg
out
mov
inc
out
mov
test
dec
jmp
push
mov
adc
mov
and
test
push
mov
movsl
popf
pop
ljmp
popf
xchg
mov
mul
pop
loop
movsb
int3
aam
add
cmpsb
sub
icebp
or
movsb
fnstenv
or
cmp
cmp
inc
push
lods
inc
hlt
loop
scas
popf
lods
rcll
call
or
int3
loopne
mov
push
mov
in
mov
adc
mov
lock
jne
xchg
rclb
pop
xlat
mov
pop
xor
shl
scas
fnstsw
inc
push
dec
popf
fs
push
jb
cmc
std
or
lcall
loope
inc
in
push
iret
push
inc
icebp
gs
or
loope
outsb
push
fistl
outsb
mov
aad
xchg
lcall
xchg
or
bswap
jg
cli
je
adc
enter
gs
idivb
push
xchg
aad
pop
popa
push
mov
inc
daa
stc
popa
xchg
xchg
xchg
sub
es
add
add
mull
xlat
jnp
mov
mov
or
flds
mov
pop
or
xchg
js
pop
mov
imul
ret
insb
inc
sub
jbe
in
sbb
adc
pusha
sub
shlb
rorb
fsubrp
mov
ret
xchg
fdivrs
mov
mov
xor
mov
mov
mov
mov
xor
mov
mov
shrd
shr
mov
mov
mov
jmp
xchg
push
je
xor
mov
repnz
and
adc
aaa
cli
adc
in
out
outsl
test
sbb
je
xor
sbb
jge
xor
adc
mov
mov
sahf
add
cmpl
adc
aaa
xchg
lods
into
call
jbe
cltd
sub
insb
push
insb
cld
cmp
ljmp
push
enter
ss
cmp
jg
mov
cmp
add
dec
pop
mov
adc
fcomip
lret
test
push
int3
call
fisubrs
pop
call
adc
add
push
or
xchg
cmp
ja
stos
imul
xchg
mov
mov
lea
pop
pushl
mov
out
scas
jbe
dec
mov
pop
lea
sbb
pushf
and
mov
jle
adc
scas
fistpl
cli
xlat
ficoml
in
movb
ja
repz
cmp
push
stos
or
fsubrl
mov
lock
push
and
in
js
popf
ficompl
or
or
orl
inc
and
jge
push
dec
repz
adc
pop
je
push
es
cs
pop
sbb
adc
pop
stos
jmp
pop
hlt
ss
shlb
cmp
jecxz
xchg
mov
push
sar
add
das
xchg
cmp
sbb
fs
ljmp
add
mov
ljmp
scas
sbb
pop
arpl
mov
lcall
mov
loopne
sub
arpl
push
sbb
mov
imulb
mov
dec
pusha
push
and
je
or
adc
cmc
ja
xchg
hlt
pusha
rorb
jle
dec
dec
stos
or
insl
jnp
push
mov
sbb
inc
out
test
cmpsl
inc
xor
xor
jb
jns
dec
rcl
inc
insl
inc
inc
in
stos
faddl
movsl
mov
das
sbb
shrb
jnp
add
xchg
mov
pop
cld
loope
repnz
xor
mov
jg
add
cmp
fsubl
repnz
icebp
jo
push
aad
dec
dec
dec
inc
mov
outsl
pushl
daa
pop
int3
test
xchg
dec
push
aad
out
leave
stos
lret
loopne
jl
lret
push
lock
or
cmp
pop
push
pop
sbb
xchg
sbb
arpl
arpl
lock
pop
jmp
push
fwait
adc
or
push
hlt
leave
imul
xchg
clc
mov
push
in
std
inc
addr16
cmp
sbbb
push
lds
push
xor
adc
jne
inc
shl
add
inc
rorl
clc
lahf
cmc
xor
rorl
out
orl
int3
sub
out
jno
cmp
pop
bound
aaa
xor
inc
lods
jb
gs
daa
notb
mov
nop
std
mov
mov
cmc
lret
push
xchg
jns
cmp
mov
xor
dec
jge
lret
mov
aad
mov
adc
xor
stc
mov
pop
and
or
imul
sub
jmp
jo
jno
xchg
outsb
popa
adc
fidivl
repz
imulb
add
cmp
jle
jns
cmpsl
test
les
in
fwait
daa
push
int
dec
lret
mov
fists
xor
bound
je
into
and
popf
aad
jns
imul
mov
or
push
shl
ret
pop
pop
adc
mov
loop
iret
rcll
xchg
adc
jp
sub
push
sahf
jo
xchg
pop
pushf
sbb
loop
dec
push
jb
xor
adc
mov
repnz
mov
je
add
repz
ror
ss
orl
ljmp
fwait
rcll
push
out
lods
imul
push
adc
inc
adc
push
add
xor
aaa
pop
dec
sahf
mov
xchg
out
ja
ret
mov
mov
mov
adc
movsb
lcall
mov
daa
gs
shll
xor
mov
or
mov
mov
mov
or
mov
mov
cmp
jne
mov
cmp
je
mov
mov
mov
mov
jmp
and
mov
nop
push
fs
push
adc
adc
aaa
cli
adc
fwait
mov
and
jae
dec
push
dec
js
shl
jbe
jae
nop
arpl
mov
pop
xchg
fidivs
push
push
std
and
inc
jge
stos
inc
sub
in
sbb
int3
mov
dec
enter
ljmp
xor
jno
fmull
ja
leave
mov
leave
inc
xchg
jl
loope
cli
inc
fsubp
mov
jp
mov
inc
rorl
idivl
outsb
cmp
xorl
pop
jecxz
pop
pusha
and
out
inc
push
movsl
add
inc
dec
repz
sub
out
dec
inc
lret
xchg
xor
cli
jo
mov
xchg
lods
stos
pop
sbb
push
push
mov
mov
mov
lds
or
jge
lock
dec
pop
nop
enter
mov
loope
push
adc
pop
call
lods
add
dec
pop
push
mov
jge
loop
add
out
je
cmpl
pushf
mov
stos
mov
ljmp
cwtl
dec
rorl
test
mov
je
dec
movsl
jb
and
mov
rorl
jg
repz
inc
xlat
fwait
and
pop
mov
mov
mov
lds
cmp
jnp
inc
jle
sub
ret
or
lcall
shlb
jns
pop
dec
ret
iret
call
into
sbb
add
and
inc
outsb
adc
push
stc
stos
test
cmp
hlt
imul
or
mov
adc
rcrb
sbb
jge
jnp
push
inc
xchg
mov
gs
das
cmpsl
shl
cmc
std
adc
fistpll
fidivs
in
xor
and
andb
cltd
adc
loopne
add
xchg
push
imul
mov
sub
int
push
lea
adc
jae
insb
add
xor
call
std
adc
push
fs
rcrb
mov
inc
push
sub
jge
pop
push
clc
adc
aad
pop
cmp
xor
dec
test
orb
mov
jo
insb
cmpsb
cmpsb
popf
xor
fidivrl
jnp
add
sub
rcr
sbb
jp
jp
xor
jl
scas
pop
lcall
inc
xor
pop
mov
cmp
mov
call
jg
xorl
add
or
xor
out
jmp
mov
ds
insl
xchg
ror
or
pop
scas
bound
movntps
pop
pop
insb
push
mov
push
pop
sbb
fcmovnbe
jp
test
inc
sub
or
cmp
pop
sar
cltd
mov
sti
xor
and
sahf
arpl
test
cmpsb
inc
mov
lret
mov
and
add
dec
add
add
pushf
decb
adc
out
dec
jle
sti
repz
repnz
aad
dec
iret
dec
imul
adc
push
sub
aam
cwtl
push
xchg
into
pop
test
cmp
adc
aad
out
sbb
cld
cmpsb
push
loopne
xchg
jg
or
dec
iret
sub
push
orb
mov
popf
ret
add
sti
and
leave
scas
fdiv
mov
in
push
xchg
int3
ret
adc
iret
xor
and
sub
mov
jle
dec
push
addr16
scas
fsubr
mull
shlb
pop
dec
js
out
in
jg
xchg
ss
adc
cmpsb
cmpsb
xchg
aad
scas
mov
sbb
xor
cmpsl
adc
push
add
xchg
cmp
roll
push
xor
push
sub
sub
das
jne
push
std
leave
fsubs
movsl
adc
outsl
sub
data16
cli
loopne
clc
xor
lock
cmp
ffree
xchg
fwait
ret
fisttps
add
iret
int3
push
xchg
mov
cld
cltd
or
sub
test
lock
negl
push
repz
adc
mov
mov
mov
mov
mov
shrd
mov
jmp
push
push
push
adc
aam
push
arpl
adc
aaa
cli
adc
adc
mov
sbb
in
push
out
jle
lret
fdivs
pop
jle
inc
ss
or
mov
xor
sub
lcall
jmp
test
lret
dec
out
outsb
mov
jge
in
outsb
xchg
xorb
adc
fisttpl
aas
rol
xchg
icebp
mov
jo
std
repz
lock
in
stos
mov
mov
or
mov
mov
lock
lea
stos
ret
jo
mov
jle
dec
adc
and
inc
cli
and
jg
pop
arpl
iret
test
or
imul
xor
scas
xor
fstpl
cmp
xor
gs
sub
int
lahf
into
sbb
add
lret
push
pop
xchg
out
push
mov
movsl
int
shll
xchg
add
ds
and
xchg
pop
out
pushf
pushf
sbb
lret
icebp
pop
dec
mov
in
sti
jae
sub
xor
jg
mov
push
sub
dec
xchg
lds
aaa
loopne
ss
adc
push
dec
push
and
push
mov
das
adcl
shl
leave
adc
faddl
es
ror
jecxz
in
mov
jl
sub
pushf
inc
or
mov
mov
inc
pop
aam
cmpsl
push
fiadds
movsl
test
pop
fimull
test
xor
cmp
flds
and
das
or
cmpsl
insl
add
sbb
ja
sub
std
inc
add
pop
iret
icebp
mov
in
fldenv
inc
adc
cmpb
xchg
dec
shlb
daa
sbb
cmpsl
inc
mov
imul
mov
leave
and
loopne
push
ret
push
dec
jnp
loop
xchg
gs
mov
push
dec
mov
and
in
ret
inc
shlb
mov
shl
jmp
and
jecxz
insl
or
inc
scas
add
test
call
xor
int3
sub
insl
daa
outsl
xor
cmp
pop
jge
cs
xchg
int3
sar
cmp
pop
jo
xchg
pop
pop
and
cmp
pop
loope
sbb
mov
ljmp
or
and
clc
mov
aam
add
mov
rcrb
adc
cli
cmc
fmuls
ja
in
ljmp
out
jp
test
dec
jbe
sub
outsl
int
lea
stos
scas
inc
lcall
ret
cmp
divb
push
adc
sub
outsb
fstpl
or
adc
std
xchg
std
lods
lahf
jge
jge
jecxz
mov
adc
sub
fisubrl
xor
out
nop
jb
adc
in
adc
stos
sub
cmc
or
xor
inc
ss
adc
aas
inc
fimuls
cs
xor
jmp
jp
enter
or
add
push
mov
imul
xchg
sbbb
mov
adc
cmc
mov
mov
mov
add
hlt
jo
mov
push
aam
pop
mov
jae
cmp
outsb
xor
push
jae
mov
cmp
psrld
dec
inc
ret
ja
scas
lea
cmp
mov
mov
ret
shlb
xor
scas
in
test
bound
ret
mov
mov
stc
cltd
clc
adc
mov
imul
ffree
mov
popa
sbb
jp
xlat
aam
popf
jmp
mov
and
ljmp
xor
mov
sub
cmpsl
dec
mov
stc
and
mov
xchg
push
movsl
mov
fs
stos
nop
cli
in
fsqrt
sub
call
bound
loop
fbstp
test
or
and
out
mov
or
jmp
xchg
lret
jbe
mov
sysret
xchg
out
popf
stos
imul
mov
xor
shr
mov
xor
shl
or
mov
mov
mov
xor
xor
xor
shld
mov
mov
mov
mov
shl
mov
cmp
jne
mov
cmp
jne
mov
mov
mov
mov
xor
xor
mov
mov
shrd
shr
mov
mov
jmp
lcall
push
repz
mulb
jnp
adc
aaa
cli
adc
or
xor
insb
int3
add
in
sub
xchg
imul
movsl
jmp
xor
inc
mov
loop
sbb
into
dec
cmp
mov
add
call
data16
fnsave
repz
add
inc
jb
icebp
xchg
into
dec
les
mov
xchg
fstps
iret
mov
movl
dec
xchg
out
sbb
push
mov
add
xchg
cmpsb
mov
pop
sub
out
xor
sub
add
cmpsl
mov
stos
or
loopne
test
loop
sbbl
cli
movsl
add
xchg
sub
repz
mov
cli
out
pop
cltd
or
imul
pop
outsb
pop
jmp
roll
shll
ljmp
jecxz
out
leave
pop
mov
sub
dec
xor
push
cltd
sbb
out
sahf
mov
mov
dec
xchg
mov
sbb
es
push
addr16
repz
push
stos
xlat
dec
loop
mov
cmpb
push
jecxz
mov
xchg
pop
shlb
sahf
jl
mov
mov
out
add
dec
jae
push
xchg
adc
pushf
xchg
or
arpl
inc
stos
hlt
pop
dec
push
daa
aam
add
jnp
sub
dec
jns
xlat
mov
or
and
imul
or
add
loopne
mov
cmp
jecxz
or
je
mov
clc
push
pop
mov
insb
sbb
pop
je
lods
lock
add
stos
test
fnstenv
xor
cmp
in
int
roll
mov
xchg
sbb
je
sub
sbb
fnsave
movsl
lret
push
fnstsw
adc
mov
cmp
lock
mov
jg
dec
jae
xchg
sahf
push
push
inc
cmp
jb
jecxz
mov
dec
or
mull
sar
das
lret
mov
push
sbb
mul
in
sbb
xchg
cmp
das
xor
imul
xchg
xchg
inc
aas
xchg
xchg
int
and
loope
jns
or
cmp
jge
push
out
jle
aaa
mov
xor
jne
mov
test
mov
std
sub
or
repnz
push
imul
inc
lds
cmp
repz
lods
or
fstps
mov
pop
cmc
xor
or
sbb
dec
insb
stos
jno
sub
roll
je
jae
aas
xor
push
sbb
pop
testl
das
mov
dec
jmp
jmp
mov
in
loopne
enter
fidivrs
jl
jae
push
inc
fidivs
push
sbb
sbbl
int
add
in
out
dec
fisubrl
dec
lcall
movsb
push
repnz
into
inc
fs
xchg
lock
rcrb
ret
add
imul
imul
mov
in
rcrb
inc
cmp
ss
fnstsw
mov
popf
sub
sbb
adc
push
mov
repz
xor
xor
fisubs
sub
push
pushf
pusha
stos
das
push
add
int3
sbb
insl
aad
sti
std
arpl
inc
int
test
cmp
pop
test
xlat
iret
je
or
push
repz
rolb
rcr
adc
push
les
lods
stos
test
push
aad
mov
jnp
inc
pop
jl
je
popa
stos
ret
cmpsl
test
xor
int3
add
shll
and
push
or
sub
movsb
sbb
lret
inc
adc
rcl
loope
push
lock
bound
subb
cmpsb
pop
cmp
pop
fsubs
add
ret
stos
pop
fwait
mov
imul
daa
dec
push
into
mov
mulb
inc
popf
inc
dec
rcl
pushf
into
sbb
hlt
jg
div
push
mov
lret
adc
into
lock
mov
mov
xor
or
mov
shl
mov
mov
or
mov
push
pushl
push
push
call
mov
mov
jmp
mov
cmpsb
adc
cli
addr16
shl
mov
cli
adc
jl
adc
mov
pop
in
mov
das
pop
pop
and
jb
int3
jmp
das
ficompl
inc
lcall
icebp
mov
fs
mov
xlat
adc
dec
pop
sub
enter
inc
das
xchg
mov
or
jb
mov
or
xorl
sub
mov
andb
push
push
sub
xor
fildll
inc
push
mov
ffreep
test
test
cmp
mov
sbb
stos
dec
ja,pt
jmp
mov
test
dec
cli
lds
cmp
sbb
outsl
inc
loope
cmpsl
lock
loope
ss
dec
nop
outsb
mov
pusha
arpl
xchg
adc
test
insl
and
fs
add
jno
inc
inc
push
test
sahf
xchg
insl
jg
pushf
sub
rolb
jo
stc
jecxz
rclb
jne
push
xor
scas
push
outsb
jno
cmpsl
jb
adc
cmp
cs
adc
and
cmp
jno
cmpsb
in
dec
add
inc
adc
push
or
mov
dec
adc
ret
inc
das
and
pop
pop
xor
pop
imul
xor
mov
mov
mov
movsb
repz
rep
xchg
inc
std
aam
inc
inc
repnz
into
cmpsb
fsubl
test
and
pop
lret
cmpsb
test
jmp
pop
rcrb
mov
arpl
mov
mov
sbb
test
push
push
pop
push
sub
pop
cmc
mov
jbe
inc
sbb
loope
test
repz
test
mov
sarb
insl
out
push
insl
shll
add
mov
and
inc
pop
stos
sahf
rol
loopne
in
out
es
push
and
adcl
sub
pop
xlat
cmpsb
js
and
in
mov
fmull
add
cmp
mov
cwtl
push
cmpsl
test
nop
loope
mov
or
and
scas
adc
jb
mov
bnd
sub
jo
xor
and
test
and
call
ds
jg
insl
xchg
ljmp
or
mov
pop
lods
test
sub
nop
cld
ljmp
sbb
dec
sbb
mov
addr16
in
cmpsb
repnz
rolb
in
sub
mov
aas
push
clc
sti
mov
sub
push
pusha
mov
in
std
pusha
inc
push
dec
stos
push
shll
sbb
push
jns
stos
daa
icebp
xor
nop
les
ds
dec
stc
repz
sub
scas
push
call
xchg
sub
pop
sbb
addr16
out
hlt
ss
sub
ss
cli
add
xchg
xlat
std
ret
mulb
pop
jnp
xor
pop
loope
lret
xchg
cmp
pop
roll
popa
pop
pushf
inc
xchg
loope
mov
cmp
je
jb
int3
lods
cmpsl
movsl
or
sbb
sbb
stos
mov
pop
and
push
ds
mov
inc
pop
mov
nop
addr16
in
aas
mov
int
or
int3
enter
cmpsb
xchg
insl
jno
jmp
dec
push
mov
pushf
stos
fldl
test
imul
xor
out
mov
pop
jo
mov
clc
push
mov
pop
fxch
inc
jl
jg
outsl
gs
dec
push
pop
lret
dec
nop
mov
scas
xor
push
mov
in
test
jmp
aaa
fs
xor
mov
cmpsl
fwait
mov
sti
mov
icebp
dec
inc
cmp
ret
adcl
push
mov
sti
xor
dec
mov
iret
les
in
addr16
mov
mov
pop
xchg
ret
ret
js
gs
cmpsb
clc
bound
rcr
movl
cmp
jb
sbb
cwtl
jno
aam
jl
insb
fmuls
fidivs
cmp
rorb
ret
clc
xchg
addr16
pop
sahf
inc
jecxz
inc
sbb
jp
add
lea
adc
leave
xor
pop
push
add
adc
aaa
cli
adc
out
mov
jnp
inc
jle
xchg
call
xor
ret
cmp
aad
into
stc
jnp
decb
leave
imul
jl
inc
stos
sahf
imul
inc
or
aam
xor
pop
xchg
xchg
jl
pop
cmp
faddl
xchg
jb
xchg
cmp
shr
cmpsl
nop
pop
inc
mov
fildl
mov
pop
mov
scas
sahf
test
pop
mov
fucom
jae
repnz
popf
mov
mov
repnz
sbb
push
jae
scas
pop
mov
mov
roll
pop
xchg
xor
sarl
pushf
xchg
xchg
mov
mov
push
or
fistl
and
in
aaa
nopl
add
ret
popa
mov
jns
mov
in
xchg
or
xor
outsb
sub
pop
add
xor
ja
cli
and
mov
aaa
and
push
mov
jp
inc
ljmp
xchg
mov
xchg
clc
cmp
inc
jne
sub
imul
and
orb
jne
xor
jecxz
mov
rolb
add
sahf
adc
xor
inc
lcall
outsb
lahf
repnz
aad
movsl
in
and
jo
repz
and
jns
outsb
pop
std
push
ficoms
pushf
or
jmp
dec
jecxz
mov
popf
mov
stos
ret
add
dec
mov
push
cmp
cs
shlb
xor
popa
mov
rol
push
int3
adc
iret
or
or
icebp
aad
xor
xchg
les
into
cmpsb
arpl
cwtl
adc
xor
sti
mov
icebp
lret
jbe
pop
xchg
xchg
mov
add
mov
add
sbb
xchg
xchg
mov
mov
ret
mov
stos
fnstenv
lock
out
push
mov
jns
out
arpl
push
sbb
mov
aaa
cmp
inc
test
call
test
or
or
daa
aas
mov
repnz
mov
inc
movsl
std
into
stc
mov
in
mov
imul
insl
push
pop
jmp
sbb
repnz
shlb
adc
ljmp
jnp
mov
sub
inc
fadd
dec
xchg
enter
dec
xchg
push
mov
js
shlb
inc
lock
xchg
popa
sub
fwait
push
mov
mov
dec
fcomps
jl
xor
sbb
repnz
and
stos
xchg
imul
sbb
mov
mov
adc
loop
cld
lods
aad
sbb
sbb
shr
inc
sub
mov
cmpl
mov
ss
jno
in
dec
inc
sub
inc
jge
sbb
dec
les
out
stos
psubq
rcrb
xchg
adc
movsl
jbe
inc
imul
sbbb
xchg
push
push
lret
int3
mov
cs
and
xchg
adc
dec
shr
gs
ret
movsl
inc
xchg
sbb
mov
repnz
subb
bnd
repz
ret
or
fiaddl
sbb
cwtl
cld
iret
inc
jge
andl
or
dec
stos
jo
xchg
pop
pop
or
lock
and
cltd
xor
sbb
or
lods
and
popf
lret
adc
out
xor
cmp
jmp
lcall
enter
daa
jnp
xchg
lret
mov
popa
cltd
iret
fadds
jecxz
imul
mov
cld
les
xor
jecxz
repnz
icebp
sbbl
rcl
in
mov
out
sub
and
inc
mov
in
cli
xchg
fwait
xlat
pop
loop
push
adc
gs
mov
pop
pop
mov
xor
jg
and
andl
or
mulb
adc
adc
aas
jmp
stos
gs
adc
push
push
add
or
cmp
stc
out
popf
shrd
shr
shr
xor
push
xor
mov
mov
mov
jmp
ja
add
inc
push
inc
aaa
mov
daa
mov
adc
cli
adc
or
insb
loopne
iret
inc
rcll
sub
in
mov
sbb
stos
push
mov
popf
je
sub
shll
out
adc
mov
es
or
lcall
sbbb
mov
push
xchg
sahf
jge
hlt
adc
mov
imul
hlt
cmpb
enter
push
in
jns
sub
lds
push
filds
clc
jmp
jp
subb
jb
insb
je
hlt
testb
das
test
xchg
bound
dec
xor
pop
ret
cmp
cmp
jg
imul
rcll
leave
xor
xchg
mull
xorl
lds
fldl
in
push
pushf
outsl
int
and
push
test
cmp
cmp
dec
cli
sbb
adc
xor
iret
lcall
out
jns
and
mov
mov
cwtl
repnz
sti
bound
lods
sbb
clc
mov
or
dec
cli
xor
mov
adc
cmp
add
mov
fildll
ret
or
or
inc
int3
xor
into
cmp
stos
fcoml
xchg
loop
xchg
mov
test
mov
jle
arpl
push
pop
lock
jge
mov
aam
aad
and
cli
mov
popa
push
or
stos
push
icebp
mov
pop
les
adc
scas
push
test
stos
xchg
and
push
jb
cmp
xor
bound
push
orb
ds
mov
sub
shrb
dec
into
icebp
add
sbb
jnp
inc
aaa
mov
ret
push
arpl
dec
push
rcrb
repz
int3
nop
add
xor
push
sub
iret
mov
mov
inc
daa
pop
mov
sbb
popa
scas
sbb
add
es
lea
clc
mov
fwait
idivl
xlat
pop
stos
inc
loope
sbb
outsl
test
cmp
xchg
xchg
mov
loope
or
push
lcall
add
pop
pcmpeqw
iret
shrb
call
xchg
jecxz
call
pop
lcall
or
mov
ljmp
js
das
or
adc
int
jno
lahf
fcomps
cmpsl
lret
out
mov
xchg
dec
xchg
das
insl
xchg
mov
ljmp
dec
jle
fdivrl
sbb
inc
sar
lea
jbe
pop
fsubl
arpl
std
or
mov
pushf
inc
and
pop
ja
cmp
aas
ret
sbb
sti
and
sub
and
ret
jae
pop
cmp
lea
inc
push
mov
dec
and
int
cmc
mov
and
stos
shrb
scas
pushf
aaa
xchg
movsb
hlt
fisubrl
sub
push
inc
xchg
push
adc
aaa
inc
jmp
nop
mov
fcompl
lcall
rcl
mov
adc
ret
xor
add
push
call
call
sub
arpl
push
inc
subl
or
imul
sbbl
xchg
xchg
ds
in
fnstenv
sbb
xorb
fsubrs
lock
andl
outsl
repnz
loopne
imul
push
jo
iret
outsb
popf
enter
or
adc
rcll
cmpsl
mov
jmp
ficoml
or
and
imul
pop
cmc
fidivrl
ret
pop
stos
scas
cld
pop
ds
fucomip
sbb
mov
mov
fwait
push
inc
je
aam
cwtl
das
test
loope
dec
pop
xchg
jmp
sub
push
xor
add
int
jl
repz
pop
repnz
sbb
mov
jb
jmp
xchg
sar
fldt
mov
inc
sar
aad
dec
sahf
cmp
push
call
shld
mov
mov
or
mov
shl
or
xor
xor
xor
xor
mov
mov
jmp
mov
add
mov
mov
mov
mov
mov
mov
movzwl
cltd
xor
jmp
pop
test
push
adc
iret
cltd
lds
mov
adc
push
fmuls
pop
xor
cmp
cmpsb
lahf
pushf
sbb
js
sti
cmp
adc
fmuls
sub
dec
imull
mov
mov
and
pop
ljmp
lcall
mov
dec
mov
push
dec
lahf
jge
pop
xor
inc
enter
stos
stos
xorl
cmpl
push
sub
mov
dec
iret
push
loope
cmp
sbb
testb
or
jae
call
dec
fisttps
stos
cmp
mov
loopne
mov
fistpl
add
dec
push
jo
enter
pop
jecxz
xchg
stos
aas
adc
cmp
mov
mov
in
scas
loop
jecxz
pop
or
mov
jmp
inc
in
sarl
jno
enter
cld
aas
xchg
dec
dec
call
fcmovb
and
out
fidivs
fcmovnbe
dec
inc
inc
shrl
inc
test
mov
push
popa
dec
bound
aam
sub
shll
inc
test
std
aaa
jne
push
pop
lret
clc
sbb
std
cmp
iret
dec
push
xchg
adc
hlt
sbb
xor
inc
pcmpeqd
pop
inc
xchg
lods
mov
stos
sarb
xor
faddp
inc
popf
pop
mov
icebp
jg
inc
mov
add
adc
adc
test
fcmovnb
sbb
fcomps
insl
pop
fisubrl
mov
aam
jp
mov
xlat
fiadds
xchg
pop
subb
test
gs
xor
adc
les
fcmove
aam
inc
dec
mov
scas
add
sbb
lahf
pop
ficomps
sbb
inc
dec
push
mov
ds
mov
mov
stos
int3
shlb
mov
fwait
daa
jge
dec
jl
mov
xor
jp
jns
scas
mov
pop
fstl
and
out
orb
jmp
mov
pusha
in
mov
xchg
mov
push
push
lea
sbb
mov
lods
cmc
in
stos
mov
jns
in
mov
xor
mov
lret
jl
imul
xchg
xchg
aas
cld
pop
mov
mov
jb
loopne
mov
cmp
jle
jle
mov
fwait
push
mov
test
and
cmp
aas
ss
addl
fstpl
pop
mov
loop
daa
pop
lock
xlat
add
rcr
jp
inc
imul
imul
roll
icebp
push
sub
fdivr
ljmp
xchg
es
fwait
xchg
lcall
fcomi
mov
inc
das
cmpsl
lock
jle
xchg
mov
je
and
popa
ficompl
in
sahf
test
adc
sub
hlt
cmovbe
aaa
hlt
into
mov
lahf
pop
add
mov
outsl
rol
je
mov
out
adc
mov
xchg
mov
addr16
les
add
gs
mov
and
gs
mov
adc
pusha
pop
aad
mov
or
in
sbb
pop
sbb
lods
stc
sbb
cli
dec
es
repnz
xchg
daa
jmp
fs
mov
jne
xchg
test
movsb
clc
pop
push
push
or
xchg
and
push
pop
mov
push
mov
pop
mov
mov
iret
pop
adc
call
std
stos
mov
or
push
fsub
push
out
and
push
push
cmc
js
repz
fs
or
es
and
leave
push
mov
pop
mov
jg
ds
mov
addr16
in
mov
sub
xchg
dec
popf
mov
mov
aam
jne
add
xor
mov
in
dec
mov
mulb
fldt
jo
cmp
scas
in
mov
jne
dec
imul
jmp
repnz
and
jp
add
lods
cld
xchg
jmp
xchg
loope
test
adc
aaa
cli
adc
rol
pop
movsb
dec
mov
mov
pop
add
into
jmp
add
jl
stc
out
mov
loop
popf
adc
ret
outsl
mov
and
mov
insb
xor
lcall
fldt
pop
bound
jecxz
aad
sub
dec
fbstp
pop
pop
jbe
xor
jne
mov
and
bnd
xorl
inc
and
cs
dec
and
repnz
jmp
adc
jne
cmc
inc
mov
das
out
mov
dec
add
fxch
or
mov
mov
es
xor
repz
sbb
ret
insl
imul
push
inc
mov
into
loope
loopne
mov
xor
sub
mov
cltd
and
mov
add
or
cmp
push
xchg
mov
push
fcomps
fcmovb
cmp
add
sub
stos
jg
cmpsl
mov
data16
stos
inc
mov
jge
scas
mov
pop
sbb
mov
popf
out
mov
mov
test
xor
xchg
pop
xor
sbb
repz
push
push
inc
aaa
test
ss
mov
xchg
jmp
out
daa
std
mov
mov
pop
cmpsl
into
inc
cmp
sub
xor
outsb
iret
inc
add
jo
test
cli
jb
inc
xchg
test
movsl
add
shl
clc
ljmp
movsb
lret
and
rolb
mov
push
dec
jns
mov
mov
je
jle
push
movb
mov
loope
shrb
aaa
icebp
add
xor
iret
fisubl
dec
mov
add
addr16
and
push
mov
or
mov
mov
ficoml
sub
push
sub
xchg
jns
or
sub
cmp
or
int3
in
xor
push
pop
mov
or
jmp
jns
mov
ja
popa
adc
inc
sbb
pop
push
cltd
adcb
ror
test
test
dec
cmpsl
iret
lcall
pop
les
in
clc
ds
jno
hlt
adc
push
jnp
add
rcll
mov
fsubr
fsub
ds
mov
dec
loop
mov
in
adc
aam
xlat
sbb
fwait
pop
aaa
mov
mull
push
and
cmp
cli
jge
or
or
scas
out
in
lods
cmpsl
jg
pmaddwd
loope
sub
push
dec
jo
ljmp
and
sub
rcr
xchg
enter
jno
lret
mov
lret
in
mov
pop
loop
sub
lret
in
insl
imul
sbb
call
shll
sbb
add
mov
push
pop
mov
jbe
idiv
xchg
jge
sbb
shrb
subl
inc
frstor
xor
push
adc
sbb
gs
sbb
into
push
xchg
pop
sub
imul
or
repnz
jl
adc
mov
add
addr16
dec
into
jae
icebp
mov
adc
out
arpl
pop
dec
sahf
loopne
sbb
inc
cmp
rorb
out
sbb
and
adc
aas
rclb
sbbb
sbb
fldt
out
aad
jl
push
stc
nop
mov
add
dec
push
push
sbb
divl
add
dec
rcl
xlat
insl
insb
cmp
jmp
mov
pop
enter
js
mov
or
adc
test
loope
aam
jae
aad
addl
jns
mul
pop
cmp
xchg
inc
mov
xor
mov
ret
pop
nop
xchg
cmp
xchg
xchg
pop
lock
jp
cld
adc
test
mov
sub
adc
scas
cmp
mov
add
cmp
adc
adc
out
mov
jne
pop
xchg
dec
js
cmp
sbb
adc
jbe
xchg
adc
dec
mov
mov
cmp
movsb
ret
push
or
push
test
push
adc
add
adc
test
add
mov
cmp
jne
movl
mov
movl
mov
movl
mov
jmp
addl
dec
push
or
cmp
lahf
xor
repz
adc
cli
adc
mov
xor
dec
bound
js
xor
push
adc
mov
sbb
lock
rcl
jge
adc
mov
sub
test
in
or
adcl
jb
mov
mov
sahf
into
clc
add
arpl
xor
addr16
xchg
fisubrl
loopne
loopne
dec
add
mov
jae
pop
jl
in
stc
push
aaa
inc
pop
dec
mov
sidtl
das
push
mov
or
pop
mov
loopne
push
outsb
addr16
jle
cmp
mov
xorl
and
fnstsw
sbb
jl
adc
and
push
sar
movsl
aam
in
inc
jmp
add
repnz
call
xor
mov
dec
pop
sbb
mov
jno
push
jae
test
xor
push
lret
push
lds
mov
mov
imul
add
cmp
inc
push
mov
push
lret
sahf
mov
cmpsb
push
les
or
push
aas
or
xchg
std
outsb
mov
outsb
add
je
cmp
sahf
xlat
movups
adc
in
das
popf
fsubr
sub
stos
add
int
xchg
bnd
jb
fmuls
in
xchg
cmp
mov
sti
adc
push
test
inc
and
mov
push
fwait
add
loopne
lods
fistl
lret
add
inc
jb
lret
leave
loop
adc
adc
mov
sar
scas
push
sarl
addl
jle
psubsw
enter
push
cmp
addr16
lods
push
movsb
or
in
adc
comiss
lods
loope
mov
jecxz
dec
pop
xchg
sarb
add
mov
outsl
lcall
hlt
inc
gs
int3
jle
mov
sub
rclb
push
or
mov
int3
subl
pop
xchg
je
out
imul
loopne
mov
inc
mov
lret
mov
cltd
sti
cmp
mov
loop
or
xor
jg
cmp
mov
into
std
sbb
test
loope
add
or
inc
adc
in
and
les
iret
or
mov
in
int3
or
adc
add
jmp
xchg
pop
sbb
jbe
sbb
sub
sahf
into
adc
hlt
xchg
inc
xor
ds
orl
cmp
cmp
add
loopne
xchg
adc
out
repnz
insl
pop
test
imul
xor
dec
mov
and
sbb
cli
mov
jbe
jno
leave
ret
out
inc
dec
push
repnz
jl
add
mov
adc
jne
and
jmp
sub
mov
rclb
or
sbb
out
lds
adc
inc
adc
mov
add
push
push
or
rcrl
mov
sbb
adc
aad
div
mov
mov
sbb
or
dec
nop
mov
jle
movsb
lds
repnz
sbb
mov
inc
push
in
les
mov
mov
int3
adc
pop
push
decl
mov
popf
je
jmp
push
subl
sub
sbb
jecxz
fcmovnb
xor
out
ret
xchg
push
xchg
fisubs
inc
mov
nop
push
mov
dec
dec
stos
cmp
inc
ficoms
sti
jnp
sbb
mov
jmp
and
mov
enter
inc
fiaddl
and
lods
jno
pop
scas
sub
outsl
scas
in
add
out
mov
shll
push
mov
call
int
mov
ja
pop
xchg
out
lods
mov
mov
cmc
add
fcoml
stc
pop
imul
popa
movl
mov
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
add
mov
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
mov
mov
xor
mov
mov
shrd
shr
jmp
pop
fisttpll
dec
es
fisttps
xchg
aaa
cli
adc
pop
sbb
call
or
mov
imul
inc
lea
mov
xor
pop
icebp
adc
sub
test
add
stos
cmp
ret
cwtl
mov
mull
push
sub
xchg
arpl
xor
imulb
pop
and
pop
int
loop
adc
es
dec
out
test
xor
mov
cld
inc
pushf
loope
call
fdivr
adc
lahf
add
mov
mov
cmpsl
cmp
and
push
or
out
mov
enter
shr
repnz
push
inc
popa
jns
aaa
rcl
out
out
out
add
int
xor
stc
push
mov
jge
cmp
jns
xchg
xchg
shlb
xor
inc
dec
rcl
inc
in
or
les
push
push
faddp
cltd
xchg
nop
xor
call
dec
loop
sbbl
add
cltd
jae
mov
je
insb
pop
xor
mov
lock
and
inc
xchg
mul
jnp
push
adc
sub
out
add
dec
mov
insb
jb
pop
adc
iret
lahf
data16
ljmp
imul
xchg
dec
imul
xor
out
ss
lds
lcall
pop
sahf
lcall
hlt
mov
rcll
cwtl
in
in
sbb
and
jo
add
xchg
inc
push
xor
not
cmp
xchg
mov
aas
loopne
fistpl
mov
sub
and
mov
xor
mov
mov
es
stos
xchg
cmp
js
sahf
jmp
xor
push
scas
dec
in
mov
cmp
inc
push
mov
xchg
xchg
aas
in
rcrb
lret
cwtl
or
test
fdivr
and
fcoml
mov
or
arpl
ret
xor
and
cli
mov
sub
arpl
lea
cld
xchg
movsb
mov
push
sbb
push
leave
ljmp
cld
ljmp
inc
xchg
xchg
mov
push
sub
push
das
push
jbe
cli
jge
imul
jmp
cld
out
lods
mov
mov
and
mov
pop
push
and
sbb
xor
mov
dec
jo
lret
fisubl
pushf
mov
jae
ljmp
ret
xor
rolb
sbb
leave
jo
in
adc
dec
je
bnd
sbb
or
loop
and
fidivl
mov
mov
and
mov
cwtl
add
or
pop
movsb
sub
shll
lea
mov
rcrb
mov
cltd
out
dec
insl
lock
int3
mov
jl
push
mov
out
mov
ficoml
stos
sbb
scas
inc
add
xchg
into
test
jle
pop
mov
inc
pop
mov
push
sub
or
and
nop
pop
add
rolb
lret
jbe
mov
movsl
or
mov
jg
popf
decl
or
push
dec
in
test
inc
cwtl
pop
sarb
les
cltd
pop
lahf
jge
cmp
jp,pn
push
push
xchg
xchg
sub
shlb
or
test
or
into
data16
fbstp
or
adc
jb
ret
imul
test
xor
mov
dec
in
outsl
pusha
aas
inc
sub
push
into
mov
stos
or
ror
ret
insb
arpl
mov
adc
jno
cmp
sbb
xor
bound
xor
dec
test
mov
out
xor
scas
or
imul
imull
sti
xchg
enter
cmp
inc
push
xor
out
lea
push
and
loope
lret
in
arpl
cmpsb
jbe
loopne
shr
xor
inc
repnz
popa
mov
mov
xor
shl
xor
or
add
mov
mov
mov
shrd
shr
mov
mov
xor
shl
jmp
push
test
add
push
adc
jnp
dec
lret
test
adc
aaa
cli
adc
std
mov
imul
jbe
add
pop
pop
mov
mov
dec
out
cwtl
aam
adc
cld
lahf
fs
dec
jp
jl
aam
rcrl
mov
cmpl
mov
leave
outsb
mov
pop
inc
cld
mov
add
test
cmp
jmp
xor
mov
dec
and
cmp
das
mov
dec
inc
je
cmp
sub
jb
fs
xor
inc
pop
pop
add
fistpll
sbb
sbb
lods
jg
fdivrl
or
adc
jle
dec
xor
lock
in
lcall
mov
add
sub
and
mov
mov
jmp
adc
outsl
lods
fstl
or
clc
into
dec
ljmp
test
jb
scas
fisubl
pop
dec
and
xchg
aam
xchg
sub
sub
push
push
cs
in
pusha
dec
sub
mov
xor
adc
pop
icebp
jo,pt
test
hlt
stos
sbb
pop
sub
in
or
scas
xchg
sub
in
adc
push
inc
jge
or
test
aam
adc
inc
pop
clc
cmpsb
frstor
hlt
in
add
pop
mov
dec
inc
std
in
mov
test
jno
shll
mov
orb
ss
cmp
xor
pushf
addr16
aas
jb
gs
daa
dec
add
pusha
dec
or
jmp
jo
xor
mov
fsubrl
xor
inc
loop
inc
insl
push
cld
cmpl
sub
out
imul
mov
mov
jne
popf
push
movsl
movsb
je
lcall
std
movsb
xchg
add
int
jmp
xchg
lods
mov
and
fwait
jmp
sub
icebp
sub
mov
dec
aas
in
mov
and
pmulhw
das
cmp
jl
jle
jb
pop
and
ds
test
adc
xchg
out
arpl
sub
lcall
out
scas
inc
fwait
popa
inc
lock
fisubs
imul
fadd
es
andl
xor
ret
je
sub
inc
call
or
dec
add
sbb
push
jp
insl
popf
push
sbb
mov
scas
cmp
pop
and
xor
ret
cli
fsubr
roll
xor
pop
nop
and
mov
cmc
sub
out
loopne
in
stos
repnz
cmp
mov
scas
nop
out
rcrb
and
int
arpl
jns
fadds
fisttpl
mov
mov
inc
fstpt
rclb
or
hlt
cmp
nop
xchg
cld
or
sahf
int3
fstl
call
xor
pop
bnd
loope
xchg
sbb
jl
pop
lea
mov
adc
dec
js
sbb
fidivrs
xchg
xchg
dec
lods
adc
and
loop
jnp
int3
mov
xchg
sbb
pushf
jp
dec
ret
into
aaa
xor
xchg
mov
pop
inc
cld
daa
ror
adc
iret
inc
mov
jecxz
fwait
jno
popa
mov
mov
sub
rorb
into
ret
push
sti
aam
cmpsl
in
test
sahf
scas
cmpsl
lock
mov
sbb
popa
dec
sahf
or
mov
inc
fdivs
inc
out
dec
jmp
adcl
jno
ljmp
btrl
pop
mov
cwtl
add
lcall
and
add
ljmp
lods
dec
jle
mov
xchg
sbb
jnp
bound
sahf
cltd
sub
lar
xchg
cmpsl
xchg
lods
dec
mov
or
pop
lds
cmpsl
xor
mov
pop
arpl
movsb
orl
out
mov
mov
jl
popa
mov
out
gs
popa
jge
adc
push
or
vmulss
repz
inc
int3
or
xor
arpl
cltd
cli
sbbb
jnp
or
lahf
test
inc
or
jmp
mov
je
lods
mov
imul
sahf
mov
adc
cli
adc
lea
enter
das
jne
in
ss
mov
jb
or
nop
jle
imul
mov
inc
or
lahf
cmp
fimull
dec
add
dec
or
imul
lock
add
mov
jno
ret
mov
inc
arpl
dec
js
popa
fisttpll
icebp
or
xor
jmp
outsb
push
pop
jb
mov
lea
mov
leave
lret
rclb
xchg
push
xor
pop
jbe
out
cmpsb
jl
ljmp
push
js
nop
out
cltd
cmp
xchg
and
push
imul
repz
iret
adc
push
lahf
push
pop
imul
scas
and
and
jg
mov
cmp
mov
jge
add
je
popf
sub
adc
mov
jno
loopne
add
xchg
lcall
adc
das
pop
movsb
lods
mov
push
cmp
push
sub
addr16
pop
rcrl
lods
jno
ret
decl
cwtl
stc
xchg
or
inc
mov
faddl
aad
mov
mov
std
jb
mov
cmp
aaa
daa
push
jb
push
adc
jp
repz
mov
nop
test
push
dec
lds
stos
addl
xor
iret
pop
insl
ret
lods
daa
andnps
not
or
xor
in
hlt
iret
mov
mov
mov
aaa
sbb
repz
push
mov
fcmove
inc
pop
add
xor
push
lret
in
cmp
add
ret
mov
add
mov
and
sbb
mov
cs
and
jecxz
mov
movsl
pushf
pop
adc
xchg
vmwrite
fwait
aas
repnz
int3
and
call
in
xchg
arpl
cmp
cmp
testl
subl
lret
add
xor
imul
sahf
movb
cld
cmpsl
mov
xchg
je
test
jp
arpl
jno
out
stc
cmc
cmp
jns
mov
add
mov
cmpsl
hlt
bound
mov
inc
cmpb
or
mov
inc
sbb
movsb
jno
xchg
or
ret
pop
dec
aad
fsubl
cmp
cmovo
lds
das
shl
xchg
xchg
incl
jl
insb
cli
lahf
sbb
call
and
mov
adc
enter
or
push
adc
lods
xorb
and
jp
pop
jo
addr16
cmp
jnp
imul
outsl
out
aam
lods
and
push
cmp
xchg
sub
mov
push
mov
mov
adc
xchg
add
xor
xchg
mov
xchg
insl
xor
retw
cmp
dec
dec
mov
popa
scas
dec
repnz
fistps
fmull
fstpl
inc
or
iret
ja
bnd
sahf
jecxz
inc
gs
cmp
adc
lcall
push
andl
loopne
rcrl
pusha
idiv
sub
or
movsb
mov
xchg
pop
mov
rolb
mov
pusha
ret
lock
sbb
pop
jae
and
xchg
and
xorb
rcrl
test
faddl
stc
ret
insl
push
dec
mov
push
rclb
fs
inc
outsl
xchg
mov
out
jno
out
and
push
lea
clc
lds
lds
out
mov
das
fs
sbb
fistpl
js
nop
clc
aad
std
pop
push
inc
cmpsl
pushf
loopne
arpl
cmp
inc
jle
hlt
xor
gs
fucomi
addr16
mov
xchg
mov
push
pop
fiadds
xchg
mov
add
cmp
pop
lea
jb
test
xor
mov
or
aad
and
shrb
sub
stc
pop
mov
mov
or
mov
mov
jmp
aad
sbb
das
aam
mul
popa
push
add
js
adc
cli
adc
cmp
iret
cmp
imul
dec
icebp
or
mov
mov
mov
fcmovnu
inc
mov
mov
push
mov
test
dec
icebp
out
and
les
mov
and
or
sbb
push
mov
jmp
xchg
xchg
inc
lds
dec
fimull
es
mov
test
movsl
sub
push
mov
xor
push
iret
mov
pop
and
jnp
std
ja
test
push
mov
push
repnz
jnp
push
adc
mov
stos
mov
mov
sub
push
sbb
sti
adc
xchg
xor
arpl
in
test
test
pushf
adc
adc
faddp
push
cmp
mov
cmp
jnp
popf
outsl
imul
ss
lret
xor
hlt
icebp
xor
add
aam
or
aam
sbb
adc
ret
sub
pop
out
xchg
pop
mov
scas
xorl
push
lods
fildl
push
cltd
and
mov
push
xor
fisttps
popf
pop
ljmp
adc
aam
das
xchg
sub
cmp
je
sbb
cmpsl
adc
mulb
mov
or
insl
mov
dec
mov
in
mov
pop
hlt
mov
dec
lret
inc
adc
xchg
das
aas
mov
mov
fwait
jbe
icebp
vcomisd
test
or
and
pop
xchg
stos
mov
jne
dec
mov
mov
adc
xor
pop
dec
sub
sbb
lock
push
cmp
outsb
stos
std
or
sub
rolb
or
pop
mov
in
mov
adc
sub
jno
jge
xor
dec
fcompl
int
lock
push
fmul
mov
mov
cmpl
loop,pt
cltd
arpl
mov
add
cmp
push
xor
mov
xor
sbb
sub
ja
cmpsl
cmp
mov
sbb
inc
mov
int
jno
sbb
pop
in
ljmp
cmp
xor
push
adc
sub
mov
inc
xchg
sahf
call
push
and
pop
mov
or
xchg
repnz
sbb
mov
or
sub
sub
xchg
jo
xchg
popf
out
pushf
out
out
push
ss
jle
xor
mov
js
cltd
fcmove
cmpsb
cmp
add
mov
inc
pop
push
jmp
repz
lahf
adc
push
jne
xchg
outsb
add
sub
xchg
dec
mov
sarl
mov
add
cs
mov
icebp
cmc
lods
nop
stc
cmpsl
xchg
ret
and
in
sbb
cmpsb
inc
fwait
and
out
add
std
jecxz
mov
jne
dec
jl
das
mov
out
push
test
roll
xor
xchg
jecxz
mul
cmp
dec
pop
shlb
sub
in
mov
mov
jl
mov
notl
icebp
inc
icebp
enter
out
add
mov
fbstp
mov
imul
cmp
mov
das
aad
sbb
push
dec
mov
cmp
loope
stos
pop
pop
pop
dec
ss
jg
or
ss
std
add
dec
lea
pop
test
mov
adcl
pop
divb
add
out
sub
es
push
or
mov
fdivl
jecxz
je
pop
stos
stc
js
and
mov
pop
imul
mov
or
stos
jmp
cmp
sbb
sub
mov
out
xor
daa
mov
int
sub
int3
mov
jg
aas
fwait
notb
rcrb
ficomps
mov
fstpl
xchg
test
add
inc
mov
shll
scas
das
adc
mov
out
xor
outsl
test
pop
sbb
xor
out
xchg
inc
pop
popa
push
shrd
shr
mov
mov
xor
xor
or
add
shl
jmp
add
push
adc
sub
mov
adc
cli
adc
lods
jl
bound
les
in
xor
enter
mov
push
pop
mov
lea
sub
mov
mov
leave
mov
into
leave
mov
fadd
lods
inc
pushl
cmp
push
mov
bound
push
jnp
push
push
and
jmp
pop
inc
push
adc
mov
dec
clc
or
test
and
jbe
testb
jmp
mov
sub
stc
mov
fimull
sub
add
and
cmp
cmc
xchg
xlat
call
push
ljmp
out
test
xlat
in
fldcw
jle
gs
mov
adc
cmp
scas
cmp
scas
mov
and
inc
arpl
dec
sbb
in
jge
fdivrp
mov
xor
fdivl
inc
dec
nop
mov
xchg
sub
subl
jge
inc
pop
adc
sub
sbb
mov
inc
jp
add
dec
mov
or
push
mov
into
roll
popf
mov
push
lds
mov
xchg
imul
insl
sarb
rcrb
out
cmp
jno
cmp
lods
enter
js
test
adc
lret
adc
stc
push
mov
jo
addl
adc
fbld
add
xchg
loopne
out
sahf
insb
in
stos
lds
fadds
push
bound
inc
cmp
push
sub
xchg
cmpl
xchg
int3
sub
jne
xor
rorb
dec
pushf
xchg
jge
mov
test
jge
xchg
sti
decl
mov
sbb
add
inc
mov
push
mov
mov
pop
mov
xchg
inc
jge
cmp
mov
xlat
imull
repz
fidivl
push
mov
pop
mov
pop
imul
pop
stc
cmp
shl
jae
ja
movsl
sbb
pop
lret
fisubrs
inc
movsb
lret
push
enter
and
jno
leave
mov
pop
rorl
gs
lock
mov
mov
xor
jno
std
xchg
sub
call
test
cmpsl
cmp
test
pop
sarl
stos
sub
test
mov
test
ja
gs
lcall
imull
dec
sbb
test
add
fnstsw
call
call
fisttpll
test
xorl
jg
mov
xor
and
pop
clc
orl
fmuls
mov
xlat
lods
pop
adc
cmp
shrb
jle
jecxz
movsb
cld
in
push
xor
aas
sub
or
pop
add
gs
mov
adc
in
sarb
fists
dec
push
sub
lea
les
pop
dec
cmp
arpl
xchg
cmp
pop
lahf
xchg
mov
aam
add
mov
popfw
pop
insb
jnp
mov
push
dec
xor
mov
xchg
not
sub
leave
in
adc
add
push
push
mov
mov
push
pop
aaa
outsl
mov
popa
mov
mov
mov
ds
xor
rcl
lds
mov
xorl
adc
shlb
nop
xor
addr16
push
jne
push
ss
xchg
cmp
test
movsb
aas
out
pop
cld
xor
ret
ja
fnstsw
les
xor
cltd
popa
xchg
lret
push
or
inc
pop
stos
mov
jno
pop
pusha
inc
xchg
popa
and
and
or
mov
xchg
nop
cs
lock
pushf
dec
out
fdivl
movsl
icebp
push
mov
sub
pop
insl
dec
add
bound
icebp
mov
rcr
loope
sub
subb
pop
adc
cmp
cmp
enter
adc
mov
mov
mov
shrd
jmp
frstor
dec
xchg
movsb
cmp
pop
jbe
test
adc
aaa
cli
adc
mov
sbb
ret
faddl
adc
sbb
mov
pop
sbb
in
movsb
fidivrs
aad
mov
ds
mov
add
push
scas
pushf
bound
cmc
cmp
adc
pop
ret
push
imul
es
call
push
inc
xchg
or
adc
sbb
mov
push
jnp
ja
test
loopne
hlt
rorl
pop
sub
mov
leave
and
sub
jb
mov
mov
test
jb
xchg
jecxz
stos
iret
imul
rep
mov
stos
sub
xchg
gs
mov
cmp
movsb
test
mov
and
cli
rorl
lret
jle
dec
push
lock
test
pop
pop
push
adc
sti
inc
inc
sub
sub
mov
or
je
xchg
test
clc
adc
loope
lret
jp
mov
lods
mov
xchg
test
lret
dec
or
mov
out
call
cli
jmp
push
adc
mov
dec
dec
dec
push
sbb
adc
and
mov
rcr
lcall
shl
out
sub
sub
sti
sbb
jp
xor
jmp
sub
ljmp
clc
out
lock
cli
fisttpl
xchg
pop
std
jg
outsl
lcall
mov
or
dec
pop
xchg
and
mov
popa
cmp
xchg
fistpll
mov
adc
fcmovnb
xor
scas
popa
jno
flds
add
dec
dec
add
cs
pop
cld
enter
imul
mov
lods
pop
dec
jbe
mov
adc
cs
sbb
add
lret
cmp
popf
aam
je
xchg
aaa
sub
and
adcb
sub
cmp
clc
mov
adc
cmp
flds
sub
pop
leave
notl
mov
or
sbb
movsl
jno
popa
int
loop
insb
mov
pushf
ds
repz
mov
cmp
jge
fistpll
cmp
ljmp
loop
push
ja
mov
sub
push
fistps
sarb
fwait
sbbl
int
sbb
cmp
in
xchg
es
sub
fnstsw
stos
sbb
loope
pop
jne
mov
inc
arpl
shr
inc
repz
pmuludq
jl
add
into
stos
xchg
mov
rcll
mov
cli
subl
jns
pop
test
test
xor
pop
xchg
lock
jge
icebp
leave
stc
scas
or
adc
ds
adc
cmp
push
cs
pop
push
into
jge
loope
psubq
fsubrs
adc
pop
ret
insb
jb
out
fwait
pop
xor
loop
ljmp
mov
clc
icebp
mov
mov
or
sub
push
cmova
add
and
inc
cmc
jo
dec
aaa
ss
and
or
cmp
and
in
mov
sub
fwait
mov
ljmp
imul
or
mov
mov
aad
jl
aam
pop
idivb
pop
outsb
cltd
fwait
test
adc
xchg
mov
push
push
call
add
mov
in
into
movsl
mov
cmp
jns
clc
mov
sbb
mov
fnstsw
loope
mov
jo
mov
mov
or
cmp
or
pop
push
push
loope
sahf
jno
movsl
pop
outsl
jns
mov
push
shrb
add
dec
adc
testb
out
imul
adc
ss
xor
inc
in
out
jns
xor
into
jb
es
cmp
jns
ds
mov
pop
mov
xchg
rcrb
push
dec
lahf
cmp
mull
mov
idivb
aaa
sbb
decb
inc
xor
jmp
mov
xor
shl
xor
or
mov
mov
add
jmp
pop
cmc
imul
test
stc
fisttpll
outsb
adc
aaa
cli
adc
test
pop
xchg
test
jno
jmp
dec
sbb
call
fdivl
shll
in
ss
mov
pop
push
popa
sub
and
ds
xor
adc
mov
pop
in
push
mov
dec
mov
or
loope
iret
mov
pop
push
daa
and
lods
xchg
mov
push
mov
jne
mov
adc
xchg
xor
ds
out
lods
das
xor
cmp
sub
incl
subb
sahf
in
jmp
cmp
mov
cmpsl
cwtl
lods
jmp
test
cld
or
mov
adc
push
add
rcl
dec
aaa
and
mov
insb
push
cs
imull
out
rclb
sbb
mov
cli
loope
lret
mov
loope
mov
xor
push
cmp
jl
fstl
leave
rclb
sti
out
rclb
call
and
xor
mov
outsb
mov
jno
mov
adc
dec
push
dec
ja
inc
push
int3
pop
cmp
xor
cmc
mov
adc
mov
cmp
data16
pop
xchg
mov
mov
sub
in
fcmovnb
xorl
fiadds
mov
add
push
bound
mov
loopne
adc
clc
hlt
mov
adc
cmpsl
lret
and
and
lret
xchg
dec
cmp
inc
xor
leave
daa
pop
in
xchg
cmpsl
dec
nop
sarl
js
xor
push
sub
stos
loop
inc
scas
hlt
pop
clc
sub
push
sbb
jle
sub
xchg
leave
fistpl
insb
sbb
jmp
xchg
or
loope
ss
xlat
dec
icebp
sub
outsb
fwait
mov
push
cmp
lods
push
ficomps
pop
loope
jle
xor
pushf
rolb
das
ljmp
jg
push
lcall
xor
hlt
push
shrb
mov
je
inc
and
or
test
or
pop
push
imul
ljmp
jno
push
lods
in
rcrb
ljmp
push
jecxz
mov
xor
sub
xlat
inc
adc
dec
push
call
jg
sub
lods
inc
inc
test
inc
adc
jbe
dec
fwait
sbb
stos
jmp
mov
loopne
std
out
mov
enter
mov
xchg
lahf
ret
lods
sqrtps
stos
dec
cmp
movsl
push
xor
and
lds
popf
xlat
iret
enter
pop
ja
xor
inc
je
add
pushf
xlat
or
ret
jbe
push
lea
incb
jno
mov
dec
popa
stos
orl
aas
ljmp
insl
add
or
mov
pop
repnz
dec
xchg
sbb
ja
lea
mov
mov
mov
push
xchg
sbbl
and
cmp
dec
scas
loope
ja
dec
or
pop
or
xchg
pop
cltd
enter
jnp
inc
not
arpl
push
aas
in
jo
leave
mov
iret
out
sbb
testl
cld
jo
insb
xchg
sub
pop
gs
inc
sbbl
pop
in
les
add
rcrb
pop
sti
or
nop
inc
push
out
pop
test
hlt
dec
lea
fadds
in
jl
xor
jp
adc
add
jns
push
mov
inc
cmp
in
fmull
xchg
out
sbb
ja
fmuls
and
sahf
push
mov
sbb
sub
js
out
mov
sbb
pop
and
dec
pop
es
out
popa
decl
stos
inc
aam
les
sub
xor
xchg
push
pusha
lds
jns
mov
mov
adc
cmp
inc
outsl
scas
jecxz
mov
or
pop
cmpsl
sbb
inc
enter
jmp
mov
dec
js
fs
xor
adc
sub
repnz
rclb
adc
cli
adc
scas
call
std
sub
mov
mov
fstps
mov
pop
loope
xchg
rcrl
jb
mov
sub
jmp
ja
adcl
pop
jg
lea
dec
fcmovnu
push
xchg
iret
dec
mulb
jg
iret
scas
jb
sbb
ret
cltd
imul
inc
dec
jb
mov
stos
xchg
cmp
stc
or
adc
sarb
cltd
loop
dec
pop
scas
fsts
sub
sarl
ja
dec
gs
xchg
push
mov
push
adc
insb
std
pop
jl
arpl
ret
sahf
sub
sub
pop
mov
mov
je
mov
inc
jae
ret
xor
mov
cmp
pop
xchg
fstps
fldl
sbb
pop
and
stos
sub
test
sub
aad
inc
lcall
pop
test
mov
repz
fmuls
adc
dec
pop
jge
ret
pushf
pop
dec
lret
xchg
ret
cmp
out
outsl
inc
js
add
push
scas
and
mov
or
mov
mov
pushf
shll
push
inc
add
inc
fcomi
sahf
mov
ss
into
jno
movsb
psrld
fistps
fs
test
xor
jg
jg
das
cmc
or
outsl
sub
sbb
xchg
or
movsb
mov
pop
add
lea
push
mov
in
sbb
or
mov
pop
int3
int
shlb
out
xor
inc
js
dec
add
bound
fs
arpl
jecxz
aad
push
std
rcrl
push
lret
bound
lods
dec
sti
mov
cmp
aad
pop
cmp
imul
mov
push
push
sarl
outsb
or
sahf
inc
ljmp
sbb
cld
adc
add
add
cmc
mov
icebp
mov
xor
mov
dec
sub
xchg
cwtl
mov
lds
mov
pop
sub
and
psrlq
push
or
stos
int3
test
mov
aaa
jmp
sbb
shll
mov
sub
shll
testb
dec
mov
sahf
mov
aad
cmpsb
lret
ret
in
jle
sub
repnz
lahf
sahf
fistpll
mov
loope
scas
push
fadds
jns
jmp
add
bswap
stc
xor
shrl
push
fidivl
aaa
mov
adc
inc
fisubl
cmp
mov
adc
int
jbe
xor
xor
mov
test
fldt
stos
daa
pushf
fs
cwtl
jae
push
mov
adc
xchg
gs
aas
and
push
in
mov
mov
add
fidivrl
and
push
xchg
or
xchg
popf
outsl
fisubl
cmp
scas
cltd
mov
cmpb
and
sub
jb
mov
lcall
push
pusha
jmp
mov
or
inc
pop
jle
cmpsb
xor
test
loop
nop
sbb
mov
fistl
mov
jle
jle
orl
pop
cmpsl
inc
insb
inc
mov
pushf
mov
pop
aas
gs
sbb
mov
arpl
pop
mov
dec
fldenv
sbb
clc
sub
mov
pop
fdivl
mov
pushf
not
fiadds
inc
jne
and
lret
pop
scas
mov
xchg
rorb
cmp
rcrb
out
cmpsl
or
push
jo
sbb
jns
xchg
pop
mov
enter
dec
cmp
in
pop
xlat
mov
push
ror
sbb
sbb
out
in
mov
jno
loopne
dec
push
inc
add
dec
jno
add
iret
xor
and
pop
in
sbb
rclb
dec
shrd
shr
mov
mov
xor
shl
mov
jmp
test
out
outsl
cmpsl
dec
test
in
cli
mov
aaa
cli
adc
shlb
mov
and
mov
pop
jecxz
mov
ret
sbb
outsl
cld
add
mov
add
jo
scas
call
mov
test
push
and
stos
pusha
fs
mov
adc
rorl
xchg
and
push
xchg
lret
xchg
ljmp
call
mov
jecxz
cmpsb
rorl
insl
mov
mov
aas
push
out
test
les
stos
cmp
outsb
stc
cltd
mov
push
dec
cld
mov
nop
lods
fs
out
sub
stos
scas
lods
ljmp
pop
cmp
dec
cld
pop
xor
faddl
jo
dec
inc
xchg
call
push
fistps
outsb
mov
sbb
sub
ss
xor
jae
int
xor
cmpsb
aas
push
jmp
jb
adc
push
cmp
imul
xor
mov
subb
js
cmpsb
xor
popa
ljmp
lcall
call
jge
or
neg
or
or
cmp
repz
frstor
mov
cld
cmp
test
idiv
pop
sbb
incl
pop
loop
mov
nop
les
mov
leave
add
outsl
mov
xchg
xchg
out
adc
mov
or
push
das
fsubrs
arpl
xor
sub
pushf
mov
jg
es
psrld
mov
xchg
fistps
push
mov
mov
xchg
inc
mov
xchg
and
ret
cmp
mov
in
popf
cltd
sarb
jle
loope
sbb
or
ret
jae
add
fwait
aam
add
dec
imul
inc
cmpsl
ds
imul
aad
cmp
test
in
sarl
cmp
insl
ficomps
pop
js
fcoml
cld
outsl
aam
andb
std
cltd
pushf
mov
mov
push
dec
mov
mov
or
mov
leave
das
stc
inc
stos
xchg
mov
pop
mov
iret
rcrl
dec
xchg
add
dec
stos
test
scas
jmp
add
push
mov
shlb
push
outsb
push
mov
add
loopne
cmp
dec
pop
pop
mov
push
push
adc
dec
sbb
push
gs
lahf
popf
push
cli
adcb
mov
in
bound
xor
push
dec
jp
mov
divb
enter
sbb
stc
iret
shll
jne
ja
aad
in
ret
in
mov
je
flds
xchg
jo
xchg
fsubs
jecxz
data16
lahf
loopne
shr
adc
jmp
js
push
outsb
cmpb
inc
jl
daa
mov
xchg
inc
in
and
pop
mov
and
xlat
cli
pop
add
popa
ror
mov
pop
pusha
sbb
lea
rorl
leave
mov
aaa
ret
mov
pop
jp
cwtl
insb
dec
push
paddsw
adc
repz
cli
adc
fsubp
faddp
mov
dec
pop
shll
scas
jb
jl
popa
jle
adc
fcmovnbe
cmp
xlat
inc
xchg
addr16
scas
xchg
fistpll
lcall
repz
loop
cmp
outsl
lret
cmp
cmp
push
dec
rolb
test
repnz
push
gs
dec
fs
in
test
mov
sbb
nop
je
push
test
jae
in
loop
mov
mov
data16
cwtl
outsb
jno
jp
pop
popf
test
std
cmp
dec
movsl
add
dec
dec
shrl
ja
cmp
stc
dec
arpl
dec
push
push
mov
xlat
shl
stos
cmp
or
lea
testb
insb
sar
cs
lret
xor
insb
xor
or
mov
shrd
add
jmp
push
fsubrl
dec
or
adc
adc
aaa
cli
adc
and
sbb
ret
inc
xchg
icebp
mov
inc
leave
lock
stc
sub
lret
orb
mov
push
or
out
push
dec
xchg
jns
daa
stos
rcrl
cwtl
pop
xlat
lea
adc
pushf
fnstenv
inc
sub
movsb
xchg
fidivrs
add
aam
inc
imul
jp
imul
jb
les
jne
sti
push
mov
mov
ret
in
aad
dec
lret
mov
jmp
seta
scas
mov
sub
int
jecxz
push
sub
jl
push
das
pop
scas
setno
mov
pop
inc
mov
mov
in
sbb
mov
pop
gs
scas
dec
les
dec
adc
int3
loope
push
shlb
cmp
push
out
dec
cmp
pop
adc
pop
lea
jb
pusha
jne
popl
ds
in
or
sub
or
xchg
fwait
mov
sbb
mov
add
dec
jecxz
shl
mov
xchg
jl
test
push
push
mov
mov
fisttpl
inc
sub
loope
gs
xor
pop
lods
aas
sub
divb
mov
sbb
divb
add
cli
lret
in
xchg
and
repnz
add
scas
cs
movsb
stos
js
ret
mov
je
inc
div
lret
push
cwtl
ret
pop
jb
roll
inc
pop
sub
pop
push
sub
xor
mov
push
xor
cs
mov
in
fs
mov
cs
les
imul
pop
test
int
sbb
fisubrl
xchg
clc
out
mov
test
push
and
lahf
push
sbb
mov
add
mov
scas
or
aas
add
mov
push
jb
lods
or
sbb
ja
les
lods
aas
mov
hlt
cmp
xor
add
insb
jo
adc
xor
jo
cmp
mov
sbb
sbb
cmp
sub
jno
or
jb
in
mov
inc
mov
clc
ss
dec
mov
movsl
and
shlb
xor
mov
cmpsb
loope
aaa
and
inc
jecxz
daa
ret
fisubrl
xchg
push
rcrb
fwait
add
int3
pop
xorb
mov
mov
hlt
call
loopne
mov
add
jecxz
dec
in
push
in
test
movsl
jecxz
sub
pop
xor
add
jno
xchg
popa
js
outsb
rclb
xchg
ret
fwait
push
in
rorb
outsl
scas
xlat
sub
repz
push
jl
pop
adc
cmc
sub
xor
fistps
popf
inc
dec
loop
fs
cmpsb
in
cmp
lret
loop
ljmp
subl
loop
lcall
xchg
pop
mov
or
xor
out
cmp
cmp
add
mov
or
es
aas
imul
mov
jle
ret
dec
push
outsl
jecxz
popa
ret
das
divb
or
nop
roll
push
mov
push
in
or
or
and
adc
push
xor
icebp
roll
xchg
fisubs
jle
and
js
add
pop
mov
mov
or
xchg
pop
addb
ficoml
pop
rcr
fs
les
lret
aam
notb
es
arpl
stos
ja
mov
shrl
mov
pop
movsb
in
fs
cmp
lock
stos
and
jmp
dec
cwtl
lahf
pop
cmc
out
mov
ds
loopne
arpl
mov
mov
hlt
push
cli
lods
test
into
test
mov
mov
sbb
mov
adc
dec
loop
pop
adc
je
mov
xor
movb
das
sub
rcll
jl
pop
mov
lahf
outsl
fisubs
jmp
push
test
mov
es
iret
shr
mov
mov
xor
or
mov
or
shl
mov
mov
xor
mov
xor
shrd
shr
mov
mov
mov
jmp
mov
or
mov
dec
lods
insl
lds
adc
aaa
cli
adc
xor
dec
inc
fs
cmp
sti
stos
push
pop
add
sub
mov
sahf
or
roll
rclb
sub
sub
cmp
lcall
xchg
loope
and
insl
xor
jmp
mov
inc
outsb
mov
push
push
xchg
xor
lret
lret
addr16
out
mov
mov
push
dec
sbb
or
add
orb
data16
adc
mov
cmp
aas
data16
in
jp
mov
pop
cmp
mov
lret
outsb
roll
inc
out
pushf
push
ds
cmp
fcoml
andl
jecxz
arpl
mov
dec
hlt
push
mov
mov
mov
mov
mov
mov
pop
cmpl
jnp
or
sbb
js
mov
dec
and
into
test
scas
rcrb
adcl
int
enter
mov
loop
xchg
bound
out
insl
mov
ljmp
sbb
popa
push
movsl
ds
mov
dec
or
jmp
mov
stos
cmc
sbb
sbb
xor
cwtl
jb
outsb
lret
sub
or
push
inc
daa
push
pop
mov
aad
push
mov
and
mov
dec
add
dec
fwait
push
sub
jns
test
mov
or
test
jae
xchg
popf
mov
loope
mov
rcrb
adc
mov
in
push
xchg
ret
loope
sbb
cmp
push
sbb
aas
add
sub
insb
data16
add
inc
ds
dec
scas
inc
or
inc
xchg
clc
jmp
movsl
jp
or
sbb
push
aaa
sbb
mov
inc
in
stos
jg
or
out
sbb
dec
jo
loope
jne
fs
orl
pop
jecxz
adc
mov
rorb
mov
cmp
sti
cwtl
push
mov
je
push
loopne
pop
in
ret
cmp
inc
xor
inc
lods
cltd
pop
mov
je
mov
push
and
mov
sub
cld
jns
fiaddl
and
ror
cmp
and
aad
pushl
fadd
lds
jp
das
dec
repz
jg
rclb
cs
rorl
xchg
addr16
popf
adc
mov
daa
mov
mov
cmp
mov
ja
push
or
inc
sbb
mov
loopne
jae
mov
sarl
movsb
mov
xchg
ljmp
xor
mov
mov
push
mov
scas
test
mov
pop
std
adc
cmp
pop
sub
js
iret
add
stos
jae
push
sti
xor
pop
push
mov
jle
lods
mov
xchg
pop
push
nop
in
inc
sub
push
rorb
popa
adc
mov
test
enter
xchg
jge
xchg
mov
mov
leave
ja
mov
cs
inc
movsl
mov
sbb
ja
sbb
sub
imul
lds
dec
rol
cmp
mov
push
dec
adc
or
mov
sbb
or
jg
jle
repz
adc
bound
push
mov
xchg
ljmp
loop
dec
neg
mov
divb
scas
sub
push
jae
xchg
ror
jno
add
fists
out
fdivrl
loop
jae
aam
jne
iret
xorl
cmc
push
nop
pop
sbb
mov
mov
pop
sbb
jns
jmp
pop
xorb
aam
lods
lret
xchg
or
xchg
pop
addb
loopne
mov
inc
pop
rorb
adcb
lock
or
mov
into
pop
add
loope
sub
add
dec
add
push
sub
jb
pop
pop
mov
movsl
popa
sbb
rcrl
cltd
push
mov
xor
or
mov
mov
mov
xor
xor
mov
mov
mov
shrd
shl
or
mov
mov
mov
shll
mov
mov
mov
xor
or
shr
or
cmp
jmp
jmp
adc
lock
jge
jge
push
ret
cmp
adc
cli
adc
pop
cmp
mov
lahf
pop
adc
jno
pop
dec
and
pop
cmc
jecxz
int
arpl
push
inc
xchg
push
mov
push
scas
je
add
leave
mov
pusha
sbb
xor
mov
xchg
mull
pop
pop
fwait
pop
xor
mov
rorl
dec
xor
dec
sahf
sbb
dec
jo
jnp
jne
rcrb
out
add
pop
nop
aad
push
je
sarl
adc
mov
out
inc
jae
and
push
mov
lods
mov
scas
cs
test
imul
int
xchg
dec
test
inc
push
leave
adc
das
ja
je
call
test
in
add
gs
call
dec
out
lahf
sbb
push
inc
cmovno
addb
les
dec
mov
jmp
lret
ja
shl
push
loope
dec
pushf
mov
testl
cmpsb
fcmove
int
scas
sub
daa
sub
test
outsb
cltd
mov
cld
push
inc
lahf
ficomps
sti
sub
push
and
xchg
dec
sbb
out
mov
sbb
or
mov
lock
idivb
pop
cmp
cmc
push
roll
clc
rorl
ret
cmc
cmp
mov
sbb
mov
xchg
xchg
push
stos
dec
pop
mov
sub
jg
clc
fimuls
bound
pusha
inc
test
dec
mov
mov
movups
jne
arpl
push
inc
insb
mov
push
loopne
ljmp
mov
adcb
push
mov
xor
ret
inc
int3
jno
mov
and
pusha
sarb
and
xchg
jns
mov
fwait
aad
fdivrs
xchg
das
sub
xor
push
xchg
cmpb
ret
inc
sbb
sub
adcl
pop
int
test
pop
das
insl
xorl
pop
mov
mov
inc
aas
mov
js
pop
orb
dec
stos
mov
xor
xchg
mov
xlat
cmp
sarb
into
repnz
enter
sbb
fwait
out
outsb
lods
imul
ret
cmp
scas
test
pop
or
repz
inc
mov
mov
push
sub
xlat
test
jl
sti
arpl
addl
mov
xor
fistps
jg
lret
lret
adc
or
jmp
stos
int3
shll
jo
mulb
cmp
jmp
andb
dec
fwait
pop
lods
ljmp
sub
addb
lret
jne
xchg
fidivrl
pop
or
dec
fisttpll
add
movsl
push
and
pop
loope
ljmp
or
movsb
aad
enter
fimuls
jmp
add
add
stc
push
mov
dec
sub
sbb
dec
pop
aaa
pusha
jg
xlat
movsl
jmp
adc
aas
jecxz
sbb
icebp
lcall
pushf
sbb
pop
jne
idivb
arpl
pop
sbb
adcl
icebp
and
cmp
inc
shr
imul
psubw
jge
cltd
mov
dec
inc
dec
call
add
add
jb
dec
push
std
xor
adc
push
mov
mov
leave
pop
xchg
icebp
insb
adc
int
xor
outsl
insl
repnz
pop
inc
xchg
mov
sahf
fiadds
outsb
cmpsl
xchg
inc
mov
dec
push
test
adc
sbb
and
lret
inc
or
cli
adc
adc
pop
jp
add
push
ret
cmp
shll
sti
in
pop
mov
gs
icebp
hlt
lret
je
adc
sti
lret
ror
mov
mov
fnstsw
or
ret
sahf
js
je
ljmp
dec
or
xchg
addr16
cmp
jne
jmp
mov
mov
mov
mov
xor
xor
mov
mov
shrd
shr
mov
mov
mov
mov
xor
or
mov
shl
mov
mov
or
mov
push
pushl
push
push
jmp
inc
in
push
test
and
lods
pop
cmp
jnp
pop
dec
test
inc
adc
aaa
cli
adc
sti
pop
cvtdq2ps
push
or
and
mov
xlat
aas
inc
pop
into
fists
in
sahf
jno
outsb
call
cltd
fisubs
xchg
test
loop
cmpsb
popa
in
sbbb
aas
ljmp
call
push
sub
mov
in
mov
and
push
cld
mov
cmpsb
push
in
inc
es
shlb
out
mov
jle
lods
mov
mov
dec
push
iret
xchg
fnstcw
sbb
ljmp
dec
lcall
and
add
or
and
mov
imul
push
mov
insl
fwait
or
leave
or
sbb
cs
jge
inc
xchg
test
xor
xchg
jae
insb
sub
cmp
sbb
lret
je
movsl
in
scas
mov
jnp
sbb
xor
cmp
xchg
mov
inc
and
jecxz
inc
add
adc
mov
mov
enter
push
mov
imul
clc
sbb
arpl
xor
pop
inc
out
cld
jae
mov
fimull
out
in
cwtl
pop
fldt
orb
mov
enter
popl
fnstenv
outsl
cmpsb
test
or
or
jne
jmp
clc
jg
sbb
mov
and
cmpsb
aam
pop
mov
mov
pop
rcl
mov
in
add
shlb
sub
int3
inc
in
ds
cltd
cmp
outsb
add
mov
idivl
xor
test
adc
aas
inc
scas
pop
frstor
push
pop
aam
add
sti
rorl
inc
out
xchg
es
pop
jl
push
adc
xor
or
or
sub
mov
pop
add
pop
ficompl
ret
enter
adc
es
xor
mov
imul
xchg
xor
pop
add
rorl
fs
testb
jbe
pop
sub
leave
popf
add
leave
xor
xchg
subl
or
adc
cmp
pop
enter
test
test
aam
movsl
out
add
imul
in
daa
xchg
sbb
in
jp
jae
xchg
stos
dec
dec
fimull
jo
or
out
stc
mov
or
into
push
sbb
jne
dec
xor
cmp
mov
lea
stc
pop
int
ds
inc
sbb
cmp
push
mov
sahf
test
jne
sbb
xchg
xchg
mov
les
lea
ret
jnp
js
addr16
or
sti
add
xor
repz
mov
xor
andb
mov
adc
dec
ffree
das
mov
nop
sahf
jle
adc
jge
push
or
push
faddl
sub
jg
jae
stos
out
ret
movsb
cmpsb
movsb
mov
jl
cmp
push
inc
sbb
xlat
das
cmp
adc
push
in
jnp
mov
push
aad
cmp
iret
out
xor
sub
add
aaa
ljmp
rcrl
adc
xor
cmc
rcr
jg
iret
lcall
mov
inc
jg
pop
sbb
adc
icebp
stc
aam
jb
aaa
pusha
rorb
sti
pop
repz
ja
pushf
sbb
sub
in
addr16
imul
jmp
hlt
adc
pop
sbb
push
into
clc
sub
add
pop
loope
jb
xor
push
jae
int
inc
pop
mov
mov
or
aaa
out
mov
add
aam
les
ss
or
data16
jp
sahf
mov
mov
mov
jnp
addb
cmpsl
daa
insb
jbe
xchg
rcrb
push
jp
jo
std
or
cmpb
and
fiadds
xchg
or
test
pop
xor
ljmp
adc
andl
sbb
push
imul
sar
loope
fs
fucomip
mov
pushf
mov
sub
popa
pushf
pop
pop
call
jmp
adc
mov
and
out
js
mov
sub
adc
aaa
cli
adc
cld
sub
push
mov
into
ret
fcoms
adc
dec
mov
mov
insb
inc
and
jecxz
lods
cmp
jmp
fstpl
dec
push
loope
aam
fildll
je
scas
sbb
jo
dec
outsb
jno
adc
test
std
mov
adc
in
not
mov
pop
pop
cmp
adc
jno
enter
xchg
mov
mov
incb
popf
in
cli
or
mov
mov
ljmp
fldt
mov
push
push
sahf
pop
or
jge
int3
and
loop
mov
fwait
adc
sub
xor
or
push
cmp
push
gs
lcall
stos
nop
add
pop
xor
ret
add
sbb
in
aam
arpl
jle
stos
pop
xchg
lret
sbb
loop
xlat
and
test
xchg
test
je
or
xchg
out
mov
mov
movsb
pop
fwait
lods
leave
jns
pop
call
mov
outsb
sub
mov
add
inc
lock
xchg
stos
push
shll
pop
and
push
lock
push
jo
addr16
cmp
push
add
out
in
repz
cmpsl
imul
add
js
dec
inc
fwait
xor
add
test
out
push
xchg
fdivrs
in
scas
mov
pop
imul
daa
lock
ret
pusha
aad
aad
mov
cmpsb
xchg
jbe
cmp
push
les
fcomi
mov
lea
xor
es
mov
and
xchg
pop
jecxz
sub
push
lcall
shll
dec
cmp
scas
jecxz
mov
xchg
ds
xchg
xchg
sub
push
mov
and
mov
xchg
mov
dec
cmp
arpl
sub
ds
pusha
cltd
cmp
cmp
xor
or
mov
loopne
pop
in
inc
shlb
rorl
lret
cld
mov
hlt
int
lds
pop
outsl
fs
dec
int
clc
loope
and
mov
cmp
fadds
pusha
jne
mov
out
add
pusha
fwait
mov
lods
adc
shll
stos
or
js
push
cmpsb
setns
in
popa
stc
jns
inc
orl
mov
or
xlat
sub
cmp
jae
lret
mov
inc
inc
add
xchg
add
fcoms
andb
mov
xchg
in
cmp
cmpsb
stos
sub
out
mov
gs
cwtl
mov
pop
lcall
xor
lds
jmp
mov
mov
mov
cltd
dec
out
and
adc
mov
rorb
push
or
out
in
push
dec
hlt
dec
insb
fwait
aad
cs
sahf
xor
mov
ja
push
fdivrs
clc
ret
ljmp
jecxz
xchg
loopne
xor
mov
push
xor
sbb
aad
nop
pusha
inc
hlt
fwait
jl
test
ss
cwtl
movsl
cmp
mov
xchg
jo
outsb
pop
or
adc
mov
pop
jae
cld
inc
ja
sub
cmpsl
push
add
sub
adc
push
fidivrs
push
mov
dec
inc
mov
push
imul
out
dec
cmp
rcl
dec
insb
add
jo
inc
pop
mov
fisubrl
add
mov
add
mov
sub
mov
enter
mov
aam
pop
cmpsl
ss
sarl
or
push
jmp
sahf
jns
jns
or
stos
jle
sbb
jo
and
pop
inc
mov
xchg
cmp
mov
cmpb
scas
jp
int
mov
push
incb
insb
jg
scas
mov
xchg
lods
fld1
jne
loop
sub
mov
andl
shrd
shr
shr
xor
push
xor
mov
mov
mov
push
push
push
call
shld
or
shl
or
xor
xor
mov
mov
mov
mov
mov
xor
xor
shrd
shr
mov
mov
mov
mov
shl
or
xor
or
mov
mov
mov
mov
xor
xor
mov
mov
mov
shrd
xor
shr
jmp
mov
and
add
sahf
std
xor
adc
cli
adc
mov
mov
int3
inc
dec
inc
sarb
ret
popa
scas
hlt
data16
and
test
sub
cmpsl
cli
add
or
test
jmp
rcrb
sbb
lret
sub
jp
popf
cli
mov
cmp
xchg
jnp
dec
mov
inc
push
xlat
cwtl
jge
in
outsb
dec
sti
je
stc
xchg
mov
scas
imul
fistpll
and
sbb
pop
fs
dec
movsb
mov
xor
mov
xchg
xorb
adc
mov
jo
call
jg
xor
sbb
adc
mov
shlb
dec
inc
das
and
sub
addr16
cs
es
aaa
insl
std
lods
fs
scas
push
jl
dec
in
dec
adc
rolb
mov
out
jle
call
jae
dec
test
aam
es
sbb
push
push
call
inc
inc
nop
and
or
insl
fstpl
lock
push
dec
js
mov
adc
or
pushf
or
add
ds
add
xor
push
sub
mov
sub
and
out
and
add
add
sub
add
dec
icebp
mov
stc
or
jmp
push
stos
add
sbb
push
mov
inc
popl
outsl
cwtl
xor
andl
inc
adc
push
mov
xchg
pop
jecxz
popa
pop
cltd
xor
mov
xor
push
pop
dec
cltd
xlat
add
push
xchg
mov
in
loope
loop
mov
jp
fsubl
push
jl
dec
lea
inc
stos
xor
xchg
sbbb
mov
mov
xchg
pop
sbb
mov
movb
fdivrs
xor
in
bound
sub
mov
icebp
push
es
jo
ret
scas
mov
addr16
inc
aam
lods
lcall
add
add
divb
push
mov
test
add
out
fwait
mov
cs
imul
push
idivb
loope
pop
cmpsb
adc
pop
sub
inc
fcoms
or
mov
testb
ret
fcoml
shlb
pushf
sbbb
test
mov
mov
mov
dec
dec
int
mov
out
aam
lret
inc
outsb
mov
cmp
jne
data16
sub
or
ret
sahf
push
pop
dec
add
dec
add
mov
test
or
int3
xchg
outsb
jne
gs
and
push
cmpb
fldl
imul
dec
outsb
add
jle
pusha
imul
cwtl
popf
aaa
mov
or
push
pop
aam
add
adc
imul
mov
mov
scas
mov
mov
jecxz
jae
push
jo
pop
mov
mov
fwait
fwait
pop
ja
push
rorl
push
inc
mov
lret
aaa
je
jne
fs
xchg
cwtl
ja
xorl
lret
cld
push
push
inc
mov
fs
jmp
leave
jl
mov
mov
fstpl
inc
lahf
cmp
add
mov
mov
and
sub
dec
xchg
fidivrl
or
mov
push
jno
push
int3
mov
pop
rol
mov
lret
loop
mov
jae
xor
popf
int3
xchg
push
xchg
push
icebp
add
mov
jmp
popf
pop
jnp
lea
push
loop
mov
jmp
jne
je
aam
xlat
call
sub
fiadds
cltd
xor
mov
dec
mov
add
enter
ret
sbb
jge
sub
mov
shlb
outsl
pop
imul
imul
push
or
or
cmp
jne
cmp
je
pushl
pushl
pushl
push
push
call
pop
leave
ret
mov
mov
ret
mov
mov
ret
push
mov
sub
push
push
push
movl
movl
movl
movl
movl
movl
movl
mov
mov
or
imul
or
jmp
push
enter
push
aam
gs
jmp
lods
lds
cli
adc
shl
ds
lods
scas
popa
cmp
xchg
xor
sbb
jne
lods
fwait
pushf
cmp
test
lahf
lds
and
xchg
inc
sbb
dec
fstps
pusha
cmp
sbb
mov
dec
dec
pop
mov
pop
adc
pushw
fs
andl
and
sub
mov
cmp
fcoml
insl
addr16
pop
in
fdivs
mov
sti
or
popa
cmc
ret
sub
cmc
loopne
pop
sbb
bound
jge
xor
in
adc
sbb
jns
mov
lods
fstl
in
mov
cmp
lods
sub
nop
mov
push
dec
pop
insl
pop
pop
jae
pop
out
es
mov
sahf
sub
mov
enter
jae
push
push
jb
shlb
jecxz
cmp
jg
cld
cmp
and
dec
iret
dec
cmp
mov
cld
cmp
mov
pop
stc
jmp
dec
subb
imul
das
xor
fwait
cmc
sub
inc
rorl
nop
insb
addr16
ss
jne
adc
xor
mov
aam
or
mov
dec
pop
ds
es
adc
pop
cmc
mov
mov
cmpsl
jne
daa
mov
mov
pop
sbbl
addr16
popa
push
jno
iret
mov
jns
cmp
mov
test
lahf
int
adc
cmp
mov
dec
insl
ret
xchg
lahf
pusha
jg
jl
outsb
and
subb
mov
jo
xchg
inc
movsbl
cs
aad
inc
sbb
in
jmp
mov
mov
mov
and
sbbl
mov
les
out
mov
pop
int
sahf
push
int
push
xchg
aam
sbb
shll
mov
sbb
add
stos
and
gs
cmpsb
push
xchg
jmp
popa
sbb
mov
push
push
dec
or
or
fnstenv
or
dec
pop
xlat
ljmp
lret
push
inc
add
imulb
testl
sbb
inc
mov
fwait
dec
jle
movb
ja
xchg
insl
adc
adc
or
repz
mov
jecxz
ret
jbe
mov
cltd
fwait
cli
stos
fidivrs
divb
repnz
inc
inc
mov
push
adc
sub
movsb
xor
ljmp
cwtl
je
sub
lds
mov
inc
dec
jl
ret
push
cmpb
fwait
jae
imul
outsl
and
sub
xchg
cmp
pop
sbb
adc
rcll
cmpsb
fucomp
movsl
ret
outsb
rcrb
jo
pop
stos
clc
or
out
insl
jmp
gs
rorl
or
mov
mov
mov
sub
scas
sub
dec
cmovns
jb
pop
shlb
xor
cmpsl
jecxz
das
stc
push
dec
arpl
mov
push
mov
fwait
push
cmc
dec
shlb
in
add
popa
mov
adc
jmp
xchg
mov
sbb
sub
cmc
inc
cmp
lock
inc
mov
sbb
dec
mov
adc
into
rcrl
xchg
cltd
cltd
dec
gs
mov
xor
push
rcrb
scas
push
cmp
es
cmpsb
or
pop
sub
lds
jmp
nop
pop
shll
lcall
rcl
or
lcall
shll
icebp
out
add
loope
inc
mov
xor
pop
rcrb
and
add
pop
jb
scas
inc
lea
in
mov
jb
pop
sbb
dec
call
inc
sbb
insl
mov
lods
gs
rol
xchg
and
ds
cs
popf
es
sub
sbb
lret
movsl
lcall
jne
cmp
and
ret
add
and
jmp
divb
in
ds
xor
ret
push
sub
mov
adc
jns
mov
sbb
cmp
in
xchg
jbe
fadds
js
iret
pop
lods
out
out
xor
ds
pop
xor
adcb
pop
push
push
inc
dec
push
loopne
mov
mov
aas
push
add
testb
sbb
insl
stc
jb
ljmp
jle
cli
test
jne
jo
sbb
mov
ret
mov
dec
sarb
pop
sbb
add
pushf
into
jo
sbb
imul
divb
mov
insl
sti
mov
dec
push
enter
pop
fdivrl
fsts
sub
ds
push
adc
mov
cmp
mov
jle
inc
push
pop
cmpsl
jae,pt
js
outsb
testb
jb
adc
and
das
inc
adc
movl
or
dec
roll
inc
test
leave
aas
push
sahf
ret
mov
fadd
sub
xor
jnp
aad
xchg
cmp
mov
and
mov
jle
stos
xchg
push
call
add
dec
add
push
and
sar
ljmp
mov
mov
jbe
fs
inc
repz
mov
and
add
mov
out
or
push
addr16
dec
push
fists
cmp
push
aaa
pop
sbb
mov
xchg
imul
jo
inc
jae
and
dec
inc
mov
push
dec
xlat
mov
adc
test
push
shlb
mov
mov
hlt
shl
or
imul
mov
xchg
jo
repnz
add
cmp
pop
das
xchg
clc
leave
clc
mov
push
ret
in
push
or
in
xchg
movsl
inc
pop
cs
cmp
addr16
jns
dec
out
or
adc
cmp
sub
xor
sahf
in
inc
shl
cld
inc
cmpb
dec
daa
mov
mov
call
pop
adc
jge
imul
es
sbb
lcall
das
jge
stos
sarl
test
pushf
pop
outsl
adc
fistpll
push
jb
int
adc
jmp
ret
mov
shl
sub
lods
pop
pop
jns
subb
data16
mov
addr16
les
xor
scas
cld
mov
cwtl
and
inc
mov
fldl
rolb
fistl
fdiv
xchg
jo
inc
stc
adc
mov
jecxz
repnz
mov
std
xorb
rorl
out
pop
xor
jp
sbb
mov
or
out
cmc
aas
and
and
push
inc
inc
xchg
or
mov
or
sub
push
jle
rcll
int
movsl
cmpsb
push
sahf
orps
fmuls
iret
push
and
or
inc
inc
ja
sub
ficoms
rcrl
inc
imull
jo
and
add
lcall
aaa
out
or
mov
push
xorl
jne
fstl
jne
outsb
and
scas
or
fsts
int
leave
jae
addb
ja
sub
les
jmp
mov
inc
frstor
bound
sub
push
test
fcoml
cwtl
scas
lock
push
sbb
rol
pop
dec
arpl
imul
lahf
cmp
lods
jg
push
stos
add
pop
sahf
cmc
bound
and
sahf
xchg
push
test
int
les
mov
fnsave
cmp
jnp
aaa
stos
test
and
test
aaa
lret
mov
cwtl
addl
mov
pop
std
add
sbb
movsl
pop
add
stos
pop
dec
lahf
jbe
es
out
repnz
popf
aad
movsb
lea
adc
lret
lcall
and
add
mov
sub
mov
and
mov
jmp
movl
movl
movl
movl
jmp
sbb
sahf
mov
pop
das
int
int
das
jnp
push
adc
xchg
cli
adc
and
iret
xchg
push
sti
in
sbb
cmpl
pop
pop
sbb
push
std
or
loopne
mov
mov
sbb
stc
loop
or
push
mov
xchg
stos
aad
mov
shll
xor
pavgw
and
into
xchg
cmpsb
fsts
push
xor
cmp
cmp
enter
xchg
pop
fnop
daa
sahf
inc
out
sbb
rcll
push
mov
mov
and
cmpsb
pop
xor
mov
jle
sbb
or
add
insw
imul
lods
or
rcrl
ds
push
aad
ljmp
test
scas
add
jle
inc
mov
mov
push
lods
es
sbb
cmp
loop
ret
lock
mov
scas
arpl
pop
pusha
cmp
dec
push
subb
cmc
loope
mov
cwtl
insl
xor
int
insb
iret
cwtl
aas
call
add
fwait
gs
jo,pn
sbb
cltd
outsb
cli
icebp
lock
xor
mov
fimull
insb
nop
sbb
jnp
hlt
cmc
adc
xchg
inc
and
mov
mov
call
xchg
testl
sbb
jbe
mov
jmp
mov
lret
ja
mov
inc
cmpb
loope
fs
xchg
popf
or
aad
pop
and
arpl
sbb
mov
dec
in
in
sahf
test
sbb
std
loope
rorl
lds
insl
adc
scas
test
push
test
fs
repz
mov
out
adc
popa
add
aam
nop
sub
out
jl
icebp
pop
shr
aam
jle
divb
lock
jae
enter
in
pop
xor
push
jl
les
mov
inc
lock
dec
adc
or
sbb
mov
mov
in
jne
out
test
mov
decl
add
xchg
popa
jge
insb
mov
cli
call
mov
push
int
mov
les
dec
cld
xor
cs
push
lcall
fisubrl
sbb
ss
lods
add
invd
sub
mov
pop
es
sarb
out
les
xchg
inc
int
fsubrp
fsub
or
cmc
pop
mov
dec
or
les
les
and
in
cli
xchg
ljmp
in
sub
mov
push
pop
push
push
jns
test
dec
ss
adc
adc
sbb
mov
jmp
movsb
pop
cmp
xchg
test
test
jge
hlt
aaa
sbb
aam
jbe
pop
data16
rcrb
lods
and
pushf
test
cmp
xor
out
xchg
add
jae
mov
adc
imulb
or
add
dec
loope
adc
movsb
xchg
imul
push
jbe
in
push
xchg
dec
cs
nop
shrl
sbb
xor
rol
push
xor
out
jl
push
and
and
cmc
fildl
fwait
xchg
add
dec
mov
and
into
jle
lds
in
cmp
filds
in
xchg
push
ret
cwtl
xchg
mov
pop
and
arpl
outsb
roll
dec
push
push
es
imul
sbb
jle
or
or
hlt
adc
push
daa
loopne
inc
cmp
pop
arpl
push
xorl
xor
mov
popa
lock
xlat
jo
mov
divl
rcl
pop
mov
cmp
aaa
jno
mov
hlt
xchg
insb
cmp
mov
in
hlt
aad
leave
fistl
add
cltd
stc
lret
scas
cli
push
add
xor
cmp
test
cmpsb
adc
cmp
mov
inc
mov
pop
or
lods
lods
cli
dec
push
mov
push
movl
movl
movl
jmp
cmc
push
cmpsb
decl
mov
icebp
cmp
jnp
popa
adc
idiv
adc
xchg
cld
insl
ljmp
pop
and
mov
int3
mov
packssdw
mov
scas
fcomip
dec
mov
sub
xorl
push
aaa
sahf
and
inc
movd
sbb
and
shll
jmp
leave
gs
test
arpl
jge
mov
sub
pop
or
je,pt
dec
dec
sbb
int3
aaa
mov
sbb
nop
cltd
jge
xchg
pop
mov
jnp
dec
dec
les
fwait
shrl
jl
inc
inc
dec
pop
roll
mov
mov
xchg
out
and
rclb
cwtl
andl
push
cld
xor
movsb
std
out
fsubr
mov
xchg
and
call
ficoml
imull
adc
int3
popf
movsb
lods
pop
inc
push
mov
dec
or
cmpb
xchg
cmp
xchg
mov
outsb
fidivrl
jne
jae
adc
lret
lock
rorl
jbe
int
inc
jl
inc
jae
mov
sub
push
stc
rorb
cld
pop
add
fwait
mov
stos
dec
repz
push
or
cli
test
lahf
jecxz
add
mov
cmpsb
lods
xchg
jmp
jns
pop
fs
add
neg
mov
mov
ljmp
inc
push
aaa
aam
repnz
xchg
sbb
xchg
mov
mov
xchg
xor
jno
leave
adc
pop
movsl
cmp
cmovns
popf
pushf
jl
cmp
or
mov
xor
cmp
movsl
mov
mov
jb
dec
sbb
lahf
cmp
loope
adc
mov
pushf
mov
pusha
call
sub
daa
scas
inc
jo
xchg
jecxz,pt
xor
stos
push
mov
jecxz
dec
pop
cwtl
sbb
cmpsl
rcl
sahf
test
icebp
aam
out
stos
lea
rorl
mov
add
jno
cs
aad
cmp
xacquire
push
js
add
ds
pop
insb
cmovp
fmull
out
adc
jg
jl
xlat
and
cmpsl
jp
fsubl
xor
adc
sbb
out
xlat
sbb
mov
adc
fnstenv
adc
stos
sub
clc
adc
pop
pop
out
mov
cmp
out
mov
dec
cmpsl
fnsave
stos
mov
jne
ret
addr16
pop
push
dec
jl
iret
and
push
fcmovbe
shrb
mov
adc
incl
or
stos
dec
mov
testb
ja
jns
inc
mov
or
cmpsb
fstpl
push
adc
push
dec
sub
mov
fisubrl
sub
push
insl
add
rorl
adc
jae
lods
cmp
jne
jg
or
movsb
and
jno
and
lret
dec
or
mov
cmc
adc
inc
ds
mov
gs
enter
lock
push
es
jmp
inc
xchg
movsb
dec
push
xor
dec
orb
imull
pop
sub
int3
cs
xor
fmuls
and
mov
xchg
int3
mov
pushf
sub
push
xchg
lret
call
push
test
movsl
and
push
sbb
lds
cmp
aad
sub
rorl
popf
loopne
testb
ret
cmpsl
mov
in
mov
les
test
fbstp
push
jae
pcmpgtb
mov
insb
and
stos
mov
int3
adc
les
and
sbb
test
inc
xor
shll
push
mov
cmpsl
icebp
pop
mov
fists
xchg
mov
push
jmp
sbb
jb
pop
add
mov
cwtl
cmp
push
mov
lahf
sbb
xor
mov
add
mov
mov
sarb
cmp
mull
clc
into
orb
inc
iret
and
movsb
idiv
and
mov
out
add
fisttpll
mov
movl
mov
mov
add
or
imul
mov
xor
mov
sub
mov
add
mov
imul
mov
add
add
and
mov
mov
xor
sub
mov
mov
mov
mov
jmp
aam
push
dec
push
or
inc
notb
adc
xchg
and
clc
adc
mov
stos
inc
jnp
fistl
ffree
leave
subb
pop
rorl
add
lods
inc
popa
les
xor
popf
adc
out
clc
dec
insb
imul
arpl
push
sub
push
xorb
mov
pop
loope
xor
in
mov
inc
das
xchg
pusha
movsl
dec
add
movsb
stos
mov
pop
int
popf
xor
and
mov
sbb
out
xchg
mov
imul
andl
out
cmp
loop
div
in
lds
xor
mov
and
jp
push
ljmp
cltd
push
mov
int
cmpsb
cmc
pop
dec
mov
aad
jmp
and
push
push
push
ret
out
divb
push
dec
lods
xchg
sub
test
jo
jp
pop
nop
imul
xor
xchg
pusha
push
pop
push
es
inc
mov
fistpll
xchg
lcall
lahf
pop
lahf
dec
mov
hlt
lock
push
decb
in
cmp
out
xor
jp
xchg
fbld
dec
inc
sub
js
xchg
pusha
pop
pop
and
cmp
into
add
mov
push
sahf
je
loopne
aam
jno
cmp
daa
bound
fwait
lods
sub
pop
mov
leave
inc
and
add
mov
loopne
fst
fsubrl
repnz
pop
jecxz
in
enter
movsb
icebp
in
scas
xor
mov
fstps
mov
jl
inc
nop
lods
lret
imulb
sub
daa
call
lea
add
pop
in
sbb
aam
mov
pusha
jns
cli
das
stc
pop
lcall
sbb
or
mov
cmp
std
or
cmp
loope
in
mov
xor
xchg
xor
cmp
xchg
rclb
arpl
mov
sbb
inc
push
mov
adc
iret
mov
scas
insb
les
int3
push
aam
or
sub
sarl
cs
or
fidivrl
jg
ja
popf
insb
or
cs
mov
out
div
movsl
adc
and
daa
mov
in
push
jnp
dec
in
lods
icebp
xor
or
rcrl
je
js
sahf
mov
int
vunpckhps
aaa
mov
pop
nop
fisubrs
aas
cmp
mov
sbb
xlat
mov
mov
xchg
lods
pushf
in
sbb
jle
pop
fisubs
xorl
clc
aas
dec
shlb
add
or
cmp
je
iret
ficompl
jae
xchg
mov
cmpsl
mov
push
inc
adc
push
mov
mov
je
inc
fisubl
stc
mov
sub
sahf
arpl
das
inc
aad
flds
cmp
push
sbb
popf
loop
mov
pushl
pop
cwtl
adc
ljmp
cs
jno
sbb
jae
xchg
stos
jge
in
inc
dec
decl
push
es
sarb
add
mov
cmp
sarb
test
gs
sub
pop
pop
sbb
int
fmull
in
or
test
inc
dec
jo
sbb
in
pop
jbe
out
in
decl
and
outsb
jb
pop
adc
cld
xchg
sti
outsl
mov
fistpll
hlt
jge
push
sub
nop
mov
xor
mov
jae
pop
jp
cmp
jno
lods
add
into
daa
xlat
lret
flds
pop
sub
mov
in
add
xor
cmp
xchg
push
aam
cmp
sahf
insl
stc
xchg
xchg
ds
push
cmp
lds
xlat
pop
xor
fnstenv
rorl
push
clc
sahf
push
sub
or
xchg
push
inc
loopne
in
stos
aas
ret
vandps
int3
xor
imul
mov
sub
jmp
xor
in
mov
leave
jbe
xchg
aaa
sbb
adc
shl
dec
xchg
lods
sub
orl
mov
and
mov
stos
out
jae
mov
loopne
adc
mov
das
mov
mov
jbe
repz
add
inc
notb
pop
cmp
pop
out
call
mov
rcll
lahf
or
imul
ss
or
sub
mov
jle
jl
testb
out
sarb
mov
jae
lea
shrb
imul
lret
int
push
dec
cmp
mov
pop
push
fsubr
js
xchg
and
shll
sbb
xchg
and
fwait
dec
jne
fdivl
lret
mov
nop
sub
dec
mov
mov
mov
dec
mov
dec
inc
cmp
in
mov
shlb
jge
loope
daa
mov
mov
icebp
jg
sbb
mov
out
push
mov
push
xor
outsb
into
ss
in
bound
outsl
pop
cmp
sub
jne
cli
xchg
or
je
adc
jge
jmp
ds
popf
and
ja
rcr
iret
mov
iret
mov
insb
shlb
push
cmp
clc
xchg
pop
ret
jg
ljmp
mov
or
icebp
pusha
insb
es
out
inc
jmp
jbe
fisttps
mov
jo
filds
aaa
ljmp
cli
jnp
push
loope
pop
in
fiadds
daa
fucomip
pop
inc
xchg
and
ret
stc
test
lea
mov
addr16
cmp
jmp
int3
repz
or
sub
push
xlat
rcll
fld
subb
push
rolb
sub
mov
into
sub
mov
lret
insl
repz
sub
mov
or
into
or
mov
movsb
pop
inc
inc
sbb
mov
jmp
xor
or
lods
in
sbb
fcmovnu
fsubr
imul
add
xchg
test
jno
mov
cs
out
roll
jbe
fnstcw
add
inc
mov
sets
push
lahf
mov
jp
ret
in
fbstp
in
mov
out
xchg
pop
sub
out
xor
inc
popf
add
jb
shl
mov
adc
jecxz
xor
pop
mov
and
push
imul
adc
or
mov
xchg
mov
dec
jae
faddl
xchg
push
cmpsb
push
xor
lods
in
out
cmp
orb
divb
cmp
cmp
pop
inc
and
sahf
jno
filds
out
add
out
cmc
imull
jno
xor
lock
xchg
out
pop
jl
popa
xor
cmp
scas
sbb
mov
push
cmp
xlat
pop
add
xchg
adc
fucomp
fldcw
loopne
fucomi
imul
std
xor
call
mov
adc
push
ret
xlat
scas
xlat
repz
xchg
roll
inc
rcll
sub
cs
mov
lock
rcrb
enter
into
cmp
mov
ja
ss
out
cmp
or
shlb
in
and
dec
loop
jmp
rclb
push
imul
fstl
jnp
mull
mov
push
int
mov
cs
mov
ficomps
push
sbb
cmpb
ljmp
fsubl
pop
mov
fmuls
jge
pop
ficomps
sub
push
js
lods
punpckhwd
es
mov
sbb
subl
push
dec
mov
jne
aad
movsb
push
adc
aad
and
ret
xchg
push
or
mov
rorl
cs
adc
lahf
in
out
cmp
adc
lret
and
xchg
jae
aaa
pop
leave
push
cmp
lock
mov
sub
shlb
sub
sbbb
add
lea
mov
or
add
and
add
mov
and
xor
cmp
jne
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
jmp
lret
fildll
sbb
outsl
xor
jnp
out
clc
adc
mov
and
loope
ret
add
pop
or
std
mov
xchg
pop
push
xchg
sbb
xchg
outsb
mov
in
leave
jle
bound
xchg
jg
pop
movsb
xchg
jle
pop
repnz
int
test
adc
sbb
out
xlat
cmp
repnz
mov
cmpsl
sub
or
pop
lcall
ljmp
sub
sti
out
mov
xchg
pop
ret
jp
mov
scas
hlt
push
xor
mov
adc
xchg
aam
stc
cmp
rcll
gs
mov
ja
scas
mov
repz
or
ficoms
dec
sbb
pop
imul
jbe
push
or
subb
ljmp
insb
ret
fs
divb
lret
mov
nop
imul
nop
push
arpl
cli
and
sahf
mov
lea
mov
cli
loopne
fisubrs
pop
mov
sbb
pop
dec
aaa
add
or
sub
gs
xor
lea
add
sbb
fstl
mov
adc
rcrb
mov
out
jl
cld
adc
sbb
jnp
imul
popa
int
inc
jno
in
in
pushf
inc
or
hlt
js
adc
pop
ja
int
out
add
xor
mov
into
jge
mov
mov
mov
es
push
mov
or
sbb
cld
data16
scas
stos
mov
iret
lds
cwtl
and
inc
add
decb
repnz
mov
stos
add
sbb
gs
adc
xor
daa
aaa
push
dec
mov
jp,pn
in
xlat
adc
test
mov
push
jo
fistpll
dec
nop
mov
je
inc
outsb
out
andb
in
add
xlat
ret
xor
mov
cmc
icebp
cmp
adc
jae
jmp
sbb
jmp
or
push
insb
outsl
frstor
stc
push
cmc
fsubr
fisubrs
ret
mov
cmp
xorl
or
pop
sub
icebp
xchg
xchg
mov
cld
push
inc
jl
mov
clc
adc
jo
fs
lret
aas
inc
aam
and
cmp
in
xchg
inc
mov
call
lret
cmpl
jo
sbb
jge
cld
mov
push
add
idivw
cmp
mov
xor
arpl
aam
outsl
stc
shlb
add
cld
adc
xchg
dec
cmpsl
sahf
pop
cmpsl
scas
dec
pop
cmp
lahf
push
jne
loope
mul
jb
jecxz
sub
mov
xchg
jmp
nop
pop
cmp
jae
pop
dec
ss
js
mov
add
sbb
ret
hlt
out
cltd
push
sarb
xor
push
fcmovb
clc
icebp
cltd
loope
enter
pop
ss
adc
lock
stc
cmp
insb
lret
fldl
pushf
mov
xor
mov
cwtl
imul
shrb
or
sub
jmp
imul
jne
xor
or
lds
in
dec
lret
xchg
cmc
movsb
dec
and
mov
std
pop
jge
test
or
mov
sbb
js
scas
push
and
sbb
add
stos
cwtl
and
jno
or
push
arpl
cmc
sub
xor
stc
movsl
imulb
mov
mov
test
push
xchg
in
push
pushf
jbe
cmp
pop
frstor
jp
nop
cmp
in
fnstcw
into
aam
fs
mov
int
in
xlat
lret
xor
xor
inc
pop
stos
push
adcb
in
xor
mov
mov
call
aas
adc
mov
pushf
mov
jp
iret
mov
and
add
test
mov
pop
cmp
inc
inc
sub
loope
in
out
outsl
in
adc
jle
mov
xor
rorl
inc
aam
dec
fdivs
shl
icebp
mov
mov
xor
jmp
movl
movl
jmp
stos
lods
movb
lods
adc
test
adc
jle
lret
dec
add
xchg
or
je
ret
iret
xor
cmp
push
xchg
gs
xor
shlb
loopne
test
push
fbstp
nop
outsb
testb
mov
xor
lods
fldenv
sbb
xchg
stc
inc
add
xor
enter
xor
mov
sub
mov
cwtl
rcr
push
or
adc
mov
sub
loop
sub
cmpsl
sub
pop
jp
aad
lret
dec
jmp
sbb
jmp
loope
or
pop
pop
xor
fistl
add
pop
push
pop
cmp
push
and
stos
dec
scas
cltd
cmp
negl
mov
sub
hlt
push
loopne
xchg
jmp
outsb
sbb
sar
loope
sbb
fsubl
xorl
xchg
pushf
clc
lock
insb
mov
sbbl
push
sbb
xchg
jg
inc
and
push
aaa
lods
cmp
add
cs
testb
paddusw
jns
stc
cs
cmp
addr16
in
cmp
shlb
or
inc
push
mov
cltd
int
out
inc
into
push
jp
xor
fstpl
and
pushf
add
lds
stos
pop
decb
inc
xor
ljmp
jb
out
jle
lahf
leave
loopne
sub
jmp
dec
hlt
sbb
in
jge
jp
xchg
xchg
test
ret
sbb
jmp
movsl
adc
ret
test
mov
jg
cmp
push
jp
adc
inc
fisubrs
inc
in
loopne
add
daa
push
lret
dec
and
in
mov
test
jns
es
or
fstpl
imul
mov
jo
xor
sarl
fxch
sti
std
rol
sub
xor
inc
sti
mov
aaa
ljmp
scas
cltd
mov
jbe
xchg
add
daa
jo
movsl
movsb
jle
sub
mov
mov
out
bound
js
movsb
sub
mov
das
cmp
aad
outsl
or
pop
sub
outsb
shlb
mov
ja
cmp
xor
xor
inc
icebp
pop
xchg
inc
ds
mov
aad
out
dec
notl
movsb
push
add
dec
adc
mov
push
rorb
pop
jl
add
call
mov
mov
out
daa
adc
push
push
les
arpl
and
mov
cmp
test
dec
mov
ss
test
mov
lcall
add
int3
loopne
xlat
jns
mov
out
and
pop
in
in
mov
and
sbb
dec
xor
bound
push
aad
fnstcw
jb
push
adc
mov
xchg
out
loopne
enter
mov
popf
add
in
jp
ss
popf
stos
jb
nop
adc
out
cmp
mov
or
push
popf
in
daa
push
in
mov
dec
or
orl
or
outsb
mov
in
cmp
or
cmpl
fisubrs
xchg
fsubs
rorl
push
push
sub
jnp
fisubs
mov
cmpsl
cmc
xchg
jl
sbb
out
sti
dec
jmp
add
xor
das
mov
push
sti
test
inc
gs
mov
subb
mov
xchg
imul
jno
push
test
clc
outsb
test
jg
jae
mov
or
cld
pop
sbb
adc
inc
inc
enter
add
inc
faddl
add
add
inc
fdivr
add
add
inc
aam
insl
add
mov
mov
jmp
and
mov
out
jno
mov
mov
xchg
cli
adc
dec
mov
stos
ljmp
push
inc
lods
adc
jmp
push
xlat
rorb
mov
fs
sbb
jecxz
add
enter
dec
in
or
icebp
push
xor
and
aaa
mov
sub
int3
test
imul
jb
pop
mov
ficomps
mov
aas
enter
in
in
in
pop
cmp
es
sbb
pop
addr16
push
cmp
testl
sbb
aam
push
imul
sahf
mov
vmovd
cs
pop
je
daa
cmp
arpl
jnp
or
je
push
mov
mov
jo
xchg
pop
dec
xor
and
jns
push
pop
jg
rcrb
ficoml
sbb
cmpsb
mov
adc
mov
ficoml
movb
mov
mov
fwait
and
mov
dec
cmpsl
loopne
push
jb
and
imul
or
lcall
mov
mov
jae
lock
or
ret
psrlw
arpl
or
out
aam
fisttpll
or
test
mov
mov
sbb
jl
leave
fwait
add
cmp
iret
iret
or
mov
push
pop
mov
or
or
nop
int
push
pop
popf
xchg
mov
outsb
mov
jnp
filds
stos
jo
mov
stos
and
xchg
call
sbb
mov
or
addr16
cli
adc
shrb
dec
iret
loope
dec
xor
data16
adc
sarl
cmpsl
test
mov
cmp
dec
dec
jl
gs
imul
add
fs
adc
jp
sbb
cltd
xchg
aaa
lahf
adc
or
push
pop
das
fcom
push
adc
ljmp
mulb
lods
outsl
xchg
mov
cld
pop
out
repz
xor
cli
mov
repnz
sbbb
pop
cld
pop
ss
add
sub
lea
scas
cwtl
andb
sub
pusha
push
fistl
insb
cmp
xor
adc
or
sbb
scas
loopne
mov
and
or
xchg
pop
push
aad
popa
lea
cmp
test
sub
xor
add
aaa
lock
inc
insb
and
nop
push
sbb
add
negl
push
and
pusha
lret
mov
enter
inc
cmp
fs
mov
cmc
rep
xor
cmpl
and
mov
rcr
out
mov
in
push
jne
loopne
mov
ret
add
adc
pop
inc
loop
pop
or
lret
mov
fwait
cmpsl
fidivs
jmp
ret
and
and
and
int
or
stc
xchg
clc
sbb
xorl
mov
sbb
inc
ret
pop
sbb
push
sahf
icebp
ret
leave
adc
testb
lock
rclb
push
mov
mov
in
fbstp
mov
decb
in
push
push
dec
aad
push
imulb
in
xadd
pop
insl
xor
decl
mov
xchg
mov
fiaddl
cmpl
outsl
sbb
mov
fidivs
cwtl
mov
rorl
addb
pop
dec
dec
movntps
sti
mov
add
pop
pop
jae
xor
and
mov
lret
pop
xor
xor
hlt
pop
rorl
jno
add
xchg
xor
cmp
ss
and
lret
test
lret
orl
jmp
lock
jle
andl
out
into
xor
xor
or
jmp
sub
pop
mov
lahf
pop
mov
jp
add
xor
mov
jmp
out
mov
xchg
stc
mov
xchg
xchg
pop
int
adc
hlt
mov
add
mov
in
testl
inc
add
fisubrs
jns
mov
push
xor
pop
xor
push
mov
sub
mov
test
or
insl
lds
jecxz
mov
ret
rorb
jbe
dec
ss
dec
inc
jnp
or
mov
cwtl
fcompl
lock
jecxz
daa
stc
lods
rolb
dec
clc
xchg
sbb
ds
sub
and
arpl
imul
jo
iret
add
inc
fwait
lock
sarl
or
loopne
lret
add
push
dec
xchg
les
sub
gs
jl
lds
lds
sub
incl
push
dec
add
ret
xchg
sahf
ret
outsl
popf
sahf
mov
mov
adc
dec
outsl
sarl
cmp
cwtl
jecxz
rcll
ret
add
and
add
dec
jmp
xchg
fisttps
add
and
pop
sub
in
pop
subl
imul
jnp
add
push
icebp
sub
aad
mov
pop
xor
mov
pop
push
cli
orb
sub
xchg
in
push
xchg
mov
sub
inc
adc
into
stos
ljmp
enter
jle
and
cmp
fisttpll
or
orl
xor
add
enter
test
mov
and
insb
push
sbb
insb
push
cmp
push
lret
push
sti
jnp
or
dec
fsubr
insb
inc
je
jg
imul
ja
scas
lret
xor
fstpt
je
daa
xchg
test
or
adc
aaa
mov
xor
nop
mov
mov
add
dec
mov
pop
clc
shl
dec
mov
je
test
out
repnz
fstpl
cmp
sub
jb
push
add
int3
cmc
and
mov
into
shlb
push
cmp
jae
pop
stos
jmp
in
addr16
mov
arpl
xorb
sbb
je
imul
jbe
cmp
pop
aad
jno
cltd
and
in
mov
jg
jg
pop
dec
in
xchg
mov
fs
mov
sub
xor
dec
js
push
add
pop
movsb
in
push
pop
mov
xchg
cltd
popa
int
pop
cmp
lret
ss
inc
dec
notl
add
push
inc
sub
push
sahf
lock
mov
sbb
and
xchg
add
out
sbb
jg
xor
repz
loop
jge
cli
cmp
xchg
pop
adc
call
inc
popa
push
xchg
mov
or
pop
out
jb
adc
adc
dec
cwtl
pop
adc
into
xchg
out
dec
hlt
add
xchg
shl
mov
pop
outsb
adc
xor
insb
or
add
js
cli
mov
insl
cmpsl
imul
lret
mov
movsb
and
dec
in
adc
fdivrl
or
push
mov
jnp
add
sub
cmp
add
mov
mov
mov
adc
data16
cltd
insb
xchg
aad
fstpl
jmp
xor
jbe
scas
lahf
enter
xlat
pop
xchg
push
and
cmp
cmp
xchg
jo
movsb
leave
mov
pop
mov
or
xchg
hlt
je
sbb
jecxz
xor
rclb
shrl
jmp
adcb
add
movsl
inc
lcall
and
push
xor
insb
fldl
pusha
adc
adc
cmp
jp
push
int
ss
xor
ficoml
cmc
int
movsb
cltd
js
cld
pop
inc
pop
jb
push
add
int
xchg
je
ds
orl
pushl
mov
sub
mov
mov
mov
add
or
xor
div
mov
mov
imul
add
jmp
and
xor
lods
pop
test
mov
cli
adc
lret
adc
mov
test
mov
ljmp
repnz
pop
dec
adc
movsl
pop
pop
std
push
hlt
mov
in
mov
ds
clc
mov
dec
push
inc
ret
mov
cmp
ljmp
mov
fwait
pop
mov
mov
mov
ds
inc
sub
scas
sub
es
scas
add
push
sbb
push
mov
aaa
xchg
xchg
or
ja,pn
lahf
lea
outsb
fcmovne
push
jne
mov
lret
sub
jecxz
flds
arpl
sub
dec
sub
jge
add
xchg
mov
repz
cli
sub
cmp
mov
icebp
shrb
mov
pop
add
jle,pt
dec
add
popf
pop
and
jae
ja
dec
dec
decl
mov
sbb
xor
repnz
pop
mov
nop
add
insl
cltd
mov
fs
dec
jmp
aaa
adc
ret
inc
add
cltd
jb
mov
dec
sarb
push
mov
jae,pn
adc
mov
fadds
or
fbld
sub
pushf
jae
mov
mov
leave
shrb
adc
adc
cmp
pop
pop
movsb
mov
cmp
popf
push
scas
fldcw
sbb
inc
mov
push
fcmove
mov
or
mov
sub
inc
xorb
push
in
lcall
fwait
jmp
jo
dec
pop
or
dec
sbb
leave
mov
cmp
pop
jae
arpl
push
and
mov
xchg
mov
scas
stc
dec
cmp
push
cmp
mov
addr16
xor
in
test
cmp
jp
cmpsb
push
mov
popa
add
pusha
sub
inc
and
pop
push
mov
outsb
add
pusha
cmp
loope
push
adc
rolb
ret
pop
movsb
mov
jg
and
divl
push
jge
mov
sub
scas
adc
fwait
scas
mov
leave
and
iret
mov
and
sub
call
add
testb
repz
sahf
lahf
popf
addr16
dec
adc
addb
mov
imul
fcomps
das
in
jne
mov
vphaddubw
in
pop
inc
int
mov
testb
dec
or
es
xorb
sbb
call
in
dec
lds
or
jle
adc
in
addr16
aad
stos
adc
pop
push
or
outsb
lds
loop
sarl
mov
repz
dec
insl
cmp
out
push
mov
pop
addr16
sbb
sub
sysret
insl
jmp
push
jge
clc
jmp
jle
jae
aas
push
sub
lret
mov
fwait
int3
fcomps
mov
test
add
out
and
pop
js
sbb
pusha
adc
iret
jne
push
xlat
shlb
mov
in
inc
fidivs
jle
inc
mov
xor
mov
adc
mov
sti
rorb
fcomi
inc
imulb
mov
stos
add
out
inc
out
xchg
mov
sub
lea
xchg
xor
aam
mov
pop
xor
out
mov
add
push
jge
push
fnsave
mov
xor
push
adc
cmp
cmp
nop
or
ret
jae
xchg
lret
dec
mov
aas
or
or
cmp
push
inc
mov
sahf
test
ret
jae
test
jmp
xchg
lcall
sbb
inc
test
testl
mov
and
sub
mov
mov
mov
mov
and
lea
mov
mov
lea
mov
and
add
cmp
jb
movl
movl
movl
jmp
flds
and
rorb
mov
gs
pop
mov
adc
subl
loop
movsb
sub
push
leave
out
in
mov
jge
mov
xor
mov
sbb
xlat
mov
nop
aaa
dec
into
fnstenv
adc
out
outsb
loope
lea
pop
movsl
mov
or
stos
pusha
gs
jmp
or
jl
cmp
jnp
mov
mov
push
std
movsb
rdtsc
add
adc
adc
ds
add
push
cmpsb
sbb
imul
sub
inc
cltd
mov
xchg
jge
cld
xchg
adc
mov
inc
and
mov
rcl
mulb
hlt
lds
pop
or
or
stos
xchg
pop
xchg
push
popa
or
pop
pop
mov
popf
in
mov
sbb
mov
cmp
mov
insl
push
aam
imul
adc
cmpsb
dec
or
or
xor
push
or
xchg
int3
mov
test
cmp
jge
xor
mov
pop
cmp
jb
jp
out
mov
pop
push
push
andb
jo
sbb
mov
arpl
sub
in
ljmp
jl
sub
inc
mov
js
cmp
lcall
repnz
decb
mov
push
or
lahf
adc
test
das
inc
dec
pop
das
cmp
rcl
cmp
lret
or
dec
sub
popf
loop
mov
ror
enter
mov
push
dec
pop
mov
roll
or
pop
rclb
mov
test
cld
scas
add
cmp
in
pop
lock
or
ja
jae
adc
ljmp
sarb
fdivl
stc
jb
jae
xchg
sub
dec
out
xchg
dec
mov
mov
pop
xchg
adc
pop
ret
add
les
out
adc
inc
and
mov
clc
and
fisubs
mov
and
cltd
aaa
xchg
sbb
mov
inc
shrl
xchg
jl
xchg
add
sbb
sbb
dec
sti
push
in
sbb
xadd
and
xor
xchg
jns
addb
fcomps
dec
push
popa
xchg
repnz
mov
mov
mov
mov
mov
loope
imul
or
pop
adc
ret
pop
lods
loopne
ficoml
push
adc
lret
push
jnp
jb
sbb
push
ljmp
mov
lahf
pop
lahf
pop
sub
inc
mov
jno
mov
ror
sub
mov
push
stos
cli
pop
jg
fcoms
push
das
das
mov
xor
and
dec
arpl
cmp
push
out
test
outsb
or
or
sahf
and
inc
idivb
clc
xor
xchg
cmpsl
add
pop
push
test
test
addl
lock
cld
test
xchg
or
push
mov
idivl
inc
mov
jmp
or
cmp
imul
fisubl
nop
lcall
enter
jle
dec
adcb
sub
sub
test
stos
mov
xor
push
adc
mov
lods
push
xchg
fbld
xchg
arpl
xorb
stos
xor
inc
aad
push
inc
push
pop
imul
and
xchg
lods
ss
mov
jg
aad
je
push
cld
jp
jb
inc
jmp
push
dec
cmpsl
mov
pop
int3
sub
push
adc
jnp
push
cmp
adcb
push
int
inc
aaa
push
scas
cwtl
test
loope
add
sbb
in
ss
xlat
jae
or
cmp
stos
cmpl
jmp
stc
sub
test
add
dec
jno
pop
cmp
lahf
repnz
push
inc
cmp
xchg
xor
psraw
adc
pop
aas
movl
movl
movl
movl
movl
movl
mov
mov
imul
mov
imul
or
xor
add
xor
mov
mov
jmp
movl
movl
movl
movl
movl
jmp
stc
arpl
push
cmpsl
inc
xchg
add
clc
adc
subl
insl
jno
and
xchg
adc
xor
leave
bound
xor
push
inc
dec
sti
rol
aam
movsl
icebp
out
cmpsl
stos
testb
dec
imul
movsb
mov
mov
and
loopne
arpl
xor
mov
inc
cwtl
lret
shr
mov
imul
notb
adc
inc
and
fldcw
sub
ret
ret
iret
mov
push
pop
inc
mov
jp
js
int
int
je
loopne
dec
sbb
rcrl
sbb
lods
mov
lods
xchg
sub
xchg
cs
out
jmp
fldcw
lahf
xlat
jne
jnp
scas
add
fnstsw
shll
dec
std
jb
add
push
lret
inc
adc
inc
andb
xchg
mov
stos
and
mov
sahf
dec
pop
jle
and
hlt
cmp
lcall
hlt
outsb
push
jae
rcrl
sbb
sub
cmp
mov
aaa
or
jno
insb
mov
push
aas
sti
imul
pop
test
dec
pop
jecxz
sbb
je
pushf
fidivl
popl
xor
jbe
fmuls
inc
aam
inc
jno
fcomp
ficoml
popf
pop
dec
or
mov
sub
jmp
fimull
fldcw
je
mov
mov
xor
hlt
jne
out
xor
adc
sbb
or
add
mov
lea
pop
sbb
loope
push
or
cmp
inc
cmpl
aaa
mov
adc
test
sbb
pop
lcall
add
ret
fisttpll
jecxz
adcb
dec
bound
push
jge
lret
lock
mov
push
xor
push
jecxz
dec
icebp
lcall
lods
mov
xor
add
fs
nop
jmp
dec
outsl
mov
icebp
test
popa
jge
cld
xchg
in
sbb
daa
add
add
push
mov
xchg
inc
sub
fsubp
cmpsb
push
push
add
je
lret
enter
inc
imul
xor
les
pop
xlat
xor
js
and
cmp
push
and
adc
fsubrs
pusha
mov
dec
sbb
mov
mov
xor
cli
mov
or
stc
ljmp
pop
jg
inc
cltd
in
in
insl
out
or
imulb
mov
xchg
mov
jae
dec
adc
test
aaa
fcompl
out
and
xor
xor
xchg
cmp
test
pop
xor
xor
dec
sbb
pusha
rolb
mov
mov
pushf
sub
loope
push
jne
push
rorb
cmp
ud2
ror
into
ret
mov
add
push
imul
ficoml
or
xchg
fstpt
jle
xorl
jo
cltd
mov
movsl
gs
decb
xchg
adc
xlat
lds
mov
scas
cwtl
fisttpl
pop
mov
imul
push
outsl
inc
popa
stos
dec
xchg
lcall
jo
xchg
movsb
push
or
repnz
or
jge
sbb
je
jecxz
loope
jae
push
mov
adc
or
and
and
pextrw
movsl
xchg
scas
movsl
cmc
dec
in
inc
or
imul
push
out
scas
sbb
mov
frstor
movsl
jo
ljmp
or
negl
adc
popf
dec
lret
jb
sbb
movsb
cmpsl
mov
fldt
icebp
cmp
loopne
sub
push
lret
ja
push
cmpsb
js
mov
sbb
imul
sbb
stos
es
sub
js
xchg
movsl
mov
adc
pop
jbe
mov
stos
in
ret
adc
int
outsl
mov
add
push
dec
and
cmp
cmp
int3
inc
adc
add
inc
enter
add
int3
and
mov
or
mov
mov
xor
xor
div
mov
jmp
les
mov
xchg
sarl
xchg
adc
cmp
adc
loop
sbb
pop
jno
repz
outsb
xchg
mov
add
sbb
xor
sbb
xor
das
adc
cmp
aad
pushf
add
dec
or
shlb
clc
adc
outsb
mov
xchg
int
daa
aas
pushf
mov
sbb
xchg
xchg
adc
inc
inc
xor
sbb
outsb
outsl
xchg
cmp
mov
add
cmp
push
lock
push
mov
xchg
xchg
fwait
jne
dec
mov
fistpll
sbb
pushf
pop
mov
test
inc
jns
xor
clc
std
dec
and
cmp
das
push
sahf
mov
mov
mov
movsb
mov
bound
mov
cmp
test
mov
inc
cmp
xchg
xor
scas
mov
pop
hlt
push
ret
push
dec
adc
pop
push
cmpsb
jge,pn
stc
mov
or
pop
lods
mov
fstps
shrl
les
adc
lahf
pusha
xchg
movsb
cmp
sbb
add
out
cmp
aaa
pop
ljmp
je
lea
pushf
rdpmc
jmp
test
push
mov
mov
jecxz
adc
test
popf
cmp
mov
fsts
in
mov
scas
rclb
vmwrite
inc
push
mov
xchg
je
mov
fmul
jmp
loope
loopne
lods
add
adc
cmp
dec
sti
pop
adc
and
pop
xor
iret
out
ja
outsl
push
test
cmc
cmp
dec
mov
cmpsl
jns
into
add
push
sbbl
sti
addl
shll
insb
push
jmp
outsl
cmp
jno
sub
addr16
pop
and
out
xor
jp
leave
lcall
data16
xor
xchg
lahf
in
arpl
or
stc
push
shlb
insl
arpl
iret
loope
outsl
xchg
gs
and
mov
out
xchg
cmp
pop
fucomp
pop
dec
mov
push
in
cmp
sub
dec
xor
mov
inc
cmp
adc
mov
or
xor
shlb
mov
in
je
fnclex
cltd
xor
outsb
rorb
inc
xor
cmp
lret
push
movsl
mulb
dec
push
lock
in
sti
xchg
out
icebp
cmp
je
sub
insl
lret
adc
and
xor
xchg
ss
aad
adc
pop
in
mov
sti
xor
lods
es
add
mov
cmpsl
pushf
test
cmc
inc
and
ljmp
dec
mov
mov
stos
pop
mov
imul
mov
xchg
pop
push
cltd
mov
lods
sub
scas
cmpb
ret
pop
xor
sub
push
xchg
aad
ljmp
or
scas
arpl
fcoms
cmp
dec
inc
cmp
aad
stos
sub
pushf
cmpsl
xorl
jae
cs
jae
jb
lea
xor
inc
jp
jmp
pop
add
mov
dec
mov
loope
das
cmp
add
test
mov
sbb
jecxz
push
lea
push
fs
or
pop
addl
sbb
pop
mov
xlat
mov
ljmp
stos
mov
push
pushf
push
pop
and
enter
sub
fsubr
cmc
dec
popf
stos
pop
or
imul
add
sub
cmp
push
push
push
mov
imulb
lahf
sub
cmp
jne
call
jmp
cld
jmp
jge
push
sub
mov
push
lret
cmp
and
imul
andb
push
sar
mov
out
out
sub
popa
bound
decb
aam
add
lea
mov
mov
mov
and
or
jmp
mov
cmp
sbb
push
dec
adc
push
sub
adc
mov
outsb
jnp
or
add
lret
imul
or
insb
jne
and
add
lret
jae
addb
adc
dec
jge
sub
add
mov
mov
leave
xchg
xlat
mov
mov
mov
sub
sub
fmull
mov
cmp
loop
ja
lahf
sbb
jmp
leave
cmpsb
adc
orb
fs
pop
add
loope
dec
pusha
jnp,pt
adc
dec
sarb
std
stc
and
dec
movsl
mov
mov
fadds
in
ret
arpl
movsl
mov
add
int
enter
xchg
cli
mov
jmp
sbb
lea
aam
mov
push
mov
popa
mov
mov
inc
or
sti
mov
inc
jb
test
jge
int3
pushf
sub
iret
add
pop
lcall
dec
lret
out
push
jecxz
fdivs
faddl
es
xchg
fwait
sar
dec
aaa
cs
and
sahf
cmp
or
mov
imul
mov
pop
scas
pop
lods
mov
in
pushf
mov
push
cmp
iret
int
mov
dec
sbb
mov
fidivs
ja
and
mov
inc
adc
xchg
aam
ja
mov
rcll
in
xor
mov
inc
adc
dec
pop
add
leave
mov
and
in
iret
xorb
sbb
insl
mov
lds
mov
test
in
add
pop
sub
mov
test
mov
push
and
iret
lcall
cwtl
loop
bound
pusha
pop
cmp
in
cmp
loop
push
xchg
push
pop
cmp
nop
xor
sbb
xlat
sarb
jge
inc
cmpsl
lret
in
test
dec
shrl
jno
ljmp
mov
cmp
xchg
jno
mov
std
mov
arpl
das
insl
mov
xor
mov
call
push
int3
xor
and
pop
rolb
bswap
jo
add
repnz
jne
fistl
adc
inc
cmp
jae
cmpsb
lcall
adcl
int
jo
push
mov
jbe
fistpll
ds
mov
insl
mov
mov
xor
fsts
pop
sti
cwtl
lods
mov
cmpsl
cmp
adc
std
es
xchg
add
mov
gs
xchg
call
sbb
insb
sbb
hlt
loop
jns
adc
push
dec
rcr
add
cli
jecxz
xor
mov
sarb
cmp
dec
sbb
aam
and
ret
lcall
hlt
cmp
scas
pop
movsb
cld
lret
divl
leave
dec
dec
jne
addr16
psadbw
arpl
ret
pop
mov
mov
xchg
pop
pusha
lret
arpl
es
dec
add
cltd
mov
dec
push
xor
ss
loope
inc
out
imul
lahf
lods
cmp
adc
test
mov
cmp
mov
and
push
push
mov
daa
jge
jecxz
popa
mov
scas
fiaddl
cwtl
cmp
sbb
mov
pusha
sub
cwtl
cmpsl
mov
pop
jo
or
sbb
jnp
sbb
mov
lahf
xchg
stc
ljmp
out
movsl
add
rorl
sub
sbb
out
shrl
inc
push
inc
push
or
pushl
mov
push
clc
or
stos
add
lcall
adc
cmc
lock
repnz
aaa
mov
xchg
push
add
pop
xor
es
jbe
and
cs
or
push
sar
sub
xor
mov
sub
mov
mov
mov
mov
mov
mov
add
and
or
xor
add
mov
jmp
in
aad
aad
aam
ret
push
cltd
stc
imul
xchg
cli
adc
testb
push
dec
sub
mov
fs
stos
subl
les
adc
lcall
inc
sar
enter
nop
jno
fmull
test
clc
xor
and
jnp
mov
mov
addr16
mov
xor
daa
fld
lret
cmp
outsl
mov
cmp
into
inc
ja
mov
push
add
push
push
fldenv
jge
lods
out
xor
mov
out
stos
aad
mov
mov
rcrb
push
test
jbe
je
mov
cmp
dec
cmp
sbb
test
add
push
or
cs
fimull
movsl
mov
cltd
mov
adc
dec
xchg
sbb
ficoml
inc
test
cmp
inc
jno
dec
fndisi(8087
test
xor
dec
cli
mov
jnp
jecxz
mov
scas
mov
mov
sti
icebp
jae
pop
mov
push
fbld
lods
fnstsw
mov
loopne
mov
xor
sub
incl
push
push
das
cmp
mov
jae
jmp
aaa
xor
sbb
sub
pop
mov
out
dec
push
jne
add
mov
ss
adc
and
sbb
jg
and
mov
mov
ror
in
test
xchg
cmpsl
adc
je
push
mov
imul
ret
adc
cld
leave
loopne
adc
xorb
jns
jns
or
sub
das
xor
push
inc
xor
xor
cli
add
rcr
pop
add
pop
jns,pn
xcrypt-ecb
cmpsl
mov
pop
cld
and
cmp
xor
mov
pop
flds
add
test
inc
insl
shll
mov
je
dec
lahf
dec
or
gs
fneni(8087
cwtl
jecxz
das
in
xchg
shrb
mov
movsb
push
and
lahf
int
pop
dec
adc
sub
stc
and
imull
mov
and
sbb
sbb
ret
or
mov
sub
sahf
add
cs
enter
push
xchg
insl
mov
inc
sub
sbbl
test
insb
aam
inc
pop
mov
imul
jge
mov
and
sahf
ljmp
mov
cmp
pop
cmp
loop
in
nop
adc
adc
and
mov
sahf
jno
mov
js
mov
xchg
push
imul
outsl
mov
cmpsl
mov
add
mov
stos
sbb
sbb
jnp
and
pop
lahf
jbe
mov
inc
ret
out
mov
xchg
inc
sbb
pop
mov
mov
sub
xchg
push
add
arpl
cltd
xchg
nop
test
faddp
jl
repz
cmp
push
movsb
and
in
jne
iret
add
lea
das
adc
loope
dec
pop
mov
cwtl
push
sub
xor
pop
jnp
nop
mov
dec
push
xchg
insb
js
je
inc
dec
and
gs
clc
push
pop
int3
inc
sub
xchg
scas
xchg
cmp
mov
dec
mov
xor
jae
dec
mov
or
jb
dec
xchg
dec
inc
jb
xchg
jns
mov
shrl
popf
jl
cmp
pop
scas
cwtl
dec
aaa
out
xchg
iret
jne
stc
out
iret
int
add
xchg
lds
add
xor
jno
out
in
ret
sbb
sbb
xor
adc
sti
or
jne
cmp
push
dec
lods
jb
xor
push
fidivs
pop
clc
out
jle
scas
push
push
lahf
cmpsb
add
add
mov
and
sub
mov
imul
sub
cmp
jb
pop
pop
pop
leave
ret
push
mov
sub
push
movl
movl
mov
mov
imul
or
and
xor
jmp
sbb
scas
or
test
mov
jb
clc
adc
adc
cmpsb
xlat
stos
int
movsl
scas
orb
int
jl
ds
in
push
test
pushf
mov
pop
dec
cmc
popf
ret
sub
lahf
xchg
fsubrs
xor
insb
fldln2
mov
and
pusha
mov
and
sub
inc
push
adc
les
repz
daa
cmp
or
or
outsb
pop
imul
push
lds
mov
inc
dec
imul
push
pop
lahf
cmpsl
ljmp
pop
sbb
ds
xor
cld
cmp
xor
cmp
cli
adc
mov
aas
std
rcl
pop
fdivrl
bound
subl
mov
aas
mov
inc
mov
out
addb
sbb
sbb
iret
or
push
test
cs
bound
add
jge
lret
xchg
movb
lds
pop
mov
mov
addr16
pop
cltd
rorl
jnp,pn
movsb
cmp
xorl
out
push
mov
cmp
sub
addr16
xchg
pusha
jle
inc
aas
or
add
loope
lods
jae
push
mov
mov
cs
xchg
pop
cltd
adc
negl
mov
ret
popf
xor
out
outsb
sbb
pop
xor
pop
mov
pop
jae,pt
jbe
imul
loop
add
nop
adc
push
popf
stos
outsb
and
mov
push
mov
push
jno
add
cmp
xchg
fld
push
je
inc
lret
push
jae
jae
inc
pusha
lahf
std
movsl
mov
xlat
sub
imul
hlt
jno
fwait
cltd
sbb
clc
lea
dec
rcrb
and
sub
pop
add
dec
adc
push
and
in
ja
sbb
adc
mov
cmp
jbe
sbb
pop
ljmp
adc
and
enter
xchg
fcomi
jns
scas
rorb
insb
arpl
sti
dec
testl
in
insb
loopne
test
pop
leave
pop
and
daa
push
movsl
sbb
pop
or
jae
das
lahf
xchg
pop
dec
mov
stc
jae
dec
xchg
mov
cmp
ds
sbb
insl
ficoml
fdivrs
mov
mov
xor
je
subl
cmc
dec
or
lock
arpl
xchg
dec
mov
enter
pop
adc
xchg
lods
cs
fdivl
pop
dec
loop
dec
pop
sarl
ljmp
jae
adc
inc
push
adc
fidivl
or
sub
sub
xchg
lcall
pusha
cmp
cmpsl
sti
negb
fisttpl
add
push
mov
or
or
stos
inc
into
adc
pop
xor
cmpb
ss
push
cmc
xor
push
in
enter
daa
dec
loope
adc
dec
xor
divl
clc
add
push
sub
mov
fcom
push
mov
jne
pop
shl
pop
lds
mov
es
inc
mov
leave
and
aad
repz
movsl
mov
adc
rorl
mov
inc
cmp
mov
mov
std
xor
pop
in
lret
cmp
jns
int3
ds
aas
dec
das
mov
dec
pop
push
rorl
in
mov
das
in
push
icebp
dec
sbb
xor
stos
test
xchg
dec
les
xor
fistpll
push
test
pop
out
stc
xchg
lock
outsl
out
and
cmp
in
stos
add
loopne
sbb
lret
jmp
adc
aad
mov
pop
mov
sbb
inc
sub
jecxz
clc
rolb
lcall
arpl
pop
xor
aas
xchg
adc
imul
out
mov
mov
subb
mov
cmp
je
jp
xchg
imul
sub
pop
or
xor
popf
stos
xor
mov
pop
and
jbe
ds
insb
jp
cmp
push
or
pushf
mov
fisubrs
lds
cmpsb
ret
lds
int
jg
push
sbb
roll
lret
int3
cli
adc
jl
mov
lock
cmc
inc
pop
pop
sarl
mov
push
jne
add
xor
mov
movl
movl
mov
mov
add
div
mov
or
sub
imul
lea
mov
movl
movl
movl
movl
mov
mov
or
mov
and
mov
or
sub
mov
jmp
stos
mov
adc
jnp
xchg
cmp
adc
adc
fistl
addl
adc
push
ljmp
adc
xor
cld
loope
fisubrs
cmp
push
push
stc
bound
dec
in
mov
idivb
adcb
add
push
add
es
or
int3
or
pop
add
dec
mov
lea
out
inc
cli
and
imul
mov
out
sub
negb
stos
xchg
pop
cmc
sbb
adc
mov
mov
xor
data16
jle
call
sarl
jne
xchg
addr16
call
negl
pop
jno
movsb
push
shrb
fimull
or
loop
mov
sub
scas
mov
jp
sub
shrb
cld
sti
loope
insb
ret
jbe
xor
into
jecxz
pop
jl
xor
sbb
cmp
inc
inc
mov
sbb
add
ret
loopne
and
adc
in
dec
incb
loope
ds
movsb
lods
jle,pt
inc
xchg
mov
shl
mov
shlb
fadds
lahf
mov
xchg
mov
aas
cs
outsb
scas
cmpl
mov
test
jge
lcall
push
scas
outsb
test
dec
aad
lea
fucom
pop
jns
cmp
inc
cltd
aam
jmp
mov
lods
mov
mov
pop
into
jnp
data16
xchg
int3
rep
push
subl
inc
ficompl
dec
jmp
push
pop
cmp
sub
jge
cmp
imul
pop
push
rclb
cwtl
push
push
pop
sub
push
ret
sub
xchg
cwtl
mov
insb
aaa
jns
fstl
or
and
faddp
imul
call
ss
roll
xchg
sbb
insb
add
test
push
add
imul
into
sbb
xor
lcall
adc
jg
popf
mov
jno
aaa
jo
out
loopne
sti
xor
ret
call
push
mov
ja
mov
scas
mov
iret
in
xor
xchg
int3
das
shrl
or
lret
xor
inc
push
cmp
and
std
jo
inc
xor
pusha
sahf
xor
jl
mov
xor
out
xchg
sub
add
lret
out
cli
dec
pop
fisttpl
fisubrl
in
frstor
in
sub
and
call
mov
fsubs
test
fildll
xor
negb
movl
pop
and
xchg
or
mov
in
enter
xor
loop
lahf
gs
xchg
inc
daa
mov
js
js
loope
mov
nop
dec
fimuls
mov
in
jle
sahf
icebp
lret
rcrl
js
scas
jp
int3
scas
faddl
push
jb
lock
rcrl
movl
stos
add
in
inc
fsubl
xchg
mov
or
in
xor
loope
cwtl
push
loopne
out
mov
call
lahf
test
xor
pusha
cmp
sbb
rcl
sub
mov
aas
xor
lcall
dec
das
inc
out
aad
sbb
jno
or
xlat
sub
movsl
push
cmp
add
jp
out
repz
iret
jnp
insl
inc
add
fdivl
insl
ljmp
out
sub
rcll
jo
mov
dec
lock
fisubs
mov
cmp
dec
in
mov
mov
ret
lret
hlt
loopne
es
xor
jmp
add
loop
mov
clc
xor
sub
pop
lret
repz
insl
das
sub
lock
test
in
push
mov
inc
xor
jmp
fwait
insl
into
push
cmp
rclb
and
popl
addr16
xor
push
movsb
sub
out
mov
test
fistpl
wrmsr
out
call
and
jbe
ret
push
inc
aaa
or
jno
cmp
xlat
sbb
mov
popa
adc
movsb
cmc
in
sbb
fsubp
rcrl
sar
cmc
cwtl
or
jl
sti
das
data16
push
mov
sub
iret
out
insl
fidivl
dec
aas
cmpsl
cmp
lret
sub
movl
movl
mov
mov
mov
mov
or
mov
imul
and
or
and
xor
mov
jmp
jmp
pop
push
sbb
mov
test
ja
adc
adc
dec
xor
stc
push
aaa
push
les
adc
pop
mov
inc
mov
das
mov
or
gs
jns
push
in
push
sub
sub
jl
add
fsub
mov
mov
adc
mov
sub
sahf
pop
call
inc
adc
out
jmp
fs
stos
pop
sub
xchg
out
and
stos
jmp
in
pop
adc
in
into
add
jl
ret
sbb
add
xor
rorb
pop
inc
js
cltd
rorb
filds
outsb
fsts
cmp
jmp
inc
sbb
scas
add
dec
xor
fstpl
or
cmpsl
ljmp
leave
or
and
and
hlt
mov
adcb
pop
mov
mov
fists
incl
add
out
xchg
inc
jge
jnp
cs
dec
insl
xchg
lcall
fistl
mov
sub
push
shrl
or
test
mov
push
loopne
fiadds
sbb
lret
call
jnp
daa
pop
push
fcomp
cmp
shlb
pop
outsb
cmp
cmc
push
mov
xor
bound
mov
fistps
add
fisubrl
rorl
repnz
mov
add
addr16
jmp
push
into
pusha
rcrl
pop
mov
dec
xlat
cmc
or
sarl
fcomps
add
cmp
jle
mov
pop
inc
xlat
jg
inc
fs
adc
aad
leave
loopne
mov
dec
mov
or
mov
inc
sub
ret
mov
das
fsubrl
cmc
cmp
mov
ficomps
aam
fldt
sub
cwtl
or
rcrb
jbe
std
rcl
mov
ds
xor
iret
mov
pop
sub
nop
jnp
xor
sbb
dec
add
push
ja
lahf
fildl
and
inc
xor
movsb
int
cwtl
cmp
repz
xor
out
in
leave
ret
xlat
fldt
adc
cwtl
sub
fstl
mov
mov
or
ljmp
mov
add
out
lods
aad
rclb
loopne
pop
movups
rolb
loop
lret
arpl
repnz
std
hlt
inc
arpl
pop
popa
mov
test
push
and
cmp
xchg
jge
jge
sub
push
cmp
push
adc
icebp
push
shl
push
inc
aad
pop
aad
xchg
and
mov
dec
nop
je
push
jg
cmc
sub
in
jmp
fucomip
pop
test
pop
jle
les
lret
out
gs
cltd
clc
jl
jle
inc
cmpl
ja
jo
inc
aam
mov
jnp
mov
add
das
ret
mov
or
jne
ljmp
fistps
sub
daa
sbb
fstps
push
popf
push
pop
pusha
add
xor
xchg
fadds
out
rol
lods
push
and
test
pop
enter
xchg
lea
push
outsb
fstpt
adc
movsb
push
inc
mov
lods
testl
sub
mov
sub
mov
push
cmp
fidivs
arpl
adc
lods
je
or
xchg
mov
jg
insl
lahf
out
or
daa
aad
pop
jne
cmp
repz
add
xchg
jmp
inc
push
int
clc
pop
arpl
sbb
loope
test
insb
stos
loopne
jecxz
mov
jg
inc
lock
mov
aad
or
and
popa
dec
insl
aaa
sbb
je
jl
scas
orb
in
inc
inc
inc
jnp
push
jle
daa
adc
andb
js
into
sub
mov
jb
int3
jl
insb
mov
aas
dec
lods
mov
inc
lea
inc
cmp
lock
jnp
dec
xor
in
pop
xchg
rorl
or
decb
cmpsl
and
in
arpl
and
lds
xchg
and
daa
adc
dec
jb
push
mov
sbb
xor
daa
xor
pop
in
adc
xlat
enter
shl
ds
and
xchg
mov
fs
inc
pop
aas
mov
in
pop
xchg
xor
adc
add
add
ds
in
adc
dec
pop
xchg
clc
cmp
clc
sub
rorl
lock
ja
add
inc
clc
add
mov
mov
or
or
mov
sub
mov
movl
movl
mov
mov
sub
xor
sub
mov
movl
mov
movl
mov
add
mov
and
imul
and
sub
mov
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
or
or
mov
mov
xor
xor
sub
mov
sbb
mov
jmp
jbe
testb
inc
movsb
xchg
cld
dec
jle
das
jnp
test
adc
adc
flds
pop
loope
dec
mov
or
into
imulb
cmp
xchg
jns,pt
dec
insl
out
rcrb
xchg
sbb
adc
bound
jl
popf
dec
sti
test
lret
jns
push
or
xor
jle
dec
pop
imul
cmc
pop
mov
vpsraw
not
nop
pop
jo
mov
cmp
aaa
in
pop
aaa
mov
mov
cli
and
cmp
push
fpatan
insb
sub
sub
dec
es
out
fbld
jno
es
add
add
lahf
pop
add
mov
jge
mov
cmpl
jge
or
loope
cmp
xchg
inc
lret
push
loopne
or
int
pushf
and
jecxz
es
lret
mov
jg
test
std
adc
popa
mov
xchg
xlat
out
jae
dec
js
mov
ja
jns
pop
or
sbbw
mov
loop
push
loope
iret
test
cld
cmp
cmp
cltd
add
push
imul
pop
and
pop
addr16
sub
jne
pop
popf
dec
out
dec
cs
mov
sub
mov
push
loop
xorl
bound
push
pop
gs
xchg
push
pop
add
sbb
push
fwait
ljmp
imul
popa
ja
and
repnz
ss
or
hlt
je
lock
mov
pop
test
cltd
mov
dec
popa
adc
test
imul
mov
inc
or
out
push
sbb
addl
mov
imul
imull
sbb
mov
pop
cmc
cmp
and
jl
push
mov
daa
or
test
pop
nop
fs
outsb
lds
xor
fdiv
pop
outsb
bound
lret
and
add
inc
push
push
adc
mov
xlat
push
mov
xchg
sbb
in
int3
mov
out
dec
cpuid
sbb
addr16
subb
incl
shll
xchg
pop
dec
jg
xchg
cmc
aas
xchg
pushf
clc
arpl
push
clc
dec
js
lcall
in
cmpl
das
fwait
cmp
and
mov
jecxz
xor
jnp
leave
xor
fdivr
mov
push
cmp
xchg
outsl
mov
out
cld
xor
mov
push
or
dec
push
cmp
cmpsl
xlat
lods
jb
and
and
jp
sub
fimuls
or
mov
and
mov
daa
ret
pop
and
loope
cmp
popa
int
jnp
scas
cs
insl
loop
enter
call
push
and
negb
cmc
cld
stos
andb
dec
jecxz
xor
add
rep
std
dec
fsubrs
inc
inc
and
xchg
sti
mov
dec
cmp
pop
or
fcompl
ljmp
lret
jae
mov
fbld
push
dec
leave
fs
ret
xlat
inc
divl
mov
aas
mov
and
sub
fnsave
cmpb
rorb
fdivp
je
mov
lahf
rcrl
in
mov
mov
int
outsl
cmp
pop
lods
mov
repnz
out
jb
sahf
iret
inc
or
aaa
inc
imul
cmpsl
repnz
sbb
sbb
mov
jno
ss
shll
cwtl
mov
loop
lret
push
sub
jle
and
mov
fimull
and
dec
sub
adc
rclb
push
and
shrl
cld
aam
jecxz
popf
aam
out
insb
xchg
ret
popa
lock
jb
aas
mul
or
jl
lahf
rol
loope
cmp
pop
and
notl
pusha
push
push
cmp
mov
push
pop
xor
out
and
out
fst
jnp
hlt
aam
pushf
add
mov
cmp
cmp
imul
jmp
inc
icebp
jne
sbb
sbb
inc
in
gs
push
sub
aad
loop
lret
sahf
mov
pop
fcomip
inc
adc
ret
test
pusha
repnz
mov
shrl
xchg
fstps
iret
jl
cmpsl
ret
ds
test
add
movsl
fs
fsub
dec
inc
hlt
mov
ret
rcrb
mov
push
push
push
push
call
add
mov
adc
mov
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
jmp
negb
or
or
or
into
xchg
sbb
adc
adc
loop
jne
ja
and
lret
dec
add
imul
sbbl
popf
xlat
sbb
lcall
inc
cmpsl
jmp
aad
iret
dec
out
cmp
icebp
repnz
cmpsb
fstl
out
or
int3
xchg
rorl
jg
mov
cmpsb
cmp
add
adc
fistl
push
xchg
cmpsl
sti
pushf
mov
dec
out
pop
adc
dec
fwait
cmpsb
xor
test
xchg
imul
test
addl
out
gs
mull
add
out
lcall
adc
and
outsl
lods
or
neg
pop
adc
dec
mov
xor
fcmovu
cmp
jmp
inc
pop
inc
jecxz
in
pop
fmull
inc
sahf
add
in
mov
mov
ret
push
sbb
fldl
mulb
xchg
outsl
dec
xchg
dec
daa
and
es
pop
jae
ljmp
dec
lcall
iret
push
mov
jae
jecxz
cmp
sbb
xchg
stc
xor
and
or
imul
lret
jmp
lahf
dec
inc
cli
mov
sub
adc
cmp
into
es
mov
or
les
loop
in
sub
jle
stos
add
adc
jns
jbe
push
iret
cmp
cmpsl
stc
lock
cmp
fcom
mov
mov
xchg
sahf
add
mov
scas
cwtl
pop
mov
pop
sbbb
jl
push
inc
adc
and
xor
cmpsl
in
jo
sbb
cmpsl
pop
dec
inc
xor
lods
sahf
cli
int
dec
js
adc
psllq
shl
xor
call
ds
leave
adc
shl
nop
js
xor
push
sarl
sbb
cmp
dec
fdivs
out
hlt
push
dec
out
pop
xor
imul
push
ss
gs
jg
jmp
xchg
xchg
lds
mov
inc
mov
inc
cmp
call
mov
push
jmp
lea
jmp
add
cmp
outsb
lods
pop
mov
dec
sub
adc
or
dec
inc
popf
iret
inc
loop
xor
js
scas
cmpb
mov
mov
pop
push
fisttps
enter
imul
scas
and
jle
mov
xchg
pop
sbb
fsubr
dec
jecxz
fcoms
mov
or
push
jle
aaa
and
je
pop
leave
mov
mov
sbb
loopne
fsubl
adcb
cvttps2pi
push
pushf
jno
std
mov
xor
inc
dec
test
repz
aad
clc
add
push
lds
daa
ret
les
mov
test
jmp
xor
in
je
paddb
pop
test
cld
mov
test
cmp
fprem1
sarl
ret
jl
jbe
fisubl
fbstp
add
testl
mov
xor
inc
aaa
fmuls
clc
pop
mov
and
or
aam
shll
mov
and
cwtl
mov
lahf
and
insb
jnp
lret
push
ret
icebp
ret
cltd
adc
lcall
adc
sub
sarl
push
push
inc
add
add
fs
push
int
and
sub
fsubrs
test
mov
pop
xlat
popa
xchg
arpl
scas
loopne
and
fs
adc
add
pushf
xchg
xchg
cmpsl
lock
leave
bound
xchg
sahf
push
std
imul
outsb
and
mov
mov
mov
jns
jle
or
lcall
xchg
inc
push
pushf
imul
shl
js
add
shlb
imul
push
repnz
push
ds
sar
aas
inc
inc
xchg
repnz
dec
dec
cld
push
cmpsb
fstpt
push
lret
packssdw
pop
push
out
mov
test
jbe
and
mov
mov
pop
fwait
call
or
xor
mov
out
jne
sbb
fcoml
adc
js
mov
fistpll
pop
bound
mov
sub
ret
sbb
inc
arpl
and
les
xor
cmpl
addr16
or
loopne
lea
inc
mov
loop
scas
scas
lock
loop
dec
jp
jno
push
mov
lret
cmpsb
inc
das
psrld
sbb
push
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
sub
xor
add
xor
push
mov
mov
jmp
jmp
aaa
pop
xor
push
sbb
les
nop
jae
adc
adc
cld
roll
imul
xchg
sbb
pop
jae
outsl
mov
mov
jg
hlt
ud1
ret
int
fdivs
sbb
aaa
inc
cli
add
cld
push
pushf
sub
repz
push
xchg
lret
out
popa
or
loopne
xor
pop
jg
add
fneni(8087
dec
mov
or
inc
in
les
cmp
xchg
inc
ja
sbb
add
addb
std
xorl
sti
mov
push
xchg
setge
cmp
movnti
sahf
ljmp
and
mov
inc
dec
jb
add
sbb
mov
jl
aas
dec
or
in
test
jmp
mov
lods
add
pop
in
jae
out
mov
cld
scas
jg
int
xchg
ret
jl
cltd
popf
lods
in
insb
xor
add
js
ljmp
jg
mov
leave
jo
mov
mov
add
or
ljmp
out
xchg
mov
and
push
mov
xorb
cmc
and
jmp
aaa
pop
adc
xchg
and
stos
inc
mov
mov
aad
push
xor
subb
ror
es
cld
add
popf
lret
aaa
mov
adcl
pop
push
pop
mov
mov
mov
push
add
in
out
pushf
jnp
arpl
outsb
mov
shrb
or
and
jnp
stc
xor
ss
push
and
mov
std
jge
in
int3
imul
adc
fimull
sub
les
cmpsl
pop
sbb
rorb
orl
nop
xor
fcom
jbe
test
cltd
dec
stos
jb
push
stos
lea
jns
mov
fisttps
and
sti
or
lahf
and
outsl
or
rcll
scas
call
adc
loopne
sti
mov
cmp
inc
mov
inc
shlb
fwait
outsl
or
lods
add
loope
inc
fwait
jb
cltd
push
test
ss
or
xor
imul
xchg
pop
fwait
mov
popf
fs
or
xchg
xor
or
fs
ja
and
jo
lock
inc
pop
jge
icebp
adc
outsl
cmpsl
jecxz
and
add
insb
mov
popa
shrb
inc
xor
js
and
push
dec
subl
cmp
mov
sbb
mov
jmp
jno
jg
sub
mov
ret
xchg
int3
stc
insb
push
imul
jns
test
call
jns
lret
sti
ficompl
orl
rcrl
xor
loopne
and
imul
or
xor
cmpsb
cmp
insl
roll
loope
std
imul
lea
stc
inc
sub
sub
add
xor
je
sub
jne
sbb
pop
cmp
out
xor
andb
inc
and
pop
out
mov
ljmp
adc
das
cmp
or
cwtl
fwait
push
je
fbstp
mov
jne
aaa
mov
mov
cli
fnstcw
js
flds
jp
cmp
pop
dec
stos
inc
outsb
mov
scas
int3
outsb
jns
dec
int
pop
rep
outsl
mov
xor
and
stc
lahf
push
in
orb
dec
sbb
ffreep
pop
aas
cmp
loopne
lret
in
and
jle
jl
out
movb
aaa
jb
add
push
or
mov
les
jae
lock
insb
mov
and
mov
sbb
xor
mov
gs
je
inc
xchg
in
out
jns
clc
cmpsl
dec
shrb
icebp
test
push
lock
or
out
cmp
xchg
jecxz
insl
xlat
out
sub
xlat
add
in
jle
enter
sbb
rclb
orl
jae
sub
pop
xorl
pop
lea
push
mov
push
sahf
mov
mov
cwtl
int
push
inc
in
add
add
push
clc
popf
repz
or
dec
stos
cld
mov
js
out
test
cli
js
sbb
mov
sub
sbb
mov
xor
cmpsb
inc
xchg
xor
or
cli
dec
sbb
push
nop
inc
push
sbb
std
repnz
or
leave
clc
adc
and
dec
das
mov
in
out
scas
ss
inc
add
div
mov
and
lea
add
push
jmp
dec
arpl
into
mov
pop
xchg
mov
popa
clc
adc
adc
xchg
xchg
sbb
outsl
cli
xorl
mov
cmp
push
jmp
sub
das
imul
xlat
mov
daa
adc
rol
xchg
xchg
pop
js
add
dec
out
jp
push
fsubrs
mov
dec
and
dec
xchg
or
rcl
jne
inc
ficoms
xchg
enter
mov
ss
ret
pop
rol
sbb
inc
leave
pop
outsb
push
int
xchg
clc
inc
mov
ret
or
mov
mov
in
xchg
push
or
ficomps
xchg
push
popa
jne
xor
clc
fucomi
subl
pop
push
mov
movsl
dec
add
pop
sbb
loopne
mov
pop
push
adc
xchg
inc
push
dec
js
fucomip
loopne
in
sub
mov
ror
stos
xor
or
cmpsb
mov
add
negb
pusha
mov
pop
inc
scas
int
fisubl
mov
xlat
or
rcrw
fs
and
jnp
xchg
inc
add
les
mov
test
and
scas
and
cmpsb
sbb
mov
shlb
int
pop
adc
pop
sbb
sti
push
pop
or
cmp
xchg
jle
mov
jnp
out
cmpsb
imul
mov
push
sti
mov
sbb
in
mov
fldt
jo
movsl
mov
shll
pop
xor
cltd
add
pop
daa
jmp
repnz
rorl
stos
leave
in
fstpl
pop
out
inc
jae
sub
jp
stc
sub
xchg
adc
das
sub
mov
push
push
add
jmp
and
imul
pop
cmp
pop
push
and
jge
mov
mov
sub
xchg
roll
mov
pop
data16
inc
into
push
jo
andb
mov
adc
jb
push
and
mov
loope
sbb
inc
adc
pop
in
ret
and
hlt
sbb
icebp
push
out
and
dec
push
loopne
in
rolb
push
mov
cs
and
rolb
hlt
push
dec
adc
es
add
xlat
out
pop
sti
loop
jne
gs
mov
jmp
aad
jb
iret
bound
adc
and
pop
mov
shr
adc
mov
int
or
shlb
fidivrl
jae
in
push
and
xor
xor
push
push
xchg
movsl
cld
xchg
add
into
sbb
scas
test
mov
jl
sbb
xor
mov
movsl
int3
aam
lret
mov
pop
addr16
es
xor
fidivrs
push
adc
mov
shll
faddp
cmp
fcmovnb
sub
call
loop
pop
dec
fsts
imulb
rorb
inc
mov
lods
aaa
aad
popa
mov
jo
ss
adc
sub
nop
stos
jge
add
cs
mov
out
cs
xchg
dec
jle
loope
xchg
mov
fdivrs
xchg
sbb
sbb
loopne
xor
or
push
fwait
js
and
add
mov
cld
jne
movsb
negl
mov
mov
cmpb
dec
lcall
das
mov
pop
sbb
add
sbb
fnsave
mov
adc
pop
sub
inc
sub
or
lret
cmp
cltd
fimull
int3
sub
call
fisttpll
std
cmp
and
in
ljmp
xchg
cmp
cmpl
mov
scas
push
sub
fistps
lock
add
adc
pushf
push
shrl
push
enter
push
jno
imul
and
push
and
fs
insb
pop
jp
jbe
add
mov
jl
xor
inc
aaa
dec
inc
adc
test
je
imul
add
testb
sar
out
pop
insl
and
inc
lahf
push
ss
jg
clc
fcmovnbe
push
loop
adc
movsb
mov
js
sub
cmp
pop
jae
or
dec
loopew
mov
rcl
push
fnstcw
mov
sub
test
lds
das
xchg
add
ljmp
add
mov
sahf
cld
sti
clc
sub
mov
mov
mov
mov
mov
and
sub
jmp
push
mov
cmp
orl
jne
clc
adc
adc
lret
sbb
push
stc
dec
and
dec
jmp
dec
hlt
and
push
out
mov
inc
jno
mov
loope
loop
jbe
or
enter
inc
pop
mov
mov
aaa
push
scas
repnz
dec
es
ss
jno
cli
sbb
xchg
je
fidivs
icebp
movsb
in
cwtl
push
insb
fxch
pop
xchg
lods
or
cmp
xor
lods
inc
xchg
lcall
jg
adc
and
xor
push
js
sbb
leave
jnp
jle
js
shl
mov
dec
xchg
daa
mov
push
xchg
add
in
xchg
push
sbb
mov
xor
fcompl
push
lcall
xchg
dec
incl
pushf
push
dec
leave
pusha
mov
divb
mov
test
in
mov
lods
sub
fbstp
mov
enter
jg
add
imul
push
xchg
sbb
cmp
or
xchg
add
in
cmpb
sub
and
push
stos
sbb
fldt
inc
pushf
pusha
stos
sub
xchg
adc
xchg
jno
sti
pop
ss
push
mov
xchg
int
out
outsl
mov
loope
mulb
leave
push
adcb
jb
outsb
inc
inc
std
sahf
aam
or
rcl
xchg
push
popa
add
inc
push
mov
adc
adc
aaa
rolb
pop
jb
sbb
xor
fcmovu
in
sub
jge
sti
and
push
imul
int3
jg
inc
mov
sbb
adc
ds
xchg
out
aas
mov
lret
aaa
loopne
jns
aad
loopne
jnp
dec
mov
lods
pop
jbe
jmp
jae
aas
in
mov
cmpsb
subl
imul
jo
ds
pushf
add
dec
xor
sbb
scas
stc
and
jge
sub
adc
mov
cmpsl
call
in
test
aaa
aaa
sbb
xchg
cwtl
sahf
inc
pop
push
mov
sbb
rep
leave
and
fs
mov
fnstsw
in
mov
subl
pop
dec
insl
ret
mov
mov
xor
test
push
repnz
dec
and
jae
pop
cs
sub
out
adc
out
fistpll
fimuls
xchg
adc
push
call
push
iret
in
scas
or
fstl
xor
iret
test
pop
test
dec
pop
push
dec
mov
insb
xchg
shrl
mov
push
negl
xchg
gs
cmpsl
lock
cmpsb
or
divl
jnp,pt
in
sahf
stos
pop
lock
push
sbb
push
out
mov
lahf
into
ja
xchg
mov
hlt
jb
mov
dec
mov
in
lret
add
stc
cltd
pop
ffree
clc
scas
adc
add
sbb
insb
mov
xchg
nop
es
jg
jg
add
pop
jg
push
loop
mov
in
mov
les
push
leave
push
mov
imul
lret
sar
insb
cltd
cld
repz
jecxz
dec
outsb
ss
lds
ljmp
lock
jnp
or
xor
mov
ds
sbb
xorl
xor
js
lret
sbb
dec
sbb
nop
loope
popa
pop
enter
and
leave
cmp
dec
in
or
xchg
lds
inc
mov
push
and
xlat
mov
cmp
shlb
mov
adc
xchg
or
lods
jmp
mov
push
insb
pop
pop
loop
stos
ficompl
aaa
mov
xchg
xor
scas
sarb
addr16
mov
mov
mov
xchg
shlb
leave
cmp
adc
scas
pusha
clc
xchg
stos
ret
dec
in
dec
or
push
mov
jg
imul
movsb
fwait
adc
mov
xchg
jmp
lahf
test
out
jmp
dec
sub
pop
rorb
sahf
mov
mov
pusha
inc
cmc
and
ret
mov
dec
sbb
cmp
hlt
hlt
std
stc
aam
out
cli
bound
pop
mov
sbb
inc
lds
sbb
add
push
mov
adc
push
sub
mov
pop
pusha
push
lret
mov
in
addb
mov
xor
mov
add
mov
mov
add
and
mov
mov
jmp
ja
cli
orl
outsl
mov
dec
sbb
jecxz
clc
adc
adc
xchg
outsl
dec
das
xor
rcll
notb
imul
inc
bsr
sbb
lahf
sti
jae
add
ret
je
mov
loop
aas
mov
mov
test
dec
fisttpll
pop
imul
dec
call
cmp
les
xlat
push
cmp
mov
dec
test
mov
addb
je
out
xlat
sub
adc
mov
imul
push
ss
ja
jno
aad
imul
push
shrl
jl
lds
stos
xor
mov
dec
sub
sbb
dec
mov
pop
adc
dec
jb
addr16
pop
push
popa
outsl
out
repz
fimuls
movsb
popf
jmp
jb
jae
ss
jge
js
xchg
jb
insl
inc
outsl
xchg
mov
jl
sbb
pop
push
cmp
push
in
lret
test
sub
and
inc
shll
sbb
and
inc
sarl
es
push
in
lods
das
push
inc
out
das
sti
mov
fcmovu
fldt
es
mov
mov
push
and
mov
mov
lret
lret
jg
jp
cmc
mov
insb
adc
subl
sbb
push
out
hlt
mov
scas
push
and
xor
lock
pop
jno
xlat
sub
or
adc
loope
cmc
addb
out
pop
and
jbe
dec
mov
sar
lret
ret
cmp
popf
push
jp
insb
mov
mov
push
jo
cmp
sub
roll
cmp
scas
push
ficompl
lds
dec
ja
pop
test
mov
mov
inc
adcl
lods
push
movsl
sarb
push
add
sub
out
call
mov
cs
enter
mov
mov
xchg
mov
pop
loop
jle
clc
xchg
loop
pop
dec
dec
mov
data16
loop
cmpb
xchg
mov
xchg
and
pop
add
pop
jns
std
inc
and
stc
imul
fwait
popa
insl
inc
mov
movsl
adc
mov
pop
out
cmp
cwtl
jb
or
ja,pt
js
out
inc
add
inc
lea
inc
sub
aas
sbb
mov
mov
xor
adc
ss
shll
loope
inc
inc
in
mov
inc
sbb
fbld
lret
inc
into
inc
sahf
xchg
imul
mov
test
or
scas
imul
mov
or
mov
loope
hlt
adc
mov
sub
adc
jbe
mov
jns
mov
or
sub
fiadds
imul
loop
cmpsl
leave
into
filds
xchg
dec
sbb
add
xchg
jae
jg
sbb
pop
push
mov
cmc
xchg
jp
imul
inc
sub
addr16
lea
inc
and
scas
mov
in
jns
add
ret
lcall
sbb
push
dec
and
push
aam
mov
xlat
cwtl
adc
inc
test
lret
adc
jmp
mov
cmp
loopne
push
into
cltd
mov
xchg
push
ss
or
int3
add
xchg
ljmp
fsts
adc
rcrb
or
fwait
add
push
sub
loopne
and
es
jg
popl
and
dec
sti
cmpsb
std
pushf
ss
clc
jl
push
stos
or
jno
sti
mov
shrb
imul
int
sub
iret
je
fstpl
cmp
dec
out
xchg
jmp
into
xchg
loopne
pop
test
jle
cli
clc
cmp
enter
addr16
hlt
mov
and
and
pop
mov
rorl
popa
push
mov
hlt
mov
dec
fs
xlat
cmpsb
cmc
ret
fdivrl
xchg
mov
out
lds
imul
cli
mov
inc
imul
mov
ret
scas
pop
ret
in
push
dec
dec
sub
pop
push
ret
mov
sar
mov
out
ss
jne
lret
jbe
int
es
std
adc
lods
sub
xchg
mov
xor
adc
xchg
int
sarb
ret
idivl
pushf
mov
addb
stos
xor
add
mov
push
mov
xor
div
mov
xor
mov
imul
mov
sub
xor
lea
call
mov
mov
imul
mov
or
sub
and
mov
sub
cmp
jne
jmp
scas
fistpl
push
xor
aad
pop
cltd
lds
cmp
adc
mov
or
or
and
sub
rorl
stc
fimull
mov
inc
add
adc
das
sub
ret
mov
loopne
lcall
gs
pop
lret
insl
rclb
pop
cmp
pop
movl
mov
aam
mov
xchg
mov
leave
test
pusha
xchg
arpl
or
outsl
and
adc
ficompl
mov
push
faddl
mov
mov
es
and
push
sahf
dec
xchg
mov
idivb
mov
out
scas
sub
scas
adc
lods
jnp
jae
xlat
or
jmp
cmpsl
pop
sbb
les
insl
fildl
gs
aas
repz
je
iret
imul
and
add
loope
sar
push
adc
jge
leave
out
shlb
pop
adc
outsb
aad
inc
sbbl
sbb
ljmp
or
inc
pop
lock
scas
adc
cmp
shll
adc
mov
mov
ss
lcall
inc
lcall
ficompl
stos
sbb
js
or
movsb
frstor
cmp
out
cmp
xchg
js
incl
stos
adcl
imul
ret
push
xor
mov
loop
jle
fisttpll
mov
jo
cmpb
decl
outsl
in
lret
push
dec
cmc
bnd
hlt
fcompl
or
inc
fsub
fmul
dec
bound
es
pop
stos
jb
fnstenv
xor
fadd
xchg
std
sbb
push
nop
mov
dec
or
scas
js
div
sahf
inc
cmpl
stos
push
dec
aad
adc
out
xchg
xor
or
cmpsl
inc
iret
cmpsl
outsb
es
xlat
sub
testb
pop
jne
xchg
call
xchg
dec
push
push
xchg
adc
repnz
push
sti
xor
nop
mov
cmpsl
inc
add
xor
movb
ret
into
repz
hlt
cld
fidivs
test
sbb
fneni(8087
add
dec
xchg
leave
jl
cmc
dec
push
stos
dec
dec
mov
ja
add
dec
mov
pop
mov
ret
call
sbb
xchg
call
addr16
mov
sub
fs
test
mov
sbb
jp
jle
sbb
pop
cmpsl
addr16
rcrb
mov
sbb
add
adc
cmpsl
stos
mov
mov
jmp
sub
cmp
push
outsb
jne
xor
insl
ficoml
inc
mov
push
sbb
inc
outsl
lods
lock
cmp
iret
inc
xor
jns
addr16
inc
lea
mov
dec
and
mov
clc
gs
mov
inc
adc
and
xor
stos
pop
adc
xchg
xor
sub
imul
mov
xchg
xchg
push
push
movsl
dec
adc
ljmp
es
push
leave
fisttpll
ret
lods
imul
push
inc
testl
shl
push
subl
jl
jno
lds
push
rcrb
sub
jecxz
mov
pushf
and
and
jne
lcall
imul
push
fs
push
or
push
rol
sbb
xchg
mov
pop
pop
pop
roll
lret
ret
outsb
adc
dec
xlat
mov
xchg
cmp
adc
adc
test
cld
mulb
cmp
xor
jne
mov
push
pushf
xchg
mov
xchg
push
repnz
and
push
and
xor
icebp
xchg
push
scas
test
lods
rcr
mov
inc
addr16
rcll
in
fmull
add
xor
mov
popf
stos
or
adc
insl
sbb
jle
lret
jbe
add
pop
ret
jb
and
sub
pop
mov
pop
testl
pop
pop
xor
add
inc
jbe
pop
fisubrs
pop
addr16
cs
push
jae
xchg
mov
xchg
hlt
xchg
dec
mov
mov
rolb
popa
test
hlt
cltd
pop
and
inc
insb
pop
lods
adc
mov
data16
mov
jmp
enter
js
mov
int
rcrl
mov
add
and
or
repz
xchg
loopne
lahf
push
cmpsb
inc
clc
adc
adc
jmp
push
xchg
and
mov
jbe
imul
mov
fsubrs
jbe
inc
add
xor
orl
dec
push
leave
ud1
fsubr
ljmp
test
xor
push
sub
popl
sbb
shlb
pop
clc
fbstp
roll
ret
lcall
push
scas
and
push
jmp
mov
cmp
dec
cmp
pop
fisubrs
cmp
sub
fistpl
sub
adc
xor
push
push
pop
sub
inc
add
mov
int3
dec
shll
xor
testl
jbe
ss
decb
push
xor
lcall
cmpsb
loopne
cmp
repz
out
jg
cmp
lcall
loop
outsl
xchg
das
add
pop
daa
into
push
xchg
xor
add
test
jecxz
add
adc
cld
push
dec
add
popf
lahf
popa
aam
shl
imul
fcmove
std
out
push
subb
xor
pop
hlt
dec
icebp
sbb
hlt
stc
ljmp
out
outsb
dec
out
dec
push
shrl
add
push
cwtl
xchg
test
enter
cld
data16
lods
mov
into
imul
stos
xchg
mov
add
adc
mulb
dec
test
and
cltd
int
mov
cmpsb
lcall
shrl
xchg
push
test
or
cmpsb
cmp
cmpsl
sbb
mov
dec
andl
add
mov
inc
xor
scas
and
mov
push
imul
lret
mov
data16
add
add
std
xchg
jbe
push
popf
push
mov
jnp
out
dec
xor
sbb
shl
adc
movsb
loopne
pop
mov
nop
pop
aam
jle
daa
sahf
sub
cli
add
add
jp
or
fstl
fwait
pop
push
or
nop
dec
mov
repz
pop
adc
divl
sbb
adc
iret
mov
ds
scas
arpl
xchg
cmp
aad
push
lds
and
cs
out
inc
xchg
add
lahf
das
jl
sbb
mov
inc
inc
test
adc
insb
mov
je
in
pop
in
sarl
arpl
ljmp
rcr
pusha
in
pop
cmpl
ljmp
out
inc
and
ja
adc
scas
gs
sar
mov
fstpt
xchg
pop
cmp
cmpsb
cmp
cli
call
pop
in
xor
ljmp
nop
insl
mov
sbb
mov
dec
dec
push
in
or
arpl
test
or
and
out
push
mov
stos
jns
xchg
inc
lods
xor
ss
das
xor
out
xor
into
cmp
imul
push
sbb
mov
negl
pop
cmp
sarl
sbb
aam
testb
aad
or
pop
jmp
lcall
pop
mov
and
lock
xor
and
dec
iret
test
jne
adc
je
jno
scas
pop
test
inc
int3
sub
cmp
pop
mov
dec
jbe
shl
sbb
test
mov
sub
aam
jb
xor
dec
push
sbb
push
lea
pop
jbe
les
or
sub
mov
shrb
or
faddp
mov
jmp
adc
fiadds
sbb
push
xchg
inc
sub
sti
and
sub
xlat
imul
test
in
shrl
and
pop
mov
sub
cmpsl
pop
data16
and
insl
jecxz
or
inc
stos
add
pop
pop
mov
popa
and
and
mov
push
cmp
sub
and
hlt
lods
insb
movsb
dec
push
das
sbb
sub
xor
xor
not
cld
pop
movsb
aas
xlat
dec
inc
ljmp
mov
push
stc
not
fwait
mov
out
aaa
clc
in
es
rorb
xchg
pop
sbb
inc
in
add
xchg
sbb
stc
adc
sub
cltd
sbb
add
cmp
fiaddl
pusha
xchg
jp
pop
mov
testb
mov
push
pop
xor
div
xor
xor
add
xor
lea
push
mov
mov
imul
mov
and
mov
or
add
mov
and
mov
div
push
mov
add
push
mov
mov
and
xor
and
mov
mov
xor
pushl
call
mov
mov
lea
mov
incl
mov
mov
xor
jmp
imul
pop
int3
push
push
outsb
call
push
fisttpll
push
dec
in
fdivp
fwait
cmp
pop
jo
rolw
icebp
mov
xchg
cli
ljmp
jno
and
hlt
dec
lods
lret
adc
scas
jmp
lods
imul
cltd
sbb
push
lock
xor
jbe
sub
mov
pop
sub
pop
adc
repz
push
aam
outsb
aas
cmp
shlb
add
shlb
shl
daa
ss
inc
fistps
test
push
push
mov
jg
scas
adc
xor
ret
push
rolb
insb
inc
outsl
das
ret
lds
lret
jae
or
fadds
jg
cmpsl
push
lret
adc
lods
xor
mov
mov
xchg
push
push
adc
lds
jbe
dec
pop
sub
xor
stc
xor
lcall
push
and
push
imull
daa
mov
add
imul
jmp
loopne
lahf
rolb
mov
rol
push
pushf
dec
out
mov
ds
xchg
in
shll
pop
test
jp
or
filds
stc
dec
fisttpl
out
in
mov
lret
and
hlt
jno
mov
push
lods
mov
jmp
lret
scas
jle
pop
cmpsb
cld
ljmp
pop
scas
adc
inc
inc
lret
pushf
fdivr
int
dec
and
mov
arpl
dec
mov
lcall
lret
popa
mov
outsb
pop
psrld
test
pop
xchg
dec
std
loop
subb
scas
mov
pop
mov
mov
clc
pop
movsl
inc
mov
mov
mov
pushl
sub
popf
cmp
jo
jae
aas
rcrl
push
adc
xor
je
stc
aad
stc
mov
xchg
aam
mov
outsb
pop
imul
repnz
icebp
aad
out
pop
mov
lods
add
sub
sti
aas
xchg
clc
xor
jb
mov
push
push
xchg
mulb
adc
inc
int
cld
and
inc
sahf
sbbl
dec
in
js
test
xchg
xor
in
push
push
les
add
add
push
push
stc
insl
jo
add
xlat
shl
orl
fistps
fiaddl
enter
cli
push
bound
ja
jns
es
movsb
sbb
jo
push
repnz
xchg
push
mov
sub
lret
sub
sti
cs
push
lds
sbb
iret
sbb
pop
lahf
pusha
movsl
shl
cltd
call
pushf
outsb
mov
stos
fmull
mov
addr16
das
mov
clc
test
lret
pop
push
rcrb
add
xor
idivb
jnp
cli
sub
cmp
push
outsb
dec
jle
jmp
sub
ljmp
insl
fsubrs
inc
rcr
lds
push
jg
sub
outsl
jb
mov
mov
jno
adc
mov
lods
mov
stc
loop
test
push
cmp
jns
pop
testl
js
mov
cli
jecxz
mov
imul
add
dec
sub
enter
dec
rcrl
push
je
into
mov
sbb
push
fnsave
in
es
test
daa
push
cmc
movsl
cld
sbbl
add
aad
aam
xor
ja
and
shl
mov
adc
push
in
test
aaa
xor
mov
mov
mov
insl
addr16
dec
dec
cmp
xor
dec
xlat
mov
in
or
sarb
test
cmp
sbb
push
popa
mov
pop
mov
jmp
pop
pop
dec
push
scas
ss
repz
loope
cmp
and
imul
push
orl
sub
sahf
add
lods
dec
cmc
fildll
clc
shl
jge
pop
bound
push
pop
flds
cmc
dec
out
cld
dec
or
cmp
push
ds
nop
add
pop
sub
out
pop
adc
and
dec
data16
ja
aam
jle
sub
int
les
loopne
dec
or
cmp
cmp
bound
jp
mov
popf
xlat
mov
mov
xchg
inc
jo
or
add
xchg
add
pop
mov
push
icebp
mov
dec
fdivrl
loopne
xchg
add
insl
sbb
insb
orl
or
dec
mov
cmp
add
fs
das
jbe
ja
loop
mov
xor
xor
and
cmp
jne
cmp
jne
mov
jmp
lea
mov
jmp
lahf
bound
push
mov
lret
mov
clc
adc
adc
arpl
jmp
pop
fwait
and
int
xchg
scas
test
movsl
mov
je
xlat
adc
sahf
into
pop
pop
xchg
repnz
lret
ficompl
mov
and
icebp
inc
push
stos
adc
popf
mov
sti
inc
out
cmpsb
cmp
mov
pop
adc
pop
pop
sub
sub
mov
dec
and
shrl
les
dec
movsb
repz
inc
xor
push
mov
add
jmp
push
cmp
hlt
xor
inc
push
cmp
stos
or
lea
mov
popf
cmp
jno
insl
dec
mov
sub
jp
test
pop
xlat
fisttpll
pushf
push
xor
push
sbb
addr16
mov
sbb
inc
popa
ret
mov
mov
fsub
mov
cmpsb
add
sub
pusha
or
lcall
jle
sub
xchg
fcomi
outsl
jne
test
sbb
adc
les
mov
xchg
insl
daa
ja
xor
sbb
inc
fisubs
loope
arpl
enter
out
outsb
sbb
iret
and
xchg
test
mov
inc
fbstp
sbb
add
sub
daa
leave
cmp
outsb
stos
sarb
jge
add
aas
sbb
mov
ror
scas
fadds
mov
cmp
cltd
int
hlt
mov
mov
xchg
outsb
xor
jb
mov
cmp
ret
ds
add
out
and
nopl
mulb
mov
cmovno
movsl
fldt
push
mov
mov
movsb
mov
xchg
jno
inc
fldln2
rorl
outsl
imul
pop
ret
pusha
std
outsl
test
insl
mov
into
inc
inc
aam
fucomip
pop
aaa
dec
scas
sbb
sarb
mov
fstps
adc
lods
pop
mov
jno
jl
xor
fldlg2
xchg
jne
mov
xor
sarl
mov
leave
mov
push
popf
daa
cmp
push
fiaddl
stc
in
adc
pushf
jbe
gs
jb
and
inc
les
scas
lret
fxch
cmp
pop
mov
test
xchg
les
push
mov
js
mov
divl
sub
inc
push
adc
sub
mov
push
js
dec
ja
lret
ljmp
popa
cmp
mov
imulb
jmp
inc
test
push
sbb
cmp
jge
arpl
cmpsl
push
adc
and
push
sub
mov
fidivs
cli
fwait
into
add
push
sbb
mov
call
ljmp
jne
fnsetpm(287
and
adc
lret
aas
xor
lods
jmp
sbb
scas
popf
mov
and
aam
push
jns
pop
movb
mov
pop
jl
frstor
nop
mov
pop
add
addb
fiadds
inc
mov
push
adcb
rcll
sbb
cltd
cli
jae
enter
xor
inc
inc
mov
ss
cltd
stc
dec
not
mov
in
out
gs
cld
dec
add
cmpsl
inc
push
test
jns
jne
inc
test
lret
stc
xchg
dec
cmp
and
daa
loopne
scas
pop
add
shr
int
or
stc
xchg
jecxz
cwtl
push
jl
jae
inc
je
int3
outsb
into
ret
lods
xchg
push
pop
jno
xchg
pop
add
mov
xchg
mov
fdivrl
hlt
jo
or
xchg
es
xchg
pushf
sub
clc
frstor
mov
data16
addr16
cmovs
dec
int3
mov
iret
out
pusha
pop
lds
pop
popf
xchg
push
jo
jecxz
sbb
jne
mov
loop
movsl
pop
push
fsubs
and
or
dec
je
mov
jl
out
jno
mov
pop
push
jns
leave
xor
mov
int3
dec
inc
out
ret
xchg
test
mov
push
sarl
adc
cltd
test
push
mov
cli
push
sub
outsl
ret
in
inc
or
push
fsubp
mov
mov
mov
mov
mov
add
aam
movsb
jns
std
mov
int
dec
pop
data16
pop
mov
jnp
pop
enter
inc
jle
scas
call
pushf
shlb
mov
xchg
jbe,pt
jno
xor
hlt
js
sub
jns
jl
add
mov
jmp
mov
push
mov
into
mov
das
jnp
and
adc
push
ja
mov
xchg
mov
mov
or
adc
sbb
jl
ret
hlt
in
movsl
xchg
movsl
nop
xchg
inc
or
pop
pop
pop
dec
xchg
cwtl
daa
stos
cmp
and
arpl
notl
jle
insb
dec
push
imul
lret
sbb
in
call
cmp
sub
test
mov
add
jnp
mov
mov
scas
in
push
lods
cmp
xchg
dec
repz
fistps
stos
ss
jle
sbb
imulb
cmpsl
bnd
push
pushf
jg
and
or
cmp
cmpsb
xchg
inc
std
imul
push
adc
jp
decb
and
mov
arpl
sbb
sub
pop
out
add
jp
outsl
cmp
sbb
xchg
test
data16
icebp
clc
and
dec
xor
inc
enter
dec
icebp
repnz
cli
into
xor
adc
and
je
pusha
popf
xchg
push
pop
shl
add
les
loope
jmp
lcall
push
in
ret
imul
arpl
loop
icebp
and
outsl
push
push
xchg
lcall
mov
xchg
jae
call
pop
loop
mov
pop
pop
adc
out
mul
adc
jns
std
cmpsb
cmp
and
mov
or
es
fcom
inc
mov
mov
dec
iret
mov
cmp
push
aaa
outsb
clc
and
in
push
es
ret
add
test
repnz
data16
bound
xor
xchg
mov
enter
lods
movsl
jg
test
mov
push
clc
cmpsb
enter
daa
sub
loope
nop
js
andl
inc
mov
and
cltd
lcall
repz
xchg
xchg
testb
test
insl
cli
add
repz
int
neg
cmc
mov
idivb
dec
or
dec
out
fucomi
lods
enter
mov
mov
and
xchg
cltd
loope
sub
arpl
stos
xchg
jle
jge
stos
push
icebp
std
or
adc
mov
mov
out
mov
mov
xorb
fmuls
mov
mov
mov
mov
fldenv
add
xor
es
pop
in
std
xlat
xchg
jnp
push
mov
sbb
lea
loopne
or
and
adc
scas
add
aas
inc
xchg
cmp
int
mov
cmp
xchg
shrb
sti
jns
cli
push
stos
cmp
in
mov
mov
fisttpl
fstpt
xchg
xorb
movsb
lods
notl
mov
add
cmp
xchg
stos
std
insb
cmp
jg
jp
fcmovnu
mov
mov
test
mov
orb
push
je
das
xchg
sbb
cmp
jne
cmc
mov
sub
or
in
sub
popf
lahf
imul
in
jb
movsb
cmp
jne
mov
fists
mov
mov
xchg
sbb
mov
and
adc
mov
mov
ss
or
cli
add
pop
xchg
lret
or
dec
push
sub
add
leave
sbb
lcall
dec
mov
iret
pop
and
shrb
push
sbb
push
inc
mov
ljmp
or
dec
xor
mov
gs
mov
movsb
sbb
scas
aas
adc
aad
and
adc
and
into
test
test
cli
sub
lret
andl
jl
xlat
or
lock
sbb
es
je
pop
and
fs
adc
push
fiaddl
jno
and
push
push
das
sub
xor
rorb
addr16
test
lret
sub
rclb
mov
push
les
lock
cld
fadds
pop
and
fisubl
adc
push
mov
or
ds
mov
pop
into
push
push
lods
insl
lds
pop
or
pop
cmp
in
shll
fisubl
stos
repz
fnsave
aad
and
cmp
insb
jne
shrb
push
stos
test
aam
dec
out
div
in
imul
dec
in
fildl
mov
push
sub
int3
mov
mov
mov
mov
sub
mov
mov
mov
sub
jmp
sbb
xchg
and
ja
test
or
adc
jecxz
mov
xor
aas
out
rorl
lods
stc
mov
and
add
ret
out
xchg
lods
ret
mov
insl
or
push
imul
mov
mov
loop
outsb
and
mov
push
inc
xchg
ret
mov
mov
push
sahf
pop
bound
cmpsb
jg
mov
jecxz
xchg
rolb
sbb
mov
pushf
popf
jo
dec
push
lcallw
aad
dec
jl
repz
mov
xchg
sub
sti
jl
cmpsb
fiadds
gs
xchg
mov
add
mov
sbb
add
pop
in
out
inc
push
hlt
stc
or
adcl
aad
jae
or
mov
es
dec
mulb
mov
jae
ja
mov
inc
iret
roll
sub
pushf
push
xor
xor
out
dec
andb
pop
or
icebp
cld
pop
mov
lcall
pop
shll
mov
push
sbb
in
pop
sbb
cmp
mov
pop
out
imul
fistps
jmp
pop
pop
shll
loopne
jmp
std
inc
mov
in
dec
mov
dec
cmpsb
inc
pusha
lret
and
pop
movsl
idiv
xor
or
sbb
pop
and
dec
mov
push
dec
lods
out
ficoml
leave
popa
mov
pop
jmp
and
rcrl
addl
std
push
ret
in
ss
sbb
sti
outsb
iret
pop
pop
lret
or
stc
sub
and
or
mulb
inc
cmp
and
out
mov
adc
in
dec
fists
sbb
lods
lahf
or
pop
divl
mov
imul
mov
inc
aam
mov
icebp
push
lods
les
pop
xchg
mov
dec
cmp
fstpl
jb
add
testb
push
dec
xchg
test
jo
fs
stos
or
notl
xchg
add
or
pop
pop
cs
sbb
xor
js
lods
sub
mov
out
adc
orb
push
xor
xor
mov
daa
cs
enter
popf
cmpsl
hlt
jae
sub
sub
loop
xor
pushf
cld
rorl
aad
out
aas
xchg
sbb
mov
jp
or
sub
sbb
mov
fists
mov
and
lret
daa
pop
adc
sti
lds
xchg
cwtl
fbstp
cmpb
sub
mov
ljmp
inc
xchg
dec
inc
int
dec
stos
iret
xchg
enter
pop
and
frstor
add
out
test
mov
push
in
mov
mov
scas
sub
stc
push
popa
push
mov
mov
cltd
mov
push
pop
neg
mov
int3
cmpsl
pop
mov
jge
pusha
mov
cs
lea
push
mov
iret
mov
and
and
repz
adc
xchg
movsl
and
rcr
cli
inc
jg
xor
fsubrl
into
mov
rorb
pop
pop
scas
mov
out
inc
jl
xor
adc
dec
fimull
shrl
rol
stos
push
lods
frstor
mov
or
and
fcomp
ret
inc
in
addr16
rcrb
lcall
xchg
mov
mov
mov
icebp
loopne
jb
xor
jno
lretw
stos
movsb
repz
and
jb
in
clc
in
icebp
pop
out
dec
insb
stc
inc
sbb
mov
cmpsb
repz
mov
je
cmpsb
loopne
pop
mov
jp
add
les
mov
fcomps
dec
lcall
repnz
adc
out
nop
test
dec
shr
cmp
cmpsb
lret
stos
test
mov
xchg
and
into
aas
scas
pop
jns
roll
mov
insb
mov
sbb
mov
cs
pop
adc
or
mov
add
loop
je
cmp
inc
movsl
mul
lret
in
lahf
test
cmpsb
push
sub
cmp
ds
rorb
dec
pop
mov
stos
xchg
or
leave
pop
push
cmpsb
mov
inc
jle
adc
in
jmp
mov
dec
aas
push
mov
and
ret
out
push
ss
sub
fwait
insb
inc
mov
movl
jmp
mov
test
adc
inc
and
cmp
adc
adc
pop
jnp
adc
mov
ljmp
cmp
push
movsb
sub
sub
mov
inc
fcmove
cmpsb
sub
sbb
sbb
mov
rcr
dec
push
shlb
sbb
and
cld
lret
mov
subl
push
notb
ficomps
pop
ss
aad
insl
xor
popa
sub
fiaddl
mov
jl
cmp
notb
mov
icebp
movsl
flds
dec
dec
out
mov
icebp
jp
adc
das
jle
dec
inc
cmp
ficoml
fcmovb
sti
inc
pop
ljmp
jle
add
sub
pop
mov
jbe
xchg
arpl
cmpsl
or
mov
and
ds
movsl
mov
push
fildll
add
enter
push
push
xchg
lret
gs
movsl
pop
lahf
insl
sub
sbb
xchg
fists
inc
pushf
fwait
lret
in
lock
fisttpl
mov
inc
or
pop
mov
cmp
rorb
cwtl
dec
add
aad
addb
dec
shlb
sub
pop
lods
or
aad
mov
das
or
xchg
ds
jl
aam
stc
xor
in
mov
dec
mov
mov
rorl
sbb
lahf
fs
dec
xchg
push
jnp
or
movsb
sbb
add
inc
mov
test
outsl
or
push
fldt
xchg
xchg
jbe
jle
adc
xor
pmaxsw
dec
jnp
dec
loopne
cmp
and
scas
mov
jae
fdivs
push
mov
pop
cmp
pop
fwait
outsl
push
inc
std
jns
dec
pop
inc
ret
xchg
adc
and
enter
cmp
sub
add
mov
lcall
addr16
mov
enter
inc
cmpsb
test
xor
dec
dec
xor
sbb
pop
ljmp
pop
sub
jmp
dec
in
dec
push
and
stos
push
shr
rcr
lret
jns
cmp
xor
mov
mov
fcmove
pop
pop
popf
or
mov
and
mov
jge
push
jnp
pushf
nop
xchg
outsl
enter
sbb
and
push
test
mov
call
aad
leave
out
jbe
movsl
inc
outsl
lods
bound
aas
mov
std
dec
xorb
idivb
sub
pop
dec
fidivrl
add
pop
test
movl
push
cmp
mov
dec
pop
cs
mov
pop
cmp
mov
xchg
clc
lods
pusha
ds
mov
xchg
test
scas
in
js
fwait
jecxz
push
and
cwtl
jp
pop
sbb
mov
fidivl
out
xor
push
sbb
pop
ds
or
mov
mov
push
inc
cmp
das
stos
call
imul
sbb
bound
in
push
fisttpll
and
pushf
std
fbstp
shld
pushl
vpunpcklqdq
xor
cwtl
arpl
adc
fisubs
jb
and
pusha
cmp
add
popf
sbb
stc
xor
sbb
inc
xor
dec
notl
repnz
test
jp
out
and
pop
mov
shrl
movl
shl
adc
adc
pop
cmp
scas
and
int
mov
sub
shrb
jge
pushf
les
lahf
lods
cltd
jns
sbb
mov
ss
or
xor
orl
iret
xlat
xor
dec
rclb
lods
pop
pop
xchg
aad
das
jb
cmpb
dec
or
xchg
in
mov
pop
mov
xchg
push
or
frstpm(287
sbb
and
lret
outsb
jne
stos
push
sub
sbb
es
sbb
adc
push
mov
pop
sub
and
push
inc
xchg
mov
add
push
sub
invd
or
mov
pop
mov
stos
add
std
jmp
xchg
sbb
push
push
adc
pop
mov
stos
add
popf
or
push
adc
sbb
xlat
push
testl
xor
pop
divb
xor
enter
in
pop
in
cmp
cmp
dec
cwtl
pop
jno
iret
movl
mov
mov
mov
mov
jmp
notl
sub
das
cmc
ljmp
add
adc
notb
adc
cltd
fwait
shl
and
sbb
out
out
adcb
add
jb
or
xchg
push
pop
loop
inc
and
aad
add
and
xchg
lcall
xchg
gs
sub
and
insb
jmp
sbb
imul
inc
jb
mov
sbb
lcall
in
shlb
adc
stos
les
hlt
ret
sub
insl
movsl
adc
sub
and
bound
aaa
lahf
add
popf
in
test
lods
pop
scas
scas
pop
add
fsts
push
sub
inc
je
outsb
aaa
fsubs
aad
inc
imul
cmp
shl
mov
mov
xchg
repz
repnz
aaa
jo
jle
negb
xchg
sahf
xchg
stos
nop
cmp
pop
shrl
cmpsw
push
fldenv
outsl
mov
hlt
or
lds
rorb
sub
inc
push
call
xlat
sbb
mov
lods
dec
scas
mov
ljmp
pop
cmpsl
pop
lods
testl
push
dec
dec
xchg
dec
orl
push
xchg
lcall
je
pusha
popa
fwait
pushf
not
jbe
gs
or
shlb
pop
rorb
in
cmpl
or
sbb
scas
cltd
mov
mov
aaa
push
cmp
pushf
in
nop
loop
cltd
pop
sbb
lods
aas
inc
fcompl
pop
inc
cmp
inc
sbb
and
out
loopne
nop
jae
or
notb
xor
fildll
fs
push
inc
jnp
mov
xor
or
fdivrl
mov
lahf
mov
rcrb
fldenv
and
jbe
repz
fsqrt
sbb
cmp
imul
xor
insb
mov
jg
xor
lock
pop
mov
sub
inc
aad
cmp
mov
xor
add
pushl
pushl
pushl
pushl
pushl
push
push
pushl
mov
call
mov
mov
mov
call
mov
push
add
push
push
call
mov
jmp
mov
mov
pop
leave
ret
push
mov
sub
movl
movl
movl
push
movl
mov
mov
push
push
push
call
mov
mov
or
and
add
xor
mov
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
xor
mov
mov
lea
mov
mov
or
mov
mov
or
mov
mov
sub
add
xor
xor
lea
mov
sub
mov
movl
movl
movl
movl
movl
mov
and
add
mov
and
mov
imul
mov
xor
div
mov
push
sub
mov
mov
movl
movl
mov
sub
xor
pop
div
mov
xor
push
sub
add
mov
mov
movl
movl
mov
pop
div
mov
xor
xor
imul
sub
div
mov
xor
mov
movl
movl
movl
movl
movl
mov
mov
and
mov
div
xor
add
mov
div
sub
leave
ret
push
mov
sub
push
push
mov
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
xor
mov
xor
mov
or
mov
mov
mov
or
or
or
add
cltd
adc
cmp
jne
cmp
je
mov
mov
mov
mov
push
push
or
or
push
push
call
mov
mov
mov
add
adc
and
and
mov
sub
mov
sbb
mov
mov
mov
xor
cmp
jne
cmp
jne
mov
mov
xor
or
mov
or
lea
xor
mov
mov
and
imul
mov
xor
sub
mov
and
sub
mov
mov
xor
or
xor
div
mov
push
push
sub
lea
mov
mov
mov
xor
imul
and
lea
mov
add
mov
mov
mov
mov
and
and
and
and
push
push
call
mov
xor
xor
add
adc
xor
xor
xor
cmp
jne
cmp
jne
mov
mov
and
xor
div
mov
sub
mov
add
mov
add
add
add
mov
pop
pop
leave
ret
push
mov
sub
push
push
push
movl
movl
movl
movl
movl
xor
inc
mov
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
movl
movl
movl
movl
mov
mov
push
mov
push
xor
xor
push
push
call
push
mov
push
push
push
call
mov
mov
sub
mov
sbb
add
adc
mov
mov
xor
push
push
xor
xor
push
push
shr
mov
call
push
push
push
push
call
mov
mov
sub
sbb
add
adc
shld
shl
or
mov
xor
or
mov
xor
mov
mov
mov
mov
mov
mov
push
push
push
push
call
mov
mov
push
push
and
and
push
push
call
mov
mov
mov
xor
xor
add
mov
adc
mov
mov
mov
mov
mov
mov
xor
mov
mov
xor
push
mov
push
xor
xor
push
push
call
mov
mov
add
adc
add
adc
xor
xor
mov
shrd
mov
mov
mov
mov
mov
xor
mov
xor
xor
mov
push
push
xor
push
push
shr
call
mov
mov
add
xor
or
sub
shl
or
mov
mov
mov
mov
mov
mov
or
or
add
adc
and
mov
and
mov
xor
xor
and
and
add
mov
pop
adc
pop
mov
mov
pop
leave
ret
push
mov
sub
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
or
sub
mov
and
imul
mov
mov
xor
mov
sub
mov
xor
add
cmp
jne
mov
mov
or
mov
imul
add
mov
push
mov
push
mov
or
mov
imul
add
mov
or
or
mov
add
add
mov
xor
xor
mov
mov
shl
mov
add
add
mov
mov
mov
imul
or
imul
mov
sub
pop
pop
cmp
je
mov
jmp
mov
mov
sub
add
add
add
xor
jmp
movl
movl
mov
mov
or
sub
add
leave
ret
push
mov
and
sub
push
push
lea
mov
mov
mov
mov
sub
sbb
mov
orl
orl
lea
push
lea
push
call
mov
mov
pushl
mov
pushl
mov
pushl
pushl
pushl
pushl
pushl
call
pop
pop
mov
pop
ret
push
mov
sub
push
push
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
xor
imul
or
mov
mov
xor
mov
and
mov
or
and
xor
sub
mov
sub
mov
mov
xor
add
div
mov
mov
or
mov
sub
add
cmp
ja
push
movl
movl
movl
movl
movl
mov
mov
mov
and
xor
div
mov
mov
xor
or
xor
div
mov
mov
sub
sub
mov
mov
mov
mov
mov
mov
mov
mov
xor
mov
xor
and
xor
mov
div
add
mov
mov
xor
mov
and
mov
or
and
xor
mov
sub
mov
mov
xor
add
div
mov
or
mov
sub
add
cmp
jbe
pop
pop
pop
leave
ret
push
mov
sub
push
sub
push
push
mov
mov
sub
or
mov
mov
shrd
mov
mov
sub
imul
shr
sbb
mov
mov
xorl
mov
mov
mov
and
xor
xor
notl
or
sub
mov
mov
and
shl
sub
mov
not
shrd
dec
xor
add
shr
or
mov
cmpl
jg
xorl
jmp
push
push
push
push
push
push
push
call
mov
xor
or
mov
mov
mov
sub
mov
sbbl
mov
addl
mov
mov
mov
xorl
mov
xor
xor
xor
xor
xor
adc
mov
xor
cmpl
jge
jmp
push
pushl
pushl
pushl
call
shl
mov
mov
shld
shl
movl
movl
movl
cmp
movl
jne
movl
cmp
movl
je
sbb
mov
mov
xor
mov
mov
xorl
xor
sbbl
xor
orl
xor
shld
movl
shl
cmp
movl
jne
cmp
movl
je
addl
mov
mov
xorl
shl
cmpl
jbe
jmp
call
mov
xor
shr
or
mov
mov
mov
cmpl
jb
and
movl
jmp
pushl
pushl
pushl
push
call
mov
mov
mov
push
pop
orl
sub
xorl
mov
add
xorl
mov
lea
add
mov
cmpl
jle
mov
and
mov
and
jmp
push
call
mov
mov
xor
shr
shl
or
mov
adc
movl
mov
inc
mov
andl
xor
shr
orl
shl
or
subl
push
adcl
lea
addl
push
lea
push
call
or
mov
mov
xor
neg
shr
shl
andl
or
or
push
lea
push
mov
orl
mov
shrd
shr
mov
mov
xorl
xor
xor
sbbl
or
addl
lea
push
sbbl
shl
call
decl
mov
mov
cmpl
jl
add
jmp
pushl
call
xor
shl
shr
or
push
lea
push
mov
cmpl
jge
xor
xor
add
adc
mov
jmp
push
push
push
push
pushl
push
pushl
push
push
call
mov
shrd
orl
shr
mov
mov
sbbl
xor
shl
addl
xor
movl
or
negl
lea
xorl
push
sbbl
call
adc
mov
cmpl
jl
adcl
jmp
push
pushl
push
push
pushl
call
mov
xor
shl
shr
or
push
lea
mov
and
mov
push
cmpl
jle
subl
jmp
push
push
push
call
mov
mov
shrd
shr
mov
mov
xor
addl
xor
movl
or
shl
mov
mov
sbbl
shrd
shr
mov
sub
mov
xor
xor
or
addl
add
sbbl
lea
addl
push
orl
shl
negl
call
mov
not
mov
shl
xor
shr
cmpl
jle
xor
jmp
pushl
push
pushl
pushl
call
or
push
lea
push
mov
mov
adc
shrd
shr
mov
mov
xor
cmpl
jbe
subl
sbb
jmp
pushl
push
call
shl
mov
xor
or
mov
shrd
orl
shr
mov
cmpl
jl
jmp
push
push
pushl
call
mov
xor
xor
or
add
mov
shl
or
mov
sub
shrd
shr
decl
mov
add
mov
sbbl
xor
subl
xor
orl
or
andl
add
lea
push
shl
call
mov
mov
sub
and
mov
cmpl
jl
jmp
push
push
push
pushl
call
mov
xor
shr
shl
or
mov
lea
push
dec
mov
mov
cmpl
ja
xor
jmp
push
push
push
call
shrd
shr
mov
mov
xor
xor
cmpl
jle
add
jmp
push
push
pushl
pushl
pushl
call
or
push
mov
mov
push
pushl
shl
xorl
call
sbb
lea
adcl
push
mov
mov
sub
xor
mov
mov
add
mov
mov
xor
mov
shrd
adc
shr
xor
xor
and
mov
cmpl
jle
adcl
jmp
push
call
mov
xor
xor
or
push
mov
push
pushl
sbbl
shl
subl
call
sbb
mov
mov
mov
add
mov
and
mov
mov
not
mov
mov
rol
mov
and
mov
mov
adcl
xor
movl
mov
cmp
je
movl
mov
mov
movl
mov
xor
mov
mov
mov
mov
xor
xor
shld
shl
mov
movl
mov
mov
xor
inc
mov
mov
mov
movzwl
mov
cltd
idiv
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
imul
mov
and
mov
and
mov
imul
mov
sub
mov
cmp
ja
mov
mov
mov
shrd
shr
mov
xor
shl
mov
xor
or
mov
xor
xor
shrd
shr
mov
mov
mov
mov
xor
or
mov
shl
or
xor
cmp
ja
jae
mov
mov
movb
movb
movb
movb
mov
movzbl
mov
xor
mov
imul
movzbl
xor
and
add
mov
movb
movb
mov
mov
and
or
imul
mov
cmp
ja
movb
movb
movb
mov
mov
and
or
add
mov
movzbl
cltd
movzbl
idiv
mov
movb
movb
movb
mov
mov
xor
sub
mov
movzbl
movzbl
cltd
idiv
mov
cmp
jb
mov
mov
shrd
shr
mov
mov
xor
xor
or
sub
shl
mov
mov
shrd
shr
mov
mov
xor
xor
shl
mov
or
ror
jmp
mov
mov
mov
mov
mov
shrd
shr
mov
mov
xor
xor
or
shl
add
mov
mov
xor
xor
shrd
shr
mov
mov
mov
mov
xor
or
mov
shl
or
xor
cmp
jb
ja
cmp
jb
mov
decl
jne
mov
mov
shrd
shr
mov
mov
xor
xor
or
push
add
push
lea
push
shl
call
mov
mov
shrd
shr
mov
mov
xor
xor
or
add
push
push
mov
shl
mov
shrd
shr
mov
mov
xor
xor
or
add
push
shl
call
push
lea
push
mov
mov
shrd
shr
mov
mov
xor
xor
or
add
push
shl
call
mov
mov
shrd
shr
mov
mov
pop
xor
xor
pop
shl
or
pop
leave
ret
sbb
mov
mov
or
mov
jne
neg
mov
mul
ret
addl
push
sbbl
mul
and
mov
mov
mull
addl
add
mov
mul
add
pop
ret
push
mov
sub
push
push
xor
inc
mov
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
movl
mov
mov
sub
mov
or
mov
imul
mov
sub
or
add
sub
shr
lea
mov
mov
mov
and
xor
xor
div
mov
sub
cmp
ja
push
movl
movl
mov
mov
xor
sub
and
xor
mov
sub
sub
mov
mov
xor
mov
div
mov
xor
sub
div
mov
mov
add
sub
mov
mov
mov
sub
or
mov
xor
xor
add
mov
sub
or
add
shr
lea
mov
mov
mov
and
xor
xor
div
sub
cmp
jbe
pop
pop
pop
leave
ret
push
mov
and
sub
push
push
xor
push
mov
inc
pushl
pushl
call
test
je
mov
mov
mov
xor
or
add
mov
mov
xor
add
sbb
mov
mov
cmpl
jg
sbb
jmp
push
push
push
pushl
push
call
movzwl
mov
xor
mov
sub
mov
or
cmpl
jle
jmp
push
push
pushl
push
call
mov
imul
movzwl
and
mov
mov
mov
and
mov
mov
or
mov
movl
cmp
jne
movl
inc
movl
xor
movl
movl
cmpl
ja
xor
or
jmp
pushl
call
movl
movl
mov
mov
and
xorl
sub
xorl
or
addl
mov
sub
cmpl
jb
sub
jmp
pushl
push
pushl
call
pushl
mov
mov
imul
xor
div
or
mov
orl
pushl
addl
pushl
xorl
pushl
imul
sbb
mov
xorl
sub
incl
pushl
call
adc
movl
mov
xor
add
sub
movl
sbbl
mov
or
movl
orl
movl
cmpl
jl
sbb
jmp
push
pushl
push
push
pushl
call
movl
mov
xor
mov
div
mov
subl
xor
adcl
xor
or
sub
not
mov
pushl
cmpl
jbe
andl
jmp
push
push
push
push
call
mov
and
imul
mov
xor
pushl
or
mov
xorl
div
mov
subl
xor
xor
subl
div
cmpl
jle
andl
sbb
jmp
push
push
push
pushl
call
mov
xor
or
div
mov
sub
addl
pushl
subl
pushl
call
andl
movl
movl
cmpl
jbe
and
jmp
push
push
pushl
push
call
mov
mov
and
or
or
mov
orl
movl
movl
xorl
movl
dec
movl
cmp
movl
jne
addl
movl
cmpl
jl
inc
jmp
push
call
mov
mov
movl
mov
call
lea
mov
lea
or
mov
mov
or
mov
mov
decl
mov
xor
xor
shl
shr
or
cmpl
ja
jmp
push
push
push
call
mov
mov
mov
mov
mov
mov
mov
movl
shrd
cmpl
jg
mov
mov
xor
jmp
push
call
shr
mov
mov
mov
movl
xor
xor
or
subl
mov
push
pushl
xorl
lea
addl
push
shl
call
lea
orl
push
sbbl
mov
mov
orl
lea
sbbl
push
orl
mov
andl
lea
mov
mov
addl
mov
sbbl
push
call
movl
push
sbbl
push
xorl
pushl
addl
call
mov
add
mov
xorl
mov
mov
orl
shr
xorl
shl
subl
or
mov
adcl
xor
mov
addl
lea
sbb
mov
lea
cmpl
jle
inc
jmp
pushl
push
push
call
mov
mov
sub
lea
xor
movl
mov
xor
movl
mov
xor
mov
mov
cmpl
jge
dec
jmp
push
push
call
mov
or
or
push
push
push
push
call
cmpl
ja
notl
jmp
pushl
push
push
push
call
or
mov
or
mov
movl
movl
movl
cmpl
jle
jmp
pushl
call
push
movl
mov
mov
push
push
push
call
mov
sub
mov
addl
and
and
mov
xor
xor
sub
sub
mov
cmpl
jb
or
jmp
push
pushl
call
mov
add
adc
xor
xor
cmp
movl
jb
ja
movl
cmp
movl
jbe
mov
or
mov
movl
movl
movl
xor
movl
movl
movl
mov
andl
mov
orl
mov
add
mov
adcl
and
incl
and
or
xorl
or
xorl
add
mov
movl
adc
mov
andl
add
movl
mov
mov
adc
mov
cmpl
jl
orl
jmp
pushl
call
movl
movl
movl
movl
movl
movl
mov
xor
mov
mov
add
mov
xor
orl
xor
orl
and
mov
adcl
and
mov
push
push
sbbl
push
push
movl
call
sub
mov
sub
mov
add
movl
adc
or
or
cmp
movl
jne
movl
cmp
je
cmpl
jg
or
jmp
push
pushl
push
call
mov
mov
mov
xor
xor
xor
orl
shld
movl
shl
movl
cmp
jne
cmp
movl
je
mov
movl
cmp
je
incl
mov
mov
mov
mov
cmpl
jg
andl
jmp
push
call
xor
xor
shrd
mov
shr
shl
or
mov
adcl
xor
orl
or
movl
cltd
movl
cmp
jne
movl
cmp
jne
movl
sub
movl
cmpl
ja
jmp
push
pushl
call
mov
mov
mov
mov
xor
xor
xor
addl
shld
shl
movl
cmp
movl
jne
movl
cmp
movl
jne
xorl
movl
xor
mov
mov
mov
sub
shrd
add
shr
mov
sub
mov
subl
xor
adcl
shl
xor
or
movl
mov
mov
cmp
movl
jne
addl
movb
orl
movb
sbbl
mov
decl
mov
sbbl
add
movzbl
addl
cltd
movzbl
adcl
idiv
mov
orl
movb
orl
movb
andl
movb
orl
mov
mov
and
imul
mov
and
mov
xor
cmp
je
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
add
adc
xor
mov
xor
mov
sub
mov
sbb
mov
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
or
or
xor
mov
xor
mov
push
push
push
push
call
push
push
push
push
call
mov
mov
push
push
push
push
call
mov
mov
cmp
jb
ja
cmp
jb
mov
mov
shrd
shr
mov
mov
xor
xor
or
push
push
push
lea
push
lea
push
shl
call
pushl
pushl
pushl
pushl
call
mov
mov
shrd
shr
mov
mov
shl
xor
xor
or
mov
mov
mov
mov
shrd
shr
mov
mov
shl
xor
xor
or
mov
mov
mov
mov
mov
cmp
jne
mov
mov
mov
cmp
jne
xor
inc
mov
mov
mov
mov
mov
mov
mov
movzwl
movzwl
and
mov
xor
cltd
movzwl
idiv
push
pop
mov
xor
inc
mov
mov
mov
mov
movzwl
cltd
idiv
mov
movzwl
movzwl
cltd
idiv
mov
add
cmp
jb
lea
push
lea
call
cmp
jne
cmp
jne
xor
jmp
mov
jmp
mov
mov
mov
mov
add
adc
mov
mov
push
push
lea
push
call
mov
push
pushl
lea
push
call
mov
mov
mov
mov
mov
mov
mov
lea
mov
add
mov
mov
mov
mov
movzwl
mov
imul
mov
imul
add
xor
mov
mov
mov
mov
mov
mov
mov
mov
xor
mov
imul
mov
sub
mov
cmp
ja
mov
mov
mov
xor
xor
xor
shld
shl
cmp
jne
cmp
je
mov
mov
mov
mov
xor
shl
shr
or
xor
xor
xor
and
cmp
jne
cmp
je
mov
cltd
mov
mov
cltd
shld
shr
xor
shl
or
or
mov
mov
xor
xor
mov
cmp
jne
cmp
je
pushl
pushl
mov
mov
pushl
mov
call
mov
mov
mov
mov
push
add
push
lea
push
call
mov
mov
pop
pop
pop
mov
pop
ret
push
mov
sub
push
push
push
dec
movl
movl
cmpl
jbe
inc
jmp
push
push
pushl
call
mov
add
xor
mov
xor
xor
and
mov
orl
movl
movl
mov
xor
cmpl
jb
sub
jmp
push
pushl
call
mov
imul
add
or
sub
mov
sbb
movl
movl
adc
movl
orl
movl
movl
xor
xor
and
mov
movl
sbb
mov
imul
movzbl
or
mov
mov
sub
xor
cmpl
jb
adc
jmp
pushl
pushl
call
mov
xor
and
mov
mov
and
cmpl
jb
jmp
push
call
sub
mov
and
xor
mov
add
mov
movl
movl
movl
xor
movl
mov
mov
or
mov
adcl
xor
div
andl
add
and
mov
subl
imul
and
sub
mov
andl
movl
sub
movl
cmpl
jbe
xor
jmp
push
push
push
call
movl
mov
mov
lea
shr
mov
subl
xor
orl
and
add
sub
cmpl
jg
and
jmp
call
mov
movl
movl
movl
mov
and
cmpl
jbe
neg
jmp
call
mov
sub
add
mov
and
mov
orl
sub
cmpl
jl
xorl
jmp
pushl
pushl
pushl
push
call
mov
movl
movl
movl
mov
add
adc
mov
sub
sub
add
xor
mov
movl
movl
movl
mov
sub
mov
sbbl
lea
andl
imul
mov
decl
xor
xor
mov
sbb
sub
cmpl
ja
mov
xor
jmp
push
push
pushl
call
mov
movl
movl
movl
mov
mov
sub
add
xorl
or
movzwl
sub
sub
cmpl
jge
jmp
push
push
push
call
mov
xor
sub
mov
movl
movl
movl
cmpl
jge
add
jmp
pushl
call
movl
movl
movl
movl
movl
mov
cmpl
jbe
add
jmp
pushl
call
mov
sub
add
mov
sub
mov
orl
sub
xorl
add
push
andl
call
mov
imul
mov
dec
xor
mov
cmpl
jb
xor
andl
jmp
pushl
push
call
lea
mov
and
mov
sub
add
mov
movl
movl
movl
mov
add
movl
cmpl
jle
jmp
pushl
pushl
call
movl
movl
movl
movl
movl
movl
movl
mov
mov
add
mov
mov
notl
mov
subl
xor
xor
and
sub
mov
sbb
lea
mov
mov
mov
xor
xor
sub
add
mov
cmpl
jg
or
jmp
pushl
push
push
push
pushl
call
mov
mov
imul
and
sub
sub
add
mov
movzbl
sbb
lea
cmpl
jb
xor
or
mov
sub
xor
or
jmp
call
mov
adc
movl
or
movl
cmpl
jbe
jmp
push
call
movl
movl
mov
mov
mov
xor
xor
movl
mov
call
adc
mov
mov
adc
mov
sub
mov
add
mov
xor
addl
xor
xorl
mov
sbbl
call
sbbl
or
or
cmpl
jbe
jmp
push
pushl
call
mov
mov
xor
xor
mov
call
mov
add
mov
sbbl
mov
mov
add
mov
sbbl
xor
xor
mov
add
mov
mov
andl
mov
subl
mov
call
mov
mov
and
mov
adcl
or
mov
or
push
push
push
xorl
push
adcl
call
movl
mov
cmp
movl
jne
cmpl
jb
inc
jmp
push
push
pushl
push
call
mov
mov
xor
xor
mov
call
and
mov
adcl
mov
mov
and
mov
add
mov
xor
xor
subl
mov
sbbl
call
sbbl
or
or
cmpl
ja
jmp
pushl
push
pushl
push
push
call
mov
mov
xor
xor
mov
call
mov
adc
mov
mov
movzbl
adc
mov
subl
xor
decl
xor
addl
mov
mov
mov
adcl
call
subl
or
adc
mov
or
orl
push
xorl
push
push
sbbl
push
call
movl
mov
movl
jmp
movl
jmp
lea
movzwl
or
mov
mov
xor
mov
not
movl
mov
sub
xor
sbb
shr
mov
xor
addl
shl
or
or
mov
sub
mov
dec
mov
or
mov
orl
mov
sbb
mov
and
mov
sbbl
xor
andl
xor
mov
adcl
call
mov
sbb
mov
add
mov
cmpl
jg
subl
jmp
push
call
mov
xor
xor
mov
call
or
and
or
xor
mov
cmpl
jb
jmp
pushl
push
call
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
xor
mov
mov
subl
mov
adcl
mov
call
sub
mov
orl
or
mov
or
andl
push
incl
push
push
orl
push
call
mov
movl
cmp
je
mov
mov
xor
orl
xor
andl
mov
call
mov
mov
dec
mov
cmpl
ja
jmp
pushl
call
mov
xor
xor
mov
call
or
or
mov
xorl
imul
addl
add
mov
mov
mov
mov
jmp
jmp
mov
movl
mov
orl
xor
xor
mov
notl
call
sbb
mov
cmpl
jbe
mov
sub
jmp
pushl
push
pushl
call
mov
mov
mov
xor
xor
adcl
mov
addl
call
orl
or
or
or
sbb
mov
movzbl
or
mov
xor
xor
adcl
mov
call
negl
mov
or
mov
cmpl
jg
adc
jmp
pushl
push
push
pushl
call
mov
mov
xor
xor
mov
mov
subl
mov
adcl
call
xorl
or
mov
sbbl
or
orl
push
andl
push
push
sbbl
push
addl
call
movl
mov
jmp
or
mov
cmpl
jle
or
jmp
push
push
call
mov
xor
xor
mov
call
mov
mov
cmpl
jle
jmp
push
push
pushl
pushl
call
mov
mov
xor
xor
mov
call
or
or
movl
mov
movl
jmp
cmpl
ja
movl
sbbl
jmp
pushl
pushl
push
push
pushl
pushl
push
call
mov
mov
xor
xor
mov
subl
call
addl
mov
adc
mov
sbb
mov
not
mov
xor
xorl
xor
subl
mov
call
add
or
or
or
mov
cmpl
jg
jmp
push
push
push
call
mov
or
mov
xor
imul
and
add
sbb
mov
lea
cmpl
jle
mov
sub
jmp
push
push
pushl
push
pushl
call
mov
movl
movl
movl
movl
movl
movl
or
movl
movl
and
movl
cmpl
ja
and
jmp
push
call
mov
add
mov
or
add
mov
adc
imul
orl
xor
mov
add
add
sub
mov
cmpl
jb
movzbl
and
mov
mov
and
mov
jmp
push
push
pushl
push
pushl
pushl
push
push
push
pushl
push
push
push
pushl
call
and
cmpl
jb
add
jmp
push
push
push
push
call
sub
mov
sub
mov
sub
mov
xor
and
mov
mov
add
lea
mov
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
imul
add
xor
mov
lea
mov
imul
mov
sub
imul
mov
xor
div
mov
and
mov
sub
mov
add
mov
xor
mov
imul
or
add
xor
mov
mov
add
add
mov
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
and
add
or
mov
sub
xor
add
mov
and
mov
or
mov
sub
mov
mov
imul
imul
sub
xor
mov
mov
add
add
mov
andl
jmp
mov
inc
mov
mov
mov
cmp
je
mov
mov
mov
add
mov
mov
mov
mov
mov
movl
movl
movl
movl
lea
mov
mov
movzwl
xor
movzwl
sar
mov
movzwl
xor
movzwl
shl
or
movzwl
mov
mov
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
movzbl
push
lea
push
call
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
add
mov
mov
cmp
je
mov
mov
movzwl
xor
movzwl
sar
mov
mov
movzwl
xor
movzwl
shl
or
movzwl
mov
mov
mov
movzwl
xor
movzwl
sar
mov
mov
movzwl
xor
movzwl
shl
or
mov
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
mov
or
je
lea
mov
mov
xor
mov
call
mov
mov
mov
xor
mov
call
or
or
xor
xor
mov
mov
mov
mov
movsbl
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
movsbl
cmp
je
mov
movsbl
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
movsbl
cmp
je
jmp
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
movsbl
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
movsbl
cmp
jne
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
add
mov
jmp
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
mov
cmpl
je
mov
mov
movzwl
mov
mov
mov
jmp
jmp
cmpl
jne
xor
jmp
mov
add
mov
movl
cmpl
je
cmpl
je
mov
shl
mov
movl
sub
mov
movl
mov
cmp
je
mov
mov
mov
mov
mov
mov
mov
inc
mov
jmp
movl
push
jmp
mov
mov
ret
cmpl
jle
jmp
push
pushl
pushl
call
push
push
mov
or
jne
mov
mov
xor
mov
adc
div
neg
mov
mov
div
movl
mov
jmp
cmpl
jle
or
jmp
call
mov
mov
mov
mov
shr
rcr
adcl
shr
rcr
xorl
or
jne
adc
div
mov
mull
mov
mov
mul
add
jb
cmp
ja
jb
cmp
jbe
dec
xor
mov
pop
pop
ret
sbbl
subl
movl
cmpl
je
sbb
add
mov
movzbl
mov
pop
pop
pop
leave
ret
cmp
movl
jae
movl
cmp
movl
jae
shld
movl
shl
ret
movzbl
sub
mov
xor
and
shl
ret
xor
xor
ret
