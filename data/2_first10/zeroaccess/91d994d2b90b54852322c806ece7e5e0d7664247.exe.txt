push
mov
sub
mov
movzbl
mov
mov
movl
movl
cmp
movl
jne
or
mov
adc
push
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
call
cmpl
jne
mov
inc
mov
jmp
add
mov
xor
sub
mov
movl
cmpl
je
cmpl
jne
push
pushl
push
pushl
call
cmpl
jne
xor
xor
dec
mov
mov
dec
mov
jmp
andl
mov
inc
mov
cmpl
jne
push
pushl
call
cmpl
jne
xor
add
inc
mov
cmpl
jb
movl
cmpl
je
cmpl
jne
push
pushl
push
push
push
push
pushl
pushl
call
xor
or
dec
mov
jmp
add
push
xor
or
adc
mov
mov
add
movl
cmpl
je
cmpl
jne
pushl
push
push
call
xor
or
dec
mov
jmp
movzwl
not
and
mov
movl
cmpl
je
cmpl
jne
push
push
pushl
pushl
push
call
mov
dec
mov
jmp
mov
mov
mov
push
mov
movzwl
mov
mov
mov
movl
movl
mov
jmp
sbbb
cltd
js
mov
add
aam
jo
jo
jo
jo
rcl
aad
ror
rol
pop
push
add
mov
rdpmc
cmpps
adc
mov
add
mov
sbb
lods
sarb
or
sahf
jp
inc
lods
push
sub
mov
stos
js
roll
jmp
mov
dec
fcomps
pop
test
sub
mov
pusha
nop
mov
and
jmp
out
repnz
xchg
xor
jbe
xlat
and
add
adc
xor
or
fldl
xor
pop
push
or
pop
fstps
jno
mov
ja
sbb
xor
into
cmpsb
push
inc
in
jne
sub
jns
shll
je
xor
out
ret
iret
fnstenv
in
or
fidivl
fnstcw
mov
bound
fcomp
xor
fmul
add
test
sub
cmp
sbb
iret
lea
insb
shrb
subb
inc
ljmp
rorl
cs
adc
fs
and
js
mov
push
xchg
ja
shlb
pop
jne
movsb
adc
inc
push
jae
inc
pop
add
inc
insb
scas
out
push
loopne
dec
dec
test
jb
mov
inc
mov
leave
ja
imul
jl
sbb
push
nop
or
xor
ret
int
cwtd
or
stos
adc
gs
mov
inc
stc
sarb
or
clc
add
push
mov
mov
add
cmp
test
das
das
add
jnp
jnp
mov
mov
xchg
in
test
fnstenv
mov
xor
je
out
jb
mov
and
ss
push
cmp
or
ljmpw
cltd
outsl
inc
xor
xchg
iret
xchg
addb
sbb
add
clc
icebp
mov
icebp
ficompl
xchg
ss
jo
jo
jo
jbe
insb
cmp
mov
xchg
mulb
mov
and
andl
xor
dec
and
add
sub
cld
inc
mov
adc
insl
in
sub
cmpsb
ss
mov
out
fsubs
cltd
test
inc
iret
leave
scas
das
sbb
sti
xor
es
stc
mov
xor
shlb
jge
imul
sbb
jg
fs
lret
pop
fidivl
stos
mov
xor
das
hlt
jae
dec
jae
and
movsb
fwait
arpl
xor
scas
addr16
loop
sub
stos
push
jle
outsb
ljmp
adc
out
sarl
lods
xor
dec
or
fisttpl
and
adc
loopne
mov
rclb
ret
imul
inc
add
inc
add
in
mov
es
out
pushf
push
xlat
add
pop
push
outsl
adc
inc
mov
xchg
shl
sub
ret
mov
mov
push
xchg
pop
sar
push
lret
cli
lahf
jbe
les
out
push
out
jb
fnstcw
mov
and
mov
lahf
nop
jg
xor
lcall
or
jmp
push
icebp
cs
mov
popf
leave
loop
inc
xchg
cmpsb
xlat
loope
push
mov
ret
push
mov
inc
jmp
pop
or
sbbl
pop
mov
mov
loop
out
clc
cmp
pop
jmp
pop
sub
sbb
pop
mov
cld
pop
mov
sti
aad
cmp
cs
pop
sahf
inc
mov
xchg
adc
fildl
adc
cmp
scas
sub
push
xchg
adc
fimuls
xchg
lahf
mov
cmp
std
sbb
xor
fs
pop
in
hlt
xor
loop
mov
inc
rorb
fmuls
call
add
lods
dec
lods
imul
daa
inc
pop
cld
jo
jo
jo
jo
mov
sub
lods
dec
mov
fiadds
loopne
xchg
mov
xlat
jmp
jns
sub
xor
xor
notb
push
std
adc
mov
jae
xchg
pop
mov
cmp
outsb
out
pop
jmp
jns
jecxz
jne
xchg
xchg
pop
xor
insl
orb
pop
stos
outsl
std
ljmp
mov
xchg
rcll
lcall
jp
jnp
xlat
adc
lods
push
ja
sbb
pop
pop
push
std
cmpsb
adc
in
xor
fsubrl
cmp
pop
jmp
ss
cmp
pop
js
mov
and
pop
mov
shrb
addb
pop
inc
in
mov
rcrb
arpl
test
ljmp
dec
push
xor
lds
into
movsl
mov
ret
push
in
or
push
xchg
pushf
mov
mov
jg
das
sti
jb
repz
dec
addr16
insb
mov
rclb
xlat
or
mov
pop
das
cld
outsb
mov
jge
out
lods
popl
and
stc
mov
jns
int3
push
cli
lcall
inc
cwtl
in
xor
cmp
dec
and
xchg
mov
xchg
xchg
and
nop
push
test
inc
sbb
ret
xlat
add
ffreep
xchg
stc
arpl
cs
or
xchg
faddl
xchg
testb
push
test
push
fstps
in
es
add
sbb
mov
and
sbb
stos
jno
push
shl
out
and
rcrb
in
jp
inc
inc
jle
mov
push
lods
outsl
clc
fstps
out
dec
sbb
mov
in
pop
sbb
inc
std
dec
stos
cmp
iret
xor
sub
xor
aad
mov
mov
movl
mov
mov
xor
xor
xor
add
add
div
mov
cmp
je
movl
lea
mov
jmp
int3
sub
push
mov
pusha
sub
jo
jo
jle
dec
push
add
cwtl
repz
add
sub
pop
es
mov
mov
sbb
test
lods
push
pop
mov
dec
mov
les
daa
test
out
push
jbe
outsb
xchg
popf
cwtl
inc
cmp
mov
imul
inc
stos
leave
pop
cs
adc
xchg
mov
push
dec
out
rcrb
rclb
adc
push
mov
cli
inc
lds
jge
mov
repz
cmp
add
cmp
insl
mov
lret
lea
inc
mov
jns
lock
push
xchg
ret
enter
xchg
inc
push
dec
clc
dec
jp
push
jecxz
mov
add
mov
mov
pushf
insl
mov
mov
stos
and
stc
lds
loopne
fimuls
cmp
rclb
loope
sbbl
lcall
sahf
aaa
dec
add
jno
lock
push
iret
es
icebp
iret
cwtl
bound
jp
mov
mov
pop
xchg
inc
push
out
sbbb
lahf
ret
pusha
adc
repnz
cmp
mov
idivb
popa
or
lcall
repnz
inc
inc
insb
fmul
pop
repnz
loope
xchg
inc
push
clc
rcr
scas
pop
sub
push
xor
sub
movsb
sbb
out
mov
popa
ja
fcmovu
add
sub
inc
sub
adc
sub
out
popa
ror
fsubrs
cli
sbb
jle
xchg
loop
mov
fyl2x
dec
jno
ret
push
test
sbb
jbe
stc
loopne
movsl
mov
sbb
pop
out
in
addl
lcall
or
lahf
jno
aaa
fdivs
orl
lods
jmp
dec
pop
lods
sbb
push
push
pop
and
push
stos
shl
enter
aad
adc
jno
cltd
test
mov
xor
ljmp
sub
inc
lock
imul
mov
mov
cmp
je
mov
orl
jmp
mov
jmp
popa
ja
add
xorl
adc
mov
movsl
shll
jo
jle
jo
xor
ss
xchg
rcrl
repnz
cmp
pop
adc
xor
nop
or
outsb
add
pop
cld
mulb
aas
mov
bound
imul
movsl
insb
pop
imul
jae
cld
push
call
xchg
mov
ret
fbstp
fsubrl
in
dec
insl
leave
push
add
inc
jno
out
jge
cmc
pushf
mov
lea
xchg
mov
in
sbb
out
repz
sub
lods
lret
mov
dec
jo
jo
nop
xor
cmpsb
cmc
int3
jo
cmp
or
divl
in
adc
lret
cmp
cmpsb
jg
push
push
mov
outsl
test
cmp
jp
sar
rcrl
popa
imul
clc
adc
pop
lock
push
add
aas
or
ljmp
xchg
push
sub
repnz
cmp
data16
add
sbb
adc
ret
cs
in
nop
out
pop
dec
mov
jb
xchg
push
xor
rcrl
mov
rorb
imul
loopne
inc
dec
out
aaa
xor
inc
rcl
inc
mov
je
ficoms
mov
xchg
mov
stos
cmp
xor
mov
fdivl
or
in
test
xor
cmc
popa
pop
popf
push
push
jns
and
sbb
divb
iret
je
test
pop
push
dec
cmp
jle
pop
sub
mov
sub
fucomi
ret
shlb
cld
aam
aas
sahf
in
jle
jg
fsubrs
xor
xchg
sub
or
jo
insb
sub
adc
pop
push
dec
outsl
mov
jo
lds
dec
leave
js
xchg
xchg
mov
sbb
sarb
mov
push
xchg
pop
testl
push
lret
test
add
add
cltd
sbb
add
sub
add
mov
mov
or
cmp
je
mov
xorl
jmp
mov
mov
xor
jmp
cld
test
jb
stos
inc
inc
cmp
cmp
push
jo
jo
jo
test
shlb
xchg
or
pop
pop
lds
jo
enter
hlt
mov
jbe
pop
sbb
push
mov
dec
push
jno
add
es
lods
gs
cmpsb
adc
mov
jg
xchg
andb
dec
cmp
lcall
jmp
not
out
sbb
adc
adc
int
or
ja
in
stc
pop
clc
shll
sbb
xchg
pop
bound
mov
push
adc
ds
pop
clc
test
out
sub
pop
movsb
mov
xchg
cmpsl
sbb
out
jl
fisubrs
xchg
enter
dec
test
lcall
cmpsl
jo
test
dec
fcoml
scas
pop
cmpsb
xchg
test
iret
sbb
iret
adc
out
adc
dec
mov
cmp
ljmp
sbb
lods
mov
es
pop
cwtl
mov
test
pop
mov
jb
bound
loop
bound
aaa
cmp
inc
push
nop
sub
push
ds
xor
pop
xor
pop
cmp
dec
xchg
inc
out
addb
dec
sbb
dec
xchg
stos
flds
mov
xor
iret
mov
jbe
pop
mov
cmp
pop
dec
xchg
js
stos
mov
pop
popf
cmpsl
mov
xor
test
rorl
pushl
out
xchg
mov
in
leave
subb
and
mov
mov
jg
xchg
clc
test
leave
pop
ret
jno
mov
mov
pop
dec
and
and
mov
pop
andl
aam
pop
das
sbb
lea
jne
sub
fidivs
insl
popf
cs
movsl
ret
aaa
push
xor
out
push
fmuls
cmp
jmp
ret
gs
cmpsl
insb
orb
jo
jo
jo
lods
les
fstpl
ja
lahf
jne
or
ret
outsb
hlt
push
lea
gs
sarl
and
inc
rclb
adc
jbe
sbb
xchg
jecxz
adc
cmp
flds
jno
les
cmc
lahf
test
mov
rcrl
cmp
and
fcos
push
or
sbb
adc
in
mov
in
movsb
pop
mov
push
push
inc
xor
js
movsb
push
dec
addr16
repnz
mov
scas
xor
push
jp
mov
in
dec
or
ds
cmpsb
jle
in
idivb
addr16
adc
xor
inc
push
mov
scas
push
sbb
aam
pushf
dec
jmp
jb
popf
mov
mov
pop
repz
imul
inc
loop
dec
aaa
insl
sub
mov
int3
popa
pop
in
push
cltd
jmp
mov
inc
sub
ja
jne
jle
adc
mov
or
imul
sub
cmp
and
leave
jo
outsb
in
pop
cwtl
stos
mov
aam
sub
clc
push
pop
daa
mov
cmp
add
dec
push
and
aam
decl
fcmovnb
mov
sub
loop
sub
sub
lea
arpl
push
fisubs
push
out
pop
in
lea
mov
gs
fidivrl
in
jge
cld
inc
loop
mov
into
fiadds
mov
aam
adc
pop
xor
ret
in
sub
mov
add
xor
pop
and
mov
jg
add
mov
push
out
mov
sbb
shll
xchg
and
dec
int
mov
les
push
push
leave
or
jbe
xor
int
aad
popa
push
jo
sub
pusha
movsb
lahf
adcl
cld
std
popa
mov
je
mov
xor
add
mov
mov
jmp
jp
sbb
cltd
ja
jno
sbb
sub
adc
jo
jle
jo
or
lret
loope
es
decl
push
dec
ret
hlt
stos
enter
cmp
add
mov
es
sarl
ds
dec
mov
je
sahf
xchg
cs
addr16
cmpsl
stc
xchg
pusha
test
xchg
xor
xor
pop
ret
lahf
lret
push
jmp
or
mov
jbe
aas
jns
imul
jb
push
mov
lahf
enter
fs
push
pop
pusha
and
sub
inc
iret
inc
jp
push
mov
cmpsb
add
inc
cld
xor
loop
push
movb
xorl
nop
pop
daa
hlt
pushf
xchg
mov
push
data16
out
mov
lcall
mov
push
xchg
xor
es
mov
sub
lock
dec
push
xchg
aad
out
mov
mov
mov
fstps
and
sub
mov
mov
loopne
dec
mov
ror
cwtl
or
daa
imul
xchg
ljmp
arpl
add
imul
rol
sub
pop
xlat
test
push
sub
inc
call
jnp
xchg
movb
jo
in
aam
mov
stos
dec
sti
pop
iret
jne
cmpsb
call
xchg
adc
sbb
les
out
ss
inc
mov
cmc
xchg
aas
cmp
cli
in
or
cmpsl
test
insb
ss
pop
pop
daa
xchg
int3
ret
or
lcall
outsb
push
jbe
mov
xor
in
fidivrl
jo
sbb
or
mov
mov
add
mov
or
test
sbb
xor
loopne
push
mov
mov
add
ja
ljmp
sub
lods
mov
enter
add
xor
mov
add
movzwl
xor
lea
add
mov
mov
mov
xor
add
imul
sub
mov
jmp
jmp
and
jae
xor
pop
jo
jo
jo
jo
sbb
cmp
lock
pop
fisubs
jno
bound
arpl
dec
sahf
loope
xchg
push
call
mov
adc
xchg
or
push
inc
fcoms
and
xor
push
pop
in
jne
in
pop
jmp
dec
dec
jno
sbb
inc
leave
loopne
add
xlat
shrl
adc
daa
mov
scas
pushf
fwait
out
dec
mov
push
sti
mov
pop
pop
xor
js
push
jp
ret
ljmp
fs
push
loopne
adc
loope
mov
arpl
xor
or
push
fs
sub
xchg
in
sti
loope
setne
cmp
rcll
dec
leave
sbb
ss
stc
xor
imul
xchg
adc
jle
aas
sub
sbb
adc
pop
mov
popa
push
xchg
inc
cmp
mov
fs
dec
sbb
push
sbb
pop
por
scas
xchg
test
inc
sahf
cld
int3
mov
mov
or
xor
mov
lods
mov
daa
xchg
add
addl
cmc
mov
jb
push
dec
xchg
cmp
adc
lock
fcoml
scas
xor
das
test
xchg
mov
fucomip
cmp
xor
dec
rclb
dec
push
out
ds
std
movsl
mov
inc
lods
in
rolb
push
fadd
testl
xor
cmc
stos
jno
xor
fwait
imul
out
jo
push
mov
addr16
xchg
add
cmp
mov
xchg
mov
cltd
stc
jne
repnz
lds
jl
addb
fisttpll
lret
jae
aaa
das
mov
in
adc
inc
mov
cmp
mov
mov
xor
cmp
je
mov
addl
jmp
mov
cmpl
jne
mov
xor
add
test
jne
xorl
jmp
pop
pop
jmp
cs
add
popa
push
in
jno
imul
jo
jo
jo
jo
adc
pushf
inc
fadds
lds
rcrb
insl
cmpl
push
rcrl
dec
out
xchg
cmc
adc
xchg
cmp
inc
mov
icebp
mov
cmp
int
testl
loope
jno
cld
ret
or
hlt
aaa
insb
icebp
dec
push
cmc
push
mov
mov
pusha
jmp
ret
mov
mov
cltd
mov
push
inc
out
add
cmp
outsl
xor
stc
sbb
sub
sub
push
cmp
lret
mov
sti
ds
xchg
out
imul
sub
sub
mov
addr16
shr
dec
insb
les
jle
loopne
push
add
ds
inc
out
outsl
jge
push
jns
test
and
and
adc
sti
push
push
loope
jp
sahf
inc
and
jb
or
add
sub
pop
ss
testl
mov
in
pop
dec
hlt
test
push
ss
or
pop
xor
fisttpll
cld
cs
js
sbb
fidivrl
std
xor
sarb
and
fiaddl
loopne
push
lods
movsb
xchg
rcrl
add
adc
mov
inc
sbb
shlb
push
ds
jle
dec
hlt
pop
mov
xchg
dec
and
and
mov
mov
int
repnz
mov
in
pop
xor
jnp
mov
pop
xchg
jle
sub
add
scas
ret
mov
push
jae
sahf
insb
ljmp
sub
jns
addr16
xchg
jnp
xchg
cwtl
mov
loope
push
dec
cmpsb
sub
sti
mov
enter
sub
fldcw
int3
push
cltd
inc
add
pop
leave
ret
push
mov
sub
leave
ret
push
mov
push
or
push
movzwl
sbb
mov
movl
cmpl
je
cmpl
jne
push
push
push
call
mov
dec
mov
jmp
movl
cmpl
je
cmpl
jne
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
movl
mov
mov
mov
xor
push
mov
or
xor
sbb
mov
sbbl
push
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
jmp
mov
add
cmp
je
mov
mov
xor
mov
sub
add
xor
jmp
imul
cmp
jae
jl
dec
mov
jo
jo
mov
pop
sar
inc
bound
sahf
push
repnz
mov
jno
push
jg
sbb
xor
pop
imul
cltd
fs
inc
mov
imul
jns
jge
js
adc
inc
inc
mov
fs
cmovno
js
or
pop
push
push
lret
push
xchg
fstl
rorl
cmpb
sti
in
xchg
xor
xor
and
jns
xor
lods
cmc
cli
cmpsl
pop
push
cmc
jns
push
andb
out
inc
int3
je
outsb
fidivrl
add
jo
adc
pop
mov
sub
mov
sbb
xchg
daa
and
nop
adc
arpl
shl
jmp
mov
pusha
in
inc
push
outsl
mov
dec
iret
or
push
sbb
add
rcrb
adc
push
cmp
repnz
xor
xlat
ds
mov
dec
shll
mov
call
shrl
pop
jns
push
inc
mov
leave
cltd
out
loopne
cs
jge
fs
jns
sub
xor
mov
hlt
adc
repnz
add
add
pop
jmp
lcall
mov
pop
cmpsl
sti
pop
call
xchg
in
pop
pushf
gs
nop
out
fbstp
ss
sarl
incl
insl
inc
xor
push
add
lret
popf
jb
lcall
push
jns
lock
mov
imul
in
xchg
fimull
mov
mov
fsubl
dec
push
fwait
pop
sub
pop
mov
fs
cli
leave
repnz
aas
ja
je
fsubrs
clc
add
andl
insb
sub
stos
ror
sbbb
sbb
pop
jp
mov
ljmp
enter
inc
cmc
ss
push
jle
int
fldt
mov
iret
pop
js
inc
movsb
lods
sub
xor
out
loopne
movsb
stos
or
jp
mov
je
mov
loopne
cmp
dec
mov
loopne
and
cmp
jbe
fsubs
jo
xor
xor
adc
xchg
lcall
repz
adc
mov
mov
push
and
mov
lahf
testb
clc
xchg
test
dec
sti
push
ud2
fmull
add
scas
sbb
imul
adc
mov
pop
loopne
stc
push
in
or
xchg
rolb
ja
and
ja
ljmp
and
sub
push
insb
jp
adc
loop
add
cmp
ja
push
jmp
jmp
mov
ja
push
aas
xchg
out
sarb
mov
jle
jo
jle
mov
sbb
cli
mov
data16
xchg
or
xchg
repnz
pop
shr
and
jmp
sub
repnz
xchg
es
icebp
push
mov
out
jl
sbb
pop
mov
imul
lds
add
leave
or
and
jmp
inc
jae
xchg
test
push
fcoms
pushf
scas
adc
movsb
rorl
andb
inc
rep
outsb
xchg
jo
push
ds
pop
ficomps
hlt
cmc
cmpsl
adc
or
inc
pop
mov
mov
out
lds
jle
aam
sti
cmp
cmpsl
imul
ret
out
push
icebp
mov
insl
mov
jb
sbb
dec
push
add
stos
jnp
push
pcmpeqw
inc
jmp
sahf
in
dec
std
cs
arpl
popf
mov
lods
sub
repz
je
pop
data16
lret
inc
sbb
inc
adc
and
out
fmul
stos
cmp
jno
sbb
enterw
or
dec
mov
dec
push
fidivrl
push
ret
cltd
jmp
scas
or
adc
je
pusha
jmp
cwtl
sbb
test
imul
outsb
xchg
sbb
mov
jmp
sbb
xchg
adc
movsl
cmpsb
or
xchg
notb
xor
xchg
push
bound
jo
sub
xor
lods
or
xchg
cmp
inc
and
loop
dec
inc
sbbl
lcall
and
push
adc
inc
nop
repz
les
popf
ds
std
movsl
pushf
mov
dec
cwtl
cmp
mov
jns
out
aaa
iret
jno
pop
pop
push
add
imul
cmp
std
popf
mov
xor
sub
mov
push
or
sbb
xchg
xchg
push
mov
sbb
sbb
leave
enter
insl
xchg
fcoml
mov
lret
loopne
cmpsb
popa
shll
enter
aad
xor
mov
jae
inc
pop
outsl
je
lods
in
push
fadd
and
or
jae
jp
push
mov
jle
idivb
call
inc
data16
push
push
xor
pop
addl
pop
stos
sbb
push
xor
addb
shll
adc
pop
push
repz
cmp
push
cltd
int3
clc
add
fs
push
nop
jge
jo
outsb
xchg
sub
mov
xor
mov
mov
xor
add
jmp
fistl
loope
lds
add
pop
jb
pop
jo
mov
xchg
adc
and
fiadds
adcb
lock
repz
sub
mov
iret
and
out
lock
int3
push
adc
cmovne
cmc
js
fdiv
push
rcrw
lret
popl
sarl
inc
outsl
dec
sub
idivb
iret
xchg
xchg
add
fwait
js
shlb
decl
inc
xchg
lea
cmpb
scas
xchg
popa
xchg
sbb
movsl
cmp
dec
ficomps
sub
test
std
mov
scas
xchg
pop
mov
xchg
scas
and
imul
xchg
or
cld
pop
jl
sub
hlt
dec
sbb
pusha
or
es
leave
push
cmpsl
cld
jbe
orl
out
daa
pushf
repz
hlt
add
jo
sarb
test
subl
shll
push
mov
mov
sub
cs
shll
ds
fstpt
int
xchg
lcall
mov
rcr
xor
outsl
lret
add
sbbl
jg
jo
cmpsb
inc
jnp
xchg
lods
lods
lds
in
and
sub
pusha
pop
mov
test
or
and
jbe
fcom
add
or
dec
aam
stos
gs
int3
push
and
xchg
lret
xor
and
sub
xchg
arpl
lea
notb
ss
jnp
jg
repnz
flds
fs
jp
test
pop
mov
and
and
adc
outsb
notb
cli
shll
inc
je
mov
mov
fimuls
outsl
pop
out
sbb
or
xor
pop
stc
sub
idivb
sti
push
pop
jge
popf
xlat
stc
and
pushf
out
or
add
clc
mov
das
mov
stc
lods
jo
fs
inc
lods
mov
dec
test
in
in
or
outsl
loopne
jne
cmp
pop
loopne
or
cltd
int
inc
adc
ljmp
fisttpl
inc
pop
inc
push
in
pop
cmpb
scas
push
cmpsb
xchg
insb
rclb
mov
in
test
ja
test
test
fcomps
adc
stos
xor
xchg
pop
sqrtps
inc
push
pop
ss
jnp
sbb
jae
aad
cmp
pop
loope
add
mov
repz
pop
push
ss
inc
ds
sbb
adc
fbld
add
cld
jmp
scas
cli
mov
xor
add
jmp
jecxz
fcoms
out
icebp
icebp
pop
xchg
aaa
aas
js
mov
adc
jo
jle
jo
jmp
jecxz
dec
stos
jno
enter
in
jle
cmp
push
movsl
loopne
scas
lea
and
mov
or
es
pop
sub
or
pushf
popf
xchg
stc
shlb
inc
sub
inc
sub
mull
fstpl
outsl
sbb
ficoml
cmc
dec
push
push
enter
push
cmp
insb
shrb
inc
outsl
imul
sahf
sbb
test
sub
or
cltd
mov
imul
mov
pop
lods
or
sahf
push
mov
clc
in
sbb
sub
cli
movsl
shll
pop
cs
bound
mov
xor
sti
dec
sbb
jmp
popf
add
movsb
cld
cmp
ror
push
mov
ljmp
jo
or
test
addr16
and
dec
jne
or
mov
bound
or
iret
in
out
cwtl
adc
in
jl,pn
jae
pop
xor
jae,pn
mov
shrl
sti
stc
dec
push
ds
cmp
loope
jge
or
adc
lock
stc
arpl
dec
aam
or
mov
inc
adc
lcall
and
sahf
lret
leave
outsb
lret
aaa
fadds
icebp
jb
scas
mov
in
test
or
imul
cmp
sbb
xor
jmp
and
js
in
and
xor
adc
push
addr16
add
inc
ret
sti
aas
imul
adc
ret
nop
and
jmp
insb
into
cwtl
inc
daa
orl
outsb
das
dec
jge
mov
in
mov
ret
pop
lock
mov
in
cld
stos
dec
xchg
sub
adc
mov
lahf
sahf
sbbb
or
stc
adc
xchg
cmp
sub
loopne
push
fdivrs
mov
mov
sbb
ss
pop
in
filds
sbb
push
das
or
pop
push
push
into
jnp
sub
jbe
rclb
push
mov
loopne
std
fs
mulb
xor
jecxz
imul
sbb
inc
ss
sbb
jmp
sbb
jl
push
movsl
std
cmpsl
inc
mov
addr16
outsl
adc
push
or
movsb
ja
fmuls
and
aad
fnstenv
pop
adc
mov
fimuls
iret
adc
ss
mov
jno
jno
or
xchg
xor
sbb
test
pushf
jb
add
cld
xor
lea
mov
xor
mov
sub
add
cmp
jbe
pop
mov
pop
pop
leave
ret
push
mov
sub
movl
cmpl
je
cmpl
jne
push
push
push
call
cmpl
jne
xor
or
dec
mov
mov
dec
mov
jmp
adc
mov
addl
mov
adcl
xor
adc
mov
andl
add
movl
movzwl
mov
orl
movb
not
lea
mov
or
jmp
out
out
jno
in
or
and
mov
jo
jge
jo
fdivr
dec
andl
push
fistps
aad
ficomps
ret
pminub
repnz
push
push
sbb
mov
inc
xchg
lods
idivb
mov
pop
cmpsl
jle
inc
iret
inc
and
or
pop
push
lea
arpl
and
mov
insl
mov
cmp
sbb
das
hlt
or
repnz
pop
xchg
dec
mov
dec
daa
hlt
xor
std
imul
xchg
adc
cmp
std
adc
mov
in
mov
js
add
jl
sarb
dec
mov
xchg
dec
pop
dec
add
lret
push
iret
cmp
movsb
dec
subb
js
iret
test
outsl
test
mov
pop
or
mov
arpl
outsb
inc
sub
fisttps
rclb
stos
ljmp
inc
insl
lock
dec
dec
lahf
and
ja
dec
stc
adc
push
fldl
pop
or
ljmp
pop
mov
popf
in
pop
xchg
mov
jl
sbb
test
cmpsl
mov
add
sbb
je
insl
shll
sub
mov
imul
jmp
mov
cltd
rcll
ja
addb
int3
loop
cmpsb
add
pop
mov
sub
lea
inc
gs
mov
cmpsl
adc
sar
pop
test
push
jge
or
lcall
fwait
test
int3
fnsave
pop
fcmovne
cmp
std
adc
jle
lcall
or
xlat
loope
lock
mov
jp
xor
jmp
in
mov
push
cmpsl
adcl
cmpb
mov
fists
cli
or
mov
xchg
sti
pop
mov
inc
lock
fsubl
push
cmp
jbe
stos
aaa
lret
push
mov
mov
fildl
adc
dec
or
jne
test
sahf
repz
scas
adc
stos
in
add
xor
dec
inc
in
adc
fwait
stos
dec
stos
xchg
pushf
fnstcw
pop
pop
test
add
popa
clc
flds
and
outsl
outsl
mov
xor
adc
push
mov
mov
js
mov
loop
es
gs
shlb
std
test
cs
jbe
iret
sbb
fldcw
daa
mov
mov
mov
fadds
jae
mov
sarb
pop
lds
dec
xchg
in
js
int3
xor
inc
fsubrp
lods
xor
scas
hlt
test
push
push
adc
imul
mov
rcrl
jo
into
adc
lock
jbe
mov
adcb
or
lds
mov
mov
lods
mov
nop
cmovp
mov
adc
iret
mulb
lcall
or
adc
mov
add
inc
decl
mov
jmp
inc
add
or
mov
subl
xor
sub
andl
mov
negl
movl
jmp
fists
cltd
mov
addr16
push
and
xor
push
jo
cmp
sahf
mov
lods
sbb
xchg
arpl
push
pop
mov
push
es
jo
pop
jecxz
stos
sbb
adc
mov
inc
imul
pop
xchg
aas
cmp
mov
pop
mov
cld
daa
and
mov
icebp
ja
int
jge
mov
vcmpps
mov
adc
jmp
jo
xor
sbb
notl
out
dec
or
jmp
dec
call
imul
adc
icebp
xor
mov
jae
bound
cwtl
pop
add
add
dec
das
xor
add
cmpsl
movsl
ljmp
adc
ret
imul
bound
icebp
xor
pop
test
cwtl
into
aad
mov
addl
ss
dec
loope
idiv
sub
pushf
xchg
mov
mov
movsb
outsl
xchg
fdivrl
lcall
das
xor
imul
roll
ret
sbb
fimuls
adc
sub
fists
push
ljmp
jp
xlat
xchg
insl
rorb
inc
mov
lcall
mov
push
cmpsb
pop
cmp
or
xor
jne
pop
filds
cmp
ljmp
xor
jg
cmpsb
js
in
call
push
scas
lret
inc
pop
not
jo
mov
roll
pushf
std
push
iret
inc
add
repz
xchg
stos
pop
pop
mov
mov
insb
popa
js
adc
push
or
or
fistpll
ret
add
adc
scas
xor
aad
sub
mov
mov
into
push
sbb
in
fsubs
jne
hlt
jns
in
mov
lret
xlat
sbb
andl
dec
sahf
jo
mov
cmpsl
leave
cmp
adc
adc
sub
pop
clc
jb
and
push
mov
jmp
mov
adc
sbb
stos
insb
mov
and
fcmovnb
sbb
cmpsb
loope
hlt
or
dec
dec
rcr
ja
lea
and
mov
je
cltd
clc
insl
pop
sbb
inc
and
xor
setae
cmc
cli
inc
fnsave
jns
scas
mov
inc
movsb
mov
mov
xchg
adcb
inc
push
cmpsb
test
pop
dec
mov
mov
pop
jno
ss
or
test
pop
shlb
add
adc
aam
jo
sbb
pop
push
test
out
add
movsb
aas
mov
push
and
idivb
jnp
mov
sbb
mov
sbb
lret
xchg
test
jecxz
cmpsl
cltd
test
sahf
jo
xlat
jg
or
lret
pop
push
jne
daa
shlb
shlb
call
pop
es
jns
fnstcw
inc
leave
lods
popa
pop
cs
inc
cmp
or
pop
pop
andb
stos
stos
jge
add
sub
outsb
xor
js
add
loopne
das
jecxz
lret
or
mov
lock
clc
mov
push
xor
mov
adc
mov
add
movl
jmp
mov
movl
mov
movl
jmp
jge
lret
in
icebp
ss
outsl
cmp
jge
jo
test
dec
xor
sbb
mov
push
xchg
scas
test
cld
jb
fildll
mov
lcall
cmp
lock
je
dec
das
cwtl
adc
pop
or
adc
shrl
jne
cli
adc
xchg
lods
mov
push
in
stos
jbe
sub
and
jb
push
imul
gs
lret
iret
int
stos
cmp
fcmovnb
xor
fisttps
outsb
jno
inc
shlb
mov
jae
in
data16
and
cli
jb
shr
adcb
decl
and
and
mov
iret
inc
sub
jno
mov
sarb
nop
mov
xlat
ret
lahf
das
mov
call
mov
sub
fcompl
loope
lods
inc
sub
jmp
or
insl
mov
add
mov
or
outsl
cmpsb
fwait
pop
sbb
and
lret
ficompl
mov
daa
cld
arpl
movb
test
sbb
fldcw
fdivs
jns
psadbw
paddsb
sub
call
in
scas
add
mov
into
xor
aam
dec
test
adc
pop
xchg
loopne
add
sbb
ss
or
rcll
dec
pop
fwait
and
sub
mov
incb
sbb
pop
clc
push
je
ret
mov
jg
adc
repz
push
fdivrs
pushf
cmp
pop
ret
stc
rclb
movsb
and
and
mov
mull
pop
jns
inc
mov
mov
pop
sar
sub
test
mov
adc
ret
mov
or
xor
jp
cmp
mov
jbe
test
and
pop
ret
cmp
cmp
js
rcrl
mov
lds
push
xorb
pusha
add
aam
mov
mov
aam
pushf
test
shl
ljmp
or
je
add
lods
pop
fldl
jl
lods
or
cmp
ret
jo
xchg
mov
stos
aas
and
fistps
bound
clc
inc
xchg
js
and
lcall
and
insl
fucomi
lret
outsb
xor
fwait
jae
add
mov
mov
and
mov
icebp
sti
out
pop
push
stc
jge
cs
push
xor
mov
mov
enter
mov
jecxz
xchg
mov
out
mov
std
pop
test
jl
xor
cs
cmpsb
jmp
mov
cltd
repz
pop
jne
ret
xor
dec
mov
adc
adc
cltd
out
enter
sub
iret
inc
mov
daa
dec
movsl
pop
or
pushf
add
cmp
pop
mov
frstor
popf
in
cmp
fsubrl
sti
cltd
add
inc
cmp
movl
jmp
leave
daa
rclb
repnz
jecxz
cmpsb
dec
comiss
jo
jge
jo
add
lods
fwait
and
test
mov
sbb
sbb
sahf
xchg
mov
out
out
inc
xor
out
fstl
mov
cmp
std
cltd
leave
push
adc
fldcw
mov
xlat
int3
pop
cmpsl
scas
movsb
and
cld
aam
dec
adc
jne
shlb
insl
ret
mov
pop
lock
fidivs
loope
aad
xor
or
xchg
inc
add
rcl
mov
and
rcll
jp
iret
dec
fwait
or
and
js
jmp
push
incl
sub
xor
ja
sub
stc
push
add
bound
sbb
xor
shlb
movsl
sbb
fdiv
lods
out
or
and
jl
nop
cmc
jle
ret
push
inc
shrl
xor
mov
sbb
fidivs
inc
cli
stos
enter
mov
mov
or
fnstenv
dec
ret
add
push
xchg
popa
jge
mov
jne
pop
sti
push
cmpsl
sbb
test
xchg
sbb
icebp
mov
xor
dec
push
pop
and
jne
adc
pusha
sub
jmp
mov
loopne
push
dec
pop
fiadds
out
mov
ret
mov
cmp
xchg
mov
lcall
out
jae
rol
push
iret
addr16
xchg
fwait
mov
mov
jg
mov
cmc
pop
mov
xchg
ljmp
cmpsb
sbb
mov
neg
iret
imul
in
aam
push
stos
jle
add
aas
imul
push
int3
int
fbld
mov
and
out
push
sbb
test
mov
pop
pop
das
fsub
jp
sub
subl
pop
dec
and
mov
popa
fmull
js
adc
jg
inc
ret
pop
filds
add
out
subb
ja
les
test
jns
dec
cld
jmp
and
or
jb
ja
mov
pushl
push
push
ret
nop
sub
stos
lock
cmp
cmp
shlb
jmp
call
jg
and
popf
aaa
stos
fwait
mov
adc
jg
xchg
orb
mov
cmpsb
or
and
dec
bound
pop
fisubl
int3
sub
jne
leave
sub
xchg
fwait
cltd
or
movsb
dec
out
cmpsb
sbb
inc
rcll
mov
inc
call
cmc
sub
jecxz
adc
xchg
dec
cmpb
mov
sub
dec
roll
xchg
andb
in
pop
mov
mov
push
stos
jecxz
scas
cmc
test
push
lds
lcall
aam
cs
cmp
sahf
xor
in
sbb
fs
sub
mov
or
cli
xchg
flds
xchg
sub
cli
and
shll
cs
pushf
rcll
and
int3
pop
jmp
pop
mov
jbe
or
call
jo,pn
pop
js
and
xchg
arpl
push
cmp
mov
cmpsl
jno
jp
add
mov
jmp
adc
mov
jmp
push
jge
add
jb
inc
sbb
add
mov
and
jo
jge
jo
mov
mov
out
les
jp
mov
mov
sbb
jnp
push
or
dec
xor
sbb
out
sti
mov
icebp
popf
pop
mov
xor
xor
sti
mov
out
out
xor
fyl2x
xchg
sub
inc
sub
push
insl
ret
in
dec
jbe
and
xlat
push
lods
dec
ds
mov
mov
popf
pop
sti
dec
leave
cmpsl
repnz
sbb
ficomps
inc
xchg
ror
or
lds
je
jmp
roll
insl
lret
sub
fnstsw
xor
mov
pusha
mov
mov
jo
mov
xor
add
movsb
sub
and
jl
or
in
pusha
icebp
sahf
and
and
mov
pop
pop
aas
lret
and
loope
test
jp
push
mov
imul
daa
ror
push
jne
mov
add
adc
scas
jg
addb
cmpsb
and
pop
xor
dec
or
imul
xchg
and
push
pop
stc
subl
push
inc
pop
inc
sbb
sbb
xchg
pop
sub
lods
jns
cmpl
mov
dec
aas
dec
pop
hlt
pop
ret
adc
int
adc
xor
mov
bound
add
dec
pop
rorb
pusha
mov
nop
ljmp
cwtd
mov
add
jp
stos
out
xchg
enter
out
stos
add
addr16
rorl
out
ja
adc
mov
shll
mov
addr16
dec
into
jnp
into
fwait
xor
shr
int3
cmpsl
nop
mov
adc
icebp
mov
mov
add
or
inc
xchg
xor
mov
cmpsb
cltd
test
mov
push
mov
in
fcompl
xorb
shl
popf
stc
cli
dec
xchg
jnp
jg
adc
arpl
add
ds
push
pop
icebp
pop
sbb
outsl
mov
xor
cli
movsb
lcall
mov
lds
or
push
icebp
aad
test
mov
dec
jge
and
jp
mov
mov
mov
pop
bound
lret
sahf
mov
popa
adc
push
pop
xchg
lcall
xor
mov
add
mov
mov
mov
dec
nop
sub
testb
add
add
mov
pop
mov
jge
mov
xchg
loope
movsb
das
jge
jecxz
mov
xchg
lcall
mov
out
popf
xor
jecxz
cmp
js
xor
pop
in
iret
lahf
mov
in
or
mov
inc
daa
test
repnz
add
adc
fnclex
cmp
aad
mov
jae
scas
cld
in
jb
xchg
inc
jp
xorl
xchg
mov
ljmp
mov
sub
fs
les
stc
sub
dec
jmp
in
icebp
cmc
addr16
push
jg
mov
cmc
jno
jecxz
dec
cld
mov
mov
xor
add
cmp
movl
je
add
push
adc
push
mov
mov
andl
xor
mov
add
addl
movzwl
andl
mov
sbbl
mov
addl
movzwl
sbbl
xor
addl
jmp
fdivl
dec
rsqrtps
icebp
inc
sub
int
mov
jo
jge
jo
dec
pushl
push
cltd
mov
xor
pop
adc
push
adc
adc
push
sub
cmpsl
scas
test
inc
lret
cmp
std
add
or
add
mov
jge
arpl
mov
repnz
push
test
xor
mov
sub
push
mov
jg
mov
push
xchg
xchg
pop
out
fs
mov
mov
xchg
mov
test
mov
sbb
fstl
xor
loop
mov
addr16
pop
sbb
xchg
clc
sub
xchg
push
arpl
sbb
jmp
dec
sbb
and
ret
loop
lret
ds
daa
jne
adc
adc
aad
insb
jne
subb
mov
test
sbb
and
jo
push
sub
jbe
xchg
xchg
mov
adc
and
pop
in
pop
mov
popf
cmc
shlb
out
addr16
js
test
dec
ret
pusha
popf
jmp
pop
push
and
cwtl
je
fwait
mov
dec
cmp
mov
cmp
aas
scas
push
ficompl
out
test
add
dec
pop
jno
mov
xor
popa
xlat
push
sbb
addb
loopne
jp
cmp
dec
xor
push
aad
inc
sub
xlat
xor
mov
notl
fsubl
pop
loope
aaa
adc
xor
sbb
jns
jo
test
jp
fcmovu
in
int3
das
push
sbb
movsb
push
or
jae
mov
jp
xor
dec
decl
jp
test
pop
sub
xor
je
imul
loopne
scas
and
shrb
mov
hlt
scas
xchg
dec
sub
inc
push
xorb
lcall
mov
rcrb
pusha
and
push
daa
sub
stos
movsl
subl
mov
mov
dec
lods
sbb
cmp
je
sub
cmp
sarb
mov
xor
mov
out
sbb
icebp
cwtl
mov
sbb
inc
or
inc
sahf
or
sbb
xor
mov
pop
push
push
add
in
mov
pop
lret
popa
mov
out
movsl
inc
adc
je
pushf
mov
sbb
mov
ljmp
sahf
sti
in
pushf
sub
sbb
sbb
sub
femms
mov
clc
adc
jp
mov
cmpsl
test
xor
mov
cmpsb
ret
sbb
es
xchg
lea
ss
jl
call
mov
imul
or
sbb
xor
mov
into
rolb
add
xor
cmp
cmpsl
adc
orb
jo
sahf
and
fldcw
mov
jae
xchg
adc
xchg
jbe
sbb
sahf
push
dec
out
jmp
xor
daa
aam
cmpb
and
scas
jecxz
bound
iret
lods
sub
mov
add
movl
mov
movl
mov
jmp
or
daa
arpl
fisttpll
icebp
imul
jo
cmp
stos
and
cmp
pop
xchg
jno
cmp
inc
je
jmp
int
scas
jecxz
pushf
loope
popf
adc
adc
jg
outsl
add
push
movsb
pop
in
pop
jp
dec
jmp
sub
mov
jp
insb
jae
shl
les
cmp
out
push
push
jne
jo
mov
jnp
int3
push
and
jg
cld
jg
push
xor
js
sbb
pop
xchg
cs
push
ja
cmp
rcrb
call
sbb
sbb
into
xchg
icebp
sub
insl
out
ljmp
push
sbb
mov
into
jb
cmp
insl
in
incb
inc
mov
imul
pop
or
jae
rep
adc
aam
sub
mov
push
cmp
inc
or
inc
xchg
scas
cmp
hlt
dec
push
rorl
pop
xlat
cmc
jb
loop
mov
sub
mov
cld
jb
inc
sarl
popa
movsl
ljmp
rol
push
push
lods
leave
cmc
lahf
leave
test
ljmp
xor
and
sub
lret
sbb
push
pop
leave
test
loopne
add
imul
js
sub
lcall
add
pop
jns
fwait
rolb
inc
push
pusha
lret
sbb
cmp
popf
pop
inc
mov
add
push
push
pop
sub
rorb
addb
pop
xchg
dec
jb
sbb
aad
rolb
sbb
fistpll
xchg
test
sarl
lods
cmp
dec
jo
push
fs
scas
cmp
xchg
test
test
inc
test
pusha
add
rcrb
popa
xchg
dec
imul
rolb
testb
jns
bswap
cmp
push
loope
insl
sbb
add
inc
lahf
rorb
stos
xchg
dec
adc
dec
jmp
mov
sub
cmpsl
nop
test
xor
clc
xor
xor
sahf
lods
les
add
fidivs
mov
push
push
movb
leave
mov
jg
scas
movsl
cwtl
leave
hlt
test
mov
add
sbb
into
das
mov
push
shlb
shrb
or
and
imul
push
out
mov
lret
xor
mov
fidivl
pop
loopne
lds
jmp
and
xchg
jmp
test
mov
mov
mov
cmp
sub
dec
sti
jle
mov
movb
dec
loop
lds
pop
and
lock
cmp
jp
movsl
stc
call
push
jp
and
jl
pop
add
inc
inc
or
repnz
push
jae
sbb
mov
inc
push
fwait
nop
test
fsts
fcomps
or
or
pop
std
test
pop
mov
insb
sbbl
mov
fucom
push
add
lea
pop
sbb
inc
lcall
aad
pop
mov
ret
mov
mov
inc
and
sub
int3
jbe
inc
hlt
inc
cmp
jne
pop
pop
mov
mov
xor
add
mov
mov
xor
add
mov
mov
mov
mov
cmp
je
mov
mov
mov
cmp
jne
mov
mov
movsbl
xor
add
cmp
je
movl
lea
mov
mov
addl
mov
mov
xor
lea
mov
incl
jmp
mov
xor
mov
add
mov
jmp
xchg
roll
icebp
lods
add
rol
cmp
sub
cmp
lea
jno
addl
xchg
jge
inc
mov
or
xchg
prefetcht2
bnd
inc
mov
std
loopne
flds
in
inc
movsb
in
or
mov
cwtl
fwait
push
in
lods
add
hlt
out
pusha
inc
mov
lcall
fs
test
rcrl
fxam
ret
fisubrs
and
fisttpll
out
mov
loope
sub
sti
xchg
call
lock
leave
jbe
aad
in
in
in
popa
lods
not
cmpsb
sarb
mov
sbb
aaa
xor
cmpsl
and
sahf
xor
shlb
ficoms
outsb
sbb
fsubrs
cmp
leave
mov
repnz
or
and
push
sub
push
xchg
sub
sti
dec
stos
cltd
shl
out
sbb
sub
xchg
cltd
aam
test
dec
fldenv
xorl
pop
mov
cli
add
cmpsl
std
pop
test
es
roll
mov
sbb
rcrb
sub
shrl
adc
sub
es
outsb
inc
mov
jl
adc
daa
dec
sbb
push
mov
fcompl
bnd
pop
divl
push
xor
mov
test
sbb
repz
shlb
shrl
ljmp
lcall
mov
mov
in
pushf
ja
cs
jbe
xchg
jae
mov
repnz
pop
fsubrl
test
and
inc
bound
cs
fldenv
add
xor
in
jecxz
inc
std
out
xchg
pop
daa
stos
movsl
dec
in
mov
push
ficoms
jbe
jnp
imul
mov
or
ja
rep
xchg
fs
in
lds
mov
lock
hlt
xlat
arpl
out
clc
sti
sbb
aam
leave
xor
add
into
sbb
ret
js
pop
movsb
dec
mov
xor
call
pop
repnz
call
mov
aaa
mov
xchg
push
hlt
rcrb
fnstcw
imul
pop
dec
dec
lahf
cwtl
xor
cmp
out
sub
int
fdivrl
ret
dec
xchg
pusha
sbb
adcb
jb,pn
jmp
jl
iret
mov
or
dec
in
popa
test
clc
cmp
adc
jp
pushf
mov
push
jg
dec
add
pop
int
jae
add
test
ret
jge
sahf
jae
call
repz
push
scas
mov
push
popa
push
mov
mov
aad
jle
sarl
pushl
mov
adc
hlt
push
push
lahf
in
leave
arpl
pop
push
inc
lret
outsb
addr16
jne
pop
in
push
push
enter
mov
push
fimull
mov
lret
xchg
out
xor
lahf
or
sbb
sahf
into
push
das
inc
inc
mov
jmp
and
add
push
pop
test
ret
push
mov
push
mov
mov
sbb
jmp
pop
scas
sbb
push
pop
mov
adc
jg
aaa
jo
stos
jle
jo
enter
sbb
mov
xor
pop
push
jnp
pop
push
mov
mov
lret
jno
pop
adc
jmp
in
push
cvtpi2ps
adcb
jns
pop
stos
or
cmp
addl
sbb
fists
pop
leave
test
xchg
repnz
cs
inc
xor
dec
cmp
sbb
gs
imul
insl
xor
sbb
mov
mov
add
daa
xor
popa
movsl
out
fimull
hlt
push
clc
add
jg
xchg
pop
in
pop
call
fisttpll
inc
mov
sbb
lahf
cmp
dec
and
call
sub
jnp
push
movsw
xlat
orb
leave
inc
dec
push
dec
out
sbb
int3
scas
jns
rolb
in
mov
divb
mov
jecxz
aas
xor
jmp
mov
xor
add
out
and
push
ljmp
sbb
test
sub
adc
xor
stc
adc
cmp
push
inc
loope
sub
scas
xor
jl
jg
lock
movsb
pop
mov
bnd
push
add
sbb
loop
std
xchg
xorl
fcmovnb
sub
pop
or
sahf
xor
nop
test
daa
insb
movl
subl
mov
movsl
into
sbb
fs
cmp
loopne
mov
pop
shl
repz
lea
cmp
mov
mov
hlt
dec
adc
ss
mov
mov
inc
mov
addr16
shll
notb
mov
test
loope
jne
jbe
cmp
in
adc
push
lods
xchg
mov
shrl
jg
xchg
in
pop
mov
insb
mov
lcallw
jb
call
mov
pop
dec
xchg
mov
lahf
in
mov
sub
sbbl
adc
cmp
es
push
sub
push
rep
lods
rcl
mov
in
mov
and
inc
ljmp
mov
lret
test
out
sbb
cmp
jl
ljmp
jmp
mov
mov
push
loop
pop
pop
lahf
testb
add
xor
movb
or
int3
mov
sub
xchg
adcl
xor
mov
xchg
inc
add
add
mov
jmp
ja
and
dec
xchg
dec
mov
xor
jo
or
and
dec
mov
pop
push
jp
ds
dec
lds
or
jge
dec
je
call
jbe
push
test
adc
mov
mov
pusha
insb
fists
mov
lock
xchg
popa
cmp
jb
sbb
insb
push
mov
lds
pop
iret
add
scas
ljmp
push
cmp
cli
rcr
inc
mov
shld
add
loope
mov
notl
out
loope
std
xor
mov
cmp
pop
mov
stc
shrl
mov
lods
xor
xor
call
mov
xchg
jae
out
sti
xor
mov
popl
xchg
jmp
mov
or
xor
jo
sub
cli
and
push
mov
pop
into
aam
std
cmpsb
in
data16
mov
and
jecxz
hlt
xor
push
jb
xor
mov
cld
push
add
add
test
sti
adc
repnz
or
and
mov
testl
inc
lea
dec
jo
popf
push
cmp
or
xchg
sub
imul
xchg
data16
mov
adc
nop
aaa
in
push
arpl
imul
cs
lret
jmp
lret
xor
cltd
fs
insb
or
cmpsb
mov
lock
test
add
inc
ror
aaa
mov
in
nop
ficoml
mov
and
jl
pop
cmp
inc
mov
pop
dec
je
sub
dec
or
daa
add
test
push
addl
push
push
imul
cld
popf
lods
push
fcoms
sti
out
div
inc
dec
add
jbe
cli
mulb
lahf
sub
aas
xor
jnp
test
loopne
ja
pop
push
xor
xor
adc
cmp
movsl
lods
or
outsb
iret
jge
cmpsb
pop
fwait
in
out
lcall
jle
mov
loop
xor
prefetchw
test
mov
stos
in
fs
cli
mov
gs
dec
xor
or
mov
addl
in
imul
or
pop
outsb
rcrl
inc
and
push
out
inc
add
repz
std
movsb
rcrl
or
in
jmp
jne
sbb
sbb
mov
clc
pop
int
jp
inc
into
cwtl
out
adc
pop
out
aad
push
in
push
sbb
outsb
enter
imul
in
int3
outsb
cmp
jge
dec
repnz
mov
fld
inc
clc
xor
jnp
add
movl
and
mov
sbb
push
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
pushl
call
jmp
movl
cmpl
je
cmpl
jne
pushl
push
pushl
pushl
push
call
xor
xor
dec
mov
jmp
mov
add
xor
and
xor
mov
add
add
imul
mov
cmp
jne
mov
mov
xor
xor
add
add
imul
jmp
mov
mov
mov
mov
mov
xor
xor
add
add
imul
mov
cmp
mov
je
jmp
xchg
imul
xchg
mov
stos
jle
jo
nop
pusha
and
jmp
cmp
inc
push
popa
daa
jno
push
push
fcomip
pusha
cmp
add
sbb
xor
pop
and
fisubl
jbe
mov
add
in
hlt
dec
sar
mov
push
mov
rol
daa
enter
out
pop
fmuls
es
mov
icebp
dec
leave
xor
out
pop
mov
push
jne
insb
iret
jp
xchg
fimull
push
lret
xorl
inc
es
or
xchg
mov
std
mov
adc
push
cltd
int
lods
ror
test
in
ja
mov
xor
cwtl
xor
fstpt
mov
pop
pop
roll
mov
mov
or
cmc
jge
enter
clc
push
imul
jmp
and
sar
or
jo
ret
or
push
and
out
dec
push
imul
sahf
sbb
out
sbb
arpl
xchg
xor
jns
movsl
pop
insl
sbb
or
xchg
jg
pop
adc
dec
popf
lret
jae
sbb
fisubrs
cmpsb
loopne
add
test
cmp
inc
jo
adc
stos
adc
lds
in
fsubr
add
xchg
xor
imul
popf
faddl
in
mov
add
test
fisttps
mov
loop
dec
repnz
sbb
push
je
out
sbb
jmp
scas
add
jo
pushf
mov
jbe
dec
or
test
sub
pop
inc
sub
xor
xchg
push
repnz
inc
mov
mov
adc
jg
js
push
out
insb
int3
insl
xchg
in
call
imul
xchg
pop
movsb
testb
xor
and
dec
shll
outsb
sbb
loopne
repz
fidivrs
pop
les
sar
xor
shll
hlt
test
cmc
mov
lds
xor
push
push
inc
ljmp
cli
pop
ret
inc
aad
push
mov
andb
mov
inc
mov
test
loope
int
xchg
mov
enter
inc
mov
jp
mov
and
inc
xor
jp
push
leave
jo
insb
dec
pop
lock
cmp
dec
into
aaa
pop
cmp
jg
mov
shlb
or
add
shrl
test
mov
imul
add
mov
mov
pop
leave
ret
push
mov
push
addl
movl
mov
mov
adcl
mov
xorl
xor
jmp
fidivl
jle
jne
jb
sub
and
aas
jo
cmpsl
jg
jo
mov
mov
fsubrl
pop
sti
jo
insl
add
xor
jmp
repz
pushf
push
pushf
sti
pusha
das
lcall
fisttps
sub
push
pushf
movl
in
mov
jp
lcall
mov
pusha
imul
orb
lods
pop
cltd
lods
movsl
lret
xchg
mov
pop
les
in
shrl
pop
fldenv
es
inc
jl
pop
insl
and
push
lcall
out
stos
add
in
dec
repnz
or
sarl
pop
and
fadds
cltd
adc
aas
add
out
xchg
or
mov
into
in
sbb
mov
dec
cmp
inc
xchg
rolb
lret
das
sbbb
jne
pushf
and
lods
sahf
cmp
sub
int3
in
leave
hlt
fimull
xor
lret
inc
leave
dec
lock
int
gs
jmp
bound
jo
add
rcr
xchg
fsubs
cmpsb
add
sahf
cltd
test
mov
mov
adc
mov
dec
cmp
dec
xor
mov
xor
test
lods
imul
scas
cld
sbb
inc
mov
push
sarl
lret
mov
cmp
sbb
jb
fcoms
mov
andb
add
clc
mov
jl
cwtl
inc
ret
adc
cmpsl
lret
push
push
or
xchg
cltd
out
outsl
pop
into
lcall
orl
mov
mov
xor
push
sbb
mov
or
mov
sbbl
add
adcl
mov
sbb
mov
adcl
mov
subl
mov
or
jmp
out
hlt
arpl
popa
xchg
insl
hlt
pop
xor
andb
jo
jg
jo
mov
adc
lahf
jecxz
add
mov
lret
mov
js
adc
jg
sub
rclb
ja
cmp
add
inc
daa
mov
pop
push
repz
popa
leave
fcmovnb
or
sarl
sbb
jo,pt
mov
loopne
orl
dec
fs
fdivp
ficompl
mov
sub
lret
pop
in
mov
push
mov
aaa
clc
aad
inc
pop
and
and
pushl
ret
in
test
cmp
jle
imul
push
mov
dec
pushf
jbe
into
xor
pop
adcl
xchg
inc
xchg
into
dec
mov
inc
jmp
inc
jg
sbb
pop
fstl
push
sahf
lret
cmp
push
cmp
lods
xor
and
jg
push
mov
fisubrl
jno
push
pusha
je
fstl
shl
repnz
ljmp
fcmovb
ret
ja
add
mov
or
aam
scas
adc
sbb
lds
mov
cmp
mov
push
stos
inc
out
add
int
cmp
xor
lods
jmp
mov
inc
jnp
icebp
jo
xchg
xor
les
or
jge,pt
fsubrs
or
xor
popf
mov
xchg
sub
xor
cmp
popf
cmp
shlb
push
jnp
pushf
mov
mov
ret
sbb
mov
xor
sub
int3
xor
pop
sbb
mov
jo
xchg
sbb
mov
mov
subl
mov
or
mov
movl
cmpl
je
cmpl
jne
push
pushl
pushl
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
mov
mov
mov
xor
add
jmp
jge
gs
gs
sti
ret
pusha
jo
mov
jo
cmpsl
jg
jo
cmpl
lret
imul
or
mov
xchg
subl
push
cld
mov
or
aam
imul
push
loopne
inc
in
add
jb
leave
jnp
jo
push
pop
mov
movsl
subl
lds
jbe
mov
push
lock
nop
fnstsw
icebp
es
sub
cmpsl
les
cld
leave
mov
ljmp
xchg
lods
stc
push
insl
cli
mov
repz
adc
into
mov
push
out
sub
in
popa
fildl
repz
cltd
test
push
push
xor
adc
imul
fisttps
cmpsb
fmul
es
or
popa
mov
inc
sbb
addl
push
inc
jge
dec
fimull
jp
and
fwait
xchg
xor
xchg
arpl
mov
pop
in
fmull
test
pop
or
inc
xor
test
xor
inc
stos
adc
ja
mov
insb
pop
add
jl
xlat
cld
dec
add
pusha
negb
and
mov
pop
inc
cmp
std
mov
or
push
jge
push
movsl
push
icebp
shrl
jno,pt
xor
cmp
aad
sahf
add
mov
out
jb
pop
test
xchg
cmp
daa
jae
out
adc
orb
pushl
and
fimuls
cmp
insl
xchg
xor
test
in
imul
fwait
sub
cmp
les
pop
leave
ret
push
mov
mov
xor
mov
div
mov
and
or
mov
pop
ret
push
mov
push
adc
movl
mov
sbb
mov
mov
xor
add
mov
sub
mov
sub
mov
andl
mov
mov
jmp
mov
jg
inc
rorl
jae
pop
dec
push
fistps
jo
jle
jo
popf
repz
vpsrad
inc
or
mov
push
and
xchg
mov
gs
mov
fdivs
and
loope
mov
aam
repz
lods
xchg
fsubs
shl
push
push
aam
xchg
pop
ljmp
push
cltd
fbld
jb
cmp
cltd
adc
shlb
pusha
adc
jge
lret
in
je
xor
sub
pop
mov
inc
push
ret
insb
or
imul
outsb
shll
adc
xor
and
pop
push
daa
jecxz
adc
jbe
sub
in
mov
add
pushf
mov
jge
das
cmpl
jle
sti
neg
nop
lea
push
sbb
jae
and
bound
pop
in
cld
mov
xchg
jl
mov
mov
mov
dec
test
in
outsl
lahf
mov
imul
imul
dec
mov
scas
push
arpl
lea
jmp
mov
sbb
xor
ret
push
insb
mov
mov
in
push
sar
sub
pop
xor
imul
jbe
rolb
jecxz
cmc
lret
sbb
inc
mov
test
enter
add
shlb
repz
lds
lock
push
adc
mov
mov
sub
shr
xor
out
adc
lock
push
shll
or
sbb
add
enter
mov
nop
adc
and
addr16
pop
add
push
jb
jmp
dec
push
adc
lods
ret
in
cmp
popa
hlt
inc
aam
ja
cmp
jns
repz
aad
jno
fcoml
scas
je
btr
sbb
push
adc
dec
and
push
iret
push
mov
shlb
jne
jmp
mov
mov
repnz
fmul
cld
sub
outsl
rcr
cmp
mov
dec
mov
shll
and
mov
or
mov
mov
jne
xchg
sbb
imul
jb
cwtl
dec
mov
mov
mov
xor
mov
mov
adcl
mov
mov
orl
mov
subl
mov
andl
mov
mov
test
mov
jne
mov
jmp
sub
test
pushf
push
xchg
lock
cmp
loop
jo
call
rcr
pop
fimull
fstpt
popa
sbb
xchg
inc
xor
fnstenv
xor
or
jnp
pop
jp
push
jg
jo
bound
mov
in
in
repnz
cmc
cmp
and
stc
aaa
das
loopne
push
subl
and
hlt
mov
cltd
lret
push
ss
mov
xor
pop
or
aad
inc
negl
mov
mov
lret
lock
sub
fistl
outsl
testl
and
inc
cmp
mov
mov
cmp
imul
cmpsl
call
mov
or
push
inc
xchg
push
stos
fcmovu
mov
pop
and
test
out
adc
jns
mov
xchg
or
das
inc
pop
pop
mov
sbbl
pop
in
add
bswap
sbbb
test
das
in
lret
ffreep
in
and
xor
mov
inc
mov
dec
sub
jo
icebp
push
mulb
mov
push
aaa
cld
cmp
push
xchg
pop
lea
cmp
scas
jae
sar
sti
adc
ret
sub
xchg
jle
adc
fisttps
pusha
imul
jge
movsl
xchg
sbb
out
jae
test
test
add
and
mov
subb
shr
sbb
sub
jmp
scas
jmp
pop
lahf
sbb
sti
jae
inc
das
jle
mov
xor
mov
sbb
ja
call
lcall
mov
fsts
jae
enter
add
imulb
aas
mov
jo
test
mov
idivw
push
xchg
in
xchg
arpl
jbe
divb
enter
mov
mov
jb
xchg
andl
mov
bound
addb
into
clc
pop
xor
pop
aas
pop
mov
jnp
pop
js
pop
mov
out
fs
jecxz
repz
pop
jge
insb
add
cli
and
outsl
out
ljmp
addl
popf
idiv
inc
jno
adc
pushl
std
loop
int
lock
stos
dec
out
jg
iret
dec
das
rcpps
adc
xor
inc
lea
in
cmp
inc
data16
inc
inc
mov
dec
and
nop
pop
xchg
mov
and
xor
add
leave
ret
push
mov
sub
mov
mov
mov
subl
mov
xorl
movl
incl
movl
subl
mov
push
push
push
movzwl
and
mov
mov
movl
cmpl
je
cmpl
jne
pushl
pushl
call
mov
dec
mov
jmp
movl
cmpl
je
cmpl
jne
pushl
push
push
pushl
call
mov
dec
mov
jmp
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
push
pushl
call
jmp
andl
mov
inc
mov
cmpl
jne
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
xor
sub
mov
add
xorl
mov
movl
jmp
inc
jae
pop
sub
jae
and
mov
mov
jne
lds
and
jo
push
lock
cmp
hlt
gs
fwait
test
imul
cld
push
out
in
das
ds
das
call
es
fs
fnsave
sub
js
imul
lcall
sbb
in
fcomps
add
loopne
fdivl
lret
lcall
test
or
lock
fnstenv
push
rorb
mov
jle
inc
je
xchg
cmc
sub
stc
or
jmp
dec
out
sarl
pop
imul
adc
ss
js
adc
pop
movsl
xchg
add
test
pusha
lock
shrl
pop
aad
mov
ret
pop
outsl
sub
in
mov
cmp
inc
mov
in
cmpsb
adc
loopne
push
inc
add
movsl
xor
jl
test
lahf
outsl
mov
inc
xor
sti
or
test
cmp
push
mov
cs
pushf
pop
adcl
bound
pusha
cmp
jno
icebp
jle
scas
in
in
push
add
iret
sbb
cmp
lea
and
pop
push
dec
andl
repnz
dec
adc
movsb
sub
xchg
jge
adc
cmp
xchg
push
pushf
xor
sti
jmp
sub
lcall
dec
mov
add
cmp
xchg
inc
push
fwait
mov
aad
notb
sbb
xchg
or
pop
xchg
xchg
inc
mov
lcall
xor
dec
dec
ja
call
add
sub
mov
adc
lods
ret
or
cltd
push
xchg
xor
dec
out
mov
es
jge
stc
lcall
loopne
call
xchg
push
and
stos
stos
xchg
leave
xchg
jne
mov
jb
lret
lahf
repnz
outsb
dec
je
xchg
dec
xor
pop
xor
add
rcrl
scas
push
movsl
loopne
pop
add
daa
xor
mov
in
push
mov
test
arpl
mov
and
pop
jmp
divb
xor
xlat
sub
jae
or
add
pop
or
jnp
rclb
add
divl
fiadds
mov
push
sbb
jo
sarl
sahf
adc
and
jbe
and
stos
cwtl
aaa
mov
test
mov
xchg
inc
arpl
cli
lcall
mov
push
scas
pop
lahf
inc
mov
shrl
std
lret
movsb
adc
and
sti
and
pop
aas
lret
dec
arpl
adc
adc
mov
push
mov
mov
std
mov
push
or
test
jp
insl
out
add
mov
mov
in
xchg
stos
shll
imul
fmul
lock
pushf
stos
push
xchg
mov
add
push
std
jmp
enter
daa
cmp
lahf
dec
add
dec
mov
and
or
xor
jb
inc
add
out
add
inc
aam
test
test
add
dec
add
add
mov
lahf
popa
sti
arpl
aad
movsl
mov
jo
ficompl
inc
adc
daa
sbb
aas
sub
or
js
xchg
frstor
jl
mov
dec
movb
pop
aas
cld
or
subb
mov
repz
outsb
mov
cmp
xchg
pop
std
xor
fldt
cwtl
notl
mov
jmp
in
sbb
or
cmpsl
sahf
insl
cld
aam
adc
and
mov
cmp
cltd
xlat
mov
fsubl
addr16
shrl
dec
adc
pop
sub
ret
or
dec
fisubs
int3
mov
inc
push
pop
mov
inc
in
int
pop
lods
add
xor
cmp
pushf
cmp
mov
ss
lock
loopne
pop
jmp
push
cmpb
negl
out
repnz
jne
scas
and
adc
adc
inc
and
in
dec
dec
in
fnstsw
fcomps
xor
jle
into
out
mov
jmp
lods
stc
clc
mov
xor
jecxz
dec
pop
jle
push
je
pop
aaa
inc
cltd
cmpsl
xor
push
std
movsl
in
adc
cmp
in
pop
imul
jp
xorl
dec
mov
ret
inc
sahf
mov
shrb
pop
add
out
adc
sbbb
cmp
mov
fistpll
and
adc
pop
adc
mov
mov
mov
outsb
jecxz
and
or
jae
inc
fwait
cmpsl
leave
xchg
and
in
hlt
cmpsl
jp
dec
das
mov
or
dec
data16
and
mov
movsb
mov
mov
fsubrl
add
adc
call
addr16
xor
push
mov
loop
inc
cs
xor
mov
jge
jb
icebp
xchg
pop
cs
or
add
xor
xor
adc
rolb
cmpsl
inc
popf
dec
movsl
or
bound
lea
or
dec
sub
sbb
fisttps
mov
mov
getsec
add
das
lods
int3
xor
jo
addr16
mov
ret
lods
test
lahf
into
mov
jmp
cld
pusha
dec
loop
arpl
popa
addr16
and
xlat
ljmp
xchg
cmp
pop
test
mov
pushf
add
leave
dec
or
outsb
jle
test
loope
fsts
and
lods
inc
fisubrs
lods
mov
mov
jb
mov
push
mov
sbb
jno
cmpl
int
mov
ja
in
pop
xor
adc
insl
js
test
pop
jnp
xchg
jno
je
iret
mov
push
gs
mov
and
fadds
pop
mov
cltd
sarb
mov
lock
lea
adc
adc
cwtl
mov
or
js
call
hlt
addl
xor
addl
add
xorl
mov
movl
movb
andl
mov
inc
mov
cmpl
jne
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
xor
andl
add
orl
mov
adc
jmp
or
rcl
cmp
pop
jns
popa
add
hlt
mov
and
jo
rorl
jmp
vpcomud
scas
pop
mov
and
rol
shl
decb
inc
addb
cmp
movups
adc
dec
data16
mov
mov
xchg
inc
add
ficompl
xor
jle
mov
mov
mov
mov
sub
mov
in
xchg
aad
data16
repnz
addr16
pop
jb
fcmovnbe
imul
and
xchg
mov
xchg
flds
inc
sub
outsb
xlat
push
cmp
setge
push
jns
test
mov
into
dec
inc
sub
add
push
lods
pop
addl
jnp
sub
dec
mov
into
fiaddl
jl
lods
cmp
aam
movsl
cmp
fisttpll
rcl
and
add
xlat
js
pop
mov
sbb
cmp
pop
cmp
movsl
pop
mov
push
gs
rcll
xchg
stos
inc
jecxz
mov
sti
pop
sub
insb
movsb
fldenv
mov
mov
push
sub
sbb
sub
cli
push
adc
paddusb
popa
sbb
push
adc
xchg
cmp
pop
pop
pop
sub
call
shlb
stos
mov
and
cmc
lods
adc
cmp
clc
out
inc
xchg
mov
mov
cmp
shll
pop
ficoml
cmovnp
sub
xchg
push
push
rcpps
leave
jge
mov
or
ret
jnp
dec
je
or
clc
adc
push
mov
dec
push
fists
arpl
insb
cmp
cli
pop
movl
int
sub
pushf
paddsw
sti
dec
hlt
push
stc
sti
bswap
aad
cmp
xorl
pusha
out
aas
mov
cmp
push
sub
fcomi
or
lret
inc
jmp
push
lcall
mov
repnz
insl
fstpt
decb
test
cmp
std
push
adc
push
cli
mov
mov
xchg
sti
and
pop
xchg
into
and
out
inc
dec
aas
cmpsl
cmp
sbb
cld
or
loop
pop
out
test
inc
xlat
sbb
and
cs
jbe
dec
xchg
inc
mov
fisubrl
sub
loop
push
ljmp
out
enter
lahf
mov
jle
push
xor
pop
mov
scas
cmc
lds
iret
popa
and
lea
jg
out
dec
lcall
aaa
ja
push
hlt
cltd
jae
shrb
stos
rorl
and
and
roll
shrl
mov
mov
popf
xor
add
outsb
ds
mov
and
cmpsb
mov
mov
sbb
enter
rclb
fisubs
xchg
pop
inc
adc
sub
mul
daa
mov
xchg
aas
or
mov
jne
sub
insl
jnp
mov
in
rcl
xor
pop
clc
jb
xor
xor
js
push
mov
sub
xor
add
adcl
push
inc
mov
sbbl
xor
add
push
mov
orl
xor
addl
add
xorl
push
lea
push
addl
pushl
adcl
pushl
call
adcl
test
je
lea
sbbl
push
mov
jmp
xlat
and
insb
push
aaa
pop
push
push
sahf
xchg
mov
jo
and
jo
jp
loope
in
ljmp
int3
and
lods
int
lods
sub
ljmp
aaa
leave
xor
cmp
pop
shlb
xacquire
pop
mov
dec
insb
adc
or
cld
sbb
push
fmull
loope
fdivl
loopne
mov
fsubr
jge
pop
inc
jne
dec
sbb
push
shll
cmp
sbb
sbb
lock
jo
pop
cmp
xchg
dec
push
lret
sub
loope
insb
push
loop
fadd
pop
out
testl
imul
mov
dec
mov
loopne
inc
lds
mov
fnstcw
push
or
nop
mov
mov
dec
mov
jno
mov
adc
inc
xor
push
sti
mov
iret
arpl
or
xor
xchg
out
out
inc
and
sbb
sbb
into
jnp
inc
stos
cmpsb
test
adc
push
mov
test
popl
pop
mov
fs
mov
repnz
out
push
stc
rorl
and
lret
push
mov
push
fcmovu
push
mov
pop
dec
in
addb
iret
mov
ss
push
adc
loop
add
stc
lods
popa
call
test
xor
lret
sbb
shrl
cmpsb
jg
and
test
lcall
xor
or
repz
movsb
inc
mov
out
movsb
mov
jnp
push
mov
pushf
mov
insl
mov
pusha
rcll
push
jge
int
aad
mov
fadd
sbb
cli
neg
cmp
js
mov
mov
int
fs
xchg
movsb
int3
bound
icebp
imul
xor
jmp
int3
or
mov
fisubs
testb
and
pusha
inc
addr16
aas
fldcw
xor
inc
dec
mov
xchg
jo
push
pushf
lock
lret
adc
outsb
jl
subb
mov
jle
popf
popa
jecxz
push
inc
fdivrs
icebp
pop
jb
out
push
jp
xchg
jg
pop
dec
mov
add
stc
mov
roll
out
mov
sbb
dec
add
stc
push
imul
push
mov
int3
xchg
adc
pop
jns
or
repz
pop
outsl
sub
in
jmp
test
lret
sub
into
or
nop
push
sbb
jno
cmp
inc
scas
decl
ds
cmpsb
negl
add
mov
mov
adc
fisttps
dec
adc
dec
xchg
push
ret
mov
push
lds
or
xchg
push
aaa
das
add
daa
mov
faddp
fldenv
xchg
mov
fiadds
mov
pop
orb
enter
jle
or
jbe
movsb
mov
mov
loop
clc
sbb
psrlw
push
mov
add
push
mov
mov
pushl
jmp
sahf
das
or
mov
mov
pop
mov
cmpsb
and
and
jo
and
jo
cli
xor
inc
xor
pop
mov
icebp
mov
int3
cmp
int3
jge
xchg
je
xchg
fdivl
mov
mov
out
pop
lods
insl
pop
pop
sub
fnsave
xor
pop
xchg
scas
in
xchg
loop
mov
jae
pop
fistpll
rorl
aaa
imul
in
add
addr16
or
cld
jle
fidivrl
int3
push
inc
mov
mov
cmp
imul
xor
popa
inc
hlt
adc
lea
xlat
adc
sarb
and
xlat
xchg
sbb
aad
mov
dec
decb
out
loope
out
adc
fldl
mov
les
and
add
inc
push
call
out
cmpsb
cmp
mov
xchg
mov
lea
stos
mov
scas
stos
lds
std
cwtl
repnz
cmp
popa
inc
pop
daa
sbb
addr16
push
pop
test
nop
sbb
je
fiaddl
inc
sbb
jmp
push
adc
jl
test
push
out
mov
xchg
mov
std
xor
cmp
outsb
cmp
mov
mov
mov
loopne
jae
popf
dec
hlt
inc
outsl
pop
out
mov
dec
fbld
stos
pop
enter
clc
mov
push
into
sbb
inc
out
inc
xor
mov
mov
out
cld
loope
jo
or
jmp
in
test
push
xchg
cmpsb
jmp
cmpsl
out
pop
ret
jo
adc
addl
lahf
cmp
adc
ret
shlb
sarb
std
push
mov
pop
and
xchg
sub
jae
add
xchg
inc
out
addr16
in
leave
test
je
inc
jne
jmp
cltd
bound
or
mov
shlb
mov
jne
mov
add
in
int
mov
adc
adc
mov
stos
push
xchg
mov
lock
fsubl
fnstsw
mov
push
hlt
gs
enter
sub
shrb
mov
add
xchg
cld
popf
cmc
push
in
sub
leave
push
and
push
leave
rcl
fstps
aam
fbld
add
or
jno
fwait
jns
push
push
cld
push
add
xchg
adc
cmp
loope
fisttpll
xchg
sub
or
cmp
mov
cld
push
subb
adcb
add
lcall
outsb
xchg
or
jnp
fld1
fists
xlat
das
outsb
pusha
sbb
ljmp
inc
ret
mov
mov
outsl
push
loopne
pushf
xor
pop
xchg
mov
cli
mov
push
xor
adc
das
popf
orl
cli
push
shrb
sbb
pop
dec
movsb
push
mov
cld
div
insb
into
mov
jbe
pop
call
mov
cmpl
jmp
in
outsl
pop
outsl
jne
data16
test
pushf
cld
cmc
jno
pop
aad
jo
jge
jo
ja
mov
inc
mov
add
les
rorl
bndstx
pop
xchg
js
aad
jg
or
out
mov
aad
inc
mov
stc
add
mov
iret
xcrypt-ofb
cmpsl
scas
push
dec
adc
xchg
shrb
jo
mov
jmp
ja
lds
mov
int
mov
cli
test
xor
in
arpl
adc
inc
or
test
cmp
jmp
dec
frstor
mov
adc
out
pop
iret
mov
nop
xor
sub
sbb
dec
stos
xor
insb
or
mov
adc
mov
iret
mov
push
fcompl
movsl
push
jne
jle
sbbl
mov
sbb
sub
mov
pop
mov
out
cs
inc
xor
mov
jp
cld
sar
mov
or
fbld
fbld
rol
pop
push
or
inc
add
int
adc
popf
orl
cmp
xchg
adc
hlt
push
pop
loope
mov
mov
inc
pop
stos
imul
sub
in
nop
mov
mov
adc
xor
or
dec
pusha
lods
fsubs
les
pop
lret
sub
stos
jp
jge
movsl
dec
out
rcrb
mov
pop
fnstenv
inc
out
cli
dec
adc
cmpl
mov
out
and
pushf
sbb
dec
ficoms
outsb
jno
bswap
pop
int3
xor
int
lret
insl
into
jg
sbb
xor
mov
add
and
dec
push
mov
stos
jge
cmpsl
sahf
nop
cwtl
fstpl
push
xor
mov
int3
test
imul
das
cmpsl
movsb
push
faddl
sbbl
iret
in
sbb
movsl
int3
addr16
in
pusha
adcb
jg
cwtl
push
dec
xlat
push
scas
inc
sub
xchg
fisttps
orb
or
stc
std
cmpsb
inc
adc
xor
ss
movsl
mov
mov
icebp
push
into
nop
mov
imul
and
aam
cmp
lock
aam
arpl
js
cs
pop
pop
sarl
mov
daa
sbb
mov
jbe
mov
sti
or
adc
cmp
xchg
sbb
loopne
stos
push
js
jl
mulb
push
test
and
xor
inc
adc
push
out
pop
movsl
movsl
adc
mov
arpl
mov
mov
pop
aad
shlb
or
mov
adc
or
data16
jge
xchg
int3
clc
ret
lds
mov
insl
and
enter
shlb
mov
inc
adc
sub
xchg
inc
cmp
lds
add
adc
push
out
inc
xchg
cmpsb
mov
test
lea
mov
je
lea
push
mov
xor
add
push
mov
xor
add
push
pushl
lea
push
pushl
pushl
call
test
je
lea
push
mov
xor
add
push
mov
add
push
mov
mov
pushl
call
mov
xor
mov
sub
sub
mov
add
mov
mov
mov
mov
xor
sub
jmp
ja
mov
mov
mov
shlb
and
jo
jo
orb
js
sbb
into
les
cmp
xor
sbb
sbb
push
mov
cwtl
dec
inc
fwait
dec
jb
cmp
shll
out
mov
pop
pop
imul
sub
sbb
clc
jp
jno
adc
icebp
outsb
ret
pop
xchg
int
shl
jge
in
mov
out
test
mov
and
add
test
pop
mov
cmp
aaa
pop
pop
mul
and
xor
cmp
cmp
ficoms
dec
in
push
xor
fcmovnb
daa
sub
std
imul
or
fstl
iret
push
mov
push
push
adc
xor
sahf
test
jge
mov
std
int3
pop
or
mov
jp
xchg
pop
push
adc
fs
xchg
push
out
loope
mov
push
je
jmp
and
ficomps
lahf
nop
inc
cld
jns
mov
xlat
lahf
scas
loopne
loopne
pop
jg
std
divl
ljmp
ja
ficompl
sub
xchg
jns
popf
sti
dec
push
out
cs
fcmovnu
hlt
push
decb
mov
push
mov
imul
hlt
inc
out
jge
xchg
mov
sbb
or
sbb
push
bound
inc
fwait
int3
in
ds
dec
adc
dec
in
rclb
sahf
adcl
and
mov
into
enter
in
jbe
jbe
out
fwait
push
mov
pop
imul
mov
sbb
or
lds
push
ss
xchg
in
and
push
int
push
divb
push
stos
mov
repnz
pop
mov
out
mov
dec
loopne
adc
sub
or
pusha
sub
dec
imul
add
adc
mov
inc
xchg
mov
adc
adc
loope
and
xchg
orb
inc
jno
jg
sarl
adc
call
add
xchg
xchg
rclb
fidivrl
out
loop
icebp
ja
inc
ss
stc
mov
cmp
lret
cltd
enter
enter
nop
push
and
icebp
addr16
jmp
mov
lds
mov
jb
div
add
xchg
and
in
clc
insb
jns
mov
aaa
push
mov
fiaddl
hlt
aaa
lret
dec
out
aas
shlb
sahf
jne
sub
sub
jns
rolw
push
mov
idivb
jb
jle
pop
aaa
dec
call
cmp
add
xor
fsubrp
xorl
xchg
dec
ljmp
mov
je
nop
jns
push
test
sbb
mov
cmp
xchg
lcall
outsl
sub
mov
js
cmc
add
out
lods
filds
rcrl
es
sti
out
add
sbb
jb
sbb
sarl
mov
jmp
inc
cli
fisttpl
jp
xchg
mov
out
jo
and
jo
lcall
divps
adc
jnp
inc
outsl
dec
xor
in
sub
in
mov
aas
ret
jge
out
lock
dec
sbb
rorb
out
push
je
mov
dec
dec
mov
fs
leave
cwtl
jbe
sbb
lods
loope
test
add
jle
shl
cltd
push
sub
out
outsl
jno
jbe
inc
ret
nop
mov
movsl
dec
mov
dec
push
mov
lock
add
jecxz
push
test
add
sahf
lods
pop
xor
inc
andb
stc
push
sbb
jo
adc
xor
jns
pop
stc
aam
mov
mov
mov
shrb
ret
fwait
pushf
out
mov
mov
mov
jge
dec
call
jnp
mov
sub
xor
ret
xchg
jnp
call
repnz
clc
cmc
jno
ss
cmp
or
jp
mov
mov
in
negl
hlt
add
add
decb
mov
insb
cmp
jmp
push
shl
xchg
int3
sbb
or
xchg
mov
mov
aam
xlat
inc
fdivrs
fisttpl
mov
dec
sub
je
and
mov
push
mov
pop
push
adc
xchg
ret
sbb
xchg
xchg
pop
pop
jne
pop
dec
arpl
rorl
mov
aad
je
dec
pop
mov
in
sti
jg
stc
cli
outsb
xchg
shll
aaa
sbb
repnz
ljmp
mov
stc
stos
adc
pop
rcr
or
cmp
popa
mov
ja
mov
sbb
popf
adc
mov
call
xchg
mov
adc
add
rcll
daa
pop
mov
lcall
test
jne
mov
cmpsl
add
mov
lods
inc
lock
mov
mov
adc
inc
sub
repz
in
adc
mov
aas
mov
sub
sbb
mov
flds
xor
adc
outsl
pop
loope
in
out
jae
push
call
jb
dec
ret
sub
or
rcrl
addr16
mov
lahf
xor
outsb
add
sbbb
push
aad
cmc
cltd
mov
aaa
mov
mov
or
pop
test
orb
mov
push
popf
lahf
push
and
in
subb
add
mov
ljmp
push
daa
not
scas
gs
iret
stos
loope
add
xor
sub
lea
lea
or
pop
cmp
cld
das
fmull
xor
or
dec
pop
xchg
in
daa
and
out
arpl
rcrl
cmp
enter
and
push
loop
sub
xor
scas
cmp
lea
incb
inc
push
jmp
mov
fwait
xchg
fwait
jae
roll
jge
lds
jge
jo
insb
sbbl
sbb
mull
inc
andl
jbe
shl
sti
push
adc
and
xor
xchg
loop
in
inc
mov
fcomps
mov
cmp
in
cmp
rorb
jb
sub
sub
mov
add
daa
adc
xor
xor
fcmovb
and
aas
in
inc
or
cs
jmp
mov
mov
cs
std
repnz
dec
mov
testb
xorb
pop
movsl
inc
push
xor
lea
sub
mov
test
rcrl
and
lods
xchg
xchg
pop
out
call
jle
gs
push
das
mov
sbb
stc
scas
mov
mov
or
insl
in
call
or
icebp
icebp
push
sub
mov
mov
pop
imul
cwtl
iret
cmc
dec
mov
or
out
lahf
test
shrb
jl
mov
and
jno
mov
sub
test
fcmove
jno
dec
inc
xor
xlat
iret
mov
jp
imul
and
pushf
std
jae
pop
mov
add
stos
and
nop
xor
inc
imul
sub
xor
call
hlt
mov
ret
flds
mov
mov
sub
push
adc
fbld
in
jge
mov
sub
cmp
test
inc
mov
adc
xor
stos
in
mov
jnp
xlat
clc
sarb
sbb
push
fisttpll
les
js
cmp
insl
cmp
add
les
sub
xlat
add
push
out
xchg
add
add
jmp
sbb
repnz
in
sbb
stos
inc
sbb
xchg
push
add
scas
or
jbe
mov
add
cli
shll
inc
jnp
jp
cmp
pop
cld
adc
push
xchg
and
or
mov
fwait
push
sahf
testl
inc
or
fsubl
test
adc
inc
push
mov
mov
cmpsl
mov
mov
std
cs
add
aaa
out
push
outsl
mov
insb
vmload
icebp
adc
jo
push
sub
xchg
sbb
in
in
sub
std
lret
adc
mov
bnd
add
aad
add
lods
adc
add
imul
sbb
lods
mov
in
fbstp
stos
xchg
repz
mov
dec
and
stc
sbb
cmp
std
adc
dec
add
or
cltd
fidivs
xchg
int
xchg
or
mov
popf
fmulp
jns
popa
jp
enter
push
xor
inc
mov
call
out
sbb
iret
shll
cs
adc
mov
cmp
cmp
adc
push
jp
jp
pop
dec
xchg
decb
pushl
mov
mov
pushl
lea
jmp
mov
push
mov
bound
fnstenv
and
jo
das
lea
jg
loopne
cmpsl
pop
into
xchg
push
or
aad
in
adc
movsl
sti
insl
sub
andb
cld
inc
push
push
hlt
sbb
mov
negl
adc
xchg
jnp
mov
into
xor
int3
or
adc
in
stos
fcompl
loope
testl
lock
je
push
sub
addr16
inc
in
xchg
dec
cmp
or
jecxz
dec
and
mov
xchg
mov
test
jbe
dec
dec
inc
inc
cli
fistl
into
sub
rorl
pop
cli
bound
sarb
aam
pop
add
ret
jnp
push
lods
test
adc
ret
and
arpl
push
cmp
push
cmp
xor
mov
mov
loopne
mov
xor
mov
and
dec
or
xchg
ficoms
sub
xchg
movsl
or
jge
xor
pop
mov
repz
leave
add
cli
sub
decb
add
out
fxch
add
mov
adc
jmp
loope
xchg
jg
mov
fsubl
ds
lods
mov
dec
xchg
test
pop
mov
out
cmp
popa
popa
fstps
fs
imul
mov
sbb
test
xor
in
inc
xor
daa
push
sbb
sub
inc
lds
xchg
pop
das
je
mov
loopne
scas
adc
fs
xlat
fbld
mov
sbb
daa
sbbb
mov
es
ret
dec
adc
out
cmp
inc
lcall
inc
in
mov
sti
std
xchg
testl
mov
clc
jl
ss
adc
mov
push
fcoml
int3
repnz
sub
fwait
les
sbb
rcll
jp
push
inc
push
sahf
or
das
xor
pop
xchg
mov
xchg
lahf
ljmp
movsb
lcall
aaa
xchg
xchg
sbb
pop
ss
enter
testb
loope
ja
addl
in
cmp
push
rcrl
add
test
nop
cmp
clc
dec
leave
loop
mov
jle
popa
push
test
xchg
movsl
dec
push
inc
xor
and
push
lretw
jecxz
frstor
movsl
aam
int
pop
repnz
pop
jnp
add
or
repnz
roll
sbb
mov
mov
mov
pop
xchg
shrl
lcall
jg
lds
or
cmpsl
pop
jp
insb
xorb
xor
iret
jp
dec
sbbl
adc
das
xchg
pop
cmp
lods
cmp
dec
daa
into
xlat
add
scas
jl
jecxz
out
jo
iret
pop
jb
js
dec
push
jne
int3
outsb
out
pushl
lea
jmp
add
out
out
xor
call
cmpsb
repnz
out
jo
jge
jo
and
ds
pop
sahf
iret
and
bswap
xchg
jmp
aad
lret
xor
inc
mov
hlt
out
sbb
xorl
fistpl
push
mov
insl
inc
push
shll
push
cli
adc
xchg
xchg
shlb
repz
ljmp
mov
inc
sahf
cli
test
in
or
dec
mov
jecxz
push
or
dec
mov
or
sbb
jecxz
inc
or
or
mov
push
ret
outsl
inc
iret
mov
jnp
imull
jmp
pushl
and
js
lcall
sbb
out
das
jle,pn
lds
sub
orb
push
test
movsb
out
icebp
mov
or
adc
ss
pop
sub
inc
adc
fwait
jae
bound
inc
fsubs
std
adc
mov
mov
push
pop
sti
std
cmp
sarl
dec
pop
bnd
pushw
jb
mov
push
fdivrl
mov
shl
adc
add
stos
incl
mov
adc
clc
dec
lods
jns
clc
jbe
test
insl
cli
jg
jl
jge
lret
and
dec
in
sub
loop
push
imul
call
add
testb
jae
sbb
sub
loop
sbb
cwtl
inc
cmp
xor
push
pop
jne
jns
cmp
sarb
loop
loopne
gs
sub
rol
test
dec
test
add
and
ljmp
sub
mov
insl
outsl
fmuls
lea
jb
xor
mov
mov
stc
bound
cli
dec
lods
int
cmp
inc
movb
cwtl
dec
lahf
loope
add
push
xchg
addr16
aas
jl
cmp
lock
jb
or
or
std
sbb
fnsave
sbb
push
sbb
icebp
cmp
into
and
cmp
dec
andl
xorl
jl
xchg
aam
outsl
ret
repz
jmp
fldenv
jmp
mov
ds
loop
adcb
lahf
mov
sbb
xor
or
imulb
xorl
sbb
jns
pop
mov
inc
jo
mov
mov
mov
xchg
mov
adc
insb
mov
out
push
jecxz
pop
fidivrl
xor
rcrl
mov
pop
es
js
jns
jne
arpl
inc
in
fsqrt
xor
data16
mov
push
fs
mov
and
pop
cmp
xor
adc
ret
inc
jnp
ficompl
nop
push
jbe
xchg
cwtl
push
xchg
push
dec
jge
aas
bnd
xor
bnd
js
jge
inc
cmp
jle
jo
std
pushl
lea
pushl
lea
pushl
xchg
inc
inc
sub
push
pop
jmp
cmpsb
jnp
or
lahf
jo
dec
cmpl
jo
out
mov
shl
cmp
cld
pop
outsb
clc
das
cmp
and
shr
lahf
dec
std
jne
js
mov
cmp
pop
jl
sbb
jne
pop
mov
pop
mov
imul
adc
cltd
push
icebp
xlat
mov
cmp
mov
int
inc
inc
inc
cs
xchg
xchg
or
out
push
or
sub
aaa
insb
inc
cmp
out
jmp
jg,pn
fisubrs
fwait
pop
es
daa
cs
rorb
dec
xchg
pushf
mov
push
and
mov
ret
shlb
xor
stc
pop
mov
inc
imul
loop
sbb
jecxz
leave
and
pop
cmp
add
movsb
shrb
jg
adc
or
jnp
aaa
and
add
add
hlt
jne
fldenv
nop
dec
xor
xor
sub
mov
into
mov
inc
loop
nop
subb
fiaddl
das
test
push
add
jno
call
push
jo
sub
lret
adc
pushf
shlb
movsb
mov
and
outsl
lds
shll
jae
mov
cmp
sti
jne
ret
mov
jnp
cmc
and
xchg
movsl
push
hlt
adc
or
cld
sbb
das
mov
dec
lahf
fistpl
clc
xor
in
aas
mov
xor
movsb
ja
jb
inc
popa
dec
mov
and
and
loopne
xlat
repz
jmp
in
aaa
test
daa
jae
xor
jae
inc
inc
pusha
icebp
ds
inc
inc
test
xor
push
or
dec
push
pop
insb
test
pusha
mov
lea
push
and
test
clc
cmp
leave
pop
dec
pop
in
jne
ds
jmp
xor
int3
shl
sbb
test
mov
cmc
jne
in
dec
testl
sbb
shlb
adc
and
mov
test
nop
inc
sbb
aas
pop
xchg
pop
mov
cmp
push
fldcw
aas
mov
pop
aaa
aaa
xor
jne
in
push
xchg
aaa
mov
repz
mov
jmp
mov
sbb
push
add
inc
lret
mov
push
test
sbb
getsec
jno
pop
out
lock
xor
xor
dec
and
bound
test
aam
or
jb
dec
jbe
sbb
pop
dec
mov
push
and
mov
add
vmovlpd
sbb
xlat
daa
test
xor
lahf
mov
negl
jecxz
in
frstor
xor
loope
addb
repz
aad
into
push
mov
and
in
scas
stos
adc
pushf
cmp
data16
dec
fwait
inc
dec
cli
cld
je
xor
fxch
fcompl
fisubl
scas
mov
jo
push
call
mov
mov
jmp
out
mov
ja
add
xchg
dec
mov
out
jo
and
jo
shlb
out
sub
pop
loop
xchg
push
out
xchg
ficoml
push
jnp
xchg
xchg
imul
adc
test
fwait
cli
dec
jge
int
sti
pop
pop
aaa
imul
pop
sub
scas
pop
push
lea
adc
les
test
lahf
into
call
pop
lods
mov
inc
rcrl
pop
test
xor
dec
push
ss
pop
mov
adc
sti
and
jmp
dec
add
int3
lret
add
cmpsl
outsb
jbe
mov
cmc
cmpsb
mov
add
cmp
insl
sbb
xchg
and
inc
push
cmp
lds
in
lods
push
sbb
cmp
jmp
xchg
ja
cmpsb
gs
ljmp
insl
cs
lds
cli
dec
lea
jae
jp
lds
push
daa
outsl
mov
into
addb
push
rorl
push
push
outsb
test
lock
add
xor
xchg
fistpl
sbb
or
sti
cmc
pop
sbb
repz
add
adc
sbb
xchg
lcall
xchg
push
jge
test
mov
cmp
enter
mov
int
jmp
cmp
mov
aaa
movl
popf
pop
pop
in
in
xorl
mov
adc
mov
xor
mov
sub
cli
mov
les
inc
adc
mov
mov
xor
cwtl
dec
lock
pop
mov
mov
jge
xchg
inc
dec
adc
fwait
lock
dec
lcall
and
xchg
in
ds
fisubs
cmc
jno
pushf
pop
vhsubps
sbb
cmpsl
cmp
push
ljmp
dec
lcall
or
inc
xchg
lock
loopne
in
cmpsb
pushf
mov
in
fstpt
mov
addl
jp
pushf
mov
fists
inc
and
lods
fistpll
ds
scas
cmc
jae
out
add
pop
into
lea
leave
mov
inc
pusha
test
mov
xchg
pop
or
insl
std
jmp
jns
adc
mov
and
stos
cmpl
sahf
and
mov
mov
inc
stos
dec
data16
xchg
xchg
stos
dec
lea
adc
add
int3
arpl
inc
imul
mov
out
ljmp
cmp
inc
int
cmpb
outsl
loop
mov
clc
pop
ja
daa
xchg
sahf
or
rcll
in
cmpsb
sub
cwtl
or
ret
pop
cld
cmc
loop
insl
inc
and
add
sbb
and
fdivrp
or
cmpsl
jmp
cmovge
rep
andl
daa
inc
xchg
popa
aad
mov
mov
shlb
mov
lcall
movsl
jp
or
mov
lods
mov
sti
add
pop
pop
pop
leave
ret
push
mov
sub
push
subl
mov
sbb
mov
mov
mov
sub
imul
mov
movl
neg
movl
mov
mov
or
mov
add
mov
adcl
mov
xor
xor
mov
sbb
mov
jmp
arpl
cmc
xchg
cmc
arpl
pop
das
mull
in
jo
lahf
jge
jo
jno
aad
das
leave
imul
or
pop
mov
xchg
mov
or
in
xchg
aam
lret
sub
xchg
sarb
mov
out
add
pop
pop
lods
popf
jmp
cmpsl
add
inc
jge
aaa
pusha
fistpll
dec
add
sahf
subb
ja
mov
test
pop
mov
xchg
int3
movsb
add
decb
imul
divl
push
aam
dec
ja
mov
icebp
dec
inc
out
gs
nop
daa
jp
sub
int3
test
lods
fbstp
push
or
sahf
movsb
pop
sbb
inc
fistps
sahf
jecxz
jg
cmc
xor
inc
stos
cmp
adc
enter
test
push
js
scas
jo
fmul
stos
and
xchg
bound
arpl
and
clc
lea
xchg
pop
inc
cmp
dec
and
dec
loopne
or
add
pop
and
add
lock
cmp
mov
inc
in
adc
mov
int3
or
jg
lret
xorl
sar
aad
cmp
mov
jmp
popf
sub
iret
jle
loope
in
outsl
push
jnp
xchg
in
adc
shrb
mov
test
mov
ds
std
sbb
pop
fisubs
shlb
shr
fldcw
mov
xor
cmc
add
imull
mov
es
aam
sbb
xchg
cmpsl
lds
shll
mov
or
mov
xorb
push
ja
sbb
mov
mov
sub
dec
cmp
adc
imul
add
pop
lahf
dec
cmp
cli
aas
add
sti
cmc
jno
sbb
push
mov
push
adc
imul
add
sbb
xor
out
mov
adc
mov
stc
mov
mov
test
add
aad
adc
loope
rcrb
mov
arpl
movsl
cmp
dec
mov
out
addl
xchg
stos
push
sub
dec
jnp
sbbb
cli
jne
sub
mov
leave
rcll
jne
lahf
fwait
lahf
popf
loope
icebp
xchg
mov
daa
popf
jecxz
popf
xor
loop
fsts
sub
dec
push
imul
mov
cmp
out
adc
pop
les
pop
cmpsl
fstps
lds
push
imul
sub
push
add
or
repz
push
jmp
xor
or
movsl
shll
dec
lock
call
or
xchg
movsb
pop
aam
pop
pop
xchg
sbb
ret
lret
loop
das
outsl
mov
lock
test
mov
ret
into
adc
mov
sbb
rorl
clc
cmp
mov
xchg
xor
aaa
stc
hlt
add
adc
cmpsb
loop
sti
pushl
sbb
pop
int
xor
xlat
data16
xchg
push
mov
dec
flds
adc
xchg
outsb
call
stos
jno
jecxz
lds
fldenv
xchg
sbb
icebp
jp
imul
inc
rolb
repz
aas
or
dec
add
sbb
in
movsb
jb
cs
pop
outsl
push
push
mov
inc
add
or
cmp
xor
adc
add
movl
cmpl
je
cmpl
jne
pushl
call
mov
dec
mov
jmp
mov
adcl
jmp
xlat
mov
mull
mov
mov
call
jo
sbb
add
sbb
pop
jp
cmpsb
sbb
push
jg
sahf
out
int3
push
push
pop
ret
stos
and
mov
fidivl
inc
and
cmpsb
dec
sahf
cwtl
jnp
cld
xor
in
faddl
negb
mov
mov
or
pop
push
popl
mov
mov
add
icebp
fdivs
dec
stos
add
cmp
inc
xchg
insb
sub
sbb
or
xor
cmp
test
pop
mov
dec
or
out
add
dec
pop
add
fwait
cmp
into
cmp
sbb
test
and
out
movsb
lret
sbb
shrl
xchg
popf
cmpsl
addr16
mov
xchg
lods
xlat
push
sarb
xchg
jl
hlt
enter
push
xor
xor
scas
bound
jle
jno
les
lcall
ljmp
test
fisttps
sub
mov
filds
sub
push
aad
test
add
push
sub
lods
nop
cli
cmp
hlt
jle
xlat
rcrb
lcall
or
pop
mov
mov
pop
push
sub
jg
mov
mov
adc
inc
add
in
xchg
sub
push
orb
iret
aad
lret
and
mov
mov
sbbb
inc
and
dec
inc
cmpb
ficomps
jns
push
fs
inc
dec
rolb
or
imul
add
pop
fwait
cmpsb
pushf
cmp
pop
movq
lcall
test
cmp
jae
pop
pop
repnz
das
lahf
cmc
in
xchg
or
mov
push
cmp
mov
mov
loope
mov
mov
adc
and
or
push
mov
xchg
fisubs
ficomps
mov
arpl
push
jmp
jae
add
xor
jne
jae
dec
in
aam
cmpsb
popa
sub
mov
and
pop
cmp
iret
sbb
mov
cwtl
jno
mov
jg
push
sub
xlat
push
lds
aam
mov
jecxz
shll
fbstp
or
cvttps2pi
pop
out
push
mov
sub
shlb
push
inc
or
mov
sbb
fiaddl
stos
test
inc
lock
inc
mov
icebp
mov
in
in
cltd
push
cld
adc
or
pusha
sub
popf
divb
cmp
cmp
jns
shl
pop
lds
or
jle
dec
or
ror
xchg
mov
pusha
jo
or
push
mov
sbb
stos
into
adc
ljmp
mov
or
dec
aaa
shrl
mov
lods
sbbl
xchg
fs
pop
cld
jle
lods
jae
rorl
xchg
mov
test
and
or
pop
pusha
jmp
fldt
insb
jns
sbb
mov
mov
aaa
mov
sti
je
lods
loope
sbb
movsb
push
cmc
data16
ljmp
fdivrs
lret
rcrb
out
out
add
cmp
inc
hlt
lds
mov
dec
push
arpl
out
in
flds
pushf
repnz
movl
adc
movl
andl
jmp
xor
or
inc
mov
cmpl
jae
cmpl
jne
push
push
push
push
call
jmp
add
movl
andl
jmp
into
iret
cmpsb
cmp
sbb
leave
mov
jo
lahf
jge
jo
and
das
and
mov
and
cmpsb
xchg
int
dec
jb
cli
jecxz
sub
mov
shl
pop
out
and
sahf
in
arpl
inc
sbb
or
dec
aaa
dec
insb
lods
lret
sub
test
mov
fwait
push
data16
sub
sbb
das
sub
outsl
mov
lods
loope
out
sub
fiadds
add
dec
enter
hlt
sarl
out
sub
out
outsl
mov
xor
lret
orb
iret
jmp
or
xchg
xchg
mov
jl
sub
push
push
xor
push
lods
push
lods
push
or
aaa
repz
adc
out
xlat
dec
aas
test
mov
pop
push
sub
mov
lret
or
lahf
les
dec
xchg
cmc
add
push
mov
xor
push
scas
icebp
test
ja
in
in
cld
xor
xchg
es
mov
out
sahf
mov
and
test
dec
lods
fsts
mov
pop
sub
add
add
dec
add
lea
mov
pusha
xchg
jno
cmp
in
fnsave
out
imul
cs
adc
fdivl
sub
adc
add
cmp
xchg
pop
je
jecxz
gs
mov
push
ret
or
add
add
jne
cmpsb
and
cmpsl
pop
jle
repnz
mov
push
icebp
jecxz
cmp
jecxz
pop
mov
cmp
mov
cmp
xor
das
test
or
add
test
bound
xorb
add
in
cmp
sarl
fidivs
adc
stos
mov
cld
in
lret
push
pusha
bound
mov
sti
sbb
pop
push
pop
insl
sbb
adc
dec
mov
js
mov
inc
mov
shlb
xchg
xchg
cmp
xchg
aaa
pop
adc
in
mov
pop
fidivrs
cli
loopne
clc
mov
add
insb
pushf
jge
fst
scas
test
cmp
loop
lret
out
mov
adc
imul
fsubrs
in
pop
cmp
ss
adc
xchg
and
dec
xchg
or
push
xlat
jge
lock
xor
push
add
out
imul
fs
roll
push
repnz
lods
fstps
aaa
push
inc
fsubrs
xor
outsl
out
stc
pushl
or
xor
jne
mov
pop
movsl
and
add
bound
lock
lods
jg
pop
mov
mov
pop
ss
xchg
movb
ret
cli
inc
dec
pop
lcall
into
push
mov
mov
jb
lods
fbstp
jo
outsl
icebp
mov
adc
rcll
shrl
cmp
ja
xor
pop
out
cld
adc
mov
and
dec
jne
out
xor
jp
scas
mov
imul
aad
mov
mov
push
mull
int
imul
insb
xor
pushf
mov
pusha
push
repz
ljmp
fucom
lret
or
repnz
adc
cmp
xchg
lods
sbb
adc
push
pop
loope
movl
movl
andl
xor
or
inc
mov
cmpl
jne
pushl
pushl
push
pushl
pushl
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
call
cmpl
jne
xor
add
inc
mov
jmp
mov
xor
mov
movl
adc
mov
xor
sub
mov
add
movl
cmp
movl
je
movl
push
movl
jmp
mov
movl
cmpl
je
cmpl
jne
pushl
push
push
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
xorl
sub
mov
add
mov
jmp
addr16
xchg
jno
ja
dec
in
std
outsl
shll
in
jo
lahf
jge
jo
push
jg
jl
jmp
lret
inc
sub
xor
xchg
mov
push
push
sbbb
add
adc
sarb
and
mov
mov
mov
mov
cmp
pop
fwait
sahf
adc
bnd
sbb
cmp
insl
adc
pop
loope
cmpsb
lods
mov
xchg
pop
pop
std
mov
sub
xor
cmp
rcrb
push
sub
mov
inc
xchg
fstp
lods
jge
or
push
or
lds
cli
or
cmp
and
cmp
xor
in
popa
push
jle
cmp
mov
pushf
sub
sub
je
repnz
arpl
addb
out
xchg
push
pop
xchg
arpl
dec
add
xchg
or
into
push
push
fcmovnbe
movsl
rorl
xchg
out
jl
push
xor
movsl
xchg
imul
fwait
jne
mov
pop
or
xlat
insb
jl
addr16
outsl
push
lock
aam
xlat
add
pop
mov
xchg
pusha
ds
cmpsl
dec
mov
jnp
and
and
int
std
inc
mov
insb
loopne
popl
xchg
pusha
mov
mov
inc
xchg
pop
or
xchg
ss
in
or
enter
aad
sbbl
pushl
jmp
divb
jle
in
mov
pushf
leave
dec
jne
add
push
dec
mov
cmp
movsb
negl
out
jle
sbb
mov
std
inc
add
mov
push
lret
mov
add
or
outsb
xor
xor
shlb
cmp
cli
push
ja
mov
fadds
lea
leave
lea
push
add
dec
mov
dec
scas
cwtl
sbb
rcll
movsl
add
jns
nop
test
lret
mov
add
add
jb
int3
fstpt
inc
or
shrl
xchg
loop
aad
lret
aad
mov
imul
cltd
js
and
xchg
jmp
cwtl
leave
push
dec
decb
xchg
aad
xor
loope
jo
lahf
lahf
mov
and
insl
push
ljmp
cmp
sahf
push
ds
insb
jle
push
int
pushf
and
sbb
insl
mov
insb
adc
loope
ss
inc
mov
add
dec
ljmp
or
jp
jp
inc
pop
push
out
push
xor
decb
jo
rol
push
sbb
loopne
jge
jl
push
or
ffree
mov
outsb
or
adc
and
loopne
jae
mov
movsb
mov
jl
sub
dec
adc
jbe
sbb
imul
adc
mov
dec
and
pop
lods
fmulp
out
clc
cmc
sbb
loopne
mov
imul
dec
mov
pushl
xchg
or
push
xchg
cs
insb
and
pop
shrb
lret
sub
data16
push
ret
mov
sbbb
jno
popf
das
in
popf
sarb
push
pushf
in
in
lods
out
lods
mov
xor
mov
cmp
mov
inc
pop
rclb
lods
ret
lods
mov
into
out
or
add
pop
push
jnp
pop
fcomp
xchg
jno
and
sbb
adc
mov
inc
rolb
xchg
test
cmp
aas
jno,pn
pop
negb
lea
bswap
movsb
les
rolb
add
out
add
rol
add
fwait
sbb
add
cli
movl
jb
mov
sbb
mov
xor
sub
xor
movl
cmpl
je
cmpl
jne
pushl
push
pushl
push
pushl
call
mov
dec
mov
jmp
andl
jmp
xor
or
inc
mov
cmpl
jae
cmpl
jne
push
pushl
call
cmpl
jne
mov
inc
mov
jmp
adc
add
sbb
add
imul
sub
mov
movl
cmpl
je
cmpl
jne
pushl
push
call
mov
dec
mov
jmp
mov
sub
cmp
ja
mov
xor
add
jmp
mov
mov
xor
xor
add
add
imul
mov
mov
sub
cmp
ja
mov
jmp
mov
mov
xor
xor
add
jmp
xor
mov
mov
jae
jg
ja
cmpsb
movsl
aas
add
jo
lahf
jge
jo
call
mov
mov
lods
cmp
cmp
leave
sub
cli
negb
mov
push
sbb
sbb
lods
inc
out
fmul
ljmp
or
xchg
clc
rorl
ds
push
out
daa
loop
xor
pop
imul
jb
repnz
adcl
dec
push
rcrl
popl
repz
jo
jae
pop
shll
repnz
push
cmp
pop
iret
pop
inc
and
xchg
mov
arpl
into
imul
jle
mov
mov
mov
daa
lock
dec
cltd
popl
xor
cli
lods
ret
pushf
or
and
popa
push
into
ljmp
push
dec
jo
test
xchg
movsl
adc
pop
mov
stos
andl
inc
cmp
div
scas
jo
pop
pop
push
sbb
push
jmp
into
push
mov
gs
xor
and
mov
xor
out
scas
dec
mov
sbb
xor
xchg
dec
idivb
rcrb
cli
sbb
out
in
dec
adc
dec
aam
mov
add
push
mov
or
pop
insl
lea
xchg
pop
xlat
mov
lcall
ljmp
mov
xorl
ljmp
push
jbe
push
or
and
pop
loope
js
sub
fisttpll
fistpl
mov
bound
push
mov
fimull
insb
ja
je
movsb
sahf
int
pushf
mov
sahf
lods
jg
fidivs
xor
jp
cwtl
pop
ja
shll
call
inc
out
cmp
xor
xchg
ljmp
jge
sub
fsubrs
adc
shlb
xlat
sbb
loopne
pop
shlb
xchg
aaa
cmp
daa
add
aam
and
sbb
es
pop
mov
rcr
stc
or
xchg
ljmp
mov
movl
cs
sbb
xchg
int
adc
xor
in
lods
push
popl
sbb
mov
loop
shlb
cmp
pop
in
adc
sahf
jge
dec
mov
dec
and
dec
sbb
mov
addl
inc
and
push
movsl
or
adc
aam
jns
mov
mov
inc
push
pop
xor
mov
pushf
mov
adc
mov
sub
or
cltd
cmp
push
adc
inc
mov
jp
or
add
push
add
int3
push
or
xchg
xor
pop
pop
or
pop
adc
push
or
pop
inc
aam
loope
aad
dec
xchg
mov
fsubrp
xchg
mov
or
mov
xchg
in
mov
inc
or
fcomps
andl
mov
test
cmp
rep
sub
std
cmpsb
cmp
aam
adc
pcmpgtb
fcmovnbe
push
mov
xor
stos
push
fs
testl
xchg
pop
bound
pop
inc
adcl
cmp
inc
test
mov
sub
sti
xlat
aaa
and
test
mov
popf
sbb
jns
xor
xor
test
mov
xorl
inc
add
ds
shr
mov
jne
sub
lret
ja
and
mov
jge
jo
cmpb
push
mov
out
popf
mov
dec
sti
nop
push
fisubrl
pop
mov
shrl
fsubrl
mov
dec
iret
stos
dec
idiv
mov
mov
mov
int3
test
sub
in
jle
mov
pop
xchg
add
lahf
dec
jl
jle
sub
cmp
mov
divb
mov
stos
add
adc
lods
pop
jecxz,pt
mov
xchg
je
enter
sbb
mov
mov
aad
sbb
cmp
movsl
outsb
xchg
mov
test
xchg
pop
inc
call
les
add
add
xor
pop
inc
mov
ret
scas
or
sub
aam
dec
clc
push
js
adc
dec
jl
fcompl
lds
fcmovu
cltd
aas
xchg
push
lahf
add
movsl
mov
push
ror
xchg
ljmp
rorb
imul
daa
push
aas
xor
stc
adc
icebp
adc
sub
adc
adc
mov
icebp
xlat
ljmp
sti
lret
or
pop
and
or
das
das
outsl
mov
fnstcw
out
and
push
push
dec
lret
pop
inc
jne
lds
inc
loop
imul
into
xchg
sbb
ja
in
sbb
in
push
pop
or
pushf
call
xchg
lret
adc
scas
xor
fucomp
sub
and
cmc
gs
sub
jge
cwtl
int
cld
or
in
and
rolb
cmp
xchg
loopne
push
adc
movsb
fwait
dec
push
jle
ds
scas
add
adc
jp
cmp
push
imul
and
sbb
pop
daa
dec
gs
mov
in
xor
cwtl
push
test
xor
jg
inc
stos
cmp
std
push
jnp
addl
sub
shlb
push
mov
and
pusha
mov
or
stos
ret
in
cmp
lock
nop
fdivl
pop
jle
cmc
arpl
pop
dec
mov
cmp
leave
pop
mov
mov
adc
nop
inc
lret
repz
dec
hlt
dec
push
push
cmpsb
shlb
add
or
insl
clc
fiadds
push
xchg
adc
testl
mov
mov
add
dec
or
out
push
icebp
sarl
inc
nop
std
insb
adcb
lret
push
fidivrs
jmp
xchg
scas
shll
xchg
xchg
dec
lret
lret
lods
add
or
mov
out
icebp
mov
sbb
mov
test
cmp
mov
pop
loope
rorb
call
add
or
pop
pusha
sub
cmpsl
push
cmp
out
mov
sahf
jecxz
imul
xchg
jo
hlt
scas
dec
outsb
iret
cmp
dec
adc
pop
shlb
sub
inc
orl
loope
cmpsb
test
imul
xor
cmc
add
cmp
movsl
aam
push
fcmovu
fstl
jecxz
xor
xor
xor
mov
and
mov
push
hlt
pop
push
pop
popf
and
push
inc
sbb
jno
add
adc
cwtl
pop
pushl
jb
xlat
popa
cmp
mov
fwait
mov
icebp
push
inc
test
sub
or
mov
imul
mov
mov
sub
cmp
ja
mov
jmp
mov
jmp
cmp
mov
loope
loop
pop
loope
mov
roll
jo
jns
mov
test
out
jge
imul
or
xchg
jbe
jecxz
arpl
push
jb
fwait
or
dec
lcall
enter
adc
lcall
popf
dec
or
out
or
pop
ficoml
les
aaa
adc
ds
push
ds
mov
mov
and
test
adc
sub
ficoml
lods
into
lret
add
push
outsl
sub
push
mov
daa
hlt
push
xor
into
addr16
sbb
push
and
or
rcll
xor
ret
incl
inc
pop
sbb
sbb
pop
mov
inc
popa
pop
out
mov
xor
lret
jb
xchg
pop
cld
mov
mov
iret
insb
into
xor
imul
push
xlat
mov
add
jg
pop
jl
dec
dec
mov
lahf
mov
popf
call
into
lcall
orb
orl
repz
xor
adc
xchg
in
sbb
imul
and
mov
dec
jne
lea
ss
cmp
lea
scas
push
test
and
movaps
call
mov
xorl
in
dec
pop
popf
lahf
jbe
fmuls
hlt
cmp
repz
insl
cmc
dec
sbb
adc
push
push
xor
lds
add
mov
or
mov
mov
std
imul
shll
arpl
jge
lods
repz
cld
push
lcall
jecxz
ss
add
sbb
cmpsb
mov
mov
js
and
mov
and
xchg
aaa
pop
sub
into
adc
jnp
outsb
adcb
cltd
mov
inc
mov
int3
adcb
xchg
jae
daa
into
inc
imul
cmpsl
shrl
insl
xchg
outsl
mov
lret
scas
call
test
sti
test
mov
push
clc
divb
xor
leave
xchg
or
jno
ret
fistl
sub
shlb
subl
push
add
incl
and
pop
mov
or
insb
movsl
rcrb
stos
or
gs
ss
dec
std
repz
fldcw
dec
adc
mov
jbe
mov
push
jae
mov
pop
pop
xlat
lock
sub
ficoml
pushf
push
or
popa
lahf
xchg
bound
push
outsl
or
push
inc
insl
push
int3
pop
adc
ja
notb
aaa
mov
mov
aam
dec
add
xor
bndstx
aas
or
int
faddl
mov
es
xor
add
lcall
mov
push
or
je
aam
dec
in
rorb
fwait
cs
iret
sbb
cli
call
push
push
xchg
dec
adc
or
je
xchg
push
pop
or
jle
out
arpl
sahf
pop
sub
je
lock
cmp
add
push
sbb
ret
jae
jmp
jns
mov
push
in
add
movsb
je
push
std
sahf
sub
inc
ret
ds
cmp
rolb
add
inc
adc
adc
mov
xor
xor
add
add
imul
mov
mov
sub
cmp
ja
mov
jmp
mov
mov
xor
xor
add
add
imul
mov
jmp
xchg
fcomi
push
jb
mov
shlb
jbe
pusha
xorl
jge
jo
into
cmpb
xchg
daa
fimull
dec
dec
pop
jmp
shrb
jae
scas
sub
insl
cmp
test
lret
lret
mov
dec
inc
inc
int
pop
rclb
lods
outsl
push
mov
or
sub
sarb
pop
inc
lock
dec
lcall
jae
jmp
pusha
stos
adc
push
or
mov
dec
mov
sbb
pop
lds
sbb
fwait
loope
int
sbb
xchg
xlat
pop
mov
mov
lahf
pop
push
pop
imulb
out
cwtl
clc
test
or
or
add
fwait
into
sarl
mov
popa
pop
ljmp
stos
mov
or
je
pop
cmp
repnz
cmp
xchg
jg
in
ror
push
addr16
cmc
fisubrs
cmpsb
pushf
fs
bound
cltd
sub
divb
jle
icebp
icebp
mov
aam
cmp
xor
pop
mov
mov
mov
rorl
sbb
sbb
push
xchg
and
jne
xlat
mov
adc
in
fidivrs
mov
or
sub
xor
out
jl
and
out
bound
adc
pop
xchg
adc
test
push
jno
add
fs
lcall
daa
mov
xor
or
xchg
loop
adc
inc
dec
inc
lcall
xchg
ss
dec
test
in
popa
pop
mov
popf
and
lock
inc
sbb
dec
sub
adcb
pop
cwtl
push
roll
adc
mov
or
push
lret
inc
jg
and
daa
fwait
aaa
mov
add
adc
scas
or
xor
add
pop
scas
int3
stc
push
fs
mov
out
nop
mov
js
test
pop
adc
in
nop
cmp
xchg
xchg
loop
int3
and
data16
arpl
out
dec
data16
jno
imul
test
ret
into
fbstp
out
and
mov
mov
gs
adc
rcrb
sbb
movsb
add
xor
ret
jae
jnp
stos
and
and
js
jbe
lret
inc
push
add
or
mov
adc
out
test
xor
pop
enter
jp
inc
mov
daa
outsb
cli
stos
repnz
or
or
pop
aaa
mov
roll
adc
add
fstpl
inc
jo
dec
in
iret
pop
adc
push
je
and
rolb
xlat
enter
lods
ret
cltd
gs
loope
pushf
xchg
data16
xchg
mov
jns
sub
stos
mov
pop
add
xchg
js
sub
fsubr
faddl
mov
loope
lods
and
fwait
popf
dec
xor
and
stos
jne
pop
add
pop
aas
jne
insl
sub
cli
lret
xchg
and
xchg
inc
dec
rorl
negl
int3
jbe
jns
jp
loop
mov
push
push
inc
addr16
ljmp
xchg
inc
cmpsl
lahf
push
xorb
pop
jle
pop
push
aam
fwait
jg
scas
std
cli
or
lahf
mov
xchg
test
push
je
or
or
and
and
shll
inc
out
ja
xchg
mov
fiadds
leave
imul
insl
inc
popf
subl
xchg
push
mov
sub
cmp
ja
mov
jmp
mov
mov
xor
xor
add
add
imul
mov
mov
sub
cmp
mov
jbe
jmp
xchg
dec
inc
inc
inc
push
xchg
dec
fdivs
adc
add
lahf
jge
jo
xor
push
lock
sbb
mov
xor
add
push
movsb
pop
mov
shll
sti
lret
lds
xorl
cmp
xchg
sub
add
mov
jmp
lret
lods
scas
adc
lods
adc
or
xchg
sub
shl
dec
icebp
out
test
in
gs
cs
xor
xchg
lds
push
decl
inc
call
sbb
pop
mov
loop
fs
ror
leave
es
mov
jae
into
out
mov
push
das
loope
sbb
int
sub
push
jne
jbe
in
test
and
add
pop
push
xchg
cmp
pop
imul
adc
call
mov
xor
sarb
sti
cmpl
cmp
stos
insb
sahf
jae
jno
or
sub
jecxz
bound
cmp
test
dec
mov
roll
mov
mov
pop
add
push
movsb
loopne
push
popf
das
sbb
sbb
mov
in
ljmp
or
push
sbb
cwtl
and
pop
jb
dec
adc
sub
pop
test
push
cli
adc
sbb
shlb
loopne
rorl
scas
je
inc
cli
mov
jmp
jle
hlt
fcoms
stos
cmpsl
and
lds
ret
insl
adc
in
mov
pop
insb
pushf
inc
mov
xor
test
sub
mov
test
dec
in
out
push
inc
dec
negl
add
mov
das
pushf
out
fdiv
rcrl
cmp
and
hlt
into
loop
nop
jae
mov
sub
add
lods
xor
test
dec
mov
push
test
xchg
mov
push
es
or
loope
jne
ljmp
pop
out
xchg
mov
nop
popw
sub
or
dec
test
in
cli
add
outsl
ds
inc
test
mov
fisubrs
loop
push
dec
leave
sarb
fsubrl
ss
mov
cmp
push
repnz
jne
aaa
les
std
les
sbb
xchg
mov
jbe
mov
fcmovb
aad
dec
loopne
cli
jbe
push
jbe
in
cmpsb
push
jbe
int3
call
int3
jae
cmpsb
mov
iret
faddp
cmp
jmp
or
sub
mov
sbb
stos
pop
mov
aam
outsb
cmp
shrb
out
inc
inc
nop
xchg
icebp
sahf
push
imul
add
mov
mov
sbb
xchg
jno
add
push
pop
call
stos
and
xchg
xor
aad
pop
xchg
sbb
out
test
pop
and
loope
int
nop
aad
push
sti
testb
ja
xchg
incb
mov
int3
insl
and
in
or
in
mov
or
add
xor
sbb
add
popf
call
jmp
roll
mov
jb
cmp
lock
mull
cmp
jno
jmp
xor
bound
mov
mov
jne
roll
adc
std
insl
cmp
lods
xchg
jne
sbbb
mov
mov
lret
xchg
stos
sbbb
iret
in
pop
push
mov
mov
xor
xor
add
add
imul
mov
mov
mov
mov
add
movl
mov
movl
movl
mov
xor
add
jmp
mov
jmp
lcall
out
ds
daa
aad
mov
lahf
jge
jo
pop
pop
std
xchg
mov
mov
std
mov
mov
pushf
gs
sbb
shl
jns
in
cs
cmp
adc
adc
cs
ja
or
jmp
cltd
pop
pop
repz
sahf
jp
outsl
push
ljmp
scas
xchg
cld
out
fstpl
cmp
mov
in
in
fsubp
call
xchg
aad
mov
jmp
fcomps
jnp
jle
adc
insb
lahf
mov
sub
out
ficomps
leave
and
mov
int
inc
outsl
sbb
jns
fs
sbb
es
jb
and
rclb
ret
push
hlt
stos
out
xor
push
jecxz
pop
sbb
cwtl
rclb
mov
or
adc
in
xchg
imul
mov
pusha
movsb
sub
mov
ljmp
add
sub
cmpsb
xchg
adc
or
insb
std
mov
jnp
pop
int
and
add
repz
inc
js
and
in
mov
adc
out
mov
mov
movntq
pop
or
xchg
out
push
lods
sti
dec
insb
mov
stos
push
sub
add
jne
pop
inc
ret
pop
push
icebp
jge
les
adc
pop
lods
stos
sub
push
je
mov
push
cwtl
push
fisttps
mov
and
aaa
cmp
or
cmpsb
adc
mov
std
scas
rcrl
lret
pop
sbb
cld
aaa
pop
icebp
repz
test
jne
mov
daa
out
ret
xor
cmpb
mov
push
xor
push
loopne
dec
add
dec
arpl
dec
push
dec
cmpsl
imul
inc
jb
lea
dec
rol
push
dec
lahf
cwtl
and
push
push
lods
ja
gs
pop
aam
pop
dec
in
faddl
sub
aaa
mov
and
add
in
or
subl
add
mov
mov
mov
inc
jp
sbb
popa
gs
fs
out
xchg
cmp
xor
inc
mov
adc
ds
inc
jne
pop
js
push
rcl
push
ficompl
stc
xchg
dec
and
cmp
mov
fwait
add
xchg
outsb
jecxz
jns
jnp,pt
or
sbb
jne
jg
pop
clc
jne
adc
mov
adc
out
mov
repnz
fcoml
jae
clc
or
and
push
sbb
test
mov
test
lds
jb
mov
cmp
mov
sbb
cmp
pop
sti
inc
or
std
fs
and
cmp
jnp
enter
and
jae
pop
or
xor
sub
or
mov
dec
daa
adc
and
fldlg2
cmpsb
push
push
clc
sbb
lds
and
or
add
mov
js
lods
push
fildll
data16
or
mov
jge
stos
movsb
lds
and
dec
insl
jo
adc
aas
lods
int
ja
insl
loope
lcall
xor
dec
xor
add
mov
mov
mov
mov
xor
add
mov
mov
mov
mov
mov
xor
add
mov
mov
mov
jmp
xchg
dec
push
adc
push
xchg
dec
lock
pop
push
sti
push
dec
mov
lahf
jge
jo
das
jnp
pop
mov
mov
mov
adc
lahf
mov
out
rep
stos
xchg
and
mov
jle
jl
adc
aaa
je
jo
test
xchg
inc
push
pop
cmp
pop
mov
adc
jle
mov
xchg
ret
xor
cmp
adc
pop
sub
ror
and
fstl
daa
enter
lock
push
test
popf
or
cmpsl
movsb
lahf
dec
add
es
mov
fadds
divl
lods
mov
xchg
enter
push
ret
pop
push
imul
xlat
loop
rolb
xor
add
mov
xlat
movsl
sbb
cld
add
iret
dec
fnsave
jge
push
fsubs
aad
fisttpll
inc
mov
pop
pop
jp
cwtl
addr16
iret
daa
xchg
xor
fwait
inc
adc
adc
ljmp
xchg
inc
in
inc
stos
in
sub
pop
mov
mov
jl
xchg
mov
push
mov
cmp
lds
iret
mov
fnstsw
sbb
cli
cmp
rcrb
dec
jbe
sub
mov
xor
push
push
call
push
cmp
add
stc
in
je
or
mov
adc
jecxz
lret
sub
push
out
test
push
mov
dec
add
mov
cwtl
push
insl
and
in
push
jmp
lahf
jo
add
xor
and
and
cmp
or
dec
pop
add
mov
loop
lods
push
fstpl
mov
sub
out
cmp
shl
push
sub
ja
jp
into
push
sub
pop
shl
jecxz
dec
mov
or
jmp
sbb
aam
jo
aaa
hlt
rcr
sbb
add
dec
push
cmp
stos
fwait
in
jnp
imul
int3
ret
cmp
aas
rorl
cmp
es
xor
aad
pop
rol
das
push
and
cmp
xchg
xor
pop
mov
and
push
aam
inc
icebp
bound
out
xchg
jl
lods
ss
push
pop
sarl
add
mov
sub
enter
int
sub
cmp
pop
insl
rorl
dec
push
adc
xchg
inc
andl
pop
fs
aaa
inc
test
mov
pop
fldl
jp
mov
mov
lahf
dec
adc
out
cmpsl
clc
movsl
mov
sti
adc
stos
lods
mov
pop
mov
push
add
xchg
dec
or
das
inc
adc
movsb
outsl
or
push
aad
mov
xchg
cmpsl
cmp
xor
dec
and
out
negl
mov
jg
push
mov
fnstsw
js
xor
sub
jmp
loop
push
push
xchg
int3
in
sub
sub
hlt
push
or
xchg
lea
popf
inc
add
aad
int3
xchg
pop
push
pop
xchg
mov
sub
cs
pop
inc
pushf
ljmp
mov
inc
lahf
sbb
xchg
in
enter
pusha
fstl
xor
pop
jno
leave
sar
mov
mov
inc
inc
mov
fbstp
sahf
dec
cmpb
push
cmpsl
dec
mov
sti
mov
mov
pop
dec
add
mov
xor
add
mov
mov
mov
mov
xor
jmp
sbb
pop
pop
pop
pop
sbb
adc
ret
pop
stc
scas
in
xchg
jo
lahf
jge
jo
xchg
ret
cmp
imul
js
dec
jle
jns
loope
sub
adcl
push
aad
or
test
push
leave
add
inc
stos
pop
insl
jmp
stc
push
pop
mov
push
mov
xor
scas
dec
push
mov
inc
insb
sahf
cwtl
cmp
testl
add
cmp
movsb
stos
add
or
sub
sbb
xchg
stc
nop
and
mov
adc
scas
cwtl
cmc
pushf
dec
cmp
xchg
ficomps
pop
mov
pushl
into
dec
sub
add
out
mov
sub
and
sbb
aad
imul
push
pushf
movsb
mov
jb
push
push
adc
cmpsl
adc
mov
xor
sub
sbb
jge
pushf
sub
sub
mov
shrb
stc
push
imul
ret
ss
add
xor
stc
pop
mov
enter
xchg
movsb
subl
inc
adc
jnp
ja
stos
stos
fdiv
ljmp
aam
dec
outsb
mov
sbb
jo
mov
int3
adc
inc
lahf
sub
loopne
cld
int
movsb
lods
scas
in
mov
sub
pop
decb
fwait
push
scas
adcl
xchg
js
jmp
jb
in
ss
jbe
ja
mov
rol
or
cmp
inc
add
sbb
loopne
jge
pop
sbb
rclb
imul
push
adc
jg
sbb
mov
cwtl
addl
andb
fldcw
dec
adc
test
push
adc
jns
js
dec
xchg
outsb
inc
lds
clc
int3
jns
imul
jae
imul
fistps
js
arpl
into
loopne
mov
pop
iret
dec
sbb
add
adc
in
mov
repz
push
xor
push
lock
sub
jb
push
lret
inc
mov
fdivr
out
pop
sub
dec
daa
pop
xor
mov
mov
packsswb
dec
mov
or
std
xchg
jo
xchg
jl
sti
and
pop
push
ret
and
repnz
adcl
and
mov
mov
xor
test
dec
repz
pop
dec
jb
push
in
lock
out
xor
mov
dec
add
sbb
push
jo
xor
es
mov
sub
add
pop
testl
and
daa
mov
pusha
cltd
je
xor
sub
insl
addl
cmovs
adc
sbb
ret
push
add
or
sub
loope
push
pop
jg
fdivs
push
adc
enter
xor
or
addb
add
xchg
je
or
imul
sbb
lds
xor
movsb
cltd
sbb
lahf
stos
and
fadds
add
clc
add
outsl
test
xchg
dec
mov
xchg
pushf
lret
imul
pusha
les
pop
sbb
cmc
and
fildl
push
jb
xor
jo
in
cmpsb
imul
lea
mov
sbb
jg
les
inc
jge
adc
mov
inc
xchg
sbb
clc
xor
add
add
imul
add
mov
mov
mov
xor
add
imul
mov
xor
sub
mov
mov
xor
add
imul
mov
xor
sub
lea
cmp
jmp
mov
popa
jbe
xchg
subl
jo
lahf
jge
jo
lods
rcl
mov
imul
and
push
jne
int3
xchg
fs
cmp
adc
outsl
cmp
push
or
ret
push
push
mov
inc
push
into
jl
cli
pop
add
and
aaa
adcl
stc
lock
mov
sti
xor
ret
cwtl
sbb
mov
fs
and
test
out
mov
insb
fmuls
dec
in
sub
jp
adc
aaa
stos
or
mov
jge
or
or
jg
lahf
jnp
lahf
movsb
and
xorl
in
push
adc
dec
mov
jae
xor
popf
cmp
adc
inc
mov
xlat
xor
add
adc
jle
leave
popf
lcall
shll
repnz
vcvtsd2ss
repz
mov
push
cmp
out
mov
js
pushf
add
push
push
mov
sub
sub
jecxz
xchg
cmpsl
inc
loope
lods
in
xor
cld
gs
mov
insb
lods
iret
mov
pop
add
jle
dec
adc
mov
or
enter
stos
pop
insb
push
repnz
pop
pusha
movsb
push
sub
jg
and
hlt
mov
mov
shlb
out
push
mov
test
shl
mov
mov
pop
sub
jmp
ljmp
es
cmpsl
fwait
pop
lock
xchg
push
repnz
mov
test
jg
adc
ss
icebp
lock
xor
jo
rcrl
push
test
push
dec
fistl
mov
sub
je
mov
dec
testb
cmp
pushf
sbb
sub
mov
dec
push
jp
jp
and
sub
stos
cmp
pop
cwtl
aas
mov
mov
jno
mov
dec
jno
cmc
xor
push
push
insl
les
dec
lea
leave
std
push
mov
cmp
lret
clc
nop
push
ljmp
dec
jl
sub
pop
xor
stos
jnp
adc
pop
push
pop
mov
push
hlt
sti
rcrb
inc
or
inc
repz
or
ljmp
push
fsubrl
or
xchg
cs
dec
test
xor
enter
push
fcmovbe
dec
fsubl
lcall
les
lds
ja
cmp
and
jo
mov
nop
add
mov
into
pop
ljmp
and
mov
aam
sti
sub
in
outsl
shl
mov
enter
xor
outsl
pop
mov
cmp
repnz
out
int
stos
aaa
popa
mov
stos
notl
mov
push
or
jno
pop
sub
or
in
jae
fcos
into
mov
or
dec
push
jo
or
push
xchg
xchg
cmp
scas
add
add
mov
inc
cmpsb
cmp
in
jno
sub
out
jg
jbe
bound
testb
xchg
test
cmp
cmp
icebp
push
lea
jae
andb
jbe
cmpsl
sti
dec
mull
dec
cmp
scas
mov
mov
test
xor
cmpsb
xor
jbe
mov
mov
xor
add
imul
mov
xor
add
jmp
xor
out
icebp
xor
cmp
lods
les
sbb
jo
jge
jo
xchg
mov
shll
and
jne
aad
xchg
in
testl
shlb
mov
fucomip
in
cmc
lret
pop
mov
aam
pop
adc
add
add
sub
aam
jp
inc
pop
lcall
lods
repz
ret
dec
or
mov
cld
lea
pop
popa
pushf
cltd
push
shrb
or
stos
scas
cmp
mov
xlat
inc
mov
ret
idiv
sbb
mov
sub
es
mov
xchg
mov
jg
adc
cmp
inc
or
test
lcall
xchg
push
imul
jmp
and
out
sbb
rcr
push
inc
or
jecxz
test
jne
sbb
cld
and
dec
sbb
mov
and
imul
inc
fisubs
imul
push
jecxz
jg
push
jp
mov
jecxz
test
mov
addb
vmread
mov
out
cmp
xchg
inc
push
push
mov
xlat
imul
fwait
inc
es
leave
fisubrl
or
movb
mov
icebp
hlt
inc
incb
or
adc
and
push
xor
dec
cmpsb
repnz
push
or
add
push
cmp
cmc
roll
arpl
xchg
test
cmp
enter
push
push
pop
jp
jmp
push
test
inc
adc
mov
mov
mov
nop
dec
imul
test
jl
ret
inc
xchg
add
dec
pop
jnp
jmp
pop
lcall
adc
pop
sbb
negl
popa
scas
push
add
and
mov
lock
jbe
or
popf
or
pop
stos
lcall
add
test
mov
mov
cwtl
mov
push
movsl
insb
shrb
in
fcompl
lds
pop
fstpt
add
out
lods
hlt
out
cltd
cmc
repz
jp
inc
je
rol
sbb
stos
add
pusha
outsl
fwait
jb
mov
xlat
ljmp
cli
call
push
and
nop
add
das
inc
adc
test
mov
scas
inc
mov
add
mov
jno
xchg
mov
stc
cmp
push
adc
jne
push
jnp
mov
inc
lds
ret
adc
int3
adc
movups
sub
fwait
into
and
aad
push
ret
imulb
cmp
inc
push
nop
mov
push
fdivl
imul
fsubl
jae
jb
pusha
xchg
jg
dec
dec
dec
gs
inc
in
aad
es
pop
and
and
or
insl
mov
popa
out
out
loopne
ljmp
cs
mov
shll
daa
sahf
mov
in
mov
add
adcl
into
lahf
xchg
out
ss
xor
pushf
subl
dec
js
fnsave
cltd
int3
jo
mov
push
ds
mov
ss
sbbb
ret
fsubp
call
sub
shlb
pop
add
arpl
dec
xor
xor
ror
cmc
mov
iret
pop
out
mov
lea
mov
mov
xor
mov
sub
jmp
out
inc
push
jno
ljmp
sub
mov
lahf
jge
jo
sub
fsubrs
sub
dec
int
pop
out
lock
mov
mov
inc
pop
imul
lock
imul
sub
pop
sbb
jo
shl
mov
gs
fwait
jp
cmpsb
ss
dec
jmp
into
in
mov
dec
xchg
sbbb
jne
pop
push
xchg
jne
cld
mov
mov
xor
inc
pusha
lds
test
lods
jmp
xor
or
out
rcrl
into
pop
sub
mov
or
push
xorb
dec
or
add
sbb
in
dec
adc
loopne,pt
pop
mov
rol
or
sbb
cltd
cmpsl
fchs
mov
lds
cs
xor
sub
fists
push
out
xchg
sbb
pusha
add
sub
cmp
inc
scas
xchg
mov
push
ficoml
loopne
push
xchg
and
push
int
testl
ja
cmp
pop
or
or
pop
imul
in
xadd
cmp
mov
repz
push
ljmp
jp
addr16
mov
loopne
push
inc
stos
lods
daa
sub
int
popf
aaa
or
ja
mov
scas
xchg
xchg
lret
loop
and
dec
das
inc
out
ret
and
add
lods
lock
enter
inc
push
add
xchg
mov
push
sbb
inc
push
mov
or
rcl
mov
lcall
sbb
mull
fdivs
scas
aaa
mov
xchg
fnstsw
and
cmp
call
scas
push
loop
imul
mov
push
insl
add
mov
add
scas
cld
mov
addr16
sar
xchg
jno
pop
in
jns
jo
sbb
push
dec
push
pop
add
push
push
pop
jmp
dec
ret
fisttpll
or
test
fimull
arpl
and
mov
outsl
idivb
cmpps
adcl
nop
imul
mulb
sub
xchg
mov
jp
mov
aad
stos
sbb
dec
or
mov
lods
pusha
xor
les
daa
xchg
rolb
repnz
xchg
stos
cmc
pop
data16
out
sbb
jbe
push
cltd
leave
pop
sub
iret
outsb
stos
and
call
xchg
outsb
sbbb
xor
mov
cmp
jns
add
push
ljmp
cld
and
in
xchg
or
xor
ljmp
or
fs
jg
jns
scas
pop
xor
lahf
jge
add
pop
adc
stos
fsubr
nop
cmp
dec
xchg
lea
xor
or
mov
sub
rclb
jmp
push
push
push
test
sahf
lods
add
mov
call
rorl
lock
xor
and
xchg
pop
jno
xchg
xchg
clc
cmp
aad
divl
pop
push
loop
iret
xlat
loope
sub
adc
sbb
jmp
push
cli
fldlg2
test
pushf
mov
push
jmp
insb
inc
cmpsb
inc
jmp
xchg
push
popa
out
xor
xchg
cwtl
pop
loop
add
sbb
dec
hlt
cmc
scas
adc
xchg
pop
mov
lret
jmp
dec
enter
xchg
in
outsl
test
mov
loopne
push
add
mov
mov
xor
add
imul
cmp
jbe
pop
pop
leave
ret
push
mov
sub
orl
push
sbbl
call
andl
test
jne
xor
movl
jmp
adcl
push
call
sbbl
test
movl
je
call
cltd
movl
cmp
jne
movl
cmp
jne
push
push
adcl
push
push
push
push
push
xorl
push
orl
call
movl
jmp
push
call
test
je
sbbl
push
andl
call
movl
jmp
push
mov
add
mov
andl
mov
inc
mov
cmpl
jne
push
push
push
pushl
push
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
addl
movl
lea
adc
mov
adcl
lea
movl
cmpl
je
cmpl
jne
pushl
pushl
call
xor
add
dec
mov
jmp
movl
cmpl
je
cmpl
jne
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
movl
cmpl
je
cmpl
jne
push
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
movl
cmpl
je
cmpl
jne
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
or
mov
or
mov
or
mov
mov
push
mov
subl
xor
push
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
push
push
call
jmp
mov
add
mov
mov
mov
movl
cmp
mov
movl
je
movl
cmpl
je
cmpl
jne
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
sbbl
xor
andl
add
imul
mov
movl
jmp
sbb
xor
add
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
call
cmpl
jne
mov
inc
mov
jmp
mov
mov
or
xor
sub
add
mov
mov
mov
xor
add
movl
cmp
jne
subl
pushl
andl
pushl
adcl
call
mov
sbb
mov
andl
mov
inc
mov
cmpl
jne
push
push
call
cmpl
jb
mov
mov
or
mov
movl
cmpl
je
cmpl
jne
pushl
pushl
call
mov
dec
mov
jmp
mov
mov
mov
mov
mov
mov
mov
movl
mov
mov
mov
xor
xor
add
mov
xor
xor
add
lea
cmp
ja
mov
xor
lea
push
mov
xor
lea
push
mov
pushl
call
mov
xor
lea
mov
mov
xor
xor
add
mov
xor
lea
cmp
jbe
mov
mov
mov
mov
mov
mov
mov
sub
xor
mov
mov
cmp
je
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
pushl
mov
pushl
add
mov
mov
pushl
call
mov
mov
mov
jmp
mov
mov
xor
add
cmp
jne
mov
xor
add
mov
mov
xor
add
mov
mov
mov
mov
mov
mov
xor
add
mov
mov
mov
mov
mov
mov
mov
movl
mov
xor
add
mov
mov
mov
mov
mov
mov
push
pop
sub
add
movl
mov
mov
mov
mov
mov
mov
mov
xor
add
mov
lea
mov
mov
xor
add
mov
lea
push
mov
xor
add
push
mov
push
pushl
call
xor
mov
sub
push
mov
add
push
call
inc
cmp
jb
mov
call
lea
mov
mov
mov
pushl
lea
push
call
mov
push
add
push
lea
push
call
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
mov
adc
mov
mov
xorl
push
push
mov
xor
not
push
mov
add
sbb
jmp
sub
gs
mov
fstps
into
das
push
jg
jo
inc
pop
call
mov
jg
jnp
mov
repnz
or
xchg
push
add
test
repnz
push
stos
or
cmp
adc
xlat
sbb
in
adc
test
test
andb
dec
push
mov
push
pushf
leave
xchg
mov
dec
test
scas
pop
jg
cld
push
jle
fsubs
jmp
sbb
inc
aad
fstpt
xchg
push
xchg
movsl
mov
inc
cwtl
add
inc
in
jl
ds
pop
nop
lock
mov
push
pop
in
adc
or
inc
popf
and
fwait
add
sub
test
push
dec
rol
bound
nop
lcall
out
lcall
cld
jnp
js
mov
dec
repz
fdivrs
lcall
test
cmc
imul
mov
loop
loope
pop
nop
add
or
push
ret
and
dec
cmpb
mov
dec
mov
lds
jae
mov
leave
and
jb
jbe
lret
out
repnz
dec
repnz
pop
repnz
jge
cltd
lret
ljmp
sub
lock
lea
andl
mov
inc
mov
cmpl
jne
pushl
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
push
call
cmpl
jne
mov
inc
mov
jmp
mov
mov
sub
imul
mov
sub
mov
and
mov
sbb
xor
add
mov
jmp
icebp
ja
pop
inc
scas
icebp
jno
push
inc
movsl
aad
jle
cmp
jo
sub
flds
ss
arpl
jb
std
orb
dec
scas
rcr
pop
sbb
push
subl
test
xor
fucomip
dec
test
rcrl
test
iret
mov
mov
sub
pop
push
mov
xor
add
das
test
pushf
jne
repnz
outsl
stc
fwait
in
test
rcrb
mov
aam
mov
push
cltd
ljmp
int
jo
mov
cmp
clc
cmp
sbb
mov
sub
push
mov
mov
data16
and
ret
test
pusha
mov
jle
adc
push
daa
xchg
cwtl
add
and
addr16
fcomip
enter
scas
popf
ja
in
enter
sub
jle
and
lods
into
sbb
lods
cwtl
mov
fnstcw
push
lods
test
xor
out
movsb
sbb
fcomi
in
bound
scas
adc
xor
nop
lret
lock
add
mov
addr16
shrl
mov
test
gs
mov
mov
push
icebp
cmc
rcrb
insb
shll
in
adc
jbe
jle
out
mov
jl
jl
add
inc
call
and
lea
mov
jmp
rorl
sbb
cmp
mov
jo
push
outsb
lret
cld
inc
pop
mov
pop
pusha
cmpl
idivl
jno
adc
cmp
jge
push
fimuls
jmp
es
sbb
mov
ret
push
xor
dec
je
iret
lret
pop
push
stos
jns
ja
movsl
mov
cs
ret
jne
sub
scas
fsts
dec
fcoms
push
lahf
outsl
imul
int
mov
mov
test
pop
movsl
sbb
adc
icebp
stos
dec
jg
cmc
outsl
push
insl
ja
jmp
testb
push
ljmp
popa
aad
imul
enter
jnp
sub
xchg
sbb
lcall
lods
imul
xor
pop
cli
lcall
pop
aas
inc
or
cmp
scas
testl
fwait
out
jnp
xchg
mov
xlat
pop
iret
test
cld
insl
lods
test
idivl
sub
sbb
addr16
movsl
sbb
nop
nop
cwtl
xchg
fistpl
mov
mov
sahf
add
cwtl
cwtl
inc
movsl
xor
dec
sbb
and
es
test
cmpsl
and
std
stos
dec
mov
call
jb
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
jmp
neg
mov
add
xor
add
sub
mov
mov
adc
mov
mov
adcl
jmp
cmp
in
fcomi
jecxz
icebp
xor
iret
cmpsb
mov
mov
jo
cltd
jbe
popf
sub
addr16
xchg
sbb
inc
pmaxsw
xor
in
out
jl
enter
lods
scas
jg
xor
jg
cmp
cmpsb
push
adc
pushf
ror
mov
outsb
add
test
pop
cwtl
ds
ret
mov
gs
gs
jge
mov
fwait
rep
pop
lahf
push
clc
sbb
push
push
or
aad
clc
sbb
jns
int
or
xor
mov
hlt
mov
jno
daa
int3
stos
ss
insb
sti
sub
sbb
add
fdivrp
dec
push
pushf
dec
outsb
shr
daa
or
inc
xchg
sbb
cmp
or
ja
loop
test
sub
jne
fwait
stos
jns
in
or
iret
pop
loopne
outsb
inc
sub
cltd
sbb
jge
lea
push
adc
mov
push
xchg
xchg
data16
push
mov
push
sub
je
push
inc
dec
in
out
fcmovu
cmp
test
sarl
pop
push
cli
fwait
pop
mov
xor
fmuls
int3
dec
xchg
dec
inc
jbe
sbb
insl
ret
fists
ljmp
mov
push
daa
xor
dec
sarb
out
mov
mov
adcl
mov
xorl
movzwl
add
neg
movl
sbb
mov
mov
sbb
mov
xorl
xor
andl
add
cmp
jne
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
cmpl
jne
xor
add
inc
mov
jmp
movzbl
adc
mov
xorl
mov
andl
xor
notl
add
movl
cmp
movl
jmp
fistpl
shlb
xchg
push
or
and
jo
ret
jg
jo
push
fs
ja
cld
jle
add
cmp
xchg
jle
cld
push
mov
mov
cwtl
mov
js
push
imul
push
fdivrl
out
mov
mov
push
mov
repnz
and
jp
outsb
cld
xchg
dec
push
xchg
pop
mov
add
ja
xchg
sbb
imul
cmp
mov
pop
mov
clc
ja
push
je
jae
adc
and
jle
mov
xor
mov
cli
addl
std
mov
fisubrs
and
xor
in
clc
insb
je
lock
add
fwait
es
jb
addl
sbb
inc
adc
lods
outsl
ds
pop
aam
jmp
in
adc
filds
push
js
sbb
gs
push
push
or
int
add
mov
adc
fldenv
mov
test
bound
or
lcall
icebp
inc
inc
mov
lcall
je
test
sub
dec
arpl
stc
outsb
push
jge
jecxz
stc
jbe
jb
vandnps
out
xchg
jge
pop
mov
lods
dec
pop
jne
mov
and
jne
add
mov
sbb
mov
adc
xor
add
mov
sbb
mov
adc
mov
movl
cmpl
je
cmpl
jne
push
push
push
pushl
push
call
cmpl
jne
xor
or
dec
mov
mov
dec
mov
jmp
xor
mov
sub
add
mov
mov
mov
movzwl
add
mov
mov
mov
xor
lea
xor
sub
mov
movzwl
jmp
or
shrb
mov
inc
pop
mov
inc
insb
jmp
ret
jg
jo
repnz
rclb
dec
mov
cld
and
pop
fmulp
xchg
inc
cmp
push
rclb
add
pop
bound
inc
mov
pop
push
popf
and
mov
icebp
cld
cmp
and
pop
and
jno
int3
cld
add
cld
lcall
sub
push
int3
adc
mov
dec
jle
adc
sahf
mov
push
xor
pusha
push
mov
lcall
stos
push
pusha
jecxz
or
aam
shrb
xchg
fmull
pop
shrl
mov
shrl
pushf
jnp
cmp
mov
adc
dec
daa
shl
jmp
pop
lock
mov
ret
aam
jae
dec
and
jg
and
orl
mov
hlt
push
mov
push
ss
or
inc
shll
xor
int3
jmp
xlat
insb
clc
pop
movsl
stos
cmp
test
sub
jbe
ds
pop
cld
lcall
pop
jmp
stos
popf
leave
mov
out
int3
imul
and
push
fistpl
jb
dec
aaa
loop
out
popa
orl
push
push
out
leave
xchg
xchg
outsb
xchg
cmp
sahf
inc
sub
js
and
sbb
data16
rorl
cld
jmp
movntps
push
rep
mov
push
jle
inc
jnp
scas
jo
ret
jg
jo
test
push
mov
movsl
cli
popa
mov
and
movsb
lods
push
mov
cmp
nop
push
xchg
push
inc
aaa
cld
in
push
mov
add
outsb
inc
xchg
pop
add
mov
cmp
mov
add
jp
repz
aas
roll
icebp
inc
idivl
dec
xchg
cmp
sub
pop
jb
inc
scas
fs
nop
fdivl
xor
add
orb
jns
bound
lret
gs
jp
cmp
mov
jmp
jmp
and
out
imul
and
adc
or
cmp
jge
dec
xchg
pop
shr
xor
push
pop
arpl
pop
repz
add
pusha
aaa
cmp
inc
inc
sbb
ret
cmc
adc
popf
test
push
icebp
add
fisttpl
call
xchg
les
adc
xchg
mov
imul
xchg
dec
xor
ds
sti
imul
stc
inc
ror
mov
xor
imul
sbb
mov
mov
mov
inc
sbb
xlat
fdivl
pop
outsb
jg
xor
sub
sub
mov
jmp
jmp
int3
push
icebp
xchg
icebp
je
in
pop
mov
icebp
xor
or
jg
jo
xor
repnz
pop
popa
cmp
jbe
mov
lret
mov
xor
mov
jns
and
bnd
fwait
push
adc
pop
pop
cmp
add
sahf
push
pop
fndisi(8087
sbb
addr16
mov
lret
mov
mov
sbb
add
daa
mov
inc
cmp
xchg
sbb
in
jge
test
and
ds
push
loopne
into
dec
xchg
xchg
jno
mov
add
daa
mov
push
or
pop
adc
pop
mov
notb
std
call
loope
inc
adc
scas
sub
jb
mov
dec
or
icebp
les
sar
aaa
in
data16
movsb
lea
sarl
outsl
push
mov
sbb
bound
call
mov
cmpsl
int
add
jecxz,pt
inc
in
push
sbb
loope
xor
out
cmpsl
jo
push
sub
sbbb
xor
or
cmc
inc
lods
es
jnp
lret
fcmove
stos
fwait
mulb
cmp
xchg
ja
jp
dec
jp
pop
bound
add
test
xor
lea
mov
mov
cmp
jmp
mov
enter
lea
leave
inc
inc
jmpw
shrb
jo
fsubrp
das
sbb
mov
sbb
cmp
cli
jecxz
shll
mov
icebp
in
ja
jge
mov
lcall
sbb
popa
mov
js
sub
popa
stos
test
loop
push
aad
andb
aad
or
mov
add
outsl
sub
dec
pop
dec
scas
les
ja
mov
stc
icebp
pushf
ffree
ljmp
test
sub
cwtl
or
cld
arpl
jns
faddp
pop
jle
and
negl
jmp
in
mov
sahf
cwtl
fisttps
mov
ljmp
sbb
das
out
jo
mov
xor
es
lret
mov
or
dec
inc
push
push
inc
xchg
mov
rorb
add
scas
jbe
or
inc
stos
mov
or
xor
es
cltd
lret
int3
mov
das
sub
fldcw
sub
fwait
jp
nop
xor
cmp
ss
mov
push
xlat
test
lret
ss
js
je
mov
jmp
lods
ret
jno
insl
popa
fdivrs
xchg
test
in
mov
jg
jo
jp
aam
in
movsb
add
mov
rcll
adc
out
mov
dec
lcall
ljmp
sbb
mov
outsb
pusha
inc
xor
mov
pop
add
xchg
or
mov
or
add
dec
mov
and
imul
dec
pop
dec
mov
repnz
inc
mov
dec
loope
xchg
xrelease
cs
jns
xchg
outsb
scas
push
or
mov
jne
push
daa
gs
adc
pop
ds
test
leave
lret
xchg
sbb
cmc
jb
mov
sarb
pop
in
xchg
andl
pushf
in
std
nop
sub
mov
cmp
imull
mov
idivb
outsl
mov
or
pop
jl
push
dec
lret
stc
frstor
mov
adc
mov
mov
cmp
cs
mov
adc
mov
fisttpll
test
push
jae
stos
stos
xchg
mov
lahf
icebp
push
mov
pop
xor
aas
xor
inc
fdiv
loop
inc
inc
in
xchg
mov
in
addr16
or
push
imul
xor
jmp
mov
mov
xor
add
cmp
je
mov
jmp
dec
int3
cmp
mov
add
rcr
cmp
jbe
jo
ret
jg
jo
in
adc
shrb
pop
adc
loop
pop
adc
sub
scas
js
push
adc
mov
and
popa
stos
sarb
add
neg
and
inc
je
jle
lods
inc
stos
in
push
jmp
out
pop
je
pop
jecxz
ja
mov
loop
cmp
jle
ljmp
mov
insb
mov
xor
push
adc
mov
xor
dec
or
popf
mov
inc
ret
cmc
xchg
add
popa
cmp
test
push
dec
out
inc
lcall
adc
adc
leave
fstl
stos
xchg
dec
js
aad
call
mov
mov
pop
mov
movsl
cmpsb
ret
shlb
cmp
imul
or
fs
js
outsl
arpl
adc
add
adc
loop
xchg
cmc
cmpsb
sbb
sub
imul
testb
pop
iret
xor
jnp
in
jbe
push
pushf
ss
sub
push
add
loopne
popa
mov
mov
jle
scas
ror
ss
sub
xor
jno
daa
sbb
clc
jmp
inc
gs
icebp
imul
lea
jo
ret
jg
jo
push
dec
in
cmp
aas
jo
jnp
xor
jo
jbe
mov
cld
mov
add
in
imul
fdivr
mov
and
add
push
push
mov
jne
enter
xchg
adc
pop
jb
dec
or
outsb
inc
lds
filds
insl
jno
cmp
mov
cwtl
mov
mov
test
lea
vpmadcsswd
push
and
dec
adc
rorb
insb
xchg
xchg
mov
fisttpl
xchg
and
in
or
inc
clc
insb
push
mov
popf
orl
sub
ret
push
imul
inc
cwtl
aad
stos
xchg
movb
mov
mov
out
xchg
clc
push
mov
pusha
add
addr16
dec
push
outsl
push
aam
scas
sub
xchg
std
test
iret
cmpsl
cmpsb
jmp
repnz
adc
cmp
ds
mov
xor
sub
loope
dec
jne
cli
pop
mov
push
andb
push
jno
cld
jmp
hlt
dec
int3
cli
xor
jo
mov
ror
or
jnp
test
cmpsl
insl
ss
addb
pop
mov
push
xor
ljmp
or
js
add
add
mov
mov
mov
mov
mov
xor
add
mov
mov
mov
xor
add
cmp
je
jmp
pop
out
dec
mov
mov
testb
dec
mov
sti
ja
mov
jo
jg
jo
mov
dec
daa
in
cli
inc
sub
and
cmp
mov
jge
test
dec
cmc
push
mov
sub
pop
sub
inc
shlb
jno
jg
insb
push
sub
jmp
dec
mov
push
and
scas
xor
iret
nop
jbe
mov
add
dec
fnstenv
xchg
pop
cmp
mov
out
ss
mov
insl
and
loope
addl
mov
mov
outsb
ljmp
jbe
ljmp
or
sbb
xorl
lods
sbb
xor
adcl
lcall
stc
ja
push
push
pop
mov
fs
xlat
mov
xor
cmp
popf
or
sub
jp
es
jbe
inc
push
push
nop
aad
dec
and
dec
cmp
add
lret
dec
outsl
gs
inc
cmpsb
or
outsl
cmp
adc
mov
add
and
or
movsb
pop
dec
dec
leave
jle
mov
inc
fwait
mov
loop
movsb
inc
dec
sahf
cmp
jnp
push
cmp
mov
stos
stc
fs
mov
mov
mov
add
mov
mov
mov
mov
mov
mov
add
xor
cmp
je
mov
mov
xor
add
mov
jmp
xorl
jmp
mov
mov
mov
mov
mov
mov
pushl
call
mov
cmp
je
mov
mov
pop
pop
pop
leave
ret
push
mov
jmp
ds
adc
dec
xor
pop
or
jo
mov
inc
xor
jmp
sbb
aad
fwait
ljmp
fidivs
imul
enter
gs
push
std
out
jne
jo
pusha
inc
mov
fsubrs
xchg
or
push
aad
inc
mov
xchg
xchg
fistpl
adc
outsb
out
cmp
cld
or
mov
jl
mov
sbb
je
leave
movsb
imul
xor
in
scas
xor
hlt
jle
cs
es
hlt
lods
repz
xchg
or
repnz
loopne
stc
lds
sub
dec
inc
inc
xchg
sbb
into
pop
hlt
pop
xlat
aam
sub
lahf
mov
movsl
xchg
cmpsl
inc
out
jo
and
xlat
add
xor
lods
push
add
sbb
orb
pop
leave
and
cld
xchg
sub
insb
jge
ficompl
fs
lods
and
mull
xor
lods
int3
sub
xchg
jecxz
inc
mov
push
into
and
push
leave
cmpsl
mov
and
cmp
sbb
cmp
fstl
sbb
pop
movsb
mov
loop
mov
ficomps
scas
add
fstpt
cmc
fcoml
mov
pop
xchg
out
push
jo
jb
movsl
les
ret
in
push
aas
daa
orb
leave
xchg
out
stc
jns
xchg
out
jmp
push
push
pushf
adc
movsl
jp
pop
shlb
shll
push
fisttpl
fsubl
es
xchg
jae
inc
data16
cmpsb
or
popf
adc
arpl
pop
adc
pop
or
xchg
jmp
ljmp
xor
stos
xchg
sbb
mov
nop
inc
cmp
mov
cmpsb
xor
add
mov
and
xor
mov
mov
add
shlb
inc
insb
stos
inc
out
push
aas
das
out
cmp
test
imul
inc
push
mov
aas
adc
sarb
jne
repnz
push
jb
std
rdpmc
xor
loope
adc
in
fs
xlat
insl
es
mov
stos
sub
hlt
xor
addr16
addl
xchg
sbb
into
aad
sarb
int
adcb
test
cmp
das
dec
bound
push
mov
xor
add
test
pop
cmp
andb
add
movsl
pop
loop
push
push
and
jmp
mov
xor
sub
cmp
add
fucom
cmp
pop
jl
inc
mov
cmp
sbbl
mov
sbb
pop
adc
add
adc
mov
cmp
cli
ret
in
ljmp
dec
push
mov
insl
lahf
mov
xchg
and
repz
add
push
das
call
xor
subb
and
adc
pop
add
test
xchg
and
faddl
xor
es
dec
aad
xor
jp
jnp
dec
mov
mulb
sbb
adc
loopne
lret
push
test
mov
push
mov
nop
loopne
xchg
mov
xlat
add
hlt
push
je
xchg
cmpsl
das
lds
mov
shl
loop
pop
dec
popa
in
inc
cmp
sbbb
add
cld
in
hlt
push
jns
mov
mov
mov
cmp
enter
cli
add
jne
ret
cmp
and
inc
add
lds
add
mov
cli
xor
testb
or
aad
mov
jo
jge
jo
jge
ds
pop
jns
clc
mov
dec
xor
push
pop
mov
das
enter
roll
jnp
dec
pop
cmp
call
sbb
cmp
jmp
inc
push
cmp
jge
xlat
xor
in
cltd
push
inc
mov
xlat
mov
xchg
fnstcw
mov
ficoms
mov
js
aas
sub
fsubs
fcomps
mov
faddl
mov
imul
cmp
sbb
andb
sub
subl
mov
mov
add
movsl
into
outsl
insl
fs
fldt
dec
aad
jae
das
xchg
test
in
jge
mov
sbb
mov
add
sub
push
insb
lock
xor
jne
mov
out
clc
pop
test
cs
popf
cmpsb
jl
dec
adc
outsb
lret
jle
ds
sbb
cmp
fisubs
insb
sub
sbb
dec
adc
fs
sti
sbb
or
loopne
cmp
cli
je
and
dec
sbb
and
mov
icebp
aaa
jl
xchg
xchg
fildll
lock
jno
mov
test
dec
std
add
add
sbb
inc
call
lock
and
sub
pop
loopne
in
lods
std
adc
mov
ret
push
inc
aaa
mov
mov
push
mov
push
aam
popa
mov
das
mov
push
jne
mov
xchg
dec
push
mov
cmp
sub
call
dec
jb
fldenv
lcall
or
add
addb
jle
push
add
mov
cmpsl
and
mov
cwtl
mov
imul
inc
dec
jmp
mov
pop
shll
fimuls
test
pusha
mov
dec
out
add
push
mov
lods
mov
pop
xor
mov
cmpsl
cld
imul
mov
and
int3
mov
insb
aad
mov
adc
cmp
dec
sub
insl
xchg
fwait
and
adc
lock
aam
cli
adc
mov
daa
out
and
pop
sarb
test
cltd
mov
cmp
jnp
out
cmp
pusha
lds
movsb
stos
enter
ret
xchg
push
mov
xchg
push
out
cld
hlt
sub
push
cmp
pusha
test
pusha
mov
jae
fistl
pop
mov
cmp
fdivrp
and
das
adc
sbb
fs
push
int3
sbb
xchg
cmp
sub
lods
ja
fs
out
ja
pop
in
imul
rcll
xchg
xchg
loopne
xor
xchg
rorb
or
sub
or
dec
outsl
jb
or
jge
rorl
enter
daa
test
mov
cmpsb
hlt
sub
push
pop
cmp
mov
xor
cmp
mov
call
dec
fchs
sbb
inc
cli
cmc
out
cmc
xchg
mov
sti
roll
lds
adc
rolb
in
aas
mov
lds
int
call
cmp
cld
jmp
xchg
les
push
jno
or
sub
jg
push
cmp
inc
rcrb
and
or
mov
xchg
cmpsb
xchg
inc
cld
xor
or
loope
add
cmp
add
xorl
xor
movl
cmp
jne
mov
mov
and
mov
mov
movl
add
mov
jmp
fcmovnbe
aam
repz
push
jae
jb
bound
mov
jo
mov
jmp
gs
psubsw
sbb
and
mov
fdivl
out
orl
arpl
pop
sub
pushf
nop
sub
xchg
mov
mov
xchg
repz
mov
xchg
rcrl
mov
xchg
dec
loopne
add
mov
sarb
push
fnstcw
pop
lods
jle
pop
sub
or
js
pop
lea
cmp
imul
push
adc
adc
in
pop
iret
hlt
pop
daa
mov
es
mov
adc
rolw
ret
or
cmp
leave
cmp
lods
int3
in
iret
andb
clc
mov
call
daa
popf
jmp
ljmp
add
mov
xchg
loopne
push
mov
mov
test
jecxz
bound
and
jbe
mov
jo
mov
dec
inc
aad
or
lods
movsl
cmp
cmp
mov
fnstenv
out
test
mov
mov
out
inc
push
test
push
xor
je
popa
out
int3
outsl
jo
inc
dec
add
mov
mov
mov
jae
cmc
sub
sub
and
fldenv
icebp
ja
mov
in
pop
das
shrl
cmp
sarl
sbb
rcr
insl
sub
lods
or
pop
idivb
loopne
je
loopne
push
stos
fwait
or
xor
xchg
ds
call
dec
scas
ljmp
arpl
cmpsb
inc
fldcw
xor
stos
mov
mov
leave
fldenv
andl
js
ret
adc
pushf
lods
add
pusha
mov
sahf
push
dec
dec
sbb
xor
ffree
sub
pop
add
xor
call
dec
mov
enter
push
imul
push
hlt
jb
pop
and
outsl
adc
jnp
mov
mov
jbe
imul
test
and
loop
test
fisubs
in
mov
orl
xchg
push
roll
loopne
test
add
repnz
hlt
sub
lret
fbld
xor
jp
lock
add
and
out
and
aas
bound
cmp
hlt
std
jbe
cmp
jno
es
xchg
adc
or
leave
int3
cmpsb
mov
arpl
pop
aaa
xor
das
rolb
pushf
dec
cld
cmp
into
aas
push
shl
movsb
aaa
push
adc
and
xchg
cmpsl
jg
ljmp
sub
inc
cli
je
stc
rorb
cltd
dec
mov
mov
aad
fildll
jg
insb
pop
daa
js
iret
cmp
add
rcrb
js
jne
adc
not
pop
cld
outsl
push
inc
sahf
pop
dec
lea
shrl
adc
fs
sbb
aas
add
in
loopne
sub
sbb
fidivl
outsl
cmc
mov
inc
pop
mov
adc
lcall
pop
inc
lahf
movsl
jno
jmp
test
in
in
jae
cmp
push
or
push
add
push
sahf
pop
mov
mov
in
enter
repnz
cmpsb
shrb
mov
inc
push
push
cmp
jne
testb
les
mov
add
mov
mov
add
mov
xor
sub
push
sbb
jmp
lods
das
mov
mov
lcall
pop
mov
jo
pop
loopne
adc
sub
movsl
pop
mov
jbe
into
push
and
jmp
inc
pushf
outsl
out
faddl
shll
popf
fwait
test
int
add
inc
stos
test
and
in
iret
jmp
fsub
data16
test
stos
fidivrs
jle
es
rcrl
or
dec
sub
xchg
add
stc
dec
cmp
dec
popf
ficomps
mov
mov
in
scas
jmp
ja
sti
inc
fnstenv
pop
add
cmpsb
adc
outsb
repz
arpl
lcall
shl
dec
stos
aad
mov
mov
test
enter
cmp
sub
fistpl
mov
jne
ss
aam
xor
imul
movsb
test
xchg
cltd
adc
xchg
pop
xor
inc
lret
pop
sbb
pop
xchg
subb
aaa
mov
pop
cli
je
cmp
cmpsb
pop
xor
test
imul
inc
xor
jmp
scas
inc
mov
adc
jb
imul
nop
sub
inc
push
jmp
adc
sub
scas
loop
push
sti
xor
push
stos
add
lods
ds
clc
lcall
add
mov
call
inc
sbb
push
fnstsw
push
mov
cmp
mov
out
icebp
xchg
push
in
xchg
push
jge
cltd
adc
ja
mov
push
and
fwait
outsl
xchg
std
mov
jno
jecxz
shrl
xchg
in
movsb
pop
cs
pop
enter
add
cmpsl
mov
push
aas
lds
push
pop
xor
mov
roll
fwait
test
flds
cli
iret
lods
int
push
or
clc
popf
nop
daa
popa
cmp
pushf
fs
cmp
inc
fisubrl
or
sub
add
push
xor
xchg
mov
arpl
sbb
inc
dec
jae
call
and
or
xchg
xchg
xchg
insb
pop
flds
dec
pop
dec
imul
in
push
dec
inc
test
xor
mov
scas
into
sbbl
shlb
push
mov
insl
add
jl
fldl
fdivrp
mov
popa
add
lods
mov
out
scas
xchg
pop
movsl
aas
and
stos
push
add
ljmp
fisubrs
daa
xor
out
xchg
mov
fidivl
lahf
dec
dec
stos
shrb
xchg
addl
das
out
stos
sahf
xchg
loopne
pop
sbb
test
pop
das
inc
xor
xor
ret
jl
jle
incb
hlt
xor
mov
push
xchg
adc
xor
loop
scas
fstps
fisttpl
push
cmc
lods
cmp
inc
icebp
mov
ret
sub
mov
aas
push
pop
mov
cmc
insb
arpl
shrl
fstpl
add
fcoml
cmpsb
sub
inc
out
ret
stos
loopne
fcomps
popf
clc
out
xor
sbb
rorl
pop
cmp
cmp
mov
sub
push
enter
jg
lods
adc
dec
and
mov
dec
imul
mov
das
inc
pusha
int
xchg
add
pop
enter
shlb
jns
sbb
fadds
dec
test
mov
push
cltd
mov
sbb
mov
add
jmp
outsl
mov
or
imul
lods
jne
pop
mov
jo
jge
jo
pushf
mov
jg
outsb
fwait
in
jo
mov
rol
push
mov
iret
std
jbe
aas
sub
mov
jmp
xor
mov
push
ds
aad
cmpsb
or
loop
cmp
mov
xlat
jmp
sub
neg
cmp
and
out
jmp
or
imul
jecxz
dec
int3
inc
dec
fidivs
int
dec
test
iret
xchg
or
mov
push
mov
xor
xor
sti
pop
rorl
mov
sbb
int3
dec
and
pusha
ss
je
xlat
fucom
pop
test
and
insl
fmulp
adc
dec
dec
add
rcl
addr16
jo
add
dec
xchg
or
pop
mov
popa
hlt
out
hlt
sub
xor
xchg
cs
gs
mov
inc
int
test
xor
repnz
leave
les
adcb
xor
mov
sbbl
cmpsb
add
push
push
in
jl
outsb
mov
insb
gs
push
aad
or
rol
add
cmpsb
int
dec
cld
iret
sub
enter
mov
scas
jns
mov
dec
loopne
mov
xchg
inc
and
inc
push
or
lret
cmp
ret
call
push
sub
xchg
orb
jno
shl
xor
and
insl
lock
and
comiss
xchg
jle
push
fsubrs
scas
fistpll
cmpb
rcrl
mov
sahf
mov
adc
mov
ret
enter
rolb
fcomps
add
cwtl
push
add
aam
sbb
sub
cmpsb
insl
mov
push
arpl
mov
cmp
push
ljmp
cmpsl
mov
add
mov
jns
jmp
jo
mov
in
pop
lcall
loopne
pop
imul
fs
cmp
xor
sti
mov
stos
and
mov
jg
jno
out
sahf
mov
hlt
mov
enter
mov
std
cmp
add
aas
xor
jns
add
test
cmpsl
shll
mov
mov
cmc
jl
imul
lods
jns
mov
push
clc
dec
pop
sub
pop
jo
cmp
addr16
dec
pop
ss
js
das
data16
fildll
lret
xchg
xor
pop
hlt
jp
out
jl
or
or
sbb
and
fdivrl
push
mov
xor
mov
mov
xor
pusha
adc
dec
scas
leave
and
mov
adc
fnstcw
cmpsb
pop
xchg
sti
mov
cmp
xor
push
or
jno
jne
js
pop
fnsetpm(287
sbb
fsubs
push
cmp
movsb
add
sub
nop
int
test
lret
in
xchg
dec
xchg
dec
mov
cmp
cli
stos
or
sbb
int3
or
ret
jecxz
inc
xchg
sub
mov
sub
stos
movsb
pop
pusha
clc
jnp
mov
xchg
rorb
mov
out
jne
dec
inc
mov
sbb
or
lcall
int
mov
loope
xchg
mov
and
xor
enter
or
js
sbb
sbbl
test
sahf
pop
mov
mov
sahf
pop
cli
lods
xlat
js
mov
sub
sub
idivl
jp
mov
in
cmp
outsl
mov
xchg
aaa
fs
mov
pop
je
mov
jmp
mov
xor
add
jmp
mov
xor
add
leave
ret
push
mov
jmp
outsl
mov
jae
dec
cmpsl
repz
inc
ds
jo
pop
jge
jo
mov
into
outsl
push
mov
jae
lret
test
loope
xchg
push
and
mov
movsl
mov
loope
add
stos
lock
sbb
repnz
sub
cmpl
xor
cmpsl
sub
inc
mov
fisubs
inc
add
mov
addr16
adc
mov
jle
jae
int
sbb
push
xchg
test
mov
lods
add
sbb
add
pushf
mov
xor
xor
xchg
and
xchg
shrb
inc
or
pushf
adc
inc
faddl
std
push
push
lret
jmp
call
movsb
es
xchg
adc
push
mov
mov
mov
or
adc
mov
push
ret
mov
push
xor
xchg
fsts
cli
push
loop
mov
mov
daa
gs
adc
cmp
mov
mov
lea
cli
jbe
sub
lahf
adc
out
inc
xor
adc
aad
fs
loopne
adc
xchg
int3
cmpsb
jp
push
popfw
jmp
xchg
push
stc
push
inc
jecxz
xchg
xchg
push
push
gs
jno
pusha
lahf
cltd
icebp
dec
andl
jno
sub
lock
test
xchg
jb
xor
sbb
mov
mov
sub
xchg
addr16
xor
addr16
sub
pusha
dec
in
int
mov
fldenv
cltd
mov
mov
mov
mov
data16
adc
ja
daa
pop
sbb
out
negl
sbb
idivl
aas
dec
outsb
es
jle
stos
loopne
and
inc
das
sub
shlb
movsb
sub
jg
ficoms
push
sti
ss
mov
add
push
push
jno
mov
dec
test
cmpsb
cmp
aam
out
mov
insb
es
test
xchg
adc
push
cld
cltd
jl
jecxz
out
cmpsb
test
aad
lret
adcb
lock
lea
in
jecxz
dec
mov
or
dec
rcrl
mov
pop
in
inc
aam
pop
int
push
adc
fwait
stos
mov
fxch
add
inc
outsb
lea
cmp
jmp
jmp
ljmp
fwait
adc
imul
push
mov
cmc
div
push
imul
clc
push
xchg
ret
shl
lea
scas
pushf
mov
aad
loope
repnz
adc
xchg
mov
loope
cltd
hlt
jmp
lret
xchg
push
outsb
pop
pusha
xchg
mov
add
scas
xchg
lds
popa
xorb
push
not
jb
lahf
lods
mov
daa
insb
pushf
or
jecxz
shl
or
dec
jnp
fsubr
push
and
out
aad
int
sahf
mov
mov
mov
pop
cmc
mov
lcall
adc
icebp
jmp
mov
stos
mov
sub
cli
pop
mov
or
movsl
dec
add
push
mov
add
jbe
fwait
dec
fdivrs
fs
leave
sbb
fwait
xor
xchg
mov
jg
aad
into
pop
cs
cmp
cmc
mov
cmpsl
push
arpl
iret
xor
xor
add
insl
jno
add
mov
lret
into
mov
loop
dec
mov
movsb
data16
push
loop
bound
pop
pushf
xchg
notl
fsubs
sbb
mov
xorl
cmp
push
out
adc
es
sahf
pusha
fs
movzbl
pop
mov
mov
sub
adc
mov
push
mov
xor
movl
jmp
xchg
shll
push
paddsw
es
jo
pop
jge
jo
std
hlt
sub
subl
xchg
inc
std
notl
adc
inc
fsubs
imul
cmp
cmp
test
mov
push
repz
xor
pop
push
jne
push
cltd
xlat
pop
shld
push
mov
mov
pusha
mov
sbb
lcall
fisubl
push
inc
scas
data16
fstps
jnp
in
aam
pop
fstpt
or
jne
dec
cmc
movsb
stos
dec
mov
lods
mov
xor
xchg
out
in
out
xor
fisttpl
pop
aad
dec
jecxz
push
arpl
int
dec
movsl
mov
xorl
jecxz
cmp
push
je
mov
add
add
fs
pop
inc
loopne
xor
loopne
push
fsubr
js
sub
mov
xor
push
cld
xor
dec
push
or
das
jae
push
inc
jae
mov
jge
inc
cwtl
or
jle
push
in
xchg
and
je
fnstcw
push
mov
mov
scas
and
pop
gs
fisttpl
push
sbb
scas
lea
fcoml
sbb
add
dec
adc
xor
ds
shlb
add
sti
sbb
mov
in
jae
pop
sub
jge
outsl
inc
sbb
int3
lret
pop
outsl
add
jge
sub
jns
cmp
pop
inc
sbb
xchg
xor
dec
out
inc
int
sahf
cmp
cmp
and
jb
sub
call
and
arpl
and
aam
xor
call
ss
mov
mov
pushf
xchg
cmpsb
mov
hlt
icebp
xor
or
xchg
test
cs
divb
xor
mov
stos
les
mov
mov
movsl
insl
cmp
cmp
jp
sub
pop
adc
lcall
es
ljmp
cld
sbb
jns
xchg
xlat
push
mov
pop
or
xchg
hlt
scas
mov
fistpll
xor
push
push
imul
adc
aad
ret
or
les
stc
test
pusha
fcomps
mov
mov
push
add
push
imulb
mov
or
imul
mov
fs
jl
cmp
jns
mov
push
mov
push
cmpsl
out
cltd
jns
arpl
mov
xchg
mov
xor
repnz
sbb
jg
lahf
outsl
mov
or
pop
add
test
rorl
hlt
mov
or
mov
mov
cli
mov
gs
jg
imul
mov
in
mov
lods
mov
push
mov
push
or
pop
mov
jo
iret
jecxz
add
bound
add
das
ds
sub
pop
sbb
jge
into
aas
arpl
pop
mov
arpl
lea
icebp
or
insb
jns
fmul
fcompl
int3
push
mov
sarb
jns
xor
outsb
sbb
cld
fwait
push
in
iret
mov
xlat
in
cli
sub
scas
lahf
xlat
loopne
add
mov
mov
leave
push
lock
pop
imul
dec
in
pop
fists
addl
xchg
mov
dec
insb
xchg
push
mov
out
daa
ljmp
gs
mov
inc
pushf
mov
icebp
mov
adc
int3
adc
insl
mov
insb
dec
test
mov
cmp
faddl
sarb
adcb
xor
pop
lods
ret
mov
rcl
add
movl
je
mov
andl
mov
inc
mov
cmpl
jne
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
jmp
and
leave
adc
adc
call
add
cmp
push
dec
jo
pop
jge
jo
leave
push
lea
hlt
or
adc
mov
pminsw
jle
decb
fdivrl
or
fs
dec
clc
xchg
cmp
dec
cmp
inc
push
call
lret
pop
je
pusha
fs
xchg
sbb
subl
aad
mov
stos
and
and
xchg
xchg
call
pop
dec
test
das
push
pop
cmpsb
pop
loop
jp
sub
enter
xchg
push
jmp
jecxz
decl
jnp
loopne
push
jle
mov
jge
and
push
jbe
push
ljmp
loop
fwait
xchg
inc
pop
es
repz
mov
dec
inc
or
aas
xchg
cmp
rorb
dec
mov
adc
out
out
xchg
in
jmp
shrb
testl
sbbb
insl
enter
out
or
xor
das
aas
or
mov
add
mov
cld
sub
inc
in
dec
int
xchg
cmovbe
nop
repnz
outsl
leave
lahf
push
sub
mov
mov
pusha
jmp
cwtl
rclb
lds
les
mov
popa
xor
stos
mov
daa
stos
cmp
and
aaa
sarl
or
inc
and
sbb
cmp
orb
mov
add
xor
mov
dec
xor
push
sbb
xor
jne
sub
in
inc
mov
mov
jnp
iret
or
jo
mov
xchg
sbb
jno
add
or
mov
mov
js
ss
js
inc
loop
fdivrl
scas
add
lahf
loopne
mov
shrb
sbb
inc
inc
push
xlat
call
mov
fisttps
pop
notb
fidivrl
fmuls
xchg
xor
out
push
mov
jge
packsswb
fcmovne
xor
pop
jp
pop
int
in
mov
xchg
rcrl
or
lahf
mov
pop
xor
dec
jae
loope
insb
and
addb
popa
arpl
mov
daa
sti
dec
cwtl
ljmp
in
mov
add
lock
xchg
inc
mov
jecxz
mov
divb
jne
dec
jge
sub
jo
int
stos
pushf
push
or
add
push
lret
jno
addr16
xchg
mov
jnp
je
mov
fcoml
sbbl
or
mov
or
rcll
leave
pop
js
mov
test
je
lods
cltd
pop
shrb
iret
stos
aam
pop
movsl
pushf
jge
pushf
cltd
and
cltd
add
sub
cmp
ds
jl
lds
loope
mov
lea
jp
mov
jl
push
lods
jne
xchg
push
andl
sbb
adc
mov
sub
cmpsb
lock
xor
pop
ret
pop
push
add
or
daa
mov
push
xor
es
or
scas
lds
mov
xor
mov
pop
nop
daa
xchg
sbb
and
pushf
fldcw
sub
mov
dec
push
lods
jp
pop
fdivl
xor
mov
or
call
xchg
xchg
movsb
sub
push
int
hlt
jnp
adc
or
jl
test
jge
cs
mov
xor
cwtl
fwait
aad
push
pop
aas
shlb
mov
and
ror
dec
and
inc
lods
fsubrp
inc
xchg
adc
rcr
jno
lock
incl
aaa
and
movsl
or
mov
sub
addl
xor
movl
cmp
movl
jne
jmp
js
stos
loopne
jae
cmc
pop
sub
pop
jbe
jo
pop
jge
jo
xorb
cmp
and
add
data16
outsl
inc
repz
shr
loope
push
insl
lret
outsb
xchg
dec
mov
jle
daa
inc
ret
jmp
jnp
mov
push
roll
js
stos
lods
vpsubsw
lcall
in
cwtl
pop
enter
inc
pop
test
in
test
mov
lods
ja
stos
cs
xchg
xchg
pop
cmp
les
repz
hlt
shlb
add
xchg
xchg
popf
fistpl
adc
sub
scas
or
adc
adc
sahf
mov
mov
xor
mov
arpl
inc
xor
inc
mov
rolb
das
call
pop
in
int
ret
xor
cmp
push
xor
mov
dec
icebp
lods
pop
stos
jmp
inc
int3
push
div
dec
sub
push
incb
jg
fistpl
push
push
push
idiv
mov
cmp
gs
pop
inc
or
neg
into
test
fst
scas
or
jae
adc
loope
fdivs
cli
mov
sbb
xor
sbb
out
outsl
out
sbb
inc
outsb
iret
jl
xor
orb
xchg
inc
sbb
sub
dec
aam
mov
and
cmc
out
fdiv
inc
sub
cwtl
pop
bound
icebp
bound
adc
push
xchg
dec
sbb
je
jo
push
cmp
enter
fsubl
lock
dec
dec
mov
inc
push
cli
adcl
add
jl
add
das
push
leave
rcrl
lcall
mov
aaa
push
addr16
cmp
mov
sbb
and
cmp
out
cmpb
aaa
test
mov
das
sbb
pop
repz
notb
lret
ret
stos
and
and
outsb
into
repz
jge
fs
ljmp
addr16
xor
cmc
xchg
scas
cmp
int3
aaa
clc
repnz
jmp
xlat
test
popf
decb
dec
mov
mov
mull
mov
xchg
xchg
scas
sub
out
addb
mov
xchg
iret
mov
xlat
pop
ret
repnz
lret
bound
mov
adc
sub
lcall
mov
dec
pop
sbb
mov
stc
inc
mov
imul
in
or
push
push
inc
pop
lods
mov
aaa
mov
imull
js
cmp
orl
jge
xchg
pcmpeqd
addl
jb
enter
jnp
add
cmpsl
outsb
xor
push
pushf
mov
int
fsubs
or
pop
mov
xor
sbb
gs
cli
add
dec
or
xchg
sub
add
xchg
fdivrl
xchg
je
xchg
ja
and
enter
jbe
jle
psrld
cld
cmc
inc
jno
test
test
or
and
mov
mov
or
lods
xchg
add
push
mov
add
push
pop
lods
punpckhwd
or
sub
nop
mov
pop
pushw
jnp
int3
arpl
inc
and
push
popf
xchg
mov
enter
loope
pop
jle
mov
repnz
cli
enter
adc
fcoml
in
je
arpl
adc
dec
mov
push
scas
cmp
xor
xchg
inc
pop
es
push
sbb
push
mov
test
jno
pop
inc
mov
add
shrb
mov
scas
add
mov
imul
inc
add
add
jmp
mov
xor
add
mov
mov
xor
add
mov
jmp
mov
mov
jmp
mov
cwtl
test
jb
jb
xchg
adc
pop
pop
push
jo
pop
jge
jo
mov
xchg
leave
rorb
mov
and
gs
add
sarl
loop
mov
or
mov
jmp
cmp
test
ficoml
mov
xchg
and
insl
push
js
xchg
mov
xor
out
jae
mov
das
and
mov
jle
sub
fisubl
imul
xor
inc
shlb
push
add
mov
or
sbb
stos
bound
out
push
mov
mov
popf
xor
sbb
xchg
es
ret
ficompl
adc
icebp
and
ret
pusha
xor
adc
cmp
mov
pushf
clc
pop
xor
xchg
ror
subb
cltd
and
and
mov
push
fdivr
mov
int
fsubl
clc
call
fnstcw
push
lds
shll
jnp
inc
out
fldt
shrl
lock
push
lret
stc
sub
cli
sub
dec
cmc
push
out
adc
fwait
cli
xchg
lods
dec
call
mov
sbb
sub
loope
fs
cld
mov
iret
repnz
push
sbb
repnz
adc
movsl
pusha
arpl
inc
xchg
pop
mov
or
int
push
js
test
push
andb
or
andl
rorl
mov
xchg
xchg
xor
imul
jbe
jo
ret
or
pop
pop
lods
and
std
add
outsl
insb
or
jns
push
pusha
hlt
add
iret
insl
sbb
out
adc
push
push
loopne
mov
adc
jg
cmpsb
addb
add
out
lods
into
loopne
add
mov
push
cmp
mov
and
dec
in
in
dec
aam
adc
rorb
loopne
movsb
lea
outsb
es
stos
xorl
push
push
loope
xor
insb
int3
cmp
sub
xor
out
mov
fs
out
dec
dec
cmp
fsubs
ficoml
sub
imul
and
inc
loop
jbe
dec
xor
pop
pop
cmp
rcr
jnp
sti
or
mov
hlt
xchg
dec
push
push
and
and
sbb
cld
adc
aad
rorl
lods
cmp
push
xchg
pop
je
std
shll
push
dec
in
adc
push
add
sbb
mov
xchg
aad
lock
stc
scas
loopne
sbb
add
nop
push
andb
sti
call
cmp
popf
mov
gs
fs
mov
icebp
inc
sbbb
das
ljmp
dec
inc
icebp
popf
pop
nop
add
push
aad
es
mov
and
stos
and
cltd
push
jle
sub
call
xchg
daa
imul
jl
insl
jecxz
fstpl
jmp
xchg
adc
xchg
pop
test
inc
stos
and
inc
jp
jbe
jns
jg
inc
sbb
mov
arpl
push
adc
pop
cli
out
jnp
mov
sbb
lcall
std
movsl
or
xchg
xchg
jecxz
push
mov
and
or
aaa
adc
push
push
jp
adc
enter
cs
cltd
rcrb
jle
mov
push
sbb
jo
inc
xchg
shlb
and
lds
xor
out
stos
mov
inc
cmpsb
or
mov
pushf
add
bound
fwait
adc
fimuls
jnp,pn
jl
xchg
cmp
fiadds
dec
scas
lret
mov
mov
mov
add
pop
pop
ret
push
mov
sub
and
movl
mov
adc
movl
sbbl
mov
subl
push
movl
cmpl
je
cmpl
jne
push
push
push
call
mov
dec
mov
jmp
mov
xor
sub
mov
sbbl
jmp
mov
mov
pop
dec
xor
outsb
ret
inc
pop
jo
mov
stc
pushf
pop
jns
lods
xor
fidivrs
jge
insb
xchg
mov
aaa
dec
popf
jnp
js
xchg
jl
xchg
leave
inc
imul
popa
mov
dec
stos
push
adc
add
stc
mov
mov
sub
outsb
xchg
es
sti
cmp
push
lea
xchg
or
in
loop
lret
mov
sub
mov
mov
jae
lods
in
popf
or
fnstenv
xchg
icebp
cmpsb
add
sbb
jo
mov
lea
ja
loope
mov
xor
lods
aaa
xchg
and
movsl
inc
mov
push
mov
push
stos
xor
dec
rcrl
addb
push
xchg
stos
out
imul
fucomi
jo
ret
clc
mov
lret
jge
int3
out
cmp
imul
lods
lahf
or
dec
call
cld
jmp
data16
out
or
or
stos
sbb
jmp
pop
cmc
dec
repz
fs
add
cmp
clc
enter
jo
and
pop
or
adc
push
add
ss
arpl
adc
repz
and
imul
push
xchg
sub
adc
and
shll
xor
inc
aam
xchg
nop
aaa
out
mov
adcl
pop
iret
ret
lcall
inc
cmp
push
push
cli
inc
jns
test
mov
out
ret
aaa
jle
clc
pop
loop
inc
fbstp
xchg
nop
cmc
aam
jo
dec
arpl
out
icebp
int
adc
xchg
dec
jne
scas
ja
push
push
sbb
inc
pop
int
ret
adc
popa
push
and
lret
sbb
ret
and
adc
dec
mov
cwtl
gs
and
inc
cltd
adc
ljmp
mov
mov
repnz
dec
cmp
push
call
lods
outsb
outsl
inc
or
jns
dec
inc
movsl
cs
adc
addl
add
adc
insb
mov
dec
int3
sub
jle
xlat
mov
es
cli
push
push
adc
mov
shll
imul
into
cmp
mov
or
push
mov
mov
in
fdivrl
fsubrs
andb
icebp
int
xor
sub
dec
insb
rorl
xchg
adc
decl
jecxz
clc
fucomp
add
lahf
pusha
adc
les
lret
idivl
ret
leave
jp,pn
jmp
lret
subl
jmp
hlt
xor
fwait
repz
inc
xchg
aaa
mov
pop
jo
mov
fadds
imul
ror
bound
ja
xor
jle
mov
sbb
sub
notb
rcrl
testb
ljmp
jmp
mov
add
sub
pop
jp
movsb
aas
pop
or
push
mov
xchg
push
fwait
das
mov
push
jne
repz
adc
pop
leave
mov
cltd
sahf
mov
xor
push
sti
cmp
cmp
cld
ret
xchg
pop
mov
hlt
push
add
insl
or
pop
iret
call
insl
shll
mov
std
inc
mov
jecxz
cmp
ljmp
hlt
stos
jl
dec
xchg
jle
xlat
call
cli
hlt
mov
imul
dec
sbb
inc
jp
shlb
or
or
iret
mov
loope,pn
adc
pop
rcll
les
fwait
and
jb
push
xchg
ljmp
test
subps
mov
mov
clc
test
fidivrl
xor
int3
push
ja
and
shrb
cwtl
adc
in
ds
xor
in
pop
fdivrl
push
idivl
jb
dec
jle
inc
imul
insl
lds
xchg
mov
fldlg2
mov
xor
inc
sub
cmp
mov
fsubl
nop
cmp
mov
xor
dec
or
xchg
mov
sub
mov
loopne
insb
xlat
mov
out
dec
xchg
and
int3
loopne
loop
mov
arpl
lret
dec
cmp
mov
sub
xor
mov
xlat
add
mov
inc
jns
mov
xlat
inc
pop
mov
cmpsb
scas
pop
mov
std
lds
lods
push
inc
xorb
mov
aam
cmp
icebp
mov
call
cli
sbb
sub
pop
aad
outsb
inc
adc
lret
push
cmc
inc
ss
popf
adc
out
mov
retw
cmpsl
fwait
data16
mov
in
scas
push
sbb
imul
and
lods
repnz
jge
add
pushl
lret
xor
leave
jl
or
sbb
pop
add
scas
inc
jmp
add
lods
add
mov
insb
and
lcall
pop
popa
sahf
pop
es
sub
mov
sti
mov
lods
jns
jge
or
sub
lea
mull
sbb
mov
imul
je
push
or
leave
inc
lea
out
cmp
cmp
xchg
xor
es
xor
push
mov
jbe
inc
add
add
add
sldt
add
leave
or
inc
mov
cmpl
jae
cmpl
jne
push
pushl
pushl
call
cmpl
jne
mov
inc
mov
jmp
mov
push
xorl
push
test
jmp
mov
mov
jne
jne
sub
mov
enter
mov
stc
leave
sahf
lahf
outsl
mov
jp
pop
mov
stc
andb
jecxz
sbb
inc
cmp
adc
sbb
mov
mov
aaa
stos
movl
test
jbe
test
add
mov
sbb
std
cmp
jp
push
inc
fisubl
xlat
lods
shrb
aaa
push
mov
jno
add
cmp
sbb
shl
jns
mov
int
shll
xchg
jge
ret
mov
inc
imul
test
pop
jmp
mov
cmpsb
stos
pop
inc
push
negb
and
aaa
pop
mov
into
pop
dec
lods
mov
jno
jae
cmpsb
into
xchg
rcrl
xchg
jge
xchg
or
sahf
std
push
jmp
sbb
insl
inc
add
add
or
push
lahf
cmp
lahf
xchg
pop
mov
jle
insb
xchg
xchg
insl
jmp
stos
mov
inc
xlat
jnp
cld
push
sbb
addr16
lcall
scas
outsl
add
lea
fs
subb
sbb
insl
xor
enter
jp,pn
cmpsl
movl
outsb
add
jns
lds
cmp
lea
xor
aad
jbe
jns
gs
sub
jbe
cmp
hlt
cwtl
push
mov
push
pop
sbb
xor
or
inc
rcrb
gs
push
sub
aaa
dec
mov
pushf
push
xchg
clc
push
pusha
pop
xchg
xor
xor
cli
inc
pop
cs
jp
mov
dec
mov
repnz
pop
stc
repnz
lcall
je
lods
sbb
jmp
or
fwait
and
mov
dec
dec
mov
sub
icebp
cmp
pop
pop
sbb
pop
movsb
fucomp
xlat
adcl
int3
repz
jl
mov
mov
popf
loopne
pushw
sub
mov
xchg
cmpsb
inc
jge
stc
shlb
add
jae
xlat
pop
hlt
scas
ret
and
or
pusha
into
mov
test
aas
sub
shlb
add
les
ss
fwait
divb
xor
shl
mov
cmp
jbe
cmpb
movsb
jge
hlt
pop
sbb
arpl
xor
inc
fwait
sub
add
push
insl
sbb
xchg
lock
arpl
mov
add
je
jecxz
lds
mov
int
mov
dec
adc
mov
iret
dec
dec
aam
push
push
dec
in
ss
mov
inc
mov
mov
out
mov
inc
sub
cs
sahf
int3
leave
mov
add
mov
add
mov
or
mov
movl
cmpl
je
cmpl
jne
push
push
push
push
pushl
push
push
call
mov
dec
mov
jmp
and
imul
mov
add
add
mov
sub
mov
jmp
lret
sbb
inc
loopne
push
mov
rorb
ja
cmp
inc
adc
jo
jle
jo
mov
mov
mov
add
sysenter
mov
xchg
lret
rorl
dec
add
pop
sub
bnd
das
adc
xor
pop
cmp
jge
or
aad
gs
mov
mov
mov
inc
loop
rclb
jl
shlb
jg
cmp
mov
test
adc
imul
cmp
fdivl
arpl
ljmp
mov
or
pushf
or
push
push
cmp
in
mov
test
sbb
xchg
psubusw
inc
push
out
sahf
sahf
mov
aaa
xchg
fistl
sbb
in
jmp
add
pop
jecxz
push
push
push
pop
mov
inc
test
adc
in
popa
mov
mov
xchg
xor
das
dec
pop
addr16
out
test
idivb
push
insl
pop
dec
cmp
bound
or
test
cmp
pop
je
dec
repz
jnp
sub
lcall
xchg
insl
iret
dec
adc
lcall
es
sub
sarb
ss
ror
pop
loope
lea
loop
xchg
fbld
fsubr
pop
push
addr16
sahf
mov
dec
mov
push
mov
dec
mov
push
out
or
or
mov
sub
sbb
sub
fs
xchg
xor
pop
int3
jmp
or
int3
cmpsb
dec
sbb
and
popa
jmp
dec
sub
dec
xchg
push
icebp
dec
leave
push
push
mov
int3
rorl
xor
mov
sets
and
sub
dec
lahf
lahf
notl
loopne
ss
xor
and
cmp
out
mov
scas
inc
jae
and
sahf
pop
test
mov
dec
xor
scas
jbe
push
sub
sarl
jge
fidivl
mov
mov
test
test
mov
mov
lcall
cmc
sbb
pop
clc
aaa
cmpsb
cmp
and
sahf
incb
in
jbe
dec
aaa
xor
lret
and
enter
movsb
sti
pop
fmull
push
pusha
push
xchg
sbb
push
std
sub
ljmp
mov
mov
loop
or
outsl
mov
jle
mov
sahf
inc
dec
sti
movsb
arpl
add
dec
test
lock
arpl
jns
dec
sahf
ret
and
jmp
lods
push
faddl
sbb
inc
add
add
add
sldt
add
leave
add
inc
mov
cmpl
jae
cmpl
jne
push
pushl
call
jmp
xor
sub
xor
jmp
call
jno
popa
push
xchg
arpl
mov
int3
pop
fs
mov
xor
movsl
dec
ror
pop
and
xor
imul
push
shll
fs
or
add
push
fcmovbe
adc
inc
das
shlb
jno
xchg
cs
lock
sbb
mov
dec
mov
sub
push
pop
dec
mov
rcll
cmp
sub
inc
xor
insb
sbb
mov
mov
nopl
or
imul
rcrb
dec
sbb
pop
xchg
hlt
jae
jp
xchg
lea
stos
pop
cmp
sub
jnp
test
and
inc
cli
sahf
test
cmp
scas
inc
adc
mov
aaa
sbb
sub
and
mov
nop
outsb
mov
pop
mov
sub
add
push
int
arpl
aam
ljmp
and
sub
pushf
sti
push
aad
push
dec
hlt
pop
scas
xchg
push
xchg
cwtl
ret
pop
xor
mov
sbb
xchg
mov
mov
inc
sbb
pop
ret
stos
icebp
fwait
add
cs
mov
clc
dec
stos
or
xchg
adc
push
scas
rcrb
xor
fiaddl
pusha
inc
das
mov
cmpsb
fwait
jnp
sub
fmulp
push
aad
jb
add
add
sub
out
imul
push
testb
test
imul
stc
ret
dec
es
push
mov
push
imul
outsb
in
std
std
push
loopne
iret
inc
fistl
adc
lock
jecxz
test
into
jb
aam
iret
jo
fisubrs
shrb
ja
outsl
ja
dec
fldcw
pop
mov
jns
jecxz
je
idivl
add
jp
test
icebp
mov
mov
and
cwtl
xchg
or
jb
adc
or
push
bound
push
popa
mov
mov
pop
mov
lock
push
mov
imul
xor
cmc
jb
mov
std
es
or
mov
mov
xor
mov
in
and
nop
dec
jmp
and
je
stos
push
ja
ja
add
lcall
adc
mov
pusha
popa
rorl
aam
mov
mov
out
cmp
mov
int3
aas
pop
imul
mov
jnp
enter
xchg
loopne
ds
sub
and
ja
out
mov
sbb
sbb
aam
jne
adc
mov
xor
mov
xor
adc
xor
jmp
push
popa
jne
add
cmp
xchg
mov
jle
jo
lds
push
jmp
ss
je
icebp
pop
dec
dec
mov
xchg
ret
lahf
lahf
arpl
inc
test
sarl
cmp
orl
popa
call
xorl
cmp
loop
lea
lea
and
inc
jmp
pop
inc
sbb
lret
stos
arpl
test
call
and
leave
pop
and
imul
sbb
sbb
aas
sub
jge
mov
filds
xchg
inc
vmread
and
gs
lret
xchg
push
adc
in
dec
pop
mov
lahf
inc
push
jle
scas
mov
sbb
push
jp
popf
dec
pop
jg
sbb
out
mov
enter
lret
pop
push
fwait
jecxz
es
or
mov
cmp
int3
xchg
pop
stc
jg
pop
aaa
lds
cmp
pop
and
and
inc
ret
stos
call
mov
mov
sbb
push
sbb
iret
mov
xchg
push
ret
pop
sub
test
jp
inc
lret
cmp
dec
or
jl
add
push
lock
cli
sarl
fcmove
shlb
scas
pop
xor
repnz
mov
adc
mov
ss
daa
xor
adc
mov
mov
pop
repnz
fdivr
insb
adc
push
daa
adc
or
stos
adc
dec
fwait
xchg
mov
and
fnstsw
std
jecxz
and
emms
mov
in
sbb
jae
cmp
fwait
fwait
std
mov
pop
fistl
xchg
add
jge
mov
mov
mov
dec
cmpb
data16
pop
push
popa
mov
fstpt
in
push
fimuls
pop
stc
es
fst
in
inc
mov
repz
dec
mov
sbb
fucom
inc
jbe
sti
fidivrl
mov
test
jl
iret
clc
jle
out
jmp
enter
mov
je
jb
cmpsl
lods
push
mov
mov
xlat
out
mov
push
inc
xchg
in
scas
mov
aas
jnp
sub
jg
xchg
push
sub
insb
shll
js
push
jo
mov
mov
sbb
je
sbb
jmp
jne
test
mov
mov
aas
repnz
push
cmp
nop
xchg
mov
mov
in
sub
xor
jle
mov
js
out
cld
pop
sbb
push
dec
add
je
sahf
mov
mov
sarb
psubusw
sti
mulb
add
mov
mov
mov
je
notl
mov
xor
xorl
add
jmp
inc
mov
jp
adcb
mov
jnp
outsb
jo
mov
into
test
pop
mov
push
sub
jno
lret
sbb
cmove
pop
and
cmp
pop
mov
mov
dec
dec
xchg
push
push
pop
scas
in
sub
jecxz
sub
mov
dec
or
push
add
xchg
mov
pcmpgtd
fs
out
in
mov
mov
adc
pop
stc
leave
push
andl
lret
xlat
rol
cld
pop
pop
inc
cmp
mov
lea
jl
cmp
xor
cmp
les
xchg
pop
fcmovu
jmp
mov
mov
adc
pop
adc
or
into
cltd
scas
jp
sbb
push
iret
aas
loop
dec
jb
push
mov
cmp
xchg
xor
mov
sub
and
adc
cmp
into
lock
mov
movsb
insl
sbb
mov
adc
inc
imul
pop
cltd
inc
adc
push
cmp
lods
push
ss
shl
loop
movsb
xor
xor
gs
xchg
mov
dec
and
pushf
mov
cli
outsl
mov
gs
rol
inc
mov
jl
ds
pop
dec
fisttpll
shrl
xchg
jle
or
mov
lret
femms
push
jg
mov
outsl
dec
inc
adc
cmp
out
push
js
movsl
lea
ds
scas
push
stos
shrl
jb
repnz
arpl
sbb
frstor
icebp
ret
cs
adc
xchg
cmc
fstps
in
sbb
mov
into
push
pop
jo
cltd
mov
xorl
cwtl
sbb
adc
cltd
pop
fmuls
xlat
xchg
and
jnp
das
jnp
out
or
cmp
and
jle
mov
outsb
or
jns
sbb
int3
mov
fdivrp
mov
xchg
scas
mov
push
mov
insb
xchg
iret
inc
push
fcoml
inc
out
mov
divps
lds
pop
push
pop
dec
fwait
inc
gs
adc
cmpsl
in
mov
iret
aam
imul
push
xor
mov
pop
push
or
mov
fstp
aas
in
lea
lret
setae
scas
das
in
orl
or
ss
dec
push
inc
rorb
rcll
dec
xor
in
ss
mov
xor
cltd
frstor
imul
lods
stos
mov
inc
not
adc
and
sub
insb
mov
js
or
out
cmpl
jne
pushl
jmp
and
lods
shrb
in
sub
xor
jle
jo
dec
jmp
sbb
stos
cwtl
ror
and
insb
subb
aad
repz
cs
sub
aas
fs
jle
or
lds
pop
jns
mov
sbb
adc
sub
add
xchg
xor
movsl
jge
xchg
ja
fcompl
adc
inc
rolb
aas
je
xchg
iret
hlt
pop
dec
cmp
sub
push
cli
leave
push
push
sti
ljmp
cmp
cmp
ret
popf
lret
aam
and
in
pop
xchg
push
dec
cltd
and
sbb
mov
scas
or
adc
xchg
mov
divb
jp
xor
mov
loope
rorb
daa
hlt
lock
mov
imul
fwait
add
insb
pop
clc
mov
fwait
jl
cs
in
std
push
add
adc
pop
test
repnz
out
mov
pop
add
cmp
jmp
enter
test
call
dec
je
fcompl
pop
xor
and
adc
push
mov
int3
je
nop
and
cltd
xchg
ja
in
xchg
xor
add
push
jae
call
adc
adc
dec
shrb
hlt
nop
or
clc
mov
inc
or
lcall
inc
in
dec
cmp
xchg
sub
jne
cmp
mov
jb
daa
stc
push
shll
sbb
sarl
movsb
movsl
jecxz
jecxz
mull
inc
je
push
pop
test
mov
cmp
sub
add
xchg
cs
out
jp
std
loopne
lret
data16
sub
sbb
je
fucomp
sbb
push
sub
xchg
mov
gs
mov
pop
lret
sti
loop
pop
xorl
sub
mov
out
push
js
mov
clc
cli
pop
cmp
into
or
pop
jge
andl
inc
xor
mov
in
cmp
xchg
imul
lods
add
leave
daa
mov
shrl
mov
inc
aad
add
scas
or
mov
dec
and
push
jp
jmp
add
insl
cmpsl
cmpsb
fcmovb
sub
mov
outsl
fiadds
mov
cs
loop
stos
dec
and
mov
and
jl
mov
mov
mov
cmc
and
push
mov
loope
jbe
pop
or
scas
dec
orl
sbb
mov
out
mov
jmp
pop
insl
and
xor
insl
jp
or
add
push
jo
aaa
mov
fsubl
ljmp
mov
add
aam
subl
mov
in
sti
jae
cmp
ret
xlat
loope
aad
mov
xchg
jl
jmp
sbb
jle
clc
lahf
push
lock
aam
js
out
nop
xor
ret
sbb
cwtl
or
out
repz
in
imul
push
and
fstps
arpl
mov
in
inc
or
int3
shll
add
subl
xchg
cmp
xor
popf
fnstsw
xchg
mov
in
jb
push
iret
fcoms
test
out
shrl
out
out
mov
xchg
or
insl
in
js
jp
sbb
push
movsb
int3
loope
int3
stos
cmc
ss
dec
inc
btr
dec
popf
cli
loope
dec
call
mov
mov
out
addr16
adc
add
rclb
cmp
pop
inc
and
cmp
lret
jne
dec
jne
adc
adcl
mov
loopne
adc
adc
jnp
sbb
test
clc
or
jmp
cmpsl
arpl
jo
pop
pusha
lahf
ljmp
popf
jae
movsb
mov
xor
shlb
sbb
cmpsb
and
clc
jmp
jecxz
xor
push
jge
mov
fmulp
faddl
rcr
out
mov
scas
frstor
test
nop
push
hlt
inc
adc
movsl
sbb
fistps
sub
fs
movsl
in
xor
into
into
imul
lods
xchg
lcall
xchg
push
and
and
shll
mov
pusha
mov
dec
lret
loop
xchg
test
mov
bound
out
add
adc
lret
mov
inc
xchg
sub
lret
inc
ljmp
mov
mov
xchg
adcl
dec
imul
decb
inc
mov
jmp
outsl
out
sbb
and
jno
repz
inc
mov
ror
xchg
ds
arpl
and
imul
cwtl
sbb
mov
lahf
push
sub
xchg
push
cmp
ss
mov
scas
xchg
mov
push
mov
cmp
sub
mov
pop
add
fmuls
loopne
out
inc
push
lahf
pop
xchg
ljmp
push
sub
inc
and
pushf
inc
inc
inc
rcr
lods
and
sahf
out
or
icebp
negl
fs
inc
loopne
inc
cld
sub
mov
movl
cmpl
je
cmpl
jne
pushl
push
push
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
orl
xor
add
cmp
movl
je
pushl
decl
pushl
xorl
call
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
call
jmp
sub
mov
or
mov
adcl
xor
decl
add
movl
cmp
je
not
mov
mov
mov
xorl
jmp
lods
mov
loopne
outsb
push
repz
scas
popl
or
inc
jbe
jo
jle
jo
cld
and
push
cmpsl
bound
fptan
and
sbb
dec
std
cmpsl
pop
lea
std
push
jge
sbb
inc
mov
jns
imul
lahf
mov
adc
in
scas
je
jnp
stos
and
sbb
mov
cmpb
cmp
es
lcall
pop
cwtl
xorb
movsl
fmull
cmp
xor
and
testb
addr16
pop
mov
add
mov
or
sbb
jns
loope
mov
hlt
and
mov
shrl
arpl
and
je
dec
fisubl
cmp
jge
inc
outsl
mov
je
loop
pop
bound
stos
test
pop
xchg
sahf
fbstp
clc
nop
push
xchg
aam
loop
scas
and
ffreep
cmpsl
xchg
std
xlat
sub
pop
loope
loop
fimull
shlb
mov
inc
addr16
bswap
xchg
push
in
inc
mov
sbb
mov
push
dec
sahf
xchg
xchg
inc
cs
or
test
lret
push
sub
andb
push
mov
xchg
add
push
movsb
push
fisttps
push
stos
loope
bnd
mov
adc
push
fmuls
mov
repnz
mov
and
stos
jnp
fisttpll
push
inc
movsl
add
negb
addl
fdivp
dec
mov
mov
and
mov
popa
adcl
fbld
xchg
pop
push
fiaddl
divl
add
icebp
fisttpl
bound
gs
inc
setbe
ret
popa
add
insb
add
ds
adc
jns
mov
sarl
inc
ror
ja
cwtl
jmp
or
fldcw
sub
cmc
push
das
imul
adc
pop
jo
xchg
inc
jle
out
jne
add
scas
pop
es
xchg
mov
mov
jle
ds
sti
xchg
mov
imul
sbb
jle
daa
cwtl
mov
inc
pop
add
loopne
lock
inc
mov
shl
subb
cltd
dec
xorb
xor
ds
push
es
ljmp
push
mov
push
mov
cmp
das
das
lds
sbb
and
jno
repz
jp
lret
popa
sbb
add
pop
cmpsb
pop
bound
fsubs
movsb
push
cmp
push
or
cwtl
sub
fsubl
mov
jp
or
sbb
inc
in
andl
mov
inc
mov
cmpl
jne
call
cmpl
jb
mov
orl
add
mov
or
mov
mov
sbb
mov
addl
add
add
mov
mov
mov
add
neg
xor
and
mov
or
mov
andl
mov
inc
mov
cmpl
jne
pushl
pushl
push
pushl
push
pushl
pushl
call
cmpl
jne
xor
add
inc
mov
cmpl
jb
mov
add
lea
mov
push
jmp
add
xor
inc
cld
xchg
loop
ret
dec
aaa
xorb
mov
popa
popf
int
push
adc
mov
jae
jmp
pop
hlt
mov
out
lock
push
adc
call
push
cwtl
pop
mov
mov
pop
xlat
cltd
leave
in
jg
and
and
cwtl
or
mov
push
jo
mov
and
dec
dec
imul
pop
push
cmp
bswap
sbb
lds
lock
xchg
fisttpll
fcmovu
add
hlt
xor
icebp
adc
hlt
sub
mov
inc
cmc
repz
cmp
dec
add
push
shll
ja
push
insb
xchg
mov
int
js
popf
sub
jo
aas
jbe
das
mov
jbe
mov
sbb
adc
or
adc
or
loop
cmp
std
push
std
push
pop
data16
inc
fnstsw
rol
xchg
xchg
in
xchg
mov
add
out
adc
or
and
addr16
mov
add
leave
dec
fmuls
cwtl
in
mov
or
add
push
aam
mov
xor
bound
pop
pop
or
mov
shlb
daa
push
ja
pop
fstp
fsts
mov
pop
aas
cmp
xchg
rorl
icebp
xor
lahf
pop
cmp
je
fdivrs
mov
lret
pop
or
imul
push
fbstp
jg
sbb
ljmp
sub
incb
mov
test
dec
mov
mov
jb
int3
dec
adc
sbb
pop
dec
xor
fwait
jnp
adc
jb
std
pop
lcall
sbb
imul
test
adc
call
mov
popa
orl
fld
clc
pop
pusha
repnz
outsl
mov
ja
idivl
jne
int
aaa
fstps
jecxz
or
aaa
das
cmp
mov
outsb
cmp
inc
mov
push
movsb
dec
pop
test
add
lds
imul
lock
stos
mov
lods
cmp
enter
sti
imul
xor
mov
sbb
add
insb
xchg
add
mov
lahf
jmp
iret
loop
cmp
mov
pop
out
fbld
sbb
out
and
xor
popa
outsb
popa
adc
mov
xchg
mov
repnz
call
pop
mov
mov
iret
xchg
xchg
mov
int3
mov
mov
add
pop
lods
mov
ja
pop
cwtl
lock
roll
jb
outsl
es
cmp
ja
mov
sub
cmp
sar
jne
call
mov
jmp
ret
sbb
sub
jno
pop
or
shll
jo
jo
jle
jo
inc
pop
sbb
sbb
mov
xchg
xchg
inc
dec
jne
mov
popa
jl
in
xor
lds
es
repnz
mov
jg
inc
popa
mov
dec
test
aaa
mov
lods
cmp
mov
xchg
out
inc
push
fisubrs
repz
and
fists
arpl
dec
or
mov
add
insl
pop
in
arpl
pop
out
es
add
xor
sbb
sbb
in
mov
fisttpll
sub
push
mov
aaa
outsb
cmc
aas
mov
mov
nop
inc
or
lods
and
mov
pushf
and
les
inc
add
add
cli
arpl
lea
repnz
jo
adc
outsb
mov
xor
ja
dec
fcoml
adc
sub
mov
push
jge
cld
dec
xchg
xchg
adc
outsb
pop
ret
aaa
push
iret
dec
fucomp
xchg
lret
and
out
lock
ret
lea
sub
fbld
loop
pop
test
and
cld
cld
push
mov
dec
movsl
push
mov
or
cmp
xchg
mov
push
in
lods
push
leave
jmp
lcall
adc
cld
inc
dec
mov
loope
lock
push
cmp
test
adc
lret
movsb
pop
lds
pop
outsb
xchg
cmp
addr16
cmp
rcrb
xor
push
mov
std
out
lret
mov
dec
xor
mov
adc
jbe
rcr
add
hlt
into
add
mov
cli
rcll
ret
xchg
in
ds
outsl
xorb
addr16
xchg
cmc
mov
jle
js
xlat
leave
cmp
jl
mov
in
sbb
add
and
jge
es
or
arpl
jb
cmpsl
psubusw
cli
xchg
insl
cmp
xor
sahf
add
out
push
pop
xchg
and
pop
xor
imul
stc
and
mov
ljmp
xchg
mov
testb
push
leave
cmpsl
dec
or
arpl
lret
xchg
jg
shll
clc
inc
lods
inc
and
pop
adc
pop
ret
cmp
subl
xchg
mov
push
push
int
out
or
or
loope
add
test
mull
cld
out
adc
movsl
ljmp
mov
add
push
data16
dec
push
xor
sbb
add
jg
push
paddw
lcall
mov
xor
jmp
add
mov
jb
jge
jge
or
stos
adc
jo
jle
jo
add
sbb
out
into
dec
jnp
push
pop
push
push
cwtl
sbb
pop
inc
or
pop
sbb
xor
pusha
push
inc
outsl
in
rolb
sbb
pop
mov
sbb
pop
jl
fisubs
dec
sti
sub
mov
unpckhps
cmp
in
sbb
gs
inc
cmp
test
push
push
push
sarl
cmpsl
sub
bnd
repnz
dec
test
test
mov
pop
loopne
ret
mov
maskmovq
testl
or
jg
add
ja
xor
lods
mov
fdivrp
sub
notb
out
mov
jno
or
mov
inc
sub
mov
mov
fstpt
jmp
push
cmpl
inc
lock
inc
mov
lret
push
xor
pop
push
aam
rclb
clc
dec
popf
repnz
in
dec
xlat
aas
sbb
jno
xchg
cmp
dec
scas
mov
dec
cmc
mov
sbb
movsb
mov
push
test
fs
push
shll
jmp
sub
test
xlat
mov
lcall
test
xor
sub
insl
and
push
cmp
scas
sbb
dec
push
scas
bound
jnp
add
jg
test
jns
scas
push
or
mov
push
jmp
push
arpl
lret
rorb
stc
sub
ja
nop
in
dec
jl
sbb
adc
mov
or
cmp
mov
decb
rclw
test
xor
mov
jle
jp
cld
and
mov
adc
fsubs
add
int3
add
test
lcall
inc
jo
inc
sub
xchg
icebp
cmp
jmp
jmp
hlt
dec
or
addr16
shll
aad
xchg
push
dec
lds
sub
lret
push
mov
pop
dec
jne
dec
mov
push
gs
in
sub
and
xchg
inc
pop
bound
sub
clc
push
ljmp
aas
adc
scas
adc
adc
add
call
arpl
sbb
pop
jp
out
jno
int
outsl
jnp
xor
pop
xchg
mov
or
mov
sub
pop
les
xchg
jge
lahf
mov
inc
add
out
es
add
int3
mov
add
sub
dec
adcb
mov
aad
out
mov
nop
mov
jl
js
add
cmp
jne
mov
inc
cmp
jb
jmp
mov
xor
add
jmp
mov
movzwl
mov
mov
mov
mov
mov
xor
add
cmp
jne
mov
xor
jmp
mov
add
mov
mov
test
je
mov
push
jmp
icebp
sbb
imul
outsl
stc
lret
xchg
pop
jnp
jo
jle
jo
push
push
mov
push
mov
xchg
arpl
sbb
data16
sbb
nop
arpl
cmp
cmp
mov
dec
mov
stc
mov
push
nop
mov
xchg
addl
cli
sub
shll
test
push
and
pop
push
sti
cmc
stos
jl
push
mov
dec
in
ret
ds
fnstcw
mov
mov
push
mov
push
mov
xor
sbb
adcb
mov
jb
imul
mov
inc
or
aas
pop
lcall
aaa
insl
lods
jge
sbbl
mov
sbb
in
pop
dec
mov
insb
pop
inc
or
clc
inc
jge
sub
insb
push
out
movsl
nop
icebp
rol
xchg
aad
sbb
test
adcl
sub
add
adc
data16
pop
fdivs
mov
iret
and
mov
js
pop
outsb
cmp
sbb
jne
sub
js
leave
jne
sub
mov
pop
out
cmp
push
pop
mov
sbb
shll
ficomps
hlt
dec
test
jnp
jg,pt
loope
cmpsb
dec
fisubrl
pmaddwd
insl
cmp
adc
sahf
mov
mov
fxch
xchg
sub
or
int3
jle
xchg
sub
or
xchg
dec
fs
mov
fcoml
fnstenv
aad
jl
imul
pop
out
and
xchg
mov
jge
leave
push
aad
cmpsl
insb
orl
cltd
jae
push
cmpsb
jle
pop
mov
gs
nop
ret
add
int
in
es
cltd
adc
push
icebp
or
repz
mov
mov
jg
or
popf
push
psubb
sub
loopne
mov
or
mov
in
addb
dec
scas
ret
adc
add
pop
add
adc
add
inc
out
sub
xchg
xchg
xchg
dec
jg
imul
cld
mov
mov
mov
pop
out
xchg
stos
or
jo
inc
mov
ljmp
int
mov
mov
add
jl
mov
mov
dec
aad
and
inc
movsb
lahf
sbb
fcomps
add
jl
mov
je
aas
imul
or
ljmp
lret
xor
mov
pop
pop
push
sarb
dec
add
xor
sbb
cld
fnstcw
adc
xor
int3
mov
pop
xchg
sub
xchg
dec
mov
imul
jmp
aas
fidivrl
sbb
bound
sub
fsubp
cmc
je
js
jo
jle
jo
dec
mov
daa
test
ja
mov
rcrb
jle
fimull
mov
lret
mov
in
mov
xor
pop
pop
xchg
xor
sbb
es
ds
dec
sbb
popf
push
push
cmp
dec
jle
adc
mov
ret
mov
pushf
xorb
cmpsl
add
repnz
jo
orb
add
outsl
and
pop
cmp
push
pop
decl
fadd
add
aas
mov
dec
out
or
sub
mov
jge
pop
mov
rcrl
fiaddl
icebp
xchg
mov
sbb
cmp
shll
scas
movsl
movsl
insl
mov
mov
mov
push
add
inc
pop
pusha
xor
insb
loop
cmpsb
jmp
sahf
push
mov
jno
cs
jno
lret
jmp
mov
inc
shrl
xchg
ss
or
mov
add
cmp
addr16
jge
pop
out
mov
jmp
add
pop
add
dec
mov
pop
out
sbb
int
mov
data16
popf
cmc
fcoml
lahf
jns
mov
push
stos
jg
mov
dec
loopne
mov
fstpl
inc
outsb
jge
or
scas
std
loope
hlt
xor
mov
scas
add
aaa
xor
and
inc
nop
and
out
insl
ds
xor
sub
inc
adc
hlt
mov
aam
pop
push
movsl
lret
shr
loopne
push
js,pn
dec
mov
insb
xchg
lods
insb
outsl
mov
fldl
in
pop
cmp
testl
jnp
cmpsb
xchg
lods
push
xor
jp
outsb
imul
bound
testl
fwait
lahf
ds
pop
ja
je
fisttpll
mov
ljmp
fnstcw
stos
xchg
pop
je
pusha
xor
mov
mov
out
pushf
loope
fnstsw
cmp
stc
xchg
add
and
mov
lds
fldt
lock
xor
pop
pop
add
cmpsl
bound
add
cmp
imul
pop
or
push
jo
out
jo
ficompl
xor
shr
inc
dec
xchg
inc
mov
stos
inc
adc
dec
das
adc
mov
add
icebp
mov
push
in
cmpb
inc
addl
mov
dec
jge
or
jl
int3
daa
jmp
pop
jnp
jnp
cwtl
fwait
loopne
mov
xchg
mov
xorb
fdivrl
mov
call
sub
mov
mov
mov
xor
mov
jmp
mov
jne
pop
push
fsts
loop
in
add
jo
jp
mov
mov
cmc
ljmp
xchg
jmp
movsl
xchg
aas
ljmp
jmp
or
fldt
cmp
jmp
jo
sub
sar
stc
push
sti
xor
add
jnp
add
xor
dec
pop
std
sub
int
jp
scas
or
int
sub
adc
mov
xchg
lock
xor
cmp
jl
cmp
lahf
repnz
push
mov
loop
adc
dec
movsb
jle
cmpl
fcmovne
inc
imul
int
jns
movsb
fcmovnb
lds
insb
xchg
cmc
cmpsl
lods
cld
push
push
cltd
push
mov
mov
inc
inc
mov
pop
mov
addl
repnz
jmp
stos
mov
and
dec
scas
cmc
cmpsl
or
or
inc
repz
dec
jbe
scas
lea
cs
mov
cmp
cmp
sub
mov
mov
fldcw
lods
scas
mov
vorps
and
in
jb
fidivl
mov
mov
call
cs
pop
jecxz
popf
jo
pushf
sbb
and
addl
sbbl
dec
add
mov
pop
cmp
adc
or
sbb
es
add
stos
push
cmp
or
stos
fwait
in
xchg
dec
mov
cli
incb
cmp
inc
test
adc
mov
cltd
inc
add
lods
push
or
bound
xchg
pop
mov
mov
push
cmp
xor
ja
loopne
sub
push
in
cmp
fcoms
pusha
insb
das
lret
outsb
adc
out
loopne
out
xor
jle
popa
xchg
push
in
cli
das
jecxz
or
sar
lods
mov
nop
and
push
jnp
inc
jb
dec
push
or
mov
xchg
sub
out
lock
jb
adc
jge
add
mov
fld
or
jb
jle
xor
mul
xlat
or
shl
iret
adc
sbb
mov
pop
imul
and
icebp
or
push
sbb
fxch
ficompl
movsl
in
sub
xor
xorb
lahf
xchg
dec
decb
bound
inc
cmp
jmp
or
fsubl
sbb
lods
jo
dec
repnz
mov
pop
dec
dec
cmp
lock
mov
pop
shr
jmp
xchg
imul
sub
xchg
dec
or
inc
daa
les
ret
or
add
mov
imul
mov
xor
mov
lea
cmp
je
mov
mov
mov
mov
mov
xor
xor
jmp
sub
sub
xchg
push
mov
orl
add
mov
inc
xor
es
cmc
add
xchg
mov
int3
insb
repz
xchg
repz
inc
ret
addr16
mov
sbb
jnp
insl
sbb
push
or
in
add
ret
dec
sti
push
enter
cmp
fistps
ds
pop
dec
out
dec
mov
xchg
push
pop
sub
leave
xor
mov
sub
add
xor
icebp
sub
dec
mov
adc
cmc
sub
dec
xchg
adc
ret
cmp
mov
inc
arpl
mov
mov
pop
add
pop
xchg
test
dec
loope
mov
mov
popf
mov
je
mov
push
jns
cltd
in
in
fdivs
bound
in
pop
jns
xlat
repz
ja
sbb
mov
cwtl
call
add
fnstenv
scas
iret
sub
jg
push
lcall
cmp
fisubl
frstor
and
sbb
cmpsb
sbb
and
divl
mov
inc
push
aad
pop
and
in
jno
lcall
xchg
xchg
push
cmp
sub
cli
push
push
int
cmp
test
sbb
adc
xor
in
subl
inc
popf
jo
jne
adc
popf
sbb
and
scas
xchg
sbb
or
fidivrs
and
test
jns
cltd
pushf
push
jmp
mov
ss
mov
push
imul
outsb
xchg
and
inc
inc
pop
push
mov
push
xor
cmp
fs
gs
cmp
jo
shlb
movsl
ss
sbb
pop
stos
scas
sqrtps
scas
pop
push
push
xor
shlb
push
push
sarl
lret
in
insb
ret
sti
xchg
cmp
jns
push
ret
sub
push
xchg
xchg
stos
ljmp
inc
or
or
movsl
push
insb
stos
outsb
jae
sub
or
movsl
iret
std
imul
aaa
das
adc
shll
mov
out
popa
sbb
shrb
fs
pop
jae
and
roll
sbb
xchg
js
jnp
jecxz
xlat
jnp
xchg
mov
daa
jecxz
sti
inc
add
insb
out
insb
into
sbb
int
mov
xor
in
mov
aaa
int
lods
icebp
fstl
pop
fldt
fisubs
sub
addr16
ficomps
jns
int
jg,pn
push
mov
or
mov
adc
sti
dec
xchg
adc
mov
add
div
mov
jmp
adc
inc
rolb
xchg
int
rcll
test
movq
jle
jo
into
mov
mov
test
cmc
out
pushf
lds
scas
das
mov
test
div
rcrb
cmp
pusha
inc
cmp
inc
ljmp
dec
int3
mov
fidivrl
push
sti
mov
hlt
enter
xlat
sbb
dec
mov
cmp
gs
js
inc
imul
cmpsl
push
aaa
pop
pop
clc
push
loope
pop
sub
xor
mov
pushf
xchg
mov
loope
mov
dec
xchg
insl
xorb
add
scas
repz
dec
ss
pop
and
pushf
xchg
arpl
push
mov
adc
mov
ret
sbb
in
in
sti
dec
pop
incb
imul
clc
or
pop
sarb
inc
jne
cli
aaa
sahf
insl
push
adc
or
das
or
insl
sbb
jg
sub
subl
push
fcompl
xor
and
xor
inc
xlat
add
in
rcl
xchg
jb
sbb
cli
sub
cld
lods
daa
xorb
pop
jne
test
mov
in
mov
cltd
scas
leave
movl
cmp
sarb
das
fwait
jg
jne
jp
jae
lret
sub
std
std
sub
sub
js
mov
ljmp
mov
pop
adc
sbb
out
cltd
mov
sub
cmp
mov
popf
adc
loop
movsb
fiadds
dec
jnp
or
int3
cmp
psrlq
sarl
in
mov
cmp
in
popf
mov
jmp
inc
daa
or
fsts
dec
ror
mov
sub
bound
cmp
scas
dec
mov
mov
out
in
popf
icebp
pop
pop
shll
hlt
adc
cmp
les
adc
jns
lcall
jne
mov
xor
cmpb
ror
das
mov
pushf
sahf
aad
pop
fidivrs
in
and
and
lahf
xchg
sbb
mov
xchg
xor
int
mov
sub
sub
jmp
jno
dec
fwait
dec
or
pop
inc
out
jmp
fmull
imul
pop
enter
dec
call
aas
inc
mov
and
or
mov
mov
xchg
jl
dec
and
jle
ja
fidivrl
push
lcall
jno
inc
addr16
lea
leave
sbb
xchg
or
sub
push
inc
je
ret
sar
pop
mov
cmp
sbb
cltd
xor
in
jge
xor
mov
dec
mov
rorl
xor
jmp
sub
mov
popa
pop
xchg
aas
adc
iret
mov
jle
jo
inc
jns
test
jne
mov
dec
xchg
xor
addr16
rcll
mov
rcll
dec
inc
cmc
xor
and
pop
in
jecxz
addb
fdivr
subl
jno
push
pop
adc
adc
or
cmpsl
sub
stc
aaa
outsb
mov
pop
mov
bound
stc
jmp
sub
xor
push
sub
sbb
fdivrs
jbe
jecxz
popa
push
or
scas
je
fbld
cmpsb
icebp
int
ret
cli
in
lret
jge
sbb
nop
addr16
loopne
sub
inc
jo
std
fsincos
sbb
or
ss
sbb
ret
sbb
outsl
sub
push
xor
sbb
dec
mov
scas
enter
mov
mov
inc
jge
and
push
iret
lds
sub
fisubs
mov
push
inc
ljmp
notb
outsl
mov
or
pop
ja
addr16
arpl
cwtl
repnz
push
xchg
jno
sbb
xor
mov
aad
xchg
imul
mov
repz
bound
cld
pop
sbb
sahf
push
bswap
leave
pop
testb
adc
out
and
pop
mov
mov
ds
lret
stc
icebp
push
jno
out
aas
pop
jp
shll
arpl
mov
lea
mov
js
lods
gs
pop
out
enter
ret
mov
fs
or
pop
hlt
je
out
sbb
movsl
stos
sbb
stc
xor
xor
push
les
stc
lcall
cmc
adc
xor
lret
dec
jb
pop
outsb
cmc
or
jle
xor
or
aaa
and
std
cmp
cli
loope
push
inc
inc
add
pop
and
mov
xor
or
mov
sbb
adc
or
mov
repz
inc
and
adc
mov
add
aaa
xchg
push
xchg
insl
call
scas
dec
jp
test
pushf
movsb
dec
pop
adc
fsubrl
ret
cmp
mov
iret
bound
out
adcb
push
bnd
and
push
jno
scas
push
sbb
push
jae
aaa
out
or
daa
sbb
daa
shl
rolb
mov
scas
lds
jo
out
cmp
test
loopne
mov
mov
aam
sbb
and
insl
pop
mov
dec
pop
test
xchg
aaa
cwtl
adc
mov
mov
mov
mov
jmp
dec
fistpll
arpl
pop
jp
pop
inc
xor
jle
jo
ds
je
icebp
push
subb
cmpsl
dec
lds
sbb
adc
loope
int3
clc
leave
dec
fwait
call
mov
repz
aam
dec
bnd
dec
incw
shl
rep
push
ja
sahf
mov
mov
adc
test
or
sbb
pop
mov
push
fsubrl
mov
dec
lcall
jne
mov
addr16
inc
fs
ret
push
rclb
xchg
cltd
gs
arpl
sbb
movsl
call
pushf
scas
andb
test
ret
in
jmp
fs
push
idivb
shlb
sbb
push
and
xor
pop
cmp
sub
adc
cld
insl
and
adc
push
sbb
sbb
jg
dec
and
add
daa
fs
mov
jbe
shlb
jnp
xchg
fwait
xchg
icebp
adc
loope
stos
jmp
leave
xlat
mov
cmpsw
mov
xchg
push
add
xchg
push
jp
jp
lods
into
push
lcall
fs
inc
data16
out
push
and
jns
xchg
icebp
fmull
and
sbb
xchg
into
mov
xor
out
pop
xor
mov
mov
fwait
test
jae
shrb
mov
aaa
add
mov
mov
cmpl
pop
xor
adc
xor
sbb
mov
cmp
and
fldt
jecxz
pop
outsb
fcomip
iret
dec
in
cmpsb
xor
mov
mov
mov
stc
pop
mov
addb
mov
sub
divb
sbb
ret
stos
into
imul
cmp
push
data16
out
negb
add
loope
push
icebp
loop
fs
lea
mov
inc
int
inc
add
popf
adc
sbb
nop
push
and
pop
adc
cmp
mov
rcrb
pop
cmp
in
data16
mov
mov
adc
xchg
xchg
negb
pop
fs
stc
notb
inc
mov
jmp
in
and
push
push
notb
xchg
sbbb
jno
inc
lods
or
inc
cmpl
cld
inc
out
pop
fidivs
lods
imull
jle
loopne
out
repz
aad
lds
test
adc
push
cs
fidivl
mov
inc
in
pop
in
call
js
fistpll
xchg
or
jp
out
gs
movsl
lods
dec
push
mov
pop
mov
bound
push
dec
cmp
subb
or
rorl
add
call
roll
imul
mov
xor
jmp
adc
iret
cmpsl
aad
jae
jl
jge,pn
or
pop
jg
mov
xchg
sbb
shlb
jle
iret
jg
loopne
scas
and
mov
rcrb
nop
movsl
icebp
sahf
test
adc
inc
inc
es
adcb
adc
adc
dec
sarl
test
add
mov
pop
shlb
daa
sub
ljmp
jp
inc
das
mov
stos
testb
jp
mov
or
lods
daa
cmp
or
test
inc
pop
cmp
shlb
leave
orb
in
xor
loope
insb
or
jnp
in
rdmsr
ficoml
or
stos
cmpsl
dec
pop
sahf
bound
xor
repnz
js
sarb
pop
pushf
popf
jmp
insb
inc
fidivrl
cmc
dec
xchg
dec
jo
jge
repnz
sbb
out
adc
add
stos
xchg
bound
jno
cmpb
js
jno
mov
scas
mov
test
sub
test
cmp
sub
clc
lcall
cmp
mov
mov
pop
mov
insl
cmp
aad
adc
loop
cmp
dec
cltd
divl
idiv
dec
pop
test
dec
fistpll
mov
sub
filds
jae
adc
shll
jno
addr16
cmp
imul
movsl
push
dec
or
or
or
in
inc
push
sbb
add
out
adc
mov
or
mov
out
xchg
cmpsb
js
ds
adc
mov
out
fdiv
enter
xchg
mov
sub
jb
cmp
dec
sbb
dec
mov
xchg
imul
sub
lahf
and
push
inc
dec
pop
negl
jns
xchg
aas
fcoml
add
pushf
pop
pushf
push
and
je
mov
out
dec
call
mov
push
inc
mov
mov
in
sbb
aaa
int
add
fucomip
xor
arpl
stos
lods
adc
xchg
ret
mov
jo
test
jo
sti
dec
adc
cmp
in
mov
cld
lods
shlb
ds
mov
dec
mov
lahf
push
jge
ja
ss
dec
mov
add
out
cmp
mov
push
jae
in
aas
pop
and
mov
aad
ljmp
mov
mov
or
fstl
pop
mov
fsts
ret
rorb
mov
lea
cmp
jne
mov
jmp
mov
mov
xor
add
mov
xor
lea
add
call
xor
inc
cmp
je
jmp
or
shll
jno
jmp
lds
sbb
mov
fldcw
lret
loop
mov
addr16
aam
pop
rcrl
ja
jp
pop
rclb
mov
and
shll
pop
dec
or
test
repz
in
mov
jno
or
mov
xor
push
cmp
jg
jbe
mov
lods
mov
nop
aas
in
add
push
inc
jb
movsl
pop
or
sbb
xchg
dec
adc
inc
xchg
into
pushf
fisttpl
inc
and
ja
lahf
lcall
pop
mov
xchg
outsb
frstor
xchg
pushf
and
sbb
sub
sub
pop
xchg
lds
call
pop
pop
out
repnz
lods
scas
push
adc
notb
or
add
inc
ficompl
in
test
pop
sti
in
mov
cmp
or
push
pop
inc
movsb
mov
bound
int
sti
pop
scas
xchg
adc
in
outsb
cltd
xrelease
scas
jne
jbe
xor
jae
adc
mov
int3
clc
adc
daa
repz
push
xchg
sbb
fidivrs
inc
xchg
mov
insl
rcll
jbe
sbb
js
xor
mov
movsb
sub
dec
sbb
sub
pop
out
xorb
loop
pop
add
and
call
into
or
subb
dec
push
lret
and
lcall
or
push
xchg
into
in
aad
std
jb
out
inc
cmp
mov
bound
jnp
insl
mov
mov
int3
scas
mov
sbb
shl
dec
push
add
aaa
sbb
sbb
pop
xchg
pusha
xor
xchg
push
cwtl
arpl
andb
inc
cmpsl
je
cmp
sub
lcall
jno
and
mov
icebp
inc
or
aad
ljmp
fnsave
rcrl
lods
adc
pop
ja
cmp
repnz
push
fwait
xor
pop
cltd
jle
aad
mov
pop
pop
cmp
adc
sbb
mov
stc
mov
push
scas
push
imul
aas
inc
xchg
leave
dec
repz
sar
std
out
sub
rcrl
aas
pop
xor
inc
sbb
push
nop
or
je
pusha
jae
adc
adc
into
inc
lock
mov
adc
mov
mov
mov
and
jmp
outsb
push
jle
arpl
in
iret
add
jle
popa
daa
ret
push
inc
xor
andb
mov
or
add
inc
xchg
sub
jmp
cmc
icebp
lret
mov
test
jnp
fiaddl
popa
pop
adc
mov
scas
lahf
inc
mov
das
push
pop
jo
gs
or
inc
das
mov
xor
sahf
add
mov
sub
scas
xchg
lods
sti
iret
push
mov
pushf
push
mov
das
cmp
hlt
sub
in
into
and
inc
jge
popf
and
push
push
imul
mov
jg
mov
sub
or
fnstenv
xor
cmp
fld
repz
push
mov
filds
stc
movb
pop
mov
cmpsl
pop
out
xor
mov
movaps
jle
push
push
fptan
or
push
push
dec
test
mov
scas
xor
ss
dec
sti
ret
dec
cmpsl
dec
hlt
sub
test
dec
push
pop
mov
xchg
imul
rol
xor
sbb
lahf
lahf
adc
outsl
cmp
push
cmp
dec
adc
pop
push
icebp
dec
mov
cmc
scas
insb
sti
js
jge
push
adc
mov
mov
jmp
stos
loop
and
pop
fimuls
inc
jb
xor
sub
jne
xchg
imul
ds
sbb
int
gs
stc
add
inc
call
mov
lret
sbb
lret
les
sbb
les
jns
sqrtps
add
pop
lods
call
or
xchg
sbb
iret
movsl
addr16
sbb
int3
jge
fdivl
scas
push
cmp
lret
lahf
push
xor
lahf
jp
cld
adc
sbb
xor
fcmovnb
mov
loop
into
sbb
mov
mov
inc
shr
sub
je
push
xchg
or
repz
cmpl
sub
pop
mov
lods
inc
cltd
pusha
out
dec
mov
lcall
ss
mov
jnp
cld
shr
lcall
add
stos
adc
fcoms
inc
adc
lea
mov
sub
out
jmp
jnp
loopne
roll
add
and
shll
adc
sahf
or
jg
jo
shll
push
shrb
gs
add
aas
mov
jnp
lret
xor
cmp
aas
xlat
push
inc
ja
das
mov
pop
daa
jle
jo
push
inc
gs
fs
add
bound
sbb
sub
cltd
gs
ret
jl
in
cmpsl
xchg
and
cmpsl
add
mov
inc
je
pop
add
mov
div
fcoms
and
push
push
inc
adc
adc
xchg
jmp
cmc
std
fs
jno
mov
fildll
or
jo
jle
jo
orl
movsl
add
daa
adc
ret
outsl
shrb
pop
mov
pop
xchg
cltd
in
movsl
xor
xchg
scas
or
pusha
dec
dec
push
adc
aad
mov
insl
lahf
push
popf
jbe
shlb
add
jbe
bound
jb
and
ss
mov
adcl
dec
data16
pusha
lret
mov
mov
sbb
xor
xchg
xchg
adcl
cmc
or
mov
aad
sub
ss
mov
scas
rclb
inc
cmpl
dec
into
and
andl
jne
testb
jbe
mov
mov
jge
cmpsb
ljmp
add
push
ss
push
dec
jle
mov
lea
jb
popf
clc
jne
addr16
divb
pop
rcrl
in
or
movsl
cld
mov
adc
add
mov
add
cmp
jo
xchg
sbb
mull
jns
cmp
push
or
xor
out
rcr
adc
sbb
aam
ja
fldt
cmp
mov
xchg
lcallw
arpl
jns
push
jecxz
mov
inc
mov
pop
xchg
je
les
cmp
fisttps
andb
cli
data16
cmpsb
or
push
adc
mov
sarb
stos
push
xchg
and
inc
insl
leave
jae
xchg
cmp
andl
adc
push
rclb
daa
xchg
lahf
testb
cld
and
cmp
sbbb
icebp
mov
pop
aam
or
xlat
cmp
pop
ja
push
cld
iret
loope
popa
std
push
sub
cmp
or
jmp
sahf
lcall
sub
dec
xor
ja
int3
inc
dec
aam
dec
cmp
adc
int3
xor
fs
or
dec
lcall
mov
mov
mov
icebp
sub
mov
rcrb
repz
add
add
mov
pushf
sahf
mov
in
dec
popl
ret
cmpsl
leave
add
and
clc
inc
adc
add
xor
xchg
pop
xchg
rcrb
stc
adc
add
pop
add
sbb
into
loope
enter
insl
jle
inc
and
xchg
rcrl
jbe
sar
out
cmc
xorl
fdivrl
mul
loope
xchg
cmpsl
mov
inc
jge
xor
sbb
mov
jmp
outsb
ds
loopne
outsb
outsb
mov
mov
mov
out
sbb
jo
jle
jo
mov
cwtl
stos
test
inc
inc
scas
out
loop,pn
xor
mov
xor
es
stc
push
mov
mov
sub
add
iret
push
mov
pop
mov
and
add
jl
int
add
sbb
xchg
stos
jg
in
pusha
or
hlt
xchg
or
ljmp
push
xor
xor
xchg
sbb
sbb
xchg
pushf
push
call
sub
leave
xor
filds
mov
lahf
and
cmc
mov
and
test
dec
addl
mov
cmp
test
lahf
pop
sbb
inc
mov
xchg
xchg
sub
add
xchg
mov
ret
stos
xor
gs
mov
mov
adc
pop
mov
jmp
ret
dec
jae
lret
addr16
jg
lcall
and
dec
cld
xchg
fldl
mov
leave
mov
and
adc
cmp
int3
scas
jmp
sub
xchg
das
mov
push
in
push
fisttpll
pop
and
xor
mov
jo
idivl
push
fisttpll
dec
pop
loope
jmp
test
pop
push
ret
jne
repnz
hlt
push
adc
test
lods
xor
or
push
xchg
push
sbb
jae
lea
stos
popf
inc
in
and
push
bnd
pop
insl
xchg
fucomp
stos
enter
hlt
inc
fiadds
lea
mov
pop
fs
sbb
adc
sub
lds
jae
add
arpl
add
iret
lret
mov
jnp
ljmp
loop
mov
push
aas
aaa
inc
cmp
mov
adc
test
andb
sbb
add
mov
jae
pop
in
add
push
sbb
xchg
hlt
push
sar
dec
pop
jmp
mov
lods
mov
mov
sbb
jecxz
outsl
pop
movsb
cli
xchg
jecxz
xor
sub
inc
sub
arpl
ja
xchg
test
mov
mov
jle
sbb
jl
dec
in
push
dec
adc
pop
adc
in
jbe
insl
push
jns
pusha
sub
and
jge
mov
lahf
xor
daa
aad
lds
cmp
add
repnz
lcall
test
imul
add
xchg
push
xor
mov
jmp
cmp
push
add
data16
and
jbe
not
aaa
sbb
mov
sar
pop
mov
ret
imul
cmpsb
lods
push
sub
and
lds
dec
xchg
ret
lret
jb
loopne
adc
aam
popa
addl
mov
sbb
dec
dec
aam
lods
ffreep
pop
inc
test
push
fadds
dec
ds
leave
dec
scas
sbb
sub
pop
pop
ja
inc
shll
mov
pusha
clc
sarb
out
adc
lahf
push
mov
in
push
push
cmp
call
popf
in
cmp
mov
jmp
xchg
jb
pop
dec
cmp
int
fwait
xchg
xlat
jle
jmp
bound
fsubr
subl
lahf
stos
outsl
inc
mov
pop
mov
push
lock
inc
hlt
add
hlt
mov
cwtl
repz
or
loope
cmp
jecxz
mov
arpl
imul
xchg
je
jbe
mov
aaa
ds
and
pop
push
push
mov
inc
andl
inc
pop
pop
outsb
scas
or
loopne
lods
ficoms
pop
cwtl
and
xor
fwait
pop
push
ficomps
cmp
xchg
cltd
cmpsb
jo
mov
mov
jns
lahf
add
xor
je
fstpt
xor
or
imul
pop
and
mov
or
jb
push
daa
sbb
mov
clc
popf
movsb
jg
icebp
lret
cmp
push
push
ljmp
xor
outsb
enter
test
pusha
out
pop
sbb
je
inc
out
mov
scas
mov
xchg
ret
pop
and
inc
imul
sar
push
pushf
fcoml
cwtl
lahf
in
and
sbb
fisubrl
xor
fmul
push
mov
inc
inc
insb
sub
mov
ret
sbb
sarl
or
xchg
sbb
mov
cmp
mov
fstps
cmp
imul
push
fcompl
ljmp
cli
push
push
imull
xchg
and
mov
dec
mov
pop
push
dec
push
mov
mov
mov
arpl
bnd
fisttps
mull
pop
xor
or
sub
daa
fwait
inc
sbb
xor
in
insb
in
sahf
jmp
movsb
popf
adc
pop
je
std
cmpsl
mov
adc
in
pusha
les
mov
inc
jbe
mov
sbbb
and
add
or
in
cmp
sub
in
loop
sbb
std
aaa
adc
enter
loopne
lret
in
jae
push
inc
popf
xor
std
dec
inc
add
dec
jmp
fsubp
stos
mov
insb
leave
pop
sub
xor
mov
jo
jg
mov
mov
push
add
and
add
out
lds
inc
add
bound
adc
mov
or
dec
popa
inc
mov
shrl
mov
sub
sbb
add
ret
sti
dec
dec
xchg
xor
cmp
push
pop
sti
into
loop
sub
nop
int
and
loop
mov
ret
add
adcb
sub
and
imul
adc
push
sbbb
addr16
jecxz
mov
jl
sub
sbb
jge
sbb
rol
mov
push
pop
insb
mov
xchg
cmovp
frndint
fisubs
sti
xor
push
test
dec
mov
pop
cmp
mulb
inc
pop
or
jbe
push
les
movsb
jecxz
mov
pop
or
adc
sbb
jg
add
into
sarl
dec
and
mov
cmpsb
push
mov
and
sahf
pop
cmp
in
idivl
and
cmp
xchg
and
ljmp
push
call
or
adc
xor
fnstenv
pop
sbb
outsl
xchg
mov
sbbb
pusha
pop
or
lods
pop
xchg
repnz
scas
cmp
mov
fcmovbe
push
xor
xchg
insl
inc
movups
add
sbb
test
mov
test
inc
arpl
adc
cmp
mov
inc
cmp
subb
icebp
stc
loop
or
mov
aad
jp
push
inc
cld
or
cmp
lahf
in
cwtl
call
lcall
jo
scas
jnp
dec
xchg
jbe
fwait
insb
iret
in
int3
xchg
add
sbb
push
ja
inc
mov
push
mov
jmp
push
sahf
aad
push
mov
mov
sub
mov
sub
mov
jg
mov
mov
mov
shl
jae
mov
std
pop
xchg
push
cmp
fwait
adc
jp
cltd
pop
xchg
rclb
mov
cli
sbb
lahf
adc
iret
lods
scas
sub
rcrb
mov
lret
sbb
test
lock
stos
push
pop
push
repnz
daa
pop
and
test
shlb
icebp
jp
jae
push
cmc
adc
leave
jns
jmp
push
dec
pop
xor
test
stc
rcr
shrb
pop
sbb
mov
xchg
inc
fidivrl
pop
mov
mov
pop
mov
test
into
lret
push
fnstenv
push
mov
das
jmp
xchg
adc
rolb
pop
hlt
pop
mov
pop
jmp
cld
pop
cmpsl
addr16
gs
mov
loope
lahf
mov
jle
jo
fisubrl
and
jne
cmc
mov
popa
or
dec
cmp
dec
hlt
jg
xchg
sub
lcall
lahf
xor
push
cltd
cmpsb
push
lea
pop
mov
xor
push
loopne
lcall
mov
es
and
xchg
add
pop
lret
or
scas
mov
stos
loope
xor
mov
fistpl
pop
scas
mov
stc
movsl
test
pusha
push
push
pushf
push
jne
cmp
xchg
inc
mov
sbb
jo
cmpsb
test
imul
inc
lcall
mov
in
add
xchg
test
in
jae
dec
inc
rcr
jo
push
je
xchg
push
cmc
xor
inc
in
jnp
arpl
mov
xor
and
or
in
push
subb
push
test
sub
out
fimull
bound
daa
mov
faddl
lock
sbb
fisubs
cs
xchg
inc
in
jno
out
or
lds
or
js
inc
mov
das
fcomp
mov
and
jnp
out
jns
lret
cltd
adc
sbb
pop
cs
sbb
jge
nop
inc
mov
mov
push
push
add
mov
sahf
rorb
arpl
pop
lds
xor
xchg
sub
mov
cli
jae
shrb
cmp
mov
dec
ds
fildl
std
mov
cmpsl
pop
push
jnp
add
adc
dec
sbb
dec
add
addr16
lcall
ss
mov
xchg
push
sub
aaa
cwtl
lds
dec
sti
pusha
rcll
lock
pusha
mov
pushf
sub
je
xchg
mov
popa
inc
xorb
inc
and
or
cmp
mov
stos
out
ret
addr16
mov
lcall
lahf
mov
lods
jecxz
add
mov
adc
xchg
insl
push
mov
loop
jle
jge
out
pop
inc
inc
inc
pushf
in
inc
nop
shlb
add
jno
das
sbb
cmp
leave
into
stos
fisttps
cltd
sub
adc
cli
nop
lds
push
je
cmc
js
and
mov
inc
js
jmp
and
mov
mov
mov
leave
stos
cmp
nop
aad
js
and
add
add
cmp
cmpsb
test
add
inc
or
adc
dec
mov
cmp
pop
leave
ret
dec
push
mov
mov
or
dec
add
add
add
movl
xor
test
enter
mov
hlt
test
pushf
enter
movl
inc
inc
cld
xor
or
mov
call
pop
mov
dec
mov
pushl
or
ljmp
dec
loopne
rorb
add
mov
hlt
add
enter
dec
add
mov
orl
xor
lret
enter
mov
lea
push
mov
fs
decl
push
and
pop
inc
mov
push
pop
cld
dec
lea
mov
add
movl
decl
xor
cld
dec
jne
lea
push
mov
or
add
sub
add
rolb
inc
add
add
mov
incl
lea
call
add
jne
decl
dec
add
xchg
loopne
inc
incl
mov
xor
add
enter
mov
hlt
add
mov
add
add
incl
sbb
jne
mov
mov
movl
incl
fisttpll
test
inc
aas
inc
lea
inc
mov
mov
cld
in
inc
jmp
fisttps
jecxz
out
incl
out
aas
inc
ljmp
incl
movl
insb
test
pandn
aas
add
mov
incl
or
mov
xchg
fildl
mov
cmp
dec
leave
mov
fsubrs
add
lea
push
add
mov
mov
add
mov
cld
push
decl
push
mov
call
mov
cld
add
test
in
in
cld
jge
mov
fsub
add
mov
add
add
mov
inc
push
fisttps
test
fadds
jmp
fildl
inc
jo
test
jmp
incl
in
add
jne
mov
cld
incl
mov
mov
add
call
ret
cld
incl
out
xor
mov
cld
jo
or
add
push
add
mov
decl
add
inc
orb
add
mov
mov
inc
sub
add
rolb
jne
xor
incl
call
mov
call
xor
push
adc
loopne
ret
loopne
xorl
cmp
bswap
rolb
jmp
mov
add
cld
jne
xor
push
add
add
inc
add
mov
test
add
incl
jmp
adc
mov
pushf
mov
lea
xor
call
call
jne
xor
add
pushl
call
int3
incl
mov
xor
add
xchg
in
add
add
add
mov
mov
or
inc
test
je
mov
xor
push
or
inc
in
mov
mov
fmul
add
mov
cld
loopne
inc
push
cmp
movaps
cld
fadds
jne
push
in
jne
lea
das
mov
mov
mov
xor
adcl
rclb
inc
lock
inc
xchg
ud0
incl
lret
jbe
mov
push
pop
mov
inc
lret
inc
iret
jb
mov
enter
xor
pushf
mov
xor
dec
add
inc
mov
xor
add
mov
fmuls
xor
mov
roll
xor
mov
clc
enter
mov
test
clc
incl
cmp
pushf
or
enter
xor
pushf
inc
ds
pushf
inc
mov
lock
add
mov
sarb
adc
dec
adc
add
jmp
jb
add
xor
xor
add
clc
enter
pop
mov
push
push
xor
xor
add
add
lret
repnz
cli
fdivr
test
dec
inc
xor
add
mov
mov
clc
jne
mov
into
into
scas
dec
mov
sub
cmp
mov
mov
mov
add
xor
xor
lret
mov
inc
add
mov
lods
test
xor
mov
lock
bswap
lret
test
jmp
add
push
mov
test
push
clc
xor
xor
add
add
push
dec
mov
stc
roll
scas
mov
xor
xor
add
mov
clc
lret
into
mov
mov
mov
int3
add
xor
xor
add
mov
lock
stc
mov
or
jmp
dec
dec
mov
clc
test
clc
rorl
mov
call
les
lret
ja
mov
dec
xor
mov
clc
push
lret
mov
adc
jb
add
call
cmp
movsb
pushf
inc
xor
mov
clc
dec
lret
mov
call
scas
mov
pushf
sub
cmp
lods
xor
add
mov
mov
cmp
jb
add
dec
scas
mov
shrl
into
cmp
mov
dec
dec
mov
lret
xor
add
imul
mov
xor
mov
add
mov
inc
rdtsc
xlat
pushf
jge
xor
sub
cmp
jb
add
rorl
xor
add
jmp
mov
dec
into
mov
pushf
shll
lret
or
add
in
push
mov
fs
dec
sub
dec
xor
jge
mov
add
dec
decl
adcb
add
jge
push
push
shlb
xor
xor
inc
add
dec
or
jbe
mov
ror
enter
decl
push
lret
push
mov
mov
cld
subb
sti
add
push
lcall
bswap
pop
inc
decl
push
xor
movl
aas
push
inc
xor
add
mov
jmp
mov
les
mov
mov
cmp
mov
add
xor
pushf
lret
cmp
call
inc
inc
mov
mov
enter
add
add
clc
enter
push
pushf
mov
int3
or
test
clc
gs
add
push
xor
sub
dec
add
mov
or
cmp
dec
out
xor
mov
dec
add
push
push
add
sbb
mov
xor
dec
inc
xor
add
push
dec
mov
lret
into
sub
dec
adc
inc
push
test
unpcklps
jmp
add
movl
xor
rolb
clc
fs
mov
xor
sub
mov
add
sub
mov
mov
clc
addl
lcall
inc
decl
test
decl
push
add
dec
or
rorb
into
add
mov
sar
adc
clc
fadds
mov
push
adcb
add
lret
mov
cld
mov
into
add
jne
incl
rclb
push
mov
mov
sar
or
push
add
pushf
xor
pushf
mov
test
clc
inc
inc
mov
sub
mov
dec
xor
mov
xor
orl
shll
int3
lea
push
xor
pop
lods
incl
mov
pushf
jo
cmpl
inc
add
push
in
inc
push
mov
cld
add
adc
add
jmp
add
mov
dec
push
cmp
unpcklps
jne
decl
mov
shlb
inc
add
lret
decl
stc
in
or
dec
clc
xor
mov
rolb
inc
add
clc
inc
lret
mov
in
lret
into
into
scas
dec
mov
sub
cmp
mov
int3
test
xor
xor
lret
mov
inc
add
mov
xor
mov
call
lret
test
jmp
add
push
mov
mov
lret
xor
add
add
push
dec
mov
stc
roll
scas
mov
xor
xor
add
mov
clc
lret
into
mov
test
push
jbe
mov
mov
push
add
rdpmc
lret
add
dec
stc
mov
or
jmp
dec
dec
mov
clc
test
clc
rorl
mov
lock
inc
mov
hlt
pushf
jge
sub
cmp
ja
mov
dec
xor
mov
clc
push
lret
mov
adc
jb
add
lock
sub
mov
mov
mov
mov
lock
ror
push
scas
mov
pushf
sub
cmp
movsb
xor
add
mov
mov
cmp
jb
add
dec
scas
mov
shrl
into
cmp
mov
dec
dec
mov
lret
xor
add
imul
mov
xor
mov
add
rolb
rdtsc
xlat
pushf
jge
xor
sub
cmp
dec
xchg
incl
jmp
mov
dec
into
mov
pushf
shll
lret
or
add
in
push
mov
fs
dec
sub
dec
xor
jge
mov
add
dec
decl
inc
push
decl
lea
mov
push
mov
les
add
incl
mov
cld
lret
add
jne
in
ror
scas
into
add
not
adc
inc
push
mov
push
mov
fdivr
sti
sbb
pop
xchg
leave
pushf
add
push
cmp
sqrtps
decl
push
cld
xor
lret
clc
xor
add
hlt
or
mov
hlt
dec
add
leave
mov
push
roll
mov
mov
lar
push
lret
jne
mov
or
mov
cld
inc
mov
add
in
test
fdivr
ret
cld
mov
clc
xor
mov
loopne
mov
mov
clc
jne
call
and
je
mov
cld
or
push
add
add
inc
push
mov
pop
mov
ret
push
mov
clc
lock
jne
jne
mov
faddl
jne
cmp
pop
mov
push
inc
lea
inc
inc
int
inc
cld
jo
inc
xchg
mov
mov
or
inc
inc
mov
cld
jmp
mov
mov
rclb
iret
inc
leave
decl
mov
mov
mov
push
nop
incl
push
leave
iret
add
push
jmp
inc
push
mov
in
push
sbb
add
mov
cmp
jne
push
pop
push
mov
or
add
sub
int3
jne
add
sbb
mov
lea
push
enter
testl
enter
negl
or
inc
loope
sub
inc
loope
add
push
push
imul
adcl
add
lea
mov
cmp
jne
mov
in
add
out
inc
aas
jmp
lock
and
mov
call
push
add
ud0
hlt
add
cmp
flds
out
call
cmp
shl
pop
fisttpll
push
add
add
push
add
sub
jne
lods
mov
dec
out
into
push
loopne
shrb
xorl
roll
mov
cmpl
mov
push
push
push
sub
push
adc
insl
mov
add
inc
mov
pop
addl
add
add
roll
cli
push
pop
lret
add
decb
sub
and
dec
inc
shll
add
pop
add
pop
dec
jmp
and
push
out
jmp
jmp
mov
decb
add
pop
icebp
mov
insb
adc
mov
or
mov
cld
jge
aas
and
adc
mov
and
dec
add
add
fadds
stc
enter
sbb
sbb
in
in
add
jne
cmp
jb
jmp
mov
add
add
jb
pop
faddl
or
inc
or
xlat
dec
push
add
leave
roll
add
mov
int3
jmp
mov
jne
mov
call
pop
add
pop
or
push
mov
int3
add
jae
int
enter
add
mov
push
pop
add
push
lea
mov
jb
mov
push
add
add
add
int3
jne
movsbl
add
add
mov
add
add
mov
sub
jb
add
jge
add
addl
jne
je
mov
rorb
orl
mov
mov
fadds
inc
pop
lea
push
out
add
add
mov
jb
add
push
call
add
jae
icebp
inc
mov
int3
out
loopne
sub
push
pop
push
jl
add
xor
mov
rcrb
rorl
inc
shr
orl
push
pop
add
jmp
mov
fdivrl
push
pop
call
mov
in
rolb
call
pop
enter
repz
xorl
je
or
jne
jmp
pushl
push
pop
cmpl
jge
mov
sub
pop
inc
mov
sub
lods
add
enter
repz
stc
jge
jnp
call
fadd
dec
insb
stc
cmp
push
mov
jne
mov
mov
add
sub
and
cmp
sbb
pop
call
fsubr
sti
add
add
add
roll
mov
clc
jne
mov
loopne
loopne
lods
int3
inc
mov
add
sub
shrb
add
call
add
dec
insl
in
lea
inc
inc
sub
orl
and
rorl
or
mov
stos
adc
inc
add
jne
mov
cmp
sub
sar
ljmp
sub
mov
mov
and
jne
sub
sbb
dec
push
add
ret
mov
leave
sub
ret
pop
push
rolb
addl
jb
ret
in
jecxz
push
xchg
jne
cmp
jne
mov
rorl
mov
pop
nop
mov
les
add
inc
mov
mov
cmp
or
inc
inc
xor
cld
add
add
add
sbb
dec
je
mov
add
and
jae
mov
incl
push
shr
in
push
add
add
inc
mov
add
push
cmovne
xor
push
pop
xor
pushf
add
rcr
inc
add
add
out
inc
inc
sub
dec
and
jo
leave
add
lea
ret
mov
xor
mov
sbb
stc
mov
ss
add
add
add
add
movb
or
dec
lea
or
movsl
fiadds
jae
or
in
pushf
inc
xor
pop
inc
shl
inc
sub
inc
add
add
loopne
inc
ret
inc
mov
leave
and
add
mov
sbb
sbb
stc
test
lea
mov
dec
sarb
add
inc
ljmp
or
jge
mov
clc
leave
inc
add
rdpmc
sbb
mov
cmovne
jmp
inc
mov
sbb
mov
add
out
add
sub
add
jo
leave
movl
inc
add
inc
out
stc
int3
jb
xor
or
dec
mov
movb
loopne
inc
lea
push
movb
xor
lea
inc
jae
ficomps
addb
test
incl
inc
add
test
jne
orl
jmp
inc
jne
mov
mov
shlb
push
mov
gs
add
inc
dec
into
mov
jl
add
inc
mov
add
add
inc
or
inc
in
fsub
inc
add
add
call
pop
test
dec
jmp
pushl
loopne
movl
push
incl
mov
cwtl
movl
sbb
rorb
inc
rorb
test
add
add
push
add
mov
incw
add
xor
push
cli
popw
push
xchg
sbb
test
callw
adcl
mov
mov
push
fsubl
dec
inc
mov
lret
fistl
ljmp
jmp
in
lock
mov
xor
add
stos
data16
incl
data16
inc
shlb
add
addl
mov
add
push
lea
addb
jge
mov
rol
mov
rorb
orb
test
push
mov
orb
push
xor
aam
test
cmp
data16
dec
test
xor
lahf
mov
mov
data16
sbb
dec
mov
mov
add
jne
test
jne
sti
sbb
cld
jmp
inc
mov
data16
push
incl
test
sbb
lock
pushl
xorb
add
xor
movw
mov
sbb
mov
add
add
xor
inc
add
add
inc
jmp
addl
or
jmp
push
in
test
xor
mov
mov
push
add
decl
add
decl
movsl
add
add
push
xor
xor
mov
push
push
jne
mov
sbb
jne
incl
add
add
mov
sbb
leave
test
jne
call
xor
mov
enter
mov
mov
sbb
sbb
mov
inc
decl
add
xchg
ret
add
add
mov
lea
add
mov
inc
rdpmc
jne
add
inc
call
add
orb
ret
incl
add
cmp
pushl
add
test
je
mov
sbb
test
js
add
sub
mov
add
dec
push
mov
mov
mov
cld
or
dec
incl
push
add
mov
orl
add
push
xor
inc
mov
push
incl
inc
add
addb
mov
lea
je
decl
call
mov
hlt
call
mov
cwtl
mov
mov
addl
mov
inc
jmp
ljmp
mov
and
pushl
lcall
add
enter
add
adc
add
mov
xor
jmp
mov
in
inc
or
decl
jne
mov
mov
lock
xchg
jmp
adc
inc
mov
push
sub
push
test
inc
dec
mov
movl
add
add
mov
push
roll
bound
xor
sub
push
lea
jne
incl
jnp
mov
fs
sbb
out
or
ret
inc
decl
test
clc
lcall
or
inc
dec
incl
add
call
add
push
adc
mov
mov
addl
incl
inc
stos
mov
add
mov
cmp
movsb
mov
sbb
addb
call
xor
pop
inc
xor
pushl
mov
pushl
mov
sub
add
mov
mov
ret
mov
ret
mov
add
mov
xor
sar
test
inc
add
testb
push
add
add
add
add
add
mov
mov
sbb
jne
mov
xorb
add
cld
add
mov
cld
add
lret
add
sbb
dec
or
dec
sbb
inc
dec
mov
sbb
nop
scas
add
add
mov
add
mov
cmp
xor
gs
je
push
sarb
mov
push
cmp
add
dec
mov
in
adc
pop
inc
leave
or
gs
add
into
in
enter
push
xorl
or
jnp
test
add
mov
ltr
decl
clc
out
add
cmp
jge
jb
je
pop
push
mov
in
roll
orl
cmpl
hlt
mov
push
jns
lock
ror
test
dec
rcpps
mov
inc
test
je
mov
adcl
and
jp
rcpps
add
sbb
add
je
cmp
js
add
jns
vmread
add
adc
jge
mov
add
or
push
push
mov
add
pop
add
mov
inc
pop
xorl
add
push
clc
mov
jp
add
divl
test
je
mov
or
decb
jbe
mov
add
cmp
add
je
mov
mov
hlt
orb
jb
jmp
xor
pop
pop
pop
ret
ret
mov
xorl
pushf
xor
wrmsr
test
dec
ret
mov
pop
dec
jne
xor
inc
dec
jbe
inc
pop
add
push
dec
push
mov
and
jo
mov
sbb
mov
nop
or
jne
cmp
xor
add
cmp
js
jae
xor
jmp
mov
fdecstp
test
add
add
mov
cmp
adc
jge
mov
jl
clc
dec
jge
mov
jb
mov
mov
xor
add
mov
inc
pop
jge
cmp
mov
imul
fimuls
fists
in
jne
mov
imul
fdivrp
filds
test
inc
mov
mov
adc
rcll
mov
fiadds
mov
mov
xor
mov
xlat
into
ffreep
lret
iret
dec
inc
mov
fmull
dec
jnp
add
mov
inc
dec
lea
add
jb
add
inc
imul
cld
clc
mov
incl
or
sbb
lret
add
dec
add
enter
inc
pop
decl
add
add
mov
xor
or
pop
cltd
push
clc
mov
xor
add
cmp
hlt
cmp
or
mov
loopne
mov
cld
pushf
pop
pushf
mov
lock
adc
orb
xor
dec
mov
iret
inc
jne
mov
cmp
je
add
or
dec
inc
mov
cld
add
cmp
mov
or
mov
or
inc
xor
pushf
call
jne
mov
fcomps
add
incl
cld
add
mov
cld
inc
fidivrs
fbstp
mov
adc
fadd
add
mov
inc
mov
loopne
sbb
sbb
pushf
add
mov
cwtl
inc
inc
jne
mov
clc
add
mov
or
inc
lea
add
inc
rorl
add
shufps
jmp
xor
hlt
mov
fadds
xor
add
cmp
pmuludq
jmp
mov
or
inc
mov
jne
mov
clc
add
xor
jne
pushl
add
mov
cld
add
xor
mov
adc
sub
lea
add
jb
add
inc
add
inc
mov
or
mov
in
scas
inc
mov
in
add
mov
dec
mov
mov
cld
push
dec
add
mov
in
cmp
mov
mov
mov
xor
cmpl
xor
jmp
add
xor
add
cmp
mov
mov
adc
jmp
mov
cld
mov
push
jne
dec
or
push
inc
in
add
or
dec
cld
mov
xorl
pushf
decl
mov
mov
xor
mov
inc
mov
mov
call
add
call
push
xor
pmulhuw
test
mov
mov
xor
xor
xor
add
inc
mov
movl
sub
lock
mov
mov
or
ja
mov
cld
cli
mov
cmp
bswap
mov
mov
clc
repnz
push
xor
xor
pop
jmp
mov
xor
lea
xor
pushf
out
neg
insl
test
clc
pop
inc
or
xor
add
jne
mov
in
push
xor
add
cmp
add
mov
mov
add
mov
mov
pushf
pushf
xor
jne
mov
icebp
icebp
shl
mov
pop
jne
mov
in
jmp
add
mov
or
inc
jne
mov
ret
or
jge
sub
xor
add
mov
clc
negl
xor
cmp
repz
xor
add
mov
mov
cld
lock
test
clc
add
fdivrp
test
jnp
add
jae
sub
shll
leave
call
in
in
add
mov
in
test
mov
xor
pushf
jnp
xor
push
loopne
jne
mov
add
xor
mov
cld
jb
add
jne
mov
jge
mov
lock
xor
mov
lock
jge
xor
dec
mov
loopne
jge
add
icebp
add
dec
hlt
xor
mov
in
jge
mov
dec
pop
xor
inc
hlt
xor
mov
repnz
cmp
test
fistps
inc
mov
add
inc
test
add
add
ret
jnp
inc
inc
xor
fdivl
test
push
add
cmp
setl
mov
call
or
inc
mov
and
lock
movl
mov
clc
xor
mov
inc
mov
mov
mov
mov
hlt
inc
rorl
mov
push
mov
in
jne
mov
addl
clc
mov
add
rolw
mov
jne
incl
inc
push
test
sub
add
and
add
mov
and
adc
inc
inc
push
add
add
enter
mov
add
add
str
lea
sbb
dec
cmp
inc
push
mov
push
add
mov
inc
add
add
mov
loopne
dec
mov
cld
push
xchg
add
add
or
dec
loopne
xchg
push
add
dec
jmp
mov
sbb
inc
xor
add
push
divl
and
add
jno
incl
inc
push
push
mov
mov
push
inc
enter
push
call
pop
push
mov
mov
push
jo
incl
or
call
fmull
mov
mov
adc
dec
xor
mov
mov
mov
push
lret
movb
inc
movntps
lret
into
dec
lret
mov
mov
fdivl
mov
push
mov
sbb
dec
sarl
push
jne
mov
lea
call
sbb
add
push
mov
push
mov
test
xadd
pop
add
mov
or
push
add
add
and
call
add
mov
add
xor
add
inc
je
push
cli
dec
mov
or
inc
add
data16
subl
add
add
enter
int3
loopne
rolb
lea
data16
add
sbb
inc
lldt
xor
sub
add
ror
dec
inc
cmp
cld
or
into
out
lret
dec
mov
loop
cmp
inc
daa
loop
out
add
add
push
inc
xor
add
push
push
inc
in
push
inc
sbb
rorb
addb
ljmp
xor
mov
fmuls
add
lea
add
popl
add
push
incw
mov
add
xor
test
inc
mov
add
or
or
inc
mov
jne
mov
add
add
adc
adc
push
mov
mov
inc
mov
or
push
jne
call
inc
sarb
out
add
add
and
fs
incl
jo
leave
scas
inc
add
orb
call
shr
xchg
add
add
dec
and
push
decl
mov
mov
lea
mov
add
mov
push
shlb
inc
in
jno
push
mov
mov
je
mov
sbb
popl
add
add
adc
jmp
sub
jne
mov
in
popl
push
incl
adc
add
call
and
and
inc
test
sldt
xor
pushf
jmp
mov
or
inc
call
mov
loopne
inc
add
mov
add
add
cmp
test
sbbl
jne
call
leave
rcrb
add
add
add
inc
mov
fcom
add
lea
pushl
call
mov
fstps
push
pop
mov
addl
mov
xor
xor
pop
or
inc
push
in
or
movsl
xbegin
clc
adc
divb
or
test
jno
add
adc
xchg
test
clc
data16
orl
rolb
mov
mov
push
add
push
jge
add
jne
mov
jmp
xor
pop
cvtdq2ps
ret
mov
xor
add
push
rdpmc
out
add
mov
ret
sbb
cmp
or
or
pop
inc
add
add
invd
jge
mov
cli
xor
mov
ret
mov
sub
inc
xor
pushf
inc
mov
hlt
test
mov
xor
dec
or
jne
mov
call
inc
mov
add
add
inc
mov
addl
inc
mov
lock
jge
mov
cli
xor
add
test
add
cmp
xadd
test
mov
xor
add
pop
loopne
inc
clc
xor
add
data16
mov
hlt
xor
data16
data16
cmp
ja
psubq
ltr
add
add
data16
mov
jge
data16
data16
mov
fdivl
data16
mov
mov
pop
or
clc
mov
lock
jge
invd
pop
add
cmp
data16
mov
pop
fbstp
test
add
add
jge
data16
pop
stc
bsf
mov
in
test
mov
call
ds
add
mov
call
add
mov
jnp
mov
mov
call
mov
data16
xorl
fisttps
cld
jne
xor
mov
sti
repnz
data16
push
xor
mov
pushf
data16
mov
mov
fisttps
or
mov
hlt
mov
add
dec
or
mov
or
mov
fdivrl
xor
pop
lock
lea
icebp
jb
add
jge
mov
fsubr
pop
mov
in
rcrl
jb
add
jge
mov
in
pop
data16
cmp
mov
fdivrl
cmp
mov
mov
lock
mov
or
clc
cmp
je
push
loopne
dec
mov
icebp
mov
pcmpgtd
add
jmp
mov
lock
rorl
or
jb
add
loopne
jne
data16
mov
data16
add
data16
retw
ret
lret
enterw
pop
jne
mov
call
xor
lea
repnz
add
xor
in
xor
movl
clc
add
pop
pushf
pop
call
mov
push
pop
mov
push
inc
add
add
into
fs
mov
ret
add
add
add
ds
add
into
ret
pop
adc
add
add
jne
lea
mov
sarl
test
mov
push
xorb
mov
xor
cmp
pop
mov
je
xor
mov
cmp
pop
cmp
jne
mov
cld
push
pop
inc
stc
test
clc
test
cmp
fs
or
add
add
push
lret
add
clc
add
dec
mov
push
add
xor
cmp
je
mov
push
lea
push
cmp
mov
add
sub
add
mov
jne
mov
xor
mov
push
cmp
jne
sbbl
clc
inc
pop
sti
add
cld
xor
mov
roll
mov
inc
in
add
mov
mov
push
mov
test
xor
pushf
sub
inc
sub
mov
inc
add
or
cmp
mov
cmp
je
push
dec
str
cmp
xor
mov
add
data16
push
add
jne
movl
clc
xlat
inc
mov
push
pushf
in
add
add
add
add
add
lret
lock
clc
inc
lret
cmp
ss
pushf
test
je
xor
rorb
push
add
jb
add
dec
mov
push
push
adcl
xor
mov
scas
ret
jns
mov
dec
or
ret
lock
mov
or
mov
xorl
mov
adc
iret
inc
movl
incb
ret
adc
clc
dec
fisttps
add
ret
lea
add
xor
pushf
add
add
inc
test
xor
push
pushf
push
xor
inc
cmp
jbe
mov
or
inc
test
xor
in
hlt
push
push
push
push
mov
pushf
pushf
xor
mov
or
mov
clc
jb
add
orl
addl
mov
or
inc
dec
mov
orw
xor
mov
mov
mov
mov
inc
dec
add
add
mov
clc
or
mov
clc
popf
incl
ret
adc
mov
hlt
test
clc
or
xor
pushf
jb
add
inc
daa
inc
inc
xor
dec
pushf
add
clc
cmp
or
add
xor
or
lea
or
enter
mov
cld
dec
push
sub
add
or
add
or
add
mov
inc
mov
cmp
xbegin
clc
or
xor
adc
lea
add
inc
add
add
je
push
or
dec
std
mov
mov
mov
or
inc
clc
mov
hlt
call
push
or
push
xor
mov
xor
pushf
inc
mov
or
add
inc
mov
or
inc
push
jmp
mov
mov
jne
jmp
mov
clc
lret
push
mov
mov
sub
decl
or
pop
ds
pushl
mov
mov
jmp
leave
jne
call
in
dec
add
add
inc
cmp
je
mov
or
add
or
adc
enter
rolb
mov
or
rorb
jmp
push
mov
cld
inc
inc
orl
push
push
mov
add
test
mov
adc
mov
mov
lock
fcoms
mov
push
enter
cmp
add
mov
call
cmp
jmp
push
call
mov
cld
or
call
add
xor
jne
cmp
jne
mov
or
pop
into
je
mov
or
mov
mov
mov
or
sar
xor
xor
pop
adc
ret
cld
inc
mov
cld
mov
push
pop
or
xorps
test
add
adc
addl
jmp
ror
inc
leave
xor
and
add
xor
xorl
mov
pcmpgtw
add
leave
mov
push
dec
mov
lea
xor
sysret
dec
rorb
pushw
jne
ud0
mov
lods
add
data16
iret
and
cli
inc
cmp
add
inc
pop
lea
mov
add
mov
mov
add
inc
data16
clc
int3
cmp
je
push
pop
xchg
data16
lea
jb
jmp
call
clc
xchg
mov
or
lea
push
inc
jge
mov
fdivs
incl
xor
xchg
ret
xor
cmp
data16
rolb
add
dec
xchg
push
jmp
push
add
add
mov
clc
dec
xchg
cmp
jne
xor
jmp
add
jne
call
clc
xchg
sti
add
add
xor
pop
mov
jmp
mov
cmp
cmp
lea
jle
jae
mov
lcall
inc
push
lea
mov
int3
push
xchg
add
add
inc
add
cld
mov
aam
xchg
mov
testb
mov
hlt
add
mov
decl
incl
mov
call
je
js
lock
mov
mov
sbb
clc
add
mov
rorb
dec
xchg
mov
in
jge
cmp
clc
pop
fistl
clc
add
mov
mov
mov
adc
add
adc
pop
sbbl
ret
cmp
mov
cld
add
add
add
sub
or
add
mov
push
push
clc
addl
out
add
jmp
cmp
jmp
je
mov
inc
add
add
add
pop
pop
push
inc
in
pop
in
cmp
xor
add
push
mov
in
dec
push
test
add
leave
inc
test
add
add
dec
push
mov
hlt
push
dec
leave
mov
clc
cmovge
mov
clc
popl
push
add
push
xor
cld
add
add
pushfw
add
add
mov
cmp
jne
xor
jmp
add
mov
or
mov
mov
mov
or
shl
icebp
addb
or
or
stc
shll
xor
inc
xchg
add
add
mov
test
sub
jmp
mov
lock
lea
mov
or
leave
add
dec
dec
test
paddb
add
dec
mov
mov
or
dec
xor
mov
adc
mov
call
mov
push
clc
or
push
lret
mov
mov
xor
cmp
lsl
call
or
dec
or
inc
xor
in
add
inc
pop
xor
testl
dec
adc
inc
xor
sub
test
clc
inc
add
hlt
leave
test
clc
inc
push
aaa
inc
pop
rorl
orb
mov
push
clc
ret
xor
xor
js
dec
push
mov
lock
lret
jne
mov
enter
lret
into
out
dec
dec
jmp
xor
xor
mov
sub
add
or
dec
mov
xor
jb
add
dec
pop
mov
cld
mov
call
stc
add
pop
leave
add
in
mov
xor
movl
mov
xor
pushf
inc
cmp
pushf
xchg
mov
ljmp
push
push
push
push
push
xor
mov
add
mov
clc
lret
cmp
pushf
mov
clc
cld
jne
xor
xor
or
add
hlt
dec
dec
je
xor
xor
add
add
rol
mov
in
inc
enter
icebp
mov
clc
lock
enter
lret
inc
jne
mov
cld
dec
enter
pushf
sti
xor
mov
mov
xor
xor
mov
mov
push
shr
in
cmp
add
pushf
mov
call
xor
pushf
popa
push
dec
inc
mov
clc
pushf
into
mov
in
call
pop
or
or
or
push
inc
cmpxchg8b
leave
loopne
test
mov
rcll
xor
add
and
mov
leave
sti
inc
decl
mov
clc
dec
iret
xor
jb
add
inc
mov
xabort
loopne
ljmp
mov
clc
lock
dec
mov
loopne
incl
mov
hlt
jne
mov
in
dec
or
jb
add
xor
add
mov
subl
mov
xor
pushf
mov
clc
add
mov
adc
inc
mov
mov
loopne
inc
mov
mov
nop
roll
mov
mov
dec
push
mov
xor
mov
mov
in
into
inc
iret
xor
add
mov
dec
mov
mov
mov
mov
xor
mov
clc
enter
mov
lock
mov
cmp
rol
enter
inc
adc
inc
clc
xor
add
mov
roll
add
push
mov
fsubr
inc
mov
adc
add
inc
test
xor
fmuls
test
cld
or
dec
ret
push
inc
dec
mov
mov
push
jne
mov
call
mov
mov
clc
mov
xor
adcl
inc
push
mov
clc
incl
mov
clc
rolb
je
mov
jne
lea
mulb
decl
fadds
inc
jmp
mov
roll
mov
lock
dec
ret
mov
mov
mov
fadd
enter
inc
cld
mov
xor
add
sub
xor
pushf
add
or
jne
clc
mov
call
jmp
mov
xor
xor
enter
clc
inc
inc
pushl
in
pushf
jne
mov
clc
dec
out
dec
mov
lea
cmp
lea
mov
cld
iret
mov
jmp
test
je
mov
fdivr
movl
lock
inc
lock
lret
imul
testl
dec
mov
fmuls
fmuls
enter
inc
dec
xor
add
mov
inc
inc
push
mov
lock
mov
fadds
rol
test
dec
push
decl
push
mov
add
cmp
add
loopne
add
dec
xor
pushf
mov
cld
iret
test
mov
in
dec
add
add
dec
mov
fmull
add
testl
test
add
add
mov
cld
mov
hlt
mov
add
cmp
add
mov
mov
call
dec
add
cmp
cld
iret
mov
dec
push
lea
mov
call
iret
inc
mov
or
or
xor
cmp
je
mov
mov
xor
mov
mov
xor
bswap
rorb
add
mov
xor
or
mov
xor
bswap
rorb
add
add
xor
mov
add
dec
dec
xor
mov
lock
iret
rorl
inc
mov
iret
add
xor
mov
or
push
shll
cmp
fmull
test
dec
dec
xor
or
dec
enter
add
mov
xor
or
mov
mov
xor
mov
cmp
jne
lea
sti
or
cmp
je
mov
ret
or
call
add
mov
cld
mov
xor
add
dec
jnp
mov
xor
add
mov
mov
xor
rorl
jb
add
ja
sbb
cwtl
enter
inc
decl
fadds
rorl
inc
xor
mov
or
inc
rcll
mov
xor
jb
add
shll
mov
xor
add
repz
inc
mov
xor
inc
mov
mov
jne
mov
test
inc
mov
mov
lea
xor
add
mov
lods
dec
inc
mov
lret
mov
adc
std
ret
ljmp
hlt
push
xor
enter
inc
add
cld
test
pushf
inc
xor
pop
push
incl
in
mov
push
inc
cmpsl
mov
or
add
add
add
icebp
je
mov
cld
rol
ret
add
lea
cwtl
jne
clc
or
incl
cmp
incl
lcall
or
push
mov
test
inc
mov
imul
dec
mov
push
dec
push
xor
add
push
incl
lods
inc
inc
mov
xchg
or
call
adc
orb
inc
inc
add
mov
call
push
push
dec
jo
push
dec
mov
cmp
cmovne
call
mov
lcall
leave
inc
adc
jne
call
dec
inc
mov
add
mov
push
or
dec
xorl
cmp
mov
pop
adc
ret
mov
clc
mov
pop
mov
mov
push
push
lock
mov
adc
or
push
ret
xor
mov
mov
cmpb
add
cmp
mov
xchg
dec
add
mov
add
dec
into
mov
mov
das
add
add
mov
and
mov
and
xor
lea
xor
add
xor
orl
xor
pushf
mov
or
jne
call
adc
mov
adc
movl
pop
dec
and
call
in
call
adc
pushf
pop
mov
and
push
add
mov
test
decl
and
cli
and
or
sbb
adc
jmp
mov
adc
dec
adc
mov
and
xor
add
pcmpeqb
jmp
decl
je
mov
pop
adc
pushf
mov
jge
decl
