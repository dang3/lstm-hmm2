push
mov
sub
mov
movzbl
mov
mov
movl
movl
cmp
movl
jne
or
mov
adc
push
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
call
cmpl
jne
mov
inc
mov
jmp
add
mov
xor
sub
mov
movl
cmpl
je
cmpl
jne
push
pushl
push
pushl
call
cmpl
jne
xor
xor
dec
mov
mov
dec
mov
jmp
andl
mov
inc
mov
cmpl
jne
push
pushl
call
cmpl
jne
xor
add
inc
mov
cmpl
jb
movl
cmpl
je
cmpl
jne
push
pushl
push
push
push
push
pushl
pushl
call
xor
or
dec
mov
jmp
add
push
xor
or
adc
mov
mov
add
movl
cmpl
je
cmpl
jne
pushl
push
push
call
xor
or
dec
mov
jmp
movzwl
not
and
mov
movl
cmpl
je
cmpl
jne
push
push
pushl
pushl
push
call
mov
dec
mov
jmp
mov
mov
mov
push
mov
movzwl
mov
mov
mov
movl
movl
mov
jmp
sbbb
cltd
js
mov
lds
and
jo
jo
jle
jo
xlat
cmp
rol
pop
push
add
jae
rdpmc
cmpps
adc
mov
add
mov
sbb
lods
sarb
or
sahf
jp
inc
lods
push
sub
mov
stos
js
roll
jmp
mov
dec
fcomps
pop
test
sub
mov
pusha
nop
mov
and
jmp
out
repnz
xchg
xor
jbe
xlat
and
add
adc
xor
or
fldl
xor
pop
push
or
pop
fstps
jno
mov
ja
sbb
xor
into
cmpsb
rorl
lea
test
pop
jmp
jge
mov
in
adc
inc
push
outsl
sbb
scas
or
out
arpl
imul
push
pop
shr
fsub
xchg
arpl
fs
cmp
xchg
push
repnz
push
add
push
rolb
test
xor
hlt
std
pop
sti
xchg
mov
fidivs
push
ret
rclb
push
mov
mov
loopne
inc
jmp
dec
lcall
sahf
test
mov
or
cld
lcall
fcomi
and
hlt
xchg
sbb
out
into
lret
pop
roll
add
scas
jne
shrl
dec
sub
pop
xchg
orl
inc
dec
test
mov
mov
inc
daa
das
mov
fs
jecxz
sti
lods
in
repz
inc
mov
int3
adc
or
out
cmc
xor
jo
inc
jge
iret
fcoms
subb
lock
arpl
cmpsl
aam
sbb
stc
repnz
lret
stc
nop
andl
insb
dec
xor
std
cmp
sbb
out
push
adc
add
test
pop
fs
fisttpll
fbld
cld
jmp
clc
icebp
mov
icebp
ficompl
cltd
js
jle
jo
jle
jo
fcomps
mov
lcall
shrl
jno
cmp
push
mov
in
inc
or
lret
test
push
fadds
cmp
aaa
jle
lret
inc
mov
xchg
ja
push
mov
les
inc
imul
pop
pop
mov
aaa
nop
cld
cmpsl
bound
test
shll
pop
add
ss
pushf
adc
xchg
add
pop
fcmovnu
outsb
out
fldl
sbb
pop
dec
decb
movsb
jle
push
hlt
pop
adc
mov
shlb
and
xchg
xor
fs
dec
add
aam
adcb
mov
lods
sub
shr
push
clc
test
cmp
ds
cmpsl
sbb
lds
sbb
push
jne
mov
rolb
or
fisubrl
ljmp
xchg
int
insl
loop
mov
fs
xor
scas
xor
xchg
xor
lret
aas
arpl
cld
inc
mov
jo
and
sti
push
lods
xorl
leave
pop
pusha
in
xchg
pop
stos
sub
xchg
roll
dec
int3
or
xor
cmp
sub
test
mov
xor
aam
lods
or
jo
in
nop
mov
push
dec
dec
loop
mov
and
inc
fdivrl
or
outsb
push
and
test
jp
cmp
xor
int3
add
jmp
ss
aam
adcb
sbb
ds
cwtl
push
lock
lds
jne
stos
test
sbb
jns
mov
mov
notb
addl
mov
push
lea
mov
mov
mov
lea
jmp
dec
iret
lods
dec
lods
imul
cwtl
sub
dec
jo
jo
jo
jo
sbb
or
sub
out
xchg
jb
lods
push
add
loop
mov
pop
outsb
dec
pop
add
xchg
cmpsb
pop
cli
push
mov
sub
pop
pop
mov
jbe
cmp
roll
push
and
sbb
jno
mov
je
cwtl
rcl
push
sub
dec
cmp
or
dec
xchg
add
cmp
sub
xor
mov
or
add
mov
lcall
or
stc
or
aaa
int
out
pop
bound
int3
lea
cld
pop
icebp
outsl
push
xor
aad
lahf
adc
fs
loopne
aad
mull
xor
xchg
addr16
hlt
pop
xor
gs
inc
cltd
aad
int
rorl
push
pop
jae
or
insl
test
notl
je
mov
hlt
cli
cmp
push
div
test
lds
jg
mov
fsub
lret
sbb
fstpt
sub
popf
int3
lds
sbb
jb
or
cmp
data16
jecxz
and
jg
or
or
or
pop
outsl
lods
fucomip
xchg
imul
fldl2t
or
jne
lea
mov
mov
mov
fs
faddl
dec
sub
mov
js
int3
inc
hlt
icebp
outsl
sub
mov
out
shlb
idiv
cmc
mov
in
or
ds
cmp
fcmovnb
popf
fmull
jne
sub
shlb
mov
dec
dec
les
push
mov
dec
nop
sub
insl
popa
cmpsl
sahf
push
sub
push
fldl
js
hlt
inc
bound
insl
repz
cmp
dec
add
pushf
sbb
mov
mov
movl
mov
mov
xor
xor
xor
add
add
div
mov
cmp
je
movl
lea
mov
jmp
int3
sub
push
mov
cmp
je
jp
jo
jle
jo
loopne
mov
addr16
add
dec
fs
mov
xchg
mov
and
ja
icebp
subb
jo
adc
test
mov
cld
dec
mov
xor
mov
lret
adc
push
mov
test
cmp
pop
or
add
cmp
andb
jnp
add
push
dec
jg
push
lods
outsb
cmp
fidivl
sbb
push
inc
out
inc
mov
pop
xlat
add
push
push
pop
sahf
leave
jb
inc
cwtl
jmp
inc
inc
insb
or
inc
pop
xor
notb
insl
sti
imul
repnz
enter
sub
shl
das
push
fs
xchg
xchg
mov
addr16
aaa
icebp
faddl
or
mov
rcrl
inc
sub
mov
dec
and
mov
fisubl
add
das
test
fdivrs
shlb
and
mov
imul
mov
pushf
xor
rcrb
cmp
xor
insb
pushf
lock
jae
pop
sbb
into
fwait
lods
sbb
pop
mov
int
loopne
dec
mov
xlat
push
enter
xor
cld
and
and
mov
lahf
test
fwait
xchg
fcompl
inc
jnp
xchg
push
out
or
imul
pop
ret
ja
mov
add
xor
sbbb
lret
roll
enter
adcl
push
jle
in
and
loope
pop
out
pop
mov
aaa
add
mov
and
push
out
out
enter
and
cmp
bound
lcall
jne
mov
hlt
pop
scas
and
xchg
sti
xchg
cwtl
int
jb
jns
mov
imul
mov
mov
cmp
je
mov
orl
jmp
mov
jmp
popa
ja
add
xorl
adc
mov
sub
js
jo
jle
jo
aas
pop
push
add
pusha
decb
jmp
lods
pop
jg
add
xor
xchg
sub
notl
fstps
mov
mov
mov
test
lea
push
rorb
test
ror
scas
inc
or
mov
xchg
dec
push
fsubs
icebp
pop
xor
sbb
mov
jl
sub
mov
pop
sub
mov
cmp
shll
aas
out
lea
push
cmpsl
jecxz
mov
fpatan
pop
cld
jl
daa
syscall
jb
dec
pop
in
into
fdivs
sti
sub
push
pusha
add
xchg
jno
popf
dec
ds
dec
sbb
lahf
cmc
insl
cmp
mov
clc
add
dec
dec
push
scas
outsb
add
std
out
cltd
out
mov
pop
das
push
mov
push
cmp
sbb
mov
jle
faddl
adc
aas
ret
mov
pop
lock
leave
fs
xchg
dec
mov
fdivs
xchg
xchg
lods
xor
dec
out
and
popf
sarl
ret
mov
jg
ds
loope
mov
mov
sahf
or
or
push
aas
mov
sub
gs
inc
mov
adc
nop
add
pop
decl
insl
mov
inc
xor
int
in
add
insb
add
mov
push
push
ret
pop
pop
push
xchg
cli
dec
mov
adc
pusha
adc
ret
or
iret
shlb
sbb
es
inc
stc
jl
jg
test
lret
imul
push
sti
fildl
cmpsb
xor
std
cmp
add
push
loopne
xchg
sbb
xchg
fsubl
lods
arpl
sub
bound
sarb
in
jl
adc
sbb
jp
push
push
inc
sub
fsubrs
xchg
call
insb
je
mov
andl
jmp
mov
mov
or
cmp
je
mov
xorl
jmp
mov
mov
xor
jmp
cld
test
jb
stos
inc
inc
cmp
test
jo
jo
jo
jo
mov
sub
adc
jnp
test
cmp
sahf
cmp
pop
inc
dec
push
and
or
rolb
mov
add
cs
std
idiv
push
sbb
inc
outsl
jg
dec
subb
sbb
xor
xchg
imul
xchg
aaa
or
setle
test
frstor
stos
stos
cmpsl
lds
push
and
mov
or
sbb
test
iret
mov
cmc
cmpsb
sbbl
jmp
scas
fwait
mov
and
movsb
pop
xchg
sbb
push
xor
dec
dec
push
push
outsl
cmp
jae
cmp
lahf
iret
sahf
test
fwait
and
out
enter
mov
mov
movsb
sub
jge
jnp
shll
fists
jns
mov
add
inc
add
mov
sbb
daa
push
movsb
out
loopne
xchg
shr
sub
loope
sub
xchg
inc
pop
inc
add
inc
mov
pop
andl
test
pop
pop
push
les
sbb
das
push
clc
jle
cs
test
lret
mov
mov
adc
dec
cld
dec
mov
adc
aad
sar
inc
cmovp
add
out
divb
fsubr
jno
movsb
and
xor
and
ret
pop
sbb
sub
inc
adc
pop
hlt
xchg
adc
dec
xchg
mov
mov
push
sub
lods
das
cwtl
pop
aas
push
outsb
bound
adc
push
push
je
pop
xchg
and
jns
push
out
xor
pop
jo
aas
push
inc
movsl
outsb
add
arpl
mov
lea
adc
sbb
ror
lods
sub
or
lahf
ljmp
movsl
push
outsb
jle
int
clc
lahf
aam
mov
aad
mov
mov
add
cmp
jmp
ret
gs
cmpsl
insb
xor
add
jo
jo
or
fistl
push
fcomp
hlt
mov
lahf
jmp
cmpsl
sbb
int3
mov
arpl
test
cmp
in
stc
je
outsl
stos
xlat
fwait
adc
fisubs
jnp
loop
je
xor
out
scas
loope
adc
loopne
lret
mov
pop
orl
sub
push
lods
das
or
mov
and
or
or
lods
mov
push
jno
or
les
cwtl
arpl
xchg
dec
sbb
call
repnz
jb
arpl
fistl
outsl
lcall
xchg
jmp
pop
sbb
push
xchg
jge
and
or
inc
pusha
xchg
cmpsb
xchg
jne
scas
inc
jns
nop
in
push
adc
mov
pop
push
popf
ss
sbb
enter
cltd
xor
or
jge
sub
insb
sbb
imul
and
sbb
cmpb
ja
mov
sbb
aad
daa
xlat
jnp
mov
cwtl
mov
aam
cwtl
hlt
ljmp
inc
sbb
cmp
pusha
sub
mov
cmc
xchg
int3
xchg
out
mov
push
les
cmpsb
mov
ret
or
push
sbbl
outsl
loopne
mov
pushf
push
pop
das
inc
dec
adc
xor
scas
and
or
add
and
jle
sub
aas
pop
cltd
test
inc
xchg
sub
lcall
into
sbb
gs
ja
jp
inc
or
mov
cwtl
das
arpl
xchg
mov
cmpsl
sub
push
jo
xchg
rcll
daa
gs
cmp
pop
dec
add
adc
sub
jns
in
sub
mov
cmp
adc
add
jbe
mov
cltd
xor
in
fsubrl
xchg
xor
das
test
addl
xor
add
mov
mov
jmp
jp
sbb
cltd
ja
jno
sbb
sub
blci
jo
jo
mov
xchg
sbb
xchg
aas
cmp
sub
jge
cli
pop
lcall
or
mov
dec
fistpl
in
int3
lock
shll
push
fs
xor
mov
push
clc
scas
ss
push
pusha
ret
pusha
movsl
push
fwait
roll
sub
xor
jle
nop
test
movsl
sbb
pop
inc
lea
pop
cmp
out
bound
mov
mov
pop
jecxz
and
sysexit
mov
dec
mov
es
mov
gs
or
movsb
das
sub
push
adc
lds
inc
inc
push
leave
jne
push
outsb
mov
imul
in
mov
aas
ljmp
mov
or
call
rorl
repz
test
orb
mov
das
dec
scas
lret
sbb
loopne
sbb
fidivrs
mov
fmull
movsb
sub
xchg
inc
in
ja
movsl
test
cltd
mov
loopne
imul
js
sbb
leave
test
add
push
sub
ret
mov
cmp
iret
neg
pop
mov
xlat
or
fildll
sbb
xor
sbb
aaa
fidivs
xchg
shll
dec
sahf
les
pop
in
push
aam
ficompl
push
mov
movsb
addr16
inc
negl
aam
leave
pusha
cmp
es
cmp
mov
or
jns
and
sbb
xchg
jnp
jle
mov
dec
push
popf
and
cmp
lock
inc
fldln2
es
icebp
xor
dec
push
and
addb
mov
mov
and
sti
test
xor
cmp
enter
or
bound
imul
es
lods
add
out
push
mov
inc
add
add
ljmp
enter
add
xor
mov
add
movzwl
xor
lea
add
mov
mov
mov
xor
add
imul
sub
mov
jmp
jmp
and
jae
xor
ja
add
jo
jo
mov
in
out
mov
mov
jae
jns
xchg
enter
int3
jae
fdivrs
movsw
pop
outsl
inc
repnz
pop
sti
sbb
sub
sbb
pop
or
pop
xor
lcall
mov
pop
loop
add
add
ja
and
movl
lods
fst
mov
stos
sub
clc
xchg
scas
sub
dec
lds
jbe
push
xor
lods
inc
jno
xor
cltd
loopne
outsb
cmpsb
xor
xchg
inc
adc
jmp
jp
inc
or
xchg
pop
pusha
sub
sub
call
or
dec
inc
push
pop
lcall
pop
in
mov
popa
ficoms
sbb
push
dec
lea
mov
fbstp
mov
or
pop
ljmp
lock
jns
adc
pop
sub
cmp
xor
in
mov
add
or
dec
in
int3
and
dec
cmp
push
cwtl
dec
jg
daa
push
sub
mov
push
add
lea
stos
sub
iret
add
cltd
stos
push
dec
lds
ljmp
and
jnp
mov
xchg
nop
adc
test
pop
xchg
fs
pop
mov
testl
decl
sbb
inc
mov
arpl
je
je
bound
add
inc
sbb
out
sarb
mov
out
mov
mov
iret
bound
out
cmp
add
aaa
fstps
aaa
inc
jnp
push
test
sbbb
jmp
shrl
or
jo
mov
push
dec
xor
test
js
cli
push
test
sub
imul
inc
hlt
mov
xor
cmp
je
mov
addl
jmp
mov
cmpl
jne
mov
xor
add
test
jne
xorl
jmp
pop
pop
jmp
cs
add
popa
push
in
jno
imul
jo
jo
jo
jo
mov
adc
jl
inc
dec
or
mov
mov
mov
xchg
mov
pop
outsl
test
ret
mov
cs
subb
or
bt
int
mov
rcrl
subb
xchg
jbe
jecxz
xchg
pop
in
pop
dec
mov
xor
adc
pop
shlb
daa
and
add
adc
mov
loop
xchg
mov
dec
mov
arpl
out
out
mov
punpckhbw
sbb
push
je
jbe
mov
les
jle,pt
pop
gs
aad
push
xchg
in
xchg
jmp
and
pop
sarl
and
inc
cltd
xchg
fwait
out
or
and
sub
fs
dec
jp
or
out
std
cld
lret
xchg
jecxz
jb
push
jbe
and
xchg
push
negb
and
push
jmp
loope
in
jno
dec
inc
pop
hlt
jo
pushf
stc
jnp
xor
sbb
shl
xchg
or
adc
mov
sub
in
lds
loop
push
push
sbb
je
arpl
fdivrs
jb
push
lods
dec
cmp
xchg
jbe
repz
pop
xor
mov
adc
fnstcw
mov
add
dec
xor
stos
popa
icebp
push
push
cmp
les
xchg
push
jbe
imul
and
ja
sahf
aam
out
pop
mov
jnp
ja
shll
enter
aam
icebp
cs
dec
out
push
jmp
out
pop
sarb
pop
lret
pop
mov
out
and
push
sbb
xchg
cmpsb
fldcw
mov
int3
in
xor
mov
pop
pop
add
xchg
testl
or
add
and
pop
clc
sti
lods
push
inc
arpl
stc
cmpsl
sub
daa
and
adc
pop
leave
ret
push
mov
sub
leave
ret
push
mov
push
or
push
movzwl
sbb
mov
movl
cmpl
je
cmpl
jne
push
push
push
call
mov
dec
mov
jmp
movl
cmpl
je
cmpl
jne
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
movl
mov
mov
mov
xor
push
mov
or
xor
sbb
mov
sbbl
push
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
jmp
mov
add
cmp
je
mov
mov
xor
mov
sub
add
xor
jmp
imul
cmp
jae
jl
dec
mov
jo
jo
mov
imul
mov
sbb
adc
orb
jns
cltd
cmc
scas
sub
scas
jmp
mov
inc
leave
cld
adc
jge
stos
mov
lret
adc
add
stc
dec
cld
out
cltd
popa
inc
jp
fwait
shl
lods
add
sub
lret
mov
outsl
insb
movl
mov
add
push
mov
repz
push
lods
cmp
xor
fnstenv
or
xchg
mov
loope
fiaddl
cli
xor
stos
stc
inc
into
mov
mov
mov
xchg
rcl
cwtl
inc
jmp
fiaddl
lcall
jp
push
std
pop
mov
hlt
inc
lahf
xchg
lods
orb
xchg
ds
push
xchg
jno
clc
jp
mov
sbb
or
cs
pop
and
mov
lahf
int
lahf
movsl
rcrl
jb
pop
fcmovnb
fcmovbe
cmpsb
test
dec
or
sarl
xchg
sub
mov
dec
lahf
and
dec
pushl
jge
dec
xchg
jnp
cmp
sbb
adc
fiadds
shl
sbb
push
mov
decl
inc
add
lods
push
int
clc
icebp
loope
iret
cmp
mov
idivl
jo
nop
sar
xchg
fptan
mov
inc
xchg
call
cld
cltd
dec
pop
rorb
and
or
out
lahf
add
addl
into
lds
jg
cmp
rcll
lea
icebp
and
sub
dec
andb
fidivs
int
mov
ret
jp,pn
push
aam
test
cld
sbb
jnp
sbb
pop
mov
mov
mov
loop
mov
xor
push
mov
mov
and
add
loopne
cs
cltd
cli
dec
xchg
add
fistps
ss
lods
ss
sahf
or
leave
mov
pop
cmp
arpl
cltd
adc
test
add
int3
test
or
and
push
cwtl
icebp
jnp
and
pop
pushf
ljmp
dec
adc
xor
adc
pop
fnsave
fmul
test
mov
jecxz
jae
xor
cld
inc
cltd
iret
push
dec
pop
mov
sbb
xchg
js
icebp
xchg
ss
jnp
pop
pusha
mov
lea
sahf
shll
mov
sbb
jl
cmp
hlt
add
cmp
ja
push
jmp
jmp
mov
ja
push
aas
xchg
out
mov
sub
or
mov
cwtd
xlat
ds
cmp
out
fcmovb
and
outsb
mov
pop
out
shlb
movsl
jecxz
inc
push
cld
rcll
inc
mov
test
adcl
sub
xor
dec
xor
xor
outsb
cmp
mov
push
cmp
sbb
xor
xor
enter
ret
les
rclb
mov
lock
mov
xchg
es
sbb
mov
add
cwtl
jns
pop
inc
xchg
fistl
sbb
int3
fbld
test
out
mov
dec
loop
mov
mov
fistpll
lcall
das
push
clc
jbe
xchg
ret
mov
inc
push
jl
mov
push
test
popa
stos
dec
and
fldl
xor
inc
rcrl
lods
sbb
xchg
rcrl
mov
lcall
jbe
or
add
xchg
sbb
jecxz
xchg
mov
jmp
cltd
roll
mov
xor
into
je
cmpsl
mov
add
pop
clc
pop
xchg
clc
xchg
mov
dec
xor
iret
adc
dec
ss
cmpsl
leave
js
outsl
fsubr
inc
and
mov
addb
inc
popa
les
pop
mov
test
jp
sqrtps
adc
call
movsbl
jnp
cs
sub
scas
nop
frstor
adc
dec
pop
lods
push
test
jns
xor
dec
sub
lret
pop
mov
sbb
in
dec
pop
or
int
xchg
cmp
cmc
enter
in
cltd
pushf
call
sbb
xchg
test
inc
mov
pop
int
xchg
add
inc
mov
jns
cmp
je
push
daa
hlt
cmp
ret
cmc
aam
std
sbb
adc
lods
std
sub
outsb
daa
lock
addr16
add
or
jg
mov
pushf
loopne
mov
lcall
mov
jnp
aad
jno
dec
divb
les
rcr
cmp
jmp
es
mov
aas
push
add
and
out
mov
cmpl
mov
xor
jns
cmc
sbb
int
jbe
lret
or
stos
or
adc
push
lods
adc
fwait
mov
cld
push
clc
cmc
jnp
inc
xchg
loope
or
repnz
adc
test
mov
outsl
test
test
cltd
sbbb
fwait
sub
push
or
xor
test
imul
push
jecxz
dec
mov
cmp
in
xlat
scas
int
fs
mov
add
cld
xor
add
jmp
fistl
loope
lds
add
and
loope
pop
jo
mov
adc
sbb
lds
or
scas
clc
sti
lods
jne
fidivrs
cmp
xor
and
pop
pop
jne
xchg
add
icebp
pop
mov
push
loopne
xchg
stos
cmp
pop
inc
cmp
clc
adc
aaa
lds
bound
imul
sbbl
pop
dec
sub
cmp
test
sbb
aam
push
jae
add
out
mov
xor
hlt
mov
mov
hlt
repz
pop
xchg
data16
or
arpl
enter
imul
fs
lds
dec
and
shr
sbb
out
sbb
mov
jno
cltd
loop
jae
mov
sub
inc
mov
adc
ret
int
xchg
test
mov
and
dec
sub
inc
xchg
inc
pushf
test
je
insl
sbb
ss
lods
je
push
adc
jo
pushf
out
mov
mov
xor
pop
jmp
jl
shrb
or
pop
jge
jnp
lds
imul
test
scas
fcmovnb
lock
jge
xchg
sub
pusha
sbb
mov
push
pop
add
push
sub
and
repnz
push
add
cmovp
adc
cmpsl
loop
inc
je
addl
cmpsl
add
pcmpgtb
in
imul
push
mov
or
test
cmpxchg
pushf
test
shlb
cmc
ljmp
xor
mov
repnz
outsb
flds
les
and
mov
jne
sub
test
test
das
dec
dec
popf
mov
push
andl
stos
mov
cmpl
dec
dec
mov
pop
adc
mov
adc
das
test
movsb
xor
push
cmpl
or
jecxz
inc
ret
sub
mov
pop
mov
subl
aaa
jle
pop
stos
and
push
or
pop
cmpsb
fistpl
sub
mov
cmp
sbb
mov
cmp
loop
imul
aam
sahf
loope
sbb
fists
cmp
jmp
cmc
int
pop
in
mov
aad
orl
roll
les
je
je
sar
push
xchg
jbe
dec
push
je
cmc
ljmp
in
sub
or
push
add
inc
enter
xchg
jb
dec
add
fwait
pop
fldt
mov
hlt
xchg
xlat
pop
gs
inc
fsubrs
mov
imul
mov
xor
add
jmp
jecxz
fcoms
out
icebp
icebp
pop
xchg
aaa
aas
outsb
icebp
and
adc
jo
jle
jo
imul
mov
and
jl
cld
push
push
push
pop
xor
mov
fistpl
cmpsl
jmp
xor
sub
sub
cmp
out
dec
jae
lahf
int3
decl
cmp
jne
in
bound
scas
jbe
aas
pop
stc
stc
test
jecxz
inc
cmp
pusha
jnp
faddl
je
movsb
sbb
inc
daa
inc
xor
std
scas
mov
cltd
mov
mov
jecxz
cmp
or
popa
cld
movsb
data16
add
mov
jge
int3
cli
dec
ljmp
xchg
mov
mov
repz
inc
mov
sahf
mov
cmp
in
movsb
jns
mov
jns
push
add
repz
cli
cmpsl
leave
fstps
jb
shlb
into
fstps
lds
jo
mov
dec
xchg
jl
je
fadd
pop
popa
jp
test
in
jo
cmp
inc
int
xchg
dec
push
jbe
cmp
push
dec
clc
push
repnz
pop
push
sbb
sub
sti
lods
std
jns,pn
mov
rolb
maxps
pop
mov
sub
test
pop
sbb
insl
pop
pop
or
jbe
xor
add
lock
jecxz
arpl
testb
dec
test
imul
repz
repz
xor
xchg
test
cmpsl
aas
sub
imul
call
adc
imul
addr16
shlb
lahf
inc
mov
in
ds
dec
and
outsl
jl
enter
cmp
mov
xor
mov
and
pushf
int
mov
cltd
lods
xchg
mov
les
dec
pop
sbb
cmp
jae
cwtl
push
pop
jecxz
cmp
xchg
dec
add
ret
jbe
pop
pop
cs
ret
adc
shl
lods
outsl
shlb
je
lods
jecxz
frstpm(287
fnstenv
lds
mov
sbb
mov
cli
out
and
and
sub
out
aaa
jnp
das
cmpsl
cli
stos
aam
and
test
sub
mov
push
push
icebp
xchg
lods
or
test
sahf
ljmp
outsl
sub
sbb
mov
outsl
lcall
jp
push
mov
jmp
aaa
sub
movsb
dec
les
aas
repz
mov
mov
pushf
dec
dec
xlat
jnp
pop
fidivs
jns
sub
or
jb
mov
push
cld
pop
push
sahf
xorl
push
arpl
sub
push
lcall
add
cld
xor
lea
mov
xor
mov
sub
add
cmp
jbe
pop
mov
pop
pop
leave
ret
push
mov
sub
movl
cmpl
je
cmpl
jne
push
push
push
call
cmpl
jne
xor
or
dec
mov
mov
dec
mov
jmp
adc
mov
addl
mov
adcl
xor
adc
mov
andl
add
movl
movzwl
mov
orl
movb
not
lea
mov
or
jmp
out
out
jno
in
or
and
adc
cmp
lds
or
inc
loopne
mov
cmc
mov
jns
fistpl
mov
push
sub
sbbl
loop
std
fs
sub
mov
cltd
movl
mov
iret
add
mov
in
outsb
add
into
mov
mov
aad
stos
pop
cld
pop
cmc
push
aas
cmp
jnp
dec
add
push
mov
test
dec
pop
xchg
call
test
and
popa
pop
xchg
cmpsb
imul
cmp
cwtl
negl
aam
in
ficompl
cmp
push
pop
mov
test
pop
push
dec
ja
add
lock
cmp
out
scas
lods
outsl
test
mov
inc
arpl
cmpsl
push
in
mov
data16
push
je
movsb
jae
pop
xchg
or
mov
pop
inc
aam
sub
hlt
fisubs
and
lcall
cmp
inc
nop
psrlq
ss
cmp
mov
in
cltd
fwait
test
jecxz
out
repnz
repnz
pop
jae
ret
shld
xor
adc
cmp
insb
xchg
sbb
push
cmp
cwtl
or
and
icebp
mov
adc
mov
jae
push
test
sub
adc
mov
jp
mov
cld
and
fmulp
jp
lahf
push
inc
dec
dec
daa
add
or
xor
add
mov
arpl
mov
jne
je
dec
ret
dec
or
cmp
sbb
jp
pop
in
iret
push
iret
cmpsb
mov
push
mov
icebp
out
gs
lret
cmp
mov
adc
dec
xorb
mov
xor
insb
pop
stc
jbe
xor
mov
add
je
mov
inc
lret
jae
adc
pusha
xchg
xchg
xchg
stos
xchg
imul
xor
lcall
clc
or
adc
lock
xor
sahf
std
cmp
cltd
push
add
cmp
cs
daa
dec
movsl
out
cmc
scas
in
jg
push
ds
enter
jnp
cwtl
mov
int
xchg
or
jp
jl
out
sbb
incl
ret
xchg
xor
push
jo
stos
out
xor
and
aam
les
pop
xor
cmp
dec
fprem1
pop
mov
ss
shll
iret
pcmpgtw
and
cmc
or
and
pop
pop
ficoms
pusha
pop
cmpsb
pop
xchg
cmp
int
cli
xor
jl
mov
insb
stos
dec
push
aas
xchg
mov
pusha
lahf
jns
push
xor
jae
cwtl
sub
insl
adc
pop
xchg
lds
ret
mov
push
dec
jnp
fcoms
push
je
push
fucomp
add
push
mov
repnz
int3
dec
ret
pushf
not
jbe
lahf
insb
inc
fs
notb
jns
out
mov
lcall
cld
xchg
dec
adc
mov
mov
jmp
inc
decl
mov
imul
add
or
mov
subl
xor
sub
andl
mov
negl
movl
jmp
fists
cltd
mov
addr16
push
and
lds
jo
cmp
mov
push
push
insb
loope
in
jnp
push
pop
fs
cld
add
push
cmp
push
xchg
push
pop
ss
imul
lcall
ret
and
inc
cmp
mov
in
shll
lock
std
sbb
sub
mov
push
and
pop
mov
jge
push
lods
scas
mov
jle
jl
sahf
orl
loopne
das
sbb
adc
xchg
hlt
jnp
incl
into
stc
leave
call
cltd
pcmpeqw
mov
dec
in
aam
push
push
movb
sbb
jnp
pop
dec
mov
outsb
fadds
loope
xchg
nop
loopne
and
nop
adc
out
adc
pusha
sti
and
sub
push
dec
pop
mull
mov
in
lods
mov
mov
ja
stos
stc
fisttpl
iret
xchg
sub
xor
mov
aaa
into
jbe
and
clc
hlt
mov
mov
and
cli
in
and
icebp
or
outsb
sub
fnstcw
pop
aas
fidivs
cmc
movsb
xor
ret
xchg
cmpsl
mov
cmp
and
push
jl
dec
mov
mov
xchg
jl
enter
push
push
hlt
jg
push
mov
sbb
cmpb
push
fs
shl
mov
push
ja
call
add
sub
popw
cmp
movsb
and
movsb
popf
sub
shl
sub
call
addb
or
iret
and
out
lahf
pop
inc
insb
imul
jge
or
and
jbe
mov
aam
adc
jp
iret
dec
mov
in
adc
popa
or
je
and
jg
test
les
adc
inc
shl
das
out
or
sub
push
add
cs
stos
mov
ret
test
cli
inc
hlt
mov
push
cmpsb
sbb
aas
mov
das
add
pop
out
aam
ret
jns
ljmp
mov
arpl
cli
std
or
testb
xchg
fsts
jl
leave
add
rcll
and
mov
das
int
ficoms
in
test
nop
mov
jns
test
repz
push
mov
mov
hlt
xorl
movsl
dec
and
shlb
push
mov
mov
aad
push
mov
inc
lock
add
repnz
lock
jmp
or
loopne
jae
mov
and
rcl
jno
xchg
sub
or
lods
xchg
sbb
daa
repnz
inc
push
lea
adc
adcl
loopne
adcl
or
inc
push
pusha
outsb
cli
push
stc
pop
push
loopne
dec
sbb
shlb
adc
aam
bound
jp
dec
in
ret
jl
ds
mov
push
mov
mov
xchg
pop
or
mov
aas
xor
out
lret
test
lock
fistl
or
or
inc
lock
clc
mov
push
xor
mov
adc
mov
add
movl
jmp
mov
movl
mov
movl
jmp
jge
lret
in
icebp
ss
add
cmp
cmp
loopne
lret
hlt
test
jbe
movsb
rcrl
pop
adc
jge
pop
xor
mov
dec
sbb
in
or
jl
jp
movsl
mov
iret
out
cli
jge
and
js
enter
imul
add
lret
push
mov
ret
xlat
pop
cmp
adc
push
sub
adc
imul
xor
inc
hlt
and
xchg
lret
sub
inc
ret
and
xcrypt-ofb
cmpsl
jmp
rorb
fsubl
add
popf
xchg
push
mov
sub
xor
jge
and
jp
fwait
pop
ret
adc
sub
stc
xchg
js
inc
cmc
loope
mov
jmp
outsl
cmpsb
push
scas
pop
aas
cmc
cld
push
mov
nop
fnsetpm(287
adc
movl
ficoms
mov
cltd
shrb
adc
xor
daa
test
and
imul
jg
dec
and
pushl
mov
shr
cwtl
or
mov
push
mov
add
sub
leave
dec
inc
lret
lcall
sti
mov
add
addr16
cmpsb
push
je
mov
xchg
xchg
div
roll
sar
mov
or
ja
divb
sub
inc
out
scas
lea
test
sub
sbb
adc
cmp
push
fnstenv
or
xor
jo
or
orb
push
or
insb
push
xchg
xchg
pusha
xchg
in
add
dec
xchg
add
int3
sbb
rorl
cmc
push
iret
mov
mov
xor
addr16
cmp
add
hlt
icebp
pushf
mov
dec
mov
dec
in
rorb
rcr
cmp
sbb
addr16
push
dec
shll
addr16
fsub
aas
pushf
dec
dec
jecxz
loopne
dec
pop
jle
and
cmc
mov
sbb
ret
inc
lea
cmpsl
push
test
inc
enter
cli
mov
add
cmp
xchg
outsl
dec
lods
jmp
jmp
dec
push
adc
cld
jmp
xchg
and
inc
pop
pusha
xlat
lcall
popf
stc
fcmovnb
xchg
iret
les
mov
repz
push
roll
ds
sahf
fnstsw
test
pop
add
push
push
stos
inc
hlt
out
and
das
xchg
sub
sbb
sbb
push
push
mov
pop
bt
cmpsb
xchg
stos
out
fiaddl
pop
mov
outsl
jecxz
faddp
lods
aaa
lock
xchg
lock
sub
xor
into
out
cmc
cwtl
mov
clc
push
pusha
outsb
lock
sub
xor
mov
ret
aaa
clc
es
test
add
jecxz
mov
push
int
cmp
inc
sbb
jae
jne
dec
out
sarb
rclb
pushf
repz
gs
adc
push
arpl
adc
int
xor
inc
xor
imul
push
push
and
mov
inc
cmp
movl
jmp
leave
daa
rclb
repnz
jecxz
cmpsb
dec
lgs
jnp
sbb
cmp
int3
mov
pop
sub
adc
arpl
cli
fildll
and
inc
mov
mov
push
add
sub
into
push
push
xchg
xchg
ret
sbb
adc
stos
out
mov
test
aas
std
cmc
sub
mov
bound
mov
lds
xorl
mov
mov
dec
popa
jno
mov
adcl
sbb
movsb
mov
add
cmc
fstpt
sbb
aam
push
lock
jmp
mov
insb
test
and
push
leave
sub
and
push
inc
testb
int
push
lahf
and
pop
mov
test
fsubrp
mov
lods
push
jl
mov
mov
pop
and
mov
pop
arpl
and
sub
jno
xor
adcl
xchg
test
repz
push
js
nop
cmp
bound
in
js
loopne
clc
or
sub
inc
inc
dec
out
mov
dec
inc
outsl
sbb
lahf
sbb
bound
add
test
stos
outsl
orb
in
adc
das
pop
mov
xchg
insb
hlt
pop
scas
insl
mov
sub
cmp
mov
pop
pop
sbb
pop
arpl
push
sbb
fwait
dec
leave
pop
xchg
cmp
test
ficoms
inc
dec
xchg
pop
arpl
fwait
dec
xor
nop
dec
mov
inc
das
cmpsb
dec
sub
dec
cli
sbb
push
mov
addb
lock
imul
jne
jo
lahf
movsl
cwtl
fwait
int3
mov
sbb
scas
add
lcall
push
rorl
xor
ds
xchg
push
lret
nop
xchg
shr
test
imul
popf
mov
stos
jmp
inc
dec
ljmp
pop
icebp
jae
mov
pop
dec
cmpsl
push
loop
insb
pop
mov
or
divl
mov
push
lret
adc
lock
cmp
xor
and
inc
lea
cmp
repnz
inc
dec
in
gs
lret
add
and
mov
pop
mov
dec
mov
dec
xchg
test
inc
cmpsb
popa
sub
sbb
jecxz
dec
nop
aas
xor
cld
sar
add
add
out
and
mov
sbbb
scas
fs
vcvttss2si
push
int3
push
hlt
xor
cmp
xor
push
lahf
stos
mov
xlat
gs
repnz
inc
pop
sahf
pop
icebp
dec
inc
and
inc
scas
or
insl
mov
mov
scas
fsubs
daa
jecxz
add
jle
addps
jl
rclb
pop
hlt
popa
mov
fs
push
xor
mov
repnz
sti
mov
jne
test
repnz
sbb
cmp
in
into
imul
mov
aad
insl
incb
cmpsl
stos
movsb
xchg
dec
cmp
or
sbb
jp
or
lds
cwtl
sub
es
adc
jmp
adc
mov
jmp
push
jge
add
jb
inc
sbb
jns
and
jo
jge
jo
xlat
ret
bound
pop
dec
xchg
dec
sahf
xor
dec
sbb
fdivl
or
cwtl
out
push
push
pop
stos
cwtl
xor
mov
xor
rcrl
idivl
xlat
jae
pop
mov
sbb
outsb
mov
push
outsb
out
daa
mov
xchg
jl
aad
inc
dec
add
mov
adc
or
in
dec
out
cs
js
popa
rcr
push
and
dec
scas
or
mov
xor
sbb
cmp
arpl
push
add
xor
stos
repz
xor
sub
mov
sub
subb
lret
jg
xchg
loop
fwait
jecxz
jns
push
or
add
and
int3
jg
cld
inc
xchg
cli
lcallw
and
lods
inc
mov
addr16
mov
lcall
xor
mov
ja
add
or
aas
jmp
adc
cli
cmp
cs
push
cmc
rolb
or
dec
lods
dec
mov
clc
jo
mov
cli
dec
lock
cmp
sahf
outsb
lock
inc
arpl
add
je
adc
pop
mov
dec
into
xor
adc
orb
sti
mov
movsl
mov
test
or
sub
inc
sbb
and
or
mov
cmp
jecxz
jmp
add
sub
adc
xor
mov
and
mov
pop
into
inc
daa
sbbl
sub
jge
add
xchg
jge
imul
imul
sub
mov
outsb
inc
pushf
mov
repnz
push
or
pop
push
sbb
cs
dec
jne
pop
jp
fmul
rcr
cli
push
in
or
inc
cmp
popf
cs
rorb
mov
data16
mov
or
cld
cmpsl
xor
imul
sbb
shlb
aam
loop
sub
in
add
shlb
divb
cmp
mov
test
mov
sbb
fwait
les
pop
sbb
adc
mov
sub
jns
push
movsb
test
mov
jns
mov
xlat
sub
pop
adc
dec
dec
out
lcall
ss
dec
pushf
daa
mov
sbb
xchg
or
pop
cmp
addl
rcrl
outsb
fldcw
mov
inc
mov
lret
mov
and
jle
insl
int3
or
fmuls
adc
push
ss
in
decb
mov
fcomps
inc
mov
lods
add
test
lret
push
js
adcl
ficompl
ljmp
adc
out
aad
leave
mov
stos
call
es
mov
sub
add
repz
sbb
aad
xor
pop
adc
inc
hlt
xor
add
cmp
movl
je
add
push
adc
push
mov
mov
andl
xor
mov
add
addl
movzwl
andl
mov
sbbl
mov
addl
movzwl
sbbl
xor
addl
jmp
fdivl
dec
rsqrtps
icebp
inc
sub
call
and
cmp
jl
cmp
mov
insb
inc
aam
push
jbe
mov
jb
fld
sub
out
mov
jle
out
cmp
dec
pop
push
lock
pop
das
jmp
fldenv
jns
cmp
sub
aas
popf
mov
jno
cmpsb
outsb
mov
aam
or
adc
dec
out
inc
mov
mov
mov
sub
rcrl
and
pop
pop
cs
push
out
jl
add
lahf
or
xchg
push
stc
cmp
rcll
mov
rcrl
xchg
stos
in
adc
mov
push
daa
inc
call
sub
imul
and
int3
insl
nop
add
cmpb
fldenv
mov
inc
int
clc
cmpsb
cmp
test
jno
push
addr16
out
dec
push
push
loopne
repnz
addb
loope
pop
dec
adc
nop
mov
call
sysexit
imul
les
sub
mov
cmp
add
push
cs
push
inc
jmp
mov
adc
mov
scas
dec
arpl
and
adc
cvtpi2ps
out
sbbl
sahf
mov
in
xchg
mov
mov
add
pop
hlt
int3
mov
insb
pop
xor
and
leave
adc
movsl
push
out
xchg
es
mov
dec
shll
and
call
sub
es
jae
stos
orl
fs
xor
add
jne
lahf
scas
sub
daa
in
xchg
cltd
stc
dec
cltd
mov
mov
hlt
ficomps
dec
lds
cli
orl
xchg
stc
mov
out
pop
shll
aam
ret
xchg
data16
xchg
dec
jge
sbb
lea
sahf
pop
out
std
xchg
int
ss
inc
or
jl
test
jbe
fimuls
fnsave
cmp
jmp
adc
dec
movsb
pop
xor
push
lods
jecxz
mov
mov
std
inc
xchg
sbb
pop
pusha
pop
rolb
sarl
addr16
in
outsb
sub
icebp
imul
jecxz
cmpsl
push
jmp
lahf
fstpt
adc
mull
fists
imul
mov
cmpsl
cmpsl
jnp
inc
test
mov
inc
loopne
push
mov
mov
stos
or
popa
mov
pop
iret
pop
subl
or
cmp
cmp
test
jmp
inc
repz
lea
je
pop
lods
pusha
enter
add
mov
cmpsl
ret
add
sbbl
imul
out
sbb
arpl
xor
cmp
lock
xor
and
loop
push
adc
out
leave
scas
out
lods
jp
mov
pushf
push
push
pop
lds
outsb
lret
pushf
pop
push
cmp
movsl
rcrb
xchg
iret
sti
xchg
xor
mov
lret
mov
aam
push
pop
call
fisttpll
xor
ja
jge
mov
in
add
movl
mov
movl
mov
jmp
or
daa
arpl
fisttpll
sahf
push
icebp
xchg
jo,pn
cmp
jecxz
mov
imul
movsb
call
std
lahf
inc
ds
sbb
push
jge
inc
adc
push
imul
add
push
mov
xchg
mov
jle
gs
push
inc
sahf
jne
fstpt
stc
mov
sbb
movsl
test
lods
jnp
cli
and
bound
daa
imul
cmp
cltd
pop
js
push
mov
rolb
into
jp
xlat
xchg
shlb
call
add
mov
rorb
sbb
jae
repz
jnp
push
sahf
stos
push
mov
jbe
cmp
sbb
add
or
mov
dec
lahf
loope
lods
clc
mov
and
ret
fadds
shl
mov
mov
jle
jno
lret
sti
cmp
cltd
les
mov
mov
gs
xchg
pop
jl
scas
mov
adc
push
push
in
repnz
inc
out
lahf
aad
jl
mov
ret
in
inc
push
cmc
lds
shr
adc
pop
sahf
mov
movsl
arpl
daa
incl
xchg
imul
mov
cli
aam
xor
loop
mov
pop
call
cli
jge
scas
push
pop
xor
icebp
xor
iret
jg
sub
and
xchg
movsl
insl
lods
pop
outsb
xchg
rcl
pop
movsb
shl
fwait
or
out
stos
arpl
incl
dec
insl
pop
hlt
adc
push
push
sbb
andb
cltd
push
mov
or
icebp
mov
mov
mov
dec
in
jl
dec
arpl
mov
add
jb
out
xchg
in
jnp
sub
jae
add
jmp
sub
push
xchg
out
gs
aam
test
adc
or
xor
mov
shlb
jno
dec
push
push
cltd
out
jns
cmp
scas
jbe
pop
and
mov
sbb
mov
sub
test
rcrl
pop
xor
sbb
pop
mov
lds
inc
fwait
xor
pop
mov
enter
jns
and
adc
cmp
push
dec
int
fadds
cmc
out
mov
inc
mov
mov
push
scas
inc
xchg
lret
pop
shr
in
leave
cmp
xor
outsb
and
idivb
add
outsb
ficoml
jg
fsubs
mov
outsb
mov
bound
iret
icebp
jno
xor
sub
push
mov
jle
cmc
adc
xchg
mov
lods
mov
cmpsl
jo
popa
div
test
push
pop
adc
lahf
jmp
or
repnz
int
mov
mov
stos
cli
adc
inc
and
mov
stc
addl
enter
ja
in
outsb
dec
mov
ror
hlt
rcrb
sahf
call
xor
jg
iret
fisubrl
cmc
shl
pop
and
xchg
icebp
xchg
insl
inc
cmpb
clc
cmp
divb
movsb
inc
mov
xchg
cmpsl
mov
inc
dec
pusha
and
aam
mov
sahf
mov
inc
cmp
jne
pop
pop
mov
mov
xor
add
mov
mov
xor
add
mov
mov
mov
mov
cmp
je
mov
mov
mov
cmp
jne
mov
mov
movsbl
xor
add
cmp
je
movl
lea
mov
mov
addl
mov
mov
xor
lea
mov
incl
jmp
mov
xor
mov
add
mov
jmp
xchg
roll
icebp
lods
add
shll
jo
cmp
sbb
inc
adc
dec
mov
and
cs
adc
pop
xchg
sub
mov
jae
clc
je
pusha
mov
rcrb
insl
jo
mov
movsl
flds
rcrl
mov
aam
sahf
cmp
add
cmp
mov
cmpsl
das
xor
lods
movsl
cmpsl
mov
adc
jge
xchg
fcoml
or
xor
das
sub
push
sub
out
inc
sbb
das
fsubl
outsl
sarl
push
repz
mov
jno
inc
js
or
xchg
es
int
adc
lods
arpl
inc
pop
popa
inc
divb
sti
cs
aaa
dec
mov
pop
ret
add
adc
sbb
lahf
or
sub
paddsw
push
push
jge
pop
pop
in
inc
pushf
js
test
adc
loopne
pop
stos
jo
daa
sub
xlat
jo
aas
cmp
inc
pop
jg
sub
xchg
jl
push
jge
outsb
repz
rcll
lea
fcompl
jb
mov
and
xor
aam
imul
addl
cld
adc
cmp
sarl
call
jnp
fildll
test
stc
jg
addr16
ror
cmp
push
xor
lret
cli
xchg
lods
sti
dec
jnp
lret
push
mov
hlt
mov
clc
push
mov
mov
xchg
push
cmp
inc
sbb
or
push
mov
nop
xlat
mov
dec
mov
cmpsl
xlat
in
fs
jnp
ljmp
rclb
dec
arpl
jle
xor
int
jne
scas
fisubrs
test
dec
push
sub
bound
ja
mov
ja
imul
mov
test
loope
lods
lds
add
lahf
adc
sub
push
adc
fisubl
push
mov
sub
fmull
test
pop
nop
popa
mov
cmp
out
arpl
inc
mov
insl
pushaw
cmp
xchg
mov
cli
jb
inc
mov
pusha
enter
or
mov
jns
sarb
push
dec
jle
fldl
or
push
push
mov
mov
mov
jbe
jmp
movb
pop
out
adc
aas
pop
lcall
iret
jmp
inc
add
stos
dec
loope
cwtl
popa
stos
mov
add
mov
dec
mov
push
jge
mov
add
les
xchg
shrl
mov
pop
movsb
push
popf
mov
inc
inc
or
jne
inc
loop
pop
push
and
jbe
imul
dec
sub
pushf
in
mov
sarl
xchg
mov
and
mov
sub
out
xchg
jb
lods
dec
sahf
js
mov
outsb
fistpll
stos
out
lock
lahf
arpl
add
mov
out
sbb
lea
fadds
rorb
push
inc
lds
imul
or
or
mov
jo
popa
pop
leave
ret
push
mov
push
mov
mov
sbb
jmp
pop
scas
sbb
push
pop
mov
sbb
push
aaa
jo
stos
jle
jo
ds
mov
shll
seta
jl
stc
or
dec
pop
mov
adc
push
xchg
test
sarb
daa
dec
add
add
ret
push
mov
dec
xlat
cltd
stc
xor
mov
imul
adc
inc
inc
bound
xchg
lods
in
jle
fnstsw
xor
nop
inc
mov
jle
push
dec
in
xchg
xor
dec
ficoms
stc
fnstcw
dec
sub
xchg
pushf
aaa
in
mov
xor
stos
fucomip
sub
fmulp
xchg
mov
lret
xchg
pusha
lods
in
and
jae
cmpsb
rol
insb
mov
add
movsb
fs
pop
mov
in
dec
leave
mov
stc
xchg
mov
lcall
adc
outsb
clc
cld
and
cli
xor
push
js
loope
jbe
mov
jb
in
cmp
and
pop
test
push
mov
cmp
lahf
mov
dec
adc
clc
lock
dec
pop
push
push
mov
pusha
and
xchg
repnz
in
cmp
pop
stos
cld
and
test
jecxz
sub
shlb
lcall
sub
push
mov
arpl
xchg
dec
jbe
sub
jp
jbe
mov
loop
fcmovb
cmp
mov
addr16
out
push
aas
cmpsb
add
xchg
jo
adc
rorl
rcrl
mov
dec
mov
lods
pop
test
test
mov
pop
ljmp
pop
mov
sahf
pusha
mov
adc
test
fadd
jb
add
cmp
push
xchg
je
add
cmp
jb
es
fs
popa
sbb
adc
mov
inc
int3
mov
iret
call
in
inc
imul
mov
scas
jno
push
mov
xchg
das
dec
xchg
out
scas
jecxz
xchg
lods
jb
add
and
outsl
test
add
shrb
adc
xchg
sbb
pop
add
dec
add
rcll
lcall
andb
cltd
inc
negl
and
add
jne
inc
popa
adc
fcomp
pop
nop
loop
xchg
inc
in
push
shrl
xor
lea
push
push
loopne
add
je
scas
push
push
lahf
add
add
sbb
fisubs
sub
inc
and
jae
je
xchg
aaa
mov
testl
jb
jnp
into
sbb
add
mov
dec
adc
pop
bswap
and
inc
push
movzwl
and
mov
jmp
ja
and
dec
xchg
fsubr
dec
xor
jo
in
mov
lods
push
pop
jmp
pop
popa
and
lods
stc
das
pop
dec
mov
push
daa
add
ds
test
pop
adc
pop
test
push
push
test
mov
call
xor
sbb
test
sub
mov
test
xor
push
lods
pop
jnp
clc
lock
mov
or
sarl
popa
mov
lods
aad
into
sub
mov
xor
jae,pt
push
mov
inc
dec
xchg
pop
pop
scas
inc
enter
int
adc
cwtl
push
andl
pop
test
bnd
jp
aad
fistpl
test
idiv
pop
sahf
xor
pop
test
pusha
and
fadds
or
in
icebp
inc
inc
fwait
mov
ret
adc
xor
hlt
mov
enter
addr16
xchg
rorl
cmp
test
lods
mov
xchg
push
inc
ftst
cmp
push
xor
fnop
cmp
sbb
mov
lcall
push
mov
dec
mov
outsl
push
sbb
test
add
pop
into
int3
adc
push
cltd
inc
push
lds
addr16
jns
dec
push
aam
in
jbe
lods
sbb
xor
or
sub
mov
test
cltd
xor
fucom
lret
ficoms
daa
jmp
mov
rcrl
inc
jmp
cmp
rcrl
movsb
push
repnz
inc
jo
dec
mov
xchg
adc
xor
hlt
shll
xor
loopne
cmp
mov
sub
xor
ficoms
mov
adc
jmp
xlat
data16
sti
movsb
inc
enter
sbb
dec
mov
aas
mov
cwtl
adc
mov
mov
sub
ret
stos
lods
xlat
inc
mov
add
std
mov
ret
push
mov
xor
pop
fwait
popf
mul
in
sub
inc
xor
fcomps
push
mov
sbb
les
icebp
jmp
dec
pop
push
xchg
sbb
mov
fwait
sub
jo
mov
cwtl
call
out
rcrb
and
push
aaa
add
in
stc
pop
push
sbb
cmp
movsl
pop
push
arpl
mov
sbb
js
mov
push
lock
jae
fcmovne
rcrb
movl
and
movl
and
mov
sbb
push
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
pushl
call
jmp
movl
cmpl
je
cmpl
jne
pushl
push
pushl
pushl
push
call
xor
xor
dec
mov
jmp
mov
add
xor
and
xor
mov
add
add
imul
mov
cmp
jne
mov
mov
xor
xor
add
add
imul
jmp
mov
mov
mov
mov
mov
xor
xor
add
add
imul
mov
cmp
mov
je
jmp
xchg
imul
mov
jo
jle
jo
sub
dec
xchg
mov
pushl
lret
cs
shll
outsb
loopne
or
push
lea
mov
pushf
push
ret
inc
dec
lret
xor
sub
shrb
lods
aad
rorb
ja
arpl
pushf
dec
clc
inc
cmpb
mov
les
cmp
insb
sbb
repnz
xor
rcll
pop
xchg
sbb
mov
mov
adc
rcl
das
data16
inc
adc
je
rorl
sub
mov
in
test
inc
jle
shl
enter
xor
jb
jg
inc
je
add
ret
inc
je
pop
repnz
add
cmpsl
std
push
mov
stos
or
push
cmp
dec
sub
jmp
cmpsl
cmp
clc
pop
sub
add
push
xlat
pop
push
adcb
nop
mov
lret
movl
in
pop
int3
out
mov
pop
insl
call
xorb
mov
mov
je
xor
std
leave
jne
pop
adc
movsl
mov
ret
out
jno
fxch
ror
mov
xchg
popf
mov
xor
push
inc
pop
dec
add
push
dec
push
into
ret
mov
and
imul
dec
lods
jno
mov
and
adc
lods
xchg
mov
test
lds
out
arpl
mov
aas
push
aad
jno
mov
lret
jmp
int3
or
mov
out
dec
dec
jmp
repz
xchg
inc
mov
and
inc
inc
shll
mov
popa
mov
int
mov
stc
repz
pop
push
jno
dec
cwtl
mov
dec
mov
roll
ss
pop
fadds
ret
and
dec
and
xchg
push
loop
push
sbb
js
lods
mov
pop
fbstp
mov
arpl
dec
les
int
sub
setnp
adc
shl
lods
dec
dec
pop
inc
pop
es
shll
cmp
and
mov
in
jb
fnstsw
adc
cmpb
lds
xchg
sub
loop
dec
mov
aam
jo
insb
adc
pop
les
pop
fs
push
pop
leave
ljmp
cmp
cmp
nop
fwait
add
adc
sub
jnp
xlat
ret
rolb
jnp
ret
mov
imul
add
mov
mov
pop
leave
ret
push
mov
push
addl
movl
mov
mov
adcl
mov
xorl
xor
jmp
fidivl
jle
jne
jb
sub
dec
insb
insl
ds
jo
cmpsl
jg
jo
push
enter
int
add
xchg
pop
sbb
movsl
mov
clc
push
add
sub
loope
jmp
imul
aas
js
outsb
data16
icebp
adc
sbb
adc
pop
movsb
sahf
push
out
lret
outsl
data16
adcb
fnstsw
xor
inc
lret
arpl
cmp
mov
ret
scas
or
pop
addr16
or
clc
inc
mov
jbe
jo
out
out
mov
lea
aam
out
jno
xchg
mov
push
and
lds
cmc
fstpl
lret
jl
and
sub
xchg
jne
bound
jb
movsb
mov
aas
dec
in
cmpsb
mov
add
xor
push
mov
add
mov
ret
pusha
out
ret
push
stos
sub
imul
adc
pop
dec
xchg
pushaw
andb
mov
fsub
out
or
in
or
arpl
sbb
xchg
cmp
and
shr
dec
ds
repz
adcb
mov
cmc
xor
push
popa
mov
in
pop
rclb
pushf
bound
cmp
sbb
bound
cmpsl
scas
mov
sbb
and
lret
push
add
mov
or
sbb
adc
and
dec
and
pop
lods
subl
fs
adc
or
shr
imul
test
mov
mov
dec
decl
js
xchg
iret
xchg
inc
xchg
mov
lods
sti
cmp
scas
pop
jns
xor
mov
jp
pushf
jb
add
add
or
add
xor
push
sbb
mov
or
mov
sbbl
add
adcl
mov
sbb
mov
adcl
mov
subl
mov
or
jmp
out
hlt
arpl
popa
xchg
insl
hlt
pop
xor
jns
jo,pt
cmpsl
jg
jo
push
pop
cmc
sbb
mov
lods
mov
cs
or
add
mov
sahf
mov
repnz
outsl
mov
adc
aad
dec
add
popf
lahf
jbe
imul
sub
mov
mov
mov
inc
cld
push
int
cmp
int
and
ss
pop
dec
mov
sahf
std
and
mov
and
push
pop
movsb
orb
jg
lods
fldl
loopne
and
pop
out
jnp
add
sbb
inc
sbb
gs
lret
lret
mov
in
adc
xor
jnp
js
je
negl
push
jb
cmp
pop
jg
aad
push
incb
gs
cvtps2pi
fadd
pop
add
and
fs
jl
mov
cmp
test
add
and
jge
stc
in
mov
pop
xor
lock
pop
sti
push
sub
jp
mov
fs
mov
lds
outsl
push
jecxz
mov
pop
adc
stos
fwait
pop
ss
push
out
cmp
mov
rol
lret
sbb
cmpsl
fistps
sub
out
in
sarb
int3
pop
push
jmp
sahf
icebp
nop
sti
cmc
test
jns
lds
sub
and
inc
das
fstpt
pop
push
pop
push
sbb
sarl
xor
add
cltd
lcall
sbb
lea
jno
jb
and
inc
mov
mov
subl
mov
or
mov
movl
cmpl
je
cmpl
jne
push
pushl
pushl
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
mov
mov
mov
xor
add
jmp
jge
gs
gs
sti
ret
pusha
jo
push
sbb
jo
jg
jo
out
jp
imul
mov
sahf
and
add
jmp
jmp
je
imul
mov
or
inc
mov
mov
mov
rclb
and
fsubrp
mov
mov
jle
or
addr16
arpl
outsl
fistpll
and
adc
rolb
out
push
fdivrl
cmp
cmp
and
inc
sbb
cmp
adc
inc
mov
jecxz
mov
js
xor
adc
sahf
andb
sub
iret
bnd
cmp
pop
lret
aam
pop
cmpsb
and
insb
add
xorb
cmp
mov
sub
stos
mov
std
xchg
test
push
adc
and
add
xchg
shll
and
push
testb
shrb
or
mov
sub
adc
xor
mov
lods
inc
inc
mov
add
fwait
repz
jmp
pushf
xchg
jbe
int
jp
popf
std
mov
ret
mov
insb
dec
ja
push
test
out
xor
pusha
or
add
xchg
fs
leave
lea
int
orb
scas
push
dec
cmp
or
ficoml
mov
mov
das
cmpl
ljmp
pop
pop
xchg
jmp
or
movsb
adc
shr
cld
xchg
std
pop
mov
dec
addr16
movsl
lcall
in
add
push
lds
icebp
push
fwait
dec
ret
push
mov
ret
push
mov
mov
xor
mov
div
mov
and
or
mov
pop
ret
push
mov
push
adc
movl
mov
sbb
mov
mov
xor
add
mov
sub
mov
sub
mov
andl
mov
mov
jmp
mov
jg
inc
rorl
jae
pop
dec
test
mov
cmp
loop
jo
or
xlat
testb
mov
es
ret
or
insl
loop
adc
bnd
dec
push
int
xor
mov
mov
fiaddl
test
loope
push
outsb
test
lock
jmp
push
sub
dec
je
lret
movsb
inc
loop
in
jo
adc
repz
imul
loope
daa
mov
sub
ljmp
fists
and
arpl
dec
loop
sub
mov
xlat
mov
pop
movsl
les
push
sti
xchg
dec
ret
jbe
inc
fwait
cld
stos
inc
repz
lock
xor
rclb
dec
aas
jnp
dec
pop
adc
dec
in
pop
lods
imul
adc
and
cltd
inc
cmpsb
daa
roll
call
push
mov
adc
das
jno
call
movntps
movsl
jnp
mov
popf
pop
js
cltd
push
add
in
jg
enter
sub
mov
stos
jmp
clc
jl
jns
cmp
movsl
add
call
cmp
dec
pop
mov
scas
push
jne
popa
shlb
cmpsb
cmp
rcll
ffree
xor
pop
out
sbb
mov
cmp
popa
cmc
adc
fwait
aas
js
push
outsb
int3
popf
mov
enter
cmc
mov
andl
xor
mov
call
out
mov
xlat
loope
hlt
pop
sar
cmpb
ss
xchg
loopne
and
mov
jmp
mov
daa
mov
push
sbb
or
sbb
mov
cmp
inc
xor
cmp
fs
sbb
sbb
mov
mov
sti
out
adc
mov
push
cld
lcall
popf
int3
rcll
push
mov
fnstsw
sub
xchg
jns
scas
pop
sbb
fldt
push
dec
cltd
add
sub
jl
lods
xchg
add
mov
lock
jnp
insl
in
shlb
mov
aaa
jb
xor
je
iret
add
ret
test
mov
sub
leave
aad
in
xlat
lcall
add
xchg
aam
mov
mov
inc
fwait
xchg
ret
fldpi
imul
adc
mov
mov
adcl
mov
mov
orl
mov
subl
mov
andl
mov
mov
test
mov
jne
mov
jmp
sub
test
pushf
lock
pushf
movsl
cmp
loop
jo
aaa
es
mov
mov
stos
std
mov
sub
fs
push
inc
je
das
pop
xchg
sub
fcoms
jecxz
mov
sub
fnstenv
repz
sbb
lods
jae
jmp
stc
fldl
insl
and
mov
sarl
mov
pushf
lret
mov
loopne
push
dec
mov
push
or
jnp
cmpsl
dec
push
ror
imul
add
pop
fnsave
movsl
enter
stc
insb
dec
ret
gs
out
in
lret
je
pop
jle
fwait
lds
ljmp
scas
mov
xor
sub
arpl
mov
aad
hlt
movsl
shlb
push
out
fildll
pusha
jbe
push
cmpsl
mov
movsb
push
mulb
out
mov
push
and
mov
sbbb
fninit
sub
popa
mov
out
scas
daa
xchg
inc
sub
lahf
cwtl
ficoms
pop
fs
lret
pop
add
sub
inc
adc
sub
ja
loope
stos
pop
andb
pop
dec
in
push
cs
sbb
bswap
bnd
push
in
xor
icebp
rcrb
or
xlat
sub
lods
std
cmp
jecxz
push
rcrl
popl
jns
dec
xor
push
and
xor
repnz
iret
imul
repnz
push
or
dec
imul
push
and
orb
insb
mov
mov
lds
mov
dec
mov
fadds
outsb
fwait
pushf
xor
push
clc
push
dec
jb
movsb
fstpt
mov
mov
push
mov
loopne
arpl
enter
xchg
das
pop
adc
xchg
movsl
dec
inc
dec
sub
and
or
js
jecxz
outsl
adcb
mov
mov
andl
cmp
push
sbb
xchg
lahf
or
or
repnz
iret
stc
in
xor
mov
faddl
hlt
pop
in
jns
push
sbb
push
std
jne
stos
mov
xchg
popa
movsl
xchg
and
mov
stos
cmc
sbb
hlt
mov
add
imul
mov
sub
in
mov
push
jb
add
ret
push
mov
sub
mov
mov
mov
subl
mov
xorl
movl
incl
movl
subl
mov
push
push
push
movzwl
and
mov
mov
movl
cmpl
je
cmpl
jne
pushl
pushl
call
mov
dec
mov
jmp
movl
cmpl
je
cmpl
jne
pushl
push
push
pushl
call
mov
dec
mov
jmp
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
push
pushl
call
jmp
andl
mov
inc
mov
cmpl
jne
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
xor
sub
mov
add
xorl
mov
movl
jmp
inc
jae
pop
sub
jae
and
mov
cmp
jo
jge
jo
sbb
inc
or
xor
mov
fidivrl
sub
fwait
cmc
adc
in
push
into
idivl
jl
add
jmp
lahf
adc
outsb
stos
dec
add
inc
inc
test
das
les
xor
inc
inc
jmp
scas
insb
push
mov
lcall
add
testl
in
dec
jmp
cmpsb
cmp
pop
out
cmp
enter
push
fstpl
fldcw
insl
mov
aas
ja
mov
inc
dec
in
or
jbe
sub
sub
aad
or
mov
sub
ljmp
lods
in
cmp
fs
add
jnp
mov
push
pop
pop
and
loop
adc
das
inc
aam
fs
adc
scas
jne
inc
adc
pushf
cmp
icebp
xor
add
sub
js
divl
mov
or
stos
mov
aad
and
and
cmpsb
sbb
daa
aam
jo
enter
test
gs
sbb
or
mulb
or
imul
sbb
mov
pop
js
stos
lahf
fdivrl
inc
pop
jle
iret
xor
jg
loopne
or
adc
mov
push
mov
stos
addb
jns
sbb
aaa
push
pushf
or
cmp
xor
lret
pop
sub
nop
and
jo
push
in
jae
xor
scas
out
mov
push
aam
xor
push
mov
push
add
mov
enter
data16
call
enter
jnp
ja
xchg
xchg
mov
cmp
aad
je
add
xchg
lods
jnp
add
insl
or
and
pushw
add
scas
and
cmp
test
test
push
nop
das
ja
outsl
fsub
sar
fwait
inc
inc
outsb
das
out
enter
cmc
insb
bound
cli
jmp
clc
push
mov
leave
or
scas
lds
les
int3
out
jecxz
jnp
jl
or
or
shll
cmpsl
adc
mov
push
cld
xchg
jno
mov
inc
fucomip
mov
sub
into
xlat
addb
jmp
outsb
jle
push
std
dec
mov
push
leave
ficoms
xchg
idivl
les
add
push
cld
shll
pushf
mov
inc
mov
inc
pop
mov
aas
cmpsl
push
in
jne
mov
jl
mov
sahf
adc
dec
mov
lahf
arpl
sbb
xchg
add
mov
and
call
loop
scas
xchg
shl
jecxz
ds
xor
jge
lret
int
lds
and
insb
push
icebp
jbe
lret
into
imul
test
hlt
mov
mov
mov
pop
subl
aad
xchg
lret
popf
daa
fsubs
jns
call
loop
adc
stos
cmp
mov
xchg
inc
int3
xor
repnz
inc
add
inc
aam
test
test
add
dec
add
add
mov
lahf
popa
sti
arpl
pop
mov
and
jo
hlt
xrelease
xchg
and
stos
sbb
sbb
fldt
jns
adc
adcb
pop
aad
ds
mov
outsl
add
pop
jbe
push
sub
add
les
adc
sbb
push
pop
inc
and
jmp
cltd
mov
and
sub
adc
leave
mov
jg
jge
mov
mov
push
ja
jmp
xchg
adc
addr16
fstps
and
mov
xchg
lret
dec
test
sbb
inc
mov
push
bound
cwtl
and
stos
lahf
fsts
addr16
imul
push
fwait
cmc
aaa
stos
call
pop
repz
fdivl
das
push
jno
adc
pop
shlb
shlb
aam
add
out
cmp
loopne
xchg
pop
add
je
sub
jle
mov
stc
push
adcb
repz
cs
fldcw
dec
imul
or
mov
aas
popf
icebp
cmp
mov
fisubrs
sub
popf
xchg
pushf
jnp
cmp
mov
ljmp
cld
loop
add
loop
xchg
movsl
cwtl
push
cmc
scas
shrb
xor
push
pop
fiadds
lea
mov
sbb
xor
and
leave
dec
test
div
lret
ja
dec
les
cmp
aaa
sbbl
ss
popa
add
ds
xor
test
xlat
sub
rcrb
xlat
push
into
je
arpl
into
xor
clc
dec
and
jo
lods
push
test
lcall
adc
in
inc
mov
push
add
dec
lods
sbb
xchg
xchg
in
inc
loope
cmp
popf
mov
gs
xchg
pushf
mov
dec
cmp
adc
pop
jno
mov
icebp
faddl
adc
jae
cs
dec
cmp
test
imul
dec
je
xorb
mov
pop
aas
leave
movsb
ret
loopne
mov
ss
stc
inc
mov
add
jns
rcl
lea
push
sahf
leave
fnstenv
jle
inc
cmpsb
iret
shlb
add
sbb
and
iret
cmp
mov
shl
mov
outsb
inc
and
loop
pop
inc
fsts
dec
fs
adc
sub
cltd
ja
ret
xchg
nop
adc
hlt
out
push
inc
pop
xor
cs
or
lods
rcll
mov
repz
enter
and
arpl
jne
aad
imulb
jmp
rcrl
ret
adc
insb
sti
cmpsb
ret
mov
mov
ja
cmc
popf
aam
dec
inc
jle
int
sub
push
rcrl
cmpsb
in
dec
inc
in
cmpl
aaa
repnz
cld
push
sub
femms
inc
jp
jns
repnz
push
sub
in
jmp
xor
imul
insb
push
dec
mov
cli
je
cmp
xchg
xchg
push
and
test
add
and
add
movb
notb
add
movl
add
in
test
andl
mov
inc
mov
cmpl
jne
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
xor
andl
add
orl
mov
adc
jmp
or
rcl
cmp
pop
jns
popa
mov
iret
jo
and
jo
mov
push
dec
adc
leave
cwtl
pop
sbbb
rorl
sub
cmp
jmp
repnz
into
pop
jmp
leave
bound
leave
xchg
enter
shll
cmc
inc
sub
lret
int3
sbb
adc
sub
imul
ss
sbbb
daa
sub
push
push
mov
std
jno
test
fs
cld
adc
decb
iret
or
cmp
test
pop
or
fldl
rclb
js
xor
pop
mov
mov
lret
push
mov
mov
xchg
inc
pop
adc
pop
inc
pop
push
movb
mov
sbb
jle
push
sub
lret
mov
add
jae
push
mov
jae
mov
repnz
mov
sub
xchg
leave
test
in
fidivs
inc
sub
imul
jns
xor
je
or
shlb
sbb
jg
push
pusha
lcall
rcrb
sub
cmp
push
dec
pushf
shrb
pop
in
xor
sbb
test
xchg
popf
push
lcall
add
iret
add
stc
or
sub
mov
scas
repnz
out
jo
inc
xor
add
fcmovb
test
mov
adc
pop
out
testl
push
and
inc
cmpsb
lret
shlb
cli
push
lea
fwait
stos
jmp
push
fwait
hlt
xchg
lods
pop
cmp
mov
mov
mov
sub
outsb
and
out
dec
mov
jne
in
add
xor
fisubs
lds
fcmovu
mov
pop
test
je
xchg
ja
pop
mov
leave
adc
cmc
sbb
cmpb
out
push
out
mov
adcl
shrl
movsb
in
imul
jecxz
add
rorl
fs
insl
mov
outsl
pop
push
sub
mov
sub
or
ja
dec
mov
sub
lret
dec
gs
sti
dec
dec
pusha
js
inc
dec
ds
int
movsl
ds
out
pushf
insl
hlt
pushf
sub
cmpsl
stc
loopne
or
and
cltd
and
out
sbb
add
fs
mov
push
sbb
in
or
cmp
cmp
xchg
push
mov
sbb
xchg
stc
cmp
pop
push
pop
or
mov
dec
xor
jb
imul
ds
shlb
int3
fcomi
pusha
clc
xchg
stos
mov
addr16
mov
lret
and
adc
js
sub
punpckldq
xchg
cmc
cmp
aam
pop
cmp
in
in
in
adc
test
sahf
mov
loop
test
andl
std
and
call
aaa
sub
es
aas
dec
mov
loope
out
jge
xchg
fisttps
sahf
sbbb
lcall
jle
and
pop
shll
lret
fdivl
movb
adcl
push
inc
mov
sbbl
xor
add
push
mov
orl
xor
addl
add
xorl
push
lea
push
addl
pushl
adcl
pushl
call
adcl
test
je
lea
sbbl
push
mov
jmp
xlat
and
insb
push
aaa
pop
push
push
sahf
dec
or
jo
jge
jo
dec
pop
aam
and
loop
pop
mov
mov
stc
or
mov
ss
mov
pop
fnstsw
daa
xor
div
mov
and
mov
rorl
lahf
mov
dec
inc
iret
jecxz
xchg
scas
xchg
fdivr
test
clc
and
loopne
xor
test
lea
sub
mov
lea
aas
jle
sbb
mov
andps
cmpsb
cmpsl
je
iret
imul
std
cwtl
jmp
js
jbe
imull
nop
pop
jmp
out
sbb
cld
add
adc
call
add
mov
loope
rcrl
adc
jo
call
test
cltd
jmp
dec
and
ficomps
in
pop
add
bound
test
cwtl
sub
rcrl
in
mov
aas
scas
ja
stos
jne
pop
mov
cld
mov
cwtl
sbb
jp
stos
pop
mov
pop
adc
push
arpl
imul
rolb
clc
inc
jae
pop
nop
cmp
sub
xchg
pop
add
lret
push
and
addr16
lcall
mov
std
add
xchg
push
cmc
jb
inc
scas
jbe
pop
add
xchg
in
xor
sbb
shr
out
and
icebp
ret
hlt
iret
arpl
faddp
sbb
iret
fisttps
cltd
mov
and
cltd
inc
ds
fidivs
outsb
mov
ret
xchg
jecxz
mov
dec
addr16
stos
adc
mov
mov
cmp
and
rorb
orb
cmc
xor
lock
pop
fistpll
inc
mov
dec
xchg
filds
ljmp
out
or
dec
pop
fwait
jle
pcmpgtb
lcall
outsl
or
or
cld
pop
loope
inc
push
loop
push
pusha
push
test
fimull
cmpsb
movsl
ret
aam
aaa
mov
sub
imul
push
sti
sub
mov
shrb
cmp
xchg
cmc
adc
ret
sbb
jmp
call
repz
xchg
add
stos
pop
add
add
xchg
push
push
xchg
mov
add
mov
movsb
insb
data16
inc
nop
mov
mov
cmp
sub
adc
imull
and
mov
cmpsb
cltd
adc
cli
xor
fwait
mov
test
insb
in
sub
aad
scas
into
mov
push
popf
ret
xor
ss
pusha
sbb
xchg
and
mov
dec
lea
pop
mov
push
cs
cmpsl
sahf
call
and
mov
sub
scas
push
sti
sub
fwait
test
js
mov
sbb
int
add
pop
pop
push
lods
sub
adc
repz
lcall
push
test
jns
or
lock
lret
and
sbb
popf
cmc
andl
jl
jno
mov
push
sbb
scas
xchg
mov
clc
out
xor
add
push
mov
add
push
mov
mov
pushl
jmp
sahf
das
or
mov
mov
pop
mov
jne
dec
test
leave
jo
and
jo
adc
jle
xor
mov
movsb
leave
adc
outsl
xorb
fildll
push
jae
adc
inc
rolb
jp
mov
and
je
dec
std
jbe
in
sub
sub
xor
sbb
jle
sub
adc
cmp
inc
leave
add
adc
jp
insl
push
addr16
mov
jg
scas
ljmp
sbb
dec
xor
daa
movsl
rcll
mov
jno
adc
mov
stos
repnz
sub
dec
lea
xchg
mov
les
dec
dec
pop
mov
add
pop
mov
add
aad
xor
hlt
divl
inc
es
rcr
dec
mov
neg
orl
lahf
or
or
loope
fsubrl
and
jmp
ja
test
ljmp
xchg
imul
adc
ds
pop
mov
and
lods
clc
mov
jns
xchg
ss
cmp
push
shll
push
sbb
mov
out
inc
shlb
rorb
sub
pop
fs
popa
aam
xchg
pop
sbb
sub
scas
push
dec
mov
cmp
inc
add
or
and
pushl
push
add
mov
lods
aam
mov
push
pop
xor
jecxz
lods
std
adc
push
ret
pop
jne
cmp
dec
mov
ljmp
jnp
adc
mov
sub
and
sub
loopne
movsb
repz
fstps
mov
inc
imull
shll
lea
adc
dec
jne
test
cmpsb
je
or
subl
fisubrl
mov
cmp
cmp
fsubrs
and
fwait
aad
or
sbb
pop
movsb
push
push
push
add
sbb
sub
xchg
sbb
push
jnp
pusha
imul
mov
lcall
mov
ror
mov
xor
repz
push
xor
ja
nop
pop
push
inc
outsl
xchg
mov
xor
lcall
pop
cmpsb
or
loope
std
inc
addb
andl
repnz
stos
arpl
test
lock
pop
pop
popf
cmp
fisubl
inc
aad
lcall
loopne
adc
movsl
mov
dec
pop
pop
jmp
stos
and
inc
cwtl
sbb
outsb
mov
cmp
ljmp
ljmp
scas
and
insl
mov
add
popa
xlat
inc
lcall
call
mov
out
dec
cmp
fwait
jp
fadds
sub
dec
cmc
mov
cmpsb
xor
inc
mov
sub
aaa
ss
into
adc
loopne
nop
shl
sub
arpl
outsl
xor
in
std
js
push
out
dec
gs
cmp
clc
cmpl
jmp
in
outsl
pop
outsl
jne
data16
test
pushf
mov
aad
jo
jge
jo
or
loop
mov
add
int
sbb
stos
and
push
xchg
inc
pop
fsubp
add
sub
lods
hlt
jns
lds
xor
out
shlb
pop
loop
inc
add
xchg
mov
lret
mov
clc
inc
in
fcomps
mov
in
enter
dec
jbe
stos
adc
pop
das
jne
out
imul
hlt
mov
jo
and
aas
sub
repnz
loop
adc
into
adc
mov
cmp
add
test
scas
push
add
push
or
sub
and
jl
inc
movsb
sbb
push
sbb
fistps
push
xchg
or
out
sti
jg
push
mov
das
push
out
cmpsl
scas
imul
add
psrlq
fsubl
jne
les
xor
xorl
sub
mov
inc
arpl
out
fmuls
ss
push
cwtl
push
push
or
sti
mov
lock
stos
pusha
or
xchg
inc
add
cmpsb
fisttpl
lcall
loopne
mov
into
aas
sbb
repnz
mov
lods
add
add
repz
aad
lods
mov
fisubrs
xchg
dec
push
mov
in
sub
ljmp
fnstsw
std
xor
icebp
pop
scas
out
sub
xchg
clc
outsb
xchg
mov
repz
idiv
xchg
xchg
push
push
xorb
pop
lock
inc
ss
ja
arpl
inc
test
xchg
aas
push
cs
mov
dec
pop
sub
cmp
lret
pop
jno
push
fcomps
pop
xor
repz
push
movsb
fcomi
daa
xchg
push
mov
jo
mov
stc
sub
aad
xchg
subb
mov
testb
mov
rcrb
imul
cmp
nop
mov
icebp
cld
nop
mov
pop
mov
sub
out
call
sbb
jbe
push
xchg
je
add
push
adc
aas
and
pop
cli
cmpsb
lahf
xchg
fisttpll
addl
push
jmp
lea
fs
iret
jmp
mov
cmpsb
inc
cmc
jbe
xchg
pop
lret
fadd
push
adc
cmc
lcall
iret
dec
and
in
jecxz
movsl
sub
pop
mov
test
pop
mov
xlat
xor
xorb
xor
aad
lds
pushf
cld
scas
lock
repz
shld
subl
inc
cmp
rorl
fidivrl
les
inc
imul
inc
push
mov
push
mov
ret
lcall
imul
adc
subb
cld
xchg
popf
push
out
mov
mov
cmpsl
sub
mov
loop
push
push
push
adc
out
jb
jb
jmp
add
inc
loopne
test
call
xor
add
push
mov
xor
add
push
pushl
lea
push
pushl
pushl
call
test
je
lea
push
mov
xor
add
push
mov
add
push
mov
mov
pushl
call
mov
xor
mov
sub
sub
mov
add
mov
mov
mov
mov
xor
sub
jmp
ja
mov
mov
cmp
jo
and
jo
mov
pusha
faddl
mov
push
dec
or
js
insb
pusha
jb
push
arpl
loopne
cmp
pop
pop
dec
dec
test
dec
insl
js
push
sbb
xor
insb
movsb
out
imul
jp
in
test
mov
mul
cli
lods
addr16
fdivs
or
dec
pop
fiadds
xchg
and
or
adc
dec
adc
mov
inc
push
mov
in
das
cmp
int
sub
inc
pop
xchg
dec
push
ljmp
jmp
stos
adc
out
inc
sbb
pop
sti
adc
inc
nop
icebp
sbb
push
mov
popf
filds
mov
movsl
xorb
xor
jp
push
xchg
cmp
sbbb
bound
aaa
pop
scas
mov
add
in
std
cs
mov
mov
add
add
lea
punpckldq
test
ror
pop
push
xor
push
push
pushf
iret
pop
cld
and
jnp
mov
dec
popf
cmp
sbb
idivb
ja
ficomps
cmp
sub
fnstenv
icebp
int3
adc
inc
movsl
cltd
jg
arpl
dec
mov
sbb
daa
rolb
enter
aas
sbb
jne
pusha
push
in
cmpsb
dec
mov
gs
fistpll
add
adc
fiaddl
mov
lcall
jg
xchg
jno
rolb
sbb
sbb
push
aaa
int
daa
aam
js
outsb
xchg
stos
lahf
pusha
sub
mov
mov
sub
data16
cmp
sbb
sbb
push
cmp
mov
cmp
add
addr16
pop
inc
mov
inc
movsl
bound
movsl
xchg
push
repnz
mov
rol
inc
test
inc
adc
or
enter
xor
cmp
push
mov
pop
outsb
mov
jno
xchg
or
mov
push
add
fistps
mov
imul
cmp
inc
mulps
sbb
pop
test
adc
fstpl
jno
cmp
stos
dec
in
cmp
jp
imul
jns
ror
notl
xor
stos
test
movsl
pop
sub
sbb
pushf
xlat
mov
test
dec
adc
movsl
je
mov
xor
sub
jb
stos
scas
test
les
jmp
lea
jg
xchg
aad
decb
das
or
cmp
jo
imul
ret
or
leave
nop
repnz
cmp
mov
xor
sub
out
jns
lods
outsb
cmc
imulb
mov
pushl
sub
movsb
jae
xor
test
call
mov
add
jecxz
in
sub
dec
mov
andl
jg
scas
pop
scas
sbb
or
add
or
push
jno
mov
jmp
inc
cli
fisttpl
jp
xchg
mov
out
jo
and
jo
movl
push
adc
sahf
jge
cmp
cmp
mov
insl
push
ret
dec
pop
xchg
movsl
pop
xor
push
sbb
addl
xchg
push
arpl
rolb
dec
pop
add
pop
pop
sub
hlt
movsl
hlt
clc
rcr
xchg
shl
movsl
fstps
icebp
sub
sbb
sbb
outsb
sub
jbe
add
xor
or
sbb
scas
ss
dec
inc
push
lock
sub
jge
mov
mov
sti
add
scas
xchg
cwtl
mov
hlt
outsl
cltd
cmp
bsr
call
cwtl
mov
adc
ja
bound
sub
cmpsl
aaa
aad
and
add
test
inc
sahf
repnz
xor
cwtl
fildll
addr16
inc
pop
scas
sbb
sarl
inc
cld
stc
xchg
aaa
ret
cwtl
lret
int
xchg
add
add
add
cmpsb
cmpsl
notl
fstp
and
ret
roll
stc
jle
add
mov
or
sub
lods
call
add
sti
sub
adc
repz
mov
enter
dec
sub
enter
mov
notl
cmpsb
stos
xchg
cli
and
adc
or
aad
lcall
jae
std
or
dec
rol
mov
lds
fbstp
insl
mov
out
xlat
in
push
shll
daa
cmpsl
aaa
xchg
push
push
mov
lcall
or
push
sub
sub
pop
stos
dec
push
pop
and
sub
scas
jne
jle
stos
sbb
hlt
icebp
pop
incb
push
aas
cmp
sbb
inc
lahf
and
pop
das
in
adc
es
and
adc
js
dec
and
mov
insl
cmp
scas
or
pop
inc
jns
pop
loope
mov
aaa
sahf
cli
pop
push
loopne
arpl
loope
push
mov
ja
icebp
pushf
ja
cmc
arpl
jmp
rclb
xchg
cmpsb
sbb
and
jae
jl
jp
xorb
in
out
mov
cs
push
xchg
lds
fsub
fmull
test
outsb
cwtl
cmp
fisubrl
mov
push
dec
adc
test
push
xor
cmpsl
stos
fmull
jmp
fbld
lret
popf
ret
idivl
adc
mov
mov
cmp
sbb
push
les
push
pop
and
nop
push
push
rcrb
mov
insl
mov
cmp
push
dec
mov
out
jns
js
cmp
scas
or
dec
sub
ljmp
incl
decb
pop
fsubrs
out
mov
daa
xor
ja
xor
jns
pusha
jno
and
pop
mov
xor
rorb
inc
inc
mov
mov
adc
in
out
xchg
inc
out
lea
incb
inc
push
jmp
mov
fwait
xchg
fwait
jae
roll
loopne
cmc
xchg
fdivl
and
jo
mov
shrb
cs
leave
in
clc
xchg
push
push
rolb
movsl
mov
mov
pop
sub
xchg
mov
movsb
dec
stos
mov
push
sbbl
ss
imul
lahf
cmc
ret
inc
out
mov
dec
cmp
fisttps
mov
xchg
cmpsl
push
divl
xchg
sub
iret
push
inc
inc
jmp
or
adc
xor
push
ja
ja
scas
mov
fstl
aaa
dec
imul
scas
mov
cmpsl
bnd
insl
repz
mov
shr
out
std
sbb
add
sbb
jmp
or
inc
in
push
into
sbb
and
jb
jge
movsl
mov
test
lods
mov
nop
notb
stc
or
loop
xchg
pop
sbb
push
mov
or
pop
mov
jae
mov
aas
insb
aam
or
inc
aas
bound
xchg
mov
mov
leave
mov
pusha
lcall
repnz
sbb
adc
mov
or
inc
sbb
jbe
je
out
sbb
xlat
cmp
mov
dec
sahf
in
mov
sbb
aas
sbb
stos
adc
mov
loopne
imul
insb
xor
stos
fdivl
sbb
loopne
lods
pop
leave
lret
in
mov
imul
and
les
sarb
pop
push
inc
push
das
pop
sbb
arpl
scas
jecxz
mov
jl
ficoml
mov
xchg
nop
mov
cmc
mov
loop
imul
movsb
dec
fiaddl
inc
ret
out
pop
les
adc
sti
push
pop
lahf
scas
lds
mov
loop
cmp
ljmp
xor
xor
lds
hlt
data16
stc
fwait
pop
push
pop
inc
icebp
jge
xchg
leave
out
dec
pop
sub
test
push
mov
sub
cmp
mov
sub
fisubrs
fdivrp
add
xchg
testl
mov
lea
into
add
fcmovne
call
test
lret
xchg
leave
push
dec
xlat
push
ss
mov
dec
std
ficompl
add
fstpt
dec
jb
and
sbb
dec
adc
lret
stos
adc
xor
inc
inc
out
adc
roll
pop
lock
xor
les
fistpll
movsl
add
cmpb
adc
movsl
fcomps
inc
sub
mov
lea
xor
lret
in
inc
or
sub
xchg
add
dec
sub
pop
out
jb
sub
fs
cltd
divl
adc
or
inc
cli
loope
inc
in
jns
int3
insl
and
or
push
add
inc
repnz
mov
out
in
vaddsubps
push
cmpsb
daa
sbb
fdivrl
out
jge
dec
mov
xor
pop
dec
xchg
decb
pushl
mov
mov
pushl
lea
jmp
mov
push
mov
out
scas
fs
inc
fnstenv
and
jo
push
popf
pop
insb
pusha
jb
es
jge
mov
roll
mov
sbb
mov
ss
xorb
cld
cmp
jecxz
inc
lret
leave
mov
mov
mov
sbb
cs
pop
xchg
test
cwtl
lds
fisubs
lcall
push
sbb
xchg
mov
test
movsb
fstl
and
gs
adc
mov
cmp
lret
cmp
incl
out
pusha
add
jo
push
arpl
js
pop
bound
xchg
test
jo
sub
jbe
imul
mov
ljmp
cld
icebp
xor
vpmullw
and
test
cmpsl
pusha
jmp
mov
push
ret
negl
sbb
jbe
mov
add
aaa
mov
or
xchg
adc
sbb
mov
dec
scas
adc
repnz
xlat
xchg
jbe
mov
shr
adc
inc
adc
out
es
movsb
inc
je
mov
push
adc
es
ret
test
scas
and
jb
in
xchg
out
pop
mov
inc
out
adc
fdivl
sub
xor
pop
adc
notb
inc
mov
aas
inc
push
es
mov
sub
add
dec
and
push
adc
icebp
pop
sub
cmp
shrl
and
outsb
inc
fs
pop
cmp
sbb
jo
mov
jo
ss
add
fdivl
push
inc
and
push
inc
ja
data16
int3
or
mov
add
sub
loopne
jecxz
cmpl
inc
xchg
mov
push
push
mov
cs
mov
mov
ret
xor
and
sbb
xchg
test
ficoms
out
mov
faddl
pop
adcl
js
dec
sbb
xlat
pop
jmp
xchg
and
or
and
adc
fxam
aas
push
inc
test
test
mov
ljmp
pop
mov
and
xchg
and
mov
jmp
cmp
aad
sbbb
ja
in
mov
cld
adc
mov
stc
into
push
icebp
ret
push
pop
icebp
fadd
shrb
pusha
xchg
sbb
aas
icebp
cs
push
stc
adc
push
cld
add
cmp
mov
test
test
xor
jmp
dec
or
aaa
je
mov
ja
lods
sub
xor
or
push
lret
dec
push
cmp
jp
fdiv
mov
scas
cmp
jnp
shrb
shrl
mov
jno
pop
rdtsc
sbb
cmp
in
cmpsl
sub
jno
mov
or
fldl2e
pop
lods
icebp
push
xchg
loop
pop
fdivr
mov
gs
dec
test
adc
cli
xor
daa
xor
cmpb
stc
jne
ret
adc
sub
pushl
lea
jmp
add
out
out
xor
call
inc
icebp
and
and
jo
dec
aam
mov
rol
cmpsl
das
dec
push
fs
sub
jecxz
popf
jmp
cmp
enter
mov
jae
int3
xchg
dec
and
movl
push
push
imul
cld
add
sahf
mov
dec
icebp
mov
cld
out
scas
jp
inc
dec
scas
xchg
xor
lahf
sub
xchg
ss
aad
adc
inc
les
pop
sarb
je
push
in
add
pop
push
mov
sbb
mov
das
dec
pop
push
pop
sahf
or
xchg
movsl
fwait
xor
cmpl
inc
pop
pop
mov
cmp
or
fs
and
aam
add
mov
push
dec
stos
cmp
ret
cmp
bound
cmpsl
mov
pop
bswap
xlat
or
push
das
lret
sbb
cli
lret
xchg
dec
inc
std
xor
test
out
push
addr16
inc
mov
push
or
jnp
mov
lods
push
ljmp
push
insl
sbb
sub
sti
mov
mov
or
cmp
inc
push
cmpsl
mov
xlat
stc
popf
insl
push
pushf
inc
push
push
leave
mov
shll
clc
xor
push
mov
jb
inc
pop
push
jns
sub
fwait
repz
daa
les
test
lock
mov
dec
sub
xchg
popf
push
xchg
or
ja
aam
mov
xorb
dec
jge
sub
into
ret
inc
mov
insl
xchg
addr16
pop
sbb
add
sti
aas
mov
jb
rolb
cwtl
ljmp
dec
mov
lret
aam
pop
out
sub
addb
or
test
pop
decl
or
jbe
int
push
adc
fwait
aad
out
adc
cs
push
adc
sub
fsin
pop
sub
aad
sub
call
and
lock
pop
or
cmc
loopne
push
ret
das
dec
push
add
adc
push
sbb
test
test
pop
fmuls
dec
fstpl
cmp
pop
adc
mov
adc
pop
jmp
cmp
push
mov
mov
fmul
xchg
mov
loopne
ret
clc
inc
xorl
xor
fstpt
pop
xchg
inc
jmp
mov
mov
frstor
test
jp
in
inc
adc
enter
repnz
stos
cmpsl
ja
movsb
xchg
dec
fcmovnb
inc
mov
sub
xor
xchg
cs
adc
pop
icebp
mov
shrb
cmp
jae
sub
xchg
cmp
clc
ret
dec
shrl
and
jecxz
test
scas
inc
mov
lods
or
jno
shrl
xchg
jae
mov
sbb
cmc
pushl
lea
pushl
lea
pushl
xchg
inc
inc
sub
push
pop
jmp
cmpsb
jnp
or
lahf
jo
sbb
jo
jge
jo
adc
sahf
dec
cmpsb
sbb
xchg
ljmp
push
and
icebp
push
outsl
push
in
int3
faddl
mov
xlat
mov
ret
stos
jae
out
stos
rcll
divl
pop
add
sbb
jecxz
ficompl
pop
add
jnp
inc
movsl
mul
fistps
out
push
in
aad
lcall
xchg
rorl
scas
cmc
pop
loop
dec
roll
call
xor
call
mov
inc
xchg
and
nop
sar
xchg
jmp
insl
popf
int3
test
shr
mov
xor
in
push
xor
in
fs
sbb
cmpsb
imull
mov
sbb
cmc
mov
jne
rorl
negl
outsb
add
into
out
test
add
push
outsb
leave
jle
xchg
sbb
shlb
sbb
bnd
xor
or
add
outsl
mov
in
pop
fimuls
push
cltd
dec
cltd
xchg
adc
pop
adc
aas
icebp
lods
lcall
sub
adc
mov
jb
xchg
or
movsl
dec
add
mov
inc
inc
xorl
cli
cmp
sbb
xor
mov
xchg
fcmovne
push
jmp
aam
fucomp
orl
mov
mul
jns
outsb
icebp
add
popa
cli
push
cmpsb
fwait
mov
push
test
call
inc
adc
imul
dec
xchg
push
scas
mov
mov
fwait
mov
ljmp
pop
outsb
test
cmp
mov
hlt
jno
lods
or
cmp
mov
cs
or
mov
shr
dec
rcrl
sub
cmp
lcall
pusha
xchg
and
mov
or
cmp
aaa
pusha
sub
shlb
ret
cli
jle
data16
pushf
fldenv
pop
clc
out
shll
sub
add
insl
enter
nop
xchg
lcall
adc
and
and
mov
in
or
and
in
cmp
inc
jg
push
cmp
pop
js
mov
push
movsb
pop
xchg
out
mov
mov
ret
and
mov
add
pop
fiadds
cltd
xor
pusha
xchg
sarb
xor
cmp
dec
scas
out
cli
sbb
outsb
rol
jo
add
fnsave
jns
mov
cs
pop
inc
loope
add
push
cmpsl
xchg
mov
and
js
mov
outsl
mov
cmp
mov
cld
cli
pop
fidivrl
std
adc
sub
push
add
inc
push
out
jmp
in
fptan
fimull
repz
sbb
jnp
cmp
sbb
adc
cmp
xchg
rcll
mov
xchg
adc
jae
mov
mov
cmp
lahf
sti
xchg
sbb
push
mov
fcmovnb
movsl
sbb
aas
sbbl
fcompl
sub
or
jns
loop
mov
inc
loopne
or
jmp
out
mov
ja
add
xchg
shrl
and
jo
jl
cmp
data16
jle
pop
ds
sub
xchg
scas
sub
cmp
or
out
mov
call
and
in
jg
inc
mov
imul
test
mov
sub
daa
es
add
cwtl
dec
fcompl
or
lds
cmpsb
push
cmpl
clc
jae
popf
cmpsl
int
xor
filds
movsl
rcll
sbb
cmp
in
lret
out
xor
ja
jecxz
jp
cmp
scas
in
jmp
repz
pop
out
pop
add
pop
cmp
or
cmp
rorl
or
xchg
out
es
xchg
shlb
icebp
add
or
mov
mov
loop
scas
cmc
popf
mov
pop
aam
hlt
xchg
test
jge
mov
ret
fbld
xor
bound
xor
jge
and
mov
mov
stc
xor
xchg
pushf
and
mov
into
push
rol
mov
fcomps
jnp
ret
out
or
stos
mov
fwait
jmp
sbb
mov
push
dec
xchg
xchg
jl
jnp
out
push
outsb
movsw
dec
jb
test
imul
xchg
or
dec
and
sub
call
pusha
rcl
and
testb
xor
xor
add
mul
popa
dec
fnstsw
int
jae
add
hlt
and
adc
ja
push
xchg
fadds
push
inc
cwtl
nop
aam
or
divb
push
movsl
les
mov
lods
push
or
fistl
pop
clc
push
loope
or
outsb
call
roll
xlat
or
pop
xor
vorps
fwait
sbb
shrl
lahf
xlat
lods
xchg
cli
xchg
lret
mov
push
sbb
jge
mov
ja
mov
jnp
mov
mov
ljmp
mov
push
test
insl
adc
sti
sti
or
filds
push
jno
pushf
pop
iret
inc
xor
addr16
mov
jle
mov
stos
sbb
xchg
scas
imul
int3
jno
xchg
fs
cmp
add
jne
outsl
sbb
sbb
dec
push
push
in
cwtl
add
mov
fnstenv
push
mov
jecxz
int
and
jno
data16
aas
sub
in
adc
insl
jne
pusha
fmuls
sbb
sub
jmp
pop
add
push
adc
insl
xor
lahf
adc
gs
js
jne
sub
mov
lea
xchg
scas
cld
je
dec
or
mov
test
xchg
dec
enter
cmp
cmc
lods
mov
pop
xor
push
fidivs
test
lods
stos
mov
repz
mov
inc
xor
lret
cmp
mov
cmp
cmpsl
lret
mov
int
imul
xor
mov
pop
ret
sbb
add
pop
pop
pop
leave
ret
push
mov
sub
push
subl
mov
sbb
mov
mov
mov
sub
imul
mov
movl
neg
movl
mov
mov
or
mov
add
mov
adcl
mov
xor
xor
mov
sbb
mov
jmp
arpl
cmc
xchg
cmc
arpl
pop
das
mull
aas
lcall
jge
jo
sub
add
scas
mov
jmp
lods
stc
lret
cmp
sbb
pop
jmp
fdivrs
faddl
data16
jo
add
leave
and
inc
xor
sub
dec
xor
cltd
lcall
pop
mov
and
fldpi
into
xchg
or
pop
add
shrb
testb
inc
cmc
hlt
pop
mov
or
dec
popf
mov
out
and
inc
cmp
mov
add
test
mov
adcl
in
dec
mov
or
fidivrl
adc
sbb
shll
insb
inc
test
xor
adc
xchg
dec
pop
pop
pusha
inc
sub
pushf
push
orl
inc
inc
and
push
les
and
xchg
sub
fwait
jnp
out
jb
ret
xchg
hlt
data16
test
ds
lea
add
push
scas
bound
mov
fstpt
cmpsb
ss
movsl
out
adc
mov
mov
jae
dec
jmp
andnps
or
mov
pushf
addr16
test
push
ret
fldcw
std
lea
dec
xchg
mov
icebp
xor
inc
stc
cwtl
scas
cmp
mov
sbb
sbb
lret
sbb
cmp
jp
sbb
sbb
and
and
stos
or
add
aam
scas
in
lret
push
int3
mov
mov
in
js
and
jge
lock
repz
or
cltd
adc
xchg
loope
jmp
ficompl
cmp
mov
scas
jecxz
cwtl
or
xor
call
sti
ss
add
test
cld
nop
bnd
bound
lcall
in
add
popa
cmp
test
sbb
lods
push
ficoml
or
xchg
loop
push
gs
or
add
into
daa
mov
repz
fmull
mov
enter
rcl
inc
jmp
fs
outsb
jmp
jns
pop
mov
aad
sarb
pop
mov
pop
call
xchg
popf
out
das
mov
dec
dec
lret
and
xlat
fisttps
sub
and
jecxz
mov
mov
push
xchg
jne
cmp
inc
in
sub
xchg
es
lret
stos
push
push
jecxz
push
cmp
enter
pop
and
mov
pop
cmpb
mov
adc
xchg
hlt
cmp
sbb
fistps
jg
pop
jle
shlb
mov
mov
insb
test
xor
addb
cltd
cltd
mov
or
push
pop
stos
push
pop
pop
std
or
jg
stos
pop
pop
in
mov
sub
jmp
clts
rolb
mov
sti
jecxz
clc
adc
jp
pop
lcall
jecxz
push
jnp
cwtl
sbb
call
jne
in
and
sbb
fildl
pop
or
jmp
clc
out
sub
test
test
pop
adc
xchg
sub
mov
stos
clc
gs
mov
jbe
pop
sbb
out
loop
into
pop
or
fs
mov
out
aam
das
lods
add
push
adc
pop
insb
and
lret
ffree
and
popa
incl
pop
xor
push
ss
push
popa
call
sbb
add
xor
mov
mov
and
xor
adc
add
movl
cmpl
je
cmpl
jne
pushl
call
mov
dec
mov
jmp
mov
adcl
jmp
xlat
mov
mull
mov
lret
inc
inc
dec
es
jo
xchg
and
fistpl
int
in
inc
sahf
inc
cmp
and
adc
rol
lock
or
fwait
inc
daa
std
dec
rorl
pop
xor
pop
call
mov
pop
stos
jp
lcall
jns
movsl
push
call
jmp
mov
pop
lea
cmpsb
add
orl
call
daa
adc
mov
out
and
jbe
idiv
inc
gs
bound
mov
ja
mov
mov
cmp
push
rep
push
lock
jae
xor
add
mov
and
or
lds
dec
das
cmp
mov
imul
ss
shrl
cmp
mov
inc
fst
or
and
icebp
mov
pop
mov
fwait
jle
sbb
push
js
adc
arpl
cmpsl
imulb
mov
ss
sti
mov
push
xchg
sub
dec
rol
pop
mov
sbb
clc
push
std
jno
mov
test
and
or
mov
fcmovbe
and
adc
push
stc
lods
mov
fmull
ljmp
das
push
movb
xchg
jo
jecxz
jecxz
add
fmull
imul
cld
cmc
inc
dec
push
mov
fcmovu
daa
mov
pushl
sahf
and
in
mov
jmp
call
cwtl
iret
inc
test
mov
test
xchg
lock
int
xor
mov
push
mov
mov
int
xor
mov
jp
test
dec
push
stc
jns
movsl
inc
rep
lock
rcl
fbld
mov
cmp
sahf
pop
mov
insb
mov
movhlps
popa
movsl
xor
cmp
cmpsl
xchg
mov
mull
es
inc
fbstp
pop
sarl
out
lret
insl
aad
loope
mov
dec
push
sbb
mov
stc
or
hlt
fnstsw
fiaddl
push
iret
imul
pushf
dec
push
repz
nop
iret
jmp
gs
mov
in
push
xchg
sub
cmp
test
or
mov
hlt
jne
mov
pop
aam
xor
stos
sub
jb
out
push
roll
lea
mov
test
lds
xlat
mov
sti
fisttpl
push
jo
out
mov
mov
ja
push
jbe
inc
pusha
cwtl
int
cmp
out
or
cli
icebp
inc
outsb
fdivrl
in
out
dec
es
push
sbb
mov
retw
mov
dec
mov
ret
mov
push
adc
jg
ja
or
or
jle
mov
lock
incb
es
mov
dec
and
sub
inc
cmp
xor
icebp
mov
scas
mov
out
int3
out
cli
add
enter
and
push
inc
cmp
push
jle
xchg
call
enter
adc
dec
push
in
int3
cmp
in
dec
and
cmp
addl
jns
pop
les
icebp
push
outsl
lods
jns
mov
lret
call
insl
in
std
jmp
flds
sub
push
test
mov
lret
in
jno
movl
movl
adc
movl
andl
jmp
xor
or
inc
mov
cmpl
jae
cmpl
jne
push
push
push
push
call
jmp
add
movl
andl
jmp
into
iret
cmpsb
cmp
sbb
mov
sbb
jo
jge
jo
cmpsl
add
loope
cmpsb
xchg
les
cmp
jae
mov
sbb
hlt
lahf
lock
daa
sbb
adc
cs
aad
fstpl
inc
mov
and
movsl
pop
push
push
adc
lret
jnp
gs
pop
sbb
xchg
jecxz
pop
jle
loopne
mov
std
cmp
add
and
mov
popa
pop
xchg
shl
rorl
rolb
enter
pop
push
adc
or
int
xchg
lds
mov
mov
leave
loop
sub
iret
fadds
push
add
mov
sub
loopne
sbb
faddl
inc
add
mov
xchg
cmp
loop
cmp
out
push
ljmp
shrb
add
rclb
xor
push
dec
in
dec
mov
repz
in
adc
dec
fwait
cs
popa
cmp
cmp
inc
jl
popa
aad
rorb
xchg
pop
add
call
jno
push
mov
cld
insl
fwait
out
cmp
xchg
cmpsl
push
push
and
dec
mov
xor
ljmp
ljmp
mov
push
jmp
dec
push
xchg
ret
movsb
add
cmovne
mov
jns
xchg
pop
mov
push
imul
in
rol
lods
adc
xchg
jmp
dec
pop
sub
loopne
lock
cmpsl
aam
ret
add
out
sbb
loopne
daa
mov
insb
sub
or
call
or
sahf
cli
sbb
aas
in
push
lret
scas
leave
xor
sahf
iret
or
xchg
mov
fs
test
mov
ret
rorb
and
insb
popa
mov
sub
repz
xchg
enter
daa
and
out
inc
cltd
rolb
gs
sbb
cmp
popf
cld
adc
jb
cli
clc
faddp
add
mov
inc
jl
fwait
sbb
incl
test
lsl
xchg
xor
test
aaa
scas
dec
mov
lods
and
sub
cmp
inc
or
push
xchg
dec
push
call
or
and
sbb
pop
mov
pushl
fisttps
xchg
cmpsl
pop
xchg
push
dec
cwtl
sbbb
add
insl
add
int3
loope
test
test
ljmp
clc
fisubl
mov
cmpsl
push
insl
test
mov
loopne
jle,pn
aas
cmp
push
dec
mov
mov
loop
insl
dec
imul
iret
into
andb
adc
xchg
int
xchg
mov
xchg
mov
imul
pushf
xlat
inc
lahf
ds
dec
adc
adc
ret
imul
nop
pop
cmp
popf
push
jmp
dec
mov
fistpll
sub
rol
out
sub
out
imul
push
jmp
jbe
xchg
fwait
mov
mov
out
lods
mov
push
lds
pop
fstp
mov
iret
xchg
mov
mov
out
add
pop
adc
mov
movsl
xor
push
dec
lret
ret
mov
incl
jnp
cmc
push
outsl
rorb
mov
out
adc
repnz
bound
mov
mov
stc
test
sahf
stc
push
mov
mov
cmp
pushf
clc
movl
andl
xor
or
inc
mov
cmpl
jne
pushl
pushl
push
pushl
pushl
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
call
cmpl
jne
xor
add
inc
mov
jmp
mov
xor
mov
movl
adc
mov
xor
sub
mov
add
movl
cmp
movl
je
movl
push
movl
jmp
mov
movl
cmpl
je
cmpl
jne
pushl
push
push
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
xorl
sub
mov
add
mov
jmp
addr16
xchg
jno
ja
dec
in
std
popf
xor
in
jo
lahf
jge
jo
jl
loope
adc
cmp
aaa
aad
cmpsl
xchg
xor
fs
sub
push
sbb
repnz
lods
mov
xchg
cmc
cli
push
add
loop
ja
sub
mov
pushf
loope
sub
mov
sub
js
mov
lds
xor
insl
popa
sarl
sub
mov
imul
inc
repz
in
push
imull
push
cmpsb
pop
mov
xchg
add
jb
movsl
cld
xchg
bound
hlt
pop
pop
das
jmp
scas
jno
inc
xor
aaa
lret
mov
push
pop
inc
dec
sbb
pop
aam
push
stc
jg
out
xchg
pop
pop
sub
dec
adc
fninit
aaa
aas
or
cmp
xorb
jne
or
fbld
lret
xchg
lret
imul
fisubrl
ja
cmp
rolb
enter
cmp
jno
scas
add
push
aam
mov
jl
fisubrl
mov
in
scas
shrb
cmpsb
dec
mov
fsts
cli
xchg
outsl
rorb
inc
lcall
in
inc
xor
movsl
inc
mov
xor
jae
inc
jb
scas
mov
ret
cmp
pop
inc
mov
pop
test
xor
in
dec
fidivs
lret
sahf
jae
out
jge
xor
lds
ljmp
pusha
sti
inc
insb
aas
jno
jnp
das
adc
mov
mov
dec
cli
ror
lahf
mov
cmpsb
loope
mov
scas
addr16
sarb
and
dec
scas
and
rep
loope
fldenv
out
outsb
mov
dec
andl
cmp
enter
repz
test
mov
les
dec
insb
jns
push
xchg
adc
lret
filds
lock
sbb
xor
jbe
xchg
int
cs
daa
add
dec
mov
mov
testl
push
aas
mov
xchg
test
add
mov
sub
daa
pusha
push
mov
adc
ret
fnstsw
lods
neg
sahf
jge
pushf
scas
test
pop
fwait
ljmp
stc
mov
data16
jl
stc
dec
testl
inc
mov
jo
and
add
inc
test
pop
pop
sti
rcrb
mov
adc
iret
push
insl
dec
js
push
out
movsb
push
icebp
pop
jbe
pop
leave
add
or
imul
stc
cwtl
lahf
pusha
out
cmc
pop
leave
popf
daa
xor
pop
pop
addr16
rclb
jmp
xchg
push
aas
lret
sub
mov
lret
mov
xlat
jne
loope
push
lret
mov
inc
adc
sub
jp
bound
fisubrl
test
lahf
aaa
sub
sbb
push
or
idivb
mov
lahf
xchg
rcl
inc
into
adc
imul
movsb
xlat
or
nop
cwtl
ds
outsb
cltd
xor
outsl
pop
lea
pusha
xor
jl
addr16
sub
or
mov
outsb
subl
inc
mov
or
test
ret
pop
and
cmp
adc
xlat
lret
inc
fstpt
mov
nop
insl
data16
ds
hlt
xchg
xor
xorl
add
movl
cmp
movl
jb
mov
sbb
mov
xor
sub
xor
movl
cmpl
je
cmpl
jne
pushl
push
pushl
push
pushl
call
mov
dec
mov
jmp
andl
jmp
xor
or
inc
mov
cmpl
jae
cmpl
jne
push
pushl
call
cmpl
jne
mov
inc
mov
jmp
adc
add
sbb
add
imul
sub
mov
movl
cmpl
je
cmpl
jne
pushl
push
call
mov
dec
mov
jmp
mov
sub
cmp
ja
mov
xor
add
jmp
mov
mov
xor
xor
add
add
imul
mov
mov
sub
cmp
ja
mov
jmp
mov
mov
xor
xor
add
jmp
xor
mov
mov
jae
jg
ja
int
icebp
add
jo
lahf
jge
jo
shll
push
and
dec
aaa
mov
ficompl
dec
push
mov
dec
cmpsb
xor
rorl
test
jo
pop
fnstcw
or
sbb
jl
fildl
lock
mov
aaa
pop
dec
mov
inc
cmp
adcb
out
stos
jne
sub
push
push
repnz
inc
add
cmp
outsl
add
imul
xchg
add
sti
add
mov
ror
cmp
and
inc
mov
bound
fidivs
mov
mov
mov
ret
rol
push
fsubl
dec
mov
fsubs
es
adc
pushf
add
aaa
or
clc
or
pop
xor
in
leave
pop
pop
mov
and
test
mov
cmp
xor
dec
mov
mov
sub
mov
sbb
jo,pn
into
sarl
inc
icebp
and
push
bound
pop
aam
cwtl
flds
fnstcw
aam
int3
push
movb
jo
pop
test
push
jmp
lds
jae
lret
sub
sti
mov
mov
adc
movsb
pop
setnp
dec
xor
sub
ss
imul
pop
mov
fxch
mov
push
mov
xlat
clc
iret
inc
mov
push
cs
lret
or
cmp
fists
repnz
push
fmul
mov
sub
call
addl
rolb
ficompl
xor
rsm
out
ljmp
insl
adc
cmpsb
mov
into
inc
mov
in
in
das
mov
push
aad
fwait
clc
jbe
cwtl
andb
shll
mov
lahf
pop
addr16
int3
leave
cli
cmp
push
xchg
pop
cltd
data16
out
xchg
nop
mov
bound
popa
ljmp
es
call
xor
stc
inc
sarb
sbbb
cld
push
outsb
loope
pslld
aam
std
jecxz
stc
sbb
imul
add
leave
xchg
mov
xorb
inc
leave
jg
incl
cmp
daa
dec
or
test
sub
repnz
jae
outsl
dec
leave
add
outsb
je
inc
mov
sub
insl
adc
cmpsb
negb
sub
das
mov
adc
jg
orb
lret
mov
push
sub
shrl
fwait
and
mov
ds
add
cli
cmp
enter
xor
jo
mov
inc
cmp
xor
mov
push
cltd
repnz
fs
inc
rcll
aaa
cmc
lock
stc
test
cmp
xchg
cltd
xchg
adc
testb
jnp
scas
addb
dec
push
in
in
mov
stos
ss
test
mov
pop
shlb
movsb
imul
aaa
ret
orb
ret
aas
adc
movsl
jo
daa
popa
fcmovnb
push
stos
dec
dec
pop
pop
repnz
lret
es
ljmp
xor
fstps
js
es
xor
pop
and
adc
push
cmp
pop
xchg
rol
mov
imul
into
mov
aaa
ds
add
mov
jp
das
add
pop
or
fwait
mov
sbb
test
inc
mov
push
jne
test
cs
jmp
shlb
sub
lret
fidivs
ljmp
jge
jo
cmp
mov
push
sbb
ss
in
dec
stc
lea
mov
scas
outsl
ss
es
mov
sub
xchg
jbe
je
inc
mov
and
das
mov
inc
fwait
int3
sub
mov
fnstsw
out
pop
hlt
and
iret
repz
imul
jle
sbb
in
neg
inc
scas
int3
xchg
adc
push
mov
cmpsb
les
ss
mov
mov
stos
push
mov
or
mov
and
adc
icebp
fisubrl
addr16
mov
pop
rolb
sub
jns
xor
movsl
xchg
incb
fcoml
in
jno
mov
jl
inc
dec
and
loope
dec
mov
cltd
int3
ror
es
and
mov
leave
xchg
cld
pop
imulb
jne
in
leave
fsubrl
cmp
mov
push
icebp
lods
xlat
pop
sbb
sbb
xchg
sbb
stos
movsl
sbb
imul
mov
mov
mov
sbb
into
and
lods
cmp
add
push
in
inc
jnp
dec
jecxz,pn
cmp
xor
jnp
mov
sbb
stc
add
push
cmp
std
jp
xchg
mov
lock
js
jbe
xchg
testb
mov
cld
xchg
mov
sub
pop
popa
add
cltd
add
lods
or
jae
push
inc
pop
push
sbb
ret
sub
pmuludq
imul
pop
frstor
mov
outsb
inc
scas
jl
mov
jg
xchg
mov
and
mov
and
and
sbb
jae
or
cmp
xorb
push
dec
sbb
es
dec
sbb
ds
lahf
inc
dec
aaa
adc
sbb
sbb
xor
insl
mov
jp
pop
into
pop
pushfw
adc
movsb
push
sub
int3
in
imul
sbb
sbb
pop
sti
negl
movsb
add
scas
iret
sarb
loopne
jb
ret
push
mov
adc
lret
fists
data16
jnp
sub
bnd
xchg
cwtl
ret
std
testb
push
mov
fdivl
add
bound
dec
cmp
rcrl
sbb
aas
and
lahf
outsl
push
cmp
pushf
in
loopne
mov
loopne
bnd
cmpsb
push
ja
repz
jmp
or
out
jmp
xor
fmuls
push
jno
pop
add
xchg
in
jg
mov
sbb
push
push
add
lock
ja
fdivr
outsb
imul
mov
adc
xorb
das
mov
movb
in
notl
scas
fsubrp
out
push
stos
movsb
imull
fstpt
aas
mov
and
rcrl
nop
xor
flds
insb
outsl
xchg
test
push
dec
fldt
es
push
jnp
push
pop
push
pop
test
pop
pushf
mov
das
mov
out
fcomps
stc
push
or
and
out
int
inc
lods
push
pop
addl
adc
adc
ret
cld
ljmp
sub
jmp
sbbb
xor
lods
pop
pop
lods
shrb
testl
mov
fs
lods
inc
sub
clc
cmc
mov
mov
mov
mov
sub
cmp
ja
mov
jmp
mov
jmp
cmp
mov
loope
loop
pop
loop
popa
add
lahf
jge
jo
outsl
mov
mov
mov
ss
in
xor
xor
fnsave
stc
push
and
pusha
jne
imul
pop
cmp
imul
adc
xchg
loope
aaa
test
jmp
lods
popa
lahf
or
mov
std
lock
pop
loope
jne
les
dec
shlb
arpl
jbe
aaa
push
not
inc
les
adc
sub
pop
mov
jmp
xchg
jbe
add
hlt
jmp
clc
jg
sub
roll
ss
push
dec
mov
xlat
in
in
add
mov
jmp
sub
insb
pusha
aas
adc
add
sbb
shrb
lret
arpl
push
cmpsl
call
mov
adc
xchg
outsl
push
sahf
pusha
jg
in
fcoml
inc
andb
cmpsb
mov
test
sbb
roll
or
jge
push
out
mov
dec
call
call
cmp
inc
lea
in
ja
fstpt
cs
jmp
mov
push
pop
mov
push
jle
pop
dec
xor
add
aad
mov
dec
cwtl
add
pop
mov
mov
mov
loopne
stc
loope
leave
fisubl
daa
sbb
cwtl
repnz
in
rcl
add
sahf
cmp
jae
arpl
vfrczss
popf
adc
mov
loopne
stos
gs
inc
inc
jmp
sahf
and
aas
xchg
cmp
lock
aas
and
je
sub
insl
cmp
rcll
fidivrs
repnz
xor
shrl
jno
or
or
jb
les
cmp
lock
neg
mov
sbb
mov
mov
and
mov
mov
ficoml
adc
xchg
add
adc
jmp
cmp
push
adc
sbb
call
xor
mov
dec
mov
mov
fs
cmc
jge
cmp
mov
movsl
jmp
push
lods
mov
mov
xchg
popa
sub
or
dec
pop
xchg
rolb
jbe
rorl
sbb
shl
stos
xor
jecxz
add
or
mov
clc
mov
xchg
and
scas
xor
or
cmp
or
dec
fwait
pop
test
mov
jl
mulb
mov
sahf
std
mov
mov
mov
outsb
adc
inc
inc
je
add
xchg
lcall
rorl
jl
faddl
mov
mov
jb
mov
inc
mov
push
mov
xchg
cltd
pop
popa
adc
and
adc
mov
sti
sbbb
bnd
outsl
mov
sahf
dec
daa
imul
aas
xchg
daa
sbb
in
int3
push
pop
arpl
jns
and
je
add
mov
pop
adc
pop
insb
mov
test
lds
sub
cltd
addb
pusha
scas
pop
insl
insl
sub
dec
js
loopne
push
dec
test
lcall
popa
out
or
sub
and
sti
mov
xor
xor
add
add
imul
mov
mov
sub
cmp
ja
mov
jmp
mov
mov
xor
xor
add
add
imul
mov
jmp
xchg
fcomi
push
jb
mov
shlb
in
pusha
xorl
jge
jo
adc
pop
sub
jp
xchg
mov
mov
xchg
ret
cmp
stos
xchg
inc
mov
lods
xor
mov
mov
jmp
add
lock
pusha
push
cltd
mov
cmpsb
cmp
bound
fildll
or
aaa
test
test
imul
movsl
mov
mov
pop
cs
lods
das
push
arpl
jp
jnp
jo
mul
rdmsr
sbb
mov
push
xchg
hlt
jmp
adc
mov
loopne
jnp
aam
xor
fsubr
aam
jnp
test
test
mov
add
loop
mov
subb
std
sub
dec
jnp
mov
in
sub
mov
mov
lcall
mull
jle
clc
pop
ret
dec
in
xchg
pop
xchg
pusha
cmp
jg
out
ss
mov
data16
icebp
mov
lods
jge
push
dec
dec
push
aaa
or
or
mov
dec
or
leave
ficoms
fistps
inc
inc
je
mov
xchg
or
mov
call
bound
les
enter
mov
ja
loop
and
sahf
lret
adc
fidivs
push
xor
adc
xchg
or
fdivrl
stos
inc
xor
cmp
jbe
lods
mov
dec
enter
das
cli
in
insl
adc
dec
aad
sub
fdivrl
nop
rcrb
inc
in
add
pop
push
adc
adc
pop
inc
and
out
call
nop
jae
mov
pushf
mov
fisubrs
xchg
fdivs
movsl
out
bound
loope
dec
mov
in
pop
inc
stos
push
lods
mov
fists
sub
and
mov
xorb
or
fstpt
das
int3
icebp
jg
xor
dec
xor
arpl
testb
nop
adc
sbb
mov
ss
pop
cmp
adc
jg
daa
fdivrs
lret
cmc
lods
or
xor
cmp
ret
sbb
sub
idiv
ljmp
insl
mov
loop
pop
stos
jmp
ss
dec
pushf
fwait
int3
xlat
xchg
iret
enter
inc
jae
mov
divb
into
mov
scas
into
rclb
xchg
inc
sub
inc
mov
push
or
push
xor
test
jbe
inc
mov
inc
sub
ss
ret
cmp
and
sbb
cs
daa
stos
dec
call
or
in
xchg
fwait
push
cmp
inc
scas
pop
lret
push
cmc
movsl
std
imul
mov
roll
movsl
adc
lods
push
mov
inc
mov
fldenv
jmp
mov
dec
ret
test
add
fsubrl
xor
push
fidivl
loop
mov
call
mov
test
stc
loop
jmp
les
testb
sbb
xchg
iret
jmp
push
cltd
sub
push
loop
aaa
xchg
fiaddl
sub
pushl
addb
sub
cld
shrb
test
sbb
jb
clc
mov
cmpsl
repnz
inc
icebp
imul
outsl
pop
insb
lds
pop
lock
cmp
ja
mov
jmp
mov
mov
xor
xor
add
add
imul
mov
mov
sub
cmp
mov
jbe
jmp
xchg
dec
inc
inc
inc
push
xchg
dec
fdivs
adc
ficoml
int
jo
lahf
jge
jo
dec
shrb
pop
mov
cmp
into
mov
std
push
lds
pop
call
imul
fisubl
inc
xor
iret
fmull
cli
pop
fnstsw
shl
inc
mov
lea
cmp
sub
sbb
movsb
push
icebp
outsb
add
jns
adc
ret
jmp
fisttps
dec
mov
cltd
fidivrs
int3
dec
xor
add
inc
daa
aam
filds
aas
jle
xchg
or
add
test
dec
fiaddl
or
dec
sarb
sub
cs
test
mov
inc
ret
lods
cmp
ja
ljmp
fst
daa
aas
out
mov
sbb
in
lret
call
pop
cld
mov
pop
sahf
or
gs
adc
inc
jbe
sbb
cmp
push
cmp
or
mov
aam
inc
rcrl
hlt
dec
jmp
sub
or
dec
jb
nop
test
insb
mov
add
jmp
aaa
inc
popa
test
fiadds
insb
dec
adc
mov
test
ret
mov
xchg
negb
jp
adc
outsb
push
fsubrs
lods
mov
xchg
cmpl
es
cmpsl
mov
ret
rcll
xchg
xor
adc
dec
out
adc
pop
mov
mov
pop
dec
xor
insl
call
imul
fs
mov
push
fdivrl
jmp
lcall
push
or
subb
jle
jo
push
ss
pop
outsl
jne
inc
cltd
cli
push
cs
mov
adc
sbb
xchg
cmc
loopne
jbe
pop
xor
and
sub
loopne
lret
arpl
mov
shll
in
adcl
lahf
hlt
cmp
stos
les
es
movsl
inc
add
int
sbb
adc
xchg
sub
jne
cmp
mov
dec
sub
mov
inc
xor
ficoml
cmc
xor
leave
rolb
lcall
lret
std
ss
jne
mov
popa
jno
xor
jmp
ret
popa
mov
jge
hlt
sub
sbb
mov
cmp
idivl
mov
outsb
nop
ljmp
nop
enter
mov
mov
adc
icebp
leave
add
sbb
mov
or
inc
and
clc
repnz
je
cli
sbb
fs
nop
test
sub
add
or
shrb
and
rcr
push
sbb
rep
pop
call
mov
inc
jecxz
jnp
je
adc
cmp
movsb
xchg
pop
mov
rolb
and
cmp
movsl
sbb
sbb
push
std
cli
lahf
cmpsb
sahf
cli
lods
shll
inc
hlt
mov
lcall
je
andl
test
jnp
ljmp
rcrl
mov
loopne
mov
xchg
xorb
pop
mov
rolb
test
stc
int3
push
push
jp
adc
or
cmpsb
xchg
mov
aas
mov
test
sub
inc
arpl
mov
mov
xor
xor
add
add
imul
mov
mov
mov
mov
add
movl
mov
movl
movl
mov
xor
add
jmp
mov
jmp
lcall
out
mov
mov
lahf
jge
jo
jl
gs
dec
xchg
inc
lret
xchg
out
dec
push
rcll
test
fmull
adc
call
jmp
shll
cmp
sbbb
sub
jae
push
cmp
movsl
or
fidivrl
push
call
and
test
rolb
mov
mov
xor
adc
xor
int
jae
sbb
mov
ret
jno
mov
mov
mov
orl
pusha
ret
push
jns
stc
jns
mov
nop
negl
aad
jns
int3
mov
sbb
pop
daa
fwait
inc
push
mov
popa
adc
dec
pop
sbb
sahf
lds
shl
std
stos
xchg
out
faddl
sti
aad
or
adc
cltd
in
mov
inc
fldcw
mov
dec
mov
jmp
jnp
sbb
in
xchg
push
jns
pop
add
push
pop
sbb
sbb
hlt
imul
cld
fcoms
mov
and
xchg
push
test
hlt
lods
lods
dec
es
pop
in
xchg
pop
sbb
dec
or
pop
add
inc
xor
in
imul
dec
and
dec
daa
orl
push
add
cmp
mov
mov
sub
adc
dec
fiaddl
adc
pusha
icebp
or
popa
xor
mull
test
loope
xor
insl
lret
fbstp
addr16
fsub
push
or
loop
icebp
jb
pop
cld
dec
cmpsl
jns
jne
jns
mov
ljmp
sbb
into
dec
ljmp
xchg
inc
sub
ja
out
movsl
xor
inc
add
inc
pop
sbb
pop
or
push
xchg
hlt
xchg
dec
jne
ret
xchg
xor
aam
dec
xchg
mov
or
arpl
das
mov
pushf
in
popf
repz
pop
xor
out
cwtl
shl
lret
mov
js
jns
push
sub
jmp
mov
repz
addr16
sti
add
fadds
xor
dec
pushf
xor
insb
sarl
or
js
mov
adc
push
fs
sub
and
xchg
scas
popl
xor
mov
xor
cmpb
movsl
cli
push
add
cltd
sub
test
or
out
xchg
pop
fldl
jge
or
fldt
mov
sar
cwtl
inc
shlb
push
ds
pop
dec
iret
aas
cmp
or
mov
inc
dec
cmp
pop
stos
sbb
js
ret
pop
sbb
aad
rcll
es
rcr
push
repnz
roll
test
or
clc
and
lods
xor
repz
jmp
add
jecxz
and
xchg
jbe
sbb
das
pop
jmp
lret
and
fwait
std
push
arpl
into
inc
adc
shlb
scas
jle
out
xchg
lret
push
addl
lock
lds
mov
inc
fwait
adcl
pop
ss
out
shl
inc
fisubrs
sub
int3
cmp
jg
push
jbe
cmp
lret
addr16
cli
mov
lea
push
rcrl
inc
jo
cmp
jnp
dec
add
cmc
bound
xor
add
mov
mov
mov
mov
xor
add
mov
mov
mov
mov
mov
xor
add
mov
mov
mov
jmp
xchg
dec
push
adc
push
xchg
dec
lock
pop
sbb
es
mov
lahf
jge
jo
stos
add
dec
dec
xchg
lds
in
mov
cmpsb
adc
inc
cmp
xchg
cmp
enter
je
loope
out
jmp
in
sub
cld
xchg
fisttpl
jno
cmp
mov
xlat
push
cwtl
scas
pop
movsl
pop
pop
fnstsw
jp
push
inc
addr16
imul
jno
lahf
std
fdivp
lea
outsb
adc
inc
jge
push
test
mov
mov
jnp
push
shlb
es
or
lret
imul
enter
push
test
pop
add
sub
aas
neg
cmp
mov
push
stos
idivb
pop
addr16
xchg
test
jb
and
in
pop
or
rcrl
and
jle
or
roll
cltd
shld
ret
xor
adc
jbe
gs
das
lahf
cmc
mov
ljmp
hlt
and
imul
clc
arpl
inc
mov
push
ss
mov
out
inc
inc
loope
in
push
outsb
mov
jecxz
lahf
int3
jbe
jno
adc
shlb
aad
jmp
inc
cld
or
sub
pop
cmpb
xor
push
add
sub
in
dec
add
dec
shlb
sbb
push
add
dec
pop
sub
jnp
out
sub
adc
pop
mov
sarl
in
mov
rcrb
inc
test
out
in
mov
push
dec
cmp
fdiv
scas
push
cmovno
adc
fwait
cltd
repnz
jl
and
add
cmc
das
ss
bound
cld
loop,pn
jle
push
mov
sbbl
lcall
cltd
aad
mov
lcall
ret
sbbl
lret
fs
pop
cmp
test
cmp
cs
xchg
sub
adc
mov
push
and
fcomps
aas
mov
fcoml
sub
test
pop
pop
adc
cmc
jge
sbb
adc
loop
sbb
xlat
or
mov
add
into
cmp
xchg
mov
cli
cld
push
lock
repz
mov
add
aas
movsl
fldcw
fmull
lods
fnstenv
mov
nop
and
dec
mov
shlb
fstpl
insb
lock
call
pop
pusha
inc
jecxz
jp,pn
mov
push
dec
and
imul
mov
dec
enter
dec
in
sbbl
loopne
enter
int3
les
pushf
sub
push
sub
std
cs
xor
pop
loope
into
add
repnz
mov
inc
jle
fimull
fcmovnbe
les
sbb
int
sub
aaa
adc
jno
notb
inc
shrl
out
xor
loope
mov
movsb
lods
cli
fsubrl
or
cs
pop
jp
cs
movsb
or
mov
ficompl
mov
rcll
cmp
lods
mov
fs
in
pop
idivb
push
cmpsb
jae
sbb
scas
scas
into
fmuls
push
out
add
dec
xchg
int
add
dec
test
test
ljmp
mov
mov
or
pop
lods
loop
mov
cs
cmp
lock
and
mov
xor
add
mov
mov
mov
mov
xor
jmp
sbb
pop
pop
pop
pop
sbb
adc
mov
pop
into
in
xchg
jo
lahf
jge
jo
mov
mov
gs
jb
add
sub
or
xchg
dec
cmp
xchg
sarl
dec
lret
mov
mov
dec
fisubrl
push
xchg
mov
in
dec
sub
jmp
xchg
and
repnz
xlat
aas
xor
or
les
dec
pop
jecxz
push
test
sbb
push
push
mov
xor
gs
dec
cwtl
adc
es
adc
sarl
cmp
or
imul
cmpsl
mov
mov
jl
cmp
jmp
cmc
sub
pop
jecxz
jecxz
xchg
xchg
dec
jp
push
movsl
push
dec
mov
repz
xor
in
in
orb
push
and
jns
mov
in
add
jae
aaa
jbe
mov
imul
jl
cmp
mov
inc
jle
xor
adc
out
jp
pop
add
ss
add
pusha
pusha
mov
ret
fcmovnu
pop
ret
adc
scas
enter
add
cmp
xor
add
and
roll
ficompl
clc
data16
fwait
mov
and
in
mov
dec
mov
xchg
xor
popf
xor
xchg
js
cltd
push
bound
jp
arpl
jge
cmpl
add
mov
push
and
add
add
sub
jno
loope
mov
jmp
loop
scas
mov
inc
imull
scas
test
mov
mov
hlt
lds
fwait
xor
push
movsl
xor
out
and
fstps
idivl
sub
cmc
cmp
lods
es
mov
pop
xor
push
push
inc
mov
pushf
lea
inc
xor
scas
dec
jns
test
cmpsb
push
xor
ret
pop
lock
push
mov
mov
xor
lods
fcomp
cmp
cmc
inc
jbe
daa
cmp
push
and
mov
pop
hlt
xor
mov
movsl
sub
lock
cs
mov
mov
ljmp
in
adc
pop
sbb
mov
jle
nop
shrb
insb
push
jp
lods
imul
or
cmp
out
mov
sbb
js
dec
stos
mov
popa
shl
xchg
xor
orl
out
nop
test
aam
jb
or
adc
iret
or
xchg
sub
xchg
rclb
ret
adc
call
outsb
fcmovb
cwtl
add
fsubs
pop
jmp
pop
push
aad
mov
cs
add
hlt
mov
pop
call
mov
scas
int
and
jns,pn
and
and
inc
push
je
sarl
xchg
pop
cld
popa
lock
aam
bound
push
shrl
jp
dec
outsl
test
nop
sbb
adc
sbb
mov
setae
add
mov
fisubl
add
fcmovne
push
stos
mov
pop
ret
test
jge
je
fnstcw
sub
ret
mov
mov
aad
push
inc
int
fs
lret
lods
jne
sahf
lcall
xor
lock
addr16
dec
inc
jle
movsb
jae,pn
cmp
dec
xor
cmp
nop
rcrb
jle
rorb
xor
add
add
imul
add
mov
mov
mov
xor
add
imul
mov
xor
sub
mov
mov
xor
add
imul
mov
xor
sub
lea
cmp
jmp
mov
popa
jbe
xchg
adcl
jo
lahf
jge
jo
or
mov
inc
scas
imulb
outsl
fucomi
mov
loopw
movsb
push
jg
ss
int
mov
mov
into
movsl
aaa
shl
xchg
sbb
mov
sub
jl
lods
iret
jmp
aaa
outsl
push
jne
adc
js
and
std
fwait
push
hlt
and
hlt
pop
fcomps
cmp
pop
les
add
mov
jl
shl
xchg
mov
nop
pop
ret
js
jno
pushf
add
push
cmp
pop
adc
jg
push
icebp
mov
setbe
jns
scas
sbb
aaa
shll
ret
jmp
jecxz
adc
adc
fs
dec
jne
call
dec
lock
pop
scas
roll
iret
movsb
cmp
pusha
enter
add
push
lock
and
sbb
aaa
lret
inc
dec
out
ret
testb
xchg
enter
pop
xor
cmp
push
or
repnz
out
pop
mov
sub
or
stc
push
mov
cmc
dec
xchg
bound
insb
sub
mov
lods
sbb
mov
dec
xlat
adc
mov
jo
out
fildll
push
adc
mov
repz
js
xlat
push
mov
add
and
in
sub
xchg
xchg
es
inc
push
je
push
das
mov
out
cmp
enter
out
cmp
jb
fs
pop
movsl
cs
jle
scas
inc
xchg
lods
xchg
adc
push
sbb
pop
jno
lcall
sub
pop
dec
data16
shr
call
push
or
sub
push
inc
mov
clc
cmp
sbb
cmp
adc
mov
testb
inc
stos
dec
je
xchg
daa
test
out
in
insl
stos
cmp
xchg
fld
jge
mov
xor
xchg
add
lahf
xchg
jb
push
rcll
lds
cmpsl
mov
fiaddl
or
mov
push
add
test
dec
inc
sub
xor
adc
xchg
mov
outsl
sbb
adc
hlt
adc
arpl
ja
mov
pop
leave
add
inc
mov
jo
mov
js
adc
push
out
hlt
pop
mov
jmp
or
pop
cmpb
fwait
adc
and
adc
inc
out
ds
push
push
scas
or
mov
ret
mov
cmpsl
aad
stos
insb
imul
jmp
nop
add
xchg
dec
and
xor
addb
push
scas
jge
dec
mov
adc
std
jge
jp
fcmovne
clc
xchg
push
sti
cmp
xchg
xchg
mov
fbld
push
bound
data16
push
jnp
and
idivl
pop
or
test
lret
rolb
shrl
inc
cmp
insl
pop
clc
mov
pop
xlat
leave
dec
mov
shll
fadds
test
or
push
mov
bound
inc
cmpsb
rolb
push
loop
loopne
movsl
jbe
or
std
and
andl
or
mov
lods
test
sti
inc
dec
mov
popa
ror
jnp
sub
dec
decb
sub
mov
decl
fdivl
rolb
rorl
scas
xlat
mov
xor
add
jmp
xor
out
icebp
xor
cmp
lods
les
bound
jge
jo
das
pop
out
rcr
xchg
hlt
push
or
fsubp
seto
push
mov
sti
xchg
ret
stos
fildll
imull
pushf
xor
in
sahf
xlat
push
aas
mov
lods
rcrl
bound
mov
icebp
inc
or
int
cmc
aas
stos
subb
and
scas
sbb
call
xor
aas
iret
hlt
pop
push
iretw
adc
mov
mov
sub
mov
add
or
and
call
pushf
xchg
or
int3
xchg
mov
enter
or
arpl
movsl
xchg
mov
cld
clc
cltd
xchg
sbb
cld
in
popf
cmp
push
subl
jbe
pop
pop
adc
orl
movsl
shlb
sub
pop
and
mov
das
loopne
jbe
mov
pop
in
mov
pop
mov
and
aas
imul
gs
int3
imul
sbb
sub
rcll
jle
pop
mov
notl
sub
jns
mov
rcr
fdivrl
iret
icebp
mov
push
push
cmp
jbe
jp
aaa
mov
test
push
jne
lret
mov
pop
fs
roll
jge
pop
das
jle
sbb
lret
ljmp
push
inc
add
in
lea
jnp
insl
cmp
xorl
ja
popa
cmp
cmp
shr
jmp
outsb
sbb
xchg
fcmovnu
push
xor
jo
inc
repnz
lock
fbld
xchg
ja
sub
adc
loope
dec
mov
in
in
mov
mov
testl
pop
dec
xor
outsl
inc
sbb
or
and
cltd
pop
pop
add
push
mov
data16
jae
bound
movsb
in
lcall
cmp
xchg
cmpl
shll
jbe
loop
data16
ja
pusha
xchg
in
jg
xchg
cmp
mov
inc
jbe
mov
xor
dec
dec
cmp
test
and
dec
adc
xchg
scas
xor
or
arpl
repz
mov
sbb
cwtl
jno
in
xlat
das
pop
out
push
je
mov
pusha
or
lods
aad
mov
aad
cli
adc
out
loopne
add
out
dec
shl
popl
sbb
ds
daa
sti
add
mov
ljmp
dec
jb
push
jns
outsl
mull
xchg
aas
mov
jecxz
mov
rcr
mov
mov
pop
dec
fisubl
push
int
inc
dec
imul
fmul
aam
push
and
sbb
mov
ljmp
xor
dec
xchg
inc
inc
loope
out
jecxz
add
cmpsl
mov
jmp
ficomps
push
in
sub
push
loopne
sbb
or
mov
mov
int
orl
hlt
or
xchg
mov
pop
insl
mov
mov
dec
ljmp
jb
lahf
out
push
sarb
ja
add
cmp
xor
lcall
fidivl
and
inc
fcmovbe
sbb
idivb
ljmp
jge
lea
mov
mov
xor
mov
sub
jmp
out
inc
push
jno
ljmp
in
push
leave
cltd
jo
lahf
jge
jo
push
addr16
fcomip
jl
popl
jge
pop
or
jns
ljmp
push
loopne
push
in
call
jb
pop
xchg
inc
mov
popa
jnp
in
lods
jp
mov
xchg
pop
sbb
xchg
lcall
push
popf
mov
out
xor
and
xor
xchg
or
call
xor
dec
cmp
cmp
jb
test
loopne
movsb
dec
aam
add
call
rcrb
imul
movsl
movsl
pusha
push
cmpsb
cmpsb
mov
lods
imul
add
mov
int3
lcall
je
in
pop
mov
lock
xchg
sarl
test
push
scas
out
add
pop
add
mov
int
mov
inc
pop
lods
sub
loope
mov
test
pop
add
push
cmp
sub
xor
mov
mov
pop
mov
in
dec
jmp
inc
call
pop
icebp
mov
in
out
push
outsl
shrl
in
inc
xchg
repnz
pushf
repz
insl
sub
mov
arpl
pop
jne
dec
sub
arpl
cmpsb
mov
ds
adc
or
jmp
mov
pop
jg
aad
repnz
jmp
int
test
movsb
movsl
jbe
les
aas
dec
test
adc
mov
jb
mov
jb
cmp
pop
faddp
mov
js
push
je
jmp
addb
xor
iret
bnd
add
je
in
xchg
cmp
sbb
adc
out
loope
orb
cmp
in
add
inc
and
add
rcrl
lea
sbb
mov
in
addw
inc
jmp
or
or
test
xchg
popf
xor
mov
fwait
mov
jge
adc
mov
xchg
jecxz
lret
je
mov
or
push
xlat
pop
pushf
jmp
jl
xor
mov
xchg
push
mov
xchg
je
jo
fldenv
cmp
out
sbb
push
loopne
pop
mov
sub
inc
out
fwait
xor
inc
lea
jbe
fdivrs
xor
je
dec
aaa
repnz
adc
mov
dec
pop
call
bound
cmp
loop
leave
jae
push
push
arpl
sti
loop
adc
or
mov
int
push
iret
jno
test
jb
mov
add
pop
pop
ss
or
in
add
mov
fsubs
pop
ds
clc
pop
dec
call
push
adc
aam
gs
insb
jg
clc
push
pop
sub
xorb
lea
inc
fcoml
js
frstor
mov
js
std
mov
mov
sub
movsb
inc
sti
pop
inc
loopne,pn
je
sbb
pop
in
push
cmp
jmp
sbb
hlt
mov
lahf
jns
mov
aas
cmp
clc
dec
outsl
les
pop
sub
mov
dec
dec
rorl
mov
lahf
or
add
cmp
add
dec
xchg
fstpt
adc
xchg
push
int
scas
jbe
xchg
xchg
fisttpll
add
push
cmp
cwtl
data16
jge
mov
mov
xor
add
imul
cmp
jbe
pop
pop
leave
ret
push
mov
sub
orl
push
sbbl
call
andl
test
jne
xor
movl
jmp
adcl
push
call
sbbl
test
movl
je
call
cltd
movl
cmp
jne
movl
cmp
jne
push
push
adcl
push
push
push
push
push
xorl
push
orl
call
movl
jmp
push
call
test
je
sbbl
push
andl
call
movl
jmp
push
mov
add
mov
andl
mov
inc
mov
cmpl
jne
push
push
push
pushl
push
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
addl
movl
lea
adc
mov
adcl
lea
movl
cmpl
je
cmpl
jne
pushl
pushl
call
xor
add
dec
mov
jmp
movl
cmpl
je
cmpl
jne
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
movl
cmpl
je
cmpl
jne
push
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
movl
cmpl
je
cmpl
jne
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
or
mov
or
mov
or
mov
mov
push
mov
subl
xor
push
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
push
push
call
jmp
mov
add
mov
mov
mov
movl
cmp
mov
movl
je
movl
cmpl
je
cmpl
jne
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
sbbl
xor
andl
add
imul
mov
movl
jmp
sbb
xor
add
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
call
cmpl
jne
mov
inc
mov
jmp
mov
mov
or
xor
sub
add
mov
mov
mov
xor
add
movl
cmp
jne
subl
pushl
andl
pushl
adcl
call
mov
sbb
mov
andl
mov
inc
mov
cmpl
jne
push
push
call
cmpl
jb
mov
mov
or
mov
movl
cmpl
je
cmpl
jne
pushl
pushl
call
mov
dec
mov
jmp
mov
mov
mov
mov
mov
mov
mov
movl
mov
mov
mov
xor
xor
add
mov
xor
xor
add
lea
cmp
ja
mov
xor
lea
push
mov
xor
lea
push
mov
pushl
call
mov
xor
lea
mov
mov
xor
xor
add
mov
xor
lea
cmp
jbe
mov
mov
mov
mov
mov
mov
mov
sub
xor
mov
mov
cmp
je
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
pushl
mov
pushl
add
mov
mov
pushl
call
mov
mov
mov
jmp
mov
mov
xor
add
cmp
jne
mov
xor
add
mov
mov
xor
add
mov
mov
mov
mov
mov
mov
xor
add
mov
mov
mov
mov
mov
mov
mov
movl
mov
xor
add
mov
mov
mov
mov
mov
mov
push
pop
sub
add
movl
mov
mov
mov
mov
mov
mov
mov
xor
add
mov
lea
mov
mov
xor
add
mov
lea
push
mov
xor
add
push
mov
push
pushl
call
xor
mov
sub
push
mov
add
push
call
inc
cmp
jb
mov
call
lea
mov
mov
mov
pushl
lea
push
call
mov
push
add
push
lea
push
call
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
mov
adc
mov
mov
xorl
push
push
mov
xor
not
push
mov
add
sbb
jmp
sub
gs
mov
fstps
or
ret
jg
jo
pop
aam
cli
ret
pop
cmp
cmc
adc
jmp
inc
adc
fwait
pop
jne
pop
adc
frstor
mov
fld
inc
and
inc
inc
xor
sub
sub
push
daa
shll
push
inc
iret
aas
imul
inc
cmp
in
push
and
imul
and
test
dec
mov
mov
jae
out
dec
dec
adc
movsb
notl
mov
cmpsb
mov
in
push
aas
gs
enter
fwait
sti
cmc
mov
sbb
jb
cli
popa
imull
rcl
mov
sbb
sub
ljmp
inc
fbstp
add
cli
push
data16
inc
add
fimull
pop
mov
cmpsl
mov
jbe
out
into
pop
imul
jb
popf
aas
xchg
jnp,pt
pop
lds
bound
rorb
mov
add
add
xor
aad
clc
sbb
cs
mov
lret
je
xlat
add
lods
xor
mov
xchg
fdivs
jg
test
mov
xchg
mov
mov
mov
push
inc
dec
mov
jne
pusha
sti
sbb
add
jge
inc
add
add
add
add
or
cmpl
jne
pushl
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
push
call
cmpl
jne
mov
inc
mov
jmp
mov
mov
sub
imul
mov
sub
mov
and
mov
sbb
xor
add
mov
jmp
icebp
ja
pop
inc
scas
icebp
jno
push
inc
movsl
inc
add
jo
ret
jg
jo
das
sub
jns
xchg
mov
xor
cmpsl
lret
fnstsw
rorb
push
shrl
push
xchg
pusha
xchg
dec
out
add
inc
lock
ss
dec
xor
jmp
dec
mov
jge
pop
ljmp
mov
jne
xor
push
mov
mov
dec
inc
add
cmp
loop
mov
add
sub
outsb
clc
and
xchg
lret
adc
inc
std
cwtl
cwtl
cmp
xlat
mov
mov
xor
and
jne
jp
sbb
jg
mov
inc
jns
pop
mov
jno
mov
jo
aam
neg
xor
jle
into
mov
and
sbb
pop
jmp
sub
and
lods
call
stos
mov
scas
mov
mov
mov
movl
repz
dec
jae
dec
decl
das
sub
aas
ja
xor
je
aam
out
cmp
push
lcall
and
mov
adc
and
mov
insb
mov
ds
cmp
mov
push
mov
popa
mov
inc
add
repnz
sub
jno
movl
and
lea
mov
jmp
rorl
sbb
clc
orl
jo
push
add
out
in
ljmp
xor
jp
lods
rcll
int
push
and
lret
insl
in
dec
sbb
push
dec
adc
clc
jno
out
popf
or
pop
in
scas
and
loopne
jge
enter
add
dec
jae
push
xlat
cmpsb
dec
or
mov
subl
aam
popa
das
jp
mov
sub
add
int
jge
dec
int
inc
out
ja
xchg
mov
xchg
add
test
lret
popa
adc
loope
push
dec
push
std
mov
ja
push
sbb
sub
cmp
mov
mov
pop
pop
mov
inc
xchg
out
pop
popa
ljmp
loope
xchg
mov
push
mov
addr16
push
test
add
in
mov
xor
out
popa
pushf
packssdw
lock
jmp
dec
sar
fnsave
mov
or
sbb
aas
mov
xlat
dec
mov
out
mov
adc
mov
mov
push
xor
inc
pop
js
mov
pop
pop
jnp
adc
jae
pop
mov
jo
adc
sbb
inc
call
inc
add
add
add
or
sbb
inc
mov
cmpl
jae
cmpl
jne
push
call
jmp
neg
mov
add
xor
add
sub
mov
mov
adc
mov
mov
adcl
jmp
cmp
in
fcomi
jecxz
icebp
xor
iret
cmpsb
pop
mov
push
mov
jo
fimuls
inc
sahf
daa
aam
xor
jp
inc
lea
and
andl
filds
pop
stos
jmp
adc
mov
cmp
test
in
mov
xor
inc
mov
sub
jle
xor
scas
nop
adc
filds
call
cmp
enter
jbe
jb
test
lahf
inc
lret
inc
int3
jecxz
sub
mov
in
nop
outsl
pop
stc
xchg
pusha
dec
test
stc
mov
les
inc
mov
popf
pop
int
or
jnp
jmp
push
xchg
mov
push
and
lret
inc
sbb
cmp
loope
mov
scas
out
addr16
mov
and
aad
ja
popf
mov
xor
sub
jle
adc
pop
or
lods
out
mov
dec
and
push
loope
inc
not
aam
lods
rcrl
int
addl
mov
jecxz
cli
cmp
int3
ret
jae
ficoml
xor
sub
cmpsl
jecxz
pop
ret
jb
sbb
pusha
add
sbb
out
xchg
xorl
adc
addr16
add
mov
xorl
movzwl
add
neg
movl
sbb
mov
mov
sbb
mov
xorl
xor
andl
add
cmp
jne
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
cmpl
jne
xor
add
inc
mov
jmp
movzbl
adc
mov
xorl
mov
andl
xor
notl
add
movl
cmp
movl
jmp
fistpl
shlb
cld
mov
jo
ret
jg
jo
pop
lods
nop
sbb
loopne
mov
xor
cmp
xchg
and
daa
jmp
xchg
jp
stos
lret
out
jle
roll
or
imul
pop
cwtl
aaa
mov
in
xor
jle
mov
dec
jb
sarb
out
loopne
aaa
es
pop
or
sbb
mov
and
loope
adcl
les
dec
int
stos
mov
jne
fisubs
fnstenv
xchg
add
adc
nop
lods
jp
movsl
lcall
mov
xchg
xchg
lds
mov
fdiv
mov
outsb
fistpl
jp
jbe
jecxz
jbe
pop
cmpsl
xchg
ret
and
stc
xor
add
popf
daa
sub
adc
push
repnz
sub
add
dec
ljmp
out
sub
sub
nop
rol
in
loop,pn
lds
add
pop
ja
inc
popa
pop
movsb
push
push
stc
js
sbb
in
dec
xor
test
sub
add
sub
lods
pop
adc
cmp
push
nop
pop
cld
and
add
shl
sbb
xchg
jl
jne
add
mov
sbb
mov
adc
xor
add
mov
sbb
mov
adc
mov
movl
cmpl
je
cmpl
jne
push
push
push
pushl
push
call
cmpl
jne
xor
or
dec
mov
mov
dec
mov
jmp
xor
mov
sub
add
mov
mov
mov
movzwl
add
mov
mov
mov
xor
lea
xor
sub
mov
movzwl
jmp
or
shrb
mov
inc
pop
mov
vpcmpgtd
scas
jo
ret
jg
jo
adc
sbbb
es
stos
sbb
push
daa
or
jb
jecxz
addr16
fidivrs
cmp
out
mov
xchg
sub
jbe
rol
repz
inc
or
rcl
dec
int
jg
fxam
orb
cmp
aam
ljmp
cmpb
xor
xchg
movd
lods
ja
jle
ljmp
push
jae
jge
sub
adc
loop
xchg
or
mov
loope
xchg
inc
lods
js
cmp
push
leave
aaa
push
subl
cmc
and
movsl
iret
les
in
mov
sbb
push
lds
pop
jbe
imul
sbb
je
xchg
test
mov
nop
xchg
cli
mov
mov
es
out
inc
dec
and
test
notl
fstl
rcrb
loope
rclb
shlb
lret
fdivrl
cs
loope
adc
push
jle
dec
int3
mulb
fidivs
pop
lock
shll
or
lcall
fs
aas
daa
pop
imul
sti
pusha
test
push
pop
cmp
rcll
adc
xchg
pop
cmp
mov
movzwl
jmp
movntps
push
rep
mov
push
jle
cmpsl
add
scas
jo
ret
jg
jo
icebp
mov
das
cmp
call
or
aaa
xchg
jb
movsb
adc
pop
or
mov
aam
mov
and
push
js
inc
inc
inc
fwait
xlat
and
cmpsb
cmp
pushf
fs
sub
out
pop
rcll
and
sub
dec
lahf
cwtl
mov
rcll
nop
fcompl
int
rcll
mov
mov
inc
jecxz
push
add
jb
lcall
pop
xchg
mov
addb
cs
push
enter
sbb
pushf
fucomip
cmpsb
mov
int
push
jno
loop
stos
sar
mov
push
inc
push
insb
int
decb
loope
push
in
cmp
inc
mov
cmpb
and
int
in
mov
pusha
push
push
sbb
and
mov
aam
jns
mov
jge
les
sbb
insl
test
fldl2e
mov
or
cmpsl
sbb
mov
push
pop
jnp
lea
sbb
cmp
fnstenv
pop
inc
scas
push
fistpl
dec
aas
shlb
fdivl
rorl
popl
popa
lea
add
xor
sub
sub
mov
jmp
jmp
int3
push
icebp
xchg
icebp
je
in
pop
mov
push
test
or
jg
jo
stos
cmp
mov
or
jne
mov
adc
negb
dec
out
jbe
leave
andb
push
stos
sub
stc
pop
inc
imul
shlb
xchg
xchg
dec
mov
or
nop
pop
mov
lds
lcall
lcall
adc
cmpsb
mov
jno
jg
enter
roll
jle
pop
cmpsb
or
lahf
lds
xchg
ret
inc
sub
mov
ss
lret
das
popf
push
inc
adc
imul
test
fildl
loop
jbe
andb
test
push
negb
or
sbb
movsl
jge
fistl
int3
mov
xchg
pop
jno
adc
jnp
dec
mov
lds
mov
sbb
pop
jp
test
jmp
xchg
sub
daa
stos
pop
push
mov
shrb
rcr
sub
mov
push
push
mov
pop
dec
sub
jge
jo
out
inc
xchg
rorb
pusha
enter
neg
adc
shr
sub
movsl
int3
adc
shrb
xor
loop
lea
mov
mov
cmp
jmp
mov
enter
lea
leave
inc
inc
fs
shrb
jo
lret
dec
outsl
test
cmpsb
in
iret
mov
jnp
je
ja
inc
mov
mov
sar
and
scas
adc
adc
mov
sbb
pop
mov
dec
and
fimull
or
jecxz
mov
nop
outsw
scas
js
jae
cmpsb
adc
movsl
or
mov
mov
out
nop
sbb
dec
jle
mov
xchg
pop
pop
pop
sbb
mov
fisttps
cmp
cmp
jo
add
pop
rol
test
mov
xor
repz
dec
xchg
or
push
push
sti
mov
mov
jno
stos
outsb
scas
leave
jl
push
cs
je
sahf
fldenv
xor
popf
xchg
fsubrp
mull
sub
xchg
pop
insb
rol
fisubrl
add
xor
pop
loop
lds
pushf
mov
out
mov
inc
cltd
mov
clc
cmp
sub
popa
imul
std
cmp
lods
or
repz
rcrl
rclb
dec
imul
sarb
or
xor
mov
mov
lock
inc
mov
dec
je
mov
jmp
lods
ret
jno
insl
popa
fdivrs
xchg
test
popa
out
and
ret
jg
jo
lods
cmp
inc
sbb
pop
nop
xlat
push
mov
sub
mov
push
dec
in
cmpb
adc
fcomi
and
lods
jmp
push
sub
jp
jo
pop
hlt
push
adc
xchg
mov
mov
sahf
ja
pop
push
lret
stos
pop
dec
scas
out
mov
pop
mov
mov
insl
or
sub
inc
xor
dec
mov
pop
test
fstps
xchg
push
cltd
add
lret
les
ret
dec
sbb
out
iret
shll
ss
xor
into
push
aad
lock
cmpsb
lea
or
popf
ret
sbb
loope
cmpsl
xchg
sbb
jbe
clc
in
scas
mov
pop
xchg
popa
addb
addr16
push
ret
insb
jg
inc
xor
mov
iret
fadds
mov
test
hlt
std
add
push
jge
mov
ss
in
pop
fsubrp
mov
hlt
enter
xchg
testl
jecxz
out
out
adc
lahf
jnp
insb
xchg
sti
dec
je
and
stos
inc
stc
call
jp
fsubrs
dec
bnd
sbb
mov
pop
xchg
pop
or
in
push
push
loop
icebp
fidivrl
ror
xchg
sub
mov
mov
mov
xor
jmp
mov
mov
xor
add
cmp
je
mov
jmp
dec
int3
cmp
mov
add
sarb
add
sbb
jo
ret
jg
jo
fstpl
popf
mov
aaa
sbb
lods
jecxz
xchg
jmp
or
push
fdivs
inc
pop
mov
cmp
sbbl
out
pusha
or
sbb
mov
push
mov
adc
and
std
adc
sahf
cmp
adc
leave
je
es
movl
je,pt
pop
test
pop
and
and
loopne
mov
lcall
xchg
lret
mov
sti
add
xchg
sti
cmpsl
ret
or
sub
or
push
insl
movsl
mov
jbe
fcomip
mov
xchg
scas
shrl
inc
mov
jbe
clc
add
sub
mov
jmp
or
add
jno
mov
in
mov
mov
or
outsb
popa
ja
pop
std
lret
xchg
push
add
test
out
jbe
xchg
ja
fadd
pop
sbb
mov
jne
jns
push
fbld
movsb
pop
mov
nop
fwait
or
call
mov
jb
push
mov
mov
in
into
sbb
das
hlt
stos
mov
add
and
or
scas
lret
fimull
add
add
ror
icebp
imul
inc
or
cmp
jo
jmp
outsb
fstl
add
mov
or
mov
adcl
or
sub
jae
and
xor
insb
lods
int
sahf
xor
in
cmp
or
loopne
in
pop
push
mov
xlat
jp
or
pop
jecxz
or
xchg
faddl
add
inc
outsb
mov
xchg
cmpsb
test
adc
push
push
lock
sbb
mov
jno
sbb
lock
pop
movsl
mov
sbb
cmp
shl
cmp
inc
push
xor
mov
or
loope
outsl
ror
loope
pushf
and
mov
mov
stos
pop
imul
ret
lods
add
mov
out
inc
test
in
mov
jno,pt
xlat
add
or
jle
pusha
popf
decl
xchg
imul
sbb
jnp
pop
ja
pop
inc
loopne
in
scas
loope
dec
movsl
xor
lret
repnz
movsb
outsb
fistpll
test
mov
ret
outsb
pop
dec
jg
mov
lea
pop
mov
repnz
xchg
pop
mull
or
xchg
jb
pop
repnz
mov
jb
ret
iret
mov
or
fdivrl
xchg
mov
mov
lea
add
mov
mov
mov
mov
mov
xor
add
mov
mov
mov
xor
add
cmp
je
jmp
pop
out
dec
mov
mov
testb
dec
xor
jo
ret
jg
jo
jmp
add
jmp
push
xor
hlt
xorl
jmp
mull
sbb
mov
lret
cmp
jp
pop
rcl
imul
or
test
jbe
into
mov
adc
pop
dec
xchg
scas
stos
aad
jo
cmpsb
arpl
pop
out
jb
lods
scas
jge
outsb
in
xchg
cmc
aam
in
das
pop
popf
xchg
xchg
roll
pop
jnp
fdivs
std
hlt
loop,pt
sbb
arpl
pop
clc
mov
mov
call
adc
roll
das
or
jp
lods
sbb
mov
jns
jecxz
cmp
pop
mov
mov
jns
mov
test
outsb
xchg
cmpsb
inc
fs
jns
xchg
adc
imul
sub
xchg
popf
lods
ret
pop
mov
sub
inc
repz
out
sbb
les
cmp
incb
pop
idiv
movsb
jmp
out
dec
and
sbb
loop
lret
jmp
pop
insb
mov
cmpsl
inc
hlt
test
cmp
xlat
sub
push
add
mov
or
jae
mov
xor
ds
rol
jb
ret
leave
sub
lds
push
je
popf
inc
lods
out
pop
mov
jl
xor
mov
mov
add
mov
mov
mov
mov
mov
mov
add
xor
cmp
je
mov
mov
xor
add
mov
jmp
xorl
jmp
mov
mov
mov
mov
mov
mov
pushl
call
mov
cmp
je
mov
mov
pop
pop
pop
leave
ret
push
mov
jmp
ds
adc
dec
xor
shll
pop
mov
jo
jge
jo
pop
inc
testb
xchg
adc
in
xor
adc
and
orl
xlat
stos
inc
xchg
icebp
or
pop
mov
mov
insb
xor
xchg
mov
dec
mov
pop
pop
movsl
xor
mov
lea
addr16
push
fwait
aaa
out
shl
push
adc
sub
fldt
or
xor
nop
or
rcrl
adc
push
adc
dec
lahf
or
or
inc
mov
mov
xchg
cmp
mov
test
cmp
movsb
mov
push
stos
clc
xor
push
adc
test
lods
scas
decl
mov
mov
xchg
mov
in
fsubp
ja
lahf
out
pop
sub
mov
sub
test
pop
inc
or
or
adc
cli
je
cmp
sbb
pop
imul
fldt
inc
cs
jmp
jmp
mov
aaa
fcomp
pop
push
push
lods
cmp
sub
lock
jle
sahf
int3
aam
adc
inc
arpl
push
sbb
and
adc
and
inc
ljmp
test
pop
movb
stos
inc
out
in
inc
mov
mov
data16
js
and
add
inc
mov
push
mov
dec
out
cltd
mov
and
cmc
das
jns
fs
jp
jmp
pop
dec
mov
add
ljmp
frstor
cmpsl
sub
mov
imul
jne
es
jmp
adc
xor
pop
fadd
loope
mov
sub
out
mov
sbb
cmp
xor
movsb
ja
jge
xchg
cmp
daa
add
push
adc
jg
insl
idivb
cwtl
dec
sbb
sub
iret
add
jb
daa
pop
inc
test
fsubp
andl
iret
or
outsb
fistl
test
jno
pop
or
mov
iret
loop
test
popf
ficompl
loopne
xor
cs
lret
inc
lahf
aam
lds
and
add
lock
bound
fimull
inc
jmp
imul
dec
sbb
dec
pop
adc
inc
mov
mov
dec
jo
cmp
dec
push
cwtl
inc
xchg
insl
sub
movsb
sbb
mov
int3
lds
jecxz
jle
test
xor
iret
test
push
xchg
sbbb
call
into
lcall
jecxz
adc
js
and
jl
aam
in
mov
nop
inc
pop
in
lahf
push
cwtl
sarb
push
lock
popf
push
and
andb
subb
lods
cmp
mov
add
cmp
cli
in
lods
lahf
pop
mov
pop
stc
mov
add
and
mov
divb
xchg
fidivl
and
dec
mov
out
test
movl
jmp
or
sti
cwtl
mov
jp
les
sahf
add
push
xchg
ds
push
adc
es
inc
dec
xchg
or
pop
push
shll
cmp
iret
inc
adc
test
cmp
pop
push
loope
mov
jb
xor
xchg
or
mov
insl
cmpsb
enter
adc
mov
out
mov
int3
cltd
add
dec
jmp
mov
jge
push
jnp
ja
jns
and
in
or
mov
negl
jmp
mov
cli
xor
testb
adc
xorb
jo
fcomps
test
jl
aam
adcl
cmpsb
sub
ficomps
xchg
add
sub
push
ljmp
dec
mov
out
es
jge
add
xchg
rcll
mov
jno
lock
mov
testl
and
and
pop
shlb
test
adc
dec
popa
and
mov
push
enter
adc
outsl
repnz
into
sbb
rcrb
fs
xchg
sub
out
and
inc
cmp
sub
pop
dec
push
xor
jle
out
cmp
hlt
or
ficoms
in
mov
je
arpl
dec
addr16
js
inc
test
daa
adc
sub
push
push
out
fwait
mov
mov
jp
push
inc
mov
jnp
push
pusha
aad
imul
icebp
std
mov
pop
and
push
jp,pt
push
lods
popf
push
sbb
add
xchg
out
adc
push
add
jmp
or
adc
in
mov
pop
stc
cmp
mov
or
xorb
cs
mov
inc
sbb
pop
outsl
fbstp
lcall
nop
shr
arpl
decl
xchg
add
filds
lahf
enter
jg
jl
ret
cmpsb
pop
test
aam
mov
std
mov
enter
aaa
in
test
mov
addr16
pop
out
ficompl
ss
sub
lcall
xlat
addr16
fistpl
cmp
mov
testb
add
or
and
sarb
adc
pop
fbld
test
push
or
xor
sub
adc
insb
icebp
fidivs
xchg
jns
dec
insl
push
js
stc
andb
into
jnp
daa
or
mov
jecxz
imul
push
mov
in
jns
sahf
push
xor
sahf
or
sub
pop
push
call
cmp
outsb
add
mov
lret
mov
dec
scas
pop
pop
dec
xchg
cmpsl
sbb
or
aaa
xor
stc
jno
add
movsb
mov
pop
inc
adc
cmp
push
int3
pop
imul
sbb
mov
push
and
addb
and
aam
stc
jb
or
cmpsb
insl
fbstp
daa
xchg
loopne
pop
or
jmp
ret
ret
push
in
push
dec
jae
mov
sub
jb
dec
imul
fs
and
add
insb
jge
mov
adc
inc
iret
js
push
fldt
dec
mov
loop
sub
sub
xor
ds
repz
push
push
mov
cmp
sbbb
push
out
int3
gs
pop
mov
insl
jge
ret
inc
sbb
repnz
les
scas
mov
in
mov
inc
xor
in
out
jmp
mov
mov
inc
frstor
into
in
adc
mov
or
std
pop
cltd
xchg
clc
in
inc
xchg
ret
les
fnsave
jnp
push
orb
out
fldl
rol
push
sub
push
jl
popf
popa
or
jno
xchg
or
out
push
jmp
test
dec
jae
xchg
cmp
push
cmp
movsl
jbe
lcall
dec
inc
daa
cltd
mov
rorb
pusha
xor
inc
cld
xor
or
loope
add
cmp
add
xorl
xor
movl
cmp
jne
mov
mov
and
mov
mov
movl
add
mov
jmp
fcmovnbe
aam
repz
push
jae
xchg
or
xor
jge
jo
imul
int
ret
out
mov
clc
cmpsb
ret
or
bound
mov
cmpsl
lret
mov
lret
push
pop
int3
or
scas
sub
mov
and
mov
sub
call
adc
cmp
jge
jecxz
leavew
out
in
lods
fldenv
gs
mov
lcall
js
repz
jmp
lret
sti
and
sbb
lea
jae
mov
addr16
testl
dec
or
add
shlb
mov
mov
in
gs
aas
inc
jne
inc
in
mov
imul
and
repnz
aad
jg
inc
out
xchg
into
mov
fmuls
out
dec
pop
or
cmc
xor
sti
stos
mov
out
and
adc
insl
loopne
xor
in
sbb
adc
pop
adc
push
in
popf
in
xor
int3
arpl
leave
shlb
fnsave
dec
aam
mov
je
loopne
in
mov
outsl
jnp
fcomps
subb
xchg
xor
and
hlt
sbb
xor
mov
aad
dec
sarb
and
adc
movsb
iret
fucomip
cmp
jp
sbb
mov
lods
xchg
test
and
lret
cmp
fwait
sbb
push
pusha
imul
push
mov
jae
sahf
mov
icebp
fdivs
dec
sarl
mov
fsubl
aam
push
fs
test
pop
sub
jmp
fwait
pop
jge
rcl
ret
mov
stc
push
xchg
je
repnz
outsb
push
mov
mov
inc
jmp
testb
addr16
push
mov
jg
pop
jle
sbb
fcmovnu
cmp
jp
test
lcall
call
add
testb
cwtl
jo
or
or
xchg
rorb
sub
ljmp
mov
sbb
andb
outsl
push
inc
cmp
or
sbb
movsl
xor
stos
jnp
test
loopne
mov
sub
daa
mov
fcmovne
add
and
sub
pop
movsb
cmc
lcall
jmp
outsb
mov
sub
push
imul
mov
adc
and
cmp
dec
imul
adc
test
dec
mov
mov
jbe
lea
addr16
sub
pushf
leave
jns
add
xchg
mov
pop
ret
push
pop
jmp
mov
sbb
add
mov
inc
aaa
jnp
mov
sub
mov
aas
inc
or
mov
pop
rclb
or
push
ret
adc
and
ljmp
pslld
xchg
xor
and
aaa
movsl
adc
insb
addr16
cs
jo
lods
sahf
xchg
out
pop
arpl
dec
ss
dec
pcmpeqw
jp
mov
cld
jp
in
shlb
lea
fstl
call
je
add
fdivp
das
or
add
ja
push
repz
or
clc
push
and
dec
int
pop
xlat
jae
repz
xchg
ret
jbe
iret
push
loop
ljmp
loopne
jle
add
xchg
cwtl
scas
out
orb
inc
rorl
or
andb
add
test
inc
add
or
mov
xor
sub
push
sbb
jmp
lods
das
mov
mov
lcall
pop
mov
jo
int
ret
out
je
mov
int3
mov
sbb
les
test
loopne
sarl
inc
pop
aam
pushf
mov
scas
jmp
dec
lret
leave
jbe
scas
das
gs
in
andl
ljmp
mov
jns
rclb
dec
jecxz
adc
ret
add
xchg
popa
inc
cld
shll
pop
cmp
pushf
mov
sarb
pop
push
movsb
push
lods
enter
sub
insl
xor
jb
xor
dec
inc
mov
daa
loop
adc
mov
mov
xor
adc
pop
push
stc
jae
scas
pop
pop
mov
adc
scas
andb
mov
dec
mov
outsl
lret
lods
push
mov
fcmovu
cmp
loop
aam
das
fsubrs
lcall
cltd
dec
test
data16
lahf
fldl
imul
jl
ss
lock
pop
nop
dec
out
xchg
mov
xor
repz
repnz
inc
and
call
inc
mov
bound
call
cmp
enter
mov
imul
out
or
sti
and
fisttpll
scas
inc
pop
nop
cwtl
push
adc
cmpsl
push
sbb
cld
mov
xchg
sahf
mov
roll
out
icebp
lcall
ror
push
aam
mov
int3
lcall
push
pop
xchg
push
hlt
shrb
adc
push
mov
sbb
push
pushf
rcrb
loopne
inc
out
movsl
stos
pushf
mov
cmpsb
mov
loope
loope
or
push
adc
inc
and
mov
stos
mov
add
pusha
shr
ret
subl
rorb
arpl
xlat
sub
mov
out
out
xchg
aas
cmp
daa
pop
and
outsl
cmp
pop
pop
outsb
out
ret
es
sbb
xor
in
or
inc
repnz
lods
push
fisubl
add
test
ret
out
push
les
dec
lret
inc
ljmp
pop
cmp
ds
mov
inc
hlt
fldcw
pop
aam
mov
arpl
push
insl
dec
arpl
or
xchg
lcall
inc
lods
mov
xchg
aas
lock
cmp
push
pop
inc
pop
sub
jne
xchg
or
data16
mov
sbb
or
xchg
mov
hlt
sub
xorl
xchg
push
jmp
sbb
sub
or
and
adc
icebp
aas
jmp
call
gs
hlt
xchg
dec
in
out
sbbl
call
sub
mov
dec
pop
sbb
sbb
stos
push
pushf
adc
inc
das
pop
mov
mov
xchg
ret
dec
jle
xchg
dec
inc
call
mov
aas
in
ljmp
test
xor
neg
and
pop
adc
imul
pop
cmp
pop
lods
pop
cmp
repz
ret
out
jno
lahf
loope
mov
inc
fucomi
adc
push
jle
outsl
cmp
xchg
sub
and
pop
or
mov
mov
sub
cmp
imulb
in
lock
or
pop
pop
cltd
lods
faddl
pop
push
inc
movsl
jne
inc
sub
test
mov
xchg
es
add
mov
add
jmp
outsl
mov
or
imul
xchg
push
mov
mov
push
mov
fisubrs
dec
xor
in
push
aas
movsl
popf
push
xchg
jne
insb
cmp
mov
outsl
mov
or
scas
jecxz
sti
roll
cmp
sahf
mov
test
ret
inc
mov
push
popf
cmp
idivl
dec
mov
sbb
add
xor
sub
push
fistl
and
lock
cmp
add
scas
push
xor
loop
xor
in
fnstsw
adc
and
dec
sahf
inc
das
les
inc
sbb
or
icebp
fiaddl
mov
mov
sbb
and
punpckldq
fldl
loopne
mov
xchg
mov
jmp
and
mov
adc
idiv
jmp
pop
jae
das
xchg
xchg
ja
nop
dec
xor
stc
cmpl
jno
mov
add
mov
adc
cld
push
lea
outsl
loop
cmp
loopne
lret
sbb
jbe
faddl
ss
sbb
cmp
pop
mov
movsb
xchg
sub
mov
pop
add
push
inc
cmp
push
push
inc
lds
pop
adc
call
leave
cwtl
dec
push
fsubrl
movsl
inc
out
mov
sbb
mov
in
negb
dec
lds
or
ret
mov
lods
test
cmpsb
push
gs
imull
leave
jmp
adc
cwtl
or
iret
loop
leave
cmp
mov
and
sub
mov
xor
cmp
mov
cmp
inc
cmp
in
inc
mov
fsubs
fcoml
subb
xor
mov
leave
repnz
int
mov
adc
fcomp
loope
fdivrp
bound
insb
adc
adc
mov
ja
stos
xchg
sti
imul
mov
or
and
rcr
add
mov
jge
cmpsb
fdivs
adc
xor
xchg
xor
js
fiaddl
or
inc
xchg
popf
inc
fisubl
sub
mov
pushf
xor
dec
mov
xor
cmpsb
xlat
xchg
xor
loope
cwtl
sbb
mov
adc
incb
mov
je
cs
cmp
mov
dec
or
push
lds
mov
xchg
fs
add
outsb
loope
add
call
js
rolb
movsl
enter
out
and
std
dec
scas
jno
sub
repnz
fwait
test
cmc
lock
lret
inc
and
add
lods
scas
mov
shlb
fcmovb
push
fldenv
xchg
push
cld
push
sub
sub
inc
jbe
adcl
push
cmp
xlat
sbb
cmp
xor
int3
add
fwait
mov
in
dec
test
int3
aas
xor
push
sbbl
push
xchg
ret
mov
mov
cmp
mov
andb
loopne
int
pop
xchg
jp
aas
mov
fwait
mov
mov
or
bound
xchg
mov
in
ret
aad
pushl
pop
int
pop
xor
adc
xchg
out
jno
cs
xlat
pop
pop
cmp
jnp
es
dec
push
adc
xchg
adc
test
xchg
es
xor
xor
repz
push
mov
imul
dec
pop
and
inc
push
pop
je
mov
jmp
mov
xor
add
jmp
mov
xor
add
leave
ret
push
mov
jmp
outsl
mov
jae
dec
cmpsl
rep
or
fnstcw
inc
jo
pop
jge
jo
mov
mov
inc
mov
ret
pop
fmull
clc
mov
outsl
xor
or
rolb
int3
pusha
dec
stos
mov
lret
in
fnstcw
or
sarl
adc
movsl
sub
addl
ret
mov
or
insl
jge
inc
jo
sbb
ljmp
in
hlt
loope
orl
add
icebp
cmove
addr16
out
sub
stc
lock
mov
dec
xor
mov
insl
enter
add
es
adc
inc
int3
testl
sbb
pop
add
pminub
push
call
repnz
loopne
pushf
arpl
pusha
mov
xchg
jbe
adc
mov
or
adc
jo
hlt
stos
cld
xchg
data16
push
fimull
jb
test
pushf
into
adc
push
aam
dec
loop
push
push
push
pop
cmpsb
movsl
jb
pusha
icebp
mov
inc
sbb
inc
adc
orl
aad
ret
dec
mov
jne
popf
pop
inc
and
mov
sbb
jno
stos
push
jno
sub
loopne
cs
xchg
sbb
rorl
mov
push
iret
loope
jae
rorb
sbb
xchg
add
das
jnp
out
dec
and
push
and
push
ss
xlat
aam
jle
mov
adc
cmpb
inc
test
lea
cmpsb
in
or
mov
xchg
fimuls
sub
dec
ud1
add
push
inc
lcall
sbb
lahf
cmp
mov
rclb
int
xchg
cmp
cmpsl
mov
add
xchg
push
clc
jp
nop
xor
and
pushf
and
push
add
mov
les
push
jno
loope
mov
mov
adc
xchg
or
fildll
aas
cs
es
rorl
loopw
push
add
test
mov
lods
popf
dec
mov
test
or
imul
xchg
lahf
dec
cmp
jle
cs
dec
push
xchg
lea
jb
pusha
enter
fimuls
mov
clc
mov
cli
mov
aam
push
jp
xor
mov
mov
mov
fwait
addr16
daa
mov
cmp
lea
pop
jge
jbe
mov
lods
bound
jne
cwtl
out
fidivrl
mov
imul
mov
cmpsl
cmp
mov
fs
sub
addr16
dec
imul
mov
or
mov
push
xchg
pushf
jg
adc
xchg
aad
mov
negl
cwtl
pop
xor
mov
xchg
push
pop
inc
mov
es
sub
movsb
or
andl
and
push
fcmovbe
pusha
out
push
mov
iret
gs
std
mov
pop
fwait
mov
cmpsl
fisubrs
loopne
sub
pop
mov
sub
pop
fstps
cmc
push
sub
pop
sub
xchg
pusha
lods
mov
repnz
cmc
mov
out
cwtl
cli
add
xchg
sti
mov
jne
mov
push
rcll
enter
or
push
cmc
push
xchg
je
jb
sub
xchg
jbe
es
add
lds
inc
jae
dec
jbe
loope
xor
xchg
pop
paddsb
push
jo
bound
rcl
lods
aad
xchg
movsb
mov
mov
mov
shll
jmp
mov
in
fistl
shlb
sub
dec
and
daa
cs
push
je
mov
daa
aam
cmp
mov
mov
icebp
popf
mov
mov
sub
adc
mov
push
mov
xor
movl
jmp
xchg
shll
push
paddsw
es
jo
pop
jge
jo
sub
xchg
pop
cltd
ss
ds
daa
sbb
mov
sbb
data16
sub
sbb
jne
pop
movsl
inc
into
popa
iret
mov
mov
lea
jg
push
push
sahf
bound
pop
sbb
cs
ja
scas
call
iret
repnz
mov
frstor
inc
push
pushf
stc
mov
jecxz
dec
mov
sub
mov
mov
dec
es
jp
mov
sbb
pop
sbb
cmpsb
test
push
or
sti
fsubp
mov
add
cmp
fstpl
test
and
adc
outsl
cmpsb
lods
dec
or
test
leave
lea
xchg
cli
out
cs
inc
xchg
cld
pop
je
and
xor
sbb
repnz
mov
and
aas
cmpsb
ja
outsl
pop
iret
sub
mov
iret
mov
mov
lock
sbb
adc
adc
cmp
jmp
outsl
mov
mov
cmp
jle
inc
lock
adc
in
add
push
jl
repz
xchg
test
mov
and
adcb
mov
mov
mov
aas
mov
and
dec
xor
mov
inc
push
mov
sbb
jp
xchg
pop
shlb
mov
addr16
push
mov
into
lahf
and
sbbl
xchg
movsb
jno
mov
addb
repz
jbe
xchg
pop
xchg
push
jmp
inc
add
jl
and
bnd
adc
and
rorb
mov
xchg
sbb
push
inc
insb
dec
jmp
dec
jne
lock
xor
mov
cmp
sub
sbb
xchg
pop
inc
and
cmpsl
cmp
outsl
add
insl
in
or
jns
mov
xchg
enter
sbb
rcll
inc
add
scas
loope
jg
mov
pop
pushf
data16
lock
jno
mov
js
daa
jmp
sbb
sub
and
sub
das
mov
lcall
jg
adc
inc
hlt
push
mov
mov
arpl
sbb
lret
scas
or
aam
cmp
push
and
mov
xchg
xor
out
sub
aaa
fistps
arpl
push
mov
xchg
push
xor
ret
jle
jnp
popf
lds
cmpsl
pop
xor
lds
mov
jne
sbb
add
sbb
scas
xrelease
repnz
aam
jecxz
xchg
mov
icebp
rcl
in
inc
jmp
pop
pop
test
mov
jno
sub
cmp
or
jb
lea
ror
xorb
bound
lahf
fs
imul
jbe
inc
repz
inc
inc
outsb
sahf
jmp
lret
mov
out
insl
or
jmp
addr16
sub
int
jnp
cmp
add
jecxz
test
pop
and
xorb
in
pop
dec
mov
push
and
dec
mov
mov
mov
pop
ret
mov
push
jp
outsb
sbb
sbb
divl
dec
repz
into
repnz
iret
add
add
dec
jp
fldt
push
pop
adc
adc
pop
test
inc
inc
push
movsl
pop
fidivs
add
notl
xor
int
xchg
pop
subl
add
in
add
je
mov
andl
mov
inc
mov
cmpl
jne
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
jmp
and
leave
adc
adc
call
sub
sbb
jo
pop
jge
jo
inc
flds
movsb
pop
xlat
jbe
test
fwait
sbb
xor
mov
mov
rol
cmc
stos
out
lret
sbb
lock
repz
push
sub
jno
push
dec
stos
shll
outsb
cli
xchg
scas
enter
xor
rcrl
mov
test
mov
add
out
pop
ret
in
mov
fcmovu
or
xor
pop
and
ret
mov
add
sbb
add
lock
mov
ffreep
pusha
or
pop
xchg
daa
or
mov
sub
inc
mov
fsubrp
test
inc
sub
pop
xor
ja
adc
dec
and
dec
ret
sub
xchg
in
sti
test
or
cltd
mov
sbb
arpl
bound
push
mov
faddl
and
mov
adc
mov
in
fisttpl
lea
and
mov
xchg
mov
rclb
mov
arpl
inc
adc
nop
push
adc
stc
shlb
pop
out
dec
add
push
hlt
fisttpll
dec
inc
mov
int3
int3
outsl
mov
cmpsl
aaa
lahf
or
add
fidivrs
scas
sub
cmpsb
mov
mov
jo
movsb
cltd
or
out
jg
lret
xchg
xlat
mov
ret
add
mov
cmpl
lcall
outsl
lock
jp
sbb
mov
push
out
push
xor
xor
scas
xacquire
xor
push
push
sub
loope
jl
cli
fisubrs
fwait
stos
push
jl
lods
push
pop
call
or
cld
loopne
arpl
mov
mov
data16
divb
dec
pop
sbb
lcall
out
lcall
or
push
pop
cmp
pop
sub
sbb
test
sbbb
stos
ljmp
daa
xor
jno
enter
sbbb
lret
xchg
push
mov
dec
insl
mov
mov
fwait
cmp
sarb
int
pop
rorl
mov
scas
jg
in
xchg
cmovl
xchg
imul
sti
shrb
fisubl
push
fldenv
cmc
fbld
cltd
jbe
jns,pn
popa
hlt
sbbl
js
mov
push
dec
sbb
rclb
xchg
pop
insl
loop
ret
and
push
testb
mov
outsl
pop
mov
mov
or
ljmp
dec
xchg
cmp
inc
or
mov
xlat
xchg
mov
mov
lock
push
or
jl
cli
or
fxch
orl
or
xor
pop
cmp
bound
or
les
adc
and
mov
out
imul
sub
dec
and
and
mov
int
out
gs
xchg
push
xor
xor
repnz
mov
sub
jo
call
inc
cld
xchg
ljmp
xchg
lahf
ficoml
jl
xchg
xchg
insb
push
lds
jg
xor
and
mov
stos
mov
shll
or
out
fldenv
cld
cmp
sub
sub
fstpl
ret
and
xchg
in
sbb
sbb
fs
cmp
jns
bound
xchg
add
inc
stc
aam
jmp
rolb
xchg
push
add
jp
add
popa
add
xchg
dec
andb
ljmp
inc
out
add
fnclex
fsubl
fwait
enter
lods
rorb
addl
xor
movl
cmp
movl
jne
jmp
js
stos
loopne
jae
cmc
pop
sub
mov
push
jo
pop
jge
jo
mov
pop
xchg
adc
pop
sub
sub
add
mov
dec
pop
mov
or
test
sub
loope
out
xor
adc
add
jmp
in
inc
ja
push
jge
jno
stos
lods
mov
inc
cmp
insb
lock
lret
ret
xchg
cmpsb
sub
daa
xchg
jle
lret
scas
mov
push
icebp
ret
xchg
and
ret
aaa
adc
repnz
xchg
adc
fsubs
repnz
aam
pop
push
or
lock
push
pusha
mov
out
aaa
cltd
inc
test
adc
jno
repnz
jle
out
jns
mov
xor
es
testl
je
and
and
lods
loope
sbb
xor
cli
sbb
sti
mov
mov
in
sub
subl
dec
arpl
out
in
mov
pushf
xlat
jnp
pop
fwait
push
xlat
scas
imul
repnz
stos
es
test
jb
or
dec
fcomps
outsl
pop
add
dec
xor
repz
pop
cli
jnp
adc
xor
repz
test
in
fcoml
cmp
dec
icebp
or
popf
ret
addb
sbb
xlat
popf
xchg
sub
mov
insb
shlb
sbb
shrb
dec
sahf
insl
out
ret
jae
aad
pop
insl
test
dec
adc
lret
mov
pop
setle
xlat
shrb
das
jb
push
arpl
xchg
test
or
lds
pop
mov
roll
adc
sbb
dec
lock
push
mov
dec
ljmp
adc
enter
sbb
cmc
mov
rcll
popf
push
push
adc
imul
cmp
enter
mov
sub
xchg
add
adc
push
cmpsb
inc
mov
add
mov
mov
adc
insl
inc
test
inc
fs
cmp
pushf
jle
or
cltd
push
xchg
mov
dec
ret
xchg
jle
inc
int3
adc
jnp
pop
call
ds
and
les
hlt
pushf
push
fbld
or
lock
insb
mov
sbb
push
stc
ljmp
sbbl
and
dec
cmpsb
or
xchg
push
in
jbe
fcomip
inc
and
xor
jmp
loop
and
mull
sahf
in
xor
add
sbb
mov
add
jbe
cmc
pop
cmc
shlb
stc
dec
jnp
sti
jo
inc
les
jnp
and
dec
ljmp
ljmp
sub
sbbb
cmp
aam
xor
lock
fbstp
push
fstl
mov
imul
rolb
popa
call
inc
mov
cli
data16
sub
mov
enter
xchg
mov
fsubrs
mov
dec
hlt
stc
dec
psubq
data16
dec
aas
cmp
arpl
pop
sub
fs
cmp
shlb
or
loopne
shr
hlt
jle
sahf
sbb
cmp
out
ret
out
jne
push
jbe
rclb
add
mov
adc
push
int
pop
mov
dec
movsl
inc
mov
fildl
dec
shll
mov
sub
mov
imul
sarb
and
push
popf
sbb
add
pop
lds
loope
push
call
push
lahf
test
ss
popa
movsb
pop
clc
into
jnp
mov
mov
cmp
add
jmp
mov
xor
add
mov
mov
xor
add
mov
jmp
mov
mov
jmp
mov
cwtl
test
jb
jb
xchg
adc
pushf
pop
push
jo
pop
jge
jo
pop
xchg
stc
rorl
xor
xchg
js
xlat
jl
enter
push
out
pop
mov
inc
xchg
leave
scas
cmp
inc
mov
iret
or
js
or
pusha
push
xchg
jb
push
inc
pusha
jg
in
mov
sahf
icebp
add
shlb
adc
cmp
les
jmp
rol
dec
jmp
sbb
sub
nop
mov
push
in
ljmp
add
mov
jmp
sbb
testb
sbb
jb
and
imul
daa
test
cld
dec
cld
cmpsb
je
jbe
imul
shll
in
cmpsl
mov
jmp
sub
fiaddl
mov
mov
stos
push
insl
pop
leave
xchg
and
test
xchg
je
sub
mov
outsl
shlb
pop
rcrl
test
xchg
inc
notb
dec
mov
lock
pushf
cmpl
subl
adcb
out
orl
imul
std
inc
arpl
fs
jnp
loop
mov
mov
aas
pop
btc
xor
fwait
out
sbb
sbb
cmp
add
movsl
ljmp
sbb
mov
mov
orl
test
into
cmp
cli
add
jbe
into
mov
dec
in
pop
mov
orl
scas
push
xor
or
xchg
mov
outsb
xchg
add
push
pop
sbb
xor
invd
mov
sbb
cmp
out
mov
mov
in
ret
mov
mov
mov
dec
push
pushf
sbb
sahf
add
ret
loope
jno
lret
in
and
pop
imul
imul
inc
pop
fs
inc
cmpsl
mov
add
js
test
or
push
in
or
add
scas
iret
mov
xor
ret
push
mov
ljmp
sub
mov
test
insl
test
push
xchg
loope
jne
mov
xor
fldl
sbb
mov
in
sub
and
cli
daa
test
xchg
and
fidivrs
xor
or
and
inc
push
jb
lods
mov
push
sti
add
lahf
push
xchg
cli
jns
sub
jae
std
out
loopne
ja
dec
test
bound
pusha
rol
outsb
jle
pop
mov
hlt
les
mov
lods
test
or
xchg
test
adc
call
cmp
jo
push
bound
push
adc
es
es
mov
mov
pop
std
jle
lock
sub
mov
push
or
push
daa
incl
sarl
fistpll
ds
push
xchg
movsl
or
mov
mov
ss
xchg
cwtl
push
pop
bnd
movsb
gs
push
push
je
add
xchg
mov
jg
add
pop
icebp
iret
int
jl
nop
jnp
mov
es
aad
mov
mov
fiaddl
lods
insl
or
addr16
mov
add
cli
push
mov
push
pop
jnp
aad
cmp
outsl
push
lock
insb
into
and
jl
and
add
ret
jne
shlb
dec
iret
inc
pop
xlat
mov
mov
jns
hlt
pop
loopne
mov
push
push
sbb
fs
fwait
lret
out
cmc
add
mov
popl
mov
mov
mov
mov
add
pop
pop
ret
push
mov
sub
and
movl
mov
adc
movl
sbbl
mov
subl
push
movl
cmpl
je
cmpl
jne
push
push
push
call
mov
dec
mov
jmp
mov
xor
sub
mov
sbbl
jmp
mov
mov
pop
dec
xor
lock
jo
mov
lret
addr16
inc
das
xor
mov
dec
scas
add
jge
jns
xor
ret
jns
lret
mov
enter
popf
dec
jecxz
inc
out
out
lock
dec
popa
inc
fbstp
movsb
fstp
mov
into
inc
push
dec
sub
cmc
pusha
inc
mov
jl
cmp
fimuls
sbb
add
inc
lods
jmp
leave
lock
jb
sbb
sbb
arpl
add
js
dec
sub
pop
int3
pop
push
addr16
sbb
fwait
insb
jns
dec
test
mov
and
jmp
pop
pushf
push
xchg
jns
xchg
add
fdivrs
ret
mov
jo
sbb
push
pop
pop
jns
pushf
mov
divb
sub
imul
sbb
and
pop
sbb
cmp
je
push
scas
jae
cld
std
xor
or
jmp
bsf
xor
dec
or
push
and
mov
das
jle
adc
and
in
mov
data16
jp
hlt
scas
lahf
pop
cs
push
sbb
inc
inc
inc
pushl
test
pop
sbb
insl
cmp
into
pop
xchg
mov
cmp
in
lods
mov
mov
push
mov
mov
xor
daa
or
lods
inc
inc
out
jl
jmp
loopne
fwait
test
xor
rcl
inc
lret
mov
test
sub
sar
pop
sub
pop
adc
fidivrl
fst
lods
lods
mov
inc
fbstp
mov
subb
push
xor
stc
call
les
loope
xor
in
loopne
fsts
loopne
add
and
mov
inc
xchg
lods
dec
in
push
xchg
cwtl
adc
fstpl
rcll
jl
cmp
dec
mov
stc
into
out
outsl
idivb
mov
jg
or
xor
cmc
and
inc
mov
stc
jns
lods
insl
adc
in
cmp
loope
test
push
fdivs
push
stc
push
pop
and
add
cmp
imul
subps
imul
mov
pushf
and
daa
push
and
and
pop
xor
jmp
add
fldl
out
lret
push
and
inc
xor
aad
loopne
add
mov
xchg
sub
dec
or
pop
and
arpl
lods
xchg
pop
xchg
mov
push
sahf
repnz
adc
aam
sbb
add
jae
xchg
cmp
fidivrl
cmpsb
andl
popa
cli
lods
pop
or
outsb
jb
lret
subl
jmp
hlt
xor
fwait
repz
inc
xchg
aaa
push
push
lret
pop
pop
jo
mov
loop
add
sbb
and
ja
ljmp
sub
sub
dec
jno
sub
je
xor
jb
push
jmp
jmp
bound
xchg
fisttpll
and
repz
mov
test
les
loopne
imul
cmp
xchg
out
dec
push
movsb
cmp
mov
sbb
in
sub
jl
insb
test
push
cli
jmp
out
sbbl
cmc
arpl
testb
push
pop
lahf
mov
xor
out
lahf
cmpsb
in
mov
pop
repnz
sbbb
push
stc
mov
stos
xor
pop
iret
outsb
in
pop
movsb
negl
cmp
pop
push
mov
inc
mov
xchg
lock
inc
cmpsb
clc
cmp
fdivs
jp
test
lods
lds
dec
add
outsl
pop
inc
mov
fwait
dec
push
fnsave
or
ret
mov
les
in
and
sbb
add
int
inc
pop
pop
sub
insb
enter
jo
xlat
mov
outsl
in
cwtl
popf
mov
sub
imul
and
mov
add
mov
adc
xchg
xor
test
cmp
mov
in
adc
cmpsb
sub
out
mov
mov
xchg
scas
pop
aas
mov
shll
push
sarl
mov
mov
jp
out
cmc
xchg
daa
test
mov
lea
sti
rcrb
mov
sahf
outsl
popf
inc
repz
add
add
es
out
xchg
lahf
orb
mov
sub
cld
jg
or
push
es
cmp
mov
jl
push
mov
test
cmp
je
stos
outsl
sub
cmp
int3
lock
cmp
inc
in
pop
in
xchg
outsl
mov
fs
or
mov
lahf
stos
mov
insl
in
hlt
leave
lret
inc
mov
mov
sub
mov
imul
stos
clc
lods
xchg
pop
mov
das
dec
int3
imul
push
leave
mov
aad
add
loopne
mov
push
in
mov
inc
lret
enter
jns
xor
push
icebp
xor
xchg
out
xchg
pop
add
sbb
nop
jg
rep
lods
imul
mov
xor
inc
fsubr
test
cltd
mov
mov
mov
outsb
cmpsl
shrl
in
adc
adc
sbb
mov
adc
loop
clc
jns,pn
add
add
and
add
add
jmp
xor
or
inc
mov
cmpl
jae
cmpl
jne
push
pushl
pushl
call
cmpl
jne
mov
inc
mov
jmp
mov
push
xorl
push
test
jmp
mov
mov
jne
jne
sub
pop
jo
mov
mov
out
push
lahf
sbb
mov
mov
mov
jo
int
cmp
push
ret
mov
aad
inc
inc
sbb
jge
repz
notb
push
xor
fldl
cmp
in
hlt
and
and
sbb
lea
mov
mov
adc
add
std
sub
lock
addr16
daa
adc
out
mov
imul
mov
in
add
adcb
sub
shrb
arpl
adc
pop
sub
cmp
sbb
mov
stos
cmp
inc
je
loope
and
add
or
fwait
jae
movsb
fwait
xor
adc
push
mov
sahf
mov
mov
jmp
setnp
pop
dec
jmp
xorl
test
adc
mov
jo
scas
jae
push
xchg
add
call
imul
mov
jg
movsb
mov
jbe
insb
bnd
inc
sti
div
xchg
gs
cmp
leave
icebp
je
sbb
divb
sub
adc
sub
mov
out
cwtl
cmp
insb
call
jnp
adc
inc
stos
mov
and
imull
xor
mov
cmpsb
rorl
cld
lcall
xchg
out
pop
cmp
nop
gs
subb
and
int3
sbb
ret
lods
popf
mov
cmp
jno
jno
cmp
xchg
jnp
inc
pop
les
xor
sbb
add
cmpsb
aas
shlb
adc
cmc
dec
inc
stc
es
out
or
and
mov
ds
sub
push
ret
and
jmp
ss
sbb
adc
rclb
cld
push
aam
cmp
lret
clc
cmpb
cmp
nop
mov
test
pop
prefetcht1
nop
cmc
leave
int
pop
insl
lea
fdivs
sub
rclb
outsb
loop
adc
mov
xor
lea
negl
out
imul
rorb
aam
sub
pusha
add
inc
fdivl
and
adc
outsl
cmp
out
insl
idiv
sub
dec
test
inc
lret
xchg
jge
jmp
push
inc
push
out
and
push
aam
xchg
ja
fisttpl
and
inc
jmp
pusha
fwait
das
sbb
mov
loop
mov
mov
lds
negl
adc
repz
xor
iret
fwait
adcl
adc
xlat
iret
rorl
pop
iret
shlb
dec
inc
mov
cmp
shlb
lcall
lods
in
and
xchg
out
je
mov
add
mov
or
mov
movl
cmpl
je
cmpl
jne
push
push
push
push
pushl
push
push
call
mov
dec
mov
jmp
and
imul
mov
add
add
mov
sub
mov
jmp
lret
sbb
inc
loopne
push
mov
rorb
ja
dec
inc
js
data16
mov
adc
shll
arpl
jp
loope
out
sub
push
jp
inc
repnz
pop
xor
call
int3
cmp
sub
xor
les
cmp
sbb
push
and
or
movsb
xchg
jmp
pop
push
inc
fwait
or
movsl
mov
pop
call
inc
and
aam
les
and
add
lods
and
or
aaa
imul
push
sub
inc
rcll
jp
test
sub
dec
mov
sub
mov
jmp
imul
cmp
in
scas
subl
jecxz
fimuls
mov
test
cmp
shll
xor
xchg
xchg
hlt
mov
iret
call
mov
and
mov
aas
cmp
dec
nop
and
mov
insl
jl
mov
cmpsb
mov
mov
loope
mov
push
aam
mov
xchg
sub
sbb
fcmovnu
adc
fsubs
sbb
mov
cmp
aas
dec
pop
mov
or
sub
cmpb
inc
cmp
push
mov
mov
jbe
hlt
and
in
mov
fs
mov
cmpsl
adc
jb
and
insl
dec
mov
sub
jge
and
testb
xchg
fsubl
scas
lret
and
sbb
ftst
jbe
stos
xchg
insb
mov
mov
jecxz
pop
cmp
sbb
cmp
sub
add
sbb
mov
inc
inc
sub
call
inc
inc
jecxz
mov
dec
or
jo
mov
mov
pop
shlb
mov
sbb
sarb
pop
push
shr
pop
popl
ja
inc
pop
popf
dec
xchg
lock
rolb
das
std
xchg
xchg
loop
mov
or
and
or
gs
testb
fld
imul
xor
loopne
dec
dec
test
aaa
insl
je
mov
lods
xchg
imul
dec
dec
sub
adc
jmp
inc
out
mov
mov
enter
fstps
mov
mov
jmp
rolb
int
sbb
popl
test
xchg
test
xchg
dec
jae
pop
jb
xchg
sbb
sub
jnp
das
test
adc
mov
lods
negl
xchg
pop
outsb
popa
stos
popf
or
lock
in
stos
gs
xchg
icebp
ficoms
ficompl
outsl
in
and
xchg
andl
jmp
xor
add
inc
mov
cmpl
jae
cmpl
jne
push
pushl
call
jmp
xor
sub
xor
jmp
call
jno
popa
push
xchg
arpl
jg
pop
fs
mov
cli
cmp
mov
faddl
mov
das
nop
cmpsb
loope
adc
xor
sub
fdivrs
pop
fsubrl
dec
mov
push
fucomp
xchg
repnz
aas
pop
into
rcrb
sub
push
test
dec
sbb
imul
xchg
and
jns
test
jle
outsb
mov
push
xor
inc
push
jl
push
lret
xor
mov
push
les
mov
add
add
roll
arpl
sbb
insb
dec
add
sub
xor
xor
cmp
xchg
jns
adc
cwtl
add
clc
and
flds
in
adc
and
push
mov
jp
inc
push
in
cmpsl
dec
lahf
cmpsl
jmp
mov
popa
and
pop
cmpsb
xor
ds
dec
arpl
hlt
pop
icebp
mov
dec
lcall
in
or
aad
bound
test
stos
scas
sub
add
mov
and
pop
mov
lea
push
pop
aaa
push
test
jae
scas
mov
push
cs
jnp
pop
sub
pop
insl
insl
xor
sbb
dec
fidivs
out
and
enter
mov
test
mov
mov
xchg
mov
xchg
out
lea
outsl
mov
andb
adc
adc
xchg
pop
test
mov
jns
jo
inc
loopne
sub
and
push
cs
fs
test
imul
fbld
cwtl
int3
mov
or
mov
jno
fdivrs
and
daa
mov
xor
in
or
stos
in
push
inc
ds
movsl
fildl
jb
xchg
repz
lret
push
inc
or
jmp
fimuls
pop
adc
push
andb
pusha
ret
and
outsl
sbb
lahf
jg
xchg
mov
hlt
addr16
pop
jb
jo
loope
cmp
xchg
jae
std
sti
dec
inc
ret
cmpsb
push
push
adc
mov
cs
jg
out
lods
stos
cwtl
lret
je
rcll
idivl
loop
jp
push
call
mov
add
sbb
daa
and
inc
push
sub
movsl
jmp
insl
mov
out
xchg
movsl
lock
out
cmp
outsl
mov
scas
es
inc
xacquire
ljmp
cltd
inc
call
fsub
popa
push
lcall
fwait
lock
xchg
sub
cmp
lahf
cs
hlt
lods
sub
push
inc
scas
inc
push
out
dec
popa
fstpl
sti
repz
dec
dec
in
daa
stos
or
mov
mov
mov
mov
adc
mov
xor
mov
xor
adc
xor
jmp
push
popa
jne
add
cmp
hlt
adc
mov
jle
jo
push
mov
aas
pop
add
fdivl
pop
outsb
or
pusha
js
mov
inc
pop
lock
inc
gs
jmp
daa
addb
lods
popf
cltd
ds
add
nop
pop
xor
insb
mov
pop
orl
lods
mov
add
leave
mov
imul
loopne
push
jns
mov
testl
xchg
mov
dec
adc
shr
cmp
popa
cmp
cmc
jmp
rcrl
dec
test
sub
ljmp
clc
lods
pop
push
in
mov
std
out
ret
pushf
les
in
pop
pushf
test
jl
dec
mov
add
daa
adc
stos
scas
cli
dec
jecxz
jg
sub
rcll
aam
add
inc
in
fstpl
pop
pushf
adc
rolb
out
stos
mov
cmp
sbb
sarb
arpl
mov
imul
mov
popa
xorl
test
js
mov
mov
jl
imul
adc
loop
and
negl
aad
fs
aaa
mov
sti
lcall
loop
sub
cmp
cvtpi2ps
add
lahf
adc
or
mov
movntq
dec
sbb
mov
adc
pop
sti
mov
push
cli
mov
lret
stc
lret
sbb
js
outsb
xor
pop
ss
cmp
popf
or
mov
mov
xchg
insb
push
cmpsl
add
movsl
xchg
test
ss
cmp
in
jae
nop
cmp
pop
sarl
lea
xchg
xor
xchg
lret
sbb
hlt
push
lahf
sub
sub
ret
inc
cmp
xor
mov
test
xchg
rcrb
xlat
pop
and
lods
fstpl
sarl
cwtl
aas
ss
cmp
mov
and
sbb
fisubrl
pop
imul
lret
xlat
pusha
sub
pop
loop
test
repnz
cmc
xor
adc
push
or
adc
fld
inc
inc
fxch
xor
test
jb
imul
stos
pop
ffreep
mov
inc
mov
push
add
mov
repz
add
xchg
stos
mov
pop
jae
add
ret
cld
pop
je
std
pop
push
jecxz
loopne
mov
pop
add
aaa
lods
pop
cmp
cmp
cmp
cltd
push
hlt
daa
je
ljmp
hlt
imul
inc
std
push
fldcw
bnd
cli
mov
add
mov
mov
mov
je
notl
mov
xor
xorl
add
jmp
inc
mov
jp
adcb
mov
addr16
outsb
jo
mov
lods
cmp
adc
xchg
lahf
pop
subb
in
mov
mov
clc
adc
pop
jle
xchg
mov
int3
dec
or
fstpt
xchg
dec
cs
jle
jecxz
imul
adc
xchg
stc
jnp
mov
mov
cmp
out
push
inc
cmpsl
gs
jmp
icebp
and
rcll
ljmp
rcll
insl
sqrtps
mov
ret
and
nop
xlat
out
add
sub
dec
xchg
pop
popa
xchg
or
mov
arpl
cld
mov
mov
mov
enter
paddd
mov
push
and
push
mov
fimull
push
aad
mov
cld
cmp
mov
push
pop
mov
and
repz
sub
lods
pop
sbb
in
and
stos
dec
mov
mov
pushf
cs
stos
aad
cs
lahf
xchg
call
imul
mov
shlb
daa
pop
adc
mov
rol
cmpsb
leave
push
jmp
push
jns
jecxz
pop
push
fisubrs
pop
lds
loopne
fwait
daa
xor
pop
or
out
clc
ret
scas
pop
rorb
jns
loope
pop
stos
sbb
lea
repz
pop
sti
add
lahf
jg
shlb
fisttpll
mov
pop
dec
add
xor
adc
or
data16
pop
stos
add
movsb
dec
mov
call
addl
mov
adc
aad
subb
pop
or
mov
aas
fs
nop
notl
pop
fists
mov
int3
mov
imul
mov
arpl
and
or
xchg
dec
inc
or
test
repnz
push
iret
jae
or
sbb
push
rclb
or
dec
enter
adc
xchg
xchg
mov
push
jg
pushl
in
jmp
adc
and
xor
insl
in
dec
jmp
icebp
mov
loope
pop
aam
shll
sbb
movsl
fdiv
or
sbb
mov
mov
pop
imul
xchg
push
mov
aad
test
sub
mov
shl
test
sub
gs
imul
sbb
cmp
xlat
orl
rclb
stc
fldl2t
outsb
nop
movsl
jecxz
scas
pusha
in
push
into
push
ja
popf
mov
pop
ljmp
cwtl
or
out
add
mov
into
scas
mov
leave
stos
cmp
jne
pushl
jmp
and
lods
shrb
in
sub
imul
jle
jo
push
in
pushf
xchg
adc
xlat
add
loopne
mov
dec
xchg
or
mov
jge
test
push
and
pop
adc
loope
js
sub
cli
add
dec
xor
inc
jge
cmp
xor
xchg
and
mov
sti
cmp
pop
out
pop
out
mov
sbb
lret
mov
mov
mov
pop
mov
iret
xchg
fucomi
mov
pop
scas
pop
adc
gs
lret
cmp
mov
int3
push
outsl
orl
xlat
adc
mov
mov
cmp
int3
mov
xchg
and
dec
mov
sarb
adc
stos
push
sub
pop
in
fmuls
filds
hlt
dec
inc
pushf
shlb
mov
out
or
fimull
push
sbb
mov
push
fcomp
jg
loopne
ljmp
loopne
or
gs
iret
lds
inc
addr16
out
mov
push
and
cmp
aas
xchg
pushf
add
iret
shlb
mov
les
popf
mov
lds
pop
outsb
pusha
push
fdivs
pop
mov
inc
sbb
insb
cmp
out
fisubrl
jae
pop
enter
clc
cmp
sbb
data16
in
jns
in
add
push
sbb
dec
imul
push
jo
mov
xchg
jle
xor
fbld
nop
bound
push
xor
and
inc
mov
test
or
call
test
cltd
ss
xchg
stos
fwait
repz
subl
int3
add
cmp
test
add
mov
imul
cmp
aaa
pop
into
lods
pop
hlt
or
add
pusha
test
iret
lds
xor
xchg
lret
cwtl
add
fdivrs
stc
jmp
cmc
mov
cs
cmpsb
xlat
and
adc
add
jo
int
imul
fs
arpl
pop
xor
jecxz
dec
or
cmp
jl
jo
in
fsubrs
lret
jnp
aam
sarb
fidivrl
sbb
or
lea
imull
jmp
pop
add
push
out
int
push
fsubr
adc
xchg
dec
sahf
cmp
push
hlt
outsl
push
fs
lret
clc
inc
repnz
add
repz
add
incl
aas
inc
pushf
movsl
jp
les
cwtl
sub
dec
sub
insl
sbb
outsl
pop
mov
dec
jge
mov
fcompl
aas
lcall
jmp
pop
insl
and
xor
insl
jp
or
cmpsb
xchg
nop
push
jle
jo
mov
aas
into
ss
cli
shl
mov
dec
mov
pop
and
inc
and
es
je
js
repz
test
mov
mov
in
mov
sahf
sbb
adc
and
test
jmp
mov
sbb
idiv
mov
dec
rcll
fsubp
sahf
mov
add
ret
xor
rcr
sub
pushf
pop
mov
loope
outsb
inc
jle
cli
or
jecxz
mov
xchg
inc
xor
pop
out
cltd
lea
xor
mov
insb
rclb
inc
fs
mov
mov
nop
mov
cmp
ret
or
lods
xchg
scas
or
jne
cmp
dec
popa
or
push
xchg
pop
or
push
push
testl
adc
iret
add
mov
ret
push
ljmp
data16
ss
js
test
mov
flds
push
push
adc
stc
or
dec
movsb
das
int
mov
cli
mov
lahf
xchg
and
in
jno
mov
cmpsb
add
lods
push
jae
push
shlb
xchg
movsl
pop
in
cli
out
mov
mov
inc
inc
scas
lods
inc
pop
lods
test
sbb
lods
sbb
loope
fisubs
arpl
xor
stos
mov
repz
shll
fidivrs
shrl
add
mov
push
fdivr
dec
sbb
adc
dec
push
lods
jae
loopne
nop
into
js
lock
pop
jbe
imulb
inc
lret
stos
pop
jns
int
jns
dec
ret
add
popa
orl
cmp
dec
fldcw
ja
or
fnstcw
jne
push
stos
lret
js
pop
mov
ds
rorl
iret
out
fisubs
lcall
fdiv
cmp
test
insb
imul
xor
pop
out
and
data16
xchg
adc
push
xor
hlt
jne
mov
mov
jae
and
mov
test
add
fsub
std
lds
sub
dec
and
sahf
mov
pop
cmpsl
outsb
int
xchg
push
inc
orb
cltd
test
sub
pop
pop
aas
int3
int3
xor
mov
ret
jbe
lret
xchg
mov
push
mov
mov
jmp
sub
ds
pushf
addr16
pushf
sbb
and
inc
lret
outsb
jmp
xlat
loopne
ficomps
jns
dec
mov
ja
pop
shl
outsl
push
icebp
loopne
mov
mov
mov
mov
mov
sub
mov
movl
cmpl
je
cmpl
jne
pushl
push
push
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
orl
xor
add
cmp
movl
je
pushl
decl
pushl
xorl
call
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
call
jmp
sub
mov
or
mov
adcl
xor
decl
add
movl
cmp
je
not
mov
mov
mov
xorl
jmp
lods
mov
loopne
outsb
push
repz
scas
popl
repnz
dec
inc
jbe
jo
jle
jo
jb
hlt
repz
push
ds
mov
mov
xor
and
push
out
fwait
std
mov
lret
mov
scas
shrl
jbe
sub
xchg
inc
movsl
nop
in
push
dec
and
clc
push
int
jns
mov
push
push
aas
jns
loop
das
icebp
sbb
or
loope
dec
test
ljmp
cwtl
out
or
pop
mov
neg
aam
std
jb
xor
add
cmp
mov
push
and
in
dec
ds
lds
mov
cli
decb
nop
std
mov
jmp
fiadds
arpl
pushf
add
cwtl
or
mov
das
loopne
mov
cmp
inc
ljmp
and
jmp
mov
loop
mov
pop
pop
in
mov
push
orl
sub
push
jno
jno
mov
jnp
in
and
cli
push
cmp
movsb
add
in
hlt
shll
add
stc
scas
bswap
add
loopne
mov
mov
out
aas
lods
loope
stos
enter
cmp
popa
ljmp
iret
mov
rcr
imul
lods
xchg
out
pop
xor
mov
aaa
push
adc
int3
or
aas
dec
and
add
mov
and
mov
mov
mov
push
scas
popf
stos
dec
xorl
insl
add
dec
imul
jmp
loop
fldcw
aaa
std
fwait
adc
xchg
mov
mov
gs
pop
pushf
adc
mov
pop
pop
in
lcall
jne
xchg
gs
inc
xor
jno
mov
xchg
push
ja
cmpsl
fisubl
lret
das
dec
xor
icebp
inc
cmc
fcoms
jo
insb
loopne
lahf
cmp
mov
std
mov
dec
xor
andl
popf
fcmovu
mov
movsb
movsb
push
stos
xchg
rcl
lcall
mov
es
pop
cld
pop
mov
inc
fcmovbe
lods
outsl
icebp
xor
push
dec
call
cs
sti
mov
xor
push
sbb
cmp
push
mov
std
jg
adc
imul
movsl
jbe
cmp
fistps
cli
rcrl
or
push
cmpsl
ss
or
xchg
xchg
add
push
fxch
ja
testb
cmp
stos
stc
std
fstpt
sub
pop
and
jmp
pop
jmp
call
jle
ljmp
call
inc
in
andl
mov
inc
mov
cmpl
jne
call
cmpl
jb
mov
orl
add
mov
or
mov
mov
sbb
mov
addl
add
add
mov
mov
mov
add
neg
xor
and
mov
or
mov
andl
mov
inc
mov
cmpl
jne
pushl
pushl
push
pushl
push
pushl
pushl
call
cmpl
jne
xor
add
inc
mov
cmpl
jb
mov
add
lea
mov
push
jmp
add
xor
inc
cld
xchg
loop
jb
hlt
xorb
mov
fists
pop
fcomp
xchg
sub
push
sub
jo
movsb
push
and
jo
inc
xor
pusha
push
sbb
gs
sbb
xor
test
pop
ja
lret
mov
pushf
roll
gs
dec
dec
scas
push
inc
sbb
mov
or
adc
mov
pop
mov
jecxz
mulb
mov
push
xchg
lods
inc
xchg
xchg
les
dec
outsl
push
rcl
jno
lret
repnz
cmpb
lods
pop
in
arpl
movsb
sub
mov
lds
cmpsl
or
add
mov
popf
inc
dec
imul
imul
fstp
sbb
insl
ret
push
mov
xchg
mov
es
add
ja
jns
and
shlb
shr
repz
fbld
dec
aam
into
mov
fildl
mov
mov
sti
cs
ss
imul
mov
mov
and
jmp
mov
or
test
sub
mov
cmp
sub
and
sbb
push
dec
test
xchg
inc
or
add
je
out
push
std
sbb
in
sub
out
repz
inc
repnz
lahf
addb
into
sbb
rcrl
insl
jb,pn
loop
sbb
jbe
xor
sarb
lahf
aaa
lea
sub
fs
popa
inc
daa
dec
sbb
sarb
dec
dec
mov
loop
add
sub
cmpsl
inc
inc
imul
hlt
and
stc
test
jmp
push
enter
test
outsl
sbb
cmp
or
or
scas
outsb
pop
inc
movsb
mov
in
hlt
jle
fidivs
imul
shrl
das
aaa
add
ja
popf
lcall
shrl
ss
cmp
mov
mov
mov
push
stc
aad
xchg
mov
arpl
in
cmp
xor
mov
jecxz
or
sbb
test
push
mov
jno
or
xorb
incl
dec
inc
xor
pop
mov
cmp
mov
mov
enter
push
je
ljmp
fnstcw
out
push
popf
lahf
or
and
fildl
or
loope
call
jl
popf
and
and
dec
inc
shrb
mov
cli
call
shlb
jne
pushl
call
mov
jmp
ret
sbb
sub
jno
pop
or
mov
leave
jo
jo
jle
jo
xchg
mov
sub
jmp
dec
push
ds
or
sub
xor
fsubrl
movsl
dec
add
xlat
movsl
cmp
pop
pop
shrb
mov
pop
xor
sub
inc
andb
xor
lods
jne
inc
jl
cmp
lods
pop
and
lds
sub
pop
sahf
dec
addb
repnz
mov
jecxz
and
push
pop
dec
movsb
addb
nop
in
das
test
pop
movsb
inc
pushf
dec
out
inc
iret
inc
int
pop
pop
addr16
movsb
enter
xor
sahf
inc
dec
or
int3
add
sbb
xor
jbe
jge
pop
out
xchg
jno
int3
icebp
mov
mov
std
rorb
pop
jle
mov
inc
or
test
scas
daa
pop
mov
fisttps
push
dec
aas
ret
movsb
insb
jl
sub
jne
je
adc
mov
mov
shlb
negb
inc
lods
xlat
or
inc
jo
and
pand
jl
setb
cmp
lret
jnp
sti
pushf
push
std
les
jmp
xor
ljmp
mov
pop
movsl
cmc
in
cltd
jnp
dec
cmpb
lret
jno
mov
fdivrs
push
insb
jp
ljmp
push
mov
mov
adc
pop
gs
divb
push
out
cli
out
nop
pop
mov
adc
js
mov
pop
fisubl
adc
mov
xchg
push
nop
test
push
sbb
inc
data16
sub
rolb
xlat
jo
jmp
movsl
movlhps
sub
push
sbb
jns
gs
mov
pop
mov
ss
sahf
ja
or
and
mov
push
pop
out
mov
mov
or
sub
shlb
push
pusha
out
loopne
cmpsb
and
popf
sub
je
scas
add
xchg
test
cmpsb
mov
enter
addl
in
push
icebp
sbb
fimuls
std
addb
shr
mov
dec
inc
xor
pop
xor
adc
imul
lods
inc
cmp
dec
xor
bound
aaa
adc
loopne
push
pop
xchg
add
shlb
imul
aad
repnz
lds
dec
fadd
mov
sub
cmp
jne
pop
pop
lret
dec
mov
mov
mov
cltd
mov
jmp
rcll
mov
ja
push
sahf
pop
loope
test
pop
fistpl
dec
icebp
jae
mov
xor
jmp
add
mov
jb
jge
jge
mov
jg
mov
das
flds
test
mov
outsb
inc
xchg
fisttpl
add
jb
adc
sti
daa
dec
movsb
push
add
mov
sbb
shrl
push
adc
imul
mov
mov
sbb
jns
inc
jo
mov
mov
hlt
adc
cmp
popa
xorb
cmpsb
dec
or
cwtl
xor
movsb
arpl
call
fnstsw
jbe
ds
sub
lahf
loopne
fdivrs
xchg
jp
mov
sarl
loopne
fidivs
adc
jl
push
inc
ret
in
dec
loope
rcr
int3
jb
pop
mov
mov
pop
orb
sub
rclb
loop
adc
ljmp
mov
les
mov
push
pop
inc
fs
mov
cltd
pop
jne
mov
sub
loop
dec
mov
aad
dec
adc
and
sbb
and
out
xor
push
pusha
nop
arpl
mov
loop
xlat
stos
lock
int3
gs
mov
dec
pop
scas
fwait
and
push
cltd
lds
and
aam
in
pusha
lds
mov
movsl
std
roll
in
sbb
icebp
repnz
cld
scas
hlt
xor
or
fnsave
test
dec
dec
cmp
pop
test
sbb
inc
xor
cmp
mov
inc
int
lods
daa
rol
mov
js
mov
pushf
pop
jo
inc
popf
xor
cld
aaa
mov
and
std
js
xor
aad
arpl
inc
mov
inc
scas
mov
adc
jnp
es
mov
imul
ret
jno
lods
pushf
sub
cmpsb
cld
lea
sub
inc
imul
cmp
dec
jp
js
andb
sahf
sbb
xchg
inc
call
xchg
pop
pop
dec
inc
adc
push
rorl
sbb
repz
push
mov
inc
xor
loopne
leave
sub
cmp
push
mov
das
push
jne
lret
jp
in
pop
ds
jo
nop
mov
rclb
sbb
je
dec
std
jbe
xchg
aas
aad
in
sub
mov
stos
insl
mov
lods
aas
mov
adc
jns
or
fisttpl
aad
mov
adc
dec
jno
in
test
dec
cld
sbbl
ret
leave
std
into
les
notl
sbb
mov
sub
fmull
dec
xchg
cltd
adc
enter
and
or
idivl
int3
movsl
jg
lods
bound
negb
leave
cld
hlt
iret
sbb
rcrb
mov
sti
cmc
daa
add
cmp
jne
mov
inc
cmp
jb
jmp
mov
xor
add
jmp
mov
movzwl
mov
mov
mov
mov
mov
xor
add
cmp
jne
mov
xor
jmp
mov
add
mov
mov
test
je
mov
push
jmp
icebp
sbb
imul
outsl
stc
in
mov
jo
jle
jo
scas
xor
fcoms
xor
lahf
sub
xchg
filds
pop
cmp
mov
je
sarb
inc
out
fdivs
das
inc
mov
pop
aaa
cmp
mov
fildl
inc
sub
cld
out
sbb
mov
add
dec
fwait
and
cmp
addb
sbb
out
aad
or
add
adc
std
lahf
movsl
xchg
aad
mov
daa
pop
stos
imull
xchg
movsl
sub
xor
dec
lret
sbb
ss
inc
out
jmp
or
adc
insl
adc
xchg
add
test
js
lret
mov
dec
dec
and
sbb
andb
mov
sub
and
push
insb
movsl
jno
xchg
cmp
jmp
adc
cmpl
outsb
lcall
pushf
xorl
ret
dec
scas
sbb
adc
jo
testb
cmp
mov
aas
cmp
adcb
lret
xor
push
sbb
out
xchg
loopne
mov
cmp
xchg
fidivl
pop
sub
mov
out
mov
cmp
pop
inc
jmp
adc
int
ret
int3
out
iret
sub
lods
insb
adc
adc
or
mov
out
jp
stos
mov
loop
lods
xchg
imul
clc
popa
lret
daa
aam
xchg
xchg
enter
sbb
sbb
stos
push
shl
mov
out
xor
sbb
push
xchg
pop
imul
or
ret
jmp
fisttps
rol
pop
add
sahf
jp
pop
adc
cmp
xchg
add
add
shll
jno
inc
push
popa
xor
push
fwait
test
pop
cmc
lahf
xor
adc
cmp
jae
insb
adc
fcomp
mov
xchg
lret
cmp
or
aaa
sub
ficomps
inc
ret
inc
push
outsb
lcall
pop
pop
sub
lret
cmpsb
sub
daa
pop
xlat
mul
cmpsl
mov
inc
mov
push
out
ljmp
lods
or
push
je
movsl
jbe
jbe
cmp
js
cmp
sarl
inc
test
push
js
fldt
clc
mov
add
xchg
lret
dec
mov
or
xchg
into
push
pop
push
jns
inc
subl
movsl
lcall
stos
mov
sbb
jno
aad
cmp
jnp
mov
inc
or
repnz
mov
add
imul
js
lea
mov
dec
pop
xchg
sub
xchg
dec
mov
imul
jmp
aas
fidivrl
sbb
bound
sub
or
dec
enter
jo
jle
jo
outsl
mov
data16
jae
cmpsl
mov
popf
dec
shlb
pop
mov
adc
cltd
inc
mov
ss
xchg
push
sbb
stos
add
mov
in
leave
aas
aad
lds
mov
mov
dec
sub
sub
std
mov
sahf
ds
inc
shrb
jo
cli
add
mov
jl
cmp
rclb
adc
cli
jbe
iret
mov
cmp
adcb
popa
repz
je
push
das
shrb
sub
jl
dec
out
in
sbb
pop
push
test
xchg
inc
in
add
xchg
sahf
jnp
mov
push
int
cltd
iret
dec
repnz
jb
push
sbb
js
pxor
jns
and
jl
add
add
inc
dec
push
dec
push
out
enter
aaa
in
das
ret
mov
adc
jae
cmpsl
cwtl
or
inc
icebp
cmp
mov
cmc
xchg
cmpsb
jl
sub
mov
xchg
push
sbb
cmp
outsl
lods
stos
push
dec
or
sbb
lock
xchg
out
dec
sub
jo
mov
sub
repnz
in
int3
xor
mov
les
je
sbb
arpl
xlat
ret
push
mov
xchg
fildll
push
jle
add
mov
adc
test
sbb
addr16
iret
jno
mov
and
cmp
shl
fsubr
iret
insb
sbb
addl
mov
xchg
nop
loope
xchg
sub
xchg
jns
push
jecxz
and
out
imul
sbb
shrl
pop
test
imul
and
adc
add
pop
in
test
ss
fsubl
dec
jne
jle
push
pop
push
mov
test
lods
and
xlat
xchg
in
subl
out
std
and
jnp
lret
fisttpll
stc
sbb
pop
push
out
rcr
dec
js
out
sub
cmp
lods
mov
mov
addr16
push
jnp
mov
push
lods
add
jne
sub
add
push
into
inc
clc
shr
repnz
adc
cwtl
popa
fidivs
inc
imul
es
data16
mov
xchg
sti
pop
test
add
xchg
mov
xchg
lret
and
xlat
and
lcall
add
or
mov
daa
xchg
cmp
int
adc
addr16
aaa
out
stos
inc
cmp
sub
mov
mov
mov
xor
mov
jmp
mov
jne
pop
push
lret
aaa
popf
in
add
jo
fsub
addr16
in
or
cmp
hlt
das
xchg
push
mov
jae
jle
or
pushf
sub
data16
add
pop
cmp
movq
mov
pop
dec
xor
jne
out
xor
add
xor
jae
or
popa
push
jl
das
aam
lret
insl
adc
ljmp
mov
js
sbb
test
xor
loop
repz
repz
push
xor
in
adc
andl
mov
int3
test
out
jb
cmpsl
or
or
mov
cli
adc
add
mov
in
enter
inc
in
loopne
mov
icebp
sub
scas
pop
dec
outsb
sbb
addr16
out
sbb
or
lret
out
test
xor
or
mov
mov
jmp
lods
add
cmp
push
dec
pusha
xlat
mov
pop
repnz
push
lret
jmp
adc
and
xorb
das
xchg
adc
stos
jae
pop
push
enter
shlb
mov
mov
mov
sub
sub
fcoml
dec
je
cmp
push
cmc
adc
cmp
fbld
pop
mov
adc
imul
mov
adc
mov
sbb
and
inc
iret
pop
mov
inc
aad
mov
xchg
clc
hlt
cltd
fmul
cmp
ds
pop
pop
loop
mov
es
fwait
mov
in
cltd
jnp
mov
movsb
sbb
cmc
push
jmp
cmp
sbb
in
mov
insl
cmpsl
jmp
ljmp
xchg
jb
jns
mov
or
jl
inc
fwait
sbb
pop
daa
mov
scas
ljmp
fs
fadds
sbb
push
pop
sbb
movsb
out
cwtl
adc
mov
and
adc
xchg
cmp
in
cli
es
shrb
cmpsl
mov
push
adcl
mov
push
std
pushf
add
dec
pop
loop
xchg
iret
testb
lods
jnp
pop
imul
sbb
loop
adc
push
mov
xor
pop
dec
pop
xchg
data16
push
xor
cmp
dec
mov
movsl
mov
insb
add
sbb
popf
test
xchg
push
mov
push
popa
stos
jb
lea
sub
xor
dec
in
jmp
arpl
sbb
out
cld
sub
out
jecxz
iret
sti
test
cmp
inc
or
add
mov
imul
mov
xor
mov
lea
cmp
je
mov
mov
mov
mov
mov
xor
xor
jmp
sub
sub
xchg
push
mov
ss
jg
mov
lods
push
outsl
push
mov
divb
lret
das
in
mov
add
and
insl
mov
sub
pop
stos
add
test
xlat
xor
fisubl
xchg
push
aad
sbbb
adcb
imul
or
adcb
lds
icebp
lds
and
insl
sub
inc
and
aam
push
xchg
or
movsb
outsb
lcall
nop
iret
ret
into
mov
push
adc
fs
ljmp
or
mov
cmpsb
imull
xchg
pop
daa
cmpsb
and
adc
push
xor
dec
xor
inc
sahf
fsubrs
jnp
scas
inc
test
pop
add
sbb
lods
dec
fsts
addr16
mov
or
jo
lock
shr
pop
notb
pop
es
in
sub
mov
mov
negb
lcall
push
cmp
pushf
cmp
pusha
xchg
sbb
add
out
sub
and
dec
mov
out
repnz
out
fs
inc
imul
int3
dec
mov
cmp
fwait
mov
icebp
xor
scas
insl
jl
pop
sbbl
test
shl
sbb
xchg
pop
jle
xchg
sub
shlb
aaa
sbb
shll
pop
std
and
mov
xor
adc
push
pop
test
mov
xchg
leave
scas
jo
jbe
dec
addr16
dec
push
mov
in
push
xor
daa
rcrb
movsb
mov
sub
fs
push
cwtl
push
mov
fldcw
pop
leave
push
outsb
sub
sub
xlat
mov
push
jo
pop
xchg
rcrb
xlat
and
fsubrl
cmpsb
adc
push
std
pop
ljmp
pop
xchg
xchg
ret
shlb
std
data16
inc
inc
sub
adc
out
sub
fcmovnbe
dec
cmp
aam
out
inc
test
test
divb
pop
add
gs
push
dec
fsubrs
or
test
inc
test
push
mov
roll
xor
mov
icebp
add
gs
aas
cmp
lock
and
insb
cmpsb
push
dec
insl
and
mov
test
mov
movsb
sbb
jmp
inc
aad
icebp
xor
loop
cli
std
in
sub
mov
fisubrl
pop
imul
add
add
mov
push
cmp
add
div
mov
jmp
adc
inc
rolb
xchg
int
rcll
test
mov
jg
mov
dec
loop
adc
pop
jge
repnz
outsl
adc
jno
xchg
outsl
push
scas
dec
pop
or
test
inc
inc
jns
push
pusha
scas
inc
loopw
mov
and
ret
pop
iret
xorl
in
sahf
fldt
sbb
cltd
add
mov
and
and
adc
ljmp
add
andl
xlat
mov
add
sbb
lock
sub
mov
cmp
in
xor
jmp
push
mov
sub
cs
mov
push
jns
sub
outsb
cmc
sbb
popa
out
out
ljmp
pop
insl
dec
xchg
sbb
leave
sub
imul
test
and
loopne
cmp
jmp
popa
pop
cwtl
std
gs
push
mov
xorl
dec
push
dec
xchg
add
adc
push
jns
sub
sbb
test
mov
pushf
shl
ljmp
mov
or
sbb
cld
pop
add
sahf
rorb
adc
inc
fwait
mov
xchg
push
lahf
bound
aas
inc
xchg
mov
mov
push
fistpll
push
sahf
fnstsw
pop
pop
pop
out
aas
mov
leave
gs
les
cs
pop
dec
movsl
sub
jbe
pushf
bswap
inc
cmp
lcall
add
fiadds
or
mov
jmp
xchg
inc
sub
mov
scas
int3
cli
push
call
pop
cmp
push
xchg
stos
sub
bound
mov
mov
pop
mov
sbb
adc
insb
pop
mov
int
int3
rcrb
sub
icebp
xchg
mov
or
xor
cmp
xchg
push
fisttpll
xlat
jo
repnz
inc
dec
loope
xchg
mov
into
lods
adc
mov
xchg
sbb
pop
mov
push
cmp
or
xchg
aam
nop
push
jge
mov
mov
mov
divb
xchg
dec
repnz
mov
xchg
mov
in
mov
mov
or
hlt
adc
xor
inc
jno
ja
fxch
aaa
mov
and
loopne
pop
cmp
xor
insb
inc
mov
dec
pop
nop
scas
cmp
xor
or
fwait
cmp
inc
dec
pop
cmp
inc
popl
jb
arpl
xchg
mov
sub
pop
and
ja
lods
jge
adc
sub
xor
inc
sti
adc
jmp
fsub
inc
ret
mov
xor
cmc
or
dec
pop
shrb
xor
lea
jmp
sub
mov
popa
pop
xchg
aas
ret
shll
mov
sub
jbe
or
daa
pusha
jnp
shll
les
insl
lcall
pop
cmpsl
sbb
xlat
test
les
mov
sbb
sbb
aam
dec
fwait
mov
movsb
xchg
rcrl
addb
mov
and
push
movsl
push
cmp
mov
shl
jnp
imul
push
sbb
ret
push
sub
xor
xor
stos
inc
in
xor
mov
dec
sub
xchg
mov
mov
test
std
xor
sbb
mov
mov
pop
ds
push
and
sub
js
into
and
mov
ljmp
iret
pop
int3
int
outsb
and
jp
cwtl
sbb
ficomps
stc
fidivs
scas
lret
mulb
add
stc
adc
outsl
push
push
xchg
rcll
sahf
fisttpll
pop
aam
or
jle
mov
lret
fs
push
xor
std
bound
btrl
movsl
in
sub
xor
xlat
lea
mov
sub
in
sbb
ficoms
cltd
mov
je
daa
mov
jg
adc
or
lret
jecxz
fdivs
mov
add
xchg
mov
enter
sub
fidivl
shlb
mov
mov
divl
or
cmp
xchg
sub
leave
adc
outsb
jns
in
adcb
mov
mov
xor
mov
or
fdivl
cmp
loop
and
add
and
lcall
mov
lock
test
pop
les
jb
mov
daa
mov
ljmp
xor
test
mov
fisubl
mov
lds
pop
cmp
cld
test
dec
push
int
push
shrb
add
pop
xchg
sbb
jo
xor
dec
movsb
lock
daa
sbb
mov
dec
aas
jl
sub
pusha
xchg
mov
lods
pop
xchg
push
movsl
test
xchg
cs
fildll
jg
lods
movsl
lret
fists
loope
addr16
out
int
sub
and
jo
fldcw
jmp
or
push
test
xor
xchg
enter
inc
mov
aaa
xchg
lock
ljmp
dec
pop
and
repz
pop
in
pop
ret
mov
mov
pop
in
pop
mov
outsb
cltd
mov
mov
mov
push
or
xchg
mov
jmp
dec
fistpll
arpl
pop
jp
mov
or
or
mov
clc
incb
xor
and
test
mov
or
xor
jns
ret
das
scas
pusha
rcrl
mov
jbe
sbb
insl
mov
lret
pop
add
fs
ret
ljmp
pop
je
mov
sbb
scas
lds
or
dec
or
xor
test
iret
xchg
sub
ficoms
sbb
lods
jg
add
nop
sbb
sarb
push
or
xchg
lret
xchg
add
movsl
ficomps
mov
add
lret
xor
ficoms
jmp
ret
sarl
dec
mov
fwait
mov
stc
adc
pop
cmp
jae
les
or
sets
mov
or
inc
shl
inc
jge
movsl
pushf
jns
xlat
jns
add
adc
clc
and
dec
mov
int3
xchg
pop
push
sbb
pop
fsubrs
stc
push
lcall
mov
jge
dec
test
pop
xchg
xor
lret
stc
xchg
add
push
mov
pushf
jp
out
or
pop
mov
pop
jg
cmp
int
mov
sarb
cmp
push
jl
sti
adc
inc
inc
test
cmp
imul
cld
test
imul
cmp
and
lcall
mov
repnz
arpl
cs
stos
pop
pop
mov
fcmovnb
stos
in
inc
comiss
sahf
arpl
cli
xchg
popl
jg
lret
sbb
pusha
add
test
cmp
int3
scas
mov
dec
mov
cmp
mov
cmpsb
rorl
movsl
jae
adc
jge
add
add
cld
enter
test
inc
inc
clc
xor
jle
and
es
sub
sbb
cs
dec
dec
sub
gs
mov
push
push
lds
stc
push
popa
inc
int
js
movswl
jl
adc
sub
fwait
shr
gs
xor
adc
push
lea
stc
sbb
mov
and
lods
out
mov
popf
or
mov
testl
cmc
add
fsub
push
or
call
ficoms
incb
jl
in
insl
in
and
jae
or
into
xchg
movsl
lods
fcoms
mov
push
fcoms
xchg
fisubrl
pop
sahf
les
dec
mov
add
cld
orb
jne
sbb
incl
or
rorl
add
call
roll
imul
mov
xor
jmp
adc
iret
cmpsl
aad
jae
jl
jge,pn
fstp
lods
lret
jo
jle
jo
fisttpll
pop
and
cltd
je
jmp
xlat
divb
insl
or
sar
and
ret
mov
xchg
mov
cmpsb
mov
fs
out
outsl
dec
rcrl
or
adc
lahf
sub
pop
mov
psraw
sbb
xchg
jne
aam
and
mov
dec
lret
push
fucomi
ret
lret
into
adc
shlb
sub
imul
test
movsl
stos
mov
mov
or
jp
ja
stc
fdiv
out
ss
xor
cwtl
outsl
aad
push
insl
ret
adc
xchg
es
and
cmpsl
outsl
test
inc
in
sbb
aaa
mov
lcall
mov
mov
int
xor
hlt
mov
mov
inc
mov
sahf
add
nop
repz
adc
cli
notl
leave
pop
aad
imul
lret
pop
jnp
dec
icebp
int3
pop
dec
icebp
subb
and
lods
out
cmp
sbb
shl
scas
popf
add
inc
scas
push
daa
sub
ret
std
pop
xchg
push
jge
fisttpll
dec
fwait
mov
push
addr16
and
gs
jo
clc
int3
aad
push
push
add
fidivrs
push
xor
subl
sub
cmpsb
test
lods
sub
fstpt
lods
lret
and
xchg
outsb
push
dec
gs
cs
jno
xchg
rcrl
push
loopne
cmc
jne
jecxz
pop
xor
outsb
testl
stos
lds
popa
xor
daa
fsubs
cmp
in
adc
cmp
sbb
adc
fsubr
mov
cmp
push
in
xchg
push
pop
and
test
inc
jmp
leave
inc
add
fimull
xor
sti
stos
pop
int
leave
xchg
adc
cld
adc
push
inc
pop
sbb
lods
add
xchg
cltd
jecxz
xor
je
xor
clc
jno
scas
pop
jl
jmp
jmp
rcrl
icebp
loop
aam
xchg
jns
inc
pushf
shl
pushf
inc
adc
sub
inc
cmc
loope
sub
pusha
test
pop
int
ret
sbb
sub
mov
mov
outsl
mov
mov
sbbb
cmc
xchg
pop
pop
fmulp
imul
test
xchg
int3
cwtl
aam
push
add
push
mov
cwtl
filds
and
jecxz,pn
outsl
add
xor
hlt
xor
mulb
lret
push
push
inc
mov
xorl
outsb
lock
or
and
jecxz
dec
or
xor
cmp
jne
mov
jmp
mov
mov
xor
add
mov
xor
lea
add
call
xor
inc
cmp
je
jmp
or
shll
jno
jmp
lds
jecxz
adc
jo
jle
jo
stos
rolb
xor
insl
cmp
mov
mov
nop/reserved
cltd
pusha
adc
int
addr16
push
adc
mov
fistpll
and
sub
inc
sbb
fiaddl
mov
mulb
sbb
aam
mov
mov
inc
incb
add
mov
and
add
jge
rolb
xor
xchg
mov
xchg
xor
xor
mov
mov
dec
pusha
lret
dec
int3
cltd
data16
dec
mov
dec
jae
int3
and
notb
inc
cmp
cmp
mov
hlt
mov
cmpsl
mov
bound
hlt
fistpll
or
jo
call
aas
xlat
ljmp
dec
push
out
sub
shlb
and
mov
jno
pushf
bswap
xchg
xor
and
jae
es
mov
pop
in
xchg
addr16
es
in
mov
cmp
cmpsl
std
xchg
mov
mov
smsw
mulb
testb
cmp
enter
inc
mov
jp
sar
mov
jnp
jb
push
f2xm1
iret
and
jns
aad
es
addr16
jno
loop
and
xchg
lock
mov
lods
imul
add
jae
inc
cmp
in
je
stos
movsb
sbb
dec
mov
mov
push
mov
adc
dec
or
inc
dec
inc
inc
nop
or
roll
adc
stos
aam
or
call
divl
out
jmp
jns
jae
stc
or
add
or
nop
mov
insb
xchg
enter
mov
pop
ljmp
push
sub
mov
imull
out
push
sub
adc
rcll
push
gs
mov
cmp
bound
sbb
add
pop
lock
leave
sbb
sar
xchg
xchg
cli
loope
sub
mov
pop
dec
pop
lahf
sarb
test
stc
jp
xchg
dec
dec
scas
xor
aam
add
ss
pop
lret
mov
cmp
inc
clc
and
ficoms
pop
mov
and
cs
out
fcmovnb
aam
cmp
ljmp
or
aaa
sub
jns
dec
sub
iret
push
iret
and
shlb
jle
out
popa
imul
aam
xchg
std
lret
jb
fisttpll
hlt
clc
mov
les
jb
pop
xchg
push
pop
push
pop
inc
xchg
sub
jmp
cmc
icebp
lret
mov
test
jnp
subl
jg
mov
and
cmp
int3
pop
jne
inc
mov
mov
push
ds
mov
test
call
out
dec
mov
mov
scas
cltd
mov
sub
or
ffree
mov
push
aad
imul
pop
fld
jbe
test
inc
push
mov
enter
ret
leave
xchg
js
pop
mov
mov
and
xlat
xchg
cmp
into
mov
pop
fs
mov
into
subb
pop
out
inc
outsb
inc
mov
lea
bound
lock
subl
xor
shl
and
mov
fstps
dec
xor
popa
je
insl
mov
push
and
mov
add
sub
mov
mov
es
add
cld
addb
lods
xchg
loope
enter
int3
hlt
leave
outsl
inc
gs
insb
mov
inc
push
add
push
int
call
and
and
add
pop
stos
mov
ror
lock
enter
xor
and
lret
ja
out
pop
icebp
popf
sahf
addps
mov
push
pusha
fdivs
mov
and
es
rclb
lods
in
jnp
xchg
push
mov
jae
inc
cmp
fdivs
add
jo
adc
or
pop
push
fsubs
les
add
xor
fstpl
bound
subl
imul
push
lcall
repnz
cli
mov
lds
and
mov
add
or
std
xchg
nop
in
aas
sarl
sbb
faddl
loopne
xor
add
test
mov
lods
fnstenv
pop
ret
dec
outsl
into
inc
mov
adc
in
or
xorb
insl
xor
out
pop
mov
xchg
inc
lds
cmpsl
pop
dec
pop
push
pusha
adc
mov
jnp
mov
adc
into
sub
rolb
xlat
subl
std
xchg
push
xchg
in
jnp
xchg
mov
lods
pop
cmpsl
fldcw
add
sbb
inc
push
inc
shrl
jmp
or
icebp
xor
inc
xchg
sub
aam
mov
xor
lea
gs
cmpsb
repz
push
es
out
jo
insl
shlb
pusha
mov
push
xchg
push
insb
inc
jb
push
pop
mov
repnz
mov
push
mov
adc
xlat
push
cltd
lods
adc
stos
std
cld
xchg
jmp
cmc
std
fs
jno
mov
negb
jg
mov
sbb
fldcw
xlat
jb
or
es
nop
cmpsl
imul
sbb
sub
aam
xor
push
or
xchg
lods
and
mov
cli
inc
dec
mov
in
mov
sbb
pushf
xor
ret
das
arpl
sub
add
scas
mov
repnz
mov
out
or
mov
fistpll
ret
ficoml
inc
push
je
or
push
test
fldl
je
adc
jge
das
popa
shll
mov
add
stos
sub
fsts
adc
jl
mov
insb
xor
adc
pop
fmul
xchg
dec
pop
add
and
mov
leave
mov
pop
adc
fcmovu
mov
jmp
sbb
mov
mov
fisubrs
jbe
pop
out
cli
lahf
inc
cmpsl
in
dec
sub
xchg
popf
lahf
cmp
mov
dec
jnp
orl
dec
pop
mov
adcl
ds
fsubrp
orl
dec
lds
scas
adc
aad
insb
and
scas
lods
sub
into
lret
push
sbb
ret
lret
mov
test
xchg
cmp
bt
add
adc
mov
xor
mov
push
cmp
inc
mov
dec
mov
mov
pop
sbb
jl
push
lret
inc
js
xchg
pop
push
xor
jae
shlb
addr16
test
jno
jne
mov
loopne
fidivrl
movsl
inc
ljmp
inc
nop
sarb
cmp
sbb
clc
mov
dec
inc
or
fucomip
sbb
movsb
mov
push
sub
clc
or
es
jecxz
pop
jg
pop
sub
adc
aaa
or
dec
arpl
js
xor
and
repnz
jnp
sti
xchg
ret
adc
dec
std
cmp
lret
subl
fcmovnb
fwait
stos
pop
dec
jecxz
mov
sbb
sub
setle
negl
inc
push
add
push
loop
mov
fstp
ror
sbb
cmp
dec
pop
inc
test
andb
mov
sahf
cmp
jmp
jno
hlt
pop
or
stos
adc
movsb
mov
jmp
lock
or
mov
jno
out
adc
and
ret
pop
cmpsw
and
test
cmp
test
and
test
je
movsl
popa
movsw
and
xchg
inc
rorb
lcall
inc
jmp
mov
dec
mov
jmp
outsb
ds
loopne
outsb
outsb
mov
sub
jg
mov
cmpsb
dec
dec
mov
sbb
hlt
mov
jae
int3
stos
shll
imul
insl
lods
pop
sub
jbe
ja
imul
orb
cmpsb
mov
lahf
je
dec
lret
lods
or
dec
fnstcw
xor
aas
mov
pop
movsb
sub
aas
xor
clc
jmp
cwtl
or
jne
dec
jae
cmpsl
lods
sbb
mov
int3
dec
mov
mov
arpl
insl
pusha
jbe
in
or
xor
xchg
xchg
aas
push
ja
jnp
int3
call
sbb
and
mov
into
sub
push
sahf
dec
hlt
dec
test
iret
add
daa
push
pop
jg
jne
dec
mov
lret
pop
loopne
fstpt
push
sahf
pop
frstor
inc
or
stos
psrlq
pop
jbe
xor
mov
bound
rcll
sbb
adcb
loope
int
xor
pushf
ja
test
xsha1
cmpsb
or
shll
mov
mov
insb
in
repnz
inc
xor
mov
or
adc
xchg
pushf
push
fyl2x
xchg
push
in
jno
outsl
in
lods
jno
inc
ljmp
and
jne
sbb
push
in
es
pushf
rcrl
out
aas
xchg
ret
lock
mov
and
xchg
ret
adc
mov
fadds
add
sub
mov
pop
aas
fs
in
cmp
les
sbb
enter
insl
inc
lret
repnz
insb
cli
sbb
popa
xchg
pop
out
sub
and
mov
fisubrs
cmpb
rorl
push
aad
dec
xchg
add
out
decl
or
and
bound
mov
jns
or
sub
push
mov
fcomps
es
out
lock
mov
xchg
stos
pop
mov
xor
cmpsb
mov
inc
mov
cltd
pusha
fdivrs
inc
imul
fs
mov
inc
sub
repnz
sbb
and
sti
call
cwtl
lods
or
jecxz
adc
mov
xchg
push
push
or
jle
daa
jl
push
fwait
sub
mov
dec
es
jbe
aam
push
xor
in
push
ret
and
cmc
jecxz
mov
and
fcoml
mov
xchg
add
mov
addr16
lret
xchg
out
and
jne
in
dec
dec
push
andl
imul
add
xchg
push
xor
mov
jmp
cmp
push
add
data16
and
fidivl
into
adc
mov
push
mov
mov
cmp
insl
dec
stc
or
xchg
lret
jmp
lods
pop
sbb
scas
mov
lods
repz
out
inc
dec
rol
xchg
fcoms
loop
inc
fstpt
or
in
lods
frstor
push
aad
jbe
fisubs
dec
or
stos
fnstcw
aam
jns
cmp
in
icebp
pop
daa
mov
leave
push
xor
jmp
xchg
lcall
aaa
test
push
pop
in
xchg
mov
inc
xchg
jns
push
mov
lods
sahf
cmp
repnz
inc
mov
mov
mov
fsubr
es
xchg
sbb
push
inc
xor
adc
xchg
or
lods
je
or
fdivl
mov
mov
or
push
call
inc
inc
fdivrl
pop
out
data16
loopne
add
cld
sbb
mov
inc
js
rcll
dec
icebp
push
cmp
mov
rcrb
jg
jge
adc
dec
fs
xor
xor
test
les
pop
jg
lods
aaa
stc
adcb
imul
sbb
imul
pusha
inc
adc
lcall
xchg
enter
ret
fldl
clc
lahf
mov
inc
inc
std
in
pop
in
icebp
push
fadd
adc
stos
outsl
jbe
push
mov
lods
or
sbb
or
clc
repnz
hlt
cmp
push
add
or
jmp
xor
push
pop
adc
aas
lds
or
pop
xor
leave
lahf
adc
mov
in
leave
fsub
and
int
jp
lret
inc
dec
je
cmp
jle
ret
bnd
sbbl
lea
sti
adc
mov
in
pop
mov
out
cwtl
or
push
aas
stos
sbb
clc
xlat
shrb
cltd
stos
xchg
mov
fadds
push
or
in
mov
movsb
stos
push
add
movsl
in
xchg
dec
push
pop
cli
xchg
lret
inc
push
outsl
mov
pop
je
jnp
mov
ja
cmpsb
lods
or
push
mov
les
aam
sub
dec
imul
and
jp
push
pusha
ficomps
data16
add
lds
subb
push
xchg
inc
ret
jae
xor
add
or
lret
in
out
jns
cmp
sti
jns
out
in
out
dec
inc
xchg
aaa
hlt
mov
mov
shrl
mov
sbb
filds
add
fsubp
stos
mov
insb
leave
pop
sub
adc
es
mov
std
cmp
sbb
icebp
sub
mov
inc
lret
mov
pop
stc
push
dec
ljmp
xor
add
mov
in
jp
add
sarb
mov
insb
inc
imul
mov
sbb
outsl
aad
fstpt
icebp
mov
cwtl
fbld
add
fimuls
sub
loope
cmp
sbb
int
cmp
xchg
cli
jae
sub
imul
pushf
inc
push
xchg
jne
push
mov
cmp
rolb
aas
push
test
jge
icebp
enter
or
xor
add
mov
repz
rcll
mov
out
arpl
movsb
mov
xor
mov
mov
popa
je
mov
cli
enter
mov
mov
sub
test
cmpsb
lret
mov
xchg
in
movsb
fs
fwait
jecxz
aas
data16
mov
fildll
arpl
fsts
xchg
jnp
pop
cwtl
and
xor
stos
and
sahf
mov
lods
mov
into
int
mov
xor
xlat
sbb
jmp
sahf
lods
fnstcw
xchg
cmpsb
call
loope
mov
mov
data16
cmpsl
insb
outsl
adc
aaa
das
jno
aad
and
clc
adcb
xchg
pop
add
dec
lock
or
jb
mov
inc
out
push
stos
lods
sub
mov
test
jnp
outsl
inc
mov
rol
mov
dec
pop
out
cmp
ja
adc
clc
adc
mov
mov
cmp
sbb
aad
hlt
punpcklwd
lea
js
jbe
ret
xor
sbb
sbb
movsl
pop
push
cmpsl
cmp
fld
inc
inc
sub
xor
jp
aam
out
ja
dec
jne
add
dec
mov
push
adc
aas
cmp
enter
int
cwtl
adc
cmp
xor
jb
ljmp
scas
mov
adc
dec
ret
adc
pop
inc
sub
pop
or
bound
dec
adc
sti
cmp
shrl
mov
je
fucomi
clc
push
dec
cltd
adc
data16
pop
mov
stos
pop
pop
mov
mov
mov
push
cmp
in
sbb
sti
ljmp
or
sub
andb
mov
adc
xchg
arpl
fpatan
sbbb
pop
mov
pop
jmp
cld
pop
cmpsl
addr16
gs
mov
and
jo
jle
jo
pop
loop
push
test
movlhps
sbb
adc
cmp
mov
fistpl
mov
lds
sbb
lods
and
insb
sti
ret
mov
push
xchg
mov
xchg
dec
xchg
test
xlat
sbb
fisubl
mov
cmpb
xchg
fisttps
mov
ds
xchg
dec
mov
sbb
iret
xchg
outsb
inc
mov
movsl
shlb
sub
popa
adcl
xchg
test
mov
cmp
or
or
pop
fdivs
insb
pop
jge
sti
stos
std
xor
pop
cmp
pop
aas
pop
push
into
fwait
mov
lcall
sub
mov
js
mov
data16
mov
sbb
mov
xor
mov
add
xor
and
cmp
imul
cmp
pop
sbb
lods
dec
sbb
mov
ds
mov
sbb
cli
dec
mov
jnp
fwait
mov
add
sbb
sahf
scas
pop
add
adc
add
xchg
seto
stc
pusha
pop
mov
test
loope
addr16
or
sti
mov
xor
adc
cmp
cmp
insb
inc
lahf
fdiv
mov
dec
psubd
jmp
jbe
jnp
lods
dec
lea
push
and
lods
cmpb
xor
into
in
cmp
jl
push
mov
push
xchg
stc
and
dec
sub
add
lret
xchg
shll
js
out
push
into
inc
jno
sbb
test
push
movsb
ljmp
nop
fldt
xchg
gs
call
insl
push
push
dec
and
loopne
outsb
mov
sbb
imul
imul
rcll
or
sub
shl
icebp
incb
adc
push
mov
xor
test
imul
sbb
call
jmp
aam
in
out
cmp
adc
xchg
lret
insb
lahf
call
ss
sbb
dec
jl
dec
sub
adcb
cmpsb
or
cmp
je
out
xlat
add
stc
icebp
jne
bound
mov
jb
mov
notl
lret
std
cwtl
adc
cmp
xlat
xchg
push
jmp
xchg
sbb
jb
mov
cli
pop
pop
leave
ret
dec
push
mov
mov
or
dec
add
add
add
movl
xor
test
enter
mov
hlt
test
pushf
enter
movl
inc
inc
cld
xor
or
mov
call
pop
mov
dec
mov
pushl
or
ljmp
dec
loopne
rorb
add
mov
hlt
add
enter
dec
add
mov
orl
xor
lret
enter
mov
lea
push
mov
fs
decl
push
and
pop
inc
mov
push
pop
cld
dec
lea
mov
add
movl
decl
xor
cld
dec
jne
lea
push
mov
or
add
sub
add
rolb
inc
add
add
mov
incl
lea
call
add
jne
decl
dec
add
xchg
loopne
inc
incl
mov
xor
add
enter
mov
hlt
add
mov
add
add
incl
sbb
jne
mov
mov
movl
incl
fisttpll
test
inc
aas
inc
lea
inc
mov
mov
cld
in
inc
jmp
fisttps
jecxz
out
incl
out
aas
inc
ljmp
incl
movl
insb
test
pandn
aas
add
mov
incl
or
mov
xchg
fildl
mov
cmp
dec
leave
mov
fsubrs
add
lea
push
add
mov
mov
add
mov
cld
push
decl
push
mov
call
mov
cld
add
test
in
in
cld
jge
mov
fsub
add
mov
add
add
mov
inc
push
fisttps
test
fadds
jmp
fildl
inc
jo
test
jmp
incl
in
add
jne
mov
cld
incl
mov
mov
add
call
ret
cld
incl
out
xor
mov
cld
jo
or
add
push
add
mov
decl
add
inc
orb
add
mov
mov
inc
sub
add
rolb
jne
xor
incl
call
mov
call
xor
push
adc
loopne
ret
loopne
xorl
cmp
bswap
rolb
jmp
mov
add
cld
jne
xor
push
add
add
inc
add
mov
test
add
incl
jmp
adc
mov
pushf
mov
lea
xor
call
call
jne
xor
add
pushl
call
int3
incl
mov
xor
add
xchg
in
add
add
add
mov
mov
or
inc
test
je
mov
xor
push
or
inc
in
mov
mov
fmul
add
mov
cld
loopne
inc
push
cmp
movaps
cld
fadds
jne
push
in
jne
lea
das
mov
mov
mov
xor
adcl
rclb
inc
lock
inc
xchg
ud0
incl
lret
jbe
mov
push
pop
mov
inc
lret
inc
iret
jb
mov
enter
xor
pushf
mov
xor
dec
add
inc
mov
xor
add
mov
fmuls
xor
mov
roll
xor
mov
clc
enter
mov
test
clc
incl
cmp
pushf
or
enter
xor
pushf
inc
ds
pushf
inc
mov
lock
add
mov
sarb
adc
dec
adc
add
jmp
jb
add
xor
xor
add
clc
enter
pop
mov
push
push
xor
xor
add
add
lret
repnz
cli
fdivr
test
dec
inc
xor
add
mov
mov
clc
jne
mov
into
into
scas
dec
mov
sub
cmp
mov
mov
mov
add
xor
xor
lret
mov
inc
add
mov
lods
test
xor
mov
lock
bswap
lret
test
jmp
add
push
mov
test
push
clc
xor
xor
add
add
push
dec
mov
stc
roll
scas
mov
xor
xor
add
mov
clc
lret
into
mov
mov
mov
int3
add
xor
xor
add
mov
lock
stc
mov
or
jmp
dec
dec
mov
clc
test
clc
rorl
mov
call
les
lret
ja
mov
dec
xor
mov
clc
push
lret
mov
adc
jb
add
call
cmp
movsb
pushf
inc
xor
mov
clc
dec
lret
mov
call
scas
mov
pushf
sub
cmp
lods
xor
add
mov
mov
cmp
jb
add
dec
scas
mov
shrl
into
cmp
mov
dec
dec
mov
lret
xor
add
imul
mov
xor
mov
add
mov
inc
rdtsc
xlat
pushf
jge
xor
sub
cmp
jb
add
rorl
xor
add
jmp
mov
dec
into
mov
pushf
shll
lret
or
add
in
push
mov
fs
dec
sub
dec
xor
jge
mov
add
dec
decl
adcb
add
jge
push
push
shlb
xor
xor
inc
add
dec
or
jbe
mov
ror
enter
decl
push
lret
push
mov
mov
cld
subb
sti
add
push
lcall
bswap
pop
inc
decl
push
xor
movl
aas
push
inc
xor
add
mov
jmp
mov
les
mov
mov
cmp
mov
add
xor
pushf
lret
cmp
call
inc
inc
mov
mov
enter
add
add
clc
enter
push
pushf
mov
int3
or
test
clc
gs
add
push
xor
sub
dec
add
mov
or
cmp
dec
out
xor
mov
dec
add
push
push
add
sbb
mov
xor
dec
inc
xor
add
push
dec
mov
lret
into
sub
dec
adc
inc
push
test
unpcklps
jmp
add
movl
xor
rolb
clc
fs
mov
xor
sub
mov
add
sub
mov
mov
clc
addl
lcall
inc
decl
test
decl
push
add
dec
or
rorb
into
add
mov
sar
adc
clc
fadds
mov
push
adcb
add
lret
mov
cld
mov
into
add
jne
incl
rclb
push
mov
mov
sar
or
push
add
pushf
xor
pushf
mov
test
clc
inc
inc
mov
sub
mov
dec
xor
mov
xor
orl
shll
int3
lea
push
xor
pop
lods
incl
mov
pushf
jo
cmpl
inc
add
push
in
inc
push
mov
cld
add
adc
add
jmp
add
mov
dec
push
cmp
unpcklps
jne
decl
mov
shlb
inc
add
lret
decl
stc
in
or
dec
clc
xor
mov
rolb
inc
add
clc
inc
lret
mov
in
lret
into
into
scas
dec
mov
sub
cmp
mov
int3
test
xor
xor
lret
mov
inc
add
mov
xor
mov
call
lret
test
jmp
add
push
mov
mov
lret
xor
add
add
push
dec
mov
stc
roll
scas
mov
xor
xor
add
mov
clc
lret
into
mov
test
push
jbe
mov
mov
push
add
rdpmc
lret
add
dec
stc
mov
or
jmp
dec
dec
mov
clc
test
clc
rorl
mov
lock
inc
mov
hlt
pushf
jge
sub
cmp
ja
mov
dec
xor
mov
clc
push
lret
mov
adc
jb
add
lock
sub
mov
mov
mov
mov
lock
ror
push
scas
mov
pushf
sub
cmp
movsb
xor
add
mov
mov
cmp
jb
add
dec
scas
mov
shrl
into
cmp
mov
dec
dec
mov
lret
xor
add
imul
mov
xor
mov
add
rolb
rdtsc
xlat
pushf
jge
xor
sub
cmp
dec
xchg
incl
jmp
mov
dec
into
mov
pushf
shll
lret
or
add
in
push
mov
fs
dec
sub
dec
xor
jge
mov
add
dec
decl
inc
push
decl
lea
mov
push
mov
les
add
incl
mov
cld
lret
add
jne
in
ror
scas
into
add
not
adc
inc
push
mov
push
mov
fdivr
sti
sbb
pop
xchg
leave
pushf
add
push
cmp
sqrtps
decl
push
cld
xor
lret
clc
xor
add
hlt
or
mov
hlt
dec
add
leave
mov
push
roll
mov
mov
lar
push
lret
jne
mov
or
mov
cld
inc
mov
add
in
test
fdivr
ret
cld
mov
clc
xor
mov
loopne
mov
mov
clc
jne
call
and
je
mov
cld
or
push
add
add
inc
push
mov
pop
mov
ret
push
mov
clc
lock
jne
jne
mov
faddl
jne
cmp
pop
mov
push
inc
lea
inc
inc
int
inc
cld
jo
inc
xchg
mov
mov
or
inc
inc
mov
cld
jmp
mov
mov
rclb
iret
inc
leave
decl
mov
mov
mov
push
nop
incl
push
leave
iret
add
push
jmp
inc
push
mov
in
push
sbb
add
mov
cmp
jne
push
pop
push
mov
or
add
sub
int3
jne
add
sbb
mov
lea
push
enter
testl
enter
negl
or
inc
loope
sub
inc
loope
add
push
push
imul
adcl
add
lea
mov
cmp
jne
mov
in
add
out
inc
aas
jmp
lock
and
mov
call
push
add
ud0
hlt
add
cmp
flds
out
call
cmp
shl
pop
fisttpll
push
add
add
push
add
sub
jne
lods
mov
dec
out
into
push
loopne
shrb
xorl
roll
mov
cmpl
mov
push
push
push
sub
push
adc
insl
mov
add
inc
mov
pop
addl
add
add
roll
cli
push
pop
lret
add
decb
sub
and
dec
inc
shll
add
pop
add
pop
dec
jmp
and
push
out
jmp
jmp
mov
decb
add
pop
icebp
mov
insb
adc
mov
or
mov
cld
jge
aas
and
adc
mov
and
dec
add
add
fadds
stc
enter
sbb
sbb
in
in
add
jne
cmp
jb
jmp
mov
add
add
jb
pop
faddl
or
inc
or
xlat
dec
push
add
leave
roll
add
mov
int3
jmp
mov
jne
mov
call
pop
add
pop
or
push
mov
int3
add
jae
int
enter
add
mov
push
pop
add
push
lea
mov
jb
mov
push
add
add
add
int3
jne
movsbl
add
add
mov
add
add
mov
sub
jb
add
jge
add
addl
jne
je
mov
rorb
orl
mov
mov
fadds
inc
pop
lea
push
out
add
add
mov
jb
add
push
call
add
jae
icebp
inc
mov
int3
out
loopne
sub
push
pop
push
jl
add
xor
mov
rcrb
rorl
inc
shr
orl
push
pop
add
jmp
mov
fdivrl
push
pop
call
mov
in
rolb
call
pop
enter
repz
xorl
je
or
jne
jmp
pushl
push
pop
cmpl
jge
mov
sub
pop
inc
mov
sub
lods
add
enter
repz
stc
jge
jnp
call
fadd
dec
insb
stc
cmp
push
mov
jne
mov
mov
add
sub
and
cmp
sbb
pop
call
fsubr
sti
add
add
add
roll
mov
clc
jne
mov
loopne
loopne
lods
int3
inc
mov
add
sub
shrb
add
call
add
dec
insl
in
lea
inc
inc
sub
orl
and
rorl
or
mov
stos
adc
inc
add
jne
mov
cmp
sub
sar
ljmp
sub
mov
mov
and
jne
sub
sbb
dec
push
add
ret
mov
leave
sub
ret
pop
push
rolb
addl
jb
ret
in
jecxz
push
xchg
jne
cmp
jne
mov
rorl
mov
pop
nop
mov
les
add
inc
mov
mov
cmp
or
inc
inc
xor
cld
add
add
add
sbb
dec
je
mov
add
and
jae
mov
incl
push
shr
in
push
add
add
inc
mov
add
push
cmovne
xor
push
pop
xor
pushf
add
rcr
inc
add
add
out
inc
inc
sub
dec
and
jo
leave
add
lea
ret
mov
xor
mov
sbb
stc
mov
ss
add
add
add
add
movb
or
dec
lea
or
movsl
fiadds
jae
or
in
pushf
inc
xor
pop
inc
shl
inc
sub
inc
add
add
loopne
inc
ret
inc
mov
leave
and
add
mov
sbb
sbb
stc
test
lea
mov
dec
sarb
add
inc
ljmp
or
jge
mov
clc
leave
inc
add
rdpmc
sbb
mov
cmovne
jmp
inc
mov
sbb
mov
add
out
add
sub
add
jo
leave
movl
inc
add
inc
out
stc
int3
jb
xor
or
dec
mov
movb
loopne
inc
lea
push
movb
xor
lea
inc
jae
ficomps
addb
test
incl
inc
add
test
jne
orl
jmp
inc
jne
mov
mov
shlb
push
mov
gs
add
inc
dec
into
mov
jl
add
inc
mov
add
add
inc
or
inc
in
fsub
inc
add
add
call
pop
test
dec
jmp
pushl
loopne
movl
push
incl
mov
cwtl
movl
sbb
rorb
inc
rorb
test
add
add
push
add
mov
incw
add
xor
push
cli
popw
push
xchg
sbb
test
callw
adcl
mov
mov
push
fsubl
dec
inc
mov
lret
fistl
ljmp
jmp
in
lock
mov
xor
add
stos
data16
incl
data16
inc
shlb
add
addl
mov
add
push
lea
addb
jge
mov
rol
mov
rorb
orb
test
push
mov
orb
push
xor
aam
test
cmp
data16
dec
test
xor
lahf
mov
mov
data16
sbb
dec
mov
mov
add
jne
test
jne
sti
sbb
cld
jmp
inc
mov
data16
push
incl
test
sbb
lock
pushl
xorb
add
xor
movw
mov
sbb
mov
add
add
xor
inc
add
add
inc
jmp
addl
or
jmp
push
in
test
xor
mov
mov
push
add
decl
add
decl
movsl
add
add
push
xor
xor
mov
push
push
jne
mov
sbb
jne
incl
add
add
mov
sbb
leave
test
jne
call
xor
mov
enter
mov
mov
sbb
sbb
mov
inc
decl
add
xchg
ret
add
add
mov
lea
add
mov
inc
rdpmc
jne
add
inc
call
add
orb
ret
incl
add
cmp
pushl
add
test
je
mov
sbb
test
js
add
sub
mov
add
dec
push
mov
mov
mov
cld
or
dec
incl
push
add
mov
orl
add
push
xor
inc
mov
push
incl
inc
add
addb
mov
lea
je
decl
call
mov
hlt
call
mov
cwtl
mov
mov
addl
mov
inc
jmp
ljmp
mov
and
pushl
lcall
add
enter
add
adc
add
mov
xor
jmp
mov
in
inc
or
decl
jne
mov
mov
lock
xchg
jmp
adc
inc
mov
push
sub
push
test
inc
dec
mov
movl
add
add
mov
push
roll
bound
xor
sub
push
lea
jne
incl
jnp
mov
fs
sbb
out
or
ret
inc
decl
test
clc
lcall
or
inc
dec
incl
add
call
add
push
adc
mov
mov
addl
incl
inc
stos
mov
add
mov
cmp
movsb
mov
sbb
addb
call
xor
pop
inc
xor
pushl
mov
pushl
mov
sub
add
mov
mov
ret
mov
ret
mov
add
mov
xor
sar
test
inc
add
testb
push
add
add
add
add
add
mov
mov
sbb
jne
mov
xorb
add
cld
add
mov
cld
add
lret
add
sbb
dec
or
dec
sbb
inc
dec
mov
sbb
nop
scas
add
add
mov
add
mov
cmp
xor
gs
je
push
sarb
mov
push
cmp
add
dec
mov
in
adc
pop
inc
leave
or
gs
add
into
in
enter
push
xorl
or
jnp
test
add
mov
ltr
decl
clc
out
add
cmp
jge
jb
je
pop
push
mov
in
roll
orl
cmpl
hlt
mov
push
jns
lock
ror
test
dec
rcpps
mov
inc
test
je
mov
adcl
and
jp
rcpps
add
sbb
add
je
cmp
js
add
jns
vmread
add
adc
jge
mov
add
or
push
push
mov
add
pop
add
mov
inc
pop
xorl
add
push
clc
mov
jp
add
divl
test
je
mov
or
decb
jbe
mov
add
cmp
add
je
mov
mov
hlt
orb
jb
jmp
xor
pop
pop
pop
ret
ret
mov
xorl
pushf
xor
wrmsr
test
dec
ret
mov
pop
dec
jne
xor
inc
dec
jbe
inc
pop
add
push
dec
push
mov
and
jo
mov
sbb
mov
nop
or
jne
cmp
xor
add
cmp
js
jae
xor
jmp
mov
fdecstp
test
add
add
mov
cmp
adc
jge
mov
jl
clc
dec
jge
mov
jb
mov
mov
xor
add
mov
inc
pop
jge
cmp
mov
imul
fimuls
fists
in
jne
mov
imul
fdivrp
filds
test
inc
mov
mov
adc
rcll
mov
fiadds
mov
mov
xor
mov
xlat
into
ffreep
lret
iret
dec
inc
mov
fmull
dec
jnp
add
mov
inc
dec
lea
add
jb
add
inc
imul
cld
clc
mov
incl
or
sbb
lret
add
dec
add
enter
inc
pop
decl
add
add
mov
xor
or
pop
cltd
push
clc
mov
xor
add
cmp
hlt
cmp
or
mov
loopne
mov
cld
pushf
pop
pushf
mov
lock
adc
orb
xor
dec
mov
iret
inc
jne
mov
cmp
je
add
or
dec
inc
mov
cld
add
cmp
mov
or
mov
or
inc
xor
pushf
call
jne
mov
fcomps
add
incl
cld
add
mov
cld
inc
fidivrs
fbstp
mov
adc
fadd
add
mov
inc
mov
loopne
sbb
sbb
pushf
add
mov
cwtl
inc
inc
jne
mov
clc
add
mov
or
inc
lea
add
inc
rorl
add
shufps
jmp
xor
hlt
mov
fadds
xor
add
cmp
pmuludq
jmp
mov
or
inc
mov
jne
mov
clc
add
xor
jne
pushl
add
mov
cld
add
xor
mov
adc
sub
lea
add
jb
add
inc
add
inc
mov
or
mov
in
scas
inc
mov
in
add
mov
dec
mov
mov
cld
push
dec
add
mov
in
cmp
mov
mov
mov
xor
cmpl
xor
jmp
add
xor
add
cmp
mov
mov
adc
jmp
mov
cld
mov
push
jne
dec
or
push
inc
in
add
or
dec
cld
mov
xorl
pushf
decl
mov
mov
xor
mov
inc
mov
mov
call
add
call
push
xor
pmulhuw
test
mov
mov
xor
xor
xor
add
inc
mov
movl
sub
lock
mov
mov
or
ja
mov
cld
cli
mov
cmp
bswap
mov
mov
clc
repnz
push
xor
xor
pop
jmp
mov
xor
lea
xor
pushf
out
neg
insl
test
clc
pop
inc
or
xor
add
jne
mov
in
push
xor
add
cmp
add
mov
mov
add
mov
mov
pushf
pushf
xor
jne
mov
icebp
icebp
shl
mov
pop
jne
mov
in
jmp
add
mov
or
inc
jne
mov
ret
or
jge
sub
xor
add
mov
clc
negl
xor
cmp
repz
xor
add
mov
mov
cld
lock
test
clc
add
fdivrp
test
jnp
add
jae
sub
shll
leave
call
in
in
add
mov
in
test
mov
xor
pushf
jnp
xor
push
loopne
jne
mov
add
xor
mov
cld
jb
add
jne
mov
jge
mov
lock
xor
mov
lock
jge
xor
dec
mov
loopne
jge
add
icebp
add
dec
hlt
xor
mov
in
jge
mov
dec
pop
xor
inc
hlt
xor
mov
repnz
cmp
test
fistps
inc
mov
add
inc
test
add
add
ret
jnp
inc
inc
xor
fdivl
test
push
add
cmp
setl
mov
call
or
inc
mov
and
lock
movl
mov
clc
xor
mov
inc
mov
mov
mov
mov
hlt
inc
rorl
mov
push
mov
in
jne
mov
addl
clc
mov
add
rolw
mov
jne
incl
inc
push
test
sub
add
and
add
mov
and
adc
inc
inc
push
add
add
enter
mov
add
add
str
lea
sbb
dec
cmp
inc
push
mov
push
add
mov
inc
add
add
mov
loopne
dec
mov
cld
push
xchg
add
add
or
dec
loopne
xchg
push
add
dec
jmp
mov
sbb
inc
xor
add
push
divl
and
add
jno
incl
inc
push
push
mov
mov
push
inc
enter
push
call
pop
push
mov
mov
push
jo
incl
or
call
fmull
mov
mov
adc
dec
xor
mov
mov
mov
push
lret
movb
inc
movntps
lret
into
dec
lret
mov
mov
fdivl
mov
push
mov
sbb
dec
sarl
push
jne
mov
lea
call
sbb
add
push
mov
push
mov
test
xadd
pop
add
mov
or
push
add
add
and
call
add
mov
add
xor
add
inc
je
push
cli
dec
mov
or
inc
add
data16
subl
add
add
enter
int3
loopne
rolb
lea
data16
add
sbb
inc
lldt
xor
sub
add
ror
dec
inc
cmp
cld
or
into
out
lret
dec
mov
loop
cmp
inc
daa
loop
out
add
add
push
inc
xor
add
push
push
inc
in
push
inc
sbb
rorb
addb
ljmp
xor
mov
fmuls
add
lea
add
popl
add
push
incw
mov
add
xor
test
inc
mov
add
or
or
inc
mov
jne
mov
add
add
adc
adc
push
mov
mov
inc
mov
or
push
jne
call
inc
sarb
out
add
add
and
fs
incl
jo
leave
scas
inc
add
orb
call
shr
xchg
add
add
dec
and
push
decl
mov
mov
lea
mov
add
mov
push
shlb
inc
in
jno
push
mov
mov
je
mov
sbb
popl
add
add
adc
jmp
sub
jne
mov
in
popl
push
incl
adc
add
call
and
and
inc
test
sldt
xor
pushf
jmp
mov
or
inc
call
mov
loopne
inc
add
mov
add
add
cmp
test
sbbl
jne
call
leave
rcrb
add
add
add
inc
mov
fcom
add
lea
pushl
call
mov
fstps
push
pop
mov
addl
mov
xor
xor
pop
or
inc
push
in
or
movsl
xbegin
clc
adc
divb
or
test
jno
add
adc
xchg
test
clc
data16
orl
rolb
mov
mov
push
add
push
jge
add
jne
mov
jmp
xor
pop
cvtdq2ps
ret
mov
xor
add
push
rdpmc
out
add
mov
ret
sbb
cmp
or
or
pop
inc
add
add
invd
jge
mov
cli
xor
mov
ret
mov
sub
inc
xor
pushf
inc
mov
hlt
test
mov
xor
dec
or
jne
mov
call
inc
mov
add
add
inc
mov
addl
inc
mov
lock
jge
mov
cli
xor
add
test
add
cmp
xadd
test
mov
xor
add
pop
loopne
inc
clc
xor
add
data16
mov
hlt
xor
data16
data16
cmp
ja
psubq
ltr
add
add
data16
mov
jge
data16
data16
mov
fdivl
data16
mov
mov
pop
or
clc
mov
lock
jge
invd
pop
add
cmp
data16
mov
pop
fbstp
test
add
add
jge
data16
pop
stc
bsf
mov
in
test
mov
call
ds
add
mov
call
add
mov
jnp
mov
mov
call
mov
data16
xorl
fisttps
cld
jne
xor
mov
sti
repnz
data16
push
xor
mov
pushf
data16
mov
mov
fisttps
or
mov
hlt
mov
add
dec
or
mov
or
mov
fdivrl
xor
pop
lock
lea
icebp
jb
add
jge
mov
fsubr
pop
mov
in
rcrl
jb
add
jge
mov
in
pop
data16
cmp
mov
fdivrl
cmp
mov
mov
lock
mov
or
clc
cmp
je
push
loopne
dec
mov
icebp
mov
pcmpgtd
add
jmp
mov
lock
rorl
or
jb
add
loopne
jne
data16
mov
data16
add
data16
retw
ret
lret
enterw
pop
jne
mov
call
xor
lea
repnz
add
xor
in
xor
movl
clc
add
pop
pushf
pop
call
mov
push
pop
mov
push
inc
add
add
into
fs
mov
ret
add
add
add
ds
add
into
ret
pop
adc
add
add
jne
lea
mov
sarl
test
mov
push
xorb
mov
xor
cmp
pop
mov
je
xor
mov
cmp
pop
cmp
jne
mov
cld
push
pop
inc
stc
test
clc
test
cmp
fs
or
add
add
push
lret
add
clc
add
dec
mov
push
add
xor
cmp
je
mov
push
lea
push
cmp
mov
add
sub
add
mov
jne
mov
xor
mov
push
cmp
jne
sbbl
clc
inc
pop
sti
add
cld
xor
mov
roll
mov
inc
in
add
mov
mov
push
mov
test
xor
pushf
sub
inc
sub
mov
inc
add
or
cmp
mov
cmp
je
push
dec
str
cmp
xor
mov
add
data16
push
add
jne
movl
clc
xlat
inc
mov
push
pushf
in
add
add
add
add
add
lret
lock
clc
inc
lret
cmp
ss
pushf
test
je
xor
rorb
push
add
jb
add
dec
mov
push
push
adcl
xor
mov
scas
ret
jns
mov
dec
or
ret
lock
mov
or
mov
xorl
mov
adc
iret
inc
movl
incb
ret
adc
clc
dec
fisttps
add
ret
lea
add
xor
pushf
add
add
inc
test
xor
push
pushf
push
xor
inc
cmp
jbe
mov
or
inc
test
xor
in
hlt
push
push
push
push
mov
pushf
pushf
xor
mov
or
mov
clc
jb
add
orl
addl
mov
or
inc
dec
mov
orw
xor
mov
mov
mov
mov
inc
dec
add
add
mov
clc
or
mov
clc
popf
incl
ret
adc
mov
hlt
test
clc
or
xor
pushf
jb
add
inc
daa
inc
inc
xor
dec
pushf
add
clc
cmp
or
add
xor
or
lea
or
enter
mov
cld
dec
push
sub
add
or
add
or
add
mov
inc
mov
cmp
xbegin
clc
or
xor
adc
lea
add
inc
add
add
je
push
or
dec
std
mov
mov
mov
or
inc
clc
mov
hlt
call
push
or
push
xor
mov
xor
pushf
inc
mov
or
add
inc
mov
or
inc
push
jmp
mov
mov
jne
jmp
mov
clc
lret
push
mov
mov
sub
decl
or
pop
ds
pushl
mov
mov
jmp
leave
jne
call
in
dec
add
add
inc
cmp
je
mov
or
add
or
adc
enter
rolb
mov
or
rorb
jmp
push
mov
cld
inc
inc
orl
push
push
mov
add
test
mov
adc
mov
mov
lock
fcoms
mov
push
enter
cmp
add
mov
call
cmp
jmp
push
call
mov
cld
or
call
add
xor
jne
cmp
jne
mov
or
pop
into
je
mov
or
mov
mov
mov
or
sar
xor
xor
pop
adc
ret
cld
inc
mov
cld
mov
push
pop
or
xorps
test
add
adc
addl
jmp
ror
inc
leave
xor
and
add
xor
xorl
mov
pcmpgtw
add
leave
mov
push
dec
mov
lea
xor
sysret
dec
rorb
pushw
jne
ud0
mov
lods
add
data16
iret
and
cli
inc
cmp
add
inc
pop
lea
mov
add
mov
mov
add
inc
data16
clc
int3
cmp
je
push
pop
xchg
data16
lea
jb
jmp
call
clc
xchg
mov
or
lea
push
inc
jge
mov
fdivs
incl
xor
xchg
ret
xor
cmp
data16
rolb
add
dec
xchg
push
jmp
push
add
add
mov
clc
dec
xchg
cmp
jne
xor
jmp
add
jne
call
clc
xchg
sti
add
add
xor
pop
mov
jmp
mov
cmp
cmp
lea
jle
jae
mov
lcall
inc
push
lea
mov
int3
push
xchg
add
add
inc
add
cld
mov
aam
xchg
mov
testb
mov
hlt
add
mov
decl
incl
mov
call
je
js
lock
mov
mov
sbb
clc
add
mov
rorb
dec
xchg
mov
in
jge
cmp
clc
pop
fistl
clc
add
mov
mov
mov
adc
add
adc
pop
sbbl
ret
cmp
mov
cld
add
add
add
sub
or
add
mov
push
push
clc
addl
out
add
jmp
cmp
jmp
je
mov
inc
add
add
add
pop
pop
push
inc
in
pop
in
cmp
xor
add
push
mov
in
dec
push
test
add
leave
inc
test
add
add
dec
push
mov
hlt
push
dec
leave
mov
clc
cmovge
mov
clc
popl
push
add
push
xor
cld
add
add
pushfw
add
add
mov
cmp
jne
xor
jmp
add
mov
or
mov
mov
mov
or
shl
icebp
addb
or
or
stc
shll
xor
inc
xchg
add
add
mov
test
sub
jmp
mov
lock
lea
mov
or
leave
add
dec
dec
test
paddb
add
dec
mov
mov
or
dec
xor
mov
adc
mov
call
mov
push
clc
or
push
lret
mov
mov
xor
cmp
lsl
call
or
dec
or
inc
xor
in
add
inc
pop
xor
testl
dec
adc
inc
xor
sub
test
clc
inc
add
hlt
leave
test
clc
inc
push
aaa
inc
pop
rorl
orb
mov
push
clc
ret
xor
xor
js
dec
push
mov
lock
lret
jne
mov
enter
lret
into
out
dec
dec
jmp
xor
xor
mov
sub
add
or
dec
mov
xor
jb
add
dec
pop
mov
cld
mov
call
stc
add
pop
leave
add
in
mov
xor
movl
mov
xor
pushf
inc
cmp
pushf
xchg
mov
ljmp
push
push
push
push
push
xor
mov
add
mov
clc
lret
cmp
pushf
mov
clc
cld
jne
xor
xor
or
add
hlt
dec
dec
je
xor
xor
add
add
rol
mov
in
inc
enter
icebp
mov
clc
lock
enter
lret
inc
jne
mov
cld
dec
enter
pushf
sti
xor
mov
mov
xor
xor
mov
mov
push
shr
in
cmp
add
pushf
mov
call
xor
pushf
popa
push
dec
inc
mov
clc
pushf
into
mov
in
call
pop
or
or
or
push
inc
cmpxchg8b
leave
loopne
test
mov
rcll
xor
add
and
mov
leave
sti
inc
decl
mov
clc
dec
iret
xor
jb
add
inc
mov
xabort
loopne
ljmp
mov
clc
lock
dec
mov
loopne
incl
mov
hlt
jne
mov
in
dec
or
jb
add
xor
add
mov
subl
mov
xor
pushf
mov
clc
add
mov
adc
inc
mov
mov
loopne
inc
mov
mov
nop
roll
mov
mov
dec
push
mov
xor
mov
mov
in
into
inc
iret
xor
add
mov
dec
mov
mov
mov
mov
xor
mov
clc
enter
mov
lock
mov
cmp
rol
enter
inc
adc
inc
clc
xor
add
mov
roll
add
push
mov
fsubr
inc
mov
adc
add
inc
test
xor
fmuls
test
cld
or
dec
ret
push
inc
dec
mov
mov
push
jne
mov
call
mov
mov
clc
mov
xor
adcl
inc
push
mov
clc
incl
mov
clc
rolb
je
mov
jne
lea
mulb
decl
fadds
inc
jmp
mov
roll
mov
lock
dec
ret
mov
mov
mov
fadd
enter
inc
cld
mov
xor
add
sub
xor
pushf
add
or
jne
clc
mov
call
jmp
mov
xor
xor
enter
clc
inc
inc
pushl
in
pushf
jne
mov
clc
dec
out
dec
mov
lea
cmp
lea
mov
cld
iret
mov
jmp
test
je
mov
fdivr
movl
lock
inc
lock
lret
imul
testl
dec
mov
fmuls
fmuls
enter
inc
dec
xor
add
mov
inc
inc
push
mov
lock
mov
fadds
rol
test
dec
push
decl
push
mov
add
cmp
add
loopne
add
dec
xor
pushf
mov
cld
iret
test
mov
in
dec
add
add
dec
mov
fmull
add
testl
test
add
add
mov
cld
mov
hlt
mov
add
cmp
add
mov
mov
call
dec
add
cmp
cld
iret
mov
dec
push
lea
mov
call
iret
inc
mov
or
or
xor
cmp
je
mov
mov
xor
mov
mov
xor
bswap
rorb
add
mov
xor
or
mov
xor
bswap
rorb
add
add
xor
mov
add
dec
dec
xor
mov
lock
iret
rorl
inc
mov
iret
add
xor
mov
or
push
shll
cmp
fmull
test
dec
dec
xor
or
dec
enter
add
mov
xor
or
mov
mov
xor
mov
cmp
jne
lea
sti
or
cmp
je
mov
ret
or
call
add
mov
cld
mov
xor
add
dec
jnp
mov
xor
add
mov
mov
xor
rorl
jb
add
ja
sbb
cwtl
enter
inc
decl
fadds
rorl
inc
xor
mov
or
inc
rcll
mov
xor
jb
add
shll
mov
xor
add
repz
inc
mov
xor
inc
mov
mov
jne
mov
test
inc
mov
mov
lea
xor
add
mov
lods
dec
inc
mov
lret
mov
adc
std
ret
ljmp
hlt
push
xor
enter
inc
add
cld
test
pushf
inc
xor
pop
push
incl
in
mov
push
inc
cmpsl
mov
or
add
add
add
icebp
je
mov
cld
rol
ret
add
lea
cwtl
jne
clc
or
incl
cmp
incl
lcall
or
push
mov
test
inc
mov
imul
dec
mov
push
dec
push
xor
add
push
incl
lods
inc
inc
mov
xchg
or
call
adc
orb
inc
inc
add
mov
call
push
push
dec
jo
push
dec
mov
cmp
cmovne
call
mov
lcall
leave
inc
adc
jne
call
dec
inc
mov
add
mov
push
or
dec
xorl
cmp
mov
pop
adc
ret
mov
clc
mov
pop
mov
mov
push
push
lock
mov
adc
or
push
ret
xor
mov
mov
cmpb
add
cmp
mov
xchg
dec
add
mov
add
dec
into
mov
mov
das
add
add
mov
and
mov
and
xor
lea
xor
add
xor
orl
xor
pushf
mov
or
jne
call
adc
mov
adc
movl
pop
dec
and
call
in
call
adc
pushf
pop
mov
and
push
add
mov
test
decl
and
cli
and
or
sbb
adc
jmp
mov
adc
dec
adc
mov
and
xor
add
pcmpeqb
jmp
decl
je
mov
pop
adc
pushf
mov
jge
decl
