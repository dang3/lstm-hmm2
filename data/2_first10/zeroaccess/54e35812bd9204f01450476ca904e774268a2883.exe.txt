push
mov
sub
and
mov
xor
mov
mov
sub
inc
push
mov
movl
mov
sbb
sbbl
mov
and
orl
orl
mov
or
mov
neg
mov
cmpl
mov
movl
mov
movl
jmp
mov
mov
jle
pushl
call
add
mov
or
or
or
sbb
add
cmpl
movzbl
mov
movzwl
jmp
movl
movl
jne
push
push
push
push
call
adcl
sbb
inc
adc
and
mov
addl
sub
mov
mov
sbb
mov
orl
orl
lea
xorl
mov
add
mov
and
mov
cmpl
not
movl
jmp
movl
movl
jle
push
call
andl
addl
add
sub
or
xor
xor
mov
sub
or
mov
add
mov
sbb
mov
mov
mov
shrd
cmpl
mov
mov
mov
mov
jmp
movl
movl
jge
pushl
push
pushl
push
call
addl
subl
movl
sub
dec
shr
mov
mov
xor
xor
subl
or
movzwl
or
mov
mov
movl
cmpl
movl
movl
movl
jmp
movl
mov
jbe
pushl
pushl
push
push
push
call
addl
adcl
movl
movl
cmpl
mov
movl
jmp
mov
jl
pushl
push
push
call
sbbl
xorl
notl
xorl
decl
cmpl
movl
movl
jmp
movzwl
jb
push
pushl
pushl
push
call
add
subl
andl
decl
andl
cmpl
movl
movl
jmp
movl
movl
jl
pushl
pushl
pushl
push
push
pushl
call
and
movl
subl
addl
orl
cmpl
movl
movl
movl
jmp
mov
jne
pushl
push
push
push
call
sbbl
xorl
adcl
addl
andl
sbbl
sbbl
sbb
jmp
push
lods
and
cmp
sub
pushf
jmp
mov
and
sbb
sbbl
stc
clc
out
or
shlb
jno
sbb
mov
and
inc
mov
cld
clc
sub
dec
pop
push
and
fcompl
dec
inc
xchg
lret
xorb
jle
sti
xchg
mov
arpl
jmp
adc
out
push
pop
stc
adc
mov
dec
je
xchg
or
inc
add
fistpll
movsl
bswap
jae
in
stos
mov
mov
outsl
sub
aam
mov
xlat
dec
outsl
push
dec
mov
mov
dec
inc
lret
pop
popf
adc
mov
and
in
mov
lret
int3
aam
pop
push
sub
inc
and
data16
and
adc
dec
xchg
jecxz
enter
push
hlt
xor
fadd
sbb
int3
sub
and
cltd
imul
pop
popf
into
mov
cmp
adc
lahf
lea
test
push
or
lds
inc
cld
loope
push
adcl
scas
ror
js
stos
dec
xor
jge
call
pop
add
pop
js
lods
adc
inc
inc
sahf
mov
or
xchg
lret
push
addr16
stc
jl
loopne
mov
pusha
stos
fsubrs
aam
jmp
add
xor
cmp
mov
xchg
cbtw
clc
add
fnclex
dec
dec
push
loopne
mov
pop
pop
popa
jle
pop
fisubrl
mov
movsb
mov
pop
and
dec
push
sbb
jmp
jp
sub
mov
mov
mov
pusha
xor
push
jns
faddl
xchg
sbb
mov
and
xchg
rclb
repz
cmp
loop
sarl
jnp
pop
mov
mov
rcr
xchg
icebp
xchg
fidivrl
test
mov
test
and
or
xor
xchg
adcb
outsl
mov
push
pop
sbb
or
enter
and
pop
imul
pusha
imul
jno
mov
iret
dec
sub
and
sub
or
xchg
ss
or
pop
cmpsb
and
lock
jae
add
ds
inc
push
adc
mov
in
mov
push
outsl
enter
adc
push
inc
adc
lea
cmp
push
and
mov
scas
loop
ss
xchg
mov
pop
cmp
bound
test
adc
dec
pop
xchg
sbbb
cld
push
sub
jo
cwtl
push
inc
and
scas
imul
scas
jns
jge,pt
testb
lahf
repz
mov
in
sub
or
mov
pop
mov
add
outsl
das
or
in
pop
sub
outsl
inc
add
neg
movl
movl
movl
mov
add
movl
mov
add
movl
cmpl
movl
notl
jmp
movl
mov
jle
push
push
call
adcl
addl
subl
orl
mov
xor
movl
xor
movl
movzwl
adc
movl
adc
movl
cmpl
movl
mov
movl
jmp
mov
mov
je
push
pushl
pushl
pushl
call
sbbl
adcl
subl
andl
addl
movl
sub
movl
movl
addl
movl
movl
cmpl
mov
mov
mov
movl
jmp
mov
mov
ja
push
push
push
call
addl
subl
xorl
decl
and
or
mov
and
movl
movzwl
sbb
movl
or
movl
adcl
movl
movl
sub
movl
not
mov
shl
andl
mov
xorl
push
push
push
push
orl
call
cmpl
movzbl
movl
mov
movl
jmp
movl
jge
pushl
call
adc
orl
or
mov
mov
or
and
mov
mov
dec
xor
or
mov
mov
sub
cmpl
movzbl
mov
mov
jmp
movl
je
pushl
push
push
push
push
push
call
addl
sbb
or
or
not
mov
mov
sub
xor
sub
mov
lea
or
mov
mov
xorl
or
orl
and
mov
or
sbbl
xor
movl
cmp
jne
sub
mov
mov
orl
shrd
add
shr
mov
cmpl
mov
mov
jmp
notl
movl
jl
pushl
push
call
movzbl
sub
mov
mov
add
xor
add
mov
or
xor
or
adc
mov
dec
mov
adc
mov
addl
shl
xor
andl
xor
notl
or
mov
mov
cmp
movl
jne
mov
mov
xor
mov
xor
or
xor
xor
sub
or
mov
sbbl
mov
shrd
mov
xor
mov
andl
xor
shr
mov
xorl
xor
orl
or
shl
movl
sub
andl
mov
mov
mov
and
add
or
mov
sbb
mov
or
mov
shrd
shr
movzbl
sbb
mov
mov
mov
jmp
stc
dec
popa
test
mov
sbb
and
sbb
adc
sbb
idivl
or
bound
icebp
daa
fcomi
pop
sub
movsl
jecxz
out
gs
dec
popa
and
add
pusha
pop
int3
loope
jb
cwtl
fs
dec
mov
adc
rorb
and
xchg
outsb
or
dec
mov
test
fimuls
hlt
xchg
stos
fidivrs
xchg
aad
or
mov
mov
cltd
outsb
ret
adc
mov
sbb
and
js
scas
test
adc
push
arpl
or
jne
push
xchg
or
fdivrs
es
sbbl
jae
jl
cmp
sbb
xchg
pop
addr16
es
mov
mov
stos
scas
bound
inc
cmpsb
xlat
sub
inc
mov
fildl
pop
xchg
lret
push
fdivrp
pop
mov
in
xlat
xor
push
adc
in
inc
stos
xchg
adc
addr16
or
mov
adc
pusha
fildl
and
inc
lret
sahf
sub
jns
push
dec
xlat
outsb
mov
sbb
in
xchg
fcomi
adc
cmpsl
cld
mov
mov
adcb
fwait
mov
outsl
push
mov
cmc
fbld
or
xor
and
push
cmp
mov
arpl
mov
icebp
dec
fwait
inc
rcll
xchg
xrelease
cmp
dec
es
sub
adc
test
fadds
dec
das
jg
pop
adc
adc
cmp
and
pop
or
inc
dec
jmp
dec
ja
stos
repz
out
rorb
mov
sub
push
insb
int
and
xor
jecxz
pop
lock
insl
das
fstpt
jno
add
mov
mov
jae
repz
lahf
popf
lret
ret
divl
arpl
cmpsl
out
test
or
sbb
out
cltd
clc
and
sbb
hlt
mov
sbb
push
xchg
sbb
xor
ficoms
fucom
addr16
lahf
dec
rorb
lret
jp
jmp
and
loopne
inc
out
adc
rcl
pop
es
inc
aas
out
lds
sub
and
and
add
repz
aas
inc
pop
xlat
xchg
pop
xchg
int
sbbb
xor
stc
shr
mov
pop
mov
sub
xchg
xor
dec
mov
call
mov
roll
sub
mov
jno
jmp
imul
add
sub
popf
pcmpeqw
data16
cmp
dec
dec
fwait
ljmp
adc
add
jl
cs
add
fdiv
aad
pusha
cmc
sbb
xor
sub
shl
xor
mov
adc
or
add
mov
sub
mov
sbbl
shrd
xorl
shr
mov
sub
mov
addl
mov
xor
adcl
xor
or
shl
jmp
pop
sahf
pop
add
cmp
inc
inc
mov
sub
sbb
and
sbb
sub
movsb
mov
js
subl
adc
insb
out
scas
pop
rorb
xor
int
xchg
cmp
dec
jns
lods
nop
ja
jmp
mov
int
in
lods
es
iret
push
scas
mov
jle
adc
cmp
jmp
pop
mov
arpl
fldt
out
and
mov
ja
jb
mov
or
jle
mov
or
lods
adc
daa
pop
dec
push
inc
pusha
jle
aas
ss
lahf
lcall
ret
jbe
ljmpw
push
not
pop
out
jmp
mov
iret
sbb
add
mov
out
mov
xchg
xor
in
aad
xchg
cwtl
movsb
pushl
dec
cmpsb
mov
lcall
mov
out
jle
popa
inc
adc
xor
test
loope
psubq
imul
ret
je
xchg
es
fstps
in
or
addr16
stc
sti
outsl
mov
pop
dec
jne
ret
dec
mov
push
fimull
pop
test
fld
stos
mov
lahf
lock
and
jmp
or
fisubrl
cmpsb
and
sbb
lods
lods
out
mov
sbb
jp
jmp
xorl
in
outsl
lods
sbb
in
pop
pop
cmp
mov
cld
xchg
push
dec
insl
dec
pop
aam
jge
xchg
push
jge
adc
xor
arpl
cmp
push
add
rcll
jle
pop
bound
cld
lods
adc
ljmp
dec
adc
mov
mov
enter
pop
scas
xchg
fwait
roll
xor
jl
adc
in
lcall
filds
and
mov
cmp
lret
mov
cmp
or
cmc
in
pop
mov
pusha
xchg
sbb
hlt
bound
out
std
dec
xchg
add
fsubr
cmc
pop
pop
pusha
lahf
out
or
sbb
jo
cld
imul
jo
aam
xor
rolb
add
sub
ret
pop
add
cmp
fstl
sar
or
movsl
dec
bound
out
mov
push
inc
loope
add
push
and
jae
xchg
pop
mov
ret
jg
and
mov
fsubl
aam
push
push
xor
jmp
std
push
inc
data16
mov
call
hlt
sub
pushf
insl
add
and
push
lods
lea
pop
test
pop
ja
cmc
and
insb
stos
in
jae
cmp
push
mov
lock
les
call
xchg
sbb
insl
mov
in
sbb
jns
push
arpl
lret
call
jbe
sahf
push
arpl
iret
mov
sti
into
test
dec
es
lea
mov
mov
subl
shrd
subl
shr
cmpl
mov
movzwl
jmp
movl
jae
push
call
xor
not
movzbl
adc
xor
or
or
addl
adcl
mov
mov
mov
sbb
xor
sbbl
mov
xor
or
sbbl
shl
andl
imul
mov
orl
mov
shrd
mov
orl
mov
xor
shr
movzwl
sub
mov
mov
mov
adcl
xor
addl
or
shl
addl
sub
jmp
inc
ds
cmp
mov
jo
or
sbb
adc
sbb
jnp
xor
mov
movb
pop
pop
xlat
sbb
movsb
or
cltd
hlt
dec
pop
inc
sub
outsl
push
inc
and
inc
cmc
pop
sub
std
jp
add
icebp
les
out
adc
lcall
sub
add
insb
inc
dec
and
lods
sbb
xor
sbb
in
adc
movsb
sti
stc
jae
push
es
notl
cmc
adc
ror
sub
inc
out
jne
xchg
fmul
mov
pop
mov
lea
out
mov
mov
test
sbb
xchg
pushf
pop
cmpsl
ret
leave
jl
les
std
cli
loopne
push
sub
cld
mov
fcomps
dec
fisttps
loop
loop
mov
int
xchg
jge
repz
ret
fisubrs
loopne
pop
push
mov
sbb
xchg
fwait
mulb
fwait
add
mov
in
call
mov
mov
aaa
jmp
out
mov
mov
inc
test
jp
jo
mov
sbb
fimuls
mov
aam
pop
xor
adc
and
popf
pop
mov
enter
insb
mov
addr16
sbb
and
popa
ljmp
add
pop
push
out
adc
rcl
jbe
and
add
push
cmpb
aas
pop
xchg
dec
and
shlb
xchg
loop
jb
cmp
mov
fldenv
out
mov
push
repz
sbb
inc
push
mov
jmp
loope
cli
mov
mov
mov
mov
or
pop
pop
stc
jp
cmpl
adc
pushl
bnd
sub
icebp
inc
mov
stc
pusha
fbstp
rcrl
lret
mov
adc
ja
xchg
filds
sbb
cmovge
xchg
movsl
testl
sub
addl
add
arpl
xchg
test
xchg
fisttps
mov
sub
ds
mov
scas
es
push
adc
icebp
xor
test
notl
imul
fcomps
sub
push
es
iret
xchg
lods
movsl
mov
into
xlat
daa
or
mov
rcrb
sub
xchg
or
rcll
inc
mov
sub
jg
and
push
xchg
push
adc
xchg
mov
dec
gs
and
add
push
iret
inc
mov
cmp
mov
xchg
push
dec
jno
sub
cmp
pop
clc
push
xchg
ret
dec
cmpsb
roll
sub
fldenv
insl
fdivl
andb
xchg
orl
cltd
push
fdivs
xorb
jb
xor
imul
sub
xor
fcoml
insb
cli
push
xor
jmp
sub
jmp
mov
movl
cmp
movzbl
mov
jg
cmpl
mov
movl
mov
jmp
mov
movl
jae
push
push
pushl
push
push
pushl
call
and
and
sbb
negl
or
xor
xor
add
mov
inc
mov
subl
shrd
andl
mov
mov
xor
addl
shl
decl
xor
andl
or
shr
cmpl
notl
movl
jmp
movl
mov
jge
push
push
push
call
mov
mov
add
xor
xor
xor
not
and
adcl
mov
addl
mov
subl
mov
and
mov
shrd
jmp
dec
lods
adc
pop
movsl
cmp
stos
xor
repnz
add
sbb
adc
sbb
subl
loope
imul
lock
jg
sbb
loope
mov
pushf
out
and
mov
out
cli
outsl
sti
lods
push
cmc
or
sbb
and
dec
aad
test
mov
int
cmp
daa
adc
dec
jb
fistps
mov
jo
stos
mov
dec
outsb
inc
lods
or
repz
aas
push
rolb
inc
inc
lods
les
cmp
int
mov
imul
cmovo
push
sub
add
lret
cltd
fstl
ja
std
mov
and
push
xchg
mov
out
jg
test
and
out
fisttpl
fmull
jecxz
adc
push
cltd
test
int3
mov
dec
and
mov
dec
jle
ret
pop
outsl
fstpt
jb
push
mov
outsb
loopne
aad
cmp
loopne
xor
push
mov
push
mov
push
fidivrs
in
jnp
adc
mov
hlt
addl
or
xor
repnz
xor
jo
or
push
push
adc
lret
and
shl
sub
repz
mov
mov
sbb
stos
sub
sti
std
mov
rcrl
rcrb
fcomps
pop
pop
add
es
add
cmp
sbb
shrl
rorl
nop
jae
icebp
adc
mov
add
sub
xchg
stc
mov
push
push
std
int
std
jl
xchg
adc
int
adc
add
int
clc
mov
xor
scas
jbe
addl
sbb
xor
dec
push
outsb
and
sbb
or
decb
adc
sbb
push
jb
clc
in
in
filds
cli
scas
ret
nop
popf
sub
loope
mov
pop
jne
inc
jl
ja
mov
sbb
das
and
jmp
fdiv
in
addb
ficomps
inc
and
sarl
out
sbb
mov
int3
imul
pop
les
adc
testl
inc
xor
sub
rol
cmc
mov
xchg
add
clc
shll
push
jbe
push
sarl
stos
jno
add
cmp
in
adc
push
lea
cs
adc
stos
addr16
pop
lds
inc
mov
push
push
sti
or
orl
inc
cmp
mov
arpl
pop
xchg
out
xchg
in
or
pop
mov
mov
cmp
ja
mov
shrb
xor
push
smsw
cmpsb
mov
mov
xchg
jg
or
dec
adc
sub
ljmp
sub
add
sbb
add
add
ret
xor
sub
out
fnstsw
cmp
stos
inc
cld
sbb
and
sbb
push
sub
push
jge
lods
sbb
and
add
or
jmp
mov
and
xchg
inc
and
ficoml
rclb
inc
jle
lds
mulb
mov
call
pop
xor
shrb
lahf
sub
test
push
push
mov
push
out
inc
fcomp
ja
mov
insl
lahf
out
int3
in
scas
xor
cmpl
lods
sbb
push
scas
sbb
push
mov
sbb
pop
mov
pop
sbb
in
jle
mov
adc
pop
leave
out
call
test
fbstp
pop
clc
fcmovne
arpl
mov
dec
orl
inc
xchg
push
inc
mull
popa
divl
and
adc
push
insl
imul
sub
sahf
push
cwtl
and
loope
push
lds
jle
pop
cmp
negl
jb
ja
fs
orl
xchg
pop
inc
mov
xchg
sbb
lret
in
loope
sbb
push
and
scas
out
lahf
jp
cltd
fcmovu
lahf
test
shrl
aas
int3
imul
rorb
setle
mov
test
xor
mov
sar
gs
imul
dec
xchg
stc
push
mov
push
inc
repnz
movsb
and
ret
sub
sti
sub
cli
loop
fisubs
outsb
repnz
out
xor
data16
jns
test
cmp
xor
or
shl
inc
pushf
icebp
push
xchg
xchg
nop
dec
jnp
stos
mov
sub
mov
xchg
cmpsl
popf
gs
ss
mov
shl
xor
xchg
mov
adc
push
push
stc
sbb
movsb
add
fdivrs
out
dec
mov
dec
std
lcall
and
jbe
mov
cli
inc
jae
test
stos
jns
lea
pop
mulb
sbb
jnp
rorl
mov
mov
or
scas
mov
cmp
jns
adc
iret
jmp
jae
xchg
ds
rclb
pop
jge
dec
push
mov
push
cmp
fnstenv
ficompl
aaa
int
jnp
fwait
stos
jmp
mov
cmp
pop
push
jno
les
rclb
mov
shll
mov
jmp
push
enter
movsb
call
xor
adc
loope
jl
mov
ss
jecxz
jp
sarl
mov
sbbb
mov
in
mov
adc
lds
or
add
push
add
jge
sbbl
xor
adcl
or
shl
adcl
imul
sub
jmp
cmpl
movl
mov
mov
jmp
movl
jge
push
pushl
call
movzwl
and
adc
or
sub
xor
mov
mov
sbb
mov
cmpl
movl
movl
jmp
mov
jge
push
call
add
inc
xor
add
mov
adc
xor
cmpl
movl
mov
mov
jmp
movl
jle
push
pushl
push
push
call
mov
xor
andl
sbb
subl
mov
mov
and
mov
shrd
mov
mov
subl
xor
subl
shl
subl
xor
or
adcl
shr
mov
cmpl
movl
mov
mov
jmp
movl
jle
push
pushl
pushl
pushl
push
pushl
call
or
adc
or
inc
subl
mov
and
sbb
sub
mov
cmpl
movl
mov
mov
jmp
mov
jbe
pushl
pushl
pushl
push
pushl
call
adc
or
mov
xor
or
sub
xor
xor
or
mov
subl
mov
sbbl
shrd
shr
cmpl
movl
mov
mov
jmp
movl
movl
jb
push
pushl
call
xor
addl
inc
xor
neg
notl
cmpl
mov
mov
jmp
mov
jge
pushl
push
call
mov
add
mov
not
subl
mov
mov
xor
adcl
mov
sub
mov
addl
mov
cmpl
mov
movl
mov
jmp
movl
movl
jl
push
push
call
orl
sub
sub
movl
or
jmp
subl
cmp
leave
jl
jecxz
stos
dec
negb
sbb
adc
sbb
xor
sub
adc
cmpsb
iret
pop
loope
in
mov
sub
lret
mov
dec
or
xorl
in
in
mov
rclb
sahf
daa
mov
push
aas
jg
sbb
std
sub
add
push
or
lahf
pusha
xchg
scas
push
jmp
in
cltd
push
and
xor
out
mov
cmp
adc
test
inc
mov
pop
push
call
out
cmp
jp
dec
mov
bound
xbegin
jbe
sub
xor
pop
jmp
sbb
and
jo
mov
mov
sahf
dec
push
iret
sub
loope
dec
int3
iret
popa
mov
adc
push
stos
pop
int3
dec
xchg
mov
fs
ret
push
int3
cmp
xor
enter
scas
jg
or
sub
mov
lret
add
in
add
mov
pop
lcall
imull
and
fsub
or
adc
inc
aaa
lcall
inc
enter
les
orb
cmpsb
cmp
push
xchg
jnp
dec
aas
fiadds
aas
insl
icebp
mov
sti
xor
mov
orb
mov
xchg
bound
push
loop
add
mov
and
push
call
add
pop
pop
mov
jg
or
cltd
mov
in
rcrl
adc
cli
mov
and
xchg
ja
adc
mov
mov
push
cmc
inc
fildl
and
jp
and
jbe
cmp
clc
test
mov
and
andl
mov
add
inc
or
sbb
mov
mov
adc
cmpsb
sti
inc
mov
jne
int
daa
cmp
pop
and
test
sub
or
push
daa
ret
jle
aad
or
adc
and
xor
in
rol
inc
and
pop
int3
ret
jns
gs
jmp
sub
subb
icebp
or
shlb
xchg
push
push
cltd
xchg
xchg
nop
and
stc
jl
sub
movsl
adc
jmp
dec
ds
addr16
insb
mov
outsl
rcrl
push
dec
jbe
sbb
mov
cli
enter
sbb
aam
adc
sarb
xchg
cmp
add
hlt
dec
lret
adc
push
in
cwtl
pushf
mull
std
cltd
in
mov
les
fucomp
rcrb
insl
push
xchg
inc
dec
xor
sahf
push
mov
xchg
lahf
mov
jno
loopne
int
inc
jg
jbe
xor
cltd
add
pushl
push
inc
outsb
add
mov
clc
mov
xor
add
xor
mov
mov
xor
adcl
xor
or
shl
add
add
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
mov
movl
mov
mov
movl
mov
movl
mov
movl
mov
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
lea
mov
mov
mov
shrd
shr
mov
mov
shl
mov
xor
xor
or
mov
mov
xor
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
lea
mov
mov
jmp
inc
mov
mov
and
sub
and
sbb
push
dec
daa
or
push
xor
or
xchg
jecxz
inc
jns
cld
test
sahf
xchg
aad
cmpsb
and
mov
lcall
bound
pop
xchg
xor
jge
in
icebp
popa
mov
movsl
cmpsb
incl
cld
hlt
add
call
fmull
ljmp
or
imul
ret
add
push
sub
adc
stc
jne
jp
shrl
or
add
in
or
and
mov
icebp
stos
rcrb
mov
dec
cmpsb
adc
repz
mov
mov
jmp
fs
lcall
push
mov
and
imul
sbb
int3
jle
sahf
push
lock
cmp
push
inc
pop
loop
dec
cmpsb
call
sub
or
fnsetpm(287
xor
mov
in
inc
and
stos
pop
stos
std
ret
fmuls
pop
fimull
jbe
rolb
icebp
mov
adc
aad
pop
mov
test
pop
ss
jae
lcall
jl
mov
xchg
cmpsl
add
xor
xor
shlb
stos
fcompl
cld
jo
cmp
jle
fadds
pusha
rorb
cwtl
in
ja
int3
popf
addr16
sub
ss
mov
push
jo
sub
insb
loopne
test
push
gs
sub
dec
push
xlat
pushf
sub
cmpsl
lods
dec
inc
jmp
out
pushf
fsubr
je
in
inc
or
mov
adc
mov
mov
inc
cmpsb
and
push
xor
pop
cmp
add
adc
out
pop
mov
andps
sbb
push
pusha
insb
inc
add
outsl
add
nop
add
cmc
add
xchg
cmpsb
lock
imull
into
jp
pop
dec
mov
or
sbb
out
adc
or
and
push
adc
pop
pushf
mov
sub
adcl
inc
sub
or
mov
push
or
lcall
outsl
xor
in
jl
bound
push
or
mov
xor
mov
xor
aad
je
xchg
or
ret
rcl
cwtl
imul
push
call
rcl
mov
push
std
push
bsf
pop
lock
dec
pop
popf
dec
movl
xchg
mov
lea
jmp
ds
aaa
call
ds
xchg
pop
cli
add
outsb
or
push
cmpsl
jne
cmc
lods
leave
pushf
addr16
add
rcrl
push
subb
stc
xchg
mov
xchg
addr16
pop
loop
inc
xlat
mov
andb
dec
and
dec
cld
dec
xchg
mov
xchg
sub
adc
fwait
in
sbb
fs
add
out
les
mov
dec
in
lods
enter
add
add
push
push
push
mov
lcall
and
sbb
xor
dec
xchg
cmp
sub
sbb
cmp
ja
test
mov
push
lock
loop
imul
outsl
aam
das
stos
sub
dec
movsb
clc
cmp
add
jecxz
xchg
mov
cmc
sti
push
outsl
push
pop
inc
pop
jno
jbe
insb
lds
mov
loopne
and
xlat
inc
inc
imul
adc
mov
cmp
hlt
aad
and
jg
xor
mov
push
sbb
in
mov
andb
cld
daa
mov
cmp
xchg
xchg
xor
bound
mov
enter
pop
mov
movb
scas
mov
ficomps
sbb
cwtl
js
mov
push
in
lret
sub
adc
dec
shll
mov
lret
xor
repnz
jge
push
jmp
mov
out
je
lods
or
mov
cmpsb
int
pushw
sahf
call
xor
dec
push
int3
xor
cmp
inc
in
cmp
popa
pop
mov
push
fildl
mov
pop
dec
pop
push
outsl
push
js
loope
ljmp
sti
shlb
cmp
jno
mov
mov
push
ljmp
mov
icebp
and
cwtl
jl
jmp
xor
jo
pop
or
cvtps2pd
mov
pop
mov
add
mov
sub
data16
lock
dec
out
xchg
sti
vmovntps
and
pop
inc
cmp
hlt
mull
stc
mov
mov
imul
sub
pop
jnp
lock
lods
cmp
fsubs
mov
test
jg
inc
jo
or
pop
pop
push
dec
push
pop
pop
popa
mov
push
dec
jmp
nop
stos
sbb
xchg
fidivl
or
call
ljmp
sti
push
cmp
loop
loop
gs
in
pop
subl
shlb
jnp
sub
inc
xor
stos
mov
divps
ja
lods
lods
bound
dec
adc
movsl
push
shll
test
or
mov
mov
push
cmp
push
or
rorb
out
rolb
dec
fwait
mov
jbe
lret
cld
pop
imul
mov
int
cmpsb
es
jne
adc
pop
push
xchg
add
out
outsl
popl
mov
lcall
xor
cmc
fbld
inc
xchg
mov
jle
fildll
adc
mov
fs
xor
fadds
cmp
cwtl
dec
cltd
lret
cmp
mov
shr
mov
mov
shl
mov
xor
xor
or
mov
mov
or
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
lea
mov
mov
mov
shrd
shr
mov
mov
xor
shl
mov
xor
jmp
loopne
cwtl
xchg
mov
pop
add
outsl
mov
cmp
pusha
in
sbb
adc
sbb
push
fisttps
push
cmp
pop
jmp
xchg
fs
in
jmp
imul
ficomps
sub
pop
mov
repz
dec
flds
incb
add
mov
mov
mov
jnp
jle
test
mov
mov
adc
dec
mov
mov
cmp
pop
or
movsl
xor
gs
mov
sti
adc
and
mov
xchg
push
sub
loope
lahf
and
xlat
add
rorl
gs
or
jge
sub
dec
jecxz
mov
push
pushf
pop
or
jo
out
hlt
xchg
call
dec
mov
mov
mov
ret
dec
out
mov
cmp
ljmp
aaa
aad
mov
mov
sub
hlt
cmp
shlb
popf
in
mov
fwait
cmp
testl
adc
pop
scas
pop
repnz
stc
fucomp
jne
xor
loop
and
push
pop
jge
cs
adc
adc
out
push
stc
xchg
add
inc
add
push
cmp
pop
pop
aam
inc
lds
xchg
cs
mov
loope
ljmp
mov
sbb
sbb
jg
arpl
ret
mov
fidivrs
aam
cmpsb
cmc
sub
cmc
popf
je,pt
xchg
scas
insl
inc
push
xor
inc
mov
pop
sub
xchg
pop
orl
cmp
rorb
adc
mov
mov
popf
out
loop
es
push
cwtl
jg
daa
out
mov
xchg
out
mov
in
sbb
in
mulb
pop
mov
fsincos
pop
rclb
and
outsb
icebp
je
cmpsb
lods
shlb
stc
sbb
jo
add
mov
repz
inc
pop
or
jl,pt
xor
aad
insl
mov
sahf
dec
adc
mov
adc
int
in
mov
xor
pop
cmp
xchg
push
ficomps
pop
sub
enter
xor
lock
or
ja
int
cmp
cmpxchg
xor
out
sub
pop
imulb
mov
xchg
mov
sub
push
sub
lret
shll
inc
pop
cs
xchg
mov
mov
and
xchg
aaa
int3
cwtl
and
mov
cwtl
mov
xchg
or
and
jbe
cmc
fwait
in
or
aad
mov
jbe
mov
sbb
sahf
es
add
push
jno
push
sub
outsl
addr16
sbb
scas
bt
movsb
pop
pushf
mov
pop
incb
outsb
dec
jle
hlt
jmp
xorb
lods
push
mov
insl
fimuls
jnp
add
and
adc
popa
jo
dec
mov
std
mov
or
add
add
les
or
xchg
inc
insl
mov
fistps
sbb
adc
sbb
scas
pop
das
inc
cmp
fwait
nop
and
mov
gs
push
xor
cmp
loop
mov
jp
and
dec
paddusb
jecxz
addl
cltd
leave
int3
mov
adc
xchg
sub
jl
pusha
out
lret
push
ss
pop
jb
inc
mov
loopne
mov
outsl
pusha
pop
loop
cmpsl
stc
stc
push
lahf
mov
subl
or
clc
xchg
rorb
iret
movsl
outsl
inc
inc
jmp
adc
out
jo
inc
out
or
jb
adc
out
xor
jns
pop
aam
xor
loopne
mov
push
mov
or
repz
or
inc
in
mov
adc
pop
aaa
mov
ror
pop
ja
leave
cmp
mov
dec
add
popa
repnz
sti
out
insl
dec
push
cmpsb
xlat
int3
cs
icebp
xor
pop
and
pop
iret
add
lcall
pop
es
push
in
ret
fstpl
pusha
ret
xchg
sub
or
iret
mov
into
jecxz
pop
fistl
pop
ffreep
mov
in
push
das
xchg
mov
cmpsb
pop
mov
mov
icebp
mov
add
mov
xchg
movsl
ljmp
adc
mov
mov
cmp
sbb
scas
psubusb
xlat
jge
xchg
jmp
test
loope
mov
mov
xchg
jg
sti
es
add
xchg
inc
jl
cmpsl
mov
out
icebp
mov
xchg
sub
pop
pop
xor
ror
mov
and
pop
jae
mov
fucomip
jmp
int
sub
add
les
jmp
lret
adc
loope
pop
in
adc
movsb
inc
test
movsl
jo
or
iret
cmpsb
jno
push
sub
or
mov
push
pusha
setp
movsbl
cmp
cmp
cwtl
fcmovnu
add
add
mov
add
pushf
popa
cmp
and
mov
divl
in
pop
mov
in
sub
xor
and
fwait
adc
shll
into
fsubl
adc
fscale
cmp
jp
push
in
jbe
xor
lahf
es
cli
jmp
test
push
insb
fidivrl
fcoms
adc
push
sbb
pop
mov
pushf
adc
data16
popa
icebp
push
out
push
cli
aas
lods
xchg
cmp
shrb
loop
dec
xchg
xor
arpl
xor
int3
ja
rorb
pop
xor
shlb
aas
pusha
jp
pop
enter
xchg
int3
hlt
or
jl
jns
int3
sub
mov
sbb
sub
out
aam
sub
mov
in
int3
jne
test
in
cmp
dec
pop
movsb
xor
mov
mov
shrd
shr
mov
mov
xor
xor
jmp
and
xor
ficomps
mov
jo
sbb
and
sbb
sbb
push
mov
xadd
popf
mov
idivb
push
cmp
jg
jecxz
jo
lods
or
add
or
shll
scas
sub
xchg
add
jo
jg
cmp
xchg
jbe
xor
sbbb
call
add
sti
jae
lds
sti
lcall
or
out
outsb
aas
lods
cld
lods
adc
xchg
mov
shll
adc
stc
popa
pop
push
loop
mov
lcall
jbe
inc
push
gs
rcl
test
rol
leave
xchg
shl
bound
or
nop
lods
daa
clc
les
adc
or
add
push
mov
scas
out
mov
xor
mov
sub
push
xchg
xor
in
aam
sbb
popf
mov
pop
lea
sub
mov
dec
lret
lea
test
out
cs
imul
imul
push
dec
and
mov
divb
fmul
icebp
hlt
and
lahf
mov
jg
cmp
fcomps
push
adc
ss
leave
xorb
sbb
jmp
cmp
pop
fidivl
fs
dec
insl
mov
fwait
pop
ljmp
xchg
call
out
push
or
sub
xchg
sub
mov
je
xor
popa
jmp
imul
dec
add
adc
xchg
mov
pusha
adc
jae
call
adc
pop
and
rcrl
fiaddl
leave
mov
mov
ss
loope
inc
jbe
pop
fsubrl
loope
in
mov
inc
push
adc
in
fmull
mov
xchg
aas
add
sub
fisubs
out
sub
sbb
mov
imul
sahf
movsl
push
cmp
jnp
aas
add
enter
popa
mov
stc
data16
cwtl
mov
fdivr
daa
xchg
mov
pop
lahf
mov
inc
icebp
orl
push
lea
add
lcall
push
adc
add
xlat
dec
aaa
pop
fists
movsb
and
fisubs
sub
bound
pop
push
cmc
sbb
ret
fnstcw
sub
jle
jle
inc
stos
xlat
out
jbe
fiadds
add
adc
push
add
sub
hlt
jb
pop
divl
imul
pop
or
jbe
jns
mov
xchg
mov
xor
and
push
jne
push
aaa
test
mov
xorl
je
xor
les
pop
inc
shrl
sub
cmp
je
addr16
faddp
jecxz
hlt
jle
stc
clc
or
lea
mov
mov
shl
mov
shrd
shr
mov
mov
xor
xor
or
mov
shl
mov
mov
mov
or
mov
mov
shrd
shl
shr
mov
mov
xor
mov
xor
or
mov
dec
not
and
xor
mov
mov
xor
or
mov
mov
shrd
jmp
fdiv
sub
mov
sbb
rcrl
sbb
adc
sbb
test
add
xor
adc
push
mov
ret
in
test
mov
rcr
mov
sarl
pop
fiaddl
mov
imul
int3
mov
mov
lds
add
or
out
inc
jne
pop
ficoms
fsubrl
cltd
push
sub
cmpsl
or
push
in
imul
neg
sbbl
or
lds
dec
jne
addr16
sub
ja
pop
xlat
mov
jg
pop
aaa
inc
mov
fbstp
rcrl
cmpsb
test
cmp
jae
jbe
icebp
xchg
mov
mov
mov
outsb
rol
adc
mov
cmc
enter
xlat
xor
push
hlt
cwtl
add
das
push
scas
dec
ljmp
mov
push
sub
fsub
push
xor
push
add
ljmp
es
adc
add
sbb
adc
fldt
dec
call
fdivrs
imul
leave
out
insl
dec
pusha
test
adc
jmp
ret
dec
push
ljmp
xchg
outsb
xchg
nop
mov
jle
gs
jecxz
dec
mov
out
jp
pop
fwait
or
push
inc
fcmovnbe
lret
outsl
sub
jle
stc
cmp
jb
add
push
nop
test
lret
pop
aam
loope
pcmpeqd
das
pop
jbe
or
mov
sbb
mov
inc
out
enter
push
adc
cmp
data16
mov
dec
data16
ja
les
cmp
inc
sbbb
and
movsl
mov
mov
pop
test
jmp
scas
mov
popa
push
pop
mov
cmp
jb
aas
sub
sbb
push
jg
iret
sub
jno
xchg
mov
dec
mov
cs
mov
test
enter
outsb
out
sahf
into
and
out
jle
pop
xor
ret
inc
popa
jb
mov
sub
xchg
test
and
pop
mov
pushf
test
call
xor
mov
add
push
mov
js
mov
fadds
pop
push
enter
sub
out
ftst
mov
adcl
in
push
in
mov
mov
cmp
pusha
dec
xor
rcll
insl
push
fldl
push
or
adc
int
popf
ret
inc
hlt
test
dec
iret
sarl
pop
ret
xor
xchg
cli
jge
push
and
imul
pop
pop
loope
inc
mov
pop
fwait
fists
test
out
add
sahf
enter
and
mov
and
es
insl
mov
mov
dec
shr
mov
mov
mov
xor
mov
xor
shl
mov
or
jmp
out
mov
stos
mov
sub
sbb
and
sbb
mov
sub
subb
outsb
inc
bound
push
iret
shr
lods
fnstcw
push
or
push
adc
and
les
ds
dec
add
or
popa
adc
xlat
fmull
bound
test
fistpl
loop
pop
inc
jg
xor
insl
addr16
shrb
imul
arpl
cmpsb
fsubrs
popa
decb
pop
repz
xor
xchg
lret
lock
pop
shlb
rcrl
and
pop
jmp
shr
xor
cmc
loope
sbb
pop
mov
int3
outsl
add
jb
pop
imul
mov
das
push
sbb
stc
jb
push
mov
add
shlb
pop
sbb
jae
stc
insb
sub
cld
xchg
or
pushf
add
adc
jbe
js
xchg
fsts
cmp
mov
popf
or
pop
icebp
xor
clc
fimull
lock
or
mov
mov
mov
js
lock
sub
inc
xchg
lret
inc
ljmp
xchg
into
nop
push
adc
addr16
ja
sub
cltd
adc
adc
sbb
pop
pop
sub
add
arpl
or
jbe
cmp
dec
add
test
rcll
in
sbbl
push
push
ja
mov
mov
movsb
mov
cmp
xchg
cltd
dec
xor
inc
inc
enter
jecxz
rorl
and
jno
pop
imul
cmpsl
outsl
rcrb
and
cmp
jbe
mov
inc
inc
pop
call
lods
lds
gs
cmp
mov
jb
out
sbb
ret
dec
test
rcrb
ja
int
loop
sbb
imul
sub
cmp
mov
sub
xchg
mov
fcoml
test
add
test
sub
adc
dec
push
mov
jbe
rcrb
sbb
mov
ss
rorl
adc
ds
cmp
iret
sbb
hlt
push
loopne
fcmovbe
push
xor
sbb
pop
in
ficoml
rcr
rcrl
pushf
dec
dec
and
xchg
inc
subb
loopne
mov
ja
hlt
enter
fwait
int
inc
and
rcrb
and
xlat
jne
aad
jns
mov
repnz
mov
sbb
test
int
xlat
lods
jge
mov
jbe
lahf
sub
push
roll
push
xor
mov
mov
and
xchg
in
push
mov
cmp
je
mov
sub
mov
mov
jmp
dec
lret
repz
cmp
fildl
mov
mov
sbb
and
sbb
jno
mov
cmp
xor
fisubrl
cmc
dec
mov
sub
out
insb
inc
inc
lret
mov
mov
stos
js
loopne
jmp
and
mov
cld
daa
jbe
adc
xchg
test
cwtl
not
inc
dec
lds
or
jge
pop
in
clc
mov
add
in
je
adc
aaa
movsl
pusha
add
negb
out
xchg
shrb
push
je
fldcw
adc
mov
movsl
mov
and
rorl
popa
and
fldcw
notl
ret
and
adc
pop
inc
cmpsb
outsb
imul
movsl
popa
mov
scas
xchg
lea
push
decl
push
or
sarb
inc
cwtl
fsubl
or
jp
jge
call
dec
fwait
lea
out
fs
outsl
push
dec
xchg
dec
mov
popf
mov
jg
pop
push
sahf
out
sbb
jno
push
ljmp
and
repnz
mov
int
xchg
movsl
dec
pop
enter
xor
sub
sub
dec
lds
outsl
les
test
lret
mov
sti
aam
movsl
addl
sub
int
dec
mov
enter
dec
cmp
push
imul
mov
and
add
out
mov
je
rorb
push
push
dec
ret
adc
lcall
mov
or
add
insl
jae
jl
ss
hlt
xchg
and
pop
and
mov
lcall
and
and
add
mov
insb
sub
sbb
mov
daa
fcomps
inc
test
cmpsb
mov
cmpsb
xchg
or
mov
movsl
cwtl
fdivl
test
cmp
test
into
fs
pop
mov
and
pop
adc
cmp
sti
addr16
cmc
mov
mov
outsl
inc
lds
mulb
adc
xchg
inc
stos
or
ja
mov
and
sbb
fs
push
fsubrs
xlat
mov
xchg
cmpsb
pusha
out
gs
jmp
xchg
cmpsl
test
inc
insb
enter
sbb
jae
jg
pop
mov
jnp
test
mov
call
jns
xor
movsl
dec
sub
aas
mov
aaa
repnz
decl
pop
jnp
push
fstpt
xchg
jp
movsl
mov
mov
dec
xor
loop
dec
lcall
pop
int3
movsl
and
leave
fnstsw
cmp
cmp
or
int3
xorb
scas
cmpsb
mov
add
scas
cltd
jl
and
xchg
and
mov
push
call
xlat
xor
call
icebp
ja
jns
shrd
shr
mov
mov
mov
mov
xor
or
mov
mov
mov
xor
xor
mov
mov
mov
shrd
shl
xor
or
mov
mov
mov
shll
xorl
mov
mov
mov
xor
or
shr
or
cmp
jne
cmp
je
jmp
mov
mov
xor
xor
shrd
shr
mov
mov
mov
mov
xor
or
jmp
iret
xchg
ret
or
cmp
jo
cmp
nop
rcrl
and
sbb
stos
xor
sbb
movsl
jnp
movsb
notl
dec
lcall
lahf
push
mov
mov
call
loope
cwtl
imul
sbb
popf
mov
add
shrl
xor
movsl
lahf
fistps
insl
std
aaa
subb
mov
xor
jle
sti
jl
inc
sub
push
lcall
loopne
je
xchg
jecxz
in
pop
fdivrl
add
insb
out
and
jmp
xchg
je
and
cmp
call
mov
jle
lods
test
cmp
mov
daa
ret
cmp
in
lret
sbb
mov
je
mov
jl
cltd
add
shrl
in
sbb
out
push
push
pop
jecxz
shll
fld
mov
aad
lods
sbb
inc
and
dec
gs
cli
push
fsubrs
pop
ret
and
inc
test
scas
lea
fwait
out
scas
jo
xor
int
cmp
xchg
stos
jge
push
arpl
dec
xchg
sub
nop
xor
scas
lahf
fld
addr16
and
inc
lods
mov
pusha
jl
jb
pop
lret
pop
and
stos
push
aad
mov
jl
fwait
dec
aad
lods
test
loopne
mov
xchg
or
subl
add
sahf
movsl
push
cmp
mov
pop
loope
fisubrl
arpl
ja
dec
sbb
inc
ja
jg
js
or
cmp
pop
inc
rclb
jbe
lahf
xchg
and
inc
ret
or
insb
xchg
sbb
inc
xor
fsubrl
xchg
mov
cwtl
pop
inc
cmpsb
je
call
dec
xor
push
int3
ficoml
insb
mov
jmp
xor
test
out
test
inc
call
cld
sub
and
sbb
add
leave
fstl
in
outsl
dec
adc
add
shlb
dec
flds
cmp
data16
pop
aad
pop
pop
mov
insl
out
outsb
aaa
mov
mov
les
jo
xchg
xchg
dec
jg
jp
mov
push
sub
cmp
insl
mov
xchg
loop
xchg
mov
push
xor
adc
cs
xor
push
pop
daa
add
pop
push
shl
cmp
xchg
xchg
ror
jnp
pop
pop
add
add
adc
sub
sub
lea
std
loop
and
sbb
xchg
pop
xchg
les
adc
jle
pop
sub
pop
xchg
or
into
stos
jno
fdiv
popf
out
rolb
inc
mov
pop
fs
pusha
mov
xor
loop
xor
or
mov
mov
xor
jmp
fstps
cmp
and
pop
xchg
rcrb
mov
and
sbb
add
data16
in
xchg
cmp
js
sbb
sub
into
mov
jns
xor
fs
mov
scas
sbb
std
test
cmp
xchg
shlb
mov
in
dec
add
sub
mov
es
lods
mov
jl
dec
or
dec
or
test
lea
add
test
xchg
push
mov
mov
pop
adcb
adc
mov
popf
pop
fsubl
push
data16
cmp
or
in
arpl
jno
cmp
jb
and
push
inc
ja
jo
xchg
sub
fisubl
test
nop
mov
stos
inc
fcomp
pop
and
fsubrs
adc
xor
xor
popf
dec
decl
xchg
mov
sahf
jmp
cli
sbb
stos
es
dec
xchg
leavew
jnp
mov
xchg
mov
aas
enter
repz
add
mov
mov
mov
cld
pop
sti
jp
mov
in
loopne
pushf
push
ret
fildll
ss
aas
inc
push
sarb
out
lds
mov
mov
add
fs
imul
push
dec
sub
mov
addr16
jb
test
mov
inc
xchg
aam
in
stos
insb
and
ja
push
rcr
movsl
out
mov
pop
mov
aam
add
mov
pop
adc
xchg
movsb
push
out
daa
arpl
iret
cli
rclb
mov
int
mov
in
test
stos
pop
inc
inc
clc
js
dec
in
cld
xchg
stos
xchg
fcoms
xchg
pop
mov
mov
adc
out
mov
bound
or
je
add
fmuls
fsubrp
push
jmp
jle
in
movsl
shll
aad
imul
mov
adc
cmp
mov
xchg
out
pop
sbb
jb
jne
sub
nop
jmp
cmp
jae
push
xor
stos
pop
jle
das
rcll
xchg
mov
stos
ss
not
or
mov
stos
xchg
leave
inc
or
xlat
sbb
push
lock
pop
mov
and
jne
cmp
inc
jnp
sar
sub
add
sbb
pop
mov
ss
cmp
sbb
jno
arpl
xchg
lea
jp
pusha
xor
jnp
test
mov
add
cli
adc
leave
stos
ficompl
xchg
xchg
sub
loope
and
test
mov
jne
mov
push
cmp
or
cs
xor
vpmacssdql
pusha
mov
adc
push
pushf
mov
mov
xor
mov
mov
shrd
shr
mov
mov
mov
shll
xorl
xor
mov
or
mov
mov
mov
or
mov
mov
cmp
jne
mov
cmp
je
mov
mov
mov
mov
lea
mov
mov
mov
mov
mov
shrd
mov
mov
xor
jmp
daa
into
dec
cli
sbb
sub
jae
jl
mov
sbb
adc
sbb
js
loopne
xor
in
jg
in
loopne
add
hlt
inc
mov
xchg
fdivs
mov
push
dec
adc
mov
lds
sub
jbe
and
add
xchg
push
xor
in
mov
fsubr
cmp
xor
icebp
arpl
jecxz
sahf
pop
enter
cmp
mov
rcl
or
lds
lea
mov
or
dec
sub
fbld
stos
cwtl
mov
shlb
je
and
jns
fsubrs
push
adc
lea
xchg
xchg
mov
jmp
push
loop
inc
push
daa
sbb
cmc
and
inc
out
loop
add
jle
daa
dec
addb
and
aad
mov
pushl
jns
orl
ja
adc
lods
adc
shll
dec
mov
rorl
lock
aam
in
jecxz
loop
lods
mov
stos
and
adc
mov
or
pop
out
pop
sbb
idivl
rcrl
xor
xor
faddl
xor
pop
ret
adc
lods
ficoml
insb
mov
cmpsb
es
aad
jnp
int
scas
sbb
ja
jmp
leave
mov
fdivp
fldt
pop
adc
daa
fcomps
fisubl
out
in
shrl
data16
xchg
sbb
and
aaa
adc
movsb
mov
shll
repnz
lods
add
roll
push
cmovae
rcl
test
inc
mov
rolb
leave
loopne
xor
scas
rorl
jae
push
lahf
cmp
ljmp
fisubrl
push
and
jge
mov
test
mov
movsb
call
cmp
jbe
and
movsb
pop
roll
inc
xor
mov
lods
mov
push
cmp
cmp
push
fcoml
adc
dec
jns
insl
push
mov
movsl
repnz
mov
testl
push
sub
mov
inc
ret
pop
mov
out
in
test
iret
loop
arpl
jmp
ja
mov
and
call
sub
adc
add
pop
mov
jne
fnstenv
mov
std
daa
clc
mov
addr16
shll
fcmovbe
xor
or
cmp
or
test
in
jle
mov
pop
repnz
pop
outsb
xor
imul
fcmovu
das
insb
sahf
xlat
lcall
popf
pop
cmp
sti
daa
xor
test
mov
sub
xor
aas
inc
fsubr
lcall
lret
xor
and
fsubrl
add
sbb
add
inc
inc
lret
dec
lret
inc
dec
and
mov
test
sbb
and
sbb
frstor
push
repnz
daa
jmp
hlt
clc
xchg
jno
and
stos
mov
lcall
xlat
add
jl
clc
insb
aam
scas
xchg
xor
sbb
cmpb
cmc
mov
and
movl
mov
or
or
stc
add
rorl
xchg
xlat
jo
xchg
pop
mov
xor
loope
pop
stos
dec
xchg
push
push
pop
cmp
leave
sbb
inc
sbb
or
jae
mov
into
inc
lret
push
mov
hlt
pop
aam
nop
fwait
xchg
daa
shll
cmp
in
repz
xor
mov
xor
pusha
sbb
adc
xor
repz
inc
xor
xchg
mov
ret
jbe
pusha
inc
rorl
scas
push
movsl
pop
leave
scas
fisubl
cmc
lea
jbe
mov
out
mov
jnp
aad
sbb
inc
xchg
push
std
xchg
lods
rclb
lea
mov
pop
xor
fistps
mov
icebp
ja
clc
mov
popa
stos
xchg
sub
xor
jbe
andb
scas
or
jecxz
incl
lods
push
cs
adc
sub
dec
sbb
xor
pop
test
pushf
ffree
and
add
sahf
pop
out
jno
inc
insl
imull
and
fldcw
xchg
lods
adc
adc
adc
mov
repnz
mov
mov
sub
dec
inc
outsl
hlt
sub
jmp
and
xchg
das
mov
stos
fwait
mov
ficomps
sub
outsb
cmp
dec
cltd
xlat
es
cmp
cmp
in
test
iret
sub
ljmp
push
sub
insb
pop
lds
mov
repz
dec
sbb
jno
cmpsl
mov
jecxz
cltd
divb
aaa
clc
xor
mov
mov
mov
jae
pop
rcrb
movsb
pop
push
mov
cmpsb
mov
jge
mov
lods
mov
lds
sub
inc
stos
cs
jg
or
sarl
mov
cwtl
pop
xchg
ds
je
hlt
xchg
aad
call
or
add
pop
out
jge
movsl
data16
push
call
mov
test
fsubr
mov
shrl
cwtl
insl
xchg
test
push
call
ss
jmp
mov
inc
sub
mov
mov
mov
dec
xlat
daa
sub
test
mov
jbe
sub
ljmp
and
xchg
int
adc
sub
cld
adcb
mov
or
inc
and
mov
jp
and
sbb
lds
xor
sub
and
sbb
repz
cmc
ds
mov
imul
push
adc
push
fmuls
fdivl
rorb
movsb
ret
rorl
shl
mov
mov
xor
mov
cmp
jne
mov
jmp
mov
int3
xchg
sbb
dec
fstpt
ljmp
and
sbb
xchg
nop
loopne
dec
int3
repnz
lahf
mov
mov
popf
mov
loop
jmp
mov
std
cltd
jp
cmp
mov
cs
dec
negl
jb
cmp
lds
push
in
outsb
xchg
out
mov
aad
or
cmp
stc
test
cmc
xchg
inc
test
jb
mov
scas
testb
dec
mov
iret
cwtl
lretw
lret
int
mov
je
or
mov
mov
out
inc
popf
cltd
mov
imul
or
mov
pop
xor
ret
cmpordps
xchg
mov
xchg
movsb
and
lret
xor
cmp
mov
sub
xchg
add
stos
or
mov
mov
imul
loopne
scas
imul
inc
inc
sub
sbb
cmp
sub
or
mov
or
sahf
push
or
fisubrl
mov
xor
dec
sub
ljmp
mov
leave
insb
mov
jmp
lods
stos
es
cwtl
xchg
lahf
pop
pop
ret
push
push
mov
shrb
jp
xchg
sbb
xchg
loop
test
ficoms
lods
or
icebp
fildll
lret
jae
xor
lea
pusha
sub
dec
sbb
cmc
call
pop
outsb
in
xchg
mov
sbb
fstp
pop
xor
cmp
cli
popf
push
mov
lcall
lahf
aad
ret
push
stc
sbb
inc
js
out
jmp
ret
and
ret
push
loopne
out
in
add
cmp
dec
jae
addr16
cmpsb
jnp
stc
or
xchg
repz
xor
hlt
rcl
adc
mov
pop
jp
addr16
stc
or
ljmp
imul
mov
rcl
xchg
jbe
popf
int3
sbb
lahf
sti
add
lcall
push
mov
dec
fldt
bound
mov
inc
das
inc
jecxz
dec
stc
push
sbb
inc
daa
and
xchg
push
pusha
sbbl
push
mov
inc
out
mov
xchg
mov
cld
mov
push
shr
xchg
jns
pop
mov
dec
popa
push
mov
clc
and
adc
gs
mov
sarl
outsl
lret
in
pushf
pop
mov
enter
adc
testb
mov
sbbb
pusha
mov
jne
and
dec
inc
sub
fwait
stos
insb
ret
negb
add
leave
fwait
jb
fldt
ficomps
or
sub
clc
pushf
sahf
cmp
jle
loope
inc
scas
shl
aad
aaa
paddq
sahf
xchg
push
mov
cmp
jne
mov
mov
mov
mov
xor
xor
mov
mov
shrd
shr
mov
mov
mov
mov
xor
or
mov
shl
xor
mov
mov
or
mov
push
pushl
push
push
call
mov
mov
shrd
shr
shr
xor
push
xor
mov
mov
mov
push
push
push
call
shld
mov
xor
or
mov
mov
shl
jmp
subl
pop
rclb
pop
jo
mov
sbb
into
imul
jnp
js
testb
cmpsb
das
xchg
addr16
pop
pop
jecxz
jbe
mov
mov
mov
iret
or
into
mov
dec
daa
inc
out
mov
jle
inc
jnp
mov
jmp
pop
xor
popa
pop
push
xor
xor
clc
data16
stos
add
mov
ja
icebp
pop
mov
loopne
add
or
lock
rorb
sbb
fcmovnb
add
pop
nop
push
test
dec
enter
loop
cs
and
cwtl
gs
aam
add
arpl
dec
xchg
sbb
inc
and
shrb
xor
sub
mov
inc
dec
jae
out
xor
and
jle
and
cmp
adc
adc
fldcw
dec
cmp
xchg
mov
jnp
lret
dec
insb
lcall
cmp
cmp
movsl
inc
xor
out
stos
push
test
frstor
jns
inc
daa
cmp
lods
sub
push
call
mov
call
sbb
test
mov
fsubs
pop
js
out
pushf
xchg
mov
loopne
cmp
dec
leave
pop
sbb
data16
movsl
sub
xchg
fidivrl
loope
mov
cmp
sub
and
aam
push
fstpt
sub
js
add
ja
sub
gs
ret
into
outsl
popa
cmpsb
sbb
mov
fidivrs
push
cmp
xchg
and
dec
out
lock
xor
push
clc
iret
mov
xchg
out
push
sub
popa
js
mov
out
in
pop
lea
mov
loopne
cmp
add
push
inc
mov
test
adc
push
cli
jbe
push
out
loopne
mov
icebp
addr16
xchg
pop
icebp
call
ljmp
shlb
jle
sti
or
mov
mov
movb
pop
enter
outsl
pop
rolb
hlt
ds
mov
mov
pop
lcall
mov
cltd
pop
sbb
fldt
or
cmc
mov
test
xchg
cltd
fsubs
mov
sbb
pusha
lods
arpl
movl
les
in
push
fldl
lcall
rorb
nop
cmp
add
xor
lret
cmp
and
rcr
andb
aas
push
je
jecxz
inc
fdivl
adc
inc
fidivrl
test
dec
xchg
mov
stc
xor
jmp
iret
xchg
stos
dec
inc
scas
cmpl
xor
pop
or
cmp
pop
incl
fstps
rcrl
pop
and
mov
xor
xor
xor
xor
mov
mov
jmp
mov
add
mov
mov
mov
mov
mov
mov
movzwl
cltd
shld
xor
mov
mov
shl
mov
mov
xor
mov
cmp
jmp
lock
or
dec
loopne
pop
ret
mov
sbb
and
sbb
loop
adc
lods
sub
lea
stos
loope
mov
sub
addr16
adc
fisttps
roll
rorb
divb
nop
cli
sbb
ret
inc
inc
add
into
mov
movsl
adc
adc
adc
outsl
push
insb
ljmp
out
xor
lods
cmp
inc
shrb
dec
sbb
lds
xor
add
pop
mov
shr
arpl
pop
gs
jb
outsl
outsl
jnp
shrl
add
cmp
push
ficoml
mov
test
call
adc
addr16
lds
hlt
test
lahf
cmp
sbb
addr16
mov
sti
adc
iret
aas
outsb
or
push
leave
aas
cmp
cmp
pinsrw
daa
dec
pop
ss
mov
clc
xchg
cmp
dec
add
iret
jne
notl
xor
lods
mov
cmp
xor
mov
insb
xor
adc
int3
dec
cltd
cmpl
aam
nop
xchg
ljmp
pop
andl
shlb
jle
adc
lret
addr16
out
popf
dec
add
and
mov
mov
aam
in
fwait
hlt
xchg
std
mov
xor
int
test
pushf
cmpsl
xor
cld
sub
adc
jge
pop
ds
xor
cld
aaa
and
stc
mov
dec
xchg
shr
enter
imul
addr16
in
fwait
cli
xlat
lds
and
nop
ret
popa
rorl
in
xor
push
push
mov
or
add
imul
sbb
inc
je
mov
jns
mov
mov
mov
and
std
insb
xchg
data16
or
jmp
rcll
imul
out
mov
mov
imul
dec
push
and
xor
jp
mov
xlat
bound
add
ljmp
pop
push
inc
test
enter
in
aaa
jmp
push
mov
mov
xchg
adc
movsl
jg
add
or
jecxz
jg
adc
mov
insb
jno
jle
dec
insl
pop
xor
adc
sbb
mov
mov
sbb
and
ficoml
and
roll
out
pop
fiaddl
test
push
push
cmp
cmp
jb
clc
mov
mov
popa
xchg
or
jbe
xchg
pusha
push
jmp
loopne
push
mov
int3
xlat
insb
rorb
jno
sbbl
xchg
sbbb
mov
es
aaa
mov
jg
jge
fistpl
pop
adc
xor
cmp
jne
mov
cmp
jne
movl
mov
movl
mov
movl
mov
movl
mov
mov
mov
shrd
shr
mov
jmp
fdivr
fists
ss
shlb
push
xchg
sbb
and
sbb
aam
je
jbe
xchg
les
mov
pushf
cltd
sub
push
push
xchg
subb
into
inc
xchg
inc
adc
iret
xchg
cli
mov
pop
cmp
cmp
mov
lods
pop
into
xchg
jle
adc
lock
lret
adc
int
subl
dec
notb
es
pop
das
or
mov
mov
ja
cli
lods
mov
je
jp
xchg
loopne
nop
jle
adcb
lret
int
sub
stos
jge
xlat
mov
sbb
les
dec
repnz
mov
sub
js
mov
mov
sahf
setno
cwtl
stos
push
and
sub
outsb
mov
insb
repnz
sbb
pop
mov
rolb
sub
xchg
fmuls
aas
stos
inc
loopne
dec
filds
jl
ja
sbb
popf
bound
lds
xchg
leave
cmp
push
jbe
movsl
inc
mov
insl
stos
cmc
fistpll
cmp
sbb
jbe
ds
inc
mov
sbb
add
movsb
mov
mov
in
lahf
pop
mov
enter
shlb
xlat
nop
cmp
xchg
inc
loope
or
push
test
cltd
incl
aas
pop
push
fsubr
cmp
sub
mov
xchg
and
push
punpckhdq
pop
xchg
inc
mov
xchg
mov
sti
popa
pop
ljmp
mov
rcll
out
jg
lret
in
push
inc
inc
inc
jmp
cli
loop
xchg
repnz
push
jnp
ja
insl
adc
cmc
fisubrl
loop
ljmp
orps
adc
adc
inc
iret
mov
shl
mov
mov
cli
sub
fistps
adc
dec
xchg
pop
xor
hlt
push
mov
ret
fidivrl
mov
mov
and
sti
sbb
lcall
jnp
xchg
push
dec
add
push
fcmovne
mov
dec
jo
icebp
rcr
fildl
push
mov
lcall
ret
pop
adc
add
jb
movsb
flds
js
adc
mov
fs
sbb
pop
jg
iret
add
cmc
nop
inc
mov
and
sub
out
mov
fs
rcl
or
xor
inc
add
cltd
cwtl
out
xor
lret
outsb
cmpsb
xor
push
mov
mov
mov
push
ja
add
inc
in
mov
and
or
cmp
inc
pop
pop
mov
mov
sahf
sub
push
dec
leave
cli
cld
mov
insl
push
mov
jmp
dec
inc
sbb
fstpl
popf
jbe
test
test
push
stc
lods
rolb
es
or
jmp
stos
stos
ret
inc
movsb
idivb
fucomip
nop
cld
mov
xor
shl
jmp
cmp
sbb
push
push
out
push
fistl
rclb
sbb
rclb
daa
vpmaxsw
inc
dec
cltd
insb
rcr
cmp
inc
out
pop
rclb
jb
mov
rcrb
or
and
xor
fwait
push
sbbb
dec
inc
cmc
or
sbb
lcall
lret
aad
aam
out
ljmp
sub
iret
push
cmc
pushf
and
repz
movsl
inc
pop
jae
xor
sub
jo
cwtl
iret
fmull
sub
mov
add
add
in
lahf
data16
jo
call
jmp
and
cmp
pop
jl
aaa
popf
mov
jo
js
bound
je
je
repz
mov
push
adc
jecxz
mov
aam
mov
call
mov
pop
jo
cmpb
pushf
lea
cs
shrl
xchg
inc
and
cmc
and
orb
stc
rclb
sbb
loop
jns
push
mov
jge
lret
call
imul
rcl
stos
cmp
dec
insb
sbb
stos
dec
ja
popa
leave
push
jb
fildll
jp
das
inc
push
sbb
pushf
jb
divl
cmp
orb
mov
adc
cmp
aad
insb
push
imul
out
bound
mov
hlt
xor
hlt
inc
nop
sbb
xlat
outsl
sbb
xor
adc
push
mov
leave
sub
sahf
mov
jecxz
rorl
stc
lods
adc
push
push
sbb
in
jp
clc
mov
test
xor
pop
ja
lahf
xchg
sbb
sbb
jbe
out
sarl
mov
sbb
push
scas
and
inc
add
add
fists
jp
loope
dec
out
xchg
lds
lock
push
and
addr16
loope
mov
sti
cmpb
cmp
adc
leave
fistl
or
pushf
aas
ja
jmp
mov
testb
out
xchg
addr16
sub
cmc
and
mov
outsb
jb
cmpsb
and
js
test
dec
xor
xchg
je
das
jge
and
xchg
decl
sub
xor
loop
lock
test
je
add
sbb
imul
repz
addb
push
fwait
xchg
std
cmp
mov
xchg
into
cmp
dec
add
cwtl
push
mov
in
mov
js
cmp
xchg
xor
mov
lret
pop
fwait
or
pop
sahf
sbb
mov
jg
addr16
cwtl
xchg
icebp
push
dec
xchg
in
in
pop
dec
imul
push
into
cli
lods
mov
aas
and
scas
std
xor
or
add
mov
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
mov
mov
xor
mov
jmp
push
sub
fldt
mov
mov
fmuls
sbb
pop
mov
fimuls
or
nop
mov
xlat
or
scas
push
dec
adc
insl
xor
test
mov
pop
jno
aam
test
mov
in
in
xorl
xchg
out
jae
bound
dec
outsl
imul
lahf
xchg
mov
lods
jne
gs
lahf
jmp
cmp
mov
sbbl
sbb
add
pop
scas
ds
mov
into
ja
fists
adc
pop
sub
ja
xor
mov
pop
jb
and
jge
stos
fcoms
sahf
cltd
add
sub
repz
xor
cmp
stc
cli
or
mov
enter
pop
setns
and
mov
insl
mov
add
jbe
fbstp
pop
popa
sti
adc
push
faddl
das
ja
movsb
sahf
enter
push
xchg
in
jmp
imul
int
mov
gs
push
lret
cmp
and
adc
enter
push
lret
lret
addr16
and
in
movsl
int
sbb
incl
push
dec
icebp
jbe
enter
fldz
adc
cld
or
je
das
sbb
add
aad
cld
loopne
ljmp
scas
jle
rcrb
sub
adc
mov
or
mov
jns
jbe
ss
loopne
ror
xchg
mov
outsb
aaa
pop
push
mulb
mov
clc
xchg
xchg
test
and
int3
xchg
pop
push
lds
push
mov
pop
test
mov
mov
add
mov
xchg
imul
int
mov
inc
arpl
lcall
xchg
cwtl
incl
inc
mov
pop
xchg
hlt
jo
out
out
popa
sbb
push
mov
mov
mov
and
aam
mov
clc
cld
jp
les
mov
scas
ds
es
sub
test
inc
popa
mov
jbe
sbb
nop
add
out
inc
popa
in
mov
outsl
cltd
lds
nop
es
aam
int3
mov
das
jbe
sbb
mov
in
ljmp
pop
xor
inc
inc
xor
int3
jns
mov
outsb
ret
cs
or
scas
jecxz
pop
jl
sbb
jmp
sbb
int
pop
icebp
pop
fwait
cmc
insl
leave
sub
orb
push
adc
mov
int3
icebp
push
das
jnp
sahf
int
push
insl
jno
xchg
cwtl
pop
mov
das
push
mov
sti
adc
cmp
jne
jbe
xor
adc
fstpl
leave
push
or
jecxz
cmp
adc
dec
cmp
dec
movsb
shrd
shr
mov
mov
xor
shl
xor
or
add
mov
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
mov
mov
jmp
imul
fs
leave
leave
jl
xchg
xlat
mov
and
sbb
cmc
adc
push
jecxz
jmp
adc
cmp
outsb
sub
mov
jae
mov
xor
mov
xchg
sbb
mov
test
xor
jo
pop
push
push
mov
lock
push
xchg
loopne
scas
xchg
scas
into
sbb
xor
push
jbe
sahf
jnp
sbb
mov
and
mov
lcall
mov
push
pop
lret
inc
xor
push
leave
and
cli
push
mov
out
je
cmpsb
push
lds
mov
jecxz
jbe
dec
cmc
dec
sbb
aaa
push
sub
jge
mov
add
inc
cld
mov
jg
or
mov
cmp
add
push
mov
jge
loopne
mov
fwait
adc
test
sbb
mov
xchg
arpl
jmp
loop
shll
xor
popf
ret
test
int3
or
lea
sub
xor
out
lock
test
cltd
push
push
adc
push
std
cmp
mov
mov
inc
roll
pop
movsb
pusha
addb
cltd
xor
cmpb
pushf
lret
sbb
sbb
xchg
jmp
mov
cmp
lcall
aaa
cmc
loope
adc
fisttps
ret
pop
dec
icebp
push
das
loope
jne
test
pop
in
sub
fistl
lods
and
jne
pop
insb
mov
movsl
jmp
jo
ds
mov
push
mov
pop
and
shll
push
leave
or
in
adc
adc
xor
xchg
pop
scas
pop
adc
sbb
mov
fdivl
fmuls
imul
mov
sbb
push
and
jo
inc
sbb
push
cmpsb
mov
in
pop
inc
sbb
pop
icebp
insb
ret
bound
imul
clc
pop
xor
inc
neg
rcll
push
push
or
cmp
je
fdivrs
arpl
pop
push
lahf
bound
fmul
or
scas
sbb
mov
and
outsl
sbb
jecxz
shlb
dec
and
int3
cmp
adc
in
xor
es
or
lahf
pop
lret
xchg
push
cmp
shlb
imulb
xchg
call
push
xchg
xor
pop
pop
sti
pop
add
mov
and
pop
lahf
lds
fnstsw
out
lahf
cmp
xchg
daa
jp
adcl
adc
cmp
cmp
lods
fs
in
lea
arpl
aad
adc
mov
inc
adc
repnz
add
xchg
cmp
les
mov
mov
cld
push
int
lds
pop
enter
jno
jecxz
jo
insl
cmpl
mov
lcall
mov
lods
enter
add
mov
or
add
shl
mov
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
mov
mov
add
mov
mov
shrd
shr
mov
mov
xor
xor
or
add
shl
mov
mov
shrd
xor
shr
mov
mov
xor
or
mov
or
shl
jmp
dec
sbb
jmp
dec
mov
push
jg
sbb
adc
sbb
fsubs
stos
adc
repnz
mov
mov
rcr
xchg
dec
lods
stos
and
lock
sbbl
pop
cmc
mov
aam
push
pop
mov
pushaw
fidivs
inc
jle
int3
gs
xchg
rcrb
ret
xor
stos
rolb
jmp
arpl
cmpsb
scas
push
adc
jo
insb
jno
loopne
aam
iret
sbb
cmp
stc
out
out
cmp
rcrl
cmp
mov
lea
or
cltd
cwtl
arpl
push
test
add
mov
sub
adc
dec
in
ja
push
imul
sbb
sti
push
push
sub
jo
insb
scas
mov
fiadds
aad
xor
dec
dec
mov
mov
js
mov
inc
jge
lahf
mov
add
orl
or
test
fiadds
cmp
jbe
icebp
lcall
jmp
cmp
fucom
lods
jl
xor
into
mov
mov
sbb
jle
mov
addr16
add
add
mov
lock
mov
out
push
cmp
fidivrl
mov
pop
pop
adc
and
pop
mov
xchg
jbe
bound
dec
jge
divl
sbb
mov
fsubrl
sub
adc
jle
xor
fmul
inc
leave
popa
imul
test
sbb
jbe
mov
fldenv
push
xchg
cmp
mov
adc
xlat
popf
jecxz
fucomip
loop
fucomi
add
shr
xchg
in
or
mov
gs
lcall
loopne
jmp
pushf
xor
js
jecxz
icebp
add
lods
movsl
lds
mov
pop
jb
mov
ds
arpl
aaa
push
sbb
xor
test
pop
mov
int
mul
clc
jno
dec
xor
decb
dec
cmpsb
shll
sub
cmpb
mov
mov
pop
mov
fiadds
insb
andl
out
push
xchg
in
xchg
xchg
jmp
pop
negl
cmp
shlb
mov
sbb
aam
xchg
mov
orl
xchg
pop
dec
data16
mov
inc
xchg
cmp
sbb
sbb
imul
pushf
jno
lret
cs
insl
adc
pop
out
push
loopne
mov
addps
lret
fsubp
pop
mov
fistps
xor
adc
inc
lret
lret
dec
mov
jmp
out
xlat
outsb
jg
mov
xor
fmull
push
xchg
sub
adc
mov
mov
push
sub
add
pop
cmp
enter
mov
mov
jnp
in
imul
add
cmp
ja
jns
xor
shrd
xor
or
mov
mov
mov
xor
xor
mov
mov
mov
shrd
shr
shl
jmp
mov
mov
sub
jle
or
sbb
adc
sbb
adc
xchg
push
fimuls
cmp
lods
pop
stc
mov
aad
push
outsb
popf
popa
out
gs
dec
push
cmp
sbb
dec
fiadds
jp
stos
add
leave
aam
sbb
je
adc
cmpsl
adc
jne
fstps
lret
push
aas
repz
test
fwait
lcall
inc
cmp
xor
jae
fistl
int3
daa
ret
jnp
mov
cmp
sub
pop
push
inc
mov
xchg
xchg
mov
lea
subl
inc
inc
fwait
dec
call
insl
movsb
adcb
hlt
mov
dec
sub
pop
mov
out
dec
push
sbb
fistps
sbb
cmc
cmp
push
insb
mov
std
dec
jae
xchg
loop
outsb
fwait
xchg
loop
repz
out
inc
std
pop
mov
in
inc
enter
xor
je
sub
aam
push
cmp
sub
aaa
cltd
mov
loopne
ds
sbb
fisttps
jp
xchg
out
pop
mov
fildl
xchg
movsl
mov
xchg
inc
cli
mov
xor
xor
lea
inc
hlt
inc
js
cli
sbb
and
je
out
inc
push
dec
cwtl
xchg
repnz
and
mov
scas
cmp
jmp
cmp
xchg
ja
arpl
pop
insb
popa
jl
stos
sbb
push
inc
inc
xor
adc
mov
xchg
mov
sahf
cmc
mul
data16
shlb
mov
stc
jecxz
inc
lcall
and
xchg
pop
int3
add
push
jg
loopne
loopew
ret
cmc
insl
in
mov
fmulp
cmp
subb
push
xchg
mov
mov
cmpsl
and
sahf
or
imul
pop
movsb
push
aam
dec
stos
arpl
stos
or
pusha
and
enter
add
int3
jne
stos
dec
xchg
mov
lods
pop
push
add
pop
leave
cmp
cltd
mov
icebp
in
mov
ss
dec
xchg
xchg
pop
xchg
outsb
sbb
pushf
or
ss
mov
mov
sbb
xor
jecxz
sbb
mov
mov
pop
out
lds
push
lahf
lds
fdivs
in
scas
dec
or
jne
es
sbb
stc
int
xor
rorb
pop
out
mov
jo
cmp
mov
xor
push
jb
and
or
xchg
jg
adc
push
js
mov
clc
add
div
jne
mov
int
xchg
lods
cmc
adc
cmp
cwtl
pop
mov
pop
fstps
mov
mov
maxps
pop
jl
jne
test
xor
adc
cmp
ljmp
pushf
arpl
lods
jno
mov
push
xchg
nop
mov
mov
xor
or
mov
shll
xor
mov
mov
mov
xor
or
shr
or
cmp
jne
cmp
jne
jmp
mov
jmp
loope
fidivs
insb
pop
pop
dec
xlat
mov
stc
jae
sbb
adc
sbb
mov
ror
hlt
sub
xor
lcall
and
push
cs
mov
xor
adc
mov
dec
inc
push
push
negb
jno
mov
pop
mov
inc
dec
js
mov
jae
xor
cmpl
mov
mov
jo
sbb
ds
dec
push
dec
scas
dec
mov
and
ret
adc
aad
mov
xchg
dec
sub
loop
xor
repz
into
mov
jp
fsub
iret
test
mov
cmp
call
xchg
xor
outsb
adc
mov
xor
xchg
or
and
mov
dec
insl
test
jecxz
out
add
lds
mov
ret
imulb
popf
push
adc
mov
and
sbb
inc
jnp
int3
mov
lret
jle
xor
mov
repnz
sbb
sub
insl
dec
clc
add
inc
adc
and
mov
jecxz
and
xchg
in
add
dec
pop
movsb
push
lock
add
leave
adc
xor
aam
loope
iret
pop
or
inc
add
scas
dec
xor
dec
pusha
lods
clc
cli
add
shrb
sbb
or
push
les
mov
inc
in
mov
add
mov
movsl
ljmp
xchg
mov
int
jecxz
xor
in
pop
adcl
sub
stos
add
push
sbb
in
test
xchg
inc
std
outsl
pop
gs
pop
popl
lds
jb
addr16
lods
icebp
sbb
lret
mov
sub
mov
pushf
scas
repnz
push
and
mov
add
push
xchg
icebp
jg
or
adc
and
fildl
sub
stc
inc
add
inc
fwait
testb
or
jecxz
ret
jle
lret
xor
pop
mov
fwait
shrl
and
popa
out
inc
jne
pop
xchg
inc
fisubrl
mov
push
jecxz
in
ds
add
nop
ja
leave
dec
and
adc
add
jmp
scas
out
sbb
dec
shl
insl
clc
pop
xor
cmp
rol
gs
lahf
test
lods
jae
test
sub
pop
cmp
pop
xchg
and
sub
sub
pop
mov
cmp
pop
or
cmc
aas
mov
idiv
jge
push
lcall
nop
lretw
and
shll
les
lds
hlt
pop
jb
insl
iret
mov
popf
adc
cmp
push
cmp
in
or
adc
fcomps
jno
aam
testl
lcall
cmp
pop
or
rcl
mov
scas
push
pop
std
mov
mov
mov
xor
xor
mov
mov
shrd
shr
mov
mov
mov
mov
xor
or
mov
shl
xor
mov
mov
or
mov
push
pushl
push
push
call
mov
mov
jmp
mov
pop
lcall
push
leave
jl
insl
sbb
and
sbb
in
loopne
inc
cld
xlat
adc
cwtl
pop
lods
jp
enter
out
sbb
xor
sahf
fwait
mov
push
int
push
xchg
movsl
movsb
mov
rol
push
xlat
xor
push
jge
popf
ficomps
clc
gs
mov
iret
in
and
mov
sub
popl
dec
add
xchg
jmp
mov
mov
les
lock
leave
inc
xor
outsb
sbb
sbb
or
fisttpll
int
adc
dec
sbb
sbb
and
push
mov
loop
sbb
lock
mov
mov
sti
test
and
cmp
xlat
insb
add
cmp
movsl
cmp
inc
pop
enter
jge
lret
lahf
sub
loopne
call
xchg
mov
push
adc
in
gs
xchg
jmp
shrb
int
bound
cld
xchg
and
or
cmp
pop
or
xchg
adc
or
nop
popf
xor
pop
or
outsb
push
rolb
jge
push
addr16
addr16
push
sbb
mov
mov
aad
adc
mov
out
xchg
gs
mov
imul
mov
mov
mov
in
push
gs
xlat
xor
fldt
in
lds
or
and
sahf
jb
jecxz
shlb
xor
shrb
push
lea
push
cmpsl
xchg
mov
or
cmc
add
movb
lret
inc
inc
cmc
and
inc
mov
scas
xor
pop
icebp
insb
sbb
call
pop
mov
stc
sbb
ss
and
pop
adc
inc
test
insl
xlat
divb
jp
and
popl
mov
mov
les
iret
and
mov
das
cmpsb
lret
enter
lahf
data16
pop
add
pop
out
xchg
addr16
fistpll
fsubs
das
xchg
mov
inc
lret
daa
and
enter
in
adc
pop
jnp
popf
pop
cmp
ja
push
add
test
mov
lret
paddsw
mov
push
ficompl
sbb
clc
push
shrl
or
sbb
pop
rorl
xor
jcxz
xor
mov
push
test
fcomps
je
lret
into
pop
imul
xchg
jb
roll
mov
scas
mov
cmp
out
mov
cmp
dec
outsl
ret
xchg
jo
xchg
ljmp
or
inc
xor
jo
and
add
int
xchg
pop
pop
gs
das
dec
mov
mov
divb
test
push
fnsave
mov
lods
enter
add
ljmp
and
push
sbb
push
add
sbb
adc
sbb
sarl
sar
pusha
xchg
cmpsl
push
cwtl
fildl
ds
popl
jb
adc
mov
dec
add
adc
sub
insb
pop
ss
out
pop
orb
mov
push
inc
xchg
and
sbbb
mov
and
mov
mov
fsubs
movsl
mov
mov
cmc
mov
adc
scas
insb
sub
fistpll
jmp
push
jge
pop
jmp
mov
hlt
bound
cmpsb
xchg
xlat
inc
mov
xchg
push
add
push
jge
lds
push
push
adc
cld
pop
mov
or
dec
pop
shll
jns
adc
jecxz
cltd
rorl
fnstcw
xchg
out
roll
ret
jns
push
cwtl
add
clc
movsl
pop
mov
cltd
and
mov
or
jnp
cmpsb
or
push
push
sub
adc
call
jge
lods
mov
inc
mov
stos
xor
inc
mov
sub
mov
imul
mov
fldl
cmp
pop
dec
aaa
jg
add
pop
fwait
push
insl
imul
cmp
sub
out
lea
lock
idiv
pop
ret
out
cmp
idiv
adc
nop
add
pop
iret
test
stos
arpl
cmp
sbb
mov
pop
xor
push
or
jno
xor
pop
or
mov
in
test
mov
add
or
sti
push
enter
lods
pop
push
fnsave
sub
loop
xchg
pop
popa
mov
and
clc
std
jae
add
dec
outsb
push
out
das
or
fidivrs
testl
jge
test
mov
jl
pop
in
push
jle
push
pop
jbe
inc
cmp
aam
inc
pop
inc
dec
scas
push
aaa
rcrl
mov
ds
lea
push
xor
pusha
aas
add
mov
sub
hlt
inc
mov
adc
inc
rclb
xor
scas
mov
inc
pusha
push
outsl
push
dec
dec
ret
push
or
push
mov
loope
aam
scas
sbb
inc
cli
aam
lea
add
std
test
inc
pop
xor
or
push
xchg
orl
es
sti
jo
jbe
cwtl
mov
and
ficoml
cmp
lret
or
mov
lcall
push
fbld
adc
sarl
sarb
cld
xor
inc
stos
aad
mov
test
insl
cs
out
or
fcompl
sub
movsb
xchg
and
pop
and
in
sub
rcr
cmpsb
testb
push
xor
mov
mov
mov
push
push
push
call
shld
shl
jmp
popf
xchg
dec
mulb
sbb
fdivs
adc
adc
sbb
adc
sbb
jb
sub
sbb
loope
insb
mov
mov
cmp
out
fistpll
les
inc
std
and
fisubrs
test
sbb
xchg
cwtl
iret
lret
shr
gs
or
loope
rorb
jns
xchg
pusha
cmp
rcrl
add
cmp
sti
sbb
leave
inc
add
stos
stc
inc
pop
mov
jecxz
arpl
pop
pop
pop
mov
and
mov
std
cmpb
jmp
jmp
lea
fmull
test
out
cmp
int
pop
push
clc
cli
xchg
iret
mov
mov
push
or
xor
xchg
cmp
fwait
xchg
stc
jne
sub
and
push
ljmp
cmp
xchg
dec
pushf
sbb
inc
xor
push
fsubr
clc
xchg
femms
or
mov
jb
loopne
push
cs
push
adc
cmp
lcall
sbb
mov
sub
dec
mov
add
cli
sub
insl
pusha
or
xchg
lret
jmp
int3
jo
in
sbb
pop
jne
fstpl
xchg
lcall
and
mov
pop
pop
arpl
xor
mov
adc
incb
cmp
pusha
lcall
movsl
adc
jns
jo
mov
scas
in
sub
loop
pop
sarb
push
jg
add
out
mov
sti
in
xchg
fcomps
push
lea
jnp
test
mov
hlt
inc
lret
jbe
les
pushf
imul
xchg
testb
test
push
inc
and
les
iret
mov
fmuls
add
int
mov
cld
mov
iret
mov
fists
arpl
lods
push
add
mov
mov
pop
imulb
sbb
mov
or
clc
mov
adc
dec
aas
jp
out
pop
cmpsl
dec
cmc
push
je
decb
add
lods
push
mov
cli
push
sbb
push
dec
adc
pop
jmp
daa
addr16
lds
shll
dec
sub
push
add
sub
inc
pop
mov
sti
jge
fldcw
jns
mov
dec
movsb
xchg
push
outsl
mov
std
fucomp
jae
jge
pop
ss
inc
mov
and
add
in
iret
fisubrl
outsl
scas
movl
jp
out
scas
and
mov
cmp
push
xchg
fcoml
pop
dec
jne
fwait
jge
or
aad
cmpsb
ret
sti
xor
sub
movsl
lahf
push
mov
aam
icebp
das
jae
test
and
and
cld
sbb
ja
pop
pusha
shlb
fcompl
push
push
and
mov
aas
ret
mov
cmpsb
in
push
loop
and
fwait
inc
xor
fidivrs
push
mov
lcall
adc
rorb
xor
xor
mov
mov
jmp
xlat
cmp
jge
jle
rcrl
and
sbb
sbb
scas
or
inc
cmpsb
aam
adc
adc
mov
pop
movsl
pop
jecxz
pop
cmp
rolb
or
sarb
jle
rorb
popf
pop
out
jp
jge
jae
and
jecxz
inc
xchg
jmp
jb
mov
insl
subb
sub
mov
xchg
ret
inc
lahf
sub
daa
xor
nop
fcomps
adc
sub
pusha
jecxz
gs
insb
sbb
mov
mov
pushl
icebp
jecxz
pop
adc
sub
inc
add
jb
mov
dec
or
jl
adc
mov
cli
lret
fdiv
mov
or
sub
sbb
adc
jo
fcoms
cwtl
adc
clc
mov
and
mov
jmp
jle
pop
push
adc
xchg
fisubrs
shl
std
xchg
xlat
loop
inc
sbb
xchg
and
pop
pop
jno
ss
int3
cwtl
pop
enter
jmp
ja
repnz
mov
call
adc
push
scas
fnclex
test
std
mov
test
in
push
test
aam
or
push
pop
lock
enter
ret
adc
ss
shll
cltd
imul
push
mov
jns
insb
ret
cmp
or
cli
mov
shrb
je
loop
cwtl
sbb
adc
jnp
add
ret
push
cmpsl
inc
into
movsb
add
mov
push
movsl
fdivs
mov
aam
xchg
dec
divl
xor
inc
push
aad
in
sub
ja
into
fdivs
pop
mov
add
ret
mov
xor
jne
leave
push
add
cmpsb
roll
js
mov
cs
jne
popa
arpl
adc
imul
and
aam
pop
add
inc
arpl
fstps
xchg
stc
mov
fdivp
cmc
mov
pop
dec
shll
enter
ja
mov
inc
popf
lret
clc
add
iret
int
push
adc
mov
push
sub
shlb
add
clc
pop
shrl
ljmp
cmp
jne
mov
adc
dec
iret
divb
xor
push
jbe
fldt
addr16
daa
aam
add
or
dec
lods
dec
enter
data16
jp
addl
dec
cmpsb
mov
pop
mov
mov
inc
pusha
gs
mov
sbb
xorb
dec
mov
fdivrs
cld
dec
repz
and
pop
adc
movsl
xor
in
stos
mov
mov
les
and
mov
pusha
xor
fbstp
test
stc
xchg
xchg
bound
cltd
mov
std
or
std
mov
pop
pusha
sbb
jns
daa
mov
mov
mov
xor
xor
shrd
shr
mov
mov
mov
mov
xor
or
mov
mov
mov
xor
xor
shl
mov
mov
mov
shrd
xor
or
mov
mov
mov
mov
shl
xor
or
shr
xor
or
cmp
jne
cmp
je
pushl
pushl
jmp
fwait
ror
dec
mov
scas
in
mov
and
sbb
adc
sbb
into
es
in
adc
mov
subl
mov
lea
das
sahf
je
and
xlat
cmp
xchg
xchg
insl
xchg
jp
push
call
jbe
in
xchg
loop
pop
push
gs
inc
or
jg
fs
scas
inc
cld
inc
mov
sub
push
in
jl
addb
ret
cmp
shll
or
inc
lret
xchg
std
or
lret
xchg
lock
sub
add
mov
sub
dec
xchg
in
mov
cmp
mov
inc
fiaddl
xor
pop
sti
adc
cmp
les
push
pop
and
cmp
rclb
sbbb
ror
sub
adc
out
shlb
pop
fldt
jne
add
jge
sub
xchg
fdivr
adc
mov
int
aas
ret
rolb
adc
orb
sahf
fmull
or
rclb
repz
lods
movl
xchg
into
bound
inc
std
xor
mov
imul
in
loop
mov
shlb
pop
jp
cmp
mov
data16
sub
mov
lods
pop
sub
sbb
lcall
loope
dec
sbb
push
mov
popf
bound
in
push
xor
lcall
pop
hlt
pop
rcr
mov
imul
lea
enter
ret
inc
cmp
sub
fsubs
xchg
lret
stc
add
sub
inc
cwtl
push
cwtl
add
pop
jg
jg
or
bound
das
clc
dec
dec
sbb
das
fisttps
popa
mov
add
mov
mov
insb
pop
arpl
cmp
mov
sub
ficoms
or
mov
add
cmpsb
notl
xchg
mov
pop
std
sarl
pop
pop
mov
inc
sub
out
sub
mov
dec
mov
xor
std
mov
xor
pop
insb
popa
or
fwait
add
bound
mov
stc
sub
pop
stos
data16
push
out
mov
in
ds
pop
int
fs
pop
test
pop
dec
cld
sar
mov
loope
pop
cli
leave
int
sub
cld
mov
loop
xor
inc
cmp
xor
je
and
iret
mov
iret
decl
lea
ljmp
mov
int
imull
popa
jecxz
fidivrl
mov
jae,pn
inc
shrb
push
cmp
aas
gs
data16
stos
fiaddl
pop
pop
rcl
inc
repnz
call
ror
xchg
jo
cwtl
incl
sbb
jle
mov
jp
roll
push
mov
and
pushl
push
push
call
jmp
mov
dec
jb
insl
fnstcw
dec
sbb
and
sbb
and
aaa
xchg
cmp
adcb
aaa
mov
aas
mov
and
dec
dec
mov
sbb
sub
sub
jnp
cwtl
cmpsb
xchg
mov
inc
pop
mov
movsb
push
in
cmp
pop
inc
fsts
jo
jns
pop
rep
jge
loopnew
or
mov
aas
cmp
mov
das
pusha
xchg
or
cmp
xchg
js
lea
dec
jle
adc
adc
mov
push
sub
inc
pop
inc
addl
sarb
daa
fs
mov
mov
push
pop
mov
xchg
in
push
shlb
cmp
adc
stos
ljmp
cmp
push
icebp
inc
mov
pop
push
and
jmp
add
stos
loop
popa
test
fs
sbb
or
jl
ret
and
mov
adc
movsl
push
jmp
cmc
ds
ficoms
mov
fwait
push
repz
and
imul
push
test
add
pop
adc
repnz
insb
sub
fnstsw
lea
mov
push
stc
inc
xchg
adc
xchg
movsl
inc
andl
inc
or
mov
nop
lods
popa
and
cld
pop
loopne
or
shlb
test
in
lods
push
mov
in
inc
sbbb
dec
and
shlb
or
outsb
ss
adc
adc
out
adc
in
and
iret
jl
icebp
jbe
cltd
dec
daa
leave
cmc
shr
hlt
cli
scas
ficomps
ja
xchg
data16
and
or
sub
mov
and
jnp
imul
xchg
std
push
adcl
xor
out
pusha
sub
adc
ret
aam
push
decb
pusha
imul
loop
nop
or
adc
pop
addr16
pop
out
or
or
push
and
test
mov
cmp
aaa
ret
imul
jbe
sahf
pop
pop
and
cmpl
sub
stc
and
ret
cld
cld
bound
test
sbb
push
out
fwait
inc
and
ds
jno
mov
dec
out
mov
lahf
fcmovne
mov
test
pop
ja
std
push
jp
dec
mov
rol
pusha
sbbl
aas
cmp
aaa
loope
push
addl
mov
or
cmp
psubusb
testb
mov
notl
xorl
sbb
xor
pushf
fs
mov
pop
adc
jl
jne
inc
mov
sti
es
jp
icebp
imul
mov
pop
leave
ret
movl
cmp
movl
jae
movl
cmp
movl
jae
sbbl
shrd
movl
shr
ret
mov
xorl
xor
and
shr
ret
xor
xor
ret
push
mov
sub
sub
movl
mov
cmpl
movzbl
mov
movzbl
mov
jmp
mov
mov
jne
pushl
pushl
pushl
push
call
mov
and
xorl
add
not
sbb
adc
mov
movl
mov
movl
cmpl
mov
notl
mov
jmp
mov
mov
jbe
pushl
pushl
push
push
push
pushl
push
call
and
movzwl
add
not
mov
adc
andl
add
mov
sbb
movl
movl
push
movzwl
and
movl
cmpl
movl
mov
movzbl
jmp
movl
movl
jge
push
push
pushl
push
push
call
sbb
incl
xorl
add
movzwl
add
add
movl
xor
add
and
push
or
movl
cmpl
not
mov
jmp
movl
mov
jle
pushl
call
mov
mov
adc
not
sub
sbb
or
incl
mov
cmpl
not
mov
mov
not
jmp
movl
movl
jae
push
push
push
call
add
sub
mov
xor
sbb
neg
mov
push
push
sbbl
push
orl
call
jmp
inc
dec
cmpsb
movsb
lcall
mov
sbb
sbb
adc
sbb
sarb
dec
inc
xlat
popa
jnp
loope
movsl
mov
adc
ret
sarb
in
sub
in
lahf
inc
push
scas
xchg
lods
sub
out
rcl
mov
lods
fsubrl
mov
das
rcrb
sub
cmpsl
add
pop
inc
jo
inc
or
xchg
dec
rcr
jo
mov
mov
ret
not
icebp
sbb
data16
dec
xor
cmp
je
sbb
jbe
jno
and
xlat
scas
popf
xchg
inc
ret
repz
jne
in
and
sub
test
cmp
sbb
mov
hlt
xchg
mov
dec
rorl
adc
stos
lcall
stos
stos
out
push
push
lea
leave
fildll
stos
xorb
pushf
xchg
xchg
sbb
lock
mov
aaa
mov
std
jno
mov
pop
enter
mov
push
ds
fistps
insb
inc
fnstcw
test
jbe
pop
outsb
lea
pop
sub
mov
dec
test
rolb
les
inc
dec
add
adc
pusha
stc
dec
xchg
xchg
push
or
adc
decl
cli
leave
or
and
cld
push
ss
push
or
sbb
jbe
icebp
lock
call
je
push
pop
fisttpl
xor
sub
faddl
sub
and
inc
jno
dec
add
dec
push
dec
loope
loope
mov
mov
and
in
lcall
jo
addb
mov
cltd
and
clc
hlt
cmp
adc
iret
cmpsl
bound
ret
mov
mov
sub
popf
inc
jnp
in
pop
add
push
adcb
or
shrl
sbb
out
cmpsl
iret
movsl
ljmp
insl
lods
adc
mov
sub
jl
mov
inc
add
xchg
retw
js
bound
xchg
movsl
sbb
push
aam
fnsave
sub
andl
hlt
adcl
sub
movb
xor
lods
bsf
daa
clc
cmp
inc
outsl
enter
jne
loope
adc
pop
outsb
sarl
fisttpl
enter
daa
mov
pop
mov
fstpl
mov
cmpsl
cmp
pop
xor
mov
and
inc
push
ja
push
mov
sbb
xlat
aaa
jmp
cmpsl
iret
cmp
outsl
in
movsb
inc
xchg
pop
out
das
ffreep
push
push
mov
bound
cmpsl
or
xor
ret
test
and
sbb
cmp
push
mov
sbb
push
pop
xchg
xchg
mov
fs
icebp
pop
das
js
dec
sti
sbb
icebp
out
xchg
sbb
test
loop
cs
xchg
mov
test
es
jp
mov
aas
mov
mov
push
orl
or
push
addl
or
sbbl
xor
xor
push
push
negl
call
mov
cmpl
not
movzwl
notl
jmp
movl
jb
push
pushl
pushl
call
adc
movzwl
or
xor
add
sbb
xor
mov
or
xor
neg
sbbl
mov
adcl
push
adcl
push
movl
push
push
decl
call
cmpl
mov
mov
jmp
movl
jae
pushl
call
sub
subl
xor
sbbl
sub
or
xorl
jmp
mov
sbb
sbb
sub
cmpxchg
jl
inc
sbb
add
sbb
cmpsb
or
fcoml
or
loop
pushf
outsl
insb
inc
es
loopne
push
das
pusha
sbb
loope
or
rep
mov
mov
or
xchg
push
stc
xchg
pop
push
xchg
popa
es
sbbb
movsl
inc
sub
or
push
sbb
pushf
ja
js
dec
int3
inc
mov
and
outsl
cli
andl
popa
push
pusha
in
shrb
xor
mov
mov
pop
daa
inc
add
aaa
mov
stc
mov
or
xorb
repz
push
test
mov
into
popf
bound
aas
rolb
imul
sub
add
mov
push
scas
movsl
daa
jge,pn
push
jns
test
sub
daa
dec
lods
xchg
aaa
and
jg
std
mov
jae
add
push
test
je
test
ds
in
dec
and
adc
je
mov
notb
scas
clc
add
push
aam
iret
cmp
jecxz
pop
les
adc
xor
lock
mov
inc
dec
jb
cmp
pop
test
xor
imul
sbb
cmc
xor
in
sar
dec
lret
pop
sbb
insl
out
mov
sbb
jecxz
or
bound
pop
xchg
sub
cmp
aas
loop
loopne
int
mov
lock
and
pop
push
xchg
mov
popl
shrl
dec
jae
dec
inc
lds
mov
sub
xor
and
mov
mov
popa
adc
std
add
mov
hlt
xor
inc
push
pop
mov
inc
mov
test
mov
mov
sarl
mov
sub
pop
mov
rcrb
sub
fsubrp
insb
and
fdivrs
push
into
lods
fisubl
andl
sub
arpl
shrl
adc
ret
in
lsl
lds
rorb
in
aam
cli
loope
inc
xchg
insl
inc
aam
test
jns
jo
or
ds
jnp
shll
test
push
dec
xor
in
cltd
lds
fstp
scas
push
push
adc
dec
stos
xlat
loop
jns
ljmp
or
push
sub
mov
jb
daa
sbb
mov
push
push
cmp
sbb
sub
cmpsb
icebp
xor
cli
dec
popa
sti
ja,pn
pop
push
lret
dec
ljmp
aaa
mov
adc
dec
pop
xor
int3
sub
rcrb
shlb
pop
movl
fsubl
add
fists
cmp
pop
fnstsw
dec
pop
mov
clc
sub
or
outsl
push
iret
mov
mov
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
add
adc
or
mov
or
mov
or
mov
or
mov
or
or
jmp
add
pop
mov
adcl
add
sbb
pop
cli
sub
lea
ljmp
push
mov
jl
mov
int
sub
mov
scas
sbb
push
add
ljmp
xor
xor
push
push
lods
mov
rol
jb
sbb
insb
insb
jno
pop
repz
dec
jnp
inc
dec
xlat
xchg
and
in
imulb
aad
ffree
ret
jecxz
and
mov
add
pop
and
ljmp
and
int
daa
cmpsb
ds
mov
add
insl
stc
repnz
xchg
fildll
andl
sbb
push
push
cwtl
or
jae
cmc
lcall
ljmp
je
aaa
popa
cltd
xor
out
cwtl
pop
dec
jle
psraw
xor
push
sub
sahf
sub
daa
insl
in
test
outsl
or
jns
dec
leave
in
pop
push
add
xchg
enter
ret
jae
pop
dec
mov
push
and
into
fs
lds
xchg
xor
stos
pop
mov
in
and
xor
sub
jbe
dec
pop
mov
push
lods
int
mov
imul
add
and
inc
dec
dec
out
add
push
sub
add
jg
mov
jge
lock
cmp
pop
out
mov
std
imul
popa
cmpsb
xchg
sub
imul
out
cmc
jge
mov
fcmovnu
xchg
das
sbb
dec
push
and
lods
fwait
sbb
aaa
cltd
sti
into
cmp
shlb
mov
jne
or
mov
popa
jae
shlb
testl
hlt
dec
repz
jbe
and
xor
mov
lret
xchg
in
test
add
out
inc
push
inc
add
push
aaa
or
mov
jmp
mov
add
aad
sub
pop
scas
lods
fsin
mov
pop
and
jnp
aaa
xchg
sbb
push
xlat
sbb
add
incl
repnz
mov
imul
out
out
fidivl
sub
lret
adc
mov
mov
bswap
push
mov
push
sub
in
jnp
jo
ja
fimull
insb
jmp
rcr
xor
pop
jle
ljmp
fs
lods
push
outsl
push
cmp
jl
aaa
leave
sub
xchg
pshufw
xchg
lods
sub
jns
rcrb
cmp
stos
cwtl
add
and
out
sub
pop
jb
mov
mov
mov
inc
mov
push
jecxz
push
test
xlat
lret
fsub
pop
aaa
xor
ds
cld
hlt
mov
cmpsb
xorl
or
push
push
insb
xor
sub
xor
push
cmpsb
push
cld
inc
sbb
mov
loop
out
ret
mov
popa
sub
xor
repz
and
lret
cmp
jne
cmp
je
movl
movl
mov
mov
xor
xor
and
jmp
xor
jne
insb
sbb
push
out
int3
or
cwtl
out
mov
add
sbb
sbb
ja
ss
stc
xchg
inc
addb
fnstcw
mov
shr
or
push
sbb
inc
fcoml
jbe
sarl
or
jo
adc
popf
push
xor
fisubrl
inc
test
jle
add
rcrl
jl
mov
push
add
icebp
inc
bound
cmp
or
cmpsl
ja
sbbl
filds
call
mov
mov
push
mov
cmpsb
es
loope
aam
test
mov
sahf
cmp
dec
pop
andl
mov
cltd
iret
imul
pop
mov
fwait
push
pop
sti
jb
and
sbb
mov
cmp
cmp
pop
mov
or
fiadds
xchg
scas
out
jle
jbe
mov
test
stos
mov
aas
scas
movsb
sbb
pushf
mov
sub
in
outsl
loopne
mov
or
shlb
mov
scas
xchg
jp
int
popa
dec
pushf
mov
je
dec
testb
pop
fstpt
push
add
enter
xor
mov
jb
mov
adc
fsubrp
xchg
movsl
movsb
push
stos
push
xor
dec
or
adc
insl
inc
or
xchg
xor
sub
cmp
push
mov
sahf
sbb
inc
stos
out
push
sbb
fadd
hlt
cmpsb
dec
fstps
sbb
fildl
push
sbb
mov
xor
out
mov
and
lret
out
pop
push
shlb
mov
dec
cwtl
sbb
inc
test
idivb
out
mov
ret
push
lret
test
pop
in
lcall
test
inc
inc
imul
sub
rcl
lods
inc
out
ret
scas
cmpsb
icebp
adc
dec
inc
mov
jae
in
sub
aad
add
and
int
lods
add
lock
pop
inc
das
push
jle
xchg
push
sbb
mov
and
jp
outsl
sub
xchg
mov
lea
cmpsl
xlat
in
inc
xor
push
add
jo
shll
mov
mov
adc
rcrb
inc
inc
mov
lea
sbb
cmpsl
cmp
loope
mov
icebp
pop
fbld
or
insl
pop
mov
das
icebp
mov
daa
pop
pop
popf
bound
lret
repnz
jb
inc
das
daa
jg
adc
fstpt
loop
inc
mov
pop
es
sbb
je
jp
cmp
std
cltd
sub
shl
pop
or
mov
cmpsb
push
fisubl
cmp
dec
call
sub
and
call
mov
add
mov
lcall
cmpsl
adc
lock
pusha
xchg
ror
mov
inc
bound
add
hlt
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
add
mov
adc
mov
add
adc
xor
xor
add
mov
adc
mov
cmp
jne
cmp
je
movl
movl
movl
push
movl
mov
mov
jmp
in
mov
sub
push
test
sbb
adc
sbb
cs
loope
cmp
lods
loopne
lahf
aas
stos
ret
add
sub
stos
pop
mov
or
push
testl
outsb
jle
xor
cld
jmp
pop
iret
dec
xor
or
mull
lret
fistps
xor
xchg
mov
outsb
push
mov
mov
push
inc
push
pop
addr16
scas
dec
xchg
testb
cli
adc
repnz
out
stos
sbbl
scas
iret
cmp
xchg
loope
popa
sbb
adc
mov
out
out
movsb
loope
lea
jmp
cmp
ret
repnz
push
cli
xchg
aad
xor
imul
aad
pop
xor
cmc
int
fmull
loope
fsubl
push
dec
rorl
sbb
inc
adc
sbb
aas
fisttpll
jne
sbb
out
into
lret
pop
sahf
aam
int3
mov
add
cwtl
lds
faddp
fildll
je
sti
push
rcr
and
fists
stos
xchg
sahf
enter
xor
adc
adc
cmp
dec
and
shrb
pop
andl
inc
aas
jns
andl
daa
daa
xchg
movsl
xor
cld
addr16
je
decb
arpl
sbb
daa
add
pop
loopne
rorl
loopne
jle
icebp
pop
sbb
add
icebp
jg
push
xchg
mov
mov
scas
cld
and
lock
inc
dec
xchg
sbb
cs
jns
fs
pop
mov
rcrl
jg
inc
dec
call
cmp
mov
enter
test
dec
sbb
out
shlb
or
scas
inc
outsb
mov
or
fcomi
dec
sub
addr16
ljmp
hlt
sub
lahf
inc
push
pop
push
movsl
jecxz
movsb
sub
jmp
adc
cmpsb
rorb
mov
fidivrl
aaa
push
int
in
int
mov
jg
pop
pop
inc
sti
xor
sti
cld
insb
ret
jo
push
out
out
lock
js
adc
jne
sub
push
ja
mov
hlt
test
mov
mov
int3
gs
pop
xchg
jecxz
dec
frstor
js
daa
mov
inc
ret
jnp
test
addb
nop
aam
icebp
test
dec
gs
sub
push
sub
pop
sub
xchg
lret
cltd
loope
adc
or
or
adc
fadd
in
dec
decb
push
jl
test
jge
jmp
int3
popa
mov
push
inc
lret
andb
and
cmp
clc
cmp
das
hlt
cltd
ss
lahf
mov
repnz
sbb
bound
sub
stos
sub
mov
jge
pop
outsl
push
push
sub
fs
mov
jle
jge
scas
pushf
sub
push
pop
xor
xor
sbbb
add
sub
add
add
push
sbb
ja
les
stos
mov
adc
sbb
sbb
sub
lods
or
fs
data16
jns
mov
hlt
ja
lret
jge
add
jecxz
dec
aaa
dec
das
out
push
cs
jmp
shr
dec
cmp
clc
shlb
mov
dec
jle
daa
jb
repnz
jne
inc
cmpsl
rol
sbb
rcll
aas
mov
fdivl
adc
adcb
in
add
inc
jo
add
testb
inc
inc
std
cli
push
xadd
mov
stos
cmc
dec
cld
aam
jle
mov
mov
andnps
neg
push
adc
imul
lcall
movsb
add
rorl
sub
jno
data16
fcoml
adc
clc
adc
and
daa
jo
xorl
std
xchg
sahf
and
into
movups
mov
daa
arpl
push
xchg
pop
dec
adc
mov
out
repnz
xor
cmp
mov
cs
aam
stc
inc
jmp
mov
test
mov
jmp
pushf
mov
scas
test
pop
cmc
inc
gs
cltd
push
xchg
imul
test
adc
arpl
xorb
inc
pop
pop
push
mov
lcall
cld
pop
jmp
mov
mov
xchg
cwtl
fnsave
aaa
das
adc
lds
mov
and
addr16
push
xchg
test
outsb
adc
test
mov
cmp
or
stc
ja
sub
pop
outsl
out
add
xchg
pop
mov
fucomip
pop
pop
push
mov
lods
repnz
lret
push
cltd
data16
dec
out
push
fs
ljmp
scas
push
outsl
xchg
lods
mov
jae
and
aam
push
lret
xchg
xchg
ret
in
sahf
clc
push
clc
mov
pop
push
adc
jl
into
fimuls
sub
and
insl
jnp
into
subb
pop
mov
add
xlat
cmp
dec
mov
pop
adc
fildll
inc
push
into
dec
or
lods
stc
sub
jbe
xchg
mov
ficoms
test
pop
pop
dec
jle
sbb
sbb
xor
jmp
xor
lods
push
xor
fstps
sub
ret
lret
cltd
in
dec
fcmovnu
testb
jle
adc
div
mov
mov
popf
push
fistl
movsb
mov
jg
push
fmuls
cmc
add
stos
add
pusha
dec
fisttpl
sub
fcoms
add
fwait
cmp
push
in
or
sub
dec
cmp
neg
roll
divl
stos
aad
popf
mov
test
icebp
mov
mov
push
cmp
mov
insl
in
ss
sub
sarb
dec
push
cmpsb
into
shrl
test
adc
xor
push
repnz
sub
call
mov
mov
push
push
and
and
push
jmp
addr16
bound
mov
shlb
sbb
adc
sbb
inc
loope
lds
xchg
scas
xchg
sub
jbe
ljmp
push
movsl
loop
jae
cmp
int3
or
imul
stos
andb
sub
mov
scas
xchg
mov
cmp
mov
outsl
jecxz
add
adc
clc
or
mov
fbstp
fdivl
xor
loopne
fstl
inc
xor
mov
xchg
mov
ljmp
xor
mov
cmp
mov
sub
mov
mov
or
test
stc
mov
cmp
xchg
data16
xchg
ret
cmp
jno
mov
frstor
cs
or
mov
test
aam
mov
xlat
pop
cmc
and
push
jmp
mov
into
sbbb
adc
gs
add
lock
mov
popf
sti
lahf
in
bound
mov
jns
hlt
mov
enter
fisttps
xor
ja
in
inc
pushf
mov
cmp
nop
outsl
add
cmc
js
or
in
repnz
mov
addb
cmp
out
dec
pushf
push
stc
adc
fildll
int3
and
stos
lret
push
rcl
inc
push
push
or
sub
xchg
pop
lret
fists
sbb
repnz
push
test
imul
stos
bound
aam
xor
int
dec
dec
cmp
test
adc
repnz
ss
ret
fnstsw
mov
or
and
or
seto
inc
mov
xor
inc
sbb
in
in
mov
hlt
test
push
adc
out
xchg
aam
loope
cmp
pop
jb
fdivs
mov
jecxz
sub
mov
or
adc
pusha
lods
sbb
enter
pusha
in
xchg
rcll
cmpsb
es
sbb
mov
mov
pop
xchg
adc
dec
cmpsb
popa
cld
mov
aas
rolb
dec
in
xchg
lods
pop
mov
inc
mov
xor
inc
or
sti
sti
jb
jno
pop
dec
mov
lret
shlb
inc
int3
imul
loope
popf
outsl
clc
push
mov
cmc
jbe
adc
pop
jnp
jmp
cmpsb
divb
movsb
outsl
movsb
sub
mov
imull
inc
and
inc
arpl
and
lret
in
into
xchg
push
sbb
std
aam
out
pop
lods
pop
sbb
xor
fucomi
js
flds
in
lods
repz
dec
sbb
std
mov
pop
mov
cld
sub
sbb
ret
xor
jmp
push
fstpl
mov
add
stos
push
js
push
mov
inc
mov
call
xor
xor
mov
mov
mov
cmp
jne
mov
mov
mov
mov
shrd
shl
mov
mov
shr
xor
mov
xor
or
mov
mov
jmp
rcr
sub
sbb
loope
scas
mov
mov
sbb
add
sbb
enter
jmp
cmpb
lcall
addr16
adcb
mov
testl
nop
clc
push
mov
dec
iret
adc
sbbl
dec
push
repz
movsb
jmp
sub
mov
xchg
nop
xchg
ret
addb
and
jb
pop
in
push
sub
mov
lret
mov
inc
in
repz
enter
clc
fstpl
stos
xor
pushl
ds
sub
outsl
or
xlat
push
outsl
daa
mov
repz
andb
mov
push
and
xchg
adc
mov
mov
sub
mov
popa
pushf
mov
mulps
pop
sbb
daa
rclb
lods
sti
idivb
or
shll
cwtl
cmc
push
pushf
lea
or
pop
push
sub
loope
mov
lock
xchg
inc
sub
iret
mov
mov
daa
shrl
jp
shrb
inc
pop
loop
sub
arpl
jecxz
mov
cmc
in
fbstp
frstor
push
insl
in
mov
and
mov
dec
jbe
rcrl
iret
jmp
sbb
fnstsw
mov
push
faddp
mov
push
fsubrs
addb
aaa
scas
xchg
sub
in
pop
add
movsb
divb
add
stos
dec
cmp
xor
mov
pop
inc
xorl
pushf
test
or
inc
dec
push
imul
jecxz
sbb
cltd
cmpsb
push
enter
lea
jo
sahf
inc
stc
pop
mov
mov
test
lods
sti
push
pop
sub
shl
out
imul
mov
push
into
sbb
jmp
mov
sbb
mov
mov
nop
pop
fldt
inc
out
inc
je
stos
test
or
mov
sar
pop
cmp
call
into
test
leave
pushf
jl
dec
test
cld
mov
in
out
loope
mov
test
dec
in
pop
jnp
mov
or
out
aaa
lods
push
lret
stc
fmuls
fstl
ror
in
mov
lcall
loop
push
pop
cli
lret
jl
jle
jb
pextrw
fwait
lods
xor
or
mov
xor
fstpt
pop
cmp
adc
push
add
mov
sub
cwtl
int
icebp
pop
pop
test
pop
sbb
and
mov
mov
nop
cmp
cld
fists
pop
leave
call
mov
adc
and
jb
mov
xchg
in
adc
jb
ds
lods
xor
pop
push
ljmp
xor
rolb
shr
mov
mov
xor
xor
or
mov
movb
movb
movzbl
jmp
adc
nop
dec
mov
mov
add
sbb
sbb
sub
fwait
mov
adc
add
jnp
push
rep
push
adc
cmp
sbb
push
lods
dec
cmp
lds
mov
dec
mov
sbb
mov
pusha
stos
dec
jecxz
ja
int3
test
push
out
ss
jo
and
cmp
fidivrl
adc
or
pop
movsl
xor
mov
and
cmp
dec
mov
pop
mov
and
ret
adc
push
ficomps
inc
imul
es
and
push
push
pop
pop
adc
add
insl
and
hlt
int3
mov
push
shrl
scas
push
mov
or
test
lea
xchg
outsl
sahf
pop
inc
push
cmc
jmp
es
pusha
or
lds
gs
ror
mov
xchg
lret
daa
shll
push
add
mov
outsb
nop
add
mov
outsl
and
icebp
cmp
inc
sbbb
and
dec
movsl
fwait
adc
jg
and
pop
call
mov
jp
jecxz
mov
xchg
scas
push
lcall
popf
dec
push
je
ret
adc
aaa
sbb
adc
push
or
xchg
jge
mov
aam
cmp
sti
mov
bnd
shl
push
addr16
or
stc
stos
outsl
push
in
inc
mov
adc
push
pusha
mov
xchg
pop
pop
fdiv
cld
add
sub
cmp
int
lods
mov
jns
out
es
cld
in
je
xchg
mov
loope
xor
jmp
push
mov
cwtl
sub
push
inc
fmull
rorb
ficoml
in
cmc
sbb
cmp
insb
inc
mov
ja
cwtl
jne
xchg
into
sahf
loope
jge
out
mov
jl
mov
sub
aaa
cmp
fsubrs
test
sbb
pushf
mov
dec
cmc
lock
pop
jecxz
inc
sbb
add
cmpsl
cmp
and
adc
inc
testb
in
cs
push
scas
inc
pop
shl
jo
or
adc
int3
ss
cmp
loope
dec
inc
ja
inc
push
sub
mov
test
push
or
inc
bound
or
push
xor
jl
sbb
test
lock
inc
sub
out
fs
dec
test
inc
jecxz
je
shl
arpl
into
outsl
cmp
stos
pop
and
hlt
mov
pushf
scas
pop
dec
xchg
and
lcall
cmp
idivl
mov
push
movsb
call
or
xor
push
jge
jns
and
push
inc
mov
rcll
in
and
push
popa
ret
cld
out
std
push
fwait
sub
adc
add
test
cmpsl
dec
fisttpll
sbbl
cmpsb
and
push
push
mov
push
inc
rcrl
add
loop
mov
xor
add
push
add
mov
movb
pop
mov
movb
mov
movzbl
cltd
idiv
mov
add
mov
or
mov
add
cmp
jae
mov
mov
shrd
xor
mov
shr
mov
xor
shl
or
jmp
push
test
and
mov
insl
mov
adc
sbb
adc
sbb
adc
repz
arpl
bound
scas
gs
pop
mov
shlb
jl
scas
lea
jg
and
inc
arpl
xor
dec
out
inc
andb
xchg
insb
adc
mov
lock
cwtl
sub
xlat
in
inc
fnstcw
lock
push
inc
lret
xchg
pushf
ret
xchg
dec
or
fldcw
cwtl
mov
pop
adc
nop
ret
clc
xchg
sbb
arpl
sbb
push
pop
lds
ds
leave
adc
xchg
push
iret
jbe
adc
pop
lahf
xchg
movsl
pop
cmpsb
idiv
jp
adc
and
pop
adc
and
dec
xor
lahf
inc
cld
and
cmc
repnz
fs
jecxz
xchg
sub
dec
mov
mov
xchg
or
jno
fwait
sahf
mov
sahf
icebp
ja
xor
repnz
adc
push
inc
jecxz
xchg
dec
sub
pop
and
inc
pand
test
shrb
adc
fsub
cmp
cs
in
iret
dec
icebp
shrl
lcall
int
mov
das
cmp
imul
adc
pop
ja
ja
push
arpl
dec
jecxz
sbb
sub
or
xchg
add
push
pop
xlat
popf
sub
shlb
in
or
lret
pop
bswap
dec
and
imul
lahf
jne
pushf
pop
jge
andl
mov
popa
addr16
loope
xchg
adc
leave
mov
xor
xchg
fisttpl
clc
jmp
int3
push
or
sbb
jp
push
das
xchg
inc
jl
ja
int
xor
jp
cs
ds
subb
xchg
int
pop
ds
sti
int
nop
mov
fildl
xor
das
jnp
pop
and
cli
push
stc
in
lret
add
dec
adc
in
and
pop
jp
xchg
inc
or
jae
jnp
roll
push
shrl
sub
jl
nop
insb
mov
movsl
pop
aam
dec
out
add
mov
scas
mov
inc
cmp
test
mov
es
sbbb
inc
inc
sub
pop
cmpsl
dec
mov
jae
scas
popf
adc
jle
mov
outsl
rcr
rcrb
mov
fistl
loope
fimuls
pusha
jo
fxam
pop
xor
jbe
cmpsb
clc
aaa
push
jp
in
and
mov
imulb
or
mov
push
or
cmpl
fildll
in
test
pop
and
fnstenv
or
aas
inc
ljmp
adc
pop
and
mov
rclb
outsb
lret
icebp
add
mov
jmp
mov
push
mov
mov
pop
jg
les
jge
inc
and
es
add
ret
push
mov
sub
push
push
push
movl
jmp
push
lods
pop
inc
lret
jo
xor
sbb
test
sbb
xchg
es
mov
mov
scas
jp
xlat
daa
cli
xchg
push
jg
add
shlb
sub
mov
jp
mov
in
sub
std
sub
daa
repnz
and
jmp
loope
bound
pop
call
push
add
push
rclb
out
mov
lds
cmp
out
sub
sub
sbbl
test
push
mov
scas
and
lock
fisttpl
inc
iret
xchg
std
mov
sub
mov
cmp
in
repnz
in
add
out
nop
shlb
inc
lcallw
insl
fcmovnbe
add
fs
cmc
and
dec
mov
cmp
mov
les
sbb
cmp
xchg
lahf
int3
jns
jecxz
xchg
add
push
repz
mov
lcall
shlb
jecxz
movsl
pop
dec
je
cmp
sbb
not
das
sub
lcall
dec
sub
mov
pop
mov
inc
mov
mov
cmp
push
or
jne
loope
dec
jl
into
add
mov
call
cltd
lds
mov
or
aad
xchg
scas
cmp
and
and
test
fsubr
mov
jmp
dec
scas
mov
mov
push
xchg
cmp
adc
cmp
pop
push
mov
add
jmp
or
sub
fidivrl
mov
fwait
cmp
mov
inc
loopne
dec
ret
data16
push
fnsave
mov
fstpl
movsb
sub
mov
adc
das
add
pushf
leave
xor
cmp
push
es
popf
outsb
repz
mov
lret
add
mov
andb
push
stos
cli
jns
test
add
ret
mov
jo
les
xchg
push
mov
mov
sbb
xor
adc
push
out
inc
ret
mov
in
dec
push
xor
aas
mov
repnz
notb
mov
jle
lea
ret
sets
mov
fstl
mov
ja
lock
fmull
xor
jae
icebp
adc
mov
lahf
fldl
imul
xlat
outsb
mov
adc
cmp
sbb
push
add
imul
call
cs
cli
jge
test
cmpsl
int3
int
xor
movl
movl
movl
movl
movl
movl
movl
xor
inc
mov
movl
mov
mov
sub
add
add
imul
add
xor
movl
movl
movl
movl
mov
or
add
mov
and
mov
sub
mov
mov
mov
add
or
jmp
xchg
jne
je
es
je
mov
xchg
rolb
sbb
test
sbb
fsubrs
ja
xchg
std
je
mov
adc
das
stos
mov
mov
xor
popa
bound
mov
dec
dec
jg
jmp
xor
fwait
inc
xchg
cmpsb
inc
push
lahf
xor
sbb
incb
and
movsl
mov
mov
ds
jge
inc
or
or
mov
mov
punpcklbw
clc
fimull
fnstcw
cmp
and
aad
fsubl
les
in
xor
cmp
mov
arpl
mov
subb
xor
je
orl
js
dec
mov
mov
sbb
xor
shrl
out
das
imul
int
iret
outsl
fisttps
pop
xlat
push
sub
pop
xchg
add
sub
xor
icebp
inc
jmp
icebp
mov
cmpsb
jg
out
shll
out
outsl
stc
adc
xor
or
push
in
cs
sbb
hlt
mov
dec
ror
loop
je
call
xor
jae
add
in
xor
inc
sbb
repnz
idivl
psubd
adc
or
jae
leave
test
jge
aam
push
cmovbe
lret
les
stc
enter
xchg
hlt
lock
and
sub
xchg
lahf
xlat
andl
push
enter
push
dec
or
jb
dec
mov
and
fmull
in
adc
hlt
sub
insb
mov
xor
pushaw
push
cld
mov
outsl
fisttps
fildl
mov
mov
jle
add
test
cwtl
xor
add
test
aad
loopne
dec
push
or
aaa
add
punpckhwd
push
jp
cli
and
testb
mov
xchg
mov
ret
sbbl
dec
jmp
inc
pop
insb
shlb
dec
fwait
mov
mov
mov
imul
mov
loopne
lods
xor
pop
push
sbb
push
icebp
inc
addl
shl
push
sahf
xchg
outsl
lret
sub
popf
lret
pop
inc
push
ljmp
hlt
cmp
mov
sub
sub
xchg
fcomps
pop
mov
jnp
cmp
cli
repz
je
cmpsb
cmpl
push
xchg
xor
loop
mov
js
sub
mov
in
mov
bound
cmp
cmp
call
xorl
pop
sub
xor
sub
mov
mov
mov
mov
mov
and
xor
xor
div
lea
mov
add
mov
jmp
pop
dec
ficoms
daa
ss
push
aas
jge
popa
add
sbb
ret
fwait
das
repz
daa
xchg
xchg
ds
jno
and
leave
or
testb
pop
pop
imul
negl
sti
push
add
in
daa
test
xor
dec
and
lcall
and
cltd
dec
sub
das
xor
add
data16
loopne
mov
jo
mul
add
sub
dec
inc
js
cmp
clc
jl
or
int
out
xchg
mov
jb
out
in
xlat
mov
mov
stos
mov
insb
dec
push
sbb
sub
pusha
movsb
lret
jae
xchg
stos
push
ja
inc
ret
out
dec
push
cmp
leave
in
fsts
sub
fisubl
mov
sub
aaa
sbb
inc
pop
iret
adc
stos
dec
pop
gs
fsubr
push
jmp
inc
stc
mov
jbe
mov
lret
pop
out
sub
sti
aas
les
dec
push
cmp
lods
sbb
repnz
pop
das
inc
movsl
dec
mov
popf
cltd
mov
lock
pop
outsb
and
lea
mov
mov
mov
nop
fwait
mov
cld
cld
fs
jg
add
adc
jns
jb
rclb
jl
adc
sbb
fidivrs
out
jnp
fs
mov
mov
je
mov
pop
mov
insb
aaa
adc
lcall
dec
mov
jmp
mov
pop
pusha
push
cmpsb
xchg
pop
dec
aaa
movsb
popa
sbb
pop
jmp
test
daa
sub
jae
aas
stos
push
test
push
ja
pop
sbb
jns
and
in
sahf
xor
enter
outsb
jns
mov
pop
sbb
rep
pop
xchg
mov
add
test
adc
aam
in
cmpxchg
in
inc
mov
cltd
lods
push
fwait
pop
outsl
fistpll
xor
aas
addb
jno
push
lea
jbe
jno
xchg
add
dec
cs
xor
loop
fistpl
pop
scas
lock
add
test
pop
pop
mov
orb
sahf
cmp
nop
dec
xchg
or
cmp
aad
dec
xchg
jbe
mov
add
mov
cltd
mov
or
lea
push
fsts
ds
inc
out
filds
push
xchg
psubw
lock
xchg
jmp
sub
js
and
push
mov
cwtl
push
rclb
mov
fcomps
cltd
mov
xchg
cmp
mov
test
jge
push
jb
fidivs
mov
imul
mov
sub
cmp
jbe
push
pop
mov
mov
movl
movl
movl
mov
movl
movl
xor
movl
mov
mov
sub
div
mov
xor
mov
div
mov
xor
div
xor
mov
mov
imul
mov
add
div
mov
mov
sub
sub
xor
div
mov
add
cmp
jae
jmp
sbb
dec
push
dec
and
and
sub
lock
sbb
test
sbb
sub
add
je
jno
jnp
push
jmp
sub
in
cmpsl
xchg
imul
pop
arpl
push
call
inc
repnz
mull
cmp
xlat
andb
lods
mov
and
lret
fimuls
push
subb
sub
aaa
test
ljmp
lods
mov
or
sbb
adc
lea
popa
push
adc
cmp
mov
int3
push
and
lea
jne
add
xchg
pop
sub
mov
xchg
lods
sub
jg
jle
lret
in
scas
movsb
jl
mov
jne
pop
push
sti
pop
push
jne
pop
shll
push
mov
xchg
sub
in
add
popa
test
xchg
test
lret
dec
insb
add
int3
xor
inc
fisubrs
sub
movsl
mov
jl
push
mov
mov
test
mov
pop
data16
jp
addl
dec
daa
mulb
fiaddl
dec
pushf
push
add
xor
imul
xor
jne
mov
rcll
imulb
dec
aad
dec
clc
xchg
mov
cmp
cmp
repz
shll
shll
les
iret
pop
cmp
add
dec
std
loope
aam
jo
sub
mov
addr16
rcl
jge
jge
loopne
loope
add
inc
add
stc
shrb
jmp
sbb
sar
psrlw
sahf
jno
push
dec
lock
in
es
shll
sbbb
jmp
pushf
jns
imul
rcrl
xor
repnz
sbb
stos
xor
fldenv
decl
jbe
and
and
in
push
mov
int
orl
mov
adc
mov
test
xchg
pop
sub
rorl
jmp
mov
and
xor
jb
aas
ds
lahf
cmpsb
adc
pop
fwait
mov
mov
push
or
cmpsb
sbb
outsl
repnz
jl
clc
xor
mov
push
les
sarl
lds
stos
loope
test
push
gs
orb
arpl
sarb
add
dec
addr16
lahf
lcall
dec
push
lret
pop
sbb
and
leave
fs
sbb
adc
push
and
andl
iret
inc
lds
mov
sbb
movsl
call
sub
fucompp
movl
movl
movl
movl
jmp
push
mov
fistpl
dec
xor
sbb
jnp
fidivs
xchg
addr16
shlb
loop
mov
aad
sbb
icebp
jns
jbe
les
inc
ljmp
add
fwait
sbb
xchg
imul
mov
pop
test
hlt
js
daa
lds
icebp
call
out
repz
jnp
or
outsl
das
inc
dec
mov
loopne
sbbl
xlat
gs
ljmp
and
mov
imul
xor
fldcw
fsubs
movsl
rclb
sub
pop
neg
mov
push
lahf
push
int
cmp
in
iret
xchg
scas
xor
sahf
insl
sub
clc
shrb
testb
sbb
mov
adc
cmc
mov
pop
cs
mov
xor
stos
and
jmp
and
mov
sub
sub
mov
fs
xchg
inc
add
xchg
mov
mov
mov
jns
gs
sbb
jb
fwait
sub
jns
xor
ret
dec
adc
mov
mov
cmc
adc
insl
mov
adc
dec
and
rolb
and
mov
shlb
pop
cmp
sbb
gs
or
sahf
sti
adc
push
out
mov
andl
fs
mov
popf
pop
and
ljmp
pop
out
inc
sarl
addb
jg
lret
jecxz
dec
and
cmp
fsub
insb
jl
sub
xor
pop
or
sbbl
and
xor
sbb
mov
cmp
jl
inc
sub
adc
mov
push
pop
add
scas
xchg
pop
rclb
in
jns
outsl
shrb
popf
rolb
xchg
and
aas
cwtl
jo
jbe
negl
jmp
jecxz
cmpsl
add
in
pop
pop
cmpsb
or
and
sbb
push
sti
push
scas
adc
cwtl
adc
adc
mov
insb
mov
ret
cmp
cmp
xlat
add
pop
mov
repz
aaa
outsb
int
mov
ja
adc
mov
inc
sbb
call
test
jmp
push
mov
push
and
adc
mulb
ss
push
scas
test
loopne
jecxz
or
mov
push
jle
sahf
lret
divb
rol
inc
call
movl
jmp
aas
mov
mov
dec
mov
clc
push
icebp
sbb
test
sbb
pop
pop
lea
leave
sbb
in
add
fistpll
push
gs
dec
mov
pop
bound
fistpl
fs
jb
div
repnz
lods
insb
sub
sar
mov
push
je
popf
cmp
pop
lds
and
add
out
sar
adc
or
push
and
mov
sbb
movsb
dec
incb
test
out
popa
les
xchg
and
insl
arpl
xor
and
push
jbe
adc
xchg
sub
sbb
je
imul
stc
mov
jbe
xor
or
pop
xchg
outsb
xor
arpl
jno
into
mov
and
pop
repz
fwait
fs
je
dec
ljmp
cltd
test
hlt
orb
or
and
lods
movsb
dec
mov
fwait
insb
test
test
and
shrb
add
dec
hlt
xlat
ds
inc
fcmove
sahf
mov
sub
negl
mov
ds
mov
dec
lret
sbb
pop
sub
xchg
lods
cmp
gs
xor
xor
dec
rclb
sub
dec
add
xchg
pop
sbb
shl
lds
adc
sub
xor
xor
add
out
inc
sbbl
sbb
cmpsb
cmc
sbb
stos
call
lds
fstl
nop
leave
inc
pop
lods
fidivrs
imul
ss
push
sbb
jno
cltd
and
insb
imul
push
mov
push
sbb
jge
fnstcw
push
sub
inc
add
mov
add
or
scas
xor
sbb
mov
push
push
mov
xlat
dec
mov
sub
and
adc
push
shl
fldenv
dec
outsb
call
sub
sbb
scas
insb
roll
cwtl
cmp
enter
xchg
nop
repnz
xchg
sbbl
push
add
or
mov
movsl
dec
cmovge
jb
dec
mov
mov
and
movsb
lret
test
aam
jecxz
notb
adc
je
bnd
xchg
adc
adc
sarb
mov
stos
add
shrb
mov
les
enter
jg
pop
and
xchg
rcr
outsb
in
jl
pushf
scas
mov
mov
adc
jecxz
xchg
sbb
cs
push
fcomps
dec
repnz
mov
insl
sub
inc
fsubrs
pop
div
mov
jmp
lahf
ds
xor
lcall
jne
jo
ljmp
pop
insb
and
push
mov
mov
imul
sbb
jae
scas
mov
xchg
loopne
dec
jb
test
aaa
dec
movsl
push
inc
ja
mov
mov
leave
mov
popl
and
push
xchg
lods
fldcw
mov
mov
lcall
pop
decb
setle
jmp
popf
lods
test
mov
cmpsl
ret
outsl
mov
sub
pop
jge
sbb
int
lea
in
jg
andl
add
cmp
inc
mov
mov
jo
je
sbb
mov
test
lods
push
mov
loop
mov
push
adc
xor
xchg
push
and
sbbl
je
pop
ret
mov
sub
mov
xchg
sub
stos
push
cmp
jo
jmp
shl
push
add
mov
xor
dec
rcll
sarb
cmpsb
sub
int
fbstp
xorb
lcall
lret
jp
mov
aad
pop
in
pop
fwait
outsl
dec
cmp
or
jecxz
cli
fdivrl
inc
and
pop
xchg
inc
push
rcrb
repz
repz
xchg
es
mov
leave
cmp
repnz
orps
push
inc
adc
fidivrl
ret
or
andb
fstl
sub
cwtl
loope
aaa
into
inc
outsl
mov
inc
mov
loopne
cs
jo
popa
push
adcb
rorl
ljmp
cmp
push
xor
lret
cmp
repnz
or
aad
inc
inc
fstl
popa
xor
arpl
push
push
ret
js
xor
stos
mov
scas
xor
sub
in
cmp
cltd
or
inc
fdivr
push
sahf
scas
xorl
nop
pop
es
subl
pop
mov
or
sbb
xchg
mov
cltd
jle
push
xchg
mov
daa
or
repnz
dec
mov
aas
push
lcall
push
mov
aaa
movsl
outsl
or
ret
shlb
fmull
int
inc
add
push
int
mov
aad
pusha
ds
add
adc
mov
addr16
inc
sbb
or
cwtl
sub
cmpsb
jo
fwait
sbb
lret
aad
mov
inc
sbb
movl
inc
add
add
ret
fmull
rorl
sub
add
and
mov
sub
mov
sub
mov
sub
mov
mov
mov
mov
xor
add
xor
and
lea
mov
mov
add
div
mov
mov
sub
xor
div
add
cmp
jb
xor
inc
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
add
and
xor
mov
sub
movl
movl
mov
movl
movl
mov
mov
imul
xor
or
xor
mov
sub
mov
mov
mov
jmp
push
push
push
scas
sbb
inc
pop
jns
jo
mul
stos
xor
sbb
test
sbb
loopne
push
sub
leave
sbb
sub
pop
inc
aad
pushf
repz
fucomip
cmpsb
std
jle
in
mov
les
cmp
push
incb
xlat
cmp
ja
dec
push
enter
loop
data16
loop
fildl
or
jp
aas
sbb
ret
mov
sub
outsl
sbb
movsb
icebp
aad
mov
stos
les
jecxz
mov
sbb
dec
sbb
popa
scas
pop
es
repz
ja
insl
pop
mov
mov
mov
mov
sub
lds
push
or
or
repnz
lock
push
sbb
cmp
fidivrs
repz
sbb
sub
fstpt
cwtl
mov
stos
mov
ljmp
push
ds
sbb
and
ss
xchg
push
jne
mov
sub
xchg
or
push
fcomp
dec
lods
push
and
push
push
inc
out
fsubl
aad
aad
icebp
dec
pop
jb
lods
mov
outsb
ret
adc
je
jl
or
mov
pop
cld
test
fsubs
ljmp
jo
jl
or
outsl
lods
fimuls
mul
and
pusha
scas
inc
test
scas
mov
cld
les
loopne
clc
lock
add
sub
test
pop
push
pop
adc
dec
inc
mov
cmp
les
addb
xchg
pop
and
and
xchg
call
cmp
repz
pop
xor
repz
mov
pop
pop
jmp
je
or
in
stos
inc
aad
rorl
leave
clc
inc
add
push
push
icebp
ret
sbb
and
xor
mov
lea
inc
outsb
aaa
jmp
out
fildl
mov
rclb
sbb
mov
fs
test
lea
xor
push
outsl
scas
add
sub
pusha
ret
pop
and
or
clc
mov
scas
push
add
push
cwtl
ss
mov
and
movsb
add
mov
ljmp
inc
sub
bound
imul
xchg
dec
and
sbb
xchg
movsl
mov
or
inc
jne
ljmp
sbb
shlw
lds
inc
fcomps
imul
push
popa
ss
ds
loope
mov
cmp
sbb
pop
or
sub
xor
div
mov
mov
sub
mov
mov
mov
jmp
jmp
push
and
cmp
jo
loopne
sbb
mov
push
mov
cmovp
jb
mov
jge
and
jl
insl
jmp
sub
add
ss
inc
xor
enter
jne
cmp
xchg
icebp
movsb
and
push
nop
aaa
jmp
mov
popa
jmp
inc
das
add
scas
push
xchg
add
flds
fldt
pop
cs
jle
addl
pop
add
add
mov
dec
sub
jns
lock
das
in
jge
enter
enter
lods
xchg
adc
dec
jge
cld
pop
pop
add
and
mov
xchg
out
cs
pop
sbb
and
and
enter
sbb
out
xchg
and
fimull
push
push
repz
cwtl
aaa
xorb
pop
push
mov
test
dec
in
ds
and
ret
movsl
fldl
jnp
jae
pop
add
popf
push
jo
mov
scas
cli
sub
mov
push
int
mov
sbbl
pop
aas
add
mov
inc
jp
dec
pop
and
adc
arpl
mov
bswap
or
das
xchg
xchg
push
aas
push
mov
std
fwait
addb
xchg
dec
sbb
adc
out
xchg
fidivrl
mov
xchg
or
pushf
push
pushf
mov
or
shll
in
inc
jne
sub
aas
adc
pop
lods
xor
out
inc
adc
sti
push
pop
pop
cmp
mov
fstps
sub
sti
out
fwait
inc
dec
inc
or
inc
fs
cmpsl
dec
lahf
inc
and
fwait
push
stos
jae
inc
cmc
ret
out
aas
fbstp
imul
daa
lret
or
cmp
inc
pop
mov
bound
jae
bound
cld
data16
imul
lock
cld
cli
aam
stc
iret
ficoml
ljmp
daa
testb
fisubrs
jle
push
cmp
fldl
je
movsb
std
aad
or
jg
out
cmp
mov
or
xchg
das
pop
fs
stos
add
cmp
ficoms
pushl
repnz
pop
inc
or
int
push
sti
mov
ds
push
jmp
sub
mov
and
testb
xor
scas
mov
je
and
loop
pushf
add
bound
and
fiaddl
lds
sub
jge
ficoml
mov
mov
imul
mov
imul
or
mov
or
xor
lea
mov
and
add
xor
add
cmp
jne
pop
pop
pop
leave
ret
push
mov
sub
push
push
movl
jmp
hlt
aam
adc
pop
and
cmp
jl
jo
ficompl
sbb
adc
sbb
lret
cmc
imul
test
mov
xchg
xor
call
data16
inc
enter
push
inc
sbb
pop
mov
icebp
in
addr16
pop
sub
fwait
push
sbb
xor
ljmp
fnstsw
and
movsl
shrb
insl
inc
xchg
fcomps
push
sub
loope
xor
mov
aaa
dec
gs
fisttpl
int3
add
mov
adc
lods
xchg
jmp
sbbb
mov
inc
sarl
mov
push
lret
xorb
jns
popa
push
jmp
or
mov
idivb
cltd
push
data16
loop
add
mov
push
xor
mov
call
in
test
cmpsl
flds
jmp
fldcw
xchg
push
mov
adc
aam
mov
aas
mov
jns
pop
or
lcall
lea
dec
stos
out
mov
cwtl
inc
ljmp
dec
lahf
mov
adc
add
mov
or
stos
movsl
shll
xor
add
pushf
les
push
add
sbb
jbe
jl
outsl
bound
mov
ss
cli
cmp
shll
dec
push
xlat
xor
aad
and
pop
sbb
jge
pop
stos
jns
pop
sub
pop
jge
xchg
cmp
jo
lcall
enter
stos
mov
icebp
out
or
repz
retw
jae
xor
hlt
lret
lea
lret
xchg
add
mov
or
call
incl
repnz
dec
test
ja
mov
mov
mov
push
xor
inc
inc
movsb
ja
push
cmc
fidivrs
inc
cmp
push
movsb
mov
ret
jb
imul
dec
or
xor
repnz
xor
jmp
pop
in
es
sub
pop
push
pop
iret
std
shlb
sbb
sbb
out
mov
cltd
nop
lret
jle
jmp
mov
xchg
pop
int
push
sub
lahf
rcl
sbb
fucomip
test
leave
mov
cmp
mov
outsl
fldenv
popf
mov
jo
sbb
lret
cmp
fsubl
outsl
cmp
lret
mov
or
stc
js
xor
stos
shl
push
xchg
mov
pop
inc
push
adc
cmp
aad
and
push
cmp
or
repz
mov
scas
popf
mov
mov
loope
lret
lods
int
mov
testb
ds
aaa
mov
fwait
push
mov
subl
add
dec
pop
movsl
dec
inc
push
inc
test
adcl
sub
mov
or
sub
mov
sbb
loop
test
insb
mov
mov
out
jns
lahf
rcrb
out
rorl
cmp
mov
xor
adc
fimull
dec
adc
cltd
dec
and
jecxz
jmp
or
lahf
testl
add
mov
mov
add
or
mov
lea
jmp
lcall
ficomps
inc
dec
pop
jle
scas
sub
xor
sbb
or
mov
xor
pusha
xor
and
sbb
stc
sub
jns
sarb
cltd
or
or
mov
popf
xlat
mov
sahf
clc
shl
mov
sbb
cwtl
sti
lods
repnz
mov
mov
mov
hlt
push
out
pop
inc
rcll
mov
xchg
add
and
jb
repnz
and
push
mov
pop
bound
cmp
pop
clc
push
mov
push
aaa
ja
sbb
add
jno
mov
mov
or
int
mov
mov
das
cmc
cmp
sbb
filds
add
mov
jnp
lods
fists
pop
jg
ficoml
fadd
outsl
mov
out
movsb
arpl
pop
sbb
ror
push
insl
fistpl
cld
lds
movsb
je
inc
mul
in
mov
mov
adc
xor
arpl
push
pop
push
lods
hlt
push
push
sub
mov
inc
pop
push
jle
xor
lret
jmp
mov
push
xchg
jne
fildll
jge
cs
rorl
mov
and
xchg
xor
push
sbb
popa
ficompl
es
imul
push
inc
in
xchg
cmp
lea
mov
push
cwtl
cmpsb
call
fisubl
sub
outsb
sti
jo
xchg
jo
shlb
and
add
shlb
jbe
jmp
or
in
cmp
sahf
adc
xchg
stos
xchg
les
cmpsl
sub
xchg
testl
popl
or
pop
sub
sub
jmp
rcrb
mov
nop
xor
data16
dec
outsb
dec
lcall
push
sarl
pop
push
pop
inc
add
jo
cld
add
ror
sti
push
push
mov
and
pop
dec
push
push
sbb
hlt
cs
imul
xlat
mov
cld
add
rorl
ret
mov
pushf
fwait
imul
xor
mov
jecxz
test
pushf
jno
inc
mov
es
sub
inc
mov
and
fsubp
int3
adc
pop
cmpsb
cmp
pop
fmull
xchg
sub
lret
and
dec
repnz
movsb
pusha
das
or
stos
jl
mov
lcall
xchg
dec
loop
cltd
lods
in
lods
jno
mov
std
mov
jae
stc
mov
add
mov
cwtl
pop
dec
jp
pop
out
iret
daa
add
cmp
fistpl
std
pop
xorb
addr16
xchg
mov
into
fistpll
mov
push
jl
cmpb
jle
shrb
aas
cmpsl
mov
lods
mov
push
adc
stc
mov
xorb
dec
mov
lds
stc
push
xchg
in
mov
xchg
push
dec
sub
inc
ret
shrb
cwtl
xchg
or
mov
sub
ror
jbe
ret
or
add
stos
hlt
pop
aam
dec
adc
and
push
out
fs
add
enter
jmp
ss
mov
movl
movl
mov
mov
and
xor
jmp
out
icebp
aaa
insb
aaa
sub
mov
or
sbb
inc
inc
sbb
pop
nop
xchg
lahf
xchg
add
jecxz
xchg
addb
fmull
push
sub
pop
test
xor
arpl
add
out
and
mov
int3
mov
or
icebp
add
insb
inc
cltd
in
cmp
lods
fwait
cld
out
gs
loope
into
xchg
outsb
aad
sbb
sahf
mov
mov
fwait
rcl
into
ror
mov
xchg
push
pop
loopne
cmp
mov
cmp
ror
loope
out
filds
mov
mov
lods
cli
fstpl
out
loope
out
push
ja
dec
int3
mov
enter
dec
iret
mov
rcl
subb
and
test
fnstenv
adc
outsb
jge
insb
enter
ja
or
mov
jnp
dec
push
inc
sbb
loope
bound
in
lcall
dec
test
int3
xchg
add
jle
lock
and
je
and
and
dec
mov
and
jb
push
call
dec
int3
orb
inc
popf
dec
aaa
stos
dec
add
incl
out
jnp
adc
fists
push
ds
das
js
out
mov
enter
inc
add
xchg
mov
bnd
ljmp
sub
inc
mov
or
sub
arpl
inc
repnz
xchg
add
cmpb
inc
rcrb
bound
int
lea
cmp
jo
xchg
mov
xor
push
lock
lds
or
dec
sub
mov
jb
das
les
stc
pop
sbb
pop
xchg
xchg
adc
dec
stc
leave
mov
sahf
js
daa
int
dec
or
mov
pop
and
push
ja
cmp
mov
cwtl
jmp
aam
xor
sbb
jp
dec
rclb
inc
inc
push
inc
aam
test
ret
into
outsl
ficompl
cmpl
jae
outsb
lcall
adc
sbb
sbb
insb
add
aaa
ja
pop
and
ljmp
add
cld
in
sub
xor
enter
dec
pop
das
neg
sbb
aam
xchg
adc
insb
mov
fsts
jmp
push
adc
jmp
and
bound
dec
dec
fdivs
jge
dec
fbstp
push
cmpsl
test
test
xchg
pop
fildl
and
mov
adc
out
sub
fsubrl
leave
jp
mov
shrl
dec
lcall
and
push
repz
push
les
cmp
jmp
sbb
lret
jb
fstpl
sub
mov
lea
mov
das
arpl
xchg
pop
cmpsl
ret
push
or
mov
hlt
and
and
xor
ret
sahf
das
mov
xchg
in
or
outsb
mov
clc
stc
in
cltd
or
sub
vunpcklpd
mov
mov
daa
cmp
jb
cmp
jp
imul
mov
call
rcrb
jo
add
lea
mov
movl
movl
mov
xor
push
pop
div
jmp
jb
pop
in
sbb
push
lret
rcrb
jo
imulb
sbb
xor
sbb
push
dec
xchg
sub
ret
adc
cltd
pop
sub
xchg
aam
negl
cwtl
das
inc
loopne
sbb
nop
out
xlat
nop
cli
leave
dec
jle
fimull
cmp
jecxz
jne
cmp
cmc
jb
test
jl
jmp
int
in
dec
das
lret
into
fsubrl
mov
fidivs
adc
repnz
inc
rolb
cmp
mov
movsl
xchg
adc
mov
mov
xchg
mov
dec
ss
aas
push
cli
xchg
xchg
insl
scas
addr16
cli
xlat
mov
xchg
jne
xchg
xchg
jnp
and
cmp
push
cli
push
test
cltd
pushf
scas
shlb
lock
mov
out
idivb
je
imul
push
push
sbb
icebp
rolb
ret
lods
gs
xchg
xor
mov
xchg
clc
dec
and
push
in
dec
inc
aas
scas
and
out
mov
in
cmp
bound
mov
comiss
inc
mov
and
nop
sbb
xchg
fwait
mov
xor
stos
leave
jb
pusha
lods
dec
cmp
mov
out
sti
fdivrl
push
inc
outsb
pop
push
outsb
sub
mov
mov
ret
push
push
xchg
imul
mov
sbb
fisubrl
cld
inc
pushf
xchg
sbb
cmp
out
adc
imul
adcb
mov
add
mov
call
gs
aad
sbb
jl
sbb
cmpsb
jge
fidivl
mov
mov
stos
sbb
lods
mov
std
mov
jnp
fsubr
jmp
add
aaa
aaa
sub
cmc
dec
cmp
xchg
fs
and
mov
testb
idivl
xchg
cwtl
inc
insl
popa
lock
idivl
pop
adc
pop
in
fistps
pop
jl
or
mov
jg
stc
scas
add
xchg
sbb
daa
sbb
insl
cmp
cmpsl
pop
gs
jp
cmc
insl
pop
xor
push
stos
sbb
push
xchg
out
loop
push
test
jbe
push
lahf
xor
fisubs
push
cmp
ljmp
out
push
pop
sti
rorl
sti
push
xchg
or
mov
xlat
f2xm1
xchg
and
inc
ror
mov
test
dec
loope
inc
jne
daa
mov
sub
scas
iret
les
or
mov
push
lds
or
sbb
sbb
fcmovnu
sbb
jae
lcall
decl
in
or
inc
pushf
popa
data16
test
and
push
adc
inc
mov
xchg
movsb
jnp
lret
int3
sarl
lcall
lock
mov
push
jg
dec
stos
pop
mov
rcrb
shrl
dec
dec
jbe
adc
xchg
scas
and
mov
lods
push
adc
pusha
push
or
or
push
mov
out
adc
push
notb
pop
cmpsb
dec
xchg
add
jp
xchg
imul
out
jl
jle
mov
aaa
mov
mov
jne
jbe
or
push
sbb
mov
or
in
cmp
jle
pop
push
scas
rcr
stc
js
fsubl
xchg
xchg
in
aad
lods
jns
pushl
shrb
add
and
mov
sub
mov
movl
movl
movl
mov
mov
lea
mov
div
mov
lea
mov
movl
movl
movl
mov
mov
xor
sub
mov
sub
xor
mov
movl
pop
mov
movl
movl
mov
mov
mov
xor
xor
div
mov
and
sub
mov
movl
movl
movl
movl
movl
movl
mov
add
mov
xor
mov
or
mov
or
mov
and
mov
sub
mov
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
add
adc
or
mov
or
or
mov
mov
or
mov
sub
mov
sbb
mov
or
or
add
mov
adc
mov
movl
movl
movl
movl
movl
movl
movl
xor
inc
mov
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
movl
mov
movl
movl
mov
or
add
mov
or
mov
sub
mov
sub
imul
add
mov
push
mov
lea
mov
xor
div
mov
lea
push
mov
mov
push
push
jmp
fmull
fiaddl
clc
push
inc
cmpsl
mov
xor
sbb
cmp
cmove
jp
in
or
iret
mov
ret
imul
ret
pop
xor
pusha
dec
mov
pop
das
mov
orl
aas
inc
scas
mov
jmp
jg
lahf
push
fcmovb
or
idivb
gs
or
adc
cs
movsb
out
lcall
in
xchg
cmp
xchg
pop
mov
repz
xor
xchg
mov
inc
test
mov
sub
leave
or
push
mov
mov
cli
pop
xor
shll
subl
or
test
ss
loope
mov
ss
sub
add
and
cmp
adc
cmp
test
mov
mov
insl
push
fwait
push
xor
sub
push
or
je
repz
or
jnp
inc
dec
lret
iret
pop
leave
adc
mov
out
mov
stos
stos
mov
fidivl
pop
xor
in
sub
or
pop
into
loope
out
mov
stos
lret
roll
lret
lods
xchg
es
mov
pop
xor
mov
xchg
mov
leave
add
aas
js
inc
rcrl
dec
rcll
jns
addr16
xchg
jne
mov
jg
push
push
out
loop
aam
fs
and
xor
fucomip
ret
xchg
jb
adc
cmp
sub
call
lcall
ret
push
lods
test
sub
adc
dec
mov
ret
jnp,pt
out
inc
add
sub
xchg
push
lock
jp
xor
mov
arpl
shrb
roll
out
leave
add
out
xchg
add
mov
cmpsl
sub
or
xorb
loop
cli
sub
mov
dec
movsl
pop
fwait
pop
sub
adc
and
jg
cmp
nop
jmp
sub
fsubrl
repz
movsb
push
scas
nop
test
add
mov
push
test
inc
pop
cmp
adc
cmp
dec
cmpl
cmc
mov
adc
inc
lahf
daa
imul
int
xchg
mov
jecxz
mov
fisubs
rolb
cmpsb
shll
dec
ficompl
popf
rorl
sbb
test
xchg
xchg
mov
lret
push
rorl
in
adc
aad
nop
xchg
sbb
push
int
and
mov
fsubl
mov
in
xchg
dec
faddl
cmp
sub
cs
add
push
add
dec
lret
js
mov
decl
and
inc
push
jbe
enter
mov
xchg
ja
or
or
andl
lods
push
int
push
fdivs
mov
xor
mov
jno
pop
stos
inc
loopne
ret
inc
jp
xor
test
or
repz
stos
lret
in
shr
lock
dec
or
and
pop
popl
jbe
test
pusha
lcall
mov
ret
add
decl
call
or
or
push
push
call
mov
mov
xor
mov
mov
mov
and
jmp
xchg
fistl
sbb
sbbb
nop
xchg
mov
xor
sbb
sar
fildll
and
into
jp
stos
fnstenv
xchg
cld
xchg
adcb
nop
rclb
jo
push
mov
or
jmp
mov
lret
enter
jmp
daa
cmp
pop
sub
cmp
push
call
sti
aaa
enter
add
leave
add
push
jns
jle
inc
ds
jp
cmp
mov
les
fnsave
stos
inc
mov
test
insb
jb
cltd
les
mov
cmp
xchg
roll
mov
sub
xchg
fcmove
loopne
pmulhw
lret
out
jmp
push
in
int
stos
out
or
gs
fsts
push
imul
mov
add
xchg
test
sbb
enter
xor
shlb
test
fstpl
sub
lret
mov
hlt
daa
dec
cmp
mov
push
add
imul
cwtl
add
inc
sahf
mov
mov
leave
cli
push
test
push
add
subl
je
fsubs
mov
or
xchg
fisubrs
push
xor
xchg
decl
jb
repnz
and
incb
jo
inc
xchg
rcr
add
jl
mov
inc
mov
sqrtps
sub
mov
mov
andl
iret
add
jg
xchg
pop
dec
aad
jb
dec
jp
jbe
mov
adc
dec
mov
jae
mov
mov
pop
lcall
into
sbb
lods
in
sub
push
icebp
aad
fstpl
pop
mov
push
push
sbb
push
push
shufps
dec
lods
add
dec
or
cmp
mov
lods
icebp
fbstp
and
inc
add
xor
dec
in
xchg
sub
cmp
aas
xor
nop
aaa
mov
and
jecxz
daa
test
push
call
pop
push
scas
bnd
add
xor
xchg
outsl
dec
dec
push
lock
pop
lods
rolb
xchg
or
mov
sti
fildl
aam
inc
jbe
sbbl
mov
and
cwtl
rorb
push
ret
pop
int3
mov
inc
aas
std
inc
xchg
in
or
gs
or
dec
jns
hlt
sub
push
ret
addl
aam
sbb
dec
and
adc
mov
add
fidivrl
jmp
cmp
adc
jae
xor
aaa
fucomp
daa
add
repz
sbb
dec
cmp
aas
lods
cmp
adcb
leave
mov
jnp
xchg
lcall
ja
mov
jmp
sbb
repnz
sbb
cli
push
dec
cmp
sti
fistpll
or
mov
in
shrl
mov
xor
add
and
hlt
sub
jle
or
insl
jo
data16
daa
push
xchg
inc
js
push
lock
shlb
ja
inc
add
inc
mov
jo
test
lods
pusha
jnp
stos
jmp
mov
lds
xor
jg
push
cmp
jb
dec
cmp
insl
scas
repnz
adcl
pop
ret
add
in
jae
aaa
sub
adc
repnz
fwait
bound
add
incl
add
mov
insl
ret
call
mov
mov
mov
sub
xor
imul
add
xor
xor
mov
div
cmp
jne
mov
xor
mov
div
mov
mov
xor
sub
mov
xor
sub
or
lea
push
mov
push
pop
div
mov
xor
div
mov
mov
xor
xor
div
imul
sub
push
mov
add
push
mov
sub
mov
pushl
call
mov
mov
lea
mov
incl
mov
mov
xor
shld
shl
mov
mov
xor
xor
cmp
jne
cmp
jne
mov
mov
jmp
lea
mov
mov
mov
mov
mov
sub
mov
mov
mov
sub
mov
movl
movl
mov
mov
mov
mov
pushl
pushl
pushl
pushl
pushl
push
push
pushl
mov
call
mov
mov
pushl
call
mov
push
add
push
push
jmp
mov
push
sbb
sbb
cmc
cmp
xor
stos
loope
sbb
xor
sbb
mov
push
mov
leave
mov
leave
or
inc
loope
in
jle
and
xor
int3
sbb
push
mov
jno
adc
andb
fstps
mov
xor
ljmp
icebp
fnsave
stos
sub
mov
add
mov
sbb
int
daa
into
fsubp
inc
lahf
or
mov
mov
insl
fiadds
scas
icebp
pusha
xchg
xchg
pop
das
aam
pushf
and
or
outsl
jns
sub
xor
inc
push
in
fisttpll
loope
js
ja
fnstenv
or
insl
imulb
push
jb
mov
mov
scas
outsb
pop
jle
icebp
imul
inc
xchg
push
push
pushf
test
insl
cmp
mov
jge
adc
fcom
mov
inc
jge
out
aaa
sub
test
data16
scas
push
aaa
mov
cmp
rcrb
idivl
cmpsb
add
push
adcb
hlt
sti
cmp
adc
stos
xor
or
cmp
scas
mov
shlb
mov
adc
je
sahf
stos
movb
data16
leave
out
jge
loopne
cltd
inc
imul
sub
cmp
sahf
jo
mov
sbb
movsl
cmp
inc
mov
mov
push
mov
jns
and
mov
movsl
in
imul
test
lds
adc
or
dec
push
test
mov
lret
aad
data16
add
adc
lea
daa
push
jno
mov
repnz
mov
push
mov
testb
addb
sbb
test
loop
push
cmp
mov
mov
lods
cld
cmpl
negl
mov
push
jnp
cltd
movsl
movsb
inc
mov
sub
xor
jp
cltd
testb
into
fdivrl
xchg
pop
sbb
sub
cltd
sbbl
jg
sbbb
xchg
push
jbe
std
es
pusha
xor
inc
outsb
push
or
bound
enter
pop
out
ja
push
test
pop
pop
shrl
push
or
push
mov
cld
jnp
adc
xchg
cmpsl
jmp
js
or
pushf
fadd
dec
rcrb
pushf
push
outsb
mov
lahf
hlt
ret
test
pusha
stos
lret
cmp
cwtl
add
enter
fisttpll
aad
jbe
imul
sahf
xor
add
push
mov
push
jle
mov
mov
mov
push
je
int3
sbb
dec
aaa
cmp
mov
pop
movsl
cwtl
mov
mov
or
subl
pop
push
outsb
mov
cmp
orl
int3
mov
push
push
and
ja
xor
jae
xor
mov
jg
sub
in
pushf
outsl
push
mov
cmp
adc
imul
sbb
xchg
lods
mov
push
daa
cmp
mov
mov
fildl
shlb
pop
mov
mov
pop
dec
or
push
xor
inc
std
lock
ret
fimuls
out
mov
in
je
push
out
test
insb
inc
add
mov
jmp
mov
mov
pop
pop
leave
ret
push
mov
jmp
cmp
mov
xor
fildll
sbb
test
sbb
jb
repnz
and
loope
loopne
jge
iret
js
mov
aas
push
sbb
mov
inc
push
in
sysexit
xchg
dec
pop
sahf
aaa
add
popf
mov
int3
out
inc
outsb
push
jmp
stc
icebp
lds
xchg
sbb
cmpsb
mov
inc
jae
cmp
mov
pop
int
xchg
jl
fwait
push
jne
adc
idivl
mov
scas
scas
sub
lret
imul
cwtl
xor
outsl
out
xorb
fadds
xchg
mov
jo
scas
inc
notb
sbb
push
cmp
inc
jnp
mov
pop
mov
sub
aad
in
xchg
sub
xor
test
xor
and
sbb
xlat
pusha
push
in
fsubrs
psllw
jns
push
mov
bnd
jne
or
adc
sub
adc
mov
jne
mov
sbb
jp
cmp
rolb
aad
in
in
push
or
fnstenv
cmp
mov
or
lret
es
adc
rol
xor
push
or
aad
ficomps
mov
fildl
cmp
mov
divb
cmpsl
dec
ret
pusha
std
jmp
rcrb
fnstenv
movsb
dec
jnp
mov
out
movsb
lea
cmp
sub
mov
adc
mov
jb
mov
fcmovnu
xchg
push
int
aam
les
xchg
ret
lret
inc
push
ds
mov
push
xchg
dec
jb
or
ret
out
jecxz
fsqrt
ds
jbe
jne
add
ds
sbb
cmpsb
cmp
sbb
leave
xchg
bound
ret
outsb
outsb
adc
lds
jecxz
jae
loopne
testb
pop
lcall
sub
push
mov
insb
or
cmp
push
mov
xchg
idiv
imul
mov
lcall
xchg
jo
mov
addr16
imul
in
lret
push
inc
dec
insl
rorb
sti
adc
js
sub
push
push
movl
movl
movl
movl
movl
movl
jmp
mov
xor
movsl
mov
mov
sbb
mov
and
xchg
inc
dec
adc
addr16
inc
jmp
leave
hlt
and
add
nop
mov
notb
and
jl
repz
jo
rclb
pop
xchg
or
cmp
jle
and
or
loopne
xchg
sub
push
mov
dec
jmp
out
fidivrs
shlb
push
pop
pop
pop
jb
sbb
pop
imul
ds
es
mov
pop
int
mov
jp
out
pusha
cmc
sub
data16
cmc
outsb
mov
imul
sub
cmp
jmp
je
mov
dec
or
into
pop
pusha
bound
dec
mov
mov
mov
pop
and
mov
push
bound
adc
sbb
enter
adc
xchg
imul
mov
push
outsb
cli
dec
stos
pop
subb
outsb
cwtl
sub
out
stos
mov
push
in
sub
cs
cmp
pop
push
sub
mov
in
add
mov
jno
clc
fimuls
cmp
mov
jl
and
mov
push
push
sub
adc
ljmp
out
jbe
mov
aas
repz
mov
push
orb
jp
adc
mov
adc
adc
mov
xchg
loop
mov
mov
cltd
xchg
mov
jbe
aam
add
dec
cmp
mov
cmp
pop
leave
out
call
sub
jge
xor
scas
outsb
cmp
mov
jg
dec
ds
mov
adc
xchg
nop
pop
or
popa
lahf
mov
mov
cwtl
bnd
mov
ficomps
adc
aam
or
leave
pop
out
pop
inc
mov
adc
dec
pop
aas
js
jge
test
or
popa
sti
int
adc
stc
push
test
xor
cmp
inc
mov
je
imul
mov
inc
aad
adc
inc
call
push
lock
push
jmp
sub
and
jb
push
stos
ds
shll
adc
sbb
push
lods
xor
xchg
cmpl
arpl
cmp
popa
ja
pusha
shrl
push
adc
ja
and
iret
mov
mov
dec
xor
adc
out
push
std
je
ljmp
aad
xor
or
add
mov
adc
mov
mov
mov
mov
dec
mov
mov
pop
push
and
aaa
cli
push
dec
jb
sbb
push
mov
iret
fnstsw
xor
test
out
xor
fstpl
push
addr16
enter
pop
jg
push
mov
lahf
mov
bound
mov
fisttps
cmpsb
xchg
push
jns
dec
jmp
pop
cmp
lea
sub
adc
pop
and
add
imul
xchg
sbb
insl
out
cmp
mov
dec
xchg
or
shlb
inc
jo
arpl
jbe
pop
adc
cmp
call
sbb
fimuls
xlat
jnp
jns
cmp
cmp
movsl
pop
push
cmpsl
cmp
loopne
add
sbb
lock
ret
cmpl
ja
fistps
in
ret
jbe
repz
out
out
movsl
bound
mov
fwait
adc
mov
inc
xor
into
das
sub
adc
rcrl
mov
addl
mov
add
cmp
xor
or
sbb
movsl
test
lods
cmp
rorl
xchg
cwtl
clc
repz
xlat
jne
sti
sti
mov
push
cmp
mov
mov
mov
fs
inc
push
cmp
imulb
repz
mov
pop
cltd
dec
hlt
adc
push
pop
inc
ret
cmpsb
ss
jge
stos
testb
mov
xor
xchg
outsl
pop
pop
inc
pop
adc
out
inc
ja
jns
mov
xchg
mov
sub
pop
jge
mov
add
xor
pop
dec
cmp
xor
call
mov
mov
add
adc
and
push
and
or
push
or
xor
xor
push
push
call
mov
movl
movl
movl
movl
xor
jmp
leave
xchg
dec
sub
sub
mov
icebp
and
sbb
jl
daa
inc
into
sbb
mov
xlat
rorb
mov
scas
sbb
fld
test
xchg
pushf
pop
jmp
and
jns
lods
dec
test
js
popa
add
stos
cltd
pop
adc
std
dec
adc
aas
data16
enter
aaa
fsubrs
inc
nop
insb
adc
data16
repnz
xlat
jmp
adcb
inc
outsl
mov
and
cld
movsb
rcll
mov
int3
movsb
pop
mov
sub
cli
mov
xchg
adc
test
std
mov
mov
mov
lds
shl
cmp
aaa
fnstsw
lret
hlt
push
fsubs
fabs
add
sub
cmp
out
sarb
movsl
mov
mov
mov
add
pop
cmc
and
cmp
iret
pop
fs
push
cmpl
lock
fnsave
into
fwait
mov
add
sbb
addr16
out
add
mov
sbbb
xlat
daa
loope
out
inc
fimuls
fcomip
or
and
addr16
repz
inc
andb
aas
xchg
imul
addl
fisubrs
loop
cmpsl
inc
rorb
les
test
cmpb
sbb
shl
jae
push
outsb
jle
popf
sbb
orl
xchg
mov
iret
cmp
xchg
jl
mov
adc
lods
je
adc
and
adc
push
jo
in
movsb
aas
lods
adc
cmp
mov
mov
or
mov
pop
ja
sbb
dec
cmpsb
inc
jg
rcll
inc
shr
mov
xor
js
push
cmpsl
shrb
sub
inc
addr16
push
mov
jb
sub
fs
push
inc
notl
jbe
cmp
mov
dec
sahf
jnp
mov
adc
insl
xor
insb
mov
push
push
lcall
pop
push
test
icebp
nop
mov
sub
mov
mov
iret
xor
test
in
ljmp
les
clc
stc
movl
push
inc
mov
mov
mov
push
push
push
call
mov
mov
or
or
push
add
push
adc
push
push
call
mov
lea
xor
mov
jmp
insl
jmp
cwtl
xchg
popf
pusha
outsl
mov
jl
mov
test
int3
mov
xchg
xchg
push
jo
inc
mov
insl
add
mov
xor
lahf
sbb
outsl
cmp
mov
in
out
movsb
cwtl
mov
cli
jle
addb
call
mov
push
sbb
stos
xor
pop
xchg
call
jle
adc
enter
in
and
mov
cs
jle
pop
mov
xchg
inc
mov
mov
icebp
cmp
in
test
pop
xlat
and
popf
mov
rcrb
fists
cld
or
sub
inc
jge
in
rcrb
and
push
cmp
ds
je
jnp
hlt
leave
popa
and
mov
inc
mov
loopne
mov
sbb
je
adc
mov
push
pop
aad
mov
in
ds
mov
test
aam
inc
xchg
jmp
fcomip
cmp
cmp
pop
push
addb
pop
lds
and
jge
ficompl
loopne
dec
repz
jae
lcall
in
ljmp
imul
andl
lcall
nop
add
das
cld
mov
push
aaa
out
addr16
mov
fimull
sbb
mov
das
stc
daa
sub
or
pop
cmpsb
or
dec
insl
sbb
xor
imul
pop
cltd
aaa
inc
cmp
add
fstpt
mov
jns
daa
in
xor
jno
imul
dec
fimuls
lret
jl
in
jbe
arpl
xchg
mov
mov
mov
std
xchg
mov
push
xchg
xchg
enter
out
lret
xchg
add
out
mov
mov
inc
mov
popa
loopne
adc
cmpsb
fisttps
or
ds
add
js
mov
adc
pop
repz
sti
mov
adc
xor
or
mov
mov
jge
sub
cmp
rcrl
dec
xor
mov
lret
push
sbb
jl
jo
test
hlt
sub
mov
movl
mov
movl
mov
mov
sub
mov
xor
jmp
push
xchg
mov
and
int
mov
enter
test
sub
daa
jle
xlat
mov
dec
mov
ljmp
lock
into
dec
dec
mov
lret
inc
imul
movsb
subb
fcom
icebp
scas
sbb
push
leave
sub
mov
or
ds
pop
push
add
dec
push
inc
rclw
int3
loop
scas
ret
ss
loop
push
or
mov
orl
push
jbe
outsb
in
pop
mov
xchg
arpl
lods
inc
add
cmc
out
fwait
test
insl
mov
insl
or
cmpsb
movsb
or
insl
dec
sbb
test
sarl
test
and
icebp
push
ja
pusha
xchg
cmpsl
xor
jno
cld
pop
ja
xor
mov
mov
sbb
dec
mov
add
fildl
adc
js
xchg
enter
mov
mov
iret
lret
out
faddl
in
pop
pusha
ljmp
mov
pop
mov
push
add
cmpsl
jge
dec
popa
inc
mov
and
cli
cmp
lahf
jmp
out
adc
jmp
aaa
movsb
push
cltd
inc
int
scas
jl
inc
les
mov
push
rcrb
sbb
pop
and
iret
mov
leave
or
lods
hlt
pop
pop
mov
adc
lock
xor
cmp
arpl
lods
and
push
mov
xchg
inc
jp
inc
fucomp
pusha
iret
add
jae
adc
sub
push
lret
sbb
cld
gs
roll
adcb
stos
je
or
cmp
xor
popf
mov
pop
adc
adc
dec
test
sub
lods
cli
sbb
iret
jmp
insl
inc
or
mov
xor
ret
push
cmc
iret
ds
data16
call
dec
movsb
dec
repz
xchg
je
cpuid
lret
enter
subb
popa
push
call
inc
adc
jo
xor
jge
adc
dec
add
pop
jge
and
ss
sarb
out
in
call
div
mov
xor
or
jmp
push
and
mov
jl
nop
sbb
test
daa
shl
ja
addb
jae
sbb
sti
repnz
mov
xchg
daa
sahf
cltd
xor
sbb
xchg
xchg
lds
bound
xchg
fnstcw
mov
lods
xor
in
mov
repnz
pop
or
test
inc
or
and
jmp
ret
push
dec
jnp
test
cmp
mov
lock
mov
inc
ljmp
out
or
shlb
dec
lock
jns
cmp
cmpsb
sahf
xlat
test
jecxz
cltd
je
lods
sahf
xchg
out
ljmp
ret
daa
sub
adc
nop
sahf
out
fidivrs
push
call
insb
mov
out
mov
mov
lock
test
jmp
shlb
push
pop
mov
xchg
leave
pop
inc
outsl
fwait
push
int
xchg
in
mov
ds
negl
fwait
popf
jl
xchg
xlat
pop
cwtl
or
fdivrs
gs
sub
loop
imull
mov
cli
stc
jbe
cmc
push
loopne
dec
mov
das
dec
push
sbbb
loop
pusha
xor
sbb
push
fisubrs
fstpl
aaa
cmp
push
and
stos
scas
ss
lock
jne
out
pop
in
ljmp
mov
inc
push
ret
add
stos
xlat
iret
pop
dec
pop
push
xchg
sub
xlat
loope
jl
mov
aaa
dec
inc
ret
pop
aam
nop
shrb
dec
push
mov
test
lods
aam
jl
xor
in
imul
mov
in
hlt
repz
push
mov
add
cmp
cmpsb
insb
int
das
mov
fistpl
jno
pop
sti
negl
or
sub
push
inc
adc
ljmp
addr16
xor
icebp
cmp
push
addr16
or
push
cmp
mov
push
testb
jns
jg
stos
sbb
dec
movsb
mov
rcr
dec
and
in
adc
pop
inc
add
cli
push
push
jle
kortestw
lods
aad
std
popa
cmp
mov
test
out
mov
les
push
sbb
mov
xor
sbbl
dec
or
inc
inc
hlt
jg
add
movl
movl
mov
add
mov
and
lea
mov
mov
mov
movl
movl
movl
mov
mov
sub
add
xor
add
mov
div
mov
xor
pop
pop
or
mov
movl
movl
jmp
bound
and
lds
adc
mov
sbb
sub
or
scas
cmp
aas
adc
xor
lea
fmul
xchg
les
add
nop
xor
jp
and
xchg
outsb
jp
push
call
mov
cmp
scas
mov
mov
ffree
scas
mov
push
sbb
xchg
mov
dec
adc
add
sbb
in
sti
jns
and
scas
lods
iret
dec
iret
js,pt
insl
cli
inc
sbb
push
popa
mov
mov
fidivs
cmpsb
aad
cltd
jae
mov
pop
test
mov
mov
push
adc
dec
das
or
int3
lds
xor
xchg
push
ljmp
mov
loopne
inc
mov
pusha
sbb
pop
pop
xor
movsb
dec
push
pop
test
jae
or
daa
push
fcompl
daa
xchg
insl
addl
arpl
pusha
ficoms
and
cltd
or
jno
add
xchg
jbe
lock
in
mov
jmp
into
lahf
jmp
or
sub
shrb
xlat
mov
push
add
out
aas
popf
mov
xchg
cmpsl
push
andl
add
jp
popf
out
pop
push
shll
cmp
jbe
jo
sti
shrb
mov
sarb
insl
mov
inc
cltd
addr16
adc
and
mov
mov
and
das
mov
mov
imull
bound
xchg
jnp
xchg
jns
or
pushf
cmp
add
lret
ja
fs
scas
jge
fcompl
lds
bound
lods
adcb
in
cmp
das
aam
mov
lcall
pusha
xchg
arpl
xor
jo
movsb
rol
in
pop
push
addb
cmc
or
fcmovnu
jmp
push
cmp
js
mov
mov
sbb
iret
mov
pop
inc
pusha
sbb
dec
testb
cld
mov
fs
aam
lea
or
add
popf
mov
enter
or
dec
or
shrl
sub
or
mov
imul
mov
div
leave
ret
push
mov
sub
push
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
jmp
dec
mov
aam
movsb
sub
bound
mov
jns
sbb
adc
loope,pt
ficoml
add
xlat
scas
pop
xchg
movsl
imul
mov
repnz
add
fmull
test
mov
enter
xchg
ret
push
lret
mov
xor
push
dec
push
aam
mov
call
ficomps
std
push
sbb
push
push
popf
mov
push
jg
sub
int3
in
cmpsb
xchg
out
jnp
jno
dec
lret
cmpl
mov
loopne
loopne
push
enter
xchg
xchg
pusha
cmc
je
aam
xchg
push
cmp
fmull
pop
mov
pop
adc
mov
icebp
out
ja
jp
mov
dec
or
les
pop
push
fimuls
loopne
jne
sub
dec
xchg
test
loope
and
addr16
mov
push
sub
and
pop
push
and
adc
inc
jmp
cmc
sub
cmpsl
rorb
mov
jns
scas
mov
pop
call
sbb
je
addb
stos
inc
aas
in
std
fists
repnz
fadds
popf
sbb
lret
and
sar
daa
xor
stos
dec
dec
inc
mov
rclb
leave
jmp
test
push
fistl
dec
mov
add
aad
pop
mov
fcmovb
mov
push
adcl
xchg
cs
int3
cmp
xor
mov
mov
jns
mov
push
pop
jp
pop
enter
std
xchg
xchg
popa
or
test
jo
mov
ss
imull
inc
insb
xchg
mov
imul
rolb
jbe
jle
fdivrl
adcl
fildl
mov
pop
and
adc
jno
outsl
xchg
addr16
std
xor
push
adc
dec
fdivrp
popf
orl
mov
rclb
inc
lea
mov
nop
jge
xchg
fwait
out
inc
loope
cmp
dec
fistl
mov
rcrb
xor
in
bound
sti
testb
xchg
pop
mov
pop
sub
pushf
addr16
fmuls
xchg
mov
jg
mov
ss
pop
push
xlat
cli
nop
cvtpi2ps
dec
mov
in
out
or
push
jg
push
mov
mov
ja
cli
jne
mov
mov
cmp
mov
shrl
pop
sub
lds
cli
outsl
or
jg
out
jb
cmp
xchg
jne
xor
mov
mov
mov
test
pop
lcall
and
sub
push
popf
and
rclb
add
inc
lret
fstps
mov
or
jge
outsl
xor
cvtps2pi
pop
daa
cmpsb
fildll
inc
jne
cmp
fwait
xchg
lret
xchg
fs
and
push
jo
adc
or
dec
pop
hlt
push
jne
mov
inc
xchg
fbstp
push
pop
sub
xor
sub
mov
xchg
lahf
dec
in
hlt
es
inc
jae
inc
sub
out
sbb
inc
jmp
stc
fistps
mov
push
push
mov
mov
insb
add
add
jne
inc
sbb
pop
clc
push
mov
sbb
sbb
jno
mov
mov
sub
or
sahf
or
inc
dec
aam
fdivl
aas
xor
adc
fildl
xchg
loope
arpl
mov
push
jmp
lds
or
push
add
mull
mov
pushf
call
incl
imull
fwait
orb
and
pop
push
idivb
pop
mov
push
and
adc
pushf
mov
push
jnp
std
lods
mov
dec
cmpsl
test
out
mov
pop
adc
sbb
xchg
cwtl
ds
add
mov
insl
fsubl
dec
cmpsl
dec
push
icebp
pop
inc
xchg
repnz
cmpsl
stos
hlt
adc
inc
jnp
inc
mov
in
movsl
pop
mov
jg
jg
jp
dec
inc
pop
dec
xchg
dec
push
sbb
xor
ljmp
push
incl
push
incb
inc
pop
mov
pop
out
aam
adc
in
adc
jle
pop
hlt
popw
sti
xchg
adc
outsl
or
shll
popa
rorl
jno
push
push
cmp
xor
notb
hlt
add
rol
add
jg
in
dec
xchg
add
sub
jg
mov
movb
sub
imul
add
ljmp
adc
pop
into
sub
or
sbb
lahf
xlat
jecxz
mov
xchg
cltd
jl
push
movsl
lret
cwtl
pop
test
push
or
setae
jbe
inc
adc
in
orl
jmp
cwtl
nop
gs
imul
fidivrl
or
push
sbb
sahf
jbe
sarl
jne
cmpsb
pop
incb
outsl
scas
aas
lret
out
rol
pop
mov
mov
mov
das
movsl
test
mov
int3
lods
insl
lods
imul
xor
dec
push
sub
lds
inc
cmp
and
add
jle
loopne
mov
mov
or
xchg
test
inc
ljmp
jnp
in
movsb
fwait
into
rcrl
rcl
adc
and
data16
rclb
test
pop
ss
into
push
aam
xor
js
pop
jns
mov
ljmp
mov
mov
push
stos
fadds
push
loop
js
jae
in
jb
aad
xor
jnp
jg
lods
mov
xor
lahf
inc
xchg
sbb
fstl
addb
push
xor
dec
cs
cmpsl
imul
lahf
adcb
rclb
mov
cld
add
ret
push
ret
xor
insl
out
movsl
ret
cmpsl
shlb
mov
inc
fldl
insb
in
insb
xchg
dec
dec
fadd
sbb
cmpl
dec
dec
fldenv
cmp
mov
cmpsb
popa
imul
lahf
nop
notl
xor
xlat
mov
hlt
dec
fsts
lcall
sahf
movsl
xchg
xchg
mov
mov
xchg
pop
dec
push
add
ljmp
dec
inc
add
movl
movl
movl
movl
movl
movl
movl
movl
push
movl
mov
mov
push
push
push
call
mov
mov
xor
mov
mov
mov
jmp
das
ret
pop
sub
ret
xchg
mov
cmp
sbb
sbb
sbb
insl
lcall
dec
mov
jne
jne
push
sbb
sub
fisubs
in
stc
nop
pop
xlat
mov
sbb
out
cmp
dec
pop
aas
cltd
cmp
adc
ljmp
nop
leave
stos
push
jle
sbb
adc
in
in
enter
xor
push
fcmovbe
ja
or
pushf
pop
clc
pushl
movsl
push
std
test
cmp
dec
stc
or
les
dec
dec
jo
xchg
inc
fmuls
ljmp
nop
lock
sbb
adc
fsubp
dec
or
cmp
fists
dec
imul
mov
nop
cli
pop
adc
out
aaa
sub
outsb
iret
sti
jecxz
mov
subb
push
inc
or
or
and
mov
test
loopne
shll
pop
jl
xor
inc
inc
lds
xchg
dec
aad
imul
es
mov
xchg
add
cmpsl
shrl
xchg
mov
and
push
or
add
nop
mov
add
pop
jns
dec
fcompl
and
jg
nop
ret
loop
cld
test
nop
repz
sti
inc
imul
sub
mulb
outsb
cltd
arpl
pop
add
mov
enter
jb
push
mov
dec
test
cwtl
sbb
in
mov
xchg
stos
cmp
or
lcall
dec
imul
jg
pusha
push
inc
sbb
push
mov
xor
lret
insl
popf
inc
in
cmc
mov
lret
mov
pop
push
jne
stos
cwtl
cwtl
adc
cmpsl
push
ret
push
mov
pop
lcall
cmp
sbb
inc
pushf
das
mov
std
aam
negb
xchg
jg
add
ljmp
or
out
and
test
add
cmpb
jl
pop
mov
and
jnp
aas
shlb
lods
dec
xor
inc
jmp
js
lods
cs
insl
jle
repz
inc
jmp
dec
stos
push
adc
lcall
cld
xor
inc
lea
lret
mov
cwtl
jecxz
mov
in
movsl
add
js
push
xor
dec
adcb
into
inc
or
jle
inc
movsl
call
xchg
pop
mov
stos
and
lds
hlt
rcr
shrb
loopne
or
mov
out
js
adc
adc
mov
inc
mov
xchg
push
mov
rolb
dec
cmc
stos
push
cwtl
pusha
cmp
bound
lods
sub
bound
pop
add
xchg
mov
cld
and
jl
notl
pop
push
push
leave
push
fsubl
xchg
insb
int
dec
call
jle
push
jle
mov
fucomp
pop
out
movsl
sbb
cmc
xchg
xlat
dec
jbe
insb
in
pop
sub
roll
lret
incl
xor
push
repnz
sbb
pusha
adc
mov
lods
adc
jns
imul
icebp
cmp
add
or
mov
mov
mov
xor
or
add
cltd
adc
cmp
jne
cmp
je
mov
mov
mov
mov
add
adc
or
mov
or
mov
push
push
push
push
call
mov
mov
and
mov
mov
jmp
fs
cmp
cmpsb
dec
adc
cltd
jb
sbb
sbb
and
cmp
mov
sbb
xchg
gs
and
jmp
mov
xchg
hlt
mov
popa
pop
sub
mov
or
dec
leave
aad
mov
dec
imul
cmp
pop
jae
adc
ja
sbbb
sbb
dec
popf
push
into
xchg
or
les
push
sub
cmp
fsts
popa
xchg
adc
ret
mov
or
in
xor
js
fsubs
popa
lret
push
xchg
js
out
sub
js
push
mov
xchg
test
xlat
imul
xchg
ret
and
pop
lods
jecxz
dec
mov
xor
cs
jnp
enter
ljmp
es
mov
add
imul
lds
ret
sub
xor
iret
lods
and
lds
mov
stc
jl
cld
push
pop
test
lods
setae
push
sub
or
mov
push
dec
shl
das
adc
inc
mov
dec
dec
sbb
jecxz
lahf
cmp
inc
mov
push
push
pop
add
mov
adc
fnstenv
adc
add
inc
adc
ja
stos
fisubs
imul
into
mov
pop
cltd
and
clc
comiss
xor
ja
sub
out
out
out
insb
xor
pushf
cmp
adc
andl
loop
imul
jp
jg
lret
and
in
add
pop
dec
rcrb
sbb
int
out
rcrl
mov
inc
xor
addb
jnp
lcall
test
mov
cmp
dec
mov
popf
and
fs
ss
and
sub
sbb
sub
mov
pop
push
push
pushf
xchg
popa
inc
in
stc
sbb
dec
sub
xor
fwait
imul
pop
fwait
iret
and
imul
jg
cli
daa
pushl
test
mov
xor
insb
sbb
insl
aad
mov
xor
jno
add
cli
int
nop
sbb
push
and
iret
aam
in
sbb
sbb
xchg
mov
pushf
add
pop
sarb
and
jg
cwtl
ljmp
imul
je
push
loop
mov
xor
adc
xchg
inc
pop
mov
ret
lds
andb
xchg
addr16
and
enter
stos
mov
into
popf
adc
sub
cwtl
pop
lea
push
sbb
cmp
xor
mov
loop
sub
psraw
push
adc
xchg
xchg
stos
pop
add
xchg
loope
inc
push
dec
cmp
lods
inc
inc
in
ds
inc
fnsave
sub
test
ljmp
fucomi
xor
lret
popf
pop
add
test
mov
fwait
jmp
cmpl
xor
fmul
xor
inc
pop
push
xor
filds
mov
and
xor
xor
xor
cmp
jne
cmp
jne
mov
mov
add
or
mov
or
xor
lea
xor
mov
and
add
mov
xor
xor
div
mov
mov
xor
imul
mov
push
push
jmp
sbb
sbb
jo
xor
sbb
jns
sbb
push
insl
xchg
loopne
fs
leave
xchg
shll
negb
mov
push
repnz
cmp
adc
cmp
orl
dec
int
mov
xchg
adc
popa
adcl
pop
scas
cld
adc
adc
add
arpl
daa
add
pop
jmp
rcrb
push
mov
xchg
in
mov
in
hlt
xor
mov
jmp
jne
pop
mov
push
and
repnz
mov
mov
and
mov
mov
clc
shrl
mov
adc
xor
xor
cwtl
or
xlat
sbb
mov
or
insl
mov
xor
and
push
push
cli
jle
push
lods
inc
xchg
sub
addr16
rcrb
mov
repnz
xchg
push
xchg
shlb
mov
sub
pop
jb
xchg
cltd
loop
mov
iret
shll
fstl
mov
nop
adc
stos
push
pop
or
fsubrl
out
push
dec
mov
mov
sti
loopne
or
jmp
pop
adc
outsb
mov
pop
scas
bound
scas
mov
or
inc
xor
mov
into
pop
jns
gs
leave
dec
add
stos
jbe
adc
sub
sbb
inc
inc
dec
in
mov
jnp
arpl
mov
xor
enter
lahf
sub
or
iret
scas
xlat
xor
in
xor
cwtl
pop
iret
inc
fisubl
mov
or
cmpsb
ds
jge
dec
mov
pop
mov
sub
inc
sbb
dec
cli
fisubrl
out
push
inc
and
jge
pushf
fs
stc
outsl
mov
jge
jb
mov
cs
mov
stos
mov
ret
mov
mov
pop
arpl
dec
dec
mov
fs
cli
or
inc
sub
mov
int
sub
cmpsb
int3
mov
jl
and
jge
mov
mov
xchg
ljmp
ret
ljmp
ret
push
lock
std
pusha
in
push
push
imul
fidivrs
bound
inc
add
cmp
xchg
rcrl
in
jne
add
mov
ljmp
cmpsl
cmp
loope
cmp
xor
cmp
push
ficoml
loop
popf
ljmp
test
clc
xchg
mov
imul
mov
or
in
or
scas
xor
inc
out
mov
out
dec
jle
loope
dec
dec
stos
add
push
lret
out
mov
xchg
jmp
mov
aas
jle
inc
pmuludq
gs
xlat
nop
outsl
jb
adc
out
or
or
aam
add
xchg
jbe
mov
adc
mov
in
dec
shl
mov
and
rclb
push
call
scas
mov
hlt
mov
adc
jp
cli
and
mov
add
mov
cli
dec
jb
lods
jge
or
sti
rcr
push
loopne
xor
mov
lea
mov
mov
lea
mov
mov
or
xor
div
mov
add
xor
add
mov
add
mov
mov
mov
mov
sub
mov
sbb
mov
xor
mov
xor
jmp
adc
xor
lods
int3
push
stos
pop
data16
jns
sbb
xor
daa
push
add
popa
push
out
pop
xor
aas
pop
in
js
std
hlt
push
mov
clc
mov
fcom
cld
out
fsubl
add
adc
mov
xchg
pop
adc
add
fldenv
xor
push
bound
repz
cmp
mov
cmpb
cmp
inc
rcr
test
mov
push
pop
add
xorb
push
or
loope
vpmacsdd
icebp
sahf
pop
push
cmp
inc
add
pop
enter
inc
lods
cs
fistpll
or
pusha
aam
stc
push
cmp
subl
out
scas
mov
pop
lods
mov
and
adc
nop
cwtl
mov
addl
mov
sub
push
outsl
aam
and
push
mov
shld
adc
xchg
mov
mov
sub
sti
std
test
dec
popf
cmpsl
inc
imul
repz
scas
inc
xchg
xchg
scas
dec
fwait
daa
in
inc
adc
divl
or
dec
insb
fisttps
popf
out
out
in
lock
hlt
mov
or
xor
pcmpeqb
and
dec
mov
xor
fidivrs
mov
add
imul
mov
sub
ret
cltd
or
and
dec
inc
out
inc
cmp
in
inc
cmpsb
xchg
dec
mov
mov
cmp
add
and
sub
adc
jbe
or
mov
daa
scas
pop
dec
dec
rcrl
and
cmp
mov
daa
inc
idivl
shl
mov
in
cmpsl
xchg
xchg
lods
cmp
jae
call
push
enter
ret
add
insb
cmp
jp
shl
scas
mov
jb
out
decb
test
dec
popa
add
idivl
filds
push
jmp
test
lcall
outsb
sarl
rorl
pop
mov
mov
inc
xor
lock
pop
xchg
or
test
mov
mov
adc
fisubl
pop
inc
jle
fildl
adc
lds
jge
std
or
jae
mov
test
pop
sub
lsl
fcmovb
out
xchg
and
add
pushf
mov
push
adc
jae
in
jne
jmp
xchg
sahf
ficompl
push
sbb
jge
test
adc
sbb
sub
and
fnstcw
cmp
add
jl
xorl
add
xchg
in
pop
arpl
aaa
cmp
mov
mov
and
scas
adc
and
in
nop
ljmp
rol
iret
mov
sarl
inc
mov
sub
cli
daa
movsb
add
mov
dec
add
fisubrl
inc
test
int3
mov
xchg
mov
outsb
jle
or
push
mov
push
add
imul
loop
cmc
adc
cmp
in
aas
pop
mov
xchg
cld
sbb
cltd
pop
push
iret
notl
jmp
jns
sub
incl
rclb
icebp
add
adc
push
push
call
mov
sub
push
pop
sbb
mov
xor
cmp
jne
cmp
jne
mov
mov
add
shr
or
mov
xor
xor
add
mov
jmp
or
hlt
add
fistpl
mov
stos
pop
fwait
lret
jo
pop
sbb
jns
sbb
push
in
dec
inc
push
arpl
jge
inc
jle
dec
mov
cld
lock
xlat
jge
sbb
popa
jns
or
mov
lods
sub
pushf
or
stos
mov
imull
cmp
dec
hlt
scas
jp
je
jae
xchg
lods
fwait
test
mov
ret
fldl
lock
mov
cltd
jp
into
adc
jb
scas
stos
push
adc
es
daa
test
jle
idivb
pop
and
and
out
test
popf
testb
mov
scas
push
ja
insb
stos
push
add
pop
mov
out
ss
int3
pop
fs
dec
mov
push
leave
leave
daa
cld
mov
hlt
loope
jnp
je
inc
push
addr16
into
pop
outsl
lret
aad
mov
add
stos
jns
jecxz
jbe
idivl
lret
cmp
les
sub
fstpl
jl
cwtl
ret
dec
imul
outsl
sub
jp
fisubrl
test
addr16
cld
lret
mov
out
fcmovnbe
dec
jmp
sbb
js
pop
jp
js
in
pop
xchg
fwait
arpl
fmul
sub
out
jle
lods
out
ficomps
repz
mov
mov
loop
fcoms
sub
fs
add
mov
mov
lret
jge
mov
jbe
or
test
loop
fnstsw
dec
jl
inc
xor
xchg
sub
mov
pop
push
inc
sub
sub
fs
lock
test
aam
xchg
dec
and
sub
adc
push
sbbb
popf
mov
mov
adc
mov
mov
or
into
mov
lods
cltd
or
mov
leave
mov
shlb
cmp
inc
int3
xchg
push
sti
inc
add
mov
ret
lds
sahf
outsl
aam
in
clc
jo
add
push
push
or
jb
stc
mov
test
mov
sbb
add
out
test
stos
inc
adc
daa
in
popf
sub
xchg
or
lret
pop
rcr
imul
xor
sub
out
rcrb
pop
lock
loopne
aad
pop
out
lea
incb
add
iret
in
aam
mov
nop
mov
jo
mov
lret
push
sub
and
push
jo
popa
clc
je
pop
imulb
pop
iret
push
push
mov
mov
orb
pop
insl
ds
and
jnp
ret
div
jp
mov
loop
std
dec
dec
cmp
into
jle
outsb
xor
cld
out
rdtsc
pop
cmpsb
inc
jle
adc
pusha
adc
dec
sbb
add
mov
data16
icebp
jg
adc
arpl
stos
jb
xor
test
xchg
cs
xor
or
repz
cmpsl
lret
xor
jnp
xor
ds
or
pop
leave
ret
push
mov
sub
push
push
push
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
adc
mov
push
push
or
or
push
push
call
mov
mov
and
or
mov
mov
and
or
xor
xor
shld
shl
shr
xor
or
or
xor
mov
mov
xor
mov
jmp
aas
cmpl
mov
jg
push
pop
sbb
je
sbb
sahf
les
pop
arpl
div
add
mov
arpl
adc
or
push
add
pop
sub
push
jge
repz
adc
bound
lods
xchg
addl
and
jno
adc
mov
out
jle
push
mov
dec
sysenter
mov
je
mov
andb
pop
ds
mov
xchg
out
dec
or
out
cmp
add
insl
shlb
sbb
cwtl
jbe
pop
dec
push
sbb
add
jno
sahf
hlt
push
xchg
mov
pop
movsl
jae
adc
lahf
mov
add
frstor
jb
es
sub
inc
adc
xor
sarl
jnp
push
xchg
rcrb
sub
insl
mov
imul
xor
jno
push
xchg
inc
push
inc
xchg
test
int3
scas
pop
das
pushf
cmp
mov
cmpsl
insl
jae
add
mov
daa
out
insb
xchg
arpl
inc
aam
cld
adc
mov
stc
std
dec
jae
mov
pop
repnz
imul
mov
pushf
cmpsb
ret
pop
lock
fmuls
ficoms
jb
dec
ja
mov
sbb
sbb
pushf
ficoml
push
inc
imul
psrlw
mov
pop
xchg
lahf
mov
dec
jp
imul
addl
hlt
lea
add
mov
push
push
push
je
stos
insl
shrl
and
push
dec
xlat
das
shll
lret
cltd
mov
sarb
sub
stos
out
aam
stc
roll
nop
cmp
fisubrs
and
stos
push
aam
sbb
dec
rcrl
jl
xchg
dec
mov
lcall
call
adc
sub
jae
sbb
in
and
push
xlat
add
adc
dec
pop
nop
outsb
mov
mov
out
mov
in
lcall
jne
pop
jmp
xor
fsts
cltd
cmp
ja
cmp
dec
mov
je
cmp
nop
call
xchg
mov
push
ds
sbb
pop
fwait
dec
ret
add
ljmp
xchg
loopne
mov
sub
inc
into
dec
pop
mov
jmp
inc
xlat
sub
jmp
test
cld
scas
test
in
add
lea
out
push
fdivl
sub
jmp
mov
das
xor
mov
pushl
xor
stos
lods
dec
mov
mov
pop
mov
and
push
sbb
cwtl
pusha
xchg
fisttpll
int3
mov
mov
push
push
push
push
call
add
adc
push
push
push
push
call
mov
mov
mov
xor
xor
xor
add
mov
adc
mov
mov
mov
mov
mov
sub
mov
mov
sbb
mov
sub
mov
sbb
add
mov
adc
push
xor
mov
pop
sub
mov
sub
mov
mov
mov
add
xor
shrd
xor
shl
xor
shr
or
xor
or
mov
push
mov
mov
mov
push
push
push
call
mov
mov
mov
or
mov
or
mov
add
mov
adc
mov
add
mov
adc
add
pop
adc
pop
mov
mov
pop
leave
ret
push
mov
sub
movl
jmp
imul
pop
jbe
mov
fnstsw
push
sbb
and
sbb
and
stc
cmp
pushf
cmp
add
cmp
sbb
mov
push
ret
out
test
dec
stos
pop
adc
xchg
fisttps
cmc
mov
adc
xor
inc
test
mov
adc
mov
jns
in
xchg
sarb
rcr
icebp
push
jo
xchg
divb
leave
dec
xor
pop
aad
mov
ret
xchg
and
push
sub
decl
ffree
mov
mov
loope
sub
xor
inc
xor
in
ja
dec
or
cmp
mov
arpl
push
add
pushf
inc
rcrb
clc
rolb
adc
sbb
loopew
jg
jl
dec
mov
cmpsl
dec
adc
cld
cli
pop
xor
mov
push
dec
mov
xchg
prefetchnta
lds
sti
add
int
cli
xchg
mov
xchg
hlt
fadd
ja
inc
and
mov
fcomps
cli
or
aaa
jno
mov
mov
lahf
bound
inc
xor
scas
cmp
ja
pop
lea
pop
jnp
test
movsl
adc
inc
and
lock
dec
sbb
jle
pop
sub
mov
scas
jmp
lret
add
movsl
ja
jo
mov
lcall
xor
aaa
in
mov
and
lcall
fwait
mov
push
adc
mov
jge
mov
fnstcw
mov
cmp
leave
pop
movsb
dec
push
sub
adc
mov
xchg
in
inc
hlt
adc
jns
cmp
test
and
xchg
mov
out
mov
stos
sti
rclb
mov
dec
jo
bound
movsl
out
or
adcb
jge
mov
push
push
test
shlb
pop
mov
adc
subl
xchg
inc
xchg
movsb
push
daa
sub
mov
aaa
in
fisubs
push
clc
sbb
pop
sub
aas
push
out
test
or
call
inc
lock
sbb
sub
pop
and
lcall
jno
movsl
dec
push
jg
mov
sbb
test
add
pop
daa
rol
inc
in
and
add
inc
call
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
and
add
mov
and
mov
sub
and
mov
mov
imul
add
add
xor
cmp
jne
mov
mov
mov
sub
add
mov
or
mov
imul
sub
add
mov
or
mov
mov
add
imul
add
mov
add
mov
mov
mov
and
mov
and
mov
imul
mov
or
mov
imul
mov
sub
cmp
je
mov
jmp
mov
sub
xor
add
jmp
movl
movl
mov
mov
imul
add
and
add
or
sub
leave
ret
push
mov
and
sub
push
push
lea
mov
mov
mov
mov
sub
sbb
mov
orl
orl
lea
push
lea
push
jmp
pushf
cmp
jl
data16
scas
adc
sbb
push
sub
decb
mov
xchg
rcll
sbb
xchg
dec
imul
pushf
cmp
jns
mov
dec
das
stc
cmp
and
adc
or
jne
or
addb
push
mov
popa
sarb
inc
fimull
or
daa
mov
popa
bound
jne
gs
push
xor
xchg
dec
in
movsb
out
cmp
add
icebp
or
add
test
sub
add
inc
js
loopne
orl
jne
psubusw
xor
fs
shrb
mov
fldcw
les
fidivs
sub
sti
sbbl
lahf
dec
mov
pop
sbb
arpl
lret
leave
in
sarl
sti
push
xlat
mov
cmpsl
out
test
mov
popf
mov
testl
fistpl
iret
cmpsb
outsb
xor
iret
nop
cmc
popf
lock
inc
clc
sbb
push
js
iret
inc
lods
imul
xor
sub
mov
xchg
stos
add
jnp
jmp
adc
test
push
or
stos
sbb
mov
xchg
xchg
jecxz
imul
mov
fs
das
out
cmp
sub
fstl
popf
dec
cmp
scas
and
andb
mov
inc
or
in
aaa
js
fcoms
scas
lret
jl
lahf
test
mov
out
mov
mov
orb
fimuls
dec
and
pop
adc
pop
sub
cmpsb
out
xchg
jo
xor
pop
fsubl
scas
sti
lods
cmp
add
fdivrs
mov
pusha
fimuls
enter
mov
push
jle
push
ss
mov
out
lret
bsr
mov
and
sbb
enter
mov
insb
sbb
int3
pushf
insl
cmpsb
sbb
mov
fchs
pop
outsb
jne
add
mov
cltd
sahf
sbb
in
into
cmp
outsb
testl
mov
arpl
jbe
pop
jp
mov
mov
cmp
leave
movsb
js
lea
repz
mov
jecxz
lea
pop
mov
test
xor
shll
shll
mov
sbb
jge
repnz
in
sub
out
adc
sbbb
jmp
push
or
rcrb
or
imul
cmpsl
in
mov
nop
inc
outsl
add
inc
lds
or
mov
adc
push
shll
push
andl
dec
xchg
in
int
or
adc
pushf
enter
dec
shrb
inc
das
mov
ds
cltd
adcw
add
aaa
cmpsb
dec
addb
mov
jecxz
mov
cs
aaa
xchg
rcrb
cmpsb
jmp
adc
jnp
and
push
pop
ds
xchg
andb
push
dec
pusha
cli
imul
cli
push
pop
daa
mov
popf
ja
nop
ret
and
imul
xor
ret
imul
clc
jmp
out
mov
ljmp
cmpsb
add
and
pushf
in
push
dec
fmulp
dec
in
fidivrl
lcall
push
cmp
lahf
shll
decl
dec
and
pushl
mov
pushl
mov
pushl
pushl
pushl
pushl
pushl
call
pop
jmp
roll
andb
sbb
loop
jl
sbb
stos
adc
sbb
ficompl
sub
jae
sbb
sbb
dec
xor
and
mov
ret
sub
adc
arpl
sub
icebp
sub
or
dec
adc
insl
mov
dec
add
hlt
pop
cli
jp
aad
xor
movsb
ja
es
mov
push
clc
adc
ds
cs
iret
dec
lcall
add
inc
clc
das
ljmp
out
test
mov
stos
mov
shrl
add
jb
and
pusha
sub
jmp
xor
aad
dec
stos
and
test
fistpl
pop
out
lahf
add
push
sahf
cmpsl
das
test
pop
subb
add
aad
lret
outsb
sbb
out
fwait
insb
cmpsl
in
rcll
lock
in
out
into
lods
and
loopne
add
adc
sar
adc
cmpsb
mov
outsl
xor
stc
lods
xor
movsl
sarl
xor
pop
xor
xchg
and
cmpsb
push
pop
outsl
sbb
adcl
arpl
add
pop
inc
jno
cmpsl
into
sub
dec
cmovl
sbb
movsb
fucomi
mov
sbbb
jo
fs
jnp
out
sahf
add
lcall
xor
clc
jge
jns
pop
dec
push
inc
jae
or
adc
add
sub
pop
cmp
cmp
adc
dec
xchg
lock
push
sub
cltd
and
mov
jge
push
test
mov
stos
fs
inc
fwait
xchg
jne
push
xchg
mov
inc
jl
out
int
ja
aas
push
bound
jl
and
inc
inc
in
fldcw
push
mov
loope
bound
jns
es
and
fcmovb
loope
add
cmp
call
bound
sub
jle
jae
int3
sbb
in
cmc
dec
inc
jp
rcl
sti
push
prefetcht0
ficompl
pop
or
sub
push
gs
rcrl
daa
push
mov
adc
pop
fwait
or
nop
add
hlt
add
push
inc
xchg
push
fidivl
cmpsb
mov
inc
mov
call
push
pop
cmc
adc
stos
mov
cmp
imul
add
sbbb
mov
xchg
hlt
add
inc
push
pop
sub
and
out
fwait
sbb
pop
xchg
push
pop
push
sbb
cmp
js
test
int
adc
iret
adc
dec
mov
cmp
fcomps
add
mov
xchg
lret
sbbb
xor
insb
idivl
shl
mov
out
lret
iret
jg
fsubr
xchg
fs
int3
ret
cmp
js
inc
fistpl
jno
mov
ds
sbb
or
pop
leave
imul
mov
or
pop
push
mov
xor
lret
mov
das
in
xchg
push
popa
pop
sub
push
xchg
mov
icebp
mov
inc
cmp
xchg
jmp
jg
out
jecxz
nop
mov
dec
test
jp
test
add
repnz
scas
jl
sarl
xchg
xchg
shll
or
dec
int
sub
xor
mov
in
inc
xor
test
dec
sbb
mov
add
pop
out
mov
out
and
adc
shr
mov
mov
pop
ret
push
mov
sub
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
add
xor
mov
and
imul
xor
push
movl
movl
movl
mov
mov
xor
sub
div
mov
mov
or
xor
mov
sub
mov
mov
mov
mov
mov
mov
mov
mov
imul
and
or
xor
add
mov
mov
sub
add
mov
xor
mov
and
mov
xor
sub
mov
mov
and
lea
mov
shr
or
mov
sub
add
cmp
jbe
pop
leave
ret
push
mov
sub
sub
push
push
push
adc
mov
cmpl
mov
mov
mov
mov
jmp
mov
jne
push
pushl
call
mov
mov
sub
and
and
xor
sbb
add
or
mov
or
shrd
shr
mov
and
mov
xor
mov
add
mov
sbbl
xor
xor
or
mov
add
or
mov
mov
adcl
shl
mov
and
shrd
add
xor
xorl
shr
adcl
mov
mov
xor
or
orl
mov
mov
xorl
mov
sbbl
mov
mov
cmpl
movl
notl
mov
movl
jmp
movl
jl
push
call
sbb
and
xor
xor
sbb
or
sbbl
xor
and
mov
sub
mov
mov
and
mov
dec
mov
cmpl
movl
movl
movl
jmp
movl
movl
jl
push
pushl
pushl
call
and
neg
and
adc
not
sbbl
shl
xor
shld
add
shl
mov
mov
mov
mov
addl
xor
xor
movl
movl
movl
mov
cmp
movl
jne
cmp
movl
je
sbb
mov
movzwl
xor
mov
mov
xor
xorl
shld
addl
shl
xorl
xor
mov
mov
adc
mov
xor
mov
mov
cmp
jne
cmp
jmp
push
inc
shlb
cmp
jo
stc
xchg
mov
notb
sbb
jb
int
push
pop
repnz
sbb
scas
cltd
pop
jbe
or
mov
mov
cld
dec
sahf
cmp
xchg
nop
lock
data16
xlat
ds
lock
adc
aad
loopne
sarl
cmc
lods
sbb
pop
fistpll
adc
dec
rorl
loopne
daa
push
out
adc
add
insl
inc
pop
fwait
or
pop
sub
loopne
or
lds
push
sbb
cmp
jno
inc
repnz
pop
or
inc
xor
and
cmc
jle
stos
dec
mov
add
mov
push
insl
sbb
in
and
adc
push
add
pusha
and
in
out
fmulp
fisttpll
out
imul
mov
jns
and
jmp
xchg
in
adc
xchg
push
fmulp
mov
fsubs
scas
adc
and
pop
inc
push
cmpsb
lods
and
es
xchg
mov
cwtl
subb
test
fadds
push
ret
xor
jecxz
or
lods
push
out
mov
fidivs
sbb
outsb
sub
sbb
and
ret
mov
pavgw
test
jmp
pop
nop
mov
daa
xchg
mov
mov
rcrb
ffree
call
bnd
stc
icebp
jno
jns
mov
sbb
inc
imul
lret
adc
loope
dec
insb
adc
addr16
cmp
cmp
loopne
inc
and
and
pop
scas
xor
in
cld
insb
dec
into
popf
test
pop
jle
lea
lahf
mov
dec
push
jecxz
xor
loopne
push
ds
dec
pusha
push
and
jae
test
xchg
xacquire
movsl
cmp
mov
loopne
add
daa
dec
or
orb
xor
add
orl
mov
cmpl
movl
mov
mov
movzwl
jmp
movl
jle
push
call
mov
mov
sub
add
xor
xor
xor
sub
mov
sbbl
adcl
orl
or
mov
push
cmpl
mov
mov
jmp
mov
mov
jge
push
call
mov
sbb
inc
and
and
orl
and
pop
xor
mov
add
shl
neg
mov
xor
notl
shr
or
mov
or
mov
cmpl
notl
mov
jmp
movl
jge
push
push
call
movzbl
add
mov
andl
andl
mov
sub
sub
inc
mov
adcl
mov
mov
cmpl
mov
movzwl
movl
movl
jmp
mov
movl
jle
pushl
call
or
addl
sub
xor
mov
adc
or
mov
push
cmpl
movl
movl
movl
jmp
movzbl
jle
push
call
orl
and
adc
orl
adc
subl
add
sub
pop
sub
adcl
mov
andl
add
subl
mov
sbbl
lea
addl
mov
xor
add
mov
adc
mov
mov
xor
mov
xor
xorl
xor
shr
orl
shl
incl
or
addl
mov
movzwl
adc
movl
mov
dec
mov
xor
subl
xor
xorl
shr
shl
or
adcl
push
lea
xorl
push
lea
adcl
push
andl
call
mov
mov
mov
xor
mov
xor
cmpl
mov
mov
not
jmp
mov
jne
pushl
push
push
pushl
call
sbb
mov
or
mov
or
inc
xorl
inc
xor
cmpl
mov
mov
movl
jmp
movl
movl
jbe
push
call
adc
add
sub
sbb
orl
sub
shr
movzwl
add
mov
shl
or
subl
push
andl
lea
push
mov
mov
shrd
shr
mov
mov
xor
jmp
rorl
lret
jb
jns
push
testl
sbb
rcr
fs
gs
mov
cmc
inc
add
dec
outsl
cmp
loopne
mov
shlb
dec
lods
add
cld
inc
mov
bound
sub
lock
inc
push
push
adcl
loope
aad
int
and
cmp
aam
ret
nop
xor
sahf
mov
sbb
push
cld
call
sbb
std
arpl
test
cmp
out
mov
pop
jmp
sbb
ljmp
push
xchg
test
or
lea
jns
xchg
mov
ljmp
loope
out
adc
lret
mov
sarb
aad
xchg
fsubp
scas
or
bound
sub
dec
pop
movsl
cmpb
pop
xor
sbb
dec
mov
add
lea
pcmpgtb
fstl
adc
push
scas
scas
sarb
movsb
push
outsb
and
iret
lcall
es
mov
and
aas
sbb
and
lods
nop
jp
mov
data16
sbb
dec
sub
xchg
or
cmpl
jne
cmpsb
push
push
sbb
add
adc
clc
js
inc
imul
outsb
dec
and
pop
pop
enter
sbb
pop
sub
pop
push
xchg
je
ret
aam
mov
outsb
xchg
sub
inc
mov
jecxz
xor
arpl
fisttps
mov
mov
cwtl
xchg
inc
je
cmp
pop
adc
mov
mov
sub
scas
ret
std
mov
or
adc
dec
inc
mov
jle
or
inc
xor
and
fsubl
and
hlt
mov
into
jle
sub
daa
lea
push
add
rcrb
cmp
fldcw
dec
mov
pusha
insl
mov
mov
push
sbb
push
xor
or
lea
push
shl
call
mov
mov
xor
xor
shr
shl
or
push
lea
push
mov
mov
shrd
shr
mov
mov
xor
xor
or
lea
push
shl
call
mov
mov
xor
xor
shl
shr
or
push
lea
push
mov
mov
shrd
shr
mov
mov
jmp
dec
shlb
sbb
ds
jns
movsl
cld
or
gs
notb
sbb
sub
mov
or
dec
pop
shlb
xchg
mov
push
insb
mov
xchg
sbb
mov
mov
fdivl
or
repnz
cmp
nop
mov
mov
aas
or
xor
sbb
jecxz
jbe
cwtl
cmpsl
mov
and
cmpsb
cmp
mov
imul
mov
aad
pop
xor
cmp
mov
jo
popf
jno
popf
add
scas
shl
add
adc
ficoms
sbb
dec
mov
repz
push
xor
cltd
push
jg
jnp
dec
push
mov
in
jbe
loopne
roll
pop
sbb
in
cli
add
stos
sub
fnstsw
sub
cmp
roll
inc
jle
jg
adc
fstpt
jne
xor
add
jmp
dec
adc
push
push
test
icebp
jl
cmp
lahf
les
add
cmp
jecxz
mov
cwtl
aad
cmp
inc
inc
into
pop
jns
fstpt
test
sub
inc
cmp
test
std
gs
hlt
lds
imulb
sbb
outsb
jbe
add
xlat
lahf
or
push
or
sub
add
bound
cmp
sub
jbe
xchg
sti
dec
pop
adc
cmpsb
js
nop
ret
dec
cmp
or
pop
or
mov
xchg
sbb
mov
sub
sub
scas
mov
xchg
enter
mov
push
insl
js
or
jbe
test
shrb
pop
out
cwtl
mov
mov
inc
sahf
mov
jo
repz
cmp
int
fistps
push
sbb
mov
daa
xchg
xchg
xchg
mov
mov
rol
ljmp
xchg
and
addr16
adc
shlb
jmp
cltd
xor
xor
or
shl
mov
jmp
in
je
push
fimull
movsl
mov
inc
xor
sbb
adc
sbb
jmp
pop
jb
daa
ds
sbb
mov
mov
ret
rorb
sahf
je
sti
imul
sub
inc
addr16
xlat
outsb
inc
cmp
lods
shrl
into
mov
dec
jle
addr16
sbb
enter
dec
pop
and
add
setge
inc
lock
dec
xor
dec
and
loopne
imul
cli
xchg
dec
mov
xchg
cmp
mov
xor
sbb
jns
add
iret
hlt
dec
inc
fadd
or
push
fbld
je
bound
ljmp
or
adc
inc
pop
test
mov
jo
mov
push
ljmp
jae
lock
test
inc
icebp
mov
outsl
mov
mov
or
ds
pop
add
jb
jo
xchg
in
jns
dec
fistps
push
and
loope
add
jg
aam
fcoml
dec
lret
and
cs
xchg
push
aam
pop
pop
adc
xchg
aas
int3
cmpsl
dec
imul
adc
xchg
lock
test
addr16
insl
dec
xor
cmp
aam
add
pusha
dec
rorb
fisubl
sub
dec
notb
rol
and
sbb
gs
je
mov
imul
sbb
addl
es
pushf
xor
std
aad
sub
mov
stos
mov
fwait
imulb
dec
shr
insb
fistl
mov
xor
nop
mov
add
add
jno
mov
aad
lds
xor
jns
mov
das
pusha
jno
or
sti
jle
xchg
mov
int3
cwtl
xor
dec
jo
add
add
push
fsts
mov
sarl
xor
adc
push
adc
fsubrs
aas
rcr
ljmp
add
ljmp
adc
into
xor
or
add
lea
push
shl
call
mov
mov
xor
shl
xor
shr
or
push
lea
push
mov
mov
shrd
shr
mov
mov
xor
shl
mov
xor
or
mov
shrd
shr
mov
mov
xor
xor
or
shl
add
mov
mov
shrd
shr
xor
mov
mov
xor
or
add
lea
push
shl
call
mov
mov
xor
xor
shr
shl
or
mov
lea
push
mov
mov
shrd
shr
mov
mov
xor
xor
or
push
mov
mov
push
pushl
shl
call
lea
push
mov
mov
shrd
shr
mov
mov
xor
xor
or
push
mov
push
pushl
shl
call
mov
mov
mov
mov
mov
mov
rol
mov
xor
cmp
je
mov
mov
xor
test
je
mov
mov
movzbl
sub
mov
rorb
mov
mov
inc
cmp
jb
dec
jne
mov
mov
shrd
shr
mov
mov
xor
xor
or
push
add
push
lea
push
shl
call
mov
mov
shrd
shr
mov
mov
xor
xor
or
add
push
push
mov
shl
mov
shrd
shr
mov
mov
xor
xor
or
add
push
shl
call
push
jmp
fdivrl
sbb
mov
mov
and
sbb
notb
sbb
idivl
fistps
jmp
push
mov
inc
enter
push
sbb
xchg
pop
iret
movsl
inc
mov
pop
es
jno
add
jns
arpl
jecxz
cmc
pop
sarl
push
ss
xchg
rcrb
mov
jl
add
test
push
mov
aam
xor
inc
daa
pop
lods
mov
and
repz
cmp
jno
fstl
mov
dec
mov
lea
cmp
or
shlb
inc
and
iret
cmpsl
mov
fimuls
jns
lds
push
ja
insl
inc
jbe
fwait
xchg
cmp
popa
xchg
inc
push
dec
cltd
cli
sub
ret
or
std
out
fwait
rcl
add
and
cwtl
pusha
lahf
lock
pop
daa
inc
or
sub
filds
sbb
aas
push
cmpsb
or
mov
ja
aaa
sbb
pop
lods
mov
push
add
out
jge
mov
loop
clc
sbb
mov
mov
movsl
mov
lea
sub
ja
xor
imull
mov
adc
jns
es
and
cmp
pusha
das
xchg
xchg
xchg
cltd
mov
in
int3
and
mov
lret
or
sahf
mov
fldcw
icebp
xchg
mov
sub
js
ljmp
mov
xor
dec
std
movsl
addr16
sub
push
pushf
clc
repz
repnz
xor
sub
xlat
insl
aas
or
pop
stos
gs
or
jle
repnz
fcoml
add
pusha
movsl
fnsave
cmc
xchg
jge
push
and
sub
out
xorb
mov
rolb
imul
leave
cmp
sub
xchg
dec
daa
inc
pusha
jnp
lcall
cli
dec
fldcw
lea
push
mov
mov
jmp
aaa
and
dec
mov
push
out
ss
sbb
notb
sbb
in
mov
ds
cwtl
push
pusha
mov
lock
xor
jo
mov
int
inc
aas
shl
sbb
pushf
adc
cmpsl
sub
orl
mov
cmp
jp
jb
imul
jns
shlb
outsl
invd
dec
inc
dec
inc
pushf
mov
push
popf
out
inc
jmp
int
jne
add
ficomps
lcall
jo
jbe
xchg
xor
bound
jne
push
es
icebp
inc
and
or
xor
mov
mov
sub
xchg
cmc
lock
pop
icebp
push
repz
cs
jnp
bound
lods
xchg
xor
jp
mov
push
add
push
int
loop
int
mov
testb
loopne
sub
fldcw
frstor
mov
xorl
dec
push
or
or
movsl
mov
push
repnz
shl
mov
fcmovb
int3
scas
aam
xchg
xor
movsb
in
aas
xchg
pop
fwait
or
mov
xchg
adc
mov
or
xor
jae
jne
jb
loope
pusha
sub
cmp
mov
pop
push
je
pop
fnsaves
mov
js
ss
cmc
iret
cltd
movsb
mov
mov
pop
xchg
pushf
cmpl
adc
and
test
int3
cmp
adc
pop
in
lds
ds
aaa
int3
xor
cmp
jge
adc
aad
in
or
dec
negl
loop
sub
jb
xchg
push
inc
jg
inc
aaa
sbb
add
pop
fldenv
push
or
pop
mov
xchg
fwait
in
andl
inc
lret
lock
or
scas
dec
bound
int3
or
pop
les
daa
mov
inc
sbb
mov
lahf
cmp
sarb
arpl
mov
jnp
sub
sbb
push
shrd
shr
mov
mov
xor
xor
or
add
push
shl
call
mov
mov
shrd
shr
jmp
add
bound
cmp
push
fsub
xchg
mov
fsubl
sbb
notb
sbb
ljmp
clc
mov
ret
dec
fsubrp
nop
xor
mov
xor
jne
and
pop
in
xor
inc
cltd
mov
ret
decb
cli
les
scas
aam
in
inc
xor
and
xchg
jle
out
dec
clc
mov
dec
outsl
js
or
mov
jl
sarb
adc
mov
cmp
es
push
cmp
sti
sbb
and
inc
adc
ds
mov
push
inc
loopne
xor
cmp
add
shrl
jnp
pop
sub
push
sbb
adc
out
jmp
cld
push
loop
jg
mov
neg
mov
dec
popl
add
fimull
dec
les
xor
fwait
lds
push
pop
orb
jg
stc
jno
mov
scas
sub
fidivl
out
mov
notl
mov
aam
xor
jns
scas
in
push
mov
outsb
das
xchg
and
dec
fimuls
cmc
rolb
sub
ret
lods
scas
popf
xchg
jge
setge
in
add
test
jmp
scas
xchg
daa
or
add
pop
test
inc
adcb
daa
lock
push
pusha
mov
mov
fimuls
popf
mov
mov
mov
inc
jecxz
add
sbb
push
cmp
cwtl
inc
xrelease
push
jp
sahf
xchg
or
das
in
push
es
rclb
outsb
or
loopne
cltd
mov
mov
inc
scas
adcb
aad
dec
mov
clc
daa
test
cwtl
lret
test
xchg
add
imul
testb
push
cltd
fldenv
mov
pop
push
and
cld
inc
cmp
test
sub
mov
mov
ss
xchg
jb
addr16
mov
mov
pop
xor
xor
pop
shl
or
pop
leave
ret
mov
mov
xorl
or
mov
jne
mov
andl
mul
ret
push
orl
mul
cmpl
movl
movl
mov
jmp
mov
jbe
call
mov
sub
mov
sub
movzwl
or
add
adc
movzbl
or
add
mov
mov
mull
add
mov
mul
add
pop
ret
push
mov
sub
push
push
push
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
xor
div
mov
xor
mov
push
div
mov
xor
xor
sub
mov
lea
mov
mov
sub
xor
mov
xor
or
xor
mov
sub
mov
mov
xor
mov
sub
div
mov
pop
xor
sub
cmp
ja
jmp
mov
movl
movl
movl
movl
mov
mov
mov
sub
imul
xor
xor
div
mov
mov
push
and
mov
sub
sub
mov
jmp
ss
mov
in
movsl
mov
mov
adc
sbb
adc
jecxz
cmp
push
inc
in
jae
movsb
add
rolb
inc
mov
jecxz
sysenter
dec
or
test
lret
insl
scas
fidivrs
mov
lahf
adc
popf
jge
iret
js
pusha
adc
xor
and
inc
je
cmpsl
movsl
arpl
mov
aam
icebp
inc
pop
out
dec
mov
sub
imul
faddp
rclb
icebp
imul
mov
subl
xchg
lahf
push
loop
into
cmp
xorb
in
or
out
aam
ss
xor
fidivl
cmpsb
xchg
and
jg
in
test
ret
leave
xor
test
push
jp
test
dec
imul
push
and
ljmp
std
imul
mov
inc
adc
fs
push
dec
add
push
mov
and
int3
cmp
stos
into
imul
sbb
lea
call
adc
hlt
out
or
jbe
add
cmpsb
lock
mov
push
lcall
xchg
pop
cs
mov
loop
add
pop
negb
aad
stos
xchg
jg
xchg
xor
enter
movb
add
mov
jnp
cmpsb
mov
hlt
ss
push
jge
fstl
insl
push
or
ret
adc
test
fadds
inc
mov
mov
adc
lret
cwtl
int3
push
pop
call
int3
xchg
mov
jle
xchg
xor
push
xchg
cwtl
sbb
inc
jne
daa
dec
sub
lret
cltd
lods
push
or
xor
lcall
ret
mov
das
mov
sbb
iret
out
popf
cmp
xchg
mov
movl
add
and
hlt
fidivrs
jae
sub
jbe
pop
lahf
push
xchg
mov
hlt
pop
sub
adc
ja
cmp
inc
mov
scas
push
and
jle
test
dec
movsb
lods
sbb
int3
xor
mov
xor
and
add
add
mov
mov
add
mov
xor
jmp
cli
push
test
adc
xchg
push
stos
add
sbb
sbb
mov
jmp
les
adc
add
xchg
mov
sbb
push
xor
xchg
jg
test
faddl
mov
sbb
icebp
sub
das
and
jg
shl
add
std
int3
popa
jge
push
int3
xchg
test
and
cmpsl
jnp
pop
sub
mov
push
jmp
inc
cli
ljmp
leave
std
popa
test
stos
in
mov
inc
scas
enter
test
mov
mul
fimuls
add
sbb
aaa
jmp
orb
jecxz
xchg
or
xchg
movsl
je
mov
pop
shlb
jno
fdivr
icebp
aam
rcpps
pcmpgtb
dec
ret
jb
mov
fidivrl
mov
dec
scas
pop
xor
or
jno
frstor
test
add
daa
cmp
icebp
in
std
jne
insl
je
mov
sbb
push
fsubs
fstps
aam
mov
inc
mov
in
add
sti
xor
cli
scas
lock
or
popl
xchg
jg
loop
inc
sbb
scas
lea
xor
and
loope
aaa
mov
sub
imul
mov
xchg
in
stc
fisttpl
xor
outsb
cmpsl
repz
jae
fildll
pop
push
add
jg
lcall
dec
sub
out
xchg
stos
cmc
mov
pop
out
scas
dec
icebp
inc
mov
into
lea
xchg
enter
mov
pop
test
mov
cs
test
flds
insb
xchg
aas
sbb
adc
ss
call
ret
mov
data16
imul
into
sub
outsb
push
push
cmp
test
mov
xchg
or
jmp
push
std
lcall
mov
adc
cmp
mov
mov
loope
mov
sub
push
gs
jp
mov
jg
pop
xor
cs
std
or
push
outsb
xor
or
dec
cs
xchg
xor
cs
jb
dec
mov
dec
jp
xor
and
or
inc
inc
sub
in
scas
lea
push
mov
popa
add
sub
mov
add
mov
sub
xor
mov
xor
or
xor
mov
sub
mov
mov
mov
xor
xor
sub
div
pop
xor
sub
cmp
jbe
pop
pop
pop
leave
ret
push
mov
and
mov
sub
push
push
push
push
pushl
call
mov
movzwl
push
call
test
jne
movl
xor
movl
jmp
subl
mov
cmpl
not
mov
jmp
not
mov
je
push
push
push
push
push
call
mov
add
movzwl
xor
adc
or
or
xor
cmpl
mov
mov
mov
mov
jmp
mov
movl
ja
push
push
call
add
or
or
mov
mov
sub
add
add
movl
movl
xor
or
sbb
mov
xor
or
adc
mov
orl
xor
xorl
imul
adcl
and
subl
sub
cmpl
movl
movl
movl
jmp
movl
jge
pushl
pushl
push
push
call
andl
add
mov
sbb
sub
and
xor
add
xor
movzbl
adc
xor
mov
add
movl
xor
add
mov
sub
and
movl
movl
sbb
movl
mov
movzwl
sbb
mov
sub
movzbl
or
mov
xorl
and
sbb
jmp
dec
test
and
ljmp
jo
sbb
sbb
adc
sbb
xlat
sbb
xchg
add
cmc
sar
jns
xchg
loopne
out
cmp
or
mov
fcos
mov
pop
mov
mov
mov
je
mov
jo
and
pop
mov
popf
adc
dec
shlb
sub
jne
insl
mov
fcomp
mov
fs
nop
negb
jp
hlt
lea
push
push
mov
sbb
pop
pop
mov
cli
fldl
enter
out
ljmp
jl
test
test
mov
xor
mov
cltd
cltd
fcom
adc
lret
or
xor
xchg
adc
mov
jno
cwtl
lahf
fistpl
sub
mov
pop
pop
jae
mov
loop
fbld
sub
les
or
xor
or
push
mov
sbb
aaa
push
lea
in
jge
insl
cmp
sti
sti
lea
cs
jbe
movsb
outsl
and
popf
sbb
jb
adc
inc
sub
scas
pop
mov
sahf
mov
dec
push
out
jge
jb
sub
cs
add
insl
xor
sbb
dec
daa
push
push
mov
sarl
jg
scas
test
loope
pop
xchg
inc
in
mov
push
mov
das
xchg
mov
addr16
mov
sbb
jae
test
mov
int3
mov
sub
gs
pop
lret
subl
mov
or
popf
lahf
test
shl
or
jne
fistps
mov
les
lret
xchg
popa
fisubrs
imul
daa
mov
cmp
xor
xor
jmp
cmp
or
add
xchg
mov
mov
adc
mov
and
push
push
stos
or
aas
movsb
add
and
xchg
int3
push
arpl
inc
jecxz
or
cwtl
dec
les
mov
arpl
lea
icebp
rcrb
dec
xor
xor
mov
mov
movsl
cmp
xchg
fwait
jae
adc
pop
adc
cmp
out
xor
sbb
pushf
cmpsl
mov
pop
fisubrl
fmuls
push
int3
lea
pextrw
adc
cltd
cld
mov
push
mov
push
push
les
sub
mov
mov
jb
mov
xchg
add
mov
sarb
fadds
pop
loopne
lret
cli
add
sbbb
in
addr16
or
dec
or
dec
insl
mov
mov
jnp
stos
pop
and
stos
movsl
ficompl
add
shrb
sbb
mov
inc
mov
pop
sbb
inc
mov
fdivrl
out
ret
add
dec
pusha
pop
add
mov
movb
inc
push
scas
in
notb
mov
outsl
and
xchg
mov
mov
fucomi
lret
sub
es
mov
xor
sbb
or
xor
pop
mov
filds
fisttps
adcb
mov
in
adc
fisttpl
test
mov
aaa
jns
push
jo
aaa
xor
dec
cmp
scas
adc
ja
stos
mov
jns
in
test
adcl
xor
sub
imul
movl
mov
movl
cmp
jne
movl
xor
xor
sbb
movl
movl
movl
pushl
mov
or
movl
cmpl
mov
notl
movl
movzwl
jmp
movl
jne
pushl
call
xor
add
mov
sub
orl
mov
mov
adc
movl
movl
movl
sbb
movl
mov
xor
xor
sub
sub
movl
sbb
movl
or
mov
cmpl
movl
mov
jmp
movl
jb
push
call
sbb
add
sbbl
addl
sub
xor
subl
add
mov
notl
imul
movl
or
xor
xor
adcl
pushl
cmpl
movl
mov
mov
jmp
mov
movl
jl
push
push
pushl
call
add
mov
xor
andl
sbb
and
xor
mov
add
push
pop
xor
subl
div
andl
mov
xorl
xor
or
xor
mov
or
sbb
mov
adcl
div
xor
xor
xor
adcl
pushl
sbb
mov
xorl
mov
orl
pushl
movl
add
pushl
imul
pushl
add
mov
adcl
mov
addl
xor
mov
div
and
subl
or
movl
pushl
orl
call
andl
dec
movl
jne
movl
mov
mov
and
mov
mov
andl
movl
adcl
mov
call
mov
mov
sub
xor
lea
subl
mov
add
lea
mov
or
mov
mov
cmpl
mov
mov
jmp
movl
jbe
pushl
push
push
call
sub
or
add
xor
dec
incl
cmpl
movl
movl
movl
jmp
movl
mov
ja
push
pushl
push
pushl
push
push
pushl
push
call
mov
xor
mov
adc
sub
add
adc
mov
sbb
mov
and
mov
cmpl
movl
movl
movl
movl
jmp
mov
mov
ja
push
push
push
push
call
sbb
sub
mov
mov
sub
add
xor
or
add
xor
and
mov
xor
cmpl
not
mov
movl
movl
jmp
mov
movl
je
pushl
pushl
pushl
push
call
neg
add
sbb
xor
movl
and
xor
add
shl
shr
or
mov
cmpl
movzwl
mov
movl
jmp
movl
movl
jae
pushl
push
push
call
movzwl
sub
mov
adc
mov
adc
mov
mov
sub
imul
inc
xorl
and
andl
mov
mov
mov
and
mov
movl
mov
mov
xor
mov
shrd
neg
shr
addl
mov
mov
jmp
push
lcall
popa
xchg
pop
jo
adc
sbb
adc
sbb
aaa
cmp
and
bound
or
imul
js
ss
iret
or
ds
xor
iret
rclb
add
adc
push
xchg
in
mov
or
data16
ret
xchg
data16
xor
aaa
xor
pop
in
stc
sub
fidivrl
insb
bound
sbb
punpckhbw
std
imul
rclb
dec
shrb
sbb
mov
or
add
xchg
clc
fdivs
icebp
fldl
sub
andb
cmp
xchg
jnp
lret
cmp
or
jns
gs
int3
out
aad
jae
ficoms
jnp
lea
add
mov
stos
lds
xchg
loopne
mov
jle
jns
add
push
push
inc
stos
or
fcmovne
mov
push
data16
xchg
sahf
jbe
das
mov
xor
adc
push
mov
jo
pushf
icebp
cmp
xor
add
nop
mov
insl
stos
fmull
lea
adc
pop
push
cmp
push
mov
sub
mov
loope
pop
mov
clc
jbe
stc
rol
out
mov
adc
xor
ja
cwtl
add
std
mov
scas
sbbl
out
lahf
call
lock
cmp
push
popa
sub
ret
mov
ljmp
notb
mov
mov
push
in
push
insl
ret
insl
scas
inc
mov
add
adc
xchg
leave
and
xchg
mov
cmpsl
mov
pushf
adc
jo
ret
add
stc
ss
inc
dec
mov
lret
sbbb
arpl
lods
mov
arpl
sub
sarl
cmpsl
shrb
mov
aad
mov
jmp
sbb
push
lret
push
lods
jl
sub
dec
cs
push
jno
and
push
daa
xor
mov
xchg
out
xchg
fisttpll
gs
stc
push
cwtl
shrl
jge
lds
scas
mov
out
je
int3
inc
xchg
std
lret
mov
stos
dec
mov
nop
mov
mov
adc
fistpl
jmp
sahf
add
in
in
cli
frstor
or
xchg
negb
in
adc
and
out
in
dec
loope
out
mov
mov
fisubrs
add
shrb
adcl
outsb
or
shrb
test
flds
in
xor
xchg
cmc
or
push
fisubl
lea
xor
movsl
sub
aam
push
fnstenv
movsl
adc
adc
dec
xchg
cmp
sbb
xchg
xchg
jg
mov
bound
clc
adc
ss
and
and
leave
sbb
adc
pop
int
inc
cmpsl
stos
add
cltd
adc
pop
daa
arpl
add
cwtl
popf
jnp
push
mov
stos
push
inc
mov
cli
loope
lcall
pop
dec
cmp
push
jo
movsb
aam
sbb
es
andb
repz
lock
test
in
sti
inc
inc
pushl
aam
adc
js
pop
punpckhdq
incl
xor
or
mov
push
pushl
lea
negl
push
andl
shl
call
subl
lea
orl
push
subl
mov
mov
subl
lea
push
mov
orl
lea
mov
xorl
mov
adcl
jmp
imul
inc
push
pusha
cli
mov
sbb
sbb
lock
mov
stos
scas
movsl
out
lds
outsb
dec
push
pop
mov
cmc
jge
or
ljmp
pop
inc
push
cltd
push
or
xor
xchg
aam
jg
xchg
sbb
clc
lahf
daa
test
out
mov
hlt
xor
dec
pop
add
mov
mov
dec
cwtl
hlt
inc
mov
add
xchg
xchg
pop
subb
push
pushf
aas
clc
mov
out
mov
xor
dec
xor
nop
cmpsb
imul
adc
push
xchg
add
and
shr
loop
sbb
add
test
dec
jns
jle
xor
mov
fmull
sahf
adc
dec
fdivrs
mov
xchg
adc
sbb
push
fldl
sbb
jne
cmp
gs
out
adc
adcb
insl
jg
xchg
jne
push
fdivs
pop
sbb
cmpsb
js
scas
orl
aas
rcrl
or
daa
popf
and
adc
mov
xor
lret
dec
mov
stc
fwait
and
or
lods
push
and
inc
int3
loope
lods
or
dec
xor
repnz
shll
test
adc
xchg
mov
loope
movb
or
push
sub
add
int3
pop
pop
jnp
push
pop
adc
cltd
enter
adc
xadd
fldl
int
mov
push
xor
jecxz
cli
ret
mov
imulb
cmp
lcall
lahf
rorb
mov
cmp
cmc
ja
push
mov
dec
inc
call
lds
lret
mov
pop
je
dec
push
cltd
mov
add
add
int
cli
and
ds
ret
and
sarl
data16
movsl
out
adcb
push
push
adc
jbe
aad
add
cs
push
nop
dec
xorb
fcmovnu
mov
adc
cmp
jp
int
dec
sub
fwait
js
fs
ret
mov
int
mov
push
lock
call
sub
mov
dec
stos
and
loope
jp
repnz
inc
and
outsl
mov
inc
fcmove
leave
int3
mov
faddp
mov
in
cmp
mov
inc
hlt
add
loop
imul
xchg
add
and
cmpsb
adc
push
das
daa
sbb
xchg
orl
addl
outsl
fldt
add
mov
sbb
stc
loope
mov
sbb
cmp
js
sbb
cmpsl
xchg
xor
in
movsb
insb
jnp
sbb
mov
adc
mov
push
sub
adc
insl
push
xlat
testl
rclb
stos
sbb
xchg
or
sub
lret
sarb
shlb
jge,pn
pushf
cmc
icebp
movsl
jno
les
sarl
lock
jmp
dec
cmpsl
cmp
or
cmp
push
xchg
ret
sub
incb
std
repnz
push
incl
jmp
inc
fsubs
inc
addr16
push
sbb
jno
or
inc
xchg
in
movsl
xor
sub
sub
and
adc
mov
mov
sbb
sub
testb
add
mov
push
in
xor
jbe
mov
sbb
sbb
loope
aas
filds
or
loope
andl
lcall
sub
cmp
push
and
faddl
xlat
into
jne
mov
adc
mov
mov
nop
sub
sbb
les
pop
clc
xchg
bound
notl
rep
xor
jecxz
dec
roll
mov
daa
pop
stc
pop
cmpsb
pop
inc
out
adc
cmc
gs
xchg
leave
dec
adc
decb
jmp
add
mov
clc
lea
and
jl
fs
push
adc
das
push
sbb
cmp
test
mov
inc
out
push
or
sbb
daa
pop
test
inc
add
mov
fsubp
xchg
aaa
insl
out
add
cmc
push
pushf
jb
pop
mov
fwait
xor
jo
mov
xchg
lock
fstps
fdivrp
insb
fisttpll
inc
idivb
icebp
idivl
sub
push
aaa
pop
in
xchg
adc
mov
lcall
push
inc
scas
xchg
mov
mov
imul
sar
mov
dec
outsb
movsl
addr16
shlb
mov
insl
inc
xor
in
pop
xlat
push
dec
loope
sub
add
lds
sbb
dec
lret
pop
adc
pop
mov
mov
cmp
out
dec
push
out
or
jo
or
mov
push
lods
push
inc
sbb
pop
cmp
jmp
mov
add
push
aas
daa
or
mov
repnz
pop
add
repz
jns
aam
cld
ret
cmp
fisubrs
push
adc
lahf
push
sbb
bound
pop
repz
mov
pop
mov
add
jg
out
out
ret
mov
imul
lcall
aas
out
xchg
cmp
pop
mov
in
ret
jb
fnstenv
jae
mov
in
insl
adc
xchg
cs
mov
xor
out
xchg
xor
imul
cmp
filds
xchg
mov
test
insl
popa
sbb
xor
and
lds
fmull
ficoml
add
push
mov
jnp
dec
lret
fldcw
mov
test
loop
xor
out
mov
ret
in
scas
mov
xorb
xchg
loopne
mov
repz
xchg
inc
ror
xlat
scas
lods
push
sub
mov
test
adcl
dec
call
or
call
lods
cmpsl
mov
filds
dec
xorl
mov
push
push
xor
jecxz
das
leave
imul
leave
enter
adc
lds
test
push
incb
push
mov
sub
xchg
repz
jle
daa
divl
cmp
mov
push
mov
out
cmp
jno
repnz
pop
shl
test
insl
pop
fnstcw
jecxz
push
adc
inc
or
jbe
scas
xor
add
rol
xchg
pop
push
sahf
pusha
rcl
pop
push
stos
push
addb
sarl
or
sub
fsubrl
push
test
mov
xchg
mov
rorl
cld
xor
call
xorl
push
xorl
push
adcl
pushl
call
mov
mov
and
mov
neg
mov
shr
shl
or
mov
xor
add
sub
or
mov
xor
mov
sbb
lea
mov
xor
lea
sub
mov
mov
sub
mov
sub
mov
mov
xor
lea
movzbl
and
xor
cmpl
movl
not
jmp
mov
movl
jbe
push
call
sbb
add
sbbl
subl
movzbl
sub
mov
movl
sub
movl
movl
subl
movl
cmpl
mov
mov
movl
jmp
mov
jbe
pushl
call
sub
mov
sbb
adc
and
adcl
sbb
xor
mov
mov
xor
mov
movzbl
and
mov
xor
mov
add
movl
adc
subl
xor
cmpl
mov
mov
mov
jmp
movl
je
push
push
push
push
call
inc
and
orl
orl
xor
and
mov
mov
xor
mov
adc
and
mov
adc
movl
adc
movl
cmpl
mov
mov
movl
jmp
mov
jne
pushl
push
call
xor
sbb
sbb
movzwl
or
movl
movl
add
movl
movl
movl
notl
mov
movl
mov
cmpl
notl
movl
jmp
not
jg
pushl
push
pushl
push
push
pushl
call
xor
mov
or
sub
adcl
subl
mov
mov
push
push
or
or
push
push
call
mov
mov
sub
mov
jmp
je
or
pop
pop
mov
cmp
inc
cld
push
sbb
adc
sbb
shrl
fidivrs
mov
push
outsb
scas
jno
jne
sbb
enter
inc
cmp
mov
aad
pop
inc
xchg
pop
sub
cmp
mov
sub
adc
test
subl
mov
std
mov
rol
call
xor
sti
add
cld
popa
lods
add
fcoms
pop
stos
outsl
jle
or
pop
jae
call
bound
inc
test
test
jns
dec
addr16
jns
pop
mov
jb
cs
jbe
sti
mulb
or
mov
xchg
ret
test
xchg
push
andl
scas
lds
iret
mov
fdivrs
dec
je
jno
xorl
jmp
popa
and
and
and
mov
cmp
stos
mov
std
test
pop
roll
adc
xor
push
jecxz
adc
mov
jns
or
cwtl
xchg
sarl
xchg
enter
nop
push
inc
xchg
hlt
mov
lds
sahf
xor
mov
dec
and
sahf
or
xchg
arpl
xchg
fdivrs
dec
push
mov
pushf
lods
cmp
imul
pop
bound
and
stos
push
outsb
pop
cmp
xlat
adc
push
out
pop
cwtl
cmp
adc
or
add
shll
testb
test
out
sbb
cmp
sti
imul
das
int3
dec
aad
xchg
sti
and
cmp
aam
push
aas
imul
inc
mov
daa
push
mov
xor
mov
xchg
sbb
dec
jne
out
jle
jns
pop
push
pushl
jne
push
inc
lods
pop
aad
xlat
iret
pop
push
lret
sbb
mov
loopne
and
add
mov
or
gs
mov
inc
xchg
movsl
sti
inc
int3
jl
cmp
sub
jl
loope
sbb
rcl
test
or
lcall
mov
adc
sub
inc
movsl
jmp
orl
ss
cmp
mov
bound
addr16
cmp
add
fwait
xor
out
lods
cmp
sbb
sub
ljmp
ret
inc
loopne
jno
push
dec
and
cmp
pop
push
cmp
addr16
pop
mov
push
test
mov
push
xchg
jmp
mov
mov
jns
loopne
mov
mov
inc
sub
cmpsb
repz
jae
adc
sahf
pop
pop
daa
mov
pop
cmp
nop
ds
insb
scas
or
aam
cli
fiadds
push
sbb
inc
push
lret
mov
cmp
loop
ds
cmpl
clc
repz
push
call
or
pop
adc
leave
fstpt
lcall
mov
nop
repnz
sbb
push
iret
js
pushf
mov
stos
cmp
aad
push
mov
add
negl
add
jbe
jmp
ret
inc
dec
fwait
mov
mov
shlb
jmp
inc
sub
les
loopne
sub
ja
mov
add
enter
push
call
rorl
enter
add
add
fimull
test
inc
and
mov
inc
and
js
add
movl
movl
mov
mov
mov
mov
add
adc
xor
xor
and
mov
and
mov
jmp
and
and
aam
mov
notb
sbb
adc
sbb
imull
cmp
dec
fldcw
xchg
push
jmp
jnp
fcmovu
popf
mov
and
jg
mov
cmp
inc
icebp
add
mov
pop
js
jb
mov
sub
xchg
std
add
jns
int3
cli
fstpt
xchg
test
lods
sbb
sahf
icebp
faddl
add
dec
mov
push
add
mov
jecxz
aaa
jo
dec
dec
aad
movsb
dec
pop
or
sub
pop
sbb
lock
adc
dec
mov
mov
outsl
push
dec
cs
dec
cmp
adc
test
inc
push
shrb
push
pop
or
pop
orl
ss
flds
loop
and
stos
shrl
arpl
jne
xor
cli
test
loopne
daa
shl
or
dec
sarb
inc
mov
adc
mov
jno
pop
or
fsts
int3
je
int3
enter
xor
xchg
loope
insb
clc
pop
maskmovq
divl
xor
shr
xor
jne
cmp
add
fildl
adc
cmp
clc
jo
pop
fwait
push
cmc
in
arpl
adc
adc
popa
out
inc
lcall
imul
sub
jl
cmp
movsb
lods
dec
sub
loop
aas
or
push
mov
out
or
xor
ss
repnz
mov
pusha
fmul
rclb
scas
dec
mov
jnp
or
aas
scas
stos
test
repz
bnd
xchg
dec
daa
jge
cmc
call
and
or
test
inc
shrb
add
enter
or
sub
scas
out
in
xorb
aad
addb
pop
mov
add
addr16
popa
jbe
daa
jnp
xchg
inc
popa
cmp
lret
mov
fwait
hlt
addr16
imul
pop
divb
cmp
pop
int
test
sti
loop
ffreep
iret
data16
sub
cmp
ret
sbb
movsb
rolb
addb
inc
cmp
xor
mov
stos
xor
je
nop
adc
repz
and
pop
cmp
jnp
mov
and
push
js
inc
fnstcw
jle
and
decl
inc
lods
and
lods
add
or
dec
clc
mov
outsb
mov
test
out
jl
fcoml
stos
inc
fisubrl
mov
je
push
stos
mov
pop
pop
or
stos
jp
xchg
shr
repz
inc
into
push
hlt
nop
or
and
jg
movsl
fcomps
sahf
sbb
jo
xchg
int3
out
aaa
sbb
into
subl
nop
pop
icebp
loop
xchg
fistl
and
mov
push
inc
es
pop
sub
dec
or
addl
nop
dec
xchg
js
addr16
jg
push
ret
push
scas
hlt
and
icebp
testb
outsl
add
push
sahf
lock
hlt
in
leave
stos
into
push
data16
test
xchg
jle
dec
xchg
add
xor
in
sub
sbb
ror
insl
cmc
iret
dec
pop
xor
adc
in
lea
pop
xor
xchg
mov
cmp
inc
and
sbb
add
inc
and
mov
add
movl
movl
movl
movl
movl
movl
mov
jmp
push
pop
xlat
jns
cmp
mov
std
adc
inc
out
push
sbb
adc
sbb
push
shlb
scas
cli
orb
sub
or
jecxz
mov
dec
jmp
cli
in
mov
ss
mov
or
in
xchg
test
mov
fisubs
imul
or
popf
sub
pop
and
in
mov
jno
stc
push
mov
mov
hlt
xchg
sbb
inc
pushf
mov
push
jo
cmp
fs
xchg
or
sub
xor
aad
add
stos
lock
or
inc
int3
lods
pop
dec
scas
adc
jne
lea
mov
xor
sbb
xchg
mov
jns
dec
stos
les
mov
jbe
ret
ja
imul
push
call
or
push
sub
adc
xchg
cmp
jns
push
fisttpl
adc
fdivs
outsl
inc
add
pop
ret
xor
popf
mov
xchg
iret
scas
aas
dec
inc
cmpsl
mov
pop
mov
push
push
fiaddl
lods
jns
mov
mov
shll
stos
pop
insb
ret
sub
in
push
sub
lds
out
sub
pop
subl
mov
lds
sub
std
sub
inc
jno
test
js
jmp
imul
sub
cmp
add
js
mov
mov
lret
lret
outsl
les
xchg
js
xor
push
ds
stc
mov
mov
stos
pop
js
push
push
push
push
popf
lock
cmp
xchg
push
das
push
mov
sbb
int3
dec
in
fdivrs
mov
adc
popf
outsb
xchg
and
je
xchg
xchg
cmpsl
mov
fwait
dec
gs
fimull
aaa
out
daa
jmp
inc
and
mov
xchg
lods
add
or
mov
lahf
inc
loop
dec
movsb
aas
leave
shlb
stc
stc
cmp
addb
push
ljmp
cs
mov
lods
mov
jbe
xchg
or
andl
addr16
into
das
lret
jbe
push
push
cld
add
mov
cltd
movsl
sub
insb
out
lods
aaa
xchg
or
mov
lcall
jecxz
push
cmp
imul
xchg
inc
mov
int3
incb
aas
xor
pop
and
fldcw
inc
sbb
or
adc
dec
push
inc
pop
sti
aam
or
xor
push
fists
xor
pop
xchg
pushf
pop
in
into
mov
cli
mov
mov
jecxz
jge
jbe
fstps
pop
gs
fnstenv
inc
lret
mov
inc
and
mov
rolb
int3
inc
xorb
pop
test
inc
mov
inc
js
rorb
cmpsl
mov
js
fnstsw
js
fnstsw
sbb
sti
and
mov
aad
sahf
dec
push
jne
loopne
jne
js
mov
xchg
adc
jne
sub
sub
in
xor
or
aad
mov
mov
xchg
popf
sub
and
cmc
add
int3
jnp
cld
aam
js
inc
add
jb
pop
or
jl
push
mov
mov
movsbl
ljmpw
pop
out
pushf
lds
adc
mov
push
push
xor
xor
push
push
call
mov
mov
push
push
push
push
call
mov
mov
push
push
push
push
call
mov
mov
add
mov
adc
mov
cmp
jne
cmp
je
mov
mov
xor
shld
shl
jmp
sub
lds
and
ds
jno
stos
out
sub
sbb
sbb
mov
mov
les
mov
push
test
loop
movsb
aaa
outsb
mov
daa
mov
jo
push
imul
loop
bound
mov
xchg
shll
lea
pop
outsl
cltd
push
mov
pop
or
pop
push
js
dec
mov
call
mov
xchg
icebp
mov
inc
pop
pop
imul
repnz
loope
push
inc
adc
dec
dec
mov
test
sub
mov
daa
push
and
mov
mov
es
sub
pop
imul
pop
fiadds
fsubs
mov
loopne
pop
jge
dec
cli
push
sbb
jbe
mov
mov
mov
aad
fbld
mov
subl
and
jns
dec
mov
xor
dec
std
and
pop
aaa
pop
jnp
push
mov
xchg
pop
in
test
dec
adc
xlat
into
addb
daa
mov
mov
mov
aas
xor
cmpsb
mov
lahf
mov
sbb
mov
adc
test
add
xor
push
add
cmp
aas
cmc
scas
pushf
xchg
xor
xchg
imul
jo
xchg
insl
ljmp
cmpsb
xchg
mov
addl
cmp
jae
xchg
and
int3
js
lret
push
sbb
les
pop
mov
jb
xlat
addr16
push
inc
dec
sub
ss
mov
push
xlat
in
lea
rcll
lods
pop
sbb
aad
int3
shll
mov
cmp
xlat
sbb
sbbb
jge
movsl
nop
fiaddl
mov
outsl
fisttpl
mov
xlat
clc
loopne
mov
mov
in
shrb
inc
pop
arpl
ret
icebp
sbb
imul
mov
push
jmp
mov
add
push
rcrl
mov
sbb
pop
inc
and
pop
test
insb
lcall
xacquire
test
inc
mov
aaa
test
das
and
dec
out
outsb
fimull
dec
lret
xor
push
insb
dec
lea
faddl
push
dec
outsl
add
push
nopl
inc
imul
mov
adc
pop
mov
lods
dec
add
cmp
sub
ret
xor
mov
xlat
sbb
push
mov
xor
fwait
iret
mov
dec
movsb
sbb
fdiv
pop
cmp
inc
cmpsl
inc
daa
xor
aaa
test
mov
jecxz
dec
adc
leave
add
sbb
loopne
jo
pop
int
cs
dec
push
out
add
sarl
xor
jbe
stos
scas
push
sub
lods
and
aam
rcrb
inc
es
mov
rolb
adc
aam
sub
cmp
xchg
bound
dec
push
mov
jns
push
ret
mov
subl
add
push
stos
dec
adc
mov
sbb
fadds
mov
mov
push
inc
mov
mov
int
push
mov
adc
xor
mov
call
addr16
inc
push
xor
and
jns
mov
mov
xor
xor
mov
cmp
jne
cmp
je
mov
cmp
je
mov
mov
xor
xor
shrd
shr
mov
mov
mov
shl
xor
or
xor
mov
mov
or
cltd
cmp
jne
cmp
jne
movl
movl
mov
mov
mov
xor
shld
shl
mov
mov
xor
xor
mov
cmp
jne
cmp
jne
movl
mov
mov
shrd
shr
mov
mov
mov
mov
mov
shl
mov
xor
xor
or
cmp
jne
mov
mov
mov
mov
mov
mov
movzwl
mov
and
mov
or
mov
add
or
mov
mov
mov
jmp
cs
and
push
mov
lahf
jo
loope
sbb
adc
sbb
repnz
push
decb
shl
imul
test
je
cmp
mov
inc
aas
and
out
inc
cld
outsl
ficompl
xchg
mov
mov
mov
inc
adc
push
pop
jl
enter
loop,pn
test
adc
mov
push
ret
loope
and
adc
dec
mov
push
insb
or
jl
insb
dec
add
mov
aam
xlat
push
and
fistps
inc
dec
in
inc
pop
push
inc
push
adc
adc
call
cld
testb
and
jmp
adc
cld
inc
roll
sub
push
das
lret
cwtl
lds
inc
scas
lahf
jg
mulb
inc
push
dec
fadds
xor
sub
cmp
scas
mov
jg
sub
push
movsl
in
mov
filds
in
inc
mov
mov
out
push
ja
dec
lods
pop
adcl
scas
lods
int
or
rcr
jno
cmpsl
cmpsl
push
sub
fimuls
sub
out
mov
fptan
push
lods
adc
adc
lock
jns
cli
ja
fdivr
or
mov
loop
xchg
push
shll
insl
pop
cmp
and
sub
fisttpll
mov
leave
add
sub
cltd
push
ret
imul
xchg
imul
fcoms
ror
daa
cld
mov
clc
pop
pop
test
mov
add
jae
fmull
adc
mov
fcoms
enter
mov
fcmovbe
add
mov
cmp
adc
clc
dec
or
sub
push
sub
es
inc
pusha
pop
idivb
inc
cmpsl
arpl
arpl
cmpsb
shrl
fxch
rorb
lret
arpl
sbbb
push
outsb
or
cmpl
dec
shll
mov
jp
jmp
out
into
sbb
xchg
lds
mov
or
adc
js
aad
lods
inc
fisttpll
repnz
inc
aad
cld
xor
mov
inc
gs
add
adc
cmc
cvtpi2ps
test
clc
pop
add
xchg
pop
daa
xor
xchg
enter
sub
xchg
xchg
fsubrl
add
xchg
sar
jnp
ret
stc
out
lods
push
fst
sbb
lds
stc
popf
sarb
push
xchg
sbb
arpl
cmpl
fcoms
xor
xchg
imul
sub
test
inc
sub
or
inc
xor
loopne
xor
mov
mov
jbe
lcall
ficomps
jne
out
push
outsb
or
pop
mov
sub
jmp
dec
jbe
pusha
int3
ss
adc
jge
gs
sub
adc
adc
pop
imul
cmpsl
loop
adc
adc
xor
imul
jg
push
sbb
push
push
xor
ret
push
into
jae
xor
push
mov
cmp
push
decl
mov
movsb
sub
push
push
incl
or
adcl
sub
sbb
xchg
inc
repz
pop
ret
or
mov
mov
mov
mov
mov
mov
mov
mov
or
mov
or
mov
sub
mov
sub
mov
cmp
jbe
mov
mov
mov
mov
movzwl
mov
or
mov
sub
mov
or
imul
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
sub
mov
xor
mov
imul
mov
and
mov
and
jmp
cmp
cmp
xlat
pop
jo
fistl
sbb
adc
sbb
stos
dec
ret
stc
cmp
add
xchg
xchg
inc
pop
dec
push
loop
call
or
incb
pop
ds
xor
fcmovne
mov
jne
int3
pop
adc
bound
jg
push
dec
loope
cmp
push
scas
outsb
push
loope
test
mov
mov
rcrb
repnz
push
js
push
jbe
push
mov
xor
stos
adc
in
rcrl
daa
mov
or
push
cmp
ss
sti
fwait
sub
in
dec
cs
or
mov
jl
sbb
cmpsl
mov
arpl
and
mov
adc
and
cmp
inc
ja
cmpl
iret
xor
imul
jmp
testb
fnsave
mov
add
enter
and
sbb
pop
out
hlt
or
arpl
addr16
outsb
pop
pop
fildl
scas
mov
xor
cmp
popf
mov
aad
sbb
sub
xor
add
stos
and
roll
call
int
jp
sub
ret
cmp
jne
add
push
sbb
or
fdivrs
xchg
pop
inc
pushf
jge
fs
sub
outsb
movsl
fbstp
leave
mov
sbb
aam
enter
dec
or
aad
call
insl
pop
or
mov
bound
inc
cmpsl
jo
dec
mov
clc
jle
push
jnp
jae
les
and
out
pushf
sbb
and
pop
std
fwait
imul
xor
jae
pusha
mov
hlt
sub
mov
lods
jb
je
cltd
iret
sbb
xchg
rorl
mov
cmpsl
and
nop
addr16
popf
mov
out
out
mov
int3
mov
outsl
mov
outsb
xchg
mov
dec
testb
push
sub
arpl
push
and
mov
repz
sti
mov
sub
mov
xor
inc
aas
push
adc
adc
ret
lcall
cwtl
dec
sbb
dec
aaa
jo
cmp
in
ret
dec
jbe
sbb
loope
mov
loope
push
add
adc
js
sbb
dec
sti
or
mov
or
ret
mov
in
dec
jbe
fidivl
fsts
cmp
fisubrl
nop
cs
mov
push
dec
jg
xchg
or
daa
and
add
and
xor
lods
leave
hlt
inc
or
add
lea
xorl
aam
dec
pop
movsl
dec
pop
xlat
push
fs
bound
push
adc
cwtl
xor
dec
push
in
arpl
jl
jns
mov
pushf
enter
scas
xor
lret
out
fistps
mov
mov
mov
adcb
pop
inc
ret
mov
shll
adc
jns
inc
cmp
add
mov
mov
jp
xchg
push
iret
mov
sub
je
movsl
sbb
push
push
es
xchg
cwtl
add
jp
dec
test
mov
push
push
mov
cmp
ja
mov
mov
shrd
xor
mov
shr
jmp
inc
inc
in
loop
cmp
pop
pop
or
rcl
push
jle
rcll
sbb
adc
sbb
cld
icebp
not
sub
pop
ja
out
lock
xor
adc
cmpsb
js
stos
fwait
and
adc
je
push
push
dec
push
es
adc
divb
rolb
xchg
nop
or
leave
add
xor
cmpsl
pop
imul
pop
mov
dec
or
pop
js
mov
enter
gs
pop
pushl
sbb
inc
outsb
in
pop
push
test
inc
insb
pop
push
jno
mov
sbb
ja
cli
sbb
shlb
pushf
ficoms
adc
es
fldenv
cmpb
cmp
popf
adc
inc
in
jbe
push
pop
pop
add
cmp
fwait
pop
ds
repz
jbe
sbb
insl
std
loopne
cmp
mov
lock
ret
in
mov
mov
xor
pushf
push
mov
punpckhdq
mov
inc
clc
popf
in
out
stc
mov
test
jae
ret
mov
mov
lea
insl
sbb
cs
or
nop
stos
cmp
mov
scas
lret
add
fistpll
sahf
loop
pop
xor
popa
sbb
mov
inc
iret
ret
xchg
test
push
dec
cmp
adc
sub
add
lea
sarl
dec
arpl
stc
mulb
iret
repnz
dec
xchg
push
push
xchg
fimull
xchg
xor
sti
fisttpl
xchg
and
push
es
and
cmp
push
fs
add
cmovo
and
push
mov
fdivrl
out
mov
testb
or
sbb
test
sub
sbb
xor
pop
nop
mov
imul
out
out
lds
mov
scas
jae
adc
test
iret
sbb
sbb
loopne
test
in
mov
dec
mov
mov
mov
cmp
mov
jnp
mov
call
imul
lock
mov
gs
pop
cmc
iret
or
jp
das
inc
jno
and
sbb
push
cmp
lock
cmp
sub
adc
fcmovu
wbinvd
addr16
push
pop
aam
arpl
xor
add
in
lret
ds
xchg
fwait
shr
scas
stos
imul
mov
popa
mov
dec
out
xchg
adc
out
les
mov
in
scas
imul
lds
inc
cmp
test
mov
sbb
lea
xchg
xchg
loopne
lcall
jl
repnz
xchg
jnp
enter
push
mov
sub
lret
xchg
pop
cmc
pop
dec
scas
inc
xchg
jnp
jne
incb
add
sahf
push
jcxz
push
add
adc
inc
shll
adc
xchg
inc
ja
imul
aam
mov
inc
jnp
or
sub
or
fldt
add
ljmp
xchg
mov
sub
arpl
xor
popf
sub
fwait
orl
pop
xchg
jle
aas
mov
mov
je
shrb
outsb
or
stos
mov
jmp
inc
mov
jb
jb
cmpsb
xchg
sbb
push
sub
sbb
adc
sbb
xchg
repnz
pop
xchg
jae
push
xor
pop
lea
inc
int
fidivs
jb
mov
addl
push
sti
stc
push
adc
popl
inc
cmpsl
roll
xchg
push
scas
pop
add
call
scas
int
cmpb
adc
bound
negl
pop
aam
inc
dec
pusha
lods
sub
mov
push
pmaxsw
outsl
fsubrl
mov
xor
pop
stos
and
out
rclb
aam
push
pop
jne
xchg
jnp
add
add
cwtl
hlt
lret
cmpsl
popf
xchg
mov
push
icebp
clc
and
fmuls
sub
out
lds
pusha
mov
gs
call
rorl
inc
push
pop
adc
cld
sub
adcb
sub
add
movups
pop
or
loopne
les
ds
xchg
gs
mov
jg
les
pop
mov
cmp
ds
imul
bound
cmc
dec
and
jne
cmpsb
cmp
dec
push
jns
dec
and
data16
in
fimuls
das
xchg
add
popf
loopne
ja
xor
push
pop
pop
xor
ret
xchg
daa
fstps
sub
mov
or
xchg
xchg
fnstenv
mov
mov
add
ret
aas
inc
push
push
aas
push
mov
mov
pop
push
mov
clc
loopne
shrl
push
mov
jne
jo
sub
aaa
add
insl
gs
add
ds
mov
xchg
push
jle
sbb
test
sub
sub
les
push
fsub
inc
xlat
mov
imul
imul
test
out
daa
in
xchg
rorl
nop
fsubr
sahf
fiaddl
dec
js
stc
push
dec
jle
push
rcrb
jecxz
mov
mov
lock
les
bound
andb
inc
jno
and
cmp
cmp
sub
push
jae
movsb
cwtl
addr16
xor
inc
or
and
test
jne
jo
cmp
add
lods
pop
arpl
stos
add
rclb
add
or
dec
shrl
fmuls
cmp
and
stos
loope
and
stc
outsb
xor
out
test
adc
punpckhwd
xchg
hlt
xchg
lea
mov
sbb
leave
call
jns
sahf
lods
sbbl
clc
gs
fiaddl
inc
sub
cmp
popf
jmp
pop
or
and
aad
jmp
movb
and
into
fiadds
and
mov
inc
out
pusha
push
fidivrs
sti
push
cmp
jmp
pushf
cmp
push
pop
jmp
bound
inc
notb
xchg
pop
xchg
push
pop
jg
out
add
sub
flds
jge
xchg
nop
jl
mov
pop
mov
add
pop
notl
sbbb
jle
je
jnp
insb
and
imul
dec
jmp
mov
subb
adc
mov
add
or
add
out
pusha
popl
scas
mov
add
add
or
push
push
shl
push
lea
push
lea
push
call
pushl
pushl
jmp
xor
fistpll
popf
jo
jbe
push
lds
sbb
adc
sbb
es
sbb
ret
out
in
ja
pop
ret
cmp
mov
pop
or
xor
lret
sub
jbe
pop
add
mov
out
fcompl
mov
repnz
scas
push
jp
jnp
push
inc
push
inc
pop
pop
mov
mov
xchg
jb
push
xchg
mov
nop
shrb
jbe
leave
jg
in
pop
sub
scas
push
mov
mov
aam
dec
add
mov
enter
sub
push
dec
cmp
adc
sub
les
and
xor
cmp
rolb
push
jmp
lds
mov
push
adc
movsb
roll
mov
dec
cltd
jle
loop
pop
fisubs
dec
es
xor
insb
sahf
stos
lahf
adc
lret
outsl
popa
mov
rcrl
das
imul
fiadds
xor
test
dec
jnp
test
mov
test
lock
je
mov
mull
mov
sbb
add
stos
lcall
xor
lret
test
lock
data16
cmp
ja
scas
shlb
enter
in
xor
pop
les
andb
inc
jge
dec
es
jg
mov
mov
cs
mov
jp
or
jo
jmp
fstl
pop
shrl
fisubs
scas
sbb
cmp
jl
add
push
int3
xlat
idivb
aam
mov
jno
dec
push
push
mov
and
repnz
mov
arpl
inc
out
daa
sbb
ljmp
fisttps
fs
pop
sub
sbb
fadds
inc
or
xor
and
mov
les
mov
add
xchg
hlt
cmp
stos
dec
or
add
sub
push
sar
ficoml
sti
jb
cld
xor
cmp
mov
divb
adc
rcrl
imulb
adc
fdivs
jbe
xor
fs
jecxz
inc
sub
in
mov
in
jecxz
jle
push
decl
adc
or
or
nop
lea
push
cmp
jge
pop
sub
aam
test
pushf
mov
pop
sti
lods
ret
mov
and
ret
in
xor
sbb
ljmp
cmp
and
lds
cmpsb
xor
sti
push
aam
mov
in
push
xchg
sbb
ja
cld
gs
sub
out
pop
cmp
add
add
pop
aaa
shll
addb
shld
push
xchg
pop
sbb
push
jo
lock
xor
int
test
int3
int3
popa
in
xchg
ja
push
sub
stc
mov
scas
insl
sbb
push
jecxz
add
lea
mov
mov
shrl
and
das
jne
inc
incl
repnz
jns,pt
ret
mull
mov
das
mov
popf
hlt
clc
pop
jbe
test
fdivs
hlt
dec
xor
push
push
xchg
hlt
das
js
outsl
xchg
lds
int3
pushl
pushl
call
mov
mov
mov
mov
shrd
shr
shl
xor
mov
xor
or
mov
mov
mov
mov
shrd
xor
mov
shl
shr
mov
xor
or
mov
mov
mov
mov
mov
cmp
jne
mov
mov
mov
cmp
jne
movb
movb
movb
movb
mov
mov
or
sub
mov
sub
jmp
jns
imul
pop
notl
mov
sbb
sbb
sub
pop
clc
gs
roll
sub
pushw
std
and
fbstp
call
out
in
xor
repz
lahf
call
sbb
mov
data16
mov
aaa
jae
mov
leave
andb
stc
lods
in
dec
xor
xchg
mov
jns,pt
sbbl
and
shll
iret
sub
ret
sbb
sbb
dec
shlb
inc
popf
or
sbb
daa
adc
pop
fsts
stos
outsb
mov
and
pop
jno
addr16
jge
scas
cwtl
cmp
lcall
mov
stc
in
mov
mov
sub
test
jmp
iret
andb
shlb
adc
pop
pop
lods
leave
pop
pop
push
clc
repz
hlt
ljmp
sub
push
mov
cld
jno
pop
dec
push
cmpsl
pop
pop
xor
and
stos
or
sbb
pop
imul
cmp
lahf
out
xchg
clc
arpl
cs
lods
out
dec
mov
cld
in
jnp
fs
jecxz
insl
sbb
sbb
inc
jmp
insb
sub
mov
call
jne
push
push
lock
aam
mov
mov
repnz
jge
jo
pop
mov
mov
lds
push
mov
inc
mov
into
adc
stc
bound
xchg
and
push
sbb
cli
lcall
loopne
in
push
and
jbe
les
or
sbb
inc
or
inc
and
jge
cmpsb
jle
xor
inc
push
sbb
push
sub
scas
xchg
pop
fucomi
pop
not
sub
popa
or
call
icebp
mov
loopne
xlat
inc
and
js
test
add
mov
pop
cmpsl
addr16
xor
data16
xor
mov
dec
add
aad
mov
jge
jb
das
rcll
mov
int3
in
mov
add
in
cmp
adc
rclb
div
in
xchg
js
stc
and
mov
movsb
add
add
mov
je
push
pop
lcall
sub
or
mov
aam
mov
jle
jae
jmp
cmp
dec
fldl
insb
push
lods
in
push
cltd
push
adc
leave
in
fsts
pop
or
xchg
movsl
mov
orb
testl
jecxz
and
pushf
push
outsl
mov
adc
and
aaa
mov
inc
add
fs
popa
fldenv
add
lahf
sub
jmp
pop
pop
sbb
push
fldl
add
or
repz
jl
cld
sahf
adc
push
mov
and
std
pop
xchg
cmc
fidivrl
test
mov
or
sub
cmp
stc
add
dec
jbe
mov
sub
inc
add
repnz
mov
push
mov
cmpsb
and
daa
sub
add
mov
in
or
cmp
fistps
inc
xchg
jne
outsl
cs
add
xor
sub
out
inc
add
loope
xor
std
adc
pop
stos
popa
adc
or
sbb
fisttpll
aaa
out
movzbl
movzbl
cltd
idiv
movzbl
or
mov
movb
movb
movb
movb
movb
mov
mov
or
and
mov
imul
mov
movzbl
movzbl
and
mov
movzbl
cltd
idiv
mov
cmp
je
lea
push
lea
call
cmp
jne
cmp
jne
jmp
mov
mov
mov
mov
add
adc
mov
mov
jmp
mov
push
push
lea
push
call
mov
push
pushl
lea
push
call
mov
mov
jmp
ss
cs
push
sub
loop
adc
inc
mov
sbb
adc
sbb
push
pop
loope
data16
cli
mov
enter
js
xchg
aad
sub
shrb
dec
pop
pusha
insl
jae
sbb
sub
fstpl
pop
cltd
cmp
pop
mov
clc
lods
sub
dec
shlb
leave
push
clc
xor
int3
mov
in
add
fldt
jno
fsubr
mov
jno
mov
and
adc
inc
sbb
inc
adc
jg
movsb
xchg
jmp
sbb
xor
cmp
xchg
mov
mov
or
cmp
aad
push
stos
movsl
inc
sbb
mov
and
add
sarl
out
xchg
pop
push
add
xor
cmp
sahf
cld
test
cmp
loope
sub
mov
push
rclb
sbb
lahf
dec
pop
int3
shll
adc
int3
outsb
hlt
bound
xchg
cltd
lcall
int
out
enter
or
or
cmp
pop
es
add
sbb
sbb
leave
repz
inc
mov
add
inc
ja
sbb
and
les
mov
fs
mov
jge
and
push
nop
ret
xor
aad
int
and
scas
sahf
xchg
imul
add
std
dec
cmp
push
pop
adc
sub
pop
pushf
mov
pop
insl
jg
in
mov
mov
stos
adc
in
lret
lahf
mov
leave
fsub
rcrl
mov
popf
dec
pop
out
cmp
push
les
repz
mov
popf
sbb
out
xor
shll
loop
iret
pop
cmp
push
jbe
popa
es
ret
inc
and
xchg
fmull
jle
pop
ljmp
dec
popf
push
push
lret
or
mov
rclb
cmp
inc
imul
sub
jo
cli
test
aad
sar
ffree
dec
rolb
fidivrl
xchg
and
jno
xor
out
inc
dec
mov
pop
std
fcomp
out
inc
add
cmp
fsub
in
stos
adc
push
jb
shlb
mov
ljmp
pop
adc
jmp
add
sub
dec
scas
pop
ret
cld
mov
jmp
and
mov
mov
xchg
mov
push
sub
adc
je
dec
jmp
fldt
mov
mov
mov
cmp
movsb
add
sbb
insb
sti
cltd
enter
adc
and
dec
andb
dec
test
sbb
test
outsb
insl
push
mov
lods
arpl
mov
mov
daa
pop
insb
xchg
dec
sub
xor
sub
and
mov
fimull
sbb
fucomi
pop
movsl
and
stc
outsl
push
jbe
xor
sub
scas
adc
int
sbb
mulb
mov
imul
ret
loopne
dec
iret
mov
push
popf
xor
loopne
mov
cmp
pop
dec
outsb
pop
sbb
lods
fnsave
jb
icebp
outsl
pop
adc
dec
sub
orb
les
mov
push
test
or
mov
adc
cwtl
inc
xchg
jns
mov
sbb
stos
adc
sub
fs
mov
popa
dec
xorl
dec
and
mov
mov
mov
lea
mov
add
movl
movl
mov
and
add
and
jmp
fistpll
jne
sbb
sarl
mov
sbb
adc
sbb
or
cwtl
rclb
int3
rcl
shrb
cmp
push
cmc
xchg
imul
popf
in
dec
test
movsb
loopne
repz
fsts
fbld
aam
scas
push
repnz
aaa
outsl
mov
mov
or
fdivrp
imul
sbb
pop
lods
or
mov
adc
lret
add
imul
lods
lods
push
add
shl
fistpll
mov
cli
outsb
insb
loopne
mov
out
aas
aad
fstp
ljmp
inc
stos
repnz
ret
jae
inc
les
xchg
in
mov
add
or
cmc
dec
popl
mov
xor
sub
fiaddl
je
sub
bound
popf
or
scas
mov
inc
push
mov
pusha
cld
jo
sbbl
cmp
push
lods
fcompl
ds
mov
mov
test
mov
call
mov
xchg
mov
cwtl
push
mov
push
push
add
cmpsl
sbb
add
cmp
nopl
rcll
in
push
sbb
aam
out
cld
push
mov
add
or
mov
pop
hlt
or
lock
pushf
dec
push
push
inc
sahf
mov
pop
insb
xor
gs
push
div
fwait
int3
and
jmp
xor
adc
sub
push
icebp
mov
or
inc
sbb
jo
scas
repnz
push
pop
in
loope
xor
jl
shrl
xlat
cli
mov
mov
data16
out
jmp
loope
dec
psraw
jbe
sti
getsec
je
mov
int3
outsl
lret
aad
cmp
stos
stos
dec
cmp
xchg
inc
mov
data16
ret
cmpsb
xor
data16
mov
and
loope
sub
orb
mov
sbb
into
or
lret
inc
xchg
lcall
pop
int
sbb
lods
insb
dec
dec
or
xor
sub
jp
in
jnp
mov
pop
add
push
xchg
mov
xchg
push
cltd
mov
push
pop
stos
sbbb
sub
mov
fisubs
pop
ds
jl
mov
jl
shrb
mov
icebp
sub
movsb
aad
loope
call
xor
pop
cmp
lds
jecxz
push
aad
data16
in
adc
cmp
pop
cltd
aas
ljmp
inc
cmp
mov
xchg
mov
fs
cmpsb
jbe
mov
aas
ret
inc
xorl
push
aam
ret
sbb
test
cmp
gs
in
ss
shlb
and
popf
and
cmpsl
mov
out
push
test
fsubp
dec
test
sub
adc
xchg
mov
clc
xchg
mov
scas
sub
stos
push
mov
add
xrelease
insw
repz
rclb
or
jp
outsl
adc
test
jbe
push
mov
mov
stos
mov
jp
test
or
push
clc
adc
or
in
sbb
dec
sub
mov
sbb
pop
cmp
mov
mov
jnp
lds
mov
ror
loope
add
and
mov
movl
mov
mov
or
add
cmp
je
mov
mov
mov
xor
shld
shl
xor
xor
cmp
jne
cmp
je
mov
mov
mov
mov
xor
xor
shr
shl
or
xor
shld
shl
xor
xor
cmp
jne
cmp
je
mov
cltd
mov
mov
cltd
shld
shr
xor
shl
or
or
mov
mov
xor
xor
mov
cmp
jne
cmp
je
pushl
pushl
mov
mov
pushl
mov
call
mov
mov
mov
mov
push
add
push
lea
push
call
mov
mov
pop
pop
pop
mov
pop
ret
push
mov
sub
and
jmp
sub
push
test
sbb
enter
inc
test
sbb
add
popf
das
cmp
xlat
call
jnp
cmp
hlt
sbb
loop
xchg
ljmp
dec
mov
jmp
xlat
nop
pusha
push
test
pop
push
pop
icebp
je
push
lea
push
imul
leave
imul
dec
ja
cld
mov
pop
mov
mov
jo
ss
mov
fstps
jg
hlt
gs
jl
mov
flds
xor
inc
dec
div
fsubs
imul
sub
push
decb
add
lcall
sbb
mov
mov
mov
outsb
popa
jo
pop
pop
add
arpl
mov
pushl
mov
cmpl
popf
push
mov
xchg
sbb
and
xchg
dec
arpl
mov
scas
sbb
movl
pusha
mov
inc
aas
or
and
stc
out
les
push
ds
sub
mov
xchg
sbb
xchg
scas
loope,pt
shr
push
cld
sub
ljmp
mov
mov
jno
fnsave
and
shrl
xchg
cwtl
jle
xor
pop
leave
dec
dec
mov
imul
call
lea
jp
cmpsl
stos
mov
sub
repnz
pusha
arpl
call
gs
sbbl
loope
movsl
push
mov
nop
in
dec
inc
push
push
dec
data16
and
xchg
cmp
sub
out
and
ds
sub
mov
mov
les
nop
insl
imul
fstpt
jb
or
fmul
rol
fildll
push
pop
dec
sbb
stc
inc
pop
lods
jge
or
ffree
adc
daa
mov
dec
jmp
xchg
ja
outsl
mov
jae
fildll
cmp
loope
adc
jbe
jge
mov
mov
push
inc
gs
clc
repnz
add
dec
lds
aas
mov
push
out
pusha
push
push
jp
jo
xchg
mov
pop
stos
pop
es
fidivrl
sub
or
push
and
pop
xchg
pop
and
cltd
leave
cmp
in
pop
es
cmpsb
mov
in
and
xchg
jle
imul
or
test
jmp
push
inc
cmpsl
xor
fld
std
stos
pop
daa
jmp
xchg
aas
test
xor
jg
shlb
sub
popa
bound
out
int3
push
test
adc
cmp
sti
xlat
fxch
push
lcall
loope
test
jecxz
mov
mov
shl
and
testl
dec
xor
aam
fsubl
adc
mov
and
in
shll
mov
or
pop
aam
xchg
xchg
loop
insb
out
inc
movsl
aad
sub
and
lea
test
xchg
daa
xor
xor
xchg
mov
outsb
sbb
hlt
cmp
loop
sub
mov
xor
lret
imul
arpl
push
xchg
cwtl
xchg
bt
dec
scas
inc
jo
or
lahf
hlt
mov
push
dec
push
neg
push
xor
add
mov
sub
or
movl
or
movl
sbbl
movl
add
mov
mov
movl
xor
div
imul
cmpl
mov
mov
movl
jmp
movl
je
pushl
push
push
push
push
pushl
pushl
call
negl
and
andl
not
sbb
adcl
mov
xor
movzbl
add
and
mov
subl
xor
sbbl
div
cmpl
mov
notl
mov
jmp
movl
jle
pushl
push
pushl
push
push
call
add
movl
xor
add
and
subl
add
sub
cmpl
mov
mov
mov
jmp
movl
je
pushl
push
call
adc
xor
sub
add
mov
mov
and
sub
mov
add
movl
movl
neg
movl
cmpl
not
mov
movl
mov
jmp
movl
jge
push
push
call
negl
mov
mov
sub
and
add
sbb
movzwl
adc
mov
and
add
xor
inc
xor
and
imul
mov
xor
add
adc
and
add
sub
incl
mov
movl
movl
movl
movl
cmpl
mov
movl
mov
jmp
mov
mov
jb
push
pushl
push
pushl
pushl
call
sub
orl
mov
mov
add
mov
mov
sub
or
mov
mov
adc
mov
mov
sub
sub
or
mov
imul
mov
cmpl
notl
mov
notl
mov
jmp
movl
ja
push
push
push
pushl
push
pushl
pushl
call
add
add
negl
mov
sbb
mov
sbb
xor
mov
sub
mov
movzbl
sub
imul
cmpl
not
notl
jmp
movl
not
jne
pushl
call
mov
mov
or
orl
subl
sbb
add
mov
and
mov
xor
imul
cmpl
movl
movl
jmp
movl
movl
jge
call
or
negl
mov
mov
sbb
orl
add
or
mov
and
or
movl
mov
addl
xor
andl
jmp
pop
push
testl
les
fstpt
mov
sbb
push
pop
daa
stc
imul
mov
fidivrl
rcll
es
cmc
add
mov
test
pop
adc
mov
ss
dec
cmpsb
lods
leave
sbb
das
nop
aam
xchg
mov
xchg
scas
and
icebp
jo
ffreep
ret
mov
xchg
pop
xor
movaps
sbb
fmull
fisubl
je
cmp
pop
aam
cmpsl
mov
or
mov
add
cmpl
daa
pop
repz
xor
int
pushf
xor
addr16
jbe
xor
xor
iret
jle,pt
sbb
popf
xor
flds
jle
repnz
sub
xchg
pop
out
mov
mov
fcompl
sub
mov
push
pop
in
xor
jno
sub
out
cmp
inc
jne
mov
sub
push
mov
inc
pop
and
adc
inc
mov
sbb
in
pop
enter
aaa
loop
rcl
sbb
sbb
lds
xchg
mov
les
loopne
shlb
add
es
in
add
add
shrl
xchg
imulb
pop
and
test
sahf
mov
scas
sub
out
sti
cmp
in
fisubs
push
jecxz
mov
leave
insl
cwtl
dec
sbbb
fildll
shl
or
jl
pop
rcrb
js
fbstp
push
ljmp
aaa
inc
mov
dec
bound
mov
push
mov
outsl
pop
test
std
lods
in
sbb
mov
sbb
outsl
dec
popf
imul
pop
aaa
push
iret
xor
rep
mov
loope
in
pminsw
cli
sbb
jo
mov
mov
xchg
enter
ljmp
mov
gs
adc
out
inc
or
aaa
or
into
ljmp
push
in
cltd
into
jae
sbb
ret
adc
testl
outsl
pop
sbb
dec
fisttpll
jo
popf
ljmp
mov
pop
pop
icebp
fwait
into
or
xchg
lods
or
leave
adc
lret
fcmovu
xor
jne
aas
cwtl
adc
je
xchg
lcall
in
cmp
jnp
mov
adc
adc
mov
popa
mov
push
lods
imul
mov
popf
loopne
cmp
ret
sti
cmp
mov
mov
aaa
sbb
movsl
scas
addr16
jl
aad
shrb
and
inc
jp
ss
inc
repz
jg
aam
lods
icebp
cmp
xchg
icebp
in
jne
add
jge
es
cmp
push
shrl
inc
fsts
cmpsb
mov
fstpt
mov
and
loopne
insb
mov
mov
adc
sub
bound
or
cltd
mov
cmpl
jg
inc
or
mov
pop
jo
dec
push
mov
sub
pop
aam
cmc
jo
cmpsb
es
sti
aaa
mov
iret
jmp
xchg
cli
in
adc
push
add
cmp
hlt
in
jl
sub
test
push
cltd
test
andl
lea
mov
add
mov
mov
and
movl
subl
movl
movl
andl
mov
cmpl
mov
mov
jmp
movl
je
push
pushl
push
pushl
call
not
dec
sub
inc
adc
and
movzwl
sub
mov
xor
mov
or
xor
add
subl
mov
or
add
xor
xor
or
adc
mov
mov
mov
sub
sub
movl
movl
adc
movl
mov
cmpl
movl
mov
mov
movl
jmp
mov
jae
pushl
pushl
push
push
push
call
mov
add
add
adcl
decl
addl
sbb
orl
mov
or
add
cmpl
movl
movl
jmp
movl
jl
pushl
call
adcl
xor
xor
add
mov
adcl
sbb
movzwl
or
adc
xor
cmpl
movl
mov
jmp
movl
jae
push
pushl
call
xor
or
adc
mov
sub
movzwl
sub
mov
sbbl
addl
adc
mov
sub
xor
mov
lea
cmpl
mov
mov
jmp
movl
jg
pushl
push
pushl
call
xor
mov
or
mov
add
xor
add
add
and
or
dec
sub
not
mov
movl
movl
cmpl
mov
mov
jmp
mov
jl
pushl
pushl
push
call
add
or
or
and
mov
sbb
and
add
mov
and
add
sub
imul
mov
sbb
mov
imul
xor
mov
xor
mov
mov
div
andl
sub
movzbl
sub
mov
xor
movl
cmpl
movl
movl
mov
mov
jmp
movl
jne
pushl
push
push
push
push
call
xor
dec
add
xorl
add
subl
sub
movl
movl
cmpl
mov
mov
movl
movl
jmp
mov
movl
jle
pushl
push
push
call
add
xorl
or
movl
or
mov
cmpl
mov
mov
jmp
movl
movl
jbe
push
call
dec
add
movl
sbb
and
subl
mov
xor
sbbl
div
orl
imul
sub
add
or
mov
addl
xor
xor
mov
div
xor
movzbl
and
mov
cmpl
mov
mov
mov
jmp
movl
jne
push
call
orl
or
adc
andl
subl
subl
add
mov
mov
sub
and
movl
sbbl
movl
neg
movl
subl
mov
mov
sub
add
shr
sbb
sub
cmpl
movl
movl
movl
jmp
mov
jl
push
push
push
call
orl
xor
sub
addl
adcl
sbbl
mov
subl
imul
or
mov
and
adc
mov
subl
sub
movl
mov
cmpl
mov
movl
movzwl
jmp
movl
jle
pushl
push
push
call
and
or
mov
add
and
adc
movl
cmpl
movl
mov
jmp
mov
mov
jbe
pushl
pushl
push
call
mov
adc
sub
mov
and
mov
and
sub
movzbl
adc
movl
mov
sbb
or
mov
or
sub
sub
mov
movzwl
sbb
movl
movl
mov
mov
sub
or
movl
movl
inc
movl
movl
adc
movl
mov
and
mov
and
add
cmpl
movl
movl
mov
mov
jmp
movl
jbe
push
push
pushl
call
andl
mov
or
xorl
subl
add
dec
mov
add
movzwl
xor
mov
subl
sub
cmpl
mov
movl
mov
jmp
mov
mov
jae
push
push
push
pushl
call
movzbl
or
sbb
or
xor
sbb
or
xorl
movzwl
xor
mov
mov
imul
imul
and
mov
or
cmpl
mov
mov
not
jmp
movl
jl
push
push
pushl
push
call
or
mov
xor
mov
andl
or
mov
mov
and
mov
or
mov
add
xor
add
add
mov
mov
movl
lea
orl
push
xorl
call
adc
mov
adc
mov
sub
jmp
scas
dec
jb
pop
and
push
sarl
pop
fwait
push
sbb
adc
sbb
cmp
es
xchg
sbbl
adc
jns
and
std
mov
iret
fadds
enter
and
xor
xor
pusha
cs
repz
lods
inc
and
sbb
xchg
sahf
fadd
dec
in
mov
lock
mov
xchg
stos
lahf
hlt
mov
xchg
jae
add
dec
fidivs
rolb
and
and
scas
sub
mov
sbb
cwtl
add
bound
lea
loop
fwait
sub
aaa
lahf
jg
fidivrs
sub
add
lds
pop
or
xchg
mov
repnz
cli
dec
and
mov
lret
jecxz
inc
roll
inc
js
fnstsw
or
in
test
fdivl
int
xor
dec
mov
stos
addr16
adcb
pop
std
and
xor
mov
je
pop
pop
adc
femms
dec
or
fdivrs
and
inc
mov
incb
jecxz
lods
mov
cld
stos
inc
sub
test
iret
and
int3
cmp
push
popa
sbb
lods
sti
jecxz
or
pop
daa
push
cmc
pop
jg
addl
ljmp
jne
fcmovnbe
dec
dec
mov
dec
aaa
sub
cli
and
leave
out
jecxz
and
mov
js
jecxz
add
add
push
test
ja
add
xor
mov
into
xchg
sub
inc
ret
xchg
mov
popw
xor
push
cli
fldcw
std
cmpsb
inc
pop
jp
cmpsl
mov
ret
mov
insb
nop
xchg
or
dec
repz
xchg
pop
mov
pop
hlt
icebp
movsl
mov
in
repnz
shrl
mov
in
insl
fldenv
and
sbb
add
jbe
or
int
sbb
mov
sbb
adc
mov
cmp
in
xchg
in
out
shrb
cmp
sbb
mov
lea
ror
cmpsb
cmc
jl
mov
or
addb
outsl
inc
lds
mov
adc
std
pop
sub
js
out
call
imul
add
inc
repz
cld
aaa
jae
outsl
jecxz
inc
popa
mov
sahf
sbb
mov
into
mov
test
lret
adc
push
dec
fwait
movsb
insb
cwtl
out
data16
push
pusha
lret
clc
gs
and
loope
enter
leave
mov
int
cmp
xor
pushf
mov
jmp
bound
push
gs
rol
fistpll
and
inc
test
out
xchg
nop
movsb
add
out
push
out
mov
mov
pop
or
test
shll
iret
negl
inc
addr16
jle
dec
mov
xchg
js
stc
dec
dec
push
mov
hlt
mov
sti
add
dec
mov
out
xchg
mov
fadd
out
fldenv
cmp
sub
iret
insb
test
movsb
dec
shrl
cmp
sbb
in
jge,pt
daa
cld
xor
addr16
adc
cli
pop
fwait
cmp
cmp
xor
imul
cmpl
movl
not
movl
jmp
movl
movl
jg
push
push
call
sub
add
xor
mov
and
or
add
sub
add
sbb
and
sub
xor
mov
andl
div
not
xor
add
mov
movl
dec
movl
movl
and
movl
cmpl
not
mov
jmp
movl
jae
push
call
not
orl
dec
sub
xor
movl
movl
mov
mov
sub
xor
movl
sbbl
movl
sub
movl
xorl
movl
movl
movl
mov
mov
cmpl
mov
not
not
jmp
movl
movl
jge
push
call
or
sub
xor
xor
add
add
add
and
mov
or
cmpl
mov
mov
jmp
movl
ja
pushl
push
pushl
pushl
pushl
push
push
call
mov
adc
mov
movzbl
xor
and
xor
or
xor
add
sub
xor
mov
mov
adc
mov
and
sbb
sub
sub
cmpl
movzwl
mov
jmp
mov
jg
push
call
mov
mov
sbb
adc
dec
sbbl
imul
mov
cmpl
movl
mov
mov
jmp
movl
jle
pushl
call
adc
mov
add
sub
addl
xor
add
sbb
mov
adc
lea
addl
mov
and
mov
adc
mov
mov
mov
xor
mov
xor
add
andl
mov
xor
lea
add
and
cmpl
movl
mov
movl
mov
jmp
movl
jge
push
push
call
and
or
xorl
add
mov
orl
sub
add
mov
movl
jmp
fidivrs
cli
sbb
dec
push
xor
push
xchg
push
sbb
adc
sbb
mov
mov
cmp
movsl
test
xchg
add
inc
push
xor
aaa
jmp
insb
dec
aad
shlb
add
pop
dec
push
and
aaa
loope
shrb
cmp
xlat
pop
aaa
jae
and
in
js
mov
jmp
gs
dec
mov
fs
loop
pusha
pop
mov
inc
ss
sub
lret
movsl
xchg
iret
scas
pop
pop
sbb
push
shrb
pop
jmp
movsb
mov
flds
or
dec
mov
dec
adc
xchg
in
pop
jp
jns
xchg
idivl
hlt
pop
or
les
lods
or
mov
inc
std
int
or
adc
push
push
and
fcmovu
lods
aas
fwait
imul
jl
fwait
inc
in
push
sbb
stos
pop
out
and
adc
or
js
addr16
jl
outsl
inc
mov
xor
aas
push
inc
cld
imul
adc
xor
jecxz
movb
iret
shlb
and
roll
mov
out
and
ljmp
outsl
orl
cmp
call
mov
dec
adc
aam
inc
mov
repz
test
jl
popa
and
gs
and
push
negb
sti
clc
sub
lock
movsb
arpl
pop
iret
jae
pop
lahf
mov
cmc
add
inc
xchg
sub
int3
sub
sbb
stos
xchg
stc
cmp
add
mov
mov
inc
fstps
dec
push
mov
pop
xchg
lret
loop
out
dec
in
and
jle
cmpl
lret
scas
and
shll
testb
sbb
mov
mov
or
int3
jnp
mov
mov
push
out
stos
std
jnp
cmp
mov
mov
ss
cld
pushf
loope
fucom
inc
pop
push
mov
cwtl
mov
mov
aas
sbb
mov
and
pop
mov
sub
cmpsl
pop
fwait
mov
fwait
push
adc
rorb
inc
je
push
and
cmp
testl
adc
out
ds
popa
sbb
push
nop
and
popa
out
js
push
fcomps
test
and
sub
scas
push
jae
stos
sub
mov
adc
jbe
and
enter
dec
pushf
sbb
mov
addb
xor
enter
mov
test
mov
movsl
or
ja
cmp
mov
repnz
sbb
in
jb
and
imul
inc
mov
subl
fs
sub
mov
sub
fildl
push
push
and
ret
mov
repnz
into
xchg
adc
add
cwtl
jnp
popf
xor
lods
add
cmp
ret
mov
jecxz
add
or
dec
mov
xchg
fs
cmp
xor
int
jne
stc
int
cs
cmpsl
cmpsl
xor
ss
or
dec
add
mov
loopne
out
loopne
inc
pop
adc
and
sub
testl
call
test
jns
movl
mov
mov
mov
xor
xor
mov
call
mov
mov
mov
jmp
movsb
add
sub
movsb
jp
int3
push
stos
sarl
in
mov
and
sbb
fld
pop
clc
mov
inc
xchg
jmp
into
leave
dec
xchg
test
cmpsb
or
push
mov
movsl
sbb
sub
push
sub
and
test
jmp
fcompl
nop
push
test
ja
xlat
std
adc
lods
outsb
adc
inc
lea
shlb
imul
xlat
or
ljmp
and
inc
lret
out
mov
and
push
aad
icebp
cmp
cwtl
orl
fstpt
adc
jne
pop
mov
xor
mov
mov
mov
cwtl
adc
jb
dec
int
and
jo
mov
xor
mov
push
jl
jbe
cmpsb
lods
adc
mov
sub
xor
daa
xor
stc
mov
push
cltd
mov
enter
out
sub
shrl
pop
pop
ret
loop
inc
xchg
lret
dec
dec
sub
add
outsb
sub
rcr
mov
jbe
loope
inc
testb
pop
aam
sub
les
sub
fdivrs
xor
loopne
adc
lahf
mov
lods
aaa
scas
push
xchg
incl
bound
aas
sbb
inc
mov
push
jmp
cmc
xorl
cmpsl
ss
adc
hlt
outsl
das
in
push
push
add
and
push
pop
addl
mov
and
jle
popa
jae
ficomps
sub
movsl
lea
pop
test
int3
jns
lcall
lea
cmpsl
lret
mov
pop
mov
ss
cmpl
mov
adc
jne
add
and
mov
dec
iret
and
pop
test
lgs
cmp
or
jmp
cmpsb
fidivrl
mov
mov
adc
xor
test
jecxz
outsb
dec
push
sahf
mov
shl
or
imul
lret
xor
daa
mov
push
jle
hlt
std
jmp
mov
repnz
dec
mov
mov
adc
or
clc
inc
ljmp
inc
notl
pcmpeqd
dec
inc
cmp
cmpsb
pop
repnz
or
or
test
fld1
sub
cmp
insb
push
add
adc
inc
call
push
mov
es
or
and
mov
insb
scas
mov
adc
sub
mov
adc
or
cmc
mov
in
dec
dec
loopne
in
jbe
fidivrs
in
mov
jb
mov
inc
insl
bound
adc
repnz
out
xor
pop
sbb
es
cmp
mov
stc
or
push
pusha
add
inc
push
mov
sbb
mov
cmpsb
jns
lea
pop
test
cmp
in
dec
dec
or
int3
cltd
jg
out
cltd
jb
mov
rcr
cmpsb
fsubs
ss
mov
lock
add
mov
jb
stos
stos
or
subb
or
lret
add
fcomps
out
fimull
inc
or
and
frstor
data16
inc
decl
xchg
mov
pushl
xor
mov
call
or
or
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
mov
mov
mov
mov
call
mov
or
mov
or
push
push
push
push
jmp
loopne
add
sbb
fcomps
iret
jecxz
jo
xchg
sbb
adc
sbb
lds
aaa
cld
xlat
aam
test
inc
aas
jmp
inc
dec
mov
cmpsb
sbb
call
in
mov
sbb
add
cmpl
pushf
movsl
xchg
fcompl
mov
mov
leave
scas
mov
jg
and
rorb
mov
dec
cmp
push
out
test
out
add
fldl
adc
add
aaa
inc
mov
movsl
and
inc
push
sub
popa
dec
aad
dec
lcall
sbb
sbb
aas
sub
test
negb
call
pop
shl
stos
mov
sub
xor
in
sbb
sub
cmp
or
enter
lret
ss
fwait
aaa
xchg
movsb
push
jmp
cmp
sbb
inc
hlt
fs
jbe
dec
imul
int3
movsl
dec
lret
mov
js
cmpsb
add
stos
iret
fwait
dec
xchg
lds
mov
mov
pop
roll
data16
inc
data16
add
cmpsl
lods
mov
loope
fbstp
outsb
aad
or
dec
and
jno
jbe
scas
imul
jbe
sarl
fdiv
push
lcall
cmc
push
xlat
pop
clc
inc
cmpsb
and
fcmovne
movsb
stc
pop
sbb
out
js
outsb
ss
push
inc
lahf
cmp
cmpsb
and
mov
sub
gs
cltd
pusha
mov
pop
das
sbb
repnz
add
bound
lds
jns
mov
mov
mov
mov
repnz
jns
cmpsb
ljmp
in
xchg
inc
xor
or
loope
fptan
or
dec
mov
cmpsb
mov
adc
push
and
push
sub
jb
mov
and
sub
mov
fwait
mov
or
pop
add
mov
fsubl
sbb
xchg
inc
or
xlat
addr16
jae
jmp
out
xlat
pop
sbb
cmpb
mov
iret
icebp
jp
adc
inc
mov
hlt
popa
mov
sbb
inc
shlb
xchg
in
push
call
das
jnp
es
jno
mov
sub
dec
stc
xor
xor
mov
adc
out
outsb
mov
out
sbb
outsl
out
dec
test
push
push
pop
fistpl
je
cmp
jg
repz
and
push
ss
jmp
out
in
fsubrl
outsl
jp
mov
fcomp
sbb
lcall
xchg
not
outsl
sub
test
scas
and
sbb
pop
test
adcb
xor
fdivl
and
lcall
ret
mov
ficomps
or
sti
sub
mov
add
roll
push
lock
sbb
xchg
data16
or
or
out
lock
and
in
xchg
and
fnstsw
stc
dec
sub
por
gs
push
mov
inc
in
mov
pop
pop
out
jmp
pushl
loope
sbb
in
xor
nop
jbe
pop
dec
dec
pusha
loop
test
out
ss
paddw
add
arpl
xchg
mov
lds
aad
ljmp
mov
std
cmp
jne
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
mov
mov
jmp
adc
pop
out
loop
loope
add
inc
mov
and
sbb
xor
testb
jnp
dec
mov
add
into
mov
pusha
push
or
dec
popf
dec
ljmp
cmpb
push
or
xor
jl
jae
push
and
mov
test
adc
das
lods
inc
mov
push
mov
loope
cwtl
lock
decb
fisubrl
pop
jl
pop
fwait
popf
gs
inc
dec
xchg
iret
filds
lret
and
jne,pn
cli
int3
das
xor
mov
in
lret
add
movsb
xchg
int
cmp
scas
lret
lahf
imul
mov
loopne
pop
lea
cmp
or
rolb
pop
cmpsl
nop
mov
int3
lahf
arpl
scas
std
pop
fmuls
leave
mov
mov
outsb
cmp
sub
xchg
push
push
cmp
pop
into
mov
loopne
jbe
fbstp
into
adc
loop
fsubl
sbb
scas
pop
les
orb
call
cltd
lods
es
push
xor
mov
stc
stos
pop
aaa
dec
cmp
xchg
add
addb
adc
sar
sbb
pop
push
jp
sbb
mov
add
test
mov
xchg
fscale
clc
xchg
and
jo
andb
xchg
adc
sub
push
sub
ds
std
push
cld
push
mov
bound
inc
cli
cmp
and
inc
push
and
jp
fldt
movsl
stos
ret
js
mov
add
add
fs
test
xor
mov
test
lods
aaa
enter
lea
push
pop
leave
sub
stos
shlb
mov
rsqrtps
mov
jecxz
out
fadds
and
xchg
imul
dec
sahf
gs
jmp
jmp
or
adc
add
gs
mov
fucomip
lock
mov
cmp
fcoml
push
nop
repnz
xchg
mov
adc
jle
jp
adc
movsl
or
mov
xchg
rclb
mov
dec
cmp
pop
sub
loope
jmp
xchg
xor
loopne
jns
mov
stc
xchg
or
ret
fwait
push
push
outsl
lds
push
xor
sahf
in
das
xor
pop
je
lock
out
push
mov
adc
inc
test
ret
je
pop
xchg
cs
and
testl
test
xchg
ret
adcl
in
sbb
leave
inc
int
xor
sbb
loopne
jg
test
xchg
and
jge
mov
lret
lock
inc
outsb
mov
adc
addb
jg
sbb
jns
push
jge
add
divb
jle
mov
adc
cmp
test
lods
or
push
sub
arpl
adc
hlt
pop
ret
jnp
rclb
enter
imul
adc
ret
es
lahf
mov
cs
sbbb
xchg
adc
jecxz
stc
or
loope
sub
test
loopne
jmp
add
ror
or
mov
pop
inc
jbe
fwait
fwait
cltd
out
or
ljmp
fmuls
decl
ret
push
push
call
mov
jmp
jmp
lea
mov
mov
movl
mov
xor
shr
mov
xor
shl
or
mov
mov
mov
jmp
mov
xor
sub
jmp
movsb
and
mov
sbb
adc
sbb
cli
jne
push
dec
sbb
adc
sti
jmp
das
cli
lods
pusha
sbb
mov
mov
mov
inc
sub
adc
inc
sti
ss
mov
fxch
negb
gs
outsb
neg
xor
scas
pop
arpl
adc
lret
icebp
cmp
push
orl
dec
aam
in
popf
or
or
nop
mov
sub
cmpb
mov
daa
lret
popa
rolb
clc
addr16
stos
mov
pop
lds
and
out
rclb
cmp
test
rcrl
mov
aas
in
fsub
icebp
inc
inc
or
clc
popa
adc
cmp
fsubrl
push
cmp
push
fistps
les
cmp
xchg
iret
rcll
push
mov
cmp
fisttpll
stc
dec
jmp
jno
insl
jae
push
pop
sbb
test
jno
sub
mov
into
xchg
pop
pop
in
pusha
imul
xchg
stos
loope
iret
jmp
in
jl
shl
mov
movsl
popa
and
adc
jp
rorl
or
xchg
int
push
and
pushf
dec
sub
iret
pop
dec
xchg
fildl
mov
add
xor
pop
push
dec
mov
insb
leave
push
xchg
pop
push
and
pusha
inc
outsb
in
push
xchg
xchg
leave
cld
or
jns
outsb
jmp
pop
jne
test
std
lcall
mov
insb
insb
test
js
lret
dec
idivb
xchg
xchg
jle
mov
mov
das
xlat
out
or
push
push
int3
jno
mov
jl
jg
jns
inc
fidivl
test
movsb
jnp
inc
ret
push
mov
push
cld
in
mov
inc
pop
or
jl
stc
adc
mov
int
sti
dec
ret
cld
push
push
dec
push
jmp
xchg
gs
adc
or
push
mov
lock
mov
xchg
cli
outsl
xor
jp
jmp
aas
leave
inc
outsl
jmp
cmp
add
sub
leave
pop
imul
pop
xchg
sarb
js
popa
adc
in
jg
adc
xor
adc
cmpsl
push
repz
roll
mov
sub
mov
and
loop
or
test
jle
popa
inc
push
mulb
jo
pop
sbb
push
out
push
sahf
xchg
inc
fistl
xor
mov
mov
dec
int3
or
outsb
out
pop
mov
pop
loopne
pop
or
inc
xchg
mov
mov
dec
xor
mov
xlat
cld
mov
lahf
in
mov
lods
sbb
mov
outsb
xlat
gs
clc
das
push
es
inc
adc
mov
dec
sub
sti
lcall
mov
cmp
pop
push
sbb
dec
out
cmp
in
loop
sub
or
aam
out
lret
cmp
fimuls
fnstenv
push
fildl
daa
pop
fwait
scas
lret
sbb
repnz
nop
dec
xchg
mov
mov
mov
scas
leave
xchg
push
out
dec
sub
mov
sti
test
test
pop
int
jle
shlb
mov
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
jmp
jb
adc
or
xor
shll
inc
mov
sbb
adc
sbb
mov
ljmp
inc
imul
adc
loopne
adcl
adc
scas
leave
movl
test
jae
sbb
push
aad
stos
dec
addr16
ret
out
mov
adc
push
rcrl
xor
popa
mov
inc
fs
int
rcr
addb
jl
xchg
in
push
xor
clc
sbb
and
hlt
xor
and
mov
scas
push
pop
add
loop
and
pop
sti
jae
pop
push
std
cmp
sbb
or
subb
and
push
mov
xor
test
and
sbb
sarl
add
data16
sbbl
and
and
in
lds
and
mov
pop
jae
pop
mov
mov
xorl
stc
adc
sub
aaa
pop
data16
sahf
andb
lods
jae
lahf
adcb
imul
mov
call
xchg
pop
aad
mov
test
sub
mov
test
jne
arpl
lea
push
xor
sbb
stos
roll
pusha
cmp
test
cli
xchg
orb
sahf
xor
inc
fwait
and
mov
iret
bound
icebp
pushf
popf
shll
inc
insl
nop
hlt
xchg
cld
lret
xchg
push
bound
push
push
not
jle
dec
sar
rcr
sahf
mov
daa
dec
pushl
jns
icebp
lods
stos
add
imul
xor
adc
push
sbb
clc
push
sbb
or
push
push
inc
ret
add
cmp
cmpsl
pop
mov
inc
cmp
outsb
out
adc
cmpsb
je
sbbb
xor
incl
push
sub
sub
add
pop
cmp
mov
shll
scas
mov
hlt
fsubrl
jnp
sti
test
rcrl
mov
xchg
sbb
adc
jle
sbb
jle
ds
shrl
roll
pop
int3
and
jmp
push
loope
std
movsb
xchg
push
push
pop
mov
cmpsb
call
or
xlat
in
lret
adc
sbb
mov
test
adc
gs
out
mov
popf
dec
cmp
xchg
push
jo
ds
ret
jae
sbbl
lahf
push
push
repz
or
jno
jnp
cmp
push
mov
push
sahf
mov
pusha
xor
cmp
push
or
mov
dec
add
adcl
fdivrl
dec
stc
call
sbb
jnp
xchg
jne,pn
out
jb
xor
call
sbb
fsubr
dec
xlat
and
jge
xchg
loop
cs
icebp
fsts
xlat
cmpsl
push
mov
leave
add
cltd
adc
cmp
pusha
subl
sub
les
jae
rcrl
or
add
in
int3
cmp
jo
mov
mov
jle
push
inc
cmc
dec
inc
sbb
leave
outsl
dec
push
mov
xor
out
push
pop
div
mov
jmp
xor
divb
inc
ret
push
mov
dec
xor
jno
dec
mov
aad
gs
xchg
inc
mov
ret
mov
mov
call
mov
or
mov
or
push
push
push
push
call
mov
cmp
je
jmp
add
jp
add
mov
sbb
adc
sbb
dec
loope
lods
mov
les
movsb
or
aad
mov
or
scas
ss
pop
sub
xchg
sub
and
std
sbb
movsb
stc
inc
pop
xchg
sbb
je
fs
inc
sbb
lods
fsubl
pop
lock
sahf
xorl
push
cltd
xchg
cld
adc
jp
imul
orb
fucomi
shlb
call
jecxz
repz
mov
xchg
cmp
leave
sub
jg
xor
or
mull
loope
or
clc
aad
push
dec
adc
pop
ja
bound
sub
cwtl
or
push
lea
jae
jmp
pop
stos
mov
inc
xor
adc
lods
pop
mov
jb
shrl
and
mov
pop
pop
or
jns
jl
mov
push
mov
jle
gs
dec
int3
dec
test
push
rcrl
xor
and
xor
pushf
enter
imul
stos
add
mov
xor
and
xchg
mov
mov
ja
in
sbb
andb
stos
bound
mov
mov
stos
outsl
clc
dec
int
jge
push
outsl
xor
ljmp
negl
into
jo
mov
outsb
cmpsb
add
outsb
jge
mov
cmp
and
sbb
jecxz
xor
mov
pop
push
push
ss
dec
pop
pop
loop
and
or
mov
xchg
out
jecxz
mov
mov
pop
pushf
jo
xchg
hlt
and
xchg
inc
fcoms
inc
add
jmp
out
push
push
mov
add
stos
mov
jns
pop
mov
pop
adc
je
pop
or
jo
movsb
leave
dec
sub
call
data16
lret
dec
mov
ds
pop
add
adc
loope
jmp
aam
mov
aaa
out
leave
lods
inc
adc
subb
mov
inc
ficomps
push
push
pop
pop
jl
adc
test
mov
sbb
sub
jbe
test
rclb
add
mov
stos
or
jge
jnp
addb
inc
xchg
pop
mov
sbb
loope
ficomps
xchg
pop
stos
push
fisttpl
outsl
mov
jns
inc
nop
pop
cwtl
jb
sbb
shll
and
inc
xlat
test
fldt
jecxz
sbb
sub
adc
mov
xor
loopne
lock
rcll
sbb
out
in
push
rol
jmp
push
leave
mov
ret
sahf
lcall
fstl
jecxz
cmpsb
xchg
push
pop
mov
outsl
into
push
mov
push
cli
stos
ss
dec
and
lahf
lahf
adc
lret
ljmp
adc
stos
pop
pop
pop
mov
add
mov
movsb
jge
push
iret
mov
mov
insl
adc
jle
inc
sahf
aam
adc
xchg
or
loope
xchg
out
pop
cmc
hlt
adc
out
cmpl
xor
mov
ja
lock
repz
movsl
scas
mov
inc
mov
or
lahf
cmpsl
jl
dec
movsl
into
rorl
sar
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
jmp
loopne
xchg
es
adc
pop
jo
arpl
sbb
adc
sbb
push
js
ljmp
out
mov
sub
add
rclb
jge
mov
pop
cmc
dec
call
loopne
cmpb
dec
sub
test
mov
ret
dec
ret
mov
lcall
adc
out
faddl
cmp
xlat
insl
lret
cmpsb
loopne
and
insb
sub
fsubl
mov
cmp
aad
mov
mov
mov
lods
adc
popf
add
aam
insl
or
pusha
scas
xchg
mov
popf
jecxz
lahf
push
mov
aaa
out
adc
lret
mov
mov
movsb
or
sbb
sbb
scas
pop
cld
xor
inc
ret
popf
lods
sahf
clc
push
mov
sahf
jle
mov
ret
and
ret
jns
xor
xchg
adc
pusha
pop
mov
in
push
mov
sti
adc
adc
xlat
xchg
and
lods
data16
xor
mov
lods
xchg
popa
cmpsl
mov
pop
movl
rcrl
jnp
dec
subl
in
or
mov
inc
rcrb
cs
cmp
hlt
mov
push
inc
adc
cmpl
js
fcoml
push
sub
fistpll
xlat
sbb
sub
sub
cmp
fs
add
aad
leave
mov
scas
test
sarl
mov
pop
sarl
lret
xchg
lret
mov
sbb
mov
mov
fmul
inc
test
mov
aas
jg
add
loopne
ret
push
sub
pmulhw
sub
mov
or
ds
lea
mov
ja
outsb
jne
add
pop
push
ljmp
and
lahf
jge
sarl
inc
mov
push
and
mov
int
scas
dec
ljmp
sub
jg
mov
inc
jle
cmpsb
cltd
add
mov
out
insb
sub
insb
iret
ret
ret
cmp
cwtl
mov
inc
and
mov
cld
mov
iret
mov
jo
xchg
push
out
xor
jo
lock
imulb
cltd
xor
mov
scas
lahf
pop
pop
lock
inc
or
enter
xor
pushf
dec
sbb
nop
cmpsb
mov
test
imull
imul
sub
xchg
mov
dec
mov
outsl
in
into
insb
sbb
jo
push
lcall
add
popa
aaa
add
repnz
push
cmp
cli
add
loope
addr16
ds
les
test
les
inc
lret
aaa
out
xlat
jle
or
jp
xchg
cltd
out
jmp
es
in
hlt
imul
aas
test
int3
adc
ret
cli
jns
shlb
pop
and
imul
test
scas
outsb
iret
mov
fadd
mov
mov
or
lea
cld
push
aas
xchg
xchg
adc
push
jmp
mov
decb
scas
sub
es
cmp
mov
js
mov
daa
pop
inc
inc
sub
lock
mov
imul
add
mov
mov
mov
jmp
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
xor
jmp
pop
scas
push
sub
push
ja
fstpt
aas
xor
pop
push
sbb
adc
sbb
andb
in
sub
pushf
jg
into
mov
shll
popa
adc
inc
adc
pop
sbb
notl
add
dec
sbb
mov
sbb
cmp
ret
cli
stos
cmp
inc
pop
cmp
add
insl
xor
test
cmc
push
or
ret
aad
sbb
shl
aam
iret
jno
jl
fsubrl
jae
lcall
and
dec
out
push
and
jmp
jecxz
lock
scas
out
scas
pop
inc
fmul
mov
inc
add
xorb
cmp
call
sbb
in
lods
aaa
inc
jge
mov
stos
call
imul
jg
fwait
mov
aam
xchg
into
out
cmc
lahf
push
push
rorl
mov
lock
xlat
dec
jae
out
inc
cli
lret
dec
xchg
les
dec
into
dec
pop
stc
pop
imul
sbb
push
shrl
rolb
jb
repnz
movsl
fisttpl
xor
lret
and
out
fadds
daa
dec
inc
lods
out
pop
push
cmp
sub
inc
inc
lcall
sub
push
movb
arpl
and
clc
jbe
push
je
in
mov
dec
hlt
ret
push
sbb
adc
ljmp
cmp
scas
mov
aad
imul
std
je
dec
ja
cmpsl
in
and
xor
inc
dec
cmc
ret
outsl
jg
xor
out
adc
jecxz
and
xchg
cmp
je
mov
jne
dec
mov
hlt
push
sti
mov
xlat
ljmp
gs
fidivrs
hlt
ljmp
lret
lahf
push
jmp
mov
popa
mov
dec
mov
add
scas
dec
jle
cmc
xor
fwait
mov
pop
mov
jl
out
push
xchg
dec
cs
enter
push
leave
sbb
mov
xor
jp
test
cmp
int3
dec
std
mov
dec
cmpsl
jg
push
mov
add
xchg
adc
xchg
pop
imull
int
notb
inc
sti
xchg
arpl
lods
or
sti
stc
pop
xor
cmp
mov
adc
stc
testl
sti
insb
daa
shrb
mov
sub
xchg
push
iret
mov
je
fisubl
and
stc
insl
adc
hlt
ror
enter
push
lods
sub
fwait
push
push
mov
cmpsl
out
out
hlt
xor
adc
test
mov
jae
inc
dec
dec
lret
push
lcall
scas
sbb
xchg
mov
inc
sub
lcall
adc
rorb
out
xchg
pop
into
test
cmpsb
in
scas
insl
das
mov
jne
scas
jge
decb
add
loop
pop
pop
add
mov
adc
add
popf
push
int3
push
enter
cmp
cmpsl
call
xlat
push
mov
jne
and
stc
repz
mov
xlat
fwait
cli
jne
stos
push
jecxz
cmpxchg
mov
xchg
scas
and
sbb
movsb
push
cs
scas
rcrl
jle
pushf
inc
jg
jg
mov
xorps
into
xchg
stc
mov
out
rcll
pushf
fimull
pushf
mov
call
mov
mov
mov
mov
xor
xor
mov
mov
mov
call
or
mov
or
push
push
push
push
call
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
mov
xor
div
mov
and
add
mov
lea
xor
add
mov
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
jmp
shrl
into
and
fwait
outsb
mov
dec
mov
sbb
adc
sbb
or
xor
lret
popf
jns
or
dec
hlt
aam
jg
or
adc
dec
xchg
faddl
jns
cmc
mov
ret
mov
mov
sti
jge
fpatan
mov
dec
rorb
push
or
loope
mov
dec
mov
popa
mov
stos
xor
xor
loope
in
and
xor
push
pop
lods
pop
sub
sub
xor
push
mov
outsl
mov
xor
xchg
repz
ds
cs
inc
repnz
fisubrl
cs
gs
lock
jl
add
aam
int
fs
fwait
mov
xor
das
pop
repz
xchg
pushl
mov
out
out
fwait
inc
js
aas
stos
dec
sub
pop
dec
xor
int
xchg
sahf
dec
jbe
ljmp
pop
push
dec
idivl
pop
lods
or
icebp
push
scas
je
jmp
leave
mov
or
push
fisttps
xchg
add
mov
negl
cmp
jne
test
push
addl
rcrl
pop
add
popf
add
add
or
mov
loope
fmull
adc
add
clc
xor
and
cmpsl
cmp
push
and
ss
data16
sub
ljmp
dec
lods
mov
jae
sbb
aam
dec
out
and
jle
pop
outsb
and
movsl
fld
outsb
dec
pusha
lret
ret
nop
imul
jo
pop
call
adc
ret
jno
jle
fwait
push
jne
xlat
clc
jp
jp
sbb
xlat
fisubs
push
mov
jp
pop
int
or
inc
pop
test
popa
psubusw
cmpb
into
ds
lock
andb
add
leave
pop
stos
test
std
stc
jo
sub
in
andl
xchg
push
dec
imul
xor
std
pop
or
int
jl
imul
rcr
aaa
loop
scas
jg
insb
daa
sbb
inc
cmp
mov
xchg
push
xlat
pop
les
or
rcrb
push
clc
out
mov
dec
dec
or
je
gs
adc
xchg
iret
pop
aad
adcl
jg
pushf
jae
test
mov
jb
out
inc
sub
sbb
adcl
mov
xchg
insl
inc
push
popa
sub
test
cmp
clc
xabort
adc
rorl
add
mov
jno
and
out
sar
mov
mov
jmp
adc
xchg
jl
bts
add
movsl
out
push
shll
push
sub
aas
shlb
sbb
sbb
imul
push
sarl
inc
fwait
es
in
mov
pop
dec
stc
push
jecxz
in
sbb
pop
mov
jmp
scas
stc
mulb
add
jp
and
idivl
add
shll
cltd
sub
pop
sbb
jmp
add
fcoml
push
cmpsl
mov
xor
push
fs
inc
and
addr16
cmpl
icebp
adc
sbb
les
push
cld
leave
push
jp
sbb
das
ret
mov
jb
xchg
sub
das
imul
shl
icebp
add
mov
and
xor
add
mov
mov
sub
mov
or
mov
and
mov
xor
mov
mov
sub
mov
imul
xor
xor
mov
mov
add
add
mov
movl
movl
movl
movl
movl
movl
mov
xor
mov
imul
mov
lea
mov
and
and
xor
push
pop
div
imul
mov
and
mov
or
add
imul
mov
xor
xor
mov
mov
add
add
jmp
arpl
bound
aam
push
jle
sub
and
sbb
call
outsl
insb
pop
rcrb
ja
and
std
mov
push
movb
mov
sub
add
test
test
cmpsl
aas
mov
ret
les
pop
je
add
clc
push
roll
xor
pop
es
into
ret
mov
add
add
push
inc
push
jmp
into
testb
test
jg
fistpl
shll
popf
clc
out
mov
xor
test
call
test
sti
dec
int
or
inc
push
lret
cmp
or
jge
cmpsl
xchg
dec
shlb
fwait
sbb
rcl
jae
push
push
or
inc
lahf
mov
ds
jns
mov
pop
sbb
pop
iret
and
fsubl
xchg
dec
lds
push
je
mov
outsl
out
in
in
mov
loopne
je
icebp
inc
call
mov
xchg
sbb
rol
pop
cmp
pop
push
rorl
or
fldenv
scas
push
fisttpll
sbb
adc
fidivrl
push
mov
xor
xor
push
push
or
xchg
sub
mov
jge
inc
dec
xlat
push
mov
fsubs
das
inc
pop
and
sbb
faddl
dec
pushl
and
inc
data16
sbb
mov
cwtl
int3
and
mov
xchg
cmp
xchg
adc
dec
or
in
sbb
pop
sub
and
or
inc
leave
sahf
lret
pop
icebp
aad
sub
mov
jo
adcb
lds
push
ret
ret
xchg
out
xchg
jns
in
shll
jl
or
cmpsb
xlat
ret
test
mov
add
cmp
pop
inc
sub
mov
cmp
iret
push
bound
imul
adc
jmp
test
xchg
imul
outsl
lcall
dec
jmp
test
gs
adc
mov
je
roll
adc
aaa
inc
in
outsb
pop
mov
stc
add
jg
mov
test
mov
into
or
pop
bound
fdivrs
loope
dec
das
and
sbb
loope
pop
outsb
ret
sbb
or
gs
aad
in
jecxz
add
leave
jno
pop
jnp
mov
add
mov
dec
arpl
jae
stos
icebp
mov
roll
lods
movups
sbb
and
mov
repz
xchg
pop
mov
adc
int
call
das
ss
and
sub
jecxz
bound
or
cmp
mov
adc
pop
stos
cmp
pushf
fmulp
mov
adc
andl
add
sbb
nop
and
ret
test
scas
outsb
inc
loopne
icebp
cwtl
and
lds
rorb
mov
daa
xchg
push
push
pop
add
add
jle
int
mov
fs
jp
push
sbb
xor
leave
das
dec
xchg
dec
fcmovnu
or
sbb
insb
fimull
cwtl
sub
movsb
jmp
xchg
dec
inc
xchg
push
or
and
mov
lahf
lahf
adc
pop
mov
mov
adc
pop
shrl
inc
inc
lods
add
add
jmp
int3
insb
fwait
jo
push
cmp
ret
lahf
jo
les
sbb
adc
sbb
or
xor
arpl
sub
xor
push
data16
sbb
add
xchg
xchg
sub
push
aas
jmpw
in
ret
dec
xchg
inc
in
mov
ljmp
mov
sub
cmpsb
pop
dec
nop
mov
sahf
jo
push
mov
dec
mov
test
cltd
adc
stos
xor
cmp
xor
mov
jno
inc
je
cmpsb
jbe
popa
jp
pop
mov
cwtl
push
vmwrite
jp
aas
clc
imul
mov
aas
hlt
mov
mov
fwait
dec
push
ss
and
mov
icebp
dec
push
cmp
bound
push
loop
xlat
xor
sar
add
jb
sub
jp
push
pop
ss
push
mov
out
ljmp
test
pop
in
mov
outsl
adc
pop
xchg
lcall
inc
inc
jne
test
or
inc
cmp
sbb
add
and
mov
lods
aam
pop
xor
sub
arpl
lcall
in
sbb
sbb
lods
adc
mov
lods
xor
dec
hlt
rolb
scas
mov
sarb
mov
arpl
shll
cwtl
dec
dec
insl
je
and
mov
repnz
sti
xacquire
jbe
loopne
adc
cmp
stos
cwtl
push
hlt
adc
ds
jae
mov
fdivr
xorb
mov
inc
leave
and
or
adc
adc
sbb
dec
or
imul
movsl
jle
out
xchg
pusha
loop
testl
out
shrb
in
or
and
dec
stos
rorl
repnz
dec
int
inc
xor
fldt
mov
outsb
test
xor
lods
push
test
test
or
test
sti
arpl
and
xchg
data16
inc
icebp
or
sub
lods
movsl
std
inc
inc
into
stc
scas
mov
pop
or
in
movsb
and
mov
dec
js
dec
out
inc
add
jns
mov
push
mov
jnp
ljmp
stos
scas
mov
aam
xchg
pop
jbe
or
dec
lahf
adc
jb
cmpsb
mov
fildl
jns
push
roll
xor
jnp
mov
dec
loopne
dec
sti
mov
mov
sbb
sub
das
nop
int
jno
xor
pop
and
ds
cs
mov
cltd
outsl
mov
andl
incb
mov
cmpsb
and
jecxz
add
lahf
xchg
aad
inc
xor
in
sbb
arpl
xchg
inc
lcall
mov
jg
bound
jl
jecxz
movsb
push
data16
ds
jmp
or
xchg
ja
add
into
enter
push
dec
cld
nop
data16
mov
pop
pushf
pop
shlb
sbb
lret
jge
sbb
dec
mov
inc
loop
movsl
mov
cld
add
int3
mov
push
fwait
hlt
mov
and
or
addr16
inc
mov
or
mov
and
inc
shr
add
movl
movl
movl
jmp
jecxz
xchg
sbb
sbb
ret
movsl
mov
faddl
sbb
adc
sbb
les
inc
mov
les
pop
stos
mov
inc
adc
aaa
adc
or
stos
xor
aad
jo
shlb
push
jb
fstpl
cltd
xchg
mov
jle
jmp
cmp
or
mov
inc
pop
push
adc
daa
mov
mov
add
pushf
xor
jns
cmp
mov
je
xor
mov
or
lods
enter
xchg
jmp
fs
mov
mov
mov
or
sub
loop
pop
sahf
ret
jmp
xchg
enter
xchg
negl
or
shrb
mov
lcall
stc
sub
fpatan
cmpsl
std
out
push
shrl
rcrl
jb
out
imul
xor
jmp
sbbb
jecxz
add
sub
jmp
push
adc
jns
push
xchg
in
sti
outsl
repz
test
data16
jns
mov
cmpsl
dec
add
mov
or
call
mov
push
hlt
je
xor
mov
pusha
xchg
xchg
popa
cmp
dec
cmp
repz
mov
adc
ret
xorl
out
mov
cmp
int
and
sbb
adc
shlb
xchg
jnp
mov
and
leave
push
dec
in
fidivl
lahf
cmp
scas
scas
lds
pop
pop
xchg
dec
pop
mulb
inc
cmp
addr16
pop
insl
jne
cli
mov
lods
sub
jnp
out
cltd
sub
adc
mov
jl
sub
mov
pop
sub
dec
daa
jbe
jmp
cld
mov
inc
in
ljmp
inc
ja
and
lcall
inc
ss
xchg
int3
and
inc
cmp
ljmp
sub
mov
movsb
or
out
rcrb
mov
int
scas
inc
jg
jmp
mov
incb
call
mov
or
int3
aaa
cmp
mov
adc
pop
insl
push
mov
sbb
out
dec
jmp
push
xor
out
pop
inc
pop
jne
push
fsubrs
inc
push
loope
jb
jns
daa
jno
dec
add
faddl
pop
or
addl
sub
ss
adc
add
jmp
pop
lds
ja
or
push
cli
pop
jne
popa
cmpsl
xor
orb
out
pop
xor
scas
out
mov
enter
repz
inc
das
mov
push
jns
add
ljmp
andl
sbb
add
pushf
stos
repz
les
daa
aas
es
pushf
and
pop
es
push
inc
jnp
repnz
jb
int3
addr16
mov
jns
fwait
ss
mov
cli
xor
fs
in
mov
pop
dec
pop
fmuls
lea
in
gs
mov
mov
insl
dec
or
and
xor
sbbb
enter
pusha
scas
jp
imul
roll
jl
jae
fwait
call
insl
icebp
inc
les
xchg
insl
push
cs
pop
push
sbb
sbb
inc
xor
iret
lock
test
decl
and
add
push
pop
div
mov
or
mov
xor
div
jmp
and
popa
into
pop
dec
and
mov
push
cmp
sbb
adc
sbb
inc
cwtl
es
outsl
mov
hlt
adc
repz
push
dec
jo
cwtl
dec
mov
mov
pop
loop
sub
mov
fwait
jge
xchg
call
jb
mov
mov
rcr
movsl
sbb
xorb
xor
pushf
call
push
xor
pop
adc
xchg
call
shll
cltd
imul
and
lea
scas
lret
stos
xchg
in
xor
jae
cmp
pop
xor
xor
in
loope
dec
icebp
hlt
inc
mov
icebp
sti
jb
inc
jg
adcb
sub
rorl
jge
add
push
cwtl
inc
call
and
adc
imull
or
mov
inc
sbb
jp
mov
out
aam
mov
add
add
jns
cmp
xchg
add
lret
pop
fwait
push
shrb
xor
xor
pushf
add
stc
adc
repz
pop
sbbl
or
gs
inc
pop
shlb
dec
dec
mov
enter
lock
adc
pop
jle
daa
mov
dec
sbbl
adc
xor
or
cmp
mov
lret
sbb
repnz
sarl
aad
sbb
jge
add
mov
into
push
cmpsl
or
adc
ret
scas
or
stos
adc
pushfw
fsubrl
jns
mov
lods
popf
stc
cwtl
sti
mov
icebp
dec
aas
cli
and
push
mov
test
sbb
or
or
inc
sbb
jl
dec
ror
es
xor
stc
aad
pop
pop
jbe
jb
mov
push
andb
sarl
push
mov
push
loope
push
dec
push
jnp
std
pushf
sub
int3
movsl
add
testb
mov
or
mov
pop
add
pop
or
insl
cli
sbb
test
lods
arpl
loope
sub
ret
add
xchg
or
lods
jns
mov
mov
int
sahf
pop
mov
js
loope
fbld
popa
std
dec
dec
out
decb
xor
jne
lret
dec
cld
or
stos
stos
movsb
mov
mov
sbb
lods
inc
loop
fstpl
xor
or
add
jg
andb
adc
fists
xor
into
mov
mov
loope
mov
lea
test
adc
pop
push
flds
sahf
in
data16
ret
push
mov
scas
out
mov
xlat
sahf
movsb
jb,pt
jecxz
pop
test
sub
push
movsb
lret
cmpsl
fistpl
mov
cmp
pop
inc
xchg
add
fimull
dec
adc
pop
test
mov
inc
pop
sub
aad
lahf
sti
stos
nop
pop
push
mov
cmp
outsl
movl
push
pop
xchg
addr16
push
pop
or
popa
les
imul
test
add
jne
pop
lcall
lods
add
or
cld
and
xor
jo
pop
je
cmp
movsl
movsl
cmp
cli
sub
inc
or
adc
stc
lods
aad
mov
jae
sub
out
int
les
add
mov
lea
mov
and
and
sub
xor
mov
xor
mov
and
and
or
mov
mov
add
lea
mov
andl
jmp
mov
inc
mov
mov
mov
cmp
je
mov
mov
mov
add
mov
jmp
add
mov
mov
daa
int
icebp
xor
sbb
adc
sbb
fiadds
inc
sub
stc
inc
addl
clc
rolb
push
sbb
mov
mov
jg
insl
mov
mov
jmp
xor
cs
cmpsl
pop
jecxz
xor
gs
mov
int3
cli
or
xchg
mov
cmc
sub
imul
push
lock
repnz
mov
imul
cmp
xchg
xor
lods
movsb
test
adc
cmp
cs
sub
gs
or
xchg
out
push
sbb
xlat
push
xchg
pusha
pop
addr16
mov
jecxz
mov
jno
js
mov
scas
add
pop
fwait
adc
or
inc
shll
dec
das
push
jns
or
ljmp
fisttpll
xor
jecxz
xor
pop
fcompl
jecxz
sub
xor
jl
jle
fmull
test
in
xorb
xor
test
addb
mov
int
jae
pop
push
out
xchg
adc
in
stos
pop
inc
or
jl
or
xchg
adc
insl
ret
sbb
pusha
rcr
xorb
inc
pop
stc
xchg
lds
aas
scas
push
and
or
cwtl
push
hlt
js
loope
mov
bound
orb
xor
pop
sbb
cwtl
pop
inc
jb
enter
mov
push
jb
mov
outsl
cli
push
add
int3
ffreep
mov
lods
ds
xchg
dec
mov
mov
dec
data16
or
adc
jbe
xor
mov
iret
pushf
push
movsb
ljmp
jns
and
js
aam
cwtl
cmp
sbb
leave
movsb
mull
movsl
adc
scas
mov
roll
bound
mov
sub
clc
ljmp
aam
nop
test
sbb
fidivs
cmp
xchg
adc
movsb
orps
insl
pop
push
iret
sub
out
jmp
movsb
rcll
dec
fs
add
fisubl
jmp
out
jmp
jae
sbb
pop
mov
xchg
or
mov
push
aad
lods
clc
lret
lret
jns
push
fldenv
arpl
or
mov
sti
pop
xchg
jbe
es
dec
in
pop
fucomp
loope
add
cmp
filds
adc
sbb
mov
int
stos
jno
lods
ss
add
decb
fwait
mov
xchg
ret
lret
xchg
pop
dec
sub
cmpsl
push
sbb
cmpsb
ss
outsl
mov
cmp
imul
clc
add
stos
jbe
std
test
jmp
js
adc
arpl
out
por
inc
incb
mov
adc
loope
rorb
pop
dec
or
and
mov
mov
pop
and
and
nop
decl
add
sbb
mov
inc
xchg
inc
sti
jbe
jmp
xchg
sbb
fisttpl
jmp
push
cmp
adc
aaa
mov
and
lock
decl
hlt
std
inc
test
pushl
jns
movl
movl
movl
lea
mov
mov
movzwl
xor
movzwl
sar
mov
movzwl
xor
movzwl
shl
or
movzwl
mov
mov
mov
mov
xor
jmp
imull
mov
mov
scas
xchg
push
sbb
adc
sbb
xchg
fiadds
cli
movsb
in
fwait
cmpsb
mov
test
sub
jge
lret
pop
adc
fmuls
arpl
loope
sbb
rol
jnp
sahf
jne
pop
inc
lcall
dec
sbb
imul
mov
push
dec
clc
aaa
add
inc
sbb
adc
mov
pushf
mov
test
dec
std
loop
cltd
iret
movsb
cmc
out
pop
ja
sbb
ss
push
call
pop
jbe
mov
jecxz
cmp
in
cld
stos
push
sbb
inc
stos
push
push
pop
inc
mov
and
xchg
popf
das
jmp
mov
sbb
fidivs
gs
mov
shrb
icebp
jbe
and
mov
jg
jnp
rcrb
push
cmpsb
xchg
daa
fdivs
pop
mov
jb
shll
aam
inc
mov
cmpl
inc
call
jle
out
repnz
int3
in
mov
and
mov
clc
lret
cmp
sub
jmp
gs
jg
popf
shlb
shlb
in
lret
dec
mov
mov
leave
test
push
inc
mov
xor
or
popa
out
and
jge
jmp
xchg
outsl
lods
jnp
mov
pop
iret
dec
imul
sbb
xor
jnp
dec
mov
pusha
mov
addr16
dec
cld
int
xchg
mov
jecxz
or
into
fnstsw
xchg
dec
aaa
fwait
xchg
cmp
jb
dec
test
cld
ljmp
lret
popl
rcrb
or
test
xorb
in
jno
das
ret
es
jg
loop
xor
jl
jno
fs
out
dec
add
jl
xchg
xor
xor
daa
dec
mov
cmc
pop
push
lret
mov
outsb
sub
jle
pop
hlt
xor
add
push
out
out
push
mov
das
adc
cltd
and
loop
and
mov
out
lret
inc
bound
inc
ljmp
movsb
mov
pop
mov
cmpsb
xor
outsl
clc
xchg
xchg
pop
cmp
test
leave
mov
jmp
scas
ds
aas
inc
fidivl
push
xchg
cmp
add
jno
push
and
mov
xchg
jp
outsb
cmp
in
inc
push
cmpsl
repnz
adc
sub
or
cmp
dec
mov
jecxz
or
jno
out
pop
xorb
mov
cmp
and
sub
fs
push
popa
mov
push
xchg
icebp
addb
cwtl
pop
mov
mov
sub
or
in
sahf
dec
pop
mov
fsts
xchg
inc
stos
incb
pop
cmc
sbb
sub
jne
pop
pop
xchg
inc
mov
addr16
jle
mov
cmp
outsl
popf
pop
sbb
cmc
pop
cld
popa
xchg
xlat
fimuls
das
scas
push
adc
cli
adc
cld
cmp
jmp
jl
adc
pop
pop
das
sub
mov
inc
sub
out
push
mov
subl
dec
iret
outsl
mov
mov
cmp
and
mov
pushf
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
movzbl
push
lea
push
call
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
add
mov
mov
cmp
je
mov
mov
movzwl
xor
movzwl
sar
mov
mov
movzwl
xor
movzwl
shl
or
movzwl
mov
mov
mov
movzwl
xor
movzwl
sar
mov
mov
movzwl
xor
movzwl
shl
or
mov
mov
jmp
mov
mov
xor
xor
mov
call
mov
jmp
jecxz
enter
sbb
cltd
mov
or
add
adc
sbb
int
lods
fcompl
fmul
and
xchg
push
adc
test
and
or
inc
imul
mov
leave
mov
ja
cmpsb
push
std
fs
je
pusha
sbb
into
dec
push
cld
ja
repnz
clc
mov
fists
sub
xchg
sbb
xchg
or
outsb
push
stos
sbb
icebp
jg
dec
loopne
dec
adc
out
cmp
ret
clc
mov
scas
jae
test
in
mov
rol
mov
and
jno
mov
outsb
or
shrb
sub
mov
pop
iret
mov
mov
mov
mov
loope
adcl
jno
outsb
addl
negb
test
sahf
hlt
fistpl
adcl
fildll
pusha
loop
setb
nop
ja
fs
sar
jns
mov
stc
stos
dec
dec
xlat
push
mov
jnp
sub
lahf
lcall
push
cwtl
push
ret
and
adc
inc
ret
ficoml
mov
lahf
cltd
mov
add
sbb
mov
leave
lock
out
and
std
ret
pop
js
daa
js
mov
dec
pop
mov
xchg
sbb
push
mov
push
dec
test
and
clc
jae
xor
ds
xor
insl
jmp
pop
repz
enter
sub
and
pop
jbe
lea
jecxz
sbb
daa
add
xor
cwtl
add
lds
es
push
cmpsb
xchg
inc
mov
sub
jns
adcl
jo
push
mov
inc
or
xchg
mov
aaa
lahf
mov
push
fnsave
scas
adc
mov
testb
xrelease
gs
std
hlt
dec
pop
jmp
lock
add
notb
in
movsb
mov
rcl
movsl
xor
cmp
shr
mov
xlat
and
mov
leave
hlt
call
fnsave
mov
mov
popa
cmp
add
mov
movsl
mov
enter
fldcw
test
dec
stos
push
adcb
std
push
jns
pusha
imul
cmp
push
scas
and
loopne
mov
xchg
daa
lods
clc
adc
repnz
mov
pop
mov
repnz
add
lret
dec
and
in
jnp
aad
and
mov
mov
rcrl
pop
mov
shll
jb
ja
push
gs
out
stc
push
imul
mov
and
fstps
popa
fiadds
add
nop
pop
orl
je
jge
xchg
std
lret
inc
jno
pop
push
mov
xchg
pop
cli
aaa
and
xchg
dec
sbb
pop
and
dec
mov
dec
dec
lods
mov
sbb
or
inc
push
jns
imul
test
mov
push
xchg
hlt
cmp
cld
mov
lea
lcall
fiaddl
mov
ja
push
mov
jmp
pop
sbb
add
arpl
rcll
loop
pop
mov
add
mov
cli
mov
mov
xor
xor
mov
call
or
or
mov
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
mov
or
je
lea
mov
mov
xor
mov
call
mov
mov
mov
xor
mov
call
or
or
xor
xor
mov
jmp
push
mov
and
dec
sub
jl
sbb
sbb
decb
ljmp
and
pop
adc
les
sub
cmp
fisubrl
int3
sub
add
enter
ss
pop
add
das
arpl
inc
stos
xlat
xchg
out
imul
push
lcall
cmp
xor
xor
add
jecxz
cmpsb
in
fdivrs
push
jb
adc
ljmp
pop
in
repnz
fnstcw
xchg
cmpsb
push
popf
stos
inc
mov
movsl
mov
mov
inc
inc
cltd
dec
pushf
dec
sbb
subl
insl
jmp
fs
adc
sbb
ljmp
rcrb
jnp
shrl
jno
pop
mov
call
mov
mov
jecxz,pn
imul
sub
bound
stc
dec
popa
xchg
ret
rclb
shll
push
pop
jb
mov
test
out
pop
or
xchg
andb
mov
mov
int3
ficomps
add
xchg
lock
repnz
flds
inc
stc
pop
loop
insl
sti
fisttpl
jns
out
xchg
imul
add
fldcw
pushf
inc
xor
mov
mov
adc
cmp
insb
subb
pop
sub
outsl
or
inc
ja
jmp
leave
lahf
cmp
punpckhdq
addr16
stos
and
sub
into
out
lret
imul
ljmp
movsl
punpckhbw
mov
and
jne
cli
dec
lods
dec
daa
xchg
jg
ret
xchg
gs
andb
fdivp
scas
mov
loopne
test
lods
or
rolb
ss
xchg
dec
push
addr16
jb
ficomps
sbb
cmpsb
sub
fdivl
or
xchg
loop
lret
and
push
icebp
mov
pop
push
pop
roll
xor
lock
push
call
into
ret
test
test
and
idivl
repnz
divl
pop
mov
sub
xor
movsb
nop
mov
add
push
das
ljmp
dec
pop
mov
cmp
sahf
ffreep
test
stos
out
leave
add
imul
mov
inc
jns
in
fistpl
sti
insl
mov
jae
jno
loop
push
mov
sub
jnp
push
js
and
cwtl
add
rcll
jecxz
push
das
aaa
push
xchg
hlt
mov
jecxz
dec
xor
adc
sbb
or
cmpsb
cld
cli
dec
in
fwait
dec
pop
cmp
push
mov
pop
subb
xlat
movsb
or
cmp
sbb
mov
push
fisttpl
rcrb
or
fistps
andl
inc
stc
jge
mov
xchg
pop
pop
sub
fsubl
sarl
sbb
xchg
es
adc
mov
push
fwait
push
fmull
call
arpl
and
fsubr
xchg
cs
or
push
jns
pop
mov
cwtl
shll
lret
stc
rol
roll
add
jp
rcrb
pop
or
cmp
popf
rcl
int
mov
mov
mov
movsbl
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
movsbl
cmp
je
mov
movsbl
jmp
cmp
sub
pop
rcrl
jl
pop
push
sbb
adc
sbb
xchg
shl
lret
and
dec
out
jae
and
sbbl
adc
rclb
jecxz
sahf
add
push
aam
pminub
sahf
test
or
lahf
and
xchg
and
out
lods
or
cmpsb
pop
push
arpl
mov
sbb
fnsave
dec
jne
add
icebp
sti
mov
and
fiaddl
aaa
in
xchg
lret
jno
scas
dec
sbb
xchg
pop
jo
sbb
js
je
jle
out
push
roll
add
jge
push
xchg
ljmp
mov
xchg
cld
mov
mov
pop
pop
test
ss
mov
lock
push
sarb
inc
mov
ret
lock
or
inc
mov
push
or
rorb
jmp
enter
mov
xchg
popa
je
pop
mov
ljmp
popf
dec
mov
pop
lcall
lcall
mov
popa
dec
mov
rorb
adc
out
jo
pslld
mov
pop
imul
cmp
pop
mov
cs
adc
push
ss
test
or
pop
xor
jno
sub
into
mov
nop
test
and
lcall
pusha
cld
int
cmp
scas
xlat
aaa
ror
addl
inc
in
repnz
cmp
pop
out
je
in
fstps
mov
sbb
mov
sbb
add
aaa
xchg
mov
sbb
dec
adc
and
fwait
sbb
cltd
into
cmpsb
jmp
sbb
out
ret
enter
das
hlt
or
in
in
pop
adc
sub
fists
mov
inc
cmc
ljmp
push
mov
cmpsb
cmpsl
mov
test
jns
insb
stos
bswap
andb
or
cmc
adc
mov
push
addl
push
into
and
pop
add
lret
cs
sti
ficoms
inc
cmp
mov
cmp
dec
ret
mov
xchg
stos
pop
imulb
mov
std
add
test
loopne
pop
stc
inc
ds
or
jge
mov
xor
pop
dec
scas
xchg
cmpsl
iret
sbb
jp
loope
xlat
mov
fwait
loop
mov
jae
xor
pop
scas
mov
lods
insl
dec
cmpsl
leave
xor
cld
outsb
mov
cltd
inc
jmp
subl
xchg
push
nop
and
mov
cli
out
fdivl
repz
les
mov
mov
das
addb
mov
popf
jmp
sbb
jnp
lret
je
loope
pop
repnz
sbb
inc
sahf
lcall
mov
jnp
jecxz
mov
ljmp
test
ss
ud2
out
lahf
iret
and
xor
imul
mov
mov
lcall
cld
mov
add
push
aaa
sub
cmpsl
aad
or
ds
mov
in
int
test
xchg
bound
inc
add
mov
push
ja
fstpl
or
in
jmp
cld
std
decl
pushl
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
movsbl
cmp
je
jmp
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
movsbl
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
movsbl
cmp
jne
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
jmp
jp
inc
mov
mov
pop
push
popf
jo
fcoms
sbb
sbb
cltd
fisttpl
fbstp
xchg
mov
add
das
xchg
call
sub
xchg
inc
and
mov
mov
dec
mov
or
mov
insb
dec
popa
mov
pop
cmp
inc
gs
mov
adc
pop
add
mov
pushf
in
jg
cmpsl
or
imul
xlat
lods
mov
push
inc
lret
mov
loope
loop
xchg
insl
cmp
es
adc
inc
daa
mov
sbb
cwtl
xchg
fcoms
ficomps
inc
sbb
test
in
jnp
sbb
rclb
cmc
lea
mov
inc
sbb
add
loopne
cs
jle
iret
ds
enter
mov
push
pop
pop
movsl
int
imul
mov
aas
icebp
dec
cmc
xchg
in
xor
adc
push
sarl
out
push
or
cmp
in
aas
pop
loopne
call
jle
xchg
mov
pop
test
ret
jns
repnz
adc
imul
lret
push
out
mov
popa
pop
outsl
and
sbb
les
das
push
mov
cmpsb
or
mov
push
mov
mov
inc
jle
xchg
leave
xor
jns
in
add
cmpsb
lret
movsb
jge
scas
fmul
dec
dec
call
outsl
lcall
xor
jne
dec
dec
iret
adc
orb
sub
xchg
ljmp
clc
push
dec
xchg
and
xchg
int
adc
adc
mov
add
movsl
xor
cmpb
pop
fistps
imul
push
adc
nop
ljmp
sbb
mov
shl
add
inc
mov
pushw
adc
mov
mov
cwtl
mov
adc
test
push
stos
push
pushf
sbb
dec
gs
jg
and
cmp
movsb
nop
inc
ljmp
pop
sub
hlt
aaa
add
jae
sahf
jp
loopne
jbe
adc
sub
dec
dec
xchg
aad
xor
push
cmpsb
lds
dec
pop
notl
jmp
rclb
pop
das
loopne
mov
mov
std
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
add
mov
jmp
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
mov
cmpl
je
mov
mov
movzwl
mov
mov
mov
jmp
jmp
cmpl
jne
xor
jmp
mov
add
mov
movl
cmpl
je
cmpl
je
mov
shl
mov
movl
sub
mov
movl
mov
cmp
je
mov
mov
mov
mov
mov
mov
mov
inc
mov
jmp
movl
push
jmp
mov
mov
ret
dec
push
mov
sub
push
mov
or
jne
sub
mov
mov
mov
mov
sbb
xor
cmpl
mov
mov
jmp
movl
jl
push
pushl
push
push
call
addl
xor
mov
add
sub
mov
adc
mov
mov
mov
sbb
div
dec
mov
not
mov
div
mov
jmp
mov
mov
mov
mov
shr
rcr
shr
rcr
or
jne
div
mov
mull
mov
mov
mul
add
jb
cmp
ja
jb
cmp
jbe
dec
xor
mov
pop
pop
ret
sbbl
subl
movl
cmpl
movl
je
mov
mov
adc
add
mov
mov
pop
pop
pop
leave
ret
cmp
movl
jae
movl
cmp
movl
jae
subl
shld
movl
shl
ret
addl
mov
xorl
xor
and
shl
ret
xor
xor
ret
add
addb
add
add
add
add
add
add
test
add
faddl
add
add
add
lock
add
add
add
add
add
insb
mov
add
add
enter
jp
add
dec
xchg
add
int3
test
add
mov
add
popa
je
outsl
outsl
add
add
addr16
popa
je
jb
popa
je
jb
popa
je
jb
popa
je
jb
popa
je
jb
popa
je
jb
popa
je
jb
popa
je
jb
popa
je
jb
popa
je
add
insb
insb
push
gs
insb
push
gs
insb
push
gs
insb
push
gs
insb
push
gs
insb
push
gs
insb
add
add
mov
inc
add
add
jbe
add
push
add
add
push
add
add
push
add
add
push
add
add
push
add
add
push
add
add
push
add
add
push
add
add
int3
daa
inc
add
daa
inc
add
push
mov
movsb
popf
movsb
jno
xchg
movsb
or
movsb
sbb
movsb
roll
adc
movsb
popf
movsb
jno
xchg
movsb
or
movsb
xor
movsb
mov
in
xchg
movsb
adc
movsb
popf
movsb
sbb
movsb
fwait
movsb
xchg
sub
cs
push
adc
movsb
fwait
movsb
add
movsb
sbb
movsb
shll
shrl
or
push
pop
outsb
adc
movsb
fwait
movsb
add
movsb
xor
movsb
andl
imull
dec
adc
movsb
fwait
movsb
jae
popf
movsb
sbb
movsb
fwait
movsb
andl
testl
movsb
aaa
movsb
fwait
movsb
jae
popf
movsb
pop
movsb
xchg
movsb
push
movsb
mov
inc
rorl
imulb
xchg
movsb
aaa
movsb
fwait
movsb
jae
popf
movsb
cmp
movsb
fwait
movsb
xchg
mov
mov
out
adc
xchg
movsb
aaa
movsb
fwait
movsb
jae
popf
movsb
cmp
movsb
fwait
movsb
andl
imul
push
into
adc
xchg
movsb
cmp
movsb
popf
movsb
jnp
xchg
movsb
fwait
movsb
xchg
movsb
shl
shr
lock
test
cs
push
push
adc
xchg
movsb
adc
movsb
cmp
movsb
fwait
movsb
lea
or
push
push
outsb
adc
xchg
movsb
add
cmp
inc
add
inc
add
inc
add
daa
inc
add
inc
add
add
jg
add
add
daa
inc
add
es
add
inc
add
daa
inc
add
lret
push
movsb
scas
or
movsb
dec
es
add
es
add
daa
inc
add
inc
add
inc
add
inc
add
inc
add
daa
inc
add
inc
out
mov
inc
add
inc
add
loopne
jbe
pop
cmpsb
add
inc
add
rcl
pop
add
add
add
jno
cvtdq2ps
jbe
cmpsl
mov
xchg
test
es
add
fiadds
movsb
cmpsb
fiaddl
movsb
mov
fiaddl
movsb
mov
fiaddl
movsb
mov
push
movsb
mov
push
movsb
mov
push
movsb
out
fiaddl
movsb
decl
adc
xor
add
sub
add
add
scas
lcall
das
dec
add
sub
inc
add
inc
sbb
hlt
clc
sarb
sub
jle
add
add
add
add
lods
inc
add
push
movsb
jg
inc
movsb
push
movsb
inc
movsb
std
movsb
jmp
movsb
push
movsb
dec
movsb
std
movsb
jmp
movsb
push
movsb
jg
std
movsb
jmp
movsb
dec
movsb
inc
movsb
jne
pop
movsb
jnp
dec
movsb
fwait
movsb
xor
xor
xor
xor
inc
xor
xor
xor
xor
xor
inc
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
push
shlb
rcll
into
xchg
dec
xor
sbb
push
je,pn
mov
imul
leave
daa
dec
out
pushf
mov
dec
xchg
lock
inc
or
js
popa
pop
jecxz
movb
cs
aas
inc
leave
testb
jl
xchg
inc
add
add
add
es
add
fbld
add
add
je
gs
jo
jo
outsl
insb
je
jae
outsl
popa
add
add
add
add
inc
insl
jns
outsl
js
jns
jb
popa
je
jne
gs
jae
gs
add
add
add
add
inc
jne
jp
outsb
add
add
imul
insb
outsl
add
push
popa
arpl
imul
add
outsb
imul
add
add
add
add
insb
insb
gs
add
add
add
gs
data16
jae
outsb
fs
popa
insb
imul
js
imul
add
add
addr16
insl
ja
jns
popa
jns
outsb
popa
bound
insl
outsl
jb
add
add
je
dec
add
add
add
add
addl
add
loopne
add
mov
add
xchg
in
jno
iret
jbe
or
cwtl
int
std
pop
fsubrs
dec
xor
stc
inc
adc
dec
sbb
mov
jns
dec
sbb
xchg
cmp
in
jno
iret
jbe
or
int
std
pop
jns
pop
xor
stc
inc
icebp
das
int
mov
mov
jns
xchg
lret
rolb
jno
jbe
or
int
std
pop
fdivs
int
stc
inc
icebp
test
mov
int
mov
addl
rolb
jno
jbe
or
cwtl
int
std
pop
ret
cmp
xchg
stc
inc
adc
test
ret
xchg
aad
lds
iret
jbe
or
int
std
pop
pop
insb
cmp
stc
inc
icebp
push
int
mov
mov
jns
test
lcall
jbe
xorl
sbb
and
int
adc
mov
add
add
lods
clc
icebp
jo
jge
aad
clc
icebp
jo
adc
incl
jo
jo
jo
xor
cwtl
add
add
xchg
or
addb
jecxz
hlt
scas
rolb
sub
iret
pop
iret
push
out
int
adc
out
sub
or
rolb
subb
sub
cmc
sub
in
aad
add
mov
fcmovnbe
out
pushf
xchg
test
fs
mov
iret
int3
call
jno
imul
int
std
xor
movsl
das
pop
push
or
sub
xchg
iret
les
addb
add
addl
adc
inc
jns
fldlg2
es
or
add
mov
add
addl
jns
insl
and
push
add
test
push
add
push
mov
test
lret
addb
in
outsl
rcl
jge
outsl
xchg
addb
sahf
mov
jno
popa
mov
addb
push
jge
push
xchg
addb
jge
push
xchg
addb
rorb
jo
std
xor
movsl
inc
xor
or
addl
addl
int
popf
aam
shlb
or
xchg
aam
int
icebp
int
xchg
or
or
or
pushf
stos
sahf
popa
mov
mov
mov
roll
int
or
adc
int
mov
lods
xchg
lret
rorb
in
push
int
or
daa
addl
or
mov
gs
addl
xchg
or
addb
xor
int
mov
int
xor
xor
lea
das
add
addb
int
mov
cli
test
int
jge
xacquire
insl
insb
shrb
outsl
lods
xchg
inc
addl
lea
cli
test
mov
and
xchg
mov
dec
ja
pop
rcll
int
fidivl
jecxz
xchg
or
in
inc
add
test
jecxz
jecxz
movsl
pop
cmpsb
lods
addb
lods
mov
mov
addb
shll
test
add
leave
int
or
cmpb
movsl
jecxz
mov
in
in
addb
movsl
int
mov
rcll
leave
xor
pop
jbe
jnp
int
xor
movsl
int
cmp
inc
inc
add
jle
clc
or
std
das
pop
adc
cmp
or
add
mov
xor
les
int
sub
stc
xor
sbb
inc
int
inc
int
std
xor
xor
pusha
lret
arpl
test
xor
in
popf
adc
addb
shl
mov
and
mov
jbe
shrl
lods
or
stc
test
int
jne
pop
insl
shl
test
in
xchg
pop
insl
xchg
int
jge
les
xor
les
adc
addb
mov
shll
xor
ja
lret
je
pop
shl
mov
xchg
xor
int
das
mov
push
das
rcll
pop
mov
ja
int
pop
orb
jmp
mov
insl
iret
les
test
mov
xor
mov
insl
add
or
cwtl
int
mov
int
int
jns
mov
sub
add
cwtl
int
jns
test
add
mov
jns
xchg
cmp
add
add
inc
addl
leave
jbe
inc
and
or
int
stc
int
stc
pop
cwtl
lcall
ljmp
cmp
sarl
jbe
int
stc
int
stc
cmp
sarl
ljmp
int
stc
int
stc
cmp
sarl
ljmp
int
stc
int
stc
cmp
sarl
ljmp
leave
jbe
dec
and
mov
and
sarb
jbe
or
sarb
ror
jbe
jo
addb
addb
stc
cmp
cmp
sarl
push
rorb
jbe
int
stc
int
stc
cmp
cmp
sarl
push
rorb
jbe
leave
jbe
arpl
lods
pop
addb
addb
add
iret
push
xchg
incl
add
add
lea
xchg
fcmove
jbe
dec
insb
addb
stc
cmp
sarl
cmp
shl
sub
or
int
stc
int
stc
add
cmc
cmpb
sarl
repnz
or
mov
sbb
addb
push
or
int
dec
or
int
mov
cmc
or
rolb
mov
in
or
push
addl
lea
or
pop
addl
stc
int
stc
cmp
cltd
shr
xchg
shr
sub
inc
jge
add
int
mov
add
mov
jbe
int
xor
addb
int
adc
adc
add
int
mov
mov
int
xchg
rolb
bound
jno
cmp
push
push
add
add
cmpsl
aad
leave
push
pop
add
add
adc
add
mov
push
insb
add
add
iret
outsb
add
add
insl
leave
push
sub
add
push
cmpsl
aad
leave
push
xor
add
push
xor
cmp
add
mov
push
inc
add
add
iret
addr16
add
add
jbe
int
adc
mov
int
mov
add
addb
mov
leave
jbe
mov
cmp
leave
jbe
xlat
sbb
push
les
add
push
cmpsl
aad
leave
push
nop
add
add
xlat
inc
leave
push
aam
add
cmp
jge
push
faddl
add
mov
shll
add
xlat
sbb
push
pushf
add
add
cmpsl
aad
leave
push
movsb
add
add
xlat
inc
leave
push
lods
add
add
dec
push
jge
push
mov
add
mov
shll
add
ret
sbb
jo
jbe
add
int
stc
int
stc
cmp
cmp
shl
sub
mov
lea
testb
int
mov
lds
psrlq
sub
mov
lea
insl
inc
shrl
or
addl
int
mov
rclb
addl
add
addb
jo
cwtl
xor
lea
addb
int
adc
mov
insl
iret
pop
pushf
add
add
jo
jbe
int
inc
addl
adc
pop
adc
mov
insl
iret
pop
les
add
mov
jo
jbe
int
inc
addl
mov
pop
adc
mov
insl
iret
pop
push
add
add
jo
jbe
int
inc
addl
pop
orb
xor
push
cmp
sahf
clc
add
shrb
pop
shlb
xchg
xor
int
pop
add
mov
adc
int
mov
pop
adc
mov
insl
iret
xchg
add
jo
jbe
int
cmp
push
add
in
test
or
add
pop
sub
sub
lea
ljmp
sarl
push
ror
pop
cmc
incl
add
jo
jbe
int
stc
int
mov
lds
lock
push
ror
pop
xchg
incl
add
jo
xchg
or
xchg
stc
cmp
jmp
shr
sub
inc
jge
mov
jbe
addl
cmp
sarl
repnz
xchg
or
int
cmp
int
mov
lea
sarl
push
roll
xchg
int
mov
lea
shl
sub
mov
lea
insl
inc
shrl
pop
push
incl
add
ljmp
lea
jge
xor
mov
jbe
jo
stc
jl
orb
jne
sbb
jbe
int
mov
xchg
mov
or
cltd
shr
xchg
shr
sub
push
mov
jbe
int
stc
cmp
cmp
shl
sub
mov
lea
shrl
add
int
stc
int
stc
cmp
cmp
shl
sub
mov
std
inc
shrl
add
int
stc
int
stc
cmp
cmp
sarl
push
shr
adc
lea
or
cltd
shr
xchg
shr
sub
xchg
int
std
inc
roll
or
int
jne
jbe
ret
dec
and
leave
jbe
inc
and
int
inc
cmp
cmp
sarl
push
rorl
jbe
int
inc
int
inc
cmp
cmp
sarl
push
rorl
jbe
leave
jbe
dec
and
ret
xor
lea
lds
psrlq
sub
mov
lea
push
xchg
addb
cmp
jns
or
lods
sub
jmp
push
jge
jbe
xor
cmp
clc
add
jbe
int
sbb
lds
psrlq
sub
mov
lea
int
sbb
lds
psrlq
push
rorl
jbe
int
cmp
lds
psrlq
push
ror
lea
jbe
int
inc
int
inc
cmp
cmp
shl
sub
mov
lea
pusha
xchg
addb
or
jbe
or
xchg
or
pop
inc
and
leave
jbe
cmp
xchg
and
int
xchg
int
xchg
cmp
cmp
sarl
push
rorl
jbe
int
jmp
addl
add
and
push
xchg
add
add
and
insl
int
icebp
int
icebp
cmp
cmp
sarl
push
ror
lea
rcl
int
insl
lret
or
int
int
icebp
int
icebp
cmp
cmp
shl
sub
mov
lea
rcl
int
adc
or
cltd
shr
xchg
shr
sub
xchg
int
insl
das
pop
dec
mov
push
jo
add
int
jo
add
cmp
cmp
ljmp
pop
lea
test
test
xchg
icebp
cmp
cltd
shr
sub
jmp
push
adc
xchg
jge
rcll
int
insl
or
icebp
int
icebp
cmp
cmp
sarl
push
ror
lea
rcl
int
insl
lret
or
int
int
icebp
int
icebp
cmp
sarl
repnz
int
jge
rcl
int
pop
int
pop
cmp
cltd
shr
xchg
shr
sub
xchg
int
insl
das
pop
dec
mov
push
xchg
add
add
pop
xchg
add
add
lds
cltd
sarl
push
rolb
test
test
test
xchg
icebp
cmp
cltd
shr
sub
jmp
push
adc
xchg
jge
rcll
int
insl
or
xor
sub
mov
lea
xchg
pop
cmp
cltd
shr
xchg
shr
sub
das
rcl
xchg
or
int
jge
lea
incl
add
jbe
int
pop
cmp
shl
sub
xchg
push
ror
lea
lea
xchg
push
ror
lea
sub
or
int
popf
int
popf
cmp
shl
sub
xchg
push
ror
lea
or
jmp
cmp
adc
xchg
in
sbb
jbe
int
popf
cmp
cmp
sarl
push
roll
push
int
popf
int
popf
cmp
sarl
repnz
int
lods
xor
jbe
int
popf
cmp
cmp
mov
xchg
push
das
rcl
inc
shrl
pop
adc
add
int
stc
int
stc
int
std
or
int
mov
lea
or
jmp
cmp
addb
jno
lea
xchg
cmp
cltd
shr
xchg
shr
sub
jno
stc
int
stc
add
xor
shr
xchg
shr
sub
jno
jo
int
stc
int
stc
cmp
cltd
shr
xchg
shr
sub
or
inc
jge
add
int
stc
in
int
or
push
cmpsb
lods
int
lods
shr
xchg
cmp
lods
sub
int
jne
dec
orl
mov
lea
or
cltd
shr
sub
jmp
push
adc
xchg
mov
jge
jbe
cmp
add
std
add
std
shr
sub
leave
int
std
int
std
shr
xchg
shr
sub
cmp
inc
rcl
mov
lea
add
addl
shr
sub
jno
stc
int
stc
cmp
cltd
shr
xchg
shr
sub
jno
jne
jo
int
or
int
xor
jbe
cmp
add
test
xor
jbe
int
mov
jbe
int
mov
jns
aad
lods
sub
repz
push
ror
xchg
jne
test
jbe
add
test
xlat
int
std
cmp
add
test
xor
jbe
int
mov
jbe
int
mov
jns
aad
lods
sub
repz
push
ror
xchg
jne
test
jbe
add
test
xlat
int
jne
jbe
int
mov
lea
shl
sub
mov
stc
or
leave
jbe
imul
imul
gs
into
and
addb
sarl
lds
jbe
rol
lods
xchg
or
int
cmp
lods
sub
lods
lret
int3
das
imul
lret
inc
rcl
jle
jbe
int
mov
jbe
int
mov
jns
or
lods
sub
jmp
push
jge
jbe
cmp
lods
sub
lods
cmp
xchg
jbe
add
std
add
std
shr
sub
lock
and
jbe
in
and
jbe
int
stc
cmp
cmp
sarl
push
ror
stc
int
stc
cmp
cltd
shr
xchg
shr
sub
inc
jge
add
int
or
out
leave
jbe
mov
xchg
and
dec
mov
lods
imul
and
xor
jbe
int
lods
int
lods
cmp
jmp
cmp
adc
lea
or
jmp
cmp
addb
jno
lea
xchg
cmp
cltd
shr
xchg
shr
sub
jno
lea
or
cltd
shr
xchg
shr
sub
jno
jo
or
int
mov
lea
or
jmp
cmp
addb
jno
lea
or
cltd
shr
xchg
shr
sub
jno
lea
cmp
shr
xchg
shr
sub
jno
jo
int
mov
jbe
int
mov
or
jns
jmp
shrl
jbe
inc
jge
add
int
mov
xchg
mov
or
cltd
shr
xchg
shr
sub
inc
lea
addb
and
add
mov
lea
add
lea
jmp
add
scas
or
aaa
sbb
add
addb
add
add
add
jno
cmp
add
add
lods
jno
lea
lea
shll
jno
mov
or
int
mov
lea
add
addl
shr
sub
jno
lea
or
cltd
shr
xchg
shr
sub
jno
add
int
rcl
insl
xchg
cmp
inc
leave
int
mov
lea
addb
cmp
cltd
shr
xchg
shr
sub
jno
lea
or
cltd
shr
xchg
shr
sub
jno
jne
jo
int
lods
or
int
cmp
cmp
or
cltd
shr
xchg
shr
sub
jno
lea
or
cltd
shr
xchg
shr
sub
jno
lods
add
int
std
or
int
jne
out
or
leave
jbe
inc
and
int
push
cmp
or
lods
sub
jmp
push
rorl
jbe
int
push
int
push
cmp
or
lods
sub
jmp
push
rorl
jbe
leave
jbe
dec
and
ret
xor
lea
jns
or
jmp
shrl
lea
push
xchg
addb
xchg
int
inc
cmp
cmp
sarl
push
jge
jbe
xor
cmp
clc
add
jbe
int
lods
int
lods
cmp
or
jmp
shrl
lea
int
lods
int
lods
cmp
or
lods
sub
jmp
push
rorl
jbe
int
xchg
int
xchg
cmp
or
lods
sub
jmp
push
ror
lea
jbe
int
push
int
push
cmp
or
jmp
shrl
lea
pusha
xchg
addb
or
jbe
or
cmp
inc
and
leave
jbe
cmp
xchg
and
int
cmp
jns
or
lods
sub
jmp
push
rorl
jbe
int
jmp
addl
add
and
push
jl
add
mull
xchg
int
icebp
int
icebp
cmp
or
lods
sub
jmp
push
ror
lea
rcl
int
pop
lret
or
int
int
icebp
int
icebp
cmp
jns
jmp
shrl
lea
rcl
int
gs
cmp
cmp
shl
sub
repz
push
adc
das
pop
dec
mov
push
mov
add
int
mov
add
cmp
aad
lods
sub
repz
push
rolb
loope
jge
loope
insl
lret
int
icebp
int
icebp
cmp
cmp
shl
xchg
shl
sub
int
jge
rcll
int
pop
or
icebp
int
icebp
cmp
or
lods
sub
jmp
push
ror
lea
rcl
int
pop
lret
or
int
int
icebp
int
icebp
cmp
lods
sub
or
jmp
push
ror
lea
rcl
int
insl
int
insl
cmp
cmp
shl
sub
repz
push
adc
das
pop
dec
mov
push
jl
add
int
jl
add
cmp
aad
lods
sub
repz
push
rolb
loope
jge
loope
insl
lret
int
icebp
int
icebp
cmp
cmp
shl
xchg
shl
sub
int
jge
rcll
int
pop
or
and
or
jns
jmp
shrl
lea
xchg
insl
cmp
cmp
shl
sub
repz
push
adc
rcl
xchg
or
int
jge
lea
incl
add
jbe
int
insl
cmp
jmp
cmp
lods
sub
int
or
lea
sub
int
cmp
xchg
push
rorl
jbe
int
popf
int
popf
cmp
jmp
cmp
lods
sub
int
popf
int
popf
cmp
shl
sub
aad
repz
push
adc
xchg
in
sbb
jbe
int
popf
cmp
or
lods
sub
jmp
push
roll
inc
int
popf
int
popf
cmp
lods
sub
or
jmp
push
ror
lea
popf
int
popf
cmp
aad
repz
shrl
xchg
inc
das
rcl
inc
shrl
pop
adc
add
int
mov
dec
iret
jbe
add
mov
jbe
int
xchg
addl
icebp
addl
jne
test
addb
stc
int
stc
cmp
cmp
shl
sub
mov
lea
rcl
push
int
mov
lea
add
addl
shr
sub
jno
stc
int
stc
cmp
cltd
shr
xchg
shr
sub
jno
jne
jo
stos
test
lret
rorb
add
and
int
int
sub
pop
subb
dec
addl
addb
das
add
int
or
das
add
add
int3
addb
addb
add
int
and
mov
or
xor
shrb
mov
mov
mov
das
add
iret
jl
pop
or
add
or
add
cmc
subb
xchg
das
mov
mov
mov
in
push
push
aam
int
add
stc
subb
xchg
mov
sahf
dec
xchg
aam
iret
ficoms
out
int
std
int
push
add
xchg
cmpsb
mov
and
das
mov
sahf
dec
add
add
std
mov
sbb
mov
mov
add
add
mov
pop
out
subb
jo
das
mov
adc
mov
pop
xchg
adc
or
arpl
insl
insb
in
xchg
cmp
lret
lds
sub
jbe
add
xor
fstpl
add
inc
pop
pushf
test
insl
insb
in
fmul
insb
faddl
and
jo
int
adc
fcompl
lea
std
inc
clc
jnp
or
std
or
fsub
inc
pushf
adc
xchg
mov
int
iret
push
ror
push
add
ds
mov
out
inc
stc
fdivs
int
dec
int
in
popf
inc
cld
ja
int
in
mov
out
or
adc
not
dec
int
stc
dec
or
sbbb
cmp
test
lret
rorb
add
push
pop
cwtl
pop
dec
and
leave
jbe
inc
and
int
std
lcall
psrlq
xchg
stos
cmp
shl
sub
or
int
std
int
std
int
std
int
std
int
std
int
std
int
std
int
std
int
std
leave
jbe
fadd
loope
int
std
int
std
cmp
cmp
shl
sub
jmp
push
or
cmpsb
dec
int
sub
push
das
add
int
std
int
std
cmp
cmp
shr
xchg
shl
sub
inc
adc
add
int
add
std
int
std
cmp
xchg
shl
sub
inc
adc
add
xchg
int
cmp
shl
xchg
shl
sub
or
inc
icebp
aam
int
std
int
std
cmp
cmp
ljmp
int
adc
adc
test
xor
jbe
int
std
cmp
cmp
ljmp
int
adc
adc
je
xor
add
int
std
int
std
int
std
int
std
cmp
cmp
in
xchg
push
popf
int
adc
adc
ror
jl
xchg
int
std
int
std
cmp
cmp
shr
xchg
shr
sub
int
std
or
lea
cltd
cmp
shl
sub
repz
push
jecxz
lea
xchg
int
std
int
std
cmp
cmp
shr
xchg
shr
sub
xchg
jbe
popa
and
or
in
int
dec
int
adc
xor
jbe
add
in
int
adc
dec
leave
jbe
popl
dec
pop
xchg
xchg
std
cmp
cmp
shr
xchg
shr
sub
or
inc
jge
pop
int
stc
int
stc
cmp
lock
sub
mov
lea
fnstcw
psrlq
sub
int
adc
xchg
push
jecxz
rcl
bound
jo
int
std
int
std
cmp
lock
push
roll
mov
and
jbe
int
popf
cmp
cmp
mov
push
jge
fldt
pop
xchg
add
add
jbe
int
std
cmp
lock
push
roll
mov
and
jbe
int
stc
cmp
lock
push
roll
addl
leave
jbe
fdivr
sbb
int
std
int
std
cmp
xchg
shrl
sbb
std
int
std
cmp
lock
push
rorl
jbe
int
std
int
std
cmp
lock
push
rorl
jbe
int
std
int
std
cmp
cmp
shrl
push
jge
jbe
inc
jge
xchg
test
jbe
int
sbb
jbe
int
std
cmp
lock
sub
mov
in
inc
rcl
push
int
std
int
std
cmp
cmp
repnz
mov
in
shr
sub
aam
int
in
int
dec
int
adc
lret
jno
mov
jo
in
push
int
cmc
xchg
int
dec
int
adc
xchg
jo
mov
jno
or
int
std
int
std
cmp
lock
sub
mov
cmc
inc
ror
jbe
int
stc
xor
jns
lock
push
roll
cmp
cmp
repnz
mov
cmc
das
rcl
int
lods
or
stc
cmp
lock
push
roll
int
std
cmp
cmp
repnz
mov
lea
push
or
add
int
adc
lea
insb
sarl
test
int
icebp
push
dec
and
add
int
std
int
std
cmp
lock
push
rcrl
mov
stc
int
stc
in
xchg
jbe
int
std
cmp
cmp
shl
sub
mov
arpl
rorb
add
xor
jbe
dec
and
inc
and
or
cwtl
int
int
std
int
std
sar
shll
xchg
cltd
shr
sub
mov
xchg
mov
das
add
int
mov
xchg
mov
xchg
cmc
leave
jbe
popa
and
int
stc
cmp
rcl
mov
xchg
std
int
std
cmp
cmp
shr
sub
repz
push
fxch
out
pop
xchg
leave
fsubrl
add
int
cmc
int
mov
or
mov
out
xor
pop
int
std
cmp
cmp
in
push
cld
or
add
int
std
int
std
cmp
cmp
shl
xchg
shr
sub
or
mov
xchg
out
cmp
cmp
shl
xchg
shr
sub
jmp
addb
std
add
cmp
sarl
push
cltd
iret
ja
jecxz
inc
cltd
das
add
addb
jo
or
mov
mov
das
addb
in
xchg
int
in
xchg
repz
mov
mov
adc
dec
and
or
int
in
cmp
add
call
repz
sarl
xchg
mov
xchg
in
int
dec
int
dec
cmp
add
call
mov
push
cltd
int
mov
int
dec
int
dec
cmp
add
call
mov
push
cltd
int
mov
int
in
int
movsl
addl
mov
push
xchg
add
add
stc
int
stc
cmp
add
call
mov
push
cltd
int
adc
out
inc
aam
in
sub
xchg
std
int
std
cmp
add
call
repz
sarl
cltd
int
test
das
push
test
add
arpl
jbe
cmp
int
lods
add
ljmp
std
cmp
int
std
cmp
shl
sub
mov
lret
rorb
adc
xchg
addb
and
inc
and
int
std
cwtl
lcall
xor
xchg
mov
sub
or
int
std
int
std
cmp
mov
repnz
or
int
and
jbe
int
in
cmp
or
adc
dec
mov
cmc
int
cmc
cmp
or
adc
dec
lahf
xchg
lea
cmp
or
adc
imul
mov
lea
mov
jbe
dec
and
hlt
mov
insl
das
add
int
dec
push
insl
das
add
int
sbb
insl
das
add
int
and
jbe
int
mov
mov
addb
addl
cmp
mov
repnz
or
int
std
int
std
int
mov
lea
outsb
jo
lea
insl
das
add
leave
jbe
dec
and
int
xchg
pop
int
xchg
cmp
loop
mov
push
popf
or
int
std
int
sub
xor
bound
int
std
int
std
int
and
sbb
xchg
dec
inc
fst
push
cmc
int
adc
lods
int
cmc
cmp
add
call
jmp
shr
sub
int
dec
bound
xchg
jo
add
int
dec
int
xchg
int
jo
jge
xchg
jo
dec
xchg
int
xor
sbb
xchg
xchg
add
mov
or
pop
fs
das
mov
xor
jbe
int
std
int
std
cmp
add
shl
sub
mov
mov
and
jge
add
int
std
int
std
cmp
add
shl
sub
mov
jbe
int
stc
int
stc
add
cmp
repnz
mov
mov
pop
lea
addb
mov
lea
xchg
lea
or
jl
icebp
aam
clc
icebp
sub
xchg
in
xchg
int
jo
outsb
test
test
int
mov
lea
xchg
std
cmp
add
call
jmp
shr
sub
pop
lea
mov
popf
int
test
lds
add
sbb
stc
int
stc
cmp
shr
xchg
add
incl
push
adc
and
jbe
int
stc
int
stc
add
cmp
repnz
mov
lea
mov
pop
lea
add
int
and
sbb
cmp
lea
int
adc
lods
int
adc
sti
call
jmp
shr
sub
int
dec
bound
xchg
xchg
pop
add
push
insl
das
add
int
and
or
or
cmp
add
call
jmp
shrl
add
int
std
int
std
cmp
add
sarl
push
rorl
jbe
pop
push
jl
or
leave
jbe
sbb
shr
lahf
xchg
jbe
dec
and
xchg
iret
inc
shl
xchg
adc
scas
cmp
lea
add
cli
xchg
xchg
add
or
mov
jbe
or
iret
outsb
std
iret
jno
or
or
leave
push
jo
add
sub
pushf
add
add
pop
movsb
add
add
push
lods
add
add
xchg
add
sbb
les
add
popa
lahf
xchg
add
sbb
aam
add
call
iret
faddl
add
leave
push
in
add
mov
add
jbe
and
or
jbe
inc
lahf
xchg
jbe
pusha
lahf
xchg
and
int3
push
jo
add
shr
xchg
add
scas
or
test
add
sbb
addl
add
int
adc
inc
add
add
add
or
iret
jbe
jo
or
push
int
jge
icebp
int
std
int
std
cmp
add
sarl
push
rorl
jbe
int
std
int
std
cmp
add
call
lods
sub
jmp
push
jge
jbe
inc
rcl
xchg
or
in
das
int
int
jne
jbe
int
mov
int
sbb
mov
addl
addl
int
sub
xchg
dec
int
cmp
xor
jo
int
stc
int
stc
cmp
add
sarl
push
rorl
jbe
int
and
pop
mov
push
insl
das
add
add
and
lock
mov
push
insl
das
add
int
and
lock
mov
push
insl
das
add
lcall
push
insl
das
add
int
and
sbb
sbb
or
addl
int
dec
add
and
or
or
cmp
add
call
jmp
shrl
dec
and
int
mov
jbe
shr
xchg
adc
scas
cmp
sbb
insb
cmp
lea
lds
outsb
adc
jbe
leave
addb
sub
pushf
test
jbe
int
sub
outsb
mov
jbe
int
sub
outsb
dec
in
adc
jbe
int
cmp
lea
lds
outsb
adc
jbe
add
or
icebp
addl
cmp
int
arpl
xchg
cmp
test
shlb
xchg
int
jno
das
mov
mov
mov
leave
jbe
dec
and
push
lret
aam
popa
shll
xchg
out
xchg
pop
out
orb
mov
pop
out
cmpb
std
int
std
cmp
add
call
jmp
in
xchg
push
cld
add
std
add
test
sub
adc
dec
and
int
std
int
std
cmp
add
call
jmp
shr
sub
inc
stc
xorb
rorb
add
push
leave
jbe
mov
jbe
xchg
addb
addb
test
lods
addb
addb
addb
addb
addb
addb
addb
mov
stc
cmp
clc
add
repnz
and
movb
addb
or
cmc
icebp
lea
jnp
addb
addb
std
ss
pushf
addb
int
push
jp
addb
int
std
xchg
int
std
xchg
xor
jbe
int
in
sbb
cmpb
int
mov
fadds
jbe
xchg
popa
fists
xor
xchg
int
xor
out
adc
mov
subb
int
xchg
adc
mov
addb
clc
int
icebp
push
out
addb
icebp
adc
pop
push
addb
add
add
adcb
pop
cwtl
lcall
or
adc
addb
addb
addb
addb
addb
addb
addb
addb
addb
addb
addb
addb
addb
addb
movsl
dec
bound
addb
dec
pop
and
pop
xchg
mov
stc
xor
jbe
int
stc
sub
int
cmc
dec
inc
outsl
addb
xor
int
in
push
sarb
fisubrl
ret
add
clc
test
push
addb
int
mov
leave
das
sarl
fisttpl
xchg
mov
popa
addb
push
addb
addb
addb
addb
pop
lcall
xchg
lods
int
mov
int
popf
xor
int
xchg
cmpsb
push
addb
mov
ret
jbe
int
icebp
int
or
int
xchg
xor
inc
test
inc
or
rol
addb
cmp
clc
hlt
int
gs
ss
push
addb
add
xchg
jbe
int
stc
sub
int
cmc
dec
inc
outsl
addb
xor
int
in
push
sarb
hlt
int
dec
xor
int
mov
leave
das
rol
int
xor
das
pop
pop
add
add
mov
in
jo
jbe
xchg
aaa
ficoms
pop
mov
jbe
leave
jbe
mov
jbe
leave
jbe
fidivs
ficoms
or
pop
leave
jbe
scas
aaa
ficoms
or
cwtl
lcall
adc
jbe
cmp
cmp
pop
dec
and
out
ficoms
jp
jbe
int
or
iret
xchg
addl
push
ror
je
ror
xor
pushf
test
inc
loop
shr
xchg
int
int
test
insl
adc
cmpsb
mov
or
xchg
in
inc
jbe
das
or
jbe
add
mov
int
stc
push
insl
aam
cmp
out
int
mov
fs
xchg
mov
lret
xchg
add
xchg
stc
xchg
lret
int
lods
or
lret
int
stc
xchg
int
mov
adc
int
cmc
insb
add
std
sarl
push
sarb
rorl
jbe
push
cmc
int
cmc
add
call
repz
shrl
xchg
stc
inc
rolb
int
adc
xchg
stc
int
mov
test
int
stc
iret
adc
int
dec
shl
sub
cmp
or
push
adc
xchg
adc
call
repz
shrl
xchg
stc
xchg
xor
or
inc
lds
pop
outsl
add
add
jbe
int
mov
ljmp
mov
ror
popf
int
cmp
in
or
or
add
in
xchg
or
test
lret
rorb
add
adc
jbe
leave
jbe
dec
and
inc
and
cwtl
or
leave
jbe
into
and
in
inc
sbb
int
std
sar
shll
xchg
repnz
adc
out
xchg
push
add
lea
int
adc
jge
jmp
shr
sub
das
roll
jmp
addb
xchg
stc
cmp
shr
sub
jge
jmp
push
adc
xchg
std
int
std
cmp
cmp
shl
xchg
shl
sub
push
adc
xchg
stc
int
stc
aam
cmp
shl
sub
icebp
shl
xchg
push
jecxz
std
int
std
cmp
loope
jmp
shl
sub
aad
int
in
int
in
cmp
loope
jmp
shl
sub
cmp
in
sub
lock
sub
icebp
shl
xchg
push
jecxz
std
int
std
cmp
loope
jmp
shl
sub
aad
or
int
std
cmp
jmp
shr
sub
xchg
int
cmc
int
cmc
cmp
cmp
ljmp
int
std
int
std
cmp
cmp
shl
sub
repz
push
aad
adc
das
pop
pop
add
add
jbe
int
mov
jbe
arpl
rolb
insl
pop
jbe
aam
pop
jbe
fdivs
lret
or
das
adc
in
addb
lea
lret
or
insb
inc
jbe
subb
stc
std
add
cmpsb
rorb
adc
cmp
addb
xchg
jbe
inc
and
dec
sub
jno
cli
arpl
jbe
int
adc
subl
repnz
or
leave
jbe
into
and
inc
sbb
mov
int
std
int
std
cmp
shl
sub
jns
mov
lea
int
adc
jmp
shr
sub
das
rcl
in
outsb
int
cmc
int
cmc
sarl
push
sarl
lds
jbe
iret
jbe
jo
mov
jbe
int
stc
int
cmc
or
add
jbe
int
std
cmp
lock
push
roll
cmc
int
in
int
in
cmp
shl
sub
jns
mov
std
int
std
cmp
cmp
shr
xchg
shr
sub
xor
int
cmc
inc
jge
mov
jbe
int
mov
jns
lock
push
rorl
jbe
leave
jbe
bound
xchg
addb
jbe
cmp
shrl
jmp
push
jge
jbe
aad
or
int
mov
orb
in
lret
int
stc
das
pop
insl
cmp
or
int
in
int
in
cmp
mov
repnz
int
cmc
sub
int
push
popf
cld
add
int
popf
cmp
or
int
std
int
std
cmp
lock
push
roll
std
int
std
cmp
lock
push
sarl
jbe
int
adc
lea
cmp
cmp
repnz
mov
lea
imul
add
jbe
int
mov
jns
lock
sub
mov
int
stc
test
shll
rolb
in
xor
lret
pop
lcall
addb
roll
cwtl
sub
lahf
xor
std
or
stc
mov
lret
cmp
leave
jbe
adc
addb
mov
jecxz
mov
stc
iret
dec
into
mov
pop
das
mov
mov
das
mov
mov
fs
adc
das
mov
mov
mov
jge
pop
cmc
aam
leave
jbe
sbb
stc
int
mov
jecxz
mov
inc
in
dec
add
leave
jbe
push
addb
int
mov
lret
pop
dec
sub
push
add
add
cmc
sbb
push
jb
add
cmp
arpl
rolb
jecxz
mov
mov
adc
int
add
mov
inc
add
mov
adc
iret
js
or
iret
js
or
iret
js
or
iret
pop
or
cmp
addb
or
jbe
iret
pop
out
addb
pop
xor
pop
iret
pop
inc
addl
pop
xchg
addl
addb
xchg
icebp
or
or
mov
adc
or
and
lea
out
cmp
adc
jnp
ficoms
das
inc
cli
xchg
rcll
xchg
or
mov
out
int
or
cmp
shl
sub
int
mov
addb
cld
push
lock
stc
das
add
adc
mov
or
and
jbe
mov
movsl
int
jge
or
cmpsb
or
jnp
ficoms
das
inc
add
out
xchg
cmp
cmp
push
or
clc
add
add
add
lea
or
lea
icebp
mov
dec
stc
pop
sbb
mov
xor
std
xor
icebp
mov
xchg
adc
add
mov
jmp
and
lea
cmpsb
or
shr
sub
notl
shr
xchg
push
lock
aaa
ficoms
or
or
or
cmpsb
or
jnp
ficoms
das
inc
add
out
xchg
cmp
cmp
push
or
clc
push
comiss
xor
add
int
stc
push
imull
add
int
fs
push
faddl
int
and
jp
int
sbb
cltd
or
xchg
xchg
in
or
or
xchg
cmpsb
cmc
cmp
or
fcom
in
xchg
jbe
int
or
inc
lcall
ja
int
mov
xchg
mov
and
or
xchg
sbb
mov
jbe
or
push
addb
pusha
adc
jo
jbe
int
xor
int
stc
int
in
push
insl
aam
int
std
or
std
test
lea
movsl
push
or
or
int
test
lret
rolb
int
mov
pop
adc
mov
int
cmp
lret
pop
mov
shll
fwait
sbb
cwtl
int
pop
lahf
xor
cmp
jecxz
mov
xchg
add
xchg
das
mov
repz
mov
sbb
lds
sbb
jmp
dec
add
addl
mov
lret
cli
sbb
adc
or
sbb
leave
stos
lds
mov
addb
and
cmc
xchg
aaa
ficoms
or
aaa
ficoms
or
jbe
dec
and
inc
and
out
ficoms
or
fidivs
ficoms
or
int
adc
inc
icebp
xchg
shl
xchg
int
in
int
adc
ljmp
cmp
cmp
push
jns
jbe
iret
jbe
or
int
or
xor
ficoms
or
std
int
std
cmp
shr
xchg
sar
cmp
shr
sub
int
std
int
std
cmp
popf
shl
sub
xchg
int
std
int
std
cmp
popf
shl
sub
xchg
int
std
int
std
cmp
popf
shl
sub
xchg
or
nop
add
add
lea
icebp
cmp
shr
sub
jmp
push
adc
xchg
mov
cltd
cmp
in
push
aad
int3
pop
aam
add
int
dec
int
int
std
int
std
int
jo
popf
cmp
in
push
aad
int3
pop
aam
add
int
xor
xchg
xor
icebp
cmp
shr
sub
jmp
push
adc
xchg
std
int
std
cmp
cltd
shl
xchg
shl
sub
int
std
cmp
mov
shl
sub
xchg
int
adc
int3
pop
aam
add
int
adc
add
shl
sub
jns
mov
std
int
std
add
cmp
shr
sub
jmp
push
adc
xchg
std
int
std
cmp
repz
shl
sub
xchg
int
std
int
std
cmp
in
shl
xchg
push
aad
adc
add
add
push
nop
add
add
jbe
int
std
sar
cmp
or
mov
push
shll
jbe
iret
or
addb
addb
int
push
or
lea
shr
xchg
int
lods
int
mov
leave
cmp
push
icebp
bound
xor
repnz
inc
mov
int
lods
int
mov
inc
jge
shr
xchg
int
lods
int
mov
leave
cmp
push
icebp
bound
push
shl
sub
cmp
inc
sti
add
int
std
int
std
cmp
repnz
jns
mov
std
int
std
cmp
shr
xchg
cmp
shr
sub
xchg
int
std
int
std
cmp
shr
xchg
cmp
shr
sub
xchg
int
std
int
std
cmp
shr
xchg
cmp
shr
sub
xchg
or
nop
add
add
jbe
int
int
mov
aad
jmp
shr
sub
or
add
jbe
int
int
std
int
std
cmp
shr
xchg
int
jo
aad
ljmp
aam
add
int
sbb
lea
or
repnz
jns
mov
std
int
std
cmp
cmp
shr
sub
jmp
push
adc
xchg
std
int
std
cmp
hlt
call
in
push
aad
adc
add
add
jbe
int
std
add
call
repnz
jns
mov
std
int
std
add
cmp
shr
sub
jmp
push
adc
int
std
add
cmp
shr
sub
jmp
push
adc
pop
nop
add
add
xchg
std
int
std
xchg
cmp
int3
push
aam
add
int
sub
hlt
call
repz
shl
sub
iret
or
addb
addb
xchg
and
insl
aam
int
in
int
adc
inc
jge
shr
xchg
int
int
int
in
int
adc
fidivrl
lock
push
adc
xor
jo
xchg
push
in
push
int
int
push
lret
or
int
cmc
int
stc
das
inc
jge
shr
xchg
int
cmc
int
stc
cmp
cmp
shl
sub
lea
push
lds
int
inc
jo
lea
or
xchg
xchg
push
int
dec
int
int
xchg
sbb
dec
xchg
sub
lea
int
int
push
xor
int
int
xchg
jbe
or
das
inc
jge
shr
xchg
int
in
int
adc
leave
cmp
shl
sub
or
int
xor
les
in
int
adc
inc
jge
shr
xchg
int
in
int
adc
repnz
lea
leave
cmp
add
stc
push
inc
shrl
add
addb
movsb
dec
mov
jge
cmpsb
xor
lea
xchg
das
inc
rcll
jbe
int
xchg
shrl
cmp
cmp
push
or
cmpsb
stc
das
inc
popf
xchg
or
int
cmc
push
out
add
dec
shr
xchg
int
stc
cmp
mov
int
cmc
int
stc
das
inc
or
shrl
shr
xchg
int
stc
cmp
shrl
cmp
push
fcmovne
lea
mov
ror
icebp
or
int
xchg
das
inc
rcll
jbe
int
xchg
shrl
das
mov
cmp
dec
or
rorl
mov
or
and
shrl
ficoms
cmp
fidivs
ficoms
ss
or
cs
int
xor
add
mov
int
xor
xchg
int
orl
push
and
add
in
test
int
adc
jbe
leave
jbe
scas
aaa
ficoms
or
int
jne
inc
jge
shr
xchg
int
insl
int
jne
repnz
lea
cmp
cmp
push
shl
int
inc
inc
mov
int
xor
xor
insb
test
jbe
int
in
int
adc
inc
jge
shr
xchg
int
in
int
adc
fnstsw
leave
push
sub
adc
push
mov
std
int
std
cmp
shr
xchg
sar
cmp
shr
sub
int
std
int
std
cmp
popf
shl
sub
xchg
int
std
int
std
cmp
popf
shl
sub
xchg
int
std
int
std
cmp
xchg
shl
sub
xchg
or
nop
add
add
lea
xchg
mov
cltd
cmp
in
push
aad
int3
pop
aam
add
int
dec
int
int
std
int
std
int
jo
cltd
cmp
in
push
aad
int3
pop
aam
add
int
sbb
xchg
sbb
icebp
shr
sub
psrlq
xchg
push
adc
xchg
std
int
std
cmp
cltd
shl
sub
repz
push
aad
cmpsb
std
cmp
hlt
call
mov
push
lds
aam
add
int
std
int
std
cmp
shr
xchg
sar
cmp
shr
sub
int
std
int
std
cmp
popf
shl
sub
xchg
int
std
int
std
cmp
popf
shl
sub
xchg
iret
xchg
movsl
or
add
iret
nop
add
add
std
int
std
cmp
int
sub
icebp
shr
xchg
shr
sub
jno
pop
out
addb
addl
add
dec
int
mov
mov
dec
int
cmc
int
stc
das
inc
jecxz
shl
xchg
int
cmc
int
stc
cmp
shr
sub
xchg
cmc
cmp
push
bswap
stc
das
inc
sti
xchg
shr
xchg
int
cmc
int
stc
cmp
cmp
push
aad
adc
xchg
cmc
sarl
das
inc
sti
xchg
shr
xchg
int
cmc
int
stc
cmp
cmp
push
aad
adc
xchg
cmc
sarl
das
inc
sti
xchg
shr
xchg
int
cmc
cmp
int
stc
cmp
push
flds
dec
sarl
add
int
or
rclb
xchg
int
add
inc
pop
cwtl
lcall
popf
aaa
ficoms
pop
mov
jbe
leave
jbe
xchg
aaa
ficoms
or
leave
jbe
dec
mov
cmc
dec
lahf
xchg
and
cmp
xchg
and
jbe
int
sbb
shlb
jbe
int
sbb
add
xor
pop
xchg
fs
popf
int
and
out
int
movsl
das
inc
add
out
int
movsl
adc
cmpsb
mov
shr
sub
pop
push
aad
nop
int
or
int
xor
xchg
dec
iret
xchg
lods
bound
stc
jno
cwtl
add
sbb
jbe
add
mov
cmc
add
adc
in
jo
jbe
jo
stos
clc
add
or
int
sbb
lea
outsb
adc
jbe
leave
addb
lods
int
and
outsb
test
jbe
int
and
outsb
mov
jbe
int
and
outsb
dec
int
and
insb
and
addb
sbb
lea
or
and
xorb
or
int
std
stos
test
lret
rcrb
xchg
int
int
dec
adc
cmp
cwtl
lcall
push
mov
jbe
inc
and
dec
addb
ficoms
pop
mov
jbe
leave
jbe
xchg
aaa
ficoms
or
int
mov
jbe
int
cmc
int
mov
or
or
pop
jle
addb
mov
insl
mov
sarl
xor
mov
nop
xchg
iret
sahf
int
mov
aad
or
mov
jno
int
mov
leave
xchg
mov
ficomps
or
pop
mov
or
lret
mov
or
insb
add
add
push
add
add
outsb
add
add
add
inc
mov
add
iret
outsb
xor
add
add
xor
add
mov
add
int
mov
add
int
in
int
adc
inc
jge
shr
xchg
int
in
int
adc
cmpsb
mov
cmp
shl
sub
in
outsb
iret
aam
mov
int
das
mov
cmp
sti
and
shl
das
push
adc
int3
test
lea
inc
jecxz
shl
xchg
int
mov
mov
push
psrlq
sub
popa
int
in
int
adc
inc
jge
shr
xchg
int
in
int
adc
leave
cmp
shl
sub
in
outsb
iret
aam
add
sbb
mov
sti
and
shl
das
push
adc
int3
test
incl
add
lea
inc
jecxz
shl
xchg
int
mov
mov
push
psrlq
sub
popa
int
in
int
adc
inc
jge
shr
xchg
int
in
int
adc
leave
cmp
shl
sub
in
je
push
jbe
add
add
sbb
mov
sti
and
shl
das
push
adc
int3
test
lea
inc
jecxz
shl
xchg
int
mov
mov
push
psrlq
sub
mov
add
or
int
stc
pop
inc
pop
inc
xchg
or
daa
or
int
mov
add
int
mov
mov
xor
pusha
addl
addb
mov
add
int
mov
add
pop
es
push
std
incl
add
xor
push
incl
add
xor
push
addb
add
or
xchg
add
add
jbe
pop
dec
xor
iret
test
add
add
bound
add
pop
push
xor
iret
mov
add
add
pushf
mov
add
int
mov
add
pop
add
addb
add
cmp
adc
cmpb
add
mov
addb
add
pop
lcall
adc
add
int
xor
call
repnz
or
adc
jbe
int
dec
cmp
mov
shl
sub
leave
add
add
add
incl
add
jbe
int
xor
jns
mov
shl
sub
jo
push
stc
incl
add
jbe
int
cmp
push
sbb
add
inc
lret
fwait
xor
adc
icebp
or
int
stc
push
insl
aam
adc
or
fmull
int
dec
int
dec
sar
setl
icebp
shr
sub
jmp
push
adc
xchg
cmc
int
and
dec
das
push
popa
test
int
dec
cmp
shr
xchg
cmp
shr
sub
int
cmc
int
in
addb
int
dec
cmp
shr
xchg
cmp
shr
sub
int
cmc
int
add
pop
xor
mov
add
int
mov
add
pop
es
iret
sub
add
pop
daa
xor
iret
xor
add
add
test
add
add
xor
iret
cmp
add
add
mov
or
cmp
add
pop
fwait
xor
iret
inc
add
add
or
or
inc
add
add
xor
iret
dec
add
add
pop
addb
add
pop
cmp
addb
add
jns
movsl
cmpsl
pop
pop
adc
iret
push
add
add
pop
mov
add
jns
fisttps
jbe
inc
jns
loope
pop
fcom
addb
add
jns
lods
push
pop
jnp
addb
add
jns
repnz
ljmp
mov
add
jns
in
int
xor
xchg
xor
icebp
shr
xchg
shr
sub
in
xchg
int
xor
out
cmp
stc
shr
sub
xor
das
pop
mov
int
xor
out
cmp
stc
shr
sub
int
stc
add
adcl
fwait
addb
movsw
int
xor
lea
cmp
sub
repz
push
jecxz
stc
xchg
int
xor
out
cmp
xchg
shr
sub
add
mov
stc
inc
adc
int
xor
icebp
shr
xchg
shr
sub
or
adc
lea
dec
cmp
cmp
shr
sub
jmp
push
adc
xchg
movsl
or
add
xor
mov
rcl
int
mov
loopne
mov
leave
test
loopne
mov
leave
loop
or
cmp
cli
mov
add
cld
mov
add
cli
mov
loopne
mov
leave
test
loopne
mov
leave
loop
or
popa
mov
or
or
int
dec
cmp
cmp
shr
sub
jmp
push
adc
xchg
dec
int
dec
cmp
mov
jmp
mov
or
int
dec
int
dec
cmp
cmp
shr
xchg
shr
sub
int
dec
iret
mov
out
shl
xchg
cmp
shr
sub
das
mov
or
int
dec
int
dec
cmp
shr
sub
psrlq
xchg
push
adc
xchg
dec
int
dec
cmp
stc
shr
sub
mov
incl
add
lea
dec
cmp
shr
sub
psrlq
xchg
push
adc
xchg
dec
int
dec
cmp
stc
shr
sub
mov
incl
add
lea
int
xor
icebp
cmp
shr
sub
jmp
push
adc
xchg
xor
out
cmp
xchg
shr
sub
xchg
or
adc
lea
dec
int
mov
icebp
cmp
shr
xchg
shr
sub
iret
push
nop
incl
add
add
add
jbe
mov
int
xor
xchg
xor
cmp
stos
cmp
shr
xchg
shr
sub
or
add
jbe
int
dec
cmp
mov
repnz
aam
iret
push
adc
int
xor
lea
cmp
mov
repnz
jo
push
and
add
jo
jbe
rolb
int
dec
cmp
lock
mov
mov
push
ror
iret
movsb
incl
add
int3
push
sbb
jbe
mov
int
xor
xchg
xor
psrlq
xchg
add
call
ljmp
sbb
sub
xor
push
jo
add
iret
mov
mov
add
pop
adc
push
bound
add
int
mov
add
int
mov
add
add
sub
jge
or
mov
mov
mov
add
add
pusha
mov
add
iret
mov
or
les
add
int
mov
add
iret
loopne
pop
add
iret
enter
iret
mov
mov
add
mov
add
add
stc
mov
add
int
pop
leave
xor
iret
addb
add
jge
or
aam
add
int
mov
add
cmp
or
add
add
addr16
add
leave
push
lods
add
add
xor
fadds
add
jae
jno
mov
int
xor
xchg
xor
call
repnz
jns
mov
lea
add
cmp
repz
push
jecxz
lret
add
sbb
lret
cmp
inc
cli
das
or
addb
das
add
addb
xchg
xor
psrlq
xchg
add
call
ljmp
aad
cmp
add
lea
int
xor
psrlq
xchg
add
call
jmp
jge
int
lea
add
mov
repnz
mov
jecxz
lea
int
xor
psrlq
xchg
add
call
jmp
jge
or
add
lea
int
xor
sti
call
jmp
shr
sub
int
xor
add
cmp
repz
push
jecxz
lret
add
sbb
lret
cmp
inc
cli
das
or
pop
pop
add
add
cmpsb
mov
jne
jbe
int
mov
or
insb
test
jbe
int
jge
inc
jge
shr
xchg
int
jne
xchg
jge
leave
cmp
push
icebp
int
cmc
bound
jo
push
cmc
incl
add
repnz
int
in
int
adc
inc
jge
shr
xchg
int
in
int
adc
repnz
iret
cmc
incl
add
mov
leave
cmp
push
rolb
das
push
push
addb
jbe
ficoms
pop
mov
jbe
or
int
xchg
int
popf
das
inc
jge
shr
xchg
int
xchg
int
popf
cmp
cmp
push
icebp
bound
xor
repnz
pop
xor
push
repnz
int
xchg
int
popf
das
inc
jge
shr
xchg
int
xchg
int
popf
cmp
cmp
push
icebp
bound
pop
xor
repnz
pop
sub
xchg
repnz
int
xor
mov
jle
xchg
lea
inc
rcll
jbe
int
icebp
cmp
shrl
ror
lea
push
jge
dec
int
popf
addl
jbe
int
xor
cmp
cmc
add
sub
and
sbb
adc
test
add
or
adc
add
int
cmp
fcoml
aam
int
cmp
fsubl
aam
int
adc
add
int
cmp
outsb
sbb
push
add
cmp
cmc
mov
stos
test
lret
shlb
xchg
int
jno
cwtl
leave
jbe
dec
and
inc
and
int
std
sar
shll
xchg
sti
sarl
push
jns
mov
int
std
aam
int
std
cmp
cmp
sarl
push
jns
dec
inc
adc
pop
int
xor
jbe
cmp
push
add
push
pop
lret
or
das
push
fcmovbe
dec
add
adcl
fwait
addb
dec
adc
in
addb
lea
lret
or
js
clc
orb
int
stc
cmp
int
stc
add
ljmp
std
cmp
int
std
cmp
shl
sub
mov
lret
rorb
int
add
leave
jbe
dec
and
xchg
jbe
or
int
adc
add
lea
addl
lea
std
cwtl
lcall
jns
mov
shl
sub
or
int
std
int
std
cmp
mov
repnz
or
int
mov
insb
jo
mov
int
mov
insb
pop
int
mov
push
outsb
xchg
int
mov
sbb
insb
pop
int
mov
jle
jl
icebp
sub
jbe
int
pop
xchg
in
xchg
insb
xchg
or
int
std
int
std
cmp
lock
push
rorl
jbe
int
std
int
std
cmp
lock
sub
mov
jbe
int
std
int
std
cmp
cmp
repnz
mov
lea
or
jbe
cmp
xchg
and
imul
xchg
int
std
cmp
lock
push
rorl
jbe
int
mov
jbe
add
popf
add
dec
int
mov
neg
add
or
int
adc
insl
aam
int
popf
or
int
movsl
int
dec
xor
or
int
adc
lea
dec
int
movsl
inc
jge
sbb
jbe
int
dec
int
adc
outsb
mov
lea
test
xchg
jbe
inc
and
cmp
xchg
and
or
iret
jbe
or
iret
jbe
or
iret
jbe
or
int
std
int
std
cmp
lock
push
rorl
jbe
jmp
xchg
and
xchg
popf
iret
jbe
jo
xlat
filds
add
jbe
int
stc
cmp
lock
sub
mov
jbe
or
int
xchg
sarl
in
push
popf
or
int
stc
cmp
shl
sub
jns
mov
stc
int
stc
cmp
cmp
shr
xchg
shr
sub
xchg
int
movsl
or
sub
jbe
int
stc
cmp
lock
push
shll
dec
iret
jbe
jo
sti
std
add
int
std
int
std
cmp
lock
sub
mov
lea
int
std
int
std
cmp
lock
push
shll
dec
iret
jbe
jo
mov
jbe
int
cmc
int
int
cmp
cmp
repnz
mov
je
ror
std
int
std
cmp
cmp
shr
xchg
shr
sub
pop
insl
push
adc
das
add
int
adc
lea
int
int
cmp
cmp
repnz
mov
je
ror
std
int
std
cmp
cmp
shr
xchg
shr
sub
pop
insl
push
adc
das
add
int
adc
lea
lock
repnz
mov
je
ror
std
int
std
cmp
cmp
shr
xchg
shr
sub
pop
insl
push
adc
das
add
int
in
int
in
int
int
cmp
cmp
repnz
mov
je
ror
std
int
std
cmp
cmp
shr
xchg
shr
sub
pop
insl
push
adc
das
add
int
adc
lea
int
int
cmp
shl
sub
jns
mov
je
ror
cmc
int
int
cmc
int
cmp
shr
xchg
cmp
shr
sub
lret
rolb
int
adc
mov
xchg
adc
and
psrlq
xchg
cmp
shr
sub
lret
rorb
int
cmc
int
int
cmc
int
cmp
cmp
shr
xchg
shr
sub
lret
push
pusha
jge
push
mov
jbe
int
adc
mov
cmpb
shl
sub
jns
mov
je
ror
lea
int
int
adc
and
psrlq
xchg
cmp
shr
sub
lret
rolb
int
in
int
int
in
int
cmp
shr
xchg
cmp
shr
sub
lret
rorb
int
adc
mov
xchg
adc
and
jmp
shr
sub
lret
push
pusha
jge
push
cmc
addb
in
int
int
cmp
shl
sub
jns
mov
je
ror
lea
int
cmp
shr
xchg
cmp
shr
sub
lret
rolb
int
cmc
int
int
cmc
int
cmp
shr
xchg
cmp
shr
sub
lret
rorb
int
adc
mov
xchg
adc
and
jmp
shr
sub
lret
push
pusha
jge
push
add
in
int
in
int
int
cmp
shl
sub
jns
mov
je
ror
cmc
int
int
cmc
int
cmp
shr
xchg
cmp
shr
sub
lret
rolb
int
adc
mov
xchg
adc
and
psrlq
xchg
cmp
shr
sub
lret
rorb
int
in
int
int
in
int
cmp
cmp
shr
xchg
shr
sub
lret
push
pusha
jge
xor
jbe
jo
outsl
lods
add
int
pop
inc
rcl
push
int
std
int
std
cmp
cmp
repnz
mov
jbe
int
stc
int
stc
int
stc
int
stc
cmp
xchg
shrl
cmpsb
gs
xchg
cmp
add
std
add
std
shr
sub
hlt
dec
and
int
std
cmp
cmp
repnz
mov
lea
push
std
add
int
std
int
std
cmp
lock
sub
mov
lea
int
stc
int
stc
cmp
lock
push
shr
jle
addb
popf
iret
jbe
jo
jge
add
int
std
int
std
cmp
lock
sub
mov
lea
int
stc
int
stc
cmp
lock
sub
mov
lea
int
stc
int
stc
cmp
lock
push
shll
iret
jbe
jo
das
cli
add
int
std
int
std
cmp
lock
push
shll
iret
jbe
jo
sti
stc
add
int
popf
xchg
or
add
cmp
jbe
xchg
jo
push
fildl
add
jbe
int
std
cmp
lock
sub
mov
lea
int
stc
int
stc
cmp
lock
sub
mov
lea
int
stc
int
stc
cmp
mov
repnz
jo
cmp
jbe
jo
add
jbe
int
std
cmp
mov
repnz
jo
cmp
jbe
jo
jb
add
int
inc
int
inc
cmp
cmp
shr
xchg
shrl
lea
addl
jo
cmp
lea
add
jbe
int
cmp
cmp
jbe
int
stc
int
stc
cmp
shl
sub
jns
mov
lea
std
int
std
cmp
cmp
shr
xchg
shr
sub
xchg
or
cli
add
int
mov
xor
in
adc
cwtl
lcall
add
xchg
mov
or
dec
int
mov
cmpsb
dec
or
pop
jnp
ficoms
cmp
pop
mov
adc
inc
sti
xchg
shr
sub
clc
addb
cmp
push
clc
int
sbb
aad
sbb
das
adc
je
push
ja
xchg
shr
addl
xchg
mov
dec
int
mov
dec
int
mov
cmpsb
dec
cmp
cmp
das
inc
sti
xchg
shr
sub
clc
addb
aad
out
xchg
push
clc
int
xor
cmpsb
adc
popf
int
xor
cli
int
adc
inc
loope
shrl
cli
push
addb
push
popf
int
mov
bswap
dec
int
xor
cmpsb
adc
lods
std
add
std
shr
sub
ficoml
aaa
ficoms
adc
mov
clc
aam
ficoms
adc
mov
leave
sbb
push
jge
cltd
pop
mov
add
aaa
ficoms
cmp
adc
out
ficoms
sbb
das
adc
das
stos
push
in
xchg
imul
and
addb
dec
int
mov
out
cmp
pop
jnp
ficoms
cmp
das
inc
sti
xchg
shr
xchg
cmp
shl
sub
cmc
push
fxch
out
imul
cmpsb
and
and
cmpsb
adc
xchg
fiaddl
aam
add
xor
and
sub
std
add
sub
add
or
or
mov
out
cmp
cmp
das
inc
add
out
int
mov
cmpsb
dec
shr
sub
dec
cmc
cmp
push
clc
int
xor
cli
push
aad
cmpsb
adc
popf
int
int
xor
or
cmpsb
adc
inc
jge
shr
sub
fst
jmp
adc
addb
lock
icebp
sbb
and
mov
cmpsl
cmp
sbb
jbe
int
dec
int
mov
dec
adc
mov
jnp
ficoms
das
inc
jge
int
cmp
cmp
sarl
jmp
adc
addb
divps
test
aam
adc
gs
jo
mov
ss
das
sbb
mov
test
lret
shrb
xchg
int
add
dec
int
mov
lea
jge
shr
xchg
int
mov
xchg
dec
cwtl
shl
sub
lea
cmpsb
mov
cmp
push
rorb
or
xor
mov
jbe
int
xor
addb
int
adc
adc
test
nop
jo
add
or
lea
jge
shr
xchg
int
mov
xchg
dec
add
and
jns
ficoml
or
iret
jbe
jo
add
sbb
repnz
adc
xor
dec
add
mov
int
mov
lea
jge
shr
xchg
int
mov
xchg
dec
cmp
fcmovbe
repnz
das
push
rolb
aam
int
xor
lea
inc
jge
shr
xchg
int
xor
xchg
adc
jns
fcmovbe
repnz
lea
shrb
shll
or
adcb
lcall
xchg
inc
int
and
mov
jnp
ficoms
inc
icebp
das
or
addb
test
jnp
inc
hlt
mov
das
add
adc
jno
ficoms
mov
das
add
adc
xchg
aaa
ficoms
mov
das
add
adc
cmpsb
aaa
ficoms
test
aam
adc
scas
aaa
ficoms
mov
das
add
adc
mov
ficoms
das
push
into
addl
sub
addl
adc
xor
dec
add
mov
jmp
addl
mov
das
add
adc
xchg
aaa
ficoms
mov
das
add
adc
aaa
ficoms
test
aam
adc
fidivs
ficoms
mov
das
add
adc
out
ficoms
in
iret
int
mov
dec
int
mov
cmpsb
dec
cmp
cmp
das
inc
sti
xchg
shr
sub
clc
addb
cmp
push
clc
int
mov
int
dec
xchg
sbb
or
int
mov
dec
int
mov
cmpsb
dec
cmp
cmp
das
inc
sti
xchg
shr
sub
fst
out
xchg
adc
addb
clc
ds
xor
adc
xchg
cmp
inc
int
xor
adc
xchg
xor
adc
out
int
adc
adc
jecxz
inc
sti
xchg
shr
sub
fstl
clc
addb
push
clc
int
cmp
aad
cmpsb
inc
cmp
cmp
lea
loope
cmp
shrl
subb
lea
shr
xchg
push
popf
xchg
int
adc
hlt
add
std
shr
sub
insl
adc
aam
ficoms
adc
mov
out
int
inc
add
std
adc
aam
ficoms
adc
mov
lock
and
aad
rclb
or
and
not
aaa
ficoms
cwtl
add
xor
sub
add
sbb
adc
xor
dec
add
mov
or
arpl
sarb
int
mov
dec
int
mov
cmpsb
dec
cmp
cmp
das
inc
sti
xchg
shr
sub
clc
addb
cmp
push
aad
clc
int
xor
cmpsb
adc
fsts
or
int
cmp
inc
int
xor
adc
xchg
mov
dec
int
mov
dec
int
mov
cmpsb
dec
cmp
cmp
das
inc
sti
xchg
shr
sub
clc
addb
aad
out
xchg
push
clc
int
xor
cmpsb
adc
cli
cmp
lea
inc
loope
cmp
push
cli
shrl
subb
push
popf
int
cmp
lea
int
cmp
hlt
int
inc
adc
mov
jnp
ficoms
das
inc
jge
shr
sub
jmp
cmp
adc
addb
lds
lea
out
int
adc
repnz
add
std
adc
aam
ficoms
adc
aam
ficoms
shr
sub
insl
adc
mov
hlt
mov
lock
jmp
incl
add
sbb
pop
aaa
ficoms
or
and
jbe
xchg
aaa
ficoms
or
int
adc
cmc
lcall
xchg
int
adc
out
jo
sti
cmpsb
mov
jno
xchg
std
int
dec
or
iret
jbe
add
mov
mov
dec
add
in
add
mov
adc
stos
or
int
std
test
rorb
add
stc
add
inc
cwtl
leave
je
xor
addb
addb
xor
xor
sub
and
sbb
adc
xor
dec
add
mov
int
mov
je
test
je
xor
insl
das
add
int
xor
push
insl
das
add
add
xor
add
xor
add
xor
int
xor
add
int
xor
int
xor
int
xor
iret
jbe
or
int
xor
xchg
or
int
xor
int
xor
int
xor
int
and
xor
aam
mov
add
sbb
or
xor
push
int
fs
xchg
sbb
push
int
xchg
pop
sbb
add
addl
dec
int
xor
xchg
or
or
xor
push
insl
das
push
cwtl
addl
addl
je
test
add
orb
xor
int
xor
int
or
int
or
int
xor
int
int3
addl
dec
int
xor
int
xor
int
popf
addl
or
imul
jns
add
sarl
push
jge
mov
leave
je
mov
je
xor
insl
aam
int
xor
add
adc
jl
cmp
and
add
xor
add
xor
add
xor
add
xor
int
xor
add
in
cmp
aam
and
aam
and
aam
and
je
push
add
in
and
aam
adc
je
cmp
icebp
in
xchg
je
xor
icebp
or
int
xor
push
insl
aam
int
xor
leave
add
and
mov
mov
int
movsl
addl
and
mov
mov
cmp
add
shl
sub
mov
mov
inc
rcl
and
je
test
mov
int
movsl
addl
addb
cmp
push
iret
jbe
or
int
xor
int
xor
int
in
addb
je
test
add
addl
or
or
adc
mov
int
in
addb
mov
sub
lds
gs
popa
ja
jne
outsl
insl
jne
add
jno
jb
bound
dec
popa
addr16
addr16
js
bound
insb
outsl
add
je
jo
outsl
outsl
push
gs
outsl
jae
jne
imul
jae
dec
jne
imul
gs
outsl
jbe
jae
insb
push
gs
push
outsl
data16
popa
jns
gs
jo
outsl
insb
insb
jo
imul
gs
jne
jae
addr16
jo
gs
outsl
ja
add
outsb
je
gs
popa
je
outsl
jo
insb
fs
arpl
dec
outsl
imul
push
imul
add
je
gs
insb
jne
add
imul
insl
jo
outsb
outsl
add
jae
outsb
add
push
add
add
arpl
push
add
add
push
add
js
jns
push
add
jb
arpl
add
outsl
add
dec
add
outsb
add
je
outsl
add
outsl
add
popa
add
add
dec
add
outsb
add
add
outsb
add
popa
add
add
inc
add
jne
jae
je
add
push
add
jb
jns
add
push
add
popa
add
push
add
insb
add
je
imul
add
add
jo
add
jns
je
push
add
outsl
add
push
add
jo
jns
add
bound
outsl
add
inc
add
popa
add
add
jae
add
add
or
add
xor
add
push
adc
xchg
adc
mov
and
adc
add
adc
add
adc
lcall
add
or
add
add
adc
or
pop
adc
out
adc
scas
addb
addb
addb
addb
addb
addb
addb
addb
addb
addb
addb
addb
addb
addb
addb
addb
addb
addb
addb
addl
mov
inc
add
addl
mov
addl
scas
addl
mov
inc
add
addl
mov
adc
pop
cmp
add
adc
jbe
adc
or
add
sbb
add
sub
add
adc
movsb
inc
adc
jecxz
adc
shlb
push
push
adc
pop
inc
adc
xchg
rcrl
add
je
add
adc
fldcw
add
pop
adc
nop
push
adc
scas
push
adc
hlt
jbe
add
pop
adc
mov
data16
pop
dec
adc
mov
adc
sub
adc
xchg
cmp
add
addl
into
addl
addl
fiadds
inc
add
addl
out
addl
testb
add
addl
push
adc
bound
adc
and
inc
adc
ss
adc
leave
jno
add
cmp
add
inc
adc
mov
pop
adc
dec
sub
add
xor
add
adc
jl
adc
xchg
jle
add
data16
inc
addb
addb
addb
addb
addb
addb
addb
addb
addb
addb
addb
addb
addb
addb
addb
addb
imul
mov
adc
addr16
add
add
cmp
add
adc
jecxz
adc
push
or
add
adc
push
dec
adc
mov
adc
sarl
add
add
adc
test
addb
addb
addb
addb
addb
addb
addb
addb
addb
addb
addb
addb
addb
addb
addb
addl
add
je
dec
add
add
add
add
add
add
add
add
add
add
add
add
add
add
xor
add
push
test
add
add
jl
add
nop
test
add
add
mov
test
add
test
add
test
add
add
adc
add
xchg
add
xchg
add
add
pop
xchg
add
add
add
add
lahf
add
addb
add
xchg
xchg
add
xchg
add
xchg
add
xchg
add
xchg
add
xchg
add
xchg
add
xchg
add
add
cmp
add
pop
xchg
add
add
jb
add
test
add
cmpsb
xchg
add
add
loop
add
xacquire
add
xchg
add
mov
add
add
mov
add
add
add
jo
add
orb
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
add
xor
add
inc
mov
add
add
push
add
jp
add
mov
add
stos
mov
add
add
loop
add
add
add
cld
mov
add
mov
add
mov
add
mov
add
add
add
orb
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
add
add
je
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
add
mov
insb
imul
je
add
inc
add
je
dec
inc
inc
outsl
insb
outsl
jb
popa
bound
add
add
jb
popa
insb
imul
arpl
add
je
jb
arpl
imul
xchg
add
gs
je
inc
dec
inc
push
arpl
outsb
add
popl
inc
jb
popa
je
inc
inc
push
add
add
je
imul
je
js
add
add
je
arpl
outsb
add
fadds
push
gs
imul
add
inc
gs
bound
arpl
add
popa
je
inc
outsl
outsb
je
outsb
imul
xchg
inc
gs
gs
inc
js
outsb
je
outsl
imul
mov
popa
je
dec
inc
push
add
add
popa
jb
inc
outsl
arpl
add
push
gs
imul
addr16
js
add
outsl
dec
push
add
std
add
je
gs
inc
outsl
insb
outsl
jb
add
add
je
push
fs
xor
push
add
add
jne
inc
outsl
outsb
je
popa
insl
imul
add
je
dec
inc
imul
xor
fs
insb
add
inc
inc
push
push
xor
cs
insb
add
xchg
inc
gs
insb
addr16
jb
arpl
add
je
outsb
jne
je
insl
push
arpl
add
imul
je
gs
add
add
arpl
insb
addr16
jne
je
outsb
add
addb
push
outsb
outsl
ja
jae
outsb
arpl
add
imul
popa
jae
push
add
xchg
add
outsb
jae
popa
je
inc
arpl
insb
gs
je
jb
add
add
fs
imul
add
je
popa
jb
je
outsl
jae
scas
add
ja
fs
pop
add
gs
je
inc
imul
jb
insl
inc
add
out
inc
jb
insl
gs
arpl
add
je
jo
popa
je
push
arpl
add
je
inc
add
push
imul
outsl
arpl
add
add
imul
push
add
je
outsl
jb
outsb
jo
je
fs
add
hlt
add
jae
push
push
dec
gs
popa
addr16
add
xchg
add
outsb
jae
popa
je
dec
gs
popa
add
test
dec
outsb
jae
jb
dec
outsb
jne
je
insl
push
add
add
outsb
fs
imul
push
add
ja
gs
inc
add
add
je
insb
popa
jae
dec
outsl
outsb
addr16
add
imul
add
cmp
inc
gs
outsb
jne
je
imul
add
outsb
fs
gs
popa
addr16
imul
add
push
jo
popa
dec
jne
gs
arpl
or
inc
imul
jae
push
outsb
imul
outsb
fs
gs
popa
addr16
add
popf
add
insb
outsl
addr16
outsl
js
popa
jb
insl
push
add
push
gs
outsl
arpl
add
stos
add
fs
imul
add
je
insb
popa
jae
dec
outsb
outsw
inc
js
add
popa
insb
imul
add
inc
jb
popa
je
inc
imul
jb
insl
push
add
or
inc
gs
inc
inc
js
repz
je
popa
jb
je
outsl
jae
xchg
add
je
outsl
jns
arpl
insb
gs
je
jb
popa
bound
ret
jbe
jo
imul
lds
dec
jae
push
jo
popa
push
add
sti
add
je
insb
popa
jae
dec
popa
insl
gs
add
push
gs
outsb
jne
gs
jne
je
je
insl
add
pop
add
je
jns
inc
outsl
insb
outsl
jb
add
add
push
gs
ja
imul
cmp
arpl
popa
imul
outsb
add
xor
jb
outsl
dec
gs
push
add
jnp
push
push
jb
outsl
jb
add
add
je
arpl
gs
imul
add
arpl
outsl
jo
jo
outsb
jne
add
add
je
jae
outsb
arpl
jns
je
je
add
xchg
add
je
outsl
jns
arpl
add
inc
push
xor
cs
insb
add
add
addr16
gs
gs
push
popa
insb
jne
inc
add
push
gs
popa
insb
jne
inc
js
add
pop
add
jns
je
gs
jb
jns
gs
popl
push
gs
gs
popa
insb
jne
inc
js
add
das
add
je
data16
outsl
outsl
je
outsl
outsb
imul
je
jae
add
push
gs
insb
outsl
jae
dec
gs
inc
fs
jo
xor
cs
insb
add
arpl
cs
add
bound
push
gs
insb
insb
outsl
arpl
sbb
inc
jb
outsl
jb
outsl
fs
mov
inc
outsl
insl
jo
jb
push
je
imul
add
jae
jb
jo
inc
add
adc
inc
jne
insb
imul
outsb
fs
add
push
gs
push
inc
data16
dec
popa
jae
add
add
fs
imul
add
sub
dec
outsl
arpl
push
imul
push
jns
je
insl
push
imul
insb
gs
imul
inc
gs
gs
inc
jb
je
arpl
push
arpl
outsb
add
add
gs
popa
outsb
fs
gs
outsl
jne
je
add
push
jne
jb
push
gs
outsl
jb
popa
outsb
arpl
outsl
jne
je
jb
testl
imul
and
insl
push
gs
jne
arpl
jns
gs
add
lcall
insb
inc
gs
je
insl
dec
popa
insl
gs
add
loop
inc
jb
popa
je
dec
popa
insl
gs
imul
add
je
outsl
arpl
gs
outsb
outsw
inc
add
lar
je
outsl
fs
gs
imul
add
pop
add
popa
insb
push
imul
insb
gs
jb
outsl
insl
insl
inc
jb
popa
imul
pusha
add
outsb
fs
imul
gs
add
push
add
je
jne
bound
inc
outsl
jb
popa
je
add
dec
inc
push
dec
inc
dec
xor
cs
insb
