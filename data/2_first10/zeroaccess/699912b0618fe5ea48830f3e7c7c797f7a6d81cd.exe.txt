push
mov
sub
andl
push
mov
movl
push
movl
push
call
adcl
test
movl
je
orl
xor
movl
jmp
subl
push
push
xor
subl
inc
subl
push
sbbl
push
xorl
call
test
movl
je
incl
xor
jmp
xorl
push
mov
addl
push
adcl
push
push
andl
call
test
movl
jne
sbbl
push
xorl
push
orl
call
andl
test
movl
jne
push
push
call
test
movl
jne
orl
push
push
sbbl
call
xorl
test
movl
jne
movl
push
push
push
adcl
call
test
movl
jne
push
subl
push
adcl
push
orl
call
decl
test
movl
jne
push
orl
push
call
subl
test
jne
addl
push
adcl
push
call
sbbl
test
jne
orl
push
push
orl
call
test
movl
jne
movl
push
push
push
call
test
jne
push
push
orl
push
movl
call
test
jne
sbbl
push
orl
push
call
test
jne
push
andl
push
subl
call
xorl
test
jne
push
subl
push
adcl
call
xorl
test
movl
jne
addl
push
orl
push
andl
push
call
adcl
test
jne
orl
push
push
push
call
test
movl
jne
push
push
subl
call
adcl
test
jne
orl
push
subl
push
call
xorl
test
movl
jne
push
push
sbbl
call
test
movl
jne
adcl
push
push
push
movl
call
test
movl
jne
adcl
push
push
sbbl
push
call
adcl
test
movl
jne
xorl
push
addl
push
orl
call
test
movl
jne
decl
push
andl
push
orl
call
test
jne
subl
push
xorl
push
andl
call
test
movl
jne
push
adcl
push
movl
push
xorl
call
addl
test
movl
jne
push
orl
push
addl
push
andl
call
test
jne
adcl
push
orl
push
subl
call
test
jne
orl
push
andl
push
call
xorl
test
jne
orl
push
orl
push
call
test
movl
jne
push
subl
push
adcl
push
addl
call
addl
test
movl
jne
addl
push
push
push
call
test
jne
subl
push
xorl
push
subl
call
notl
test
movl
jne
push
negl
push
call
xorl
test
jne
subl
push
notl
push
orl
call
test
jne
orl
push
push
andl
push
call
subl
test
movl
jne
push
andl
push
push
call
subl
test
jne
push
push
call
orl
test
jne
addl
push
subl
push
call
test
movl
jne
xorl
push
push
subl
call
test
movl
jne
push
push
push
movl
call
sbbl
test
movl
jne
push
andl
push
orl
push
call
andl
test
jne
push
orl
push
call
test
jne
push
subl
push
orl
call
orl
test
jne
push
push
call
test
jne
andl
push
push
push
call
movl
test
jne
push
sbbl
push
push
orl
call
test
jne
adcl
push
subl
push
call
test
movl
jne
push
adcl
push
movl
call
decl
test
movl
jne
xorl
push
movl
push
addl
call
test
jne
andl
push
push
push
xorl
call
orl
test
movl
jne
notl
push
orl
push
subl
push
xorl
call
test
jne
subl
push
subl
push
call
test
jne
push
xorl
push
call
test
jne
push
orl
push
addl
call
orl
test
movl
jne
push
orl
push
push
call
orl
test
jne
push
push
notl
push
adcl
call
sbbl
test
movl
jne
adcl
push
push
orl
call
sbbl
test
jne
push
addl
push
andl
call
xorl
test
jne
sbbl
push
addl
push
call
subl
test
movl
jne
push
orl
push
push
addl
call
test
movl
jne
push
incl
push
push
andl
call
movl
test
jne
addl
push
andl
push
call
test
jne
push
notl
push
call
test
jne
push
push
addl
call
test
movl
jne
xorl
push
push
adcl
push
sbbl
call
test
movl
jne
adcl
push
push
sbbl
push
subl
call
test
jne
incl
push
movl
push
subl
call
test
movl
jne
push
andl
push
addl
call
test
movl
je
addl
xor
jmp
movl
mov
mov
adc
mov
inc
mov
movl
lea
xor
mov
lea
dec
mov
and
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
jmp
mov
mov
adcl
mov
sbb
mov
xor
mov
mov
adc
mov
add
movl
mov
movl
mov
cmp
movl
jne
mov
mov
sbb
mov
xor
mov
mov
xor
sub
add
sbbl
mov
xor
mov
xor
add
andl
mov
xor
mov
mov
mov
mov
mov
mov
sbb
mov
mov
add
mov
mov
mov
not
movl
movzbl
add
mov
mov
orl
xor
orl
add
movl
jmp
andl
jmp
xor
add
inc
mov
cmpl
jae
cmpl
jne
push
push
push
pushl
call
cmpl
jne
mov
inc
mov
jmp
mov
andl
xor
add
inc
mov
cmpl
jne
push
call
cmpl
jb
adcl
mov
xor
andl
lea
orl
push
mov
and
mov
subl
xor
sbbl
lea
push
andl
mov
inc
mov
cmpl
jne
push
call
cmpl
jb
mov
sbbl
pushl
andl
call
sbb
mov
mov
xor
lea
add
mov
mov
xor
xor
subl
add
mov
subl
xor
lea
mov
movl
cmp
jbe
sub
mov
xor
mov
andl
mov
inc
mov
cmpl
jne
push
push
call
cmpl
jne
xor
or
inc
mov
cmpl
jb
add
mov
or
mov
movzbl
sbb
mov
mov
sub
xor
movl
mov
mov
movl
cmp
jne
decl
lea
adcl
mov
lea
andl
mov
movl
cmpl
je
cmpl
jne
push
pushl
pushl
pushl
pushl
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
test
movl
je
sub
mov
sub
mov
mov
mov
mov
sub
mov
mov
mov
andl
xor
add
inc
mov
cmpl
jne
call
cmpl
jb
orl
mov
movl
cmpl
je
cmpl
jne
push
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
and
cltd
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
jmp
mov
mov
sbb
mov
add
adc
xor
andl
xor
mov
sub
mov
mov
dec
mov
mov
movl
xor
mov
mov
and
add
mov
adcl
xor
mov
mov
xor
movl
mov
movl
cmp
movl
jne
mov
mov
cmp
movl
je
mov
mov
adcl
mov
xor
addl
add
movl
adc
addl
xor
xor
movl
cmp
movl
jne
cmp
jne
mov
mov
xor
mov
mov
mov
add
jmp
mov
cmp
je
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
pushl
mov
pushl
add
mov
mov
pushl
call
mov
mov
mov
jmp
mov
mov
xor
add
cmp
jne
mov
mov
mov
xor
add
cmp
jne
mov
push
xor
add
push
push
pushl
pushl
call
mov
mov
mov
mov
mov
xor
add
mov
mov
mov
mov
mov
mov
mov
movl
mov
xor
add
mov
mov
mov
mov
mov
mov
push
pop
sub
add
movl
mov
mov
mov
mov
mov
mov
mov
xor
add
mov
lea
mov
mov
xor
add
mov
lea
push
mov
xor
add
push
mov
push
pushl
call
mov
mov
mov
mov
xor
mov
add
jmp
lea
mov
mov
sub
mov
mov
mov
mov
movl
mov
movl
mov
xor
add
mov
mov
xor
add
mov
movl
movl
mov
mov
xor
add
cmp
je
mov
xor
mov
sub
add
mov
mov
xor
add
imul
cmp
ja
mov
mov
mov
sub
xor
xor
add
div
mov
mov
mov
xor
add
cmp
jbe
mov
xor
add
mov
mov
mov
xor
add
imul
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
add
movl
mov
mov
mov
movl
movl
mov
mov
xor
add
jmp
movl
movl
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
xor
add
add
imul
add
mov
mov
mov
cmp
jb
mov
mov
xor
add
imul
mov
xor
add
or
mov
xor
add
mov
xor
add
mov
lea
jmp
mov
mov
xor
lea
mov
jmp
mov
mov
xor
lea
lea
xor
cmp
jne
mov
mov
mov
xor
mov
xor
mov
xor
mov
mov
xor
mov
mov
mov
xor
add
mov
mov
xor
add
mov
lea
mov
lea
mov
mov
test
je
movl
movl
movl
movl
call
mov
mov
mov
mov
mov
mov
mov
mov
cltd
mov
mov
add
adc
andl
xor
mov
mov
mov
mov
xor
add
mov
adcl
xor
mov
mov
xor
mov
cmp
jne
mov
cmp
je
mov
mov
mov
xor
add
adc
xor
xor
cmp
jne
cmp
jne
mov
mov
xor
mov
mov
mov
add
mov
mov
mov
xor
mov
add
xor
add
adc
xor
xor
xor
add
adc
xor
xor
cmp
jne
cmp
jne
mov
mov
mov
push
add
push
lea
push
call
mov
mov
pop
pop
pop
leave
ret
xor
inc
ret
push
mov
sub
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
call
cmpl
jne
mov
inc
mov
jmp
mov
mov
and
movl
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
pushl
call
jmp
adc
mov
push
inc
mov
addl
xor
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
call
jmp
addl
mov
xorl
push
adc
mov
andl
add
cmp
movl
je
mov
andl
mov
inc
mov
cmpl
jne
push
push
pushl
call
cmpl
jb
mov
xor
xor
add
add
adc
xor
mov
push
xor
xor
mov
add
adc
xor
xor
cmp
jne
cmp
je
jmp
mov
jmp
xchg
add
xchg
mov
dec
ja
sti
push
mov
jp
jp
dec
pop
jp
adc
pop
cmp
popa
cmp
mov
xor
fdivr
insb
inc
imul
jl
push
iret
pop
dec
cmp
cli
xchg
dec
jg
mov
sub
data16
push
jg
jmp
xchg
fimuls
mov
imull
add
push
cli
es
or
imul
pop
add
jo
les
sbb
je
arpl
xchg
pop
mov
repz
cmp
or
sub
xor
push
jecxz
mov
test
inc
push
dec
or
repz
faddl
push
stc
push
push
mov
inc
sbb
inc
call
cmc
xor
jle
xchg
and
hlt
pop
inc
pop
in
popf
repz
movsl
lods
xchg
popa
test
cmpsl
dec
mov
cmp
push
dec
mov
dec
jle
in
in
fisttpll
jge
repnz
mov
jbe
cld
stos
fsts
dec
dec
sub
jb
xor
jno
cwtl
push
ret
mov
in
mov
adc
pop
mov
xchg
fists
mov
dec
dec
and
push
lods
cmp
push
inc
cld
add
sub
nop
mov
cmp
rclb
mov
sub
loope
and
outsb
pop
mov
mov
push
pop
fbld
cmp
push
out
mov
movsb
popa
int3
mov
je
cmpsb
jp
dec
mov
xchg
pop
test
jnp
pop
ljmp
movsl
clc
mov
es
jl
hlt
out
add
insl
xchg
mov
mov
sbb
or
lock
mov
cmpsb
testl
sbb
sarb
xor
or
js
xlat
cmp
jb
sbb
dec
mov
shll
scas
mov
xor
fcom
dec
pop
adc
inc
lret
adc
dec
fidivs
pop
xchg
push
jns
dec
ja
hlt
insb
push
mov
xchg
enter
ret
add
cmp
push
paddb
inc
add
incl
cmp
dec
int3
adcl
and
mov
cmp
and
push
into
mov
adc
leave
call
leave
je
lock
mov
cmpsb
aaa
or
lret
ret
jle
popa
and
sub
or
adc
mov
adc
out
pop
movsl
imul
dec
mov
or
or
cmc
call
in
mov
sbb
lock
and
jno
adc
or
pop
add
std
arpl
fadds
cmp
mov
xchg
adc
mov
cmp
mov
push
hlt
popa
mov
inc
icebp
and
xchg
jbe
cmp
shrd
adc
jnp
mov
cmp
and
bswap
shlb
mov
sti
test
movsl
nop
aas
xor
jle
jb
sbb
mov
adc
mov
cs
hlt
jg
dec
imul
shl
in
inc
mov
inc
adc
or
imul
cmc
pop
pushf
pop
inc
out
adc
das
adc
data16
jne
dec
or
jns
in
mov
jb
outsl
sbb
mov
hlt
add
inc
inc
out
aad
sbb
jmp
cmp
loopne
push
loopne
aaa
mov
sub
ljmp
cmpsl
imul
cmp
test
pop
fisubrl
push
cmp
pop
pop
inc
xchg
aam
xchg
xor
pop
sbb
sbb
jmp
cld
jmp
sub
cltd
inc
roll
push
outsl
cwtl
xchg
sahf
outsl
mov
out
cmpsb
xor
mov
aad
in
pop
mov
mov
jb
popf
in
int3
in
orl
jnp
mov
insb
inc
orl
cmc
cmpsl
dec
sub
jg
dec
pusha
mov
xchg
xchg
sub
xor
cli
mov
xor
iret
push
push
in
sub
pop
mov
jl
dec
cmpsl
or
bound
ud0
int3
mov
inc
push
in
jb
mov
leave
sub
inc
imull
sbb
pop
in
fnstsw
ret
leave
push
push
push
sub
rcr
sbb
sar
sub
fsts
push
scas
std
push
fisubl
fisttpll
adc
sbb
or
ljmp
ret
fwait
orl
add
mov
std
push
mov
aaa
adc
imulb
dec
imul
rolb
mov
mov
lods
mov
xchg
lea
add
dec
xchg
es
pop
cmp
or
mov
xchg
fadd
in
mov
rcll
lea
ds
mov
jge
push
imul
ja
icebp
push
stos
icebp
rclb
aaa
das
mov
ret
mov
js
and
mov
push
inc
adc
ljmp
or
idivl
add
cmpsl
and
pushf
aam
inc
cmp
adc
ficomps
cmpsb
mov
jmp
lcall
es
es
imul
cmpsl
mov
inc
shrw
clc
mov
pop
test
xlat
daa
adc
xor
sbb
and
mov
popa
std
out
iret
fcompl
pop
pop
sahf
daa
pop
insl
dec
sub
sub
cltd
jno
movsl
sub
loop
jecxz
xchg
mov
int
mov
sbb
inc
and
sti
push
mov
xchg
sbb
inc
popa
xor
test
mov
jmp
lock
lods
sbb
mov
es
push
in
fs
or
inc
stos
push
mov
shrb
mov
jns
jnp
mov
lods
push
fnstsw
imul
cmp
push
xchg
sub
xchg
add
jle
xchg
jbe
adc
nop
aam
arpl
mov
lods
pop
sar
sub
cli
arpl
loop
sbb
js
sbb
jmp
setb
inc
test
cli
jb
pop
cmp
dec
movsb
push
shll
xchg
add
rcll
pop
loopne
out
jecxz
das
fsubl
ss
xchg
add
or
in
bound
sbb
mov
jmp
int
jnp
mov
mov
aad
mov
mov
out
insl
out
outsb
ret
push
and
mov
mov
test
adcl
shlb
xchg
int3
add
cltd
pop
jo
repz
adc
dec
fisttps
sbb
shrb
ret
iret
in
insb
movsb
push
inc
stos
add
jge
lds
mov
fucomp
fwait
lock
aaa
je
rorl
push
push
into
xchg
fmuls
pop
jb
std
pop
sub
jle
xchg
fnstsw
inc
xchg
fldenv
jae
or
rcr
jp
sbb
in
js
rorb
inc
cltd
xor
xchg
aaa
outsl
shll
inc
mov
xor
mov
add
push
adc
pushf
das
cmc
jae
adc
sub
imul
mov
add
fwait
pusha
dec
jge
xchg
rclb
lods
cmp
sbbl
std
xchg
cli
stos
repnz
xchg
punpckhwd
movsl
leave
mov
push
jno
cwtl
dec
negb
aad
and
jbe
pop
pop
push
out
out
sub
rol
scas
push
aad
popf
js
pop
pop
jp
adc
test
out
lea
sbb
ficoml
xchg
stos
inc
in
push
mov
call
outsl
repnz
ret
out
or
dec
pop
ljmp
push
dec
or
add
adc
mov
lea
aas
pop
or
sub
cmpl
push
cmpsb
push
xchg
lret
inc
ret
or
jne
jno
mov
cmpsb
rcrb
shlb
mov
in
lret
sbb
push
movsl
jmp
fwait
int3
imul
and
test
xchg
and
pop
subl
lret
cmc
or
stos
cmp
xor
lret
push
dec
ja
lods
adc
data16
ret
or
xorb
addr16
rcll
pushf
pop
cs
sub
popf
mov
adc
test
and
dec
mov
sub
and
ret
cmc
loop
cmp
xchg
sub
or
pop
push
jmp
cmc
or
jecxz
movsl
mov
adc
or
jge
push
inc
push
rorb
dec
push
ljmp
test
sbb
lock
bound
cli
and
sbb
ret
repnz
add
inc
push
or
mov
or
push
sar
mov
outsl
repnz
sbb
dec
outsb
lcall
loopne
cmp
inc
push
push
mov
lods
stos
ja
fnsave
and
popa
lock
mov
pop
or
add
inc
lahf
aaa
and
mov
fldt
lret
jl
ret
jmp
cmp
cltd
mov
or
xlat
cmp
push
sub
and
jle
mov
jge
mov
jno
popf
jno
roll
dec
push
add
enter
dec
inc
addb
sub
jl
sbb
xchg
aad
js
out
out
jmp
addl
and
push
loopne
movsb
andl
test
je
sahf
shll
in
stc
and
call
inc
push
lcall
push
stc
stos
fdivr
test
adc
rcrb
sub
sub
loop
jmp
cltd
xchg
xchg
cmpsl
minps
mov
sub
cli
aas
or
dec
icebp
inc
pop
or
cmp
out
cmp
mov
add
fcomp
ret
lock
adc
cmp
mov
jns
out
mov
std
les
mov
mov
add
ffree
or
cwtl
les
push
cmpsb
push
cld
xor
push
cltd
xchg
sub
push
xor
aas
xchg
push
sbb
movsl
pop
test
cmp
jle
add
xchg
and
cmp
mov
dec
push
mov
jge
sbbb
push
mov
rcrb
aam
mov
adc
shl
inc
lods
inc
lahf
inc
pop
inc
jle
lock
fs
mul
dec
pop
notb
fldl2t
pop
ss
lea
cs
clc
mov
std
jle
test
sub
pushf
jle
ficoml
xor
jae
mov
nop
lahf
xchg
dec
jg
pusha
and
hlt
mov
xor
pop
cmp
ljmp
add
cld
fstps
sbbb
fisttpl
test
mov
lret
lock
mov
cwtl
jbe
cmp
dec
fidivs
cmpsl
xchg
test
or
std
and
sub
andl
lret
push
mov
cwtl
sbb
adc
cli
and
xchg
mov
push
fimuls
fs
scas
inc
jnp
mov
and
dec
insl
add
shll
out
out
and
sbb
and
aas
mov
adc
or
outsl
pop
mov
jno
jmp
inc
xchg
cmp
or
mov
fs
hlt
mov
out
mov
shlb
pop
popf
mov
push
push
mov
in
sbb
or
jo
scas
mov
shll
std
inc
pop
fistpl
sub
push
repz
and
mov
cmp
les
and
push
xchg
inc
push
pushf
inc
add
sbb
cwtl
dec
mov
in
sub
lret
push
add
imul
or
int
pop
mov
lcall
pop
jle
adc
add
xchg
inc
int
out
pop
mov
mov
push
mov
pop
scas
adc
push
push
push
mov
jbe
jp
jae
orb
dec
mov
jae
cmp
xchg
dec
or
dec
cmp
stos
push
jmp
cmp
mov
or
outsl
f2xm1
mov
int
bound
repnz
aam
ja
adc
rclb
jmp
xchg
negl
cmp
lcall
xor
add
cmp
inc
fnsetpm(287
mov
cmp
mov
sarl
imul
sbb
cli
xchg
adc
scas
pop
lret
iret
pop
inc
or
ja
xchg
dec
daa
mov
pop
ret
sub
sti
fnsave
dec
cmp
cli
push
lret
and
jp
ror
or
int
push
aaa
notl
inc
movsl
xchg
mov
loope
or
mov
repz
mov
out
lods
in
mov
cmp
fsts
sbb
jo
mov
jno
inc
cmpsl
sbb
insl
jno
lds
aas
push
mov
ret
imul
mov
rsqrtps
sti
nop
scas
test
jnp
rcl
cmpsb
jmp
add
iret
xchg
fcomps
sub
adc
push
je
shr
addw
int
and
jle
cltd
loop
loopne
xor
ret
xchg
cltd
call
roll
inc
into
fstps
pop
push
das
mov
jl
push
ds
leave
xor
push
sub
jb
sub
push
addb
xchg
cmp
pop
cmp
in
add
aas
or
gs
inc
aaa
dec
dec
push
or
pusha
jg
push
push
daa
ret
push
adc
sub
mov
loope
ret
and
pop
imul
adc
stos
pop
inc
ret
or
sub
pusha
insb
lods
add
pop
push
pushw
add
pusha
cmp
stos
pushf
cmp
xchg
and
orl
loop
js
mov
les
pop
lods
cmp
adc
jno
sbb
sbb
mov
imul
fnsave
pop
dec
push
and
mov
out
sub
dec
pop
js
std
cmpsb
cs
call
in
push
mov
and
out
aas
jg
dec
push
jp
pop
jge
and
aaa
call
dec
dec
out
imul
adc
out
lea
cmpsb
xor
jl
jbe
fucomip
jmp
out
inc
xchg
pop
incb
mov
out
push
and
shll
pop
leave
lods
sbb
hlt
out
or
es
or
loop
mov
mov
leave
pop
cmp
ja
out
jle
or
inc
addr16
scas
pop
mov
sbb
jae
mov
addr16
jnp
mov
xor
test
js
ret
mov
or
jmp
push
stc
jns
ret
or
xor
enter
pop
cmp
jb
inc
in
mov
xlat
push
inc
test
int3
in
shll
fs
arpl
jno
mov
cmp
push
add
add
xchg
mov
out
jle
dec
add
jnp
andb
xor
inc
pop
mov
in
sub
adc
xor
inc
into
mov
aam
lret
rclb
lcall
and
cmpsb
data16
insb
xchg
std
inc
adc
lret
sbb
int
lock
call
fwait
pusha
rcrl
or
stos
xlat
filds
cmp
and
lret
pop
imul
jb
pop
mov
popf
out
sub
add
lahf
sarl
mov
xor
sbb
mov
sub
in
push
dec
cmpsb
mov
jbe
xchg
mov
mov
std
adc
lds
sbb
in
dec
mov
push
ds
or
jg
jge
mov
pop
nop
push
sbb
inc
test
mov
push
inc
add
mov
test
dec
push
cmp
insl
xchg
pop
dec
insb
int
inc
jne
loop
mov
int
pop
sbb
sub
nop
pop
movsl
fbstp
cli
adc
xchg
insb
pop
fxch
cmp
jle
xchg
sbb
mov
sbb
mov
cs
cld
aaa
push
jnp
insl
dec
xorl
sub
sbb
fiadds
cltd
insl
jns
push
fnop
ficoml
add
movsl
test
addl
dec
pop
xorl
add
lea
mov
xchg
push
aas
insl
lret
jns
xchg
pop
sbb
je
popa
xlat
pop
cmpsb
pop
adc
inc
push
pop
fcoml
daa
mov
xchg
lock
adc
inc
mov
std
adc
jp
adc
test
xor
loope
test
testb
push
mov
mov
fsubrl
mov
addr16
jbe
ljmp
gs
int3
dec
loop
dec
mov
xchg
pop
xchg
jg
mov
movsb
lcall
test
jnp
dec
xor
mov
fldenv
xchg
xor
je
lds
in
or
pop
xor
js
inc
bound
xchg
stos
cltd
fs
das
sti
in
mov
fdivp
mov
stos
data16
pop
adc
outsb
push
lds
mulb
dec
xchg
les
dec
mov
jge
fs
shlb
xor
pop
sti
lds
aam
sub
push
add
cmpsl
sbb
shlb
std
sub
jle
sub
fsubrl
pop
stos
and
mov
add
jne,pn
inc
fnstcw
and
insl
mov
dec
sbb
jb
push
sub
mov
sub
sbbb
fisttpl
outsb
es
mov
fs
mov
into
cltd
sar
fildl
jecxz
push
and
fisubrl
stos
push
sub
fistpll
out
cmpsl
xchg
jo
popa
sub
sbb
js
pop
loope
inc
xor
jns
push
xchg
int
xchg
pop
and
dec
sarb
js
cli
and
cmp
and
mov
out
in
cli
hlt
inc
sub
mov
xor
jp
cmc
pusha
cmp
add
mov
jmp
or
cmp
jle
rcrl
pop
sbb
jns
mov
inc
mov
mov
stc
mov
push
pusha
pop
mov
mov
dec
jecxz
icebp
jge
inc
mov
mov
loop
popa
inc
enterw
fistpll
push
jne
ljmp
lock
js
das
loop
mov
xchg
loope
in
les
xor
jbe
xchg
and
lea
or
sbb
fcoml
inc
jge
js
mulps
adc
cs
jbe
add
loop
data16
lods
loope
out
mov
inc
add
adc
pop
test
fldenv
adc
cmp
jbe
subl
mov
or
testl
idivb
sub
add
xor
out
sti
pop
jl
mov
jb
pop
dec
outsb
les
push
cwtl
pop
mov
ja
shll
sbb
add
test
imull
leave
add
sbb
pop
jne
enter
mov
xor
pop
pop
dec
dec
ja
mov
pop
mov
cmp
lret
and
jmp
std
xor
cltd
xchg
mov
insl
mov
flds
push
sbb
cwtl
scas
gs
mov
lods
pop
int3
jae
je
and
movsb
and
ret
out
sbb
clc
mov
inc
test
ret
aaa
popa
movlps
mov
mov
fisttpll
jnp
pusha
imull
movsl
js
mov
je
ljmp
adc
loopne
roll
adc
jo
out
in
dec
mov
clc
jp
jns
mov
daa
das
insl
mov
daa
jb
push
pop
mov
sub
sbb
cltd
inc
jmp
sbb
in
cmp
ret
mov
cmpsb
adc
mov
and
or
cmpsb
insl
xlat
fdivrp
fwait
loope
dec
loope
mov
cmpsl
mov
mov
cmp
inc
lea
inc
or
ja
mov
cwtl
pop
cmp
sbb
scas
sbb
lods
pusha
ss
out
mov
jg
cltd
xchg
je
or
xor
pop
mov
roll
ljmp
inc
pminsw
jge
adc
outsb
das
repz
stos
dec
in
daa
lds
gs
add
imul
adc
mov
out
test
inc
test
fmuls
mov
dec
jbe
insb
aas
xchg
and
or
sbb
pusha
push
mov
arpl
mov
in
adc
rcrl
icebp
iret
dec
mov
mov
jb
xchg
mov
mov
sar
pop
sub
jl
sub
test
pop
pop
test
sub
out
lods
ffree
test
dec
addb
dec
fcoms
dec
mov
test
sub
gs
lock
lods
lahf
add
push
fldcw
mov
loopne
das
mov
scas
stos
add
fstl
mov
rcll
jg
je
or
das
pop
mov
and
pusha
fsubrs
cmp
sub
mov
mov
push
adc
xchg
call
push
das
and
les
sub
enter
mov
cmp
imul
ljmp
rcr
and
sbb
mov
xchg
loope
push
and
push
int
scas
adc
jmp
testb
mov
mov
add
repz
mov
stc
rorl
ror
ror
add
popf
sub
call
jge
fidivl
into
shrb
mov
xchg
jge
call
cmp
xor
test
mov
xchg
mov
ljmp
jnp
cli
sub
fnsave
loopne
loop,pn
sbb
outsb
jb
mov
push
lret
jo
repz
pusha
mov
ljmp
push
aam
pop
lods
out
int3
mov
mov
sahf
and
jecxz
es
jp
repz
mov
jo
mov
xchg
pop
outsb
mov
js
jg
stc
xchg
es
dec
xor
leave
and
pusha
mov
imul
aad
das
aad
jae
and
in
and
mov
lahf
jae
repz
xchg
imul
insl
in
mov
jmp
ror
int
testl
mov
inc
rol
push
lods
clc
shlb
jl
jns
add
cmpsl
enter
cmp
xor
mov
pop
xchg
xor
test
shl
sbb
rcr
push
mov
inc
or
add
xchg
scas
lcall
jecxz
lea
sub
wbinvd
fbstp
push
adc
xchg
jne
leave
xor
mov
out
mov
jmp
sbb
call
mov
pusha
add
push
repnz
push
jnp
dec
mov
cmp
clc
pop
xchg
shll
add
inc
dec
push
sbb
push
pusha
xlat
mov
jne
jbe
cld
out
lds
cwtl
cmp
jl
fcmovnbe
jae
aas
rcrl
and
xchg
out
mov
dec
call
sub
imul
cld
jmp
stc
dec
or
push
loopne
fwait
push
xorl
push
xor
cmp
adc
dec
add
inc
push
daa
jge
sbb
cmp
enter
mov
data16
ror
fcoml
cltd
into
fstp
insl
iret
das
leave
add
ds
adc
pop
mov
mov
cmpsb
pop
inc
insb
movsb
inc
fcmovnbe
and
mov
addl
ss
xchg
scas
ja
sahf
jl
xchg
cmp
sub
jo
push
push
pop
xchg
fnstcw
dec
cwtl
or
inc
push
sub
addr16
mov
scas
inc
icebp
pop
mov
jb
fimuls
jg
loope
jae
push
out
add
add
inc
mov
add
push
inc
loope
mov
das
cmpsl
in
loope
int
mov
fs
xor
xor
sbb
push
out
clc
iret
jecxz
inc
xchg
pop
dec
pop
pop
stos
push
scas
xor
jge
or
movsl
sub
and
enter
and
pop
cltd
cs
and
dec
subb
push
jl
xor
sub
pop
mov
cmp
cmp
lcall
jae
int
fyl2x
lcall
scas
cmp
fisttps
repz
mov
lahf
jg
cli
xchg
mov
fwait
jno
sahf
push
dec
imul
or
popf
call
pop
and
mov
ret
add
pop
leave
lahf
out
addr16
pop
cmp
sbb
addr16
mov
push
push
cmpb
inc
mov
mov
cmpsl
jge
enter
or
mov
inc
ds
ljmp
xorb
stos
or
sahf
push
inc
xchg
mov
stos
out
mov
cmp
xchg
or
loopne
pop
cwtl
iret
sub
aas
xchg
cs
lds
jp
in
daa
xchg
or
jge
and
sub
and
clc
repnz
jecxz
shrl
add
mov
scas
movsb
movl
and
mov
sbb
or
mov
add
loope
pop
movsl
pop
idivb
movsb
rorb
xchg
mov
or
lea
shl
mov
sub
jno
or
or
sub
fwait
daa
sub
pop
mov
int3
loopne
clc
scas
mov
dec
and
aam
add
aad
mov
push
sub
or
inc
rcrb
xchg
lods
xchg
push
lret
clc
sbb
bnd
mov
sbb
js
or
cmp
sbb
xor
or
repnz
jmp
xor
rolb
inc
ret
or
and
inc
jbe
jg
mov
dec
ret
es
in
cmp
mov
xor
push
aam
enter
roll
stos
jns
out
fldenv
test
pop
punpckhwd
cs
inc
adc
cmp
or
dec
pushf
sub
sahf
add
inc
sbb
divb
mov
cmp
xchg
xor
mov
fidivrs
daa
jecxz
movsl
push
add
push
pop
lods
mov
out
pop
sbb
out
cmp
adc
inc
cmp
in
cli
xchg
aam
lock
lods
rorb
mov
lods
mov
mov
sbb
cwtl
fcmove
fisubs
mov
xchg
repnz
mov
clc
jge
mov
mov
mov
push
pop
nop
adc
sub
or
jbe
adc
and
pop
push
jp
xchg
int
repnz
mov
lock
fiaddl
sbb
sahf
hlt
mov
cmpsl
js
stos
sti
mov
bnd
inc
dec
mov
xchg
std
repz
push
jne
jbe
xor
test
dec
out
in
sti
scas
cmp
and
pop
push
and
call
and
mov
imul
aam
push
sbb
rcrb
arpl
fs
int3
push
mov
mov
leave
mov
jno
adc
push
dec
out
mov
das
ds
loopne
mov
in
out
jae,pn
in
movsl
inc
mov
mov
movsl
lds
fdivrs
sahf
ss
xchg
cmp
sbb
push
pop
out
jae
daa
push
mov
inc
ss
or
pop
stos
ljmp
pop
inc
jg
adc
inc
mov
xchg
repnz
mov
gs
lea
jne
jns
push
fadd
fldl
xor
arpl
test
xchg
fadds
leave
inc
int
fstpt
lock
ficomps
push
stc
fsubr
subb
adc
insl
fistps
mov
jno
mov
push
cmp
mov
das
addr16
stos
and
fstl
cld
clc
ds
movsl
mov
mov
push
dec
loop
add
clc
mov
lret
add
mov
sbb
cld
cmp
cmp
imul
xchg
jle
or
stc
test
inc
sbb
push
bound
les
xlat
mov
dec
test
xor
pop
fcmovnbe
cwtl
je
aad
aas
and
stos
stc
fistpll
daa
push
xor
cli
dec
or
xor
sub
mov
fidivrs
lods
pop
push
mov
dec
xchg
mov
scas
and
fidivl
sbb
sahf
sub
or
jmp
mov
cmpsl
test
cld
lcall
movsb
push
sbb
push
fs
or
outsb
cs
stc
gs
in
and
mov
or
rcr
mov
scas
push
adc
js
sbb
jb
xor
cmp
pop
shlb
or
dec
lds
test
or
jns
lock
out
das
repz
sbb
mov
jne
sub
adc
aas
lea
cmp
cmpsb
lcall
fbld
out
mov
cmp
jnp
sbb
movsb
repz
sti
int3
inc
push
cli
push
or
xchg
mov
push
ss
mov
xchg
mov
pop
inc
pop
mov
dec
jecxz
jle
pop
gs
xchg
outsl
aas
addr16
dec
pop
push
addr16
sbb
loop
or
addr16
sbb
xor
mov
test
mov
xchg
mov
push
cmp
or
mov
mov
fucompp
dec
loope
mov
fnstsw
rorl
bound
push
int3
inc
xlat
aas
lret
cmp
rclb
or
pusha
and
out
adc
sub
fcmovbe
xor
dec
mov
lea
call
mov
lcall
jg
pusha
cmp
pop
sbb
push
or
cmc
lods
jbe
bound
add
repz
sbb
mov
lods
icebp
cmp
es
sbb
adc
lret
data16
dec
jo
mov
aad
pop
rcrb
inc
mov
outsb
mulb
inc
mov
fstpt
out
dec
ret
xchg
adc
inc
xor
cwtl
push
fs
pushf
icebp
enter
arpl
pop
add
add
push
std
mov
fstpt
mov
mov
sbb
std
out
sarb
inc
xchg
push
inc
fcompp
lahf
mov
sbbb
mov
xchg
pushf
orl
dec
adc
fs
jnp
adc
xchg
lods
jle
in
out
xor
jl
imul
xor
aad
and
xchg
scas
mov
in
hlt
inc
sbbb
imul
cmc
addl
pop
mov
xor
daa
out
loop
cltd
lcall
push
shrl
sub
outsl
fsubrp
ret
testb
cmp
push
xlat
sbb
and
or
inc
mov
std
fwait
aad
and
lret
popf
xor
cmp
or
xchg
or
push
mov
adc
icebp
cmp
in
jmp
mov
xchg
push
in
xchg
push
enter
mov
sbb
inc
cli
pop
dec
ljmp
sbb
pop
scas
incl
xchg
pop
xlat
into
fidivs
xchg
add
lea
nop
push
and
or
shl
insb
xchg
frstor
enter
adc
ja
inc
ret
je
add
lock
xchg
arpl
jecxz
scas
lock
aad
sub
xor
mov
nop
daa
ja
ss
mov
leave
loopne
cmpb
and
mov
mov
shll
push
iret
in
inc
ret
jp
mov
mov
mov
xor
add
mov
imul
mov
xor
add
mov
mov
mov
mov
xor
xor
add
adc
lea
xor
xor
xor
mov
add
adc
xor
xor
cmp
jne
cmp
jne
mov
pop
pop
pop
leave
ret
push
mov
push
sub
movl
mov
movsbl
or
mov
sub
sub
mov
xor
mov
sbbl
xor
movl
cmp
movl
jne
xorl
mov
andl
push
mov
xorl
add
mov
and
mov
mov
add
mov
xor
add
cmp
pop
je
mov
jmp
mov
xor
add
leave
ret
push
mov
sub
subl
push
push
push
lea
push
lea
adcl
jmp
outsl
or
or
jnp
and
dec
pop
jp
ljmp
pusha
inc
rcrl
in
out
fldenv
push
daa
lods
dec
mov
testb
fildl
push
mov
xchg
bswap
hlt
cld
mov
ss
icebp
lahf
fcmovne
aaa
mov
in
jns
add
mov
mov
hlt
loop
rcr
push
shll
repnz
out
in
push
pop
push
ljmp
xor
lcall
sub
push
ret
imul
mov
push
cmp
addr16
or
shll
jne
mov
xchg
aas
lahf
stc
clc
sarl
out
in
mov
sti
ljmp
stos
cmp
js
mov
adc
mov
push
xchg
loope
clc
lcall
jge
mov
rcl
add
icebp
push
push
xor
pop
push
popa
mov
ss
pusha
movl
xchg
fstpt
or
aad
fmuls
loopne
sti
lods
xor
lret
mov
jl
icebp
js
adc
push
test
xor
negl
and
hlt
shll
mov
push
popf
pop
jae
xchg
imul
add
sbb
inc
push
pop
jne
into
and
pop
push
mov
dec
or
addb
mov
mov
sti
sub
cmp
lds
push
bound
fs
sub
and
pop
jp
dec
dec
mov
lret
int3
lret
scas
lods
pushf
add
xor
popa
mov
loop
inc
pop
js
add
insb
push
fisubrs
popa
fwait
jecxz
ljmp
popa
fsubs
inc
pop
or
jle
mov
inc
jnp
mov
xchg
mov
dec
stc
cld
data16
cltd
out
pop
bound
aad
arpl
sti
cltd
mov
add
cmp
mov
xor
mov
xlat
mov
add
cs
lcall
cmp
inc
and
pushf
push
sub
jnp
shrl
push
xchg
in
pop
loop
imul
out
sub
pinsrw
add
cmp
adc
in
mov
pop
clc
cltd
mov
sbb
add
scas
mov
xchg
outsb
xchg
jp
lods
or
ljmp
jge
cmp
mov
ficomps
pop
hlt
or
ljmp
push
in
dec
jg
pop
cmpsl
orb
adc
mov
push
push
dec
sub
inc
shr
daa
js
xchg
rcrb
pop
test
adc
add
fdivrp
outsb
stc
into
dec
xor
stos
cmc
cmp
mov
outsl
fdivs
enter
rolb
shr
out
scas
jne
cmp
or
add
mov
push
aam
dec
es
mov
into
dec
cmp
sub
leave
lcall
out
mov
enter
xor
or
lcall
shrb
ja
pop
rorb
das
adc
pusha
or
dec
push
clc
mov
out
cmp
sub
lea
sbb
mov
mov
lock
xlat
xchg
cmp
sahf
frndint
xchg
cmp
std
adc
push
adc
pop
push
fstl
mov
mov
aam
adc
sarb
js
dec
sub
adc
cld
cmp
sbb
int
push
rorl
add
shl
lock
pop
dec
pop
xchg
roll
movzwl
mov
cmp
mov
in
xlat
andb
test
mov
mov
sbb
jns
ss
inc
scas
ud1
mov
sub
movsl
push
mov
lret
cmp
dec
pop
pop
ret
sub
mov
sub
loop
fsubrl
sbb
adc
pop
dec
sub
adc
cmc
mov
in
incb
lds
arpl
mov
ss
mov
lods
push
lods
pop
dec
inc
push
mov
or
sbb
aas
imul
scas
leave
adc
push
ret
jmp
in
js
jo
out
mov
or
and
pop
loope
pushf
pop
out
lret
ss
aad
inc
icebp
xor
mov
pop
in
les
ror
ds
pushf
jno
adc
fwait
cmpsb
sub
loopne
gs
pop
ljmp
push
lcall
inc
sbb
mov
mov
pop
xor
push
inc
outsl
mov
dec
in
add
mov
rorl
and
pop
and
lods
mov
or
loop
cld
mov
fsubl
test
xchg
dec
cs
dec
mov
popa
mov
cmp
dec
pop
add
test
scas
push
mov
std
push
add
push
mov
xchg
sub
jnp
repnz
cmpsb
push
jnp
sub
clc
loop
je
stos
add
mov
jnp
pop
mov
lret
into
sarb
imul
xor
pop
mov
rorl
jne
inc
mov
sub
repz
add
and
fwait
jg
push
dec
xchg
fstpl
das
fdivrs
jbe
lahf
mov
in
jbe
es
cmp
fsubs
fdivr
dec
cmc
xor
mov
mov
jae
add
int3
jne
adc
mov
stos
leave
jmp
cmp
or
sub
mov
jmp
fsubl
out
stos
pop
bound
jg
xchg
clc
pop
aas
dec
test
xor
insl
das
mov
sub
je
aad
mov
jnp
pop
xchg
pop
fwait
mov
cmp
inc
inc
mov
dec
aas
in
and
push
sub
fdivs
mov
fstps
lds
repz
dec
leave
ret
sbb
mov
out
mov
stos
mov
xchg
jle
mov
pop
or
adc
out
add
dec
ds
idivl
push
cmp
lret
sbb
dec
pop
xlat
cmp
xchg
push
adc
fisubrs
enter
orl
pop
cmp
push
cltd
test
popf
out
inc
sub
adc
lret
movsb
mov
mov
mov
jne
js
xor
xor
cmp
mov
sub
dec
pop
out
sub
test
lods
cmpsb
mov
mov
js
cld
jl
or
jne
xchg
jns
out
sub
add
mov
cmpsb
xor
mov
sbb
repz
push
jns
fucomip
cmp
inc
rcl
lcall
inc
mov
lret
xor
dec
mov
scas
or
mov
push
call
repz
repnz
mov
mov
and
dec
cmp
jp
jno
jne
push
lds
hlt
cmp
jnp
sub
inc
mov
mov
nop
into
push
bound
sbb
pop
rcll
pop
or
inc
lea
cld
fimuls
sbb
loop
xchg
cld
loope
dec
sahf
insb
arpl
adc
test
mov
mov
fbstp
decl
jge
imul
rcrl
pop
add
fnsave
into
and
hlt
sub
sahf
int3
imul
leave
sub
mov
aam
sub
mov
add
repz
ds
fcoml
fwait
outsl
lods
mov
jbe
adc
xor
pop
enter
cmpsb
xchg
cmpsb
or
cli
or
bound
sahf
icebp
xchg
mov
cmpsb
push
adc
or
inc
inc
out
mov
mov
insb
outsb
repnz
negb
sub
push
cli
jae
lods
lea
clc
dec
popa
dec
jecxz
sar
mov
imul
hlt
mov
mov
test
mov
jge
lcall
and
nop
sahf
dec
out
inc
into
loope
pop
xchg
push
inc
jnp
fwait
xor
jae
cmpsb
adc
fwait
push
adc
adc
or
inc
sar
or
addr16
add
fucom
bound
push
inc
adc
into
sub
inc
mov
aas
mov
inc
icebp
mov
xor
lret
xor
fistpl
push
or
mov
psllw
push
hlt
sbb
bound
sbb
and
mov
iret
in
aas
es
iret
inc
mov
outsb
mov
adc
icebp
sbb
mov
scas
cli
inc
popa
in
hlt
fmulp
add
cld
dec
jb
lret
cmc
nop
pop
mov
push
adc
test
ret
pop
rcll
jae
mov
out
push
mov
js
dec
xchg
lods
out
cmp
and
int3
pop
iret
cmp
and
fisttpl
cmp
repnz
insb
sbb
pop
or
repz
inc
outsb
pop
fadds
fcompl
or
push
push
or
xchg
adc
jo
pop
fwait
inc
imul
test
sub
cmp
cmp
cmp
cmp
mov
pop
mov
insb
out
filds
in
jbe
jmp
ds
out
or
sbb
aaa
mov
push
cmp
mov
cwtl
int
xor
lahf
hlt
mov
add
mov
shl
mov
and
in
call
xchg
pop
outsl
adc
cs
fmuls
add
popa
outsb
xchg
lea
fistps
test
addr16
movsb
out
inc
pop
shr
ds
add
xchg
lods
mov
add
jbe
mov
ja
push
testb
lds
aas
loop
jecxz
or
fcompl
hlt
jmp
pop
addr16
dec
sti
das
mov
mov
dec
std
movsb
ror
mov
cwtl
add
int
cmpsl
push
lret
lahf
mov
vmovaps
mov
lret
hlt
inc
popf
in
enter
mov
cli
fisttps
jb
add
xor
js
cmp
dec
cmpl
stos
lods
jbe
into
icebp
dec
movsl
lock
shrl
mov
inc
cltd
dec
insb
cwtl
test
pop
std
push
sub
cmpsb
or
into
xchg
daa
stos
fidivs
fs
mov
leave
fmull
call
mov
xlat
bound
shll
mov
cmp
push
xorl
push
mov
dec
popf
cmp
int3
sbb
aas
xchg
ret
dec
add
lret
call
mov
add
movsb
inc
out
pop
push
dec
add
ret
cmp
sub
or
mulb
and
xchg
ret
into
jb
adc
aam
in
pop
and
notl
mulb
movsb
pop
mov
pop
testl
lds
loopne
aaa
cmc
pusha
mov
in
mov
pusha
shlb
pushf
ljmp
sarb
test
dec
and
subl
push
gs
xor
inc
or
repnz
repnz
sub
mov
push
loop
push
aam
inc
data16
inc
lods
jbe
cmp
jnp
das
int3
cli
mov
jge
cmpsl
lahf
stc
pop
adc
adc
sbbb
mov
lret
xchg
gs
pop
xor
and
pusha
ret
daa
cmpsb
jb
pop
pusha
daa
inc
jo
hlt
mov
ret
in
lods
mov
xchg
xchg
mov
pop
pushf
mov
out
rclb
test
adc
push
call
push
pusha
inc
int
arpl
popf
adc
jnp
inc
xchg
sbb
sbb
mov
xor
lds
fs
pop
jne
cmp
sub
and
xor
cmp
call
or
out
cmpsl
out
aam
xchg
push
loopne
dec
xchg
jb
cmp
mov
mov
into
adc
daa
mov
cmp
add
and
mov
dec
push
in
cmpsb
adc
adc
inc
cs
rclb
cld
mov
test
jnp
ljmp
bound
clc
xor
mov
das
pushf
inc
sub
fsin
add
lods
loopne
cmc
and
xlat
sub
jbe
jbe
aaa
sbb
cmc
shll
aam
scas
outsb
inc
dec
inc
shlb
es
lock
xor
add
lea
xchg
mov
mov
add
testb
ljmp
xchg
add
mov
pop
jno
ret
pop
jmp
push
cwtl
lret
jge
roll
mov
add
mov
daa
aad
pop
cmp
fiaddl
fists
xlat
hlt
cld
scas
cmpl
mov
jbe
jne
jl
clc
lret
stos
sbb
and
sbb
fsubrs
movsbl
jg
push
mov
cmp
jbe
xchg
shlb
int
mov
leave
sti
idiv
inc
mov
fisubs
fdivrl
nop
cwtl
mov
lea
sub
pop
pop
add
mov
dec
and
push
dec
sub
sahf
adc
aam
xor
mov
test
stos
cmp
fistpll
test
pop
xchg
lret
sub
adc
sub
int3
ja
rcrl
insl
sbb
push
xchg
es
insb
pop
adc
jno
insb
sarb
shr
jo
out
mov
inc
add
mov
push
and
or
and
adc
inc
jmp
ret
pop
iret
or
adc
jb
mov
jno
jmp
xchg
sbb
js
push
es
mov
jl
xor
pop
scas
outsl
notl
dec
or
lods
pop
inc
jns
addb
in
cld
mov
jne
inc
test
int
cmp
out
out
mov
fnstcw
cmpl
xchg
fwait
mov
mov
data16
test
nopl
insl
adc
js
jge
pushf
and
xchg
xabort
popaw
outsb
outsb
mov
out
jne
popa
cmp
dec
push
aad
std
pop
add
push
push
cmpsb
pusha
xchg
lret
sarl
loopne
push
cli
lahf
push
jbe
dec
push
aad
adc
sub
ss
mov
add
and
ffree
movsl
sti
rcrl
push
loopne
dec
movsl
xchg
cmpsl
popf
sub
or
cmpsb
jg
pop
fidivrl
repz
imul
fldl
inc
jmp
in
jg
sahf
mov
in
sbb
adc
lods
jns
fdivl
fidivrl
xor
das
mov
loopne
add
scas
jp
les
add
ret
pop
test
pusha
cwtl
pop
out
adc
movsb
push
sbb
or
mov
push
fimuls
mov
jbe
push
sub
xor
mov
push
jae
sbb
test
mov
aaa
outsb
mov
xchg
jnp
out
dec
xor
dec
movsl
fsubrl
mov
ljmp
fistpl
xchg
sub
shll
lcall
inc
jmp
push
mov
ss
mov
js
xchg
adc
loope
cmpsb
test
fistpll
into
loope
pop
adc
aam
mov
sbb
loopne
push
and
xchg
out
mov
lds
hlt
adc
icebp
imul
sahf
mov
scas
in
outsl
jp
and
cmp
xchg
lahf
cltd
ljmp
lret
pop
add
push
inc
push
or
jns
dec
xor
outsl
jg
xchg
dec
push
icebp
icebp
adc
adc
adc
adc
xchg
jbe
iret
cmp
sbb
push
ja
sbb
dec
mov
inc
lcall
inc
sub
mov
test
sbb
repnz
push
call
cmp
repnz
xor
imul
rcr
fwait
adc
sub
sbb
pop
xor
xchg
mov
inc
fwait
sub
stc
jecxz
dec
mov
push
loopne
xor
mov
or
rcrb
mov
jbe
and
mov
lds
cltd
insl
mov
adc
out
outsl
testl
and
stos
xchg
xor
mov
xchg
inc
mov
push
jne
and
popf
push
cmpsb
fstpl
sbb
sub
dec
and
arpl
daa
jno
jg
das
sub
add
rcrl
inc
inc
subb
inc
enter
push
pushf
out
stc
loop
xor
in
sti
push
jmp
test
sub
lea
add
lret
movsb
and
sbb
aaa
bound
sarb
lahf
ds
and
mov
incl
and
push
dec
out
inc
mov
xor
xor
inc
and
loopne
push
lods
cmp
or
jmp
push
test
cmp
imul
mov
mov
push
and
and
shl
mull
add
dec
adc
mov
test
out
sbb
out
cmc
fwait
call
mov
sbb
movsb
or
inc
sti
adc
push
push
mov
cs
dec
jl
inc
or
test
jae
and
fsubl
aaa
inc
jns
mov
dec
jae
xchg
popa
ds
imul
xorl
test
push
je
mov
std
test
xchg
aad
mov
cmc
adc
sbb
mov
and
mov
scas
insl
mov
outsl
pop
dec
pop
out
jp
jne
sbb
repnz
das
xor
pop
rorb
out
xorb
sar
inc
shlb
insl
sub
cmpsl
push
mov
call
int
push
out
stc
clc
mov
add
aas
dec
add
cs
or
lods
jne
insb
ja
lock
jne
xor
inc
add
mov
or
and
std
adc
push
pop
ss
dec
es
cltd
repnz
cmp
js
adc
addl
mov
cmp
or
inc
mull
aam
cwtl
cltd
fisttpll
or
xchg
xlat
push
jne
aad
aam
pop
add
bound
jne
idivb
xor
js
sbb
mov
lret
repz
aas
sub
mov
lahf
in
gs
mov
inc
outsl
lret
lret
mov
aas
ret
pusha
aas
mov
lret
sbb
xchg
mov
dec
movhps
insb
enter
lret
dec
fsub
jno
pop
sbb
cmp
in
loope
cmp
add
push
or
aas
fiaddl
sub
cmp
mov
mov
ljmp
inc
cmp
pushf
sbb
scas
outsl
adc
jno
mov
ret
pop
aas
ljmp
mov
shrb
push
ljmp
dec
js
int3
jb
enter
outsl
mov
pop
mov
jmp
pushf
nopl
movsl
lret
inc
inc
pop
mov
mov
xchg
mov
push
adc
jae
ret
call
mov
rorb
cs
mov
nop
mov
pop
pop
mov
push
cmp
mov
pop
ljmp
bound
mov
scas
mov
nop
ljmp
movhps
lret
mov
cmp
sub
or
fs
clc
sub
dec
cmp
cmp
ds
and
repz
push
xor
jns
aas
xrelease
mov
sbb
push
xchg
aaa
or
add
inc
push
int3
sub
push
test
dec
fmull
popf
cmp
cmp
jae
jae
cmp
and
stos
mov
mov
fdivrl
shrb
add
adc
rep
push
lret
insl
lahf
lods
cmp
shll
repnz
mov
out
aam
mov
sbb
push
mov
xor
call
push
xchg
push
sub
ja
movsb
mov
fcmovnbe
jb
xor
rol
popa
inc
pop
stos
daa
mov
inc
xor
pop
add
lret
or
les
mov
cmc
sbb
pop
adc
adcb
jb
pop
sub
xor
sbb
cltd
jmp
dec
xchg
int3
lods
xchg
and
cmp
daa
cmc
and
dec
pop
mov
stos
add
mov
inc
or
movsb
push
dec
lcall
bound
fsubs
mov
out
jg
mov
dec
sbb
or
jmp
mov
out
adc
pop
scas
fcoms
popa
cltd
adcl
and
jne
dec
mov
dec
push
or
lea
xlat
popf
inc
sub
sbb
mov
inc
shrb
cmp
sub
mov
stos
mov
xor
mov
ja
mov
sub
or
pop
push
add
fcoml
or
inc
imulb
mov
shl
push
push
icebp
notl
movsb
add
inc
loope
inc
pop
clc
or
push
jmp
add
daa
xor
outsl
imul
idivb
sub
test
ret
sub
fwait
cmpsb
adc
mov
fnstenv
jmp
lods
scas
sbb
mull
cmp
sahf
mov
cmp
xor
repnz
pusha
xchg
sub
test
add
push
gs
cld
pop
or
push
mov
cmc
and
pop
rolb
jmp
aas
xor
push
xor
inc
inc
cmp
sbb
mov
mov
call
loop
xor
mov
mov
jmp
les
inc
jle
lahf
aad
ds
enter
push
fwait
inc
mov
fprem
cs
ljmp
ficoml
je
fdivrl
xchg
xor
filds
repz
fdivrs
fsub
fsubrp
sbb
sbb
loop
ret
xchg
pop
testl
cmp
pop
cmp
nop
fdivrl
xchg
xchg
dec
popa
sbb
rol
pop
in
or
mov
mov
sbb
rolb
data16
and
push
dec
and
iret
sbb
scas
je
outsl
inc
xchg
xchg
les
adc
push
addr16
neg
cmp
and
out
push
outsl
push
lods
jle
negl
adc
test
mov
cmpl
out
loop
sbb
in
mov
add
jno
or
fwait
push
repnz
cmp
mov
inc
aam
andb
mov
jb
mov
jb
add
mov
hlt
cs
jecxz
push
pop
ret
enter
std
lahf
mov
sub
leave
add
mov
stos
cmp
outsb
outsl
mov
push
ja
dec
pushf
xchg
daa
popl
sahf
lock
cmpsb
cmp
popa
scas
ja
jge
or
add
sbb
jmp
jo
xchg
adc
pop
shrb
xor
add
sub
mov
jb
jmp
jmp
mov
cmp
sbb
pushf
xlat
mov
clc
mov
xchg
sub
fwait
jno
test
mov
lcall
mov
loope
in
nop
stos
sbb
jnp
push
or
fs
jmp
mov
inc
scas
and
bnd
push
sahf
sub
call
jle
jbe
lret
sub
faddl
mov
and
fiadds
jne
push
daa
xchg
mov
mov
fadd
outsb
and
cwtl
loope
bnd
lods
ljmp
or
pop
cmc
loope
imul
adc
pop
shll
mov
fnstenv
out
or
in
xor
jl
cmp
insl
xchg
mov
dec
push
and
stos
ja
daa
mov
lods
addb
xor
pusha
iret
mov
lret
xchg
loop
in
lret
cmpl
pop
mov
insb
mov
sub
adc
int3
sbb
push
lods
outsb
call
in
sbb
mov
adc
popf
xor
pop
or
mov
movsb
scas
or
enter
lcall
aaa
in
and
dec
ret
fstpt
nop
lcall
inc
xor
inc
xchg
or
adc
repnz
xor
addr16
sub
dec
mov
sub
mov
insl
aas
jg
push
ljmp
mov
test
sahf
test
adc
sub
adc
and
jnp
dec
and
xor
push
shll
pushf
lahf
push
insl
leave
das
mov
add
imul
insb
int3
gs
ret
sti
mov
in
xlat
sub
lret
jno
fucomip
mov
orl
iret
sub
push
xchg
cmpsl
in
xor
test
xchg
ja
aad
enter
fwait
and
add
lret
dec
push
mov
jae
lret
frstor
cmp
pop
ds
push
or
xor
and
iret
ljmp
mov
jge
push
sbb
cmp
or
mov
mov
lea
cmp
mov
insl
insl
jno
ror
pop
push
rcr
dec
sar
imul
cmpsl
pop
and
add
xor
movsb
fdivr
ficomps
jle
and
in
push
mov
push
mov
subb
mov
popf
in
cli
dec
cmp
cwtl
out
cmpsl
and
repz
xor
jl
cmp
jbe
mov
icebp
jge
mov
inc
or
push
mov
outsb
enter
and
mov
call
cmp
jmp
mov
xchg
xchg
cmp
cmp
mov
dec
fsts
shr
pop
cmpl
lods
pop
adc
aam
sub
icebp
jge
lods
fcmovb
push
ja
dec
sub
xchg
lods
xchg
or
sub
xlat
xor
lahf
mov
fnstsw
iret
sti
in
fsubs
inc
data16
xchg
inc
gs
adc
loop
nop
sub
sub
pusha
lock
lods
pop
xor
es
xchg
jl
pusha
sub
jbe
xor
sahf
xchg
and
mov
sbb
out
pop
ljmp
test
mov
cmpsl
xorl
mov
stc
daa
scas
xchg
lock
out
fs
mov
sahf
cmpsb
dec
adc
enter
in
push
jl
jb
cmpsl
mov
or
xor
cmpsb
insb
or
dec
fstpt
mov
or
nop
push
pop
icebp
mov
pop
clc
fnstenv
mov
lahf
dec
jo
jne
xchg
mov
shrb
mov
dec
in
seto
mov
pop
inc
lret
js
movsb
cmp
cmp
mov
insb
sbb
inc
dec
push
mov
sbbl
dec
xor
insl
in
xor
xlat
orl
arpl
and
push
xor
push
mov
sbb
mov
dec
push
or
jge
adc
loop
jge
jns
add
imul
and
adc
insl
push
or
adc
sbb
insb
pop
ljmp
insl
sahf
cmp
int3
add
pushf
out
out
pushf
xchg
jl
test
pop
aad
or
jp
cmp
loope
xchg
ss
pushf
call
mov
fsubrs
inc
nop
test
add
jg
mov
aas
inc
mov
inc
mov
es
fists
mov
add
adc
les
mov
xchg
or
aas
icebp
out
movsb
cmpsl
cltd
insl
out
pushf
and
adc
dec
hlt
lods
and
or
sbb
xor
nop
push
clc
dec
loopne
bound
dec
and
mov
iret
hlt
lahf
inc
push
xchg
push
cmp
sahf
icebp
shrl
and
xchg
pop
mov
mov
cmp
push
test
xor
fwait
inc
or
xorl
push
adc
mov
mov
mov
into
outsb
sub
jge
adc
fbstp
jl
sub
lea
cmp
adc
mov
mov
cwtl
push
shlb
cmpsl
inc
add
inc
adc
mov
pushf
nop
mov
pop
sbb
out
lcall
in
es
xor
outsl
xchg
mov
mov
push
lret
ror
jae
loopne
hlt
dec
test
mov
aas
dec
pop
ficoml
pop
ret
mull
mov
mov
stos
imul
mov
ficoms
or
mov
lret
add
and
adc
addr16
xchg
or
mov
cmc
bound
jae
sarl
cs
mov
fnstcw
or
and
mov
mov
fcompl
outsl
add
and
jno
daa
or
dec
add
lret
push
xchg
mov
lea
ret
dec
aad
sti
mov
cmp
mov
enter
addr16
adc
outsb
mov
sbb
mov
mov
sub
jg
mov
inc
mov
mov
cmp
loop
or
lods
jg
dec
xor
or
bound
sub
xor
sub
add
fidivl
mov
popf
ret
dec
ret
movsb
jge
mov
lret
data16
rcr
xchg
daa
push
xchg
in
movsb
jg
or
push
or
test
int3
jne
or
lcall
xchg
inc
push
mov
shrb
fisttps
xor
clc
scas
out
xor
sbb
cli
jecxz
and
mov
sub
leave
mov
clc
push
or
sbb
push
dec
push
loope
filds
ret
scas
mov
push
push
icebp
xchg
scas
fldenv
ja
and
fdiv
xchg
xchg
leave
rolb
xor
mov
stc
pop
mov
or
loope
mov
lea
xor
xchg
cli
sub
jae
in
jle
add
lock
sbb
xchg
rolb
sbb
xor
leave
ret
and
insb
bnd
mov
sbbb
leave
aad
jo
mov
push
sub
subb
pop
adc
ds
jne
je
movsb
shrl
call
mov
ret
das
js
bound
and
in
mov
xchg
and
or
push
sub
push
cmovb
mov
in
pop
icebp
xchg
mov
in
loopne
lods
test
mov
mov
rcll
cwtl
adc
xchg
xchg
in
das
push
lcall
cmp
adc
loopne
sbb
imull
or
cwtl
lock
adc
into
and
movsb
mov
fdivrs
pop
gs
lret
sub
and
pop
mov
mov
mov
pop
lahf
nop
js
stc
rol
xchg
push
in
sti
test
mov
cmpsl
push
xor
lahf
dec
and
test
and
sub
jmp
shll
js
mov
andb
mov
dec
dec
fiaddl
mov
test
jbe
icebp
push
or
fisubl
cmp
in
imul
xor
incl
fs
ds
shlb
jno
mov
scas
xchg
rcll
call
adc
adc
jnp
mov
ss
inc
mov
xlat
out
cmp
repnz
pop
xchg
lret
xchg
cwtl
adc
inc
sbb
push
push
pop
les
aam
mov
test
or
out
dec
push
sbb
jnp
add
adc
addr16
call
inc
or
jns
dec
insb
sar
xchg
ja
or
cmp
out
pusha
mov
lea
in
jl
sbb
popa
aaa
push
jle
cmp
push
mov
pop
pop
and
shlb
setp
fcomps
inc
inc
sub
inc
dec
mov
jno
scas
outsl
loopne
xchg
rolb
lods
sbb
dec
jle
jae
es
out
inc
dec
fildll
or
dec
jb
cmp
xor
icebp
push
cli
ficoms
and
xchg
pop
add
call
notl
push
push
xorl
push
andl
call
sbb
movl
movl
mov
mov
inc
xor
movl
cmpl
je
cmpl
jne
push
push
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
sbbl
mov
add
mov
sbb
mov
test
movl
je
movzwl
sub
mov
movl
mov
mov
mov
xor
imul
mov
mov
sub
and
mov
add
xchg
andl
mov
inc
mov
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
sub
mov
sub
xor
andl
mov
inc
mov
cmpl
jne
push
push
push
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
jmp
mov
jnp
mov
sbb
js
push
mov
pop
jp
mov
jnp
mov
in
pop
xor
dec
jne
fucomp
adc
push
insl
add
es
xor
push
cmp
aas
inc
hlt
int3
into
mov
outsb
xchg
mov
aaa
mov
das
push
push
add
add
pop
mov
push
pop
push
sbb
cmp
das
insl
lea
loop
xlat
and
and
pusha
mov
ds
je
jge
mov
dec
mov
int
jl
adc
sbb
test
sub
sub
lea
pop
dec
adcl
push
add
or
js
or
or
dec
push
andb
popf
iret
jge
mov
adc
cmp
sti
push
add
cmp
xchg
scas
mov
test
cs
sub
mov
fistl
jg
popa
cmp
lock
mov
push
mov
xor
hlt
sub
test
repz
aas
cmpsl
jle
hlt
loop
in
xor
sbb
std
loope
pop
xchg
sbb
addr16
mov
lods
repz
out
push
xchg
loop
xchg
cmpsb
jecxz
maxps
pop
addl
xchg
adc
jns
xchg
xor
data16
adc
cli
pop
pop
ljmp
scas
mov
ja
dec
movsb
xchg
inc
lcall
push
neg
lods
scas
fdivrl
popa
arpl
sbb
pop
adc
pop
sub
pop
in
push
repnz
cmovl
fiaddl
dec
jne
rorb
scas
sti
idiv
cli
adc
mov
adcb
adc
lahf
sbb
jb
mov
adc
lret
mov
sbbb
imul
xlat
push
push
mov
cmp
jbe
mov
cmpsb
xchg
popa
imul
ret
insl
xchg
imul
and
in
add
sub
fdivl
int3
cmpsl
leave
add
out
jne
xor
repnz
aam
push
mov
pop
pop
shll
mov
pmullw
nop
jmp
mov
push
iret
clc
jb
stos
es
lds
out
pusha
lahf
test
test
addr16
shrl
mov
imul
das
and
aad
mov
jp
inc
jmp
enter
adc
jae
in
xchg
dec
test
xlat
mov
sub
mov
dec
push
in
xor
iret
scas
lret
mov
mov
sub
lret
jno
fucomip
cmpb
insb
dec
pop
lods
stos
mov
mov
and
sub
test
ret
inc
add
lods
scas
pop
xchg
movsl
add
addr16
test
lret
scas
imul
jae
dec
xor
mov
bound
ss
ret
mov
mov
pop
push
sub
insl
stos
mov
and
jbe
aad
dec
fwait
or
pushf
loopne
pop
fcmovnb
sbb
push
push
pop
lcall
pushf
jl
mov
or
std
inc
mov
addr16
jle
pop
subl
roll
or
rcrl
and
adc
sarl
fiaddl
mov
adc
andl
inc
jns
ds
sbb
clc
pushf
push
or
mov
sbb
sbb
mov
cwtl
sti
pop
push
insb
push
jbe
out
test
aad
sbb
stc
rcll
movsb
js
sub
dec
imul
xchg
mov
movsl
sbb
xchg
int
repnz
fwait
test
dec
xchg
cs
in
or
dec
sahf
int3
jecxz
test
jle
fcmovnu
pushf
cmpsb
xchg
insl
gs
mov
jne
rcrl
rclb
mov
imul
fisttpll
fucomp
ficompl
push
lea
sub
jns
shll
push
xchg
pop
or
sub
lret
xor
add
test
cmp
out
cmc
call
das
popa
inc
mov
fs
clc
gs
lret
xchg
in
sbb
outsl
cmp
and
insb
repnz
or
jle
xchg
test
adc
inc
loop
sub
sbb
push
push
iret
pop
leave
scas
xor
mov
jge
xor
nop
dec
into
cwtl
fistps
popl
lods
scas
in
jbe
and
fsubr
mov
icebp
mov
bound
xor
dec
jp
dec
sbb
jp
into
mov
lahf
and
leave
test
inc
xchg
sahf
add
xchg
add
shrl
sahf
sub
fcoms
loop
roll
pusha
cmp
out
mov
sub
stos
push
repnz
fwait
jnp
fsub
mov
add
mov
iret
dec
stos
xchg
and
jmp
fnstsw
out
popa
jbe
cs
sbb
movsl
testb
add
pop
cmp
push
jecxz
and
data16
pop
rcrb
pop
xor
sub
cmpb
test
mov
dec
inc
xlat
adc
adc
pusha
arpl
xchg
ja
dec
sti
test
daa
sub
mov
sbb
push
test
aam
scas
sub
lret
mov
std
adc
pop
xchg
adc
gs
mov
cmp
lds
pop
adc
and
jle
cmpsl
sbb
out
inc
inc
sbb
imul
test
int
dec
imull
cmp
mov
cmp
test
out
or
test
inc
in
or
in
imul
aas
out
sarl
aad
lock
notb
cmp
sarl
push
adc
nop
xchg
jo
fsubl
cld
push
outsb
enter
xchg
sti
addr16
sbb
test
cmp
int3
sbb
inc
xlat
stc
jmp
add
sub
jg
aaa
cld
and
fwait
in
and
fucomp
push
xchg
xchg
jl
dec
mov
jb
ljmp
jecxz
and
jb
imul
xchg
sbb
or
pop
fs
xchg
or
pop
imul
and
xor
movsb
add
add
test
clc
cmp
cwtl
addr16
push
inc
dec
inc
inc
sbb
and
aas
mov
sub
data16
icebp
jecxz
jmp
inc
jns
mov
ljmp
jnp
xchg
in
jno
ret
mov
cmpsb
scas
push
in
outsb
sub
cmp
xchg
add
mov
test
js
mov
movsb
xchg
mov
add
scas
bound
hlt
pop
add
mov
cli
cmp
mov
and
jg
cmp
jecxz
out
inc
jmp
cmp
ljmp
mov
mov
cmc
leave
push
jno
popf
insl
push
sbb
cmpsb
mov
mov
clc
sbb
add
cmc
push
pop
or
in
js
pop
cmp
lret
lods
dec
sbb
scas
pop
dec
int
pop
adc
adc
jae
data16
adc
lahf
scas
xor
insb
pusha
stc
pop
sti
into
nop
cltd
js
pop
push
push
or
lcall
cs
and
repnz
aaa
fs
les
cld
call
addr16
shr
call
cwtl
mov
add
int
testb
add
lds
pushf
jnp
enter
scas
or
sbb
popf
jbe
jl
adc
fwait
xor
jno
int
les
xchg
adc
outsl
inc
mov
jg
adc
or
push
nop
decb
in
aas
sbb
mov
fldl
inc
sbb
cmpsb
dec
jmp
cmp
testb
movsb
lods
pop
jns
mov
push
ljmp
add
xchg
mov
imul
jmp
mov
ljmp
dec
push
movl
fmuls
popf
ret
or
jns
xlat
add
jne
aas
mov
pop
mov
inc
sub
rcrb
jp
movsb
shll
and
or
push
mov
pop
adc
jns
cwtl
testb
loope
or
mov
rolb
dec
cmc
loope
jge
and
lea
out
inc
mov
xchg
rcll
xchg
mov
sbb
pop
push
lods
sub
dec
jge
mov
xchg
mov
lea
loope
cmpsb
sub
arpl
shlb
adc
cmp
or
rcrl
lcall
mov
lret
in
aam
push
aad
mov
gs
imul
adc
pop
addr16
inc
dec
js
jg
pop
test
mov
roll
lret
into
jae
and
scas
push
inc
pusha
roll
push
sub
mov
mov
ja
pop
cli
or
mov
mov
rolb
cmp
mov
cmc
das
cmpsb
sbb
xchg
pop
arpl
mov
hlt
out
or
xchg
jns
xor
mov
nop
data16
mov
and
mov
sbb
das
xchg
adc
out
inc
pop
inc
mov
push
mov
jecxz
mov
addr16
testb
add
sub
insl
leave
in
mov
out
jb
mov
pop
mov
outsb
xchg
mov
sbb
or
aas
cmpsl
shrb
in
enter
mov
jne
xchg
xchg
jo
repz
cmp
aam
pop
adc
dec
sbb
scas
and
mov
dec
into
movl
mov
push
push
lods
cld
mov
or
ret
mov
jl
sbb
sti
cltd
out
pop
out
xor
outsl
movsb
add
jg
bound
hlt
mov
dec
repz
jl
push
and
pop
push
cs
mov
aaa
repnz
xchg
sbb
addl
sbb
mov
cmpsb
jg
mov
or
pushf
dec
mov
inc
cld
jle
data16
mov
or
sub
lret
inc
mov
inc
cmp
sarb
pop
je
data16
in
xchg
lods
pushf
pop
ss
push
jl
jns
pushf
jp
pop
push
pop
daa
xchg
outsl
cmc
fstpl
and
jo
int3
js
stos
push
mov
cmpsl
orl
cmc
jg
fidivl
shrl
sub
jno
ficomps
ds
pop
mull
pop
sbb
fucom
andb
cmc
out
scas
int3
cld
jae
mov
jne
mov
add
out
mov
add
in
add
lods
aas
jp
fisubrl
and
mov
xchg
mov
or
div
cmc
int3
sahf
and
lock
loope
xchg
negl
mov
insb
push
sbb
or
jmp
dec
out
lret
arpl
test
lret
sbb
testl
mov
movsl
mov
push
and
in
jecxz
nop
outsb
push
call
dec
xchg
mov
mov
iret
fwait
movsb
outsb
lret
pop
or
add
out
push
cmpsl
addb
ret
adc
cltd
hlt
xlat
push
mov
das
xchg
out
sbb
jo
mov
xor
jge
jle
ficoml
into
test
inc
and
inc
insl
or
dec
aad
dec
sub
in
bound
jl
iret
dec
sbb
fwait
pop
push
jmp
sbb
aad
sahf
mov
in
pop
xor
xchg
fdivr
into
sub
adc
adc
lcall
pop
and
or
add
sbb
dec
mov
xor
and
loope
jmp
outsl
fdivl
xchg
push
test
adc
hlt
mov
hlt
sbb
data16
or
sbb
sub
pop
in
push
loop
inc
lcall
stos
xchg
in
popf
enter
sbb
push
dec
out
in
jg
orb
mov
das
call
cli
addr16
bound
cmp
in
dec
sbb
adc
out
push
dec
push
jnp
pop
call
push
adc
repz
xchg
inc
loope
xor
pop
rol
sbb
in
shrl
lods
cmp
dec
dec
lea
insl
pop
add
mov
cld
daa
and
outsl
pop
mov
aas
ficomps
sub
xlat
dec
popf
fisttps
cli
xchg
xlat
out
fidivs
dec
rcrb
mov
in
xor
bswap
aas
cmp
and
fdivrl
fimull
test
inc
in
sbb
ficompl
std
sub
xchg
xchg
pushf
fwait
jle
pop
mov
add
mov
cltd
test
or
popf
in
adc
push
pop
mov
es
adc
xor
cld
je
sbb
add
inc
test
mov
cwtl
cmp
sbb
mov
dec
repnz
lret
out
jg
in
sbb
and
ss
jae
jl
push
addb
and
xor
sbbb
fs
outsl
add
insl
and
out
xor
and
ja
aam
and
aas
roll
adc
rcll
inc
mov
int3
jno
out
sub
jnp
push
cld
pusha
xor
push
fcoms
jecxz
mov
push
sbb
movsb
xor
out
jns
push
lods
je
fs
xor
adc
testl
mov
aam
or
cmp
repnz
add
mov
in
fisttpll
fnstsw
xor
ficoms
mull
mov
mov
roll
stos
gs
dec
into
adc
dec
ds
gs
adc
bound
cmp
push
jmp
insb
test
and
sub
jmp
add
cmpsb
std
sbbb
insb
shll
or
dec
sahf
ljmp
push
add
daa
inc
sbb
jmp
notl
push
and
pusha
xor
sub
test
int3
sub
data16
mov
stos
xor
mov
gs
push
sti
setae
out
movsl
xorl
or
pop
repz
repnz
clc
adc
imul
aaa
test
mov
adcl
or
test
cltd
xchg
pop
leave
push
sub
dec
in
repz
fadd
add
ds
cmpb
or
pop
cmp
fistpll
inc
mov
bound
cwtl
imul
jmp
cmc
test
call
dec
pop
sbb
rolb
es
mov
rcrl
int
push
adc
fldenv
jecxz
push
scas
jge
out
pop
outsl
aam
les
call
cmp
push
sbb
pop
pop
neg
sub
nop
mov
popa
mov
or
add
cmp
push
out
cld
aad
sbb
jno
mul
cld
in
sti
mov
push
mov
outsb
sbb
enter
ret
add
xchg
in
xor
incb
mov
jno
sub
adc
cmp
ret
mov
fwait
lea
outsw
test
sub
xchg
ja
lods
push
int
add
out
xchg
adc
add
adc
jo
ret
fmull
shrb
xchg
fdivrl
pop
jmp
cs
add
dec
and
and
xchg
fstpt
dec
scas
fcomp
aad
pop
xchg
jbe
cli
xor
sahf
and
inc
mov
and
sbb
scas
or
cld
mov
ja
push
dec
mov
jo
xchg
ret
aas
sub
addr16
fstl
or
data16
sbb
mov
jle
fiadds
aaa
push
in
push
decb
es
pop
cwtl
dec
ja
aas
lds
dec
cmp
pop
or
ss
inc
or
sbb
mov
jae
aam
mov
pusha
clc
fisubrs
add
add
xchg
repnz
and
pop
push
xchg
cltd
jecxz
ss
loopne
lcall
es
daa
xchg
repnz
test
mov
outsb
push
aaa
test
jnp
push
adc
mov
lods
xchg
jae
ret
push
dec
rcrl
stos
or
jge
xchg
testb
xor
push
scas
jmp
fs
fistpl
jg
sub
inc
aad
dec
mov
xchg
in
enter
cmpsl
mov
or
sbb
push
jl
test
mov
int3
mov
test
xor
mov
inc
xor
pop
ds
or
jbe
push
int
gs
jmp
cmp
imulb
adc
mov
xchg
hlt
stc
daa
cmp
fwait
jne
push
cwtl
xor
push
imul
mov
xchg
in
cmpsb
out
mov
idivb
mov
arpl
mov
inc
loopne
dec
mov
mov
daa
jbe
jmp
sbb
sbb
pop
xchg
repz
sub
pop
jnp
stc
lahf
push
xor
jecxz
jns
sbb
stc
addl
cltd
fisttps
pop
lods
cli
mov
jp
setl
inc
pop
movsl
xorb
std
cmovnp
clc
dec
add
mov
les
mov
jo
adc
or
cmpsl
mov
loopne
push
xchg
enter
adc
sub
jns
or
jnp
pop
or
cmp
or
mov
dec
push
outsl
mov
add
out
stos
hlt
imul
lds
fs
cmpsl
add
mov
push
mulb
xlat
nop
mov
or
and
loop
jp
mov
sbb
pop
pop
or
fwait
fwait
push
add
nop
xchg
leave
jbe
dec
std
test
imul
clc
ret
mov
or
test
fcomps
mov
out
or
outsb
sub
xchg
and
push
dec
fisubrs
adc
cmp
je
sbb
iret
mov
mov
in
lret
sub
and
sub
in
insb
imul
xchg
pushaw
and
sbb
les
repnz
aad
loop
xor
gs
gs
mov
mov
hlt
mov
loope
xorl
jl
and
pop
inc
jp
enter
push
xchg
into
pop
xchg
fimull
int3
mov
jnp,pn
pop
xor
pop
sbb
incb
lock
xchg
mov
es
inc
movsl
mov
fld
sub
pop
in
xchg
fisttps
movsl
jg
mov
aaa
popa
aam
fstl
daa
push
cltd
rcrb
push
dec
dec
sahf
frstor
push
xor
xor
mov
pop
imul
pop
ret
jns
sub
cmp
out
xchg
test
sub
xor
fs
mov
mov
mov
sbb
ja
inc
daa
jnp
lea
jno
add
push
test
cli
out
cmp
cvtpi2ps
loopne
dec
dec
movsb
filds
stc
sub
pop
add
dec
mov
pop
mov
sub
cmp
insl
insb
push
sub
cmp
mov
fwait
sub
sbb
lea
cmp
test
test
arpl
sti
lock
out
sub
push
adc
scas
cmp
pop
fdiv
test
jbe
mov
xchg
lds
lahf
cmc
push
inc
mov
pusha
mov
in
into
movsl
ss
cli
shrl
mov
test
outsl
cs
adc
cwtl
jp
dec
lahf
mov
cmp
ret
push
push
xlat
lods
sub
push
mov
mov
data16
mov
fwait
repz
test
xor
sahf
dec
push
add
pop
cmp
mov
dec
xchg
dec
or
outsl
fwait
test
jmp
lods
das
cld
sti
inc
add
out
push
movsb
cmp
in
repz
mov
cmpsb
sbb
mov
cmp
sub
mov
subl
adc
xchg
mov
jmp
into
add
pop
jo
inc
sub
movd
enter
repz
push
mov
cmp
ja
dec
ret
dec
popa
mov
sub
sub
fdiv
pop
out
or
cmpsl
mov
daa
pop
cltd
fsubs
adc
cld
stc
xchg
test
icebp
push
dec
in
loopne
mov
pop
jmp
add
decl
jbe
mov
push
cmc
or
sbb
jmp
in
ret
js
pop
add
inc
cmc
cs
divb
lds
ficoml
int3
push
xor
xchg
nop
cmp
jp
mov
inc
xchg
sub
adc
into
adc
dec
pop
xor
lock
xlat
push
cmpsl
mov
pushf
mov
or
ja
filds
sbb
dec
and
ja
inc
or
mov
fisttpl
or
leave
int
mov
cmc
sbb
xchg
add
insl
mov
orb
jge
pop
sbb
test
dec
loope
add
xchg
subb
iret
popl
mov
data16
int3
ja
ja
lods
xchg
cltd
and
mov
ljmp
lock
fwait
enter
adcl
and
jg
rcll
push
int
dec
xchg
ljmp
ja
sbb
fucom
adc
test
xor
hlt
pop
or
and
insb
push
icebp
push
stos
push
cwtl
lret
in
lds
adc
mov
dec
es
loope
int3
shll
and
push
das
and
hlt
mov
loope
js
fstpt
ljmp
pop
sbb
loopne
stc
popf
call
inc
mov
out
filds
lahf
push
in
mov
frstor
lock
std
test
pop
test
fnstenv
cli
es
iret
scas
sub
jmp
pop
cmp
in
xchg
js
or
or
jge
and
clc
cwtl
fbld
ljmp
decb
push
inc
mov
ret
xorl
mov
addr16
test
test
add
mov
jns
fs
jg
sahf
lea
stos
jle
mov
dec
int
rol
push
dec
jbe
or
aas
pop
mov
sub
mov
jo
sub
jb
mov
and
mov
xor
inc
xor
pusha
inc
iret
xor
jb
out
dec
sbb
add
out
fisubs
cmp
cmpsl
rclb
xchg
jbe
and
popa
sub
rorb
jo
sahf
shrl
mov
test
xlat
mov
insl
xchg
sub
xchg
pop
and
mov
cmc
in
adc
leave
adc
or
fistps
dec
ret
ss
sub
loope
adc
pushf
js
orl
fs
and
mov
data16
lea
std
sbb
jb
je
mov
sub
insl
cmc
lods
dec
nop
clc
xchg
repnz
aam
test
ret
fmul
gs
jl
inc
loop
shll
das
cmp
pusha
adc
inc
mov
pusha
outsb
adcl
cmp
stos
fisttps
mov
cmp
mov
and
std
inc
icebp
xor
seta
mov
popa
out
rcpps
fsin
mov
or
lahf
mov
pop
into
pop
adc
xchg
iret
xchg
cmpsl
jns
mov
xlat
mov
sti
push
and
std
xor
loopne
and
push
fiaddl
mov
lock
stos
clc
mov
inc
add
rorb
cli
lahf
ss
push
xlat
add
vmread
or
add
outsl
cmc
cltd
jnp
add
out
gs
inc
mov
ss
jle
push
and
neg
xchg
rorl
es
xchg
stos
mov
ret
add
pop
and
sub
bnd
in
in
mov
bound
push
lods
cmc
sub
fistpl
sti
mov
nop
fwait
add
cmp
cmp
std
jbe
mov
scas
inc
jp
adc
xchg
xchg
loop
and
xlat
fs
fcomip
add
sbb
fnsave
lcall
sbb
push
pop
ja
fs
cmpsb
loopne
or
xchg
lods
test
mov
fidivrs
icebp
mov
mov
cmp
cld
mov
in
sub
dec
ss
mov
lock
push
mov
sub
mov
fisttpl
test
xor
or
adc
push
in
and
xchg
aam
mov
jmp
cmp
mov
aam
xor
mov
or
lock
mov
cmp
mov
or
int3
push
adc
sbb
add
inc
cltd
ja
sbb
out
sti
std
insb
lock
mov
in
adc
push
call
nop
adc
insl
jmp
push
dec
xchg
xchg
lock
call
pop
mov
arpl
mov
dec
lret
fmulp
pop
and
in
inc
cwtl
insb
into
jmp
adc
adc
pop
xor
mov
xchg
mov
mov
adc
sahf
in
repnz
sbb
mov
push
dec
pop
inc
pop
mov
jb
shll
scas
loope
sub
hlt
jl
sbb
mov
xor
lds
adc
xor
xchg
mov
aam
mov
fwait
and
out
adc
jo
cmp
loope
mov
in
mov
aaa
sbb
inc
mov
inc
popf
jae
arpl
loopne
popf
inc
mov
test
sub
jmp
sub
pop
xor
lods
insl
fwait
rcrb
mov
inc
push
push
xchg
sbb
fsubrs
rcrl
jmp
or
mov
imul
xchg
daa
stos
sbb
inc
inc
mov
push
sbb
gs
cmp
bound
and
repz
stos
sub
adc
mov
jmp
in
fucom
mov
and
out
adc
sbb
lret
jb
fdivs
fdivs
push
mov
arpl
enter
mov
xchg
ficoml
mov
or
inc
or
shlw
add
xor
sbb
les
mov
fs
cmp
test
inc
and
sub
addb
ja
mov
lock
stc
lcall
popf
xchg
jb
pop
or
dec
ret
aas
push
bound
mov
cwtl
mov
push
leave
in
and
inc
sbb
ret
out
shrl
adc
movsl
sub
lret
aad
mov
stos
pop
fucomi
jge
push
cmp
jmp
xor
in
add
repnz
arpl
das
in
xor
fdivrs
icebp
hlt
or
jmp
push
mov
call
mov
add
sbb
xlat
nop
cmpsl
in
ss
or
and
jo
inc
filds
inc
stc
arpl
jl
pop
xchg
in
xchg
dec
ror
movsl
push
call
xchg
inc
push
sbb
push
mov
sbb
notb
decb
mov
push
int3
fimuls
ret
arpl
mov
arpl
xchg
pop
aas
mov
call
int3
mov
or
shll
cmc
mov
clc
loopne
mov
aad
pushf
and
inc
test
mov
call
mov
mov
sub
mov
stc
jle
and
pop
cli
lretw
fistpll
xchg
cmpsb
or
cltd
pop
xlat
jae
movsb
cmp
jo
dec
jne
xor
xchg
gs
fwait
inc
mov
mov
int3
jecxz
test
inc
add
fucomi
bound
and
pop
cwtl
jne
xor
mov
cmp
inc
dec
inc
imul
sbb
lahf
push
rclb
lret
fwait
aad
pop
popa
and
bnd
incl
pop
mov
push
jl
xchg
mov
mov
jge
nop
insb
push
out
lret
js
pushf
shll
adc
mov
and
lock
add
inc
push
fists
hlt
data16
jmp
aad
adc
pusha
ds
xchg
rclb
push
sub
xchg
sbb
pop
xor
dec
push
add
cs
jnp
push
adc
in
jge
cmp
adc
arpl
xchg
test
adc
mov
push
sub
cltd
mov
mov
jmp
mov
inc
push
add
adc
or
ret
jge
jnp
ja
shll
push
jle
repz
dec
push
mov
fcmovu
xchg
xchg
mov
jbe
sbbb
test
xchg
mov
cmp
or
fst
or
int3
outsl
sahf
xchg
xor
mov
out
add
loop
or
scas
sbb
aas
fistl
lods
jmp
adc
jl
test
pop
adc
lret
cmpsl
arpl
ds
out
jecxz
cmp
adc
stos
movsb
test
adc
xor
loopne
shlb
imul
mov
rol
cmp
fbstp
mov
daa
dec
insl
lret
cmp
sbb
sbb
stc
sti
loop
negl
repnz
pop
or
xlat
lds
insb
mov
or
andb
mov
out
daa
pop
xlat
sbb
lds
ss
cmpsl
cmpsl
call
push
imul
lds
stos
ljmp
lea
imul
ljmp
push
xchg
lea
cwtl
rcrl
mov
cmp
popf
stos
mov
mov
dec
out
lods
inc
cmc
outsb
sub
daa
pusha
stos
adc
and
cmp
adc
inc
popf
or
xchg
out
inc
sbb
inc
fnstsw
pop
nop
in
cs
xor
fnstsw
sub
call
jb
scas
xchg
xor
dec
mov
rcrl
mov
lock
icebp
and
sub
and
outsb
push
ds
je
inc
push
mov
or
xchg
or
or
cmp
add
jge
in
dec
aas
rclb
cmp
or
fcompl
pop
add
xchg
xchg
outsl
dec
jl
clc
xchg
cwtl
adc
cmp
add
push
andl
push
std
mov
fcmovnb
out
in
jp
stos
mov
mov
mov
sbb
adcl
or
mov
push
mov
jb
inc
add
pop
orb
movsl
imul
test
push
loope
pop
cld
add
lock
aaa
arpl
repz
mov
or
jns
lret
icebp
cmp
mov
insb
xor
icebp
push
push
fisubrs
scas
mov
jmp
in
out
js
dec
mov
fisubs
cld
jb
lea
outsb
into
cld
fsubrs
push
inc
stos
lods
push
xchg
notb
jg
sbb
aam
into
adc
in
sub
inc
mov
lock
lock
cmp
jecxz
mov
inc
sbb
cwtl
popa
sub
and
jno
push
je
fstl
loop
filds
xchg
test
mov
jo
sub
mov
add
das
mov
add
mov
out
push
jbe
outsb
insb
sub
enter
cmp
nop
cmpsl
jbe
leave
or
mov
cld
xchg
dec
inc
loopne
rcll
in
gs
in
xchg
aam
cltd
cli
cld
gs
mov
ret
mov
enter
mov
call
adc
xchg
rorb
mov
mov
insb
mov
jmp
fisubs
jae
in
enter
dec
lock
sarb
mov
or
out
pop
pop
and
scas
out
xor
jmp
std
mov
icebp
pusha
fisttpll
push
mov
mov
in
jge
lcall
mov
test
and
xchg
xchg
dec
adc
pop
shlb
leave
jmp
xchg
push
loop
jl
xor
add
ljmp
lret
and
add
push
insl
fistpl
jecxz
jp
bound
aaa
push
push
lds
enter
mov
add
add
add
add
xor
cmpl
jne
push
call
cmpl
jb
sbb
mov
mov
xor
xor
incl
add
movl
cmpl
je
cmpl
jne
pushl
call
mov
dec
mov
jmp
xor
mov
or
mov
xor
add
mov
decl
mov
xor
add
sbb
mov
sub
lea
xor
xorl
xor
cmp
je
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
call
cmpl
jne
mov
inc
mov
jmp
mov
or
mov
xor
sbbl
add
movl
cmp
movl
jne
pushl
adcl
call
movl
cmpl
je
cmpl
jne
push
push
pushl
pushl
push
pushl
call
cmpl
jne
mov
dec
mov
xor
xor
dec
mov
jmp
xor
mov
mov
mov
movl
cmpl
je
cmpl
jne
call
xor
add
dec
mov
jmp
xor
sbb
mov
xorl
add
movl
cmp
je
addl
pushl
pushl
orl
call
movl
cmpl
je
cmpl
jne
push
push
call
mov
dec
mov
jmp
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
jmp
movl
cmpl
je
cmpl
jne
push
call
cmpl
jne
mov
dec
mov
xor
or
dec
mov
jmp
and
mov
and
mov
mov
decl
xor
add
movl
cmp
je
mov
mov
mov
mov
mov
add
mov
mov
mov
add
mov
mov
mov
add
mov
mov
jmp
mov
mov
add
mov
mov
mov
xor
add
cmp
je
jmp
mov
mov
xor
add
cmp
je
mov
mov
xor
add
cmp
je
lea
push
pushl
pushl
call
mov
mov
mov
xor
add
cmp
je
mov
movzwl
mov
mov
mov
jmp
mov
xor
lea
jmp
mov
xor
add
jmp
mov
xor
add
jmp
mov
add
mov
mov
test
je
movl
push
xor
pop
add
push
pop
push
dec
pop
dec
xchg
sub
xchg
dec
mov
imul
sub
mov
mov
mov
xor
mov
add
mov
mov
xor
add
mov
imul
mov
xor
mov
lea
cmp
je
mov
mov
mov
mov
mov
xor
xor
mov
add
div
mov
xor
lea
mov
mov
mov
mov
mov
xor
lea
mov
mov
mov
xor
add
imul
mov
xor
mov
lea
cmp
jne
mov
jmp
mov
mov
mov
xor
add
mov
mov
add
xchg
xor
push
mov
pop
mov
add
lea
add
add
push
inc
pop
dec
xchg
dec
xchg
dec
xchg
dec
push
mov
pop
dec
call
cmp
je
xchg
push
pop
push
pop
inc
xchg
sub
xchg
dec
dec
mov
imul
add
xchg
push
xor
mov
dec
inc
add
dec
xor
add
pop
mov
pop
pop
pop
leave
ret
push
mov
sub
sbb
push
mov
adc
mov
push
mov
adc
mov
mov
mov
andl
jmp
xor
or
inc
mov
cmpl
jae
cmpl
jne
push
push
pushl
call
jmp
andl
movl
mov
adc
jmp
gs
jne
jle
and
mov
add
adc
shll
mov
cmp
scas
mov
in
ljmp
jb
sbb
pop
sub
jae
sub
sahf
mov
aad
jmp
fdivl
lret
popa
idivl
les
xor
sub
jb
nop
insl
int
cmp
or
aaa
jno
xor
cmpsl
dec
xchg
shll
enter
outsb
iret
cmp
test
sub
cmp
inc
cmp
pop
or
jge
or
jmp
ljmp
or
cmp
mov
popa
ja
decb
ret
je
xor
pusha
mov
ficoms
mov
adc
pop
jecxz
shrl
lock
out
sbb
add
pop
pop
enter
xor
pop
aas
daa
or
jbe
lcall
sahf
mov
xchg
jnp
bound
push
adc
jp
clc
mov
jecxz
push
gs
mov
jp
add
cld
cs
cli
faddl
mov
cmpsb
pop
push
mov
loopne
mov
rcrl
cmpsl
or
inc
mov
xlat
sarl
mov
dec
mov
popf
rcr
out
cmp
mov
mov
lea
call
movsl
adc
sahf
lds
rolb
test
mov
mov
dec
mov
add
lahf
cwtl
xor
jae
js
aad
pop
movsb
out
cmc
enter
cwtl
hlt
test
arpl
xchg
std
push
imul
insb
jle
cmp
mov
mov
xor
xchg
daa
add
sti
jno
std
sub
in
inc
push
loopne
push
xchg
and
cltd
nop
ss
mov
xchg
je
daa
sbb
sbb
push
fwait
addps
cs
fdivrs
aad
mov
incl
popl
xor
mov
lock
mov
inc
push
dec
cmp
insl
dec
xor
mov
ds
inc
test
push
jle
outsb
mov
dec
push
addr16
out
aam
out
mov
icebp
lret
testl
jo
push
addr16
out
in
cltd
pop
test
dec
js
xor
mov
jmp
jle
loopne
pop
dec
repz
cmpsb
jecxz
xor
cmp
pushl
les
jecxz
ficomps
into
rcll
subb
xchg
cmp
pop
pop
pop
int3
aas
test
mov
cmp
add
add
je
jmp
mov
mov
push
test
mov
sbb
mov
fadds
aad
jecxz
enter
testb
jmp
in
rorl
imul
and
jae
in
in
sbb
cmp
pop
dec
cmp
jnp
dec
lds
sbb
fucomi
xchg
aad
std
sbbl
imul
pop
js
jbe
lcall
lds
xchg
jl
fstl
mov
mov
fistpll
pop
adc
icebp
mov
cwtl
icebp
in
adc
jmp
in
mov
jmp
popf
mov
arpl
jne
pop
mov
sbb
js
out
sbb
into
or
pop
stc
sbb
add
jne
fs
mov
jmp
out
pop
and
pop
shlb
mov
cmp
icebp
pop
cmpsb
jl
repnz
cmpsl
cmc
pushw
or
loope
fists
pusha
cmpsl
paddd
jo
xor
mov
lahf
addr16
into
lock
dec
add
jno
xchg
cwtl
js
dec
sub
loope
mov
cmp
outsb
fstp
out
xorb
pop
std
add
or
in
push
or
add
cld
movsl
imul
rcr
dec
or
test
mov
int3
jle
push
shrl
mov
lds
out
sbb
and
test
xchg
and
xchg
sbb
je
loope
sahf
mov
xchg
std
mov
popf
outsb
daa
fisttps
aad
stos
jae
xor
test
and
stos
movsl
pushf
pushf
push
jbe
repz
push
xor
ds
xor
stos
push
push
sub
adc
inc
aas
dec
cmpsb
xor
jecxz
iret
dec
mov
push
push
xchg
enter
popf
adc
popa
push
adc
aad
aaa
mov
daa
xchg
shl
mov
pop
xchg
and
jge
cwtl
jbe
adc
loop
aad
sub
lret
add
je
xor
sbb
fiadds
push
pusha
loope
push
and
popa
and
lcall
mov
jg
cwtl
sar
loopne
sub
ret
inc
lret
test
adc
jge
arpl
into
mov
and
and
sbb
mov
out
pushf
xchg
push
cli
xchg
ss
lret
mov
dec
bound
sub
push
enter
nop
push
fsubrs
adcl
dec
and
xor
or
or
sub
inc
mov
clc
xchg
loop
adc
lahf
nop
daa
push
imul
shr
and
sub
mov
sub
cs
ljmp
insl
inc
rcl
mov
pop
hlt
hlt
pop
cmc
add
jecxz
xchg
dec
dec
cli
int3
in
fsubrs
inc
sub
pusha
loop
setg
sbb
pushf
aam
scas
xchg
ss
sub
inc
in
dec
push
shrl
and
ljmp
pop
push
mov
pop
rolb
int3
xchg
jecxz
pop
aas
jg
out
mov
adc
and
ret
es
cwtl
mov
jbe
and
jae
sub
sbb
add
pop
stos
ret
movsb
sub
fldcw
test
in
xchg
pop
mov
test
xchg
sahf
das
xor
ret
xchg
sbb
cmpsl
loope
jg
dec
push
sub
push
mov
dec
ss
inc
jbe
pop
sub
mov
mov
and
mov
bound
bound
int3
xchg
mov
and
stos
inc
movsl
sbb
jmp
pop
xor
cld
adc
jge
sub
mov
dec
popf
fcompl
dec
xchg
cs
or
add
or
xor
mov
pop
mov
jae
out
xchg
cmp
cmp
mov
es
add
fwait
inc
push
ret
insl
scas
dec
dec
adc
xchg
inc
inc
dec
push
aas
call
inc
xchg
data16
mov
dec
mov
adc
pop
xor
lock
call
in
das
sahf
mov
in
push
test
mov
in
sahf
xchg
ret
roll
sub
xor
add
push
jl
jnp
popf
push
clc
push
jl
xor
adc
popa
fldcw
in
orl
movsl
orb
push
jb
dec
mov
aad
inc
lcall
mov
jp
iret
jae
jne
pushl
nop
pop
mov
or
xchg
ljmp
or
dec
adc
movsb
push
mov
iret
and
cmp
stos
mov
in
rorb
lret
icebp
jp
je
jecxz
inc
mov
xlat
into
pop
cmp
dec
dec
jg
psubsb
inc
nop
mov
mov
add
in
iret
jl
push
nop
lds
sti
and
sub
pop
leave
mov
movsl
loopne
mov
inc
mov
or
les
push
hlt
out
fimull
pop
dec
xor
mov
mov
adc
adcl
inc
and
sti
pop
repz
repz
and
cmc
aaa
xchg
mov
negl
imul
mov
pop
sub
loopne
gs
andl
out
xchg
gs
sbb
inc
rorl
dec
add
cmpsl
xchg
sbb
int3
cmp
push
test
mov
addr16
push
xchg
icebp
out
cmpsl
mov
leave
js
sti
mov
loop
push
lret
hlt
shr
lea
clc
xor
push
in
pop
fidivl
nop
inc
call
xchg
inc
cmpsl
xlat
pushf
mov
ret
adc
call
jns
or
ror
out
cmpsl
das
cmpl
das
pusha
mov
mov
xor
mov
sub
mov
xor
xchg
dec
pop
mov
nop
pop
add
cmpsb
test
sbb
pop
adc
mov
movsb
mov
xor
jnp
lahf
inc
test
xchg
test
fs
fsubl
in
lds
jo
clc
mov
cmp
nop
push
xor
mov
push
fdivs
sti
mov
hlt
iret
test
mov
cmp
lahf
insl
add
jae
dec
mov
jp
pop
leave
cmc
test
dec
jne
popf
fdivrs
shlb
jl
push
shrb
test
sarb
jno
jl
jg
xchg
js
mov
pop
mov
pushf
orb
movsl
popl
add
xor
cld
repnz
stc
dec
jb
int
in
fwait
popf
test
arpl
mov
pop
jne
push
mov
mov
add
leave
mov
nop
pop
cltd
out
or
jg
lcall
fwait
sbb
ret
idivl
je
insl
push
imul
aas
cmpsl
jns
popa
push
popa
out
pop
cltd
and
je
jns
inc
call
xor
rorl
xchg
cmp
jl
loopne
fwait
lods
pushf
pop
jo
and
insl
dec
outsl
xchg
js
pushf
add
cmp
adc
adc
fcoms
stos
pushf
jecxz
test
adc
push
imul
xor
mov
mov
xchg
int
fdivs
das
push
popa
sahf
cmc
rorl
sbb
xchg
ret
adc
fists
cs
jns
in
add
inc
cmp
xor
cmp
popa
sub
inc
jnp
call
jl
mov
mov
movsl
imul
jb
cld
and
int3
add
pop
cs
cmp
add
stos
pop
cmpsl
sub
add
fmul
loope
sbb
in
test
add
mov
aad
xor
fildl
push
loop
insl
mul
xlat
xor
in
clc
stc
ret
popf
jle
xor
sbb
cs
or
mov
ret
mov
xor
mov
insb
das
mov
fwait
sub
hlt
mov
xor
add
mov
lds
xchg
sub
adc
inc
je
ljmp
push
sbb
jne
dec
xchg
xchg
push
fbstp
pop
fst
or
out
outsb
lods
add
stos
mov
sarb
in
and
push
jmp
dec
push
push
inc
and
cmpsb
stc
xchg
xlat
cmp
popf
subl
inc
lcall
scas
repz
stos
xchg
cli
ror
icebp
mov
adc
sbb
sti
jl
pop
lds
lods
add
movsl
lds
lds
rorl
xchg
mov
or
lea
mov
mov
xor
gs
aas
or
push
test
jae
cmpsb
pop
hlt
mov
insb
rorb
mov
js
out
push
popf
mov
sbb
jns
mov
loope
mov
adc
aam
xor
push
sti
out
sub
cmp
call
pushf
mov
lcall
mov
hlt
xorl
leave
icebp
mov
into
pusha
iret
fs
ss
lahf
icebp
and
sbb
ljmp
repnz
xchg
pop
cmp
mov
fsts
clc
jnp
and
in
inc
mov
mov
dec
mov
mov
push
mov
mov
pop
cmp
and
cli
add
aad
mov
inc
add
cmp
cmc
clc
js
iret
inc
ret
scas
fimull
cltd
add
push
xchg
shl
scas
daa
cwtl
sbb
pop
das
or
fbstp
lret
in
cltd
pop
xor
and
stos
push
jne
imul
dec
rcrl
cmp
out
or
shl
aad
cmpl
mul
popf
ljmp
jb
mov
adc
mov
std
pop
xchg
cwtl
add
rcl
push
xor
lcall
rcrl
cs
cli
xchg
lcall
cmp
ljmp
jmp
xchg
hlt
sbb
push
lds
or
sub
lds
gs
imul
jle
add
mov
sbb
push
shrb
imul
movsl
sar
test
push
cwtl
mov
in
mov
mov
jbe
in
add
mov
inc
cs
sbb
cmpl
fbld
cs
mov
and
sub
or
aam
fldenv
jno
nop
jb
or
ja
xchg
sbb
or
inc
fcomp
add
push
or
popf
xchg
movb
pop
push
rorl
jae
popf
div
push
rcr
cmc
hlt
movsl
jle
in
scas
mov
and
fiadds
push
lcall
ds
rol
xchg
jmp
adc
out
mov
or
sbb
xchg
leave
jb
adc
cmp
call
nop
cmpsl
lods
xor
xor
clc
pop
jne
mov
push
das
int
push
mov
loop
aas
and
mov
xchg
jb
fs
sti
inc
andb
mov
push
insb
cmp
add
nop
lret
jne
pop
sub
xchg
or
add
test
sahf
repz
add
lahf
aam
jno
jae
mov
fcomps
xor
shrl
pushf
cmp
lahf
addr16
pop
lods
int
push
pop
adc
lock
sub
dec
jg
pop
dec
xor
subb
and
ftst
icebp
loopne
ret
push
add
cld
jle
push
adc
test
shl
adc
pop
jmp
cmpl
test
clc
mov
cld
ljmp
in
ret
cmpsl
cld
repz
xchg
int3
daa
jmp
cli
jp
sub
or
lcall
sub
sbb
and
xor
pop
jmp
rorb
clc
insb
mov
jmp
push
mov
push
pushf
or
push
sub
ret
jle
pop
bnd
mov
imul
jmp
ds
add
xchg
dec
shlb
movsl
mov
cmp
pusha
call
cmp
cmp
mov
mov
call
int
sbbb
sub
ficoml
dec
adc
aam
cmpsb
dec
mov
mov
xchg
aas
pushf
or
push
sbb
into
pop
pop
xchg
mov
shl
xchg
divl
out
iret
out
xor
cmp
loop
pop
in
negl
xorb
pop
filds
sub
mov
insb
fucomip
push
inc
fldl
lret
js
shl
xor
mov
mov
scas
dec
mov
mov
jle
xor
lcall
mov
test
ror
xor
rcrl
lcall
repnz
ja
out
or
sarl
stos
imul
cmpsb
mov
out
sbbl
decl
and
sub
icebp
jo
enter
mov
push
imul
test
in
fistl
mov
scas
loopne
ret
add
scas
loopne
dec
ss
mov
scas
rclb
in
mov
frstor
cmc
aaa
dec
mov
dec
addr16
adc
negb
pusha
dec
sub
pop
sbb
or
and
and
faddl
xor
mov
daa
out
xchg
jge
pushf
adc
mov
insb
push
into
jle
push
imul
imul
mov
lret
scas
bound
in
cli
cmp
mov
lds
mov
mov
int
scas
jp
or
dec
and
gs
seto
mov
cmp
inc
sub
add
lret
cmp
sti
loop
test
std
in
dec
or
sar
fcoml
ret
push
inc
and
aad
mov
test
lods
inc
scas
mov
pop
push
test
jmp
inc
cli
imull
stc
inc
sbb
out
mov
aas
inc
add
aam
mov
xchg
ljmp
lods
inc
out
mov
out
xchg
mov
mov
lahf
lock
mov
rorl
inc
dec
dec
lods
lods
sahf
xchg
xor
pop
vpunpckldq
jecxz
xor
jg
cmp
movsb
or
std
pop
mov
push
in
jno
stos
ljmp
push
pop
imul
mov
dec
mov
cmp
fisubrl
lods
fsubs
cmp
ds
movb
dec
std
leave
mov
aam
cmpsb
sahf
outsb
inc
sub
cmpsl
pop
lock
loopne
jg
sbb
in
enter
bound
xchg
sti
push
in
mov
pop
repz
loope
dec
lahf
adc
cmp
mov
addr16
ja
insb
test
jne
mov
iret
mov
pop
ds
cmp
enter
push
popa
das
bound
stos
push
mov
fdivrl
stos
cltd
rorb
jge
sbb
mov
enter
das
iret
rcll
lcall
jb
xchg
fcmovu
and
mov
push
add
fldt
mov
test
dec
int3
pop
gs
ret
dec
stos
pop
lret
push
sbb
ror
shl
inc
rcrl
push
test
inc
ret
mov
adc
xchg
orl
inc
sbbl
xor
xchg
xchg
insb
or
mov
rcrl
mov
mov
and
out
xchg
out
sub
movsb
clc
inc
mov
mov
ret
or
mov
inc
cmp
and
or
bswap
mov
insb
aas
sub
movsb
lock
addb
les
into
xchg
jg
fldenv
mov
mov
push
bound
cmpsb
les
out
xlat
pusha
jle
inc
jne
dec
in
cld
cmp
shlb
shrl
leave
and
scas
inc
fildll
incb
inc
inc
insb
jo
mov
and
or
xchg
addr16
xchg
mov
cmp
jecxz
jns
idivl
popf
scas
and
xor
mov
mov
shlb
test
aas
scas
popf
shl
lahf
sbb
or
es
mov
jp
pop
ret
imul
test
mov
lret
push
decb
cmp
cwtl
js
sbb
pop
enter
ret
shlb
loope
cmp
add
je
or
inc
xor
adc
mov
in
mov
sub
fwait
add
int3
lret
push
inc
cmp
jbe
sbb
mov
loope
jmp
mov
sub
cmp
lock
xchg
jg
jae
addr16
mov
bound
sub
bound
aaa
lds
xchg
in
push
in
pop
push
out
jne
icebp
fsubrl
add
shlb
or
inc
push
out
ss
outsb
or
and
ret
xchg
or
ljmp
xchg
outsb
xor
ja
sub
ret
xor
jp
cmp
shrl
ss
in
in
cmp
popf
add
mov
sbb
jae
sub
shrb
cmp
jns
rol
nop
leave
test
adc
ret
fldenv
les
fadds
out
test
pop
push
inc
rorl
cwtl
dec
int
adc
daa
outsb
inc
fwait
mov
push
movsl
cmp
scas
stos
jbe
cmpsl
negb
movsb
arpl
xlat
sub
push
inc
sbb
ljmp
add
xchg
pop
sahf
pop
ja
pop
mov
leave
fstps
ret
or
push
xchg
or
jp
xchg
imul
clc
and
int3
xchg
or
out
jge
jp
xor
pop
and
xor
sbb
push
icebp
test
cli
repnz
fisttps
sbb
xchg
adc
pop
mov
lret
cmp
adc
add
and
mov
into
ds
into
lret
pop
fmuls
add
ret
dec
in
xor
add
imul
push
outsb
xchg
jb
lock
inc
lea
fistpl
lock
xorb
cmp
cmp
xchg
pop
push
dec
sbbb
push
xor
sbb
push
stos
sahf
repz
dec
xor
cmp
imul
xchg
sbb
cmpsb
xchg
adc
or
inc
mov
pop
in
ss
jmp
adc
dec
pop
add
in
xor
int
adc
pop
outsl
sahf
push
push
test
in
imul
pop
stos
and
lods
out
outsb
mov
test
or
fld
jbe
mov
sub
cmp
pop
mov
jb
push
pop
and
jnp
lahf
mov
sub
lods
loopne
lret
outsb
imul
xor
outsl
xor
cmpsb
cs
stc
daa
mov
das
roll
leave
cmp
int
adc
sub
xchg
pop
push
std
ljmp
push
ret
adc
push
mov
jns
add
cmp
mov
mov
test
xchg
dec
mov
pop
mov
xchg
dec
lea
jge
jnp
aaa
rcrl
jbe
andl
pop
pusha
std
bound
inc
cltd
dec
push
rcl
fstp
push
cmc
out
jp
flds
mov
inc
lods
out
pop
cld
cmp
cli
cmp
inc
lods
cmc
out
es
fidivl
imul
bound
cmpsb
sbbl
popa
inc
mov
arpl
push
ja
call
ret
dec
cmp
int3
sbb
test
push
repz
xor
fdivr
jae
pop
sub
add
jae
push
pop
or
dec
sbb
rcll
aas
cmp
imul
xor
jecxz
subb
testb
pop
jg
inc
imul
add
pop
stos
mov
xorl
mov
out
das
hlt
icebp
xor
test
inc
scas
push
sahf
fisubrs
jno
mov
int3
mov
scas
lds
push
jmp
repnz
call
mov
mov
inc
xchg
fmuls
icebp
cld
or
out
inc
shll
call
jb
jmp
adc
xchg
stos
pop
push
out
jp
mov
int3
push
out
inc
or
inc
xchg
mov
addb
mov
nop
ja
scas
in
sbb
sbb
fldcw
xor
arpl
dec
pop
icebp
sahf
insb
mov
dec
psubd
mov
fs
jg
fmuls
loop
clc
js
cmpsb
xchg
fwait
jae
pop
push
lret
je
fsubs
nop
fs
push
je
inc
push
movsb
es
imul
inc
popf
gs
psubb
sub
or
sbb
dec
dec
adc
je
sub
adc
xor
iret
mov
add
bts
mov
aam
sbb
cs
in
insb
cmp
push
sbb
enter
jb
mov
mov
inc
mov
lahf
jbe
add
xchg
push
sub
jns
mov
and
mov
push
mov
in
pop
dec
mov
nop
xor
pop
add
xchg
push
fstpt
jl
int
mov
pop
xchg
daa
jbe
out
mov
cmpxchg8b
gs
test
rcrl
daa
ja
and
aad
out
jg
mov
cmp
adc
dec
sub
lret
ja
pop
xchg
push
sub
cmp
stos
jecxz
or
jbe
sbb
cmpsb
sarb
push
pop
negb
shlb
lds
add
xchg
aam
inc
mov
fidivs
pop
pushf
push
shrl
imul
int3
xchg
pop
xlat
jns
addb
xchg
lods
test
inc
ret
data16
js
outsl
mov
jl
mov
popf
lock
cmp
sub
ds
jecxz
leave
jae
add
mov
out
ret
lea
ja
sbb
fstpt
int
push
fs
push
mov
push
ja
call
jb
sub
xor
xchg
cmpsl
out
lahf
mov
out
pop
aad
test
scas
jecxz
sbb
outsb
in
insl
jl
and
lods
sarl
push
dec
clc
mov
icebp
xorl
push
cltd
scas
dec
in
nop
pop
rcr
cmp
popa
daa
mov
dec
ret
int3
xchg
push
cltd
sub
pop
jg
lods
add
mov
cmc
mov
or
inc
and
test
sub
dec
push
fmulp
adc
test
jmp
leave
lahf
jl
or
pop
cmp
andl
icebp
sbb
cmp
negb
pop
pop
lcall
mov
push
iret
mov
mov
mov
and
sbb
loope
mov
xadd
cmp
pop
push
add
inc
mov
mov
pop
add
xchg
inc
mov
sbb
repnz
jmp
sbb
push
adc
lret
jne
add
mov
pop
jo
mull
inc
cld
or
sbbb
pop
imul
std
pop
enter
sbb
xchg
ret
jl
xor
pop
adc
imul
rclb
outsl
xchg
push
or
rorl
xor
sub
add
jmp
xchg
mov
pop
out
in
inc
pop
sbb
ja
or
sub
fcomip
mov
mov
adc
leave
adc
icebp
movsb
and
mov
cli
adc
sbb
daa
jle
cmpsl
add
outsb
ja
adc
jg
call
adc
js
js
test
test
in
in
fwait
dec
data16
dec
std
inc
lret
sbb
add
test
xchg
aaa
adc
cmp
jl
mov
push
fildll
and
lods
xor
xor
repnz
mov
xor
mov
ja
sub
push
mov
mov
xchg
jl
cmp
jnp
orl
lock
push
jle
popf
loop
cwtl
sbb
leave
cmpb
cmp
jae
lock
loope
or
mov
cmp
sub
mov
leave
pop
hlt
out
cmp
sti
mov
pushf
push
mov
xchg
in
xlat
adc
out
sbb
pop
mov
jg
aaa
sti
xchg
jl
fsubrl
jle
test
push
aam
mov
fisttps
cmpsb
shrb
sar
pop
dec
dec
jno
jno
inc
movsb
xchg
int3
cs
lret
inc
cmp
dec
ret
sub
adc
inc
push
jns
jns
cmpsl
dec
pop
pop
sub
push
sahf
enter
mov
xor
aam
fs
mulb
orl
adc
adc
jle
cmp
or
push
rorb
dec
xor
and
push
data16
sbb
inc
notl
push
out
xchg
mov
jne
pop
adc
shrl
and
into
inc
stos
lock
adc
cmp
add
cld
mov
or
mov
out
dec
mull
rolb
or
insl
and
lods
hlt
pop
fwait
outsb
mov
pop
add
cmc
pop
mov
jl
ja
rol
inc
sahf
add
mov
mov
pop
xchg
mov
pop
sub
xchg
stc
adc
push
push
pop
add
pop
or
fldenv
in
pushf
dec
out
pop
sarl
adc
push
lahf
movb
xchg
ljmp
es
cmc
sub
cltd
popa
sbb
jno
stmxcsr
pop
fcompl
into
insl
xchg
mov
lock
pop
dec
add
js
mov
test
mov
sub
jle
jecxz
xchg
test
test
leave
mov
or
shrb
xchg
imul
mov
js
hlt
pop
leave
jge
aam
dec
jmp
stc
ja
cmp
aad
xchg
outsl
xor
xor
pusha
scas
push
push
in
dec
sub
push
sub
dec
les
gs
and
jl
mov
stos
loop
pop
or
aas
cmp
shll
fists
ret
jle
mov
mov
or
iret
loope
add
call
add
lea
movsl
in
ret
and
and
jno
sbb
sahf
insb
push
mov
xchg
ja
cmp
cmp
dec
cmp
dec
cmp
pop
shlb
flds
fsubrs
push
sbb
xchg
cmc
xchg
mov
cwtl
mov
adc
jp
push
xchg
movsb
imul
inc
js
repnz
scas
enter
push
aad
out
mov
in
leave
and
cmp
cmp
cwtl
mov
mov
push
cmp
or
stos
pop
adc
in
mov
in
push
les
ljmp
inc
je
faddp
add
mov
inc
and
push
pop
scas
loope
lret
and
mov
into
xchg
push
adc
pop
mov
aam
or
pushf
xlat
sbb
test
inc
lods
xor
sub
sbbb
cs
rcll
and
cmp
repnz
pop
push
shrb
or
cmp
and
or
sbb
or
enter
mov
xorb
cld
mov
aaa
sbb
scas
mov
mov
mov
jecxz
cli
mov
insb
lods
jb
into
inc
cmp
sbb
add
jp
add
xchg
mov
dec
mull
jecxz
nop
lahf
cwtl
mov
jno
jno
fistpll
cld
mov
add
fldt
xlat
out
jg
cmpsb
xor
xor
add
and
aas
add
jae
das
sbb
cld
sub
imul
xchg
insb
xor
xchg
in
ljmp
sub
add
mov
jo
ret
or
lret
jno
fucomip
pop
scas
daa
jb
xchg
cld
popa
mov
adc
cmp
outsb
mov
outsl
cmc
je
fadds
lds
clc
popf
mov
pop
inc
bnd
leave
lfs
push
rolb
orb
stos
lret
das
bound
xchg
xor
push
inc
sub
cmpsb
inc
push
clc
js
push
sbb
sbb
lcall
cs
mov
in
jle
push
pop
cmc
cmp
bnd
mov
lret
das
pop
cld
fsubl
fisttps
ret
fwait
ret
mov
xchg
mov
jmp
daa
sbb
and
xchg
and
push
and
ror
lahf
hlt
pop
pop
out
data16
inc
lods
in
subl
int
subl
and
repnz
repz
pop
cmpb
sbb
stc
sub
xor
jl
cmp
inc
xchg
inc
gs
push
repnz
or
jb
lcall
aam
out
testb
xor
xor
enter
clc
mov
outsb
xor
add
mov
xchg
rcll
stc
mov
les
sti
shrl
hlt
pop
dec
jp
cmp
sub
add
xchg
mov
fnstsw
dec
sbb
push
mov
jne
and
jl
add
in
out
outsb
xor
mov
mov
xchg
mov
and
mov
aad
imul
mov
scas
in
sub
mov
insl
adcb
jmp
sub
ja
cmp
jecxz
xchg
ja
outsl
push
ficomps
inc
outsb
idivb
insb
mov
cwtl
adc
out
pop
xor
leave
pop
mov
mov
mov
mov
jno
adc
cmp
pushf
adc
or
fwait
shl
jmp
je
or
lcall
sbb
sbb
or
repnz
push
sub
movsb
in
pop
test
das
test
sub
push
sbb
aam
scas
faddl
jnp
lods
popf
test
int3
pop
test
pusha
cltd
cmp
inc
fdivrs
mov
or
mov
mov
sbb
sub
mov
xorl
mov
mov
movl
cmpl
je
cmpl
jne
call
cmpl
jne
xor
or
dec
mov
mov
dec
mov
jmp
sub
mov
and
mov
mov
orl
movl
cmpl
je
cmpl
jne
pushl
push
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
add
mov
mov
mov
mov
sub
mov
sub
add
mov
orl
sub
mov
or
mov
andl
jmp
xor
xor
inc
mov
cmpl
jae
cmpl
jne
push
push
pushl
call
jmp
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
jmp
sub
mov
orl
mov
mov
sub
mov
mov
mov
mov
xor
mov
add
or
mov
mov
mov
sub
mov
orl
mov
xor
add
push
mov
xor
add
push
mov
xor
add
push
lea
push
pushl
pushl
call
test
je
lea
push
mov
xor
add
push
mov
add
push
mov
mov
pushl
call
mov
lea
mov
mov
test
je
lea
mov
mov
mov
mov
mov
sub
mov
mov
xor
mov
sub
add
mov
mov
mov
mov
pushl
movb
mov
pushl
pushl
pushl
pushl
pushl
pushl
pushl
mov
call
mov
mov
add
pop
pop
leave
ret
push
mov
sub
movl
adc
lea
and
mov
movzbl
sub
mov
push
mov
movzbl
sbb
mov
lea
movl
cmpl
je
cmpl
jne
push
pushl
push
pushl
call
xor
xor
dec
mov
jmp
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
jmp
xorl
mov
mov
mov
sbb
mov
xor
addl
add
negl
mov
mov
andl
mov
inc
mov
cmpl
jne
push
call
cmpl
jb
add
mov
mov
add
sbbl
push
mov
mov
andl
mov
inc
mov
cmpl
jne
push
push
call
cmpl
jb
movzwl
add
mov
adc
mov
sub
xor
mov
subl
jmp
fildll
push
mov
mov
pop
sub
leave
mov
jp
adc
jp
testl
mov
notl
popf
ljmp
imul
mull
int
jae
popf
icebp
or
sub
fiaddl
test
xor
aaa
mov
hlt
leave
enter
dec
inc
fidivrl
and
aas
sbb
das
mov
pop
enter
push
out
loope
test
xchg
clc
nop
pop
test
dec
subb
mov
cmp
cmp
xchg
pop
fidivrs
adc
dec
loope
test
mov
daa
jns
cld
push
xchg
inc
popf
fsubrs
jae
out
scas
cli
lret
push
lret
dec
pop
mov
xchg
pop
dec
mov
inc
pop
les
mov
dec
mov
gs
cmp
sbb
outsl
push
sahf
adc
daa
pop
add
jbe
add
leave
inc
inc
mov
adc
add
sti
mov
subb
neg
mov
mov
movsl
das
jle
push
inc
rclb
pop
pop
cltd
scas
mov
mov
mov
push
aaa
pop
lahf
pop
fisttpll
test
outsl
jg
pop
lods
mov
inc
in
sub
mov
cmpsb
mov
mov
jae
cmp
das
mov
mov
bound
xchg
add
in
xchg
test
or
xor
inc
pushf
add
je
mov
xor
xchg
jle
fxch
fmulp
inc
pushf
clc
out
sub
mov
aaa
mov
movsb
cmpl
test
pop
out
and
fiaddl
push
in
cmp
inc
outsl
jl
push
bound
cmpsl
or
int
push
aas
xchg
pop
fcmovb
insl
adc
jecxz
loopne
jle
cld
es
insl
shll
cmp
or
or
pop
pop
test
add
mov
inc
add
cmp
dec
lret
pop
push
cmp
ret
xchg
cmp
fistpl
les
inc
cmp
jnp
xor
sbb
dec
pop
cmp
cmc
ljmp
fadds
data16
or
add
and
mov
sbb
dec
pop
lods
inc
sub
dec
mov
imul
mov
sbbl
sti
jle
sbb
lret
sbb
pop
sbbb
xor
push
aas
popa
pusha
mov
imul
xchg
outsb
sub
je
fildll
fwait
mov
sub
int3
inc
lock
jg
leave
cmp
adc
add
out
daa
in
ret
xor
iret
sarb
repnz
jecxz
movb
movsb
mov
mov
arpl
xchg
push
push
xor
adc
push
mov
mov
mov
mov
jae
pusha
andl
arpl
push
imul
or
fwait
sbb
bound
jo
mov
je
orl
mov
leave
cs
testl
adc
aas
adc
test
int3
xchg
fidivl
aam
xor
stc
psllq
das
sub
mov
cmc
andl
mov
push
pop
mov
pop
not
shll
js
dec
mov
sbbb
insb
lock
femms
adc
arpl
cmp
xchg
cli
aas
adc
adc
flds
popf
cmpsl
jb
add
pop
adc
cld
push
mov
bound
adc
pop
les
scas
mov
cltd
in
xor
mov
std
pop
scas
mov
sbb
or
gs
out
xchg
lods
bound
sbb
mov
sbb
subl
jnp
mov
pop
stos
cmpsb
pop
and
test
sbb
sub
fiadds
hlt
mov
shll
cmpl
dec
push
negl
les
nop
pop
xor
xor
or
mov
insw
inc
cmp
or
add
addr16
sub
cmpl
pop
or
fadds
jns
insl
cmp
lock
lret
ret
aas
pop
daa
xchg
divb
mov
lahf
sub
loope
pop
inc
imul
fwait
test
or
adc
pop
in
jp
dec
bound
add
pop
adc
dec
iretw
and
rclb
cmp
mov
sub
xchg
jg
lea
jno
arpl
fisttpl
aad
aam
in
mov
mov
adc
out
sahf
shll
fs
and
mov
cltd
cmpsb
pop
ds
xorl
xchg
enter
sarl
mov
filds
loope
cmp
jbe
insl
repnz
mov
jmp
xor
cmp
pushf
mov
or
cs
jo
shll
fsub
leave
xchg
sbb
test
jb
xchg
andl
ljmp
push
in
and
or
insb
xchg
xchg
fsubl
sahf
js
add
mov
mov
in
add
lods
inc
xchg
inc
in
icebp
pop
mov
push
decb
out
pop
lret
stc
fists
leave
mov
jae
fcmovne
xchg
mov
mov
cs
sbb
dec
mov
fstl
cld
mov
sbb
sahf
pop
push
pop
inc
xchg
shrb
call
pusha
aam
mov
cld
and
fcompl
mov
push
add
add
sub
jns
mov
leave
xor
mov
fwait
inc
outsl
mov
inc
outsb
stc
push
adc
lods
pop
push
xchg
iret
xlat
jbe
clc
js
outsb
inc
jns
mov
jecxz
push
andl
les
inc
bnd
or
mov
fwait
cltd
je
hlt
or
clc
in
sbb
adc
hlt
mov
sub
xchg
mov
pop
xor
inc
cmp
lock
sub
jmp
or
out
add
jb
pop
shl
push
dec
test
lret
cmp
jl
lcall
mov
int
mov
das
pop
fwait
sahf
stc
xor
or
xor
xchg
add
add
outsl
fisubrs
sbb
push
fisubs
cmp
and
sbb
cmp
push
into
dec
pushf
push
and
outsb
inc
sbb
mov
out
int
xor
cmc
mov
pop
jb
test
mov
jle
mov
mov
sti
mov
fsts
ss
adc
mov
xor
lods
popl
sbb
cmp
fisubrs
xor
dec
in
fst
or
jns
xor
enter
rorb
nop
subb
pmulhw
adc
push
pusha
sbb
xor
adc
dec
push
and
insl
jg
push
stos
dec
dec
js
addr16
add
cmp
punpcklwd
imul
cmp
adc
xchg
dec
and
ss
mov
sub
dec
popf
and
shl
packssdw
pop
sub
rclb
mov
lret
ss
mov
cmp
arpl
push
fs
les
sbb
sbb
ffree
scas
sbb
jo
pushf
jge
push
loope
in
imul
push
mov
and
rolb
lods
or
push
popa
inc
dec
or
pop
loopne
mov
adcl
xchg
push
icebp
test
add
mov
out
jecxz
push
sbb
xor
mov
jmp
xor
dec
rorb
loopne
sarb
cli
sbb
mov
shrl
xor
hlt
add
paddb
lock
fistl
lods
aaa
or
mov
insl
fsubp
sub
ja
adc
pop
sahf
mov
mov
mov
xchg
in
loop
xchg
cli
and
in
cs
mov
bound
cmp
jmp
int
sbb
incl
ds
or
push
shlb
mov
xchg
pop
pop
fidivs
fwait
pop
movsl
lods
inc
cltd
int
loope
imulb
dec
adc
bound
ret
mov
mov
aaa
insb
inc
mov
mov
and
dec
std
movsb
hlt
mov
out
sti
lods
xor
js
shl
sarl
gs
and
lock
jb
xor
adc
adc
movsl
loop
orl
cmp
sub
int
add
sub
pop
enter
jno
jno
mov
addb
shrb
pop
popf
cmp
dec
mov
push
movsl
sub
enter
dec
lret
pusha
in
sbb
lcall
aas
jge
jmp
sbb
push
andl
cmpsl
fmull
pop
and
aaa
lret
lret
mov
insl
mov
inc
shrl
lock
jmp
push
incl
out
sub
aaa
in
mov
test
jne
push
in
sbbb
mov
aaa
xchg
xorl
dec
rolb
push
sub
mov
and
arpl
xor
repz
mov
jnp
in
cmpsl
bound
les
lods
and
andb
inc
cmp
pop
jle
sbb
dec
clc
push
mov
xor
aaa
xor
push
add
daa
cwtl
sub
ret
sbb
push
shll
sub
rolb
jp
addr16
ret
pop
sub
pop
xlat
cvtps2pi
lock
aaa
leave
dec
pusha
and
leave
sahf
les
ss
push
adc
adc
lea
adc
xor
sbb
pushf
stc
cmp
add
jns
repz
imul
mov
dec
outsl
mov
cwtl
inc
out
loopne
mov
ja
clc
push
mov
dec
pop
cwtl
jge
enter
lock
stos
jg
cmp
sbb
inc
pop
gs
pop
in
mov
shlb
les
xchg
xlat
popf
movsb
in
popl
mov
dec
add
push
aad
xchg
std
int
or
mov
cli
ficompl
mov
mov
jmp
jae
stos
test
test
in
enter
sbb
nop
test
dec
mov
ds
push
cwtl
sub
les
addr16
adc
inc
and
outsb
xchg
push
pop
mov
insl
shrl
mov
inc
in
loop
cmp
fxch
imul
js
mov
dec
adc
adc
jns
test
scas
mov
sub
sbb
in
aad
test
loop
sbb
int3
outsl
cmp
mov
dec
out
xchg
cmpsb
std
ds
cmp
sbb
hlt
dec
xor
in
sub
pop
push
lret
jge
push
mov
int3
sti
or
cli
and
sub
xchg
jbe
lret
scas
mov
lods
jnp
fistpl
sbb
inc
pop
pop
add
push
and
mov
adc
cmp
jno
sbb
ja
sbb
lock
repnz
pop
ret
sub
les
jmp
fwait
cmp
xchg
cmp
sbb
xchg
mov
loope
insl
popa
in
pushf
repnz
push
sahf
es
xor
add
in
rorb
cmp
cmp
mov
rcrl
xchg
push
inc
xchg
loope
es
or
sbb
icebp
insb
popa
test
loop
mull
and
fcomi
adc
mov
sub
jle
inc
bound
ds
mov
mov
fisttpl
cmp
sbb
call
sbb
or
cmp
xor
push
dec
mov
xor
mov
pop
xlat
pop
orb
out
xor
mov
xor
add
inc
cmp
lcall
inc
fmuls
lcall
lcall
cmp
pop
mov
sbb
mov
popa
ljmp
jno
jo
or
lods
loope
es
hlt
inc
repz
mov
add
xchg
xor
inc
repnz
dec
add
sub
das
sub
cmp
sub
ja
sub
mov
inc
sbb
xchg
fimull
daa
xor
and
or
icebp
xchg
mov
ljmp
inc
and
xor
add
dec
jnp
nop
mov
pushl
adc
xor
imul
jle
pop
popf
mov
int
mull
and
push
aaa
sub
jne
outsl
mov
push
or
push
rcrl
mov
add
adc
jecxz
scas
mov
mov
sbb
cmpsb
cltd
pop
and
inc
ret
lock
repz
cld
fwait
dec
fs
or
pop
adc
pop
ret
xlat
inc
les
sub
adc
lods
mov
imul
test
clc
xor
sub
std
lods
fiaddl
mov
aad
cltd
movsb
fwait
pop
jbe
in
fdivr
mov
adc
xchg
or
xchg
shl
sbb
jae
fbld
or
jne
inc
adc
sub
lods
std
mov
in
shrb
inc
movntps
gs
adc
pop
les
xor
stc
add
imul
xchg
xchg
mov
pop
push
lret
and
dec
nop
outsb
push
sbb
ja
je
das
cmc
jns
pop
mulb
ret
aam
stc
cmp
fstpt
mov
push
fs
and
push
and
in
pusha
lret
dec
lahf
mov
mov
adc
ljmp
xchg
fs
xchg
xchg
adc
test
ret
sub
clc
adc
sbb
movsl
test
xor
jg
stos
xorl
mov
test
mov
and
lcall
mov
dec
sbbb
sub
cmpsb
lret
test
or
push
sarl
insb
lods
rcrb
xchg
test
cmp
fmuls
or
mov
lcall
pop
pop
divl
mov
adc
insl
jmp
fsubr
std
or
out
pop
stos
pop
mov
mov
cli
sub
adc
sbbl
aam
loopne
je
pop
fucom
add
push
rcrl
mov
adcb
and
das
xor
jnp
insb
stc
mov
mov
aaa
addr16
pop
imul
dec
mov
dec
rcll
rclb
jmp
push
pop
mov
push
push
movsb
cmp
cmp
cmc
jbe
push
inc
mov
mov
rorb
add
cmp
cwtl
loop
movsb
outsb
jns
loopne
lds
cs
mov
aam
pushf
mov
xor
xor
test
out
test
daa
add
cmpsb
and
call
lahf
mov
pop
imul
data16
in
pop
popa
sub
xchg
adc
cli
bswap
and
pop
mov
pop
rcr
test
dec
sbb
pop
bnd
xor
inc
jb
das
push
insl
push
in
add
cmp
gs
pusha
and
stc
adc
ja
ret
xor
xchg
call
adc
or
imul
sbb
fldcw
push
or
sub
adc
adc
mov
cmpsb
xchg
sbb
inc
inc
aaa
jnp
mov
jo
add
stos
mov
ds
push
push
push
scas
rcl
movsb
js
cmc
pop
pop
push
sub
mov
dec
mov
cld
dec
sub
jbe
dec
subl
xchg
sub
jno
cmp
cmp
test
dec
cmp
cltd
pop
sbb
xlat
daa
mov
aas
inc
mov
xlat
jbe
inc
lcall
mov
rclb
sbb
jecxz
movb
push
mov
push
aam
icebp
fnstcw
cwtl
lock
sar
pop
add
mov
in
cmp
mov
divb
xchg
and
jne
adcb
add
es
ret
lahf
arpl
roll
int3
push
xor
mov
dec
lods
test
es
lret
mov
test
adc
das
xchg
fistps
nop
xorb
xchg
jmp
cltd
push
mov
in
xchg
jo
xchg
out
cli
outsb
push
jle
icebp
loop
je
aam
sbb
mov
gs
test
mov
adc
mov
ret
fnstcw
jbe
mov
mov
push
push
jae
shlb
loope
cmp
add
cmpsb
fimull
outsb
add
or
into
jns
xchg
filds
shrl
sbb
test
lahf
scas
test
jmp
lock
subb
loopne
orb
or
add
mov
fiaddl
je
aaa
dec
pop
cmpb
mov
ss
sbb
lret
sub
cmpsb
out
jge
cmpsb
inc
scas
jp
shlb
aad
mov
mov
bnd
jnp
fsqrt
lcall
xor
insl
bound
adc
jb
cmp
outsb
jno
adcb
dec
sub
or
jmp
dec
or
das
lret
data16
dec
iret
das
sar
sub
ja
pop
jl
into
fildl
pop
jg
sarb
mov
ficomps
cmc
mov
leave
add
adc
fists
add
lret
mov
jg
stos
mov
loopne
aas
decl
lret
nop
dec
cmp
dec
ljmp
push
jmp
lcall
mov
and
cs
sbb
subl
sub
aas
pop
subl
push
jo
xchg
dec
dec
ret
mov
xorb
sub
aas
out
test
mov
aad
jg
mov
dec
dec
in
inc
rcr
jp
mov
inc
and
idivl
push
ss
inc
cwtl
ljmp
js
push
mov
adc
clc
sub
jmp
jecxz
arpl
dec
dec
xor
xorb
icebp
push
rcll
insb
lret
aas
insb
jnp
or
int
stos
or
jecxz
adc
jecxz
insl
in
scas
mov
xchg
xchg
cld
add
sub
pop
cmpsl
pushf
xor
je
sbb
aam
pop
dec
fdivl
inc
leave
scas
subl
jne
fidivl
push
inc
mov
lods
mov
xor
push
repz
loop
adc
fnsave
pop
mov
into
pop
sbb
add
mulb
and
pop
xor
jae
pop
jne
insb
sbb
or
mov
jno
sar
push
lret
test
mov
mov
push
xchg
mov
jmp
mov
mov
pop
lea
dec
cmpsb
cmp
mov
into
inc
fisubl
fwait
imul
inc
test
xchg
pop
pop
in
add
out
add
or
popf
jo
cld
jmp
xchg
jp
push
pushf
push
dec
lcall
push
subb
adc
inc
mov
pusha
dec
xchg
enter
mov
cmpsb
cmp
das
xor
sti
lahf
xor
test
loope
jo
pop
add
cmp
lods
andb
aaa
sub
mov
repnz
repnz
adc
sti
loope
imul
fwait
movsb
or
lret
xor
scas
sbb
clc
in
mov
imul
insb
in
popa
or
cmpsl
jle
push
jo
inc
sub
shll
imul
inc
push
mov
mov
bound
sbb
jmp
and
push
cli
cmp
insb
push
mov
outsb
pop
movsb
push
arpl
jmp
mov
aaa
mov
mov
cmp
rol
cmc
frstor
jmp
enter
scas
and
fwait
pop
cmovg
rol
cmp
sub
mov
or
cmp
lret
jmp
bsf
adc
sahf
and
pop
out
pop
mov
push
pop
cs
sahf
mov
push
les
imul
cmpl
sti
inc
icebp
mov
and
jp
adc
lahf
pusha
testb
mov
in
cmpsb
inc
fisubrs
insb
lods
out
push
lcall
mov
push
add
test
call
daa
call
mov
xor
mov
ss
addb
js
lret
cli
push
es
rcrb
sbb
cld
jno
mov
iret
and
sbbl
shrb
mov
adc
sub
jecxz
arpl
mull
lcall
xchg
and
imul
cltd
add
dec
addr16
fucom
mov
ficoml
mov
jnp
in
sbb
push
pop
stos
into
mov
mov
mov
bound
leave
iretw
jge
xlat
pop
sub
cwtl
movsb
subb
mov
stos
rcrl
pop
cmp
xor
addr16
mov
jecxz
xchg
and
lcall
or
xor
out
xchg
sbb
mov
push
lret
adc
inc
lret
add
mov
popf
push
out
fisttpll
or
sarl
ljmp
call
mov
test
movsl
and
outsl
ljmp
push
xor
mov
mov
dec
hlt
push
mov
aas
mov
add
jg
fnstsw
mov
jae
adc
aam
mov
fsub
imull
cmp
mov
std
dec
inc
mov
mov
ss
dec
add
lods
cwtl
sub
xor
lret
inc
popf
jge
roll
out
mov
mov
sbbb
xor
or
in
cmp
add
mov
loop
mov
je
imul
in
jecxz
lret
outsb
cmp
cmp
faddl
insb
mov
adc
inc
push
mov
mov
ja
mov
and
cld
push
pushf
mov
test
sbb
inc
in
mov
orl
aam
xchg
ljmp
add
mov
push
cmpsb
popf
xchg
mov
xchg
pop
ret
dec
and
mov
sub
das
jl
test
mov
mov
fdivl
push
test
mov
and
lea
jae
lock
out
lret
jo
ljmp
test
int3
imul
shlb
test
loope
das
movsl
xorb
cs
xorl
push
outsl
orl
scas
shl
sbb
xchg
push
push
xor
ljmp
sbb
fiadds
push
xchg
aaa
psubd
jle
insl
or
adc
jnp
roll
add
pop
daa
add
scas
mov
push
stos
in
repz
push
fcompl
ror
lcall
fldenv
lds
and
loopne
scas
or
bound
or
jnp
push
aas
fwait
mov
pop
and
and
in
xchg
test
inc
addl
int3
mov
xchg
subl
aas
pop
scas
push
nop
push
cmp
adc
std
js
arpl
or
adc
out
xchg
push
push
stos
stc
pop
cs
mov
out
add
or
push
push
dec
and
iret
jne
into
sub
xchg
push
lods
ja
outsb
pop
cs
cmp
push
jnp
ret
jae
cld
mov
movb
and
or
or
insl
and
imul
xchg
mov
hlt
adc
mov
inc
sub
pusha
push
pop
lods
data16
mov
mov
mov
nop
loope
fucom
inc
insb
test
xchg
imul
dec
add
ffree
test
aam
inc
mov
push
sub
subl
in
xchg
or
popa
cwtl
jmp
xchg
mov
sub
ss
adc
pop
jg
dec
pop
push
xchg
xchg
imul
enter
and
pop
jnp
push
orb
sbb
sarb
cwtl
fs
fcos
stos
mov
inc
and
mov
sarb
cmc
iret
mov
adc
pop
fcomps
xchg
adc
repnz
insb
scas
leave
dec
mov
pop
ja
lds
jecxz
mov
jns
addb
xchg
push
addr16
mov
lods
and
push
inc
cmpsl
cmp
icebp
adc
loope
jecxz
and
xchg
pop
mov
ret
sahf
nop
mov
mov
movsl
fsubrp
jnp
fnsave
sub
into
and
int3
xor
xor
mov
iretw
sahf
sbb
mov
movsb
xchg
mov
test
loope
xor
insl
mov
mov
out
push
outsb
je
out
scas
lret
dec
inc
je
push
mov
and
jge
cmp
inc
scas
push
fsubrl
dec
xchg
jo
and
repz
lods
fsincos
idivl
ja
fucomp
pop
sub
lret
cwtl
int3
mov
jg
mov
inc
mov
cmp
mov
fs
scas
pop
push
lret
fdivr
out
out
fnstenv
xchg
jecxz
xlat
xchg
jno
xlat
mov
jmp
ret
es
mov
jnp
ss
loopne
push
outsb
sbb
fdivr
cmpsl
jle
cmp
pop
sub
xor
rcrb
jg
int3
addr16
push
push
cli
xor
add
popa
cmp
cmpl
inc
mov
dec
scas
ljmp
inc
cmc
xor
dec
scas
out
jno
add
or
lds
mov
dec
push
int3
pop
jno
ret
jg
mov
inc
xor
mov
popl
push
mov
lret
sub
arpl
fstpl
popa
jbe
push
jl
sub
and
shlb
sub
cltd
movl
mov
shr
and
ficoms
addr16
in
cli
xchg
cmp
lcall
cwtl
cmp
lods
cltd
fs
es
or
push
adc
xor
inc
cmpsb
xchg
cwtl
mov
clc
loop
sbb
call
push
cmp
popf
mov
lret
enter
aaa
test
jae
jb
jns
xorl
pop
out
or
adc
jp
push
daa
je
lret
popa
lret
outsl
xchg
ljmp
adc
mov
adc
sub
out
icebp
or
xchg
scas
fsubs
xchg
or
xchg
lea
jecxz
jmp
mov
jmp
cmpsb
or
nop
pop
rcll
in
and
enter
push
dec
dec
outsb
sub
loope
fwait
imul
clc
aaa
fwait
dec
rcrl
inc
xlat
pop
movsb
lock
mov
or
xor
mov
dec
mov
and
je
mov
nop
sahf
mov
and
in
mov
aad
mov
in
jecxz
push
lahf
mov
cmp
mov
adc
movsb
inc
or
loopne
enter
jmp
sub
adc
jno
sbb
sbb
subb
adc
aas
mov
addr16
push
push
hlt
stos
mov
movsl
arpl
bnd
xchg
loope
mov
and
mov
jb
pusha
stc
xor
lret
push
pop
inc
das
movsb
add
out
arpl
clc
sub
out
and
call
and
push
js
mov
dec
push
cmc
es
movsl
or
test
pop
adc
fstpt
and
and
jge
mov
xchg
jecxz
das
out
aam
mov
js
loop
dec
incl
fidivl
xchg
cmpsl
mov
sbb
push
add
xor
jne
rol
adc
dec
sub
repnz
xor
icebp
xchg
daa
add
clc
outsl
out
jnp
leave
xor
fsubs
add
xchg
cmpsb
adc
push
sbb
pop
sub
loop
mov
ret
xor
jnp
repnz
jbe
or
daa
and
lods
mov
lods
sub
lcall
mov
xchg
out
dec
mov
mov
movsb
ret
lahf
pop
xlat
in
out
iret
in
movsb
sub
cmc
daa
and
or
mov
test
negl
xchg
es
pop
xchg
inc
loope
dec
inc
mov
jmp
adc
xor
mov
cmp
dec
lcall
fsub
fdivl
aad
popf
mov
bound
mov
adc
fwait
push
xchg
popa
sub
rcll
and
lahf
shl
test
int3
or
int3
into
mov
cmp
dec
sbb
mov
decl
insb
sbb
mov
mov
mov
adc
sub
mov
adc
ja
cmp
popf
aad
jg
mov
fiaddl
pop
dec
test
inc
jb
or
xchg
add
jo
mov
or
xchg
mov
jmp
and
xor
dec
xor
data16
dec
jecxz
jl
sbb
ss
or
insl
inc
pop
daa
or
lahf
inc
les
mov
fs
addr16
out
stos
les
jge
fiadds
repnz
xchg
add
inc
jle
cmc
push
cwtl
pop
ljmp
fidivrl
push
adc
stos
inc
pop
lcall
lds
mov
or
stos
jmp
lods
mov
leave
dec
mov
les
xchg
add
push
jne
and
adc
sti
dec
fldcw
hlt
popa
pop
popf
cld
mov
lahf
sub
xchg
out
fisubl
push
mov
lret
insl
sub
scas
push
fsubs
leave
loopne
jl
fimull
addr16
les
jp
pcmpeqw
call
mov
subb
ss
loope
mov
ficompl
add
out
aaa
inc
add
sub
cmp
aas
and
bound
cwtl
xchg
sbb
es
inc
inc
jecxz
push
mov
sahf
pop
bound
jle
lods
jb
fnsave
nop
xchg
lret
lods
adc
pusha
nop
rol
xchg
out
in
test
pop
cmp
jmp
pop
stc
lret
or
push
push
pop
cmp
push
notb
mov
das
data16
pop
jmp
jnp
jno
jo
lret
lret
sbb
inc
ljmp
cmpsb
ds
stc
dec
int3
push
mov
lea
aaa
scas
es
fwait
sub
testl
outsb
jae
cmp
imul
jne
lret
sti
or
or
sub
sub
arpl
cmpsb
mov
adc
jmp
cld
dec
xchg
les
imulb
sub
mov
ret
iret
add
out
in
mov
sub
inc
sub
fmulp
ljmp
xor
jbe
outsl
repz
sbb
sbb
and
loopne
cmpsb
cmp
test
dec
xchg
mov
fiaddl
xor
fdivrl
cmp
call
lock
addr16
sub
cmp
cli
push
mov
iret
cmpsb
mov
outsl
mov
pop
pop
cmp
xor
jnp
mov
dec
imul
decl
sbb
add
jp
in
or
sahf
mov
lret
stc
adc
add
mov
jne
rcl
js
popf
pusha
pop
push
mov
je
add
cs
into
outsb
push
sbbb
jmp
bound
jae
jae
mov
dec
ret
movsb
mov
dec
pushf
outsb
sub
jns
cwtl
ds
cmpsb
push
xor
repnz
dec
sub
mov
adc
mov
xlat
mov
pop
dec
jle
push
mov
inc
jnp
mov
sarb
push
enter
and
push
cld
pushf
test
mov
ljmp
popa
pusha
dec
mov
ss
fstl
push
hlt
sub
cmp
lods
mov
cmpsl
xor
xor
cmpsb
jno
mov
mov
pop
test
faddl
mov
xor
xor
pop
insb
jbe
add
fists
shrl
lahf
lcall
inc
add
add
cmp
add
enter
je
movl
mov
movl
jmp
mov
mov
cmp
movl
jne
movl
push
movl
jmp
mov
mov
mov
cmp
movl
jne
mov
xor
movl
cmpl
je
cmpl
jne
push
push
push
push
pushl
push
call
xor
xor
dec
mov
jmp
adcl
add
movzwl
xor
mov
mov
mov
xor
mov
or
mov
orl
xor
movl
add
movl
imul
dec
mov
andl
xor
adcl
add
cmp
mov
mov
push
movl
je
addl
mov
add
movl
cmpl
je
cmpl
jne
call
xor
add
dec
mov
jmp
sub
mov
neg
mov
subl
xor
add
imul
mov
jmp
mov
xor
mov
mov
xor
mov
mov
sub
add
mov
mov
add
mov
mov
mov
xor
xor
lea
mov
xor
add
imul
mov
xor
sub
jmp
rorl
xchg
mov
pop
jmp
dec
daa
jbe
mov
adc
jp
into
mov
push
fisubl
out
dec
sub
lods
shll
mov
int3
enter
lock
cmp
fwait
xor
push
mov
in
xchg
mov
filds
inc
fstpt
mov
sub
jnp
mov
jle
sarl
imul
or
jne
mul
out
inc
stos
sub
rcl
mulb
test
in
push
pop
sti
xchg
adc
mov
dec
dec
xchg
add
loope
je
mov
pop
mov
xlat
or
cmpsl
add
jmp
cltd
roll
jecxz
jmp
addb
mov
ss
in
push
addr16
sub
mov
in
jbe
xchg
ret
dec
push
ss
aam
xchg
and
jb
cltd
lcall
sbb
jno
enter
leave
mov
mov
test
dec
adc
dec
movsb
scas
iret
xchg
mov
dec
pop
cmp
bound
js
addr16
and
insb
movsl
out
jle
loopne
xor
push
mov
mov
outsl
xor
xor
out
fsubrs
push
shlb
mov
adc
sub
sbb
inc
out
push
lods
mov
gs
pop
frstor
mov
icebp
dec
add
push
lea
xchg
lcall
les
lods
sti
inc
out
aaa
and
ds
lret
outsb
xchg
ret
sub
xchg
xor
cmpsl
xchg
in
and
test
mov
out
les
ret
inc
filds
inc
into
push
sbb
pop
in
cli
and
dec
pop
xorl
pop
or
popa
and
xchg
push
scas
inc
inc
sub
fs
outsb
jns
fs
fbstp
cmp
lahf
es
pop
aam
sbb
data16
insb
cmp
cmp
fldt
shl
lea
jg
in
jle
jbe
lods
add
inc
int3
push
mov
dec
je
loop
pop
or
jb
and
inc
jb
lock
into
push
xlat
aad
xchg
cmp
dec
cmp
leave
aad
mov
jo
adcl
or
xchg
jl
hlt
mov
adc
add
xchg
xchg
add
fld1
push
test
out
fidivrs
xor
enter
subl
dec
pop
xor
stos
fisttpl
mov
in
cltd
outsl
dec
in
iret
adc
dec
aas
mov
gs
subb
fistpll
push
inc
push
je
or
jg
mov
push
cld
pop
fst
pusha
sahf
shl
fmulp
mov
cmp
in
push
mov
cmp
inc
cltd
ror
pop
sub
xchg
xchg
xor
fldcw
push
popf
movsl
sbb
mov
stos
cmc
ja
sbb
test
adc
bound
scas
add
pop
imul
inc
jne
sbb
cli
mov
xchg
dec
inc
in
xchg
data16
mov
jl
das
out
repz
lcall
xor
and
mov
xor
scas
mov
pop
jno
push
mov
push
les
cmp
fidivrs
lcall
ror
adc
cs
out
je
int
sbb
cld
imul
xor
push
mov
mov
jnp
add
adc
or
ss
int
test
push
mov
neg
imul
xlat
cmp
fldcw
arpl
jmp
lock
stc
je
adc
insb
and
xchg
add
jb
je
pop
add
repnz
mov
pop
insl
jecxz
jb
shrl
in
int
jnp
movsl
fisubl
lods
dec
ret
cli
sbb
fnstcw
dec
outsl
bound
fistpll
out
jmp
ret
repnz
insb
orb
adc
les
inc
stc
mov
loope
push
in
pop
loop
iret
subb
mov
jp
pop
lret
in
ds
adc
cmp
and
or
mov
fmuls
xchg
push
add
xchg
les
clc
jo
rclb
lods
sub
pop
pop
outsl
push
test
inc
jle
ret
ljmp
cmp
sub
sbb
cmp
xchg
push
imulb
dec
mov
fildll
xor
adc
mov
fwait
xor
bound
out
cltd
add
incl
pusha
sahf
mov
out
mov
les
dec
lret
aam
xchg
jge
frstpm(287
and
cwtl
xchg
stos
dec
mov
idivb
and
insl
cmpl
mov
mov
sti
fistpll
fwait
loop
dec
mov
mov
test
mov
ds
idivl
pop
mov
ret
test
cmp
cmp
push
push
xchg
std
imulb
pop
fistl
add
sti
mov
pop
js
sar
and
inc
das
inc
adcl
mov
call
mov
and
sbbb
xor
add
or
in
pop
ds
mov
in
jg
nop
cmp
aam
dec
ret
cltd
in
mov
mov
pop
jae
aaa
sub
mov
jp
and
cmp
jmp
rolb
imul
aas
jl
and
inc
repnz
add
jecxz
jo
mov
int3
and
je
cmc
cld
push
adc
addr16
call
push
sahf
lock
es
loop
aas
xchg
jle
pop
xor
cmp
clc
sahf
movsl
sub
mov
scas
cltd
mov
icebp
dec
lcall
xchg
loope
lea
dec
filds
movsb
aad
sti
mov
sub
sbb
mov
repnz
and
push
mov
add
out
push
sbb
cmpsl
push
sub
idivb
enter
fstp
je
mov
mov
mov
scas
mov
xor
mov
lahf
arpl
add
mov
xrelease
mov
hlt
mov
in
pusha
mov
sub
invd
cmp
mov
add
inc
fistps
push
ficomps
mov
xor
psllw
cmpsb
push
mov
mov
dec
imul
or
sub
std
mov
lahf
cmp
push
mov
inc
sbb
cmpsl
loopne
sub
jle
inc
xchg
ljmp
jmp
sub
loopnew
test
in
inc
push
or
popa
lock
lods
shll
dec
cmp
push
and
rorl
aas
push
add
ficoms
push
lahf
dec
ret
lret
cmp
scas
jb
int
test
jle
sub
mov
mov
inc
jp
movsl
cltd
call
in
jo
add
stc
pop
orb
xor
movsb
cmp
xchg
mov
arpl
movsl
xchg
ret
mov
lods
and
out
adc
in
ss
mov
stc
mov
sti
jmp
lods
das
jb
testb
push
cmp
push
mov
xchg
jns
mov
adc
sahf
inc
cmc
aad
ja
jmp
pop
je
push
test
inc
mov
mov
lcall
fst
xor
loop
or
inc
or
sbb
mov
mov
fmull
or
jae
stc
push
inc
sub
mov
mov
repz
or
mov
mov
outsl
cli
push
shlb
ja
aam
cwtl
test
int3
push
jbe
stc
aad
push
out
push
nop
data16
sub
lret
adcl
dec
cmp
mov
out
xlat
push
outsb
sahf
les
pop
in
leave
jmp
sub
or
or
in
test
pop
or
leave
aaa
jno
jns
iret
pop
fs
sbb
scas
add
test
sbb
js
mov
mov
dec
out
sete
sub
xchg
pusha
adc
rclb
add
jmp
add
fisubs
pop
test
push
xchg
mov
jp
orl
or
dec
outsl
push
or
ss
push
xlat
and
in
xchg
cmp
cmp
movsl
into
cmp
inc
inc
int
xor
lds
ret
aas
cwtl
int
jl
pop
jne
push
movsb
push
add
loop
mov
js
push
stc
pusha
aad
xlat
sbb
scas
out
outsb
into
ffreep
in
dec
ja
mov
aaa
lret
push
push
sbb
enter
add
inc
pushf
movsb
jmp
jo
fxch
jmp
rcr
daa
std
stos
jl
xor
xorb
mov
outsl
gs
test
mov
adc
jo
rclb
les
or
icebp
dec
outsl
stos
and
dec
ss
jl
push
test
bound
mov
movsl
cli
leave
pushf
xchg
out
mov
mov
xor
push
and
in
sti
insl
enter
jno
je
add
sbb
mov
test
dec
sbb
adcl
adc
inc
mov
mov
and
mov
mov
mov
mov
imul
or
mov
dec
dec
loopne
mov
lods
adc
pushl
push
and
loope
inc
cmpsb
and
xorl
pop
push
or
jp
fcompl
jnp
js
add
add
cwtl
xor
jb
and
cmpb
mov
loope
pushf
icebp
gs
sub
mov
invd
mov
xorb
sub
xchg
sbbl
add
sub
inc
inc
mov
mov
ret
sti
clc
adc
test
stos
pusha
pop
scas
loopne
imul
movsb
cmpsl
popf
les
jp
lock
decb
or
ret
test
scas
subb
aam
outsl
aam
das
aad
add
std
dec
mov
mov
jp
mov
ficoms
adc
mov
int3
cmc
clc
in
aas
pushl
out
mov
push
jne
outsb
cmpsb
mov
je
mov
jmp
mov
daa
fdivrl
xchg
sub
shlb
mov
aam
int
inc
pop
shl
ds
leave
mov
pop
je
xchg
add
testb
push
movsl
lock
mov
sarl
sub
pop
test
or
push
lret
pop
test
movsl
test
stc
xor
pusha
add
jmp
adc
push
mov
pushf
stos
insl
jae
iret
fwait
inc
xor
ss
sub
inc
push
add
addr16
and
cmc
fcmovb
and
cmp
jns
push
shl
lea
stos
das
sbb
pop
inc
insb
sub
mov
insb
pop
pop
dec
aas
adc
xor
aas
js
add
adc
sub
inc
shr
cmp
inc
mov
pop
loopne
xlat
cmp
mov
les
outsb
cmp
and
or
xor
rcrb
jl
bound
adcb
jecxz
pushf
lds
inc
pop
sub
jne
add
mov
xchg
xor
int
loop
loope
movsb
cld
xchg
negl
test
pop
xchg
inc
pop
enter
mov
fcomi
and
data16
jno
pusha
sti
push
cmp
push
cwtl
and
cmpsb
clc
or
jge
jb
cmp
loope
xchg
cmpsb
pusha
insb
xor
lcall
add
pop
inc
out
add
adc
or
icebp
insb
fisubrl
aas
sahf
pushw
xor
lds
lods
testb
cltd
xor
jb
ds
lea
and
mov
ret
shlb
fisttps
sub
cmpsl
gs
inc
in
cld
sbb
mov
clc
mov
jnp
pop
dec
xor
pop
dec
mov
lods
sbb
clc
fmuls
lahf
fidivrl
push
mov
lret
push
push
cmpsl
fldcw
jno
add
adc
daa
mov
mov
movb
ja
lds
dec
sub
daa
aam
imul
in
mov
dec
and
xchg
loop
lcall
or
dec
scas
pop
dec
inc
pop
jbe
jg
or
xchg
cmpsl
add
jo
lcall
iret
inc
push
loopne
and
sbb
stc
adc
ljmp
fs
movsb
mov
jbe
andl
inc
inc
xchg
out
xor
sbb
and
es
add
rorl
adc
loopne
sub
inc
sbb
js
sub
inc
inc
test
sub
hlt
cmp
lock
fcomip
fstl
mov
mov
push
mov
dec
push
dec
orb
rclb
jmp
mov
xchg
inc
rolb
lret
dec
cmp
jnp
pop
dec
rclb
call
fiaddl
sbb
jle
jo
in
cmp
insb
fwait
add
lods
ds
sbb
pop
mov
jno
and
pop
lock
mov
clc
ds
int3
pop
movsl
lea
pop
cmp
dec
or
jns
xchg
imul
mov
sub
out
lods
mov
shll
jmp
or
mov
aam
sbb
inc
inc
and
mov
fstpl
pop
xchg
stos
in
sbb
push
cmp
outsb
ret
fs
xchg
sbb
mov
or
and
adc
mov
adc
lret
sub
cmp
arpl
popf
push
pop
notb
mov
push
jne
cld
mov
xlat
mov
pushf
or
outsl
xlat
mov
mov
push
shlb
in
and
sarb
jl
mov
inc
das
and
push
adc
or
hlt
mov
push
adc
adc
leave
ret
add
mulb
out
stos
imul
and
insl
xor
sbb
sbb
pop
insb
mov
popf
bound
add
sbb
and
lea
lea
xor
dec
dec
xchg
xor
lahf
mov
aaa
movsl
call
add
imul
ljmp
inc
pop
popf
jne
push
ljmp
es
mov
sub
mov
jbe
mov
mov
cmp
mov
je
mov
push
or
cmp
push
add
addr16
outsb
jl
mov
jbe
or
push
ret
sub
addr16
pop
fildl
mov
popa
xchg
leave
adc
mov
push
les
and
push
cld
mov
fcomps
sbbl
add
insb
jl
cld
iret
scas
cli
out
xor
inc
std
int
call
cmp
add
sbb
je
adc
insb
xchg
push
push
adc
jl
daa
and
testl
movsl
lds
push
call
jnp
out
mov
cmp
xor
cmp
jl
jmp
clc
enter
pop
leave
mov
mov
in
rcll
push
test
xor
dec
test
pop
xchg
out
daa
cmpsl
cs
mov
fdivl
mov
add
push
test
inc
rorb
popf
mov
jg
push
aam
imul
leave
sbb
cmp
mov
push
push
in
int3
push
jecxz
pop
jb
xor
scas
stc
std
vmovlps
nop
jo
sub
fisubl
push
ljmp
out
push
mov
bsf
dec
addr16
adc
inc
dec
sbbl
mov
xchg
mov
xor
mov
pop
aad
test
lahf
mov
sti
mov
mov
add
data16
sbb
je
jno
test
inc
push
out
rcrb
pop
fsubl
test
cmp
fwait
in
notl
xchg
mov
cs
mov
xchg
or
inc
jge
jmp
adc
aas
int3
adc
lods
pop
loope
sub
divb
cwtl
out
jae
xor
sbb
push
hlt
push
and
jle
push
cmpsl
pusha
arpl
sbb
add
in
pop
shl
sbb
mov
or
fcomps
pop
xchg
jp
mov
out
and
push
mov
movsb
sub
jg
rep
orl
ja
js
mov
xor
mov
dec
fisubrs
pusha
xchg
sub
je
jge
push
mov
add
add
xchg
sub
int
and
popa
xchg
jbe
dec
mov
mov
testb
push
mov
jnp
ss
sbb
dec
rolb
lods
pusha
shrb
add
mov
fsubl
xor
xor
jb
inc
popf
je
out
push
add
cmp
add
repz
pop
add
sub
lods
insl
dec
inc
and
push
out
mov
stos
fdivrs
mov
pop
ja
dec
jg
jo
testl
lods
ret
mov
mov
add
cli
sahf
movsb
cltd
cmpsl
gs
and
ss
movsb
and
data16
mov
mov
sti
xchg
push
sbb
mov
xchg
dec
in
sub
pop
test
sub
adc
aam
loop
ret
arpl
pushf
or
push
inc
aad
jecxz
aaa
movsl
std
scas
mov
cmp
sahf
dec
and
xchg
insl
jmp
push
sub
orb
pop
icebp
int3
cmp
sarl
mov
add
stc
dec
mov
hlt
mov
and
leave
popa
jmp
sbb
stc
das
pop
mov
popf
or
les
inc
pop
repnz
push
or
jae
dec
sbb
ljmp
push
lock
int3
lret
in
xchg
mov
es
cmp
xor
cmpsb
xchg
cltd
xchg
xor
js
push
xor
or
inc
mov
out
or
ret
ret
push
xchg
subb
lods
mov
test
dec
and
push
fnstcw
push
aad
test
out
inc
notb
popf
std
outsb
rcll
ror
xlat
pop
lods
outsb
xchg
adc
add
cmp
loope
hlt
sub
jbe
dec
js
add
jg
lock
push
mov
or
ja
pop
fmull
jbe
mov
inc
imul
sbb
mov
mov
test
dec
into
sub
mov
and
xor
or
int
jg
lcall
pop
sub
mov
add
pusha
call
sbbb
stos
fldt
aas
dec
imul
jmp
popa
mov
mov
insb
push
xchg
cwtl
push
gs
and
inc
lret
cmp
adc
rcrl
rorl
hlt
inc
movsb
adc
fwait
arpl
xchg
push
and
jo
sbbb
pop
add
mov
in
xchg
jns
pop
xchg
mov
xchg
pop
xchg
mov
inc
mov
and
repz
sarl
jge
addr16
divb
aam
movsb
repnz
fadds
pop
loopne
pushf
pop
sbb
or
jg
icebp
and
gs
arpl
insb
dec
push
dec
stos
xor
adc
push
nop
add
in
cmp
add
sahf
mov
test
and
sbb
lret
and
js
push
mov
cmp
sti
xchg
add
ds
mov
popl
ja
sub
sub
pop
loope
push
in
movsb
jge
inc
mov
popf
cmp
inc
adc
push
push
and
add
jp
adc
addr16
aad
rolb
iret
mov
push
imull
cmp
sub
xchg
aam
into
scas
pop
inc
stc
ljmp
or
shlb
nop
mov
jmp
xchg
inc
and
inc
inc
jo
xchg
fcomps
es
lea
mov
xorb
aas
jae
or
inc
xor
ret
mov
adc
out
outsb
imul
jl
movsl
jmp
push
sbb
hlt
or
xlat
and
shrb
andl
mov
fst
leave
mov
or
jp
ret
push
ret
bound
sub
xchg
mov
in
cmp
stos
xor
inc
loope
adc
imulb
fisttpl
mov
ficoms
inc
xlat
mov
fmull
xchg
psubd
or
cmpsb
mov
subb
shlb
pop
cltd
sarb
notl
cmpb
add
dec
pop
push
fildl
lock
lcall
cmp
test
mov
data16
call
or
pop
cmp
jp
push
xchg
insl
sub
loope
dec
and
xor
popa
jae
in
pop
ljmp
sbb
sub
jle
in
xchg
add
scas
fs
fadd
es
out
jnp
and
cltd
in
push
sti
pushf
fistpll
mov
xor
sarb
hlt
aam
jmp
movsb
or
test
outsb
and
push
addl
push
leave
dec
cmpsb
sbb
andb
test
mov
xor
popf
push
mov
mov
xchg
cld
int
jns
mov
stc
cmp
mov
hlt
pushf
leave
aam
xor
bnd
shrb
divb
cli
arpl
in
int
sarl
ret
ljmp
stos
push
das
orb
sub
add
leave
pop
pop
aam
loop
pushf
mov
pushl
inc
in
sub
pushf
loope
leave
pop
push
pop
enter
xor
pop
out
xchg
fldenv
in
dec
mov
mov
push
out
mov
dec
mov
lea
imul
stos
pusha
in
insl
dec
ss
jp
mov
cmp
inc
xchg
scas
or
push
cmpsb
mov
and
or
pushf
aaa
cwtl
mov
add
arpl
inc
lock
mov
xchg
mov
adc
xor
fidivs
mov
mov
fmul
xor
inc
sub
icebp
cmp
jnp
dec
pop
add
notl
push
cs
test
mov
pop
loop
push
mov
jmp
popf
cmpsl
lods
rcr
push
mov
xchg
scas
faddl
pop
movsl
mov
and
std
lock
lods
mov
inc
mov
lret
loope
push
jb
or
cmc
or
xor
sbb
xchg
imul
mov
and
mov
sti
out
pop
mov
push
mov
int3
jle
inc
imul
aam
cli
addb
jbe
rorl
push
dec
mov
clc
fcmovu
jecxz
pop
fcmovnu
mov
jp
push
mov
add
adc
add
sbb
imul
aaa
sub
shll
mov
jns
jne
aam
xor
outsl
cmpsb
mov
cmpsl
sub
shrl
inc
nop
mov
arpl
push
mov
pusha
inc
out
inc
mov
mull
out
and
fisubs
xchg
push
cmc
dec
push
add
add
imul
dec
test
or
imul
push
repz
pop
inc
dec
rolb
sbb
mov
sub
loop
or
std
push
in
std
xorb
insb
lret
stos
add
mov
push
nop
out
jg
sub
xchg
inc
mov
popf
jbe
pop
dec
std
sub
fsts
mov
lcall
je
lret
lea
pop
test
cld
mov
std
mov
movsl
add
push
pushf
or
pushf
or
mov
jmp
fwait
sti
inc
xchg
add
gs
push
pop
pop
xor
jmp
fistpll
test
jecxz
ret
mov
lea
cltd
jo
lock
fcomi
js
xchg
iret
cli
jb
scas
rorb
gs
pop
dec
fxch
aam
test
imul
xor
in
icebp
xchg
lock
movsb
and
pop
pop
mov
cmp
cmp
and
and
mov
jmp
mov
jae
fistl
aas
dec
jno
ss
scas
fmuls
xchg
jle
pop
lcall
popf
cmp
and
in
sbb
push
lcall
aaa
fs
add
inc
ret
jge
lds
xchg
popf
or
test
arpl
xlat
mov
sbb
bound
dec
ret
mov
out
ja
sbb
inc
mov
mov
ret
fcomp
mov
arpl
sarl
mov
sbb
cmp
jmp
je
into
add
fcoms
mov
adc
ret
mov
sti
cmp
addr16
or
jae
mov
arpl
add
fs
jmp
inc
inc
out
popl
sub
pop
leave
xchg
clc
jmp
adc
dec
in
mov
or
in
add
and
push
cld
push
ficompl
cmp
push
fsts
sti
mov
std
mov
mul
das
add
push
inc
lret
mov
test
out
xor
test
test
test
xchg
test
and
insl
pop
adc
shll
aam
push
movsb
insl
int
dec
out
repz
je
out
in
gs
dec
dec
add
dec
fstl
cmpsb
mov
sbb
rol
sub
or
fidivl
std
scas
subb
fstl
xchg
xorl
pop
in
ja
cmpsl
into
into
fwait
mov
adcb
or
lcall
daa
imul
mov
and
scas
jo
xor
push
divb
call
fdivrp
pop
in
sarl
jecxz
shl
incl
loop
push
cmp
dec
sbb
popf
and
pop
xchg
sahf
xchg
movsl
stc
adc
sub
mov
outsb
inc
outsb
or
mov
pop
dec
cmc
ljmp
pop
push
xor
push
mov
mov
adc
in
fs
jge
cld
mov
popa
xchg
cmpsb
lods
ja
orl
mov
sti
adc
inc
pop
adc
jl
inc
std
repnz
xchg
test
jno
test
and
pop
cmp
sub
xchg
js
pop
or
sbb
cmp
adc
not
dec
mov
mov
xchg
inc
mov
sti
test
add
mov
stc
add
push
and
push
pop
and
jnp
leave
ja
hlt
inc
imul
jbe
hlt
repnz
push
pusha
popa
cmpsb
cmpsl
add
les
push
repz
ljmp
cmp
push
loope
jne
nop
or
pop
dec
inc
flds
mov
inc
hlt
pop
rol
push
std
inc
icebp
fsubrl
out
cmp
enter
and
sub
shlb
xor
inc
jg
lds
or
jne
push
negb
or
add
ret
sbb
out
jo
mov
push
dec
or
sbb
les
cbtw
das
jmp
pushf
dec
mov
lds
sub
adc
iret
sbb
xor
lret
loope
cmp
je
js
cmp
fwait
into
mov
mov
xchg
ret
push
mov
sub
dec
dec
cmp
shrb
push
nop
jmp
xor
ret
shlb
scas
pop
sbb
stc
add
xchg
xchg
add
dec
inc
jne
and
jmp
push
jne
dec
lcall
rolb
int3
mov
jno
adc
push
inc
xorb
stos
rcrb
lock
rorl
push
xchg
fwait
dec
dec
pop
fwait
mov
fadds
nop
insb
mov
leave
cmpsb
cmp
push
pop
std
jns
jne
mov
test
sub
lahf
pop
jno
dec
aaa
ret
fucomi
mov
cltd
sbb
ss
aaa
ljmp
lahf
lods
or
mov
sbbl
hlt
add
out
es
cmpsl
out
addl
cmpsb
pop
xchg
mov
inc
xchg
in
loopne
xchg
xchg
std
popa
stc
or
lret
jge
push
push
in
repz
add
and
lock
inc
xlat
jle
dec
in
call
and
scas
add
repnz
add
mov
cmp
push
pushf
mov
push
sbb
dec
lahf
mov
xor
in
imul
mov
test
mov
scas
and
xchg
xor
ljmp
sub
das
mov
lock
or
inc
add
cld
cmp
add
cmc
jge
pop
test
mov
js
ja
ja
xor
fldenv
xchg
imul
notl
sahf
add
pop
jb
adc
add
mov
js
fistl
fsubr
xchg
xchg
out
ja
cmp
call
test
mov
mov
adc
stos
sbb
mov
push
pop
test
sub
into
or
sub
sti
shrb
sti
dec
add
sti
sub
stc
pop
adc
popa
sbb
int3
popf
push
dec
shll
jmp
sub
xchg
test
mov
ss
xlat
jb
mov
sahf
or
idivb
pop
and
aas
jns
fmul
rolb
mov
lcall
xchg
sbb
add
das
or
outsl
jecxz
add
repnz
in
mov
repnz
xor
lock
sub
outsl
lahf
and
popl
add
cmp
cli
mov
mov
iret
pop
adc
data16
mov
movsl
insb
loopne
dec
mov
jns
dec
xchg
xchg
mov
push
mov
outsb
aas
repnz
lret
jb
adc
cs
inc
mov
pop
jecxz
xchg
les
in
sub
cmp
push
pop
popa
mov
or
pop
call
sbb
lret
daa
cmp
xrelease
enter
outsb
push
jmp
dec
stos
fbstp
pop
xor
jnp
movsl
nop
dec
frstor
hlt
ficomps
push
cld
sti
fimuls
mov
repz
and
loopne
cld
call
outsb
in
or
fbstp
shl
pushf
sub
jmp
aad
jne
outsb
push
push
mov
jp
rol
frstpm(287
adcl
mov
pop
andl
mov
or
push
out
xchg
sbbl
test
test
cmp
push
or
adc
outsb
mov
out
pop
mov
dec
pop
inc
sub
test
or
fcomi
pop
mov
sub
movsl
sbb
fstpt
mov
scas
ss
xor
adc
lahf
testb
or
dec
sub
inc
inc
lods
xchg
inc
cmpsl
fmull
out
jg
stc
dec
outsb
fisttps
xchg
mov
clc
scas
ret
lock
add
dec
jmp
outsb
inc
testb
shll
dec
fcmovnbe
rol
js
clc
cmpb
sbb
dec
inc
js
push
pop
mov
into
pop
popl
test
bound
fs
dec
insb
push
pop
dec
gs
pop
fcomps
jmp
push
mov
fcoml
mov
push
icebp
inc
jb
mov
lea
dec
iret
mov
loope
jo
mov
mov
add
cmp
mov
mov
jg
xor
mov
sub
add
jmp
xor
add
add
mov
mov
mov
xor
add
not
and
movsbw
mov
sub
mov
xor
mov
cmp
jne
movsbw
mov
sub
mov
xor
mov
cmp
je
mov
xor
mov
sub
add
jmp
mov
mov
mov
lea
mov
mov
mov
xor
add
mov
mov
mov
xor
add
pop
cmp
jne
mov
xor
mov
add
imul
mov
pushl
jmp
mov
add
mov
mov
mov
movsbw
mov
sub
mov
xor
mov
cmp
jne
mov
mov
mov
jmp
mov
cmp
jne
push
pushl
pushl
pushl
pushl
call
pop
pop
leave
ret
push
mov
sub
push
mov
mov
sub
and
mov
orl
mov
xor
xor
xor
add
sub
imul
movl
add
push
adc
mov
mov
xor
or
adc
mov
mov
or
mov
xor
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
call
jmp
add
xor
addl
mov
addl
add
sbbl
add
addl
imul
movl
mov
movl
cmp
je
mov
mov
mov
xor
lea
mov
mov
mov
mov
xor
xor
add
add
imul
mov
cmp
je
mov
xor
mov
add
imul
add
mov
mov
jmp
mov
mov
xor
xor
add
add
imul
pop
pop
leave
ret
push
mov
push
movl
mov
and
mov
andl
mov
inc
mov
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
adcl
xor
sbbl
add
mov
mov
add
mov
andl
mov
inc
mov
cmpl
jne
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
xor
push
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
pop
leave
ret
push
mov
sub
xor
mov
adcl
mov
subl
xor
mov
xorl
add
movzbl
sub
movzwl
mov
mov
add
movb
lea
mov
xor
mov
mov
andl
mov
sbb
mov
xor
orl
sub
adcl
mov
movl
cmpl
je
cmpl
jne
push
push
push
call
mov
dec
mov
jmp
movl
cmpl
je
cmpl
jne
call
mov
dec
mov
jmp
movl
cmpl
je
cmpl
jne
pushl
push
pushl
call
mov
dec
mov
jmp
andl
movl
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
push
call
cmpl
jne
mov
inc
mov
jmp
push
mov
xor
movl
xor
xor
or
mov
adc
push
add
mov
add
xor
mov
movl
push
add
jmp
mov
movl
mov
inc
cmp
movl
jb
movl
mov
addl
xor
xorl
add
jmp
movl
cmpl
je
cmpl
jne
pushl
call
xor
xor
dec
mov
jmp
mov
sbb
mov
sbbl
mov
xor
orl
mov
addl
add
movzwl
mov
mov
subl
movzwl
xor
add
mov
mov
inc
not
mov
movl
cmp
movl
jne
mov
mov
xor
add
mov
sbb
mov
xor
add
andl
xor
xor
inc
mov
cmpl
jne
push
push
push
pushl
call
cmpl
jb
sub
mov
adcl
movl
movl
sbb
movl
add
mov
andl
mov
inc
mov
cmpl
jne
push
call
cmpl
jne
xor
or
inc
mov
cmpl
jb
mov
sbb
mov
or
mov
xor
inc
add
mov
mov
mov
je
mov
mov
xor
jmp
aas
xor
es
hlt
and
sbb
icebp
in
sbb
mov
push
pop
jp
push
std
mov
xchg
cmp
mov
test
push
enter
nop
jbe
or
sahf
lahf
rorl
cmpb
xchg
mov
in
push
ljmp
dec
cli
popa
mov
push
fsubrs
push
push
sbb
push
loope
xchg
cmc
and
enter
pusha
lds
cmp
sub
or
mov
xchg
xchg
cltd
sahf
movsl
icebp
scas
pop
scas
pushf
jne
adc
jno
icebp
adc
into
movsb
mov
loop
mov
enter
test
or
stc
mov
push
loope
negl
sub
hlt
fyl2xp1
out
pop
cmp
lods
in
or
ds
fbstp
or
xchg
fstl
fsubr
adc
mov
bound
xchg
jnp
mov
xor
mov
cmp
pop
or
dec
inc
fnstcw
inc
mov
mov
mov
and
popf
pop
pop
mov
adc
leave
mov
rcrl
inc
enter
jo
mov
adc
cld
adc
jae
test
jbe
lret
mov
and
jno
out
adc
enter
and
bound
shlb
sbb
push
jb
mov
lods
cmpsl
sub
mov
rorl
inc
adc
push
outsb
mov
loopne
mov
pop
insb
cmp
mov
push
push
cmp
xchg
jb
repnz
stos
cmp
subl
mov
xor
jmp
in
push
aas
mov
xchg
ja
push
xchg
ds
push
mov
arpl
jo
and
inc
cli
xchg
pushl
hlt
push
jb
arpl
std
inc
xor
loopne
in
bound
and
push
inc
adc
int
fs
sub
sub
fcmove
add
jae
jno
je
add
clc
dec
add
bound
outsl
mov
pop
lea
repz
xor
enter
scas
dec
push
push
mov
dec
mov
je
lret
add
les
insl
popa
in
cmp
in
in
imul
pusha
xor
outsb
imul
mov
mov
popa
jle
dec
jp
loopne
mov
outsb
xor
push
adc
jl
imul
dec
lods
nop
adc
cli
dec
push
xchg
mov
sbb
xchg
ror
clc
cmp
pop
js
in
dec
push
xchg
ds
dec
lret
mov
mov
xchg
jo
test
cmc
test
mov
dec
dec
xchg
push
push
shll
push
push
sbb
and
test
addr16
mov
xor
or
cmp
xor
popa
pop
lea
and
xchg
addr16
roll
cmc
adc
pushf
mov
imul
mov
inc
mov
jl
sbb
pop
fnstsw
aam
mov
mov
xchg
dec
nop
sbb
hlt
ret
dec
sahf
inc
mov
das
xor
ret
lret
cs
add
out
leave
push
adc
pusha
pushf
cld
push
xor
inc
daa
dec
fdivrs
or
push
mov
jno
push
cmp
xchg
jmp
adc
pop
dec
dec
in
repz
mov
xchg
mov
lock
outsb
pop
mov
jmp
test
icebp
clc
out
sub
aam
cld
ret
jae
or
pop
or
push
or
cli
inc
jns
sub
repz
sti
loope
fs
jmp
movsl
fcomps
push
pop
mov
pop
cmp
ds
pop
adc
fs
adc
cmp
test
cmpsb
mov
test
jmp
pop
int3
fiadds
push
mov
lods
sbb
mov
mov
test
xlat
adc
mov
pop
jbe
loopne
repnz
add
add
test
lea
mov
or
mov
xor
fldt
xor
xor
mov
mov
xchg
xlat
pop
jae
mov
rclb
adc
jne
fisubrs
in
mov
ret
mov
lods
mov
push
xor
jae
jl
mov
aas
iret
dec
adc
or
cwtl
inc
inc
dec
dec
xor
dec
xchg
sbb
mov
aaa
pop
inc
dec
cmp
sbb
icebp
lods
movsl
mov
aaa
push
sbb
sti
dec
cld
stc
inc
sar
out
into
mov
jg
in
lock
mov
pop
scas
add
cmp
sbb
pop
incb
div
test
icebp
insl
iret
adc
notrack
jo
loop
lcall
hlt
mov
loope
sub
scas
push
cltd
popl
lds
xchg
or
mov
xor
pop
test
ljmp
xlat
xor
in
jns
dec
xor
add
pop
repz
cli
mov
inc
loop
arpl
pushf
rclb
test
dec
lcall
push
popa
push
loopne
jns
pop
lds
cli
sbb
push
pushf
dec
fstps
pop
pop
jnp
xchg
pop
shll
movsl
adc
fdivrp
mov
iret
inc
sti
jnp
or
jbe
sub
or
mov
popf
fisttpll
inc
pop
adc
out
scas
cld
jge
jnp
pop
dec
xchg
jmp
inc
test
mov
and
inc
pop
lea
push
jae
jae
mov
sub
pushf
fidivrs
fnstcw
insb
mov
jo
loopne
lods
out
xchg
loopne
cmc
repz
push
push
notb
mov
and
mov
inc
insl
inc
aad
mov
mov
test
mov
fisubrs
int3
push
push
pop
outsb
mov
scas
xchg
inc
jle
pop
or
cmpsb
mov
rolb
addr16
jnp
fnstenv
or
lret
repz
les
ja
fcompl
add
cli
jnp
js
fldenv
push
and
xor
cmp
rcll
inc
addl
in
aad
sub
aaa
pusha
dec
je
add
cld
cli
pop
test
sbb
xorb
fs
push
sti
repz
ja
cmp
stos
xchg
addl
stos
adc
nop
xchg
dec
sub
cmp
lret
and
lds
push
xchg
movsl
icebp
in
sub
lods
loop
xor
sbb
dec
mov
jnp
push
pushf
cmp
enter
xchg
pop
outsl
incl
cs
in
ja
lock
daa
sub
fucomi
sbb
jns
test
xor
mov
xchg
lahf
adc
adc
push
inc
shll
mov
and
cmc
hlt
jl
pop
mov
add
pushw
andb
sbb
je
mov
pop
or
lcall
sti
orb
xor
gs
mov
aad
jno
xchg
stc
xor
or
cmpl
push
add
std
xchg
fsubrs
movsb
xor
xor
mov
and
stos
xchg
fldcw
scas
rcr
test
addr16
xor
cwtl
mov
test
int3
sbb
fs
jge
fistpl
and
ret
inc
divl
mov
cmp
xchg
mov
dec
inc
in
dec
movsl
mov
jge
mov
leave
lcall
pushl
jl
mov
cli
mov
and
or
adc
loope
orl
adc
add
fidivrs
push
or
sbb
dec
jmp
aaa
jecxz
dec
subl
aad
xchg
sub
notl
or
adc
icebp
cmp
or
shrl
sub
xchg
mov
int
sbb
jo
fcomip
daa
test
mov
xor
push
lock
and
les
or
in
mov
imul
mov
call
dec
loopne
and
add
mov
fs
lods
jecxz
insb
ja
inc
scas
pushf
or
int
testl
es
cmpsb
xadd
xor
mov
jne
adc
xchg
bound
fistl
and
cmp
movsl
test
adc
sub
stc
fbld
mov
adc
in
stc
test
imul
lods
scas
cltd
jmp
and
fsubrl
mov
popf
out
add
ljmp
sub
outsb
int
in
xchg
pop
int3
and
insl
mov
fildll
mov
lods
xor
lcall
filds
adc
xchg
out
movb
sub
add
dec
jg
in
adc
imul
push
dec
lret
push
orb
mov
lea
add
cmpsl
stc
cmp
dec
pop
and
cmp
lds
call
sub
or
scas
stos
sbb
mov
inc
aaa
test
mov
gs
imul
out
ja
lock
fstl
or
mov
push
xchg
test
sub
enter
dec
lret
and
cmp
in
icebp
push
inc
sti
sbb
scas
lock
shrb
mov
jp
xchg
sbb
stos
jmp
int
test
mov
inc
cmp
add
insb
cld
lods
out
or
xchg
adc
ffreep
cmp
jo
test
or
jo
or
hlt
or
cmpsb
jbe
fimuls
pop
cltd
jmp
jmp
adc
ret
cltd
lock
inc
jp
xor
outsl
aaa
or
push
insl
aaa
push
cmc
cmp
dec
mov
mull
jae
push
xchg
adc
movsb
gs
mov
mov
xchg
test
jno
pop
das
and
popa
inc
in
int
xor
cmpsl
xchg
pop
mov
mov
jl
mov
push
sbb
lods
mov
ds
or
or
adc
add
sub
push
fidivrs
mov
xor
test
movsb
sub
ret
je
push
pop
insb
je
cmpsl
orb
push
aad
loopne
aad
and
push
dec
sbb
cmp
inc
mov
mov
and
popf
loopne
xchg
nop
push
arpl
xor
aas
push
popa
adc
out
lcall
je
scas
dec
test
or
lds
mov
add
inc
clc
arpl
pop
loope
push
sbb
sub
insl
sbb
mov
or
push
movsb
mov
lea
pusha
pop
dec
sbbb
xchg
xchg
mov
add
inc
imul
out
adc
cmp
test
das
shll
mov
test
fsubrs
or
add
cmp
xchg
leave
insb
in
xchg
sbb
lahf
or
sbb
jecxz
mov
push
mov
push
jb
imul
mov
xchg
mov
jmp
xor
mov
jo
dec
lahf
mov
rorb
pop
mov
dec
stos
inc
fnsave
cmp
jbe
es
mov
cli
xor
lds
cs
daa
shlb
lock
pop
andb
pop
arpl
jae
lret
xorb
dec
sarl
sti
stos
repnz
out
loopne
xlat
mov
jmp
jae
xor
jl
push
xchg
fstps
xor
or
stc
shl
jo
scas
ds
aad
lcall
rcr
cmp
sbb
jl
pop
pop
addr16
hlt
xchg
in
mov
scas
cmp
mov
xchg
divl
jl
xor
adc
sbb
or
insb
sarl
jnp
mov
jmp
push
pop
jb
push
and
in
sbb
sub
mov
mov
push
sbb
mov
cmp
adc
dec
and
sub
cmp
loopne
inc
ror
enter
xor
cwtl
adc
call
movsl
lods
stos
push
lret
idivb
cli
add
xor
shlb
inc
mov
xor
pop
inc
popf
data16
int3
mov
es
les
loopne
lret
fisubrl
std
jne
ljmp
adc
sub
repnz
cmpsl
xchg
mov
adc
lds
push
pushf
lods
or
jle
sub
into
les
andl
insl
cli
lds
pop
scas
fs
sub
push
sub
xor
jns
jno
or
xchg
mov
inc
sub
mov
pop
dec
aam
fisttpll
hlt
cmp
mov
sbb
cmp
sbb
xchg
iret
je
fstpl
sahf
sub
fdivr
lods
mov
cmpsl
or
ret
xchg
jle
bswap
dec
mov
xchg
cmpsb
xchg
xchg
clc
jno
cmp
push
or
lods
jecxz
lods
in
mov
push
loopne
cmpsl
add
sub
sub
cmp
xchg
xchg
xor
out
pop
data16
call
loop
xor
xchg
mov
xor
popa
sarl
lahf
xorl
mov
sub
and
sub
mov
je
jecxz
inc
pop
mov
pop
out
and
ljmp
arpl
je
jae
fimuls
enter
repnz
clc
insb
dec
aas
pop
in
jae
fdivrp
inc
pop
jns
lcall
add
bnd
ja
xlat
adc
lods
push
dec
cmp
mov
lods
jp
cmp
cmp
fsubs
out
outsl
jo
mov
and
out
das
pop
andb
or
xor
sbb
std
xchg
xor
xchg
xchg
lcall
sub
test
pusha
or
and
adc
push
or
adc
jl
dec
stos
out
dec
test
mov
insb
inc
xchg
mov
cmc
and
fadds
mov
pop
and
ret
inc
scas
into
das
push
rorb
popa
mov
inc
mov
outsb
inc
ss
data16
pop
in
and
dec
aaa
fcompl
movsl
arpl
int
fwait
loop
ljmp
out
inc
mov
sar
push
ss
xor
adc
cmp
mov
xor
mov
xor
cmc
or
mov
sbb
loop
out
jg
leave
fadds
or
lds
cmc
jl
fcmovnb
xchg
push
lret
fistl
in
xchg
sbb
mov
clc
in
daa
inc
xor
xlat
stos
pusha
jno
outsb
fs
jne
outsb
cli
sahf
addr16
adc
mov
sub
or
out
clc
mov
xor
or
mov
fsubrs
xchg
lods
ret
cmc
fdivs
sahf
push
xchg
xchg
pop
inc
aad
out
scas
fs
sbb
sub
xchg
mov
mov
mov
pop
mov
cmp
jmp
in
inc
mov
pop
mov
ret
mov
test
loope
int3
int
movsb
mov
lret
dec
pop
ljmp
sub
inc
pushf
mov
add
pop
ror
test
fnsave
push
mov
mov
out
arpl
mov
xor
shl
pop
dec
add
mov
fwait
xchg
mov
xor
jmp
jb
das
gs
in
add
xchg
cmp
shr
pusha
dec
jno
mov
dec
ja
jns
fisttps
push
in
cli
xchg
lahf
in
jae
add
data16
clc
ret
pop
mov
fimuls
cltd
rolb
or
addr16
outsl
dec
cmp
push
cmpsl
into
les
mov
bound
testl
movsl
jp
in
dec
popf
dec
jl
push
and
iret
adc
adc
lods
es
loope
aam
mov
orb
inc
std
inc
lds
pop
fcomps
jg
pop
mov
jmp
fistl
jp
aas
jg
mov
sahf
pop
push
push
call
sahf
lods
mov
int
aad
hlt
jl
xchg
mov
js
dec
jns
pop
js
adc
and
and
ljmp
xor
iret
and
pop
scas
ds
xor
sub
fldcw
or
xor
ss
in
fstpl
add
test
call
push
mov
sahf
push
test
dec
fidivrl
imul
cmp
iret
lods
pusha
mov
sarb
loopne
stc
jmp
mov
test
mov
jo
faddl
js
les
inc
in
mov
cmpsl
xcrypt-ecb
cmpsl
or
nop
repz
jb
in
idivb
mov
cmp
inc
push
mov
pop
es
out
mov
ror
aas
insl
add
jmp
pop
adc
jnp
mov
push
sbb
cmp
mov
insb
xor
insb
sub
pop
orb
orl
xchg
or
jecxz
cmpsl
inc
jmp
xchg
jns
stc
lret
test
jp
cli
clc
adc
out
push
in
pop
sbb
or
out
cld
push
inc
movsl
dec
mov
rorb
xchg
test
inc
int
pop
mov
mov
outsb
cmpb
cld
xchg
addl
inc
dec
jmp
clc
out
fldln2
cmp
bound
int3
lds
test
test
and
mov
sbb
xchg
scas
dec
shlb
jno
in
mov
sbbb
shr
outsb
xor
pop
push
push
jle
lcall
aad
data16
stos
mov
mov
and
cli
shlb
or
rcrb
jns
mov
mov
and
pusha
lea
and
sbbb
notl
imul
push
insl
idivb
fcomip
sbb
test
and
cmpsb
pop
xchg
fwait
mov
aaa
xchg
paddd
lcall
test
cs
testb
mov
data16
leave
dec
lds
call
gs
test
push
cmp
sbb
rorl
pushf
adc
outsb
in
push
js
cmp
add
dec
mov
cmp
or
test
jmp
pop
scas
adc
add
adc
outsl
mov
sub
cmc
cwtl
out
mov
dec
jnp
dec
mov
cmpsb
mov
out
fcomip
popf
sbbl
mov
stos
stc
test
fwait
dec
jo
data16
shrl
dec
daa
add
cmc
mov
mov
mov
dec
push
out
out
in
dec
push
push
popf
inc
lret
inc
arpl
jp
mov
daa
add
int
cmc
xchg
cmp
inc
ficomps
jb
ja
cmp
out
out
sarl
jne
adc
stos
or
mov
aad
and
inc
push
cmp
dec
dec
mov
push
jns
xlat
int3
sarb
push
mov
or
push
insl
pop
loope
xchg
xor
sbb
sbb
daa
xor
std
and
cmp
call
sbb
mov
cmp
sbb
cmp
scas
xchg
mov
push
out
or
test
sub
jmp
fcmovne
cmp
insl
pop
mov
pop
aaa
jo
jne
lock
cltd
inc
add
mov
pop
pop
and
add
mov
pushf
nop
int3
out
push
pop
mov
add
lret
pop
dec
xor
or
movzbl
add
add
iret
bound
andl
fdivs
xchg
adcl
pop
xor
out
lcall
in
sub
mov
outsb
cmp
fldt
jp
xchg
scas
insb
inc
inc
in
lcall
andl
add
dec
inc
data16
lret
inc
cltd
lret
inc
negb
mov
or
test
ja
movsl
mov
and
xchg
or
xor
cld
je
pop
in
adc
outsl
outsl
and
in
nop
mov
in
lods
ret
mov
and
sbb
mov
xor
inc
popa
fstpl
jb
cmp
push
inc
testl
adc
or
ret
cmp
cmp
adc
adc
dec
mov
adc
mov
and
inc
outsl
stos
outsl
inc
mov
scas
xchg
shrl
jno
pop
dec
inc
cmp
sbb
mov
mov
stc
pop
jmp
mov
test
lret
push
test
ret
mov
ljmp
push
xchg
pop
jmp
fcoml
fwait
mov
jge
xchg
xor
sti
sbb
jl
subb
popf
xor
xchg
rcll
repz
dec
add
pushf
inc
sarl
jbe
addb
jbe
pop
mov
sbb
push
into
push
jns
sbb
add
fnstcw
lds
cmc
out
int
add
push
fimull
inc
xchg
clc
fists
cld
out
shlb
mov
cmp
out
loopne
test
xor
loope
aaa
sbb
or
or
ficoms
aam
movsb
xchg
test
fsubrs
adc
or
or
pusha
fistpll
inc
pop
lcall
ljmp
fsubr
push
mov
push
inc
and
dec
outsl
movzwl
sbb
sbb
mov
aaa
idiv
popf
scas
cs
outsl
pusha
xchg
adc
fwait
sub
xlat
adc
push
jns
out
out
rorl
xchg
pop
lock
mov
jp
push
pop
out
lea
adcb
cmp
shr
stc
aad
mov
ja
lea
or
add
jge
cmp
movsl
rcrb
mov
mov
or
data16
cmp
nop
jae
dec
pop
lods
ljmp
mov
inc
jb
sbb
pop
xchg
pop
shrl
test
jb
pop
mov
mov
cmp
mov
mov
outsb
lcall
mov
mov
add
jne
pop
call
pop
mov
in
inc
push
push
cltd
sub
arpl
inc
xor
insl
movsl
sbb
cltd
mov
into
sub
pop
lret
push
lock
and
das
jns
in
jge
mov
out
aam
mov
pop
lea
inc
fs
nop
rclb
mov
xchg
stos
jo
idiv
add
cmp
jae
xchg
fbstp
cld
cwtl
pop
xor
and
sub
pop
es
aaa
ss
cmp
cmp
in
push
ret
sub
pusha
push
sti
cli
lret
fbld
or
pop
mov
icebp
add
mov
mov
vmptrld
in
enter
nop
or
nop
hlt
ja
mov
dec
mov
insb
aaa
push
xchg
xchg
sub
cmp
cmp
xorb
addl
push
mov
add
or
ljmp
dec
xchg
lods
push
xchg
and
fwait
sbb
scas
mov
incb
sbb
sbb
mov
jle
inc
sub
out
xor
outsb
insl
pop
add
jns
xor
pop
sti
inc
fildl
lret
stos
dec
mov
xchg
push
xor
xor
sbb
dec
call
arpl
cmpsb
aad
popf
pop
repz
out
jae
cmpsl
sahf
repz
insl
sub
cmp
adc
aas
adc
in
mov
ljmp
inc
mov
dec
push
clc
cld
sub
mov
js
rcl
std
sbb
mov
jge
jmp
xor
loop
outsb
xchg
loope
mov
xchg
stos
mov
fwait
jb
orb
das
les
cmp
outsb
cs
xchg
scas
adc
cli
ficompl
adc
outsl
lret
fwait
sbb
jmp
xchg
out
lcall
sub
ljmp
inc
testb
inc
in
in
dec
popa
pop
aam
int3
adc
mov
ret
das
mov
pandn
push
repz
dec
cld
pusha
push
dec
stc
ficoml
loope
xor
in
push
mov
insl
adc
xor
decl
mov
ret
sub
and
or
push
sahf
mov
pop
mov
lret
stos
std
push
xor
aam
or
clc
sub
daa
xorl
mov
push
pmullw
add
push
in
sti
out
neg
hlt
xor
idivl
ret
mov
push
mov
pop
movzwl
xchg
out
data16
inc
repz
dec
mov
std
jmp
cmpsl
ss
or
add
sahf
in
sbb
in
jge
jns
xor
pop
stos
ljmp
imul
imul
xor
xorb
rcr
pop
mov
push
frstor
fsubrl
jge
push
inc
xor
push
dec
mov
or
imul
lcall
mov
mov
jle
scas
mov
mov
add
test
out
test
sbb
jae
scas
inc
std
mov
les
lock
and
mov
cmp
mov
ja
xchg
ficompl
push
mov
in
lods
test
mov
sub
jmp
inc
jecxz
loopne
adc
ds
aam
and
cltd
daa
popa
dec
sub
add
ja
and
iret
cmp
andb
jle
jo
sub
push
repz
fisubrl
inc
sbb
xchg
cld
enter
inc
and
ljmp
movsb
and
fcmovnu
movsb
xor
and
icebp
scas
jns
jge
xor
xchg
fidivl
imul
call
popf
sub
mov
cmp
daa
es
loopne
loop
in
jle
leave
pop
push
add
adc
cmp
sbb
and
mov
aam
pop
mov
mov
push
jg
std
or
push
jle
dec
mov
fimuls
dec
fmul
pop
and
sbb
ja
in
xor
sti
cmp
ret
push
cmpsb
mov
insl
je
push
mov
mov
cltd
movsb
and
mov
xchg
jb
xorps
xor
das
mov
adc
int
inc
dec
mov
dec
mov
out
xor
xlat
sbb
into
dec
stos
jecxz
clc
pop
mov
rcrl
out
repnz
cltd
leave
sbb
inc
pop
cmp
cmc
mov
mov
cmp
add
shlb
fdivp
and
mov
push
jg
dec
mov
daa
xor
lock
xchg
add
sar
jns
insb
into
in
adcw
cwtl
sub
enter
adc
imul
aas
and
pop
cwtl
pop
jo
mov
or
insb
cli
sub
xchg
adc
arpl
mov
jno
scas
or
inc
subl
inc
sub
scas
sbb
lods
leave
fmul
daa
pop
nop
mov
mov
addb
fcompl
jle
lret
mov
cmp
push
xchg
or
movsb
mov
mov
and
cli
int
testl
pop
dec
pusha
sbb
dec
mov
inc
inc
test
mov
sbb
ret
clc
jne
aaa
jne
xchg
mov
sub
push
cmpl
test
push
int3
in
mov
test
adc
and
sbb
cmpsb
dec
icebp
push
in
adc
dec
xor
dec
adc
pop
fcmovbe
sub
pop
push
push
data16
and
aad
mov
sbb
xchg
shlb
aam
ss
dec
push
pop
jge
jo
mov
lret
leave
test
xor
out
enter
sbb
mov
adc
lods
es
js
jmp
and
or
pop
lea
repz
push
push
mov
movb
movsl
pusha
arpl
scas
cmp
xchg
dec
push
and
inc
jecxz
xor
inc
movsl
loope
add
push
addl
adc
sbb
jp
mov
test
mov
fisttps
pop
xlat
jmp
ret
fs
adc
dec
xor
sbb
jne
fbstp
mov
xchg
loope
pop
push
dec
ret
scas
aas
xor
pop
stos
les
xor
pop
in
jne
jge
bound
xchg
rcl
push
shlb
repnz
shll
in
jp
pop
jp
jae
and
jecxz
dec
loop
rcll
aas
sbb
xchg
cmp
shll
add
lcall
lcall
sub
mov
cmpsb
push
or
lret
pushf
and
mov
rdmsr
jns
sub
cmp
clc
cmp
mov
in
or
jg
inc
call
push
and
call
xchg
cmpb
inc
mov
mov
test
push
stos
jmp
sub
dec
dec
or
or
add
jb
mov
sbb
pop
mov
xchg
push
scas
mov
jbe
xchg
and
and
sub
nop
and
mov
sub
sub
push
push
movsb
jmp
enter
mov
jecxz
lcall
in
pop
mov
cwtl
mov
adc
gs
dec
cmc
add
sbb
xor
xchg
aad
hlt
mov
adc
into
mov
lret
daa
sbb
repnz
and
dec
lret
pusha
and
sbb
jbe
push
jb
mov
sti
enter
addb
imul
jno
stos
fwait
lods
leave
lcall
test
dec
int3
adc
cmp
aad
mov
pop
mov
ja
ja
mov
mov
das
scas
adc
add
cltd
jecxz
les
je
ficoml
push
xchg
imul
or
push
cli
pop
cmc
mov
mov
or
div
mov
xchg
loope
xchg
pop
test
inc
popl
xor
add
mov
adc
lret
scas
pop
push
dec
jecxz
pop
sbb
and
and
dec
jnp
imul
aam
lock
jmp
or
test
or
inc
mov
addr16
sub
mov
push
lock
sub
mov
xor
mov
out
pusha
cmpsb
pop
ja
adc
adc
pop
pop
aad
xor
lret
aaa
or
dec
xchg
mov
in
inc
and
iret
mov
cmpsb
ret
adc
pop
int
in
jmp
inc
pop
pop
mov
jo
xchg
pop
test
or
hlt
xchg
pop
mov
lcall
out
dec
out
mov
push
les
test
leave
or
insb
out
xchg
jo
xchg
ljmp
lods
rcll
jmp
daa
push
push
test
dec
stc
inc
ficoml
sbb
fidivrs
cwtl
mov
test
xchg
adc
mov
pushl
add
jae
rorl
aad
call
push
push
filds
xor
xchg
inc
xchg
sti
out
jmp
js
and
adc
adc
stos
add
shr
call
hlt
testb
rcl
cmpsb
and
jp
and
inc
add
movsb
popa
pusha
sahf
in
cmp
stos
loop
shl
mov
cmp
test
outsl
mov
fcomps
fwait
mov
pop
jmp
ret
jne
cmpsl
jnp
dec
cmc
jb
insl
push
mov
loope
pop
pushf
loope
dec
mov
sub
into
jbe
outsb
jge
or
outsl
pop
cmpsb
adc
add
subb
adc
push
xor
push
xchg
lods
jns
mov
push
sub
std
ss
sub
test
rcr
push
mov
outsb
and
mov
movsl
stos
dec
jns
cmp
std
dec
add
xchg
adc
pushf
push
mov
ljmp
inc
adc
dec
cmpsb
mov
ds
adc
xchg
push
or
mov
sahf
pop
in
mov
out
add
gs
orl
sub
sub
adc
xor
movl
cmpl
je
cmpl
jne
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
and
mov
mov
movl
add
andl
imul
mov
mov
mov
add
subl
or
mov
mov
mov
and
mov
movzwl
sub
mov
andl
add
xor
sbb
mov
and
mov
mov
addl
add
and
mov
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
call
cmpl
jne
mov
inc
mov
jmp
sub
mov
lea
sub
mov
sbbl
mov
incl
mov
addl
sub
adc
add
subl
mov
mov
orl
xor
addl
add
movl
jne
movl
jmp
andl
jmp
xor
add
inc
mov
cmpl
jae
cmpl
jne
push
push
push
pushl
pushl
pushl
call
cmpl
jne
mov
inc
mov
jmp
mov
mov
add
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
call
jmp
mov
subl
xor
xor
sub
sub
xor
mov
mov
movl
jmp
pop
loope
mov
jnp
ror
scas
pop
cmc
dec
dec
pop
mov
jae
jp
pop
jp
icebp
dec
xor
int3
int3
add
and
dec
sub
sti
test
and
mov
xor
jl
and
fcom
mov
sarb
cmp
add
mov
scas
xchg
or
lock
cmp
pop
mov
cmp
js
sbb
bound
mov
repz
lcall
add
stos
fstl
outsb
sbb
ret
fwait
adc
jp
pop
adc
and
add
pusha
push
rorb
popf
fwait
call
or
push
fmul
out
or
sub
fnstsw
pop
adc
dec
rcrb
cmp
movsb
mov
mov
or
sub
aas
xor
adc
jge
repnz
icebp
lret
pop
mov
pop
jne
cltd
test
push
test
pop
das
cmp
in
mov
mov
sub
rorl
dec
dec
push
sbb
mov
pop
sub
xor
repz
ret
jo
scas
sbb
and
cltd
mov
inc
fsts
sbb
enter
ja
mov
lcall
bnd
orb
dec
pop
das
lds
into
into
adc
jp
sub
mov
pop
jmp
dec
hlt
in
jnp
repz
jne
lahf
ret
je
shlb
out
sub
in
xor
movsb
imul
int
and
in
sbb
faddl
test
mov
add
hlt
and
push
addl
inc
fsubl
shl
sbb
out
sub
call
pop
sbb
lea
push
mov
inc
xchg
call
test
sub
filds
jne
mov
sahf
inc
aam
rcl
xchg
int
fwait
test
pushf
mov
mov
xor
xor
int
mov
test
or
movsl
mov
iret
push
leave
scas
mov
pop
cmpsb
fwait
arpl
xchg
cmp
fsub
cmp
pop
cmp
inc
inc
or
mov
sbb
shlb
pop
adc
jo
xchg
fdivl
loope
mov
cmpsl
xorb
mov
mov
dec
add
shll
test
scas
dec
dec
int3
outsb
fcoml
loopne
mov
and
movsl
cmp
pop
sti
xor
vpsubq
int3
jo
push
insl
es
push
orb
es
cmpsb
stc
mov
cmpsl
mov
fsts
inc
or
and
pop
call
test
lahf
push
aaa
ss
mov
mov
mov
mov
outsl
adc
cmp
fisubl
lret
bound
push
push
enter
xor
mov
dec
jno
movsl
fstps
lret
ret
ljmp
sub
mov
js
xchg
daa
call
xor
out
lahf
cmpsl
inc
dec
xorl
inc
or
xor
push
aas
repnz
xor
jnp
fbstp
xlat
push
std
push
std
fistl
mov
pop
and
fsubs
push
xchg
add
pop
sub
jmp
les
mov
popa
cmp
iret
mov
sarb
xor
popa
lret
sub
sub
xchg
rcr
bound
cmc
push
repz
pop
jge
enter
add
inc
cli
dec
in
rcll
idivl
jb
jne
test
ja
ficoms
cmp
sbb
mov
push
and
out
mov
fmull
out
xchg
aad
aaa
add
popa
xchg
sti
fstps
mov
jle
pop
mov
scas
mov
in
test
in
ljmp
pop
mov
pop
shlb
fwait
sbb
dec
sub
das
sarb
outsb
adcb
notb
leave
push
xchg
movsb
in
or
iret
rcl
icebp
inc
mov
call
pop
push
add
and
push
gs
jmp
sub
loope
fmuls
sbb
movsb
popf
addr16
jecxz
fisttpll
loop
outsl
add
inc
pop
dec
scas
mov
out
jno
mov
loopne
loop
pop
clc
ret
fsubl
das
je
push
dec
popa
sahf
insl
clc
in
pusha
dec
inc
in
xlat
cltd
inc
imulb
or
mov
sahf
rorl
lret
jno
gs
ret
imul
add
push
mov
mov
lret
es
jne
pusha
mov
push
sahf
push
test
sub
add
rclb
xchg
jne
mov
sahf
inc
dec
mov
aad
iret
cmpsl
sub
mov
test
jae
fnstcw
lods
jnp
out
mov
out
dec
fcmovb
bound
daa
lock
stc
lret
cmc
adc
jo
push
fnstsw
mov
into
add
lods
mov
xchg
jge
cmc
pop
test
lods
xchg
sbb
rcrl
pop
lds
pop
stc
sub
repnz
ret
aaa
mov
call
push
jnp
sbb
test
xor
fisttps
das
inc
inc
insb
mov
sahf
push
andnps
cmp
add
mov
scas
inc
inc
popf
xor
aas
icebp
mov
mov
js
lcall
or
mov
fisubs
leave
dec
and
add
ret
sub
inc
aam
dec
test
repz
push
dec
or
dec
shlb
pop
cmpsb
jno
sub
in
mov
lds
test
lods
xorl
nop
mov
jle
data16
and
ret
mov
frstor
fdiv
and
dec
mov
xchg
xchg
imul
mov
outsb
jae
pop
push
cmp
loopne
mov
mov
das
call
ret
dec
stos
int
mov
imul
clc
std
mov
stos
psrlw
pop
lret
cmp
jb
out
push
xor
fwait
movsl
jb
pusha
lcall
cmc
inc
clc
mov
jp
scas
add
xchg
sub
loop
push
mov
insb
mov
mov
fwait
orl
ldmxcsr
inc
push
loop
ret
cmpsb
test
fildl
jecxz
mov
sahf
push
es
scas
mov
aas
pop
cld
pop
lret
ss
pop
loopne
and
movsl
mov
stos
ljmp
mov
dec
and
xor
xor
rol
cmp
jmp
adc
data16
jmp
or
hlt
ret
mov
cmpl
adc
out
jae
push
lds
or
adc
out
cltd
stc
push
ja
test
dec
int3
push
jnp
leave
loop
popa
dec
popa
pop
lods
lret
adc
rcrl
adc
and
mov
mov
xor
xor
fdivl
adc
les
pop
insl
scas
fbstp
loopne
and
addb
enter
mov
pushf
in
popf
mov
adc
shl
sbb
aaa
jae
pushf
lods
ds
fcmovnbe
cmp
push
outsl
loopne
in
cmp
mov
fsubl
pop
xor
shrb
push
mov
push
dec
add
shrl
add
mov
pop
inc
jae
cmpsl
push
and
popf
push
mov
mov
mov
enter
les
mov
push
clc
xchg
cmp
mov
les
cmp
jae
adc
add
mov
mov
xchg
jnp
jle
repnz
push
sahf
sarb
in
pop
xchg
push
inc
subl
lods
mov
dec
stos
mov
and
dec
outsl
pop
mov
and
loope
cs
xor
fmuls
sti
jg
std
repz
xchg
sbb
add
or
es
jo
xor
pusha
jnp
out
cmpsl
rorl
push
inc
movsb
aaa
push
jne
jp
push
scas
outsl
mov
fists
xchg
xchg
test
cs
sbbl
ljmp
adc
fisttps
and
jecxz
dec
in
aam
sbb
pop
mov
and
add
cmpl
push
mov
add
out
shr
into
jle
mov
sbb
into
lret
imul
adc
aam
cmc
xchg
mov
stc
push
shll
lret
dec
mov
cmp
pop
icebp
es
mov
adc
jmp
test
jp
fists
fstpl
pushf
fsts
pop
aaa
lods
mov
mov
mov
and
jns
lahf
js
jo
mov
shll
jmp
sub
shlb
pop
sub
add
jecxz
push
arpl
das
xor
out
call
scas
xor
aam
add
mov
outsl
call
jb
or
and
pop
fcmovnbe
add
xorl
adc
jecxz
push
shrb
aam
sub
sbb
lahf
daa
arpl
clc
mov
mov
xorb
clc
dec
mov
mov
int
into
sbbb
jle
inc
in
jns
adc
cmp
je
xchg
sub
pop
out
lds
mov
test
add
xchg
shlb
sub
mov
or
pop
lret
pop
and
imul
shrb
lock
popf
call
mov
call
fs
jno
movsl
cmp
dec
in
dec
sbb
scas
loope
jg
mov
sarl
xchg
add
or
aad
jg
ret
rcl
movsb
stos
int3
push
inc
int3
mov
lods
xlat
pusha
pop
add
outsl
mov
cwtl
idivb
call
fnstsw
int3
jle
bound
adcl
loopne
mov
andl
inc
mov
inc
or
inc
test
movsl
cmp
xlat
adc
andb
enter
movsb
movsl
int3
call
push
fists
enter
inc
test
imulb
ret
or
stc
cmp
cmc
call
arpl
mov
fst
push
pop
dec
fcomps
and
dec
in
in
sub
fmul
cmpxchg
inc
sbb
cmpsl
xchg
int3
sbb
mov
ret
rcrb
cmpsl
pusha
aas
xor
mov
xlat
pop
inc
mov
adc
imull
adc
pop
pop
std
or
xlat
gs
out
pushf
mulb
sub
loopne
int3
test
dec
xchg
lcall
lods
pop
ret
call
ficompl
fisubl
cmp
mov
sbb
aas
xchg
cmp
bound
cmc
and
sti
imul
movsl
xchg
cmp
and
jp
dec
stc
out
in
jne
sbb
fildl
push
cmp
add
sbb
clc
mov
mov
dec
add
cmp
ret
testb
cmpl
inc
repz
lret
lods
in
xor
cmp
cmc
cmp
loop
div
inc
arpl
inc
lock
lahf
enter
dec
xchg
stc
out
xchg
sti
cmp
mov
in
outsl
mov
cmpl
mov
aad
sbb
sub
daa
testb
pop
xchg
dec
movsl
pop
dec
sbb
cmpl
push
and
add
nop
mov
dec
repz
or
pop
cmp
bound
daa
mov
rcl
mov
out
ret
add
push
adc
icebp
mov
outsb
mov
fcoml
fstpl
inc
testl
mov
sub
loop,pt
mov
add
lcall
out
dec
test
fidivl
and
gs
xchg
adcl
jp
or
das
rclb
and
cwtl
fistps
sarb
cmp
insl
mov
sbb
dec
out
arpl
mov
cmp
lret
cmp
ret
rclb
add
sub
sbb
adc
mov
stos
in
mov
lahf
pop
xchg
imul
add
sbb
dec
daa
adc
mov
popa
pusha
jmp
mov
gs
jo
jo
stc
inc
inc
adc
stc
push
scas
xor
sub
testl
pop
lock
loopne
enter
scas
pushf
test
xchg
bound
stc
cmp
ss
and
pop
jnp
mov
aad
adcl
into
fmull
imull
shll
push
push
and
add
cwtl
push
sub
je
mov
outsl
repnz
jmp
repnz
fisttpll
fwait
sbb
jecxz
xor
dec
sbb
sub
daa
inc
out
insb
ja
sbb
out
cmp
fwait
adc
xchg
movb
push
mov
cld
cmp
cld
add
mov
fmuls
andb
pop
add
xchg
in
ds
clc
fwait
jo
cmp
fdiv
orb
jl
clc
imull
mov
mov
sub
dec
sub
shlb
frstor
push
pop
sti
cmc
sbb
stos
fdivrl
imul
ja
pop
push
lea
cmp
repz
loop
or
xchg
outsb
repz
jge
or
in
inc
dec
lret
and
cmp
movaps
popa
fidivrs
mov
inc
pop
xor
add
jl
jne
cmp
popa
push
push
enter
popa
test
pop
xchg
cs
rcl
xor
loope
das
pop
cmp
ret
push
bound
adc
or
movsb
mov
sbb
mov
outsb
aaa
dec
cmpsl
pop
mov
fistl
insl
adc
cmp
scas
outsb
pop
add
addr16
faddl
icebp
sub
stos
push
push
testl
mov
jne
sbb
stos
jns,pn
xor
xlat
outsb
or
dec
sbb
mov
aad
push
mov
push
sbb
adc
add
lds
mov
jle
lret
call
push
nop
push
push
and
iret
push
cmp
insb
push
jno
cmp
xor
cmc
orl
outsb
pusha
jnp
add
stc
scas
sbb
mov
imull
mov
pop
mov
int3
pop
xchg
out
xchg
cmp
cltd
and
leave
add
decl
and
fdivs
mov
sub
and
mov
mov
movsb
jbe
out
ret
dec
jne
arpl
scas
dec
movsb
sbb
repnz
xor
push
popa
lcall
jp
mov
stc
mov
daa
push
lods
dec
divb
out
cmpsl
and
or
mov
idivb
cmpsl
pop
lcall
int3
out
dec
mov
sub
or
jge
outsl
sbb
and
xchg
inc
das
push
add
imul
pop
sarl
cltd
pop
insb
adc
xchg
adc
lcall
jmp
jo
int3
xchg
ja
in
mov
xchg
xor
outsb
mov
popf
mov
scas
jo
push
and
imul
ret
stos
call
pushf
aas
inc
add
loopne
push
cmc
pop
xor
sbbl
pushf
fistpl
je
jmp
stos
jp
cmc
pop
inc
outsl
push
inc
imul
ljmp
popa
or
xchg
jl
or
pop
cltd
mov
std
test
sub
jb,pn
jle
push
push
arpl
and
pushf
ja
sti
dec
int3
cmc
arpl
into
lea
add
dec
pop
cmpsb
cld
dec
or
xchg
lds
adc
fistl
scas
dec
mov
lods
ss
sub
ja
inc
inc
inc
scas
cmp
jp
sbb
lcall
dec
lods
pop
xchg
scas
mov
jge
sbbb
idivl
and
leave
ret
movsl
ds
push
dec
xor
dec
outsb
cmp
mov
or
shlb
fisubrl
cld
cltd
mov
mov
stc
cmp
out
xchg
jg
jae
sbb
sub
mov
sub
cmpsb
test
sbb
mov
test
or
call
fmuls
and
and
into
sbb
dec
stc
mov
xor
std
sub
add
inc
aam
addb
in
inc
dec
pop
lods
xchg
xchg
out
sbb
stc
test
scas
mov
out
mov
jnp
outsl
dec
add
xchg
cmpsb
mov
jge
out
dec
sbb
ret
mov
and
pop
js
push
lret
cmp
adc
std
xor
pop
in
pushf
sbb
mov
push
jg
out
dec
ficoml
sub
push
jle
ja
cwtl
iret
fstps
mov
cmc
mov
ret
nop
sbb
mov
incl
pusha
in
sbb
enter
inc
pusha
rolb
lea
mov
mov
mov
lahf
dec
popf
test
jo
lds
das
rclb
push
and
mov
in
popf
dec
mov
adc
int3
inc
je
sbb
jbe
xchg
or
maskmovq
mull
sbb
cld
int3
xor
aaa
and
je
js
xor
lret
and
nop
lea
lret
pop
pop
push
stc
push
push
jb
cmc
push
mov
xlat
jge
push
fsts
add
jle
mov
jns
pop
or
mov
cmp
xor
lret
or
into
dec
bound
pop
sbb
je
call
xor
inc
lret
sub
jns
into
inc
jmp
out
gs
pushf
in
in
jno
fcmovbe
mov
arpl
aad
dec
mov
adc
and
das
popa
sbb
sub
sub
data16
adc
mov
andb
fildl
inc
adc
subl
adc
insl
xor
jae
out
pop
xlat
je
jb
test
mov
ret
or
idivl
xchg
hlt
push
cli
test
dec
cmpsb
mov
adc
mov
push
int3
fbld
fcmovnbe
mov
adc
sub
push
dec
stos
xchg
add
inc
xor
test
cs
adc
nop
xor
jne
jbe
rol
mov
stos
inc
mov
xchg
xor
outsl
cmpsl
pop
movsl
mov
fcom
stos
xor
adc
jecxz
dec
xchg
in
jnp
aad
xchg
pop
fistpll
daa
xchg
adc
fstpt
push
sarb
pusha
cmpsb
push
sub
idivb
js
pop
and
xchg
movsb
jge
mov
mov
jne
stc
lcall
mov
scas
jno
xor
mov
jp
int3
add
dec
push
popf
and
push
es
loope
sbb
pop
popf
roll
xor
loope
ja
push
cmp
adc
int
add
je
repnz
inc
xor
bswap
jno
cltd
stos
inc
inc
js
sahf
xchg
test
icebp
dec
pop
mov
addl
xchg
andl
jle
rcr
repz
add
fisttpll
cmp
test
inc
push
lods
ficomps
adcl
mov
cmc
dec
mov
add
cli
test
dec
divb
addr16
leave
cmp
push
jno
add
pop
fldt
std
fwait
into
lcall
insl
push
stos
shlb
lret
lret
ljmp
hlt
inc
daa
iret
mov
pop
cmp
add
push
repz
jecxz
lcall
fidivrs
pop
fnstenv
xor
xor
push
adc
xchg
int
inc
or
inc
jae
push
push
data16
inc
pop
adc
ja
out
sbb
push
push
xchg
fldl
and
std
shr
sub
push
insb
das
fld
add
sub
out
inc
fs
xchg
adc
mov
lea
sti
in
xchg
fldl
pusha
adc
sahf
aam
mov
jle
mov
vorps
repz
jge
pushf
jbe
mov
add
add
test
add
mov
sub
xor
inc
inc
ds
loope
jmp
mov
loop
jmp
ret
fdivrp
out
subb
mov
mov
cmp
push
push
outsb
inc
jl
xor
lret
out
lcall
lock
sbbb
test
and
fidivs
cmp
jge
aaa
ltr
dec
js
xor
sbb
adc
xchg
mov
fists
mov
push
sbb
movsb
xchg
shrb
aas
cmc
dec
sub
mov
bound
sbb
insb
and
fsubl
punpckldq
jl
aaa
mov
xchg
inc
mov
fld
ja
mov
mov
lods
jnp
cwtl
mov
push
stos
or
loopne
mov
jp
mov
and
ficomps
pop
sti
cmp
iret
cmp
push
outsl
push
fldenv
out
sub
sbb
dec
xchg
push
xchg
jne
sti
stos
dec
xor
mov
and
xchg
xchg
mov
inc
and
mov
ret
jns
cmp
movsb
cmpsb
lcall
mov
incb
and
cmpsl
adc
test
xchg
insb
outsl
xchg
push
cmpsl
je
fwait
rcrb
movsb
fildl
cmc
rclb
je
jns
ret
test
xchg
fwait
je
fwait
sbb
loopne
in
sub
add
add
jns
shll
jg
ret
jno
ret
xor
mov
xchg
shll
push
insb
fs
push
lods
cmp
cmp
mov
pop
jae
insb
outsb
jl
daa
call
push
xor
jae
sbb
mov
mov
dec
jb
mov
sub
loope
ret
push
inc
add
clc
outsl
or
pop
dec
push
xchg
mov
and
sub
fbld
sbb
mov
loopne
xor
test
mov
xchg
jecxz
mov
clc
mov
std
imul
aaa
mov
and
adc
mov
icebp
stc
jecxz
popf
dec
jno
cmp
adcb
test
es
addr16
js
out
jbe
and
jg
outsb
push
out
fnstsw
pop
push
ror
lret
jo
bound
jecxz
push
pop
mov
and
push
icebp
sti
dec
or
movsl
out
insb
jne
inc
pop
add
cmp
mov
pop
pop
fwait
mov
inc
lret
mov
fwait
ds
nop
std
fwait
icebp
loope
enter
jle
mov
fstps
cltd
das
jnp
add
mov
loop
mov
jg
cmp
cmp
xchg
dec
dec
inc
rorl
inc
adc
add
xchg
pop
xchg
repnz
xor
mov
out
jae
inc
lds
cwtl
stos
xchg
add
xor
ljmp
jmp
fs
sbb
mov
xor
pop
xchg
in
xor
xchg
rorb
push
cmc
dec
xchg
jle
and
outsb
mov
call
ret
xor
pop
addb
xchg
inc
in
add
dec
cwtl
mov
lret
pop
int
loope
xor
div
lea
cs
ficoml
ljmp
pop
xor
ret
mov
add
out
cmpb
pop
xor
pop
mov
enter
pusha
add
test
cs
iret
lcall
shll
dec
lret
jb
or
fcmovnb
sbbb
rcrl
repnz
or
fdiv
in
add
fsubrp
cmp
fisubl
and
adc
int
jg
inc
aam
jo
and
rorl
mov
push
or
dec
pusha
les
sti
pop
adc
push
aam
and
mov
cmp
std
jge
outsl
add
cmp
push
aam
hlt
cs
sbb
imul
icebp
test
jno
and
dec
daa
and
xchg
xchg
stc
jb
ds
aas
push
sbb
jp
movsl
jns
rcr
cld
out
test
outsl
popf
push
sahf
mov
lret
aad
movsl
and
sbb
cmpl
ja
les
lahf
sbb
jmp
mov
loop
xchg
clc
pop
xchg
jp
pop
shll
mov
push
adc
scas
push
xchg
sub
xchg
and
jb
sbb
cwtl
sti
adc
lds
pop
jae
sbb
por
or
inc
icebp
mov
sub
std
addr16
push
sub
shll
and
sub
xor
fisubrs
jmp
mov
sahf
xchg
sbb
jns
out
adc
out
loope
fidivs
subb
mov
jl
and
test
sub
insl
mov
outsb
xor
test
scas
insl
cli
je
addl
bound
adc
insb
lods
maskmovq
negl
repnz
push
mov
mov
enter
cmp
cli
mov
jmp
shlb
jo
rorl
out
mov
dec
adc
iret
cmp
and
orb
fs
push
test
cli
cmc
and
jae
ja
jp
mov
push
stos
iret
add
push
daa
push
test
insb
jl
jbe
pop
outsl
jno
or
gs
mov
fcomi
lea
jne
mov
fidivs
inc
out
and
mov
daa
arpl
pop
jge
lods
dec
xchg
gs
std
mov
xchg
jno
sub
out
cli
inc
push
dec
xor
xor
mov
jmp
adc
jnp
jmp
loop
add
add
lods
aas
sbb
mov
cmpsl
inc
pextrw
mov
movzbl
pop
loope
pop
push
fs
add
and
fcoms
outsb
mov
out
fwait
rcrw
data16
mov
sahf
pop
or
sbb
sbb
clc
les
jmp
push
lret
mov
add
cmp
and
lahf
push
mov
xchg
loopne
xor
lret
sti
stos
sub
pop
clc
jns
mov
sbb
shl
mov
or
jl
push
fucomi
movsl
cmc
outsb
fwait
negb
outsb
pop
movsb
mov
cld
push
cmp
repz
pop
cmp
ja
scas
sub
mov
ret
insb
ret
fnsave
popf
sbb
rorl
push
mov
mov
pop
gs
add
roll
cwtl
inc
pop
ret
scas
ja
in
add
and
sbb
das
inc
sub
lods
mov
jmp
push
pop
jp
cli
outsl
repnz
lret
mov
sbb
cmp
es
mov
push
stos
test
in
mov
inc
push
dec
iret
xchg
cmp
pushf
jge
push
in
mov
bound
insl
and
shl
hlt
test
sahf
ret
leave
loop
mov
das
and
pop
out
les
icebp
pop
pop
mov
inc
or
push
lds
sub
fistps
arpl
xchg
stc
push
imul
outsl
gs
lds
jl
pop
mov
lock
dec
out
data16
jmp
shr
pop
call
or
mov
in
out
mov
stc
rcll
push
shl
mov
add
add
shll
push
cmp
hlt
sub
and
test
or
mov
sub
cmp
addb
stos
out
test
push
mov
mov
fldz
icebp
js
aad
add
xchg
jg
or
les
mov
pop
add
and
pop
out
jge
subb
or
daa
gs
pop
fiaddl
pop
mov
int3
stc
loopne
mov
rorb
xor
fwait
lds
jge
rcll
add
adc
in
pusha
inc
movsl
mov
ds
loop
das
in
stc
adc
popa
inc
inc
jnp
push
inc
stc
mov
xchg
dec
int
cli
shrl
push
mov
pushf
sbb
sbb
aaa
or
sbb
imul
hlt
stos
jmp
dec
js
out
sbb
mov
jno
fidivrs
std
jg
call
jp
push
mov
mov
int3
add
popl
cmp
and
jo
adc
es
pop
ss
inc
repnz
std
in
bound
aas
pushf
jg
inc
lcall
inc
push
ja
ss
movsl
cmpsb
test
in
stos
push
aad
das
dec
mov
pop
pop
movd
mov
cli
pop
sub
push
xor
dec
ljmp
imul
shll
cmp
mov
bswap
add
jmp
fiaddl
and
mov
loopne
movsb
xchg
gs
cmp
aas
insl
mov
cmp
xchg
lods
or
fwait
inc
js
jg
scas
movsl
sbb
mov
mov
mov
pop
js
repz
mov
mov
into
mov
iret
adc
out
dec
ret
fwait
and
mov
inc
pop
cltd
mov
repz
push
cmc
popf
cmp
clc
scas
xor
fsubrl
cld
cmp
pop
js
mov
pop
in
jbe
mov
shlb
jmp
adc
movsb
insl
loop
sarb
icebp
and
lods
mov
mov
xchg
inc
sbb
std
icebp
xchg
in
jl
fisttps
or
inc
xor
pop
sbb
inc
lock
lret
hlt
dec
push
pusha
xor
mov
daa
fisubs
push
lea
mov
mov
sub
or
mov
or
mov
fidivs
aaa
mov
cmpsb
cmpsl
pop
jle
cmpsl
cmp
jge
insb
dec
fcmovne
xor
push
fst
inc
push
jae
xchg
es
sub
lock
ljmp
popf
popa
pop
cltd
jae
fstps
fidivs
scas
xor
push
popa
mov
adc
sarb
mov
fsubp
jne
jmp
jmp
iret
or
and
pushf
pop
jbe
inc
data16
cmp
in
mov
dec
add
pop
dec
mov
movsb
mov
cmp
xor
mov
inc
shll
jmp
sub
movsl
imul
pushf
mov
sbb
out
mov
jle
pusha
xchg
push
xlat
jnp
cmp
cld
test
fldcw
notb
shrb
push
fst
dec
inc
les
pop
out
scas
ja
fiadds
lods
add
in
lods
repz
adc
movsl
adc
andl
and
mov
into
mov
and
es
xchg
fstpl
jl
imul
out
call
jno
sbb
pop
pop
and
pop
out
dec
imul
test
lea
cmpsb
out
aaa
or
push
add
loope
cltd
adcl
adc
test
jecxz
jns
jg
and
xor
inc
jbe
into
es
fnstenv
fs
jmp
sub
clc
pushf
fstps
cwtl
ret
xor
test
imul
shlb
mov
jp
out
mov
ljmp
xor
mov
xor
lcall
out
stos
or
pop
jb
insb
rcr
push
mov
mov
sbb
push
gs
push
cmp
sbb
mov
shr
pop
mov
fisttpll
rolb
xor
sbb
pop
mov
adc
fdiv
sbb
and
cmpsl
jb
mov
sbb
insl
divl
mov
repnz
mov
jg
imul
cltd
scas
mov
std
xchg
jno
dec
dec
mov
xor
repnz
int3
sbb
adc
insl
push
out
mov
adc
loopne
mov
mov
and
mov
arpl
aad
in
dec
in
cmp
cmp
mov
adc
mov
mov
fs
loop
test
int
imul
pushf
dec
mov
jmp
mov
subl
jmp
sbb
sub
jnp
mov
push
inc
add
push
pop
jp
lret
mov
xchg
mov
jl
aaa
push
flds
orl
xchg
inc
mov
jb
inc
or
mov
mov
xor
pop
mov
jns
pop
jmp
mull
std
fwait
enter
int
mov
dec
imull
add
out
inc
flds
xchg
or
dec
fucom
loope
popa
rcrl
inc
or
mov
and
push
inc
inc
lahf
or
xchg
inc
fisttps
movsb
in
jge
inc
loope
xchg
mov
push
outsl
les
sbb
jp
mov
jg
test
xchg
mov
xchg
push
cmp
dec
and
jg
cmp
sbb
cs
mov
cld
inc
cmpsb
push
sub
scas
cmp
sahf
shrl
jae
cmpps
in
icebp
pop
dec
push
inc
clc
aaa
loope
popa
mov
loop
and
mov
inc
jl
xchg
pop
pusha
jnp
xor
aam
test
pop
dec
adc
mov
mov
jb
cld
popa
bound
pushf
aaa
sub
dec
xor
test
cld
int
cmp
scas
ljmp
push
mov
sbb
cmp
fcomip
inc
inc
push
sbb
out
jne
movb
mov
scas
mov
lea
pop
ja
jae
pop
mov
mov
mov
jp
hlt
mov
les
aam
in
mov
jns
inc
andb
or
aad
pop
popa
mov
xor
es
stos
mov
mov
mov
int
sarl
push
pop
in
mov
nop
bound
ss
jns
and
arpl
jae
cmp
or
push
aad
ret
int
ljmp
loopne
lret
insl
jp
into
mov
add
push
adc
mov
dec
repnz
leave
test
mov
subl
mov
lret
ret
jns
mov
push
mov
mov
lahf
xor
ja
shr
sub
xor
in
fidivrs
mov
jmp
clc
gs
xchg
pop
mov
inc
jnp
dec
aad
hlt
hlt
dec
popa
inc
and
adcb
cmc
sbb
mov
mov
in
hlt
xor
pop
dec
adc
push
xor
outsl
and
dec
lret
cmpsb
xchg
mov
mov
ds
pushf
icebp
xor
mov
push
jno
sub
xor
adc
movsb
loopne
sahf
xor
cmp
mov
mov
jne
mov
movl
and
sub
movsl
cmp
push
mov
sahf
and
add
cmp
or
sbb
fdivrp
in
xor
inc
add
cwtl
js
cld
jbe
les
pop
sub
ja
or
adc
sub
fidivrl
pop
daa
pop
js
jne
ret
insl
dec
nop
cmpsb
xor
orb
dec
fwait
lds
sub
pop
fdivr
fsub
mov
ljmp
jnp
outsl
adc
lret
add
sbb
cltd
repnz
test
int3
mov
mov
add
add
inc
aas
pop
dec
dec
mov
inc
imul
mov
mov
call
add
out
out
addr16
mov
jb
xchg
or
ret
jmp
or
aam
or
pushl
cmp
aaa
mov
jecxz
push
fnstsw
mov
fwait
sarb
mov
and
xchg
movsb
bound
test
clc
xchg
sub
adc
pop
shrl
fsubl
mov
mov
or
repz
jno
faddl
add
dec
and
in
insb
jp
out
mov
inc
popf
fcoms
andb
popf
mov
pop
shrl
or
gs
push
subl
xor
push
enter
in
les
sub
out
aad
iret
jno
or
sti
mov
pop
out
mov
pusha
push
inc
rolb
jl
test
cmp
sbb
xchg
out
push
and
pop
mov
jae
ss
inc
push
xchg
fwait
dec
adc
in
pop
popa
repnz
mulb
loope
inc
movsb
imul
inc
xchg
dec
xchg
push
cltd
addr16
das
into
scas
enter
fisttps
ljmp
xlat
ljmp
and
out
pop
cld
outsb
add
xor
adc
add
sub
insb
sub
ret
push
jge
jge
movsl
idivl
pop
lret
test
stos
loope
jns
push
inc
cmc
sbb
bound
cli
pusha
pop
xchg
pop
or
dec
lahf
cwtl
or
xchg
push
fists
add
mov
fiaddl
jbe
fisubrs
test
fidivrl
sub
lods
jne
data16
in
repnz
add
or
nop
xlat
xchg
stos
in
adcb
icebp
out
sahf
outsl
adc
loop
scas
fsubs
ficoml
dec
sub
scas
sub
cs
adc
mov
imul
inc
mov
jae
fsubrp
pop
inc
cmc
arpl
sub
jae
add
add
jmp
maskmovq
negl
lds
inc
mov
sbb
xchg
movsb
fcomps
call
adc
dec
test
rolb
xchg
jmp
and
lock
aas
xchg
adc
rcll
leave
fs
mov
inc
aaa
lea
cli
dec
xlat
stos
xor
or
frstor
out
jmp
sub
call
imul
pop
sarb
in
inc
push
sub
jge
pusha
test
push
fs
mov
lret
adc
enter
xlat
xor
test
dec
sub
out
lret
arpl
dec
push
lock
mov
mov
lods
push
or
adc
repz
inc
xor
out
mov
pop
dec
mov
loope
lret
lods
ja
out
and
sbb
outsl
or
fdiv
mov
xor
push
fisubl
push
lods
imul
lds
sbb
lock
jg
es
jl
adc
or
xor
dec
jl
cmc
jge
xlat
test
and
cmovge
roll
scas
mov
ret
sbb
lds
pop
sub
pop
je
ret
sbb
and
sub
aas
int3
jns
shl
daa
js
jne
pop
inc
cmp
xchg
lret
imul
push
sahf
sti
scas
push
xor
lret
bound
imul
call
mov
in
pop
pop
leave
ja
xchg
fst
cmpsb
xor
push
mov
mov
in
mov
xchg
loopne
xchg
lret
fsts
mov
dec
jnp
cmp
adc
pop
inc
mov
repz
add
fidivs
add
mov
enter
sub
push
jmp
cld
repz
inc
sahf
mov
mov
push
cmp
or
in
dec
hlt
aad
pop
sahf
outsl
rol
xchg
and
call
leave
push
mov
inc
mov
mov
scas
loop
push
push
insl
or
fwait
xchg
iret
push
sbb
jg
shl
add
sti
dec
dec
dec
xchg
gs
repz
insb
push
loope
jecxz
dec
inc
inc
xchg
orl
fnstcw
xchg
in
fwait
sub
or
mov
frstor
mov
repnz
lods
je
lret
dec
inc
jge
pushf
mov
imull
in
cmpsl
ret
add
sahf
out
test
push
jae
test
call
lds
mov
orl
mov
mov
pop
test
sub
cmp
adc
jno
cmp
cmc
pop
and
inc
repnz
xor
mov
sub
add
push
jnp
loope
xor
jp
mov
sti
arpl
pop
fbstp
xor
push
add
mov
jbe
test
shlb
lds
mov
mov
jbe
das
or
mov
iret
sar
pop
rorl
lds
inc
dec
fwait
ja
addr16
mov
insb
bound
ljmp
ss
inc
insb
lcall
in
insb
push
xor
stc
in
lahf
ds
repz
sub
pop
imull
cmp
adc
stc
rorl
push
je
call
lods
ret
add
imul
cmpsb
cld
das
mov
stc
mov
adc
xor
or
xor
push
nop
push
test
push
jb
in
ficomps
jns
xor
fst
xchg
mov
insb
sti
out
scas
xchg
mov
dec
pop
or
pop
call
addl
lods
je
arpl
popa
leave
cmc
xor
mov
jecxz
push
mov
xor
push
std
ficomps
mov
sub
scas
out
dec
xor
inc
add
push
sub
cmpsl
push
inc
pop
pop
or
inc
cmp
in
xchg
or
push
or
xor
rolb
int3
int
push
js
xor
mov
fs
out
push
push
mov
or
pusha
cmovae
leave
or
mov
shl
add
adcb
cmp
insl
mov
mov
ret
dec
fisubl
outsb
fimuls
loop
pop
mov
call
gs
jns
pop
call
xor
adc
mov
adc
inc
xlat
stos
out
mov
add
sub
insb
xchg
or
jne
dec
inc
cmp
pushf
lock
pusha
int
ds
cmpsl
popa
push
scas
sub
and
and
and
call
or
outsb
aaa
sub
and
imul
call
fcmovnu
sbb
jne
adc
mov
jmp
mov
jns
cmp
ret
fadd
xchg
cmp
sub
push
lret
mov
addb
rcrb
jle
mov
movsb
fldl
in
loopne
mov
rep
gs
xor
test
loope
dec
xchg
daa
into
xchg
mov
imul
jmp
sub
mov
and
pop
lds
sbb
or
rclb
shlb
sbbl
push
pop
mov
outsl
stos
push
or
mov
jg
mov
mov
sbb
adc
or
addr16
mov
roll
sbb
or
cmp
xchg
mov
pop
xor
fsubs
jnp
mov
lock
aaa
into
lods
ret
insl
xor
in
insl
push
nop
stos
jne
daa
jae
roll
lcall
pop
pop
aad
or
and
scas
fcmovnb
in
add
xchg
push
inc
sub
sbb
mov
push
or
mov
jo
icebp
arpl
adc
push
jg
outsl
in
add
mov
mov
mov
nop
scas
lea
add
mov
arpl
imul
adc
xor
dec
divl
mov
imul
loop
fcompl
jle
andl
push
mov
movsb
imul
inc
adc
fbstp
and
insb
pusha
pop
ret
icebp
lds
ja
xchg
pushf
sbb
loopw
dec
movsl
in
jb
push
outsb
xchg
and
arpl
fldenv
adcl
sub
clc
xchg
add
das
rcrl
push
inc
xchg
mov
cmc
adc
fwait
xchg
add
jl
pop
inc
push
xchg
mov
sbbb
subl
out
xchg
adc
data16
xchg
xchg
int3
fldcw
mov
push
jnp
mov
ficomps
or
sbb
cmc
mov
add
fcmovnb
into
bound
mov
adc
cmpsl
mov
pop
adc
lret
add
sub
adc
dec
jbe
mov
pop
lds
inc
out
add
sti
jnp
popf
sbb
test
cltd
mov
mov
mov
rorb
mov
fiadds
movsl
pop
xchg
add
dec
stos
out
or
cmp
mov
loopne
ret
jns
inc
and
imul
hlt
sbb
pop
scas
jg
outsl
jle
outsl
pop
fimull
and
jbe
jg
and
jo
loop
lcall
mov
dec
icebp
nop
mov
test
inc
popf
sub
shrd
xchg
push
inc
ret
jae,pn
repnz
xchg
push
mov
ret
out
mov
testl
push
cmc
cmp
xor
scas
cmpsb
sbb
jmp
pop
clc
rcll
pusha
or
push
sbb
add
mov
pushl
test
dec
std
push
shrl
sub
mov
sub
nop
ljmp
test
stos
ret
lods
inc
sub
mov
repnz
aas
xchg
iret
leave
insl
cmp
shl
fdivs
mov
sub
out
ss
jecxz
xchg
jmp
mov
arpl
fwait
mov
daa
dec
adc
mov
mov
adc
sub
push
enter
pop
out
xlat
jmp
jmp
vcvtdq2ps
divl
mov
stc
jae
jl
pop
mov
gs
sub
addr16
inc
sub
inc
movsl
dec
int3
jecxz
jno
sbb
test
and
rcl
cmp
dec
inc
loope
incl
jne
sahf
pop
and
jns
out
mov
ljmp
push
sahf
std
xor
mov
std
lcall
sub
ss
cld
xchg
cmpsb
pop
push
add
jbe
call
les
das
add
aaa
test
jns
cmp
dec
iret
les
test
mov
faddl
add
in
xchg
loopne
insl
andb
ret
cmc
mov
cwtl
jl
lret
lcall
mov
shll
es
notb
xchg
jbe
inc
jl
ss
loope
int3
test
add
push
repnz
mov
outsl
frstor
cmpsb
dec
dec
or
jno
xor
add
shr
push
mov
push
push
orb
xorl
addr16
fsubp
imul
or
mov
imul
pop
xor
cmpsl
jb
fs
out
out
cmp
xchg
dec
push
or
in
lahf
sbb
adc
rcrb
dec
push
jno
cmp
and
cmp
in
sub
cmc
scas
mov
pop
aaa
pusha
fs
or
and
icebp
shr
add
mov
jno
push
test
adc
ret
and
and
aam
enter
call
imul
inc
aas
inc
sti
jle
xor
repnz
stc
cmp
pushf
inc
fmuls
arpl
insl
inc
outsb
push
jnp
pop
xchg
add
pop
lcall
pop
mov
ficoml
inc
push
arpl
pop
jle
mov
cmc
mov
loope
xchg
sbb
loop
sbb
mov
pop
sbb
and
mov
test
std
je
mov
dec
imul
outsl
and
sbb
jne
mov
mov
repnz
push
and
ljmp
ret
inc
pop
imul
mov
sahf
jg
inc
adc
insl
push
adcl
pop
mov
int
xor
shlb
cmp
lock
jns
push
fdiv
sbbl
cld
inc
add
movsl
pop
xor
sbb
push
inc
jge
mov
jle
jne
inc
mov
sbb
xchg
and
or
cld
and
mov
scas
out
lahf
movswl
lock
xor
or
fdivl
fs
jmp
in
lods
lods
pop
pop
testb
pop
xlat
dec
mov
fwait
std
mov
adc
into
xchg
fisttpl
hlt
and
sub
push
jg
insb
xchg
xchg
inc
fsubrl
shll
lea
inc
pop
shr
mov
pop
icebp
sub
shl
xchg
mov
mov
jmp
es
pop
or
popa
jns
sbb
sbb
int3
cltd
sub
movsb
into
iret
in
in
out
rcrl
lock
sbb
int3
daa
shlb
dec
xor
idivb
clc
mov
mov
aas
mov
cli
int3
mov
inc
jp
lret
fpatan
sub
jmp
push
mov
bound
jl
inc
adc
cltd
inc
daa
inc
or
data16
inc
nop
push
mov
sbb
leave
clc
pop
and
jbe
fs
fldt
cmpsl
and
push
mov
sub
cli
loop
inc
leave
in
dec
cmp
loop
add
mov
cmp
dec
mov
inc
outsb
dec
loope
popf
push
pop
mov
cmp
ljmp
aas
mov
pop
pop
cmp
mov
and
subl
jl
sahf
sbb
and
mov
adc
push
out
and
xor
mov
bound
js
icebp
addb
mov
jbe
sbb
insl
adc
xlat
icebp
inc
pop
pop
pcmpgtb
or
aaa
jmp
js
sub
sub
dec
stos
cld
sbb
stos
int3
adc
gs
fcmovne
fmulp
sub
xchg
stc
xchg
fdivs
sbb
jnp
jo
movsb
into
pushf
inc
inc
cltd
cltd
jae
jmp
push
sahf
or
int
mov
adc
mov
js
inc
pop
fsubrp
inc
mov
push
leave
mov
out
jg
dec
cmp
jnp
push
loope
or
scas
lods
adcl
add
mov
leave
or
cld
dec
sub
shrb
xchg
mov
les
inc
mov
roll
xchg
sbb
jge
movsl
addb
cltd
mov
mov
and
outsl
jg
xor
stos
dec
shll
jno
shlb
lods
jp
loop
xor
out
lret
imul
ja
ds
lods
push
adc
push
xchg
lret
out
das
mov
jp
sbb
or
inc
pop
insb
dec
cltd
loop
les
pop
pop
mov
ds
stc
test
call
cmp
xorl
and
pop
movsb
sub
adc
loop
xchg
mov
cmp
and
mov
out
dec
lret
das
mov
out
add
fstpl
cmp
loop
test
pop
cmpsb
mov
sub
jae
mov
popf
sahf
or
in
loop
jnp
in
dec
mov
lods
call
decb
push
jmp
fucomi
push
dec
faddl
roll
xor
adc
inc
xor
mov
or
repz
mov
sbb
in
inc
mov
jge
fcompl
mov
pop
mov
xor
jmp
jns
cmp
fsubs
fcmovnbe
cmpsb
dec
stos
push
inc
inc
in
add
push
push
xor
test
dec
cs
cmove
int
and
jge
lahf
dec
jg
xchg
lret
in
mov
xor
push
jmp
pushf
cmp
cmp
int3
testl
aaa
dec
mov
push
out
rcrb
mov
inc
and
iret
stc
call
sahf
dec
mov
xchg
inc
cs
ret
mov
clc
je
xor
mov
es
test
fdivl
xor
les
inc
xor
push
jmp
mov
fstps
jle
mov
mov
incl
add
adc
sub
stos
xor
aaa
jno
and
sbb
lahf
push
lods
cmp
lcall
repz
pop
arpl
adc
sbb
adc
add
in
bnd
pop
cmp
movsb
jbe
mov
adc
lahf
in
mov
sti
mov
dec
push
pushf
enter
in
js
sub
mov
and
test
ficomps
sbb
rep
jae
push
aam
incl
inc
dec
mov
call
bound
data16
stos
and
test
mov
repz
xchg
pop
jae
loop
xchg
out
sbbb
push
movsb
lahf
sbb
iret
dec
or
mov
or
jno
mov
inc
clc
inc
ficoms
add
pop
lahf
push
std
test
or
fld
fsubp
mov
and
rcll
sbb
sarl
dec
mov
test
ja
sub
lret
subb
jb
or
leave
insl
call
test
dec
mov
es
stos
mov
jnp
dec
mov
pop
push
push
xchg
adc
int
add
stc
jnp
icebp
dec
pop
dec
jmp
js
hlt
cmp
repnz
xor
cmp
pop
out
inc
dec
or
nop
xchg
stos
xchg
jo
pop
mov
push
setne
add
test
sti
jmp
lock
pop
xor
adc
jmp
xor
mov
cli
sbb
test
sub
inc
xlat
and
xchg
cmp
xlat
inc
out
push
push
mov
ja
pop
or
sbb
daa
mov
mov
ret
cltd
call
or
push
in
dec
daa
ja
and
mov
dec
jbe
dec
pop
clc
mov
xchg
sub
inc
ljmp
inc
jl
cmpsb
xchg
lret
aaa
cwtl
pop
sub
addl
insl
jmp
pushf
or
ret
lock
jp
in
and
inc
jmp
xorl
mov
jp
int3
adc
aad
sub
push
in
fadds
nop
and
push
test
andb
insl
call
sarb
pop
fnstenv
fistps
andb
mov
mov
cmp
fstpt
jl
mov
xchg
int
push
aam
shll
pop
cmpsl
arpl
sbb
jge
sti
push
and
mov
inc
pop
jno
cmc
outsb
or
lods
frstor
add
in
in
and
arpl
mov
adc
and
adc
test
or
lret
pop
subb
cmpl
and
sti
sbb
aas
cmc
jle
xor
arpl
xor
jb
dec
std
sets
movsl
in
and
adc
add
cltd
pop
cmp
pop
push
and
and
movsl
ficomps
inc
sub
lods
jl
xor
sub
fstl
xor
mov
dec
lock
dec
clc
and
testl
fwait
sbb
push
mov
je
xchg
mov
push
add
xchg
cmp
adc
test
fcmovbe
mov
or
and
mov
xor
mov
xchg
adc
cmp
xchg
pop
jecxz
aam
pushl
push
pusha
xchg
sbbb
loope
cmp
push
dec
xor
pop
inc
rcrb
scas
stos
out
push
lods
pop
adc
sub
inc
push
lods
mov
cmp
add
mov
mov
data16
out
push
scas
mov
adcb
xchg
sbb
nop
dec
in
inc
sbb
aam
mov
test
mov
dec
movsb
mov
and
mov
push
rcll
pusha
sub
adc
sub
mov
sub
fimull
inc
pop
mov
push
inc
add
pusha
jp
push
mov
out
cmpsb
pushf
mov
hlt
add
nop
repnz
imul
pop
sub
pop
push
and
jle
stos
mov
sub
cmp
imul
mov
imul
lret
in
icebp
push
gs
xor
gs
push
jne
add
xchg
lds
push
cmp
cld
cmpsb
fbstp
xchg
adc
andb
cmpsb
test
sbb
adc
js
or
mov
stos
add
enter
mov
add
sbb
jbe
dec
sti
sar
and
pop
cmp
loop
mov
cmpsl
scas
or
jecxz
adc
bound
and
mov
aam
jno
icebp
pusha
xor
cld
pop
pop
pop
push
mov
mov
daa
orl
push
fs
and
ret
pop
lea
fimull
outsb
xchg
and
hlt
push
dec
cwtl
push
into
xchg
mov
add
sbb
mov
mov
mov
dec
jb
sbb
pop
dec
std
jnp
mov
lds
xor
push
push
lods
scas
xchg
add
jl
lret
pushl
cmpsb
jmp
orb
fistpl
in
repz
rolb
into
mov
ljmp
sub
cmp
cmp
ret
call
sbb
xor
cwtl
cmpb
cwtl
xchg
xchg
pop
xchg
mov
fidivl
pop
jl
add
pushf
jle
inc
movsl
xor
pop
fnstsw
in
push
sti
dec
push
jbe
test
sub
pusha
lss
add
lock
sbb
mov
imul
sbbl
cld
inc
jg
cltd
ljmp
add
ficompl
cmp
repnz
into
imul
or
pop
or
push
jb
lret
cltd
push
movsb
add
inc
dec
pop
sub
cli
jo
loopne
lods
jp
dec
jecxz
movsb
out
xor
cmp
cwtl
add
push
es
stos
sub
pushf
or
mov
mov
and
jb
inc
ret
push
pop
adc
lods
js
xor
and
sarl
str
jl
sub
mov
decb
jmp
aad
or
add
cli
push
lahf
test
jne
and
xor
mov
ss
or
jle
rorl
push
adc
lea
dec
adc
data16
sub
test
xor
icebp
das
push
xor
xchg
in
outsl
lods
nop
cmp
pop
into
adc
frstor
lods
sub
pushf
rolb
sbb
pop
mov
sub
and
dec
mov
or
inc
int
and
shlb
sub
mov
pop
lcall
push
xor
sub
ss
mov
xor
mov
add
lret
mov
pop
mov
pop
fucomi
mov
jl
cmp
sub
mov
dec
jbe
insl
cltd
push
sub
stos
je
in
inc
cmp
and
jae
mov
fs
push
inc
int
fldenv
cmp
std
inc
inc
fldz
fmuls
fidivl
aas
idivl
arpl
sti
cmp
mov
mov
xchg
shll
mov
popf
pop
push
jmp
icebp
mov
repnz
inc
clc
pop
rcrb
shrl
scas
rep
std
ret
fisubl
jp
dec
add
push
cli
inc
fimull
addl
pushf
lea
out
dec
icebp
inc
jl
ret
pop
jmp
mov
and
ss
jae
sbb
or
mov
mov
push
sub
loope
pop
inc
xor
pushf
ror
inc
arpl
push
sbb
sbb
xor
jmp
imulb
add
jns
aaa
in
push
rorl
nop
arpl
in
lahf
cmp
sub
mov
scas
popf
xor
dec
adc
or
pop
xchg
lret
push
add
stc
cltd
aam
ret
and
daa
cmpsl
xchg
inc
inc
sbb
mulb
or
roll
mov
pop
icebp
mov
fidivl
sub
icebp
cmp
xor
movsb
inc
mov
hlt
icebp
fldenv
and
fimuls
outsl
in
je
sbb
push
cmpsl
roll
adc
repnz
enter
push
jge
xor
lcall
sub
bound
sahf
xchg
adc
stc
int3
mov
jns
out
jl
addr16
adc
adc
lock
cmp
pop
inc
leave
idivl
addr16
into
daa
or
mov
pop
jbe
out
xchg
dec
lret
xor
inc
ds
cmpsl
xlat
insb
add
shl
es
inc
cmpsb
jb
push
idivl
lock
cmp
push
xchg
bound
rolb
roll
andb
retw
add
ds
jge
mov
pop
cmp
lds
pop
push
adc
sub
jl
lret
fists
jge
outsb
xchg
mull
dec
sti
fnstenv
bound
std
xor
loope
mov
roll
and
jecxz
fsts
jnp
xor
jnp
es
mov
mov
test
sub
out
std
dec
xchg
in
xor
xchg
repz
js
in
lret
cmp
movsl
xor
inc
jae
mov
or
or
and
jle
mov
out
subl
cmpsb
xchg
cltd
xchg
movsb
xor
ret
sahf
mov
add
movsl
cli
fwait
in
jg
xchg
rolb
loopne
iret
dec
and
add
enter
pmulhuw
icebp
xchg
and
fdiv
push
negb
mov
sub
or
dec
outsl
mov
push
sub
test
dec
jp
lahf
jmp
mov
stos
sub
aaa
fadds
movsb
mov
fnstenv
insl
sarb
pop
rcll
push
adc
pop
xchg
add
mov
pop
negb
inc
out
mov
push
dec
dec
mov
loopne
stos
xor
rcrb
shrb
daa
add
ljmp
in
adc
ss
jecxz
clc
sub
aas
and
xor
das
mov
jae
test
pop
lods
dec
popf
scas
movsb
rclb
test
sar
repz
aas
sbbb
sub
cmp
leave
mov
loopne
rol
adcb
out
pop
imul
adc
mov
ja
addr16
stos
push
xor
imul
mov
loopne
sub
mov
sbb
fs
addr16
mov
sbb
add
mov
outsb
xor
or
ror
mov
cltd
pop
mov
jne
jbe
popa
mov
sbbb
js
scas
adcb
sbb
push
inc
mov
imul
cmpsl
inc
loop
out
push
dec
das
decb
pop
or
shll
test
insl
daa
mov
push
pop
cld
sub
pop
mov
inc
loop
mov
fbstp
enter
jl
shrl
adc
xor
ror
iret
lock
push
or
xchg
mov
lock
cmpsb
jne
push
mov
sub
pop
push
xchg
dec
imul
or
mov
mov
add
xchg
xchg
sub
mov
cmc
and
and
jb
dec
inc
jle
lcall
mov
idivl
jns
and
mov
stc
sbb
ss
xchg
or
inc
mov
ljmp
cmp
in
dec
xchg
mov
clc
and
jae
data16
mov
aaa
mov
mov
mov
adc
fidivrs
lods
push
ss
orl
sub
rcrl
popf
insl
push
dec
roll
fnstsw
rorl
dec
fcomp
xor
add
xor
fucomip
cmp
mov
xor
hlt
inc
fcmovbe
imul
outsb
andl
sub
lret
jbe
add
push
ds
pop
das
scas
adc
js
daa
dec
js
cs
outsl
movsb
lds
aas
mov
xchg
cmp
shll
mov
into
sahf
ja
push
xchg
clc
xchg
out
cwtl
mov
bnd
xchg
or
mul
popf
jg
ss
iret
or
inc
jno
xchg
dec
and
pop
scas
insb
outsb
inc
xchg
test
mov
call
cltd
loope
fisttpll
sbb
inc
add
shlb
fsubrs
shrl
sbb
sub
movl
cmpl
je
cmpl
jne
push
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
sub
xor
neg
mov
mov
mov
add
orl
imul
subl
mov
mov
mov
adcl
add
sbbl
or
xor
mov
mov
and
mov
orl
add
xor
mov
mov
mov
add
and
mov
mov
mov
lea
mov
mov
mov
sub
add
mov
mov
xor
add
jne
mov
mov
mov
cmp
je
mov
mov
mov
cmp
jne
mov
mov
movsbl
xor
add
cmp
mov
mov
mov
je
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
add
imul
mov
mov
mov
add
or
mov
mov
mov
add
xor
mov
mov
mov
add
and
mov
mov
mov
lea
mov
mov
mov
sub
add
mov
mov
xor
add
jne
jmp
mov
mov
jmp
mov
mov
xor
xor
sub
sub
xor
jmp
rcrb
iret
ja
jno
into
fidivs
or
push
pop
jp
scas
add
nop
push
push
xchg
pop
and
inc
xor
and
in
popa
int
adc
nop
movsl
jle
lret
inc
push
sub
add
adc
jno
mov
add
sbb
andl
push
xchg
add
loop
jb
mov
cmp
adc
jae
stc
pop
adc
mov
sbb
rcrb
jg
pusha
inc
sbb
sbb
fbld
fidivl
push
fnstsw
dec
add
xchg
lock
in
push
rorb
jge
inc
outsb
data16
sub
xchg
cmc
jl
fstps
push
xlat
or
ret
jbe
jo
popf
xor
out
popf
std
inc
push
mov
sub
mov
and
fisttpll
push
push
hlt
jns,pt
jmp
addr16
lods
jb
push
ret
dec
xchg
movsl
sbb
ss
test
je
loope
lret
clc
rorb
movsl
jmp
and
mov
out
test
aad
dec
or
fsubrs
mov
insl
aad
and
mov
inc
xchg
add
sbb
and
cli
mov
jl
or
stos
cmp
clc
dec
xor
insb
sbb
jmp
jnp
cmp
pusha
pop
rclb
addr16
cwtl
jle
add
lods
inc
jbe
out
daa
cmp
mov
js
fstl
xchg
inc
into
xchg
imul
pop
inc
mov
loope
notl
sbb
out
cmp
xchg
enter
sub
aaa
je
push
sbb
outsb
cmp
mov
push
xor
scas
ds
fcompl
sbb
int3
mov
fstpt
jle
pusha
shlb
mov
int3
dec
pop
idivb
lcall
popl
xorb
pop
lcall
add
jne
pop
ret
lret
or
dec
cmpsl
fisubrs
pop
mov
in
sbb
push
sbb
mov
movsb
mov
leave
sub
lret
std
test
mov
xor
clc
in
jle
rcrb
cwtl
jmp
mov
mov
test
jp
mov
test
mov
test
mov
and
pop
xor
ret
dec
sub
out
dec
mov
sbb
mov
pop
cmp
insl
pop
pop
pushf
adc
out
xchg
xchg
mov
pop
int3
cmp
faddl
iret
and
push
inc
inc
xchg
popa
lahf
adc
inc
xor
cmp
dec
pop
xchg
iret
mov
push
jmp
aad
pop
mov
sti
or
cmp
je
in
insl
xchg
ret
lock
push
xlat
imul
or
adc
pop
mov
xorl
out
repnz
and
xlat
cli
mov
in
jge
and
std
mov
ret
lods
aaa
adc
adc
push
push
jbe
xor
ja
es
in
and
leave
push
push
inc
mov
or
loop
push
int
mov
mov
lds
or
pop
fisttpl
std
cwtl
dec
in
je
cld
movsl
cmpsb
mov
mov
mov
frstor
je
sti
sub
xchg
jle
lea
adc
and
adc
fiadds
push
stos
ret
leave
pop
pushf
insl
xchg
jg
scas
decb
push
and
pop
jnp
leave
imul
add
push
test
out
jg
sbb
mov
cltd
stc
sub
call
rorb
jmp
adc
mov
inc
mov
sbb
insl
insl
pop
push
mov
dec
mov
outsb
mov
rorl
inc
push
mov
fiadds
stos
in
fisttpll
add
mov
xor
shl
mov
imul
cmp
xchg
jb
bound
xchg
adc
cwtl
pop
adc
push
or
insl
mov
or
sbb
inc
rcl
mov
out
adc
or
fsubp
mov
test
cmpl
inc
nop
mov
jle
xchg
fcoms
mov
push
mov
xchg
push
mov
mov
mov
aas
adc
sbb
std
rcrl
xchg
adcb
sub
out
jl
adc
ss
cmp
mov
dec
pop
mov
mov
dec
sti
lods
jo
pushl
adc
sbbb
pop
sbb
int3
and
arpl
and
dec
int3
push
ret
dec
lcall
sub
aad
in
mov
adc
data16
pop
call
jle
arpl
pop
dec
cmp
hlt
jl
xor
sub
jne
lds
mov
sbb
iret
out
mov
adc
iret
addb
leave
jbe
adc
xlat
out
loope
shl
jbe
jo
sahf
xchg
fwait
es
mov
insl
dec
dec
mov
shrb
sub
dec
pop
pop
imul
mov
lock
cmp
sahf
xor
mov
jmp
sub
xchg
es
test
loopne
or
ja
push
jnp
jbe,pn
push
inc
lock
mov
in
leave
inc
fldcw
dec
mov
pop
adc
mov
xchg
divl
pop
jge
dec
jp
mov
pop
mov
aam
sub
imul
xchg
fs
test
jb
lcall
mov
xchg
adc
inc
fstpt
adc
and
fistpl
mov
imul
add
leave
mov
sbb
push
jae
mov
pop
mov
je
inc
fsubr
xor
xor
or
push
fldcw
jbe
cs
aam
xchg
inc
cld
fisttpl
ds
nop
mov
sbb
repz
adc
push
push
in
and
cmc
insl
lret
data16
aas
pop
adc
or
mov
adc
mov
inc
stos
cmc
push
push
lods
pop
sbb
imul
xor
in
jl
adc
cltd
jle
mov
outsb
mov
mov
add
scas
dec
jecxz,pn
xor
sahf
jnp
cltd
jno
push
mov
jle
mov
xchg
std
sbb
and
in
add
ljmp
call
test
test
adc
clc
sbb
enter
dec
into
mov
pop
fnstsw
or
adc
or
push
fwait
add
pop
push
enter
insb
inc
rcll
or
in
xor
loopne
std
dec
arpl
jecxz
fidivl
in
cld
pop
pop
mov
aas
xchg
rclb
cld
hlt
mov
jb
and
push
aaa
inc
xchg
push
int3
lret
nop
andl
shrb
movsl
push
mov
inc
mov
cmp
data16
adc
aas
aad
pop
ret
popl
xor
cli
cmpb
je
push
aaa
pop
jnp
adcl
jl
inc
test
dec
mov
add
iretw
or
pop
pop
sbb
fmuls
inc
and
cmp
insb
or
pop
leave
xchg
adc
add
xor
sub
cmp
push
je
xchg
sbb
mov
das
inc
imulb
arpl
dec
in
negl
mov
scas
arpl
out
xlat
or
pop
aad
push
inc
mov
xchg
frstor
xor
outsl
inc
rclb
add
test
les
insb
jecxz
adc
sbb
ss
movsb
pop
fldcw
inc
inc
clc
jnp
jge
xor
cli
or
pop
hlt
pop
pop
test
jnp
or
xchg
mov
ret
add
cld
xlat
mov
inc
and
or
mov
push
pop
fistpll
push
add
lods
subl
xor
push
dec
cmp
insb
ret
aas
mov
lods
push
pop
lcall
inc
and
ret
pop
push
sub
dec
movsb
mov
out
iret
enter
fsubs
xchg
aaa
js
or
sar
js
pop
sbb
sub
sub
fidivrs
xchg
sbb
xorl
dec
add
or
push
test
or
icebp
test
das
dec
jmp
push
leave
andl
push
js
or
xchg
mov
or
fildl
mov
dec
bound
cmp
cmp
mov
and
or
es
mov
jne
cmc
ljmp
or
or
dec
addr16
xor
in
ljmp
add
jns
or
cmp
je
and
cltd
push
add
cmp
push
cmp
cmp
mov
popf
adc
je
js
int3
mov
sub
imul
lcall
push
and
leave
jno
cmpsb
inc
ret
or
cmp
push
rol
pop
push
mov
jge
fisttps
sarl
pop
sti
mov
in
mov
testl
dec
add
bound
dec
cmp
stc
mov
mov
push
rol
add
ja
dec
cmpsb
fcoml
lea
xchg
mov
in
faddl
add
movsl
lods
or
fistl
push
mov
push
sub
mov
sub
iret
mov
cwtl
sub
jbe
add
mov
stos
movl
cmp
dec
push
aas
xchg
sub
inc
or
loop
iret
and
xchg
stos
xchg
adcl
xchg
cmovnp
cltd
fstpl
std
fidivrl
mov
pop
dec
fs
rcll
lret
jmp
ds
adc
jecxz
mov
aas
jge
stos
sbb
add
mov
xchg
outsb
cld
push
pop
fs
lock
imul
or
iret
ds
sbb
leave
lods
mov
leave
push
xor
pushf
pop
sub
dec
mov
fcomps
mov
xor
fisttps
inc
ljmp
jno
in
sbb
mov
in
xor
cmp
outsl
int3
and
shll
ljmp
xor
mov
test
outsb
pushf
cmp
fidivrl
or
adc
stos
adc
cltd
mov
pusha
mov
test
jae
fcmovnbe
xorl
icebp
cmp
std
dec
sub
mov
mov
repnz
pop
mov
sbb
sbb
pop
dec
jg
fadds
fucom
ret
or
mov
cmc
dec
jecxz
outsl
adc
test
fiadds
pop
push
xor
add
push
fcmovnu
arpl
ret
dec
sahf
jmp
dec
inc
in
adc
mov
dec
lods
pop
pop
inc
ret
cmp
mov
pop
mov
ficompl
and
ret
or
push
inc
xchg
pop
outsb
xchg
dec
nop
arpl
lcall
in
popa
insb
sbb
sbb
ja
or
sub
lahf
cmp
ja
test
cmp
adc
sahf
mov
sbb
dec
repz
inc
sahf
jae
push
rorl
xor
hlt
pop
pop
push
pushf
stos
or
push
lret
lret
arpl
adc
or
icebp
pop
movsb
cmp
sub
ljmp
lods
inc
jns
cli
xlat
and
js
stos
insl
push
insb
imul
test
mov
movsl
rcl
stos
call
rolb
and
loopne
add
andl
int3
dec
cmp
in
popf
mov
std
dec
dec
push
xor
cs
int
cwtl
stos
xchg
movb
fildl
push
jns
rcrl
pusha
cmp
xorl
enter
jge
int3
mov
idivl
aaa
test
push
pop
xchg
leave
adc
and
push
ljmp
es
mov
sub
sbb
xlat
pop
cwtl
scas
mov
pop
dec
mov
or
inc
mov
xor
jmp
sbb
and
mov
cwtl
push
and
xchg
out
mov
ret
stc
hlt
lods
pop
pop
or
push
hlt
ds
shll
add
sbb
nop
lahf
and
cmp
sbb
cs
xor
cmp
lock
hlt
sub
pop
xor
or
inc
cmp
lods
jle
and
cmpsl
pop
mov
inc
scas
cmp
cmp
arpl
int3
xchg
cmpsl
out
pop
mov
mov
into
ds
stos
stos
dec
punpckhbw
ror
dec
test
repz
pop
lret
dec
push
pusha
jbe
add
loop
xchg
sti
mov
aaa
nop
sub
outsb
adc
rorb
cmp
call
rcrb
dec
hlt
dec
xchg
movsl
inc
insl
sbb
ffreep
lods
mov
ja
sbb
push
adc
inc
push
gs
pop
in
cmp
inc
xlat
out
jnp
stos
jg
or
daa
push
dec
js
int3
loopne
aas
gs
jbe
mov
subb
rorb
dec
insb
cld
mov
push
inc
cmpsb
pushf
sahf
js
leave
jns
push
es
call
jne
in
adc
dec
fsts
test
pusha
outsb
push
cmp
out
out
sbb
push
cld
movsb
in
roll
flds
lea
aad
insb
pop
cmc
pop
push
mov
and
scas
rsqrtps
stos
mov
out
inc
mov
lea
lret
sbb
and
pop
mov
pop
xchg
rcrb
push
pop
dec
sti
xchg
jae
mov
add
adc
push
or
test
push
cli
add
lcall
or
sub
cmp
cmp
outsl
out
rcrb
add
js
mov
or
repz
or
cmpb
xor
or
movsl
inc
push
push
addb
mov
dec
and
mov
outsb
ja
nop
sub
or
mov
cmp
pop
dec
clc
push
hlt
popf
sti
jmp
outsl
sbb
jg
mov
jecxz
pop
dec
pop
sub
fstpl
push
or
enter
cmpl
mul
dec
adc
insl
push
enter
mov
mov
jmp
les
mov
gs
fcmovne
push
push
push
push
mov
incl
outsl
inc
nop
add
mov
xchg
out
inc
mov
leave
pop
imul
dec
sub
mov
mov
and
pop
jb
iret
adc
jmp
adc
fimull
int
pop
inc
xor
mov
mov
lea
mov
test
sub
roll
adc
mov
adc
ficoms
inc
loope
cs
mov
popa
outsb
mov
pop
nop
pop
inc
adc
jecxz
pop
cwtl
lods
jb
sub
popa
xchg
in
subl
pop
test
dec
aaa
daa
pop
pop
pop
xchg
imul
push
jns
adc
xchg
dec
fadds
jge
test
jae
jnp
mov
mov
add
aad
or
inc
jp
xorl
xor
je
cs
push
icebp
or
push
or
loope
cmpsl
or
push
aam
fmulp
jnp
push
jp
mov
scas
mov
ljmp
cld
add
mov
arpl
cmp
jns
ljmp
xchg
xchg
leave
jecxz
aam
dec
stos
mov
jmp
push
jae
mov
adc
mov
in
mov
sbb
push
xchg
xor
movsl
lock
cmp
outsb
jns
pop
dec
dec
repnz
insb
xchg
mov
sbb
sub
xor
jne
inc
and
mov
push
mov
inc
cs
fs
and
jl
mov
pop
and
rcrl
les
cld
test
enter
push
and
xor
nop
outsl
jp
jp
hlt
push
aad
sub
cwtl
mov
cmp
in
xchg
ds
stos
andb
jp
lea
aas
jb
push
pop
into
add
jo
pop
xchg
inc
je
or
and
aam
repz
jbe
inc
pop
xor
fsubs
aaa
out
lcall
push
bound
pop
jge
sbb
pop
ficomps
xchg
outsb
int
fsin
leave
fstpl
test
sarb
dec
mov
mov
adc
mov
iret
adc
pop
mov
adc
decl
cs
cmp
data16
sub
imulb
out
sti
mov
pop
shl
push
outsb
lds
scas
lea
mov
ret
sbb
jo
lret
gs
test
xor
jg
ds
jecxz
sub
pusha
arpl
stc
push
xor
aas
cmp
sub
or
imul
sub
xor
mov
push
add
repnz
icebp
in
push
pop
and
adc
jmp
testl
icebp
pop
xchg
daa
scas
aaa
fbstp
or
hlt
mov
pop
add
adc
push
lret
fnstenv
push
add
inc
js
xchg
loope
jo
cmpsb
adc
in
lock
repnz
cltd
fwait
lods
push
mov
pop
pop
cmp
jne
pusha
sahf
pop
xchg
add
movswl
pop
cmp
or
int3
add
xchg
sti
in
mov
lea
push
sub
iret
clc
mov
test
and
cmp
inc
push
jnp
push
loope
xor
lret
adc
cli
out
out
test
stc
jo
inc
sbb
dec
mov
in
and
sub
aad
sahf
sbbl
jae
popa
scas
inc
loopne
in
mov
stc
inc
add
mov
stc
arpl
fwait
xlat
addb
and
jns
mov
add
xchg
pop
jge
data16
pop
mov
mov
xchg
add
shl
push
adc
fisttpll
rolb
jnp
dec
rcrl
and
ds
xchg
stos
cli
lods
xor
jg
push
leave
jne
cmp
shrb
cwtl
sbb
outsb
or
push
xor
pop
shrd
pop
loopne
or
xlat
sub
jno
adc
mov
movsb
mov
push
aaa
ds
fidivl
loope
std
push
push
aaa
pop
push
daa
sbb
enter
mov
ficoms
xor
pop
add
mov
and
sbb
push
inc
mul
pop
push
mov
jae
dec
dec
inc
push
mov
pushf
pusha
pushf
push
sbb
xchg
xor
movsb
repz
push
adc
outsl
out
out
pop
push
mov
out
int3
rolb
sub
insb
loope
pushf
int3
or
xor
cmp
shrl
cmp
dec
sbb
xchg
aas
imul
dec
aam
negb
es
rcr
push
mov
repz
mov
sbb
sti
into
mov
hlt
lea
pop
ljmp
adc
es
fsubl
or
cmpsb
dec
popa
pop
bound
jecxz
out
sub
insb
loope
jbe
inc
xchg
mov
test
ds
mov
pop
jno
xorb
cmc
pop
or
jb
bound
push
arpl
push
push
fmull
jns
jmp
and
lods
cmp
lods
leave
out
out
lret
xor
pop
adc
pop
sbb
and
test
in
xor
loopne
mov
mov
cltd
and
dec
dec
adc
les
loop
cmp
stos
mov
aaa
push
pop
adc
sub
push
sbb
and
sbb
nop
leave
adc
sbbl
inc
cwtl
adc
sbb
mov
ret
int
dec
mov
pop
cwtl
add
std
pop
cmc
sub
xor
pusha
test
xor
xor
mov
repnz
adc
aad
mov
rolb
out
pop
push
xor
or
sbb
jo
jp
pop
cltd
push
push
aas
test
mov
mov
inc
pop
mov
inc
adc
inc
add
xor
push
movsl
dec
out
mov
cmp
js
inc
int3
mov
xorl
je
adc
stos
add
roll
lcall
shr
push
sub
lea
pop
nop
lods
pop
or
mov
loopne
jns
mov
jg
test
iret
xchg
test
es
adc
subl
gs
inc
addr16
push
sti
or
pusha
aad
xchg
inc
sbb
mov
pop
dec
ljmp
sub
bound
mov
dec
lret
jo
mov
push
jp
inc
sub
xor
jnp
jge
push
hlt
mov
sub
push
jl
lret
pop
xor
mov
cli
mov
lret
inc
shlb
popf
ljmp
pop
imull
lret
jmp
pop
punpckhdq
or
and
pop
icebp
sbb
xor
ss
divb
push
pushf
mov
jo
mov
mov
aaa
pop
jmp
jg
mov
jbe
jp
scas
inc
sbb
movsb
inc
adc
adc
rcr
inc
out
add
jg
dec
imul
fsubr
push
popa
push
inc
push
jno
cltd
icebp
xor
xchg
cmp
pop
dec
or
inc
jle
cmp
push
aas
pop
out
cmove
ret
xchg
mov
jmp
cmpl
shl
cmpsb
cld
outsl
mov
int3
mov
insb
xor
pop
loop
lods
sbb
xor
pop
ret
push
inc
push
push
add
hlt
ss
imulb
mov
jecxz
clc
sti
negl
sbb
ja
in
jp
ret
cmp
popa
mov
enter
dec
js
mov
out
test
push
outsb
aaa
jmp
xchg
add
outsl
dec
jno
popf
jmp
xchg
insb
popf
mov
cld
out
add
fstpt
mov
mov
adc
xchg
push
pop
ja
jno
dec
pop
lock
shll
fstl
sub
aam
and
gs
sarl
test
bound
je
ret
sbb
das
mov
outsl
sub
pop
mov
and
lods
icebp
lds
pop
dec
mov
push
mov
sbb
inc
or
mov
sbb
je
rcll
jecxz
aam
add
test
xor
aam
mov
adc
xchg
cmp
add
push
mulb
test
sub
jecxz
loop
mov
ret
sahf
popf
sbb
cmp
or
out
aad
add
nop
shlb
nop
cmc
test
popa
mov
cmc
pop
ds
out
into
mov
rcl
mov
pop
ret
sbb
movsl
mov
inc
mov
es
adc
mov
push
je
pop
filds
jg
xchg
pop
mov
mov
test
pop
lahf
repnz
dec
ljmp
movsl
pushf
mov
inc
fwait
lcall
mov
punpckldq
mov
jnp
shrb
sarl
out
in
aas
ljmp
lret
mov
ds
jecxz
in
jmp
adc
lods
aam
lock
sbb
jecxz
push
shll
jbe
insb
sbb
adc
mov
cmp
addr16
stc
in
inc
adc
xchg
jb
inc
outsl
sub
mov
decl
sub
aam
cmpsb
mov
jle
sahf
sub
dec
adc
in
pop
mov
cmpsl
add
movsl
cmp
cmp
subb
mov
out
nop
js
ficompl
mov
sbb
pop
inc
xchg
fstpt
lock
aas
pop
lret
mov
popaw
xor
xor
sbb
popa
shrl
add
dec
mov
shlb
jbe
add
mov
loopne
inc
mov
adc
xor
lods
or
fstpl
push
cmp
out
cmc
jae
mov
jne
lret
mov
dec
leave
test
jle
in
jno
jne
cmpsb
xlat
pop
repz
pop
pop
pop
daa
jmp
jb
arpl
jo
std
add
sub
sbb
push
out
repnz
loopne,pn
pop
sarb
mov
call
in
adc
xor
cmpsl
add
push
notl
inc
popf
outsb
leave
in
cs
dec
sar
cwtl
sbb
pop
out
pop
push
inc
mov
dec
icebp
xor
mov
cli
sbb
aaa
mov
lods
cltd
mov
add
negb
push
dec
xchg
mov
push
dec
sbb
fsubr
xlat
cld
repnz
and
mov
inc
lret
movl
outsl
cmp
enter
movsb
inc
rorl
sti
mov
jp
inc
cmp
andl
jmp
negb
inc
or
addr16
push
lret
or
pusha
sbb
into
repz
cwtl
push
daa
loope
pop
mov
cmp
lods
sbb
sub
out
xor
mov
xchg
or
popl
xor
inc
insb
shl
pop
in
push
cs
inc
out
lahf
dec
mov
mov
sti
fwait
dec
mov
imull
xchg
scas
mov
jb
pop
adc
or
push
repnz
mov
dec
adc
into
pop
pop
loop
inc
rclb
adc
test
cmp
cmc
jge
xor
loop
mov
or
outsl
cmpl
popa
xchg
add
arpl
sarb
hlt
sbb
cld
int3
cmc
push
inc
test
push
cmpsl
mov
jg
lret
lds
xchg
lcall
or
and
les
addr16
popa
xor
cli
ficomps
cmp
jg
test
jle
loope
sbb
jo
push
mov
sub
xor
aaa
xchg
pop
negl
jl
stc
outsl
dec
popf
lcall
pop
sub
out
shll
lret
inc
adcb
pop
cmpsl
mov
mov
mov
rcll
mov
mov
movsl
mov
mov
int3
bound
inc
push
xor
and
cld
scas
cwtl
cmp
push
dec
pop
adc
and
and
xor
int
inc
and
pop
inc
mov
push
pop
xchg
pop
lahf
stos
cs
add
mov
and
cmp
or
data16
ficoms
lods
xor
shrl
cmove
nop
sub
sbb
push
mulb
decl
fwait
jae
ret
adc
xchg
rcll
arpl
or
ds
xor
xor
movsb
inc
sub
iret
jl
insb
iret
dec
or
in
pop
or
insl
cs
popf
push
popa
jl
mov
into
mov
sub
sti
fldl
cmp
xchg
push
fldcw
jmp
mov
pop
jge
cmp
inc
ret
xchg
addr16
out
mov
sub
movsb
mov
sbb
imul
shl
dec
insb
mov
and
mov
dec
frstor
add
and
push
inc
inc
cld
rorw
inc
and
xchg
and
ds
aas
dec
loop
push
movsb
lds
add
cli
dec
dec
int
jmp
push
mov
gs
test
daa
imul
mov
sbb
pop
inc
cli
loopne
cmp
xchg
aaa
hlt
cmpsl
int
sti
mov
add
fucomip
subb
call
sti
or
ds
lods
add
push
add
adcb
js
insb
push
cmp
adc
add
sub
mov
add
movsb
and
pop
cltd
outsl
and
andl
pop
test
imul
mov
jle
pop
aaa
push
or
pop
sahf
push
sahf
enter
inc
sbb
xchg
fldenv
lcall
mov
dec
mov
sti
shr
mov
sbb
mov
sub
jg
pop
leave
jno
fisubrl
clc
test
pop
mov
ja
mov
outsl
outsb
in
imul
aas
mov
push
imul
scas
pop
loopne
and
mov
add
and
pop
sub
andb
mov
outsl
int3
bound
mov
inc
aaa
push
sbb
sbb
adc
jle
cmpsb
sub
sbb
push
out
int3
in
push
lret
das
pop
nop
nop
aaa
cmpsl
loope
arpl
repz
rorb
iret
roll
popf
scas
js
fldcw
push
mov
pop
shr
mov
fcomps
or
lret
lahf
sbb
pushf
fmuls
cmp
cmpsb
xor
xchg
jl
jge
das
sub
mov
mov
pop
mov
aas
push
push
stos
push
mov
xor
jge
xchg
xchg
jle
pushf
in
mov
cwtl
mov
std
adc
push
cmpsb
mov
subl
lods
nop
xchg
add
and
dec
fistl
mov
push
rcrb
push
jnp
std
pop
xor
sbb
push
pop
outsl
je
pop
pop
sub
push
shlb
push
sbb
adc
dec
nop
xor
pop
or
repz
es
out
lcall
xchg
fwait
pop
push
and
push
push
sbb
or
inc
cwtl
sub
int3
lret
xchg
outsl
setae
nopl
notb
orb
or
test
jns
aas
pop
test
xlat
and
or
cmp
testl
outsl
negl
int
mov
test
es
xchg
xchg
push
push
in
xor
int
dec
inc
ljmp
mov
xor
adc
int
push
sbbb
shll
adc
rorb
in
mov
fstl
jbe
add
sub
ret
xchg
enter
testb
push
pop
in
inc
or
sub
enter
movsb
jnp
push
test
cbtw
lods
mov
dec
mov
test
mov
cwtl
xchg
into
adc
fs
inc
cmp
and
das
xchg
ficompl
in
cld
lahf
jb
pop
jp
add
es
and
mov
adc
clc
outsb
mov
imul
dec
inc
cld
cmp
in
push
fadds
clc
mov
inc
adc
rol
ljmp
int
mov
or
test
inc
inc
int3
stc
ret
int
push
shlb
adc
jne
sbb
sub
lods
cmpsl
inc
test
xchg
lods
xchg
mov
test
adc
sbb
jg
popf
mov
jle
mov
jl
movb
mov
mov
push
repnz
or
shlb
sbb
movsl
or
lret
mov
out
add
mov
sbb
or
lcall
jecxz
movsb
adc
fnstenv
jmp
xor
stc
imul
movsl
mov
shlb
inc
xor
dec
rclb
pop
test
enter
lock
xor
push
fsubrs
iret
and
or
mov
jmp
mov
leave
sub
cmp
push
xor
push
xlat
mov
cmp
fcmovu
ljmp
pop
es
bound
cmpsb
adc
inc
push
in
mov
js
cmpsl
mov
jle
lds
lret
push
cmpsb
mov
stos
mov
es
push
subl
stos
out
xchg
inc
ja
outsb
sub
jo
loop
hlt
xchg
js
call
aaa
push
mov
dec
mov
arpl
inc
out
hlt
out
push
jbe
adc
and
sarl
fisubl
loop
and
push
xor
enter
test
mov
or
sbb
cmp
mov
and
jmp
sti
xchg
leave
jg
jns
arpl
fmull
push
pop
adc
popf
dec
adc
aam
jecxz
sub
sub
sbb
je
mov
iret
xchg
stos
mov
mov
movsb
sub
sbb
sbb
mov
push
xchg
sbbb
stc
or
push
movsl
adc
cmp
mov
stc
mov
mov
std
pop
dec
add
lret
mov
mov
mov
sub
push
or
test
ret
push
add
scas
rorl
or
add
rorl
or
xor
mov
mov
mov
add
and
mov
mov
mov
lea
mov
mov
mov
sub
add
mov
mov
xor
add
jne
mov
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
add
imul
mov
mov
mov
add
or
mov
mov
jmp
out
dec
mov
jne
jae
or
cltd
int3
sahf
jl
imul
jp
xor
scas
in
add
or
adc
push
sub
sbb
das
jo
or
out
mov
sarl
cmp
fs
pop
and
mov
mov
ret
cmp
lods
addr16
icebp
jmp
adc
cmp
rcrl
mulb
es
jbe
xchg
sub
jmp
shr
pop
sti
fstpt
jo
cli
dec
repnz
xchg
insb
imul
mov
push
inc
or
push
or
call
sahf
into
aam
add
inc
sbb
outsb
dec
add
or
mov
pop
ficoms
xchg
fcoml
inc
cmp
daa
repnz
cmp
jo
data16
int3
lds
je
sbb
cwtl
add
lods
loopne
sahf
sbb
bound
pop
or
les
xor
sbb
pop
js
adc
cmc
cmpl
rcrb
insb
sub
inc
add
or
aas
jae
push
lret
push
sbb
fists
imul
call
xchg
add
and
lds
int
xchg
inc
out
or
pop
mov
push
and
xorl
jae
cmp
xchg
out
cmp
pop
test
jae
fsubr
ds
out
jmp
xchg
dec
inc
into
and
xlat
aad
imul
cmp
pop
shlb
roll
out
outsb
xchg
inc
test
aas
cmpsl
mov
adc
sbb
lret
mov
dec
sbb
aam
pop
sbb
imul
cmp
xor
mov
stos
test
push
daa
sbb
arpl
xor
pop
push
mov
pop
insl
mov
and
int3
cltd
cmovbe
call
daa
xlat
cltd
loopne
xchg
movsl
cmp
and
loope
icebp
lret
jnp
mov
aad
addb
xlat
dec
cmpsl
ret
sub
sahf
mov
std
xorl
outsb
dec
jge
ss
call
or
repz
mov
je
inc
ljmp
stos
or
sbb
mov
hlt
xchg
movsl
xlat
cwtl
out
mov
in
fsubs
test
xor
mov
jnp
and
mov
push
ficomps
leave
xchg
mov
mull
fadds
cmp
add
or
in
adc
xlat
addr16
ljmp
aas
or
mov
jmp
jne
push
ficompl
cmpsl
sub
xchg
gs
dec
adc
or
and
scas
sbb
clc
mov
mov
sbb
mov
push
push
cmc
xor
push
jmp
les
decl
adc
mov
insl
jns
imul
add
jmp
aad
test
repnz
pop
sbb
jbe
push
xor
push
sti
or
push
jmp
push
mov
int3
mov
xor
push
out
cmp
xchg
sub
push
repz
call
loope
mov
cmp
les
adc
pusha
mov
lahf
fisubrs
xchg
push
inc
xor
popf
mov
push
add
xchg
xorb
xlat
ljmp
cld
adc
into
pushf
fimuls
xchg
lock
adc
stos
into
or
push
mov
imull
ret
mov
dec
dec
fstp
inc
add
rcrl
mov
add
xorl
bt
loop
mov
sbbb
fyl2xp1
xchg
pop
test
cmp
mov
dec
es
loope
scas
jecxz
test
adc
dec
aad
popa
dec
les
inc
fcmovnbe
fsubr
sub
inc
cmpsl
jbe
mov
incb
xor
sub
fwait
jg
or
mov
pop
push
and
xor
xchg
xor
dec
cld
xchg
fdivs
adc
cmpsl
xchg
and
fsubs
xchg
nop
call
jl
stc
gs
fnstsw
fadd
cmp
jnp
stos
cmp
mov
jmp
ds
pop
sub
add
popf
add
mov
lea
lret
mov
mov
icebp
or
inc
sub
addr16
sahf
les
cltd
dec
lcall
fistl
or
dec
cs
xlat
stos
or
mov
imul
clc
leave
int3
xlat
jae
mov
test
sbb
int3
aas
fmul
and
add
adcl
inc
push
mov
das
mov
jne
jno
adc
cltd
cmc
cltd
cmp
cmp
sbb
lods
push
or
add
popf
add
movsb
pop
outsl
rdtsc
stos
imul
and
add
adc
sbb
test
xor
pop
jp
xor
sub
sahf
inc
mov
sub
imul
nop
sub
shr
sub
add
inc
xor
adc
cmp
or
sub
push
fdivs
bound
jle
and
aad
jb
popf
movsl
xchg
pop
xcrypt-ecb
cmpsl
dec
xchg
sahf
dec
ja
pushf
inc
mov
mov
shlb
movsb
cmp
push
loopne
fnsave
aas
sbb
shll
stos
push
ret
push
lret
jbe
xor
sbb
shlb
imulb
push
mov
add
pop
push
adc
cmp
cmc
jb
sbb
pop
popa
xchg
daa
jb
test
jns
dec
ret
jp
inc
insb
push
dec
push
xor
test
sub
call
cmp
aam
sub
cmp
int
push
test
add
call
dec
push
or
adc
pop
xchg
pop
div
sbb
mov
and
lahf
mov
lret
mov
aaa
jl
fsubrs
add
test
add
out
mov
adc
dec
or
cli
addr16
clc
pop
add
mov
mov
inc
sbb
ret
push
push
pusha
mov
sub
out
and
clc
sbbl
and
mov
xor
xchg
aas
xor
fmull
adc
jg
mov
arpl
xchg
push
pop
ja
es
xchg
call
cld
cmpsb
in
jo
adc
scas
gs
movsb
pop
out
loop
jecxz
dec
cmc
xlat
xor
mov
pop
sti
cmpsl
into
mov
in
inc
lahf
stos
push
je
sub
int
daa
enter
popf
push
inc
mov
sbb
jb
mov
in
inc
into
adc
aaa
mov
leave
push
leave
adc
push
xchg
aaa
mov
lds
push
cmp
pop
pop
mov
enter
sbb
mov
mov
xor
ss
mov
adc
inc
sbb
mov
jle
dec
cld
call
or
andl
push
jns
dec
pop
aaa
mov
lods
call
das
xor
inc
add
mov
fldt
adc
push
mov
cmp
pop
add
add
addr16
add
insb
clc
xor
rorb
pop
scas
mov
dec
mov
lock
xor
adc
xor
sub
xchg
inc
pop
stos
imul
lock
pop
aad
push
dec
add
testb
xchg
pop
jmp
cmpl
and
xor
test
popa
pop
leave
push
daa
ret
iret
call
loopne
push
mov
nop
test
cmp
inc
pop
mov
lret
cwtl
dec
das
jno
sbb
push
jne
add
adc
xor
xchg
popa
push
adcb
cwtl
or
insl
rorl
inc
outsl
and
push
lret
shrl
jb
inc
jae
mov
inc
inc
fidivl
pop
pusha
xor
sub
int
xor
xchg
adc
push
add
shlb
scas
add
fldcw
cltd
and
scas
pop
mov
lds
inc
or
inc
imul
pop
or
fsubrl
xchg
loope
and
inc
sbb
inc
mov
icebp
test
out
add
int3
dec
xor
and
mov
movsb
outsb
push
push
or
in
mov
mov
xchg
push
icebp
ds
jbe
inc
imull
out
aas
or
or
sub
xor
in
sub
add
xor
jge
jae
add
xor
stc
inc
lret
into
test
cmp
rorl
and
xchg
pop
pop
xor
sub
fldlg2
jbe
dec
out
ljmp
jno
jmp
dec
movsl
loopne
cmc
add
cmpb
test
movsl
test
xchg
dec
iret
jnp
jo
xchg
dec
push
mov
mov
test
popa
push
sub
jmp
nop
dec
enter
leave
mov
ds
sub
jnp
mov
xchg
or
dec
push
adc
mov
punpckhdq
stos
xor
xlat
lret
inc
and
inc
cs
mov
mov
int3
xchg
lds
jp
pop
and
mov
push
inc
add
movsl
cmpsl
lret
mov
or
sarl
add
add
xor
scas
mov
sub
sub
xor
adc
adc
test
rcrl
movsb
xchg
rol
add
ss
sub
fidivrs
jns
lahf
gs
dec
fmul
push
outsb
ret
push
inc
stc
inc
dec
sbb
out
fcoml
data16
fwait
xchg
lock
ds
dec
sbb
fmull
ja
sbb
or
mov
xor
ja
cmp
pop
inc
or
dec
and
push
enter
inc
and
repnz
aas
leave
add
ss
cld
imul
jle
sub
xchg
mov
xchg
lcall
or
sbb
sub
and
or
push
outsl
push
clc
lea
jecxz
jp
xchg
imul
nop
inc
idiv
aad
xor
mov
sub
rcll
repz
mov
cmp
adc
add
pop
dec
int
inc
in
jecxz
inc
fmuls
test
fidivs
ja
in
imul
fistpll
outsb
das
loopne
mov
nop
aaa
adc
inc
mov
sub
adc
leave
rcrl
and
out
pop
gs
jb
mov
test
xor
push
adc
adc
inc
push
vpaddd
aas
test
adc
cmpsl
arpl
cmp
jns
inc
mov
in
mov
inc
fcmovnb
gs
testb
ds
mov
test
mov
cwtl
ljmp
mov
call
sub
xchg
xor
sar
lret
aam
fcompl
push
inc
popa
cmc
push
neg
js
sbb
aaa
mov
jmp
in
mov
sub
mov
mov
pop
mov
inc
in
cwtl
nop
roll
nop
jo
sbb
dec
outsb
mov
jnp
repz
loopne
clc
push
sti
sub
or
fstps
int3
push
sbb
pop
mov
xchg
lcall
sub
mov
or
das
push
lahf
mov
pop
inc
xchg
bound
in
mov
mov
jmp
ret
jbe
cmp
gs
mov
rolb
xchg
jle
mov
mov
mov
ja
mov
xchg
and
insl
bound
adc
sbb
mov
pop
testl
fcmovbe
pop
cltd
push
adc
fisttpl
mov
add
lock
movsl
pop
das
pop
in
add
movsb
pop
dec
mov
bound
mov
loope
mov
cmpl
out
inc
fimuls
scas
add
xchg
inc
pop
push
sub
cmp
push
xor
out
adc
xor
adc
jb
pop
scas
out
push
adc
xor
push
int
movsl
imul
inc
ljmp
push
mov
jmp
pop
out
ljmp
das
popf
mov
and
fidivrs
into
mov
idivb
cltd
push
mov
dec
fsubrl
out
loop
js
cmp
pop
loop
popf
andl
xlat
fisubrl
mov
mov
adc
popf
sub
sub
mov
dec
into
mov
jae
sub
cmc
xlat
sub
scas
stos
and
pop
scas
daa
xchg
xchg
mov
mov
sub
fcomps
xor
cmp
or
mov
sub
es
jbe
jbe
jns
aad
adc
jbe
inc
xor
mov
pop
stos
dec
ss
jno
repz
stos
xchg
pop
cmp
adc
xor
dec
mov
dec
shll
dec
add
insl
dec
mov
in
mov
repz
pushf
mov
data16
mov
fisubl
fmuls
pop
ljmp
mov
fisubrl
iret
sub
test
inc
and
ja
sub
and
jge
mov
sub
imul
pop
xchg
push
xor
jae
loope
add
jp
mov
mov
push
leave
cli
xchg
jae
repnz
hlt
faddl
cmp
in
rclb
push
sub
lahf
dec
into
lock
mov
xchg
jne
imul
pop
sub
orb
adc
pusha
dec
mov
out
mov
ljmp
ret
mov
sti
and
mov
dec
sub
and
js
push
add
xchg
cmp
add
mov
jmp
jae
insl
cld
loop
lods
adc
add
push
inc
mov
rcrb
inc
sbb
ret
add
mov
add
mov
cmp
pop
sbb
jnp
js
dec
mov
and
push
xor
call
js
stos
jmp
ss
add
fdivrp
inc
aaa
jecxz
ss
sbb
jae
fmul
jmp
stos
loope
lret
fisttpl
mov
xor
test
aaa
icebp
or
cvttps2pi
nop
adc
push
out
sub
sarb
and
jle
addr16
push
push
sbb
and
stos
mov
repnz
test
scas
ljmp
mov
fstpt
mov
addr16
cmp
into
es
mov
mov
cli
mov
mov
das
dec
loope
mov
inc
addr16
push
sahf
cmp
inc
jmp
stos
jae
push
xchg
sahf
xor
push
dec
sti
incb
mov
push
dec
inc
xchg
in
lds
sub
pushf
sbb
and
movsb
cmp
dec
lret
cmp
stos
adc
jp
push
inc
loop
inc
sub
push
push
xchg
xor
jae
xlat
shrb
mov
sarl
lods
fidivs
mov
adc
cmpsl
scas
out
jmp
lock
add
fwait
call
push
inc
pop
icebp
mov
mov
push
push
add
lret
das
mov
xchg
inc
scas
fldcw
and
lret
xlat
imul
ja
test
call
push
jo
ret
sti
sbb
hlt
sbb
pushf
xchg
mov
push
or
push
stc
out
int
rclb
jg
mov
ds
int3
out
leave
mov
xor
data16
adc
test
repnz
mov
push
int3
or
xchg
mov
sbb
cmp
lods
cs
cmp
insb
bound
xor
ds
inc
in
int3
jle
shl
fidivrs
lahf
test
adc
jns
pop
sub
push
xchg
mov
xchg
je
mov
fisubl
loope
sub
daa
cwtl
and
out
xor
rolb
test
or
mov
mov
mov
xor
stos
cwtl
loopne
ffreep
add
jl
dec
lcall
pop
xchg
xor
xor
addl
imul
sbb
int3
xchg
mov
ds
test
fucomi
push
xlat
loope
loope
mov
add
dec
cmc
sbb
xchg
lods
jbe
cmp
ret
dec
pop
and
fisubrs
addb
mov
and
leave
pop
pop
or
mov
mov
or
sub
jo
cmc
lods
mov
mov
jle
fstps
stos
mov
dec
jge
xchg
mov
add
mov
sbb
dec
arpl
pop
fnstcw
movsl
inc
lods
mov
cltd
ret
das
loop
mov
fs
mov
into
js
cwtl
fmuls
or
jns
mov
idivl
jmp
fildll
mov
push
mov
inc
shlb
inc
repz
add
call
ds
xchg
cwtl
mov
cmp
ljmp
popf
mov
insb
fdivs
fs
es
int3
inc
cwtl
pusha
rcrl
mov
dec
push
adc
inc
push
xchg
dec
push
push
mov
jmp
mov
test
aaa
adc
add
pop
add
test
xlat
nop
iret
enter
pop
sbb
push
xchg
in
add
dec
ljmp
pop
jecxz
loop
sbb
ss
ljmp
add
and
sbb
xchg
mov
out
dec
jecxz
mov
xor
xchg
add
inc
out
adc
cmpl
xor
fwait
push
enter
mov
in
nop
or
js
mov
push
jl
dec
stc
inc
add
mov
ret
mov
push
dec
icebp
xchg
fdivl
and
sbb
ja
test
sub
mov
xchg
dec
and
sbbl
mov
lret
aam
pushf
push
sbb
arpl
ret
jo
les
mov
andl
sbb
xchg
scas
lock
add
je
test
aad
aaa
pop
cmp
mov
add
mov
pop
lods
daa
mov
or
das
xor
xor
in
mov
or
dec
adc
ss
mov
fwait
imul
out
outsl
mov
leave
cltd
icebp
sti
test
jmp
outsl
mov
sbb
mov
aad
outsl
inc
xchg
cmp
adc
push
inc
push
sbb
push
test
fstp
jns
push
icebp
jno
sub
rclb
mov
pop
cs
mov
mov
dec
or
dec
xor
mov
shlb
mov
lock
fcoml
out
xchg
imul
popa
cmp
in
imul
and
pop
cli
leave
fsubrl
add
push
fistps
push
repz
test
jne
cli
adc
xor
arpl
icebp
mov
aas
scas
pusha
jmp
cmp
xor
ficoms
jbe
push
outsl
jl
test
jne
jge
hlt
daa
pop
xor
sbb
mov
lret
fisubl
adc
inc
cmp
fcomi
repnz
push
push
sbb
inc
cmpsl
push
in
sub
jg
add
shlb
jne
inc
jno
call
inc
mov
lods
mov
bound
inc
mov
pop
arpl
cld
movsb
std
xchg
or
sbb
jb
lea
pop
pop
mov
in
mov
bound
cmc
adc
dec
aam
mov
fmulp
fstp
imul
adc
jp
rcll
in
mov
lcall
or
pop
or
out
iret
outsl
test
repz
xor
adc
mov
cmc
mov
push
fwait
aad
pop
scas
movsb
push
out
divl
or
add
mov
mov
mov
xchg
jbe
rclb
sub
sub
mov
in
sub
sbb
fs
in
or
mov
hlt
and
enter
add
xchg
loope
mov
outsl
stos
scas
jbe
mov
fidivrl
mov
dec
loope
ja
imul
cli
ss
sti
xchg
adc
test
mov
call
adc
scas
enter
outsb
xchg
inc
sbb
xor
jb
mov
push
adc
pop
inc
out
or
ret
dec
adc
mov
xchg
test
xchg
ret
rcrl
inc
push
arpl
jo
cmp
cltd
lret
insb
push
popf
gs
clc
lock
jecxz
inc
aad
pop
lret
sub
mov
test
pusha
repnz
outsl
push
es
ret
push
xor
adc
in
lret
or
sub
push
loop
fdivrl
xor
dec
cmp
sahf
aad
and
jp
hlt
adc
scas
mov
dec
pop
rcrl
xchg
imul
shlb
mov
xchg
pusha
addb
sub
inc
je
jo
lds
cltd
pop
jge
sbb
inc
fwait
stc
sbb
mov
loope
cmc
dec
sbb
clc
adc
sbb
hlt
ds
out
fldl
rorl
xchg
nop
hlt
pop
test
fwait
and
lahf
and
iret
testl
arpl
divb
pop
and
loopne
int
push
push
or
pop
cli
inc
xor
and
jl
cld
xorl
push
pop
cmc
add
in
mov
sub
mov
sbb
xchg
and
lds
shll
cmp
push
arpl
loop
dec
mov
mov
mov
xchg
sub
xchg
ja
ss
pcmpgtw
rorl
mov
mov
sbb
mov
mov
ljmp
xor
sub
xor
xchg
fnstsw
clc
xchg
addr16
lcall
cmp
push
loop
addr16
xchg
adc
fdivrl
sub
out
push
popa
jge
mov
xor
js
sub
xchg
jmp
jg
sbb
pushf
dec
shll
push
adc
mov
mov
inc
push
cld
addr16
jmp
jnp
les
test
das
inc
rorb
xlat
or
xchg
loopne
adc
mov
jl
rolb
push
mov
in
lahf
lcall
cmpsl
fldcw
inc
arpl
inc
ds
xchg
mov
lahf
mov
sub
pop
inc
icebp
bound
jo
mov
xor
fstp
cmpsb
je
inc
xchg
jne
and
les
aad
push
push
callw
addr16
mov
jb
cmp
lock
mov
jmp
mov
cmp
aad
add
xor
mov
lea
stos
cmc
lds
jg
mov
push
sahf
jnp
sbb
fistl
faddp
cli
add
test
repz
sarb
stc
mov
popa
and
xchg
les
movl
movsl
add
test
inc
aas
jmp
mov
iret
push
mov
cmp
nop
repz
pop
pop
add
push
ss
jo
adc
sub
aam
push
cmp
inc
jbe
push
sbb
cmpsl
or
sbb
movl
add
inc
in
cs
mov
sbb
push
loop
xchg
jp
adc
jno
inc
xchg
cmpsl
mov
push
int3
adc
xor
arpl
sub
dec
insl
je
dec
mov
shrb
cmp
mov
movsb
ljmp
push
addr16
dec
stos
inc
or
sub
mov
cmpsb
repnz
cmpsl
xchg
loopne
das
dec
lods
bound
enter
push
pmullw
ja
mov
sub
dec
dec
pop
rcrb
mov
out
cmp
jne
scas
pop
xchg
loop
and
push
cmp
sbb
pop
mov
sbb
push
lds
fsubl
xchg
xor
ret
mov
ret
xor
mov
jb
test
mov
imul
lods
cmp
cmp
in
jo
popf
mov
stc
dec
push
xor
mov
cmp
int3
es
mov
ret
jp
adc
pusha
jmp
adc
fisttpl
aad
inc
mov
cmp
pop
jle
cmp
jne
test
popf
mov
pop
jp
add
call
stc
xchg
sub
sbb
shrl
pop
dec
inc
ljmp
fbld
icebp
add
jl
sub
sub
jbe
lods
cs
je
ja
mov
dec
pop
jmp
into
popl
test
movsb
xchg
std
xorb
aam
fs
cmp
rcrb
sbb
int
lcall
jae
inc
cmp
pop
sub
inc
mov
adcl
loopne
lret
xor
mov
xor
and
push
pushf
jmp
aad
pushl
sahf
dec
sbb
adcl
daa
in
mov
inc
scas
sub
aas
stos
nopl
lahf
popa
xchg
cmpsl
testb
mov
sbb
cmp
cmpsl
lods
dec
sbb
decl
or
mov
cli
mov
insb
pop
ret
lock
cltd
cli
cmp
xor
mov
fistl
xchg
ror
push
jb
mov
into
and
cmp
cwtl
lods
pop
or
or
lahf
call
mov
fbld
sahf
or
pushf
mov
pop
mov
mov
outsb
mov
pop
les
add
pop
adc
push
cmc
hlt
or
sub
mov
fidivs
stos
or
fists
ss
mov
ret
test
fs
adc
xchg
mov
inc
fstpl
lds
mov
icebp
jno
lret
ja
leave
bound
add
xchg
in
lret
adc
bnd
inc
sbb
and
insl
dec
mulb
icebp
pop
js
pop
xchg
push
mov
xor
xor
inc
fldcw
leave
push
in
dec
cmpsb
cmc
lret
sub
insl
pop
mov
mov
jne
iret
orb
imulb
out
lods
add
adc
js
outsl
or
sar
sub
shll
xor
or
and
add
out
jne
xor
mov
pusha
lcall
fidivs
repnz
outsb
bound
test
adc
jns
stos
in
movsb
scas
or
adc
lods
sti
jo
subb
out
and
mov
fcoml
push
gs
pop
adc
sbb
fstpt
push
adc
fs
scas
jmp
imul
and
and
into
xchg
push
insl
mov
add
and
pop
movsl
mov
sub
sub
cmp
jl,pt
mov
rolb
and
cmp
sahf
adc
and
jns
cmpsb
notl
pushf
js
sbb
fistpll
mov
jo
xchg
loop
mov
cmp
fs
and
inc
jno
sub
sbb
xchg
xchg
stos
push
mov
fwait
mov
dec
clc
mov
or
mov
mov
cltd
mov
fcoml
jo
mov
mov
jae
in
dec
test
mov
push
ret
and
xlat
add
cmp
imull
inc
daa
and
xchg
and
xchg
mov
out
cli
outsb
cmp
stc
pop
xor
add
jl
jl
add
lods
sbb
sbb
mov
adc
push
dec
fisttps
int
cmp
cmp
sub
ss
aam
addr16
xorl
fcomip
in
call
mov
mov
test
ljmp
mov
imul
cmp
int3
aaa
incb
xchg
movsl
movsb
lcall
xchg
rcrl
test
pop
sbb
sarb
lret
mov
or
sbb
push
movsl
aaa
pop
xchg
pop
and
mov
cmp
and
dec
dec
and
or
jae
jg
hlt
adc
je
lcall
cmp
pop
or
les
dec
js
lods
jp
or
xor
cmp
out
sub
rclb
inc
pusha
stos
adc
fwait
mov
sarb
mov
cwtl
push
cwtl
imul
adc
fs
xor
push
xor
dec
rcll
popa
mov
cld
int
inc
int3
mov
and
pusha
mov
jnp
push
in
int3
aaa
lods
std
xor
pushw
mov
cmpsl
insb
inc
sahf
push
push
pop
movb
pop
push
popf
mov
dec
mov
loopne
in
popf
cmp
lea
jno
add
xlat
lret
inc
and
adc
mov
jbe
out
and
push
outsl
data16
jns
jmp
mov
call
push
inc
pusha
lcall
lret
pop
or
mov
push
iret
jbe
add
loopne
sbb
scas
add
je
push
ret
push
mov
arpl
ja
dec
add
ficoml
inc
push
dec
jb
jp
addr16
outsl
ret
sub
inc
sub
adc
sahf
into
imul
fidivs
ljmp
mov
fildll
add
sub
test
push
xor
push
mov
aaa
add
cmp
nop
jne
dec
mov
push
mov
or
sub
gs
mov
sbb
bound
repz
out
xchg
test
ret
bt
repnz
dec
xchg
in
jnp
je
or
push
lods
xor
ljmp
data16
stos
inc
lods
pop
inc
mov
lods
fidivrs
sbb
mov
mov
xor
movsl
jne
cmp
mov
jp
add
je
sti
shlb
sbb
dec
nop
addr16
insb
enter
test
pop
dec
in
insb
fildl
adc
ror
sti
adc
aaa
pop
loop
xchg
mov
icebp
lcall
repnz
fiaddl
inc
call
sub
push
xchg
push
xorl
adc
in
dec
jmp
fnstcw
notl
cmp
dec
popf
or
mov
scas
or
cmpsb
rcrl
stos
test
movsl
imul
pop
pop
mov
sbbl
shlb
inc
or
jmp
and
cmp
sub
pop
ret
ret
fstpl
xor
dec
loopne
lea
pop
adc
xchg
sbb
or
adc
repnz
cmpsb
inc
push
icebp
loop
mov
pushf
lods
mov
mov
fstps
or
lock
scas
jno
and
setle
leave
xchg
mov
mov
fwait
dec
pop
ljmp
rorb
adc
push
popf
les
add
dec
jmp
rorl
cltd
xchg
mov
adcb
mov
mov
and
pushf
movsb
pop
pop
mov
stos
std
scas
inc
cmp
int
sarl
mov
push
loopne
sbb
cmp
dec
mov
adc
mov
inc
jle
lods
push
add
mov
inc
xor
je
jge
test
jmp
push
dec
xchg
jmp
lods
in
call
xor
jg
or
cmc
mov
into
mov
push
adc
testl
cmp
xchg
jns
push
jge
stc
xchg
and
sti
test
push
push
jns
add
cltd
mov
mov
inc
or
jnp
out
and
pushf
or
cmp
xchg
add
xchg
mov
mov
lea
fstpt
ds
or
nop
ret
fwait
stos
adc
mov
xchg
or
repz
jns
xor
add
insb
push
inc
or
cmpsb
xor
xchg
jecxz
mov
pop
jl
cli
xchg
insb
jae
repnz
sahf
movsl
imulb
mov
cs
mov
jbe
pop
push
mov
cltd
andb
pop
mov
shll
rorl
or
and
mov
mov
mov
lea
mov
mov
mov
sub
jmp
xchg
pop
and
mov
jo
push
sarb
cmc
std
jns
push
pop
jp
fstpl
pop
add
aas
call
pop
es
outsl
push
cmp
movsl
mov
jmp
cs
icebp
jbe
sahf
cmpsl
jl
je
je
mov
das
push
pusha
pop
mov
in
cmp
cmp
ret
dec
insl
mov
rcrb
sbbl
cwtl
pop
mov
jl
mov
jle
or
test
xchg
sbb
int3
push
imul
cmp
and
les
xlat
pushf
aam
mov
push
add
loopne
sti
adc
addr16
call
sbbl
ja
pushf
in
mov
fxch
or
mov
nop
mov
pushf
addl
jle
sub
cmp
insl
sbbl
and
ljmp
xchg
imul
sti
stc
out
aam
test
xchg
in
jecxz
and
and
adc
cmpsl
int
add
pop
sbb
movsb
sahf
cmp
mov
sub
aas
dec
push
pusha
call
adc
mov
ret
cmp
mov
sub
aas
mov
adc
sbb
sub
test
cltd
test
pop
loop
testb
xor
and
mov
call
bound
xor
sub
jg
lea
daa
icebp
or
dec
pop
ret
dec
stc
loope
or
push
inc
outsl
dec
jecxz
xor
mov
das
adc
add
loope
mov
pop
dec
dec
rolb
xchg
pusha
insb
xor
jg
adc
fs
popa
icebp
ret
fnstsw
in
mov
insl
cmp
adc
mov
xchg
daa
cmp
xor
jo
pop
or
hlt
subl
push
hlt
and
mov
xor
jmp
cmpsl
or
sbb
mov
cs
js
xchg
jge
rolb
and
inc
mov
aam
jo
or
lods
lea
or
iret
push
adcb
push
out
pusha
adc
add
ds
mov
sbb
lock
push
or
push
inc
pushf
fldl
mov
fldt
mov
sbb
xor
add
mov
cli
and
lock
cmp
add
add
inc
mov
mov
add
sbb
dec
sub
fucomp
insb
popf
js
popf
leave
inc
test
add
pop
mov
insl
iret
cld
shrb
mov
js
fidivs
cltd
jp
test
int3
mov
or
insl
shl
xchg
mov
std
in
or
add
mov
cmp
movsl
adc
sbb
adc
push
int3
mov
loopew
sbb
mov
adcb
dec
dec
into
adc
in
add
push
jo
cld
xchg
add
push
mov
push
mov
pop
xorb
stos
cmpsl
xchg
and
imul
or
aam
ret
fucomp
outsl
repz
push
cmp
out
in
jg
sub
ljmp
inc
les
es
and
jl
in
outsb
xchg
cld
shrb
sarb
mov
xchg
fwait
sub
sbb
stc
cmc
push
add
enter
out
jnp
inc
imul
fs
jecxz
mov
test
mov
or
sub
mov
inc
xor
sbb
sti
ja
ret
cmpsl
jg
push
dec
sti
push
rcll
lods
mov
clc
push
arpl
push
loopne,pt
mov
or
or
sbb
into
bound
xor
xchg
mov
decl
mov
sbb
ret
cmc
push
shrl
jl
fst
mov
sbb
movsl
push
out
pop
clc
jnp
inc
outsl
cwtl
subl
test
push
std
dec
and
into
lahf
movsl
cmpsl
icebp
mov
mov
pop
xchg
scas
imul
dec
add
test
sbb
mov
push
pop
stos
dec
push
or
lods
sbb
std
inc
loopne
adc
dec
mov
pusha
ret
and
mov
in
mov
lcall
jp
cltd
push
adc
das
es
fcmovne
mov
outsb
cmp
cmpsb
lods
inc
fdiv
or
sub
jmp
mov
or
mov
xchg
mov
in
mov
sub
into
mov
das
jnp
into
inc
sub
nop
xlat
sbb
pop
jnp
sbbb
cmpsb
mov
std
and
lock
cmc
push
ret
iret
adcl
sbb
mov
xor
mov
jl
dec
add
pop
xor
popa
test
mov
inc
movsb
jge
shll
bound
dec
test
aas
icebp
mov
scas
pop
pop
mov
orl
pop
jb
sub
inc
int3
imul
mov
ret
or
aad
je
fstpt
mov
test
div
out
cltd
es
iret
add
lcall
add
popf
mov
fildl
mov
and
xchg
mov
js
clc
movsb
xchg
mov
add
xchg
outsl
sub
rolb
subb
pop
jp
repnz
fwait
inc
lret
jbe
das
je
pop
xor
sub
xor
sub
inc
pusha
xorb
and
lods
ss
mov
int
pop
repz
xchg
daa
cld
test
sahf
in
xchg
pop
sbb
jns
or
xchg
sbb
pop
push
and
xor
arpl
jae
push
int3
in
add
cld
or
jb
fstl
cld
fwait
pop
outsl
and
or
cld
test
flds
push
pop
outsl
jecxz,pt
test
lahf
cwtl
and
dec
xor
out
fisubs
sub
sti
aas
xchg
inc
test
cmc
push
xor
je
xor
add
mov
mov
mov
push
and
pop
inc
bound
fs
ss
mov
mov
test
out
mov
jg
mov
faddl
enter
lahf
mull
sbb
push
addb
adc
cmp
adc
mov
adc
ret
call
data16
fdiv
push
and
in
xor
ret
jle
adc
or
cmpsb
or
jo
sub
lea
adc
popf
jmp
mov
cmp
fldenv
mov
dec
xorb
bound
lods
cmp
jno
adc
test
jno
pushf
popa
or
mov
icebp
push
imul
popf
push
fiadds
iret
inc
dec
mov
cmp
sbb
mull
or
int
mov
xchg
sub
arpl
cmpsl
xlat
aaa
jbe
cmpb
jp
adc
cmp
mov
sub
cmp
xor
pusha
add
cld
pop
inc
imul
xlat
hlt
orl
adc
jne
pop
sub
leave
pushf
sbb
mov
aaa
push
inc
dec
dec
pop
cltd
call
mov
pop
pop
push
sub
mov
ljmp
out
mov
cwtl
sti
pop
or
call
add
push
mov
mov
lret
incl
mov
push
adc
cwtl
inc
stos
sti
xchg
push
adc
cmovb
jl
scas
aad
or
test
outsl
fildl
ds
aas
cwtl
cld
lret
pop
bound
mov
test
dec
xor
sahf
xor
add
xchg
cltd
jmp
and
xchg
nop
in
add
adc
rclb
jnp
add
mov
mov
xor
push
dec
push
mov
jg
cmp
xor
jb
test
mov
lret
imul
aas
or
push
rclb
mov
cmpsb
rorl
jge
pushf
test
push
sbb
xchg
xor
mov
icebp
cmpb
sbb
dec
inc
jbe
fsub
mov
sub
xchg
fimuls
cmp
dec
xor
mov
push
test
inc
mov
dec
sbb
mov
cmpsb
jle
mov
ror
loopew
test
pop
xchg
sbb
lods
inc
nop
sub
add
cmp
push
mov
sbb
lret
or
inc
ljmp
sub
fcmovnbe
stos
sub
and
mov
jno
shrl
xchg
mov
call
mov
cwtl
jnp
and
sbb
jb
aad
repz
xchg
jo
inc
in
push
rcrb
mov
neg
pop
aas
jl
cltd
push
inc
bnd
nop
sbb
cs
sub
mov
scas
jle
jno
in
pop
pop
and
push
cmp
sahf
les
dec
mov
push
mov
xor
mov
roll
xor
mov
dec
xor
lods
repnz
mov
pop
inc
fmul
jp
push
and
add
imul
out
stos
loop
push
mov
jnp
xchg
fs
clc
addl
in
xchg
clc
mov
les
loopne
out
pop
jb
fs
enter
aad
mov
xchg
dec
jb
popf
jne
dec
push
std
xchg
loope
insb
sbb
jecxz
and
loope
sub
dec
pop
es
pop
shlb
push
push
pop
mov
adc
dec
repnz
cli
cltd
scas
adc
mov
negl
cmp
lahf
inc
arpl
xchg
jb
pop
or
jle
stos
negl
or
pop
add
out
and
xchg
test
out
and
cmp
inc
sarb
push
out
movsb
add
ret
add
pop
or
jge
mov
inc
xchg
jmp
inc
inc
fidivrl
daa
fistl
jg
out
movsb
mov
ror
cli
sbb
sub
push
cli
mov
sub
push
mov
testb
scas
stos
test
mov
shr
scas
das
adc
fimuls
pop
mov
or
jno
sahf
cmp
xchg
xor
out
movsl
adc
jge
cs
and
mov
imul
dec
shl
lahf
sti
sub
or
sub
lret
sub
sub
pop
add
mov
outsl
or
iret
sbb
jge
daa
inc
pop
and
and
jle
movsl
ret
dec
clc
inc
adc
in
mov
icebp
mov
cltd
shl
pop
mov
or
add
dec
cmp
adcb
sar
testl
lods
je
cmp
hlt
jmp
jne
mov
mov
lret
std
iret
xorb
sahf
into
push
sub
and
push
addr16
sub
mov
ss
add
and
outsb
js
fldl
out
sbb
scas
sbb
inc
addl
pushf
pusha
outsl
dec
or
gs
jnp
jp
add
mov
sub
xor
shlb
fisttpl
stos
xchg
pop
mov
sub
sbb
jl
mov
psubusb
add
sarb
imul
ja
es
bound
pushf
pop
inc
push
push
aas
push
or
mov
adc
outsl
jnp
out
jmp
add
jle
scas
mov
push
pop
push
icebp
icebp
mov
fidivl
jae
pop
xor
les
in
aaa
fisttpl
cwtl
fmuls
mov
push
sbb
cmpb
sarb
xchg
cwtl
lods
sbb
cs
push
xor
leave
pop
fstl
nop
cmp
addr16
dec
adc
rorb
movsb
and
shl
lcall
loopne
in
lods
ja
les
xor
lds
dec
and
nop
sub
movsl
mov
notl
dec
das
hlt
sarb
insb
sbbl
lods
mov
dec
std
testl
cmpsl
and
sbb
add
sub
cmp
sbb
mov
out
es
mov
cmc
or
fwait
add
jmp
out
sub
cmp
mov
daa
adc
push
mov
or
mov
jae
repnz
push
ds
mull
adc
sub
mov
cmc
dec
loop
xor
or
ret
jne
add
mov
push
gs
jp
test
and
nop
sbb
sub
jne
popa
push
and
pop
mov
or
ljmp
pcmpgtb
loope
mov
mov
mov
fs
sahf
xchg
lret
stos
movsl
cmp
mov
dec
out
inc
sbb
cld
and
clc
jae
arpl
fdivs
add
std
and
inc
push
mov
xor
leave
sub
notl
sub
fsubr
cld
mov
js
mov
pop
sbb
rorb
insb
and
inc
shl
xchg
movsb
and
fsubs
or
or
pushf
dec
adc
mov
adc
mov
lahf
stc
aam
xor
pop
inc
lea
dec
leave
mov
into
in
sbbl
insl
shlb
dec
and
fs
or
mov
xchg
push
mov
mov
enter
cmp
outsl
jle
pushf
push
xchg
jae
sbb
enter
push
push
aad
inc
cmc
dec
mov
sarb
outsl
mulb
push
pop
rol
sarb
sub
sub
scas
and
testl
mov
ja
leave
pop
pop
aaa
ja
pop
sub
or
idivb
sti
cmp
lea
sbb
andb
xorb
and
ret
call
repz
ss
mov
add
sub
ret
mov
clc
outsb
fsubrl
cwtl
addb
lcall
mov
fstl
jmp
xchg
out
sbb
sub
loop
pushf
push
clc
or
sub
movsb
aas
sbb
pop
pop
imul
out
push
repz
inc
fistl
xchg
lret
subl
stc
js
pop
fwait
loope
lods
or
fldcw
sbb
stos
outsb
xchg
xorl
es
mov
mov
push
sbb
ja
xchg
iret
push
add
je
sub
sub
sahf
insb
dec
fwait
data16
jge
ljmp
sub
mull
ss
and
lahf
cld
sbb
mov
adc
in
ljmp
shl
mov
xchg
mov
scas
add
mov
loopne
mov
add
aaa
les
inc
cltd
js
sub
jne
and
pop
mov
add
or
bound
mov
pop
mov
pop
sub
jmp
sub
jge
jbe
mov
mov
fsts
stos
pop
add
add
xor
pop
movsb
push
jl
dec
push
dec
sbbl
ret
shl
test
dec
aaa
add
cltd
mov
in
dec
sbb
arpl
fdivs
xor
and
jbe
or
test
add
cmp
push
jae
fldcw
cli
push
pop
dec
iret
int
mov
fsubrp
out
gs
sbb
mov
sub
sub
sub
adc
call
jae
ljmp
push
mov
std
pop
call
das
push
iret
insl
iret
mov
sar
jmp
dec
mov
mov
or
push
fadds
ret
es
jbe
and
outsb
push
inc
mov
ljmp
cmc
ucomiss
iret
fldl
and
fcoms
adc
xor
filds
divb
and
jle
mov
cmp
pop
out
dec
aam
jp
int3
sub
or
adc
imul
cmp
and
emms
and
xchg
divl
xor
inc
in
jmp
das
sub
cmp
jmp
cmp
inc
xor
mov
mov
enter
fnstenv
sub
xchg
jno
xchg
xor
mov
push
adc
cld
xor
addl
loope
and
scas
out
jne
pop
mov
inc
inc
mov
lea
cmp
xor
mov
mov
cmpb
aas
lret
rolb
insb
es
cs
xchg
inc
roll
ljmp
sbb
push
lret
jp
popa
mov
mov
mov
divl
cmc
push
mov
xchg
rclb
sbb
mov
dec
out
repz
push
mul
incb
cmp
sbb
dec
add
xchg
andl
insb
xor
aad
sub
data16
cmp
sti
repz
push
les
inc
adc
push
and
into
pop
cmp
or
inc
lods
loope
jmp
xlat
jmp
ja
sarb
jae
ds
lahf
je
outsl
sti
cmp
inc
sub
pushf
cmp
jns
jmp
sbb
push
in
ret
cli
mov
xor
aad
fucomip
xchg
pop
xchg
sbb
mov
cmp
out
dec
faddl
xchg
enter
imul
pop
sbb
jns
in
fildl
addr16
lret
mov
test
pop
xchg
lcall
mov
test
andl
popa
inc
jo
data16
sbb
push
js
push
add
int
stc
mov
jns
xchg
push
mov
mov
test
mov
sub
jb
push
bnd
pop
sub
or
icebp
icebp
fbstp
lcall
dec
int3
adc
xor
stos
pop
dec
mov
sub
inc
adc
xchg
fucomi
push
jae
push
orb
fadd
and
xor
sbbl
jp
mov
lods
cmp
pop
fstpl
mov
inc
push
inc
out
fs
inc
jne
ja
outsb
mov
add
les
or
fwait
pop
lds
loopne
mov
daa
jae
mov
mov
shlb
fildll
push
and
cmpsl
or
pushf
ss
popf
shll
jecxz
cld
or
xlat
pop
outsl
push
and
iret
je
insb
push
mov
mov
push
test
sub
pop
arpl
insb
fwait
aas
jae
cmp
mov
repz
repz
int
push
inc
icebp
ret
mov
imul
pop
push
and
or
gs
scas
pop
jle
imul
dec
in
and
xorl
pop
shlb
ljmp
sub
imul
pop
ud2
mov
cltd
scas
adc
sbb
inc
pop
or
loop
pop
rol
push
mov
ficomps
divl
push
clc
push
mov
xchg
add
aad
fwait
rcrl
adc
andl
and
je
push
negl
push
gs
cltd
cwtl
add
dec
dec
test
inc
add
add
jmp
inc
mov
and
icebp
arpl
and
dec
popa
pop
mov
mov
mov
pop
mov
testl
lahf
jnp
ret
ja
testl
mov
sub
out
jno
lea
xchg
mov
pop
inc
sub
mov
shrl
push
add
mov
pop
sub
or
or
pop
dec
xchg
roll
or
movsl
jns
adcb
inc
xchg
test
rcr
jl
es
inc
lea
sahf
scas
push
pop
xchg
pop
mov
xchg
mov
mov
mov
dec
mov
rcrl
push
cmp
nop
or
aad
adc
jecxz
xchg
cmp
imul
rolb
pop
lret
xor
pop
jmp
push
aam
das
stos
and
push
mov
data16
adc
data16
cmp
into
push
fidivs
jne
mov
adc
add
sub
ret
sbb
dec
or
testl
xlat
or
dec
sahf
dec
movsl
ss
pop
je
sahf
mov
into
jo
inc
pop
pop
adc
cwtl
mov
pop
mov
in
pusha
es
scas
mov
cwtl
push
inc
cli
outsb
popa
pop
mov
pusha
adc
ret
hlt
pop
fadds
cmp
movsb
or
dec
xchg
jecxz
pop
enter
jo
imul
adc
xchg
push
and
dec
test
dec
imull
cmp
mov
sub
dec
fcoms
and
push
inc
pop
lock
fs
icebp
jp
cli
xchg
cmc
jl
rcr
mov
adc
and
in
xchg
gs
bound
pop
xlat
push
mov
jl
test
jmp
lahf
insl
adc
rclb
dec
and
sub
mov
or
loopne
data16
jno
inc
ja
push
ret
cmp
dec
sarb
lock
js
out
stos
insl
push
push
fldenv
adc
rolb
jne
rclb
push
pop
jb
sbb
xchg
mov
pop
jge
pop
sub
jae
and
jg
xchg
push
les
cltd
cs
push
loope
dec
lret
sub
push
or
movsb
cmp
std
pop
pop
orb
add
ss
rclb
xor
push
xor
daa
fbstp
jge
mov
fbld
push
shlb
adc
or
insl
sub
enter
loop
mov
add
fcmovnu
jo
add
mov
hlt
fistl
jns
test
ja
rcrb
xchg
data16
insl
push
scas
xor
inc
clc
cmpsl
or
and
xchg
sbb
add
int
mov
stos
in
ss
das
mov
int
int3
std
push
sbb
push
testl
in
je
das
mov
es
pop
cmp
push
cmp
imul
adc
xor
test
test
push
mov
fildl
cmp
dec
adc
lcall
add
bound
fldcw
repnz
adc
xor
mov
clc
inc
adc
xor
sub
arpl
cmp
dec
sbb
push
push
sub
and
imul
repnz
inc
ret
int3
lds
sbb
xor
cltd
jb
pop
scas
jno
xor
pop
add
and
sbb
movsl
je
jmp
mov
mov
cmc
cli
push
xor
and
jns
inc
fsub
int
mov
sub
jle
or
cmp
jle
xchg
test
loop
in
mov
lret
inc
jecxz
mov
stos
and
xchg
push
lea
lret
mov
jns
sub
sti
ljmp
aaa
fistpll
fwait
adc
sti
test
xchg
fistpll
lret
and
xor
cmp
mov
cmp
mov
int
adc
fistpll
repz
ds
fwait
push
imul
loop
insl
ljmp
mov
fisubl
loopne
mov
jecxz
and
stc
es
xchg
out
fisttpll
inc
cld
xor
add
ret
sbb
add
or
cs
mov
sbb
es
mov
xchg
and
fsubr
pusha
int
cwtl
stos
xor
js
or
jns
inc
add
fcoml
mov
lahf
data16
adc
icebp
or
insb
aaa
sbb
test
lods
push
pmaxub
leave
sti
addr16
div
xor
xchg
sub
adc
xchg
iret
fcoms
adc
stos
jno
add
sub
sbbb
pop
jge
rcrb
ja
stos
cmp
lds
cmp
mov
imul
rorb
sbb
test
cmpsb
fidivrl
mov
inc
fs
inc
push
xor
inc
sbb
push
adc
or
fsubp
push
xchg
push
xor
mov
loop
sub
or
push
popf
xchg
pop
mov
pop
xor
push
mov
mov
xlat
ficoml
pop
insl
jle
mov
mov
xchg
lds
dec
dec
jns
repnz
repz
mov
mov
xchg
popf
fstpl
mov
dec
mov
cmp
outsl
sub
mov
mov
movsl
lock
aaa
cwtl
cmp
scas
xor
pop
lods
repz
fsubs
leave
fcomps
daa
sbb
sahf
dec
pop
lret
push
adc
cmp
mov
sbb
outsl
ss
xchg
lds
cld
daa
addb
mov
imul
sub
lds
cld
daa
ljmp
xchg
lods
push
lsl
loopne
or
cmpl
scas
lahf
out
pop
lahf
jns
sbb
or
lods
into
lret
lret
mov
push
mov
or
call
sbb
addb
inc
push
into
lods
jp
sub
jp
inc
cmp
xchg
inc
pop
lcall
mov
pop
insb
pusha
mov
add
add
dec
and
insb
clc
add
and
mov
stos
pop
and
xchg
jb
loopne
test
mov
rclb
jbe
xlat
call
dec
leave
aad
das
ror
xchg
cmp
pop
and
rcr
scas
int3
repnz
jmp
fs
std
and
out
mov
pop
dec
cmp
pushf
sbb
sub
pop
outsl
popa
inc
or
lods
aam
xor
mov
rcll
mov
add
lods
sub
jg
sub
movsl
lock
icebp
jne
in
mov
imul
imul
outsl
push
cli
mov
push
add
cmp
lahf
jne
sub
es
pop
mov
imul
out
inc
add
stos
in
shlb
mov
mov
jns
out
pop
std
int
mov
pop
sahf
pop
in
test
push
mov
mov
dec
out
outsb
mov
ret
cmp
jg
sbb
or
jb
pop
xor
xchg
jge
sahf
test
add
iret
mov
dec
movsb
lds
sbb
sbb
or
pusha
mov
test
jl
add
mov
in
loop
int
out
xor
out
push
adc
xchg
ja
jmp
imul
and
fcoms
adc
test
out
test
shll
out
adc
push
xchg
mov
sub
adc
lsl
push
push
test
sbb
xchg
push
arpl
cltd
mov
clc
test
pop
xchg
ljmp
cmp
rorl
adc
add
js
leave
hlt
icebp
clc
adc
bound
mov
ret
shl
cmp
add
xchg
fsubs
cmp
fbld
popf
mov
jnp
xor
mov
xchg
mov
shl
xor
push
dec
adc
inc
or
popa
scas
or
cpuid
lods
das
orb
xor
setbe
sub
dec
or
rcrb
sub
add
ret
sbb
push
daa
mov
mov
les
sbb
mov
push
cmpsl
fldcw
mov
popf
outsl
pop
jae
xchg
jle
add
dec
cli
and
ret
push
cmp
lods
sub
mov
mov
push
xchg
mull
push
push
mov
adc
adc
xlat
test
mov
loope
cmpsl
xor
rclb
in
jne
les
stc
or
fcomps
js
adc
ds
xchg
cld
push
pop
pusha
sbb
sbb
sarl
inc
xchg
fidivrl
daa
inc
jo
mov
cmp
out
outsl
pop
aad
sbb
jmp
sub
scas
ljmp
lcall
pop
cs
mov
xchg
mov
or
daa
sti
rolb
iret
inc
repz
pop
call
js
jns
pusha
mov
test
mov
mov
add
ret
out
inc
inc
jb
movsb
mov
or
enter
mov
je
pop
mov
mov
mov
jg
xor
add
incb
or
add
xchg
xor
jb
loope
or
mov
subb
in
push
pop
lea
pop
clc
inc
test
outsl
push
stos
cmc
lret
dec
mov
inc
xchg
dec
jb
mov
inc
sub
scas
jmp
pop
fists
pushf
pop
mov
add
xor
push
add
mov
inc
inc
imul
xchg
pop
mov
mov
jg
inc
push
pop
fwait
out
sbb
pusha
mov
and
sbb
loopne
outsb
cs
pop
fldt
push
das
add
nop
jl
minps
mov
gs
hlt
aam
bound
icebp
testl
jmp
imul
inc
push
sbbl
clc
bound
xchg
inc
inc
xchg
movsl
mov
ds
mov
sub
sub
enter
js
and
cmpsl
xlat
test
sub
mov
mov
push
shrb
pop
stos
and
sti
mov
cltd
mov
push
fcomi
pop
cmp
jl
icebp
out
and
jns
cltd
or
loope
mov
fisttpl
imul
xlat
jp
popa
je
dec
pop
mov
popa
clc
frstor
cmp
popf
jg
xor
and
push
clc
std
out
inc
push
std
mov
je
mov
js
in
jmp
xorl
ret
ret
dec
lock
dec
outsl
fsubrp
fdivp
fcmovbe
add
xor
add
inc
int
xchg
sbb
pusha
cs
pop
movb
outsb
xchg
bound
lock
cmp
cmpsl
call
lods
sti
in
inc
in
sub
mov
cld
leave
rol
push
push
xchg
mov
mov
add
push
mov
test
addr16
dec
hlt
xor
mov
mov
decb
xor
fidivs
int3
int3
mov
xchg
mov
xchg
push
fimull
xor
cmpsl
scas
and
movsl
sbb
ret
mov
jmp
cmp
mov
lcall
or
sub
fcoml
push
stos
arpl
sub
repz
je
out
pop
cmp
push
mov
xchg
lds
xorw
cmp
jbe
mov
pop
cltd
inc
xchg
xor
lock
xchg
pop
popa
or
int
xchg
stc
into
sub
mov
xchg
mov
repnz
push
in
popa
repnz
fistpl
mov
mov
into
addr16
aam
pop
mov
std
cmp
adc
pop
out
cmp
sti
popf
jmp
jmp
add
push
sbb
popf
mov
lret
pop
fldln2
xor
pop
xor
add
mov
fisubrs
out
mov
inc
out
mov
popa
in
jo,pt
lds
jnp
jmp
add
repz
out
push
icebp
jl
push
cmp
js
xor
jnp
cwtl
aaa
pop
cmpb
fisubrl
rcrb
push
xorb
dec
outsl
fbstp
daa
xchg
insl
dec
mov
jmp
mov
push
cmp
sahf
jno
and
or
jg
adc
dec
sbb
lahf
xchg
out
outsb
stc
std
pop
xor
pop
sbb
xchg
jecxz
aaa
cltd
jle
jno
cmp
sub
xchg
push
jns
push
xchg
and
or
push
pushf
cmpsb
gs
ja
jl
xchg
ljmp
mov
xorb
outsb
sbb
imul
mov
push
or
rolb
jne
mov
mov
xor
lea
mov
incl
mov
xor
add
jmp
out
call
ljmp
dec
add
jp
mov
mov
pop
aas
push
or
push
mov
mov
imul
sti
sti
or
in
sbbl
xchg
add
jle
ret
jp
jnp
jns
in
cmpsb
scas
jg
test
testb
scas
sbb
stos
jp
test
mov
lcall
mov
cwtl
setns
push
inc
adc
jp
push
xlat
fisttps
movsl
or
mov
mov
push
pop
push
aas
or
popa
rorl
daa
jle
jle
xchg
jbe
inc
enter
lcall
es
xchg
ja
into
enter
decl
pop
aaa
push
xchg
test
testl
lods
or
pusha
dec
dec
das
dec
add
aad
in
call
lret
xor
sar
mov
lahf
sti
lcall
and
repnz
loopne
fidivrs
sub
fcoms
mov
mov
in
adc
push
cmp
loopne
dec
ja
lret
and
sar
mov
mov
sbb
rolb
sbbb
mov
sub
pinsrw
mov
bound
lods
inc
or
jne
outsl
mov
push
mov
lret
mov
pop
xor
loopne
pop
inc
sub
cmp
dec
pop
aaa
daa
hlt
xor
inc
jnp
aam
aaa
jg
pop
imul
push
push
imul
faddp
cmp
ljmp
or
popf
popa
fs
jle
ss
loopne
lret
gs
push
sub
inc
loopne
lret
rclb
aad
insb
rorb
jmp
enter
in
xchg
mov
fldcw
xor
mov
ljmp
jecxz
shll
es
cmpsb
jecxz
call
adc
add
fld
sbb
cmpl
repnz
test
inc
je
cwtl
cmc
gs
imul
and
dec
push
cmp
pop
popf
daa
lret
notl
sub
sub
push
cwtl
movsb
aas
mov
dec
fdivs
pushf
aaa
fiadds
and
nop
push
out
push
int3
bound
sti
or
ret
pop
das
cmc
add
out
push
jnp
jle
inc
add
and
inc
mov
pop
mov
mov
sub
fiadds
xchg
jae
inc
in
pop
mov
iret
cmp
scas
mov
nop
jbe
lret
xchg
cltd
push
mov
les
or
sub
int
jbe
sbb
adc
cmpsl
pop
inc
popa
std
jl
mov
fcomi
jecxz
dec
sbb
mov
cmp
into
add
mov
ficoml
dec
jg
sub
pop
fldt
and
adc
xlat
insl
out
inc
xor
mov
cmp
xchg
cwtl
lods
and
addl
loope
ss
sbb
jp
imul
and
jne
imul
and
adcb
xor
lret
fs
aad
push
mov
fdivr
sbb
and
mov
movsb
jge
or
jns
fidivl
mov
stos
mov
insb
adc
out
outsb
shl
in
inc
pop
or
scas
sbb
mov
push
lret
cmpsl
cmc
lods
jae
jecxz
cmp
repnz
mov
add
add
jae
cmp
movsb
mov
mov
pop
js
lahf
arpl
xchg
popa
push
stos
repnz
out
stos
pop
push
mov
and
pop
fs
popa
fucomip
xchg
in
insb
mov
add
ds
jnp
cld
and
sbb
sbb
cmp
push
lea
cmpsl
xchg
and
cmp
int
jg
cmp
mov
mov
insb
mov
add
sub
cld
adc
aam
dec
pusha
mov
pop
add
test
aad
ja
in
stc
mov
jns
cmp
out
iret
mov
mov
lds
je
lret
push
cmpsb
lock
sbb
add
lcall
inc
xchg
inc
test
addr16
nop
sub
add
adc
push
dec
fsub
jbe
fidivrl
ljmp
lea
test
out
mov
test
insl
hlt
jp
les
adc
mov
insl
fbld
in
pop
cmp
inc
cli
mov
or
cmp
nop
and
jg
pop
mov
sub
sarb
or
and
mov
jmp
fwait
jge
sahf
sbb
in
je
cmp
sbb
add
cltd
cli
icebp
mov
loopne
std
jo
lods
xchg
and
jnp
jmp
xor
and
enter
fdiv
adc
jno
inc
aaa
dec
fadds
lcallw
mov
jp
fmulp
mov
leave
jecxz
mov
xchg
mov
shlb
jl
xor
or
fisttps
test
dec
sub
mov
xchg
imul
adc
sub
push
jnp
cld
push
sbb
stos
mov
jge
inc
fcomip
jae
stos
std
push
sub
shll
shrb
lods
push
lock
mov
test
ret
push
dec
std
inc
cmp
fisubrl
jl
in
lret
or
stos
push
fisubl
popa
xchg
sub
in
inc
mov
jo
dec
xchg
xchg
cmp
add
scas
adc
pushf
outsl
adc
cmp
xchg
push
push
jae
sbb
cmp
inc
out
adc
jecxz
inc
fmull
xor
notl
cmc
popf
imul
dec
xchg
xchg
idivb
dec
xor
ret
je
xchg
add
mov
ret
xlat
sahf
pop
andl
xchg
outsl
dec
lods
bound
mov
or
mov
pushf
fsubrs
mov
mov
fldcw
pop
push
std
pop
ljmp
sub
sbb
icebp
pop
pop
popf
xchg
fistl
fisttps
cltd
xor
loopne
loopne
fsubrl
pop
mov
insb
filds
lcall
push
sub
stc
sub
lds
mov
jmp
ror
mov
lea
fsubl
xchg
mov
mov
push
lea
lahf
sub
scas
in
hlt
aam
xor
push
dec
popf
popf
jmp
cmpsl
repnz
pop
lcall
pop
pop
rclb
ss
add
xchg
mov
scas
leave
cmp
dec
jnp
cmp
mov
int3
out
push
xchg
cmp
xor
sbb
jecxz
movsb
jnp
sbb
or
cld
icebp
lcall
lock
push
push
cwtl
rclb
stc
inc
cmp
into
popa
filds
xchg
push
xchg
aaa
rorl
adc
xchg
popf
mov
mov
cmpsl
push
or
les
mov
inc
iret
xchg
and
ja
cmp
lahf
orl
popa
jmp
pop
aas
aaa
lcall
fwait
rorl
js
jae
lret
rolb
loop
push
pushf
dec
pop
fnstsw
arpl
jmp
add
push
out
mov
pop
es
jecxz
cmc
arpl
mov
ja
lock
xor
cmc
rsm
mov
call
call
outsl
sahf
inc
mov
stos
imul
add
inc
sbb
int3
stos
clc
ror
xchg
and
imul
and
inc
add
dec
jg
cli
cmp
sbb
mov
in
push
out
sub
lahf
test
les
push
xor
xchg
push
data16
push
ja
std
mov
icebp
iret
xchg
loopne
cli
mov
scas
movsl
mov
inc
rcr
jo
shr
enter
pop
push
rclb
inc
push
xor
push
and
mov
xor
aas
aam
add
pop
mov
xchg
out
dec
sub
in
lcall
mov
pop
rcrl
addr16
mov
push
xchg
shrb
mov
xlat
lahf
cld
mov
mov
jo
sub
cld
arpl
nop
push
aas
fadd
sub
hlt
mov
mov
add
adc
stos
jo
aas
je
imul
fildll
test
aam
in
mov
out
mov
fbstp
mov
movsl
hlt
pop
xor
test
pop
test
add
js
inc
or
inc
std
ficomps
and
adc
mov
dec
push
jo
dec
test
incb
pop
cs
adc
movsl
push
lahf
scas
cltd
nop
test
mov
mov
cli
imulb
add
push
jle
outsl
sbb
xor
out
lock
inc
fstpt
sahf
mov
fdivs
inc
push
cmp
ja
xchg
cmp
test
std
jno
or
jbe
sub
inc
add
call
cmpsb
popf
jmp
inc
jns
inc
mov
addb
imul
fcmove
adc
dec
mov
and
jmp
mov
xor
lahf
cmp
mov
dec
movsb
lds
stc
aad
incl
push
js
mov
call
sub
in
movsb
mov
sbb
mov
pop
inc
jno
pop
icebp
and
pop
int3
orb
cmpsb
lock
mov
mov
and
sbbb
adc
jno
les
mov
add
cmp
rcrl
mov
push
inc
mov
addb
mov
and
loop
test
and
jns
sbb
repz
cmp
lods
lods
psllw
mov
push
mov
jecxz
mov
or
testl
aaa
pop
stos
or
dec
cmp
pop
inc
ss
xor
adc
bound
jno
sub
clc
cmp
pop
roll
inc
cmc
daa
inc
sbb
inc
push
incb
add
and
push
dec
gs
aad
push
movsb
pop
inc
dec
repnz
movb
fldcw
pop
aam
and
out
call
add
jo
jecxz
ja
in
jl
jecxz
or
cmp
in
push
stc
out
cmp
bound
pop
mov
inc
ds
pushf
or
into
dec
in
sbb
mov
jl
lea
mov
sbb
jb
jmp
sub
push
loope
adc
cmp
xorl
push
cwtl
stc
scas
xlat
or
in
sub
ja
jae
inc
mov
lret
repz
loope
out
cld
test
mov
push
lret
popf
cmpsb
cmp
sarl
inc
into
pop
shll
xorb
cmp
inc
repnz
cmp
mov
ret
adc
push
push
push
push
mov
xlat
cs
mov
xor
mov
aas
adc
fcmovnbe
xor
mov
test
test
int
outsl
ljmp
or
imull
in
lea
jns
movsb
or
insl
jne
lahf
daa
push
lock
mov
testl
cmpsb
es
fcompl
pop
mov
sub
pop
adc
fnstcw
pop
mov
das
inc
ljmp
adc
dec
mov
test
add
pop
in
xor
jns
out
out
or
into
xchg
and
push
lock
adc
or
je
es
out
inc
xchg
icebp
cmp
sub
inc
dec
addl
pop
call
rcrl
pop
and
in
movsb
sbb
sbb
mov
inc
shrb
lods
insl
mov
arpl
xor
cmpsl
xor
rorl
xchg
jb
mov
jp
mov
xor
xchg
popa
dec
xor
mov
pop
sbb
cs
hlt
shlb
dec
jecxz
push
in
and
out
test
es
les
inc
jbe
xchg
add
push
int3
mov
cmp
push
mov
xchg
ljmp
arpl
les
cli
add
xchg
andl
adc
in
ret
dec
xlat
adc
xchg
pushf
push
push
enter
stc
and
outsb
cwtl
shl
mov
pop
movsb
shl
dec
lret
ljmp
icebp
pop
xchg
sub
ficomps
jae
cld
inc
inc
pop
push
dec
int
movsl
sub
dec
sbb
mov
loopne
out
pop
aaa
ljmp
movsl
mov
arpl
stc
and
jecxz
punpcklbw
sub
repz
call
cwtl
mov
dec
mov
cmpsb
std
push
nop
and
bsf
adc
popf
add
adc
out
xchg
imul
pop
enter
jo
fs
push
jg
rdmsr
pop
add
das
mov
jbe
mov
sbb
dec
and
ret
in
int3
xchg
pop
loope
lds
pop
data16
int3
leave
add
add
push
icebp
lret
dec
std
adc
out
js
fwait
xchg
fs
incl
pop
outsb
lret
mov
xor
mov
jnp
lock
out
or
mov
aas
xchg
xchg
mov
popa
xchg
rcl
mov
lock
mov
inc
and
xor
adc
sub
mov
jl
insl
sbb
imul
xor
pop
sarb
mov
cmpsl
xchg
orb
xchg
dec
xor
sbb
fistpl
ret
sti
or
sbbl
xchg
cmp
xlat
in
lods
in
sub
fldt
inc
les
sbb
sbb
pop
mov
cmp
pop
or
out
adc
cwtl
adc
xor
test
xchg
sahf
jmp
jb
jmp
scas
add
adc
jmp
jb
sbb
repnz
inc
js
xchg
fstpl
clc
jle
mov
push
into
sahf
outsb
cs
out
lret
leave
add
mov
ja
dec
jmp
push
pop
je
testl
int
dec
lahf
jl
jne
dec
in
lret
shrb
les
dec
incb
test
push
inc
lret
xchg
inc
xlat
pushl
xor
pop
xor
out
push
insb
xor
cmp
test
cld
mov
push
push
add
std
sbb
lods
lret
enter
jb
xor
jne
xlat
imul
stos
fcoml
outsb
cmp
ja
inc
lcall
sub
add
shlb
and
or
xlat
jle
xchg
dec
xor
into
lret
mov
roll
loop
daa
out
scas
call
xor
cmp
push
outsl
cmpb
xor
rcrb
mov
xchg
jno
test
gs
pop
out
js
xchg
pop
rol
cmp
add
pushf
mov
mov
mov
lahf
pop
arpl
adc
dec
pop
jne
jmp
push
or
data16
sub
dec
add
stos
adc
mov
xchg
orb
in
lcall
cli
jmp
add
in
or
icebp
adc
stc
jae
mov
xor
aam
movsl
test
sahf
adc
xlat
inc
arpl
shrl
mov
jae
inc
adc
push
fldl
fisubl
loopne
xchg
popa
lea
pop
xlat
idivl
cld
lds
inc
xchg
inc
pop
scas
in
loope
ljmp
lods
lods
push
pop
xchg
mov
das
dec
jbe
cli
scas
jne
adcb
add
cmp
insl
mov
sbb
call
dec
in
sahf
pop
add
cmp
dec
js
and
fnstenv
sub
mov
test
push
movsb
xor
insl
add
hlt
or
mov
dec
aam
xchg
jle
ret
in
xor
mov
xor
fisubs
int3
xchg
or
test
std
nop
mov
int3
jmp
sub
add
scas
ret
xchg
pop
lcall
arpl
lret
ja
mov
and
dec
nop
das
mov
adc
fiaddl
pop
hlt
pop
loopne,pt
testb
movsb
in
add
mov
popf
mov
adc
adc
mov
inc
sbb
sub
cs
jmp
andl
popa
jns
shrb
pop
or
fildll
pop
sahf
mov
pushf
fisttpll
xchg
lea
jb
inc
arpl
or
add
xor
mov
cmp
nop
jo
dec
mov
jg
loope
or
out
lds
mov
pop
push
popa
psrld
xchg
mov
les
dec
xchg
add
std
insl
add
jecxz
dec
gs
inc
mov
pop
nop
ffree
xchg
rorb
stos
mov
in
sti
dec
je
xchg
pop
aas
mov
dec
dec
sti
mov
cmp
cwtl
jae
loop
sbb
insl
mov
cwtl
aad
ret
xchg
leave
cmc
cltd
in
lds
adc
inc
and
mov
test
cmc
or
roll
inc
repz
test
dec
mov
fldl
inc
dec
xlat
mov
fildll
cmpsb
addr16
dec
ret
xorb
dec
mov
or
stos
fldl
pop
fcomps
mov
sbb
enter
add
pop
test
outsb
lods
xchg
pop
mov
pop
sub
stos
imul
mov
mov
pop
jnp
inc
fnsave
cmp
jge
and
cld
mov
adc
lret
cmp
nop
pop
dec
pop
stc
popa
aaa
fbstp
adc
js
mov
ret
pop
xor
mov
sub
das
mov
push
in
call
inc
and
pop
test
mov
mov
mov
xchg
lds
sti
fcoml
pop
das
push
stos
out
lret
js
insb
xorb
pushf
jno
xor
leave
pop
inc
popf
mov
hlt
dec
push
cmpl
mov
push
mov
and
fimull
rorb
xlat
cmpsl
scas
push
mov
dec
sub
fwait
add
dec
in
xlat
shrl
into
push
sub
mov
push
sbb
imulb
scas
test
mov
pusha
sbb
xor
push
adc
push
popa
clc
js
dec
pusha
lcall
adc
pop
data16
cmp
jb
into
inc
jg
imul
rep
push
pop
loopne
clc
inc
pop
adc
jb
push
dec
fs
test
insl
mov
into
fucomi
rcll
cs
jecxz
mov
in
push
push
cld
rolb
and
aam
dec
icebp
int
incb
fwait
imul
hlt
lods
in
into
out
nop
cmpsb
adc
lods
jae
jecxz
rcrb
out
inc
sub
cmp
test
inc
sbbb
imul
jge
movsl
mov
xor
rolb
popl
ljmp
daa
push
xchg
sub
and
add
fisttpl
or
loope
outsl
inc
xor
pusha
xor
leave
inc
pusha
or
leave
push
jne
add
inc
jg
cmpsb
mov
xchg
sub
jne
jp
sbb
push
ds
daa
inc
clc
and
test
outsb
mov
sub
xchg
pop
cmpsb
xchg
jnp
cwtl
push
loope
or
loope
jns
imul
ja
pop
push
adc
jne
out
es
jne
mov
sub
and
inc
mov
fsubs
mov
sub
pop
andl
mov
push
xchg
test
test
js
pushl
test
push
dec
shll
aas
mov
add
adc
rolb
mov
mov
adc
xchg
ja
push
sub
lods
clc
sub
mov
or
adc
push
dec
std
movsl
and
outsl
imul
sub
pushf
dec
adc
ljmp
mov
sahf
mov
jo
out
pusha
loopne
adc
mov
mov
repnz
ret
push
sub
ja
xlat
or
dec
sbb
addr16
or
call
sub
scas
icebp
repz
cmc
xchg
cltd
push
lds
adc
push
ja
je
mov
ret
push
dec
push
sbb
push
fmull
dec
popf
aad
mov
mov
daa
ss
cltd
inc
mov
pop
enter
in
add
cld
es
lahf
push
bound
lods
scas
fucompp
cmp
xor
inc
push
je
cmpsb
jp
xchg
and
or
lea
sub
jb
adc
rclb
and
mulb
push
aaa
ficoml
rcrb
push
faddl
daa
mov
icebp
push
test
inc
sarl
icebp
out
out
sahf
jg
and
ss
jecxz
dec
out
lahf
mov
mov
ljmp
aaa
subl
stc
loopne
outsb
xor
jg
dec
loop
roll
and
and
mov
mov
add
cmc
std
imul
xor
push
add
test
xor
cmp
es
push
leave
mov
pop
mov
imul
inc
push
sub
pusha
sbb
xchg
add
or
data16
sbb
sbb
sbb
jae
cmpsl
hlt
frstor
add
dec
or
fwait
jo
jae
xor
inc
xlat
mov
pusha
lret
out
je
xor
out
stos
stos
xchg
mov
cltd
cmp
sbb
aaa
fildl
adc
pop
leave
pop
sbb
and
movsl
xchg
adc
jmp
fdivrp
xlat
mov
dec
dec
mov
xchg
mov
hlt
xor
test
out
loope
xchg
rorl
clc
popf
sbb
scas
pusha
pop
aas
in
fisubrs
call
or
push
and
mov
out
xchg
sub
sub
mov
std
xchg
xor
js
mov
int
divl
xor
in
xchg
sbb
mov
jp
sti
fimuls
inc
roll
xchg
in
xchg
jno
out
adc
add
test
mov
sti
pushfw
cmpsl
movsb
dec
ljmp
adc
lods
dec
xor
adc
int
dec
ljmp
aas
sub
pusha
fldl
pop
pop
xor
mov
cmp
loop
pop
pushl
and
dec
push
xchg
jle
add
aad
push
dec
addr16
ss
and
cmp
xchg
ss
les
das
cmc
adc
pop
ret
fisttpl
push
dec
inc
js
cmp
incb
pusha
les
lock
fildl
in
hlt
add
notl
and
xchg
jmp
xor
adc
je
pop
mov
into
mov
mov
rcll
pop
fs
aam
fcompl
in
or
or
je
push
jb
xor
icebp
pop
jge
enter
subl
fsubl
lds
pop
cmpsb
ss
mov
adc
stos
push
repnz
and
in
mov
aam
sbb
ret
imul
jl
daa
jg
enter
cltd
pop
or
movsb
and
pop
lock
frndint
jl
xor
mov
cmp
ss
or
and
repnz
and
sti
in
movsl
int3
fsubl
mov
std
mov
push
mov
in
dec
push
push
inc
and
or
test
sub
mov
and
adc
pop
daa
inc
aas
mov
and
add
out
xor
sbb
jne
and
mov
cltd
lock
xchg
inc
push
nop
jnp
adc
add
enter
cltd
in
xor
dec
push
enter
aaa
adc
jne
aad
leave
loopne
or
push
loop
or
jmp
outsl
xchg
popf
loop
or
sbb
loop
pop
movsb
dec
shlb
bound
xchg
jmp
mov
sahf
push
or
rclb
sbb
je
leave
xor
movsl
sub
imull
imul
lods
jp
ljmp
mov
mov
mov
in
outsb
rorb
test
mov
push
stc
gs
sbb
fmul
stc
xchg
xor
push
or
cmp
inc
pushl
xchg
iret
pop
sar
dec
adc
int
pop
movlps
mov
aam
fwait
out
push
or
lret
arpl
mov
jp
dec
pop
stos
dec
jge
xchg
xchg
sub
aad
lea
data16
in
xor
jmp
int3
xlat
inc
and
fmull
mov
sub
sbb
lret
sub
gs
jns
fdivrl
and
xchg
xor
in
mov
es
movsl
mov
pop
sbb
adc
cltd
mov
pop
sbb
mov
fistps
xor
ss
sub
repnz
xor
jae
iret
dec
push
push
push
mov
adc
push
adc
or
add
fildl
xlat
lret
mov
pop
adc
sarl
cld
popf
lcall
xor
xchg
nop
pop
xchg
pop
jmp
and
call
jge
call
inc
pop
aas
leave
dec
sub
stos
fsubrl
daa
lods
push
dec
repz
dec
fcompl
push
push
cmp
outsl
adc
and
enter
jae
outsb
fistl
push
popf
pusha
fstl
xor
test
pushf
xchg
and
or
dec
add
sub
popa
aas
jo
repz
sbb
outsb
daa
push
xchg
ds
xchg
fisubrl
int
cltd
fcoms
push
push
das
das
pop
fcoms
mov
popa
nop
bound
nop
shlb
push
dec
mov
push
sub
pop
jb
xor
fadd
sahf
adc
fidivrl
push
int3
pop
pop
lods
push
inc
cmp
out
mov
in
sarl
push
ja
jbe
xchg
adc
loopne
add
xlat
adc
aas
push
ret
mov
cmp
push
rcll
jecxz
or
sub
xor
jecxz
sub
imulb
stos
add
fsts
jl
mov
sbb
jno
fsubs
aad
cs
pop
pop
aad
mov
pop
mov
mov
clc
jne
js
mov
pop
mov
shll
into
xlat
int3
arpl
das
xchg
std
rcrb
insb
les
lahf
push
repz
dec
aaa
insb
stos
hlt
mov
and
mov
adc
leave
jbe
in
mov
inc
sbb
inc
and
insb
cvtdq2ps
dec
pusha
test
icebp
inc
cmp
cmp
cs
call
fiaddl
int
outsl
imul
mov
inc
lea
inc
into
lcall
sbb
inc
rep
mov
adc
push
in
pop
push
push
push
sbb
sarl
aam
mov
ljmp
xor
rcrb
int
adc
movsb
and
in
dec
imul
mov
jmp
sub
mov
jle
jle
sbb
int3
inc
and
imul
lock
jp
xlat
mov
into
push
jmp
stos
movsb
and
shl
mov
xchg
push
xor
jl
outsl
add
test
mov
int
clc
dec
fimuls
add
dec
mov
sbb
ficomps
pop
lods
push
fcompl
lods
ret
dec
or
xchg
sub
inc
cmp
and
loop
xor
mov
pushf
pop
clc
mov
sub
jno
jl
fisttps
jo
sub
inc
inc
xchg
pop
addr16
xor
icebp
jp
pop
mov
sub
fstl
shl
popf
stc
xor
xlat
and
fidivs
cmp
and
not
or
mov
inc
movsl
aad
push
lock
xchg
inc
js
xor
push
hlt
inc
clc
mov
push
mov
sub
cmp
sarl
adc
test
push
call
ret
inc
lock
hlt
sub
scas
js
cmp
imul
mov
mov
adc
cmp
cmp
push
adc
data16
out
xchg
subb
push
pop
in
mov
inc
and
mov
fwait
gs
sub
out
inc
and
movsb
sahf
fwait
mov
out
or
jp
xchg
in
stc
mov
mov
and
sub
pop
adc
mov
jbe
dec
stc
xor
dec
mov
sarb
in
mov
imul
pop
not
adc
loop
mov
push
dec
inc
mov
ljmp
nop
push
mov
in
cmp
rcrl
cld
enter
xchg
setne
scas
jmp
inc
stc
jl
pop
xchg
cli
enter
xchg
jne
popf
dec
ss
adc
sbb
aas
or
or
dec
sub
mov
cs
jmp
repz
imul
pop
aad
aam
out
push
ja
mov
push
sbb
lcall
dec
dec
inc
out
fwait
or
inc
mov
pop
lahf
and
imul
cltd
test
mov
int3
pusha
and
ret
fldl
cmp
iret
dec
xchg
pop
out
push
pop
pop
inc
cmc
xchg
orl
imul
pop
xchg
movsb
test
pop
xor
xor
push
push
insb
into
jno
or
gs
shlb
mov
pop
mov
inc
test
xor
sbb
imul
popa
add
mov
sub
push
or
aad
jmp
jp
jecxz
dec
jae
aad
mov
int
lret
sbb
cltd
push
inc
xorb
cmpsb
into
addl
mov
mov
repz
adc
outsl
sub
inc
in
iret
imul
loop
mov
lret
scas
jns
outsb
gs
mov
add
sbb
xchg
add
imul
inc
pop
pop
push
xor
pusha
mov
leave
cmpsl
push
mov
inc
pushf
adc
aaa
imul
addl
jge
mov
pop
cmp
movsb
push
add
mov
aaa
pop
imul
sti
xor
mov
or
xor
insl
aam
leave
mov
adc
push
mov
lea
xchg
xor
dec
fnstsw
lds
adc
fcompl
mov
mov
and
cltd
repz
cli
aad
orl
mov
sub
stc
sahf
ret
mov
cmp
je
call
pop
orl
rcll
push
lret
cltd
push
repz
clc
push
inc
mov
pop
out
lret
mov
cltd
mov
cmp
stc
xchg
pop
jae
jmp
arpl
mov
mov
sbb
sti
xlat
out
cmp
xor
out
das
push
sbb
push
lahf
ljmp
outsb
test
pop
cmp
cmpl
xlat
int3
mov
mov
lret
lds
call
rolb
xchg
ljmp
and
in
es
shlb
xchg
lods
pop
inc
push
mov
jns
adc
daa
js
ficoms
pop
scas
xchg
sbb
bound
xor
push
sbb
inc
push
lret
hlt
loop
pop
push
aas
pop
popa
rclb
cltd
push
aad
lods
shll
ret
adc
mov
daa
pop
sti
adc
fs
lretw
out
int
lods
repnz
aas
or
ret
daa
rorl
adc
mov
pop
in
cld
jecxz
iret
ror
push
or
clc
jmp
movsb
mov
sub
dec
add
insl
outsb
mov
aas
arpl
or
mov
aam
sahf
xchg
test
xchg
mulb
rcl
lcall
sahf
jb
sbb
shr
jns
pop
shlb
pop
loope
out
push
mov
pop
adc
fcomi
test
insb
mov
mov
cmp
push
sub
push
in
loopne
addr16
jecxz
push
lods
fcoml
call
cwtl
popf
out
sub
mov
cmc
cld
mov
sub
outsb
mov
cmp
roll
stos
loope
repnz
xchg
cmc
outsb
stos
mov
dec
sub
pop
mov
jbe
jo
or
inc
or
jmp
movsl
add
cmp
popa
scas
xor
xchg
in
sub
sbb
out
xchg
flds
clc
mov
inc
mov
jmp
mov
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
add
jmp
sub
addr16
jnp
jne
jne
imull
cmpsb
jns
push
pop
jp
mov
movsb
mov
sbb
imul
out
pop
adc
jbe
je
lods
pushf
aaa
cmpsb
into
stc
push
dec
loop
adc
test
jbe
pusha
addr16
pop
add
repz
out
jno
mov
pusha
fstpt
cmp
and
sub
jge
mov
out
xor
xlat
iret
mov
inc
add
scas
pop
notl
imul
test
push
stos
lret
inc
cwtl
mov
stos
jae
jle
xchg
inc
xchg
push
push
ja
lahf
call
pop
imull
jns
mov
lahf
adc
dec
daa
fwait
mov
popf
pop
sub
in
lods
or
sarl
adc
inc
lods
fists
and
mov
aad
loopne
pop
movsb
xchg
cmp
mov
test
js
inc
mov
push
cmp
sbb
xchg
xor
dec
mov
stc
jp
call
push
mov
lods
es
adc
imul
lcall
and
and
pop
mov
inc
rorb
sub
stc
cmp
ror
icebp
or
or
jecxz
xchg
ror
mov
jp
jo
inc
mov
clc
xor
iret
adc
adc
or
xor
cmp
cmpsl
inc
mov
dec
lea
or
or
cmp
incb
push
jle
mov
jg
inc
aad
pop
or
lea
dec
sbb
lea
mov
and
cs
jge
stos
push
ljmp
cmp
xlat
dec
cmp
xchg
test
outsl
or
dec
pushf
lea
popf
pop
push
dec
push
push
sqrtps
out
insb
bound
xchg
sub
xor
lcall
popf
loopne
mov
shlb
mov
mov
xchg
add
jbe
push
xor
shl
stos
clc
in
pop
mov
inc
jp
push
loopne
jns
dec
scas
enter
and
push
test
jl
stc
xor
into
in
stos
mov
sub
pop
ficompl
mov
push
pop
inc
mov
cwtl
or
hlt
pop
cmp
inc
adc
orl
fisubl
gs
mov
idivb
aad
cmp
movsl
mov
pusha
sbb
fmull
clc
mov
inc
mov
mov
lock
fcomps
sub
add
cwtl
mov
pop
and
dec
push
mov
add
shll
mov
jp
ja
arpl
mov
jmp
pop
ret
repz
aam
xchg
mov
testb
cpuid
iret
sbb
push
mov
push
dec
fildl
cmp
adc
xchg
rcr
mov
xchg
lret
mov
xor
push
addr16
dec
sub
mov
xor
add
imul
xchg
cmpsb
jl
fisubrs
fptan
and
mov
lea
nop
add
cwtl
cmp
jmp
sub
jge
cmp
shrl
xchg
push
pop
pop
fucomi
pop
int3
cmpsl
xchg
shll
out
add
xchg
test
add
jp
arpl
xchg
xchg
shll
or
and
xchg
lea
xchg
dec
add
adc
fmuls
in
testb
adc
dec
dec
fwait
or
xor
adc
lods
mov
jmp
sbbl
daa
sbb
addr16
mov
lods
psubd
adc
adc
adc
stos
outsl
lds
bound
xlat
adc
push
dec
iret
lds
xorb
arpl
ja
leave
imul
push
jo
jbe
sbb
rclb
mov
insl
insl
and
pop
shr
mov
lret
ss
dec
lcall
popa
sub
stos
filds
jmp
xchg
or
cmp
out
mov
cmc
inc
pop
mov
add
cwtl
ljmp
pusha
lods
inc
js
fwait
mov
mov
pop
arpl
pop
sub
pushf
popa
les
insb
push
shll
outsl
xchg
sbb
push
jp
push
or
popf
xor
test
imul
int
pop
mov
aaa
inc
push
fcom
inc
sbb
pop
and
mov
flds
and
sbb
dec
popa
sbb
dec
add
testb
xchg
repz
push
push
push
or
push
lods
je
cmp
cltd
test
dec
lcall
xchg
aaa
push
arpl
add
loop
add
sahf
adc
cmpsl
mov
mov
dec
mov
pop
push
jg
mov
and
cmp
push
hlt
and
pop
fs
rcr
mov
dec
and
adc
pop
or
mov
mov
nop
cld
mov
syscall
dec
mov
mov
imul
push
insb
and
test
mov
psubusb
in
push
stc
xchg
mov
movsb
xor
pop
pop
xchg
pop
and
dec
jnp
add
xchg
outsb
in
cmp
std
jb
loope
cmp
aaa
or
cmc
mov
arpl
aaa
je
inc
out
jl
xchg
cs
pop
insl
out
xor
adc
pop
cmpsl
stos
aaa
sub
sarb
shr
inc
aam
xchg
push
outsl
into
imul
shll
xchg
and
fimull
or
or
xlat
pop
lret
mov
in
lea
loop
outsl
push
dec
xchg
dec
lret
stc
xchg
stos
xlat
dec
lds
push
xor
js
jl
mov
add
lds
in
loop
js
scas
adc
mov
cmp
push
xchg
divb
jp
add
or
dec
mov
cmpsb
orl
addr16
insl
xchg
cmpsl
jae
aam
add
popf
pushf
test
loope
push
sbb
mov
stos
and
jl
adc
pop
add
cld
cmp
dec
inc
neg
shrl
add
push
scas
ja
mov
mov
bnd
xor
and
add
mov
inc
stc
cmp
mov
lret
push
jno
mov
int
sbb
outsl
mov
xor
int3
jnp
rclb
aas
inc
xchg
into
push
inc
pop
mov
mov
mov
jecxz
sti
leave
rcrb
xchg
shll
jo
jmp
mov
and
and
insb
jmp
pusha
sub
insb
push
and
cmp
out
mov
jae
mov
sbb
mov
lcall
test
addb
test
ret
push
push
inc
stos
arpl
scas
daa
mov
mov
or
dec
call
cmp
aas
repnz
ret
in
and
inc
lds
in
clc
fisttpl
mov
adc
or
push
and
push
pop
or
filds
ss
pop
add
iret
or
sub
and
cmp
add
sbb
pop
sub
incb
push
or
xchg
mov
mov
push
and
mov
xchg
xchg
mov
sti
rorl
mov
dec
and
mov
or
dec
sbb
jecxz
clc
pop
aam
add
or
xor
aam
jae
mov
call
push
ja
aas
mov
rcl
in
leave
aam
in
ret
xor
outsl
pop
test
out
jge
arpl
mov
test
pop
push
sti
mov
cmp
movsl
push
ffreep
lods
xchg
fs
xor
repnz
jg
xchg
mov
sbb
pop
aas
fcomip
cmp
lods
dec
or
inc
xchg
fisttpll
stos
push
cmp
inc
push
sub
or
dec
idiv
fistl
mov
shll
pushf
cmp
aaa
lcall
xor
jne
or
add
pop
xchg
aad
out
imull
mov
push
sub
mov
mov
sbb
push
daa
pop
mov
or
jg
aas
dec
and
hlt
aaa
mov
les
and
lret
std
mov
sub
add
jg
pop
xchg
inc
jecxz
std
pop
sub
imul
mov
lea
cmp
and
mov
push
push
negl
test
mov
dec
dec
fstp
mov
loop
out
push
loop
pop
dec
mov
pop
mov
and
sti
clc
mov
inc
addr16
mov
idivl
out
jne
inc
mov
jns
push
xor
or
xchg
jae
pop
les
cmp
inc
and
cmpsl
ror
stos
mov
mov
inc
push
sbb
cmp
repnz
and
add
fcmovb
adc
fcmovnu
das
loope
lock
rcrb
or
stos
jbe
out
xchg
push
and
nop
push
jo
xor
jge
fisttpl
xchg
cli
call
cmp
adc
call
jb
push
adc
shrl
cli
sub
fcoml
lcall
push
sub
lahf
cmp
pop
inc
repnz
pop
xchg
fbstp
jl
sbbl
lea
cli
jns
and
cmp
pushf
or
pop
pushf
pop
stos
push
shrb
in
iret
and
jns
les
sub
lods
pop
negb
fistps
push
cs
ffreep
xchg
aaa
data16
int3
loope
push
dec
orb
lods
mov
aas
inc
ds
gs
xor
sbb
push
loop
push
jns
lock
pop
jmp
scas
cmp
test
pusha
mov
les
adc
inc
cmp
push
sbb
push
testl
xchg
std
cmp
es
sbb
xchg
xchg
jae
sahf
outsb
stc
adc
inc
enter
or
rcl
lods
mov
mov
cmp
pop
push
arpl
dec
xor
xor
push
mov
push
jae
jb
xchg
or
mov
clc
pusha
dec
xlat
dec
lret
fiaddl
pop
outsb
fimull
add
push
mov
jne
xchg
mov
mov
mov
mov
dec
mov
jl
in
mov
adc
lret
jno
fmulp
mov
cli
sarl
pop
adc
pop
sbb
lret
aas
mov
xchg
test
sub
mov
pop
pop
dec
flds
fnsave
or
in
and
push
adc
mov
ss
dec
inc
lret
xor
mov
into
xlat
inc
or
xchg
aas
popa
push
xchg
fsubrl
mov
mov
push
add
roll
fwait
mov
sbb
add
lcall
sub
ljmp
loopne
push
inc
sbb
lcall
shlb
sub
aad
dec
stos
mov
fsubl
loopne
pop
xchg
mov
inc
xchg
data16
in
pop
jge
push
in
out
pop
rcrb
cmpsl
lret
lret
and
lret
cs
pop
call
sub
cmp
bound
inc
mov
and
xor
mov
in
and
int3
xlat
adc
negb
inc
mov
fcompl
xor
mov
in
mov
jb
jns
testb
loop
enter
jp,pn
scas
bnd
push
push
pop
pop
and
in
test
mov
repnz
das
add
or
inc
or
dec
xchg
adc
in
sti
mov
mov
jnp
mov
ss
pop
rcr
lret
ds
mov
sbb
push
shlb
pop
clc
xor
lret
inc
add
sub
rorb
loope
cmp
outsb
mov
sub
pushf
cmp
cmp
negb
rol
fisubl
pop
mov
push
hlt
outsl
popf
pop
add
cwtl
call
imul
jge
ficoml
and
xor
sub
inc
xor
mov
cvtps2pd
aas
xor
scas
jo
mov
mov
mov
fwait
cmpsl
out
xor
data16
clc
lahf
repz
sbb
pop
inc
dec
shll
in
add
lcall
sbb
fcomps
jp
xlat
push
cmpl
addb
xchg
jle
sub
and
sbb
nop
hlt
movsl
ja
adc
scas
xlat
adc
xchg
dec
xor
xor
insl
test
aad
mov
in
or
aad
xchg
or
mov
aad
fcoml
jge
sbb
cld
es
mov
lea
les
cld
clc
mov
dec
adc
mov
pushf
nop
aam
sub
pusha
lcall
negl
pmaxsw
fdivrl
and
jl
and
insb
test
lcall
sbb
sub
inc
andb
iret
jl
nop
push
pop
cwtl
inc
mov
outsl
fisttpll
jo
xchg
mov
xchg
enter
aas
adcl
add
js
stos
inc
adc
sbb
jbe
sub
inc
fisttps
rcrb
scas
and
scas
cmp
daa
or
xchg
dec
adc
stos
dec
lahf
gs
icebp
std
sbb
aaa
mov
jp
dec
adc
push
rclb
dec
jnp
shlb
or
inc
repnz
xor
push
cmpb
add
ds
ficompl
push
lret
jecxz
inc
insb
push
jb
push
icebp
out
cmp
fidivrl
and
pop
jb
adc
sbb
je
popf
xchg
movsb
jbe
add
mov
sub
add
and
xor
sbbb
xchg
shr
ss
or
in
mov
dec
das
inc
enter
and
dec
hlt
scas
xor
out
xor
into
fimuls
inc
vmovss
js
fcmovnb
inc
jge
xchg
fwait
test
das
xor
mov
inc
sbb
and
and
sbb
call
cli
dec
mov
inc
lock
mov
push
pusha
and
insb
addb
adc
test
lds
ret
mov
dec
mov
jnp
cmp
xchg
orb
icebp
ficoms
in
sahf
or
call
fwait
push
mov
mov
lahf
es
mov
addl
ret
negb
xchg
repnz
sub
or
cmp
and
dec
push
lds
cmp
flds
pop
ss
xor
cmp
xchg
sahf
jne
push
fcmovnb
in
inc
dec
fdiv
in
shlb
push
hlt
push
lcall
xor
and
xchg
cmp
jb
inc
in
pause
inc
adc
inc
cmp
cmc
lods
int
mov
mov
pop
pusha
call
hlt
sbb
and
loopne
fsubrs
faddl
pop
mov
push
jo
cli
aas
shlb
sbbb
push
loope
pop
sti
inc
mov
popa
pop
jmp
mov
cwtl
popa
insl
push
in
scas
adc
and
xchg
push
insl
pop
mov
ja
je
adc
scas
xorb
repz
mov
insl
jo
mov
insl
jp
jbe
sbb
repnz
pop
repz
pop
adc
xor
imul
rorb
lods
and
into
movsb
int3
les
pop
mov
mov
push
ficoms
cwtl
dec
mov
pop
pushf
icebp
add
into
pop
sbb
xchg
js
sbb
testl
stos
addr16
adc
dec
push
add
xchg
xchg
xchg
jl
aaa
push
add
mov
xorl
xor
nop
imul
push
andb
pusha
mov
outsl
jmp
cmp
in
jns
das
aad
fcomps
jbe
or
mov
idivl
inc
mov
aas
jecxz
inc
xor
ljmp
sahf
pop
jmp
loop
sub
aaa
push
xor
jae
outsb
xchg
jle
dec
rcrl
pop
pop
das
mov
outsb
mov
mov
dec
dec
jge
repnz
mov
add
xchg
cwtl
insb
mov
sbb
aad
dec
or
add
je
sub
push
push
push
cmpsb
cmp
fnstsw
mov
cmp
fs
pop
xor
add
addl
int
lret
stos
and
cld
dec
insl
in
xchg
cmp
jle
push
dec
pusha
jae
mov
bound
cltd
lcall
fildl
sub
jp
mulb
mov
jmp
xor
dec
lock
dec
aad
adc
fiadds
ss
cmp
cli
out
scas
cs
push
sbb
cmpsb
test
add
fs
push
jl
repnz
sbb
push
xchg
adc
adc
popa
rol
loop
cltd
cmp
push
dec
mov
push
inc
mov
sbb
cmp
pop
jnp
and
std
adc
out
push
fcompl
fstl
fidivl
dec
std
dec
mov
imul
mov
sbb
in
mov
dec
add
sbb
adc
ljmp
sub
mov
ds
scas
call
push
mov
dec
push
or
sub
test
or
sbb
push
cmp
inc
sti
push
ljmp
popf
aam
jg
out
xchg
movsb
sti
pop
outsl
sub
insl
dec
jle
dec
lret
pusha
inc
mov
jae
int
cmpsl
je
ljmp
pushf
pop
push
xchg
aad
and
adc
sahf
push
ret
dec
clc
cltd
inc
mov
cmp
jbe
rcrl
cmpsb
sti
mov
pop
pop
jp
jb
inc
mov
mov
xlat
sti
push
in
or
push
aad
cmp
push
sbb
aam
repnz
sahf
push
lea
sbb
push
adc
ret
inc
push
pop
sub
mov
xor
pop
cli
push
inc
aas
adc
inc
int3
ja
jg
jle
nop
inc
jns
jle
or
sbb
mov
je
add
xorb
mov
dec
mov
enter
cmp
std
repnz
lods
xchg
icebp
shlb
xchg
repnz
xchg
jns
xchg
call
inc
pop
imul
and
sub
ret
out
cmp
xchg
pop
inc
push
push
add
sub
mov
cmp
mov
dec
out
or
lea
jmp
lret
and
xchg
shll
or
cmp
iret
push
rcrb
mov
addb
mov
cmc
push
xchg
fwait
popa
iret
dec
imul
and
jb
ja
dec
lods
pop
cmp
xor
mov
or
mov
and
or
xor
and
jbe
jl
pop
fimuls
mov
imul
shr
lods
out
in
addl
mov
mov
les
in
inc
std
repnz
mov
dec
repnz
stos
pop
enter
mov
mov
fcompl
dec
jp
lods
jl
mov
out
sbb
lock
stc
loopne
add
mov
test
cmp
push
fisubl
xor
and
dec
movsb
xchg
roll
add
cmc
cmp
xchg
fisttpll
lcall
mov
data16
add
mov
scas
inc
in
and
cld
enter
and
push
insb
xlat
adc
pop
dec
push
push
cwtl
out
pushf
js
js
loopne
std
cmpsb
mov
dec
mov
clc
push
div
imul
xor
popf
mov
sahf
xor
push
cmp
in
inc
dec
fsts
aas
push
or
shlb
test
xor
imul
mov
iret
push
xchg
mov
mov
xchg
cmpb
adc
adc
iret
cmp
mov
testb
in
mov
fistpll
pop
xor
cs
fwait
rcll
dec
push
rorb
fwait
lahf
sub
xor
call
outsb
mov
mov
lret
xchg
sbb
adc
aaa
data16
xchg
pop
notl
mov
jecxz
jno
jmp
mov
cmp
mov
add
ss
mov
mov
pop
push
cmpsb
mov
add
dec
mov
jbe
neg
fcomi
clc
out
push
lahf
push
lea
mov
sub
popa
arpl
xchg
pop
cmp
inc
adc
lret
movsl
fimuls
rclb
std
lock
or
cmpsb
jecxz
into
add
mov
sahf
xor
adc
jg
and
pop
hlt
ds
fisubrs
popl
xchg
lods
cltd
xchg
xchg
inc
sub
fiaddl
pop
clc
mov
enter
lods
movb
inc
scas
xor
ss
jno
dec
sub
add
subb
int3
mov
xlat
int
nop
call
xor
jmp
sub
mov
ds
stos
out
adc
sbb
in
mov
ljmp
add
leave
enter
fwait
loop
pop
sahf
subb
test
inc
mov
lcall
cwtl
adc
pop
mov
imul
cmp
jecxz
sub
xchg
and
inc
int3
inc
add
ds
cltd
cs
faddl
add
adc
and
sub
sub
sarb
xor
mov
je
mov
lcall
cltd
dec
xchg
pop
scas
imul
arpl
lock
iret
rclb
mov
test
jbe
es
icebp
pusha
dec
lcall
sub
mov
pop
or
enter
out
nopw
fstpl
into
sbb
mov
ss
and
adc
data16
pop
out
push
scas
ds
pushf
rcrb
out
ret
mov
dec
das
sbb
pop
das
cmp
cmpsl
jbe
ja
lods
aad
jbe
fwait
push
lea
mov
mov
mov
pop
insl
popa
inc
cmpsb
jmp
fucomi
lods
call
aam
xchg
aam
movb
enter
das
loop
push
dec
test
jecxz
mov
fimull
or
cli
leave
push
daa
insl
cwtl
stos
sbb
dec
sub
mov
shlb
in
fcmovbe
and
jns
inc
dec
out
cmp
mov
push
cmp
insb
mov
mov
outsl
mov
stos
dec
lcall
rcrb
ljmp
shrb
pop
mov
cmp
and
test
sub
or
add
inc
in
ljmp
sub
mov
add
add
sahf
data16
stos
test
xchg
jl
xchg
ds
popf
inc
fisttpl
mov
and
xor
cltd
xchg
mov
fnstsw
pop
jge
jmp
fwait
sbb
std
call
mov
shrl
sbb
fistps
nop
lcall
dec
or
outsb
jno
and
loop
pop
mov
lea
jo
std
repnz
sbb
jbe
cli
ror
cwtl
out
in
scas
xchg
jno
cmp
lock
ret
lahf
xor
mov
pusha
sbb
mov
push
je
ds
dec
cmp
pop
pusha
lods
fcompl
fsubl
stc
js
adc
loope
mov
data16
cmc
leave
imull
add
sbb
cld
push
inc
shlb
shrb
xchg
sub
loopne
test
imul
lods
xchg
dec
std
add
pop
jl
xor
shll
pop
pop
ds
xchg
fstl
iret
push
in
push
aas
lret
jns
out
movsbl
mov
jp
aaa
push
mov
out
pop
in
shrb
jp
daa
xor
nop
sahf
data16
inc
lret
movsl
testb
xchg
pop
xlat
sbb
mov
ja
fsubs
out
into
sub
dec
and
dec
mov
aaa
arpl
jp
push
xchg
fdiv
daa
lret
loop
sahf
out
nop
mov
or
std
mov
sub
push
out
sahf
ss
imul
push
pop
push
and
adc
jg
adc
xor
loop
hlt
sub
cmp
rcrb
lea
inc
mov
mov
stos
push
loop
or
dec
mov
jbe
dec
xor
in
mov
in
pushf
testb
nop
fwait
mov
pushf
leave
xchg
scas
xor
add
pop
fdiv
jnp
sti
shlb
or
popa
cmpsl
jl
xchg
hlt
imul
jle
ja
popl
neg
mov
in
out
sub
fisttpll
mov
xor
sub
mov
push
lret
rorb
cmp
gs
in
pop
push
jmp
or
repz
push
add
add
out
popf
out
aaa
sub
iret
int3
adc
subl
jmp
mov
and
jb
or
sbb
fisubl
aas
or
imul
mov
in
pop
push
das
mulb
xchg
mov
mov
cmp
imul
inc
addr16
mov
or
out
mov
push
call
testl
outsb
adc
xchg
lock
mov
imul
dec
shll
dec
stc
push
fsubl
cmc
mov
lods
inc
mov
adc
sahf
les
inc
or
loop
fbstp
stos
loope
test
jle
mov
sbb
sub
mov
sbb
lcall
inc
stos
mov
xchg
mov
mov
outsb
push
mov
xorb
xchg
jecxz
jp
je
jb
int3
mov
mov
sbb
aam
lods
fcmovbe
inc
lock
rorb
and
fidivrl
cwtl
dec
mov
repz
dec
paddsw
mov
cs
pushf
test
js
cwtl
push
mov
or
lods
push
pushf
pop
push
sbb
outsb
jnp
pushl
xorb
dec
js
pop
jae
subb
jns
jmp
and
mov
pop
addb
enter
rcrl
sbb
imul
popl
and
push
mov
mov
pop
ja
mov
scas
xlat
div
test
jo
pop
mov
iret
adc
les
push
push
daa
rcrb
lock
mov
inc
mov
ds
xor
lret
and
dec
insl
mov
fistpll
adc
ljmp
cmp
je
push
shrb
insb
ficoms
stos
lret
je
cwtl
int
imul
fstps
or
mov
shlb
push
bnd
popf
adc
sbbb
or
jmp
mov
push
pop
adc
xchg
fidivl
je
or
mov
jmp
fwait
aam
fwait
push
mov
inc
fbld
test
inc
xchg
fcmovne
aaa
push
insb
btr
add
inc
dec
fmuls
ljmp
inc
repnz
popa
xor
adc
aaa
faddp
daa
sbb
pop
das
ds
jp
out
and
mov
mov
xor
arpl
clc
push
rorb
and
or
aad
inc
add
movsl
repnz
mov
mov
xchg
pusha
add
je
test
or
dec
xchg
push
fdivl
sbb
loop
mov
aas
fcoml
sti
ja
or
push
add
xchg
scas
jb
inc
sahf
mov
inc
push
push
sbbl
popa
test
lret
inc
mov
add
inc
mov
adc
xor
mov
mov
jae
push
call
jl
ljmp
loopne
sbb
xor
push
inc
dec
out
int3
mov
rep
and
lods
mov
std
add
mov
push
inc
inc
inc
push
mov
mov
ja
movsb
jge
pop
fmuls
ret
stc
jae
sbb
pop
icebp
xchg
mov
adc
mov
mov
les
adc
xor
mov
sub
add
fstpl
jo
or
adc
and
shrl
insb
cmp
out
jle
out
xor
lods
cmp
aas
pop
inc
add
mov
adc
iret
daa
addr16
mov
es
or
pusha
scas
out
sarb
pop
jae
fwait
into
jmp
jae
mov
out
xlat
scas
xor
es
incb
fs
pop
push
cltd
cmp
mov
lcall
or
rorb
fucomp
xchg
mov
sub
xchg
cli
sub
inc
pop
inc
iret
pop
and
in
rcll
in
xor
cmp
push
inc
push
fisttpll
jp
cmp
add
add
xchg
ds
jae
cmp
sbb
cmp
les
push
sub
inc
inc
lods
inc
mov
push
pmaddwd
xor
sbb
lea
mov
into
jno
ret
cmp
pop
lcall
es
scas
sub
and
gs
shl
in
lret
iret
out
lds
sahf
cmc
jl
je
lahf
pushf
mov
cmpl
push
pop
gs
fs
mov
arpl
pop
test
mov
fsubr
dec
in
ja
aaa
test
inc
xchg
or
cmp
jb
pushf
mov
loopne
jns
imul
out
pop
dec
dec
xchg
xchg
lods
lcall
rcl
call
inc
pushf
pushf
ret
mov
adc
and
repnz
adc
xchg
sbb
pop
and
addr16
cmpb
cwtl
pop
xor
or
xchg
mov
ds
aaa
xor
inc
mov
gs
lea
dec
int
or
xchg
mov
movsl
test
int3
mov
xchg
lods
in
dec
sahf
jg
sub
push
and
addr16
sub
mov
insl
mov
sbb
in
cmpsl
lcall
inc
lcall
fcmovbe
cltd
fildl
dec
movsb
push
lods
xor
gs
jne
sbb
cwtl
mov
xchg
and
cmp
xor
sbb
mov
or
icebp
das
and
pop
out
orl
add
push
outsl
inc
pop
fidivrl
mov
dec
imul
xchg
loope
sbb
inc
jae
shrb
addb
inc
loope
dec
dec
adc
inc
mov
ss
xchg
and
jb
jne
fistpl
mov
jo
mov
mov
jns
sbb
pop
jecxz
fnstcw
xchg
mov
popf
adc
and
dec
bound
std
push
sub
push
fcomps
cld
or
sbb
js
cmp
push
into
push
adc
jno
and
inc
mov
mov
hlt
leave
outsb
sub
movswl
cli
or
mov
jns
mov
cli
cs
ss
mov
cmp
popa
lea
movsl
or
rcr
mov
and
and
mov
out
xchg
fldz
adc
fsubrl
mov
les
ljmp
inc
sub
add
int
xchg
cld
divb
dec
add
xrelease
push
sub
inc
lret
push
sar
in
mov
ret
dec
aad
add
inc
js
pop
mov
push
stc
pop
jne
mov
sub
jne
ret
adc
es
push
test
psubq
stos
test
pop
cmp
movsb
cmp
out
add
pop
iret
pushf
adc
cmp
fildll
xchg
dec
inc
mov
sub
in
inc
add
inc
jbe
cmp
push
test
and
inc
push
sbb
data16
sub
jbe
int
into
jmp
sbb
pop
push
pop
bound
sbb
lahf
insl
in
jge
adc
out
mov
das
cs
dec
add
push
ficoml
test
imul
mov
mov
mov
add
or
mov
mov
mov
add
xor
mov
mov
mov
add
and
mov
mov
mov
lea
mov
mov
mov
sub
add
mov
mov
xor
add
jne
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
add
imul
mov
mov
mov
add
or
mov
mov
mov
add
xor
mov
mov
mov
add
and
mov
mov
mov
lea
mov
mov
mov
sub
add
mov
mov
xor
add
jne
mov
xor
mov
add
mov
pop
jmp
imul
scas
repnz
add
data16
sub
or
xchg
sbb
cmp
jmp
mov
push
push
iret
sub
mov
add
cmp
enter
sbb
mov
push
add
dec
fs
in
pop
lea
clc
xor
cmp
rol
stos
ja
or
imul
mov
test
fdivs
imul
add
insb
sub
pop
inc
loope
sbb
xlat
bound
sbb
int3
fsubs
mov
lret
add
push
jp
dec
push
mov
les
scas
inc
xor
stc
pop
in
cmp
add
sub
sub
ss
and
dec
pop
mov
mov
and
jno
popf
popa
pop
mov
jmp
cmp
outsb
xchg
fdivrs
dec
mov
fsts
insl
push
pop
fistpll
pop
xor
dec
ja
xor
xchg
or
enter
push
sub
jno
xchg
pop
mov
or
jmp
inc
out
test
jp
les
fists
mov
imul
jno
icebp
cmpl
pop
xchg
push
inc
int
in
loope
sbb
jle
inc
inc
cmp
inc
lahf
out
jno
bound
push
or
imull
out
aam
stos
and
jecxz
outsl
andb
dec
cmc
lock
cmpsl
mov
jle
leave
in
imul
popf
les
rcrb
sbb
add
insb
and
and
ljmp
lock
and
jne
dec
and
lret
das
sub
dec
or
xchg
dec
cmp
jp
and
sub
jne
imulb
pusha
xchg
adc
adc
jmp
xor
call
xlat
nop
jno
sbb
cltd
fs
loope
shl
add
xchg
in
clc
mov
enter
mov
shlb
mov
jmp
mov
sub
pop
jns
push
test
sbb
es
xchg
xchg
orl
push
inc
ret
or
mov
xor
outsl
mov
mov
jmp
cmp
mov
mov
xchg
js
jle
nop
mov
mov
push
lahf
out
add
leave
mov
xchg
clc
pushl
in
pop
jle
mov
sbb
and
sti
adc
ss
lock
cmp
mov
fdivl
es
cmp
inc
stc
mov
je
fcmovu
js
fsub
mov
scas
ljmp
sub
enter
push
test
or
addr16
jne
mov
xor
cld
test
cmp
repnz
xchg
push
pop
hlt
sbb
mov
ds
movsb
adc
insb
dec
or
in
je
fstpl
or
in
shlb
jmp
mov
loop
inc
rorl
data16
in
inc
and
dec
jnp
lock
mov
mov
cmpsb
jp
sahf
jp
das
fimull
lods
fcomp
movsb
gs
pop
clc
xchg
popf
out
mov
sbb
ror
insl
cld
out
add
or
ja
inc
adc
dec
inc
repz
and
fcom
mov
aas
and
mov
and
bswap
xchg
pop
pop
cmpl
test
enter
rcrb
add
sub
addr16
repnz
movsb
sub
in
mov
cmp
jb
popa
stos
inc
ret
fsts
xchg
mov
call
std
pop
ror
dec
lock
push
mov
xchg
leave
push
rclb
outsb
mov
sbb
lahf
jae
xchg
dec
dec
pop
jecxz
movsl
outsb
mov
xchg
mov
push
flds
add
xchg
out
imul
push
jbe
lock
ja
fistpll
jo
lcall
jl
mov
inc
jle
in
add
mov
fnsave
mov
lock
cltd
leave
cld
ja
sbb
fistpl
sbb
sbb
push
test
inc
movsb
es
push
mov
insl
in
dec
ret
inc
insl
mov
daa
jle
dec
add
mov
xchg
scas
in
stos
test
and
adc
inc
pop
loope
fdivs
fsts
gs
cmp
sub
push
xchg
push
daa
or
pusha
cmp
sti
push
xchg
adc
test
xchg
xor
push
cmpsb
fbstp
jge
add
pop
cld
pop
pop
rcrb
mov
sbb
pop
jnp
and
inc
sub
stos
ss
shlb
inc
mov
sbb
push
cwtl
es
fstpt
scas
jb
repz
xchg
sub
fdivp
lcall
ja
jp
xchg
mov
mov
in
and
dec
jae
dec
sbb
iret
jg
cmp
push
cmp
cmp
sub
notl
mov
push
add
sti
sub
shrl
xchg
ljmp
jo
sbb
xchg
popa
loope
jmp
jle
pushf
stc
out
clc
jne
xor
mov
mov
mov
sub
stc
int
das
push
ret
lcall
out
clc
cli
pop
andl
rolb
lods
pop
in
cli
fnstsw
pop
sbb
mov
sbb
pop
and
mov
xchg
ret
ret
mov
movsl
add
dec
mov
arpl
iret
push
jmp
in
push
xor
pop
test
lea
js
mov
adc
imul
mov
hlt
cs
jo
rcrl
adc
inc
pop
mov
mov
mov
es
lea
loope
ss
ja
movd
loopne
mov
ficomps
insl
ds
repz
aas
mov
mov
pop
cmp
lahf
add
sbb
and
inc
in
negb
sti
cwtl
pop
aas
enter
sti
pusha
fildll
es
add
out
leave
jl
negb
ret
icebp
mov
les
lret
lods
cwtl
stos
shrb
insl
cmpsb
jno
pop
repz
xor
adc
arpl
imul
into
ds
dec
aad
outsl
scas
dec
xchg
xlat
or
xor
sbb
lods
sarl
cs
in
frstor
and
movsl
ja
out
std
adc
jmp
push
rcl
in
pushf
adc
pop
addr16
fildl
loopne
mov
jno
test
xchg
js
es
pop
outsl
sbb
sbb
subl
push
xorb
pop
enter
push
fcmovu
aam
insb
xchg
or
out
sbb
mov
xor
stos
inc
dec
jge
adc
xchg
xchg
sti
ficoms
pop
jns
pop
mov
cmpsl
movsb
js
jns
test
in
xchg
movb
std
dec
push
pop
cmc
push
popf
test
adc
xchg
push
lss
roll
gs
ljmp
xlat
aaa
rcll
or
pop
jo
dec
push
leave
xlat
jp
rol
ds
pop
pop
or
aad
xchg
xor
push
repz
jl
sbb
fisttps
inc
aaa
mov
scas
add
mov
jmp
jb
pop
jno
test
or
mov
call
cltd
dec
leave
mov
xchg
pusha
pop
lret
scas
jl
xchg
xchg
inc
sbb
pop
mov
push
loop
jg
leave
cli
inc
pop
mov
pop
cmp
pop
mov
out
cmp
lods
fs
add
cmp
ds
pop
pop
mov
and
dec
adc
jp
jb
lods
inc
std
ss
adc
push
cli
stos
punpckhbw
sub
daa
nop
lahf
movsb
adc
iret
mov
push
clc
lret
sub
mov
fimull
mov
hlt
mov
mov
loopne
fstps
std
and
fcmove
mov
movsl
mov
xchg
sbb
sbb
loopne
jg
shl
sub
lods
negl
mov
es
testl
push
mov
movb
or
push
jbe
sbb
adc
xchg
test
scas
gs
sub
lock
les
mov
out
jecxz
out
inc
cli
xchg
mov
mov
repnz
xchg
int
cmp
or
std
lahf
dec
jo
mov
pushf
testb
icebp
ljmp
inc
cmp
pop
fldl
and
stc
fimuls
imul
rcrl
mov
push
push
imul
and
lods
loope
cmp
pop
pop
mov
jle
js
xchg
movsl
push
mov
popl
xchg
add
adc
aam
fadds
cld
and
adc
pop
ficompl
mov
loopne
adc
sti
mov
in
and
shl
mov
loopne
or
add
xlat
cmc
cmpsl
jg
int3
sub
mov
imul
sahf
add
lret
je
cmp
and
cltd
xor
adc
and
mov
repnz
in
xchg
mov
jne
hlt
mov
out
cmp
jmp
dec
jecxz
mov
mov
sbb
and
mov
xchg
jmp
fsetpm(287
sbb
testl
cs
push
insl
mov
push
dec
inc
ds
xor
aad
rorb
jno
ret
mov
sub
sub
pop
jo
arpl
jl
mov
xor
dec
xor
sti
mov
xor
cmp
scas
xchg
add
orb
push
cwtl
scas
rclb
xor
pop
repz
rolb
iret
vmread
lds
sub
movsb
jmp
push
pop
cld
dec
add
pushf
ja
lods
imul
jl
sbbb
cld
lahf
mov
pop
inc
repz
test
cmc
fwait
sbb
mov
inc
movsl
pusha
sub
adc
daa
out
loope
adc
aam
in
sbb
stos
dec
or
repz
xor
mov
pop
sti
push
inc
mov
push
lret
or
mov
sti
adc
ffree
ret
stc
pop
mov
sti
sbbl
xor
xchg
addr16
int3
ja
sbb
adc
daa
aaa
or
and
stos
ss
or
inc
jmp
or
mov
mov
sahf
mov
pop
lret
sbb
mov
das
stos
test
push
ljmp
dec
pop
push
mov
push
adc
cltd
jbe
bsf
stc
push
mov
xchg
mov
jmp
into
sub
decb
push
and
imul
cwtl
pusha
push
xor
lahf
data16
test
loopne
or
fnstcw
mov
sub
fistps
leave
inc
in
pop
xlat
outsb
and
adc
sbb
in
sub
test
fcomps
ss
sub
aas
mov
shlb
push
inc
pop
push
inc
into
or
xchg
test
mov
push
mov
pop
pop
leave
ret
add
inc
add
mov
inc
add
mov
inc
add
mov
inc
add
rolb
add
inc
add
rolb
or
inc
add
rolb
adc
inc
add
rolb
sbb
inc
add
add
hlt
xlat
dec
add
add
add
add
cmp
dec
add
add
add
hlt
xlat
dec
add
add
push
dec
add
add
add
add
add
add
add
dec
dec
add
dec
dec
add
push
dec
add
xor
dec
add
add
inc
jns
popa
insl
imul
aas
inc
gs
jae
jb
bound
arpl
arpl
imul
gs
bound
arpl
arpl
nop
inc
add
inc
add
nop
inc
add
inc
add
nop
inc
add
inc
add
nop
inc
add
inc
add
nop
inc
add
inc
add
nop
inc
add
mov
add
inc
add
mov
add
inc
add
mov
add
inc
add
mov
add
inc
add
rolb
rolb
rolb
rolb
rolb
rolb
rolb
rolb
add
push
push
inc
push
and
jo
mull
dec
xchg
or
cli
rorb
add
add
inc
cmp
jb
outsb
je
popa
je
pop
dec
outsl
imul
insb
imul
dec
gs
mov
sub
push
mov
xchg
mov
cmp
jne
mov
cmp
jne
mov
mov
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
push
movb
movb
push
movb
movb
push
movb
xor
movb
xor
pop
mov
lea
movzbl
xor
add
inc
mov
cmp
jb
xor
lea
movzbl
xor
add
inc
mov
cmp
jb
xor
lea
movzbl
xor
add
push
mov
inc
pop
cmp
jb
lea
mov
mov
mov
mov
mov
cmp
jne
movl
movl
mov
mov
cmp
jne
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
lea
mov
mov
mov
lea
mov
add
mov
lea
mov
mov
mov
dec
mov
mov
mov
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
lea
mov
movl
movl
lea
mov
xor
sub
mov
inc
dec
jne
lea
mov
lea
push
mov
mov
xor
mov
add
push
mov
add
push
mov
mov
movl
pushl
mov
call
mov
xor
add
mov
cmp
jne
mov
or
mov
add
mov
mov
mov
mov
mov
mov
mov
lea
mov
add
mov
lea
mov
add
mov
lea
mov
mov
mov
mov
lea
mov
mov
mov
mov
add
mov
mov
add
mov
lea
mov
add
mov
mov
mov
mov
movzwl
xor
add
xor
mov
mov
movzwl
xor
add
xor
mov
xor
mov
mov
mov
lea
lea
movl
mov
call
mov
lea
push
mov
xor
add
push
lea
push
pushl
mov
call
mov
lea
lea
mov
call
mov
lea
push
mov
xor
add
push
lea
push
pushl
mov
call
mov
pushl
pushl
pushl
pushl
pushl
pushl
pushl
call
add
mov
mov
mov
mov
mov
mov
lea
mov
cmp
jb
mov
mov
mov
add
cmp
jae
sub
add
mov
pop
pop
pop
leave
ret
push
push
push
push
mov
mov
add
push
cld
mov
add
push
mov
lods
xchg
push
mov
or
shl
not
push
mov
or
shl
not
push
add
mov
sub
sub
inc
push
push
push
push
push
push
sub
push
or
mov
shl
lea
mov
shr
rep
push
pop
call
loop
lea
lea
mov
mov
sub
and
mov
mov
call
jne
mov
and
shl
sub
neg
shr
pop
add
pop
lea
shl
cmp
pop
lea
push
push
mov
push
mov
jb
mov
sub
movzbl
mov
shl
mov
and
add
lea
call
mov
shr
and
cmp
mov
jne
cmp
jb
jmp
mov
call
inc
inc
sub
sub
cmp
jb
pop
inc
cmp
dec
mov
jb
inc
cmp
dec
mov
dec
jb
mov
dec
sub
push
jmp
mov
dec
call
jne
pop
pop
pop
pop
pop
pop
pushl
push
push
mov
mov
jmp
mov
dec
call
jne
mov
dec
call
jne
pop
cmp
mov
jb
mov
push
mov
sub
cmp
jb
lods
mov
stos
jmp
mov
call
mov
je
mov
call
mov
je
mov
mov
mov
mov
mov
mov
mov
mov
pop
pop
pop
mov
mov
add
push
push
cmp
mov
jb
add
push
mov
call
jne
mov
mov
shl
sub
push
pop
lea
jmp
mov
add
call
jne
mov
mov
shl
push
pop
push
pop
lea
jmp
mov
add
push
pop
mov
mov
sub
inc
mov
call
mov
sub
jb
add
cmpl
jae
addl
mov
cmp
jb
push
pop
mov
shl
sub
inc
push
pop
lea
mov
call
mov
sub
jb
mov
mov
cmp
jb
mov
andl
shr
orl
dec
cmp
jae
mov
sub
mov
shlb
add
shl
add
mov
jmp
sub
call
shr
shll
cmp
jb
incl
sub
dec
jne
mov
add
mov
shll
push
pop
sub
inc
mov
mov
call
test
je
or
shl
dec
jne
jmp
incl
mov
add
mov
mov
sub
cmp
ja
mov
sub
mov
lods
stos
cmp
jae
dec
jne
mov
movzbl
cmp
jb
call
sub
lea
mov
mov
sub
mov
mov
mov
sub
mov
leave
pop
pop
pop
ret
pop
pop
sub
inc
jmp
cmp
jb
ret
shl
push
mov
cmp
jae
mov
shl
lods
mov
mov
pop
ret
mov
movzbl
shl
add
add
jmp
movzbl
add
mov
lea
sub
lea
cmp
jae
mov
shll
cmp
jae
mov
incl
shl
mov
mov
movzwl
shr
imul
cmp
jae
mov
mov
sub
shr
add
add
lea
ret
shr
sub
sub
sub
add
add
lea
ret
push
mov
sub
push
push
push
movl
movl
mov
mov
mov
mov
xor
mov
add
mov
mov
xor
add
mov
mov
xor
add
mov
mov
xor
add
mov
movl
movl
movl
push
pop
mov
mov
push
pop
mov
mov
movl
movl
mov
xor
add
mov
mov
xor
add
mov
movl
movl
movl
lea
lea
call
decl
jne
decl
jne
decl
jne
movl
mov
xor
mov
add
mov
mov
andl
xor
add
mov
mov
mov
mov
mov
mov
mov
mov
lea
mov
mov
lea
mov
mov
pushl
lea
mov
call
mov
xor
add
cmp
je
mov
mov
mov
mov
mov
mov
add
mov
mov
lea
push
mov
mov
mov
add
push
pushl
push
call
pushl
mov
mov
mov
movl
movl
movw
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
call
push
mov
mov
pushl
call
test
jne
mov
mov
mov
add
mov
mov
mov
call
push
mov
call
test
jne
mov
mov
mov
add
mov
mov
mov
call
push
mov
call
mov
mov
xor
add
cmp
je
mov
xor
mov
sub
add
mov
cmp
ja
movl
pushl
mov
mov
mov
call
push
mov
mov
pushl
call
mov
mov
mov
mov
mov
mov
xor
lea
call
push
mov
mov
pushl
call
mov
mov
mov
mov
xor
lea
call
push
mov
mov
pushl
call
andl
mov
and
add
push
call
test
jne
and
jmp
mov
mov
mov
xor
lea
call
push
mov
mov
pushl
call
mov
incl
cmpl
jb
mov
mov
xor
mov
add
lea
call
push
mov
mov
xor
add
lea
call
push
call
mov
xor
add
cmp
jne
movl
mov
mov
xor
lea
mov
mov
test
je
mov
mov
xor
lea
mov
mov
xor
mov
sub
add
mov
cmp
jbe
mov
mov
mov
cmp
jne
pushl
lea
push
call
mov
jmp
mov
mov
xor
add
xor
mov
mov
xor
add
cmp
je
mov
mov
xor
add
cmp
je
mov
xor
add
jmp
mov
mov
and
or
sub
add
mov
xor
lea
mov
cmp
jb
mov
mov
mov
movl
mov
mov
mov
mov
xor
add
mov
mov
xor
add
mov
movl
movl
mov
mov
xor
add
cmp
je
jmp
mov
mov
sub
mov
xor
add
xor
div
mov
mov
mov
xor
add
cmp
jbe
mov
xor
add
mov
mov
mov
xor
add
imul
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
add
movl
mov
movl
mov
movl
mov
mov
xor
add
jmp
movl
movl
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
xor
add
add
imul
add
mov
mov
mov
cmp
jb
mov
mov
xor
add
imul
mov
xor
add
or
mov
xor
add
mov
xor
add
mov
lea
jmp
mov
mov
xor
lea
mov
mov
xor
mov
sub
add
mov
mov
xor
add
imul
cmp
jbe
mov
mov
mov
mov
mov
xor
add
push
mov
xor
add
push
push
mov
mov
xor
add
push
call
mov
mov
xor
add
cmp
je
mov
jmp
mov
xor
mov
mov
mov
xor
lea
xor
mov
sub
xor
cmp
jne
mov
mov
mov
xor
add
push
mov
xor
add
push
pushl
call
mov
mov
mov
mov
mov
mov
xor
mov
add
movl
movl
jmp
xor
mov
xor
sub
mov
movsbl
movzbl
cmp
jne
mov
mov
xor
lea
xor
cmp
jne
jmp
mov
xor
add
mov
xor
add
cmp
je
mov
movl
movl
movl
movl
mov
mov
mov
xor
add
push
mov
mov
xor
add
push
mov
xor
add
push
mov
xor
add
push
call
mov
mov
mov
mov
xor
add
push
mov
xor
add
push
mov
pushl
xor
add
push
call
mov
xor
add
mov
cmp
je
mov
xor
add
cmp
je
movl
movl
mov
xor
sub
mov
mov
xor
sub
mov
mov
xor
sub
mov
andl
andl
lea
push
pushl
push
lea
push
mov
pushl
mov
add
push
push
call
mov
mov
mov
mov
xor
add
push
mov
xor
add
push
push
call
mov
add
xor
cmp
mov
mov
mov
jne
xor
add
push
mov
xor
add
push
pushl
call
mov
mov
mov
mov
jmp
xor
add
push
mov
xor
add
push
pushl
call
mov
mov
mov
movl
mov
mov
mov
mov
xor
add
mov
mov
xor
add
mov
movl
movl
mov
mov
xor
add
cmp
je
jmp
mov
mov
sub
mov
xor
add
xor
div
mov
mov
mov
xor
add
cmp
jbe
mov
xor
add
mov
mov
mov
xor
add
imul
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
add
movl
mov
movl
mov
movl
mov
mov
xor
add
jmp
movl
movl
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
xor
add
add
imul
add
mov
mov
mov
cmp
jb
mov
mov
xor
add
imul
mov
xor
add
or
mov
xor
add
mov
xor
add
mov
lea
jmp
mov
mov
xor
lea
mov
mov
xor
mov
sub
add
mov
mov
xor
add
imul
cmp
jbe
pushl
mov
pushl
lea
push
mov
mov
pushl
mov
mov
pushl
pushl
pushl
call
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
xor
add
push
mov
xor
add
push
pushl
call
pop
pop
pop
leave
ret
push
mov
push
push
lea
mov
push
mov
mov
mov
mov
cmp
pop
jne
movb
movb
movb
movb
leave
ret
push
mov
push
push
lea
mov
mov
mov
mov
mov
cmp
jne
mov
movb
movb
movb
movb
leave
ret
push
mov
push
push
lea
mov
mov
mov
mov
mov
cmp
jne
movb
mov
movb
movb
leave
ret
push
mov
push
push
lea
mov
push
mov
mov
mov
mov
cmp
pop
jne
movb
movw
movb
leave
ret
push
mov
push
push
lea
mov
mov
mov
mov
mov
cmp
jne
mov
movb
movb
movb
leave
ret
push
mov
call
mov
mov
movb
call
push
mov
movb
call
push
movb
call
movb
mov
jmp
push
mov
push
mov
push
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
movl
mov
movzwl
xor
add
pop
test
je
mov
movl
leave
ret
push
mov
sub
andl
movl
movl
movl
movl
movl
mov
mov
mov
mov
push
push
mov
mov
mov
mov
mov
push
mov
test
jne
pushl
mov
call
mov
mov
add
mov
mov
mov
mov
xor
mov
add
cmp
jne
mov
mov
mov
mov
mov
mov
xor
add
mov
mov
andl
xor
add
mov
lea
push
mov
xor
add
push
mov
add
push
mov
mov
movl
pushl
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
mov
lea
mov
lea
push
mov
xor
add
push
mov
add
push
mov
mov
movl
pushl
mov
call
test
je
andl
cmpl
jbe
mov
mov
sub
mov
incl
mov
mov
inc
cmp
jb
mov
mov
add
mov
mov
add
sub
add
mov
mov
mov
movl
jmp
add
shr
mov
je
lea
mov
mov
mov
mov
movzwl
mov
and
mov
mov
shr
add
xor
cmp
jne
mov
add
mov
cmpl
je
mov
add
mov
mov
mov
mov
addl
decl
jne
mov
add
mov
cmp
jae
add
mov
mov
test
jne
mov
mov
movl
mov
mov
mov
xor
add
mov
lea
mov
lea
push
mov
xor
add
push
mov
add
push
mov
mov
pushl
mov
call
mov
mov
add
mov
pushl
mov
pushl
pushl
call
mov
add
lea
mov
mov
mov
mov
mov
mov
mov
cmp
jb
mov
mov
mov
lea
mov
add
cmp
jae
mov
mov
mov
sub
add
mov
mov
jmp
pushl
call
mov
mov
mov
xor
add
mov
jne
mov
mov
pushl
mov
call
jmp
mov
mov
lea
add
xor
pop
pop
pop
leave
ret
push
mov
sub
push
mov
mov
cmpl
je
test
je
test
je
mov
test
je
cmpl
je
cmp
je
mov
andl
mov
sub
add
movzwl
mov
movzwl
add
je
lea
push
mov
mov
push
test
je
mov
andl
and
add
movzwl
movzwl
add
je
lea
mov
test
je
mov
andl
and
add
movzwl
movzwl
add
je
lea
mov
mov
mov
test
je
mov
add
movzwl
movzwl
incl
addl
add
cmp
jb
movzwl
movzwl
mov
incl
add
add
mov
cmp
jb
mov
movzwl
movzwl
incl
add
add
mov
cmp
jb
pop
pop
xor
inc
jmp
xor
pop
leave
ret
push
mov
mov
mov
sub
push
xor
push
push
cmp
je
cmp
je
cmp
jne
xor
inc
jmp
mov
add
mov
mov
mov
mov
add
add
mov
cmp
ja
mov
mov
cmp
jbe
cmp
jae
movzwl
jmp
mov
lea
mov
test
je
add
mov
cmp
jbe
mov
mov
add
cmp
jae
mov
jmp
sub
mov
mov
test
je
mov
inc
mov
cmp
jb
jmp
xor
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
movl
mov
mov
mov
mov
mov
mov
push
mov
push
mov
movl
mov
mov
push
mov
xor
xor
add
add
mov
cmp
je
mov
mov
xor
add
cmp
je
mov
mov
xor
add
cmp
je
add
mov
mov
xor
add
mov
mov
cmp
je
mov
mov
imul
xor
add
cmp
jne
mov
mov
imul
xor
add
cmp
je
mov
mov
mov
imul
add
mov
add
xor
mov
mov
mov
xor
add
xor
mov
mov
add
add
cmp
je
add
mov
mov
xor
add
mov
lea
mov
movl
mov
pushl
mov
call
mov
xor
add
mov
cmp
jne
mov
pushl
mov
call
mov
movl
movl
mov
xor
add
cmp
jne
mov
mov
xor
xor
lea
mov
mov
add
imul
push
call
mov
xor
add
cmp
jne
mov
xor
add
cmp
jbe
mov
xor
add
cmp
jne
mov
mov
xor
lea
mov
jmp
movl
movl
mov
xor
add
jmp
mov
xor
add
mov
mov
xor
add
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
mov
mov
mov
xor
add
cmp
je
mov
mov
xor
add
shr
cmp
je
mov
mov
mov
movzwl
push
pushl
call
jmp
mov
add
mov
mov
add
push
pushl
call
mov
mov
mov
xor
add
cmp
mov
jne
mov
xor
lea
mov
jmp
mov
xor
add
imul
mov
mov
mov
xor
lea
mov
mov
xor
add
cmp
jne
mov
mov
mov
sub
xor
jmp
mov
xor
add
cmp
mov
jne
mov
jmp
mov
xor
add
pop
pop
pop
leave
ret
push
mov
sub
movl
movl
mov
mov
push
mov
mov
mov
mov
xor
mov
add
cmp
je
mov
mov
add
push
mov
movl
mov
mov
mov
xor
xor
add
cmp
je
mov
mov
add
mov
mov
sub
mov
xor
add
mov
cmp
je
mov
xor
add
mov
push
movl
jmp
mov
xor
lea
add
shr
cmp
jae
sub
lea
mov
movzwl
and
mov
mov
mov
sub
add
movzwl
shr
xor
mov
mov
mov
mov
xor
lea
mov
mov
mov
xor
add
cmp
jne
mov
mov
xor
add
cmp
jne
mov
mov
add
add
decl
jne
mov
add
mov
mov
mov
xor
cmp
jae
add
mov
mov
xor
add
mov
cmp
jne
pop
mov
pop
jmp
mov
xor
add
pop
leave
ret
push
mov
sub
movl
movl
mov
push
push
mov
xor
mov
add
mov
mov
xor
add
mov
push
mov
mov
mov
xor
mov
addl
mov
mov
xor
mov
addl
mov
mov
xor
mov
addl
mov
mov
xor
mov
addl
mov
mov
mov
test
je
mov
test
je
mov
test
je
mov
mov
xor
mov
add
mov
cmp
jne
mov
mov
mov
add
mov
mov
test
je
movl
mov
xor
add
mov
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
cmp
jne
mov
lea
push
mov
xor
add
push
pushl
pushl
call
mov
mov
mov
sub
add
push
push
call
mov
mov
mov
mov
pushl
pushl
push
call
mov
mov
add
movzwl
lea
mov
mov
movzwl
xor
add
mov
cmp
je
mov
xor
add
mov
mov
movzwl
xor
sub
sub
cmp
ja
mov
add
mov
jmp
mov
mov
lea
mov
mov
test
je
not
and
add
push
mov
add
push
call
mov
mov
mov
xor
add
cmp
je
push
mov
add
mov
add
push
push
call
mov
mov
mov
add
xor
lea
mov
mov
mov
movzwl
xor
sub
mov
sub
mov
cmp
jbe
mov
mov
xor
add
mov
mov
cmp
jne
mov
lea
push
mov
xor
add
push
mov
pushl
push
call
test
je
mov
mov
mov
xor
add
je
andl
mov
mov
add
mov
mov
mov
add
andl
mov
mov
mov
mov
mov
mov
lea
mov
xor
mov
add
incl
cmpl
mov
jb
movl
movl
movl
movl
movl
movw
movb
xor
lea
mov
xor
sub
inc
mov
cmp
jb
mov
lea
push
call
mov
lea
push
push
call
lea
push
mov
pushl
call
mov
test
je
mov
jmp
mov
mov
cmp
je
mov
mov
cmp
jne
mov
mov
cmp
jne
mov
mov
mov
add
mov
mov
push
push
pushl
call
test
je
pushl
mov
pushl
call
test
je
mov
mov
mov
call
test
je
push
pushl
call
test
je
mov
mov
cmp
jne
mov
lea
push
pushl
mov
pushl
push
call
mov
mov
mov
xor
add
je
mov
mov
movl
mov
pushl
xor
pushl
add
or
add
push
call
movl
jmp
mov
mov
add
call
mov
mov
mov
mov
movl
cmpl
jne
andl
mov
jmp
xor
pop
pop
pop
leave
ret
push
mov
movzwl
movzwl
push
push
xor
lea
test
je
mov
lea
cmp
jb
mov
add
add
cmp
jb
add
inc
cmp
jb
xor
pop
pop
pop
ret
push
mov
sub
movl
movl
movl
mov
mov
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
mov
push
mov
xor
push
mov
mov
add
push
cmp
je
mov
mov
xor
add
cmp
je
mov
xor
add
mov
mov
xor
add
mov
movzwl
movzwl
mov
xor
mov
xor
mov
add
add
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
jmp
mov
mov
xor
add
cmp
je
mov
mov
xor
add
cmp
mov
mov
je
cmp
je
mov
mov
xor
mov
add
cmp
jb
mov
mov
xor
mov
add
cmp
ja
movzwl
movzwl
add
mov
mov
mov
xor
mov
add
cmp
jb
mov
mov
xor
mov
add
cmp
ja
movzwl
movzwl
add
mov
mov
mov
cmp
jne
mov
mov
xor
lea
mov
mov
mov
xor
lea
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
cmp
jne
mov
xor
mov
add
imul
mov
jmp
mov
xor
mov
lea
mov
mov
mov
mov
mov
sub
mov
xor
mov
cmp
jne
mov
mov
mov
sub
xor
cmp
jne
xor
jmp
xor
inc
jmp
mov
xor
add
pop
pop
pop
leave
ret
push
mov
push
mov
push
mov
sub
mov
xor
mov
movl
mov
cmp
je
push
push
movzwl
mov
mov
mov
cmp
jne
mov
lea
xor
mov
xor
mov
mov
sub
mov
xor
mov
cmp
jne
mov
pop
pop
cmp
je
xor
lea
pop
leave
ret
push
mov
push
push
push
movl
mov
call
mov
mov
add
xor
cmp
je
mov
mov
mov
push
mov
mov
sub
mov
xor
mov
cmp
jne
mov
lea
xor
mov
xor
lea
mov
add
xor
cmp
jne
mov
pop
cmp
je
xor
xor
mov
mov
pop
pop
leave
ret
push
mov
push
push
movl
mov
call
mov
mov
sub
mov
xor
mov
cmp
je
push
push
movzwl
mov
mov
mov
cmp
jne
mov
lea
xor
mov
xor
mov
mov
sub
mov
xor
mov
cmp
jne
cmpl
pop
pop
je
xor
inc
jmp
xor
pop
leave
ret
push
mov
push
mov
movzwl
push
lea
mov
push
xor
mov
mov
cmp
je
mov
sub
mov
jmp
mov
mov
add
movzwl
mov
add
xor
mov
cmp
jne
xor
pop
mov
mov
pop
leave
ret
push
mov
sub
movl
movl
mov
xor
add
mov
movl
movl
movl
mov
xor
mov
lea
mov
xor
add
mov
imul
cmp
jae
mov
mov
sub
mov
xor
add
cmp
jbe
mov
add
mov
add
mov
mov
mov
mov
mov
xor
mov
lea
mov
jmp
mov
mov
sub
mov
xor
add
cmp
jbe
mov
add
mov
add
mov
mov
mov
xor
mov
lea
mov
jmp
mov
mov
sub
mov
xor
add
cmp
jbe
mov
add
mov
add
mov
mov
mov
xor
mov
lea
mov
jmp
mov
add
mov
add
mov
mov
mov
inc
mov
jmp
leave
ret
push
mov
push
push
movl
movl
xor
inc
je
mov
xor
add
cmp
jne
jmp
mov
xor
add
mov
sub
mov
mov
xor
add
mov
add
mov
jmp
leave
ret
push
mov
sub
movl
movl
mov
mov
mov
push
push
mov
xor
mov
add
cmp
mov
jne
xor
add
jmp
mov
xor
add
cmp
jne
mov
jmp
lea
mov
mov
mov
mov
xor
add
mov
mov
push
call
mov
mov
mov
jmp
mov
sub
mov
mov
mov
call
mov
pushl
mov
call
mov
xor
add
cmp
jne
mov
call
mov
xor
add
push
pushl
pushl
call
mov
xor
add
cmp
je
mov
mov
mov
mov
mov
add
cmp
jne
mov
xor
add
pop
pop
pop
leave
ret
mov
mov
jmp
push
mov
mov
sub
cmpl
push
push
push
je
test
je
movzwl
mov
mov
xor
and
mov
xor
add
mov
andl
xor
push
pop
cmp
jae
lea
xor
movzwl
mov
lea
cmp
jne
movzwl
mov
cmp
jne
mov
movzwl
cmpb
je
mov
movzwl
movsbw
mov
sub
xor
cmp
je
push
pop
incl
mov
cmp
jb
jmp
incl
push
pop
mov
movzwl
cmpb
je
inc
cmp
jne
xor
pop
pop
pop
leave
ret
mov
add
xor
xor
cmp
sete
jmp
push
mov
sub
push
mov
mov
cmpl
jne
xor
jmp
push
pushl
call
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
push
mov
mov
call
push
mov
pushl
call
mov
test
je
mov
push
push
mov
add
mov
mov
mov
mov
add
mov
mov
add
add
mov
mov
mov
cmp
ja
mov
xor
mov
cmp
jbe
jmp
mov
mov
movzwl
cmp
jae
cmp
jae
mov
mov
mov
mov
lea
add
add
sub
movl
mov
mov
cmpl
jne
mov
pushl
push
call
mov
test
je
mov
mov
mov
addl
decl
jne
mov
inc
mov
cmp
jb
pop
pop
pop
leave
ret
push
mov
mov
push
pushl
lea
mov
call
mov
mov
mov
xor
cmp
pop
setne
mov
pop
ret
mov
push
jmp
xor
add
mov
add
add
movzwl
mov
cmp
jne
xor
mov
mov
pop
ret
push
mov
mov
shl
add
jmp
xor
sub
mov
inc
inc
mov
cmp
jne
movb
mov
add
pop
ret
push
mov
sub
push
mov
mov
lea
push
mov
mov
mov
mov
push
xor
mov
add
cmp
je
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
mov
movl
mov
mov
mov
movl
mov
mov
xor
mov
sub
add
mov
movl
jmp
mov
mov
xor
xor
lea
mov
xor
div
mov
mov
xor
xor
sub
cmp
jne
mov
add
mov
mov
mov
xor
xor
add
add
cmp
jae
lea
mov
mov
xor
add
lea
mov
mov
cmp
jbe
addl
jmp
addl
mov
xor
inc
incl
add
cmp
jb
mov
mov
test
jne
xor
sub
jmp
mov
xor
mov
sub
add
mov
xor
sub
ror
xor
mov
add
mov
mov
mov
sub
xor
cmp
jne
mov
mov
xor
xor
sub
sub
xor
mov
mov
xor
mov
sub
add
jmp
mov
xor
mov
sub
add
mov
mov
cmp
jne
mov
jmp
mov
xor
add
pop
pop
pop
leave
ret
push
mov
sub
movl
movl
mov
mov
movl
push
push
movl
mov
mov
mov
xor
mov
xor
add
add
imul
jmp
mov
mov
xor
xor
add
add
test
mov
mov
je
xor
xor
add
add
shr
mov
xor
add
xor
jmp
xor
xor
add
add
shr
mov
mov
xor
lea
mov
mov
xor
xor
sub
cmp
jbe
mov
pop
mov
mov
pop
leave
ret
push
mov
sub
movl
movl
movl
push
movl
mov
push
mov
push
xor
mov
add
mov
movl
movl
movl
mov
mov
mov
xor
xor
add
add
imul
jmp
mov
sub
xor
mov
lea
call
mov
mov
mov
mov
mov
mov
xor
lea
mov
mov
mov
xor
xor
sub
mov
cmp
jbe
mov
xor
add
mov
movl
mov
jmp
mov
mov
xor
add
shr
mov
mov
mov
mov
mov
mov
movzbl
xor
mov
mov
mov
xor
add
and
mov
mov
xor
mov
mov
xor
lea
mov
mov
xor
mov
sub
add
mov
mov
mov
xor
add
cmp
jne
mov
mov
xor
add
pop
pop
xor
pop
leave
ret
push
mov
mov
mov
mov
mov
mov
sub
push
push
push
mov
xor
mov
add
cmp
jne
orl
jmp
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
mov
mov
movl
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
mov
xor
add
mov
mov
xor
add
mov
mov
mov
sub
mov
mov
mov
mov
dec
test
mov
je
mov
mov
mov
dec
not
and
mov
mov
add
jmp
mov
mov
mov
xor
add
mov
mov
xor
add
mov
mov
mov
xor
add
mov
mov
movl
movl
movl
mov
mov
xor
add
imul
mov
mov
xor
lea
cmp
jae
mov
xor
add
mov
mov
add
mov
pushl
mov
mov
call
mov
movl
mov
xor
add
push
lea
push
call
mov
test
je
mov
xor
add
push
pushl
lea
push
call
mov
mov
mov
mov
sub
mov
mov
mov
mov
add
mov
cmp
jb
mov
mov
mov
add
mov
sub
jmp
push
pushl
lea
push
call
mov
mov
movl
movl
movl
lea
mov
lea
mov
lea
mov
lea
mov
mov
xor
add
mov
jmp
cmp
je
mov
xor
mov
add
mov
mov
xor
lea
mov
mov
mov
xor
add
cmp
jne
mov
xor
add
push
push
lea
push
call
mov
mov
xor
mov
mov
xor
movzbl
add
cmp
je
mov
mov
xor
mov
mov
xor
movzbl
add
cmp
je
mov
mov
xor
mov
mov
xor
movzbl
add
cmp
je
mov
mov
xor
mov
mov
xor
movzbl
add
cmp
je
mov
mov
xor
mov
mov
mov
xor
mov
xor
mov
mov
xor
mov
or
mov
mov
xor
mov
cmp
jne
mov
mov
xor
mov
mov
mov
xor
mov
xor
mov
mov
xor
mov
or
mov
mov
xor
mov
cmp
jne
mov
mov
xor
mov
mov
mov
xor
mov
xor
mov
mov
xor
mov
or
mov
mov
xor
mov
cmp
jne
mov
mov
xor
mov
mov
mov
xor
mov
xor
mov
mov
xor
mov
or
mov
mov
xor
mov
cmp
jne
lea
push
call
mov
cmp
je
mov
xor
add
mov
mov
xor
lea
xor
mov
mov
xor
add
cmp
je
mov
mov
xor
add
cmp
jne
mov
mov
xor
lea
jmp
push
pushl
lea
push
call
mov
mov
xor
add
cmp
je
mov
xor
add
push
push
lea
push
call
mov
add
mov
pushl
pushl
mov
add
push
call
mov
mov
xor
add
cmp
je
push
pushl
mov
add
push
call
mov
mov
add
mov
add
mov
mov
mov
xor
add
imul
mov
mov
xor
lea
cmp
jb
mov
mov
mov
jmp
mov
mov
xor
xor
add
add
cmp
jne
mov
imul
mov
jmp
mov
xor
add
cmp
je
subl
jmp
andl
pop
pop
pop
leave
ret
push
mov
and
mov
sub
push
mov
push
push
cmp
jne
push
jmp
mov
cmp
jne
push
jmp
mov
cmp
jne
push
jmp
mov
cmp
jne
push
jmp
mov
mov
cmp
jne
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
mov
add
mov
mov
mov
mov
mov
mov
mov
add
mov
mov
mov
push
push
pushl
push
call
mov
mov
pushl
xor
add
mov
lea
push
push
pushl
pushl
pushl
call
mov
mov
xor
add
cmp
je
mov
mov
xor
add
imul
mov
jmp
mov
cmp
jne
push
jmp
mov
cmp
jne
push
jmp
mov
cmp
jne
push
pushl
pushl
push
pushl
pushl
pushl
call
mov
mov
pop
pop
pop
mov
pop
ret
push
mov
sub
mov
mov
movl
mov
xor
add
mov
mov
push
mov
pushl
lea
pushl
push
pushl
pushl
pushl
call
mov
mov
leave
ret
