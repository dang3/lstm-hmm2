mov
mov
ret
mov
mov
ret
cmp
movl
jmp
xor
sbb
pop
daa
mov
nopl
jmp
mov
ffree
push
out
in
mov
in
data16
ljmp
push
aas
inc
adc
rolb
dec
ret
clc
loopne
jmp
jbe
cwtl
lds
and
out
mov
mov
jge
mov
loop
stos
xor
int
popf
inc
idiv
sbbl
out
stos
xchg
pop
cmpsl
cmp
or
sub
jae
adc
dec
ss
mov
jne
lret
push
outsb
aam
jle
mov
cwtl
pop
idivl
addr16
mov
xchg
xchg
cmc
clc
add
int
shr
or
ret
sub
movsb
loopne
sahf
std
xor
aam
pusha
aas
mov
lahf
lods
imul
dec
jmp
mov
inc
push
sub
fildll
jns
mov
mov
xor
call
mov
and
inc
stos
pop
xor
adc
xchg
cmp
stc
and
mov
shr
and
pop
mov
and
insb
xchg
push
jg
fwait
push
mov
add
fsts
stc
and
pop
push
jo
data16
subl
movsb
movups
xor
lahf
xor
fstpl
gs
mov
mov
shr
mov
cmp
pusha
ss
fidivrs
into
sub
ficomps
lret
icebp
mov
jecxz
jbe
test
or
cmp
xor
cmpsb
testb
xchg
cmp
insb
and
lds
addr16
into
shr
xlat
pop
mov
cmp
imul
stos
test
inc
fcoms
outsb
inc
fucomp
xchg
in
dec
sbbl
cmp
mov
es
arpl
test
mov
subl
call
in
xor
notb
rcl
lahf
mov
xlat
cmpsb
aam
xorb
mov
movaps
mov
test
push
mov
lods
mov
pop
mov
mov
mov
xchg
lods
scas
cmp
je
pop
mov
sti
or
enter
add
jbe
or
xor
and
fwait
je
xchg
push
sti
mov
cmp
sbb
xor
mov
or
jge
int3
rolb
pop
data16
das
fisttpl
and
popa
out
inc
xchg
das
js
pusha
mov
aaa
fs
and
lods
xchg
mov
dec
push
mov
mov
cltd
in
enter
shl
push
inc
out
cli
fildll
mov
jbe
lea
cmp
add
addr16
and
popa
mov
xlat
and
xor
inc
ret
jno
xor
fwait
divb
sub
pop
dec
stc
sbb
data16
aas
xor
aas
jge
aaa
add
mov
jnp
sub
xchg
out
sub
mov
mov
and
sti
add
mov
dec
inc
sbb
icebp
incl
add
aaa
mov
jnp
leave
or
sbb
mov
mov
and
popa
cmpsb
mov
iret
sahf
sbbb
cmp
fstp
and
or
cmp
ret
in
in
aad
pop
dec
xchg
das
hlt
inc
jbe
mov
jge
inc
or
test
jno
lcall
flds
repz
adc
pop
push
decl
imul
cmp
jg
jno
lds
in
xchg
jmp
inc
jae
adc
ret
mov
iret
daa
in
sysret
jecxz
movsb
jl
jbe
sarl
lahf
and
test
mov
adc
test
or
fidivs
or
xor
stos
hlt
pop
in
sarb
shrl
adc
cli
sbb
cmp
or
mov
mov
mov
sbb
cmpsb
xchg
mov
jns
xor
in
sub
cmpsb
adc
outsl
sti
xchg
xchg
scas
adc
sub
outsl
push
sub
nop
push
sti
xor
push
sub
das
inc
movsb
lds
shl
rorl
adc
jle
mov
sub
jno
jb
pop
outsl
mov
mov
cwtl
cmp
mov
mov
rclb
dec
sub
dec
in
jmp
mov
fstl
and
into
test
pop
fwait
popf
popf
mov
lea
xor
ret
clc
test
mov
cmp
rclb
dec
xchg
aaa
mov
cmp
repz
icebp
hlt
in
in
mov
cmp
mov
aam
mov
sub
leave
mov
aas
shlb
mov
push
sub
cmp
insb
in
jecxz
and
push
rclb
sub
push
dec
ljmp
mov
loope
mov
mov
xorb
stos
dec
sti
xor
add
repz
cmp
filds
aaa
arpl
pop
pop
aam
cmp
jmp
scas
loop
pusha
out
pushf
mov
sub
mov
sub
loopne
clc
cld
ja
in
jge
lahf
cs
js
lret
xchg
push
cmovge
in
outsb
xor
mov
adc
fwait
sbb
xchg
je
inc
jbe
dec
sub
push
mov
ret
inc
cld
xlat
dec
les
sbb
sub
out
and
xchg
push
jbe
mov
or
out
inc
int3
rorb
pushf
cmp
pusha
addb
mov
ljmp
jns
cmp
test
repnz
je
sbb
repz
das
dec
mov
mov
inc
or
scas
int
sub
mov
add
pop
lcall
popa
jmp
cmc
xor
xor
jae
out
pop
cmpsb
sub
test
mov
addl
nop
inc
in
push
lea
xor
out
in
pop
inc
jg
mov
and
clc
inc
test
adc
xor
stc
mov
enter
lods
test
sarl
xchg
mov
and
inc
xchg
inc
sub
lds
mov
mov
add
xor
push
xchg
xchg
lret
and
or
fdivrp
xchg
ret
dec
outsl
neg
lea
xchg
int
loop
adc
in
aas
dec
iret
sbb
jecxz
dec
es
and
dec
mov
sub
inc
or
xor
insl
lret
and
sbb
loop
imul
mov
jmp
sbb
cmpb
iret
mov
adc
xor
dec
int
mov
lret
inc
push
cmp
out
cmp
daa
mov
push
xor
mov
sbb
xchg
jne
xchg
out
xor
sub
rcll
shlb
jae
movl
cmp
movl
jae
adcl
shrd
shr
ret
inc
mov
xor
and
shr
ret
xor
xor
ret
mov
mov
ret
mov
mov
ret
mov
mov
ret
mov
mov
ret
mov
mov
ret
mov
mov
ret
mov
mov
ret
mov
mov
ret
mov
mov
ret
push
mov
sub
movl
movl
movl
movl
movl
jmp
cld
xor
test
mov
mov
push
add
movups
repnz
sbb
or
xor
lods
dec
dec
xchg
dec
and
fdivrl
rcl
out
jge
bound
push
pop
xchg
aaa
out
out
sub
sbb
fld
cmp
inc
mov
rcrl
cmp
mov
repz
push
lret
adc
jno
mov
xor
add
and
push
mov
push
mov
pushf
xorl
shrb
jl
lea
ja
sub
jae
adc
xchg
cmp
movsl
mov
stos
push
fucom
push
push
fwait
arpl
push
addr16
dec
lds
into
inc
mov
adc
xor
pop
mov
loope
jnp
int
shrl
cmpsb
popf
lods
sub
push
sti
cmp
test
fs
popf
mov
insl
popa
inc
repz
les
xchg
mov
adc
push
and
fs
ret
cmc
scas
or
out
dec
dec
repz
or
mov
mov
mov
lret
insl
jge
lods
mov
ds
jp
inc
adc
mov
push
cli
push
insb
mov
mov
jp
lods
mov
iret
sbb
sti
fcomps
sahf
nop
pop
mov
sahf
js
popa
mov
mov
jae
mov
mov
push
lahf
inc
lods
xchg
and
jle
cmpsb
insl
out
idiv
in
or
cmp
or
leave
mov
mov
xchg
push
out
mov
cmp
add
repz
push
dec
negb
mov
insb
in
adc
and
add
out
sbb
or
mov
add
ret
jae
out
in
stos
shlb
stos
and
or
jo
sub
jge
ljmp
mov
mov
push
mov
pop
sub
cmpsb
cmpsl
fsubrl
outsl
shll
cmp
scas
jo
cwtl
dec
mov
adc
in
add
in
scas
sbbb
enter
mov
sahf
or
lret
xor
cmc
sbb
mov
cmp
mulb
sbb
movsb
lea
cmp
rcll
pop
fdivs
shl
jmp
shll
push
mov
inc
jne
sub
mov
cmc
mov
ljmp
fnstcw
aad
sbb
cld
test
fnstenv
cmpsb
and
pop
repnz
insb
test
dec
pop
cmp
cli
cli
mov
call
ret
int
and
fwait
cmp
fs
pop
scas
pop
outsb
int3
daa
dec
cmpsb
dec
jecxz
repz
int
sub
dec
test
pop
add
lret
sahf
mov
das
orl
lock
and
fdivrs
lods
das
add
inc
or
mov
iret
push
or
push
sbb
lcall
push
movsl
push
or
jo
xor
add
or
shll
mulb
sub
push
test
sub
in
enter
push
inc
test
mov
xchg
sub
mov
fs
int
xchg
mov
fldl
mov
sub
inc
push
in
fisubl
dec
sbb
mov
adc
mov
movsb
jl
iret
test
xor
mov
dec
or
mov
loope
fildl
or
push
sub
icebp
loop
or
mov
xchg
fs
adc
les
add
ret
bound
adc
mov
push
sbb
pop
ljmp
repnz
jne
dec
fiadds
or
xchg
lea
push
rcr
add
cs
sub
lock
xchg
popa
in
pop
es
dec
dec
inc
mov
sub
jecxz
adc
pop
mov
sub
cmp
cmp
dec
xchg
jb
pop
shl
push
std
pop
pop
dec
out
leave
lret
xchg
xor
sbb
push
test
stc
mov
xchg
mov
pop
pop
mov
imul
in
lods
jne
pop
push
repz
push
inc
jb
je
imul
push
mov
lcall
xor
sub
adc
iret
popa
jmp
mulb
shll
or
lds
cmp
test
loope
jbe
mov
pop
inc
cld
cli
insb
nop
push
out
adc
gs
mov
jg
js
push
lcall
mov
and
push
lahf
fistps
or
lret
jmp
or
gs
inc
and
imul
cs
adc
loope
push
xor
loopne
je
mov
mov
mov
test
inc
cmp
and
aas
push
in
repz
sbb
xor
jae
or
lret
rol
leave
sbb
maskmovq
idivl
in
and
dec
push
push
add
lcall
fdivs
mov
fnstcw
nop
sbb
cmc
fwait
mov
jae
xchg
sbb
sarb
clc
adc
xchg
adc
add
xor
out
push
or
dec
lds
push
dec
ret
mov
ja
stos
cmp
push
imul
cmp
lcall
adc
rcr
dec
and
cmp
inc
fsubl
rcll
or
ficoml
test
pop
movsl
xor
std
mov
loope
and
push
xchg
push
test
comiss
mov
pop
and
xchg
dec
mov
jnp
jl
jno
pop
push
popa
push
or
aam
inc
aam
jno
add
inc
fdiv
add
add
inc
fcoml
inc
loopne
arpl
add
ds
add
lds
mov
inc
xchg
inc
inc
das
ljmp
loope
pinsrw
sysenter
mov
rolb
mov
leave
inc
add
push
mov
inc
sti
or
xchg
jmp
pop
iret
fucom
adc
inc
adc
imul
sub
repnz
mov
sbb
mov
test
sbb
or
adc
bound
sbb
cmpsl
cld
xor
add
jns
fsub
mov
and
lahf
and
stos
mov
arpl
popf
mov
out
adc
cmpsb
push
push
xchg
movsl
pop
xorl
loopne
and
jns
ja
xchg
pusha
cwtl
inc
fcoms
adc
fstpl
pop
cmp
pop
sub
stos
imul
push
clc
xlat
loop
push
ja
xchg
cs
xor
mov
push
mov
in
fucomp
and
shr
stc
cmc
ret
lds
or
or
loope
mov
mov
add
popf
in
pop
lods
jl
cmpsb
or
inc
mov
test
outsb
jle
cmp
xor
ljmp
int
pop
jg
mov
outsl
jle
outsb
pop
push
dec
mov
jge
gs
mov
sub
pushf
adc
inc
jl
inc
pop
fsubl
shll
sarl
sub
andb
std
clc
xchg
scas
lds
mov
mov
clc
xchg
and
sub
add
and
out
mov
add
je
in
shlb
push
xchg
or
mov
add
push
mov
mov
dec
int
roll
or
dec
or
mov
mov
decl
or
inc
sub
pop
mov
xchg
add
jl
out
or
sbb
bound
orl
adcl
push
movl
scas
mov
fmull
and
mov
lds
jg
test
lret
xchg
cmp
sbb
les
call
mov
mov
dec
xchg
jns
sbb
aad
mov
cmc
mov
mov
dec
pop
jb
push
adc
adc
xchg
pop
lods
imul
jne
or
aam
imul
adc
enter
clc
and
fisubrs
push
push
jl
iret
adc
imul
and
xorl
popa
icebp
add
jae
lods
cmp
shrw
cwtl
mov
cltd
lea
cmp
test
enter
lods
sub
or
stos
fbstp
ret
movsl
and
xchg
scas
xor
push
lea
push
cld
out
andb
inc
fs
add
mov
jno
std
cmp
shrb
idivl
sbb
mov
rcr
jg
subl
xchg
jb
inc
shrl
mul
shll
dec
shlb
mov
and
and
js
pop
fsubrs
adc
imul
xor
jb
iret
jp
pop
mov
fdivs
pop
rcl
shll
cmp
mov
dec
mov
xchg
shlb
mov
iret
and
sub
cltd
mov
iret
movsl
mov
mov
mov
jb
ljmp
mov
or
ret
push
sbb
fmull
xchg
mov
pop
popf
push
or
pop
movsb
les
pop
sub
std
mov
inc
sbb
add
inc
mov
js
xchg
sti
dec
lds
mov
and
data16
mov
jl
scas
inc
out
xorl
lret
cmpsb
adcl
push
adc
xor
inc
cwtl
inc
jle
sbb
cltd
jne
outsl
adc
jl
inc
insb
cltd
call
sub
pop
sbb
aad
adc
ret
fucomip
mov
bound
test
mov
pop
sbb
cs
mov
fiaddl
imul
cmp
fstpt
mov
testl
mov
fdivr
lcall
faddl
jns
push
insl
inc
les
cwtl
mov
dec
lock
add
jns
jl
inc
lret
mov
addr16
push
pop
mov
xchg
add
jns
add
icebp
and
xchg
xchg
adc
addr16
inc
mov
stos
out
dec
sbb
loopne
add
icebp
movsl
pop
gs
outsb
pop
pavgw
std
jp
or
jbe
jg
sbb
jno
icebp
xchg
mov
iret
xor
mov
outsl
cld
stos
inc
int
nop
hlt
aaa
cwtl
inc
add
outsb
sbb
stc
xchg
add
mov
add
inc
xchg
jno
mov
and
mov
mov
or
ror
imul
cmc
xor
int3
inc
in
lcall
lcall
xchg
and
and
jnp
jne
negb
inc
call
mov
addr16
fisttps
inc
mov
jmp
mov
mov
or
jecxz
add
jnp
repnz
aas
stos
dec
dec
shr
mov
ffreep
in
scas
and
not
cs
jmp
xchg
insb
lea
cltd
fcomps
ljmp
xor
cmc
pop
lea
sbb
aam
jns
and
sbb
add
push
jno
insl
subl
adc
adc
add
jl,pn
lds
xchg
mov
pop
ljmp
mov
xchg
xchg
out
or
sbbl
sub
jl
negl
mov
shll
insb
inc
imul
jo
add
adc
mov
jbe
cwtl
cmpsl
mov
inc
in
dec
add
movl
mov
mov
jmp
pop
inc
sti
and
jbe
pop
js
test
pinsrw
wrmsr
insb
mov
jg
fmulp
scas
pop
jbe
xlat
xchg
sub
std
mov
inc
xchg
pop
jmp
pop
out
loope
mov
xor
jbe
lcall
dec
jno
pop
call
in
aas
mov
loope
xchg
mov
mov
mov
dec
insb
jmp
mov
push
or
dec
bswap
aad
push
aam
fcomi
fildll
dec
pop
jg
int
push
imul
rcrb
or
ret
inc
jae
shrl
jno
lea
inc
pop
fsubrp
out
sarb
mov
je
fsubrs
es
adc
sbb
dec
cmc
test
xchg
push
sbb
push
cmp
mov
sbb
mov
pop
js
and
insl
js
sti
aad
xor
sahf
sti
add
sbb
arpl
add
xor
sti
out
push
in
fdivrl
push
lret
push
bound
daa
inc
dec
mov
cmp
dec
jp
xchg
nop
mov
scas
xchg
jbe
fsub
test
in
inc
subb
dec
stos
jnp
inc
popa
sub
outsb
lea
es
scas
bound
bswap
dec
in
and
loope
repz
mov
daa
call
pop
jnp
xchg
mov
mov
cmp
loope
push
xchg
xor
inc
iret
les
dec
cmp
xchg
bound
sarb
mov
push
cmp
mov
scas
das
jb
leave
int
dec
mov
xchg
jmp
jl
rorb
imul
shlb
adc
cwtl
sub
xchg
out
inc
mov
movsb
shrl
leave
xor
lock
sub
lret
loopne
fnstcw
dec
fbld
adc
movl
dec
insl
mov
fbld
sahf
mov
mov
in
mov
mov
xchg
or
dec
cwtl
jnp
mov
aad
mov
inc
mov
adc
sbb
cmp
pop
mov
add
xchg
cmp
mov
sbb
xorb
mov
aam
jp
outsb
pop
and
sub
pop
std
aam
pop
add
fisttps
mov
cmc
idiv
add
stos
repz
and
jecxz
cmpsl
outsb
imul
mov
and
insb
pushf
inc
push
out
mov
jbe
xor
inc
dec
xchg
cmp
sahf
dec
dec
out
or
or
dec
cli
call
aam
dec
daa
pop
rcr
in
pop
mov
ds
test
push
lahf
test
pop
push
mov
popl
addr16
pop
imul
push
push
push
in
subl
adc
and
outsl
pusha
shll
jbe
push
aas
int
and
mov
add
stos
call
mov
pop
cmc
in
sub
sti
in
cmp
pop
pop
mov
lahf
dec
scas
rcrl
lods
push
jns
dec
into
adc
adc
imul
sub
lea
int3
or
mov
mov
hlt
mov
dec
fisubs
leave
mov
int
and
lock
xchg
fxch
lds
inc
fucomp
and
xchg
adc
inc
push
fidivrl
cmpl
adc
addr16
xchg
jno
cmp
inc
sti
sub
dec
das
lret
rcrl
mov
ret
cmp
sbb
inc
idivb
lods
pusha
mov
and
movsb
fdivs
and
add
aas
add
clc
push
xchg
popa
jmp
mov
cmpsb
mov
ret
jbe
xchg
scas
inc
xchg
add
mov
out
sbb
push
adc
cmp
mov
lret
inc
jnp
push
in
out
mov
dec
push
pusha
mov
movsl
sub
ret
aam
adcb
jnp
jbe
sub
pop
and
cld
mov
les
sbb
int3
mov
dec
xchg
add
mov
test
xchg
dec
and
xorl
xchg
data16
mov
or
icebp
ja
jns
xor
jno
or
push
mov
lea
jecxz
xchg
imul
mov
cli
movl
in
or
and
lret
data16
jl
and
test
pop
mov
js
clc
cmpsl
and
xchg
hlt
jg
fldl
rcl
or
repz
inc
test
sbb
mov
rcl
and
pop
cmp
hlt
aad
or
gs
call
dec
push
jae
fwait
and
add
popa
push
jmp
std
mov
dec
jb
stc
es
mov
lret
xchg
fwait
in
cli
cmc
add
hlt
push
test
arpl
lock
popf
bsf
outsl
fisttpl
out
mov
inc
addl
mov
je
inc
ret
lret
xor
cltd
sub
out
mov
movb
into
ror
pop
test
adc
pop
adc
adc
scas
test
sub
pop
mov
add
push
pop
adcb
lret
mov
testb
push
lods
jmp
movsb
hlt
sub
in
mov
daa
into
sub
bound
dec
sub
inc
push
or
lea
nop
lods
sub
or
inc
mov
jbe
cmp
fistpl
push
test
das
fsts
movsl
sub
lods
xchg
xor
inc
call
push
jb
lds
push
xor
hlt
and
xor
imul
mov
push
sub
push
movl
jmp
ljmp
stos
lea
jbe
xchg
daa
je
cmp
pinsrw
pextrw
adc
add
xlat
jne
fbstp
and
cs
add
jae
ljmp
mov
insb
ljmp
je
add
in
out
pop
adc
out
stos
xor
bound
stos
adc
neg
aad
xor
fcoms
adc
mov
pop
fmull
mov
dec
in
cmp
push
mov
mov
ja
push
jo
test
xchg
xchg
dec
fidivs
data16
sub
fistl
leave
and
popf
push
push
jmp
mov
push
push
scas
out
xchg
ja
or
xchg
sub
and
ja
mov
add
insl
cli
aad
and
repnz
adc
pushf
ljmp
xor
outsb
adc
pop
and
push
sub
stos
jbe
iret
sub
pop
movb
cmp
or
stc
fwait
sbb
rorb
loop
ret
js
movsl
ret
mov
sti
jno
pop
outsb
mov
cmp
push
test
push
lods
xor
mov
sbb
dec
scas
mov
imul
xchg
or
push
insl
hlt
cmpsb
dec
push
out
out
pop
into
out
dec
add
cmp
mov
cs
imul
push
mov
sbb
mov
or
xlat
jmp
cld
addr16
cwtl
test
arpl
mov
mov
imul
dec
stos
pushf
jmp
int3
test
mov
xchg
adc
cld
fwait
les
lret
pmulhw
mull
adc
inc
rolb
jp
cmpsb
inc
mov
inc
les
outsl
movsl
sti
mov
int3
mov
xchg
push
cld
repz
aaa
jmp
mov
leave
insl
xchg
jno
inc
lcall
cwtl
sub
pop
xlat
lret
repnz
add
mov
mov
lret
hlt
incl
out
bound
sbb
fmull
imul
dec
mov
cltd
adc
push
pop
cmc
pop
lcall
nop
xor
mov
push
and
fistpll
ret
outsb
inc
pop
fistps
adc
mov
sbb
jle
xlat
int3
test
mov
stc
xchg
js
push
repnz
repz
bnd
call
cwtl
sub
cmpb
imul
or
jmp
pop
or
loope
add
cmp
and
cmp
mov
jae
out
sub
int
xor
cmp
mov
add
cmp
mov
sbb
xchg
daa
std
das
mov
in
xchg
adc
xor
in
inc
sub
popf
out
cmp
repz
cmpsb
cmpsb
xchg
dec
or
inc
adc
inc
stos
out
sub
out
aad
enter
rcrl
inc
jmp
mov
jbe
leave
mov
lcall
call
pop
sub
in
out
cmpsl
dec
daa
lret
fidivrs
cmp
dec
int3
loop
roll
mov
test
je
mov
fbld
sar
inc
xchg
cmp
push
mov
cltd
dec
cmp
jp
and
hlt
lock
sub
inc
adc
rcll
std
cli
cwtl
jne
cmp
insb
clc
sub
jno
pop
add
and
adc
call
jmp
lahf
cli
test
mov
iret
fiaddl
enter
mov
out
mov
mov
insb
out
repz
sbb
outsl
fcoms
or
fidivrl
dec
xchg
sub
dec
enter
sbbl
or
jl
leave
cwtl
int3
inc
aaa
pushfw
outsb
in
xchg
adc
sti
adc
pop
sti
mov
fldenv
adc
shl
inc
add
adc
mov
sbb
test
stos
cmp
jecxz
sbb
in
cmp
pusha
sbbl
xchg
sub
fdivrl
bound
push
sub
jmp
mov
lret
sub
adc
or
aad
enter
lret
lahf
mov
cmpsb
std
stos
fbld
and
and
repz
pushf
popa
inc
jae
adc
pop
xchg
js
cli
fildl
mov
fnstenv
bound
out
sbb
or
ljmp
fcmovnb
shl
jnp
mov
xor
cmp
repnz
add
out
cmp
sub
cmp
imul
cltd
xor
test
subb
ja
repz
pop
in
pop
out
mov
aad
js
popa
hlt
adc
push
cmp
push
jnp
xchg
add
setne
lret
mov
ret
and
outsb
iret
into
cmp
mov
cvtps2pi
scas
mov
cwtl
add
aam
adc
clc
fcoms
or
cmp
push
stc
insl
cmc
pushf
pop
aaa
xchg
mov
loop
sub
xor
aaa
and
dec
icebp
jnp
sbb
vxorps
add
inc
loope
jge
imul
dec
push
aam
test
pop
dec
sub
ds
pop
and
movsl
inc
mov
push
add
cltd
fcomps
mov
pop
pop
jmp
mov
or
inc
pushf
lcall
into
test
pop
mov
mov
loop
loope
and
idiv
stos
jno
ds
je
mov
push
std
hlt
push
push
xor
lock
xor
ss
nop
out
jnp
mov
inc
hlt
inc
sbb
add
inc
in
sahf
add
movl
movl
mov
xor
add
mov
or
sub
mov
mov
and
or
mov
or
mov
mov
sub
mov
mov
mov
mov
mov
xor
jmp
xchg
mov
imul
add
les
cmovns
inc
push
adc
aas
xorl
int3
push
mov
and
jae
jge
push
shlb
test
jmp
mov
pop
push
sbb
cmc
push
mov
sub
cmc
lahf
cmpsb
sbb
add
sbb
push
fs
mov
inc
sub
xor
dec
mov
fdiv
mov
mov
fsub
cmpsl
xchg
mov
or
std
sti
aad
add
sub
add
inc
add
fdivrl
imul
or
and
push
lods
xor
je
jo
js
or
pop
pop
sub
leave
repz
mov
cmp
ljmp
lods
mov
mov
imul
or
movsl
mov
xchg
repnz
sbb
inc
in
stc
rclb
pop
ja
jb
jmp
jno
mov
cmp
rorl
fildl
mov
jecxz
xchg
mov
jmp
mov
mov
adc
fldln2
lods
cmp
dec
pop
movsb
sahf
in
fcmovb
sub
dec
mov
pop
ljmp
jne
insl
jl
xchg
into
mov
clc
add
push
or
jb
in
adc
jge
jmp
repnz
mov
sbb
cmpsb
sbb
xor
and
add
mov
dec
sub
lret
mov
std
gs
inc
pop
test
push
mov
xchg
dec
push
cmp
mov
arpl
js
mov
dec
jp
aas
nop
jmp
cmp
das
or
mov
push
int
mov
movswl
xchg
je
mov
testl
or
fcmovu
jg
stos
push
and
ror
or
loopne
mov
testl
adc
mov
test
rorb
xor
adc
daa
inc
jbe
addr16
popa
xor
mov
push
fwait
jnp
cmpsb
inc
mov
test
adc
mov
jecxz
sbb
or
jle
lret
shll
subl
jge
incl
sti
fdivs
call
pop
ja
sub
in
sbb
cmp
cltd
mov
mov
pop
repnz
xchg
jecxz
insl
mov
into
rcrl
and
push
xlat
das
cmp
sub
dec
inc
adc
xchg
jns
inc
and
inc
aaa
setle
rcrl
bound
subl
in
jbe
and
fistps
idiv
icebp
dec
mov
test
mov
stos
push
fistpl
rol
cltd
push
aam
das
pop
push
pop
shl
aad
inc
scas
pop
adc
sub
sub
sbb
jecxz
in
adc
mov
scas
pop
out
lea
jle
addb
icebp
jb
fiaddl
jo
mov
call
fdivrl
push
repnz
cwtl
or
push
sahf
cmc
jne
les
mov
adcl
out
jmp
leave
mov
lods
fisttpl
outsb
mov
xchg
push
dec
mov
adc
imul
shll
cli
xchg
mov
or
aam
pop
ficoml
cld
pop
fsubr
jp
gs
fwait
add
xor
inc
or
test
stc
inc
jne
lods
daa
and
dec
movsb
stos
stos
pop
pop
in
dec
mov
sbb
xorl
mov
repnz
adc
leave
adc
mov
fnstcw
ret
lret
fsubl
stos
fwait
cmc
xchg
shrl
aas
mov
imul
and
cmp
andl
stos
test
mov
lret
mov
xor
jmp
cmp
int3
mov
lods
inc
cmc
mov
into
xchg
or
or
add
mov
jle
mov
xor
add
lods
lock
dec
das
xor
mov
call
outsb
pop
jno
sub
pop
loop
mov
and
jns
push
jnp
sub
pop
sbb
jecxz
into
and
and
stos
jg
xorl
inc
mov
mov
inc
movsl
xchg
jmp
mov
mov
scas
ja
jg
xchg
mov
ljmp
subb
insl
sbb
jns
outsl
repnz
xchg
dec
test
mov
rorb
aam
inc
adc
xlat
fidivrs
mov
lods
fistps
stos
adc
pop
mov
push
push
adc
cmc
loope
stos
xor
mov
xor
cmpsl
jge
les
mov
in
loope
mov
pop
rcrl
test
adc
jnp
jae
or
lods
lds
inc
out
push
bound
test
pop
movsl
cmp
stos
jle
sub
mov
cmp
and
loop
clc
scas
sub
out
cmpsl
enter
push
push
int3
bound
es
inc
sub
cmp
jecxz
ljmp
push
sbb
cmp
or
dec
stc
adc
movl
sbb
inc
icebp
xlat
lods
lock
mov
add
subl
pop
xchg
fsubrl
adc
cltd
enter
adc
sbb
lret
into
push
cmc
xchg
arpl
ret
aam
adc
jbe
cwtl
iret
adc
mov
mov
ficomps
push
mov
sarl
stc
fsubl
les
dec
push
hlt
xchg
insb
outsb
scas
inc
sub
add
push
lds
xchg
push
sbb
add
xchg
std
outsl
sahf
sbb
pusha
popa
inc
pop
test
xor
loope
add
xor
mov
imul
lea
mov
mov
imul
mov
mov
or
xor
div
mov
jmp
push
fadds
sub
push
and
cmp
dec
xchg
pinsrw
cmova
mov
dec
ret
pop
lahf
and
aam
dec
filds
add
mov
push
xchg
mov
pop
sub
lcall
jmp
push
add
jns
fnstcw
ljmp
mov
fstps
cmp
and
std
das
or
sahf
mov
jge
js
xchg
lret
call
pop
jl
mov
pop
cwtl
mov
and
sbb
pop
sub
mov
js
mov
lea
jmp
in
push
sub
xchg
ret
mov
repnz
sub
add
jo
ss
in
aam
stos
adc
xchg
push
mov
fbstp
mov
popa
in
lock
sbb
rcl
out
movsb
aas
xchg
push
add
xor
outsl
inc
lcall
jb
xchg
fld
out
popf
shl
mov
iret
sub
jp
call
sub
rorl
dec
xchg
and
adc
rclb
pop
xor
cmp
inc
xchg
dec
lcall
sti
mov
mov
nop
xor
dec
sbb
test
repz
les
adc
push
cmp
push
sbb
push
lods
out
cs
sbb
or
lock
dec
loope
sti
wbinvd
incl
or
test
xlat
int
pop
or
inc
hlt
xor
repz
cmp
xorl
or
les
mov
rorl
and
dec
gs
xor
sbb
fsubl
push
cmc
in
lods
pop
xchg
repz
test
movsb
xor
in
push
adc
sbb
dec
insb
ja
loope
jmp
xchg
adc
sub
repz
leave
mov
das
ret
fldcw
pop
push
pusha
sti
mov
shl
out
and
out
mov
fnstcw
mov
lcall
xorl
dec
je
xor
xorb
xchg
lahf
inc
push
push
push
lds
sbb
mov
nop
xchg
nop
insb
lcall
lock
popf
jns
repz
divl
inc
pusha
push
push
sbb
xchg
jg
sbb
loop
jns
and
lret
enter
mov
pop
insb
mov
pop
fidivl
mov
out
push
add
adc
adc
inc
addl
ljmp
out
sbb
push
push
inc
sbb
out
push
sub
cltd
sahf
xchg
ja
jo
xor
mov
cli
scas
xor
xchg
cmp
aas
jae
stos
push
pop
jmp
mov
lock
repnz
fcomps
enter
inc
inc
cmp
cli
pop
sti
xchg
hlt
mov
sahf
add
jmp
addr16
cwtl
pop
and
int3
std
ljmpw
pop
sub
push
dec
sbb
stos
shrb
xchg
jnp
mov
aaa
mov
cmp
mov
imul
shll
stos
jns
mov
bnd
stos
pop
xchg
adc
dec
xchg
lock
pop
out
xor
mov
or
and
sbb
out
xchg
xchg
daa
pop
sub
aas
push
jle
push
leave
ret
test
or
inc
cwtl
sarb
imul
lahf
push
push
aas
push
push
lock
shlb
mov
xor
cli
lret
cld
mov
ljmp
jle
icebp
xchg
nop
sbb
std
into
mov
xlat
xor
mov
jae
iret
jecxz
test
adc
xchg
push
xchg
dec
sub
arpl
xlat
outsb
add
lret
orb
shll
lock
jns
inc
add
or
cmp
cwtl
adc
sbb
inc
sbb
in
and
push
jae
pop
adc
gs
inc
icebp
lods
ret
push
jbe
insb
lock
inc
rcll
push
in
loop
mov
aas
dec
mov
repnz
mov
stos
cli
sub
xchg
and
push
pop
push
js
int
aam
imul
pop
fnsave
hlt
inc
xchg
xor
mov
push
dec
jb
jae
mov
fisttpll
cmp
xor
mov
enter
sbb
in
cld
push
lcall
sbb
mov
pop
sbb
lret
pushf
jle
push
lahf
or
negb
xchg
neg
repz
lahf
clc
orb
mov
mov
pop
lds
scas
int
mov
pop
std
out
push
sub
and
jo
fistpl
popa
mov
and
lahf
faddl
sub
lds
scas
cmp
scas
xchg
push
dec
aam
lret
jbe
adc
jne
mov
or
fisubl
mov
and
aas
mov
imul
movsb
jne
or
adc
dec
adc
or
xchg
mov
call
mov
ja
shlb
mov
adc
fs
fcomi
shrb
shlb
lds
mov
test
rclb
fsubrl
sub
adc
lds
lahf
jecxz
out
push
leave
aad
inc
cmp
mov
fildl
lahf
or
es
lock
mov
pop
jae
mov
lahf
adc
ljmp
and
fimuls
cld
mov
shrl
imull
ja
xchg
js
mov
mov
sbb
in
xor
pop
imull
adc
jle
aad
std
enter
jbe
dec
nop
mov
xor
leave
cmpsl
xchg
fsubl
fcmovbe
sarl
in
rorb
leave
dec
jnp
sbb
mov
ljmp
and
add
cmp
jb
movl
movl
movl
movl
jmp
xorb
ret
xor
xor
es
adc
data16
pinsrw
prefetchw
or
mov
adcb
das
int3
jmp
jg
push
sub
and
mov
jecxz
pop
and
out
ss
out
cli
push
repnz
andl
les
sub
jge
imul
sub
repnz
mov
mov
fmul
xor
in
or
lcall
or
popa
repnz
in
lcall
outsl
or
inc
loop
and
repnz
jnp
dec
cli
xor
flds
mov
test
int
xchg
adcb
insl
push
adc
test
sub
dec
jae
jmp
lods
test
arpl
fsub
xchg
sahf
mov
or
daa
cmp
cmpsl
outsl
arpl
ds
insl
shll
or
mov
lcall
stos
inc
pushf
jo
dec
pop
lods
outsb
push
mov
lds
andb
cmp
cld
test
or
out
inc
scas
test
sbb
lock
aaa
adc
shlb
and
mov
jl
imul
xor
cs
scas
mov
inc
pop
repz
repz
adc
sub
mov
in
gs
xor
inc
ljmp
aad
int3
aaa
cmpsl
incb
clc
lcall
adc
popf
jno
mov
sbb
pop
out
aam
jae
mov
xchg
stos
fimuls
cmp
dec
iret
pop
lret
pusha
push
xor
add
mov
loop
shlb
scas
das
movsb
fcomp
adc
out
adc
cmp
sti
inc
mov
push
scas
std
arpl
outsl
adc
mov
xchg
bound
xlat
push
pop
sbb
sbb
push
adc
mov
push
cltd
ficoms
or
pop
push
pop
push
out
pop
std
in
mov
push
sub
mov
nop
mov
fldt
out
pop
loope
and
mov
in
jmp
push
push
cmp
jo
jle
mov
mov
push
and
ffreep
dec
hlt
popf
mov
cwtl
andl
fsubrs
aam
outsb
adc
rcrl
call
jmp
fmul
cmp
icebp
or
lret
adc
add
sbb
mov
and
inc
rorl
jmp
int3
and
push
repnz
mov
fisubl
cmp
mov
sub
sub
xchg
test
add
mov
jmp
push
cmp
inc
xor
or
pop
jmp
inc
inc
cli
add
pop
enter
aaa
sti
clc
mov
xchg
cmp
in
in
cmp
repnz
dec
mov
andl
int3
fucom
jns
popa
cmp
inc
dec
mov
push
clc
fcomi
xor
jge
mov
jb
jno
sbb
arpl
dec
lcall
push
jle
outsl
daa
xchg
mov
and
enter
test
mov
sahf
in
inc
mov
mov
xchg
popl
adc
or
in
dec
mov
mov
das
sbbb
and
fwait
insl
nop
and
mov
lret
int
dec
jl
movsb
sbb
inc
cmp
imul
pop
jp
aam
cmp
mov
pop
push
push
xchg
es
dec
adc
popa
sbb
scas
icebp
into
sub
lds
out
test
pop
mov
or
or
mov
fidivs
mov
lret
ja
repnz
lock
fmull
cmp
push
sti
cmpb
das
cmp
add
pop
call
fwait
add
fnstsw
enter
enter
sbb
push
out
add
pop
sub
subl
pop
xchg
mov
jns
clc
mov
xchg
or
insb
or
sbb
pop
jbe
hlt
fucomp
cs
mov
jg
int3
jg
inc
dec
inc
ss
adc
inc
adc
popa
pop
xor
jmp
dec
sub
push
sbbl
fwait
addr16
sbb
movsb
xor
das
jns
stc
jbe
mov
add
xchg
and
xchg
mov
dec
nop
push
fs
xchg
fwait
rcrb
add
xor
jno
test
push
inc
sti
scas
ss
das
addr16
pop
sbb
int3
push
dec
and
outsb
faddl
add
mov
inc
test
inc
iret
fwait
pop
gs
pop
cmpsl
je
sti
lods
sub
popf
xchg
sbb
mov
mov
in
jmp
in
xor
xor
ror
mov
inc
jge
and
int
or
out
icebp
stc
xchg
cli
xor
dec
imul
outsl
add
cmp
pop
test
das
mov
and
jl
mov
pop
mov
sbb
mov
je
test
dec
outsl
dec
call
adc
lds
mov
sbb
lret
cmp
lret
sub
jle
testl
pop
sbb
jb
out
stc
aas
jae
add
inc
inc
addr16
rcll
mov
adc
sbb
movsb
ljmp
xchg
jmp
dec
fisubrs
cmp
pop
addb
into
push
cmpsb
lahf
inc
rcrl
leave
ljmp
ror
insl
pop
mov
fstps
or
data16
mov
jle
pusha
cmp
ret
lea
dec
xor
andl
cmp
shrl
cmc
shll
inc
int
call
jbe
mov
lahf
cmp
add
add
movl
movl
movl
movl
movl
mov
mov
or
lea
add
movl
jmp
add
inc
sti
daa
push
cs
add
or
btr
addb
dec
mov
movsl
negb
fdivp
xchg
call
xchg
mov
into
ret
test
cmp
cmp
mov
mov
mov
xchg
scas
gs
pop
lahf
cmp
xchg
stos
push
push
stc
mov
in
xchg
jle
xor
hlt
call
test
ljmp
or
jae
mov
cli
pop
sbb
hlt
push
add
push
cmpsl
mov
or
push
mov
inc
push
xor
adc
dec
and
mov
jnp
or
cmp
pop
lcall
xor
sbb
rclb
sbb
sti
dec
outsb
xor
adc
inc
ja
sub
fcmovb
xor
repz
iret
ret
mov
repnz
sub
xorl
repnz
cmpb
mov
jmp
and
int3
movsl
sub
addr16
sbb
mov
and
pop
lahf
mov
stc
cmp
aad
orb
pop
fwait
lahf
test
mov
in
xor
sbb
je
mov
and
pop
and
adc
cmpsb
adc
ljmp
add
mov
inc
and
mov
ret
add
das
or
sbb
dec
add
xchg
aaa
testl
inc
xor
sahf
or
mov
es
repz
push
xor
add
int
mov
add
cmpsb
pop
ret
mov
iret
lods
dec
mov
cmp
or
sub
dec
lds
sbb
jecxz
lea
inc
jmp
cmpsl
hlt
imul
test
jno
outsl
jo
cmp
pop
push
xor
cwtl
jecxz
add
js
imulb
out
dec
mov
mov
xor
cmp
jp
cmp
mov
jae
loope
xor
jns
pop
and
je
jmp
loope
or
add
call
int
xor
cltd
cmc
sbb
sbb
int
pop
fisubs
imul
or
shr
jns
mov
leave
cmc
sar
aas
mov
dec
mov
jns
inc
cld
cmpb
cmpb
pop
stos
mov
mov
xor
orl
andb
imul
pop
sbb
pop
int3
stc
das
fwait
js
jmp
push
hlt
lret
mov
pop
int
mov
ljmp
loop
test
movsb
es
shrb
dec
in
cwtl
ret
es
pop
dec
shld
pop
mov
jp
jno
aas
jp
subl
scas
xchg
stos
cltd
inc
and
stc
adc
sub
out
or
or
lret
int
arpl
popf
sbb
es
scas
js
sub
test
mov
push
dec
xchg
iret
lea
testb
sub
or
adc
aam
jbe
cs
fstps
nop
cld
testb
shrb
xor
dec
push
cmp
push
pop
ss
lret
mov
movsb
cs
push
pop
ljmp
daa
fistpl
sub
add
jle
in
stc
jl
dec
or
fidivrs
mov
fcoms
out
push
or
sub
ds
xlat
xor
cmp
mov
mov
stc
cmpb
xor
fwait
push
cmp
repnz
decl
fbstp
shll
sbb
sti
or
jno
ds
xor
divl
in
cmp
enter
jmp
and
inc
inc
test
cld
pop
repz
pop
scas
mov
cwtl
roll
pushf
sbb
cltd
ja
notl
and
data16
test
ds
gs
dec
dec
loope
sub
fs
les
popa
pusha
add
out
sbbl
add
in
sub
jno
lock
cmc
les
jae
push
shlb
jo
stos
fidivl
mov
adc
lods
mov
rclb
leave
add
xchg
dec
cmp
je
xor
lahf
cmp
fdivrs
ljmp
pop
mov
into
xchg
std
xor
mov
movsl
jmp
sub
repnz
dec
mov
push
push
lret
fwait
lock
xor
es
sbbl
mov
or
imul
mov
in
stos
popa
xchg
jge
aam
and
xor
rclb
push
fs
mov
and
movsb
aad
cli
mov
fwait
test
cmp
mov
fnsave
mov
frstor
imul
cmc
outsl
cmpsb
roll
inc
adc
icebp
sbb
cmp
movzwl
mov
add
push
cmp
repnz
cli
or
test
cli
mov
and
push
repz
fnstsw
push
daa
mov
orb
mov
xchg
cwtl
pop
cld
or
xlat
push
cltd
js
push
fcmovnbe
and
das
sahf
xchg
and
or
pop
fldpi
frstor
adc
xlat
into
popf
xorl
dec
pop
cmpsl
dec
adc
pop
cmp
dec
pcmpgtd
adc
bound
fldt
mov
inc
inc
and
sub
test
mov
fnstcw
ss
repz
fistpl
int3
mov
clc
xchg
loopne
mov
pop
adc
loop
adc
movl
movl
movl
movl
movl
mov
mov
sub
add
mov
imul
mov
mov
jmp
aad
sub
ss
adc
xchg
les
sahf
xchg
mov
add
vmread
int3
pushf
loope
fwait
dec
mov
or
inc
and
fcoml
in
xchg
sub
jmp
dec
and
lods
out
call
mov
adc
mov
push
rcr
shll
dec
loopne
movsb
sub
xorb
cmp
cltd
sahf
cmp
xor
andl
jecxz
call
push
aas
xlat
dec
ja
push
ljmp
add
jo
lret
orb
add
inc
mov
xchg
into
jbe
inc
sub
pop
pop
push
popa
movsl
mov
push
or
popf
inc
jge
subb
fists
push
pop
add
int3
rorl
inc
iret
shr
cmc
cmc
cs
loop
mov
mov
fs
xchg
pop
outsb
or
popa
popf
scas
xchg
mov
repnz
mov
mov
aad
dec
cli
adc
adc
gs
add
xchg
jl
sub
sbb
test
pop
popf
repnz
flds
repz
call
loopne
imul
sbb
push
mov
shll
lds
sti
jnp
push
icebp
in
pusha
xchg
stc
adcl
cs
dec
cmp
or
mov
hlt
hlt
aas
scas
inc
ficoml
push
mov
pusha
lahf
vmovdqu
mov
lods
repnz
pop
jbe
data16
cltd
popf
fildl
das
fnstcw
arpl
push
jmp
je
sub
insl
ss
xor
dec
mov
mov
js
lcall
fs
mov
insb
xor
incb
inc
ljmp
add
and
mov
or
xchg
mov
mov
xchg
pop
inc
xchg
jbe
movsb
les
jnp
inc
in
jg
push
clc
xlat
mul
sub
push
mov
xchg
push
lahf
ret
ficomps
push
add
jae
sub
jecxz
imul
push
loopne
es
mov
ja
add
les
fwait
push
dec
mov
mov
popf
not
cmpsl
stos
sbb
push
push
xchg
add
mov
enter
dec
jg
xchg
cmp
addr16
js
or
addl
rolb
add
insb
sahf
mov
pop
negb
lahf
loope
mov
icebp
fstpl
dec
pop
dec
mov
mov
aaa
shrb
mov
stos
jecxz
cmc
sti
ja
outsb
in
sub
cmp
cs
stos
xchg
inc
adc
adc
push
xor
movsb
popa
inc
jnp
mov
psadbw
out
inc
mov
test
das
push
js
xor
out
sahf
cmpb
mov
push
cli
mov
js
or
or
add
xor
push
lock
dec
sub
xlat
in
fstp
pop
pop
rolb
clc
in
roll
lods
add
dec
xchg
bound
sub
loopne
movsl
dec
nop
xchg
push
or
mov
out
add
inc
imul
icebp
mov
mov
enter
adc
jns
test
repz
daa
xor
or
cwtl
xor
dec
std
mov
and
adc
mov
mulb
xor
ds
mov
add
imul
loop
cwtl
aad
sub
stos
stos
movsb
test
xlat
cmp
int3
mov
fwait
cmp
ja
sti
movsbl
sahf
xchg
orl
lcall
into
mov
test
int
inc
lahf
mov
mov
or
popa
mov
insb
fisubrs
or
xor
jle
jle
xor
adc
pop
sub
cwtl
mov
jb
das
aas
adc
mov
pop
pop
or
mov
jl
and
xor
jno
sub
add
frstor
add
mov
aam
jbe
cmc
xor
xlat
cmc
mov
movsl
sbb
shl
add
icebp
addr16
jnp
xorl
insl
idiv
data16
arpl
push
cvtpi2ps
movsb
sub
dec
mov
sarb
or
xorb
push
adc
addr16
das
dec
outsb
je
or
jge
lcall
xchg
jnp
adc
jbe
call
cs
jno
mov
dec
jno
jge
sub
fidivs
jae
pop
and
xlat
fs
adc
out
int3
sbb
mov
outsl
pop
in
notb
inc
inc
jmp
test
mov
movsl
lods
ja
or
cmpsl
cwtl
scas
and
and
jns
mov
popa
mov
xchg
repz
xchg
je
lret
mov
popf
mov
push
das
stos
je
out
cmp
jns
inc
cld
lahf
ja
push
cltd
xlat
push
xchg
shlb
jns
adc
cmp
push
sahf
jns
stos
xor
adc
loopne
push
nop
push
shll
and
or
fsubrs
adc
repz
test
mov
sbb
cmc
pushf
xchg
shrb
dec
xor
push
outsb
or
aad
out
xchg
in
mov
repz
repz
lds
ja
adc
xor
or
xchg
fs
xchg
jmp
lahf
shll
movsl
cmp
pop
cmp
sarb
stos
cmp
arpl
fcompl
jne
mov
pop
in
int3
push
cli
test
xchg
iret
jo
sarb
jnp
dec
pushf
push
ret
jae
pusha
xchg
loop
in
inc
mov
hlt
dec
lods
out
dec
jae
out
test
mov
xor
dec
ret
or
xor
mov
xor
mov
mov
add
xor
sub
mov
mov
mov
mov
mov
sub
mov
imul
mov
or
sub
mov
jmp
out
aad
aad
aad
adc
mov
pinsrw
bswap
inc
sub
xor
jno
fstps
xchg
out
dec
xchg
jg
or
out
jmp
scas
repnz
add
mov
mov
nop
cmpb
push
inc
ret
inc
popa
sbb
icebp
inc
es
bound
sbb
aam
or
xor
mov
sub
repz
addr16
clc
leave
div
jno
sarl
dec
pop
mov
xchg
stos
pop
mov
mov
dec
dec
imul
sub
ret
mov
xor
jns
jle
repnz
adcb
adc
scas
push
ja
es
imul
or
pop
int
insl
pop
inc
in
xor
ds
fcoml
xor
out
das
insl
or
mov
dec
ds
jmp
inc
ljmp
jno
pusha
xchg
dec
cmp
add
add
mov
sub
ret
inc
push
dec
add
orb
dec
leave
scas
jb
sarl
cli
insl
dec
cltd
add
gs
or
mov
push
shl
test
xchg
insl
cmp
and
scas
rolb
outsb
jb
sub
cmc
popf
xchg
mov
les
mov
icebp
int3
cwtl
pop
cmp
add
jle
sbb
mulb
fidivrl
in
cwtl
imull
mov
lcall
push
sbb
pop
mov
xor
js
sbbl
jecxz
mov
dec
repz
pop
aas
daa
in
cmpsl
mov
mov
testb
into
xor
fcmovne
cmpsl
ficoml
mov
xor
cmp
mov
mov
adc
mov
movsb
adc
cmc
or
or
fnsave
mov
in
sub
mov
mov
lds
jbe
or
sarl
push
add
je
xor
pop
cmpsb
ds
push
negl
pop
xchg
sub
repnz
sti
popf
addr16
xor
sub
pop
sbb
jnp
test
fimuls
rclb
sub
sub
inc
push
mov
das
movsl
les
int
lock
pop
xchg
mov
cltd
insl
xchg
mov
or
cld
mov
scas
xor
xor
dec
pop
push
dec
xchg
adc
adc
fdivrl
sub
push
rcll
xchg
xchg
inc
jmp
ret
enter
cmp
lea
ljmp
loopne
clc
sub
ret
cmp
ss
dec
cmp
xor
inc
fsubs
dec
dec
add
inc
rcr
mov
int3
mov
ss
mov
sub
mov
lcall
push
insl
jecxz
daa
movsb
in
mov
add
les
mov
dec
in
mov
jmp
ss
enter
sarl
mov
iret
rcr
lods
aas
add
das
movsb
sti
out
push
xchg
in
vzeroall
xchg
aad
jno
ja
lret
sbb
fs
sbb
jnp
data16
mov
subl
jp
nop
adcb
mov
loope
lcall
int
ljmp
dec
lock
das
je
fwait
lods
scas
out
or
cwtl
xchg
mov
loop
movsl
push
or
mov
adc
cmpsl
xor
ja
cs
test
cmp
cwtl
or
clc
ret
xorb
xchg
out
jno
push
mov
and
lods
cli
pop
jl
imulw
mov
fs
xor
in
or
xchg
sub
dec
ret
test
out
int
jae
scas
cmp
jb
pop
cwtl
inc
daa
mov
mov
fwait
mov
shlb
lahf
dec
cli
es
iret
jecxz
pop
aas
mov
fisubrs
aas
jp
dec
lcall
into
mov
sbb
repnz
push
dec
sbb
or
lcall
in
mull
jno
test
cmp
fdivrs
ja
or
adcl
add
jns
scas
stos
add
movsb
imul
mov
jp
xchg
add
aad
push
test
daa
and
mov
and
in
test
cld
pop
outsb
jae
addr16
std
xchg
scas
aas
inc
dec
mov
in
das
xor
sti
jae
cmp
and
les
xor
jnp
cmp
std
mov
xor
lcall
nop
shll
stos
out
xchg
sar
push
insb
cmp
pop
push
mov
mov
shlb
ja
mov
and
push
mov
insb
js
sub
je
jg
or
jl
outsl
sub
fs
iret
mov
imul
aad
xlat
push
sbb
test
je
cmp
jmp
ret
adc
lock
dec
shlb
pop
faddl
testb
mov
mov
arpl
test
in
sub
or
shl
sub
cmp
out
cld
push
in
or
mov
shll
fnstsw
and
mov
or
xchg
pop
cmp
lods
bound
into
jg
int
cmp
aaa
sbb
pusha
push
or
or
test
orl
push
pushf
sti
pop
inc
mov
lock
and
inc
and
ja
sbb
arpl
lds
sub
cmc
fmuls
or
pusha
test
and
pusha
jae
push
mov
xchg
or
out
loope
mov
call
out
sbb
push
orb
push
sub
dec
xor
add
mov
xor
mov
sub
add
cmp
jbe
xor
inc
mov
mov
movl
movl
movl
movl
movl
movl
mov
mov
add
xor
xor
div
mov
xor
mov
mov
div
mov
xor
div
mov
sub
mov
and
imul
and
xor
cmp
je
push
movl
movl
movl
movl
movl
mov
mov
imul
xor
add
mov
and
sub
mov
mov
add
xor
mov
mov
and
sub
mov
mov
mov
mov
mov
xor
or
imul
or
mov
imul
xor
mov
div
add
mov
and
imul
and
xor
cmp
jne
pop
pop
pop
leave
ret
mov
mov
ret
mov
mov
ret
mov
mov
ret
push
mov
sub
push
push
push
movl
movl
jmp
imull
xchg
xchg
aam
add
cmp
add
pop
ja
jne
mov
test
inc
inc
jnp
adc
jnp
out
sub
mov
mov
mov
lret
not
ds
jb
cmpsl
jg
in
andb
fucomi
jmp
stos
mov
sahf
lds
mov
jp
das
inc
clc
xor
jecxz
cmp
scas
mov
sub
cli
jecxz
test
dec
cmp
xor
ss
ljmp
adc
imul
or
hlt
popf
mov
sub
in
in
pop
repz
lods
sbb
push
and
mov
and
jns
and
pop
mov
jge
push
nop
inc
jne
lret
cmp
clc
call
loope
mov
xchg
loopne
repnz
or
in
push
aaa
hlt
mov
mov
ss
pop
push
inc
push
mov
inc
ret
jge
mov
add
pop
out
mov
movsl
mov
ds
xor
xchg
mov
das
pusha
pop
insb
popf
in
push
nop
insl
filds
scas
ret
pop
pop
cmovl
movl
nop
inc
mov
lea
sub
pop
jns
scas
pop
test
lea
popf
sbb
xor
lcall
add
lods
shrl
push
pop
mov
mov
out
pop
test
mov
push
sub
fisubs
fs
sbb
adc
inc
jae
inc
push
in
shlb
add
out
popa
mov
cmp
or
jne
in
in
mov
movsb
xchg
add
mov
xlat
insb
je
fcmovnu
push
fisubrs
int
sbb
cmp
dec
das
push
cmp
hlt
mov
jno
in
pusha
loope
or
mov
dec
testb
hlt
rol
xchg
jg
pop
arpl
push
mov
dec
mov
pop
das
sbb
bts
adc
scas
dec
add
pop
mov
stc
ss
mov
movsl
cmp
pusha
pop
in
out
pop
mov
dec
pop
adc
outsl
popa
xlat
add
call
aas
inc
cs
xor
dec
mov
fiaddl
mov
dec
adc
push
js
push
pop
adc
dec
imul
xor
mov
mov
jl
dec
jo
cwtl
idivl
mov
jmp
pusha
pop
cmp
ja
enter
mov
sbb
fcomps
aad
adc
cwtl
vpmacsswd
xor
xchg
ja
rorl
loopne
movsl
decl
inc
xchg
xchg
pop
dec
adc
or
jp
out
aam
icebp
mov
sbb
sub
jo
jle
push
aas
pop
in
hlt
mov
mov
sbb
sub
movsb
mov
clc
dec
mov
push
cmp
mov
inc
loope
xor
loop
add
out
testb
clc
ja
and
push
adc
mulb
fwait
ja
enter
mov
jo
add
cmpsb
loopne
sub
mov
into
fs
push
std
jmp
inc
add
sbb
lea
push
sarb
stc
lds
add
lret
lret
in
cmpsl
sub
mov
adc
fdivs
out
incb
clc
stos
xor
orl
push
or
in
pop
mov
out
mov
aas
mov
mov
add
das
inc
iret
mov
and
xor
push
cmp
nop
stc
mov
addb
pop
add
lock
inc
xor
mov
leave
addr16
xchg
and
mov
mov
repz
ja
mov
dec
mov
sbb
cmp
inc
dec
inc
pop
out
pusha
cli
sti
adc
in
fs
and
cmpsl
push
loope
push
int
sub
inc
ret
or
test
inc
push
push
cmp
ljmp
and
pop
pop
inc
xor
cmp
mov
scas
jns
outsb
dec
dec
fs
xchg
movsl
stos
pop
arpl
adc
mov
cmp
aas
add
push
andl
jp
or
loop
jle
dec
xchg
add
scas
cmpsl
cmp
movsb
jle
xor
cmp
stos
xor
ficompl
mov
sub
add
test
shll
std
bound
cmp
cmp
mov
ds
notl
test
adc
out
push
ret
xor
mov
mov
sbb
in
aam
xor
mov
fldln2
cmp
ljmp
sar
xchg
pop
dec
jno
cmc
mov
dec
mov
xchg
push
fdivr
mov
leave
aam
out
and
addr16
xchg
cltd
pushf
jns
jmp
push
loop
push
cli
cmp
repz
addl
ss
lods
push
mov
test
mov
icebp
sahf
push
test
and
movsb
dec
sub
xlat
jle
ljmp
jle
cmp
or
sbb
clc
addl
outsl
mov
jmp
mov
hlt
dec
bound
adc
mov
mov
push
test
jns
cwtl
cwtl
or
scas
stos
les
cmp
out
mov
in
lds
loope
and
add
mov
xor
jl
cmp
mov
cmc
dec
gs
dec
and
shlb
xor
test
add
or
std
movsl
dec
cwtl
mov
rol
dec
inc
addr16
cltd
lods
bound
hlt
loopne
xor
out
cmpsl
pop
push
dec
andb
jno
and
inc
insl
xchg
or
push
in
loope
jmp
lods
pop
inc
lods
dec
cli
imul
xchg
cmp
insl
inc
lret
sbbb
mov
stos
call
cmpsb
cmp
fstp
add
insl
fdivr
movsl
push
push
jo
outsb
leave
sub
mov
and
out
stc
xchg
lret
cmpl
dec
jle
lea
inc
loope
ret
ror
push
sti
fimuls
cmp
pop
icebp
adc
cmp
xchg
mov
ret
data16
dec
js
pop
lock
adcl
mov
or
jmp
and
lods
hlt
sbb
enter
add
loop
shll
jge
ret
movsb
xchg
dec
ficoml
aad
int
adc
bound
add
call
sub
loop
xchg
push
dec
subl
dec
cwtl
sbb
add
lahf
adc
in
je
ja
rcrb
pop
sub
daa
mov
jmp
stos
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
jmp
pop
fdivl
jo
push
push
mov
and
add
into
in
xchg
dec
xchg
aaa
sti
orl
adc
cli
out
into
sbb
bound
mov
out
mov
in
push
loopne
pop
stos
sub
pop
insb
imul
jo
pop
in
xchg
ja
movsb
pop
push
loopne
gs
repz
add
fcoml
push
pushf
mov
mov
pop
popa
ss
sti
xchg
std
adc
loopne
inc
cwtl
adc
das
xchg
or
or
xchg
cwtl
ljmp
jne
add
into
fwait
mov
push
xchg
ret
stc
psubusw
sub
and
jmp
rcrl
sbb
pop
dec
pop
mov
or
ljmp
pop
dec
add
dec
jmp
clc
outsb
notl
mov
or
push
popf
mov
push
mov
push
jbe
push
stos
xor
jnp
mov
leave
and
sahf
push
js
shlb
dec
sbb
std
adc
or
jl
leave
lods
dec
loope
xor
xchg
fwait
lcall
sub
add
outsl
ret
sbb
imulb
sbb
jge
rolb
push
mov
test
cmpsb
call
mov
push
sbbl
leave
mov
dec
testb
xchg
and
cmp
mov
in
pushf
out
mov
lahf
push
mov
push
push
sub
sbb
mov
ds
jp
dec
mov
lret
jg
or
cmpsl
push
push
adc
fidivrl
cmpsb
xchg
das
or
popa
pop
out
push
shrb
lods
clc
cmp
sbb
addr16
cli
cs
pop
mov
loope
mov
mov
dec
in
cmpb
orl
mov
test
mov
xor
flds
mov
jp
je
cmp
shl
loopne
addr16
adc
pop
or
xchg
or
cwtl
adc
or
scas
adc
adc
popf
jo
cmpsb
loop
dec
inc
or
shrl
test
pop
clc
movsb
fistpll
cld
ss
sub
or
mov
and
sbbb
xor
inc
mov
and
inc
xor
jge
xchg
cltd
stc
ss
xor
icebp
ljmp
sbb
lock
mov
mov
mov
cmc
cmpsl
outsl
mov
inc
out
jnp
mov
or
loope
loopne
repnz
pop
jge
cmp
frstor
mov
pop
aad
xor
enter
cmp
jns
outsb
ja
mov
and
pop
aam
mov
pop
fwait
pop
loop
add
dec
mov
xor
pop
in
call
cli
pop
jmp
cld
flds
into
adc
test
je
pop
pop
xor
pop
loop
movsb
mov
jecxz
cld
mov
adc
fiaddl
xor
jbe
movsl
mov
adc
add
fadds
decl
mov
data16
dec
xchg
add
loopne
pop
cli
scas
mov
popf
and
or
aaa
lea
fistpl
scas
cli
add
jno
lret
xchg
add
fnstcw
wbinvd
lret
pop
add
arpl
jnp
ret
aas
push
dec
jmp
ss
bound
xlat
pop
mov
std
aaa
ret
cmpl
mov
sti
mov
xchg
int
sub
jb
pop
jle
mov
imul
xor
out
jl
icebp
arpl
loope
cmc
fucomp
adc
jg
ss
stos
scas
xor
mov
push
into
add
push
dec
mov
out
push
dec
je
dec
xor
mov
cmp
pop
push
mov
adcb
mov
xor
popa
adc
incb
cmp
sub
dec
inc
dec
loope
jge
jb
or
punpckldq
call
int
movsl
pcmpgtb
js
xor
jno
adc
cmpsl
fsubr
jg
stos
outsl
pop
xchg
dec
movsb
scas
mov
mov
jmp
lds
fsubs
xor
fistpl
lods
aam
stc
mov
popf
aas
add
adcb
cmp
daa
add
addr16
mov
inc
addl
cmpsb
push
stos
lds
fwait
cmpsl
mov
fs
shl
das
iret
push
adc
dec
ret
je
inc
jns
sahf
lret
shlb
insb
push
xor
jl
sbb
mov
imul
int
mov
jmp
lahf
mov
xor
push
lods
mov
sub
push
inc
mov
enter
js
pop
and
mov
adc
mov
inc
subl
xor
jp
cld
ficompl
shlb
outsb
push
jnp
icebp
push
mov
adc
shrl
xchg
imul
mov
ret
jb
fdivrp
call
inc
cs
mov
inc
nop
sub
aad
cmc
sbbb
mov
pop
sub
pushf
sbb
dec
sub
pusha
test
loopne
pusha
stos
outsl
or
in
xchg
icebp
adc
xor
sub
cltd
xor
in
xchg
leave
les
out
mov
sahf
pushf
jle
in
mov
fs
inc
mov
mov
sahf
cmp
push
sahf
int3
shlb
call
pop
data16
xchg
out
fidivrs
or
jl
mov
push
lret
test
xchg
sbb
fmull
outsb
cmp
pusha
dec
mov
jg
xchg
inc
xchg
lods
icebp
movsb
icebp
and
aas
aaa
jno
dec
cmp
jno
xchg
pop
stc
enter
or
push
push
xlat
imul
jecxz
mov
cmp
xchg
xor
pop
jmp
rorb
call
inc
add
fstpl
adc
mov
out
nop
mov
ret
adc
cli
insb
nop
sbb
jnp
daa
mov
pop
arpl
pop
jp
dec
push
fiadds
and
sahf
sub
xor
and
aad
dec
cmp
sub
sbb
xor
pop
pushl
mov
pushl
test
push
mov
data16
mov
sub
es
cmpsl
fwait
call
repnz
in
call
lea
mov
lret
faddl
lods
xchg
adc
mov
inc
es
and
push
adc
jae
jno
inc
jecxz
sbb
ss
in
outsb
hlt
xor
xchg
insb
sbb
mov
or
cs
mov
cmp
xlat
test
inc
stos
insl
lock
inc
ja
mov
enter
orl
adc
xor
inc
cmp
scas
mov
sub
cmpsb
pop
or
inc
add
mov
mov
mov
mov
push
add
push
adc
jmp
lcall
xor
dec
jnp
xchg
add
roll
test
pop
xchg
and
dec
icebp
mov
cmpsl
mov
imul
ficomps
enter
inc
adc
test
aam
sbb
mov
dec
jl
cmp
inc
int
mov
les
data16
js
pop
jl
mov
lods
lcall
orb
je
push
or
cmp
sub
aas
idivb
jmp
fwait
jmp
or
mov
outsl
jg
in
pop
lret
jecxz
in
test
loope
repz
cmp
sub
jno
mov
sbb
dec
hlt
dec
lock
ss
aad
sbb
mov
sub
pop
fdivrl
mov
and
jp
ljmp
icebp
ss
sbb
nop
jecxz
push
xor
ret
push
pushf
mov
adc
xor
in
mov
push
je
jae
xchg
sbb
add
dec
cmpsb
pushf
jno
pop
scas
push
lret
or
addb
mov
repz
cmc
dec
xlat
notb
hlt
call
jne
arpl
lcall
adc
cmp
jns
dec
mov
popf
adcb
outsl
or
je
add
sbb
jge
xchg
outsb
loope
pop
mov
push
popl
cmpb
aad
or
mov
push
jg
adc
es
pop
cmp
out
and
or
push
mov
cmc
xor
xchg
lea
add
push
dec
cmp
lcall
inc
rcrb
out
loope
shll
mov
push
or
and
adc
mov
fwait
lret
adc
sbb
mov
mov
pop
out
and
xchg
pop
aam
repnz
adc
gs
add
outsb
sbb
dec
dec
call
push
dec
sub
jne
fiaddl
adc
leave
sarb
pop
pop
dec
movsb
or
or
pushf
filds
mov
into
sbb
sub
ret
popf
xchg
andl
daa
out
pop
sbb
aam
mov
mov
test
jl
sub
aad
push
mov
popf
or
mov
inc
scas
cmp
push
sbb
pusha
aas
inc
mov
xchg
lret
imul
push
not
pop
outsl
les
mov
mov
aas
pop
add
rol
cmp
jns
dec
lods
shr
add
rorl
test
scas
or
mov
mov
mov
inc
decb
pop
rorb
inc
jl
xor
xchg
xchg
mov
xchg
and
jmp
cmp
sbb
push
pop
sbb
or
push
movsl
and
mov
cmp
pop
std
or
mov
jecxz
mov
add
in
out
sbb
int3
mov
imul
mov
xchg
dec
test
dec
pop
lret
mov
fildll
mov
push
lret
lahf
dec
mov
in
gs
mov
add
pop
push
mov
mov
cmp
int3
cmp
jb
dec
aam
cwtl
mov
mov
inc
dec
push
sub
and
mov
shlb
sbb
ljmp
fwait
adc
movsl
loope
adc
dec
xor
adcl
pop
sbb
sbb
adc
cmpsl
movsb
loop
daa
jmp
in
mov
stos
or
or
dec
jl
xor
lret
daa
std
ret
inc
mov
or
in
aaa
sarl
add
fsubs
fisttps
cmc
std
shr
mov
in
add
mull
ss
xlat
xor
cwtl
and
iret
fwait
test
cmp
fimuls
mov
jo
ja
in
in
pop
mov
inc
pop
iret
pop
push
xor
sub
jne
jbe
mov
dec
adc
andb
jns
lods
and
pop
mov
outsb
lret
and
jmp
jo
hlt
stc
xlat
jb
add
pop
imul
shlb
pop
mov
pop
or
inc
fistps
aad
push
or
lods
dec
cmpsb
movsl
aad
mov
dec
out
pop
sub
insb
mov
nop
mov
add
gs
jg
in
and
jle
xor
push
pop
int3
js
imul
fcmovbe
je
or
nop
icebp
insl
jl
mov
cmp
mov
xor
aad
es
push
add
cmc
pushf
cmpsl
adc
test
stos
fisubrl
stc
mov
mov
std
cmp
jae
mov
dec
lea
movsb
lea
testl
dec
aad
mov
roll
add
push
lret
mov
in
mov
fwait
mov
sub
cmpsb
testb
jae
cmp
xchg
stos
out
or
mov
adc
add
aas
mov
loop
mov
imul
jno
out
js
pop
movsl
push
pop
mov
xchg
in
dec
into
or
movsb
xchg
lods
xor
xlat
cmp
cmp
xchg
push
repz
mov
imul
outsl
stos
add
outsl
xchg
jno
ljmp
test
mov
mov
cmp
push
and
rorl
adc
aaa
aas
lds
ljmp
int3
and
cmp
stos
jp
adc
and
pop
jne
xor
xchg
lret
mov
outsl
stos
or
inc
mov
stos
inc
aam
xor
push
cmp
movsl
pusha
negb
sbb
loopne
rcrl
sbb
clc
movsl
and
cld
pop
add
mov
sbb
cmc
test
in
xchg
jp
mov
lcall
pop
mov
and
cmp
push
sub
idiv
shll
loope
int
mov
outsl
aaa
adc
lods
out
add
jbe
pop
stos
insb
xlat
fistl
push
adc
add
out
cli
lret
cld
pop
lods
dec
jp,pt
mov
sub
cwtl
gs
fdivl
shl
sbb
fcoms
jno
cmp
out
clc
mov
enter
and
dec
call
push
mov
pop
int
fwait
sub
lret
adc
and
out
cwtl
nop
bound
inc
int
iret
lock
repz
pop
movb
push
push
call
mov
mov
sub
mov
jmp
mov
and
cwtl
sub
inc
test
xor
push
add
mov
mov
es
jns
das
jno
dec
jmp
loopne
xchg
add
lods
decb
xchg
in
enter
pusha
pop
imul
add
fwait
mov
jg
cld
xchg
and
icebp
clc
aas
mulb
into
rcr
mov
xor
jmp
int3
lcall
and
aaa
int3
pushf
add
add
loop
push
pop
mov
push
iret
loop
add
sbbl
cmp
adc
jns
jns
cld
out
notl
loopne
adc
xor
scas
aas
and
scas
fildll
rorb
sub
jae
jo
rcrl
testl
add
shll
inc
lret
out
sub
jp
cmp
jb
mov
lahf
test
daa
in
mov
pop
nop
fisubrl
add
mov
or
cmpsl
and
bound
dec
dec
add
push
jle
or
icebp
push
in
movsb
clc
or
andl
dec
out
in
addl
mov
call
xchg
andb
int3
adc
push
imul
mov
loop
mov
mov
cwtl
aad
daa
mov
fisttps
xchg
sbb
mov
jl
shrl
xchg
inc
jecxz
xchg
js
adc
insb
std
push
sub
lret
cld
imul
or
daa
mov
pop
repz
notl
hlt
repz
jl
fldcw
std
mov
and
pop
daa
mov
pushf
imul
je
push
sbb
test
mov
sbb
out
call
repz
push
jb
or
dec
sahf
dec
es
jg
loop
inc
aad
rolb
pusha
test
xor
fsubrl
mull
lods
xchg
in
mov
and
hlt
jb
cmp
cmpsl
push
pusha
out
xor
repz
xchg
lock
out
das
scas
mov
lret
add
movsl
inc
xor
scas
lock
inc
push
fdivr
jl
int3
mov
jae
mov
jmp
loope
shll
mov
rorl
or
pop
pop
and
mov
outsl
int
pushf
xor
or
push
push
cmpsl
dec
sub
jb
and
add
jnp
lcall
dec
mov
dec
gs
imul
mov
xor
stc
add
add
xchg
push
xlat
sarb
sub
push
and
int
inc
xchg
arpl
add
imul
dec
inc
push
bound
enter
sub
enter
outsl
pmulhuw
insl
sub
cwtl
sub
push
mov
xor
add
dec
popa
ret
pop
imul
cmp
out
push
pop
jl
adc
push
imul
dec
es
adc
in
cmpsl
out
ds
push
mov
lock
sti
jo
je,pn
lcall
fcompl
xchg
ffreep
mov
in
pop
jne
imul
mov
rolb
add
sti
shlb
inc
jecxz
jbe
push
jbe
xor
mov
jo
fldt
leave
pop
leave
clc
pop
pop
dec
or
cmc
add
push
mov
insl
fldl
shlb
mov
hlt
daa
or
jecxz
add
call
fucomp
lahf
cltd
out
movsl
insb
jecxz
lock
in
pop
lock
scas
pushl
mov
fwait
xor
ds
mov
xchg
push
jo
pushf
or
cmp
xor
addr16
adc
xchg
pop
or
jle
lods
int
je,pt
mov
call
fisttpll
jmp
dec
fbld
dec
lret
mov
jmp
in
subb
xorb
sbb
xchg
sub
jg
gs
xor
push
push
inc
clc
bound
jne
repz
outsb
roll
inc
lock
xchg
fistps
jbe
out
mov
sbb
aas
mov
in
inc
dec
neg
push
call
lcall
jg
cmpsl
xorl
out
cmp
inc
ja
cmp
jmp
mov
pusha
jne
hlt
cli
dec
sbb
popf
add
or
cmp
mov
fsub
dec
jge
xor
nop
or
jo
mov
stos
adc
lds
clc
mov
ret
push
lret
stos
in
ret
pop
adc
ljmp
lcall
add
dec
and
sbb
pop
test
xchg
adc
jg
icebp
push
cs
inc
loopne
pop
adc
cmpsl
or
outsl
sub
mov
and
aas
add
xor
fnstenv
retw
jnp
arpl
lea
andl
push
out
xor
dec
push
cmp
push
aaa
xchg
dec
fisttpll
daa
roll
xor
mov
jno
add
xor
clc
xlat
dec
jmp
add
sub
pop
addb
jge
ds
add
test
or
pop
pusha
fwait
in
repz
xor
jns
insl
movsl
mov
sbb
jo
push
mov
icebp
sbb
push
mov
in
xchg
in
mov
scas
xchg
cli
jge
push
push
lods
or
sub
mov
fldenv
imul
jg
mov
hlt
test
hlt
push
cmp
outsb
ds
out
pusha
inc
sub
mov
out
fistpll
in
ljmp
loope
pop
mov
pop
clc
xchg
or
mov
lods
jle
fucomip
mov
insl
jno
aad
subb
idiv
sub
fiadds
testb
fs
push
dec
mov
and
xchg
std
negb
sbb
loope
call
xchg
fcom
mov
hlt
cmp
dec
adc
push
jae
out
sti
imul
stos
cmp
hlt
in
idivb
gs
mov
insl
adc
popf
outsb
js
test
sbb
imulb
test
dec
sub
psubd
adc
xlat
clc
mov
mov
imul
jae
or
mov
hlt
cmp
fdivrl
std
pop
aad
xchg
addr16
jno
ficomps
fstps
clc
mov
mov
je
shrb
loopne
jmp
cmpb
adc
jnp
and
cs
dec
xor
mov
testl
in
cwtl
ss
jne
ljmp
jp
lods
dec
mov
dec
mov
sub
ljmp
push
lock
mov
push
push
push
push
call
add
adc
shld
shl
mov
mov
mov
mov
mov
mov
push
add
push
adc
push
push
call
mov
mov
sub
mov
sbb
mov
push
jmp
lcall
or
je
js
push
add
sbb
inc
mov
pusha
jg
sbb
test
or
leave
sbb
pop
mov
push
ret
add
inc
pusha
fwait
xchg
jl
in
jle
fsubr
rorb
stc
jno
mov
push
in
dec
push
mov
xchg
jno
sti
mov
icebp
pop
xchg
clc
ljmp
mov
ret
popf
mov
sub
mov
inc
loop
out
fdivrs
inc
adc
fsubs
jp
iret
cmp
adc
dec
clc
fwait
es
and
cmp
stos
sub
jnp
jb
xchg
cmp
fmull
insl
adc
push
mov
mov
popa
pop
lds
shlb
iret
ds
imull
inc
mov
fdiv
js
cmp
int
pop
jge
cmp
out
xor
or
repnz
jns
repz
dec
cmpsb
sub
push
add
fwait
jecxz
call
xor
pop
aaa
scas
outsl
and
push
inc
cmp
cmp
pop
xlat
xchg
adc
sbb
insl
xor
cmp
das
sub
pop
das
lcall
jbe
or
pop
add
fsubrs
push
in
clc
insb
cmp
mov
daa
out
inc
fstl
sarl
out
mov
test
fcmovb
lret
ds
popf
mov
dec
fsts
mov
pop
dec
push
vaddsubps
mov
pop
xor
dec
lahf
sti
xorl
ror
xchg
and
aad
mov
mov
pop
pop
jo
jns
and
out
imul
test
popl
sbb
pop
lcall
pop
push
stos
lretw
fnstenv
bound
and
popa
dec
pusha
adc
aas
pop
mov
xor
popf
aad
adc
test
cmp
stos
leave
ret
cli
jns
sub
or
mov
popa
pop
adc
les
add
in
sub
ret
pushf
push
push
in
mov
jns
pop
mov
outsb
jg
idiv
sub
dec
pop
push
je
pop
pop
js
rolb
sub
movsl
ljmp
daa
es
mov
cld
loope
js
sbb
subb
jb
add
clc
int
sahf
jnp
stos
dec
mov
jb
mov
daa
cld
out
cltd
jp
push
cmp
fimuls
out
scas
into
insl
pop
xor
and
nop
push
ljmp
mov
push
imul
cmpsb
clc
pop
fmuls
adc
and
cmp
pop
push
push
jnp
mov
cmp
mov
loope
inc
cmp
shlb
push
mov
aad
ds
divl
dec
popa
sub
cmp
outsb
rolb
push
test
jmp
mov
out
lea
pop
rorb
ffree
dec
popf
popf
mov
fildll
adc
push
dec
lret
or
mov
arpl
push
push
dec
jecxz
fdivrs
jo
test
and
scas
pop
adc
pop
add
add
sub
cltd
jns
mov
inc
mov
adc
add
mov
cli
popf
mov
loope
fs
mov
lret
push
mov
shl
enter
inc
pushl
imul
or
xchg
rolb
push
and
add
mov
sub
pop
xchg
xor
adc
pop
or
pop
push
cli
in
adc
jne
fnclex
push
jno
sbb
xchg
clc
mov
mov
pop
dec
or
aam
add
sbb
push
scas
aam
jp
sarl
pusha
push
mov
sbb
dec
or
cmp
fsubrl
pop
xor
and
mov
push
ret
or
inc
loope
jns
mov
sbb
aad
dec
stos
lret
sub
jge
and
cmp
shll
mov
aam
cmp
mov
rolb
sbb
cltd
adcl
subb
xor
xchg
sbb
xchg
mov
cmp
rcll
inc
inc
mov
js
mov
lock
ljmp
push
ret
aam
stos
out
jnp
mov
and
bound
push
inc
ljmp
aaa
fiadds
in
pop
cmpsb
aam
sti
pop
adc
jb
sub
outsl
pop
stos
stos
aas
jp
sbb
xor
add
add
loopne
jnp
movsb
fsts
in
cltd
enter
je
push
cmpb
mov
or
sahf
jo
shl
test
push
adc
cwtl
andl
outsb
mov
inc
das
scas
sbb
xchg
jg
jno
and
insb
and
sub
fistps
mov
xchg
xlat
and
push
ja
cmpsl
aas
dec
xor
std
mov
leave
xchg
leave
int3
cmp
pop
cmpb
push
rcrl
aas
shl
repz
fwait
inc
addr16
xchg
je
mov
xchg
inc
dec
push
scas
mov
sub
sbb
cli
and
sbb
adc
pusha
sti
push
xor
aas
inc
xchg
leave
test
daa
mov
arpl
sub
xor
and
adc
out
sub
sub
xchg
test
push
sub
ja
lock
daa
loop
decl
jno
cmpsl
push
jmp
test
call
pop
in
adc
mov
into
pop
push
mov
mov
add
popa
jnp
dec
push
je
addr16
in
push
jmp
sbb
sarb
test
sub
xchg
aad
pop
adc
and
repnz
mov
inc
cltd
out
or
sub
in
jp
in
jg
xchg
sub
push
xor
mov
mov
pop
inc
push
pusha
repnz
adc
imul
aam
add
adc
lret
sub
jb
stc
inc
adc
inc
arpl
jmp
inc
cmp
add
popa
ss
xor
ret
or
ret
jne
shl
gs
or
xchg
aam
jns
or
dec
dec
mov
mov
push
addr16
movhps
xor
cltd
mov
jmp
jmp
push
ljmp
das
aaa
int3
push
mov
sbb
test
nop
enter
ss
data16
xor
test
sti
mov
mov
mov
mov
lods
fbstp
movsl
xor
push
aaa
cmp
cmpb
push
mov
inc
push
push
push
call
add
adc
shr
xor
or
or
xor
mov
push
xor
mov
mov
mov
jmp
mov
sbb
popf
or
inc
stos
js
inc
add
insl
lea
pop
aaa
addr16
or
in
mov
insl
out
fadds
in
jnp
ret
dec
dec
and
jae
mov
sbb
lret
jp
daa
mov
sbb
inc
ret
xchg
mov
shr
cld
mov
cmp
jb
xchg
leave
in
inc
das
int
xor
sbbb
jp
pop
fcoml
add
push
inc
push
dec
rol
xchg
push
nop
shl
or
adc
mov
sub
jo
push
mov
lea
mov
sub
int
sbb
leave
fisubrs
xchg
gs
jmp
mov
sbb
ja
sahf
or
or
xchg
dec
int
lret
ljmp
jl
aam
xchg
add
jle
xchg
imul
fsubrs
cmpsl
icebp
cwtl
sahf
dec
and
divl
test
nop
push
mov
call
cs
aaa
push
pop
arpl
and
or
mov
es
push
jle
mov
push
sbb
mov
in
dec
ret
movsl
pop
add
into
lcall
sysexit
ret
sub
push
or
lock
mov
hlt
lret
and
data16
xchg
je
mov
ret
and
cmp
out
xor
sbb
arpl
testl
mov
or
pop
jge
jae
jp
mov
mov
imul
std
lea
and
cmc
lret
mov
enter
or
imul
mov
repnz
sbb
arpl
mov
jge
jns
and
or
push
jecxz
insb
pop
bound
icebp
shr
repnz
pop
clc
and
adc
ficoms
lods
and
and
xchg
jnp
std
aad
sub
sbb
and
jns
sahf
ja
pop
neg
pop
jbe
clc
ljmp
jne
cmc
cmp
shll
mov
xchg
outsb
enter
jbe
mov
hlt
out
repnz
in
pop
std
xchg
xor
aaa
dec
or
imul
sub
push
in
or
aaa
and
test
lret
gs
add
jae
mov
flds
mov
inc
dec
lods
jle
subb
cmpsl
mov
sbb
push
mov
je
stc
push
push
mov
adc
ja
push
push
stos
rorb
dec
insb
in
lds
fldl
ja
ret
fildl
les
xor
repz
jnp
lods
pop
fildl
inc
sub
mov
sub
aad
movmskps
inc
insb
addb
pop
jno
scas
imul
insb
in
das
jns
cmpsb
pushf
loope
fsts
insl
sbb
test
inc
mov
adc
add
xchg
or
in
lret
out
mov
dec
pop
movsl
nop
mov
mov
cmp
cmp
ret
and
xorl
add
in
out
shrl
adc
loopne
sub
aad
stc
xchg
shrl
adc
inc
aam
push
fcmove
pop
push
jge
jns
negb
xchg
jmp
xlat
andb
cmpsb
ljmp
cmp
imul
in
dec
jae
sbb
shl
xchg
and
int
add
mov
push
arpl
sub
scas
jno
add
rcr
xchg
jnp
push
lret
sarl
std
outsb
adc
mov
push
aas
stc
movb
dec
imul
outsb
dec
out
aad
hlt
sub
cmc
cmp
inc
push
push
xor
fisubl
gs
or
mov
inc
jl
shll
ss
sbb
inc
ss
les
xchg
ljmp
and
out
jno
out
imul
adc
push
loopne
and
sbb
pop
addr16
pop
mov
arpl
clc
pop
lock
in
outsl
aaa
jno
outsb
inc
push
data16
lods
lds
les
out
shr
fidivs
daa
cmp
cmp
in
in
cld
jle
push
xchg
xchg
mov
rcl
add
mov
sub
inc
jl
push
pop
outsb
fcom
jbe
cmp
jecxz
stc
pop
pop
test
int3
jmp
sbbl
clc
xor
jl
popa
loope
pop
lea
add
lods
ljmp
dec
ss
andb
fadds
pusha
std
fsts
jp
rorl
aaa
clc
into
ret
mov
cld
std
sub
sbb
dec
mov
mov
adc
lahf
les
or
lret
cmc
xchg
and
mov
loope
lcall
push
or
pop
in
mull
inc
movsl
divb
xchg
nop
mov
les
push
xor
mov
stc
lock
imul
mov
pop
fsubrl
je
pop
lods
popa
mov
or
dec
push
les
pop
cmp
xchg
rcl
sbb
add
sub
fmull
enter
xchg
daa
lds
dec
jge
sub
xchg
adc
hlt
aam
xlat
and
das
mov
popa
jmp
test
adc
jl
jnp
negb
aam
sbb
adc
movsb
push
sub
cmpsb
mov
sub
hlt
mov
rcll
and
mov
lea
in
adc
in
add
or
jbe
adc
loop
inc
fstpt
mov
xchg
cmp
adc
imul
adc
or
pop
iret
inc
push
fldl
std
and
push
push
or
push
mov
lods
jle
jecxz
aad
shl
mov
mov
push
popa
jo
pop
ljmp
movsb
sarl
mov
bound
aad
popa
or
xor
adc
xor
adcb
jle
out
js
cli
negb
and
hlt
in
sbb
xchg
jmp
cmp
and
add
inc
push
mov
sbb
xchg
cs
ret
shll
or
sub
mov
lods
mov
fcomp
ss
ret
std
in
xchg
sbb
mov
arpl
push
lods
xor
push
sbb
add
add
cld
cmp
push
gs
pop
xor
movsb
push
jo
xlat
add
mov
jmp
cwtl
xchg
and
jp
sbb
jns
push
xlat
mov
hlt
lods
ror
mov
cltd
rcll
sub
xchg
mulb
fwait
jno
xor
sub
call
mov
mov
mov
add
mov
adc
mov
and
and
add
mov
adc
add
mov
adc
jmp
mov
xchg
adc
mov
nop
loop
shll
add
imul
stc
mov
or
loopne
addr16
xchg
sub
jp
push
ljmp
push
arpl
adc
orb
gs
movsl
dec
lods
ss
sbbb
sbb
pusha
and
outsl
mov
fdiv
iret
ficoms
ss
mov
sbb
mov
into
mov
sub
fists
ret
and
and
mov
pop
pop
cmpsl
call
sbb
adc
cmpsb
inc
cmpsb
lods
jmp
stos
adc
js
lret
cmpsl
mov
out
popf
hlt
mov
add
ja
cli
loop
dec
sbb
adc
xor
imul
pop
pop
sub
fwait
fwait
mov
shll
ds
push
dec
xchg
shll
iret
out
adc
mov
lods
sbb
fildll
test
and
daa
jmp
and
fdiv
stos
movsb
adc
inc
adc
leave
inc
es
adc
sub
push
xor
fbstp
sub
out
push
sub
addr16
push
xchg
push
jle
mov
xor
mov
or
xor
lock
hlt
das
xchg
mov
inc
xchg
daa
popa
and
jns
cmp
push
popf
fcomp
sbb
and
mov
sahf
push
decb
xchg
stos
call
sub
or
push
mov
mov
pop
bound
mov
shrb
jp
jno
int
mov
jl
adc
push
sbb
clc
add
add
mov
or
mov
in
das
xor
aas
mov
pusha
lock
cmp
or
and
lods
leave
xor
adc
xchg
sbb
dec
jmp
imul
pop
jnp
lock
xor
xchg
mov
mov
das
jno
or
add
fcomp
cmp
cmpb
ret
pop
es
cld
cmpsb
xchg
xor
and
pusha
or
push
inc
in
in
fldenv
js
in
int
xor
mov
push
push
jmp
jno
mov
les
jno
jmp
push
stc
add
jbe
dec
loopne
int3
pop
adc
mov
fwait
xor
pop
ss
cmp
notl
cs
nop
lcall
fdivs
cmc
sahf
and
inc
dec
xor
xchg
sub
nop
jge
pusha
shrl
add
cmp
mov
insb
inc
push
mov
sub
adc
jecxz
mov
mov
scas
fnstcw
dec
pop
cwtl
pop
jae
adcb
fucomip
lods
xchg
subps
xchg
xchg
stos
ja
and
ss
stc
cmp
cwtl
sbb
xchg
push
aam
lods
xchg
out
test
test
rcll
mov
push
jns
mov
repz
mov
imul
mov
mov
divb
les
gs
push
in
fnstcw
or
data16
nop
jecxz
mov
fdivrs
arpl
lods
sbb
mov
inc
stc
xchg
cmp
enter
loope
sub
loop
out
aaa
and
cmpsb
or
stos
push
jns
inc
test
push
pushf
and
push
frstor
jnp
mov
inc
aam
and
cmc
mov
cmc
push
or
mull
movsl
xlat
cmp
aas
sbb
out
out
xlat
xchg
jl
daa
lods
cld
push
movsb
pop
outsb
lret
mov
gs
mov
and
mov
mov
cmc
enter
adcb
stos
mov
sub
mov
scas
push
cmpsb
jnp
inc
xchg
cmp
mov
daa
ret
push
push
pop
jnp
sub
pop
fld
xor
push
iret
add
sbbl
movsb
andps
and
insb
mov
movsl
push
sbb
and
call
sarb
andl
fstpt
xorl
in
js
sti
jbe
ljmp
fmulp
stos
dec
lret
sub
jp
bnd
mov
cmp
and
push
push
push
je
jmp
in
adc
push
in
dec
sti
adc
stos
rcll
cmp
add
add
repz
cmp
loope
and
xor
inc
je
adc
inc
filds
scas
mov
or
push
out
lcall
sub
adc
dec
push
inc
popf
rolb
scas
mov
sbb
sub
xchg
subl
lret
fs
push
cs
xchg
xor
add
scas
mov
mov
fdivl
ja
clc
jo
ds
push
dec
xorb
adc
jae
mov
shl
xor
roll
pop
ja
push
add
mov
pop
mov
xchg
or
inc
xchg
adc
jl
cltd
incb
sti
scas
sbb
push
mov
in
hlt
xor
and
xchg
dec
and
incb
adc
mov
test
in
mov
push
cmp
ret
fs
add
push
pop
mov
xor
sbb
xorb
xrelease
mov
cmpsl
mov
aad
adc
add
dec
xor
mov
or
popf
dec
fs
mov
loope
mov
int3
sbb
sub
leave
and
test
jne
add
sbbb
push
xor
mov
cmp
lods
int3
pop
mov
imul
jb
pop
ljmp
dec
xchg
cmp
xchg
or
clc
mulb
mov
mov
or
int
insl
fnstsw
sbb
cli
or
les
ror
cmp
mov
lods
jmp
xchg
pop
push
data16
jne
push
adc
pop
mov
push
jbe
aam
cmp
in
outsb
jmp
outsl
loop
lret
js
sahf
aaa
popa
repnz
pop
in
sbb
inc
out
gs
adc
mov
mov
gs
or
and
adc
jle
lret
cli
add
cmp
insl
js
sahf
inc
xchg
lcall
add
mov
pop
add
sub
or
addr16
mov
mov
xchg
sbb
cs
loop
mov
and
pop
xlat
test
or
std
fimull
xor
or
jae
sbb
icebp
outsl
scas
lahf
int
or
or
xor
sub
push
and
mov
sbb
add
fmuls
pop
add
push
push
jmp
dec
js
gs
push
pop
cmp
xchg
jbe
add
mov
arpl
js
cs
and
xchg
adc
pop
xchg
cmp
mov
lahf
jl
ljmp
lds
dec
iret
or
test
cs
xor
fidivs
orb
cmp
call
cs
outsl
cmpsb
adc
mov
pop
mov
in
fwait
xor
mov
cmpsl
imul
nop
sub
shrl
lods
or
sbb
xlat
xor
repz
pusha
and
cmc
lret
mov
inc
inc
notl
pusha
sbb
shll
cmpsl
mov
rep
in
inc
loop
inc
xor
test
inc
push
into
mov
outsb
movsb
sbb
sub
iret
and
add
or
adc
test
xchg
push
enter
push
or
cmp
sub
pusha
pop
add
cmp
enter
out
ficompl
push
pop
sbb
pop
push
mov
mov
mov
fisttpll
adc
mov
sub
inc
inc
scas
decl
daa
fs
mov
pop
orb
mov
ss
leave
push
or
adc
and
dec
cmp
or
fildl
mov
sbb
cltd
sbb
pop
adc
into
dec
fdiv
inc
mov
jg
and
mov
and
imul
dec
xlat
xchg
sbb
cmpsl
mov
hlt
mov
inc
insb
mov
addb
push
pop
push
mov
mov
mov
or
rclb
dec
lds
lds
int3
pop
popl
mov
scas
pop
outsl
sub
daa
sub
int
mov
rcr
cmp
cmpsl
or
enter
in
cmp
mov
in
inc
jb
dec
inc
out
out
jp
mov
mov
inc
lds
jmp
test
icebp
fsubp
fnstenv
add
imull
bound
or
sub
ret
mov
or
mov
xchg
das
out
mov
jecxz
add
or
pop
xchg
jns
jbe
test
push
leave
insl
pop
jb
pop
mov
sub
jne
mov
out
push
lcall
mov
push
das
inc
in
sbb
cs
xor
jb
mov
cwtl
push
nop
std
popa
int3
sub
push
pop
pop
or
jne
pop
bound
sub
xchg
mov
leave
dec
ja
shl
inc
rcrl
jg
in
dec
lods
and
loope
xchg
mov
pop
and
and
repz
rorb
das
divb
lock
sub
ljmp
loop
enter
push
lods
jne
and
push
lods
leave
jnp
push
mov
sahf
mov
jmp
sbb
fdivl
sahf
repnz
pop
out
in
sbb
stos
pusha
jne
inc
out
int3
mov
xchg
lahf
mov
fcompl
inc
mov
xor
sbb
and
mov
les
mov
dec
int
adc
pop
sub
mov
push
out
aad
jg
or
add
lret
push
iret
xchg
jnp
jnp
push
push
scas
mov
dec
bound
clc
test
mov
sar
jne
xor
inc
inc
sub
in
mov
mov
and
sti
in
decb
stc
ja
and
sbb
andl
in
pop
add
mov
ficomps
xchg
or
cmp
and
jl
nop
mov
xor
fadd
fadds
iret
lahf
pop
cmp
and
xchg
fwait
sub
loope
out
imull
jmp
cmp
push
cmc
xchg
leave
cmp
jae
cmp
ret
adc
inc
pop
jmp
fadds
out
fnstenv
in
pop
rol
fists
loopne
inc
lret
or
outsb
int
shlb
cmpsl
jmp
jle
ret
test
movsl
push
decb
pusha
xchg
mov
js
lcall
outsl
in
fwait
cmpsl
pop
dec
cld
popa
outsl
or
pusha
aam
push
mov
lock
jns
movups
in
out
adc
xor
mov
sbb
mov
icebp
add
push
test
or
xor
and
dec
pop
pushf
stos
pop
xor
mov
lods
sbb
test
mov
dec
mov
lret
inc
fs
in
mov
fsubr
lcall
fisubl
push
les
mov
jbe
iret
mov
add
sbb
mov
and
sbb
leave
in
adc
mov
rolb
nop
fwait
jno
movb
pop
cmp
rclb
jecxz
xchg
fbld
or
fimull
inc
sti
pusha
xchg
pop
pop
or
aad
les
xor
mov
push
or
sti
cmp
aaa
mov
or
inc
daa
out
cld
loopne
inc
or
std
enter
nop
jp
jecxz
pushw
cmp
imul
movsl
je
out
dec
in
jl
mov
pop
mov
push
ret
lods
dec
mov
dec
loope
cli
scas
fwait
lret
sahf
cmp
mov
in
loop
aaa
dec
mov
adc
cmp
mov
or
gs
in
repnz
fcomip
mov
or
xchg
xor
push
rcll
lods
fwait
in
sbb
imul
add
xchg
xchg
dec
lret
pop
cmc
testb
rolb
lret
cwtl
lods
jnp
in
enter
pop
fdivs
shll
mov
sbb
adcl
or
pop
testb
sbb
mov
es
lds
inc
clc
sbb
and
xor
out
lahf
mov
add
jecxz
cmpsb
sbb
mov
pop
negl
fldcw
cltd
shll
mov
out
sub
nop
stos
test
and
movsb
lret
decl
or
fisttpll
nop
adc
loop
pushf
gs
and
jmp
popa
into
in
leave
ret
or
bound
push
fiadds
xor
pop
lret
pop
xor
imul
pop
or
leave
in
sbb
in
movsb
push
adc
inc
dec
sar
popf
out
out
mov
push
dec
adc
xor
jp
mov
test
aad
push
ret
leave
aas
lret
jmp
push
xor
out
cld
xchg
pop
fistps
call
push
push
push
push
call
mov
mov
mov
or
mov
mov
shl
mov
or
mov
xor
xor
call
add
mov
mov
push
jmp
fnstenv
inc
mov
mul
push
xchg
add
into
xchg
mov
in
aad
inc
push
clc
pop
jne
xor
adc
mov
push
fcos
push
dec
rclb
daa
push
int3
add
std
add
cli
xchg
add
je
adc
lahf
jge
cwtl
nop
std
out
cs
add
dec
decl
cld
pop
in
sbb
loope
nop
sbb
inc
dec
aas
enter
push
sub
mov
jae
xchg
mov
enter
fs
cmc
lock
fists
push
sti
fsubr
sti
mov
test
std
add
dec
jmp
jl
hlt
and
fidivl
cli
cmp
stc
repz
push
jg
push
in
or
cmp
pop
sub
test
test
loop
push
pop
add
pop
je
roll
mov
push
and
xor
push
xchg
testb
das
mov
dec
rcll
or
ljmp
ss
repz
bound
faddl
mov
xor
and
dec
lds
dec
mul
in
ljmp
data16
fisubl
popa
ficompl
je
lret
mov
ds
xor
and
mov
push
lds
in
jne
add
mov
or
pop
adc
dec
movsb
add
cmp
mov
aam
mov
sbb
out
mov
jl
arpl
or
add
dec
icebp
xchg
and
adc
mov
push
ja
and
fiadds
movsb
test
jg
jg
icebp
xor
data16
jmp
jb
das
sahf
aaa
xor
or
inc
pop
pop
sahf
jbe
or
mov
int
in
cmpl
daa
add
cltd
mov
mov
fsubs
in
xor
test
sbb
push
sarl
mov
add
xor
js
jmp
inc
dec
dec
inc
xchg
shrl
in
adc
mov
jno
pop
inc
mov
push
rcrl
daa
mov
cmp
es
std
jg
shlb
pop
inc
ds
loopne,pt
jge
sbb
cmp
addr16
shl
pop
aas
decb
iret
andl
xor
or
add
dec
scas
loope
fnstcw
outsb
xchg
shll
dec
jne
xchg
aam
hlt
xlat
adc
dec
and
mov
mov
mov
stos
mov
xchg
daa
push
outsb
jae
out
xchg
lea
xlat
incb
add
dec
jns
push
pushl
gs
xor
add
loope
insl
testl
outsb
ljmp
adc
cmpb
inc
outsl
xchg
push
push
data16
inc
jnp
mov
std
lret
sahf
movsb
jp
movsl
xorb
and
inc
xor
arpl
push
push
fwait
mov
imul
lds
adc
insl
addr16
mov
and
lret
xor
imul
out
dec
das
ss
mov
mov
inc
clc
push
xchg
insb
lock
sub
jmp
push
push
sbb
inc
mov
loop
and
jge
out
pushf
int
xchg
push
sbb
push
and
or
dec
dec
push
movsl
mov
scas
loop
push
mov
ja
test
or
std
pop
sbb
jg
repnz
cmp
mov
bound
mov
std
popf
fsubs
test
sbb
popa
scas
lds
shlb
pop
push
jmp
pop
gs
in
xor
xor
testb
mov
sub
lea
pop
pop
iret
pop
xchg
fists
scas
dec
pusha
mov
push
loop
test
cmpsb
out
faddl
pop
lock
lahf
lea
stos
and
dec
xchg
pop
jbe
mov
cltd
pop
jnp
ficoml
arpl
pusha
out
jo
mov
mov
les
inc
adc
fs
insl
std
stc
pusha
jo
leave
pop
das
outsb
dec
push
cwtl
xor
out
imul
out
lock
cmp
pop
sbb
dec
jnp
cmp
push
dec
mov
lret
iret
insb
push
mov
cmp
jbe
xchg
cwtl
push
adc
out
in
jle
dec
lods
pop
mov
insb
call
iret
cmp
mov
mov
aaa
cmp
pop
fbstp
js
jae
mov
addr16
push
add
js
xchg
gs
xorb
mov
sub
cmpsb
inc
pop
sbb
cmp
loopne
mov
fistpl
fidivs
mov
xchg
inc
testl
mov
daa
cmp
and
jno
fcomps
inc
fcoms
push
imul
dec
pop
hlt
push
jb
xchg
lahf
jg
xor
daa
mov
insl
mov
inc
insl
pop
or
popf
push
mov
sbb
roll
and
or
fnstsw
leave
xlat
int
cmp
je
shlb
enter
dec
push
mov
leave
jmp
add
mov
hlt
loop
lret
movsl
fists
mov
cmp
idivb
test
lret
and
mov
xchg
ja
fmulp
xchg
fbld
sarl
daa
or
sbb
xor
add
xor
movsb
movsl
movsb
sbb
stos
mov
mov
jmp
or
xor
mov
sbb
movsl
stos
and
jnp
lea
icebp
movsl
jno
xlat
jl
rol
inc
jb
ret
sub
cmpsb
fcomp
out
adc
push
adc
nop
cmp
jmp
xchg
inc
pop
popf
leave
cwtl
data16
mov
lds
xlat
or
out
or
daa
scas
mov
mov
bsf
push
iret
das
push
jmp
inc
das
jp
je
outsl
or
rorl
ljmp
xor
inc
js
nop
sti
xchg
aad
fcoml
rclb
shlb
les
adc
pop
xchg
jge
pop
cmp
mov
popa
dec
dec
jl
push
cmp
fisttpll
jne
shr
pop
xchg
jl
fwait
jne
jb
rorb
movsl
lea
pop
fnstsw
fsubl
cmp
frstor
sub
aas
cmp
sub
lret
cwtl
or
cmp
cmp
push
push
add
xchg
ss
sbb
add
jns
inc
ret
fdivrs
xor
shrb
jbe
push
ja
cmp
cli
mov
jno
mulb
xor
xor
stos
pop
adc
adc
shlb
push
adc
push
push
xor
xor
call
push
push
push
push
call
mov
mov
mov
or
mov
or
or
or
xor
xor
add
adc
xor
xor
shrd
or
mov
shr
or
mov
mov
mov
mov
mov
or
jmp
out
fisubl
push
jne
lret
sti
xchg
cli
add
pop
mov
push
push
mov
lods
cmp
roll
dec
fisubrl
mov
hlt
fmuls
lahf
iret
mov
or
pop
push
cmp
aaa
cmp
popf
dec
mov
aaa
mul
lods
mov
xchg
push
gs
sahf
lods
rolb
test
test
mov
adc
gs
leave
fwait
jns
jle
mov
pusha
pop
popf
lahf
je
insb
jns
push
ja
pop
loop
adc
lea
pop
push
and
ds
cmp
in
nop
dec
jns
scas
mov
cmc
cmp
loope
mov
mov
xor
adc
leave
pop
out
sbb
push
fs
or
jge
sti
inc
inc
pop
into
sbbl
jecxz
mov
out
imul
mov
lods
test
mov
mov
xchg
jnp
lock
adc
std
inc
outsl
fwait
std
adc
sar
mov
in
jo
stc
clc
fmull
icebp
adcl
pop
and
pusha
popf
or
clc
push
lahf
fmuls
mov
add
addl
fcompl
xchg
jmp
divb
movsl
cli
xchg
pop
xchg
inc
sub
sbb
out
popa
aad
call
fdivs
pop
std
mov
popf
fstps
cmp
inc
fmulp
shll
in
in
subb
inc
fs
cmp
push
aam
pop
jns
sub
lcall
lods
test
mov
jae
pusha
jne
sbb
ljmp
and
outsb
in
ret
jmp
fwait
adc
lret
int3
mov
je
inc
or
mov
pop
add
and
notb
imul
lcall
push
xor
and
imul
enter
ret
xchg
or
mov
lods
cmp
adc
jp
pop
push
iret
cwtl
fsts
cli
repz
pop
adc
sub
jb,pn
jae
das
test
inc
fimull
mov
loope
test
outsl
xor
lds
rorl
in
add
push
sbb
punpcklbw
and
sarb
scas
sbb
inc
jg
jb
sbb
je
sbb
mov
jle
sbb
imul
iret
dec
pusha
mov
fwait
add
mov
dec
in
inc
inc
dec
xchg
pusha
lock
push
and
testl
les
sub
mov
pop
sub
add
mov
mov
sub
push
insb
jecxz
bnd
jmp
pop
mov
fnstcw
add
cli
jbe
jb
mov
outsb
sub
jle
rclb
out
adc
mov
mov
pusha
mov
inc
fmuls
or
repnz
cmpl
repnz
push
faddp
ja
push
cwtl
xor
fs
push
xchg
cmp
fsubrs
int3
dec
inc
pop
add
out
sub
xor
xchg
int3
mov
sbb
sub
cmp
test
xor
clc
adc
sti
mov
jno
enter
movsl
aad
into
jb
aam
inc
je
pop
stc
daa
stos
mov
jo
out
lea
sbb
jne
fadd
jns
dec
lds
pop
hlt
loop
adc
xor
add
pop
jge
ljmp
cmpsb
dec
es
lahf
cmp
or
cmp
mov
jmp
stos
out
shlb
test
mov
shlb
and
ret
xchg
into
pop
addr16
mov
lds
add
push
call
jl
aas
dec
pop
sbb
xchg
ds
int3
pop
jns
cmp
mov
mov
popl
mov
mov
iret
lds
dec
dec
mov
sbb
pop
pop
fiadds
mov
sub
stos
or
fscale
out
dec
push
mov
mov
outsb
jns
stc
mov
push
jle
adc
mov
jle
inc
cmp
jns
clc
popa
pop
test
test
xor
sbb
scas
pop
mov
push
push
ds
pop
pop
jle
out
push
mov
ja
ljmp
popl
push
outsb
or
push
icebp
gs
push
xchg
dec
stos
rorl
mov
cmp
dec
stos
loope
and
clc
sti
or
mov
call
addr16
cs
ss
xor
adc
mov
cmpb
add
jne
fadds
mov
mov
int
xchg
sbb
push
adc
push
inc
sub
mov
scas
lods
sub
pop
or
xchg
stos
jle
jno
adc
cmp
les
and
sahf
call
fnstcw
dec
push
adc
ljmp
nop
fwait
inc
jle
xor
insb
mov
dec
jns
jle
rorb
pop
lahf
push
scas
leave
xchg
arpl
ret
stc
adc
lret
mov
xor
test
in
filds
push
in
imul
add
es
and
and
popf
out
movsl
sbb
dec
sub
fwait
test
or
ss
icebp
mov
orb
lds
outsb
and
cwtl
mov
out
push
xchg
mov
jnp
pop
and
or
adc
in
mov
int3
mov
ja
call
clc
mov
jg
jg
aad
gs
xchg
out
loopne
dec
fdivs
xchg
js
mov
lret
pop
in
imul
roll
pop
pop
mov
push
mov
inc
sbbl
inc
mov
mov
inc
push
test
cmpsb
shlb
fcoms
aad
stc
mov
rorl
push
mov
add
jecxz
xchg
or
clc
hlt
movsl
jl
out
gs
mov
ljmp
scas
lret
mov
test
cmp
push
movsb
lcall
inc
daa
pop
xor
lock
aad
out
or
pop
enter
ror
cmp
lea
aas
cmp
popl
mov
insl
push
clc
pop
xor
cmp
popa
ds
mov
inc
pop
push
fldcw
sub
popa
xchg
or
and
pop
cmp
mov
push
jmp
mov
loop
shlb
jae
cwtl
lds
and
and
addr16
and
loopew
sbb
ret
lahf
outsl
push
cltd
dec
lock
push
mov
add
add
ret
test
into
mov
push
push
push
push
call
push
push
jmp
add
lds
mov
call
pand
and
inc
sub
xchg
sub
ret
ret
adc
insl
xchg
ss
mov
lahf
subl
fwait
icebp
push
adc
sbb
icebp
jg
outsl
mov
sbb
or
pushf
movb
clc
fs
cs
insb
aas
and
test
andl
dec
int
scas
cmp
jno
insb
sbb
andb
sbb
fsub
dec
pop
stos
or
orl
mov
daa
int3
mov
sbb
inc
sbb
aas
dec
hlt
sub
or
push
xchg
es
and
inc
iret
pop
push
imul
xchg
les
in
xchg
sbb
adc
ret
lcall
jg
pusha
add
nop
pop
cmp
cmp
mov
fs
lcall
popa
cmp
pop
push
or
pop
pusha
rorl
mov
mov
mov
imul
sub
pop
adc
xchg
dec
sub
imulb
roll
ss
orl
outsb
jmp
leave
and
rcl
push
sub
test
pop
ss
out
stc
fmuls
lods
cmp
inc
dec
pop
ret
cltd
add
inc
xor
je
dec
fidivrl
scas
sbb
das
int3
iret
mov
iret
sub
sti
je
sti
fists
jl
push
push
out
and
dec
push
mov
outsb
push
adc
pop
gs
stos
push
stos
jbe
or
sub
out
mov
std
test
stos
jmp
mov
call
lcall
lret
jle
pop
addr16
push
push
mov
or
add
push
hlt
pop
xacquire
xchg
bswap
ljmp
dec
mov
jns
lea
outsb
xor
mov
fldl
repz
jge
sub
imul
iret
lock
cld
mov
ja
sbb
adc
and
adc
mov
sub
jns
adc
insl
xchg
jne
mov
sbb
lods
sbb
rcrb
in
js
adcl
or
lods
mov
inc
cld
popa
sbb
jle
xchg
movl
sbb
pop
out
inc
xor
mov
dec
jne
scas
dec
jmp
int
jmp
inc
mov
mov
dec
not
mov
dec
test
jecxz
cmp
or
cmp
les
add
into
lcall
test
popf
add
fisttps
lret
jne
imul
xchg
bnd
or
sbb
dec
stos
dec
add
xlat
dec
scas
jl
xchg
in
loopne
fiadds
mov
jbe
mov
jo
inc
mov
xor
mov
or
xor
inc
cltd
popa
mov
and
push
mov
sbb
push
sbb
idivb
cmp
dec
arpl
imul
cmp
jns
pop
adc
das
or
jns
jmp
shl
sub
mov
dec
push
je
repnz
insl
adc
decl
xchg
jg
aad
mov
fidivs
push
mov
stos
fadd
incl
lret
test
lcall
sti
inc
pop
in
jb
ja
andb
and
dec
sub
cmp
pop
ret
cmpsb
outsl
aad
push
leave
cltd
clc
nop
xchg
sub
daa
int3
sbb
stos
test
cmp
out
and
jl
jns
mov
add
rcll
jmp
test
adc
add
lock
std
adc
mov
pusha
pop
fwait
xchg
and
stos
inc
add
and
cwtl
jg
sbb
mov
sahf
mov
out
xchg
clc
adc
rorl
test
dec
xorl
mov
cmp
mov
sbb
out
jmp
gs
cld
xchg
shlb
jb
sbb
cmp
mov
push
jbe
aad
ds
mov
rclb
xchg
repnz
mov
fcmovnu
xchg
inc
xlat
sub
sub
es
int3
in
push
aam
fwait
push
jl
inc
or
stc
mov
mov
int
jnp
and
rcll
sarb
jge
sbb
mov
in
push
push
repnz
xor
cs
and
dec
mov
clc
jp
fs
js
je
add
sbbb
loop
fisubs
xor
pop
ljmp
sbb
fsts
inc
dec
sub
leave
xor
ljmp
mov
cmpb
cmp
push
insb
adc
lret
adc
xor
jbe
fs
fldenv
add
jbe
or
test
add
sbb
jns
in
sbbb
sti
clc
inc
dec
sub
and
adc
pop
jp
sbb
cmpsl
imul
xorl
lahf
adc
inc
mov
or
int
adc
add
dec
fwait
call
pushf
popf
in
or
push
aam
adc
mov
dec
adc
sti
cld
cmp
mov
jp
xchg
fidivs
pop
mov
cli
sbb
adc
cmp
int3
dec
pusha
stc
in
xchg
jmp
mov
mov
mov
iret
test
xor
mov
cmp
dec
pop
div
mov
mov
cwtl
popw
aaa
jmp
pushf
lret
mov
add
ret
lahf
or
aaa
imul
or
sub
mov
std
inc
push
and
cmp
movsb
cmp
jb
or
fsubrs
rclb
mov
pop
mov
sub
mov
mov
lret
mov
scas
ret
jne
xchg
xor
adc
aad
notb
outsl
fimuls
and
mov
lods
mov
cmp
leavew
fwait
add
loope
inc
mov
imul
cmp
sub
mov
mov
add
hlt
or
mov
inc
jnp
xor
and
inc
idivb
mov
in
mov
in
dec
mov
scas
xchg
xlat
repnz
cmp
cli
mov
dec
add
cld
mov
xchg
mov
es
cmp
lea
aaa
sub
shlb
shrb
mov
movsl
iret
fnstcw
arpl
mov
jecxz
cmp
js
xchg
faddl
test
jge
mov
lret
pop
popf
and
jns
je
cwtl
iret
sub
xchg
call
mov
mov
mov
add
mov
adc
add
pop
adc
pop
mov
mov
pop
leave
ret
push
mov
sub
adc
movl
mov
sub
mov
xorl
mov
addl
movl
orl
jmp
sti
out
out
jo
jo
pop
inc
push
push
mov
js
invd
add
hlt
push
mov
mov
iret
sahf
lods
and
xchg
sub
out
mov
lret
clc
enter
out
aaa
pop
out
call
push
xlat
mov
call
ljmp
mov
mov
dec
sahf
and
mov
xor
xchg
xlat
push
nop
pop
mov
sub
movsl
arpl
mov
imul
fisubs
push
mov
nop
in
and
push
dec
or
shrb
lods
cmp
mov
lods
mov
mov
ret
jle
test
into
push
aam
push
aad
dec
sbb
sub
fsubrl
push
cs
ror
pop
mov
repnz
fwait
insb
xor
loop
push
imul
cld
and
xor
dec
add
ss
sbb
sub
ret
pop
sarl
imul
jg
cs
dec
and
stos
das
repnz
imul
cmpb
clc
lahf
or
mov
in
and
mov
cmc
sbb
test
cld
jge
call
mov
pop
pop
scas
lahf
or
in
mov
addl
scas
test
loopne
mov
adc
jecxz
mov
xlat
aas
mov
xchg
push
es
sbb
inc
loop
adc
fisttps
xchg
inc
es
ret
repz
arpl
es
mov
xor
dec
cmp
push
adc
in
gs
xorl
and
popa
sbb
mov
mov
mov
sub
dec
push
push
pushf
ret
dec
rcl
fiaddl
roll
sbb
int
or
into
jbe
mov
outsb
idivb
test
fcmovb
adc
dec
and
pop
and
ret
enter
xor
push
jnp
pop
xchg
cmp
shr
pop
mov
movsl
mov
mov
loop
sub
sub
sti
test
sarl
jo
xchg
jge
std
lods
cmp
cmp
insb
in
or
xchg
sub
sahf
or
enter
stc
jge
and
ficompl
lret
lcall
cli
popa
daa
cmpsb
pusha
mov
scas
sub
test
daa
repnz
arpl
mov
js
sub
push
mov
mov
fpatan
inc
sarl
cmp
jne
or
scas
pop
pop
mov
sub
and
cmp
xor
cmpsl
xlat
jecxz
sub
scas
inc
jb
add
add
xor
adc
pop
xchg
push
jge
sub
mov
xchg
mov
out
inc
out
ljmp
push
shll
mov
mov
pop
mov
sbb
addb
mov
pusha
mov
pop
push
or
jle
pop
subb
ficompl
dec
jno
stos
aad
xchg
and
mov
mov
ds
dec
flds
stos
aad
ret
add
xchg
in
lock
cmp
lds
shll
add
cld
sbb
cmp
sbb
sub
mov
repnz
popa
addr16
fidivrl
aad
jb
add
jo
xchg
inc
ret
sub
xor
mov
sub
cmp
and
stos
sub
aam
outsl
sbb
int
je
dec
jp
mov
jmp
jbe
cmpl
inc
leave
mov
sbb
rclb
fs
xor
test
incb
sbb
ds
fcmovbe
xor
ds
push
mov
aad
fldcw
iret
xor
or
inc
and
cltd
or
hlt
sbb
cltd
in
shl
sub
push
jl
test
dec
xor
inc
dec
iret
movsb
lret
mov
rcrl
mov
addb
mov
inc
xchg
out
mov
ja
movsl
imul
cwtl
sbb
mov
popa
cltd
add
jmp
loop
insl
push
sbbb
test
insl
popa
ja
sbb
push
xor
xor
mov
and
push
fsubrs
and
mov
stc
or
mov
nop
xor
shrl
jnp
push
adc
dec
jns
cmp
push
pop
jmp
repz
movsb
jno
ds
shll
add
lahf
xchg
mov
in
or
cmpsb
pop
pop
push
lcall
sub
lahf
inc
mov
mov
gs
leave
shlb
aam
sbb
xchg
test
arpl
xchg
repz
pop
xorb
mov
nop
sarb
std
xchg
repnz
adcl
pop
mov
ret
lret
sbb
mov
insb
ja
mov
dec
imul
jne
gs
inc
xor
aad
sub
add
outsl
imul
mov
cwtl
incb
sbb
repnz
iret
scas
out
stos
adc
leave
loopne
mov
mov
les
cs
sub
loope
push
mov
int3
or
push
sub
pusha
jle
mov
ficompl
jae
and
sar
dec
test
adc
mov
pusha
fcomps
pop
cld
data16
daa
cmp
cmp
adc
push
pusha
xchg
push
mov
and
pop
xchg
jg
pop
inc
cmpsl
or
scas
inc
aad
mov
mov
loope
pop
pop
ret
inc
add
push
inc
cmp
lods
popf
aaa
stos
push
push
ret
lds
loopne
xchg
sbb
sub
sub
add
ret
paddusw
jne
pop
lea
shll
push
pushf
jnp
cmp
jbe
xchg
mov
add
jne
mov
popa
andb
xor
cmpsl
in
iret
fists
mov
sub
in
sub
xor
inc
xor
aam
cltd
inc
jns
in
jnp
pop
mov
rorl
cmc
ret
stc
sbb
inc
add
jbe
andl
adc
jmp
pushl
call
movb
movzbl
mov
sub
imul
mov
or
movzbl
push
orl
and
mov
movb
movl
movb
subl
movb
movb
orl
mov
orl
mov
subl
add
adcl
jmp
ret
sub
shlb
mov
xor
mov
xor
push
loope
invd
add
getsec
xchg
lahf
int3
jae
mov
push
mov
insb
jnp
loope
sbb
mov
pop
adc
mov
in
stos
das
scas
imul
xor
test
push
xchg
sub
test
jbe
xchg
mov
sbb
xchg
push
sbb
mov
mov
or
mov
xchg
test
inc
stos
xor
lcall
jge
lret
sub
aam
daa
pop
push
mov
stos
dec
xchg
jb
or
add
loopne
test
or
insb
lea
push
jmp
inc
sub
arpl
inc
sub
test
push
pushf
fidivs
flds
sub
xchg
aam
mov
lea
sbb
ja
xchg
aad
or
mov
testl
mov
out
shrl
and
test
jo
pusha
jne
imul
pop
lahf
orb
dec
test
push
jp
sarb
fwait
daa
into
int3
push
clc
and
inc
xchg
dec
mov
movsl
adcb
jle
or
out
sarb
in
and
inc
loope
mov
fcomps
adc
and
pop
xlat
and
adc
mov
imul
xchg
adc
insb
dec
fucomi
mov
scas
outsb
sub
ja
sbb
data16
sti
stc
push
inc
mov
scas
mov
push
add
ja
fstps
jbe
push
btc
aam
js
mov
div
repz
js
mov
cli
sub
inc
pop
sbb
enter
scas
or
jno
lock
enter
out
mov
jae
mov
in
mov
pushf
dec
repz
into
insl
pushf
test
xchg
and
and
enter
xchg
inc
mov
jl
mov
mov
pop
push
mov
jae
call
inc
jg
mov
pop
lock
sub
rclb
mov
pop
sbb
xor
int3
xchg
test
insb
jb
test
sbb
sbb
lret
addr16
mov
xor
aaa
adc
sahf
sbb
pop
mov
mov
sub
stc
pop
sti
push
jge
leave
mov
mov
inc
inc
shlb
pop
js
dec
sub
movsl
ja
or
repnz
stos
xor
daa
jmp
sbb
mov
xor
add
or
ja
jno
mov
into
dec
cs
push
shufps
push
jb
fwait
pop
ret
mov
mov
fdivr
cs
lock
jp
push
inc
in
enter
ljmp
mov
or
pusha
sub
insl
repnz
scas
leave
xchg
rcrl
js
adc
popa
sbb
jg
push
stos
mov
dec
mov
arpl
es
decb
mov
mov
outsl
add
rcll
xor
sbb
mov
dec
mov
aam
test
fisubrs
sbb
sbb
insl
pop
testl
cmp
sti
loopne
pop
lods
out
push
xchg
lahf
mov
jb
jmp
shrl
aas
les
dec
mov
fisubl
rcl
sbb
cli
inc
std
lds
fmulp
and
mov
rcl
xor
fs
loop
stc
incb
xor
ljmp
mov
push
cld
loop
sti
adc
mov
iret
sahf
or
sahf
loopne
fs
lcall
mov
enter
hlt
push
jnp
jbe
push
cld
insl
orl
push
aam
jmp
and
stc
xor
pop
jno
clc
in
daa
cmp
inc
xchg
xchg
pusha
mov
jae
cli
jp
pop
and
shll
xchg
hlt
pop
sub
ror
push
dec
test
hlt
iret
arpl
inc
mov
pop
mov
movsl
or
gs
sub
pop
fistps
ja
and
pop
mov
iret
push
xchg
jl
dec
mov
loope
mov
xor
xor
push
aad
fisttpl
fistl
pop
adc
pop
xor
inc
es
pop
call
aas
mov
mov
and
xor
enter
arpl
inc
or
xor
imul
fdivrl
lret
jp
pop
and
jg
ret
jo
pop
xchg
inc
inc
xchg
lods
cmpsb
inc
adcb
sahf
fcomi
test
lods
test
inc
dec
fbstp
mov
pop
test
cmpsl
daa
push
lret
iret
sub
fstpt
push
test
test
scas
ljmp
test
xchg
mov
ds
pop
push
loopne
dec
loop
es
adcl
pop
je
xchg
inc
jge
cmp
lock
dec
je
jno
outsl
xchg
ucomiss
lods
mov
cli
jbe
jno
pop
sub
cld
ss
xchg
pop
push
cmp
sub
mov
rcrl
leave
push
das
inc
int
imul
xchg
pop
outsb
lcall
push
clc
cmp
dec
mov
fsub
adc
mov
pop
xchg
pop
imul
mov
push
movsl
cld
lahf
pop
out
das
fwait
pushf
sbb
adc
sbb
push
adc
xchg
and
or
scas
pop
or
stos
or
mov
lret
pop
cmpsb
outsb
hlt
mov
jg
inc
loopew
ret
aad
push
int3
out
push
inc
rcll
push
and
daa
nop
pop
pop
inc
repz
sub
mov
inc
jp
lahf
cs
jno
push
push
cltd
mov
sbb
subb
in
repnz
inc
mov
mov
cmc
rorb
push
pmuludq
hlt
sub
cmc
mov
pop
jae
cmp
outsb
ret
call
cld
xlat
getsec
cli
ljmp
out
cli
out
int3
cmpsl
or
dec
cmpsl
adc
push
icebp
leave
cs
jp
xchg
cmp
xchg
aam
js
mov
sahf
jb
mov
fcomps
std
cmp
xchg
xlat
divb
pop
into
jo
ss
lea
imul
mov
addl
or
addl
mov
subl
and
movl
jmp
mov
hlt
add
sbb
pop
xchg
mov
invd
add
movaps
enter
push
xor
push
dec
js
jnp
or
lock
in
icebp
shll
lock
daa
mov
add
ret
jne
aaa
nop
cmpsl
pop
or
jo
dec
insb
nop
jne
rclb
xor
inc
out
cmp
stc
pop
fs
std
call
aas
inc
inc
nop
cmp
sti
stc
jae
jmp
adc
outsb
lret
pushl
mov
repz
das
test
ret
adc
jbe
ret
cli
sbb
in
sahf
push
sbb
or
bound
cmp
or
insl
sahf
inc
out
ljmp
movsb
ss
xchg
inc
push
mov
fld
dec
out
pop
jecxz
mov
insl
aad
pop
bound
jmp
in
jl
sbb
mov
inc
test
mov
and
xchg
in
add
jg
mov
and
pop
add
gs
xchg
pop
pop
mov
sbb
ffreep
sbb
jns
out
mov
mov
sbb
xor
xchg
sbb
inc
inc
sub
pop
aaa
repz
fidivs
scas
add
inc
fnstenv
call
xchg
jl
pop
test
xchg
jl
call
dec
push
int
and
jae
lcall
push
xchg
gs
mov
jb
cs
xchg
stos
lods
into
stos
xchg
daa
ret
xlat
not
cld
xchg
dec
sbb
stc
sbb
add
pop
outsl
cmpsb
rorb
lret
xlat
sub
push
outsb
and
mov
and
rcrl
inc
pop
data16
jge
xchg
ljmp
xor
mov
push
xchg
mov
mov
push
push
aad
dec
cli
int
mov
sbb
aad
mov
mov
lahf
push
std
adc
or
jnp
aad
sub
rclb
xchg
add
mov
or
jl
mov
sub
fucomi
ja
loope
push
test
mov
push
sub
stos
fnstsw
rcl
aad
and
fldenv
jbe
ds
sbb
je
mov
mov
iret
daa
in
andl
loopew
imul
and
cld
jo
sti
popf
mov
pop
je
test
out
add
in
cmp
jge
mov
rcr
jle
sbb
fimuls
add
mov
pop
mov
jp
mov
into
xor
pusha
sbb
fwait
insl
fisubl
js
mov
stos
movsb
into
pop
movsb
ja
fcmove
sub
push
jbe
add
lahf
cmpsl
sbb
lock
or
sbb
adcb
stc
aaa
into
cmp
add
push
and
xor
js
mov
pop
aad
or
loop
shrb
comiss
test
jbe
cmpsb
and
sub
scas
clc
test
jnp
movb
mov
adc
sbbb
cmpsb
insb
gs
loope
pop
lea
or
jge
inc
mov
lock
adc
stc
xchg
xchg
decl
sar
push
adc
mov
lahf
int
mov
and
cmp
cltd
ret
shr
inc
xor
mov
outsl
cmpsb
mov
mov
ds
std
outsl
subl
js
inc
rcrl
mov
mov
iret
mov
lahf
jle
add
movswl
push
test
pop
loop
mov
cmp
xchg
fs
pusha
add
lock
xor
dec
shll
into
ds
out
mov
sub
bound
out
pop
pusha
jg
leave
inc
inc
xor
stc
repnz
fmuls
shll
daa
enter
push
imul
push
cmp
or
rorl
add
outsl
inc
js
in
lock
push
ret
adc
fmulp
inc
mov
sub
sbb
fwait
inc
sbb
or
mov
add
xchg
and
mov
sub
jge
cmp
add
jno
mov
test
mov
push
sbb
test
or
aaa
mov
xor
in
ror
adc
xor
mov
in
jne
pop
fstl
cmp
inc
fistpl
icebp
jge
or
add
mov
add
xchg
fadds
scas
mov
outsl
dec
rcrb
out
nop
popf
add
inc
lods
sbb
popa
repz
jbe
inc
shr
seto
iret
jge
jbe
test
push
fsubp
or
or
fcompl
movsl
test
in
mov
cld
and
cmc
mov
fsts
int3
dec
and
das
mov
mov
push
addr16
outsb
lock
out
fwait
jmp
pusha
cmp
jge
adc
adc
in
fiaddl
jae
xor
notb
sbb
loope
pop
lods
jmp
jg
jl
cmpsb
adc
mov
cltd
adc
in
in
add
or
pop
outsb
mov
popf
std
iret
in
xchg
fisttpll
sbb
repz
or
roll
scas
lods
andb
fisubl
jle
adc
pop
jmp
scas
pop
pushf
push
imul
scas
inc
xor
lods
and
sbb
dec
es
iret
das
pop
and
aas
insl
jbe
push
pop
xor
icebp
rcrl
mov
inc
lods
or
pop
repz
mov
arpl
sbb
stos
shll
sbb
or
pop
mov
pop
or
jns
icebp
int
mov
fisubrl
aad
ror
and
xchg
or
roll
or
ret
adc
jmp
rclb
loopne
lcall
hlt
in
sub
das
push
mov
insl
adc
add
out
push
add
rorl
lods
out
shrb
into
push
pop
push
mov
or
jle
sbb
addr16
rcrl
fdivl
jp
sub
lods
data16
cli
js
or
fcoms
sub
outsb
or
pop
fcomip
call
sbb
in
dec
das
jp
mov
out
cmp
ja
mov
mov
sub
mov
cmpl
jl
andl
mov
and
jmp
push
push
push
call
mov
mov
movzwl
movzwl
shr
addl
or
sub
movl
mov
orl
movb
movb
sbbl
mov
mov
xorl
xor
addl
add
xorl
movzbl
movzbl
sub
cltd
mov
adc
mov
jmp
mov
pop
push
and
sub
mov
mov
lahf
ret
invd
add
psubw
test
cmpl
sbb
mov
lret
jnp
popa
xor
enter
outsb
int3
sub
cmp
idivl
daa
pop
adc
add
xchg
loopne
call
xorl
out
sbb
lea
adc
xor
jecxz
in
ss
xlat
out
test
mov
lcall
mov
sub
pop
aas
push
fldcw
das
pop
ficoms
aaa
lods
scas
mov
dec
cmp
adc
push
xor
and
push
adc
into
std
sub
mov
xlat
jge
cmp
jae
out
mov
xchg
xor
sbb
mov
or
xchg
mov
mov
xchg
xchg
mov
aam
enter
lret
clc
dec
xor
ret
cltd
fildll
mov
mov
push
outsl
hlt
sti
mov
adc
add
jle
imul
faddl
inc
sbb
xchg
loope
or
mov
nop
rcrl
call
jbe
adc
jl
imul
mov
push
dec
sbb
scas
or
sub
jmp
fisubrs
ficompl
js
call
test
lret
notb
mov
fucomip
loopne
ret
and
outsb
lea
ljmp
cmp
scas
push
sahf
xor
loop
mov
jno
pop
loopne
lods
and
mov
mov
push
jbe
or
fs
push
and
in
jmp
inc
aas
pop
ffree
mov
in
es
icebp
pop
lods
les
inc
pop
mov
sub
push
sbb
ret
add
int3
push
mov
add
test
pop
push
ficoml
mov
mov
pop
cmp
pop
pop
sub
adc
sbb
mov
sub
hlt
pop
or
leave
divb
popf
ljmp
clc
stos
pop
adc
dec
inc
jne
sub
mov
mov
jo
pmaxsw
popa
or
fadds
gs
fs
cs
leave
sbb
stos
or
xor
add
scas
adc
insb
test
sub
add
mov
lods
int
test
repnz
lds
cmp
dec
leave
rol
popa
mov
ret
or
pop
out
shr
push
cmp
ljmp
jnp
enter
xchg
push
cwtl
xor
in
repz
sub
mov
sbb
test
lods
imul
push
sub
les
scas
push
sahf
outsl
xor
lea
add
sub
adc
xor
scas
or
sub
pop
test
mov
divl
lret
push
cmpb
dec
add
shrb
dec
les
mov
pop
adc
cmpsl
lods
push
inc
pop
shrb
fwait
pop
fwait
idivb
filds
movl
sbb
cwtl
mov
lea
jbe
stos
jb
sbb
sbb
push
jp
cwtl
out
dec
fwait
or
stos
jmp
aaa
scas
mov
xchg
aas
ss
push
rclb
mov
sbb
inc
mov
bound
inc
fistpll
cmp
ja
sbb
mov
adc
pop
or
fldcw
cmpsl
int3
lock
cmp
or
push
dec
mov
mov
mov
mov
pop
pop
push
out
cmp
mov
enter
outsl
add
nop
int3
or
lahf
mov
cli
aaa
adc
rcrb
jnp
pop
test
loop
cmp
imul
or
dec
pusha
fs
shrl
rclb
jnp
jp
sub
cmp
dec
xor
xor
cmp
inc
aam
xchg
sub
xchg
adc
daa
dec
and
push
adc
jne
sub
push
int
pop
xor
adc
lret
pop
cmpb
lock
movsl
sbb
sbb
mov
pop
fldl
jno
insl
popa
scas
jp
pop
dec
cmp
xor
popa
sub
add
rorb
repnz
sbb
jp
cmp
stos
xchg
into
cmp
xor
sub
std
mov
in
lcall
pop
xor
jle
push
xchg
pop
jg
ret
or
js
adc
mov
nop
stos
mov
add
mov
mov
hlt
jno
into
mov
repnz
orb
mov
push
xchg
jg
stos
arpl
lea
jne
insl
mov
jg
in
sub
call
xchg
mov
insb
addl
out
js
jle
or
popa
fisttpll
fiaddl
mov
mov
cmpsl
mov
pop
imul
repnz
lods
fisttpll
rorl
les
in
xchg
dec
push
push
sbbb
call
je
inc
std
adc
dec
cmp
and
dec
mov
pop
or
pop
jno
insb
fldl
inc
push
ss
push
jg
mov
movsl
jne
mov
xor
push
xchg
jmp
mov
cwtl
mov
mov
lods
fwait
mov
int
lahf
rcl
or
mov
and
cmp
nop
adc
in
adc
decl
je
jge
es
cmp
imul
and
iret
mov
test
pop
mov
aaa
shr
andl
je
dec
outsb
dec
sbb
jle
fs
jecxz
loop
fs
cmp
daa
or
or
lock
scas
clc
inc
in
rolb
test
ss
nop
jno,pn
xlat
sbbb
adc
in
inc
inc
jae
cmp
scas
clc
stos
lods
pop
out
cltd
push
int3
fcomps
cmpsl
push
pop
repz
push
cmpl
jl
and
jmp
push
call
jmp
sub
push
xchg
jne
jle
fwait
lcall
or
cmpxchg
sahf
push
dec
orl
jmp
stos
scas
or
sbb
adc
fmuls
outsl
leave
popf
lea
add
jp
mov
and
imul
rclb
xor
cmp
out
rcl
inc
add
or
mov
stc
xor
hlt
ds
das
aad
pop
daa
dec
adc
lods
push
inc
lret
leave
imul
into
std
cli
inc
stos
add
push
adcl
pop
popf
cmp
jo
lods
std
loope
xchg
cli
sub
clc
jae
das
in
inc
add
in
movsl
faddl
mov
push
pop
mov
call
xchg
jp
loopne
push
push
jmp
gs
jle
loope
sbb
mov
cmp
in
lahf
and
out
aad
sbbl
adc
lahf
dec
or
lea
and
pop
xor
stos
arpl
sbb
adc
xchg
cmp
aas
push
xchg
out
inc
aas
push
xor
cmp
mov
xchg
and
cmp
push
inc
addr16
pusha
loopne
jmp
cmp
adc
dec
adc
int
scas
xchg
ja
dec
out
add
jle
push
das
cli
loop
pop
int3
or
sub
jnp
mov
imul
lret
inc
lds
imulb
xchg
in
and
daa
popf
jb
mov
and
cld
cmp
inc
inc
xchg
jne
mov
xchg
or
pop
frstor
cmc
mov
test
cld
mov
aad
fnstcw
loope
call
repz
sti
popl
insb
or
ret
mov
nop
push
jnp
movsb
clc
cmc
insl
enter
ds
cmp
and
pop
add
xchg
adc
orb
sub
inc
dec
xor
add
adc
repnz
push
rcrl
jecxz
ljmp
xor
cmpsb
xor
loope
push
repnz
push
insl
add
mov
mov
pop
stos
pop
xchg
cmpl
test
add
and
insl
ss
inc
rcr
push
sti
data16
scas
test
mov
leave
push
stos
int3
or
popa
fcompl
dec
dec
pop
notb
sbb
push
dec
lea
mov
daa
inc
xor
das
jne
pop
mov
test
lret
xor
jge
rcrl
dec
cli
adc
sbb
push
enter
data16
fucomip
ret
cltd
and
roll
jns
fisttpll
movsb
in
dec
rol
movsl
cmpsl
xchg
stos
cmp
mov
or
adc
repnz
pop
test
inc
out
fldcw
and
push
clc
nop
lret
enter
xor
mov
shll
adc
addr16
shrl
inc
mov
push
sarb
jb
jp
test
nop
add
dec
test
fbld
xor
jl
rcr
sti
xor
fwait
idivb
inc
push
stos
sub
lods
in
sub
dec
in
inc
cmpsb
imul
mov
bound
js
push
dec
mov
adc
shll
jbe
out
sub
lret
out
mov
movsb
decb
xor
sub
xchg
cmp
push
test
sbb
sbb
data16
mov
sti
jp
jno
js
sti
dec
out
arpl
fstp
xchg
stos
repnz
popa
testb
adc
test
sub
call
jle
and
js
movsb
or
sahf
push
notb
mov
in
xchg
sarl
xchg
xchg
repz
lcall
push
jns
arpl
dec
das
ret
shrb
ficoml
mov
mov
ss
leave
aam
fcomp
pusha
dec
fstpl
in
enter
daa
repnz
je
cwtl
xor
dec
mov
jg
insl
cli
mov
pop
xlat
shl
push
adc
pop
insb
mov
cltd
add
mov
in
sti
rclb
scas
fcmovne
psadbw
pusha
inc
lds
imul
mov
ficoms
cmpsl
cmp
stc
push
mov
ja
movsl
mov
mov
bnd
or
sti
sbb
mov
pop
das
mov
clc
add
pop
lahf
aaa
mov
decl
test
and
in
leave
adc
mov
inc
jne
lods
jl
xor
daa
rcll
imul
adc
add
or
sub
pop
movsl
sub
inc
das
or
sbbl
jnp
jb
mov
test
insb
inc
mov
adc
clc
loop
bound
push
push
cmp
fsubp
pop
push
ss
in
cli
dec
sbb
mov
fs
call
cmp
or
popf
out
out
in
popl
push
repnz
addr16
shrl
push
daa
stc
out
out
push
xchg
pushf
adc
push
dec
push
imul
mov
outsb
nop
stos
inc
jl
cmpsl
cld
stos
sbb
pop
mov
xchg
push
in
mov
mov
dec
xchg
jmp
rcrb
xor
inc
mov
sbb
inc
js
cmpl
mov
cmp
cld
in
pop
sub
out
nop
sbb
call
scas
sarl
in
and
pop
push
add
push
hlt
or
js
and
shll
test
or
ret
mov
jbe
jl
cmp
pop
pop
mov
pop
sbb
iret
cmp
pop
fnstcw
rcrb
cwtl
scas
cmp
pushl
fimull
fcoml
jb
jg
mov
popa
mov
sub
enter
push
dec
jle
pop
sbb
push
iret
hlt
mov
lcall
neg
jge
push
pusha
cmp
nop
orb
xor
sub
inc
pop
idiv
jmp
mov
xchg
mov
out
xchg
add
movups
popa
rcr
pop
and
mov
pop
loopne
lret
loope
jb
sub
shll
sbbl
imul
sarb
pop
inc
movsl
popl
test
or
dec
and
push
das
dec
and
es
push
xor
cmp
push
mov
rcrb
in
mov
sub
mov
hlt
cmp
cmp
or
cmp
fs
cmp
lods
outsl
cli
xchg
add
iret
inc
mov
mov
push
imul
mov
push
arpl
jns
addb
jle
adc
call
mov
and
inc
jno
mov
sti
ja
loopne
mov
inc
jl
repnz
push
iret
mov
adc
movsl
test
mov
sahf
int
mov
sbb
xchg
jo
ljmp
cmpsb
icebp
jae
andb
aad
cmp
mov
xor
in
mov
jo
xchg
movsb
out
popf
stc
call
in
lock
jnp
inc
or
ja
sbb
dec
stc
daa
aad
insb
cmp
dec
jle
jo
xor
test
test
mov
pusha
ret
and
out
test
aas
insb
jnp
insl
mov
jb
cmp
lahf
jecxz
in
xor
cmp
pop
jno
sti
outsb
cltd
nop
in
pusha
ret
cmpsl
ret
fwait
mov
mov
mov
out
mov
lock
leave
push
jmp
sahf
out
add
lea
int3
in
fstpl
sub
sub
scas
xchg
or
lret
mov
in
and
adc
jmp
sbb
inc
outsb
sbb
pushf
jmp
cs
xchg
or
adc
xor
out
inc
repnz
cmp
js
mov
movsb
xchg
cs
mov
add
dec
xchg
fdivrl
idivb
imul
sbb
rorl
push
cmpsl
sub
xlat
push
mov
nop
dec
sbb
in
add
enter
xlat
wrmsr
xor
scas
loope
cmpl
push
sbb
out
or
mov
and
or
mov
pop
mov
pushf
ja
mov
jo
sti
cmp
jg
mov
mov
insb
pop
and
scas
xchg
push
stc
cli
stc
and
inc
mov
orb
jbe
inc
and
and
arpl
mov
bnd
ja
pop
and
bound
jns
jno
mov
popf
adc
xchg
xchg
xchg
add
jecxz
jg
into
xor
sbb
pop
repnz
mov
mov
cmp
mov
xlat
xlat
jecxz
iret
mov
jge
jl
aad
sahf
mov
cli
in
fimull
xorb
test
fs
fwait
add
jle
and
push
or
shlb
out
outsb
fmul
out
rorb
lock
das
aad
lock
rolb
sub
xor
pop
xlat
imul
lret
or
icebp
xchg
adc
out
movsb
mov
mov
dec
jecxz
mov
adc
dec
in
sub
mov
xchg
scas
cmc
push
mov
cmp
in
ret
out
mov
mov
outsl
dec
xor
xlat
xlat
stos
pop
imul
xor
sarl
ds
push
inc
pop
pusha
movsl
outsl
out
mov
jb
sbb
cmp
daa
fists
jmp
and
rcll
cmp
jmp
test
pop
mov
push
cmp
adc
scas
cmp
mov
cmp
xchg
inc
inc
nop
pusha
divb
adc
mov
inc
cmp
xchg
imul
pop
or
jle
dec
dec
adc
repnz
enter
test
and
ret
outsb
andb
loopne
nop
mov
pop
push
addr16
test
cli
push
stos
jp
cld
sub
out
stos
das
xchg
mov
pop
stos
movsl
pop
push
sub
andb
add
pusha
movsb
mov
test
cmc
icebp
adc
inc
mov
add
int3
movsl
pop
jnp
shrb
andb
pop
sub
lret
int
or
out
dec
vpmadcswd
mov
cmp
cmp
push
and
cmp
ds
fcmovnbe
xchg
pusha
std
stos
or
fsub
cmp
stos
call
jecxz
mov
cld
cltd
mov
xchg
arpl
dec
xchg
out
subl
adc
cwtl
movsb
adcl
rolb
cmp
jge
fwait
dec
cmpsl
adc
xcrypt-cfb
cmpsl
and
sub
add
and
or
faddl
ds
enter
adc
mov
cmp
adc
and
push
js
out
rolb
mov
mov
or
stos
xchg
inc
rcrl
mov
push
pop
sub
outsl
rorb
pusha
fwait
stos
repz
iret
jmp
mov
mov
push
xchg
loopne
sbb
mov
out
cmp
scas
mov
pop
xchg
popf
mov
cmp
pop
lcallw
repz
in
inc
decl
mov
pop
loop
int3
dec
or
test
fnstsw
test
lret
mov
dec
xchg
mov
push
push
dec
test
sahf
ret
jmp
out
or
jle
inc
adc
rcrl
mov
lock
int3
ffree
or
popa
inc
sub
repnz
cmp
xlat
add
pop
icebp
xor
jecxz
das
mov
xor
jg
in
stos
bound
clc
imul
xor
sbb
inc
dec
enter
daa
inc
dec
xchg
cmc
jmp
rorl
aad
sub
or
fstps
jbe
cmp
sbb
jmp
cmpsb
ret
sti
dec
or
push
push
fcoml
add
icebp
add
inc
out
cmpsl
mov
andl
jmp
dec
mov
aaa
es
mov
mov
add
paddsb
movsl
mov
fsubrs
inc
je
outsl
xor
daa
xchg
outsl
shlb
sbb
mov
and
dec
push
sbb
popf
dec
movsl
fisttpll
loopne
fcomip
ret
xor
fdivs
or
les
xor
jecxz
jnp
dec
lock
adc
sub
dec
pop
je
mov
sahf
cwtl
aaa
outsb
cmpsb
pop
les
pop
dec
jnp
push
sub
jnp
gs
mov
or
jp
into
mov
repz
sbb
insb
fidivrs
std
out
push
rcrl
loope
adc
push
xchg
dec
fs
add
fimuls
outsb
push
cltd
sbb
enter
mov
icebp
jle
sahf
ret
or
or
repnz
lahf
mov
add
fistps
pusha
out
xor
push
imul
shrl
je
and
out
inc
push
jg
sbb
push
shrb
and
lret
lock
nop
xchg
out
stc
fsts
sub
or
shll
lcall
loope
push
shl
push
clc
xor
imul
and
dec
fs
mov
stos
pop
lea
loope
movsb
xor
in
into
xor
pop
and
icebp
inc
addb
and
aam
sub
mov
hlt
sbb
inc
movsl
pop
fmul
mov
sarl
repnz
xchg
aaa
xchg
incl
and
scas
loop
jge
test
outsl
dec
call
js
xchg
fistps
push
mov
mov
sbb
and
dec
mov
andb
mov
sub
scas
dec
xchg
push
inc
shll
scas
sbb
sbb
loope
mov
push
in
push
and
and
ljmp
or
xchg
add
push
pop
xorb
jbe
fldt
shlb
fdivrl
xchg
sbb
and
sahf
shrb
dec
sub
cmp
fldenv
cmp
add
mov
adc
leave
cmpsl
xor
movsl
fs
call
in
cwtl
cld
shr
dec
mov
pop
mov
or
mov
sti
add
inc
dec
push
lea
sub
dec
mov
out
push
lock
ja
sbb
mov
dec
inc
sbb
and
dec
and
orl
scas
jo
push
addl
inc
cmpsb
mov
std
mov
sbb
xchg
xor
xor
in
push
ret
inc
cltd
stos
sub
push
and
loop
lret
sub
jns
mov
push
jae
nop
push
daa
sub
cmp
das
inc
pop
xor
pop
lock
push
and
mov
faddl
mov
stc
dec
ljmp
test
test
cmpsl
fidivrs
and
lahf
and
ret
sbb
mov
and
push
leave
push
xchg
je
mov
les
popf
std
jmp
cs
sbb
mov
cmp
mov
js
fisttpl
mov
mov
ret
jle
je
mov
xor
dec
jmp
in
inc
cmp
push
sub
mov
jno
and
and
mov
out
roll
shrb
mov
out
addr16
push
add
jecxz
xchg
mov
js
pushf
bound
sub
and
mov
xchg
dec
mov
pop
int
fcoml
pop
loope
jo
push
daa
sbb
sbb
mov
xor
xor
cmp
clc
lahf
fnsave
cltd
mov
pop
fucom
leave
push
les
sbb
lds
adc
sub
add
cmp
fs
test
andb
pop
mov
popf
cmp
mov
aam
xor
pop
and
cmp
jge
loop
or
je
iret
cmp
xor
inc
xchg
inc
mov
xchg
stc
icebp
fldenv
je
fbstp
sbb
or
ret
mov
xchg
dec
pop
cmpsl
out
scas
imul
xchg
jl
xchg
lods
adc
jecxz
mov
outsb
inc
sbbl
jb
pushf
hlt
fs
xor
inc
cwtl
cwtl
test
aas
lods
pop
fcmovb
pop
xor
sub
jecxz
aam
and
stos
popa
outsl
fs
add
aas
lods
sub
test
ljmp
pop
mov
lock
int3
jp
push
mov
dec
popl
addb
pop
test
out
out
pop
dec
sti
dec
lret
pushf
pop
pushf
lock
outsl
in
jge
outsb
sarl
cwtl
rcll
xlat
scas
testb
lock
jecxz
fwait
xchg
loopne
xor
lods
pop
push
push
mov
sbbb
sahf
lea
lds
mov
fcmovne
repz
scas
and
aad
jbe
inc
inc
ja
pop
divl
cmp
mov
divb
call
mov
bound
adcb
cmp
sti
xlat
repz
jnp
sub
cmp
lock
jg
push
mov
add
dec
sarl
and
xchg
lret
xchg
nop
xchg
ret
dec
push
std
mov
lahf
xor
xchg
mov
add
jno
mov
inc
adc
fcompl
push
enter
pushf
leave
adc
aad
and
mov
pusha
push
xchg
out
es
mov
mov
ja
shlb
es
leave
repnz
pop
stos
jns
mov
shlb
adc
jle
push
sub
mov
lret
cmp
stc
ficompl
xchg
in
popf
dec
push
in
loope
movsb
cmp
mov
orl
add
movzbl
movzbl
orl
jmp
insb
lods
push
repz
je
xor
or
xor
mov
add
push
cwtl
adc
repz
cmp
pop
fistpl
or
mov
and
and
add
adc
addr16
hlt
mov
les
jno
sbb
dec
jno
dec
adc
sub
loope
cmpsl
bound
rep
call
in
insl
push
mov
sub
jge
in
stos
out
fidivrs
mov
mov
cmp
mov
jnp
inc
xchg
loope
ficoml
lret
cmp
scas
jae
pop
out
sbb
add
popf
dec
enter
xchg
mov
cmp
push
repz
pop
add
shll
mov
jnp
addb
enter
mov
hlt
icebp
add
insl
or
shll
nop
gs
adc
jp
xchg
mov
or
pop
ret
ljmp
push
fdivs
testl
pop
sbb
outsl
add
pop
inc
adcb
outsl
pop
ret
loope
pop
cltd
xor
aaa
and
xchg
sub
or
stos
ds
xchg
mov
pop
sub
push
stos
sahf
daa
js
mov
and
cmp
mov
popf
sbb
inc
xchg
adc
rclb
lahf
out
mov
inc
div
pop
jbe
push
mov
fsts
sti
push
lock
fstpt
ret
mov
mov
push
xchg
popf
pop
or
dec
rorl
cmp
inc
mov
xor
and
cmp
sti
adc
int3
jmp
adc
dec
mov
inc
xchg
bound
add
std
leave
dec
nop
inc
adcb
xchg
stos
nop
cld
pop
inc
mov
xor
mov
int3
cwtl
pmaddwd
and
sub
repnz
jbe
pop
or
ret
nop
scas
cmp
hlt
pop
push
pop
imul
ss
xor
jnp
jmp
icebp
sahf
jmp
or
js
mov
int
dec
push
enter
call
aas
cmpsl
add
pop
mull
pop
pop
repnz
jle
xor
shrl
push
add
lods
iret
sbb
cli
fstp
xchg
sbb
xchg
mov
add
test
jp,pt
sti
rolb
cmp
adc
into
mov
xor
lock
dec
dec
stc
filds
fisttpl
cmp
ss
mov
inc
std
or
icebp
pop
mov
mov
cmp
add
pop
cwtl
sub
loop
push
lods
fimull
xchg
sbb
mov
xchg
mov
xchg
pop
add
and
cwtl
cli
lret
js
push
addr16
xor
cs
pop
cld
mov
sub
es
jbe
lahf
jb
sar
sahf
xchg
mov
mov
jae
shll
daa
std
jp
or
inc
cmp
sub
cwtl
cmpsb
sbb
adcl
shr
pushf
sub
pop
cltd
push
shll
shll
data16
call
jno
cli
jmp
or
pop
pop
stc
jmp
jle
mov
movsl
pop
or
aam
ja
cmpb
jg
les
pop
cmpb
inc
lea
jbe
jp
sbb
jne
in
or
fs
add
pop
lea
push
fisubrl
ds
push
popf
sub
addl
ljmp
fnstcw
out
adc
es
xchg
ss
lods
or
sbb
xor
cmp
mov
imul
fs
fidivl
jg
outsb
lock
cmp
shll
mov
sbb
sbb
ret
or
addr16
inc
adc
and
and
fistpl
push
mov
pop
cld
pop
push
lret
push
addl
jno
or
fiaddl
int
pop
mov
xlat
aad
in
jge
in
xchg
xchg
jmp
pop
xchg
mov
dec
imul
popa
push
add
xchg
cmp
jecxz
fwait
loop
cmp
notl
and
xchg
aad
push
ja
lea
lahf
mov
mov
and
in
pop
jo
jo
pmulhw
lret
imul
outsb
not
cmp
call
sub
mov
ret
push
mov
mov
roll
push
inc
sbb
hlt
mov
sub
adc
pop
push
and
xchg
gs
mov
ret
ja
jg
cmpsb
outsl
loop
popa
in
and
iret
adc
jne
xchg
lret
stos
mov
sbb
int
fs
popa
xchg
mov
lods
pop
dec
movsb
insb
pop
clc
out
rcrb
push
pop
sbb
scas
pop
mov
les
in
fisttps
adc
xchg
pop
jl
cmp
push
aas
xchg
xchg
jecxz
sbb
inc
hlt
fsubr
jno
mov
pop
jae
sarl
inc
mov
sbb
adcl
inc
or
sbb
jbe
inc
cmp
lods
lea
xchg
nop
mov
xor
cmp
mov
cmp
test
dec
in
rcll
sarl
push
out
dec
rcr
out
aas
push
cmpsl
pushf
fdivs
test
or
shrl
sub
cmp
jp,pt
insb
push
push
in
sub
cmp
sbb
xorl
xchg
and
addr16
fdivs
or
push
xchg
push
cmp
pushf
out
loope
xor
loop
sarl
inc
xchg
and
dec
out
je
dec
pop
pop
add
xchg
sbb
pushf
aaa
outsl
cmp
dec
and
add
aaa
adcb
add
stos
sub
adc
scas
xchg
rol
jle
sahf
fidivs
movsb
dec
inc
jp,pt
xchg
adc
sahf
mov
in
ds
rorl
sahf
lds
les
jmp
xor
inc
adc
add
stc
movl
mov
movl
cmp
movl
jmp
fidivl
push
or
fmuls
jmp
mov
or
syscall
inc
dec
jp
das
inc
push
pop
movsb
mov
repz
pop
ja
stos
fstps
in
movsl
push
xchg
sbb
hlt
push
pop
js
fwait
xchg
cmp
stos
insb
xchg
sub
outsb
adcl
test
sahf
bts
push
into
call
or
test
and
int
add
fcoml
adc
pusha
inc
add
pop
addr16
sub
add
stos
imul
repz
or
leave
addl
jns
sahf
or
xchg
and
addr16
cmp
lcall
aas
rcl
sbb
lods
push
mov
mov
and
lcall
jae
pop
xor
jno
xor
dec
ljmp
cwtl
rol
sub
dec
push
lret
inc
fidivrl
push
cmp
int
mov
and
mov
sbb
jg
xlat
fwait
xor
xchg
shlb
mov
dec
lods
lret
jmp
pop
pop
stos
pop
fsubs
inc
ds
out
popf
ret
or
jae
mov
insb
into
test
xchg
outsl
dec
adc
cs
pushf
lret
xor
push
inc
hlt
xchg
inc
cmp
xlat
in
cmp
cmp
cmp
lahf
sahf
xorl
mov
xchg
jo
fxch
dec
jbe
rcrl
push
mov
adc
nop
lock
dec
xchg
push
jge
push
imul
pop
sbb
pop
orb
cmpsl
rcrb
xor
mov
jo
mov
and
daa
mov
test
jne
out
pop
sbb
bound
push
sti
lods
xchg
hlt
pushf
dec
jae
addr16
sbb
mov
dec
outsb
fnstsw
idiv
insl
ds
mov
pop
jecxz
push
xor
jnp
lock
cli
mov
xchg
push
int3
scas
xchg
subl
iret
outsl
cs
sahf
or
sbb
mov
icebp
push
loop
loopne
mov
testl
adcl
xchg
xchg
xor
pmulhw
fucomi
shl
mov
sub
adc
mov
int3
or
iret
lret
inc
push
dec
lahf
ljmp
je
shl
mov
push
sbbb
gs
adc
jg
inc
je
enter
adc
sub
jno
sar
inc
add
test
push
xchg
jge
outsl
cmp
out
shlb
cld
sbb
rcr
std
fisubl
push
mov
sbb
add
pop
rcr
push
pop
sbb
cli
movsb
rorb
and
fstps
pop
xchg
xchg
mov
mov
jb
subl
xchg
hlt
addr16
cwtl
and
das
or
daa
fcoml
pusha
inc
jo
adc
insl
movsl
pop
sarb
aad
mov
shl
push
daa
scas
lahf
sbb
pop
call
jg
jns
test
adc
xor
lods
add
or
daa
push
sub
loopne
fincstp
repnz
adc
je
jp
and
ds
scas
lods
adc
pop
ss
testl
or
ljmp
dec
scas
push
push
jne
out
inc
sub
shl
or
lock
adc
mov
out
fbstp
cmp
xchg
lds
mov
add
jae
jo
xchg
out
test
jg
or
sbb
insl
push
mov
adc
xchg
inc
pop
lahf
jmp
fcompl
bnd
fsts
inc
arpl
das
and
push
cmp
loope
imul
rorl
adc
out
lret
mov
addr16
imul
xlat
shr
clc
es
mov
pop
sbb
dec
jg
repnz
lahf
inc
fldenv
frstor
fimuls
push
jne
test
leave
in
imul
sbb
fldcw
pop
or
sub
lret
enter
repz
arpl
mov
ret
inc
and
addr16
pop
inc
lret
dec
stc
ljmp
adc
mov
xchg
loopne
cmc
push
adc
shll
jbe
ret
push
cmp
sub
popa
leave
in
push
ret
sub
jmp
add
mov
push
push
lds
aaa
subl
movsb
pop
push
ret
cli
mov
popa
clc
test
jmp
push
mov
es
pushf
loope
lcall
push
enter
push
xor
mov
fcoml
sub
and
push
xchg
push
cwtl
pop
stc
filds
inc
sub
jno
mov
repz
sti
mov
outsl
inc
nop
fbld
lods
ret
es
ja
imul
mov
adc
mov
mov
aas
jb
xchg
add
mov
fsubrs
jp
fcoms
xor
mov
movsl
sbb
ljmp
mov
push
push
addr16
je
mov
orb
lret
cmp
mov
or
lret
in
xchg
pop
es
fldcw
mov
mov
fwait
ss
mov
mov
sti
arpl
pop
push
in
pop
cwtd
mov
sub
lea
sti
mul
mov
iret
jbe
sub
ret
lahf
scas
and
fwait
imul
popf
out
cmp
add
aad
mov
stc
leave
and
mov
test
push
nop
or
push
sbb
call
jbe
mov
mov
test
mov
mov
loop
nop
fidivrl
cld
in
data16
adc
test
mov
pop
sbb
enter
mov
push
enter
mov
leave
xor
dec
mov
hlt
repnz
in
jb
mov
out
jecxz
into
and
or
in
cs
pop
cmp
nop
jl
hlt
cmpsb
jnp
sbbl
movl
cmpl
jb
mov
sbb
jmp
push
call
movl
mov
mov
push
push
adcl
push
push
andl
call
xor
xorl
xor
orl
or
or
movl
mov
mov
mov
cmp
jne
mov
mov
jmp
mov
dec
and
xchg
sub
push
mov
iret
imul
punpckhbw
int3
jo
push
into
mov
in
dec
mov
sub
add
push
xchg
imul
sbb
lahf
rolb
or
adcb
mov
cmp
cmc
mov
mov
movsl
pop
je
adc
negb
push
push
sub
leave
fldl
shrb
xchg
rorl
rcl
push
int3
and
jp
imulb
lods
mov
pop
sbb
push
jge
jge
in
dec
and
xchg
lcall
in
addl
mov
inc
mov
popf
mov
mov
sbb
les
push
xor
and
in
dec
pop
cmpsb
jmp
push
adc
xchg
sub
out
rcr
in
xchg
push
lock
test
and
and
jmp
mov
clc
jbe
iret
in
repnz
dec
pop
movsb
adc
pop
stos
dec
mov
sub
out
lcall
xor
cli
cmpsl
jbe
mov
mov
rcrb
dec
imulb
push
cmp
leave
repnz
rorl
pop
mov
stc
or
faddl
outsb
repz
inc
fwait
call
fildll
addr16
fs
jl
pop
in
and
inc
sti
ljmp
mov
adc
lock
ficoms
push
dec
sub
stos
in
xlat
stos
xor
jle
hlt
nop
pop
scas
cmc
dec
push
rol
sbb
adc
loope
test
enter
xchg
cwtl
jecxz
jns
mov
jmp
lock
por
loopne
sub
xchg
in
out
insl
sub
ljmp
popa
cmp
arpl
out
xor
cmpsb
jecxz
sub
int3
mov
pop
lds
and
and
sbb
inc
push
push
sbb
push
fs
pop
icebp
in
xchg
add
repz
ret
pop
xchg
mov
fs
sub
loope
sti
leave
mov
and
xchg
mov
es
popf
fisttpll
xchg
popf
adc
pop
in
out
push
iret
add
jg
jae
pusha
adc
mov
js
dec
movl
js
push
push
les
or
rcll
xchg
xor
lret
hlt
push
roll
add
dec
int
adc
mov
popf
mov
mov
pop
clc
les
dec
add
lock
dec
sti
mov
int3
test
adc
out
cld
int
push
outsb
pop
arpl
add
mov
cltd
ljmp
ret
and
mov
inc
xlat
adc
insl
adc
fstl
fistpll
jb
jbe
jmp
out
xor
and
xor
adc
jnp
sbbb
adc
sbb
notb
incb
cmp
jmp
xor
push
mov
mov
test
pop
cmp
mov
enter
stos
leave
cmp
inc
mov
popa
jno
push
adc
lcall
sarb
les
sahf
inc
lods
stos
test
xor
ret
jnp
mov
pop
push
ss
dec
mov
xchg
out
gs
adc
cwtl
jb
pop
daa
sub
pop
shrb
int3
imul
inc
or
cmc
inc
mov
xchg
js
in
mov
and
outsl
pop
test
adc
sbb
ret
dec
mov
jne
push
lahf
fs
jne
ja
mov
lods
lea
push
scas
fmuls
mov
dec
movsl
imul
jnp
stos
imul
imul
outsb
inc
pop
cmp
sub
movsl
adc
lcall
cmpsb
cwtl
vsubss
test
hlt
and
and
sbb
push
pop
movb
mov
mov
adc
rolb
jp
sub
das
repz
aam
js
sub
dec
push
aaa
jmp
in
sbb
xchg
pop
outsl
ss
and
movl
fsubrs
add
cmp
es
mov
dec
inc
inc
rdmsr
adc
adc
jno
fldl2e
test
mov
xor
rcl
xor
mov
or
mov
repnz
fsub
sbb
popf
mov
insl
xor
xor
cmpsb
pop
movsb
test
sbb
pop
out
xlat
dec
dec
mov
sbb
pop
stos
push
and
and
add
sbb
sub
inc
xchg
dec
sub
mov
push
push
mov
cmp
ja
add
or
cmp
cltd
or
adc
push
inc
in
adc
and
hlt
xor
andb
sub
sbb
sarb
repz
sbb
cmp
dec
lods
dec
shll
fsubrs
mov
cltd
movsb
fidivrl
dec
loop
rclb
ret
xchg
sbb
push
ss
roll
jae
cmc
push
xor
out
ret
stc
stos
daa
lahf
mov
dec
mull
stos
fwait
and
lea
add
sbb
rcl
jg
outsl
sub
mov
movsl
cmp
lea
xchg
in
jge
mov
cltd
adc
mov
xchg
call
and
ffree
loopne
mov
aad
ljmp
mov
aam
shl
sbb
fdivrs
lods
mov
dec
out
push
inc
xchg
orb
repz
adcb
adc
pop
stos
ja
xchg
jno
jge
xchg
stc
sub
stc
test
lods
aaa
scas
pop
cmp
in
mov
or
cmp
jno
mov
add
rorb
xchg
insb
testb
and
xchg
incb
subl
xor
in
xchg
xchg
test
aad
push
sbb
jg
cltd
push
loope
mov
mov
mov
shrd
shl
mov
mov
shr
xor
mov
xor
or
mov
mov
mov
shrd
xor
shr
mov
mov
xor
or
mov
shl
push
pop
mov
mov
mov
mov
mov
sub
movzwl
mov
movzwl
cltd
jmp
jb
ffreep
push
aad
push
dec
mov
repz
rclb
invd
add
pcmpgtw
add
mov
cmp
addr16
sbb
lock
dec
sub
sub
mov
pop
imul
inc
je
jae
insb
ud0
mov
bnd
xor
enter
mov
sub
into
cmp
into
xor
scas
popa
fildl
daa
lods
fdiv
inc
sub
sbb
push
sub
push
dec
outsl
lock
add
cmp
in
push
lahf
cmp
xor
push
insb
out
aaa
lcall
push
sbb
xor
mov
push
stc
push
add
xchg
outsl
repz
push
xor
clc
xchg
imul
repnz
and
push
dec
aam
mov
ja
cmp
inc
dec
jb
iret
sub
daa
hlt
inc
jg
gs
leave
inc
fstp
sbb
and
mov
and
mov
adcb
aad
and
stc
lea
inc
push
and
adc
sbb
popf
lahf
out
mov
jmp
dec
mov
xchg
inc
jecxz
mov
and
les
dec
jmp
inc
stos
in
sbb
xchg
pop
dec
xchg
addl
sahf
test
dec
jg
mov
movsb
dec
xchg
lea
stos
jmp
pop
lea
mov
push
ficompl
ja
xlat
mov
adc
adc
jl
rcrb
adc
mov
xchg
aaa
in
stos
je
xchg
jp
cmp
sub
loopne
xor
enter
daa
test
popf
jns
in
in
mov
and
scas
int
add
leave
inc
and
test
cltd
test
jmp
sti
sub
loop
dec
cld
mov
xchg
cmpsb
in
xchg
loopnew
popl
movsl
mov
paddd
sbb
inc
gs
in
push
jbe
mov
pop
loopne
dec
cmpsb
xor
add
push
mov
cwtl
movsb
orw
cmp
cmpsb
mov
xchg
aaa
mov
rorb
das
cmp
gs
dec
dec
add
pop
jne
sbb
dec
fsubp
jo
aam
pop
and
dec
jl
cmpsl
push
mov
mov
imul
push
push
or
mov
in
xor
std
mov
je
or
push
mov
addb
pop
jg
and
mov
bound
jns
mov
push
les
add
xchg
out
mov
mov
fs
mov
rcll
jg
sub
inc
add
int
aam
add
jle
repnz
int
cmpsb
ja
jne
xchg
add
inc
add
dec
leave
testl
lret
mov
leave
lret
fistpll
mov
xor
pop
cmc
pop
loope
jo
imul
movsb
mov
add
inc
insb
mov
mov
enter
hlt
nop
push
ljmp
cmpsl
test
pusha
cld
pop
in
dec
add
xor
in
xor
clc
mov
jb
push
pop
dec
mov
xchg
dec
cli
sbb
aam
jnp
xchg
movsb
dec
or
lret
lret
stc
xchg
xchg
or
push
in
inc
pusha
cmp
xchg
xchg
imul
cld
js
push
jne
or
sub
or
loop
add
pop
mov
jp
pop
adc
cld
xlat
xchg
and
mov
mov
xchg
add
mov
pop
sbb
loopne
jo
sbb
add
loop
fwait
pop
test
fs
in
mov
movsl
lcall
nop
pushl
xchg
or
adc
mov
mov
daa
adc
xchg
adc
sub
jo
outsl
xor
in
ss
cmp
das
fnstcw
inc
push
sub
inc
dec
repnz
hlt
push
imul
inc
fcoms
inc
push
xor
aas
jmp
pop
dec
loopne
out
cld
dec
and
inc
int3
sahf
aam
and
std
cmpsb
nop
mov
es
dec
loopne
pop
inc
sbbl
pushf
jl
jne
mov
jl
popf
dec
sub
jae
stos
lods
xchg
pop
ret
sub
push
mov
rcll
and
test
fisttps
rclb
fiaddl
push
in
stos
mov
jg
adc
lret
xchg
xchg
mov
aam
enter
bound
cmp
sbb
xlat
or
cmp
sbb
or
movsb
int3
in
rorl
lods
mov
clc
mov
sub
add
sub
out
scas
push
jae
hlt
les
mov
rorl
in
lea
jp
scas
js
rcll
and
fs
pusha
sbb
leave
movsb
nop
lds
out
inc
xchg
divb
in
ja
jl
mul
and
push
cmc
or
pop
xchg
jle
mov
adc
cmpsb
pushf
push
ljmp
das
xchg
lcall
clc
cmp
jmp
and
scas
ss
lahf
sub
add
lret
jmp
mov
pop
jbe
cmpsl
pop
push
xor
sbb
mov
and
loop,pn
pop
test
mov
add
or
aas
xchg
add
test
pop
rcr
push
aad
cltd
cmpsl
push
addl
repnz
mov
js
pop
sub
lahf
sub
sub
clc
sti
add
test
dec
in
sbb
gs
dec
cli
in
jp
and
mov
adc
imul
xchg
jmp
insb
jno
icebp
icebp
and
rcl
outsb
aad
aad
fdivr
mov
loop
pusha
mov
es
adc
leave
push
xchg
insb
push
mov
push
push
stc
sbb
inc
lea
dec
or
fs
xor
cli
sub
adc
jne
push
cmc
sbb
mov
mov
push
jle
push
mov
or
jmp
pusha
lahf
aas
sti
aas
pop
or
ss
xor
dec
invd
add
psubq
inc
idivl
adc
xlat
out
mov
lcall
pop
xchg
inc
push
sbb
xor
cwtl
pop
xor
mov
lret
test
adc
loope
test
mov
jne
cs
cld
or
imul
pop
adc
pusha
add
xchg
sbb
ret
cmc
fcmovb
jb
cmp
dec
sbb
cld
dec
jp
int
cli
out
stc
and
lahf
jb
xor
icebp
scas
and
pop
pop
fadds
js
out
fwait
insl
mov
and
hlt
push
aam
dec
dec
cld
iret
test
arpl
push
insl
push
fwait
or
rcrb
adc
dec
push
dec
xchg
mov
push
int
inc
in
fisubs
loop
and
sti
ljmp
cld
gs
movb
push
sub
rcrb
pusha
and
lods
inc
clc
push
xlat
or
xchg
lock
add
xchg
insl
and
and
dec
es
lret
bound
out
mov
sti
push
jle
subl
pop
mov
test
pop
outsb
push
sarl
jb
fsubs
pop
cmp
sbbb
dec
add
adc
and
dec
imul
bound
add
mov
inc
stc
jb
cmp
into
leave
mov
cmc
or
rclb
loope
mov
mov
pop
stos
or
inc
test
into
dec
outsb
sbb
jbe
notb
test
inc
pop
and
sbb
lret
add
mov
inc
pop
xchg
add
adc
inc
cmpsb
loope
hlt
popa
inc
sub
fiaddl
mov
xchg
lret
icebp
cmpsb
adc
fisttps
mov
push
cwtl
cld
std
insl
dec
xchg
cmp
lcall
insb
outsb
mov
mov
fdivrs
jmp
push
push
daa
inc
mov
rcrb
sbb
mov
mov
addr16
or
push
loope
jmp
lret
pop
cmp
sar
xchg
mov
inc
iret
pop
scas
pop
jp
cmp
xor
nop
aaa
xor
fisubs
sbb
mov
loope
xor
fildl
push
or
jae
mov
je
cmp
les
cltd
mov
loop
loop
out
ja
xchg
sahf
or
movsb
out
imul
mov
inc
mov
xorb
out
xchg
mov
dec
pop
push
fs
jge
repnz
adc
cmp
aam
hlt
push
xor
andl
jg
out
scas
or
data16
push
adc
pop
add
inc
stos
or
sub
jns
pop
cmp
subl
stc
adc
inc
lock
mov
pop
push
sbb
roll
add
cld
lret
negl
add
clc
clc
dec
sub
fwait
cmp
xchg
jne
adc
imul
mov
out
cwtl
sbbb
es
dec
mov
out
popa
xchg
lods
aam
cmpsb
sub
dec
or
inc
push
cltd
ret
aaa
inc
mov
leave
fsts
jg
xlat
loope
scas
loope
test
sbb
mov
or
jg
pusha
aas
cmp
lods
mov
test
adc
out
int3
lds
mov
cmp
lret
or
outsb
mov
and
sub
in
sbb
push
fdivl
mov
in
cli
mov
mov
ds
inc
mov
fadd
pop
pop
cmpsl
sub
dec
lret
jle
mov
test
mov
std
add
stc
lods
xchg
xchg
jmp
push
cmp
jmp
or
xor
pop
and
push
cmc
pop
mov
filds
aaa
push
mov
sahf
loopne
insb
pop
mov
inc
inc
gs
loope
lcall
inc
push
in
out
cmp
fs
jns
aam
mov
jb
and
sahf
cltd
lret
cli
in
xor
jno
cmp
push
sti
int3
pop
sarb
in
hlt
clc
imulb
mov
mov
pop
repnz
xor
mov
js
call
sub
pop
stos
add
fisttpll
icebp
mov
jb
lods
sub
xchg
das
xor
push
aas
adc
adc
es
sbb
add
fptan
xchg
dec
bound
xlat
shrl
or
out
and
in
push
mov
jle
xchg
sub
gs
mov
cmpsb
ljmp
xor
imul
sbb
test
and
add
mov
gs
jmp
cmovle
ljmp
mov
xlat
lret
sbb
sbb
fistl
fsubl
cwtl
xchg
mov
in
shll
shlb
jbe
and
subl
fimull
adc
adc
xor
xor
test
add
push
test
mov
sub
mov
adc
lret
ss
sarl
popa
push
and
mov
push
icebp
insb
test
mov
mov
dec
clc
push
adc
insl
inc
mov
jp
inc
mov
xchg
push
repnz
xchg
test
push
inc
adc
jle
pop
cli
aas
or
xchg
pop
jp
sub
pop
xchg
sarb
and
pop
aam
stc
xlat
sbb
mov
or
loope
push
dec
aaa
mov
mov
lods
mov
out
mov
test
inc
xchg
int
add
sub
test
push
xorl
push
adc
pop
lods
cmc
ret
xchg
pop
sub
aad
int
push
adc
inc
popa
test
movsl
mov
imul
loopne
in
arpl
push
icebp
mov
dec
scas
int3
into
xchg
in
inc
mov
and
push
cs
sbb
lcall
add
mov
mov
mov
mov
mov
mov
mov
mov
and
mov
imul
mov
sub
mov
add
mov
cmp
jbe
mov
mov
shrd
xor
mov
shr
jmp
xor
xor
or
fcoms
invd
add
setl
ss
pushw
add
inc
shlb
sub
sbb
subb
inc
out
insb
int3
xchg
sub
sub
adc
jb
cmc
cmpsb
rolb
outsb
jg
adc
push
fiaddl
leave
xor
cmp
mov
pop
lahf
push
loop
inc
xchg
and
mov
rol
or
fadds
daa
xor
xor
sbb
jnp
adc
and
loope
daa
pop
stos
dec
jbe
inc
or
add
imul
in
lods
sub
jg
es
es
in
lods
movsb
leave
sub
pop
push
sbb
sub
pop
jmp
push
out
sbb
jp
leave
mov
outsb
xchg
sti
xchg
fs
sub
inc
mov
adc
push
xor
out
push
stos
sub
or
stos
ljmp
pop
sub
cmp
in
jge
pop
add
stc
add
lret
add
xor
mov
test
fwait
jecxz
inc
mov
fwait
dec
ljmp
push
push
xor
push
insl
adc
xor
movsl
mov
call
lds
push
dec
mov
cwtl
pop
repz
mov
dec
sub
jecxz
push
lds
mov
dec
aas
pop
sbb
les
daa
jg
cmp
cwtl
test
inc
and
sub
pop
rorb
cmp
fmulp
dec
in
dec
jno
lcall
fistl
test
add
pushf
js
inc
dec
data16
icebp
imul
jg
xor
xor
cmpsb
movsl
cmp
push
test
cld
in
mov
xor
jo
shrb
dec
or
push
jecxz
adc
xor
mov
or
mov
stc
arpl
dec
jge
mov
sbb
gs
hlt
push
jp
xor
add
ss
outsl
sti
enter
das
inc
inc
and
mov
rcr
in
sub
test
sub
aad
xchg
shll
jbe
xchg
ret
outsb
or
pop
loope,pt
jns
popf
bound
jl
inc
enter
lock
ficoml
clc
mov
rol
sti
int3
cltd
cmp
sub
mov
sub
rorb
ja
cmpb
cmpl
and
iret
inc
cli
mov
hlt
movsb
gs
je
jo
imul
jp
adc
pop
sub
adc
sub
mov
test
scas
sbb
jle
mov
ljmp
cmp
imul
dec
int
scas
stc
cmp
pop
and
mov
ljmp
mov
or
inc
xor
mov
push
add
in
shl
call
adcb
enter
insb
icebp
ret
stos
jge
push
pop
lds
sbb
dec
or
insl
xor
popa
popf
imul
mov
jnp
out
ljmp
push
cmpsl
insb
test
pop
adc
jp
iret
inc
push
je
stos
jb
jge
and
mov
jg
scas
mov
sarl
test
mov
push
ljmp
daa
hlt
mov
xchg
and
cmp
pop
movsl
mov
or
fscale
adc
jnp
test
mov
pop
lds
call
data16
out
arpl
mov
lea
in
daa
aaa
add
das
insb
or
mov
lock
sbb
or
ds
push
or
nop
sbb
and
rorb
andl
pop
imul
fdivrp
repnz
aad
push
roll
sbbb
cmpsb
in
jl
mov
dec
push
dec
lods
jle
shll
jmp
test
int3
popa
cmp
or
xor
xchg
movsb
mov
hlt
jno
mov
and
mov
popa
jae
push
adc
cmp
sub
fs
fxch
pop
jmp
dec
call
jmp
mov
mov
rcl
mov
fwait
jno
popa
int3
and
mov
div
jnp
jnp
imul
in
jl
enter
push
pop
mov
dec
int
inc
dec
push
int
sti
rorb
sti
and
ljmp
add
arpl
push
popf
adcb
xor
cmc
jne
xchg
ret
enter
cld
in
rol
pushf
cmp
mov
add
dec
leave
mov
and
cmp
div
psubsw
inc
notl
dec
pushf
xchg
xor
jb
mov
xchg
jl
popa
push
push
jb
inc
test
mov
xorb
ljmp
or
nop
lahf
shlb
es
stos
iret
mov
ror
rcl
lcall
stos
pushf
psubw
popf
sub
leavew
filds
dec
and
imul
mov
movsl
inc
jp
stc
jo
test
pop
js
dec
filds
fildl
jp
dec
lods
cmp
or
scas
sub
out
mov
pop
int3
adc
or
sub
or
mov
mov
sub
sub
shr
fisttpl
js
sarl
push
sub
negb
daa
xchg
sub
dec
iret
push
mov
daa
jbe
aaa
cli
pop
fsubrs
scas
mov
ret
gs
in
mov
inc
xor
jne
lret
cmpsl
in
sbb
or
lcall
mov
pop
jl
test
mov
shlb
mov
scas
in
test
adc
cltd
mov
test
push
stos
mov
std
in
pop
jl
fwait
and
cmp
push
pop
cmp
pop
icebp
pop
jo
addb
push
repz
xor
shl
jmp
push
mov
cli
sbb
fnstenv
dec
or
test
or
cmove
adc
fdivrp
stos
scas
aas
stos
hlt
aam
mov
and
pop
dec
sbb
xchg
scas
rcl
push
in
inc
fcmovnb
dec
push
and
loop
mov
xchg
xor
push
fmul
fildl
mov
into
pop
xchg
mov
loop
jb
movsl
gs
popf
adc
xlat
addb
sbb
iret
xor
add
push
push
pop
jno
add
dec
inc
andl
add
in
sub
faddl
scas
cmp
ljmp
out
rorb
adc
sub
ret
xor
rcr
inc
mov
sti
scas
mov
mov
xlat
sbb
std
sbb
aas
mov
movsl
dec
nop
in
and
inc
or
out
je
inc
add
mov
sub
adc
jg
insl
pop
xchg
rcl
in
stc
lds
popf
notl
loopne
mov
xlat
lea
js
pop
and
mov
and
pusha
shll
mov
adc
or
pop
cmp
adc
lahf
icebp
shlb
mov
shll
xor
mov
shlb
enter
or
popf
and
pop
in
push
inc
push
jae
pop
movsb
insl
lods
push
ret
push
rcrb
inc
mov
pop
push
push
inc
leave
shl
adc
mov
cli
jecxz
inc
mov
push
jns
xor
xchg
shlb
adc
pop
hlt
push
daa
adc
and
push
xlat
dec
sub
cmovp
mov
out
mov
jp
add
mov
pop
jo
mov
xchg
leave
in
movsb
add
stos
cmp
cwtl
sbb
jl
int3
lcall
mov
fdivs
in
inc
int
xchg
mov
dec
inc
and
ss
out
adc
jl
mov
out
lret
fwait
test
mov
mov
popa
sahf
or
hlt
mov
mov
mov
xchg
and
xor
movsl
int3
test
inc
or
stos
xchg
xchg
pop
ret
stos
xchg
pop
cmp
inc
jno
cmp
mov
sbb
inc
clc
sti
adc
xor
mov
sub
outsb
subl
cmpsl
testl
lea
xlat
cmp
out
int
xchg
fisubrl
xchg
fstpl
test
xchg
adc
fwait
cmpsb
sbb
int3
decl
pop
lret
in
dec
xor
dec
jmp
xlat
sbb
negl
adc
aam
imul
and
xor
mov
sub
rol
mov
les
pop
jp
cmp
ds
imul
in
and
or
sbb
sub
jno
lcall
dec
cmpsl
stos
es
daa
stc
jmp
lds
adc
xchg
gs
pop
inc
cld
add
pop
lea
dec
jge
cmc
int3
fistpl
mov
xor
mov
sbb
jmp
jno
push
push
push
bound
negb
stos
aad
push
in
jg
inc
sub
lahf
mov
mov
fistl
loope
sub
ja
std
les
aas
push
ret
hlt
inc
add
mov
les
repz
jl
es
lcall
pop
lock
aad
push
mov
lcall
mov
rclb
divl
xor
mov
jae
xchg
or
jg
push
lahf
adc
popa
xchg
mov
jb
test
dec
es
jb
imul
or
in
ljmp
xchg
lock
daa
lods
xor
mov
pop
or
inc
pop
inc
cltd
scas
dec
test
mov
lock
jl
lahf
into
aas
test
xorl
ss
cmp
hlt
sub
push
filds
aam
nop
cmpl
mov
mov
rclb
scas
aad
cs
lods
inc
in
xor
push
test
ret
or
outsl
mov
push
clc
adc
stc
mov
int
cmp
adc
fwait
xchg
xchg
mov
mov
jp
loop
mov
cltd
aam
xchg
call
cs
or
add
pop
sbb
ljmp
dec
out
xchg
outsb
loope
outsl
jmp
push
mov
lock
jne
mov
xlat
inc
inc
in
adc
fmuls
xlat
nop
in
popf
xlat
push
mov
ret
inc
adc
test
push
inc
or
scas
dec
adc
mov
push
mov
aas
movsl
test
loop
aad
mov
lods
push
adc
into
jmp
inc
push
dec
inc
and
insb
in
enter
rorl
xorb
in
stos
inc
sahf
notb
mov
push
add
ret
xchg
dec
ret
sub
fldcw
rol
jl
xchg
or
or
push
xor
lret
or
inc
push
sub
jle
lods
cmp
ja
rcll
or
mov
mov
int3
mov
in
add
push
push
int
test
das
leave
lret
push
cmp
inc
dec
shlb
cwtl
in
lock
cwtl
mov
jge
sahf
out
insl
pusha
pop
out
mov
mov
scas
mov
xor
mov
ss
xor
mov
imul
inc
rcr
jp
cli
or
frstor
sub
inc
icebp
or
jbe
inc
jmp
mov
mov
push
xor
or
add
addr16
push
outsb
push
push
pop
rolb
int3
out
inc
xchg
push
insb
mov
clc
xchg
test
mov
mov
test
fstl
dec
cli
dec
cwtl
mov
xorb
into
imul
pop
insb
or
mov
mov
dec
jb
js
addr16
out
movsl
ljmp
jmp
orl
inc
add
ret
mov
mov
ret
push
mov
sub
push
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
jmp
inc
mov
or
mov
mov
fimull
xor
mov
pfrcpit1
jmp
ljmp
inc
fsubs
lods
dec
xor
aad
mov
mov
mov
sbb
pop
outsl
fistps
loope
movsb
xor
push
adc
les
push
xchg
int3
and
and
pop
xchg
jp
cmpsb
out
sub
jnp
lret
and
sbb
jmp
shlb
jl
pop
cmp
andb
test
mov
add
mov
movsl
dec
jne
sbb
pop
je
leave
sbb
push
push
cs
jnp
in
mov
inc
out
sub
xchg
inc
shrl
fcmovbe
adc
int
and
sbb
sub
mov
mov
or
add
maxps
shrl
push
inc
stos
rol
xchg
add
xchg
fldl
adc
loope
and
mov
fisubrl
movsb
out
pop
mov
pop
mov
jnp
sub
xchg
stc
in
lods
jp
jns
cmp
lods
out
cmp
es
enter
push
cld
push
in
je
push
fbstp
lock
or
mov
test
mov
sub
mov
popa
xlat
cmp
hlt
cmpsb
inc
xchg
imul
add
dec
lods
pop
dec
iret
aam
mov
scas
cmp
in
adc
movl
lea
cmpsl
das
sbb
mull
pop
push
inc
dec
dec
mov
call
ret
test
sub
lcall
cld
mov
cmp
xchg
xor
dec
and
rolb
movsb
sbb
int
insl
sub
addl
xlat
aas
je
push
movsl
into
dec
daa
xlat
or
xchg
fcmovnbe
sub
xor
mov
xlat
sbb
test
es
inc
sub
lcall
mov
mov
pop
push
and
int3
mov
ret
pop
lds
je
adc
push
xor
in
mov
sbb
loope
inc
or
ss
leave
xchg
or
data16
cmp
cmpb
mov
dec
in
xchg
popf
repnz
cmp
cld
test
test
mov
inc
cmpb
loope
cltd
sbb
pop
orl
add
pop
sahf
jae
jl
sbb
les
cli
push
push
cmp
ds
fiaddl
ja
iret
mov
push
cli
adc
pop
and
sbb
xchg
jns
shrb
lods
add
sbb
push
cld
mov
fimuls
mov
add
lock
push
and
into
call
aas
jle
xchg
cmpsl
loop
and
arpl
ds
popa
push
fldcw
lret
cmpsb
jmp
add
mov
fsubl
aad
test
inc
cwtl
cmp
lret
xchg
xchg
sbb
push
sbb
out
outsl
or
pop
xor
adc
movsb
xchg
xchg
icebp
or
movsb
sub
xchg
cmp
es
cmc
lret
mov
xor
sub
mov
in
rolb
sub
fcompl
mov
jb
cs
imul
ret
jo
fdivp
cmp
xor
jbe
pop
test
xchg
rcrb
outsb
or
xor
cwtl
jne
jb
adc
imul
add
imul
pop
jecxz
cmpsl
mov
cwtl
or
mov
bound
ret
addr16
and
imul
shrb
and
xchg
push
jp
and
aaa
rcr
adc
inc
mov
mov
xlat
imul
enter
out
xchg
add
sbb
xchg
push
in
mov
inc
stos
nop
sub
leave
out
and
fcmovnu
mov
add
xlat
pop
sti
mov
iret
dec
cmpsb
mull
loop
mov
loope
adc
imull
dec
movsl
mov
pcmpeqw
loopne
xchg
fcmovbe
sub
dec
sub
std
inc
inc
jne
daa
mov
stc
sbb
lret
adcb
xchg
push
fisttpll
fsubr
push
insb
jae
inc
cli
add
roll
pop
dec
sub
adc
movzbl
cmc
dec
jmp
mov
out
jg
in
bnd
outsb
dec
repnz
mov
mov
and
sub
hlt
pop
out
stc
xchg
outsl
and
fs
sbb
jle
dec
movlps
or
push
clc
jl
jne
test
hlt
mov
dec
xchg
or
mov
push
xor
cmpb
fnsave
cmp
mov
rcl
cmpsb
mov
fmul
cwtl
cli
and
jne
xor
add
add
fs
xchg
push
insb
pushf
enter
xchg
mov
push
xor
push
add
cmp
mov
maxps
push
int3
mov
and
push
stos
nop
xchg
into
push
dec
push
aam
clc
sbb
les
jecxz
mov
aam
int
imul
cmp
xchg
jae
push
push
fildll
subb
jnp
outsb
call
jo
mov
dec
inc
int
int3
pushf
daa
pop
hlt
jmp
push
mov
arpl
sahf
jb
jns
xor
add
stos
ret
jmp
aam
in
dec
lock
lods
enter
repz
mov
loop
fsts
add
dec
adc
pop
cmp
and
fdivl
outsb
aad
sub
lret
pusha
scas
xchg
jne
push
js
sbb
out
outsb
or
inc
jle
sbb
pop
jge
nop
pop
push
fsub
or
xchg
call
inc
dec
sub
lahf
dec
cmp
aad
fstpt
mov
sbb
jne
rclb
je
nop
ror
pop
movsl
test
mov
xor
xchg
sbb
int3
movb
fldl
xchg
sbb
mov
jp
stos
aaa
out
jp
fidivrs
mov
dec
fdiv
mov
les
jmp
inc
and
mov
add
ret
popa
jns
outsb
adc
push
ret
cmpsl
callw
arpl
jo,pt
movsb
adc
pop
inc
xor
or
stos
inc
fildll
mov
or
fs
imul
aaa
push
xchg
sbb
shlb
fsub
adc
push
sbb
ja
lods
lret
dec
dec
test
jnp
push
scas
xor
xor
mov
cmp
jmp
or
mov
rolb
sbb
pop
dec
sahf
mov
mulb
cwtl
pop
xchg
lods
sub
push
arpl
test
xchg
je
lahf
in
push
add
sub
fmuls
lret
lods
mov
jecxz
xchg
mov
add
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
jmp
mov
ret
mov
adc
cmpsb
js
enter
sbb
mov
btc
stc
test
ds
adc
fsubrs
fisttps
in
xor
sbb
icebp
in
push
mov
and
lret
pop
adc
and
pop
cs
out
lahf
fstpl
sbb
fiadds
xchg
adc
jns
lods
push
xor
and
into
roll
push
pusha
cwtl
pop
adc
ret
xlat
test
jne
fisttps
fmul
std
fisubl
mov
mov
and
movsb
test
add
lret
adc
fiaddl
test
pop
lahf
setp
out
and
xor
mov
cmp
int3
cmp
xchg
in
add
test
jmp
bound
addr16
jg
sti
xor
jecxz
aad
nop
je
jle
mov
jnp
or
cmpsb
rorb
mov
mov
sbb
xchg
and
incl
and
xorl
mov
pop
xor
xchg
shlb
jp
gs
push
pop
roll
sbb
push
mov
insl
pop
add
rcll
inc
xor
cmpsb
jmp
lret
movsb
imul
and
xor
out
xor
add
shll
scas
add
dec
push
adc
ret
clc
call
orl
jnp
and
cmp
mov
pop
jp
inc
enter
fs
inc
mov
cmp
in
or
xor
insb
xor
cmp
push
outsl
rcrl
push
inc
test
mov
mov
rcll
add
neg
mov
jmp
xchg
lock
movsl
loopne
adc
xor
test
mov
aas
mov
or
inc
jns
sbb
incl
mov
aas
xchg
fwait
in
add
push
icebp
xlat
rclb
xor
scas
adc
mov
out
lods
and
cmp
sub
in
inc
dec
pop
sub
fdivrs
xchg
adc
add
je
bound
mov
mov
xor
jp
movl
xor
or
pop
adc
cld
push
mov
or
popf
out
cmpsb
dec
mov
lods
repnz
adc
jecxz
add
fidivl
lret
mov
cmc
push
hlt
cmp
push
in
adc
out
lret
or
imul
and
test
mov
jno
sub
xchg
push
insl
and
rdpmc
lock
aam
dec
xchg
or
mov
leave
loop
adc
pushf
and
lds
out
pop
sub
outsl
or
push
pop
out
in
mov
mov
movsb
scas
dec
push
sbb
imul
lret
sahf
xlat
dec
lods
repnz
jns
and
push
dec
mov
daa
icebp
iret
clc
es
jmp
and
sahf
cld
inc
xorl
push
js
fsts
loope
ret
cmpb
add
hlt
hlt
inc
jnp
inc
jns
repz
sbb
stos
push
push
pop
add
in
and
xchg
ret
jmp
mov
out
je
lret
lock
sub
sbb
push
add
xlat
and
push
orb
or
insb
add
jns
mov
ficoml
adc
jg
xchg
mov
test
aas
xor
in
dec
dec
cvtpi2ps
ret
popa
fnsave
xor
ja
mov
inc
xor
or
push
int
cld
stc
sub
mov
add
mov
pop
mov
lret
push
mov
shrb
add
jae
std
jge
xchg
lds
sbb
jnp
push
jecxz
imulb
and
int
into
pop
call
mov
cmp
daa
in
or
jle
movsl
les
js
ret
daa
stos
jp
xlat
test
js
cmc
mov
jae
je
sub
jp
stos
dec
je
lahf
daa
jle
xchg
pop
test
dec
leave
add
iret
mov
sbbl
icebp
jge
jo
push
fwait
add
fisubrs
outsl
adc
push
scas
scas
mov
lahf
ret
xor
sub
dec
sub
or
daa
pop
scas
pop
pop
add
jg
test
std
lret
and
jns
gs
cmp
adc
xlat
pop
fcoml
fcoms
adc
inc
mov
mov
mov
cmpl
jl
xchg
out
fnstsw
push
cmpl
push
leave
in
loop
cmc
push
dec
sbb
fmull
xor
jl
or
int3
in
loop
sti
fcompl
shl
sbb
fsubrs
fstpt
rorl
mov
inc
push
cltd
fistpll
mov
inc
dec
cmp
out
insl
popl
sbb
lcall
lods
in
lea
jns
mov
rcrb
ret
and
jmp
xor
rcr
mov
pop
jmp
sbb
jg
mov
or
lcall
aas
les
movsb
dec
mov
flds
pop
test
mov
gs
sbb
or
shr
scas
xor
or
dec
es
jne
cmp
inc
into
sarb
in
out
test
push
xlat
jl
mov
xchg
mov
dec
je
mov
mov
push
out
sbb
lret
push
jne
leave
push
sbb
outsl
outsb
ljmp
xor
ret
dec
test
jnp
mov
mov
mov
in
xor
cmpsl
xor
fists
negb
cmpsb
cmp
inc
in
mov
jecxz
andb
bound
dec
sbb
xchg
pop
mov
mov
pop
xor
aad
fmuls
in
adc
repnz
xchg
jmp
repz
mov
lods
cmp
je
cwtl
jge
mov
shll
dec
popf
dec
hlt
mov
testb
push
pop
rclb
insb
movl
frstpm(287
data16
repz
rcr
loopne
loope
mov
mov
push
lods
sbb
pop
xchg
mov
mov
sbb
popf
sbb
imul
pop
adc
insb
aam
dec
fcoms
call
mov
out
hlt
mov
xlat
icebp
mov
mov
ret
jno
test
jno
out
call
lock
hlt
movsl
cltd
fcomip
pop
jbe
insl
cmpsl
mov
loop
nop
sub
push
or
rcrb
aaa
push
inc
sarl
das
shl
mov
add
lcall
mov
sbb
std
ficomps
mov
mov
sbb
pop
xchg
insl
jns
imul
mov
insl
sub
scas
nop
out
jne
ffree
inc
ror
cmp
add
inc
aam
add
add
inc
fsubs
add
int3
mov
mov
add
jmp
pop
sbb
dec
mov
or
sub
xor
pop
pop
mov
jge
movl
add
push
pop
stc
test
cld
push
jb
stc
push
adc
or
cli
out
mov
inc
mov
sbb
mov
lods
push
lahf
insl
out
xchg
cmp
faddl
sub
lcall
push
repnz
inc
out
and
xchg
fwait
mov
sub
add
dec
sbb
jle
stos
subb
lods
add
mov
or
mov
and
xor
and
mov
repnz
or
or
add
jno
jne
sbb
or
mov
mov
scas
mov
pop
rclb
icebp
enter
cmp
leave
mov
and
cmp
popa
pop
pop
fs
movsl
cmp
sbb
jne
cmp
popa
arpl
lahf
lds
xchg
and
cld
jo
cmpsb
loopne
pusha
xor
shl
lret
cmp
add
push
pop
shr
roll
jg
arpl
loopne
mov
mov
call
or
leave
out
sbb
rcll
inc
aaa
and
mov
jbe
mov
cmc
jmp
pusha
rcrb
pop
jl
ficoml
inc
je
inc
lock
mov
push
mov
scas
adc
insb
mov
clc
or
pop
popf
add
or
loopne
loopne
test
pop
jbe
sbb
in
mov
out
das
jp
push
cmpl
imul
iret
mov
lods
xchg
jp
into
or
ret
adc
out
jl
mov
pop
cmp
cmp
cmp
or
jae
rorl
jl
and
in
test
jle
fcomps
push
sahf
fstpl
mov
dec
push
movl
inc
arpl
push
push
xchg
icebp
aaa
getsec
jo
rol
les
clc
test
mov
ljmp
dec
pop
sbb
dec
or
jo
xchg
int3
lret
push
icebp
in
adc
ja
adc
push
jae
mov
lret
jae
lret
cmc
shlb
js
add
sub
lret
adc
in
repnz
sub
xor
scas
xchg
rcrb
jbe
imul
or
push
fisttpll
popa
lea
cmp
shll
inc
push
xor
fldl
jb
or
mov
inc
or
add
xchg
mov
pop
loop
insl
mov
mov
addr16
lcall
mov
ss
or
enter
push
sbb
out
popf
pusha
cld
jno
pop
ret
ljmp
adc
xor
enter
repz
push
mov
push
mov
stc
cmpsb
in
mov
push
out
adcl
push
mov
pop
icebp
and
mov
mov
mov
inc
nop
daa
out
and
sahf
push
cld
adc
scas
pusha
cli
xor
cltd
sub
or
and
and
or
jno
inc
push
cltd
and
js
in
leave
jg
je
mov
loop
repnz
and
sbb
dec
mov
push
pop
xor
cmp
inc
out
fisubs
push
push
test
ret
xor
mov
js
stos
adc
cmc
test
cli
adc
ret
nop
or
daa
mov
scas
js
xor
imul
mov
data16
xor
fsubs
ror
addr16
adc
cmpl
xor
mov
xchg
rcr
out
lret
mov
dec
xor
xchg
sbb
pop
add
popa
movsb
into
andb
int
fsts
mov
in
sub
rcll
aaa
pop
fdivl
in
dec
repnz
data16
mov
cmc
sub
and
or
inc
addr16
out
fadds
adc
xor
sub
mov
cmp
dec
test
fwait
adc
jno
aad
xlat
sbb
jg
xor
lock
movnti
mov
inc
mov
movsb
movsb
les
test
mov
jge
movsl
in
mov
dec
fs
xchg
mov
clc
mov
outsl
xchg
cmp
pop
or
cmp
pop
bt
inc
cmp
loopne
fsts
sti
mov
ds
out
movsb
imul
cmpsl
testl
ja
repz
repnz
test
xor
add
mov
sbb
sbb
sbb
ret
push
xchg
xchg
mov
jge
leave
jecxz
and
push
mov
push
sbb
insl
lods
lods
pop
add
ret
test
and
lcall
ljmp
cmc
xor
push
dec
shlb
push
enter
adc
sar
ret
out
idivb
es
add
xchg
mov
xchg
xor
jl
mov
pop
push
fistl
pusha
sub
icebp
xor
sbb
inc
incb
iret
sbb
fidivs
xchg
es
mov
pop
std
mov
test
cmpsb
and
ret
repz
jnp
in
fcoml
lea
in
mov
in
insb
push
call
sub
icebp
in
imul
pop
mov
stc
inc
jge
testl
cmpsb
jae
xor
push
xchg
push
ja
in
mov
sahf
test
int
outsb
push
pop
cmpsb
rep
lahf
mov
fldl2e
dec
mov
cmc
std
fcmovbe
dec
adc
lock
pop
xor
loop
out
stc
ret
enter
loop
inc
test
inc
push
mov
ja
xor
pop
outsl
inc
mov
dec
adc
mov
push
sub
pop
cmp
idivb
mov
lret
lds
stc
xor
mov
mov
sbb
jp
jne
xlat
and
xchg
js
repz
into
loop
daa
mov
sti
or
mov
jno
fs
cmp
and
cld
push
xor
aaa
filds
hlt
pop
fnop
push
xlat
or
popaw
rcl
popf
fwait
adc
pop
add
cwtl
cltd
mov
in
fwait
lahf
ja
push
clc
call
sub
pop
sbb
mov
pushf
dec
xchg
and
lea
stos
ja
add
clc
je
jmp
mov
lods
nop
xor
popa
repnz
adc
mov
ret
hlt
sbb
adc
sarl
negb
addl
mov
addb
pop
add
xor
dec
fcomps
adc
pop
scas
cs
or
xchg
cmp
adc
jecxz
mov
xchg
pop
rolb
or
loop
outsl
rol
sub
fwait
jecxz
dec
cmpsb
fbstp
mov
ds
and
pop
and
outsl
add
or
xchg
int
dec
int3
mov
in
repnz
jmp
into
add
or
jg
loopne
sbb
adc
and
js
call
sarb
xor
push
aam
shll
sub
dec
xor
rcll
ljmp
lahf
pop
adc
stos
inc
mov
lea
xchg
xor
pop
jb
xor
mov
dec
subl
xlat
mov
xchg
jge
dec
movsl
cs
cmpsb
les
sub
sbb
dec
cld
adc
push
daa
xchg
xor
test
push
daa
mov
stc
lds
adc
push
sbb
sbb
adc
aad
movsl
sub
xor
and
mov
push
outsl
mov
inc
dec
arpl
and
jne
sub
rorl
jne
xor
cwtl
sbb
or
sahf
or
and
addr16
jns
sar
pop
arpl
push
jmp
ljmp
inc
push
push
subl
and
clc
out
push
repz
cmpsl
addl
cmp
pop
fcmovnb
pop
arpl
loop
xchg
fucomp
dec
repz
jb
stc
movsl
mov
shr
mov
leave
add
mov
cmpsl
fcmovnu
and
sbb
in
pusha
or
leave
in
lahf
jl
sti
sub
pop
add
lcall
sbb
shlb
int3
test
or
testb
inc
fcoml
sti
mov
sbbl
pop
pop
adc
or
mov
adc
in
jns
lds
xchg
dec
gs
sbb
stos
push
xor
mov
pop
lret
jns
add
pop
jmp
lock
xor
xor
mov
jnp
sarb
inc
mov
jecxz
test
es
rol
jmp
and
xchg
test
mov
mov
jbe
loop
jl
xor
repz
jnp
sub
mov
mov
stos
mov
push
and
mov
notl
jnp
sbb
xchg
fwait
pop
pop
imul
daa
fnstenv
add
pop
aam
mov
test
inc
inc
mov
inc
pop
shll
xchg
jo
sub
add
notl
scas
push
int3
int
sub
sti
inc
pop
jl
push
clc
adc
sti
aas
lea
mov
aaa
pop
cmpsl
mov
outsl
cwtl
xor
sub
pop
fldcw
cmc
xchg
movsb
rcrl
sub
mov
std
xor
xor
mov
insl
cmp
sti
fs
ljmp
or
mov
shlb
add
xor
jb
jecxz
fisttpll
inc
jecxz
inc
insb
test
ds
cmpsb
aaa
int
push
and
lods
lret
xor
mov
jbe
and
push
shrb
cmp
fldenv
push
mov
push
subl
ss
cmp
mov
adc
push
test
xor
test
arpl
call
movsb
int3
mov
xor
subb
add
test
or
scas
out
mov
xor
xor
add
and
es
add
mov
repz
das
popl
fst
leave
test
les
loop
jo
cmp
nop
sarb
sub
inc
mov
call
pop
pop
push
mov
mov
pop
in
test
lret
add
lahf
xor
jl
imul
pop
add
aam
jg
mov
jl
mov
jecxz
idivb
scas
call
leave
lret
adc
aad
mov
inc
mov
pushf
inc
push
in
popa
cmp
xchg
addl
and
test
inc
inc
and
aaa
dec
sub
mov
push
ds
sahf
cmp
pop
fxch
jl
add
adc
adc
int3
or
cmp
repnz
pop
cmp
rorl
insl
les
aaa
dec
hlt
sbb
sub
cmp
pop
dec
xor
lods
jle
inc
inc
insl
fadd
dec
and
ret
sub
sub
push
into
cmp
dec
mull
lcall
mov
addr16
add
pop
icebp
or
adc
mov
jbe
insb
daa
repz
mov
pusha
cmp
pop
xchg
sbb
scas
add
std
pop
das
push
or
push
je
cmp
pop
xor
sub
jns
cmp
inc
arpl
mov
sahf
pop
shl
test
add
subl
mov
jns
jle
ret
enter
dec
cmp
sub
sbb
and
hlt
into
mov
inc
inc
outsl
mov
punpckhdq
lret
cmp
pop
pop
add
adc
dec
cmp
inc
sub
inc
jae
das
xchg
mov
fwait
xchg
and
insl
repnz
xchg
push
sub
adc
mov
or
push
aad
fsubp
sti
mov
rorl
push
push
lcall
or
imul
outsl
into
mov
pop
inc
pop
adc
xchg
int
jb
mov
dec
jecxz
addr16
sub
sub
movsl
in
int
mov
lock
in
push
mov
dec
lods
outsb
sar
mov
cmp
inc
shl
and
inc
test
mov
xchg
jno
in
jo
and
inc
stos
jmp
xchg
pop
loope
in
jo
fisubl
mov
shrl
cmp
mov
and
xor
sarb
bound
mov
mov
lret
std
push
shll
mov
out
in
and
lods
cmpsb
call
scas
lds
cli
mov
mov
int
popl
mov
xchg
sub
lret
cmc
push
imul
mov
sbbl
jns
ficomps
sub
jns
push
sub
xor
nop
ljmp
or
fcom
push
sub
clc
or
lods
mov
fisubrl
push
sar
push
les
sub
mov
notl
shl
outsb
sub
push
xchg
out
lock
les
cmp
movsb
and
lahf
icebp
sub
jno
sti
or
or
mov
pop
pop
mov
push
xchg
pop
mov
push
xchg
int
div
jno
cmpb
mov
arpl
arpl
jo
call
je
imulb
lods
xchg
loop
test
adc
sbb
outsb
popa
leave
sbb
add
mov
clc
adcb
movsl
inc
push
insb
mov
lcall
cmpsl
insl
into
test
dec
and
rclb
testb
nopl
data16
jl
cmp
jp
xchg
test
inc
or
jne
push
insl
push
std
je
jae
xchg
xchg
sbbl
js
dec
lret
lahf
and
and
sub
mov
sbb
mov
add
adc
or
mov
mov
mov
or
add
cltd
adc
cmp
jne
cmp
je
mov
mov
mov
mov
add
adc
or
or
add
adc
xor
xor
mov
sub
mov
sbb
mov
mov
mov
xor
cmp
jne
cmp
jmp
pop
cli
pop
sub
or
dec
pop
nop
push
adc
xchg
daa
in
adc
and
jge
scas
in
dec
and
fldenv
frstor
inc
jle
in
fidivrl
or
jno
cmpsb
jo
aas
xor
movsl
jge
lret
sub
aam
jle
or
sbb
add
popf
or
cld
ret
lods
je
pushf
mov
or
sbb
aam
ljmp
mov
mov
mov
dec
movsb
lds
cld
fisubrs
mov
pop
out
xor
mov
setbe
test
stc
push
sbb
pushl
push
dec
hlt
ljmp
js
cli
fadds
ficompl
out
mov
cmpsb
dec
in
add
mov
sbb
mov
jl
xchg
or
iret
dec
in
sbb
xlat
pop
aam
cmpsl
jns
lret
inc
arpl
mov
ret
dec
movsb
pop
divb
bound
hlt
pop
mov
add
sahf
xor
mov
aam
pop
mov
ss
jae
or
ret
push
jl
imul
in
cmp
push
in
xor
popf
je
lea
test
inc
adc
rcl
fsubs
call
cld
leave
lcall
arpl
jg
popa
in
repz
cmp
dec
and
lods
dec
jge
mov
fwait
adc
or
les
sub
mov
inc
adc
jecxz
fimuls
jo
lret
ficoml
testl
mov
lods
popf
popf
xor
mov
in
push
lea
fimull
mov
dec
cmp
stc
ret
xchg
mov
mulb
testb
push
lock
stos
sbb
xchg
out
jg
mov
cmp
stos
cmc
jno
push
xorb
sub
pop
test
jnp
sbb
popl
lods
inc
dec
dec
ret
lret
pop
test
roll
loope
pop
pop
int3
jno
scas
push
imul
mov
dec
xor
into
nop
mov
insb
xlat
pop
adc
out
mov
fidivrs
pop
mov
insl
andb
movsb
jmp
outsb
add
sub
cld
out
insb
xchg
pop
stos
jp
push
pop
test
stos
jno
push
adc
mov
and
or
mov
jo
cltd
lock
out
je,pt
test
pop
repz
test
sarl
lret
fcomps
xor
ret
dec
ror
stc
popa
insl
cwtl
into
loopne
or
dec
mov
rcrb
xchg
lcall
fists
push
dec
in
pop
ja
jmp
iret
xchg
clc
das
cmp
cs
scas
jbe
jbe
inc
pop
jno
push
hlt
fidivrl
and
test
je
jg
faddp
fs
push
cmp
adc
rolb
cmp
pop
movsl
mov
sbb
jmp
sbb
inc
cmpsb
dec
out
in
or
mov
jl
dec
push
push
loopne
pushf
mov
jb
pop
jnp
sbb
dec
or
adc
fstpt
sbb
orb
push
gs
jae
pop
test
sbb
or
cld
cmp
mov
hlt
pop
xor
js
scas
sub
jl
pop
mov
dec
xchg
gs
addl
sahf
clc
xchg
mov
lods
xchg
sub
mov
inc
mov
mov
xchg
js
test
test
and
loope
jno
loopne
jg
cld
jl
sbb
push
leave
cmp
lock
push
int3
or
stos
cltd
leave
pop
xor
adc
adc
jmp
ret
jmp
cli
outsb
pop
and
setg
cs
sub
test
mov
mov
cwtl
and
sub
xor
icebp
loop
test
loop
sbb
in
sub
cmp
push
insl
in
sarb
pop
mov
cltd
mov
out
pop
int
push
push
imul
out
decb
jecxz
aas
or
daa
push
xor
dec
imul
and
dec
or
insl
mov
inc
or
stos
jns
mov
subb
fisttps
loope
mov
shl
sbb
in
pop
ret
outsl
mov
or
mov
dec
inc
push
fidivrl
outsb
and
popa
test
lret
pop
sbb
mov
in
and
imul
push
push
iret
jae
inc
in
clc
push
out
pusha
mov
addr16
pop
out
stos
push
mov
mov
mov
sbb
push
push
ljmp
aaa
icebp
or
lock
xchg
insl
pop
ljmp
dec
add
add
repnz
adc
xor
mov
xchg
mov
add
ljmp
scas
push
push
es
fisubrs
in
sbb
call
movsb
inc
dec
mov
dec
idivb
mul
std
dec
bound
sbb
cld
dec
xchg
mov
cs
iret
inc
adc
scas
cmc
fs
hlt
mov
mov
jbe
mov
repz
ja
jecxz
xlat
test
hlt
jns
sub
fsubl
jne
xor
lcall
inc
rcl
je
dec
in
aam
inc
cld
cwtl
mov
lcall
jnp
lods
xchg
out
push
fsubs
iret
and
shll
lcall
leave
arpl
jp
mov
jbe
in
into
mov
or
incl
mov
aad
je
frstor
ret
push
mov
movb
mov
aad
adc
stc
jge
imul
inc
les
mov
sbb
jbe
adc
xor
loop
mov
jge
inc
movsl
and
sub
stc
mov
std
int
or
ficompl
xlat
aad
ret
in
daa
dec
xor
xor
xlat
int
dec
int
mov
sub
push
push
dec
aas
les
cli
ja
nop
inc
mov
add
xlat
pop
clc
cmp
mov
mov
pop
sub
addr16
cmp
test
mov
frstor
sbb
push
sti
pop
shrl
mov
aaa
lods
fiaddl
push
mov
sbb
in
adc
jecxz
lods
push
lds
daa
js
nop
jle
inc
and
or
add
adc
dec
sub
push
and
repnz
xlat
inc
mov
lcall
mov
test
imul
cmp
aam
sub
sub
mov
sub
lods
or
jmp
pop
sbb
mov
lahf
ficoms
sub
fisttps
jno
xchg
push
push
inc
mov
or
fs
jg
sub
ljmp
sti
clc
imul
push
sub
mov
add
iret
lds
jne
mov
add
imul
xor
mov
div
jmp
lret
pop
cmp
adc
gs
adc
and
push
jle
mov
iret
sahf
sahf
fcomps
mov
jl
fcmove
mov
and
inc
cmovb
inc
out
lret
scas
call
add
mov
arpl
mov
mov
popf
test
cwtl
mov
xchg
nop
rorb
sbb
nop
jae
inc
fdivrs
cmpsb
sbb
les
xchg
stc
fs
xorb
sub
inc
mov
add
stos
filds
call
push
ret
test
cltd
jo
inc
aas
lret
and
push
pop
jle
lock
mov
mov
popa
test
les
stos
adc
iret
sbb
stos
cli
mov
pop
movsw
dec
test
xlat
sarb
xor
inc
jl
mov
jns
lea
jo
pushf
fbstp
das
add
cmp
int3
aam
pminsw
fdiv
repnz
dec
xchg
mov
test
cmpb
cwtl
sbb
dec
cmp
test
dec
add
jge
mov
dec
adc
jbe
std
pop
add
jnp
mov
xlat
add
cmp
sbb
icebp
mov
add
push
push
mov
mov
mov
mov
fiaddl
aad
jmp
mov
ds
sub
inc
icebp
pop
cmpsl
sbb
pop
push
mov
xchg
cmp
cwtl
out
mov
sub
push
adc
mov
movsb
cmp
pushf
lahf
add
mov
in
cmp
daa
mov
dec
mov
mov
lret
push
xchg
bound
stos
outsl
and
into
stc
mov
sbb
dec
inc
std
ljmp
xchg
std
ja
mov
xchg
es
sub
into
popa
out
pop
sub
data16
sub
adc
into
pop
repnz
repz
lds
push
adc
test
fildll
sbb
leave
out
jge
jo
xchg
jmp
in
pushf
pop
lahf
xchg
jmp
jb
mov
xor
out
es
mull
rol
jno
in
pop
repnz
xor
out
cmp
xchg
clc
out
xor
cmpsl
mov
mov
sub
mov
push
pushf
adc
xor
inc
xchg
mov
mov
das
fisttps
adc
loope
cld
imul
je
and
xchg
pusha
cmp
fidivl
mov
inc
popa
aam
push
sub
xchg
jne
sbb
sub
out
insb
jmp
jecxz
ds
pop
dec
inc
shl
dec
movsb
pop
pop
adc
shl
xchg
sbb
pop
sub
mov
dec
sbb
fstl
fdivs
in
sub
add
xor
les
stc
dec
out
loop
ret
popf
push
or
or
ret
outsb
adc
dec
test
enter
pushf
aad
adc
add
jbe
push
mov
xchg
push
adc
add
sti
loop
xchg
mov
adc
mov
bnd
jnp
sub
or
jae
sub
lods
dec
data16
pop
les
repz
push
jl
jno
aam
dec
shll
sbb
int
gs
sub
inc
scas
jnp
ret
mov
add
jp
fs
lods
in
ja
cld
xchg
mov
rol
adc
daa
cmpsb
mov
jl
sub
mov
fcomip
lret
xchg
out
scas
gs
into
lret
pusha
mov
pop
mov
push
or
pop
jns
jle
mov
push
in
and
push
pushf
or
sub
adc
loop
pop
jl
icebp
loop
or
aas
push
push
pop
xor
dec
cwtl
xchg
add
push
int3
clc
mov
lock
mov
xchg
or
pop
outsl
stos
lods
and
adc
shlb
in
sbb
shlb
sahf
clc
mov
push
frstor
cmpsb
dec
and
das
cs
add
sbb
inc
push
adc
jae
xchg
xor
mov
int3
inc
sbb
sub
jle
into
ljmp
fs
rcl
xor
lock
shll
orb
popf
push
fsubrs
dec
sub
je
loop
addr16
or
dec
adc
jg
das
push
inc
xchg
pop
jne
jge
movsl
aaa
lret
add
movsl
sbb
lret
movsl
push
pusha
mov
out
cli
inc
sbb
dec
les
shrb
sbb
subl
or
add
fimull
inc
xor
daa
mov
adc
cli
push
pusha
fwait
iret
sbbb
or
and
ret
rclb
jp
jo
push
pushf
int
call
imul
ds
mov
inc
mov
dec
sarl
xchg
mov
adc
lods
push
aaa
je
btc
outsb
mov
daa
sbb
call
and
lcall
dec
testl
adc
cs
xor
cmc
out
or
xlat
add
inc
aaa
lods
mov
cmp
cli
lret
in
lods
jl
push
fnstsw
int3
xchg
and
jns
push
cwtl
inc
scas
pop
andl
iret
loopne
orl
xor
enter
sub
and
add
adc
push
decb
fwait
cmpsb
dec
or
cmc
sbb
daa
cmp
fwait
les
inc
xchg
sub
jecxz
push
mov
sbb
icebp
test
or
cmp
push
inc
mov
xor
lret
or
popa
out
jge
mov
mov
ss
inc
jno
and
dec
add
scas
out
xchg
lahf
aaa
push
mov
xor
cmp
addr16
sbb
ja
decl
sbb
adc
ret
adc
add
ret
stc
aaa
sub
aas
push
dec
mov
ds
sbb
shlb
add
les
stos
jne
push
sub
loop
pop
push
jnp
mov
pop
out
xchg
outsb
dec
ljmp
das
xor
ss
mov
inc
lret
xchg
or
jmp
lret
inc
aas
daa
mov
and
addr16
cld
mov
lock
js
lds
push
sbb
and
fcompl
push
iret
inc
dec
fstl
popf
pop
int3
inc
stc
xor
or
test
inc
call
rorl
lret
dec
loopne
test
pushl
cmp
inc
cmp
test
jge
lods
imul
mov
je
push
xchg
pop
dec
jae
mov
pop
push
fnstenv
fmulp
andb
dec
mov
mov
call
js
sub
sub
mov
add
nop
pop
add
cmc
xchg
cmp
push
mov
adc
fidivrl
mov
inc
xchg
call
sahf
adc
cltd
fidivrl
nop
sub
inc
test
pop
and
shlb
clc
hlt
repz
fsubrs
loope
xor
push
rcr
pop
dec
mov
or
jnp
lds
adc
jecxz
xchg
dec
pusha
in
xchg
jp
into
mov
fisubs
adc
and
addb
aad
loope
je
mov
xor
out
pop
lds
inc
push
jmp
insb
and
hlt
adc
fwait
or
adc
mov
adc
add
push
mov
pop
xor
lds
push
xchg
jg,pt
xchg
jo
mov
mov
inc
dec
mov
les
push
sub
outsl
ret
push
pop
adc
and
jl
movsl
mov
lods
lcall
mov
mov
push
push
push
je
jecxz
insb
xchg
dec
mov
in
push
jp
pop
inc
sub
mov
add
cmp
dec
jns
cmpsl
in
and
shll
ret
xchg
sbb
adc
xchg
add
int
int
test
js
subl
idivb
mov
jle
sti
inc
jns
add
cmc
xchg
mov
call
pop
out
mov
sub
adc
fbstp
test
push
jmp
jnp
mov
mov
in
sub
sub
mov
pop
stos
and
mov
cmp
dec
lock
nop
sub
jnp
mov
ret
aas
out
adc
adc
pop
xor
cli
shl
xchg
cmpsl
cmp
jp
sti
xchg
push
and
xor
int3
xchg
xchg
fmuls
movsl
jae
push
lea
push
lds
insb
ret
fimuls
shl
adc
push
mov
rcrw
jmp
sbb
dec
mov
adc
cmpsb
cmp
sub
fwait
mov
sbb
data16
test
mov
in
add
cmp
adc
xchg
jb
stos
ljmp
jae
movsb
jle
sub
push
or
loopne
das
dec
xchg
mov
outsl
lea
mov
mov
push
push
jg
push
in
xchg
xchg
fsts
push
and
and
mov
dec
xchg
xorb
test
testb
mov
adc
leave
cmpsb
je
sub
mov
push
cmp
inc
sub
rclb
push
test
dec
inc
push
sbb
xor
jbe
xor
stos
sbb
and
push
push
aas
insb
dec
cmpsb
in
mov
jnp
inc
loop
faddl
scas
andb
sar
lret
jle
aad
les
cltd
stos
mov
sbb
rorb
mov
addr16
and
test
inc
insb
mov
dec
js
daa
movsb
fnstsw
xchg
daa
adc
xchg
cmp
jmp
shlb
push
inc
jmp
fwait
xchg
shrl
js
jp
cmpl
xor
es
cmp
sbb
daa
popa
enter
xor
lcall
pop
xchg
xchg
pop
mov
loopne
repz
pop
adc
cld
push
out
adc
dec
cvtdq2ps
testl
jbe
js
push
sbb
dec
push
pop
repz
push
dec
mov
mov
add
in
mov
lods
sbb
test
pop
mov
jns
push
pop
cmpsl
push
jne
xchg
mov
jl
xor
outsl
pop
imul
out
jg
hlt
adc
xchg
pusha
jp
test
stos
adcb
lahf
push
push
xchg
mov
sbb
je
ljmp
shlb
mov
test
mov
mov
push
cmp
lock
fcmovbe
or
scas
sbb
cmpsl
push
nop
dec
rcl
rolb
stc
pushf
xchg
mov
ret
add
pop
ds
jnp
xor
mov
hlt
into
mov
test
lea
popf
cmp
push
adc
sbb
xlat
fs
fcmovb
mov
push
mov
jle
mov
mov
xchg
pushf
mov
out
jno
sahf
dec
cmp
cmp
dec
filds
xorl
sub
imul
mov
bound
shlb
mov
sbb
cltd
adc
cmp
jge
mov
sbb
outsb
leave
call
out
popf
jecxz
fsts
sbb
aaa
inc
xchg
dec
sbb
pop
dec
sbb
lock
sub
dec
xlat
sub
jl
lods
push
xchg
cmp
mov
push
adcl
cmp
mov
bnd
lahf
mov
jno
push
dec
cmpsl
sbb
push
inc
std
lock
xor
sub
add
cmc
mov
cmp
adc
fwait
and
cmp
xor
into
stos
jmp
enter
sahf
pop
fs
mov
int3
add
in
pop
rclb
adc
xor
pop
idivl
cmp
mov
xor
movsb
ds
inc
bound
or
ret
fiadds
mov
adc
scas
mov
cmp
sub
clc
push
mov
adc
mov
mov
aas
sbb
enter
outsb
inc
mov
movsl
push
out
xor
dec
xor
and
jmp
mov
in
dec
mov
in
cltd
and
aaa
es
ret
in
push
ljmp
lret
push
insl
pop
jo
jp
dec
mov
xor
dec
cmp
dec
sarl
and
mov
ja
cmp
xchg
mov
pop
fistpll
mov
dec
mov
adc
pop
lods
call
stos
push
ja
fucomp
in
dec
or
call
lds
mov
pop
sbb
pop
fcmovne
pop
clc
repnz
xorl
push
pusha
mov
sbb
dec
sub
sbb
cmp
sbb
dec
jle
js
aas
rol
dec
fldl
cmp
mov
mov
insb
negl
cmpb
adc
int3
push
mov
mov
push
test
sub
dec
or
or
sbb
and
xchg
pop
imul
cmp
mov
outsb
mov
stc
outsb
popl
cmp
jbe
xor
add
rol
out
mov
mov
push
scas
out
scas
cld
push
data16
push
lods
out
lock
outsl
fs
ret
push
xchg
stos
mov
lods
inc
stos
stos
adc
push
mov
mov
pop
cli
in
mov
subl
sbb
sbb
pop
xchg
repz
pop
lods
in
push
pop
mov
jnp
xchg
push
xor
add
xor
mov
mov
sub
mov
and
div
mov
mov
and
sub
imul
add
jmp
scas
fldl
movsl
jl
stc
mov
xchg
mov
and
jne
jmp
push
movsb
mov
inc
pop
sub
nop
jmp
and
mov
mov
adc
mov
daa
and
mov
loopne
add
cli
add
mov
xor
xlat
push
add
add
xor
jecxz
sbb
and
sbb
fld
push
fs
popf
sbb
dec
sahf
in
mov
ffree
fidivrs
and
xchg
cld
jae
sbb
mov
ja
mov
mov
jno
push
fistps
mov
inc
sbb
cs
rclb
lret
je
ret
mov
push
adc
mov
add
jae
test
inc
xchg
push
add
call
xchg
mov
arpl
xchg
and
cmp
fdivs
jle
test
addl
imul
rcrl
pop
fcmovb
mov
nop
mov
addb
loope
fdivl
fisttpll
jae
cmp
stos
mov
xor
sar
daa
or
dec
mov
ud2
jg
addr16
cmpsl
out
cmp
add
sub
jne
xchg
gs
in
cmp
push
inc
rorb
or
test
xchg
inc
lods
inc
ret
xchg
mov
pop
cmp
mov
jl
mov
pushf
fadd
mov
test
out
push
add
lock
lock
cltd
or
push
jns
stc
mov
and
shrl
sub
fs
add
testl
or
cmpsl
sbb
jnp
insb
mov
ficomps
xor
add
push
inc
and
neg
shr
js
fs
shr
dec
jb
bound
fsubl
andb
loopne
bound
imul
nop
xchg
mov
clc
xchg
iret
stos
add
mov
enter
loopne
lret
dec
scas
aaa
and
mov
xchg
xchg
test
sub
out
fldl
lahf
jp
cmp
jmp
or
fdivl
sbb
cmp
movsl
outsb
push
or
inc
xor
xchg
mov
aam
sbb
jmp
je
and
mov
popf
test
imul
in
stos
fdivrl
leave
inc
cli
jle
mov
imul
dec
fwait
jo
adc
mov
or
inc
enter
add
sbb
sub
shlb
xchg
xor
rcrl
int3
and
shlb
inc
out
int
cmc
mov
xlat
jbe
fwait
xchg
repnz
inc
lock
push
addb
lahf
jbe
popf
sub
dec
xchg
es
imul
pop
inc
adc
mov
addl
adc
ljmp
xchg
test
dec
inc
test
sti
add
leave
mov
in
dec
cs
dec
icebp
pop
mov
lods
inc
mov
or
inc
pop
xor
imul
cmp
shrl
and
fsubs
pmulhuw
adc
dec
push
daa
push
xchg
clc
cmp
lret
fildl
jmp
lods
mov
adc
pop
xchg
push
cmc
aam
into
mov
addr16
arpl
fnsave
jge
inc
mov
mov
sub
mov
mov
in
jo
lds
jge
mov
pop
push
cmpl
pop
inc
xor
add
cmp
and
aas
sbb
mov
je
scas
and
je
pop
js
adc
clc
add
push
inc
lahf
lock
mov
fnsave
dec
jmp
mov
and
cmp
or
fisttps
mov
mov
jns
cltd
cmp
pop
lods
sbb
fidivs
test
fdiv
imul
jbe
mov
ret
addr16
add
ss
dec
sub
outsl
mov
dec
test
fwait
cli
push
int3
mov
mov
push
mov
sub
push
and
dec
inc
sub
dec
cmp
inc
and
cld
cmpsl
xor
int
fnstenv
pop
and
push
mov
or
xchg
filds
inc
stc
in
repz
push
test
cs
loope
scas
or
push
fmul
mov
imul
popf
xchg
sbb
subb
cs
xchg
shlb
mov
sub
test
cli
mov
mov
jp
imul
mov
cmp
cmpl
mov
lcall
jae
jecxz
or
jnp
hlt
pushf
ret
cltd
inc
pop
loop
pusha
xor
push
test
cmp
ljmp
movsbl
adc
jne
cmp
push
pop
insb
fbld
in
loop
gs
jb
test
in
inc
or
pop
adc
mov
fs
mov
sbb
ret
xor
pop
jg
sub
xchg
shrd
imul
sbb
jl
adc
jg
pop
jg
cltd
dec
aad
jbe
and
push
add
out
insb
push
pusha
push
adc
push
enter
repz
add
testb
push
adc
mov
into
push
aam
jnp
loop
cmpsb
add
stos
out
cmp
mov
add
fstp
and
or
jb
fs
into
test
pop
loop
mov
hlt
fadd
sbb
push
jne
push
cmp
sbb
or
inc
mov
push
daa
sub
icebp
daa
jae,pt
test
adc
popf
xor
inc
xor
out
xlat
mov
mov
jbe
movsl
xchg
int
loopne
notb
mov
add
cmp
sbb
pop
std
sbb
cmp
inc
xchg
cmpl
out
pusha
lret
sti
xor
je
jecxz
pop
mov
cld
outsb
lea
inc
cmp
rorl
xchg
cmp
adc
push
shl
pop
cli
sti
xlat
lods
jae
fisubrs
popa
sub
xchg
mov
cld
outsb
mov
mov
les
xchg
std
insl
mov
cmp
cld
mov
into
xor
fwait
xor
enter
push
dec
mov
inc
jp
std
xchg
push
aam
inc
ret
dec
push
mov
idivb
aaa
xchg
jne
imul
mov
lds
in
push
int
mov
es
push
test
out
push
lret
arpl
lds
jmp
mov
enter
push
sbb
add
decl
in
mov
cltd
sbb
add
lods
stos
add
sub
out
mov
scas
or
sub
mov
in
adc
mov
dec
adc
jb
dec
xor
mov
inc
outsl
hlt
xchg
mov
xor
and
jmp
jne
add
subl
xchg
inc
cld
stc
mov
adc
and
mov
add
mov
and
iret
mov
lret
fmulp
add
xchg
int
xchg
or
jp
rol
fstpt
lret
cwtl
jb
aaa
cmpsl
mov
test
aam
push
and
mov
or
sbb
add
dec
dec
repz
or
arpl
jno
push
inc
outsb
mov
jnp
fwait
das
xchg
leave
dec
ds
popa
int
jge
jg
and
cmp
mov
inc
xor
scas
test
cwtl
lock
dec
data16
jl
mov
jno
out
inc
enter
imul
push
das
xchg
cmpsl
lret
cmp
mov
pop
mov
sbb
xor
aam
cmp
insb
mov
ret
jl
les
mov
xor
push
push
rorl
mov
sahf
out
push
cmp
out
adc
stos
xor
push
jl
lret
lds
stos
and
loop
lock
mov
ss
jp
mov
push
scas
jno
xchg
data16
arpl
dec
jne
sub
and
jp
in
add
test
mov
dec
aas
sbbl
aas
jle
andl
aam
mov
pop
dec
cmp
pop
xor
xchg
inc
lods
inc
mov
sti
mov
mov
iret
dec
xor
adc
mov
ret
xor
jle
mov
cs
ret
les
pop
pop
subps
cmp
imul
fistl
xor
fs
in
in
fs
ret
inc
mov
hlt
sbb
sbbl
in
xchg
xor
sub
inc
fildll
mov
xchg
fsubrp
aas
in
adc
call
mulb
inc
dec
inc
push
sub
shlb
mov
std
ret
lret
stos
dec
outsb
ja
dec
hlt
inc
dec
popf
push
pop
divl
adc
ss
out
lods
lods
jle
jle
lods
shlb
xchg
push
inc
xor
add
cwtl
test
jbe
das
jecxz
or
dec
push
dec
push
insl
adc
mov
lods
xchg
icebp
lods
ljmp
inc
push
xchg
in
roll
lret
add
fstps
in
or
sub
mov
sqrtps
xor
mov
loope
ret
inc
scas
adc
sub
ljmp
int
xorl
jno
mov
push
lahf
movsl
sub
mov
jns
or
roll
insb
popf
das
sub
push
lea
mov
mov
js
lods
imul
jnp
mov
pop
inc
cmp
fld
mov
jno
cmc
rorl
mov
inc
lea
rclb
or
and
xorb
cld
adc
outsb
jo
push
jnp
arpl
inc
shlb
fidivl
jecxz
jle
lret
push
mov
ret
xchg
ficompl
sub
mov
mov
je
movsl
xchg
lock
addr16
filds
adc
sahf
cltd
lds
and
or
sub
in
mov
pop
sub
pop
jno
ret
mov
int3
or
ss
in
dec
pop
jmp
repz
xchg
and
pop
jbe
addr16
sbb
sub
pop
out
sub
lcall
icebp
sub
in
jae
rcll
mov
aas
pop
daa
dec
push
mov
mov
incl
cwtl
movsb
push
mov
and
mov
popf
andb
pop
pop
mov
jl
iret
mov
or
xchg
test
xchg
clc
scas
push
sbb
es
pop
sbb
xor
pop
test
aam
push
test
inc
push
jb
mov
sbb
imul
mov
inc
in
icebp
push
popa
push
fld
jo
inc
adc
hlt
jae
arpl
jae
push
jge
mov
cmpsb
in
or
cld
dec
insl
enter
mov
and
xor
es
xchg
pop
fnclex
inc
movsl
into
test
lcall
pop
inc
sub
cmp
or
inc
iret
ret
aaa
lods
mov
dec
or
mov
leave
push
add
in
add
xor
fneni(8087
dec
ljmp
scas
and
cmp
jmp
jbe
mov
mov
test
adc
iret
lods
mov
cwtl
or
cmpsb
pop
loopne
jnp
mov
mov
jle
ljmp
xchg
sub
dec
icebp
xlat
mov
mov
mov
adc
xor
test
cltd
cmp
push
subb
pop
fwait
push
mov
imul
cmpsb
iret
loope
push
aam
pop
xchg
jp
sub
addr16
push
clc
lahf
cmp
and
mov
in
pop
sub
insl
inc
aas
cltd
xor
or
and
jno
push
out
ficoml
sbb
int3
lock
hlt
xchg
xor
cmp
inc
cmp
insl
orl
xor
gs
mov
xor
push
hlt
inc
add
addl
fwait
stos
fadds
je
cmp
subb
inc
lds
fcomps
inc
fs
xor
iret
test
sti
ja
pop
push
dec
clc
sub
or
ja
dec
stc
aad
cwtl
insb
mov
cmp
inc
and
dec
jle
inc
sub
push
push
mov
adc
push
jne
imul
arpl
add
push
adc
inc
lret
push
shrb
xor
pusha
mov
xor
lea
inc
dec
pop
mov
pop
stos
aas
xchg
mov
dec
push
xor
cmp
mov
rclb
add
mov
loope
lcallw
xchg
cmp
push
mov
shll
dec
pushl
mov
imul
shll
add
notb
lea
inc
push
cmpsl
imul
hlt
cli
lock
adc
jl
rcll
es
lods
out
xor
and
mov
cmpsl
test
fdivl
cmp
fldt
and
jmp
pop
sub
aaa
shlb
sbb
adcl
xchg
jae
lock
loopne
hlt
xchg
push
xchg
arpl
push
imul
mov
out
xchg
rcrl
jle
les
jecxz
xchg
std
jo
pop
or
lret
xor
xchg
or
shll
bound
push
in
insl
sbb
sbb
rcl
pop
cmpsl
xchg
or
aas
xchg
pop
inc
jg
and
loop
push
and
jg
xchg
cmpb
insb
push
xchg
cmp
jecxz
inc
xchg
cmpsb
push
jp
test
add
incl
enter
add
jmp
nop
shrb
sub
addr16
sub
clc
je
js
mov
mov
orps
mov
loop
add
rolb
push
or
fs
and
or
rcrl
dec
stos
inc
push
nop
cmp
add
xchg
cltd
loopne
xlat
xor
jb
jecxz
and
cmc
imul
outsl
sbb
push
lods
adc
je
sbb
sub
dec
adc
mov
movsb
out
mov
mov
loope
nop
aas
pop
cld
lods
rclb
add
adc
sarb
aas
sub
and
repz
cmp
mov
mov
adc
pop
mov
clc
cmpsl
push
and
adc
xor
jno
inc
cmpsl
inc
bnd
aad
cmpsb
xor
or
or
movsl
push
sub
test
aas
push
mov
es
jne
push
dec
scas
stos
fcomip
shll
rcr
ret
push
mov
lret
std
xor
mov
lret
mov
pop
fidivl
lahf
mov
mov
cmpsl
add
sub
sbb
jnp
jecxz
or
cmpl
pop
xchg
push
jae
mov
mov
fbld
daa
mov
arpl
sti
push
mov
sub
and
sub
leave
inc
fadds
fstl
cmc
sahf
cmp
in
leave
mov
call
mov
or
mov
mov
mov
in
mov
pop
cmp
in
test
lret
add
ljmp
jo
call
bound
pop
sub
loope
add
sbb
adc
add
arpl
or
shrl
ficoms
mov
mov
jg
xchg
cmp
or
jle
insl
mov
ret
dec
pop
es
imul
mov
jg
sbb
inc
mov
jo
sub
test
out
pop
jg
mov
stc
bound
cmp
xchg
mov
fimull
cs
xchg
push
inc
pop
or
inc
pushf
jg
jae
mov
sbb
out
imul
aas
and
xor
fldz
hlt
add
shll
xor
mov
gs
stc
push
shll
in
int3
ja
fbstp
mov
sarl
dec
and
adc
in
jle
mov
dec
lea
mov
dec
sar
push
inc
mov
mov
ljmp
xor
push
mov
xchg
or
leave
mov
mov
and
mov
test
inc
adc
push
sub
adc
push
adc
xor
xchg
nop
sub
fistl
mov
or
jo
jbe
repnz
dec
lcall
mov
sub
popf
into
add
and
lds
jb
sub
fcoms
pop
fwait
cli
push
or
mov
dec
ja
pushf
aam
push
jle
mov
fistps
cmp
push
lret
mov
adcb
adc
data16
setnp
setl
sahf
stos
subl
ret
aam
pop
icebp
mov
jg
push
loop
lea
mov
lea
stos
stos
dec
lods
arpl
xchg
push
fnsave
dec
xchg
in
lahf
xor
sbb
test
and
cli
popa
data16
push
dec
sti
pusha
dec
inc
xchg
pop
add
xor
sar
inc
dec
mov
push
jecxz
out
pusha
les
ja
and
inc
jae
imul
cs
or
and
lea
in
or
cmpsl
push
lods
push
iret
sti
sbb
ficoms
test
sub
push
movb
cli
ror
push
jecxz
jl
in
jl
mov
repnz
adc
icebp
orl
mov
loope
stc
adc
adcb
mov
xor
shlb
les
and
cmp
jge
jnp
push
movsb
lret
xor
inc
pop
jne
pushf
push
pop
js
popf
das
repnz
test
daa
xor
cli
lea
outsl
jmp
fsubr
push
cmpsb
test
pop
xchg
push
mov
add
rcl
pop
sub
ss
loopne
cltd
jecxz
jo
in
dec
pop
dec
sub
cmp
inc
cmc
out
les
jno
cmp
repnz
xchg
lahf
mov
inc
dec
decb
xor
adc
lock
lock
ret
bswap
out
jbe
addr16
mov
cmp
lret
mov
cmpsb
push
sahf
std
jp
stos
mov
fwait
xor
shl
in
pop
lods
negb
pop
imul
pop
shll
xor
cs
or
and
ret
sub
iret
jge
outsl
out
xchg
mov
ja
test
stc
pop
cmp
pop
jno
adc
adc
mov
adc
gs
xchg
test
dec
sub
xlat
rcrl
jl
out
and
jle
xchg
mov
push
cltd
cmp
xor
in
jb
dec
mov
push
add
ret
stos
je
sbb
lods
sbb
ret
mov
cmpsl
jecxz
imul
pusha
mov
in
sbb
cmpsb
fs
mov
xor
mov
loopne
ror
shll
clc
or
add
cmp
push
test
insl
imul
es
fisubrl
loopne
pop
sub
fistl
mov
adc
pop
es
mov
cld
in
test
xor
addb
push
jns
mov
adc
cwtl
shlb
xchg
repnz
adc
sbbl
cmpsl
cmc
aaa
into
mov
sbb
out
jne
cmc
lods
aad
pushf
cmp
leave
cltd
push
dec
sub
rorb
into
rcrl
mov
push
js
pop
adc
xchg
ret
outsl
cmc
in
in
xorb
xor
fistpl
jmp
and
mov
pop
mov
cmp
push
pop
lahf
add
sbb
mov
push
test
test
jbe
sti
or
ljmp
and
cmp
lods
xchg
mov
sbb
xlat
das
sub
bound
pop
push
subb
inc
xor
mov
push
test
stc
cld
xchg
mov
addr16
mov
roll
test
hlt
addl
mov
stc
dec
mov
adc
pop
xor
sub
push
andb
sbb
xchg
xchg
jmp
icebp
push
call
stos
ror
mov
outsb
test
jne
cmp
dec
int
or
clc
into
js
adc
test
xchg
leave
icebp
jecxz
clc
jns
cmc
stos
xlat
jecxz
lret
arpl
loop
adc
push
loope
mov
mov
in
push
rcl
jg
jg
xchg
jg
mov
xor
or
xor
add
mov
add
mov
mov
mov
mov
xor
xor
add
adc
jmp
push
gs
pop
out
dec
push
push
add
mov
icebp
movb
mov
dec
push
push
and
into
push
sub
fwait
arpl
cmp
cltd
jle
push
and
sti
jb
xchg
lcall
mov
inc
sbb
aad
jbe
inc
jmp
or
ror
das
pop
scas
in
daa
and
stos
in
cld
mov
jns
scas
test
pop
xchg
push
rclb
sbb
lock
jl
adc
xchg
xchg
loop
sub
js
loopne
fs
test
jnp
mov
inc
stos
mov
cmp
add
fldl
test
xlat
cltd
xchg
data16
call
loope
mov
mov
jno
lcall
mov
add
clc
push
jns
loope
psubsw
test
std
sbb
sub
add
sar
movsl
int3
popa
ds
fldenv
pop
mov
jge
mov
mov
enter
push
lahf
in
repz
pop
div
stc
out
pop
loop
out
loop
lods
push
rolb
push
je
push
mov
sub
inc
sar
mov
pop
mov
xchg
mov
and
add
sbb
out
movsb
xor
push
arpl
pop
aad
cmp
in
in
pop
mov
das
aaa
mov
pusha
incb
jp
push
daa
inc
jg
dec
in
pop
add
stos
or
inc
inc
xchg
icebp
jl
jno
add
js
aaa
xor
mov
out
mov
mov
leave
push
leave
test
mov
cwtl
xor
push
fbld
inc
push
pushl
push
cld
dec
or
mov
cmpsl
lods
lea
and
mov
adc
jno
xchg
and
out
shl
cs
and
sbb
jnp
aad
xor
xchg
repnz
jne
sti
loop
jp
lahf
aam
cmp
stos
insb
cli
lods
mov
sahf
mov
mov
adc
xor
std
jmp
sbbl
pop
scas
pusha
outsb
imul
cld
inc
adc
mov
pop
xor
cmpsl
jno
andb
insl
cmp
or
jbe
shl
or
mov
lahf
pop
movsl
addr16
jae
fisubrs
insl
je
popa
bound
dec
mov
adc
pop
test
aaa
add
arpl
mov
test
xor
mov
jbe
adc
jp
xchg
sahf
xchg
insl
aas
adc
cmp
mov
mov
pop
jns
test
test
jge
push
add
mov
xlat
int3
inc
je
jns
cmp
inc
orps
xchg
fs
fnsave
lret
mov
cmpsl
jle
push
fcmove
add
movsl
mov
daa
les
test
ds
jmp
scas
lret
xlat
leave
mulb
rcr
adc
push
add
stc
daa
decl
inc
and
push
test
out
cmp
adc
cmpsb
jo
pop
fwait
jo
jnp
cwtl
insb
fldt
or
adc
mov
pop
and
inc
daa
fnstcw
mov
jle
sbbb
fs
imul
or
cbtw
out
cmpsb
and
in
popa
mov
xchg
sahf
or
aad
pop
push
mov
add
in
push
mov
dec
sub
xchg
mov
in
in
aas
pop
test
cmp
xchg
arpl
cmc
mov
pop
lret
movsl
mov
adc
pop
dec
out
mov
xchg
shr
mov
cwtl
push
fisubs
cli
lods
lea
rcl
mov
xchg
push
jb
das
adc
mov
push
int3
je
into
add
loop
push
shrl
lcall
jns
adc
adc
mov
inc
and
mov
sahf
call
pop
inc
scas
jae
outsb
rorl
xchg
pop
js
lcall
out
lods
int3
out
pop
lock
lret
sub
test
push
rcrb
in
daa
push
or
scas
scas
mov
dec
cmp
push
fcomp
sub
incl
dec
cmpsb
popf
lds
or
nop
mov
cmp
pop
mov
paddb
xchg
ror
inc
fs
push
int3
loope
and
add
arpl
lcall
mov
mov
xchg
cmpsl
iret
rcrl
sarl
xchg
or
inc
sti
imul
ljmp
mov
lods
inc
inc
dec
mov
dec
out
xor
shlb
decb
lds
lret
sarb
inc
pop
ljmp
mov
orb
stos
and
mov
adc
inc
jl
adc
call
push
loop
dec
xor
cmp
add
push
mov
jbe
push
repnz
lea
inc
movsb
cmp
frstor
ja
jno
cli
outsb
push
stc
mov
push
push
push
add
arpl
adc
cs
out
pop
pop
push
out
pop
or
mov
scas
repnz
xor
gs
daa
cli
xor
inc
add
sub
insl
jns
push
mov
inc
and
xchg
in
test
pop
sub
jmp
or
mov
push
dec
dec
icebp
cmp
jo
js
stos
xchg
cmp
loop
daa
out
stos
or
lret
fcompl
xorl
dec
hlt
xor
fistpll
mov
jp
push
ljmp
mov
pusha
icebp
dec
dec
add
pushf
stos
stos
sbb
repz
dec
aam
dec
lods
jp
or
mov
pushf
xchg
nop
ja
xor
cmpsl
mov
xor
icebp
pop
test
mov
leave
jge
jl
lea
add
xchg
addl
mov
mov
cmp
int3
xor
es
mov
jmp
lahf
js
jle
fs
dec
mov
adc
call
out
jmp
repz
stos
mov
ret
push
lret
sarl
push
mov
das
sub
test
inc
iret
sti
lret
lods
ret
xor
xchg
pop
or
inc
mov
inc
xor
ss
or
hlt
xor
test
mov
outsb
jo
hlt
dec
cmp
bound
testb
jne
cmp
inc
add
mov
or
pop
cmp
dec
mov
sti
sbb
and
test
ret
jg
push
xlat
mov
leave
cmp
andb
das
sti
iret
xor
bound
cli
iret
lods
push
and
pushw
mov
push
in
push
inc
pop
sti
xor
jle
push
push
pop
or
imul
js
mov
fnstsw
test
rcll
pop
scas
push
sbb
mov
addr16
in
dec
mov
in
orl
insl
mov
shl
sahf
xchg
fstps
packssdw
dec
das
mov
adc
lret
push
push
jmp
sbb
push
adc
xchg
int3
xchg
nop
adc
and
jp
push
and
repnz
bound
cmp
xchg
test
cmp
lods
sti
clc
add
imul
push
cli
pushf
ljmp
shr
shll
and
xchg
adc
lock
pusha
test
and
sub
or
xchg
add
xadd
lret
testb
notl
mov
loope
pop
mul
mov
pop
push
dec
mov
inc
ret
xor
jl
mov
pop
aam
inc
testl
or
mov
mov
scas
addr16
loopne
imul
mov
jae
stc
scas
and
test
adc
sbb
popf
cmpsl
bound
push
mov
and
lret
cmpsl
add
mov
dec
inc
push
pushf
xchg
or
push
data16
xor
lahf
cwtl
mov
outsb
in
add
xor
or
lods
out
and
in
mov
jbe
mov
adc
and
lea
ja
push
fwait
and
cli
mov
mov
xchg
and
xor
cmpb
repnz
and
sbb
push
call
stos
dec
repz
pop
inc
fs
pop
lods
fnstsw
scas
daa
xchg
insb
andl
adc
fildll
sub
or
int3
jne
ret
dec
adc
sarl
mov
scas
or
dec
push
sbb
dec
or
mov
xor
jnp
xor
arpl
mov
dec
sub
fwait
sbb
dec
andl
or
fsubr
sti
inc
jg
in
aam
sub
and
sub
xrelease
mov
jae
sbb
sbb
sti
cmp
popf
push
push
mov
sub
aad
xor
into
fldenv
xchg
cmpsb
shrb
mov
pmulhw
repz
pop
add
int
mov
jne
inc
add
lds
mov
mov
out
cmp
pop
arpl
cmp
fwait
jp
xchg
xor
hlt
insl
mov
fdivp
mov
mov
andb
add
je
in
fs
das
jae
mov
movsl
iret
mov
push
or
icebp
jmp
dec
fadd
add
sub
in
or
cmc
pop
fisubs
int
mov
sbb
mov
jno
push
movsb
xor
scas
mov
inc
sarb
jl
mov
push
xchg
and
shll
or
stos
push
fdivrl
mov
incl
add
addr16
push
cmp
jp
or
jb
scas
cmp
xlat
outsl
icebp
andb
pop
es
push
sub
push
scas
les
adc
add
repz
fwait
jns
sub
out
lea
lods
sbb
gs
enter
or
or
push
add
push
popf
iret
pop
cmpsl
std
dec
push
leave
push
mov
mov
xchg
enter
adcb
lcall
sub
pushf
scas
fcmovnb
jg
xchg
in
enter
mov
inc
mov
popa
xchg
repz
dec
or
mov
ljmp
jnp
cmp
aaa
jbe
mov
or
mov
xchg
xchg
fldenv
out
pushf
jmp
mov
cmp
aaa
push
lds
pushf
push
lods
outsl
mov
xor
push
call
dec
mov
sbb
test
mov
pushf
cltd
pop
ret
pop
jmp
test
fcmovb
inc
loop
pop
jne
lea
push
mov
jp
testb
pop
ffreep
push
dec
lods
andl
pop
mov
mov
mov
mov
movsb
sub
xchg
xchg
pop
or
cmp
dec
jno,pt
mov
push
cli
pop
mov
jmp
adc
add
jb
xor
xchg
or
pop
roll
jl
mov
mov
int
movsl
movsb
dec
jecxz
xchg
or
insb
xor
or
add
adc
sbb
int
or
popa
dec
inc
rorb
sbb
pop
lods
xchg
push
dec
mov
lret
movsl
in
push
pop
cs
sti
bound
nop
lds
pop
xchg
cmp
rclb
mov
sbb
sti
cmpsb
lret
cli
xor
cmc
mov
sub
mov
mov
popf
sub
inc
push
clc
leave
xor
mov
ss
sub
das
pop
aas
jo
jne
cmp
lods
push
inc
out
mov
arpl
hlt
mov
dec
sbb
cmp
sub
jmp
sub
pop
mov
in
mov
aam
cmp
aaa
sahf
hlt
and
or
jbe
and
gs
dec
sarb
dec
pushf
ds
test
iret
andl
mov
rcll
jbe
sub
jae
or
push
popw
jnp
add
cmp
roll
mov
adc
mov
repnz
gs
popa
stos
mov
xor
or
stc
das
imul
lods
cld
mov
lcall
lea
iret
loopne
jmp
cs
push
cli
cltd
cwtl
cs
lock
pop
fs
imul
mov
fstp
dec
test
xlat
push
adc
imul
fistl
fldlg2
es
scas
mov
push
sti
cmc
pop
out
pop
mov
adc
fistpll
icebp
inc
jnp
aas
or
pop
or
aas
scas
cwtl
mov
idiv
gs
scas
paddw
sub
lds
jmp
int
mov
push
scas
and
fistpll
in
out
sub
mov
arpl
mov
mov
sub
jl
jge
fidivl
mov
or
sub
shl
cwtl
cwtl
and
clc
psadbw
fxch
in
dec
test
push
hlt
mov
mov
dec
xchg
sbbb
stos
or
scas
lds
jmp
mov
xor
add
add
mov
jge
adc
scas
push
orb
cltd
das
mov
insb
cli
cld
loop
loopne
xor
imul
jbe
push
aaa
xchg
xchg
jecxz
cs
sahf
xchg
mov
pop
inc
insl
lret
pop
push
rcrl
or
lcall
adc
divl
fcoml
push
inc
mov
add
add
je
test
and
aaa
loope
add
mov
xor
jp
push
aaa
jns
mov
loopne
xlat
aaa
mov
jle
adc
mov
sti
and
pop
in
push
push
cmp
xchg
pop
push
sub
scas
jmp
pop
xor
inc
or
dec
inc
xor
or
ret
in
push
sbb
add
push
push
push
push
call
mov
add
adc
xor
cmp
jne
cmp
jne
mov
mov
imul
mov
or
sub
mov
lea
mov
pop
leave
ret
push
mov
sub
cmpl
jg
mov
add
jmp
pushl
call
push
jmp
addb
add
rcrl
add
cmpsl
xchg
jno
xchg
fcompl
movsl
nop
pop
out
xchg
shll
imul
addr16
cmc
rcrl
fnsave
and
add
jmp
repnz
jl
xor
mov
in
fsts
jbe
xchg
fsubrl
jl
jmp
pop
jae
ljmp
fcomps
and
leave
xchg
arpl
cmp
pop
mov
or
add
cmp
lea
sti
pop
and
push
andb
dec
jp
data16
lcall
das
sbb
jg
lcall
jb
cltd
das
pusha
xlat
mov
dec
stos
xchg
pop
adc
fildl
sbb
test
sbb
xchg
mov
mov
or
push
je
lds
or
sti
mov
cs
test
cmp
and
call
jo
jne
push
dec
out
pop
add
and
shlb
and
mov
dec
sbb
daa
mov
and
data16
out
inc
sbb
mov
out
insb
sarb
sbb
shlb
out
sarb
outsb
mov
xor
in
jmp
mov
mov
cld
subb
lods
inc
out
jge
mov
das
xchg
jns
fidivl
enter
inc
test
es
pop
cmp
stos
into
clc
sub
pop
aas
mov
pop
hlt
sti
sbb
fdivl
sub
sbb
push
adc
push
or
mov
in
pop
bound
mov
xchg
sub
cmp
and
mov
dec
outsl
sbb
aaa
loope
jg
mov
push
mov
ret
pop
cli
scas
stos
xsha1
cmpsb
or
jno
data16
fwait
ret
push
ljmp
jp
pop
pop
sbb
inc
mov
pop
jmp
sub
icebp
in
adc
std
jg
out
popl
ja
push
mov
fsubs
aas
and
shl
and
cmp
sti
sbb
pop
pop
jo
rclb
dec
cmpsl
mov
xor
and
repz
rorb
mov
inc
push
and
xchg
push
loope
aam
adc
stos
out
push
je
cmpsl
les
xchg
mov
push
mov
je
pand
push
outsl
and
mov
xchg
int
cld
cmpb
xchg
pop
jecxz
xchg
mov
adc
js
jle
ds
lret
dec
xchg
and
cmpsb
mov
xor
or
push
adc
loopne
icebp
repnz
imul
xor
in
into
dec
sbb
mov
mov
sbb
fwait
sbb
enter
jns
jns
mov
cld
shlb
mov
adc
xor
pop
cmp
mov
fucomip
pusha
cmp
lcall
mov
movb
les
jl
fs
pushf
mov
mov
or
ds
test
sbbb
imul
into
push
lahf
std
add
pop
push
lods
jmp
xchg
push
inc
cmpsl
stos
popf
stos
into
lea
add
dec
or
aad
jge
sub
rcll
or
xchg
or
mov
inc
adc
pop
dec
add
test
lahf
repnz
scas
or
mov
mov
xchg
pop
in
cld
add
sub
int3
cmp
cmpsb
addr16
pop
iret
push
mov
adcb
dec
loop
sbb
in
shr
jne
orl
hlt
ds
mov
data16
push
rol
in
clc
or
pop
xlat
inc
es
adc
adc
mov
or
ds
jae
stos
dec
outsb
je
cmp
mov
jle
sahf
or
pop
cmpsb
repz
fcoms
or
cmp
or
xor
test
sbb
in
cs
mov
into
out
lahf
aad
aaa
scas
sub
fildll
loopne
scas
xchg
stos
push
pusha
adc
sti
out
or
pop
das
inc
cld
inc
adc
lea
and
pusha
out
or
sub
and
push
popf
jo
fmull
push
mov
pusha
js
xor
xchg
xor
cs
mov
sbb
mov
mov
pop
mov
divl
arpl
pop
mov
fimuls
out
cmp
or
outsb
scas
lock
sbb
popf
pop
xchg
jp
nop
les
clc
mov
fwait
adc
add
sbb
sbbl
in
jge
jnp
adc
repz
js
xchg
cld
ss
push
sub
cwtl
push
imul
sub
inc
cmpsb
in
ret
addr16
adc
xor
subb
shl
popf
hlt
sbb
test
mov
or
pop
push
loope
or
mov
sub
dec
leave
imul
jbe
repz
jbe
imull
xor
es
imul
and
jge
pop
xchg
scas
add
pop
movsb
sub
mov
inc
test
enter
sub
mov
ror
iret
sbbb
aad
mov
cld
gs
mov
pushf
jnp
sti
enter
push
push
or
inc
outsl
jg
sbb
lret
pop
jnp
inc
pop
aas
cs
mov
prefetch
xchg
aad
in
fistpl
mov
pushf
pop
jne
mov
sbb
adc
in
push
repz
fst
sub
push
push
mov
popa
repz
iret
pusha
jo
adc
mov
aas
and
mov
ljmp
pop
inc
jno
or
fdivl
or
lea
xor
xchg
fs
fisubrl
lea
aaa
shlb
cli
icebp
lret
or
fidivl
mov
lds
inc
mov
xchg
xchg
test
push
cmp
pop
aas
mov
push
sarl
sub
pop
ljmp
call
jg
lea
jnp
lods
adcl
adc
mov
nop
lds
clc
mov
adc
jbe
mov
or
or
cmpsl
dec
dec
cmp
mov
pop
or
xorb
adc
inc
inc
mov
pop
cmpl
jg
adc
mov
dec
push
xchg
test
sbb
mov
jp
mov
lods
xchg
inc
push
xchg
pusha
les
data16
iret
pop
and
xchg
push
ljmp
pusha
insl
dec
iret
jnp
out
xchg
icebp
add
loopew
pop
std
add
stos
sbb
jne
or
mov
lret
int3
out
push
lret
add
test
mov
push
pop
dec
das
int3
or
jb
xor
jmp
dec
fstpl
mov
cmpsl
out
pop
or
xorb
pop
mov
out
shlb
lcall
sbb
mov
das
out
mov
cld
stos
enter
loop
dec
xlat
out
pop
mov
pop
daa
adc
fwait
sti
or
pop
loopne
mov
add
out
xor
sub
xlat
push
daa
pop
int3
sbb
mov
sarb
mov
cmpl
jge
movzbl
add
adc
jmp
push
push
push
pushl
call
shrd
jmp
outsb
fwait
push
movsl
or
movsb
js
pushf
sti
xchg
jbe
jno
inc
push
stc
jge
push
sbb
sub
pop
adc
add
gs
ds
and
and
popl
lret
xor
push
add
xchg
insb
or
out
loop
xchg
xorl
aad
cmc
mov
mov
lea
mov
inc
xchg
mov
stos
pushf
cmp
jl
jmp
sub
pop
cmp
mov
pop
pop
insl
xchg
es
in
xorb
in
dec
ret
dec
and
adc
es
push
inc
xchg
pop
jge
testl
or
xor
cmp
or
dec
mov
sbb
dec
or
sbb
loope
sbb
jle
out
lock
or
stos
dec
adc
xor
outsb
xchg
cld
mov
sub
adc
mov
cmpsb
sti
cmc
mov
sbb
shrl
lret
mov
pop
cltd
rclb
inc
outsb
popa
lcall
je
cli
inc
push
iret
dec
pop
inc
cmpb
and
sahf
imul
xor
dec
cmp
pop
inc
cmp
or
or
push
mov
sahf
pop
and
and
inc
imul
ds
jge
mov
mov
cmp
in
ss
dec
pop
mov
ffreep
cmp
mov
jl
inc
inc
psrlq
out
mov
sbb
mov
js
pop
lods
aam
jecxz
pushf
jecxz
inc
inc
add
pop
iret
lods
push
sbb
out
nop
pop
cmp
and
jae
adc
lods
sbbb
or
xor
shl
mov
hlt
or
rclb
pusha
add
idivl
xchg
jbe
fmul
ljmp
inc
mov
ret
lea
push
dec
jmp
pop
popf
lea
jl
test
xchg
or
push
repnz
test
pop
fcmovne
dec
jnp
lds
fadds
ljmp
mov
mov
xchg
shrb
push
imull
loopne
inc
arpl
mov
jecxz
test
xchg
xchg
mov
jns
clc
lods
xorb
pop
add
fisttpll
or
sbb
jp
xchg
iret
fadds
and
enter
ljmp
dec
inc
jnp
in
rorl
or
xor
dec
mov
or
pushf
and
fistpll
sbb
adc
cmp
dec
fisttps
imul
dec
repz
orb
jge
xor
xchg
mov
mov
adc
mov
fldlg2
mov
or
jne
repz
xchg
lret
mov
push
rorb
test
adcl
or
fimull
jl
cltd
test
stos
xchg
int3
push
outsb
je
mov
jae
and
adc
mov
mov
lods
fnstcw
ja
gs
mov
mov
iret
sub
imulb
mov
mulb
pop
lret
pusha
and
ret
xchg
aad
stos
xchg
jp
mov
push
imul
aaa
insb
or
repz
call
or
sbb
mov
nop
adc
std
scas
sub
pushf
or
in
ja
aad
testl
sbb
out
pushf
adc
sub
movsl
push
or
mov
add
lret
sbb
out
sbb
insl
int3
in
int3
and
test
sbb
cmp
lods
test
dec
inc
enter
in
test
out
or
mov
mov
nop
jne
add
mov
mov
cmc
or
ret
scas
repnz
pop
mov
lahf
jmp
mov
scas
push
xchg
iret
bound
mov
into
gs
int
dec
or
inc
pop
insb
fistpll
test
ljmp
outsb
mov
push
stc
jns
push
int
add
andl
dec
addr16
push
je
pop
cmpsl
iret
lea
mov
jl
push
lea
xchg
jae
ja
ljmp
inc
jp
scas
js
pushf
xchg
loop
xlat
outsb
fisttps
fs
push
sbb
rol
pop
leave
loopne
push
arpl
ljmp
out
enter
js
mov
push
test
sbb
pushf
adc
imul
test
pop
xor
xorl
std
sub
stos
insb
hlt
dec
enter
or
pusha
sub
pushf
movsb
jne
jg
push
cmp
inc
icebp
cltd
mov
pushf
jnp
adc
xchg
sahf
pop
cmp
jecxz
inc
pop
jb
jmp
xchg
push
jo
push
insl
test
push
pop
outsb
push
and
push
mov
xor
daa
add
xchg
xchg
jns
dec
pop
sbb
aas
jp
jbe
push
cmpsb
imul
in
mov
mov
xchg
xor
pop
adc
and
jno
loope
adc
push
sub
adc
pop
dec
in
inc
call
test
and
and
insl
pop
dec
mull
je
fistl
adcb
dec
pop
shr
sbb
push
aad
dec
and
ljmp
mov
or
inc
mov
data16
out
mov
lods
mov
push
jg
test
sub
in
sahf
ss
sub
lock
out
push
or
lcall
lds
fmuls
inc
stc
ds
mov
nop
ficoml
cltd
into
ljmp
push
lods
lock
lock
orb
add
faddl
push
movsb
lods
jno
xor
scas
rorb
adc
sbb
mov
jg
pop
jmp
test
adc
popa
cmp
inc
add
dec
rolb
je
movsb
dec
xchg
mov
adc
popf
pusha
sti
inc
movsl
cld
jmp
inc
xor
stos
stc
inc
or
mov
test
ja
mov
xorl
outsl
sahf
pop
adc
dec
pop
pushf
mov
inc
sbb
or
dec
idiv
add
je
sti
mov
fsubl
jbe
push
xor
xor
or
dec
lods
cmc
cld
and
or
shrl
mov
push
stc
and
inc
or
in
mov
dec
sbb
add
mov
rcrb
into
insb
sahf
xchg
mov
daa
and
jp
push
jmp
jno
fucomp
pop
into
movsl
in
dec
in
andl
adc
test
add
test
aad
test
push
add
xchg
mov
pop
jo
addr16
int
inc
out
aaa
imul
mov
inc
jl
in
inc
add
lcall
arpl
in
xchg
cmc
data16
push
std
inc
pop
les
stos
pop
call
out
inc
js
ror
jl
scas
insl
and
cmp
or
dec
popf
into
lret
inc
cmp
lahf
jle
xchg
fsubl
add
out
xchg
sbb
mov
in
rcrb
ss
lret
movsb
nop
shrl
dec
dec
into
cwtl
sub
jmp
mov
adc
xor
and
mov
sbb
xor
sbbl
or
mov
sub
mov
mov
subl
shl
mov
and
mov
mov
shrd
movl
xor
addl
shr
mov
mov
sbb
mov
mov
mov
mov
sub
sub
xor
decl
or
orl
jmp
cli
int
lahf
push
or
inc
cmpsb
ss
xor
add
xchg
adc
addl
int
or
xor
sub
pop
insl
clc
loop
push
adc
push
adc
sub
pusha
loope
sti
js
scas
mov
sbb
int
cli
cwtl
xchg
loop
add
adc
add
mov
pushf
in
mov
cmp
mov
int3
cltd
xlat
inc
in
push
jmp
jb
addb
mov
and
xor
pop
xor
xor
xor
pop
lods
repnz
push
dec
push
and
ficoms
cmp
jmp
push
inc
sbb
lret
mov
fstpt
aas
mov
jmp
mov
add
push
mov
inc
lcall
xor
in
mov
dec
sub
pushf
ficoms
fisttpl
movups
push
lds
mov
add
push
cltd
cwtl
aam
cltd
xchg
sub
sub
int
pop
orl
xchg
fistl
inc
sahf
xor
adc
int
into
mulb
lea
testl
sbb
add
or
mov
push
mov
dec
and
adc
xchg
scas
push
sub
lds
out
cmovge
pop
out
xor
mov
xchg
jp
dec
ds
dec
gs
mov
sbb
mov
out
sarb
dec
inc
push
daa
stos
cmp
sub
insl
add
lock
and
xchg
loopne
ja
mov
in
mov
vfrczss
mov
xchg
push
subb
dec
mov
rcll
mov
out
aas
sbb
adc
sub
cmp
mov
cwtl
jg
scas
mov
inc
aas
ljmp
in
push
loopne
mov
push
xchg
fnstcw
add
push
loop
ja
dec
pop
in
cmp
dec
and
adc
inc
xlat
pop
mov
lret
xlat
pop
inc
nop
add
mov
inc
pop
scas
push
stos
xchg
or
xchg
lods
mov
imul
sub
or
add
dec
test
jecxz
add
xchg
add
aad
push
sahf
inc
mov
xchg
je
sbb
add
jl
mov
mov
or
mov
inc
jp
xor
nop
mov
and
imul
sub
lods
or
xchg
sbb
mov
ljmp
jns
in
daa
or
xchg
push
adc
shlb
pop
mov
pop
dec
mov
jl
sbb
pop
xor
push
sbb
das
orl
jbe
cmp
popa
mov
lahf
in
push
leave
cmpsb
mov
fsubl
sub
or
inc
inc
decb
and
mov
jle
pop
fwait
arpl
shlb
adcl
mov
les
enter
jns
push
lods
movsl
push
out
cmc
cltd
fsubs
enter
fadd
adc
std
sub
xchg
cmpl
aad
mov
loope
rorl
xchg
jb
insl
dec
mov
mov
lret
add
cs
int3
pusha
jb
and
jmp
test
lds
mov
xor
adc
mov
cld
lods
inc
rol
out
test
arpl
dec
push
aas
ret
xchg
mov
lret
mov
aam
repz
mov
pop
pop
xor
mov
pop
imul
int
ret
das
xchg
icebp
jnp
sub
lcall
lret
add
pop
scas
daa
shrb
leave
nop
adc
repnz
sbb
xor
out
iret
jle
jp
jo
jns
mov
ret
int
lods
pop
loope
push
inc
fwait
adc
into
or
es
in
adc
cmp
fidivl
roll
sbb
sbb
push
lea
sbb
push
lahf
cmp
sub
fisttps
push
mov
cmp
cmpsb
push
sti
jl
insb
outsb
pop
mov
mov
cltd
sbb
xor
dec
xchg
xchg
lahf
ficoml
xchg
mov
imul
jge
sub
leave
cltd
xor
fbld
aam
loopne
icebp
mov
cs
pop
out
dec
insl
adc
dec
and
adc
aam
mov
jb
inc
inc
xor
inc
pop
scas
arpl
jg
mov
mov
cmp
sub
cmc
fcomi
test
hlt
shlb
pop
sbb
pop
fcoml
out
call
iret
imul
push
stos
and
out
cmpsb
xchg
jmp
andb
call
adc
xorb
mov
in
jp
dec
sbb
jae
gs
jmp
adc
xchg
mov
lods
pop
fistl
aas
sbb
stos
sti
pusha
jp
scas
int3
push
repz
lret
sarl
inc
into
pop
insl
jmp
fwait
xorl
mov
or
cmp
repz
loop
or
mov
fistpl
cmp
cmp
ret
or
pop
pop
mov
and
fstl
xchg
lods
pop
adc
outsl
insb
jns
jns
pop
pop
insl
sub
pop
test
outsl
les
scas
movsl
jbe
shrl
xchg
and
aam
adc
jnp
sbb
inc
jno
int3
adc
in
jb
pop
sub
fst
les
mov
add
iret
popa
mov
clc
cmpsb
fcomps
sub
mov
sub
pop
arpl
out
faddp
xchg
inc
rorb
cmc
mov
in
idivb
addl
stc
fwait
mov
fstpl
mov
rorb
fwait
insl
mov
mov
push
out
adc
dec
aad
pop
out
add
ret
loopne
sbb
xor
inc
or
xlat
insb
shld
dec
out
dec
mov
sbb
aam
cmc
out
or
xchg
xlat
dec
ret
push
mov
inc
mov
mov
inc
out
mov
push
sbb
in
rol
jmp
jmp
jge
fisttps
mov
mov
das
in
adc
sbb
mov
jp
pop
sbb
ja
stc
ljmp
cmp
stos
mov
cmp
xchg
outsl
pop
mov
sbb
cmp
lahf
cmp
push
test
inc
xor
push
mov
scas
mov
jae
cwtl
jns
in
sub
lcall
ss
or
sbb
int
cs
pop
ficoms
inc
and
sbb
sub
cmpsb
lahf
dec
inc
jmp
xchg
xchg
imul
jae
add
push
dec
sahf
or
push
pop
push
push
movsl
cmp
inc
dec
xchg
xor
shll
pop
in
sbb
ss
inc
out
or
js
dec
xor
ret
pushf
push
ret
in
add
jbe
or
sahf
cmp
bound
sub
dec
int
sub
sub
stos
adc
out
scas
add
iret
xchg
fs
stos
jecxz
pusha
out
es
pop
cmp
ss
and
shlb
dec
mov
pop
mov
cmpsb
imulb
mov
and
dec
mov
sti
push
je
into
sbb
test
incl
sbb
mov
xor
or
mov
adc
mov
jmp
movsb
dec
dec
jo
gs
adc
push
int3
xchg
push
loop
add
add
xchg
shlb
std
es
push
add
test
cmp
enter
scas
in
jne
int
xchg
pop
xchg
daa
pop
adc
xchg
cmpsl
fisubs
xchg
or
fcmovu
or
cli
ja
xor
or
rorb
add
int
inc
test
out
aas
xchg
cmp
fcoml
jno
pop
fildll
or
iret
outsb
movb
mov
jo
gs
xorb
lcall
rcrl
push
push
outsb
sbb
lods
fdivs
push
push
jle
std
pop
xchg
lods
jns
mov
push
xchg
ss
xchg
xchg
xlat
jle
test
xorl
mov
xchg
mov
icebp
cmp
adc
cltd
inc
mov
stc
inc
mov
mov
dec
pushf
arpl
popa
stc
loop
xor
scas
push
adc
xchg
jae
xchg
jae
pop
lret
inc
popf
movsl
sbb
dec
xor
or
push
mov
ja
int3
stos
loop
sub
repz
sti
fneni(8087
sub
push
scas
std
pop
iret
cs
loope
loopne
rcrl
add
pop
cltd
jmp
dec
std
inc
push
mov
xorb
imul
sbb
mov
fnsave
in
aaa
push
mov
sti
sub
test
or
cwtl
mov
xchg
shrb
test
pop
sub
je
js
popa
or
loopne
outsb
in
push
into
or
outsl
or
add
xor
pop
aaa
xchg
jb
cmp
lahf
cmpsl
push
sbb
mov
inc
mov
push
les
out
in
sbb
test
addb
sub
dec
imul
mov
dec
scas
jmp
fstpt
iret
or
test
popa
dec
std
xchg
mov
mov
mov
cmc
stc
cmp
add
sbb
in
adc
add
pop
fwait
stos
pop
pop
xchg
pop
dec
mov
inc
xor
xchg
jb
xchg
outsb
rorb
sti
ret
and
mov
aad
pop
loope
cltd
loop
jl
pop
mov
push
shrb
mov
loop
leave
sub
leave
or
movsl
mov
shll
aad
xchg
ret
push
jmp
pusha
jae
or
js
xchg
add
out
mov
cmp
jnp
test
lea
xchg
xchg
out
lahf
and
push
sbb
in
pop
data16
pop
add
clc
loope
xor
cmc
repz
fistpl
mov
mov
fsts
xchg
lock
cmpsb
mov
sbb
adc
and
enter
push
scas
sbb
adc
cmp
jge
into
les
jbe
fnstcw
push
out
cltd
xchg
jo
or
test
sti
xchg
daa
out
inc
pop
jl
jmp
jo
fisttpl
js
cmpsb
add
push
or
pop
test
or
mov
cmp
fldcw
sub
inc
cmp
out
sbb
movsb
xchg
sub
sub
sbb
push
xor
fdivrs
xlat
fsts
or
mov
mov
push
fwait
cmp
rorb
incb
mov
rolb
cmpb
out
roll
xchg
xchg
out
lods
lods
jae
and
faddp
test
arpl
pop
push
inc
mov
inc
push
test
pop
outsb
test
xlat
jae
jp
pop
pop
xor
aad
int
mov
mov
pop
mov
insl
pop
notb
clc
xor
jo
add
push
cmp
stos
mov
imul
push
inc
xchg
test
adc
adc
orb
jae
int3
or
or
cmpl
lods
test
es
lds
pop
dec
imul
dec
ret
adc
mov
push
mov
rorl
cmc
mov
sub
out
cmp
rol
jne
lea
sub
push
das
pop
mov
inc
clc
ficompl
stos
jecxz,pn
popa
xor
insb
mov
mov
mov
dec
daa
sbb
sub
jnp
fwait
mov
xchg
xchg
loope
orl
inc
push
jle
bndldx
push
mov
mov
pop
mov
and
push
jne
inc
mov
dec
imul
cli
pop
movb
jb
dec
cmp
and
sahf
xchg
cwtl
cmp
ds
repnz
cmp
jbe
in
or
aam
jl
xchg
inc
out
mov
inc
xchg
not
test
pop
jle
inc
dec
das
mov
pushf
sbb
loope
dec
xor
mov
test
pop
push
sub
mov
cmp
mov
fbld
in
dec
sbb
movd
cmpsl
dec
add
inc
or
out
outsb
icebp
mov
pop
mov
pop
mov
xor
rcll
fwait
xor
pop
std
pop
and
push
push
hlt
inc
testl
les
test
xor
adc
sbb
xor
push
ficomps
loope
dec
inc
sbb
fcomps
mov
fisttps
mov
jne
mov
or
jp
xchg
add
into
cmp
adc
xchg
sti
push
faddl
std
push
cltd
fmull
lds
jp
fistl
push
or
or
add
xorl
and
lods
mov
sbb
add
xor
fstpt
jae
aaa
mov
inc
push
fwait
mov
pop
sbb
push
push
pushf
loope,pt
jns
dec
in
movsl
pop
fnstsw
sbb
scas
inc
movsb
punpckhwd
stos
decl
push
test
stc
scas
out
je
or
push
test
lea
add
dec
push
inc
repnz
addr16
lds
push
xor
or
dec
xchg
in
sub
and
or
leave
stos
scas
add
aad
push
and
cld
push
aam
js
mov
push
mov
mov
fistpl
dec
fisttpll
lret
loopne
rcll
push
xlat
mov
and
cmp
mov
xchg
adc
mulb
inc
pop
not
pop
popa
xor
sti
or
mov
test
ds
pusha
stos
setbe
and
mov
xchg
jne
adc
loopne
dec
lds
mov
insl
or
jns
jecxz
test
rorb
lahf
push
add
fldl
cmp
sbb
pop
push
add
out
dec
cltd
test
or
push
add
fwait
imul
lcall
shl
ja
pop
push
movhlps
mov
sub
shll
inc
and
xchg
mov
adc
inc
orb
outsl
add
xor
mov
xchg
push
adc
dec
xlat
pop
xchg
fdivrs
pop
push
jp
dec
inc
pop
cmp
mov
jbe
inc
xlat
mov
scas
pushf
inc
orl
loop
mov
sarb
rclb
loopne
or
lcall
dec
lods
in
sub
cmc
out
lock
pop
jmp
cmp
adc
push
gs
sbbb
or
lret
push
test
sahf
mov
fisubl
cmpl
jl
subl
jmp
pushl
pushl
call
mov
mov
mov
mov
mov
mov
shl
xor
shld
cmpl
jg
dec
jmp
pushl
call
shl
mov
xor
xor
movl
movl
movl
cmp
movl
jne
movl
cmp
je
subl
mov
mov
cmpl
jg
add
jmp
pushl
push
pushl
push
push
push
push
pushl
call
mov
mov
xor
shld
shl
xor
addl
xor
movl
cmp
movl
jne
cmp
je
mov
mov
shl
mov
xor
movl
shr
or
sbb
mov
cmpl
ja
and
jmp
push
push
pushl
call
mov
mov
mov
mov
mov
jmp
bound
clc
xchg
xor
xchg
outsl
inc
adc
addl
stc
inc
xchg
fldenv
dec
sbb
pop
dec
cmp
mov
mov
mov
aas
push
addl
mov
mov
xchg
sbb
adc
push
cmp
imul
js
cmp
dec
js
inc
xchg
fwait
imulb
mov
sbb
mov
add
mov
inc
sbb
push
add
fidivs
sub
jae
andl
jne
sbb
rol
inc
xchg
mov
cmp
les
inc
jl
ja
fidivrs
pop
cmp
inc
daa
shlb
add
aam
push
test
mov
mov
std
stos
sbb
pop
mov
clc
sub
xlat
xchg
jbe
rclb
cld
cs
jae
cmc
sub
int3
dec
ret
movsb
loope
jns
je
int3
add
out
rol
mov
lret
test
mov
mov
in
adc
cld
jl
sub
pop
cmpsl
ljmp
movsb
push
ja
leave
push
cmp
adc
jb
lahf
adc
arpl
sub
sbb
cmp
cmpsl
cmp
in
push
shll
aad
pushf
in
add
pushf
sub
push
repz
xchg
push
inc
inc
inc
pusha
int
mov
cwtl
push
cwtl
inc
mov
dec
fs
mov
hlt
jl
in
lret
add
stos
cmp
lahf
aam
cmp
jo
cwtl
mov
andb
push
sbb
and
testb
nop
out
call
or
xor
adc
add
dec
mov
pushf
push
enter
xchg
dec
popa
mov
shl
fsts
jo
rolb
aaa
loopne
mov
in
and
mov
outsl
cs
xor
mov
jnp
mov
and
ss
dec
pop
jae
xchg
icebp
jl
xchg
cmp
xchg
xchg
shlb
xchg
mov
mov
and
adc
xor
add
sub
pop
and
nop
sbb
inc
jmp
pop
cmc
xchg
loope
mov
call
nop
dec
mov
mov
divl
xor
jo
cld
mov
sub
sbb
cwtl
inc
ja
mov
mov
insb
sub
inc
cmp
jecxz
lods
fistpl
and
sbb
xchg
das
add
out
imul
xor
ficoml
adc
hlt
dec
pop
pop
or
outsb
aad
fcoml
xchg
rcrb
and
mov
mov
cmp
into
adc
fbstp
clc
sub
lret
adc
bound
push
mov
and
lds
or
inc
and
xchg
jns
divl
leave
pusha
rorb
jbe
popa
lock
jmp
ljmp
int3
jg
dec
jmp
imul
nop
dec
nop
add
call
mov
inc
adc
add
xor
hlt
inc
pushf
pop
mov
push
pusha
sbb
fs
push
outsl
cmp
lret
popf
and
cli
push
pop
push
lods
or
ja
hlt
sti
sbb
call
sub
aam
jae
jno
daa
test
or
dec
and
pop
mov
pop
xchg
scas
jl
addr16
pop
jae
mov
or
push
sub
mov
add
in
popa
push
xchg
js
jns
les
sbbl
dec
jmp
fists
mov
add
sub
daa
cmp
xor
mov
mov
add
mov
jmp
jg
sbb
scas
in
add
cltd
sti
dec
into
je
push
std
cmp
fs
repnz
stos
mov
pop
ficoms
lds
pop
mov
test
mov
dec
cmc
jecxz
jg
xchg
aam
push
hlt
and
inc
mov
or
cs
mov
loope
flds
cmpsl
jno
daa
sub
mov
add
xchg
xlat
cld
repnz
mov
test
ret
movsl
test
aam
leave
xor
jg
mov
cwtl
add
xchg
xchg
dec
pushf
test
dec
sub
inc
decb
ficoml
push
mov
inc
aad
into
icebp
mov
in
pop
cmp
stos
movsl
jle
movb
dec
inc
mov
in
enter
or
mov
ss
sbb
cli
into
dec
sti
mov
movsb
pop
and
pmulhuw
push
stc
lcall
and
adc
les
cmpl
pop
jl
mov
jl
je
repnz
inc
push
sub
xor
or
cmp
enter
dec
stos
or
cmpsl
outsb
inc
xor
push
pop
out
push
in
loop
int
xchg
lods
clc
mov
push
cmpsl
pop
out
jne
or
xchg
cmp
sub
mov
xor
push
lods
int
fs
fisubl
repnz
inc
xlat
push
mov
xor
es
addr16
pusha
sub
mov
mov
cli
or
lret
and
leave
test
xor
add
std
popa
adc
pop
push
bound
jmp
dec
fbstp
stc
sub
add
bound
cmp
vdivsd
ss
cmpsl
mov
and
loope
out
test
sahf
fs
outsl
dec
pop
or
cmp
pop
fstpt
in
cmp
jb
subl
jbe
ret
fdivl
sub
outsb
mull
and
inc
xchg
pop
push
push
je
pop
mov
jnp
fsts
in
and
sub
test
mov
add
and
and
lret
icebp
mov
add
pop
mov
sub
lods
addr16
sub
repz
mov
pop
mov
lods
fisttps
out
or
jp
add
lea
adc
push
adc
cmp
cwtl
fldenv
cmc
cmp
push
jge
movsb
lea
mov
icebp
and
mov
adc
dec
loopne
fwait
inc
jmp
aam
jmp
roll
xor
hlt
add
mov
push
repz
scas
negl
push
adc
xor
sub
call
or
sbb
into
jl
cmp
fisubrl
cli
sub
roll
mov
push
enter
fstp
sub
push
cs
ds
int
repnz
in
imul
push
lock
je
sbb
jle
xchg
popa
subl
xlat
in
mov
je
and
xor
mov
pop
xchg
mov
push
mov
or
in
leave
ja
pusha
stos
cmp
aam
xchg
xchg
or
arpl
mov
pop
push
push
and
lds
in
ss
mov
in
mov
jo
lcall
cmc
xor
hlt
fwait
sub
jo
bound
test
push
mov
es
jne
sti
fcomps
pop
mov
mov
xlat
aam
inc
dec
in
mov
add
sbb
pop
xorl
sub
mov
add
mov
lea
mov
xor
mov
mov
mov
adc
jmp
fbld
and
pop
stos
sub
xor
jno
pop
aaa
inc
pop
enter
js
aas
add
in
icebp
adc
jp
mov
es
pop
les
dec
xor
jp
xor
cmpsb
mov
xor
pop
out
imul
pop
and
xchg
xchg
mov
mov
mov
mov
test
and
lock
jge
sahf
sub
sarb
cs
stos
ficoms
daa
and
sti
into
bound
hlt
adc
js
arpl
mov
push
cltd
outsb
mov
dec
repnz
xchg
notl
stos
dec
cmp
mov
lret
enter
insb
cld
call
push
pop
lods
int
mov
cmpsl
sub
dec
mov
shr
shll
stos
pop
pop
lods
mov
jp
inc
push
jp
inc
jg
scas
xor
aad
mov
xchg
aam
sti
pop
mov
cmp
insb
adc
push
rcrb
sbb
loope
and
xchg
sub
test
cmp
fstpl
je
jb
sarl
ja
cmp
sbb
enter
lds
sub
es
mov
sub
cmp
or
fmul
in
sahf
popa
cld
fwait
sbb
inc
or
and
mov
mov
dec
test
jnp
mov
pop
fisubs
fs
fisubrs
ja
pop
insb
jl
je
enter
sub
or
cs
sti
fyl2x
xchg
dec
xor
jle
repnz
movsb
fsubs
scas
in
sub
dec
loopne
xchg
or
pop
divl
push
arpl
or
and
adc
aas
mov
out
xor
dec
out
leave
rcrl
inc
cmpsl
adc
adc
andl
shl
push
mov
loop
lock
xor
dec
sub
inc
adc
shrl
adc
push
jno
mov
xchg
lret
stos
nop
jmp
adc
fisubs
pop
imul
mov
outsb
js
cmpsl
jle
adc
outsb
mov
inc
mov
shrl
or
push
in
in
cmp
fwait
cmp
push
mov
repz
cmp
out
fistpl
jns
loop
mov
fstps
push
sub
cmpsl
lret
addr16
int
adc
adc
loope
jp
mov
pop
in
xchg
pop
sahf
js
xor
imul
xchg
add
pop
push
imul
sub
pusha
cmp
imul
pop
notb
sti
jb
xchg
shlb
sti
jns
lods
or
cmp
push
sub
cmpsb
adc
cs
mov
xchg
push
jg
movsl
popf
lahf
mov
int3
sbb
push
cmp
ja
scas
mov
push
out
jo
dec
adc
es
and
into
stos
aaa
jmp
push
stos
es
ljmp
and
cmp
adc
lcall
or
add
sbb
out
into
jmp
ljmp
outsb
push
adc
add
addr16
cmp
jnp
sbb
gs
andb
pop
xor
xchg
pop
mov
scas
in
jo
pop
pop
pop
aam
mov
loop
dec
insl
pop
mov
mov
fistpll
pop
dec
loope
mov
movsl
xchg
adc
mov
or
mov
sub
out
push
mov
pop
mov
mov
in
pop
mov
negl
mov
jge
cmpsl
or
mov
add
lea
dec
cltd
rorb
push
inc
xlat
add
add
roll
push
mov
push
add
cmpsb
push
mov
lods
jl
pop
ret
mov
mov
fwait
or
and
hlt
call
icebp
pop
std
push
dec
loopne
cmp
out
jecxz
dec
sti
or
pop
mov
bnd
loope
push
add
jns
jle
lret
add
neg
dec
fadd
jge
pop
and
loopne
push
in
loop
dec
pop
jo
xor
xchg
inc
inc
cltd
popa
arpl
fisubs
inc
movsb
das
packsswb
mov
adc
fimuls
popa
pop
jle
cmpxchg
shll
out
mov
mov
cmpsb
outsb
lock
xchg
mov
xor
aaa
adc
dec
shlb
xor
stos
adc
push
aas
or
jne
ss
mov
incl
imul
adc
int
pop
sub
in
das
aam
and
mov
shlb
in
cmp
pushf
or
ja
rcrb
adc
inc
lods
lods
cmc
push
push
les
orl
dec
sti
rorb
test
in
cmp
outsl
lds
add
or
or
inc
push
xor
decb
push
out
inc
das
adc
inc
mov
inc
lea
inc
sbb
cmpsb
ja
daa
xor
mov
daa
sbbb
aaa
mov
inc
sarb
mov
mov
adc
pop
or
pop
jg
ja
push
fsub
cmpl
xlat
scas
adc
mov
pushf
jb
push
dec
in
subl
xchg
jle
mov
pusha
ret
addl
out
mov
pop
sub
imulb
aam
ret
mov
mov
popa
pop
fmul
sub
sbb
push
mov
or
leave
push
daa
jo
incb
dec
push
pop
sbb
and
pop
xchg
test
mov
aad
sbb
cmp
and
leave
lahf
and
insb
fs
pop
sub
out
bswap
cmp
sub
xchg
sbb
cltd
sub
scas
imul
jg
aaa
scas
jae
sti
les
inc
sub
or
out
and
jp
ret
roll
outsb
dec
xor
xchg
push
mov
neg
mov
mov
sub
dec
rcl
pop
es
push
mov
inc
add
jp
incb
call
pushf
push
lods
or
add
mov
push
dec
mov
adc
xchg
loop
nop
mov
push
mov
sbb
stos
adc
rcrb
idivl
int3
imul
pop
adc
js
xor
in
mov
cmp
or
lahf
dec
ss
push
mov
leave
cld
inc
sbb
cwtl
clc
leave
jle
xor
popa
and
sub
dec
cltd
loop
negl
movb
js
add
mov
out
push
lcall
lds
popf
and
sub
inc
sub
hlt
subb
out
inc
jl
adc
pop
ror
mov
pop
inc
or
mov
xchg
adc
stos
pop
dec
call
popa
mov
mov
pushf
pop
push
jl
andl
int
and
daa
push
xchg
in
int
or
jl
cwtl
jae
push
in
mov
pop
hlt
or
or
pop
sahf
pop
ret
dec
adc
jae
and
int
lret
add
pop
pushf
loop
mov
orl
xor
orl
shr
xorl
shl
adcl
or
movzbl
sbb
mov
mov
mov
and
movl
sub
mov
neg
mov
xor
shr
negl
shl
or
subl
push
lea
sbbl
push
lea
orl
push
call
and
mov
cmpl
jb
jmp
push
push
pushl
pushl
call
mov
xor
shr
shl
or
push
lea
push
mov
sub
mov
shrd
shr
cmpl
jg
xor
add
mov
sub
imul
jmp
push
push
push
call
mov
mov
movl
xor
addl
xor
or
andl
lea
push
shl
movl
call
mov
sbb
mov
sub
xor
shl
adc
shr
or
mov
sub
push
sub
lea
push
orl
mov
inc
mov
incl
shrd
shr
or
mov
mov
sbbl
xor
shl
xor
movl
or
adcl
lea
push
call
and
mov
or
mov
cmpl
jl
mov
and
xorl
jmp
pushl
call
xor
shl
shr
or
addl
jmp
xchg
adc
inc
adc
xchg
popa
aaa
repnz
cmp
adc
addl
aad
pop
popa
out
mov
xorb
mov
jb
in
cmc
pop
mov
and
add
scas
add
xchg
dec
into
fistpll
push
sub
push
bound
mulb
sbb
mov
shlb
push
add
xor
loope
pop
push
cs
pop
shrb
shr
les
jl
pop
inc
out
es
es
inc
or
jb
pop
push
mov
scas
into
cmp
push
ss
xor
ja
dec
jmp
int
pop
fiadds
fisttpl
lret
js
xlat
clc
mov
enter
movsl
test
movsl
cld
fisubrl
push
lods
dec
imul
xchg
cmp
xlat
pop
bound
mov
cmp
je
jne
or
lods
icebp
mov
outsb
js
cmpsl
test
cs
sub
fdiv
out
xchg
rolb
mov
cli
inc
lock
imul
stc
xor
scas
pop
in
adcl
std
inc
pop
adc
sub
das
insl
xchg
jg
inc
mov
jmp
or
andb
add
jno
pop
sub
pop
repz
rolb
aas
int3
push
push
clc
jl
push
mov
pushf
in
xor
stc
aam
mov
mov
sub
in
pushl
dec
or
dec
call
lcall
mov
mov
outsl
addr16
gs
jg
mov
loopne
or
dec
stos
hlt
out
les
adc
dec
nop
mov
or
xchg
sub
xchg
scas
not
faddl
pop
jb
rclb
or
dec
jb
jmp
scas
scas
or
cld
and
adc
aaa
jecxz
pop
sbb
lds
in
les
push
sti
testl
pushw
arpl
mov
lret
mov
ret
adc
movsb
mov
jp
mov
fsubrs
xchg
insb
and
cmp
adc
sbb
std
xor
mov
out
pop
or
int3
out
fwait
out
cmp
pop
lods
push
outsb
iret
push
pop
lock
enter
mov
mov
cmpsb
xchg
cmp
es
xor
pop
rorb
push
jl
adc
notl
jmp
lret
and
jne
inc
lods
mov
xchg
mov
pop
xchg
cld
adc
lret
out
jbe
icebp
repnz
xor
lds
mov
sbb
aad
dec
mov
inc
push
mov
pop
and
ja
dec
jl
cmp
mov
lcall
cmp
mov
insl
out
mov
dec
sbb
lods
mov
jmp
sarb
add
mov
arpl
test
cmpsl
jnp
xlat
movsl
jmp
ljmp
xor
daa
test
adc
pop
adc
push
clc
call
and
fdiv
sbb
push
xchg
ja
xor
inc
push
xchg
mov
mov
ds
lcall
mov
imull
int3
cmpsl
shl
xor
idivb
insl
xchg
ds
add
ret
rcr
fistpl
cmc
test
and
aad
push
ror
mov
dec
rol
sbb
hlt
adc
mov
push
mov
outsl
dec
int
mov
pop
aas
mov
adc
and
clc
mov
icebp
arpl
test
inc
jecxz
out
mov
loope,pt
sbb
test
gs
out
push
hlt
add
aas
dec
mov
stc
sub
icebp
xor
pushf
sub
test
dec
ljmp
aaa
and
and
lods
sahf
add
mov
out
inc
dec
mov
add
fyl2x
xor
lods
insb
cli
mov
in
push
dec
mov
cmp
adc
aad
jecxz
dec
inc
dec
lcall
xchg
fdivl
and
in
dec
adc
pop
mov
pop
dec
push
in
fdivrs
fbstp
ss
mov
sti
outsb
daa
bound
inc
popf
mov
nop
xchg
mov
in
shll
rcrl
sti
and
inc
dec
push
repnz
and
pushf
dec
mov
mov
dec
dec
addb
or
cli
in
lock
test
sbb
sbb
xchg
jo
dec
xchg
out
in
popf
ljmp
sub
cmpsl
or
orb
lahf
mov
jae
fisubs
mov
subb
lds
cmp
cmp
sarb
inc
jmp
inc
pop
sbb
pop
ss
dec
cmp
adc
pop
sub
or
dec
loopne
push
add
adc
inc
in
push
test
cs
inc
inc
mov
sub
fmull
stos
adc
and
aam
and
and
popa
int3
test
inc
xchg
or
fsubrs
dec
mov
mov
aad
inc
movsl
xor
push
imul
test
outsl
xchg
pop
enter
fisubl
int
adc
adc
call
insb
fcomps
or
fdiv
aam
shlb
and
imull
hlt
sbb
push
pop
adc
out
xchg
jg
adc
adc
xchg
sahf
cmp
loope
add
cld
pop
sbb
xlat
pop
and
rcrl
dec
pop
shrb
push
shl
inc
lcall
or
jg
sbb
call
out
jge
dec
je
or
jns
int3
mov
stos
jl
adc
xor
add
sub
sub
addr16
fwait
movsb
mov
xchg
cmp
jne
pop
icebp
mov
ja
xchg
loop,pn
add
adc
pop
pop
xchg
ss
push
iret
mov
ss
shll
mov
jg
cld
addr16
cmp
int
dec
and
sbb
mov
je
sub
and
cmp
in
xchg
sub
movsb
lods
push
test
cmp
sahf
les
adc
mov
mov
popa
inc
fldt
pop
mov
mov
pop
popa
add
add
or
jl
fidivrs
jb
jno
mov
and
jo
mov
cmp
add
lea
add
lock
add
bound
out
test
addb
lods
jmp
movsl
fidivrl
ret
add
pop
ret
or
jbe
jbe
mov
cmp
jp
nop
shl
insb
cli
les
mov
jecxz
insb
or
dec
aam
aas
add
enter
out
imul
lds
cmp
xor
leave
add
int
mov
stc
ljmp
test
dec
push
add
mov
sbb
fnsave
or
jge
xor
jne
push
push
and
inc
ret
cwtl
arpl
cmpsb
mov
clc
icebp
and
xor
inc
push
dec
fstpl
bound
mov
sbb
xchg
sbb
xchg
daa
cs
je
aas
cmovns
fdiv
push
loop
push
lea
sbb
push
adcl
mov
sub
mov
shrd
and
shr
mov
mov
adc
xor
xor
subl
or
shl
mov
sub
mov
movl
shrd
shr
adcl
mov
mov
xor
jmp
adc
sahf
dec
push
rcrl
xchg
dec
push
scas
adc
jno
sar
sub
xor
cmp
inc
mov
icebp
aam
rclb
inc
push
xchg
mov
sub
push
in
in
out
inc
sbb
inc
movsb
jg
and
loopne
jnp
push
xchg
mov
mov
cmc
pop
adcb
nop
fsubrl
mov
xor
and
pop
adc
mov
jge
lahf
cmpsb
xchg
cmp
mov
push
cmp
inc
xchg
iret
out
mov
repz
xor
lret
ljmp
pushf
pop
xchg
mov
mov
ja
gs
call
inc
push
mov
inc
pusha
es
sbb
jecxz
mov
pop
notl
rorb
cwtl
and
cltd
lock
mov
mov
fmuls
or
lock
mov
test
roll
cmp
add
movsl
loop
bound
stos
jne
jmp
fsubrl
cmp
inc
cli
loope
pop
mov
cmpsb
mov
pushf
mov
inc
je
inc
sub
outsb
sub
aaa
sbb
fistpl
jecxz
mov
or
jge
jbe
cld
or
fwait
inc
lcall
dec
lret
push
inc
inc
fsubs
mov
out
inc
fidivs
push
mov
mov
call
sbb
stc
adc
mov
int3
pop
gs
mov
je
in
loope
test
sbb
or
pop
jmp
pop
es
xchg
adc
mov
and
lcall
nop
pop
or
cmc
mov
popa
mov
stos
jae
inc
mov
cmp
shl
addl
lds
push
scas
xor
jle
arpl
sahf
sbb
imul
in
and
xchg
stc
cmpsb
idiv
cmpsb
test
adc
or
jp
dec
outsb
dec
scas
xlat
out
or
rclb
fdivl
iret
inc
int
daa
sbb
nop
mov
test
inc
sbb
dec
jl
mov
arpl
inc
clc
iret
xchg
mov
pop
icebp
mov
cmp
inc
and
or
cld
imul
iret
fwait
ret
pop
out
shlb
sahf
adc
push
sbb
test
pop
cmpsl
fs
sti
adc
test
lcall
scas
xor
jns
aaa
cmp
sbb
jge
fstl
push
lds
insb
mov
pop
sub
fildll
cmc
dec
lret
jae
adc
pusha
adc
and
jmp
hlt
shll
mov
push
out
sbb
jecxz
scas
vaddsubps
xchg
dec
es
or
mov
xor
ss
scas
ss
sti
je
cmp
scas
arpl
sub
push
pop
sbbb
add
sub
push
cmpb
inc
jns
jmp
xchg
push
sbb
push
push
mov
mov
mov
dec
repz
repnz
out
mov
outsb
or
stos
and
pop
pop
movsl
shl
mov
sbb
sub
stos
into
xor
pop
mov
push
iret
in
jle
stc
inc
add
inc
loope
outsl
add
mov
xor
inc
inc
aad
roll
or
cwtl
mov
xor
dec
ljmp
outsl
adc
mov
jl
xchg
cmp
imul
inc
xchg
and
in
das
inc
sub
mov
rcrl
cmp
add
jl
test
mov
repz
adc
in
inc
test
imul
stos
lock
mov
clc
mov
cltd
xchg
inc
and
jo
cmpl
mov
mov
and
cmpsb
inc
shl
rclb
pop
jo
addr16
jno
sti
rcr
add
jmp
enter
or
stc
push
lds
pop
test
call
xlat
fs
int
xor
test
les
bound
cmpsb
mov
popf
fadd
cmp
lahf
movsb
pop
adc
or
cmpsl
inc
cmp
jl
cmpsl
mov
jo
jmp
repz
jns
push
push
std
jl
jno
mov
xchg
sub
cmc
stc
subb
sub
fbstp
sub
cmpl
stos
pop
mov
loop
xor
lahf
pusha
mov
icebp
fistps
mov
out
popa
mov
pop
mov
popf
ds
cmp
test
adc
dec
xor
mov
je
jno
ds
notb
push
xchg
dec
mov
add
jnp
iret
sub
subl
fcompl
xlat
mov
cmc
xor
and
fmulp
sbb
mov
mov
pop
dec
lret
pop
jnp
adc
push
stos
clc
xchg
jle
outsl
aas
xchg
pop
out
pop
mov
dec
aam
xchg
sahf
and
xor
std
pop
or
incb
mov
jo
out
hlt
je
jne
into
shl
push
jns
or
sub
ret
je
lods
mov
adc
leave
lock
mov
or
cli
pop
mov
dec
cs
ds
push
xchg
sti
jnp
addr16
and
mov
jae
je
out
push
cs
in
cltd
jecxz
mov
jno
push
sbb
jmp
jge
mov
add
push
mov
pop
xchg
test
push
xor
sbb
dec
fisubl
xchg
and
mov
push
cwtl
jb
jns
jge
sub
dec
fistpl
inc
pop
stos
loop
pop
cmp
sti
inc
or
xchg
xchg
sub
pusha
stos
jne
repnz
dec
orb
cld
out
add
sub
and
push
ljmp
nop
add
fs
std
mov
movsl
cmpsb
call
fmull
adc
adc
mov
je
sti
je
movsl
subb
dec
loop
cmp
bound
mov
push
mov
jno
sbb
sbb
pop
je
mov
out
imul
xchg
jne
mov
xor
enter
addl
mov
pusha
ret
scas
mov
outsl
es
dec
jl
adc
sub
clc
add
mov
loope
adcb
pop
scas
push
sub
jb
das
xchg
gs
pop
mov
mov
shlb
inc
fadds
lods
mov
sbb
add
xor
mov
cmp
inc
mov
pusha
gs
inc
jno
mov
add
inc
stc
cmpsb
xor
js
lret
loop
cs
ds
push
jae
sbbb
fdivl
push
xchg
sub
inc
insl
out
mov
mov
ds
or
and
std
imul
mov
popf
test
sarl
aas
scas
dec
sub
mov
pop
and
mov
in
or
lcall
pop
sub
insb
mov
bound
and
dec
daa
loop
add
mov
outsl
add
or
imul
jl
or
or
jle
jb
fildl
add
inc
inc
add
lret
add
lea
adcl
push
xorl
shl
call
mov
cmpl
jg
sub
and
jmp
pushl
push
call
mov
shl
xor
shr
or
push
lea
sub
push
cmpl
jg
xorl
jmp
push
pushl
pushl
push
push
push
call
mov
mov
shrd
shr
mov
mov
sub
xor
mov
adc
shl
mov
mov
mov
sbb
xor
or
mov
and
shrd
adcl
shr
adc
mov
mov
orl
xor
xor
andl
or
cmpl
jg
jmp
call
add
mov
shl
mov
shrd
shr
mov
adcl
mov
xor
xor
sbbl
or
notl
add
lea
push
shl
xorl
call
mov
xorl
mov
cmpl
jg
jmp
push
pushl
call
xor
shr
jmp
notl
notb
sub
stos
mov
shrd
psubsw
bound
out
push
xor
jle
fcmovu
daa
pop
mov
fcoms
popa
mov
sub
loope
add
jae
jge
popf
mov
stos
in
inc
push
dec
jne
mov
popf
mov
mov
add
sarl
xor
rcll
inc
adc
sti
mov
mov
icebp
aas
dec
and
outsl
jbe
out
xor
cs
or
icebp
repz
inc
cmp
in
push
or
test
mov
add
push
lahf
mov
sub
jne
pushl
xchg
mov
pop
push
push
movsb
adc
xchg
cmp
sub
dec
inc
and
rolb
lods
xchg
jecxz
sarl
movsb
inc
xchg
mov
es
int
mov
rclb
mov
ficomps
nop
les
jmp
mov
stos
xchg
in
push
sub
lret
cmp
or
stc
jmp
pushf
push
idivl
adc
ss
jp
clc
je
aad
insl
mov
pop
xor
jne
jbe
jno
dec
jb
cmpl
iret
adc
fcmovbe
push
adc
popf
xchg
xlat
dec
lret
adc
or
sti
imul
sub
mov
add
ret
outsl
jp
fistpll
mov
sub
je
sbb
notb
test
inc
call
xor
pusha
jbe
inc
in
fldenv
clc
push
xchg
nop
xchg
cli
push
mov
sti
adc
jge,pn
pushf
out
cltd
pop
iret
rorb
hlt
pop
mov
push
test
js
std
into
inc
shll
imul
jg
sahf
aad
sbb
lret
pop
and
add
mov
scas
mov
adc
scas
mov
daa
int
cmp
pushf
fadds
inc
add
cmp
push
and
mov
ss
out
aaa
arpl
scas
sarl
sbb
out
dec
ficomps
adc
dec
test
mov
daa
ds
loope
or
mov
lea
push
cmpl
ja
and
jmp
push
push
push
pushl
call
mov
mov
shrd
shr
mov
mov
addl
xor
neg
xor
or
push
sbb
mov
movzbl
and
mov
mov
push
orl
pushl
subl
shl
call
lea
xor
add
add
push
add
mov
mov
cmpl
jbe
adc
or
jmp
push
push
push
call
shrd
shr
mov
mov
xor
xor
or
addl
push
adc
mov
push
adcl
pushl
subl
shl
call
cmpl
jge
sbb
jmp
pushl
pushl
push
push
pushl
pushl
call
mov
mov
mov
mov
mov
mov
sbbl
mov
rol
mov
adcl
xor
movl
mov
movl
cmp
movl
je
or
movl
mov
movl
mov
mov
mov
mov
mov
mov
add
mov
mov
xor
shld
shl
xor
mov
xor
inc
xor
mov
mov
mov
movzwl
mov
cltd
idiv
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
imul
mov
and
mov
and
mov
imul
mov
sub
mov
cmp
ja
mov
mov
mov
shrd
shr
mov
xor
shl
mov
xor
or
mov
mov
mov
xor
xor
shrd
mov
shll
xorl
xor
or
mov
shr
or
xor
cmp
ja
jae
mov
mov
movb
movb
movb
movb
mov
movzbl
mov
xor
mov
imul
movzbl
xor
and
add
mov
movb
movb
mov
mov
and
or
imul
mov
cmp
ja
movb
movb
movb
mov
mov
and
or
add
mov
movzbl
cltd
movzbl
idiv
mov
movb
movb
movb
mov
mov
xor
sub
mov
movzbl
movzbl
cltd
idiv
mov
cmp
jb
mov
mov
shrd
shr
mov
mov
xor
xor
or
sub
shl
mov
mov
shrd
shr
mov
mov
xor
xor
shl
mov
or
ror
jmp
mov
mov
mov
mov
mov
shrd
shr
mov
mov
xor
xor
or
shl
add
mov
mov
mov
mov
xor
xor
shrd
mov
shll
xorl
xor
or
mov
shr
or
xor
cmp
jb
ja
cmp
jb
mov
decl
jne
mov
mov
shrd
shr
mov
mov
xor
xor
or
push
add
push
lea
push
shl
call
mov
mov
shrd
shr
mov
mov
xor
xor
or
add
push
push
mov
shl
mov
shrd
shr
mov
mov
xor
xor
or
add
push
shl
call
push
lea
push
mov
mov
shrd
shr
mov
mov
xor
xor
or
add
push
shl
call
mov
mov
shrd
shr
mov
mov
pop
xor
xor
pop
shl
or
pop
leave
ret
push
mov
sub
not
mov
cmpl
jb
jmp
push
call
mov
mov
sub
push
mov
mov
sbb
mov
adc
orl
orl
add
mov
mov
add
mov
cmpl
ja
sbb
inc
jmp
pushl
pushl
push
pushl
push
pushl
call
mov
sub
mov
sbb
mov
cmpl
ja
or
jmp
push
push
push
call
orl
orl
lea
mov
mov
mov
not
mov
sbbl
add
neg
mov
mov
adcl
mov
mov
neg
shrd
cmpl
ja
or
jmp
push
push
push
pushl
push
call
shr
mov
mov
xor
xor
or
cmpl
jb
jmp
pushl
push
push
pushl
pushl
call
mov
movl
movl
movl
movl
movl
movl
xor
movl
movl
mov
add
movl
movl
cmpl
jge
adcl
adcl
jmp
pushl
push
push
call
movl
movl
movl
movl
movl
dec
movl
sbbl
movl
movl
movl
cmpl
ja
xor
add
sub
mov
jmp
push
push
push
call
movl
movl
movl
mov
shl
mov
andl
push
addl
push
push
push
andl
call
xorl
mov
xorl
mov
mov
mov
add
xor
add
mov
mov
sub
sub
mov
sbb
lea
and
mov
cmpl
jg
jmp
pushl
pushl
push
call
mov
or
and
mov
or
xor
cmp
movl
jne
not
mov
mov
shrd
cmpl
jbe
adc
jmp
push
pushl
push
pushl
pushl
call
shr
mov
mov
shl
xor
xor
subl
or
mov
mov
cmp
movl
jne
mov
add
mov
neg
xor
xor
or
sbb
mov
cmpl
jbe
jmp
pushl
call
mov
mov
shrd
mov
mov
xor
shr
cmpl
jbe
xor
jmp
push
push
call
mov
xor
or
shl
sub
mov
andl
mov
mov
add
adc
mov
and
mov
adc
mov
shrd
negl
shr
sub
mov
mov
cmpl
jg
add
jmp
pushl
pushl
pushl
pushl
pushl
call
xor
shl
xor
or
mov
mov
subl
shrd
shr
neg
mov
cmpl
jbe
adcl
jmp
pushl
pushl
pushl
call
mov
mov
xor
xor
or
shl
incl
lea
mov
cmpl
jl
dec
jmp
pushl
call
mov
shrd
shr
mov
mov
mov
adc
xor
cmpl
jbe
and
jmp
call
mov
xor
or
shl
imul
mov
dec
mov
sbbl
shrd
mov
or
mov
xorl
xor
orl
shr
mov
mov
addl
xor
subl
or
shl
sub
mov
movl
cmp
mov
mov
jg
sbb
mov
cmpl
jb
jmp
pushl
push
call
mov
shrd
mov
mov
xor
shl
xor
or
shr
subl
mov
sub
mov
mov
adcl
mov
subl
shrd
adcl
shr
add
mov
cmpl
jg
sbb
jmp
pushl
push
call
mov
mov
xor
xor
or
shl
orl
imul
addl
sub
jmp
mov
or
mov
mov
cmpl
jl
or
jmp
push
pushl
call
mov
shrd
mov
mov
xor
shl
addl
xor
adcl
or
andl
shr
cmpl
jg
jmp
pushl
push
push
push
call
mov
mov
mov
mov
shrd
shr
mov
cmpl
jg
mov
adc
or
jmp
push
pushl
pushl
pushl
pushl
push
call
mov
mov
xor
xor
or
shl
mov
mov
adc
add
add
xor
xor
adc
mov
mov
xor
add
adc
shrd
or
shr
movzbl
adc
mov
mov
xor
sbbl
shl
xor
movzbl
adc
or
neg
mov
add
movl
mov
mov
sub
imul
mov
cmpl
ja
or
jmp
push
pushl
pushl
pushl
call
mov
movl
mov
movl
mov
movl
adc
mov
xor
mov
cmpl
jbe
jmp
push
push
push
pushl
call
mov
shrd
shr
mov
mov
xor
shl
adcl
xor
or
movzwl
sbb
mov
lea
cmpl
jbe
and
jmp
pushl
push
pushl
pushl
call
mov
mov
mov
shrd
shr
mov
adcl
mov
subl
shl
adc
mov
xor
xor
sbbl
or
sbb
mov
or
mov
xor
cmpl
jl
jmp
push
push
push
call
mov
mov
shrd
shr
mov
mov
xor
shl
xor
adc
or
adcl
lea
mov
or
mov
cmpl
ja
add
jmp
pushl
pushl
push
call
mov
mov
shrd
shr
mov
mov
subl
shl
and
mov
xor
adcl
xor
xorl
or
cmpl
jle
inc
decl
jmp
push
call
mov
mov
or
mov
mov
shrd
notl
shr
mov
sub
mov
xor
addl
shl
addl
xor
sbb
or
lea
mov
mov
addl
mov
shrd
shr
xor
add
mov
sub
xor
mov
mov
addl
xor
shl
adc
mov
xor
addl
or
mov
sbb
mov
or
add
cmpl
jle
sub
negl
jmp
push
push
call
mov
mov
shrd
shr
mov
cmpl
jge
neg
jmp
pushl
push
push
call
mov
xor
xor
or
lea
mov
cmpl
jge
jmp
push
push
push
pushl
push
push
push
pushl
push
pushl
push
push
push
pushl
call
mov
shl
mov
shrd
shr
mov
mov
addl
xor
orl
xor
subl
or
xor
mov
shl
incl
mov
adcl
mov
orl
mov
addl
or
xor
mov
mov
andl
shrd
shl
sbbl
shr
mov
mov
or
xor
mov
xor
orl
or
mov
dec
orl
not
xorl
and
xor
or
xor
mov
xor
and
mov
cmpl
ja
sub
jmp
push
push
push
call
mov
xor
or
mov
mov
shrd
shr
mov
sbb
mov
mov
adc
mov
mov
xor
xor
xor
adc
mov
addl
xor
andl
shl
subl
mov
addl
or
mov
mov
cmp
je
xorl
mov
xor
add
mov
sub
and
sub
cmpl
ja
add
jmp
pushl
push
pushl
push
push
push
call
mov
mov
mov
shl
xor
mov
mov
mov
subl
xor
adcl
xor
sbbl
shrd
shr
xorl
or
xor
or
mov
mov
mov
mov
xor
shl
xor
mov
mov
mov
mov
xor
xor
shrd
or
shr
mov
mov
or
mov
cmp
jne
cmp
je
jmp
mov
mov
mov
shl
xor
mov
mov
mov
xor
xor
shrd
xor
or
mov
mov
mov
mov
xor
shr
or
mov
mov
shl
xor
mov
mov
xor
mov
mov
xor
shrd
or
shr
mov
mov
or
mov
mov
mov
cmp
jne
mov
cmp
je
mov
mov
mov
mov
lea
mov
mov
mov
mov
mov
shrd
mov
mov
xor
shr
mov
xor
shl
or
mov
mov
mov
xor
shld
xor
mov
mov
shl
mov
mov
xor
mov
cmp
jne
mov
cmp
jne
mov
mov
mov
mov
mov
xor
shl
mov
mov
xor
mov
mov
xor
xor
shrd
or
shr
mov
mov
or
mov
mov
push
pushl
push
push
call
mov
mov
shrd
shr
shr
xor
push
xor
mov
mov
mov
push
push
push
call
shld
mov
xor
or
mov
mov
shl
or
xor
xor
xor
xor
mov
mov
jmp
mov
add
mov
mov
mov
mov
mov
mov
movzwl
cltd
shld
xor
mov
mov
shl
mov
mov
xor
mov
cmp
jne
mov
cmp
jne
movl
mov
movl
mov
movl
mov
movl
mov
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
add
mov
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
mov
mov
xor
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
add
mov
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
mov
mov
or
mov
mov
shrd
shr
mov
mov
xor
xor
or
add
shl
mov
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
mov
mov
add
mov
mov
shrd
xor
shr
mov
mov
shl
mov
xor
or
mov
add
shrd
xor
shr
mov
mov
xor
or
mov
or
mov
mov
shl
shl
mov
mov
xor
xor
mov
mov
xor
shrd
shr
or
xor
or
mov
mov
mov
mov
xor
shl
xor
mov
mov
mov
mov
xor
xor
shrd
or
shr
mov
mov
or
mov
cmp
jne
cmp
jne
jmp
mov
mov
mov
mov
mov
xor
shl
mov
mov
xor
mov
mov
xor
xor
shrd
or
shr
mov
mov
or
mov
mov
push
pushl
push
push
call
mov
mov
shrd
shr
shr
xor
push
xor
mov
mov
mov
push
push
push
call
shld
shl
mov
or
xor
or
xor
xor
mov
mov
mov
mov
mov
mov
shl
xor
mov
mov
mov
xor
xor
shrd
shr
or
xor
or
mov
mov
mov
mov
xor
shl
mov
mov
xor
mov
mov
xor
xor
mov
shrd
or
shr
or
cmp
jne
cmp
je
pushl
pushl
pushl
push
push
call
pop
leave
ret
push
mov
sub
push
movl
movl
movl
push
movl
mov
mov
push
push
push
call
mov
mov
or
or
add
adc
push
push
push
push
call
mov
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
imul
mov
mov
xor
mov
mov
xor
mov
mov
and
xor
mov
sub
mov
sub
mov
imul
sub
mov
movl
movl
mov
mov
or
mov
imul
mov
movl
movl
movl
mov
mov
or
xor
div
mov
mov
sub
mov
xor
div
mov
xor
pop
mov
movl
movl
movl
mov
mov
sub
mov
div
mov
or
mov
sub
mov
mov
movl
movl
mov
mov
xor
lea
xor
leave
ret
push
mov
sub
push
push
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
xor
mov
div
mov
mov
mov
xor
mov
xor
mov
mov
or
lea
mov
xor
mov
and
xor
mov
div
mov
xor
sub
mov
sub
add
mov
mov
and
xor
div
mov
mov
imul
sub
add
cmp
ja
push
movl
movl
movl
mov
mov
add
xor
div
mov
mov
imul
imul
lea
mov
mov
mov
mov
mov
mov
mov
mov
xor
imul
lea
mov
mov
or
lea
mov
xor
mov
and
xor
mov
div
mov
mov
sub
mov
sub
add
mov
mov
and
xor
div
mov
imul
sub
add
cmp
jbe
pop
pop
pop
leave
ret
push
mov
sub
push
xor
xor
mov
sub
xor
push
push
movl
movl
mov
and
movl
movl
mov
mov
and
sbbl
mov
xor
inc
and
and
add
cmpl
jle
xor
sub
jmp
pushl
call
xor
mov
movl
movl
mov
cmpl
jb
xor
jmp
pushl
call
xor
sub
mov
imul
xor
mov
movzbl
sub
mov
div
mov
xor
or
sub
xor
sub
mov
cmpl
jl
sbb
jmp
push
pushl
pushl
call
movl
movl
movl
movl
movl
movl
sbbl
mov
xor
or
adc
mov
sub
imul
xor
add
mov
sub
or
add
or
and
cmpl
jge
xor
xor
mov
and
and
jmp
push
call
sub
mov
sub
add
mov
mov
orl
sub
or
add
cmpl
jg
mov
sbb
mov
adc
jmp
pushl
call
mov
xor
div
xor
mov
xorl
sub
mov
andl
add
sbbl
mov
movl
movl
not
movl
or
mov
sbb
xor
and
add
add
mov
xorl
xor
subl
div
and
mov
or
sub
cmpl
jl
jmp
push
push
push
push
call
mov
movl
movl
movl
movl
mov
mov
orl
xor
cmpl
ja
jmp
pushl
pushl
push
pushl
push
pushl
call
xor
push
pop
div
mov
xor
div
mov
or
cmpl
jle
or
jmp
pushl
push
push
push
push
call
sub
mov
movl
mov
mov
xor
sbbl
div
cmpl
jg
jmp
push
push
call
imul
xor
xor
imul
xor
mov
movl
movl
movl
mov
and
mov
orl
xor
adcl
div
mov
imul
add
xor
and
mov
sbbl
sub
mov
sbbl
movl
mov
mov
sbb
and
xor
and
sub
or
cmpl
ja
jmp
push
pushl
call
xor
mov
movl
movl
movl
mov
and
or
add
xor
add
or
andl
or
dec
sub
cmpl
jg
inc
mov
sub
jmp
pushl
call
mov
movl
movl
movl
and
mov
shr
sub
cmpl
ja
mov
and
jmp
push
push
call
xor
mov
lea
push
call
mov
or
or
mov
add
or
add
and
lea
adc
mov
and
movl
movl
movzwl
adc
movl
sub
movl
mov
sbb
mov
movl
subl
movl
movl
mov
mov
sub
imul
movl
mov
orl
mov
and
sub
mov
lea
adc
mov
mov
cmpl
jbe
sub
adc
jmp
push
push
pushl
pushl
call
mov
mov
imul
and
imul
or
mov
lea
mov
movzbl
xor
movl
movl
movl
and
movl
or
mov
mov
mov
sub
or
mov
mov
andl
xor
xorl
xor
adcl
mov
subl
call
xor
or
or
mov
mov
mov
mov
cmpl
jle
xorl
jmp
pushl
pushl
push
call
mov
xor
xor
mov
call
or
cmpl
jle
jmp
push
push
pushl
call
or
mov
mov
xor
xor
mov
call
or
mov
cmpl
jb
jmp
push
call
mov
mov
mov
xor
xor
mov
mov
addl
mov
mov
mov
andl
call
mov
adcl
or
mov
or
subl
push
adcl
push
andl
push
addl
push
addl
call
mov
mov
cmp
movl
jne
mov
mov
xor
xor
mov
call
xor
mov
mov
sub
mov
adc
mov
addl
xor
xor
andl
mov
call
or
movl
or
add
mov
adc
mov
xorl
xor
xor
mov
adcl
call
sub
mov
mov
xor
mov
mov
mov
sbb
mov
mov
xor
subl
xor
mov
mov
xorl
mov
decl
call
adcl
or
movl
mov
andl
or
push
subl
push
push
addl
push
xorl
call
mov
movl
jmp
jmp
cmpl
jg
add
jmp
push
call
lea
mov
mov
movl
mov
xor
cmpl
ja
jmp
push
call
shr
mov
xor
shl
or
mov
mov
mov
mov
mov
mov
movl
xor
xor
mov
sbbl
call
neg
mov
mov
adcl
mov
xorl
mov
andl
xor
adcl
xor
mov
movl
call
or
and
or
cmpl
jge
orl
movzbl
xor
jmp
push
push
push
call
mov
mov
xor
xor
movl
mov
subl
call
sbb
mov
sub
mov
xorl
mov
mov
subl
xor
subl
xor
mov
mov
mov
mov
incl
mov
call
sbb
mov
addl
or
sub
mov
or
push
subl
push
addl
push
push
sbbl
call
mov
cmp
movl
je
cmpl
jbe
jmp
push
push
call
mov
mov
xor
xor
mov
call
mov
mov
cmpl
ja
jmp
push
pushl
push
call
mov
mov
xor
xor
mov
call
or
or
sbbl
mov
imul
cmpl
jle
not
decl
jmp
push
pushl
push
pushl
push
pushl
call
add
mov
mov
mov
jmp
movl
jmp
cmpl
jb
xorl
jmp
push
call
mov
mov
xor
xor
mov
call
mov
xor
mov
mov
mov
xorl
xor
addl
xor
adcl
mov
call
subl
or
or
adc
mov
mov
xor
adcl
xor
mov
call
adc
mov
cmpl
jb
jmp
pushl
call
mov
mov
mov
xor
xor
mov
mov
mov
orl
call
or
or
mov
or
push
push
negl
push
push
subl
call
movl
mov
jmp
movzbl
adc
mov
mov
and
mov
xor
andl
xor
movl
mov
addl
call
add
mov
mov
mov
mov
sub
mov
cmpl
ja
movl
jmp
pushl
push
call
mov
xor
xor
mov
call
or
or
mov
movl
jmp
mov
cmpl
jl
jmp
pushl
push
push
call
mov
xor
xor
mov
call
mov
mov
sub
mov
xor
or
or
mov
xor
xor
subl
mov
call
xor
or
xorl
or
xor
mov
mov
add
mov
xorl
xor
sbb
mov
sub
sub
sbb
mov
xor
xor
or
xor
movzwl
and
add
cmpl
jge
jmp
push
call
mov
movl
movl
movl
movl
movl
movl
and
movl
xor
movl
cmpl
jl
mov
mov
and
adc
jmp
pushl
pushl
pushl
push
pushl
pushl
push
push
call
mov
add
mov
sub
cmpl
jbe
jmp
push
push
push
push
call
xor
push
pop
div
mov
xor
add
mov
xor
mov
xor
div
dec
or
sbb
mov
cmpl
jg
orl
jmp
pushl
pushl
call
xor
mov
sub
mov
mov
sub
cmpl
jle
xor
jmp
push
push
pushl
call
mov
xor
mov
div
mov
xor
sbbl
div
orl
mov
sub
mov
mov
add
lea
mov
movl
movl
movl
movl
movl
movl
movl
mov
or
mov
xor
div
mov
xor
div
mov
lea
mov
mov
sub
mov
xor
mov
div
mov
imul
add
xor
mov
add
mov
and
xor
mov
mov
add
add
mov
movl
movl
movl
movl
movl
movl
movl
mov
mov
imul
imul
mov
imul
mov
sub
add
mov
and
mov
sub
imul
mov
mov
or
sub
xor
mov
div
xor
mov
mov
add
add
mov
andl
jmp
mov
inc
mov
mov
mov
cmp
je
mov
mov
mov
add
mov
mov
mov
mov
mov
movl
movl
movl
movl
lea
mov
mov
movzwl
xor
movzwl
sar
mov
movzwl
xor
movzwl
shl
or
movzwl
mov
mov
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
movzbl
push
lea
push
call
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
add
mov
mov
cmp
je
mov
mov
movzwl
xor
movzwl
sar
mov
mov
movzwl
xor
movzwl
shl
or
movzwl
mov
mov
mov
movzwl
xor
movzwl
sar
mov
mov
movzwl
xor
movzwl
shl
or
mov
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
mov
or
je
lea
mov
mov
xor
mov
call
mov
mov
mov
xor
mov
call
or
or
xor
xor
mov
mov
mov
mov
movsbl
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
movsbl
cmp
je
mov
movsbl
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
movsbl
cmp
je
jmp
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
movsbl
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
movsbl
cmp
jne
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
add
mov
jmp
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
mov
cmpl
je
mov
mov
movzwl
mov
mov
mov
jmp
jmp
cmpl
jne
xor
jmp
mov
add
mov
movl
cmpl
je
cmpl
je
mov
shl
mov
movl
sub
mov
movl
mov
cmp
je
mov
mov
mov
mov
mov
mov
mov
inc
mov
jmp
movl
push
jmp
push
mov
sub
push
movl
movl
movl
mov
mov
add
xor
mov
lea
mov
add
mov
movl
movl
mov
mov
add
xor
div
mov
xor
push
sub
imul
xor
lea
mov
movl
movl
movl
mov
mov
shr
sub
mov
imul
div
xor
or
xor
mov
movl
movl
movl
mov
mov
or
sub
or
mov
lea
mov
movl
movl
mov
mov
add
imul
xor
and
mov
movl
movl
mov
mov
and
sub
add
mov
movl
movl
mov
add
pop
div
mov
sub
add
imul
mov
movl
movl
movl
movl
movl
movl
mov
mov
mov
sub
mov
sbb
mov
mov
add
mov
adc
mov
or
or
add
mov
adc
mov
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
or
mov
sub
mov
imul
mov
sub
imul
xor
add
xor
push
mov
add
imul
mov
div
mov
lea
push
mov
mov
mov
mov
push
push
push
push
call
mov
mov
xor
sub
and
xor
mov
mov
lea
push
mov
push
pop
xor
div
mov
sub
add
and
lea
call
mov
mov
imul
mov
sub
add
mov
xor
sub
cmp
jne
mov
mov
sub
mov
sub
add
xor
xor
lea
mov
push
mov
and
xor
imul
mov
div
push
mov
add
push
mov
mov
imul
and
mov
imul
mov
xor
pushl
call
mov
mov
lea
mov
incl
mov
mov
xor
shld
shl
mov
mov
xor
xor
cmp
jne
cmp
jne
mov
mov
jmp
lea
mov
mov
mov
mov
mov
sub
mov
mov
mov
sub
mov
movl
movl
mov
mov
mov
mov
pushl
pushl
pushl
pushl
pushl
push
push
pushl
mov
call
mov
mov
pushl
call
mov
push
add
push
push
call
mov
jmp
mov
mov
pop
leave
ret
push
mov
and
sub
push
push
lea
mov
mov
mov
mov
sub
sbb
mov
orl
orl
lea
push
lea
push
call
mov
mov
pushl
mov
pushl
mov
pushl
pushl
pushl
pushl
pushl
call
pop
pop
mov
pop
ret
push
mov
and
sub
push
push
push
mov
pushl
pushl
call
test
je
movl
movl
movl
push
movl
adc
mov
andl
mov
andl
push
addl
push
push
adcl
call
push
subl
push
xorl
and
sbbl
and
push
push
orl
call
xor
xor
and
mov
cmpl
jbe
and
jmp
call
mov
xor
or
mov
xor
or
notl
mov
xorl
movl
movzbl
and
mov
movl
add
movl
movl
sub
movl
adc
movl
cmpl
jb
adcl
jmp
pushl
push
push
push
call
mov
mov
mov
mov
or
mov
or
mov
mov
sbb
mov
adcl
sub
mov
movl
sbb
mov
xor
xor
subl
and
sbbl
and
cmp
movl
jne
movl
cmp
movl
jne
sub
movl
sbbl
movl
adc
movl
cmpl
jl
sbbl
xor
jmp
push
push
pushl
pushl
push
pushl
call
movl
movl
mov
mov
sub
adc
mov
subl
imul
adcl
and
negl
imul
mov
addl
pushl
imul
incl
xor
mov
adc
mov
sbbl
div
xor
mov
adcl
xor
sbb
mov
sub
or
xor
sbbl
pushl
addl
pushl
call
andl
pushl
call
andl
movl
movzbl
sub
movl
cmpl
jge
negl
jmp
pushl
push
push
push
call
movl
movl
movl
movl
mov
mov
sub
mov
mov
add
mov
adc
cmpl
jge
and
jmp
pushl
push
pushl
push
pushl
push
call
mov
add
adc
and
mov
and
orl
mov
movl
decl
movl
addl
movl
xorl
movl
subl
dec
cmp
jne
movzwl
or
movl
mov
xorl
mov
movl
addl
mov
call
xor
lea
mov
mov
sub
sub
mov
lea
adc
mov
mov
cmpl
jbe
jmp
pushl
push
push
call
mov
mov
mov
xor
shl
shr
or
xor
mov
add
mov
or
mov
and
mov
xor
or
xor
or
sub
sub
mov
cmpl
ja
andl
jmp
push
pushl
pushl
call
mov
mov
shrd
shr
mov
mov
subl
xor
sbbl
xor
xorl
or
cmpl
ja
subl
jmp
push
push
pushl
push
pushl
pushl
call
mov
push
pushl
lea
push
shl
call
adcl
lea
subl
push
mov
mov
andl
lea
andl
push
adcl
mov
subl
lea
notl
mov
mov
orl
mov
push
xorl
call
xorl
push
addl
push
pushl
addl
call
mov
cmpl
ja
mov
xor
jmp
push
pushl
push
push
push
push
call
mov
mov
mov
shr
shl
or
mov
mov
sub
sub
mov
xor
xor
mov
or
xor
mov
lea
mov
cmpl
jle
adc
jmp
pushl
push
push
call
lea
mov
mov
sub
lea
xor
sbb
movl
movl
mov
sub
movl
movl
orl
mov
adcl
mov
sub
add
mov
mov
movl
adc
xor
cmpl
jb
and
jmp
push
push
push
call
xor
and
mov
and
mov
movl
movl
movl
movl
sbb
movl
add
movl
andl
mov
sub
mov
adc
mov
cmpl
jl
and
jmp
push
call
mov
push
push
or
or
push
addl
push
xorl
call
mov
negl
mov
sub
mov
movl
sbb
mov
mov
cmp
jne
cmp
je
and
movl
movl
movl
xor
add
mov
sub
xor
movl
mov
mov
sub
xor
mov
mov
mov
cmpl
jb
jmp
pushl
pushl
pushl
push
pushl
call
mov
add
adc
xor
xor
and
mov
and
mov
movl
movl
movl
and
movl
sub
movl
cmpl
jl
add
jmp
pushl
call
movl
movl
movl
mov
mov
push
push
xor
adcl
xor
push
push
call
addl
mov
andl
mov
push
push
push
sbbl
push
call
cmpl
jl
subl
jmp
call
mov
mov
push
push
push
push
andl
call
mov
sbb
mov
mov
mov
andl
add
movl
mov
adc
mov
cmp
movl
jne
movl
cmp
movl
je
xor
mov
xor
mov
addl
xor
adcl
shld
mov
and
shl
mov
mov
sbb
mov
sbbl
xor
subl
xor
mov
movl
cmp
movl
jne
movl
cmp
je
mov
mov
cmp
je
cmpl
jl
sub
jmp
pushl
call
mov
mov
mov
shl
xor
mov
mov
cmpl
jle
and
jmp
pushl
push
push
call
mov
xor
xor
shrd
xor
shr
or
or
mov
movl
mov
movl
cltd
movl
cmp
movl
jne
cmp
movl
jne
movzwl
add
movl
cmpl
jge
mov
add
jmp
push
push
call
movl
mov
mov
mov
xor
orl
shld
adcl
shl
movl
mov
mov
xor
sbbl
xor
mov
cmp
jne
movl
cmp
movl
jne
movl
mov
mov
shrd
shr
mov
mov
mov
mov
mov
shl
mov
xor
xor
or
cmp
jne
mov
mov
mov
mov
mov
mov
movzwl
mov
and
mov
or
mov
add
or
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
or
mov
or
mov
sub
mov
sub
mov
cmp
jbe
mov
mov
mov
mov
movzwl
mov
or
mov
sub
mov
or
imul
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
sub
mov
xor
mov
imul
mov
and
mov
and
mov
cmp
ja
mov
mov
shrd
xor
mov
shr
mov
xor
or
push
push
shl
push
lea
push
lea
push
call
pushl
pushl
pushl
pushl
call
mov
mov
mov
mov
shrd
shr
shl
xor
mov
xor
or
mov
mov
mov
mov
shrd
xor
mov
shl
shr
mov
xor
or
mov
mov
mov
mov
mov
cmp
jne
mov
mov
mov
cmp
jne
movb
movb
movb
movb
mov
mov
or
sub
mov
sub
movzbl
movzbl
cltd
idiv
movzbl
or
mov
movb
movb
movb
movb
movb
mov
mov
or
and
mov
imul
mov
movzbl
movzbl
and
mov
movzbl
cltd
idiv
mov
cmp
je
lea
push
lea
call
cmp
jne
cmp
jne
xor
jmp
xor
inc
jmp
mov
mov
mov
mov
add
adc
mov
mov
jmp
mov
push
push
lea
push
call
mov
push
pushl
lea
push
call
mov
mov
mov
mov
mov
mov
mov
lea
mov
add
movl
movl
mov
and
add
and
sub
and
mov
movl
mov
mov
or
add
cmp
je
mov
mov
mov
xor
shld
shl
xor
xor
cmp
jne
cmp
je
mov
mov
mov
mov
xor
shr
shl
or
xor
shld
shl
xor
xor
cmp
jne
cmp
je
mov
cltd
mov
mov
cltd
shld
shr
xor
shl
or
or
mov
mov
xor
xor
mov
cmp
jne
cmp
je
pushl
pushl
mov
mov
pushl
mov
call
mov
mov
mov
mov
push
add
push
lea
push
call
mov
mov
pop
pop
pop
mov
pop
ret
movl
cmp
movl
jae
movl
cmp
jae
shld
movl
shl
ret
mov
addl
xor
and
shl
ret
xor
xor
ret
push
mov
sub
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
mov
and
and
or
mov
sub
mov
mov
sub
add
add
mov
xor
cmp
jne
mov
mov
xor
div
push
push
push
xor
mov
mov
mov
mov
mov
imul
mov
div
mov
sub
xor
shl
imul
sub
xor
mov
mov
add
mov
add
mov
mov
mov
xor
and
mov
imul
mov
sub
or
mov
pop
xor
pop
pop
cmp
je
mov
jmp
mov
mov
sub
or
imul
add
jmp
movl
movl
movl
mov
mov
add
imul
mov
or
xor
mov
div
xor
leave
ret
push
mov
sub
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
xor
sub
and
sub
push
movl
movl
movl
movl
mov
mov
imul
mov
imul
xor
div
mov
mov
push
shr
and
xor
mov
sub
mov
mov
mov
and
imul
mov
imul
add
mov
sub
mov
mov
add
xor
pop
div
mov
push
and
sub
xor
add
mov
mov
and
imul
mov
imul
or
xor
pop
sub
mov
mov
or
mov
or
mov
add
or
mov
or
lea
cmp
jbe
pop
leave
ret
negl
subl
movl
cmpl
movl
je
cmpl
jbe
xor
jmp
push
pushl
pushl
pushl
push
push
push
pushl
push
push
push
push
pushl
push
call
add
mov
mov
pop
pop
pop
leave
ret
mov
mov
ret
orl
mov
mov
notl
or
mov
movl
jne
mov
sbbl
mul
ret
xorl
push
mul
and
mov
add
mov
mull
add
mov
mul
add
pop
ret
incl
push
mov
sbb
push
mov
andl
or
movl
jne
mov
mov
sub
imul
mov
mov
xor
div
andl
mov
and
mov
movl
div
not
mov
jmp
and
mov
andl
mov
movzbl
xor
mov
cmpl
jge
jmp
pushl
pushl
call
mov
shr
rcr
shr
rcr
or
jne
div
mov
mull
mov
mov
mul
add
jb
cmp
ja
jb
cmp
jbe
dec
xor
mov
pop
pop
ret
