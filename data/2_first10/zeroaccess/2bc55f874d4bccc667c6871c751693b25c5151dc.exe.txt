push
mov
sub
xorl
push
subl
push
xor
andl
inc
push
sbbl
push
adcl
call
test
movl
je
xor
movl
jmp
push
sbb
mov
push
andl
push
sbbl
call
movl
test
movl
jne
push
adcl
push
call
sbbl
test
jne
xorl
push
adcl
push
push
call
addl
test
movl
je
xor
movl
jmp
sbb
movl
and
mov
mov
sub
mov
mov
sub
movl
sbb
lea
mov
adc
lea
xor
or
and
mov
sbb
mov
mov
mov
sub
sub
mov
mov
mov
movzbl
add
mov
xor
andl
mov
add
mov
movl
mov
cmp
movl
jne
mov
mov
mov
xor
add
addl
mov
andl
jmp
xor
add
inc
mov
cmpl
jae
cmpl
jne
pushl
push
call
cmpl
jne
xor
add
inc
mov
jmp
mov
andl
mov
inc
mov
cmpl
jne
push
push
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
and
xor
movzbl
sub
mov
add
movl
cmpl
je
cmpl
jne
push
push
call
mov
dec
mov
jmp
mov
mov
andl
mov
inc
mov
cmpl
jne
pushl
push
pushl
call
cmpl
jb
mov
mov
adcl
mov
andl
xor
or
inc
mov
cmpl
jne
pushl
push
pushl
call
cmpl
jne
xor
xor
inc
mov
cmpl
jb
movl
cmpl
je
cmpl
jne
call
xor
or
dec
mov
jmp
sub
push
or
mov
andl
mov
inc
mov
cmpl
jne
call
cmpl
jne
xor
xor
inc
mov
cmpl
jb
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
push
push
pushl
push
pushl
call
jmp
adcl
mov
sub
mov
movl
cmpl
je
cmpl
jne
pushl
push
call
cmpl
jne
mov
dec
mov
xor
or
dec
mov
jmp
mov
andl
jmp
xor
xor
inc
mov
cmpl
jae
cmpl
jne
push
push
push
pushl
call
jmp
mov
xor
mov
movl
movl
andl
mov
mov
xor
or
and
mov
sbbl
xor
andl
xor
subl
add
sbb
mov
xorl
xor
xor
orl
add
lea
notl
mov
movl
cmp
ja
jmp
mov
mov
sub
and
mov
mov
subl
xor
lea
orl
push
subl
mov
andl
xor
xorl
lea
orl
push
orl
mov
andl
pushl
xorl
call
addl
mov
or
mov
neg
xor
sub
lea
mov
xor
mov
xor
addl
xor
adcl
add
mov
xor
lea
movl
mov
movl
cmp
movl
jbe
andl
mov
inc
mov
cmpl
jne
push
push
call
cmpl
jb
mov
sbb
mov
andl
mov
inc
mov
cmpl
jne
pushl
push
push
push
push
pushl
call
cmpl
jb
mov
sub
mov
andl
mov
inc
mov
cmpl
jne
call
cmpl
jb
add
mov
orl
mov
sub
negl
xor
movl
mov
mov
movl
mov
movl
cmp
jne
xorl
lea
adcl
mov
xorl
lea
subl
mov
mov
test
movl
je
xorl
mov
mov
mov
adc
mov
not
mov
mov
andl
mov
inc
mov
cmpl
jne
push
call
cmpl
jb
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
call
cmpl
jne
mov
inc
mov
jmp
mov
negl
mov
sbb
cltd
adcl
mov
movl
cmpl
je
cmpl
jne
pushl
push
push
call
xor
or
dec
mov
jmp
movl
cmpl
je
cmpl
jne
push
push
call
xor
xor
dec
mov
jmp
and
mov
add
inc
adc
movl
cmpl
je
cmpl
jne
pushl
push
pushl
call
xor
xor
dec
mov
jmp
movl
cmpl
je
cmpl
jne
push
push
pushl
call
mov
dec
mov
jmp
andl
sbb
xor
xor
mov
adc
mov
mov
mov
xor
dec
add
mov
mov
adcl
orl
xor
addl
mov
mov
xor
mov
movl
cmp
jne
movl
mov
cmp
je
mov
mov
mov
xor
add
adc
xor
xor
cmp
jne
cmp
jne
mov
mov
xor
mov
mov
mov
add
jmp
mov
cmp
je
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
pushl
mov
pushl
add
mov
mov
pushl
call
mov
mov
mov
jmp
mov
mov
xor
add
cmp
jne
mov
mov
mov
xor
add
cmp
jne
push
mov
xor
add
push
push
pushl
pushl
call
mov
mov
mov
mov
mov
xor
add
mov
mov
mov
mov
mov
mov
mov
movl
mov
xor
add
mov
mov
mov
mov
mov
mov
push
pop
sub
add
movl
mov
mov
mov
mov
mov
mov
mov
xor
add
mov
lea
mov
mov
xor
add
mov
lea
push
mov
xor
add
push
mov
push
pushl
call
mov
mov
mov
mov
xor
mov
add
jmp
lea
mov
mov
sub
mov
mov
mov
mov
movl
mov
movl
mov
xor
add
mov
mov
xor
add
mov
movl
movl
mov
mov
xor
add
cmp
je
mov
xor
mov
sub
add
mov
mov
xor
add
imul
cmp
ja
mov
mov
mov
sub
xor
xor
add
div
mov
mov
mov
xor
add
cmp
jbe
mov
xor
add
mov
mov
mov
xor
add
imul
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
add
movl
mov
mov
mov
movl
movl
mov
mov
xor
add
jmp
mov
mov
xor
add
imul
mov
movb
mov
mov
xor
xor
add
add
imul
add
mov
mov
mov
cmp
jb
mov
mov
xor
add
imul
mov
xor
add
or
mov
xor
add
mov
xor
add
mov
lea
jmp
mov
mov
xor
lea
mov
jmp
mov
mov
xor
lea
lea
xor
cmp
jne
mov
mov
mov
xor
mov
xor
mov
xor
mov
mov
xor
mov
mov
mov
xor
add
mov
mov
xor
add
mov
lea
mov
lea
mov
mov
test
je
movl
movl
movl
movl
call
mov
mov
mov
mov
mov
mov
mov
mov
cltd
mov
mov
add
adc
andl
xor
mov
mov
mov
mov
xor
add
mov
adcl
xor
mov
mov
xor
mov
cmp
jne
mov
cmp
je
mov
mov
mov
xor
add
adc
xor
xor
cmp
jne
cmp
jne
mov
mov
xor
mov
mov
mov
add
mov
mov
mov
xor
mov
add
xor
add
adc
xor
xor
xor
add
adc
xor
xor
cmp
jne
cmp
jne
mov
mov
mov
push
add
push
lea
push
call
mov
mov
pop
pop
pop
leave
ret
xor
andl
inc
ret
push
mov
sub
andl
mov
inc
mov
cmpl
jne
call
cmpl
jne
mov
inc
mov
cmpl
jb
movl
cmpl
je
cmpl
jne
call
mov
dec
mov
jmp
movzbl
sbb
mov
andl
mov
mov
sub
mov
movl
mov
andl
mov
inc
mov
cmpl
jne
push
push
push
push
push
push
push
call
cmpl
jb
push
mov
xor
movl
cmpl
je
cmpl
jne
push
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
and
mov
push
mov
add
cmp
je
mov
mov
xor
xor
add
add
adc
xor
mov
push
xor
xor
mov
add
adc
xor
xor
cmp
jne
cmp
je
jmp
mov
mov
mov
xor
add
mov
imul
mov
xor
add
mov
mov
mov
mov
xor
xor
add
adc
lea
xor
xor
xor
mov
add
adc
xor
xor
cmp
jne
cmp
jne
mov
pop
pop
pop
leave
ret
push
mov
push
and
movl
adc
mov
addl
mov
add
adcl
xor
movl
cmp
movl
jne
movl
cmpl
je
cmpl
jne
push
push
pushl
pushl
call
mov
dec
mov
jmp
mov
andl
jmp
xor
or
inc
mov
cmpl
jae
cmpl
jne
push
push
call
jmp
mov
add
mov
mov
mov
xor
push
mov
mov
add
cmp
pop
je
mov
jmp
mov
xor
add
jmp
mov
xor
add
leave
ret
push
mov
sub
push
addl
push
adcl
push
adcl
push
lea
orl
push
push
subl
call
push
call
and
movl
andl
mov
inc
mov
cmpl
jne
pushl
push
push
push
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
movl
cmpl
je
cmpl
jne
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
movl
mov
andl
xor
add
inc
mov
cmpl
jne
push
call
cmpl
jb
mov
sbb
mov
xor
mov
or
mov
mov
decl
add
andl
mov
xor
xor
adc
mov
test
movl
je
sub
mov
mov
or
mov
andl
mov
imul
orl
mov
add
xchg
mov
orl
sub
mov
mov
or
mov
movl
cmpl
je
cmpl
jne
pushl
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
xor
add
mov
sbb
mov
xor
or
add
orl
mov
movl
cmpl
je
cmpl
jne
pushl
push
pushl
call
mov
dec
mov
jmp
sub
mov
mov
xor
xor
add
mov
sbb
mov
mov
xor
adc
add
mov
sub
movl
lea
orl
xor
subl
xor
cmp
movl
je
mov
andl
xor
add
movl
cmp
jne
addl
pushl
call
mov
mov
xor
xor
xor
add
sub
or
mov
add
xor
mov
add
movl
cmp
movl
je
addl
pushl
pushl
negl
call
andl
mov
inc
mov
cmpl
jne
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
xor
mov
adc
jmp
rcrl
mov
jno
sti
inc
scas
dec
imul
jp
or
jp
sub
and
and
imul
xor
fsub
push
dec
imul
pusha
insl
pop
iret
pop
dec
and
jg
jo
jg
mov
fdivr
push
jg
in
cmp
mov
mov
mulps
fldl
push
cli
sbb
imul
adc
cmpsb
jmp
enter
cli
js
arpl
cwtl
pop
mov
repz
cmp
jae
fisubrl
push
jecxz
mov
mov
in
push
dec
or
repz
rolb
push
push
movsl
stc
push
jp
insl
mov
push
imul
jns
sub
pop
xor
cmc
int3
xchg
lcall
es
pop
ret
out
or
push
sub
xchg
push
push
and
repnz
test
cmp
sbb
insl
jns
scas
rolb
inc
xchg
fistps
push
xor
add
pop
hlt
mov
loop
pop
mov
xchg
pop
or
xchg
adcl
pop
mul
lahf
adc
jo
imull
clc
sbb
add
les
mov
ss
xor
aaa
mov
test
xchg
scas
sbb
sti
or
cmc
and
jge
mov
sbb
repz
xor
clc
int
in
adc
movsb
pushf
mov
add
cmp
sub
or
std
or
sub
lods
jmp
add
xchg
popf
scas
jl
ret
dec
leave
fimuls
test
stc
pop
ret
or
mov
lds
nop
sbb
clc
jnp
mov
jp
sarl
sti
mov
sub
fstl
movl
fcmove
mov
jno
mov
lret
in
fcoml
jecxz
test
and
inc
test
xchg
jb
pop
xchg
add
pop
inc
add
xlat
and
arpl
sbb
mov
rclw
stc
adc
sarb
add
mov
mov
cld
jb
xor
mov
mov
aas
out
sub
inc
arpl
out
movsl
push
push
mov
pop
sbbl
lds
xchg
leave
fadds
test
xchg
cmpsl
fidivrs
inc
inc
jmp
rcrb
sbbb
mov
jg
mov
outsb
outsl
bound
inc
xchg
xchg
ror
push
stos
dec
dec
jle
adc
mov
sub
shrb
movl
dec
out
call
jecxz
add
lods
or
sbb
in
cld
arpl
mov
inc
push
sub
xor
loope
cmpsl
cmc
jg
xchg
cmp
in
and
cmpsb
pop
loop
pop
fwait
dec
dec
lods
sub
mov
data16
jl
sbb
ds
push
stos
jmp
cld
shrb
hlt
mov
inc
cli
fwait
loopne
ret
push
lods
divb
scas
xchg
xchg
out
repnz
push
int3
jl
xchg
jmp
cwtl
mov
test
inc
push
jl
adc
and
mov
sbb
push
daa
out
mov
aad
rcll
adc
dec
daa
push
pop
pop
jb
pop
cld
bound
sub
aaa
xor
adc
pop
or
dec
mov
test
sti
enter
out
mov
mov
inc
xchg
push
push
pop
jmp
mov
mov
divb
loop
jecxz
dec
insb
stos
mov
imul
loop
ljmp
lods
sbb
sahf
mov
sti
jb
les
mov
pop
inc
mov
pop
and
push
out
stos
sbb
push
rcrl
sbb
jb
adc
push
ficoms
in
popa
and
inc
xor
cwtl
iret
lods
out
mov
out
in
xchg
icebp
push
inc
mov
out
pop
xor
loop
push
lcall
mov
dec
mov
jle
test
sbbb
test
push
sbb
loope
inc
sarl
mov
xchg
push
jle
xorb
cmp
mov
pop
inc
jbe
dec
push
or
in
bound
cmpsb
cmp
mov
sbb
fs
mov
mov
pushf
cmp
mov
cwtl
xor
clc
nop
dec
add
gs
and
mov
dec
fdivl
inc
std
movsl
inc
cld
sub
ret
out
in
mov
in
sub
daa
imul
adc
rolb
fmulp
pop
lods
lahf
mov
jp
out
rolb
into
inc
in
repnz
xor
into
stos
push
add
outsb
mov
testl
jae
ss
push
lods
mov
pop
aas
add
push
fnstsw
out
aas
fidivl
cltd
inc
std
out
cmp
mov
aad
leave
adc
ja
adc
add
mov
adc
dec
dec
iret
test
aam
stos
das
fiaddl
add
add
mov
pop
test
inc
mov
xor
in
push
mov
cmp
jl
add
add
sub
mov
cmp
ss
inc
sub
incb
mov
in
cmpl
movb
xchg
mov
xlat
sahf
aaa
dec
adc
mov
jp
dec
xchg
mov
jno
push
je
mov
and
push
ds
pop
jb
and
pop
jns
cmp
aaa
push
xor
sub
push
scas
dec
shrb
push
jg
pushf
lcall
orb
sub
or
mov
into
stc
sbb
fcomps
jns
mov
in
jecxz
fdivrs
lret
add
push
cmp
ja
push
sbb
jp
dec
cmp
dec
nop
pop
stos
addl
arpl
mov
lds
dec
mov
bswap
xor
jno
push
es
outsb
hlt
adc
xchg
mov
fs
loop
xchg
fisttpl
cmp
xchg
pop
mov
adc
aam
or
cmp
lret
in
int
mov
inc
adc
jo
iret
sti
mov
ret
aas
cs
lods
lea
adc
incb
push
mov
dec
data16
movsl
push
jns
cmp
popa
mov
clc
push
daa
inc
pop
xchg
cmpb
ficoml
inc
cld
popa
jmp
pop
mov
push
add
repnz
pop
or
push
mov
pop
inc
loop
sahf
sub
cmpsb
mov
mov
xor
or
mov
cmpsb
jge
sbb
mov
push
in
push
jl
mov
sub
jg
mov
xor
adc
fcomip
addl
sahf
pop
push
pop
addr16
mov
scas
aam
jns
mov
shrl
loop
mov
jg
push
pop
mov
jne
mov
in
fstps
xor
insl
mov
and
test
add
and
scas
xor
je
decb
rcrb
mov
sbb
and
nop
adc
pop
iret
and
and
cmp
or
test
xchg
sub
sub
ret
or
repz
jae
in
mov
cmp
mov
inc
xor
sub
test
popa
add
mov
aad
or
scas
sbb
orl
aam
add
push
xchg
sub
jp
out
jo
cmc
mov
or
cld
cmp
or
or
movsb
cwtl
dec
popf
ja
aad
shll
mov
cld
pushf
push
lahf
adc
xor
sti
rorl
mov
push
inc
lahf
scas
lahf
add
mov
push
jle
mov
sbbb
jmp
rcrl
mov
fdivs
stc
addr16
cld
sbb
xchg
adcb
inc
cmp
pusha
or
inc
adc
dec
jmp
push
push
xor
pop
in
sbb
xchg
out
cmp
cmp
shlb
dec
insl
mov
movsl
iret
and
pop
lcall
mov
out
in
inc
push
xchg
out
call
jbe
popf
or
loope
in
jl
sub
mov
or
lcall
sar
cmpsl
out
and
fsubrl
sbb
push
inc
cmp
fisubrs
loopne
cmpsl
outsb
cmp
int
push
and
push
fmulp
sahf
and
push
adc
jecxz
inc
out
dec
adc
push
bswap
iret
mov
cmp
or
pop
xor
xchg
imul
rolb
sti
xor
shl
push
jae
movsl
mov
add
cmp
fisubrl
pop
pop
ret
jo
out
in
rorb
cwtl
in
cmp
jp
fiadds
lods
lods
addr16
hlt
push
lods
and
arpl
inc
jnp
mov
xor
movb
xchg
jnp
in
shll
sbb
fdivr
int
inc
movsl
imul
arpl
sub
out
gs
push
dec
ret
adc
inc
ss
scas
stos
ds
xchg
lcall
dec
xor
roll
xor
adc
cmpsl
aas
fstps
sti
adc
lcall
prefetch
or
lods
sti
inc
out
decl
mov
xlat
add
xchg
inc
fdivrs
daa
mov
cmc
push
jnp
lock
xor
data16
popf
cmp
lds
and
shl
push
mov
movsl
sahf
push
jns
scas
cmp
mov
in
sahf
imul
idiv
cli
lret
outsb
pop
lods
jo
pop
stos
add
sub
push
aad
fs
mov
cmp
mov
xor
lret
adc
lret
dec
call
loopne
shll
orl
push
fidivl
cli
push
push
mov
ss
je
arpl
adc
fs
inc
ljmp
into
inc
adc
pop
cmp
mov
imul
out
out
rcr
daa
sbb
pushf
xor
insl
sbb
icebp
xchg
aas
xchg
push
in
pop
in
std
mov
mov
arpl
pop
jge
sbb
in
jg
add
sbb
popf
fsubrs
and
adc
lods
fs
add
mov
pop
push
mov
jb
je
xor
cmp
xor
out
mov
movhps
pop
cmp
enter
mov
popa
lret
dec
popa
aam
xchg
mov
ljmp
jp
mov
pop
imul
popa
idivl
pop
sarl
fwait
pop
sbb
or
lret
int
mov
out
sub
inc
stc
test
test
mov
test
jae
sbbb
jge
xchg
dec
mov
lret
xor
loope
mov
cmp
xor
lret
sbb
test
aad
adc
jbe
mov
scas
adc
push
std
sbb
notl
mov
ljmp
mov
xchg
lds
push
add
rcll
cmovb
jne
shll
sub
mov
shll
sub
jecxz
xorl
dec
fistpll
jl
test
fistl
inc
mov
cmp
popa
fsubrs
mov
cmp
cmp
out
add
add
mov
xor
or
mov
addr16
sti
scas
not
out
jecxz
cwtl
ljmp
mov
sub
imul
inc
xchg
in
lods
inc
js
test
jns
xor
lahf
test
add
xchg
cmpsb
and
sti
jge
mov
cmpsb
adc
fdivrs
fstpl
mov
dec
jns
lea
scas
jecxz
inc
add
daa
and
pop
mov
shll
and
pop
outsl
jge
fdivrl
aaa
psllw
cwtl
or
div
add
addr16
jmp
mov
push
xor
movsl
xchg
xchg
add
repz
push
sbb
or
pop
scas
mov
jg
imul
shll
sbb
and
inc
xchg
dec
or
add
mov
loop
repz
dec
fsubl
hlt
mov
xchg
lahf
aaa
mov
sbb
xchg
adc
dec
sbb
mov
mov
mov
nop
push
and
xlat
hlt
movsb
adc
fiadds
push
lret
mov
sub
jae
sbb
dec
adc
or
and
popa
test
push
jbe
mov
jle
sub
call
pop
ljmp
lock
pop
int
loope
lahf
int
aas
shr
mov
bound
sub
push
pop
mov
daa
outsl
enter
movl
stos
inc
ljmp
ret
mov
fmuls
aaa
fstps
test
xchg
lods
push
and
test
fwait
test
push
xchg
sbb
in
xor
mov
mov
jecxz
mov
mov
sub
and
shrl
mov
jge
xor
imul
push
inc
int3
push
jbe
pop
out
push
push
sub
lea
sti
bound
mov
push
push
in
and
push
lahf
bnd
jo
sbb
inc
in
sbb
addr16
es
adc
jecxz
jg
hlt
mov
cld
dec
shlb
mov
adc
mov
aaa
in
add
or
mov
cmpsb
das
addr16
jbe
ds
icebp
dec
or
out
mov
subb
add
popa
andl
pop
iret
inc
cli
mov
int
repz
push
enter
add
jbe
js
mov
es
cli
push
sub
sub
mov
aaa
in
and
jmp
out
int
fs
sarl
xchg
add
mov
adc
push
sbb
adc
and
popa
push
sbb
sub
rorb
js
and
push
fstpl
pop
in
sub
and
mov
int3
in
push
loopne
push
jl
inc
imul
mov
adc
mov
mov
fwait
and
inc
das
add
fwait
andb
adc
scas
loopne
mov
inc
xchg
mov
and
orl
pop
add
out
cmp
sti
pusha
leave
test
sbb
push
pop
pusha
pop
or
lock
lock
mov
iret
mov
push
sbb
cld
jns
fdivr
stos
add
out
sub
sarl
add
shl
push
jo
into
xchg
pop
xorb
sbb
mulb
xchg
sbb
sbb
xchg
push
pop
sbb
pxor
sub
xchg
mov
flds
pop
xchg
dec
jmp
scas
test
add
arpl
add
mov
mov
and
inc
push
repz
adcb
dec
dec
lcall
jno
popf
popa
push
xor
rcrl
add
jno
outsl
loopne
push
lahf
bound
pop
fcom
jae
ds
push
xor
daa
loop
into
repz
add
pop
decb
adc
cltd
ljmp
sub
add
xlat
jp
push
jle
lds
jns
and
jno
push
stos
repz
orl
jne
sub
jecxz
and
mov
mov
div
xor
add
icebp
repnz
fstpt
sti
xor
outsb
mov
icebp
cmp
cs
jmp
jle
divb
repz
mov
lds
xor
fwait
cmp
sbb
imul
mov
bound
cmc
adc
or
xchg
pushf
loopne
sub
pop
clc
push
xor
ds
adc
mov
stos
stc
mov
push
mov
mov
mov
cmp
xchg
lcall
push
mov
pop
xlat
enter
je
jbe
inc
sub
out
lret
xchg
sbb
pop
add
sti
call
sbb
ljmp
daa
out
or
mov
xor
mov
test
mov
inc
rorl
mov
jle
mov
push
cmpb
pop
dec
lds
lret
pop
and
aas
push
jae
das
sub
xor
or
mov
std
pusha
xor
fwait
pop
aam
xlat
ret
sub
inc
loope
add
mov
inc
ret
in
outsl
sub
daa
stos
mov
out
hlt
cmp
xor
in
cmp
scas
test
mov
xchg
dec
sbb
mov
stos
in
cld
lds
and
scas
lahf
repnz
in
popa
mov
bts
mov
xchg
mov
cld
insb
bound
mov
xlat
mov
jns
mov
pop
ret
flds
xchg
add
lret
roll
pop
lcall
mov
sub
lds
dec
cmp
fwait
mov
movsl
test
lret
cld
cltd
pop
push
imul
sarl
stos
cltd
cld
ret
add
push
outsb
sub
jmp
adc
cld
add
repnz
cmpb
fldl
dec
nop
out
xchg
cmp
adc
or
sub
pop
jmp
test
sar
nop
jo
mov
pop
add
addr16
aad
clc
sbb
test
cs
mov
mov
test
lcall
test
sbb
into
inc
xor
xor
and
rorl
push
daa
and
stos
inc
mov
jno
cwtl
adc
and
clc
in
lods
sub
pop
push
ret
scas
lea
mov
push
lods
fxch
int
cmp
pop
test
popf
pop
sbb
in
or
or
frstor
dec
adc
sub
cmpsl
mov
int
jb
xor
push
out
pop
sbb
fwait
jns
dec
outsb
pop
mov
dec
inc
int3
mov
cmpsl
xor
out
xchg
xchg
enter
mov
cmp
inc
mov
scas
scas
pusha
xchg
aas
jg
or
inc
rclb
sbb
repnz
push
in
mov
jp
fadd
push
scas
arpl
sub
sarl
repz
pop
out
add
out
bound
push
js
stos
rcll
xchg
test
xchg
jno
insl
rclb
sbb
xchg
sbb
jg
push
add
sub
clc
out
shrl
jmp
and
add
dec
pop
ret
pop
in
imul
xchg
fiadds
push
aam
adc
xorl
shll
xlat
sbb
filds
cmpsl
out
dec
mov
xchg
and
das
les
movsl
enter
or
mov
mov
push
or
and
pop
cli
fildl
mov
fdivp
or
rorl
jno
pushf
sub
negl
cs
addb
jmp
mov
xchg
xor
push
inc
mov
lcall
out
pop
push
imul
mov
lret
fucom
testb
decl
int
dec
pop
int
into
add
pop
adc
mov
push
mov
cmc
sbbl
test
in
lds
ror
cs
in
cli
xchg
add
inc
jmp
outsl
dec
mov
sbb
ja
icebp
cs
inc
or
cmp
mov
jb
adcl
scas
dec
out
adc
push
mov
cltd
test
stos
imul
mov
xchg
add
mov
inc
cmp
dec
pop
mov
sbb
push
mov
je
push
mov
adc
data16
xchg
dec
adc
xchg
sub
push
sub
or
add
testb
jbe
test
popf
cli
adc
mov
dec
loopne
in
inc
pop
test
add
sbb
fsubrl
lods
or
fwait
ret
sbbb
insl
pop
enter
cwtl
test
cmp
aad
pop
push
push
dec
push
aas
cltd
fisubrs
mov
aam
xchg
je
xchg
fildl
jge
or
or
jbe
popf
xchg
out
lahf
out
add
mov
adc
jge
ljmp
in
dec
cmp
stos
dec
std
lea
lret
ret
aaa
pop
xor
dec
jo
ds
es
mov
subb
xchg
arpl
jno
pop
inc
inc
adc
mov
xchg
and
ret
in
dec
daa
push
ljmp
cwtl
and
fisttpl
fists
mov
test
retw
jae
popf
inc
je
mov
ja
shll
xchg
loop
test
push
inc
sbb
xor
fldl
fisubl
inc
dec
cwtl
sub
fsts
mov
inc
movsl
push
xchg
sub
cs
jb
mov
aas
dec
cmp
cld
scas
mov
push
leave
es
icebp
lea
push
push
jbe
icebp
lds
xorb
adc
mov
push
pushf
nop
ret
pop
cmpsb
push
dec
negb
pop
or
loopne
push
jmp
cmp
aad
and
popa
dec
fcmovne
add
call
add
cmp
add
inc
and
or
cmp
cld
movsb
xlat
mov
pop
out
push
sub
in
rcr
add
loope
inc
xorb
testl
mov
fcomps
sub
rcr
push
xor
mov
int3
mov
xchg
xor
dec
fstpt
sbb
sahf
jg
sub
mov
adc
and
jmp
or
imul
in
mov
xchg
out
xor
sub
outsb
cli
dec
cmp
pop
inc
cmp
out
push
rclb
push
loopne
or
sub
popf
fstl
lock
arpl
inc
js
push
sbb
inc
mov
jb
inc
fiadds
push
xor
ja
jle
sub
sarl
lahf
movsb
aas
or
add
dec
mov
jp
ds
rcll
sbbb
test
inc
dec
mov
add
les
jbe
leave
insb
add
mov
adc
loope
fisubrl
bound
push
ret
hlt
subl
popf
add
xchg
fstp
andb
adc
push
out
add
das
mov
clc
lock
jmp
lds
imul
es
jns
or
xchg
addl
aam
pusha
out
or
push
fistps
jns
xchg
in
aad
js
mov
and
push
popa
cmpsl
mov
daa
rcll
aas
std
xchg
test
sbb
sbb
sbb
mov
mov
sbb
std
push
imul
dec
das
sbb
jp
mov
ss
sahf
mov
fstps
in
fimull
inc
addb
fidivs
pop
push
xlat
push
mov
enter
jb
jno
xchg
adc
push
sub
test
or
gs
mov
pop
jmp
adc
out
leave
push
sub
in
je
jg
mov
xchg
cmp
repz
mov
sarl
mov
xchg
inc
xchg
pop
mov
std
std
mov
add
leave
cmpsb
aaa
popf
sub
lea
cmp
jne
cli
frstor
push
lcall
call
sub
outsb
lret
jmp
sbb
and
mov
mov
push
mov
push
rcrl
daa
xorl
repnz
lock
jnp
push
bound
and
loop
push
inc
sub
dec
cmp
adc
ficoml
sub
push
cmp
outsl
add
jl
adc
jmp
dec
jecxz
push
aad
jge
call
add
sub
out
jns
les
imul
cmp
fwait
ret
ja
adc
jle
cmp
push
cmc
incb
jo
loope
stos
adc
mov
or
or
clc
out
es
sub
mov
jae
aas
loope
shll
sti
adc
std
jecxz
pop
es
pusha
xlat
ficoml
test
adc
cmpsb
push
jge
popl
shl
push
in
into
add
mov
mov
and
dec
or
fistps
test
test
les
shlb
add
shlb
pop
repz
cmp
mov
pop
jecxz
mov
xorl
lods
adc
fdivs
sub
movsl
fisubrs
or
adc
mov
sahf
or
jnp
push
shr
dec
test
xor
adc
std
popf
sub
lods
popa
incb
mov
js
lret
insb
jl
sbb
imul
mov
call
jb
mov
movsb
mov
xchg
addl
sbb
shrl
jae
mov
cmp
mov
movsl
cmp
hlt
xchg
sbb
icebp
jnp
push
aam
xchg
sbb
incl
add
movsb
inc
adc
out
arpl
pop
pop
dec
stc
jbe
adc
and
jmp
or
repz
xchg
push
dec
stos
lret
adc
lods
mov
gs
dec
mov
insl
mov
repz
in
test
cltd
pop
mov
push
fmulp
xchg
push
jne
cli
dec
cmp
jecxz
sub
push
and
add
mov
ds
scas
mov
sti
jae
jnp
inc
popa
clc
into
mov
or
movd
repz
pop
pushl
jmp
shl
pop
pop
or
lods
out
or
loope
icebp
ja
sub
sbb
fbld
sub
sbb
lahf
lret
mov
or
cmp
sbb
cmp
in
dec
mov
movsl
out
pop
push
popa
cmp
addb
pop
inc
or
insb
and
int
or
mov
sarb
shr
push
cmp
mov
adc
dec
jne
stc
cmp
jge
xchg
shl
sbb
or
imul
dec
call
add
pop
mov
add
jge
push
jo
pop
aam
test
in
aad
lds
cmp
cmpsl
mov
jle
mov
fstl
sbb
pop
jbe
das
inc
cmp
leave
cwtl
mov
hlt
jae
std
jb
mov
out
daa
insb
xor
outsl
lds
orl
into
repnz
cmpsb
or
jns
push
xorb
inc
mov
sbb
shlb
ljmp
pand
stos
jg
das
mov
mov
sahf
mov
shrl
mov
push
pop
jae
pop
pop
mov
clc
push
lods
int3
out
hlt
sbbl
mov
test
sbb
jne
add
pusha
sbb
mov
push
xor
gs
mov
ja
sub
out
fcomps
jl
out
jg
or
push
xchg
sahf
out
pusha
sti
imul
int3
mov
or
test
adc
sub
lret
jo
jmp
sub
xor
pop
mov
cmpsb
call
jnp
mov
jmp
or
aaa
movsl
xchg
pusha
push
lds
jge
lcall
or
orb
sub
cli
sbb
cmpsb
jge
jl
xchg
dec
adc
in
out
into
mov
fsubs
clc
jne
test
adc
rcll
xchg
xchg
lds
out
ja
xor
sbb
jle
mov
pop
in
mov
arpl
push
jnp
ret
loope
out
push
pop
sbb
pop
imul
call
mov
jge
inc
js
jmp
sahf
sti
sub
pop
mov
dec
aas
inc
pop
mov
adc
faddl
in
mov
scas
and
hlt
cmp
jno
ret
nop
cmp
pop
scas
test
pushf
xor
je
and
stos
scas
fmul
push
lock
mov
pop
sub
gs
and
sub
push
push
mov
mov
pop
xchg
xor
add
jo
in
jne
xlat
xchg
out
ss
pop
mov
pop
sub
and
push
out
push
inc
jge
outsl
xor
jl
dec
es
xchg
pop
mov
sub
sbb
test
lods
or
mov
xchg
cmpsb
or
mov
js
jg
hlt
jg
jp
hlt
stos
icebp
sbb
ja
mov
fcomps
add
inc
pop
mov
imul
sbb
mov
xor
stc
inc
sarl
int3
pop
push
push
or
xchg
fnstsw
dec
push
insl
call
dec
mov
aad
xchg
mov
leave
add
mov
lahf
mov
jl
lods
sub
mov
fidivrs
push
or
cli
fldcw
sbb
lahf
inc
cltd
scas
sbb
jbe
mov
jmp
mov
inc
mov
stos
sub
sub
inc
clc
sub
sbb
inc
xlat
bound
insb
xchg
push
jg
mov
jle
repz
sbb
adc
xor
int3
into
xchg
fisttps
pusha
inc
mov
pop
cltd
xchg
in
mov
fnstenv
inc
mov
faddp
mov
add
inc
mov
sub
out
mov
mov
insb
shlb
adc
or
xor
mov
mov
dec
sbb
push
inc
mov
push
cmpsb
mov
ficomps
xchg
pop
push
jns
jb
mov
xchg
mov
test
jmp
cmp
iret
leave
push
rcrb
push
push
sbb
xor
pushf
push
in
sub
jbe
stos
pop
ss
mov
out
cmp
mov
int
or
push
fnstcw
mov
jo
daa
jecxz
cmc
cli
mov
push
ret
mov
jl
mov
mov
pop
test
cmp
lea
sub
into
and
jno
sbb
sub
cmp
pop
shll
dec
out
scas
or
inc
ja
pop
add
push
inc
aas
rorl
jmp
cltd
jne
lods
inc
adc
ret
mov
stos
ljmp
jmp
mov
jb
test
and
dec
lcall
enter
cmp
pop
sti
fbld
xchg
ret
aad
mov
jns
sbb
xchg
jl
test
iret
stc
cwtl
push
decb
cwtl
ret
addl
xchg
scas
imul
cwtl
cli
insb
addr16
loop
sub
or
cmpl
daa
lret
xor
repnz
add
push
std
lock
test
into
mov
aas
push
jne
lock
lods
arpl
rcl
test
out
jecxz
mov
ljmp
push
cwtl
stos
mov
imul
out
adc
xchg
jge
push
sbb
adc
addr16
jmp
or
mov
sti
pop
repnz
xor
or
jecxz
dec
push
cmp
fnstsw
xchg
jle
jns
sub
ja
xorb
cli
mov
pop
dec
sahf
out
fisubrs
leave
fnstsw
fs
loope
add
sub
xorb
fisttpl
jo
mov
lods
dec
mov
leave
sub
int3
or
sub
xchg
xor
xchg
inc
mov
sbb
stos
xor
xchg
movsb
das
sub
aaa
insl
dec
outsb
std
rolb
lods
imul
jne
repz
idiv
xchg
ret
aam
js
xchg
notl
fwait
pushf
mov
pushf
xchg
xchg
iret
lods
sub
pop
hlt
pushf
lcall
mov
jge
and
ja
cmp
leave
jbe
or
lcall
clc
out
add
hlt
scas
push
dec
or
or
es
faddl
xchg
dec
into
and
jns
sub
fiaddl
xchg
repnz
lcall
repz
xchg
in
in
dec
sbb
ja
xor
jo
jg
ljmp
sbb
addr16
clc
imul
mov
xor
add
cmp
je
mov
sbb
mov
mov
mov
decl
mov
mov
xor
mov
mov
add
mov
or
mov
mov
xorl
add
xor
add
xor
mov
mov
mov
xorl
add
mov
mov
movl
mov
movl
jmp
movl
cmpl
je
cmpl
jne
pushl
pushl
pushl
call
cmpl
jne
xor
add
dec
mov
mov
dec
mov
jmp
mov
xor
mov
addl
add
mov
movzbl
or
mov
mov
adcl
xor
add
cmp
movl
je
jmp
mov
mov
xor
add
cmp
je
mov
mov
xor
add
cmp
je
lea
push
pushl
pushl
call
mov
mov
mov
xor
add
cmp
je
mov
movzwl
mov
mov
mov
jmp
mov
xor
lea
jmp
mov
xor
add
jmp
mov
xor
add
jmp
mov
add
mov
mov
test
je
movl
push
xor
pop
add
push
pop
push
dec
pop
dec
xchg
sub
xchg
dec
mov
imul
sub
mov
mov
mov
jmp
lock
inc
push
mov
mov
fs
add
mov
or
jp
pop
jp
outsl
hlt
inc
fxch
cmp
ljmp
rcll
daa
and
leave
push
lds
xchg
mov
jle
stos
mov
sub
js
xorb
jecxz
dec
pop
popa
or
shr
mov
loopne
pushf
cmp
mov
faddl
push
cs
sbb
mov
sbb
push
inc
mov
cltd
int3
fwait
call
insb
mov
iret
rorb
mov
or
mov
in
push
stos
pop
cmp
fsubr
pop
cld
ds
mov
or
add
lods
push
aam
fcmovu
and
push
in
rolb
lea
iret
inc
jae
fisubrs
jns
lods
mov
aaa
cli
mov
test
xchg
xchg
pop
jne
aad
lret
dec
add
pop
mov
sub
aam
mov
es
mov
dec
sub
xchg
shrb
test
jae
cmp
xchg
and
clc
mov
fsubrs
or
faddp
cld
into
dec
and
xlat
and
xlat
pushf
and
pop
dec
dec
inc
pop
dec
add
fsubs
mov
push
fdivrp
inc
dec
mov
cmp
cmc
push
jns
idivl
sbb
out
repnz
pop
das
fnstcw
mov
push
pop
and
int3
mov
push
mov
mov
test
jmp
out
sbb
fucomip
in
popf
jno
clc
mov
xchg
jle
orl
insb
popa
testb
push
jnp
fstp
push
adc
push
mov
push
adc
sub
ds
imul
push
mov
cwtl
push
loopne
scas
idivl
ja
adc
movsb
xchg
inc
lret
push
cmp
shlb
add
cmp
lods
movb
shrb
dec
adc
stos
dec
sbb
lret
mov
inc
mov
push
lods
inc
jge
in
arpl
adc
stos
jne
xchg
fadd
xchg
cmpsl
scas
cltd
pop
mov
mov
in
int3
mov
mov
in
push
adc
sbb
adc
gs
push
insb
inc
shrb
or
test
out
and
mov
lahf
pop
das
jo
stos
xorl
jle
xchg
push
inc
pop
outsl
mov
pop
xchg
test
xchg
sti
dec
inc
arpl
aad
ret
imul
dec
and
out
repnz
sar
adc
xor
lahf
mov
pop
inc
test
or
aaa
or
and
dec
xorb
push
mov
sti
clc
popf
mov
pop
jl
mov
aam
mov
icebp
call
jmp
cmpsb
xor
sbb
push
mov
jge
sbb
and
icebp
inc
imul
loop
fcoms
pop
sub
inc
in
push
xor
test
mov
mov
inc
cwtl
ret
jmp
fisubs
jo
je
es
inc
int3
inc
cmpsl
adc
push
jns
push
repnz
hlt
dec
lret
hlt
inc
cld
int3
stc
pop
add
imul
sbb
insl
mov
orl
shll
lds
mov
jno
sub
sbb
mov
sub
mov
out
pop
push
loopne
mov
sbb
mov
lods
sar
or
mov
lret
jns
aaa
sub
mov
test
jg
sub
cmp
mov
push
inc
int3
and
adc
push
mov
movsl
mov
lcall
bound
mov
sti
pop
fbld
add
mov
xchg
cmpb
call
je
xlat
cmpb
out
shl
jno
xchg
test
mov
data16
sbb
mov
daa
test
mov
push
sbb
add
lea
fbstp
lea
pop
pop
jo
subb
movsl
sub
aaa
sbb
scas
xor
add
pop
or
test
xchg
mov
xchg
in
ror
test
mov
cltd
mov
pop
jb
pop
push
mov
cmpb
outsl
leave
pop
dec
rcrb
fadds
out
pop
sub
mov
sbb
mov
mov
jne
aaa
ss
rol
xor
std
es
pusha
sbb
adc
sub
or
jle
loope
cwtl
mov
dec
icebp
lret
in
lcall
mov
stos
rcrl
or
notl
push
rclb
mov
pop
fisubs
pop
push
push
cmp
push
xlat
cs
or
and
jb
mov
stos
data16
jnp
aam
jge
out
mov
and
mov
into
icebp
ror
ds
sub
sub
push
rclb
dec
pop
pop
pusha
fsubrl
aad
pslld
jg
xor
or
inc
inc
xchg
mov
xlat
sbbb
out
loop
sbb
push
mov
dec
popa
test
inc
jl
das
rcrl
jnp
sub
test
aas
in
pop
add
mull
movsl
jecxz
and
sbb
sub
divb
jecxz
mulb
int3
xorb
js
or
je
mov
scas
mov
inc
sbb
fdivl
jb
stc
pushf
adc
dec
and
inc
into
ljmp
jmp
aaa
xor
fistps
or
xchg
daa
xchg
xchg
ret
mov
push
sbb
loop
cmpsl
daa
push
ljmp
mov
xchg
aad
add
mov
aad
icebp
mov
mov
cli
cmp
push
inc
sbb
mov
mov
adc
mov
adc
fisttpl
mov
dec
push
mov
sbb
pop
call
push
js
inc
imul
dec
pop
imul
jae
imul
jecxz
shlb
lods
and
enter
aad
push
lock
jae
mov
lret
adc
or
sbb
push
add
mov
and
pushf
sbb
push
in
in
lods
cmpsb
sub
test
add
fisubs
jns
int3
ja
addb
adc
add
rcll
ss
push
adc
xchg
push
pop
cli
int
push
xlat
aam
sbb
gs
test
scas
adcb
jbe
push
cmp
xchg
cmp
fdivs
movl
loop
or
mov
das
or
xchg
and
adc
cmp
jae
out
sub
xchg
push
sub
cmp
mov
scas
or
rolb
jecxz
stc
pop
test
stos
dec
lds
aam
rcrb
fldt
popf
rol
popf
ret
mov
mov
mov
je
adc
int3
or
push
push
add
inc
ds
test
inc
jecxz
adc
sbb
add
mov
lods
pop
jnp
inc
shrl
mov
cmp
inc
xor
sbb
out
inc
int
out
popa
outsb
inc
inc
inc
dec
dec
pop
in
push
jo
aad
cmp
out
punpckhbw
shr
push
sub
sti
aad
test
movsl
pushf
xor
stos
out
or
dec
shll
adc
push
inc
rcrl
pushl
sbb
cli
jg
pop
call
add
add
sahf
add
pop
aam
hlt
es
or
push
mov
imul
xchg
pop
push
addr16
xor
outsb
sbb
into
jbe
shlb
aam
xor
filds
push
jmp
pop
popa
mov
push
dec
xchg
sbb
xor
fs
icebp
mov
in
pop
vcvtps2ph
ficompl
test
dec
imul
loopne
inc
stc
mov
test
test
pushf
repnz
insl
ret
daa
xor
xchg
jecxz
in
jo
loopne
repz
push
cmpl
dec
and
in
sub
shlb
leave
loop
mov
and
adcb
out
sub
clc
inc
sahf
mov
or
mov
jns
fs
int
or
push
les
pop
imul
clc
sbb
xchg
or
fisubrs
test
aam
and
pop
pop
sbb
arpl
mov
repnz
dec
xchg
jp
pop
pop
je
xchg
inc
inc
cmp
push
repnz
arpl
or
push
mov
rcll
adc
xor
inc
movsb
pop
sub
push
rorb
push
js
and
fsubl
mov
aaa
imul
into
inc
lds
scas
leave
push
sbb
sbb
sar
fmull
pop
push
into
rorb
and
leave
mov
mov
jecxz
lods
pop
and
mov
fs
xor
into
add
push
push
arpl
sbb
pop
push
jg
nop
dec
movsb
jmp
xor
adc
repnz
adc
stos
in
dec
stc
add
hlt
xchg
jle
dec
or
sub
das
sub
xor
cmp
cmp
sub
ret
call
sub
cmc
scas
sub
aaa
lods
cmp
cwtl
lahf
int
popf
ljmp
push
aad
jle
sbb
mov
or
mov
xchg
ficoms
pop
pop
mov
inc
cmc
cltd
enter
pop
js
fcomps
xor
insb
in
and
xor
rcpps
xchg
adc
movsb
sub
jbe
pop
fbstp
outsl
test
pop
adc
shll
insb
push
ret
and
ret
fstpl
push
shll
stos
in
cs
adc
sub
lods
mov
push
loop
add
and
out
mov
mov
in
add
into
xchg
xchg
fisubrs
xchg
aad
int3
xchg
lock
mov
in
pop
imulb
push
add
mov
aas
fcomps
or
mov
arpl
dec
or
lret
fisttps
ror
pop
mov
sbb
cltd
aam
fldt
inc
aad
mov
ljmp
outsl
pop
jnp
arpl
cs
add
insl
adc
stos
sub
hlt
sbb
lea
push
leave
movsb
adc
in
lea
cli
push
sbbb
ds
dec
mov
add
push
mov
pop
ret
sti
enter
lds
inc
add
add
cmpsb
jae
stos
adc
xchg
sub
push
divb
dec
stc
es
xor
mov
pop
pop
xchg
test
inc
fs
pop
mov
jns
pop
dec
pop
add
jo
testb
inc
repnz
add
sbb
sub
negl
into
cmp
jnp
stos
mov
arpl
addr16
push
sbb
test
cli
xchg
pusha
gs
lods
cmp
sti
mov
pop
xchg
into
add
push
fisubs
cld
lahf
sti
push
pushf
gs
push
cwtl
ja
xor
out
cli
aaa
add
lds
fnstcw
dec
mov
pushf
mov
test
dec
hlt
pop
rorb
ljmp
fs
pop
add
arpl
add
cmp
popl
mov
mov
xchg
repnz
pop
sub
cmc
shll
incl
into
mov
jle
je
and
popf
inc
inc
xor
insl
push
lret
mov
mov
mov
xchg
test
loop
orb
dec
dec
and
inc
out
pop
inc
mov
dec
xchg
je
int3
inc
fnsave
mov
jmp
fsts
inc
sbb
fstl
addb
add
jo
icebp
cmp
loopne
sbb
int
xchg
xchg
fnstcw
and
cmp
or
into
xchg
loopne
mov
loop
lahf
pop
xor
mov
fcompl
inc
mov
mov
lret
pop
xor
mov
lds
cmpsl
xorb
in
sub
cltd
xor
in
cld
push
shr
pusha
mov
in
fcomip
ret
mov
shl
cmp
adc
or
cmc
jns
pushf
jb
or
paddusb
fidivrs
pop
mov
cmp
add
in
dec
shll
push
adc
pop
mov
mov
sbb
dec
ljmp
or
not
push
mov
gs
ljmp
scas
test
movsb
inc
pop
sub
lahf
ret
jbe
scas
mov
lds
mov
cld
lea
fists
sahf
adc
mov
test
pop
mov
mov
shrb
mov
xor
xor
jae
cmp
jmp
fs
negb
aas
push
scas
cmp
jns
push
add
popa
test
sbb
fwait
mov
in
inc
xor
data16
jecxz
xorl
out
arpl
jp
clc
xor
clc
adc
mov
cwtl
imul
cld
pusha
cmp
flds
dec
ss
cs
pop
adc
stos
mov
sbb
cmpsl
test
pop
loope
cmp
rcll
jge
insb
pop
mov
jo
mov
fwait
dec
mov
cltd
mov
insb
cmp
pop
shl
pop
sbb
push
insb
sbb
repz
lret
loopne
gs
add
xchg
push
pop
sbb
in
mov
incb
sahf
pop
hlt
cmp
and
insl
stos
cli
inc
cwtl
movsl
jmp
xor
outsb
sbb
jno
dec
imul
adc
and
xor
in
lahf
mov
jmp
push
mov
inc
xor
jns
inc
dec
push
jp
shl
and
aam
fs
bound
ljmp
mov
sti
inc
outsb
jecxz
and
ljmp
cwtl
and
xchg
push
inc
shrb
cld
in
jb
lret
test
pop
cmpsb
popf
fildll
sub
inc
stos
dec
sahf
push
xchg
roll
movsl
mov
fcomps
adc
push
push
aam
aaa
les
push
loope
inc
jmp
adc
sub
inc
or
and
mov
bnd
adc
pop
lds
cmpsb
dec
xor
or
xchg
jae
aaa
jl
cmp
fistpll
mov
ljmp
fwait
cli
cli
mov
dec
cmp
or
xor
lods
mov
jle
cvtpi2ps
sub
sbb
cmp
stos
lahf
and
sub
cmp
fdivrs
mov
inc
dec
shll
mov
or
in
add
lods
repnz
xor
mov
lahf
movsb
popf
push
push
pop
xchg
subb
jp
or
out
mov
jmp
ja
xchg
lods
xchg
ss
lods
adc
movsl
mov
sbbb
jp
mov
inc
stos
mov
ljmp
pusha
inc
adc
loop
cli
ror
push
jb
mov
fstpl
popf
icebp
notb
je
sub
test
cmp
mov
test
or
mov
out
lret
into
push
adc
ret
adc
mov
add
cmp
mov
nop
jns
mov
sub
inc
add
dec
mov
xlat
pop
sbb
into
cmp
mov
cmpsl
jne
cmp
mov
mov
bound
sar
sub
sbb
in
cltd
jb
xchg
pusha
stc
scas
mov
mov
adc
imul
clc
pop
fbld
lahf
mov
pop
arpl
loope
mov
adcb
stos
andl
sub
aam
rol
push
mov
and
sub
or
jno
mov
roll
iret
inc
and
and
jmp
mul
mov
data16
lds
cmp
fisubrs
jmp
test
ret
idivl
fdivl
paddq
rcr
movsl
into
mov
dec
jecxz
gs
mov
sbb
cmp
mov
repz
movsb
clc
loopne
mov
adc
pop
dec
shlb
adc
jge
and
sarb
mov
mov
jno
xchg
sub
aad
nop
mov
jp
mov
mov
sub
je
pop
sub
imul
xchg
dec
push
mov
and
negl
add
jmp
xchg
js
mov
mov
mov
fcoms
loop
jmp
jecxz
cmp
mov
xchg
add
gs
adc
mov
sub
adc
enter
xlat
jne
clc
pop
movsl
push
ret
fsubrs
cmpsl
dec
push
sbb
jl
cltd
xor
stos
adc
clc
shrb
mov
adc
fs
dec
add
in
mov
inc
fstp
call
outsb
push
lods
dec
lahf
into
movsb
testb
insl
and
xor
mov
outsl
sub
addl
jo
sar
popa
add
mov
mul
popf
sar
fwait
xchg
mov
popf
cltd
sar
or
jge
popf
es
dec
clc
notl
mov
lret
js
mov
and
out
and
push
movsb
lods
jle
repnz
jo
xor
dec
sub
or
and
lock
mov
add
jbe
cmp
testl
dec
xlat
and
adc
push
inc
rorb
aaa
add
dec
sub
movsl
jno
add
repnz
cs
pop
outsl
mov
out
ficompl
stc
mov
lods
dec
aad
xchg
cmp
call
inc
movsl
hlt
clc
adc
push
loope
loope
push
or
xchg
rol
jecxz
fimuls
jg
fdivl
pop
in
cltd
mov
insl
inc
add
decb
jae
dec
and
adc
inc
jle
mov
mov
pop
inc
xor
outsb
xchg
jne
xchg
out
sbb
xor
jo
xchg
in
inc
mov
lret
xchg
std
mov
aam
push
jmp
push
sub
aam
push
cwtl
je
addr16
insl
filds
mov
push
push
sbb
xor
inc
sete
lret
movsb
pop
adc
adc
pop
jle
fdivs
sub
mov
int
lcall
mov
into
shll
stos
inc
mov
inc
fidivl
cmpsl
fwait
call
adc
mov
mov
and
hlt
ror
mov
xlat
je
inc
ffree
pop
gs
mov
cmp
movsb
cmp
rcr
add
inc
das
inc
mov
pop
data16
scas
fdivr
cmp
cmpsl
push
out
mov
orl
add
mov
and
or
rclb
imul
jno
fstl
adc
pop
and
xchg
xchg
pop
sti
outsb
insl
lahf
lods
push
xchg
enter
sti
push
xchg
repz
inc
mov
lahf
xor
jae
push
xchg
test
into
sub
xor
bswap
shll
test
jnp
andl
fs
jbe
mov
push
fwait
lods
sbb
push
mov
in
dec
inc
jg
iret
hlt
lahf
lds
and
jmp
mov
xor
int
fdivrl
pop
jp
sti
aam
xorb
rorl
push
loopne,pt
fsubp
in
cltd
dec
andb
test
sub
inc
shlb
mov
loope
xor
or
inc
sarb
xor
pop
xchg
orl
pop
mov
outsl
addr16
fsubs
lock
lea
mov
insl
xchg
adcb
xchg
push
sub
push
popa
out
int3
xchg
in
fistps
jmp
aad
push
cs
repnz
clc
in
sbb
xchg
jp
pop
pop
push
adc
xchg
mov
lcall
xchg
pop
into
sub
jg
cltd
mov
and
fstpt
pop
or
push
inc
in
bound
inc
cmp
inc
inc
adc
pop
int3
dec
xor
push
repz
cmp
movsb
dec
jmp
movsb
pop
ss
and
jl
outsb
push
sbb
jp
mov
cwtl
dec
pop
and
shll
or
shll
inc
dec
int
jge
cmp
fbld
add
fldenv
in
sbb
sarl
popa
js
bound
push
push
sub
mov
xorb
vmovaps
fs
es
inc
jno
mov
or
rol
sbb
add
stos
xor
mov
lods
push
mov
popf
cmpsb
outsl
outsb
repz
loope
flds
adc
xor
js
test
jmp
sub
cmpsl
into
cs
addb
sub
jg
dec
fs
jae
dec
and
pop
inc
mov
xorb
jp
ret
cmp
push
mov
xchg
ficompl
xor
xchg
sub
divb
arpl
scas
jnp
push
mov
jno
pusha
jnp
cmp
adc
mov
sahf
or
xor
xchg
sbb
lahf
js
js
daa
and
sub
ja
mov
scas
jp
add
stc
orb
xchg
and
lret
jg
movsb
int
jne
mov
xor
rcrl
sbb
push
idivb
adc
into
push
pop
mov
dec
jne
jbe
push
cli
jbe
test
mov
cli
adc
xorl
ficoml
inc
out
je
sub
jp
pop
in
and
mov
mov
ret
and
adc
addr16
pavgb
addr16
push
and
and
pop
cmpsl
in
rorb
push
vmwrite
xor
out
xchg
xchg
jne
repz
dec
push
ja
sbb
mov
out
ds
test
outsl
sbb
sub
dec
in
pop
sub
lds
push
xor
mov
pop
test
push
mov
mov
je
dec
movsb
mov
xor
jmp
jmp
imulb
rdmsr
std
xchg
iret
into
dec
je
xchg
inc
jns
stos
sbb
popw
dec
and
shrb
icebp
or
iret
mov
lret
and
xchg
or
imul
jp
cmpsb
data16
outsl
and
push
das
mov
inc
in
call
hlt
adc
sub
arpl
xchg
fs
out
cmp
or
push
mov
mov
fisttps
in
in
std
ret
push
jnp
dec
icebp
mov
sub
xchg
mov
mov
fstpt
sbb
and
mov
jl
jecxz
mov
cli
push
scas
arpl
pop
mov
mov
mov
xchg
icebp
ret
mov
push
dec
lcall
mov
push
shlw
adc
add
pushf
ds
xchg
mov
leave
jne
or
pop
or
inc
sahf
or
jp
arpl
xchg
fistpl
mov
mov
mov
push
imul
push
leave
repz
jp
inc
or
add
adc
roll
jbe
and
in
sbb
inc
mov
dec
cltd
jo
mov
pop
stos
stos
xor
enter
mov
mov
inc
out
stos
dec
inc
es
jecxz
lret
psrld
or
scas
or
stos
das
push
fisubs
repnz
xchg
js
repnz
jle
scas
addl
adc
test
clc
mov
je
push
test
sub
jl
movsl
cmpsb
fildll
pop
pop
int3
cmpsl
sbb
sti
iret
sub
add
cmp
daa
cmp
test
pop
mov
add
aas
sti
fs
mov
inc
or
jp
cmp
cwtl
xor
add
jae
test
add
and
add
mov
pop
jae
das
nop
jne
nop
mov
mov
or
data16
dec
fs
test
xor
cmp
mov
hlt
repnz
mov
imul
cmp
in
jmp
cmp
mov
test
cmp
xor
inc
adc
cld
mov
test
ret
cs
mov
divb
pop
sub
mov
mov
jg
fildll
cmpb
in
es
popf
pop
mov
adc
or
cs
loopne
out
mov
dec
or
lret
cmp
test
in
add
repnz
jp
test
or
out
out
aad
sbb
in
lcall
movl
sahf
mov
test
and
lcall
push
clc
pop
stos
dec
aas
pop
aam
les
dec
mov
roll
jmp
or
sarl
sbb
rolb
outsb
mov
mov
fstpt
xlat
inc
repnz
sub
lods
pop
mov
in
inc
cltd
sbb
out
stos
outsl
fnstenv
punpcklbw
outsl
dec
inc
in
stos
xor
jge
hlt
and
movsl
jno
outsl
adc
dec
das
jno
sub
cmp
loop
std
ljmp
je
pop
sbbb
xchg
scas
add
insl
push
pop
enter
or
sub
xchg
xchg
xor
adc
or
sbb
leave
xorb
dec
stos
mov
mov
xchg
adc
repz
jns
adc
push
jnp,pn
leave
dec
aad
outsl
in
je
mov
dec
aad
fdivrs
sbb
mov
jo
in
jge
mov
testl
inc
out
es
fistl
mov
mov
out
push
outsb
dec
sahf
push
cmp
cmp
xchg
jnp
sbb
mov
stos
mov
mov
shlb
dec
outsb
scas
mov
cmp
sarb
dec
pop
mov
push
xor
jge
or
push
ljmp
push
sub
adc
xor
popa
mov
xchg
lods
or
inc
cli
sbb
mov
xchg
repnz
outsl
rorb
imul
mov
jns
jno
fdivl
xor
data16
adc
push
jp
in
sarb
pop
pop
cmpl
idiv
mov
mov
pop
cli
mov
xor
testb
shl
cmpsb
jnp
inc
xor
popf
fstpl
mov
mov
es
mov
or
aas
les
inc
cmpsb
dec
mov
stos
mov
ljmp
inc
rcrb
inc
xchg
cmc
add
mov
lea
scas
cmp
push
je
jne
test
scas
movsb
repnz
cmp
pop
jge
jmp
dec
in
stos
cmpl
dec
cmp
movsl
mov
imul
ss
les
sub
fcomp
lcall
out
sub
mov
jge
jae
cmc
or
push
inc
or
dec
test
mov
xor
or
cmp
stc
sub
fucom
out
lods
ret
jge
stos
sub
mov
test
jae
adc
xchg
cmp
push
cld
mov
mov
push
shll
scas
push
out
sbb
mov
xor
ljmp
sub
outsb
sub
sub
add
hlt
in
mov
dec
mov
pop
mov
sub
jo
fidivl
scas
loopne
rcrl
pop
adc
jb
pop
clc
clc
les
es
xchg
lods
bnd
or
cld
dec
addb
cmp
sbb
push
pop
xchg
push
push
inc
jmp
lahf
add
sbb
cs
xchg
mov
sar
cmpl
fldcw
mov
push
out
push
std
inc
insb
or
fwait
mov
jecxz
jno
in
cld
call
imul
mov
addr16
rorl
mov
add
outsl
call
sbb
sub
mov
dec
mov
mulb
enter
lods
xor
fcmovb
add
and
inc
mov
pop
and
inc
loop
jecxz
and
js
push
popf
sub
push
mov
inc
lret
pop
sti
dec
and
sahf
pop
jae
adc
gs
shlb
dec
mov
shlb
cs
lock
inc
popf
xor
sarb
orl
cs
and
dec
pusha
movl
pop
repz
add
jae
in
pop
lret
sub
shrb
mov
mov
lock
std
and
jmp
inc
aas
stos
out
idivb
cld
in
ret
pusha
stos
lea
push
dec
cltd
xchg
int
sub
mov
out
mov
call
loopne
repnz
jno
ja
mov
adc
xchg
bnd
rcll
mov
popf
cmpsl
inc
pmulhuw
inc
pop
inc
sbb
fnstenv
jo
loop
sub
cld
cmp
push
lea
lods
mov
add
mov
ret
push
xchg
jge
xchg
stc
pushf
gs
jle
cmp
jge
sarb
dec
xchg
in
flds
lock
xor
dec
xchg
push
and
pop
and
adc
sbb
xchg
scas
inc
data16
xor
in
xor
or
sbbb
imul
xchg
cmp
int3
or
test
in
dec
nop
test
push
fimull
jge
test
jge
cmp
int
out
shrl
inc
inc
mov
aaa
inc
pop
gs
jns
push
jl
push
xchg
push
filds
xor
dec
pop
jp
cmp
add
sbb
insb
inc
sbb
or
xchg
push
xchg
test
push
add
sarl
ds
xchg
adc
add
jnp
loopne
jge
call
dec
dec
dec
xor
mov
movsl
xchg
push
jecxz
cwtl
adcb
cli
iret
lret
ret
and
xor
addr16
mov
test
nop
pop
dec
fwait
inc
flds
inc
sbb
xchg
mov
imull
scas
fs
add
cli
sub
or
xchg
push
mov
cmc
or
or
mov
lahf
add
or
jge
popf
inc
xor
int
aaa
cmp
loop
sbb
pop
xlat
icebp
outsl
test
mov
adc
int3
or
sti
out
mov
mov
leave
bound
adc
mov
lds
pusha
imul
inc
and
adc
push
pop
bound
test
into
imul
rclb
pop
addr16
inc
adc
pop
js
fnsave
movsl
pop
loopne
mov
into
popa
jecxz
or
inc
cmp
jbe
mov
fabs
xor
xchg
add
loop
mov
sbb
xor
jmp
test
sti
jbe
xor
stc
stos
adc
inc
orb
lret
mov
int
imul
xor
in
mov
out
fdivs
sub
pop
dec
aaa
adc
lea
fcmovu
adc
mov
addr16
sti
inc
jmp
rcrl
cmp
push
xor
mov
inc
rcrl
loopne
idivl
bound
xchg
lret
fadd
jae
jl
scas
int
imulb
int3
dec
jecxz,pt
jmp
jmp
cmp
mov
dec
je
cmp
ret
xchg
lret
fsubr
and
mov
adc
sahf
shll
push
call
sbb
xchg
lret
jns
mov
mov
add
mov
xchg
mov
pusha
jp
dec
cltd
call
movsb
shll
fwait
ja
xchg
int3
jp
jle
loope
pop
push
adc
and
cli
inc
sbb
imul
mov
cmp
mov
mov
cli
ret
pop
xor
ret
dec
test
in
inc
out
inc
adc
sbb
cmp
mov
pop
je
mov
aad
into
pop
sti
insl
insl
fwait
and
inc
add
xchg
clc
fs
cli
sub
dec
ds
stc
cld
in
in
fcoml
pusha
sahf
xor
mov
pop
pop
or
outsl
inc
mov
jge
ja
fdivrl
fcmovne
aam
push
xor
mov
add
mov
mov
xor
add
mov
imul
mov
xor
mov
lea
cmp
je
mov
mov
mov
mov
mov
xor
xor
mov
add
div
mov
xor
lea
mov
mov
mov
mov
mov
xor
lea
mov
mov
mov
xor
add
imul
mov
xor
mov
lea
cmp
jne
mov
jmp
mov
mov
mov
xor
add
mov
mov
add
xchg
xor
push
mov
pop
mov
add
lea
add
add
push
inc
pop
dec
xchg
dec
xchg
dec
xchg
dec
push
mov
pop
dec
call
cmp
je
xchg
push
pop
push
pop
inc
xchg
sub
xchg
dec
dec
mov
imul
add
xchg
push
xor
mov
dec
inc
add
dec
xor
add
pop
mov
pop
pop
pop
leave
ret
push
mov
sub
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
pushl
call
jmp
movl
cmpl
je
cmpl
jne
call
mov
dec
mov
jmp
adc
push
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
call
cmpl
jne
mov
inc
mov
jmp
sbb
push
mov
movl
cmpl
je
cmpl
jne
push
pushl
push
push
pushl
pushl
pushl
call
mov
dec
mov
jmp
mov
mov
xor
mov
and
andl
and
movl
adc
movl
mov
mov
sub
sub
mov
or
mov
andl
xor
xor
inc
mov
cmpl
jne
pushl
push
call
cmpl
jb
sub
andl
xor
or
inc
mov
cmpl
jne
push
push
pushl
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
call
cmpl
jne
mov
inc
mov
jmp
mov
xorl
mov
mov
sub
mov
orl
mov
mov
sub
mov
orl
mov
mov
sub
mov
orl
mov
mov
sub
mov
mov
mov
mov
xor
mov
add
or
mov
mov
mov
sub
mov
orl
mov
xor
add
push
mov
xor
add
push
mov
xor
add
push
lea
push
pushl
pushl
call
test
je
lea
push
mov
xor
add
push
mov
add
push
mov
mov
pushl
call
mov
lea
mov
mov
test
je
lea
mov
mov
mov
mov
mov
sub
mov
mov
xor
mov
sub
add
mov
mov
mov
mov
pushl
movb
mov
pushl
pushl
pushl
pushl
pushl
pushl
pushl
mov
call
mov
mov
add
pop
pop
leave
ret
push
mov
sub
movl
lea
mov
jmp
das
or
mov
in
cmp
sub
jp
pop
jp
dec
cld
adc
jae
fisubrl
ss
pop
mov
ret
push
or
daa
mov
or
ds
pop
testb
push
imul
mov
insb
int
inc
div
jno
fists
and
xchg
cmc
inc
frstor
outsb
incl
int
pop
ret
nop
mov
aas
xchg
test
push
jns
into
incb
lret
dec
js
push
mov
add
jl
pop
xlat
js
add
adc
rol
faddl
mov
test
rorb
fiadds
ljmp
adc
xor
sbbl
pop
clc
or
dec
cld
push
push
pop
xor
insl
aad
push
aam
xor
das
aaa
pop
dec
push
inc
dec
enter
jnp
mov
arpl
dec
test
and
push
xchg
jg
mov
popa
jmp
xchg
add
inc
or
in
jmp
fsubrl
repz
dec
and
rorl
add
in
in
lods
stc
and
xchg
sbb
pop
pop
mov
cmp
push
and
sub
adc
lret
sarl
fisubl
cltd
fstps
xchg
dec
jl
test
sub
adc
lret
in
adc
enter
mov
sub
hlt
stos
test
xchg
repz
push
fdivl
scas
push
xchg
dec
mov
popa
out
push
dec
add
addl
mov
sti
adc
pop
jecxz
add
repnz
and
mov
fwait
pop
xchg
jne
push
fisubl
aam
stos
jns
stos
leave
or
gs
push
add
rcll
mov
jne
pop
xor
std
mov
cmp
cmpsb
sahf
mov
dec
jae
test
jecxz
pop
sahf
fsts
lret
lods
sub
sbb
push
in
fldcw
push
xlat
aas
movsl
push
cmp
mov
jns
mov
sbb
push
xchg
jecxz
jnp
sub
outsb
adc
jo
push
inc
dec
or
add
mov
fcmovne
sbb
inc
mov
sub
mov
jge
push
stc
sbb
pop
out
push
test
xchg
jge
mov
test
aad
shll
or
push
lods
movsl
mov
dec
mov
cmp
cmp
pop
mov
pushf
push
xor
dec
popa
xchg
test
icebp
jno
cmp
xor
sbb
or
or
xchg
mov
push
xor
xchg
dec
inc
mov
lcall
mov
xchg
das
std
in
sub
xchg
adc
scas
adc
icebp
mov
and
shll
cmp
or
out
xchg
imul
ja
push
xchg
sub
xor
jl
lret
xchg
movsl
sub
out
pop
xor
sbb
bnd
lret
xchg
adc
call
sbb
pop
lret
ret
xchg
adc
and
addr16
es
ljmp
scas
push
mov
pop
shll
mov
xchg
inc
xchg
addr16
jno
fcomi
es
jmp
dec
test
jmp
inc
stos
rol
iret
not
das
roll
mov
test
das
pop
fs
sar
mov
xor
pop
push
add
loopne
pop
insl
inc
xchg
mov
pusha
mov
xor
out
jp
sar
idivl
sbb
imul
jo
nop
push
ret
sub
or
stos
lock
jbe
popf
js
outsb
mov
dec
add
popa
mov
xchg
scas
movsb
xor
cli
icebp
in
xchg
cs
sbb
cli
sahf
mov
ds
cs
sub
pop
imul
bound
xor
xchg
in
pop
pop
xor
adc
sbb
sbb
ds
push
dec
pusha
test
mov
loopne
scas
pop
fistps
rolb
loop
outsb
sbb
imull
mov
lret
or
jo
lds
int
jno
sbb
stc
jo
add
loope
mov
int3
jp,pt
add
push
sarl
addr16
xor
adc
hlt
loope
ja
repz
fists
sarb
jmp
push
adc
add
ds
dec
scas
mov
xchg
rcll
movsl
pop
inc
xor
xchg
cli
imull
lock
in
enter
adc
andb
cmpl
out
cld
push
enter
xor
mov
pusha
sbb
test
mov
loope
mov
add
inc
je
sti
mov
sub
fbstp
cmp
pop
xor
sbb
ret
add
and
std
pushf
test
aaa
popa
scas
pop
jge
shll
std
sbb
or
lahf
lods
testl
test
xlat
mov
addr16
popa
arpl
jns
and
adc
pop
scas
and
aas
push
adc
cmp
sub
mov
inc
cwtl
pop
fstl
iret
mov
xchg
sbb
out
test
sbb
mov
inc
call
sar
rcrl
test
xchg
pop
adc
xchg
or
pop
dec
or
pop
xor
outsb
mov
cmp
jnp
mov
ret
les
shrl
nop
shll
lds
xor
loop
mov
jmp
dec
pop
or
in
and
inc
bound
jbe
sub
jle,pt
or
push
enter
push
add
cmp
lds
jbe
loopne
lds
jnp
int
and
cmp
jbe
sub
or
pop
int3
aaa
gs
out
jae
lahf
or
mov
pop
aad
xchg
stc
je
push
push
and
sbb
or
inc
jns
ffreep
outsb
sub
bound
ss
lods
push
push
fiadds
rolb
jo
rorb
lret
jno
push
jecxz
xchg
fisubrs
adc
push
ss
adc
jp
bound
cmp
cmc
hlt
mov
out
or
mov
xor
std
rolb
imull
loopne
push
or
sub
pop
aas
fucomp
jo
dec
ljmp
adc
push
cmp
sub
lcall
mov
cmpsl
inc
mov
or
jle
out
sysret
cmpsb
xor
pop
add
or
sarl
in
lcall
and
push
xchg
les
push
out
jnp
push
addr16
mov
lea
cmp
xchg
iret
dec
les
je
out
jb
pop
jle
gs
inc
jge
in
data16
mov
mov
icebp
mov
xor
mov
and
aam
leave
xchg
enter
mov
loopne
movsb
pusha
mov
push
jle
jo
add
stc
jg
idivl
mov
inc
jno
sbb
decb
mov
mov
mov
push
popa
psrld
ds
mov
negl
jbe
or
inc
push
fists
cs
adc
push
mov
enter
pushf
mov
nop
xchg
test
in
and
xor
and
jp
scas
ds
rcll
int3
loopne
js
dec
cwtl
stos
dec
xor
shrl
dec
xchg
fildll
inc
push
popf
jecxz
imull
inc
loope
sbb
mov
jl
outsb
dec
jecxz
push
fidivs
mov
jb
inc
das
inc
jne
mov
or
xor
add
movsl
xchg
or
push
jbe
rolb
cltd
push
add
adc
aaa
push
rcll
sub
shrl
sub
adc
add
dec
dec
insb
addr16
stos
sub
sahf
popf
jl
pop
lods
and
int
lret
ficoml
mov
or
add
fstl
add
mov
pop
cld
shrb
cwtl
jg
fcmovnu
scas
andb
loop
push
and
cs
testb
mov
jns
orb
mov
lahf
notl
test
pop
shr
fs
jecxz
pop
outsl
rcrb
mov
gs
pop
sub
adc
cld
xchg
out
movsb
mov
adc
sbb
mov
imul
pop
add
test
sub
arpl
xor
xchg
xchg
sub
stc
ret
jnp
aaa
pusha
clc
negb
jge
das
fldenv
cltd
jmp
mov
orl
lods
mov
mov
sbb
popa
aas
jae
in
push
call
mov
mov
movsb
xchg
scas
mov
jbe
fiaddl
push
jo
das
fisttps
stc
jge
sub
mov
inc
dec
mov
sbb
dec
push
sahf
daa
inc
push
test
in
xchg
xor
mov
or
mov
rcrb
lock
dec
cmpsb
cmp
fwait
sbb
fiaddl
inc
out
movb
repnz
aam
fsubl
jbe
mov
aas
xchg
push
sbb
jg
dec
jns
aas
push
js
xchg
sar
loope
lods
daa
adc
bound
lret
mov
out
jne
mov
aas
cld
ss
adc
sbb
stos
xchg
lods
loop
test
and
rcrb
inc
dec
jnp,pt
es
jne
fwait
pop
adc
pop
aad
push
mov
ret
hlt
cli
pusha
push
ljmp
mov
outsb
jecxz
test
inc
dec
loop
push
pop
in
call
mov
int
repnz
xor
out
lods
and
scas
pop
loop
nop
mov
dec
test
cmp
sbb
add
xor
push
xlat
js
fiaddl
xor
lahf
js
xchg
and
lock
mov
dec
sbb
push
outsl
int
cmpsb
out
addr16
sbb
mov
aam
lret
out
push
push
cmc
inc
sarb
nop
sbb
mov
lret
cmp
outsb
sub
repz
jbe
xchg
push
inc
xchg
es
inc
inc
loop
mov
daa
jp
clc
nop
xor
jne
movsl
or
fwait
inc
jmp
popa
dec
jne
jle
or
mov
xchg
push
imul
mov
sub
jg
in
push
sar
cmpl
nop
scas
mov
fcompl
pop
jo
xchg
sub
std
loope
sub
push
inc
adc
push
dec
cmp
cmpsl
rcr
add
cwtl
fisubrs
inc
mov
cmp
rorb
mov
jb
in
out
push
cmp
mov
imul
incb
cli
add
mov
cwtl
xchg
rorb
push
or
sbb
gs
push
jbe
movsl
iret
pop
mov
cmp
in
pop
loopne
shl
fdiv
mov
or
mov
or
jl
leave
push
in
xchg
xor
test
or
enter
xchg
subl
cmp
cmp
pushf
pop
movsb
lods
dec
fldcw
jnp
adc
je
cmp
inc
movsl
js
jp
shl
aaa
stc
push
aaa
push
or
fcmove
sbb
and
subl
inc
je
les
fnstcw
pop
inc
iret
in
and
iret
mov
xchg
mov
je
fcomps
mov
inc
push
scas
insb
cmp
sbb
jecxz
jl
dec
js
mov
popf
jmp
mov
mov
cld
fbld
test
dec
dec
xor
loope
int
sub
xchg
lds
mov
daa
stos
lret
jecxz
sbb
mov
scas
push
popf
sahf
jbe
loopne
dec
or
int
nop
mov
out
stc
clc
xlat
aas
pop
mov
xor
adc
loope
cmpsb
aas
inc
pop
mov
loope
cmpb
cwtl
sub
push
sub
xor
out
imul
sub
clc
rdmsr
dec
and
clc
fcomp
sar
fdivrs
ficomps
scas
push
mov
inc
nop
movsl
and
shrl
loope
adc
mov
mov
loope
mov
mov
jg
cs
jae
push
and
int
enter
push
popf
inc
and
out
in
cmp
insb
inc
mov
mov
push
std
adc
lret
mov
bound
dec
call
fdivl
fmul
nop
push
dec
imul
insl
adc
xchg
dec
mov
ja
push
jmp
dec
lahf
jb
fwait
jns
repz
rcr
push
call
enter
scas
imul
loopne
xchg
iret
fs
fmuls
mov
jl
xor
jae
add
mov
jge
adc
getsec
pop
inc
insl
in
mov
popl
push
test
sub
rolb
jp
mov
icebp
sub
add
push
imul
cmp
push
adc
xor
or
shrb
xchg
sub
insl
aad
lods
mov
fidivl
mov
cmp
jae
cmpsb
stos
jmp
adc
mov
or
xor
test
shr
add
test
fists
pop
cltd
mov
daa
dec
push
push
mov
loopne
mov
jb
sub
jo
pop
aaa
out
ljmp
leave
aaa
dec
and
cmp
gs
cmpl
cmp
scas
mov
xchg
dec
lret
or
jg
jg
cmp
mov
andl
push
aaa
les
push
xor
mov
je
popa
out
mov
pushf
pop
das
jbe
adc
fimull
add
insl
aaa
push
mov
pop
xchg
xor
rcrb
inc
push
lret
fstl
sub
sub
mov
jmp
push
push
pop
cmp
sbb
pop
cmp
adc
sbb
imul
popf
fldt
das
aam
mov
je
cmp
xor
scas
imul
loop
enter
stos
jp
into
dec
add
mov
scas
roll
icebp
push
scas
jae
test
cmp
ljmp
cmp
insb
lea
mov
loopne
fwait
mov
fnstenv
lods
inc
add
xlat
and
jno
icebp
push
push
call
push
test
lock
push
loopne
mov
loopne
les
and
sbb
sbb
or
aad
sbbl
jp
cmpsl
mov
cmp
sahf
leave
test
pop
leave
mov
mov
adc
pop
std
dec
sbb
decl
stos
pop
xchg
outsb
xchg
ficoms
sbb
imul
xor
mov
stos
repz
cmp
xchg
xchg
xchg
mov
pop
mov
scas
fisttpl
dec
lahf
notl
inc
push
mov
int3
iret
adc
mov
lahf
faddp
in
sarb
mov
push
xor
filds
shll
mov
cmp
ljmp
loope
imul
sbb
inc
popf
outsl
or
ja
arpl
je
fdivs
push
mov
nop
xlat
cmp
mov
inc
dec
mov
mov
popf
cmp
cltd
in
cmp
fadds
sti
js
sbb
cmpb
mov
mov
jnp
sbb
xchg
popa
aas
dec
jnp
adc
inc
mov
mov
inc
jp
inc
daa
inc
cmpsb
lock
cs
xchg
mov
loope
xchg
cltd
lods
lret
test
fisttpl
daa
sahf
cmp
dec
mov
xchg
cmp
sub
adc
inc
cli
dec
cmpsb
mov
lcall
movsb
jmp
dec
sarl
xor
movsl
and
dec
fdivrl
jle
xor
fstpt
jg
test
aad
push
gs
or
or
movsb
ljmp
add
imul
mov
shlb
push
cmp
cmp
xor
out
jmp
fcompl
sar
repnz
push
push
cmp
or
ja
pop
jecxz
enter
pushf
in
in
mov
fldl
jbe
jge
pop
dec
push
rcr
push
xor
mov
les
test
insb
dec
cs
cmpsb
outsl
cmpsb
dec
add
push
xchg
jnp
xor
pop
fcmovnu
movsb
fdivr
aas
push
mov
and
sbb
ss
popa
push
fstpt
aad
lahf
aas
bound
xor
mov
loop
mov
filds
xchg
lds
mov
mov
clc
out
into
cs
cltd
aam
dec
movsb
and
sub
xchg
cld
inc
icebp
sarb
sub
inc
fimuls
rorl
mov
or
xchg
outsl
dec
and
mov
stc
xchg
hlt
cmp
je
mov
xchg
xlat
stc
or
inc
insl
cmpsl
shrb
cmc
outsl
testb
in
pusha
jmp
pop
push
fisubl
push
sbb
mov
dec
sub
and
ljmp
pop
inc
pop
xor
clc
jne
int
flds
mov
adc
mov
inc
mov
outsb
xchg
xchg
xchg
shl
aad
lock
cmp
cli
xor
jno
inc
xchg
stos
xchg
lds
cmp
adc
into
cmp
in
icebp
jmp
pop
dec
inc
push
aas
and
pop
ds
mov
sub
and
dec
rorl
jp
fs
psubd
sbbl
add
mov
sbb
jecxz
test
pop
out
mov
mov
aaa
fnstenv
push
xor
shl
dec
std
enter
es
ja
shll
icebp
movsb
inc
leave
movsb
cld
es
aaa
lcall
nop
imul
mov
mov
xor
xlat
pop
dec
cmp
std
mov
pop
push
xor
iret
xlat
pop
jmp
hlt
ss
dec
stos
stos
cmc
xchg
in
jl
dec
or
mov
jnp
cmpsb
jl
ror
adc
mov
out
nop
mov
je
dec
ljmp
insl
pop
in
jae
sbb
js
cmp
fcomps
fisubrl
shll
sbb
mov
xchg
inc
add
pop
mov
int
shrb
lods
int
pop
shlb
cli
jnp
xchg
xor
inc
lds
sahf
jp
pop
pushf
jge
mov
pop
stos
es
lcall
cmp
pop
and
movsb
bound
inc
jle
das
dec
sti
jns
ffree
and
jbe
gs
stc
mov
std
xchg
test
fidivs
bound
in
sbb
jnp
mov
mov
fldenv
xor
dec
cs
imul
xor
mov
aam
and
repz
mov
adc
popa
movsl
or
enter
test
pop
jl
or
xor
mov
lahf
mov
jg
inc
adc
xor
cli
ret
loope
cmp
fs
jne
dec
stos
adc
mov
fcomps
add
jge
pop
dec
or
test
movsl
push
xor
jp
pop
mov
jns
dec
aaa
cli
test
and
jmp
add
sub
jecxz
jno
in
adc
aas
or
mov
or
cmpsb
stos
sbb
jno
insl
jge
pop
loope
mov
pop
xchg
aam
out
add
and
mov
lcall
pushf
and
jne
aam
mov
pop
fst
add
cmc
and
mov
push
inc
pop
fwait
mov
cli
sbb
dec
push
in
and
pop
jp
xchg
cmp
sub
dec
jb
mov
dec
jns
movsb
mov
adc
test
daa
mov
jnp
xor
mov
adc
inc
in
or
adc
subb
dec
dec
adc
lock
fcoms
sub
cli
jecxz
ss
xor
lock
dec
ret
jl
cltd
aam
and
lahf
pop
js
or
hlt
sbb
xor
sub
and
or
ljmp
lret
rol
cmp
push
lea
add
jmp
dec
pop
shll
xchg
scas
notl
icebp
pop
es
loopne
mov
xchg
inc
fdivrl
pop
sbb
cmp
decb
gs
jb
push
and
jmp
mov
pop
fsubl
jbe
cmp
sbb
push
inc
test
int3
jmp
lods
into
mov
push
mov
insl
mov
xchg
push
pop
sub
push
movsl
pop
test
dec
dec
mov
ds
dec
mov
movsl
cmp
ja
stc
cli
test
inc
aaa
fwait
outsl
cltd
ret
add
dec
xchg
inc
mov
dec
aaa
xor
maskmovq
mull
mov
js
mov
loope
jnp
ja
pop
dec
adc
xorl
mov
pop
mov
and
xchg
push
mov
or
popf
fisubrs
out
int3
les
add
jo
mov
js
pop
mov
fwait
shll
gs
enter
sti
cmpl
push
sbbb
lods
mov
je
and
lods
rcll
xchg
adc
es
es
or
sub
mov
inc
mov
imul
xor
pop
jno
jg
mov
sub
jbe
fucomi
and
std
add
mov
roll
mov
ds
repnz
shlb
data16
jb
add
ffreep
decb
in
sbb
pop
shrl
outsl
inc
and
mov
dec
loope
cmp
jns
push
xchg
ja
stos
jecxz
cmp
jo
mov
xor
scas
pop
pop
cmpsb
mov
mov
or
dec
jl
sbb
push
cmp
cmp
idivb
adc
loopne
and
mov
stos
jecxz
mov
aad
movsl
xchg
jo
mov
xchg
das
xchg
into
inc
clc
call
ret
sbb
sarb
jb
mul
stc
push
das
js
cmp
jp
pop
jne
out
mov
mov
cmp
dec
add
pop
mov
rcr
add
pop
cmp
xchg
clc
inc
mov
lcall
jnp
aam
push
or
fistl
jmp
popa
xchg
jecxz
mov
aaa
es
mov
subb
out
lea
jmp
into
inc
xor
and
sti
movsb
lret
rolb
pop
push
fmul
into
js
pop
inc
aaa
push
out
ffreep
nop
adc
negb
lcall
in
add
bnd
add
dec
sbb
sbb
fistps
repz
out
insb
mov
lret
cmc
pop
gs
sahf
mov
orl
dec
dec
mov
adc
sbb
mov
xor
in
pop
cmp
cmp
shlb
je
sub
pop
and
sub
movsb
mul
mov
testb
adc
push
lds
sbb
sbb
sub
bound
cld
xor
pop
mov
das
in
sub
pop
test
aam
ljmp
add
add
daa
push
add
adc
mov
aad
das
jg
jb
fsubl
inc
mov
fistl
mov
sbb
sub
iret
push
xchg
sub
pop
cwtl
imul
sub
cmp
sbb
and
sub
pop
mov
xor
cmp
std
sbb
or
cs
popl
je
shll
out
sbb
je
aaa
lahf
add
jl
dec
adc
mov
int3
arpl
mov
out
inc
shl
inc
push
add
mov
xor
sub
push
pop
fs
cmp
mov
sbb
mov
fs
sbb
or
sbb
sbb
aad
mov
in
inc
test
mov
shlb
inc
or
loop
cmp
outsl
je
xor
xor
mov
pop
loopne
lahf
xchg
int3
xchg
aaa
inc
loop
dec
insb
push
adc
imul
sub
cmc
xchg
stos
ret
sahf
cmp
lahf
movsb
icebp
iret
jo
fisttpll
sahf
dec
inc
mov
pop
adc
jg
and
es
mov
stos
dec
lcall
movsl
hlt
movsl
cmpsl
push
lret
or
xor
mov
push
mov
or
inc
fdivp
test
scas
sbbb
scas
in
das
movsl
repz
out
pop
mov
test
sub
cmp
xchg
push
aam
push
imulb
push
repz
rorb
sti
inc
repz
and
ret
add
mov
inc
adc
dec
jmp
sub
push
pop
loopne
add
jmp
mov
std
lods
xchg
imul
mov
test
dec
mov
imul
daa
inc
mov
xor
sub
int3
aam
lret
jecxz
testl
outsb
shlb
jb
mov
cld
dec
push
mov
or
xor
sti
js
imul
int3
pop
jmp
xchg
and
leave
loop
lds
ja
sarb
xchg
clc
lea
cwtl
mov
jle
inc
insb
push
scas
and
repz
sbb
push
dec
dec
sub
xor
jmp
fisubs
mov
stos
popf
sub
push
nop
js
imul
leave
jl
test
jbe
out
aad
pop
pop
push
out
enter
push
xor
jecxz
push
idivl
sbb
and
push
inc
jns
insb
push
lret
push
jo
fsubrl
jae
fnstcw
js
pop
push
lret
out
pop
ds
jg
xchg
in
ret
iret
or
in
xor
dec
stos
cld
add
push
movsb
leave
outsb
test
mov
xchg
jmp
rol
mov
enter
xchg
decl
xchg
xchg
subb
int
pop
addb
jl
fld
pop
cld
iret
in
xlat
cmp
aas
fisubrl
dec
xchg
inc
shrl
push
leave
stc
mov
cmp
dec
insb
push
add
dec
jmp
inc
lahf
mov
cld
xchg
cmpl
aad
call
xchg
sub
sbb
cwtl
int3
xchg
dec
lret
fstl
popf
jl
pop
mov
dec
lretw
push
jl
jge
pop
lods
and
movsl
mov
add
fdivs
ficoms
xor
movl
mov
clc
loop
cmp
adc
jg
push
and
adcl
sub
fwait
arpl
xchg
int3
je
add
cld
lcall
testb
pop
adc
pop
add
push
mov
mov
pusha
es
dec
add
sbbl
jecxz
dec
jbe
pop
shlb
cmp
das
xchg
add
pusha
cs
insb
adc
jecxz
push
add
mov
sub
fcomi
loopne
mov
push
jmp
adc
out
xor
cwtl
cwtl
jnp
cmp
pop
and
sbbl
mov
jmp
pop
in
pop
lea
fs
out
int3
xor
push
int
cli
movsb
jb
bound
data16
mov
shlb
stc
push
out
inc
call
arpl
sub
xlat
jns
push
pop
add
adc
callw
rcl
jns
jle
sub
lea
mov
and
mov
pop
test
jle
cmc
dec
jbe
xchg
and
pop
xchg
pop
mov
and
std
push
mov
fcoms
imul
shrb
lcall
dec
jb
add
pusha
sub
and
cmp
mov
ja
fs
inc
xchg
cwtl
sub
sti
mov
pop
sbb
pop
icebp
rcl
pushf
mov
adc
jg
cltd
or
pop
stc
cmp
lahf
pusha
sub
mov
dec
jmp
cmpsl
push
jae
sub
push
sbb
jo
mov
repz
push
dec
sub
repnz
shl
xchg
dec
push
inc
cwtl
daa
push
push
sub
sbb
cmc
pop
scas
sbb
mov
imull
jg
cmpxchg
aam
into
and
mov
aaa
adc
mov
pop
or
push
mov
jle
lock
loopne
stos
outsl
and
mov
pop
mov
mov
xchg
popf
mov
xor
mov
jle
mov
in
sub
or
pop
jecxz
push
sbb
mov
adc
pop
je
mov
jbe
pop
rcll
pop
out
fidivs
fldln2
sbb
outsb
xor
pop
lahf
mov
dec
js
scas
dec
idivb
mov
cmp
clc
sahf
ss
adc
xlat
xchg
pop
mov
push
fsubrl
mov
cmp
sub
pushf
repnz
push
verw
fcomp
adc
sbb
das
icebp
stc
sub
in
xor
aas
daa
das
out
hlt
push
imul
sub
cs
add
add
jae
sbb
add
inc
mov
in
lret
mov
cmp
push
loope
mov
les
push
fsubrs
fs
xchg
icebp
cmp
cmp
mov
mov
sbb
xchg
repz
cmp
cmp
cmp
ljmp
sub
sbb
mov
mov
shrl
dec
das
mov
xor
pop
push
xchg
sub
mov
dec
inc
lock
pop
sbb
nop
cmpsl
ljmp
fists
and
popl
loop
or
cli
xchg
xor
shlb
adc
cmp
push
and
sbb
lods
cmpl
xor
icebp
movsl
jne
inc
into
push
orb
mov
push
repnz
fldenv
stc
pop
push
jb
fistpll
add
dec
or
dec
mov
ja
and
test
fwait
aad
jmp
jae
jl
inc
sub
scas
out
jp
das
addr16
faddl
bound
out
jle
jno
dec
lods
xchg
push
xor
addr16
nop
pop
mov
inc
lods
in
rcrl
shlb
xor
jg
jmp
cmp
jmp
adc
dec
push
fstpl
ret
hlt
pop
push
fcmovbe
sub
push
mov
subb
jle
xchg
push
test
sbb
adc
into
push
or
jge
test
test
hlt
imul
push
les
mov
xchg
inc
sahf
push
in
add
adc
test
push
sub
mov
cli
sbb
inc
imul
stc
repnz
dec
dec
sub
daa
xchg
inc
bound
lds
cld
pop
push
sub
aad
fstpl
pop
scas
mov
sbb
dec
repnz
sub
pop
xchg
push
jle
lcall
mov
out
subl
movsb
scas
push
mov
or
test
fs
jae
sti
inc
je
and
dec
and
inc
fidivrl
push
mov
mov
out
adc
leave
mov
inc
adc
outsb
leave
xor
pop
sub
sarl
das
or
and
add
lret
js
mov
js
daa
int
jb
xchg
dec
sahf
pop
cli
mov
call
push
xor
xchg
cmpsb
inc
sbb
fisubs
sbb
cltd
inc
mov
pop
xchg
pop
push
sbb
js
dec
daa
xchg
adc
jmp
mov
mov
pop
jns
and
pop
adc
in
sub
ror
and
cs
mov
out
xor
dec
jl
cmp
dec
pusha
sub
iret
mov
fisttps
gs
xchg
jge
mov
int
imulb
sbb
movsl
outsb
sti
rcrl
ljmp
stos
dec
pop
jle
mov
push
push
mov
mov
mov
push
shll
mov
cltd
push
in
ljmp
clc
or
jne
and
mov
cli
xor
push
xor
lods
sbb
add
jnp
mov
and
loope
ret
imul
mov
stos
inc
ret
add
pushf
mov
xchg
mov
or
sbb
and
subl
jno
mov
popf
lock
inc
int3
scas
push
mov
pushf
pop
mov
mov
add
mov
mov
mov
mov
mov
sub
sub
lea
or
mov
mov
mov
sbb
mov
xor
add
mov
mov
sbb
mov
mov
sbbl
mov
orl
add
push
mov
jmp
popa
dec
jmp
mov
jnp
js
aam
jbe
add
jp
pop
jp
and
pop
adc
fidivs
push
mov
int3
dec
mov
in
dec
fmul
cmp
push
sti
bound
mov
nop
rcll
jne
icebp
mov
lahf
lods
mov
mov
daa
mov
call
leave
call
add
or
sub
lods
ds
add
pop
outsb
or
adc
js
outsl
leave
pop
xor
mov
popf
cs
sti
inc
clc
test
jno
pop
mov
xor
movsb
mul
fisttps
dec
push
sar
outsb
insb
xchg
pop
outsl
loope
mov
int3
adc
cmp
jno
push
dec
jge
fildl
clc
shlb
jns
test
aad
call
push
mov
mov
xchg
dec
repz
sub
xor
stos
dec
sub
pop
mov
sub
lret
jb
int3
arpl
lcall
jbe
adc
movsl
pop
leave
dec
jb
push
xchg
xchg
es
xor
scas
jecxz
xor
xor
sahf
test
sbb
fs
or
or
scas
and
mov
pop
js
adc
cmpsl
enter
jae
ret
mov
leave
add
xchg
dec
mov
xchg
lock
cpuid
push
fdivrs
and
pop
push
mov
pop
negl
mulb
add
popa
bound
shll
stos
lock
dec
lea
push
mov
lods
dec
mov
js
inc
sahf
rclb
shlb
sti
mov
jns
es
mov
lds
addr16
cmpsb
loop
pop
lock
mov
dec
mov
sub
test
dec
loopne
and
in
aam
mov
iret
cmc
xor
inc
mov
loop
test
dec
je
add
and
sub
test
lods
xchg
cmp
movsb
loop
fldt
popa
test
mov
xchg
nop
ficompl
mov
test
loope
out
addr16
mov
das
or
stc
out
push
mov
ds
scas
sbb
and
jbe
xor
inc
xor
fwait
jns
lcall
loope
sub
clc
out
add
subl
iret
popf
or
aas
sbb
xor
cmpl
mov
mov
mov
aaa
fnstcw
inc
popf
pusha
call
sbb
loop
dec
mov
adc
mov
pop
push
xchg
add
xchg
and
pop
in
pop
cmp
ret
pmulhw
adc
fxch
adc
cs
sub
and
push
mov
dec
dec
mov
outsl
jnp
push
loop
in
sbb
jo
sbbl
inc
xor
ret
jo
stc
das
lds
clc
sbb
and
lret
inc
add
loop
sub
adc
lret
imul
push
test
loopne
adcb
mov
rcrb
cs
and
mov
leave
mov
pop
jge
outsb
xchg
mov
or
test
mov
jns
adc
fidivrl
sub
fstpl
push
push
test
dec
int
or
push
adc
xchg
inc
adc
push
mov
or
push
aad
js
push
movsb
orb
cmpps
popa
cltd
mov
sub
js
and
popaw
sbb
xchg
pop
in
outsl
dec
sub
add
adc
sbb
lods
cmpb
sub
inc
rcrl
pop
outsl
les
out
notb
mov
and
arpl
cli
xchg
pop
sub
xchg
test
gs
iret
js
mov
mov
sub
pop
sub
inc
jl
stos
scas
pop
jmp
adc
sbb
sbbb
push
jno
fstps
or
xchg
sub
lods
roll
data16
js
testb
pop
jg
cmp
pop
std
in
pop
pop
scas
xor
inc
mov
lahf
sbb
das
mov
cltd
jg
xchg
adc
popf
xchg
icebp
and
mov
inc
repnz
or
in
test
sti
jmp
cmc
jl
scas
push
imul
sarb
cmc
jg
push
cmp
ret
xchg
aam
imul
leave
cmpsl
add
mov
and
movsl
sub
add
movl
xlat
or
push
sti
and
cmp
lret
addr16
sub
or
dec
pop
sub
js
arpl
mov
lods
sub
lcall
insb
or
in
imul
mov
hlt
sub
pop
add
jl
inc
cmc
push
fcom
push
loope
in
push
push
and
jo
push
sub
js
daa
js
lahf
clc
ret
cmp
inc
jno
sub
aas
clc
out
adc
insl
dec
push
cld
movsl
inc
dec
cli
dec
imul
test
ja
addr16
fdivrl
stos
leave
dec
lahf
ret
pop
mov
jg
loope
addr16
xchg
xchg
mov
mov
mov
mov
mov
xchg
mov
xchg
push
lahf
sub
mov
pop
dec
mov
xchg
cmc
inc
mov
adc
jbe
sub
push
lret
repnz
sub
dec
pop
mov
imul
add
fdivs
lock
xchg
sbb
jecxz
into
xchg
or
cmc
lds
lret
bound
xchg
cmp
dec
xlat
mov
jmp
leave
cmpsl
pop
lock
pop
movsl
inc
pop
sbb
push
or
jge
mov
aam
rorb
sbb
shlb
jbe
pop
add
popa
mov
testb
mov
mov
sarb
stos
pusha
movsb
mov
dec
jp
adcb
sti
daa
mov
jmp
cli
jne
add
mov
pop
xor
lds
pop
gs
pop
ss
jbe
dec
int3
mov
pop
cmp
jmp
mov
je
loop
sub
dec
jecxz
imul
push
fildl
jle
mov
xorl
pop
mov
push
adc
es
mov
sub
test
sub
dec
cmp
es
jnp
or
hlt
roll
mov
sbb
aad
mov
cmp
pop
push
mov
inc
sbb
pop
test
xchg
loop
loopne
arpl
mov
popa
sar
jno
and
call
iret
sbb
pusha
jno
dec
lock
repnz
in
popa
add
imul
inc
push
aam
inc
cmp
lds
sbb
jb
test
or
mov
adc
aas
lods
push
inc
stc
mov
adc
aas
dec
paddq
xor
mov
loop
mov
outsb
fadds
sbb
mov
jmp
pop
fsts
in
fimull
add
or
imul
mov
mov
xor
push
daa
lahf
inc
jnp
es
sub
test
pop
mov
ljmp
cli
push
popf
cmp
mov
ja
mov
fs
in
outsl
inc
lods
xchg
and
sbb
and
xor
shll
out
rol
repz
lods
xor
rcrl
push
push
aad
andl
sarb
das
mov
add
insb
adc
mov
aas
adc
shll
jecxz
inc
mov
in
xor
ljmp
ss
movsl
cs
push
xlat
or
sub
push
add
cltd
stos
mov
fistl
lods
push
fidivrs
xor
pop
js
and
mov
push
fcomps
and
mov
shl
pop
es
or
xchg
and
test
stc
fists
inc
inc
mov
jno
push
pusha
cmp
in
xchg
and
dec
data16
data16
fwait
sti
xchg
sbb
sbb
or
stos
pop
push
adc
and
ss
popa
aas
or
mov
mov
jbe
aas
jle
dec
cmp
dec
shll
lahf
ds
movsl
pop
cs
adcb
ss
sub
mov
test
mov
adcb
add
jg
cltd
and
test
dec
cs
jbe
sbb
push
rcrl
push
dec
adcl
xchg
inc
jb
cmp
out
pop
push
pop
bound
in
mov
pop
stc
enter
in
sub
sub
rcll
cmp
push
das
sbb
movl
lret
jo
mov
ret
fimull
fdivs
pop
dec
xchg
or
addr16
fs
xchg
sbb
jecxz
push
mov
addr16
jno
ret
xor
pusha
xchg
sbb
sbb
push
jne
inc
jp
loopne
test
mov
stc
enter
mov
cmp
test
xchg
std
in
icebp
icebp
fldcw
mov
and
add
xor
lcall
add
lock
jp
sbb
xor
rclb
dec
cmc
push
cmp
adc
dec
jg
sbb
scas
and
xchg
aad
add
stos
out
je
mov
imul
mov
or
inc
inc
xchg
lods
movsl
divl
pop
dec
fwait
cmc
sbb
mov
fidivrl
add
mov
test
fldenv
pop
insl
scas
xchg
fldt
es
xchg
xor
push
sub
in
addb
fbstp
in
jmp
iret
es
lahf
pop
das
ret
out
fmuls
cmc
daa
cmp
lea
cmp
and
js
jo
inc
xchg
jl
fwait
std
sarb
push
sub
mov
mov
lods
out
pop
add
dec
mov
inc
dec
inc
loopne
sbb
jmp
movhps
inc
push
les
js
cmp
mov
inc
pop
mov
stc
dec
movsl
and
inc
adc
pop
inc
out
xchg
div
lds
nop
stos
repnz
cmp
sbb
jmp
imul
popa
int
xchg
mov
sub
icebp
pop
ret
aas
arpl
sarb
inc
rolb
pop
pop
aas
add
insb
adc
cmp
pop
in
ja
add
lods
dec
and
insb
sbb
call
and
sbb
pop
sub
and
adc
add
mov
cmp
aas
shlb
sub
int
and
xchg
in
movsb
scas
pop
xchg
pop
lods
xlat
outsl
and
call
pop
sbb
testl
les
jae
std
cmpsb
or
adc
divb
icebp
dec
cli
cmc
mov
mov
out
test
stc
sbb
orb
inc
fcompl
pusha
mov
es
pop
cmp
inc
push
inc
dec
std
in
test
cmc
mov
imul
jno
pop
orl
shlb
sub
add
cwtl
inc
push
add
mov
ja
imul
aas
pop
sahf
nop
jno
xchg
sub
lcall
pop
pop
rol
movsl
add
mov
out
shll
int3
add
outsl
adc
mov
imul
mov
add
sbb
rcrb
adc
insb
int3
aam
jmp
in
dec
mov
push
cmp
aaa
push
push
addr16
lds
in
sbb
jecxz
addr16
cld
cs
in
stos
add
aam
cwtl
inc
mov
scas
lods
lds
jmp
hlt
gs
push
je
mov
ret
aas
mov
adc
fwait
mov
or
pop
test
adcb
subl
adc
mov
test
fnstcw
add
or
sbb
xchg
and
outsb
pop
push
mov
repz
add
cmp
fwait
enter
jmp
mov
mov
inc
call
cmp
cli
test
cmp
sbbl
scas
jg
push
mov
sub
stos
in
xchg
scas
push
bswap
sahf
mov
add
sbb
pushf
aam
popa
xor
sub
add
test
dec
adc
add
jo
ss
bound
adc
or
adc
fcmovb
mov
mov
adc
in
test
addl
nop
std
sahf
jne,pt
xchg
out
mov
out
test
pop
dec
cmp
mov
pop
jmp
mov
and
dec
push
pop
outsb
ds
scas
mov
or
hlt
fstpt
rcl
lods
sarb
divb
jb
adc
jle
test
push
cmp
jle
mov
jg
xchg
or
pop
adc
jo
jne
das
lea
add
loopne
xchg
aam
jmp
jnp
outsb
cld
xchg
push
enter
xchg
in
popa
jne
pop
lcall
cwtl
iret
mov
dec
loope
test
jmp
outsl
inc
stos
or
and
xchg
sbb
mov
lea
push
fcoms
shlb
idiv
pop
data16
sub
gs
repz
xlat
xchg
add
mov
bound
enter
imul
dec
push
xor
add
rorb
xchg
jo
jl
mov
aas
rolb
xor
lea
das
loope
sbb
cmp
dec
mov
popl
add
test
push
jmp
adc
mov
shrb
cli
scas
cltd
mov
mov
jno
or
sub
jae
inc
je
enter
fsubrs
fisttps
xor
outsl
jo
dec
dec
jbe
dec
push
bound
movsl
test
mov
push
loopne
xchg
inc
loopne
and
scas
push
add
add
jecxz
testb
cmp
and
roll
mov
dec
cmp
and
lcall
imul
xor
in
scas
push
dec
cmpsl
inc
clc
fmul
mov
sub
fbld
and
arpl
movsl
push
rcrl
mov
push
adc
insl
loopne
or
pop
xchg
and
popa
cltd
xor
push
pop
xchg
and
frndint
mov
cwtl
pop
or
lods
xchg
and
testb
cmpsb
movsb
iret
inc
stos
repnz
adc
inc
aaa
dec
push
and
jno
add
mov
sub
inc
push
cmp
popa
jp
loopne
jbe
push
jbe
repnz
lcall
cmovg
jns
xchg
adc
and
cmp
into
loop
fisubs
cmp
push
xor
adc
cli
lahf
imull
js
xor
mull
push
jge
pop
lcall
jae
dec
dec
ss
push
aad
or
ja
fsubs
cwtl
out
adc
lock
insb
das
stos
push
jns
cmp
fimull
mov
pop
insb
icebp
jp
in
mov
sbb
inc
mov
jecxz
jmp
das
loope
lea
int
lods
jle
repz
xlat
jb
sahf
out
xlat
mov
add
pop
insb
pop
es
sub
jo
jns
mov
jle
mov
jp
mov
and
jae
cltd
adc
shr
push
lahf
js
push
rclb
out
jns
or
push
repz
repz
sub
ficompl
fldt
leave
scas
popl
pushw
sbb
add
scas
and
jge
xchg
sbb
mov
js
lock
lea
repz
jb
cli
and
outsb
cmp
std
lods
cmp
pop
add
and
aam
repz
jnp
out
sub
cmpsl
iret
mov
lret
pop
hlt
mov
jg
push
sti
shr
push
adc
jmp
enter
push
lahf
lods
test
lock
push
fsubrp
cld
outsb
sahf
mov
mov
inc
mov
sti
inc
mov
and
test
jl
clc
push
and
leave
rorb
jg
inc
sahf
xchg
pop
sub
mov
sub
xchg
test
movsb
mov
xor
add
xchg
cmp
mov
push
xchg
add
lcall
insb
add
lret
mov
inc
add
jp
nop
pop
fstps
xor
pop
sarb
fisubl
aas
int
mov
in
xor
popa
xchg
jg
mov
jge
ret
mov
push
hlt
inc
out
jl
inc
sub
pop
sub
add
xchg
mov
std
in
in
add
mov
xor
orl
push
mov
out
adc
mov
or
in
and
lcall
sbb
xchg
push
push
lret
sub
xchg
xor
sbb
cltd
adc
dec
mov
shl
pop
xchg
mov
mov
ret
clc
push
popa
jbe
cmp
sbb
pop
jbe
dec
or
mov
jno
inc
sarb
push
ror
fnsave
mov
ret
jb
or
push
xor
xchg
std
or
adc
leave
outsl
dec
imul
sub
outsl
inc
bnd
add
xchg
test
push
in
cwtl
or
and
mov
inc
xlat
lea
mov
jnp
sbb
xor
and
addr16
and
push
or
jbe
mov
mov
sbb
mov
push
outsb
ljmp
jl
xchg
xchg
push
test
dec
enter
inc
test
push
les
je
addr16
lret
dec
add
sub
sub
xor
push
stc
out
repnz
es
test
int3
or
mov
cmp
xchg
data16
inc
fst
scas
sahf
mov
push
mov
add
pop
xchg
divb
mov
lahf
xchg
adc
aas
lcall
sbb
push
imul
loop
jp
loope
jne
hlt
fdivrs
fldl
in
into
xchg
adc
push
fstpt
push
jmp
jns
jb
and
adc
pop
into
push
rorb
mov
mov
xchg
inc
lods
push
data16
fldt
imul
notl
ss
xchg
js
scas
jne
cmp
rcr
ja
lret
mov
mov
cltd
rcrb
cmpsl
mov
dec
jl
aaa
jo
sbb
addr16
leave
js
sub
xchg
leave
lea
loope
stos
sub
inc
or
scas
lods
out
insb
cli
dec
pop
enter
push
or
adc
data16
in
dec
inc
mov
xchg
mov
dec
dec
stos
sarb
push
sbb
icebp
jmp
sbb
sub
and
lock
sbb
xchg
add
jo
mov
in
cli
ljmp
mov
stos
das
sti
testb
adc
push
test
lods
jmp
fwait
jp
in
jno
xchg
push
dec
fistl
inc
addl
testb
sub
pop
push
ljmp
lret
dec
inc
pushf
sbb
cmpsb
mov
lcall
mov
push
es
ret
or
adc
lret
bsf
cmp
mov
dec
and
outsl
jb
mov
add
stos
sbb
and
xchg
negb
pop
out
inc
leave
mov
sub
inc
lahf
and
and
or
lods
int
jp
xor
cwtl
mov
loop
push
xchg
pushf
arpl
ss
insb
push
outsl
and
mov
cmpsb
ret
pop
rcr
int
pop
or
pop
cmp
rol
xchg
add
jp
gs
movsl
fnstenv
cmp
dec
push
jmp
arpl
fldt
mov
cmp
sbbb
lcall
cmc
es
inc
shr
cmp
test
push
add
dec
in
cld
and
cmpb
mov
adc
imul
stc
addr16
inc
adc
pop
inc
scas
xor
dec
xor
mov
adc
addr16
pop
mov
jae
jb
fwait
push
xchg
inc
push
mov
mov
movsl
pop
pop
es
or
std
subl
add
jbe
mov
jmp
aad
stos
test
lret
mov
adc
out
fldcw
or
jecxz
mov
movsl
test
stos
xlat
add
ret
jbe
cld
push
cmp
call
imul
sub
push
sub
out
scas
arpl
lcall
mov
aaa
pop
sub
push
push
mov
scas
inc
mov
cmp
cli
insb
rorl
adc
out
sbb
add
jge
mov
push
xchg
in
dec
dec
pop
andl
fst
nop
pop
out
mov
adc
pop
push
inc
mov
adcb
xorb
cld
push
and
fistl
adc
outsb
repz
fldcw
sub
iret
cmp
ret
shll
inc
jnp
inc
std
mov
lock
add
add
or
popa
stc
or
push
xor
loope
mov
xor
cmp
sbb
or
in
fwait
push
lock
out
dec
mov
pop
in
fbstp
arpl
and
cmpsl
pop
sub
out
mov
negl
dec
pop
lret
push
xchg
sahf
cmp
jp
inc
and
xor
insb
sub
dec
push
and
xchg
cs
or
aad
and
xlat
or
into
mov
arpl
xorb
and
cs
loop
xor
or
sub
pushf
andb
jns
nop
jo
cwtl
or
mov
and
loopne
cmc
mov
pop
lret
mov
sub
sbb
add
ss
lods
lcall
cmp
push
xor
cmp
xor
cmp
inc
push
ficompl
add
sub
jns
adc
xchg
xor
lods
lods
mov
repnz
movsb
sub
jge
sub
daa
fldcw
mov
push
rolb
mov
mov
ret
inc
mov
movl
pop
incl
push
push
mov
adc
sarb
fwait
rorl
inc
pop
xor
ss
fsts
pop
or
jg,pn
mov
jle
dec
cmp
out
test
pop
mov
pop
push
inc
in
xor
mov
loop
stc
mov
imul
jmp
xor
lcall
jbe
push
fxch
movl
repz
lds
push
xchg
aas
negb
add
icebp
xchg
mov
std
add
pop
fcmovnu
adc
lock
ds
mov
jnp
ss
jbe
pushl
cmp
and
lock
int3
icebp
data16
ds
mov
adc
push
inc
xor
jno
jge
push
mov
push
int
push
mov
and
imul
xor
cmp
fcoml
mov
pop
xor
jl
xor
out
jne
or
push
aas
mov
lods
push
imul
mov
mov
or
mov
push
loopne
faddl
cld
repnz
mov
mov
movsl
xchg
sbb
loop
stos
push
pop
insb
outsb
xlat
mov
pop
subb
mov
lret
cmp
ja
loopne
mov
pop
test
adc
cmp
popa
dec
test
jnp
xchg
jns
adc
shlb
repz
mov
dec
sbb
add
fdivrs
loop
mov
out
sbb
sbb
mov
adc
push
pop
fs
stc
stos
mov
jle
pop
add
in
cltd
pop
mov
jo
iret
call
pop
xchg
addb
idivl
div
mov
or
add
sti
lcall
repz
add
stos
push
add
or
repnz
mov
in
sub
mov
cld
sarl
inc
rorb
scas
fucom
xor
mov
lcall
sbb
in
ror
dec
mov
nop
mov
and
push
pop
push
aam
nop
addl
inc
xchg
xor
js
scas
cmp
adc
repz
int3
repnz
out
push
pop
arpl
inc
jp
je
cmpsl
jge
jmp
dec
shlb
clc
bound
loop
push
mov
jg
mov
jns
or
loop
dec
out
sub
imul
jnp
xchg
das
insb
fst
inc
in
pop
or
subb
mov
aad
inc
xor
xchg
push
fstps
xchg
mov
dec
ss
testb
cmp
cmp
cmp
sub
push
jg
test
sbb
pop
xorb
out
inc
imul
ljmp
sahf
push
rcll
fdivl
sub
dec
daa
sub
pop
iret
xchg
cmp
cltd
mov
adc
out
clc
cmp
pop
xor
add
jge
jne
adc
mov
stos
xor
cmpsl
fidivl
loopne
or
mov
sub
addr16
fbstp
ds
dec
xor
xchg
jg
jge
mov
mov
and
std
sarl
mov
xor
inc
or
icebp
jnp,pt
xchg
sbb
shlb
lods
shl
pop
inc
adc
cltd
stc
movsl
adc
xlat
mov
cmp
in
cmp
mov
in
aam
fs
xor
add
inc
xor
imul
inc
pop
mov
incb
push
leave
gs
fwait
movsl
movsl
out
mov
cmc
loop
in
gs
xlat
push
daa
mov
xor
push
fnsave
fidivrs
test
call
xchg
add
or
lds
scas
cmp
movsl
mov
jnp
push
mov
add
sbb
or
pmaxsw
inc
sub
test
xor
pop
mov
pushf
in
shl
mov
cmp
outsb
mov
push
sbb
or
pop
sub
loope
vmwrite
sbb
mov
adc
xor
lds
into
cmpsb
ja
pop
mov
fsubr
loopne
pop
clc
jno
pop
pop
fistpll
arpl
lret
call
enter
jne
dec
divb
sbb
mov
cltd
out
mov
sbbl
cld
xchg
add
mov
mov
adc
mov
in
stos
das
std
jnp
fstpl
mov
push
cwtl
mov
hlt
and
jle
cld
push
inc
std
push
add
das
in
push
and
imul
mov
icebp
inc
push
sti
or
jmp
xlat
out
lahf
test
sub
ret
sbb
sub
cmc
mov
and
inc
cmpsl
adc
pusha
dec
les
xchg
hlt
jmp
sbb
das
out
in
push
int3
or
push
dec
and
in
data16
out
pop
xchg
mov
fcompl
push
out
mov
pop
cmp
pop
sub
push
mov
andnps
icebp
pop
test
sbbl
xor
xchg
push
fdivs
mov
stos
test
ja
aas
test
inc
out
pop
mov
das
and
loop
add
add
js
push
cmp
mov
dec
bound
aas
insb
jae
jecxz
imul
das
jecxz
stos
sbb
into
push
pop
jmp
loop
aad
call
cwtl
sub
icebp
inc
cmpsb
jne
nop
dec
mov
and
inc
in
or
loop
adc
mov
das
jno
int
adc
outsb
mov
std
stos
dec
dec
stos
push
xchg
ja
xor
mov
pop
inc
inc
push
les
dec
xor
mov
sbb
xchg
imul
sbbb
dec
leave
stos
not
ljmp
pusha
jns
sahf
lcall
popf
adc
movb
dec
loope
cmp
push
imul
dec
sub
fsts
push
idiv
int3
sub
cmp
dec
icebp
mov
or
xlat
iret
push
stos
mov
aad
ficoml
jnp
ja
test
fdivrl
ficompl
fldcw
out
pop
adc
sub
insb
jle
inc
imull
pop
xchg
sbb
and
in
lret
into
sbb
jp
adc
pushw
fmulp
mov
xchg
xor
sarl
cmp
mov
dec
pushf
fsts
mov
mov
adc
repz
inc
cmp
jo
or
jbe
in
fsts
popa
es
sbb
jmp
xor
push
cltd
ds
sbb
gs
testb
pop
mov
dec
pop
repnz
popf
push
repnz
test
lods
mov
das
jae
cmp
cwtl
pop
cmp
cmpsb
dec
testl
mov
dec
fsubs
lds
xchg
fnstcw
add
dec
notl
test
sub
outsb
imul
mov
in
and
gs
js
data16
scas
pop
inc
data16
xor
clc
je
outsl
push
mov
mov
mov
jge
cmp
and
loope
scas
lret
daa
lcall
push
push
fimuls
jb
mov
enter
lods
mov
jb
and
movups
dec
xchg
push
lds
neg
push
orl
sbb
cmp
arpl
and
sbb
fmull
fst
nop
mov
pop
pushf
add
inc
jns
lcall
mov
dec
shlb
xor
bnd
rcr
ret
fstpl
mov
addr16
out
lret
outsb
mov
test
in
jo
aas
or
xchg
push
fstpl
push
cltd
imul
pushf
pushf
pop
add
hlt
adc
out
popa
mov
xor
mov
dec
sbb
cwtl
inc
sub
out
out
and
pop
jae
stc
pop
jp
std
ja
mov
dec
jl
inc
or
adc
jns
cmc
out
mov
push
aas
and
pcmpeqd
or
push
or
shlb
fnstsw
pop
std
mov
jnp
push
xchg
inc
inc
inc
mov
gs
mov
aad
negb
jmp
psubsw
cmp
or
out
xchg
sarb
rol
mov
loope
cmp
sbb
dec
test
push
sub
lock
push
mov
jmp
adc
out
je
xchg
fs
lret
mov
sbb
int
pop
lods
inc
dec
jle
call
xor
and
mov
cmc
shr
lret
mov
lods
test
cltd
ret
inc
subb
cmp
stos
and
jmp
mov
push
or
out
sub
push
aad
inc
add
mov
sbb
fs
lret
pop
je
xor
mov
mov
call
xor
mov
cli
pop
pop
dec
mov
pop
stos
xlat
insb
aas
int
add
shl
cmpsl
jl
sub
push
lea
xor
mov
mov
xchg
hlt
mov
fisubrs
gs
mov
testl
xor
addr16
inc
clc
inc
or
js
pushf
mov
mov
pop
cs
and
push
dec
or
pop
dec
mov
jne
push
fsts
mov
outsb
adc
mov
pop
push
jge
ret
mov
cmpb
bnd
sbb
jnp
add
jmp
stc
loope
mov
cwtl
push
adc
cld
lods
in
jle
push
pop
imul
std
jns
lret
std
test
addb
movl
sbb
mov
or
push
cmpsb
xchg
negl
adc
ret
xchg
pop
das
pop
push
pop
push
cmc
cmp
sahf
cwtl
les
mov
mov
movl
cmpl
je
cmpl
jne
pushl
push
push
push
pushl
pushl
call
cmpl
jne
xor
xor
dec
mov
mov
dec
mov
jmp
mov
or
xor
xor
mov
orl
add
movl
cmp
je
movl
mov
jmp
movl
mov
cmp
movl
jne
push
jmp
mov
mov
movl
cmp
jne
mov
or
mov
mov
xor
subl
add
mov
and
mov
neg
mov
mov
xorl
xor
sbbl
jmp
push
mov
notl
dec
nop
push
mov
jmp
jp
pusha
negl
rol
mov
mov
jo
ljmp
adc
pop
or
mov
adc
push
jmp
ljmp
out
lcall
push
movsb
pop
mov
ret
daa
xor
mov
xchg
pop
mov
lret
jl
je
fsin
mov
lcall
push
lea
push
cs
mov
imul
cmpsl
mov
js
pop
inc
out
and
dec
xchg
jle
mov
lds
pop
pushf
or
adc
cmpsl
xchg
sti
cmp
inc
mov
mov
jae
xor
pop
test
aas
cmc
cs
ds
out
js
pop
pop
cld
jne
je
imul
das
mov
mov
out
or
push
cmp
xchg
push
out
sbb
hlt
sbb
in
out
jno
xchg
dec
adc
jbe
lcall
in
scas
push
push
data16
cmc
jle
adc
mov
and
stc
lret
push
push
sub
daa
enter
push
or
cmpsb
fidivrl
mov
cld
cwtl
and
fwait
inc
outsl
xor
push
sub
xchg
inc
stos
rcrl
adc
outsl
or
jno
or
pop
data16
rclb
mov
mov
adc
cmp
lea
fbstp
xchg
aas
adc
xor
shrl
ret
pop
sbb
test
xor
or
and
mov
xlat
adc
fistpll
inc
or
lret
push
push
shll
add
cwtl
std
adc
add
xchg
jnp
lret
shrb
fsubp
mov
dec
mov
xor
sbb
or
mov
xchg
jp
and
arpl
add
ret
add
ljmp
addb
mov
xchg
lret
sarb
mov
dec
adc
test
pop
pop
stos
cltd
cmp
push
stc
leave
push
sbb
push
in
nop
test
mov
enter
cmp
mov
in
adc
in
lret
sub
out
or
and
jbe
pop
cld
movsl
push
adc
stc
bound
add
sbb
imul
inc
mov
mov
out
and
fldcw
xor
loopne
js
cmp
sub
fadds
jmp
xchg
std
shl
lahf
jecxz
xchg
jmp
add
ljmp
leave
fptan
dec
rclb
insb
xor
add
mov
movsl
jp
pusha
stc
mov
jnp
pushf
shl
sub
outsb
jmp
xchg
inc
push
int
in
xor
mov
daa
sti
and
test
jecxz
or
pop
aas
lods
lea
fmuls
mov
mov
sub
sbb
outsl
push
mov
clc
jae
xor
andb
mov
sub
cmp
mov
or
jle
divb
or
cmp
ret
adc
push
dec
and
andb
aas
inc
xchg
sub
hlt
iret
add
bound
call
out
mov
fs
insl
je
jb
imul
movsl
adc
add
sahf
movb
test
mov
xchg
push
xchg
sahf
adc
aam
mov
ret
shlb
push
mov
je
sub
push
inc
or
mov
fsubrs
loop
cmpsb
jae
lahf
sbb
mov
xorl
cs
hlt
cli
scas
dec
arpl
add
mov
add
ficompl
test
xchg
xchg
dec
test
dec
add
xchg
mov
mov
cmp
cmp
aaa
cmp
int
xchg
imul
xorl
fdivl
in
jmp
xchg
pushf
int
in
lods
adc
sub
repz
jbe
mov
xorb
jmp
lds
int
orb
jnp
les
mov
in
outsl
jl
dec
jecxz
jnp
aad
stos
add
mov
les
nopl
imul
outsl
lret
xchg
adc
mov
cmp
cmp
inc
or
cli
iret
cmp
mov
je
clc
jmp
jmp
and
sbb
inc
mov
push
dec
and
ss
pushf
dec
xchg
lock
int
xor
jmp
mov
add
pop
xchg
xchg
jae
out
cli
mov
decb
xlat
rcr
pusha
filds
loope
lds
insl
adc
adc
dec
dec
roll
xchg
inc
dec
fcmovnu
divb
cmpsl
int
sbb
loopne
orl
fwait
add
out
movl
cmp
filds
std
add
lock
or
inc
xchg
push
lret
push
adcb
cmp
mov
push
rorl
bound
dec
xchg
js
cmp
xor
orl
popa
testl
je
pop
xor
outsl
mov
xchg
push
xor
push
fisubrs
pop
jns
push
lods
push
mov
pop
sar
int
xor
dec
test
popf
mov
inc
fisubs
mov
xor
cmp
inc
push
xchg
data16
push
pushf
push
cmpsb
jmp
adc
jns
lcall
shll
mov
insb
outsl
jle
mov
ss
xor
repz
scas
jne
sbb
loope
dec
pop
imull
movsb
gs
out
sbb
cld
or
ftst
mov
pop
or
cmp
ja
aad
out
mov
cmpsl
or
push
pop
dec
test
dec
push
mov
or
in
test
rorb
aad
int
push
outsb
icebp
dec
dec
mov
add
add
xor
or
dec
mov
and
ds
and
movsl
arpl
btl
loopne
frstor
ds
mov
and
cmp
lock
inc
in
mov
inc
sbb
adcb
popf
sub
fdivl
xchg
rcr
cmpsb
popa
push
jmp
lret
into
addb
pop
jge
fsubrl
sti
iret
jg
pusha
loopne
xor
jl
negb
inc
xrelease
cltd
mov
sub
xchg
pop
clc
popf
scas
les
push
push
dec
fiaddl
and
es
out
mov
cltd
les
xchg
insb
jl
int3
out
cmpsb
sbb
xchg
cmp
jl
push
adc
das
cmp
popf
push
loopne
bound
cmpb
gs
std
push
notl
stos
subl
mov
push
in
lock
lahf
xchg
push
test
sbb
or
mov
sub
insl
loope
nop
test
jno
hlt
mov
push
aad
icebp
cmp
pop
enter
fnsave
jp
mov
inc
imul
adc
test
xchg
cmp
mov
ja
idiv
leave
push
je
cmpsl
xchg
outsl
addr16
mov
daa
pop
sbb
xor
addr16
cli
push
adc
jecxz
jo
scas
xor
mov
je
xchg
inc
inc
inc
aam
aam
ret
fs
pop
or
inc
icebp
sti
xchg
ret
stc
inc
in
sbb
pop
stos
inc
adc
fcmovnu
jae
adc
push
mov
popa
out
shll
enter
xor
push
pop
and
enter
adc
imul
add
and
mov
cli
scas
jnp
scas
fs
xor
inc
stc
xlat
add
xchg
mov
std
rcrb
pop
dec
aas
mov
gs
cmp
int
pop
fisubrs
lahf
fsubrl
jns
jb
icebp
shlb
adc
sbb
dec
maxps
xor
cmp
lods
xor
pop
notb
icebp
fists
sub
sarb
leave
sub
out
mov
mov
mov
stc
jg
test
in
inc
adc
xchg
jnp
imul
outsb
sub
mov
test
xor
lret
hlt
mov
rorb
ja
push
fwait
mov
fldt
sub
mov
andl
push
xchg
sub
shlb
push
ret
subb
sub
js
ja
dec
insb
lea
loope
lahf
and
stos
insl
adcb
or
sub
mov
lods
nop
mov
mov
and
dec
and
sbb
shlb
cmp
xor
movsb
call
sub
nop
mov
test
loopne
jecxz
lret
loopne
jle
sub
packuswb
scas
and
xlat
inc
push
inc
xchg
xchg
cmp
addb
mov
lret
pushf
repnz
mov
cmc
jbe
leave
add
jmp
stos
push
lods
mov
pop
sub
xchg
and
ret
mov
cmp
subb
dec
xchg
push
int
in
inc
jbe
xor
mov
outsl
sahf
cli
shrl
scas
xor
loop
and
nop
stos
je
adc
rcll
shr
xchg
imul
movsb
into
cmc
jp
mov
pop
mov
jp
cmp
into
mov
xor
mov
test
pop
clc
jae
aam
outsl
mov
push
scas
mov
lock
add
in
out
xchg
clc
sub
inc
mov
inc
mov
mov
jo
icebp
xor
xchg
push
enter
jle
pop
mov
push
push
notl
pop
xor
cmp
and
ss
dec
loopne
fmuls
lods
sub
cmp
pop
cld
fildl
mov
adc
sub
shrb
jae
jle
pop
out
inc
jecxz
inc
inc
out
push
scas
ds
cs
ret
push
int
int
jno
loope
cmp
push
cmp
loop
cmc
imul
jecxz
mov
adc
scas
cmpsb
pushf
imul
sub
pop
out
popa
ja
pusha
mov
leave
xchg
imul
mov
es
test
xor
push
fstl
lods
jge
dec
cmp
pop
xchg
mov
or
imul
aad
add
es
adc
sar
pop
loop
jns
push
mov
mov
fs
adc
mov
xchg
and
xchg
fists
lea
das
and
jns
lret
mov
js
cmp
and
lods
fmuls
jg
push
mov
add
mov
mov
mov
inc
test
sti
arpl
arpl
pop
push
js
push
jp
loop
jbe
sbb
inc
aam
add
xor
test
sbb
jne
in
push
scas
sbb
insl
add
mov
fistpll
stos
cmp
push
xchg
adc
inc
sbb
mov
nop
aad
xchg
jns
out
out
shrb
dec
mov
negl
gs
pushf
into
pop
shlb
or
dec
or
mov
adcl
outsl
ror
add
and
or
aad
fwait
push
data16
cltd
das
jbe
fcomps
adc
shll
mov
jecxz
fprem1
xchg
inc
mov
sahf
and
push
repz
imul
pop
ret
inc
cwtl
jns
jae
les
orb
mov
pop
adc
ja
cli
lahf
fildl
scas
hlt
aas
fildl
mov
add
adc
into
jo
dec
cmp
and
repz
xchg
mov
jae
push
cmpsb
adc
jno
sub
pop
negl
int
lahf
filds
les
daa
push
into
aas
das
sub
lahf
negb
jne
ret
aad
fmull
add
pop
jbe
clc
cli
push
fdivrl
cld
dec
jmp
jle
insl
dec
scas
jns
notl
adc
in
add
xor
xchg
jecxz
ljmp
mov
shl
inc
push
xchg
mov
test
mov
push
jecxz
icebp
lea
lea
leave
pop
ljmp
lock
fstl
mov
cmpsb
xchg
and
test
popf
add
inc
and
mov
xor
pop
outsb
outsb
js
or
andb
int3
add
cld
test
adc
pop
xchg
or
dec
fldenv
ja
mov
add
inc
imul
mov
in
lcall
popa
jl
cld
jge
push
gs
sbb
push
jge
das
pushf
mov
std
sub
jbe
aam
imul
lcall
lods
out
jecxz
mov
mov
cmp
xchg
pop
cmp
xchg
sub
mov
js
and
jns
cmc
sbb
nop
ret
inc
mov
dec
ret
test
mov
dec
dec
cs
sub
dec
data16
jp
pop
mov
sahf
cmp
pusha
mov
xchg
je
aad
xchg
jg
vpslld
cltd
scas
fsubr
fdivp
mov
aas
jmp
mov
cmp
sarl
xor
mov
add
mov
push
and
repnz
inc
lock
xor
add
sysenter
push
push
mov
push
inc
sti
insl
inc
pop
ss
xor
pop
sarl
lods
cmc
xchg
mov
dec
stos
dec
and
or
jbe
call
test
out
arpl
inc
iret
mov
lock
into
ds
pop
jge
fcoms
push
dec
call
jmp
ret
fucom
ret
lds
push
test
lret
sub
and
fisubrs
roll
fxch
out
pop
lret
repz
rcll
xor
jmp
stos
rclb
xchg
jns
lods
rorl
jns
ret
mov
adcl
mov
test
sti
outsl
and
shlb
repz
sti
icebp
jno
fstps
in
mov
sbbl
cmp
xor
in
call
adc
fstps
sub
jmp
add
mov
cld
sub
cmpsl
lahf
out
mov
lret
pop
imul
fidivrl
aam
enter
repz
and
int
pushf
movl
jmp
pusha
sbb
fldcw
iret
dec
adc
fists
xchg
or
clc
loope
cltd
cmc
inc
enter
dec
fcmovnu
je
sub
mov
aad
jge
divl
cmpsb
and
mov
inc
cmp
push
filds
xor
popf
loopne
dec
inc
insb
mov
xchg
add
in
andb
or
mov
imul
sti
mov
test
dec
xchg
mov
jg
mov
jge
mov
jo
insl
mov
in
xlat
insb
lret
dec
pop
sub
lcall
mov
scas
and
push
xchg
inc
lods
cmp
and
push
pop
gs
mov
sub
ja
push
es
pop
mov
notb
cld
mov
push
nop
and
mov
and
mov
outsl
fcmovnu
rorl
mov
andl
or
dec
mov
jl
addr16
mov
mov
addb
cld
es
mov
arpl
enter
iret
pop
cld
rolb
push
mov
pop
test
and
aam
xchg
push
loope
sbb
push
repnz
adc
aas
addr16
scas
in
fsubs
mov
sti
cld
mov
push
push
sbb
repz
or
loopne
adc
sbb
aaa
sub
mov
inc
je
call
gs
sahf
icebp
mov
mov
dec
cmp
xor
imulb
add
hlt
mov
addr16
lahf
cmp
dec
inc
xchg
aaa
adc
arpl
add
ss
mov
mov
add
push
jecxz
or
rcrl
mov
xchg
push
push
pop
and
fisttpl
mov
cmp
dec
ljmp
xchg
mov
jnp
pop
push
imul
leave
mov
aaa
fisttps
dec
push
pop
inc
and
lock
push
lods
inc
call
adc
mov
in
dec
icebp
xchg
cwtl
nop
pop
xchg
movsb
lcall
stc
cmp
pop
pcmpgtw
push
push
jg
aaa
aas
jmp
les
aas
imul
and
jecxz
scas
aaa
shl
mov
add
sbb
or
stc
pop
in
popf
adc
iret
xchg
fdivrs
bound
xchg
and
sub
xor
mov
sahf
movsb
push
imul
jnp
sub
cmpsb
xor
fsub
mov
adc
pop
mov
inc
fisubs
mov
xor
fwait
jle
dec
pop
dec
fs
mov
cmp
cmpsl
ss
mov
xchg
pop
adc
push
imull
pop
cmpsl
mov
cmp
and
dec
add
pop
ljmp
sahf
pop
cli
xchg
lcall
loope
ffree
pop
test
jne
cmpsl
adc
daa
mov
andl
add
adc
push
sti
popf
jne
cmp
adc
mov
xchg
lret
rcrl
mov
stos
mov
addl
pop
pushf
mov
inc
cmpsl
dec
mov
popa
mov
insb
jmp
jg
das
push
or
in
push
sbb
aam
adc
into
pop
rclb
push
call
jnp
push
mov
stc
jp
inc
cmp
pusha
sti
cmc
rcll
popa
out
jge
lock
inc
mov
imulb
sti
fldcw
pop
orb
rorb
sbb
nop
push
push
jl
test
or
dec
cmp
fsubl
pusha
fcmovnbe
pop
xchg
and
mov
outsb
or
sub
jne
xchg
mov
sbb
add
cwtl
lret
dec
jb
cmpsl
mov
imul
lock
and
push
mov
notb
and
push
xchg
mov
ret
push
mov
or
push
pop
jecxz
leave
dec
hlt
fwait
in
mov
mov
insb
jle
mov
testl
xchg
testl
push
push
or
mov
mov
cmp
cmp
int3
xor
cmp
or
cmp
sub
fcmovnb
rolb
add
into
imul
dec
cmp
sub
mov
or
sub
pushf
std
out
cltd
dec
insb
and
icebp
shrl
push
scas
cmc
scas
push
fs
jecxz
xchg
add
push
mov
shll
sbb
lcall
add
cmp
inc
inc
aas
add
frstor
inc
inc
les
and
dec
and
leave
pop
adc
push
add
adc
pop
mov
sub
std
out
jne
jbe
mov
push
mov
cmp
fwait
xchg
mov
ror
jae
jg
stos
mov
icebp
mov
popa
bound
mov
add
das
sbb
xchg
dec
sbb
stos
sbb
jp
dec
mov
lret
inc
divl
dec
mov
cmc
xor
addl
dec
roll
mov
xlat
pusha
cld
jns
mov
cmp
push
cld
lock
pop
push
or
out
lods
push
in
es
shr
ljmp
clc
cs
adc
aad
pop
shll
pop
clc
vpmaddwd
pop
leave
pop
or
sbb
pop
cmpsb
adc
mov
push
mov
icebp
rorl
jmp
push
sbb
lahf
sub
dec
iret
adc
bswap
xor
xchg
popa
and
push
int
pushl
pop
movsb
int3
add
push
sarb
stos
divb
jns
aam
jno
push
lahf
add
or
jl
fsubs
lea
fstpt
sub
jae
mov
push
mov
stos
ret
bound
gs
stc
icebp
or
pop
push
mov
cmpsl
push
pushf
mov
xor
mov
scas
mov
or
ja
movsl
jl
popf
cli
mov
cmpsb
cmp
outsl
shlb
stos
xor
pop
testl
push
call
js
lret
hlt
lock
aas
lret
loopne
inc
daa
jp
insl
data16
and
inc
fistpl
loopne
int
jle
loop
pop
stos
outsl
or
pop
call
es
add
or
test
add
adc
cmpsl
mov
mov
mov
add
lret
cmp
cmp
push
dec
cltd
push
mov
xchg
mov
xor
movl
rcrb
pop
imul
push
or
cmp
lods
int
negl
adc
jne
jp
lahf
xor
ljmp
outsb
js
push
pop
mov
xor
xlat
xor
inc
mov
aam
or
pop
dec
pop
fucom
add
shrb
mov
push
push
xor
or
and
sbb
push
lret
ss
scas
andb
push
in
ffreep
imul
cmp
pusha
popa
mov
adc
cltd
or
xchg
lcall
dec
inc
pop
test
rcl
jns
js
les
push
push
das
enter
incb
cmpb
mov
out
adc
cmp
mov
data16
movsl
sbb
add
sbb
loopne
sub
xchg
add
subl
out
enter
lods
into
cltd
shrl
ret
shl
lret
rorl
lods
fiaddl
cwtl
test
shrb
arpl
rclb
pop
nop
and
fs
jg
push
xchg
cmp
pop
adc
mov
cmp
jno
lods
popa
and
clc
cmp
xlat
pop
in
mov
bound
xor
xchg
and
dec
subl
test
clc
dec
push
mov
movsb
xchg
mov
movl
aam
mov
xlat
push
subb
sub
aaa
xchg
pop
lods
sbb
lods
and
addr16
dec
mov
jle
shll
push
add
mov
jl
cmc
cmpl
jns
push
push
stos
stos
cmp
pop
jns
cwtl
and
jmp
pop
in
xor
rclb
or
add
cmp
stos
mov
aas
jae
repz
fcmovbe
in
jmp
mov
pop
jno
mull
out
dec
jmp
jmp
ss
mov
mov
arpl
xchg
mov
shlb
mov
xchg
mov
retw
outsb
insb
lods
data16
push
mov
punpcklwd
int3
inc
mov
jecxz
dec
inc
push
pushf
lds
xchg
and
mov
dec
and
sarl
push
outsl
jo
dec
cmpsb
or
jmp
loope
push
push
js
sub
insb
lods
dec
out
scas
mov
inc
sbb
inc
and
lock
sbb
xchg
mov
adc
aam
xchg
data16
into
jp
xor
insl
call
call
mov
xor
jbe
hlt
cmp
mov
sbb
lret
inc
arpl
stos
or
cmp
into
mov
add
mov
or
neg
jno
mov
dec
adcl
xchg
in
adc
or
xor
push
xchg
int3
add
cmc
pop
xor
imul
dec
cmpsb
push
mov
mov
pop
je
sub
sbb
jle
pusha
ret
pop
js
mov
and
push
loop
xor
stos
scas
test
in
and
or
clc
inc
add
icebp
xchg
xchg
icebp
cmc
insb
loopne
and
out
and
mov
ss
mov
mov
mov
pop
mov
inc
enter
adc
loop
fsts
adc
pop
sub
xchg
xor
pop
fstpl
jae
addb
stos
cwtl
push
jp
add
int3
sbb
mov
shlb
fnstenv
aas
insb
cmp
fnsave
popa
xlat
inc
orl
inc
and
add
std
xchg
into
cmpsl
xlat
lds
cld
outsl
aam
in
xchg
sti
pop
aad
mov
add
pop
jno
mov
xchg
pop
jae
inc
mov
rcrl
sti
loop
dec
pop
mov
leave
ret
aad
xor
push
bound
mov
nop
push
inc
or
cmp
jecxz
or
pop
rcrl
iret
mov
cld
lahf
sbb
xor
jns
aaa
enter
imull
jp
mov
jmp
pop
or
jl
in
push
ficoml
push
mov
call
adc
pop
push
jmp
sub
iret
popa
dec
mov
fwait
and
rcl
dec
jg
jae
mov
lods
in
mov
add
adc
pop
cltd
nop
arpl
dec
cmp
leave
dec
iret
inc
and
dec
cs
scas
loope
push
xor
push
out
into
pop
mov
sub
sbb
xor
std
xlat
pop
out
or
xor
jge
xchg
ror
imul
adcl
adc
mov
xlat
test
addl
cmp
gs
and
add
test
push
insb
bound
xchg
xlat
jl
jl
mov
xchg
dec
mov
cmp
mov
mov
mov
xlat
add
jo
jne
lret
dec
jg
dec
xchg
inc
mov
pop
push
imul
xor
loopne
sub
out
insb
int
xchg
sbb
imul
mov
fnop
sahf
out
push
dec
hlt
sti
sub
in
mov
outsb
sbb
mov
or
ret
push
mov
pop
mov
mov
ds
mov
dec
sti
jl
push
jle
enter
lahf
in
push
lods
mov
sub
jne
or
mov
jle
xor
nop
ja
leave
jne
add
mov
cs
mov
das
add
test
xor
les
mov
aam
inc
loopne
jle
stos
nop
xor
cmp
adc
pop
push
pop
ljmp
jge
js
pusha
lods
or
shlb
icebp
mov
push
aam
outsl
push
xchg
popf
lahf
mov
cmc
pushf
jle
jo
nop
mov
lahf
mov
int3
insl
push
mov
aam
push
jne
mov
fldcw
push
add
or
jecxz
sbb
inc
ret
dec
insl
addr16
mov
mov
fwait
jbe,pt
adc
cs
lahf
dec
dec
shlb
xchg
cli
dec
jb
dec
mov
cltd
neg
dec
pusha
loopne
xor
fdivs
xchg
sbb
jbe
mov
mov
mov
scas
pusha
int3
dec
loope
mov
jp
and
sbb
and
lret
enter
mov
shl
mov
push
adc
into
add
cmp
push
insl
sub
fldenv
mov
mov
inc
js
cli
push
cmpsl
bound
pop
jp
dec
addr16
test
and
pushf
icebp
push
mov
imul
adc
xor
adc
movsb
xchg
int
stos
xor
xchg
mov
flds
sarb
adc
sbb
sub
dec
aaa
pop
sti
and
add
mov
lea
test
mov
sbb
lcall
int
xor
jno
adc
mov
negl
adc
push
fnstenv
and
jmp
mov
adc
out
and
test
sbb
xchg
cwtl
push
ljmp
or
or
mul
push
push
movsl
aam
mov
and
mov
inc
sbbb
jo
arpl
jns
mov
sahf
rcrb
jg
xor
add
mov
inc
sbb
mov
adc
addr16
fbstp
jns
loopne
adc
add
in
cmp
lahf
push
ljmp
movsl
adc
les
and
mov
jl
pushf
dec
add
xor
vprotb
push
fisubrl
je
pusha
mov
sub
out
loop
xchg
adc
sbb
frstor
dec
fidivrl
dec
repz
test
mov
lock
sti
jge
and
jmp
push
xchg
push
lret
dec
test
xor
aaa
mov
outsb
sbb
fs
add
aad
in
mov
cli
xchg
sbb
mov
scas
fimull
lods
add
out
out
inc
cld
cmp
pop
sti
mov
pop
enter
shlb
out
pop
mov
xor
adc
lds
dec
ret
dec
mov
pop
jbe
jle
cmp
sbb
aas
xor
lahf
and
lea
mov
lret
sbb
idiv
ja
rorl
dec
mov
pop
sbb
movsb
mov
mov
and
mov
roll
out
lcall
icebp
cmp
and
fwait
jecxz
jb
insb
gs
jmp
aad
call
mov
push
xchg
push
fcompl
mov
xorl
pop
inc
mov
cltd
xchg
inc
lock
push
nop
push
je
mov
sahf
adc
sbb
push
mov
iret
cmp
cmc
cmp
mov
mov
mov
xchg
insl
call
cli
loope
dec
lds
dec
jecxz
mov
mov
xchg
stos
jl
popf
inc
fs
pop
outsb
imul
stos
aaa
sub
push
push
mov
xchg
push
or
and
sti
push
test
js
bound
inc
sbb
inc
cli
mov
movsl
dec
cmp
mov
out
dec
xor
lret
or
and
lock
add
xor
ljmp
pop
test
jae
pop
lea
push
sub
hlt
mov
les
mov
mov
add
dec
jge
mov
dec
lret
and
int3
mov
loopne
adc
or
test
xchg
lret
cmp
dec
jae
mov
dec
push
int3
dec
mov
dec
or
add
mov
jne
jns
jmp
jl
outsl
fisubs
xor
testl
mov
mov
test
addb
xchg
test
add
shll
into
mov
ljmp
or
jge
pop
inc
xor
push
sub
mov
jo
or
or
sbb
and
fwait
test
cmp
mov
cmp
mov
je
ret
fcoms
inc
push
dec
and
inc
mov
or
popa
test
outsl
repz
shrb
inc
dec
jnp
stos
adc
cmp
lds
push
dec
ret
push
ret
icebp
popa
scas
xor
out
out
outsl
aaa
lea
mov
mov
movsb
fbstp
sub
daa
jmp
mov
cmp
xchg
mov
mov
ja
adc
and
stos
es
dec
enter
and
int3
mov
out
mov
pop
lds
outsb
jg
cmc
cmc
adc
lock
dec
sub
cwtl
insl
jmp
shll
pop
xchg
xchg
lods
cmpsb
xchg
cmp
lock
xchg
sar
mov
cmp
mov
mov
mov
clc
push
ret
xchg
inc
mov
cs
cmp
insb
jbe
addr16
and
iret
sub
loop
lds
pop
clc
jl
bound
in
push
mov
cmc
shl
sub
mov
ss
jecxz
cmc
clc
xchg
jg
mov
jle
mov
dec
movsl
aam
stc
in
dec
xor
aam
mov
jge
dec
push
arpl
mov
rcll
clc
call
in
dec
xchg
aas
test
cmp
add
dec
addr16
das
cmp
loopne
stos
sbb
dec
fcoml
xchg
xor
imul
or
mov
orl
xor
andl
add
movl
cmp
mov
mov
push
movl
je
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
call
jmp
mov
add
add
mov
sub
mov
xorl
xor
add
sbbl
imul
movl
mov
movl
jmp
mov
andl
mov
inc
mov
cmpl
jne
push
call
cmpl
jb
andl
mov
inc
mov
cmpl
jne
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
xor
adc
mov
mov
mov
mov
sub
add
xor
mov
add
mov
inc
mov
sub
add
adc
mov
mov
xorl
add
mov
mov
mov
xor
xor
lea
mov
xor
add
imul
mov
xor
sub
mov
add
cmp
mov
mov
jg
xor
mov
sub
add
jmp
xor
add
add
mov
mov
mov
xor
add
not
and
movsbw
mov
sub
mov
xor
mov
cmp
jne
movsbw
mov
sub
mov
xor
mov
cmp
je
mov
xor
mov
sub
add
jmp
mov
mov
mov
lea
mov
mov
mov
xor
add
mov
mov
mov
xor
add
pop
cmp
jne
mov
xor
mov
add
imul
mov
pushl
jmp
mov
add
mov
mov
mov
movsbw
mov
sub
mov
xor
mov
jmp
stc
add
pop
push
sti
or
mov
pop
mov
lret
sbb
jp
jb
pop
mov
into
fistps
lahf
test
pop
mov
cli
xor
pop
loop
jmp
shlb
cmpsb
mov
cmp
mov
into
or
cld
rorb
call
movsl
cmp
js
pop
and
retw
lock
ret
test
adc
cmp
sar
imul
jne
xor
rolb
add
adc
fucom
sbb
push
rcrl
loope
cmp
fisubl
and
pop
gs
cmp
ret
stc
jbe
push
inc
cwtl
sub
or
movsb
jb
std
shll
decl
and
ljmp
mov
sub
clc
daa
in
rorl
out
in
aas
or
adc
xchg
sub
sub
daa
or
xchg
in
sarb
push
cmpsl
sbb
ret
adc
test
xchg
pop
dec
stos
insb
pop
sti
dec
cmc
popf
xchg
xchg
ds
iret
shr
out
adc
es
adc
iret
popf
mov
adc
mov
sbb
mov
adc
jnp
sub
dec
mov
outsl
outsb
xor
inc
and
push
xor
add
stos
int
xchg
scas
dec
inc
cld
mov
push
mov
xchg
jg
pusha
inc
push
fwait
cmp
adc
in
jg
popf
out
mov
pushf
popf
xchg
jne
mov
jmp
mov
rorl
stos
jge
xchg
cmp
mov
push
loope
clc
fisubrs
pop
aad
scas
adc
jmp
mov
in
sub
cmp
cmc
fcoml
dec
repnz
das
icebp
mull
mov
mov
pop
jno
cmp
fdivrs
jle
mov
pop
loop
and
lahf
je
jbe
push
push
imul
pop
lahf
cmp
stos
xor
lret
mov
lock
es
int
lds
cmpsb
xchg
dec
movl
push
xor
mov
fiaddl
mov
pop
inc
lcall
js
lret
mov
push
std
mov
mov
rcr
scas
test
cwtl
cld
inc
hlt
mov
out
mov
jbe
in
xchg
push
pop
cmp
pushf
pop
mov
fstpl
xor
pop
and
mov
in
stos
int3
shrl
sub
aam
insl
mov
cmp
adc
xor
mov
in
mov
scas
sahf
and
mov
int3
jg
mov
je
in
nop
or
out
pop
xchg
mov
xor
bswap
push
jne
js
dec
or
popa
adc
xchg
int
aad
mov
xchg
loopne
addr16
cmp
mov
pop
fsubrl
int3
ficoms
push
cmpsl
inc
shl
mov
xchg
aam
js
cmp
ret
pop
lret
jp
and
jb
pop
mov
pusha
jae
mov
sbb
lds
push
add
mov
les
inc
pop
mov
push
or
mov
adc
jecxz
jbe
addr16
bound
add
rorb
test
es
xor
mov
mov
sbb
cltd
sub
mov
std
adc
mov
ror
add
push
mov
movsl
xor
dec
pop
sub
jnp
mov
rorb
mov
push
dec
dec
push
cmc
dec
fstpt
adc
and
cmpsb
pop
repnz
mov
xchg
adc
scas
dec
cs
lret
lret
adc
push
andb
scas
push
je
scas
and
mov
cld
ror
mov
dec
jbe
xlat
mov
aad
leave
loopne
movsb
pop
or
mov
mov
int
push
fnsave
cmp
lcall
int
fstpt
sti
rcl
mov
stos
mov
sbb
pop
cmp
add
popa
pushf
cmpsl
cwtl
daa
cmp
and
sbb
sbb
gs
mov
ljmp
xchg
sub
mov
dec
adc
sbbl
xor
cmp
jmp
pop
rcrb
xor
jno
sub
jmp
loop
test
sahf
lds
add
xchg
mov
cmpsb
test
cmp
aas
push
inc
mov
jl
and
dec
pop
push
adc
lret
mov
xchg
stos
ficomps
pusha
adc
xchg
sub
push
dec
popa
shrb
ret
adc
mov
mov
jmp
inc
sub
stos
cmp
cmp
xor
dec
xor
nop
in
aas
fildl
loop
popf
fidivrl
jg
and
jne
mov
scas
push
mov
xor
xchg
xor
jae
push
pop
insb
dec
xchg
movsl
popf
mov
lret
in
add
adc
inc
mov
enter
out
cmp
xor
xlat
jge
push
sbb
rcl
push
xchg
loop
leave
mov
daa
xchg
mov
jmp
and
push
lahf
mov
repz
clc
popf
add
out
push
ds
subl
mov
cmpsb
or
dec
adc
jbe
iret
dec
sbb
jg
mov
jbe
xor
cmp
pop
push
cmp
lods
in
and
in
std
dec
call
or
sbb
add
bound
pop
xchg
fdivl
pop
push
rorb
xchg
rcll
fwait
jbe
pushf
call
mov
push
ja
sub
js
inc
cltd
pop
or
pop
dec
pushf
das
outsl
cwtl
adcl
push
xchg
mov
and
push
ljmp
out
hlt
out
or
jns
add
outsl
add
sbb
das
pusha
fiadds
lcall
stc
lret
imul
loopne
cmp
bound
add
pop
jp
sti
and
add
sbb
loope
cmp
popa
sbb
cmc
js
or
icebp
mov
jne
xchg
mov
inc
cmp
push
mov
jb
sub
cli
cmpsb
out
sub
or
sarb
xor
adc
jns
mov
mov
mov
inc
mov
fdivrs
out
js
jb
fs
icebp
push
or
sub
push
sbb
nop
sbb
nop
xor
inc
popf
jle
addr16
jbe
mov
jmp
lret
aaa
mov
movsl
out
cmp
stos
add
shl
sbb
es
nop
inc
ret
lods
lcall
stos
cmp
test
lahf
sbb
jo
push
aas
test
fwait
mov
push
push
pop
sub
dec
dec
test
mov
out
aas
cwtl
add
mov
stos
push
out
flds
aas
xchg
aad
mov
xchg
scas
sub
cmp
cltd
icebp
fiaddl
or
mov
or
fbld
jl
testb
adc
sub
adcl
in
mov
xchg
orb
jo
lods
je
pop
sbb
rorl
and
dec
xor
or
xchg
in
loope
cmpsl
sbb
fst
int3
adc
loop
add
inc
int3
loopne
or
sub
xor
sub
enter
xchg
aaa
je
dec
sti
xor
dec
stos
mov
pop
in
fsubrl
pushl
shlb
push
scas
dec
xchg
adc
push
pop
ret
adc
mov
cmp
sbb
sbb
cmp
leave
dec
mov
and
xor
bound
jmp
jmp
mov
cmp
faddp
out
cmp
mov
ret
loop
mov
cmp
mov
cli
inc
push
mov
arpl
aas
cmp
je
fidivrs
js
cli
insl
dec
pop
fidivs
push
jbe
mov
pop
pop
push
and
jns
int3
imul
negb
jmp
mov
jge
popf
std
jb
shll
push
sub
in
das
mov
icebp
outsb
jmp
out
pop
sar
lds
jnp
pusha
jnp
mov
mov
sub
es
adc
add
lcall
or
stos
out
mov
add
fiadds
cwtl
sbb
jmp
jmp
es
add
mov
cwtl
sahf
mov
pop
push
call
pop
les
rol
add
dec
data16
xchg
daa
dec
sbb
iret
sar
call
ljmp
icebp
sub
push
mov
addr16
xchg
push
push
nop
mov
pop
shl
std
fnsave
mov
sbb
xchg
xchg
mov
jbe
divsd
add
push
cltd
adc
inc
jmp
sbb
pop
xchg
push
cmp
fs
ss
addr16
jne
insb
in
es
xchg
add
out
sub
pop
cmp
loopne
pop
lds
push
xor
ljmp
mov
xchg
inc
cmp
xchg
test
lock
call
test
and
vpcmpeqd
ror
nop
push
mov
int3
jns
xchg
shll
ljmp
add
ret
xchg
xlat
arpl
inc
jno
stc
push
shlb
outsb
cmp
aam
mov
ficoms
sbbb
and
nop
mov
outsl
popa
in
mov
jp
mov
popf
mov
jbe
js
mov
xchg
jge
pop
arpl
shll
or
enter
cmp
pop
pop
jl
jle
push
test
push
add
mov
insb
mov
xchg
add
push
sbb
mov
xchg
lcall
push
stos
sub
xchg
shlb
insb
aam
mov
sbb
pushw
adc
and
xchg
aaa
icebp
clc
lea
jo
jmp
xchg
std
push
jns
pop
insl
shl
jl
mov
out
mov
rclb
xchg
xor
in
and
sub
or
push
jne
xchg
mov
mov
xlat
mov
and
lock
xor
mov
sub
xor
adc
and
push
scas
dec
or
cld
mov
mov
lods
inc
and
xor
ficompl
inc
jae
ret
push
pop
jne
or
mov
push
or
call
add
fcom
lods
cmp
xor
pop
pop
xchg
fidivs
xchg
nop
jge
scas
inc
loope
add
aas
pop
cmpb
in
mov
sarl
fldcw
fs
jno
mov
subl
cmp
mov
andl
cmp
loopne
jae
adc
jecxz
or
lret
or
lds
xor
arpl
out
in
clc
jmp
fmuls
and
lret
inc
mov
insl
cld
push
gs
daa
inc
xlat
out
and
fwait
push
sub
jbe
in
scas
daa
loopne
pop
negb
fisubrl
pop
or
sbbl
dec
adc
loop
mov
jg
jmp
adc
push
or
lds
add
or
mov
adc
out
scas
cs
enter
loope
out
sub
fisubrl
in
mov
dec
and
sarl
mov
mov
fiadds
nop
ret
enter
es
pop
dec
scas
cmp
pop
push
mov
push
dec
stos
loope
in
sbbb
pop
lods
mov
sbb
sbb
bnd
adc
out
add
incb
push
add
decl
bound
mov
push
jae
fsubr
pop
ja
lock
mov
mov
lret
mov
hlt
xor
pop
xchg
aam
ficomps
and
dec
push
add
add
sbb
inc
js
pop
push
mov
rclb
inc
cmc
je
xor
fnstsw
mov
mov
arpl
xchg
push
aas
iret
mov
sub
lds
lcall
out
sahf
inc
xchg
cmp
clc
push
xor
roll
jmp
add
xchg
add
out
jo
or
xchg
test
pop
cld
out
xchg
popf
jle
jns
movsb
mov
out
out
fwait
outsl
sbb
mov
dec
xlat
out
xchg
ret
rorl
add
and
push
jmp
or
lds
ja
ds
push
and
int3
add
mov
data16
nop
lea
sub
pop
push
movsl
loope
add
dec
clc
pop
xor
outsb
and
jb
mov
out
in
and
ds
icebp
pushf
push
lcall
sbb
and
adcl
and
xchg
pop
pop
movsl
pop
daa
mov
or
out
test
mov
cwtl
xchg
cmp
fwait
cld
shr
repz
das
add
jle,pn
and
insb
jae
ds
cmp
push
mov
sbb
ror
push
sbb
sbbb
mov
and
ficompl
pusha
cmpsl
and
cltd
addr16
add
pusha
adc
sbbb
sbb
outsb
sub
ret
sub
push
cli
ds
xchg
sbb
stos
and
mov
lock
inc
inc
movsl
push
push
add
jo
loop
ja
mov
clc
cmova
rclb
inc
and
inc
int
test
jl
and
push
ficomps
and
or
dec
xor
lret
repz
mov
mov
xchg
mov
pop
cmp
add
or
sti
or
nop
cmc
adc
fmulp
nop
daa
dec
call
push
fwait
add
sub
loope
test
hlt
or
sub
mov
xor
out
fistps
pop
ror
pushf
cmpsb
mov
and
fldl
in
rcll
jp
add
rcl
fistl
or
add
jne
or
aaa
jge
repnz
out
jno
ds
pop
icebp
lcall
dec
jnp
enter
mov
mov
dec
icebp
rcll
add
sbb
or
loope
push
dec
mov
loop
scas
pop
pop
pop
push
mov
mov
cmp
sbb
inc
and
adc
sbb
mov
subb
out
inc
inc
push
testl
lret
pushf
pop
lret
lds
pop
movsl
inc
cmp
mov
xor
or
rcr
aaa
mov
mov
mov
push
movsb
imul
and
xchg
mov
faddl
pop
push
and
mov
pop
sub
fistpll
lcall
pop
int
mov
ret
lods
aas
pop
mov
cld
mov
cld
ss
ja
jle
dec
fstl
fnstcw
sbb
sub
mov
into
and
daa
cmp
call
imull
roll
jne
adc
das
or
xor
xchg
cmpsb
mov
lea
pop
imull
mov
mov
and
or
inc
jnp
imull
faddl
mov
sbb
xchg
sbb
push
xchg
lret
xchg
jb
mov
ss
stc
add
mov
insl
and
push
arpl
scas
ss
adc
rcr
mov
pop
pop
xor
clc
xor
cmpsb
movsl
pop
mov
cltd
jp
dec
sti
xor
pop
pusha
cmc
imul
fwait
aas
pushf
inc
gs
lods
xchg
ds
sahf
dec
push
mov
push
jmp
cmpb
jle
push
arpl
sub
cmc
sti
xor
jo
ret
fstpt
adc
pop
or
inc
repnz
adc
dec
hlt
jmp
inc
inc
int
xorl
xor
int
aam
test
and
mov
shl
mov
mov
or
or
or
pushf
inc
add
cmp
add
dec
loop
mov
or
sub
sub
xchg
icebp
mov
popf
jb
roll
loope
xlat
and
push
test
int
inc
imul
push
jne
xor
gs
dec
xchg
mov
xor
pop
push
call
mov
daa
mov
mov
imul
in
rorl
add
jp
repz
sbb
out
fwait
cmpsl
xor
not
loopne
sub
in
mov
mov
ds
addl
rorb
std
dec
lock
arpl
xor
test
jmp
mov
sub
xchg
push
mov
shl
movsb
out
add
aad
xchg
or
insl
or
pop
ret
cmp
insl
daa
ja
add
or
mov
lods
pop
lds
stos
xlat
popa
push
mov
addr16
movsb
test
repz
push
inc
xchg
cmpsl
test
out
sbb
xlat
xlat
pop
hlt
stos
test
mov
xor
mov
add
adc
jmp
or
popa
jmp
cltd
lahf
mov
enter
cld
xchg
sub
jbe,pn
in
sbb
pop
sub
call
mov
fdivrs
mov
iret
push
or
lret
adc
sub
pop
pop
cltd
loope
jp
and
dec
pop
push
sbb
std
test
push
cltd
jnp
xchg
in
test
adc
cmpsb
jns
mov
stos
arpl
push
push
push
aad
xorb
ss
fdiv
jge
jns
pop
in
in
fsubrp
sbb
xchg
ds
aad
cmc
flds
mov
in
ljmp
andb
shll
iret
push
loop
hlt
sbb
fs
jbe
mov
out
add
jmp
das
pop
movsb
push
es
je
add
and
cmc
push
inc
adc
push
xchg
movsb
popl
fiadds
ds
sub
mov
lods
lock
cmp
mov
or
push
rclb
mov
mov
das
sub
dec
pop
push
arpl
in
adc
push
push
dec
jge
movl
inc
pop
dec
jbe
pop
inc
cmpb
add
scas
nop
sub
insl
and
xchg
lcall
inc
sbb
sub
jnp
mov
stc
jmp
in
icebp
add
pop
jl
sub
adc
out
lods
inc
ret
pop
cli
dec
lcall
add
jle
push
loopne
sbb
inc
xchg
lret
cmpsl
lret
and
sbb
mov
popl
cwtl
sahf
mov
inc
popa
ret
icebp
add
je
daa
push
pusha
cmp
mov
mov
rcrb
mov
movsl
sub
adc
mov
movsb
subl
imul
lret
inc
xchg
prefetchw
adc
pop
cld
insb
push
sarb
int
lea
sbb
adc
lcall
and
orb
imul
in
xor
dec
dec
nop
adc
movsl
outsb
shrl
movsl
enter
fsubr
sub
jb
in
outsl
push
test
add
icebp
xlat
xor
fucomi
jmp
pop
int
fsubr
popa
cmp
rorb
out
xor
or
test
mov
lahf
imul
mov
xchg
and
lahf
enter
pmuludq
jae
jle
pop
lea
mov
daa
orb
mov
lds
mov
leave
out
xchg
cld
xchg
mov
jl
std
loope
fsubrl
sub
cltd
movsl
push
jno
xchg
lret
and
pushf
leave
int
jge
cld
insb
xchg
int3
lds
mov
add
sbb
push
pop
mov
scas
jl
in
into
jnp
dec
pop
jbe
testb
lods
in
mov
mov
add
mov
int3
sahf
jne
inc
mov
fs
ret
sub
insl
shl
inc
punpcklwd
sub
in
dec
jno
mov
jae
imul
mov
int3
or
stc
push
sbb
in
in
push
call
leave
lret
pop
lret
jmp
ja
sbb
fstpl
subb
xchg
push
js
cld
lcall
inc
sahf
xchg
xchg
mov
out
xlat
and
fidivl
xchg
pop
hlt
scas
icebp
adc
pop
push
mov
and
and
cmc
sub
xor
adcb
ss
add
leave
popf
mov
andb
rorb
xchg
jmp
push
and
dec
scas
out
lds
inc
fdivp
sbb
into
push
pop
dec
in
xor
dec
cvtdq2ps
rorl
cmpsb
push
rcrl
loopne
int
xor
pop
lcall
ret
inc
std
xchg
lret
adc
orb
iret
std
cli
int
mov
ret
jns
sbb
out
xor
mov
out
ss
cmp
in
adc
xor
jmp
or
jle
xchg
lahf
decl
fs
int
sub
iret
add
imul
iret
sub
adc
insl
addr16
push
adc
out
sub
add
out
mov
push
mov
jae
inc
add
icebp
push
ja
mov
sub
int
icebp
cmpsb
mov
int
addr16
jl
enter
xchg
mov
movsl
lods
popf
arpl
stos
add
test
fnstsw
mov
pushf
jno
decl
repz
imul
dec
or
mov
add
push
ljmp
popf
cmp
or
xchg
pop
pop
movsl
out
int3
sub
aas
jnp
mov
ja
or
out
cmp
xor
xchg
push
arpl
and
adc
shrl
and
dec
stos
pop
adc
mov
mov
out
insb
popa
daa
hlt
lret
pop
arpl
in
xlat
icebp
pop
js
les
in
sub
aaa
push
loopne
sbb
mov
fnstcw
push
xor
sub
add
xor
icebp
push
sbb
push
divl
fmul
scas
sub
sbb
push
fistl
and
ljmpw
addb
aas
in
mov
mov
lods
xchg
xor
and
fndisi(8087
pop
pusha
sbb
cmc
xor
fucomi
and
sub
inc
push
jmp
mov
ret
cwtl
dec
sarb
shl
dec
out
int
cli
dec
cli
mov
jge
or
inc
inc
mov
mov
inc
cmp
sbb
or
inc
mov
fstl
cwtl
mov
loopne
arpl
pop
xchg
push
mov
fistl
dec
lds
lds
and
sbb
movsl
cmp
je
scas
adc
push
test
aam
jns
mov
test
sub
out
pop
inc
pop
test
repnz
testb
fucom
sub
insb
dec
push
inc
pop
jg
pop
mov
push
fdivrl
clc
push
ret
pop
mov
fisubrl
push
or
daa
dec
out
stos
mov
sub
push
es
or
repz
jmp
scas
shr
add
xor
rcrl
orl
scas
and
adc
fisubl
out
push
and
jbe
mov
sub
pop
pop
and
lret
mov
std
in
mov
movsl
outsb
mov
pop
adc
cli
jb
test
js
jle
clc
adc
sahf
dec
adc
add
add
shlb
in
ja
add
push
testb
repz
out
fwait
sub
dec
push
mov
lret
xchg
fildl
cmp
adc
mov
fdiv
jbe
cmp
add
mov
pushf
insb
sbb
arpl
push
dec
fnstcw
pusha
cwtl
inc
test
popf
std
sti
push
and
jp
addr16
mov
in
dec
mov
xor
dec
xor
loop
mov
fcomps
arpl
repnz
mov
lock
stos
in
xor
mov
loope
pop
xchg
imul
loopne
out
or
sbb
out
sub
jle
nop
cmpsl
out
sbb
sbb
pop
cltd
into
mov
dec
cmp
gs
in
lea
mov
mov
lret
iret
cmp
scas
xchg
adc
imul
or
push
lcall
sarb
sub
pop
notb
out
and
sub
sbb
popl
xor
scas
dec
sahf
std
jle
lahf
das
shrb
or
inc
das
xor
jne
push
pop
cli
dec
sbb
imul
addr16
and
pop
imul
mov
dec
in
lock
cmp
adcb
jo
push
pushf
mov
dec
testb
ret
mov
xor
add
add
sub
pop
insb
int3
lahf
jne
dec
push
pop
imul
scas
shlb
jno
inc
testb
mov
adc
pop
cmpsb
aad
push
inc
mov
andl
cmp
test
xor
xchg
adc
icebp
scas
push
mov
jmp
cmpsl
sti
push
clc
or
ret
cltd
nop
mov
int3
cmc
jno
repz
inc
test
in
fbld
push
jb
cmp
dec
jne
lds
lret
and
pop
stc
sbb
repnz
out
inc
movsb
xlat
inc
inc
jae
jns
lret
sbb
icebp
cld
push
mov
jle
mov
xor
mov
push
in
sbb
test
test
sub
jbe
cld
popa
jb
jno
mov
sub
addl
mov
gs
cmpsb
movzbl
add
iret
mov
xchg
mov
idivl
loop
mov
cwtl
hlt
jle
mov
ds
aas
jg
popf
test
mov
mov
and
xor
sti
in
sbb
push
mov
iret
or
or
clc
rclb
lods
xor
je
or
add
int
fiadds
or
add
lds
lret
int3
testb
clc
nop
and
daa
or
popa
fisubrs
push
push
push
xchg
out
negl
jp
mov
sbb
fstl
jo
popf
mov
mov
and
xlat
and
sbb
mov
mov
or
sbb
idivb
in
jne
cmp
push
lea
sbb
inc
fs
pop
xchg
adc
xor
and
jle
mov
cmp
xor
jge
jl
xor
push
adc
xor
aas
cltd
adc
mov
movsb
decb
xchg
ljmp
lahf
or
into
lea
setnp
cltd
repnz
mov
push
lds
movsl
pop
xor
mov
mov
push
cmpsl
movl
mov
inc
cmpsl
mov
in
bound
xor
pop
mov
in
sbb
iret
push
fldt
cmp
frstor
mov
mov
movsb
mov
enter
xorl
daa
push
sbb
or
les
pop
loope
pop
imulb
cmpsb
aad
and
in
sub
ds
hlt
fcomps
sahf
mov
bswap
movsl
scas
mov
cmp
and
mov
mov
or
outsl
call
mov
mov
cltd
cmp
pop
adc
ret
movsl
aam
rcll
cmpb
sbb
push
jnp
aam
push
pop
mov
or
sub
lret
mov
xchg
adc
cmp
mov
cld
adc
xchg
push
mov
adc
negl
fcmovb
insl
movb
lcall
lock
outsb
idivl
adc
dec
imul
jmp
arpl
fwait
xchg
jo
inc
mov
sahf
call
aad
xor
push
in
cmp
out
rclb
add
fildll
mov
repz
loop
fidivs
imul
stos
outsb
int
enter
and
daa
loope
push
push
push
and
jnp
adc
mov
cmp
sbb
xor
enter
or
orl
jmp
mov
mov
test
pop
icebp
scas
scas
ret
insb
lcall
aam
dec
lcall
mov
adc
push
mov
incb
pop
mov
sahf
mov
jo
shll
fdivl
jl
push
aas
into
sbb
leave
push
xor
jae
xlat
jo
fidivrs
mov
or
cmp
ret
cmc
es
xchg
sbb
ret
inc
leave
push
int3
xor
jns
dec
je
hlt
jl
movsb
outsb
inc
push
stc
lcall
stos
jne
adc
rclb
or
in
dec
sbb
xor
jo
pop
inc
hlt
sub
ret
testl
pushf
xchg
push
lock
icebp
xchg
sub
outsw
ss
adc
imul
or
adc
sbb
push
mov
adc
aas
cmp
or
cmp
pop
movsl
cmp
das
es
push
lret
hlt
and
cmpsb
stc
dec
cmpsl
ljmp
cmp
mov
jl
int
pop
pusha
ljmp
and
es
mov
scas
fcompl
sar
into
xchg
push
das
clc
repnz
and
xor
cmp
push
pop
mov
in
mov
xchg
mov
mov
jns
xor
pmaxsw
add
fidivl
and
cmc
fmul
pop
in
icebp
clc
popa
loopne
or
rcr
mov
loope
cmpl
stos
orb
jle
dec
mov
mov
push
jmp
inc
adcb
jecxz
rcrb
mov
jl
shrl
loopne
clc
pop
cmp
cmc
movsl
sahf
pusha
lahf
and
mov
push
es
fwait
cmp
push
mov
cmp
push
sahf
mov
jg
daa
aas
inc
dec
cmp
sarb
jnp
sub
rcrl
push
in
xchg
into
xor
mov
test
test
jo
adc
xchg
jbe
ja
popf
mov
jae
les
loop
pop
aad
andb
cli
dec
and
mov
mov
mulb
icebp
cmp
fstps
ss
inc
cs
dec
scas
fwait
sbb
cmp
xor
stos
adc
dec
cmp
push
les
push
or
orb
mov
out
cmpsb
cld
test
mov
jp
call
mov
jbe
popa
or
out
mov
not
mov
inc
sbb
xchg
lock
repz
repnz
icebp
pop
sar
sub
sbb
popf
jecxz
out
cmc
std
jae
add
push
inc
inc
mov
and
xor
les
cwtl
shll
dec
sbb
out
je
jbe
sub
in
mov
dec
sarb
mov
std
scas
xchg
inc
test
lods
mov
jle
and
jo
pop
push
hlt
xor
adc
ds
push
sti
dec
out
push
sbb
push
fstps
or
ret
jg
mov
lcall
adc
cltd
inc
mov
xchg
push
sub
sbb
outsl
leave
xor
sub
adc
mov
pop
scas
mov
jge
inc
daa
lods
int
es
imul
adc
in
sbb
cmp
imul
add
push
xor
sub
loopne
mov
ljmp
mov
dec
add
mov
sub
js
or
pop
hlt
dec
loopne
push
neg
and
jne
fdivs
cmp
insb
cli
mov
jbe
incb
push
jo
or
jns
scas
adc
inc
push
jb
mov
les
add
sarl
div
lea
pop
xchg
out
sub
xchg
lahf
push
pop
cmp
jp
lahf
xchg
out
test
mov
dec
imul
pusha
and
idivb
mov
or
fld
inc
cltd
sbb
push
pop
cmp
jne
mov
mov
mov
jmp
mov
cmp
jne
push
pushl
pushl
pushl
pushl
call
pop
pop
leave
ret
push
mov
push
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
push
push
call
cmpl
jne
xor
add
inc
mov
jmp
xor
push
movl
xor
xor
adc
movl
neg
mov
mov
adc
push
mov
mov
mov
sub
xor
mov
movl
cmpl
je
cmpl
jne
push
push
call
xor
or
dec
mov
jmp
xor
xor
mov
add
add
imul
mov
cmp
jne
mov
mov
xor
xor
add
add
imul
jmp
mov
mov
mov
mov
mov
xor
xor
add
add
imul
mov
cmp
mov
je
xor
add
mov
imul
add
mov
mov
pop
leave
ret
push
mov
push
andl
mov
inc
mov
cmpl
jne
push
pushl
pushl
call
cmpl
jne
xor
or
inc
mov
cmpl
jb
orl
movl
mov
mov
sbb
mov
mov
mov
sub
mov
xor
add
mov
mov
xor
push
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
pop
leave
ret
push
mov
sub
or
mov
mov
xor
mov
andl
add
movzwl
andl
mov
inc
mov
cmpl
jne
pushl
push
pushl
call
cmpl
jne
xor
add
inc
mov
cmpl
jb
mov
movb
sub
lea
andl
xor
or
inc
mov
cmpl
jne
call
cmpl
jb
mov
or
mov
sub
mov
xor
sbbl
sub
addl
mov
sbb
movl
neg
push
and
movl
not
mov
andl
mov
inc
mov
cmpl
jne
call
cmpl
jne
mov
inc
mov
cmpl
jb
or
push
mov
xor
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
push
pushl
push
push
pushl
call
jmp
xor
mov
push
adcl
add
jmp
movl
mov
mov
inc
movl
cmp
movl
jb
mov
adc
mov
addl
xor
orl
add
movl
jmp
mov
adc
mov
mov
neg
mov
movl
xor
xorl
mov
sbbl
add
addl
movzwl
subl
mov
mov
addl
movzwl
xor
andl
add
mov
movl
mov
inc
mov
mov
movl
cmp
movl
jne
mov
add
mov
sbbl
xor
andl
add
jmp
lods
mov
jae
sbbb
xor
scas
jp
or
jp
xchg
pop
cwtl
mov
dec
mov
add
mov
pop
fmul
push
fldenv
enter
add
hlt
cmpsl
sti
add
inc
mov
and
clc
sahf
pop
push
mov
cmp
sbb
sbb
mov
inc
xchg
std
leave
sarl
shr
pop
jb
addr16
stos
arpl
dec
scas
sub
jb
lods
sub
mov
inc
and
mov
adc
mov
ja
mov
movsb
aas
push
sbb
aad
dec
inc
pop
es
push
les
out
lret
ret
mov
shlb
jne
sbb
add
and
enter
repz
cmp
push
mov
orl
cmpsb
mov
or
ret
add
gs
xor
jno
xor
push
and
shll
mov
jns
pop
mov
inc
adc
arpl
lea
aaa
sbb
cwtl
stos
arpl
lods
insl
pop
dec
pop
lret
jns
leave
pop
ljmp
xchg
out
int3
pop
inc
ret
pop
jg
loop
mov
sub
divl
and
sbb
in
xor
cltd
fsubrl
sub
cs
adc
add
jle
ror
push
pusha
mov
call
test
mov
xchg
xchg
dec
pop
das
nop
xchg
sub
dec
rolb
jne
imul
pop
in
mov
cmp
call
adc
xchg
dec
cmp
leave
sub
movsl
test
sub
mov
jb
rcll
pop
popa
mov
and
jecxz
mov
mov
mov
cltd
push
push
lret
bound
pop
lret
cmp
pop
je
fsubrl
aad
ret
cmp
rcrb
xchg
jp
das
or
cwtl
dec
cltd
sbb
pushf
cmp
ficomps
andnps
or
out
iret
xchg
dec
mov
sbb
and
and
es
stos
mov
xor
mov
pushf
insl
mov
xlat
mov
cmp
outsb
movsl
out
xor
cmp
cs
add
call
loopne
pop
in
leave
aad
imul
in
nop
imul
or
in
lret
andb
loopne
outsl
repz
and
cmp
mov
lods
aas
mov
xor
insb
popf
ljmp
and
test
cmp
xchg
dec
iret
ret
les
or
ja
xchg
push
out
lods
or
lret
jmp
and
dec
push
dec
push
mov
jbe
loope
imul
add
outsb
and
popl
sahf
mov
push
mov
sbb
mov
pop
pop
dec
es
xor
mov
cmpb
xchg
xchg
xchg
in
xchg
movsl
mov
fsub
test
sahf
pop
sbb
xchg
shrb
and
mov
push
rcrb
inc
aam
push
fbld
mov
sti
xor
or
mov
inc
push
sub
outsb
ss
cltd
and
cs
fwait
or
js
dec
cld
bound
jge
iret
aad
pop
test
popa
pop
sub
adc
popf
and
cld
xchg
cmp
sbb
pop
fwait
in
loop
scas
imul
mov
stos
mov
mov
and
icebp
mov
push
jne
add
sbb
in
sarl
lods
cs
mov
scas
xor
jae
mov
lret
mov
sbb
pop
or
add
in
mov
or
mov
lahf
jp
call
sub
push
and
pop
dec
adc
and
out
shrb
and
inc
add
push
mov
stos
ss
movsl
xchg
xlat
jo
sub
out
hlt
or
in
mov
cmp
fistpll
mov
leave
sub
or
push
or
es
test
pop
jecxz
push
dec
add
aaa
jmp
add
data16
pop
xorl
add
mull
outsb
lea
mov
enter
sahf
mov
mov
popf
testl
lea
stos
inc
dec
sti
xor
mov
jle
mov
mov
nop
andb
loop
addr16
inc
adc
fmull
or
cli
data16
rcrb
sub
insb
xor
filds
sbb
xlat
popa
sbb
cmp
mov
mov
jecxz
aam
jne
outsl
jae
and
shrl
cmc
mov
add
stc
dec
cltd
mov
or
add
aam
mov
cmc
sbb
dec
jle
dec
aaa
xchg
imul
or
std
push
daa
and
lods
mov
mov
dec
subl
adc
xorl
es
add
xchg
jge
call
in
mov
fwait
sti
mov
cmp
test
out
pop
ljmp
loopne
add
imul
cmp
shl
jae
xchg
hlt
movsl
pop
xchg
imul
xchg
inc
or
mov
jl
lahf
in
dec
icebp
sbb
sub
sub
out
pushf
nop
repnz
inc
cmp
pushf
sarl
sbbb
xlat
jne
push
nop
and
nop
mov
xchg
adc
mov
rcll
dec
jno
push
cli
jecxz
pop
sub
add
pop
stc
inc
scas
lret
out
sbb
or
mov
gs
test
out
out
push
ja
pop
xor
shrl
mov
fmuls
data16
jno
mov
insb
mov
inc
xor
or
popf
int
nop
outsb
sub
out
imulb
inc
pop
jl
lret
push
pop
or
in
out
push
lods
bound
or
dec
inc
rcrl
fimull
lea
insl
test
xor
ficoml
pusha
sarb
imul
int3
push
lods
sub
ret
leave
push
iret
sbbb
adc
cli
pusha
dec
push
std
add
std
jmp
mov
lret
mov
iret
cmp
insb
mov
jle
andb
push
jg
jecxz
dec
xor
xchg
mov
dec
addb
pushf
shlb
pushl
test
inc
xor
icebp
arpl
xchg
dec
mov
notl
push
or
mov
sub
mov
xchg
cmpsb
mov
stc
push
mov
sbb
sub
sbb
sub
cmp
gs
adc
inc
enter
dec
jbe
and
mov
pop
loopne
mov
push
pop
pop
and
mov
sbb
cmp
call
ds
sub
adc
pop
in
xchg
orl
jle
lahf
repnz
pop
mov
dec
and
std
mov
mov
pushf
mov
dec
sbb
sub
std
xor
sub
int3
test
cmp
sub
sbb
out
fmull
lods
mov
sub
cmp
ss
cld
dec
pop
mov
dec
sbb
arpl
ret
dec
fiaddl
sbb
sahf
fidivl
xchg
and
lcall
dec
lds
shrb
fwait
mov
and
rclb
xchg
adc
jb
cwtl
xlat
dec
lret
jp
pop
test
cmp
lock
push
sub
add
mov
sar
dec
cmc
in
cwtl
jl
jmp
cmp
sahf
in
mov
psubb
pop
mov
or
and
jl
stos
mov
cli
sarl
mov
lret
filds
jae
mov
push
stc
sbb
sbb
ret
ret
cld
call
shrl
push
jb
insl
out
or
in
fidivl
pop
movl
insl
std
add
adcl
out
popf
push
adc
lcall
lcall
rcr
sub
out
adc
mov
aas
cmp
xchg
les
es
and
inc
sbb
jg
call
add
loop
mov
dec
mov
sahf
mov
cmc
fwait
inc
shrb
and
adc
insb
cmp
inc
sti
adc
inc
mov
dec
mov
xor
cmpsb
into
cmp
push
addb
push
mov
push
xchg
arpl
inc
aad
dec
scas
repz
push
pop
cmp
or
sbbl
fwait
mov
mov
pop
jns
push
in
ja
lret
lods
leave
fistpll
je
xchg
lods
fldenv
jg
lods
mov
xchg
xor
mov
mov
cmp
clc
inc
adc
jo
rclb
out
lock
cli
shl
movsb
xchg
pop
rcrb
in
mov
idiv
and
inc
push
inc
fnstenv
fsubrl
rcr
je
cltd
lret
movsb
sbb
sub
testl
mov
mov
sub
adc
mov
push
pop
loope
cli
in
and
sbb
cli
adcb
mov
ficoml
xchg
xchg
ds
xchg
xchg
xor
xchg
xchg
pop
or
xor
mov
jbe
add
aam
mov
repz
cmp
rclb
mov
ret
out
push
sbb
pop
sub
and
and
jle
nop
mov
jge
xor
dec
cmpsl
insl
xchg
inc
popf
push
cwtl
mov
xchg
cmp
cmpsw
jecxz
push
sarl
pop
stos
xchg
fmuls
and
fwait
sub
popf
sbb
repnz
stos
sbb
popa
xchg
shlb
mov
cmp
roll
ret
pop
cltd
jg
push
inc
xor
cmp
outsl
mov
icebp
sahf
dec
jnp
call
adc
mov
or
out
bound
sbb
popf
testl
xchg
insb
pop
or
stc
repnz
leave
jb
loop
push
je
adc
pop
nop
pop
ja
pop
repz
add
jne
insl
push
insb
xchg
int3
dec
cmp
insl
jmp
daa
aaa
cmp
mov
fs
mov
aaa
imul
mov
xorb
jns
imul
iret
inc
fcomps
out
in
popa
push
jp
jmp
das
popf
xchg
in
mov
push
lahf
fs
inc
push
push
add
xlat
jnp
ficompl
xor
cmp
out
sahf
icebp
lods
adc
xchg
mov
jne
mov
nop
es
push
or
outsl
scas
rcl
sti
push
orl
pop
pop
outsl
shll
xor
pop
lock
rclb
pop
std
mov
pop
sbb
adc
cwtl
push
jle
push
int3
pop
mov
imull
jbe
mov
pop
sbb
in
outsb
xor
fisubrs
jge
jmp
mov
dec
cmc
sub
stc
push
xchg
inc
pop
cmp
fnsave
jecxz
sbb
mov
int3
and
and
jmp
rolb
mov
inc
cmc
imul
mov
test
push
xacquire
pop
and
idivb
adc
or
fnsave
je
push
adc
sub
sbb
loopne
fstps
ret
xchg
add
xor
or
aas
cmp
lret
lock
cmp
mov
adc
in
mov
imul
adc
test
out
test
test
xlat
sahf
cmpsl
sbb
dec
xchg
lds
inc
mov
mov
sbb
xchg
fnstsw
push
inc
push
fsubrl
add
ret
mov
mov
ja
adc
je
enter
push
push
aam
mov
add
inc
and
xchg
lock
mov
shr
repz
ret
daa
add
lock
adc
dec
and
jecxz
or
mov
or
out
in
test
sbb
sub
adc
jecxz
adc
js
mov
int3
add
add
and
movsl
jbe
or
jg
es
je
out
push
add
lods
sub
mov
and
xor
das
inc
mov
pop
insb
xchg
fidivrs
stos
jle
cli
jle
jmp
lcall
dec
xchg
sub
jg
mov
insl
mov
add
outsl
dec
xchg
xchg
jp
mov
add
gs
imul
movsb
fdivl
faddl
sub
in
sbb
mov
mov
ss
push
fstpl
sbb
loope
nop
dec
jae
push
xchg
pop
sbb
lcallw
mov
xor
rcr
ficoms
xor
inc
sub
pop
cwtl
stos
jmp
fbld
inc
cmp
mov
jne
mov
js
icebp
sbb
scas
lret
adc
imul
insl
add
xor
mov
xchg
xor
push
xor
test
inc
fwait
sub
insb
je
hlt
dec
rcl
cli
ds
jle
sar
dec
sbb
pop
inc
sbb
cmp
stc
cltd
pop
mov
and
addr16
dec
bound
pop
in
fidivrs
imul
icebp
imul
outsl
xchg
ljmp
nop
push
lock
scas
pusha
pop
sub
subl
std
ds
rolb
xor
sahf
call
bound
and
mov
mov
and
dec
rcll
fcomps
std
push
xchg
sbb
dec
clc
aaa
test
lds
mov
test
xor
je
or
aam
mov
iret
pop
sbb
ret
mov
dec
cmp
fcompl
rorl
cwtl
sub
movl
add
mov
sbb
pop
sbb
mov
hlt
sub
jno
lods
out
cmp
mov
addb
xor
fiaddl
inc
jecxz
mov
movsl
leave
dec
pop
loopne
mov
add
inc
push
bound
mov
jns
bound
repz
lods
lret
cmp
fnsave
lods
jae
out
inc
setle
icebp
fidivs
int3
push
or
jl
in
cltd
inc
pop
add
out
sti
jne
stos
fwait
pop
decb
jmp
cmp
mov
push
fsubp
jmp
cld
sbb
pop
cli
fwait
inc
cld
dec
adc
cmp
lea
idivl
dec
mov
sbb
mov
lea
sahf
les
jp
jl
in
loop
pop
mov
adc
jecxz
outsb
arpl
dec
jb
mov
pop
movsl
push
aas
test
test
push
testb
icebp
loop
dec
lea
les
in
mov
mov
pop
test
cld
xchg
shll
sub
mov
jns
fstpl
xchg
xor
int3
pop
jne
sub
jl
cltd
inc
xor
xchg
test
add
pop
inc
xor
pop
lock
jnp
scas
data16
scas
xchg
adc
xchg
mov
add
pushl
jg
sarb
in
push
push
inc
mov
sub
inc
in
adc
insl
cmp
sbb
xchg
rorl
xchg
insl
inc
xor
pop
inc
jge
lcall
out
dec
xchg
fiadds
inc
daa
cld
pop
push
cmc
icebp
out
pop
or
cmp
mov
lret
xchg
dec
dec
adc
fstpl
cmc
and
pushf
lret
out
cs
cmpsl
add
cmpsl
mov
stos
ss
imul
cld
outsb
push
lods
cmc
nop
dec
pusha
arpl
lods
pop
mov
movzbl
pop
fildll
pop
xchg
data16
add
addb
pop
ljmp
into
ror
pop
sub
lods
lahf
clc
push
iret
fdivl
pushf
negb
mov
or
mov
inc
loop
add
dec
outsl
xlat
adcl
lea
cwtl
inc
and
or
lahf
adcl
or
xchg
sbb
sti
jl
push
testb
push
or
push
push
push
push
cmp
pushf
push
xor
inc
ret
popl
push
imul
jge
sub
mov
js
movsb
dec
dec
mov
daa
adc
and
xchg
fldenv
sub
dec
inc
cld
in
fimuls
jb
push
sbb
mov
in
das
das
lahf
xor
pop
icebp
sbb
out
in
or
imul
rorb
push
arpl
push
int
shlb
mov
cmpsb
cmpsl
xchg
mov
imul
leave
or
femms
test
adc
pop
ret
subb
lods
loopne
in
shll
call
mov
mov
in
jg
jle
jnp
pop
fwait
and
jne
test
add
push
mov
inc
rcll
jmp
ljmp
test
in
lock
jnp
jmp
jns
sub
lahf
arpl
jo
scas
adc
push
inc
push
cmpsl
inc
lcall
stos
insb
rcrl
sti
sbb
pop
push
fcompl
adc
add
xchg
dec
ret
cmp
iret
arpl
jne
inc
push
mov
sub
pop
sub
cmp
mov
adc
push
dec
scas
push
inc
aaa
jle
fsubr
fucom
rcrb
popf
int3
mov
sub
xchg
shll
dec
mov
in
es
jb
jg
sbbb
xchg
aad
aaa
repz
push
or
les
out
xor
and
icebp
jp
cmp
fstl
adc
lock
call
push
jl
jp
lcall
imul
pusha
mov
lods
mov
mov
add
shrl
mov
inc
frstor
sbb
push
popa
cli
and
sub
cmp
fwait
icebp
call
push
dec
jno
data16
imul
cli
out
mov
ret
mov
dec
sahf
jle
sub
stos
mov
sub
inc
or
repz
bound
pushf
mov
in
rol
jl
sbb
enter
inc
dec
shll
ret
call
in
add
jg
imul
jno
cltd
jle
fldenv
call
jmp
inc
lods
mov
jp
or
stos
repnz
fisubs
mov
cltd
sub
inc
add
popf
je
mov
xor
dec
jae
inc
push
mov
leave
bound
rorb
dec
loopne
xchg
fs
fs
xchg
call
jl
mov
loope
lret
scas
fs
rolb
xor
pop
jle
dec
pop
cs
daa
movsl
mov
jg
cmp
sbb
adc
arpl
aad
inc
fs
cmp
or
or
aaa
mov
dec
mov
xchg
or
shl
shll
push
cld
dec
pop
pop
pop
pop
iret
aaa
pop
push
push
test
mov
mov
and
aaa
addl
sti
mov
mov
add
sub
into
jns
pop
pop
push
pop
loope
jb
pop
test
mov
add
or
mov
xlat
mov
xor
lcall
mov
ds
cmc
xchg
mov
ror
xchg
scas
ljmp
cmpb
push
fnstcw
idivl
pushf
mov
mov
pop
fcmove
sbb
ss
and
xchg
test
sarb
clc
mov
and
test
ss
inc
or
out
out
and
xor
dec
imul
push
loope
dec
sub
insb
scas
ds
mov
in
cmc
pop
jl
adc
imul
fstps
subl
adc
mov
cli
xlat
or
rcrl
fdivl
stc
push
int3
inc
js
out
movups
rcll
imul
add
mov
push
dec
xchg
lds
pop
out
fstpl
push
jecxz
loope
sti
push
sub
in
add
out
inc
xchg
mov
addr16
gs
xchg
push
test
pop
popl
addb
inc
int
jae
out
push
into
sbbl
arpl
sub
out
mov
ret
or
sbb
popf
aam
in
and
rcl
dec
mov
dec
add
sub
adc
rcrb
sub
in
add
addr16
adc
sbb
dec
outsb
add
daa
push
sub
insl
stc
loope
scas
adc
mov
cwtl
loopne
jno
imul
pop
fwait
mov
addl
out
insl
rorl
xchg
push
dec
xchg
add
adc
hlt
jbe
mov
push
xchg
jbe
aam
iret
arpl
loopne
jno
push
or
push
les
cmp
or
test
rolb
inc
push
jmp
fwait
sub
dec
cwtl
adc
in
aam
or
sbb
out
pop
loope
jl
and
add
sub
loopne
mov
adc
pop
call
cmp
in
js
jnp
cli
mov
insb
xchg
pop
dec
jnp
jne
fnsave
xchg
pop
mov
jae
leave
dec
mov
mov
adc
jne
xchg
xchg
into
or
ret
push
jmp
out
sub
cmp
push
movsl
mov
fnsave
mov
int
ret
adc
lret
cmc
mov
nop
fucomi
push
cmp
in
insb
sahf
imul
fsubp
pop
jle
adc
jae
mov
loopne
ja
and
sub
mov
adc
xchg
add
push
pushf
imul
notl
sub
movsl
jl
mov
or
sbb
sbb
stos
add
out
mov
in
xchg
sub
xchg
dec
mov
insb
fs
dec
shll
mov
sbbl
cmp
pusha
inc
repnz
mov
dec
data16
pop
sbb
push
add
jecxz
in
imul
push
cmp
and
add
adc
mov
inc
sbb
xlat
scas
stos
in
test
jge
movsl
xchg
fisttps
negl
stc
rcrl
sub
loop
push
aam
in
and
fyl2xp1
pop
sbb
loopne
movsl
cmp
dec
push
stos
fcmovb
inc
fcoml
testl
push
fsubs
xchg
inc
xor
jle
xlat
call
sbb
dec
fdivl
xchg
cmp
xorb
repz
test
sbb
jne
jnp
cmpsb
dec
dec
js
stos
or
es
in
inc
sub
mov
xchg
test
xorb
mov
sbb
cmc
mov
jg
pop
and
pop
popl
jno
lods
sbb
pop
int
scas
arpl
mov
js
out
out
imul
pop
les
fstpl
movsb
mov
in
test
repnz
xor
sbbl
dec
add
push
aam
cmc
emms
or
xlat
scas
fs
mov
outsb
in
pushf
subb
mov
cwtl
les
cltd
jp
test
int
pop
shll
lret
push
les
dec
inc
lock
popf
pop
aas
addr16
and
lret
test
dec
lahf
xlat
arpl
sub
cltd
xlat
aam
pmaxub
stos
pop
jae
sbb
push
dec
stos
cmp
js
push
imul
mov
push
mov
movsl
mov
xor
jns
es
or
xchg
fsub
sub
inc
lahf
cmpsb
jb
xor
shrl
dec
or
sbb
int3
cs
imul
xchg
xor
xchg
pop
mov
add
movsl
jae
push
add
out
inc
xor
and
jne
sub
rclb
xor
lret
test
int3
mov
ret
adc
xor
repnz
int3
jns
jno
mov
jmp
scas
jo
push
mov
jle
dec
addb
mov
sahf
mov
xchg
fwait
push
jae
fcmovu
stos
push
mov
or
adc
je
cld
in
pop
mov
pop
scas
lea
push
fcomps
scas
lahf
push
push
xchg
fdivr
aaa
test
mov
cmp
mov
jne
jmp
int
inc
sub
dec
pop
ret
jecxz
sub
inc
ret
out
mov
push
jne
or
mov
cmp
xchg
fs
sbb
sub
lea
sti
dec
dec
and
sbb
jle
in
mov
paddsb
fs
popa
mov
dec
js
and
xor
popf
mov
mov
dec
xchg
mov
mov
mov
adc
mov
in
xor
sbb
xor
out
fs
cwtl
aam
in
orb
gs
cld
in
loopne
push
insb
or
jge
dec
lcall
lcall
mov
outsb
mov
fs
pushf
inc
sahf
pop
inc
jns
lods
stc
out
and
push
push
adc
mov
jno
cmp
rolb
lcall
xchg
inc
mov
in
js
sti
or
and
sarb
inc
adc
aas
inc
popa
insl
jbe
daa
insb
insb
inc
addl
xor
and
lcall
adc
mov
push
dec
popl
xor
outsl
or
lret
outsl
imul
jae
inc
xchg
out
and
sbb
fwait
int
add
imul
sbb
test
stos
sahf
mov
xchg
add
movb
inc
ja
inc
nop
mov
jmp
aad
push
popa
jnp
aaa
movsb
out
hlt
and
adc
push
mov
pop
ja
pop
ret
jb
xlat
rcll
mov
push
daa
xor
movl
test
lods
loop
add
and
dec
sarb
xchg
cmp
jo
dec
fistl
fdivs
dec
mov
cmp
cmp
cwtl
or
rcll
push
sbb
or
jmp
lods
roll
xchg
ja
loope
addb
xchg
jb
js
or
out
lret
enter
sub
xchg
fldenv
xor
sbb
xor
adc
inc
cmp
out
dec
jmp
rclb
notb
mov
pop
daa
int
cmp
mov
movsl
aaa
shll
movsb
cmp
xchg
jnp
out
mov
fisttpll
push
push
insl
jns
xor
shll
lcall
pop
pop
adc
popf
out
xor
and
adc
aam
and
inc
jle
mov
out
leave
jno
lods
addr16
mov
je
mov
push
cltd
push
xchg
xchg
jae
lret
pop
push
mov
sub
jg
roll
cltd
aam
adc
fwait
inc
mov
stos
sbb
outsl
mov
stc
and
jo
sub
daa
xor
enter
jecxz
sub
lods
outsb
mov
test
mov
icebp
lret
dec
xor
lods
push
hlt
sbb
cmp
ja
cs
xlat
ret
inc
or
or
je
insb
add
lahf
jbe
adc
sub
mov
fld
adc
test
inc
pop
xlat
mov
ja
out
add
sub
or
dec
cmp
movsl
mov
sub
rcrl
into
and
movsb
sub
jmp
sti
insl
addr16
ja
data16
mov
or
inc
loop
push
add
jae
ss
call
xchg
jge
dec
mov
push
push
add
mov
mov
hlt
sub
js
jne
movsb
jb
pop
in
popf
and
aad
loopne
insb
and
std
jmp
sub
repz
mov
addr16
cmp
imul
push
push
mov
nop
xor
or
insb
inc
push
sbb
push
jbe
daa
xor
push
push
scas
jcxz
push
dec
loope
les
dec
jmp
sbb
jl
aad
imul
adc
sbb
mov
scas
pop
mov
pxor
push
sbb
push
rcrl
xchg
nop
sahf
push
and
sbb
dec
aam
int
mov
xor
sbb
push
or
out
out
cltd
jg
mov
fisttpl
pop
pop
jge
mov
jb
jns
add
dec
push
adc
xchg
pop
ret
in
lock
jnp
mov
int3
stos
or
inc
cmp
cmpsl
mov
icebp
xor
pop
xchg
mov
and
punpckhwd
sub
mov
movsl
fildl
lods
fwait
cld
pop
sbb
mov
aaa
mov
inc
test
cld
jnp
mov
ficompl
sbb
inc
ja
fdivl
data16
adc
inc
repnz
into
or
lods
sbb
loopne
jp
lock
mov
test
xor
and
sbb
mov
lods
xor
ss
inc
lods
imul
lea
sbb
push
lods
lock
push
int3
fisubrs
jnp
jae
cmp
jns
jg
inc
and
and
std
xor
out
jnp
leave
dec
cmp
xor
mov
or
jns
cmp
inc
gs
dec
xchg
cmp
cmp
scas
cli
add
std
mov
jle
dec
in
loop
stos
insl
mov
int3
loope
daa
xchg
jle
aam
xchg
arpl
enter
out
test
fstl
mov
push
addr16
push
fwait
test
inc
or
cmp
jnp
loope
outsl
notl
mov
call
out
out
out
jne
pop
xor
es
or
and
pop
cwtl
and
push
inc
cwtl
stos
adc
fmulp
js
jb
ret
add
mov
dec
xor
aam
adc
cmpsb
in
dec
test
shrl
sub
repnz
add
cmp
sti
js
aam
add
inc
cwtl
cltd
xchg
adc
pop
sbb
imul
imul
pop
cmp
cmp
movsl
mov
jmp
rcll
outsl
ror
test
fidivl
mov
jge
repz
mov
into
int
in
ss
sti
dec
cltd
cli
inc
sub
push
add
xchg
loope
cmp
cs
jle
lret
dec
out
cmp
aad
jnp
mulb
sbb
lret
or
xchg
iret
fwait
mov
jnp
mov
pusha
add
cli
cmpsb
or
mov
fisubs
jl
xor
fdivrs
iret
fucom
add
lret
out
jp
cmp
outsl
mov
lock
sbb
xor
ljmp
push
mov
xchg
popf
clc
pushf
adc
mov
pop
push
push
fisttpll
cli
cli
ja
push
jecxz
pop
jo
inc
mov
or
jb
idivl
loop
jp
xor
mov
xchg
loope
test
sti
cmc
or
dec
jb
hlt
mov
jle
roll
daa
pop
scas
push
sarb
mov
jmp
pop
pop
lret
sti
jmp
cmp
add
imul
stos
pop
cltd
mov
sbb
ljmp
cmp
in
adc
lret
inc
test
sbb
aad
lods
popf
ret
mov
jo
iret
gs
sbb
jb
xor
sahf
sbb
mov
push
clc
lods
vpshld
jl
mov
dec
sti
cmp
mov
mov
or
shll
mov
adc
movsl
mov
add
sbb
cwtl
xlat
pop
push
jp
icebp
imul
add
add
aam
adc
add
into
inc
adc
inc
dec
aas
fs
lea
pop
adc
inc
je
jge
out
mov
movl
cmpl
je
cmpl
jne
push
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
sbb
mov
andl
xor
adcl
add
mov
movl
mov
movl
movl
mov
mov
mov
movl
jmp
xor
mov
subl
mov
subl
xor
sbbl
xor
xorl
sub
sub
xor
andl
mov
inc
mov
cmpl
jne
push
push
pushl
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
dec
mov
add
mov
addl
lea
andl
mov
inc
mov
cmpl
jne
push
pushl
call
cmpl
jb
orl
mov
mov
mov
lea
mov
mov
mov
adc
mov
sbbl
lea
andl
jmp
xor
xor
inc
mov
cmpl
jae
cmpl
jne
pushl
push
pushl
push
push
pushl
call
cmpl
jne
mov
inc
mov
jmp
neg
mov
andl
mov
inc
mov
cmpl
jne
call
cmpl
jb
adc
mov
mov
lea
xor
mov
mov
xorl
mov
lea
add
mov
or
mov
mov
incl
lea
andl
mov
inc
mov
adcl
xor
andl
add
movl
jne
jmp
mov
mov
mov
sub
mov
xorl
xor
xor
sbbl
sub
xorl
sub
xor
mov
mov
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
imul
xor
add
lea
mov
add
mov
mov
xor
jmp
js
inc
iret
aaa
jae
test
add
sbb
mov
pop
jp
mov
xchg
add
cs
add
add
or
lods
sbb
out
adc
lret
iret
push
mov
adc
xor
sub
fucomp
popf
xor
cld
call
bound
xchg
inc
fsts
movb
loopne
adc
out
dec
inc
xchg
stos
cmc
cmpsl
mov
aad
dec
push
xor
mov
popa
daa
addr16
xchg
sub
scas
xor
aas
add
or
ja
mov
repnz
rcl
inc
ja
xor
xor
aam
cmp
jle
cmc
mov
xor
xchg
mov
xorl
mov
sub
push
and
mov
nop
pop
adc
cmp
cmp
in
imul
xchg
js
xor
mov
enter
clc
cwtl
lret
int3
inc
xchg
or
clc
repz
jl
ds
repnz
push
ret
shll
in
mov
mov
repz
fcomp
xor
mov
mov
xchg
jp
push
fidivs
sbb
out
mov
testl
bound
adc
mov
push
xor
mov
adc
addb
or
dec
ss
gs
or
add
daa
ret
adcb
mov
sbb
inc
xchg
cmpsl
lret
lods
add
mov
push
jge
orb
dec
or
adc
pop
cmc
sbb
sub
dec
mov
or
xor
push
movsl
sub
lret
adcl
aad
lret
lods
call
adc
cmp
in
stos
icebp
sbb
lret
push
call
jl
es
rol
cs
out
int
mov
fistl
repz
daa
inc
shll
cli
dec
cmp
inc
shl
clc
lahf
imul
and
ffreep
pop
fwait
outsl
data16
sbb
addr16
mov
sub
jne
mov
js
or
cs
imul
pop
cmp
outsb
push
andb
cld
fwait
leave
inc
push
xor
ja
lahf
ret
insb
adc
rol
test
or
xor
movsl
xor
loope
dec
enter
sub
xor
ficomps
dec
mov
add
cmp
outsl
jbe
mov
lds
adc
pop
out
fwait
and
mov
mov
mov
adc
daa
ret
push
mov
dec
testb
fidivs
mov
shl
loop
or
loope
cmp
repnz
sbbl
loope
mov
stos
movsb
sub
jno
jecxz
cmpb
es
pop
inc
dec
popf
cmp
nop
xor
pop
inc
hlt
lret
cmp
mov
daa
std
xchg
adc
cmp
push
xchg
nop
cmp
addl
push
jge
mov
popa
mov
push
push
or
in
outsl
testl
or
jno
ss
jmp
xor
xchg
sub
insb
in
mov
xor
popa
pcmpgtw
cmp
add
test
cmp
cmpsb
pop
xlat
xor
stc
sbb
bound
inc
fnstcw
and
sbb
sbb
jle
xor
sbb
dec
push
or
fstps
jno
icebp
iret
push
and
rorb
jmp
xor
movsb
sarl
imul
dec
in
sbb
cmp
fisubrs
shl
mov
arpl
pop
dec
pop
cmp
imul
push
dec
sti
cmp
cs
stc
mov
inc
test
adc
ret
mov
into
pop
stos
push
out
aas
xchg
cmc
xchg
cwtl
stc
xchg
mov
mov
jae
and
xchg
sahf
jns
push
aam
xor
push
iret
test
xchg
mov
sbb
xchg
dec
adc
pop
mov
inc
cmp
sub
negl
cmp
in
add
cmp
aas
jmp
xlat
popf
xchg
dec
mov
pop
and
ret
pusha
mov
outsl
lcall
enter
lock
pop
adc
xor
inc
sub
cwtl
push
adcl
fistpll
aas
test
sbb
dec
out
xor
push
aam
fisubs
cmp
jo
test
dec
and
movsb
mov
pusha
push
xchg
cmp
mov
inc
pop
cmp
lahf
sbb
daa
sbb
sbb
dec
mov
repnz
inc
out
mov
es
leave
mov
push
adc
mov
dec
mov
aad
cs
lock
js,pt
cltd
push
loop
lods
sbb
push
sahf
movsl
jae
imul
ror
outsb
mov
lods
pop
andb
cltd
mov
jg
push
jo
sub
shll
and
mov
outsl
das
fmulp
je
dec
sbb
fwait
push
testl
add
push
rclb
push
cmpsb
popa
daa
inc
sti
sbb
pusha
scas
das
xor
jo
cld
out
xchg
ss
and
mov
sbb
data16
push
jmp
js
dec
sbb
cmp
fwait
jecxz
mov
je
ret
jb
cmp
lahf
jns
fsubrl
xchg
inc
jl
pop
sub
mov
sti
pop
inc
inc
or
xor
add
or
int3
jb
sbb
in
int
lret
pop
adc
dec
pop
pop
xchg
xorb
inc
movsl
ds
sbb
mov
sahf
or
enter
dec
daa
pop
pop
mov
xchg
rorb
push
addb
cmp
mul
aad
mov
in
xor
cli
jne
inc
sahf
xor
lret
xchg
pop
and
fisttpl
xor
adc
push
mov
or
inc
test
in
jmp
mov
add
pop
or
mov
mov
pop
pusha
xor
mov
jbe
push
sub
call
test
sbb
sub
push
sbb
pop
leave
adc
xor
jmp
mov
arpl
xor
movsl
cmp
adc
aam
jno
lret
pop
adc
cmp
inc
xor
shrl
stc
mov
adc
sub
fistpll
pop
sub
jo
fldl
push
xor
mov
jle
cmp
sub
pop
addr16
fildl
dec
adc
lds
push
or
xchg
divb
movsb
dec
lock
pushf
test
ja
xchg
lret
push
pop
test
push
push
filds
mov
pop
cmp
sbb
xor
push
dec
lds
adc
mov
les
xchg
rcrl
cmp
mov
loope
mov
scas
sbb
jle
cmc
adc
xchg
xor
iret
std
mov
xchg
and
sbb
pop
fisttpl
jno
and
cmp
mov
cmp
adc
subl
or
out
sub
dec
xor
repz
jne
fpatan
lret
fcomip
rcr
xorl
insb
adc
fs
test
lahf
ret
and
inc
mov
sub
adc
sub
je
testl
pop
or
pushl
add
push
mov
divb
int3
stc
and
repz
ds
jne
insb
add
addl
dec
inc
lods
mov
mov
cmp
data16
jno
shlb
dec
insb
rcl
repnz
ret
sbb
lret
adc
cwtl
out
cli
js
es
cmp
jp
aas
sbb
push
jle
mov
xor
and
test
into
xor
jae
test
aad
imul
dec
mov
push
mov
int3
dec
ja
inc
out
mov
lcall
jns
dec
ret
xchg
aas
stos
push
push
mov
sub
xchg
fdivs
ljmp
and
pusha
fmull
push
mov
repnz
gs
add
sar
test
sbb
lea
daa
adc
cld
addl
aas
mov
das
lret
mov
fdivl
push
cmpl
dec
push
sub
jg
mov
push
cs
pop
and
out
pop
int3
imul
cmpsl
in
xchg
adc
mov
cli
pop
out
ljmp
xor
jo
scas
inc
and
mov
cmpsb
int3
ja
imul
aam
test
push
jmp
mov
add
mov
or
les
or
daa
sti
sti
add
nop
into
jp
xchg
pop
xchg
sbb
inc
jl
mov
and
jae
js
sub
xchg
or
cmpl
fisttpll
stos
rcr
rcr
adc
push
dec
mov
or
jne
xchg
and
cmpsl
lods
inc
lret
inc
sub
in
rcrb
and
cs
pop
lods
scas
in
dec
pop
jmp
cmp
dec
fcoms
aam
fdivl
sbb
cmp
ficoms
jb
lods
out
test
jl
enter
gs
add
lea
inc
or
xchg
add
imul
mov
addl
mov
popf
mov
insb
xor
adc
add
icebp
inc
dec
cwtl
mov
or
jae
add
ss
ljmp
jmp
icebp
fiaddl
dec
fidivs
jp
sbb
in
sbb
adc
adc
stos
sti
in
cmc
aad
jno
imul
lretw
sub
iret
das
shll
push
dec
dec
mov
sub
jnp
mov
xchg
pop
das
enter
cmpsb
dec
push
and
enter
pop
fwait
lds
xchg
and
sub
aad
push
mov
mov
ret
or
cmp
rcr
cmc
jno
sbb
addl
insl
addr16
push
and
or
les
loope
pmuludq
lock
xchg
cmp
cmp
bound
push
pop
jmp
pop
adc
gs
subl
jb
push
into
or
xor
push
sti
loope
ror
cmc
fs
std
mov
out
scas
inc
outsb
into
xor
pop
fdivp
sbb
mov
mov
cmc
xchg
xchg
popf
push
ret
push
in
in
rcrl
jge
xchg
sar
pop
and
data16
jns
insl
mov
adcb
mov
arpl
int
sbb
sub
loopne
pop
cmc
outsb
dec
mov
insl
pop
xchg
addr16
jnp
ja
test
in
das
jbe
pop
call
icebp
mov
ljmp
jne
lcall
pop
xor
mov
adc
fisubs
xor
adc
push
adc
adc
je
cmp
lock
rcrb
dec
sbb
in
adc
xor
xchg
aas
push
lock
sub
sbb
stos
lods
stc
mov
rcl
movsb
cld
stos
test
mov
mov
sub
cli
test
out
cmpsl
pop
ss
and
fs
ficoml
into
or
push
xchg
lret
xchg
mov
lods
cmp
mov
nop
inc
sub
mov
aaa
fcoms
ja
dec
add
xchg
sbb
pop
sub
hlt
data16
add
hlt
dec
call
cmc
mov
add
shlb
data16
or
adc
push
mov
dec
sub
shrb
mov
test
test
xchg
pop
js
pop
out
jnp
sbbb
mulb
js
xchg
out
out
pusha
or
add
pop
xor
dec
inc
xchg
mov
or
iret
lock
flds
adcl
sbbl
lret
mov
das
in
mov
pop
dec
mov
add
loop
sub
cwtl
scas
mov
mov
sub
and
sbb
jl
pop
add
dec
inc
js
pop
std
fcmovnbe
and
and
pop
mov
inc
inc
repnz
xor
into
lcall
pop
mov
aad
sbb
int
clc
pushf
pop
sbb
xchg
pop
jmp
dec
movsb
or
add
test
mov
pop
add
mov
push
aad
jae
jmp
cld
inc
inc
dec
jo
stos
stos
int3
mov
and
push
mov
add
data16
push
out
cs
add
push
lock
test
adc
dec
imul
mov
lahf
xlat
loop
je
mov
inc
aad
mov
add
mov
lods
dec
repz
ja
inc
das
jl
mov
out
xchg
popf
inc
mov
mov
sub
in
cmp
mov
movsl
fcoms
add
lahf
icebp
bound
mov
dec
cwtl
stos
cmp
ljmp
adc
jnp
pushf
subl
int
inc
inc
mov
cmc
mov
adc
mov
data16
sub
sbb
or
lcall
pushf
dec
arpl
jge
lods
filds
xor
fstpt
dec
dec
insb
out
xor
jnp
mov
shll
and
dec
adc
inc
dec
les
inc
gs
ss
add
jl
add
lock
into
test
sbb
cmp
arpl
sbb
mov
push
nop
cli
outsl
shrl
dec
and
das
aad
pushf
andl
add
les
sti
add
clc
in
imul
push
fwait
adc
sti
inc
shl
lahf
dec
mov
sub
data16
lock
dec
movsl
imulb
sub
cmp
ret
lahf
xchg
mov
lods
mov
inc
mov
imul
test
shl
xchg
inc
loopne
cli
int
fstp
leave
pop
or
dec
jno
mov
xchg
aas
ds
mov
push
inc
adc
cmpsb
das
jo
mov
mov
pop
imul
sahf
jg
xchg
jno
mov
imul
push
pop
mov
xor
jae
negb
jg
sbb
cmp
fildll
or
jp
push
and
add
shr
pop
adc
std
lock
mov
imul
mov
movsb
pop
lahf
push
push
enter
push
daa
in
push
lcall
and
mov
jnp
dec
leave
xchg
mov
inc
orb
sub
aam
ss
sbbl
mov
fistps
xor
lds
pop
mov
jno
jne
dec
in
in
shlb
aaa
cmp
roll
and
cmpsl
sbb
jns
ljmp
call
dec
lock
cmpsb
arpl
fisubrl
cmpsl
pusha
xchg
sarl
jnp
aad
lea
into
lock
test
jmp
adc
out
aaa
icebp
jg
xor
xor
ss
enter
and
stos
inc
test
scas
popl
out
cmp
mov
and
pop
mov
popf
mov
and
test
dec
xchg
and
in
sub
mov
in
push
pop
lea
dec
je
rcrb
sbb
jno
or
add
test
mov
cmpsb
mov
in
xchg
ljmp
push
fcomip
ja
lock
sbb
fucomp
out
pusha
test
dec
dec
mov
xor
xchg
loopne
in
ljmp
cmp
imul
sti
mov
mov
xchg
loopne
imull
repnz
xchg
in
lock
pop
hlt
sbb
scas
mov
adc
or
xchg
stos
add
out
lods
sbb
xchg
rcrl
mov
leave
lcall
gs
mov
push
sbb
shrb
fstl
cld
andl
shrb
mov
rorl
outsl
pusha
stos
xor
cmp
or
inc
jge
push
cmp
fistpl
xchg
pop
inc
ds
mov
pop
jb
aad
nop
cwtl
rcrl
inc
popf
scas
jge
jb
iret
mov
imul
out
sbb
or
cwtl
scas
push
push
aam
cmp
jecxz
cmp
xchg
ret
idivl
xchg
lret
xchg
push
mov
outsl
inc
or
sub
xchg
insl
mov
cwtl
cmp
push
popf
mov
jb
xchg
cltd
jb
pmaxsw
lret
xor
jns,pn
aas
sub
insl
ds
inc
scas
in
pop
insb
pop
in
frstor
stc
jne
inc
bound
data16
dec
mov
push
gs
rolb
fcmovnu
fnsave
rcrl
call
ja
jl
cmp
pop
add
inc
gs
aam
dec
mov
notb
std
in
xchg
mov
ss
adc
sub
jne
and
push
mov
aas
pusha
out
dec
cld
addb
fcompl
add
sarl
fidivrl
and
les
cmc
rolb
popf
mov
xor
add
aam
add
jmp
imul
inc
dec
les
push
jecxz
adc
addr16
mov
shrb
xor
dec
xchg
ljmp
add
add
push
int
scas
cmp
iret
fldenv
lret
sbb
pop
es
mov
test
sub
fnstsw
add
mov
aaa
out
dec
lea
nop
dec
and
aad
call
push
sarl
sub
mov
fwait
aaa
lods
mov
mov
sbb
mov
daa
adc
jbe
and
mov
jle
pop
loope
cwtl
mov
andl
push
jp
sub
mov
add
incl
int
mov
add
fcmove
xchg
sub
jo
xchg
icebp
cmp
insl
test
push
adc
gs
mov
std
mov
aad
sub
cmp
jno
fs
inc
shll
shll
xchg
pop
mov
int3
sbb
lds
mov
jnp
das
cmp
jle
cmp
lret
imul
popa
xor
loope
imulb
int3
push
cmp
inc
cmpsl
notl
in
in
negb
jo
mov
aaa
sahf
test
outsb
sbb
xchg
push
jb
daa
mov
mov
or
xchg
sub
adc
imull
xlat
daa
pop
in
xchg
adc
mov
dec
lods
xor
imul
andb
fcoml
loopne
push
xchg
cmp
jmp
rorl
out
inc
fcompl
inc
jno
test
push
loopne
push
and
xchg
xchg
mov
inc
adc
insb
xchg
stc
ret
jns
and
into
push
sub
mov
movsb
gs
cmc
test
outsb
mov
aam
lret
test
mov
or
and
jnp
pop
int3
mov
pop
dec
repnz
cmpb
jmp
jp
call
iret
testl
mov
cli
jecxz
repnz
xchg
mov
and
inc
sahf
in
add
cli
test
popf
cmpsb
mov
cmp
stc
mov
add
dec
push
and
sub
jmp
shll
in
das
aam
popa
add
gs
mov
pop
and
or
loopne
aad
adc
repnz
adc
mov
cmp
mov
scas
inc
jns
enter
iret
stc
mov
shlb
stc
sbb
cmp
aaa
loopne
bound
fldl
idivl
xchg
push
jle
insb
sub
insb
popf
cmp
pop
mov
mov
es
mov
sti
orb
ljmp
lahf
jb
xchg
orb
add
add
mov
out
data16
inc
mov
mov
sbb
or
pop
out
mov
ficoms
lods
mov
fucom
cmpsb
mov
jns
popf
xchg
and
out
cmp
lret
and
push
sub
sahf
mov
cmp
loop
movsl
adc
cli
lret
pop
mov
loope
mov
xchg
out
cld
sarb
and
mov
enter
jb
addr16
add
in
fs
repnz
cmp
cli
push
push
negl
leave
mov
jmp
cmpsb
loop
inc
mov
sub
sbb
cs
movsb
sbb
cld
lret
cmpsb
add
ficompl
ds
inc
div
scas
lcall
prefetchnta
push
shrb
cmp
daa
cli
mov
insl
les
data16
idivl
rorb
clc
xchg
mov
not
push
add
mov
cmp
and
sbbb
ss
sub
cs
xchg
sub
enter
mov
call
dec
add
rol
xor
imul
repz
sbb
push
clc
fsts
adc
add
push
jnp
loopne
lret
mov
dec
ljmp
fxch
sbb
lds
sbb
sub
enter
pop
mov
mov
lret
or
leave
int3
mov
mov
jnp
inc
rorb
mov
or
or
stc
in
mov
sbb
mov
popl
adc
rorl
pop
dec
adc
mov
repnz
mov
dec
push
adc
push
dec
xchg
dec
dec
pop
shlb
rcr
les
cmp
aad
or
sbbl
stos
nop
lcall
mov
push
nop
scas
mov
lods
cld
negb
nop
in
rcrb
cmp
clc
dec
jl
mov
push
std
lds
pusha
repz
lahf
in
stos
xchg
popa
std
lret
addr16
push
je
pop
cmp
push
icebp
sub
add
cmc
dec
pop
fiaddl
add
pusha
push
push
mov
jno
push
inc
je
sbb
xchg
mov
adc
sbb
ja
pop
inc
xor
dec
cltd
push
and
inc
in
or
cmpsb
xchg
dec
pop
ficoml
je
sbb
xlat
add
mov
repnz
gs
sbb
scas
mov
cmpl
cmp
jmp
cmp
jno
rol
cmc
bound
xchg
dec
sub
dec
shlb
adc
lret
pusha
pop
or
mov
push
lock
lahf
jo
jmp
cmp
mov
cmpsb
pusha
adc
cmp
pushf
pop
arpl
sbb
pop
mov
xchg
je
xchg
xchg
pop
adc
ljmp
inc
andb
xchg
mov
pusha
call
repnz
sbb
sub
push
repz
in
fmull
lret
mov
jmp
aam
in
dec
jge
out
xchg
outsb
sbb
lea
jmp
or
test
fisubs
jmp
jg
cmp
xor
dec
gs
fs
xchg
aad
pusha
sub
aas
sti
mov
loopne
mov
repz
fwait
jno
movsb
jmp
jle
xchg
mov
lea
mov
lcall
clc
loop
lahf
push
addl
inc
loop
lea
call
rcrb
pop
mov
jae
fcmovnb
test
lcall
cli
lret
mov
xlat
and
sbb
mov
or
lret
add
mov
inc
xlat
push
push
out
push
fs
outsl
sub
pop
push
aas
outsl
mov
jecxz
movb
addl
js
popf
jle
int
xchg
data16
in
lcall
pop
sbb
push
call
xchg
dec
mov
pop
and
mov
sbb
add
movsl
adc
mov
fsubl
fcomp
push
arpl
nop
cmp
test
xchg
jmp
mov
inc
sbb
mov
pusha
ja
lods
pop
aaa
rcll
mov
pop
xchg
mov
dec
ret
mov
cwtl
dec
clc
repz
or
mov
aam
lret
jns
and
sub
sbb
mov
push
jg
jb
loope
daa
and
sub
mov
test
popf
dec
fildll
xchg
shll
test
push
lret
mov
sbb
dec
cmp
fwait
mov
jmp
inc
sti
stos
inc
mov
mov
cli
xchg
xchg
inc
out
lcall
mov
push
lahf
dec
mov
cmp
mov
scas
xor
push
xchg
adc
insb
pusha
inc
and
adc
push
lds
fisttpl
loopne
push
aas
pop
mov
cmp
movsl
xor
shlb
push
or
mov
addr16
mov
pop
pop
pop
push
lret
mov
xor
jmp
das
inc
ljmp
fimuls
sub
lods
testb
into
pop
xchg
dec
cmpb
add
pop
in
xchg
add
and
sub
dec
rcl
cmp
jne
lcall
mov
imul
aas
push
xlat
adc
popf
dec
std
mov
inc
push
in
jnp
orb
pop
mov
ficoml
repz
adc
dec
dec
mov
arpl
aam
jb
push
in
push
js
loopne
mov
loop
ret
dec
mov
adc
mov
xchg
inc
je
adc
inc
je
and
popa
inc
in
adc
or
push
pushf
je
adc
mov
dec
cmp
loope
mov
lds
sbb
ret
mov
mov
sub
cld
das
movsb
xor
popa
fwait
xchg
shl
imull
pop
mov
inc
add
cmpsl
in
ror
jae
sub
movsb
test
outsl
ja
inc
dec
pop
addr16
incb
inc
dec
push
inc
lahf
ret
out
mov
adc
mov
dec
sbb
outsb
punpckhbw
ss
data16
scas
jo
scas
jb
xor
aaa
mov
mov
fistpl
rep
insl
and
dec
sbb
fimuls
sbb
test
inc
out
out
jns
add
inc
mov
sub
cli
fidivrs
jmp
aad
mov
lods
jae
inc
mov
sub
jb
jns
mov
inc
jns
jecxz
xor
push
fidivs
add
das
mov
add
jecxz
jmp
sub
pop
fsub
repnz
adc
add
mov
cltd
std
push
je
push
fildll
cmp
mov
xor
sbb
push
jno
lcall
mov
jns
loope
scas
inc
jge
jno
push
and
repnz
lahf
mov
and
xor
leave
mov
cwtl
gs
clc
push
cmp
add
sbb
inc
cli
mov
js
cwtl
or
dec
pushf
add
or
jnp
cmp
enter
add
mov
or
sbb
in
or
pop
imul
pusha
push
adc
hlt
fldcw
test
and
mov
xor
mov
sbb
mov
enter
xchg
jp
mov
mov
push
or
xchg
jno
xchg
jmp
in
mulb
dec
flds
add
xchg
add
iret
pusha
ret
hlt
rolb
mov
add
jl
daa
dec
cmp
scas
out
sub
adc
inc
jge
lods
pop
dec
pop
imul
test
adc
sbb
dec
xchg
cltd
sbb
add
cmp
mov
mov
fldcw
dec
aam
in
out
pop
test
sub
xor
clc
cmpsb
cs
fnstsw
mov
ud2
adc
sub
sub
aam
paddsb
lret
scas
test
jb
icebp
xor
adc
ljmp
bound
mov
std
mov
int
dec
fadds
or
insb
bnd
outsl
out
jecxz
inc
xor
test
xor
push
pop
and
jo
and
lret
call
mov
xchg
pop
sbb
sbb
negl
or
lods
add
inc
imul
or
test
mov
add
add
mov
fstps
pop
and
and
in
dec
lods
adc
jb
pop
mov
inc
and
repnz
cmp
sub
in
mov
mov
loope
pop
and
adc
or
ljmp
cwtl
and
test
xchg
bound
fcmovb
mov
iret
cmp
dec
popa
test
lock
push
xor
insb
lcall
xor
test
lcall
pop
push
mov
in
nop
cltd
pop
push
jbe
jl
addr16
dec
push
push
lods
mov
sub
adc
cmp
dec
add
or
push
sub
add
inc
dec
xchg
shlb
jne
mov
outsl
fisubs
fld
pop
sub
inc
pop
pop
jo
nop
xchg
xchg
cld
cs
push
push
jecxz
sub
pop
push
and
scas
mov
push
fcmovnbe
out
mov
and
xchg
loop
jle
pop
pusha
push
jno
cmpsb
cmpb
mov
add
mov
cmp
sti
mov
loopne
test
sub
int
rcll
arpl
sub
sub
sbb
adc
pop
popf
outsb
or
imul
jmp
and
or
popf
call
cmpsb
sub
lret
or
pusha
outsb
and
aas
add
inc
or
inc
hlt
loopne
pushf
adc
push
ss
sbb
lods
xlat
cmpsb
aad
jp
xor
pop
push
add
sub
les
xchg
mov
mov
out
nop
data16
and
add
stc
testl
xchg
sub
or
and
and
dec
jl
nopl
mov
daa
js
repz
pop
mov
mov
xchg
lock
fildl
int3
sbb
das
loopne
subb
cli
mov
pop
mov
mov
pop
lret
cmp
pop
daa
xorb
xor
pop
adcb
push
xchg
leave
cmp
std
jp
jmp
rcrb
movsl
stos
test
cmpb
push
movsb
adc
iret
or
or
movsb
pop
cmp
loopne
jle
or
std
icebp
inc
inc
xchg
movsb
mov
mov
cmp
ds
mov
mov
int
mov
out
lahf
int3
add
xor
dec
sti
push
and
push
les
mov
int3
jle
mov
imul
mov
dec
or
mov
shl
jnp
jl
jno
leave
sbb
stos
roll
aaa
out
mov
ret
push
imul
adc
xchg
icebp
xchg
sub
mov
mov
dec
loopne
mov
iret
dec
mov
jbe
adc
sahf
mov
cmp
ljmp
loopne
cs
icebp
sub
jnp
cmpsb
sbb
fsub
xchg
movsb
inc
out
add
adc
and
pop
push
iret
negl
cmp
mov
push
mov
sti
rolb
js
dec
inc
fildl
push
jbe
aas
pusha
cmp
jmp
dec
jle
or
outsb
xchg
aad
les
jno
loope
cmpsl
fsubrl
xchg
pop
sbb
stos
jbe
outsb
adc
xchg
adc
push
lea
mov
enter
out
pushf
pop
loopne
lahf
insb
xchg
mov
push
mov
push
test
in
std
xchg
xchg
outsb
cmpsl
sbb
inc
sbb
and
hlt
push
pushf
push
jl
cmp
jae
jnp
lods
inc
cmpsl
icebp
pop
bound
inc
ljmp
jbe
sbb
lods
xchg
inc
insb
sub
sbb
bound
add
sti
mov
mov
test
or
sahf
iret
mov
aad
push
mov
mov
adc
push
pop
negl
mov
cmp
dec
or
inc
pop
ja
sahf
pop
nop
insl
movsl
pop
push
inc
push
scas
fs
test
daa
movsl
scas
mul
jmp
mov
callw
imul
pop
mov
mov
xchg
aad
sub
loopne
iret
pop
cmpsl
jbe
imul
mov
fs
jl
sub
aaa
insb
out
ret
xor
push
int3
sub
jne
or
jae
test
xchg
cld
hlt
daa
ret
mov
mov
outsl
dec
mov
nop
fiadds
xor
lahf
cli
sub
icebp
add
jne
mov
mov
mov
cmp
je
jmp
jb
or
mov
filds
test
jge
or
jp
loope
or
cmp
push
outsl
cli
ja
std
inc
and
jbe
aaa
out
adc
add
xchg
adc
xor
mov
lock
stos
dec
aam
mov
mov
loope
mov
call
cmpsl
stos
scas
push
push
sub
xor
pusha
cld
cmc
jns
or
dec
xchg
js
xor
mov
aaa
xor
push
pushf
or
push
xor
lods
ja
push
in
or
cwtl
stc
pop
mov
cmc
jp
inc
jne
dec
movsl
gs
sti
mov
divl
pop
cld
mov
icebp
repnz
je
inc
xlat
xor
fists
imul
mov
and
cmp
test
push
jmp
inc
pop
hlt
mov
jg
std
dec
inc
movsl
fs
gs
fidivrs
aad
or
testb
out
sub
add
or
lcall
push
push
xor
pop
jns
dec
rorl
jg
aad
jp
int
mov
push
pop
lods
js
inc
mov
loopne
cmovnp
push
cld
jle
cmp
cld
cmp
ds
push
or
stos
lds
mov
dec
sub
inc
lods
leave
mov
xchg
jg
push
push
nop
mov
xchg
dec
leave
mov
ja
loop
mov
lock
xlat
sahf
int3
int
adc
mov
mov
jae
leave
xor
fst
cmp
jp
out
xchg
pop
loope
pushf
mulb
scas
das
sub
pop
cmp
push
int3
pop
int
ret
lret
loopne
rcll
pop
scas
cld
and
xor
fdivl
xor
outsb
mov
and
sbb
inc
or
lock
jmp
sub
xchg
loop
xchg
fwait
inc
mov
sbb
inc
loope
aad
xor
sub
mov
imul
add
push
aaa
in
lahf
lea
in
mov
dec
inc
push
or
enter
test
int
insb
pop
mov
xor
cmp
push
jle
gs
xchg
lock
jo
std
jmp
cld
dec
nop
push
ss
test
fstpl
mov
outsb
les
in
xchg
imul
push
xor
vpandn
insl
add
mov
insl
add
ja
xor
and
popf
and
and
add
arpl
inc
push
push
xchg
xchg
js
mov
inc
loope
ret
outsb
lock
leave
pop
adc
add
out
push
fnstcw
aam
cmpsb
cld
add
in
ds
out
cmc
sub
and
sub
mov
cmp
push
xor
fnstsw
in
sbb
lock
outsl
stos
mov
mov
add
out
fcmovnbe
sbb
js
fyl2x
movsl
mov
mov
cs
notl
frstor
and
repnz
das
and
rcrb
js
jmp
gs
fwait
pop
outsl
cmp
add
repz
lret
adc
inc
sbb
rorb
nop
dec
fldt
sti
jge
xchg
sub
and
sub
rclb
jg
xorb
jl
ja
daa
iret
lods
ffreep
int3
inc
push
loope
adc
out
dec
add
sub
aad
test
popa
mov
pop
leave
ret
or
push
pop
ret
inc
stos
push
ja
mov
or
stos
shl
outsb
scas
pop
das
int3
sbb
jno
mov
daa
sbb
dec
notb
in
inc
and
adc
inc
jg
icebp
mov
adcb
std
test
cmpsb
scas
push
mov
daa
mov
mov
repz
xchg
jno
adc
xchg
xchg
pop
mov
or
inc
cwtl
inc
aas
pop
out
push
movsb
xor
test
insl
imull
ret
mov
loop
sub
sbb
sbb
and
adc
sub
lea
shrl
xchg
jmp
push
inc
mov
xchg
lods
shrl
jecxz
movsb
pop
xlat
sbb
inc
xor
ljmp
xchg
xor
in
sub
push
call
stos
cmp
std
adc
jle
xchg
jle
add
ret
or
aam
dec
sbb
scas
mov
std
cmp
mov
addr16
fdivl
lahf
roll
cli
mov
dec
lret
sti
aas
lds
mov
jae
xor
test
shl
fwait
sub
outsl
shll
enter
push
push
dec
mov
dec
mov
imul
aaa
js
dec
nop
pop
loope
es
pop
xor
scas
xchg
dec
idiv
insb
out
out
push
stos
mov
adc
sub
fsub
imulb
pop
daa
adc
sbb
iret
fisubl
aaa
pop
sbb
lods
jne
pop
sub
es
stc
sbb
ret
and
ss
aaa
or
lahf
call
sub
pop
pop
adc
into
into
push
out
and
cld
sbb
dec
jnp
pop
cmp
mov
ds
push
xorb
mov
xchg
sarb
rcl
lret
enter
bound
jae
jle
testb
and
lods
dec
or
xor
lods
sbb
js
loopne
stc
lret
fyl2xp1
and
cs
add
sar
idiv
sbb
faddp
adc
mov
in
ret
sub
mov
ds
testb
pop
addr16
das
push
adc
icebp
pusha
ss
jae
pushf
fs
pop
bound
stc
gs
sub
jbe
add
xor
adc
mov
xorl
pop
aaa
sti
loopne
mov
xchg
inc
sub
inc
xor
sbb
and
add
iret
mov
cltd
incl
dec
sbb
pop
mov
arpl
mov
lods
cld
mov
pop
inc
aad
lds
jb
push
ret
testb
xor
sub
in
mov
adc
cmpl
adc
sub
loopne
lea
shl
and
pop
imul
lock
xor
pop
or
xor
incl
sub
dec
add
out
xchg
lret
cmpsb
in
xor
stc
xchg
cltd
inc
pop
scas
aaa
push
mov
subl
cmp
lret
insl
jno
sbb
cwtl
outsl
and
pop
and
ficompl
push
jns
xor
or
loopne
das
or
les
popa
fsubr
test
xor
and
mov
mov
fistps
and
iret
sbb
jns
jmp
pop
and
dec
mov
jmp
inc
pop
fidivrs
lods
filds
test
les
mulb
pop
mov
in
or
js
gs
xchg
aam
jae
jnp
add
push
out
cmovb
stos
push
cmp
xchg
loope
mov
mov
pop
cmpb
out
dec
inc
orl
dec
fsubp
dec
xor
push
outsb
lret
lret
add
in
pushf
mov
inc
cld
cmp
pusha
mov
dec
dec
lods
fxch
bound
or
lahf
xchg
clc
aam
lahf
lods
mov
jns
mov
xchg
or
sub
addr16
sub
aas
add
cmc
mov
adc
adc
js
and
sub
pop
dec
mov
nop
testl
lock
pop
movsl
notb
mov
mov
nop
and
lods
cs
pop
push
clc
lock
mov
cmp
sub
jmp
mov
cmp
inc
in
inc
cmp
xchg
xor
aaa
in
movsb
sub
lret
addl
fs
or
xchg
shll
jne
faddp
xchg
lcall
enter
ja
xor
and
sbb
cmp
test
cltd
xchg
les
mov
xchg
xchg
incb
sti
mov
aam
out
adc
xchg
cmp
jl
mov
nop
xor
in
mov
push
addr16
addl
in
xchg
iret
cld
add
mov
decl
add
aad
cmp
cmp
sbb
sbb
fcoml
jg
pop
push
ja
call
jne
test
xor
dec
jge
aad
jle
loopne
dec
or
inc
jp
add
sbb
mov
sti
out
and
adc
out
sub
pop
repnz
scas
cs
sar
add
call
das
icebp
fidivl
jb
add
push
mov
add
jnp
or
xlat
cltd
mov
xchg
sarb
lds
inc
pop
cmp
out
test
pop
icebp
add
inc
add
or
pop
push
test
pop
mov
out
addr16
test
jge
and
xor
roll
cmp
cmp
and
insb
xor
mov
pop
inc
mov
adc
pop
sub
popa
xchg
push
and
cld
and
or
mov
sbb
jo
xchg
jne
jo
mov
or
es
and
add
ror
insb
cmp
aad
inc
pop
inc
mov
add
sahf
sahf
push
push
dec
mov
xorl
inc
inc
xchg
inc
push
xchg
cs
movl
or
popa
rorb
aaa
shl
pop
test
rolb
pop
int
in
in
adc
test
jnp
inc
sub
std
jbe
lods
adc
mov
jns
outsb
scas
or
pop
repnz
push
sbb
outsb
push
cmc
outsl
pop
inc
xchg
shrb
in
test
aas
ja
dec
out
loop
rorl
mov
test
xor
aad
icebp
cmp
imul
pop
add
inc
hlt
in
aaa
jge
push
cmp
jl
xlat
xchg
andb
out
imul
imul
mov
push
sti
xchg
das
shlb
or
dec
mov
pushf
adc
pop
mov
lock
cmp
cmove
pop
xchg
lcall
lock
cmp
fistpl
psrlw
pop
pop
mov
imul
arpl
jle
int
and
mov
loopne
cltd
mov
rcl
jl
adc
jecxz
cwtl
mov
stos
es
mov
dec
cmp
mov
loopne
js
fwait
push
dec
push
gs
jns
jb
aaa
sub
lods
sub
jns
stos
or
jbe
sbb
fs
out
mov
icebp
fstpl
call
push
adc
sarb
mov
mulb
or
add
xchg
daa
mov
ret
xlat
ss
aaa
xchg
mov
sbb
lods
mov
and
loope
xor
enter
inc
aas
subl
jge
pop
or
pop
sbb
push
xor
mov
into
dec
dec
les
lret
mov
push
jge
repz
sub
lock
outsb
pop
test
shll
jae
iret
mov
int
add
das
and
pop
add
jae
sub
jns
adc
notb
repz
xchg
pop
std
xchg
xchg
jae
shlb
mov
jl
pop
hlt
cmp
mov
int
and
pop
mov
cmpsl
sub
repz
cltd
or
in
push
mov
int
xchg
lret
pcmpeqb
mov
fs
and
push
aad
pusha
in
rolb
loopne
pop
add
aam
scas
test
sub
mov
fstps
lret
daa
pop
loop
dec
insl
push
jl
sub
loopne
jmp
sub
data16
push
adc
mov
inc
sub
repz
ja
lock
jecxz
or
jb
pop
imul
daa
lahf
lods
push
ret
les
adc
in
fdivrl
shrb
jbe
ss
clc
jo
xor
sarb
jp
cld
pushf
scas
jmp
paddd
negb
les
or
jns
sarl
gs
sbb
mov
xor
inc
icebp
inc
xchg
cltd
mov
int3
mov
cmp
mov
div
cmp
test
add
aam
add
mov
enter
in
sub
jecxz
add
inc
in
adc
addr16
es
push
jno
lea
aad
test
inc
jmp
inc
add
and
fwait
in
cmp
pusha
icebp
lcall
pop
ret
push
lods
inc
sub
ret
dec
popa
sbb
pop
fnsave
les
dec
jge
ss
subb
jmp
mov
das
out
add
pop
pop
mov
mov
mov
push
aam
add
roll
shrb
or
sarl
mov
xchg
jno
aaa
fmul
jnp
nop
mov
jns
pop
mov
push
dec
jne
xor
dec
dec
sub
fisttpl
in
mov
xor
push
dec
dec
mov
stc
test
imul
or
xchg
and
std
movzwl
or
push
sub
xor
cs
out
cltd
fdivrp
lods
mov
sbb
imul
sbb
orb
stos
xor
test
pop
stos
fmul
sbb
push
popa
jo
mov
mov
inc
out
sbb
repz
inc
jle
bound
enter
xlat
or
jg
pop
fcomps
dec
jbe
test
cld
pop
cmpsl
mov
push
addr16
lds
inc
clc
daa
and
jne
mov
fsubs
leave
frstor
or
in
add
inc
jb
jbe
in
jns
movsb
outsb
in
ror
sub
leave
jne
jmp
add
fbld
and
push
lahf
int
cmp
adcb
test
mov
or
shr
cmp
jns
xchg
jne
test
cwtl
arpl
movsl
mov
aam
push
mov
ret
add
and
mov
ss
sbb
adcb
pop
or
pop
dec
mov
test
adc
jecxz
sub
or
xor
fmuls
xor
and
xchg
ret
cmovae
fstps
and
ret
dec
xchg
insb
aad
arpl
jnp
adc
mov
je
sbb
in
sbb
daa
jge
jle
cmp
rorl
jmp
pusha
cs
jp
push
jg
daa
push
es
bound
in
iret
pop
in
roll
push
cmp
fwait
das
push
jmp
cmc
cmp
insl
pusha
adcb
addr16
mov
push
xchg
cmp
fistl
imul
pop
popa
je
sbb
mov
inc
fidivs
cltd
add
jb
push
addl
test
inc
pop
test
and
pop
aad
xchg
adc
mov
lret
pop
cmp
ljmp
jl
push
jns
sub
sbb
mov
insb
mov
xor
dec
lods
mov
int3
mov
push
and
dec
xor
sub
repnz
mov
cmpsl
xchg
js
lahf
dec
subb
mov
fucom
jmp
ja
adc
sub
xor
dec
sbb
icebp
scas
jp
mov
mov
fiaddl
es
jp
inc
popf
lcall
into
mov
mov
out
inc
and
mov
sub
cmp
mov
movsl
out
stos
xchg
out
inc
cltd
sub
xor
hlt
jg
arpl
pop
mov
or
icebp
out
dec
push
jle
shlb
add
in
loope
add
fcompl
aas
jns
cmp
ja
sub
push
xchg
insl
xor
out
testl
sub
or
cs
stos
jl
enter
dec
inc
cmp
xchg
aam
sub
push
cmp
or
out
ficompl
mov
daa
inc
mov
fcmovbe
popa
jge
pop
cmp
or
sbb
cmp
xor
ret
jne
add
std
mov
dec
ret
cmp
stc
or
mov
lahf
cltd
call
out
and
lea
stc
push
test
hlt
das
mov
sub
pop
std
mov
imul
inc
imul
xor
cmpb
pop
test
and
in
enter
jo
sti
add
lahf
add
dec
or
mov
shrb
push
jle
fmuls
aaa
stos
dec
cmp
cmp
notl
mov
lods
ret
mov
xchg
sub
pushf
sbb
mov
mov
shll
jbe
jae
dec
in
int
cmc
sub
lods
sbb
fs
cmp
mov
dec
loopne
sbb
stc
in
pushf
ja
test
leave
adc
pop
xchg
rcrb
cwtl
ret
mov
dec
dec
ds
int3
push
xor
das
sub
inc
jl
mov
imul
cmpps
cmp
dec
pop
inc
and
push
scas
sbb
and
inc
loop
cmp
mov
mov
jno
mov
mov
movl
mov
repz
es
pop
inc
inc
out
jle
js
inc
call
sbb
je
mov
sub
add
icebp
stos
jns
iret
fistps
jp
loopne
adcb
stos
nop
rcrl
and
scas
gs
sub
mov
mov
sbb
fcompp
test
fldenv
pop
popf
rclb
xlat
push
dec
pop
mov
cwtl
fldt
aaa
addr16
shll
xor
xchg
nop
rcl
sti
mov
dec
fisttps
addb
xor
or
sub
imul
in
stos
scas
jl
repnz
adc
jmp
outsb
add
mov
push
fimull
leave
es
pop
push
int3
pushf
test
lahf
cmp
je
mov
clc
shr
mov
sub
cmc
mov
push
jbe
xor
rcrb
or
jp
inc
iret
cld
out
scas
jae
push
pop
add
sub
xchg
adc
or
or
lods
scas
ja
mov
mov
sbb
sahf
jp
sbb
jmp
lahf
xchg
adc
dec
cltd
mov
xchg
mov
adc
out
es
adc
mov
jecxz
ss
cmpsb
jne
add
inc
cmp
sbb
cmp
adc
or
es
mov
hlt
dec
ja
mov
xor
inc
rcrb
aas
mov
fistps
and
lret
stc
lea
xchg
push
pop
mov
cld
push
jge
lret
sub
add
mov
imull
js
push
mov
mov
jmp
mov
dec
je
int
leave
insl
cli
sub
mov
inc
addr16
dec
mov
into
enter
insl
inc
xor
mov
in
movsl
xchg
push
push
pop
les
loope
xchg
inc
lods
inc
ds
popf
bound
xchg
mov
dec
mov
sbb
popfw
inc
sahf
cltd
sbb
cwtl
dec
repz
cmp
mov
dec
add
and
inc
leave
and
mov
fiaddl
cmp
mov
cmpsl
clc
add
inc
or
xchg
in
push
cmp
or
dec
mov
push
rol
sub
aad
and
lahf
jecxz
cmpsl
cmp
lds
lahf
or
enter
insb
pop
or
aaa
hlt
fs
xorl
xchg
mov
push
and
aaa
xor
or
pushf
stc
mov
popa
cli
cmp
decl
fsubs
mov
enter
and
pop
dec
mov
int3
pcmpgtb
sbb
lods
lahf
lahf
cmp
add
gs
push
out
fwait
stc
cmp
or
mov
repz
sub
lds
cmpsb
mov
inc
add
mov
fisubrs
repz
andl
fcoml
sub
cmpsl
stos
pushf
xchg
and
push
fidivrl
pop
xor
xchg
cld
cmp
sbb
test
test
mov
push
in
xor
sub
rcrl
mov
xchg
sbbb
fwait
insb
mov
and
add
in
cmp
out
fwait
inc
push
repnz
ds
push
xor
outsb
pop
and
push
iret
je
js
mov
mov
pop
lds
adc
mov
mov
lods
jge
xchg
dec
subb
and
rorl
mov
cltd
popl
cmp
jge
subl
lock
inc
jnp
enter
xchg
sbb
ficoml
pushf
adc
insb
or
call
push
data16
lea
insb
rep
inc
in
xor
and
sbb
into
fidivrl
lock
sbb
inc
sub
adcb
popf
xor
lahf
outsb
add
in
test
movsb
icebp
push
mov
cmc
mov
hlt
mov
jecxz
xchg
push
jae
xor
cmp
sub
sub
pusha
stc
pop
push
stos
jns
or
jb
xor
ret
sbb
insb
xchg
mov
test
xorb
aad
pop
ds
repz
pop
lods
fiadds
sub
and
dec
in
adc
data16
sub
inc
mov
sub
insb
jbe
cltd
add
ret
adc
pop
data16
test
fldenv
xchg
xor
mov
call
cmpsl
and
gs
leave
inc
mov
enter
pop
mov
or
dec
outsl
call
stc
mov
int3
popf
and
pushf
and
dec
lret
je
push
sbb
scas
dec
in
xlat
dec
add
sbb
ja
xlat
mov
repnz
repnz
jno
shll
rcl
fwait
mov
xchg
int3
test
mov
adc
cmpsl
notb
stc
movsb
cmp
not
mov
movsl
int
add
mov
das
mov
mov
lcall
dec
call
mov
cmc
clc
pop
js
mov
xorl
out
lds
mov
xor
sbb
xchg
xchg
fadds
test
ljmp
add
mov
ret
mul
clc
and
fdivrs
es
jge
les
jecxz
xor
inc
fisttps
mov
xor
push
rorb
gs
popa
inc
andl
and
jl
mov
sbb
sbb
mov
add
test
push
push
pop
mov
loopne
xchg
mov
jo
pusha
dec
xchg
or
jmp
das
push
cs
pop
jmp
imul
cmpsl
pop
dec
mov
xor
ljmp
add
and
mov
bound
imulb
pop
sahf
push
pop
dec
jbe
enter
inc
cmp
mov
test
cmp
in
bound
cld
int3
sub
sub
cwtl
mov
sti
inc
sbb
mov
jp
je
and
dec
testl
dec
or
mov
sbb
hlt
push
and
xchg
pop
movsl
jne
push
movsl
out
fdivr
dec
xor
xchg
xchg
dec
mov
adc
adc
sbb
inc
jmp
pop
lret
pop
jbe
mov
fisubs
push
data16
cmpsb
into
movb
pop
sbb
cmp
mov
ds
movb
lret
inc
scas
mov
fs
cmp
das
sub
lcall
dec
in
jmp
sti
inc
pusha
ss
inc
jg
loop
mov
pop
sub
lahf
dec
push
jg
fs
call
mov
fisubrl
mov
lcall
xor
xchg
jg
and
and
movsl
loopne
xchg
or
push
inc
int
cmp
loope
pop
xchg
dec
xor
xlat
pop
push
mov
imulb
fwait
rclb
sub
cmp
push
sub
xchg
vpshlq
enter
xor
icebp
mov
add
adc
pop
mov
mov
popf
jb
adc
sub
mov
xor
jp
inc
test
lea
je
fistpl
and
adc
divb
out
inc
xor
test
outsb
xchg
out
lcall
push
push
es
adc
icebp
scas
test
xor
dec
jne
pop
or
pop
movl
xchg
mov
add
add
add
dec
sbb
xchg
sub
mov
dec
popa
rcll
insl
mov
adc
pop
xchg
lea
mov
in
pop
pop
dec
cld
xor
scas
js
call
fsubl
sub
data16
or
pop
insl
sub
pop
cmovae
ja
test
stos
jge
jl
in
inc
test
imul
pop
and
negb
mov
mov
sahf
neg
xchg
clc
cmp
lea
aaa
cmp
push
aad
jmp
xlat
call
lret
and
popf
addr16
sti
or
xor
in
or
test
lods
and
outsb
cmc
call
inc
loope
shll
fucomip
push
fs
mov
arpl
sub
xchg
push
adc
xchg
pop
sub
xchg
aaa
xor
repz
dec
dec
mov
cmp
sub
push
mov
jle
pop
bound
test
iret
cmpsb
movsb
out
xor
mov
pusha
jmp
dec
jmp
sub
add
test
andl
out
mov
int3
inc
xchg
dec
mov
out
sahf
adcl
test
sub
lret
jne
inc
adc
mov
xor
mov
movsl
cwtl
lea
sbbb
lock
dec
cmp
je
inc
loope
fstpt
fisttps
repnz
hlt
fmull
sbb
mov
ja
gs
dec
adc
andl
notl
mov
out
mov
push
test
push
clc
cmp
cmp
push
das
sbb
sbb
stos
fisubs
mov
cmp
jl
call
mov
sbb
jg
sarl
negl
outsb
dec
fdivp
lret
std
test
xlat
xchg
xchg
jg
push
xchg
mov
and
aas
push
in
lea
movsl
stos
add
shll
fmuls
sahf
mov
stc
inc
dec
sub
out
inc
xchg
jmp
mov
sbb
sbb
mov
sbb
and
adc
push
enter
gs
mov
sbb
mov
call
sub
out
xchg
pop
in
pop
dec
mov
or
nop
imul
mov
pop
cwtl
add
in
lock
std
fldl
daa
sub
loope
jge
lret
pop
pushf
and
xchg
inc
xor
addw
push
jmp
push
decl
push
inc
lds
jg
cmc
rorb
sahf
inc
mov
bound
pop
jbe
sti
cmp
mov
or
andl
jge
push
inc
add
adc
dec
jle
sbb
xchg
call
xor
xchg
and
jae
and
sbb
scas
stc
fisubl
push
and
xchg
cmpb
and
gs
lea
mov
test
mov
aaa
stos
add
cwtl
imul
out
test
sahf
sub
sub
jl
mov
push
gs
bound
sbb
int
push
and
frstor
pop
jle
decb
and
add
scas
dec
fwait
lea
and
daa
int
das
mov
ss
jmp
mov
in
neg
lret
xchg
out
xchg
mov
leave
inc
mov
xchg
cwtl
xlat
dec
sub
imul
cmpsb
scas
mov
inc
fcomp
lret
mov
lret
rclb
sub
dec
ss
aaa
test
call
jl
adc
scas
or
fisubrs
clc
cltd
das
inc
jae
add
xor
inc
mov
mov
mov
ds
iret
lcall
jae
xor
mov
xchg
insl
mov
scas
jg
loop
push
daa
jne
lods
cmp
jb
sub
sbb
mov
subl
jmp
mov
sbb
inc
in
push
outsl
btc
int3
xchg
adc
dec
pop
js
cmpsl
cmpsl
orl
movntps
test
test
mov
outsl
cmp
aaa
jl
push
adc
insb
bound
adc
fbstp
stos
mov
scas
inc
outsl
leave
leave
pop
mov
mov
andb
outsb
test
sub
mov
adc
cs
push
cmp
insl
imul
repnz
cmp
add
xlat
xchg
xor
icebp
lahf
mov
inc
add
adc
outsb
push
and
xchg
aaa
inc
repz
in
sub
dec
imul
cmp
cmpsb
pushf
mov
add
repz
lods
mov
push
inc
fwait
sti
lds
lret
add
leave
jl
pop
adc
data16
mov
andl
shl
lcall
js
test
je
push
stc
cltd
xor
xchg
mov
fs
pop
or
fldl
push
xor
popa
mov
cmp
inc
and
jmp
push
into
add
popl
loopne
push
loope
jnp
popf
push
je
repnz
mov
adcl
push
mov
sti
push
dec
iret
dec
enter
arpl
sub
mov
test
or
xchg
sub
rorl
xorl
into
pop
stos
jle
dec
xchg
jp
fwait
jge
call
out
lds
sbb
adc
or
divl
sarb
fdivrs
and
mov
hlt
adc
pop
xchg
pop
jmp
lret
adc
push
data16
sub
cmp
out
xchg
xor
jl
pop
inc
jno
xlat
dec
test
in
fiadds
std
mov
int
lea
cld
in
push
mov
mov
insb
pusha
push
cltd
cld
sarl
adc
lret
in
test
jae
xor
js
mov
sti
cmpsl
xchg
mov
divb
inc
mov
lea
daa
push
mov
popf
in
cmp
mov
popf
and
sub
pop
pop
inc
mov
mov
loop
test
sbb
cs
adc
pop
iret
stos
push
jmp
pop
cmp
xchg
shlb
xchg
rcr
xor
jbe
push
sub
push
dec
lods
ficoml
pop
pop
out
shlb
dec
sbb
push
sbb
push
xchg
fiaddl
iret
movsl
rcrl
mov
mov
sbb
cwtl
iret
jo
in
mov
pop
stos
aad
mov
and
xchg
or
xchg
shl
idiv
into
inc
stos
jge
nop
and
aad
outsl
aas
daa
jl
jb
sbb
data16
fistl
lret
lret
imul
scas
sar
sub
cltd
call
mov
push
shlb
arpl
addl
adcb
outsb
mov
inc
mov
inc
pop
roll
sahf
out
cli
sub
mov
cmp
pop
push
sbb
lds
cmpsl
xlat
pop
dec
pop
cmp
push
push
push
lcall
lret
fsubrs
sbb
mov
or
daa
rorb
std
out
insb
dec
mov
ja
mov
insl
adc
out
cmp
cli
cmp
mov
push
inc
cmpsl
jg
stos
and
mov
stc
mov
test
lret
mov
inc
arpl
inc
sub
xchg
js
xorb
adc
stos
xor
dec
loopne
mov
mov
cmp
jne
mov
mov
movsbl
xor
add
jmp
cmp
mov
stc
mov
cmp
or
jp
cltd
ds
and
daa
ja
adc
sub
cwtl
or
mov
mov
stc
pop
xchg
jb
pop
jo
fbld
pop
clc
push
cmp
mov
sub
sbb
adc
and
rorl
inc
add
insl
insb
clc
fucompp
cmp
cmp
int3
cmp
hlt
push
inc
movsl
ret
lret
shlb
or
lret
mov
add
mov
cltd
mov
outsb
shll
mov
mov
mov
adc
mov
mov
pop
ds
fimuls
xchg
adc
inc
xor
push
ss
popa
mov
fcmovu
popa
push
adc
and
xlat
push
scas
inc
xchg
inc
xor
mov
std
inc
rcl
pop
pop
jl
int3
dec
mov
mov
cmc
daa
mov
aas
mov
push
adc
ret
outsb
jbe
jb
jle
sub
sub
movsb
mov
stc
sbb
push
inc
aas
jns
mov
xchg
push
push
or
mov
cwtl
inc
mov
mov
mov
mov
xchg
in
dec
mov
push
mov
mov
mov
vucomisd
and
sbb
pop
js
shll
sbb
adc
pop
cli
fimull
ror
lcall
call
das
jo
lea
mov
dec
sub
dec
jecxz
xor
out
fistpll
dec
mov
pop
aad
aas
mov
nop
test
cmp
ficompl
ret
sbb
mov
int3
aam
jg
dec
idiv
outsl
nop
or
test
add
outsl
fmull
loope
push
jp
sbb
loopne
mull
in
or
adc
aad
aam
xor
push
jns
sarl
mov
scas
pop
arpl
jne
loopne
pop
or
xor
push
sahf
xchg
js
adc
push
add
in
scas
fisttpl
or
pop
inc
mov
gs
sub
jae
add
sti
das
push
stos
lea
addr16
imul
cmp
sbb
cmp
outsb
cwtl
or
sub
repnz
add
insl
xlat
adc
mov
rorl
fcomps
cmpsl
xchg
loope
gs
insb
adc
adc
dec
push
outsb
mov
nop
mov
loopne
fmul
xor
loopne
mov
lret
adc
pushf
add
add
out
aaa
cltd
pop
or
cld
ret
sahf
add
jo
dec
fwait
jnp,pt
fldenv
push
cli
cmpsl
cs
lahf
inc
jmp
out
es
aaa
leave
add
pop
mov
cmpsb
int3
xchg
pop
cmovg
push
es
in
iret
jb
and
sahf
cli
cmovb
mov
push
gs
das
sti
push
scas
cltd
xchg
mov
stc
inc
pop
sbb
sub
adc
push
cmc
mov
sti
mov
push
mov
mov
pop
mov
jb
roll
dec
pmaxub
mov
xchg
dec
sbbl
xlat
inc
out
fidivl
repz
and
pop
stos
add
mov
push
and
push
add
adc
sti
fcoms
loope
das
push
jne
shlb
fistpll
cli
rorl
inc
jmp
add
outsl
pusha
xchg
sbb
lahf
into
sub
in
dec
jno
and
pop
cwtl
and
lahf
mov
cli
ret
jle
dec
loope
aad
mov
xchg
and
lea
rorb
aas
imull
mov
sahf
mov
jg
push
mov
in
xor
das
dec
push
sbb
mov
xchg
inc
rcll
add
dec
insb
pop
or
cmpl
dec
andl
mov
outsb
jge
and
nop
and
lds
or
lods
inc
ljmp
pop
pusha
mov
into
incl
aad
add
movsl
ja
outsb
test
or
xor
push
filds
cmpl
pop
push
fisubrs
sub
jbe
sbb
jno
push
mov
jbe
mov
ret
add
mov
jnp
pop
add
cwtl
insl
test
stos
mov
cmp
push
shlb
cmp
dec
aam
test
fstpl
xchg
dec
iret
stos
dec
mulb
js
cld
mov
les
cmpsb
jbe
faddl
loope
fstpt
cmp
enter
xorb
jmp
hlt
scas
xchg
imul
mov
jp
and
sbb
pop
jge
pop
xchg
xchg
cmp
xchg
jbe
mov
ret
xor
mov
outsl
cmc
loope
mov
and
jne
cmp
push
js
pop
scas
xchg
cs
adc
xor
push
mov
push
movsl
mov
cld
inc
mov
cmp
sti
and
outsb
sbb
cmpsb
and
mov
ds
insl
sbb
jp
nop
push
rcrb
out
inc
mov
dec
sbb
mov
and
inc
push
dec
pop
mov
clc
popa
or
fisttpll
xor
es
add
cmp
fcom
fimuls
sahf
ja
mov
jl
loopne
mov
xchg
inc
bsf
les
xlat
mov
push
iret
lods
pop
pushf
cmpsl
xchg
not
repnz
xchg
sbb
inc
xlat
out
das
push
lods
fwait
jmp
addb
xchg
movsb
dec
xchg
inc
fmull
or
stc
negl
mov
and
push
xor
pop
adc
cmp
pop
xchg
aam
cmp
stos
mov
xlat
in
loope
sub
lret
adc
es
jecxz
sub
push
cmp
cli
nop
pushfw
pop
sbb
icebp
xchg
adc
adc
hlt
mov
adc
cli
dec
sbb
pushf
nopl
ffree
mov
jg
and
mov
jmp
xor
push
xor
ss
in
or
test
adc
pop
test
fcoml
mov
inc
aad
sahf
fnsave
in
cmp
mov
cmp
clc
xor
mov
jge
popa
jno
scas
add
out
rolb
mov
mov
adc
and
rclb
fdivr
pop
dec
mov
pop
lods
push
cmp
xchg
aam
in
shrb
lods
and
adc
fcomps
aaa
scas
add
mov
jp
lret
or
test
jp
scas
rcrl
pusha
sahf
push
out
sbbl
jmp
fcmovb
test
adc
imul
xchg
cld
test
cmpl
out
mov
andb
sub
movsb
mov
test
push
sbb
adc
push
je
jl
dec
mov
cmc
cmp
cmp
xchg
cmp
add
xor
fimuls
ds
filds
daa
dec
sbb
cmp
xchg
xchg
sub
push
mov
fwait
in
shl
in
int3
fidivrs
push
sti
sbb
push
rorl
cmp
in
mov
cmpsb
jmp
sub
mov
into
aad
cwtl
fdivl
adc
popa
test
notl
das
ja
add
xor
mov
adc
mov
roll
lret
sbb
testb
or
out
mov
jo
pop
xor
or
data16
popf
lahf
xchg
es
mov
mov
enter
sub
or
adc
sub
jecxz
data16
mov
inc
pop
pop
jae
push
inc
sti
xor
pop
mov
es
add
adc
push
scas
sub
adc
pop
sbb
clc
iret
mov
mov
das
in
cmp
imul
aam
les
inc
jecxz
mov
xchg
mov
fwait
jae
xor
mov
addb
rorb
outsl
cmpl
test
dec
adc
xor
sbb
cli
add
dec
into
inc
adc
sub
pop
fisubrl
adc
in
mov
ficomps
in
inc
repz
sub
imul
xor
inc
repz
sahf
outsl
and
arpl
pop
scas
sbb
add
mov
inc
inc
out
outsl
jl
mov
scas
ja
rorl
and
outsb
aad
shlb
jb
js
int
pusha
les
aas
mov
push
xor
orl
repnz
imul
cs
pop
aaa
sub
push
test
fwait
mov
xlat
test
aaa
cmp
repz
mov
cmp
rcr
clc
cmp
or
in
incl
xor
dec
mov
or
lret
add
or
enter
adc
cmc
aad
inc
roll
aad
fstpt
mov
mov
nop
test
mov
aad
cltd
jnp
push
xor
mov
cwtl
jp
scas
cltd
scas
pop
fidivs
clc
jne
scas
mov
popa
lods
mov
adc
inc
jno
out
dec
andl
ja
in
scas
or
xchg
pop
loopne
dec
enter
clc
inc
lds
push
jbe
mov
dec
into
mov
popa
inc
inc
pop
int3
mov
pop
ss
push
xor
jge
cmc
shl
jg
je
in
adc
mov
insb
cmpsl
pop
pop
repz
fdivrs
or
xchg
add
addr16
jmp
es
jl
outsb
out
sahf
fwait
mov
jo
arpl
mov
inc
in
or
jmp
push
add
test
fldt
or
clc
lea
push
in
sbb
jne
push
xchg
or
sub
sub
mov
sti
jne
dec
push
mov
movsl
nop
mov
push
aad
mov
push
xor
fcom
ret
lahf
enter
les
add
lods
add
int3
jns
ror
mov
stos
mov
movsl
mov
dec
nop
or
push
cmpsb
nop
lret
xor
inc
int3
mov
fiaddl
push
insl
cmp
lahf
cmp
mov
fldl
fcomip
sarl
jg
and
loopne
xchg
dec
sbb
mov
xchg
xorb
inc
lret
push
lret
push
ljmp
dec
sub
in
mov
pop
dec
pop
cmp
idiv
ud1
xor
sti
fmuls
into
das
pop
pusha
mov
xlat
mov
jns
mov
mov
pop
imul
cmp
stc
mov
mov
out
jl
dec
push
push
jmp
mov
pop
xchg
clc
mov
cmp
dec
divl
sbb
cmp
and
dec
jmp
mov
xrelease
adc
outsb
icebp
inc
outsl
sti
ret
stos
add
pop
jae
bound
cmpsb
xchg
hlt
xor
fcoml
shll
and
imul
fadd
or
ret
cli
iret
xchg
fimuls
lods
and
dec
sti
pop
pushf
and
movsl
dec
sarl
rorb
pusha
jno
out
and
push
incb
dec
leave
inc
xchg
js
imul
add
xchg
mov
adc
loope
mov
mov
jbe
jl
sub
dec
imul
adc
cmpl
decb
test
cmp
cmp
jbe
outsb
sbb
pusha
test
hlt
pushf
and
jl,pt
mov
xchg
jnp
mov
nop
aas
jmp
inc
adc
std
ds
adc
dec
rorl
jge,pn
and
mov
add
fdiv
push
aad
lcall
in
pusha
rorl
decb
test
cmp
cmp
mov
jmp
mov
leave
push
lret
or
clc
push
repnz
inc
inc
dec
cs
fbstp
sub
jno
mov
inc
rcrl
das
pusha
clc
sub
lret
and
rcll
sub
call
je
faddl
cmpsl
aaa
insb
in
sahf
mov
pop
enter
test
test
popa
hlt
mov
subb
loope
in
xor
cmc
fstpl
popf
cmpl
pop
and
mov
push
sbb
lahf
mov
dec
adc
mov
stos
in
and
dec
addl
mov
fisubl
cs
sub
xor
cmpl
and
adc
gs
mov
mov
xor
loope
adc
imul
bnd
scas
mul
dec
or
into
push
lret
jne
orl
out
xor
pusha
xchg
and
cmp
mov
out
out
jecxz
cmc
inc
aaa
or
mov
daa
xchg
arpl
sbb
jbe
popf
lret
std
cltd
mov
lock
sbbb
shrb
shrl
jae
sar
or
out
ja
sub
lret
ror
out
arpl
repz
les
lcall
ja
push
pop
mov
sub
outsl
push
cmp
mov
mov
aam
inc
stos
adc
adc
out
loop
rcrb
test
stc
jle
mov
add
stc
js
sbb
testb
mov
fstpl
xor
cmp
mov
into
inc
adc
and
or
gs
scas
pop
stos
rcrb
roll
iret
adc
test
sbb
push
sbb
dec
mov
addl
out
daa
lock
sbb
loope
icebp
js
pop
repz
sbb
sbb
ficoms
mov
adc
sbb
push
lret
out
inc
push
ret
sub
scas
jg
sbb
dec
sbbb
sbb
lret
adc
dec
jbe
cld
jl
jno
mov
mov
imul
sbb
scas
cli
sbb
movnti
jo
hlt
mov
sub
subl
xrelease
pop
xchg
daa
and
fiadds
pop
cmp
mov
xchg
or
jge
push
das
ds
lahf
clc
jb
imul
adc
or
adc
sbb
imul
pop
mov
pop
repnz
pop
jns
pop
stos
sub
stos
adc
adc
mov
cmpsl
enter
loopne
or
and
pop
jae
jmp
sahf
arpl
pop
nopl
push
jmp
jmp
adc
mov
shl
mov
nop
jmp
xchg
cmp
dec
fnstcw
imul
call
scas
xchg
int3
dec
aam
jl
lea
insl
stos
decb
shlb
insl
pop
flds
int3
mov
xchg
push
lea
push
ljmp
ja
mov
mul
mov
xchg
jne
or
xchg
xchg
es
lds
mov
cmpsb
repz
lods
imul
xchg
je
in
xchg
dec
mov
push
xor
cwtl
cmpsl
add
call
mov
and
push
popa
mov
xchg
leave
xchg
dec
fimull
call
jge
ja
pop
or
pop
push
aaa
in
stc
cmpsl
push
pop
push
sarl
pusha
clc
aaa
cmp
jmp
sbb
je
add
dec
xor
outsb
lret
das
ljmp
mov
out
testl
movsl
call
lock
xor
rorl
pop
mov
add
stc
adc
mov
dec
adc
fsts
jmp
sarb
loopne
push
jmp
dec
roll
dec
mov
push
push
popf
pop
nop
and
call
shrl
push
loope
ret
pop
fiaddl
rcr
dec
push
sbb
xor
jg
mov
mov
adc
or
push
mov
mov
mov
scas
pop
lea
inc
mov
sub
cmpsb
pop
int3
xor
sbbb
cltd
test
mov
loope
dec
out
adc
test
jg
fsubrs
mov
jl
add
ret
xor
or
mov
nop
pop
repnz
cmp
inc
je
jnp
inc
or
fcompl
cmp
and
les
cwtl
mov
xchg
cmp
push
inc
js
test
pushf
mov
ds
inc
mov
jp
addl
pop
lock
test
into
inc
dec
arpl
jno
leave
xchg
loopne
xchg
mov
outsb
xchg
inc
push
outsl
mov
mov
scas
into
movntps
mov
mov
xor
bound
nop
outsl
bound
xchg
clc
addr16
fisttpll
cmp
mulb
pop
inc
and
icebp
add
jbe
adc
push
sub
je
test
or
push
dec
cmp
mov
pop
leave
in
lahf
push
mov
add
fiadds
pop
sbb
mov
out
mov
dec
lahf
sahf
add
dec
xor
adc
int3
sbb
cmpsl
add
mov
movsl
pop
dec
cmp
push
out
xchg
and
fisttpll
or
mov
clc
dec
shll
fnstsw
out
fwait
insl
mov
movsb
movsb
pop
push
pop
or
sbb
pusha
movsl
mul
xchg
js
loopne
sarl
sbb
inc
jns
adc
bnd
ret
jae
pop
xchg
and
test
movsl
push
sbb
xor
and
aam
popf
je
loope
xchg
and
and
xchg
bound
rolb
movsl
and
push
js
push
test
test
mov
sahf
add
out
test
repnz
xor
enter
js
adc
push
jg
mov
fisttpll
add
adc
in
push
loopne
aas
or
fcmovnb
inc
sbb
dec
dec
xchg
js
lea
sti
xchg
gs
js
int3
sub
cmp
push
andb
fwait
pop
add
or
or
pusha
dec
cmp
push
dec
push
dec
cmp
sub
scas
add
int3
cli
cmp
push
pop
jo
and
push
loop
mov
lcall
pop
xor
outsl
stos
or
jae
mov
mov
pop
leave
mov
in
iret
rclb
adc
mov
jnp
push
icebp
test
xchg
inc
inc
mov
add
test
mov
add
es
mov
outsb
and
add
aam
std
into
cmpsl
pop
xor
testl
fmuls
pop
adcl
push
lods
mov
mov
mov
int3
shlb
repz
jecxz
adc
jb
xlat
inc
mov
or
push
mov
mov
mov
jns
std
push
adc
xor
mov
test
mov
outsb
or
mov
sbb
adc
out
mov
mov
jo
outsl
and
roll
sbb
sub
inc
lret
test
fnstcw
fcmovne
add
out
mov
scas
out
orb
iret
loopne
xor
push
sbb
cmpsb
push
pop
mov
in
xorb
int3
enter
inc
mov
lret
push
push
xchg
cmp
mov
inc
jp
mov
mov
leave
pop
outsb
fstps
pop
das
jo
leave
filds
insb
sub
rcrl
test
imul
fadds
add
stc
mov
sbb
stos
jno
mov
jp
leave
and
ja
ret
mov
or
das
mov
pop
push
push
test
aaa
push
loopne
inc
and
orb
sahf
mov
add
lret
xchg
lods
mov
fmuls
push
lds
mov
daa
jae
mov
or
dec
add
mov
add
or
dec
fisubs
cmc
loope
push
push
rcl
add
pop
or
cmp
cs
push
cmc
and
in
mov
loope
and
jns
std
inc
addr16
cmc
mov
xchg
out
jp
push
cmp
outsl
jno
popf
sub
adc
push
push
lcall
test
xor
cmpsl
jecxz
mov
outsl
mull
fcmovb
repnz
iret
dec
lahf
test
pop
out
mov
scas
mov
out
mov
outsb
pushf
inc
push
fidivl
xor
movsb
stos
dec
add
cmp
lods
dec
ja
scas
mov
push
push
jne
stos
xchg
pop
sub
fsubs
sub
andl
in
aaa
movsl
sbb
out
shll
cltd
adc
test
jnp
sub
xor
popf
sbbb
filds
xor
loopew
adc
mov
test
movsb
stc
or
orl
add
mov
in
loopne
push
add
pop
xor
je
sarl
jbe
insb
mov
adcl
ds
sbb
jb
adc
pop
imul
pushf
cmp
and
sub
pop
insb
or
cmpsb
xor
pop
enter
std
jg
jae
in
popa
add
out
std
push
sti
pop
lock
mov
push
imul
jns
or
inc
fists
mov
cmpsb
neg
movsb
mov
dec
push
jb
jnp
adc
shl
cmpsl
icebp
shlb
loope
xchg
arpl
mov
je
xor
sbb
int3
test
repnz
inc
xor
inc
push
fcomi
and
ret
xchg
pop
and
cmovne
cmp
sub
mov
js
sub
push
pop
or
mov
inc
xchg
dec
dec
xor
ret
mov
jmp
sub
mov
pop
mov
cmc
aad
loop
mov
mov
add
bound
xchg
insl
rcll
push
adc
ret
xor
inc
xchg
lret
sbb
xor
mov
or
jmp
lods
mov
dec
mov
push
sub
outsb
push
jns
push
push
out
cmp
lea
sub
test
popf
adc
cmp
cmp
cld
fnstsw
imul
and
cmp
das
add
lods
addr16
or
mov
add
mov
lea
fildl
mov
mov
in
and
cld
ljmp
push
mov
jnp
mov
movsb
pusha
in
sbb
add
jl
inc
jne
and
gs
cmp
jmp
leave
lea
jbe
clc
je
xlat
ljmp
xchg
add
dec
adc
retw
mov
sub
or
lret
ljmp
shlb
jns
or
xor
rcll
adc
add
cvtps2pd
movb
jo
dec
xchg
imulb
das
dec
xchg
sahf
and
xchg
xor
in
scas
ficompl
mov
rorl
push
stos
cmp
cmp
sbb
subb
xchg
rcrl
in
pop
sahf
and
inc
jmp
test
test
cmp
stos
mov
mov
mov
or
jno
push
push
call
les
popf
cmpsb
pop
inc
xchg
int
out
jg
outsl
lea
dec
sbb
repz
std
add
cmp
test
sub
ja
test
cmp
mov
shll
fidivs
test
negl
shrl
xchg
jo
rolb
jp
imul
xchg
sbb
pop
pop
push
jg
cld
push
or
dec
add
inc
push
cmc
add
jg
loop
scas
xchg
inc
mov
aaa
mov
scas
sbb
icebp
in
mov
cmpsb
aam
cmp
imul
andl
mov
in
adc
mov
cmp
dec
shrl
lahf
xlat
jnp
test
mov
xchg
or
jb
shrb
imul
cltd
sub
sbb
pusha
jbe
mov
jle
mov
sbb
mov
cmp
repz
adc
dec
call
sub
test
jnp
lock
stos
or
sbb
mov
add
in
inc
xchg
lods
and
fidivs
jo
ds
xchg
outsl
jbe
stos
frstor
inc
fwait
imul
stc
repnz
mov
push
jns
mov
je
adc
pop
fnstsw
std
or
push
mov
scas
call
xor
loope
int
push
jle
js
pop
cmpsl
and
ss
test
mov
push
xchg
data16
mov
cli
lock
fstps
cmp
sub
js
or
jp
sbb
in
cmp
inc
mov
subl
cmp
mov
scas
inc
or
dec
arpl
pop
xor
notb
xor
adc
pushf
jl
adc
lods
push
data16
insb
xor
out
cld
mov
jne
and
jecxz
stos
cmp
sbb
jae
dec
outsb
push
jne
nop
ror
sbb
adc
out
aad
stc
jnp
gs
mov
cmp
jbe
add
sub
popl
je
pop
mov
ss
lea
sahf
add
scas
xorb
dec
cld
cmp
clc
adc
mov
bound
shlb
inc
push
mov
xchg
pop
pop
divb
cltd
dec
lods
add
sub
cmp
lret
push
pop
data16
insl
mov
or
cmp
je
jmp
add
xor
mov
orb
inc
lahf
sbb
xor
pop
js
rcrb
cmp
in
mov
cwtl
call
loope
mov
fcoml
mov
dec
stos
dec
sbb
mov
mov
mov
adc
out
xchg
repz
or
pop
push
fists
mov
fldenv
loopne
add
mov
flds
xchg
insb
lea
repnz
lahf
in
cltd
dec
inc
scas
pop
fcos
je
mov
pop
das
insl
and
jnp
push
cmp
push
mov
addr16
insb
adc
pop
pop
fistpl
outsb
aas
stos
cmp
leave
cmpsl
cs
mov
cmp
ja
fidivrl
lret
sbb
mov
bound
push
and
jp
scas
or
lea
int
sub
pusha
out
int
imul
xor
fnstsw
dec
scas
push
push
mov
call
test
clc
out
xor
lds
ss
pop
jecxz
cmpsb
sub
add
add
aas
sbbl
dec
lcall
adc
outsl
int
movsl
sbb
mov
aaa
pop
repz
hlt
cmpsb
dec
lods
mov
cmp
cmp
sbb
bnd
jmp
je
pop
imul
aad
daa
mov
xchg
outsl
roll
sbb
or
mov
adc
out
sub
mov
push
jl
lds
clc
dec
arpl
sub
add
lock
jae
mov
add
push
cli
jge
es
cmp
mov
fidivrs
mov
ja
xchg
aad
outsb
in
or
jg
xchg
pop
add
stos
push
lret
inc
and
test
aam
bound
test
addr16
sub
es
int3
cmp
and
or
jo
adc
and
jp
pusha
rcr
jl
jmp
adc
sahf
jl
mov
je
mov
sar
push
sbb
fs
add
and
lds
movsb
cmovae
cmpsl
shl
inc
dec
flds
and
pop
movsl
mov
mov
sahf
or
sbb
mov
inc
insb
add
jae
pop
fstl
jg
pop
push
xchg
ja
lods
jne
cltd
out
les
sbb
and
mov
arpl
pop
inc
andl
or
cmp
inc
nop
xor
pop
enter
mov
inc
jns
icebp
movsl
icebp
or
mov
mov
pop
out
sarb
sbb
fldcw
pushf
xor
add
mov
xlat
imul
or
sub
xor
dec
sarl
adc
inc
imul
dec
sarb
cmpb
ds
std
call
mov
inc
cmp
shl
xorb
fnstcw
shlb
mov
dec
sub
adc
mov
mov
ljmp
push
bound
xor
jge
cmc
xchg
mov
pusha
adc
and
xchg
xchg
ds
push
rorl
notw
out
lahf
mov
jle
add
insb
jo
pop
call
mov
sub
stos
push
fadds
fs
jmp
pop
lret
xlat
sub
test
pop
in
cmc
das
ss
pop
std
int3
and
xchg
jmp
les
leave
pushf
int
mov
dec
es
jl
pop
xchg
xor
push
out
dec
ret
push
divb
movsb
rcrl
mov
out
stos
std
push
and
and
mov
jg
push
adc
lahf
xor
loop
xchg
lcall
mov
jno
gs
ret
or
lds
lret
sbb
iret
mov
or
out
jno
and
pop
cs
rorl
jle
mov
jl
xlat
and
adc
mov
popf
aas
adc
push
mov
xchg
xchg
aad
sbb
cmpsb
add
xchg
pop
mov
mov
add
mov
testl
aad
fs
lret
jp
xor
sbb
in
loope
call
xchg
test
lret
sarb
or
push
addl
push
popa
test
gs
sbb
adc
dec
inc
mov
xor
aam
int3
inc
rorl
xchg
lcall
rcrb
dec
lret
cmpsl
xchg
cmp
std
shll
dec
pusha
push
jo
mov
pop
inc
sub
push
test
hlt
push
ljmp
adc
and
and
jl
out
add
ss
out
push
jg
mov
dec
and
bound
cld
pushf
es
imul
call
push
sub
mov
int
mov
jnp
dec
mov
sbb
mov
aad
and
add
into
pop
cmc
mov
popa
enter
cli
int3
out
adc
sub
pop
mov
adc
addr16
mov
pop
dec
cmp
mov
pop
out
repnz
cmpsl
inc
push
shll
out
js
and
add
inc
push
imul
adc
test
sub
xchg
mov
lahf
aaa
push
lods
mov
lds
mov
push
mov
popf
xchg
mov
xchg
cmpsl
loop
dec
ret
and
sub
mov
pop
clc
adc
rclb
ret
inc
adcl
repz
popa
ja
mov
add
and
pop
push
mov
lahf
pop
aaa
and
push
xlat
mov
rcrb
sub
sub
or
scas
fstps
xor
mov
push
or
push
dec
add
cmpsl
rcll
adc
fs
lcall
dec
sbb
jg
pop
std
lds
sub
loop
rcr
sti
jbe
add
dec
xchg
iret
insl
frstor
jge
xor
jmp
mov
cmp
ss
and
add
push
xor
xchg
push
lahf
adc
jne
inc
sbb
sub
push
mov
mov
or
cmp
pop
xor
loope
jnp
out
inc
add
adc
push
fwait
adc
xchg
and
insb
loope
jb
or
or
clc
mov
xor
rcr
xchg
mov
pusha
out
loopne
xor
lcall
sbb
dec
andl
rorl
imul
ss
sbb
mov
mov
mov
je
jmp
mov
mov
jmp
cmp
ja
ja
xchg
xchg
sub
into
ret
stos
outsb
sbb
jp
pop
jp
fdivrl
jb
and
out
btc
or
insl
push
mov
adc
mov
ret
sub
jae
pop
adc
arpl
cmpsb
pop
shll
mov
inc
repnz
addr16
jl
pop
mov
loop
sbb
jp
cmp
push
and
xor
gs
ja
inc
out
sti
fbld
jns
sahf
inc
aam
lret
test
push
jge
mov
xchg
lcall
adc
stos
jns
aaa
and
mov
pop
mov
addl
and
enter
ficoms
jl
daa
and
ret
in
ja
fldt
sbb
clc
and
or
or
cmp
es
sbb
out
nop
sub
dec
mulb
and
adc
sub
movb
stos
mov
lahf
loope
or
mov
mov
imul
in
insb
sbb
repz
lock
xchg
movsb
es
outsl
je
pop
inc
jmp
gs
or
cld
movsb
or
xchg
addr16
pop
out
daa
or
pop
add
lcall
push
dec
movsl
or
mov
add
push
pop
sbb
mov
mov
mov
xchg
sbb
insl
push
lahf
aad
push
jb
mov
std
js
xchg
pushf
fwait
pushf
jle
inc
test
add
sbb
test
jae
sbb
mov
ficoml
or
cmp
pop
xor
and
xor
pushf
aad
mov
sbb
cld
push
pop
pop
mov
addl
pop
clc
dec
cltd
xchg
adcb
add
cmp
xchg
rolb
lcall
sub
pop
in
and
xchg
ret
inc
lods
shlb
or
xlat
scas
mov
jb
lret
test
dec
inc
cmp
xchg
lret
lcall
add
dec
inc
push
fmul
fmuls
inc
stos
xor
cmpsl
iret
scas
sub
xor
adc
sbbb
pop
cmp
movsb
dec
in
out
lahf
inc
in
or
jg
outsl
dec
ret
movsb
sbb
ret
push
sbb
sbb
mov
adc
sub
push
aad
add
mov
lods
cld
roll
xorl
jle
jae
repnz
jmp
pop
pushl
fldl
sbb
push
xor
rorb
xchg
and
inc
jae
push
je
sbb
in
mov
popf
mov
in
mov
sbb
add
fucomi
sbb
mov
mov
mov
jge
or
fs
lea
mov
out
dec
sbb
inc
jns
imulb
addr16
movsl
or
push
clc
and
mov
jl
mov
push
jbe
inc
sbb
mov
pop
pop
mov
pop
xchg
mov
and
push
rcr
test
push
pop
fsubrl
push
and
xor
gs
shrw
shll
movsb
mov
or
out
shlb
cmp
mov
push
test
jne
hlt
jnp
divl
mov
mov
push
adc
xlat
test
sub
mov
lods
mov
adc
mov
lcall
clc
dec
and
jecxz
jp
or
jle
shll
jns
add
addr16
pop
xchg
mov
or
pop
dec
lods
in
sub
cltd
gs
rcrb
out
xchg
push
mov
push
pop
and
sub
dec
mov
ret
stos
push
inc
mov
or
cmc
sub
pop
pop
cmp
cld
sub
and
jg
in
fildl
xlat
and
decb
cmc
cmc
cmc
mov
pop
ffreep
xchg
pop
popf
pop
jne
jb
xor
sahf
repz
dec
and
fstl
add
mov
and
or
adc
ret
addr16
sub
out
xchg
xchg
inc
add
mov
int
jl
stc
push
pop
inc
sbb
pop
hlt
xor
mov
orl
push
xor
push
negl
mov
push
cmc
sub
mov
pop
dec
adc
scas
pusha
jle
jp
add
cmp
fs
and
inc
rcll
push
push
mov
mov
push
pop
add
imul
mov
adc
fdivl
fnstcw
int
adc
in
lods
popf
adc
test
push
in
jecxz
dec
pop
and
pushf
mov
or
jae
adc
aam
mov
inc
fisubl
adc
pop
sahf
orl
or
mov
sbb
cmp
jmp
hlt
ret
scas
or
sub
lret
push
inc
test
shr
or
pop
cmp
int
add
scas
adc
mov
ss
aam
mov
loopne
jge
es
and
enter
xchg
cmpsl
and
lock
pop
add
mov
mov
pushl
add
mov
insb
jno
xor
add
clc
lods
loopne
fdivr
push
out
aas
dec
mov
jb
mov
lahf
sbb
mov
xchg
jns
lahf
pop
mov
lcall
push
lds
bound
push
aaa
cwtl
es
jge
add
shl
int3
or
popa
rcl
push
push
cwtl
xor
adc
sub
adc
mov
je
dec
ret
fs
sarl
mulb
and
jb
test
xchg
dec
cmc
xchg
lea
daa
or
jp
test
test
add
imul
in
fists
inc
test
and
and
lcall
or
stos
jo
aam
push
scas
inc
aaa
js
lret
shrb
cmp
jns
xchg
fidivrl
dec
cmc
jmp
push
cmp
bound
ret
mov
int3
cli
lds
daa
cmpl
mov
icebp
movsb
imul
call
pop
xchg
jp
in
mov
jb
dec
xchg
js
pop
cmpsl
adc
dec
repz
push
sarb
mov
mov
pushf
pop
dec
push
pushf
jne
imul
pop
adc
movsl
sahf
lret
pop
add
sbb
es
shll
js
add
cs
mov
cmp
push
sbb
aaa
lock
cli
mov
outsb
jnp
xlat
mov
inc
sbb
pop
loopne
scas
test
push
lret
pushf
lret
divl
jl
push
xor
flds
pop
fisubrs
cmp
inc
mov
aas
out
into
lods
jo
sub
shr
xor
add
das
push
aam
push
sbb
pop
lea
sti
pop
pop
mov
sar
add
mov
push
pop
mov
call
jno
cld
mov
jecxz
or
dec
testl
aad
mov
shll
stos
push
pop
sahf
das
sub
fwait
push
popa
push
mov
jae
jno
inc
pop
into
outsl
pop
ja
ret
fcoms
sahf
daa
sti
adc
cwtl
or
and
push
stos
lcall
push
insb
adc
popf
lods
mov
inc
lds
push
sub
xchg
sarb
mov
sbb
jge
ss
fists
xchg
pop
mov
push
imul
in
cwtl
je
pop
lahf
test
cltd
cmc
push
les
in
pop
jnp
sarb
push
imul
stos
xchg
pop
add
mov
fs
pop
pusha
lret
mov
cmp
stc
xor
adc
adc
xchg
or
ljmp
nop
or
lock
enter
xchg
cmp
xchg
push
add
xchg
int
outsb
cltd
shrl
iret
jb
in
ja
loopne
pop
cmc
je
inc
mov
pop
mov
iret
call
shlb
sbb
fcomps
mov
sarb
cltd
push
mov
in
pop
pushf
testl
shll
hlt
inc
fs
xchg
mov
or
and
rcrl
fcmovu
push
ret
xchg
gs
adc
inc
pop
stos
mov
sarb
and
cs
pop
jno
mov
dec
mov
mov
int
jl
adc
hlt
add
out
mov
leave
aaa
sub
jp
mov
dec
adc
sahf
push
clc
sbbl
xor
imul
loopne
das
in
sbb
inc
push
es
imul
mov
sbb
and
dec
dec
push
gs
pop
adc
mov
jns
lods
fsubr
aaa
add
adc
inc
fstl
ja
call
cs
push
inc
out
mov
push
rolb
movsl
cmp
and
inc
or
push
out
mov
jae
push
mov
add
pop
pop
fistl
ds
and
out
aam
loopne
sbb
imul
mov
aaa
inc
pop
add
mov
fists
into
sbbb
outsl
test
fsubrs
test
hlt
sti
inc
in
jmp
sub
xchg
ret
xchg
das
data16
inc
sbb
fwait
ja
dec
mov
sbb
push
xlat
sub
sbb
jge
mov
cld
popf
subb
push
mov
mov
xchg
xchg
inc
mov
popf
lret
flds
inc
pop
std
stos
loopne
push
pop
add
add
pop
push
push
lret
in
pop
jmp
loop
sub
out
push
mov
mov
lcall
push
lahf
and
adc
ret
push
inc
fs
mov
fcomip
cltd
inc
out
leave
cmpsb
jnp
adc
sahf
scas
adc
shll
pop
inc
inc
push
inc
ss
xchg
cmp
or
add
lock
leave
mov
or
imul
or
out
jo
int3
add
sbb
mov
clc
stos
xor
hlt
sub
cmp
push
fcmovne
dec
xchg
lcall
dec
fwait
test
ficompl
divb
or
loopne
pop
or
orb
movsb
dec
jecxz
and
adc
sahf
jl
outsb
ds
shrb
pop
in
rcrl
push
shll
imul
into
cmpsb
xchg
inc
or
out
sub
and
sarl
out
ljmp
mov
dec
mov
cwtl
addr16
adc
enter
lods
or
ret
mov
pop
inc
imul
inc
pop
stc
jbe
or
add
daa
popa
clc
in
je
test
jo
dec
imul
stos
in
pop
rclb
jno
mov
sub
push
cmpsb
ja
xor
push
inc
outsb
popf
popf
fs
push
mov
xchg
and
xor
pop
mov
aam
fstl
xor
mov
imul
mov
popf
pop
int3
aaa
cmpsb
jo
inc
push
mov
addr16
out
and
enter
pusha
mov
cmp
not
dec
or
clc
xor
aas
add
std
push
leave
jmp
imulb
add
popf
pop
aaa
jno
jbe
pop
test
push
sub
sub
adc
cmp
jnp
dec
jns
xor
add
inc
jno
ja
xchg
cmc
add
xchg
jmp
in
pop
mov
add
test
xchg
jnp
movsb
insl
xchg
push
ficoms
pop
push
rcl
pop
inc
lret
mov
jl
and
popl
inc
mov
inc
popa
or
adc
dec
and
sub
out
sbb
cmp
je
iret
xor
mov
fwait
test
pop
cmp
jne
out
repnz
out
inc
inc
adc
ret
mov
mov
xor
sub
cmp
cmp
in
xchg
dec
mov
inc
inc
push
adc
add
or
pop
repnz
repnz
fsubl
lahf
mov
shl
jb
imul
movsl
inc
nop
into
in
pop
and
or
pop
mov
mov
pop
jae
or
mov
stos
sub
jmp
lods
aas
fmuls
inc
xchg
xor
cmp
ret
lock
xchg
adc
jbe
xor
lcall
or
cmp
popa
add
scas
mov
dec
int3
push
add
xchg
pusha
xchg
mov
daa
and
mov
adc
sub
leave
ss
sub
sub
inc
add
dec
ljmp
scas
arpl
icebp
mov
xor
cltd
shll
and
int
es
mov
mov
mov
mov
mov
sub
xchg
cltd
xor
in
imul
idivl
sti
jle
push
sub
pop
jmp
mov
nop
addr16
imul
sub
xchg
mull
leave
and
add
inc
mov
es
xor
loop
leave
mov
cmp
clc
cmpsl
add
pop
jb
pop
shll
sti
xchg
sahf
popa
movsl
cmp
test
std
js
rcr
aaa
sbb
dec
push
leave
aam
or
jnp
xor
scas
pop
and
cmpsl
lcall
loope
lds
divl
iret
daa
mov
fwait
int3
mov
mov
daa
fnstcw
jnp
in
fisubl
or
jo
shl
cmp
adc
pop
cmp
lea
ja
jb
mov
cmp
es
pop
subb
sbb
mov
sbb
enter
mov
imul
cmpsb
stos
jnp
arpl
inc
mov
sub
mov
push
lcall
inc
dec
les
mulb
das
cltd
imul
arpl
jmp
xor
sub
lret
adc
inc
sub
add
cmp
mov
or
jg
mov
mov
push
stos
sub
sub
dec
dec
or
mov
in
mov
xor
mov
push
push
mov
pop
outsb
fldenv
stc
pop
pop
inc
sti
leave
outsb
hlt
fdivrp
push
push
cmpsl
bound
push
sbb
lahf
cmpsb
add
jbe
xor
mov
sub
arpl
jge
pop
sbbb
leave
sbb
add
cltd
and
das
pop
incb
fistpll
hlt
mov
add
mov
test
addr16
pop
push
movb
mov
pop
and
or
lcall
pop
mov
iret
cli
andb
and
sub
fldl
adc
les
sbb
and
mov
xlat
movsb
sbb
cld
test
xchg
subb
push
or
inc
cwtl
pop
push
lret
or
scas
sub
fidivrs
push
cmp
jmp
inc
scas
test
xor
cmpsl
add
js
aam
imul
xor
dec
fst
lods
nop
clc
out
sbb
jge
repz
arpl
mov
or
push
leave
bound
in
xchg
aas
jmp
lea
rolb
enter
jae
add
dec
packssdw
sti
pusha
sub
pusha
mov
jb
push
rorl
pop
aas
orb
jnp
pop
cltd
jecxz
adcb
rolb
cmpsl
leave
push
pop
and
lahf
mov
adcl
lods
insl
subb
call
pop
cmc
inc
sahf
stos
jo
bound
xchg
push
adc
fisttpl
test
lahf
mov
sub
jecxz
hlt
xchg
mov
lock
xchg
adc
mov
pop
icebp
sbb
rcll
test
insb
lret
mov
mov
ror
fs
jecxz
das
stos
jae
lret
stc
cltd
rcrl
pop
lahf
stos
in
lods
shl
dec
cmpb
or
lds
mov
xchg
ljmp
nop
sbb
jne
mov
test
xor
bound
fistpl
xor
jp
stos
jb
add
mov
insl
out
outsl
iret
movsl
xor
add
dec
popa
mov
mov
lret
add
in
cmp
xrelease
add
xchg
mov
sub
xchg
fildll
add
imul
push
inc
sbb
xchg
adc
push
dec
mov
jne
icebp
out
fs
xchg
dec
idivb
es
and
loope
and
adc
loop
fwait
outsb
fs
out
daa
jno
push
push
add
into
sub
in
pop
dec
iret
loop
scas
movsb
cmc
mov
leave
push
mov
pop
leave
shrb
jno
push
dec
xchg
outsb
ret
xchg
push
dec
xorl
or
cmp
inc
pop
sub
movsl
push
mov
js
push
lods
inc
pop
ljmp
or
xor
dec
xchg
lods
cmp
sub
xchg
sub
and
or
mov
jno
lret
mov
js
inc
testl
dec
inc
push
repnz
outsl
sti
push
and
jg
and
sub
push
sbb
mov
repnz
push
sub
mov
adc
pop
ret
pop
dec
mov
cmc
pop
pop
xchg
sbb
jns
cmc
loop
imul
sahf
xor
mov
push
add
cli
add
push
mull
add
cmpsb
mov
loopne
mov
mov
fistps
lock
aad
shr
push
push
sahf
dec
vmovsd
push
cmp
jbe
fimull
mov
cld
or
inc
mov
movsl
push
es
mov
inc
jnp
jb
or
push
sbb
sbb
dec
imul
fwait
dec
mov
mov
jnp
stos
pop
lods
add
sub
or
jb
enter
jecxz
lcall
sahf
push
sbb
push
pushf
fld
mov
aas
xchg
aas
mov
repz
loop
not
out
inc
aad
lods
stc
cltd
inc
sub
enter
dec
xchg
enter
add
sub
push
push
stos
flds
ljmp
lock
and
pusha
call
jmp
cmpl
and
dec
and
lcall
popf
push
mov
dec
push
pop
inc
in
sbb
mov
push
shrb
xlat
in
movsb
mov
xchg
imul
test
call
jmp
pop
ja
out
push
test
sbb
pushf
lcall
jle
and
daa
lods
jbe
and
mov
cltd
mov
xor
test
push
js
fimuls
shrl
add
mov
lds
mov
sub
leave
fdivs
jg
scas
add
rclb
loope
mov
shl
repnz
sahf
jae
xor
xchg
imul
cltd
sub
xor
inc
cli
sub
pop
pop
push
je
imul
call
and
in
pop
push
inc
pop
mov
fistpl
jecxz
ret
pop
iret
or
pop
outsb
call
pcmpgtb
test
or
fsubrl
xor
sahf
cli
mov
insl
fsubl
inc
mov
cmc
loop
js
xor
pushf
mov
push
bnd
dec
cmp
jl
lcall
mov
cmp
shlb
and
fs
shrb
std
ror
xabort
aad
out
dec
or
mov
inc
adc
shll
enter
imul
aad
stos
xchg
popa
and
add
dec
arpl
jns
imul
mov
cmp
add
sub
cli
mov
or
insl
jl
inc
jmp
jae
in
cltd
pop
push
mov
je
fwait
xchg
push
gs
jae
sti
jns
stos
dec
push
fcmovne
xchg
push
mov
pushl
sbb
nop
pop
pop
stos
xchg
cmp
adc
icebp
mov
jmp
lahf
sub
push
aad
in
pop
or
mov
xchg
mov
test
loope
push
push
not
adc
cmc
jo
pop
cltd
xor
dec
mov
xchg
ret
xor
or
imul
cwtl
push
mov
cmp
mov
jns
scas
xchg
sbb
mov
sub
clc
dec
cmpb
push
repnz
std
out
stc
cmp
sub
cltd
andl
jle
ds
adc
pop
mov
popf
or
fstpt
mov
enter
jle
divb
mov
jnp
dec
and
lds
jle
sti
fstl
jo
mov
mov
sub
sub
stos
jmp
sahf
outsl
xchg
sbb
loop
sbb
fwait
pop
ret
xchg
addr16
int3
or
pop
ja
inc
inc
in
test
add
in
movsb
xchg
inc
mov
outsb
xchg
les
ljmp
mov
bnd
scas
cld
pop
setbe
fimuls
push
shld
lret
dec
rolb
ret
add
call
jne
fisubrl
rcr
pop
pop
pop
andl
mov
push
imull
mov
lea
jae
cltd
hlt
cmp
call
fidivrs
xchg
lahf
lcall
and
ltr
push
test
dec
adc
int3
xchg
or
mov
sub
aam
push
mov
sbb
xchg
and
ljmp
or
jnp
xor
mov
aas
sub
add
lcall
inc
mov
inc
push
sbb
adc
xor
push
pop
lock
enter
testb
mov
mov
test
xchg
pop
jae
add
add
stos
jecxz
inc
jo
xchg
lahf
jl
fistps
push
sub
cmp
xchg
mov
dec
scas
pop
sub
xor
rolb
leave
imul
cmp
cmp
pushl
pop
sub
out
mov
daa
xchg
hlt
mov
jmp
jge
xchg
and
int
inc
jno
xor
arpl
mov
pushf
jne
push
mov
aad
sbb
pushf
push
faddp
negb
insl
sub
mov
mov
push
movsl
dec
inc
xorb
mov
dec
fadd
lret
cld
mov
shlb
jmp
ds
cmpsl
in
or
xchg
mov
dec
sti
cltd
cmp
subb
out
push
xchg
loop
mull
pop
jno
adc
dec
dec
shrb
and
mov
test
inc
push
subb
sub
pop
push
pop
mov
cwtl
icebp
xchg
adc
shlb
or
or
cli
cmp
dec
popf
shrl
add
xchg
or
roll
pop
and
sub
je
push
data16
xchg
sbb
mov
mov
sti
pop
cmpsw
out
inc
mov
std
icebp
sub
test
dec
mov
dec
jne
inc
and
cmp
addr16
xor
mov
mov
addr16
xchg
sub
lea
mov
mov
adc
rcll
xchg
rcrb
push
xchg
sti
and
repnz
test
movsb
mov
xor
pusha
imul
xchg
dec
sbb
sbb
dec
push
mov
int3
repz
xchg
data16
cli
xchg
push
sub
sbb
mov
push
addl
stc
cltd
outsl
insl
xorb
cld
sub
insb
cmc
push
cmp
or
loope
sbb
sub
out
or
mov
xor
leave
pop
sarb
int3
pop
mov
inc
sbb
jg
and
xchg
lcall
mov
leave
in
pop
les
mov
and
pop
mov
outsb
jb
js
sub
cmp
cltd
stc
pop
in
push
aad
ljmp
push
push
fwait
hlt
jbe
sbb
or
lds
mov
aam
adc
ja
push
pop
sarb
dec
int3
sub
and
and
fs
icebp
pop
jo
adc
mov
cmpsb
lds
xchg
fcompl
popa
dec
shrl
adc
cmpl
mov
into
stc
push
jae
or
lcall
testb
insl
out
dec
orb
jo
xor
or
shll
dec
jnp
cs
cmp
cmpsl
test
and
test
mov
mov
push
and
pop
outsl
sti
dec
pushf
mov
outsl
sbbl
negl
mov
dec
out
cmc
fwait
sarb
inc
adc
cmp
xor
cmp
loope,pt
ds
mov
imul
sbb
pop
push
in
jns
lret
adc
rcll
mov
cwtl
lock
sbbl
adc
sub
scas
loopne
lret
mov
cld
jo
mov
data16
xor
dec
cmp
sbb
lret
arpl
xchg
jp
adc
or
fwait
jmp
arpl
js
icebp
dec
or
jle
fdivr
push
jne
jae
jmp
pop
sbb
js
mov
mov
aad
sbb
ss
mov
inc
lret
push
push
fbstp
inc
in
rorb
repnz
inc
js
lcall
je
xor
cmp
jno
cmpsl
push
stos
cmp
dec
adc
inc
lods
cmp
pusha
jns
cmovle
or
aas
sub
sbb
sbb
mov
rcl
sbb
fmuls
pop
mov
push
push
fisubl
add
mov
jg
arpl
add
push
push
lahf
lret
repnz
rcll
or
adc
push
push
enter
jmp
xor
adc
xchg
mov
add
cmp
push
xchg
jno
mov
sub
lock
mov
aam
and
loope
and
int3
mov
arpl
lds
std
push
popf
xchg
adc
xchg
mov
inc
std
xor
mov
negl
pop
adc
lcall
mov
mov
jl
movsb
mov
or
testl
les
lea
orb
stos
cltd
bsr
out
xchg
popl
pop
dec
mov
push
js
lea
push
mov
dec
xor
xchg
inc
add
cmpl
mov
jne
js
xchg
daa
inc
insl
push
sub
cmc
cmp
insl
maskmovq
mull
or
mov
pop
ficoml
pop
ljmp
stos
push
jmp
int
cld
into
or
mov
ss
fmulp
leave
ss
leave
jg
cmp
inc
jne
in
aad
outsb
and
add
sub
pop
mov
add
and
cs
stos
xchg
cli
and
loop
fcmovne
frstor
loopne
jmp
and
outsl
dec
aam
jecxz
xchg
hlt
fs
jbe
cmpsb
mov
jae
cmp
mov
aaa
cmpsb
mov
cmpsl
sarl
test
mov
or
sub
xchg
inc
cwtl
jo
mov
dec
imul
xor
and
xor
out
cld
pusha
xchg
sbb
dec
jmp
mov
adc
mov
mov
push
out
je
pusha
sarb
jge
cwtl
push
pop
mov
and
adc
andl
mov
sub
pop
cmp
jns
xor
ljmp
jg
lcall
or
jl
cli
pop
adc
dec
pop
call
aam
lods
xor
mov
mov
pop
arpl
ja
push
xchg
jl
mov
mov
dec
pop
xchg
mov
xchg
decb
cmc
dec
shlb
dec
and
jmp
inc
fmuls
stc
pop
xchg
fwait
incb
addr16
adc
cmc
scas
mov
roll
xor
cmpsl
int3
ret
loopne
cmpsb
rclb
lea
inc
arpl
into
imul
fisubrl
ljmp
push
imull
xchg
into
fisttpl
push
xchg
jge
mov
pop
ret
daa
cwtl
iret
xchg
dec
xchg
int
mov
inc
inc
dec
int3
arpl
jnp
pop
pushf
cmp
fmuls
jge
sbb
ret
arpl
test
das
test
cltd
sub
test
sbb
fcompl
cmpsb
out
in
fwait
push
repz
mov
xchg
xchg
jo
cli
orb
sbbl
sub
out
sbb
imul
insl
mov
dec
ja
sahf
xor
repz
xor
cmp
push
lcall
jl
mov
data16
popf
lret
test
ret
cmp
lods
sti
mov
in
xchg
sti
fs
subl
mov
rorl
pop
push
iret
outsb
les
fisubrs
ljmp
pop
fsubrs
sbb
in
jo
xchg
imul
pop
xlat
out
daa
mov
push
shrb
mov
inc
out
mov
and
dec
test
and
in
cmp
mov
adc
inc
mov
jnp
out
ds
std
mov
sub
orl
xorl
cmpsb
sbb
out
pop
adc
inc
test
cmp
sti
xor
dec
xor
aad
xor
insb
popa
push
pop
mov
fldl
lods
adc
pop
jmp
pop
lds
lods
sbb
xchg
shrb
and
flds
movsl
lea
mov
faddl
add
fidivrs
xchg
int3
push
push
mov
mov
pop
sub
sbb
jecxz
mov
leave
xor
fs
jne
int3
inc
push
or
sub
cli
stos
sbb
out
loopne
sbb
inc
mov
cmp
popl
in
idivl
sbb
invd
mov
adc
imul
xor
aam
add
sti
mov
inc
loope
inc
pop
lods
test
or
aas
lods
mov
xlat
add
inc
mov
xchg
ss
adc
lds
dec
hlt
inc
push
fldt
adc
xchg
dec
mov
sbb
sbb
sub
jg
jge
xchg
or
popf
pusha
aam
rolb
fwait
aad
fistpl
mov
push
sti
into
pop
shll
mov
pop
into
xchg
mov
mov
lret
int
push
push
mov
fbld
mov
pop
push
cltd
mov
pop
xlat
mov
dec
addr16
arpl
lret
daa
pop
cs
sbb
orl
mov
rorl
jnp
xor
sti
mov
int
push
lcall
mov
dec
lods
or
out
daa
inc
outsb
xchg
xor
popa
lea
imul
sbbl
sub
test
push
mov
test
repnz
cmp
jp
pop
adc
xchg
mov
leave
loope
dec
dec
fucomi
mov
xchg
push
jge
test
xchg
adc
in
push
aaa
icebp
fnstcw
jge
adc
dec
dec
and
push
insb
or
add
jne
mov
pop
js
lret
sbb
mov
mov
sbb
push
mov
adc
mov
dec
mov
jecxz
test
dec
stos
je
lods
pop
jne
xchg
cmp
sbb
mov
mov
stc
add
sbb
jb
shrl
adc
push
div
dec
or
inc
lcall
bswap
xchg
sbb
cltd
push
into
pop
lret
push
cmp
bound
sarb
mov
and
pop
adc
sub
sbb
addl
or
add
mov
push
iret
sti
pop
jecxz
push
stos
addr16
movsb
adc
jae
lods
inc
push
and
leave
ucomiss
enter
lret
xor
mov
mov
mov
xor
imul
add
lea
mov
add
mov
mov
xor
add
jne
mov
mov
xor
jmp
js
pop
out
jnp
rep
pop
jns
push
sbb
sbb
or
jp
outsb
add
out
scas
adc
inc
lret
in
cmc
gs
in
sub
fimull
and
in
aam
push
pop
jns
dec
pop
cmp
mov
xor
repnz
int
andl
push
js
adc
fucompp
ret
aaa
mov
iret
test
dec
xchg
dec
loop
add
jge
pop
pop
fists
ret
and
daa
shlb
push
cmp
clc
bound
or
jecxz
cwtl
pop
lret
leave
pop
push
or
lds
mov
dec
pop
push
pop
pushf
data16
int3
leave
jne
daa
inc
push
std
push
add
mov
bound
mov
inc
pusha
aad
xchg
sub
push
sbb
inc
mov
mov
movsl
xor
mov
andb
icebp
les
push
push
xchg
adcb
ret
mov
les
into
push
std
dec
out
cltd
mov
mov
jl
sub
pop
aaa
call
pop
mov
filds
in
adc
add
inc
aad
mov
push
cmp
cs
xchg
push
jb
iret
ja
jae
repz
in
push
xchg
cmp
mov
cmp
cmp
lods
mulb
cld
or
aam
cmp
inc
hlt
push
push
outsl
shll
shl
mov
hlt
adc
inc
je
adc
adc
jle
adc
jle
lock
pop
xchg
add
icebp
roll
enter
xor
pop
and
cmp
clc
sub
outsl
dec
push
inc
adc
sbb
cmc
fmull
inc
movsl
push
and
push
xor
ljmp
jg
leave
jp
xchg
int
push
fimull
mov
sbb
test
jmp
sbb
data16
fsubp
mov
insb
cmp
dec
adc
jp
sub
cld
mul
js
dec
mov
push
scas
cmc
mov
mov
test
push
jl
arpl
inc
jle
fnstsw
movsl
push
and
je
fsubl
and
push
mov
aas
out
stos
adc
clc
cmp
push
std
add
into
add
and
in
xchg
test
ss
test
repz
imul
dec
or
and
aam
adc
adc
mov
mov
je
popf
mov
sbb
adc
jnp
mov
lds
cmp
sahf
cs
cltd
je
xor
aas
add
loopne
push
movsl
cmpsl
aas
adc
mov
mov
mov
add
aas
lds
add
aad
scas
sbb
repnz
les
inc
xor
fstl
add
jbe
insb
call
inc
and
xchg
sub
or
pop
mov
jecxz
and
jg
push
rcl
jno
hlt
mov
xor
inc
dec
fsts
mov
outsb
clc
jl
aad
xchg
pushf
mov
cli
inc
mov
sub
fiadds
cmpsl
int
mov
arpl
adc
nop
stos
cmp
outsb
jbe
addb
ss
or
jbe
fldenv
in
imul
in
sbbl
icebp
adc
mov
mov
sub
push
pop
xor
pop
icebp
in
aaa
jns
loop
jae
sub
ret
jg
test
je
push
repnz
mov
scas
ret
xlat
mov
sbb
pop
xchg
jp
popf
xchg
adc
add
cmp
mov
lea
or
jno
jmp
push
and
adc
dec
dec
js
outsb
xchg
movsl
loop
lds
mov
dec
aaa
sahf
mov
xor
pusha
sbb
lahf
shlb
jb
scas
out
xchg
enter
cmp
cmp
dec
adcl
dec
test
sub
call
push
sub
js
nop
jl
and
mov
mov
ficoml
lcall
jo
in
and
scas
dec
ljmp
jne
mov
int3
inc
push
xchg
mov
dec
aam
int3
test
mov
pop
inc
or
test
repz
pop
push
shlb
and
mov
xor
dec
sbb
xor
cmovg
das
push
lahf
jmp
mov
cmc
pusha
push
cmpsb
xor
loopne
jmp
adc
ret
arpl
adc
mov
mov
adc
pop
in
cmpb
call
enter
xchg
xor
push
mov
inc
pop
jecxz
lcall
dec
push
ret
add
lea
jecxz
xchg
pop
cld
add
xor
sbb
add
arpl
outsl
and
mov
adc
cltd
xor
dec
movsb
fcmovb
loopne
push
inc
lods
mov
scas
or
outsb
xor
pop
test
pop
mov
mov
enter
repz
lods
fwait
sub
sarb
je
cmp
fstpl
cmc
cmp
subl
xchg
movsb
sbb
mull
dec
cmp
ficompl
and
insl
aas
adc
pop
inc
cmp
xor
jg
jb
nop
inc
test
addb
scas
xor
div
adc
pop
in
scas
iret
addr16
xchg
daa
mov
lock
xchg
sub
xor
push
je
ja
adc
daa
mov
pop
jae
push
jo
dec
jg
cmp
sbb
fcmovnb
shlb
mov
dec
push
div
repnz
mov
xchg
sbb
ret
mov
icebp
lods
addr16
xchg
cmp
jge
aad
movsb
lock
mov
lea
inc
sbb
jo
mov
sbb
test
pusha
rcrl
xchg
sbb
or
arpl
sahf
aaa
or
dec
inc
xor
sti
aaa
jae
loopne
movl
xor
mul
cmp
xchg
es
popf
lea
mov
movsb
clc
aas
out
mull
cmp
add
mov
out
xchg
push
pop
cmp
loop
cld
mull
mov
xchg
shll
lods
repnz
mov
stc
pop
mov
lock
out
pop
xor
scas
inc
add
jle
lds
ljmp
push
rolb
pop
rol
dec
sbb
fsubrl
mov
xor
pop
imul
xchg
mov
sahf
and
je
mov
mov
les
fimull
pop
vmovdqu
add
fbstp
xor
dec
push
adc
xor
pushf
lods
xor
out
cmp
and
das
dec
iret
push
sub
cs
fxam
sbb
add
lret
xchg
mov
sbb
test
xchg
das
sahf
mov
fiaddl
rorl
mov
not
iret
mov
fimull
sar
js
mov
cs
jno
xor
cmpl
lock
in
or
and
icebp
sbbb
leave
push
jmp
jns
pop
scas
pop
xor
pop
adc
mov
pop
push
dec
push
rclb
lea
push
adc
inc
vpermi2b
inc
fs
pop
jne
sbb
push
cmpsl
sbbl
scas
int3
xchg
mov
lods
xchg
scas
std
mov
repz
sbb
lcall
add
xor
mov
push
mov
dec
pusha
pop
cmpsl
outsl
fldt
in
das
dec
pop
sti
mov
test
xchg
sbb
mov
or
aaa
adc
jnp
push
pusha
call
aaa
sbb
mov
bound
mov
cmp
xor
adc
fwait
jb
leave
mov
pop
pusha
xlat
icebp
ficoms
sti
scas
fmull
xor
push
add
inc
lahf
pop
fidivl
sahf
xchg
stc
push
cltd
insl
iret
push
pop
data16
int
pop
mov
add
inc
pop
movl
mov
mov
lcall
add
aad
sbb
adc
cmc
pusha
jg
mov
mov
mov
out
gs
sub
sub
dec
into
xor
inc
popa
inc
sbb
aas
pop
cmp
pushf
xor
lahf
in
mov
or
mov
ret
fbld
dec
fildll
insl
lods
xchg
dec
pop
inc
jo
adc
fidivs
ds
test
xchg
in
add
popa
add
lcall
add
and
scas
dec
xchg
cmpsb
and
testb
mov
rolb
int
jne
lahf
pop
push
or
mov
lea
push
inc
das
add
aaa
adc
fists
adc
rorb
aas
pop
rcll
mov
cld
gs
xchg
dec
and
jne
sbbb
inc
rorl
stc
subb
push
enter
sbb
jg
out
clc
movsb
mov
xor
sahf
inc
daa
push
repnz
xchg
push
call
popf
rcrl
loopne
loope
test
inc
jmp
jb
cmp
daa
dec
daa
scas
mov
lock
data16
adc
in
xchg
insl
jns
adc
fcomp
ret
push
xor
adc
lock
roll
mov
iret
and
pop
movsb
dec
mov
sti
dec
push
jne
lret
mulb
aam
sbb
dec
daa
lock
ds
fmulp
jmp
popf
imul
sbb
pushl
pop
jb
lds
and
xor
push
insl
push
pop
inc
scas
jb
repz
stos
xchg
jns
shlb
mov
loop
sub
mov
in
jp
divb
adc
sub
cwtl
lcall
jnp
loope
push
pop
pop
repnz
adc
mov
lahf
dec
xor
fnsave
mov
cmp
decl
out
int3
and
sarl
ret
and
push
dec
and
pop
push
push
and
lret
aam
outsb
rcrl
adc
repnz
adc
inc
add
xor
jp
sub
pop
xor
mov
fs
inc
mov
movsb
mov
mov
cmp
sub
imul
dec
imul
and
ret
push
xor
pop
inc
jl
sbb
dec
mov
movsl
enter
adcl
sub
adc
and
mov
icebp
fidivs
jle
int3
sahf
jb
sahf
cmp
mov
or
cmpl
adc
notb
sarl
xor
cli
out
mov
cwtl
jnp
mov
ret
mov
add
ret
dec
adc
sub
mov
repz
inc
adc
xchg
lods
jne
jae
pop
or
call
stos
mov
jmp
pop
add
pop
in
pop
inc
enter
mulb
pop
fmull
fnstenv
inc
fs
stos
add
push
lea
adc
push
fld1
push
fiaddl
fimull
fwait
stos
dec
xchg
sub
loopw
daa
dec
and
mov
cmp
push
push
lea
sub
adc
and
insl
sti
cmp
enterw
ljmp
cmpsb
sbb
and
cmpb
movsl
cmpsl
addb
sbb
movsb
fcmovnb
out
inc
dec
jge
sub
inc
mov
cmp
adc
adc
stos
xor
xor
xlat
xchg
xchg
jnp
lock
jns
ljmp
andb
push
outsb
xchg
lcallw
push
lods
xor
xadd
fnstenv
mov
jo
int3
mov
inc
mov
repz
xor
push
out
mov
psrlq
xchg
sbb
aad
dec
push
push
xchg
in
lods
sbb
stos
notl
lds
sub
out
add
jb
lret
push
in
fwait
xlat
cmpsl
dec
and
out
push
ds
aaa
mov
sub
cmc
mov
cmp
pop
jmp
pop
xchg
dec
pop
loope
adc
sbb
lock
adc
out
test
aad
xor
idiv
je
push
and
add
insl
ljmp
jo
adc
imul
push
mov
mov
pushf
addr16
jno
xor
cmc
add
and
sarb
lret
cmp
xchg
or
ds
int
push
jno
in
sub
or
cs
push
stos
or
pop
push
xchg
lds
lods
ss
fiaddl
cwtl
sbb
cmp
repnz
into
aas
jns
fs
imul
lahf
mov
xor
push
and
mov
nop
inc
in
xchg
dec
mov
push
sub
test
adc
inc
js
call
sub
pusha
push
nop
jmp
mov
and
adc
fldenv
decl
ffree
ficomps
push
inc
enter
loop
inc
inc
add
les
sbb
cmp
or
inc
mov
push
mov
pop
fmul
push
std
dec
jp
jbe
inc
or
sbb
test
pop
cmp
dec
mov
out
push
pop
shlb
movsl
jmp
cwtl
mov
add
xchg
and
roll
cmpsb
lods
adc
sub
fiaddl
mov
mov
dec
mov
inc
inc
dec
xor
loop
hlt
cld
repz
inc
loope
mov
and
jno
in
stc
and
cwtl
jns
mov
mov
or
inc
enter
cmp
jmp
cmpsl
or
cs
mov
xchg
mov
xchg
rcll
lea
fistps
fcmovb
inc
out
nop
lods
test
xlat
mov
dec
sbb
push
icebp
jns
clc
sbb
mov
dec
pop
fcoms
loop
scas
cwtl
cli
and
add
mov
mov
fstl
cmp
and
dec
inc
adc
dec
or
lods
mov
jnp
jp
cmp
jge
add
cmp
fmuls
pop
imull
or
lea
sti
push
xchg
mov
mov
mov
pop
xor
call
sub
mov
xlat
lret
cli
sub
daa
subb
push
int
rorl
mov
cmp
lea
jbe
enter
pop
jmp
les
cli
sub
pop
or
in
cli
cmp
push
sub
stc
stos
dec
dec
lret
imul
loopne
pushf
sbb
fstpt
out
vpaddq
jecxz
pop
cmpsl
rol
lods
inc
xor
sbb
add
loopew
cs
pop
or
call
repz
test
js
in
mov
repnz
or
dec
adc
jbe
push
sbb
nop
jbe
xor
mov
adc
dec
cltd
cwtl
mov
dec
rcrl
gs
in
mov
inc
add
xlat
scas
mov
dec
pop
cmp
sbb
xor
xchg
cmc
dec
stc
cli
adc
cmpsl
psrad
push
pusha
dec
lret
mov
or
sub
mov
jge
stc
push
xchg
or
stos
mov
sub
inc
movsb
mov
fwait
subb
test
mov
orl
jge
cmp
adc
in
mov
mov
mov
je
sbb
pop
sbbl
pushf
std
inc
fdivrs
shrl
stos
add
mov
pop
fidivs
movsb
lret
out
mov
stc
push
cmp
scas
push
punpckhdq
es
lahf
pop
jg
sub
dec
mov
add
cmp
sub
mov
test
add
cmp
jecxz
out
jecxz
jge
xor
add
repz
pop
mov
out
dec
out
jae
add
sbb
clc
xchg
and
dec
xchg
outsb
fsts
adc
inc
insl
aaa
push
inc
mulb
fcmovnu
lahf
and
adc
mov
fsubrs
idivl
push
popf
xchg
mov
cmpsl
mov
sub
inc
sbb
lods
imul
xchg
inc
inc
push
mov
jno
cld
or
loope
mov
test
xor
pusha
jecxz
lock
xor
repnz
das
les
adc
jnp
jge
inc
dec
stc
push
test
test
dec
je
test
std
push
imull
shl
inc
popf
mov
mov
and
hlt
xchg
fldt
and
lock
pusha
inc
shll
shll
cmp
jo
lcall
push
cmp
pop
clc
adc
push
pop
jmp
xor
sub
add
mov
imul
add
jo
in
rcrl
mov
notb
test
call
popa
add
les
aas
call
aam
jge
mov
add
negb
cmp
out
push
pop
shll
and
incb
std
jae
in
cwtl
in
insl
jae
out
gs
add
add
enter
jmp
mov
ret
and
dec
cmpsl
sbb
stc
scas
lcall
cmp
xor
pop
xchg
mov
jp
jbe
jecxz
sub
sarb
sub
popf
cmp
mov
ja
sub
outsl
mov
inc
jmp
xchg
cwtl
adc
data16
stos
push
mov
xor
pusha
cmp
sbb
xor
aas
iret
and
mov
je
push
lret
inc
aaa
fistps
shl
and
sarb
sub
cmp
out
sbb
insb
dec
sbb
sti
adc
cmpsl
xchg
stos
popf
dec
xchg
pop
sbb
fcmovne
popa
cmp
movsb
mov
fwait
enter
sub
mov
dec
cmc
push
mov
xor
test
jge
lods
push
add
inc
icebp
test
adc
or
mov
and
jg
sarb
cmovs
loopne
mov
in
mov
fdivrl
shll
out
cmp
mov
test
arpl
or
adc
loope
mov
xchg
stos
in
push
push
inc
xchg
out
dec
inc
xlat
in
clc
fcompl
xchg
mov
push
fs
insb
cmp
xlat
or
mov
push
and
mov
sti
popa
int
fs
lods
daa
loopne
sbb
in
popf
fistpll
xor
in
fnstcw
cld
clc
sarb
sub
push
push
jo
cmp
or
leave
scas
movsl
mov
push
push
mov
hlt
mov
mov
push
mov
lods
popf
add
mov
lods
pop
out
loop
lahf
test
adc
ss
cmpsb
mov
rclb
test
xor
arpl
rcr
ja
jbe
mov
or
fsubrl
mov
mov
out
rcrl
sbb
lods
jne
xchg
aas
and
pop
scas
cmc
jns
std
jecxz
es
lcall
jmp
js
inc
push
int
mov
test
popf
mov
int
fs
clc
sbb
in
cli
jne
loop
sub
xor
dec
outsl
stos
sbb
inc
fsub
dec
mov
repnz
adc
jns
push
jno
inc
mov
outsb
dec
inc
xor
xchg
add
mov
jmp
lea
cmpb
add
aam
lods
sti
fwait
pop
out
xchg
shll
into
jbe
xlat
iret
lods
movsb
bound
xchg
mov
lds
jle
add
in
mov
test
mov
jmp
pop
jg
cltd
sub
xchg
movsl
cmpsl
inc
pusha
cmpsl
outsl
std
jnp
sarb
mov
xchg
rcrl
jns
fcmovnbe
mull
push
loope
xchg
faddl
sbb
lcall
subb
clc
inc
add
jae
jg
jecxz
xchg
in
add
cmp
dec
adc
lods
push
daa
pop
cmp
xchg
jmp
fwait
in
in
loope
adc
jb
xor
shll
adc
or
out
sbb
test
xor
mov
xchg
jg
cli
cltd
ja
push
inc
push
shl
inc
and
stos
mov
push
fsts
jle
insb
cli
xchg
mov
lds
popf
in
push
jmp
push
cmpsl
and
pop
stos
xchg
inc
adc
aad
in
cli
sti
ja
dec
mov
inc
sbb
push
mov
mov
test
int
push
in
adc
int
ljmp
into
cmp
mov
mov
stos
dec
mov
into
push
lock
sub
cltd
fwait
lret
call
pushl
lds
lret
push
psadbw
lea
sti
fs
int
sbb
mov
push
idiv
sti
mov
mov
nop
xchg
push
push
jmp
mov
arpl
xchg
pop
or
or
je
cs
and
inc
mov
movsl
and
mov
fwait
mov
cmpsl
mov
imul
xchg
dec
lret
adc
inc
mov
notl
mov
js
das
jp
lcall
icebp
jae
mov
push
mov
sbb
push
orb
daa
sbb
mov
in
ds
sbb
mov
pop
das
and
ret
cltd
roll
mov
fsubr
call
out
cmp
repz
shlb
clc
enter
pop
loope
pop
dec
rcll
insl
ret
enter
sub
dec
sbb
push
mov
fiaddl
jmp
addr16
in
aam
cmp
je
or
lret
sbbl
add
movsb
push
sub
mov
cmp
movsb
jg
sub
out
dec
repnz
xchg
jmp
or
nop
add
ficoms
cli
outsb
or
jne
jle
inc
jns
add
pop
mov
mov
fdivr
mov
jno
mov
push
shrl
cli
push
fwait
mov
jnp
adc
repnz
mov
js
pushf
repz
adc
cli
mov
mov
sbb
out
shll
cmp
pop
jae
arpl
cs
outsl
xor
fldcw
imul
mov
push
imul
adc
cmp
inc
fnstenv
sub
sbb
aaa
sub
jl
xchg
in
cmp
xor
jae
mov
fisubl
push
cwtl
push
add
daa
inc
andb
adc
or
jmp
cmp
xor
mov
ds
mov
ret
mov
punpcklwd
mov
out
shll
xor
repz
xor
das
push
push
out
cltd
enter
inc
mov
xchg
addr16
cmp
dec
mov
mov
pop
ja
mov
insb
clc
push
in
loope
push
sahf
lahf
mov
jno
mov
movsl
or
cwtl
sbb
or
and
or
mov
push
iret
enter
pop
out
arpl
jno
sbb
pop
mov
or
and
add
inc
mov
sti
xchg
pop
rcll
std
enter
ss
xlat
sub
insb
pop
push
xchg
mov
in
outsl
adc
xlat
lret
or
and
mov
sbb
fcoml
inc
sbb
mov
or
rorb
in
or
xor
dec
jl
adc
lds
sbb
lods
in
jl
out
outsl
and
inc
scas
and
lods
jl
sub
pop
cmp
adc
in
rclb
popf
test
cmp
adc
stos
ljmp
cmp
dec
mov
lret
xchg
adc
and
nop
mov
inc
push
dec
adc
cwtl
por
out
insb
aas
sbb
add
fimull
test
sub
imull
mov
pop
insb
loopne
xchg
xor
jmp
pusha
es
add
scas
mov
leave
cmpsb
imul
dec
dec
dec
and
scas
sti
into
sub
imul
xor
gs
mov
xchg
inc
imul
sti
stc
adc
jge
daa
and
adc
lahf
and
xchg
movsb
sbb
mov
add
dec
mov
mov
js
dec
das
pop
add
sbb
cwtl
in
xchg
mov
inc
fs
and
cltd
pop
je
int
nop
test
jns
hlt
mov
sub
jns
adcb
mov
sub
lds
add
bound
es
loopne
or
pop
and
mov
xor
call
cltd
aad
aad
call
or
pop
pop
push
fldl
or
inc
fistl
push
dec
lds
jecxz
mov
insb
cmp
jp
jns
push
or
imul
mov
ja
idiv
fsubp
mov
inc
mov
cmp
adc
int3
pop
sub
jg
loope
mov
and
sbb
dec
add
mov
mov
loop
mov
adc
mov
rorb
push
dec
stos
mov
add
mov
inc
ljmp
or
pusha
adc
xchg
mov
mov
divb
cmp
enter
dec
icebp
push
aam
lds
and
test
loopne
sahf
into
mov
and
hlt
lcall
and
push
push
jno
pmaxub
data16
or
jl
icebp
cwtl
or
mov
nop
cltd
dec
mov
xor
dec
push
mov
xchg
and
lods
mov
popf
jnp
xor
ret
pop
jb
pop
mov
repz
fisubl
xchg
enter
out
ror
daa
flds
add
sahf
cmc
pop
repnz
pop
and
loope
lock
ret
or
mov
icebp
dec
out
test
mov
icebp
or
fldenv
sbb
ss
jne
mov
sub
sbb
fisubs
xor
push
testl
xchg
es
adc
imul
push
sbb
mov
and
movsl
jmp
fcomps
or
clc
mov
add
dec
neg
repnz
cli
mov
xlat
xorb
das
jbe
and
cmpsb
cld
lahf
jae
dec
ja
and
sub
mov
adc
and
cmpsl
sbb
pop
sbb
mov
arpl
popa
push
push
mov
mov
incl
xor
int3
mov
or
sbb
mov
inc
ret
int
sbb
or
imul
out
pop
into
or
pop
add
jmp
call
mov
mov
sarb
out
or
pop
mov
cmp
jmp
insl
movsb
ret
sbb
mulb
es
cld
int
faddp
mov
push
enter
or
push
jae
aaa
cltd
dec
aas
xchg
mov
adc
mulb
mov
jecxz
jge
cmc
xor
cmp
lcall
mov
loope
aas
mov
rolb
data16
push
inc
pop
out
cmc
jg
sub
inc
movsb
mov
dec
js
sbb
addr16
mov
lret
xor
mov
out
jmp
jp
jo
push
cmpsb
cld
pop
push
jl
lods
shl
fwait
addl
mov
xchg
popa
in
rol
mov
inc
out
cmp
mov
test
xor
jb
xor
adc
adc
jnp
mov
int3
push
mov
jno
lret
rcll
aas
nop
cmp
mov
into
out
jne
scas
mov
push
mov
push
xchg
push
or
xor
arpl
sbb
bound
ds
jae
sub
push
jg
mov
rclb
loopne
mov
test
loopne
scas
popa
pop
xor
cmp
pop
xchg
out
inc
test
push
int3
adc
js
out
push
lahf
cmpsl
inc
addb
rclb
xchg
add
loopne
cmp
cmp
xor
xor
push
or
and
ret
shlb
fnstenv
dec
inc
ljmp
jbe,pn
mov
jno
stc
pop
adc
fwait
aas
mov
or
hlt
fsqrt
test
aaa
xchg
in
mov
insl
int
in
out
and
out
test
aas
movsl
les
sti
das
cwtl
sbb
pop
xor
fwait
xor
cwtl
movsb
and
call
mov
xchg
ja
loope
jb
add
das
sub
scas
imul
sti
test
jne
push
insb
sbb
mov
popa
rol
sub
add
test
sub
cwtl
out
add
sub
xchg
inc
fdivs
jecxz
jno
jecxz
push
pusha
sub
jmp
lret
lea
pop
test
mov
add
mov
movsb
jecxz
fnclex
ss
ja
sub
push
jbe
das
out
inc
shlb
dec
cmp
push
xchg
fistpll
scas
fistl
addr16
xchg
int3
mov
adc
and
repnz
mov
xor
pop
push
jecxz
int
in
jl
adc
xchg
xchg
push
mov
sub
sbb
add
ss
pop
gs
inc
inc
pusha
ss
sbb
jo
adc
dec
pop
or
das
mov
jo
in
xchg
out
xchg
aaa
mov
ljmp
xlat
pop
jo
and
dec
fldl
loop
sub
cmp
cmp
adc
imul
fcoml
cmp
push
xchg
or
pop
call
inc
sub
xor
loop
jb
push
inc
inc
sub
scas
jns
xchg
mov
out
pop
sbb
push
xlat
and
test
mov
pop
outsl
dec
movsl
stos
cmp
shrb
ret
ss
jne
sti
cld
pop
call
push
sbb
fwait
lods
out
vmovups
mov
add
lret
pop
popa
je
push
and
enter
inc
mov
insl
mov
mov
xor
jns
or
adc
ds
mov
ret
mov
js
je
and
or
dec
add
mov
call
pop
shll
js
pop
or
add
push
pop
insl
into
adc
fnsave
and
or
or
shll
out
dec
lea
sub
mov
or
jecxz
sbb
lds
mov
add
fdiv
adc
push
jnp
jae
dec
or
cmp
pop
iret
mov
aam
pushf
push
push
jns
cltd
jmp
or
arpl
stos
add
sub
hlt
data16
popa
xlat
ret
insb
mov
pop
mov
sub
fsts
xor
xchg
sbb
inc
insb
stos
cmpsl
jl
mov
push
jmp
sub
test
xchg
cld
mov
idivb
cmc
lods
dec
adc
sub
jbe
add
xor
push
shlb
push
out
xchg
adc
or
pop
add
aam
fwait
popa
cmc
lahf
mov
nop
shr
arpl
sahf
mov
call
int3
scas
xorl
mov
dec
adc
xor
std
aaa
hlt
push
cmp
je
adc
push
inc
pop
jae
cmpsb
mov
and
ret
aaa
xchg
sub
cmp
jecxz
enter
in
sub
stc
fs
push
es
pop
xchg
cld
fidivrl
xchg
enter
xlat
pop
adc
je
mov
les
mov
imul
jecxz
xchg
aad
in
xchg
call
es
andb
pop
cmp
sbb
cmpsb
xchg
pop
addr16
inc
and
stc
movsb
divb
xchg
adc
xor
imul
xchg
je
cs
inc
rcrl
jl
js
inc
in
bound
xor
hlt
sub
dec
fsts
mov
or
add
ret
mov
int3
sbb
out
pop
xchg
xchg
mov
xchg
sub
add
outsb
stos
ds
add
pop
sub
xor
add
add
cmp
jae
lea
mov
mov
movl
lea
mov
mov
addl
mov
xor
add
lea
mov
jmp
add
jnp
jnp
jbe
cs
ret
mov
jge
or
jp
push
jnp
xchg
cmpsb
in
mov
test
outsb
pop
mov
popa
jnp
mov
es
aam
or
pop
inc
lret
arpl
out
xchg
in
or
lcall
outsb
jnp
faddp
dec
and
sbb
mov
add
dec
lods
mov
jo
pusha
sbb
sti
stos
andl
inc
int3
mov
stc
fadd
inc
xlat
mov
and
out
cwtl
add
lods
jp
inc
sbb
cli
pop
dec
push
mov
fs
cmpsb
mov
jecxz
pop
mov
jmp
out
and
push
or
xchg
and
and
fs
jp
mov
and
jg
sti
and
pop
lods
push
movsb
jne
jp
adc
mov
clc
imull
ret
lahf
inc
sub
jae
shll
mov
subb
xor
setg
xchg
mov
pop
in
cmp
outsl
mov
lret
push
popf
aad
push
pop
into
aas
std
stos
imull
push
mov
sbb
xor
loopne
sub
xchg
push
push
sbb
aaa
leave
and
pop
dec
mov
push
push
sub
or
push
repnz
pop
or
mov
std
addl
dec
mov
adc
or
sub
incl
jne
mov
insb
mov
xchg
icebp
cmp
jg
adc
mov
xchg
inc
lret
pop
comiss
mov
hlt
test
pop
ljmp
mov
fld
shlb
mov
adc
cmpsl
mov
fists
sarb
arpl
push
or
inc
clc
jb
xor
pop
scas
mov
pop
sahf
lcall
dec
imul
inc
add
stos
cmp
sti
iret
pop
jmp
js
jae
outsl
loop
cmp
adc
and
les
call
jo
sub
push
sub
int3
mov
arpl
xchg
pop
mov
and
ret
mov
adc
mov
dec
fstpl
mov
sub
add
dec
ja
das
or
lds
lods
loop
rclb
into
dec
aad
xlat
bound
data16
mov
fwait
xchg
xor
mov
jbe
xchg
push
inc
mov
rcrb
dec
push
lcall
mov
lock
in
js
jg
mov
aam
mov
cmpsl
cmpsl
inc
lock
outsb
imul
out
iret
testb
jbe
dec
push
dec
fs
je
jecxz
or
xor
shll
movsl
xchg
pop
int3
cmpsl
insl
inc
xchg
call
subb
jbe
cld
negb
in
int
out
ss
add
les
push
stos
mov
cmp
cli
mov
adc
out
and
clc
dec
push
mov
adc
pop
pushf
lds
ret
sub
mov
and
xchg
add
in
and
xchg
sbb
pop
mov
mov
pop
or
testl
jbe
fwait
cmp
adc
xchg
pop
es
imull
sbb
add
xchg
pop
add
dec
cmpsl
inc
and
cmp
mov
aad
and
test
xor
mov
sti
mulb
lret
jp
pop
stc
push
inc
nop
sbb
call
mov
daa
stos
push
pop
arpl
jns
stos
xor
enter
xchg
lods
shll
sbb
pusha
xor
sub
cmp
cli
xbegin
rclb
or
and
cwtl
xor
push
sarb
mov
mov
js
cld
lds
push
aaa
imul
pop
sub
inc
adc
insl
enter
dec
push
adc
adc
mov
xor
dec
lds
lock
sti
sub
fcoml
out
jecxz
jmp
std
nop
movsl
in
aam
jmp
int
js
es
or
lret
bound
xchg
sbb
repz
mov
inc
sub
adc
cmpsb
push
adc
pop
or
movsl
mov
xlat
into
pop
imul
push
nopl
add
sub
cmp
insl
or
pop
or
inc
repz
out
cmp
xchg
test
lcall
or
andb
into
cs
xor
sti
mov
cmp
test
inc
mov
mov
adc
cwtl
xchg
mov
jno
iret
ds
test
jmp
mov
xchg
mov
out
lods
sbb
les
cmp
ja
xor
ja
clc
jp
mov
add
jmp
push
mov
jl
std
mov
cmp
cmp
mov
fwait
rol
xchg
push
xchg
pop
add
ds
inc
fldt
cmpsl
int
cmp
add
xchg
in
inc
divl
dec
cmp
dec
xlat
sub
mov
adc
xchg
mov
dec
fnstcw
add
mov
ds
adc
xchg
cmp
xchg
or
sbb
mov
mov
mov
lret
xchg
sar
jmp
movsl
sbb
push
or
jmp
pop
sbb
add
pop
outsb
stos
ss
aam
lret
stos
sbb
lea
mul
lds
cmpsl
jnp
cld
lahf
mov
lds
xchg
lock
xchg
addb
jnp
mov
roll
outsb
jne
sbb
pop
inc
dec
ljmp
inc
frstor
push
adc
cmp
in
lods
out
hlt
pop
stos
lods
scas
mov
mov
inc
pop
std
lret
loope
adc
pop
stc
loope
mov
cmc
hlt
jp
daa
insl
fnstsw
push
and
int
stos
mov
mov
leave
push
out
add
cmpsb
jb
cltd
clc
sti
cltd
subb
cmp
cmp
out
rolb
sbb
ficoml
lret
mov
inc
cld
test
rcr
cwtl
imul
sub
rcrb
and
xchg
pusha
pushf
adc
into
mov
push
mov
dec
and
std
in
clc
jbe
jecxz
sub
jle
gs
mov
sti
je
hlt
outsb
scas
shlb
push
imul
scas
adc
add
jo
sub
jmp
gs
test
idivl
xchg
xchg
jne
xchg
mov
push
pop
imull
bound
xchg
dec
dec
pop
cmp
jmp
pop
cmpsb
sub
arpl
inc
ret
lods
je
mov
out
inc
push
arpl
cmc
rcll
mov
mov
int
mov
imulb
test
cmp
mov
stc
inc
or
dec
sbb
testl
mov
mov
fcompl
outsb
test
mov
dec
pop
outsb
lahf
cmp
or
lret
sub
dec
mov
bound
dec
cmp
or
push
pushf
jnp
cld
cld
mov
pop
repz
xchg
fistpll
jbe
subl
mov
rorb
push
lahf
cmpsl
jmp
js
aaa
loop
adc
mov
aas
push
test
test
pop
adc
rcl
ds
repz
push
pop
and
add
scas
add
fildll
fwait
mov
xor
cld
lds
cli
leave
dec
fmuls
repnz
lret
adc
in
sbb
mov
add
pop
push
mov
mov
js
jno
xchg
ret
hlt
push
outsb
fldcw
mov
adc
pop
mov
fistpl
data16
das
push
pop
jno
mov
inc
xor
add
xchg
outsb
hlt
bnd
outsb
cmp
ret
fsts
xlat
pop
js
mov
repz
std
push
sub
mov
mov
cmp
cmp
scas
xor
dec
mov
mov
sub
arpl
sti
inc
mov
pop
mov
daa
mov
out
inc
xchg
cmp
shrb
push
mov
xor
addr16
cmpsb
lds
testb
sahf
dec
lea
dec
sbb
out
popa
inc
dec
adc
test
sbb
jmp
push
jne
and
pop
hlt
adc
jae
cmp
and
lds
ficoml
lods
xor
cs
shlb
push
pop
adc
lret
arpl
push
lock
push
stc
mov
jb
push
movl
jmp
xor
nop
jmp
mov
sub
push
in
xchg
mov
xor
xor
fsubrl
cmpsb
je
jbe
add
or
sbb
inc
mov
pop
pop
test
xchg
mov
aad
pop
hlt
test
add
jbe
movsl
mov
sti
and
xor
ja
pop
ret
push
lret
es
fists
ror
mov
jge
mov
dec
leave
mov
hlt
sbb
jp
push
add
jle
inc
pop
mov
fisttpll
sub
ret
fwait
add
xor
out
gs
inc
mov
push
ret
sub
ja
xor
sbb
jno
adc
imul
inc
adc
fnstcw
cld
cmc
mov
mov
fstpt
inc
repnz
push
leave
addr16
xor
lods
insl
sbb
push
mov
sbb
nop
push
loop
stos
xor
fsubrl
xor
cmpb
and
lcall
into
adc
movsb
inc
jns
out
popa
fsts
lahf
in
mov
pop
sbb
mov
mov
enter
push
stos
jl
pop
cmp
xchg
pop
les
xor
out
stc
add
mov
das
aas
shll
mov
jg
xchg
dec
and
mov
push
mov
xlat
mov
xchg
dec
jecxz
jmp
jle,pt
sub
cmp
adcb
and
dec
movsl
sub
mov
pop
mov
rorl
cmpsb
repnz
enter
push
mov
mov
jle
icebp
les
xchg
aam
jl
or
into
imul
rcll
in
lds
xchg
pop
sbb
jmp
repz
and
test
scas
movsl
or
mov
xor
fstl
jae
push
ss
sub
and
cmpsb
xchg
paddsb
ja
into
xor
push
dec
hlt
aam
mov
fs
push
mov
cmp
test
pop
mov
data16
add
mov
cmpsl
mov
pop
inc
int3
pushf
lods
mov
push
mov
addr16
dec
sub
lea
int3
or
sahf
mov
adc
lea
inc
jl
cmp
mov
pop
daa
push
repz
or
addr16
push
jae
insb
xchg
xchg
data16
fadd
xchg
push
dec
mov
out
enter
call
mov
arpl
inc
sahf
inc
cli
cwtl
mov
mov
repz
adc
lea
push
pop
je
out
ljmp
sbb
mov
adc
movsl
inc
lods
imul
jmp
pop
or
scas
arpl
jp
in
mov
push
lcall
xor
push
mov
shlb
ds
jbe
mov
jmp
pop
daa
testl
xchg
jle
jns
cmc
add
dec
adc
push
sbb
cmpsb
gs
dec
mov
shlb
xchg
jmp
and
jl
ds
ljmp
sub
pusha
cmp
out
jmp
and
maskmovq
imull
inc
popf
loopne
pop
mov
pop
outsb
add
and
xor
in
les
mov
popf
call
les
push
xlat
mov
sub
clc
in
mov
fldcw
lock
pop
and
cmp
pop
xchg
xchg
cmpl
push
iret
cmp
mov
fidivrl
pop
out
movl
mov
inc
or
pop
or
push
cwtl
aad
jp
ret
cmp
mov
ja
sbb
and
pop
pop
and
add
or
jne
cwtl
cmp
or
push
into
sbb
push
pop
mov
cmp
push
pop
and
sbb
sub
dec
dec
adc
push
mov
xor
decb
cltd
inc
mov
and
das
or
frstor
adc
cld
es
icebp
jmp
jbe
or
cs
imul
xor
add
mov
std
mov
mov
mov
faddl
aam
popa
mov
fisubl
mov
xor
fisubrs
insb
in
leave
mov
sub
shll
mov
cli
out
add
in
jnp
mov
pop
mov
filds
adc
aad
push
in
cwtl
pusha
fldt
pop
mov
fwait
sbb
mov
dec
fbld
jb
int
adc
sub
add
fwait
push
inc
mov
cmp
pop
sub
shl
sbb
jmp
mov
sub
rcrl
jb
mov
mov
test
mov
or
mov
aad
mov
xlat
push
push
and
sbb
and
lds
pop
cmp
pusha
push
xor
inc
cld
in
pop
pop
xor
sub
or
and
popf
xchg
cs
mov
mov
loopne
push
sub
mulb
call
jl,pn
sbb
std
popf
shll
call
and
lcall
fwait
mov
jae
dec
adc
les
ss
je
cmpsb
add
dec
adc
adc
push
pop
ljmp
repnz
hlt
xor
jl
cltd
jl
xor
lods
mov
mov
jae
inc
xor
out
pop
mov
cltd
xchg
scas
add
lahf
mov
mov
or
adc
xor
ss
push
and
pop
push
adc
aad
into
fbld
or
adc
add
mov
icebp
push
add
sahf
pop
gs
inc
rcrb
repz
push
movsb
lods
rolb
fcoms
scas
jle
jnp
xchg
xchg
fs
sarl
sub
cmp
and
lods
push
ljmp
cmp
push
sbb
xchg
pop
add
mov
mov
jg
repz
imul
jns
adc
lret
dec
push
push
pop
ret
jnp
rclb
jg
lds
daa
lods
dec
je
outsb
mov
sti
adc
and
inc
cmp
xchg
mov
lock
mov
sti
xchg
jno
jmp
inc
push
cli
loope
movl
add
scas
stos
pop
insb
cmp
sub
rcrb
lds
xor
xchg
sbb
add
jae
jae
jns
fisubl
push
stos
jne
testl
sbb
xlat
mov
mov
outsl
lds
xlat
sbb
out
out
xchg
in
ljmp
mov
and
sub
enter
loop
adc
sahf
fdiv
jmp
add
and
sub
mov
xchg
jecxz
mov
fcoms
mov
jb
push
stos
mov
cmp
adc
fcoms
loope
push
push
add
test
fistl
bound
jecxz
cmpsl
xor
pop
sbb
ficoms
jo,pt
inc
test
call
outsb
cmp
mov
push
jno
ljmp
adc
pop
cwtl
sub
push
fs
mov
imul
mov
inc
adc
lock
xor
jae
xchg
xchg
jg
mov
push
int
inc
pusha
test
xchg
jge
jbe
inc
mov
dec
and
add
lea
sahf
pushf
mov
out
sub
imul
cmp
lds
xchg
loope
outsb
cmpsb
dec
adc
sar
pushf
aas
fisttps
and
mov
lret
jecxz
jbe
inc
pusha
call
or
push
jecxz
insb
inc
lcall
pop
enter
in
jb
pop
mov
insb
out
mov
popf
fcmovnbe
adc
sub
xchg
int3
lds
jbe
jbe
fwait
lret
and
ss
jle
inc
xlat
cmp
xor
std
xchg
scas
movsl
pushf
or
mov
or
or
not
pop
add
aad
bound
lret
or
inc
sbb
lret
xlat
fmull
popa
adc
nop
dec
pop
stos
outsb
push
push
xor
sub
pop
xor
movsl
mov
loope
das
lcall
cmp
divl
and
jns
dec
addr16
mov
and
xchg
xor
ja
pop
scas
pop
aaa
jns
pushf
mov
cmpsl
pop
inc
sarb
jnp
mov
daa
dec
pop
and
les
cmpsb
movsl
test
push
sub
ret
sbb
xor
mov
jb
pop
add
xchg
or
cld
lret
add
pop
sbb
lds
and
filds
push
lds
int
lea
fldenv
aaa
jmp
test
mov
roll
and
dec
rcr
inc
jle
jb
xchg
aaa
dec
rol
dec
lods
scas
shrb
cmp
push
iret
les
dec
imul
pushf
push
lock
aam
and
inc
push
add
xchg
and
sbb
or
pop
sbb
adc
popf
xor
xchg
cmpsb
sbb
and
and
jp
add
negl
cmp
mov
xchg
aam
sbb
movsb
or
sbbl
into
inc
add
pusha
out
shrl
ja
jl
ret
adc
movsl
xchg
stos
mov
cmp
or
pop
fidivl
or
or
fcoml
pop
in
push
cmp
stos
vmread
test
jl
xor
in
clc
leave
fnsave
and
loope
aad
adc
nop
jmp
mov
outsl
push
and
push
pop
xchg
pop
out
mov
mov
pusha
test
add
cwtl
in
ja
mov
xor
jns
xor
add
dec
in
xchg
stc
pushf
cmp
adc
and
adc
icebp
ja
mov
or
les
imul
jecxz
and
xchg
lcall
mov
in
pushf
stos
dec
loope
in
push
xchg
adc
pop
sbb
in
rcl
cmp
pop
mov
pmulhuw
mov
mov
pop
in
pop
test
pop
adc
pop
lock
add
pushf
iret
mov
xchg
inc
jle
sub
daa
inc
jne
int
push
pop
rclb
leave
mov
push
adc
xor
subl
xchg
iret
es
lret
cmp
cmc
arpl
push
dec
cmp
fdivrl
test
push
repnz
and
sbb
test
fs
adc
mov
lock
xor
push
jmp
sbb
mov
pop
in
pop
xor
mov
int
mov
xorl
mov
es
fcompl
lahf
inc
mov
pop
fistl
pop
mov
and
mov
test
es
rcll
dec
ja
fdiv
std
xchg
loope
lret
or
xchg
mov
mov
jno
mov
sub
cmp
cltd
aas
add
mov
scas
jnp
mov
mov
dec
cmp
xor
sti
sarb
add
cmpsl
aas
push
lock
mov
fs
das
add
std
cmp
stc
bound
dec
imulb
pop
adc
sarb
or
mov
xchg
inc
push
jbe
and
push
shrl
xchg
lods
pushf
dec
jo
mov
gs
adc
clc
mov
xchg
push
push
mov
sub
sub
test
mul
sti
xchg
push
sbb
shrl
idivl
and
cs
mov
jne
shrl
lret
push
dec
sahf
mov
andl
mov
stos
jl
jmp
movsb
add
mov
jg
xor
fsts
inc
and
add
xchg
sub
cwtl
in
mov
cmp
jmp
push
scas
hlt
lods
sbb
popl
fdivr
dec
sub
mov
adc
pop
cli
adc
jecxz
and
pop
and
faddp
jmp
mov
and
out
repnz
or
nop
shll
sub
mov
stc
clc
outsb
dec
inc
repz
pop
insl
repz
negl
xchg
loop
mov
in
shrb
cmp
or
cmp
or
sbb
jb
xchg
cmpsb
add
in
mov
outsb
cld
outsl
pop
call
jo
sbb
les
es
or
lret
or
xor
pop
mov
dec
cmpsb
sub
push
jno
aaa
jmp
sub
pop
jb
incb
dec
xchg
arpl
push
jl
jge
mov
sub
sarb
mov
xor
pop
mov
mov
lods
nop
xchg
rolb
mov
pop
xchg
jg
imul
sbb
pushf
pop
out
jno
enter
jns
insb
mov
lock
cwtl
les
insl
jle
ss
pushf
jb
jne
and
pop
jne
loopne
into
icebp
mov
cld
ljmp
sbb
push
loopne
sub
mov
roll
mov
mov
xchg
dec
fstl
pop
jno
inc
lea
scas
outsb
cmpb
cmp
cmp
jb
xchg
push
or
pusha
dec
xchg
mov
and
mov
bound
inc
insb
inc
or
sub
mov
pop
leave
jae
mov
lea
mov
mov
mov
jecxz
sbb
add
fisubrs
loop
push
adc
cmpsb
das
in
ret
jae
cmc
xor
push
ja
lock
lea
pop
pushf
data16
add
xchg
cmp
pop
mov
mov
in
in
out
cwtl
mov
mov
or
fdivrp
into
cmp
cs
outsb
jecxz
or
mov
ljmp
jbe
xor
icebp
push
test
daa
adc
ficompl
int3
mov
icebp
mov
ret
mov
or
push
xlat
and
adc
int
out
lock
cli
jae
adc
and
idiv
sahf
adc
push
mov
jo
jnp
outsb
shl
mov
xchg
nop
loopne
fiadds
lret
movsb
scas
jo
or
jae
not
mov
cs
mov
popa
push
cmc
pop
sub
adc
add
rorl
sub
bound
sbb
repnz
iret
jb
pop
or
mov
dec
out
fildl
dec
test
ficoms
jle
in
in
aam
pushf
mov
popa
cmp
fchs
xlat
icebp
push
loop
fmuls
sbb
lods
pop
mov
adc
and
movsl
outsl
jae
lods
cmpsb
mov
add
xchg
scas
inc
jae
and
cmpsl
test
imul
loope
xlat
icebp
popf
push
and
fidivl
push
sarl
mov
and
mov
push
mov
and
lret
pop
decb
daa
outsb
xor
push
rorl
inc
cmp
in
sbb
sub
addl
outsl
push
cwtl
js
lcall
xchg
in
xorb
aaa
mov
insl
adc
call
cmp
lock
mov
jne
cmc
scas
and
sbb
test
jl
xchg
icebp
cmpsl
push
jmp
aam
in
or
aad
mov
mov
and
cld
jae
in
ret
pop
rep
popa
fsubl
inc
mull
mov
xor
push
push
sbb
xchg
push
mov
clc
xor
inc
aas
in
jo
sbb
stc
pop
rclb
aam
pop
cwtl
roll
dec
adc
sbbl
icebp
scas
nop
int3
inc
sbb
loope
jle
fisttpll
cs
cli
mov
xchg
adc
jns
push
jl
push
xor
lea
loop
adc
test
mov
sahf
pop
mov
sub
test
enter
xchg
inc
jnp
jne
cmp
icebp
movsl
lret
pop
sbb
jle
cwtl
inc
daa
leave
andb
ja
frstor
mov
push
andb
bound
xor
sti
test
cmp
push
in
jae
lods
xchg
xor
jns
and
jns
cmp
xchg
sbb
ds
movb
ret
jne
mov
imul
dec
mov
bound
sahf
sbb
dec
push
xor
fs
inc
iret
cld
xlat
sti
or
pop
xchg
aaa
stos
mov
test
mov
cmp
push
mov
cmp
ja
cmpsb
imul
jns
popf
cmp
mov
and
mov
push
bound
cmp
cmpsl
xchg
sub
mov
fstps
inc
cltd
adc
xor
jmp
aas
ror
xchg
adc
fs
adc
test
adc
mov
ret
cmp
rcll
orb
fbld
jl
out
mov
hlt
mov
je
mov
cmpsb
jp
xor
or
add
insb
mov
inc
jne
push
jb
jecxz
hlt
mov
test
jbe
movsb
inc
cmp
int
push
lahf
in
loop
dec
dec
int
lods
addl
push
jle
cmp
push
inc
ja
jmp
push
xchg
mov
js
outsl
lock
in
shll
mov
and
mov
pop
dec
insb
out
cmpsb
pop
sbb
xor
pop
and
adc
push
ds
push
sahf
data16
in
pop
inc
outsl
je
cltd
out
or
into
stc
in
mov
in
sbb
es
adc
sbb
adc
imul
add
push
dec
mov
lds
repz
test
andb
in
add
in
int
test
shr
leave
fstpt
add
ja
test
xor
enter
insb
movsl
mov
shrl
mov
call
clc
aaa
or
cmp
cmp
inc
sub
and
negb
push
out
aam
push
movsl
rcrb
mov
sbb
adc
sub
in
sahf
dec
xchg
rcl
add
inc
ss
fwait
jno
mull
mov
sub
inc
pop
sub
mov
sub
push
jne
hlt
mov
ja
mov
data16
adc
dec
loopne
pop
pop
lcall
sub
out
scas
in
decb
into
daa
out
stos
cld
ss
ret
lret
push
lock
fs
jo
arpl
mov
in
sbb
add
ficomps
aaa
popa
scas
stos
jg
inc
ret
mov
sbb
xchg
push
mov
out
add
daa
cmp
outsb
imul
mov
stos
mov
fmul
or
lods
rcr
xchg
lea
stos
xor
pushf
cmp
mov
xlat
mov
jmp
add
or
test
xchg
push
std
rolb
dec
mov
icebp
and
cmp
lock
mov
cwtl
test
ja
popa
xor
mov
mov
push
jl
aas
jmp
popa
sub
rcll
or
out
jp
push
pop
push
dec
push
insb
lret
insl
leave
jge
mov
pop
pop
out
stos
hlt
imul
aaa
inc
aad
push
and
gs
idivl
inc
andb
or
aad
push
mov
jg
shlb
xor
test
int
fimull
arpl
stos
and
jg
cld
add
and
shlb
jge
pop
xlat
int3
sub
mov
mov
pop
sti
fcomps
ja
dec
or
insl
inc
fsts
aas
ja
cmpsb
leave
in
mov
mov
rorb
push
adc
sbbb
xor
addr16
icebp
cmpb
insb
or
dec
loope
int
pop
ja
outsl
pop
add
arpl
xor
sti
dec
sub
push
dec
mov
push
adc
pushf
cmp
leave
dec
xor
push
adc
lods
inc
test
movsb
mov
push
std
repnz
mov
sbb
sub
sub
bound
mov
push
stc
sarl
mov
or
es
loope
scas
adc
ror
sarl
adc
cmpsb
jo
adcl
mov
test
mov
shll
negb
paddb
push
ja
inc
out
enter
mov
push
xchg
mov
push
sub
pop
pushl
cmpsl
adc
ds
int
xchg
lock
push
sub
mov
imul
inc
cmpsl
das
mov
lea
icebp
fs
je
mov
pop
andb
lcall
and
je
leave
scas
sbb
sub
cmp
xchg
xor
mov
test
or
ljmp
lods
out
movsl
fidivrs
ret
xchg
pop
push
pushf
sub
aaa
mov
mov
popa
jge
cmc
xchg
sbb
pop
mov
dec
and
push
ret
dec
rcr
adc
jns
mov
sub
cmpsb
pop
pop
dec
lds
push
mov
stc
cs
in
jp
mov
push
fisubrl
rcrl
ljmp
pop
mov
ja
fnstenv
cld
jb
jp
pop
xchg
sub
mov
inc
jbe
add
push
outsb
dec
addr16
out
repz
stos
push
dec
xor
mov
and
gs
jns
mov
cld
mov
outsb
lods
dec
pop
or
sub
or
adcb
shr
jmp
dec
jb
ret
test
rcrb
test
sub
cmp
negb
jb
mov
call
pop
stos
loope
xlat
leave
cmp
gs
and
bound
lcall
int
jnp
adc
aad
cmc
xchg
orb
stos
cmp
push
pusha
push
inc
jge
repz
sbb
test
movsb
mov
push
test
faddl
mov
gs
add
inc
cmp
lods
add
movsb
outsl
dec
pop
pop
add
popa
jg
xlat
out
mov
int
ja
inc
sub
jne
inc
sahf
mov
pop
push
shll
rol
add
cmpsl
sub
mov
scas
sbb
mov
and
fwait
dec
imul
add
orl
hlt
gs
int
outsb
jb
out
jnp
out
dec
ja
adcl
daa
lret
iret
jge
push
or
push
xchg
out
mov
lods
mov
pop
cmp
test
push
jno
loopne
mov
jno
loop
lock
sbbb
ficomps
mov
gs
fwait
into
mov
aad
sub
out
sub
adc
mov
fwait
sbbb
loopne
mov
jno
mov
inc
xchg
cwtl
ss
das
jno
hlt
dec
aas
in
mov
xchg
mov
jg
std
cmp
aad
les
xor
mov
movsl
pop
cmp
lcall
ja
fisubrl
sbb
mov
xchg
aam
fstl
imul
sub
jecxz
jbe
aam
add
cmp
pushf
call
sub
stos
addr16
add
pop
xchg
lock
imul
push
mov
shll
in
jge
jb
mov
mov
or
push
mov
dec
mov
push
popf
es
or
sub
adc
sar
pop
lea
inc
and
jmp
lret
xchg
xor
xchg
jmp
rclb
das
loope
shr
xchg
adc
cltd
push
push
mov
inc
add
repnz
inc
xchg
test
or
mulb
inc
hlt
in
push
shrl
xor
cld
fldl
mov
mov
mov
xor
inc
incl
add
cmp
jb
jmp
mov
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
imul
xor
add
lea
mov
add
mov
mov
xor
add
jne
mov
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
imul
xor
add
lea
mov
add
mov
mov
xor
add
jne
mov
mov
xor
lea
mov
incl
mov
xor
add
jne
jmp
mov
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
imul
xor
add
lea
mov
add
mov
mov
xor
add
jne
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
xor
imul
add
lea
mov
add
mov
mov
xor
add
jne
mov
xor
mov
add
mov
pop
pop
pop
leave
ret
dec
and
adc
call
add
adc
cld
insb
adc
movsb
js
add
adc
dec
jae
add
sub
adc
cmp
adc
cwtl
cmovb
pushf
cmovb
mov
cmovb
test
inc
add
inc
add
dec
aam
dec
add
add
add
add
cmp
lar
rolb
add
adc
pop
sbb
add
sub
adc
mov
push
adc
ret
add
inc
add
inc
add
push
inc
add
push
inc
add
push
inc
add
push
inc
add
cmovb
pop
cmovb
pusha
cmovb
cmovb
push
cmovb
jo
inc
add
add
cmp
add
adc
fldt
adc
xchg
sub
add
aaa
adc
and
xor
add
push
inc
add
push
inc
add
push
inc
add
push
inc
add
push
inc
add
cmovb
add
inc
add
cmovb
adc
add
push
adc
xchg
xor
adc
stos
jo
add
inc
adc
pop
pop
adc
fildll
adc
push
push
inc
push
stos
cmpsb
dec
lock
pop
dec
nop
jae
iret
and
xchg
lcall
pop
inc
jne
jb
outsb
je
popa
je
pop
dec
outsl
imul
insb
imul
dec
gs
add
add
add
add
mov
add
add
xor
add
add
add
add
add
add
add
sub
add
sub
add
xor
add
mov
adc
add
add
insl
bound
imul
inc
insb
outsl
jae
push
imul
popa
je
outsl
outsb
inc
insb
outsl
jae
push
.byte
