push
mov
sub
and
mov
xor
mov
mov
sub
inc
push
mov
movl
mov
sbb
sbbl
mov
and
orl
orl
mov
or
mov
neg
mov
cmpl
mov
movl
mov
movl
jmp
mov
mov
jle
pushl
call
add
mov
or
or
or
sbb
add
cmpl
movzbl
mov
movzwl
jmp
movl
movl
jne
push
push
push
push
call
adcl
sbb
inc
adc
and
mov
addl
sub
mov
mov
sbb
mov
orl
orl
lea
xorl
mov
add
mov
and
mov
cmpl
not
movl
jmp
movl
movl
jle
push
call
andl
addl
add
sub
or
xor
xor
mov
sub
or
mov
add
mov
sbb
mov
mov
mov
shrd
cmpl
mov
mov
mov
mov
jmp
movl
movl
jge
pushl
push
pushl
push
call
addl
subl
movl
sub
dec
shr
mov
mov
xor
xor
subl
or
movzwl
or
mov
mov
movl
cmpl
movl
movl
movl
jmp
movl
mov
jbe
pushl
pushl
push
push
push
call
addl
adcl
movl
movl
cmpl
mov
movl
jmp
mov
jl
pushl
push
push
call
sbbl
xorl
notl
xorl
decl
cmpl
movl
movl
jmp
movzwl
jb
push
pushl
pushl
push
call
add
subl
andl
decl
andl
cmpl
movl
movl
jmp
movl
movl
jl
pushl
pushl
pushl
push
push
pushl
call
and
movl
subl
addl
orl
cmpl
movl
movl
movl
jmp
mov
jne
pushl
push
push
push
call
sbbl
xorl
adcl
addl
andl
sbbl
sbbl
sbb
jmp
push
lods
and
cmp
sub
pushf
jmp
jl
sbb
sbb
adc
sbb
test
lock
cmp
cs
jno
adc
stc
pop
jno
sbb
mov
and
inc
mov
cld
clc
sub
dec
pop
push
and
fcompl
dec
inc
jp
clc
xchg
xorb
jle
sti
xchg
mov
arpl
jmp
adc
hlt
adc
mov
insb
xchg
cmp
add
inc
add
fistpll
pusha
shll
daa
in
scas
ret
xchg
in
je
shrl
xchg
aaa
adc
push
jecxz
mov
int3
stos
ficoms
jp
jnp
sub
test
loopne
inc
hlt
sub
and
and
cmp
adc
das
loop
arpl
pushf
ljmp
jo
pop
sbb
test
sbb
stos
jmp
lods
cmp
xchg
lea
xor
mov
xor
scas
fmull
loope
mov
in
scas
and
jne
div
inc
sbb
mov
and
sub
xchg
xor
sub
and
cmp
push
rcl
jle
cmp
psubusw
fidivrl
fists
mov
lea
mov
sbb
xchg
jnp
mov
push
cmp
movsl
insb
or
jnp
imul
arpl
popf
sub
sub
mov
fsts
or
sahf
add
or
add
mov
stc
xor
mov
cld
inc
ljmp
cld
adcl
jno
jg
lock
aaa
in
inc
cmp
push
sbb
adc
mov
mov
sbb
mull
lock
dec
pop
hlt
pushf
push
out
rolb
dec
pop
push
out
fpatan
mov
add
ffreep
pop
or
gs
insl
push
inc
xchg
cmp
jg
sahf
mov
cwtl
mov
sbb
orb
scas
leave
jns
int3
aad
jbe
sub
ret
enter
lahf
or
mov
or
fnsave
cmpl
push
pop
and
lea
push
adc
cmpb
sbb
mov
push
lret
mov
jp
subl
inc
mov
mov
out
sahf
xchg
loope
adc
mov
into
xor
pop
lds
adc
sub
lret
out
lahf
fistpl
adc
xchg
cmp
mov
adc
pop
out
insl
cs
jg
mov
outsb
cwtl
mov
call
inc
xchg
mov
fistps
pop
xchg
sub
test
call
lret
sbb
push
cmp
push
repz
inc
adc
xchg
out
or
addr16
adc
push
or
shrl
dec
sub
inc
add
neg
movl
movl
movl
mov
add
movl
mov
add
movl
cmpl
movl
notl
jmp
movl
mov
jle
push
push
call
adcl
addl
subl
orl
mov
xor
movl
xor
movl
movzwl
adc
movl
adc
movl
cmpl
movl
mov
movl
jmp
mov
mov
je
push
pushl
pushl
pushl
call
sbbl
adcl
subl
andl
addl
movl
sub
movl
movl
addl
movl
movl
cmpl
mov
mov
mov
movl
jmp
mov
mov
ja
push
push
push
call
addl
subl
xorl
decl
and
or
mov
and
movl
movzwl
sbb
movl
or
movl
adcl
movl
movl
sub
movl
not
mov
shl
andl
mov
xorl
push
push
push
push
orl
call
cmpl
movzbl
movl
mov
movl
jmp
movl
jge
pushl
call
adc
orl
or
mov
mov
or
and
mov
mov
dec
xor
or
mov
mov
sub
cmpl
movzbl
mov
mov
jmp
movl
je
pushl
push
push
push
push
push
call
addl
sbb
or
or
not
mov
mov
sub
xor
sub
mov
lea
or
mov
mov
xorl
or
orl
and
mov
or
sbbl
xor
movl
cmp
jne
sub
mov
mov
orl
shrd
add
shr
mov
cmpl
mov
mov
jmp
notl
movl
jl
pushl
push
call
movzbl
sub
mov
mov
add
xor
add
mov
or
xor
or
adc
mov
dec
mov
adc
mov
addl
shl
xor
andl
xor
notl
or
mov
mov
cmp
movl
jne
mov
mov
xor
mov
xor
or
xor
xor
sub
or
mov
sbbl
mov
shrd
mov
xor
mov
andl
xor
shr
mov
xorl
xor
orl
or
shl
movl
sub
andl
mov
mov
mov
and
add
or
mov
sbb
mov
or
mov
shrd
shr
movzbl
sbb
mov
mov
mov
jmp
stc
dec
popa
test
mov
sbb
and
sbb
adc
sbb
mov
mov
repnz
rcrb
cmp
popa
je
pop
and
pop
or
pop
cltd
psrlw
xor
or
mov
les
pop
jae
xchg
push
add
cmp
imul
jbe
icebp
cmpsb
fidivrl
mov
dec
add
cmc
lds
mov
adc
lock
lret
out
mov
dec
js
outsl
and
and
pusha
push
mov
mov
lret
mov
jbe
dec
sub
fwait
cltd
pop
fiadds
cmc
nop
sbb
inc
xchg
call
lods
inc
mov
mov
out
test
and
enter
lret
push
mov
dec
mov
xchg
stos
movsl
cli
sahf
mov
adc
pop
adc
fsubrl
imul
aad
jnp
sarb
cmp
out
std
and
or
test
jbe
aaa
and
add
jecxz
and
hlt
jae
sbb
xchg
xchg
cwtl
test
lds
sbb
push
adc
js
add
mov
mov
pop
dec
xlat
sub
cwtl
out
mov
test
mov
mov
aaa
add
xor
lcall
mov
roll
subl
push
mov
push
ja
add
ret
inc
xchg
pop
test
adc
jo
fidivl
jl
xor
sti
fsubs
pop
mov
stos
das
mov
stos
repz
into
lock
xchg
mov
mov
jl
xor
sub
and
imul
imul
jge
and
jge
imul
imul
data16
ds
jns
cmp
add
call
int
pop
mov
inc
nop
lods
neg
cmp
fldcw
push
and
pop
enter
cmp
aaa
xor
jo
adc
mov
dec
sub
mov
xchg
mov
mov
fnsave
add
jbe
add
push
jmp
outsb
mov
xchg
inc
ret
and
ss
add
xor
mov
pop
cwtl
repnz
repz
jnp
xor
mov
aaa
sub
lods
mov
out
mov
cmp
dec
mov
inc
subb
mov
stos
pop
cli
ret
ds
push
and
incl
mov
rorl
jle
faddp
adc
adc
sub
mov
mov
push
inc
or
in
sarl
xor
mov
js
xchg
lea
xor
cmp
shll
add
xchg
add
cmp
sbb
jbe
mov
xorb
add
mov
inc
cmp
xor
out
rclb
jno
xor
sub
shl
xor
mov
adc
or
add
mov
sub
mov
sbbl
shrd
xorl
shr
mov
sub
mov
addl
mov
xor
adcl
xor
or
shl
jmp
pop
sahf
pop
add
cmp
inc
inc
mov
sub
sbb
and
sbb
jbe
push
mov
sub
push
pop
shrb
push
jae
xchg
jmp
call
mov
and
mov
pop
pop
pop
mov
fmul
adc
mov
push
xchg
and
les
and
pop
arpl
push
in
jae
into
into
stos
aas
mov
add
lret
es
iret
scas
push
jle,pt
lock
push
add
rorb
lods
mov
xor
addb
insb
out
jnp
jb
inc
gs
jmp
xchg
test
test
in
shrl
sti
cwtl
mov
mulb
and
insl
gs
pop
mov
test
mov
pop
insb
pop
xchg
cmp
add
stos
pop
or
jp
loop
out
pop
daa
mov
lcall
jb
adc
popf
lea
mov
test
xlat
pushf
or
mov
mov
mul
jge
pop
sbb
mov
pop
adc
roll
inc
inc
dec
jnp
aad
lcall
sub
aaa
dec
loopne
inc
mov
mov
aaa
fidivs
sahf
push
adc
add
aas
out
mov
xchg
loopne
pop
cwtl
fbstp
int3
stos
jge
sbb
mov
pop
fnsetpm(287
adc
jle
fsubrl
cli
cmp
out
sub
jbe
ss
push
mov
lahf
call
repnz
mov
and
sahf
lcall
fistl
xor
jecxz
sbb
movb
lods
out
mov
sub
inc
mov
popl
jbe
lock
out
add
mov
jecxz
sbb
add
dec
ret
loope
pop
xor
xchg
jae
add
mov
mov
stos
push
daa
enter
adc
popf
jnp
cmp
jecxz
ficompl
outsl
into
and
pop
movsl
dec
enter
mov
inc
mov
sbb
add
outsl
je
adc
arpl
add
js
mov
mov
xlat
sbb
subb
mov
mov
add
mov
ret
je
mov
inc
hlt
mov
test
inc
cltd
jecxz
fpatan
imul
test
jae
mov
pop
cmp
sub
aad
xor
out
ljmp
movsb
dec
fisubl
loope
cwtl
add
fisttpll
outsl
push
mov
inc
repz
add
std
rorb
fnsave
in
jo
push
shr
mov
repnz
or
push
sub
repnz
jbe
push
into
sub
or
pushf
xchg
int
dec
jp
out
mov
add
ja
lea
mov
mov
subl
shrd
subl
shr
cmpl
mov
movzwl
jmp
movl
jae
push
call
xor
not
movzbl
adc
xor
or
or
addl
adcl
mov
mov
mov
sbb
xor
sbbl
mov
xor
or
sbbl
shl
andl
imul
mov
orl
mov
shrd
mov
orl
mov
xor
shr
movzwl
sub
mov
mov
mov
adcl
xor
addl
or
shl
addl
sub
jmp
inc
ds
cmp
jno
mov
and
sbb
mov
hlt
sbb
ds
pop
xor
out
xchg
cmp
xchg
mov
mov
adc
rolb
cmc
jp
push
dec
push
outsl
cmp
popa
dec
sub
adc
or
mov
jae
cmpsb
push
jae
pop
arpl
in
sub
sbb
mov
sbb
jmp
ja
testl
add
movsl
or
and
mov
sub
cmp
outsl
pop
dec
lret
cmpl
sub
aad
leave
pop
test
cmp
push
ret
mov
fsubs
add
jmp
lods
mov
mov
ret
mov
das
jmp
js
test
mov
aam
insl
cmp
call
out
cwtl
aas
fwait
bound
or
daa
jecxz
cmp
jle
in
xor
and
push
mov
data16
and
inc
ds
cmpsl
ljmp
rolb
inc
in
cmpsb
sub
mov
mov
addb
fs
lcall
and
or
and
repnz
in
adc
mov
daa
mov
mov
jge
jecxz
repnz
lock
ds
xor
roll
xchg
iret
or
outsl
push
cwtl
fucomip
fadds
repnz
sbb
adc
pushf
call
enter
aad
pop
rol
scas
dec
mov
add
fmuls
je
mov
xor
lea
push
xchg
xchg
jp
roll
movsl
sbb
cmpsl
aaa
lea
lods
xchg
pop
xlat
sub
negl
mov
adc
jp
nop
xor
adc
stc
std
neg
rolb
mov
into
jl
aas
and
jbe
into
or
popf
mov
jbe
fwait
mov
xor
push
push
pop
cmpsb
sti
and
cltd
mov
adc
jno
jg
fcoms
icebp
mov
dec
add
sub
xchg
xor
out
mov
add
ja
jae
and
ret
fbstp
orb
out
and
mov
adc
scas
lahf
mov
push
data16
outsl
jp
cld
push
cmp
xchg
fistpll
adc
pop
or
and
or
push
mov
add
lods
mov
ss
or
test
out
cmc
rcl
mov
adc
cmpsb
stc
jecxz
pop
in
mov
or
push
mov
sub
sbb
inc
mov
iret
pop
xchg
mov
mov
dec
inc
pop
add
loope
dec
cmpsl
or
js
and
jno
mov
and
call
add
inc
icebp
xor
adc
in
repnz
mov
lcall
add
or
mov
fiaddl
hlt
jg
cmpl
mov
movl
mov
jmp
mov
movl
jae
push
push
pushl
push
push
pushl
call
and
and
sbb
negl
or
xor
xor
add
mov
inc
mov
subl
shrd
andl
mov
mov
xor
addl
shl
decl
xor
andl
or
shr
cmpl
notl
movl
jmp
movl
mov
jge
push
push
push
call
mov
mov
add
xor
xor
xor
not
and
adcl
mov
addl
mov
subl
mov
and
mov
shrd
jmp
dec
lods
adc
pop
movsl
cmp
stos
outsl
call
sbb
and
sbb
sbb
inc
sub
int3
ljmp
xor
cmp
mov
or
repnz
aaa
jbe
shlb
mov
fwait
in
bound
stos
lods
popa
sbb
jns
lods
imul
dec
mov
les
divb
adc
push
mov
mov
jl
mov
jnp
fwait
cmpb
popf
pop
flds
addr16
in
in
loope
sub
dec
mov
loope
int3
add
xchg
adc
jo
stos
push
inc
xor
ret
das
lret
ret
cmp
push
xor
jecxz
xor
int
sub
mov
orb
and
js
jl
test
cmp
sbb
xchg
clc
xlat
mov
mov
bound
test
sbb
cli
push
arpl
sub
es
pop
mov
lock
divl
xlat
mov
jmp
pop
mov
sbb
arpl
jle
sbb
or
call
sbb
pop
inc
ret
mov
test
mov
inc
les
dec
ja
xchg
push
inc
lret
push
or
adc
add
into
sub
and
pop
cld
push
xor
mov
mov
xor
mov
add
ss
addb
add
and
and
pop
xor
lahf
xor
inc
in
inc
lret
jno
mull
hlt
popl
aad
popa
dec
leave
fsubrs
xchg
incb
sub
adc
clc
inc
jo
fldenv
dec
mov
inc
cwtl
xor
ror
xchg
push
xchg
jbe
iret
je
mov
pusha
and
popf
ret
lods
mov
mull
in
std
xlat
outsb
jne
push
loop
out
test
fldcw
cmpsb
sti
in
out
jmp
adc
xor
sbb
mov
mov
loop
pop
iret
mov
xchg
push
cmp
jecxz
sub
adc
jnp
adc
push
mov
mov
movsl
rcrl
addr16
sbb
popf
dec
out
jge
inc
mov
or
hlt
fisubl
jg
fcompl
movsb
into
daa
cmp
xor
pop
fs
pop
insb
bnd
aam
clc
adcl
mov
xlat
xorb
roll
and
popf
adc
push
test
xor
jb
mov
fisttps
pop
addr16
mov
int3
cltd
xlat
lea
xor
jne
pop
pop
shr
in
fadds
xor
stos
sbbl
and
fdivp
or
or
push
pusha
mov
pop
sysexit
stos
mov
loop
out
sti
inc
dec
ret
in
sub
mov
xor
loopne
add
aas
pushf
xor
addl
add
shr
mov
adc
jmp
add
ret
xor
sub
out
fnstsw
call
sbb
and
sbb
and
stc
test
jb
aad
dec
mov
sub
lret
xor
pop
fdivrs
or
mov
cmp
insl
in
xchg
ljmp
or
jl
and
jg
xchg
mov
insl
mov
pop
mov
push
and
add
dec
xor
add
call
push
ja
gs
xor
adc
test
pop
sub
lea
je
mov
testl
pop
daa
push
ret
cmpsl
pop
lods
xchg
rorl
outsl
lahf
cmp
mul
das
jno
cmp
jbe
stc
sub
sbb
mov
imul
out
cld
jp
mov
rcll
dec
cmp
out
andb
jb
push
push
cmc
test
add
jae
adc
jnp
mov
mov
orb
aam
leave
sbb
lods
pop
push
dec
add
or
xor
jno
push
cmc
sbb
decb
or
or
inc
pop
inc
push
xorl
mov
bound
inc
jbe
pop
mov
out
pushf
pop
imul
cmc
aaa
push
or
xchg
nop
in
jb
jle
ljmp
fwait
push
or
repnz
jae
mov
push
sbb
outsb
sbb
mov
cli
inc
les
icebp
sub
push
adc
repz
push
cmp
imul
fwait
out
inc
sbb
sti
pop
jge
push
dec
sub
xchg
push
xor
pop
rorl
in
mov
xor
sbb
dec
pushf
adc
jmp
sbb
mov
xor
add
lahf
int3
push
sbb
mov
sbb
mov
cs
pop
scas
cmpsl
mov
or
cmp
sahf
repnz
sbb
and
fstp
xchg
jns
push
cmp
imul
out
push
add
sub
ss
enter
mov
mov
insb
and
cs
cld
out
test
stc
cmp
lea
push
mov
add
jmp
call
scas
xchg
adc
pop
lods
cwtl
xchg
adc
mov
pusha
enter
iret
dec
into
stos
addr16
cltd
mov
movsl
mov
sub
adc
jns
shl
jl
pushf
sbb
test
ljmp
and
dec
cmpsb
and
aad
dec
call
push
jmp
cmp
dec
aam
aaa
push
cli
jg
push
pop
loop
aam
cmpsl
sarb
jne
nop
dec
cwtl
fisttpll
lret
or
jnp
fldln2
and
mov
into
xchg
cmp
mov
pop
imul
or
add
push
add
jge
sbbl
xor
adcl
or
shl
adcl
imul
sub
jmp
cmpl
movl
mov
mov
jmp
movl
jge
push
pushl
call
movzwl
and
adc
or
sub
xor
mov
mov
sbb
mov
cmpl
movl
movl
jmp
mov
jge
push
call
add
inc
xor
add
mov
adc
xor
cmpl
movl
mov
mov
jmp
movl
jle
push
pushl
push
push
call
mov
xor
andl
sbb
subl
mov
mov
and
mov
shrd
mov
mov
subl
xor
subl
shl
subl
xor
or
adcl
shr
mov
cmpl
movl
mov
mov
jmp
movl
jle
push
pushl
pushl
pushl
push
pushl
call
or
adc
or
inc
subl
mov
and
sbb
sub
mov
cmpl
movl
mov
mov
jmp
mov
jbe
pushl
pushl
pushl
push
pushl
call
adc
or
mov
xor
or
sub
xor
xor
or
mov
subl
mov
sbbl
shrd
shr
cmpl
movl
mov
mov
jmp
movl
movl
jb
push
pushl
call
xor
addl
inc
xor
neg
notl
cmpl
mov
mov
jmp
mov
jge
pushl
push
call
mov
add
mov
not
subl
mov
mov
xor
adcl
mov
sub
mov
addl
mov
cmpl
mov
movl
mov
jmp
movl
movl
jl
push
push
call
orl
sub
sub
movl
or
jmp
subl
cmp
leave
jl
pop
inc
mov
and
sbb
loop
divb
fidivrl
pop
jnp
sub
pushf
mov
pop
inc
inc
aaa
pop
test
jno
and
iret
mov
int3
out
xchg
test
push
ja
push
lret
mov
lea
popf
xchg
xchg
dec
je
and
or
lods
fsubrl
mov
movsl
xchg
aam
loopne
push
daa
shlb
or
push
ret
adc
lds
aas
jno
or
or
pushf
xchg
xchg
sar
scas
and
stos
jecxz
inc
jne
cltd
es
sbb
nop
orw
cld
call
xchg
and
xor
pop
cmp
test
add
push
cmp
add
cli
and
xor
dec
cltd
mov
mov
testb
sbb
inc
out
insl
inc
les
xor
scas
push
xchg
sub
paddusw
adc
callw
rorl
negl
std
or
mov
fstps
divb
add
mov
push
push
dec
lods
sti
sub
add
scas
arpl
jbe
xchg
call
pop
xor
add
xor
addr16
ljmp
scas
and
iret
gs
push
call
in
mov
fdivl
add
insl
cmp
int3
push
aaa
es
fucom
pop
xchg
xchg
loopne
jg
add
sub
testl
push
test
mov
xor
mov
inc
or
out
ret
inc
push
mov
call
stos
cmp
pop
test
in
mov
aaa
pop
dec
data16
pop
jo
xchg
sub
add
xorb
inc
ljmp
cmpsl
xchg
inc
enter
xchg
or
lcall
push
jl
mov
clc
jg
xchg
cli
mov
mov
aam
mov
test
insb
cli
das
call
mov
sti
in
adc
sahf
mov
inc
or
std
cmpsb
mov
decb
pop
fadd
sub
pop
inc
sub
inc
cmp
mov
cmp
pop
mov
mov
cmp
das
in
or
xchg
testb
stos
mov
scas
addr16
pop
fnsave
ss
jmp
jg
xor
movsl
push
push
push
cld
mov
outsl
outsb
add
push
stos
fwait
or
imul
scas
push
cmp
ss
cmp
jmp
lods
and
and
jmp
notb
pop
lret
icebp
sub
cmp
sbb
mov
ljmp
jno
fadd
cmpsb
popa
lods
popa
test
adc
jo,pn
pop
xchg
push
mov
daa
or
inc
xchg
call
test
or
sbb
dec
sbb
rolb
adc
xor
mov
mov
xor
adcl
xor
or
shl
add
add
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
mov
movl
mov
mov
movl
mov
movl
mov
movl
mov
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
lea
mov
mov
mov
shrd
shr
mov
mov
shl
mov
xor
xor
or
mov
mov
xor
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
lea
mov
mov
jmp
inc
mov
mov
and
push
stos
push
lock
and
sbb
std
daa
movsb
mov
rcr
scas
push
outsl
push
std
xchg
faddl
fistpl
add
and
push
adc
sbb
popa
dec
jno
or
add
xor
cltd
mov
rorl
jmp
sbb
ljmp
and
push
inc
and
sbb
rorl
sahf
outsl
data16
fmuls
pop
enter
xchg
lahf
mov
ror
push
in
insl
dec
flds
bound
dec
push
and
fisubrl
hlt
xlat
pop
daa
sub
inc
loop
insb
xorb
dec
jg
or
mov
movsb
fbld
sub
mov
push
fidivrl
inc
js
ljmp
push
jno
fdivp
jl
test
test
les
push
sti
adc
inc
push
mov
or
cmc
mov
mov
or
fnstsw
or
lea
std
lods
pop
lcall
lea
mov
lret
cmp
pop
mov
cltd
ja
out
mov
xchg
fcomps
fidivrs
outsl
mov
movsl
inc
movsb
push
mov
dec
mov
pop
pop
inc
out
jmp
add
insl
fstp
shlb
mov
mov
cmp
dec
and
mov
cmpsb
pop
mov
movsb
mov
pop
mov
mov
jecxz
stc
push
or
in
mov
or
int3
cmp
mov
cmp
aaa
or
repz
xchg
je
ror
in
dec
xor
fildll
add
add
xchg
adc
adc
mov
pop
mov
lret
or
adc
or
js
outsb
xchg
pop
in
inc
mov
rorb
testb
inc
cmp
or
jnp
sbb
mov
mov
push
mov
pop
popf
bound
mov
mov
jbe
sarl
adc
lds
adc
ljmp
pop
cmp
into
mov
lret
cli
cmp
jmp
imul
negb
sub
mov
push
push
jae
je
and
cmp
loop
and
and
add
xchg
mov
push
and
test
mov
xchg
xor
ret
pop
repz
scas
mov
nop
roll
clc
xchg
inc
and
cmpsb
les
inc
mov
popa
repz
cmpsb
in
dec
insl
jno
jle
mov
lahf
xor
dec
inc
xchg
data16
outsl
pop
loope
aas
aad
add
cltd
outsl
jecxz
popf
sahf
rcrl
ja
idivl
jp
mov
jg
push
nop
fcomi
ret
ja
dec
outsb
ja
out
repnz
mov
shrd
jmp
out
push
push
push
mov
ljmp
and
sbb
xchg
dec
fistps
inc
push
loope
xor
cld
adc
sub
sarl
xchg
push
or
jae
test
cmp
pop
aad
mov
add
insb
lret
in
int3
jge
inc
rorl
incl
xchg
mov
popf
sbb
mov
cmpsl
or
mov
pushf
sub
pusha
movsb
mov
cmp
mov
mov
fildll
dec
sbb
into
movsb
pop
sub
mov
push
xor
dec
fnstenv
js
or
sub
test
dec
fwait
jne
in
mov
pop
pop
and
jp
mov
mov
lcall
mov
and
cld
in
sub
ss
in
cwtl
mov
push
cs
xor
fidivl
call
pop
pop
bound
mov
jle
sbb
ljmp
add
mov
add
or
in
xor
arpl
popf
add
int
mov
jae
aaa
out
mov
fldcw
fstl
xchg
in
test
xor
cmp
mov
adc
mov
fdivrp
or
lret
pop
xlat
test
jae
jns
fildll
mov
outsl
in
lock
ja
xchg
imul
mov
cmpsl
and
pop
inc
pop
add
or
sti
jb
mov
and
es
mov
push
inc
pop
lods
fwait
imul
xor
lret
mov
push
jno
scas
out
push
imul
xor
inc
cmp
pop
ret
imul
cmp
imul
mov
mov
jmp
sub
fistpl
xchg
imulb
inc
or
push
jg
add
sbb
mov
clc
movsb
and
jne
jmp
xor
sub
fisttpl
enter
sbb
jb
ljmp
xor
sbb
stc
lock
adc
out
xchg
mov
or
pusha
dec
out
andl
mov
and
xor
lea
ret
mov
lret
push
popa
mov
into
stos
testl
ljmp
mov
faddl
scas
inc
inc
sbb
sub
mov
outsb
push
loopne
insl
mov
inc
mov
jns
jns
push
stos
repz
rclb
jns
cmp
movsb
pop
loop
jne
push
dec
aad
leave
sub
push
aam
inc
adc
fimull
scas
pmulhw
push
push
popa
stos
add
fwait
mov
dec
loopne
push
in
loope
mov
xor
xor
or
mov
mov
or
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
lea
mov
mov
mov
shrd
shr
mov
mov
xor
shl
mov
xor
jmp
loopne
cwtl
xchg
mov
pop
add
outsl
mov
mov
jle
in
sbb
adc
sbb
xor
out
inc
cmpsl
dec
pop
sbb
test
sti
lods
jb
dec
push
jmp
mov
in
jle
sarb
pop
inc
mov
jbe
insl
jecxz
out
dec
popf
aaa
ret
and
and
loopne
sub
sub
sbb
push
imulb
fidivrl
insl
dec
jecxz
movsl
mov
xchg
lahf
push
pop
sub
xchg
mov
pmuludq
call
add
repz
mov
or
pusha
fadd
sub
scas
ljmp
bound
add
or
aad
test
enter
sub
jg
movl
mulb
ja
inc
shll
inc
outsb
pop
xchg
jbe
mov
enter
adc
shll
in
sti
mov
pop
push
pusha
test
xchg
test
shlb
dec
cld
aam
lret
cwtl
or
test
jecxz
pop
adc
pop
jge
push
sti
iret
mov
push
sbb
sbb
and
outsb
iret
cmpsb
dec
ficomps
iret
dec
or
orb
xor
xchg
jp
mov
mov
add
sub
and
arpl
or
test
outsb
mov
mov
adc
cmp
js
xchg
jge
cmp
xchg
das
pop
sbb
push
or
adc
push
loopne
pop
cwtl
lods
dec
push
mov
mov
add
cli
jl
or
pop
in
jmp
dec
add
imul
jmp
jecxz
nop
push
dec
dec
pop
outsl
mov
cld
add
xchg
lcall
or
jnp
scas
nop
rcll
dec
lds
push
jle
or
cli
jnp
or
stos
sbb
jae
adc
ret
xchg
dec
shl
adc
inc
or
mov
sbb
inc
scas
fsubrl
dec
pop
rcr
jns
jge
leave
and
stos
loope
test
out
add
pop
adc
scas
push
and
cmp
lea
inc
xchg
loope
jo
xorb
pop
ljmp
push
dec
jbe
adc
out
xor
cmp
jl
aas
mov
and
jg
addr16
insl
jl
sub
push
hlt
adc
mov
mov
cmpsl
mov
sub
in
jo
cmp
push
and
pop
arpl
sub
sbb
test
jmp
arpl
gs
scas
sbb
cmpsl
push
or
cli
push
in
push
add
jae
scas
cli
push
push
iret
push
jmp
xor
xchg
inc
pushf
lods
dec
push
clc
push
xor
adc
insb
shlb
mov
dec
cmpsb
mov
or
mov
test
mov
mov
fdiv
sbb
or
mov
jmp
nop
dec
nop
add
lock
xor
mov
sbb
and
sbb
iret
fdivrp
pop
insl
fidivrs
inc
stos
enter
clc
leave
xor
scas
scas
decl
in
icebp
mov
test
icebp
mov
leave
pop
leave
pop
inc
outsl
cld
mov
arpl
push
jecxz
push
or
lret
jno
lock
jb
mov
in
out
and
sahf
adc
icebp
inc
idivl
mov
aas
incb
and
jmp
aam
dec
in
sti
insl
add
outsb
cmc
mov
jp
push
push
or
repz
pop
cmc
rol
mov
jns
fadd
js
mov
ret
mov
mov
push
or
and
decl
lret
mov
jge
mov
pop
jno
inc
rolb
xchg
mov
inc
inc
ds
ds
add
es
lahf
aaa
into
bound
data16
xor
test
or
cmp
adc
int3
es
push
fwait
sbb
lock
mul
call
mov
data16
or
mov
cmp
sar
inc
fst
jb
faddl
out
mov
sub
mov
mov
lea
jno
fisubrl
mov
ss
in
jnp
mov
lods
jnp
jnp
iret
pop
dec
es
insl
in
insb
cli
mov
add
subl
loop
jns
add
push
les
xorb
call
push
out
dec
imul
sbb
gs
jb
lods
sub
pop
lahf
iret
test
push
enter
and
inc
xorl
jns
xchg
mov
lret
jb
out
shlb
call
loop
xor
repnz
fs
daa
inc
shl
aas
adc
ds
dec
les
mov
adc
sub
in
xchg
xor
mov
push
add
int3
jp
push
dec
test
push
gs
int
jp
movsb
addr16
loop
mov
jmp
push
lea
cmp
inc
ds
dec
sbb
add
and
loope
ret
xchg
lret
mov
aaa
add
add
in
xchg
and
loopne
mov
xor
dec
jns
enter
cmp
adc
mov
cmp
ss
sub
adc
sub
rclb
dec
add
int3
xor
pop
outsl
mov
xchg
jns
sub
adc
cmp
loopne
jge
ds
mov
mov
jl
mov
aad
dec
dec
mov
and
pop
lahf
call
roll
jbe
pop
loope
add
add
lods
test
shlb
decl
push
jg
leave
pusha
cs
jecxz
ljmp
fwait
adc
aam
repnz
notb
add
push
xchg
mov
aas
fdivrs
jbe
xlat
add
jns
fs
sub
insb
add
mov
mov
shrd
shr
mov
mov
xor
xor
jmp
and
xor
ficomps
mov
jo
sbb
and
sbb
jne
popf
xor
sarl
push
sub
loopne
test
mov
cmp
push
inc
cld
clc
mov
int3
add
inc
dec
mov
xchg
fiadds
daa
stos
pop
stos
cmc
ret
mov
insb
data16
fistpl
setno
mov
add
cmpsl
leave
sbb
mov
test
mov
jae
int
out
mov
cli
cltd
pop
xor
idivl
or
mov
aad
sbb
dec
inc
sbb
outsb
jecxz
jg
hlt
cmp
rcrb
and
mov
inc
cmc
mov
or
jle
jb
mov
mov
nop
pop
push
sub
mov
xor
mov
jnp
and
ss
xor
shlb
push
dec
stc
mov
in
sti
lcall
mov
or
lret
cmp
pop
jo
cld
xchg
jecxz
mov
scas
aam
xchg
add
jle
jmp
push
out
push
push
and
mov
shrl
rcrl
adc
dec
xor
and
xchg
pop
outsb
cli
mov
out
pusha
adc
or
aas
push
cmpsl
in
popf
inc
pop
shll
dec
sbb
sbb
insl
push
pop
xor
sub
test
mov
data16
push
out
inc
push
add
xor
imul
stos
push
in
fwait
cmpsb
movl
sbb
or
add
stos
popf
adc
fwait
cld
dec
mov
jae
mov
sbb
imul
inc
idivl
push
xchg
movsb
lret
in
rorb
pop
gs
adc
cmp
push
push
pop
je
jne
push
pushf
sub
push
or
sub
out
mov
ljmp
jnp
mov
jecxz
fucomi
sahf
jg
sub
pop
pop
int
xchg
rcll
add
cwtl
adc
cmpsb
pop
and
js
cmpl
adc
mov
push
lods
shll
push
sub
je
inc
and
insb
push
lds
rcll
pushl
dec
loopne
imul
icebp
pop
lock
data16
push
push
adc
sub
jae
aas
cltd
mov
xlat
ja
cmp
push
fnop
xchg
dec
cmp
and
out
shr
xor
push
mov
into
inc
push
movsb
arpl
out
nop
xor
mov
rorb
mov
test
out
cmp
xlat
and
cmp
sbb
leave
repz
mov
lods
dec
sub
jno
bound
mov
out
cltd
repz
int
lret
inc
inc
pause
sti
xor
sub
mov
inc
nop
jg
cmpsl
mov
out
inc
rcrb
test
push
add
mov
shl
mov
shrd
shr
mov
mov
xor
xor
or
mov
shl
mov
mov
mov
or
mov
mov
shrd
shl
shr
mov
mov
xor
mov
xor
or
mov
dec
not
and
xor
mov
mov
xor
or
mov
mov
shrd
jmp
fdiv
sub
mov
xchg
cmp
sbb
and
sbb
lret
jnp
push
repz
sbb
ljmp
cltd
test
push
scas
inc
leave
push
test
decb
xchg
out
sbb
out
inc
add
test
js
out
push
ja
popa
mov
push
scas
fisubrl
sbb
cli
cltd
ficoms
movsb
jmp
ja
push
aaa
jnp
in
subb
sub
in
ja
add
je
popa
popf
mov
and
test
sub
push
lcall
out
dec
imull
jecxz
and
sahf
jae
mov
pop
imul
stos
jns
shll
daa
pop
mov
and
das
in
xchg
mov
das
mov
add
xchg
es
insb
add
add
loop
call
testb
test
sub
mov
leave
dec
imul
and
pushf
out
dec
cmp
jg
mov
or
mov
dec
scas
sub
pushf
dec
sahf
pop
iret
iret
div
and
out
sbb
dec
les
inc
push
sahf
adc
xchg
idiv
xchg
lock
jno
cmc
sub
aas
into
add
popa
and
addl
out
or
std
xchg
sub
repz
shl
lcall
mov
cmp
popa
subb
xchg
pop
data16
sub
jmp
imul
pop
sbb
sub
imul
pop
add
mov
add
ljmp
sub
push
push
nop
pusha
stos
aaa
sahf
push
outsb
in
xchg
movsl
push
push
and
dec
sub
dec
js
and
push
js
xchg
jo
or
or
sbb
shlb
out
sbbl
inc
lret
and
cs
and
adc
movsb
or
mov
out
iret
pop
ds
dec
sub
mov
neg
push
mov
in
ret
cmp
daa
pop
mov
das
mov
cltd
jbe
addb
push
lock
add
mov
js
xchg
xchg
pop
push
loope
lahf
filds
lods
mov
dec
je
mov
fndisi(8087
mov
jp
jae
pop
cmpsl
jl
jbe
testb
ds
ret
int3
in
jno
in
rcl
mov
roll
mov
fistpll
mov
out
mov
xchg
clc
jae
xor
push
pusha
daa
adc
pop
data16
in
rorl
leave
es
inc
push
cmp
push
mov
mov
enter
imul
mov
cwtl
cld
jl
lock
insl
aam
jb
mov
or
mov
mov
adc
xchg
into
cli
jae
or
loopne
pop
lea
ja
jbe
lcall
test
push
imul
dec
cli
shr
mov
mov
mov
xor
mov
xor
shl
mov
or
jmp
out
mov
stos
mov
test
jl
int
sbb
adc
sbb
outsb
sbb
into
jnp
frstor
cwtl
nop
adc
xor
pop
loope
mov
mov
push
testl
andb
or
pop
loop
scas
les
or
popf
test
dec
fs
ljmp
cli
mov
pop
das
xchg
scas
pop
cli
lret
sbb
jbe
pop
cmc
cld
xchg
xor
arpl
sub
pusha
jmp
notl
jns
jg
cltd
pop
out
sbb
add
sub
adc
lock
or
pop
sbbb
lahf
fsub
inc
push
mov
std
mov
sub
jle
xchg
addr16
xchg
add
mov
test
pop
mov
scas
pusha
fnstsw
mov
cwtl
sub
or
sahf
jnp
dec
mov
mov
sub
out
mov
jle
xchg
popa
push
sub
lds
rcll
push
popa
shl
mov
ss
mov
fisttpl
xchg
pop
jle
push
jl
sub
dec
mov
mov
or
xchg
data16
sub
outsb
or
mov
cs
inc
xor
arpl
jmp
fidivl
das
dec
in
out
mov
push
xchg
mov
xor
aad
jno
mov
ds
mov
movsl
das
outsb
clc
rcr
add
test
fists
cwtl
and
adcl
ljmp
adc
add
int3
lret
dec
xor
dec
icebp
arpl
mov
mov
push
mov
or
push
ret
addr16
sub
add
mov
out
sub
fcomps
xor
lahf
je
dec
cmp
out
jp
stos
jge
inc
or
lcall
mov
lods
push
jecxz
cmp
cmpsb
aas
mov
dec
jnp
adcl
or
pop
and
movsl
inc
push
out
inc
cwtl
add
dec
bound
arpl
and
mov
dec
cmc
hlt
push
jbe
mov
sub
dec
xchg
cmovge
sbb
clc
sub
push
push
mov
clc
dec
mov
push
cmpsl
mov
jne
cmp
mov
adc
pop
or
imulb
mov
pop
push
fwait
das
mov
jge
inc
mov
mov
xor
inc
out
insb
mov
les
and
xchg
push
fstpt
xor
lock
data16
mov
push
dec
add
and
push
icebp
sarb
mov
and
addr16
into
cmp
ja
or
sub
stc
sahf
inc
sti
icebp
sbb
into
cwtl
dec
insl
xchg
inc
sbb
xor
lcall
lods
popa
jecxz
inc
iret
movsl
mov
sbb
xor
mov
cmp
je
mov
sub
mov
mov
jmp
dec
lret
repz
cmp
fildl
mov
sbb
adc
sbb
jnp
dec
outsb
leave
in
int3
cmp
mov
pop
gs
test
lock
gs
sub
inc
inc
push
insl
adc
test
fists
mov
fistl
cmpsb
xchg
push
mov
jge
jg
aaa
int
or
loopne
out
adc
jns
pop
sub
jmp
xchg
mov
insl
add
stc
pushf
outsl
xor
insb
dec
and
out
test
fildl
lret
sarb
cltd
jbe
pop
or
gs
pop
adc
iret
adc
push
dec
int3
shrb
mov
and
mov
and
pushf
and
ret
and
cmpsb
inc
sbb
dec
inc
sbb
dec
adc
cltd
mov
dec
lods
push
mov
out
out
mov
aad
pop
mov
dec
pop
js
or
pop
cmovne
adc
xor
xor
repz
xchg
push
or
sub
jle
mov
and
popa
pushf
movsb
daa
cs
xor
xor
pop
nop
fcmovnbe
xor
loop
xchg
fwait
into
sbb
popa
push
out
fyl2x
or
or
jno,pn
xchg
inc
dec
dec
inc
aas
pop
cmp
and
mov
fcmovb
xor
or
in
inc
dec
arpl
je
nop
pop
and
rclb
push
add
jmp
test
repnz
daa
mov
roll
lock
push
scas
call
cltd
pusha
pop
mov
pop
leave
fistl
inc
mov
lock
cld
loope
push
fadd
adc
loop
ret
mov
aam
sub
aam
dec
int
mov
cmp
fnop
push
pop
xchg
sbb
cmp
mov
inc
jo
repz
sub
in
lods
lock
pop
and
imul
aas
pusha
mov
add
pop
sub
loope
repz
xchg
out
lret
jg
jne
jmp
cmpsl
je
or
pop
fneni(8087
lahf
and
daa
inc
and
mov
lock
mov
out
mov
adc
lea
test
mov
test
or
jo
and
int3
xor
in
dec
out
sti
sahf
mov
inc
jp
pushf
sahf
scas
add
bound
arpl
aaa
inc
dec
push
inc
adc
cmp
push
inc
xor
cmpsl
sbb
mov
jge
inc
mov
lahf
mov
aad
sbb
pop
xchg
adc
lcall
iret
or
aam
xchg
adc
push
jmp
jnp
xchg
push
and
mov
jns
pop
ds
aaa
push
lods
sub
jp
and
movsl
mov
mov
imul
xor
shrd
shr
mov
mov
mov
mov
xor
or
mov
mov
mov
xor
xor
mov
mov
mov
shrd
shl
xor
or
mov
mov
mov
shll
xorl
mov
mov
mov
xor
or
shr
or
cmp
jne
cmp
je
jmp
mov
mov
xor
xor
shrd
shr
mov
mov
mov
mov
xor
or
jmp
iret
xchg
ret
or
cmp
jo
cmc
clc
push
rcrl
and
sbb
loop
aam
xchg
sbb
fstpl
push
pop
xor
cmc
mov
push
adc
jge
mov
fidivl
aad
dec
sub
das
jno
mov
xchg
adc
ljmp
lcall
outsb
movsl
stos
mov
or
sub
out
adc
pop
leave
mov
lods
in
out
test
mov
test
jp
mov
dec
mov
sbb
mov
xor
mov
adc
adc
cmp
jle
test
pop
jb
adc
outsl
lods
fistps
cs
stc
jne
push
test
into
sbb
mov
cmpsb
sbb
jge
add
sahf
mov
mov
mov
mov
push
push
cs
inc
sti
adc
aam
loope
mov
push
push
jne
adc
sbb
lods
mov
shlb
shlb
push
shrb
mov
pushf
cmp
dec
popf
addr16
nop
pop
inc
aad
mov
and
divl
mov
out
jmp
ret
sbb
fidivrs
mov
in
push
inc
jae
dec
das
das
std
pop
popa
orb
fisubrs
in
fstpl
xor
out
sbb
enter
jne
dec
loope
stc
clc
jnp
inc
mov
out
xchg
or
movsb
fucomp
mov
pop
inc
xlat
fsubl
push
fbstp
push
dec
adc
ja
xchg
mov
fcoml
mov
andb
push
cmp
dec
mov
mov
jp
pop
inc
jp
sbb
cmp
and
inc
push
dec
or
mov
icebp
imul
cmp
add
test
mov
push
cmp
test
push
cmc
jecxz
xchg
test
cmp
mov
pop
sub
fcoml
push
mov
pop
mov
jnp
lods
dec
mov
add
push
out
loopne
mov
aas
in
loope
mov
inc
pop
xchg
xor
cmp
cmp
pop
push
and
or
inc
shll
push
cmp
lds
in
xor
adc
scas
dec
fs
fsts
dec
mov
loop,pt
inc
sti
test
das
dec
sbb
scas
pop
fisttpll
pusha
or
les
push
or
add
fwait
cmpsb
addl
xchg
pop
push
fnstenv
fisubrl
pop
ja
jmp
test
fstps
std
insb
les
andb
decb
xor
adc
or
or
dec
xlat
mov
mov
loop
xlat
mov
mov
in
rcr
ror
mov
shl
xor
or
mov
mov
xor
jmp
fstps
cmp
and
pop
xchg
rcrb
push
mov
sbb
bswap
mov
xchg
stos
cmpsl
jnp
mov
jno
addr16
notl
and
and
cmc
popa
xor
cmp
push
rorl
jb
pop
int
dec
outsl
jb
das
or
fstpl
cli
gs
jle
pop
dec
sub
or
jno
dec
pop
and
pusha
mov
scas
sub
bound
mov
mov
inc
fidivrl
decl
outsb
fiadds
cmpsb
xor
js
sbb
fistpll
sbb
movsb
sub
push
mov
pop
lahf
shl
int
inc
jp
shlb
fidivl
hlt
js
ret
xchg
mov
enter
cmpb
xchg
push
sahf
call
xor
insb
jno
test
pmulhuw
cs
popa
dec
stc
inc
pusha
xchg
ret
outsl
cwtl
rorl
mov
mov
neg
idivl
jle
and
mov
push
stos
or
mov
jmp
cmp
or
enter
enter
outsl
data16
push
mov
inc
loopne
sbb
push
inc
dec
push
lea
pop
cmp
lods
inc
ljmp
addr16
sub
sbb
push
xchg
jae
popl
jl
fistpl
jns
icebp
arpl
sub
daa
mov
mov
add
adc
xor
mov
adc
xchg
mov
dec
loopne
mov
in
push
cmp
cmpsb
popf
dec
sbb
shlb
cli
xor
xlat
outsb
sbb
push
fs
mov
sarl
fisubrs
outsb
xchg
loope
jo
repz
push
cmp
ja
and
mov
jno
push
movsb
out
jbe
jb
arpl
dec
icebp
fidivl
aad
nop
cmpsl
cmc
mov
mov
jg
xlat
repz
cmpsl
inc
hlt
mov
mov
imul
xchg
aas
sbb
xchg
or
sub
ja
mov
arpl
adcb
push
leave
dec
aas
jo
cmpb
aam
adc
popf
iret
jp
int3
cwtl
jl
stos
sahf
and
and
xor
mov
les
ljmp
push
mov
cmp
push
pop
pop
dec
and
xchg
cli
daa
add
mov
mov
dec
push
and
cmp
dec
inc
imul
cmp
mov
and
rcr
fs
push
xchg
pop
stc
adc
in
shl
or
addb
int3
rclb
mov
or
xlat
cltd
repnz
lods
inc
xlat
push
dec
and
aaa
inc
or
into
movsb
mov
das
mov
mov
mov
mov
xor
mov
mov
shrd
shr
mov
mov
mov
shll
xorl
xor
mov
or
mov
mov
mov
or
mov
mov
cmp
jne
mov
cmp
je
mov
mov
mov
mov
lea
mov
mov
mov
mov
mov
shrd
mov
mov
xor
jmp
daa
into
dec
cli
sbb
sub
int
jo
mov
sbb
adc
sbb
out
xlat
shlb
aad
cmp
sub
iret
xchg
ja
inc
mov
jl
cmp
xor
add
imul
popa
xor
add
pop
roll
mov
jns
dec
mov
mov
cwtl
push
mov
xlat
andl
incl
repz
or
fs
bound
das
arpl
stc
xor
jno
loopne
div
jmp
iret
out
cmp
mov
dec
pop
movsl
inc
leave
jae
lret
in
mov
repz
shrb
inc
mov
mov
push
jmp
add
cmp
dec
mov
imul
scas
inc
jp
popa
jecxz
xor
cmp
adc
pop
pop
add
jl
add
aas
jl
mov
jne
cli
cmpsl
mov
js
add
jle
push
cltd
les
lahf
inc
and
pop
xchg
jge
pusha
add
hlt
xor
arpl
enter
aad
xor
ss
fsubrl
ret
mov
jecxz
xor
arpl
fidivl
mov
outsb
fcompl
xor
bound
dec
js
iret
pop
xchg
ljmp
fildl
pop
aad
repz
dec
sti
mov
jl
fnstsw
pop
mov
jl
lock
bound
lods
hlt
inc
out
pusha
out
arpl
xchg
jno
std
int3
mov
stc
mov
jne
enter
test
sbb
out
sub
mov
addr16
test
push
pop
mov
inc
jg
xchg
fiadds
sti
and
shl
sbb
mov
dec
add
push
jne
outsl
aam
dec
stos
aas
jb
push
movl
jae
jne
fs
jge
xchg
xchg
sarb
out
bound
fcomps
out
lds
daa
test
mov
dec
into
ja
stos
jnp
imul
add
scas
jo
ljmp
mov
adc
xor
adc
xor
mov
mov
pop
xor
loope
sub
pushf
add
mov
aaa
mov
dec
fnstcw
icebp
in
mov
jb
dec
enter
cmovb
inc
pop
mov
xchg
pop
dec
pop
fstl
push
out
enter
repz
xchg
mov
pop
das
push
or
mov
icebp
xor
sahf
subb
insl
sub
stos
pop
push
or
xchg
dec
cli
mov
inc
sub
lret
fnsave
xchg
mov
mov
imul
ror
jno
push
and
xchg
pusha
pusha
hlt
mov
mov
mov
cmpsl
shl
mov
xchg
jmp
pop
imul
cli
dec
sbb
xor
mov
cmp
rcr
mov
shr
jmp
inc
inc
lret
dec
lret
inc
dec
and
mov
test
sbb
and
sbb
test
mov
and
gs
dec
pop
adc
movsl
inc
xor
push
fnstsw
cmp
cwtl
daa
scas
test
mov
push
dec
hlt
sbb
inc
pop
and
dec
dec
jmp
insb
cmpsb
fisubl
xchg
cli
jge
lods
dec
fidivl
xchg
fists
dec
jns
outsb
jne
xor
aaa
and
xchg
pop
pusha
sub
and
jle
out
sub
inc
mov
in
cmp
gs
mov
mov
lea
dec
lds
lret
sbb
clc
mov
jmp
test
adcb
mov
scas
ret
rorl
jmp
push
jl
jnp
push
and
add
fcomip
shll
mov
into
out
mov
fists
outsb
fldl
fsts
ret
jnp
sub
insl
pop
mov
mov
sub
fwait
pop
xchg
test
movsb
push
mov
pushf
aaa
insb
jmp
add
mulb
or
in
jbe
pop
inc
mov
inc
mov
mov
or
pop
or
mov
dec
fisubrl
or
clc
fldenv
shrl
jge
inc
enter
pop
aad
aas
add
shrb
fadds
jne
pop
iret
mov
dec
fwait
xchg
push
mov
clc
pop
push
fistps
adc
sarl
or
jge
xor
inc
adc
roll
push
or
push
sbb
jae
fcoml
inc
cli
and
fcoms
aam
sar
mov
add
fists
xchg
test
push
mov
ds
sub
jp
mov
xor
ret
adc
out
mov
lds
push
fcomp
arpl
scas
test
xor
leave
mov
cltd
decl
cmp
dec
clc
jge
call
lock
xor
imul
mov
inc
mov
movsl
pop
je
dec
push
push
dec
cld
cmp
xchg
lahf
aam
call
add
rorl
cmc
aam
popf
mov
nop
sbb
sbb
ret
and
movsb
mov
mov
push
and
sub
inc
mov
jmp
orb
add
xor
mov
jae
push
gs
call
cmp
jge
sahf
sbb
or
int
mov
test
es
cltd
enter
sbb
mov
pusha
add
dec
ficompl
aas
sub
inc
add
push
stos
in
ss
cmpsl
sbb
mov
insl
shlb
or
lcall
add
push
lods
mov
pushl
insb
movsl
movsb
mov
mov
ja
jno
enter
add
scas
mov
mov
lret
mov
in
out
stc
jne
pop
sbb
push
add
rol
loopne
or
mov
mov
mov
xor
shld
xor
mov
mov
shl
mov
mov
xor
mov
cmp
jne
mov
jmp
mov
int3
xchg
sbb
dec
fstpt
test
mov
sbb
and
sbb
mov
daa
cmp
xor
shl
mov
scas
mov
mov
inc
mov
lods
add
daa
fdivr
es
ret
sti
stos
jo
mov
sub
jp
sbbl
push
lret
iret
loopne
lret
cmpsb
cli
dec
hlt
pop
xchg
mov
loop
pop
fs
jne
mov
cmp
dec
xchg
xchg
xchg
xor
adc
cwtl
pop
loop
cmp
mov
mov
imul
lea
mov
dec
fistpl
or
or
imul
frndint
outsb
jns
inc
addb
add
arpl
test
cmp
mov
pop
in
mov
shlb
add
push
push
popa
inc
mov
jp
dec
mov
adc
cwtl
push
or
pop
jl
pop
ffreep
adc
rolb
psllq
adcb
push
pop
sub
mov
push
dec
imul
add
jmp
cmc
mov
in
mov
push
xchg
cmp
test
mov
push
sarb
adc
lcall
add
aam
xchg
sbb
out
enter
aad
addr16
xchg
dec
jp
imul
push
std
stos
mov
jge
xlat
ljmp
push
add
stos
rolb
mov
enter
out
pop
push
mov
mov
gs
lcall
xchg
add
fs
clc
mov
bound
in
cmp
add
xchg
loopne
das
sbb
sub
pop
movsl
jl
aas
pop
ret
andb
sahf
ljmp
sub
mov
outsl
adc
sbb
das
in
int
lcall
add
lret
cmp
sbb
adc
iret
inc
mov
or
inc
loopne
push
mov
cmp
out
jnp
subb
stos
in
mov
or
xor
and
cltd
sub
in
call
loope
mov
mov
add
mov
xor
push
mov
stos
pop
fmul
imul
mov
fistps
orb
inc
mov
fwait
pop
ss
ljmp
push
mov
fisubl
push
pop
push
dec
inc
pop
popa
push
std
aaa
push
adc
xchg
fisttpl
and
pop
pop
loopne
jmp
call
pop
sub
cmpsb
xchg
adc
mov
cmp
jnp
repnz
loopne
or
or
movsb
loopne
iret
fwait
imul
ja
fisttpl
dec
xor
or
add
movsb
adc
fistpll
inc
or
test
push
mov
mov
mov
xor
xor
mov
mov
shrd
shr
mov
mov
mov
mov
xor
or
mov
shl
xor
mov
mov
or
mov
push
pushl
push
push
call
mov
mov
shrd
shr
shr
xor
push
xor
mov
mov
mov
push
push
push
call
shld
mov
xor
or
mov
mov
shl
jmp
subl
pop
rclb
mov
sbb
adc
sbb
jge
xor
mov
jbe
cmp
cli
jle
inc
pop
jb
push
mov
cwtl
ds
add
jnp
dec
push
dec
xchg
sub
dec
repnz
mov
push
push
adc
cmp
ret
aad
out
test
inc
in
jecxz
or
fisubl
lea
int3
inc
xchg
cld
jno
or
std
sbb
xchg
ds
adc
imul
sub
repz
fdivrs
mov
mov
sub
adc
stos
test
or
cmp
cmp
sbb
insl
xchg
xchg
mov
es
push
sub
cld
scas
gs
push
loop
xchg
repnz
imul
xchg
cmpsb
mov
pushf
aam
dec
mov
add
cltd
std
lods
fwait
lock
push
cs
int3
in
dec
js
ja,pn
mov
push
push
call
lcall
hlt
xchg
mov
cmp
les
pop
cltd
xchg
xlat
push
movsb
cld
dec
sbb
xlat
push
cltd
sbb
ds
adc
adc
cwtl
fisubl
jo
aad
fdivrl
pop
pop
sub
scas
push
pop
scas
outsb
ja
inc
ss
push
pusha
stos
sub
lret
jge
push
inc
lea
ljmp
fsubr
jp
pusha
xor
cwtl
es
jge
movsl
leave
mov
xor
in
subl
cmp
mov
fdivr
out
mov
or
mov
cli
push
lcall
adc
dec
mov
sub
cld
bound
ret
push
jb
mov
add
pop
pop
mov
int
addr16
rcll
je
mov
mov
jmpw
jne
mov
std
xor
push
inc
lcall
in
adc
lock
subb
adc
mov
pop
cmp
rorb
push
ja
dec
pop
jno
bound
inc
test
test
sub
lcall
sbb
ja
fcomps
int
frstor
pop
xchg
sub
sbb
push
lods
push
imul
adc
fisubrl
adc
enter
ret
fdivrs
cmp
je
mov
daa
push
jmp
outsl
fdivs
aam
xor
inc
ss
pop
stc
xlat
and
xchg
sbb
dec
mov
jbe
inc
dec
and
fidivs
cmp
out
cmp
and
imul
adc
daa
stos
fidivl
test
ficoms
fwait
shll
adc
jge
scas
leave
cmp
pop
mov
adc
pop
je
popa
popf
cmp
pop
inc
and
cmp
popa
dec
sti
lods
out
ljmp
flds
sbb
inc
adc
stc
xor
xor
xor
mov
mov
jmp
mov
add
mov
mov
mov
mov
mov
mov
movzwl
cltd
shld
xor
mov
mov
shl
mov
mov
xor
mov
cmp
jmp
lock
or
dec
loopne
pop
ret
sub
fistpll
popf
sbb
and
sbb
cmp
and
push
shr
jo
adc
test
push
subl
mov
sarb
sti
and
pushf
cmp
inc
ret
lcall
andl
fwait
test
imul
ror
or
out
fstpl
adc
add
fnsave
mov
fsubl
xor
cmpsl
stos
mov
stos
pop
push
push
sets
jle
shlb
int
rcll
nop
cs
adc
jp
push
loope
push
or
aad
or
dec
hlt
sahf
mov
jp
jmp
repz
lock
push
cmp
repz
dec
lea
sarb
pushf
or
fisttpl
lcall
dec
inc
cli
lock
addr16
cltd
loope
int
adc
jle
sub
push
test
andl
pop
xchg
xor
lret
lahf
push
mov
mov
and
push
and
lods
popa
fucomip
jg
scas
xor
arpl
dec
cli
xchg
jo
and
or
sahf
fstp
mov
in
pop
push
mov
cmpsb
jb
ljmp
lret
or
gs
in
xlat
inc
cmpl
stos
imul
jo
sti
mov
and
sub
inc
jno
mov
rcrl
xchg
inc
xor
arpl
mov
ret
fnstcw
out
push
iret
add
jg
dec
mov
sbb
scas
sbb
inc
cmp
sti
jl
in
pop
and
jne
testl
dec
and
lret
xchg
jmp
pop
cwtl
mov
ljmp
inc
sub
ja
rcl
dec
loope
scas
sbb
and
mov
mov
add
cmp
insl
pop
mov
out
hlt
add
adc
mov
bound
add
outsb
scas
add
mov
and
loopne
sub
out
lock
pavgw
test
lods
pop
xlat
adc
repz
mov
imul
cmc
or
pop
call
dec
mov
pop
and
mov
pop
jl
mov
enter
push
or
xchg
nop
sarl
into
dec
push
jl
mov
call
xor
cmp
fists
pop
or
mov
pop
fwait
xchg
push
xchg
out
dec
mov
ss
fstpl
jo
cli
xchg
push
push
jg
pop
adc
xchg
pop
std
shlb
cmp
out
sahf
ficoml
ret
cmc
ficoml
and
sub
xchg
pusha
or
pop
mov
jle
mov
xlat
fisttpl
xor
ss
xor
sub
pusha
and
test
cmp
jne
movl
mov
movl
mov
movl
mov
movl
mov
mov
mov
shrd
shr
mov
jmp
fdivr
fists
ss
shlb
jle
xchg
sbb
and
sbb
cmp
stc
mov
bound
shrl
shrl
cmp
std
adc
push
dec
and
mov
add
mov
and
inc
les
adc
adc
outsb
cwtl
mov
push
mov
repnz
sbb
push
pop
int3
test
icebp
xor
popf
inc
and
or
aam
push
stos
cmc
ror
popf
arpl
add
cmp
stc
repnz
repz
or
test
sub
andb
sbb
cmpsl
jns
int3
sbb
insb
xor
sbb
mov
xor
push
cmp
pop
leave
or
inc
xor
add
ret
jns
ror
ss
push
push
jmp
sub
daa
mov
scas
push
add
repnz
fisubrs
mov
repnz
cs
push
lcall
in
cltd
and
rcrl
push
aas
jmp
fs
jl
stos
mov
daa
cmpsb
mov
sbb
adc
into
dec
out
cmp
dec
dec
xchg
pop
fdivrs
rcrl
fxch
xchg
dec
mov
repnz
mov
ret
dec
out
repnz
jp
mov
cmp
cltd
cmp
add
xchg
inc
sub
mov
cmp
lret
lcall
cmpb
sahf
xor
mov
pop
push
xchg
lahf
mov
dec
jecxz
push
jne
jp
movsb
add
inc
outsl
xor
sub
out
inc
insb
push
sbb
or
xor
push
insb
inc
jne
enter
test
mov
pusha
jge
outsl
and
shrl
stos
mov
icebp
add
nop
movsl
and
mov
pop
and
ret
stos
cmp
xor
popf
insb
into
xor
xor
sti
nop
ret
jmp
add
mov
jle
or
cltd
test
mov
push
add
repz
stos
sub
mov
aad
fwait
sarb
mov
test
mov
push
and
imul
std
jle
test
cltd
icebp
mov
enter
cmp
subb
mov
xchg
in
stc
ret
pop
or
out
enter
jae
loop
call
mov
mov
mov
out
idivl
or
dec
les
lock
mov
push
inc
lea
cmp
sti
xchg
inc
popf
fsubrl
jl
pop
inc
adc
lret
jne
leave
push
jl
xor
loopne
jne
xor
icebp
xorl
fwait
pop
ret
push
mov
hlt
mov
fstpt
fildl
cwtl
or
mov
add
pop
jp
cmp
push
or
mov
add
add
sbb
push
push
out
push
pop
int
rclb
sbb
push
fstp
xor
das
xchg
jne
pop
fnstenv
xchg
in
insl
cmp
mov
roll
iret
mov
jb
mov
enter
hlt
pop
aas
cmp
mov
jno
test
pop
and
xchg
dec
cmc
in
cli
fcomip
push
mov
sub
sbb
mov
stos
jne
push
pop
repz
mov
outsb
sarl
rcrb
notl
xchg
lret
jb
sbb
mov
or
popf
out
pushf
sbb
mov
or
inc
pop
dec
cmc
mul
fstl
xor
hlt
icebp
inc
push
push
xor
sbb
loop
daa
cmp
gs
pop
xchg
outsb
cwtl
sbbl
cmp
and
and
add
add
and
xchg
dec
icebp
jbe
jno
jg
dec
adc
inc
and
lock
inc
andl
sarb
notl
fbstp
jp
loop
adc
dec
or
enter
mov
mov
add
inc
and
addb
inc
push
push
xor
or
cmp
sahf
xchg
mov
loope
mov
inc
sbb
mov
test
jns
aaa
pusha
jne
movsb
ljmp
push
pop
aam
je
movsl
jl
pop
aad
xchg
pop
lea
fs
test
push
xor
adc
sub
cwtl
inc
cmp
add
mov
idivl
mov
in
stc
mov
add
push
insb
je
les
cmp
aas
inc
cmp
fnstenv
stos
and
fbstp
mov
popa
movsl
cli
xchg
mov
xchg
mov
cmp
popa
push
stc
out
cmpsl
sub
pop
cmc
shll
sub
or
push
mov
xchg
cmpsl
lret
dec
xor
jmp
jb
pushl
mov
enter
pop
or
loope
push
in
mov
out
pop
and
pop
cmp
adc
aad
jle
data16
mov
cmovb
adc
cld
leave
xor
inc
cs
xor
imul
xchg
mul
out
cs
fincstp
icebp
test
mov
push
dec
int3
sti
push
mov
and
fmull
iret
xchg
fistps
pop
cmp
inc
dec
push
imul
jg
push
sbb
rorb
sbb
mov
push
cmp
shlb
lcall
cmpsb
and
loopne
dec
ret
xchg
mov
cmp
sti
mov
mov
adc
shlb
mov
into
int
jle
and
sub
dec
sbb
fwait
cmp
cmpsl
sub
inc
cmc
sub
sub
enter
loope
gs
mov
dec
test
out
outsl
mov
push
jp
lea
mov
cltd
inc
xchg
mov
jl
add
mov
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
mov
mov
xor
mov
jmp
push
sub
fldt
mov
mov
fmuls
sbb
bswap
loopne
xor
aad
outsb
or
pop
dec
mov
ret
adc
add
es
xor
je
jns
std
scas
and
sbb
jmp
jp
aaa
mov
test
test
mov
pusha
jnp
and
mov
cmp
jg
mov
cltd
sbb
push
inc
jmp
lea
es
stos
out
test
push
push
shrb
pop
and
lcall
inc
push
vpmacsswd
lcall
xor
mov
push
jbe
push
sahf
insl
sti
stos
push
imul
test
mov
mov
ficoms
mov
movsl
xchg
and
adcb
mov
test
xchg
cmpsl
cli
or
sbb
push
fwait
sub
aam
xor
and
faddl
push
les
fcompl
test
fs
dec
les
std
mov
iret
lock
pop
das
popa
test
movsl
pop
xor
xchg
dec
inc
andb
imul
cmp
jle
rcrb
mov
xor
pshufw
aad
xor
rorb
testb
jae
icebp
mov
and
gs
jb
popl
fldcw
jmp
cmp
jne
cmp
aaa
pop
imul
fistpl
pusha
sbb
adc
dec
xchg
xchg
cld
pop
in
insb
out
pop
lods
icebp
pop
hlt
mov
mov
or
fstpt
cmp
inc
andl
mov
cmpb
subb
pop
repz
inc
mov
mov
inc
add
xchg
pusha
or
sbb
or
jecxz
push
sbb
sub
shrb
cmp
call
ja
mov
les
jbe
imul
mov
xor
setae
outsl
mov
mov
in
rclb
or
subl
jmp
call
cld
inc
or
dec
pop
push
inc
jecxz
popa
insl
into
inc
xor
xlat
mov
sbb
call
mov
ja
jmp
pop
mov
subb
addr16
out
sub
mov
xchg
mov
push
in
inc
imul
ret
movsbl
pusha
cs
cmp
jecxz
sahf
ss
and
xchg
sahf
testl
inc
in
mov
fistps
dec
outsb
inc
adc
ss
ss
xor
cltd
lods
stos
mov
jae
repnz
mov
loop
incb
aas
xor
and
jg
adc
mov
add
addb
ja
leave
fiadds
inc
mov
fbld
mov
shrd
shr
mov
mov
xor
shl
xor
or
add
mov
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
mov
mov
jmp
imul
fs
leave
leave
jl
ret
loopne
sbb
and
sbb
mov
sub
adc
pusha
cmp
packuswb
pusha
test
sarl
dec
pop
push
mov
loopne
pop
or
mov
mov
imul
push
mov
or
xor
xchg
and
mov
xchg
in
pop
xchg
adc
test
stos
mov
aas
pop
js
pop
add
push
mov
loopne
cli
xor
sub
movsl
lcall
adc
and
add
cli
jp
lea
pop
mov
in
xchg
mov
outsl
cmc
jle
push
jg
add
and
outsb
outsb
pop
add
out
call
pop
mov
push
add
sbb
lock
add
push
leave
mov
inc
jns
cwtl
push
jbe
xor
sahf
jge
fdivrl
js
dec
test
jbe
sbb
sti
fsubs
push
mov
xor
fbstp
movsl
or
sub
dec
and
hlt
push
push
int3
pop
cwtl
and
jle
cmp
push
add
dec
and
dec
and
and
add
andl
and
leave
push
cli
lret
test
or
push
insb
nop
jne
xchg
push
xchg
sbb
cmpsb
xchg
jo
addr16
cli
ret
fmulp
enter
movsl
push
mov
dec
sbb
dec
xchg
adc
add
fsts
lods
add
cli
outsb
cli
sahf
mov
add
and
sbbl
cmp
enter
pop
popa
inc
cmp
fdiv
push
test
jmp
in
push
std
decb
inc
add
aad
xchg
lock
rcr
sub
or
mov
inc
outsl
xor
xchg
push
xchg
xor
mov
popf
stos
jno
mov
fsts
divps
fidivrl
mov
cmp
pop
lcall
push
mov
fdivp
lret
jmp
sbb
xor
mull
and
scas
mov
pop
xchg
insb
fstps
dec
in
inc
push
mov
xchg
and
ss
movsb
arpl
bnd
aam
fsubrs
insl
andl
dec
dec
xor
push
in
lahf
sbb
movntq
xlat
jmp
dec
out
mov
mov
inc
and
into
sbb
xchg
xor
mov
ljmp
jg
out
movsb
jns
stos
cli
or
mov
rcl
dec
jns
mov
in
jle
cmp
and
lds
test
dec
ficoml
jno
xchg
popf
xor
dec
mov
imul
dec
loopne
jecxz
or
mov
mov
shrd
shr
mov
mov
xor
xor
or
add
shl
mov
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
mov
mov
add
mov
mov
shrd
shr
mov
mov
xor
xor
or
add
shl
mov
mov
shrd
xor
shr
mov
mov
xor
or
mov
or
shl
jmp
dec
sbb
jmp
dec
mov
jl
jg
sbb
adc
sbb
mov
push
or
out
fnstenv
inc
loope
in
push
int
pop
pop
je
stos
mov
test
cmpsl
fldenv
and
int
rcrl
sub
and
add
mov
mov
test
adc
sarl
enter
int3
shrl
xchg
inc
sbb
and
sbb
push
inc
pop
imul
mov
dec
push
mov
push
mov
ja
loop
popl
cwtl
test
sub
inc
shlb
and
push
xchg
add
xor
rolb
push
pop
add
fwait
adc
out
leave
std
arpl
arpl
jbe
int
rcl
inc
test
and
cmp
cs
xorl
xchg
pop
ljmp
sub
sbb
cs
push
sbb
movsb
mov
sbb
pop
rclb
daa
insb
icebp
push
adc
inc
dec
pop
jbe
into
xor
inc
sub
call
jb
sti
nop
cli
scas
lcall
and
dec
inc
jmp
push
and
sbb
popf
xchg
cmp
std
icebp
mov
je
push
outsl
or
int3
cmc
test
ret
loop
popf
pop
cli
subb
add
scas
addb
xor
cmp
stos
or
jnp
pop
mov
sub
mov
pusha
push
mov
enter
cltd
pop
ljmp
dec
mov
xor
fucomip
xor
loope
cmpsl
cmc
popf
cmpsl
mov
adc
sbb
imul
test
lcall
adc
fisttps
lock
jo
push
mov
add
hlt
cmpsl
pusha
adc
stc
push
call
xlat
xor
iret
and
aam
jnp
inc
fstpl
adc
or
test
jo
sub
push
sbb
iret
sbb
outsb
dec
xchg
jne
mov
cmpsb
and
bound
cli
icebp
push
pop
das
mov
andl
repz
inc
cmp
aaa
mov
cld
inc
jbe
or
push
shll
popf
fwait
sbb
mov
add
pop
fbld
xchg
xlat
sbb
dec
push
lods
xor
push
lcall
xorb
ret
out
dec
les
cwtl
mov
xchg
xchg
fisubl
xchg
sub
test
push
stos
icebp
xlat
js
mov
mov
jnp
repnz
lea
lahf
shlb
jbe
adc
pushf
fldenv
jmp
add
ret
cli
xchg
dec
cmp
roll
bound
xchg
imul
scas
add
roll
pushf
cmpsl
in
loopne
js
pop
and
pop
cmpb
cmp
jb
pop
cwtl
loopne
pusha
inc
lahf
fdivrl
pushf
mov
mov
mov
dec
dec
rorb
mov
mov
xor
xor
shrd
xor
or
mov
mov
mov
xor
xor
mov
mov
mov
shrd
shr
shl
jmp
mov
mov
sub
jle
mov
icebp
jns
sbb
adc
sbb
inc
xor
rcrl
xchg
enter
ljmp
inc
or
push
xor
or
inc
imul
enter
cli
xorl
les
das
jno
ds
fildll
icebp
mov
push
in
rcrb
scas
jnp
push
sub
imul
cmp
std
lahf
inc
push
das
push
imul
pop
ja
adc
inc
push
test
xchg
cli
jl
testl
pop
mov
pop
xchg
cmpsl
push
push
rol
jmp
aam
or
jb
in
xor
cmp
das
fidivs
fs
mov
mov
stc
sbb
push
out
das
fwait
les
fldt
roll
mov
mov
xor
pop
xorl
leave
pop
and
dec
stos
push
push
cs
fxtract
cwtl
scas
rcll
mov
mov
dec
movsb
xchg
jae
xchg
cmp
cmp
pop
or
aas
clc
xchg
pop
push
scas
call
xor
dec
xor
cmp
addr16
sub
push
or
icebp
or
pop
fstpl
mov
inc
adc
adc
inc
push
cmp
leave
sbbb
xchg
and
push
test
shll
sub
loopne
mov
sub
xlat
ret
scas
jno
scas
jae
dec
pop
adc
sti
insl
int
icebp
pop
pop
pop
and
dec
aad
sbb
adc
sbb
push
enter
jbe
fnstenv
push
push
sahf
andb
mov
das
sbb
mov
lcall
mov
faddl
sub
adc
sub
enter
xor
pop
sbb
sub
enter
int3
or
mov
push
cmp
shr
sub
adc
das
iret
inc
in
stc
aad
add
cwtl
mov
imul
pop
sbb
and
cmp
mov
adc
jmp
push
xchg
cmpsb
push
jno
add
nop
xor
or
enter
inc
les
aaa
stos
out
test
jmp
into
fwait
jp
mov
into
test
orl
push
push
jbe
mov
xchg
mov
push
test
dec
inc
cmp
repnz
sub
gs
xchg
xlat
adc
pop
jb
mov
stc
xor
mov
or
push
fisttpll
test
leave
push
fmuls
loope
ret
stc
test
test
or
lea
out
arpl
jmp
xchg
cmpl
jge
aam
fs
jnp
xchg
xor
and
jae
xchg
sbb
pushf
rcr
lea
lahf
sbbl
leave
or
iret
or
inc
sbb
xchg
mov
xchg
jmp
bound
fistl
std
scas
into
xchg
push
push
nop
mov
mov
xor
or
mov
shll
xor
mov
mov
mov
xor
or
shr
or
cmp
jne
cmp
jne
jmp
mov
jmp
loope
fidivs
insb
pop
pop
dec
xlat
mov
stc
jae
sbb
adc
sbb
test
xchg
test
pop
test
cmp
push
sub
dec
inc
sub
cmp
push
pusha
sti
jo
push
xor
cs
sbb
push
inc
popf
out
out
mov
int
lods
cmp
in
jge
icebp
mov
cmpsb
pushf
cltd
cli
sub
cmp
lods
lret
xor
jmp
iret
leave
jae
push
clc
push
lret
insb
out
push
iret
xchg
and
mov
movsl
rolb
cmpsl
filds
arpl
xor
es
sti
xchg
cmp
mov
push
mov
popa
push
rcrl
mov
popa
ss
lods
jle
popw
pusha
sbb
jmp
scas
pusha
std
adc
mov
imul
addb
stos
mov
add
pop
inc
scas
orb
insb
mov
xchg
sub
add
cmc
inc
push
in
mov
cmp
fisttpl
out
movsb
add
jmp
je
fs
inc
add
popf
iret
out
jo
es
out
add
in
xor
mov
adc
adc
dec
mov
aaa
jb
stos
pop
lock
jle
dec
sbbw
test
stos
in
stos
into
rcrl
or
inc
mov
idiv
lcall
sbbl
into
xchg
ja
pop
mov
inc
popa
enter
dec
in
sub
cmc
leave
pop
je
jnp
jo
rcll
pusha
frstor
ja
xchg
cmp
fnsave
cs
xchg
push
imul
push
and
es
mov
idivb
mov
xor
inc
mov
daa
pop
mov
cld
mov
dec
mov
in
cmpb
mov
and
popl
cmpsl
aam
loope
push
imul
mov
pop
dec
xor
lods
scas
add
lret
sub
xor
aaa
jp
scas
or
addr16
jae
imul
jb
insl
pop
or
lahf
scas
aam
clc
add
cld
popa
lret
jp
popf
mov
push
fwait
inc
xchg
push
add
push
enter
or
xacquire
jmp
imul
mov
push
popf
insl
outsl
push
fwait
or
lea
xchg
sub
movsl
push
orl
dec
popf
pop
lea
movsl
mov
mov
push
dec
movsl
and
ds
ljmp
xor
jb
sub
jp
cltd
pop
aad
test
mov
mov
push
push
aam
or
outsb
in
loopne
paddsb
inc
clc
test
popf
or
sub
into
cmp
or
jbe
and
ret
jae
test
push
jb
mov
add
push
mov
xor
xor
mov
mov
shrd
shr
mov
mov
mov
mov
xor
or
mov
shl
xor
mov
mov
or
mov
push
pushl
push
push
call
mov
mov
jmp
mov
pop
lcall
pushf
adc
insl
sbb
and
sbb
faddl
inc
mov
mov
stos
leave
xchg
ret
or
repnz
sbb
out
mov
lret
dec
lahf
dec
push
into
pop
outsl
stos
lahf
loope
icebp
repz
pop
cmp
aas
mov
out
ror
push
mov
pop
adc
fprem1
cmpsb
pop
stos
push
push
mov
rorl
rcr
stos
shr
popf
into
nop
mov
idiv
xor
or
add
cmpsb
jp
mov
jge
dec
sub
mov
test
xlat
and
je
sub
dec
call
movsl
pop
insb
xor
lea
pop
in
mov
cmc
push
andl
cwtl
sub
cmpsl
lcall
std
and
add
sbb
popa
cmp
aaa
popa
ret
int
mov
cltd
push
xchg
or
jne
mov
ljmp
pop
cmpsb
jbe
imul
fisttpll
cmc
insb
outsl
movsb
dec
fiadds
cmc
xchg
mov
rorb
jbe
pop
shll
stos
mov
sahf
mov
mov
sbb
insl
sub
not
pop
fwait
cmp
jae
sub
dec
outsb
sahf
xchg
dec
sti
mov
ffree
js
imul
in
xor
sbb
jb
lds
mov
ljmp
and
pop
mov
testb
loopne
cmp
pushf
sbb
loopne
cmc
std
mov
rcll
dec
es
sub
insb
pop
mov
ljmp
dec
mov
xor
in
movsb
mov
clc
mov
mov
or
push
loop
pop
je
cmp
lods
xchg
mov
xor
dec
add
ss
push
ja
add
mov
mov
xchg
jo
fisttps
cmp
lahf
insl
cmpsb
add
mov
cltd
mov
iret
stc
nop
mov
cld
std
test
mov
jl
xchg
hlt
stos
cmc
pushf
add
das
push
movl
ljmp
xchg
pop
sub
dec
pcmpgtw
out
xchg
sub
or
or
mov
packuswb
pop
push
sti
sbb
jns
leave
out
int
movsl
ss
lea
adc
sbb
xchg
xlat
test
fs
pop
jmp
rclb
xor
push
ljmp
mov
push
testb
addr16
jl
dec
sub
out
mov
jmp
mov
pop
jmp
stos
arpl
push
and
lods
or
out
jne
mov
lods
and
repz
push
in
mov
push
ds
fstl
xchg
shlb
cmp
dec
lahf
repz
sbb
movsb
pop
fstp
jg
mov
adc
rcrb
lock
pop
inc
cmpsb
je
shrd
shr
shr
jmp
and
push
sbb
push
movsb
inc
push
sbb
and
sbb
or
fdivs
ficompl
aam
es
cmp
gs
pop
push
inc
push
cmpsl
jge
fidivrl
data16
ljmp
scas
cmp
fimuls
cmpsb
xchg
inc
mov
mov
pop
mov
mov
xor
cltd
inc
jecxz
test
jne
sub
pop
mov
jo,pt
inc
jae
mov
repz
repnz
jmp
mov
sbb
pop
jb
insl
jg
movsl
mov
mov
xchg
fstl
mov
adc
cli
pop
mov
cmc
cmp
lahf
mov
jbe
lods
cmpsb
shlb
test
pop
dec
rorl
and
xlat
rorl
fsts
icebp
push
pop
filds
jno
or
shll
mov
xchg
cwtl
xchg
dec
cltd
mov
xor
pop
aam
fadds
mov
sbb
loop
push
lea
shlb
jmp
ljmp
mov
cmc
ret
jmp
jno
mov
arpl
scas
jg
imul
in
nop
inc
cmc
shlb
sub
cmc
xchg
imul
cmp
ficompl
jmp
jge
scas
out
lds
loopne
mov
pop
lret
add
xchg
sbb
jmp
std
pusha
div
imul
daa
repz
cmp
push
adc
jo
or
sbb
adc
sub
cmp
aaa
std
jge
pop
enter
xchg
sub
dec
ljmp
cmp
and
sbb
jecxz
cli
xchg
cmp
dec
dec
push
xchg
loope
mov
mov
es
jp
sbb
lret
jecxz
je
xchg
mov
ret
imul
out
test
and
mov
mov
dec
js
adc
add
sbb
push
push
mov
imul
and
js
jp
js
push
inc
mov
sub
in
js
out
adc
mov
adc
adc
les
cmp
and
call
pop
inc
mov
ja
sahf
sub
xchg
xchg
cmpsl
movsl
mov
inc
dec
mov
push
pop
mov
lahf
stc
jne
and
inc
lock
out
xchg
or
xor
outsb
xchg
and
in
out
fbld
jmp
add
rclb
jecxz
dec
mov
les
pop
jae
mov
xchg
add
pop
sar
ds
popl
loopne
imull
or
and
jg
bound
jnp
rolb
mov
xchg
mov
sub
into
cmp
sub
loop
out
xor
mov
mov
mov
push
push
push
call
shld
shl
jmp
popf
xchg
dec
mulb
sbb
fdivs
insl
mov
popa
sbb
and
sbb
fistps
sub
imul
int
shll
adc
rol
sbb
xchg
dec
popa
rol
mov
pop
pop
adc
and
or
loopne
aad
add
adc
cmc
scas
loop
arpl
lea
nop
jae
loopne
adc
mov
push
dec
icebp
jmp
mov
mov
or
push
test
mov
jb
xlat
jnp
fdivl
scas
test
in
jbe
fidivs
roll
mov
inc
cmc
dec
xor
in
cmp
fnsave
push
push
adc
shl
fdivrl
icebp
and
add
in
xchg
mov
js
rolb
lret
sub
imul
sbb
imull
mov
fistps
lea
pop
mov
ds
sbb
nop
aaa
std
loopne
lret
arpl
pop
cs
fisttps
popa
push
dec
jmp
pusha
mov
fs
xor
sbbb
nop
sbb
sub
movsl
push
fldenv
mov
cmp
clc
push
ret
out
inc
jmp
dec
push
dec
pop
lock
data16
aam
mov
sti
lds
cltd
jg
inc
je
repz
lcall
xchg
sbb
xchg
fimuls
pop
xor
imull
inc
lret
push
ds
sti
loop
dec
fists
mov
pop
adc
fwait
pusha
in
adc
fldcw
ljmp
pop
or
mov
test
es
outsl
es
shr
notl
dec
iret
pop
repz
mov
into
test
call
out
insl
jbe
push
mov
sub
dec
shr
push
sbb
enter
mov
pop
push
das
xor
inc
jmp
test
imul
push
and
lret
pop
popa
lock
add
xlat
xor
std
xor
sti
ja
mov
loop
sbbb
stos
sahf
and
loop
nop
mov
cmp
orps
sbb
lahf
imul
and
and
adc
mov
bound
xor
and
push
test
sbb
adc
addr16
das
outsl
cltd
pop
leave
pop
push
dec
xchg
daa
jle
cmp
sbb
cmp
mov
or
mov
arpl
je
adc
or
pop
inc
out
popl
iret
scas
dec
lods
pop
pop
cmpsb
fcomps
push
jnp
mov
lods
stos
punpckhbw
fwait
cmpsl
sub
dec
jb
pushf
sbb
lahf
mov
or
mov
push
dec
jno
inc
dec
ret
xor
int
imul
push
cli
pop
data16
cmpb
mov
dec
mov
enter
xor
or
xor
xor
mov
mov
jmp
xlat
cmp
jge
jle
imul
sbb
xchg
loopne
out
mov
lret
mov
mov
stc
stos
sti
je
enter
in
stos
push
insb
cmpsl
jbe
aaa
xchg
out
insb
mov
sub
stc
xor
out
mov
fs
rcll
dec
inc
int
mov
cmp
sbbl
sub
cmpl
jnp
jnp
orb
xchg
mov
jne
xchg
or
scas
int
sbb
lods
lea
stos
shlb
in
mov
jno
jne
icebp
sub
inc
or
xchg
push
jb
orb
dec
and
push
shrl
arpl
gs
pop
pop
mov
mov
mov
lcall
mov
xlat
push
push
pop
pushf
loope
push
mov
jne
enter
dec
jmp
xor
std
mov
test
cltd
cmpsb
mov
jae
test
sbb
mov
inc
pop
test
mov
sbb
movsb
pop
adc
gs
xor
pop
push
jle
lock
xchg
xchg
and
jno
add
andb
dec
cmpsl
pop
xchg
mov
or
pop
and
xlat
sahf
sub
adc
decl
cs
ja
data16
out
mov
jp
or
paddsb
mov
in
out
daa
icebp
pop
sub
jne
out
xchg
push
jns
cmpsb
mov
pop
hlt
cmpsl
psrlw
fidivs
sub
arpl
dec
mov
add
dec
movsl
inc
jne
xor
xchg
pop
sbb
jecxz
movsl
outsl
stos
fidivrs
mov
push
adc
xor
in
lods
xor
testl
mulb
stos
dec
pop
and
pop
fistl
push
lahf
jmp
outsl
sub
inc
out
cmp
outsl
int
pop
add
outsl
cli
je
xor
mov
cwtl
shrl
ret
jb
nop
sti
mov
pop
xor
mov
sub
push
jg
xchg
mov
xorb
fstl
int
lock
mov
lock
addr16
mov
pop
jmp
dec
je
shll
rorl
mov
jbe
fnsave
test
hlt
sub
cltd
and
xor
sbb
xchg
into
fistpl
pop
fistpll
push
fnstsw
mov
lea
jg
lea
pop
daa
adc
push
jno
mov
es
loop
push
and
or
jg
jo
out
es
iret
aas
mov
loop
xchg
mov
mov
addl
mov
cli
int3
dec
fs
scas
ljmp
movsb
xchg
sub
jns
mov
inc
imul
add
sarl
lret
inc
mov
mov
mov
xor
xor
shrd
shr
mov
mov
mov
mov
xor
or
mov
mov
mov
xor
xor
shl
mov
mov
mov
shrd
xor
or
mov
mov
mov
mov
shl
xor
or
shr
xor
or
cmp
jne
cmp
je
pushl
pushl
jmp
fwait
ror
dec
mov
scas
in
mov
and
sbb
adc
sbb
lds
mov
push
cwtl
sarb
pushf
daa
xchg
scas
mov
mov
test
loop
inc
mov
scas
and
int3
sub
mov
and
mov
and
fisttpl
push
daa
sub
push
fsubs
fisttpll
and
enter
pop
icebp
xor
xchg
pop
pop
cmp
inc
mov
jg
bnd
fimull
sbb
adc
inc
sbb
inc
or
jb
out
pop
hlt
push
int
rcrb
dec
imul
jbe
inc
mov
mov
adc
pop
jl
shr
arpl
mov
aaa
dec
cmp
enter
out
test
cmp
dec
aad
in
pop
xor
push
cmp
into
dec
in
inc
pushf
pop
xchg
sbb
xor
cmp
cli
loop
push
push
mov
add
andl
js
aad
cltd
sbb
ds
push
lock
cmpsb
fwait
pop
dec
xor
xor
cwtl
jp
cwtl
mov
enter
mov
dec
data16
mov
in
dec
jne
cmpsl
shrl
dec
push
xchg
sahf
mov
inc
lock
aas
xorl
repnz
pop
and
xor
fdivs
stos
jmp
pop
in
notl
clc
inc
jle
cmp
sbb
test
inc
ljmp
test
push
std
mov
cli
jnp
mov
mov
out
sbb
jl
nop
pop
ss
cmp
mov
mov
fs
jge
fidivl
insb
test
mov
sub
fmuls
pop
pop
cs
add
mov
imul
jne
add
inc
mov
jl
adc
mov
daa
sub
out
inc
xchg
and
clc
leave
push
outsb
cli
leave
cltd
mov
mov
xor
mov
sbb
scas
cs
xor
call
pop
cltd
adcl
mov
mov
test
xor
shrl
pushf
pop
icebp
out
clc
int
inc
cmpsl
mov
xchg
cmpsl
add
mov
daa
or
cli
sbb
insl
fcompl
loope
testb
cmpsl
adc
test
mov
in
push
push
sub
xor
jge
daa
into
sar
mov
cli
push
jns
out
pop
mov
lret
aad
push
mov
mov
dec
mov
push
std
sub
rcrl
dec
pop
out
scas
das
push
sub
popf
adc
jbe
mov
mov
mov
scas
inc
sarb
call
jmp
mov
dec
jb
insl
fnstcw
dec
sbb
and
sbb
xchg
loop
stc
in
jne
nop
xor
and
jge
ss
lret
inc
adc
mov
jmp
arpl
lea
sarl
leave
adc
loope
push
xor
or
shll
jle
es
scas
adc
testb
and
adc
lods
push
ds
iret
or
out
cmp
mov
std
push
jb
lret
es
repnz
movsl
je
and
ljmp
fldt
enter
mov
stos
adc
mov
sbb
cs
inc
xor
xor
in
cmp
fs
pop
jno
xchg
cmp
mov
int
push
mov
shr
mov
mov
mov
jle
push
add
inc
cmp
shl
aad
push
sub
xor
lods
imul
es
xchg
push
mov
orl
pop
daa
je
xchg
ret
jb
ret
mov
sbb
icebp
testb
dec
pop
cmpsb
cs
adc
mov
das
or
lret
mov
dec
add
nop
in
jp
dec
loopne
in
loope
loop
pop
pop
xchg
adc
ljmp
dec
dec
or
lret
pop
cmpsb
sbb
cltd
divl
add
addr16
sti
aad
cmp
mov
mov
add
gs
jp
mov
jg
or
inc
jb
xchg
sub
inc
pushf
xchg
mov
sar
and
push
sti
fwait
rcrb
inc
fistpll
std
jmp
in
and
cmc
jns
mov
jecxz
sub
or
jno
pop
add
pop
mov
loopne
sub
pop
ja
inc
mov
nop
cmp
movsl
jmp
sub
or
and
lds
addr16
xchg
and
loope
cmpsl
pushf
fstl
stos
pushf
lcall
xchg
cmp
das
ret
nop
aad
xorl
rclb
pop
cli
add
jmp
test
add
je
push
pop
mov
sti
inc
sti
pop
insl
clc
lret
mov
fwait
mov
cli
mov
cmp
push
sub
daa
mov
xchg
bound
sbbb
sbb
mov
es
sub
ficomps
sbb
mov
mov
cmp
dec
push
mov
gs
mov
jbe
les
test
ljmp
hlt
xchg
rolb
test
and
aaa
cmp
push
sahf
mov
mov
shll
into
nop
rcrl
adc
push
push
adc
stos
adc
mov
pop
rcrl
cmp
outsb
push
test
out
pop
leave
ret
movl
cmp
movl
jae
movl
cmp
movl
jae
sbbl
shrd
movl
shr
ret
mov
xorl
xor
and
shr
ret
xor
xor
ret
push
mov
sub
sub
movl
mov
cmpl
movzbl
mov
movzbl
mov
jmp
mov
mov
jne
pushl
pushl
pushl
push
call
mov
and
xorl
add
not
sbb
adc
mov
movl
mov
movl
cmpl
mov
notl
mov
jmp
mov
mov
jbe
pushl
pushl
push
push
push
pushl
push
call
and
movzwl
add
not
mov
adc
andl
add
mov
sbb
movl
movl
push
movzwl
and
movl
cmpl
movl
mov
movzbl
jmp
movl
movl
jge
push
push
pushl
push
push
call
sbb
incl
xorl
add
movzwl
add
add
movl
xor
add
and
push
or
movl
cmpl
not
mov
jmp
movl
mov
jle
pushl
call
mov
mov
adc
not
sub
sbb
or
incl
mov
cmpl
not
mov
mov
not
jmp
movl
movl
jae
push
push
push
call
add
sub
mov
xor
sbb
neg
mov
push
push
sbbl
push
orl
call
jmp
inc
dec
cmpsb
movsb
lcall
mov
push
mov
xor
sbb
adc
sbb
add
fs
stos
pop
int
xor
adc
ss
mov
outsl
fisubrs
cwtl
pop
mov
fisubl
pop
mov
cmp
test
das
aas
cld
xchg
dec
lock
scas
out
je
mov
add
xchg
and
je
outsl
aas
data16
xor
jl
rolb
push
dec
mov
sbb
pop
in
push
clc
push
jmp
push
ljmp
rcrl
inc
mov
in
adc
xchg
pusha
inc
push
cli
call
jge
lahf
add
dec
scas
adc
stos
repz
xchg
negb
dec
sub
jmp
iret
outsb
jno
push
and
xchg
and
sahf
or
jl
push
imul
fmul
hlt
sbb
call
cwtl
into
insb
push
inc
push
out
and
test
jg,pn
push
sbb
push
inc
dec
cmpsl
push
mov
fstp
sbb
or
aas
xchg
mov
push
addr16
dec
call
rcl
cmp
push
mov
cwtl
mov
popa
hlt
cmpsb
add
jle
fs
pusha
gs
ds
insb
pop
adc
popa
add
inc
rclb
cmpsl
lcall
out
gs
push
mov
js
mov
xor
out
sbbl
dec
adc
js
adc
enter
cmp
add
shl
lret
roll
mov
mov
inc
adc
or
mov
inc
test
jno
stos
inc
jns
xor
push
ret
insb
imul
cld
and
cmc
cmp
stc
mov
xchg
lock
lock
inc
mov
scas
dec
or
pop
and
and
push
xchg
jo
dec
or
lea
pop
sbb
and
xchg
int
sub
sub
inc
pop
repnz
jl
sub
pop
insb
pop
jecxz
jns
cmp
repz
jnp
mov
dec
sbb
sti
dec
mov
dec
mov
fiadds
sub
push
add
lods
fwait
loope
lahf
inc
xor
mov
adc
inc
hlt
add
jle
test
jo
cmc
pop
repnz
xor
movsl
cmp
mov
pop
clc
ret
fbld
outsb
mov
sub
inc
sar
cmp
mov
inc
and
sbb
test
pushf
mov
cltd
test
pushf
lds
int3
jbe
popf
adcb
add
jp
lods
xor
out
mov
adc
pop
dec
cwtl
cmpsl
in
ljmp
pop
ficoms
xor
notb
cmp
fistps
in
xchg
testl
leave
pop
test
loop
mov
xor
mov
test
pop
mov
je
push
push
push
lock
lock
jno
push
pop
or
divb
fistpl
mov
mov
push
orl
or
push
addl
or
sbbl
xor
xor
push
push
negl
call
mov
cmpl
not
movzwl
notl
jmp
movl
jb
push
pushl
pushl
call
adc
movzwl
or
xor
add
sbb
xor
mov
or
xor
neg
sbbl
mov
adcl
push
adcl
push
movl
push
push
decl
call
cmpl
mov
mov
jmp
movl
jae
pushl
call
sub
subl
xor
sbbl
sub
or
xorl
jmp
mov
sbb
sbb
sub
cmpsl
outsb
fistpll
inc
sbb
add
sbb
xchg
clc
cmp
inc
dec
insb
fisubs
jae
popf
jmp
or
fs
lcall
xchg
ret
pop
mov
fwait
cmp
pop
sbb
repnz
xor
mov
negl
out
push
xor
jae
mov
andl
jno
out
aam
dec
push
jne
pop
orb
xor
cltd
aaa
add
sbb
cwtl
int
out
jle
pop
inc
cmp
cli
mov
dec
mov
int
ljmp
imul
aas
mov
pop
jmp
push
adc
scas
cs
sbb
cs
fxrstor
ss
fsts
pushf
mov
jbe
js
lret
repnz
and
pop
push
push
mov
pop
push
int
out
dec
xlat
ret
out
sbb
in
cli
inc
std
pop
imul
cmpsb
imul
ret
lea
das
bound
cs
aam
lcall
out
push
int
jne
xor
fstpl
xor
xor
cwtl
pop
lret
mov
je
shrl
test
ret
or
cmpsl
xor
je
adc
out
int
js
adc
mulb
push
jo
rorb
lahf
or
lds
push
in
pop
sub
pop
in
pop
pop
pop
sub
and
call
pop
sahf
xchg
fistl
pop
arpl
dec
jle
dec
les
sahf
push
pop
into
dec
push
adc
out
call
pop
push
mov
add
lods
mov
arpl
mov
pop
addl
jb
or
lock
push
push
ret
cmp
insb
bnd
cwtl
mov
sbb
lds
stos
lock
inc
ds
push
mov
js
cmp
and
scas
data16
add
push
mov
mov
out
sbb
movsl
push
outsb
ret
sti
scas
hlt
cltd
je
je
xor
mov
cmp
mov
xchg
jge
cmp
xor
push
jmp
cmp
adc
das
loope
insl
call
mov
mov
fcmovnu
xor
out
jecxz
fsubrl
adc
daa
ss
push
pop
mov
inc
and
jl
cmp
push
mov
insl
mov
push
test
jbe
xor
into
iret
loopne
roll
xor
xchg
mov
jle
movsl
cmpsl
sbb
add
fs
call
sti
mov
cli
ret
dec
and
adc
es
add
cmp
roll
push
dec
inc
popl
aaa
xlat
mov
int3
movb
xor
inc
adc
or
gs
into
repz
jns
add
cmp
bound
fstps
aam
jb
icebp
mov
xchg
repnz
sub
mov
mov
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
add
adc
or
mov
or
mov
or
mov
or
mov
or
or
jmp
add
pop
mov
jae
aas
mov
add
sbb
pop
cmp
pop
add
iret
rcrb
repnz
mov
mov
jne
sub
test
repz
jns
leave
fucomp
subl
sbb
lds
pusha
imul
jnp
in
daa
xor
jecxz
out
jns
adc
and
jae
notb
sbb
fidivl
out
fildl
js,pn
sub
call
clc
push
sahf
notb
mov
mov
sub
jae
fs
adc
or
and
and
das
stos
lods
dec
and
ret
fmuls
leave
lahf
adc
and
jb
ret
out
out
insb
lahf
shl
jb
mov
rolb
lods
call
mov
repnz
inc
addr16
mov
cltd
dec
sbb
sbb
adc
pop
mov
inc
scas
jp
out
clc
adc
push
popf
mov
add
and
es
lock
pusha
in
add
mov
pop
push
xorb
mov
mov
push
outsb
div
pop
xchg
psrad
mov
fdivrp
rorl
ds
mov
and
push
insb
shlb
pop
fbld
jb
and
push
cs
nopl
aad
rcrl
out
mov
jo
stc
jns
cli
pop
cltd
or
repz
and
or
dec
mov
push
push
add
jae
rorb
and
dec
sar
iret
adc
xchg
sub
insb
into
cmpsl
pop
sub
rcrb
or
test
scas
fdivp
push
adc
jp
jbe
cmp
in
cwtl
xchg
inc
cmp
cwtl
jecxz
xor
pop
xor
sbb
ja
sti
and
xchg
sbb
push
cmp
sub
push
ds
testl
mov
cmp
ret
sub
xor
fisubrl
or
and
aas
add
pop
mov
mov
or
cmp
push
mov
bound
mov
add
les
adc
inc
aad
into
insb
mov
xor
jbe
jmp
test
add
pop
fmull
enter
pop
or
imul
xor
push
push
fucom
call
or
cltd
call
mov
testb
std
pop
fcompp
push
xor
push
rcl
push
aam
sub
xchg
xchg
adc
int3
aad
stc
lods
pop
cmp
adc
add
lods
or
xchg
std
dec
lods
das
cli
jl
pop
cwtl
loope
push
dec
in
ja
loop
mov
lcallw
mov
push
xchg
dec
mov
push
nop
lcall
incl
fwait
stos
mov
or
into
and
test
add
add
icebp
je
movl
movl
mov
mov
xor
xor
and
jmp
xor
jne
insb
sbb
push
out
int3
or
and
jle
aaa
sbb
add
sbb
into
aas
ss
mov
aam
dec
pop
sahf
sub
mov
in
scas
xchg
in
daa
fdivp
lds
in
in
dec
in
xchg
nop
push
push
jecxz
pop
scas
pushf
cmpsl
xchg
enter
rcll
pop
xchg
mov
xchg
in
outsl
repz
xchg
rcl
mov
xor
xchg
int
dec
fwait
in
ja
cli
adc
int3
and
cli
xorl
jge
xor
jle
and
and
loop
jp
pop
push
fbld
lds
movsl
aas
sub
daa
adc
scas
lcall
movsl
mov
enter
sbb
addr16
sahf
loope
xchg
jae
jmp
push
push
aad
and
mov
jb
xchg
mov
inc
enter
pop
stc
inc
mov
loop
jns
mov
jns
aad
push
jmp
out
ljmp
pop
ljmp
and
out
mov
scas
leave
sub
mov
push
mov
jge
rcll
sub
fcmovb
cmp
fisubs
cmpl
shll
icebp
mov
or
clc
scas
push
add
mov
gs
call
int3
mov
push
cmp
sar
shl
es
cli
push
dec
cmp
mov
hlt
aas
inc
imul
gs
in
cmpsb
mov
push
das
mov
mov
insb
les
aam
add
cmpsl
rcl
scas
mov
jo
gs
sub
mov
lahf
sub
cmp
lds
sar
push
lods
mov
cltd
mov
frstor
scas
pop
push
inc
or
loop
pop
mov
mov
ret
push
or
cmp
push
cmpl
imul
xchg
or
dec
or
mov
dec
imul
mov
xor
ret
mov
jmp
xor
daa
or
inc
shlb
mov
mov
imul
in
sub
ljmp
rcr
hlt
jnp
xor
push
mov
xchg
insb
scas
jne
mov
inc
cltd
test
in
in
pop
shrl
in
sub
mov
mov
pop
shr
in
push
xor
add
push
xchg
jbe
shll
scas
push
xor
cmpsb
cmp
sbb
test
mov
popa
push
inc
mov
jo
cltd
jle
je
sub
fmuls
mov
push
jge
je
inc
dec
and
adc
roll
fsubrl
jl
or
aas
mov
jecxz
cs
pop
out
fnsave
push
push
mov
sbb
or
sub
mov
out
pop
shlb
call
xor
ss
inc
sub
jns
cmp
mov
mov
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
add
mov
adc
mov
add
adc
xor
xor
add
mov
adc
mov
cmp
jne
cmp
je
movl
movl
movl
push
movl
mov
mov
jmp
in
mov
sub
push
and
xor
sbb
adc
sbb
pushf
sub
inc
cmc
inc
mov
inc
gs
mov
test
fsin
shlb
leave
dec
rcrb
mov
in
in
mov
jmp
lcall
mov
xchg
sub
xchg
js
stc
pop
jp
jle
xchg
cmp
in
jne
lahf
fwait
adc
out
adc
push
xchg
lcall
pop
pop
cld
inc
jle
adc
mov
addr16
test
cli
sbb
mov
xor
inc
xchg
stos
lret
jmp
jae
xchg
aaa
pop
inc
rcrb
add
xor
lods
or
test
and
inc
adcl
and
mov
mov
mov
stos
dec
mov
jns
xchg
fcomp
pushf
jmp
jge
mov
in
mov
push
shr
cmp
pop
lock
out
lock
outsb
adc
push
push
pop
cltd
inc
test
push
xchg
in
int
arpl
pop
fsubl
xor
loopne
pop
sub
mov
jmp
sarl
out
testb
popa
mov
sub
mov
arpl
stos
shrb
mov
sbb
adc
aam
test
cmp
es
ja
fidivl
pop
jo
pop
insl
cmpsb
in
and
daa
ffreep
in
sub
cmp
fbstp
aas
insb
jnp
jb
pusha
loope
jo
test
outsb
xchg
or
mov
js
rcr
out
inc
repz
fidivs
adc
sbb
mov
or
xor
aad
mov
mov
test
inc
pop
and
mov
pop
and
mov
andb
cmp
mov
or
jl
jbe
cmp
dec
lcall
ss
mov
mov
andl
inc
dec
pop
sub
or
js
mov
push
faddl
lahf
dec
sub
roll
mov
aaa
stos
orl
scas
xchg
and
sbb
xchg
dec
mov
cld
mov
inc
xchg
scas
cmp
mov
mov
jne
repnz
inc
movsl
or
test
adc
or
cmp
mov
sub
insl
mov
adc
add
mov
pop
addr16
in
sbb
push
lods
insl
lret
aam
movsl
cmpsl
insl
push
pop
test
mov
pop
sub
subb
ja
pop
xlat
or
insl
cmp
mov
shrd
ret
ficompl
xchg
mov
clc
mov
fdivp
fscale
push
adc
pop
mov
xor
ljmp
xchg
mov
ret
inc
push
xchg
jmp
lock
jg
lret
jae
adc
jmp
cmpsl
outsl
fbstp
push
mov
enter
cmp
cmp
jl
add
sub
add
add
push
sbb
ja
sub
sbb
adc
sbb
lcall
xor
mov
sbb
or
aad
rcll
sub
rclb
push
testl
xor
pushf
dec
int
in
pop
into
or
xchg
mov
inc
out
push
cmp
ret
mov
xor
sub
add
cmp
aaa
sub
push
rcll
jbe
pop
dec
in
andb
mov
adc
inc
notb
lcall
and
fcomp
std
inc
push
sub
lcall
dec
xchg
dec
mov
jl
add
pop
xlat
repnz
xor
ffree
ficoms
sub
jne
inc
mov
stos
aas
adc
cmp
rol
out
and
in
or
clc
xchg
loop
adc
mov
insl
addr16
jae
jne
in
jp
iret
and
push
cld
lahf
jecxz
pop
loop
loopne
cmp
push
cltd
int
add
and
inc
fstl
stc
fst
xchg
das
sahf
or
mov
mov
and
insl
mov
add
mov
cmc
scas
jl
sbb
and
pop
lcall
adc
inc
test
push
mov
daa
enter
xor
sub
xchg
xchg
cld
dec
enter
xchg
and
push
data16
cmc
jne
sub
jp
ds
inc
pcmpeqw
std
adcb
lea
xchg
ljmp
rol
rcl
adc
adcl
sbb
xchg
jne
mov
pop
dec
mov
shll
jmp
and
xchg
ret
cmp
cli
mov
adc
add
cld
jp
sbb
xor
lea
cmp
test
add
or
cli
mov
fldl
push
inc
adc
mov
addl
sub
out
xlat
inc
xor
push
mov
xchg
je
mov
insl
mov
push
sahf
or
shl
lods
je
pop
ljmp
xchg
xchg
shll
sub
jno
mov
pusha
rol
jp
sbb
jge
xchg
mov
sahf
mov
jns
or
adc
sahf
ss
mov
sbb
cwtl
adc
into
mov
ljmp
dec
cmp
cmp
xor
cli
jecxz
sarl
pop
ljmp
push
int3
mov
in
jne
mov
push
inc
mov
cld
fimull
mul
or
in
mov
push
inc
sub
pop
fimuls
shlb
test
fisubrs
ja
insl
xchg
xchg
inc
fadd
dec
xor
jne
mov
cmpsl
inc
mov
sub
js
inc
jle
ja
lret
mov
ss
pop
sub
push
add
pop
mov
push
call
mov
mov
push
push
and
and
push
jmp
addr16
bound
mov
xchg
mov
sbb
adc
sbb
divl
mov
ret
in
mov
in
sbb
sub
mov
push
push
fistpll
pop
xor
jns
adc
push
fidivrs
push
inc
stos
jo
shr
jl
mov
cwtl
push
push
mov
inc
cmp
shr
hlt
pop
dec
mov
cmp
mov
xchg
mov
jns
aad
jg
in
xor
inc
and
cmp
cmpl
add
ds
movsb
xchg
pop
or
cmp
push
cmpsl
jg
push
das
popa
xchg
xor
aam
stos
cwtl
int3
sbb
add
cli
aaa
lock
dec
sbb
dec
pop
rorl
mov
loopne
loopne
mov
out
les
out
into
adc
push
xchg
push
aas
div
add
mov
mov
sbb
fucomi
dec
mov
fs
movsb
mov
movsb
mov
push
je
js
bound
dec
scas
or
jmp
dec
arpl
js
int
jecxz
sar
pop
les
clc
mov
xor
shrl
xor
repnz
inc
push
hlt
std
popf
sahf
loopne
push
and
daa
mov
xor
push
fnstcw
jo
mov
js
pop
lea
lds
cmp
and
scas
lret
cmpsl
xor
les
mov
scas
ljmp
out
inc
loope
cmp
dec
pop
cmp
dec
test
mov
gs
ror
testl
sarb
jo
push
hlt
icebp
pop
adc
loopne
jbe
movsl
rcl
mov
mov
dec
popa
cmpsb
sub
inc
jge
adc
aad
add
xchg
repnz
mov
push
push
cmp
lds
cli
loopne
sbb
dec
sub
gs
or
mov
or
rcrl
aaa
loope
xor
sbb
pop
shl
in
lea
xchg
xchg
add
mov
ret
loope
adcl
adc
push
sub
inc
je
stos
out
insl
popf
jns
jle
pop
mov
in
mov
xchg
test
bound
mulb
rclb
jp
ds
sub
add
pop
sub
mov
mov
ficoml
mov
rclb
cmp
pop
rorl
push
and
cmp
das
push
sbb
icebp
btc
addb
mov
add
inc
add
jge
sbb
fstl
int3
mov
aaa
data16
ja
loop
mov
movsl
ret
lret
xchg
xchg
xchg
mov
mov
push
insb
lahf
jae
out
mov
and
sub
movsl
add
inc
add
cmp
loop
mov
mov
pop
jne
shl
lods
scas
daa
push
call
xor
xor
mov
mov
mov
cmp
jne
mov
mov
mov
mov
shrd
shl
mov
mov
shr
xor
mov
xor
or
mov
mov
jmp
rcr
sub
sbb
loope
scas
mov
and
mov
add
sbb
test
mulb
adc
popa
mov
mov
adc
or
das
mov
loope
mov
outsb
sbb
sub
aad
jns
or
aas
mov
out
inc
cmpsl
scas
add
and
add
xchg
sub
loopne
xor
nop
outsl
xor
pop
fcoms
mov
pop
mov
add
fadds
and
xor
mov
cmpsl
je
xor
mov
fwait
jle
sub
jns
mov
xchg
sbb
inc
sub
push
xchg
lods
cli
out
jb
inc
mov
mov
xor
js
mov
in
mov
out
add
push
lds
js
sti
pop
push
cli
ror
fdivl
subl
jmp
loopne
shll
mov
jnp
call
jo
les
pusha
leave
je
xor
insl
aaa
pop
mov
lods
sub
jl
or
inc
ss
and
pusha
lret
xor
or
addr16
mov
in
outsl
xchg
aam
pop
and
jmp
and
lcall
inc
push
sbb
jge
aad
jno
ja
push
shll
pop
pop
jmp
and
cs
mov
dec
lret
arpl
jp
div
mov
or
xchg
mov
adc
fstl
cld
jecxz
or
fcoml
or
pop
repnz
negl
mov
fnstsw
bound
in
adc
std
cmovo
fadd
loopne
sub
movsl
dec
sub
insl
test
jae
movsb
jbe
xor
mov
cs
inc
cltd
push
sub
sbb
add
xchg
in
loopne
push
je
or
cmpsb
lret
jne
mov
mov
fs
dec
pop
fs
stos
xchg
jae
cmp
push
cli
lcall
into
imul
add
pop
shr
mov
test
cld
imul
call
xchg
lds
stos
loope
mov
in
leave
mov
js
jb
or
movsb
bnd
loop
mov
movsl
loop
test
notl
mov
mov
div
dec
clc
jbe
push
dec
xor
scas
mov
jp
stos
rcrb
pop
ficomps
fbld
mov
mov
and
adc
aad
xchg
aaa
movsb
add
iret
cmc
js
mov
or
rcll
sub
or
sbb
and
inc
cmp
call
leave
stc
in
popa
call
lcall
mov
or
add
jnp
push
sbb
jno
and
push
cmp
iret
cmp
rcll
or
roll
cs
mov
shrd
shr
mov
mov
xor
xor
or
mov
movb
movb
movzbl
jmp
adc
nop
dec
mov
push
sbb
sbb
adc
sbb
outsb
push
add
fiadds
in
add
inc
jmp
ljmp
data16
enter
test
add
inc
dec
inc
ds
sub
loopne
and
and
jno
adc
test
cwtl
adc
add
cmp
test
out
sub
psrad
xchg
test
sbb
outsl
ret
pop
sbb
cs
push
insb
cmp
add
and
cltd
lock
inc
loope
mov
push
xchg
lahf
push
aaa
pop
orb
push
push
adc
xor
sbb
in
mov
xchg
add
aaa
mov
xlat
pusha
or
pop
fsubrl
test
aaa
cmp
cmp
lods
and
jcxz
mov
adc
test
fstpl
pop
pop
ss
sbb
das
sub
add
pop
push
outsl
xchg
les
cs
sbb
jg
lods
lods
add
mov
sub
fcmovnu
int3
sub
mov
dec
ret
cltd
inc
push
daa
adc
test
jae
xchg
pop
xchg
sbb
out
mov
addl
dec
sbb
scas
inc
sub
dec
sub
lret
pop
into
rclb
or
sub
push
add
mov
divl
imul
add
dec
addr16
orb
push
jecxz
sarl
or
insb
mov
shl
lahf
pop
scas
inc
imulb
lds
mov
ret
sub
cmpsl
xor
imul
fnstsw
js
jmp
sub
push
dec
xor
int
pushl
inc
adc
xchg
daa
shll
icebp
dec
ret
or
push
imul
pop
aaa
pop
insl
mov
outsl
cmp
fcmove
xor
lret
xchg
mov
leave
sbb
scas
outsb
scas
leave
push
jb
inc
rcrl
loop
inc
sbb
cmp
cs
insb
fcmovnbe
ljmp
cmpsl
lds
jp
mov
filds
js
aaa
sbb
aad
mov
stos
jbe
jns
xor
adc
hlt
rolb
cmpsb
xchg
pop
mov
cmpsb
dec
cmp
sahf
cmp
scas
lahf
xor
adc
pop
int
sbb
scas
fidivrs
shlb
lea
cmp
lahf
sbb
mov
xchg
dec
mov
and
sub
imulb
out
xchg
sub
mov
cmpb
fldcw
cmc
in
sbb
mov
cmp
daa
loope
out
sarb
sahf
jbe
and
mov
xor
jns
mov
mov
sbb
cltd
fisttpl
mov
add
pop
and
inc
fwait
shl
mov
xor
add
push
add
mov
movb
pop
mov
movb
mov
movzbl
cltd
idiv
mov
add
mov
or
mov
add
cmp
jae
mov
mov
shrd
xor
mov
shr
mov
xor
shl
or
jmp
push
test
and
mov
adc
sbb
adc
sbb
dec
scas
xor
dec
sbb
scas
dec
icebp
xchg
imul
das
fs
mov
in
stos
sbb
jecxz
scas
xor
push
push
incl
jecxz
cli
inc
fimuls
cmp
push
pop
mov
inc
dec
dec
in
or
sbb
aad
sub
data16
or
ret
popf
ja
sahf
int
mov
enter
pop
sub
xor
push
stos
mov
push
in
add
push
shlb
push
or
adc
aad
lahf
jl
cld
jo
jle
aas
mov
shr
pop
fcomps
lods
into
data16
mov
daa
fbstp
or
pop
xchg
mov
jg
inc
and
xor
pop
imul
imul
aam
cmp
icebp
mov
mov
mov
dec
and
inc
bound
pop
jecxz
lret
lahf
dec
mov
ret
fdivrs
cwtl
or
sbb
dec
sbb
jl
fdivrl
mov
sub
push
jo
arpl
inc
ror
cld
fbld
add
into
imul
inc
mov
lret
cli
jmp
lahf
push
jge
mov
and
jmp
and
or
repnz
pop
mov
shlb
xlat
lods
lret
pop
mov
lods
cmc
xchg
add
cmp
jb
dec
mov
fbld
dec
and
popa
in
imull
jne
daa
push
mov
lods
fdivrs
loopne
mov
insb
push
jbe
xchg
pop
ja,pt
push
nop
test
rcrb
mov
sub
jo
push
mov
jns
insb
out
and
jno
pop
dec
mov
loop
aad
adc
rclb
mov
mov
call
mov
cmp
repnz
test
daa
xchg
dec
cld
and
inc
fs
sub
fidivs
push
in
cli
push
cmpsb
push
lret
mov
inc
mov
jnp
push
ret
imul
jecxz
scas
fbstp
sti
jecxz
adc
in
inc
sub
pop
adc
jp
iret
shl
es
mov
cmpsl
clc
push
fmulp
mov
arpl
xlat
negl
out
mov
pushf
sbb
jns
cs
pop
dec
adcl
hlt
ds
sub
pop
sub
movsb
loop
mov
jmp
mov
gs
push
cmpsl
fsubr
mov
xor
inc
xor
iret
dec
or
hlt
adc
pop
call
dec
dec
xor
sub
pop
dec
out
mov
and
dec
lcall
fwait
cmpsl
inc
and
lahf
enter
popf
or
xchg
clc
jl
mov
and
and
in
add
aaa
out
dec
data16
sbb
aad
pop
cmp
int3
es
add
ret
push
mov
sub
push
push
push
movl
jmp
push
lods
pop
inc
lret
jo
mov
sbb
test
sbb
not
sub
and
and
mov
rcrl
pandn
ret
mov
mov
dec
lret
ss
jbe
mov
sub
imul
cs
insb
pop
push
pop
fbld
xor
rorl
lcall
dec
fistl
loop
ror
int
clc
les
repnz
jns
and
lret
lret
mov
scas
je
lcall
mov
data16
lret
jno
cmpb
imul
les
shlb
insb
xlat
dec
cmp
push
inc
fidivrl
rcrb
xchg
jmp
mov
scas
mov
mov
or
gs
pop
cmp
and
mov
sub
xor
in
xchg
ret
add
lock
mov
lea
int3
mov
cwtl
movsb
push
or
mov
sub
gs
clc
mov
mov
sub
out
mov
mov
mov
test
or
and
int
testl
divl
lds
jns
or
adc
and
mov
addr16
xor
jle
jle
nop
iret
aad
mov
aas
mov
inc
movsb
sbb
xchg
cld
rcl
dec
xor
stc
cmpsb
stc
mov
push
mov
mov
mov
dec
ljmp
rolb
mov
shlb
cmpsl
gs
ds
jo
mov
int
outsl
rol
sub
pop
out
add
pop
mov
inc
pop
add
imul
fwait
insb
adc
sub
add
popf
aaa
fdivl
jae
insl
sti
pusha
pusha
xor
sub
sub
and
adc
inc
cmpsl
int
rcrb
cs
stos
arpl
jmp
adc
push
pop
pop
lds
and
lock
or
fsubrl
mov
mov
cmp
iret
in
ja
push
outsb
fwait
xor
pop
test
hlt
and
out
push
xor
int3
push
in
inc
mov
dec
xchg
push
and
repz
lret
mov
add
or
mov
int
mov
mov
negb
leave
lods
call
int
xchg
mov
incb
mov
in
mov
and
jmp
push
inc
in
in
cld
test
push
shll
adc
xor
stos
cs
test
inc
cld
es
add
movl
movl
movl
movl
movl
movl
xor
inc
mov
movl
mov
mov
sub
add
add
imul
add
xor
movl
movl
movl
movl
mov
or
add
mov
and
mov
sub
mov
mov
mov
add
or
jmp
xchg
jne
je
es
je
mov
inc
outsl
mov
pop
sbb
test
sbb
jmp
cmp
rclb
pushf
pusha
out
pop
push
push
pcmpeqw
scas
fstpt
add
test
jbe
dec
js
lods
push
scas
and
gs
sub
and
lods
cs
test
in
les
and
hlt
sub
mov
adc
pop
jo
add
scas
mov
xchg
pusha
scas
popa
inc
or
imul
imul
arpl
mov
cmp
xchg
ret
push
ljmp
es
mov
lea
sbb
fdivl
imul
sbb
dec
adc
mov
adc
pop
clc
jno
mul
push
dec
leave
das
pop
das
outsl
jle
pmaxsw
sbb
push
dec
insl
dec
sarb
or
xchg
lock
fisubs
mov
fldenv
mov
xor
xor
stos
and
dec
xchg
cmp
lret
jle
loop
rcrl
aam
dec
sarl
loop
dec
mov
js
in
push
sbb
jmp
add
push
push
test
and
enter
adc
lock
xchg
ss
aam
int3
or
mov
mov
fdivs
push
add
add
test
mov
push
inc
lods
fstl
jnp
jns
imul
dec
lock
add
xchg
mov
push
jge
xchg
pop
scas
test
shr
and
nop
and
jo
cmpl
stc
leave
sub
aas
popf
adc
mov
push
fcomps
clc
nop
dec
cld
repz
pop
sub
std
loop
push
std
inc
xor
leave
subb
adc
mov
xchg
cmpsb
or
cmp
in
xchg
mov
daa
mov
jle
sbb
or
test
jle
mov
sbb
addr16
nop
leave
pop
xchg
inc
jmp
pop
push
fisubs
mov
ljmp
cwtl
jno
mov
mov
mov
add
inc
dec
inc
orb
out
sbbl
loop
ja
aad
add
jmp
rol
dec
ss
sub
dec
out
loopne
mov
cmpsl
lcall
jnp
or
movsl
mov
jecxz
xchg
aas
insb
xchg
push
and
out
xchg
mov
sbb
incl
sub
dec
add
pop
mov
cld
lds
imul
push
mov
pop
cmp
xchg
push
imul
or
jg
mov
sub
xor
sub
mov
mov
mov
mov
mov
and
xor
xor
div
lea
mov
add
mov
jmp
pop
dec
ficoms
daa
ss
push
inc
and
sbb
mov
dec
fimuls
movsb
sbb
mov
sahf
ja
inc
dec
clc
cmpsb
mov
sub
mov
movsb
mov
mov
adc
in
fildll
mov
cmp
sti
repz
ficompl
xchg
xor
inc
enterw
inc
lods
pop
push
aam
jecxz
or
in
lods
adc
push
es
cmpsb
cld
test
pop
jmp
dec
fst
dec
pop
es
add
push
repnz
push
test
dec
subl
insb
sbb
movsl
enter
mov
out
jnp
cmp
xchg
or
push
out
loopne
aad
cmp
mov
fdivrp
aas
out
and
ss
fstl
sti
inc
xlat
loopne
cmp
xchg
dec
dec
xchg
movsb
clc
fdivrp
dec
loope
mov
fisubrs
mov
ficomps
out
inc
popf
fists
or
sarl
jnp
not
add
inc
scas
or
iret
lahf
ret
adc
loopne
dec
popa
mov
sarl
pop
or
lods
jle
jno
push
sbb
fnsave
dec
mov
loop
cmc
adc
aaa
mov
and
aad
or
imul
icebp
int3
pop
sarb
inc
pop
mov
aas
jae
call
cmp
mov
hlt
stos
orb
mov
jns
push
int
lcall
sahf
or
into
enter
js
xchg
notb
cltd
ficompl
push
std
fidivrl
jno
pusha
inc
test
lock
out
jae
repnz
arpl
dec
idivb
xchg
clc
je
mov
push
aaa
insb
les
xchg
xchg
mov
sbb
pop
or
test
icebp
xchg
fsubrl
push
jnp
mov
stc
xor
push
sub
fyl2x
fistps
adc
not
mov
xlat
xchg
xor
js
add
pop
push
fdivp
outsl
jno
cltd
outsb
cs
mov
loope
fistpll
movsb
mov
pop
loopne
shlb
jl
inc
cmpsl
push
inc
in
shrl
mov
aaa
leave
push
jne
scas
xor
sahf
les
iret
leave
repnz
adc
inc
sbb
daa
mov
xor
out
cwtl
jp
ss
sbb
sub
andl
lea
jl
push
xor
push
jmp
fucomi
imul
sahf
xor
lock
or
add
fnsave
xchg
in
lahf
and
mov
imul
mov
sub
cmp
jbe
push
pop
mov
mov
movl
movl
movl
mov
movl
movl
xor
movl
mov
mov
sub
div
mov
xor
mov
div
mov
xor
div
xor
mov
mov
imul
mov
add
div
mov
mov
sub
sub
xor
div
mov
add
cmp
jae
jmp
sbb
dec
push
dec
and
and
aad
push
sti
sbb
test
sbb
out
les
insl
scas
in
sarb
adcb
lcall
xor
rorl
and
xor
sub
fcmovb
push
inc
inc
sbb
mov
sub
out
mov
xor
xor
mov
add
push
fnstcw
fnstenv
popa
cli
adc
cmp
stos
sbb
out
lea
nop
faddl
mov
std
subl
orl
loop
cwtl
jo
jne
pop
outsl
popf
mov
scas
pop
mov
les
and
dec
sub
jns
inc
or
aad
jne
cmc
addl
pop
jmp
cltd
int3
lock
dec
imul
sidtl
rorb
push
add
insl
xor
stos
xchg
inc
repz
bound
popf
xor
fcomi
or
in
adc
pop
loopne
scas
ffree
popf
pop
mov
pop
lods
outsl
aaa
dec
mov
cmp
push
leave
add
add
lods
rep
sarb
mov
and
ds
xchg
repnz
fs
lods
mov
inc
push
fsubs
clc
xor
sbb
mov
mov
fs
fdivrp
stc
shll
mov
test
inc
mov
test
loop
es
inc
orb
xor
hlt
xchg
rolb
out
inc
leave
outsl
xchg
mov
push
mov
jmp
sarb
xor
inc
test
push
push
lods
jns
ret
push
repz
shll
outsb
xor
pop
insl
imul
xor
in
mov
xlat
jl
mov
sbb
push
sbb
aam
pop
mov
in
repz
push
pushf
push
sbb
lahf
pop
aaa
add
insb
test
sub
scas
adc
filds
rolb
fidivrl
je
gs
test
sarb
roll
lods
cmpsb
gs
imul
fistpl
sub
sub
aad
sti
in
shrb
rolb
jne
xchg
adc
jg
push
xorb
xrelease
push
push
inc
fistps
add
adc
mov
int3
jecxz
add
mov
mov
mov
es
dec
pop
sarb
push
scas
aam
lds
mov
xor
lock
lock
data16
movl
movl
movl
movl
jmp
push
mov
fistpl
into
push
push
stos
xor
sbb
jmp
outsl
into
mov
data16
jmp
cwtl
rol
aas
lock
jecxz
lahf
adc
data16
imul
xchg
adc
loop
inc
push
jo
movsl
mov
imul
fiadds
or
cwtl
mov
cmp
roll
pushf
or
add
decl
mov
sbb
ret
lret
movsb
loopne
in
hlt
push
int3
fidivrl
lods
jp
push
dec
test
xchg
add
xor
mov
mov
pop
rcrl
aad
ss
jnp
daa
cmp
pop
mov
shl
pop
dec
adc
sahf
jecxz
xchg
aaa
rclb
pop
add
scas
xchg
pop
scas
cwtl
dec
lock
inc
enter
adc
cmp
jb
jb
push
out
add
clc
fdiv
aam
add
sbb
pop
outsb
lds
popa
push
insl
inc
or
jmp
stc
out
cmp
cs
cmp
frstor
cmp
push
jge
mov
fdivrl
sub
ja
jnp
or
into
aam
sub
add
sti
sahf
mov
iret
mov
lret
enter
sahf
jl
nop
xor
jge
addr16
xlat
cmp
push
iret
jecxz
inc
xchg
sub
mov
popa
cmp
mov
and
pop
add
add
or
mov
mov
cld
inc
add
push
repz
add
mov
fwait
jbe
push
add
outsb
and
in
das
jns
and
orl
repz
push
xchg
fdivrs
jo,pn
fildl
mov
popfw
and
or
xchg
int
ljmp
mov
and
dec
jns
inc
push
rcrb
xor
mov
adc
mov
outsl
cmp
xchg
das
or
je
mov
aaa
std
jne
xchg
pop
jp
popl
and
pop
sbb
icebp
pop
popf
mov
jg
popa
inc
into
in
scas
call
add
push
cmpsb
stc
xchg
dec
push
pop
rol
test
xor
in
sbb
mov
jl
jns
sti
sbb
xchg
xor
out
sub
subb
sbbb
loopne
stc
aad
xchg
gs
mov
mul
and
jo
rclb
addr16
pusha
mov
push
mov
mov
pop
or
add
jmp
xor
jecxz
mov
inc
or
fisubl
xor
movl
movl
jmp
aas
mov
mov
dec
mov
in
adc
sbb
test
sbb
fdivrs
sub
sub
xchg
push
sub
sub
jle
popf
push
cmpsl
imul
xor
pop
sahf
mov
cmc
xchg
sbb
jbe
pop
sbb
shr
pushf
cltd
or
out
sarl
fstpt
fisubrl
loopne
sub
shlb
lods
jle
xchg
arpl
rorl
aam
sub
not
rorb
in
or
mov
les
push
ret
shl
test
loop
sbb
lock
push
mov
add
pop
insl
call
xlat
adc
iret
sub
aam
mov
roll
dec
mov
out
xchg
cmp
mov
mov
mov
jmp
es
cmp
loope
xchg
inc
in
iret
lods
fidivs
cmp
push
orl
rcll
aaa
and
les
cmp
and
fdivr
adc
xor
sti
adc
inc
push
xor
mov
push
cmpb
stos
inc
pop
icebp
mov
xlat
jne
dec
pop
dec
scas
jne
cmpsb
gs
rorb
xorb
xor
dec
sbb
test
inc
inc
sub
pop
lods
push
jge
sub
jo
daa
pop
pop
or
dec
popa
xor
jg
mov
imul
pop
and
add
stos
pusha
stc
push
mov
pop
add
push
xchg
loopne
shlb
add
ds
loope
push
mov
xchg
jb
add
push
xchg
nop
jp
out
clc
mov
xchg
sahf
and
repnz
push
pop
mov
xchg
aam
sti
pop
pop
and
cs
dec
add
dec
push
sahf
mov
mov
sub
js
movsl
lahf
outsl
mov
xlat
cmp
mov
stc
jnp
pop
out
push
les
dec
rol
test
lock
fsubp
rcrl
sbb
ret
or
cli
jae
fidivrs
pushf
les
sti
stos
clc
out
xlat
cmp
idivl
inc
add
xor
fwait
loop
ljmp
mov
shll
sub
push
or
js
xor
imul
je
and
fistps
mov
xlat
dec
adc
xor
mov
gs
in
dec
outsl
lahf
int
xchg
test
sub
xchg
shll
inc
mov
filds
fwait
dec
sti
and
cli
adc
fcoml
adc
fsubrs
pop
div
mov
jmp
lahf
ds
xor
lcall
or
mov
adc
sbb
pop
jne
leave
cld
cld
cmp
cmp
jnp
xchg
or
pushf
sti
imul
push
sbb
xor
inc
mov
repnz
prefetch
xchg
sahf
ret
outsb
add
pushf
scas
dec
cmpsb
push
mov
ffree
sub
and
cmp
and
aas
lock
int3
call
sub
bound
inc
lahf
or
dec
and
and
imul
loopne
mov
into
xor
and
leave
sbb
pushf
fisubrs
xor
loope
jae
insl
inc
pushf
mov
adc
jmp
mov
cmp
dec
or
in
inc
lret
out
pop
lcall
mov
mov
dec
mov
mov
fnstsw
lret
mov
push
hlt
int3
add
mov
test
ss
xorl
out
mov
fmulp
loop
mov
cmc
aad
push
or
and
xor
pop
push
imul
repz
nop
cmp
fs
mov
xchg
xchg
popf
cld
pop
and
and
pop
add
xor
mov
push
imul
xchg
roll
aad
mov
push
mov
arpl
jmp
jp
subps
push
adc
xchg
pop
lock
xchg
stos
add
mov
mov
sbb
push
push
out
xchg
mov
pop
push
dec
adc
xchg
push
jle
mov
fbld
arpl
jne
les
lea
sbb
add
jae
xlat
mov
imul
pushf
filds
jp
das
out
aam
adc
rcrl
add
lds
xor
ja
mov
xor
sbb
iret
cli
jno
xchg
jnp
sbb
stos
pop
fstl
sub
inc
leave
dec
mov
std
outsl
xchg
insl
inc
xor
aam
cmp
and
out
or
dec
push
pop
xor
or
inc
xchg
enter
mov
add
sub
mov
cli
push
cmpsb
andl
sahf
in
dec
sbb
aaa
inc
test
xchg
fs
sub
repnz
enter
in
movsl
cltd
mov
int
inc
and
or
mov
les
pop
jne
dec
leave
arpl
mov
pusha
inc
out
ret
pop
sub
lret
adcb
mov
mov
sub
mov
mov
imul
mov
xor
sub
add
and
mov
sub
mov
sub
mov
sub
mov
mov
mov
mov
xor
add
xor
and
lea
mov
mov
add
div
mov
mov
sub
xor
div
add
cmp
jb
xor
inc
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
add
and
xor
mov
sub
movl
movl
mov
movl
movl
mov
mov
imul
xor
or
xor
mov
sub
mov
mov
mov
jmp
push
push
push
scas
sbb
inc
pop
jns
jo
or
xor
sbb
test
sbb
out
sbb
dec
test
sbb
out
outsb
sbb
jp
loopne
and
sbb
jmp
adc
out
push
or
cmpb
bound
cld
scas
dec
xor
inc
dec
push
in
inc
xlat
cwtl
incl
es
fdivrl
fsub
imul
in
popf
sub
flds
outsl
xchg
sub
push
cli
arpl
push
and
pop
sbb
adc
push
gs
pop
pop
mov
inc
push
xor
jmp
sti
arpl
cmc
mov
jge
enter
or
in
xchg
jge
sub
and
insb
sub
sbb
notl
or
mov
aad
popa
add
out
shll
outsb
scas
scas
lcall
lods
ss
mov
hlt
in
test
and
sti
mov
stos
add
add
outsl
sti
inc
fbld
mov
in
adc
push
test
xchg
addr16
or
xchg
cltd
mov
lret
or
jo
int3
lods
je
and
jae
pushf
outsl
push
push
mov
add
cwtl
dec
mov
add
pop
test
mov
lea
jne
lds
icebp
out
lods
insl
mov
shlb
filds
imul
jo
scas
cmp
out
stos
popf
aaa
in
cmp
out
call
sub
daa
pop
into
notb
sbb
mov
add
arpl
sub
lcall
xor
add
mov
jnp
jg
popf
jp
bound
cwtl
lret
mov
dec
cwtl
push
and
jmp
push
jb
stc
in
daa
pushf
ss
pop
loope
push
into
fisubl
cs
icebp
pushf
stos
insb
int
adc
push
sub
es
test
stos
mov
clc
xchg
fnsave
movsl
arpl
scas
cmp
and
stos
jl
rcrl
pop
mov
je
lcall
cli
push
pop
cmpsb
push
and
popf
sub
loope
mov
fdivrs
sbb
mov
mov
outsb
imul
xchg
test
lret
mov
push
sahf
mov
ror
les
lea
pop
pop
or
jp
push
mov
popf
and
pushf
jbe
adc
mov
addr16
insl
dec
jne
pop
subl
inc
sub
ds
jmp
xchg
mov
outsb
pop
mov
outsl
mov
stos
dec
popf
lods
jnp
mov
imul
sbb
add
ret
div
mov
mov
sub
mov
mov
mov
jmp
jmp
push
and
cmp
mov
test
sbb
cwtl
das
aas
fistps
mov
rcrl
mov
negb
test
dec
or
mov
repnz
addl
jne
pop
and
fidivl
pop
adc
mov
das
xorl
xchg
sbb
pop
repz
push
pop
mov
jns
pop
clts
das
es
cmc
add
inc
jmp
jmp
lret
dec
int
popf
fsubl
sbb
xchg
add
mov
mov
lods
je
mov
mov
insl
testl
pop
in
and
mov
xchg
les
sbb
jg
push
pop
xchg
lock
mov
dec
adc
push
test
mov
leave
outsb
sbb
inc
call
int3
and
adc
lea
and
dec
arpl
sbb
cmp
mov
mov
inc
es
jno
jp
mov
vmovsldup
int
shlb
add
cmp
push
jg
mov
ljmp
jle
mov
adcb
sbb
add
xchg
mov
sub
out
rorb
sbb
testb
ja
mov
mov
push
pop
mov
pushf
pop
mov
and
ljmp
gs
scas
jne
cmp
dec
in
add
dec
imul
nop
push
aas
fwait
lret
je
imul
mov
cwtl
ds
pusha
mov
or
sbb
sub
push
dec
jecxz
xor
push
js
push
cmc
mov
sub
mov
test
adc
rcr
ljmp
stos
negl
dec
test
mov
mov
xchg
es
push
and
mov
test
outsl
and
push
inc
scas
loopne
ds
ss
add
jno
xor
out
or
push
and
adc
cmp
in
jmp
xlat
inc
cs
outsb
mov
lret
sbb
subl
test
inc
rorl
pop
les
int
fldl
cmp
or
xor
out
push
pushf
xor
gs
push
jg
mov
loop
lds
mov
rcrl
pusha
popf
cmpsb
jl
pop
pop
inc
fs
or
into
pop
cmpl
in
inc
jge
push
out
push
insl
pop
movsb
adc
add
out
cs
or
xchg
imul
movsb
out
jecxz
mov
mov
stos
sarb
mov
loope
scas
pop
cwtl
movsl
mov
mov
jg
adc
mov
lret
lock
mov
imul
mov
imul
or
mov
or
xor
lea
mov
and
add
xor
add
cmp
jne
pop
pop
pop
leave
ret
push
mov
sub
push
push
movl
jmp
hlt
aam
adc
pop
and
cmp
rcrl
push
ficompl
sbb
adc
sbb
xchg
jae
mov
out
and
sbb
test
negb
mov
xor
xor
aad
xor
adc
dec
and
push
pop
sub
inc
sbb
mov
mov
fisubs
or
xchg
mov
xor
aad
insb
scas
and
mov
iret
add
nop
sub
cld
mov
jg
inc
fprem
incb
movsb
js
xor
inc
pop
call
sbb
retw
xor
je
shl
jae
sub
mov
xchg
mov
mov
es
inc
lds
cli
pushf
mov
or
cltd
mov
xchg
daa
sub
aad
loope
lcall
andl
sub
add
in
jne
jmp
jmp
scas
sbb
pop
and
sub
xor
insl
gs
pop
jmp
subb
sbb
push
cmp
sbb
cmp
imul
pop
push
mov
test
movsl
or
das
mov
add
and
daa
mov
sub
outsb
rcrb
ss
lcall
ret
adc
mov
xchg
xor
xlat
mov
add
aam
jl
mov
push
jmp
adc
add
add
addr16
xchg
mov
repz
or
inc
scas
jle
mov
es
pop
jo
mov
and
mov
out
ja
out
stos
push
les
lods
ret
lret
xorl
mov
pop
mov
out
je
cmp
jmp
mov
aaa
mov
xor
sub
pop
aaa
in
push
mov
xorl
stos
sbb
lock
cmpsl
jle
xchg
inc
jae
mov
ljmp
cltd
sbbb
jns
xor
xchg
mov
cwtl
lahf
pop
out
loopne
xor
out
icebp
inc
add
cs
je
es
dec
or
cmp
xchg
add
jb
sahf
dec
mov
addl
xchg
sub
mov
sbb
lret
adc
ret
movsb
xor
adc
xchg
leave
ds
test
int
int3
pop
sub
push
imulb
movsb
cmpsb
sub
mov
dec
dec
sbb
jp
in
aam
repnz
rorl
jmp
test
sarl
pop
sbb
inc
insb
lock
outsl
push
shlb
loop
std
push
loopne
xchg
xor
movsb
dec
jl
and
cltd
cmp
inc
adc
invd
das
jg
pushf
xchg
inc
cmpsl
icebp
clc
and
mov
pop
add
cmp
dec
fucomip
test
aas
jno
xor
or
cmpsl
lret
jb
lcall
test
mov
mov
cmp
fwait
xorb
xchg
push
rcr
pop
xchg
and
adc
test
scas
dec
jmp
ret
sbb
insl
les
mov
dec
cs
dec
xor
dec
and
int
inc
js
sti
scas
and
repnz
je
xor
lods
iret
sbb
cltd
cmp
leave
in
popf
inc
lods
jno
cmpsl
xchg
push
xor
jmp
adc
jbe
ret
and
dec
aad
hlt
test
or
inc
cld
ret
add
clc
add
or
mov
lea
jmp
lcall
ficomps
inc
dec
pop
jle
pusha
pop
jle
aam
sbb
adc
sbb
inc
negl
pusha
mov
xor
pop
test
pop
test
rclb
ret
rol
mov
sbb
test
mov
mov
dec
sub
repz
mov
inc
das
pop
sbb
insl
loope
ds
aaa
dec
sub
mov
pop
jbe
shll
xchg
test
sbb
or
je
insl
stc
bound
and
or
popf
gs
push
jl
mov
mov
rorl
icebp
les
js
jae
lahf
outsl
cmp
xchg
add
add
and
and
xor
pop
les
sarl
xchg
nop
jmp
outsb
adc
sbb
push
cmp
imul
test
lcall
add
loopne
sub
sub
jmp
loop
xchg
and
jp
xchg
jnp
lods
cli
scas
shlb
test
int3
lea
mov
inc
mov
out
icebp
xchg
sub
lcall
inc
cli
repz
sahf
mov
rcl
fldenv
adc
jg
pushf
rclb
lret
in
lods
insl
and
aaa
xchg
pop
scas
jp
sub
movsl
stc
sarl
ja
push
pop
cmp
adc
in
jp
mov
leave
in
cmp
adcl
push
daa
sbb
adc
shrl
mov
cmp
fstp
stc
test
xlat
pop
and
xor
mov
movl
push
frstor
pop
mov
pop
xchg
std
xchg
int
mov
movsl
xor
fnstcw
rcrb
jbe
mov
add
enter
lods
int
and
lds
or
clc
int3
push
rorl
hlt
or
add
cmp
and
inc
dec
icebp
stc
fidivs
bnd
fsubs
js
leave
jmp
pop
cld
mov
inc
jg
cwtl
arpl
cmp
jnp
adc
aaa
sub
jmp
fistl
xchg
testb
ja
cld
xlat
mov
rcr
adc
bound
into
js
push
dec
sahf
push
jecxz
or
enter
xchg
std
rolb
shr
and
or
mov
adc
addb
aam
lret
cmp
dec
mov
orb
and
and
incl
cmp
cli
jb
pushf
inc
jp
add
xor
testb
xchg
popf
insl
xchg
jnp
shlb
popf
mov
cltd
dec
test
or
pop
out
adc
push
iret
inc
outsl
add
jp
inc
pop
push
fs
xlat
shlb
push
stos
adc
sub
mov
mov
sbb
clc
add
dec
in
and
cmp
fs
mov
sarl
out
mov
out
adc
fidivl
lods
sub
arpl
inc
mov
pop
in
and
add
and
jnp
test
mov
cwtl
aad
pop
mov
push
or
enter
scas
push
imul
ja
pop
mov
cmp
add
push
xchg
jae
push
or
or
mov
xor
movl
movl
mov
mov
and
xor
jmp
out
icebp
aaa
insb
aaa
sub
mov
or
sbb
incl
out
xchg
mov
adc
pop
adc
xor
dec
xchg
or
fisttpl
inc
rorl
mov
sbb
insl
mov
orl
pop
outsl
fwait
out
cmpb
adcl
int
decl
cmp
sub
xor
dec
fdivs
mov
data16
pop
jae
dec
xor
sbb
and
jmp
loope
out
std
sbb
inc
sub
pop
fnstcw
pop
mov
in
out
repnz
or
aam
inc
xchg
add
in
adc
shl
in
xor
jb
lret
repz
es
lods
mov
icebp
xor
test
mov
mov
fwait
adc
movsl
loopne
adc
cmc
pop
outsl
mov
fiaddl
add
or
jge
inc
arpl
repnz
repz
mov
mov
enter
adc
pandn
jl
pop
ret
lret
test
stos
jns
fbstp
sbb
pop
bound
pop
pop
push
iret
lcall
inc
movlps
stos
scas
cmp
out
lods
test
cmp
jge
dec
cmp
and
pusha
fists
add
adc
inc
jbe
push
cmpsb
adc
int
rclb
sahf
mov
cmpsl
xor
lcall
pop
xchg
fs
lret
sub
aad
push
push
push
mov
xor
pop
lea
sbbl
jle
xor
jle
cmp
push
dec
dec
ss
xchg
pop
jmp
std
sbb
inc
push
cmp
lahf
xchg
lahf
lcall
enter
fidivrs
ret
inc
outsb
in
push
jg
pop
aad
jp
mov
adc
sbb
jae
cmp
jg
out
xorl
stc
arpl
rcrl
arpl
inc
dec
add
cmp
sbb
push
dec
mov
push
call
jle
lds
mov
in
mov
mov
inc
sub
out
mov
mov
mov
push
sub
pop
jle
lock
imul
sub
push
sarl
pop
cmp
mov
ss
jecxz
movsl
jl
push
jp
push
xchg
popa
mov
or
lret
dec
enter
dec
and
movsb
mov
inc
js
add
jno
mov
out
aam
subl
fcoms
loopne
fdivs
ret
inc
test
mov
cli
lret
and
hlt
and
jmp
push
xlat
xchg
jle
scas
in
xchg
push
cwtl
push
push
mov
add
mov
loopne
mov
dec
pop
pop
adc
xlat
dec
mov
iret
jg
push
mov
and
stos
arpl
out
arpl
insb
jl
test
bound
push
jno
orb
mov
sub
add
stc
loopne
mov
fdiv
dec
test
jmp
mov
add
lret
ret
out
pop
rcll
push
mov
mov
ret
cmpsb
sub
faddl
aam
popa
xor
pshufw
adc
aad
mov
imul
xor
lea
mov
movl
movl
mov
xor
push
pop
div
jmp
jb
pop
in
sbb
push
lret
rcrb
mov
push
sbb
xor
sbb
call
lret
daa
adc
lahf
int
ret
sar
scas
mov
sub
adc
stos
dec
mov
int
pop
daa
adc
lods
scas
std
mov
leave
leave
xor
jnp
push
pop
mov
jl
int
add
in
or
pop
aam
adc
loopne
sub
movsl
sahf
movsb
mov
mov
lods
pusha
movl
cmp
pop
jb
movsb
aam
sub
add
jb
pop
xor
orl
cmovp
lcall
in
adc
push
mov
outsl
mov
mov
adc
jge
and
popa
sarb
cmpsb
rcl
lcall
xchg
jg
xchg
ret
pop
adc
aas
xor
mov
mov
xchg
jnp
pusha
ja
negb
sub
jle
iret
pop
test
addr16
inc
mov
rolb
mov
test
cmp
jae
inc
loop
mov
add
aam
and
shl
mov
xchg
js
dec
and
sbb
xchg
pop
test
in
cmp
ja
mov
and
dec
mov
add
fs
inc
and
je
mov
loop
out
aam
mov
daa
fmul
mov
jp
cltd
ret
fisttpl
adc
frstor
sbb
adc
add
push
cmp
xchg
xchg
scas
aam
xchg
fisubrs
xor
in
sub
push
pop
repz
dec
ret
push
adc
mov
insb
pop
mov
outsl
test
add
fcoms
enter
pop
lret
mov
adc
test
push
pop
mov
add
and
mov
addb
cmp
xor
push
cmp
into
inc
jp
push
inc
in
pop
sbb
inc
sbb
subl
mov
aaa
sub
adc
or
sub
ljmp
pop
subb
out
je
xor
in
loop
lds
adc
xlat
or
cld
es
imul
sti
int3
jnp
setle
cmp
dec
xchg
in
cmp
pop
aad
cmp
jmp
adc
push
sahf
sbb
mov
pop
mov
cmc
push
mov
jb
repz
add
push
mov
dec
push
mov
repz
mov
jnp
xchg
jne
xchg
mov
call
add
jg
and
pop
xor
mov
jg
dec
jnp
inc
cmp
dec
test
cmp
sbb
jo
pop
push
arpl
clc
jns
inc
mov
leave
mov
enter
add
jo
stos
out
xchg
mov
outsl
lock
push
imul
std
adc
or
hlt
mov
or
stos
daa
addr16
fs
scas
pop
faddl
sub
xchg
adc
push
shlb
mov
sub
dec
dec
push
movsb
mov
repnz
mov
cmc
push
gs
dec
inc
or
push
scas
in
negb
mov
xor
push
add
and
mov
sub
mov
movl
movl
movl
mov
mov
lea
mov
div
mov
lea
mov
movl
movl
movl
mov
mov
xor
sub
mov
sub
xor
mov
movl
pop
mov
movl
movl
mov
mov
mov
xor
xor
div
mov
and
sub
mov
movl
movl
movl
movl
movl
movl
mov
add
mov
xor
mov
or
mov
or
mov
and
mov
sub
mov
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
add
adc
or
mov
or
or
mov
mov
or
mov
sub
mov
sbb
mov
or
or
add
mov
adc
mov
movl
movl
movl
movl
movl
movl
movl
xor
inc
mov
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
movl
mov
movl
movl
mov
or
add
mov
or
mov
sub
mov
sub
imul
add
mov
push
mov
lea
mov
xor
div
mov
lea
push
mov
mov
push
push
jmp
fmull
fiaddl
clc
push
cmp
stos
mov
sbb
xor
sbb
jns
inc
sub
xchg
aad
rcr
jnp
lret
popa
add
sub
aas
les
mov
or
leave
loopne
imul
jl
mov
xor
push
fucom
mov
or
sub
or
adc
sti
add
test
pop
and
jb
cli
fxch
and
xchg
jae
add
out
inc
cmc
push
push
cmp
iret
sahf
repnz
and
pop
mov
mov
mov
mov
sbb
mov
add
mov
lret
das
jb
inc
leave
cmp
sahf
push
nop
mov
pop
sub
mov
add
or
push
and
insl
or
inc
push
test
outsb
jb
ret
inc
mov
mov
mov
mov
stc
mov
push
loopne
je
int
inc
dec
or
push
xor
cltd
jns
push
inc
or
push
es
lahf
js
iret
cmpsb
and
push
aaa
push
mov
ret
mov
or
ds
xchg
enter
mov
and
test
hlt
push
fldl
cltd
pop
pushf
or
pop
push
clc
cltd
cmp
call
shl
icebp
addr16
pop
loop
xor
jbe
fdivs
add
add
lods
fldt
inc
bound
test
jle
sbb
fadds
lret
shrb
fstpt
sub
xchg
sbb
jecxz
mov
cli
push
and
repz
xchg
insb
mov
shrl
scas
jecxz
aaa
xor
bnd
dec
xchg
cli
dec
movsb
lea
ljmp
popa
xchg
adc
xchg
mov
icebp
cwtl
cmp
adc
cmp
imul
mov
push
fdivl
gs
mov
dec
cmp
jns
nop
lcall
sti
xchg
mov
pusha
outsb
xorl
or
jns
iret
or
cmpsl
sub
fcmovnb
mov
clc
and
mov
or
out
insl
lock
cmpsl
pop
leave
mov
filds
sbb
mov
push
outsb
cmpsl
sub
pop
or
mov
mov
lret
arpl
pop
gs
lret
rolb
std
or
pop
dec
pop
subl
push
xlat
and
sbbb
test
pop
mov
nop
xor
in
or
mov
fidivl
scas
scas
flds
jecxz
cwtl
pop
insl
loope
les
out
and
data16
cmp
in
and
in
adc
mov
rorb
adc
cmpb
jb
and
repnz
addl
jnp
jae
sub
jmp
sub
mov
es
out
push
out
jl
lret
fwait
sti
enter
lret
out
xor
adc
xor
cmpsl
jmp
pop
inc
push
xlat
das
mov
inc
or
in
hlt
cld
scas
adc
ds
in
adc
and
movsl
jecxz
mov
jmp
adc
cmp
dec
sub
dec
adc
pop
push
in
xchg
lods
mov
fisubrl
shl
lods
mov
pusha
ljmp
or
outsb
test
ret
je
mov
mov
pop
divb
and
pop
jb
mov
cmp
add
mov
mov
push
push
or
or
push
push
call
mov
mov
xor
mov
mov
mov
and
jmp
xchg
fistl
sbb
sbbb
or
sbb
adc
sbb
mov
aaa
in
xor
lret
mov
stc
call
mov
mov
push
push
push
cmp
pushf
das
fidivs
xorb
xchg
push
imul
inc
mov
add
shll
lods
xor
fisttpll
popf
or
jmp
push
mov
and
cmp
mov
mov
mov
sub
cwtl
jbe
push
jge
adc
pop
cmp
popa
fwait
push
jp
sub
outsl
mov
rcr
fisubl
and
scas
push
xchg
aad
imul
xor
or
xchg
daa
mov
imulb
aad
inc
add
jns
aas
sarl
xchg
xor
adc
jae
aaa
in
lret
push
enter
push
add
or
imul
lahf
pusha
mov
or
ds
mov
testl
pushf
push
leave
das
jp
and
sahf
dec
std
lea
push
out
and
arpl
cld
mov
xchg
or
jbe
clc
pop
mov
mov
jle
lret
cmp
jne
xchg
cs
std
out
mov
rcrl
sahf
insb
mov
or
cmc
dec
pushf
pusha
xor
popa
dec
out
mov
repz
xor
and
xor
push
outsb
mov
adc
mov
pop
mov
dec
cmp
stos
bound
fdivrl
add
mov
pusha
pusha
into
and
pushf
dec
pop
add
inc
aaa
mov
out
mov
pop
xchg
bound
notl
arpl
lea
jmp
addl
cmc
fidivrs
add
scas
mov
ss
aad
mov
aaa
decb
mov
stos
jno
lret
pop
mov
idiv
fcoms
jb
test
aas
rcr
pushf
inc
sbb
adc
mov
cwtl
stos
sub
cmp
ret
mov
xchg
push
cs
mov
mov
jns
stos
adc
mov
into
test
push
xchg
popa
sub
repz
jmp
mov
cli
xor
sahf
mov
sbb
shrb
repz
dec
or
jne
mov
leave
aad
pop
mov
sti
sub
mov
outsb
jg
rcrb
popf
data16
sub
jl
add
pop
jbe
cmpsb
adc
pusha
test
mov
push
jge
cmp
or
sahf
repnz
sti
aaa
dec
stc
xchg
push
leave
and
testb
xchg
or
add
shrb
pop
pushf
js
cwtl
mov
int
pusha
dec
or
push
xchg
mov
xor
pop
sub
sub
ja
xchg
or
add
mov
in
sbb
in
pop
adc
jmp
aas
xor
pop
sbb
mov
dec
mov
push
test
lea
fwait
add
fistl
push
in
sub
outsb
adc
ja
push
push
push
push
dec
xchg
js
ljmp
add
jecxz
sbb
fisubrl
arpl
test
stos
gs
pop
rorl
mov
add
mov
add
lea
xor
push
lea
call
mov
mov
mov
sub
xor
imul
add
xor
xor
mov
div
cmp
jne
mov
xor
mov
div
mov
mov
xor
sub
mov
xor
sub
or
lea
push
mov
push
pop
div
mov
xor
div
mov
mov
xor
xor
div
imul
sub
push
mov
add
push
mov
sub
mov
pushl
call
mov
mov
lea
mov
incl
mov
mov
xor
shld
shl
mov
mov
xor
xor
cmp
jne
cmp
jne
mov
mov
jmp
lea
mov
mov
mov
mov
mov
sub
mov
mov
mov
sub
mov
movl
movl
mov
mov
mov
mov
pushl
pushl
pushl
pushl
pushl
push
push
pushl
mov
call
mov
mov
pushl
call
mov
push
add
push
push
jmp
mov
push
sbb
sbb
cmc
cmp
xchg
cld
mov
xor
sbb
add
fwait
clc
addr16
aas
jo
lcall
mov
sub
ja
fiadds
fwait
imul
stos
sbb
or
jb
adc
out
inc
mov
xchg
stos
in
dec
icebp
add
and
test
je
sbb
jecxz
or
stos
adc
call
cmp
sbb
imul
sahf
mov
inc
fisttpll
cmp
imul
sbb
lret
das
or
jo
loopne
sub
inc
adc
dec
stos
mov
pop
ret
testl
cmp
jno
es
jl
sti
or
in
push
ljmp
mov
imulb
rcrb
nop
jo
add
mov
aam
stos
ficomps
addr16
imul
fldl
jne
pop
xor
sbb
add
mov
and
cmc
pop
pop
mov
or
push
or
in
pop
mov
lahf
and
sub
in
jg
push
and
pop
mov
rorb
cmp
pop
jmp
popa
test
cmpsb
push
popa
xchg
js
push
aaa
bound
pop
rcr
les
test
rorb
mov
pop
divb
push
pop
dec
push
jo
pop
scas
cmp
or
popa
xor
ss
cmp
aaa
out
loope
pop
cltd
aam
repnz
call
gs
push
push
sbb
mov
in
mov
or
sub
gs
es
mov
in
lret
and
jp
xchg
fmul
lods
push
pop
xchg
push
add
xlat
jp
adc
jle
pop
inc
fidivrl
iret
adc
push
inc
push
pop
bt
adc
pop
int3
iret
scas
dec
and
xlat
pop
and
cli
jecxz
jle
popf
jp
cmp
idiv
in
fisubl
push
mov
push
sub
rolb
jecxz
shlb
inc
clc
aaa
mov
mov
enter
inc
lret
movsl
mov
sar
aaa
mov
or
fstl
mov
iret
aam
dec
fstpt
repnz
jns
test
addr16
xchg
sub
cltd
lods
mov
adc
adc
push
sbbb
mov
lds
inc
and
mov
aaa
cmc
clc
clc
call
lods
or
push
add
int3
add
into
lods
cwtl
xor
stos
sub
daa
xor
ljmp
cmp
pushf
jle
dec
dec
call
push
mov
ds
xchg
loop
push
enter
pop
leave
aam
or
push
push
xor
faddp
clc
js
push
mov
mov
xor
sbb
outsb
mov
mov
adc
cmp
jmp
dec
out
imul
pop
xor
adc
or
mov
cltd
fs
cmp
and
push
cmp
repnz
into
mov
mov
xchg
sbb
xor
mov
imul
lcall
cltd
divl
and
pop
lea
movsl
lods
lds
call
mov
jmp
mov
mov
pop
pop
leave
ret
push
mov
jmp
cmp
mov
xor
mov
stos
sbb
test
or
cmp
push
fsubrs
out
cmpl
lret
shlb
jecxz
and
int3
xchg
shrl
into
xor
out
insl
xor
lahf
int
dec
push
ss
dec
adcb
sub
sbb
test
jge
push
cmc
sbb
pushf
mov
push
push
dec
push
dec
dec
mov
pop
popa
xor
cmp
testl
xorb
fwait
pop
jo
mov
push
std
ja
xor
insb
or
mov
push
fldt
imul
cmpsw
fdivrp
outsl
push
adc
mov
sbb
cmp
test
rclb
call
nop
shlb
adc
and
dec
pop
repnz
shrb
test
scas
xchg
mov
arpl
pop
adc
in
mov
repz
lret
rclb
add
leave
jo
gs
mov
imul
or
es
mov
ds
inc
xchg
adc
push
imul
repz
push
pop
filds
popa
jno
jmp
in
pushf
sbb
mov
mov
pop
test
xlat
add
mov
add
fcomip
push
inc
test
movsl
lret
test
lods
cld
lcall
ss
lahf
sub
mov
mov
test
jo
xor
cwtl
test
cmp
or
inc
enter
mov
rep
jp
add
jo
outsb
xor
in
push
scas
decb
sarb
jb
mov
cmc
ss
popf
mov
std
icebp
out
dec
sbb
aad
cmp
mov
es
sub
mov
cmp
dec
push
mov
test
stos
out
jae
ret
jae
mov
adc
testl
cmpb
dec
int3
ljmp
test
cmp
enter
cmp
addr16
js
in
and
movl
movl
movl
movl
movl
movl
jmp
mov
xor
movsl
mov
mov
sbb
cmp
testb
pop
outsl
sub
decb
mov
or
mov
xor
int
incl
test
ret
xchg
add
inc
jne
mov
outsl
mov
mov
adc
in
push
dec
pop
mov
bnd
add
std
into
into
pop
jmp
jnp
xor
inc
jne
sub
xchg
fdivl
shl
mov
xchg
cmp
sbb
add
aas
mov
push
jo
cmpsb
in
pop
pop
ficoms
pop
div
loop
and
xlat
int
xchg
mov
insl
imul
mov
and
out
loopne
lret
data16
faddl
das
shl
lcall
scas
jg
ja
and
int
push
dec
stos
lret
cmpsl
and
mov
push
dec
and
jb
loopne
mov
in
out
addb
xchg
insb
ret
xchg
sbb
out
adc
movsb
mov
rorb
rcrl
pop
sub
inc
mov
adc
lcall
pop
cmp
cltd
shlb
imull
popf
movl
popf
mov
rolb
adc
movsb
jp
jg
enter
and
cmp
pop
sub
adc
mov
fnstcw
jb
ror
sub
xor
sarl
insb
cli
sub
jnp
mov
or
mov
in
inc
loop
mov
lock
jecxz
mov
jo
cmp
mov
int
int3
mov
pop
sbb
je
jae
inc
mov
push
lcall
out
loopne
and
push
adc
add
fisttps
cs
jmp
mov
arpl
dec
mov
ret
scas
xchg
cmc
into
call
pop
ljmp
inc
movsb
push
and
leave
push
popf
cmp
jp
pop
jne
xor
sub
stos
and
ljmp
int3
adc
ss
psubsw
scas
mov
mov
mov
mov
push
jmp
sub
and
jb
push
stos
icebp
jmp
jo
mov
sbb
push
cwtl
sbb
jns
pop
mov
lret
and
sub
adcl
test
mov
js
xor
sub
push
ljmp
hlt
hlt
iret
movsb
sahf
jbe
pop
sub
xlat
jg
jl
jmp
outsb
jno
sbb
int
fnstsw
mov
sbbb
cmp
shlb
and
xchg
fistps
and
nop
xor
into
dec
nop
pop
inc
cmp
mov
test
push
mov
ret
pop
dec
out
lea
inc
aaa
mov
int
sub
jo
pop
fcmovb
xchg
cli
xorl
lea
mov
xor
sbb
sbb
push
push
movsl
mov
cmp
xor
dec
icebp
mov
cwtl
int3
xchg
dec
xchg
mov
xor
mov
lods
cmc
scas
cmp
repz
xlat
cmp
in
fcmovu
jno,pn
or
lcall
xchg
out
lcall
and
mov
jns
test
jns
sti
dec
push
sbb
testb
xchg
shll
push
push
sub
xor
je
and
pop
loope
jne
sbb
add
out
cmp
and
arpl
lds
test
sub
xor
cmpsl
adc
cmc
orb
testl
inc
push
add
cwtl
sbb
and
lahf
inc
fldcw
test
mov
add
sub
pop
ljmp
add
add
in
cmp
and
add
aas
mov
pop
fistl
insb
popa
ja
rorl
lahf
bound
and
aaa
vshufps
sti
mov
xchg
cld
sbb
fmuls
bound
insb
shrb
lods
loopne
rol
push
mov
adc
ret
in
jbe
rcrb
and
jno
dec
push
or
clc
sti
dec
jb
testb
add
sbb
lods
xor
mov
push
push
call
mov
mov
add
adc
and
push
and
or
push
or
xor
xor
push
push
call
mov
movl
movl
movl
movl
xor
jmp
leave
xchg
dec
sub
sub
mov
fnsave
mov
test
push
insb
divb
push
stos
cmc
mov
mov
jecxz
inc
push
and
das
inc
stos
in
inc
mov
dec
and
mov
test
mov
add
pushf
outsl
pop
sub
xchg
insb
jbe
out
xor
sbb
and
mov
movl
mov
xchg
aaa
push
inc
add
or
xor
or
aad
dec
in
xor
sub
push
mov
jae
and
cmpb
test
lock
lods
mov
repnz
in
outsl
xchg
and
sbb
movsl
insb
xchg
sub
loop
xor
pop
outsb
cmp
lahf
mov
loop
repz
sub
stos
xchg
dec
mov
mov
nop
les
lods
insb
jg
lock
jp
add
test
pusha
xlat
xchg
fwait
or
mov
cmp
mull
mov
cmp
data16
out
leave
out
pop
cmp
ds
xchg
jp
icebp
pop
jnp
pop
pusha
inc
gs
inc
gs
mov
cmp
xor
jg
xchg
subb
andl
test
pusha
outsb
pusha
jo
lcall
dec
xor
or
adc
inc
cmp
cmp
test
and
scas
iret
adc
fidivrs
int
cli
stos
pushf
popa
pop
mov
daa
out
jmp
lea
sahf
stos
add
fildll
jns
fsubrl
push
ret
in
int3
mov
add
adcl
fimull
pop
mov
shrb
jle
pushf
je
xor
fwait
and
mov
or
xchg
inc
popa
lahf
cmpl
loope
lcall
cmpsb
stos
or
divl
push
cmpsl
jbe
pop
fwait
cmpb
mov
mov
adc
sahf
call
add
pop
idiv
aam
scas
sbb
inc
adc
push
xor
push
imul
inc
mov
pop
lods
fcomip
int
in
cli
adcb
mov
popf
cs
aaa
stos
xor
inc
hlt
pop
xor
add
or
add
jge
mov
mov
push
push
push
call
mov
mov
or
or
push
add
push
adc
push
push
call
mov
lea
xor
mov
jmp
insl
jmp
cwtl
xchg
popf
pusha
outsl
mov
aaa
dec
jle
cwtl
sbb
test
imul
pop
lret
into
addl
std
and
jb
imul
int
rclb
add
cmpsb
push
std
push
mov
xlat
jo
mov
ret
xlat
cmpsl
adc
mov
testb
sub
xchg
aas
and
daa
mov
xchg
sbbb
sub
ss
or
fs
ljmp
cmpsb
outsl
daa
fwait
lock
lcall
jb
mov
cwtl
popa
push
lods
pop
xchg
pop
dec
pusha
nop
lcall
mov
pop
xchg
add
or
and
aas
insl
xchg
fucom
cmp
das
daa
xor
in
sahf
mov
mov
lahf
and
popf
or
dec
mov
inc
clc
xchg
mov
je
sbb
xchg
sti
xor
daa
data16
sbb
out
lahf
push
mov
pop
push
outsb
push
cmpb
or
mov
add
into
and
int3
pop
pushf
and
clc
decb
std
xor
pop
ss
lods
pushf
sub
sbb
dec
lahf
je
test
mov
popf
and
in
mov
test
and
mov
lock
sub
sbb
cs
and
jge
shr
cltd
ja
cmpsb
shll
hlt
sub
adc
icebp
cmp
shrl
popa
jbe
mov
push
push
inc
ficompl
cwtl
lcall
mov
sub
popf
inc
insl
movsl
add
push
mov
inc
mov
insb
xor
mov
rclb
sahf
adc
adc
pop
push
cmc
rcl
jo
pusha
popa
add
imul
mov
jmp
xor
xchg
inc
adc
hlt
out
push
sti
inc
test
pop
fisubs
movsl
pop
cmp
out
xchg
ja
outsl
pop
cmp
jp
push
inc
and
daa
shr
add
lret
js
pop
dec
dec
xchg
add
cwtl
imul
mov
addr16
fiadds
jl
add
mov
in
ret
xchg
xchg
mov
pop
xchg
sbb
stos
lret
vhaddpd
or
into
andb
sub
push
jle
div
mov
sub
mov
movl
mov
movl
mov
mov
sub
mov
xor
jmp
push
xchg
mov
and
int
mov
enter
test
sub
aaa
repnz
sub
sbb
dec
int3
mov
into
fldcw
adc
cs
imul
call
jns
sub
sub
or
bound
or
push
fiadds
xor
je
in
mov
inc
sub
jb
mov
lock
xchg
fwait
dec
insb
inc
sub
pop
out
or
lret
andb
sbb
movsl
sbb
in
andl
sbb
xchg
movsl
pop
push
mov
cmc
and
je
sbb
mov
dec
mov
ret
arpl
loop
lods
xor
mov
pminub
movsl
testl
sti
cmc
cmp
out
movsb
adcl
or
mov
dec
jmp
test
mov
xor
pop
jne
cli
jbe
pop
aam
scas
jnp
negb
mov
rcll
jecxz
hlt
dec
sahf
push
inc
leave
cmp
cmc
push
outsb
fwait
in
add
icebp
push
aaa
adc
sub
adc
fildll
add
insb
inc
and
mov
add
pusha
adc
fs
scas
sbb
adc
mov
pop
mov
or
out
pusha
mov
or
bound
cmc
mov
fwait
outsb
xor
fcmovb
pusha
mov
repnz
jo
scas
sub
call
js
lret
push
pop
adc
sti
call
cwtl
push
int3
notb
mov
ret
sub
shlb
inc
pop
xor
dec
mov
push
add
cmp
add
adc
fbld
adc
ja
push
and
loopne
data16
into
insl
or
mov
imul
jnp
call
xchg
cmpsl
ret
or
fsub
outsb
cmp
cwtl
arpl
mov
pop
fdivrs
stos
xor
push
rcrb
xchg
sbb
std
mov
out
mov
sub
mov
add
cwtl
sti
into
jae
sbb
icebp
mov
xor
or
jmp
push
and
mov
push
nop
sbb
test
cwtl
test
xor
clc
aas
in
incl
xchg
sbb
jno
push
cwtl
xchg
sbb
mull
dec
in
insb
lods
or
loope
shrb
cmp
mov
rcll
sub
xor
mov
pop
out
sbb
xlat
or
test
push
mov
test
test
in
test
xor
scas
jno
lcall
daa
rcrl
in
ficoms
lret
pop
push
xchg
ds
cmc
mov
jno
mov
cmpsb
dec
in
mov
fcmovbe
cmp
jae,pt
fsubrl
int3
movsb
lret
mov
jmp
push
push
ss
movsl
out
jg
stos
dec
out
cmc
xchg
sub
jl
xor
lods
sti
fistps
fbstp
aas
push
add
in
movq
jnp
jae
imull
notb
xor
jno
scas
sub
push
call
mov
adc
ja
adc
push
fldl
movsb
fucom
jecxz
mov
or
fsubp
and
sbbl
xchg
dec
add
pop
hlt
xchg
pushf
mov
dec
iret
xor
pop
dec
loop
maskmovq
imull
mov
xor
daa
leave
pop
add
mov
jp
pop
mov
add
popa
xchg
int
pop
lahf
mov
mov
sub
push
push
and
jo
add
xor
fstpl
and
or
mov
out
sbb
xor
dec
mov
inc
dec
add
xchg
push
dec
push
fidivl
arpl
bound
push
jecxz
shrb
mov
xor
pop
ljmp
imul
lcall
and
or
lea
mov
mov
fnsave
cmp
dec
cltd
repz
loopne
pop
cltd
mov
push
test
push
in
pusha
mov
loope
xorb
pop
cld
inc
mov
or
mov
mov
movl
movl
movl
mov
add
mov
and
lea
mov
mov
mov
movl
movl
movl
mov
mov
sub
add
xor
add
mov
div
mov
xor
pop
pop
or
mov
movl
movl
jmp
bound
and
lds
lock
test
dec
imul
sub
inc
cltd
adc
fmull
daa
sub
xchg
pop
fnstenv
std
dec
mov
sbb
fimuls
add
pxor
mov
add
mov
lcall
adc
mov
stc
push
fwait
xchg
mov
in
mov
cmp
adc
outsb
fwait
cmp
push
xor
mov
cwtl
aas
jle
mov
faddl
pusha
clc
ret
popa
in
in
sbb
filds
lahf
dec
cmp
mov
xchg
dec
xor
js
dec
pushfw
add
xor
inc
jmp
inc
leave
jle
std
xchg
bnd
sti
xchg
int3
out
ds
cli
in
mov
dec
cmpl
pop
or
cmp
fdivrs
pop
adc
popf
pop
push
fidivs
pushf
fwait
mov
or
adc
inc
sub
dec
inc
lret
xchg
jae
pusha
push
add
push
lock
dec
sub
fmuls
hlt
add
insl
aam
dec
jne
jl
or
or
pop
inc
ret
loopne
or
cs
stos
jo
cmp
inc
inc
jp
sbb
and
add
pop
fs
lea
outsb
push
mov
cwtl
movb
sbb
sub
test
idiv
imul
pop
andl
jbe
ja,pn
shll
ret
mov
pop
stos
mov
sbb
sbb
les
fst
xor
movsb
gs
sbb
push
mov
add
inc
jnp
ja
or
dec
xor
rcll
out
stc
xor
cvtpi2ps
mov
mov
jg
xorb
in
mov
fwait
ret
enter
xchg
or
stc
jmp
outsb
test
jbe
xchg
ficompl
cmp
mov
mov
mov
test
mov
xchg
jle
push
fisubs
sarl
pop
into
test
dec
sbb
push
push
dec
mov
pop
pop
enter
movl
mov
mov
and
sub
or
mov
imul
mov
div
leave
ret
push
mov
sub
push
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
jmp
dec
mov
aam
movsb
sub
bound
jle
xchg
sbb
sbb
scas
fcomp
stc
mov
sub
dec
cmp
call
jmp
or
das
addr16
add
mov
fiadds
add
sbb
test
sbb
pop
xchg
aad
mov
push
mov
jns
test
pop
mov
mov
jp
cmp
push
aas
jne
or
add
and
into
call
adc
mov
sbb
out
xchg
sub
repnz
pop
in
arpl
ja
inc
cmpsb
jae
pusha
test
lret
imul
mov
outsl
nop
decl
or
fdivrs
daa
into
xchg
add
lock
call
bound
and
dec
xor
jecxz
shlb
cmp
incl
mov
mov
adc
cmp
jmp
daa
xchg
adc
fstpl
cltd
sub
mov
scas
cmc
xor
sbb
jb
outsl
pop
lret
and
shlb
hlt
mul
stos
fs
lock
mov
sbb
add
dec
jle
outsb
pushl
inc
push
mov
xchg
xchg
or
mov
xchg
stc
out
push
mov
cs
push
std
fld
lret
mov
out
mov
iret
in
mov
dec
cmp
xor
xchg
arpl
bound
lcall
lahf
lret
loop
mov
in
inc
adc
dec
cs
fnstenv
les
inc
adc
add
repz
sbb
jns
or
and
mov
insb
mov
dec
sti
xchg
inc
aas
xchg
leave
or
jb
mov
inc
iret
loop
mov
sti
leave
jae
std
xor
mov
dec
in
dec
jae
ljmp
jge
test
mov
jle
and
fwait
scas
hlt
fnstenv
and
and
dec
jbe
jnp
add
add
pop
je
inc
test
js
jno
adc
push
divl
imul
rcrl
xchg
push
sbb
dec
daa
popf
std
movsl
jae
nop
inc
outsb
fisttps
and
cwtl
inc
loope
ja
push
rorb
mov
xchg
pop
fcmovu
lret
sub
icebp
sub
jle
pop
jle
outsb
cmpsb
cltd
cmp
cmpsl
and
shrl
sahf
mov
movsb
fs
push
scas
jne
xchg
mov
out
cmc
setg
cmpsb
mov
mov
or
imul
das
ljmp
cltd
loope
movsb
aas
lea
jae
mov
mov
cmp
call
decl
sub
in
or
pop
fiadds
insl
xchg
ds
das
sbb
ss
dec
imul
sar
imul
out
iret
or
ret
xchg
pop
iret
jo
es
in
or
pop
and
cmc
fwait
sbbl
into
mov
in
cs
lods
xor
das
cmc
pop
sub
pusha
je
add
cmp
mov
adc
cmpb
xor
data16
inc
lods
insl
dec
fadd
test
mov
insb
add
add
jne
inc
sbb
pop
clc
push
mov
fadds
sbb
xchg
jns
loopne
fnstenv
sub
out
pop
sbb
mul
xchg
shl
xchg
push
hlt
xor
sub
push
rcr
inc
xchg
cli
dec
dec
pop
jno
leave
cli
fisubrl
jo
lret
xlat
sbb
mov
push
jb
push
leave
xor
mov
jge
mov
jg
repnz
icebp
inc
int
cmp
ja
or
xchg
ror
sbb
arpl
adc
and
ret
outsb
int3
push
lahf
sub
sub
push
mov
sahf
mov
out
jno
cmp
sub
ljmp
int
pop
push
cli
inc
int3
add
xor
and
pop
jae
push
nop
addb
out
xchg
ja
pushf
arpl
mov
push
dec
inc
lock
in
push
cmpb
push
xor
mov
das
pop
stc
or
and
adc
and
daa
jbe
mov
push
aaa
enter
cwtl
inc
adc
adc
scas
imul
xor
cmc
add
mov
loopne
jle
out
inc
into
cwtl
rolb
xchg
rolb
inc
sbb
out
stos
jno
and
mov
push
pop
dec
xchg
in
mov
push
in
xchg
movsb
inc
outsl
push
cmpb
cmp
dec
lods
sub
mov
xchg
fnsave
add
call
orl
pextrw
cmp
test
xor
jns
mov
jmp
dec
jno
jb
ret
xchg
jge
or
out
adc
stc
cmpb
or
xor
stos
cmp
lretw
test
std
mov
xor
jbe
add
mov
cltd
fdivrl
pcmpeqd
repz
jp
popa
add
push
jbe
adc
rclb
inc
ret
dec
sbb
mov
loope
int3
out
mov
pusha
push
rcll
sti
clc
cmp
movsl
xchg
icebp
sub
cmc
jne
mov
xchg
sub
pop
hlt
dec
movsb
outsb
idiv
sar
jne
je
push
popf
movsl
mov
rcrb
imul
int
xchg
stos
fstpt
fisubrs
pop
ja
rcll
xchg
in
mov
cld
fwait
jg
inc
fcomip
adcl
xchg
cmp
cmp
aas
dec
sub
sub
dec
pop
out
add
sti
lahf
test
cmp
out
bnd
fiadds
mov
dec
inc
mov
repz
xchg
mov
add
mov
cmp
aas
pop
dec
jl
stos
jmp
cmp
not
dec
decb
icebp
push
sarb
mov
sarl
or
pop
cmove
add
mov
xor
inc
sbb
lcall
pop
or
ds
and
cwtl
push
cli
les
mov
jp
or
jo
dec
mov
orl
rol
mov
jne
mov
push
mov
stc
xchg
dec
or
fst
ret
test
call
inc
mov
das
push
mov
fcmovb
test
dec
inc
add
movl
movl
movl
movl
movl
movl
movl
movl
push
movl
mov
mov
push
push
push
call
mov
mov
xor
mov
mov
mov
jmp
das
ret
pop
sub
ret
xchg
mov
cmp
sbb
sbb
cs
push
mov
mov
cmc
notb
mov
pop
dec
addr16
and
leave
cmpsl
fstps
js
jns
je
mov
jg
test
push
jbe
pushf
add
hlt
mov
popa
adc
fcmove
mov
mov
mov
hlt
pop
ss
sbb
xor
in
dec
repnz
pop
mov
jecxz
pop
or
xor
lods
insb
pop
fldl
lods
fsubrl
mov
xchg
adc
stos
cltd
mov
dec
pop
pop
les
scas
sub
addr16
in
xchg
pop
mov
call
jo
fisubs
in
xchg
movsb
mov
cltd
test
stc
out
or
xlat
cmp
xor
sub
cmpb
std
push
add
xchg
pop
or
sbb
repnz
sbb
xor
mov
push
or
jge,pt
bound
lahf
adc
movsb
mov
insb
sub
xchg
mov
sub
jnp
adc
dec
fs
bound
insb
imul
sub
aas
notb
add
vpcmpgtd
xlat
fmull
popa
gs
xchg
jns
je
gs
xor
aaa
cmp
insb
or
cmc
imul
popa
fnstenv
inc
adc
aad
push
xor
cltd
mov
sub
je
ja
insl
shrl
mov
xor
cmpsb
into
adc
sub
decb
insl
xchg
insl
scas
push
pop
nop
sbb
out
pop
or
push
mov
movsb
pop
ror
out
jns,pn
or
mov
xor
mov
sub
adcb
addb
mov
mov
mov
stos
dec
movl
adc
lret
cltd
sti
repz
clc
stc
call
add
jns
or
xor
sbb
iret
add
dec
decl
fsub
mov
add
sub
sbb
jns
lods
orb
repz
cmp
loope
rcr
sbb
es
mov
ret
xchg
adc
xchg
sub
cmp
dec
push
mov
xchg
push
aaa
clc
pusha
lahf
add
fstpt
out
mov
xchg
push
push
jns
pop
fidivrs
or
sahf
jne
mov
daa
xchg
or
xor
mov
incb
mov
pushf
or
adcb
lods
test
add
mov
jnp
imul
out
xor
in
add
push
or
inc
pushf
loop
jno
add
mov
mov
imul
mov
add
jmp
fsubr
jl
add
or
adc
xchg
mov
and
repnz
scas
cmpsb
movsb
rorb
imul
fistpl
xor
or
mov
push
fwait
push
or
mov
mov
mov
xor
cmp
sub
add
or
jge
mov
or
dec
cmp
jmp
dec
mov
mov
jb
stos
lahf
sub
push
les
add
enter
inc
add
add
data16
or
add
cltd
adc
cmp
jne
cmp
je
mov
mov
mov
mov
add
adc
or
mov
or
mov
push
push
push
push
call
mov
mov
and
mov
mov
jmp
fs
cmp
cmpsb
dec
adc
cltd
jb
sbb
sbb
sbb
xchg
std
lcall
addl
test
int3
clc
repz
ds
pop
and
mov
push
in
sbb
out
pop
dec
cmp
add
inc
dec
mov
je
mov
mov
or
add
test
loopne
sti
imul
aam
ss
xor
clc
jnp
pop
push
call
stos
jmp
push
lds
nop
mov
pop
mov
lock
jbe
shlb
inc
xor
in
bound
sti
mov
ret
xchg
xchg
shl
ja
test
mov
mov
stos
shr
mov
lods
push
sub
fldcw
fdivs
ds
stc
lock
xor
loopne
std
rol
cmp
fsubrl
adc
int
scas
or
mov
pop
sbb
mov
and
sub
mov
mov
push
mov
pop
lret
cwtl
add
or
clc
push
inc
pusha
repz
sbb
insb
dec
ret
sbbb
movsb
and
mov
or
aas
inc
test
xor
cs
fsubl
lds
stos
mov
loop
lcall
ret
cmpsl
sbb
or
call
rclb
fildll
int3
outsb
jb
fsubp
xor
in
in
ret
imul
pushf
adc
idivb
mov
mov
sbb
cmp
notb
fsubrs
push
popf
mov
lret
fucom
test
aaa
dec
out
mov
loope
mov
adc
xchg
cmp
add
cmc
add
xchg
out
ds
jecxz
gs
adc
inc
test
jne
int3
mov
in
movsl
pop
mov
mov
push
cmp
jne
lods
mov
sbb
movsb
push
jp
popf
mov
imul
push
xchg
push
sahf
push
dec
jo
test
and
xlat
jno
in
push
lock
xor
imul
das
push
les
data16
inc
fistl
mov
lock
scas
jne
add
xchg
jle
adc
mov
sbb
scas
add
fiaddl
test
negl
mov
pop
pop
fsts
adc
sbb
dec
dec
frstor
ljmp
mov
insb
dec
jo
int3
int3
cmpsb
and
and
out
inc
iret
mov
or
imul
xor
inc
pusha
add
jae
repz
ss
lock
xchg
mov
mov
jg
cwtl
xchg
movsb
sub
push
test
push
aas
pop
sub
sbb
and
add
pcmpgtd
inc
push
adc
jo,pt
dec
inc
shrl
call
mov
pop
roll
jmp
xor
jb
mov
fnsave
arpl
test
dec
std
out
fiaddl
sub
pop
pop
aad
popa
add
xchg
popa
lcall
cmc
jbe
movsb
xchg
outsb
or
or
lret
jecxz
lret
mov
and
xor
xor
xor
cmp
jne
cmp
jne
mov
mov
add
or
mov
or
xor
lea
xor
mov
and
add
mov
xor
xor
div
mov
mov
xor
imul
mov
push
push
jmp
sbb
sbb
jo
xchg
out
mov
jns
sbb
enter
stos
inc
loope
xor
adc
sub
ret
cmp
add
push
sub
sbb
notb
mov
push
je
pmuludq
lea
inc
loop
daa
mov
xlat
fmull
sbb
xor
and
dec
je
mov
jp
sub
out
fs
fdivrs
and
insb
pop
cmp
pop
sub
mov
jecxz
mov
xor
nop
adc
dec
aaa
aaa
push
pop
test
cmp
test
je
fiadds
jmp
mov
push
out
mov
sub
movsl
int3
aas
lea
into
xchg
add
hlt
mov
fcompl
mov
aad
dec
in
push
fistl
imul
ljmp
or
inc
popa
loopne
loope
pop
push
cmp
sub
sti
jae
rcl
in
cld
sub
push
xor
clc
test
mov
ljmp
fildl
int
xlat
adc
jo
jo
pop
lcall
xor
cmp
adc
into
insl
adc
test
popf
shll
ja
sbb
jae
negl
fldl
cmpl
dec
jl
inc
jne
jbe
into
ja
orb
fistl
scas
lock
outsl
movsb
mov
fidivs
popa
imul
outsl
add
je
jg
cmp
and
pop
adc
out
or
cs
std
pushf
leave
lock
iret
dec
jne
cmc
std
mov
sub
out
out
sbb
adc
mov
int
sbbl
shrl
cmpsl
sub
sub
xchg
push
and
hlt
cmp
xchg
arpl
ljmp
mov
daa
movsb
cmp
inc
jg
aad
outsb
xorb
fnclex
popf
xchg
adc
lods
xor
arpl
mov
lahf
fnsave
or
cmpsl
add
jl
push
aas
dec
push
jmp
add
jmp
aad
shll
mov
fs
xchg
inc
cmp
sarb
dec
dec
mov
adc
orb
cmp
xchg
mov
scas
shlb
scas
sub
adc
push
bound
test
lods
ret
mov
mov
and
dec
inc
push
cmp
push
jle
int3
adc
dec
in
jo
test
clc
cmp
insb
and
orl
outsl
aas
jns
loopne
das
mov
add
inc
mov
add
cmpsb
add
inc
bound
and
xor
movsb
or
jp
cmpsb
xor
sbb
daa
xor
pop
jg
fwait
dec
lods
dec
dec
xchg
cmpsl
sti
jl
stos
stc
jle
add
ret
ret
cmp
mov
xchg
cmpl
fs
sbb
imul
fldl
lahf
xchg
mov
mov
shl
mov
sbb
das
xor
test
test
or
ret
je
or
inc
ds
lds
mov
lea
mov
mov
lea
mov
mov
or
xor
div
mov
add
xor
add
mov
add
mov
mov
mov
mov
sub
mov
sbb
mov
xor
mov
xor
jmp
adc
xor
fimuls
sbb
jns
sbb
push
pop
sti
pop
xor
je
loope
lock
dec
jo
movsb
mov
pop
sbb
xchg
jle
decl
inc
js
mov
mov
aas
sbb
daa
mov
mov
adc
cmpb
jbe
stc
and
outsl
test
filds
sub
add
lahf
inc
ja
pop
in
pop
pop
es
fwait
adc
aad
mov
mov
or
add
jno
or
fidivrl
mov
lods
insb
addr16
cs
jg
sti
lcall
daa
popa
hlt
add
sub
inc
aas
cmp
orb
add
cmc
cmp
enter
mov
add
sbb
cmp
test
mov
movsb
nop
cs
inc
call
or
xorb
dec
mov
nop
lock
icebp
adc
test
mov
mov
pop
pop
cwtl
hlt
leave
divb
mov
inc
dec
xchg
loope
cld
mov
xor
mov
into
push
xchg
lods
lea
mov
adc
mov
fcomps
cs
mov
mov
push
inc
cmp
inc
add
dec
add
sbb
clc
jnp
out
int3
sbb
sbb
cmp
inc
loope
jb
pop
push
inc
and
dec
addr16
hlt
mov
mov
push
pop
into
test
sbb
data16
dec
or
subb
in
imul
es
imul
and
mov
push
cmp
iret
lea
mov
ret
scas
mov
lds
push
sarl
lret
inc
mov
aam
cmpsb
jmp
pop
pop
xor
jmp
mov
inc
push
dec
cmp
xchg
lea
push
movsb
in
test
sti
loopne
popa
mov
pop
dec
aas
das
or
xchg
js
xor
jmp
or
arpl
adc
in
cld
decl
pop
jae
js
dec
in
ljmp
sbb
fcoml
repz
pop
negb
fcoml
iret
mov
push
xor
xchg
mov
xchg
mov
xlat
das
dec
in
xchg
push
aas
push
roll
outsl
sub
inc
dec
sub
sub
pop
in
test
int3
mov
jmp
jne
fsub
in
nop
iret
gs
push
fildll
sub
les
jge
jmp
popf
ljmp
std
inc
pop
jle
add
inc
lcall
cmp
lahf
out
popf
repnz
pop
or
or
movsb
das
sbbb
mov
aam
addb
jle
orl
xor
adc
push
outsb
xchg
sub
dec
lods
xchg
incb
cmp
aad
ret
imul
or
mov
int3
add
or
cmp
inc
mov
int3
dec
lock
js
aam
fiadds
push
pop
sti
and
push
push
push
test
idivb
jg
int3
mov
int3
aas
xchg
lods
in
jbe
rorb
add
adc
add
adc
push
push
call
mov
sub
push
pop
sbb
mov
xor
cmp
jne
cmp
jne
mov
mov
add
shr
or
mov
xor
xor
add
mov
jmp
or
hlt
add
fistpl
mov
stos
loope
pop
jo
pop
sbb
jns
sbb
pop
or
adc
ret
push
out
movsb
jae
mov
xchg
push
add
gs
mov
daa
movsb
les
mov
ja
mov
and
aas
or
fstps
movsb
lods
sub
hlt
cmp
repz
testl
push
jp
dec
push
xlat
cwtl
adc
int
adc
in
sub
popa
cmp
dec
xchg
test
gs
pop
add
sub
and
data16
mov
xor
test
push
jmp
and
jle
lods
test
arpl
inc
jne
and
mov
dec
leave
test
jmp
sbb
dec
in
aad
sub
or
movsl
mov
sti
call
sti
or
mov
jl
mov
mov
pop
sub
dec
push
mov
dec
ss
lds
fildl
pop
mov
cmc
dec
jne
ror
subb
les
idivl
out
jecxz
push
mov
ljmp
clc
xchg
jo
xchg
mov
or
popa
xchg
scas
fwait
lds
iret
sub
aaa
pop
dec
mov
cmp
mov
divb
stos
pop
and
inc
xor
mov
ss
and
insl
in
xchg
jecxz
pop
inc
adc
xchg
fnstsw
sbb
push
in
mov
call
enter
sarb
insl
fsubr
mov
out
sbbl
xor
sub
fcom
jnp
scas
jge
sbb
mov
loope
negb
mov
xlat
jb
stos
clc
loope
les
frstor
rcl
cmp
sbb
push
pop
mov
sub
cmpb
cmp
mov
fs
add
cs
mov
out
pop
pop
inc
dec
mov
sub
rcrb
mov
and
mov
or
mov
jo
sub
jp
pusha
sbb
add
sub
inc
and
inc
imul
lret
shrl
rol
dec
imul
sti
push
movsl
ret
andb
cmpl
xor
mov
lds
lds
pusha
loope
mov
pop
adc
xor
cltd
fdivrl
fisubs
pop
leave
xor
loopne
sub
mov
adc
mov
mov
add
in
and
cmc
xlat
pop
xchg
ret
pop
int3
jge
pop
add
mov
jne
cmc
or
test
xchg
sarb
mov
mov
xchg
ret
in
je
cmc
insl
push
data16
pushf
fs
mov
sti
leave
pop
adc
jmp
lock
sbb
bound
add
stos
mov
push
push
scas
daa
lcall
mov
and
adc
or
adc
lcall
jnp
mov
jbe
fldt
sahf
cmp
xchg
outsb
jb
pop
in
push
loop
mov
and
inc
cmp
cmpsl
mov
pop
leave
ret
push
mov
sub
push
push
push
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
adc
mov
push
push
or
or
push
push
call
mov
mov
and
or
mov
mov
and
or
xor
xor
shld
shl
shr
xor
or
or
xor
mov
mov
xor
mov
jmp
aas
cmpl
mov
bound
sbb
sbb
sbb
aaa
xchg
imul
cmp
adc
mov
mov
mov
push
jno
mov
mov
xor
mov
jno
xlat
xlat
xchg
lret
mov
cs
lcall
out
pop
shll
fwait
in
lds
pop
or
pop
insb
mov
ret
fs
xchg
leave
mov
fcoms
loopne
repnz
ss
or
push
lret
aam
xchg
js
push
or
sub
push
and
test
adc
ret
fsubl
movsb
inc
lea
dec
cmp
popf
push
mov
add
loope
mov
jnp
in
int
lds
or
cmp
pusha
shll
adc
out
jns
inc
sub
lahf
mov
pop
mov
push
addr16
xor
js
fwait
pop
dec
jbe
sbb
setg
push
sbb
fadd
mov
popa
fdivs
mov
fildl
jbe
xchg
jl
js
int
int3
mov
cmc
push
out
adc
or
and
push
push
jns
sub
xchg
test
ja
sti
push
arpl
mov
out
mov
cmp
and
inc
mov
mov
aam
lods
rcll
es
jecxz
inc
and
mov
out
xchg
sub
dec
dec
dec
or
inc
mov
jns
jnp
ret
fstpl
popa
test
xchg
rolb
lret
cmpsb
std
or
lret
jge
stos
add
dec
inc
sarb
mov
or
mov
or
push
add
loopne
movsb
sbb
xor
push
mov
vmovmskps
cmp
scas
stc
and
test
in
mov
call
or
or
pop
fmull
outsl
lea
mov
shlb
inc
xor
imul
jne
icebp
iret
and
push
inc
sahf
call
sarl
inc
xchg
loopne
adc
add
xor
inc
pop
inc
xchg
and
inc
out
adc
sub
fsubl
notl
mov
stos
xor
daa
lods
cmp
fnsave
jae
fildll
dec
out
sbb
lods
std
cli
lods
cwtl
js
fbstp
xchg
lahf
pusha
sbb
lds
or
add
mov
pop
dec
mov
std
mov
pop
das
mov
sbb
stos
and
sub
cmp
mov
mov
mov
mov
push
push
push
push
call
add
adc
push
push
push
push
call
mov
mov
mov
xor
xor
xor
add
mov
adc
mov
mov
mov
mov
mov
sub
mov
mov
sbb
mov
sub
mov
sbb
add
mov
adc
push
xor
mov
pop
sub
mov
sub
mov
mov
mov
add
xor
shrd
xor
shl
xor
shr
or
xor
or
mov
push
mov
mov
mov
push
push
push
call
mov
mov
mov
or
mov
or
mov
add
mov
adc
mov
add
mov
adc
add
pop
adc
pop
mov
mov
pop
leave
ret
push
mov
sub
movl
jmp
imul
pop
jbe
mov
imul
testb
xchg
xor
je
aaa
mov
sbb
orb
pop
and
gs
ror
jo
add
pop
cmp
and
push
push
sub
pextrw
das
jge
addr16
dec
cs
mov
push
xchg
adc
sbb
ret
nop
jbe
sub
nop
loop
or
enter
sub
incb
xor
ficoml
in
insb
mov
fcomi
xor
jecxz
and
addr16
mov
sbb
mov
or
lcall
push
fidivs
mov
push
adc
dec
fcomps
xchg
pop
dec
push
dec
mov
mov
ja
stos
push
scas
outsb
or
push
mov
int3
mov
push
lods
cmp
shll
rcl
popf
nop
and
mov
jno
or
int
and
dec
inc
addr16
pop
or
cmpb
pop
push
xchg
cmp
inc
push
test
dec
scas
scas
lahf
add
in
dec
pop
xor
not
shrb
and
in
mov
xor
ret
mov
iret
mov
leave
mov
dec
xor
in
icebp
rcrl
sti
hlt
loope
pop
fisubrl
roll
or
imul
pop
push
repnz
repz
pushf
xor
or
pop
pop
stc
aad
push
das
inc
sub
ljmp
push
in
lahf
scas
push
push
sub
in
sub
sbb
and
adc
daa
push
push
stc
inc
cmp
push
add
cmp
outsl
jnp
and
add
das
dec
ds
in
sarl
xchg
mov
jbe
and
fnstenv
test
xchg
mov
scas
scas
sbb
pop
jecxz
lds
shll
jne
inc
ret
lods
fidivrs
je
shrl
inc
mov
in
jmp
xlat
cltd
ficoms
arpl
dec
xchg
jl
movb
add
fldt
into
data16
sahf
jl
or
in
jge
lds
in
ret
pop
rorl
pop
sti
push
int
negb
mov
es
mov
push
sub
out
cmp
sbb
xchg
adc
lahf
push
ror
mov
pop
xchg
xchg
insb
mov
js
mov
hlt
cmp
pop
push
or
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
and
add
mov
and
mov
sub
and
mov
mov
imul
add
add
xor
cmp
jne
mov
mov
mov
sub
add
mov
or
mov
imul
sub
add
mov
or
mov
mov
add
imul
add
mov
add
mov
mov
mov
and
mov
and
mov
imul
mov
or
mov
imul
mov
sub
cmp
je
mov
jmp
mov
sub
xor
add
jmp
movl
movl
mov
mov
imul
add
and
add
or
sub
leave
ret
push
mov
and
sub
push
push
lea
mov
mov
mov
mov
sub
sbb
mov
orl
orl
lea
push
lea
push
jmp
pushf
cmp
jl
add
sbb
mov
loopne
repnz
xor
dec
enter
loopne
add
push
jne
js
mov
ss
inc
push
push
icebp
fdiv
iret
and
mov
movsb
or
mov
xchg
and
cmpl
fwait
loop
adc
daa
out
mov
dec
call
in
xlat
adc
aam
ret
lods
dec
rcrl
in
fxch
jg
adc
inc
or
inc
cmc
jecxz
mov
aad
lret
adcl
cmpsl
in
dec
sbb
sub
arpl
lock
pusha
shr
jg
movsb
fs
jbe
arpl
xchg
call
push
xlat
xchg
sahf
mov
cwtl
dec
xchg
ret
std
fwait
cmp
int3
xchg
mov
and
fadd
mov
xchg
mov
call
mov
push
out
imul
push
inc
xchg
stos
mov
add
jno
stos
out
out
mov
inc
or
or
int
xchg
fnsave
jecxz,pn
inc
pop
or
mov
int3
jnp
in
in
dec
mov
in
dec
sbb
jo
fnstcw
fwait
ljmp
lods
sbb
insb
les
mov
movsl
fs
test
roll
arpl
add
scas
pop
jnp
or
daa
and
sbb
dec
xchg
in
xchg
push
dec
lret
bound
sbb
mov
enter
xor
xchg
js
aad
sbb
cwtl
jmp
sbb
jle
mov
test
add
pop
mov
sar
dec
ud2
inc
ss
mov
shll
enter
xchg
mov
sahf
add
outsb
adc
xchg
jp
mov
call
pop
lret
aam
cmp
test
mov
repz
and
cmc
adc
lret
push
ljmp
idivb
sar
mov
jbe
in
pop
pop
fimull
aam
cmp
hlt
stos
fcoms
fcom
sub
ljmp
jne
inc
fcmovb
add
das
dec
pop
cwtl
pop
popa
push
enter
xlat
sub
mov
cli
xlat
in
rorl
stos
cmc
lods
jmp
into
icebp
push
cmpb
jno
xlat
iret
repz
int3
andb
lods
push
pop
enter
push
decb
xchg
test
adc
cmp
cs
in
insl
lds
cmpsb
mov
popf
mov
add
push
outsb
imul
inc
test
pop
pop
sbb
push
aam
outsb
test
cmp
push
imul
pmullw
dec
int
mov
scas
fst
shl
inc
mov
inc
xchg
sahf
pop
cs
int
mov
jae
mov
mov
in
das
adc
ljmp
dec
inc
cmpsb
xlat
mov
push
dec
enter
sub
xor
jmp
jecxz
xchg
loopne
dec
jne
loopne
adc
mov
or
cmp
stos
xor
inc
mov
int
sahf
mov
jg
lcall
sub
insb
pop
mov
test
std
int
in
in
adc
or
ret
cli
mov
outsb
arpl
sbb
mov
movsl
pop
inc
add
xchg
shl
andb
in
lahf
sub
xchg
inc
sbb
test
adc
adcb
ret
int3
test
jo
fs
dec
icebp
xchg
call
mov
mov
pushl
mov
pushl
mov
pushl
pushl
pushl
pushl
pushl
call
pop
jmp
roll
andb
sbb
loop
jl
fnstsw
mov
scas
adc
sbb
and
push
jmp
xor
scas
lahf
mov
mov
hlt
test
nop
sahf
decb
rol
mulb
testb
clc
fcoms
in
stc
cmpsl
cld
sub
cmpsb
jae
push
scas
movsb
sub
dec
mov
xchg
sti
pop
mov
in
xchg
xlat
sub
cmp
sbb
lods
popl
sub
enter
loopne
push
mov
adc
rcr
mov
push
xchg
or
xchg
adc
loope
aaa
dec
and
mov
push
cmp
add
sahf
scas
sub
es
lea
out
aam
mov
sti
arpl
lods
inc
lahf
mov
test
sarb
insl
xchg
leave
push
push
lcall
jecxz
jo
std
push
adc
push
ret
ficoms
sahf
daa
in
xlat
fisubs
ret
mov
outsb
ss
jmp
add
int3
xlat
mov
push
jnp
jno
cmp
fs
xor
sub
mov
test
mov
ds
cmc
in
insl
sar
push
inc
out
xchg
cld
in
jnp
rol
call
push
cli
repnz
pop
mov
cmp
out
dec
mov
les
sarb
mov
jecxz
pop
sub
xchg
imul
pop
out
pop
fistl
jo
and
mov
into
cltd
out
and
test
dec
cmp
add
xchg
pop
dec
sub
xchg
push
sti
jge
mov
xchg
pushf
iret
fidivl
rcrb
jne
xchg
cmpsb
jns
outsl
imul
rorb
add
into
cmpsb
push
mov
mov
insl
adc
fsts
shl
inc
dec
jnp
clc
cmp
jle
dec
mov
scas
push
rcrb
mov
push
or
mov
add
inc
out
icebp
push
repnz
jecxz
into
imul
lods
sub
jb
add
add
xor
jmp
mov
call
xchg
roll
lret
shll
movsl
out
push
lret
or
ret
aas
das
mov
call
lods
shr
test
inc
sbb
mov
pop
sahf
rcl
xchg
mov
xor
pop
decb
add
imul
push
or
sti
movsb
ret
clc
push
sub
stos
mov
push
and
cmp
dec
adc
stos
xchg
xchg
lock
lcall
insl
dec
pop
into
cs
jne
lahf
xor
xlat
push
out
pop
inc
jo
and
negl
insl
push
repz
dec
orb
mov
mov
pop
test
cmp
out
roll
adc
negb
xlat
loopne
pop
call
xor
sub
add
ret
jg
dec
mov
mov
incl
inc
scas
mov
inc
adc
inc
mov
cli
mov
ljmp
inc
aam
mov
leave
lret
js
cmovg
sbb
mov
sti
movsb
push
or
es
test
movsb
push
or
adc
pop
sbb
xor
test
jecxz
std
mov
mov
rclb
test
mov
stc
adc
fmuls
int3
push
dec
ret
mov
int
hlt
mov
pop
xchg
insb
sbb
sub
cmp
push
adc
cmp
mov
cmp
bound
int
jbe
arpl
ret
push
mov
sub
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
add
xor
mov
and
imul
xor
push
movl
movl
movl
mov
mov
xor
sub
div
mov
mov
or
xor
mov
sub
mov
mov
mov
mov
mov
mov
mov
mov
imul
and
or
xor
add
mov
mov
sub
add
mov
xor
mov
and
mov
xor
sub
mov
mov
and
lea
mov
shr
or
mov
sub
add
cmp
jbe
pop
leave
ret
push
mov
sub
sub
push
push
push
adc
mov
cmpl
mov
mov
mov
mov
jmp
mov
jne
push
pushl
call
mov
mov
sub
and
and
xor
sbb
add
or
mov
or
shrd
shr
mov
and
mov
xor
mov
add
mov
sbbl
xor
xor
or
mov
add
or
mov
mov
adcl
shl
mov
and
shrd
add
xor
xorl
shr
adcl
mov
mov
xor
or
orl
mov
mov
xorl
mov
sbbl
mov
mov
cmpl
movl
notl
mov
movl
jmp
movl
jl
push
call
sbb
and
xor
xor
sbb
or
sbbl
xor
and
mov
sub
mov
mov
and
mov
dec
mov
cmpl
movl
movl
movl
jmp
movl
movl
jl
push
pushl
pushl
call
and
neg
and
adc
not
sbbl
shl
xor
shld
add
shl
mov
mov
mov
mov
addl
xor
xor
movl
movl
movl
mov
cmp
movl
jne
cmp
movl
je
sbb
mov
movzwl
xor
mov
mov
xor
xorl
shld
addl
shl
xorl
xor
mov
mov
adc
mov
xor
mov
mov
cmp
jne
cmp
jmp
push
inc
shlb
cmp
jo
inc
and
sbb
notb
sbb
cs
and
ja
sub
movsl
rol
aad
nop
sbb
out
rorb
pop
mov
fsub
cld
and
mov
out
ret
xor
in
cmpsb
repnz
xor
mov
and
jle
add
out
fsubs
testl
sbb
lods
fiaddl
je
loop
in
fidivrl
aaa
pop
inc
pusha
fidivl
xchg
gs
jns
loop
call
mov
jmp
hlt
insb
xchg
jne
mov
xchg
cltd
ds
pop
xchg
out
inc
out
std
fildll
sbb
push
inc
lcall
sbb
js
push
dec
dec
or
cld
sbb
fstpt
mov
rol
jle
addr16
fidivrl
xor
fwait
adc
fistpl
xchg
ds
mov
lock
ret
mov
sub
mov
addr16
pop
mov
xor
xchg
adc
push
test
test
adc
jg
les
data16
mov
sahf
dec
sub
aam
push
sub
orl
or
inc
cmp
inc
mov
mov
es
rcll
sub
in
pop
stc
in
cli
fwait
scas
or
add
add
jmp
add
fs
mov
les
sbbb
cmp
sti
ret
mov
cmpsb
scas
xorl
inc
and
nop
sti
adc
or
mov
fwait
fwait
cmp
mov
xchg
sbb
lds
mov
scas
and
xor
lret
jge
out
movsb
or
or
jae
ljmp
mov
xchg
rcrl
adc
andl
add
repz
cmpsl
cmpsb
jae
into
and
mov
jecxz
cwtl
jnp
cmp
rol
jp
aaa
test
loope
out
leave
sub
dec
lcall
orl
mov
cmpl
movl
mov
mov
movzwl
jmp
movl
jle
push
call
mov
mov
sub
add
xor
xor
xor
sub
mov
sbbl
adcl
orl
or
mov
push
cmpl
mov
mov
jmp
mov
mov
jge
push
call
mov
sbb
inc
and
and
orl
and
pop
xor
mov
add
shl
neg
mov
xor
notl
shr
or
mov
or
mov
cmpl
notl
mov
jmp
movl
jge
push
push
call
movzbl
add
mov
andl
andl
mov
sub
sub
inc
mov
adcl
mov
mov
cmpl
mov
movzwl
movl
movl
jmp
mov
movl
jle
pushl
call
or
addl
sub
xor
mov
adc
or
mov
push
cmpl
movl
movl
movl
jmp
movzbl
jle
push
call
orl
and
adc
orl
adc
subl
add
sub
pop
sub
adcl
mov
andl
add
subl
mov
sbbl
lea
addl
mov
xor
add
mov
adc
mov
mov
xor
mov
xor
xorl
xor
shr
orl
shl
incl
or
addl
mov
movzwl
adc
movl
mov
dec
mov
xor
subl
xor
xorl
shr
shl
or
adcl
push
lea
xorl
push
lea
adcl
push
andl
call
mov
mov
mov
xor
mov
xor
cmpl
mov
mov
not
jmp
mov
jne
pushl
push
push
pushl
call
sbb
mov
or
mov
or
inc
xorl
inc
xor
cmpl
mov
mov
movl
jmp
movl
movl
jbe
push
call
adc
add
sub
sbb
orl
sub
shr
movzwl
add
mov
shl
or
subl
push
andl
lea
push
mov
mov
shrd
shr
mov
mov
xor
jmp
rorl
lret
jb
jns
or
jle
cmp
sbb
adc
sbb
cwtl
xchg
orb
gs
data16
add
shll
ret
scas
or
push
xor
stos
add
xor
cld
cmc
sti
iret
sub
sbb
cmpl
imul
pushf
jne
fsubrl
pop
push
in
fildll
andb
jo
test
inc
xchg
xor
or
add
and
sbb
dec
pop
lret
cmpsb
sbb
cs
pop
cmp
inc
ss
pop
arpl
push
or
add
push
cli
pop
pop
pushf
lret
sbbb
or
push
sahf
pushf
sbb
cmpsb
mov
or
test
leave
cmpsb
out
shlb
rcll
cmp
push
fimuls
dec
icebp
mov
xchg
pop
mov
inc
lret
stos
int3
and
cmpsb
in
mov
jecxz
dec
inc
mov
pushf
ljmp
faddl
jbe
adcb
hlt
ljmp
push
pop
out
jmp
push
ds
ss
pop
cwtl
mov
inc
sahf
les
pop
mov
jmp
clc
mov
cmpsl
lahf
mov
inc
shlb
xchg
mov
and
cmp
stc
outsb
or
fsubrs
push
mov
add
pusha
xchg
pop
xlat
jl
test
pop
scas
jbe
sub
pop
add
sbb
and
mov
push
imul
call
es
lods
xor
adc
cltd
adc
sub
push
ja
add
mov
xchg
sti
repnz
add
in
xorl
movsl
and
jg
insb
call
fdivrl
test
inc
push
data16
movsb
mov
jb
bound
xchg
ja
in
lahf
cmc
iret
test
mov
pop
mov
popf
push
pop
aas
mul
pop
imul
sbb
mov
cmpsb
lret
and
imul
inc
or
dec
rcrb
adc
inc
xor
rorb
ret
test
call
mov
mov
xor
xor
shr
shl
or
push
lea
push
mov
mov
shrd
shr
mov
mov
xor
xor
or
lea
push
shl
call
mov
mov
xor
xor
shl
shr
or
push
lea
push
mov
mov
shrd
shr
mov
mov
jmp
dec
shlb
sbb
ds
jns
xor
add
gs
notb
sbb
shrl
ds
push
stos
mov
sbb
inc
rorl
mov
js
push
sbb
xor
sub
mov
ss
cli
jae
fwait
dec
aaa
xor
sub
add
fidivs
push
sbb
jns
xor
sub
jns
faddl
jg
sub
out
xchg
out
lods
adc
mov
lfs
xor
xchg
dec
sub
lret
insl
fsubs
inc
and
xchg
sbb
out
jmp
inc
sahf
daa
fisubs
cs
in
out
xor
sbb
mov
add
jge
and
and
push
mov
cmp
adc
ljmp
add
jmp
loop
jne
mov
jnp
xor
stc
inc
ret
cmp
xor
cs
into
xor
cmp
adc
adc
jbe
jo
fmull
and
lea
lcall
push
das
es
cmpsb
out
push
add
xchg
pop
int3
sbb
ret
aad
arpl
mov
fadd
fnstenv
mov
inc
mov
push
loope
loopne
or
nop
movsb
and
outsb
ffreep
or
aam
pop
sarb
adc
dec
mov
cltd
pop
pop
subb
popf
pop
rorl
mov
ret
sar
outsb
add
cmpsl
imul
lcall
test
fwait
gs
out
jae
test
cmp
pop
movsb
aaa
pushl
outsb
stc
fs
mov
jb
push
jp
pop
pop
and
push
mul
cmp
or
mov
in
push
inc
repz
or
pop
fstpl
cmp
pop
xchg
loop
fdivrs
gs
mov
es
in
das
mov
js
jo
shll
and
add
loop
mov
mov
push
hlt
in
in
roll
xor
or
shl
mov
jmp
in
je
push
fimull
movsl
mov
inc
xor
sbb
adc
sbb
enter
sti
push
push
dec
or
adc
int3
cmp
mov
and
cmc
sub
pop
xchg
pop
lcall
repnz
xchg
push
shll
inc
mov
je
mov
outsl
into
jecxz
mov
push
bound
fisttpl
in
mov
pushf
mov
fsubs
test
test
mov
fsts
dec
pop
push
js
add
das
cmpb
dec
xor
pop
cmp
add
mov
cwtl
mov
xchg
es
bound
mov
imul
push
mov
invd
sub
das
mov
sbb
sub
pop
xchg
push
or
inc
cltd
push
les
loope
sti
movsb
dec
mov
push
lea
xor
xor
fs
dec
sub
and
inc
ficoml
sub
test
add
mov
push
jl
push
stos
pop
lods
xchg
int3
jb
inc
xchg
cmp
jge
dec
mov
mov
sub
push
jg
jb
adc
add
repnz
mov
icebp
insb
mov
mov
push
adc
nop
lock
fmul
mov
pusha
adc
lock
outsl
in
leave
xor
test
int
xor
leave
lods
mov
mov
mov
sbb
cltd
out
mov
cli
stc
xlat
adc
test
sbb
icebp
jge
shlb
xchg
inc
aaa
adc
cmp
lods
mov
or
loope
test
xor
loopne
mov
lods
lods
nop
sub
xor
dec
lcall
mov
add
pop
out
fs
test
and
jae
jo
inc
xchg
xchg
mov
call
insl
lock
adc
adc
jle,pt
and
and
push
adc
lods
roll
shr
mov
mov
xor
xor
or
add
lea
push
shl
call
mov
mov
xor
shl
xor
shr
or
push
lea
push
mov
mov
shrd
shr
mov
mov
xor
shl
mov
xor
or
mov
shrd
shr
mov
mov
xor
xor
or
shl
add
mov
mov
shrd
shr
xor
mov
mov
xor
or
add
lea
push
shl
call
mov
mov
xor
xor
shr
shl
or
mov
lea
push
mov
mov
shrd
shr
mov
mov
xor
xor
or
push
mov
mov
push
pushl
shl
call
lea
push
mov
mov
shrd
shr
mov
mov
xor
xor
or
push
mov
push
pushl
shl
call
mov
mov
mov
mov
mov
mov
rol
mov
xor
cmp
je
mov
mov
xor
test
je
mov
mov
movzbl
sub
mov
rorb
mov
mov
inc
cmp
jb
dec
jne
mov
mov
shrd
shr
mov
mov
xor
xor
or
push
add
push
lea
push
shl
call
mov
mov
shrd
shr
mov
mov
xor
xor
or
add
push
push
mov
shl
mov
shrd
shr
mov
mov
xor
xor
or
add
push
shl
call
push
jmp
fdivrl
sbb
mov
mov
and
sbb
notb
sbb
inc
fistpll
mov
inc
xor
inc
mov
add
xor
pop
xor
or
sub
mov
scas
jne
lcall
ficompl
addr16
ret
sbb
mov
stc
add
cs
mov
sub
stos
jp
add
adc
inc
inc
ds
inc
inc
cmpl
cmp
les
xchg
pusha
mov
inc
mov
lods
es
jne
sub
xchg
repnz
aaa
inc
xor
sub
inc
cltd
push
in
jg
rorl
add
popf
mov
mov
sbb
imul
mov
or
push
loop
mov
xchg
nop
inc
mov
loope
mov
push
pop
mov
inc
rcrb
mov
push
xor
test
lret
jp
adc
int3
imul
xlat
mov
mov
xchg
and
inc
lret
daa
loope
cld
jge
cli
fs
es
xchg
xchg
ljmp
test
ds
fucomip
imul
jnp
push
mov
mov
dec
test
push
mov
outsb
icebp
insb
fwait
push
in
xchg
leave
inc
xor
mov
jl
add
cld
jnp
pop
jnp
mov
push
jbe
and
int3
clc
sahf
sub
push
enter
ljmp
negl
adc
push
xchg
pushf
mov
call
stc
jge
rolb
ja
lret
jmp
iret
mov
add
push
adc
jl
fucomi
add
mov
jle
jp
or
imul
inc
cli
lret
mov
in
add
fistl
mov
out
add
out
sub
jg
stc
mov
lods
fsts
scas
pop
popf
ja
fldenv
cmp
popf
mov
int
insb
push
jecxz
incb
jns
xor
cltd
mov
cmp
in
mov
movsb
push
rcr
lea
push
mov
mov
jmp
aaa
and
dec
mov
push
out
mov
sbb
notb
sbb
add
mov
inc
dec
mov
or
out
dec
push
mov
insb
ret
out
mov
frstor
scas
mov
jmp
mov
fwait
lret
xchg
addl
mov
aaa
repz
aad
mov
mov
cmp
dec
or
ss
jno
cmp
sub
movsl
shl
ficomps
scas
mov
dec
cmpl
xchg
jns
daa
mov
sub
dec
mov
mov
repnz
xor
inc
add
fmul
loop
aas
xchg
cs
push
xchg
push
push
inc
cmp
sub
pop
ja
xor
sbb
je
out
pop
or
mov
and
or
cli
cmp
mov
pop
subb
in
xchg
mov
mov
push
xchg
faddl
repnz
mov
inc
loop
mov
dec
sahf
xchg
xchg
pushf
push
mov
ret
mov
inc
lret
movsb
shrl
mov
mov
fmull
mov
xor
shlb
orb
lret
popf
push
pushf
cmp
enter
inc
push
inc
je
push
push
jns
loopne
inc
insl
inc
mov
jle
push
jbe
sub
push
adc
add
mov
lcall
rorl
mov
sub
mov
inc
mov
pop
xchg
rorl
xchg
add
testl
rcrl
add
clc
int
pop
cmpsb
pusha
clc
jg
sbb
addb
mov
push
es
push
cmp
push
cmp
pusha
xor
sbb
sub
popa
xor
gs
repz
pop
fildll
gs
push
inc
out
or
xorb
cmp
gs
ja
lock
das
push
xor
out
inc
icebp
push
popa
lods
in
lahf
inc
roll
ret
in
or
hlt
mov
shrd
shr
mov
mov
xor
xor
or
add
push
shl
call
mov
mov
shrd
shr
jmp
add
bound
cmp
push
fsub
xchg
mov
fsubl
sbb
notb
sbb
loop
stc
aaa
mov
inc
push
sub
sbb
cld
js
std
ret
adc
jnp
sbb
sbb
lods
lea
sbb
into
mov
insl
outsl
xchg
movmskps
xorl
outsl
shlb
out
out
fmulp
lret
push
sub
loope
sar
lods
mov
cwtl
push
jb
es
lahf
sarl
jle
lcall
pop
jno
dec
cmp
xchg
and
dec
out
subl
inc
and
cmp
xor
push
dec
adc
cmpsb
lahf
jl
popa
stc
outsb
inc
add
push
push
addr16
daa
and
rclb
int3
rorb
xchg
sbb
push
cmp
add
pop
jl
xor
bound
popf
les
pop
mov
inc
imul
xchg
ss
fs
sub
clc
dec
popa
scas
ja
push
mov
dec
sub
lds
inc
stc
mov
or
xchg
and
mov
jno
lock
and
adc
push
push
stos
sub
pop
out
add
lret
std
imul
sahf
mov
clc
inc
jne
and
loope
adcl
pop
test
lcall
aaa
imul
mov
inc
adc
push
mov
mov
int
iret
iret
mov
xor
in
sub
sub
xor
and
jecxz
jns
jg
dec
mov
nop
lret
outsb
jno
insb
add
pslld
pop
popf
sub
gs
and
xlat
pop
xchg
mov
insl
in
cmp
das
in
int3
jge
popf
fmuls
scas
dec
or
imul
mov
dec
test
mov
sbb
insl
sbb
lahf
out
das
dec
lret
jno
cmc
mov
mov
inc
std
lahf
adc
in
add
imul
adc
mov
pop
push
pop
pop
pop
int
test
xorl
imul
dec
adc
xor
pop
shl
or
pop
leave
ret
mov
mov
xorl
or
mov
jne
mov
andl
mul
ret
push
orl
mul
cmpl
movl
movl
mov
jmp
mov
jbe
call
mov
sub
mov
sub
movzwl
or
add
adc
movzbl
or
add
mov
mov
mull
add
mov
mul
add
pop
ret
push
mov
sub
push
push
push
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
xor
div
mov
xor
mov
push
div
mov
xor
xor
sub
mov
lea
mov
mov
sub
xor
mov
xor
or
xor
mov
sub
mov
mov
xor
mov
sub
div
mov
pop
xor
sub
cmp
ja
jmp
mov
movl
movl
movl
movl
mov
mov
mov
sub
imul
xor
xor
div
mov
mov
push
and
mov
sub
sub
mov
jmp
ss
mov
in
movsl
mov
mov
adc
sbb
xor
dec
ret
mov
or
bound
dec
inc
xor
shlb
les
ret
pop
imul
sub
push
inc
popa
mov
in
outsl
push
pop
rcl
in
jo
xchg
loopne
outsb
je
sub
inc
in
aaa
adc
cwtl
scas
ret
pop
mov
pop
jg
loopne
or
sbb
inc
adc
dec
push
andl
mov
fwait
popf
aaa
xchg
insl
pushf
inc
mov
scas
mov
or
push
inc
and
nop
sbb
ds
cltd
ja
sbb
xor
xor
mov
or
loope
js
mov
or
sarl
dec
cmc
ds
and
jecxz
sub
sbb
inc
rcl
mov
lods
cmp
cmpsl
mov
je
adc
jnp
bound
lahf
arpl
pop
mov
mov
xlat
into
cli
push
adc
leave
lahf
mov
cwtl
mov
into
cmpb
inc
cmpsl
mov
jo
and
popa
in
mov
in
mov
in
push
mov
cld
pushl
lea
xor
mov
out
inc
test
lret
jno
push
mov
les
jmp
dec
xchg
sti
or
ret
mov
test
push
popf
jp
sbb
pop
movsb
icebp
ljmp
into
fs
push
cli
cmp
cmp
and
push
ja
addr16
sahf
test
add
push
sub
jle
push
or
lret
testb
ja
cs
data16
adc
insl
xchg
pop
or
pop
lods
push
xchg
psubd
inc
test
mov
mov
or
cmp
lret
mov
in
sti
cmp
push
rorb
xchg
sub
inc
lcall
shrb
xor
cmp
jb
nop
fwait
xchg
xchg
neg
cli
aaa
in
mov
insb
push
mov
sti
cmp
int
int3
out
repnz
call
jns
bound
cmp
repz
mov
dec
dec
jo
sahf
mov
das
mov
lods
sub
lock
aad
pop
jnp
xchg
leave
adc
add
sub
enter
mov
xor
mov
xor
and
add
add
mov
mov
add
mov
xor
jmp
cli
push
test
adc
adc
mov
pop
adc
sbb
in
dec
fists
and
shrl
popa
or
lret
mov
inc
and
fcomi
test
dec
repz
or
sahf
loopne
arpl
ss
xor
xchg
jne
popf
cltd
sbb
ficoml
xor
cmp
lock
in
cld
pusha
popf
ficompl
push
cmpsl
sahf
push
push
ret
pop
jo
xor
shl
dec
xor
mov
fdivrp
inc
std
psubb
or
repnz
lods
push
dec
push
ljmp
popa
mov
negl
jecxz
sub
sub
cmp
dec
inc
fnstcw
arpl
mov
scas
xor
pop
jmp
pop
clc
inc
dec
pushl
das
cmp
lea
aaa
add
xor
dec
pop
inc
lcall
lods
mov
xchg
or
sub
push
add
icebp
cld
into
sti
fisubrs
popa
adc
in
inc
push
shlb
stos
inc
sbb
adc
pop
sbb
xor
adc
inc
cmp
cmpsl
ja
out
mov
pop
cmpl
jmp
and
subl
flds
jns
sub
add
mov
adc
xor
or
sbb
mov
dec
pop
mov
lds
cmp
adc
dec
jmp
mov
movsl
sti
add
xor
jo
cmp
popf
lret
xor
mov
or
push
inc
sbbb
addr16
das
jae
cli
lahf
gs
test
and
mov
mov
leave
imul
fdivp
and
push
popf
hlt
lcall
mov
ljmp
inc
lods
fstpl
mov
and
cmp
in
push
jp
cmpsb
aaa
insb
mov
pop
in
pop
xor
test
cwtl
push
cmp
addr16
test
outsb
mov
cld
mov
out
out
adc
sbb
push
pop
test
imul
mov
dec
jb
sbb
nop
das
sbb
mov
dec
imul
jp
mov
orl
enter
daa
sbb
stos
mov
lahf
les
jl
ds
int3
outsl
cmp
fcoms
push
xchg
cmp
pop
daa
fcomps
ret
popa
add
sub
mov
add
mov
sub
xor
mov
xor
or
xor
mov
sub
mov
mov
mov
xor
xor
sub
div
pop
xor
sub
cmp
jbe
pop
pop
pop
leave
ret
push
mov
and
mov
sub
push
push
push
push
pushl
call
mov
movzwl
push
call
test
jne
movl
xor
movl
jmp
subl
mov
cmpl
not
mov
jmp
not
mov
je
push
push
push
push
push
call
mov
add
movzwl
xor
adc
or
or
xor
cmpl
mov
mov
mov
mov
jmp
mov
movl
ja
push
push
call
add
or
or
mov
mov
sub
add
add
movl
movl
xor
or
sbb
mov
xor
or
adc
mov
orl
xor
xorl
imul
adcl
and
subl
sub
cmpl
movl
movl
movl
jmp
movl
jge
pushl
pushl
push
push
call
andl
add
mov
sbb
sub
and
xor
add
xor
movzbl
adc
xor
mov
add
movl
xor
add
mov
sub
and
movl
movl
sbb
movl
mov
movzwl
sbb
mov
sub
movzbl
or
mov
xorl
and
sbb
jmp
dec
test
and
ljmp
mov
sbb
sbb
adc
sbb
jae
sti
mov
cmp
pop
xchg
scas
jge
mov
inc
fcoml
ds
loope
ret
mov
sarl
mov
or
xchg
lods
les
xchg
mov
stc
ret
cs
decb
xor
lcall
mov
xor
cmp
jne
xchg
or
inc
cltd
lds
mov
push
rcll
inc
mov
stc
inc
inc
in
aas
inc
stos
cmpsl
outsl
pmulhuw
outsl
push
mov
stc
popf
lods
sti
pop
imul
inc
jecxz
loopne
repnz
iret
cmp
cld
lock
mov
out
lret
jns
and
icebp
loopne
mov
arpl
push
out
jp
cwtl
sbb
loopne
jmp
fcmovne
scas
movsl
mov
mov
lea
inc
add
xchg
scas
and
jle
mov
into
pop
daa
dec
popa
int3
ja
cli
fdivrl
stos
sbb
fcomi
jae
jne
stc
inc
scas
cmpsb
pop
mov
out
cmc
stos
adc
fidivs
inc
jp
sub
cld
rcll
jmp
xchg
out
jno
xchg
adc
xlat
insb
fdivrl
ljmp
push
xchg
xchg
mov
lea
dec
cs
cld
insb
cmp
and
and
xchg
aam
mulb
adc
jmp
mov
xor
mov
mov
mov
movsl
dec
insl
movsl
fisubs
roll
push
mov
and
fs
mov
sub
dec
inc
divl
pusha
scas
xchg
mov
insl
mov
pushf
adc
xor
in
mov
push
and
aas
mov
inc
jne
pop
std
out
cmpsl
addb
fdivr
jl
lea
pop
outsb
int
in
frstor
addr16
fstpt
xchg
dec
mov
int3
ljmp
fldl
sarb
pop
push
arpl
inc
inc
pop
stos
loop
cli
add
leave
arpl
cmpsb
add
push
mov
cmp
sbb
add
int
cld
adc
es
inc
mov
mov
pop
push
out
aaa
pop
xchg
int3
test
cmp
addr16
hlt
cmp
enter
cmp
scas
and
hlt
mov
sbb
sbb
test
int
mov
mov
mov
ja
or
pop
fstl
ljmp
scas
shrl
int
std
push
pop
jbe
or
aaa
mov
xor
xchg
into
mov
fwait
or
pop
ljmp
push
xchg
xor
fnstsw
inc
mov
adc
push
or
mov
adcb
cld
sub
stos
aas
inc
shrl
mov
out
enter
adc
add
sbb
jle
inc
ret
xorl
mov
dec
into
icebp
popf
popa
out
mov
cld
cmp
pop
shll
mov
orb
sub
cld
psraw
data16
sti
das
jle
cmp
dec
dec
inc
jae
mov
inc
cmp
emms
mov
aas
out
int
jne
jmp
in
mov
shrb
sbb
loop
dec
cmp
adc
mov
add
xor
sub
imul
movl
mov
movl
cmp
jne
movl
xor
xor
sbb
movl
movl
movl
pushl
mov
or
movl
cmpl
mov
notl
movl
movzwl
jmp
movl
jne
pushl
call
xor
add
mov
sub
orl
mov
mov
adc
movl
movl
movl
sbb
movl
mov
xor
xor
sub
sub
movl
sbb
movl
or
mov
cmpl
movl
mov
jmp
movl
jb
push
call
sbb
add
sbbl
addl
sub
xor
subl
add
mov
notl
imul
movl
or
xor
xor
adcl
pushl
cmpl
movl
mov
mov
jmp
mov
movl
jl
push
push
pushl
call
add
mov
xor
andl
sbb
and
xor
mov
add
push
pop
xor
subl
div
andl
mov
xorl
xor
or
xor
mov
or
sbb
mov
adcl
div
xor
xor
xor
adcl
pushl
sbb
mov
xorl
mov
orl
pushl
movl
add
pushl
imul
pushl
add
mov
adcl
mov
addl
xor
mov
div
and
subl
or
movl
pushl
orl
call
andl
dec
movl
jne
movl
mov
mov
and
mov
mov
andl
movl
adcl
mov
call
mov
mov
sub
xor
lea
subl
mov
add
lea
mov
or
mov
mov
cmpl
mov
mov
jmp
movl
jbe
pushl
push
push
call
sub
or
add
xor
dec
incl
cmpl
movl
movl
movl
jmp
movl
mov
ja
push
pushl
push
pushl
push
push
pushl
push
call
mov
xor
mov
adc
sub
add
adc
mov
sbb
mov
and
mov
cmpl
movl
movl
movl
movl
jmp
mov
mov
ja
push
push
push
push
call
sbb
sub
mov
mov
sub
add
xor
or
add
xor
and
mov
xor
cmpl
not
mov
movl
movl
jmp
mov
movl
je
pushl
pushl
pushl
push
call
neg
add
sbb
xor
movl
and
xor
add
shl
shr
or
mov
cmpl
movzwl
mov
movl
jmp
movl
movl
jae
pushl
push
push
call
movzwl
sub
mov
adc
mov
adc
mov
mov
sub
imul
inc
xorl
and
andl
mov
mov
mov
and
mov
movl
mov
mov
xor
mov
shrd
neg
shr
addl
mov
mov
jmp
push
lcall
lcall
sbb
adc
sbb
cmp
aad
scas
rolb
inc
nop
nop
rorb
xchg
data16
dec
xor
mov
aad
in
js
adc
adc
ret
mov
inc
daa
pop
and
bound
push
psubq
push
std
pop
push
movl
lods
insl
shrb
jl
pop
lods
push
sub
sbb
lea
fcmovnu
pop
shrb
push
inc
cmp
mull
and
pop
dec
pop
icebp
mov
ljmp
xchg
pop
pop
add
adc
dec
subb
xor
aaa
add
mov
insb
mov
xchg
stos
jne
stos
mov
and
mov
mov
xchg
sub
pop
dec
add
xchg
mov
scas
sbb
scas
pop
in
push
xchg
xchg
push
mov
addr16
lock
adc
loop
and
int
cs
mov
xchg
daa
cld
xchg
loope
push
fsubs
ret
pop
into
lods
or
adcb
movsb
aaa
repnz
sbbl
xlat
cs
push
and
sbb
mov
outsl
cmp
push
adc
jno
ja,pn
sbb
jae
mov
out
andnps
pop
ljmp
cmpl
andl
inc
sbb
shll
dec
sbb
lds
jge
mov
adc
adc
cmc
mov
push
ss
mov
scas
push
shll
cmpsb
jbe
loop
adc
push
gs
jmp
sub
daa
sbb
out
loop
clc
jp
lahf
adc
inc
jnp
cmp
dec
popa
sahf
lock
clc
mov
and
and
pushf
lock
mov
je
lret
loop
dec
xor
push
xor
inc
add
fsubs
in
ss
aas
mov
inc
je
fwait
pop
pusha
andl
inc
iret
cmp
rcll
jmp
dec
fcoml
add
nop
arpl
in
mov
jge
and
outsl
scas
jo
sbb
xlat
rorb
scas
stc
jecxz
sbb
push
divb
fucomip
in
push
and
stc
add
aam
dec
sbb
cmc
push
xlat
hlt
push
lahf
adc
das
push
fninit
push
rol
cmpsl
int3
mov
lods
xchg
and
add
aaa
loop
jl
push
mov
push
cmp
push
inc
out
in
fsubl
insl
sub
pop
push
jg
sub
pop
fnsave
test
cmp
mov
lret
sub
xchg
dec
ror
mov
arpl
ret
int
mov
add
pop
into
pop
push
stc
insb
dec
sbb
fwait
push
xchg
fisubs
leave
jecxz
bound
xor
mov
pop
rorl
ret
dec
push
push
fstpl
lcall
repnz
pop
sbb
dec
push
or
int
inc
xchg
cmp
push
dec
dec
xchg
mov
out
mov
mov
in
sub
ds
iret
sbb
daa
cmp
jne
inc
push
xor
incb
lahf
sbbb
in
in
stos
xor
fiadds
lock
or
xor
incl
xor
or
mov
push
pushl
lea
negl
push
andl
shl
call
subl
lea
orl
push
subl
mov
mov
subl
lea
push
mov
orl
lea
mov
xorl
mov
adcl
jmp
imul
inc
push
xor
mov
sbb
sbb
inc
jno
loope
aad
or
std
je
popf
jns
mov
add
test
jns
iret
fistpl
pop
mov
ljmp
sub
mov
cwtl
scas
dec
inc
fninit
mov
lcall
movsb
ss
lds
test
lods
in
cs
cs
ds
xchg
pop
insl
out
or
stc
mov
xchg
pop
or
rorb
test
cmpl
jo
andb
dec
fs
jmp
stos
xlat
fistps
mov
sub
repnz
ljmp
push
jbe
out
xchg
imul
pushf
mov
and
sub
pshufw
js
outsb
iret
dec
and
ja
cmp
mov
cld
notl
fs
jns
call
push
cwtl
gs
hlt
inc
fwait
daa
in
or
jecxz
dec
jmp
out
sbb
imul
jns
sub
notl
jo
int3
push
mov
ret
sbb
idivb
addr16
cmpsb
mov
xchg
fidivrs
sbb
pushf
sbb
mov
mov
int3
or
cmp
jg
jp
jnp
mov
mov
loope
cwtl
cltd
lods
lea
mov
fstpl
fld
std
jb
jae
add
xor
popa
xchg
repz
sbb
adc
inc
sbb
jns
pop
mov
lds
pmaxub
ret
mov
mov
adc
cltd
sub
loopne
cli
mov
test
aad
mov
arpl
adc
sub
cwtl
add
mov
add
mov
ss
jns
ss
dec
push
test
inc
dec
clc
or
lahf
call
xchg
scas
xchg
cmp
or
pop
push
cmc
fs
mov
mov
mov
mov
fucom
inc
pop
stos
push
pop
repnz
lcall
adc
nop
push
repz
jo
dec
js
xor
jmp
mov
add
cld
dec
pop
or
jle
mov
cwtl
aad
test
pop
push
lds
frstor
dec
push
icebp
orb
in
adc
cmp
repnz
pop
stc
sbb
xor
cmp
fsubl
imulb
lods
rorl
in
inc
pushf
aas
pop
pop
mov
mov
xchg
aad
pushf
push
jg
xor
xchg
in
jle
sbb
cmp
scas
and
out
ds
fwait
stc
pop
or
push
je
fsubp
mov
inc
sbb
adc
popf
in
cs
lcall
xchg
loopne
mov
push
ljmp
ret
test
lods
hlt
cli
push
jae
repz
and
stc
fs
xorb
xchg
ficoms
sub
andl
xchg
and
sbb
out
pop
add
dec
inc
or
xchg
pop
clc
cwtl
xor
or
test
movsl
and
int3
cmc
sbb
ret
jg
jp
push
add
ret
pusha
dec
aas
adc
std
cmpsl
in
testb
xchg
sbb
jb
rorl
xor
inc
in
push
dec
mov
xor
push
in
lods
inc
mov
push
nop
or
jae
scas
shlb
mov
subl
jmp
mov
push
in
xor
mov
push
add
sbb
adc
sbb
bound
mov
loope
and
arpl
lods
rcrb
push
fistpl
jo
push
jno,pt
sbb
hlt
push
and
nop
in
jno
mov
pushf
sarl
push
in
jl
inc
shlb
lret
or
push
pop
loopne
jno
leave
and
jns
mov
clc
in
cli
cltd
cmc
in
jno
shlb
dec
hlt
pushf
mov
pop
inc
loope
test
outsb
aas
ss
xchg
ret
add
mov
add
push
mov
pop
xorb
inc
cmp
mov
cmc
dec
in
mov
mov
addl
pop
mov
jo
je
fs
sbb
mov
inc
add
jae
idivb
test
jae
mov
sub
ret
and
hlt
hlt
adc
cmp
mov
and
jmp
enter
fwait
inc
xchg
mov
repnz
mov
into
or
inc
scas
adc
insb
xchg
mov
mov
xchg
pop
rclb
or
push
clc
scas
fsubs
inc
popa
mov
into
int
pop
sbb
push
push
push
imul
push
testl
fs
pop
jl
insl
std
xchg
dec
push
std
and
addr16
push
out
jb
push
ret
arpl
jae
adc
adc
xchg
stos
mov
inc
pop
mov
fisttpll
idivl
arpl
dec
sti
cmp
jbe
xchg
lahf
jbe
lods
cli
out
rcrb
fisttps
adc
int
push
add
gs
push
jmp
fxch
pop
sub
push
dec
aam
pop
outsl
jp
in
sub
aad
cli
ja
pop
cmp
aas
leave
xchg
lods
pop
mov
sti
in
std
lods
mov
jg
push
dec
orl
push
jle
dec
and
xor
incl
jl
dec
lret
xor
into
jbe
add
jbe
pusha
leave
dec
dec
jno
imul
sub
and
clc
mov
lret
xchg
imul
rorl
xor
jnp
sti
pop
pop
cmc
add
dec
and
ret
incb
flds
xchg
and
fsts
mov
rol
jle
mov
orb
inc
inc
mov
xchg
xchg
das
xchg
sbb
or
loope
mov
lds
mov
mov
jmp
enter
shlb
insl
idivl
shl
jno
add
xchg
int3
cmpsl
fcmovne
in
out
and
mov
fadds
cmp
jno
mov
add
fidivrl
mov
stos
out
jmp
mov
push
insb
add
mov
int
jecxz
mov
test
push
mov
rorb
cwtl
aad
ret
dec
rclb
mov
pop
cmc
divl
andb
add
jbe
adc
mov
pop
in
push
pop
pusha
fdivrs
icebp
std
adc
scas
inc
or
scas
inc
mov
inc
movsb
ds
insb
movsb
rcrl
sub
cmp
test
pop
pop
pop
mov
sub
ljmp
loopne
mov
int3
pop
dec
adc
sarb
call
incl
add
inc
add
xorl
push
adcl
pushl
call
mov
mov
and
mov
neg
mov
shr
shl
or
mov
xor
add
sub
or
mov
xor
mov
sbb
lea
mov
xor
lea
sub
mov
mov
sub
mov
sub
mov
mov
xor
lea
movzbl
and
xor
cmpl
movl
not
jmp
mov
movl
jbe
push
call
sbb
add
sbbl
subl
movzbl
sub
mov
movl
sub
movl
movl
subl
movl
cmpl
mov
mov
movl
jmp
mov
jbe
pushl
call
sub
mov
sbb
adc
and
adcl
sbb
xor
mov
mov
xor
mov
movzbl
and
mov
xor
mov
add
movl
adc
subl
xor
cmpl
mov
mov
mov
jmp
movl
je
push
push
push
push
call
inc
and
orl
orl
xor
and
mov
mov
xor
mov
adc
and
mov
adc
movl
adc
movl
cmpl
mov
mov
movl
jmp
mov
jne
pushl
push
call
xor
sbb
sbb
movzwl
or
movl
movl
add
movl
movl
movl
notl
mov
movl
mov
cmpl
notl
movl
jmp
not
jg
pushl
push
pushl
push
push
pushl
call
xor
mov
or
sub
adcl
subl
mov
mov
push
push
or
or
push
push
call
mov
mov
sub
mov
jmp
je
or
pop
pop
mov
cmp
inc
cld
push
sbb
adc
sbb
mov
cs
outsb
and
pop
sti
pusha
push
fs
adc
dec
mov
popl
shll
stos
dec
push
incb
jl
and
inc
sbb
sbb
pusha
mov
xlat
outsl
pop
mov
dec
out
add
cli
jmp
and
and
popf
dec
mov
adc
lret
inc
pop
inc
das
sub
push
jmp
es
imul
aas
inc
rclb
aam
mov
out
mov
adc
int
and
or
stc
pop
cld
fsubp
jl
mov
and
cld
sarl
ljmp
into
arpl
pop
push
mov
inc
test
test
int
pop
shlb
roll
adc
fcomps
fists
test
ret
orb
adc
mov
cld
flds
mov
shufps
xlat
cmpsb
and
xlat
mov
roll
mov
test
pop
incb
xchg
cmp
dec
dec
pop
lods
int3
or
mov
xchg
outsb
into
int3
ret
shr
bound
sub
jmp
dec
mov
loop
rorb
loop
imul
cmp
je
lds
test
pushf
push
adc
jge
hlt
jns
adc
fcmovnb
nop
cmp
mov
mov
pushf
push
dec
pop
and
movsb
enter
add
loop
mov
dec
shr
fnsave
inc
or
jnp
mov
mov
test
inc
and
popa
pop
cmc
xor
rclb
dec
or
pop
test
test
push
mov
pop
mov
adc
push
nop
fmulp
mov
imul
push
xchg
out
pop
mov
mov
jle
rclb
imul
popa
cmp
and
mov
push
inc
lahf
insl
jmp
dec
sbb
pop
andb
xchg
arpl
xchg
or
pop
mov
nop
icebp
add
or
insb
shlb
ret
test
std
mov
push
sub
jae
add
mov
sub
das
test
mov
pop
jae
jge
and
mov
lea
mov
mov
aad
xor
pop
out
cmpsb
aas
jge
dec
and
pop
and
loope
sbb
mov
mov
mov
pop
cmp
jb
mov
or
sub
icebp
je
mov
jmp
mov
mov
stos
dec
adc
sbb
test
fnstenv
stc
inc
pop
imul
call
xlat
mov
lret
sub
movsl
out
insb
add
push
mov
loop
mov
ss
loopne
push
inc
adc
inc
cmp
xchg
adc
xor
cli
jno
mov
add
sbb
orb
punpcklwd
fidivrl
movsb
inc
test
pusha
notl
mov
dec
fbstp
test
mov
mov
lahf
jle
mov
in
out
sbb
mov
mov
dec
inc
xor
rcll
mov
pop
sbb
pop
sub
popf
xchg
loopne
popf
rcll
aaa
inc
sub
xchg
lods
stos
jecxz
mov
xchg
sub
insl
mov
add
loope
xchg
mov
mov
mov
out
inc
sbb
mov
cmp
jne
cmp
je
movl
movl
movl
movl
mov
mov
mov
mov
add
adc
xor
xor
and
mov
and
mov
jmp
and
and
loope
ret
jl
notb
sbb
adc
sbb
loopne
mov
in
lods
lods
inc
adc
add
aad
insl
cs
out
jbe
rolw
ds
call
add
xlat
pop
xchg
jecxz
ret
push
cmc
pop
daa
jmp
jmp
outsl
hlt
xchg
jge
xchg
in
icebp
sub
nop
outsl
mov
testl
aaa
jecxz
lcall
rcrb
push
inc
fcoml
testb
xor
pop
daa
and
test
pop
jg
lret
push
jno
inc
incb
test
cmpsb
xor
push
sbb
jmp
sub
or
or
mov
addb
insl
mov
andb
cmp
mov
call
fwait
les
xlat
jnp
fidivrl
and
pop
xor
repz
arpl
mov
das
imul
adc
pop
pop
ret
pop
mov
mov
and
cmp
lds
call
fisubl
test
add
sub
clc
jle
test
adc
subl
dec
adc
mov
sub
cld
sbb
cmp
adc
into
mov
dec
or
gs
xchg
jne
test
xor
subl
sub
stos
flds
lods
out
data16
fistpll
das
fistpl
pop
sti
adc
mov
pop
xorl
push
stos
push
pop
pop
popf
rcrb
out
cmpsb
ss
outsl
adc
mov
scas
mov
mov
xchg
mov
cmp
push
movsl
adc
mov
fmull
adc
mov
sub
mov
dec
mov
pop
or
jle
jb
xorl
insl
outsb
xor
fdivp
jp
or
divb
pop
add
and
scas
cmp
rcr
les
jno
in
xchg
jmp
cmp
leave
pusha
jae
cmp
cli
sub
xor
adc
add
add
bound
pop
adc
mov
cmp
cli
popa
mov
mov
lcall
cmp
outsb
icebp
add
shll
popf
xor
out
and
cmp
mov
add
xchg
jge
mov
mov
iret
pushf
inc
jge
stos
xor
cli
les
cmp
nop
add
push
lahf
mov
cmp
icebp
test
xchg
jl
and
lcall
pop
xchg
xlat
rorb
cmpsb
sbb
dec
sahf
and
leave
pop
or
notl
nop
add
push
inc
in
pop
aad
xor
push
mov
xchg
xchg
xchg
jbe
xlat
dec
xchg
arpl
int3
add
loop
mov
pop
dec
and
sbb
sbb
ss
stc
lods
lods
xchg
cmp
cld
add
or
push
test
int
pop
xchg
jo
inc
and
inc
mov
add
add
out
test
js
pop
xchg
addr16
jl
or
fistps
dec
cmpsl
movsl
jmp
add
xchg
enter
jge
mov
add
adc
lret
icebp
mov
cmpsb
jl
jg
mov
jb
test
adc
out
ret
and
fs
or
inc
and
sbb
add
inc
and
mov
add
movl
movl
movl
movl
movl
movl
mov
jmp
push
pop
xlat
jns
cmp
mov
std
adc
inc
out
push
sbb
adc
sbb
lods
imull
jp
outsl
xchg
jl
shll
aam
popa
push
imul
lods
xchg
hlt
sub
jno
daa
bound
cld
ljmp
pop
movsb
inc
add
dec
lcall
adc
mov
jb
stos
fiaddl
sub
shll
in
adc
cmpsb
inc
jae
mov
sub
mov
cmc
or
imul
sbb
push
call
mov
shrb
cmpb
pop
cmp
daa
ja
sbb
std
aad
and
lret
inc
cwtl
fimull
xchg
xor
add
xchg
hlt
pop
int
jp
mov
cmc
jmp
jno
sbb
adc
loope
jbe
sbb
jmp
repnz
cwtl
mov
pop
add
cwtl
cmp
cmp
aaa
dec
jne
stos
dec
xchg
add
hlt
cmp
rol
hlt
outsl
rcr
outsb
inc
xchg
pop
call
cmpb
ret
push
not
fistl
dec
push
adc
xchg
mov
notl
arpl
test
movl
add
xchg
stos
mov
jns
mov
dec
andl
jmp
iret
cli
std
call
mov
cmp
mov
push
jmp
lcall
inc
cmp
insb
xchg
add
xchg
lret
cmpb
fsubrl
fnstcw
pop
push
roll
test
or
fidivrl
adc
loope
in
stc
je
adc
inc
mov
mov
sub
stc
insb
pop
rclb
push
adc
xor
rclb
jge
push
lcall
inc
bound
mov
ficoml
hlt
sub
ds
ja
or
push
orb
mov
or
xchg
or
dec
and
lret
pop
je
jmp
hlt
lods
fistpll
or
sub
adc
pop
jle
xor
cmovs
in
aaa
xchg
imul
xor
dec
inc
fwait
les
orl
push
add
data16
clc
daa
pop
test
adc
or
xor
aad
lahf
pushf
addr16
fs
je
cmpl
sub
mov
cli
dec
call
cmp
cwtl
into
sarl
out
xor
and
lods
in
push
pop
push
jp
mov
out
lds
lds
lea
in
jmp
fiadds
cwtl
mov
or
and
sub
sub
roll
inc
enter
int
xchg
sbb
xor
cmp
sti
das
mov
sub
jo
mov
pushf
imul
rclb
mov
cmp
loope
lahf
or
mov
popa
mov
insb
or
pop
fstl
mov
das
inc
pop
arpl
in
addl
sbb
xchg
push
pop
push
icebp
xchg
mov
mov
cli
out
dec
adc
ljmp
jnp
xor
sub
adc
xchg
sbb
dec
or
inc
stos
sub
enter
add
or
das
lahf
mov
int
repnz
pop
jmp
mov
dec
and
push
push
xor
xor
push
push
call
mov
mov
push
push
push
push
call
mov
mov
push
push
push
push
call
mov
mov
add
mov
adc
mov
cmp
jne
cmp
je
mov
mov
xor
shld
shl
jmp
sub
lds
and
ds
jno
stos
xlat
in
jo
jmp
sbb
sub
xor
mov
dec
int3
xchg
in
cwtl
mov
pop
or
loopne
nop
arpl
jnp
mov
or
dec
cmpsb
out
fidivrl
mov
shl
rorb
xor
daa
sub
rcrb
sbb
sbb
rol
in
fwait
mov
jl
jb
pop
jecxz
sub
xorl
sub
data16
mov
mov
iret
lods
inc
js
mov
stos
jle
dec
adc
inc
call
bound
sub
push
xor
xor
sub
jg
test
push
mov
addr16
or
das
sub
xor
xchg
ret
pop
jo
pop
mov
leave
imul
int3
subl
clc
test
push
shll
leave
cmp
icebp
js
enter
fmull
cmp
mov
adc
mov
test
adcl
sub
imul
xchg
pop
std
add
dec
inc
test
add
hlt
mov
addr16
or
pop
and
mov
fstpt
or
sub
xor
pop
repnz
int
pusha
mov
lods
lahf
sub
mov
into
mov
imul
fdivl
test
mov
push
sub
pop
imul
and
sbb
xchg
daa
xchg
sub
cwtl
adc
fsubrs
ljmp
or
hlt
cmp
mov
add
jns
aad
gs
andb
sahf
or
outsb
lods
pop
lahf
sahf
outsb
cmpsl
lods
cmc
mov
jo
xor
sbb
std
sbb
inc
shrb
test
shl
mov
sbb
imul
mov
test
xchg
je
in
nop
pushf
imul
mov
cmp
jmp
je
xchg
data16
neg
mov
xor
pop
ja
rcll
inc
cmp
int3
push
aam
adc
add
xchg
int
push
out
call
popf
insb
sub
in
lds
push
aad
or
push
ret
dec
ss
adc
bound
cmp
push
popa
push
shlb
sahf
iret
dec
sbb
shrl
push
cmp
dec
inc
aaa
pusha
dec
cwtl
mov
xchg
and
test
mov
jne
sahf
push
pop
xchg
xor
out
fwait
aas
jmp
lret
aam
das
insl
push
loope
sbb
std
dec
cmp
jl
mov
lcall
add
mov
jns
outsb
pop
mov
mov
push
pop
shl
imul
cmp
ss
pop
pushl
inc
mov
lea
mov
lds
cld
rorl
and
sbb
call
jp
lods
sub
jge
imul
and
push
adc
jae
add
subb
add
arpl
popa
jmp
mov
stos
dec
dec
inc
sbb
ret
cwtl
push
cs
xchg
loop
nop
pop
lahf
adcl
std
mov
into
pop
mov
int
add
ss
push
aas
call
jne
jns
mov
mov
xor
xor
mov
cmp
jne
cmp
je
mov
cmp
je
mov
mov
xor
xor
shrd
shr
mov
mov
mov
shl
xor
or
xor
mov
mov
or
cltd
cmp
jne
cmp
jne
movl
movl
mov
mov
mov
xor
shld
shl
mov
mov
xor
xor
mov
cmp
jne
cmp
jne
movl
mov
mov
shrd
shr
mov
mov
mov
mov
mov
shl
mov
xor
xor
or
cmp
jne
mov
mov
mov
mov
mov
mov
movzwl
mov
and
mov
or
mov
add
or
mov
mov
mov
jmp
cs
and
push
mov
xor
loope
sbb
adc
sbb
fldcw
mov
mov
push
andb
xchg
mov
add
arpl
sbb
sbb
sahf
aam
jmp
cmpsb
stos
and
cs
sbb
pop
cmpsb
repz
xor
int
idiv
gs
out
jb
inc
jg
add
loope
test
mov
out
mov
xchg
arpl
pop
dec
mov
lcall
xor
sbb
notl
dec
enter
dec
in
add
sbb
push
push
mov
scas
sbb
jle
push
adc
arpl
gs
xchg
pop
mov
stos
filds
mov
fisubrl
mov
out
movsb
int
jg
jne
cwtl
adc
sub
push
imul
mov
stc
ret
mov
inc
scas
mov
mov
xor
jbe,pn
in
push
push
and
xorb
sub
push
cltd
cmp
push
jl
sbb
or
or
fwait
inc
inc
cmova
xchg
stc
adc
pusha
arpl
ret
jecxz
cld
dec
jmp
into
jae
dec
shl
sahf
ja
ret
es
dec
fstpl
cmp
ret
mov
inc
cmp
pop
sub
mov
outsl
cmp
push
mov
filds
lea
fisubrl
jmp
je
jl
aas
or
ja
scas
cmp
lods
jle
enter
inc
sbb
flds
pop
les
inc
enter
or
data16
scas
cmpsl
lret
clc
and
data16
jnp
hlt
push
test
xor
adc
or
scas
and
mov
jge
out
and
dec
adc
fs
subb
sahf
push
test
cmp
leave
push
inc
and
int
sub
fadds
push
and
dec
sbb
push
jbe
je
or
mov
fbstp
lock
mov
xchg
or
cli
mov
sbb
lock
pop
iret
mov
dec
es
lahf
lea
adc
xchg
push
enter
sub
sub
cld
in
insb
dec
fldl
mov
jg
pop
mov
or
inc
adc
mov
in
push
dec
ret
xacquire
pop
loopne
sti
adc
add
test
adc
fisttps
xchg
outsl
sti
push
adc
and
push
jns
fldt
int
inc
push
adc
mov
sub
push
add
jae
int3
push
sbb
mov
in
loope
pop
inc
xchg
mov
add
rcr
fldcw
shll
mov
pop
icebp
ds
jp
inc
dec
xchg
push
cwtl
cmp
loopne
dec
inc
and
aaa
loope
ret
imul
dec
cmp
push
jns
dec
addl
adc
movsl
js
mov
aaa
push
fucomp
call
mov
sub
shll
popf
enter
fcoml
adcl
out
out
ss
push
loop
xchg
mov
cmpsl
pop
rcrl
rcll
mov
and
push
pop
or
jl
fnsave
movsb
hlt
fidivs
clc
or
je
mov
mov
mov
mov
mov
mov
mov
mov
or
mov
or
mov
sub
mov
sub
mov
cmp
jbe
mov
mov
mov
mov
movzwl
mov
or
mov
sub
mov
or
imul
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
sub
mov
xor
mov
imul
mov
and
mov
and
jmp
cmp
cmp
mov
inc
fistl
sbb
adc
sbb
xor
inc
out
dec
idivb
ss
ret
push
pop
xor
out
mov
popf
sbb
cmpsl
in
dec
scas
and
ret
into
jnp
imul
imul
subb
scas
mov
in
lret
or
decb
inc
xor
cmpsl
scas
out
push
insl
sarl
test
shr
jl
sahf
xchg
adc
or
insb
pop
lret
mov
dec
int3
add
mov
jecxz
mov
hlt
das
xor
fdivp
shl
rol
mov
es
ror
jl
ja
nop
cmc
mov
stc
xor
dec
call
xlat
add
hlt
and
jo
sub
movsb
rorb
jae
adc
pop
int3
fcos
pop
int3
incl
sub
mov
sub
push
fwait
push
insb
icebp
jecxz
mov
dec
pop
jno
push
sub
dec
add
mov
out
cmp
ror
add
insb
or
sbb
cmp
sbb
xor
push
nop
in
nop
sub
repz
cmpsb
xchg
jmp
mov
imul
stc
insb
outsl
pop
sub
push
mov
out
int3
mov
fs
xor
dec
mov
sub
cmpsb
jbe
and
cltd
jl
hlt
andb
daa
mov
pop
xchg
dec
xchg
pop
jns
sub
mov
cwtl
sub
iret
jnp
adc
jne
loope
orb
and
mov
mov
cmp
push
add
out
xor
imul
xorb
rorb
rcrl
icebp
adc
sbb
inc
pop
mov
mov
outsb
repnz
les
stc
gs
outsl
mov
jecxz
and
idivl
cltd
popf
das
push
xor
into
cmpsb
jmp
xor
jno
xchg
xchg
add
test
mov
add
add
cmp
js
push
mov
enter
push
sub
adc
add
xchg
out
lea
xor
fstps
lret
leave
add
inc
das
inc
stos
jns
fwait
jge
push
nop
mov
mov
clc
ret
push
push
lcall
sbb
shl
aad
cwtl
sub
stos
lds
in
call
push
gs
push
mov
push
addb
cld
lods
loope
and
add
and
sub
dec
adc
xchg
inc
sbb
aad
repz
aaa
ljmp
arpl
lret
insl
xchg
jbe
and
adc
jecxz
sbb
inc
cmc
rclb
cwtl
daa
cli
xor
hlt
mov
xchg
movsb
iret
add
test
jo
es
arpl
sub
mov
mov
ja
or
inc
cmp
mov
xchg
sub
stos
insl
mov
cmp
mov
xor
mov
push
fs
mov
fsubrs
test
mov
or
xor
adc
dec
mov
lock
cmp
xlat
mov
jo
inc
sub
jb
add
sub
sbb
jmp
out
push
mov
push
push
andb
in
adc
inc
mov
cmp
cmp
ja
mov
mov
shrd
xor
mov
shr
jmp
inc
inc
in
loop
cmp
pop
pop
or
dec
cli
push
stos
inc
rcll
sbb
adc
sbb
rclb
in
fnstcw
inc
or
cmp
scas
test
dec
popa
dec
mov
lahf
dec
out
inc
enter
and
xchg
movsb
cwtl
ret
gs
pop
xchg
push
dec
insb
xchg
sbbl
mov
arpl
fcmovne
cwtl
loope
cmpsb
push
sbb
mov
sbb
jmp
or
or
mov
daa
push
pushf
pop
mov
mov
rcrb
pop
inc
pop
jbe
dec
out
xchg
frstor
out
pop
mov
dec
inc
je
les
inc
xor
jge
test
adc
lock
int
int3
push
cwtl
dec
xlat
xor
mov
cmpsb
ljmp
adc
inc
or
outsl
out
lret
and
test
fiaddl
xchg
jge
and
xchg
int
jnp
dec
and
nop
mov
cmp
mov
xor
movsl
mov
clc
sub
aas
mov
cld
cld
mov
jb
mov
sub
popf
imul
out
sbb
xor
jp
rcpps
add
xor
in
and
mov
sub
xlat
inc
sbb
mov
jle
cmp
jmp
cltd
fisubrl
adc
add
adc
adc
hlt
ror
or
dec
xchg
xor
int3
test
lods
rcrl
mov
jmp
rorb
in
mov
sbb
sub
pop
cltd
sahf
push
test
loope
lds
shl
sti
in
jne
cmp
inc
lea
daa
ljmp
xor
das
mov
std
push
jp
stc
stc
into
dec
cwtl
in
sbb
and
xor
mov
push
or
int3
test
aad
and
scas
outsb
jl
mov
and
outsl
inc
jbe
in
or
inc
xchg
mov
fistl
fsubr
movsb
in
scas
lods
dec
iret
insl
or
inc
sub
xor
mov
xchg
jmp
push
call
sbb
in
andb
xchg
mov
icebp
jle
xor
test
mov
adcb
aam
pop
jmp
arpl
fs
lock
cmp
fstpt
call
pop
rcl
fwait
icebp
in
pop
pushf
jo
dec
push
mov
sbb
mov
cmpsb
and
push
aad
mov
mov
pop
das
jl
cmp
inc
xor
sahf
repnz
mov
out
jnp
out
lds
xor
shrb
inc
out
mov
xor
sub
xchg
in
js
movsb
ret
add
outsl
mov
js
mov
test
cmp
cmp
mov
add
mov
push
mov
or
jns
loop
mov
loopne
ja
dec
test
inc
das
cmp
cmp
enter
dec
imul
jge
repnz
mov
in
jbe
das
and
dec
jo
mov
push
xchg
mov
in
add
outsl
out
iret
jns
fmul
out
sbb
inc
sarl
sub
insb
mov
jle
push
mov
shll
xlat
les
cmp
fidivrs
sbb
pushf
add
add
xor
jb
cmpsb
xchg
sbb
push
mov
jl
int
sbb
adc
sbb
adc
inc
stc
cmp
push
xor
push
int3
adc
push
pusha
mov
pop
loop
mov
xor
and
rcrl
pop
dec
pop
dec
ret
loope
aad
rcrb
jno
adc
pop
jmp
push
pop
mov
enter
pop
dec
in
lea
aam
aad
pop
stos
fwait
hlt
loopne
and
jmp
mov
jmp
cmp
aam
add
rcrl
push
jle
cmc
nop
nop
cli
mov
pop
int
xlat
mov
or
arpl
inc
pop
inc
popf
mov
lret
es
jle
xor
rcrl
ljmp
pop
movd
xchg
loopw
cmc
mov
repz
jge
test
jo
fnstsw
dec
imulb
inc
jge
ficoms
cmc
adc
js
mov
sub
dec
mov
add
cmc
xor
addr16
push
mov
inc
loope
sbb
lret
outsl
or
and
mov
pop
imul
pop
loop
lock
idivl
add
xor
mov
mov
cmp
mov
xor
xchg
lock
or
mov
out
or
cmp
jle
and
cli
jne
adcl
daa
gs
cmp
test
out
jb
add
xor
bswap
dec
frstor
loop
sbb
js
xlat
jecxz
mov
leave
lcall
and
jno,pn
sbb
shlb
fwait
rorl
adc
pop
xor
cmp
mov
outsl
lock
addr16
lds
loopne
dec
pop
lds
imul
stc
cmpsb
aam
xor
lea
shlb
fdivr
sbb
jl
inc
cs
jge
mov
sbb
ret
in
lea
jns
cmp
lds
sub
push
push
repz
add
jge
or
mov
lea
pop
xor
jle
fidivs
cmpsb
cmp
cmp
mov
jecxz
in
and
push
jb
mov
cmp
stc
sbb
cmp
lock
dec
insl
xorb
aas
mov
mov
push
sysret
adc
jns
lahf
cltd
jno
cmp
jae
loope
out
sub
jp
mov
push
cmpsl
pop
lods
ret
aad
cs
pusha
jae
and
or
fwait
sub
ret
ds
push
loope
in
dec
ds
sub
mov
loop
loope
insl
adc
jae
mov
lret
cmp
jo
cmp
adc
insb
pop
sub
mov
inc
rorl
loope
jae
pop
ja
clc
xor
repz
jmp
dec
cmp
addb
jns
adc
in
movsl
cli
xchg
imul
pop
pop
cmpsl
cmp
and
jns
mov
pop
lahf
sbb
add
adc
sub
fiadds
fnstenv
push
push
mov
jne
xor
imul
out
les
idivl
imul
fs
mull
jae
rcrb
dec
pop
cmc
and
out
or
add
pop
cld
jae
jbe
jbe
jns
nop
ja
add
xor
or
push
push
shl
push
lea
push
lea
push
call
pushl
pushl
jmp
xor
fistpll
popf
jo
add
mov
sbb
sbb
stc
mov
notl
mov
ret
push
xor
add
fsubs
push
cmp
xor
in
sbb
add
es
hlt
and
add
les
lahf
or
or
cmc
les
outsb
mov
xchg
cmp
std
mov
push
outsb
lock
in
outsl
push
dec
nop
loope
mov
and
frstor
pop
std
out
ret
imul
xor
sub
jne
bound
aam
mov
std
adc
sub
or
lea
out
xchg
mov
cmp
inc
sbb
fs
cmp
loop
jne
xchg
or
data16
lahf
ret
push
imul
jg
dec
insb
idivb
jnp
in
int3
add
leave
cs
inc
jne
sti
adc
push
cmp
pop
mov
adc
enter
xor
jnp
shll
insb
dec
sub
add
rclb
push
icebp
data16
push
xchg
frstor
jg
push
cltd
out
call
ret
jnp
cmpsl
xor
loop
fsubrl
pop
aad
sarb
cmp
hlt
std
jecxz
in
orb
cmpl
jo
pop
push
inc
std
mulb
call
or
sti
push
ret
pop
cmp
adc
dec
push
pop
fwait
enter
inc
into
loop
cmpsl
push
cmc
pushf
xor
adc
xor
xor
cli
mov
stos
cmp
dec
sub
push
dec
jae
push
out
sti
jle
das
addl
dec
gs
fs
cmp
mov
in
stc
test
xor
and
cmp
cmp
mov
xchg
inc
xchg
dec
xor
sbb
push
subb
iret
in
push
sahf
iret
icebp
in
xlat
jno
cltd
ljmp
sub
cmp
lods
repz
push
cmp
xchg
cmp
inc
es
jp
fxam
mov
popa
ds
rorl
loopne
in
dec
pop
cld
sti
push
jno
int
dec
jno
or
pusha
shll
es
xorl
movups
std
dec
hlt
std
or
enter
jb
sub
mov
ret
test
mov
popa
or
imul
shr
loope
xchg
jle
or
pop
mov
ret
int3
cmp
mov
fstpt
ret
out
cltd
fsubrs
lret
repz
hlt
xchg
xlat
je
fdivrl
mov
outsb
in
adc
std
add
mov
jo
das
arpl
nop
in
dec
fidivrs
xor
dec
add
xchg
jl
add
xor
aaa
xchg
sub
fidivrs
fdivs
aaa
es
sub
out
cmc
push
ret
fld
pop
jb
popf
xor
mov
or
jns
adc
fs
cmp
imul
mov
sub
lcall
data16
mov
mov
push
outsb
dec
inc
jbe
out
jge
incl
push
and
and
jb
leave
inc
mov
stos
aaa
subl
xor
les
or
or
aaa
pop
pop
negb
testb
movsb
jmp
pushl
call
mov
mov
mov
mov
shrd
shr
shl
xor
mov
xor
or
mov
mov
mov
mov
shrd
xor
mov
shl
shr
mov
xor
or
mov
mov
mov
mov
mov
cmp
jne
mov
mov
mov
cmp
jne
movb
movb
movb
movb
mov
mov
or
sub
mov
sub
jmp
jns
imul
pop
notl
mov
sbb
sbb
sbb
mov
jl
add
xchg
inc
dec
es
sub
xchg
fwait
sub
cmp
mov
fwait
mov
in
sti
adc
xchg
adc
jp
movsb
loope
jg
xchg
lods
inc
dec
ret
fldcw
inc
push
out
daa
xchg
repnz
mov
add
add
fwait
sbb
jae
jae
shrl
aas
mov
fcoms
xchg
int
inc
mov
xchg
jns
cld
push
test
int
push
xor
or
mov
add
pop
sbb
lods
out
in
mov
sub
cmp
mov
add
inc
xchg
mov
fimuls
pcmpgtb
push
lret
negb
adcb
cmp
pop
mov
inc
pop
push
incl
xlat
inc
xchg
ds
and
sub
jno
jecxz
cmp
scas
push
xor
test
in
cmp
mov
sub
jp
dec
pop
aaa
shlb
dec
cmp
in
sbbb
int3
mov
push
movsb
xchg
xlat
int
sti
jl
repz
ljmp
or
lods
out
ljmp
dec
cmpl
xor
imul
and
aam
arpl
pop
bound
adc
cmp
and
or
and
pushf
pop
dec
xlat
test
jl
jle
mov
mov
mov
and
inc
inc
mov
int
and
sti
stos
daa
mov
sub
mov
jnp
jecxz
mov
mov
jge
cltd
es
mov
fsubrs
sti
mov
shr
xchg
imul
mov
xchg
out
dec
inc
in
fbld
mov
ss
insl
jo
fcompl
in
push
sbb
add
xor
dec
mov
shrl
and
jg
outsl
xorl
push
mov
shlb
pop
jnp
call
leave
fdivrs
pusha
push
ds
ds
addr16
push
lock
sub
and
repz
and
adc
aad
insb
aaa
adc
dec
sub
lods
cmp
stc
pop
ret
into
imulb
daa
mov
mov
jb
xor
push
mov
sbb
mov
int
or
add
push
mov
inc
xchg
dec
andb
xor
jp
jmp
pop
test
out
cmp
gs
repz
xchg
sub
roll
orl
mov
adc
xchg
add
test
xchg
mov
mov
inc
sub
cmp
sub
ret
inc
lret
jae
iret
jb
xor
cld
jbe
mov
mov
jle
iret
push
test
cmc
xor
lock
sarl
cmp
rclb
cltd
lods
stos
jmp
jg
cmpsb
xor
rorl
in
and
nop
cmp
mov
aaa
push
es
dec
int3
jl
xor
and
sbb
add
out
mov
dec
in
ficoms
shrb
mov
mov
cltd
idiv
movzbl
or
mov
movb
movb
movb
movb
movb
mov
mov
or
and
mov
imul
mov
movzbl
movzbl
and
mov
movzbl
cltd
idiv
mov
cmp
je
lea
push
lea
call
cmp
jne
cmp
jne
jmp
mov
mov
mov
mov
add
adc
mov
mov
jmp
mov
push
push
lea
push
call
mov
push
pushl
lea
push
call
mov
mov
jmp
ss
cs
push
sub
loop
adc
inc
mov
sbb
adc
sbb
ret
sbb
leave
nop
dec
lret
shll
ljmp
into
fdivrl
sbb
lcall
cmc
inc
lret
push
repnz
aad
add
inc
clc
pop
mov
sarb
add
lea
push
jbe
cld
sub
push
mov
adc
xor
sbb
pop
mov
out
xlat
enter
mov
adc
lods
and
loop
inc
icebp
lds
push
arpl
pusha
loop
inc
aas
adc
pop
aas
and
mov
dec
sbb
cmp
xlat
push
divb
fs
mov
in
xor
mov
inc
jge
out
sti
xchg
divb
rcr
adc
xchg
mov
lods
mov
cld
xor
int
dec
loop
repnz
mov
mov
sub
inc
cld
pop
xor
js
sub
dec
cmp
mov
inc
cmp
inc
adc
xor
or
int
jecxz
daa
into
aam
pop
add
sub
lods
cmp
in
dec
js
add
icebp
lods
test
fs
test
fmuls
jle
pop
pushf
push
cmp
jmp
mov
lcall
sbb
jnp
jl
lahf
mov
jmp
loope
in
dec
mov
repnz
dec
cltd
movsb
xchg
jg
adc
jnp
test
sti
aam
cmp
mov
stos
lret
jmp
inc
icebp
sub
loop
jnp
stc
pop
xlat
push
cmp
cmp
adcl
movsl
pop
ret
xorl
or
pop
daa
pop
cld
movsb
popa
lods
push
aaa
das
mov
sbb
or
fcoml
jge
cmpsl
sbb
inc
daa
xor
or
mov
fwait
or
or
cld
push
sub
fsubrl
in
out
es
mull
call
in
or
push
jmp
xchg
enter
and
cmp
mov
cmp
pusha
cmp
mul
fisubl
into
jnp
jl
shrl
xchg
xor
inc
fs
lds
jmp
mov
dec
fsubl
sub
iret
cmp
cmpsl
sbbb
cld
adc
xlat
popa
jle
pop
mov
adc
add
adc
fimull
add
rclb
push
sub
cli
fadd
lret
test
aam
push
adc
jg
das
xchg
push
subl
sbb
ret
shll
mov
loope
add
lahf
sub
sub
mov
test
das
xor
adc
pop
lea
pop
mov
lods
or
add
daa
mov
add
sbb
sbb
adc
lcall
mov
movsb
popa
scas
jp
adc
aas
int
imulb
std
xlat
dec
leave
shrl
inc
imul
or
adc
shrl
push
dec
push
xchg
xor
test
lret
mov
mov
cmp
insl
jbe
mov
lods
xorl
clc
push
ljmp
sbb
sub
push
test
jle
mov
mov
mov
mov
mov
lea
mov
add
movl
movl
mov
and
add
and
jmp
fistpll
jne
sbb
sarl
mov
sbb
adc
sbb
mov
or
sbb
stc
sub
mov
imul
fs
sarl
sbb
pusha
cmpsb
or
jno
mov
mov
and
dec
subb
out
hlt
sub
test
movsb
popl
jmp
mul
loope
cmp
lods
movsb
daa
sub
int
mov
inc
shlb
mov
inc
fidivrs
jmp
and
sbb
and
sarl
shll
push
push
inc
insb
andb
pop
xor
adc
out
addr16
sete
cmpsl
dec
shrb
nop
xchg
lcall
sahf
out
pop
sbb
ljmp
or
jo
pop
lods
push
outsl
pop
lret
fcoms
and
adcb
sarb
sbb
xchg
andl
cli
or
int
das
mov
loope
imul
fucom
and
aaa
mov
inc
adc
jo
xchg
shrl
repnz
xchg
and
add
jge
and
push
cmp
pop
rclb
enter
mov
arpl
dec
jo
jo
jg
paddusw
bound
mov
pushf
fsubrl
bound
popf
and
mov
and
or
outsb
sbb
out
or
push
push
mov
mov
mov
std
cmp
mov
rcrb
mov
add
test
add
lcall
mov
add
sub
push
inc
int3
daa
xor
or
xchg
cmp
das
mov
dec
lods
into
sbb
mov
xlat
jns
leave
sub
orb
pop
faddp
inc
mov
rorl
mov
outsb
inc
cmp
and
fisttpl
pop
cmp
int3
mov
lock
ss
jl
sarl
add
push
sbb
dec
xor
dec
inc
push
push
and
mov
inc
push
stos
fwait
xlat
test
or
sbb
xchg
xorb
fcos
pop
call
cmp
sbb
test
imul
inc
test
xor
test
and
and
xchg
scas
loope
in
jl
sbb
ljmp
sub
and
andl
nop
add
dec
sub
pop
rcll
sahf
pop
ljmp
inc
sti
xchg
inc
adc
aas
repz
sbb
hlt
scas
pop
and
mov
mov
pop
jnp
push
pop
mov
cmp
in
aas
cmpsl
imul
pop
enter
lea
and
rorl
aaa
xor
aam
mov
jbe
out
cwtl
cmpsb
mov
inc
rclb
dec
mov
mov
mov
rcrl
cld
or
repnz
sbb
jae
pop
or
jle
xor
imul
pop
jb
mov
or
dec
push
movsl
dec
jo
push
or
adc
data16
dec
cmp
xchg
pusha
movsl
mov
insl
add
mul
test
outsb
sub
mov
std
cmpsl
ja
les
push
sub
and
mov
movl
mov
mov
or
add
cmp
je
mov
mov
mov
xor
shld
shl
xor
xor
cmp
jne
cmp
je
mov
mov
mov
mov
xor
xor
shr
shl
or
xor
shld
shl
xor
xor
cmp
jne
cmp
je
mov
cltd
mov
mov
cltd
shld
shr
xor
shl
or
or
mov
mov
xor
xor
mov
cmp
jne
cmp
je
pushl
pushl
mov
mov
pushl
mov
call
mov
mov
mov
mov
push
add
push
lea
push
call
mov
mov
pop
pop
pop
mov
pop
ret
push
mov
sub
and
jmp
sub
push
test
sbb
inc
jb
mov
test
sbb
or
xor
or
iret
ret
data16
dec
stos
ja
pop
in
fidivl
mov
xor
sbb
in
sub
ss
mov
lods
add
fildll
lcall
xor
mov
xor
or
lret
add
cmpb
sbb
sbb
data16
aaa
lahf
fbld
sbb
mov
ja
clc
push
pop
mov
test
jbe
xor
je
pushf
dec
mov
mov
lods
xchg
clc
xor
movsb
popf
push
dec
pop
dec
cmp
ficoms
clc
clc
jb
lret
cmp
mov
push
jb
sbb
addr16
push
ret
dec
stos
rorb
dec
or
push
cmp
mov
mov
pusha
std
sarb
xchg
icebp
adc
ret
gs
insb
inc
int
xor
test
push
dec
push
xor
ret
dec
inc
fdivrs
dec
pop
mov
lcall
adc
jmp
jecxz
or
mov
xchg
lcall
and
in
shlb
pop
push
cmp
loop
pop
aad
pop
iret
orl
mov
or
lret
pusha
cmp
dec
mov
pushf
int3
js
mov
and
pop
cmc
mov
adc
sbb
into
iret
or
or
sub
mov
cltd
and
jo
ud0
xchg
mov
out
test
rclb
dec
mov
inc
sub
iret
fsub
sub
inc
out
push
push
lcall
out
cmp
xor
shll
pop
xchg
cmp
int3
lret
movsl
popf
or
scas
and
mov
cwtl
xchg
jnp
jecxz
test
fs
adc
push
or
sub
leave
jb
pop
les
mov
push
jge
sahf
fidivrs
fwait
mov
movsb
out
mov
mov
cmp
std
xchg
movb
pusha
outsl
push
mov
movsb
loop
rclb
out
mov
sub
sarl
dec
cmp
pop
mov
cs
cmc
sub
in
mov
cmpsl
ret
or
pushf
jecxz
je
outsb
cmp
jl
cwtl
lods
clc
ds
jecxz
out
mov
stos
sbb
or
lret
jbe
sti
xor
sub
mov
cmp
sbb
pop
fcomp
int3
pusha
loop
hlt
ret
push
fsubrp
mov
or
out
rolb
scas
fcompl
ja
out
push
mov
pop
mov
lret
mov
push
out
adc
push
roll
cmpsb
rolb
call
fisubrl
inc
xlat
mov
sbb
ds
adc
gs
imul
mov
lcall
lret
es
pop
xchg
sub
ds
and
test
addr16
popf
pop
mov
jg
sub
cs
cwtl
jo
in
mov
movsl
mov
cmp
dec
lock
jl
fsubrl
pop
cmpsl
fucom
sub
sub
lods
out
xlat
and
bndldx
dec
loop
sahf
shl
inc
pushl
jecxz
lahf
insb
pusha
push
fistl
xorl
testl
aas
or
dec
push
neg
push
xor
add
mov
sub
or
movl
or
movl
sbbl
movl
add
mov
mov
movl
xor
div
imul
cmpl
mov
mov
movl
jmp
movl
je
pushl
push
push
push
push
pushl
pushl
call
negl
and
andl
not
sbb
adcl
mov
xor
movzbl
add
and
mov
subl
xor
sbbl
div
cmpl
mov
notl
mov
jmp
movl
jle
pushl
push
pushl
push
push
call
add
movl
xor
add
and
subl
add
sub
cmpl
mov
mov
mov
jmp
movl
je
pushl
push
call
adc
xor
sub
add
mov
mov
and
sub
mov
add
movl
movl
neg
movl
cmpl
not
mov
movl
mov
jmp
movl
jge
push
push
call
negl
mov
mov
sub
and
add
sbb
movzwl
adc
mov
and
add
xor
inc
xor
and
imul
mov
xor
add
adc
and
add
sub
incl
mov
movl
movl
movl
movl
cmpl
mov
movl
mov
jmp
mov
mov
jb
push
pushl
push
pushl
pushl
call
sub
orl
mov
mov
add
mov
mov
sub
or
mov
mov
adc
mov
mov
sub
sub
or
mov
imul
mov
cmpl
notl
mov
notl
mov
jmp
movl
ja
push
push
push
pushl
push
pushl
pushl
call
add
add
negl
mov
sbb
mov
sbb
xor
mov
sub
mov
movzbl
sub
imul
cmpl
not
notl
jmp
movl
not
jne
pushl
call
mov
mov
or
orl
subl
sbb
add
mov
and
mov
xor
imul
cmpl
movl
movl
jmp
movl
movl
jge
call
or
negl
mov
mov
sbb
orl
add
or
mov
and
or
movl
mov
addl
xor
andl
jmp
pop
push
testl
movsl
sbb
sbb
adc
sbb
xor
adc
pop
stos
rolb
subl
mov
iret
push
sub
lea
in
pop
fndisi(8087
jmp
bound
mov
sbb
jae
add
pushf
push
dec
sub
out
xor
cli
sar
push
loopne
jns
push
arpl
mov
movsb
icebp
aaa
xlat
jg
clc
add
adc
sbb
cwtl
adcl
dec
shll
dec
scas
fstpt
pop
inc
ljmp
or
mov
andb
jg
xchg
pop
or
inc
leave
fsubrl
push
jp
or
dec
pop
inc
xchg
xchg
mov
cmp
and
pop
mov
fidivrl
sahf
into
aam
mov
sbb
repnz
xor
lea
rol
sub
mov
nop
lretw
fidivl
xchg
push
mov
sbb
call
in
test
cs
jnp
and
pop
loopne
leave
mov
or
mov
in
loopne
fwait
or
mov
jb
sarl
jo
cmpsl
add
cli
popf
inc
insl
jnp
outsb
call
insb
decl
mov
mov
pop
jge
out
mov
pop
push
das
cli
push
add
xchg
ljmp
and
lahf
fmulp
lea
pop
or
cmp
cwtl
stos
push
leave
ret
add
repnz
push
mov
jae
dec
xor
sahf
sbb
inc
lcall
scas
imull
inc
mov
sbb
add
aad
dec
xor
jle
aas
fcoms
dec
hlt
adc
xor
pop
lcall
icebp
icebp
inc
leave
jp
imul
scas
decb
mov
out
cmpsl
mov
mov
jae
sbb
xor
push
ret
push
lock
mov
rcl
xlat
test
dec
lahf
cmp
aad
inc
fdivrs
fstpl
repz
push
mov
setbe
je
pop
fcmove
sub
pop
pop
xchg
push
pushf
mov
out
mov
dec
ret
or
add
out
pop
jns
adc
shr
idivb
jne
mov
leave
rcl
xchg
mov
pusha
mov
cmp
sbb
or
add
add
and
pop
ret
loop
sub
push
andb
sub
aad
das
out
xchg
mov
mov
and
cwtl
inc
lock
dec
jns
mov
scas
jo
ret
sub
movb
imul
mov
rcrb
mov
mov
scas
inc
test
repnz
mov
insb
clc
lcall
cmc
push
shl
fsubrs
sub
dec
fsubr
inc
push
cmp
orb
cmpsl
mov
rcrb
or
add
xchg
ds
add
lds
xorb
fs
mov
push
and
sbb
ss
mov
cmp
push
xchg
popf
call
cmc
push
repz
and
xchg
mov
jg
fisubs
je
mov
mov
andl
lea
mov
add
mov
mov
and
movl
subl
movl
movl
andl
mov
cmpl
mov
mov
jmp
movl
je
push
pushl
push
pushl
call
not
dec
sub
inc
adc
and
movzwl
sub
mov
xor
mov
or
xor
add
subl
mov
or
add
xor
xor
or
adc
mov
mov
mov
sub
sub
movl
movl
adc
movl
mov
cmpl
movl
mov
mov
movl
jmp
mov
jae
pushl
pushl
push
push
push
call
mov
add
add
adcl
decl
addl
sbb
orl
mov
or
add
cmpl
movl
movl
jmp
movl
jl
pushl
call
adcl
xor
xor
add
mov
adcl
sbb
movzwl
or
adc
xor
cmpl
movl
mov
jmp
movl
jae
push
pushl
call
xor
or
adc
mov
sub
movzwl
sub
mov
sbbl
addl
adc
mov
sub
xor
mov
lea
cmpl
mov
mov
jmp
movl
jg
pushl
push
pushl
call
xor
mov
or
mov
add
xor
add
add
and
or
dec
sub
not
mov
movl
movl
cmpl
mov
mov
jmp
mov
jl
pushl
pushl
push
call
add
or
or
and
mov
sbb
and
add
mov
and
add
sub
imul
mov
sbb
mov
imul
xor
mov
xor
mov
mov
div
andl
sub
movzbl
sub
mov
xor
movl
cmpl
movl
movl
mov
mov
jmp
movl
jne
pushl
push
push
push
push
call
xor
dec
add
xorl
add
subl
sub
movl
movl
cmpl
mov
mov
movl
movl
jmp
mov
movl
jle
pushl
push
push
call
add
xorl
or
movl
or
mov
cmpl
mov
mov
jmp
movl
movl
jbe
push
call
dec
add
movl
sbb
and
subl
mov
xor
sbbl
div
orl
imul
sub
add
or
mov
addl
xor
xor
mov
div
xor
movzbl
and
mov
cmpl
mov
mov
mov
jmp
movl
jne
push
call
orl
or
adc
andl
subl
subl
add
mov
mov
sub
and
movl
sbbl
movl
neg
movl
subl
mov
mov
sub
add
shr
sbb
sub
cmpl
movl
movl
movl
jmp
mov
jl
push
push
push
call
orl
xor
sub
addl
adcl
sbbl
mov
subl
imul
or
mov
and
adc
mov
subl
sub
movl
mov
cmpl
mov
movl
movzwl
jmp
movl
jle
pushl
push
push
call
and
or
mov
add
and
adc
movl
cmpl
movl
mov
jmp
mov
mov
jbe
pushl
pushl
push
call
mov
adc
sub
mov
and
mov
and
sub
movzbl
adc
movl
mov
sbb
or
mov
or
sub
sub
mov
movzwl
sbb
movl
movl
mov
mov
sub
or
movl
movl
inc
movl
movl
adc
movl
mov
and
mov
and
add
cmpl
movl
movl
mov
mov
jmp
movl
jbe
push
push
pushl
call
andl
mov
or
xorl
subl
add
dec
mov
add
movzwl
xor
mov
subl
sub
cmpl
mov
movl
mov
jmp
mov
mov
jae
push
push
push
pushl
call
movzbl
or
sbb
or
xor
sbb
or
xorl
movzwl
xor
mov
mov
imul
imul
and
mov
or
cmpl
mov
mov
not
jmp
movl
jl
push
push
pushl
push
call
or
mov
xor
mov
andl
or
mov
mov
and
mov
or
mov
add
xor
add
add
mov
mov
movl
lea
orl
push
xorl
call
adc
mov
adc
mov
sub
jmp
scas
dec
jb
pop
and
push
xchg
sbb
adc
sbb
movsb
cmp
xchg
aad
test
sub
je
dec
jns
xor
push
mov
xchg
insb
mov
xchg
das
inc
xchg
int3
test
adcb
sbb
xor
mov
inc
mov
mov
in
jb
in
icebp
mov
adc
jbe
mov
lods
fcompl
mov
pop
mov
dec
in
bound
lock
xor
mov
ss
lret
mov
leave
bound
inc
pop
aam
sbb
or
mov
scas
mov
mov
adc
mov
jecxz
popf
mov
pop
jo
dec
out
mov
xchg
iret
mov
xchg
bound
ret
pusha
mov
pop
pop
cwtl
sub
xor
out
ret
pushf
mov
push
adc
in
outsl
xchg
stos
ljmp
test
push
xor
in
dec
mov
mov
sub
aas
sbb
push
insb
adc
adc
cmc
mov
repnz
loopne
jg
adc
ret
jle
and
int3
cmp
adc
add
fiaddl
and
iret
cmp
pop
arpl
out
mov
jmp
mov
mov
xlat
sti
jle
xor
sbb
pop
and
mov
daa
mov
cmp
pushw
cmp
dec
out
inc
scas
sub
xlat
faddl
stos
xlat
sbb
shrl
scas
fsubrs
cmp
mov
orl
pop
adc
fistps
xchg
adcb
push
mov
or
push
fnstenv
mulb
pmaxsw
pop
in
jbe
add
les
push
ss
out
push
test
inc
push
movsb
int3
add
mov
adc
pusha
shll
or
mov
decb
cmp
and
shl
or
sbb
mov
ss
xor
mov
push
out
outsb
xchg
cmp
jmp
cmpsb
mov
dec
in
push
clc
movsl
sti
nop
in
pop
hlt
movsb
loope
push
dec
xchg
cmp
sub
pop
adc
xorl
stc
jecxz
aaa
push
jns
aas
ret
imul
sbb
or
pop
adc
dec
ficompl
cltd
xchg
cmp
xor
gs
fwait
cmp
mov
mov
out
insl
cmp
push
out
pop
sarb
jo
arpl
leave
mov
push
roll
aaa
xchg
sbb
test
jo
mov
jl
jge
and
inc
inc
aas
pop
cmovge
jb
cli
dec
in
es
xor
ret
loop
test
enter
xor
dec
insl
sti
js
sub
jle
xchg
std
in
das
outsl
fcmove
ljmp
int
call
andl
scas
inc
cmp
inc
aas
adc
jbe
jle
mov
or
and
add
icebp
jbe
cmp
xchg
out
adc
in
aad
sbb
cli
mov
or
inc
cltd
addb
mov
in
cmpsb
pop
pop
out
mov
hlt
frstor
mov
int
and
mov
sub
mov
imul
cmpl
movl
not
movl
jmp
movl
movl
jg
push
push
call
sub
add
xor
mov
and
or
add
sub
add
sbb
and
sub
xor
mov
andl
div
not
xor
add
mov
movl
dec
movl
movl
and
movl
cmpl
not
mov
jmp
movl
jae
push
call
not
orl
dec
sub
xor
movl
movl
mov
mov
sub
xor
movl
sbbl
movl
sub
movl
xorl
movl
movl
movl
mov
mov
cmpl
mov
not
not
jmp
movl
movl
jge
push
call
or
sub
xor
xor
add
add
add
and
mov
or
cmpl
mov
mov
jmp
movl
ja
pushl
push
pushl
pushl
pushl
push
push
call
mov
adc
mov
movzbl
xor
and
xor
or
xor
add
sub
xor
mov
mov
adc
mov
and
sbb
sub
sub
cmpl
movzwl
mov
jmp
mov
jg
push
call
mov
mov
sbb
adc
dec
sbbl
imul
mov
cmpl
movl
mov
mov
jmp
movl
jle
pushl
call
adc
mov
add
sub
addl
xor
add
sbb
mov
adc
lea
addl
mov
and
mov
adc
mov
mov
mov
xor
mov
xor
add
andl
mov
xor
lea
add
and
cmpl
movl
mov
movl
mov
jmp
movl
jge
push
push
call
and
or
xorl
add
mov
orl
sub
add
mov
movl
jmp
fidivrs
cli
sbb
dec
push
sbb
fs
push
sbb
adc
sbb
std
jge
jae
xchg
repz
adc
repnz
xchg
cmpsb
pop
sbb
pop
loope
aad
test
xchg
ss
xchg
push
in
pop
aas
iret
add
js
push
mov
jge
jbe
loope
dec
sbb
cmc
xchg
jp
mov
fisubl
data16
mov
test
test
mov
lds
out
or
rorl
cmp
mov
int3
adc
fwait
sub
mov
mov
lds
sub
sbb
shlb
out
jo
adc
mov
push
fists
cmp
pop
dec
call
or
stos
movsb
add
loope
sub
inc
push
mov
jmp
sub
aas
mov
mov
xchg
cmp
add
das
scas
mov
in
aam
inc
or
sahf
lcall
lods
or
sbb
cmp
adc
mov
cmpb
push
push
in
das
popf
dec
add
gs
mov
jbe
adc
mov
adcb
inc
xor
nop
push
adc
jge
or
jl
cmp
pop
sub
leave
mov
outsb
xchg
scas
repnz
lret
in
cs
xchg
shl
scas
addl
or
adc
pop
or
or
xor
inc
push
xchg
push
sub
lcall
repnz
cmpl
fsubl
cmp
das
repz
push
xchg
dec
push
out
addr16
cmp
arpl
jmp
mov
sub
xor
scas
mov
xor
in
mov
jae
xchg
sub
aaa
lock
fcoml
cs
adc
pop
lcall
negb
dec
jb
sub
ljmp
test
into
mov
and
push
jmp
testb
mov
fs
jno
jecxz
lock
sub
add
pop
out
fimuls
push
lds
or
cmp
imul
ja
lds
add
mov
fistps
test
shrb
fwait
adc
in
pop
push
repz
push
xchg
out
mov
jmp
or
sub
mov
jecxz
push
loopne
adc
test
push
adc
mov
dec
iret
fdiv
mov
cltd
pop
cmp
sti
cmp
pop
call
push
xor
sub
pop
pushf
dec
je
jne
addl
movsl
fsubr
inc
lret
inc
divps
test
jl
dec
jle
in
repz
out
push
sahf
sahf
lcall
sbb
mov
hlt
push
sarl
not
stos
mov
fisttps
xor
or
jge
loopne
add
fwait
add
push
aaa
push
bound
stc
push
xor
pop
movsb
daa
movsl
mov
push
popf
out
pop
ljmp
cli
xlat
adc
pop
call
mov
sub
cltd
iret
sbb
test
scas
sub
bound
gs
enter
jge
movsl
daa
lock
mov
out
insb
out
inc
movl
movl
movl
mov
mov
mov
xor
xor
mov
call
mov
mov
mov
jmp
movsb
add
sub
movsb
jp
int3
push
stos
push
adc
push
sbb
adc
sbb
out
mov
js
lcall
dec
dec
mov
xchg
add
scas
push
inc
or
add
pop
test
imul
cltd
mov
jns
cwtl
mov
pushf
xchg
leave
xor
scas
adcl
pop
add
in
xor
in
lcall
and
cmp
sbb
adc
xchg
pop
jecxz
mov
cwtl
lcall
xchg
adc
mov
jecxz
xchg
jno
push
fildll
stos
dec
sub
push
fs
sub
push
out
xor
sbb
aam
call
dec
fwait
mov
test
rcrb
xchg
ret
mov
pop
add
ds
xor
cmp
jae
inc
and
cmpsb
lods
add
add
aad
add
popa
in
shll
jge
mov
pop
lret
stos
mov
out
ljmp
mov
dec
cmp
mov
mov
into
cli
mov
lds
mov
popa
add
or
add
jno
out
fdiv
call
pop
cmc
jns
jmp
int3
fidivs
sub
xchg
and
repz
ja
inc
pop
jo
scas
mov
mov
adc
cmp
aam
pop
subb
adc
xor
mov
pushf
lcall
test
shl
cmp
dec
ljmp
mov
in
mov
mov
cwtl
int3
cmp
call
jp
jnp
push
and
mov
push
fistpl
xor
lret
sub
pop
xchg
in
xor
xor
pop
mov
cmpsl
icebp
pop
dec
add
mov
sub
push
xchg
jbe
cmp
and
pushf
push
jmp
and
jae
and
fwait
fs
jp
cmc
pop
ss
or
inc
or
add
lret
into
getsec
mov
mov
call
mov
xor
mov
aaa
sbb
leave
push
fldl
test
pop
cmp
adc
jns
pusha
aaa
push
stos
push
lods
and
pop
imulb
pop
loopne
cmp
inc
aas
cmp
pop
notb
mov
sbb
inc
cli
aaa
mov
mov
sub
addr16
and
loopne
bound
pusha
repnz
test
jecxz
push
push
lods
jne
adcl
or
mov
xor
sub
cs
sahf
lea
mov
jbe
incb
lock
mov
dec
xchg
imul
mov
lock
or
xor
mov
mov
test
popa
filds
cmpsb
mov
add
sbb
gs
add
inc
jp
push
mov
add
stos
repz
cld
mov
lea
shl
mov
cwtl
stos
mov
int3
sub
fmull
cltd
mov
sub
mov
xchg
mov
xor
test
push
mov
and
cmc
aam
popf
add
repnz
or
jmp
mov
jne
test
popf
insb
out
les
xchg
mov
pushl
xor
mov
call
or
or
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
mov
mov
mov
mov
call
mov
or
mov
or
push
push
push
push
jmp
loopne
add
sbb
fcomps
pushf
xchg
js
push
sbb
adc
sbb
imul
rclb
dec
les
mov
sbb
push
fisttpl
xchg
and
or
leave
out
popl
push
and
imul
jns
push
add
pop
lods
pop
daa
adc
mov
mov
fldt
or
imul
push
ljmp
or
repz
ss
push
jecxz
push
or
insb
jae
lcall
adc
out
xor
and
add
add
hlt
stos
movsl
push
xor
mov
in
dec
mov
lods
movsl
push
stos
cmp
jne
pop
mov
add
outsb
pusha
or
repz
push
ja
loopne
fstpl
lods
mov
test
xchg
sub
xor
or
cld
stos
hlt
jle
cmp
dec
pop
aad
push
cmp
dec
jg
mov
sub
jo
xchg
jae
xlat
in
xchg
fcom
lcall
jl
mov
cli
and
cmp
gs
push
mov
sbb
loopne
hlt
adc
mov
test
sbb
popa
push
ret
mov
and
mov
push
out
push
ja
int
and
ja
repz
popa
mov
cli
int3
fucomi
jbe
sub
xchg
stos
ret
jno
xchg
push
xor
fimull
es
sub
push
sbb
jle
fmull
jmp
mov
xchg
push
movl
iret
shlb
sub
lret
mov
push
mov
mov
ret
sbb
mov
and
lret
pop
cs
out
lods
int3
xor
push
fadds
icebp
sbb
in
arpl
inc
cmp
je
js
nop
fsubrl
pop
push
test
out
jo
test
xchg
mov
movsb
push
mov
ret
xchg
xlat
or
dec
out
push
push
or
pop
les
dec
dec
ss
ror
in
scas
loop
cld
fcmovbe
lods
xor
fsubp
cmp
stos
jmp
cmpsb
jbe
aas
cmp
mov
sbb
sub
rcll
loopne
imul
out
aaa
fs
arpl
lea
sbb
cmpsl
mov
stos
sub
out
mov
mov
adc
pop
loope
mov
aas
mov
push
jns
push
adc
mov
or
push
lods
clc
xor
and
into
or
fcomp
fadds
jecxz
cmp
xor
and
mov
mov
pusha
pop
cmc
or
mov
inc
adc
push
xlat
cpuid
mov
pop
mov
je
icebp
mov
push
das
inc
sub
xchg
sbb
aam
fs
and
pop
adc
cs
rcll
cmp
loop
pop
sahf
imulb
lret
jp
into
pop
sub
js
mov
out
xchg
fldl
dec
jg
mov
dec
inc
psubb
iret
movsb
mov
adc
lea
xor
xor
stos
jno
jbe
cmpsl
mov
dec
jmp
push
mov
jl
mov
xchg
jno
ljmp
xor
sub
leave
xor
ret
pop
sub
mov
sbb
pusha
aam
das
sub
mov
mov
and
pop
jge
decl
cmp
jne
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
mov
mov
jmp
adc
pop
out
loop
loope
add
lret
jo
jg
sbb
adc
sbb
lods
xchg
mov
mov
xchg
test
lcall
push
sbb
adc
les
lods
loop
xor
pop
mov
adc
sbbl
stos
cld
sbb
xchg
sub
sub
lcall
lea
pop
xor
ljmp
sahf
icebp
popf
hlt
cmpsl
ljmp
or
mov
sahf
xor
loopne
cmc
shrl
cltd
ljmp
push
jo
int3
xchg
add
cmp
inc
lods
cmp
outsl
jns
ds
out
leave
out
inc
out
scas
inc
xchg
xchg
sbb
mov
xor
filds
clc
push
bound
js
stos
dec
test
loop
daa
das
icebp
stos
sbb
jge
xchg
test
lahf
scas
rcll
test
scas
mov
rcrl
sub
lret
repz
xchg
mov
sub
xchg
cli
sbb
gs
pop
push
sti
pop
jecxz
scas
pop
fdiv
lcall
cs
xor
cmp
cmp
ret
int
insb
push
adc
rep
push
loopne
mov
fwait
pop
xchg
pop
in
adc
xchg
test
push
lods
sub
fisubrl
cmp
adc
popa
sub
jecxz
push
cwtl
mov
inc
es
insl
fsubrp
or
and
push
mov
stc
test
insl
pop
outsb
sub
sahf
movsb
inc
scas
dec
insb
mov
mov
sbb
inc
dec
fsubl
hlt
pop
push
xor
test
ljmp
mov
icebp
xchg
mov
jns
add
jmp
shr
fcompl
sub
dec
mov
push
test
je
adc
imul
mov
negb
sbb
test
push
cli
sbb
pop
hlt
movb
clc
popl
dec
lock
ror
test
push
dec
fcmovbe
data16
inc
sbb
cmpsb
sbb
or
shr
sbb
fs
rcrl
pusha
js
out
mov
popf
ljmp
or
dec
mov
mov
jmp
sti
xchg
lret
in
addr16
pop
jecxz
movsb
lea
cwtl
jnp
out
int3
or
lock
ds
addr16
cs
xchg
mov
or
add
push
push
dec
dec
xlat
aad
movsl
aad
cmp
es
add
std
sbb
dec
adc
jmp
inc
jbe
loop
xor
mov
pop
and
mov
call
loop
test
loop
mov
sbb
lahf
lods
jb
and
stos
test
aad
pop
jp
or
lcall
fsubr
sbb
test
pop
gs
data16
out
jl
mov
push
push
movsl
negl
out
jecxz
sbb
xchg
loope
jbe
cld
add
popa
dec
jg
xor
bound
pop
cmpl
pushf
add
in
cmp
push
and
sbbl
mov
mov
test
sti
pop
sbb
popf
xchg
dec
outsl
jmp
cmp
pop
mov
nop
lds
fsts
or
lods
dec
push
call
or
mov
or
push
push
push
push
call
mov
jmp
jmp
lea
mov
mov
movl
mov
xor
shr
mov
xor
shl
or
mov
mov
mov
jmp
mov
xor
sub
jmp
mov
jns
sbb
adc
sbb
pop
cbtw
popa
add
pop
sbb
pushf
out
stos
mov
idiv
xchg
pop
inc
xchg
mov
es
gs
cmp
cmp
negb
sbb
test
xor
fisttps
lods
xchg
iret
shl
popf
aaa
out
pop
cmp
int3
sub
jmp
mov
lret
xchg
std
sub
xchg
pop
sti
mov
push
in
push
push
lea
push
into
xor
ret
ja
inc
nop
stos
jns
mov
sbb
xor
jb
out
mov
mov
push
pop
daa
xchg
js
roll
xchg
inc
add
cmpsb
leave
push
cmc
clc
xlat
lret
push
rcrl
in
cli
jle
inc
test
or
cli
movsb
cwtl
mov
mov
orb
test
jecxz
xlat
adc
pop
or
push
call
xchg
jne
aam
mov
outsl
dec
pop
cmp
in
jne
rorl
les
mov
xrelease
push
cmc
cmp
nop
push
out
and
push
int3
sbb
pop
mov
sbb
mov
lds
bound
lods
in
imul
pop
pusha
jg
rol
mov
xchg
sarl
sar
mov
imul
or
mov
insl
jmp
bound
lock
add
sbb
inc
and
xorl
fistpl
int
push
jle
mov
mov
ja
inc
aad
fmul
and
repz
jmp
leave
mov
ja
roll
pop
aaa
les
push
cmp
fndisi(8087
mov
cmp
xchg
pushf
scas
pop
imul
jle
dec
jmp
mov
sbb
adc
lahf
outsb
out
mov
or
sbb
gs
xchg
or
repz
sbb
xchg
popf
pop
adc
xchg
cltd
addl
arpl
cmp
mov
loop
dec
mov
ds
std
test
ljmp
bound
xor
add
repnz
push
pop
rcrl
jb
or
das
xchg
sub
into
push
imul
jnp
out
testl
push
mov
xor
pusha
sbb
fisttpl
pop
dec
adc
into
aam
push
ja
xor
pop
mov
mov
or
bound
mov
push
arpl
mov
ret
js
xorb
cld
movsl
sti
shrb
out
icebp
push
dec
mov
cmp
jl
xchg
insb
popf
mov
xor
aam
hlt
cli
add
and
jb
out
sti
or
dec
and
mov
mov
sbb
sbb
jg
cmp
lret
test
mov
push
mov
jl
and
inc
push
adc
imul
xchg
add
xor
lret
push
das
out
out
inc
jl
arpl
mov
cmpsl
dec
ret
dec
out
push
sub
fstl
mov
cmc
dec
push
movsl
stos
inc
lret
dec
test
pop
or
jae
jmp
movsl
and
inc
cmp
andl
addl
mov
mov
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
jmp
jb
adc
or
xor
shll
and
sbb
adc
sbb
mov
cmp
in
jge
mov
mov
xor
push
outsb
dec
jo
jge
ficomps
xor
xchg
add
xchg
push
or
mov
inc
xchg
sub
pop
movsb
or
es
and
sub
aas
xchg
ror
mov
ror
lds
mov
xlat
xchg
jae
add
mov
mov
repnz
repnz
xchg
mov
sbb
sarl
aaa
lods
ficompl
or
mov
jae
mov
repnz
inc
out
out
sti
pop
cld
mov
leave
pop
xor
out
mov
jb
gs
push
jb
ret
inc
call
addr16
mov
outsl
push
inc
test
pop
fisubl
sbb
mov
mov
hlt
shlb
nop
scas
sti
fcmovbe
jo
out
jo
cmc
mov
xor
cs
hlt
and
xchg
mov
daa
sub
sbb
loop
notl
sub
mov
mov
pop
fadds
out
push
mov
lds
shll
push
and
cmp
jge
adc
bound
mov
mov
add
pusha
idivb
push
or
cmpsl
push
idivb
ror
add
in
popf
sbb
clc
data16
mov
inc
xor
out
mov
pop
lds
ljmp
jmp
clc
mov
cmp
pop
dec
inc
outsl
or
jno
pushf
mov
int3
pop
outsb
test
enter
call
cli
push
or
lret
jge
push
cmc
sub
scas
and
jbe
xlat
ret
jno
mov
xor
push
repnz
out
cmp
and
insb
loopne
mov
dec
cmc
popa
jp
push
cs
fbstp
jp
mov
in
xor
pop
mov
xchg
inc
push
inc
dec
or
xlat
dec
dec
out
shrb
pop
test
outsb
sbb
mov
fwait
pop
cmpsb
push
insl
sbb
fidivrs
jl
fs
movhlps
pop
enter
test
sti
inc
pop
mov
hlt
les
rcl
pop
add
in
add
out
stos
aam
push
inc
add
int3
add
arpl
in
ja
movl
repnz
int
mov
inc
push
mov
mov
dec
sahf
mov
push
clc
imul
push
or
mov
jns
cmpsl
test
sbb
test
add
hlt
lods
fildll
jno
cmp
icebp
stos
sbb
lahf
push
es
cmp
insl
sti
sbb
dec
aad
mov
xor
mov
data16
inc
test
adc
nop
sub
jmp
lds
add
sub
addr16
imul
mov
in
sub
and
inc
lcall
bound
movsb
insl
xchg
arpl
and
push
scas
arpl
iret
pop
pop
dec
adc
lods
aaa
test
rcll
dec
psllw
jns
sbb
insl
xchg
jae
jmp
daa
out
xchg
add
add
clc
repz
lahf
dec
sahf
bound
push
mov
movsb
add
jle
stc
lcall
inc
pop
aam
js
mov
mov
mov
mov
call
mov
or
mov
or
push
push
push
push
call
mov
cmp
je
jmp
add
jp
add
pop
cmpl
sbb
adc
sbb
fisubrs
mov
cvttps2pi
dec
icebp
cmp
fcomps
add
cld
pop
ds
fldt
idivb
push
add
call
mov
cs
cmp
xor
mov
cmpb
rcrb
mov
bound
int
inc
test
xor
imul
testl
stc
jae
lds
sbbl
hlt
bound
mov
mov
call
shld
orb
pusha
bound
fnsave
pop
mov
sbb
hlt
ja
push
or
push
cmpsl
fimull
rolb
push
inc
sbb
es
adc
push
pop
push
jmp
add
sub
adc
inc
filds
xchg
mov
inc
push
cli
aam
fwait
icebp
scas
ret
out
leave
jmp
pop
or
mov
sbb
adc
cmc
lret
mov
adc
add
shrl
add
aam
ds
mov
dec
loope
repz
push
mov
cs
movsb
xchg
jecxz
test
or
pop
mov
in
inc
push
sub
cmp
sbbl
bound
ljmp
daa
repnz
loop
incb
pop
repnz
in
shrl
and
mov
adc
lahf
je
pushf
adc
mov
push
mov
cwtl
ss
or
push
jnp
add
int3
std
sahf
cld
cmp
lock
mov
inc
sub
stos
aad
out
cli
xchg
push
mov
mov
cmp
sbb
repnz
add
and
push
mov
inc
push
sarb
loopne
add
gs
push
jae
cmpsb
lds
movsl
xchg
xlat
lea
fs
jns
jmp
lret
popf
mov
and
sbb
test
add
and
jne
and
adcb
leave
xor
rolb
xchg
dec
pop
je
sbb
and
fsubs
mov
and
xor
pushf
ja
push
mov
fwait
pop
adc
lcall
mov
js
jbe
add
std
sahf
cmp
outsb
test
xor
ja
cltd
into
fcoms
pop
sti
lods
ds
movl
inc
xlat
in
push
les
dec
jmp
inc
sbb
ret
xor
fimuls
pusha
popl
lahf
jmp
lods
lret
lods
leave
aas
pop
adc
bound
dec
and
stos
outsl
mov
cmpsl
jmp
outsb
movsl
das
xlat
fdivl
cmpsl
inc
ljmp
pop
xchg
in
cmp
xchg
dec
mov
sbb
icebp
inc
mov
jns
pop
push
mov
icebp
mov
lock
fisubrl
icebp
or
push
data16
and
fbstp
nop
lea
stc
mov
das
sub
shll
add
xor
ljmp
push
pop
or
and
notl
jl,pt
pop
pop
mov
sar
dec
imul
lea
loop
and
rcr
sbbl
mov
push
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
jmp
loopne
xchg
es
sbb
xchg
jo
arpl
sbb
adc
sbb
in
and
cltd
adcl
xchg
xor
add
pop
sub
adcb
call
cmpsb
mov
mov
push
inc
xchg
or
mov
enter
lcall
sarl
push
push
jnp
push
add
icebp
ljmp
mov
daa
sbb
mov
stos
lahf
xchg
subl
ja
or
lock
sub
xor
inc
andb
lret
call
popf
xor
fildll
add
scas
filds
ss
loopne
decb
ret
inc
dec
notl
aad
outsb
sar
sbbb
lahf
mov
out
dec
xchg
jnp
mov
fnstenv
outsb
inc
mov
sbb
xchg
cli
mov
ret
outsl
mov
pop
in
movsb
loop
scas
mov
ret
shll
sub
push
jae
fisttpl
pop
adc
fbld
std
and
fsubrs
lret
add
add
sub
or
adc
cmpsb
lock
inc
shlb
aaa
xchg
inc
or
jg
jle
into
pop
sub
scas
out
mov
inc
pop
mov
add
pop
mov
stc
push
mov
adc
xchg
ja
in
jge
adc
outsl
mov
testb
fimuls
mov
nop
fcoms
loop
push
push
mov
adc
je
pop
mov
pop
mov
pushl
dec
fisttps
inc
hlt
adcb
mov
jmp
and
sbb
sub
jae
imul
lret
lret
lods
imul
clc
aaa
mov
push
push
xchg
inc
sbb
outsb
or
scas
or
xchg
lcall
adc
xchg
xor
roll
xchg
enter
nop
or
data16
pop
sub
insl
adc
or
jo
cmpl
xchg
outsl
push
ljmp
aad
pop
sti
out
pop
sub
fcmovnbe
loopnew
rcll
mov
aas
cmpsl
ret
out
mov
push
ret
xchg
test
mov
ja
push
loop
ret
lods
sbb
and
push
sub
jg
clc
pop
pushl
enter
add
dec
out
dec
sbb
gs
clc
push
mov
std
or
in
jecxz
or
mov
ret
outsl
decb
mov
sub
ss
mov
mov
push
cltd
pop
push
cmp
xchg
xchg
ret
pop
push
aaa
jbe
sbb
inc
aaa
cmpl
cli
out
imull
shll
icebp
loopne
out
cltd
pop
fdivrl
and
loop
push
icebp
sub
pusha
xchg
mov
sub
xchg
cmpsl
lret
mov
mov
sub
sti
test
rcrb
mov
adc
mov
xchg
or
inc
pop
lahf
fistl
xchg
or
and
push
push
sar
mov
out
inc
push
test
ljmp
mov
loop
sbb
repnz
adc
cwtl
and
sbb
mov
popa
shrb
add
repz
inc
int
push
popf
shlb
push
aam
in
insb
mov
push
or
or
or
mov
imul
add
mov
mov
mov
jmp
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
xor
jmp
pop
scas
push
sub
push
ja
fstpt
int
jl
pop
push
sbb
adc
sbb
in
inc
movsl
hlt
loope
mov
mov
das
cs
movsb
shl
add
jb
dec
or
hlt
test
xchg
imul
sub
inc
scas
les
aam
cmc
mov
add
sbb
mov
pushaw
xorl
jbe
or
mov
mov
in
add
in
sbb
loope
iret
fidivrs
inc
push
popl
inc
rorb
ja
or
mov
leave
mov
cli
sarl
mov
adc
or
pusha
mov
fistpl
sarb
pop
jo
daa
pop
mov
insb
mov
rcrb
mov
inc
out
or
daa
or
out
jne
push
js
jbe
loop
add
adc
add
inc
decl
add
test
bound
sub
push
cli
les
idiv
rcr
fisttpl
mov
sub
sti
add
pop
sbb
mov
push
xor
dec
aas
xchg
or
mov
lea
xor
cmpsl
sub
adcl
bound
xor
jmp
mov
jbe
xor
pop
pop
sub
ljmp
sub
cs
dec
jge
push
scas
mov
jmp
inc
push
inc
movsl
jae
sub
pop
push
sbb
bound
add
adc
sub
test
jb
cs
stos
out
push
lock
pop
lret
sti
xchg
inc
xor
dec
dec
sub
push
test
nop
je
jl
jne
sti
jbe
xor
add
jle
je
icebp
sbb
push
pop
adcb
and
mov
and
iret
lret
sub
xchg
js
mov
fstl
mov
lret
jle
push
add
and
add
mov
pop
loop
addl
jp
xor
cld
aaa
adc
mov
inc
cli
mov
push
lea
mov
testb
out
lahf
test
lds
lock
ret
sarb
or
pop
ja
aad
scas
daa
and
test
out
clc
adc
addr16
jp
cld
fsubrl
ds
adc
xor
pop
add
hlt
and
dec
xchg
cli
test
test
into
lret
cld
loop
sbb
pop
cmp
faddl
scas
push
adc
pusha
test
jae
xchg
pop
mov
sahf
adc
add
test
fwait
in
js
aad
pop
pop
pop
push
in
ret
xchg
xchg
int3
fs
mov
dec
push
sbb
cli
pop
and
loope
cmp
je
pusha
mov
push
dec
loop
cmp
xchg
or
lcall
enter
sub
sbb
mov
sub
xor
dec
movswl
push
sub
shlb
scas
test
dec
stos
and
jne
int
stc
sub
pusha
mov
push
push
inc
jecxz
divb
xchg
lods
jmp
sub
add
xor
xor
push
push
out
pop
dec
lods
or
das
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
mov
mov
call
or
mov
or
push
push
push
push
call
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
mov
xor
div
mov
and
add
mov
lea
xor
add
mov
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
jmp
shrl
into
and
fwait
outsb
mov
adc
jle
push
push
sbb
adc
sbb
sub
testb
push
dec
sub
sbb
jns
cmpl
pop
push
pop
imul
jmp
cs
adc
ja
cltd
sbbl
or
loope
sbb
or
mov
enter
data16
jg
xchg
mov
add
push
dec
xchg
push
fsts
es
daa
push
div
jle
add
call
insl
adc
cmp
push
cmpsb
cmp
test
or
icebp
arpl
dec
xor
sub
lret
dec
imul
fdivs
subl
or
add
mov
testb
stos
xchg
dec
test
fucomp
scas
jb
cld
sbb
ds
push
xor
mov
or
in
cmpsb
mov
lcall
scas
push
inc
jo
fwait
orl
push
add
repz
push
imul
ret
mov
jp
test
sub
adcl
push
and
mov
test
das
ret
add
add
mov
pop
mov
sub
loopne
and
mov
lret
adc
mov
imul
pop
cmp
int
mov
push
mov
rclb
loope
add
pop
xor
mov
add
jle
stos
mov
adc
xchg
dec
adc
out
mov
nop
sub
dec
pop
out
ja
mov
popf
pop
sub
pop
hlt
xchg
mov
loop
pop
dec
xchg
add
cltd
jno
test
inc
xlat
shl
ret
cmp
jmp
add
aaa
test
sbb
popa
sub
cwtl
push
mov
mov
jnp
stos
pop
xor
and
test
movsl
adc
add
mov
aad
cmp
das
bswap
dec
or
sub
sub
mov
enter
test
sbb
inc
inc
xchg
data16
pop
mov
arpl
cmp
repz
and
inc
or
arpl
mov
popf
jg
pop
or
fcmove
xchg
ljmp
mov
test
mov
adc
sub
iret
add
pop
or
nop
test
jge
cwtl
je
pop
xlat
pop
cwtl
or
fnstenv
sbb
mov
xchg
pusha
stc
jae
into
cmp
sahf
mov
fcompl
adc
dec
stc
xlat
jl
mov
rclb
orb
cli
rcll
mov
adc
mov
out
xchg
daa
movl
pop
in
fistpll
imul
mov
pop
jbe
mov
pop
push
insl
shlb
test
lock
or
lret
add
cli
dec
gs
popf
sahf
jo
pop
jae
imul
rcll
inc
clc
mov
inc
push
adc
jb
jbe
inc
test
std
insl
add
mov
out
bound
cmp
dec
mov
cld
dec
out
inc
push
dec
push
jle
sub
div
stos
pop
loop
nop
popf
inc
jo
xorl
cmpsb
leave
jmp
add
mov
and
xor
add
mov
mov
sub
mov
or
mov
and
mov
xor
mov
mov
sub
mov
imul
xor
xor
mov
mov
add
add
mov
movl
movl
movl
movl
movl
movl
mov
xor
mov
imul
mov
lea
mov
and
and
xor
push
pop
div
imul
mov
and
mov
or
add
imul
mov
xor
xor
mov
mov
add
add
jmp
arpl
bound
aam
push
jle
mov
push
sbb
adc
sbb
aaa
aad
es
sbb
orb
push
push
mov
mull
loope
das
mov
or
je
mov
call
imul
cmp
mov
inc
push
sub
and
hlt
or
es
fdivl
leave
mov
sbb
jbe
jne
push
mov
fwait
sub
int
test
cmpb
xchg
jo
mov
jb
add
aam
imul
push
and
imul
cmpsl
pop
xchg
loope
in
mov
lret
inc
pop
inc
aam
sub
jo
out
sbb
movsl
push
dec
pop
dec
dec
xor
out
push
xor
mov
sbb
inc
sbb
outsb
pop
inc
xchg
push
fidivs
sub
pop
sbbb
in
push
mov
sbb
inc
test
sarl
nop
test
jo
jns
pop
dec
lods
aas
dec
in
popa
into
hlt
test
dec
std
xor
movsb
scas
stc
adc
xor
shll
mov
insl
mov
pop
push
sub
aad
add
in
pop
jno
sub
stc
xor
subb
bound
inc
lods
jl
fidivs
push
inc
shll
mov
movsb
lods
idivl
jmp
xchg
mov
push
lret
sti
fistps
sbb
jl
jne
scas
sub
inc
dec
loop
shll
pop
je
cmp
test
lret
jl
lcall
sbb
lcall
xor
sub
push
lds
xor
pop
aam
ret
rcl
inc
xchg
inc
push
lret
dec
rol
out
sbb
jp
movsb
and
fiaddl
mov
out
fwait
pop
lret
loop
jp
cmp
xor
fcoms
jl
inc
jecxz
in
insb
shll
ja
enter
loopne
push
hlt
add
flds
mov
jg
inc
xchg
rolb
mov
daa
ficomps
loop
push
test
sub
stos
cmp
enter
aam
data16
jnp
sub
adc
pop
das
sub
jo
insb
push
adc
adc
push
xchg
xchg
mov
fldt
in
std
test
pop
fcmovbe
push
fnstenv
aad
pop
xor
pop
scas
movsb
push
call
ret
xlat
test
sbb
iret
xorb
addr16
cmp
push
std
nop
stos
dec
ja
sarb
inc
pop
mov
push
xchg
add
sbb
cmc
sub
adc
pop
sub
fwait
mov
pop
dec
push
iret
jns
mov
cs
cmc
sub
xor
popa
mov
dec
or
incb
cwtl
mov
rcrl
aad
or
fsubrs
or
inc
xor
cmp
mov
rclb
mov
mov
push
dec
push
dec
add
out
and
cmp
fisttpl
outsl
jne
cmp
xor
xor
pop
es
or
cmp
xor
rclb
aam
out
fwait
pop
shll
rcrb
jg
mov
jbe
bnd
std
mov
movl
jmp
int3
insb
fwait
jo
push
cmp
ret
lahf
jo
cmp
mov
and
sbb
mov
cmpsl
clc
incb
es
int3
push
sbb
shlb
repnz
je
add
mov
push
pop
mull
xchg
inc
cltd
jmp
nop
jb
jp
add
inc
subl
lds
mov
scas
cmp
cli
jo
or
lds
sbb
add
ret
lahf
mov
jmp
loopne
pop
xchg
into
fnstsw
xchg
jg
sbb
xchg
dec
les
jp
cmp
jl
lods
jmp
pop
mov
xchg
xchg
movsb
arpl
mov
pop
and
lret
sbb
add
ret
test
sub
wrmsr
lods
dec
dec
add
mov
jnp
and
mov
mov
mov
cs
bound
mov
or
lret
pop
call
xorb
ss
xor
shrb
incl
loope
lcall
mov
fnstsw
adc
movsl
xlat
xor
xchg
xlat
and
test
inc
xchg
dec
loope
and
sbb
xor
inc
out
scas
jp
int3
fwait
dec
pop
fbld
mov
or
mov
pop
and
lcall
daa
push
adc
ljmp
sub
xlat
sbb
loope
add
fxch
cmp
lock
push
in
enter
sbb
mov
push
push
inc
pop
xor
xor
jmp
add
stos
pop
gs
stos
dec
sbb
cmp
mov
cld
sarb
jg
or
lahf
dec
add
enter
pop
xlat
aaa
sti
mov
mov
cwtl
scas
jbe
pop
ret
xchg
push
xchg
stc
pop
inc
pop
mov
sub
fcomps
mov
aad
aad
mov
pusha
dec
ljmp
fbld
cmc
push
mov
push
imul
dec
jmp
pop
psubsb
or
cltd
push
push
dec
mov
lret
aad
movsb
push
xchg
and
mov
frstor
push
hlt
lahf
insl
inc
fimuls
mov
orl
mov
xor
mov
mov
mov
push
popa
mov
push
icebp
in
jbe
or
dec
das
xlat
stos
push
fcmovu
out
loop
xlat
addb
mov
aaa
sub
jp
inc
loop
das
mov
cmpb
rcl
push
mov
push
les
cltd
and
push
sti
jle
add
jnp
insl
inc
iret
adc
push
sbb
cmp
aaa
ja
pop
daa
hlt
movsb
inc
enter
insb
cltd
flds
jl
add
inc
iret
in
sbbb
aaa
mov
out
adc
push
enter
cs
data16
in
mov
outsb
xchg
movsl
shlb
adc
subl
insb
dec
ds
dec
mov
mov
dec
mov
pop
jne
mov
int3
and
xor
push
imul
cmp
scas
dec
into
sar
lock
inc
in
repz
sub
adc
jecxz
push
ljmp
adc
dec
push
je
mov
outsl
pop
mov
jle
push
loopne
ret
inc
rcrb
xchg
out
das
ds
loopne
movsl
cld
stos
ret
cwtl
movl
movl
movl
movl
jmp
jecxz
xchg
sbb
sbb
ret
movsl
mov
faddl
sbb
adc
sbb
cmpsb
mov
xchg
cmp
sbb
cmovb
adc
cmp
dec
or
push
mov
cmp
mov
xlat
mov
push
std
jle
cmpsb
xor
sub
jg
in
or
out
push
inc
cwtl
mov
mov
loope
into
dec
push
jp
pop
adc
jge
ret
xor
aaa
add
and
xchg
dec
loope
fwait
jmp
test
fdivl
cmpsl
dec
mov
mov
cmp
mov
jmp
push
jbe
add
mov
sti
pop
or
cwtl
push
test
leave
loop
xchg
mov
mov
clc
push
push
inc
std
push
and
insb
and
cmp
pop
sbb
xchg
ret
inc
insb
fisttpl
test
pop
and
jge
mov
mov
xchg
mov
loopne
xchg
into
cmp
sarl
ret
aas
lods
jmp
xchg
call
xchg
stos
rorb
daa
cli
test
mov
sub
js
xor
popf
stos
adc
jo
cwtl
xor
aam
xchg
lcall
jo
lock
xchg
movsb
jbe
sub
pop
jb
xchg
mov
mov
fdivs
xchg
jns
xor
mov
sub
out
out
xor
sub
mov
pop
push
mov
sub
data16
mov
notb
adc
push
iret
or
mov
pop
sbb
cli
adc
xor
fs
test
mov
lods
insb
add
xor
cmpsw
lcall
mov
loopne
in
cmpsb
dec
mov
out
sahf
and
pop
mov
and
jg
push
adc
leave
and
fmulp
cld
mov
jmp
cmp
mov
jnp
fdiv
or
xor
and
notl
data16
sub
pushl
dec
shll
dec
cld
stos
pop
decl
sahf
jb
adc
addr16
mov
and
cwtl
in
mov
cld
sarl
jnp
pop
int
cs
stos
shrl
sbb
adc
push
lret
ficomps
mov
push
inc
fistpll
imul
adc
pop
xor
pop
loope
fisubl
dec
jne
imul
sti
shrl
cmp
int
xor
roll
push
jne
push
out
in
push
in
daa
test
mov
jge
in
or
add
sbb
inc
idivl
loop
pop
add
xor
cmp
mov
pop
lods
repnz
movsb
les
test
cmp
test
aas
adc
aam
ja
jne
arpl
daa
sbb
cltd
stos
test
xchg
mov
out
or
pop
sub
les
dec
sbb
xchg
xchg
jnp
inc
insb
movl
fwait
xchg
jg
xchg
xor
insb
add
adc
cmp
pop
popa
in
pop
inc
sub
cmp
inc
movsl
push
sbb
adcb
mov
std
adc
dec
fdivrl
mov
shlb
xchg
and
ljmp
inc
pop
mov
xchg
mov
stos
sbb
decl
and
add
push
pop
div
mov
or
mov
xor
div
jmp
and
popa
into
pop
dec
and
mov
push
cmp
sbb
adc
sbb
dec
xchg
sub
pop
mov
arpl
bound
cld
pop
push
xor
mov
outsl
push
fcmovb
movsl
arpl
cmp
cs
dec
or
dec
mov
lock
lds
cmp
mov
popf
mov
mov
add
sbb
dec
push
sahf
and
xor
lret
loopne
mov
cmp
leave
add
sbbb
out
aaa
mov
cmp
xchg
fs
push
xor
mov
mov
int
rcrb
xor
mov
into
cltd
cmp
lods
xor
jecxz
mov
loope
data16
lock
aas
and
movl
sbb
pop
mov
cltd
dec
loopne
ljmp
bound
inc
xchg
fcmove
xchg
xchg
jle
iret
or
stos
lea
push
jmp
lcall
arpl
dec
pop
or
mov
cmp
ret
xchg
in
adc
enter
cmp
mov
pop
jno
cltd
mov
mov
ret
mov
adc
in
pop
fildll
test
xchg
aaa
cmpl
ror
pop
sti
mov
jg
jns
lea
ss
test
pushf
add
stc
xchg
pop
or
iret
in
xlat
aaa
push
dec
cmp
in
jg
or
cmp
xorl
ja
sub
cmp
int
mul
inc
into
hlt
jbe
and
pop
test
push
cmp
fidivrs
fwait
cmpsb
aad
mov
push
adc
loopne
aam
mov
jp
in
jnp
lea
bound
xchg
js
insb
stc
mov
mov
cmpsb
xor
jb
cltd
stc
data16
jp
inc
and
imulb
aaa
jp
or
mov
cmpsl
add
jnp
vpunpckldq
movsb
pop
mov
fcoms
dec
mov
jle
fsubr
adc
stos
loop
aam
jns
or
sbb
addb
scas
outsb
addr16
pop
sub
push
js
lds
repz
mov
sti
push
fsubrl
mov
clc
and
aas
mov
ljmp
pop
jae
push
call
mov
leave
cwtl
push
and
rcl
lea
call
in
add
cmp
inc
test
lods
pop
inc
imul
mov
jno
cmpsl
mov
cmp
lahf
into
xchg
xchg
lds
neg
adc
fmulp
test
ss
loopew
xchg
fidivs
mov
add
ficoms
pop
or
stc
push
pushf
cmp
xor
xor
cmp
orl
sub
lock
stc
mov
pop
dec
call
push
fsubrl
cwtl
adc
cltd
pop
gs
adc
jmp
xchg
das
test
out
mov
mov
mov
and
aad
popa
pusha
lahf
leave
outsb
and
lcall
repnz
add
xchg
xor
fists
jp
addr16
out
xlat
inc
jge
mov
int3
adc
dec
pop
or
xchg
jge
ds
fsubrl
popa
insl
adc
addr16
jge
add
add
mov
loopne
lea
incl
add
add
add
add
incl
add
jmp
and
or
mov
mov
add
lea
mov
andl
jmp
mov
inc
mov
mov
mov
cmp
je
mov
mov
mov
add
mov
jmp
add
mov
mov
or
push
sbb
adc
sbb
or
stc
shrb
mov
push
or
xchg
mov
in
mov
cmc
jecxz
bnd
inc
xchg
dec
sub
add
and
xorb
jle
xlat
cli
xor
adc
iret
ficompl
fidivl
mov
icebp
repz
sahf
ret
test
adc
inc
adc
lock
mov
pop
mov
push
cmpb
push
push
ljmp
xor
push
xor
cld
xor
stos
mov
scas
mov
cmp
cmpb
fndisi(8087
test
jbe
movaps
lret
daa
xor
and
xchg
loopne
arpl
scas
aaa
mov
mov
imul
pop
mov
roll
sbb
shlb
movsb
and
pop
bound
sbb
mov
inc
mov
in
mov
sub
xor
mov
mov
jns
xor
push
dec
in
inc
rorb
enter
xchg
cs
push
adc
sub
mov
dec
pop
jmp
push
stos
mov
gs
es
or
iret
movsb
mov
cmp
mov
jg
popf
fisttps
sub
das
jbe
mov
stos
xchg
insl
sbb
cmp
adc
icebp
cmp
add
pop
cmpsb
mov
push
pop
ret
inc
ss
shlb
and
repnz
or
xchg
push
jge
hlt
cmpsl
adc
jmp
addr16
pusha
xchg
repz
adc
jp
sbb
dec
jp,pn
sbb
sub
movsl
xchg
inc
test
fadds
mov
xchg
out
aaa
cmp
les
fcomi
sahf
cmp
js
sbbl
or
sahf
das
inc
imul
add
adc
cwtl
xchg
sub
cmpsl
fistl
fwait
rorl
push
sbb
arpl
insl
stos
imul
lahf
mov
xchg
loop
cld
ja
mov
jmp
push
push
lea
xchg
shlb
mov
push
pop
cltd
mov
std
lea
pop
in
outsl
add
movl
pop
ljmp
jp
cld
lahf
sahf
mov
jae
inc
mov
and
std
das
jo
mov
mov
lods
add
rcr
mov
insl
fs
fnstenv
pop
jns
ja
xor
dec
xchg
pop
repnz
dec
inc
jae
sbb
clc
push
into
lock
adc
fiadds
jg
push
dec
das
and
push
shlb
mov
push
loopne
cmpsl
sbb
push
sti
sub
fstl
pop
fcomi
mov
outsl
jae
loope
cli
ljmp
xchg
jmp
shll
jmp
xchg
inc
mov
push
cmpsb
js
push
xor
mov
out
or
fisubrs
sub
test
push
ret
out
mov
pop
mov
out
sbb
adc
push
mov
je
mov
xchg
mov
pop
lret
out
aaa
fst
jge
scas
mov
inc
xchg
push
aaa
mov
lock
cltd
xor
mov
movsb
je
xlat
out
xchg
in
add
out
jge
adc
and
cmp
cmpsl
fs
outsl
ret
and
or
mov
pushf
mov
mov
mov
mov
movl
movl
movl
movl
lea
mov
mov
movzwl
xor
movzwl
sar
mov
movzwl
xor
movzwl
shl
or
movzwl
mov
mov
mov
mov
xor
jmp
imull
mov
mov
lock
adc
sbb
jle
xor
mov
insl
mov
cltd
jae
cmp
mov
js,pt
add
shrd
movsl
leave
stos
push
lcall
sbb
loope
jmp
pushf
fnstenv
loop
mov
sbb
or
mov
jae
ficompl
and
jo
dec
repnz
and
ja
shrl
aas
jp
inc
sbb
adc
shlb
cmp
imul
pop
push
pop
adc
aaa
mov
xchg
cmpl
xor
add
jbe
ret
mov
cs
and
and
repz
repnz
dec
cld
fdivrp
mov
push
xor
sub
popf
jne
cmp
inc
orb
xor
sbb
insb
pop
mov
out
imulb
push
popa
rcr
mov
test
jbe
out
shrb
pop
pop
int
inc
cmp
aas
ret
mov
xchg
out
inc
aam
pop
test
jo
jae
les
rorb
xor
insb
ret
andb
or
bound
in
adc
pop
shl
push
testl
das
and
or
xor
lea
add
rorb
cld
xchg
pop
sub
movsl
arpl
out
pop
xor
or
nop
aas
fwait
icebp
sahf
mov
ljmp
popa
pop
dec
ja
popa
in
mov
arpl
jne
dec
mov
or
lods
push
cltd
mov
int
and
add
xor
xorb
or
push
adc
cld
lods
fucomip
outsl
les
jg
cs
pop
hlt
and
pop
xor
andb
insb
sar
fs
or
jo
add
sbb
jl
push
and
mov
mov
cmp
cmp
push
mov
std
jne
jo
hlt
ds
in
bound
fs
jb
cmp
and
or
arpl
mov
add
je
cmp
mov
scas
add
frstor
add
inc
sub
lds
push
xchg
sub
or
sbb
aaa
xor
fisubrl
cmpsl
mov
ret
mov
shll
sbb
sub
add
ljmp
lahf
cmpsl
repnz
ret
and
lods
in
and
mov
or
xor
ljmp
aam
jae
fcmovb
xor
cmp
push
and
dec
sub
js
cmp
ljmp
xchg
iret
sbbb
jmp
sti
push
jmp
cmp
aaa
xchg
or
lea
sub
fwait
pop
sbbb
push
fcoms
stos
sub
insb
pop
mov
pushf
clc
jb
xor
add
mov
cmp
push
pop
inc
iret
jne
repz
mov
xchg
jns
in
dec
jb
into
sbb
mov
loop
push
sub
mov
sub
test
mov
fs
dec
lds
push
imul
xchg
xchg
pop
sar
in
push
pop
mov
pushf
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
movzbl
push
lea
push
call
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
add
mov
mov
cmp
je
mov
mov
movzwl
xor
movzwl
sar
mov
mov
movzwl
xor
movzwl
shl
or
movzwl
mov
mov
mov
movzwl
xor
movzwl
sar
mov
mov
movzwl
xor
movzwl
shl
or
mov
mov
jmp
mov
mov
xor
xor
mov
call
mov
jmp
jecxz
enter
sbb
cltd
mov
and
and
sbb
popa
js
daa
daa
xchg
out
inc
mov
cmp
mull
cmp
add
loop
fwait
lahf
call
adc
xchg
add
sub
orb
push
xor
adc
fs
dec
pushf
jp
leave
lret
mov
pop
hlt
xor
daa
mov
fwait
rorb
cli
dec
in
inc
int3
adc
jns
ljmp
mov
adc
xchg
and
add
cmpsb
xor
xorl
shll
lcall
gs
adc
mov
push
mov
into
neg
xorl
inc
lock
mov
fisubs
out
repnz
xchg
movsl
xor
cli
sarl
or
lods
add
icebp
inc
or
push
add
and
icebp
imul
movb
test
sbb
les
pop
out
mov
jne
loopne
cmp
in
sbb
pop
sub
fisubs
or
ret
mov
cltd
fadds
adc
ret
enter
sub
and
xor
mov
pusha
push
pusha
jg
out
sbb
sahf
pop
jb
pop
jge
add
jecxz
std
rcrl
push
and
lret
mov
lea
test
shll
xchg
hlt
jbe
mov
cs
sub
fcoms
xchg
fidivs
pop
jae
mov
or
test
leave
jbe
xchg
or
mov
cmp
add
push
rolb
push
inc
mov
rcrl
adcb
inc
fstl
popf
adcb
stos
xchg
iret
cli
adc
or
insl
push
shrb
or
or
cli
dec
out
into
jo
dec
xchg
mov
xor
out
mov
jl
jmp
imul
and
inc
daa
mov
or
into
mov
add
sub
lahf
sub
adc
jmp
mov
add
nop
xchg
add
sub
dec
adc
cmpsb
inc
addl
hlt
fsts
sti
mov
xor
sub
pop
sub
cmp
mov
add
jae
scas
es
addr16
xchg
mov
pop
ds
jo
xor
mov
repnz
add
pop
iret
lds
add
shlb
and
inc
ljmp
in
lret
sbb
inc
lock
push
sub
xchg
xor
and
int3
lods
and
popf
push
and
dec
imul
jge
das
nop
adc
aaa
add
out
psubd
jnp
stos
xchg
outsb
movsl
mov
in
aad
test
mov
stc
sahf
adc
jns
dec
push
push
xor
xchg
jmp
idiv
sbb
mov
lock
sahf
sub
adc
mov
xchg
lret
or
inc
lock
std
cmovae
icebp
pusha
sub
fisttps
lret
mov
sti
icebp
jle
ss
arpl
xorl
repnz
jp
jge
addr16
mov
loopne
push
mov
xchg
mov
stos
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
mov
or
je
lea
mov
mov
xor
mov
call
mov
mov
mov
xor
mov
call
or
or
xor
xor
mov
jmp
push
mov
and
enter
push
sbb
sbb
stc
out
jbe
aad
add
scas
dec
int3
lahf
push
ret
dec
dec
fadds
mov
dec
jb
popf
or
popa
cmpsb
test
cmp
and
lret
cli
pop
aas
pop
mov
xchg
out
mov
sbbl
scas
sub
test
out
aam
sbb
mov
and
xor
fmull
imul
cwtl
daa
in
xor
jnp
add
and
cwtl
jae
cmpsl
test
cmp
push
mov
dec
adc
rorb
lcall
addr16
and
call
mov
mov
pop
fsts
or
das
and
inc
data16
mov
mov
outsb
adc
dec
sahf
ss
outsl
fcmovb
nop
xchg
push
inc
adc
sbb
sahf
or
addl
xor
mov
mov
movsb
cmovo
mov
test
movsl
push
adc
cmp
pop
sub
sbb
inc
cmc
pop
jecxz
dec
stc
push
out
movsl
shll
data16
stos
push
outsl
imul
imul
sub
cmpsl
pop
loopne
xchg
jb
push
or
cld
enter
ljmp
ret
sti
pop
aam
mov
adc
mull
inc
outsb
sti
stos
xlat
mov
inc
push
mov
jle
pop
mov
jle
mov
out
enter
hlt
inc
out
rorb
push
xor
adc
jg
sub
aas
sarb
dec
notl
xor
push
jbe
sarl
pop
mov
pop
orb
outsl
int
pushf
or
mov
fwait
rolb
add
iret
aad
fwait
adc
or
shlb
sahf
pop
sbb
les
fiadds
and
jb
pushf
roll
mov
jns
dec
popf
push
mov
adc
pop
sub
jecxz
jo
xor
dec
push
xlat
lret
dec
push
xchg
add
add
idivl
xchg
push
add
sbb
cmp
mov
inc
mov
daa
push
push
pop
push
xor
add
cld
aad
jae
adc
mov
outsl
xchg
inc
fcoms
sahf
push
incl
dec
repnz
cmp
cmpsb
add
cmpsl
imul
mov
pop
sti
in
sub
in
push
sarl
pusha
cmpsb
dec
subl
push
in
xor
fmull
xor
ficompl
cmp
pop
dec
dec
and
add
imul
movb
sbb
pop
push
clc
xchg
or
xchg
mov
aaa
call
lock
loop
ficompl
push
inc
ss
sbb
loop
dec
xchg
cmp
and
mov
lock
inc
mov
jge
fs
and
jo
leave
xchg
jmp
data16
insb
loope
ret
jmp
movsb
std
push
out
mov
fstl
push
mov
js
inc
rol
test
scas
loopne
call
cwtl
insl
in
or
sahf
jle
fimuls
stos
jl
mov
insb
xchg
idivl
aad
sbb
cmp
push
dec
cmp
jb
xlat
xlat
xchg
or
sub
pop
hlt
repz
popa
and
mov
mov
movsbl
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
movsbl
cmp
je
mov
movsbl
jmp
cmp
sub
pop
rcrl
push
pop
push
sbb
adc
sbb
mov
movsb
and
hlt
dec
clc
lcall
lods
inc
inc
mov
lds
sbb
sub
adc
dec
and
sub
xchg
push
dec
fnstenv
pushf
aaa
sub
mov
ja
push
adc
fsubl
inc
clc
fwait
mov
mov
les
mov
pop
adc
cmpsl
jae
inc
test
sti
jns
push
jmp
mov
mov
clc
xchg
adc
adc
sar
pop
fsts
ret
int3
std
jb
aas
stc
idivb
xchg
lock
xchg
cwtl
mov
pop
jnp
aad
cltd
adc
xor
xchg
or
fcmove
lock
out
pop
add
fldcw
sbb
int3
pushf
lods
dec
jo
loopne
out
adc
outsb
daa
cmp
jns
cld
sbb
movsb
test
xchg
lds
adc
fwait
popf
popa
sub
or
and
mov
shrl
pop
iret
or
repnz
jno
out
xor
cmpsl
out
jle
xor
push
cli
pop
into
fnstenv
mov
fisttpll
stos
push
into
aam
xchg
mov
mov
insb
pop
mov
fnstsw
mov
test
cmp
or
sbb
jmp
push
test
cmpsb
je
out
stos
in
xor
cmp
faddl
mov
into
jno
call
xlat
test
test
pop
add
sub
and
xor
or
sahf
fstpl
dec
shlb
jnp
js
loopne
jmp
xchg
out
jl
sub
es
lock
mov
lret
lock
call
fdivrl
adc
pop
rcl
ljmp
sub
lock
mov
mov
or
sub
roll
sub
push
clc
psraw
cmp
mov
cmp
shrb
addr16
outsl
mov
sbb
sub
movsb
xlat
sbb
cmp
xor
add
js
sti
int
pop
nop
or
popf
jle
int
inc
fnstsw
add
xchg
fisttpl
mov
cli
pop
add
xor
lret
icebp
es
cmp
roll
xor
mov
xchg
adc
lret
xor
push
insl
stos
mov
push
aas
jo
or
push
or
cwtl
iret
cltd
in
mov
and
call
inc
xlat
sahf
dec
push
xchg
stos
jno
xor
push
and
cltd
push
gs
dec
out
repz
popa
or
pop
shll
test
mov
daa
inc
inc
xor
rorb
pushf
push
or
cmp
dec
mov
shll
mov
add
movsb
iret
pusha
push
hlt
mov
js
scas
sub
jg
pop
pop
in
pop
fcomp
sarb
mov
adc
adc
ja
icebp
xchg
mov
test
jne
push
cmp
hlt
sub
jg
sub
clc
cwtl
sbb
test
lret
mov
pop
sub
cmp
decl
pushl
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
movsbl
cmp
je
jmp
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
movsbl
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
movsbl
cmp
jne
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
jmp
jp
inc
mov
mov
pop
push
popf
jo
dec
mov
and
push
sbb
sbb
inc
fwait
xchg
loopne
mov
adc
inc
js
push
loopne
pusha
enter
notl
dec
roll
aad
push
or
xchg
cmpsb
mov
pop
rolb
mov
ficompl
add
add
fs
dec
in
add
mov
jbe
mov
daa
jle
pusha
sbb
insl
scas
pop
push
and
hlt
je
mov
test
xchg
lock
sub
cld
je
int3
addr16
fwait
push
std
shll
add
out
jne
mov
andb
subb
or
aaa
xor
push
lahf
lods
movsl
aaa
cmpsb
lahf
xor
sarl
loopne
int3
ljmp
dec
or
cmp
divl
cmc
stos
stos
fimull
lea
insb
ret
rcr
push
outsb
test
jae
lock
in
mov
aam
mov
int
mov
push
ret
lcall
into
pop
lods
and
in
leave
es
daa
test
jge
repnz
fidivrl
outsl
ficoml
jne
xchg
add
cli
hlt
int3
test
jge
rcrl
js
sub
hlt
in
arpl
in
add
jae
sahf
iret
mov
nop
add
mov
call
mov
stos
or
dec
adc
js
in
sbb
cmp
fmul
jae
xchg
into
push
mov
daa
cld
lock
clc
lret
xchg
lcall
ss
dec
jbe
push
add
adc
out
mov
xchg
cmp
fisubs
fmull
loop
xlat
lds
aad
fmuls
arpl
das
nop
cmc
xchg
cmp
insl
xchg
xchg
fsubl
lret
stos
cmp
aas
sub
lods
mov
push
aam
les
sarb
push
inc
std
jae
test
xor
mov
mov
pop
mov
mov
loope
xor
aad
adc
jnp
cmpsb
mov
das
icebp
mov
call
push
stos
scas
fisubrl
fdivrs
sub
scas
push
jbe
inc
cmp
outsb
dec
mov
pusha
lret
cmpsl
or
xor
sub
ljmp
mov
std
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
add
mov
jmp
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
mov
cmpl
je
mov
mov
movzwl
mov
mov
mov
jmp
jmp
cmpl
jne
xor
jmp
mov
add
mov
movl
cmpl
je
cmpl
je
mov
shl
mov
movl
sub
mov
movl
mov
cmp
je
mov
mov
mov
mov
mov
mov
mov
inc
mov
jmp
movl
push
jmp
mov
mov
ret
dec
push
mov
sub
push
mov
or
jne
sub
mov
mov
mov
mov
sbb
xor
cmpl
mov
mov
jmp
movl
jl
push
pushl
push
push
call
addl
xor
mov
add
sub
mov
adc
mov
mov
mov
sbb
div
dec
mov
not
mov
div
mov
jmp
mov
mov
mov
mov
shr
rcr
shr
rcr
or
jne
div
mov
mull
mov
mov
mul
add
jb
cmp
ja
jb
cmp
jbe
dec
xor
mov
pop
pop
ret
sbbl
subl
movl
cmpl
movl
je
mov
mov
adc
add
mov
mov
pop
pop
pop
leave
ret
cmp
movl
jae
movl
cmp
movl
jae
subl
shld
movl
shl
ret
addl
mov
xorl
xor
and
shl
ret
xor
xor
ret
add
add
add
add
add
nop
add
in
add
xchg
xchg
add
add
addl
add
add
mov
add
add
add
add
add
add
fadds
add
add
add
xchg
add
faddl
add
add
add
mov
add
popa
je
outsl
outsl
add
add
addr16
popa
je
jb
popa
je
jb
popa
je
jb
popa
je
jb
popa
je
jb
popa
je
jb
popa
je
jb
popa
je
jb
popa
je
jb
popa
je
add
insb
insb
push
gs
insb
push
gs
insb
push
gs
insb
push
gs
insb
push
gs
insb
push
gs
insb
add
add
les
inc
add
add
jbe
add
push
add
add
push
add
add
push
add
add
push
add
add
push
add
add
push
add
add
push
add
add
push
add
add
fsubl
inc
add
daa
inc
add
push
mov
movsb
popf
movsb
jno
xchg
movsb
or
movsb
sbb
movsb
roll
adc
movsb
popf
movsb
jno
xchg
movsb
or
movsb
xor
movsb
mov
in
xchg
movsb
adc
movsb
popf
movsb
sbb
movsb
fwait
movsb
xchg
sub
cs
push
adc
movsb
fwait
movsb
add
movsb
sbb
movsb
shll
shrl
or
push
pop
outsb
adc
movsb
fwait
movsb
add
movsb
xor
movsb
andl
imull
dec
adc
movsb
fwait
movsb
jae
popf
movsb
sbb
movsb
fwait
movsb
andl
testl
movsb
aaa
movsb
fwait
movsb
jae
popf
movsb
pop
movsb
xchg
movsb
push
movsb
mov
inc
rorl
imulb
xchg
movsb
aaa
movsb
fwait
movsb
jae
popf
movsb
cmp
movsb
fwait
movsb
xchg
mov
mov
out
adc
xchg
movsb
aaa
movsb
fwait
movsb
jae
popf
movsb
cmp
movsb
fwait
movsb
andl
imul
push
into
adc
xchg
movsb
cmp
movsb
popf
movsb
jnp
xchg
movsb
fwait
movsb
xchg
movsb
shl
shr
lock
test
cs
push
push
adc
xchg
movsb
adc
movsb
cmp
movsb
fwait
movsb
lea
or
push
push
outsb
adc
xchg
movsb
add
dec
and
add
inc
add
inc
add
daa
inc
add
add
add
jg
add
add
daa
inc
add
inc
add
add
daa
inc
add
lret
push
movsb
scas
or
movsb
pop
es
add
inc
add
daa
inc
add
inc
add
inc
add
inc
add
inc
add
daa
inc
add
inc
out
les
inc
add
es
add
inc
add
loopne
jbe
pop
cmpsb
add
inc
add
rcl
pop
adc
add
add
jno
cvtdq2ps
jbe
cmpsl
mov
xchg
test
es
add
fiadds
movsb
cmpsb
fiaddl
movsb
mov
fiaddl
movsb
mov
fiaddl
movsb
mov
push
movsb
mov
push
movsb
mov
push
movsb
out
fiaddl
movsb
decl
adc
inc
and
add
sub
add
add
scas
lcall
das
dec
add
cmp
inc
add
inc
sbb
hlt
clc
sarb
sub
jle
add
add
add
add
lods
inc
add
push
movsb
jg
inc
movsb
push
movsb
inc
movsb
std
movsb
jmp
movsb
push
movsb
dec
movsb
std
movsb
jmp
movsb
push
movsb
jg
std
movsb
jmp
movsb
dec
movsb
inc
movsb
jne
pop
movsb
jnp
dec
movsb
fwait
movsb
xor
xor
xor
xor
inc
xor
xor
xor
xor
xor
inc
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
push
shlb
rcll
into
xchg
dec
xor
sbb
push
je,pn
mov
imul
leave
daa
dec
out
pushf
mov
dec
xchg
lock
inc
or
js
popa
pop
jecxz
movb
cs
aas
inc
leave
testb
jl
xchg
inc
add
add
add
inc
add
fbld
add
add
je
gs
jo
jo
outsl
insb
je
jae
outsl
popa
add
add
add
add
inc
insl
jns
outsl
js
jns
jb
popa
je
jne
gs
jae
gs
add
add
add
add
inc
jne
jp
outsb
add
add
imul
insb
outsl
add
push
popa
arpl
imul
add
outsb
imul
add
add
add
add
insb
insb
gs
add
add
add
gs
data16
jae
outsb
fs
popa
insb
imul
js
imul
add
add
addr16
insl
ja
jns
popa
jns
outsb
popa
bound
insl
outsl
jb
add
add
je
dec
add
add
add
add
addl
add
loopne
add
mov
add
xchg
in
jno
iret
jbe
or
cwtl
int
std
pop
fsubrs
dec
xor
stc
inc
adc
dec
sbb
mov
jns
dec
sbb
xchg
cmp
in
jno
iret
jbe
or
int
std
pop
jns
pop
xor
stc
inc
icebp
das
int
mov
mov
jns
xchg
lret
rolb
jno
jbe
or
int
std
pop
fdivs
int
stc
inc
icebp
test
mov
int
mov
addl
rolb
jno
jbe
or
cwtl
int
std
pop
ret
cmp
xchg
stc
inc
adc
test
ret
xchg
aad
lds
iret
jbe
or
int
std
pop
pop
insb
cmp
stc
inc
icebp
push
int
mov
mov
jns
test
lcall
jbe
xorl
sbb
and
int
adc
mov
add
add
lods
clc
icebp
jo
jge
aad
clc
icebp
jo
adc
incl
jo
jo
jo
xor
cwtl
add
add
xchg
or
addb
jecxz
hlt
scas
rolb
sub
iret
pop
iret
push
out
int
adc
out
sub
or
rolb
subb
sub
cmc
sub
in
aad
add
mov
fcmovnbe
out
pushf
xchg
test
fs
mov
iret
int3
call
jno
imul
int
std
xor
movsl
das
pop
push
or
sub
xchg
iret
les
addb
add
addl
adc
inc
jns
fldlg2
es
or
add
mov
add
addl
jns
insl
and
push
add
test
push
add
push
mov
test
lret
addb
in
outsl
rcl
jge
outsl
xchg
addb
sahf
mov
jno
popa
mov
addb
push
jge
push
xchg
addb
jge
push
xchg
addb
rorb
jo
std
xor
movsl
inc
xor
or
addl
addl
int
popf
aam
shlb
or
xchg
aam
int
icebp
int
xchg
or
or
or
pushf
stos
sahf
popa
mov
mov
mov
roll
int
or
adc
int
mov
lods
xchg
lret
rorb
in
push
int
or
daa
addl
or
mov
gs
addl
xchg
or
addb
xor
int
mov
int
xor
xor
lea
das
add
addb
int
mov
cli
test
int
jge
xacquire
insl
insb
shrb
outsl
lods
xchg
inc
addl
lea
cli
test
mov
and
xchg
mov
dec
ja
pop
rcll
int
fidivl
jecxz
xchg
or
in
inc
add
test
jecxz
jecxz
movsl
pop
cmpsb
lods
addb
lods
mov
mov
addb
shll
test
add
leave
int
or
cmpb
movsl
jecxz
mov
in
in
addb
movsl
int
mov
rcll
leave
xor
pop
jbe
jnp
int
xor
movsl
int
cmp
inc
inc
add
jle
clc
or
std
das
pop
adc
cmp
or
add
mov
xor
les
int
sub
stc
xor
sbb
inc
int
inc
int
std
xor
xor
pusha
lret
arpl
test
xor
in
popf
adc
addb
shl
mov
and
mov
jbe
shrl
lods
or
stc
test
int
jne
pop
insl
shl
test
in
xchg
pop
insl
xchg
int
jge
les
xor
les
adc
addb
mov
shll
xor
ja
lret
je
pop
shl
mov
xchg
xor
int
das
mov
push
das
rcll
pop
mov
ja
int
pop
orb
jmp
mov
insl
iret
les
test
mov
xor
mov
insl
add
or
cwtl
int
mov
int
int
jns
mov
sub
add
cwtl
int
jns
test
add
mov
jns
xchg
cmp
add
add
inc
addl
leave
jbe
inc
and
or
int
stc
int
stc
pop
cwtl
lcall
ljmp
cmp
sarl
jbe
int
stc
int
stc
cmp
sarl
ljmp
int
stc
int
stc
cmp
sarl
ljmp
int
stc
int
stc
cmp
sarl
ljmp
leave
jbe
dec
and
mov
and
sarb
jbe
or
sarb
ror
jbe
jo
addb
addb
stc
cmp
cmp
sarl
push
rorb
jbe
int
stc
int
stc
cmp
cmp
sarl
push
rorb
jbe
leave
jbe
arpl
lods
pop
addb
addb
add
iret
push
xchg
incl
add
add
lea
xchg
fcmove
jbe
dec
insb
addb
stc
cmp
sarl
cmp
shl
sub
or
int
stc
int
stc
add
cmc
cmpb
sarl
repnz
or
mov
sbb
addb
push
or
int
dec
or
int
mov
cmc
or
rolb
mov
in
or
push
addl
lea
or
pop
addl
stc
int
stc
cmp
cltd
shr
xchg
shr
sub
inc
jge
add
int
mov
add
mov
jbe
int
xor
addb
int
adc
adc
add
int
mov
mov
int
xchg
rolb
bound
jno
cmp
push
push
add
add
cmpsl
aad
leave
push
pop
add
add
adc
add
mov
push
insb
add
add
iret
outsb
add
add
insl
leave
push
sub
add
push
cmpsl
aad
leave
push
xor
add
push
xor
cmp
add
mov
push
inc
add
add
iret
addr16
add
add
jbe
int
adc
mov
int
mov
add
addb
mov
leave
jbe
mov
cmp
leave
jbe
xlat
sbb
push
les
add
push
cmpsl
aad
leave
push
nop
add
add
xlat
inc
leave
push
aam
add
cmp
jge
push
faddl
add
mov
shll
add
xlat
sbb
push
pushf
add
add
cmpsl
aad
leave
push
movsb
add
add
xlat
inc
leave
push
lods
add
add
dec
push
jge
push
mov
add
mov
shll
add
ret
sbb
jo
jbe
add
int
stc
int
stc
cmp
cmp
shl
sub
mov
lea
testb
int
mov
lds
psrlq
sub
mov
lea
insl
inc
shrl
or
addl
int
mov
rclb
addl
add
addb
jo
cwtl
xor
lea
addb
int
adc
mov
insl
iret
pop
pushf
add
add
jo
jbe
int
inc
addl
adc
pop
adc
mov
insl
iret
pop
les
add
mov
jo
jbe
int
inc
addl
mov
pop
adc
mov
insl
iret
pop
push
add
add
jo
jbe
int
inc
addl
pop
orb
xor
push
cmp
sahf
clc
add
shrb
pop
shlb
xchg
xor
int
pop
add
mov
adc
int
mov
pop
adc
mov
insl
iret
xchg
add
jo
jbe
int
cmp
push
add
in
test
or
add
pop
sub
sub
lea
ljmp
sarl
push
ror
pop
cmc
incl
add
jo
jbe
int
stc
int
mov
lds
lock
push
ror
pop
xchg
incl
add
jo
xchg
or
xchg
stc
cmp
jmp
shr
sub
inc
jge
mov
jbe
addl
cmp
sarl
repnz
xchg
or
int
cmp
int
mov
lea
sarl
push
roll
xchg
int
mov
lea
shl
sub
mov
lea
insl
inc
shrl
pop
push
incl
add
ljmp
lea
jge
xor
mov
jbe
jo
stc
jl
orb
jne
sbb
jbe
int
mov
xchg
mov
or
cltd
shr
xchg
shr
sub
push
mov
jbe
int
stc
cmp
cmp
shl
sub
mov
lea
shrl
add
int
stc
int
stc
cmp
cmp
shl
sub
mov
std
inc
shrl
add
int
stc
int
stc
cmp
cmp
sarl
push
shr
adc
lea
or
cltd
shr
xchg
shr
sub
xchg
int
std
inc
roll
or
int
jne
jbe
ret
dec
and
leave
jbe
inc
and
int
inc
cmp
cmp
sarl
push
rorl
jbe
int
inc
int
inc
cmp
cmp
sarl
push
rorl
jbe
leave
jbe
dec
and
ret
xor
lea
lds
psrlq
sub
mov
lea
push
xchg
addb
cmp
jns
or
lods
sub
jmp
push
jge
jbe
xor
cmp
clc
add
jbe
int
sbb
lds
psrlq
sub
mov
lea
int
sbb
lds
psrlq
push
rorl
jbe
int
cmp
lds
psrlq
push
ror
lea
jbe
int
inc
int
inc
cmp
cmp
shl
sub
mov
lea
pusha
xchg
addb
or
jbe
or
xchg
or
pop
inc
and
leave
jbe
cmp
xchg
and
int
xchg
int
xchg
cmp
cmp
sarl
push
rorl
jbe
int
jmp
addl
add
and
push
xchg
add
add
and
insl
int
icebp
int
icebp
cmp
cmp
sarl
push
ror
lea
rcl
int
insl
lret
or
int
int
icebp
int
icebp
cmp
cmp
shl
sub
mov
lea
rcl
int
adc
or
cltd
shr
xchg
shr
sub
xchg
int
insl
das
pop
dec
mov
push
jo
add
int
jo
add
cmp
cmp
ljmp
pop
lea
test
test
xchg
icebp
cmp
cltd
shr
sub
jmp
push
adc
xchg
jge
rcll
int
insl
or
icebp
int
icebp
cmp
cmp
sarl
push
ror
lea
rcl
int
insl
lret
or
int
int
icebp
int
icebp
cmp
sarl
repnz
int
jge
rcl
int
pop
int
pop
cmp
cltd
shr
xchg
shr
sub
xchg
int
insl
das
pop
dec
mov
push
xchg
add
add
pop
xchg
add
add
lds
cltd
sarl
push
rolb
test
test
test
xchg
icebp
cmp
cltd
shr
sub
jmp
push
adc
xchg
jge
rcll
int
insl
or
xor
sub
mov
lea
xchg
pop
cmp
cltd
shr
xchg
shr
sub
das
rcl
xchg
or
int
jge
lea
incl
add
jbe
int
pop
cmp
shl
sub
xchg
push
ror
lea
lea
xchg
push
ror
lea
sub
or
int
popf
int
popf
cmp
shl
sub
xchg
push
ror
lea
or
jmp
cmp
adc
xchg
in
sbb
jbe
int
popf
cmp
cmp
sarl
push
roll
push
int
popf
int
popf
cmp
sarl
repnz
int
lods
xor
jbe
int
popf
cmp
cmp
mov
xchg
push
das
rcl
inc
shrl
pop
adc
add
int
stc
int
stc
int
std
or
int
mov
lea
or
jmp
cmp
addb
jno
lea
xchg
cmp
cltd
shr
xchg
shr
sub
jno
stc
int
stc
add
xor
shr
xchg
shr
sub
jno
jo
int
stc
int
stc
cmp
cltd
shr
xchg
shr
sub
or
inc
jge
add
int
stc
in
int
or
push
cmpsb
lods
int
lods
shr
xchg
cmp
lods
sub
int
jne
dec
orl
mov
lea
or
cltd
shr
sub
jmp
push
adc
xchg
mov
jge
jbe
cmp
add
std
add
std
shr
sub
leave
int
std
int
std
shr
xchg
shr
sub
cmp
inc
rcl
mov
lea
add
addl
shr
sub
jno
stc
int
stc
cmp
cltd
shr
xchg
shr
sub
jno
jne
jo
int
or
int
xor
jbe
cmp
add
test
xor
jbe
int
mov
jbe
int
mov
jns
aad
lods
sub
repz
push
ror
xchg
jne
test
jbe
add
test
xlat
int
std
cmp
add
test
xor
jbe
int
mov
jbe
int
mov
jns
aad
lods
sub
repz
push
ror
xchg
jne
test
jbe
add
test
xlat
int
jne
jbe
int
mov
lea
shl
sub
mov
stc
or
leave
jbe
imul
imul
gs
into
and
addb
sarl
lds
jbe
rol
lods
xchg
or
int
cmp
lods
sub
lods
lret
int3
das
imul
lret
inc
rcl
jle
jbe
int
mov
jbe
int
mov
jns
or
lods
sub
jmp
push
jge
jbe
cmp
lods
sub
lods
cmp
xchg
jbe
add
std
add
std
shr
sub
lock
and
jbe
in
and
jbe
int
stc
cmp
cmp
sarl
push
ror
stc
int
stc
cmp
cltd
shr
xchg
shr
sub
inc
jge
add
int
or
out
leave
jbe
mov
xchg
and
dec
mov
lods
imul
and
xor
jbe
int
lods
int
lods
cmp
jmp
cmp
adc
lea
or
jmp
cmp
addb
jno
lea
xchg
cmp
cltd
shr
xchg
shr
sub
jno
lea
or
cltd
shr
xchg
shr
sub
jno
jo
or
int
mov
lea
or
jmp
cmp
addb
jno
lea
or
cltd
shr
xchg
shr
sub
jno
lea
cmp
shr
xchg
shr
sub
jno
jo
int
mov
jbe
int
mov
or
jns
jmp
shrl
jbe
inc
jge
add
int
mov
xchg
mov
or
cltd
shr
xchg
shr
sub
inc
lea
addb
and
add
mov
lea
add
lea
jmp
add
scas
or
aaa
sbb
add
addb
add
add
add
jno
cmp
add
add
lods
jno
lea
lea
shll
jno
mov
or
int
mov
lea
add
addl
shr
sub
jno
lea
or
cltd
shr
xchg
shr
sub
jno
add
int
rcl
insl
xchg
cmp
inc
leave
int
mov
lea
addb
cmp
cltd
shr
xchg
shr
sub
jno
lea
or
cltd
shr
xchg
shr
sub
jno
jne
jo
int
lods
or
int
cmp
cmp
or
cltd
shr
xchg
shr
sub
jno
lea
or
cltd
shr
xchg
shr
sub
jno
lods
add
int
std
or
int
jne
out
or
leave
jbe
inc
and
int
push
cmp
or
lods
sub
jmp
push
rorl
jbe
int
push
int
push
cmp
or
lods
sub
jmp
push
rorl
jbe
leave
jbe
dec
and
ret
xor
lea
jns
or
jmp
shrl
lea
push
xchg
addb
xchg
int
inc
cmp
cmp
sarl
push
jge
jbe
xor
cmp
clc
add
jbe
int
lods
int
lods
cmp
or
jmp
shrl
lea
int
lods
int
lods
cmp
or
lods
sub
jmp
push
rorl
jbe
int
xchg
int
xchg
cmp
or
lods
sub
jmp
push
ror
lea
jbe
int
push
int
push
cmp
or
jmp
shrl
lea
pusha
xchg
addb
or
jbe
or
cmp
inc
and
leave
jbe
cmp
xchg
and
int
cmp
jns
or
lods
sub
jmp
push
rorl
jbe
int
jmp
addl
add
and
push
jl
add
mull
xchg
int
icebp
int
icebp
cmp
or
lods
sub
jmp
push
ror
lea
rcl
int
pop
lret
or
int
int
icebp
int
icebp
cmp
jns
jmp
shrl
lea
rcl
int
gs
cmp
cmp
shl
sub
repz
push
adc
das
pop
dec
mov
push
mov
add
int
mov
add
cmp
aad
lods
sub
repz
push
rolb
loope
jge
loope
insl
lret
int
icebp
int
icebp
cmp
cmp
shl
xchg
shl
sub
int
jge
rcll
int
pop
or
icebp
int
icebp
cmp
or
lods
sub
jmp
push
ror
lea
rcl
int
pop
lret
or
int
int
icebp
int
icebp
cmp
lods
sub
or
jmp
push
ror
lea
rcl
int
insl
int
insl
cmp
cmp
shl
sub
repz
push
adc
das
pop
dec
mov
push
jl
add
int
jl
add
cmp
aad
lods
sub
repz
push
rolb
loope
jge
loope
insl
lret
int
icebp
int
icebp
cmp
cmp
shl
xchg
shl
sub
int
jge
rcll
int
pop
or
and
or
jns
jmp
shrl
lea
xchg
insl
cmp
cmp
shl
sub
repz
push
adc
rcl
xchg
or
int
jge
lea
incl
add
jbe
int
insl
cmp
jmp
cmp
lods
sub
int
or
lea
sub
int
cmp
xchg
push
rorl
jbe
int
popf
int
popf
cmp
jmp
cmp
lods
sub
int
popf
int
popf
cmp
shl
sub
aad
repz
push
adc
xchg
in
sbb
jbe
int
popf
cmp
or
lods
sub
jmp
push
roll
inc
int
popf
int
popf
cmp
lods
sub
or
jmp
push
ror
lea
popf
int
popf
cmp
aad
repz
shrl
xchg
inc
das
rcl
inc
shrl
pop
adc
add
int
mov
dec
iret
jbe
add
mov
jbe
int
xchg
addl
icebp
addl
jne
test
addb
stc
int
stc
cmp
cmp
shl
sub
mov
lea
rcl
push
int
mov
lea
add
addl
shr
sub
jno
stc
int
stc
cmp
cltd
shr
xchg
shr
sub
jno
jne
jo
stos
test
lret
rorb
add
and
int
int
sub
pop
subb
dec
addl
addb
das
add
int
or
das
add
add
int3
addb
addb
add
int
and
mov
or
xor
shrb
mov
mov
mov
das
add
iret
jl
pop
or
add
or
add
cmc
subb
xchg
das
mov
mov
mov
in
push
push
aam
int
add
stc
subb
xchg
mov
sahf
dec
xchg
aam
iret
ficoms
out
int
std
int
push
add
xchg
cmpsb
mov
and
das
mov
sahf
dec
add
add
std
mov
sbb
mov
mov
add
add
mov
pop
out
subb
jo
das
mov
adc
mov
pop
xchg
adc
or
arpl
insl
insb
in
xchg
cmp
lret
lds
sub
jbe
add
xor
fstpl
add
inc
pop
pushf
test
insl
insb
in
fmul
insb
faddl
and
jo
int
adc
fcompl
lea
std
inc
clc
jnp
or
std
or
fsub
inc
pushf
adc
xchg
mov
int
iret
push
ror
push
add
ds
mov
out
inc
stc
fdivs
int
dec
int
in
popf
inc
cld
ja
int
in
mov
out
or
adc
not
dec
int
stc
dec
or
sbbb
cmp
test
lret
rorb
add
push
pop
cwtl
pop
dec
and
leave
jbe
inc
and
int
std
lcall
psrlq
xchg
stos
cmp
shl
sub
or
int
std
int
std
int
std
int
std
int
std
int
std
int
std
int
std
int
std
leave
jbe
fadd
loope
int
std
int
std
cmp
cmp
shl
sub
jmp
push
or
cmpsb
dec
int
sub
push
das
add
int
std
int
std
cmp
cmp
shr
xchg
shl
sub
inc
adc
add
int
add
std
int
std
cmp
xchg
shl
sub
inc
adc
add
xchg
int
cmp
shl
xchg
shl
sub
or
inc
icebp
aam
int
std
int
std
cmp
cmp
ljmp
int
adc
adc
test
xor
jbe
int
std
cmp
cmp
ljmp
int
adc
adc
je
xor
add
int
std
int
std
int
std
int
std
cmp
cmp
in
xchg
push
popf
int
adc
adc
ror
jl
xchg
int
std
int
std
cmp
cmp
shr
xchg
shr
sub
int
std
or
lea
cltd
cmp
shl
sub
repz
push
jecxz
lea
xchg
int
std
int
std
cmp
cmp
shr
xchg
shr
sub
xchg
jbe
popa
and
or
in
int
dec
int
adc
xor
jbe
add
in
int
adc
dec
leave
jbe
popl
dec
pop
xchg
xchg
std
cmp
cmp
shr
xchg
shr
sub
or
inc
jge
pop
int
stc
int
stc
cmp
lock
sub
mov
lea
fnstcw
psrlq
sub
int
adc
xchg
push
jecxz
rcl
bound
jo
int
std
int
std
cmp
lock
push
roll
mov
and
jbe
int
popf
cmp
cmp
mov
push
jge
fldt
pop
xchg
add
add
jbe
int
std
cmp
lock
push
roll
mov
and
jbe
int
stc
cmp
lock
push
roll
addl
leave
jbe
fdivr
sbb
int
std
int
std
cmp
xchg
shrl
sbb
std
int
std
cmp
lock
push
rorl
jbe
int
std
int
std
cmp
lock
push
rorl
jbe
int
std
int
std
cmp
cmp
shrl
push
jge
jbe
inc
jge
xchg
test
jbe
int
sbb
jbe
int
std
cmp
lock
sub
mov
in
inc
rcl
push
int
std
int
std
cmp
cmp
repnz
mov
in
shr
sub
aam
int
in
int
dec
int
adc
lret
jno
mov
jo
in
push
int
cmc
xchg
int
dec
int
adc
xchg
jo
mov
jno
or
int
std
int
std
cmp
lock
sub
mov
cmc
inc
ror
jbe
int
stc
xor
jns
lock
push
roll
cmp
cmp
repnz
mov
cmc
das
rcl
int
lods
or
stc
cmp
lock
push
roll
int
std
cmp
cmp
repnz
mov
lea
push
or
add
int
adc
lea
insb
sarl
test
int
icebp
push
dec
and
add
int
std
int
std
cmp
lock
push
rcrl
mov
stc
int
stc
in
xchg
jbe
int
std
cmp
cmp
shl
sub
mov
arpl
rorb
add
xor
jbe
dec
and
inc
and
or
cwtl
int
int
std
int
std
sar
shll
xchg
cltd
shr
sub
mov
xchg
mov
das
add
int
mov
xchg
mov
xchg
cmc
leave
jbe
popa
and
int
stc
cmp
rcl
mov
xchg
std
int
std
cmp
cmp
shr
sub
repz
push
fxch
out
pop
xchg
leave
fsubrl
add
int
cmc
int
mov
or
mov
out
xor
pop
int
std
cmp
cmp
in
push
cld
or
add
int
std
int
std
cmp
cmp
shl
xchg
shr
sub
or
mov
xchg
out
cmp
cmp
shl
xchg
shr
sub
jmp
addb
std
add
cmp
sarl
push
cltd
iret
ja
jecxz
inc
cltd
das
add
addb
jo
or
mov
mov
das
addb
in
xchg
int
in
xchg
repz
mov
mov
adc
dec
and
or
int
in
cmp
add
call
repz
sarl
xchg
mov
xchg
in
int
dec
int
dec
cmp
add
call
mov
push
cltd
int
mov
int
dec
int
dec
cmp
add
call
mov
push
cltd
int
mov
int
in
int
movsl
addl
mov
push
xchg
add
add
stc
int
stc
cmp
add
call
mov
push
cltd
int
adc
out
inc
aam
in
sub
xchg
std
int
std
cmp
add
call
repz
sarl
cltd
int
test
das
push
test
add
arpl
jbe
cmp
int
lods
add
ljmp
std
cmp
int
std
cmp
shl
sub
mov
lret
rorb
adc
xchg
addb
and
inc
and
int
std
cwtl
lcall
xor
xchg
mov
sub
or
int
std
int
std
cmp
mov
repnz
or
int
and
jbe
int
in
cmp
or
adc
dec
mov
cmc
int
cmc
cmp
or
adc
dec
lahf
xchg
lea
cmp
or
adc
imul
mov
lea
mov
jbe
dec
and
hlt
mov
insl
das
add
int
dec
push
insl
das
add
int
sbb
insl
das
add
int
and
jbe
int
mov
mov
addb
addl
cmp
mov
repnz
or
int
std
int
std
int
mov
lea
outsb
jo
lea
insl
das
add
leave
jbe
dec
and
int
xchg
pop
int
xchg
cmp
loop
mov
push
popf
or
int
std
int
sub
xor
bound
int
std
int
std
int
and
sbb
xchg
dec
inc
fst
push
cmc
int
adc
lods
int
cmc
cmp
add
call
jmp
shr
sub
int
dec
bound
xchg
jo
add
int
dec
int
xchg
int
jo
jge
xchg
jo
dec
xchg
int
xor
sbb
xchg
xchg
add
mov
or
pop
fs
das
mov
xor
jbe
int
std
int
std
cmp
add
shl
sub
mov
mov
and
jge
add
int
std
int
std
cmp
add
shl
sub
mov
jbe
int
stc
int
stc
add
cmp
repnz
mov
mov
pop
lea
addb
mov
lea
xchg
lea
or
jl
icebp
aam
clc
icebp
sub
xchg
in
xchg
int
jo
outsb
test
test
int
mov
lea
xchg
std
cmp
add
call
jmp
shr
sub
pop
lea
mov
popf
int
test
lds
add
sbb
stc
int
stc
cmp
shr
xchg
add
incl
push
adc
and
jbe
int
stc
int
stc
add
cmp
repnz
mov
lea
mov
pop
lea
add
int
and
sbb
cmp
lea
int
adc
lods
int
adc
sti
call
jmp
shr
sub
int
dec
bound
xchg
xchg
pop
add
push
insl
das
add
int
and
or
or
cmp
add
call
jmp
shrl
add
int
std
int
std
cmp
add
sarl
push
rorl
jbe
pop
push
jl
or
leave
jbe
sbb
shr
lahf
xchg
jbe
dec
and
xchg
iret
inc
shl
xchg
adc
scas
cmp
lea
add
cli
xchg
xchg
add
or
mov
jbe
or
iret
outsb
std
iret
jno
or
or
leave
push
jo
add
sub
pushf
add
add
pop
movsb
add
add
push
lods
add
add
xchg
add
sbb
les
add
popa
lahf
xchg
add
sbb
aam
add
call
iret
faddl
add
leave
push
in
add
mov
add
jbe
and
or
jbe
inc
lahf
xchg
jbe
pusha
lahf
xchg
and
int3
push
jo
add
shr
xchg
add
scas
or
test
add
sbb
addl
add
int
adc
inc
add
add
add
or
iret
jbe
jo
or
push
int
jge
icebp
int
std
int
std
cmp
add
sarl
push
rorl
jbe
int
std
int
std
cmp
add
call
lods
sub
jmp
push
jge
jbe
inc
rcl
xchg
or
in
das
int
int
jne
jbe
int
mov
int
sbb
mov
addl
addl
int
sub
xchg
dec
int
cmp
xor
jo
int
stc
int
stc
cmp
add
sarl
push
rorl
jbe
int
and
pop
mov
push
insl
das
add
add
and
lock
mov
push
insl
das
add
int
and
lock
mov
push
insl
das
add
lcall
push
insl
das
add
int
and
sbb
sbb
or
addl
int
dec
add
and
or
or
cmp
add
call
jmp
shrl
dec
and
int
mov
jbe
shr
xchg
adc
scas
cmp
sbb
insb
cmp
lea
lds
outsb
adc
jbe
leave
addb
sub
pushf
test
jbe
int
sub
outsb
mov
jbe
int
sub
outsb
dec
in
adc
jbe
int
cmp
lea
lds
outsb
adc
jbe
add
or
icebp
addl
cmp
int
arpl
xchg
cmp
test
shlb
xchg
int
jno
das
mov
mov
mov
leave
jbe
dec
and
push
lret
aam
popa
shll
xchg
out
xchg
pop
out
orb
mov
pop
out
cmpb
std
int
std
cmp
add
call
jmp
in
xchg
push
cld
add
std
add
test
sub
adc
dec
and
int
std
int
std
cmp
add
call
jmp
shr
sub
inc
stc
xorb
rorb
add
push
leave
jbe
mov
jbe
xchg
addb
addb
test
lods
addb
addb
addb
addb
addb
addb
addb
mov
stc
cmp
clc
add
repnz
and
movb
addb
or
cmc
icebp
lea
jnp
addb
addb
std
ss
pushf
addb
int
push
jp
addb
int
std
xchg
int
std
xchg
xor
jbe
int
in
sbb
cmpb
int
mov
fadds
jbe
xchg
popa
fists
xor
xchg
int
xor
out
adc
mov
subb
int
xchg
adc
mov
addb
clc
int
icebp
push
out
addb
icebp
adc
pop
push
addb
add
add
adcb
pop
cwtl
lcall
or
adc
addb
addb
addb
addb
addb
addb
addb
addb
addb
addb
addb
addb
addb
addb
movsl
dec
bound
addb
dec
pop
and
pop
xchg
mov
stc
xor
jbe
int
stc
sub
int
cmc
dec
inc
outsl
addb
xor
int
in
push
sarb
fisubrl
ret
add
clc
test
push
addb
int
mov
leave
das
sarl
fisttpl
xchg
mov
popa
addb
push
addb
addb
addb
addb
pop
lcall
xchg
lods
int
mov
int
popf
xor
int
xchg
cmpsb
push
addb
mov
ret
jbe
int
icebp
int
or
int
xchg
xor
inc
test
inc
or
rol
addb
cmp
clc
hlt
int
gs
ss
push
addb
add
xchg
jbe
int
stc
sub
int
cmc
dec
inc
outsl
addb
xor
int
in
push
sarb
hlt
int
dec
xor
int
mov
leave
das
rol
int
xor
das
pop
pop
add
add
mov
in
jo
jbe
xchg
aaa
ficoms
pop
mov
jbe
leave
jbe
mov
jbe
leave
jbe
fidivs
ficoms
or
pop
leave
jbe
scas
aaa
ficoms
or
cwtl
lcall
adc
jbe
cmp
cmp
pop
dec
and
out
ficoms
jp
jbe
int
or
iret
xchg
addl
push
ror
je
ror
xor
pushf
test
inc
loop
shr
xchg
int
int
test
insl
adc
cmpsb
mov
or
xchg
in
inc
jbe
das
or
jbe
add
mov
int
stc
push
insl
aam
cmp
out
int
mov
fs
xchg
mov
lret
xchg
add
xchg
stc
xchg
lret
int
lods
or
lret
int
stc
xchg
int
mov
adc
int
cmc
insb
add
std
sarl
push
sarb
rorl
jbe
push
cmc
int
cmc
add
call
repz
shrl
xchg
stc
inc
rolb
int
adc
xchg
stc
int
mov
test
int
stc
iret
adc
int
dec
shl
sub
cmp
or
push
adc
xchg
adc
call
repz
shrl
xchg
stc
xchg
xor
or
inc
lds
pop
outsl
add
add
jbe
int
mov
ljmp
mov
ror
popf
int
cmp
in
or
or
add
in
xchg
or
test
lret
rorb
add
adc
jbe
leave
jbe
dec
and
inc
and
cwtl
or
leave
jbe
into
and
in
inc
sbb
int
std
sar
shll
xchg
repnz
adc
out
xchg
push
add
lea
int
adc
jge
jmp
shr
sub
das
roll
jmp
addb
xchg
stc
cmp
shr
sub
jge
jmp
push
adc
xchg
std
int
std
cmp
cmp
shl
xchg
shl
sub
push
adc
xchg
stc
int
stc
aam
cmp
shl
sub
icebp
shl
xchg
push
jecxz
std
int
std
cmp
loope
jmp
shl
sub
aad
int
in
int
in
cmp
loope
jmp
shl
sub
cmp
in
sub
lock
sub
icebp
shl
xchg
push
jecxz
std
int
std
cmp
loope
jmp
shl
sub
aad
or
int
std
cmp
jmp
shr
sub
xchg
int
cmc
int
cmc
cmp
cmp
ljmp
int
std
int
std
cmp
cmp
shl
sub
repz
push
aad
adc
das
pop
pop
add
add
jbe
int
mov
jbe
arpl
rolb
insl
pop
jbe
aam
pop
jbe
fdivs
lret
or
das
adc
in
addb
lea
lret
or
insb
inc
jbe
subb
stc
std
add
cmpsb
rorb
adc
cmp
addb
xchg
jbe
inc
and
dec
sub
jno
cli
arpl
jbe
int
adc
subl
repnz
or
leave
jbe
into
and
inc
sbb
mov
int
std
int
std
cmp
shl
sub
jns
mov
lea
int
adc
jmp
shr
sub
das
rcl
in
outsb
int
cmc
int
cmc
sarl
push
sarl
lds
jbe
iret
jbe
jo
mov
jbe
int
stc
int
cmc
or
add
jbe
int
std
cmp
lock
push
roll
cmc
int
in
int
in
cmp
shl
sub
jns
mov
std
int
std
cmp
cmp
shr
xchg
shr
sub
xor
int
cmc
inc
jge
mov
jbe
int
mov
jns
lock
push
rorl
jbe
leave
jbe
bound
xchg
addb
jbe
cmp
shrl
jmp
push
jge
jbe
aad
or
int
mov
orb
in
lret
int
stc
das
pop
insl
cmp
or
int
in
int
in
cmp
mov
repnz
int
cmc
sub
int
push
popf
cld
add
int
popf
cmp
or
int
std
int
std
cmp
lock
push
roll
std
int
std
cmp
lock
push
sarl
jbe
int
adc
lea
cmp
cmp
repnz
mov
lea
imul
add
jbe
int
mov
jns
lock
sub
mov
int
stc
test
shll
rolb
in
xor
lret
pop
lcall
addb
roll
cwtl
sub
lahf
xor
std
or
stc
mov
lret
cmp
leave
jbe
adc
addb
mov
jecxz
mov
stc
iret
dec
into
mov
pop
das
mov
mov
das
mov
mov
fs
adc
das
mov
mov
mov
jge
pop
cmc
aam
leave
jbe
sbb
stc
int
mov
jecxz
mov
inc
in
dec
add
leave
jbe
push
addb
int
mov
lret
pop
dec
sub
push
add
add
cmc
sbb
push
jb
add
cmp
arpl
rolb
jecxz
mov
mov
adc
int
add
mov
inc
add
mov
adc
iret
js
or
iret
js
or
iret
js
or
iret
pop
or
cmp
addb
or
jbe
iret
pop
out
addb
pop
xor
pop
iret
pop
inc
addl
pop
xchg
addl
addb
xchg
icebp
or
or
mov
adc
or
and
lea
out
cmp
adc
jnp
ficoms
das
inc
cli
xchg
rcll
xchg
or
mov
out
int
or
cmp
shl
sub
int
mov
addb
cld
push
lock
stc
das
add
adc
mov
or
and
jbe
mov
movsl
int
jge
or
cmpsb
or
jnp
ficoms
das
inc
add
out
xchg
cmp
cmp
push
or
clc
add
add
add
lea
or
lea
icebp
mov
dec
stc
pop
sbb
mov
xor
std
xor
icebp
mov
xchg
adc
add
mov
jmp
and
lea
cmpsb
or
shr
sub
notl
shr
xchg
push
lock
aaa
ficoms
or
or
or
cmpsb
or
jnp
ficoms
das
inc
add
out
xchg
cmp
cmp
push
or
clc
push
comiss
xor
add
int
stc
push
imull
add
int
fs
push
faddl
int
and
jp
int
sbb
cltd
or
xchg
xchg
in
or
or
xchg
cmpsb
cmc
cmp
or
fcom
in
xchg
jbe
int
or
inc
lcall
ja
int
mov
xchg
mov
and
or
xchg
sbb
mov
jbe
or
push
addb
pusha
adc
jo
jbe
int
xor
int
stc
int
in
push
insl
aam
int
std
or
std
test
lea
movsl
push
or
or
int
test
lret
rolb
int
mov
pop
adc
mov
int
cmp
lret
pop
mov
shll
fwait
sbb
cwtl
int
pop
lahf
xor
cmp
jecxz
mov
xchg
add
xchg
das
mov
repz
mov
sbb
lds
sbb
jmp
dec
add
addl
mov
lret
cli
sbb
adc
or
sbb
leave
stos
lds
mov
addb
and
cmc
xchg
aaa
ficoms
or
aaa
ficoms
or
jbe
dec
and
inc
and
out
ficoms
or
fidivs
ficoms
or
int
adc
inc
icebp
xchg
shl
xchg
int
in
int
adc
ljmp
cmp
cmp
push
jns
jbe
iret
jbe
or
int
or
xor
ficoms
or
std
int
std
cmp
shr
xchg
sar
cmp
shr
sub
int
std
int
std
cmp
popf
shl
sub
xchg
int
std
int
std
cmp
popf
shl
sub
xchg
int
std
int
std
cmp
popf
shl
sub
xchg
or
nop
add
add
lea
icebp
cmp
shr
sub
jmp
push
adc
xchg
mov
cltd
cmp
in
push
aad
int3
pop
aam
add
int
dec
int
int
std
int
std
int
jo
popf
cmp
in
push
aad
int3
pop
aam
add
int
xor
xchg
xor
icebp
cmp
shr
sub
jmp
push
adc
xchg
std
int
std
cmp
cltd
shl
xchg
shl
sub
int
std
cmp
mov
shl
sub
xchg
int
adc
int3
pop
aam
add
int
adc
add
shl
sub
jns
mov
std
int
std
add
cmp
shr
sub
jmp
push
adc
xchg
std
int
std
cmp
repz
shl
sub
xchg
int
std
int
std
cmp
in
shl
xchg
push
aad
adc
add
add
push
nop
add
add
jbe
int
std
sar
cmp
or
mov
push
shll
jbe
iret
or
addb
addb
int
push
or
lea
shr
xchg
int
lods
int
mov
leave
cmp
push
icebp
bound
xor
repnz
inc
mov
int
lods
int
mov
inc
jge
shr
xchg
int
lods
int
mov
leave
cmp
push
icebp
bound
push
shl
sub
cmp
inc
sti
add
int
std
int
std
cmp
repnz
jns
mov
std
int
std
cmp
shr
xchg
cmp
shr
sub
xchg
int
std
int
std
cmp
shr
xchg
cmp
shr
sub
xchg
int
std
int
std
cmp
shr
xchg
cmp
shr
sub
xchg
or
nop
add
add
jbe
int
int
mov
aad
jmp
shr
sub
or
add
jbe
int
int
std
int
std
cmp
shr
xchg
int
jo
aad
ljmp
aam
add
int
sbb
lea
or
repnz
jns
mov
std
int
std
cmp
cmp
shr
sub
jmp
push
adc
xchg
std
int
std
cmp
hlt
call
in
push
aad
adc
add
add
jbe
int
std
add
call
repnz
jns
mov
std
int
std
add
cmp
shr
sub
jmp
push
adc
int
std
add
cmp
shr
sub
jmp
push
adc
pop
nop
add
add
xchg
std
int
std
xchg
cmp
int3
push
aam
add
int
sub
hlt
call
repz
shl
sub
iret
or
addb
addb
xchg
and
insl
aam
int
in
int
adc
inc
jge
shr
xchg
int
int
int
in
int
adc
fidivrl
lock
push
adc
xor
jo
xchg
push
in
push
int
int
push
lret
or
int
cmc
int
stc
das
inc
jge
shr
xchg
int
cmc
int
stc
cmp
cmp
shl
sub
lea
push
lds
int
inc
jo
lea
or
xchg
xchg
push
int
dec
int
int
xchg
sbb
dec
xchg
sub
lea
int
int
push
xor
int
int
xchg
jbe
or
das
inc
jge
shr
xchg
int
in
int
adc
leave
cmp
shl
sub
or
int
xor
les
in
int
adc
inc
jge
shr
xchg
int
in
int
adc
repnz
lea
leave
cmp
add
stc
push
inc
shrl
add
addb
movsb
dec
mov
jge
cmpsb
xor
lea
xchg
das
inc
rcll
jbe
int
xchg
shrl
cmp
cmp
push
or
cmpsb
stc
das
inc
popf
xchg
or
int
cmc
push
out
add
dec
shr
xchg
int
stc
cmp
mov
int
cmc
int
stc
das
inc
or
shrl
shr
xchg
int
stc
cmp
shrl
cmp
push
fcmovne
lea
mov
ror
icebp
or
int
xchg
das
inc
rcll
jbe
int
xchg
shrl
das
mov
cmp
dec
or
rorl
mov
or
and
shrl
ficoms
cmp
fidivs
ficoms
ss
or
cs
int
xor
add
mov
int
xor
xchg
int
orl
push
and
add
in
test
int
adc
jbe
leave
jbe
scas
aaa
ficoms
or
int
jne
inc
jge
shr
xchg
int
insl
int
jne
repnz
lea
cmp
cmp
push
shl
int
inc
inc
mov
int
xor
xor
insb
test
jbe
int
in
int
adc
inc
jge
shr
xchg
int
in
int
adc
fnstsw
leave
push
sub
adc
push
mov
std
int
std
cmp
shr
xchg
sar
cmp
shr
sub
int
std
int
std
cmp
popf
shl
sub
xchg
int
std
int
std
cmp
popf
shl
sub
xchg
int
std
int
std
cmp
xchg
shl
sub
xchg
or
nop
add
add
lea
xchg
mov
cltd
cmp
in
push
aad
int3
pop
aam
add
int
dec
int
int
std
int
std
int
jo
cltd
cmp
in
push
aad
int3
pop
aam
add
int
sbb
xchg
sbb
icebp
shr
sub
psrlq
xchg
push
adc
xchg
std
int
std
cmp
cltd
shl
sub
repz
push
aad
cmpsb
std
cmp
hlt
call
mov
push
lds
aam
add
int
std
int
std
cmp
shr
xchg
sar
cmp
shr
sub
int
std
int
std
cmp
popf
shl
sub
xchg
int
std
int
std
cmp
popf
shl
sub
xchg
iret
xchg
movsl
or
add
iret
nop
add
add
std
int
std
cmp
int
sub
icebp
shr
xchg
shr
sub
jno
pop
out
addb
addl
add
dec
int
mov
mov
dec
int
cmc
int
stc
das
inc
jecxz
shl
xchg
int
cmc
int
stc
cmp
shr
sub
xchg
cmc
cmp
push
bswap
stc
das
inc
sti
xchg
shr
xchg
int
cmc
int
stc
cmp
cmp
push
aad
adc
xchg
cmc
sarl
das
inc
sti
xchg
shr
xchg
int
cmc
int
stc
cmp
cmp
push
aad
adc
xchg
cmc
sarl
das
inc
sti
xchg
shr
xchg
int
cmc
cmp
int
stc
cmp
push
flds
dec
sarl
add
int
or
rclb
xchg
int
add
inc
pop
cwtl
lcall
popf
aaa
ficoms
pop
mov
jbe
leave
jbe
xchg
aaa
ficoms
or
leave
jbe
dec
mov
cmc
dec
lahf
xchg
and
cmp
xchg
and
jbe
int
sbb
shlb
jbe
int
sbb
add
xor
pop
xchg
fs
popf
int
and
out
int
movsl
das
inc
add
out
int
movsl
adc
cmpsb
mov
shr
sub
pop
push
aad
nop
int
or
int
xor
xchg
dec
iret
xchg
lods
bound
stc
jno
cwtl
add
sbb
jbe
add
mov
cmc
add
adc
in
jo
jbe
jo
stos
clc
add
or
int
sbb
lea
outsb
adc
jbe
leave
addb
lods
int
and
outsb
test
jbe
int
and
outsb
mov
jbe
int
and
outsb
dec
int
and
insb
and
addb
sbb
lea
or
and
xorb
or
int
std
stos
test
lret
rcrb
xchg
int
int
dec
adc
cmp
cwtl
lcall
push
mov
jbe
inc
and
dec
addb
ficoms
pop
mov
jbe
leave
jbe
xchg
aaa
ficoms
or
int
mov
jbe
int
cmc
int
mov
or
or
pop
jle
addb
mov
insl
mov
sarl
xor
mov
nop
xchg
iret
sahf
int
mov
aad
or
mov
jno
int
mov
leave
xchg
mov
ficomps
or
pop
mov
or
lret
mov
or
insb
add
add
push
add
add
outsb
add
add
add
inc
mov
add
iret
outsb
xor
add
add
xor
add
mov
add
int
mov
add
int
in
int
adc
inc
jge
shr
xchg
int
in
int
adc
cmpsb
mov
cmp
shl
sub
in
outsb
iret
aam
mov
int
das
mov
cmp
sti
and
shl
das
push
adc
int3
test
lea
inc
jecxz
shl
xchg
int
mov
mov
push
psrlq
sub
popa
int
in
int
adc
inc
jge
shr
xchg
int
in
int
adc
leave
cmp
shl
sub
in
outsb
iret
aam
add
sbb
mov
sti
and
shl
das
push
adc
int3
test
incl
add
lea
inc
jecxz
shl
xchg
int
mov
mov
push
psrlq
sub
popa
int
in
int
adc
inc
jge
shr
xchg
int
in
int
adc
leave
cmp
shl
sub
in
je
push
jbe
add
add
sbb
mov
sti
and
shl
das
push
adc
int3
test
lea
inc
jecxz
shl
xchg
int
mov
mov
push
psrlq
sub
mov
add
or
int
stc
pop
inc
pop
inc
xchg
or
daa
or
int
mov
add
int
mov
mov
xor
pusha
addl
addb
mov
add
int
mov
add
pop
es
push
std
incl
add
xor
push
incl
add
xor
push
addb
add
or
xchg
add
add
jbe
pop
dec
xor
iret
test
add
add
bound
add
pop
push
xor
iret
mov
add
add
pushf
mov
add
int
mov
add
pop
add
addb
add
cmp
adc
cmpb
add
mov
addb
add
pop
lcall
adc
add
int
xor
call
repnz
or
adc
jbe
int
dec
cmp
mov
shl
sub
leave
add
add
add
incl
add
jbe
int
xor
jns
mov
shl
sub
jo
push
stc
incl
add
jbe
int
cmp
push
sbb
add
inc
lret
fwait
xor
adc
icebp
or
int
stc
push
insl
aam
adc
or
fmull
int
dec
int
dec
sar
setl
icebp
shr
sub
jmp
push
adc
xchg
cmc
int
and
dec
das
push
popa
test
int
dec
cmp
shr
xchg
cmp
shr
sub
int
cmc
int
in
addb
int
dec
cmp
shr
xchg
cmp
shr
sub
int
cmc
int
add
pop
xor
mov
add
int
mov
add
pop
es
iret
sub
add
pop
daa
xor
iret
xor
add
add
test
add
add
xor
iret
cmp
add
add
mov
or
cmp
add
pop
fwait
xor
iret
inc
add
add
or
or
inc
add
add
xor
iret
dec
add
add
pop
addb
add
pop
cmp
addb
add
jns
movsl
cmpsl
pop
pop
adc
iret
push
add
add
pop
mov
add
jns
fisttps
jbe
inc
jns
loope
pop
fcom
addb
add
jns
lods
push
pop
jnp
addb
add
jns
repnz
ljmp
mov
add
jns
in
int
xor
xchg
xor
icebp
shr
xchg
shr
sub
in
xchg
int
xor
out
cmp
stc
shr
sub
xor
das
pop
mov
int
xor
out
cmp
stc
shr
sub
int
stc
add
adcl
fwait
addb
movsw
int
xor
lea
cmp
sub
repz
push
jecxz
stc
xchg
int
xor
out
cmp
xchg
shr
sub
add
mov
stc
inc
adc
int
xor
icebp
shr
xchg
shr
sub
or
adc
lea
dec
cmp
cmp
shr
sub
jmp
push
adc
xchg
movsl
or
add
xor
mov
rcl
int
mov
loopne
mov
leave
test
loopne
mov
leave
loop
or
cmp
cli
mov
add
cld
mov
add
cli
mov
loopne
mov
leave
test
loopne
mov
leave
loop
or
popa
mov
or
or
int
dec
cmp
cmp
shr
sub
jmp
push
adc
xchg
dec
int
dec
cmp
mov
jmp
mov
or
int
dec
int
dec
cmp
cmp
shr
xchg
shr
sub
int
dec
iret
mov
out
shl
xchg
cmp
shr
sub
das
mov
or
int
dec
int
dec
cmp
shr
sub
psrlq
xchg
push
adc
xchg
dec
int
dec
cmp
stc
shr
sub
mov
incl
add
lea
dec
cmp
shr
sub
psrlq
xchg
push
adc
xchg
dec
int
dec
cmp
stc
shr
sub
mov
incl
add
lea
int
xor
icebp
cmp
shr
sub
jmp
push
adc
xchg
xor
out
cmp
xchg
shr
sub
xchg
or
adc
lea
dec
int
mov
icebp
cmp
shr
xchg
shr
sub
iret
push
nop
incl
add
add
add
jbe
mov
int
xor
xchg
xor
cmp
stos
cmp
shr
xchg
shr
sub
or
add
jbe
int
dec
cmp
mov
repnz
aam
iret
push
adc
int
xor
lea
cmp
mov
repnz
jo
push
and
add
jo
jbe
rolb
int
dec
cmp
lock
mov
mov
push
ror
iret
movsb
incl
add
int3
push
sbb
jbe
mov
int
xor
xchg
xor
psrlq
xchg
add
call
ljmp
sbb
sub
xor
push
jo
add
iret
mov
mov
add
pop
adc
push
bound
add
int
mov
add
int
mov
add
add
sub
jge
or
mov
mov
mov
add
add
pusha
mov
add
iret
mov
or
les
add
int
mov
add
iret
loopne
pop
add
iret
enter
iret
mov
mov
add
mov
add
add
stc
mov
add
int
pop
leave
xor
iret
addb
add
jge
or
aam
add
int
mov
add
cmp
or
add
add
addr16
add
leave
push
lods
add
add
xor
fadds
add
jae
jno
mov
int
xor
xchg
xor
call
repnz
jns
mov
lea
add
cmp
repz
push
jecxz
lret
add
sbb
lret
cmp
inc
cli
das
or
addb
das
add
addb
xchg
xor
psrlq
xchg
add
call
ljmp
aad
cmp
add
lea
int
xor
psrlq
xchg
add
call
jmp
jge
int
lea
add
mov
repnz
mov
jecxz
lea
int
xor
psrlq
xchg
add
call
jmp
jge
or
add
lea
int
xor
sti
call
jmp
shr
sub
int
xor
add
cmp
repz
push
jecxz
lret
add
sbb
lret
cmp
inc
cli
das
or
pop
pop
add
add
cmpsb
mov
jne
jbe
int
mov
or
insb
test
jbe
int
jge
inc
jge
shr
xchg
int
jne
xchg
jge
leave
cmp
push
icebp
int
cmc
bound
jo
push
cmc
incl
add
repnz
int
in
int
adc
inc
jge
shr
xchg
int
in
int
adc
repnz
iret
cmc
incl
add
mov
leave
cmp
push
rolb
das
push
push
addb
jbe
ficoms
pop
mov
jbe
or
int
xchg
int
popf
das
inc
jge
shr
xchg
int
xchg
int
popf
cmp
cmp
push
icebp
bound
xor
repnz
pop
xor
push
repnz
int
xchg
int
popf
das
inc
jge
shr
xchg
int
xchg
int
popf
cmp
cmp
push
icebp
bound
pop
xor
repnz
pop
sub
xchg
repnz
int
xor
mov
jle
xchg
lea
inc
rcll
jbe
int
icebp
cmp
shrl
ror
lea
push
jge
dec
int
popf
addl
jbe
int
xor
cmp
cmc
add
sub
and
sbb
adc
test
add
or
adc
add
int
cmp
fcoml
aam
int
cmp
fsubl
aam
int
adc
add
int
cmp
outsb
sbb
push
add
cmp
cmc
mov
stos
test
lret
shlb
xchg
int
jno
cwtl
leave
jbe
dec
and
inc
and
int
std
sar
shll
xchg
sti
sarl
push
jns
mov
int
std
aam
int
std
cmp
cmp
sarl
push
jns
dec
inc
adc
pop
int
xor
jbe
cmp
push
add
push
pop
lret
or
das
push
fcmovbe
dec
add
adcl
fwait
addb
dec
adc
in
addb
lea
lret
or
js
clc
orb
int
stc
cmp
int
stc
add
ljmp
std
cmp
int
std
cmp
shl
sub
mov
lret
rorb
int
add
leave
jbe
dec
and
xchg
jbe
or
int
adc
add
lea
addl
lea
std
cwtl
lcall
jns
mov
shl
sub
or
int
std
int
std
cmp
mov
repnz
or
int
mov
insb
jo
mov
int
mov
insb
pop
int
mov
push
outsb
xchg
int
mov
sbb
insb
pop
int
mov
jle
jl
icebp
sub
jbe
int
pop
xchg
in
xchg
insb
xchg
or
int
std
int
std
cmp
lock
push
rorl
jbe
int
std
int
std
cmp
lock
sub
mov
jbe
int
std
int
std
cmp
cmp
repnz
mov
lea
or
jbe
cmp
xchg
and
imul
xchg
int
std
cmp
lock
push
rorl
jbe
int
mov
jbe
add
popf
add
dec
int
mov
neg
add
or
int
adc
insl
aam
int
popf
or
int
movsl
int
dec
xor
or
int
adc
lea
dec
int
movsl
inc
jge
sbb
jbe
int
dec
int
adc
outsb
mov
lea
test
xchg
jbe
inc
and
cmp
xchg
and
or
iret
jbe
or
iret
jbe
or
iret
jbe
or
int
std
int
std
cmp
lock
push
rorl
jbe
jmp
xchg
and
xchg
popf
iret
jbe
jo
xlat
filds
add
jbe
int
stc
cmp
lock
sub
mov
jbe
or
int
xchg
sarl
in
push
popf
or
int
stc
cmp
shl
sub
jns
mov
stc
int
stc
cmp
cmp
shr
xchg
shr
sub
xchg
int
movsl
or
sub
jbe
int
stc
cmp
lock
push
shll
dec
iret
jbe
jo
sti
std
add
int
std
int
std
cmp
lock
sub
mov
lea
int
std
int
std
cmp
lock
push
shll
dec
iret
jbe
jo
mov
jbe
int
cmc
int
int
cmp
cmp
repnz
mov
je
ror
std
int
std
cmp
cmp
shr
xchg
shr
sub
pop
insl
push
adc
das
add
int
adc
lea
int
int
cmp
cmp
repnz
mov
je
ror
std
int
std
cmp
cmp
shr
xchg
shr
sub
pop
insl
push
adc
das
add
int
adc
lea
lock
repnz
mov
je
ror
std
int
std
cmp
cmp
shr
xchg
shr
sub
pop
insl
push
adc
das
add
int
in
int
in
int
int
cmp
cmp
repnz
mov
je
ror
std
int
std
cmp
cmp
shr
xchg
shr
sub
pop
insl
push
adc
das
add
int
adc
lea
int
int
cmp
shl
sub
jns
mov
je
ror
cmc
int
int
cmc
int
cmp
shr
xchg
cmp
shr
sub
lret
rolb
int
adc
mov
xchg
adc
and
psrlq
xchg
cmp
shr
sub
lret
rorb
int
cmc
int
int
cmc
int
cmp
cmp
shr
xchg
shr
sub
lret
push
pusha
jge
push
mov
jbe
int
adc
mov
cmpb
shl
sub
jns
mov
je
ror
lea
int
int
adc
and
psrlq
xchg
cmp
shr
sub
lret
rolb
int
in
int
int
in
int
cmp
shr
xchg
cmp
shr
sub
lret
rorb
int
adc
mov
xchg
adc
and
jmp
shr
sub
lret
push
pusha
jge
push
cmc
addb
in
int
int
cmp
shl
sub
jns
mov
je
ror
lea
int
cmp
shr
xchg
cmp
shr
sub
lret
rolb
int
cmc
int
int
cmc
int
cmp
shr
xchg
cmp
shr
sub
lret
rorb
int
adc
mov
xchg
adc
and
jmp
shr
sub
lret
push
pusha
jge
push
add
in
int
in
int
int
cmp
shl
sub
jns
mov
je
ror
cmc
int
int
cmc
int
cmp
shr
xchg
cmp
shr
sub
lret
rolb
int
adc
mov
xchg
adc
and
psrlq
xchg
cmp
shr
sub
lret
rorb
int
in
int
int
in
int
cmp
cmp
shr
xchg
shr
sub
lret
push
pusha
jge
xor
jbe
jo
outsl
lods
add
int
pop
inc
rcl
push
int
std
int
std
cmp
cmp
repnz
mov
jbe
int
stc
int
stc
int
stc
int
stc
cmp
xchg
shrl
cmpsb
gs
xchg
cmp
add
std
add
std
shr
sub
hlt
dec
and
int
std
cmp
cmp
repnz
mov
lea
push
std
add
int
std
int
std
cmp
lock
sub
mov
lea
int
stc
int
stc
cmp
lock
push
shr
jle
addb
popf
iret
jbe
jo
jge
add
int
std
int
std
cmp
lock
sub
mov
lea
int
stc
int
stc
cmp
lock
sub
mov
lea
int
stc
int
stc
cmp
lock
push
shll
iret
jbe
jo
das
cli
add
int
std
int
std
cmp
lock
push
shll
iret
jbe
jo
sti
stc
add
int
popf
xchg
or
add
cmp
jbe
xchg
jo
push
fildl
add
jbe
int
std
cmp
lock
sub
mov
lea
int
stc
int
stc
cmp
lock
sub
mov
lea
int
stc
int
stc
cmp
mov
repnz
jo
cmp
jbe
jo
add
jbe
int
std
cmp
mov
repnz
jo
cmp
jbe
jo
jb
add
int
inc
int
inc
cmp
cmp
shr
xchg
shrl
lea
addl
jo
cmp
lea
add
jbe
int
cmp
cmp
jbe
int
stc
int
stc
cmp
shl
sub
jns
mov
lea
std
int
std
cmp
cmp
shr
xchg
shr
sub
xchg
or
cli
add
int
mov
xor
in
adc
cwtl
lcall
add
xchg
mov
or
dec
int
mov
cmpsb
dec
or
pop
jnp
ficoms
cmp
pop
mov
adc
inc
sti
xchg
shr
sub
clc
addb
cmp
push
clc
int
sbb
aad
sbb
das
adc
je
push
ja
xchg
shr
addl
xchg
mov
dec
int
mov
dec
int
mov
cmpsb
dec
cmp
cmp
das
inc
sti
xchg
shr
sub
clc
addb
aad
out
xchg
push
clc
int
xor
cmpsb
adc
popf
int
xor
cli
int
adc
inc
loope
shrl
cli
push
addb
push
popf
int
mov
bswap
dec
int
xor
cmpsb
adc
lods
std
add
std
shr
sub
ficoml
aaa
ficoms
adc
mov
clc
aam
ficoms
adc
mov
leave
sbb
push
jge
cltd
pop
mov
add
aaa
ficoms
cmp
adc
out
ficoms
sbb
das
adc
das
stos
push
in
xchg
imul
and
addb
dec
int
mov
out
cmp
pop
jnp
ficoms
cmp
das
inc
sti
xchg
shr
xchg
cmp
shl
sub
cmc
push
fxch
out
imul
cmpsb
and
and
cmpsb
adc
xchg
fiaddl
aam
add
xor
and
sub
std
add
sub
add
or
or
mov
out
cmp
cmp
das
inc
add
out
int
mov
cmpsb
dec
shr
sub
dec
cmc
cmp
push
clc
int
xor
cli
push
aad
cmpsb
adc
popf
int
int
xor
or
cmpsb
adc
inc
jge
shr
sub
fst
jmp
adc
addb
lock
icebp
sbb
and
mov
cmpsl
cmp
sbb
jbe
int
dec
int
mov
dec
adc
mov
jnp
ficoms
das
inc
jge
int
cmp
cmp
sarl
jmp
adc
addb
divps
test
aam
adc
gs
jo
mov
ss
das
sbb
mov
test
lret
shrb
xchg
int
add
dec
int
mov
lea
jge
shr
xchg
int
mov
xchg
dec
cwtl
shl
sub
lea
cmpsb
mov
cmp
push
rorb
or
xor
mov
jbe
int
xor
addb
int
adc
adc
test
nop
jo
add
or
lea
jge
shr
xchg
int
mov
xchg
dec
add
and
jns
ficoml
or
iret
jbe
jo
add
sbb
repnz
adc
xor
dec
add
mov
int
mov
lea
jge
shr
xchg
int
mov
xchg
dec
cmp
fcmovbe
repnz
das
push
rolb
aam
int
xor
lea
inc
jge
shr
xchg
int
xor
xchg
adc
jns
fcmovbe
repnz
lea
shrb
shll
or
adcb
lcall
xchg
inc
int
and
mov
jnp
ficoms
inc
icebp
das
or
addb
test
jnp
inc
hlt
mov
das
add
adc
jno
ficoms
mov
das
add
adc
xchg
aaa
ficoms
mov
das
add
adc
cmpsb
aaa
ficoms
test
aam
adc
scas
aaa
ficoms
mov
das
add
adc
mov
ficoms
das
push
into
addl
sub
addl
adc
xor
dec
add
mov
jmp
addl
mov
das
add
adc
xchg
aaa
ficoms
mov
das
add
adc
aaa
ficoms
test
aam
adc
fidivs
ficoms
mov
das
add
adc
out
ficoms
in
iret
int
mov
dec
int
mov
cmpsb
dec
cmp
cmp
das
inc
sti
xchg
shr
sub
clc
addb
cmp
push
clc
int
mov
int
dec
xchg
sbb
or
int
mov
dec
int
mov
cmpsb
dec
cmp
cmp
das
inc
sti
xchg
shr
sub
fst
out
xchg
adc
addb
clc
ds
xor
adc
xchg
cmp
inc
int
xor
adc
xchg
xor
adc
out
int
adc
adc
jecxz
inc
sti
xchg
shr
sub
fstl
clc
addb
push
clc
int
cmp
aad
cmpsb
inc
cmp
cmp
lea
loope
cmp
shrl
subb
lea
shr
xchg
push
popf
xchg
int
adc
hlt
add
std
shr
sub
insl
adc
aam
ficoms
adc
mov
out
int
inc
add
std
adc
aam
ficoms
adc
mov
lock
and
aad
rclb
or
and
not
aaa
ficoms
cwtl
add
xor
sub
add
sbb
adc
xor
dec
add
mov
or
arpl
sarb
int
mov
dec
int
mov
cmpsb
dec
cmp
cmp
das
inc
sti
xchg
shr
sub
clc
addb
cmp
push
aad
clc
int
xor
cmpsb
adc
fsts
or
int
cmp
inc
int
xor
adc
xchg
mov
dec
int
mov
dec
int
mov
cmpsb
dec
cmp
cmp
das
inc
sti
xchg
shr
sub
clc
addb
aad
out
xchg
push
clc
int
xor
cmpsb
adc
cli
cmp
lea
inc
loope
cmp
push
cli
shrl
subb
push
popf
int
cmp
lea
int
cmp
hlt
int
inc
adc
mov
jnp
ficoms
das
inc
jge
shr
sub
jmp
cmp
adc
addb
lds
lea
out
int
adc
repnz
add
std
adc
aam
ficoms
adc
aam
ficoms
shr
sub
insl
adc
mov
hlt
mov
lock
jmp
incl
add
sbb
pop
aaa
ficoms
or
and
jbe
xchg
aaa
ficoms
or
int
adc
cmc
lcall
xchg
int
adc
out
jo
sti
cmpsb
mov
jno
xchg
std
int
dec
or
iret
jbe
add
mov
mov
dec
add
in
add
mov
adc
stos
or
int
std
test
rorb
add
stc
add
inc
cwtl
leave
je
xor
addb
addb
xor
xor
sub
and
sbb
adc
xor
dec
add
mov
int
mov
je
test
je
xor
insl
das
add
int
xor
push
insl
das
add
add
xor
add
xor
add
xor
int
xor
add
int
xor
int
xor
int
xor
iret
jbe
or
int
xor
xchg
or
int
xor
int
xor
int
xor
int
and
xor
aam
mov
add
sbb
or
xor
push
int
fs
xchg
sbb
push
int
xchg
pop
sbb
add
addl
dec
int
xor
xchg
or
or
xor
push
insl
das
push
cwtl
addl
addl
je
test
add
orb
xor
int
xor
int
or
int
or
int
xor
int
int3
addl
dec
int
xor
int
xor
int
popf
addl
or
imul
jns
add
sarl
push
jge
mov
leave
je
mov
je
xor
insl
aam
int
xor
add
adc
jl
cmp
and
add
xor
add
xor
add
xor
add
xor
int
xor
add
in
cmp
aam
and
aam
and
aam
and
je
push
add
in
and
aam
adc
je
cmp
icebp
in
xchg
je
xor
icebp
or
int
xor
push
insl
aam
int
xor
leave
add
and
mov
mov
int
movsl
addl
and
mov
mov
cmp
add
shl
sub
mov
mov
inc
rcl
and
je
test
mov
int
movsl
addl
addb
cmp
push
iret
jbe
or
int
xor
int
xor
int
in
addb
je
test
add
addl
or
or
adc
mov
int
in
addb
mov
sub
lds
gs
popa
ja
jne
outsl
insl
jne
add
jno
jb
bound
dec
popa
addr16
addr16
js
bound
insb
outsl
add
je
jo
outsl
outsl
push
gs
outsl
jae
jne
imul
jae
dec
jne
imul
gs
outsl
jbe
jae
insb
push
gs
push
outsl
data16
popa
jns
gs
jo
outsl
insb
insb
jo
imul
gs
jne
jae
addr16
jo
gs
outsl
ja
add
outsb
je
gs
popa
je
outsl
jo
insb
fs
arpl
dec
outsl
imul
push
imul
add
je
gs
insb
jne
add
imul
insl
jo
outsb
outsl
add
jae
outsb
add
push
add
add
arpl
push
add
add
push
add
js
jns
push
add
jb
arpl
add
outsl
add
dec
add
outsb
add
je
outsl
add
outsl
add
popa
add
add
dec
add
outsb
add
add
outsb
add
popa
add
add
inc
add
jne
jae
je
add
push
add
jb
jns
add
push
add
popa
add
push
add
insb
add
je
imul
add
add
jo
add
jns
je
push
add
outsl
add
push
add
jo
jns
add
bound
outsl
add
inc
add
popa
add
add
jae
add
add
or
add
xor
add
push
adc
xchg
adc
mov
and
adc
add
adc
add
adc
lcall
add
or
add
add
adc
or
pop
adc
out
adc
mov
addb
addb
addb
addb
addb
addb
addb
addb
addb
addb
addb
addb
addb
addb
addb
addb
addl
xchg
addl
sahf
addl
cmpsb
addl
scas
addl
mov
inc
add
addl
movb
add
addl
mov
adc
pop
cmp
add
adc
jbe
adc
or
add
sbb
add
sub
add
adc
movsb
inc
adc
jecxz
adc
shlb
push
push
adc
pop
inc
adc
xchg
rcrl
add
je
add
adc
fldcw
add
pop
adc
nop
push
adc
scas
push
adc
hlt
jbe
add
pop
adc
mov
data16
pop
dec
adc
mov
adc
sub
adc
xchg
cmp
add
addl
fiadds
inc
add
addl
out
addl
testb
add
addl
push
addb
addb
addb
addb
and
add
adc
and
inc
adc
ss
adc
leave
jno
add
cmp
add
inc
adc
mov
pop
adc
dec
sub
add
xor
add
adc
jl
adc
xchg
jle
add
data16
push
addb
addb
addb
addb
addb
addb
addb
addb
addb
addb
addb
addb
addb
addb
addb
addb
imul
mov
adc
addr16
add
add
cmp
add
adc
jecxz
adc
push
or
add
adc
push
dec
adc
mov
adc
sarl
add
add
adc
test
addb
addb
addb
addb
addb
addb
addb
addb
addb
addb
addb
addl
addl
addl
addl
addl
add
je
dec
add
add
add
add
add
add
add
add
add
add
add
add
add
add
inc
test
add
add
test
add
add
mov
add
lods
test
add
test
add
test
add
test
add
test
add
add
and
add
xchg
add
add
pop
xchg
add
add
jle
add
add
add
lahf
add
addb
add
mov
xchg
add
xchg
add
xchg
add
xchg
add
xchg
add
xchg
add
xchg
add
xchg
add
add
dec
xchg
add
add
push
add
jp
add
addb
add
xchg
add
xchg
add
xchg
add
xchg
add
mov
add
mov
add
mov
add
add
mov
add
add
add
orb
add
mov
add
add
fimuls
add
decb
add
mov
add
add
inc
mov
add
add
add
jp
add
mov
add
lods
mov
add
mov
add
mov
add
mov
add
add
add
add
push
mov
add
mov
add
add
push
mov
add
add
xchg
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
add
pop
mov
add
add
test
add
mov
add
les
add
in
mov
add
mov
add
mov
add
add
mov
insb
imul
je
add
inc
add
je
dec
inc
inc
outsl
insb
outsl
jb
popa
bound
add
add
jb
popa
insb
imul
arpl
add
je
jb
arpl
imul
xchg
add
gs
je
inc
dec
inc
push
arpl
outsb
add
popl
inc
jb
popa
je
inc
inc
push
add
add
je
imul
je
js
add
add
je
arpl
outsb
add
fadds
push
gs
imul
add
inc
gs
bound
arpl
add
popa
je
inc
outsl
outsb
je
outsb
imul
xchg
inc
gs
gs
inc
js
outsb
je
outsl
imul
mov
popa
je
dec
inc
push
add
add
popa
jb
inc
outsl
arpl
add
push
gs
imul
addr16
js
add
outsl
dec
push
add
std
add
je
gs
inc
outsl
insb
outsl
jb
add
add
je
push
fs
xor
push
add
add
jne
inc
outsl
outsb
je
popa
insl
imul
add
je
dec
inc
imul
xor
fs
insb
add
inc
inc
push
push
xor
cs
insb
add
xchg
inc
gs
insb
addr16
jb
arpl
add
je
outsb
jne
je
insl
push
arpl
add
imul
je
gs
add
add
arpl
insb
addr16
jne
je
outsb
add
addb
push
outsb
outsl
ja
jae
outsb
arpl
add
imul
popa
jae
push
add
xchg
add
outsb
jae
popa
je
inc
arpl
insb
gs
je
jb
add
add
fs
imul
add
je
popa
jb
je
outsl
jae
scas
add
ja
fs
pop
add
gs
je
inc
imul
jb
insl
inc
add
out
inc
jb
insl
gs
arpl
add
je
jo
popa
je
push
arpl
add
je
inc
add
push
imul
outsl
arpl
add
add
imul
push
add
je
outsl
jb
outsb
jo
je
fs
add
hlt
add
jae
push
push
dec
gs
popa
addr16
add
xchg
add
outsb
jae
popa
je
dec
gs
popa
add
test
dec
outsb
jae
jb
dec
outsb
jne
je
insl
push
add
add
outsb
fs
imul
push
add
ja
gs
inc
add
add
je
insb
popa
jae
dec
outsl
outsb
addr16
add
imul
add
cmp
inc
gs
outsb
jne
je
imul
add
outsb
fs
gs
popa
addr16
imul
add
push
jo
popa
dec
jne
gs
arpl
or
inc
imul
jae
push
outsb
imul
outsb
fs
gs
popa
addr16
add
popf
add
insb
outsl
addr16
outsl
js
popa
jb
insl
push
add
push
gs
outsl
arpl
add
stos
add
fs
imul
add
je
insb
popa
jae
dec
outsb
outsw
inc
js
add
popa
insb
imul
add
inc
jb
popa
je
inc
imul
jb
insl
push
add
or
inc
gs
inc
inc
js
repz
je
popa
jb
je
outsl
jae
xchg
add
je
outsl
jns
arpl
insb
gs
je
jb
popa
bound
ret
jbe
jo
imul
lds
dec
jae
push
jo
popa
push
add
sti
add
je
insb
popa
jae
dec
popa
insl
gs
add
push
gs
outsb
jne
gs
jne
je
je
insl
add
pop
add
je
jns
inc
outsl
insb
outsl
jb
add
add
push
gs
ja
imul
cmp
arpl
popa
imul
outsb
add
xor
jb
outsl
dec
gs
push
add
jnp
push
push
jb
outsl
jb
add
add
je
arpl
gs
imul
add
arpl
outsl
jo
jo
outsb
jne
add
add
je
jae
outsb
arpl
jns
je
je
add
xchg
add
je
outsl
jns
arpl
add
inc
push
xor
cs
insb
add
add
addr16
gs
gs
push
popa
insb
jne
inc
add
push
gs
popa
insb
jne
inc
js
add
pop
add
jns
je
gs
jb
jns
gs
popl
push
gs
gs
popa
insb
jne
inc
js
add
das
add
je
data16
outsl
outsl
je
outsl
outsb
imul
je
jae
add
push
gs
insb
outsl
jae
dec
gs
inc
fs
jo
xor
cs
insb
add
arpl
cs
add
bound
push
gs
insb
insb
outsl
arpl
sbb
inc
jb
outsl
jb
outsl
fs
mov
inc
outsl
insl
jo
jb
push
je
imul
add
jae
jb
jo
inc
add
adc
inc
jne
insb
imul
outsb
fs
add
push
gs
push
inc
data16
dec
popa
jae
add
add
fs
imul
add
sub
dec
outsl
arpl
push
imul
push
jns
je
insl
push
imul
insb
gs
imul
inc
gs
gs
inc
jb
je
arpl
push
arpl
outsb
add
add
gs
popa
outsb
fs
gs
outsl
jne
je
add
push
jne
jb
push
gs
outsl
jb
popa
outsb
arpl
outsl
jne
je
jb
testl
imul
and
insl
push
gs
jne
arpl
jns
gs
add
lcall
insb
inc
gs
je
insl
dec
popa
insl
gs
add
loop
inc
jb
popa
je
dec
popa
insl
gs
imul
add
je
outsl
arpl
gs
outsb
outsw
inc
add
lar
je
outsl
fs
gs
imul
add
pop
add
popa
insb
push
imul
insb
gs
jb
outsl
insl
insl
inc
jb
popa
imul
pusha
add
outsb
fs
imul
gs
add
push
add
je
jne
bound
inc
outsl
jb
popa
je
add
dec
inc
push
dec
inc
dec
xor
cs
insb
