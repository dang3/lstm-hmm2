push
mov
sub
sbb
mov
mov
mov
add
mov
decl
mov
sbbl
push
push
sub
mov
movl
cmpl
je
cmpl
jne
pushl
pushl
pushl
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
adc
xor
push
mov
mov
sub
imul
mov
adcl
add
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
call
cmpl
jne
mov
inc
mov
jmp
or
jmp
test
push
movsb
jb
jl
pop
or
es
jle
jle
jg
jle
xlat
cmp
pop
add
shld
bswap
and
sbb
inc
fs
out
mov
es
test
call
add
dec
stos
push
sub
sarb
mov
stos
push
rcl
test
pushf
mov
dec
out
dec
call
mov
and
jnp
ret
xchg
sub
loopne
cld
ljmp
sub
add
sbb
outsl
insl
add
cmp
jno
ds
or
adc
jge
inc
dec
aaa
adc
ja
sbb
ds
hlt
leave
mov
jns
xchg
cmpsb
cmpsb
mov
lds
mov
cmp
lods
gs
jne
or
pop
cmpsb
cmp
adc
add
shlb
insb
jae
cmp
jp
jg
xchg
sub
mov
mov
daa
inc
or
mov
jne
sbb
inc
leave
mov
movsl
std
dec
mov
jg
scas
iret
mov
mov
push
in
cmpsb
dec
and
rcll
test
add
push
std
push
or
or
enter
xchg
lea
repnz
popa
cmp
adc
sub
rclb
jmp
add
ja
mov
pop
push
and
dec
addb
mov
add
xor
into
in
hlt
add
mull
mov
pop
scas
mov
in
mov
dec
out
xchg
ret
cmpsb
pop
das
int
sbb
aad
add
add
jg
inc
add
push
add
mov
adc
mov
orl
mov
xor
xor
neg
add
mov
movl
lea
sbb
mov
mov
mov
andl
xor
add
inc
mov
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
add
xor
add
mov
decl
mov
mov
mov
sbbl
mov
adcl
mov
xorl
movzwl
add
mov
jmp
fisubl
addb
lods
gs
aam
dec
xchg
mov
loope
jg
jle
jg
jle
add
cmc
cmp
jmp
cmp
cmp
sahf
setbe
outsl
out
cli
pop
lea
and
out
test
mov
orb
xchg
scas
mov
sarb
test
push
jo
pop
adc
push
pop
mov
cmp
mov
daa
add
or
push
or
lods
sub
or
sahf
xor
push
insl
loope
push
cltd
sub
adc
mov
fists
sub
fstpt
push
cli
adc
dec
outsl
cmc
sahf
fisttpl
rcr
xor
inc
push
inc
imul
push
loope
fists
xchg
jb
aaa
divl
jg
outsb
add
nop
ficoml
dec
sbb
dec
push
mov
test
ficoml
add
pop
xchg
es
dec
mov
notl
lret
sub
or
lahf
lret
test
clc
mov
leave
and
adc
xchg
and
lret
bound
lods
jp
clc
mov
dec
mov
dec
test
xchg
dec
sbb
sahf
mov
pop
dec
cld
lret
jae
and
push
int3
adc
xlat
fs
cmpb
pop
movsb
add
jnp,pt
jecxz
mov
push
xchg
jl
or
cmp
mov
jmp
or
inc
xchg
mov
pushf
adc
aad
arpl
sahf
paddsw
cmp
and
mov
aaa
xor
les
or
sbb
sbb
adc
imul
inc
inc
add
or
mov
xor
addl
add
movl
cmp
movl
jne
andl
mov
inc
mov
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
xor
or
mov
sub
and
mov
mov
addl
xor
orl
add
movl
cmp
jmp
cmp
sub
mov
inc
mov
fsubr
jns
jle
jg
jle
leave
fisubrl
pop
lretw
test
lods
out
cli
fldcw
mov
popa
int
in
fucom
jne
push
test
xchg
fnstenv
jae
mov
or
sub
ror
pop
icebp
mov
cmp
pop
xchg
add
mov
inc
sahf
in
xchg
push
out
add
xchg
cmp
pop
je
xlat
cvtpi2ps
or
test
jp
inc
bound
ds
inc
xchg
sub
cmpsl
cs
cwtl
mov
in
adc
fwait
ret
gs
scas
mov
push
dec
int
int
push
inc
jmp
push
jmp
and
mov
fistps
mov
fnsave
push
jl
outsl
movsl
adc
pop
xchg
rcrb
jp
adc
and
mov
lds
loope
dec
fldl
addb
jle
mov
loopne
xor
lret
pop
mov
out
adc
bound
jge
dec
cwtl
ds
jns
inc
jge
mov
inc
and
fwait
neg
sub
inc
call
in
fstl
sub
sub
jle
mov
lds
inc
pop
in
pushl
ret
dec
adc
adcl
mov
insb
orb
lods
xchg
leave
fidivl
repz
mov
popf
mov
mov
adc
lock
fstpl
into
in
jno
inc
je
dec
lret
add
dec
cmpsb
cli
jp
add
repnz
push
notl
adc
out
shrb
out
out
push
idiv
dec
test
add
add
add
or
jmp
or
popa
sbb
or
fstps
jnp
jle
jg
jle
es
int
bound
sub
mov
test
mov
fcmovnb
pop
stos
push
ds
xchg
pushf
jo
loope
fstl
arpl
push
mov
dec
sub
sub
fstl
mov
sbb
mov
jmp
pop
sti
xchg
cmp
cmpsl
cmc
int
xchg
mov
lods
mov
lods
xchg
es
and
jle
sub
call
pop
xorps
mov
push
sarb
cmp
mov
lcall
mov
test
lods
dec
cmpsb
lret
or
or
and
addb
jbe
sar
pop
xor
cmp
add
pop
or
test
xchg
or
cmc
push
pusha
fdivrp
sub
cmp
fsubs
mov
and
shr
xor
inc
sahf
add
sahf
dec
mov
test
jo
inc
loope
or
aad
mov
xchg
and
out
dec
jbe
sub
lea
dec
pop
cmp
out
jbe
loope
les
mov
je
add
or
mov
xor
ret
pop
sbb
sbb
adc
jmp
fildl
and
cmp
outsl
test
cs
rol
cmpl
jb
test
sub
insl
add
dec
out
or
xchg
pop
push
sbbl
sub
xor
jecxz
cld
mov
sub
test
rcrl
xchg
pop
xchg
stos
inc
add
sub
mov
andl
mov
inc
mov
cmpl
jne
pushl
call
cmpl
jne
xor
or
inc
mov
cmpl
jb
mov
xor
add
mov
mov
mov
xor
mov
sub
add
jmp
icebp
jmp
imul
xor
jle
jg
jle
sbb
mov
push
sub
pop
insl
aam
repz
push
push
fwait
pop
fcmovnb
xchg
outsl
ss
and
sahf
xor
ss
test
inc
mov
or
mov
push
push
fisubs
stos
lods
xor
mov
adc
outsb
popa
test
sbb
outsl
mov
lcall
inc
jne
jo
pop
testl
sub
push
pop
jmp
pop
cmpl
mov
jne
int3
fisubrs
sub
insl
or
jecxz
fwait
aam
xor
xor
rcrb
adc
xchg
nop
outsl
fsubrp
dec
push
ret
and
dec
sbb
and
dec
fildll
bsr
mov
into
push
jno
mov
mov
sbb
sub
mov
add
push
or
dec
lret
xchg
out
fcoms
jp
mov
adc
clc
xorl
dec
add
xor
lcall
xor
cmp
pop
movsl
outsl
lods
inc
dec
inc
inc
push
cmc
inc
mov
push
stos
adc
sbbl
mov
dec
mov
mov
inc
jle
xor
fxch
in
add
in
mov
insl
xor
stc
mov
repnz
pop
mov
jle
xchg
mov
or
adc
lret
xchg
cwtl
repnz
dec
je
dec
adc
movsb
out
xlat
repz
aam
mov
repnz
jmp
inc
sarb
cmc
mov
repz
shl
fisubrs
cli
lret
popa
andb
dec
cwtl
inc
mov
mov
mov
mov
movzwl
add
jmp
push
mov
test
mov
push
jle
mov
jle
or
lcall
inc
xchg
popf
xchg
and
mov
rclb
add
xchg
dec
add
stos
push
arpl
fstpl
ljmp
pop
insl
rcrl
jnp
xor
dec
loopne
add
out
loopne
ljmp
pop
fldcw
and
ds
ss
inc
std
and
testb
or
mov
in
mov
pop
ret
and
jns
pop
daa
sub
mov
push
xchg
add
push
test
pusha
cmpsb
jnp
pop
daa
idiv
out
push
or
sbbb
mov
pop
lcall
jo
mov
push
cmc
fisttpll
mov
into
test
and
ret
cmpsb
push
xor
sbb
xchg
cmc
ret
addr16
arpl
in
cmc
arpl
dec
lods
add
mov
scas
fdivs
add
cmc
or
shlb
adc
xchg
movsl
lahf
xchg
in
movsl
aam
es
scas
and
inc
jbe
into
fisttpl
mov
mov
inc
cld
mov
adc
mov
icebp
add
push
out
cmp
cmp
ror
add
or
xchg
divl
sbb
dec
in
fisttpll
lods
mov
lcall
jmp
movsb
inc
fadds
enter
cltd
add
aas
repnz
and
jo
push
sbb
int
xchg
roll
mov
lods
xlat
cmp
sub
fwait
and
inc
push
pop
push
out
in
outsb
leave
jno
pop
sub
jae
xchg
stc
mov
mov
mov
xor
add
xor
sub
jmp
xchg
sahf
loopne
icebp
jo
popa
mov
cmp
cmpl
jle
jg
jle
lret
jae
bound
imull
mov
mov
jge
out
in
push
dec
or
sub
adc
iret
stc
aad
add
jne
hlt
fbstp
in
lret
enter
fwait
dec
aad
mov
pop
cmp
stc
lahf
mov
sub
mov
out
test
cmpsb
clc
dec
sub
dec
into
stos
ret
add
pop
in
dec
xor
lcall
xor
in
cmp
mov
adc
and
rorb
stc
ljmp
aam
ja
andb
pop
mov
dec
aas
leave
bnd
xchg
pop
lea
xchg
out
pop
dec
mov
mov
jo
int3
inc
fisttps
xchg
pop
shl
sbbl
push
inc
adc
orb
jecxz
cmp
mov
in
inc
xlat
jnp
and
ljmp
test
int3
leave
push
cmc
xchg
adc
aad
in
pop
bound
pop
xchg
cmp
mov
cmp
scas
mov
push
dec
inc
mov
push
mov
cmp
inc
push
dec
and
mov
fcom
mov
pop
pop
jno
pop
test
add
and
jae
addb
mov
push
call
rcll
pop
mov
movsb
negl
cmp
mov
cmc
cmp
jae
jae
mov
das
aam
pushf
pop
adc
xor
mov
adc
sub
in
aam
dec
out
pop
mov
xor
rcr
dec
popf
pop
cmc
movsl
xor
xchg
mov
daa
inc
je
mov
movzwl
sub
cmp
mov
movzwl
jg
xor
sub
sub
jmp
pop
sbb
cmp
push
popa
movsb
insl
std
and
cltd
pop
jecxz
add
mov
jle
repz
mov
adc
cld
int
push
mov
gs
cmc
dec
and
inc
test
fidivrs
pop
mull
inc
mov
mov
cmp
mov
dec
cmpsb
sbb
pop
fcom
lods
sbb
xor
mov
sbb
mov
jno
rcrl
cmpsb
inc
xchg
add
cmpb
hlt
repnz
and
adc
fwait
hlt
mov
add
pop
stc
arpl
and
fucomi
pop
jge
dec
inc
push
lock
aam
lret
outsb
inc
pop
notb
jns
ja
popf
jge
repnz
fs
jno
test
xchg
xor
cltd
fs
out
add
or
jg
movsb
mov
sbb
aam
pop
test
push
lret
and
sub
adc
pop
and
inc
aaa
out
cmc
push
xchg
mov
inc
pop
mov
jl
flds
arpl
xchg
sbb
mov
loop
adc
cmpb
jmp
ds
push
js
jns
push
aaa
dec
inc
test
enter
aaa
jns
xchg
sbb
lds
mov
clc
rorl
fwait
push
xchg
sub
xchg
sbb
out
jl
mov
jg
in
jge
in
xlat
clc
mov
clc
or
push
lret
les
xlat
call
xchg
dec
jb
movsb
pop
mov
xchg
mov
lea
push
and
mov
int3
movsl
or
mov
inc
leave
xchg
mov
sbb
sub
stos
pusha
movsl
sti
or
shrl
bound
cld
jmp
xor
lea
mov
mov
cmp
je
mov
movl
jmp
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
lea
add
jmp
je
int3
xchg
int
jne
jae
mov
test
jle
jg
jle
adc
movsl
mov
sbbl
or
jmp
imul
out
pusha
cmp
or
ret
pop
add
xor
fstp
xchg
mov
push
jle
repz
inc
mov
jle
sbb
hlt
jecxz
scas
jb
sub
pop
push
mov
popa
jb
cmc
jecxz
dec
out
lods
mov
adc
popa
ss
shll
fcompl
inc
mov
push
inc
mov
sbb
cld
fcmovne
loop
std
inc
lea
cmpsl
ror
jmp
cmp
movsl
out
fwait
rclb
add
fildll
jae
inc
cltd
mov
push
push
mov
jmp
xor
sbb
out
inc
cltd
sub
and
inc
hlt
dec
lods
inc
cli
test
and
hlt
dec
inc
enter
scas
mov
cld
aad
mov
and
or
mov
push
xor
ds
or
sbb
inc
xor
decb
mov
mov
fistpl
xlat
pop
cmpsl
dec
mov
rorl
mov
xor
pop
lahf
shl
shr
xchg
into
pop
sbb
dec
jns
andb
cmp
xchg
inc
iret
mov
pop
pop
mov
mov
repz
out
je
leave
adc
movsl
and
mov
and
fldcw
push
xchg
sub
xchg
lcall
inc
cmp
clc
in
inc
push
add
lods
rcrb
pop
insw
xchg
dec
jmp
push
popf
popf
jne
div
xchg
call
and
insl
js
sbb
sti
shlb
mov
movsb
movsb
leave
and
lret
dec
clc
mov
mov
mov
mov
xor
add
mov
mov
mov
xor
add
cmp
je
mov
mov
add
jmp
xor
inc
pop
pop
jge
arpl
outsb
dec
or
in
or
jle
mov
xchg
enter
int3
loop
dec
repz
fldenv
ret
insb
jne
mov
cwtl
je
cmc
mov
shl
pop
dec
jb
stos
pop
xor
mov
ret
hlt
and
sub
inc
push
jbe
repz
sub
popa
inc
pop
in
aaa
cltd
lock
ficompl
mov
mov
adc
push
and
test
pop
insb
aad
xchg
sarl
out
insb
pop
hlt
stos
mov
push
es
dec
movsb
jge
clc
or
lret
push
addr16
shl
or
dec
mov
aas
imulb
pop
test
jns
cmpsl
sub
dec
mov
cli
push
jae
mov
or
cli
incl
imul
es
fwait
pusha
cld
jle
imul
sbb
push
repnz
scas
xor
xchg
test
enter
push
mov
jecxz
iret
out
dec
sub
movb
test
out
fwait
jae
imul
and
sub
ja
bound
mov
pop
shll
xor
pop
push
aam
pop
orb
adc
or
lahf
in
sub
xchg
stos
rorb
pushf
orl
cmp
ja
stos
or
jl
cwtl
mov
xlat
in
cmp
in
push
shr
imul
loop
addr16
and
scas
mov
int3
dec
movsl
push
push
arpl
sbb
add
xchg
push
cmpb
shl
leave
push
inc
test
mov
sar
shlb
psubsb
push
lret
inc
stos
test
sbb
pop
mov
pop
pop
xchg
pop
mov
mov
mov
mov
mov
mov
add
xor
cmp
je
mov
mov
xor
add
jmp
insb
jo
arpl
jge
jno
adc
mov
loope
mov
movd
jg
jle
sti
sbb
scas
enter
add
adc
setns
cmp
lods
sub
pop
xor
int3
or
bsf
push
outsb
mov
cmpsb
nop
mov
pop
es
dec
cs
ja
mov
sub
xchg
jmp
pop
insb
sbb
xor
mov
pop
jl
and
push
cltd
xchg
sti
enter
jb
push
add
sbb
mov
out
sbb
insl
scas
xchg
into
xor
jnp
lahf
ljmp
lcall
or
sub
xorl
jecxz
mov
fs
jbe
cwtl
es
push
or
fbstp
inc
scas
dec
subb
jb
or
ljmp
insb
sub
pop
test
xlat
es
or
fisubs
cmpsl
rolb
cwtl
sub
adc
sbb
mov
aad
repz
sub
push
pop
add
cltd
test
insb
pop
movsl
lea
mov
pop
inc
loope
inc
fidivl
lods
push
fldl
pop
cwtl
mov
dec
xchg
loopne
rcll
inc
stos
and
push
sub
ret
cli
push
sti
bound
xchg
xor
popf
icebp
out
add
mov
mov
inc
cltd
scas
sbbb
fmuls
mov
sbb
in
lret
fisubrl
lock
lret
fdivrl
daa
push
xor
inc
adc
lods
xchg
push
roll
and
mov
add
in
or
subl
pop
mov
jmp
xorl
jmp
mov
mov
mov
mov
mov
mov
pushl
call
mov
cmp
je
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
leave
ret
push
mov
jmp
sbb
jge
fidivrl
pop
push
in
push
or
push
jg
jle
mov
aaa
int3
pusha
mov
pop
inc
out
das
or
pop
cmc
xchg
mov
adc
je
jb
dec
xor
inc
xchg
jb
and
dec
shr
imul
push
pop
pop
push
or
call
in
inc
xchg
data16
mov
fisubl
in
xor
jno
fsubl
inc
add
cmp
ja
inc
out
xor
inc
ljmp
repnz
clc
out
and
pop
je
push
aad
mov
loope
cmp
scas
lret
hlt
sbb
cld
loopne
sbb
xor
push
cs
in
pushl
sbb
ret
shll
pop
dec
mov
insb
aas
gs
scas
fistpll
ret
dec
stc
lods
mov
in
rolb
addr16
nop
adc
out
mov
push
imul
pushf
cmp
and
sti
mov
and
jne
jle
pushf
push
dec
xchg
test
iret
xor
leave
stc
cmp
xchg
jg
sub
push
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
cmpl
jne
xor
or
inc
mov
jmp
xorl
push
sbb
mov
sbb
mov
andl
mov
inc
mov
cmpl
jne
push
call
cmpl
jb
add
movl
mov
push
mov
or
mov
xor
mov
push
add
mov
sbbl
jmp
pop
imul
and
jle
push
jg
jle
adc
cs
inc
hlt
insl
out
dec
mov
inc
loope
cmp
xorb
and
sbb
inc
dec
push
repnz
incl
in
cmp
imul
scas
xor
inc
call
mov
aas
fidivrl
fistps
cmc
fdiv
xchg
xor
xabort
jne
sbb
mov
adc
xor
ja
test
sub
sub
mov
push
mov
mov
out
jns
mov
fsubrl
xor
xchg
mov
or
and
sub
push
dec
outsb
mov
fdiv
and
pop
fistl
stos
pop
adc
nop
addr16
jae
shll
sbb
push
divb
test
loopne
inc
ja
xlat
mov
push
adc
jge
dec
jp
cmpl
testb
call
iret
outsb
mov
movsl
iret
xchg
push
dec
mov
fcmovb
xchg
int
sbb
je
andl
mov
inc
mov
cmpl
jne
pushl
call
cmpl
jb
xor
mov
mov
xor
mov
xorl
sub
add
xor
add
cmp
ja
push
jmp
mov
mov
mov
xor
add
mov
imul
jmp
push
nop
outsb
stos
jae
push
jo
sub
lods
notb
inc
adc
jle
push
jg
jle
sbb
daa
or
adc
orl
xchg
lea
lea
aas
sbb
jne
push
fdivp
test
stos
outsl
xor
or
sub
jbe
cmpsb
adc
push
pushf
or
cmp
inc
xor
mov
cmp
mov
daa
xchg
dec
mov
cmp
sub
fdivs
aas
enter
cwtl
out
addr16
adcl
stos
ss
shll
mov
jb
dec
lea
lahf
mov
mov
lahf
test
addr16
push
sbb
insl
jno
test
adc
pop
js
push
jnp
inc
testb
das
mov
cmp
test
mov
movsb
inc
das
fwait
pop
bound
cmp
sbb
fwait
insl
imul
ja
ljmp
aam
sbb
adc
push
sub
xor
fucom
cmp
sbb
or
dec
pop
and
sbb
arpl
rep
daa
dec
add
add
mov
mov
mov
xor
lea
mov
xor
mov
sub
add
cmp
jbe
pop
mov
pop
pop
leave
ret
push
mov
mov
xor
mov
div
mov
and
or
mov
pop
ret
push
mov
sub
and
mov
jmp
inc
dec
fwait
imul
add
and
xor
jle
jns
jle
andl
fistps
push
sahf
loop
xorl
fs
out
into
lahf
jb
mov
stos
notb
in
bound
pop
push
xchg
adc
stos
jmp
and
rcrl
repnz
mov
enter
popf
and
cld
out
pop
xor
fsubl
leave
xor
inc
xchg
dec
jbe
cli
mov
jmp
lret
adc
push
cmpsb
jmp
push
data16
cmp
cmpl
test
lock
insb
mov
in
subb
fwait
cwtl
push
imul
repz
cli
or
push
adc
push
mov
fsubl
fildll
adc
sbb
sarl
jp
popa
repz
dec
inc
das
sbb
ds
pop
fistpl
push
inc
sbb
pop
out
js
mov
faddl
add
xchg
fwait
test
jg
sub
xor
or
test
test
inc
rcr
mov
cwtl
mov
xchg
popf
jb
add
xchg
jnp
jne
ficompl
gs
lret
sahf
mov
rclb
in
adc
or
cmc
inc
std
inc
jnp
outsb
clc
mov
jb
add
mov
add
enter
out
fidivl
fmul
outsl
mov
mov
pop
stos
and
pushf
je
outsb
bound
ss
nop
mov
pop
sub
push
push
sarb
mov
mov
push
jp
xchg
jae
outsl
int3
cli
fldl
jge
bound
repnz
cli
in
adc
clc
xor
cmp
and
and
fstpl
fs
mov
mov
out
add
jno
pushf
or
sbb
or
mov
pop
jns
push
call
and
inc
les
insb
xchg
cld
mov
jae
sbb
push
jb
mov
cmpsl
hlt
insb
sub
ret
daa
sti
je
and
xchg
pop
push
and
add
fistpll
rorb
daa
lret
sbb
add
lods
les
jbe
mov
lret
popf
or
lea
es
pop
cmp
ss
mov
jne
inc
cmpsl
test
fcmovnbe
iret
mov
out
out
sub
lea
jp
push
cmpsb
outsb
lds
jp
in
or
cmp
ss
insl
xchg
rcrb
pushf
sbb
add
mov
xor
outsl
stc
add
xchg
lret
sbb
bound
inc
xor
dec
xor
icebp
push
jo
add
push
cmp
push
xor
sub
sarl
adc
je
jb
mov
bound
dec
in
adc
add
xor
add
jge
mov
push
test
mov
paddusb
flds
loop
mov
cli
sub
loop
and
sub
lock
out
add
testl
dec
pop
into
inc
adc
push
lods
pop
fisubs
xchg
xchg
insb
pushf
add
push
divb
sbb
jg
and
xor
popa
mov
mov
test
inc
mov
mov
scas
mov
imul
or
pop
insb
arpl
sahf
cltd
mov
sub
sahf
pop
xor
int3
cmpsl
or
pop
fdivrl
std
xorl
cmp
hlt
mov
popf
push
lods
arpl
inc
rep
pop
mov
or
arpl
fisttps
push
xchg
hlt
jbe
cld
stos
and
push
mov
xor
mov
andl
add
mov
xor
mov
movzwl
mov
xor
mov
mov
sbb
mov
movb
lea
orl
mov
and
jmp
jo
inc
xchg
jo
jne
xchg
or
add
jle
jns
jle
ret
add
mov
js
xor
scas
inc
cli
testb
push
pop
andl
enter
nop
and
xlat
std
xor
mov
int3
jmp
cs
mov
push
xchg
out
inc
scas
mov
jns
mov
dec
pushf
outsl
or
popf
mov
jno
sbb
dec
gs
lret
inc
and
rclb
mov
outsb
imul
mov
xchg
cli
mov
int
mov
faddl
pop
stos
adcl
loopne
sub
icebp
jmp
addr16
dec
out
ds
test
push
rcll
jns
mov
cmp
mov
enter
mov
dec
mov
fmull
std
mov
dec
inc
dec
jbe
xchg
pop
adc
cmp
in
inc
or
mov
stos
adc
jno
popw
xor
cmp
sub
negb
add
push
jecxz
add
sub
xlat
out
cmpsb
repnz
les
shrl
mov
xchg
pop
xor
hlt
xor
pop
mov
lds
inc
icebp
movsl
xor
fnstsw
movsl
hlt
mov
ret
cmp
clc
mov
cld
rolb
dec
insl
and
pop
dec
leave
int3
sub
cli
jno
push
lret
repz
hlt
add
pop
enter
insb
aam
push
ss
pop
xchg
cmpsb
inc
cmc
mov
and
add
lods
mov
loope
add
scas
xor
stos
fnstenv
icebp
mov
rolb
xor
xor
roll
stos
mov
enter
jb
inc
adc
in
mov
movsb
mov
iret
mov
add
or
stos
pop
pushf
adc
fnsave
adc
adc
mov
mov
jno
adc
and
sub
outsb
mov
lret
lods
dec
sbb
push
pop
xchg
arpl
pop
jmp
push
lds
hlt
stc
push
lret
push
xor
out
jmp
es
sarl
out
lcall
ficoml
adc
icebp
mov
dec
les
cmp
into
mov
cs
or
movsl
outsb
push
pop
push
psrlw
lock
mov
int
push
pushf
mov
cmp
inc
dec
call
nop
fstpl
popa
testb
lahf
push
dec
jns
test
xchg
cmpsl
xor
nop
rcl
inc
push
lods
pop
decb
mov
scas
lea
dec
cmc
loopne
cmpsb
jo
je
mov
sub
xor
pop
inc
insb
xchg
push
in
adc
pusha
dec
out
aam
mov
add
inc
jle
mov
movsb
fidivs
push
sbb
pop
and
or
sub
repnz
je
loopne
outsb
int
or
out
mov
movsb
lods
lea
dec
test
cmp
jno
enter
jo
inc
jl
push
icebp
mov
shl
sbb
xchg
cmp
in
icebp
pusha
push
adc
add
xlat
lcall
int3
in
nop
stc
inc
hlt
mov
mov
cmp
mov
test
adc
mov
or
imull
adc
and
mov
or
jne
adc
daa
dec
clc
insb
lods
cmc
push
into
inc
pop
popa
adc
loope
add
or
sbb
mov
mov
sbbl
xor
addl
sub
orl
mov
xor
movl
andl
jmp
xor
xor
inc
mov
cmpl
jae
cmpl
jne
push
pushl
push
call
jmp
movl
cmpl
je
cmpl
jne
push
push
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
movl
cmpl
je
cmpl
jne
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
xor
movl
adc
mov
mov
push
adc
xor
incl
mov
subl
add
jmp
notl
mov
mov
movl
inc
cmp
jb
mov
mov
xor
add
cmp
je
push
push
mov
mov
xor
mov
jmp
sbbl
jae
out
xchg
call
adc
push
jns
jle
in
jge
adc
jmp
cmp
inc
push
test
adcl
pcmpgtw
and
dec
loope
and
subl
test
mov
aas
push
sbb
mov
hlt
in
cmc
addr16
insl
or
xor
lcall
inc
fldt
jne
loopne
scas
daa
aas
sbb
jae
iret
test
push
ja
jmp
sbb
outsl
movb
xchg
mov
cmp
mov
addr16
les
shrb
cmp
mov
jmp
popa
enter
les
xchg
mov
insl
inc
clc
in
inc
loopne
cmp
inc
ljmp
cmp
push
dec
xchg
stos
push
jecxz
and
fldcw
jg
js
mov
xchg
mov
jecxz
add
adc
cltd
mov
movsl
in
jb
lahf
pop
out
or
fwait
cmpsb
and
adc
and
and
jp
xor
inc
push
subl
ljmp
addr16
inc
int
jge
sbb
shrl
sub
push
sub
mov
rcll
or
clc
mov
repnz
adc
movsl
jecxz
inc
jnp
popf
jne
or
jbe
mov
mov
fwait
lret
inc
into
lret
cmp
mov
dec
js
outsl
adc
push
dec
shrb
aad
push
xchg
xor
lret
ljmp
and
pop
jl
imul
push
pushf
mov
enter
pop
stos
or
or
in
xchg
and
jo
mov
pop
imul
daa
ljmp
inc
jecxz
mov
inc
xchg
in
add
adc
sub
lret
cwtl
nop
jnp
stos
addl
rcrb
mov
cltd
xchg
jo
fs
mov
inc
adc
add
call
pop
out
jnp
mov
fstpt
sbb
ljmpw
js
inc
mov
sbb
adc
pop
ljmp
std
iret
mov
jp
add
icebp
test
sub
dec
pop
xor
jl
cmpsl
imul
sub
fidivl
ffreep
jbe
adc
lcall
int3
inc
inc
ljmp
mov
xchg
lea
cmp
inc
xor
mov
pop
dec
movsl
lret
sbb
jno
cmp
dec
sub
add
movsb
pushf
shl
sub
or
jno
jmp
mov
dec
pop
out
xchg
push
les
xor
xor
and
ret
adc
fldenv
xorb
cs
sbb
sbb
xor
pop
int3
push
and
push
lock
jb
xchg
lret
xchg
jne
xchg
js
fdivrs
push
pop
or
pushf
push
jp
lea
sub
mov
fbstp
mov
pushf
and
add
pop
shrb
lds
fwait
add
inc
lock
cmpb
xchg
pop
cmp
or
mov
dec
cmp
aas
cmp
es
push
mov
outsb
sub
das
inc
inc
fisubrl
fnstsw
fstl
xchg
cs
or
repnz
stos
loopne
stos
jmp
sub
scas
sbb
lea
push
push
cmp
mov
fnstcw
mov
mov
push
jbe
rolb
mov
pop
xchg
cmp
iret
in
jo
stc
and
addb
mov
mov
mov
movzwl
xor
add
mov
mov
mov
inc
cmp
jne
pop
pop
mov
mov
xor
add
mov
jmp
mov
or
push
jge
inc
xchg
add
mov
jns
jle
in
mov
mov
xor
mov
fisubl
inc
push
icebp
movsl
inc
ret
xchg
paddsb
mov
xor
mov
in
push
mov
cmpsb
mov
les
pop
sbb
jae
pop
mov
pop
sub
dec
jno
xchg
or
jl
insl
dec
cwtl
mov
out
popa
mov
jge
rclb
insb
je
jp
mov
fsubrl
arpl
or
xchg
lea
cmpps
ss
outsl
jecxz
sub
sbb
mov
or
dec
jmp
cmc
or
push
mov
xor
jp
sbb
push
dec
xchg
or
test
inc
repz
subl
shlb
jg
dec
divb
loope
mov
push
fnstsw
fwait
mov
adcl
mov
or
int3
push
divb
sahf
jmp
inc
mov
xchg
jb
movsl
sti
sbb
and
xchg
popf
inc
xchg
mov
lret
push
inc
decb
loopne
fimuls
mov
repz
pcmpgtb
out
popf
or
loop
mov
daa
mov
mov
push
dec
sahf
inc
gs
in
rorb
mov
jmp
jnp
fisttpll
test
inc
dec
lods
or
stos
xchg
bound
dec
inc
xchg
jmp
xchg
mov
jne
and
push
imulb
out
cmpsb
in
xor
sbb
or
jb
dec
mov
xchg
pop
aad
leave
aad
lcall
pop
add
mov
cltd
sub
cld
adc
pushf
in
movdq2q
or
nop
dec
fisubrs
out
jecxz
xlat
cmpsl
mov
sti
pop
and
test
and
gs
cmp
aam
test
cmp
xlat
dec
lret
push
lret
push
pop
jnp
lcall
insb
xor
push
imul
xchg
dec
loope
imul
xor
xorb
popf
cmp
shll
mov
loop
js
cs
add
test
cmp
cmpsb
mov
or
jle
loop
js
fisubrs
insb
mov
decl
mov
pop
xchg
out
inc
mov
lock
imul
sbb
dec
xchg
nop
aas
cmpsb
shl
in
cmpb
lods
aas
mov
test
testl
outsl
inc
dec
sub
jns
out
cmc
repz
fwait
push
sub
test
dec
cltd
lret
lret
pop
data16
js
decb
aas
loop
leave
insb
cmp
out
and
jns
cwtl
inc
scas
ds
push
call
lock
mov
int
adc
shrl
daa
movb
cmp
jle
pushf
adc
lea
fwait
aam
mov
mov
aas
mov
sub
mov
cld
cmpsl
lcall
mov
in
mov
in
adc
pop
adc
gs
cmp
inc
iret
add
xchg
inc
add
adc
cmp
adc
dec
stos
pop
mov
arpl
jl
push
dec
je
cwtl
ljmp
lock
cs
test
push
push
jp
vcmppd
int
dec
jb
jbe
or
cwtl
mov
push
xchg
dec
jo
pop
cmpsb
sysexit
dec
dec
cmp
fdivr
cmpsl
jmp
or
jp
outsl
faddl
fnstsw
sarl
inc
push
pop
dec
cmp
repz
jle
dec
dec
mov
jge,pn
inc
adc
and
inc
clc
xor
add
mov
mov
jmp
pop
ret
jge
insb
jae
test
mov
jns
jle
adc
adc
sbb
in
in
fldl
cmc
in
lahf
xchg
jmp
test
inc
neg
repz
and
and
loope
hlt
jbe
cmpsb
enter
and
test
jae
xchg
insl
hlt
dec
into
jo
sub
ljmp
jmp
addr16
test
jle
stc
mov
and
insl
mov
into
dec
aad
js
std
add
mov
xchg
mov
cmpsb
cmp
cmpsl
pop
lret
pop
hlt
inc
cmp
iret
insl
mov
test
in
lods
mov
add
xchg
mov
jae
stc
outsb
dec
sbb
rorl
arpl
dec
pop
dec
andw
or
xchg
sub
imul
sub
mov
mov
jmp
popl
sbb
inc
lds
ds
subb
arpl
inc
push
fs
xor
test
or
jns
adc
and
dec
mov
pop
fs
loop
xlat
test
add
mov
add
test
xor
mov
pop
mov
lret
xor
js
pop
mov
xor
pop
jno
fimull
adc
jne
mov
int3
aad
sub
adc
and
add
mov
dec
cmp
push
jecxz
pop
inc
cwtl
xor
stos
xor
sarb
es
into
fldl
sbb
sahf
push
xchg
out
out
jbe
adc
icebp
add
dec
lock
pop
ljmp
lods
add
sub
sahf
aam
and
mov
mov
jmp
cld
dec
gs
cmp
and
imul
and
jg
gs
sbb
xor
inc
dec
lret
or
lret
inc
push
sti
push
xor
out
aaa
mov
test
divb
pop
add
cmp
lods
or
aam
jle
push
and
out
mov
mov
sub
getsec
inc
adcl
jle
fdivl
jmp
popa
pop
test
jno
shll
stc
loope
jmp
sbb
or
fsubr
inc
add
lcall
mov
jae
or
dec
mov
xor
in
sbb
insb
aad
sub
test
icebp
mov
and
lcall
push
test
add
mov
das
outsb
mov
je
mov
cmpsb
cmc
pop
jle
add
cmp
pushf
std
xchg
inc
add
cld
das
mov
adc
cmc
pop
ds
es
stos
inc
or
mov
aam
and
call
cli
dec
aad
cmp
xor
stos
in
scas
mov
pop
xor
mov
repz
lret
loop
adc
lahf
call
clc
jno
and
xchg
ljmp
add
cmp
and
pop
push
adc
and
lcall
in
pop
or
test
adc
in
or
repz
test
je
mov
loop
std
mov
gs
mov
pop
pop
fsubs
dec
and
addr16
out
outsl
cwtl
dec
dec
xchg
mov
add
ds
add
xchg
jecxz
and
jno
test
sub
xchg
add
dec
mov
repz
adc
mov
jp
cltd
sbb
mov
mov
mov
or
mov
repz
add
cmp
je
mov
mov
mov
cmp
jne
mov
mov
movsbl
jmp
enter
cmc
jne
mov
add
jle
push
jns
jle
or
cmpb
mov
adc
data16
cmp
mov
push
into
mov
push
fcomi
aam
add
rorb
and
mov
loope
out
jbe
fwait
aas
fisubrl
aad
outsl
and
mov
test
lahf
loop
and
fisttpl
daa
dec
pop
out
pop
adc
enter
lods
shrl
mov
pop
shll
push
adc
mov
push
pop
xor
xchg
aad
inc
mov
pop
fwait
inc
outsb
sbb
call
xchg
xlat
and
call
lods
mov
ljmp
call
sbbb
testb
jge
loope
cwtl
push
push
add
xor
jl
xchg
nop
aad
push
scas
in
pop
lock
xor
cmp
mov
inc
scas
stos
jmp
stc
mov
mov
popf
mov
insl
adc
imul
cmpsb
mov
push
jle
add
ret
outsb
cld
stos
jge
jg
jmp
pop
in
mov
repz
mov
mov
jle
es
in
jge
call
xchg
or
pop
aad
jl
push
aaa
sub
sbb
inc
sbb
fldt
incb
stos
movsl
add
and
dec
sub
jmp
rcrb
or
jg
arpl
arpl
imul
adc
push
xchg
pop
inc
aad
pushf
cmp
fmull
sbb
lret
arpl
cmp
or
adc
movsl
iret
ja
ret
dec
adcb
ret
sub
mov
cld
imul
cmp
frstor
xchg
popf
loop
aam
sahf
ja
notl
clc
push
push
push
pushl
adc
xor
cs
push
or
cmp
ljmp
sahf
fstps
inc
xchg
dec
mov
xor
rcrl
jle
push
out
sub
push
push
pop
ret
add
mov
insb
mov
das
repz
enter
mov
es
ljmp
imul
xchg
jae
sbb
mov
fwait
lods
test
jnp
mov
cmp
push
jns
xchg
imul
push
xor
pop
pop
mov
mov
outsb
and
sahf
data16
push
enter
jno
adc
fnstcw
cmp
inc
jno
out
sub
adc
jbe
imul
jns
shlb
sbb
mov
aad
mov
push
fabs
or
ret
mov
mov
enter
mov
dec
lea
idivl
cmp
add
enter
mov
testl
cmp
jmp
or
sti
cmc
adc
xor
mov
cltd
push
test
mov
inc
xor
rolb
push
repz
fdivl
cld
xor
testl
cmp
or
pop
jmp
inc
mov
insl
pop
dec
repnz
cmc
out
repz
jns
push
and
push
or
push
cmpsl
cmp
add
daa
jge
mov
dec
arpl
xchg
out
fmul
imul
test
mov
adc
incb
inc
pusha
shll
je
jo
mov
jb
stos
dec
mov
leave
dec
les
scas
jne
and
js
or
jne
pusha
bound
jne
add
xor
ds
out
inc
bound
subl
roll
cmp
je
movl
lea
mov
jmp
push
fdivp
imul
mov
sbb
jle
push
jns
jle
add
mov
sbb
inc
xor
or
sub
lcall
push
mov
cmp
test
xor
fnstenv
add
adcl
xor
mov
mov
cmp
mov
or
xchg
sub
and
jns
pop
push
sub
mov
in
ret
jnp
bound
and
imul
inc
lahf
push
inc
inc
or
pusha
xchg
inc
inc
or
cmp
pop
xor
dec
rcll
iret
mov
jge
or
leave
sahf
xor
sti
add
hlt
imul
push
into
push
mov
add
push
sub
in
xor
fwait
xor
leave
dec
cmp
push
cli
inc
and
dec
cld
adc
or
sbb
ja
movsb
ss
std
lret
mov
dec
push
jp
mov
push
imul
jp
mov
mov
popf
cmp
cwtl
in
fsubrs
push
sbb
xor
jle
lea
stos
xchg
pop
cwtl
fcompl
es
mov
or
mov
bound
cltd
lret
into
push
dec
inc
es
cs
or
push
or
mov
hlt
andb
dec
mov
adc
sbb
int
negl
lret
mov
and
adc
dec
out
ljmp
leave
dec
mov
mov
sbb
pop
mov
xchg
mov
mov
mov
mov
leave
repz
xor
mov
arpl
jge
push
sub
dec
in
xchg
cld
jle
mov
outsb
les
or
lret
sbb
mov
cmp
mov
movsl
xchg
repz
in
xchg
jo
imul
fsubs
arpl
and
arpl
xchg
sbb
cwtl
imul
ret
aaa
inc
mov
ljmp
cmp
andb
add
pop
lret
stc
ds
mov
bound
out
inc
enter
pop
arpl
ds
push
cmp
in
sbb
aaa
gs
sub
clc
enter
jle
jp
jae
xorl
add
ja
dec
dec
jbe
rorl
push
lret
pop
push
and
dec
clc
popa
push
andnps
je
pop
addb
cmpsb
dec
xchg
imul
adc
mov
or
stos
ret
les
inc
pop
dec
mov
test
cmp
xchg
cli
rcrb
pop
movsl
adc
inc
into
add
push
mov
scas
test
xchg
adc
or
inc
hlt
hlt
out
mov
mov
xchg
popa
dec
and
jns
lret
sub
out
jg
jmp
lcall
in
pop
pop
mov
adc
adc
inc
insl
mov
dec
cmpb
jo
mov
in
jae
inc
out
jecxz
lcall
xor
and
cwtl
mov
icebp
cltd
fsubr
cmp
je
cmpsb
cmp
push
jo
sub
aad
and
divl
movsl
into
lods
pop
out
and
jmp
jecxz
lock
fsts
js
leave
jns
xor
cmp
ja
imul
in
scas
cmp
inc
hlt
dec
jg
dec
inc
push
cmp
test
repz
dec
push
push
rcrb
sbb
pushf
ret
mov
addl
mov
mov
xor
lea
mov
incl
jmp
mov
xor
mov
add
mov
pop
leave
ret
push
mov
push
sub
jmp
pop
mov
and
jno
dec
call
ret
sbb
jle
pop
jg
jle
push
je
repnz
in
stos
roll
mov
mov
jle
jo
aas
push
or
inc
iret
outsl
pop
and
sub
mov
push
dec
sub
xchg
add
jbe
inc
inc
mov
xor
dec
data16
movsl
daa
xchg
mov
pop
push
dec
push
rcrl
pusha
ficomps
jns
cmc
mov
mov
dec
dec
push
outsb
fistpl
ret
jecxz
out
fmulp
rorl
movsb
xchg
dec
xor
jmp
out
fucomp
mov
and
and
dec
and
jb
xor
pop
mov
aad
cli
add
cmc
insl
sarl
inc
outsb
ljmp
data16
dec
adc
gs
cli
int3
adc
mov
and
mov
fs
mov
fstps
out
cmp
cmp
mov
clc
or
push
inc
je
push
mov
dec
mov
xor
xor
xlat
je
xor
mov
pop
mov
or
xor
and
pushf
jge
xchg
xorb
xchg
sahf
xchg
movsl
add
sbb
or
subl
mov
je
push
movsl
stos
mov
xchg
rolb
sub
and
stos
pop
pop
lods
fsubs
mov
popf
sti
adc
scas
or
sub
jae
notl
das
push
xlat
mov
icebp
lret
inc
push
jno
and
scas
jmp
call
push
test
cmp
scas
lods
xchg
jne
pop
sahf
jno
dec
adc
lret
cmpsb
pop
icebp
js
jne
adc
or
outsl
mov
insb
push
or
movl
movl
cmpl
je
cmpl
jne
pushl
pushl
push
push
push
pushl
call
mov
dec
mov
jmp
movl
mov
xor
push
andl
mov
inc
mov
cmpl
jne
push
push
push
pushl
call
cmpl
jb
inc
mov
incl
mov
xor
xor
mov
add
xorl
add
imul
mov
cmp
jne
mov
mov
xor
xor
add
add
imul
jmp
mov
mov
jmp
imul
jge
push
pop
loopne
pushf
in
sbb
jnp
jle
pop
jg
jle
dec
inc
in
cmpsl
push
xchg
jb
jge
popf
inc
aam
loop
test
shr
add
mov
xor
aam
sti
add
fimull
lahf
insl
mov
xor
call
outsl
out
mov
push
jmp
mov
fs
sub
sub
pop
mov
enter
addr16
xlat
mov
jbe
push
nop
enter
cld
dec
and
aam
hlt
mov
pop
mov
jbe
jecxz
add
mov
imul
stc
int3
cmp
pop
lods
pop
int
mov
cmpb
sub
jns
sub
and
and
out
pusha
jmp
out
push
rorl
or
repnz
pop
sbb
gs
loope
jmp
pusha
nop
mov
mov
or
jne
lods
fcoml
xchg
lret
mov
add
sbb
sbb
xchg
xor
cmp
mov
clc
sahf
sub
push
xrelease
jae
hlt
aam
ljmp
and
xchg
push
pop
test
inc
stos
push
nopl
movsb
dec
sahf
mov
ljmp
dec
cmpsb
inc
jecxz
test
xor
outsb
inc
pop
fcoml
push
movsl
insb
add
mov
stc
les
fsubrl
mov
pop
push
or
test
dec
sbb
xchg
pop
push
dec
xor
xchg
push
or
push
stc
dec
into
sar
test
pop
rcl
cmp
mov
or
clc
xchg
xchg
xchg
sbb
scas
lods
loopne
mov
push
cmp
dec
or
mov
push
out
test
out
call
inc
add
lret
mov
mov
mov
xor
xor
add
add
imul
mov
cmp
mov
je
xor
add
mov
imul
add
mov
mov
pop
leave
ret
push
mov
push
jmp
sahf
jb
push
pop
jl
jb
ret
mov
sbb
jle
les
jle
out
movsb
ja
mov
inc
cltd
sub
ja
pop
mov
test
pop
pushf
ret
cmpsb
add
roll
xor
xchg
jecxz
cld
repnz
loopne
addl
mov
and
das
enter
push
je
pusha
jo
cmpsl
movsl
and
push
sbb
inc
pop
adc
call
push
pop
lds
negl
mov
and
jno
pop
gs
inc
pop
les
in
hlt
jns
pushl
arpl
hlt
push
gs
nop
insl
mov
repnz
jb
movntps
cld
dec
js
dec
int
sub
jns
out
jno
jns
sub
xchg
jl
add
mov
scas
jp
fildl
roll
stos
and
xchg
adc
nop
mov
in
scas
int3
sub
into
shlb
sti
stc
cmp
lods
sahf
xor
sti
add
dec
shr
rcrb
jnp
xchg
mov
ret
das
adc
rcr
add
pop
fidivrl
test
mov
in
movsl
int3
shlb
push
pop
lock
in
push
sti
xlat
fcoms
sbb
adc
outsl
mov
mov
push
mov
pop
dec
insl
sti
ror
jle
dec
cmp
fildll
inc
xchg
cmp
in
iret
pop
cmp
dec
mov
sub
movsl
jb
lret
aas
pop
adc
jne
mov
push
inc
adc
rsm
fcomps
std
mov
test
ds
in
hlt
mov
scas
jp
dec
xor
leave
inc
pop
sub
imul
es
inc
inc
jp
push
adc
std
pop
cmpl
lcall
push
add
add
inc
add
xchg
data16
not
add
sub
adc
arpl
daa
mov
div
dec
pop
xchg
sbb
scas
mov
xor
test
mov
nop
mov
inc
dec
xchg
cltd
in
mov
daa
push
mov
lods
mov
mov
jns
cld
fisubrs
sbb
lea
aaa
xor
fnstenv
jl
into
push
sbb
ljmp
cs
or
adc
movsl
adc
push
int3
iret
shlb
xchg
add
or
sbb
jecxz
inc
fsubrl
sub
sarl
icebp
lcall
inc
inc
int3
pop
ret
lret
dec
test
cltd
sub
loop
inc
push
sbb
nop
mov
hlt
xchg
lods
adc
movd
fs
ficompl
add
pop
out
mov
pop
sub
mov
das
jge
out
into
mov
insb
or
sahf
xor
dec
sub
lods
dec
push
mov
pusha
and
cs
and
mov
add
inc
sbb
les
pop
mov
jle
mov
insl
ss
push
std
jnp
out
and
dec
and
xchg
leave
mov
sbb
jmp
lods
subl
xchg
sub
pop
cmp
fmuls
cld
mov
movl
mov
jmp
xchg
jb
jg
dec
mov
cs
out
dec
and
jle
les
jle
lahf
divb
cs
cmp
repz
mov
adc
mov
sbb
cli
scas
jo
insb
or
jmp
rorl
sub
jmp
outsb
imul
sub
loope
std
shll
ret
hlt
mov
xchg
or
fs
and
mov
mov
xchg
out
dec
pop
cs
enter
push
loopne
les
xchg
cvtps2pi
lea
movsb
xchg
lcall
xor
gs
lods
rorb
sbb
mov
rorb
aam
add
mov
xlat
test
xor
fwait
cmp
adc
jge
and
jg
mov
mov
das
sbb
jb
adc
pop
or
ret
dec
pop
push
mov
cmpsl
add
xlat
repnz
ljmp
cld
cmc
jne,pt
mov
and
cli
fcompl
add
stos
lcall
sarl
lcall
xor
sub
hlt
aas
inc
das
and
out
mov
sbb
xchg
sub
or
push
mov
mov
gs
pushl
adc
std
jne
mov
fstpt
sbb
test
in
insl
fs
movsb
inc
and
mov
xchg
ficoms
xchg
je
sub
xor
add
daa
and
dec
enter
movsb
dec
xor
mov
pop
test
mov
cmp
cs
cmp
ffreep
ja
inc
data16
out
je
sbb
jl
jmp
movsl
pop
repnz
and
int3
sahf
fmul
decb
dec
loop
in
sub
sahf
xor
mov
fnstcw
jnp
mov
loope
idivl
mov
xchg
xchg
scas
sbb
push
jo
sbb
adc
mov
lret
jae
cmpsl
js
fists
lahf
test
fbstp
or
jmp
arpl
inc
jge
xchg
dec
fs
sahf
xor
add
and
cli
sbb
pop
test
ljmp
xchg
adc
push
push
gs
in
add
xchg
push
or
pop
ds
pop
orb
int
xor
test
mov
xor
mov
push
or
fstpt
fwait
lea
in
add
inc
loope
daa
dec
imul
out
or
push
and
jge
jmp
xor
js
add
loop
movsl
repz
xchg
mulb
cmp
mov
pop
xor
add
testl
adc
into
lcall
jle
scas
mov
dec
les
or
popa
mov
cld
popa
xchg
inc
push
push
sub
xorl
or
xor
leave
call
movsl
jbe
pmovmskb
std
lds
cmp
das
mov
inc
push
mov
call
outsb
mov
sti
ds
shlb
lock
dec
movl
movl
jmp
mov
pop
arpl
push
fbld
jle
jns
jle
test
repnz
sbb
inc
or
push
sbb
inc
shrl
cmpsb
xor
mov
in
fisttpll
insb
shll
mov
sbb
jbe
cmp
fldt
add
mov
add
fdivrs
decb
sub
jge
adc
push
inc
mov
cmp
and
call
xchg
iret
outsl
nop
sti
push
cwtl
std
mov
or
xchg
inc
mov
add
xor
in
push
jb
fisubrs
imul
or
inc
jg
repz
push
jnp
mov
inc
lods
loopne
test
aas
test
mov
movsb
out
data16
xor
lret
sbb
jno
cmp
pop
mov
inc
adc
xchg
sbb
imul
aam
data16
mov
pop
add
shrb
cmpsb
ja
fisubrl
pop
jb
mov
pop
enter
je
lods
stos
mov
outsb
dec
jl
les
xor
and
mov
xor
cmpsl
add
cmpsl
cmp
arpl
xchg
push
fdivs
xchg
ret
sysret
or
adc
subb
lea
sbbl
arpl
rolb
fsubs
addb
repz
mov
jge
das
es
push
lds
sbb
adc
pop
or
nop
and
dec
push
outsl
bound
int
les
and
into
orl
or
cmp
jnp
sbb
add
jnp
sub
aaa
sub
inc
outsl
xchg
pop
push
mov
sub
bound
imul
inc
mov
or
mov
dec
mov
and
mov
or
repnz
add
pusha
jle
xlat
push
xchg
xor
repz
cmp
pop
sahf
aaa
lock
inc
ja
push
loope
lods
fstps
int
cmc
loope
mov
cmpsl
mov
mov
imul
stc
mov
fs
cld
mov
ficoms
dec
fsubl
xchg
stos
jmp
movsl
rorb
leave
pushf
pop
jne
shrl
xchg
aaa
or
jge
adc
in
fnsave
pop
inc
jb
mov
scas
add
inc
in
jmp
nop
out
sub
pop
es
inc
popa
mov
lods
subl
sbb
je
cli
aaa
int3
xchg
adc
cmpsl
arpl
mov
insl
pop
ret
sub
sub
sar
mov
mov
lods
pop
insl
mov
and
push
xchg
pop
inc
xchg
adc
xchg
imul
test
and
pop
mov
loopne
scas
int
shrb
fcomps
out
pop
lahf
loope
jae
cwtl
xchg
outsb
xchg
jmp
mov
adc
insb
pop
rcll
mov
or
sbb
sub
add
xlat
push
xor
sahf
nop
adc
mov
dec
push
out
pop
dec
filds
fistpll
sub
lock
mov
pop
mov
cmp
mov
test
add
add
adc
mov
andl
mov
subl
xor
or
mov
andl
add
movl
cmpl
je
cmpl
jne
pushl
pushl
call
mov
dec
mov
jmp
mov
movzwl
not
and
mov
mov
jmp
xorl
mov
pushl
call
test
jmp
movsb
jb
push
cld
pop
gs
call
scas
xor
jns
jle
or
cmpsb
repnz
mov
clc
cmc
dec
enter
jo
sbb
or
sbb
adc
jbe
jne
rcll
test
and
scas
cmc
push
jp
pop
xor
mov
adc
out
enter
add
inc
jbe
or
jbe
mov
iret
dec
popa
xchg
xchg
aas
xchg
and
repnz
notl
push
mov
dec
addr16
mov
adc
out
add
insl
jb
adc
scas
dec
imulb
ja
add
lahf
mov
inc
mov
in
inc
jno
stc
data16
mov
pop
adc
jns
mov
xchg
xor
cwtl
cli
cs
jmp
add
je
push
into
stos
test
and
xor
out
jb
jns
bound
lods
dec
lret
dec
adc
mov
xor
jge
js
rcrl
pop
sub
mov
jne
das
pop
loop
sbbb
sub
push
dec
loopne
test
xchg
mulb
mov
sbb
push
pop
call
or
out
add
in
cli
pop
enter
mov
inc
or
gs
lret
dec
sti
popa
or
cmp
mov
push
cs
pop
add
insl
pushf
xchg
sub
dec
and
ljmp
jge
es
icebp
cmp
inc
jg
xorl
add
mov
jb
bound
fiaddl
test
les
psubusb
add
sbb
jmp
aad
sbb
pushl
leave
sbbl
les
pusha
mov
cmovnp
stc
xorb
and
xchg
push
insb
iret
push
movsb
dec
loope
adcl
pop
or
loope
cmp
or
mov
xor
sti
mov
movsb
mov
inc
scas
or
add
rol
shrl
rcl
sarl
jge
add
jg
sti
pop
je
nop
push
mov
fstl
fstpl
adc
int
jle,pn
jae
test
push
das
into
mov
adc
addr16
pop
movsl
sti
inc
xor
and
dec
push
mov
pusha
loopne
arpl
int
insb
or
cmp
lods
loope
add
out
pop
inc
fmulp
adc
bswap
addl
lret
scas
daa
test
adc
das
jb
fmuls
pop
add
mov
enter
mov
lock
mov
pop
cmpsl
aad
mov
or
pop
cwtl
ljmp
pop
mov
sarl
inc
mov
xchg
mov
pop
aad
sub
mov
dec
decl
arpl
out
cmc
push
sub
and
enter
mov
mov
push
test
xor
shl
adc
lret
xor
dec
inc
pop
cwtl
fisubrs
cs
fbld
mov
mov
and
push
add
test
ret
push
mov
sub
movl
movl
mov
mov
sub
add
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
call
jmp
adc
mov
andl
mov
inc
mov
cmpl
jne
pushl
call
cmpl
jne
xor
or
inc
mov
cmpl
jb
jmp
and
ss
cmc
lock
sahf
rol
test
jle
jns
jle
andl
push
outsl
inc
inc
aaa
popw
pop
and
sbb
fidivrs
jnp
mov
inc
fildll
std
es
ret
inc
fiaddl
push
or
xchg
mov
or
pop
push
int
dec
pop
jecxz
fcmovbe
mov
push
pop
jbe
loope
jmp
dec
adc
movsl
inc
adc
fbstp
clc
fildl
mov
stos
shll
pop
and
lods
negl
nop
scas
movsb
imul
adc
jmp
sub
push
sbb
divb
test
andl
push
out
cld
ljmp
pushf
mov
gs
dec
adc
add
icebp
sbb
add
ja
ja
xchg
lea
lds
push
mov
testl
add
xchg
pop
mov
loopne
lahf
insl
jo
cs
mov
push
sbbb
adc
mov
sub
jecxz
sti
mov
out
adc
dec
es
add
sub
je
and
imul
inc
rol
xchg
jmp
ljmp
sarb
push
add
jle
leave
sbb
pop
icebp
jns
aam
in
roll
adc
cmp
leave
dec
pop
scas
lods
mov
pop
out
mov
mov
test
mov
mov
push
mov
outsb
orb
loop
push
cmp
sub
cmpsl
mov
mov
mov
aam
icebp
push
cli
xchg
jmp
icebp
cwtl
ret
xor
pop
outsl
xor
adc
push
imul
and
jmp
lods
mov
mov
xchg
int3
sti
mov
jg
lock
push
jmp
push
push
push
stos
ficoms
enter
test
pop
mov
ds
dec
sub
fst
enter
xchg
pop
adcl
insb
push
add
aaa
aas
nop
outsb
or
xchg
dec
inc
sub
cli
add
leave
xchg
pop
inc
rep
and
mov
xchg
add
xchg
xchg
cltd
cmp
mov
orb
jnp
or
or
or
mov
cs
inc
jl
sub
adc
dec
add
add
and
mov
arpl
or
dec
shll
mov
cs
ret
je
enter
xchg
or
in
cmc
mov
jecxz
pop
nop
push
mov
into
adcb
insl
scas
mov
in
into
arpl
fldt
mov
mov
fisubs
fldcw
stos
xor
loopne
mov
add
add
jb
push
sbb
and
std
hlt
ss
leave
push
dec
test
fistl
out
das
adc
add
ret
push
test
lahf
out
mov
out
orb
negb
mov
out
lds
int3
rcr
in
das
adc
pop
sbb
adcb
jns
add
shrb
cmp
aam
and
ret
cli
sub
cmp
jno
es
xor
push
dec
push
xor
jnp
cmp
lret
ret
ljmp
xlat
xchg
out
mov
sbb
fsubrs
ja
mov
sub
push
mov
sub
push
sub
rcrl
pop
pop
inc
outsb
outsl
lcall
push
imul
dec
movsb
shlb
pushf
push
xor
cmc
inc
jae
pop
fistpl
sub
outsb
cwtl
clc
jnp
jbe
or
divb
pop
lea
movzwl
and
mov
mov
adc
mov
sbb
mov
push
sub
lea
mov
xor
mov
andl
mov
inc
mov
cmpl
jne
pushl
push
push
call
cmpl
jb
jmp
call
mov
dec
mov
push
inc
xchg
arpl
dec
cmp
dec
jns
jle
cmp
or
loopne
inc
andl
push
jne
push
xchg
popa
movsl
add
xchg
daa
mov
stc
xchg
vmovaps
push
daa
insb
clc
dec
nop
cmp
cmpsl
push
sub
inc
lock
ret
jl
call
pop
and
leave
fisubl
mov
inc
gs
lea
ja
adc
push
add
dec
in
pushf
je
jecxz
lods
nop
lcall
add
enter
inc
jb
jnp
and
pop
es
or
mov
push
push
sbb
outsl
mov
ds
jb
rorb
hlt
mov
inc
mov
and
pop
pop
push
das
pop
jl
jne
add
xlat
test
and
enter
aam
imul
mov
or
das
inc
mov
mov
psubsb
sbb
sbb
push
push
jge
pop
pusha
iret
adc
push
fisttps
push
or
mov
leave
jmp
mov
or
dec
lods
mov
sbb
push
mov
inc
fcomp
lock
pop
scas
out
test
mov
dec
frstor
popf
int3
dec
mov
mov
sbb
cs
es
or
test
enter
call
call
cld
mov
loop
and
mov
add
outsb
push
xchg
adc
test
popf
xor
sbb
aas
lcall
mov
aad
xchg
push
call
inc
mov
faddl
xchg
inc
mov
add
sarb
sub
mov
outsb
das
js
lret
inc
rol
inc
jae
adc
das
pop
or
or
mov
data16
stos
fnstenv
mov
mov
lret
pop
xchg
fs
mov
arpl
dec
pop
lahf
repz
dec
pushf
inc
fisubrl
jp
add
adc
xor
shll
sbb
int
cmpsl
pop
std
xchg
pusha
sbb
cmp
mov
pushf
arpl
push
adc
adc
xchg
int
je
xchg
movsb
mov
pop
enter
mov
push
call
mov
push
and
dec
push
dec
pop
arpl
xorb
ret
xchg
int
sub
out
imul
test
xchg
jmp
jmp
rcll
and
loop
std
or
loop
pop
sub
and
cmp
inc
lcall
xchg
xchg
nop
adc
cmp
dec
sbb
add
xor
test
lcall
adc
dec
xchg
stc
inc
xchg
inc
inc
sahf
jne
sbb
lds
test
idiv
loopne
mov
in
insb
jl
mov
es
jns
dec
sub
movsl
pop
mov
pop
jl
push
jmp
mov
xlat
mov
into
stos
outsb
lds
lcall
pop
mov
call
nop
fstl
adc
xor
jo
addr16
imul
int
xor
xchg
sub
or
ret
out
mov
and
sub
lret
cmp
cmpsl
inc
cli
outsb
or
cmp
nop
insb
cmp
dec
fincstp
enter
mov
lods
js
push
add
aaa
mov
push
jmp
cmpsb
aaa
inc
cmp
push
inc
jns
push
and
les
jns
mov
leave
test
shlb
ds
sti
gs
in
mov
fisttps
mov
sub
fcoml
jecxz
adc
or
push
xor
push
cmpsl
push
push
xor
mov
mov
mov
mov
xor
mov
xor
sbb
mov
xor
addl
xor
add
sbbl
add
div
mov
jmp
inc
push
sti
sbbl
mov
xor
jns
jle
cld
test
cmp
and
jmp
xlat
and
pop
cmc
mov
jae
xor
push
outsb
and
pop
mov
loope
inc
icebp
enter
sbb
inc
cltd
out
fldl
les
mov
jmp
pop
rcrb
mov
data16
scas
je
push
lahf
fisubrl
jb
pushf
adc
mov
push
icebp
stos
dec
sub
pop
popa
scas
jo
cmpsb
xchg
xchg
mov
pop
cmp
add
mov
pusha
sbb
mov
add
dec
jo
movsb
pop
enter
sbb
out
cltd
aaa
call
imul
sbb
js
jg
lahf
jo
popf
sub
fwait
lcall
call
in
loop
push
clc
dec
sub
mov
ret
push
jle
repz
aaa
and
imul
xor
rol
mov
push
adc
rol
adc
mov
leave
and
cltd
mov
aas
ja
pop
shufps
mov
stc
mov
sti
data16
ds
out
inc
je
jne
in
out
mov
int
fldl
xchg
jge
fildl
inc
sbb
and
lret
inc
jbe
push
sahf
sub
adc
lods
inc
ret
add
xchg
data16
or
sbb
insb
or
rorb
ficomps
fdivl
inc
ret
cmp
fs
imul
rcrb
or
fmulp
or
adc
jl
sub
or
add
xlat
mov
add
cltd
negl
xchg
or
sub
int3
test
icebp
xchg
arpl
into
inc
loope
rcll
mov
hlt
scas
inc
push
add
inc
push
dec
dec
in
add
outsb
xchg
clc
push
andl
daa
cmp
and
xchg
and
mov
jl
sti
in
pop
outsl
addr16
xchg
sub
push
jno
add
adc
shl
adc
fcoms
dec
dec
lret
jg
repnz
loope
mov
lret
mov
adc
pop
xchg
aad
xor
add
pushf
add
inc
scas
push
loopne
xchg
cmp
dec
inc
mov
cmp
add
ret
ret
mov
test
repnz
push
out
push
cs
lds
add
sbb
pop
lret
and
cmp
adc
dec
lods
sbbb
xchg
aam
xlat
push
cltd
aad
mov
addl
cmp
loope
jmp
mov
cli
mov
mov
enter
jl
and
iret
xor
notl
pop
mov
test
aas
cs
adc
xor
xchg
idivl
xchg
loopne
xchg
faddp
rcrl
cmp
pop
xchg
in
scas
pop
pushl
or
lock
lods
jns
mov
dec
repz
test
mov
push
ret
rcl
pop
ror
xor
push
jb
dec
int
fstl
or
std
sbb
mov
pop
fs
dec
pop
out
mov
jl
mov
jbe
adc
cmp
js
or
inc
xor
push
imul
and
jb
inc
push
imul
in
jl
xor
mov
mov
aaa
cs
jle
subb
lret
ficompl
mov
out
mov
packsswb
mov
nop
adc
imul
das
stos
inc
push
pusha
lahf
test
bound
negl
mov
mov
movl
jmp
xchg
mov
jae
popf
cld
ja
or
out
ret
jle
dec
jns
jle
or
xor
xor
rcl
ljmp
scas
repnz
mul
lods
sbb
push
pop
lcall
sbb
lcall
jl
xor
sbb
rol
mov
je
jl
pusha
ffreep
inc
push
popa
jl
loope
mov
popa
ds
push
xor
jmp
test
movsl
shll
and
int
jne
in
pop
add
pop
pop
cmp
imul
push
rolb
pop
pusha
imul
lods
or
outsb
and
sahf
jb
xor
fisubs
jo
push
cli
cs
mov
jbe
push
or
sbb
gs
test
add
sub
les
adc
mov
add
rcrl
adc
pusha
jl
jle
ja
shll
sbb
add
sti
fnstsw
sahf
sbb
mov
js
pop
cld
mov
inc
push
cmp
out
jp
jno
addb
push
das
or
push
jp
fnstcw
pusha
pop
roll
sti
pusha
lock
add
or
jmp
lock
inc
push
les
jge
xchg
movsl
rorl
push
imul
jg
std
daa
or
adc
dec
mov
pop
lret
ss
fldcw
fdiv
cmp
jp
pushf
out
lret
mov
test
cmp
sub
sub
xchg
lds
sbb
push
xor
or
out
mov
jae
jno
nop
pop
jae
mov
jae
lds
rcrb
mov
out
cmp
push
and
sub
or
mov
incb
push
shl
hlt
xchg
imulb
cmp
inc
sbb
sar
sub
lea
or
mov
aam
call
adc
xchg
sbb
sarl
dec
pop
lods
rorb
sub
lret
movsb
jle
cld
movsl
push
in
push
in
repz
roll
dec
cwtl
xor
and
adc
and
dec
or
cmpsl
pusha
adc
mov
cmp
sarl
jp
xor
mov
cmpsl
adc
dec
ljmp
insb
or
lahf
gs
aas
incl
dec
sbb
inc
fstpt
fs
ljmp
fldenv
cmpsl
xchg
push
ja
scas
insl
pop
into
iret
xchg
dec
or
and
dec
fisttpll
add
arpl
lods
ljmp
mov
cmc
add
xor
push
sub
insb
int3
int
rclb
ret
aam
jmp
bound
xchg
sbb
push
dec
mov
dec
xor
clc
sbb
fwait
xor
lret
and
ja
push
xchg
repnz
add
mov
jne
xorl
cmp
mov
arpl
ffree
or
sbb
ss
out
in
enter
imul
or
push
lret
jo
test
data16
fwait
mov
fisubl
xchg
mov
outsb
xor
mov
push
sbb
sahf
sub
lret
sub
fsub
ss
adc
push
into
fdivl
jmp
cltd
imul
sub
scas
sti
jg
push
pop
lds
adc
mov
cmp
dec
or
inc
jno
and
pop
sti
fucomip
push
inc
ljmp
inc
data16
fcompl
jnp
test
inc
nop
stos
add
loope
fsubrl
pop
pop
pop
leave
movl
movl
cmp
movl
je
movl
lea
addl
mov
xor
mov
not
mov
orl
imul
movl
mov
movl
mov
cmp
je
mov
mov
sub
sub
mov
orl
mov
xor
add
pop
pop
jmp
pop
add
or
add
loop
mov
iret
jle
dec
jns
jle
cmpsb
out
test
dec
loopne
sahf
fwait
shrb
call
push
aas
cwtl
mov
pop
xchg
jns
mov
test
adc
pop
jp
sub
and
rcr
mov
cwtl
loop
mov
adc
and
cmp
cmp
sahf
insl
insl
cmp
test
std
cmc
daa
cmp
jae
xchg
scas
int
jp
cmp
jnp
aad
mov
lret
ret
add
sbb
imul
xor
and
push
call
mov
mov
rorb
xchg
rorl
pusha
pop
fmull
fmull
xchg
insb
push
movl
in
int
iret
imul
and
ja
std
mov
jg
dec
add
in
mov
sub
dec
and
repnz
or
xchg
xor
fistpl
mov
dec
add
or
mov
lea
in
mov
mov
shl
fisubrs
fsubrp
pop
into
adc
stc
arpl
mov
jno
pop
cmp
movsl
inc
xchg
insb
mov
fdiv
pop
cld
add
inc
mov
sbb
jne
insb
mov
outsl
stc
aas
push
add
stos
sti
dec
cmp
xor
push
adc
out
cmp
out
arpl
sbb
fists
lods
push
lods
mov
xor
mov
aaa
inc
mov
aad
into
cld
arpl
mov
iret
xchg
aas
fs
popa
aad
mov
or
xor
pop
mov
pop
aad
cli
xlat
aas
jge
mov
cmc
jo
sbb
movsl
dec
push
out
lret
enter
fs
lods
sub
adc
ljmp
add
fsubl
outsl
push
sbb
inc
test
mov
push
inc
sub
rcrl
je
aad
add
jo
xor
std
mov
xchg
adc
sub
add
push
and
in
inc
jns
inc
xchg
bound
push
arpl
cmp
pop
push
aam
enter
or
mov
and
shrl
add
pusha
popa
or
jg
out
mov
sub
pop
jmp
pop
rcl
or
pusha
out
ror
mov
jne
jns
dec
push
pushf
jmp
inc
sbb
shl
sbb
xchg
ficoml
jns
std
shl
cmc
jmp
loop
pop
movb
outsl
mov
int3
sub
mov
imul
loope
dec
sti
mov
ss
lods
stos
fldenv
and
jge
fildll
out
fisubs
dec
mov
pushf
sub
inc
jne
and
dec
addr16
ret
sti
dec
xchg
adc
andb
xor
in
cmp
add
cwtl
inc
dec
cmpsb
inc
or
or
pusha
lcall
push
push
pop
xlat
pop
lret
mov
orl
aas
jmp
addr16
adc
jecxz
pop
into
ljmp
adc
sub
out
jmp
or
cmp
shrb
int
sub
cltd
out
bound
and
ljmp
inc
mov
and
and
ja
pop
mov
outsb
push
cmp
scas
push
mov
aaa
dec
ret
or
subl
sub
sub
pop
ljmp
cmpl
and
jl
ds
mov
xchg
int3
inc
and
mov
or
je
dec
sbb
inc
adc
scas
sbb
jmp
cltd
push
xor
fcompl
ret
mov
add
cmp
je
mov
andl
jmp
mov
mov
or
cmp
je
jmp
ret
or
insl
pop
jmp
pop
sbb
or
jle
dec
jns
jle
cmp
cmpsl
scas
adc
inc
mov
pop
mov
push
adc
cmp
push
xchg
popf
inc
mov
jmp
loop
cmp
mov
mov
mov
xor
test
les
and
and
pop
mov
lret
test
out
clc
xor
pop
mov
mov
cmp
mov
mov
pushf
jnp
sahf
jbe
inc
aam
fisttps
mov
xchg
dec
pop
add
adc
mov
shr
pop
es
lea
mov
data16
movsb
cmpsb
in
pop
sbb
pop
xor
aad
gs
divb
in
jo
ror
movsl
sub
jle
inc
lahf
xor
cmp
pusha
test
loopne
lock
cmp
cmp
popf
adc
or
sbb
or
ret
inc
lds
push
and
enter
mov
lods
adc
pop
push
stos
lods
xlat
push
out
std
jl
jl
lods
mov
jns
das
dec
xchg
test
stos
imul
mov
inc
jge
xor
aam
lods
fnsave
out
xlat
mov
in
nop
inc
into
adc
sbb
dec
gs
mov
push
cmpsl
sbbb
daa
in
inc
push
fwait
cmpsl
cld
mov
pop
fsubl
sbb
idivb
subl
shll
inc
outsb
mov
aaa
adc
cs
pop
out
jno
insl
inc
push
inc
sbb
adc
mov
cmp
dec
and
and
rclb
xchg
lahf
or
push
ss
mov
sub
or
push
lret
dec
mov
jg
mov
fidivrl
xor
int3
aam
inc
out
lahf
loope
rcrb
repnz
cmc
fs
std
hlt
ljmp
mov
xchg
mov
sub
mov
pushf
adc
jnp
jo
call
lods
fcmovu
xor
sbb
int
stc
stos
test
cwtl
sub
fstps
mov
push
adc
jns
xor
loopne
scas
inc
mov
sbb
dec
or
fldt
jle
std
sub
aad
fimull
fldl
outsb
ror
pop
push
mov
lcall
rcr
les
pop
sub
inc
add
push
pop
xor
inc
jb
and
outsb
xor
mov
cmc
lods
push
sbb
insb
or
add
xor
aam
jl
jnp
les
setbe
mov
mov
xchg
xchg
shrl
xor
add
in
adc
cmp
lret
fs
sbb
out
xchg
mov
mov
pop
xchg
lock
pop
xchg
stc
imul
xor
mov
popf
mov
popf
xchg
or
mov
insl
pop
addr16
in
icebp
inc
xchg
or
and
cmp
incb
ret
scas
inc
fstl
pop
mov
push
mov
insl
and
sbb
xor
addb
jb
sbb
repnz
or
pop
add
scas
sbb
push
lock
mov
shl
filds
sub
pop
pop
push
and
add
push
adc
lret
cli
enter
xorl
push
xor
mov
push
mov
cmpsl
mov
pop
int
test
mov
mov
xorl
jmp
mov
mov
mov
mov
xor
mov
add
jmp
int
adc
push
pop
dec
xchg
leave
mulb
icebp
mov
jle
dec
jns
jle
fdivrs
in
cmp
mov
paddusb
mov
ret
filds
and
lret
mov
or
dec
repnz
jg
xchg
mov
pop
lods
push
xchg
mov
cmpsb
push
stc
call
jns
xchg
repz
je
aas
aad
lcall
sub
das
in
xor
or
pop
mov
sbb
hlt
pop
sbb
sub
mov
fcoml
out
lahf
mov
les
hlt
orl
sub
cmpsb
int
xor
and
cli
into
mov
cld
cmp
add
adc
push
push
adc
test
cwtl
cli
lods
rorb
pop
sbb
out
inc
mov
inc
outsb
shll
xchg
mov
sbbl
mov
ds
mov
das
loopne
xchg
push
mov
out
adc
ficoml
out
push
in
push
add
pusha
push
cmp
scas
add
enter
cld
sub
jae
jle
stos
jge
ret
mov
lods
mov
or
pop
mov
inc
outsl
push
jnp
shll
dec
cmp
loope
arpl
and
and
jns
jle
xor
mov
and
mov
mov
mov
push
mov
out
add
add
xchg
mov
adc
add
dec
addb
inc
daa
sbb
lahf
inc
push
aad
jno
dec
cmp
push
xchg
mov
add
cltd
xorl
rorb
repnz
xlat
subl
xor
data16
and
fwait
xor
mov
fcos
pushf
jb
out
shll
fisttpl
mov
test
xchg
or
jg
mov
jbe
adc
inc
sbb
inc
jo
enter
sub
mov
lcall
xchg
jp
push
lods
fnstcw
mov
lcall
mov
inc
inc
out
lock
out
cltd
fdivp
cmpsl
fisubl
push
outsl
arpl
sbb
cmp
out
out
test
and
xlat
pop
fstpl
dec
fsubrl
stc
mov
movl
pop
lods
sub
cmp
mov
idivl
repnz
sbb
pop
lahf
gs
das
sti
insl
jle
or
cmpsl
xchg
sub
push
rcrb
pushl
dec
mov
ret
add
cmc
shlb
jnp
mov
pop
movsb
cmpsb
pop
lcall
jb
push
mov
inc
mov
arpl
mov
cmp
aas
xor
mov
imul
cmp
lahf
jnp
in
add
shrb
ret
add
mov
pop
sbb
sub
orb
cmp
stc
into
vmovsldup
lcall
sub
jecxz
pop
inc
mov
lock
insb
mov
add
je
pusha
adc
push
out
test
xchg
out
pop
outsb
mov
shll
inc
cmp
xchg
clc
push
ret
cmp
nop
pop
mov
pop
cmpsb
test
jnp
stos
dec
inc
cmp
pop
js
xchg
mov
pop
dec
lock
mov
pop
out
or
add
sbb
inc
js
ret
add
or
sbb
fisubs
mov
sub
cmp
es
and
sbb
jl
fstps
xor
bound
pusha
or
ret
cmp
test
out
sub
test
add
mov
xor
add
mov
mov
mov
mov
xor
add
movzwl
mov
xor
lea
add
mov
mov
mov
xor
add
imul
sub
mov
jmp
mov
mov
jmp
fadd
test
rorb
insl
pop
jl
aam
sarb
dec
jns
jle
scas
enter
icebp
mov
jo
adc
cmp
mov
nop
les
aam
movntq
xorb
sbbb
pop
mov
mov
andb
xorl
mov
push
push
adc
xor
shrb
xchg
in
dec
cmp
test
imul
sub
cwtl
mov
xchg
inc
in
push
sbb
lcall
adc
xchg
shrl
cmp
js
mov
xchg
jecxz
sub
jns
insb
ja
outsb
dec
fstl
pop
jp
dec
imul
loopne
inc
mov
ljmp
adc
test
xchg
mov
and
add
lcall
inc
sbb
sbb
jno
pushf
inc
sbb
mov
xchg
add
insb
insb
push
jl
shrb
xchg
xor
cmpsb
gs
cld
stos
adc
les
dec
mov
test
outsb
js
lea
rcrl
push
out
jmp
movsb
mov
addr16
outsl
cltd
cwtl
inc
xor
fimull
lcall
sub
xor
scas
int
push
and
pop
div
lret
cmp
push
mov
repz
jl
xlat
scas
push
outsb
xor
out
jmp
scas
or
sbb
insb
pop
enter
adc
xchg
dec
push
fcom
addr16
fs
sbb
cs
scas
std
xor
xor
mov
and
stos
pop
sbb
in
mov
cltd
neg
mov
cmp
lcall
fldenv
mov
int3
stos
sbb
fdivrs
xchg
dec
dec
mov
mov
outsb
sbb
jle
mov
pop
lahf
sbbl
lahf
sarl
lcall
mov
xchg
in
jge
cmc
movsb
dec
cs
fwait
data16
ja
mov
xor
adc
int3
pop
fdivl
push
pop
sahf
lods
stos
scas
mov
sub
mov
adc
popa
mov
push
aad
inc
mov
fucomip
and
inc
xor
int
cmp
sbbl
lret
aam
adc
sti
push
sub
lods
shrb
nop
dec
les
test
mov
dec
movsl
je
scas
xor
xchg
pop
dec
arpl
mov
or
out
repz
ret
cmp
int
mov
jae
xor
sub
bound
idiv
in
ret
mov
pushl
jp
cld
pop
push
lods
mov
sub
in
xor
mov
subb
inc
or
stc
and
cmp
enter
jl
les
int3
jmp
lcall
push
clc
add
adc
mov
faddl
sub
popa
popa
push
xchg
iret
inc
lea
inc
dec
mov
xorb
or
or
imul
cld
dec
mov
ss
out
in
gs
dec
mov
mov
pop
sbb
shll
jbe
aas
inc
ljmp
mov
cmp
mov
out
mov
out
sbb
cmp
mov
pop
pop
xchg
mov
pop
shl
nop
cli
mov
sub
mov
dec
mov
jp
jno
sub
pop
icebp
cli
popa
add
mov
mov
sub
insb
and
inc
cmp
dec
xor
cmp
je
mov
addl
jmp
mov
cmp
je
mov
jmp
push
mov
sub
movl
cmpl
je
cmpl
jne
push
push
push
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
movzbl
sbb
mov
sbbl
push
xor
or
sbb
push
jmp
jmp
lahf
xchg
mov
sbb
and
fidivrs
loope
jle
jno
out
imul
jl
cld
push
push
sub
jg
mov
ja
jb
popf
repz
in
xchg
mov
pop
xchg
mov
scas
add
push
cld
lret
fwait
add
pop
out
inc
adc
xchg
jecxz
jle
push
out
sbbb
jbe
push
jb
lock
sbb
push
aaa
cmp
push
cmp
mov
loopne
xchg
test
icebp
aad
aas
inc
test
push
outsb
add
adc
shr
mov
sbb
add
cmp
int
js
mov
xor
out
cmp
push
insb
in
pop
mov
inc
test
hlt
lea
jae
or
mulb
pop
std
pop
xchg
xlat
xor
xchg
in
add
test
inc
inc
jp
cmc
mov
or
pop
gs
repnz
cmp
inc
mov
in
cs
sbb
jb
in
xchg
cmpsb
gs
jo
pop
stos
dec
inc
mov
lds
pop
pop
lods
mov
fs
fisttps
fsubrl
sbb
push
sub
mov
xchg
xor
push
adc
pusha
loop
pop
call
scas
jmp
add
push
inc
sahf
fwait
psllw
dec
and
add
iret
lahf
scas
inc
mov
sbbb
fsubrl
inc
lds
sbb
loop
sub
popa
xchg
push
pop
fwait
push
lods
int
into
pushf
inc
rol
push
pusha
cwtl
jmp
push
xor
push
shll
lock
ljmp
into
fwait
and
mov
pop
out
xchg
mov
add
dec
mov
xor
es
jne
cmp
faddl
mov
enter
inc
sub
mov
mov
faddp
fisubs
jp
fstpl
or
into
fwait
imul
mov
or
or
jnp
fadds
pusha
xchg
js
cmc
sub
aas
jle
sbb
or
xchg
cmp
sarb
in
sub
xor
outsl
adc
sub
mov
xor
mov
add
fiaddl
fisttpll
xchg
xchg
fiaddl
mov
lea
push
or
andl
mov
inc
mov
cmpl
jne
push
call
cmpl
jne
xor
or
inc
mov
cmpl
jb
xor
or
mov
add
push
sub
mov
xor
jmp
push
ja
push
aaa
push
jo
mov
aaa
outsb
fdivrs
loope
jle
jecxz
mov
lret
stc
fdivrs
aad
push
xchg
push
add
cltd
xchg
imul
stos
sub
shrl
ljmp
test
adc
sub
or
cmp
jecxz
ficoml
out
adc
adc
sahf
inc
sub
dec
loop
xchg
fs
xchg
adc
sbb
in
mov
and
jo
addr16
ret
jno
lahf
jno
repz
mov
pop
stos
das
pop
dec
aam
xor
lahf
lahf
mov
jp
xchg
fsts
xchg
push
add
cmp
lret
xor
inc
jae
inc
pop
nop
stos
xchg
cs
cltd
lea
test
pop
and
dec
sbb
jp
call
out
jb
loope
xor
insl
in
or
add
fwait
popf
mov
sarl
pop
outsb
rclb
dec
xchg
push
push
add
scas
aaa
mov
dec
mov
jne
iret
mov
push
mov
inc
jmp
xchg
pop
test
icebp
orl
pop
pop
fadds
in
mov
popa
jo
shll
sub
push
inc
xchg
push
xchg
test
lret
popf
and
popa
jo
ds
add
in
scas
add
je
mov
xor
stc
sahf
or
lock
lds
sarb
pop
cld
jg
int
movsl
test
imul
jp
int3
aad
and
sbb
ret
scas
outsb
int3
push
cmpsl
sub
ficompl
lret
cld
lret
jg
xorl
mov
jae
cmpsl
mov
mov
int3
push
aad
push
inc
or
and
test
icebp
mov
and
sub
leave
and
int
jb
mov
adc
iret
pop
test
xchg
lock
push
stos
fbstp
push
mov
sbb
jnp
push
divl
mov
push
popa
jl
sub
ss
mov
hlt
mov
stos
fadds
mov
sbb
fdiv
jmp
gs
movsb
sbb
ss
into
inc
push
mov
mov
lds
cmp
mov
out
push
outsl
inc
push
mov
push
mov
popa
or
inc
add
pop
sub
mov
xor
notl
movl
movl
add
jmp
cmp
jmp
adc
sbb
xchg
pop
adc
push
std
test
rcr
jle
loope
jle
mov
adc
mov
xor
movsl
sarl
mov
mov
insb
lock
xlat
jbe
cmp
jbe
inc
xor
sbb
sub
jno
bound
jge
test
pop
jb
je
inc
lea
xor
cld
movsb
sub
stos
sub
add
aad
in
subl
movsb
mov
pop
mov
pop
movsl
fmull
jb
sbb
jge
inc
mov
lahf
rcll
out
loope
decb
ds
cmc
stos
push
dec
cmpsb
or
test
pop
jmp
or
in
or
ret
stos
xchg
mov
sub
loope
jns
or
je
inc
push
inc
or
das
xchg
and
loop
jno
xchg
push
and
cltd
pop
in
ljmp
push
mov
xchg
adc
inc
stc
mov
push
inc
adc
and
outsl
dec
xchg
pop
repz
test
or
aad
cmp
mov
mov
fcomps
xor
rcr
lds
inc
mov
rclb
or
sbb
jno
ret
out
pop
insl
js
push
decb
xlat
push
scas
int3
pop
test
not
mov
int3
jo
xchg
xor
setno
das
dec
popf
ret
sub
idivb
xchg
mov
ret
inc
shrb
nop
idivl
jle
mov
int
jne
stc
fsubl
xor
and
cli
fmul
cmc
imul
test
inc
enter
dec
lret
push
call
out
mov
aad
xorpd
lds
data16
lret
enter
not
push
xchg
fwait
ret
jg
in
pop
pop
cld
dec
pop
aaa
enter
or
adc
mov
movsl
pushl
mov
addl
cmc
jcxz
sub
dec
insl
mov
or
push
adc
sti
aad
xor
icebp
movsl
ror
push
cwtl
pop
add
mov
sbb
mov
popa
jecxz
rcrl
jmp
pop
push
popa
add
sub
jns
lret
popf
jns
mov
test
stc
cmp
cmp
cltd
add
icebp
xor
mov
testb
cmc
ljmp
cmpsl
in
mov
test
add
mov
mov
movl
mov
mov
movl
mov
movl
mov
movl
jmp
movl
cmp
movl
jne
jmp
call
je
fnsave
inc
leave
out
in
inc
in
jle
js
jle
cmp
lea
test
iret
cmpsl
out
xchg
es
inc
fwait
xor
fs
aaa
aas
dec
insl
sbb
test
adc
fwait
aas
push
xlat
adc
cmp
jae
cmp
es
mov
or
push
int3
aad
addr16
dec
addr16
add
add
stos
sbb
jmp
xchg
cmp
loopne
insb
cmpsl
andnps
fmull
rcrb
leave
bound
pushf
add
push
or
adc
movl
js
mov
jmp
jge
adc
inc
movsl
push
cmp
leave
push
rorl
frstor
push
mov
out
push
sti
push
inc
inc
mov
data16
cmp
add
adc
loopne
dec
ds
das
mov
pop
cld
inc
dec
pop
fstl
push
invd
addr16
jp
stc
push
push
lahf
sub
sbb
mov
addr16
xchg
loop
dec
imul
pop
xlat
cmpsb
mov
in
dec
pop
test
js
divps
fidivrl
inc
ja,pt
pushf
imul
push
and
gs
inc
sub
xchg
icebp
les
mov
insl
nop
and
arpl
cmp
xchg
pop
insb
add
or
xlat
mov
adcl
xchg
into
mov
push
out
fwait
das
mov
int
mov
out
sarb
add
in
add
inc
inc
sub
nop
das
mov
jno
pop
push
push
sti
bound
mov
les
xor
mov
lret
mov
lods
outsl
daa
mov
fisubs
fisttpl
pop
mov
lret
andl
rcrb
mov
or
lds
into
loope
sbb
pslld
fldcw
jno
into
inc
movsl
stos
pushfw
mov
xor
clc
ss
inc
and
mov
sti
gs
pop
enter
sbb
test
js
sub
hlt
enter
xchg
inc
lahf
and
push
push
pop
testb
in
iret
adc
pop
inc
jg
nop
fimuls
gs
xor
inc
xor
add
lock
icebp
add
pop
testl
bound
ja
dec
fstps
inc
mov
dec
lods
pop
out
or
mov
orl
sub
push
mov
or
mov
addl
add
subl
push
decl
call
movl
incl
cmpl
movl
jb
jmp
cmp
jne
movl
mov
mov
mov
mov
mov
jmp
mov
xchg
jno
jno
out
fisttpl
das
loopne
jle
js
jle
insb
ljmp
and
jl
hlt
mov
or
roll
in
data16
mov
out
fdivrl
mov
push
xor
mov
pop
adc
push
mov
xor
out
test
outsb
das
pop
lcall
and
imul
add
outsl
add
or
lods
imul
jno
jnp
jle
mov
mov
jle
rcrb
aad
out
lahf
js
repnz
push
mov
sti
out
cmp
adc
movsb
popf
xchg
pop
shl
jl
xchg
cmpsb
repnz
jle
stc
stos
lods
mov
pop
jnp
sbb
outsl
mov
mov
push
jg
fldl
aam
xor
scas
mov
mov
cs
and
jle
cmpsb
cmp
mov
inc
jl
xor
jecxz
out
adc
sub
inc
addb
xor
les
cmp
roll
pop
xor
stos
inc
xor
mov
inc
in
mov
shr
cmp
push
loop
inc
shl
cmp
mov
and
cmp
ljmp
js
add
mov
in
jmp
and
enter
adc
dec
ffreep
shll
mov
aas
fadd
insb
fdivl
shr
or
aaa
sbb
jne
mov
inc
push
ja
push
fs
insl
jg
ret
cld
push
dec
push
cmpsb
sub
push
dec
int
mov
pop
lock
movsb
mov
add
pop
into
cwtl
jbe
fdivs
bound
and
cltd
jno
push
add
addl
les
fmul
jge
imul
xchg
xor
mov
insb
inc
adc
ljmp
xchg
mov
jo
add
inc
mov
je
popf
cwtl
add
mov
adc
xor
push
inc
es
mov
loope
lret
cmp
lods
or
fwait
push
add
mov
jne
outsb
jo
cmp
and
adc
jns
cmp
cmp
out
int3
jle
pushf
sarl
add
jbe
fucomi
jecxz
negb
fmul
stos
mov
xor
add
mov
lea
mov
mov
xor
add
mov
lea
push
mov
xor
add
push
mov
push
pushl
call
jmp
cmp
jne
mov
xor
add
mov
mov
mov
mov
mov
mov
push
pop
sub
add
mov
mov
xor
lea
cmp
jne
mov
pop
xor
pop
add
pop
leave
ret
push
mov
sub
push
adc
mov
mov
andl
jmp
jns
out
std
jge
or
clc
pusha
je
sub
jns
jle
pop
aad
orl
pop
mov
ret
in
mov
mov
jbe
mov
out
dec
add
push
ja
cwtl
xchg
divb
int
or
inc
or
orl
jno
push
ficomps
stos
or
outsl
dec
sbb
mov
mov
lds
fwait
inc
mov
mov
in
jp
mov
and
push
adc
lds
ret
scas
add
lods
jl
aam
cmp
arpl
and
test
push
clc
pop
lods
in
sub
xchg
adcl
cld
push
gs
xlat
cwtl
xor
hlt
lods
xchg
push
jmp
mov
inc
loope
pop
inc
ljmp
adc
aad
xchg
bnd
std
or
push
adc
loop
sub
insb
inc
push
jae
cmpsl
scas
cmc
xor
and
mul
movl
jae
pop
enter
mov
outsb
sbb
inc
je
out
icebp
cwtl
out
pop
cs
or
xlat
mov
mov
cmpsl
jecxz
sub
das
cmpsb
std
iret
mov
data16
mov
scas
cwtl
movsb
mov
pop
cmc
sub
pushf
cwtl
aam
aam
popl
jmp
mov
xchg
jnp
scas
cmpb
sub
movsl
lods
xchg
shl
mov
add
and
aam
xchg
sahf
dec
cmp
loopne
loop
jns
push
lea
mov
int
aaa
loope
jae
mov
mov
dec
jecxz
mov
add
outsb
frstor
loopne
fsubrl
ja
jnp
or
push
fwait
mov
xchg
jmp
or
scas
and
test
pop
mov
orb
addr16
lret
test
es
mov
jne
cmp
sbb
mov
lea
add
mov
enter
aad
je
pusha
jae
sbb
aam
push
inc
dec
cmp
mov
xchg
rcrl
popf
sahf
dec
push
cmp
hlt
daa
add
and
dec
dec
sub
or
jmp
mov
xlat
inc
shlb
add
add
mov
mov
ljmp
xor
push
bound
popf
dec
mov
and
xor
jg
ror
jmp
mov
sub
jge
xorb
xor
rcrl
lock
inc
in
cmp
dec
xchg
loop
iret
jae
into
mov
rorb
enter
aas
icebp
mov
inc
mov
or
jo
xorb
jns
cwtl
fs
fidivrs
cmp
dec
aam
push
out
xchg
xchg
mov
arpl
jecxz
roll
cld
jno
and
mov
rclb
jae
jp
jg
jge,pt
and
mov
jne
adc
sti
setl
subl
cmc
lahf
test
leave
jns
mov
jmp
sub
les
iret
mov
jl
mov
test
shlb
or
inc
pop
xchg
std
jge
add
jno
pop
jb
mov
adc
aad
ret
xor
xlat
pop
pop
out
inc
in
inc
jb
into
pop
pop
inc
subl
xchg
mov
xchg
xor
pop
pop
sub
and
pop
mov
out
fadds
adc
pop
pop
jg
adc
jae
mov
lods
mov
in
idiv
fnsave
jp
out
or
in
aaa
inc
xor
xor
rcrl
aaa
inc
outsb
int
or
ret
aad
mov
fmull
stos
dec
aam
pop
add
leave
sbb
fldl
pushf
pop
fildll
mov
mov
or
movl
xor
movl
movzwl
add
mov
mov
jmp
jmp
or
std
fdiv
sbb
push
sub
jle
jns
jle
xchg
pop
or
add
xor
subl
pop
imul
std
add
cmp
adc
jge
sti
push
into
daa
stc
sbb
js
ret
stos
and
cli
and
adc
out
data16
add
pop
xlat
adcb
sub
mov
divl
mov
jnp
outsb
scas
xor
sub
out
jo
adc
stos
pushf
mov
xchg
xchg
or
xor
cs
xor
add
icebp
cmpsl
outsb
add
movsb
aam
sub
scas
ror
movsl
sahf
jecxz
xlat
add
cmpsl
cmp
add
fldcw
xor
into
cmp
mov
xchg
xor
push
data16
jae
adc
decb
outsb
lods
xchg
adc
cmp
js
test
mov
push
add
cs
leave
xchg
daa
adc
dec
ret
jnp
scas
and
xor
jne
ss
adc
loop
sbb
inc
fsubrs
outsb
out
push
into
mov
loop
jb
add
les
xchg
icebp
pusha
pop
lret
jle
add
push
sub
rcrb
mov
xchg
mov
add
mov
imul
mov
add
out
iret
repnz
dec
fwait
es
outsb
addr16
mov
cltd
and
test
test
ljmp
pop
xor
xor
cmp
fisttpl
pop
ret
je
inc
inc
push
rorl
jo
clc
cwtl
mov
loopne
sub
adcl
fimuls
out
or
push
jo
mov
jbe
cltd
jp
mov
hlt
push
cmp
adc
mov
aas
mov
out
fwait
ljmp
adc
mov
xchg
in
outsl
pop
ja
rcll
sbbb
in
imul
xchg
push
adc
and
cmc
out
leave
or
inc
xchg
push
call
xor
inc
push
insl
es
jbe
lahf
mov
cmp
cmc
and
sbb
adc
aas
aad
adc
jne
jns
notl
push
mov
xlat
les
sub
jge
rcll
inc
pop
mov
ds
sub
fadds
int
sbb
int
insb
jae
popa
sarl
ds
out
xorl
test
jno
fnstsw
push
stos
or
push
sbb
repnz
pop
mov
inc
xor
mov
pop
fs
lret
je
test
outsb
jp
int3
sbb
movsb
adc
in
insb
sbb
jmp
jmp
jg
data16
fsubrl
enter
sarl
clc
iret
addb
lahf
scas
lods
jg
pop
stos
repnz
dec
mov
call
mov
pop
jbe
adc
loope
fiadds
test
testl
cmp
mov
inc
sbbl
inc
cli
mov
mov
xchg
jmp
mov
lds
fadd
add
test
cmp
lret
shll
das
xor
push
and
inc
aam
pop
or
pop
xor
mov
flds
push
inc
notb
mov
shrl
mov
jnp
sub
shlb
out
pop
ja
mov
jle
push
test
xchg
add
mov
xchg
push
inc
in
xor
inc
cmc
cmp
sub
in
push
scas
hlt
int
imul
out
xchg
in
mov
insb
xchg
sub
mov
sub
addl
mov
mov
or
xor
xor
add
xor
mov
add
mov
inc
mov
xor
add
mov
movl
mov
mov
sub
add
jmp
xor
xchg
mov
stos
cs
iret
aad
rorl
jns
jle
in
mov
inc
mov
jmp
addl
mov
in
inc
shrb
push
test
cmpsl
popa
pop
sahf
push
insl
jecxz
scas
lods
test
adc
loopne
push
xchg
test
mov
inc
jecxz
push
call
and
pop
mov
punpckhwd
pushf
aam
mov
in
cmc
ja
mov
cmp
pushf
cmp
ret
aam
and
cmp
inc
sahf
push
sbb
fcom
lcall
cld
ficoml
or
dec
jns
push
nop
add
rcrl
out
pop
call
jmp
dec
push
shlb
into
sbb
sbb
mov
push
int
sub
sub
push
dec
aas
fisttps
js
cmp
xor
jnp
sbb
inc
lcall
fists
popa
sub
push
sub
add
xchg
pop
xor
sbbb
iret
addr16
stos
ss
mov
cmp
dec
adc
and
stos
in
les
xchg
imul
popa
xchg
not
push
rcrl
mov
cmp
inc
inc
cmpsl
add
out
ret
and
xchg
mov
jne
or
push
or
das
mov
in
sbb
aam
inc
shrb
sbb
outsl
sbb
cmc
cmc
mov
xabort
push
xor
push
dec
fucomi
rolb
xchg
and
jge
jno
lahf
out
ja
ss
es
lea
mov
fnstsw
loope
mov
clc
adc
cmp
adc
shrb
enter
arpl
push
sub
call
insb
pusha
fnstsw
cmp
jo
push
jl
sub
and
lea
push
mov
dec
adc
push
adc
repz
and
sbb
ds
add
and
mov
andl
add
pop
add
xchg
cli
xchg
xor
insb
ficomps
mov
mov
xor
xchg
dec
mov
jns
js
xchg
insb
adc
add
mov
icebp
xchg
leave
jbe
sub
adc
add
cltd
loopne
mov
decb
dec
adc
cmp
add
xor
push
cmp
mov
add
shrl
repnz
data16
cmp
test
addr16
ja
mov
jo,pt
call
aas
lods
aas
inc
dec
push
mov
sub
fimull
add
sub
aaa
add
cltd
jns
cld
sbb
inc
es
rorl
bt
fisubs
mov
adc
loop
sti
test
mov
fimull
inc
jns
inc
movsl
in
inc
push
cmc
movsb
nop
jecxz
mov
test
mov
add
jg
clc
ljmp
sbb
inc
sahf
pop
add
in
add
test
pushf
inc
mov
mov
out
insl
shll
lock
lret
cmpsb
out
negl
push
adcl
or
mov
lahf
mov
repnz
xchg
mov
fwait
out
inc
pop
dec
sub
xor
sahf
leave
inc
xchg
repz
and
or
movsb
mov
dec
xchg
ja
cwtl
das
jo
jnp
sarl
dec
jle
rorl
pop
mov
test
jmp
pop
inc
and
out
pop
gs
xor
pop
das
in
xchg
cmp
sbb
sub
notb
out
or
shlb
dec
mov
ret
gs
mov
fidivrs
pop
lds
mov
inc
fdivrs
test
add
add
in
cld
popf
popa
imul
push
dec
dec
or
jns
jle
fdiv
cmp
loop
test
adc
std
fwait
in
inc
in
cmp
daa
mov
jb
mov
xchg
cmp
test
fisubs
and
and
pop
inc
cltd
sbb
xchg
idivb
sub
imul
in
or
mov
jmp
imul
mov
mov
xchg
mov
divl
jl
sarl
fbld
sarl
cwtl
decb
or
lock
in
or
jns
imul
lret
ljmp
std
push
xchg
xchg
mov
sbb
xchg
sub
mov
shll
insl
lock
pop
xchg
and
and
mov
cmp
scas
cwtl
imul
adc
mov
int
stc
les
icebp
and
repnz
and
cmp
test
not
out
sarb
pop
sub
pop
rcr
mov
fwait
call
or
sub
add
jge
shlb
dec
aaa
aad
xchg
scas
sub
xor
lods
or
pop
mov
mov
mov
mov
dec
push
insl
adc
loope
mov
dec
and
pop
out
test
push
xchg
push
dec
jae
clc
lahf
dec
add
movsb
mov
dec
cmp
sub
int
mov
fldl2e
sahf
mov
and
add
mov
cmp
mov
sub
ljmp
xor
jb
and
aaa
aad
xor
leave
xor
xor
xor
sbb
mov
fistl
ficomps
int
jl
inc
push
sub
or
into
push
ja
pop
push
shl
mov
xchg
or
xchg
outsb
repz
cmpb
pop
inc
inc
lods
sbb
std
out
xchg
aam
sbb
pop
push
cmpsb
jns
mov
data16
fcomip
cld
mov
ja
sub
xor
in
int3
add
adc
cmpsl
jmp
and
into
sub
or
add
mov
insb
mov
fyl2xp1
sbb
mov
fstl
jmp
dec
clc
or
shlb
sbb
sahf
movsb
movsb
add
fstp
xchg
in
mov
std
adc
and
jle
out
sbb
sahf
es
push
adcb
jg
test
fsubr
mov
xchg
add
rolb
sub
push
cmpl
cmpsb
pop
rcrl
insl
nop
or
inc
sub
pextrw
fdiv
jge
in
push
faddp
and
inc
cli
jecxz
xchg
jns
pop
das
and
loopne
out
ja
mov
inc
mov
enter
hlt
faddl
loop
loopne
pop
or
std
movl
ret
out
mov
inc
pop
mov
adc
lods
xchg
mov
fcompl
lcall
dec
push
or
stos
push
iret
cmpsl
xor
ret
cmpsb
scas
push
lods
jb
lcall
je
jno
fnstcw
mov
lods
mov
cmp
fstl
into
test
cmp
sub
lds
clc
loop
aas
int
movq
lods
or
imul
int
out
fcomip
adc
xchg
test
ss
rolb
jne
mov
js
xor
xchg
sahf
pushf
mov
mov
push
movl
les
mov
test
repnz
adc
sti
rcll
popa
jbe
pop
pop
dec
add
movsb
dec
xchg
popa
xchg
inc
aam
test
test
int3
cmp
cmp
movl
movl
cmpl
je
cmpl
jne
push
call
xor
xor
dec
mov
jmp
andl
mov
inc
mov
cmpl
jne
push
push
pushl
push
push
pushl
push
call
cmpl
jb
or
movl
sbb
mov
xor
sub
mov
orl
add
cmp
je
movl
push
jmp
xorl
mov
add
mov
addl
sub
movl
mov
andl
xor
addl
add
movl
cmp
movl
jb
mov
mov
sub
xor
mov
mov
andl
mov
inc
mov
cmpl
jne
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
xor
inc
xor
sbb
add
or
add
imul
mov
movl
cmpl
je
cmpl
jne
pushl
call
mov
dec
mov
jmp
and
mov
sub
cmp
movl
ja
xor
add
add
mov
orl
jmp
xchg
dec
in
in
test
out
mov
xor
jle
jns
jle
enter
xchg
sahf
and
inc
push
dec
stc
push
int3
stos
fisubl
sub
mov
mov
and
aam
in
cmp
dec
mov
notb
inc
int
fsubr
outsl
adc
sahf
adc
arpl
cmp
add
cld
and
outsl
mov
push
mov
xchg
lret
push
hlt
dec
es
pop
mov
lods
xchg
pop
sub
fs
mov
add
arpl
xor
testl
jg
cmp
test
lods
inc
jo
fisubrl
cmp
cmc
popa
sub
arpl
ljmp
or
lcall
aas
cmp
sbb
aam
dec
roll
push
pop
add
pop
movsb
mov
xor
mov
fcoms
ret
sub
push
insb
sbbb
push
outsb
mov
push
dec
fldt
pop
shl
cmpsb
and
pop
push
and
push
push
fwait
mov
pop
lret
push
es
ljmp
pushf
and
or
push
and
gs
pop
pop
outsb
stc
or
aas
aaa
das
lret
sub
mov
daa
aam
cmp
std
aaa
test
in
jle
vmulsd
mov
lods
das
and
pop
pop
sbb
inc
jns
ds
push
imul
cmc
mov
outsl
orb
icebp
test
les
xor
xor
pop
sti
and
pop
mov
xor
adc
mov
scas
fstps
cld
sti
mov
dec
mov
mov
fiadds
inc
or
sub
sahf
sti
mov
inc
loop
movsl
mov
in
jge
mov
or
mov
loop
cmp
sbb
sub
or
shlb
inc
pop
stos
incb
sub
cmc
mov
mov
fnstcw
mov
rcrl
and
loop
data16
inc
push
fildll
std
fnstcw
mov
shl
mov
lock
inc
stos
bound
mov
cmpsl
testb
pop
inc
je
and
jp
cmpb
or
leave
mov
fisubrl
shrb
cmp
cmc
sub
repz
pop
xchg
leave
mov
loope
push
sub
dec
outsl
stos
mov
mov
fmull
xchg
xchg
add
outsl
lcall
andb
push
out
lock
mov
fwait
sub
sbb
mov
add
adc
push
mov
das
xchg
cmpsb
in
insb
mov
mov
jle
dec
or
fstl
and
xor
lret
adc
shlb
fcmovnbe
xchg
int
sbb
add
in
inc
mov
addr16
mov
lods
adc
push
clc
pop
adc
les
bound
jae
ja
int3
leave
jmp
xchg
push
xchg
push
inc
xchg
xor
sub
in
outsb
andb
add
js
std
sbb
push
cld
out
lret
ss
hlt
addl
cmp
add
jnp
repnz
jae
out
lahf
outsb
mov
sarl
push
in
xor
and
sub
pop
inc
lds
inc
push
ret
movsl
aas
jmp
insl
cmp
lock
pop
cmp
scas
xchg
push
dec
sbb
shll
in
sti
orl
add
add
cld
cmpl
pusha
xor
adc
out
xor
or
in
adc
push
rol
sahf
push
loopne
pop
push
jbe
out
rorl
xor
out
mov
push
inc
inc
add
inc
add
shr
jno
add
mov
subl
mov
mov
sub
mov
xor
xor
or
add
adc
jmp
test
jne
xchg
in
in
cmp
jle
jo
jle
std
or
gs
call
and
ds
cmp
mov
icebp
std
xor
sarb
and
je
sbb
and
jmp
jns
stos
pop
lahf
jl
dec
popf
lods
mov
in
xor
popa
or
sub
pop
cmp
decb
and
sbb
sub
or
sahf
cmp
clc
and
cltd
shrl
xor
dec
pop
cmc
clc
inc
pop
dec
dec
xchg
pop
cmp
ds
mov
out
cmp
enter
stos
or
sbb
pusha
pmaxub
cltd
add
and
popa
add
fisttps
pop
movsb
lret
lcall
movsb
insl
or
scas
sbb
mov
jns
std
dec
add
repz
pop
xor
xchg
jmp
imul
pop
dec
add
daa
aaa
repnz
in
cmpsb
pop
enter
pop
adc
aaa
nop
sbb
mov
dec
or
inc
data16
call
mov
xchg
adc
xchg
pop
mov
push
mov
sub
sti
pushf
roll
nop
push
lods
pop
out
cwtl
lahf
int
inc
xchg
inc
out
in
add
icebp
subl
pop
dec
aad
xchg
leave
and
stos
pop
rolb
xor
and
jnp
mov
pop
add
inc
test
push
movsl
and
dec
xchg
repnz
push
call
xchg
pop
jbe
lods
mov
jmp
sbb
fstpl
add
inc
cld
lret
and
inc
sbb
fisttpl
sbb
jbe
xor
add
xor
les
int3
filds
data16
lods
jno
imulb
jno
test
push
add
pop
into
inc
push
into
pop
mov
stos
inc
mov
lods
cltd
inc
mov
out
cmp
daa
cmp
repz
mov
jb
dec
or
add
and
cli
sbb
repz
sti
push
repz
lods
cmp
mov
push
add
data16
mov
xchg
jne
adc
xchg
ljmp
mov
or
lods
int
mov
filds
inc
movl
mov
and
push
lahf
sub
ja
jmp
fildl
mov
adcl
and
sbb
xchg
xchg
dec
jb
and
mov
adc
movsl
int3
push
insb
out
loopne
xchg
popa
leave
dec
clc
rorb
in
das
outsl
sti
icebp
sbb
sub
mov
cmpsb
inc
leave
mov
loope
or
push
out
jmp
in
xchg
ret
jecxz
and
jns
jp
sbb
xchg
das
cmpsb
adc
rorl
shl
sbb
xchg
lods
pop
call
sub
movsb
mov
push
and
mov
sub
push
push
xor
movsl
jno
outsl
sahf
or
orl
out
mov
test
push
pop
adc
test
cs
leave
mov
pop
orb
sbb
mov
xlat
jnp
mov
jecxz
lret
in
mov
fcoml
xchg
test
jne
flds
gs
mov
adc
mov
xchg
pop
mov
les
cltd
dec
adc
inc
movsl
fdivrs
fwait
jg
rcrl
xor
jmp
xor
and
xchg
into
mov
fisubrs
mov
inc
fucomp
out
xor
jno
fildl
sahf
or
loopne
sub
rorl
scas
xlat
xor
mov
mov
xorl
sub
movl
cmp
movl
ja
mov
mov
movl
jmp
sub
mov
add
mov
andl
jmp
xor
or
inc
mov
cmpl
jae
cmpl
jne
push
pushl
push
push
pushl
call
jmp
xor
xor
xor
add
andl
mov
inc
mov
cmpl
jne
pushl
pushl
push
push
push
call
cmpl
jb
add
imul
mov
mov
jmp
aas
andl
push
repnz
pusha
jbe
daa
ss
jle
jo
jle
scas
pop
jo
push
pop
ficomps
sub
jmp
push
push
mov
push
arpl
cld
sub
or
cld
lahf
xchg
xor
call
pop
inc
inc
rorl
mov
or
xchg
pop
or
in
add
stos
or
xchg
xor
movsb
mov
jmp
jbe
cltd
scas
mull
jge
outsb
popf
mov
stos
sbb
sub
dec
popa
imul
loopne
adc
mov
adcb
outsl
orl
ret
das
test
movb
leave
adc
mov
inc
insb
call
jns
xor
cmpsl
ficoms
add
jbe
in
push
dec
adc
pusha
shrb
add
mov
or
cwtl
dec
push
scas
in
je
shll
daa
bound
test
pop
mov
and
addr16
into
and
mov
push
test
out
jg
jne
dec
aas
and
sub
mov
sbb
es
dec
sbb
jecxz
xchg
add
pop
jge
shlb
movsb
xor
jecxz
xchg
sub
subl
sbb
mov
mov
jns
pop
cmpsb
mov
cmc
out
shl
jecxz
lods
cwtl
decl
insl
xlat
loopne
call
out
adc
dec
mulb
mov
outsl
mov
out
stc
and
xor
out
xor
or
fmull
pop
and
push
inc
imul
outsb
incl
enter
shlb
pop
dec
or
mov
mov
lahf
jle
add
je
mov
out
int3
shrb
outsb
push
push
or
shlb
and
sbb
outsb
cmpsl
dec
jle
jmp
sbb
ja
shlb
dec
pop
ja
add
xor
inc
xchg
std
movsl
int3
fildl
subl
movsl
insb
dec
mov
pop
cmc
faddp
pop
jae
out
inc
pop
sub
push
xor
repnz
fcompl
pop
int
pop
mov
cmp
arpl
mov
inc
mov
dec
fstpl
lods
push
lock
pop
stos
or
stc
push
iret
fs
pop
jae
addr16
push
pop
lea
fwait
dec
xlat
bound
lods
test
cmc
aam
pop
mov
push
mov
dec
jbe
xorb
push
outsl
push
mov
cmp
pop
push
cmpsl
jb
cmp
push
fldt
dec
aaa
enter
adc
jmp
mov
cli
xchg
inc
mov
pop
enter
rorb
sub
test
mov
add
xor
sbb
xor
lds
out
mov
rep
jae
popf
mov
je
mov
or
inc
fwait
popf
imul
xchg
fisubl
pop
xor
jno
mov
out
es
sti
sbb
stos
inc
mov
nop
loope
cmp
js
xchg
mov
sub
fcmove
dec
adc
and
push
xchg
sbb
fisubl
cltd
push
decl
bound
mov
pop
sti
jbe
jmp
imul
ss
add
divl
jne
pop
pop
hlt
mov
jo
rclb
popa
cmp
fmul
loop
push
je
test
cmpsb
out
lcall
pop
fistpl
cmc
pop
fdivrs
xor
fadds
dec
shll
mov
mulb
fwait
lret
xor
cmp
inc
in
gs
adc
add
adc
call
cmp
sub
dec
mov
test
ja
mov
jmp
jmp
rorl
aam
pop
rcll
xchg
mov
imul
jns
jle
ret
xchg
sbb
adc
pop
sbb
add
mov
cld
mov
jne
inc
addr16
mov
fs
and
cmp
sbb
sub
cwtl
dec
popf
cs
pop
sbb
push
mov
or
out
mov
loop
ja
es
ss
add
push
or
bound
or
call
mov
sbb
xchg
inc
or
test
push
dec
cmp
cmp
jmp
in
fimuls
adc
adc
addl
pop
rcrb
cmp
les
flds
push
cmp
jg
repnz
xor
pop
in
sbb
pushf
imul
cmp
add
push
sti
in
inc
jb
std
inc
mov
es
xlat
or
pop
popl
loopne
in
adc
cld
dec
test
push
iret
or
popf
sub
mov
adc
and
push
mov
xchg
cmp
test
fs
and
xchg
mov
mov
clc
and
dec
xchg
adc
jae
sub
mov
dec
call
mov
popf
lds
divb
mov
daa
bound
insl
and
das
mov
int
rorl
sbb
mov
inc
es
outsl
cwtl
aad
test
imul
inc
jmp
loope
das
push
dec
push
sbb
mov
xor
adc
mov
xchg
fdivrl
test
arpl
pusha
pop
dec
inc
aas
xor
aaa
push
add
sahf
aaa
adc
hlt
cmp
loope
pop
in
mov
mov
lcall
cmp
pop
ds
jge
jle
loop
test
jno
divb
cmpsl
scas
test
aas
pop
dec
lods
ror
adc
or
fldl2t
jb
addl
add
lahf
mov
je
cmp
mov
sub
out
add
cmp
push
addr16
mov
jae
lea
enter
xor
or
fdivrs
in
jno
shrb
or
or
je,pt
out
dec
dec
fdiv
push
das
dec
ja
enter
pop
inc
jno
and
scas
sbb
push
negb
imul
mov
xchg
dec
mov
push
dec
pop
icebp
pop
lea
xor
enter
or
out
mov
shrb
aad
fucomp
inc
inc
and
dec
adc
cwtl
jne
and
fbstp
stos
loopne
call
mov
pop
mov
es
test
test
push
das
rolb
fwait
sbb
pop
cmp
pop
sub
xcrypt-ofb
cmpsl
push
xor
mov
ret
testb
fmul
cmpsl
sbb
cmpsl
push
fiadds
shlb
xlat
lcall
test
push
sbb
out
in
jbe
adcb
adcl
sahf
xchg
mov
sub
pop
pop
jno
pushf
std
dec
aaa
fistpl
shlb
mov
in
push
stc
cltd
sbb
and
sub
pop
pop
dec
test
pop
adc
inc
xlat
jl
lods
and
mov
sub
inc
push
add
pop
push
sarb
outsl
adc
jp
cmp
pop
popa
add
inc
dec
lods
pop
aam
push
and
dec
cmc
xchg
xchg
or
or
in
xchg
mov
or
inc
inc
push
iret
xchg
adc
and
loopne
jp
sub
mov
and
or
push
xchg
xchg
mov
push
push
repz
gs
mov
ds
inc
add
popf
jb
movsb
xchg
xchg
sti
ds
xor
shrb
mov
mov
xor
xor
add
add
imul
mov
mov
sub
cmp
ja
mov
jmp
mov
mov
xor
xor
add
add
imul
mov
mov
sub
cmp
ja
mov
jmp
mov
mov
xor
xor
add
add
imul
mov
mov
jmp
xor
outsl
jne
std
inc
sbbl
imul
jle
jns
jle
out
dec
mov
inc
icebp
popf
or
out
mov
das
add
mov
dec
lods
jae
push
sub
inc
rep
xchg
adc
lahf
or
jmp
roll
subb
and
cmpsl
enter
jecxz
movsb
inc
pop
cmp
pop
rorl
pop
outsl
adc
cmp
pop
or
xchg
dec
scas
jbe
leave
mov
jbe
ljmp
push
jg
movsb
cmc
dec
xlat
jae
leave
and
lcall
inc
insb
add
fildll
mov
outsl
test
sub
std
out
mov
mov
push
pop
ficoms
inc
mov
mov
stc
negb
imul
mov
xchg
and
repnz
out
pop
jl
rclb
push
into
jle
and
lea
lret
mov
fwait
sbb
xor
inc
jecxz
scas
cld
mov
sub
cmp
lock
test
mov
lods
cmp
inc
out
adc
inc
out
cltd
sub
inc
icebp
in
out
incb
stos
cltd
and
bswap
movsl
or
push
mov
stc
arpl
je
int
mov
xchg
xor
add
out
push
pop
mov
inc
cmp
xlat
jle
ret
fsubrp
mov
xor
int
out
add
bnd
popf
mov
iret
fstps
popa
mov
sub
xchg
xor
inc
cmp
sbb
shlb
xlat
lea
or
pop
pop
popf
sete
jnp
pop
jae
or
inc
mov
adc
push
insb
daa
cli
mov
and
std
add
and
mov
leave
mov
sbb
ret
pop
sbb
xchg
cld
adc
jg
push
push
enter
xor
mov
cmp
out
and
adc
scas
dec
jo
ljmp
pop
das
pop
jmp
cmpsb
add
and
pop
in
lds
add
pop
sbb
xchg
push
scas
jg
xchg
push
in
inc
les
xchg
mov
push
xlat
xchg
mov
sbb
into
push
mov
rclb
lahf
cmp
add
loopne
mov
jg
cmp
jge
in
popf
lcall
lds
mov
or
out
cmp
data16
inc
insb
js
ret
sti
nop
xor
cli
movsl
lds
testl
test
movsb
dec
push
mov
ds
int3
nop
test
jno
jae
mov
sahf
xchg
xor
xor
es
pop
pushf
les
cmp
add
mov
ss
xchg
movsl
aas
popf
lock
or
inc
iret
fsub
in
xchg
push
xchg
lods
je
fwait
std
ror
sbb
cmp
pusha
fcom
stos
shrl
movsb
cli
scas
das
aad
std
adc
lds
jne
inc
mov
cwtl
leave
push
jecxz
sahf
je
mov
push
and
mov
cmp
jne,pt
out
jbe
dec
cmp
jno
lea
mov
movsb
xor
ljmp
popf
adc
cmp
jbe
inc
icebp
in
cltd
mov
outsl
adc
mov
jnp
sbb
dec
lock
and
mulb
test
scas
mov
sbb
imul
enter
lfence
pop
in
inc
jp
imul
inc
insl
lret
sub
or
jne
hlt
adc
jp
sti
xchg
or
pop
pop
and
ds
das
ror
mov
scas
cmp
dec
cmp
pop
dec
test
dec
arpl
cmp
jg
jp
lods
add
imul
outsb
sahf
testb
pop
sti
cld
sub
cmp
mov
jbe
mov
mov
xor
xor
jmp
test
rolb
dec
pop
repz
add
ret
in
jle
jo
jle
jne
into
sub
or
jno
les
scas
movl
push
jo
jle
test
xchg
stos
mov
js
xchg
mov
aam
xor
idiv
pop
adc
lock
jp
stos
rol
mov
sub
xchg
cmpb
or
inc
leave
mov
hlt
jo
std
inc
fcom
insl
rorl
fwait
icebp
test
xor
xchg
outsb
jae
or
mov
call
xchg
pop
inc
pop
outsb
popa
jns
test
out
fscale
test
roll
imul
xchg
xor
pop
ja
jnp
push
ljmp
stos
pusha
xorb
fucomp
sbb
dec
xor
addl
mov
cmp
rorl
aas
mov
cmpsb
mov
mov
out
stc
pop
pop
sarl
out
out
xchg
or
out
movsl
ljmp
in
inc
push
push
push
adc
lods
movsb
int
mov
push
jbe
sub
lock
cmpsb
xchg
jmp
in
insl
dec
jp
int3
or
jns
clc
movsl
in
mov
cmp
inc
or
daa
pop
js
add
fists
jle
lock
sub
imul
sub
xchg
dec
shr
js
imul
push
lods
mov
sbb
push
push
lret
cmpsl
adc
cli
adc
rol
dec
push
inc
sbb
dec
out
mov
ss
add
gs
inc
dec
adc
pusha
pop
and
std
push
and
sub
das
adc
in
inc
add
dec
loop
je
fwait
shrb
dec
lret
add
sub
insb
arpl
push
fcoms
aad
cs
callw
xlat
mov
mov
addr16
outsl
sbb
lods
or
std
jg
lock
fdivrp
mov
push
jl
push
cli
cmp
scas
push
jl
lret
or
aam
int3
hlt
ljmp
nop
es
mov
add
pusha
xor
dec
jecxz
stc
js
addr16
in
sbb
sbb
ja
add
pop
fmuls
xor
mov
rcrl
push
inc
jns
mov
ror
fcoms
imul
push
aaa
sbb
rorl
jge
inc
and
orb
jmp
dec
pop
flds
out
sub
adc
imul
push
insb
adcl
cmp
jno
fs
jb
scas
cmp
sub
scas
xor
loope
pop
mov
pop
mov
scas
out
push
fisttps
or
push
add
adc
subb
dec
xchg
push
sbb
std
dec
mov
pop
adc
shll
repz
push
dec
mov
sub
idivb
sbb
mov
fbld
xchg
mov
ds
add
repz
flds
inc
xlat
mov
cmp
sahf
outsb
xorb
lea
sarb
mov
iret
arpl
dec
sub
popf
mov
adc
lock
int
fwait
mov
orl
and
jmp
imul
jns
add
fs
mov
mov
sub
fsubr
into
jno
push
aaa
ja
mov
mov
sub
fidivl
inc
dec
pop
adc
das
rcll
loope
rorl
xchg
es
rcrb
outsl
cvttps2pi
pusha
xchg
jge
mov
iret
shll
dec
inc
push
jb
cmc
sub
xchg
cs
xchg
cli
aam
fdivs
add
and
mov
push
jne
xchg
xchg
test
rcrb
movsl
neg
or
sub
adc
pop
in
mov
inc
into
jge
out
mov
jmp
cmp
dec
mov
shlb
mov
jo
jle
ret
and
push
fs
fistl
test
jmp
pop
ret
inc
jp
mov
test
sbb
popf
das
pop
cli
cs
pop
pop
fistpl
jno
cmpsb
inc
out
loope
decb
jecxz
cmpsl
call
add
and
jae
mov
data16
test
jnp
enter
sub
pop
sub
dec
inc
xchg
xchg
jl
mov
pusha
inc
or
push
in
movsb
dec
pop
daa
sbb
call
dec
xchg
push
iret
test
sub
push
cmpb
lods
and
jmp
mov
aaa
cld
sub
stos
insb
bound
insl
push
fwait
xchg
xchg
lret
in
inc
cmp
pop
mov
dec
stos
inc
stos
mov
mov
xchg
lds
aaa
push
test
ret
loop
movsl
pop
xor
mov
and
push
push
stos
cmp
mov
scas
inc
fcmove
or
in
cmp
popa
fcmove
rclb
out
lock
push
xchg
cs
pop
pop
or
jg
call
aam
jg
mov
jbe
scas
inc
and
es
or
nop
ljmp
bound
orl
fnstsw
dec
inc
push
ss
add
add
adc
add
xchg
je
mov
sbb
adc
adc
adc
adc
mov
cmpb
mul
mov
repnz
xchg
mov
sbb
pop
jne
fdivr
jnp
dec
call
mov
aam
dec
adc
in
insl
hlt
add
movsl
xor
das
lock
dec
add
lret
cmpsl
or
push
adc
jge
std
loopne
mov
cmpsl
inc
push
roll
cmp
mov
cmp
sub
or
les
lea
pop
decl
inc
jmp
xchg
fisubs
push
in
fwait
cmp
mov
cmp
pushf
iret
dec
icebp
cmp
negl
mov
shrb
xchg
adc
andb
aaa
mov
les
jecxz
dec
into
lea
data16
movsb
fcmovnbe
add
xchg
xchg
sub
push
repnz
popa
inc
and
sahf
cli
loopne
iret
stos
mov
in
pop
mov
xchg
xchg
push
pushl
mov
and
cs
xor
push
in
out
mov
push
out
mov
scas
sti
sbb
loope
dec
push
jge
lods
pop
xor
pushf
mov
cmp
pop
stc
pushf
cmp
push
xchg
imul
roll
xor
xchg
test
shrb
sbb
jne
pop
inc
repnz
sarb
pop
dec
mov
mov
clc
mov
and
sbb
cmpsb
ficoms
inc
js
enter
aad
lret
aas
lahf
adc
into
adc
inc
aad
insl
cmp
dec
sbb
mov
test
ret
stc
mov
cmpsl
ja
inc
ficoms
rcrl
pop
cli
cmp
inc
mov
fisubrs
sbb
movsb
sahf
negb
push
sbb
pop
sbb
loop
nop
sbb
ficoml
aad
jp
movsb
push
sbb
push
pop
scas
adc
fidivrl
sbb
sahf
arpl
xchg
adc
and
aaa
lret
mov
xor
pushf
or
jl
xorb
leave
sarb
hlt
shlb
out
adc
in
addr16
dec
lods
mov
sub
inc
push
fstl
cltd
xchg
push
push
std
jns
jmp
ss
mov
fcomi
stc
inc
add
sub
aam
xchg
inc
jmp
jg
scas
xlat
mov
mov
mov
mov
add
movl
mov
movl
movl
mov
xor
add
jmp
mov
xor
jmp
sub
inc
dec
idivl
and
lea
rclb
jle
pop
xchg
push
jno
push
pushf
mov
cwtl
pop
add
xor
adc
push
adc
inc
cltd
ds
leave
mov
dec
pop
mov
jecxz
xchg
jmp
int
sub
test
pop
addr16
jge
ret
fimuls
mov
xchg
push
push
shl
stc
insl
mull
out
xchg
pop
mov
add
or
pop
bound
jb
mov
and
ja
mov
jns
mov
xor
adc
test
fwait
rcl
mov
imul
pop
sub
pop
nop
testl
into
imul
jo
mov
es
inc
jbe
loop
and
and
push
pop
add
test
dec
xchg
push
mov
sub
mov
dec
xchg
cli
fcoml
jbe
jecxz
sbb
adc
std
dec
iret
and
shl
and
sbb
sub
xchg
cld
inc
bound
aas
mov
mov
mov
test
mov
ret
popf
lahf
sarb
in
nop
cmpsb
enter
push
dec
dec
push
out
int3
daa
nop
jle
incl
pop
add
loopne
adc
jecxz
jg
inc
add
out
xor
xchg
inc
hlt
pushf
repnz
inc
std
dec
xor
paddusw
mov
mov
inc
movsb
movsl
mov
lret
xchg
jo
dec
rcl
and
cmp
mov
inc
pop
lahf
sbb
xor
xor
sbb
mov
ret
loopne
cmp
into
fsubrl
imul
jnp
adc
adc
lcall
jno
je
jge
mov
or
mov
adc
and
mov
sarl
push
cmp
out
ds
sub
sub
and
mov
mov
and
lds
mov
cwtl
mov
imul
push
add
mov
inc
movl
in
push
pop
xlat
jmp
flds
dec
pop
popf
in
les
adc
cmp
int3
inc
in
call
cmp
div
sub
cwtl
lock
and
fdivrl
push
mov
in
icebp
lods
push
divl
mov
cmpsl
cmc
inc
aad
out
cmp
sarb
jg
push
cmp
mov
sbb
nop
xlat
lods
mov
xor
sbb
ja
movsb
jge
sub
inc
pop
jbe
in
and
xchg
arpl
xor
dec
fdivr
bound
add
int3
into
xor
or
loopne
repz
mov
mov
xlat
faddp
xchg
lds
aam
push
test
add
and
or
or
add
movsl
mov
xchg
cld
in
dec
push
shlb
pushf
divl
dec
jae
sbb
lret
jecxz
ret
test
mov
or
aas
sbb
mov
mov
push
mov
nop
jg
jg
ret
sub
leave
adc
xchg
jecxz
test
cmp
out
fistpll
add
inc
ret
stc
cmp
pop
cltd
jmp
fisttpl
mov
fs
test
fsubs
push
out
test
cwtl
push
jnp
xor
ljmp
inc
add
hlt
adc
jo
and
js
mov
push
arpl
add
or
cmp
push
in
mov
mov
mov
mov
xor
add
mov
mov
mov
mov
mov
xor
add
mov
mov
mov
mov
xor
add
mov
jmp
and
mov
mov
jne
pandn
xchg
lret
jle
jns
jle
push
pop
orps
fadds
xchg
adc
fcmovnb
inc
adcl
jp
jb
ljmp
cmp
into
pop
loope
xor
and
test
jl
insl
cld
loopne
loope
jb
sub
popf
cltd
cmc
jge
int3
mov
nop
movsl
adc
das
ja
sub
jge
fidivrs
push
dec
inc
loopne
popf
outsl
inc
mov
clc
sbb
jg
pop
sbb
mov
pop
lds
inc
cmp
incb
or
cs
popa
aas
mov
xchg
and
ficoml
cmpsb
cli
pop
add
roll
pop
pop
pushf
and
inc
push
or
js
sub
jmp
push
cltd
fisubrl
out
mov
das
jmp
push
mov
xchg
adc
iret
insl
dec
adc
xor
mov
and
ret
fstpt
lret
lock
cwtl
or
mov
rorl
out
mov
leave
aam
dec
mov
ja
pop
dec
jb
subb
sarb
add
pop
adc
sbb
loope
test
xor
add
lock
addr16
andl
fisubl
rcrl
stc
inc
imul
fs
lods
lcall
jns
fbld
or
cmp
int3
popa
inc
fisubrl
inc
scas
sub
push
jb
pop
dec
inc
jge
mov
sub
mov
xchg
jne
arpl
fprem
insb
fdivrl
fucom
cs
inc
and
ja
neg
add
repz
pop
or
dec
ret
mov
inc
sub
nop
pop
xor
push
aas
dec
jns
adc
xchg
cmpsb
sarl
or
mov
imul
pop
filds
mov
adc
push
lods
mov
lahf
and
das
adc
in
insb
outsb
push
data16
cmp
xor
fnstcw
ret
loopne
repz
push
fisttps
jno
xchg
xchg
mov
int
js
lds
into
push
adc
dec
out
xor
repnz
jns
mov
in
nop
pop
add
jne
sub
rclb
sub
std
adc
cmp
dec
sub
jmp
push
bound
mov
xchg
xlat
mov
lahf
dec
or
cmpsl
popl
xchg
iret
pop
lds
xorl
mov
loopne
jns
cmp
mov
and
lret
mov
in
cmpsb
lret
rcrb
mov
adcb
dec
pop
dec
sub
inc
out
jecxz
shr
xor
jmp
xor
lret
aaa
lret
jmp
int3
mov
movsl
cs
inc
xchg
cs
cli
push
mov
push
and
push
mov
lahf
xlat
or
sbb
xor
sub
arpl
scas
adc
out
xchg
ret
adc
das
mov
xchg
pop
in
in
dec
fldl
test
sbb
dec
mov
rorl
push
cmp
stos
sahf
push
sub
int3
scas
fs
daa
mov
pushf
adc
xor
insb
pop
xchg
push
push
mov
loopne
loop
cmc
or
and
in
or
stc
in
in
and
lahf
std
cmp
xchg
iret
cmp
xchg
and
sti
cmp
sahf
loope
and
pop
std
xchg
adc
daa
shl
mov
xchg
imul
rorb
and
arpl
mov
pop
inc
xor
lahf
xorl
pop
cltd
jb
add
hlt
xor
xor
add
add
imul
add
mov
mov
mov
jmp
push
and
jl
jge
movsl
sbb
std
dec
bound
jo
jle
dec
dec
mov
aas
push
cwtl
adc
mov
test
sbb
fmull
inc
lea
aad
mov
sarb
lcall
in
test
dec
mov
pop
dec
test
int
mov
mov
aas
mov
idivl
or
cmp
add
je
pop
test
clc
adc
leave
mov
sbb
cwtl
lret
sub
outsb
and
leave
into
inc
sub
inc
popf
int
jne
mov
jmp
roll
outsb
bound
aad
add
or
jl
rolb
sub
int
sbb
das
notb
in
jecxz
call
imul
ljmp
cwtl
xlat
and
ss
cmc
jae
and
sbbb
inc
mov
push
addr16
dec
sub
stos
xor
fidivs
pop
xor
xor
jnp
scas
cmp
in
xchg
dec
jp
fimuls
fidivs
or
shr
xor
lret
andl
outsl
test
pop
sbb
repz
or
mov
je
push
pop
or
inc
mov
insb
orl
or
idiv
dec
ficompl
pop
mov
test
xor
jne
or
jnp
xchg
fistl
pusha
cli
imul
inc
mov
std
mov
leave
loopne
adc
adc
andl
icebp
and
arpl
inc
ljmp
shl
and
adc
mov
cltd
push
inc
sub
out
mov
push
imul
adc
lds
xor
sbb
jmp
cmp
test
push
call
mov
into
pop
xlat
cmp
xor
int
in
aaa
lahf
push
push
fdivrs
xorl
jno
pop
aad
nop
or
iret
mov
and
jae
cmpsl
cli
ficoml
aas
mov
insb
adc
nop
out
out
pop
xchg
and
cmp
test
insl
or
xchg
repnz
jns
lcall
or
mov
add
in
test
test
mov
jl
lea
ss
mov
push
and
and
addb
jl
push
push
push
inc
pop
push
add
cmpsl
into
in
or
lret
mov
adc
test
fcomps
sbb
mov
jg
sub
push
idivl
inc
cmp
push
push
mov
repz
fldt
adc
mov
mov
imul
fdivl
arpl
out
movl
out
push
cli
mov
pop
jnp
cmp
jo
jb
sub
xchg
push
and
fsubrl
adc
jge
cmp
fsubp
mov
addr16
std
pop
pushf
cmp
call
imul
xor
pop
fcmovnb
mov
imul
cmp
jmp
outsl
orl
rorb
xor
adc
inc
sbb
notl
sub
sbb
in
mov
and
dec
inc
xchg
push
pop
mov
adc
shlb
mov
pop
dec
in
sbb
insl
xor
stc
inc
loop
pop
or
imulb
rcrl
in
xchg
cs
mov
add
mov
lcall
scas
lret
jle
mov
daa
sub
lds
push
lahf
cltd
shll
sbb
lock
shl
adc
mov
js
movsl
xor
add
imul
mov
xor
sub
mov
mov
xor
add
imul
mov
jmp
pop
in
add
insb
xor
fcmovb
and
lcall
enter
ret
and
jo
adc
add
loope
test
ficompl
mov
xchg
sub
int
cmp
and
push
rorb
inc
inc
addl
xchg
iret
adc
add
or
cmp
sbb
inc
sub
leave
ja
inc
lahf
aas
dec
hlt
pop
adc
jns
arpl
cmp
sbb
jmp
add
jl
movsb
aaa
jp
sub
leave
aaa
xchg
xchg
lods
mov
sub
pushf
mul
jbe
dec
dec
jb
aas
sub
inc
mov
or
jge
ja
fcmovbe
or
int3
sahf
xchg
mov
mov
loopne
xorb
dec
loopne
lds
ja
clc
mov
stc
data16
leave
pop
or
mov
xchg
push
xlat
shll
inc
pop
addl
scas
fistpl
jecxz
add
inc
xchg
jno
jae
insb
cmpsb
movsl
push
pop
push
xchg
addr16
or
xor
fisubrl
xchg
clc
jbe
orl
add
adc
mov
daa
or
add
pop
pusha
cltd
sbb
in
pop
std
loopne
mov
out
outsb
mov
dec
add
aas
insl
cltd
sahf
cltd
repz
mov
std
test
sbb
aaa
call
mov
ret
xchg
mov
jo
xchg
pop
dec
outsl
xchg
std
rcrl
xchg
and
push
xchg
stos
repnz
aam
pop
aad
mov
out
jle
or
inc
mov
ljmp
aaa
mov
das
scas
imul
jp
fs
mov
ss
stos
or
jmp
mov
pop
mov
and
mov
inc
loope
push
jecxz
repnz
pop
jne
mov
xor
adc
add
cmp
jnp
out
add
jb
mov
mov
mov
lea
push
cmp
mov
in
dec
mov
iret
inc
aad
gs
rorb
push
fdivl
pop
fstps
cmp
xchg
add
add
addb
xchg
cmc
in
stc
xchg
fildl
and
and
mov
jp
mov
addr16
ret
inc
sub
ljmp
push
dec
cld
lock
in
insb
fdivl
mov
imul
xorl
hlt
je
stos
mov
gs
scas
iret
test
sub
ret
and
mov
inc
jmp
lahf
or
sub
adc
das
mov
jno
repnz
mov
push
mov
es
ja
add
push
xor
pop
push
cmc
jnp
or
lods
jle,pn
lods
pushl
mov
out
dec
xor
mov
jmp
adc
xchg
lret
icebp
popf
push
push
pop
mov
inc
xchg
adc
jbe
mov
iret
mov
cmp
int3
js
xor
rcl
int
ja
adc
jo
rorb
rclb
xchg
xchg
add
dec
push
lock
jl
push
and
orb
shlb
dec
dec
cmc
fnstsw
xor
add
cli
jl
imull
mov
jp
mov
loop
adc
std
test
adc
adc
cmp
jno
xchg
mov
fsubl
frstor
inc
fcom
pusha
rol
push
into
cmc
sbb
repnz
mov
cmp
xor
mov
pop
cmp
mov
addb
sub
mov
xor
add
rorb
adc
and
xchg
dec
or
adc
mov
xor
sub
lea
cmp
jbe
mov
mov
xor
add
imul
mov
jmp
pusha
jecxz
jge
icebp
insb
fwait
mov
xor
jo
jle
push
ljmp
fwait
in
psubusw
add
movsl
int
loope
adc
adc
pop
into
int3
push
in
jns
lcall
lea
lcall
daa
hlt
push
sub
iret
repz
rorl
xor
bound
fistpl
push
data16
adc
push
sbb
incb
cld
or
or
dec
ret
fcmovne
fcmovnbe
mov
add
ss
rorl
cmp
mov
std
call
sbb
insl
pop
sbb
mov
mov
xor
ss
jae
mov
popa
into
pop
pop
xor
pop
inc
xchg
cli
je
push
sbb
or
stc
jp
add
imull
aas
call
movsb
dec
dec
push
add
or
into
sub
std
sub
sub
push
movsl
notb
xchg
mov
sub
sub
sub
gs
ret
jmp
lret
mov
jnp
icebp
and
cmc
pop
sub
loope
pusha
subb
add
rorl
test
mov
inc
or
jle,pn
adc
dec
daa
adc
and
pop
sbb
shlb
ds
pop
cmovns
icebp
int3
xor
jbe
test
imul
movq
mov
pop
pusha
ror
push
push
in
cmp
push
push
divb
and
inc
lea
lret
and
mov
mov
in
push
jge
ret
out
andb
leave
rolb
mov
scas
shlb
jae
sub
push
jmp
adc
repnz
adc
aam
xchg
ljmp
mov
mov
add
jl
int3
ret
dec
lock
test
addr16
leave
aam
push
push
push
sub
mov
fdivrs
jns
sub
inc
mov
fcomps
out
jp
hlt
test
ss
mov
xorl
stos
pop
and
xor
clc
xor
cmova
xor
gs
jle
add
les
mov
fxch
das
mov
pusha
cmc
movsb
add
push
test
xchg
push
xchg
sbb
sbbb
push
pop
movsb
sbb
jne
mov
orb
and
sbb
inc
xchg
decb
sbb
xor
mov
fbld
jbe
jle
or
xor
stos
sub
loope
aaa
mov
mov
ss
mov
mov
jl
push
pop
orl
popa
cmp
lds
push
and
and
push
push
mov
push
inc
rcl
xor
and
mov
push
mov
lret
das
popf
mov
adc
xor
xchg
pop
imul
mov
enterw
inc
xchg
in
cmp
testb
jl
inc
call
adc
jle
out
lods
lods
cmpsl
sbbb
ds
repnz
adc
pusha
mov
bound
aad
dec
fildll
sub
sbb
xchg
xchg
sub
pop
hlt
jae
cmpsl
add
xor
aas
adc
xchg
mov
int
mov
xchg
loope
adc
out
arpl
push
push
mov
xchg
inc
fs
les
mov
cmp
leave
cmpsl
stos
or
aas
mov
jo
mov
decl
mov
mov
inc
push
add
sbb
and
push
xchg
jp
imul
inc
insl
enter
or
ret
and
jns
xor
add
mov
lea
jmp
outsb
xlat
shlb
mov
pop
out
test
xchg
xor
jle
stc
insl
mov
ljmp
sub
daa
cld
in
xor
dec
mov
jmp
jecxz
push
iret
push
mov
stc
pop
xor
aaa
jne
popf
fdiv
ret
fs
dec
inc
and
adc
mov
mov
push
pop
adcl
mov
jmp
dec
mov
mov
ja
into
push
push
lret
sub
sub
jno
push
mov
xor
incl
mov
aas
popf
call
and
xor
dec
dec
stos
cmp
push
aas
mov
push
jne
pop
pushf
popf
sarl
ljmp
aam
jecxz
jle
imul
xchg
insl
pop
aad
xor
adc
and
add
add
xor
lds
add
mov
adc
rolb
inc
mov
adc
add
out
mov
ljmp
mov
xchg
or
outsb
int
lret
jb
xchg
insb
das
mov
scas
jge
aam
into
xor
lds
mov
fildl
add
fimull
mov
xchg
insb
or
fidivs
ljmp
les
sub
and
in
fisubl
push
or
push
xchg
jae,pt
adc
pop
mov
mov
xchg
call
mov
jmp
and
out
std
popa
fstp
fidivrs
out
push
lcall
push
cmp
int3
xchg
mov
int
add
mov
cmpsb
std
jmp
out
mov
xor
mov
mov
mov
enter
push
rdtsc
or
pop
xchg
psrld
push
les
das
call
orl
clc
test
pop
jo
sub
mov
add
jae
mov
mov
lds
jbe
loop
pop
sbb
test
add
cli
insl
out
push
fsubp
or
aaa
jmp
inc
in
int
add
jl
fstp
mov
mov
mov
xor
sysenter
cld
and
loope
push
inc
test
lock
shl
or
repz
pop
sub
lea
adc
fsts
or
xor
pop
or
xchg
cmpsl
mov
pop
dec
shll
decb
dec
ja
lahf
sbb
jae
mov
cwtl
and
insl
imul
sub
aam
sarb
in
adc
scas
out
jbe
push
mul
fildl
sub
adc
in
out
jmp
mov
sbb
inc
mov
mov
sub
mov
mov
inc
orl
rcl
jno
jbe
mov
jecxz
sbb
test
mov
push
cmpsb
in
call
and
repz
adc
sub
mov
popa
in
and
adc
push
add
or
into
imul
out
jl
xchg
cmc
ja,pn
fmull
cs
bound
leave
iret
in
mov
cltd
fnsave
jge
mov
dec
mov
mov
ret
lock
adc
push
inc
add
js
cmp
test
mov
ret
fwait
icebp
push
mov
inc
les
push
add
add
push
pushf
cmpsb
addr16
or
scas
mov
data16
inc
push
mov
mov
jb
and
dec
xchg
das
sarl
popf
or
push
xchg
dec
cmpsl
js
or
cbtw
push
and
sbb
push
sti
out
xchg
jecxz
push
pop
js
mov
xchg
adc
push
loopne
sarb
jmp
sahf
lcall
adc
and
in
in
xor
jle
jo
jle
inc
cld
ja
mov
sub
xor
mov
cmp
imul
cmpsl
add
ficoml
push
loop
inc
sbb
jle
inc
mov
lahf
ss
insl
sub
rcll
aam
sbb
outsb
cmp
fisubrl
mov
jl
sub
xchg
fbstp
mov
inc
lahf
ss
cli
popf
notb
xor
aad
ja
cld
cwtl
in
cwtl
push
test
cld
xchg
clc
insb
int
out
pushf
cmpsb
imul
inc
dec
clc
jb
jg
and
std
shll
mov
pop
cs
into
mov
xchg
pop
fimull
mov
xor
and
test
sbb
xchg
inc
pop
dec
cmpsb
pop
arpl
add
sub
add
stos
xlat
sbb
sbb
sub
sub
addr16
cmp
pop
cvtpi2ps
sub
mov
sbb
jo
jmp
adc
js
arpl
cmc
xor
push
addr16
jno
stc
and
push
lock
mov
mov
mov
insl
in
fs
xor
out
and
jle
sarl
fidivl
hlt
adc
jg
pop
mov
push
and
pop
in
sub
pop
repnz
ds
xchg
push
hlt
mov
out
mov
mov
lcall
out
sub
pop
mov
pop
push
or
pop
adc
ss
andb
inc
sbbb
popa
pop
fistpll
adcb
xchg
sbb
lahf
pop
xchg
push
jo
sub
divb
ds
scas
ret
and
pusha
out
or
mov
mov
scas
iret
ja
hlt
in
cs
mov
xchg
mov
loope
push
inc
int3
jl
push
jns
ss
fdivl
push
adc
pop
push
iret
or
push
cmp
adc
fs
stos
in
xchg
cwtl
icebp
repnz
shll
jmp
rol
inc
es
out
hlt
xor
lret
inc
int
inc
data16
outsl
lahf
clc
sbb
xor
mov
shl
cli
fsts
in
test
or
pushf
jb
scas
inc
aam
adc
call
push
and
pushl
lahf
or
sbb
mov
ja
push
pop
or
push
xor
pop
or
mov
xchg
repnz
xchg
or
in
pop
xchg
arpl
rep
sbb
pop
add
rcl
sahf
addl
lods
stos
scas
aam
mov
jo
add
mov
loopne
mov
movsb
ficompl
int3
dec
push
add
pop
push
leave
mov
jmp
psadbw
jb
cwtl
add
dec
mov
loop
xchg
dec
std
sbb
push
xchg
daa
and
fbld
es
repnz
or
inc
or
into
xor
rcrb
dec
movsl
roll
outsb
xchg
aad
test
stos
cmp
jne
xchg
arpl
add
jle
sti
mov
ljmp
daa
nop
pop
xchg
popf
dec
xchg
scas
adc
inc
into
aam
or
mov
test
fistps
outsl
scas
scas
sti
loopne
cmp
in
sahf
call
jecxz
inc
fdivrs
into
add
or
jge
mov
jo
mov
lret
lock
xor
test
add
dec
clc
inc
xchg
cld
xor
lods
lcall
jmp
push
mov
jg
ret
or
sub
fidivs
addb
lods
inc
icebp
sbb
das
clc
imul
dec
dec
push
pop
loop
ret
sbb
cmc
xchg
lret
aam
sub
add
mov
mov
xor
add
imul
cmp
jbe
pop
jmp
mov
xchg
imul
adc
loope
stos
jle
jo
jle
xchg
stc
mov
xchg
or
xchg
mov
jmp
push
imul
movsl
jo
dec
mov
or
mov
pusha
xor
js
or
dec
mov
pop
lds
or
ret
adc
sub
icebp
add
mov
dec
pop
sub
or
mov
sti
push
cmp
lods
fst
or
frstor
outsl
gs
mov
ret
jecxz
ljmp
jne
sbb
mov
iret
loopne
jmp
jmp
into
mov
ret
test
xchg
mov
cmpsb
in
nop
adcl
jge
arpl
mov
out
insl
xor
and
lcall
dec
push
and
outsb
and
bound
rcrb
fsubrs
inc
fildll
inc
xchg
orb
mov
xor
push
stos
insb
mov
cmp
insb
push
cwtl
and
loopne
xor
jp
rcll
in
push
jb
and
int
repz
mov
or
sbb
dec
cmp
cld
in
imul
inc
lret
aaa
mov
push
shl
stos
adc
lahf
xchg
jl
sbb
test
and
sub
sbb
cs
notb
add
add
inc
xchg
cmp
inc
xor
sbb
add
mov
sub
xacquire
xchg
dec
jns
sgdtl
stos
lret
es
aas
cmp
sbb
insl
pop
aad
icebp
jae
mov
push
ja
stos
xchg
das
xchg
adc
mov
dec
cmpsb
mulb
jne
icebp
inc
pop
stc
cmp
bound
iret
lahf
outsb
dec
popf
pusha
mov
out
push
push
sub
pop
orl
fs
xor
outsl
mov
cli
jns
jg
add
jge
mov
inc
or
scas
inc
cmpsb
gs
mov
add
push
dec
cmp
arpl
mov
aam
insb
inc
test
xor
dec
xlat
dec
jne
jge
dec
arpl
lret
cld
push
push
add
and
inc
xor
inc
cs
dec
lods
lea
insb
gs
jmp
pushf
cld
lahf
stc
add
addr16
push
fidivrl
lods
imulb
out
jmp
cli
outsl
pop
xor
outsb
lods
icebp
sub
jns
pop
fimuls
push
call
mov
scas
jno
xchg
imul
in
popa
adc
rcrb
aam
xchg
add
sbb
orb
and
mov
jmp
push
adc
das
pop
jo
jmp
sub
and
adc
adc
push
adc
pop
nop
pop
push
mulb
pop
mov
xor
mov
xchg
aas
xlat
or
dec
cs
popa
jle
or
loop
aam
aas
inc
in
cmp
hlt
sub
jg
mov
cmp
jae
push
and
cmpsb
fsubl
xchg
mov
ljmp
cmpsb
iret
or
in
adc
lcall
adc
adc
jno
push
dec
sub
add
push
pop
inc
add
int3
xchg
dec
movsb
aam
pop
cmp
scas
cs
aas
and
cld
adc
stc
mov
cmp
jo
push
gs
imul
orb
sub
insl
pop
scas
dec
ja
jge
and
shr
inc
add
nop
in
int3
aad
jle
ss
push
mov
sub
test
mov
push
mov
push
dec
test
pop
adc
mov
fstpt
pop
xor
ret
out
jmp
aad
leave
ret
push
mov
sub
sbbl
push
sbbl
push
incl
push
andl
push
adcl
call
test
movl
je
adcl
xor
inc
movl
jmp
add
movl
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
push
push
call
cmpl
jne
mov
inc
mov
jmp
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
push
call
jmp
movl
cmpl
je
cmpl
jne
push
pushl
call
mov
dec
mov
jmp
sub
movl
sbbl
lea
movzbl
and
mov
mov
movl
cmpl
je
cmpl
jne
push
push
pushl
call
cmpl
jne
mov
dec
mov
xor
add
dec
mov
jmp
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
call
cmpl
jne
mov
inc
mov
jmp
sub
lea
mov
adc
mov
mov
xor
or
sub
or
mov
mov
mov
sub
mov
mov
or
mov
mov
andl
xor
sbb
mov
xor
add
mov
mov
movzwl
cmp
mov
movzbl
mov
je
sub
mov
xor
add
sbbl
imul
movl
mov
movl
jmp
addl
xor
sbbl
add
mov
movzbl
sub
mov
xor
adc
add
not
mov
mov
mov
xor
xorl
add
movl
cmp
jne
sbbl
push
movl
pushl
sbbl
pushl
adcl
call
and
mov
mov
and
mov
sub
mov
neg
mov
mov
sub
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
push
call
cmpl
jne
xor
add
inc
mov
jmp
xor
or
sbb
mov
mov
mov
or
movl
or
mov
movl
xor
mov
and
mov
and
mov
orl
xor
subl
xor
adcl
add
mov
adcl
xor
xor
adcl
add
movl
lea
movl
mov
movl
cmp
movl
ja
jmp
adc
mov
addl
mov
xor
xorl
lea
push
andl
xor
or
inc
mov
cmpl
jne
pushl
call
cmpl
jne
xor
add
inc
mov
cmpl
jb
movzbl
adc
mov
mov
xor
movl
lea
subl
push
and
mov
adcl
pushl
call
mov
mov
mov
or
xor
lea
mov
or
mov
subl
xor
xorl
xor
add
mov
andl
xor
movl
lea
movl
mov
movl
cmp
movl
jbe
movl
mov
add
mov
mov
mov
andl
mov
inc
mov
cmpl
jne
push
call
cmpl
jb
add
mov
inc
mov
subl
pushl
orl
sub
subl
pushl
adcl
xor
mov
pushl
call
sub
adc
xor
movl
cmpl
je
cmpl
jne
push
pushl
pushl
pushl
pushl
push
call
mov
dec
mov
jmp
mov
mov
mov
xor
add
xor
div
mov
cmp
jne
mov
mov
mov
mov
movl
movl
movl
movl
movl
movl
mov
xor
add
mov
movl
movb
mov
xor
add
mov
mov
xor
add
mov
mov
xor
add
mov
mov
xor
add
mov
lea
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
mov
mov
mov
xor
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
je
lea
push
mov
xor
add
push
mov
add
push
mov
mov
pushl
call
mov
cmpl
je
lea
mov
mov
xor
add
mov
mov
xor
add
mov
mov
mov
lea
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
test
mov
jne
mov
xor
add
test
je
lea
push
mov
xor
add
push
mov
add
push
mov
mov
pushl
call
mov
xor
mov
sub
sub
mov
add
mov
mov
mov
mov
xor
sub
mov
lea
incb
inc
push
pop
dec
xchg
decb
pushl
mov
mov
pushl
lea
pushl
lea
pushl
lea
pushl
lea
pushl
xchg
inc
push
pop
call
lea
mov
mov
push
add
push
lea
push
call
mov
mov
mov
mov
mov
mov
sub
xor
cmp
je
mov
mov
sub
xor
cmp
jne
mov
add
jmp
mov
xor
add
mov
mov
xor
add
mov
jmp
mov
mov
mov
mov
add
mov
mov
pop
pop
pop
leave
ret
push
mov
jmp
repz
jae
hlt
aaa
scas
aad
inc
sub
mov
jle
jns
jle
inc
ss
add
pop
scas
popa
shll
mov
das
jne
inc
jle
rolb
test
stc
add
scas
mov
loop
xchg
or
test
inc
lods
sub
das
jp
xchg
lahf
lock
xchg
or
lds
cli
xchg
pop
loop
inc
pushf
mov
add
pop
mov
leave
xlat
add
fnstcw
jg
mov
and
cmp
ja
mov
sbb
sbb
xorb
jmp
lret
adc
cwtl
daa
mov
mov
es
sub
js
ljmp
jp
stos
fwait
cs
mov
fsts
or
stc
cmp
jne
aas
dec
fildl
xchg
test
jne
in
or
xchg
xchg
mov
xchg
nop
mov
xchg
aas
ss
and
xchg
fsubrp
mov
push
dec
adc
or
fiaddl
ret
repz
push
push
push
or
xor
notl
mov
fldcw
mov
jae
add
sub
inc
push
push
arpl
gs
test
sbb
imul
test
sbb
pop
test
btc
fdivrs
or
sbbl
ljmp
adcl
or
adc
int
xchg
imul
lock
adc
pop
and
lahf
lds
test
mov
xchg
dec
fdivrl
jecxz
sub
js
mov
flds
cli
mov
repnz
cmp
nop
or
popf
adc
or
lret
fs
insl
xchg
add
scas
in
shll
dec
jle
addr16
pop
in
pop
add
dec
and
mov
add
dec
push
lret
xchg
jo
ss
aam
gs
pop
inc
in
jo
jmp
push
cmp
mov
fidivl
and
sbb
aam
push
cmpsb
mov
fnstcw
jle
movsb
dec
sub
std
imul
subl
xchg
push
jge
out
jmp
push
nop
std
pop
ja
cld
ja
shlb
gs
jle
in
jge
fs
xor
mov
add
pop
or
lret
push
push
fldenv
lds
cmpl
enter
jecxz
and
cmpb
fdivr
pop
cmp
outsb
bnd
loope
jecxz
xchg
xchg
out
and
mov
jne
adc
cltd
add
pop
mov
jg
dec
pop
mov
out
jno
je
imul
adc
int
sub
pushf
fldcw
mov
and
inc
xchg
sbb
pushl
aas
push
mov
mov
dec
out
inc
xchg
jns
aam
mov
jp
adc
jb
mov
cmp
lods
sbb
pop
push
dec
jecxz
cmc
orl
jb
adc
mov
data16
jnp
setg
aad
js
out
sub
dec
push
mov
dec
xlat
push
or
repnz
xor
xor
add
pop
insl
sbb
add
xchg
leave
pop
sub
push
jo
imul
or
cli
add
je
push
push
mov
movl
movl
push
mov
mov
mov
movl
push
movl
mov
movl
mov
movl
cmp
je
or
jmp
cmc
pop
inc
gs
jge
pop
push
add
xchg
jle
jns
jle
xorb
cmp
fsub
sti
xchg
sbb
sbb
gs
inc
mov
dec
sub
std
ds
leave
sbb
inc
clc
sbb
or
ret
xchg
inc
stc
das
mov
icebp
inc
mov
add
ret
pushf
pop
fisubrl
lcall
xlat
pusha
cltd
test
mov
pop
jnp,pn
jmp
xchg
xor
test
pop
rcl
sub
fistps
push
decl
in
ds
jb
mov
xchg
mov
jne
sub
jns
or
push
jnp
pusha
leave
mov
mov
pushf
fwait
pop
sbb
adc
out
push
xor
test
test
xchg
lahf
and
sub
call
add
mov
sub
rorb
dec
and
dec
test
cmp
or
sbb
xor
cld
pop
add
out
jge
lds
xchg
lahf
cmp
xlat
xor
repnz
roll
repnz
iret
xor
xor
cmc
test
jbe
aam
xchg
sahf
scas
jmp
arpl
test
les
pop
push
enter
inc
clc
jecxz
pusha
imul
pop
adc
inc
inc
out
cmpl
mov
mov
lea
lcall
dec
into
sbb
lods
adc
rolb
cmp
pop
out
xor
frstpm(287
xor
dec
and
mov
mov
jecxz
pop
pop
mov
jns
jge
mov
mov
jno
xor
fisubrs
xadd
push
sub
call
xor
iret
mov
or
mov
and
jo
scas
sbb
gs
xchg
sub
loop
dec
adc
lret
pop
pop
fucomi
lret
js
inc
jbe
jg
lods
sbb
xchg
inc
mov
xchg
xchg
test
clc
add
popa
popl
add
test
push
cmp
imul
fs
and
iret
mov
sbb
scas
mov
jge
call
sbb
jl
cs
test
stos
ret
adc
dec
aam
mov
pop
xchg
insl
and
sub
lods
stos
lods
jge
cltd
leave
scas
ss
sbb
mov
mov
sub
inc
mov
mov
repnz
rorl
mov
sbb
xor
popa
jns
in
pop
inc
je
xchg
mov
js
cmp
ja
je
cmp
jl
repnz
fidivrl
xchg
cmp
push
jo
aad
mov
cmp
test
xchg
xchg
jl
sarl
pop
cmpsb
rol
or
dec
icebp
adc
adc
outsl
cltd
mov
pop
add
and
jne
push
aaa
fdivrl
push
mov
in
hlt
mov
and
fimuls
push
leave
in
mov
fnsave
pushf
pop
jl
xor
xlat
jecxz
xchg
in
sbb
xchg
pop
in
movsl
sarl
out
xchg
mov
sub
fmuls
push
or
ja
fsubp
push
inc
sub
mov
jo
inc
div
pop
cmp
add
xlat
pusha
or
in
in
or
fisttpl
ss
sub
mov
mov
xorl
xor
add
movl
cmp
movl
je
and
mov
mov
xor
xor
andl
mov
inc
mov
cmpl
jne
push
push
push
push
pushl
call
cmpl
jne
xor
xor
inc
mov
cmpl
jb
and
add
push
pushl
pushl
mov
jmp
pop
pop
cld
sub
mov
push
in
sbb
mov
jle
xchg
inc
xchg
mov
mov
jns
lods
sti
fmuls
into
jb
add
or
dec
pop
push
pop
cmp
mov
adc
out
mov
jp
outsl
mov
xor
mov
ficoml
rorl
xchg
pop
xor
int
loopne
push
xor
cltd
fidivrl
repnz
insb
pusha
adc
jns
xor
inc
mov
xor
les
fbstp
jg
test
fisttpll
mov
cmp
inc
jp
mov
popa
call
mov
mov
jmp
and
sub
fnstenv
testb
shrb
ret
xchg
mov
out
shr
dec
call
jmp
dec
cmpl
add
or
lret
inc
ds
add
jmp
testl
lea
data16
out
mov
inc
sbb
lock
cmp
inc
mov
xchg
sbbl
push
push
cld
rorb
push
cmpsl
outsb
pusha
inc
sbb
sahf
outsl
test
jmp
arpl
je
push
out
push
adc
pop
scas
int3
sub
xlat
scas
push
mov
stos
mov
xchg
movsl
inc
pop
xchg
xchg
inc
ds
hlt
cld
gs
jecxz
test
fldlg2
and
lock
push
cmp
jbe
cmp
add
push
mov
daa
inc
sub
mov
into
inc
je
cmp
push
test
mov
stos
cmp
sbb
test
out
xor
or
fs
stos
or
mov
xchg
jne
push
das
push
mov
add
adc
imul
mov
movsl
mov
sbb
jae
outsl
movl
insb
inc
xor
sub
out
mov
or
in
aam
inc
cs
add
mov
push
adc
iret
std
mov
jo
xchg
and
jne
mov
mov
inc
cmp
in
test
mov
xor
cmp
and
cmp
mov
repz
psubd
pop
and
inc
shlb
cmp
loope
popf
xor
imul
jae
cmp
cmp
mov
mov
jae
fsubs
dec
xchg
lcall
stos
xchg
xchg
insl
mov
xchg
ret
add
scas
sbb
aas
xchg
stc
sbb
xor
add
sub
pop
dec
cmc
mov
cld
loope
loop
gs
in
and
movsb
pop
pop
jae
fwait
lods
popa
fs
dec
or
jg
adc
or
test
cmpsl
bound
add
or
cmpsl
lcall
xchg
push
dec
pop
ljmp
shr
add
ret
mov
mov
mov
or
std
outsb
pop
repnz
imul
insl
scas
push
jmp
aad
fldenv
out
inc
pushf
xchg
arpl
loopne
sbb
xchg
lahf
aad
xchg
push
cmp
lcall
add
dec
or
add
add
add
jmp
mov
mov
xor
add
cmp
jne
mov
xor
add
mov
mov
xor
add
mov
pushl
pushl
call
jmp
in
ss
xor
icebp
add
xchg
leave
pop
aam
mov
jle
scas
pop
stos
addr16
aas
jns
add
loope
stos
push
fnstsw
push
and
int
arpl
pusha
pusha
sbb
mov
cmc
outsb
adc
jle
imul
movsb
dec
mov
sub
pop
test
dec
jbe
jb
ret
jl
gs
jle
ljmp
jp
pop
leave
xchg
rclb
push
xor
sbb
dec
pop
or
mov
repz
sub
stos
lea
fsts
mov
dec
sub
movsb
mov
cltd
fs
repnz
mov
xor
pop
xchg
dec
pop
repnz
inc
cwtd
dec
mov
jp
ret
shlb
scas
repz
jl
fmuls
ja
and
and
cmp
std
dec
cmc
xor
xor
ljmp
lods
lret
outsb
lahf
fucomi
cli
cmpsl
jnp
mov
jle
pop
xchg
pop
insb
psllq
fmul
cmpsl
push
mov
push
ja
outsl
pusha
ljmp
mov
inc
adc
mov
aam
jmp
fnstsw
loop
mov
adc
dec
fdiv
cmp
cmpsl
sub
sbb
out
adc
pop
jecxz
push
mov
pop
mov
xchg
pop
push
dec
cwtl
in
add
jl
xor
add
ja
sbb
popl
sbb
push
mov
nop
sub
inc
inc
es
xlat
jle
fistps
sub
div
or
mov
int
insl
cmp
fidivl
add
pop
dec
xor
sar
repz
pop
roll
push
cmc
fnstcw
cmp
sub
imul
andb
xor
xchg
push
pop
xchg
jg
iret
rorb
repz
jbe
inc
xchg
sub
lret
and
add
mov
push
shr
insl
xchg
lods
test
mov
fcmovne
sbb
inc
xchg
imulb
fwait
pop
sub
pop
pop
bswap
add
mov
mov
call
jmp
jbe
ret
test
fistl
test
xor
jo
out
aam
push
push
stc
or
sbb
jo
and
push
xor
loopne
jae
mov
daa
dec
fs
popf
daa
cmp
cmp
xor
mov
ljmp
out
enter
and
push
ljmp
sar
fstpt
aam
cmc
fdivrs
xor
aam
or
xchg
sbb
test
mov
ret
call
fdivrl
push
lahf
or
icebp
ret
push
xchg
push
iret
mov
jb
ja
cmc
mov
adc
sbbb
jne
sub
cmpsb
pushf
movsl
inc
push
vhaddpd
mov
add
push
sbb
lock
in
stos
repnz
pop
scas
filds
sbb
lret
cwtl
cs
inc
jmp
mov
aaa
dec
and
ret
hlt
adcl
loope
int
mov
add
pop
lock
xor
rolb
and
fimuls
aaa
leave
pop
adc
pusha
fmull
add
stc
inc
and
sbb
jecxz
push
gs
inc
test
inc
cld
xor
pop
jmp
push
clc
clc
mov
test
adc
push
or
hlt
jns
jle
xor
dec
push
mov
test
je
hlt
dec
rcll
xor
sub
or
jle
mov
or
out
outsl
add
insb
push
pop
stos
scas
fs
sub
fistpll
das
lds
int
jae
popa
push
sub
aam
in
sarl
pop
push
nop
push
pop
jns
push
push
mov
fucom
test
sub
cmp
cld
adc
mov
push
addl
xchg
lods
imul
sbbb
stos
mov
adc
adc
mov
jle
cmp
add
mov
cmp
clc
add
sbb
pop
loopne
sbb
dec
add
sub
inc
btc
inc
jbe
stos
xlat
or
adc
movsb
repnz
arpl
mov
mov
pop
push
and
inc
leave
xchg
iret
mov
lret
or
sarl
jecxz
mov
cld
pushl
test
rcr
inc
or
mov
sub
dec
mov
xor
mov
push
cmp
adc
mov
cmp
xchg
repnz
pop
xor
dec
aas
fidivl
or
cld
xchg
shl
jle
fildll
ds
punpckhwd
xchg
fbld
mov
and
lods
push
adc
mov
xor
adc
out
cmp
jecxz
out
cmpsb
mov
mov
mov
popa
or
lds
sbb
sbbb
inc
stos
loopne
xor
data16
call
or
lods
in
cmpsb
call
adc
iret
leave
repz
mov
cwtl
hlt
lahf
hlt
push
notl
imul
testb
ret
mov
sarb
popf
data16
ds
dec
fstpt
and
cltd
xchg
cltd
cmp
pop
pop
xor
leave
lods
jae
cmp
cmp
xor
mov
push
sub
lea
pushf
dec
mov
xchg
mov
loope
adc
mov
mov
xchg
and
jecxz
lock
fdivr
xorl
outsb
stc
repnz
sub
sub
iret
fcoms
dec
pushf
pop
inc
xor
mov
in
add
xor
or
sub
sub
out
jne
ret
test
xchg
inc
xor
aas
pop
adc
and
fwait
xchg
xchg
ss
jecxz
push
cld
mov
push
addb
and
pushf
push
or
pusha
dec
adc
mov
push
push
int
shll
cmp
call
mov
jo
jecxz
cmp
shlb
ret
pop
negb
addl
add
jae
ljmp
stos
adc
xchg
pushf
push
cmp
mov
jge
or
js
mov
inc
push
cmp
jbe
in
jecxz
xchg
mov
cmpsb
sbb
scas
push
jg
mov
xor
inc
pop
cmpsb
sbb
sbb
push
xchg
sbb
ficomps
fcmovbe
jae
aam
ja
aas
lods
pop
cwtl
call
cmp
sub
sub
out
jge
dec
rcrl
sbb
jp
xchg
add
pop
leave
ret
push
mov
push
movl
movl
cmpl
je
cmpl
jne
pushl
call
cmpl
jne
mov
dec
mov
xor
add
dec
mov
jmp
xor
mov
andl
mov
add
xor
cmp
movl
jne
and
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
push
pushl
push
call
cmpl
jne
xor
or
inc
mov
jmp
mov
add
mov
mov
mov
xor
push
jmp
mov
jae
mov
sub
add
je
testb
pushf
jg
jle
lock
and
mov
sub
fnstsw
sbb
hlt
sub
dec
mov
cmp
push
movsl
arpl
aaa
lcall
inc
rcrb
sbb
lcall
out
jecxz
roll
scas
push
dec
repz
mov
in
dec
shlb
dec
sbb
imul
call
cmp
in
pop
adc
popf
addr16
push
xor
push
mov
mov
sbb
mov
data16
sar
sbb
inc
dec
sub
mov
and
push
sub
add
xchg
stos
call
xchg
fidivs
outsl
sub
insb
mov
add
jns
push
mov
shrl
add
push
inc
jnp
push
jle
stc
scas
test
or
add
outsl
pop
inc
push
rcrb
cmp
mov
int
je
std
inc
mov
je
sbb
cmpsl
xor
sub
and
lods
lock
push
outsb
or
mov
cs
dec
xchg
mov
cltd
lret
add
push
xor
shlb
bound
sub
jmp
in
xor
push
jns
mov
jecxz
mov
push
and
cmp
add
scas
mov
int
aaa
in
xor
mov
rcll
inc
gs
sub
cmpsb
imul
enter
cld
jmp
mov
mov
jmp
cmc
mov
enter
cmpsl
mov
vmovq
adc
jle
pushf
jg
jle
push
je
inc
mov
imul
mov
inc
popa
orl
adc
mov
fdivp
or
inc
sahf
cmp
jnp
cs
jmp
adc
fwait
call
push
xchg
arpl
movsb
daa
scas
pop
or
jge
cmp
jbe
cmc
iret
lods
popa
push
pop
xor
decl
pop
adc
jmp
cmp
mov
aad
sub
aam
add
lods
cmpsl
cmp
jns
ja
fnsave
adc
jae
add
mov
cmp
sbb
fucomi
dec
popf
jle
sub
movsb
aaa
xchg
sub
sbb
hlt
outsl
sbb
or
cmp
roll
call
js
cli
sbb
inc
sbb
xchg
pushf
movsb
and
xor
xchg
cld
fistpll
inc
cmp
sarl
fistl
mov
and
inc
xchg
mov
popa
pushf
call
cmpsb
lods
inc
in
sbb
pop
and
mov
xor
xor
pop
cmp
add
jp
sbb
addr16
xor
mov
stos
mov
std
call
repz
imul
push
in
inc
aaa
inc
les
push
hlt
cwtl
pop
mov
cli
inc
mov
movsl
lahf
nop
mov
movsb
ffreep
xor
aam
outsl
sarb
in
mov
cltd
int
jo,pt
jns
inc
jns
jp
push
inc
fimuls
or
adc
imul
mov
aas
adc
gs
pop
ds
cmp
pop
je
mov
jmp
mov
xor
add
jmp
mov
xor
add
leave
ret
push
mov
push
mov
andl
mov
inc
mov
cmpl
jne
push
pushl
pushl
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
movzbl
adc
mov
andl
xor
add
movl
jmp
cmp
arpl
mov
arpl
idiv
xchg
sbb
js
jle
stos
cwtl
arpl
adc
mov
adc
sub
das
xchg
lds
and
pop
push
jnp
test
push
outsl
bound
ljmp
push
add
out
jmp
arpl
and
or
sbb
fstp
pop
movsl
jle
xchg
icebp
xor
jmp
push
pop
dec
xor
out
stos
add
mov
fsub
mov
in
pop
inc
dec
add
push
lds
outsb
and
mov
subb
popa
mov
mov
pop
pop
push
pop
inc
inc
lret
stc
pop
mov
push
add
cmp
push
pop
jb
rol
xchg
mov
fwait
and
sbb
cli
sbb
gs
shlb
jecxz
enter
xchg
adc
lret
mov
icebp
movl
pop
out
jb
dec
shll
in
testb
xchg
repz
in
mov
jnp
inc
sbb
sub
mov
ja
add
je
jns
mov
sarb
fcoms
push
push
in
aam
adc
hlt
sbb
vmovshdup
cli
pop
sarb
or
stos
pop
add
pop
imul
test
int3
test
pop
mov
hlt
dec
xchg
mov
roll
cmp
mov
push
and
jle
mov
add
filds
std
repz
int3
shl
bnd
and
pushf
push
ds
notl
scas
jnp
or
bound
insl
lcall
or
test
imul
es
adc
or
dec
push
sbb
ss
lods
sbb
adc
mov
push
adc
leave
mov
iret
out
pop
pop
ja
test
pop
xor
push
mov
roll
out
aaa
mov
cli
shrl
je
pop
pop
ljmp
mov
inc
jp
add
cmp
jne
movsb
pop
adc
sti
inc
mov
clc
mov
xchg
pop
fstl
and
sbb
xorb
xchg
xchg
sbb
popa
fistl
sbb
and
add
loop
pop
sbb
sbb
ja
and
imul
dec
loopne
sub
in
mov
ficompl
push
add
cmp
mov
push
jle
dec
adc
add
inc
or
inc
cld
cmp
or
mov
push
movl
mov
mov
cmp
movl
je
mov
xor
subl
xor
xorl
lea
xor
cmp
jne
movl
jmp
jmp
inc
lods
xchg
addr16
mov
leave
dec
jle
popf
js
jle
or
fnsave
add
xor
icebp
jmp
dec
aam
mov
cmpsb
call
gs
jo
shlb
pop
rorl
sub
mov
xor
sub
popf
dec
inc
test
mov
mov
lods
or
mov
imul
dec
xor
loop
hlt
jecxz
cmp
lock
out
dec
sahf
pop
adc
sub
sbb
mov
fmul
clc
leave
repz
aas
xchg
inc
xchg
into
fidivrl
push
fucomp
in
jbe
push
mov
jg
add
out
cmp
dec
sbb
js
loopne
data16
cmpsb
test
jae
jmp
sub
les
lret
ljmp
pop
cmp
sub
push
add
lea
xchg
lahf
dec
out
mov
adc
dec
in
lds
sbb
xchg
mov
out
push
cmp
add
and
push
pop
dec
loop
inc
adc
add
addr16
jl
sbb
sbb
jmp
sbbb
add
ret
sub
test
cwtl
pop
adc
mov
adc
int3
cmpsb
push
dec
je
popa
inc
inc
inc
out
fdivp
sbb
add
jno
movsl
sbb
mov
out
ret
push
test
pop
mov
ret
clc
sbb
stc
cmpsb
mov
jge
add
pop
in
inc
jnp
pop
jmp
iret
jae
int3
ret
out
dec
ljmp
xor
dec
pop
push
orl
push
mov
add
icebp
sbb
rcll
out
dec
cmp
dec
or
jns
xchg
jae
sub
pop
push
in
xchg
mov
push
xchg
pop
sbb
cmp
fwait
inc
in
leave
ljmp
mov
mov
lea
lock
mov
mov
cld
add
mov
push
push
jecxz
mov
jp
aam
pop
shlb
mov
or
jo
pusha
shl
aas
push
mov
cmp
lock
dec
aam
mov
in
es
out
sub
xor
sbb
sbb
clc
lock
insb
icebp
sbb
adc
fcomps
cmp
repnz
inc
mov
and
mov
mov
lcall
arpl
dec
lods
sub
mov
add
cmp
test
mov
mov
shll
decl
jne
mov
mov
xor
jmp
jo
rsqrtps
pop
jge
pop
mov
and
push
js
jle
sbb
test
stc
shll
push
out
ret
and
cmp
fucomp
loope
je
dec
stc
or
incl
fisttpll
dec
add
pop
inc
add
jnp
push
inc
cmp
lods
inc
sahf
xor
lahf
bound
addb
mov
repz
adc
sahf
rcr
xchg
jb
or
test
sub
jbe
inc
cld
mov
aaa
fwait
loope
push
pusha
mov
mov
and
cmp
out
out
cmpsl
and
or
ljmp
push
xchg
cmc
mov
adc
aam
ds
loopne
scas
lods
popa
fidivs
rcrl
jb
test
push
jae
icebp
sub
xchg
pop
imul
gs
sub
lods
pop
sbb
call
adc
test
aaa
push
sub
jp
lock
in
adc
sub
or
pusha
or
sti
shll
mov
sbbb
test
dec
inc
aaa
xchg
andl
iret
clc
pop
or
test
pop
sbb
sub
and
fcoms
sub
aad
jns
and
pop
movsl
lret
outsb
mov
rcrl
xchg
stos
xchg
cmpsl
loope
lea
jno
jo
adc
and
and
loope
jne
push
add
jl
cld
mov
imul
add
jg
ds
enter
pop
jns
out
scas
sub
fsubrl
pop
push
subb
pop
into
loop
pop
andl
or
sub
mov
iret
pop
clc
inc
xchg
mov
pop
add
adc
in
push
xor
adc
push
test
lods
in
mov
mul
inc
shlb
out
aas
aaa
and
out
sub
add
rclb
inc
hlt
shrl
cmpsb
insb
lret
ds
hlt
rcrl
sti
pop
fdivrl
dec
in
bound
out
cmp
sti
cmc
mov
adc
in
jle
and
ret
out
fistpll
mov
push
fmull
decb
movsl
lea
mov
dec
sbbb
lds
jbe
negl
dec
lea
push
sub
lcall
jmp
ret
ljmp
xor
arpl
lock
mov
mov
mov
add
mov
mov
mov
pop
test
je
pushl
pushl
mov
pushl
mov
call
jmp
mov
leave
ret
push
mov
sub
movl
mov
xor
movl
movl
cmpl
je
cmpl
jne
push
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
adcl
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
pushl
pushl
call
cmpl
jne
mov
inc
mov
jmp
push
mov
xor
andl
mov
inc
mov
cmpl
jne
pushl
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
movzwl
adc
mov
xorl
add
orl
mov
sbb
mov
xorl
push
movl
push
sbbl
test
je
mov
sbb
mov
andl
xor
or
inc
mov
cmpl
jne
push
pushl
push
call
cmpl
jne
xor
add
inc
mov
cmpl
jb
movl
mov
movl
cmpl
je
cmpl
jne
pushl
pushl
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
adc
imul
mov
movl
cmpl
je
cmpl
jne
pushl
call
cmpl
jne
xor
xor
dec
mov
mov
dec
mov
jmp
add
jmp
roll
std
mov
xchg
inc
jg
mov
pop
jg
jle
jmp
push
add
push
aam
lds
cmp
add
jne
and
sbb
popa
loope
xchg
sahf
jp
jmp
aad
xchg
stc
push
fnstenv
or
sbb
rol
or
lahf
dec
je
incl
arpl
es
push
xchg
lcall
push
push
movsb
jae
repz
test
xchg
sbb
je
or
popf
sub
mov
fmull
sbb
adc
cmp
adc
mov
lds
or
popa
jg
pusha
mov
ljmp
and
cltd
mov
pushf
xor
jns
push
cld
and
jmp
add
icebp
jle
ds
mov
btc
adc
div
sahf
add
mov
lret
xchg
and
idivl
insl
push
sarb
inc
jo
dec
pop
sahf
pop
in
add
push
stos
nop
aam
jae
dec
lcall
jbe
pop
dec
inc
dec
or
in
or
arpl
lret
mov
lahf
push
mov
adc
xor
adc
jnp
mov
pop
hlt
dec
insb
stos
jmp
cmc
shlb
inc
cwtl
add
mov
shll
xlat
in
xor
js
pop
int3
xchg
pop
mov
pop
int3
jl
fsubl
xchg
ljmp
dec
int
cwtl
xchg
xchg
outsl
ret
pop
andl
add
adc
std
ss
push
xchg
arpl
test
inc
loop
dec
call
adc
icebp
add
filds
data16
out
out
push
lods
push
push
or
aas
add
fcoml
jnp
stos
add
push
pop
lahf
mov
sbb
or
test
cmpsl
pop
or
aas
and
imul
push
mov
or
mov
jmp
lret
outsl
dec
jne
stos
movsb
loope
lods
xchg
and
jle
jg
jle
lret
mov
in
loop
js
test
mov
adc
fsubl
pop
mov
jnp
push
clc
in
lahf
sub
push
xchg
dec
dec
push
adcb
mov
gs
je
adc
pop
or
je
inc
or
dec
push
sub
mov
adc
push
sarl
mov
mov
cs
jecxz
mov
pop
movsl
sti
dec
stos
sub
xchg
cmp
enter
outsl
stos
stos
mov
aaa
pop
int3
pop
xchg
push
repz
and
inc
push
push
jne
inc
shll
mov
dec
ljmp
dec
lods
mov
addr16
jb
pop
xor
enter
jle
sti
sti
cmc
scas
lock
stc
sbb
ljmp
inc
add
jns
mov
scas
int3
mov
mov
js
mov
xchg
and
mov
rclb
les
in
sbb
sahf
dec
or
pop
jmp
adc
mov
cli
lods
push
jbe
icebp
mov
xchg
aam
test
or
mov
jmp
insl
mov
pop
lds
movsl
out
xorb
dec
dec
test
icebp
mov
in
clc
cmp
xor
add
adc
int
cli
pop
pop
ja
cli
mov
loopne
and
push
into
das
push
jl
in
jns
jns
xor
out
add
lds
scas
out
cmp
roll
out
hlt
fs
inc
cmc
test
repnz
ds
add
xchg
stos
add
cmpsb
push
sub
std
mov
mov
loopne
adc
repnz
imul
xchg
sub
xor
xor
adc
mov
mov
decl
mov
mov
mov
addl
xor
xor
add
mov
mov
mov
movl
je
adcl
mov
adcl
xor
orl
add
movl
cmp
jne
sbbl
pushl
orl
call
and
mov
mov
mov
andl
mov
inc
mov
cmpl
jne
push
call
cmpl
jb
mov
xor
add
cmp
je
orl
pushl
pushl
subl
call
movzwl
and
mov
mov
movl
cmpl
je
cmpl
jne
push
push
call
xor
or
dec
mov
jmp
add
mov
movl
cmpl
je
cmpl
jne
pushl
push
push
push
push
call
mov
dec
mov
jmp
mov
xor
add
cmp
je
mov
mov
mov
mov
mov
add
mov
mov
mov
add
mov
mov
mov
add
xor
mov
mov
mov
jmp
scas
repz
add
push
out
sub
fistpl
lods
aad
jle
pop
jg
jle
loope
xor
xchg
mov
addl
mov
mov
sbb
jge
xchg
gs
push
lods
push
pop
pop
nop
cmp
or
pop
fs
cli
test
mov
or
sub
data16
cmpsl
and
xchg
scas
andb
fcomps
dec
imul
test
dec
sub
or
mov
inc
adc
xchg
int
mov
cltd
adc
ret
and
inc
pop
mov
jle
ds
je
push
fwait
sbb
mov
fucom
lock
dec
lahf
insl
std
pushf
scas
mov
shlb
loopne
jecxz
cmp
int
mov
in
xor
aaa
jnp
xchg
jl
jnp
adc
cmpl
mov
sbb
sbb
sbb
dec
pop
lahf
cmp
cmpl
mov
fdivl
push
mov
fwait
jp,pn
fsts
dec
outsl
mov
mov
cli
inc
out
and
sbb
cmp
repz
addr16
adc
push
cmp
lea
insl
push
std
fdivr
icebp
inc
sub
jo
mov
loopne
clc
loope
pop
lods
lock
sub
and
outsl
xchg
in
mov
inc
sbb
stos
outsl
loope
loopne
loop
es
mov
pushf
jb
adc
or
out
fstp
out
xorl
xchg
mov
fists
addr16
cmp
mov
lods
jnp
dec
mov
ds
push
mov
add
pop
jb
mov
fcmovnb
add
mov
xchg
pop
leave
mov
cmp
jbe
adc
in
dec
add
lea
mov
push
pushl
pushl
call
mov
mov
xor
add
cmp
jne
mov
inc
cmp
jb
jmp
mov
xor
add
jmp
mov
movzwl
jmp
lret
dec
add
je
jge
into
enter
push
jle
pop
jg
jle
and
sub
repz
incl
mov
or
iret
xchg
add
icebp
pop
rclb
inc
icebp
push
push
imul
or
inc
test
nop
scas
imul
push
dec
jp
sbb
scas
data16
push
pop
mov
inc
dec
lods
or
ja
mov
pushl
cli
divb
movsl
dec
mov
add
lret
push
sub
and
adcb
in
lock
rol
subl
enter
pushf
jb
pop
nop
pop
ljmp
fmull
cmp
aad
popa
lods
mov
ret
xchg
bound
add
push
nop
mov
movsl
out
mov
test
xor
xlat
push
sbb
xchg
xchg
jmp
xchg
pop
cltd
sbb
and
ds
lahf
fsubr
and
in
pop
jb
fnstenv
pop
in
sbb
roll
gs
mov
arpl
loopne
jb
std
and
mov
dec
les
dec
and
imulb
or
call
pop
ret
adc
in
cld
nop
adc
push
inc
lret
scas
cmpsl
push
xchg
out
xchg
push
andb
sahf
sub
pop
or
jmp
mov
out
or
mov
cli
ljmp
bound
je
cmp
cwtl
ret
cmp
mov
mov
arpl
xchg
mov
or
movsb
orl
lea
inc
inc
aad
popl
incb
mov
lock
lret
mov
cmpb
xor
inc
xchg
xor
mov
jle
psubusw
pop
and
lods
mov
nop
enter
lret
int3
push
icebp
jnp
mov
mov
cmp
mov
jmp
cmp
jne
xchg
mov
hlt
jle
jl
push
jle
pop
jg
jle
mov
daa
jge
pop
mov
aam
push
sub
test
mov
cmpsl
xchg
into
sbb
push
and
push
outsl
test
mov
mov
or
test
cmp
add
pop
ret
or
and
enter
enter
pop
cltd
xlat
jecxz
frstor
cli
pop
xchg
pop
pop
pop
add
aaa
sub
add
sbb
outsl
stos
shlb
adc
mov
test
lahf
mov
inc
ja
mov
js
pushf
xchg
shrl
cmp
inc
cmp
mov
jb
mov
inc
sub
mov
and
push
fmull
pop
xor
xchg
in
jns
mov
paddb
aas
push
lea
les
adc
lret
lahf
cmp
push
push
inc
pop
stos
adc
imul
mov
inc
inc
sbb
and
cs
push
scas
pop
sbb
outsb
add
aaa
xchg
movsl
nop
jecxz
or
scas
add
stos
imul
pop
shrb
adc
mov
xchg
cwtl
pop
mov
push
repz
fs
mov
and
cld
fwait
push
push
out
xor
adc
fcmovb
mov
xor
jge
pop
mov
jo
test
ret
and
adcl
mov
dec
push
aaa
adc
sub
out
jg
cmpsl
sub
sbb
jnp
pusha
lret
stos
sbb
inc
scas
mov
add
push
inc
mov
cmpsb
adc
mov
outsl
sub
mov
bound
mov
test
mov
mov
mov
mov
xor
add
cmp
jne
mov
xor
jmp
mov
jmp
xchg
aam
jne
xchg
in
sub
push
push
jle
jle
pop
jg
jle
rcll
add
cltd
in
or
xchg
or
in
clc
in
push
mov
cmp
lcall
adc
lea
fistps
shll
imul
mov
fisttpll
inc
call
pop
push
mov
popa
dec
dec
out
xchg
test
sbb
mov
fs
pop
xor
data16
pop
xchg
das
jo
les
insb
pop
mov
movsb
stc
orl
jge
fs
lods
mov
scas
icebp
andl
divl
js
dec
pop
jbe
sbb
pusha
std
in
and
adc
lock
mov
mov
adc
daa
iret
xchg
ljmp
sbb
add
xchg
jle
pop
in
mov
outsl
jmp
mov
mov
xor
pop
jge
add
sub
roll
out
roll
aam
jp
sub
pop
movsl
orb
nop
xor
cmp
jne
mov
into
or
int3
or
lcall
pop
imul
mov
cld
xchg
ret
pop
xchg
adc
fists
xchg
nop
xlat
in
in
ret
xor
xor
or
pop
sub
jae
xor
xchg
push
mov
testl
add
loopne
cmp
pushf
pusha
xor
insl
push
in
mov
and
xor
adc
or
aad
jge
xor
xchg
aaa
xor
sub
jns
adcl
xlat
pop
jns
xor
inc
and
xor
and
and
imul
repnz
and
pusha
add
mov
mov
test
je
mov
push
pop
push
dec
pop
xchg
sub
xchg
dec
mov
imul
sub
mov
mov
mov
xor
mov
add
mov
mov
xor
add
mov
imul
mov
xor
mov
lea
cmp
je
mov
mov
mov
mov
mov
xor
xor
mov
add
div
mov
xor
lea
mov
mov
mov
mov
mov
xor
lea
mov
mov
mov
jmp
inc
mov
pop
push
outsb
outsl
stos
lcall
jle
jg
jle
addr16
inc
lea
fldt
daa
push
mov
push
sbb
push
inc
idivl
sub
inc
dec
inc
cmc
pushf
xchg
sbb
add
insb
aad
and
movsb
iret
mov
xchg
xor
test
sbb
add
jge
sub
dec
push
ret
mov
stos
dec
cs
iret
in
push
arpl
adc
les
repz
pop
out
jp
xchg
cld
cmpsl
movsl
int
lcall
int3
aad
je
cmp
adc
add
jle
test
cmpsb
jno
roll
mov
sub
sbbb
push
mov
inc
aaa
out
mov
jno
cmp
aas
adc
push
out
rcl
or
fwait
mov
loop
push
insb
sti
pop
add
jg
cmp
inc
xor
dec
push
out
cltd
push
pop
lea
test
ja
and
aas
out
jne
sarl
adc
pop
sbb
sbb
xchg
ja
sub
rorb
add
dec
lods
test
repnz
shll
xchg
lds
mov
jle
pop
pop
ret
mov
mov
data16
js
xchg
push
in
xchg
jns
inc
rcr
cs
xlat
pop
push
in
cmp
inc
mov
shrl
dec
mov
gs
cmp
fisttps
inc
sub
add
js
imul
movsb
sub
mov
and
in
cmc
in
fistl
push
test
in
mov
loopne
inc
jge
sahf
sub
cwtl
gs
mov
negb
add
stos
pushf
add
fidivs
shr
add
add
cmp
cltd
int
jno
ja
loope
fs
loope
pop
jle
pop
jg
jle
aaa
mov
hlt
cmp
xor
or
rcrb
int
shll
cmc
xor
xchg
xor
push
fdivrl
push
aam
in
lret
test
jp
jmp
sti
int
cs
xchg
pusha
or
dec
mov
mov
pop
jle
mov
jae
sub
data16
inc
sub
mov
and
mov
adc
dec
or
inc
cmp
inc
mov
mov
jbe
add
sbb
out
adcl
push
mov
jae
push
add
fs
dec
add
sbb
fistl
jle
jge
aaa
sub
aaa
cmpsl
lea
pop
sti
aam
push
lcall
jg
call
nop
jl
mov
mov
ja
inc
xchg
jno
idivl
cs
outsb
call
jne
xchg
je
inc
in
jle
xchg
out
clc
addl
jno
sub
mov
jno
cmp
inc
xor
push
sub
cmp
pop
lds
aad
pop
fwait
pusha
mov
or
mov
in
xchg
mov
push
dec
xchg
pop
cli
fistl
inc
mov
addb
mov
or
lods
pop
std
mov
jb
inc
pushf
cwtl
adc
movsb
fsubs
mov
in
loop
mov
repnz
leave
push
mov
out
dec
mov
lea
cs
adc
add
xchg
arpl
aas
add
adc
popf
or
push
push
cwtl
push
das
or
push
jg
test
cmp
or
adc
mov
push
aaa
jno
mov
add
imul
mov
xor
mov
lea
cmp
jne
mov
jmp
mov
mov
xor
add
mov
xor
lea
add
call
xor
inc
cmp
je
xchg
push
pop
jmp
ljmp
popa
cmc
xchg
fsubr
lods
and
jle
jg
jle
mov
orb
mov
pop
out
or
pop
inc
loopne
in
mov
or
adc
pop
in
test
test
push
incl
push
ds
popf
pushf
arpl
daa
sub
fsubs
popa
outsl
dec
dec
outsl
int3
xchg
mov
jecxz
push
mov
xor
and
icebp
testl
scas
pop
pop
rolb
push
mov
xor
in
lock
and
mov
adc
adc
movsb
aam
lahf
arpl
insl
add
jp
sub
popf
pop
mov
fstl
int3
into
jns
outsb
mov
je
scas
lret
movsb
sub
mov
les
nop
imul
sub
add
jge
fwait
std
addr16
inc
and
stos
iret
or
dec
fcoms
test
sbb
push
push
mov
jne
pop
pop
ja
jbe
sbb
cmpsb
cmp
nop
loop
push
ja
xchg
dec
imul
add
sti
repz
mov
aad
mov
or
jbe
out
scas
or
dec
push
bnd
dec
pop
lock
inc
sub
lahf
and
mov
sbb
mov
sub
mov
push
dec
bound
push
sbb
lods
push
mov
cmpsb
jno
sbb
jmp
push
lea
add
sbb
push
add
push
xchg
push
cs
int3
dec
cwtl
push
ljmp
mov
inc
dec
or
sub
pop
sbb
scas
fisubrl
mov
negb
jns
sub
aas
js
arpl
push
jmp
xlat
jge
mov
mov
das
push
repz
xchg
sub
dec
test
loopne
ret
lock
xchg
fisubrl
push
pop
inc
xchg
sub
xchg
dec
mov
imul
add
xchg
push
xor
mov
dec
inc
add
dec
xor
add
pop
mov
pop
pop
pop
leave
ret
xor
add
inc
cmp
add
add
add
add
push
add
jl
add
xchg
add
xchg
cmp
add
add
mov
add
les
add
into
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
add
xor
add
cmp
add
dec
cmp
add
add
pop
cmp
add
add
add
test
add
mov
add
cwtl
cmp
add
cmp
add
add
enter
fdivrl
add
out
add
repnz
add
cmp
add
cmp
add
cmp
add
add
add
cmp
add
add
pop
cmp
add
add
je
add
nop
cmp
add
add
int3
cmp
add
cmp
add
cmp
add
cmp
add
add
sbb
add
cmp
add
cmp
add
add
pop
cmp
add
add
js
add
xchg
cmp
add
add
ret
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
sub
add
cmp
add
pop
cmp
add
cmpb
add
cmp
add
ljmp
add
add
sbb
add
sub
add
cmp
add
dec
add
pop
add
insb
add
jl
add
mov
add
cwtl
add
lods
add
mov
add
fidivrl
add
lock
add
push
aas
add
sbb
add
sub
add
cmp
add
dec
aas
add
bound
add
outsb
aas
add
js
add
xchg
add
xchg
aas
add
movsb
aas
add
mov
add
enter
fidivrl
add
in
aas
add
clc
aas
add
or
add
inc
add
xor
add
dec
inc
add
pop
inc
add
fs
add
je
add
addb
cwtl
inc
add
lods
inc
add
mov
inc
add
loopne
add
lock
add
or
add
inc
add
sub
add
inc
add
inc
inc
add
push
inc
add
pusha
inc
add
jo
add
test
add
inc
add
scas
inc
add
mov
inc
add
call
inc
add
push
inc
add
sbb
add
inc
add
cmp
add
add
pusha
inc
add
add
add
addb
cwtl
inc
add
scas
inc
add
mov
inc
add
faddl
add
inc
add
clc
inc
add
push
inc
add
sbb
add
add
xor
add
add
push
inc
add
pop
inc
add
outsb
inc
add
test
add
add
mov
inc
add
fiaddl
add
inc
add
clc
inc
add
or
adc
add
and
xor
add
inc
inc
add
pop
inc
add
inc
add
jbe
add
mov
sahf
inc
add
scas
inc
add
movb
inc
add
in
inc
add
clc
inc
add
or
add
inc
add
sub
add
inc
add
inc
inc
add
dec
inc
add
pop
inc
add
add
add
jbe
add
mov
add
inc
add
lret
add
inc
add
in
inc
add
add
add
inc
add
sub
add
inc
add
dec
inc
add
pusha
inc
add
insb
inc
add
addb
xchg
inc
add
mov
inc
add
ret
add
inc
add
call
inc
add
incb
add
inc
add
and
add
cmp
add
add
add
push
add
jle
add
xchg
inc
add
mov
inc
add
int3
inc
add
faddl
add
inc
add
push
dec
add
sbb
add
dec
add
cmp
add
add
push
dec
add
outsb
dec
add
mov
add
dec
add
mov
add
rorb
dec
add
add
add
lock
add
decb
add
dec
add
push
dec
add
cs
add
add
add
push
dec
add
stos
inc
push
dec
add
add
add
add
cmp
dec
add
ret
cmp
add
add
add
add
add
add
add
add
add
add
pop
xor
add
add
fs
add
sub
add
add
add
jb
insl
pop
dec
outsl
imul
ja
imul
fs
gs
outsl
popa
jb
dec
gs
inc
pop
inc
pop
inc
cmp
add
add
add
xor
add
add
add
and
add
add
add
aam
add
je
add
mov
add
nop
aaa
add
insb
inc
add
jo
add
dec
cmp
add
dec
add
sub
add
adc
add
inc
dec
add
hlt
xor
add
add
bound
add
add
xor
add
inc
cmp
add
add
add
add
push
add
jl
add
xchg
add
xchg
cmp
add
add
mov
add
les
add
into
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
add
xor
add
cmp
add
dec
cmp
add
add
pop
cmp
add
add
add
test
add
mov
add
cwtl
cmp
add
cmp
add
add
enter
fdivrl
add
out
add
repnz
add
cmp
add
cmp
add
cmp
add
add
add
cmp
add
add
pop
cmp
add
add
je
add
nop
cmp
add
add
int3
cmp
add
cmp
add
cmp
add
cmp
add
add
sbb
add
cmp
add
cmp
add
add
pop
cmp
add
add
js
add
xchg
cmp
add
add
ret
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
sub
add
cmp
add
pop
cmp
add
cmpb
add
cmp
add
ljmp
add
add
sbb
add
sub
add
cmp
add
dec
add
pop
add
insb
add
jl
add
mov
add
cwtl
add
lods
add
mov
add
fidivrl
add
lock
add
push
aas
add
sbb
add
sub
add
cmp
add
dec
aas
add
bound
add
outsb
aas
add
js
add
xchg
add
xchg
aas
add
movsb
aas
add
mov
add
enter
fidivrl
add
in
aas
add
clc
aas
add
or
add
inc
add
xor
add
dec
inc
add
pop
inc
add
fs
add
je
add
addb
cwtl
inc
add
lods
inc
add
mov
inc
add
loopne
add
lock
add
or
add
inc
add
sub
add
inc
add
inc
inc
add
push
inc
add
pusha
inc
add
jo
add
test
add
inc
add
scas
inc
add
mov
inc
add
call
inc
add
push
inc
add
sbb
add
inc
add
cmp
add
add
pusha
inc
add
add
add
addb
cwtl
inc
add
scas
inc
add
mov
inc
add
faddl
add
inc
add
clc
inc
add
push
inc
add
sbb
add
add
xor
add
add
push
inc
add
pop
inc
add
outsb
inc
add
test
add
add
mov
inc
add
fiaddl
add
inc
add
clc
inc
add
or
adc
add
and
xor
add
inc
inc
add
pop
inc
add
inc
add
jbe
add
mov
sahf
inc
add
scas
inc
add
movb
inc
add
in
inc
add
clc
inc
add
or
add
inc
add
sub
add
inc
add
inc
inc
add
dec
inc
add
pop
inc
add
add
add
jbe
add
mov
add
inc
add
lret
add
inc
add
in
inc
add
add
add
inc
add
sub
add
inc
add
dec
inc
add
pusha
inc
add
insb
inc
add
addb
xchg
inc
add
mov
inc
add
ret
add
inc
add
call
inc
add
incb
add
inc
add
and
add
cmp
add
add
add
push
add
jle
add
xchg
inc
add
mov
inc
add
int3
inc
add
faddl
add
inc
add
push
dec
add
sbb
add
dec
add
cmp
add
add
push
dec
add
outsb
dec
add
mov
add
dec
add
mov
add
rorb
dec
add
add
add
lock
add
decb
add
dec
add
push
dec
add
cs
add
add
add
push
dec
add
add
add
cmc
add
outsl
outsb
je
outsl
insb
data16
add
arpl
insb
outsl
arpl
add
data16
outsl
outsl
jb
push
add
arpl
push
add
outsl
ja
outsl
ja
jb
add
gs
popa
jo
pop
je
jo
add
in
jae
jb
push
add
jo
pop
insw
outsl
fs
int3
add
outsl
jb
add
js
imul
imul
popa
add
fwait
add
jo
pop
arpl
insl
outsl
fs
sub
arpl
arpl
add
data16
add
or
je
ja
jo
gs
add
data16
je
add
outsb
jbe
add
arpl
imul
add
jo
imul
add
je
push
add
je
add
mov
outsl
ja
add
test
jae
popa
arpl
add
add
outsl
insb
outsl
ja
jb
fildl
pop
popa
insl
jae
pop
gs
je
add
add
imul
add
outsb
imul
add
jae
bound
gs
add
push
add
arpl
inc
imul
jae
jb
arpl
add
add
insl
outsl
jbe
add
cld
add
jb
outsl
insb
add
and
insb
outsb
add
and
pop
gs
je
call
js
je
add
jo
arpl
call
arpl
add
mov
pop
pop
jae
je
jae
jb
popa
je
gs
add
repnz
jb
arpl
add
imul
add
ja
je
jo
add
mov
insl
popa
insb
insb
outsl
arpl
add
pop
pop
addr16
popa
imul
add
ja
arpl
data16
push
inc
push
push
cs
insb
add
xor
dec
outsb
jne
je
insl
dec
outsb
outsw
push
add
sub
inc
gs
popa
jae
inc
arpl
gs
outsl
jo
jo
add
add
outsb
fs
imul
inc
add
dec
imul
add
inc
gs
jae
jb
bound
arpl
outsw
jb
popa
je
outsl
outsb
push
add
add
jne
insb
push
arpl
add
outsb
jae
popa
je
inc
arpl
insb
gs
je
jb
add
add
imul
ja
jb
insl
push
outsl
imul
push
imul
ja
add
fs
outsb
jne
add
add
popa
bound
arpl
insb
insb
inc
popa
jb
xor
inc
gs
outsb
jne
je
insl
inc
outsl
jne
je
add
add
outsb
fs
imul
rolb
dec
gs
popa
addr16
outsl
js
js
add
outsb
fs
gs
popa
addr16
add
outsb
imul
push
outsl
imul
inc
gs
imul
add
outsl
ja
arpl
insb
insb
inc
popa
jb
mov
dec
outsl
popa
fs
insl
popa
addr16
add
cltd
add
insb
outsl
addr16
outsl
js
outsb
imul
jb
insl
inc
add
add
jo
imul
gs
add
sbb
push
gs
outsl
jbe
push
jb
jo
add
gs
jo
popa
je
push
outsb
add
add
push
imul
popa
jae
inc
add
add
je
insb
addr16
je
insl
push
gs
inc
add
ja
outsb
jne
popa
jb
sub
inc
gs
outsb
jne
repnz
jae
dec
gs
popa
addr16
add
push
add
je
insb
addr16
je
insb
dec
inc
add
mov
push
imul
push
arpl
push
add
sbb
inc
gs
arpl
dec
outsb
outsw
add
add
jo
imul
imul
inc
push
js
push
add
add
outsb
fs
gs
popa
addr16
imul
add
add
popa
jb
outsl
ja
jb
jne
push
add
insl
add
je
imul
outsb
addr16
add
mov
push
popa
imul
jne
dec
fs
add
movl
imul
gs
js
add
cmp
arpl
popa
imul
outsb
add
add
outsl
ja
gs
outsl
jb
addr16
jne
fs
imul
into
add
jae
popa
addr16
outsl
js
add
add
je
gs
popa
addr16
add
push
gs
outsb
jne
gs
jne
je
je
insl
add
aad
dec
gs
popa
addr16
outsl
js
add
add
je
outsb
jne
je
imul
add
fs
outsb
jne
add
gs
jns
je
insl
dec
gs
imul
push
outsb
fs
gs
popa
addr16
add
aaa
add
je
outsb
jne
je
je
add
mov
inc
jb
ja
arpl
add
xchg
add
je
outsl
jns
jne
jae
jb
add
inc
fs
jae
push
imul
arpl
pop
add
je
jns
inc
outsl
insb
outsl
jb
jle
dec
imul
jne
je
insl
add
or
inc
jo
outsb
fs
outsb
jne
add
inc
push
outsb
jne
popa
imul
add
push
je
imul
push
arpl
insb
insb
push
imul
xor
inc
push
gs
add
push
gs
jns
inc
outsl
insb
outsl
jb
add
sgdtl
je
insb
addr16
je
insl
add
dec
add
je
outsb
jne
je
insl
inc
imul
or
inc
gs
gs
je
jo
imul
inc
add
je
popa
jb
outsb
je
movb
outsb
fs
popa
jae
add
inc
jb
popa
je
dec
outsb
jne
add
add
je
popa
jb
je
outsl
jae
sub
push
outsb
fs
gs
popa
addr16
add
test
dec
outsb
jae
jb
dec
outsb
jne
je
insl
push
add
inc
jb
popa
je
push
outsl
jo
jo
outsb
jne
inc
add
je
outsl
outsb
imul
push
add
add
jo
imul
gs
add
out
inc
jb
insl
gs
arpl
add
popa
bound
outsb
jne
je
insl
add
fwait
add
insb
outsl
popa
fs
gs
outsl
popa
jb
dec
popa
jns
jne
add
mov
outsl
ja
jb
insl
push
outsl
imul
jb
ja
outsb
imul
arpl
and
push
arpl
insb
insb
push
imul
add
pop
add
je
arpl
add
je
insb
addr16
je
insl
dec
outsb
je
or
imul
add
pop
add
gs
je
dec
arpl
dec
outsb
imul
dec
add
je
outsb
jne
je
insl
dec
outsb
outsw
push
add
pop
add
je
arpl
insb
insb
dec
outsb
outsw
add
add
popa
jb
outsl
dec
gs
inc
add
sub
fs
outsl
je
data16
gs
popa
addr16
add
sti
add
je
insb
popa
jae
dec
popa
insl
gs
add
outsb
jae
popa
je
inc
arpl
insb
gs
je
jb
add
push
push
jb
outsl
jb
add
push
gs
imul
js
inc
add
add
popa
jb
outsl
ja
jb
add
xchg
dec
outsb
jae
jb
dec
outsb
jne
add
add
jo
outsb
fs
outsb
jne
add
inc
gs
imul
add
push
gs
arpl
jo
jns
add
inc
gs
jns
inc
outsl
insb
outsl
jb
jb
jae
add
jg
push
push
outsb
outsl
ja
add
inc
push
dec
outsb
jne
add
add
insl
push
outsl
inc
push
add
push
jo
popa
push
add
xchg
push
jns
je
insl
push
popa
jb
insl
gs
jb
dec
outsb
outsw
push
add
imul
popa
jae
push
add
addb
push
outsb
outsl
ja
jae
outsb
arpl
mov
jb
outsb
je
inc
add
push
gs
imul
outsb
addr16
add
test
push
ja
je
push
imul
ja
add
add
jo
imul
add
inc
imul
jae
popa
addr16
add
daa
add
je
gs
outsl
popa
jb
push
jns
gs
add
jne
inc
push
imul
add
inc
push
xor
cs
insb
add
lods
add
gs
je
push
arpl
outsb
dec
outsb
imul
add
gs
je
inc
jb
jae
dec
outsb
imul
add
push
imul
iret
add
insb
arpl
insb
gs
add
popa
je
inc
dec
inc
imul
add
jae
jp
push
popa
insb
gs
add
gs
outsl
inc
js
add
popa
je
inc
outsl
outsb
je
outsb
imul
mov
imul
inc
gs
gs
inc
inc
add
aad
inc
js
push
gs
dec
jne
push
add
popa
je
inc
imul
add
arpl
jae
bound
int
inc
jae
popa
jo
add
faddl
push
gs
dec
inc
inc
outsl
insb
outsl
jb
popa
bound
add
jae
je
imul
dec
jb
inc
js
and
inc
gs
imul
jae
mov
inc
gs
gs
dec
bound
arpl
mov
popa
je
dec
popa
je
push
push
inc
jb
popa
je
push
outsl
insb
jns
outsl
outsb
push
outsb
add
addl
imul
add
add
je
imul
jae
lods
add
insb
jns
gs
gs
add
add
je
bound
je
jb
arpl
add
jae
je
outsb
add
push
imul
add
popa
je
push
outsl
insb
imul
add
push
gs
dec
gs
imul
inc
gs
popa
insb
gs
gs
outsb
je
imul
jb
popa
je
dec
inc
push
add
add
insb
arpl
imul
add
je
imul
outsb
jae
outsl
outsb
inc
js
add
add
je
jb
jae
dec
jb
inc
js
into
add
insb
arpl
push
arpl
addl
gs
gs
inc
js
outsb
je
outsl
imul
xlat
add
insb
insb
push
outsb
add
popa
je
inc
insb
insb
imul
outsb
dec
outsb
imul
add
je
imul
add
je
je
arpl
bound
arpl
cmp
inc
gs
jne
jb
outsb
je
bound
arpl
jno
inc
gs
dec
push
xor
stos
add
gs
je
push
arpl
outsb
add
push
je
jb
inc
outsl
arpl
jbe
inc
imul
add
imul
mov
insb
imul
je
add
inc
inc
dec
xor
cs
insb
add
inc
imul
je
imul
dec
gs
jbe
inc
jb
je
arpl
push
arpl
outsb
add
add
inc
gs
gs
inc
imul
outsb
imul
inc
jb
je
arpl
push
arpl
outsb
add
insb
dec
popa
insl
gs
imul
add
gs
jb
outsl
jb
outsl
fs
pop
add
je
gs
jo
imul
add
cmc
add
gs
je
push
popa
imul
insl
gs
add
pop
add
outsb
fs
imul
gs
add
test
dec
gs
jo
outsl
arpl
add
jbe
inc
imul
jns
add
rolb
inc
jb
popa
je
inc
imul
outsb
addr16
add
adc
dec
outsl
arpl
push
imul
gs
push
popa
je
dec
popa
insl
gs
add
dec
outsl
fs
gs
popa
outsb
fs
gs
add
mov
je
inc
imul
outsl
bound
push
imul
inc
jb
popa
je
push
gs
popa
jo
outsl
jb
push
add
jmp
inc
gs
imul
bound
gs
js
add
mov
gs
jbe
outsb
je
add
push
insb
gs
js
int3
add
jae
jb
jo
outsb
push
add
add
gs
je
inc
jbe
outsb
je
add
push
add
je
jns
je
insl
inc
imul
jns
add
push
gs
gs
outsl
outsb
imul
imul
add
fs
imul
js
add
pop
add
insb
jae
gs
popa
insb
jne
add
add
inc
popa
fs
gs
fs
je
add
inc
add
je
push
popa
je
dec
popa
insl
gs
add
gs
jae
jb
gs
jne
je
popa
outsb
addr16
inc
add
adc
dec
outsl
arpl
dec
outsl
arpl
mov
jbe
jb
inc
gs
jne
je
outsl
arpl
add
incb
inc
gs
outsl
arpl
gs
outsb
outsw
inc
add
loopne
inc
jb
popa
je
dec
jne
gs
add
adc
inc
imul
outsl
dec
inc
dec
add
xor
inc
jae
popa
jo
inc
outsl
insl
insl
inc
jne
arpl
outsb
add
ss
gs
push
inc
outsl
outsb
je
js
add
sub
dec
outsl
jbe
inc
imul
add
je
push
dec
outsl
arpl
add
push
outsb
insb
outsl
arpl
imul
fs
je
insl
push
add
push
add
je
jns
je
insl
push
imul
jae
insl
outsb
je
mov
popa
imul
je
jo
gs
bound
arpl
add
inc
gs
gs
jo
popa
je
inc
add
out
add
je
imul
movb
je
arpl
imul
outsl
bound
inc
jb
add
roll
inc
jb
popa
je
inc
imul
outsb
addr16
add
cmp
dec
jo
outsb
inc
imul
dec
inc
dec
xor
cs
insb
add
push
add
imul
js
add
add
addr16
gs
jo
insb
addr16
add
add
outsl
outsl
jae
inc
outsl
insb
outsl
jb
add
or
inc
gs
imul
push
add
add
je
popa
jbe
inc
imul
add
arpl
fs
xor
cs
insb
add
inc
add
je
inc
imul
jae
add
dec
push
inc
push
dec
cs
insb
add
push
dec
push
jne
mov
inc
add
dec
inc
add
or
dec
ja
cmp
dec
jb
xor
dec
ss
jnp
sub
dec
sub
push
pop
push
xor
dec
cmp
dec
cmp
dec
jb
xor
dec
ss
popa
dec
sub
dec
sub
bound
arpl
dec
jno
cmp
dec
cmp
dec
dec
dec
xor
cmp
dec
push
jb
jae
addl
jo
jno
aas
dec
jbe
cmp
dec
ds
dec
dec
xor
dec
xor
dec
push
sbbb
setae
nop
jo
jno
aas
dec
jbe
cmp
dec
ds
dec
dec
xor
dec
xor
dec
push
xchg
pop
xchg
bt
mov
aas
dec
pusha
dec
cmp
dec
cmp
dec
dec
dec
xor
cmp
dec
push
mov
add
aas
dec
pusha
dec
cmp
dec
cmp
dec
pop
dec
xor
dec
xor
mov
ret
add
jo
jno
aas
dec
pusha
dec
cmp
dec
cmp
dec
dec
dec
xor
cmp
dec
push
ret
psrlq
shlb
jno
aas
dec
pusha
dec
cmp
dec
cmp
dec
dec
dec
xor
cmp
dec
push
rcrb
rorl
jecxz
loopne
lock
aas
dec
insl
dec
cmp
dec
cmp
dec
cmp
dec
push
loop
jecxz
repz
jo
jno
jo
jno
ds
jg
cmp
dec
cmp
push
ds
dec
dec
xor
dec
xor
add
adc
adc
jno
aas
dec
add
xchg
add
inc
add
dec
inc
add
dec
inc
add
dec
inc
add
inc
add
dec
inc
add
mov
inc
add
dec
inc
add
dec
inc
add
dec
inc
add
dec
inc
add
dec
inc
add
dec
inc
add
dec
inc
add
dec
inc
add
test
mov
add
or
inc
add
fstp
inc
inc
add
inc
inc
mov
jne
mov
incb
mov
dec
inc
add
xchg
pushf
clc
cmp
pushf
clc
cmp
pushf
clc
cmp
xchg
pushf
clc
aas
xchg
pushf
clc
ds
pushf
clc
and
pushf
clc
ljmp
add
imul
pushf
clc
popf
jmp
add
jbe
inc
add
adc
fcomps
inc
add
add
add
inc
add
add
dec
add
dec
add
add
add
add
inc
add
add
dec
add
inc
add
add
dec
add
add
jae
insb
popa
imul
dec
dec
inc
inc
insb
imul
imul
insb
jae
push
insb
imul
imul
imul
jae
imul
imul
dec
dec
inc
inc
push
outsl
imul
push
fs
imul
insb
imul
push
jne
jns
imul
jne
fs
push
data16
add
add
add
xor
inc
add
pop
dec
dec
dec
dec
dec
pop
dec
push
dec
or
dec
add
push
dec
pop
dec
push
dec
or
dec
dec
dec
dec
dec
pop
dec
dec
dec
or
dec
add
dec
dec
push
dec
push
dec
inc
dec
pop
dec
dec
dec
push
dec
cmp
add
add
add
add
outsb
lea
outsb
lods
outsb
mov
outsb
in
outsb
std
outsb
or
outsb
cmp
outsb
jb
jae
jo
jno
jbe
ja
je
jne
mov
outsb
mov
outsb
mov
pop
jge
jge
jge
jno
mov
outsb
jae
bound
add
mov
mov
inc
aaa
inc
jle
jno
mov
imul
inc
xlat
leave
xchg
inc
adc
jge
faddp
leave
xchg
fs
dec
leave
sbb
jno
rorb
add
shlb
xor
inc
push
outsl
push
push
inc
add
dec
inc
add
add
imul
pop
outsb
jbe
jns
push
imul
je
jp
arpl
push
imul
push
imul
push
jb
add
insb
pop
ja
je
bound
in
jnp
jnp
cmc
pushl
sar
fnstenv
daa
fs
add
testb
add
aam
pop
xchg
xor
int3
pop
insl
fimuls
inc
push
and
pop
adcl
inc
push
loop
bound
shl
jp
push
out
cmc
pushl
jns
lea
dec
and
mov
push
inc
aam
enter
loopne
sbb
and
ja
jo
xchg
fdivl
add
jecxz
ljmp
push
mov
add
pop
cmpsl
and
xchg
sti
int
add
sbb
imull
lahf
cmp
insl
cmp
sub
adc
out
nop
andb
pop
out
cs
push
mov
add
adc
sti
jmp
dec
jmp
push
push
jmp
and
mov
rcrb
adc
rclb
shlb
fwait
adc
xor
push
fsts
pop
ficoml
in
jle
cs
pop
ret
jno
and
add
add
add
call
cmp
or
stos
push
mov
jmp
sub
out
ljmp
push
shrl
insb
out
stos
or
push
or
out
mov
pop
inc
nop
ds
xorl
mov
jmp
xchg
push
push
or
dec
pop
fcom
dec
loope
cmp
cmpsb
cmpl
insl
xor
push
lahf
enter
inc
add
sub
lahf
movsb
mov
xchg
mov
cmpl
sti
xchg
loopne
scas
mov
dec
sub
imulb
pop
xor
mov
loopne
xor
ss
pop
lcall
imul
mov
mov
aad
sarb
mov
pushl
inc
ret
nop
shrl
out
scas
push
test
outsb
or
pop
mov
dec
xchg
xchg
mov
aas
xor
mov
jg
call
scas
add
repnz
push
adcl
add
adc
mov
adc
fdivrl
add
testb
add
inc
dec
les
bndstx
out
xchg
mov
pop
push
adc
in
outsb
js
lea
push
mov
in
jae
push
fldl
cmp
dec
lahf
sbb
loope
in
mov
cmp
jmp
lcall
xchg
mov
int
jbe
push
scas
mov
dec
repnz
xlat
jno
cs
lret
mov
mov
mov
faddl
adc
and
jne
or
mov
mov
mov
dec
les
lcall
push
adc
mov
xlat
dec
ja
sbb
jle
out
movd
bound
lea
mov
add
add
mov
decb
pop
into
push
add
in
sbb
pop
movsl
sbb
pop
dec
push
xlat
xchg
dec
add
add
mov
stos
dec
out
xchg
inc
xor
testb
add
sbbl
ret
sahf
mov
push
xchg
and
insl
outsl
or
xchg
stc
bound
popf
mov
mov
jno
test
mov
rorb
hlt
shlb
nop
and
cltd
xchg
jecxz
pop
xchg
pop
xor
div
sub
and
movaps
sub
mov
loope
add
clc
or
pop
fsts
push
sub
adc
std
xchg
pop
imul
fsubr
int
xchg
sbb
fimuls
mov
into
mov
ljmp
push
jmp
loope
inc
std
ja
cmc
jle
dec
es
mov
mov
mov
or
notb
stos
in
cmp
sub
or
xor
sub
xlat
icebp
pop
sbb
pop
int3
cmp
inc
adc
pop
jmp
inc
push
roll
add
inc
or
leave
bnd
mov
jmp
add
jge
inc
xchg
addl
loopne
out
ret
push
jp
cli
push
es
cs
nop
cwtl
xchg
adc
scas
out
push
fdivr
sbb
es
roll
jl
decl
pop
and
cmc
or
or
push
mov
jno
sub
mov
inc
leave
push
push
pop
xlat
push
in
fidivs
sub
loope
aas
scas
int
ret
test
jl
call
pop
xorl
adcb
xor
sub
add
xchg
call
pop
cmp
add
sub
xor
pusha
push
and
sub
inc
sbb
lret
addr16
jo
pop
push
movsl
dec
mov
xchg
movsl
xchg
sbb
jmp
lahf
fnstsw
pop
push
jecxz
rclb
cwtl
call
jns
fcoms
and
jbe
sbb
xchg
loop
add
jg
cmc
insl
cmc
out
lcall
sub
lret
rcrb
add
testb
add
jno
push
mov
inc
das
xor
lahf
repnz
sub
icebp
es
in
sub
sub
les
push
adc
inc
inc
ds
cld
xchg
mov
cs
pop
push
ja
outsb
sbb
mov
inc
sahf
test
push
mov
pusha
rclb
dec
mov
mov
rorb
dec
cmpsb
push
xchg
jb
xor
mov
pop
push
jbe
push
add
sbb
adc
lahf
test
add
ds
add
es
sub
int3
inc
pusha
out
push
stc
or
fadd
dec
xor
adc
data16
xchg
stos
shlb
cmpsb
sub
add
mov
pop
call
cmp
rcl
int3
xchg
fcom
js
mov
xchg
jae
add
inc
out
cmp
jns
in
add
jle
add
outsl
jle
dec
xchg
call
mov
testb
add
lea
xchg
jle
es
push
inc
lret
movsb
repz
inc
cs
mov
fwait
int
jbe
ror
push
push
dec
jne
stc
lea
popf
loope
inc
inc
pop
pop
jnp
or
test
in
cmp
outsb
and
or
xor
pop
mov
scas
jnp
adc
or
ret
inc
cmp
push
mov
std
mov
cmpsb
cmp
xor
inc
cmp
pop
mov
data16
jnp
enter
pop
sti
push
das
fsubp
cld
nop
pop
pop
pop
clc
clc
test
add
ret
dec
lods
std
test
inc
popa
mov
cltd
mov
andl
ljmp
pop
pusha
iret
rcrl
mov
cmp
pop
outsl
inc
add
mov
xchg
dec
subb
or
push
out
push
cmpsl
jle
add
dec
mov
jne
push
cwtl
jl
mov
sbb
add
or
and
scas
sti
jle
inc
sbb
xchg
inc
in
add
testb
add
iret
cmp
stc
sub
fildl
xchg
notl
ret
sbb
pop
pop
dec
and
fs
dec
fcomps
repnz
mov
jmp
int
mov
push
fbld
mov
ljmp
jg
and
sbb
clc
xor
sbb
and
cmc
cli
mov
mov
mov
cmpsl
inc
lcall
mov
inc
jmp
ja
sub
sub
test
xor
shll
mov
pushl
enter
add
lahf
jmp
lret
mov
sub
fbld
enter
imul
push
push
sti
mov
sub
xor
mov
pop
inc
add
iret
test
mov
xchg
adc
mov
in
jo
and
into
sub
mov
push
and
mov
insl
adc
add
negl
lahf
xchg
cmp
add
add
add
xchg
mov
sub
push
mov
jno
jp
cmp
sbb
dec
jno
pop
inc
pop
sub
shlb
mov
in
add
xor
and
adc
insb
fimuls
movsb
and
enter
jg
pop
into
mov
stos
test
adc
dec
jo
pop
ret
ja
cmpsb
and
pop
mov
dec
aam
sahf
pop
pop
stos
iret
mov
dec
arpl
cmpsl
and
dec
inc
pop
daa
jge
cmpsb
xchg
sbb
or
xchg
jnp
dec
push
jp
cmc
loope
xchg
jecxz
test
push
add
pop
jg
stc
cld
cwtl
outsb
out
and
test
stc
or
test
loope
or
mov
out
pusha
jge
push
lds
cmp
shr
cwtl
mov
push
mov
dec
shlb
xor
cmc
aas
sbb
mov
loop
add
xor
push
jl
jle
insb
pop
decl
leave
fisubrs
add
add
add
addr16
push
imul
fneni(8087
arpl
cwtl
dec
loop
inc
dec
add
adc
sbb
dec
jmp
cmpb
inc
xchg
loope
incb
outsb
mov
cmp
sbb
inc
push
or
sahf
mov
inc
and
dec
cld
inc
xor
aaa
inc
movl
fs
in
lcall
xor
hlt
out
scas
lods
dec
xor
sbb
int3
vmovntps
fidivrl
jg
and
fcmovnb
rcr
mov
arpl
and
fcmovb
dec
mov
aad
cmc
mov
cmp
shll
js
mov
mov
xorb
loop
jge
jmp
stos
xchg
fnstcw
or
sbb
aad
push
push
popf
popf
in
mov
push
inc
mov
sbb
adc
js
adc
or
cmp
jnp
push
add
mov
adc
pop
ljmp
sub
add
testb
add
sbb
lods
cli
push
and
mov
clc
and
add
rcrl
arpl
shlb
inc
dec
xchg
mov
loop
mov
repnz
fadd
pop
js
inc
in
cmp
call
sub
int3
enter
lret
leave
sahf
fistpll
jo
js
icebp
loop
in
adc
or
aam
mulb
add
mov
ret
push
aas
sarl
leave
ret
test
movsb
cmp
pop
cmp
cwtl
sti
jo
imul
lods
stc
pop
mov
lret
cmpsb
gs
daa
xor
fimuls
leave
jmp
test
mov
mov
ds
pop
gs
mov
data16
mov
push
pop
or
fisttpl
test
fs
std
mov
add
aaa
data16
jne
mov
gs
fstps
lock
testb
add
imul
rep
pop
imul
lock
adc
xor
sbb
cmp
sbb
pop
scas
repz
in
push
cmp
lret
fwait
add
incl
push
sbb
cltd
inc
dec
mov
test
dec
mov
aaa
cmp
ja
in
mov
jge
jecxz
orb
jno
pop
mov
mov
sub
imul
sub
sbb
add
mov
fadds
xlat
and
test
dec
cmp
xlat
shrb
mov
cmp
jle
jecxz
sub
mov
push
jbe
cmpsb
hlt
sub
cmc
popf
sbb
or
mov
mov
out
xchg
inc
and
cltd
int
pop
push
xor
cmpsb
sub
fdivrl
shlb
aad
movsb
call
sbb
stos
and
cmp
cltd
add
cmp
add
add
jnp
sti
xchg
rol
imul
add
testb
add
and
xchg
sub
cmovbe
push
mov
test
insb
lret
fnstsw
insl
scas
adc
mov
jl
stc
mov
xchg
dec
sbb
ljmp
mov
jnp
enter
pop
movb
inc
xor
jl
fs
mov
push
xor
mov
icebp
push
mov
addr16
outsb
or
mov
adc
push
lcall
inc
mov
mov
lcall
out
dec
push
pop
add
push
int3
mov
xor
mov
out
das
mov
adc
ficoms
add
push
mov
xor
insl
sbb
sti
stc
nop
pop
inc
les
aaa
add
xor
pop
jp
outsl
or
nop
iret
mov
xchg
mov
xchg
or
lods
and
or
add
add
pop
sarl
test
sub
add
testb
add
inc
xchg
pop
mov
repz
mov
hlt
jb
cmpsl
jno
add
shlb
test
mov
loop
insb
mov
push
je
xchg
std
or
gs
xchg
inc
xor
std
cmpl
xchg
cmp
sbb
pop
jle
or
mov
add
pop
pop
mov
pop
sahf
xchg
mov
loop
and
sub
bound
sbb
jge
add
mov
lret
jmp
jne
push
adc
adc
xchg
pusha
shlb
fcoml
ficomps
cld
mov
push
jle
ret
mov
das
fbstp
addl
hlt
insb
adc
das
xchg
cwtl
test
insl
js
cmp
add
mov
test
add
repz
std
repz
xchg
scas
fldl
repz
testb
add
jns
mov
sub
sti
push
pop
fisubrl
aas
stc
testb
test
sub
insb
popa
add
adc
inc
call
pop
cmp
nop
xor
int
ljmp
ja
daa
in
xor
ficompl
std
leave
push
lahf
outsl
repz
outsb
fcoms
adc
cmp
js
aaa
mov
lahf
or
ja
out
adc
repz
sub
jge
push
sarl
mov
loop
or
jno
adc
std
add
sbb
mov
jg
aas
std
test
push
add
gs
addr16
adc
xor
jge
addr16
psraw
and
cmpsb
xlat
ret
xchg
cs
push
cmp
adc
cs
dec
mov
adc
xchg
gs
loope
lods
aaa
push
sub
stos
es
mov
sub
add
lock
cmp
or
mov
div
add
testb
add
push
sub
xor
mov
movsl
or
icebp
push
pop
addr16
cmp
ss
stos
out
adc
pop
push
xor
xor
add
mov
test
jmp
movsl
mov
ret
xor
jbe
dec
std
lea
int
xchg
mov
mov
scas
ds
imull
xor
lret
adc
push
das
and
or
test
out
dec
popa
fistl
out
jns
sbb
sbb
push
inc
or
sbb
popf
fyl2xp1
mov
sbbb
call
adc
push
xlat
inc
jp
adc
out
push
movsl
pop
xchg
add
je
lret
jmp
pusha
sbb
pop
cwtl
lods
pop
dec
stc
and
push
mov
mov
mov
xchg
adc
cmp
xchg
shl
add
mov
mov
pop
xchg
jle
in
hlt
add
testb
add
push
out
mov
xchg
push
jae
shr
int
fcomi
fdivs
jno
mov
mov
mov
pop
mov
test
cmp
push
jns
dec
lods
xchg
xchg
shrl
push
xor
mov
pop
lahf
ljmp
ret
scas
push
xchg
int
inc
sub
adc
sub
lret
out
inc
lret
mov
mov
xchg
or
push
mov
xchg
sbb
mov
jmp
sti
lods
jecxz
ffreep
push
jmp
aam
scas
mov
push
jg
sub
lahf
jl
incl
jbe
pop
ror
xor
sbb
cmpsb
sahf
dec
pop
inc
mov
add
int3
xor
xchg
stos
pushf
sbb
jle
and
or
pop
xchg
stc
xlat
dec
jmp
add
lret
xchg
in
mov
pushl
comiss
mull
add
add
add
mov
arpl
xchg
mov
push
scas
int3
idivb
dec
test
push
push
cmp
gs
std
in
mov
mov
inc
mov
jo
popa
xor
mov
xor
insl
daa
ds
dec
mov
es
add
pop
stos
cs
out
mov
mov
repnz
arpl
mov
aam
inc
aam
insb
xchg
inc
pop
sti
cmp
mov
pop
pop
mov
outsb
adc
sub
imul
test
push
ret
sub
lods
mov
dec
enter
cmpsl
fdivp
sbb
jmp
cmc
stos
mov
cs
je
pop
dec
inc
jmp
mov
test
pushf
into
push
loop
stos
dec
jmp
lea
xor
insl
pop
fucompp
or
jnp
add
sub
in
negl
push
inc
push
xor
xchg
push
fdiv
add
testb
add
imul
loop
mov
mov
jo
icebp
mov
xor
cmp
std
add
jmp
jb
psubsb
jg
pusha
in
call
pop
ret
fidivs
push
clc
lret
data16
jp
roll
xchg
lcall
sti
lods
enter
jmp
or
push
pop
add
jmp
push
jmp
ficomps
shll
cmc
ficomps
lods
push
adc
das
push
notb
test
xor
inc
cmpsl
shrb
in
dec
cli
xor
stos
in
mov
adc
dec
adc
dec
push
pop
cwtl
jo
sub
jp
leave
push
sbb
fbstp
invd
sub
xchg
jnp
sbbb
sbbl
cld
rcrb
test
int
fs
or
jae
jno
add
mov
nop
fmull
mov
testl
add
dec
xchg
scas
insl
push
test
pushf
xchg
aas
push
inc
enter
in
jnp
cmc
jp
sahf
dec
loope
lahf
jge
lret
lahf
nop
cs
shr
insb
jl
cltd
adc
arpl
mov
inc
gs
push
lret
inc
dec
push
push
lock
or
imul
pop
sahf
cltd
insl
jl
cwtl
popa
and
dec
insb
pop
rcll
mull
push
gs
jg
mov
gs
xchg
mov
push
popa
mov
fdivs
lock
add
loopne
jg
rcrl
cmp
sbb
sub
mov
pop
mov
jmp
and
js
jecxz
cwtl
mov
fiaddl
mov
sbb
sub
mov
pusha
jae
push
cmpb
mov
mov
iret
lcall
les
xor
add
adc
push
add
adc
or
lret
add
testb
add
sub
cmpsl
or
adc
loope
xor
loope
sahf
notl
adc
inc
shrl
jl
or
in
out
pop
test
jp
push
sti
xor
outsb
cmp
push
or
aam
rolb
dec
jl
in
pop
adc
sbb
outsl
stos
add
push
xor
shlb
fidivrs
sbb
xor
inc
xorb
or
mov
sub
shrl
pop
jae
jp
fmulp
pop
inc
test
in
aad
or
imul
out
cwtl
mov
sub
lea
or
push
adc
mov
subb
das
sbb
scas
into
dec
lcall
add
mov
inc
lret
mov
inc
mov
lret
mov
out
repnz
add
pop
inc
xchg
pusha
push
mov
add
add
into
fsubp
sbb
sub
mov
out
inc
in
ljmp
cmp
pop
and
dec
fwait
arpl
ss
xor
inc
lret
mov
jno
dec
sub
ss
dec
outsb
xor
stos
shrb
add
jne
mov
cmp
add
aas
mov
stos
leave
imul
ds
jecxz
sbb
lock
enter
xor
pop
or
jp
xchg
pop
mov
fisttps
adc
rcr
dec
lcall
ficoms
push
mov
pop
mov
cmp
adc
lea
lock
jge
enter
repz
and
cmp
cs
in
imul
iret
stos
cmp
jae
jnp
mov
lods
fsts
lock
xor
push
into
fcoml
add
outsl
push
mov
xchg
mov
add
add
mov
push
decl
rolb
into
mov
add
testb
add
push
imul
or
push
in
fwait
push
gs
mov
mov
push
insb
es
jo
xchg
xor
pop
lds
addl
outsl
sbbl
jno
loopne
sbb
pop
outsl
push
adc
xchg
es
test
inc
movsl
sahf
mov
mov
adc
adc
pop
or
push
push
mov
cli
loope
sbb
pusha
push
orb
cmpsb
mov
inc
les
mov
nop
adc
xlat
into
mov
mov
lds
cmp
mov
nop
xchg
xchg
mov
and
cmp
das
sbb
loopne
inc
test
adc
or
subb
test
cmpsl
xor
outsl
stos
mov
into
cli
subl
lret
mov
mov
sar
fisttps
mov
loopne
js
add
jmp
in
dec
dec
ret
subl
xchg
add
add
pusha
test
sub
or
jns
aad
add
je
mov
cmpsl
push
aad
and
fcompl
or
pop
mov
inc
fwait
loope
enter
jg
sbb
push
mov
adc
sti
xchg
sbbb
cmp
movsl
in
push
cmp
outsl
push
or
mov
and
mov
mov
pop
dec
daa
pop
in
mov
xchg
push
and
outsl
mov
cltd
repz
push
sbb
mov
rol
mov
lock
lahf
sub
jnp
ss
sahf
xchg
jo
shll
lcall
cli
pop
xor
stos
jae
cmp
nop
inc
and
mov
stos
popf
jp
mov
fidivs
cmp
cltd
push
dec
xlat
mov
and
mov
insl
in
mov
xchg
shl
arpl
test
and
and
and
or
data16
push
sti
pushf
cld
add
testb
add
push
adc
leave
cwtl
add
mov
outsb
icebp
ret
xor
jbe
cli
push
mov
sti
ficoms
int3
push
cltd
aam
int3
stc
and
in
inc
aaa
mov
test
and
and
or
popf
lea
adc
sub
fdivrs
or
mov
push
sub
dec
mov
adc
sub
cwtl
sarb
cmp
out
inc
rcll
mov
aaa
or
sub
or
mov
mov
fidivl
push
xlat
je
inc
dec
je
stos
out
ss
xchg
subl
sti
arpl
js
sbb
lods
sbb
add
cmp
inc
rorb
jae
data16
imul
xchg
in
adc
cltd
ret
loop
mov
inc
and
mov
mov
mov
iret
pop
sub
inc
add
repz
ror
lock
jnp
jmp
sbb
mov
xchg
std
add
testb
add
lret
dec
int3
xor
in
loope
repnz
push
rorl
cmpsb
test
nop
shll
lods
or
sbb
mov
imul
ret
add
cmp
je
cmp
jae
xor
inc
lods
fisubrs
cltd
add
mov
sub
jmp
mov
lret
scas
clc
sbb
mov
mov
xchg
sahf
icebp
jne
fstl
loopne
sti
lret
push
xor
lods
test
mov
into
sahf
ja
sbb
fwait
aam
push
scas
mov
dec
loop
pop
adc
leave
pusha
es
add
mov
mov
jb
mov
pop
out
pop
les
push
jne
rcr
and
dec
cmp
inc
sub
jns
mov
scas
stos
fistl
jmp
mov
fmulp
test
inc
hlt
pop
push
pop
mov
push
pop
ss
call
add
repz
fimuls
mov
push
or
add
add
inc
bound
pushf
stos
xlat
scas
pop
stc
into
jmp
call
sbb
aad
sbb
xchg
shll
adcb
adc
fwait
je
jp
out
imul
mov
clc
fwait
pop
loopne
adc
xor
xchg
add
daa
xchg
jl
sbb
movsb
add
jb
mov
lods
mov
jmp
push
cmpsl
adc
icebp
insb
jns
in
mov
or
xor
sub
test
dec
fs
or
xchg
dec
push
stos
stos
orb
pop
test
cltd
add
push
out
sbbl
fisubrl
jmp
je
pop
aas
sahf
pop
lock
mov
adcl
lods
xor
int
mov
dec
mov
lret
mov
cmp
std
pop
jb
mov
cmp
mov
pop
dec
inc
xchg
mov
add
add
out
xchg
jns
test
push
cwtl
jle
add
testb
add
popf
dec
or
aaa
js
insb
in
pop
cmc
pop
pop
jo
sahf
inc
es
stos
not
inc
pop
adc
jo
pop
mov
mov
stos
inc
or
jecxz
outsl
icebp
test
adc
mov
cmc
inc
or
pop
dec
int3
mov
jg
das
ss
dec
xlat
in
in
mov
into
ss
cmp
xchg
push
int3
outsl
std
xchg
nop
inc
pop
fisttps
imull
fcmovu
xor
dec
mov
sbb
mov
pushl
inc
int
sbb
jae
xlat
inc
ror
test
arpl
xchg
notl
xchg
ds
mov
scas
test
sub
add
jg
and
cld
push
pop
cmp
cwtl
push
js
or
and
adc
hlt
sub
ljmp
gs
jmp
add
sbb
jp
mov
cs
inc
push
inc
add
shrl
cmc
scas
mov
cltd
mov
je
add
testb
add
and
dec
jp
mov
nop
int
xor
or
xor
xchg
jecxz
imul
adc
fnstcw
sub
adc
xchg
les
ficompl
mov
inc
js
push
adc
jecxz
sub
test
in
push
sbb
das
cltd
outsb
sbb
fldcw
add
into
push
fiadds
scas
pop
or
push
inc
mov
je
int
mov
frstor
pop
stos
pop
lret
int
cwtl
andb
mov
cmp
mov
mov
add
xor
movsb
jge
xchg
aas
testl
out
lea
mov
lcall
sub
stos
test
xchg
or
dec
mov
push
pop
dec
and
mov
stos
push
out
pop
sub
xchg
sub
jno
push
inc
jb
inc
jl
pusha
add
lret
pusha
rorb
lea
or
add
add
add
jmp
out
dec
imul
es
ja
imul
cltd
stos
inc
pop
mov
sub
data16
and
notb
dec
mov
xchg
in
mov
jbe
xor
in
and
cmpsb
cmc
pop
int3
pop
jecxz
mov
pop
pop
mov
add
jo
out
pop
cmp
or
xchg
push
aaa
scas
mov
mov
pusha
fldcw
add
or
loopne
fidivrs
jae
lcall
sub
scas
hlt
mov
dec
and
push
int3
mov
popa
push
loopne
in
out
mov
inc
xchg
daa
pop
fld
xlat
test
mov
dec
into
rorl
fistpl
ja
ja
data16
in
cli
or
cltd
push
out
rclb
out
jb
and
imul
push
aas
ja
sti
inc
cld
add
mov
add
mov
sub
mov
xor
add
jecxz
push
testl
add
testb
add
dec
jle
jg
dec
inc
xor
out
addr16
mov
dec
jg
ret
sti
js
out
push
jns
push
imul
pop
popf
jb
leave
je
popl
mov
jmp
dec
add
cmp
enter
jns
lds
decl
sbb
ljmp
outsb
mov
scas
add
roll
ficompl
inc
movsb
repz
xchg
hlt
popa
adc
ja
pop
lret
iret
xlat
std
cmc
mov
cmpsl
mov
arpl
sub
stc
and
leave
adc
scas
push
pop
lcall
test
and
lahf
clc
lds
test
dec
daa
out
nop
push
sub
mov
aaa
cmc
sbb
mov
sbb
inc
adc
daa
pop
aas
jp
mov
lock
rclb
gs
mov
push
iret
aas
mov
add
and
daa
lahf
jle
sbb
dec
mov
add
add
add
dec
int3
cs
stos
loop
cmp
js
into
outsl
js
jmp
xchg
fsubrs
je
jb
jns
lods
mov
into
pusha
sahf
ss
pusha
aad
push
js
mov
xlat
aas
jne
aam
test
cmp
sub
push
pop
popf
mov
jmp
adc
cltd
adcb
mov
cld
jge
dec
xchg
cmp
adc
cmp
aad
push
cmpl
aaa
cmpl
mov
adc
cwtl
loope
repnz
cmp
in
pop
imul
cmp
mov
lcall
icebp
fimuls
test
test
sub
sar
sub
cld
fs
ds
pop
mov
dec
out
pop
stos
cmpsl
out
call
push
jg
in
cltd
add
enter
imul
idiv
inc
mov
addr16
sbb
shlb
xor
cmpsl
in
push
mov
mov
xlat
aam
mov
add
add
add
add
loopne
data16
jmp
push
popf
pop
in
sarb
cmpsl
negl
scas
or
add
in
fldcw
pop
push
std
push
push
push
xor
shl
cmp
xchg
and
outsb
mov
mov
stc
mov
xor
xor
inc
mov
hlt
cwtl
clc
stc
cmpsl
dec
negl
mov
ret
adc
insb
push
mov
cmp
inc
loop
divb
jbe
lret
mov
clc
or
add
mov
inc
lahf
aas
repnz
push
daa
jmp
gs
mov
adc
push
cmpsb
mov
leave
dec
rcl
lret
call
jns
sub
cmp
push
and
xchg
lcall
loope
or
lods
xchg
xor
inc
add
push
ror
fisttpl
xor
xor
jmp
repnz
aam
lcall
add
jbe
push
inc
pop
jns
aas
fisttpl
inc
mov
add
add
mov
andl
outsl
nop
jg
ja
rcll
js
inc
cmpsb
dec
cwtl
out
mov
sar
sbb
jle
add
sbb
mov
add
ret
mov
xchg
rcrb
lahf
out
jbe
mov
ja
sub
outsb
out
jae
rol
xchg
or
sbb
stc
inc
jns
stc
nop
or
dec
pop
imul
jno
outsb
shll
call
fisttpl
bound
xor
dec
add
push
adc
dec
dec
mov
hlt
lahf
or
mov
fwait
push
jmp
mov
push
ret
scas
shll
inc
inc
or
cltd
insb
jle
loopne
fidivs
mov
sbb
dec
data16
add
rorb
jl
xchg
push
cltd
cld
mull
push
dec
mov
mov
inc
insl
jge
in
shrl
jne
mov
add
cmpsb
sbb
jnp
mov
aaa
pop
mov
testb
add
sbb
pop
mov
out
inc
add
cs
or
mov
cmp
std
das
adc
xchg
ja
lret
mov
lds
mov
xlat
dec
add
mov
mov
pop
dec
push
cli
or
and
addb
sub
fcmovne
add
movsb
push
shlb
dec
and
or
and
cmovg
ljmp
mov
out
mov
mov
daa
push
inc
lock
inc
and
fcomps
arpl
dec
jbe
xchg
jo
fildll
je
sbb
sbb
ds
xchg
inc
lahf
dec
and
pop
inc
lds
rdmsr
into
inc
cmp
sub
shll
das
xchg
jnp
lock
jmp
and
xlat
cmp
mov
fstpt
fwait
push
mov
jbe
adc
mov
add
imul
adc
fsub
loop
pop
add
testb
add
rorl
adc
push
les
stc
outsl
add
jmp
sbbb
insl
or
push
mov
push
clc
or
pop
flds
add
jnp
jae
adc
jno
cli
push
ljmp
lods
ss
cmp
stos
push
and
jne
pop
cmp
fsub
jle
and
push
leave
adc
fildll
imul
icebp
or
lret
ja
imul
aas
test
insb
fwait
daa
adc
sbbb
xchg
hlt
enter
xchg
xor
adc
jne
add
and
call
xchg
and
and
arpl
into
roll
cmp
mov
cmp
pop
fdiv
xor
mov
pop
dec
call
sarl
add
xchg
mov
idivl
dec
sbb
cmp
add
testb
add
pop
mov
outsl
pop
aam
in
jb
imul
jl
repnz
cmp
mov
sti
mov
inc
jae
movsl
jmp
std
xor
cmp
movb
loopne
mov
aaa
stos
sbb
lret
mov
mov
xor
add
sub
push
lret
loopne
insb
ret
mov
push
lods
jae
in
and
jnp
leave
dec
ficompl
sub
xchg
dec
jb
jno
ja
iret
mov
mov
fnstcw
fcmovnb
outsb
adc
stc
out
xchg
xor
sub
loopne
lods
pop
adc
pushf
orb
divl
out
sbb
unpcklps
push
iret
rolb
icebp
stc
sbb
scas
pop
inc
sahf
pushf
mov
scas
cmp
movsl
xchg
inc
loope
roll
movlps
aaa
inc
jle
mov
ret
imull
add
iret
out
xchg
out
push
push
repnz
add
mov
stc
aaa
xor
add
add
push
jp
or
push
push
cmpsb
call
xchg
mov
ss
mov
addr16
and
jae
and
enter
ret
in
stos
int
pop
lods
jmp
cmc
mov
stc
hlt
jnp
sti
dec
movsb
movsl
repnz
mov
pop
mov
aam
call
mov
stos
lds
xor
cmp
mov
cmpsb
in
add
inc
lods
loope
stos
mov
add
add
cmpsl
mov
sub
je
int3
outsb
test
lods
cmpsb
mov
lds
xchg
sbb
aas
outsl
aaa
out
add
mov
cmp
xor
dec
loop
adc
xchg
fucomip
aam
xchg
inc
mov
or
inc
xchg
adc
cmp
push
pop
push
addr16
pop
movsl
call
shrb
add
jmp
imul
pop
sub
fcomip
fcoml
or
add
add
add
push
ja
das
in
mov
es
cld
fisttps
lcall
mov
adc
mov
mov
xor
div
insl
ds
lahf
xchg
sbb
nop
int3
rcrl
aam
in
daa
cmp
pop
inc
adc
adc
icebp
sub
add
xchg
sub
push
mov
push
in
push
push
jb
ljmp
loop
xor
mov
adc
ds
mov
mov
popf
mov
pop
inc
push
xchg
xchg
insl
xchg
popa
out
js
fildll
sub
in
add
out
pop
rorb
push
cmp
push
adc
fwait
xchg
push
sahf
int3
mov
xchg
push
outsb
pusha
ja
enter
xchg
loop
je
sub
in
outsb
and
add
pop
inc
pop
lods
pop
cli
cmc
inc
mov
gs
or
add
add
add
jge
out
xor
aad
push
ret
jle
stc
mov
fucomp
insb
inc
fnstenv
sbb
daa
lea
mov
mov
mov
jge
aad
dec
or
je
fcoml
int
movsl
mov
push
xor
pop
inc
pop
sub
insl
dec
in
pushf
lods
dec
iret
lcall
cmp
mov
popa
mov
mov
push
inc
adc
sbbl
std
pop
fwait
push
out
sbb
cmp
decb
int
or
xchg
stos
mov
inc
nop
orl
jl
cmpsb
adc
dec
sbb
lcall
sub
in
stos
lahf
out
push
mov
pop
shr
rep
jp
popa
add
or
inc
ljmp
xor
adc
fucomi
std
xor
stc
push
mov
xchg
cmp
and
add
das
stos
cltd
inc
popf
jae
out
inc
dec
clc
outsl
dec
push
jg
or
add
add
add
fidivs
adc
insl
xor
ds
loope
xlat
sarb
xadd
sarb
fmuls
int
pushf
xchg
call
std
push
push
mov
jno
stos
ret
inc
in
jmp
adc
mov
dec
mov
add
repz
in
mov
or
jo
lcall
jp
cmpsb
aam
cmp
xchg
lret
ja
or
mov
sbb
dec
aam
jle
sbb
jmp
fistl
pop
cld
jo
mov
in
push
inc
jae
push
xchg
xor
arpl
mov
mov
push
insl
in
ds
pop
cltd
loope
xchg
xchg
jno
and
or
dec
push
sbb
inc
sub
push
mov
orl
mov
xchg
repnz
cmp
test
inc
div
inc
push
cmpsl
push
subl
insb
pop
mov
sbb
addb
add
aam
int
xchg
clc
dec
cmp
repnz
add
add
add
cmpsb
in
mov
add
mov
add
sbb
xacquire
dec
test
adc
negl
int
ds
repz
in
jmp
mov
xor
loopne
inc
popa
mov
cmp
sar
cmpsb
scas
xchg
adcb
mov
shlb
cli
insb
pop
clc
fsts
and
mov
adc
bound
andl
addr16
data16
mov
stc
jecxz
push
fdivr
xor
popa
mov
lds
sbb
test
rolb
push
test
inc
jp
test
dec
ficoms
cmc
lcall
xchg
pusha
stc
stos
add
scas
ss
sbb
enter
and
incl
std
lahf
adc
scas
dec
inc
cmpsb
jo
pusha
jg
fs
add
pop
arpl
addr16
inc
jmp
mov
testb
add
in
icebp
jo
test
fs
je
ret
out
cmp
nop
adc
lods
enter
gs
xchg
add
hlt
sub
push
pop
sub
jge
mov
es
mov
sub
xlat
ja
cmp
xchg
mov
mov
sbb
flds
mov
popa
dec
xchg
jg
hlt
sbb
xchg
imul
cli
xchg
in
sub
or
fnsetpm(287
xchg
fstps
xor
add
cmc
xor
pop
mov
imull
cli
pop
int3
in
pushf
out
pusha
push
jmp
aas
push
xlat
xchg
fildl
lods
jmp
mov
loop
sahf
pop
jnp
pop
sbb
pop
call
mov
jnp
cmc
inc
fcoms
stos
pusha
insl
add
push
pop
popa
movsb
mov
add
pop
fdivs
icebp
movsl
cmp
add
out
cmp
cmp
pushl
jecxz
add
lahf
data16
add
testb
add
mov
or
push
xchg
add
pop
xchg
loop
jno
jnp
ret
gs
mov
push
cs
jae
xchg
xchg
pop
icebp
ret
fisubrl
xchg
mov
fisttps
dec
cmpsl
mov
data16
out
int
push
scas
idivb
lret
loope
pop
mov
xor
repz
mov
jg
fwait
popa
push
in
nop
jbe
repnz
xchg
mov
mov
mov
dec
popf
es
and
xchg
or
adc
ja
aas
jno
repnz
lods
cmp
fildll
rorb
jno
pop
pop
xchg
xchg
cli
xchg
pop
and
stos
mov
push
shlb
jecxz
pop
mov
mov
xorl
sbb
xchg
addl
in
ljmp
dec
clc
pop
mov
pop
dec
ret
sti
mov
aaa
pop
add
test
push
scas
out
mov
rorb
rclb
add
add
add
loop
fwait
inc
mov
push
fsub
rcrb
out
xchg
cli
inc
dec
adc
xchg
aad
jmp
jne
or
cmp
sbb
ja
mov
cmp
les
fists
es
js
push
cld
or
into
mov
xchg
fmuls
xor
pop
jb
mov
test
sub
adcl
jmp
lcall
add
jns
lret
fcomip
ss
mov
aam
repz
xor
or
ja
xor
or
iret
fimull
adc
nop
jno
idivb
cmc
mov
aaa
push
js
sarl
push
fs
out
adcl
jns
mov
mov
fimull
lock
push
add
push
mov
add
xchg
and
movsl
mov
mov
cmp
scas
sbb
adc
add
add
add
push
sub
sub
scas
sbb
mov
int
imul
pop
or
and
pop
mov
movsl
bound
pop
inc
or
inc
and
orb
fcomip
stos
movsl
into
jno
mov
push
popa
lfs
mov
mov
sub
dec
cld
xchg
jae
std
loope
cmpsl
ds
mov
push
lds
lret
jb
divl
loop
shrb
cmp
sub
cwtl
lods
cmp
xor
out
add
mov
lock
addr16
popf
bound
imul
nop
jp
mov
push
cli
outsb
fsubrl
popf
pusha
or
pop
pop
lea
sbb
pop
test
or
jmp
aad
cmp
dec
mov
test
xchg
or
xor
and
out
cli
shlb
test
add
fdivl
mov
adc
loopne
rclb
add
add
add
dec
cmpl
pop
push
cmp
mov
fwait
ss
dec
sub
xchg
mov
mov
jle
in
call
outsb
sub
and
inc
xchg
inc
fsubrp
out
scas
je
mov
test
movsl
mov
push
dec
lea
shl
mov
icebp
and
xchg
mov
lea
sahf
insl
adc
mov
inc
mov
inc
mov
loope
inc
in
hlt
pop
add
mov
dec
ja
xor
push
cmp
push
enter
adc
jne
push
jle
jnp
stos
adcl
and
imul
js
mov
jns
pop
mov
icebp
pop
jmp
int
mov
mov
pop
loopne
mov
or
xlat
adcb
mov
in
xor
or
sbb
mov
sub
jb
pop
ljmp
sbb
add
mov
mov
fidivrs
cmp
add
testb
add
jae
mov
ret
xor
pop
push
mov
xchg
daa
add
mov
xchg
mov
mov
mov
add
dec
sub
repz
lods
sar
fistl
pusha
mov
stos
flds
sbb
jns
push
out
frstors
inc
inc
sbb
xchg
out
pop
lock
bound
jbe
nop
or
mov
bound
shll
mov
jmp
ljmp
lods
ljmp
mov
add
in
pop
loope
and
cmpsl
psubsw
and
xchg
inc
push
imull
nop
jb
xchg
pop
dec
int3
in
std
and
aaa
les
add
mov
adc
fsubl
sub
cwtl
ds
dec
int3
mov
or
adc
fstpt
inc
mov
adc
or
cmp
add
xchg
sub
scas
jbe
or
lods
adc
add
add
add
mov
inc
pop
rorl
stc
not
std
scas
dec
iret
xor
lock
pop
push
cmpsb
pushl
xchg
sbb
in
je
or
jb
xorl
mov
sahf
jns
jo
clc
out
out
pop
andl
cli
pushf
cli
or
and
pop
adc
repz
and
pop
mov
jge
out
js
fists
sub
mov
xor
inc
imul
insl
sbb
sub
popf
sbb
lds
inc
popa
insl
jno
out
dec
dec
inc
icebp
arpl
aad
cmp
test
dec
sbbb
fistps
add
sbb
and
add
ffreep
cmp
lods
or
lods
iret
mov
inc
sarl
loope
mov
pop
add
xchg
enter
push
fists
int
xchg
mov
add
add
scas
push
push
adc
outsl
dec
add
mov
repnz
pop
dec
mov
cmpsb
push
jge
lret
push
sub
cli
jg
imul
cmp
dec
insl
loopne
cmpsb
or
push
or
push
mov
mov
and
movsb
push
pushf
cmp
loopne
repnz
aaa
rol
andb
pop
push
xor
jo
bound
lock
cld
sbb
in
movsl
mov
cmp
adc
jnp
ss
nop
pusha
leave
jmp
insb
pop
mov
mov
loop
mov
hlt
jno
int3
push
adc
xchg
out
push
push
in
fists
mov
mov
dec
std
ja
mov
dec
stos
fisubl
call
or
jmp
mov
push
mov
sub
lock
hlt
insl
das
sub
jnp
sub
pushf
push
add
clc
jle
add
mov
into
fwait
testb
xchg
mov
cwtl
adc
add
mov
xor
jge
cmp
daa
lcall
cmc
cld
loopne
fldl
sub
decb
daa
xchg
insl
xchg
push
rclb
shld
or
xchg
and
into
cmpsb
sub
insl
mov
and
addl
cmpsl
mov
and
dec
fisttpll
fisubrl
add
enter
sub
and
inc
out
adc
lret
in
clc
lret
cmp
pop
add
lahf
fsts
or
jle
adc
adc
in
cmpsb
popa
or
es
push
cmp
rclb
jmp
cmc
aas
or
test
enter
sti
mov
mov
loop
dec
add
jne
neg
jg
repz
adcl
movsl
enter
mov
add
xor
mov
pop
mov
std
mov
add
add
add
rcr
jle
push
add
stos
lea
call
adc
xchg
jp
mov
xchg
xchg
lahf
pop
inc
push
ja
xor
push
fidivl
data16
arpl
fldenv
pusha
cmp
and
adc
ja
sbb
mov
mov
sbb
and
sbb
or
cli
loope
cmp
test
lea
jp
jns
mov
stc
addr16
in
mov
lret
push
cmp
push
add
and
or
add
push
cmpsl
sbb
push
mov
push
push
rorl
add
fs
pop
sub
jl
inc
jae
movsl
mov
mov
mov
faddl
mov
jmp
push
inc
sahf
aad
pop
popf
jo
mov
rdtsc
pop
int
clc
sub
pop
sbb
addr16
imul
pop
add
sti
inc
out
aas
mov
sub
repnz
dec
test
add
testb
add
xor
mov
lods
imul
and
aad
ss
mov
test
sbb
call
and
and
jnp
mull
fwait
lret
push
mov
mov
push
decl
jnp
outsl
dec
aam
test
mov
test
lds
sub
ljmp
or
cmpsb
and
dec
es
sub
mov
or
jo
addr16
or
hlt
mov
xor
dec
movb
push
sti
je
mov
xchg
push
fsubl
std
sbb
sahf
cld
enter
jmp
cmp
stos
or
dec
sub
das
arpl
adc
mov
mov
pushf
popa
test
pushl
cmp
xchg
call
xor
push
pushf
jmp
test
sbb
add
add
push
bnd
jp
xchg
inc
adc
add
testb
add
and
ljmp
test
fstl
adc
iret
cwtl
in
jmp
les
mov
jnp
fldcw
dec
imul
push
sub
sub
mov
repnz
imul
cmc
sarb
pop
inc
add
ljmp
hlt
testl
in
xor
pushf
outsl
cli
push
mov
cltd
loop
jo
popf
int3
inc
in
and
cmp
xchg
rcrl
push
in
test
push
push
movl
iret
pop
pushf
xlat
aas
fldcw
sub
mov
lcall
cmpsb
stc
or
cs
and
cld
repz
je
repz
mov
in
inc
mov
push
push
xchg
inc
jle
std
sub
or
cld
push
popa
icebp
sarb
mov
jb
fldl
sbb
in
out
ja
fbstp
push
jp
jo
add
testb
add
iret
xchg
adc
enter
pop
fcmovbe
das
cmp
mov
fdivrl
pop
loop
ja
and
xchg
rcr
cs
imul
jmp
int3
cli
adc
mov
mov
cmp
add
mov
push
call
test
sub
mov
sub
xchg
stos
sub
outsl
pop
stos
jns
dec
ret
inc
repz
addr16
fisubs
ja
cmp
adc
ret
xor
xchg
cli
pop
lcall
outsl
pushf
jo
mov
and
push
add
push
dec
lahf
orl
ja
mov
jne
sar
or
jmp
mov
cmpsl
jnp
imul
insl
test
jge
cltd
pop
std
sbb
or
dec
xor
in
lret
loope
inc
sub
scas
test
in
shr
data16
add
add
add
or
mov
and
inc
pushf
adc
sbb
ja
push
inc
add
out
mov
das
scas
mov
mov
mov
lods
sub
test
xchg
stos
jecxz
dec
cmp
add
cmp
mov
aas
test
arpl
and
mov
mov
xchg
sti
call
repnz
jle
popf
push
repnz
lret
and
sti
in
loop
xor
flds
xchg
adc
pop
aaa
xchg
roll
jae
repnz
jb
jmp
or
mov
lret
lods
or
into
push
or
out
outsl
xchg
xor
inc
add
and
mov
xchg
mov
or
lret
dec
sahf
mov
rorb
or
repz
mov
add
dec
or
jne
lea
mov
imull
pop
and
aad
jecxz
or
inc
mov
clc
or
add
jg
imull
push
divb
sbb
add
add
add
popa
nop
lahf
cmc
ret
add
aam
push
in
lock
mov
adc
jmp
filds
and
xchg
test
lret
inc
jge
jo
and
arpl
mov
pushf
aam
mov
bound
out
enter
int3
mov
inc
je
adc
push
cmp
xchg
jnp
or
jge
pop
mov
mov
bound
adc
push
push
nop
sub
outsb
and
aas
inc
pop
fdivrs
lock
clc
jne
mov
push
dec
sbb
lods
ret
icebp
sub
inc
js
in
jmp
sbb
ljmp
stos
scas
loopne
jo
pop
movsl
in
and
inc
jb
pop
add
cmp
push
add
mov
mov
cmp
pop
pop
push
xor
int
xchg
divb
mov
add
mov
lea
add
sti
jg
and
or
rolb
sbb
add
add
add
lret
jle
jbe
sbb
loop
or
jne
pop
jbe
lea
jp
jno
loop
and
std
clc
js
repnz
orl
dec
idivl
sbb
icebp
int
fbld
jnp
xchg
push
stos
xchg
std
iret
in
adc
stos
das
loop
xor
dec
push
cmpsl
out
les
lods
shlb
icebp
mov
repz
sbb
syscall
xchg
xchg
into
mov
mov
dec
aaa
and
mov
mov
jle
cwtl
insl
out
lds
or
xchg
daa
dec
call
pop
pop
or
aas
fildl
lret
mov
loop
popl
ss
pop
les
js
jbe,pn
aas
fisubs
adc
jae
push
sub
mov
rcll
imul
data16
lahf
popl
jb
roll
aad
adc
test
add
jnp
fldl
dec
test
dec
sbb
add
out
mov
addr16
and
inc
mov
pusha
js
sub
ljmp
and
inc
jno
ljmp
dec
sbb
mov
xor
popa
or
mov
sti
ljmp
and
aaa
fwait
cmp
les
jmp
out
das
scas
fldenv
push
in
mov
cmp
mov
and
scas
add
and
or
cmc
add
push
mov
xchg
pop
repnz
pop
call
loopne
sbb
and
in
in
aad
je
shll
dec
xor
or
inc
jge
jnp
jno
fcom
test
fcmovnu
bound
incb
mov
fsubl
dec
xchg
inc
hlt
loopne
js
gs
xchg
scas
add
jp
pop
les
scas
std
call
fstp
and
into
adc
add
outsl
mov
xchg
pop
cltd
mov
inc
fidivrs
testb
add
push
cmp
loope
test
sbb
add
dec
or
sbb
call
hlt
dec
push
jge
jno
out
outsl
jmp
sub
or
fmull
mov
test
mov
repnz
push
loop
cmc
jns
arpl
pop
sti
lcall
in
movsl
cmpsb
cmp
sub
xchg
cmp
push
push
or
sti
cmp
cmc
sbb
insl
leave
int
aam
pop
or
jecxz
stos
sub
rorl
loope
cmpsb
mov
jne
push
push
dec
or
mov
test
jae
pop
outsl
xlat
push
out
jns
insb
bound
xchg
xor
and
inc
jmp
or
test
and
xor
push
push
adc
bound
movsb
xor
rcrb
xor
sbb
sbb
mov
ror
in
add
add
sbbb
loope
jmp
loop
out
jmp
xor
add
testb
add
cmp
pushf
sub
enter
out
fstpt
jge
lret
rclb
pushf
jne
gs
sub
sub
fs
pop
orl
lock
and
ret
sahf
push
mov
cmpsb
testl
aaa
jnp
pop
sahf
out
jae
push
add
cmpl
cltd
inc
push
mov
jl
xor
xchg
loopne
mov
je
cltd
inc
mov
lret
xchg
sub
setb
push
xor
xchg
cltd
xchg
cmp
ds
push
xchg
adc
movsb
lcall
xlat
pop
dec
xor
rcrb
xchg
inc
popf
cli
push
push
jge
int3
push
mov
pushf
rolb
repz
pusha
dec
sbb
idivb
push
cld
jne
aam
xchg
test
pop
shlb
loop
inc
es
adc
icebp
imul
and
add
xor
idivl
mov
sub
and
add
add
add
push
sbb
iret
ret
cmc
mov
mov
push
leave
outsb
dec
cmp
mov
dec
adc
data16
sub
mov
xchg
lahf
stos
lods
xor
imul
cmp
fbld
ret
flds
xchg
or
call
decl
es
sbb
adc
mov
jbe
push
mov
ss
push
js
shlb
push
mov
xchg
mov
lods
sub
inc
xor
insl
loop
fidivs
sub
xor
shrb
dec
push
loop
orb
imul
dec
push
and
and
mov
call
in
xor
xor
punpcklbw
sub
aas
cmp
hlt
in
push
jmp
in
movsl
inc
sub
loop
mov
clc
adc
sbb
insb
sbb
add
cli
inc
jg
int
pop
sbb
dec
add
and
add
testb
add
mov
dec
fsubrl
push
std
cmp
cs
bound
sbb
dec
out
cmp
add
mov
jns
popa
mov
out
mov
dec
adc
sbb
sbb
inc
test
mov
lea
sbb
xor
and
or
out
cmp
stc
pop
inc
adc
push
jle
aam
orl
iretw
loope
xchg
fcom
add
xchg
das
mov
or
mov
adc
stos
fsubrs
scas
pop
inc
add
push
xlat
jbe
and
jmp
jne
call
push
inc
add
out
fists
in
xor
mov
cld
pop
nop
cmp
testl
gs
mov
jnp
lcall
xor
cld
lea
xchg
vpsubusb
in
fisubs
sbb
mov
add
lock
std
cmp
jle
fisttps
cmp
cld
push
and
add
add
add
mov
scas
lds
sarb
or
jge
movsl
pop
scas
adc
je
cmpsl
arpl
pop
fisubl
jg
mov
loop
dec
xchg
xchg
jle
push
jecxz
add
adc
jne
mov
das
mov
pop
adc
shll
dec
jnp
push
call
dec
cmp
and
xorb
insb
or
test
xor
add
in
shll
test
or
dec
push
ljmp
cmp
cmp
jo
fdivs
and
add
clc
adc
mov
rol
mov
push
mov
mov
sbbb
dec
jg
jge
fwait
sahf
lds
pop
mov
cltd
inc
addr16
out
pop
daa
mov
pop
pop
movsl
add
xchg
pop
lds
xlat
ficoml
out
cmpsb
xor
add
testb
add
in
jg
add
out
mov
sbb
movsb
std
push
cmpsb
ret
cmp
es
and
iret
jae
gs
lcall
std
push
add
xor
adc
push
xchg
pop
xchg
lcall
and
mov
dec
in
inc
or
shrb
push
fstpl
xor
rorb
mov
pop
xchg
fxch
inc
mov
lcall
popa
idivb
pop
push
sbb
pop
jp
aam
insl
push
js
push
test
jae
push
negb
xlat
xchg
sti
pop
and
mov
and
jnp
in
mov
js
imulb
cmp
ret
in
inc
repz
mov
ljmp
gs
mov
fnstsw
fs
sarl
je
adc
test
push
push
jle
rcl
pop
scas
decl
sub
add
sub
iret
outsb
jmp
rcll
insl
popa
imul
add
add
jmp
popa
adc
mov
adc
pushf
mov
enter
mov
sbb
cmp
mov
fstpt
ret
ret
cmp
in
icebp
mov
xchg
out
inc
mov
fsubr
dec
cmpsb
nop
jg
and
repz
cmp
sti
ja
add
xor
mov
scas
popf
xchg
cmp
jno
sbb
fs
loop
sbb
dec
push
xchg
add
xor
and
das
int3
out
jg
imul
inc
test
sbb
xor
mov
js
aad
int3
sub
cmpsl
or
pop
dec
push
push
cmp
mov
xor
xchg
and
ja
mov
xlat
xchg
cwtl
xor
frstor
push
xchg
push
push
xor
adc
jp
push
outsb
add
sbb
std
sbb
stc
cld
or
dec
loopne
xabort
add
testb
add
xchg
sbb
dec
sub
mov
inc
or
adc
fimuls
mov
mov
sub
and
xchg
or
gs
adc
xchg
popw
shrl
addr16
mov
or
jge,pt
mov
jno
jo
or
cmp
fstps
stc
out
cwtl
push
xor
shll
lret
or
push
ret
xor
push
inc
lods
pusha
notl
add
fs
xor
outsb
lret
jecxz
mov
xchg
push
mov
sub
jp
imul
hlt
push
test
shll
xchg
push
out
int
in
iret
inc
jno
shl
cmpsb
xchg
adc
lods
or
cli
pushf
adc
fwait
add
push
jecxz
mov
push
sbb
sub
xchg
je
pop
sub
shl
sbb
sbb
cltd
rorl
add
pop
test
scas
repz
cld
cmp
jl
xor
and
add
sarb
stc
jae
push
movsb
mov
das
addr16
pop
xchg
insb
xor
push
and
aas
add
push
enter
xor
es
add
push
lret
std
pop
addr16
mov
push
lahf
hlt
jno
xchg
sbb
sbb
jne
mov
dec
xor
mov
jns
and
add
cmp
adc
fs
stos
jp
bound
cwtl
js
rcl
sbb
test
lret
xlat
inc
stc
mov
mov
daa
cmc
cmp
into
jnp
sbb
call
inc
lods
add
std
push
cmpl
mov
push
cwtl
les
inc
inc
push
dec
js
es
push
out
call
lods
mov
sbb
push
cmp
add
add
gs
call
cld
mov
xor
mov
dec
pushl
outsb
pop
in
in
add
testb
add
orl
inc
jp
xchg
dec
sbbl
pop
jbe
pop
subl
lock
ss
xchg
sub
inc
cmp
pop
pop
and
enter
outsb
lds
aad
cmp
test
dec
jnp
lock
pop
mov
ja
mov
pop
mov
cmp
xchg
xchg
pop
sahf
popf
enter
jae
popa
inc
std
mov
inc
test
leave
jg
mov
stos
dec
push
outsb
stos
push
jo
push
xorl
xchg
ret
push
jmp
ljmp
cmp
mov
scas
dec
call
sbb
in
repz
lret
pop
cmc
rcll
lods
mov
mov
mov
push
add
jnp
jmp
lahf
fstps
test
mov
mov
icebp
pushf
setle
xchg
aas
outsl
push
mov
cltd
pop
jbe
enter
pop
sub
inc
ja
pop
aas
pop
pop
inc
adc
mov
fisubl
add
testb
add
insb
mov
sti
lea
sub
adc
repnz
stc
fwait
adc
ljmp
out
mov
rolb
mov
adc
or
xchg
out
xor
popf
cmp
mov
jle
enter
push
das
aad
and
cmp
sbb
xchg
sahf
jb
inc
xchg
push
daa
in
mov
in
adc
fcmovnbe
inc
ret
cld
daa
xor
stc
ja
addr16
mov
and
adc
push
lods
lock
pop
mov
clc
push
in
sbb
add
dec
adc
idivb
push
push
scas
inc
sbb
lds
subb
push
mov
and
push
or
cmp
mov
add
mov
ret
jno
testb
xor
enter
mov
xchg
fdivs
daa
mov
xchg
add
pop
push
repnz
fcom
add
repz
jae
ja
div
dec
lods
push
mov
mov
lret
add
testb
add
ja
sbb
mov
inc
xor
dec
dec
xor
test
daa
add
jg
cwtl
cmp
mov
pushf
sbb
xchg
cmpsb
push
imul
test
push
adc
lret
jno
daa
outsl
imul
mov
pop
jmp
ja
push
test
lahf
lods
mov
cmpsl
cld
mov
pushl
dec
frstor
sbb
push
push
adc
pop
push
shl
nop
sub
and
rclb
les
stos
inc
push
loopne
clc
pop
stc
popl
popf
jne
sti
stos
xchg
sub
mov
ja
pop
aam
pop
fwait
ja
push
xlat
int3
insl
or
pop
movsb
int3
das
cmp
mov
xchg
lret
xor
and
and
cmp
iret
push
sub
and
mov
cmp
pop
notb
mov
lods
movsl
std
jo
or
mov
mov
cmpsb
push
jbe
repnz
xor
add
xor
cli
std
jg
into
jno
fdivrs
pop
or
sub
add
add
add
cld
dec
cld
pop
imul
pop
adc
pop
les
arpl
imul
mov
aaa
cltd
xlat
cltd
cld
sbb
push
shll
jns
call
add
or
push
inc
push
cltd
aam
popa
cwtl
cltd
adcl
test
xlat
cltd
sbb
mov
push
subb
sbb
xor
xor
lds
or
aad
xchg
cmpsb
int
add
ja
icebp
push
out
pushf
cmp
test
lret
pop
inc
stos
pop
push
jge
adc
jns
jb
xor
enter
sub
and
outsb
adc
fbstp
or
rorb
or
jge
mov
stos
adc
mov
lods
bound
daa
push
lods
jp
cwtl
fs
out
cmc
nop
fs
add
testl
incl
sub
pop
cmp
add
testb
add
sub
mov
std
das
int
into
mov
mov
stos
xchg
xchg
inc
test
xchg
aaa
cli
sahf
adc
out
insb
mov
pop
cmc
js
in
xor
stos
testl
pop
cmp
inc
shrl
cli
js
jns
and
inc
fwait
imul
inc
ss
xor
popf
pop
setne
mulb
push
jno
add
dec
mov
iret
xchg
inc
sbb
cltd
dec
pop
mov
cmpsl
mov
push
or
adc
outsl
sbb
orl
push
sub
aaa
cmpsb
cmpsb
push
bound
dec
cli
orl
cltd
addb
shl
xchg
mov
pop
lahf
data16
je
inc
je
mov
pusha
loopne
scas
adc
mov
sub
lret
add
mov
sbb
mov
fldenv
fadds
add
es
jg
pop
xorl
out
xor
out
mov
add
testb
add
cmp
into
out
pop
dec
adc
cmp
cltd
mov
sbb
inc
jecxz
lods
adc
xchg
ret
or
fsubrl
bound
cli
sub
fdivl
jne
sbb
fadds
fwait
popa
mov
sbb
shr
into
sbb
test
sub
dec
test
cmp
insb
pop
imul
xchg
aam
ss
pushf
cli
xchg
int3
mov
fisubrs
and
mov
mov
or
lds
xchg
adc
cmp
dec
push
cmc
cmpsl
cmp
mov
add
ds
fstpt
jo
lret
orl
cmp
xchg
inc
clc
sarb
cs
xchg
icebp
cwtl
test
lahf
stos
mov
lahf
xor
push
dec
mov
jae
lcall
imul
add
push
clc
or
cmp
imull
inc
test
add
testb
add
or
sbb
push
cltd
push
pop
movsl
mov
in
pushf
js
xchg
add
xor
loopne
mov
or
scas
iret
movsb
cmp
jl
daa
mov
int3
or
cmpsb
or
cltd
pop
out
jmp
leave
int3
fdivrl
pop
ret
cmp
test
jne
jl
push
out
mov
icebp
push
jge
pop
in
dec
rcl
dec
inc
xor
mov
lods
bound
test
daa
dec
lea
std
dec
pop
and
adc
test
scas
in
movsb
jle
sub
in
push
xchg
movl
push
sbb
fs
or
pop
int
push
push
gs
adcb
ss
mov
xchg
mov
cli
insb
mov
les
jge
jecxz
rcl
pop
and
and
xor
add
mov
imul
sbb
mov
add
xor
ja
wbinvd
inc
adc
add
add
add
dec
xchg
inc
cmp
mov
add
rclb
mov
add
lahf
jmp
jle
rorl
ret
mov
xchg
cmp
jno
mov
mov
arpl
dec
xor
push
jle
lock
mov
lret
inc
adc
push
or
fmul
sbb
cs
fiaddl
adc
xchg
jbe
jg
es
adc
sti
gs
fbstp
xor
int
arpl
aad
mov
sti
shll
jl
jp
sarl
je
mov
mov
sbb
push
dec
cmpsl
lock
xchg
push
std
and
leave
dec
inc
sbb
ficoms
push
pop
pause
sub
dec
pop
pop
mov
pop
inc
ret
mov
inc
or
add
ficoms
stos
sbb
ljmp
inc
or
add
testb
add
das
mov
leave
cli
cmp
and
enter
lds
push
popa
pushf
sbb
aas
insl
mov
xor
negl
xchg
cmpsb
jo
bound
xchg
dec
lods
pop
movb
lods
loope
cltd
pop
das
add
test
inc
leave
gs
jecxz
jmp
aam
and
lock
subl
lds
adc
mov
aad
xchg
xor
cs
test
adc
adc
es
mov
cmpsl
sub
jp
pop
xchg
and
and
sahf
cmpsl
sbb
mov
and
shll
test
cmpsl
les
pop
das
or
test
ss
sub
or
cmp
xchg
jmp
je
shlb
and
mov
jl
jmp
fs
ret
inc
data16
vorps
mov
add
mov
out
sbbb
sbb
mov
add
testb
add
inc
jo
lret
inc
xlat
sbb
xchg
xchg
pop
add
inc
jmp
sbb
xor
repz
and
and
adc
insb
cmp
cmp
out
or
orb
or
xlat
mov
adc
nop
push
or
dec
mov
insb
out
inc
push
lods
cli
ficoml
push
enter
rcr
add
adc
iret
push
sar
dec
cli
push
leave
xchg
add
adc
push
test
sahf
dec
push
mov
or
icebp
push
sub
ret
xchg
loopne
stos
inc
dec
mov
add
in
jmp
xlat
and
movb
test
adc
insb
pop
pop
loopne
cli
inc
push
sub
pusha
and
jle
jg
or
sbb
jg
out
fucomp
sub
jno
push
xchg
mov
mov
das
inc
add
dec
or
out
aad
jo
xchg
fsubrl
xorb
add
add
add
lods
iret
test
and
mov
mov
cli
cmp
fcompl
jns
xchg
sbb
dec
mov
inc
dec
adc
ja
fcmovu
pcmpgtd
loop
std
jp
addb
dec
aas
pop
lret
bnd
push
imul
imul
cmp
out
pusha
pop
addr16
pop
xchg
add
fidivrl
add
and
test
mov
stos
repnz
xor
outsb
sub
inc
aaa
dec
outsb
pushf
inc
lods
dec
mov
jg
dec
inc
sub
add
or
xchg
cmp
xor
sti
hlt
sub
fs
sbb
or
or
xchg
xorl
jmp
ljmp
fdivr
rcr
cmp
movsb
mov
mov
sar
mov
pop
ss
adc
mov
lods
mov
clc
cmpsb
scas
pop
xor
add
in
add
cmp
out
dec
lret
fstpt
jbe
add
testb
add
cmp
es
lock
int3
xchg
dec
arpl
push
or
call
mov
lock
shrb
mov
std
sub
loope,pn
xchg
fwait
xchg
in
in
push
movsl
dec
mov
pop
push
lock
dec
cld
scas
loopne
cwtl
mov
cmp
in
jecxz
loop
rcrl
es
fstl
inc
push
paddsw
and
sbb
out
repnz
int3
adc
ja
sbb
insl
xchg
add
in
mov
push
mov
lock
out
sbb
xchg
xor
sub
and
testl
mov
icebp
pmaxub
popa
mov
and
movsl
repnz
dec
mov
cmpsb
xchg
mov
push
outsb
fcom
loop
push
xor
xor
cmp
insb
lret
fstp
mov
add
lods
jg
add
lods
mov
jno
xor
add
add
add
stos
sub
mov
mov
hlt
adc
push
jns
or
add
xchg
pop
loop
sub
add
lcall
sbb
mov
test
pop
mov
mov
xchg
xchg
je
push
das
lret
mov
ret
dec
and
adc
jg
cmp
aad
pusha
mov
mov
test
aad
mov
pop
call
push
in
adc
sub
lret
mfence
dec
jge
add
xor
add
sub
push
sub
jns
jbe
sub
imul
arpl
sub
fwait
out
nop
movsb
sub
pop
push
addl
out
and
push
stc
push
sbb
cld
and
aad
and
into
dec
inc
inc
int
jge
jmp
shl
sub
xchg
xor
xchg
fnstcw
negb
sti
add
mov
dec
idivl
cld
add
adc
loop
xor
add
add
add
outsb
jnp
pop
or
addr16
pop
lret
cltd
shll
pop
sti
dec
mov
mov
push
and
inc
mov
inc
push
cltd
mov
push
cwtl
lahf
xlat
jb
adc
aas
push
and
jp
jnp
add
aam
test
jne
fwait
jmp
sahf
xchg
insl
ja
mov
js
daa
sti
lock
pop
rclb
cmp
dec
push
add
or
cltd
mov
mov
push
jbe
fwait
inc
addl
add
outsb
shlb
pusha
or
cs
sbb
mov
mov
dec
daa
cwtl
cld
xchg
xchg
fiadds
sti
adc
aam
mov
cmp
orl
fcoms
fmull
push
loopne
add
pop
and
sub
pop
mov
push
xor
std
xchg
test
xchg
insl
xchg
mulb
scas
inc
cmp
or
sbb
mov
lods
int3
add
ret
mov
iret
mov
orl
add
inc
dec
outsb
jbe
in
sub
pop
push
mov
xlat
popl
int
push
lea
xchg
cmp
js
sbb
lock
les
jge
incb
shl
inc
inc
test
icebp
data16
in
sbb
test
and
sub
inc
pop
mov
sti
stos
pop
jne
mov
dec
aaa
mov
add
sbb
mov
pop
cmpl
and
fstl
in
cli
daa
push
test
jo
hlt
test
push
dec
jg
mov
shlb
sub
pop
jmp
hlt
cld
mov
or
sub
jb
scas
sbb
fs
mov
test
sub
xor
cs
shrl
ds
testb
nop
daa
pop
mov
push
stos
adc
repnz
add
mov
sbb
push
dec
mov
add
testb
add
mov
jge
inc
mov
mov
cmp
pop
and
or
xchg
sub
out
fbld
sar
sbb
arpl
mov
inc
in
cmpsb
dec
xor
andl
add
test
jl
pop
mov
and
mov
pop
stos
mov
or
rcll
sub
je
rolb
adc
cmpsb
dec
inc
iret
add
add
xchg
mov
outsb
lock
xor
pop
cld
cs
nop
ror
mov
je
mov
nop
mov
dec
std
xchg
jb
cld
sub
scas
xchg
xchg
mov
and
mov
push
repz
jns
in
mov
cmp
pop
test
adc
imul
adc
cmpsl
mov
mov
adcl
xchg
ret
loop
inc
push
addb
shlb
cli
clc
cli
clc
sarb
repnz
inc
aam
int3
and
inc
add
testb
add
adc
mov
cld
popa
scas
cmp
or
adc
cmp
pop
jp
mov
push
xchg
aaa
mov
cltd
inc
adc
jne
mov
mov
xor
xchg
repnz
xor
pop
push
sub
dec
xor
jle
mov
jo
mov
cmp
in
cld
mov
xchg
div
aam
shlb
add
jb
std
or
scas
aam
push
jne
rolb
cmp
insl
pop
pop
jg
dec
das
xorb
push
jl
stc
je
loopne
jp
aas
daa
and
xchg
ss
pop
jecxz
sub
ljmp
sub
jl
ja
xchg
ljmp
ss
cltd
imul
insl
popf
and
cmpsl
push
pushl
mov
inc
cli
push
sbb
leave
and
adc
pop
loop
out
shrb
cs
add
test
imul
push
lcall
cmp
add
testb
add
xor
dec
pop
pop
mov
data16
mov
xor
or
shl
in
out
or
mov
and
aas
cltd
pop
leave
jae
lods
roll
ljmp
mov
rclb
dec
inc
pop
pop
adc
fcmovnb
add
sub
divb
jno
pusha
andl
pusha
pop
mov
pop
addr16
add
adc
inc
cld
shlb
and
loop
enter
xchg
xor
push
cld
mov
xor
loop
loopne
mov
sbb
and
test
sbb
pop
in
xchg
pop
xor
add
mov
mov
xor
mov
shlb
stos
icebp
test
lock
xchg
xlat
lods
out
or
and
sub
and
inc
adc
inc
movb
arpl
pushf
or
add
es
data16
cmc
jle
dec
lahf
cmpb
cmp
add
add
add
shl
ss
data16
sub
xchg
enter
cmp
cmp
mov
inc
jno
jns
popa
fisttpl
lcall
inc
pop
ror
mov
and
cmp
add
cmp
repz
or
fs
mov
pop
lea
mov
xchg
mov
dec
in
lret
inc
fcoms
push
push
jbe
push
popa
push
cmpsl
and
xlat
jb
dec
inc
mov
mov
repz
pusha
jle
rclb
aaa
mov
ret
rorb
lods
push
rol
clc
xchg
mov
push
dec
shlb
scas
mov
cwtl
add
cmc
imul
mov
or
je
and
xlat
gs
adc
aam
mov
cld
sbb
adc
dec
adc
inc
fcomp
inc
adc
stc
icebp
dec
mov
jp
je
and
enter
clc
mov
fldcw
cwtl
cmpsl
adcb
add
testb
add
mov
popa
xor
mov
adc
aad
lret
loope
fstps
insb
add
jbe
pop
adc
ljmp
imul
push
lods
sbb
sub
mov
fdivrl
loopne
sub
out
shrl
movsl
push
cmp
cmc
xor
xchg
sahf
mov
inc
xchg
pop
fisubs
mov
fsubr
aam
fnstsw
mov
xchg
lahf
adc
or
mov
push
mov
cmpsb
jnp
loop
repz
add
rclb
xchg
xchg
mov
jle
int
cs
popa
pop
insl
or
pop
stos
pop
stos
pop
mov
int
add
push
push
mov
pop
cmpsl
pop
adc
pop
sbb
pop
test
inc
ret
inc
push
jbe
pop
in
inc
push
leave
jle
aam
dec
pop
in
sbb
mov
add
repz
push
sti
cmpsl
pop
push
jo
iret
aaa
mov
sbb
add
testb
add
pop
and
test
mov
push
sti
push
in
call
mov
dec
rcrl
jne
mov
loop
jnp
ds
mov
add
repz
sbb
sub
push
cld
jne
std
push
jle
daa
mov
lret
cmp
in
add
insl
sahf
xor
pop
imul
or
iret
divl
mov
jge
xchg
push
mov
aam
jp
pop
push
int
in
add
nop
mov
and
jge
dec
cmp
dec
fsubrl
daa
jp
dec
mov
mov
xor
and
fisubl
mov
insl
sarb
insb
push
test
adc
enter
cld
adc
fiaddl
rcrb
adc
inc
or
mov
aad
jecxz
jnp
dec
and
arpl
std
rcrb
daa
lds
push
cli
out
inc
imul
cli
cmpsb
add
push
and
std
cmp
movb
in
insl
adc
add
testb
add
out
add
or
movsb
adc
insl
push
dec
push
adc
fwait
pop
mov
enter
test
addb
nop
jp
out
cmpsl
mov
into
ficoml
cmpsl
adc
sbb
mov
popf
sub
scas
repnz
adc
mov
xor
nop
rcrl
nop
popa
adc
push
testb
push
clc
fimuls
push
and
cld
sub
fbld
mov
and
mov
or
mov
push
pop
lock
call
sbb
stc
mov
imul
xchg
loope
out
push
inc
jne
icebp
stos
jecxz
jecxz
andb
push
addr16
cmp
cld
mov
movsb
std
sti
sbb
add
lret
jae
pop
inc
shrb
inc
add
cli
fidivl
pop
repnz
in
mov
mov
jge
shlb
cmp
lds
add
and
jecxz
or
or
add
add
add
xchg
mov
icebp
lods
out
rcrl
dec
adc
ja
repnz
pop
mov
add
rorb
insb
insl
mov
addb
test
push
rcr
out
cmp
sbb
xchg
ja
stc
add
mov
data16
xor
pushf
push
incb
nop
dec
movsb
pop
fistl
or
test
fistpll
dec
push
into
xchg
das
xchg
xor
push
mov
clc
pop
or
shrb
and
cs
aam
push
iret
sbb
jecxz,pt
cld
cmp
jae
out
fbld
in
xchg
mov
shl
jp
pushf
out
aaa
lds
jmp
pop
insb
pop
xor
push
jne
push
cmp
cwtl
xchg
adc
ljmp
pop
mov
pop
outsb
scas
sahf
jno
jl
add
add
xchg
ficomps
push
dec
ja
cmp
add
add
add
sbb
addr16
notl
lock
jg
mov
push
add
sub
bound
cltd
mov
scas
adc
jp
fsts
in
or
xlat
cmpsl
cmp
mov
in
xchg
loop
lds
loopne
adc
cli
stos
mov
push
jg
mov
fcmovnbe
xor
cmpsb
xor
dec
fldcw
sahf
std
dec
inc
pmulhw
dec
add
out
sbb
sub
push
lahf
shrb
mov
jnp
ss
jae
nop
xchg
adc
xor
jnp
lds
bound
dec
pop
xlat
out
jne
xchg
and
xor
dec
dec
mov
jg
fsubr
imul
push
xor
cs
out
xchg
loope
dec
sbb
sbb
xlat
push
ja
mov
xor
add
dec
inc
std
test
add
arpl
ja
repnz
add
jecxz
icebp
hlt
cmp
add
scas
mov
aaa
loopne
jmp
pushf
cli
pusha
xchg
inc
push
test
sahf
mov
jno
int
jno
sub
or
fstps
iret
fmuls
mov
xlat
ja
popa
push
xchg
stos
xor
dec
or
popa
xchg
inc
xor
sbb
push
jmp
loop
cmpsb
and
pop
adc
inc
mov
jo
push
adc
dec
stc
inc
push
xor
pusha
jb
frstor
cmc
xchg
out
lret
popa
sbb
xchg
fxch
jae
andl
stos
pop
clc
adc
cs
pop
mov
xchg
adc
daa
jb
dec
ds
inc
inc
sbb
fdivrs
adcl
shrl
adc
xor
push
test
dec
push
lds
repnz
add
out
cmc
cmp
mov
pop
xor
or
cmpsl
cmp
xchg
cmpb
imul
maskmovq
cmp
sub
scas
test
add
lock
mov
cwtl
sbb
ljmp
add
push
lahf
aad
jmp
fsubrl
adc
repz
shll
or
xor
daa
out
int
in
pop
push
mov
clc
xchg
out
and
and
subb
push
jl
dec
lods
xlat
leave
fwait
testb
fnstsw
stos
cmp
mov
addr16
dec
out
insb
mov
insb
jecxz
in
roll
push
sahf
and
fnstsw
aas
mov
hlt
mov
lods
scas
jmp
sub
xor
sbbl
fisubs
jecxz
push
sarb
dec
test
adc
out
mov
sub
xor
or
and
push
in
sub
cli
into
inc
aam
call
adc
jno
mov
shll
pop
inc
loopne
imul
mov
outsl
cmp
adc
fisttps
aad
subl
and
add
add
sti
pop
jge
div
cmp
push
clc
push
int3
loopne
add
testb
add
xchg
xor
xchg
movsb
ja
jb
out
sarl
repnz
xor
out
dec
mov
sbbl
inc
sub
mov
imul
sub
shrl
int
cmpsb
not
aad
jp
xor
xchg
int
lock
push
mov
mov
fdivr
add
jne
sbb
ds
push
mov
lods
adc
sub
outsb
inc
leave
push
cmp
xlat
clc
inc
fdivl
les
push
fdivr
adc
loopne
out
loopne
adc
dec
cltd
mov
arpl
sub
mov
push
add
mov
es
mov
and
ljmp
inc
xchg
add
cmc
and
adc
aad
out
inc
sbb
sbb
scas
cmpsl
arpl
add
pusha
cltd
fsub
std
in
popf
jle
es
fsub
inc
add
testb
add
add
pop
add
cmp
loope
lods
into
in
cmp
add
sub
pusha
mov
call
inc
mov
sahf
pushf
pop
call
int3
imul
pushf
push
jae
xchg
adc
pop
pushf
mov
mov
push
mov
mov
pop
push
cmc
cmp
xor
mov
xchg
cmp
popa
xor
rolb
fisttps
jnp
imul
dec
adc
outsl
mov
lcall
mov
jle
jo
andb
test
into
iret
lods
iret
mov
or
and
mulps
xor
outsb
xor
jmp
fstps
pushf
mov
sub
jp
lea
jle
jnp
pop
sbb
pop
jp
jnp
sti
xchg
jle
popf
loopne
push
out
xchg
int3
inc
add
testb
add
and
adc
aas
add
mov
adc
fwait
adc
lret
jp
adc
adc
jbe
push
test
js
jo
out
jmp
cmp
dec
mov
fsubl
adc
mov
xchg
movl
fucomi
call
inc
test
arpl
push
ret
xrelease
mov
lea
push
mov
ror
fucomip
xchg
cmp
fisttpll
fistl
mov
adc
add
fdivl
sbb
iret
mov
jne
pushf
xchg
mov
addl
loopne
mov
sbb
xchg
add
xor
fildll
mov
enter
test
push
popa
mov
mov
mov
fs
jno
and
pop
add
mov
push
sti
loopne
cmp
or
mov
ret
add
add
add
in
pushf
push
dec
jae
sbb
xchg
icebp
mov
ja
or
sti
outsl
cmc
call
leave
cmpsb
dec
xlat
adc
inc
mov
mov
and
push
lds
push
pop
aam
stos
pop
and
add
movsl
aas
cmp
ret
push
mov
scas
sub
pop
es
clc
fcomps
cmpl
lea
in
lea
ds
or
pop
sbb
mov
pop
and
flds
lea
mov
dec
shl
jecxz
sub
ljmp
mov
jg
push
shll
inc
jmp
mov
sub
sub
pop
cmp
cwtl
scas
shl
mov
pop
fwait
ja
mov
bound
fstpt
in
xchg
scas
xchg
out
dec
in
xor
mov
mov
sub
notb
call
add
cmp
and
push
dec
jg
lods
mov
testb
add
test
mov
jmp
jbe
rcll
aas
cmp
mov
mov
cmpsl
lea
jg
lods
sbb
in
stos
pop
mul
imul
adc
xor
dec
ret
mov
xchg
sbbb
test
cmp
push
inc
add
nop
inc
cltd
fdivrs
xor
or
xchg
mov
jp
outsb
ret
push
sub
in
ret
lahf
daa
aaa
in
pop
add
pop
and
xlat
mov
sti
fldpi
rcrb
jnp
push
loopne
push
js
inc
popl
dec
pusha
push
xor
push
add
rcrb
mov
lcall
cmp
sub
xchg
nop
decl
xor
xor
cwtl
sbb
mov
adc
jno
nop
cmp
mov
outsl
ss
dec
jecxz
in
mov
test
jg
aaa
add
or
mov
incb
ljmp
xchg
fiaddl
scas
inc
add
testb
add
add
aaa
popf
ds
mov
mov
popa
dec
or
mov
mov
in
jno
frstor
int3
repz
mov
inc
pop
mov
movsb
pop
int3
loopne
jno
jp
ja
out
out
sbb
loopne
cmp
adc
loopne
ret
in
add
xchg
mov
ja
mov
test
pop
mov
or
sbb
xchg
cmp
push
add
add
in
aad
dec
jb
imul
les
ret
shlb
pop
mov
cld
test
inc
cld
push
mov
mov
xor
and
xchg
stos
jmp
stos
loope
out
push
aas
inc
in
dec
mov
xchg
mov
mov
fxch
sbb
xchg
lret
cmp
push
push
mov
scas
xor
lret
pop
adc
jmp
add
divb
rclb
mov
sub
movsb
inc
add
testb
add
into
add
repnz
out
mov
sahf
aam
cld
sbb
rcrl
mov
stc
or
ja
popl
mov
int3
xchg
lret
sub
adc
cs
lret
mov
xchg
sbb
ret
xor
cmp
ja
loop
and
imul
inc
sbb
jecxz
or
jno
xchg
pop
and
push
xchg
subl
lea
fldcw
cmc
jbe
sbb
std
mov
es
test
cld
cmp
ljmp
pop
pusha
das
in
lds
lock
out
hlt
pushf
add
dec
jl
test
loop
aad
xchg
enter
divl
out
mov
sbb
out
sbb
inc
hlt
jae
aam
sbb
ss
mov
pop
push
adc
incb
add
jl
dec
jbe
idivl
ss
repz
lahf
data16
inc
add
testb
add
xchg
fs
jp
rolb
fiaddl
xor
jg
lods
mov
fwait
in
cmp
lods
scas
inc
subb
xor
pop
sub
test
popf
test
shlb
leave
shll
adc
xor
out
popf
jb
or
loope
std
lahf
ljmp
lds
lret
test
and
es
mov
cmp
cmp
add
cmp
dec
hlt
insl
arpl
iret
ret
cmpsl
movsl
mov
xor
je
test
scas
push
jmp
stos
inc
clc
mov
es
sbb
scas
cmp
dec
and
jl
and
mov
jge
in
je
sub
sbbl
mov
adc
adc
mov
in
add
pop
call
xor
int3
pop
cmpsl
dec
push
mov
es
sub
inc
roll
add
and
outsb
sub
stos
fs
cmp
xor
nop
inc
add
testb
add
pusha
movsl
in
js
mov
mov
xchg
sub
insb
xor
and
adc
mov
js
scas
sub
push
into
push
mov
stos
sbb
jp
jp
lods
movsl
pop
mov
or
fcompl
imul
push
dec
lahf
jnp
iret
push
and
sarl
loope
xchg
pop
testl
in
mov
iret
xor
inc
mov
lcall
pusha
arpl
test
out
mov
aaa
inc
add
dec
jns
jl
pop
add
xor
xor
mov
stos
pop
cmpb
inc
push
stos
cmp
movsl
outsl
pop
jl
adc
negl
mov
sti
ficompl
inc
inc
das
clc
lods
pop
maskmovq
divl
add
vandnps
mov
call
or
adc
pop
incb
add
insb
pop
pushf
scas
fistpll
loop
or
test
testb
add
cmp
xorb
loopne
stc
mov
xchg
pop
sbb
orl
fcom
loop
and
cli
movsb
int
test
dec
dec
enter
les
adc
and
data16
jmp
out
inc
repz
push
vpminub
aad
jbe
inc
js
push
cmpl
pop
dec
fadds
insl
jno
dec
call
xchg
popf
addl
mov
mov
mov
cs
repz
aas
js
pop
push
test
mov
pop
lock
add
clc
in
mov
cltd
fs
roll
lahf
outsb
loop
mov
pop
mov
add
cmp
mov
sahf
fists
add
loop
aas
enter
push
inc
xchg
rcrl
mov
popf
pop
or
andb
jmp
cmp
and
and
cli
mov
add
cmp
les
fldl
jl
jl
add
testb
add
icebp
cmp
fstpt
dec
xor
mov
and
pop
and
js
xchg
lock
adc
leave
arpl
stc
nop
xchg
pop
mov
in
aas
aam
lea
push
cmpl
lret
push
sub
insl
sbb
add
addr16
mov
dec
out
fadds
mov
xchg
add
xchg
jg
stc
push
pop
add
je
adc
cmpsl
mov
les
in
test
fdivs
popa
adc
jmp
sbbl
movsl
out
mov
mov
xchg
mov
push
movsb
repz
incb
in
jmp
movsl
int3
push
pop
mov
sbb
inc
dec
cmpsb
push
je
xchg
out
out
shll
xchg
add
adc
mov
outsb
inc
sub
gs
mov
outsl
lret
mov
out
incl
arpl
rorl
add
add
add
mov
and
pop
mov
andl
push
add
fiadds
stc
mov
dec
imul
add
dec
or
push
mov
bswap
push
jae
aad
fisubl
cmp
out
test
mov
add
jbe
mov
lret
inc
push
push
push
and
dec
cltd
xor
add
stc
jns
data16
scas
xchg
leave
jnp
test
cmpsl
fcmovu
jle
push
sub
jl
dec
scas
push
dec
xchg
test
xchg
cwtl
cwtl
in
fisubl
jbe
mov
pop
and
jns
xchg
lret
dec
fs
loope
mov
adc
movb
je
stos
pop
mov
dec
bound
stos
lds
xchg
in
and
pop
push
add
xchg
enter
jbe
out
out
test
xor
and
pop
sub
jnp
adc
and
das
cmp
lods
repz
in
pusha
out
sbb
add
testb
add
fs
mov
idivl
std
popa
and
push
jmp
push
test
mov
das
call
lret
repz
adc
nop
mov
sahf
inc
addl
mov
out
and
into
cmp
lods
ret
lock
insl
mov
adc
mov
sbb
lock
call
add
leave
inc
mov
dec
inc
push
add
mov
aaa
jne
push
in
into
fbstp
or
push
cmp
adc
sub
mov
dec
xor
movsb
ljmp
and
js
push
in
and
andb
sub
arpl
fadds
hlt
lcall
std
sub
jle
insb
mov
fimull
adc
lods
pop
pop
mov
xchg
or
jmp
inc
cmp
pop
push
or
adc
adc
and
add
aas
daa
push
cld
push
std
jmp
push
jg
push
stos
pop
dec
add
testb
add
ds
or
inc
and
packssdw
push
mov
je
imul
enter
ja
jp
sar
jmp
dec
lea
push
jp
imul
cmpsb
push
push
iret
outsb
cwtl
movsl
sub
dec
shrl
push
clc
jns
push
lock
xor
mov
and
stos
data16
pushf
cmp
and
std
adc
jecxz
sbb
mov
cwtl
jo
enter
cli
ror
mov
mov
mov
jbe
xchg
in
loopne
jmp
rcrb
pop
sbb
dec
mov
idivb
imul
and
cld
pop
xchg
fcoms
cmpl
jle
movsb
xor
enter
addb
and
pop
mov
rclb
cmp
mov
push
out
or
call
add
add
add
sbb
dec
push
cwtl
adc
lahf
xchg
push
dec
add
testb
add
fwait
mov
mov
ja
lods
mov
sub
sar
add
mov
imul
out
and
icebp
mov
in
bound
int3
loopne
adc
addr16
cmpsl
push
jne
gs
inc
jnp
stos
inc
jge
je
jae
rcr
mov
cmpsl
cmp
xchg
aaa
aas
popl
jmp
jns
fiaddl
aaa
push
stos
jo
pop
mov
xchg
push
lds
lea
cmp
sub
add
cmp
or
cli
mov
dec
sub
dec
adc
filds
shlb
cmp
es
cltd
test
jae
pushf
push
push
mov
testl
inc
cmp
gs
jle
xchg
cmp
jmp
pop
mov
jae
pop
mov
dec
test
orb
pmulhuw
dec
lret
sub
cltd
and
push
sbb
jle
jecxz
add
stos
add
push
mov
mov
add
testb
add
fwait
adc
xchg
aaa
mov
es
push
sub
adc
mov
push
inc
sub
jecxz
sub
fcompl
sbb
lea
xor
jl
lahf
test
xchg
pop
insb
jg
adc
cld
lcall
orb
loop
or
insb
mull
mov
inc
cmp
push
fildl
mov
arpl
mov
and
inc
add
push
rorb
or
sbb
imull
or
xchg
fmull
cs
jle
or
lods
dec
lcall
lods
cmp
nop
out
or
inc
dec
sbb
sub
outsl
or
aam
icebp
push
pop
es
ja
or
pushf
mov
adc
xchg
push
ljmp
icebp
fbstp
xor
lods
fnstsw
or
add
jg
xchg
lcall
inc
inc
dec
add
testb
add
jmp
out
out
mov
xor
lahf
out
xor
les
hlt
shlb
push
aad
sub
pop
sub
push
xchg
or
sti
pop
jns
mov
cld
dec
test
cs
cmpsb
cltd
andb
push
cmp
std
push
or
std
pop
scas
xchg
cltd
or
call
es
xlat
stos
sahf
sbb
cs
cmpl
jl
add
shlb
or
xchg
xor
in
fsubp
imul
scas
xorl
push
icebp
mov
jae
cwtl
cs
mov
push
stc
xor
cmp
in
je,pt
pop
in
sub
fnstcw
das
lcall
dec
inc
xor
lret
mov
sub
in
shlb
mov
and
shr
add
insb
sub
mov
add
and
dec
lret
jmp
imul
xchg
aad
je
mov
push
add
testb
add
pop
mov
inc
call
nop
cmp
out
mov
mov
mov
outsl
jle
jg
cmp
test
lahf
movsb
sbb
and
clc
jns
loope
sub
pusha
or
mov
add
jbe
cmp
les
sbb
call
and
push
into
lea
xchg
iret
jo
pusha
or
hlt
je
push
pop
cmpsl
or
xor
arpl
addr16
xlat
push
cmp
push
insl
push
mov
sub
in
dec
cmp
mov
int3
xor
cmp
add
fidivl
stos
mov
push
mov
mov
repz
ds
shlb
and
pop
or
xor
addb
and
rcrb
les
pop
cmp
leave
xor
push
and
dec
fbld
dec
xchg
xorl
add
lds
cmc
cwtl
and
xchg
shrb
add
testb
add
aam
pusha
cli
or
xlat
js
daa
adc
lret
mov
gs
pusha
fs
push
sub
inc
jp
stos
mov
lods
pop
imul
mov
out
sbb
jbe
aas
mov
mov
stos
adc
push
pop
pop
push
js
xchg
add
mov
movsl
mov
adc
fidivl
loopne
push
loopne
jb
scas
xor
insl
cmpsl
inc
cltd
or
cltd
or
lea
sub
fists
inc
les
pop
pop
ljmp
inc
call
jl
jb
insl
fiaddl
inc
test
pop
les
and
cmpsl
jg
cmp
hlt
hlt
divl
inc
jbe
sub
bound
gs
xchg
int
pop
lea
icebp
push
cmp
mov
rcrb
ret
int
cmp
fxch
test
add
sub
jns
clc
mov
and
add
testb
add
stos
sbb
add
push
add
pusha
cmp
stc
pop
or
dec
sbb
mov
xor
xchg
adc
in
popa
cltd
dec
shlb
inc
fwait
fs
dec
pop
rorl
pop
xlat
dec
mov
fsubs
cld
adc
mov
or
or
shr
xor
out
es
adc
out
xor
jp
inc
mov
fisubl
mov
jno
nopl
and
inc
enter
mov
dec
xchg
and
out
xorb
push
aad
mov
in
xchg
jbe
out
xchg
mov
mov
fs
adc
adc
mov
adc
pop
rolb
ja
cwtl
cli
lea
lahf
imul
pop
xchg
icebp
push
xor
dec
push
fmul
lea
test
daa
cli
pop
adc
cmp
fsubrl
movsl
add
js
ret
jg
mov
jge
mov
push
add
testb
add
pusha
out
xchg
push
mov
mov
jmp
mov
gs
test
push
mov
gs
mov
std
orb
inc
loope
xor
add
dec
and
mov
hlt
sbb
adc
mov
xor
in
push
mov
or
shrl
jmp
dec
pushf
imul
ss
xlat
xchg
inc
mov
jbe
std
pop
orb
lret
push
out
stc
ror
dec
lahf
pop
stc
popf
pop
and
mov
push
ja
xchg
imul
fidivrl
and
sub
stos
ss
call
ljmp
and
pusha
pop
push
test
aam
jnp
pop
sbb
or
adc
fiaddl
add
ud0
lret
pop
sbbl
add
add
das
mov
cwtl
out
daa
mov
push
add
testb
add
push
adc
out
leave
mov
subb
push
pop
inc
mov
jne
mov
sbb
push
ds
push
pop
add
pop
rcr
std
loope
jnp
add
pushf
daa
pop
jbe
sub
cltd
addr16
in
fwait
inc
stc
mov
inc
or
bound
testb
rclb
mov
pushf
dec
xchg
pop
addl
xchg
lret
pop
or
jecxz
pop
and
adc
jno
jnp
inc
sbb
js
sub
movb
jmp
sbb
dec
je
xor
movsb
pusha
xchg
sbb
lods
xor
pop
and
and
xchg
movsb
pop
inc
mov
into
mov
test
sbb
xchg
jnp
enter
mov
lea
ljmp
ds
cs
scas
xchg
jnp
jae
imul
add
add
hlt
gs
push
sub
arpl
testb
add
dec
pop
pop
sbb
add
mov
stc
xchg
dec
sub
dec
stos
dec
jle
gs
dec
mov
inc
fiadds
or
or
push
out
pop
sbb
pop
sarb
lret
jns
push
sbb
inc
push
ret
and
mov
or
adc
mov
mov
ret
add
popa
jne
pop
sbb
loop
xor
sahf
mov
xor
xchg
mov
mov
imul
sub
or
cld
call
shl
mov
subb
xchg
cmp
ja
test
mov
or
lods
sahf
ljmp
ret
sbb
ret
mov
xor
leave
popa
sub
dec
push
in
mov
sbb
popf
xor
jae
and
pop
rclb
std
and
pop
push
fcmovnb
ret
popa
inc
outsb
add
add
aas
gs
repnz
and
rcr
adc
testb
add
out
pop
movl
jno
xchg
daa
jbe
sbb
repnz
jmp
stos
mov
xor
and
or
lret
mov
loope
je
xchg
mov
sti
lds
test
imul
and
pop
outsb
adc
and
int3
push
xchg
cli
cmp
fdivs
sti
and
sub
shr
pop
xchg
sbb
pop
in
jo
mov
and
pop
xchg
aaa
fstpl
xchg
shrb
movsl
jle
inc
stc
clc
jge
inc
loopne
cmpsb
cmp
mov
adc
fldenv
mov
ror
int3
popf
pop
cmp
pop
mov
xorb
fucom
sbb
sti
popf
add
fs
call
test
minps
mov
scas
repnz
les
mov
add
add
out
fisttpll
mov
lock
add
testb
add
addb
jns
mov
iret
mov
mov
jnp
inc
dec
cmp
cmp
xchg
sti
fdivl
pop
popa
jnp
loop
add
push
or
sub
dec
data16
aaa
test
jae
push
push
ljmp
and
andb
popf
xor
jp
inc
xor
mov
ss
jne
into
jno
sbbl
out
aad
jg
mov
mov
cld
xor
or
mov
xor
sti
push
mov
push
cmpl
xor
mov
and
rcr
jl
sbb
out
lcall
mov
gs
rolb
mov
jae
push
push
addb
insb
xchg
dec
pop
dec
fcmovb
push
pop
ljmp
or
inc
sbb
jmp
out
inc
jle
hlt
and
add
fildll
mov
arpl
out
add
testb
add
rorl
jns
scas
xor
mov
leave
sub
sbb
lret
adc
das
cmc
rorl
push
cmp
fimull
sub
fmul
or
daa
sub
jnp
ret
imul
cmpsb
xchg
ret
push
out
cwtl
sbb
adc
and
jns
in
dec
lret
jo
add
in
insb
cmp
inc
cmp
loope
fwait
cmp
push
pop
in
out
mov
test
mov
loopne
pusha
pop
and
mov
jge
or
lock
inc
dec
push
adc
xlat
push
xchg
testb
std
fdivrs
aas
mov
mov
mov
gs
pop
pop
sbb
lcall
jno
jb
xchg
inc
mov
inc
imul
add
jmp
out
aas
mov
dec
enter
add
add
add
add
aaa
inc
stos
mov
adc
cli
les
outsl
mov
addr16
jo
add
mov
cmp
fsubr
dec
xchg
xchg
addr16
shrl
in
insl
mov
mov
xor
scas
in
lret
out
pop
scas
xorl
jb
daa
or
cmp
ret
jnp
jle
mov
cmp
movsl
push
xchg
or
ret
popf
push
mov
jbe
dec
int3
dec
arpl
inc
lcall
cmp
cwtl
stc
daa
and
mov
test
das
inc
mov
lahf
dec
in
in
lcall
adc
movsl
inc
and
mov
lock
adc
fidivrs
pushf
push
mov
bound
push
adcb
sub
shl
imul
mov
test
add
fists
cmp
imul
out
mov
arpl
xor
add
testb
add
mov
jmp
sbb
popf
dec
cltd
mulb
xor
pop
rcll
fimuls
mov
xchg
lcall
push
cltd
pop
lret
push
lcall
adc
inc
out
arpl
cltd
jb
mov
mov
insl
jg
and
mov
divl
out
add
sbb
fmuls
insb
jne
mov
xchg
xor
jno
lret
out
jp
nop
jle
call
dec
les
enter
add
out
push
cmp
sub
adc
push
sbb
adc
fsts
aaa
jecxz
rcll
fsubl
fyl2xp1
sbb
push
or
pusha
adc
sub
ja
mov
adc
notb
sbb
jnp
xchg
insl
inc
in
xor
sub
add
dec
xor
push
dec
shrb
or
mov
add
add
dec
stc
mov
clc
add
lock
testb
add
pop
xchg
xchg
rorb
movsl
iret
sub
test
out
fs
push
cltd
mov
lahf
cs
jno
repnz
or
dec
inc
shrl
rcrb
mov
inc
inc
loop
push
inc
and
sti
xor
cmpsb
mov
insb
imulb
mov
cmp
mov
popa
pop
mov
mov
push
cmp
inc
and
lret
into
jns
ds
in
pushf
std
adc
mov
add
fmul
inc
addr16
and
mov
addr16
mov
aam
xor
jbe
jb
jns
jb
mov
xchg
jb
or
std
rcrl
mov
in
das
loop
jae
test
sub
mull
mov
jo
or
neg
mov
inc
inc
fdivl
stos
xor
ficompl
inc
add
xchg
cmp
jle
jg
cld
jo
hlt
leave
cmp
shll
pop
add
testb
add
sub
mov
pop
sbb
pop
and
lret
push
bound
divb
movntps
inc
lods
pushf
mov
nop
addr16
lcall
cmpl
and
mov
xchg
icebp
inc
cmp
and
fisttps
add
aas
into
mov
or
filds
cmp
mov
sbb
out
cmpsl
add
outsb
adc
cmp
push
xchg
mov
sahf
hlt
data16
orb
push
popf
pop
pand
xor
arpl
jae
js
neg
and
mov
in
outsb
dec
fsubl
lods
dec
mov
pop
jnp
jmp
gs
sbb
outsl
js
mov
in
aam
leave
push
ss
mov
cwtl
int3
subb
stos
fdivrl
push
mov
fs
add
mov
xchg
mov
mov
enter
pop
add
testb
add
adc
add
psubq
aam
adc
insb
pop
inc
ss
stc
xor
adc
jl
jb
cs
jl
pusha
call
mov
fildll
aad
cmp
stc
push
mov
pop
jg
scas
ds
ds
push
loop
xchg
mov
sbb
jge
sbb
xchg
lahf
or
ficoms
mov
daa
xchg
pushf
sbb
loop
ret
jb
jno
add
sub
call
mov
les
mov
xor
imul
rep
xlat
pop
and
icebp
jb
jo
outsl
push
push
adc
jne
push
data16
in
cli
popf
jo
sarl
sub
cli
test
aaa
mov
dec
cmc
cmpsl
test
jle
adc
fisttpll
je
in
xorl
cmp
cmp
xor
stc
sbb
mov
add
inc
mov
push
push
jmp
sahf
fisubs
lcall
testb
add
into
repz
sbb
cmp
inc
jnp
insl
sbb
jb
and
inc
add
fwait
adc
mov
shrl
mov
loop
out
std
or
stc
sub
push
mov
outsb
xchg
pop
aam
outsl
test
dec
out
scas
cmpl
lea
faddl
inc
inc
arpl
pushf
and
icebp
push
pop
test
adc
jnp
jmp
add
push
std
dec
stc
xor
lock
cmp
lock
jecxz
mov
imul
cld
inc
call
in
sub
sub
push
bound
js
push
subl
pop
jne
mov
jne
aam
add
mov
jae
nop
adc
push
add
jbe
aas
push
js
mov
fisubl
mov
pop
or
addr16
push
xchg
shl
xor
adc
inc
call
testb
fsubrl
mov
out
cmp
dec
subps
adc
add
add
sbb
mov
fsubl
push
jge
xorb
insl
add
stc
jb
fucomip
jmp
stc
push
push
xchg
mov
jns
mov
push
sub
add
sbbl
imul
mov
push
add
psrlw
lret
lcall
cmp
dec
xchg
mov
pop
cwtl
scas
mov
out
sbb
mov
mov
push
sbb
xchg
rcrl
outsb
add
jg
mov
rcr
test
sbb
cmc
add
gs
cmp
mov
sub
cmpsb
in
push
fistl
cli
icebp
mov
cltd
pusha
ljmp
cmpsl
add
mov
push
daa
test
cmp
leave
das
and
mov
sub
pop
sar
ljmp
mov
call
cmp
nop
lret
in
mov
and
stc
sti
add
or
push
shll
out
xchg
inc
push
fs
pop
add
testb
add
daa
subb
jmp
mov
mov
mov
rorl
jbe,pt
and
sbb
or
in
push
inc
flds
cld
or
and
mov
les
xchg
mov
gs
gs
dec
mov
gs
or
mov
jge
aas
inc
cmpsb
mov
mov
sbb
std
xchg
xchg
enter
shl
hlt
enter
mov
jnp
loope
mov
xor
sub
inc
jle
mov
cmp
jl
cmpsl
outsl
lods
and
ffreep
or
push
xor
pop
and
daa
dec
daa
lods
out
fstpt
sti
or
mov
in
test
cmp
aaa
sbb
rclb
inc
add
shrb
xor
adc
push
adc
dec
pop
xchg
add
stos
push
lcall
inc
and
pcmpeqd
inc
mov
add
add
add
in
mov
mov
inc
loope
pop
mov
out
aas
xchg
stos
subb
fcoml
dec
and
insb
sarw
jle
shll
fidivrl
dec
imul
xchg
pop
lds
es
pop
cmp
arpl
aaa
pop
fsubs
lock
jp
or
pusha
add
in
in
mov
sub
std
mov
xor
fiaddl
shlb
icebp
jle
inc
imul
into
or
ret
mov
xchg
lods
xor
je
push
xchg
xor
aaa
es
inc
mov
push
pop
stos
mov
adc
hlt
mov
loope
jmp
sbb
mov
jae
outsb
fdivrp
push
pop
push
jge
inc
int
sub
sti
addr16
into
mov
add
jbe
idiv
imul
dec
movb
add
jae
out
xchg
test
mov
icebp
and
fwait
paddusb
outsb
push
flds
xor
sbb
sbb
lcall
outsl
ds
pop
insb
es
xchg
loop
fldl
arpl
out
repnz
cli
rcrl
fisubrs
or
ror
jbe
lods
mov
push
dec
sub
jmp
loope
and
jecxz
cmpsb
add
mov
jne
test
xor
dec
lods
jecxz
push
rclb
pop
push
imul
fbstp
hlt
xchg
aaa
jmp
xchg
fwait
test
add
jg
stos
cmp
push
out
fisubrs
out
mov
addr16
or
imul
out
xor
shll
aas
lock
pop
pop
dec
push
xor
cmp
out
add
jae
fwait
cmp
dec
data16
and
xchg
js
add
testb
add
outsb
mov
sub
fwait
in
xchg
or
mull
mov
cli
jae
inc
stos
or
xlat
jns
mov
mov
in
pushf
into
lds
fldl
and
bound
mov
inc
dec
test
repnz
aam
out
xchg
jbe
in
mov
test
mov
pop
es
data16
hlt
jecxz
jno
cmp
sar
pop
push
enter
lods
mov
xlat
inc
stos
insl
jae
cmp
lcall
pushf
cmp
sbb
in
fldl
and
mov
sub
sbb
lret
loope
ret
fsubrl
push
mov
cmpsl
rolb
in
inc
or
or
sbb
dec
push
ja
les
and
div
add
jmp
sbb
mov
pop
in
adc
add
inc
push
clc
mov
or
cmpsl
jmp
outsb
arpl
add
add
add
bound
pmaxsw
bnd
push
jbe
mov
icebp
jge
insb
insl
adc
xorl
je
jns
xor
addr16
stc
dec
mov
jg
push
shl
andb
xor
xor
sbbl
stos
push
pop
int3
rolb
jo
mov
mov
mov
iret
push
cld
push
rcrb
or
outsb
scas
xchg
les
aaa
call
enter
test
popa
push
scas
jbe
into
dec
cmc
push
or
cmpsb
xchg
leave
add
in
scas
int3
pop
jnp
test
jecxz
lea
jns
scas
enter
mov
sbb
push
call
das
cltd
xchg
push
mov
jp
test
mov
dec
jne
push
xor
ljmp
fwait
add
adc
cmp
dec
adc
je
sbb
in
cmpsl
or
jae
mov
loopne
push
adc
fstpl
adc
mov
in
add
shr
mov
nop
shrl
add
testb
add
cltd
or
out
test
iret
lods
jp
xor
sbb
int3
adcl
cmp
cmp
ja
mov
hlt
xlat
mov
jbe
dec
loop
int3
out
adc
mov
fisttps
in
mov
std
sbb
mov
shrl
push
cmpsl
pop
mov
xchg
mov
sbb
lret
mov
stos
stos
mov
insb
jge
shll
mov
cmp
arpl
fistps
rcrl
loop
jle
sbb
fcomip
mov
push
xchg
jg
test
sbbl
je
outsb
mov
sbb
pop
and
int
add
cmp
fisttpll
jo
fcoms
and
lahf
pop
ret
add
pop
cmp
sub
jl
sub
xlat
stos
arpl
adc
and
add
mov
int3
rorb
daa
cwtl
call
add
add
add
mov
push
xchg
pop
lea
mov
int
mov
mov
sbb
pop
loope
rcrb
mov
and
dec
out
das
mov
pop
fabs
lret
add
loopne
dec
insb
lret
shrl
stc
xchg
sub
mov
pop
cmp
xor
in
pop
test
shll
shl
loope
mov
pop
dec
push
inc
xchg
sub
mov
or
ljmp
push
or
aam
bound
mov
call
stos
and
sarb
mov
xchg
xchg
jne
aas
arpl
pop
inc
fsubp
aas
movsb
sub
into
xor
push
push
xlat
movsb
cmc
subl
xchg
popa
adc
jne
in
insl
outsb
lock
xchg
ds
pusha
push
ss
or
lock
add
mov
and
das
lret
cmp
add
testb
add
jno
sub
lcall
nop
inc
or
and
sbb
jb
movsb
rolb
push
sub
pop
pushf
jp
imul
insl
lock
or
ljmp
imul
or
xor
jecxz
inc
pop
pop
in
xor
cwtl
dec
mov
int
cld
dec
push
ret
cltd
and
fcomp
pop
lods
cmc
rcrb
outsl
js
out
adc
adc
inc
adc
or
leave
into
push
pop
test
loop
mov
xchg
es
daa
sbb
adc
dec
pop
jb
loopne
ljmp
add
dec
xchg
in
repz
add
popf
arpl
leave
popa
sub
adc
das
outsb
movsl
out
lock
cli
data16
mov
mov
iret
pop
sub
sub
inc
push
add
fsubl
mov
lods
push
adc
add
testb
add
sbb
paddusb
ljmp
stc
dec
push
pop
inc
xchg
pop
mov
sub
jne
ljmp
xchg
xor
pusha
clc
cli
hlt
lret
push
add
sbb
sti
or
sbb
sbb
jns
ljmp
mov
cltd
outsb
les
jns
dec
rolb
dec
call
dec
jle
scas
lahf
lcall
lcall
pushl
fwait
stos
mov
repnz
mov
jns
pop
cmpsl
xchg
inc
mov
add
dec
aaa
rolb
add
dec
popa
xor
loop
cmpsb
fcmovb
mov
xchg
jno
mov
dec
test
cwtl
jns
ds
rcrl
xor
jns
into
mov
jae
les
icebp
shrl
xchg
mov
cmpsb
and
jae
out
jecxz
imul
xor
jge
mov
jle
and
add
fbstp
scas
adc
lahf
mov
and
cmp
add
testb
add
inc
gs
dec
jae
push
mov
mov
add
aas
in
inc
in
xchg
xor
pop
xchg
cltd
bound
lods
roll
lret
add
push
mov
mov
rorb
inc
movsl
pop
dec
call
push
xchg
std
gs
push
mov
xchg
stc
xor
mov
cld
lods
pop
mov
pop
adc
xor
cltd
adc
dec
lods
ljmp
mov
mov
loopne
mov
jmp
or
mov
frstor
and
fists
ljmp
dec
sub
loopne
js
in
xor
sbb
jmp
xor
jl
iret
dec
xor
cmp
das
pop
div
test
test
pop
mov
push
out
bound
sub
arpl
inc
jo
call
add
mov
mov
sub
ret
xor
add
add
add
scas
mov
leave
sahf
mov
cmp
add
outsb
mov
stc
inc
dec
int
mov
sbb
sub
and
adc
hlt
ret
dec
stos
mov
push
mov
lods
adc
add
dec
imul
stc
mov
scas
cmp
xchg
cmp
lret
cli
xchg
pop
push
dec
lds
fcomps
or
lods
mov
loop,pn
xor
sub
or
mov
ret
xchg
push
testb
pop
pop
pop
pop
ljmp
and
fidivl
cwtl
mov
xor
ja
push
repnz
sbb
pop
cmpsl
push
hlt
cmp
mov
cs
ss
and
lahf
mov
js
enter
xchg
cmc
jno
and
rorl
mov
fdivrs
dec
pushf
cmp
add
push
into
push
cmp
sub
rol
stc
ljmp
add
fsubrl
cld
bound
cwtl
cmp
leave
pop
xor
in
pushf
pop
xchg
in
sti
cld
cmpsb
daa
jb
js
das
rcr
adc
popa
lcall
inc
inc
mov
xchg
mov
insb
out
in
sub
mov
push
nop
rcrb
je
inc
std
adc
ja
adc
push
in
xor
lea
push
xchg
and
mov
jns
xor
adc
or
xchg
outsl
sub
cmpsl
or
xchg
jb
pop
sbb
sarb
cmpsb
sbb
divb
rorb
xorl
sub
push
dec
dec
mov
or
in
in
inc
dec
movsl
xor
push
dec
lea
jl
inc
inc
sub
push
add
aas
call
push
hlt
xor
xor
lods
pop
sub
dec
lds
dec
lods
jmp
loope
mov
adc
lods
not
mov
xchg
add
and
mov
fisttps
jo
cmp
add
add
add
and
repz
fldt
loope
icebp
mov
lea
jae
out
sub
jle
mov
mov
insl
icebp
add
mov
dec
mov
dec
and
popa
dec
mov
scas
jg
pop
in
xchg
inc
mov
xchg
xor
outsl
enter
adc
mov
imul
push
cmp
sub
mov
cltd
call
cmp
mov
aad
fsubr
ja
test
push
out
pop
lds
leave
ja
dec
and
inc
aad
and
test
sbb
add
sbb
fisttpll
xor
jno
sti
xor
pop
and
pop
popa
pop
sbb
add
test
fnstsw
add
cmpsb
pop
cmp
lods
mov
stos
jmp
mov
add
lahf
pop
bnd
mov
adc
add
testb
add
dec
pop
loop
cmp
loope
xchg
adc
sbb
adc
notb
mov
nop
out
and
cld
dec
adc
orb
mov
or
add
shl
lds
leave
rcrb
int3
fwait
cmp
jbe
xor
mov
mov
gs
mov
ljmp
mov
lock
xor
scas
lds
stos
mov
cmc
inc
mov
pop
stc
pop
repnz
rorl
jp
imul
sbb
and
push
lret
sti
arpl
loop
fcomip
push
int
xchg
add
es
daa
xor
cmpsb
inc
nop
dec
gs
mov
pop
dec
scas
mov
xchg
push
cli
addr16
leave
jbe
or
fsubp
rorb
adc
cmc
inc
jb
adc
mov
or
mov
stos
aaa
fdivrp
or
int
mov
aam
out
aaa
push
sub
ret
add
sahf
pop
testl
mov
add
add
add
mov
push
std
add
lea
cmp
cmc
mov
fdiv
push
test
imul
inc
dec
xor
sbb
adc
pop
cmp
out
lods
repnz
in
bound
push
cwtl
adc
cmp
push
add
add
and
mov
stos
fimuls
js
inc
sub
fbstp
nop
mov
push
jp
mov
mov
jbe
lahf
and
cwtl
cmpsl
lea
pusha
mov
jb
lds
mov
push
pop
repnz
int
sub
stos
je
sub
xor
das
sub
mov
sub
mov
sub
int3
lods
or
xchg
adc
clc
in
sub
inc
xchg
sbb
sbb
pushf
mov
scas
adc
cmp
sbb
jle
subb
add
pop
mov
movsb
inc
gs
sub
inc
add
add
add
add
jne
dec
ja
es
jne
outsl
fs
jbe
or
adcb
mov
dec
js
jb
dec
sub
add
xorb
rorb
insb
or
out
rcl
popa
xor
fstpl
mov
jle
testl
repnz
fstpl
jae
xchg
out
iret
add
xor
cmc
fs
push
shrl
sub
cmp
sahf
sub
arpl
add
xor
dec
or
cmp
cli
inc
sbb
inc
sub
mov
adc
orb
pop
and
outsb
inc
and
xchg
aaa
mov
imul
dec
mov
inc
addr16
mov
pop
pop
pop
ret
xor
mov
inc
pop
movsb
gs
push
sbb
subl
std
push
out
packuswb
or
sub
fdivl
std
cwtl
cltd
cli
or
jne
sldt
repnz
movsb
jle
mov
or
add
add
add
xor
jge
xchg
testl
in
pusha
shll
push
cltd
push
sbb
fildll
pop
les
loopne
cli
test
in
pop
outsw
add
fstps
adc
pusha
dec
jecxz
jnp
leave
rcll
mov
lods
icebp
call
lcall
repnz
jge
sub
lea
jnp
xor
test
xchg
gs
cltd
mov
cmpsb
cli
ljmp
xor
lahf
mov
fdivs
icebp
icebp
sti
cmpsb
and
lock
and
xchg
jno
mov
inc
je
dec
mov
inc
cltd
dec
mov
std
lret
ss
push
ljmp
loope
dec
ljmp
xchg
ret
fimuls
jb
jmp
or
jmp
adc
or
jo
pop
je,pt
fs
jnp
test
fwait
sbb
lds
call
mov
add
add
jmp
sub
adc
cmp
outsl
add
testb
add
pop
xchg
mov
xor
cmc
xor
pop
das
out
shll
xor
cmpsl
sub
mov
js
aas
insb
in
xchg
clc
outsl
je
mov
movsb
mov
frstor
pop
push
add
push
add
inc
xchg
pusha
mov
jg
add
add
rcrl
sahf
stos
cltd
out
push
and
leave
iret
xchg
or
inc
xchg
loope
xchg
dec
loope
loop
fdivl
imul
and
xchg
lret
dec
repnz
icebp
outsl
sbb
and
xchg
sub
int3
lock
icebp
js
xor
mov
pushf
cs
hlt
ret
es
ds
dec
mov
sub
or
movsb
inc
stos
push
imul
sub
xlat
inc
mov
dec
nop
adc
rcr
gs
inc
cmp
xchg
leave
leave
mov
add
shll
fnstenv
jae
sub
loop
add
testb
add
es
sti
xchg
xchg
or
shrb
inc
hlt
sbb
adc
mov
dec
mov
push
dec
clc
push
out
or
mov
xchg
mov
ret
adc
cmp
loope
xchg
scas
hlt
movsl
ja
pusha
add
outsb
fidivs
cmc
fucom
jmp
vorps
or
dec
push
rcrb
pop
push
lock
shrl
and
inc
jecxz
push
int
or
cld
aas
xchg
pushf
mov
push
mov
mov
je
jb
insb
out
xchg
stos
jecxz
gs
push
mov
jns
aaa
mov
imul
xlat
dec
ret
fcoms
adc
addr16
pusha
ljmp
cmc
movsl
jns
xchg
mov
movl
mov
cltd
jne
xchg
mov
dec
jg
pop
sub
or
shlb
imull
sbb
mov
mov
stos
mov
cld
je
jbe
jmp
lea
xchg
mov
xchg
add
jno
add
add
add
adc
mov
pushl
sarl
lea
shrl
sbb
iret
fidivrs
jmp
lcall
push
pop
or
pop
or
jmp
fidivrs
dec
lcall
mov
lret
nop
mov
mov
outsl
xchg
mov
lods
adc
push
cmp
ret
cmp
mov
test
fidivl
daa
aam
movsl
divl
dec
jo
lcall
add
iret
fs
mov
xchg
and
outsl
das
icebp
fucomip
xor
cli
xor
xchg
sbb
jmp
fidivrl
psubq
dec
dec
sub
cmc
push
add
in
out
mov
test
add
stos
inc
xchg
jo
shl
xchg
scas
fsubr
negb
add
push
cltd
jmp
fcmovnbe
cld
xor
cwtd
inc
enter
add
add
add
mov
dec
stos
mull
jmp
pop
and
inc
pop
icebp
lahf
inc
xchg
or
imul
addb
in
add
fisttpll
adc
jmp
xor
outsl
nop
mov
pop
cmp
mov
enter
mov
fwait
inc
jl
dec
cmp
arpl
dec
lds
pop
lods
mov
nop
pop
aam
repnz
inc
lea
add
testl
jno
xor
faddl
jne
mov
and
adc
nop
into
cmp
inc
dec
xor
sub
outsb
das
mov
andl
cwtl
outsl
imul
rcl
pop
std
mov
mov
outsb
or
cmp
mov
add
rclb
push
pop
mov
jb
cld
aam
push
imul
fmull
cmp
or
pop
push
ret
xor
add
mov
mov
push
jg
pop
jne
mov
test
les
add
add
add
mov
aaa
cmp
and
dec
jns
andb
sub
bound
imul
xor
push
lea
dec
sub
pop
mov
jl
sub
imul
dec
adc
data16
mov
lret
mov
cld
xor
daa
push
adc
test
pop
call
pop
insl
dec
inc
aad
mov
cmpsb
dec
fisubl
and
lret
repz
dec
inc
add
jo
imul
divl
test
insb
xchg
xor
push
icebp
popa
hlt
pop
push
stos
fidivs
jmp
inc
lds
push
vandnps
ret
pop
cwtl
cwtl
jbe
ljmp
rcrb
js
dec
int3
mov
adc
pusha
in
movsl
jne,pn
pmulhuw
icebp
jle
mov
add
mov
fucomip
addr16
in
fistpll
add
add
mov
mov
pop
call
sahf
sub
scas
sbb
popa
bound
xchg
mov
jns
mov
or
rcrl
fsin
sub
ss
cltd
movsl
subb
cmp
daa
cld
lahf
lds
js
inc
mov
ret
sarb
outsb
xchg
fwait
ret
xor
jns
pop
and
out
aas
test
and
iret
out
divl
adc
in
sub
sub
pusha
int
shlb
pushf
out
ss
jno
push
sub
adc
pop
push
bound
push
inc
pop
push
ja
xorb
jecxz
js
rclb
bound
dec
cmp
ret
mov
sbb
ret
and
es
mov
mov
sbb
push
repz
jae
mov
popf
stc
and
hlt
cmp
add
add
dec
out
iret
jmp
cmpsb
add
mov
add
testb
add
fildl
adc
push
cmpsb
pop
popa
cmp
push
mov
push
cld
stos
pop
shrl
mov
les
flds
loope
fdivl
mov
rorl
mov
push
pop
daa
loopne
sub
lahf
mov
mov
aam
sbb
mov
adc
push
das
scas
jg
xor
jbe
das
xchg
xchg
or
and
xor
mov
push
mov
cmp
jne
repnz
inc
sbb
aad
out
ljmp
fistl
aam
cld
cltd
test
and
inc
frstor
fs
mov
xchg
sub
dec
xor
sbb
and
and
icebp
frstor
and
ja
out
jp
repz
jmp
pop
adc
scas
jecxz
sub
popf
dec
daa
in
mov
jnp
xchg
add
cmpsb
push
jnp
std
cmpsb
pop
lods
jne
xchg
jae
imul
testb
add
shrb
add
mov
sbb
test
mov
ret
negl
addr16
mov
push
dec
sub
cmp
jmp
cmp
jp
fisttpl
lods
fwait
sub
inc
mov
call
mov
xrelease
sub
and
xchg
inc
cwtl
pop
stos
mov
aas
mov
lret
out
cmp
cmp
fs
mov
jge
cltd
cmp
dec
pop
cmp
cltd
leave
in
call
pop
imul
lods
xchg
mov
or
xchg
popf
and
jo
aas
mov
clc
xchg
cmp
int
fildll
adc
loopne,pn
outsb
pop
mov
fucomi
pop
shrb
push
jge
cltd
out
and
sbb
jmp
sub
aam
jo
inc
add
in
lods
imul
neg
std
stc
idivl
test
add
cmp
add
push
inc
jae
mov
ds
jns
sti
data16
xor
xchg
or
ss
mov
xchg
fs
push
push
sub
sbb
sub
popf
outsb
xor
jae
sbb
adc
int3
cmp
loope
dec
out
aas
or
mov
insb
shlb
jne
cmpsb
sbb
mov
xchg
jge
mov
jmp
mov
mov
call
sub
adcl
das
shlb
shll
sbb
add
mov
or
sbb
nop
bound
jle
jo
adcb
push
push
mov
dec
ds
push
mov
cs
pushf
jno
roll
fisttps
adc
or
adc
subl
jbe
or
dec
jb
xchg
es
int3
ret
pop
adc
sti
ljmp
push
subb
in
push
mov
adc
add
testb
add
jae
adc
icebp
movsl
mov
scas
lock
rcrb
inc
pushf
loopne
push
xchg
imul
and
sbb
xchg
xor
jno
adc
push
insb
add
push
push
insb
push
inc
sti
dec
mov
xchg
cwtl
sbb
pop
shlb
loop
sub
xor
adc
test
cmp
xchg
pop
ja
jns
out
aad
adc
add
loope
aas
loope
rcr
loop
int3
aas
jne
out
lea
sub
push
sub
and
dec
loop
lret
xor
mov
jb
add
mov
push
bound
add
fsub
adc
js
test
push
xlat
mov
sub
pop
test
and
mov
jno
fstpt
dec
rorl
inc
mov
mulb
cmp
sbb
mov
pop
sub
mov
add
lcall
out
dec
jg
aad
aam
mov
add
add
add
aam
cmp
sub
cld
cmc
and
mov
pop
inc
lret
push
push
xlat
in
ds
fildl
gs
inc
push
add
or
jo
pop
pop
leave
cmp
push
mov
fcomps
les
int
loopne
and
icebp
mov
push
or
mov
popf
adc
add
ret
pop
sub
push
mov
mov
stc
mov
pop
mov
fdivrl
or
mov
cltd
test
fsubs
ljmp
jo
repz
cld
or
mov
aas
popf
xchg
movsl
xchg
sbb
in
dec
mov
pop
jecxz
pop
jmp
sub
xor
lret
pusha
mov
jo
insb
stos
dec
sub
pop
jae
leave
adcl
xlat
add
daa
sub
ja
mov
paddq
jp
add
add
add
mov
push
adc
push
sub
or
clc
cli
cmp
xorb
scas
push
stos
cltd
jae
aaa
arpl
add
push
ficoml
ljmp
ret
int
push
in
gs
gs
push
pop
in
inc
in
lock
and
mov
fildl
sti
test
test
gs
andl
push
mov
cld
imul
fstps
int
mov
stos
cmp
adc
push
sti
fwait
mov
and
sar
daa
or
xor
clc
adc
add
loop
or
ja
mov
in
jg
xor
mov
xchg
push
xchg
push
fnsave
pusha
push
imul
in
bound
sbb
inc
popa
xchg
or
adc
loope
icebp
loop
fdivrl
ret
mov
cmp
add
cmp
jnp
jge
xchg
paddb
jnp
add
add
add
sub
movsb
ja
mov
sub
addr16
mov
mov
ds
fistpl
xor
bound
out
fmuls
jns
inc
or
loopne
adc
xor
pop
aas
cmpsl
add
pop
pop
push
jmp
add
jecxz
fsin
mov
imul
shrb
push
aaa
sbb
or
pusha
push
sbb
aas
testb
push
mov
sub
arpl
push
pop
push
xchg
xor
pop
jo
ljmp
jg
cmp
shll
xor
xor
movsl
push
pop
pop
inc
xor
aad
adc
andb
jno
out
dec
arpl
sahf
dec
jl
mov
cli
jmp
cmpsl
mov
ljmp
mov
fwait
cwtl
outsl
sbb
popf
ret
rcrl
shlb
xchg
add
xchg
push
mov
cli
xchg
jle
mov
mov
sbb
xlat
push
add
testb
add
jmp
push
lods
dec
pop
imull
push
push
std
std
xor
jg
rolb
or
mov
xor
push
sub
in
sub
cwtl
inc
aad
repnz
jmp
xor
jne
adc
and
inc
lds
push
in
dec
sahf
mov
nop
adc
cmp
and
cmp
sahf
jnp
dec
call
daa
mov
mov
cmpsb
xchg
stos
jl
cld
adc
mov
lahf
repz
fs
aas
lds
lds
mov
popa
shll
stc
not
xor
mull
xor
or
jo
or
sbb
inc
push
pusha
pop
push
xchg
int3
aas
add
loopne
test
imul
push
les
mov
int3
adc
inc
aaa
dec
fwait
jnp
aad
gs
into
add
cmp
mov
testb
add
out
cmp
xchg
push
xor
lret
sbb
test
repz
out
jge
loop
int
push
push
sbb
data16
in
movsb
or
push
or
xor
jecxz
iret
les
daa
popa
fcmovnbe
out
jnp
out
pop
sti
push
dec
arpl
sahf
imul
gs
test
jecxz
mov
mov
stos
ret
cli
inc
imul
jno
sub
test
std
in
mov
mov
inc
cmp
sbb
ret
push
or
addb
jne
mov
hlt
push
popf
clc
pop
xor
out
adc
test
mov
dec
sub
mov
sub
dec
adc
cmp
loop
sbb
add
and
and
add
add
std
mov
enter
lock
jle
add
add
add
ret
sahf
gs
dec
or
push
jcxz
xor
fsub
sub
ret
inc
jb
loopne
push
aas
pminub
in
rcrb
je
add
lcall
imul
jmp
ja
jl
jl
mov
daa
sub
jl
test
gs
les
nop
xchg
ss
lahf
jmp
out
ds
jnp
in
or
pop
pop
ljmp
ret
push
fisttpl
xchg
push
insl
ret
repnz
xor
sbbb
lock
fbld
popf
add
mov
push
daa
or
xor
stc
sbb
lret
jb
call
sahf
lods
fxch
xchg
cmp
add
mov
flds
xor
adc
or
jns
cmp
jne
jne
loopne
xchg
jnp
add
adcl
xchg
ffreep
dec
imul
fadd
test
testb
add
jp
jo
stos
fidivrl
and
outsl
push
mov
inc
rorb
shlb
aam
jmp
into
fwait
add
popf
jb
jbe
and
inc
ret
es
inc
ljmp
mov
xchg
nop
les
scas
insl
sbb
mov
cmp
das
dec
add
pop
loop
pop
subb
or
bound
ret
mov
jmp
fwait
out
add
dec
shlb
out
shrb
push
fwait
sbb
daa
fiaddl
push
repnz
clc
das
and
into
xchg
pop
pop
mov
adc
gs
inc
bound
mov
outsb
iret
aaa
out
mov
jecxz
push
mov
std
repz
movl
sub
or
call
nop
fwait
and
xor
call
cltd
inc
test
add
inc
in
mov
mov
out
in
pop
test
in
lods
inc
addb
testb
add
push
xor
pop
outsb
insb
lret
push
outsl
js
cmpsl
mov
cmp
and
mov
sub
int
roll
lcall
dec
pop
aaa
imul
mov
jo
test
ss
shll
scas
jns
addb
xchg
jecxz
inc
jbe
call
iret
push
out
mov
repz
stos
sub
jbe
xchg
cmp
or
pop
stc
mov
sub
js
jecxz
xor
push
pop
repz
cmpl
or
shlb
xlat
dec
mov
inc
cmc
or
aas
aaa
das
fld
jb
xchg
pusha
lahf
jno
dec
add
pusha
cmp
aas
fmull
inc
ja
dec
subl
cmp
shl
fists
fmuls
xchg
mov
cmp
cwtl
sarl
cmp
jne
mov
add
divl
bound
daa
xchg
cmp
add
ss
mov
mov
cwtl
insb
sbbl
cs
adc
jbe
ljmp
xor
jge
jecxz
stos
mov
cmpsb
adc
leave
mov
mov
mov
das
aas
mov
xlat
cmovnp
mov
out
pop
pop
clc
pop
jns
gs
movsb
fstpl
inc
sbb
fiaddl
pop
inc
gs
dec
inc
stos
sub
aad
scas
idivb
push
dec
xor
or
and
pop
mov
dec
jne
pushf
push
outsb
mov
dec
fldenv
ja
inc
fucomp
shll
stos
adc
pop
fidivrs
sbb
outsb
test
or
add
ss
shrb
outsl
adc
cmpsl
pop
inc
pop
out
into
stc
add
sbb
dec
mov
in
in
outsb
lods
ficoml
jnp
push
lahf
push
jp
fbld
xchg
lock
clc
fisubs
mov
push
mov
adc
addb
testb
add
les
inc
inc
loopne
cmp
mulb
bound
insb
cmp
cli
repz
call
cmp
fnstenv
es
in
cli
repnz
in
lret
pop
cltd
hlt
and
mov
push
mov
xor
push
sbb
mov
or
adc
dec
xchg
adc
add
sarl
dec
pop
popf
pop
cmc
ficompl
outsl
mov
lcall
push
or
push
rcr
mov
in
cmp
sahf
push
cmp
pxor
adc
push
lds
pop
push
mov
sub
sbb
xor
imul
movsl
jge
mov
add
add
outsl
popa
in
pop
xchg
mov
pop
add
cmp
xchg
in
ljmp
jno
push
in
and
getsec
jp
mov
js
out
shl
ret
mov
or
ret
dec
test
subb
add
shlb
mov
test
pop
pop
and
add
testb
add
xor
icebp
leave
ret
xchg
call
cmp
inc
and
ficomps
dec
mov
out
cltd
in
cmpsb
xchg
insb
dec
dec
mov
mov
in
adc
ret
cmp
mov
mov
loope
std
inc
jle
xchg
neg
les
pop
mov
inc
movntq
out
in
add
test
lods
sub
or
inc
pop
sbb
test
rolb
rol
push
xchg
jns
out
ljmp
xorl
xor
lret
cmp
xor
insb
lahf
divl
stc
mov
ret
fcmovb
fdiv
xor
les
xchg
jmp
jno
movsl
test
dec
rorb
mov
and
jge
sbb
xchg
cmp
push
cmp
pop
jecxz
les
pop
dec
icebp
leave
push
nop
rorb
test
mov
mov
popl
in
inc
nop
jne
mov
adc
add
testl
push
sbb
add
add
push
lods
out
xor
outsl
mov
xchg
xchg
cmpsb
popf
ljmp
xor
mov
lods
xchg
in
andl
sbb
je
out
cmp
cltd
cld
add
loopne
clc
push
pop
sub
mov
and
push
adcb
cmp
jmp
shlb
test
sahf
out
and
mov
pop
imul
cmc
pop
mov
ret
dec
jno
adc
dec
push
inc
push
adc
fdivrl
testb
jnp
xchg
mov
popa
dec
out
cld
xchg
pop
fbld
cmp
pushf
lahf
sbb
js
xor
and
push
outsl
inc
mov
in
lock
mov
push
sbb
andl
xchg
repz
lahf
push
mov
pushf
inc
mov
loope
mov
cmp
cli
out
sbb
add
add
jo
ja
std
stos
lods
and
fisttpll
into
out
adc
add
mov
mov
sub
jo
jge
sbb
insl
in
dec
mov
mov
test
mov
dec
loope
popa
lea
dec
daa
or
and
push
leave
sahf
fs
lahf
xor
hlt
mov
adc
mov
pop
xchg
hlt
inc
in
pop
or
aad
outsb
cs
cli
int
jl
jb
add
inc
lret
sub
out
push
cmpsb
xor
pop
je
sbb
pushf
fs
mov
inc
dec
mov
dec
mov
xor
sbb
mov
sub
sbb
sub
cmp
sub
inc
mov
push
sub
sub
dec
xor
ljmp
clc
adc
dec
jp
stc
mov
movsb
mov
and
inc
leave
or
xchg
mov
add
mov
cmpsb
arpl
je
xchg
push
xchg
add
add
add
sub
and
js
lods
aaa
cmp
ja
mov
aas
test
pop
pop
add
in
nop
xlat
les
loope
mov
lock
in
or
fidivrs
cmp
push
js
cmp
xor
dec
jg
or
adc
inc
adc
xor
es
stc
ss
sub
pop
xor
xchg
push
insb
xor
cmc
xchg
in
adc
jl
add
mov
mov
sahf
cs
mov
shrl
fists
cli
inc
das
jg
inc
fldl
xor
add
out
ja
cmp
das
jne
js
int
push
movsl
gs
sbb
out
addb
lods
push
sub
aas
jb
sbb
fists
jmp
inc
push
push
jb
sbb
data16
leave
outsl
inc
hlt
outsb
std
fcmovnb
adc
aam
imul
adcb
sbb
sti
add
xor
cli
mov
out
mov
cld
xchg
add
add
add
movsb
int
test
lret
aad
lods
insb
ret
jnp
in
add
dec
rcrb
xchg
jne
les
lea
jbe
sbb
inc
sub
xchg
push
enter
arpl
pop
lds
sahf
jo
pop
sahf
stos
repnz
jae
aas
iret
pop
addr16
cmp
push
dec
pop
push
sub
pop
mov
lret
mov
cld
hlt
call
lods
mov
mov
inc
inc
ss
mov
push
xor
stos
add
add
std
loop
imul
xlat
push
ljmp
pop
test
das
fsubrl
adc
rorl
test
mov
inc
inc
dec
in
sarb
cmp
stos
sub
xlat
dec
jae
jno
pop
aas
mov
cli
call
mov
xchg
repnz
pop
addr16
sbb
fistps
add
clc
jo
aad
mov
pop
scas
add
std
test
ljmp
fldenv
add
add
add
repnz
adc
push
sahf
fldl
sub
lea
popf
fldenv
and
pop
icebp
fisubrs
push
push
in
sbb
inc
gs
lcall
cmp
xor
mov
stc
cmpsb
adc
pop
int
out
lods
hlt
adcl
stos
xchg
lret
mov
negb
cli
nop
push
pop
lds
mov
dec
jne
fimull
push
jmp
lds
test
mov
mov
mov
mov
pop
inc
push
mov
hlt
and
iret
faddl
test
ds
jns
jl
add
mov
mov
test
jle
sub
jg
es
lret
mov
stos
push
inc
xchg
outsb
jecxz
out
shll
pop
adc
mov
enter
sub
dec
mov
jge
add
xchg
xchg
jns
incl
cld
sahf
call
add
add
adc
mov
inc
xchg
push
sar
mov
push
icebp
bound
in
push
imul
jae
sub
ljmp
fadd
popa
or
clc
loopne
or
test
jge
mov
mov
dec
jecxz
and
fcompl
shlb
xlat
leave
cmp
iret
insb
dec
lret
dec
sub
push
jmp
outsl
leave
dec
in
mov
and
xchg
mov
push
jle
jg
sub
cmpsl
adc
aam
cmp
dec
sti
dec
pushf
push
int3
push
mov
cmc
jmp
inc
aaa
movsb
mov
shrb
rcrb
das
cmp
sbb
cmc
test
repnz
lock
popa
pop
dec
scas
cli
xchg
outsb
push
add
inc
roll
shlb
out
ffreep
lods
pushf
add
mov
sahf
leave
push
push
and
cs
add
scas
lcall
xchg
dec
lea
fimuls
add
lea
xor
addb
loop
adc
rcrl
cmp
enter
or
lds
pop
mov
orb
cmp
scas
sbb
loopne
repnz
and
fsts
dec
inc
sti
pop
mov
stos
arpl
add
pop
push
repnz
mov
xchg
mov
xchg
xor
xor
std
cmp
mov
xchg
xor
and
jp
cwtl
fwait
mov
cltd
jb
push
rol
and
jne
pop
rorb
mov
add
push
mov
in
mov
inc
in
lock
fcompl
inc
add
sub
sub
into
xchg
mov
mov
ret
add
rol
stos
xchg
pop
pusha
push
repnz
cs
pop
into
xor
into
sbbb
nop
notb
add
jl
cs
idiv
fst
inc
sahf
pop
jo
add
add
add
add
test
pop
in
cmp
pop
sbb
sbbb
add
sbb
in
stc
pop
inc
or
cmp
xor
fsubrp
pop
sbb
sqrtps
mov
mov
call
cmp
cld
aas
mov
mov
sub
jg
or
fsubrl
enter
inc
test
xchg
repnz
add
add
mov
ljmp
pusha
fisubs
jg
jbe
leave
es
nop
sbb
xchg
sbb
mov
shl
inc
mov
scas
mov
mov
mov
cmp
leave
movsl
push
jns
fmull
sahf
inc
int3
and
mov
mov
aaa
test
pushf
jbe
in
inc
rcrl
jle
or
and
popa
push
xor
fisubrs
das
mov
add
call
and
push
lods
lcall
add
add
dec
cmp
sub
add
rclb
mov
orl
or
jle
lds
cmpsl
xchg
push
cmp
ja
sbb
clc
inc
mov
cmc
data16
sub
mov
mov
movsb
mov
dec
mov
in
mov
in
loope
xchg
mov
mov
jmp
inc
leave
shlb
adc
scas
mov
test
xchg
dec
or
imul
xchg
stc
mov
sbb
add
add
mov
dec
cmpsb
fwait
cltd
and
sub
sbbl
and
jl
clc
cs
fcompl
lcall
aaa
das
add
fldl
mov
xor
xchg
push
outsb
mov
dec
into
out
xor
lds
je
mov
add
and
mov
jge
std
sti
iret
and
repnz
add
add
add
xor
xor
cmp
cpuid
mov
inc
cmp
scas
ret
pop
mov
xchg
pop
mov
mov
int
adc
jl
mov
sub
sahf
push
fcomps
cs
push
in
jp
in
xchg
pop
jbe
push
dec
and
cwtl
loop
ret
pop
inc
inc
lock
jl
xchg
inc
sti
sbb
out
ret
xchg
mov
jp
outsb
mov
pop
ret
data16
aam
mov
jbe,pt
aam
xchg
mov
mov
sub
sub
push
movsl
cmp
dec
xor
clc
add
xor
sbb
stc
mov
leave
dec
fs
pushf
push
pop
pop
and
bound
xor
mov
add
xor
push
nop
shll
sub
push
lret
and
xchg
and
scas
mov
mov
shl
jmp
mov
add
add
outsl
xchg
inc
lahf
sti
hlt
out
cmp
loop
lods
cli
inc
mov
add
testb
add
ret
lcall
sahf
sbb
xor
mov
adc
aam
push
into
or
ret
push
dec
es
adc
pusha
stos
adc
ss
popf
mov
jno
xor
mov
jns
gs
sarb
mov
rcll
adc
sbbb
cwtl
ret
fs
cmpsb
cmp
mov
lods
out
push
inc
inc
int3
push
mov
into
add
inc
icebp
pop
stos
cmp
ret
fisubs
rcr
or
lods
aam
dec
bnd
idivl
out
sub
lret
cmp
int
dec
movsl
int3
sbb
dec
imul
stos
sti
jecxz
xor
add
clc
xlat
inc
shrb
adc
mov
sbb
cmc
adc
dec
out
int3
xlat
rcrb
cltd
dec
jnp
xlat
fstpl
lret
xor
or
mov
lahf
sub
jge
jl
imul
mov
mov
into
inc
cmp
lcall
add
push
cmp
mov
inc
or
inc
inc
sbb
lret
sub
xor
loopne
leave
aad
xchg
or
and
popf
js
jge
adc
je
aaa
stc
pop
mov
pop
push
cmp
jl
cwtl
mov
xor
and
push
xchg
inc
cmp
sbb
mov
xor
call
popa
mov
int
out
pxor
testb
leave
cs
inc
mov
scas
sbb
mov
mov
jo
cmpsb
dec
pop
xchg
int
dec
cs
xchg
test
sbb
inc
out
push
lds
ljmp
pusha
out
shlb
out
cs
scas
sub
mov
fstl
out
jno
jmp
mov
pop
stos
sti
sub
and
push
sarb
push
or
jp,pn
or
add
add
pop
test
ljmp
jp
cmp
sub
mov
add
add
hlt
dec
sahf
push
xchg
ljmp
loopne
arpl
cltd
push
pop
movsb
or
cld
outsb
add
push
jle
jae
mov
mov
fs
xchg
pop
jns
imul
mov
sub
mov
leave
xchg
scas
and
xor
push
add
xchg
or
or
call
and
in
jle
jl
fsubrp
xor
cmp
cltd
push
hlt
lock
icebp
cmp
jne
mov
xchg
or
add
mov
shll
xor
test
sub
into
dec
outsb
lds
fldt
mov
push
dec
aad
and
sub
xchg
int
sub
mov
sbb
sahf
push
jecxz
mov
sbb
aad
shlb
mov
sbb
jle
popf
xchg
int3
adc
aaa
adc
pop
lds
lods
pop
jo
mov
and
jo
add
imul
push
jnp
sbb
xchg
sub
outsl
xor
nop
add
testb
add
push
sub
jne
rcrl
stos
xor
or
push
push
add
inc
movb
das
xchg
xchg
pop
je
call
and
cmp
test
popf
pop
outsb
ret
mov
jp
jb
push
inc
ja
mov
enter
xor
cmp
xor
mov
push
dec
dec
mov
loopne
scas
sbb
sbb
cmpsb
fmuls
sbb
lds
scas
xchg
test
sbb
outsb
jge
sbb
mov
push
outsb
sbb
add
sub
cmp
push
push
outsl
sub
test
or
jnp
roll
aaa
mov
mov
addr16
push
inc
mov
incb
mov
and
arpl
pop
push
inc
mov
and
and
daa
mov
hlt
or
sarb
push
repnz
pop
adc
fcmovu
test
jns
add
aas
or
mov
mov
and
xchg
add
testb
add
pop
and
inc
sub
sti
cwtl
test
add
dec
lret
xchg
scas
jae
test
dec
adc
inc
jo
inc
mov
inc
sub
in
ficoms
test
mov
ret
push
repnz
dec
push
out
cmp
add
pop
sahf
in
xchg
pop
or
mov
cld
fwait
out
sub
adc
jno
mov
mov
and
lock
add
fisttps
and
test
outsl
iret
icebp
imul
cld
jg
insl
arpl
dec
inc
mov
sub
repz
scas
stos
clc
xorb
decb
mov
in
jmp
mov
sub
cmp
and
mov
or
pop
lock
fwait
stos
lahf
std
pop
jecxz
jno
jne
sbb
cmp
push
add
push
outsb
fdivrp
sub
lcall
add
testb
add
or
test
inc
mov
cmc
pop
cmp
push
shll
xor
aam
lock
cmpsb
inc
mov
lret
stc
movsb
or
out
aam
mov
stc
push
stc
jo
push
jno
jg
adc
add
adc
lret
sub
fwait
sbb
sbb
bnd
mov
pop
mov
ret
xchg
pop
and
xor
jle
jne
sbbb
pop
pop
lds
popa
scas
or
sahf
jge
in
dec
repz
in
xchg
addr16
jmp
dec
imulb
pushf
leave
lea
cmpl
xrelease
rcr
outsb
dec
std
adc
and
cli
loopne
lret
test
xchg
jo
dec
fisttpl
dec
fwait
mov
into
test
in
pushf
mov
test
push
sub
out
jmp
test
mov
loopne
out
mov
pop
ds
insb
push
sbb
add
cmp
mov
in
push
pop
ja
jp
add
testb
add
dec
sbb
mov
int3
je
aam
adc
imul
inc
scas
fsubrl
out
jge
pmullw
pop
pop
push
mov
sbb
add
xchg
clc
sbb
sbb
jl
ret
xchg
nop
xlat
stos
iret
pop
mov
cwtl
ror
jge
loopne
test
push
gs
fwait
stos
test
into
push
jno
and
mov
mov
test
or
mov
jecxz
outsl
test
inc
adc
testl
cltd
lea
adc
mov
adc
adc
sbb
dec
sub
or
push
cwtl
adc
imul
mov
loope
ss
mov
push
pop
negl
sbb
push
or
jl
adc
mov
mov
pop
outsl
sbb
sub
sahf
sub
not
cmc
pop
lds
in
leave
adc
and
sub
ds
fstl
repnz
add
dec
push
int
fstp
iret
push
lock
jmp
pushaw
fbstp
add
testb
add
add
mov
xor
pop
xchg
sub
sbb
popf
mov
divb
dec
hlt
dec
loope
xor
mov
ret
push
xchg
out
lcall
adc
mov
stos
ljmp
xchg
cltd
xchg
mov
dec
rclb
pop
sub
add
clc
js
inc
cli
xor
addb
sti
mov
ret
adc
sbb
jmp
sub
test
rol
cld
push
inc
cmpsw
jno
in
imul
sbbb
addr16
and
stc
dec
loop
lret
xchg
cwtl
jbe
sbb
inc
jecxz
cmc
or
lea
mov
mov
mov
mov
lea
jl
repz
adc
in
inc
xor
rolb
push
ss
xchg
lods
add
ficoms
lahf
and
scas
std
sub
pop
mov
xchg
add
testb
add
loop
adc
or
pop
shll
lahf
mov
repz
jae
in
outsl
mov
loop
loopne
cmp
and
or
mov
mov
enter
test
aam
adc
sub
in
xor
pop
cmp
std
push
fs
dec
dec
cs
cmp
fidivl
jg
repz
enter
mov
test
imul
sbb
enter
jae
add
jmp
xlat
shll
or
mov
stos
pusha
dec
cmp
pop
mov
xchg
iret
mov
test
daa
dec
mov
fst
jmp
sbb
mov
call
jmp
inc
sub
add
mov
outsb
jns
fldl
add
mov
push
cmp
add
testb
add
je
xchg
cmc
pop
lahf
roll
add
fistl
jnp
lahf
lret
in
mov
lahf
push
pop
mov
sub
or
push
sub
subb
inc
jo
pop
stos
and
imul
push
in
adc
cmp
pop
sub
push
clc
add
sti
and
and
movsl
adc
data16
mov
sbb
insl
inc
mov
test
cltd
inc
jno
js
xchg
fnstsw
add
test
jge
in
push
ror
cmp
repnz
mov
pop
cmpsl
xchg
aam
cmp
in
divl
testb
lahf
outsl
mov
loope
stos
leave
push
in
neg
leave
dec
jne
or
sub
shrb
mov
inc
jo
mov
xor
stos
ret
and
pusha
lea
das
add
add
inc
or
test
mov
inc
aam
ja
xchg
add
testb
add
xchg
leave
in
outsb
adc
in
insb
mov
lods
subl
scas
fwait
aam
test
in
ror
sub
mov
add
xor
loope
adcl
shl
jnp
xor
jne
xchg
in
xchg
je
sti
clc
jecxz
rolb
sbb
xchg
cmpsb
dec
shlb
inc
cmpsl
movsl
mov
push
pop
pop
add
cli
sub
int
lock
int3
sub
fistpll
sahf
xchg
pop
insl
sbb
filds
jmp
mov
push
daa
popa
mov
inc
jno
and
inc
fs
jl
mov
lods
in
jmp
lock
push
in
ret
outsb
loopne
push
test
addr16
dec
xor
hlt
adc
jns
xchg
cmp
dec
xchg
push
jle
adc
xor
adc
push
or
addr16
daa
sbbb
xor
sbb
dec
sub
ficoml
ljmp
loop
dec
pop
adc
add
add
add
mov
gs
xchg
push
int
sub
enter
mov
lods
lods
push
cli
iret
out
xchg
inc
mov
mov
loopne
rorl
sub
add
scas
lea
and
jb
repnz
pop
lea
jb
push
nop
stos
popa
sahf
cwtl
call
sahf
adc
xchg
dec
dec
xchg
add
mov
les
sbb
jno
aaa
adcb
cwtl
jno
test
test
js
xchg
in
xchg
mov
pusha
sbb
mov
roll
imul
dec
testl
cmc
fisttps
xchg
sbb
popa
jp
pop
shrl
fdivl
or
movb
pop
hlt
out
mov
fucomi
xchg
cwtl
ret
call
xor
adc
ret
mov
mov
shl
stos
sbb
fstl
xor
sbb
or
out
adc
add
aaa
shlb
cmc
div
rcl
inc
pop
sub
or
cltd
add
testb
add
data16
stc
mov
fiaddl
inc
xrelease
cs
mov
push
orb
loopne
pop
pop
pop
or
cwtl
outsl
jno
lea
push
jb
sub
dec
mov
adc
out
je
scas
push
cld
and
mov
int3
sbb
mov
movsl
adc
addr16
inc
sti
bound
push
push
out
push
icebp
sbb
xchg
or
and
xchg
dec
or
call
leave
mov
enter
in
inc
mov
xor
or
mov
popf
popf
xor
xchg
pop
jb
and
jae
mov
jno
pop
addr16
dec
mov
add
xchg
mov
fwait
mov
jmp
add
enter
jge
mov
mov
inc
iret
mov
inc
pop
push
nop
sub
sub
addr16
ljmp
test
pop
jge
add
push
sahf
rcr
pop
test
out
xor
add
testb
add
or
xchg
cli
push
cli
cmp
xchg
ret
cmp
dec
sahf
pop
push
jp
out
cmpsl
inc
les
fbld
pop
mov
xor
fistpl
inc
inc
out
shll
adc
inc
loope
repz
stos
ficoms
mov
sbb
movl
int
lock
sub
adc
xchg
andb
js
add
ja
decb
add
dec
jnp
mov
push
call
push
stos
aaa
ljmp
xor
mov
imul
int
dec
mov
adc
scas
pop
sub
popf
pop
and
jbe
push
mov
add
inc
sahf
hlt
xchg
mov
pop
loop
mov
iret
dec
adc
mov
mov
push
icebp
cmp
cmp
outsb
stos
cmp
push
lock
nop
faddl
jb
and
add
arpl
cmpsb
jcxz
jne
push
inc
push
and
add
testb
add
mov
push
loopne
stos
xchg
movsb
lods
mov
mov
sbb
out
ret
adc
loopne
mov
sahf
rorb
and
xchg
cmp
orl
push
adc
inc
bound
xorb
jmp
xlat
test
adc
xchg
sub
shl
ss
incb
bound
xchg
sub
mov
mov
clc
andl
scas
dec
sbb
stos
push
cmp
test
mov
push
push
cmpsb
in
pop
and
sub
push
fwait
and
rcl
es
adc
mov
or
cmpsb
aad
push
into
lods
pop
dec
mov
std
and
lcall
negb
mov
add
ret
fwait
aaa
sti
dec
in
sub
jns
fs
inc
push
push
out
gs
mov
push
push
outsl
mov
xchg
push
xchg
sbb
or
or
add
clc
jnp
jg
in
cli
cwtl
inc
mov
mov
pushf
add
testb
add
xchg
xor
sbb
loope
loop
dec
insb
dec
push
insl
mov
or
out
add
addl
xlat
sbb
and
shrl
shrb
in
shll
fwait
mov
lret
mov
movsb
mov
stc
sub
push
out
data16
sbb
pop
pop
mov
and
inc
fwait
sub
aam
adcb
pslld
popa
push
pop
xchg
aad
push
jl
scas
hlt
in
sahf
jmp
sub
adc
xchg
pop
and
push
cli
lds
add
in
cli
cltd
dec
sarb
sbb
or
push
daa
cmp
movsl
add
js
out
cwtl
cli
mov
lret
lret
mov
and
fadds
or
pop
lahf
repz
push
test
push
aam
les
fadds
pop
pushf
mov
sahf
xlat
xchg
mov
add
ljmp
cld
inc
push
cltd
das
lret
ljmp
add
ss
shll
jl
sahf
pop
mov
mov
mov
xchg
lea
ret
mov
fnsave
ljmp
sub
mov
xor
xor
inc
push
nop
in
fnsave
test
out
ret
inc
test
pop
lods
and
out
es
les
jl
out
stos
dec
xor
ret
fwait
rcl
lahf
ss
les
cmp
cmp
inc
fmuls
jo
pusha
sub
lret
sahf
hlt
iret
jno
sub
push
mov
pop
lea
mov
cmp
dec
add
jnp
mov
mov
jns
mov
sarb
fsubl
imul
ja
push
push
gs
or
mov
aam
push
add
notb
fldenv
bound
enter
in
xchg
mov
xchg
cmp
hlt
fcomps
addr16
xchg
dec
movl
add
add
jl
sar
std
jle
loop
jmp
sahf
add
testb
add
shl
add
mov
mov
pop
popf
insb
mov
repnz
dec
call
inc
ds
inc
pop
cmpsl
mov
ljmp
xchg
outsl
sahf
outsb
inc
and
mov
mov
repnz
inc
inc
sar
xor
ja
leave
add
jmp
repnz
mov
fisttps
adc
jns
popf
out
mov
pop
pop
cli
lods
jne
add
xor
inc
rcr
jecxz
ret
xor
iret
je
mov
mov
pop
dec
dec
out
rclb
shlb
jns
jb
or
sahf
insb
inc
int3
idivb
ljmp
mov
bound
dec
sbb
out
icebp
fwait
sub
adc
in
mov
and
cmpsb
pop
pop
inc
sbb
xlat
jne
aas
sbb
mov
cld
pop
add
push
push
sbb
lcall
add
cwtl
or
stos
xchg
cmp
pop
mov
lahf
add
testb
add
mov
sub
pushf
lock
sarb
dec
jmp
sub
imul
jmp
inc
dec
loope
mov
dec
hlt
mov
fs
rolb
stos
pop
mov
lds
subl
sbb
bound
js
dec
xchg
add
outsb
sbbb
add
mov
dec
rcrb
pop
je
push
pop
inc
ja
jo
pusha
or
lds
stos
fdivr
or
pop
stc
cli
xchg
out
adc
mov
jbe
stc
pop
out
dec
mov
rclb
aam
dec
lock
cs
rcrb
inc
stos
leave
cmp
imul
aam
leave
rcrb
mov
or
or
xor
enter
and
dec
pop
jge
mov
ljmp
int
dec
les
push
dec
add
fwait
and
popa
mov
aad
aam
mov
add
testb
add
adc
cmp
inc
xor
sti
ficomps
mov
sbb
in
cmc
fisubrl
rolb
add
jns
pushf
push
loop
cmp
nop
cwtl
into
or
adc
cmp
lret
sub
cli
add
fdivrl
addr16
fstl
arpl
push
shl
mov
ljmp
in
dec
push
rorl
scas
xor
adc
int3
jg
sbb
ja
push
es
jns
xchg
mov
dec
mov
adc
iret
popa
xchg
scas
mov
mov
xor
sarb
je
hlt
mov
push
sbb
test
stc
jae
inc
fimull
insb
popa
jle
push
insl
pop
fwait
cs
repnz
xchg
mov
add
stos
fisttpl
push
es
paddd
ljmp
call
mov
add
push
and
xlat
aas
jle
ds
out
mov
add
in
aaa
add
xchg
stc
fstpt
testb
addl
pop
jbe
mov
pop
dec
add
fucomi
lock
les
mov
xchg
repz
mov
std
jne
sbb
insw
sub
mov
mov
sbb
inc
xor
jae
or
test
jl
fs
mov
lret
push
jp
pop
mov
cwtl
fistpll
clc
sbb
pop
in
jne
xor
loopne
fwait
sub
lods
fwait
push
dec
cmp
push
movsl
mov
shlb
inc
and
pop
sarb
inc
mov
dec
pushf
ds
inc
imul
xchg
dec
mov
or
mov
jo
mov
imul
push
cmpsb
ja
xchg
sbb
bound
loop
fs
mov
sub
ja
in
push
repnz
cmpl
mov
das
dec
inc
test
jmp
mov
movsb
add
imul
outsl
popl
gs
in
add
testb
add
push
test
rcr
jl
incl
rcr
lods
dec
add
dec
push
push
es
cli
jge
mov
ficoms
imul
jae
mov
lods
incb
adc
xor
das
add
adc
mov
in
test
jl
int
sub
aas
in
dec
adc
arpl
lret
daa
addr16
xor
imul
lret
dec
and
dec
lds
imul
insl
data16
add
jl
stos
fdivrl
bound
loop
lods
jo
mov
jecxz
sbb
frstor
jp
stc
popa
in
pop
std
lock
fnstcw
and
and
addr16
cmc
popa
jmp
cld
movsl
mov
pop
push
pop
mov
jne
jecxz
jp
leave
xlat
nop
inc
inc
cmp
lret
fidivs
mov
mov
add
adc
sbbl
mov
test
add
add
add
ss
shll
adc
or
stc
mov
stos
mov
rolb
enter
out
dec
add
xchg
push
dec
lret
sub
xor
daa
adc
popf
sub
das
imul
out
jg
shlb
decl
jl
push
in
ds
dec
rcl
sbb
pushf
out
push
loop
aad
sub
xor
fnstcw
push
mov
cmp
arpl
outsl
pop
mov
pop
cltd
lods
or
insb
push
push
ljmp
call
fwait
movsb
pop
sub
xchg
mov
jl
xorl
xchg
mov
dec
stos
mov
aaa
mov
fcmovbe
aaa
stos
mov
mov
xor
adc
dec
inc
je
fstps
pop
jecxz
fs
cli
mov
inc
cmp
and
icebp
scas
pusha
sbb
push
add
mov
imul
and
or
inc
test
add
add
add
or
inc
inc
xorl
sbb
fsubrl
imul
mov
pop
dec
push
addl
icebp
pushf
cmpsl
je
add
mov
adc
cmp
out
adc
xchg
pop
ljmp
shrb
lcall
inc
mov
fadds
fdiv
mov
ja
jl
lods
not
lcall
stos
repz
ljmp
fcomps
dec
cmp
cld
and
ret
xchg
ret
push
outsb
into
addr16
or
mov
leave
fdivs
daa
xor
push
push
iret
and
fsubr
loop
inc
push
jb
out
pusha
xor
in
xchg
mov
sub
pop
cs
outsw
xchg
dec
lods
jb
dec
shll
push
fistl
add
leave
cmp
rcl
out
ret
ficompl
add
add
mov
dec
mov
ret
movsb
add
testb
add
fimull
pop
mov
xchg
push
cld
lret
sbb
pop
sbb
jmp
ss
mov
fidivs
bsr
cmp
cltd
sbb
inc
mov
xchg
push
cmp
lcall
mov
int3
test
dec
loopne
add
ja
ror
mov
push
lcall
mov
pop
cltd
bnd
incb
push
inc
and
pop
jle
mov
or
pop
in
dec
cmp
or
popa
cli
add
mov
lds
push
and
rcrb
ja
xor
pop
dec
sbb
lds
movsb
jns
out
test
popf
xor
cli
sbb
xchg
cmp
dec
mov
add
xchg
mov
into
in
ja
jbe
xchg
jns
xor
ljmp
jae
add
ja
out
das
mov
aam
mov
sub
add
pop
push
mov
jle
xchg
sub
dec
inc
xor
popf
imul
test
xor
stc
enter
or
enter
in
in
aaa
outsb
test
xchg
sub
xchg
movsb
adcl
inc
xor
addr16
or
and
cmp
adc
add
in
repz
lahf
add
add
dec
data16
push
das
aam
out
push
mov
sub
adc
lret
mov
lock
and
mov
leave
dec
cmp
or
sub
adc
fcomp
cwtl
sti
lea
fwait
xchg
xchg
iret
insl
adc
ret
jecxz
scas
leave
mov
mov
lds
mov
cmp
int
add
insb
call
aad
dec
pop
mov
iret
insb
fmul
sbb
xchg
imul
outsb
mov
add
pusha
test
mov
adc
xlat
mov
add
testb
add
js
out
pop
lahf
inc
dec
pop
ror
test
or
int
pop
adc
pushf
mov
scas
fwait
pop
cmp
inc
jb
cmpsb
out
scas
iret
faddl
fwait
and
lods
shr
lock
dec
push
imul
loopne
fidivrl
sbb
mov
fwait
and
fisttps
mov
add
scas
call
push
sub
outsl
loope
sub
jmp
jns
pop
popa
xor
into
int
and
adcl
lret
cmp
dec
ret
pop
mov
cmp
stos
xchg
scas
rol
pop
mov
lahf
xor
mov
cwtl
bswap
add
ffree
fldenv
lret
stc
out
sub
adc
rcl
mul
jecxz
pop
pop
shlb
ror
sbb
inc
in
pop
shl
int
push
in
sbb
mov
repz
add
or
lcall
cmp
add
testb
add
inc
jmp
mov
out
push
fdivrs
cmpsl
test
shll
aad
les
les
orb
ds
push
lahf
jno
xor
je
gs
mov
dec
pop
and
cs
push
or
cmp
insb
sub
inc
or
jbe
mov
int
daa
ds
sbb
test
sub
hlt
ret
xchg
cs
clc
pop
fldt
mov
popa
in
fnstsw
in
pusha
mov
sbb
cs
loop
mov
retw
cs
inc
dec
out
mov
fsubrl
xchg
daa
adc
out
sbb
sbb
daa
pop
jge
and
push
loope
mov
pushl
ss
arpl
lods
push
shlb
xchg
push
cmp
xchg
inc
fs
pop
notl
sbb
test
jnp
mov
ds
aaa
adc
add
mov
mov
cmp
sub
test
add
add
add
cmc
cld
fdivl
mov
loop
jecxz
sub
pop
push
push
fiadds
xor
xchg
add
mov
pop
xchg
adc
adc
in
xor
dec
sub
pop
mov
inc
addr16
ret
jb
push
fidivrs
movsl
jno
out
lods
repnz
mov
addr16
xor
gs
sti
pop
push
out
dec
xchg
shll
lods
enter
cs
repz
mov
mov
hlt
out
or
add
lcall
out
push
push
daa
divl
lods
pop
popa
stc
xchg
mov
shll
cld
inc
jo
mov
movsl
jb
das
popf
jo
push
scas
push
icebp
ficomps
pop
scas
ds
and
mov
push
xlat
out
jnp
dec
sahf
ret
cmp
pop
xor
cltd
cmp
sub
sbb
mov
jne
xchg
add
or
sbb
mov
xchg
sahf
mov
testb
add
loop
pop
push
in
sbb
inc
cli
mov
stc
jb
ficoml
inc
push
shrl
xchg
in
ss
push
cmc
pushf
lods
lahf
orb
ds
je
xlat
andnps
lret
dec
outsl
cli
je
out
jne
xchg
cltd
movsb
pop
mov
push
mov
popf
mov
cmp
dec
xchg
lock
add
and
xchg
jno
fsubrs
shrl
pop
fistl
add
loopne
cmc
fstl
xchg
add
daa
dec
aas
repnz
mov
adc
data16
daa
inc
pop
add
lcall
pop
test
mov
repnz
mov
leave
add
mov
mov
popa
dec
xor
out
push
cmpsb
or
jae
repnz
inc
cmpsb
out
mov
pop
ror
ljmp
xchg
push
test
sbb
xchg
add
push
inc
fdivl
stos
push
sub
add
add
push
adc
cmp
cmp
rorl
sub
push
mov
jmp
mov
leave
and
mov
sub
iret
sbb
pop
add
adc
inc
cmpsb
inc
repz
cmp
sbb
mov
lods
lods
cwtl
and
and
pop
jp
loope
mov
or
std
xorl
mov
mov
xor
pop
sbbl
scas
in
popa
jnp
add
addr16
out
out
push
subl
insl
or
xor
pop
frstor
inc
sbb
xor
sub
aas
lock
cmp
jo
mov
lret
arpl
cltd
sbb
cmc
in
lcall
out
push
pop
test
push
lahf
add
sub
or
inc
add
adc
mov
pusha
sti
out
pop
subb
add
test
sbbb
pop
or
stos
jns
cmp
jle
inc
dec
fstpl
or
cmp
or
scas
std
pushf
repz
lock
mov
xor
inc
sbb
cld
push
dec
cmp
nop
mov
loope
xchg
and
sahf
inc
nop
mov
fs
lcall
scas
leave
mov
out
add
shr
aam
add
mov
daa
cmpsb
scas
pop
nop
xor
pop
in
cmp
xor
or
or
adc
leave
imulb
popf
xchg
stos
xchg
cld
insb
mov
nop
cld
and
push
cmpsl
adc
test
mov
pop
testb
jecxz
push
mov
sbb
mov
push
loop
sbb
adc
mov
nop
ss
imul
inc
xchg
rcrl
lock
out
sbb
aaa
movsl
leave
jge
sub
add
add
stos
hlt
jmp
ljmp
sti
negb
lods
add
testb
add
loope
mov
add
cli
into
cmp
sbb
mov
adcl
jno
or
dec
sbb
ja
jge
fs
es
frstor
sbb
push
pop
push
rol
les
scas
or
lret
in
cltd
popf
movsl
jbe
xlat
dec
arpl
push
pop
not
es
bnd
out
and
js
xor
cmp
in
push
adc
imul
sbb
or
pop
inc
xchg
cs
rclb
xchg
xlat
mov
into
inc
insb
add
xchg
push
jo
icebp
mov
rol
pop
aaa
jnp
adc
bound
fucomp
jl
cmp
pop
test
shrl
push
sub
shrb
loop
jo
jge
clc
enter
les
push
jnp
mov
sbbb
daa
jo
or
xchg
aaa
add
add
out
xlat
out
jg
dec
cmp
mov
lods
add
testb
add
dec
pop
rcrl
and
xchg
cmp
or
lea
jne
adc
jp
jp
hlt
fadd
xor
roll
xorl
mov
imul
pop
fisubl
movsl
ss
sub
mov
fs
push
mov
out
xor
lahf
hlt
mov
data16
mov
push
ss
or
pop
leave
sbb
xor
add
mov
dec
jl
lret
pusha
negl
mov
lret
stos
mov
and
cs
mov
divb
adc
addb
pop
sbb
cmp
addb
jb
sbb
inc
test
xchg
shrl
sub
shr
sbb
xchg
out
xchg
jle
out
ljmp
es
pop
add
sbb
pop
fbstp
mov
addb
scas
add
testb
add
adc
decb
out
sahf
ljmp
test
pusha
dec
push
add
mov
jle
ds
stc
mov
pop
nop
test
cmp
push
lret
stos
outsl
fcomps
and
mov
cmp
or
in
shlb
pop
sub
cmp
arpl
cwtl
les
xor
inc
repnz
mov
ljmp
divl
or
xchg
enter
xchg
sbb
in
xor
pop
mov
lahf
xchg
cmp
lods
movsb
jae
mov
stos
xlat
push
cld
cwtl
insw
jne
xor
mov
dec
xchg
push
cmovbe
adc
rcrl
push
jmp
es
or
fcomi
mov
shlb
push
jno
and
sub
mov
jge
imul
incb
jo
callw
test
cmp
adc
add
add
mov
ja
fwait
shrl
outsb
pop
scas
add
testb
add
int3
lea
out
xchg
stc
pusha
int3
push
jb
and
mov
cmp
leave
cmpb
xchg
sub
xchg
xchg
scas
dec
addr16
in
ja
dec
dec
adc
fwait
or
ret
mov
aam
pop
out
test
pop
push
jnp
aas
or
mov
sbb
rorl
mov
movsb
rclb
dec
cmp
lcall
jbe
xor
fwait
jle
popf
and
xor
push
xchg
push
call
ss
in
stos
lods
mov
outsb
xchg
cmpl
lea
sub
mov
inc
push
inc
icebp
dec
dec
and
sarl
pop
pop
push
mov
cmp
data16
fstpl
adc
jmp
outsl
lahf
and
cmp
xor
jb
sti
iret
mov
aaa
rorl
add
mov
push
sti
jmp
xchg
sub
aas
cmp
add
testb
add
lds
push
ret
or
dec
aam
inc
lods
pop
in
or
jmp
fmull
push
cli
jp
orl
into
iret
rcrb
cmpsl
jge
movsb
mov
xchg
cwtl
or
xor
mov
stos
xchg
ret
jbe
movsl
cmp
or
enter
add
loop
sub
addr16
mov
testb
sbb
add
pop
fldt
cltd
jne
or
push
outsl
into
jmp
push
sbb
jo
lds
cmp
out
push
sub
cltd
jecxz
incl
enter
xlat
dec
pop
xor
movsb
in
test
lret
nop
xor
pop
push
das
push
jmp
scas
pusha
das
lods
mov
sbb
or
aad
rorb
scas
test
push
stos
jbe,pn
loopne
cli
cmp
dec
scas
xchg
movsb
mov
cmp
es
add
jecxz
lock
fstps
dec
inc
mov
add
add
add
inc
inc
pop
aad
in
lcall
rolb
pusha
xchg
or
inc
outsl
loopne
out
jp
movsb
cmp
adc
and
js
pop
mov
lods
mov
jnp
mov
popa
jg
and
mov
inc
lret
in
sarb
popa
scas
dec
jle
ret
sub
roll
push
jnp
adc
shlb
push
mov
and
out
call
inc
fdivrl
sbb
xchg
lcall
jle
mov
push
shll
in
and
xchg
push
push
push
out
cmp
lcall
mov
in
adc
fistl
scas
sbb
jmp
push
imul
pxor
imulb
sub
fs
mov
ret
out
or
pusha
dec
jmp
lea
jne
add
cld
mov
test
cmp
add
jl
add
rolb
repnz
dec
sbbb
das
out
leave
out
insl
testl
lods
hlt
in
or
push
jecxz
imul
lds
jmp
mov
or
mov
cli
out
jne
bound
xchg
mov
push
mov
sbb
or
or
cmp
fimull
lret
cmc
insl
cmp
jo
dec
in
js
das
push
xchg
mov
xchg
dec
xchg
add
into
out
mov
shr
sbb
or
jae
into
pop
into
adc
in
in
add
adc
bswap
int
ret
loopne
pop
icebp
stos
push
test
in
mov
data16
inc
rorb
mov
adc
adc
pop
pop
push
or
add
orb
sub
pop
hlt
jbe
aas
xchg
in
mov
cwtl
mov
cmc
fdivr
les
lret
pop
out
sub
push
lea
mov
dec
das
pop
out
cmc
mov
mov
mov
add
add
add
stc
pop
or
scas
stos
inc
pop
push
repz
shrb
add
ss
push
loope
out
jae
lods
push
mov
fdivl
jmp
ss
insl
movsb
rol
mov
push
imul
add
jo
ret
inc
cmpsl
les
jns
add
movl
or
pushf
sub
dec
sbb
mov
inc
addr16
and
push
push
or
push
sub
repz
fiaddl
lahf
lahf
cmp
out
cmpsl
push
cld
cmp
lret
sbb
repnz
popfw
outsb
adc
xchg
inc
sub
ret
test
adc
shrl
repz
xchg
decl
pop
mov
pop
sbb
loope
movsb
sub
sbb
in
cmpsb
xlat
call
repz
into
push
insl
adc
add
add
out
std
dec
std
pop
mov
pop
pop
mov
mov
add
add
add
sub
lcall
sbb
xor
cmpsl
sub
lods
call
test
inc
dec
daa
jp
mov
jg
inc
pop
popf
jne
mov
push
add
inc
cmpsb
outsb
clc
test
dec
cwtl
hlt
xchg
leave
jl
hlt
lret
xor
mov
hlt
xlat
mov
loope
pop
sbb
popf
push
xchg
lahf
push
int3
aad
loopne
out
repz
rorb
adc
ja
hlt
ret
and
push
inc
and
lret
xchg
ret
xchg
jae
inc
jmp
ljmp
cs
call
add
or
fisubl
loope
test
fists
sbb
inc
out
lods
add
imul
aam
out
add
cmp
mov
pop
repnz
push
dec
es
lcall
jb
orb
int3
ss
xor
inc
cld
sbb
loope,pt
push
sbb
mov
add
fidivs
loop
ljmp
jno
addb
mov
add
add
add
neg
adc
lock
mov
dec
shrb
pop
lahf
mov
or
mov
pop
pop
ficoml
stos
push
repz
paddq
jmp
scas
icebp
mov
jbe
pop
out
lcall
mov
enter
test
adc
mov
and
outsl
dec
sbb
das
mov
mov
mov
push
cmp
popa
lahf
imul
sbb
xor
push
xchg
sti
or
gs
pop
jae
and
movsb
aaa
movsl
dec
push
xchg
pushf
lea
test
xchg
mov
sti
or
jae
dec
imul
ret
ja
dec
das
out
add
mov
or
lret
rcr
jp
cwtl
mul
xor
adc
aam
sbb
sbb
lock
dec
scas
or
pop
add
push
xchg
jg
jmp
std
jge
in
xchg
adcb
mov
testb
add
pop
push
nop
aad
cld
pushf
xlat
loope
out
push
das
sub
adc
iret
dec
xor
mov
rcr
inc
cltd
sub
pop
sti
add
data16
mov
fldl
add
ss
loopne
ret
mov
pusha
ljmp
add
xor
aas
sub
sbb
std
adc
std
je
inc
jns
mov
out
sub
sub
frstor
fsubrl
std
cmp
xchg
in
sarl
outsl
xchg
cmp
fnstenv
mov
idiv
mov
push
adc
push
pusha
leave
and
fsubrs
xchg
sarb
xchg
movsl
jnp
mov
mov
or
push
or
enter
push
mov
testl
mov
sbb
sti
mov
int
aaa
cmp
add
xor
std
cmp
adc
testb
add
push
inc
dec
cmp
and
jle
sbb
stos
mov
mov
add
aam
sub
addb
gs
sub
ror
js
ja
ds
dec
dec
cmp
imull
shl
verw
stc
push
jge
dec
or
idivl
aaa
stos
fimuls
stos
dec
lret
mov
mov
repz
push
dec
xlat
cmpsb
movsl
jne
fcoml
scas
cmp
jae
repz
push
pop
sub
test
inc
out
adc
cltd
adc
pushf
push
push
cwtl
mov
push
repnz
int
clc
inc
ljmp
jg
cltd
mov
fimull
ret
das
jmp
mov
xchg
sbb
jno
jg
xor
sbb
int3
mov
scas
jge
or
or
pop
and
mov
es
out
aam
push
add
push
pop
xor
cmp
ficoml
lock
mov
add
add
add
shl
dec
sarb
arpl
mov
lock
ficoml
add
or
inc
clc
repnz
popa
xor
jnp
jmp
or
fmull
push
pop
je
rcl
testl
gs
cltd
insb
inc
testl
cs
movsl
inc
xor
enter
insl
lret
lods
add
js
aam
mov
pop
aaa
push
mov
adc
sbb
dec
fmull
jb
lock
test
repz
jle
ret
test
popaw
orl
les
imul
lods
xchg
rcll
push
pop
xor
icebp
sahf
or
leave
pusha
push
push
jp
jo
shll
call
inc
inc
add
adc
xchg
aam
scas
sbb
pop
mov
jl
icebp
push
push
xchg
add
jp
les
mov
push
push
adc
js
dec
hlt
mov
add
or
inc
repz
xchg
repz
je
fsubrl
test
cwtl
push
jae
xor
sbb
add
or
push
xor
cmc
insb
sub
adc
enter
push
inc
mov
sti
add
cmc
icebp
inc
out
cmpsb
add
ret
dec
push
jmp
sarl
cmp
repz
pop
in
test
fwait
jle
mov
jp
rcl
in
movsl
xor
sub
insl
fistpl
popf
arpl
scas
popa
pop
les
sbb
xor
mov
sbb
push
divb
pop
inc
outsl
mov
mov
repnz
xchg
popa
or
jg
dec
fmuls
fdivs
sbbb
int
mov
pop
stos
or
fildll
dec
mov
cltd
loopne
fiadds
mov
jns
mov
mov
xchg
jecxz
int
bound
jbe
add
clc
pop
stc
out
push
insb
xchg
cld
sub
lock
ljmp
add
mov
das
sbb
mov
mov
ret
xchg
mov
jno
inc
bound
jge
xchg
jge
fisttpll
icebp
cmp
fiadds
cmc
cmc
sub
adc
stos
cwtl
stos
xchg
or
mov
bound
sub
mov
aad
imul
addr16
pop
adcb
pop
test
cmp
cld
sbb
in
mov
test
pop
dec
pop
fstl
mov
and
jecxz
mov
xchg
in
adc
sahf
ljmp
stos
repnz
sub
push
lods
add
adc
jl
cmp
pop
mov
push
push
mov
bound
cmp
mov
adc
stos
or
and
fcomps
jno
mov
push
sahf
mov
mov
test
xlat
push
js
jmp
add
lds
cli
lcall
ret
fisubs
testb
add
sbb
subb
dec
popf
mov
insl
int
cmp
cs
sub
jb
lret
push
jmp
pop
push
leave
outsb
xchg
cli
xstore-rng
cmpsl
xchg
xchg
cmpb
insl
jne
inc
cmp
fdivrl
repz
jne
out
les
sbb
push
and
jno
lock
insl
lahf
jnp
sub
pop
cmp
aam
int
and
insb
stos
pop
fisttps
ja
push
dec
cmp
xor
pop
xor
ret
movlps
add
pop
inc
outsb
out
outsb
pop
fisubrs
popa
push
fistl
into
aam
sub
sub
push
pop
pop
mov
out
push
call
push
sbb
popa
mov
daa
jg
and
add
shrb
mull
in
lret
popf
push
outsl
imull
mov
push
aam
add
xorl
insb
scas
int
cmp
add
add
add
push
cmpsl
shr
and
cmp
add
int
insl
mov
in
clc
imul
xor
lcall
sbb
int3
ja
mov
sar
mov
xchg
mov
mov
sub
sbb
mov
roll
out
mov
xor
xlat
lds
adc
jecxz
xor
xor
sub
in
in
test
rolb
fstpt
insb
ret
xchg
notb
mov
and
lahf
or
jle
out
jp
push
stos
cmc
loop
es
into
mov
clc
push
push
mov
inc
pop
pop
flds
daa
mov
das
mov
repz
sub
sub
bound
mov
ja
int3
les
popa
out
cld
xor
jecxz
into
sbb
icebp
sub
jns
pop
movsb
and
or
addr16
mov
rcll
inc
fcom
add
dec
pop
pop
sbbl
fstpl
sbb
aam
mov
add
jecxz
iret
ret
clc
push
lcall
divb
call
lar
in
jno
js
lods
mov
inc
dec
ljmp
jnp
pusha
fstps
dec
jae
mov
mov
in
cs
sbb
mov
addr16
mov
icebp
pop
jo
pop
add
out
aad
enter
rolb
sbb
adc
inc
std
sbb
xchg
jmp
mov
jae
mov
movsb
dec
jp
fldenv
xchg
cmp
aas
shl
pop
into
das
xor
add
mov
lods
jae
popa
nop
jge
add
clc
inc
rcl
imul
imul
sbb
mov
cmp
lods
lds
imul
and
rcrl
xchg
in
int
pop
cmpsb
mov
add
loope
mov
jecxz
out
sub
xchg
daa
ret
add
add
add
cmp
aam
add
shlb
jmp
clc
lret
or
mov
enter
pop
fidivl
push
xor
mov
lret
mov
mov
mov
mov
xchg
xor
scas
and
test
gs
fstps
sarb
sbb
inc
cmp
adc
leave
xor
push
das
insb
xor
sub
sub
push
into
pusha
pop
int3
cmpsl
clc
das
mov
xchg
movsb
xchg
testb
out
int3
inc
or
lret
repz
xor
jno
int
fiadds
sbb
inc
repnz
push
filds
pusha
jns
inc
mov
scas
push
or
cmp
adc
aam
inc
faddl
inc
inc
or
push
out
push
std
mov
mov
int
add
pop
pop
pop
push
sub
add
std
test
jg
jbe
movsb
sbbb
mov
add
add
dec
mov
test
pop
popa
sysret
arpl
fisttpl
std
lahf
fadd
insl
or
mov
xor
in
sarl
xchg
sbb
ret
push
jg
test
in
cld
imul
inc
or
pop
inc
leave
jmp
out
push
add
sahf
test
mov
js
mov
jmp
ficomps
ret
rol
lods
adc
mov
and
not
or
shll
and
push
aad
rorl
pop
mov
out
leave
in
mov
dec
ljmp
xor
mov
sub
jmp
insl
cmpb
mov
stc
ljmp
inc
adc
xlat
ja
mov
adc
les
sbbb
sahf
loope
xor
mov
cmc
call
add
lahf
sahf
sub
pop
gs
add
adc
in
lcall
xor
xchg
movsl
mov
testb
add
push
inc
es
pop
ja
aad
scas
and
filds
int
repnz
mov
jle
lods
sub
aad
bound
sbb
jge
or
fimull
dec
cwtl
pop
pop
sbb
and
js
mov
inc
ss
mov
cmp
mov
shrb
jno
shlb
cli
adc
push
pop
mov
xor
dec
aaa
add
cli
ss
and
jb
aad
inc
lea
insl
rorl
mov
insl
cmp
into
jb
cmpsl
pop
or
loop
daa
es
imul
inc
sbb
jg
adc
push
jp,pt
fucomp
mov
jo
pop
iret
pop
push
rep
xchg
inc
add
adc
shrb
test
push
cwtl
cmp
xor
lea
rol
and
add
add
sub
jg,pt
stos
dec
push
jo
ret
test
movsb
rolb
testb
add
push
and
mov
fyl2xp1
nop
sub
leave
add
mov
xchg
pop
inc
add
and
push
mov
call
insl
push
and
inc
dec
or
xchg
popa
sbb
movsl
into
clc
fldt
xlat
adc
cmp
adc
test
sub
adcb
stos
mov
jns
repnz
adc
ljmp
cmp
pop
jns
xorl
xor
sub
cmc
ljmp
pop
xor
xchg
xor
cmpb
xlat
jl
inc
addr16
out
cmpsl
add
rolb
arpl
add
cwtl
movsl
test
push
nop
lcall
pop
movsb
xchg
insl
or
cmp
stos
mov
adc
sub
ret
lahf
jbe
xor
mov
xor
pushf
movsl
push
clc
add
insl
sbb
outsl
mov
roll
add
add
add
iret
mov
cmp
icebp
lahf
pop
movsb
aam
dec
aam
out
jl
pop
ss
pop
jbe
shrb
data16
sbb
adc
dec
dec
aas
jecxz
sbb
jle
mov
adc
mov
and
iret
xchg
or
and
bound
push
in
mov
push
pop
dec
rcrb
cmp
mov
cmp
push
fs
sub
lock
cmp
inc
fdivr
pop
push
loope
cwtl
and
mov
insl
adc
out
stc
and
fidivrs
jg
in
test
test
lcall
mov
nop
ja
mov
divb
mov
lret
in
ljmp
xchg
mov
insb
add
pop
dec
lds
inc
and
mov
xchg
pop
pusha
mov
mov
add
inc
fbld
mov
cltd
outsl
mov
add
testb
add
outsl
xor
push
xor
inc
xor
add
dec
out
int3
lea
mov
outsl
stc
lea
and
jo
fs
mov
sbb
push
mov
sub
jge
flds
jno
or
in
and
mov
sarl
fs
out
sbbl
inc
imul
lds
dec
test
cmc
inc
sbb
xchg
pop
es
jbe
int
std
outsl
outsb
orb
fcoms
sub
push
fmull
insl
fcmovbe
loop
dec
lods
mov
dec
jmp
insl
pop
add
icebp
movsl
add
mov
pop
cmpsl
push
or
mov
rcrl
push
sarb
sbb
jmp
sub
sub
or
jb
xor
scas
and
xlat
sub
or
sbb
mov
adc
push
int
call
add
fistpll
call
push
jecxz
stos
xchg
add
testb
add
loop
shll
mov
xor
or
test
mov
cmpsb
stos
sarb
cmp
int
push
xor
push
mov
xor
int3
push
mov
dec
push
popa
jge
sahf
sbb
xchg
sti
inc
daa
adc
xlat
enter
test
dec
mov
in
pop
cwtl
pop
out
lea
dec
frstor
shr
jl
sahf
hlt
mov
push
stos
inc
xchg
push
sub
loop
movsl
enter
test
cld
int3
jae
stos
cs
ret
fcomi
sub
fs
jo
dec
into
add
ss
shlb
sub
into
mov
push
or
cs
stc
sbb
or
daa
add
inc
add
adc
add
xor
jle
inc
add
xor
sti
in
jmp
add
or
insl
ret
jns
add
std
sti
leave
sti
iret
ljmp
jecxz
cwtl
pop
jl
add
testb
add
push
cli
pop
addr16
inc
in
adc
in
push
mov
sub
fisttpl
rcrl
fisubl
and
cmp
jno
aad
mov
leave
sbb
add
adc
mov
das
sub
pusha
inc
hlt
adc
xchg
push
ss
jp
retw
sar
aas
mov
movb
fisttps
inc
sbb
pop
out
cmc
insb
loope
dec
push
and
clc
xor
xchg
jecxz
inc
add
arpl
mov
xlat
jp
mov
pop
aaa
inc
loop
fwait
inc
ja
jae
or
imul
xor
ret
fcmove
push
lea
lcall
out
jne
iret
loope
pop
xor
call
sbb
pop
xchg
out
aad
hlt
jbe
push
cltd
das
ret
pop
int
fpatan
inc
add
mov
mov
es
stos
roll
add
add
add
cs
arpl
add
mov
and
lcall
or
dec
and
movsb
je
push
repz
add
lahf
inc
or
pop
hlt
jno
les
das
call
lret
push
les
mov
push
inc
push
ret
es
adc
std
ljmp
stos
push
and
adc
repz
cmp
cmp
scas
loopne
sahf
inc
jae
xchg
xlat
add
push
mov
sbb
aaa
pop
shll
scas
xchg
les
mov
dec
fistl
mov
and
mov
shlb
add
lds
mov
cs
pop
aaa
fldl
cmpsb
das
jno
fstpt
and
jnp
jmp
iret
je
outsb
inc
adc
add
fwait
mov
or
jg
mov
sub
pushf
push
push
add
add
jmp
pushf
insl
flds
in
fnsave
push
add
jle
pop
xlat
push
mov
stos
ljmp
sbb
mov
out
dec
ljmp
dec
xchg
mov
mov
xchg
dec
pop
inc
xchg
dec
and
es
addr16
and
test
imul
rcr
xchg
iret
pop
rorb
vmovaps
jmp
or
push
int
sahf
mov
jge
insl
jl
cli
sbb
dec
stc
adc
das
stos
mov
and
mov
ja
sub
xchg
jmp
std
mov
adc
stos
xchg
lea
dec
mov
sub
add
rcrb
stc
mov
cmp
xchg
sub
stos
enter
lahf
test
out
push
sbb
push
sbb
loope
bound
test
leave
dec
sbb
scas
mov
idivb
lock
xor
push
cld
pushl
out
adc
dec
pop
adc
add
add
ficomps
movsb
adc
nop
sub
ret
bound
mov
push
in
icebp
jno
cmp
fidivrl
sar
sbb
cwtl
push
or
inc
push
jecxz
pushl
inc
fcompl
sub
aaa
inc
popf
and
pop
test
sbb
pop
mov
sbb
das
adc
and
int
js
test
leave
orb
add
dec
movsl
jns
loop
test
lea
call
xlat
dec
repz
push
out
xor
sbb
mov
movsl
cltd
inc
xchg
ret
xor
not
popf
xlat
push
jnp
nop
xor
fcoml
pop
mov
pop
and
enter
lea
cmp
jae
pushl
xchg
out
lcall
lret
jno
pop
pop
popf
fsts
repz
xor
gs
add
pushf
shrb
jb
ret
push
stos
push
enter
add
add
xchg
mov
imul
fnstenv
jecxz
mov
mov
push
jb
xchg
or
jg
clc
xor
dec
ljmp
mov
fidivrl
in
adc
dec
dec
popf
xor
stos
ljmp
and
fsubs
lret
lahf
mov
sbb
orb
push
out
dec
xchg
imul
xorl
jle
bound
pop
mov
mov
lret
pop
lods
bound
mov
xor
mov
test
dec
adc
test
lea
ss
rep
push
popf
add
xor
adc
mov
cmc
push
int
adc
jnp
pop
rorb
div
fcoms
xor
aaa
push
cli
shrb
xchg
sbb
pop
mov
mov
add
sub
scas
mov
xchg
push
outsl
inc
mov
xchg
dec
leave
add
testb
add
mov
mov
nop
xlat
jnp
loope
sub
xchg
int3
outsb
and
cmp
mov
stc
push
and
mov
mov
jp
outsl
and
mov
and
xor
fsubr
pop
frstor
inc
sbb
shrb
int
push
ficoms
or
mov
popf
adc
sub
out
popa
int3
sti
sbb
add
dec
mov
and
out
xchg
pushf
arpl
push
js
cmp
push
dec
xchg
sub
adc
test
shlb
xor
ljmp
aad
sub
inc
pop
sarl
push
mov
mov
xchg
xlat
mov
sub
cmp
mov
icebp
mov
push
pop
push
lods
cli
xchg
jb,pt
test
jmp
jg
jne
jne
jg
out
and
into
adc
testb
add
lret
sub
mov
ficoms
mov
pushf
mov
fsubrp
push
push
cs
fisubl
mov
xor
add
or
cmp
lods
fcom
int3
repnz
cmp
add
xchg
jp
repnz
fwait
add
push
add
jno
cld
cmp
andb
jo
mov
pop
add
mov
popf
jl
cmp
mov
add
sub
mov
sub
inc
dec
mov
int3
clc
xor
jne
push
sub
lea
sub
jns
jg
cmp
xor
scas
add
xor
data16
pop
inc
sub
call
push
sub
mov
ja
jne
lahf
pop
add
xchg
mov
lretw
inc
inc
imul
xchg
jp
jge
adc
jle
pop
xor
add
dec
pop
mov
cmpsb
fstpl
inc
push
pop
ss
add
testb
add
mov
sbb
insl
sub
jbe
test
fiaddl
gs
ss
fsubrs
iret
jg
cmp
jmp
sub
lds
xchg
jno
pop
daa
leave
test
cs
mov
ud0
pop
push
rcrl
clc
mov
and
aas
jae
cmovb
test
mov
cmp
fisttpl
popl
ljmp
mov
int
cltd
cmp
mov
inc
shrb
rorb
sbb
cmp
pop
cmp
je
pop
mov
adc
sub
cmp
inc
int
xchg
dec
cli
call
mov
arpl
cmp
inc
nop
daa
dec
test
adcb
pop
ss
dec
aas
js
ds
inc
jmp
fisubs
add
ret
cli
stos
and
or
push
add
ss
xchg
jo
add
outsb
jle
lods
not
mov
add
hlt
lods
pop
sub
add
testb
add
roll
push
sub
lea
push
xchg
add
inc
inc
mov
push
incb
ret
push
or
or
mov
xor
popa
fxch
fs
pushf
movsb
daa
push
rcrb
xchg
loope
dec
adc
shlb
ljmp
fwait
xchg
xor
inc
pop
das
popa
push
adc
push
xchg
enter
data16
jnp
mov
mov
push
in
sub
std
addr16
mov
stos
rcll
cmp
out
jno
mov
jmp
in
sbb
repnz
pop
ret
pop
sub
ja
push
into
loopne
pop
iret
xchg
jl
arpl
fsubr
sbb
sub
shlb
sub
dec
fbld
push
push
test
data16
jmp
mov
mov
ret
jge
sarb
adc
out
sbb
add
mov
mov
push
xor
stos
and
add
testb
add
cwtl
outsb
add
out
xlat
add
dec
or
inc
jmp
test
sbb
add
roll
inc
cwtl
mov
cmp
jo
cli
jns
adc
call
adc
pop
jbe
jmp
stos
adc
dec
cmp
xchg
and
cmp
mov
arpl
js
mov
jl
mov
jge
int3
xorb
cmp
ret
sahf
jo
ficoms
je
pop
mov
jns
jmp
mov
sbb
adc
mov
mov
out
xor
fstpt
adc
aaa
cmp
sahf
enter
hlt
push
xor
icebp
or
xchg
pusha
pop
push
push
mov
cmp
mov
sbbb
adc
popf
xor
hlt
push
and
gs
jmp
pusha
push
dec
push
jg
mov
add
test
sbb
xlat
ss
inc
movsb
and
dec
sbb
add
testb
add
iret
jg
int3
fnstsw
stos
aaa
ljmp
mov
inc
ret
xchg
jno
iret
add
or
fdivrl
into
cmp
add
add
scas
cmp
add
into
jbe
cld
lock
cmp
push
test
les
fldenv
pop
nop
xchg
movsl
insb
lods
insl
or
out
sahf
sub
add
loop
shlb
scas
inc
mov
and
pop
ret
dec
mov
test
les
and
pop
push
imul
sbb
push
pop
jge
cltd
and
inc
sub
or
pop
jb
loope
mov
or
popa
push
inc
and
aad
and
sbb
cwtl
dec
push
sub
lahf
lock
cld
pop
jmp
hlt
xorl
xchg
fstps
sub
repnz
dec
icebp
sti
rol
mov
pushf
stc
push
add
mov
js
fwait
leave
daa
jg
enter
ds
sub
cmp
jg
cmp
sahf
orl
add
add
add
mov
sbb
push
mov
ds
stos
xchg
fbld
xchg
inc
lcall
in
mov
fstpl
cmp
push
icebp
mov
mov
mov
dec
aaa
xchg
sbb
lods
pop
call
dec
pop
aaa
aas
pop
ljmp
outsb
jp
stc
mov
pusha
xor
mov
jg
mov
ds
fildll
jecxz
inc
xchg
lea
push
push
ss
cmp
fldl2t
mov
jno
es
ljmp
das
push
scas
std
test
ja
dec
mov
scas
pop
pop
sub
gs
and
icebp
inc
jns
pusha
out
dec
lea
scas
adc
sub
push
pop
outsl
popf
mov
movsl
xor
cmp
enter
inc
sub
and
in
insl
int3
leave
mov
add
jmp
ds
repz
aam
adc
and
testb
add
pop
cs
movsb
test
mov
push
sti
xchg
push
or
xchg
adc
repz
lods
pop
adc
xor
cmp
inc
jbe
lds
dec
pop
mov
jp
sub
cwtl
and
sbb
xchg
aam
pop
adc
fcompl
xchg
lds
ss
cs
xchg
add
daa
adc
pop
mov
cmp
push
or
shl
jno
insb
push
cmp
sub
xor
jp
fwait
and
scas
andl
cmp
fwait
jmp
pop
jb
ljmp
jae
xchg
das
xlat
js
inc
xchg
jl
push
mov
jmp
push
push
outsb
jmp
pop
pop
sbb
jl
sbb
stc
xchg
mov
fcompl
jp
fsubr
es
sbb
addr16
adc
mov
add
add
mov
jne
jnp
iret
mov
testb
add
fiaddl
out
cs
adc
dec
pop
sbb
pop
aad
dec
sbb
aas
dec
mov
inc
mov
scas
pop
jle
mov
mov
sbb
mulb
dec
push
mov
jnp
add
xor
nop
cld
add
les
test
das
stc
sub
ljmp
add
fimuls
mov
lret
aad
popa
pop
mov
mov
cmp
adc
pop
imul
das
nop
adc
es
jae
mov
push
lcall
std
mov
mov
outsl
hlt
push
aaa
test
jo
daa
mov
leave
divl
push
stc
lock
push
ss
stos
xchg
int3
pop
mov
cmpsl
rclb
jo
cmpsl
push
mov
std
sbb
jle
stos
andb
stos
and
sarb
jecxz
enter
and
out
xchg
or
add
enter
in
out
mov
dec
xchg
mull
arpl
roll
add
add
add
dec
sub
pop
xchg
out
rorb
adc
dec
jg
cltd
and
push
lahf
lock
movsb
adc
mov
dec
mov
cmp
call
mov
jg
cmp
fidivrs
lret
push
jp
push
test
and
mov
sbb
ja
ds
aas
mov
push
jle
gs
push
xor
inc
push
scas
inc
lds
test
shll
sbb
mov
push
inc
cmp
lcall
adc
sub
in
rorb
cmp
bound
xor
mov
lods
xor
mov
xchg
addb
push
je
cmp
push
inc
mov
and
in
xchg
in
test
mov
dec
push
pop
popa
push
das
and
leave
mov
jmp
and
add
jne
imul
cmc
call
or
test
rolb
add
add
add
jmp
repz
jmp
repz
sub
not
pop
loopne
add
xchg
pop
jnp
adc
in
pushf
mov
lret
push
jmp
or
ljmp
inc
fdiv
test
jo
cmpsl
daa
in
insb
sbb
xor
outsb
and
sub
test
cltd
add
inc
fiadds
xor
sub
popa
and
add
and
or
pop
clc
add
inc
sub
pushf
in
cmp
jns
mov
mov
aas
fmul
mov
pop
in
int3
bound
ljmp
push
mov
sbb
jl
call
stc
xchg
jl
add
das
dec
std
xor
push
repnz
xor
or
aad
je
cmp
mov
aas
out
icebp
jl
mov
pop
jg
aas
dec
adc
call
lret
addb
movsl
mov
iret
xchg
xor
imul
add
add
add
arpl
xchg
stos
push
pop
inc
sub
cmp
and
mov
fs
cmovnp
nop
loopne
cmpb
push
data16
shl
jle
pop
mov
mov
xchg
lret
mov
add
sbb
mov
scas
mov
and
add
test
sbb
gs
stos
mov
das
call
inc
mov
sbb
fldl2e
jle
sub
fnclex
mov
out
dec
lea
outsl
pop
or
out
imul
mov
int
jmp
push
ficompl
sbb
jle
lret
stos
pop
cmpsl
jnp
shlb
jmp
mov
dec
insb
and
inc
pop
xchg
mov
outsl
outsb
cld
mov
inc
sarb
sbb
cmp
mov
push
outsb
push
adc
divl
ja
push
scas
add
dec
sub
push
add
mov
out
out
out
into
gs
fsts
push
std
fcmovbe
aam
add
add
add
fdivr
jns
inc
pushf
fbld
sbb
xchg
add
xchg
mov
pop
test
xor
xorl
sbbl
cmpsl
jbe
inc
cwtl
sahf
dec
pop
adc
fstpl
scas
sub
cmp
and
and
mov
js
std
ja
repnz
push
jp
cld
imul
jmp
pop
insb
and
pop
scas
jne
test
jmp
xor
xchg
jnp
insl
aas
cmpsb
ds
adc
and
xchg
fsubrs
or
ljmp
xor
js
jl
mov
cmp
dec
test
fsubl
jns
arpl
mov
push
push
inc
push
lds
andl
mov
mov
filds
stos
xchg
enter
sub
adc
aaa
jnp
or
xchg
add
loopne
and
je
out
mov
sub
adc
aad
add
add
add
stc
or
call
out
lds
or
add
xchg
xor
and
mov
dec
cmpsb
jecxz
dec
cwtl
stos
or
sbb
cmp
add
icebp
rorb
xor
popf
xlat
hlt
adc
adcl
repz
jmp
cmp
js
and
add
cmp
daa
mov
movsb
xor
lahf
icebp
sbb
paddd
or
or
int3
mov
pushf
push
rolb
dec
jl
mov
faddp
and
push
fcomps
mov
add
hlt
in
xchg
rorl
dec
mov
add
cmp
mov
cwtl
filds
icebp
push
js
shlb
cmp
in
daa
je
and
ljmp
push
rcrl
sbb
dec
mov
mov
and
add
dec
daa
dec
das
outsb
imul
enter
fcmovnbe
mov
add
add
fs
ss
lcall
lcall
cmc
jno
sar
sbb
jb
cmpsl
inc
pop
rcrl
je
pop
dec
adc
mov
jle
int
scas
es
add
mov
lret
out
push
xchg
daa
outsl
mov
add
mov
adc
clc
jbe
pop
dec
mov
mov
mov
arpl
outsl
cs
jecxz
jnp
sbb
js
int3
jg
pop
out
sti
int3
cmp
daa
mov
add
xchg
or
dec
aad
lods
jmp
stc
adc
pop
pop
and
adc
aad
jo
add
add
stc
mov
hlt
or
mov
scas
cmp
dec
js
xchg
mov
out
aam
imul
test
mov
lret
cli
imul
sarb
add
call
out
lahf
or
fdivs
mov
add
testb
add
movsb
inc
enter
inc
jne
adc
das
jnp
add
sbb
ds
or
out
lret
inc
iret
mov
fcoms
ss
out
shrb
out
mov
cwtl
adc
mov
pusha
in
cmp
add
insb
jnp
dec
mov
insl
mov
jecxz
inc
pusha
cmp
cmp
cmp
pop
xchg
xchg
jle
js
cmp
xchg
inc
xor
sarl
fst
nop
push
mov
dec
dec
dec
add
mov
push
out
push
dec
cmp
in
lret
fcomip
jecxz
fwait
dec
test
sbb
sti
push
xor
sub
enter
fcmovne
insb
add
jmp
xor
fisttpl
leave
mov
jnp
pop
mov
lods
sub
xchg
mov
dec
mov
dec
fidivrs
sbb
cmp
jne
inc
add
mov
mov
mov
ficoml
inc
std
pop
in
fadds
add
add
add
mov
pop
xchg
testb
xchg
mov
popf
je
jo
scas
out
jmp
sbb
fnstenv
pop
push
mov
adc
repz
add
jecxz
push
jnp
cs
cld
shl
ret
pop
inc
mov
adc
adc
or
adcb
dec
pop
mov
sbb
xor
cmp
adc
jb
add
vinserti64x4
rcrl
loopne
mov
fmuls
cmp
les
inc
std
dec
jmp
mov
stc
adc
mov
xor
push
inc
lods
shl
add
shll
cmp
adcl
les
out
pop
stos
dec
in
pop
fildll
xchg
insb
inc
mov
js
add
xor
add
sbb
sbb
test
fisubs
flds
add
add
add
adc
pop
jecxz
test
divl
les
cs
jle
push
fisttpll
or
or
jle
scas
imul
test
cmp
test
or
mov
mov
lods
xlat
cmpsl
rcl
insb
add
sbb
adcl
scas
and
or
cld
scas
in
inc
xlat
xlat
pop
adc
popf
or
push
xchg
mov
out
cmp
fdivrp
rcr
mov
enter
sbb
iret
dec
adc
scas
mov
inc
fimull
jnp
or
and
jg
and
sbb
lret
andb
jle
cmp
hlt
pmullw
sub
cmp
movb
push
lea
jle
push
sahf
and
inc
in
cmpb
addr16
mov
es
jnp
cmpsb
arpl
add
ds
sub
fiaddl
add
add
add
imul
mov
int3
or
inc
add
test
xor
and
and
inc
adc
push
fwait
test
push
mov
jecxz
xchg
call
fnstenv
rcrl
fdiv
pop
mov
xor
add
push
xor
push
jnp
cltd
inc
pop
mov
repz
sbb
daa
mov
mov
cmp
push
or
jno
es
insb
les
xor
les
adc
sarl
sub
sub
int3
jbe
xchg
jae
fwait
dec
out
mov
std
popa
dec
add
sub
and
pop
or
or
or
mov
cmpsl
das
fcomps
xchg
aas
pop
jo
cld
enter
and
mov
outsl
std
out
sub
inc
jecxz
mov
push
insl
add
sbb
ss
lods
cmpsb
add
xchg
and
idiv
lahf
insl
mov
out
mov
mov
add
testb
add
xchg
clc
rcrb
adc
rcrb
xor
leave
lods
repnz
xchg
xor
dec
sbb
cmp
cs
sbb
cmp
insb
push
mov
adc
inc
sbb
adc
or
xchg
pusha
fldl
lcall
ret
pop
ret
loopne
adc
or
jl
inc
push
fwait
or
add
das
stos
out
jne
or
icebp
xchg
sbb
inc
js
jnp
rsm
jae
xchg
in
addr16
push
pop
mov
jo
xor
shll
jbe
aad
outsl
loop
inc
rcll
mov
sarb
testl
int3
xor
mov
popa
cs
cmpsl
lods
lcall
adc
cmpsl
pusha
push
jge
jnp
das
imul
add
add
inc
loopne
mov
xlat
inc
pop
xchg
sbb
mov
repnz
popa
xchg
sbb
sti
mov
add
cmp
jg
loope
cs
rclb
sbb
add
add
add
popl
mov
adc
mov
mov
or
into
std
sub
jbe
mov
push
jg
sub
mov
jl
adc
dec
pop
or
inc
sub
sahf
scas
xchg
sti
clc
jmp
mov
and
loop
int3
fcmovbe
xchg
add
andb
cli
cmp
xor
idivb
mov
icebp
ucomiss
nop
mov
xor
dec
movsl
sbb
popa
xchg
arpl
stos
leave
pushf
fmuls
cmp
leave
mov
call
movsb
cmp
xchg
or
xchg
filds
pusha
std
dec
and
jno
insl
dec
cs
imul
arpl
cmp
ja
shrl
lcall
repnz
jp
enter
decl
adc
mov
nop
stos
pop
cld
xchg
aaa
lret
lds
addl
push
xchg
ja
and
pop
adc
push
cs
in
add
imul
xor
cmpl
add
add
add
jb
dec
mov
insl
cmpsl
dec
inc
aam
popf
push
xchg
pusha
push
aaa
jmp
add
or
gs
stos
add
cld
dec
stc
lcall
scas
mov
aas
dec
inc
push
out
mov
fneni(8087
cmovbe
pop
movsb
or
test
loop
mov
cwtl
inc
pop
mov
pop
inc
push
js
movl
dec
inc
scas
lods
stc
adc
into
sti
mov
sar
sub
jmp
mov
pushf
shl
aas
mov
jne
testl
cmc
pop
xor
scas
enter
sti
push
aas
inc
pop
jecxz
mov
dec
dec
or
push
pop
adc
loopne
xchg
jb
sub
je
call
out
test
mov
dec
out
xchg
jp
into
xlat
shlb
jae
ret
rclb
pop
popf
fcom
in
mov
mov
mov
xor
out
fldcw
push
xchg
fsubrs
xor
das
or
testb
add
xchg
jp
push
lahf
and
iret
add
leave
dec
or
jmp
mov
pop
pop
movsb
pop
xchg
xchg
pushf
mov
and
pusha
jmp
cmp
pushw
inc
int
sbb
jp
cmp
lods
clc
shrb
test
idiv
jecxz
int
frstor
inc
or
jne
ficoms
adc
paddd
js
lret
adc
and
mov
adc
pop
cmp
cmc
adc
mov
and
push
lret
shll
pop
pop
into
and
movsl
adc
adc
sbb
loopne
mov
jns
push
cmp
jecxz
and
stos
and
xor
mov
xchg
xor
and
int3
repnz
arpl
xchg
iret
push
ffreep
mov
jns
rcrl
adc
test
test
add
sbb
sahf
cmc
fsubrp
jnp
mov
popa
cld
filds
add
add
add
aas
inc
and
push
movsl
mov
in
or
insl
test
iret
cmp
xchg
fcompl
dec
mov
pushw
lock
std
popf
rorl
mov
ja
call
loop
aaa
stos
cld
pop
xor
out
hlt
xchg
in
cltd
scas
pusha
jne
mov
dec
or
mov
in
repz
in
popa
lock
and
or
out
adc
test
xchg
sub
xor
lcall
cmpb
movsl
mov
dec
mov
sub
jne
frstor
js
stc
insb
mov
and
adc
mov
xchg
push
inc
inc
imul
mov
idiv
add
ja
jno
xor
or
loopne
xchg
sbb
add
je
push
fs
push
outsb
cld
mov
rcll
bound
mov
rcrl
repnz
sahf
push
loope
fiadds
add
jle
jg
std
fldt
cmp
sub
add
add
add
sub
push
sbb
pop
fs
ret
lret
mov
fistpl
mov
repz
nop
test
insl
xchg
mov
out
js
popa
xor
xor
repz
stos
rcrl
push
sti
mov
pop
sub
mov
mov
cmp
andb
in
push
shr
push
or
cwtl
mov
pop
div
into
xchg
cmpsb
rolb
sub
sbb
hlt
mov
pop
out
inc
xchg
jg
sarl
insl
mov
mov
je
jl
ret
ret
stos
push
leave
push
pop
inc
push
ret
xor
repnz
imul
clc
mov
insb
jno
or
jmp
rorl
mov
jns
fs
in
lods
rolb
mov
pop
das
jb
pop
test
jns
dec
iret
adc
xchg
dec
sub
push
add
mov
sti
idiv
lods
jne
adc
addr16
push
loope
add
add
add
loopne
pop
in
mov
adc
addr16
pop
fs
sbb
sbb
movsl
push
shlb
pop
pop
push
cmp
ds
scas
mov
push
aas
cwtl
add
int
xor
test
nop
xor
xor
cmp
or
outsb
mov
sub
cmpsl
movl
inc
lock
sbb
xor
cmp
dec
outsb
int
ret
sub
lcall
outsb
jecxz
loop
adc
dec
push
push
mov
cmp
sbbb
stc
sahf
outsb
or
xchg
inc
fcomp
stos
sub
je
lock
imul
pop
sub
add
xor
push
jbe
mov
rcl
jl
clc
loop
dec
cmp
mov
add
adc
xor
ss
xor
pop
jae,pt
popa
pop
lock
adc
leave
jmp
mov
ja
add
add
testb
add
cmp
cmpsb
mov
mov
push
fcmovbe
cwtl
movsb
jge
loopne
pop
shlb
stos
jae
sub
imul
fwait
repz
mov
daa
mov
fildll
xor
xor
jno
sub
pushl
rolb
cmp
jp
test
call
lcall
xchg
xchg
outsl
cmp
jns
mov
xlat
xor
mov
icebp
arpl
lds
mov
lcall
and
dec
movsb
loop
shlb
mull
mov
jno
mov
rorl
xchg
mov
jmp
daa
out
cli
jne
inc
dec
popl
pop
sbb
sbb
pop
mov
xor
cs
bound
xor
jmp
cld
stos
cmc
movsl
fcoms
cmc
pop
dec
insb
fcomps
xor
push
mov
add
cmpsl
fimull
jp
dec
cmp
cmp
add
testb
add
jmp
andl
or
xchg
std
add
popa
push
and
mov
and
aad
ret
cld
mov
roll
int
cli
mov
aad
mov
add
ds
aaa
pop
movsl
stos
xchg
xor
mov
sbb
lds
add
xor
inc
xchg
jge
lods
jmp
outsb
sub
add
sbb
rclb
xchg
mov
std
out
addr16
push
gs
mov
shrl
scas
pusha
pop
inc
or
xchg
mov
add
sub
movl
add
mov
pop
fcoml
movsb
dec
cmp
or
adc
mov
xchg
adc
dec
pushf
ja
pop
xchg
inc
push
int3
outsl
xor
push
mov
push
and
mov
movsl
push
pop
jecxz
ficoml
xchg
xchg
add
mov
lcall
mov
popa
xor
add
testb
add
pop
push
sbb
imul
push
subl
or
xchg
fwait
sbb
push
inc
add
and
jne
cmpsl
add
dec
jne
push
xor
popf
cmp
pop
outsl
sbb
xchg
subb
rcl
out
inc
bound
cltd
dec
inc
add
push
les
mov
scas
mov
lahf
aaa
mov
jg
in
pop
mov
mov
movsl
mov
push
sti
mov
rcrl
jne
insl
inc
cmpb
jb
mov
push
stc
testb
outsb
dec
imulb
xchg
fidivrl
cmpsb
ds
mov
mov
or
into
sub
std
mov
dec
mov
gs
idivl
ret
pop
mov
xchg
mov
icebp
adc
inc
push
xor
push
stos
aad
jb
cltd
ret
negl
mov
into
int
call
mov
adc
add
add
mov
jns
daa
data16
sub
add
testb
add
xor
lret
cmpb
in
addr16
aad
jno
les
cld
mov
cmp
cmp
inc
addr16
repnz
add
mov
in
inc
loope
xor
sahf
fistpll
mov
push
push
imul
or
outsb
push
xor
jae
lods
dec
repnz
loop
pusha
jno
jo
xchg
cld
inc
enter
dec
std
xchg
mov
dec
mov
push
mov
pop
bound
loope
ret
mov
xchg
inc
xor
adc
mov
jl
or
mov
fldenv
out
cli
sbb
ljmp
mov
mov
inc
lea
pop
lods
jp
loopne
stos
sub
or
adc
adcl
imul
mov
mov
jmp
rorb
dec
and
jle
das
sqrtps
int
int
adc
dec
mov
add
fadd
fsubp
jnp
push
xor
dec
push
out
add
add
add
xchg
jae
xchg
popa
lret
mov
repnz
xorl
jmp
pop
mov
imul
cwtl
jle
dec
push
xchg
add
je
cltd
sti
scas
in
xchg
ret
loop
mov
stos
jbe
out
clc
sahf
or
add
inc
and
xchg
dec
test
mov
xorl
sub
test
adc
adc
cmp
adc
xor
out
jo
popf
lock
xchg
jmp
sahf
mov
push
ss
call
outsl
js
push
or
mov
dec
inc
jp
add
sub
jg
into
cld
mov
inc
mov
call
or
data16
fildl
inc
decl
sub
loope
lret
orl
test
bound
movsb
pop
mov
xor
mov
add
push
cmp
sub
cld
cli
jle
addb
adc
add
testb
add
in
xor
sahf
shlb
sbb
bound
cmpsb
movsb
xchg
lods
cmpsl
gs
xchg
loope
xchg
les
rolb
and
inc
inc
adc
stos
adc
jg
popa
sub
arpl
dec
push
xchg
fldl
sub
ja
adc
pop
js
xor
add
adc
hlt
imul
stos
adcl
test
adc
xchg
cmp
es
inc
pop
out
mov
addr16
or
dec
pop
insb
in
jne
xchg
mov
push
xchg
add
lret
xor
aad
mov
sub
mov
adc
push
nop
lcall
fisubrl
push
add
in
call
pop
fisubrl
in
adc
adc
lea
pop
jbe
ja
sti
dec
push
sbb
push
call
add
xchg
movsl
add
push
ret
and
mov
push
shll
xchg
xchg
iret
aam
in
out
xchg
loop
stos
or
or
fldt
sub
shlb
mov
out
push
in
out
es
dec
and
std
or
das
xchg
xchg
lds
sbb
adc
or
lret
push
je
pop
mov
insb
push
jge
mov
inc
push
jb
cmp
in
mov
fisubs
ret
popf
jno
jecxz
arpl
cmp
mov
sub
cmpb
in
xor
in
xlat
dec
jns
and
ja
fistpl
js
dec
test
out
add
punpckhdq
enter
adc
cmp
and
mov
inc
xchg
inc
dec
dec
icebp
mov
add
into
arpl
inc
push
cmc
or
lret
add
add
testb
add
in
xor
push
cld
jecxz
add
ljmp
xchg
dec
mov
jmp
inc
jge
repnz
pop
sub
and
mov
mov
shlb
dec
cmpsw
test
add
push
jno
mov
in
jge,pt
add
push
mov
add
out
pop
pusha
cmp
inc
or
repnz
mov
aad
add
out
rcll
and
imul
push
ret
push
mov
ljmp
mov
leave
pop
push
mov
or
adc
and
shll
push
pop
push
xor
cmp
aam
les
dec
fistpll
mov
loope
push
aaa
cmc
mov
scas
mov
and
sbb
cwtl
daa
mov
jnp
pop
loope
lret
xchg
push
jl
sub
jp
lret
xor
add
mov
add
cltd
cmc
adcb
fcos
pavgw
mov
imul
add
testb
add
or
push
js
cmp
testl
adc
popa
fidivs
xchg
jg
das
mov
fs
pop
and
adc
fwait
enter
adc
inc
shlb
stc
mov
repz
push
pushf
or
adc
ret
in
cltd
aam
popa
push
jmp
jmp
and
repnz
test
xchg
cmpsb
mov
imul
cs
adc
mov
or
lods
stos
push
ret
xchg
mov
sub
push
repz
js
lcall
fnstsw
inc
xchg
mov
arpl
lods
pop
les
pop
and
incb
fiaddl
jle
xchg
inc
sbb
xor
test
xor
sbb
mov
sahf
addr16
pusha
leave
xor
fwait
sub
loop
arpl
add
repz
lock
jg
mov
cmp
add
testb
add
mov
adc
inc
outsl
push
std
cwtl
push
sbb
push
loop
xor
sub
sahf
cs
or
loope
jb
mov
xor
mov
dec
sbb
add
pop
mov
mov
lret
sbb
xchg
jp
adc
jnp
movsb
xchg
inc
lret
scas
es
fisubl
add
nop
push
sub
mov
sbb
xchg
in
pop
jb
inc
cmp
jns
sar
lods
leave
xchg
xor
mov
lret
out
inc
cmp
popf
cltd
dec
jmp
or
shlb
lods
incb
jnp
inc
adc
enter
std
or
xlat
pop
and
mov
negb
in
inc
fldl
mov
sbb
iret
cmp
out
mov
xchg
xchg
in
lahf
jno
xor
pusha
jo
inc
enter
jb
add
add
xchg
fwait
cwtl
pop
popf
pop
xlat
fisttpl
loopne
cld
loop
add
testb
add
aaa
xor
jge
push
jno
cmp
push
mov
sarl
in
sahf
xor
ljmp
cmc
cmpsb
aas
ljmp
loop
scas
popa
sub
mov
sub
inc
jb
or
jmp
test
das
movsb
out
jns
sahf
loopne
or
sub
lret
fildl
sarb
jae
std
pop
sub
add
outsl
xchg
jae
jbe
adc
inc
inc
cli
imul
dec
fnstenv
push
add
ss
subb
or
add
inc
push
scas
pop
loop
sti
jl
jbe
lods
cs
adc
shl
inc
pop
hlt
imul
icebp
pop
push
fsubl
sub
sub
cli
dec
or
mov
mov
adc
sub
fcmovnb
in
mull
mov
push
mov
lret
loop
lcall
stc
mov
dec
js
stc
mov
push
nop
aad
sbbb
in
add
testb
add
fsubrl
jb
out
lods
inc
dec
lock
xor
pop
fsin
rdmsr
ret
cmpsl
addb
popa
or
mov
jne
mov
sub
movsb
aam
shlb
int
jmp
mov
scas
dec
pop
mov
inc
jge
ss
mov
lods
es
fsubr
or
popf
jnp
mov
cmp
mov
dec
jbe
jge
cmp
cs
jmp
cmp
aas
repz
iret
jge
sbb
xor
cmp
aas
sub
sahf
aam
fnstsw
lret
mov
and
push
addr16
es
jl
repnz
stos
lcall
xchg
mov
dec
add
hlt
pusha
scas
mov
stc
and
andb
cld
repz
jbe
adc
adc
aaa
mov
int
sub
jnp
repz
jbe
ljmp
mov
pop
insb
fildll
decb
add
movsl
sub
insb
into
in
add
testb
add
addr16
adc
mov
movl
flds
nop
lock
adc
dec
inc
mov
cmpsl
rolb
repnz
aad
aam
mov
iret
xchg
push
pop
scas
adc
jmp
testb
add
icebp
push
add
or
test
push
fmul
movsl
sar
mov
push
xchg
nop
mov
dec
cltd
and
mov
fldl
ret
dec
ret
xor
sbb
clc
test
and
sbb
mov
cmp
inc
hlt
int3
icebp
fsubl
and
hlt
adc
inc
movl
mov
fldenv
filds
cld
jbe
das
cmp
dec
push
popl
out
loopne
pop
lea
ljmp
outsb
mov
std
push
addb
cmp
jnp
sbb
fs
out
add
testb
add
or
jnp
dec
inc
xchg
xchg
inc
pop
lock
stos
xchg
mov
xor
inc
pop
mov
in
loope
inc
js
mov
stc
andb
fstl
lret
insl
mov
pop
loope
add
dec
sarb
dec
incb
cli
jns
testl
jb
pusha
scas
add
enter
sub
loope
add
pop
insb
jne
or
mov
jg
push
idivb
or
and
or
lds
scas
sub
sub
pop
pop
aam
dec
aam
mov
adc
cmp
in
sbb
xlat
adc
pop
loopne
lcall
in
icebp
int3
mov
je
and
mov
leave
bound
add
pop
loop
mov
subl
pop
stos
add
out
lods
xor
aas
xlat
jmp
popa
test
mov
add
add
test
xlat
jb
cltd
adc
xchg
jae
es
dec
fdiv
aam
xor
mov
hlt
sbb
les
rorb
sub
push
mov
inc
and
dec
cmp
inc
testb
jl
mov
sub
call
inc
xor
mov
push
mov
or
xchg
leave
movsb
sub
lods
aaa
mov
pusha
xchg
mov
stos
pop
pop
and
leave
jg
jo
cmc
inc
inc
call
loope
insl
or
dec
cli
add
inc
lcall
xor
lea
subl
adc
test
lar
xor
out
pop
xor
nop
test
cmp
sbb
cli
dec
mov
cmp
imul
and
lea
add
sub
add
jb
scas
cmp
int3
repnz
push
add
add
add
andl
ficompl
shrl
jmp
inc
sub
and
lock
hlt
mov
xchg
out
lahf
jmp
addr16
add
xor
jecxz
push
lahf
sub
adc
mov
fstpl
es
in
sbb
push
or
pop
sbb
test
mov
pop
pop
pop
stc
stos
push
sub
mov
addr16
add
jnp
xchg
add
mov
add
xchg
add
pop
pop
dec
push
sbbl
or
shll
test
rolb
mov
iret
push
or
incl
lret
mov
pop
in
fisubrl
and
or
fisttps
xchg
mov
fcom
test
fsubrs
sub
add
es
jg
inc
cmc
leave
mov
sbb
test
jb
push
sub
mov
addb
mov
xlat
mov
bound
jnp
cmpsb
icebp
add
testb
add
xchg
xchg
pop
push
out
push
scas
xor
inc
lcall
sbb
sbb
int
mov
test
test
faddl
cs
sub
dec
xchg
adc
mov
mov
add
mov
fcmovbe
in
lods
cmp
mov
pusha
jl
notb
daa
dec
pop
pop
out
mov
sbb
outsl
testl
push
sbb
mov
imul
adc
test
xchg
lret
sub
mov
rclb
test
cmpsl
push
xor
std
push
inc
and
or
vaddsubps
outsl
out
inc
in
push
addb
movsb
sbb
ljmp
in
ja
push
cmpsb
dec
inc
pusha
push
testl
jp
mov
push
repnz
and
sbb
notl
mov
inc
push
add
fcom
repz
rolb
add
mov
aas
jp
int3
icebp
inc
adcb
add
testb
add
ror
out
cmp
cltd
xchg
test
xor
mov
in
jne
mov
out
in
sbb
push
ficomps
loop
sbb
or
rcll
leave
mov
test
xor
xchg
aad
aad
xor
pop
pop
fildl
sbb
loope
and
rclb
xor
stc
xor
xchg
stos
test
loop
inc
in
jo
adc
jb
inc
ret
pop
push
inc
mov
mov
jecxz
rorl
test
xchg
stos
imul
lea
push
mov
and
sbb
push
add
in
inc
sarb
adc
cli
pushf
clc
test
cmpb
jg
fadds
mov
dec
mov
jo
dec
dec
fsts
insb
dec
movsl
sub
xchg
inc
or
cmp
sti
xchg
add
loop
fadd
sti
mov
sbb
add
testb
add
rorb
mov
mov
movsb
outsl
add
faddp
xor
fwait
cmpsb
inc
and
lcall
outsl
sbb
mov
outsb
cmovo
cmp
fwait
repz
or
clc
aas
ret
and
push
dec
leave
push
mov
sbb
push
mov
mov
and
pop
xchg
and
pop
xchg
aam
aaa
jmp
sub
sarl
mov
out
test
fcomps
push
das
jns
bound
idivb
mov
aaa
aaa
lods
inc
fldl2t
insb
or
mov
cmp
xor
mov
ljmp
jne
inc
aaa
out
cmpsl
stos
cmp
sub
jg
xchg
out
fldcw
outsb
lds
pusha
sarb
push
stos
dec
inc
shll
outsl
jns
popa
push
lds
insl
fldl
add
into
adc
neg
jge
push
xchg
sbb
add
add
add
sbb
jge,pn
and
jp
mov
mov
cmp
in
jmp
lock
xchg
jmp
push
jbe
jecxz
and
cmpsl
popa
leave
scas
inc
jmp
and
iret
xchg
shrb
bnd
and
or
aam
push
push
mov
bnd
xchg
in
icebp
addr16
cltd
push
or
out
imul
jg
fs
lods
pop
in
shl
cmc
addr16
jne
test
add
xchg
imul
out
dec
adc
leave
roll
sbb
adc
mov
in
dec
sbb
jno
xchg
inc
sub
imul
xlat
jnp
adc
sbbl
mov
dec
hlt
movsl
test
pushf
cwtl
dec
cmpsb
add
in
xchg
jecxz
fidivs
pop
jne
cld
cmp
mov
or
add
pop
cmp
outsl
jg
jg
mov
xor
imul
add
rcrl
es
in
xlat
jb
mov
ret
pop
xor
push
cmc
xchg
jmp
mov
xor
mov
xchg
test
popf
adc
add
pop
sub
dec
lds
inc
movsb
fadds
pop
and
mov
pop
cld
enter
popf
xor
loope
mov
lret
scas
test
test
cld
imul
mov
xorb
js
pushf
push
cmp
xchg
jg
mov
imul
aam
or
dec
push
mov
jo
into
jo
out
adc
cmp
shrb
xchg
rolb
dec
hlt
sbb
push
loop
push
dec
jp
leave
fnstsw
inc
cmp
frstor
inc
mov
aad
std
cld
push
sub
dec
enter
loope
rorb
inc
lret
add
ret
ja
and
aaa
negl
and
adc
add
add
add
and
mov
lahf
ss
movsl
mov
sub
lahf
xor
pushf
ret
rorl
mov
sahf
icebp
or
jl
loopne
iret
xchg
inc
mov
lcall
dec
out
test
cmc
arpl
jg
mov
xchg
cmc
mov
jecxz
test
inc
fs
adc
decl
sbb
jge
lods
fmull
xor
clc
inc
repz
cmp
ljmp
call
mov
jge
push
adc
insl
sub
jecxz
pop
jo
mov
jb
fwait
in
inc
aad
inc
or
pusha
rorb
pusha
test
out
add
popa
stc
push
bound
ljmp
fsubrs
push
pop
fs
mulb
lods
cli
sbbl
xor
or
add
mov
cmc
mov
aad
sti
and
testl
add
rorl
jp
jp
push
lods
jmp
xchg
jo
jg
lods
xchg
cli
mov
fs
insb
nop
adc
fsin
sarl
cmp
mov
xor
or
adc
mov
pop
out
pushf
xchg
loope
scas
scas
cs
addr16
lods
test
sbb
jbe
std
cltd
or
sbb
pop
or
outsl
dec
enter
fwait
xor
test
pop
jne
and
and
lahf
mov
sbb
mov
ret
or
into
movl
xchg
sarl
ljmp
fisttpll
inc
cmp
fwait
cmp
loop
jecxz
pop
les
mov
mov
xor
xor
loopne
fcomp
cmp
repz
neg
mov
or
scas
mul
ret
jecxz
xchg
and
hlt
inc
mov
sbb
testl
add
jne
cmp
pop
or
clc
add
testb
add
mov
stos
out
repz
cmp
aad
adc
mov
mov
mov
xchg
mov
sub
cmpb
cmp
mov
std
stc
sub
fdivrl
test
aam
xor
outsb
aas
cld
push
cmp
push
mov
push
hlt
adc
call
sbb
into
push
lahf
idivb
jl
inc
xor
lea
je
cmp
adc
push
lods
sbb
or
pop
shlb
std
mov
lea
rcr
sub
cltd
jmp
xor
lret
mov
mov
out
pop
xchg
movsl
sub
lods
xlat
xchg
repnz
push
cltd
inc
xor
cmpsb
scas
lods
mov
je
cmp
pop
decl
mov
pop
push
add
adc
lds
add
add
imulb
testb
jecxz
push
stc
add
testb
add
inc
mov
mov
loopne
decl
sub
clc
xor
dec
mov
orb
scas
ret
jg
out
sbb
mov
sub
lods
sub
dec
rcr
inc
dec
jge
shll
mov
xchg
hlt
ret
mov
add
stos
sbb
xchg
pushf
sub
fmull
les
cmc
dec
js
mov
sbb
out
sarb
and
push
or
mov
hlt
repz
rcrb
cmp
pop
mov
repz
daa
lock
jo
mov
es
pusha
sbb
push
adc
call
sti
filds
mov
movsl
mov
pop
andl
or
lret
add
pop
sub
cs
mov
mov
xchg
pop
adc
and
sub
fs
xor
ficompl
cmpsb
pop
push
es
pop
add
ret
add
xor
xchg
fwait
bound
mov
push
dec
cli
add
testb
add
popf
or
add
loope
jnp
in
push
in
mov
mov
mov
lcall
sub
push
loop
and
add
mov
push
stc
lods
lock
pop
mov
mov
or
sti
sbb
or
int3
mov
test
jb
xor
pop
mov
out
mov
enter
mov
pop
aam
sti
jmp
xchg
or
shll
faddl
icebp
xor
and
jno
push
jnp
mov
add
das
xor
shrb
xor
cmp
je
rolb
inc
mov
aad
ja
les
dec
idivb
arpl
sbb
mov
hlt
sub
notb
xor
fwait
test
daa
data16
arpl
hlt
sbb
adc
int
in
idivl
pushl
aaa
pop
repnz
sti
add
testb
add
fimuls
loope
mov
lea
dec
inc
push
inc
scas
cmp
imul
mov
push
mov
mov
loope
pushf
leave
and
push
gs
mov
add
add
ljmp
cmp
adc
mov
push
or
scas
data16
mov
inc
shlb
divb
pusha
mov
sbb
push
test
in
in
sbb
stos
shll
movsb
jg
fwait
xchg
stos
gs
pop
pusha
ss
push
and
dec
dec
mov
aaa
das
cli
adc
pushf
inc
adc
call
jno
push
pop
cmp
xchg
ljmp
mov
xchg
lret
aad
lret
push
inc
add
sbb
push
lcall
xor
clc
pop
pop
aam
hlt
jnp
and
jae
ljmp
xchg
mov
pop
lahf
pop
add
pop
es
inc
cli
aas
push
ljmp
cmp
add
testb
add
shrb
pop
lds
loop
sbb
into
push
lret
mov
loope
in
pushf
out
jp
and
pop
and
cmp
jne
jl
xchg
mov
pop
popa
push
jmp
int3
in
xchg
or
dec
xor
in
push
jns
or
outsb
jecxz
and
enter
loopne
mov
test
iret
cwtl
mov
mov
mov
je
sub
jo
scas
ficompl
rclb
fists
sub
push
inc
popl
inc
dec
mov
int
iret
mov
and
jge
and
xchg
sbb
orb
sbb
mov
sarl
ds
push
je
mov
gs
cmp
bound
lds
push
dec
jge
pop
push
fwait
pusha
add
inc
adc
and
or
arpl
nop
cwtl
sti
xor
lcall
lcall
add
mov
lcall
fdivs
mov
testb
add
std
mov
inc
bnd
or
lds
lahf
sub
movsb
nop
mov
test
mov
test
mov
adc
pop
dec
bound
notl
push
cli
mov
notb
fwait
aaa
sub
mov
and
inc
test
movd
cmp
mov
clc
adc
addps
mov
iret
xlat
shlb
fwait
movsb
adc
and
imul
insb
mov
add
icebp
inc
inc
jmp
add
adc
inc
fdivl
or
mov
dec
pusha
or
lods
das
mov
out
shrb
push
das
mov
cmpsb
mov
adcl
pop
sbb
xchg
fidivl
mov
fidivs
pop
jbe
rcrl
fiadds
add
jae
cltd
dec
mov
fs
add
testb
add
sub
outsl
insb
mov
cmp
mov
inc
mov
in
push
or
fisttpl
loop
cmp
rcll
sahf
pop
push
movsl
and
jp
shr
jne
jne
sbb
cmp
or
adc
cmp
scas
mov
int3
push
inc
jno
or
aas
addl
rcrl
cld
dec
lock
sbb
mov
push
test
call
inc
add
xchg
stos
mov
and
lds
push
daa
fisttpl
xor
cli
add
out
lods
dec
mov
lret
mov
vmwrite
orl
xor
cmpl
push
sub
mov
fnstcw
fistl
mov
and
xchg
dec
inc
int
fiaddl
jecxz
xor
dec
and
js
add
push
into
nop
out
cwtl
jle
xlat
movsb
add
cmp
sbb
add
testb
add
and
jb
cld
sar
and
sbb
jne
loop
or
mov
xchg
jb
mov
push
aaa
fs
test
jbe
lea
sub
test
fidivl
mov
and
add
hlt
out
inc
pop
mov
test
cmp
adc
scas
cwtl
sbb
push
loopne
or
popa
mov
ret
pop
mov
js
stos
outsl
cwtl
enter
xlat
add
adc
sub
or
pop
jno
sub
cmp
stos
push
mov
out
mov
subl
mov
fsubrl
ss
out
adc
sbb
into
mov
dec
popa
add
mov
cmpsb
dec
mov
mov
testb
cmpsb
inc
pop
sbb
inc
xchg
call
stc
mov
movsl
int3
push
xor
and
ja
pop
int
push
push
faddl
add
test
jg
xor
or
test
out
add
add
add
add
pop
inc
shl
fdivrl
pop
jne
popf
pop
test
int3
pop
dec
sub
test
daa
rolb
test
iret
setp
test
xor
and
adc
daa
jge
imul
les
jge
and
and
movsl
lret
jle
dec
fs
adc
push
lds
cmp
es
sub
push
xchg
stos
dec
fldenv
mov
cmp
jae
fcmovnbe
negb
mov
fs
jp
or
mov
xchg
je
mov
xchg
lahf
and
adc
into
mov
pop
cmp
ror
sub
cmp
sub
mov
scas
push
icebp
sub
mov
mov
lods
sbb
xchg
mov
mov
into
icebp
das
js
fcoms
sub
dec
addr16
mov
shll
das
add
adc
movsb
push
in
cmc
jne
pop
adc
pop
testb
push
add
add
add
add
insb
cs
or
push
int3
mov
add
mov
shlb
mov
sti
outsl
jno
mov
mov
jae
mov
sar
sub
loopne
sbb
adc
insb
movsb
xlat
push
fcomp
aaa
dec
dec
jg
mov
incb
pushf
mov
inc
int
out
mov
cmpsl
sahf
fidivs
lods
and
dec
stc
lds
pop
mov
ja
fnstcw
or
int3
xchg
jb
cmp
enter
rcrb
cmc
arpl
es
sbb
pushl
aam
das
jae
mov
into
lret
push
ja
push
push
xor
adc
roll
fsubs
addb
sub
cmp
mov
daa
jbe
pop
mov
inc
pop
xor
add
lock
ds
mov
push
jbe
lock
fiadds
add
out
shlb
aas
out
fwait
aaa
call
cld
add
add
add
add
inc
mov
push
lahf
pop
push
repz
shrb
lret
clc
sub
dec
xchg
sub
push
es
fsubr
mov
std
hlt
ret
push
inc
sbb
ljmp
mov
mov
test
js
or
sbb
aas
mov
scas
pop
nop
cltd
pop
jge
mov
aas
add
cmp
movsb
jmp
jo
pop
xlat
xchg
gs
adc
dec
aam
lret
clc
cmp
xchg
mov
in
xorb
push
jg
andl
orl
mov
cmpsl
sbb
xchg
fnstenv
popa
pop
or
loopne
and
dec
cwtl
div
mov
or
dec
push
inc
cmp
outsb
add
into
push
xchg
out
shr
inc
mull
or
and
sbbb
cmpl
add
add
mov
lcall
les
add
testb
add
mov
ljmp
sbb
scas
mov
mov
cmp
xor
lods
test
xchg
dec
fiadds
dec
pop
lret
imul
or
in
sbbb
aaa
cltd
inc
leave
and
loope
mov
insb
mov
add
xchg
insl
pop
xchg
sbb
in
dec
add
mov
movsl
xchg
scas
loope
aad
cmp
shll
lahf
mov
ljmp
mov
jl
int
int
push
pop
roll
lahf
lds
jp
mov
push
loope
cltd
sub
test
lret
incb
sti
push
scas
lock
sub
fildl
aad
jecxz
mov
popa
testl
sbbb
jne
stc
mov
cmp
pushf
xor
jno
fcom
jae
stc
fidivrl
rolb
add
ret
bnd
rorb
cltd
jl
movsl
mov
add
add
add
add
in
lahf
loop,pn
push
insb
repz
sub
mov
adcl
xchg
enter
sbb
push
pop
arpl
jge
orl
ds
aam
std
cmp
push
imul
cld
cmpl
jge
daa
add
pop
std
xchg
sbb
adc
xchg
inc
pop
fld
pop
xchg
add
stos
mov
leave
out
mov
inc
xchg
add
xchg
cwtl
mov
daa
sbb
inc
sub
push
pop
sbb
mov
rcrl
push
mov
lret
and
sub
insl
mov
stos
mov
sbb
jb
gs
out
sub
gs
insl
ljmp
out
bound
push
sahf
fcomi
jecxz
adc
mov
sti
mov
xor
cwtl
cltd
adc
ret
je
sahf
jae
in
push
aaa
xlat
xchg
sub
add
std
aaa
mov
lret
jne
in
fistl
lret
add
add
insl
test
rcl
dec
xchg
sub
and
loop
sub
test
lret
imul
dec
mov
scas
inc
xchg
jg
pop
dec
aas
pop
dec
int
outsb
sub
cmp
xchg
add
xor
aad
stos
jne
cmp
pop
push
cmp
push
int3
jo
jmp
rcl
das
cltd
adc
xor
and
stos
jge
mov
xchg
test
pushf
xchg
xor
push
mov
and
insl
cmp
dec
call
jmp
dec
sbb
in
push
mov
jp
int
xchg
xchg
in
ficomps
xchg
mov
sub
fistl
ss
mov
cmp
sahf
adc
pop
xchg
dec
push
mov
mov
or
dec
add
add
add
movl
add
lret
enter
mov
hlt
test
pushf
enter
movl
inc
mov
dec
mov
call
mov
call
pop
ljmp
cltd
mov
xor
add
mov
mov
xor
lret
ret
add
enter
dec
sbb
add
decl
test
dec
incl
inc
enter
ljmp
cld
decl
push
mov
and
pop
inc
mov
push
pop
movsb
dec
add
jne
lea
fs
decl
mov
test
add
xor
add
mov
or
inc
mov
popa
mov
cld
inc
cmp
lea
and
incl
mov
cld
add
xchg
sar
inc
incl
mov
xor
add
nop
inc
add
mov
add
add
incl
sbb
jne
mov
mov
movl
incl
test
inc
aas
inc
lea
inc
mov
mov
call
out
fisttps
jecxz
call
lea
call
add
add
test
wrmsr
jae
add
mov
add
add
mov
addl
mov
mov
dec
nop
mov
fadds
add
lea
pusha
push
incl
call
mov
mov
cld
mov
add
cmp
mov
mov
push
nop
incl
cld
add
mov
cld
push
nop
inc
add
add
ljmp
movntq
movl
test
jmp
int
sub
add
filds
cmp
je
movl
jne
mov
cld
jle
cmp
inc
call
add
add
add
xor
inc
add
mov
add
fmuls
cld
call
decl
add
push
es
inc
mov
decl
mov
call
inc
mov
add
mov
cld
mov
call
sub
cld
movb
xor
push
inc
mov
in
inc
lea
dec
cltd
mov
or
rorl
call
add
jge
mov
cld
lea
call
push
incl
mov
xor
add
cmp
jne
movl
add
mov
cld
test
mov
xor
test
mov
mov
mov
add
add
mov
add
addr16
je
mov
cld
sarb
pcmpeqw
xor
lea
add
cmp
mov
test
clc
pushl
lea
int3
inc
call
jne
xor
jmp
mov
mov
incl
pushl
aaa
mov
jmp
mov
mov
cld
clc
ret
test
pop
xchg
add
inc
decl
and
add
push
jbe
mov
or
inc
enter
inc
mov
int3
add
ss
rorb
inc
add
fadd
rolb
inc
fmull
inc
test
cltd
clc
xor
inc
cmp
pushf
mov
test
clc
dec
inc
mov
or
test
clc
testl
enter
ss
pushf
inc
decl
push
xabort
add
mov
mov
les
adc
dec
add
mov
lock
clc
inc
add
jge
xor
cmp
paddb
mov
test
dec
test
pop
xor
add
add
psraw
sub
mov
lock
shl
rolb
movl
jmp
pushf
inc
mov
xor
add
mov
enter
xor
add
sub
cmp
mov
test
cmp
pushf
xor
add
inc
dec
cmp
sarl
inc
jmp
mov
dec
xor
add
add
dec
test
out
rolb
add
dec
mov
mov
ret
xor
add
add
dec
inc
mov
ror
add
scas
mov
xor
xor
add
mov
clc
rol
mov
mov
dec
jbe
mov
call
rdpmc
roll
add
inc
rorb
jmp
inc
inc
mov
clc
test
clc
lret
inc
into
mov
clc
enter
sub
ret
mov
addr16
clc
add
loopne
dec
into
mov
or
inc
push
mov
in
cmp
ja
mov
inc
cltd
mov
clc
mov
xlat
lret
inc
into
mov
in
scas
lret
mov
mov
sub
mov
mov
clc
loopne
push
lret
mov
adc
jb
add
in
sub
cmp
mov
mov
add
mov
in
into
dec
xor
roll
xor
sub
add
mov
inc
xor
add
inc
xor
sub
test
clc
enter
incl
jmp
mov
inc
mov
cltd
lret
xor
mov
lea
xor
add
inc
dec
mov
addr16
inc
sub
inc
xor
push
mov
add
inc
decl
add
inc
mov
cltd
add
add
pushl
int3
xor
add
mov
call
mov
add
mov
in
ret
iret
enter
in
or
adc
push
dec
inc
mov
jb
mov
cld
scas
orb
movb
push
push
xor
mov
call
mov
in
jge
mov
int3
add
xor
dec
pushf
xor
add
mov
test
cltd
add
jmp
mov
add
mov
jmp
mov
rolb
add
xor
rorl
jb
add
clc
inc
jb
mov
mov
ret
xor
add
ss
inc
adc
inc
test
mov
cld
orl
jbe
mov
dec
mov
mov
mov
or
dec
int3
xor
add
mov
xor
add
adcb
add
inc
mov
xor
dec
mov
hlt
add
push
inc
dec
call
in
lret
mov
adc
inc
and
cmpl
cmpb
mov
cmp
jne
mov
mov
rcrb
or
dec
inc
add
or
test
xchg
mov
movsl
inc
cmp
pushf
orl
mov
into
decl
push
lret
inc
into
decl
push
into
call
lret
add
add
mov
clc
inc
inc
mov
push
push
add
mov
cld
mov
into
rorb
xor
jne
call
mov
mov
call
add
rolb
add
add
inc
push
cmp
mov
test
clc
test
addb
jmp
in
or
xor
hlt
mov
xor
add
inc
adc
pushf
inc
add
movsl
test
clc
incl
cmp
push
movsb
jne
push
clc
test
cmp
les
inc
push
aas
sbb
dec
add
inc
add
enter
add
add
out
sbb
dec
mov
sub
mov
add
cmp
or
incl
mov
mov
lret
inc
into
mov
int3
scas
push
mov
call
sub
mov
mov
ss
pushf
mov
faddl
test
mov
in
ret
add
add
mov
in
ret
mov
in
inc
rol
sar
or
add
add
test
clc
lret
inc
into
cmp
pushf
scas
mov
inc
cmp
pushf
mov
mov
clc
mov
mov
in
lret
ret
into
mov
scas
cmp
add
jmp
mov
mov
inc
enter
xor
add
cmp
shufps
add
dec
sub
cmp
ja
mov
lods
mov
inc
dec
mov
lret
rol
or
inc
scas
xor
add
add
inc
mov
inc
lret
mov
clc
lret
scas
ret
mov
hlt
push
scas
sub
mov
add
mov
movsb
inc
dec
xor
inc
rcrl
sar
rolb
xor
jmp
mov
xor
mov
rolb
test
cltd
shll
mov
xor
add
mov
add
inc
xor
rdpmc
roll
loopne
push
in
mov
adc
jb
add
jmp
mov
test
dec
dec
xor
add
dec
mov
dec
in
xor
xor
add
jbe
mov
test
dec
mov
loopne
inc
add
rol
scas
mov
mov
hlt
dec
inc
mov
loopne
lret
test
clc
scas
inc
mov
fdiv
roll
cltd
cmp
pushf
cmp
inc
mov
inc
dec
xor
add
loopne
dec
rorl
add
lock
ret
xor
mov
rolb
xor
call
enter
mov
fmul
push
dec
xor
ret
xor
dec
jne
mov
cld
loopne
push
add
incl
incl
mov
lock
lret
add
xor
inc
scas
mov
shl
inc
decl
call
ud0
adc
inc
xor
lock
add
ud0
sbb
xor
sub
push
add
mov
cld
inc
nop
mov
xabort
icebp
mov
lret
or
dec
pop
or
jb
add
inc
mov
fadd
ret
add
int
sub
add
inc
inc
mov
cld
mov
mov
clc
push
pushl
movb
int3
or
lea
insb
incl
push
movb
leave
les
in
call
inc
cld
mov
cld
xor
std
mov
clc
test
je
mov
cld
add
add
fiaddl
movb
push
push
mov
pop
lea
ret
mov
xchg
mov
push
clc
jne
mov
push
or
cmp
pop
or
inc
leave
ljmp
leave
jmp
mov
jle
inc
nop
in
inc
mov
add
push
pushl
mov
or
pushl
cmp
pop
ret
or
inc
push
jle
inc
inc
leave
add
and
inc
jne
add
lret
adc
xchg
push
mov
rcll
jne
mov
roll
divl
cmp
pop
decb
in
inc
sub
inc
push
add
push
add
leave
adcl
add
inc
rorl
add
add
jmp
jne
mov
or
inc
stc
jmp
jge
mov
lock
and
add
aad
add
clts
call
hlt
iret
jge
roll
cmc
or
out
mov
pop
push
cmp
sar
incl
inc
in
jle
push
push
add
add
push
add
sub
jne
lods
mov
dec
out
into
push
loopne
shrb
andl
roll
mov
cmpl
mov
push
push
push
sub
push
adc
insl
mov
add
rorb
add
add
roll
pop
or
cli
add
lea
mov
dec
inc
shrb
and
jne
pop
mov
call
and
push
add
dec
mov
jmp
mov
call
shrl
lock
adc
out
cmp
pop
or
push
cld
mov
and
xorb
add
mov
psubsw
add
rcr
mov
and
add
call
add
mov
aam
or
jne
mov
aam
dec
jne
cmp
jb
jmp
mov
int3
dec
orl
mov
cmp
jb
pop
push
cli
pop
mov
jb
addl
mov
int3
add
jmp
mov
call
add
pop
or
pop
inc
xor
push
mov
call
int3
sbb
inc
add
call
or
cmp
mov
jb
mov
push
add
add
add
int3
jne
movsbl
add
add
mov
add
add
mov
sub
jb
add
jge
add
addl
jne
je
mov
rorb
orl
mov
mov
fadds
inc
pop
lea
push
out
add
add
mov
jb
add
push
call
add
jae
icebp
inc
mov
int3
out
loopne
sub
push
pop
push
jl
add
xor
mov
rcrb
rorl
inc
shr
orl
push
pop
add
jmp
mov
fdivrl
push
pop
call
mov
in
rolb
call
pop
enter
repz
xorl
je
or
jne
jmp
pushl
push
pop
cmpl
jge
mov
sub
pop
inc
mov
sub
lods
add
enter
repz
stc
jge
jnp
call
fadd
dec
insb
stc
cmp
push
mov
jne
mov
mov
add
sub
and
cmp
sbb
pop
call
fsubr
sti
add
add
add
roll
mov
clc
jne
mov
loopne
loopne
lods
int3
inc
mov
add
sub
shrb
add
call
add
dec
insl
in
lea
inc
inc
sub
orl
and
rorl
or
mov
stos
adc
inc
add
jne
mov
cmp
sub
sar
ljmp
sub
mov
mov
and
jne
sub
sbb
dec
push
add
ret
mov
leave
sub
ret
pop
push
rolb
addl
jb
ret
in
jecxz
push
xchg
jne
cmp
jne
mov
rorl
mov
pop
nop
mov
les
add
inc
mov
mov
cmp
or
inc
inc
mov
mov
push
insb
push
add
add
sbb
dec
je
mov
add
and
jae
mov
incl
push
shr
in
push
add
add
inc
mov
add
jmp
pushf
dec
mov
fsts
movb
sub
inc
add
mov
insb
movl
dec
jmp
inc
fnstcw
testb
rolb
lea
sbb
inc
add
add
mov
fdivl
mov
add
add
or
mov
add
add
push
movb
or
dec
lea
xor
movsl
repz
add
prefetcht0
xor
mov
pop
mov
or
cmpb
movb
add
mov
xorl
mov
sbb
inc
xrelease
clc
ss
lea
mov
fadd
dec
lds
out
inc
lea
inc
dec
enter
push
leave
xor
add
mov
mov
psubusw
add
addb
add
jmp
addb
mov
sub
add
js
data16
idiv
inc
fadd
mov
andl
flds
pop
push
jmp
push
jmp
addl
mov
inc
out
add
mov
outsb
inc
jle
idivb
mov
orl
jb
decl
mov
test
inc
rorb
adc
mov
mov
cmp
test
pushl
mov
add
jmp
pushf
decl
add
data16
add
add
test
inc
mov
mov
inc
cmpb
mov
add
push
mov
call
mov
data16
test
out
lea
test
inc
ljmp
decl
test
incl
test
rclb
test
inc
ret
mov
push
movl
add
pushl
incl
mov
or
jne
addl
mov
add
mov
orl
std
mov
ret
adcb
add
mov
ret
or
lea
loop
xchg
aam
out
mov
inc
dec
pop
mov
repnz
orb
repnz
mov
jmp
incl
addl
mov
cmpsb
pop
inc
cwtd
inc
xor
dec
push
inc
jge
mov
mov
add
add
test
incw
mov
call
mov
clc
ret
rol
mov
mov
pushf
pop
jmp
add
inc
test
push
mov
mov
push
add
decl
add
cmp
decl
jmp
push
hlt
data16
dec
ret
mov
lea
jne
decl
decb
mov
push
jmp
inc
sbb
movsb
inc
test
inc
decl
test
mov
lods
push
inc
jne
decl
mov
sbb
mov
mov
inc
test
decl
xor
add
inc
xorl
mov
lea
inc
lcall
pushf
roll
add
add
test
decw
mov
add
lea
push
rolb
xor
lea
test
decl
mov
dec
clc
call
lea
lea
test
popf
push
add
xor
cltd
mov
incl
push
push
inc
shlb
lea
call
test
incl
clc
call
jmp
inc
jae
add
mov
mov
data16
inc
lea
test
inc
dec
test
pushl
jnp
mov
mov
lcall
incl
pop
mov
mov
decl
mov
mov
test
incb
incl
ss
pushf
inc
mov
hlt
test
cmp
lock
test
clc
mov
lahf
lret
mov
add
add
rorb
mov
incl
cld
mov
add
jge
test
sbb
xchg
call
push
inc
mov
cmp
ud0
test
dec
incl
decl
dec
cld
test
icebp
add
test
incb
jne
mov
cld
xor
push
xor
add
add
add
add
or
jmp
nop
test
cmp
mov
mov
add
decl
add
decl
movsl
add
add
rdpmc
addb
mov
add
decl
decl
push
jne
mov
cld
add
push
incl
add
add
mov
sbb
leave
test
jne
call
xor
mov
enter
mov
mov
cld
add
inc
dec
mov
inc
decl
add
xchg
ret
add
add
mov
lea
add
mov
inc
rdpmc
jne
add
inc
clc
add
mov
mov
in
add
test
incb
add
cmp
pushl
add
test
je
mov
sbb
test
js
add
sub
mov
add
dec
push
mov
mov
mov
sbb
or
dec
incl
push
add
mov
orl
add
push
cmp
inc
mov
in
add
xor
add
ljmp
decl
call
mov
lock
mov
mov
mov
mov
addl
mov
inc
push
ljmp
mov
clc
cmp
jne
mov
add
int3
inc
cmp
add
adc
add
mov
cmp
jmp
mov
inc
or
decl
jne
mov
mov
in
xchg
jmp
adc
inc
mov
push
sub
push
test
inc
dec
mov
movl
add
add
mov
push
roll
bound
xor
add
mov
test
call
loop
jnp
mov
cmp
cld
shr
add
push
lea
mov
cwtl
cli
add
or
inc
dec
incl
add
call
add
push
adc
mov
mov
addl
incl
inc
stos
mov
add
mov
cmp
movsb
mov
cld
jae
add
clc
add
mov
clc
pop
inc
xor
pushl
mov
jae
mov
sub
add
mov
mov
ret
mov
ret
mov
add
mov
add
incl
lea
hlt
sar
test
inc
add
testb
push
add
add
add
add
add
mov
mov
cld
fidivl
mov
xorb
add
sbb
jne
mov
sbb
mov
add
ret
dec
or
dec
cld
cmovne
add
seto
inc
adc
mov
cmp
xor
gs
je
push
sarb
mov
push
cmp
add
dec
mov
in
adc
pop
inc
leave
or
gs
add
into
in
enter
push
xorl
or
jnp
test
add
mov
ltr
decl
clc
out
add
cmp
jge
jb
je
pop
push
mov
in
roll
orl
cmpl
hlt
mov
push
jns
lock
ror
test
dec
rcpps
mov
inc
test
je
mov
adcl
and
jp
rcpps
add
sbb
add
je
cmp
js
add
jns
vmread
add
adc
jge
mov
add
or
push
push
mov
add
pop
add
mov
inc
pop
xorl
add
push
clc
mov
jp
add
divl
test
je
mov
or
decb
jbe
mov
add
cmp
add
je
mov
mov
hlt
orb
jb
jmp
xor
pop
pop
pop
ret
ret
mov
xorl
pushf
xor
test
dec
ret
mov
pop
dec
jne
xor
inc
dec
jbe
inc
pop
add
push
dec
push
mov
and
jo
mov
sbb
mov
nop
or
jne
cmp
cld
xor
add
cmp
js
jae
xor
jmp
mov
fdecstp
test
add
add
mov
cmp
adc
jge
mov
jl
clc
dec
jge
mov
jb
mov
mov
xor
add
mov
inc
pop
jge
cmp
mov
imul
fimuls
fists
in
jne
mov
imul
fdivrp
filds
test
inc
mov
mov
adc
rcll
mov
fiadds
mov
cld
xor
mov
xlat
into
ffreep
lret
iret
dec
inc
mov
fmull
dec
jnp
add
mov
inc
dec
lea
add
jb
add
inc
imul
cld
clc
mov
incl
or
sbb
lret
add
dec
add
enter
inc
pop
decl
add
add
mov
xor
or
pop
cltd
push
clc
mov
xor
add
cmp
hlt
cmp
or
mov
loopne
mov
cld
pushf
pop
cltd
mov
lock
adc
orb
xor
dec
mov
iret
inc
jne
mov
cmp
je
add
or
dec
inc
mov
cld
add
cmp
mov
or
mov
test
inc
xor
out
adc
jne
mov
fcomps
add
incl
mov
add
mov
cld
inc
fidivrs
fbstp
mov
adc
fadd
add
mov
inc
mov
loopne
sbb
add
pushf
add
mov
cwtl
inc
inc
jne
mov
clc
add
mov
or
inc
lea
add
inc
rorl
add
shufps
jmp
xor
hlt
mov
fadds
xor
add
cmp
pmuludq
jmp
mov
or
inc
mov
jne
mov
clc
add
xor
jne
pushl
add
mov
cld
add
xor
mov
adc
sub
lea
add
jb
add
inc
add
inc
mov
or
mov
in
scas
inc
mov
in
add
mov
dec
mov
mov
cld
push
dec
add
mov
in
cmp
mov
mov
mov
xor
cmpl
xor
jmp
add
xor
add
cmp
mov
mov
adc
jmp
mov
cld
mov
push
jne
dec
or
push
inc
in
add
or
dec
cld
mov
cmpl
pushf
decl
mov
mov
xor
mov
inc
mov
mov
call
add
mov
or
jo
push
xor
pmulhuw
test
mov
mov
xor
xor
xor
add
inc
mov
movl
sub
lock
mov
mov
or
ja
mov
cld
cli
mov
cmp
bswap
mov
mov
clc
repnz
push
xor
cmp
pop
jmp
mov
xor
lea
ss
out
neg
insl
test
clc
pop
inc
or
xor
add
jne
mov
in
push
xor
add
cmp
add
mov
mov
add
mov
mov
cltd
pushf
xor
jne
mov
icebp
icebp
shl
mov
inc
jne
mov
in
jmp
add
mov
or
inc
jne
mov
ret
or
jge
sub
xor
add
mov
clc
negl
xor
cmp
repz
xor
add
mov
mov
cld
lock
test
clc
add
fdivrp
test
jnp
add
jae
sub
shll
leave
call
in
in
add
mov
in
test
mov
cmp
pushf
jnp
xor
push
loopne
jne
mov
add
xor
mov
cld
jb
add
jne
mov
jge
mov
lock
xor
mov
lock
jge
xor
dec
mov
loopne
jge
add
testb
dec
mov
mov
xor
mov
in
jge
mov
dec
inc
xor
inc
hlt
ss
mov
repnz
cmp
test
fistps
inc
mov
add
inc
test
add
add
ret
jnp
inc
inc
ss
fdivl
test
push
add
cmp
setns
mov
call
or
inc
mov
and
lock
movl
mov
clc
xor
mov
inc
mov
mov
mov
mov
hlt
inc
rorl
mov
push
mov
in
jne
mov
addl
clc
mov
add
rolw
mov
jne
incl
inc
push
test
sub
add
and
add
mov
and
cmp
add
inc
push
jne
push
enterw
mov
add
add
str
lea
sbb
dec
cmp
inc
push
mov
push
add
mov
inc
add
add
mov
loopne
dec
mov
cld
push
xchg
add
add
or
dec
loopne
xchg
push
add
dec
jmp
mov
sbb
inc
xor
add
push
divl
and
add
jno
incl
inc
push
push
mov
mov
push
inc
enter
push
call
pop
push
mov
mov
push
jo
incl
or
call
fmull
mov
mov
adc
dec
xor
mov
mov
mov
push
lret
movb
inc
movntps
lret
into
dec
lret
mov
mov
fdivl
mov
push
mov
sbb
dec
sarl
push
jne
mov
lea
call
sbb
add
push
mov
push
mov
test
xadd
pop
add
mov
or
push
add
add
and
call
add
mov
add
xor
add
inc
je
push
push
dec
mov
or
inc
add
data16
subl
add
add
enter
int3
loopne
rolb
lea
data16
add
sbb
inc
cmp
add
xor
sub
mov
or
ror
dec
inc
cmp
cld
or
ret
lret
dec
mov
in
and
or
in
xchg
add
add
push
inc
xor
add
push
push
inc
jmp
sbb
rorb
addb
ljmp
xor
mov
fmuls
add
lea
add
popl
add
push
incw
mov
add
xor
test
inc
mov
add
or
or
inc
mov
jne
mov
add
add
adc
adc
push
mov
mov
inc
mov
or
push
jne
call
inc
rol
call
jne
mov
inc
and
fs
bswap
scas
inc
add
orb
call
shr
xchg
add
add
dec
and
push
decl
mov
mov
lea
mov
add
mov
push
shlb
inc
in
jno
push
mov
mov
je
mov
sbb
popl
add
add
adc
jmp
sub
jne
mov
in
popl
push
incl
adc
add
call
and
and
inc
test
sldt
cmp
pushf
jmp
mov
or
inc
call
mov
loopne
inc
add
mov
add
add
cmp
test
sbbl
jne
call
leave
rcrb
add
add
add
inc
mov
fcom
add
lea
pushl
call
mov
fstps
push
pop
mov
addl
mov
xor
xor
pop
or
inc
push
in
or
movsl
xbegin
clc
adc
idivb
or
test
add
add
adc
xchg
test
clc
data16
orl
rolb
mov
mov
push
add
push
jge
add
jne
mov
jmp
xor
pop
cvtdq2ps
ret
mov
xor
add
push
rdpmc
out
add
mov
ret
sbb
cmp
or
or
pop
inc
add
add
invd
jge
mov
cli
xor
mov
ret
mov
sub
inc
data16
pushf
inc
mov
hlt
test
mov
cmp
dec
or
jne
mov
call
inc
mov
add
add
inc
mov
addl
inc
mov
lock
jge
mov
cli
xor
add
test
add
cmp
xadd
test
mov
xor
add
pop
loopne
inc
clc
xor
add
data16
mov
hlt
xor
data16
data16
cmp
add
psubq
ltr
add
add
data16
mov
jge
data16
data16
mov
fdivl
data16
mov
mov
pop
or
clc
mov
lock
jge
invd
pop
add
cmp
data16
mov
pop
fbstp
test
add
add
jge
data16
pop
stc
bsf
mov
in
test
mov
call
cmp
sti
call
add
mov
jnp
mov
mov
call
mov
data16
xorl
fisttps
cld
jne
xor
mov
sti
repnz
data16
push
xor
mov
cltd
data16
mov
mov
fisttps
or
mov
hlt
mov
add
dec
or
mov
or
mov
fdivrl
xor
pop
lock
lea
icebp
jb
add
jge
mov
fsubr
pop
mov
in
rcrl
jb
add
jge
mov
in
pop
data16
data16
mov
fdivrl
cmp
mov
mov
lock
mov
or
clc
cmp
je
push
loopne
dec
mov
int
mov
pcmpgtd
add
jmp
mov
lock
rorl
or
jb
add
loopne
jne
data16
mov
data16
add
data16
data16
add
data16
enterw
pop
jne
mov
call
xor
lea
repnz
add
xor
in
xor
movl
clc
add
pop
pushf
pop
call
mov
push
pop
mov
push
inc
jle
popa
data16
into
addr16
add
cmp
add
cld
add
cmp
pop
or
mov
mov
jne
lea
mov
sarl
test
mov
push
xorb
mov
xor
xor
pop
mov
je
xor
mov
xor
pop
cmp
jne
mov
cld
push
pop
inc
stc
aaa
test
clc
test
xor
fs
or
decb
lret
aaa
add
clc
add
dec
mov
push
add
xor
cmp
je
mov
push
lea
push
cmp
mov
add
sub
add
mov
jne
mov
xor
mov
push
cmp
jne
sbbl
clc
inc
pop
sti
add
cld
xor
mov
roll
mov
inc
in
add
mov
mov
push
mov
test
data16
pushf
sub
inc
sub
mov
inc
add
or
cmp
mov
cmp
je
push
dec
str
cmp
int
mov
mov
cld
add
data16
push
add
jne
movl
clc
xlat
inc
mov
push
pushf
in
add
push
add
add
add
lret
lock
lret
cmp
pushf
jge
aaa
cld
pushf
test
je
xor
rorb
push
add
jb
add
dec
mov
push
push
adcl
xor
mov
scas
cmp
add
mov
cld
add
mov
dec
or
ret
lock
mov
or
mov
xorl
mov
adc
iret
inc
movl
incb
cmp
add
data16
dec
fisttps
add
ret
lea
add
ss
call
clc
inc
shll
cltd
push
xor
inc
cmp
jbe
mov
or
inc
test
cmp
in
hlt
push
push
push
push
mov
cltd
cltd
xor
mov
or
mov
clc
jb
add
orl
addl
mov
or
inc
dec
mov
orw
xor
mov
mov
mov
mov
inc
dec
add
add
mov
clc
or
mov
clc
popf
incl
ret
adc
mov
hlt
test
clc
or
cmp
pushf
jb
add
inc
daa
inc
inc
xor
dec
cltd
add
clc
cmp
or
add
xor
or
lea
add
mov
cld
dec
push
sub
add
or
add
or
add
mov
inc
mov
cmp
xbegin
clc
or
cmp
adc
lea
add
inc
add
add
je
push
or
dec
std
mov
mov
mov
or
inc
clc
mov
hlt
call
push
or
push
xor
mov
ss
pushf
inc
mov
or
add
inc
mov
or
inc
push
jmp
mov
mov
jne
jmp
mov
clc
lret
push
mov
mov
sub
decl
or
pop
ds
pushl
mov
mov
jmp
leave
jne
call
in
dec
add
add
inc
cmp
je
mov
or
add
or
adc
enter
rolb
mov
or
rorb
jmp
push
mov
cld
inc
inc
orl
push
push
mov
add
test
add
mov
mov
lock
fcoms
mov
push
enter
cmp
add
mov
call
cmp
jmp
push
std
lock
inc
call
add
xor
jne
cmp
jne
mov
or
pop
into
je
mov
or
mov
mov
mov
or
sar
xor
xor
pop
adc
ret
cld
inc
mov
cld
mov
push
pop
or
xorps
test
add
adc
addl
jmp
ror
inc
leave
xor
and
add
xor
xorl
mov
pcmpgtw
add
leave
mov
push
dec
mov
lea
xor
sysret
dec
rorb
pushw
jne
ud0
mov
lods
add
data16
iret
and
cli
inc
cmp
add
inc
pop
lea
mov
add
mov
mov
add
inc
data16
clc
int3
cmp
je
push
pop
xchg
data16
lea
jb
jmp
call
clc
xchg
mov
or
lea
push
inc
jge
mov
fdivs
incl
xor
xchg
ret
xor
cmp
data16
rolb
add
dec
xchg
push
jmp
push
add
add
mov
clc
dec
xchg
cmp
jne
xor
jmp
add
jne
call
clc
xchg
sti
add
add
xor
pop
mov
jmp
mov
cmp
cmp
lea
jle
jae
mov
lcall
inc
push
lea
mov
int3
push
xchg
add
add
inc
add
cld
mov
aam
xchg
mov
testb
mov
hlt
add
mov
decl
incl
mov
call
je
js
lock
mov
mov
sbb
clc
add
mov
rorb
dec
xchg
mov
in
jge
cmp
clc
pop
fistl
clc
add
mov
mov
mov
adc
add
adc
pop
sbbl
ret
cmp
mov
cld
add
add
add
sub
or
add
mov
push
push
clc
addl
out
add
jmp
cmp
jmp
je
mov
inc
add
add
add
pop
pop
push
inc
in
pop
in
cmp
ss
pushf
pop
mov
call
in
in
dec
push
test
add
leave
inc
test
add
add
dec
push
mov
hlt
push
dec
leave
mov
clc
cmovge
mov
clc
popl
push
add
push
xor
cld
incb
cmp
add
add
int
mov
add
cmp
jne
xor
jmp
add
mov
or
mov
mov
mov
or
shl
icebp
addb
or
or
stc
shll
xor
inc
xchg
add
add
mov
test
sub
jmp
mov
lock
lea
mov
or
leave
add
dec
dec
test
paddb
add
dec
mov
mov
or
dec
xor
mov
adc
mov
call
mov
push
clc
or
push
lret
mov
mov
xor
cmp
lsl
call
or
dec
or
inc
xor
in
add
inc
pop
xor
testl
dec
sub
add
push
sub
mov
or
mov
ss
pushf
push
movl
inc
cmpb
pushf
addr16
shl
dec
xchg
jmp
aam
test
mov
or
add
mov
dec
enter
lret
ret
mov
or
into
add
add
bswap
ror
dec
add
mov
hlt
inc
inc
ret
mov
or
dec
xor
jne
inc
inc
mov
clc
pop
ret
mov
call
dec
add
adc
push
ret
in
call
push
add
xor
jmp
xor
add
shr
mov
mov
in
pushf
ret
fcomps
inc
in
ss
pushf
mov
cld
fmul
sbb
ljmp
jbe
mov
clc
add
mov
lea
mov
call
hlt
xor
mov
xor
mov
hlt
into
inc
scas
mov
cld
add
add
inc
shrl
xor
mov
clc
dec
inc
decl
ret
movb
scas
inc
jmp
mov
pop
xor
mov
clc
test
mov
cld
call
xor
add
fdivl
lret
in
inc
or
into
mov
call
cld
mov
xor
lea
mov
add
inc
mov
dec
mov
cld
xor
sub
int
sub
add
mov
call
incl
mov
cld
jne
mov
aam
dec
or
jb
add
rorl
xor
xor
sub
mov
xchg
inc
xor
clc
mov
nop
faddl
xchg
jmp
mov
fadds
inc
or
dec
add
dec
mov
inc
push
mov
xor
rolb
ret
inc
inc
mov
xor
add
mov
cmp
dec
inc
xor
inc
mov
clc
lea
add
xor
mov
push
enter
mov
mov
loopne
ret
push
enter
inc
cld
mov
clc
ret
ret
mov
cld
pop
mov
mov
dec
xor
clc
fcoms
mov
adc
inc
mov
adc
cmp
inc
add
dec
pushf
mov
mov
nop
add
inc
mov
add
cmp
mov
clc
inc
inc
add
mov
in
jne
mov
clc
add
mov
in
mov
xor
mov
push
ret
call
call
cmp
test
inc
mov
ret
inc
decl
push
dec
test
dec
mov
mov
mov
fadds
dec
inc
sub
inc
xor
faddl
inc
or
dec
add
mov
mov
mov
mov
lock
inc
add
fsubr
test
clc
push
cmp
pushf
inc
push
fsubs
clc
mov
mov
mov
clc
mov
cmp
mov
in
les
mov
or
dec
mov
in
dec
decl
fmuls
inc
mov
faddl
dec
push
xor
push
mov
push
mov
lock
inc
test
add
add
jne
lea
div
incl
xor
jb
add
mov
xor
mov
adc
mov
ret
push
push
lea
sti
add
or
mov
xor
mov
add
jne
lea
mov
call
shll
pushf
add
mov
xor
test
clc
dec
inc
xor
setl
lret
rol
dec
test
inc
lea
lea
mov
xor
bswap
rorb
roll
add
cmp
pushf
inc
jnp
mov
lock
lret
xor
mov
fmul
test
xor
mov
mov
mov
ret
add
dec
adc
add
inc
rcll
mov
xor
jb
add
mov
cld
mov
or
cmp
jne
mov
mov
xor
mov
mov
mov
xor
jb
add
add
mov
xor
mov
or
xor
mov
mov
xor
jb
add
enter
add
add
inc
mov
mov
add
dec
mov
add
cmp
add
mov
loopne
add
dec
or
in
or
mov
xor
add
enter
inc
mov
or
or
mov
cmp
add
roll
mov
or
xor
mov
mov
xor
mov
xor
mov
faddl
call
dec
dec
xor
or
loopne
or
iret
ret
mov
mov
call
cltd
add
mov
fmull
test
dec
add
cmp
dec
mov
xor
mov
in
or
dec
xor
lea
or
ja
sbb
cmp
jne
mov
faddl
mov
fadds
mov
in
or
iret
add
xor
sbb
decl
mov
in
mov
dec
mov
fmull
jne
or
add
cmp
jne
lea
inc
mov
mov
jne
mov
test
inc
mov
loop
pushl
mov
add
mov
lods
dec
inc
mov
lret
mov
adc
std
ret
ljmp
hlt
rol
ret
cld
enter
inc
pop
mov
ret
test
jmp
push
call
in
addb
add
add
icebp
mov
cld
pop
dec
shll
add
cmp
je
mov
inc
or
ljmp
sti
cwtl
call
or
push
sub
push
inc
mov
mov
test
inc
push
push
xor
add
dec
add
inc
add
push
decl
add
or
call
mov
mov
inc
dec
add
push
call
incl
mov
mov
or
cmp
cmovne
adc
adc
inc
adc
jne
call
dec
inc
mov
add
mov
push
or
dec
xorl
cmp
mov
pop
adc
ret
mov
clc
mov
pop
mov
mov
push
push
lock
mov
adc
or
push
ret
xor
add
or
jge
mov
and
cmp
mov
xchg
dec
add
mov
add
dec
into
mov
mov
das
add
add
mov
and
mov
and
xor
lea
xor
add
cmp
orl
cmp
pushf
mov
or
jne
call
adc
mov
adc
movl
pop
leave
call
call
in
jmp
and
call
pushf
inc
mov
pop
push
in
ret
and
mov
and
mov
or
lcall
or
decl
jl
adc
dec
cmp
mov
and
xor
test
jge
push
jmp
adc
dec
pop
ret
push
jmp
mov
add
adc
or
add
add
adc
std
dec
adc
outsb
adc
sahf
xor
add
adc
fs
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
inc
add
adc
adc
add
push
adc
roll
int
adc
aaa
inc
inc
add
inc
inc
add
inc
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
push
adc
sbb
adc
mov
dec
adc
inc
or
add
adc
mov
inc
inc
add
inc
add
inc
add
inc
inc
add
inc
inc
add
push
add
imul
sahf
push
adc
jle
adc
jbe
adc
cmp
add
adc
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
adc
dec
dec
adc
dec
popa
adc
adc
add
push
adc
hlt
pop
adc
dec
pop
adc
testl
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
inc
add
xor
cmp
push
add
push
xor
xor
push
add
inc
pop
dec
push
push
add
pop
aaa
xor
xor
inc
pop
add
cmp
push
cmp
add
cmp
cmp
pop
inc
dec
inc
push
add
xor
xor
inc
xor
xor
xor
dec
xor
add
inc
pop
ss
pop
inc
push
dec
add
push
pop
inc
push
push
push
dec
add
inc
pop
xor
push
pop
pop
xor
push
push
pop
xor
push
dec
xor
xor
xor
inc
pop
pop
xor
push
dec
push
xor
pop
push
xor
inc
add
push
cmp
pop
inc
xor
aaa
xor
pop
inc
cmp
dec
pop
dec
add
pop
push
push
aaa
dec
pop
xor
dec
dec
add
xor
push
pop
push
inc
inc
inc
add
inc
cmp
push
push
pop
dec
inc
push
pop
inc
add
inc
pop
push
inc
pop
inc
ss
push
inc
dec
inc
add
inc
xor
dec
pop
cmp
cmp
push
pop
push
pop
dec
push
dec
dec
inc
pop
dec
xor
push
inc
pop
xor
add
push
pop
inc
push
dec
xor
pop
dec
xor
inc
inc
dec
pop
push
dec
xor
dec
ss
aaa
aaa
dec
dec
add
ss
inc
inc
xor
dec
ss
pop
dec
dec
inc
inc
dec
xor
xor
add
add
add
add
inc
add
dec
add
add
inc
add
add
xor
xor
pop
add
xor
dec
add
pop
add
add
dec
add
add
dec
add
dec
add
xor
xor
pop
add
inc
add
add
push
add
add
pop
add
xor
add
add
dec
add
add
pop
add
pop
add
add
add
add
xor
xor
pop
add
pop
add
pop
add
add
add
dec
add
add
add
push
add
pop
add
xor
inc
add
add
add
add
cmp
push
add
add
dec
add
add
dec
add
inc
add
add
xor
pop
add
add
add
add
add
push
add
xor
pop
add
inc
add
add
push
add
add
xor
xor
xor
xor
pop
add
add
add
inc
add
add
dec
add
add
add
add
add
add
cmp
dec
add
add
pop
add
dec
add
add
dec
add
dec
add
add
inc
push
jmp
sti
adc
jmp
adc
xchg
add
add
pop
popa
jbe
jns
dec
jb
pop
bound
gs
arpl
js
je
jno
jno
bound
jo
bound
