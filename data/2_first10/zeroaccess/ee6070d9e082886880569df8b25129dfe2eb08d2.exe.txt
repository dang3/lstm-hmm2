push
mov
sub
orl
push
adcl
push
decl
xor
notl
inc
push
push
call
test
movl
je
lea
notl
push
adcl
call
movl
jmp
subl
push
mov
push
subl
push
subl
call
sbbl
test
movl
je
lea
andl
push
incl
call
jmp
xorl
push
mov
addl
push
adcl
push
push
andl
call
test
movl
je
sbbl
lea
xorl
push
orl
call
movl
jmp
push
sbbl
push
sbbl
call
decl
test
jne
push
push
call
adcl
test
movl
jne
push
xorl
push
andl
call
test
movl
jne
push
adcl
push
push
call
xorl
test
movl
jne
sbbl
push
push
sbbl
push
sbbl
call
adcl
test
movl
jne
subl
push
addl
push
call
test
movl
jne
orl
push
push
xorl
call
test
movl
jne
push
orl
push
sbbl
call
test
movl
jne
orl
push
push
subl
push
xorl
call
test
jne
subl
push
adcl
push
xorl
push
orl
call
subl
test
movl
jne
push
push
adcl
call
test
movl
jne
push
adcl
push
subl
call
adcl
test
jne
orl
push
subl
push
call
xorl
test
movl
jne
push
push
sbbl
push
call
sbbl
test
movl
jne
push
push
push
call
sbbl
test
movl
jne
adcl
push
push
sbbl
call
test
movl
jne
movl
push
orl
push
call
xorl
test
movl
jne
push
push
subl
call
subl
test
movl
jne
xorl
push
andl
push
push
sbbl
call
test
movl
jne
xorl
push
andl
push
orl
push
addl
call
xorl
test
movl
jne
movl
push
andl
push
call
test
movl
jne
sbbl
push
adcl
push
movl
call
xorl
test
jne
orl
push
orl
push
call
test
movl
jne
push
subl
push
adcl
push
addl
call
addl
test
movl
jne
addl
push
push
push
call
test
jne
subl
push
xorl
push
subl
call
notl
test
movl
jne
push
negl
push
call
xorl
test
jne
subl
push
notl
push
orl
call
test
jne
orl
push
push
andl
push
call
subl
test
movl
jne
push
andl
push
push
call
subl
test
jne
push
push
call
orl
test
jne
addl
push
subl
push
call
test
movl
jne
xorl
push
push
subl
call
test
movl
jne
push
push
push
movl
call
sbbl
test
movl
jne
push
andl
push
orl
push
call
andl
test
jne
push
orl
push
call
test
jne
push
subl
push
orl
call
orl
test
jne
push
push
call
test
jne
andl
push
push
push
call
movl
test
jne
push
sbbl
push
push
orl
call
test
jne
adcl
push
subl
push
call
test
movl
jne
push
adcl
push
movl
call
decl
test
movl
jne
xorl
push
movl
push
addl
call
test
jne
andl
push
push
push
xorl
call
orl
test
movl
jne
notl
push
orl
push
subl
push
xorl
call
test
jne
subl
push
subl
push
call
test
jne
push
xorl
push
call
test
jne
push
orl
push
addl
call
orl
test
movl
jne
push
orl
push
push
call
orl
test
jne
push
push
notl
push
adcl
call
sbbl
test
movl
jne
adcl
push
push
orl
call
sbbl
test
jne
push
addl
push
andl
call
xorl
test
jne
sbbl
push
addl
push
call
subl
test
movl
jne
push
orl
push
push
addl
call
test
movl
jne
push
incl
push
push
andl
call
movl
test
jne
addl
push
andl
push
call
test
jne
push
notl
push
call
test
jne
push
push
addl
call
test
movl
jne
xorl
push
push
adcl
push
sbbl
call
test
movl
jne
adcl
push
push
sbbl
push
subl
call
test
jne
incl
push
movl
push
subl
call
test
movl
jne
push
andl
push
addl
call
test
movl
jne
addl
push
push
call
test
jne
addl
push
sbbl
push
adcl
push
call
xorl
test
movl
jne
push
andl
push
adcl
push
sbbl
call
sbbl
test
jne
addl
push
push
call
orl
test
jne
andl
push
subl
push
call
xorl
test
movl
je
sbbl
xor
movl
jmp
movl
dec
mov
movl
mov
mov
movl
cmpl
je
cmpl
jne
push
push
push
call
xor
xor
dec
mov
jmp
decl
mov
movl
not
lea
sbbl
mov
mov
add
mov
lea
inc
mov
adc
mov
and
mov
mov
mov
sub
mov
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
pushl
call
cmpl
jne
mov
inc
mov
jmp
xor
mov
movzwl
add
xor
movzbl
xor
mov
subl
add
movl
mov
mov
cmp
movl
jne
mov
andl
mov
inc
mov
cmpl
jne
pushl
push
push
push
push
push
pushl
call
cmpl
jb
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
push
pushl
pushl
call
jmp
andl
mov
inc
mov
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
sbb
mov
mov
xor
xor
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
pushl
push
pushl
call
jmp
adc
add
mov
sbb
mov
andl
mov
inc
mov
cmpl
jne
call
cmpl
jb
mov
add
xor
movzwl
or
add
adcl
mov
and
mov
mov
orl
mov
mov
mov
sbb
mov
andl
mov
inc
mov
cmpl
jne
push
push
push
push
push
push
call
cmpl
jb
mov
neg
mov
movl
cmpl
je
cmpl
jne
call
mov
dec
mov
jmp
or
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
pushl
call
jmp
sbb
mov
movzbl
add
mov
mov
xor
mov
movl
andl
mov
inc
mov
cmpl
jne
push
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
cmpl
jne
xor
add
inc
mov
jmp
sub
mov
xor
subl
add
movl
jmp
mov
mov
xor
andl
lea
push
mov
orl
xor
orl
lea
push
mov
addl
pushl
subl
call
and
mov
decl
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
cmpl
jne
xor
add
inc
mov
jmp
xor
lea
sub
mov
mov
movl
xor
addl
xor
add
sbbl
mov
adcl
xor
lea
movl
mov
cmp
jbe
mov
mov
mov
movl
cmpl
je
cmpl
jne
push
push
push
call
cmpl
jne
mov
dec
mov
xor
or
dec
mov
jmp
mov
mov
mov
sub
xor
mov
mov
cmp
jne
lea
mov
lea
mov
mov
test
je
mov
mov
mov
mov
mov
mov
mov
mov
cltd
mov
mov
add
adc
andl
xor
mov
mov
mov
mov
xor
add
mov
adcl
xor
mov
mov
xor
mov
cmp
jne
mov
cmp
je
mov
mov
mov
xor
add
adc
xor
xor
cmp
jne
cmp
jne
mov
mov
xor
mov
mov
mov
jmp
mov
cmp
je
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
pushl
mov
pushl
add
mov
mov
pushl
call
mov
mov
mov
jmp
mov
mov
xor
add
cmp
jne
mov
mov
mov
xor
add
cmp
jne
mov
push
xor
add
push
push
pushl
pushl
call
mov
mov
mov
mov
mov
xor
add
mov
mov
mov
mov
mov
mov
mov
movl
mov
xor
add
mov
mov
mov
mov
mov
mov
push
pop
sub
add
movl
mov
mov
mov
mov
mov
mov
mov
xor
add
mov
lea
mov
mov
xor
add
mov
lea
push
mov
xor
add
push
mov
push
pushl
call
mov
mov
mov
mov
xor
mov
add
jmp
lea
mov
mov
sub
mov
mov
mov
mov
movl
mov
movl
mov
xor
add
mov
mov
xor
add
mov
movl
movl
mov
mov
xor
add
cmp
je
mov
xor
mov
sub
add
mov
mov
xor
add
imul
cmp
ja
mov
mov
mov
sub
xor
xor
add
div
mov
mov
mov
xor
add
cmp
jbe
mov
xor
add
mov
mov
mov
xor
add
imul
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
add
movl
mov
mov
mov
movl
movl
mov
mov
xor
add
jmp
movl
movl
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
xor
add
add
imul
add
mov
mov
mov
cmp
jb
mov
mov
xor
add
imul
mov
xor
add
or
mov
xor
add
mov
xor
add
mov
lea
jmp
mov
mov
xor
lea
mov
jmp
mov
mov
xor
lea
lea
xor
cmp
jne
mov
mov
mov
xor
mov
xor
mov
xor
mov
mov
xor
mov
mov
mov
xor
add
mov
mov
xor
add
mov
lea
mov
lea
mov
mov
test
je
movl
movl
movl
movl
call
mov
mov
mov
mov
mov
mov
mov
mov
cltd
mov
mov
add
adc
andl
xor
mov
mov
mov
mov
xor
add
mov
adcl
xor
mov
mov
xor
mov
cmp
jne
mov
cmp
je
mov
mov
mov
xor
add
adc
xor
xor
cmp
jne
cmp
jne
mov
mov
xor
mov
mov
mov
add
mov
xor
mov
add
xor
add
adc
xor
xor
xor
add
adc
xor
xor
cmp
jne
cmp
jne
mov
mov
mov
push
add
push
lea
push
call
mov
mov
pop
pop
pop
leave
ret
xor
andl
inc
ret
push
mov
sub
mov
mov
sub
movl
mov
mov
sbb
mov
push
adc
mov
xor
mov
andl
push
or
mov
sbbl
add
movl
cmp
movl
je
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
pushl
call
jmp
sub
mov
xorl
mov
jmp
inc
stos
pop
mov
mov
and
jp
add
jp
sub
cmp
popa
cmp
xor
push
imul
inc
imul
jl
push
iret
pop
dec
cmp
cli
xchg
dec
jg
mov
sub
data16
push
jg
jmp
xchg
fimuls
mov
imull
add
push
cli
es
or
imul
pop
add
jo
les
sbb
je
arpl
xchg
pop
mov
repz
cmp
or
sub
xor
push
jecxz
mov
test
inc
push
dec
or
repz
faddl
push
stc
push
push
mov
inc
push
add
pop
fbld
rcrb
sub
into
fwait
sub
xchg
add
add
incl
cmpsb
ja
dec
scas
sub
jno
repnz
jge
mov
loopne
imul
xor
inc
adc
lret
jne
insb
movsb
push
ds
sub
mov
lods
jnp
push
pushf
dec
mov
push
out
into
out
xlat
xor
rcll
rolb
jnp
xchg
ret
mov
sub
mov
repz
scas
in
mov
mov
std
in
jb
loopne
dec
mov
pop
scas
data16
pop
inc
fs
ds
loop
mov
in
add
test
or
sub
jmp
xchg
movsb
jmp
adc
mov
dec
imul
xor
cli
fdivrs
sbb
mov
jo
push
or
dec
lcall
cmpsb
incb
and
incl
add
cld
pop
pop
fcomps
inc
add
pop
cmp
aas
out
fs
in
sbb
frstor
lods
xor
out
xor
repz
std
std
sbb
fidivs
push
jbe
mov
js
inc
ja
aam
sahf
inc
aam
jmp
js
je
lahf
fsubr
bound
leave
dec
test
xor
in
test
and
push
add
sbb
dec
adc
nop
in
in
and
push
scas
jl,pt
sbb
push
mov
and
pop
pop
mov
pop
aaa
mov
jge
rorb
dec
ss
loopne
into
lcall
pop
push
fisttps
movd
in
jno
xor
push
std
jecxz
mov
in
sti
sbb
adc
pop
aad
or
out
push
loopne
mov
fwait
xchg
push
fidivrs
pushf
jle
jmp
imul
jmp
fildl
cltd
mov
xor
mov
test
mov
stos
jecxz
mov
ret
aam
xlat
jp
shll
sub
lods
jl
cmp
sbbb
mov
pushf
add
test
inc
mov
xchg
pop
xchg
inc
xchg
mov
lds
dec
sahf
lcall
jnp
cmpl
adc
shl
or
fistl
shrl
std
mov
xchg
xor
call
es
jle
fdivl
inc
mov
insl
add
scas
repnz
push
rcll
pop
push
insb
jecxz
stos
xor
clc
test
stos
out
adc
xchg
and
loopne
jg
mov
push
xor
xor
iret
sub
mov
in
push
mov
notb
jb
mov
mov
add
scas
sub
les
movsl
sahf
mov
sbbl
mov
sub
enter
cmp
push
add
push
loope
int
pop
mov
fsubrl
nop
icebp
inc
lods
les
pusha
jecxz
xor
dec
movsb
push
sub
jecxz
push
in
das
movsb
fbld
push
jnp
je
pushf
or
in
int3
jle
stc
pop
in
push
pop
jmp
fsubl
push
mov
xor
sarl
cmp
mov
xor
and
push
ja
in
jb
jge
sbb
lcall
lock
or
lods
jp
mov
push
sbb
xor
lods
dec
and
je
xlat
out
jge
ja
cmc
mov
mov
add
jl
inc
lret
add
imul
test
mul
repz
mov
bound
push
das
xchg
adc
push
mov
push
dec
push
sub
movsb
xor
pop
add
push
je
sub
adc
jae
mov
mov
movsl
xchg
jecxz
dec
imul
in
pop
iret
iret
pop
in
add
adc
push
jecxz
xor
fwait
arpl
sti
mov
ret
mov
out
cmp
and
push
xchg
mov
fwait
pop
inc
inc
add
daa
jmp
js
and
add
outsl
scas
dec
cmp
in
lds
pop
fstps
push
clc
sbb
jnp,pt
xlat
lret
mull
pop
pushl
lds
ja
xor
dec
inc
in
push
div
mov
scas
outsl
push
loop
and
sub
inc
bnd
push
or
push
xor
add
inc
sarb
xor
pop
lds
imul
repz
in
int3
sbb
fbld
fstpl
and
lcall
jle
xor
sbb
sub
push
xor
push
in
xor
mov
fstl
push
mov
mov
aam
roll
pop
mov
cld
cwtl
data16
mov
cmc
and
test
faddl
rorl
push
sub
arpl
aas
mov
jge
stc
xor
dec
xlat
xchg
lea
mov
rcll
dec
jno
inc
xchg
inc
jbe
pop
gs
sbb
cmp
push
mov
cwtl
out
cwtl
mov
jmp
mov
in
inc
push
cmpb
in
jmp
and
cld
sbb
xchg
cli
filds
jmp
fldl
es
out
cmp
int3
sbb
int3
pop
inc
push
and
js
cmc
loopne
cld
mov
push
mov
jle
leave
jnp
jecxz
outsl
sub
roll
inc
ss
xchg
cs
jg
jecxz
pop
mov
fsubrs
jmp
sbb
pop
mov
push
cmpsb
push
sub
adc
ja
mov
xchg
mov
out
out
je
shrb
insl
push
cld
and
cmpsl
leave
fsubl
stos
mov
lods
xor
pushf
jns
sahf
xchg
add
mov
call
pop
call
mov
adc
loop
loop
imul
ret
insb
popa
pop
fs
pop
int3
jmp
jmp
notl
stos
icebp
stc
jae
imul
outsb
sti
jne
icebp
cmp
dec
jl
jmp
lea
arpl
inc
xor
cmpsl
test
andb
fucomp
imul
and
or
mov
xor
and
mov
js
pushf
jg
adcl
lahf
and
fsts
push
and
and
bound
daa
movsb
dec
mov
dec
ljmp
rorl
sub
jnp
pop
cmp
test
movsb
cmc
clc
pop
jp
es
fidivrl
dec
jge
mov
fiadds
std
lds
and
push
bound
push
lret
sub
pop
xchg
adc
clc
xchg
sahf
je
pop
mov
fs
ss
out
sbb
fs
ret
fiadds
repnz
fs
sti
mov
mov
xchg
rcr
stc
jns
and
icebp
cmp
mov
fisubs
push
insb
popa
cli
insl
mull
inc
add
xor
add
leave
sub
bound
daa
jg
adcb
mov
push
and
je
pushf
xchg
pusha
lds
cmp
fisubs
xor
add
sarb
push
jge
enter
pop
sbb
sub
mov
fbld
aam
movsb
pop
mov
and
scas
fistpl
icebp
in
ljmp
jmp
lret
pop
lcall
xor
out
cld
cs
fistpl
fwait
or
push
mov
inc
or
fwait
repz
sbb
pop
pop
clc
push
int3
mov
pushf
test
repnz
mov
nop
shlb
and
std
outsb
iret
stos
xor
repnz
xlat
mov
lods
in
mov
sbb
inc
ljmp
in
loop
sbb
shll
add
jno
bound
outsb
push
jl
movb
sti
popl
cli
aad
or
in
mov
or
push
loop
sbbl
mov
daa
mov
jbe
stos
ss
jle
dec
das
xchg
dec
stos
xlat
out
xor
faddl
das
and
rcrl
xor
mov
arpl
not
out
jo
pop
push
dec
hlt
mov
and
test
inc
mov
sarl
mov
fcmovu
hlt
pop
push
into
push
out
js
and
insb
sti
cmp
or
jne
cmpsl
je
mov
mov
shlb
out
xchg
stc
imul
insb
cmc
adc
add
xchg
lret
dec
fildll
mov
cs
cs
data16
or
outsl
pop
mov
cld
dec
frstor
les
mov
dec
aaa
data16
mov
jle
stos
push
fdivp
pushf
or
aad
mov
nop
adc
cld
cmp
mov
adc
fdivl
xor
pushf
xchg
lea
outsl
mov
loopne
data16
jmp
sub
dec
xorb
repnz
jg
push
arpl
sbb
sub
gs
ja
jg
insb
repnz
xor
ret
mov
nop
lds
nop
mov
cwtl
mov
add
or
dec
enter
andb
adc
jmp
sbb
pop
sub
scas
lea
je
jae
push
push
xor
pop
aaa
adcl
shl
jns
mov
mov
xor
inc
sub
or
scas
mov
imull
scas
sub
xor
jge
decl
out
adc
clc
push
pop
or
jo
cmp
lods
sub
addr16
xchg
movd
nop
lods
fists
mov
add
sti
hlt
mov
mov
cwtl
add
sarl
cld
pop
inc
and
mov
jecxz
push
out
mov
push
test
sti
inc
addr16
push
xchg
fdivrp
jge
dec
xor
mov
lret
xchg
sub
and
xchg
adc
roll
mov
add
mov
cmc
cld
test
mov
lahf
stos
cmpsb
rcrb
add
ljmp
fcmovu
int3
stos
movsb
and
cwtl
es
cmp
inc
jecxz
out
jno
mov
js
adc
sub
mov
and
frstor
sub
div
inc
out
and
xor
dec
outsb
lahf
int3
popf
xchg
test
pop
pop
adc
mov
shlb
inc
aam
andl
xor
lret
pop
pop
xor
jae
adc
movb
scas
out
aad
sarb
push
inc
cmpsl
mov
push
dec
cmp
mov
pop
mov
out
pop
dec
dec
leave
pop
push
std
mov
xchg
or
mov
mov
roll
sbb
test
add
stc
mov
cwtl
and
mov
inc
and
and
pop
push
push
pushf
aam
xchg
cmp
cmpsb
and
out
jge
inc
orb
mov
xchg
jge
xor
cmp
xor
rcrb
adc
int3
add
hlt
cmp
shr
stos
shll
adc
clc
sbbl
outsb
fs
xchg
add
pop
outsb
jmp
mov
in
outsl
lahf
mov
mov
icebp
fsub
mov
in
les
jnp
xchg
push
test
mov
into
inc
and
jge
adcl
movsl
in
mov
push
popl
mov
mov
pushf
lock
pop
mov
xchg
data16
jno
xchg
push
es
mov
jae
adc
test
sbb
mov
cmp
clc
nop
lock
insb
test
lods
cmpl
mov
test
fistpl
test
pop
jae
inc
rcll
lods
subb
and
cmpsb
xor
mov
into
loop
flds
xchg
lret
int
into
into
adc
pop
cmp
aad
outsl
and
outsl
push
dec
push
mov
test
mov
stos
inc
cmp
in
cmp
jmp
adc
mov
pop
mov
das
scas
xchg
add
or
sahf
jecxz
sub
ds
mov
movsb
mov
leave
mov
jge
jne
mov
mov
insl
imul
xchg
sub
inc
nop
cmpsl
and
rolb
inc
fistps
cmp
sti
les
dec
pushf
pop
push
pushf
loopne
sub
cmpsb
push
xor
clc
add
jne
gs
iret
loopne
sbb
mov
and
cmp
adc
orb
lcall
fwait
lret
pop
ljmp
divb
cmp
jp
rorb
or
cmpl
add
push
mov
adc
rorl
fcomps
or
cltd
sti
lods
aas
aaa
mov
sbb
push
lret
or
inc
push
adc
ret
pop
aam
pop
lock
xchg
add
shlb
shl
or
push
push
repnz
dec
outsb
fnstsw
test
ss
imul
lret
sub
insl
outsl
mov
aam
movsb
push
shrb
push
inc
shrb
cs
jo
push
mov
fadds
push
pop
imull
cltd
std
scas
xchg
push
nop
les
pop
xchg
jb
fistpll
sarb
xchg
mov
cmpsl
pop
pop
cwtl
mov
xchg
inc
cmp
dec
in
jb
add
rol
fildll
addr16
sub
inc
out
push
lea
in
xor
jbe
xlat
jns
test
cmpsl
popa
mov
insl
sub
std
pop
push
std
insl
mov
and
popa
jp
loopne
sub
cmp
mov
das
add
loopne
adc
pop
sti
data16
dec
jae
sub
add
mov
cmpsb
adc
iret
mov
loope
test
popa
cmp
sub
jae
push
out
pop
andb
adc
pop
pop
or
or
jge
daa
dec
fldt
fnstcw
stc
iret
xchg
iret
jle
adc
jnp
js
mov
xchg
lea
jbe
sbb
push
inc
sub
les
mov
add
int
dec
pop
insl
push
sub
out
cmp
xor
das
mov
push
clc
xor
repz
insb
sbb
ss
inc
push
fnstsw
add
adcb
fidivs
xchg
xchg
push
loopne
dec
outsb
cmpsb
jo
add
add
roll
xchg
sar
lods
and
cmc
out
dec
add
decl
cwtl
xor
out
mov
mov
sub
cmp
out
mov
scas
cmp
fs
ret
ja
pop
and
stc
lret
outsl
push
test
out
inc
inc
mov
mov
sti
imul
fnstcw
dec
enter
lods
xor
inc
mov
push
adc
cmpsb
pop
cwtl
xor
sbb
mov
jmp
sub
jp
and
mov
pop
roll
mov
test
and
and
inc
popf
jo
xchg
and
imul
dec
pop
add
lea
je
push
push
out
mov
sahf
xchg
sbb
jge
xor
nop
xchg
and
jle
insb
out
leave
int3
push
mov
imul
xchg
push
ret
pop
nop
xchg
xchg
push
outsl
pop
enter
mov
xor
pop
mov
out
cmpsl
xchg
stc
xchg
mov
xchg
jo
jecxz
dec
pop
jo
inc
dec
push
sti
xor
pop
pushf
xor
jecxz
outsl
fwait
lds
pop
mov
mov
jl
andb
push
push
inc
in
cmpsb
cmp
int
test
ss
je
out
ljmp
sub
inc
push
pushf
push
pop
or
loopne
pop
cmp
leave
mov
sub
xchg
pop
mov
and
hlt
jb
div
cltd
fstpl
sbb
sub
adc
sbb
dec
sbb
and
inc
sbb
call
outsl
daa
add
jge
and
mov
lahf
xchg
inc
or
dec
mov
popf
movsb
cmpsl
std
or
cmp
inc
call
xchg
jge
inc
jl
mov
in
mov
push
add
pop
dec
inc
add
mov
sub
inc
xor
clc
mov
cli
lock
out
sub
cmp
jmp
pop
ret
add
and
and
lods
mov
rorl
jmp
lea
ja
push
ret
pop
daa
imul
fisttps
cmc
insl
lds
fcomps
mov
or
imul
mov
into
push
jnp
pop
xchg
jp
ljmp
adc
dec
js
cmp
loopne,pt
aad
dec
fildll
mov
out
push
lea
loop
je
pop
pop
iret
push
fildll
push
pop
scas
dec
dec
push
inc
mov
fwait
sbb
push
mov
loopne
xchg
cli
rcll
and
mov
xor
lock
push
arpl
enter
push
js
mov
xor
loop
divl
rcr
push
mov
fdivs
sbb
mov
push
loop
xchg
in
jl
pop
dec
mov
pusha
int3
lcall
jne
or
lret
and
outsb
in
outsl
pop
add
arpl
mov
push
std
out
stos
scas
mov
pop
ret
lods
out
sahf
inc
mov
mov
inc
mov
jmp
add
cmpsb
xlat
push
lahf
push
mov
and
popa
or
sbbl
andl
sbb
mov
adcb
pusha
pushf
push
inc
into
inc
fiadds
xor
push
add
out
insb
aad
fcoml
fucomi
mov
mov
dec
repnz
mov
mov
adc
lahf
jl
and
cmp
rcrl
and
les
add
idivb
lahf
popa
das
mov
dec
subb
xor
inc
jmp
stos
sbb
cmp
sub
jp
jbe
sbb
mov
out
mov
movsb
push
fwait
aam
icebp
lea
add
mov
ret
adc
outsl
sub
push
and
push
adcb
ss
add
mov
scas
icebp
sti
mov
imul
aam
cmp
mov
imul
push
xlat
lods
pop
dec
fwait
mov
and
fstpl
or
or
jns
insl
inc
mov
pop
mov
jge
xchg
inc
popa
sub
rclb
inc
dec
testb
fistl
pusha
inc
std
inc
sbb
jns
outsb
jle
ds
push
es
lret
outsl
mov
sbbb
int
lcall
rcr
adc
mov
mov
or
subl
jno
cmp
lock
movb
pushf
mov
add
hlt
lcall
in
xchg
adc
xor
sbb
sbb
pop
les
icebp
adc
test
xor
mov
mov
cmc
adc
push
test
mov
mov
pusha
cmp
sbb
jae
push
push
or
push
sahf
xor
cld
and
out
push
pop
in
dec
push
test
je
arpl
sub
test
fadds
push
pop
dec
popa
dec
dec
push
shrl
jl
leave
cld
or
xchg
mov
repz
imull
jmp
mov
sub
sub
mov
repnz
jno
mov
mov
jg
movsb
jge
je
jge
lret
fdivrl
inc
jo
dec
sub
xchg
adc
add
ret
aas
in
adc
adc
leave
xor
clc
mov
cmp
mov
push
adc
lret
out
repz
add
dec
test
lret
cltd
loope
push
ret
jns
int
dec
mov
int3
mov
xchg
stos
sbb
pop
inc
mov
or
push
xor
jmp
fcmovnbe
fwait
test
rcrl
push
pop
loopne
scas
xchg
adc
cli
cmp
out
mov
and
and
es
out
jle
sub
inc
rorb
mov
cmpsb
push
pop
pop
test
mov
dec
xchg
mov
fdivl
inc
daa
ss
gs
add
gs
outsl
add
sbb
mov
add
mov
insl
jg
mov
or
jbe
inc
jne
shrl
pop
aad
sub
pop
movsb
lods
out
sbbl
fstpl
loope
es
mov
pop
cvtps2pd
xchg
test
out
idivl
xchg
mov
sti
mov
jbe
loopne
mov
mov
adc
xchg
fdivs
test
pop
ja
inc
adc
in
fstps
ja
das
fsts
add
mov
jl
sahf
mov
lock
mov
push
stc
popa
xor
fwait
mov
add
stc
ss
jl
scas
pop
jnp
pop
jp
or
mov
xchg
cmpsl
adc
cmpsb
mov
inc
int3
fidivl
or
pop
adc
outsl
insb
mov
or
add
mov
stos
insl
adc
test
popa
dec
push
fs
add
inc
sub
lret
mov
stc
or
dec
mov
into
mov
loope
ja
sub
test
cmp
ds
jnp
in
shr
mov
mov
mov
pushf
mov
sbb
or
sbb
rorl
shrl
and
outsl
mov
imul
mov
popa
pop
adc
out
xchg
daa
and
test
test
add
add
test
adc
idiv
pop
mulb
mov
lret
cwtl
and
ljmp
pop
lds
push
push
int3
sbb
sub
cmpsb
or
dec
pop
and
jb
dec
add
dec
pop
outsl
push
ret
cltd
dec
iret
and
jnp
adc
clc
and
xor
cld
ret
xchg
pushf
sbb
out
push
inc
mov
jne
pop
jle
and
iret
push
dec
ds
xor
lock
or
lret
outsb
movsb
fdivrp
sbb
shl
push
and
lods
imul
or
cs
es
fcmovnbe
jmp
and
pop
fnstsw
add
inc
out
jge
insb
in
xor
je
dec
dec
lock
push
aas
ljmp
faddp
xor
loop
stos
clc
ljmp
mov
push
jecxz,pn
dec
mov
and
or
aam
psllw
fwait
sub
jp
fistl
mov
bound
das
xor
xchg
imul
in
stc
xchg
out
pop
sub
js
mov
push
sahf
pop
mov
mov
aad
stc
pop
jb
cli
xchg
nop
decl
icebp
lock
jo
in
lret
repnz
mov
mov
and
aad
adc
and
sub
mov
xor
insb
div
cmp
insl
inc
add
test
push
mov
pushf
test
pop
add
mov
repnz
sub
mov
push
shrl
hlt
sub
xchg
mov
xchg
sub
sti
fwait
rolb
jae
pop
leave
xchg
lahf
dec
test
test
cmp
gs
push
sub
jno
mulb
or
dec
enter
inc
cmp
pop
mov
jecxz
fcom
movsb
fmulp
ds
pusha
and
pop
sub
mov
pushf
pop
sbb
mov
adc
jnp
adc
aas
setbe
addl
je
data16
stc
divl
or
adc
add
add
aad
test
jle
scas
lea
push
push
mov
mov
in
mov
jl
int3
inc
push
sbb
and
jg
push
mov
cmpsb
and
int
xor
add
xchg
jmp
pop
add
out
icebp
jecxz
mov
outsb
jne
in
divl
jns
clc
cmc
push
imul
and
int
ror
mov
mov
sbb
fs
pop
ds
out
out
psrld
xchg
push
pop
cmp
mov
add
stos
lea
je
nop
cli
mov
mov
add
dec
inc
roll
jo
fcoms
lock
inc
mov
nop
mov
xor
xor
pusha
pushf
int3
sbb
mov
cmp
repz
or
jne
mov
rcr
mov
xchg
repnz
cmpb
and
rol
fdivrp
test
mov
sbb
jl
repz
sahf
sbb
jmp
xor
add
daa
cwtl
push
cmpsl
addr16
inc
jecxz
fxch
pusha
sub
stos
mov
pop
lods
sbb
dec
insb
jp
andl
or
ss
fstl
cmp
aas
cmp
mov
test
outsl
cmp
jmp
inc
mov
jg
cwtl
push
inc
ja
rolb
rclb
dec
hlt
and
int
loopne
out
jnp
jecxz
lcall
into
adc
gs
sahf
leave
fwait
es
gs
pusha
ret
lds
or
sahf
jp
aad
inc
mov
movsb
cmp
lret
mov
mov
sbb
push
fdivrl
jne
arpl
push
shlb
mov
aas
and
mov
pop
sub
adc
shrl
sbb
fcomi
shlb
add
clc
mov
aam
pop
or
jo
add
ret
daa
jnp
rolb
xchg
mov
es
rcl
jge
in
cs
mov
es
test
mov
sbb
icebp
adc
lds
ret
repz
jbe
ret
jne
jno
mov
or
fstpt
sub
int
pop
inc
cmp
mov
jl
cmpsb
nop
sub
mov
stos
sbb
mov
xchg
xchg
dec
imul
and
and
jge
arpl
mov
movsl
js
scas
pop
xchg
xchg
fwait
jne
or
stos
aas
leave
scas
ret
rcr
test
lcall
nop
shlb
sarb
pop
adc
or
mov
jecxz
jmp
cmc
scas
jo
jae
sbb
das
pop
sar
sub
cmp
adc
push
mov
dec
lods
sub
fsubp
pop
and
adc
data16
insb
cmp
adc
dec
push
addb
cwtl
lods
test
push
pushf
sub
cmpsl
xchg
or
push
mov
int
outsb
push
xchg
fisttpl
cmp
and
add
enter
xor
inc
fcoml
xor
pop
push
xchg
mov
les
cmpsb
cmp
popf
inc
push
leave
out
enter
push
mov
jno
xor
mov
mov
add
test
in
outsl
outsb
mov
pop
xchg
outsb
jbe
mov
cli
repnz
jb
mov
sub
mov
popa
sbb
loop
icebp
mov
jb
sahf
gs
xchg
or
cmp
mov
add
lcall
movsl
mov
push
sbb
cld
out
pop
outsl
xchg
adc
lret
pop
adc
mov
adc
push
ret
cmp
pop
pop
ret
jnp
add
insl
push
pop
dec
fidivrs
pop
loopne
shll
xor
mov
xchg
cltd
dec
sub
movsl
push
addr16
adc
in
inc
stc
mov
insb
jg
fsts
mov
ds
mov
inc
hlt
dec
jmp
rcll
mov
push
pop
mov
xor
jnp
inc
sbb
sbbl
fisubs
inc
pop
inc
leave
lods
test
pusha
xchg
in
test
outsl
adc
into
inc
es
and
loope
fbld
fimuls
pop
arpl
xchg
push
fldenv
scas
inc
and
push
imul
cmp
mov
mov
ss
loop
cli
dec
enter
rcrb
sti
imul
adc
dec
cltd
push
push
mov
jg
leave
sub
in
cmp
xor
fstps
push
adc
jl
push
dec
in
add
or
popl
jp
adc
cmp
or
cmp
pop
sbb
mov
sub
test
xchg
movsb
fiadds
xor
and
ret
add
js
mov
and
pop
jle
int3
xor
pop
dec
sarb
adc
rcrb
mov
xchg
stos
or
or
xchg
jne
hlt
aaa
jg
stos
push
mov
cmpl
nop
mov
stc
test
ja
movsl
inc
pushf
fnstenv
push
add
xchg
lcall
in
iret
sbb
xchg
dec
xchg
pop
and
jns
and
push
enter
and
gs
mov
sahf
loopne
mov
sbb
push
pushf
fsubl
shll
cmc
test
push
dec
cmp
and
daa
adc
pop
xor
test
cmp
ficoms
test
sar
loop
mov
cmpsl
aam
sub
aam
arpl
fidivrl
cmc
push
xchg
aad
scas
hlt
push
ffree
popf
aas
mov
out
sbb
ja
int3
and
pop
pop
mov
sub
frstor
cwtl
clc
insl
pop
push
sar
sbb
sbb
pushf
sub
mov
in
into
xchg
rorl
cmp
fisttps
jo
mov
inc
sub
mov
xchg
jmp
or
leave
clc
shll
mov
push
test
adc
fiadds
or
in
lods
aam
std
mov
xchg
or
cmp
pop
sbb
es
cwtl
and
mov
add
incb
stos
stc
push
inc
out
or
adc
test
jmp
xchg
mov
loopne
mov
fprem1
ret
ljmp
mov
addl
scas
bound
or
push
jge
inc
mov
int3
fnstsw
fs
mov
pop
ret
push
mov
mov
dec
add
fcoms
pop
adc
or
cmp
scas
iret
mov
sub
adc
inc
std
mov
addb
dec
lcall
add
jb
add
adc
xor
mov
cmpsb
sbb
push
jae
xchg
fcmovbe
rcl
inc
xchg
insb
movsl
add
mov
and
cmp
loop
push
iret
iret
push
xor
adc
pop
loopne
jnp
cmpsl
fisubrl
xor
shlb
fwait
sub
sub
data16
xchg
inc
inc
mov
jmp
and
jge
aaa
hlt
dec
push
stc
push
and
jle
add
xchg
insl
dec
fdivs
xchg
or
mov
mov
pop
faddl
loope
popf
inc
mov
xchg
daa
adc
lcall
add
sbb
stos
inc
sub
fists
mov
dec
mov
fldl
or
mov
jns
cmp
jp
jne
mov
test
movsb
xor
push
int3
stos
add
ds
jmp
mov
lea
aaa
addr16
xor
aas
add
loop
inc
filds
fisubrl
mov
cmpsb
int
add
mov
jno
or
and
mov
out
inc
ljmp
jne
les
rolb
add
inc
add
lret
adc
inc
add
into
add
movl
adc
andl
xor
mov
push
add
xor
xor
sbb
mov
add
movl
adc
xor
orl
xor
movl
cmp
jne
cmp
je
jmp
or
mov
mov
mov
xor
add
mov
imul
mov
xor
add
mov
mov
mov
mov
xor
xor
add
adc
lea
xor
xor
xor
mov
add
adc
xor
xor
cmp
jne
cmp
jne
mov
pop
pop
pop
leave
ret
push
mov
push
movl
sub
mov
andl
xor
add
inc
mov
cmpl
jne
pushl
pushl
push
push
push
pushl
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
andl
mov
inc
mov
cmpl
jne
push
push
push
pushl
push
call
cmpl
jne
xor
add
inc
mov
cmpl
jb
movsbl
mov
sub
mov
xor
cmp
jne
mov
push
mov
add
mov
mov
mov
xor
add
cmp
pop
je
mov
jmp
mov
xor
add
leave
ret
push
mov
sub
push
subl
push
movl
push
addl
lea
push
subl
lea
addl
push
call
xorl
push
sbbl
jmp
push
xorb
es
and
pop
jp
add
jp
add
push
test
pop
repnz
push
or
lock
xor
pop
insb
jp
add
mov
xchg
fsubl
stos
data16
adc
mov
movsl
sub
and
pushf
shr
xchg
fbstp
gs
dec
mov
test
es
xchg
outsb
pop
aad
or
dec
fsubrl
nop
jns
js
or
pop
sub
mulps
mov
pop
loope
jnp
xor
adc
pop
idivb
dec
and
lahf
sbb
mov
movsl
testl
hlt
into
out
dec
out
test
mov
dec
cmp
aas
dec
push
and
popf
push
scas
xor
xor
cmp
lret
dec
icebp
pop
dec
pop
rcll
scas
adc
xor
mov
fs
inc
inc
or
dec
xor
add
pop
es
cmpsb
pop
cmp
hlt
xor
rol
xor
and
dec
dec
stos
push
sti
cmc
pop
mov
imull
pushl
xchg
out
shlb
jg
push
shrl
dec
scas
mov
mov
inc
mov
mov
pop
fs
imull
mov
int3
jmp
mov
bound
ficoms
lods
imul
or
sbb
adc
push
or
ja
ja
mov
out
in
mulb
stc
xlat
add
shlb
sbb
jae
call
jg
inc
fwait
cmp
push
pop
xchg
sbb
nop
cmp
inc
adc
mov
jl
jp
cmpb
in
ljmp
divl
or
mov
loope
insb
aas
or
jne
mov
jecxz
xchg
movsb
push
jae
loop
ja
xchg
inc
ljmp
xor
out
adc
dec
ss
xlat
push
popf
jae
scas
pop
cltd
and
fistl
push
push
push
dec
push
das
and
scas
bound
adc
mov
and
outsl
mov
and
insl
dec
cmpsl
int
adc
lods
ret
adcl
xor
push
outsb
adc
mov
in
mov
inc
dec
lods
outsl
inc
mov
and
pop
xor
or
inc
pop
dec
push
sub
incl
cmp
lds
imul
mov
and
pop
rcrb
out
xlat
dec
test
roll
sbb
call
pop
sub
fldt
das
jo
mov
cltd
pusha
nop
es
jnp
mov
and
xorb
mov
and
xor
jb
repz
pop
fidivrl
xchg
add
mov
clc
mulb
mov
inc
and
hlt
xchg
mov
and
jmp
xor
or
mov
mov
jecxz
inc
jno
pop
mov
mov
and
clc
cmp
lods
icebp
pusha
jnp
fld
mov
loopne
mov
mov
inc
std
insl
popa
jp
lret
dec
ja
jmp
call
cmovle
inc
add
ret
sub
jecxz
rcll
mov
ljmp
leave
pushfw
jmp
data16
mov
daa
sub
flds
popa
inc
jae
push
mov
ja
xor
lcall
add
jge
mov
call
jbe
add
loop
sub
stos
add
jl
loopnew
mov
mov
fistps
enter
push
test
sahf
cmp
jns
push
sbb
lret
pop
pop
out
cmp
and
in
mov
mov
mov
adc
inc
mov
xlat
mov
rcrl
and
test
stc
cmpsl
adc
xchg
xor
sub
shl
scas
xchg
push
inc
mov
xchg
repz
and
iret
int3
xchg
ficoms
and
push
outsb
inc
xor
inc
sar
sbb
or
cmp
pop
inc
pop
in
and
test
xlat
or
and
or
push
loopne
inc
fs
insl
jae
and
xor
aad
rorb
mov
mov
loope
into
xor
xchg
xchg
add
mov
cmp
pusha
cmpsb
push
cs
cmp
mov
push
outsb
outsb
jp
pop
in
test
and
xchg
aaa
push
insl
sub
or
xchg
cmc
movsb
movsl
add
lahf
test
into
dec
xchg
fucom
pop
push
cs
in
in
push
xchg
adc
lret
aaa
hlt
sbbb
cld
and
adc
mov
sbb
std
iret
add
out
sbb
ljmp
push
test
test
jl
jno
pop
mov
lds
in
sbb
push
mov
pop
mov
popf
lock
pop
push
sarl
orl
cmp
and
std
inc
in
mov
cmp
clc
addl
imul
mov
pop
ret
mov
repz
jo
arpl
iret
test
or
dec
push
cmpsl
lods
es
lods
sub
ljmp
lods
into
mov
jbe
cmp
push
cmp
inc
cmp
lret
jb
inc
mov
lds
sahf
cmpsb
iret
filds
loop
loopne
push
push
xchg
movsb
aas
dec
scas
mov
scas
popa
dec
fiadds
xor
in
aam
xlat
nop
mov
sbb
out
pop
dec
cwtl
ret
ja
int3
lods
mov
sub
pop
xor
or
jae
scas
jbe
outsl
hlt
cmp
xchg
mov
pop
jne
add
push
mov
jnp
adc
sub
sbb
adcl
inc
adc
jo
fs
popf
bound
pop
insl
fwait
popf
mov
push
fistl
shl
dec
jne
insl
xchg
cmp
mov
cmc
fsub
add
mov
inc
pop
cwtl
push
adc
ja
xlat
fnstenv
or
mov
fimuls
in
xchg
lods
cmpsl
mov
lods
jp
lahf
adc
imul
push
cmp
lea
scas
insl
adc
jge
pop
jp
jo
cli
sbb
repz
js
mov
sbb
inc
push
addr16
aam
xlat
push
xlat
psllw
stc
or
ljmp
sub
lahf
jne
or
jbe
mov
jb
vphaddubq
add
pop
jnp
mov
pop
or
adc
mov
or
mov
pusha
sub
bound
out
nop
sbb
outsb
test
dec
pusha
cmp
fstp
push
jns
and
pop
iret
and
xchg
cltd
push
xchg
xchg
inc
inc
pop
and
jnp
mov
adc
mov
jge
in
icebp
testl
pop
daa
fidivs
les
lods
mov
lahf
pop
and
mov
fptan
sbb
leave
xchg
in
rol
fdivs
lea
mov
neg
iret
xchg
jge
jbe
cli
lcall
adc
stos
sub
aas
shrl
pop
aas
incl
faddl
sti
sbb
nop
cmp
and
outsl
inc
push
xchg
insl
lock
dec
ljmp
jge
or
rol
fsubr
xor
inc
mov
pop
pop
cmovne
xchg
lea
add
inc
into
sbb
cld
into
outsl
in
cli
xchg
jno
js
loopne
xor
cmp
mov
test
jbe
lret
cmpsl
and
movsl
cs
aaa
repnz
ffreep
xlat
jo
pand
scas
aad
mov
fmuls
xor
mov
jge
xchg
mov
shl
sub
mov
test
and
cltd
xor
fmulp
xchg
xchg
mov
dec
pop
inc
jecxz
cmpsb
or
adc
push
cmp
and
and
loop
mov
test
lods
nop
pusha
aam
loop
xchg
sub
orb
sub
aam
out
add
add
xchg
sbb
adcl
xor
outsb
pop
pop
xor
cmp
pusha
push
push
cmc
fdivp
pop
mov
pop
mov
inc
push
mov
and
mov
and
add
dec
push
jle
ret
or
pop
fwait
mov
insb
sahf
sbb
jns
lods
mov
cmp
in
lcall
ljmp
or
push
fiaddl
addl
negb
sbb
mov
pushf
push
add
in
sarl
jns
rorl
mov
pop
stc
cmp
jno
adc
mov
dec
pop
jle
adc
lds
adc
mov
xchg
sbb
js
shll
dec
or
inc
cmp
mov
scas
mov
pop
sub
into
psadbw
cmpsb
movsl
test
mov
cld
push
sub
sub
mov
leave
or
lret
mov
divl
push
loop
stc
scas
mov
push
sti
test
rcrb
pop
btc
cwtl
sub
push
lret
scas
lsl
pop
js
mov
sbb
and
add
mov
sti
sbbb
call
push
jmp
arpl
jae
pushf
movlps
push
jecxz
je
sub
rcr
std
scas
inc
push
jecxz
inc
cs
ret
mov
or
cmp
or
addr16
inc
inc
aaa
test
pop
adc
repz
mov
je
adc
or
test
loope
jmp
test
movsb
cmp
lret
push
inc
icebp
jmp
jae
test
dec
data16
cmp
xor
repnz
jno
aad
mov
lret
adc
dec
push
andl
je,pt
and
xchg
dec
add
xchg
push
cs
and
cli
sub
adc
sbb
stc
lock
xor
lods
adc
adc
inc
jne
push
rorl
pop
sbb
movsb
stc
into
mov
jo
rorb
mov
gs
dec
inc
aad
leave
out
or
mov
addl
sbb
sub
jecxz
jp
loopne
outsb
test
jb
cmp
push
fidivrl
push
mov
test
xchg
pop
lods
gs
nop
outsb
xchg
or
mov
das
sbb
adc
test
mov
jg
decb
adc
std
sbb
iret
or
jmp
scas
fld
mov
pushf
dec
fs
rcr
in
fpatan
sub
sbb
mov
jb
int
lods
lods
aad
jae
push
ds
sub
repnz
jle
movsl
clc
lret
mov
frstor
aas
je
sbbl
sub
in
mov
pop
sub
jns
rolb
popa
cmc
cmp
lahf
in
inc
cltd
aas
push
lods
or
fcoms
scas
and
mov
xor
jle
das
dec
rcrb
mov
inc
xlat
mov
movsl
jbe
rclb
inc
stos
out
jg
mov
fwait
scas
popa
lea
or
and
aam
pushf
ljmp
sbbl
lea
pop
push
push
in
dec
pushf
and
push
in
iret
outsl
insb
jns
in
stos
mov
imul
or
ret
loope
cmpsb
mov
cmpsl
jge
dec
sub
ret
dec
fisttpl
dec
inc
inc
test
mov
mov
mov
lea
ret
or
dec
outsb
jns
dec
out
and
fisttps
mov
mov
cmc
and
push
andb
test
out
or
arpl
cld
jecxz
sbb
fs
and
inc
xchg
mov
lods
add
es
xor
xor
scas
out
loop
mov
arpl
ja
cmpl
push
or
pop
push
add
popa
jle
cmpsl
popa
jbe
jmp
mov
call
pusha
mov
inc
pop
xor
je
in
ljmp
cmp
and
dec
shlb
popf
lea
daa
loop
lcall
jno
in
push
mov
jns
jne
push
ret
lahf
push
fs
add
mov
stos
repnz
enter
mov
mov
loopne
stc
xchg
jo
cmpsl
mov
sbb
adc
sbb
and
inc
inc
fwait
std
inc
pop
pop
push
push
or
out
movsl
aaa
popa
sbb
scas
push
std
pop
sub
jae
test
ret
adc
stos
call
jnp
cwtl
mov
cmc
pop
pop
push
into
jnp
imul
ljmp
aam
xchg
arpl
xchg
sub
idivl
push
imul
push
and
pop
daa
fdivl
mov
out
ret
jns
loopne
in
and
mov
jns
ja
mov
repz
mov
mov
loop
int3
out
sbb
dec
cmp
fidivrl
in
push
adc
mov
hlt
ret
fst
or
leave
arpl
xor
sub
fstpl
sbb
jne
cmpb
iret
add
cmp
mov
xor
sbb
mov
sahf
jmp
inc
adc
jge
dec
jnp
popa
inc
sbbb
call
pop
inc
pop
inc
out
in
call
or
ss
xchg
in
sbb
push
add
out
lahf
push
pop
lods
aam
test
push
ret
jp
popa
out
sbb
mov
and
mov
inc
lret
adc
ss
xor
or
cmpb
jae
notl
add
lret
cwtl
xor
mov
outsb
sti
sbb
mov
push
test
dec
cmc
cmp
sub
shlb
test
xor
sti
shrb
mov
push
flds
ja
inc
lcall
jbe
in
sub
insb
add
sti
jmp
dec
repz
ret
adc
jnp
ret
xchg
xchg
or
pushf
cmpsb
iret
repnz
cmp
jl
sbb
jb
fldenv
fsub
mov
imul
ja
out
rcrb
ret
sahf
inc
je
mov
xchg
sub
shlb
mov
gs
jns
stos
in
cltd
push
sti
call
icebp
add
mov
imul
fimull
addr16
in
mov
mov
or
pushf
xchg
fmuls
and
mov
sub
mov
repz
mov
jge
mov
int
pop
jno
xor
cmpsb
sbb
and
xchg
adc
int
leave
divb
add
aas
adc
fwait
inc
mov
add
imul
push
cmp
dec
cld
rorl
jle
mov
xchg
mov
dec
push
lods
loopne
icebp
inc
leave
popf
mov
cld
in
inc
cmp
rorb
push
es
leave
add
dec
inc
lods
icebp
push
enter
cmp
fwait
mov
arpl
cwtl
loopne
cmp
jb
cltd
ja
int
push
fldcw
stos
in
mov
aam
sub
in
jno
enter
mov
xor
cltd
std
stos
daa
out
jmp
xor
jecxz
add
clc
push
cmpl
lods
loopne
dec
in
pop
lea
push
ss
fcomps
jmp
sbb
mov
dec
pop
push
cli
dec
push
or
jl
popa
out
into
cmp
dec
xchg
and
cmp
lods
pop
ret
insb
xorb
ret
and
xchg
shll
dec
lret
mov
and
push
test
test
sbb
add
aam
jno
xchg
pop
pop
mov
xchg
shl
icebp
inc
call
jp
xlat
push
push
xchg
mov
dec
jns
lock
pop
stos
movsl
fsub
add
pop
jmp
bswap
insb
out
jg
fldl
jl
mov
hlt
rcll
repz
sbb
cmp
test
jnp
in
add
sbb
xor
test
cwtl
lods
xchg
insb
mov
push
adc
inc
insl
cmpsl
add
mov
cmpsl
push
movsl
sti
insl
mov
ljmp
dec
jp
in
and
jl
ja
in
or
fimuls
push
xchg
xor
out
sub
dec
jb
es
sti
mov
sarl
stc
xorb
xchg
and
jmp
imul
lea
loopne
in
je
outsl
add
cmpsb
flds
fisttps
mov
push
pop
scas
jg
sub
mov
mov
insl
jmp
xor
cmp
shrb
mov
pop
xor
sbb
mov
mov
leave
aad
cmc
icebp
jecxz
jge
pushf
jne
imul
adc
pop
mov
inc
rorb
add
adc
shlb
clc
cmc
add
outsb
in
mov
es
lret
add
xchg
iret
jecxz
shlb
insl
xacquire
loopne
incb
imul
adc
ficoml
push
pop
pop
repnz
mov
inc
loop
mov
out
or
xchg
lret
sahf
mov
mov
adc
add
fcmovu
push
shll
shlb
inc
mov
pop
scas
pop
lret
lret
mov
adc
mov
les
or
mov
pop
in
stc
pop
imulb
mov
mov
stc
sub
repz
mov
jg
xor
or
and
sub
xchg
leave
stc
cmpsb
jmp
lcall
cltd
xchg
sti
sti
or
arpl
icebp
data16
test
add
push
push
int
imul
xchg
cmpsb
addr16
push
pop
int
jne
mov
mov
and
shrl
popf
push
out
xor
jge
sub
roll
jg
bound
or
into
outsl
mov
fistpl
cmp
push
cmp
pop
and
xor
loope
sbb
mov
mov
sbb
jge
ja
pop
fs
mov
fmull
jl
xor
ficoml
dec
bound
pop
and
and
aad
xor
out
mov
mov
out
ljmp
sub
add
dec
test
dec
stos
movsb
inc
pop
add
insl
or
xchg
test
and
lods
dec
dec
inc
ror
or
insl
or
mov
xor
popf
xchg
shlb
sti
out
mov
xacquire
ret
lods
jns
dec
dec
inc
and
xor
lods
push
or
dec
jecxz
sbb
dec
fisubrl
xchg
jg
adc
adc
mov
or
lock
xor
jl
add
mull
stos
fisttpl
xchg
repnz
xor
cld
xor
jmp
lock
sbb
inc
sbb
and
pop
sbb
pop
mov
test
inc
adc
rolb
sub
push
sti
mov
or
test
jb
push
dec
out
fbstp
insl
inc
mov
pop
cmp
sub
push
jp
cwtl
out
sbb
pushf
and
inc
pop
repnz
push
shll
pop
test
sti
jle
loopne
cmp
jno
mov
aam
enter
outsb
aam
cmc
pusha
mov
pusha
adc
les
xor
lcall
sub
movsb
adc
out
xor
gs
add
fidivrs
sahf
sbb
sbb
mov
das
xchg
or
adc
push
xchg
xor
mov
or
push
jbe
lahf
sti
clc
in
and
call
call
dec
mov
push
in
mov
addl
cli
cwtl
es
and
pushf
popf
dec
xchg
mov
add
out
mov
xor
fcoms
push
iret
sbbb
loope
dec
add
and
fsubrl
dec
mov
jecxz
js
popf
mov
or
pusha
push
adc
mov
xor
mov
sbb
insl
icebp
nopl
out
mov
movsl
out
ret
iret
cwtl
dec
cltd
orb
add
dec
data16
cwtl
inc
mov
and
mov
xchg
adcb
xor
jne
inc
mov
movsl
ficoms
fsubs
cmp
stos
sbb
push
mov
daa
mov
inc
push
rep
rol
cwtl
ret
or
cmp
sbb
adc
cmc
iret
fsub
pop
loop
repz
inc
in
xchg
pusha
popa
out
mov
filds
mov
mov
fwait
xchg
push
and
mov
loop
pop
xchg
aad
mov
xor
mov
mov
mov
in
clc
adc
pop
lods
test
orl
idivb
imulb
jmp
popa
push
sbb
sbb
nop
cmp
hlt
iret
dec
xor
sbb
push
xchg
push
loop
adc
add
push
movsb
push
into
sbb
ja
fmull
sbb
push
sti
movsl
inc
aas
fdivrl
add
jge
bnd
xchg
imul
push
incb
inc
or
xor
mov
mov
call
jp
roll
and
mov
push
out
cmp
out
out
mov
cltd
adc
push
lock
mov
mov
sbb
or
adc
ja
pusha
xor
adc
scas
dec
and
test
loop
cmp
cmp
ljmp
mov
clc
jns
pop
aam
cmp
jge
push
mov
xor
push
xchg
sub
inc
dec
sbb
cmpsl
mov
cmpsl
bound
mov
inc
repnz
jbe
rorb
sbb
js
cmpsl
or
xlat
stc
add
stc
loopne
or
cli
mov
mov
pop
lock
jnp
mov
pop
fiadds
sarl
scas
add
dec
sti
nop
mov
push
stos
dec
negb
mov
int
mov
gs
es
xor
in
je
das
jmp
cs
dec
fs
cmpb
addr16
inc
adc
scas
mov
mov
and
dec
adc
bnd
shlb
push
dec
clc
mov
mov
jne
jecxz
push
adc
pop
mov
je
push
insl
sub
ja
lcall
dec
shll
push
push
adc
in
addl
notb
push
daa
aad
push
push
lock
adc
pusha
adc
out
rclb
mov
sbb
fs
subb
adc
rcr
outsb
loop
ret
pop
movaps
mov
dec
and
sbb
in
adc
pop
jbe
mov
push
in
loop
xchg
sub
addr16
mov
sub
sbb
cmp
shrb
outsl
orl
int
outsl
xor
repnz
dec
mov
test
loop
js
test
repz
bound
adc
out
or
push
jnp
mov
and
stos
pop
addr16
scas
push
icebp
mov
cmpsl
movsb
sbb
jg
or
adc
or
lods
and
mov
mov
push
insb
mov
sbb
and
inc
adc
lret
cmc
adc
mov
sti
adc
xchg
rolb
xor
testl
stc
lods
and
jbe
add
cmpsb
popa
out
jle
dec
xchg
stos
je
ja
pop
addr16
mov
into
mov
push
addl
mov
gs
mov
mov
push
jb
adc
neg
int3
call
mov
xchg
pop
iret
outsb
mov
push
int3
or
sbb
push
mov
or
push
mov
dec
cmpsb
and
mov
and
inc
jns
cmp
add
movsl
adc
add
fsts
enter
jge
cwtl
ss
in
ja
pop
adc
fisubl
sarl
adc
and
in
adc
gs
xor
stos
cmp
mov
test
shlb
or
loop
xor
sbb
jne
push
cmp
mov
aaa
shlb
pop
adc
xor
inc
iret
rclb
mov
sbb
push
inc
xor
mov
stos
lock
xor
sbb
dec
jle
jmp
xlat
and
cmp
gs
push
aaa
cmp
pop
out
insl
dec
xor
cmp
nop
sbb
xchg
mov
mov
adc
sbb
mov
fstps
stos
movl
insb
mov
xchg
cmpl
push
push
je
lcall
jno
popa
jmp
jge
cmp
cmp
and
sbb
out
in
add
jecxz
mov
xlat
das
std
cmp
mov
daa
mov
shlb
pop
pop
lds
sub
imul
mov
xlat
popf
movl
jge
sub
sub
outsb
hlt
ror
push
jl
sub
sbb
bound
outsl
std
jge
fwait
in
lds
jg
and
mov
push
shlb
in
lods
dec
inc
std
leave
ds
or
sub
xlat
dec
cmp
cwtl
mov
jne
cmp
push
push
fstpl
loop
pop
jl
dec
fiadds
xchg
push
imul
int3
call
cmpsb
shr
repnz
test
pop
inc
int3
jns
jno
mov
mov
sub
pop
in
test
mov
je
jne
sub
cmp
cmp
ljmp
or
pop
inc
shlb
adc
mov
comiss
dec
icebp
xlat
sbb
cmp
mov
xchg
jge
rorb
and
scas
pop
sar
and
fcomps
subl
or
sub
xor
cmp
cs
aad
mov
imul
mov
fadd
push
testb
and
or
ror
cmpsl
inc
adc
rcrl
outsb
pop
mov
scas
cmp
cmp
push
inc
xor
lret
sahf
xchg
lods
pop
pusha
scas
leave
test
filds
scas
or
jle
pop
rol
adc
mov
cli
mov
daa
in
rcrb
das
ss
into
dec
dec
mov
or
insl
jbe
dec
xchg
scas
jo
sbb
dec
aaa
ja
sahf
mov
out
test
pop
xlat
stos
adc
imul
rdmsr
je
lods
adc
outsl
adc
ret
lret
je
je
cmp
shrb
adc
mov
sub
mov
sbb
adc
push
cmc
pushf
fcmovnu
mov
mov
iret
dec
push
mov
lahf
aad
addb
mov
and
enter
int3
mov
aad
repnz
push
xchg
inc
fs
in
pop
stos
out
int3
aas
and
repnz
xor
cmp
or
dec
xchg
add
mov
repnz
test
pusha
mov
dec
inc
sub
cmp
stos
dec
push
arpl
push
sbb
insb
dec
sahf
cmp
cmp
lahf
xorb
jmp
cmpsb
jo
mov
movl
mov
in
imul
scas
ja
aaa
je
out
and
imul
test
add
fsubl
cld
scas
add
jmp
xor
pushf
hlt
or
mov
test
jbe
js
mov
lea
shr
mov
inc
cli
call
sbb
cs
mov
xor
outsb
pop
mov
stos
cmpsb
cmp
mov
out
add
pop
xor
lret
xchg
dec
test
lahf
push
mov
xchg
lods
inc
dec
add
ja
hlt
outsl
dec
sti
xor
fldt
sbb
gs
fadd
aam
aad
pop
lret
je
sti
jmp
or
cmpsl
sbb
repz
mov
dec
add
sbbb
cmp
add
xor
sbb
push
mov
insb
lahf
sbb
fwait
dec
pop
jge
jnp
mov
rorb
fisubl
jp
sar
cmpsl
sbb
rcrb
sub
mov
imul
icebp
inc
jno
lcall
add
or
ret
and
sub
inc
ds
mov
inc
rcr
pop
imul
jbe
cmc
lret
loop
insb
xor
jb
jle
mov
popf
scas
std
popf
dec
aam
popf
xchg
xchg
gs
jae
jb
js
leave
and
mov
pop
jmp
xor
push
mov
stc
mov
into
adc
into
aas
jnp
or
inc
daa
iret
xchg
imul
cmp
inc
pop
outsb
repnz
mov
fimuls
movsl
pop
cmpl
in
and
cmp
loop
push
sub
cmpsl
imul
cmp
sarb
test
in
jle
jg
cli
dec
pusha
dec
push
sub
scas
into
cld
aas
jg
add
add
jl
cmp
cmp
fldenv
test
cs
push
aaa
orb
and
mov
or
lret
leave
cld
leave
xlat
dec
push
gs
push
in
not
mov
sub
sbb
or
and
cmp
jb
lret
movsb
aaa
sbb
jmp
push
dec
cltd
xchg
mov
int
lock
or
mov
mov
fst
adc
cmp
lods
dec
scas
and
frstor
jae
lahf
jp
int
mov
inc
pop
pop
mov
std
mov
aad
push
inc
inc
or
scas
xchg
dec
popf
lcall
dec
xor
and
xor
mov
mov
mov
mov
test
jae
xor
arpl
dec
pop
mov
mov
scas
andl
sbb
xor
xchg
adc
jnp
sbb
xlat
push
cmpsl
pop
sub
ds
pop
xchg
jmp
cmp
insb
mov
stos
mov
sub
bound
test
xor
xor
jae
fstpl
in
and
fildll
fnstenv
mov
add
push
mov
and
mov
int3
dec
jne
and
ret
int
aas
mov
dec
out
mov
sbb
shrl
push
test
das
cmpsb
mov
inc
cli
push
and
sub
stos
daa
cmp
sbb
mov
xchg
ret
mov
cmovne
movsl
adc
es
in
add
stos
xchg
xchg
push
inc
aaa
xorl
loopne
out
jnp
jmp
ds
jl
pop
cmp
into
mov
mov
ret
arpl
mov
sbb
inc
cmc
test
stc
je
mov
xchg
scas
sarl
pop
int3
mov
lret
mov
adc
xchg
in
enter
xor
or
and
scas
movsb
adc
outsl
daa
hlt
imul
or
in
sub
add
loop
stos
gs
jg
adc
mov
es
popf
or
imul
cmp
fs
mov
popf
mov
pop
mov
call
lods
mov
inc
cltd
sbb
je
cmc
andb
daa
scas
xor
in
stos
inc
scas
lock
in
test
cmp
in
out
inc
inc
inc
movlps
in
xchg
inc
fsts
or
shll
out
mov
and
fsubs
cltd
loope
inc
cmp
cmp
pop
pop
sbb
pop
push
call
or
or
call
push
aaa
inc
js
xchg
cli
dec
repnz
xchg
movb
movsl
in
testb
push
dec
pop
icebp
cwtl
sub
mov
dec
jecxz
sbb
lea
ds
inc
mov
pop
push
leave
push
orl
push
call
adc
movl
addl
movl
neg
mov
mov
decl
xor
and
mov
andl
add
mov
sub
mov
test
je
and
mov
movzbl
sub
mov
mov
mov
mov
xorl
xor
dec
add
sbb
mov
xor
mov
neg
xor
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
jmp
add
mov
mov
adc
xor
add
sbb
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
push
push
call
cmpl
jne
mov
inc
mov
jmp
mov
sbb
mov
xor
sbb
add
mov
addl
sub
lea
addl
xor
xorl
xor
movl
cmp
movl
je
mov
mov
adc
mov
adcl
xor
adcl
add
cmp
movl
jne
subl
pushl
xorl
call
movl
cmpl
je
cmpl
jne
call
cmpl
jne
xor
xor
dec
mov
mov
dec
mov
jmp
or
mov
mov
mov
xor
decl
add
cmp
je
andl
pushl
pushl
xorl
call
mov
andl
mov
inc
mov
cmpl
jne
push
push
pushl
push
push
push
call
cmpl
jb
mov
mov
xor
add
cmp
je
movl
cmpl
je
cmpl
jne
call
mov
dec
mov
jmp
or
mov
andl
jmp
xor
or
inc
mov
cmpl
jae
cmpl
jne
pushl
push
pushl
call
jmp
xor
mov
mov
mov
mov
sub
and
mov
mov
add
movl
cmpl
je
cmpl
jne
push
push
pushl
call
cmpl
jne
mov
dec
mov
xor
or
dec
mov
jmp
andl
mov
xor
mov
andl
xor
or
inc
mov
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
add
mov
mov
mov
add
mov
jmp
mov
mov
add
mov
mov
jmp
icebp
pop
call
das
sbb
mov
xor
shrl
pop
jp
and
aam
jae
ficomps
imul
imul
pop
mov
push
add
ja
in
cmpsl
clc
jns
movsb
gs
outsb
mov
hlt
pcmpeqb
cmp
fs
jno
loopne
push
loope
cmp
je
push
xor
add
insb
dec
orl
mov
cltd
test
stos
mov
fcmovnbe
add
and
sbb
mov
add
xor
imul
mov
xor
int3
fwait
xchg
mov
push
jns
sbbl
push
add
dec
dec
mov
ja
fidivl
push
aad
mov
or
add
in
dec
out
mov
or
ret
jb
cmpb
out
iret
xchg
xor
inc
inc
inc
cmp
addl
pop
sbb
cmp
xor
dec
stos
fs
mov
xor
jp
orb
inc
adc
insb
sahf
xchg
add
mov
int3
mov
cmpsb
sbb
adc
inc
das
sub
ss
dec
outsl
jno
pop
mov
in
movsl
mov
inc
in
sbb
push
ret
dec
mov
mov
jle
jo
int
mov
fs
jnp
cmp
inc
fs
xchg
inc
lahf
fisttpll
loopne
mov
in
inc
sahf
repnz
lea
pop
adc
or
inc
movsb
lcall
div
loope
loope
xchg
mov
mov
mov
xorb
xor
repnz
cmp
cltd
les
addr16
lock
pop
mov
mov
inc
fs
jae
adc
dec
pop
push
sbb
push
daa
jmp
sub
jle
es
das
add
movb
gs
aam
jne
ja
insl
push
cwtl
add
ja
pop
add
xor
fwait
je
and
gs
lahf
movsl
mov
inc
mov
sbb
popa
insl
mov
mov
or
push
iret
decl
and
xchg
mov
dec
into
sahf
out
push
push
jnp
ret
push
in
dec
push
fmul
cmp
js
jle
outsl
or
and
mov
stos
mov
arpl
stos
and
sbb
adc
cmpsl
rorl
out
fnstsw
mov
sub
xor
push
add
pop
jno
mov
imul
cmp
add
cmp
mov
arpl
imul
sub
jnp
xchg
ljmp
inc
sti
and
ret
in
add
or
xlat
jb
jmp
enter
into
or
mov
push
lcall
mov
cs
icebp
mov
cmpsl
icebp
jae
popf
shl
scas
mov
push
movsl
mov
lret
mov
add
mov
jnp
add
and
cltd
mov
dec
insb
mov
mov
jns
lret
xor
sbb
enter
jbe
repz
cwtl
fwait
add
inc
leave
push
dec
mov
xor
add
xchg
jno
dec
cwtl
jmp
shr
sbb
inc
addr16
dec
mov
mov
sbb
popl
jno
in
arpl
inc
mov
fwait
dec
fdivrl
jp
fs
aaa
out
insl
int3
aam
iret
out
scas
in
push
push
push
pop
gs
icebp
test
push
iret
in
outsl
xchg
adc
out
xor
test
cltd
bound
mul
lds
hlt
pop
push
xchg
testl
push
jmp
sar
sub
insl
loop
jae,pn
push
jl
cld
pushf
aas
or
xchg
aad
pop
xchg
or
insb
cmpsl
jnp
or
pusha
push
insl
add
add
daa
and
ja
fwait
add
sbb
inc
inc
and
push
test
xor
pop
lds
cmp
xor
sbb
ljmp
stos
iret
shrb
mov
adc
les
negb
fneni(8087
mov
aad
les
out
outsl
or
clc
mov
fwait
mulb
lods
sub
jle
and
jl
shll
mov
push
xor
out
mov
sarl
sbb
shl
mov
push
inc
ret
std
popa
jnp
ss
mov
mov
pop
jne
dec
mov
cld
scas
pop
push
mov
stc
hlt
leave
fs
mov
repz
cmc
jecxz
xchg
adc
inc
mov
sti
repnz
icebp
sbbl
xor
jno
cmpsb
clc
sub
ds
rcll
or
jnp
and
iret
xchg
jecxz
mov
xlat
inc
aaa
rorl
sub
pop
jg
lea
bound
jae
xor
mov
fidivs
sub
inc
outsb
dec
aaa
cmpsl
shlb
stc
xlat
xor
stc
cmp
cmp
inc
cmpsb
enter
repz
mov
dec
aas
mov
enter
xchg
mov
pop
xor
lret
add
jne
sub
ss
push
cmp
mov
je
fists
pop
jge
flds
mov
leave
ja
mov
add
sub
mov
loope
add
in
rcr
mov
mov
jmp
imul
xor
adc
sahf
ljmp
ret
cli
test
popa
push
int
inc
inc
sbbb
or
sarl
stos
scas
aas
ss
jbe
add
cli
rcll
xor
jne
pop
lds
pop
out
mov
adcl
mov
adc
mov
scas
arpl
fisubrs
jbe,pn
in
mov
lods
xorb
test
push
fwait
outsl
std
inc
pop
outsb
pop
scas
jecxz
dec
cmp
pop
hlt
mov
push
out
push
pop
jbe
aad
inc
fnstenv
pop
mov
in
aam
push
jg
mov
jae
sub
dec
xor
mov
mov
sub
repnz
push
cmp
pop
inc
faddp
loope
jg
pop
cmpl
xchg
enter
mov
ror
bound
insb
sub
pusha
dec
out
mov
testl
fdivs
mov
xchg
fwait
imul
push
cld
inc
in
iret
out
jnp
insl
mov
std
cmp
mov
dec
stc
xchg
or
fsubrl
leave
leave
shll
dec
jg
imul
add
jnp
shlb
sti
popa
xlat
mov
and
mov
in
pop
mov
push
cmp
sub
or
lock
mov
cmp
jge
cmp
in
adc
ffree
dec
icebp
popf
in
inc
popf
out
lahf
cmp
mov
sbb
pop
push
out
cld
push
jmp
jb
xchg
jne
cmp
lds
pop
dec
js
ret
mov
add
add
or
xor
mov
fs
cmpsl
outsb
inc
pusha
cmp
daa
jns
push
popa
add
outsl
out
xor
mov
sub
adc
push
adc
jns
lock
and
cltd
cmpsb
add
mov
adc
dec
cmp
or
in
xor
icebp
add
mov
js
scas
dec
inc
ret
notl
cmp
adcl
int
add
test
aad
pop
int3
xor
movzbl
inc
sbb
lock
mov
pop
dec
jae
mov
inc
mov
lret
fnstcw
cmp
out
jne,pt
mov
jne
or
mov
or
jb
ror
rolb
and
jge
jge
pop
cwtl
sub
pop
icebp
mov
cmpsb
lahf
leave
sub
rcl
jg
lea
jg
fnstsw
sub
jo
inc
jnp
gs
cmp
pop
iret
dec
sbb
inc
jo
mov
test
cs
nop
pop
jge
jmp
addb
and
and
js
mov
out
sub
sbb
subb
dec
mov
rcrb
fists
inc
hlt
daa
mov
ds
cmpsl
divb
xchg
xorb
pop
fcmovb
daa
stos
mov
adc
xor
icebp
mov
cmpxchg
lcall
mov
cmp
or
lret
push
lods
inc
mov
xor
push
mov
loopne
test
push
adc
dec
push
loopne
nop
cli
mov
sar
stos
jp
adc
ret
jmp
jl
inc
in
addl
add
cmpl
push
mov
push
mov
and
pushf
jns
xchg
mov
ljmp
lcall
sbb
neg
das
sahf
loope
into
sbb
mov
pop
sub
insb
xchg
pop
mov
inc
les
test
sbb
pop
lret
pop
iret
adc
int
clc
mov
xor
jmp
imul
dec
addr16
push
push
movsb
cmp
pop
out
mov
sub
add
add
xor
jae
hlt
xchg
addl
adc
jnp
pop
fs
mov
imul
sbb
ret
mov
pop
pop
imul
out
orl
adc
mov
std
int3
mov
les
sub
inc
add
fwait
sahf
rcr
enter
mov
in
dec
lahf
pushf
fnsave
push
pushf
sti
out
adc
fwait
cmpsb
ja
pop
into
cmc
pusha
pop
lcall
jnp
aad
idivl
and
or
cld
rorl
mov
mov
adcl
clc
or
cmpsl
and
xchg
cmp
xchg
dec
addb
mov
subb
sbb
out
decl
inc
fs
jg
mov
sti
dec
pop
aas
std
imul
inc
xor
fstpl
and
adc
out
inc
mov
add
pop
test
popf
mov
leave
fists
pop
or
and
ret
popf
and
jg
xchg
mov
inc
mov
sbb
test
push
adc
je
inc
pop
inc
jne
sbbl
aas
fisubs
push
in
jne
lahf
in
arpl
dec
add
int
push
inc
add
pop
out
xchg
jnp
jae
lea
repz
jb
dec
jo
xchg
mov
mov
push
or
jnp
mov
lret
les
add
inc
cmp
xor
ss
clc
push
add
fbstp
jnp
pushf
pop
pop
add
or
pop
mov
dec
testb
mov
sbb
lea
pop
push
cs
mov
rorl
std
or
sub
insb
lea
mov
iret
imul
jne
adc
test
mov
or
jo
pushf
pop
mov
jne
xchg
or
mov
cmp
insl
ret
adc
jmp
jle
mov
add
sbb
daa
test
adc
push
or
jg
in
cld
pop
cli
mov
mov
cmpsl
add
call
inc
insb
cmp
pop
imul
fxam
or
popf
shll
sbb
das
lahf
jno
imul
lcall
mov
xorb
call
out
jp
or
jmp
testl
rcll
mov
mov
cmpb
loope
hlt
sub
stos
push
iret
adc
dec
and
aas
insb
pop
mov
into
cwtl
mov
fcmovbe
xor
mov
ja
inc
mov
popl
rcr
or
shrb
stos
lret
adc
jg
xlat
divb
aam
and
mov
pop
scas
int3
xchg
icebp
sbb
mov
xchg
dec
daa
add
stos
push
lock
xlat
sbb
push
incb
jmp
and
jne
jle
pop
in
out
in
cwtl
jmp
enter
imul
out
popf
lret
stos
sbb
leave
out
xchg
jl
sub
xor
js
repz
andl
push
jnp
cmp
jmp
jno
jle
add
scas
sub
inc
cmpsl
call
xor
mov
popa
xchg
cmp
daa
repnz
fsubs
mov
enter
xchg
sub
lods
inc
testb
cmc
xchg
adc
jne
in
xchg
jp
adc
jp
ficomps
sub
popf
or
aam
dec
nop
leave
sub
pop
xor
add
mov
insb
adc
cmp
adc
adc
or
pop
lcall
outsb
movsl
imul
rol
in
mov
jge
sar
out
out
jns
sub
push
cmp
mov
jmp
mov
cmp
pop
leave
pop
out
in
pop
cwtl
out
adc
mov
jmp
loop
xor
js
in
xchg
lock
jge
nop
loope
data16
mov
jnp
jg
jnp
pop
inc
adcl
inc
add
popa
in
mov
ja
dec
mov
in
enter
repnz
lds
cmp
repnz
sub
cmp
fs
int3
and
or
jno
mov
loop
mov
mov
fisttpl
daa
out
dec
cmc
mov
add
jle
sub
jno
js
cmp
sti
call
add
loop
test
jecxz
nop
mov
out
inc
test
cmpsb
loope
in
inc
mov
and
or
cltd
ljmp
out
push
call
je
testb
cmp
mov
ret
mov
lcall
clc
stos
fidivs
and
push
jne
mov
popa
aad
ja
in
cmpxchg
cs
jne
out
adc
out
cmpsl
adc
fsubl
enter
pop
sahf
pop
and
sub
lahf
xchg
push
pop
push
cmp
and
loop
pop
push
addl
add
movsb
mov
mov
arpl
pop
xchg
outsl
hlt
dec
sub
and
pop
mov
mov
pushf
mov
mov
sbb
stos
fs
fs
js
imul
jmp
mov
and
pop
scas
notb
sub
push
fmul
hlt
xchg
add
js
xchg
push
sbb
jp
cmp
mov
outsb
jo
test
iret
and
leave
dec
lcall
sbb
push
inc
fbld
enter
jmp
and
sbb
jbe
or
mov
es
mov
decl
into
xor
adc
adc
mov
shl
aas
jb
jnp
push
xchg
adc
cltd
mov
mov
xor
andb
hlt
pop
dec
jo
mov
adc
jne
xor
shl
sahf
push
arpl
lods
pop
push
movsl
hlt
std
pop
or
lea
xchg
mov
ret
mov
fnsetpm(287
sbb
adc
xor
pop
cmp
mov
pop
jle
icebp
andb
mov
mov
adc
add
ljmp
popa
push
push
imul
and
cmpsl
iret
sub
movsl
ss
inc
lea
push
cmp
or
jle
jne
adc
fdivs
xchg
dec
scas
call
push
xchg
push
mov
inc
xchg
pop
orb
js
push
gs
sarl
nop
loop
lcall
mov
fsubrl
lret
mov
adc
jno
sbb
pushf
xor
adc
adc
ss
push
shl
dec
nop
pop
mov
push
mov
push
lahf
sbb
xchg
push
cmpsb
jle
in
stc
repz
ret
dec
std
js
xchg
mov
lahf
stc
stc
rorl
icebp
stc
js
jb
rorb
jl
fidivrs
sbb
cmp
mov
mov
sub
push
cmpsl
js
shrb
gs
ljmp
daa
push
sub
pusha
bound
sub
sti
add
aam
xor
lods
xor
adc
ds
out
push
cwtl
sbb
ss
in
out
mov
push
jle
les
lret
je
orb
lahf
cmpsb
int
xchg
lret
test
mov
xchg
pop
inc
add
stos
pinsrw
add
por
pop
fwait
sahf
push
cmp
or
sub
rcl
inc
fcmovbe
pop
mov
das
inc
daa
std
inc
xchg
sub
dec
and
in
loop
std
roll
out
fisttps
jo
addb
sbb
xchg
cs
dec
arpl
fdivs
cmpsl
xchg
into
xchg
rcll
arpl
lcall
insb
pushf
pop
ja
repz
or
push
loopne
call
loopne
push
sub
js
sub
cmc
or
mov
fsubrl
add
push
mov
enter
mov
adc
cs
push
push
mov
neg
inc
mov
das
negl
ds
sub
in
xor
inc
in
sbb
cltd
arpl
ds
cwtl
hlt
cwtl
les
ret
cs
dec
adc
adc
cmpsl
mov
inc
fildll
mov
dec
or
stos
jge
imul
dec
add
sbb
push
inc
ja
or
orl
popf
test
or
adc
cmp
sbb
js
jb
inc
insl
cltd
mov
sub
adcl
mov
movsb
adc
je
sbb
sti
mov
xorb
pop
xchg
icebp
cmp
push
jecxz
mov
mov
cltd
aaa
adc
mov
jmp
je
out
xor
lret
inc
push
sahf
es
popf
mov
ja
sbb
mov
cmp
inc
push
pop
imul
jmp
mov
push
pop
popf
ds
repnz
pop
adc
inc
jg
rcll
xchg
dec
add
pushf
adc
push
xor
mov
out
jl
fildll
cmp
inc
mov
pop
gs
lret
shrb
lret
push
ds
jl
test
cmpsb
adc
mov
xlat
push
mov
mov
push
mov
and
sbb
push
imul
orb
xchg
jb
cmpsb
fucom
stc
mov
jmp
int
popa
add
jnp
mov
push
lods
xor
imul
mov
mov
testl
sub
dec
lock
and
inc
hlt
push
push
pop
jmp
cmp
fs
insl
xor
test
xor
aaa
mov
lret
out
sbb
call
mov
hlt
pop
popf
adc
sub
mov
ret
push
mov
addr16
mov
cmp
xchg
xor
aaa
gs
pushf
inc
in
mov
lcall
lods
cmp
pop
ja
sub
in
icebp
loope,pt
inc
insb
test
mov
out
pop
xchg
jmp
add
ss
xor
add
repnz
mov
fstps
sbbb
pop
sbb
jno
addb
add
data16
mov
shll
xchg
push
inc
out
nop
shll
popa
cmp
int3
arpl
inc
lret
movsl
std
sub
test
or
fisubl
mov
mov
imulb
push
mov
mov
xchg
fstps
dec
loope
hlt
pop
lret
add
inc
outsl
xlat
fnsave
add
push
mov
gs
popa
sub
cmp
mov
mov
aam
arpl
fistpll
jnp
je
icebp
scas
ss
mov
lret
cmc
inc
adc
cmp
pop
test
pop
andl
cld
jb
insb
out
and
repnz
xchg
sub
sbb
addr16
stos
fisubrs
sbb
mov
xchg
movsb
adc
inc
shlb
cmp
imulb
jbe
iret
outsl
lcall
or
notl
into
inc
mov
inc
int
dec
dec
cmp
inc
repz
and
adc
cld
or
out
push
gs
xlat
lahf
sbb
negb
cltd
out
std
or
push
lahf
repz
cs
in
mov
data16
xchg
je
cwtl
int3
fsubrp
inc
jg,pt
imul
fsts
push
ret
es
mov
cmp
mov
xor
cmp
xchg
push
xor
sub
ja
or
push
cmpsl
popa
fbld
arpl
mov
or
fbstp
cmp
mov
mov
mov
data16
pop
and
push
gs
testl
add
shll
mov
imull
call
and
stos
sbb
std
ljmp
bound
das
inc
mov
das
sbb
mov
in
std
jae
dec
ds
xchg
inc
sahf
arpl
and
rorb
pop
pop
mov
mov
jno
xor
stc
scas
test
ss
int3
fadds
pop
jge
aas
out
adc
daa
gs
dec
push
call
repnz
inc
je
jbe
pop
mov
hlt
lock
in
adc
pop
outsb
adc
mov
shrl
inc
pushf
inc
mov
inc
mov
jle
xchg
push
shlb
add
pop
daa
fldt
cmpsb
mov
mov
adc
mov
dec
pop
mov
mov
or
sbb
jge
cmpsb
subl
dec
dec
sbb
xlat
fldl
stc
cli
xchg
test
scas
dec
mov
or
mov
mov
adc
ret
out
outsb
lret
pop
imul
lea
movsl
jnp
cmp
jp
pop
pop
repz
cmp
jmp
sbb
inc
xchg
jnp
cwtl
pop
jle
insb
mov
mov
out
cli
cmp
ja
jmp
idiv
lds
bound
shl
or
das
cs
shll
push
adc
or
sahf
xchg
sbb
xor
cltd
bound
mov
or
cli
out
mov
adc
cwtl
ror
cs
push
jle
stos
sub
dec
not
mov
and
adc
pop
call
jne
popf
sbb
or
sbb
movsl
cmc
xor
rclb
inc
or
dec
in
push
scas
or
pop
jge
jmp
jae
sub
xchg
and
fmuls
push
add
pop
push
pop
ss
add
mov
rorb
lcall
pusha
and
icebp
loop
mov
mov
out
aad
xchg
call
inc
adc
or
bswap
outsb
jp
push
mov
xchg
adc
mov
xchg
lds
jge
inc
or
stos
inc
push
fs
cmp
pusha
push
jnp
mov
sbb
mov
int
stos
inc
outsb
xor
ja
xchg
fdivp
out
xchg
mov
xchg
jbe
prefetch
clc
jns
ss
sti
inc
lock
push
dec
std
inc
in
pop
adc
dec
dec
lcall
pop
adc
mov
mov
or
lret
dec
mov
inc
add
mov
in
push
pop
in
push
xchg
jnp
or
roll
and
dec
or
imul
cmp
insb
pop
shlb
inc
inc
aam
shr
in
sub
out
sub
shlb
push
push
in
js
into
jnp
pop
cmp
mov
add
mov
dec
xchg
test
aaa
out
sti
sbb
lds
sbb
cli
int
ret
fs
xlat
div
sti
xchg
sti
loopne
push
lahf
dec
sub
mov
pop
aam
sbb
xlat
cmp
scas
movsb
mov
sub
push
push
mov
pop
daa
xchg
aaa
jne
ljmp
out
mov
sbb
adc
jecxz
ljmp
clc
and
fwait
outsb
call
shl
jl
ss
movsl
push
adc
xor
jmp
out
and
inc
or
and
xlat
jge
mov
sarb
cmp
push
inc
xlat
pushf
mov
and
clc
js
push
dec
sbb
mov
mov
jp
orb
mov
and
sarl
outsb
dec
and
pop
cltd
xchg
sbbb
jmp
int
xchg
cmpsl
add
out
mov
fwait
dec
push
test
js
daa
xchg
add
mov
sub
sub
mov
or
shl
ror
movsb
xor
movl
inc
imul
xor
out
into
ljmp
xchg
mov
and
int
push
call
sbb
or
mov
mov
sub
dec
pop
mov
adc
mov
add
fdivr
pop
fmull
push
lea
inc
inc
push
mov
stos
mov
rcr
sub
outsb
or
dec
jg
add
xor
mov
cltd
jp
pushl
jl
in
out
lock
jp
mov
sub
and
aas
mov
jnp
xchg
cmpsb
fcmovbe
sub
cmpsl
add
leave
sub
push
cli
repnz
or
adc
add
push
dec
das
es
fisttpll
mov
shrb
inc
imul
and
jae,pt
scas
inc
aam
ds
movsl
and
xchg
jae
push
push
cmp
jmp
stos
add
aaa
outsl
jecxz
jecxz
or
inc
fists
pop
test
aad
sub
pop
insb
pop
out
jbe
stc
sahf
cmpsl
mov
fadds
pop
mov
subb
mov
or
sub
push
or
push
xchg
loop
or
adc
call
daa
mov
adc
dec
add
xor
lret
cmp
and
scas
imul
leave
xor
push
lea
jecxz
stos
inc
mov
pop
fdivrs
enter
push
xchg
rclb
insl
fcoms
insl
addb
mov
scas
cmp
out
xor
cwtl
mov
push
nop
add
and
cmp
lcall
hlt
arpl
mov
push
xchg
sbbb
mov
xchg
div
gs
jmp
nop
dec
rcr
in
ret
sub
aam
in
xchg
mov
movsl
xchg
into
enter
dec
scas
ja
loope
sub
inc
add
mov
mov
rorb
mov
dec
jl
es
sub
out
dec
xchg
mov
jno
sub
outsl
sub
scas
jnp
xchg
mov
clc
jmp
jp
outsl
sar
rclb
and
mov
addb
sbb
lea
js
jp
or
mov
dec
sub
aas
dec
movsb
pop
xchg
mov
and
and
push
test
cmpl
fstpt
mov
lcall
lret
leave
pop
mov
adc
cmpsb
out
fs
push
jae
jle
icebp
les
pushf
push
into
inc
adc
pop
clc
stos
lock
inc
push
test
jae
sarl
gs
ret
out
test
shlb
inc
mov
les
rolb
ja
mov
mov
and
add
loopne
pop
jmp
inc
scas
xor
fisttpll
inc
sahf
es
adc
xor
mov
loope
sub
arpl
sub
in
cmpsl
push
sarb
lods
shlb
loope
or
or
jmp
mov
std
repz
ds
xchg
mov
add
or
mov
fldenv
ja
decb
loope
sub
adcl
xor
pop
iret
mov
jp
jg
adc
add
and
pushf
add
fidivs
outsb
pop
cmp
loopne
or
push
cmpsb
arpl
insb
inc
rcrl
ror
push
mov
and
push
push
mov
out
jns
xchg
ljmp
ror
int
loope
aaa
jbe
and
dec
jmp
cmp
jbe
cmc
adc
mov
imul
sub
jge
or
mov
scas
push
shll
test
sbb
xchg
mov
out
aaa
and
inc
cmp
jbe
roll
mov
and
mov
shll
push
jne
stc
jmp
sub
or
sbb
add
roll
or
jle
sub
ljmp
push
loope
ja
lds
dec
int
out
inc
jmp
mov
push
scas
ds
xor
lods
test
testl
jecxz
popa
iret
sbb
popf
mov
mov
sub
jp
or
push
mov
sbb
and
dec
testl
test
nop
inc
outsb
fnstenv
mov
jo
lret
inc
fldenv
xchg
mov
je
imul
outsb
push
jno
faddl
rolb
int
pop
push
jmp
mov
add
and
inc
stos
push
fisttps
mov
ljmp
leave
gs
insb
ret
jl
lahf
sbb
imul
xchg
push
sbb
sbb
mov
sub
jb
sub
lret
mov
inc
jl
and
sbbb
mov
push
dec
scas
inc
das
sbb
pop
fdivl
sub
lret
sub
mov
ds
sub
sub
and
cmp
pop
lcall
jae
mov
shll
xchg
mov
lods
cld
cmp
lcall
std
dec
mov
out
xchg
leave
jae
or
test
adc
testl
mov
push
push
lods
xchg
imul
mov
push
ljmp
int3
int
cwtl
sub
dec
adc
add
or
je
aaa
add
negb
sub
test
je
je
mov
xor
mov
fistl
subb
addr16
xlat
out
push
add
fs
fadds
das
int3
fisubl
mov
xchg
scas
inc
mov
sti
xor
jo
cltd
aas
add
lods
dec
mov
fxch
movsb
cmp
jmp
push
int3
or
iret
iret
cmp
and
pusha
pusha
mov
ret
flds
fwait
mov
inc
out
jo
cmp
fstpl
in
sti
sbb
dec
arpl
push
ja
pop
pop
or
adc
mov
cmc
clc
mov
int
in
mov
add
out
call
push
pushf
xchg
sub
andb
sub
mov
sub
clc
es
ds
and
outsl
pop
adc
cmp
cli
sbb
jmp
cmpsl
jmp
cli
dec
xchg
in
in
jns
xor
pop
inc
lret
push
push
sub
jns
fs
sub
je
xchg
mov
stc
or
mov
shll
fcomps
pushf
dec
mov
mov
ds
xchg
add
inc
sbb
int
mov
popf
lds
xor
mov
xchg
int3
cmp
outsl
and
jo
jo
xchg
icebp
int3
out
sahf
clc
jle
je
adc
loope
out
xor
repnz
or
sub
in
jne
pop
ret
enter
inc
push
out
fnstcw
cmp
jo
mov
pusha
push
popl
and
fwait
popa
dec
repz
jne
mov
scas
xchg
je
insb
jne
int
fistpll
dec
dec
pop
add
test
mov
jmp
xor
in
cmpb
inc
mov
xor
add
cmp
je
jmp
mov
mov
xor
add
cmp
mov
je
mov
xor
add
cmp
je
lea
push
pushl
pushl
call
mov
mov
jmp
incl
je
fs
fwait
xor
jp
add
jp
imul
cmc
ljmp
cli
fdivs
mov
in
in
push
roll
xor
push
adc
testl
push
mov
dec
inc
sub
lods
xchg
xor
add
add
sub
inc
sbb
rcrl
aas
fildll
or
int3
mov
fcomi
decl
cmp
movsb
jp
dec
stc
test
or
lahf
shlb
insb
or
repz
and
mov
imul
mov
push
pop
or
dec
pop
xor
pushf
xchg
popa
sbb
fstpl
lock
fs
xor
jmp
es
orl
mov
ss
das
pushf
push
leave
ret
inc
std
subl
sbb
mov
test
dec
jne
dec
sbb
in
xchg
gs
adc
mov
and
add
stos
xchg
fstp
js
xlat
ljmp
pop
jno
int3
adc
ret
push
lock
mov
rclb
or
xchg
inc
cmp
loope
pop
xchg
inc
dec
sub
rcll
hlt
or
cmp
pop
add
loope
and
mov
js
icebp
xor
mov
mov
xchg
int3
aaa
fxtract
enter
push
mov
mov
fwait
lea
ss
into
sub
mov
push
add
in
sub
xor
xlat
arpl
std
pop
mov
outsl
and
or
test
test
call
pop
pop
mov
loop
lret
pusha
adcl
fimull
pop
pop
sub
mov
popa
stos
mov
or
cli
mov
imul
mov
xchg
pop
push
adc
pop
fisubrl
xor
push
sbb
adc
adc
pop
adc
scas
sti
je
sub
pop
cmpsb
sub
leave
sbb
inc
mov
jo
sbb
mov
or
pusha
loopne
rorb
cwtl
xor
shrb
iret
push
jmp
leave
mov
fwait
jp
mov
lods
dec
push
mov
push
mov
loope
cmp
int3
loope
jbe
popa
insl
add
push
in
aam
cli
call
mov
dec
cmp
idivl
in
mov
sub
xlat
adc
sbb
push
adc
int3
test
and
ror
pop
ss
xor
xor
mov
cmpsb
add
mov
data16
and
cmp
jne
pop
loope
imul
icebp
pop
jmp
outsl
and
aas
scas
sbb
xor
lcall
cmc
je
jmp
mov
out
lea
mov
loopne
sub
rorb
cmp
xor
sbb
ss
iret
mov
jl
les
pusha
aas
inc
add
adc
inc
pop
daa
gs
push
aam
fwait
ja
shlb
stc
xchg
mov
push
pop
ja
sub
pop
xor
inc
cmc
inc
lahf
ret
movb
adc
mov
dec
cld
mov
pop
ret
sbb
inc
mov
and
sbb
mov
dec
adc
es
push
adc
xchg
inc
fadds
aam
mov
sbb
jmp
inc
push
lea
cmp
orb
mov
data16
test
sub
cmc
and
xor
dec
sahf
out
adc
pop
mov
jmp
or
hlt
lock
das
jl
faddl
outsl
cmp
or
inc
lret
neg
iret
mov
insl
push
and
inc
out
scas
arpl
sbb
shlb
rorb
ds
in
sub
aam
inc
push
addr16
sub
push
in
mov
gs
jae
flds
or
or
iret
imul
arpl
xor
mov
and
lahf
cmp
into
rclb
andb
pop
pop
pop
mov
pop
xchg
lds
cwtl
subb
mov
mov
ss
cmp
mov
cmp
and
stos
and
and
pushf
jns
loope
xor
xchg
lods
xchg
into
inc
shlb
xor
sub
stos
inc
push
jns
ds
cltd
add
test
scas
rolb
enter
push
xchg
scas
cmpsb
lds
sbbb
and
jbe
es
scas
jl
fs
mov
inc
add
inc
mov
jg
push
or
mov
icebp
add
xlat
clc
adc
jg
mov
scas
cmpsl
mov
data16
push
stos
adc
pop
popw
cld
inc
sub
or
lods
mov
test
or
jp
cmpb
cmp
add
mov
popa
jle
mov
mov
xchg
or
xor
add
sbb
mov
xor
inc
or
movsb
sub
outsb
mov
ss
daa
cmp
cmp
ficompl
repz
addr16
test
stos
arpl
mov
jae
xor
cltd
jg
not
pusha
xchg
sbb
outsl
push
xor
mov
ret
cmp
mov
inc
fidivs
pop
inc
in
nop
pop
popl
dec
test
shl
jg
sbb
mov
rolb
xor
cmpsl
icebp
lea
mov
aad
push
xchg
pop
xor
xchg
dec
inc
push
insl
push
fsubrs
push
jl
mov
cmp
mov
ss
ss
push
push
ja
in
stos
push
fsubs
push
dec
add
push
fimuls
fisttpll
pop
dec
xchg
pop
clc
mov
cli
or
andl
cmp
ds
rcrb
jge
loope
ret
mov
inc
shrb
sub
jb
fcomps
adc
ds
xchg
sub
push
xorl
add
mov
jae
sarb
not
jecxz
stos
sahf
mov
leave
jmp
lret
cmc
idivb
pushf
xchg
cwtl
sub
cmovg
push
mov
push
in
call
push
push
and
mov
jo
lods
imul
daa
mov
into
add
mov
xor
sub
aam
and
fdivrs
leave
lods
lds
pop
cld
imul
ror
and
in
clc
lea
jbe
dec
sbb
and
data16
in
xchg
insb
fsubrs
xchg
scas
or
repnz
mov
dec
leave
outsl
add
ja
inc
ljmp
pop
ja
das
fidivrl
addr16
data16
or
inc
adc
loopne
jl
lret
mov
lods
push
mov
add
out
jae
pop
sbb
jno
clc
jne
mov
xchg
push
inc
pop
shlb
push
sub
dec
cs
mov
xchg
and
jecxz
adc
push
cmc
fs
pop
nop
mov
mov
imul
sbb
cwtl
and
jecxz
xor
dec
repnz
pop
xchg
daa
xchg
aas
pop
fwait
and
xor
xchg
in
int3
inc
pop
xlat
orl
test
add
movsb
int3
add
adc
jno
mov
mov
or
pop
aaa
jg
or
mov
movsl
loope
mov
int3
cld
lods
push
jmp
enter
xchg
gs
shl
std
pop
mov
and
out
or
je
popf
xchg
pop
and
add
cmp
xor
xor
std
jb
loop
lret
add
cmp
aam
mov
jae
iret
cli
test
out
test
and
rcr
xlat
fwait
call
popa
aad
adc
test
jnp
inc
and
call
xor
mov
out
mov
push
test
jp
cmp
aad
ret
stos
pop
cli
sub
das
cmp
es
add
aam
xchg
fwait
mov
xchg
sbb
cmpsb
push
roll
lods
jns
out
js
popf
rcrb
jo
inc
push
andb
leave
std
xor
cmpsb
or
cmp
mov
inc
push
pop
sti
pop
mov
and
mov
arpl
fcoml
xchg
test
inc
addr16
hlt
sbb
cmpsb
jl
daa
sbb
ret
es
mov
add
push
lret
cmpsb
stos
daa
cmc
mov
test
cs
cltd
icebp
cmpsb
xchg
adc
xlat
cli
fwait
mov
lret
fistpll
pop
pop
ljmp
nop
pusha
in
jne
push
cli
out
inc
or
repz
mov
jno
andb
aam
dec
mov
jmp
shr
jle
push
cs
popa
adc
pop
inc
imul
push
test
int3
je
dec
xor
push
jo
sbb
xlat
stc
data16
pop
dec
pop
mov
outsl
rorl
sub
rol
mov
bound
sub
pop
stos
fsubr
outsl
xor
xor
xor
mov
movsl
xor
into
inc
ljmp
pop
in
jle
push
inc
jbe
subl
das
jge
cmp
sbb
loopne
aad
loopne
jecxz
outsl
divb
cmp
xchg
adc
imul
rep
mov
xchg
and
je
cmp
loope
mov
in
loopne
sub
mov
outsb
push
sahf
jbe
pop
mov
cltd
or
xchg
arpl
push
jo
fisubrl
stc
pop
xchg
aas
jbe
add
push
js
pop
pop
xchg
popf
pop
pop
aaa
pop
jl
test
xchg
jo
lea
xchg
adc
pop
fisubl
mov
cmc
movsl
call
sahf
mov
out
push
std
aaa
xor
mov
dec
arpl
xor
lods
or
or
aam
clc
sbb
not
adc
icebp
es
lods
cmc
xor
inc
push
mov
cli
shrb
jle
xchg
pop
pop
outsl
mov
inc
clc
into
jmp
jb
lods
push
mov
lods
inc
and
mov
xorl
into
xchg
inc
daa
notl
mov
ss
sub
stc
push
pop
cmp
decl
sbb
jle
rcrb
scas
cmp
lahf
outsl
lock
sbb
adc
out
stos
cmp
push
inc
imul
sbb
sub
aas
cmp
inc
cmp
pop
in
fisubrl
add
popl
in
out
add
inc
scas
jp
addr16
pcmpeqb
inc
xchg
or
inc
test
loope
pop
test
mov
xor
in
and
lret
mov
shrb
push
pusha
mov
jle
jmp
cmc
sbb
movsl
jb
into
jnp
hlt
sub
dec
and
mov
mov
jns
stc
jo
dec
sbb
and
hlt
and
sbb
fcoms
cmc
movsb
sbb
sub
xchg
sub
pop
lahf
hlt
mov
mov
dec
adc
mov
mov
in
sbb
inc
push
fidivrl
loope
imul
add
dec
jge
or
rorb
shlb
mov
popf
iret
jle
mov
sub
adc
adc
add
jnp
cli
out
outsl
push
repz
sbb
test
cmc
aad
jbe
mov
movsb
out
rcrl
hlt
aad
push
push
je
out
mov
mov
mov
sub
scas
addb
mov
divl
in
shr
fists
arpl
lea
aad
lret
fstpl
pop
lods
mov
test
adc
add
sub
push
cs
cli
and
mov
jge
and
sub
inc
cmc
mov
testl
dec
and
cmp
pop
lods
or
xchg
mov
fdivrs
xchg
jmp
call
adc
inc
push
add
and
lods
jne
idiv
adc
test
push
and
pop
js
mov
aad
cmpsb
sbb
imul
xchg
xor
sub
lods
in
into
inc
popa
pusha
out
scas
aad
xchg
push
bound
fwait
cmp
push
inc
mov
pop
rcl
outsl
iret
rorb
lret
cmp
rclb
dec
in
jle
sbb
dec
fdivl
loope
cmpsb
inc
daa
jmp
in
out
fidivs
jae
mov
scas
clc
pop
repz
pop
imul
or
iret
imul
scas
sub
loopne
xchg
popf
mov
stos
leave
xor
hlt
cmc
imul
xchg
inc
jae
mov
mov
and
adc
je
xchg
mov
insb
test
dec
fnstsw
sbb
sub
out
daa
int3
mov
jl
cmp
idivb
push
idivb
inc
cmp
jge
stos
repz
cli
stos
jb
loop
and
mov
jmp
sub
push
lcall
xchg
lret
jmp
jnp
sub
arpl
fistps
push
addl
sub
pop
or
add
in
cs
ret
push
in
mov
and
test
js
icebp
adc
ficomps
or
dec
test
inc
or
daa
test
add
popa
jb,pt
push
stc
mov
xchg
divb
push
nop
mov
cli
cltd
mov
mov
clc
fidivs
sbb
dec
xchg
dec
xchg
aam
aam
sarb
push
std
xor
cmp
push
cmp
fmuls
aas
xor
mov
mov
mov
xchg
ret
lock
cmp
std
adc
mov
mov
sub
sub
or
and
mov
or
stc
xor
xchg
gs
enter
clc
push
dec
add
jb
xlat
cld
test
out
mov
pop
adc
in
sbb
dec
push
xchg
out
je
inc
pop
sub
adc
cwtl
inc
and
dec
pop
jo
enter
stos
test
mov
popa
dec
pop
sbbl
add
es
fldl
add
sub
hlt
leave
nop
js
sub
test
aad
in
pop
inc
sub
xchg
loope
add
xor
in
fs
gs
fisubrl
cmpsl
stos
and
lahf
adcl
jae
addl
xchg
out
mov
or
mov
lds
cmp
mov
ja
push
cltd
dec
sub
cmp
pop
int3
stos
lahf
fs
aam
fisubrl
dec
popa
xchg
or
mov
sbb
bound
mov
into
je
adc
dec
pop
sub
push
jmp
popf
push
into
ficoml
test
xchg
cmp
jge
fadd
out
dec
lahf
mov
push
pop
sub
or
xlat
iret
cld
sub
add
daa
das
dec
sub
inc
rol
xchg
je
aaa
adc
sbb
lcall
xlat
out
and
sub
pop
pop
and
repnz
push
es
fcoml
adc
test
arpl
mov
add
sbb
std
push
adc
and
cmpsl
gs
cmp
mov
stc
mov
out
movsb
add
scas
sbb
out
mov
and
int3
sbb
mov
clc
add
jb
xchg
xchg
xor
loope
test
sbbb
mov
dec
call
ja
xchg
dec
les
scas
arpl
xchg
fisttpl
sahf
xchg
fnstenv
pop
vshufps
negl
dec
sti
in
mov
fidivrl
stc
sub
lds
push
sahf
lahf
mov
jge
mov
addb
dec
adc
sbb
push
and
push
jmp
sahf
jne
out
pop
jmp
sub
pop
inc
push
lds
push
cmp
push
mov
sbb
inc
dec
negb
popa
sbb
fs
jp
mov
add
lds
aad
cmpsb
mul
xchg
jl
adc
aad
inc
stc
jmp
sarl
sbb
dec
push
cwtl
or
mov
idivl
xchg
adc
xchg
loope
lahf
mov
mov
mov
aad
movsl
mov
add
ds
dec
push
or
js
js
inc
add
mov
cmp
cmp
mov
jnp
iret
xor
int
xor
mov
jecxz
mov
ret
int
nop
jnp
ljmp
dec
push
loop
pop
pop
or
xor
ret
lock
jp
pusha
sub
add
aam
pop
nop
xor
xchg
ret
call
sub
mov
inc
push
sti
bound
adc
inc
leave
mov
inc
mov
sbb
xor
lret
js
add
push
fs
xchg
out
mov
test
lcall
call
push
test
cmc
aas
sbbb
xor
mov
cli
xor
movsl
movsb
scas
shr
mov
rcrl
mov
jae
jmp
loope
or
icebp
lret
hlt
and
out
dec
inc
lret
jp
cltd
aam
mov
push
fs
xor
lcall
lods
jns
adc
repz
dec
adc
mov
pop
bound
repz
add
or
inc
lahf
adc
xchg
fimull
lret
push
cmp
lahf
mov
or
push
cmp
in
in
xchg
std
rdtsc
cmp
fimuls
sbb
aas
add
and
aaa
jne
incl
push
ficoml
jbe
inc
scas
fsub
div
mov
test
push
repnz
shll
mov
mov
mov
pushl
int3
jg
inc
pop
inc
sub
enter
repnz
std
mov
lods
test
std
mov
lock
sub
mov
jbe
inc
jae
test
adc
adc
lret
aaa
pop
sarl
sbb
mov
xor
fistps
neg
push
lcall
ret
fisubrl
ljmp
jo
mov
mov
mov
pop
or
mov
test
cmp
repnz
or
in
jecxz
jge
push
add
lret
lds
or
mov
mov
sti
adc
mov
mov
lods
iret
xor
adc
cmp
inc
loope
out
movsl
mov
sub
jae
icebp
mov
add
in
mov
cwtl
xorl
mov
pop
into
add
sbb
mov
dec
insl
jle
outsl
in
test
inc
sbbb
call
pop
pop
lret
dec
andl
test
dec
fwait
jae
decl
pop
popa
fstpt
shrb
cmpsl
out
cmc
insl
push
xchg
jae
pop
test
push
mov
sub
jmp
jb
xchg
shll
and
pusha
sub
pop
cmpl
mov
cvtpi2ps
fwait
popf
push
mov
es
les
mov
test
push
iret
mov
insb
fbstp
and
and
jl
mov
fdivl
jmp
dec
pop
outsb
aam
dec
mov
js
mov
outsl
decl
pop
out
mov
cli
push
fimull
pop
mov
dec
pop
scas
mov
int
dec
int3
cs
xchg
int
imul
jg
and
adc
sar
jmp
repnz
sbb
je
sub
enter
push
mov
pop
mov
xchg
in
decb
dec
or
rcrl
stc
jecxz
mov
inc
xchg
sahf
testb
adc
cli
sbb
jp
or
jge
sbbl
push
in
sahf
jnp
stc
inc
mov
in
jecxz
push
xchg
or
scas
add
mov
pusha
into
pop
mov
cmp
mov
aaa
hlt
and
mul
adc
jp
arpl
daa
mov
push
adc
out
test
popa
fcomp
pushf
mov
out
in
dec
mov
or
std
xchg
pop
out
mov
std
xchg
lods
icebp
pop
pop
push
push
test
in
sbbl
fwait
mov
cltd
pop
jo
loop
out
iret
in
fsubrs
test
insl
or
jae
push
leave
jge
ja
mov
fmuls
faddp
add
mov
orb
pop
fwait
add
mov
insb
fmuls
je
outsb
int
and
daa
mov
aad
into
push
xor
loope
push
cmp
add
mov
test
ror
sub
imul
and
push
outsl
cmp
adc
mov
add
sarb
imul
testb
dec
sti
jle
inc
cli
pop
dec
jae
or
mov
outsb
daa
out
cmp
call
inc
sbb
repz
adc
lret
outsb
imul
xor
inc
add
ss
adc
jno
push
iret
dec
test
in
xchg
xor
push
inc
das
sub
xor
mov
inc
push
lock
xlat
xor
cwtl
inc
scas
inc
and
ret
adc
jbe
faddl
sub
or
scas
cltd
imul
xchg
mov
and
sub
pop
mov
daa
stos
addr16
sbb
xchg
cld
cmp
mov
xor
lret
xchg
int
mov
inc
pusha
and
daa
push
lods
shr
inc
adcb
ss
int3
movsl
jno
iret
xor
cmc
xchg
js
mov
or
mov
es
adc
popa
mov
stos
mov
sbb
in
pop
cmp
xchg
mov
imul
sarb
dec
std
xchg
add
popf
lods
fcomi
outsb
push
mov
jnp
push
out
or
xchg
ljmp
out
cmp
push
push
lret
or
aaa
adc
out
lea
xor
mov
adc
stc
push
push
and
pop
dec
jb
test
sti
scas
mov
push
cs
jae
cwtl
setns
mov
js
xor
mov
mov
stos
push
fnsave
adc
cmp
data16
cltd
sbb
flds
push
sbb
dec
or
out
subl
mov
das
dec
popa
cli
xor
mov
push
xchg
sbb
push
test
punpckhdq
stc
mov
ljmp
cwtl
mov
mov
mov
pusha
in
aas
dec
mov
push
inc
repnz
scas
jb
mov
mov
test
mov
dec
int3
add
and
fstpt
sbb
jle
call
xchg
dec
je
incb
mov
sub
in
or
cmc
lcall
imul
out
mov
sbb
in
loopne
adc
mov
loop
jbe
jno
mov
or
ret
addb
sbb
mov
pop
inc
ja
jmp
sbb
aas
das
lock
scas
in
adcl
sahf
xchg
iret
es
mov
sbb
int3
push
jo
mov
sbb
sarb
std
or
idivb
insl
mov
sub
pop
out
sub
push
mov
insb
pop
cmc
jno
add
cmp
insl
repnz
jno
imul
cli
pop
lret
call
mov
inc
arpl
lahf
mov
negl
mov
lock
cltd
test
gs
xchg
pop
sbbb
sub
push
cmp
adc
outsb
mov
or
xchg
out
loope
xor
out
stc
arpl
shll
or
push
pusha
mov
jae
jmp
pop
xchg
push
lcall
push
jo
sbb
mov
jbe
fsubrl
mov
xor
adc
pop
cmpsb
icebp
scas
sub
pop
jecxz
fsubp
stos
jb
xchg
test
sbb
xor
mov
call
sbb
push
mov
xchg
adc
lahf
jmp
iret
cwtl
in
es
frstor
sbb
loope
in
xor
xchg
aaa
inc
cmp
cmc
call
add
cmc
jb
data16
pop
std
xchg
adc
insl
mov
cltd
push
in
cli
fidivs
mov
mov
lods
and
push
out
jmp
mov
sub
jecxz
mov
mov
pop
inc
xor
test
out
cs
rol
inc
popa
push
inc
out
fidivrs
fwait
ljmp
inc
jae
test
lcall
push
mov
shlb
loopne
gs
out
add
add
jbe
idiv
and
testl
loop
movsl
jae
sbb
pop
fnstcw
stos
fsubr
in
mov
adc
in
mov
xchg
mov
mov
push
lea
add
dec
jbe
jo
mov
jmp
dec
cs
pop
insl
cli
push
mov
and
idivb
test
aad
pop
hlt
addr16
loop
js
dec
mov
dec
mov
adc
aaa
lods
iret
inc
iret
cltd
mov
mov
popa
ja
lcall
repz
repnz
movsl
pop
lods
aad
sub
push
pop
pop
xlat
sarl
outsb
call
lods
xor
or
shrb
xchg
inc
xchg
jl
arpl
arpl
fnstsw
push
cmp
inc
sarb
ud2
cmpsb
mov
call
arpl
push
shll
mov
movsl
stos
icebp
fists
cmp
sub
in
mov
pop
imul
push
push
fiadds
push
or
insl
in
das
test
sub
shlb
xor
insl
xor
push
cmc
ds
inc
inc
stos
ljmp
add
add
pop
sbb
sub
push
aaa
imul
cltd
cs
xor
jb
sbb
mov
xor
imul
mov
es
pop
sub
fstl
xor
test
add
cmp
push
adc
pop
daa
dec
mov
dec
lret
in
fiaddl
mov
imul
adc
addr16
sub
push
aad
and
pop
into
subl
out
jl
pop
das
int
dec
ds
jnp
stc
jae
ds
adc
mov
outsb
push
lret
test
repnz
mov
xor
push
sbb
xchg
aad
leave
sub
dec
rolb
push
sub
cmpsl
aas
pop
fnstenv
sahf
lret
movsl
inc
mov
jnp
mov
jae
jl
out
jl
ds
scas
cmpsb
fadds
cmp
cmp
sbb
add
shlb
jnp
push
push
je
ds
pop
jno
sbb
dec
loopne
xchg
shlb
or
adc
fidivs
aas
cmp
insl
mov
xchg
imul
stc
aad
cltd
jmp
inc
sar
dec
adc
ficoms
sbb
mov
mov
je
lock
or
dec
xor
mov
aad
xchg
jae
std
jg
mov
pushf
ret
out
jnp
inc
loop
icebp
mov
fisttps
cld
jno
lock
imul
xor
dec
pop
nop
fcmovnu
mov
rolb
nop
cs
push
or
call
sti
jno
xor
mov
shlb
hlt
inc
das
dec
jmp
aaa
int3
mov
dec
adc
mov
loopne
pop
mov
push
mov
insb
xchg
pop
or
mov
xor
jb
js
in
lock
stos
jbe
mov
arpl
inc
mov
and
mov
fwait
loope
nop
stc
es
cmp
push
and
call
mov
outsl
adc
sar
push
je
add
stos
mov
pop
lcall
push
xchg
jb
leave
xor
ficompl
fwait
dec
dec
xchg
test
js
mov
fdivrs
clc
mov
repnz
std
sub
inc
mov
mov
daa
lcall
inc
mov
leave
adc
aad
cmpsl
jb
loope
push
cld
lea
or
cmc
jl
rol
ret
cltd
cmp
pop
cmp
fists
inc
das
mov
inc
jnp
and
enter
and
push
push
cmc
mov
out
xor
mov
xor
adc
jecxz
ljmp
data16
shlb
or
mov
push
test
inc
adc
jp
out
lahf
sub
mov
cmc
xchg
into
aam
mov
mov
sbb
stc
or
xorb
dec
pop
pop
adc
pop
dec
add
pop
nop
rol
cmp
sbb
or
inc
lods
std
sahf
jne
mov
pop
mov
andb
dec
pop
cmp
jg
add
andb
or
pop
mov
hlt
scas
hlt
xchg
sub
sbbb
jne
stc
mov
pusha
cmpsl
xchg
adc
fs
ds
add
xchg
ret
into
xorl
inc
lods
or
mov
fisubrl
push
out
mov
pushf
scas
insb
sbb
mov
mov
cmpsl
xor
mov
call
or
mov
popf
lea
mov
aad
and
push
fisttpl
daa
and
in
cmp
mov
pop
inc
into
pop
dec
and
jp
dec
add
sbb
hlt
xchg
mov
xchg
mov
lock
mov
imul
adc
push
repz
add
popf
mov
stc
cmpsb
daa
mov
dec
fildl
adc
lock
fs
ljmp
jne
clc
pop
sbb
dec
sti
jnp
jl
pop
sahf
lods
imul
pop
outsb
mov
xlat
jo
int
push
xchg
js
push
pushf
lods
adc
repnz
ds
lcall
xor
shrl
cwtl
push
test
add
xchg
hlt
push
and
cld
inc
adc
andl
push
add
mov
mov
arpl
adc
pop
test
cmp
push
std
nop
mov
or
xchg
xor
std
fmuls
orb
xchg
sbb
and
mov
pop
subb
push
and
stc
arpl
pushf
sbb
mov
pop
pop
sarb
mov
lret
cmp
and
leave
sub
push
outsb
jg
jmp
cmp
sbb
dec
dec
pop
stc
loope
stc
mov
out
lods
hlt
pop
xorl
mov
loop
lods
movsl
cli
and
sbb
rcll
fisttps
push
daa
lahf
push
inc
mov
or
pop
inc
cld
xchg
jmp
inc
ljmp
pop
js
repnz
fld
into
sbb
xor
xchg
mov
ret
ret
and
pop
jo
cmp
add
xor
jb
sbb
movsb
adc
xor
clc
sub
ret
pop
clc
mov
cmp
std
pushf
fdivp
adc
aam
push
push
gs
jb
sub
negl
test
enter
sahf
sbb
or
fcompl
or
sub
hlt
jmp
jmp
inc
dec
addr16
rcrl
das
push
ljmp
mov
inc
jmp
inc
movsb
stos
xchg
ret
cs
sbb
xchg
inc
fldl
xor
aam
fisttpl
lahf
push
pop
mov
add
test
gs
add
sub
mov
leave
lods
mov
out
into
insl
adc
enter
popf
inc
das
stc
pop
lahf
neg
sbb
jb
gs
mov
aam
imul
cmp
ret
dec
mov
stos
lret
push
shl
call
int
lea
data16
jmp
test
push
mov
pop
fstl
adc
fs
mov
stc
loope
xor
es
mov
mov
pop
sahf
and
das
icebp
sahf
xlat
imul
fdivs
or
movl
ret
and
dec
mov
stc
pop
dec
lcall
sbb
xchg
je
push
rorb
daa
pusha
shrl
js
mov
jns
ljmp
jp
mov
pop
jecxz
fnstcw
xorb
iret
lock
sbb
loopne
mov
pushf
movsb
repnz
sahf
push
pushl
movb
cmp
je
mov
movzwl
mov
mov
mov
jmp
mov
xor
lea
jmp
mov
xor
add
jmp
mov
add
mov
mov
test
je
movl
push
xor
pop
add
push
pop
push
dec
pop
dec
xchg
sub
xchg
dec
mov
imul
sub
mov
mov
xor
add
jmp
mov
mov
mov
mov
xor
add
xor
div
mov
xor
lea
mov
mov
mov
mov
mov
xor
lea
mov
mov
mov
xor
add
imul
mov
mov
xor
lea
cmp
jne
mov
xor
add
mov
mov
add
xchg
xor
push
mov
pop
mov
add
lea
add
add
push
inc
pop
dec
xchg
dec
xchg
dec
xchg
dec
push
mov
pop
dec
call
cmp
je
xchg
push
pop
push
pop
inc
xchg
sub
xchg
dec
dec
mov
imul
add
xchg
push
xor
mov
dec
inc
add
dec
xor
add
pop
mov
pop
pop
pop
leave
ret
push
mov
sub
push
xor
push
mov
mov
mov
mov
movl
cmpl
je
cmpl
jne
push
call
xor
add
dec
mov
jmp
andl
xor
xor
inc
mov
cmpl
jne
push
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
push
call
jmp
andl
movl
movl
mov
andl
mov
inc
mov
cmpl
jne
pushl
pushl
push
push
pushl
pushl
pushl
call
cmpl
jb
xor
mov
mov
and
sub
sub
mov
xorl
mov
andl
jmp
xor
xor
inc
mov
cmpl
jae
cmpl
jne
push
pushl
push
pushl
push
call
jmp
movl
cmpl
je
cmpl
jne
push
call
xor
xor
dec
mov
jmp
sub
mov
sbb
sub
andl
jmp
xor
or
inc
mov
cmpl
jae
cmpl
jne
push
pushl
push
pushl
call
cmpl
jne
mov
inc
mov
jmp
mov
orl
mov
mov
sub
mov
orl
mov
mov
sub
mov
orl
mov
mov
sub
mov
mov
mov
mov
xor
mov
add
or
mov
mov
mov
sub
mov
orl
mov
xor
add
push
mov
xor
add
push
mov
xor
add
push
lea
push
pushl
pushl
call
test
je
lea
push
mov
xor
add
push
mov
add
push
mov
mov
pushl
call
mov
lea
mov
mov
test
je
lea
mov
mov
mov
mov
mov
sub
mov
mov
xor
mov
sub
add
mov
mov
mov
mov
pushl
movb
mov
pushl
pushl
pushl
pushl
pushl
pushl
pushl
mov
call
mov
mov
add
pop
pop
leave
ret
push
mov
sub
adc
movl
add
lea
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
call
cmpl
jne
mov
inc
mov
jmp
xorl
mov
dec
push
andl
mov
inc
mov
cmpl
jne
pushl
push
pushl
push
push
pushl
call
cmpl
jne
xor
xor
inc
mov
cmpl
jb
mov
adc
mov
lea
sbb
mov
xor
or
mov
adc
mov
addl
mov
mov
xor
sbbl
add
xorl
mov
orl
mov
mov
mov
sbbl
add
dec
push
movl
cmpl
je
cmpl
jne
call
cmpl
jne
xor
or
dec
mov
mov
dec
mov
jmp
mov
or
mov
adc
mov
mov
xor
mov
subl
add
movl
cmp
je
mov
jmp
mov
movl
cmp
jne
push
movl
jmp
mov
mov
mov
movl
cmp
movl
jne
add
mov
xor
add
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
push
push
call
jmp
not
mov
sub
mov
mov
or
mov
xor
add
adcl
imul
andl
mov
inc
mov
cmpl
jne
push
push
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
andl
xor
add
cmp
movl
mov
movl
push
movl
je
sub
mov
add
dec
mov
mov
adcl
xor
addl
add
subl
imul
movl
mov
jmp
mov
xor
mov
mov
xor
mov
mov
sub
add
mov
mov
add
mov
mov
mov
xor
xor
lea
mov
xor
add
imul
mov
xor
sub
mov
add
cmp
mov
mov
jg
xor
mov
sub
add
jmp
xor
add
add
mov
mov
mov
xor
add
jmp
xchg
rolb
jae
fs
movsb
jg
sbb
jp
in
jp
insl
pop
inc
sub
add
xchg
das
repz
insl
leave
pop
cmp
in
repz
adc
and
xor
jbe
push
in
jns
test
or
mov
and
jl
pop
lahf
xor
pop
test
shl
mov
mov
sbb
push
mov
lock
inc
mov
lds
dec
mov
mov
add
js
fsts
xchg
mov
stc
loop
stos
out
dec
and
les
and
js
xchg
cmp
movsb
jmp
loope
into
in
xor
cmp
push
pop
jb
or
stc
xlat
jl
xchg
neg
int
pop
pop
xchg
mov
pop
testb
daa
sub
fwait
imul
jnp
ljmp
out
movsl
xor
mov
pop
cs
mov
pop
mov
pushf
ret
inc
imul
ds
adc
jne
xor
and
cmp
mov
arpl
add
adc
mov
dec
and
and
ds
pop
pushf
test
subb
sbb
jp
mov
push
ja
or
jae
or
sbb
adc
negb
push
cltd
movsl
mov
jae
in
pop
outsb
and
cmp
jg
mov
xchg
daa
scas
and
pop
push
icebp
test
loope
add
xor
in
ficoms
fadd
adcl
sbb
mov
xchg
mov
ja
jl
cmp
cld
push
push
arpl
lods
adc
std
out
jbe
adc
add
insb
incb
std
cmp
inc
xchg
cld
bound
jae
inc
ds
bnd
jmp
sbb
ds
out
inc
pusha
dec
jo
in
test
call
or
int
cmp
or
sub
aaa
jp
mov
hlt
leave
ss
sub
jl
imul
mov
insb
cmp
mov
sbb
push
pop
xlat
pop
pop
push
roll
inc
push
add
push
cmp
mov
nop
adc
xor
mov
roll
cltd
dec
pop
sbb
sub
add
andb
cmp
xchg
hlt
insl
dec
pop
xor
in
or
shrb
fcomip
mov
ficoml
test
imul
fldenv
insl
sub
outsb
aas
lret
add
popf
cmp
fdivrs
mov
sbbb
cmpsb
out
daa
data16
push
jge
mov
scas
jbe
cld
shll
jbe
inc
nop
push
mov
mov
push
rcrb
and
pop
and
inc
adc
jnp
mov
fcomps
adc
daa
movsb
or
adc
repnz
push
ljmp
xor
cltd
xchg
imul
dec
out
daa
push
xchg
outsl
xor
leave
pop
fsts
daa
jnp
insl
js
jle
push
popa
mov
in
fs
xor
mov
pushf
cwtl
adc
inc
iret
es
pop
mov
lods
add
enter
xor
rorl
fistpl
insb
outsl
lds
decb
inc
out
jbe
mov
sub
dec
or
jnp
or
adc
push
mov
rcr
cmp
xchg
mov
shll
cmp
and
imul
addr16
mov
push
push
mov
jg
xor
pop
mov
sbb
lods
je
aad
lahf
mov
jo
in
decb
mov
cmc
cmp
mov
jl
jbe
cltd
daa
adc
test
cmp
and
pushf
in
sti
pop
enter
mov
sub
jno
aad
repnz
and
xchg
mov
mov
mov
xor
ljmp
add
sub
or
jb
dec
aam
stos
lods
xor
pop
push
movsl
push
xchg
nop
push
out
adc
or
call
cli
into
rcl
sbb
push
clc
push
push
push
int
mov
rcll
test
cmp
cmp
lods
sub
scas
sbb
and
icebp
sbb
gs
movlps
and
and
filds
repnz
mov
shll
dec
pop
mov
pop
lret
lret
fs
dec
loop
lock
jae
add
cmp
pop
xchg
mov
sahf
mov
xlat
cmp
cmp
fidivl
inc
dec
fnsave
dec
mov
or
push
lods
popa
out
je
cmp
xor
dec
es
iret
mov
stos
sbb
pop
push
sbb
icebp
cmpsb
sub
and
pop
les
mov
xorl
xor
fwait
inc
ret
pop
sbb
lahf
outsl
push
daa
jo
cmp
rol
sbb
xchg
push
mov
fdivrp
fs
push
xor
outsl
adc
lret
jno
cmp
cmc
sar
cltd
sbb
sbb
jo
aam
in
cli
lds
xor
cli
pop
push
scas
jge
push
jno
into
pop
arpl
push
notl
mov
hlt
cmp
sbb
push
aas
push
mov
inc
inc
mov
inc
adc
jbe
cmp
push
push
bound
or
sbb
js
or
out
pop
lods
inc
mov
xor
jb
cmc
or
pop
mov
mov
test
out
cmp
xchg
scas
rol
imul
pop
mov
popf
cmp
lahf
sti
test
and
pop
rorb
filds
sub
mov
cmp
stos
xchg
pop
or
addr16
rolb
repnz
sbb
ret
and
add
xor
loopne
out
xchg
adc
andl
sbb
ds
outsb
pop
ret
pop
stos
test
jno
or
or
call
icebp
push
lds
push
push
ret
cmp
in
xchg
sbb
xchg
pop
add
jg
clc
outsl
cmp
sarb
jp
stos
clc
push
cltd
pushf
addr16
repz
or
in
stc
jmp
mov
push
cwtl
cmp
pop
aam
mov
push
aaa
mov
or
xchg
pop
inc
add
lret
mov
mov
lods
ret
pop
lds
and
dec
mulb
xor
mov
xchg
icebp
jp
popf
aam
andb
popa
sar
es
pop
xchg
dec
lock
dec
lods
fs
inc
lcall
test
ror
push
pop
pop
ss
stc
test
flds
mov
sub
sbb
aas
inc
mulb
pop
or
push
xorb
and
loope
jge
pop
cmc
push
sub
cmpsb
pop
pop
mov
xchg
mov
xchg
sbb
std
mov
out
adc
xor
push
inc
sub
out
sub
mov
or
adc
cwtl
push
pop
push
dec
outsb
rcr
pop
movsl
sbb
out
imul
adc
repz
mov
adc
dec
xor
jne
inc
aad
sub
mov
push
out
dec
int3
lea
shrb
and
ret
xchg
inc
push
cld
rcll
push
int
shrl
enter
or
lods
jno
inc
jne
rcrb
dec
sahf
fstpt
push
pop
scas
inc
fsubrs
das
sbb
flds
push
jmp
lea
jae,pn
or
out
mov
sub
out
mov
outsb
mov
leave
sbb
pop
xchg
sbb
sub
or
adc
int
ret
pop
fstpt
mov
clc
int3
push
xor
adc
loope
xchg
dec
push
xor
pop
sub
inc
sub
scas
mov
aad
jbe
int
adc
push
xor
andl
mov
out
sti
mov
xchg
inc
dec
popf
fwait
movb
adc
jl
mov
pop
mov
xchg
cmc
lcall
inc
pop
jb
into
mov
sub
outsl
sub
ja
in
lds
and
dec
sub
ja
test
inc
ds
pop
out
mov
or
mov
inc
aas
inc
jg
je
das
push
ja
popf
or
mov
push
pop
out
pop
push
push
xor
pop
sub
mov
out
and
cltd
mov
jns
test
and
mov
sahf
orl
mov
repnz
decb
into
iret
aad
sub
dec
sub
sbb
lods
int
lcall
adcb
mov
mov
adc
dec
stos
push
mov
and
rcrl
add
in
dec
cmp
jae
shrl
popf
call
addr16
insl
pop
jl
lods
xor
and
mulb
cmp
insb
pop
loope
push
push
mov
sub
negl
jmp
sbb
fisubrs
inc
call
adc
dec
es
rclb
add
idivb
push
jae
lcall
jmp
cmp
fnsave
ret
cmp
iret
cwtl
insl
mov
sub
mov
pop
xor
or
pushf
pop
cmp
lret
xor
int3
xchg
fiadds
jl
test
mov
mov
mov
in
add
dec
js
fsubrl
xchg
stos
daa
xlat
jl
hlt
sbb
popl
sbb
mov
and
and
mov
sbb
aad
sbb
incb
mov
pop
xchg
clc
sub
out
xor
lcall
push
fiadds
dec
inc
gs
push
xor
ljmp
mov
jno
xchg
add
out
movsb
xor
pop
lds
lahf
dec
cltd
cmp
out
sub
sub
repz
sbb
lahf
or
push
and
or
lods
sbb
shlb
std
xchg
shrb
xor
mov
pop
xabort
negb
mov
lahf
jp
insl
sbb
loope
pop
adc
lret
jp
std
outsb
sbb
sbb
dec
mov
xlat
mov
and
nop
push
adc
ja
xorl
mov
inc
cmc
fs
sub
fimull
mov
xchg
test
inc
lock
mov
sbb
mov
jmp
roll
out
mov
movsl
xorl
andl
call
sub
sub
bound
insl
inc
fwait
lret
xchg
mov
pop
mov
sub
test
adc
sbb
cltd
cmpsl
lahf
xor
cmp
fisubrl
fmulp
ret
fcomip
xor
popa
mov
mov
in
adc
imul
push
xor
arpl
das
cltd
jmp
sti
jns
inc
inc
gs
je
jecxz
push
jge
lret
das
mov
std
mull
inc
sbb
cmp
iret
lret
mov
push
adcl
lods
sarb
popf
stos
ret
loope
loop
lret
sub
add
ret
std
jge
add
push
repz
mov
and
scas
xor
rol
in
lock
mov
jb
sub
push
ljmp
dec
sub
cmc
call
inc
movsb
jne
pop
je
loop
or
adc
xor
pop
out
insl
mov
inc
mov
das
in
jmp
das
fldl2e
cmp
and
enter
and
sahf
mov
mov
pop
mov
loope
sbb
leave
mov
in
cmp
fwait
nop
gs
xchg
clc
mov
inc
mov
pop
test
es
mov
das
mov
push
dec
jmp
fbstp
mov
adc
mov
repz
xor
push
or
mov
dec
ret
push
xchg
xchg
in
subl
pop
fldt
vmovsldup
dec
push
rorl
ret
push
adc
imul
pop
lds
or
test
lock
cmp
std
enter
rcl
mov
jo
imul
jmp
addr16
pop
mov
sbb
pop
icebp
mov
and
cmp
in
inc
and
inc
xchg
or
into
push
sbb
sub
xchg
int3
cmpsb
test
adc
andb
pop
insl
icebp
mov
stos
ja
push
push
pop
dec
xchg
hlt
cld
out
fstpt
push
adc
dec
jae
and
or
inc
lods
leave
popa
ficompl
xchg
dec
filds
pop
lret
dec
xor
dec
cs
cs
cmpsl
jp
mov
adc
repz
out
lea
xor
mov
nop
mov
ja
adc
or
jg
jg
loop
sbb
roll
sti
pusha
xchg
cmp
arpl
pushf
je
fisubl
pop
cmp
lds
daa
lds
and
mov
jno
js
push
les
mov
test
cltd
out
arpl
frstor
gs
pop
aad
mov
push
mov
in
sub
jge
sahf
call
or
mov
hlt
xchg
jns
outsl
imul
xlat
or
mov
dec
mov
xchg
xor
mov
inc
aas
jno
mov
sub
mov
ret
lret
jnp
cmc
or
or
sti
daa
mov
lret
mov
cmc
mov
pop
mov
cs
inc
out
push
push
aad
and
mov
ret
jmp
cmp
addr16
push
sar
loopne
mov
into
mov
sbb
sbb
jecxz
std
mov
dec
in
out
cmp
stos
mov
divb
in
mov
lcall
aad
jo
inc
pusha
aas
sub
dec
push
sbb
xor
nop
pop
add
std
rclb
iret
fidivs
jmp
das
lods
bound
pop
int
shll
push
addr16
enter
rcrb
add
ljmp
pop
cmp
int
ds
pop
imul
shr
bound
ret
movsl
ror
cmp
test
loop
aas
int
sahf
mulb
outsb
push
mov
rcrl
xor
sub
js
cltd
das
jns
mov
ljmp
mov
xchg
xchg
rcll
les
xor
cmc
jo
cld
data16
jnp
xor
icebp
test
cld
sbb
out
shr
cli
lock
lds
adc
arpl
pop
push
addr16
adc
add
shr
and
ffreep
sbbb
out
dec
cli
dec
add
nop
pop
add
pop
cli
pop
aad
lret
movsl
call
lds
inc
shll
push
out
cmp
and
fldt
subb
mov
add
dec
int3
test
arpl
cs
cmp
adc
sub
stos
push
bswap
push
fyl2x
movsl
outsb
mov
outsb
sbb
jns
pop
jbe
jbe
mov
sub
int3
loope
out
das
cmp
ljmp
mov
movsl
xor
js
int
mov
dec
in
fsubl
and
in
xchg
popf
jae
icebp
out
fists
movsl
inc
mov
shl
inc
fmuls
adc
or
stc
mov
dec
adc
xchg
jle
adc
push
cmpsb
lea
fsubrp
xor
aam
fcmovbe
imul
or
pop
pop
cmpsl
mov
repz
loope
popf
mov
std
clc
mov
push
das
sub
jecxz
or
rcl
movsb
mov
mov
or
lahf
jo
sub
aaa
or
mov
push
pop
push
pop
sub
inc
mov
jns
pusha
push
jne
push
dec
daa
fdivs
test
shll
jmp
dec
ljmp
push
fwait
add
popf
fsubp
add
lods
push
or
std
adc
or
or
push
out
push
mov
push
mov
inc
pushf
stc
jmp
mov
pop
sahf
pushf
sbb
add
adc
stos
mov
loopne
push
dec
movsl
add
mov
jne
in
dec
inc
push
pop
in
and
ljmp
mov
jae
jnp
pop
dec
sbb
nop
jle
mov
pop
push
or
or
int3
adc
mov
mov
imul
push
inc
iret
jge
mov
push
sub
mov
inc
add
xchg
fcoms
jecxz
xor
mulb
cmp
jmp
notb
cmp
inc
pop
xor
pop
mov
mov
int3
cmp
ret
inc
dec
dec
ja
xchg
cmp
out
jp
cmpb
pop
inc
lds
pop
xor
dec
or
hlt
push
xor
sbb
stos
mov
cli
pop
xor
cmp
push
add
mov
xor
push
das
mov
ljmp
cmp
into
sbb
rolb
adc
mov
adc
push
loopne
testb
ds
adc
notb
pop
in
out
xor
pusha
cmp
sbb
xchg
loopne
xchg
lods
inc
mov
in
jecxz
jae
mov
jp
sbb
add
ljmp
mov
jne
pusha
lret
sbb
mov
loope
lcall
fsubrs
push
ret
mov
dec
jmp
sub
add
or
xchg
adc
add
cs
in
xchg
jl
js
pop
and
pop
pushf
adc
imul
cmp
cwtl
insb
in
rolb
xchg
inc
and
outsl
cmpsb
in
jl
int
or
or
outsb
cmp
mov
mov
sbb
sub
pop
push
das
outsb
sbb
pop
jb
jnp
dec
pop
inc
xchg
add
call
push
mov
mov
outsl
sub
mov
xor
xor
aam
xor
adc
addr16
add
mov
cmp
mov
xor
popa
mov
push
cmp
ss
hlt
mov
jg
cmp
vmovaps
sbb
scas
cwtl
fs
adc
xchg
or
jge
cmp
cmp
shll
loope
bnd
sub
dec
push
xor
mov
mov
cmpsb
outsl
mulb
testl
cmp
push
dec
sub
push
aad
in
mov
inc
jno
push
call
jne
loopne
mov
mov
sbb
cmp
xchg
xlat
gs
fucom
mov
iret
mov
insl
dec
and
add
pusha
mov
push
into
inc
int3
rcl
push
xlat
sbb
push
insb
pop
fstpt
out
add
call
movsb
stos
pop
pop
enter
pop
dec
cmp
lea
enter
fidivl
pop
cs
push
sti
lret
cmc
xor
mov
cmp
or
popf
mov
ret
lds
xchg
adc
insl
pop
mov
out
push
mov
pop
adc
stc
faddl
inc
pop
les
sbb
xchg
dec
mov
pop
lret
dec
xor
mov
rcl
mov
mov
push
jge
fdivrl
cmp
ret
jae
mov
pop
push
gs
ss
stos
xor
ret
pop
dec
hlt
fs
out
sbb
xchg
in
insl
les
xor
xchg
ds
movsb
mov
aaa
add
es
xchg
jns
test
fistpl
jno
inc
fnstcw
imul
mov
mov
xchg
add
fimuls
jae
or
mov
pop
das
cmp
sub
cmp
push
and
xchg
jns
nop
jl
push
or
dec
insb
les
mov
xchg
adc
into
jp
cmpsb
sarb
push
xlat
mov
lds
mov
fwait
mov
xchg
xchg
aas
xor
mov
push
cmp
jmp
xchg
sub
jp
fisubrs
adc
int
inc
ja
repz
aas
push
mov
push
sti
add
inc
lea
xor
ja
mov
dec
dec
faddl
mov
sub
fistps
push
push
orl
repnz
xchg
fisttps
aas
cmpsl
inc
push
andb
fnstsw
dec
repz
iret
icebp
in
rcrl
or
and
insb
ret
sbb
xchg
xchg
fcmovbe
add
out
jns
sub
jg
jb
adc
cmp
push
ja
arpl
sbb
jbe
cmp
sbb
dec
aad
mov
sti
lock
pop
xchg
test
push
xchg
pop
push
jg
sub
rcll
xchg
pop
dec
test
stos
outsb
add
inc
mov
mov
inc
add
add
or
in
xchg
mov
push
mov
pop
pushf
mov
jno
fnstcw
stos
rolb
xchg
xor
ret
jl
or
jb
xor
mov
scas
sub
fcomps
cli
adc
mov
pop
jmp
lret
mov
pop
sub
filds
or
dec
mov
loop
or
out
xor
ss
push
or
or
inc
mov
lds
mov
sti
jmp
sar
gs
push
inc
add
add
mov
jne
stc
xchg
testb
inc
fs
add
das
add
les
and
fwait
and
or
scas
imul
orl
insl
jbe
xor
xor
cmc
inc
jmp
sbb
rorb
and
jecxz
jmp
stos
jmp
stc
and
push
jge
cltd
addr16
mov
arpl
cmp
lds
testb
out
mov
xchg
shll
das
mov
or
icebp
es
mov
mov
scas
arpl
mov
sbb
les
iret
leave
fsub
and
push
aaa
pop
mov
and
or
or
push
rcrb
mov
lahf
mov
ja
out
xor
add
fisttpll
fistl
int
jne
push
es
loope
dec
dec
mov
push
sub
adc
insb
les
pop
or
add
xchg
rcll
pop
add
add
insb
ja
negl
pop
aas
push
movb
pop
push
repnz
dec
jle
xlat
jle
inc
test
xchg
and
inc
das
pusha
xor
shrb
insb
ret
mov
pop
orb
daa
and
push
inc
in
loopw
mov
xchg
xchg
lock
loop
imul
jns
mov
aad
xlat
in
xor
xchg
test
xchg
cmpsl
andb
cmp
repnz
cli
cmp
cli
js
cmp
jecxz
subb
out
push
aam
fisttpl
mov
es
fcompl
fidivrl
xchg
xchg
leave
push
mov
cmp
mov
data16
je
in
cwtl
les
aad
push
xor
mov
dec
jne
pop
xchg
addl
shll
push
pusha
ja
fimull
add
adcb
pop
jge
mov
icebp
fldcw
js
in
rcl
mov
ss
sbb
or
cltd
hlt
ljmp
ret
xor
lret
loop
inc
pop
cmc
adc
dec
aaa
lods
mov
jecxz
les
mov
sub
es
inc
jle
xlat
jl
jne
mov
repnz
loope
test
leave
mov
out
dec
inc
fsubs
adc
leave
xor
jbe
leave
xor
mov
aad
pop
leave
nop
inc
out
out
mov
or
pushf
sbb
jmp
xor
cmp
push
inc
imull
outsb
sub
fwait
xchg
xchg
lea
ss
cmpsl
addr16
loopne
or
mov
jl
pop
dec
adc
add
and
lret
out
rclb
sub
imul
daa
xor
jbe
jb
into
xor
ds
testb
inc
fisttpl
orb
inc
icebp
xchg
sti
rorb
mov
iret
arpl
aam
add
dec
popa
mov
jl
hlt
adc
adc
mov
mov
nop
and
push
xchg
int
arpl
fcmovnu
inc
push
and
xchg
xchg
aad
dec
sbb
xlat
pop
cmpsb
test
insb
cmpsb
nop
enter
mov
std
push
movsb
ret
xchg
pop
jl
jb
fstps
aaa
lock
inc
push
dec
sbb
push
adc
imul
ret
or
cmp
ret
push
cmp
or
daa
jne
leave
test
fcoms
inc
jns
push
pop
sbb
push
xadd
ss
imul
es
into
sbb
clc
loope
out
jge
repnz
icebp
lods
cmp
cmp
add
and
jge
xchg
dec
pop
push
cmpsb
lret
icebp
popa
jbe
popa
into
dec
or
lret
mov
mov
daa
test
pop
push
add
in
sbb
jmp
imull
ss
lahf
mov
js
pop
dec
mulb
or
cld
cmp
ficoms
sarl
and
push
aam
push
cmp
inc
addl
fmull
inc
out
fpatan
aaa
loope
ds
decl
sbb
ret
enter
lods
cmp
dec
imul
aaa
mov
fisubrs
mov
add
cs
push
mov
imul
inc
pusha
dec
fldt
fwait
scas
je
aam
aas
outsl
lds
mov
pop
arpl
add
pop
pop
push
sbb
stc
cmpsl
cmp
pop
mov
incb
cmp
cltd
ja
stos
movsb
sub
mov
mov
sbb
push
inc
inc
aaa
not
inc
or
inc
add
fidivrs
out
out
rorb
adc
fs
rorb
popl
sbb
into
cmp
sub
js
and
int3
xor
ja
imul
mov
mov
mov
push
scas
mov
fimuls
andl
mov
push
dec
enter
and
ret
mov
jo
pop
fbld
jae,pn
and
or
or
pop
loope
cld
aaa
mov
fcoml
mov
adcl
jae
imul
leave
or
xchg
outsl
jmp
mov
addl
fdivrl
sbb
mov
lret
das
mov
arpl
mov
inc
out
aaa
addr16
fildl
mov
sub
and
mov
out
in
add
dec
psubw
cmpb
push
dec
push
mov
push
jl
jmp
cmc
xchg
mov
cltd
xor
pop
cld
lock
and
inc
jle
dec
push
aad
fildll
mov
loopne
orl
ret
jno
adc
cmp
inc
or
xor
dec
cwtl
jge
sub
xor
mov
mov
mov
cltd
es
mov
pop
and
ret
sbb
or
and
fdivs
fidivl
jns
into
aad
xor
shl
lret
mov
sub
cld
jo
jle
and
repnz
jge
inc
lcall
sti
outsl
aas
lods
mov
cmpsl
rorb
fsubs
dec
frstor
or
push
lret
jb
int
push
push
xor
in
add
jge
jg
cli
sub
push
inc
mov
add
pop
xchg
xchg
pop
adc
mov
mov
cmpsl
sbb
push
cmp
loop
jmp
jg
fdivl
mov
sbb
xor
sbb
mov
es
ds
inc
cmpsb
inc
mov
sbb
dec
fcompl
es
arpl
push
test
xchg
test
adc
pop
out
xor
pop
mov
mov
jb
fcomi
mov
cmp
mov
mov
jmp
dec
in
or
loopne
sbb
arpl
add
loope
add
sbb
push
scas
stos
pop
cltd
pusha
lods
and
adc
sub
sub
sub
mov
data16
mov
daa
pop
mov
out
or
es
mov
pop
adc
daa
arpl
mov
push
iret
cmp
dec
ret
lahf
out
adc
inc
leave
shrl
pop
cmc
repnz
movsl
push
fs
cli
push
out
xchg
sti
mul
inc
ret
pushf
roll
mov
fidivrs
outsb
mov
xchg
idivb
mov
outsb
test
inc
xor
mov
cmp
xor
dec
push
sub
daa
aad
fwait
lret
dec
insl
xchg
test
mov
cmp
imul
or
inc
outsl
mov
loop
xor
repnz
andb
push
shrb
and
lea
ja
cmpsl
mov
jge
cmp
xchg
fimuls
dec
push
fsubrl
lret
mov
cmpsl
in
sub
inc
xor
sub
sub
cmpsl
mov
or
addr16
pop
jae
xor
rcll
push
xchg
jnp
jecxz
in
aad
sbb
dec
in
rcrl
push
add
push
test
mov
fiaddl
testl
das
cli
outsl
arpl
pop
loope
je
in
adc
cmc
adc
xchg
in
push
test
shl
in
push
lret
hlt
push
repnz
mov
mov
call
dec
aad
hlt
test
xchg
cmpsb
xor
or
je
mov
repz
popa
jg
jecxz
imulb
cs
mov
stc
push
lcall
call
cmp
or
jne
ds
mov
sbb
addr16
cli
int3
lret
int3
cmpsb
cwtl
adc
jb
js
cld
jo
int
and
xchg
push
outsl
or
xor
mov
sub
mov
pop
push
test
outsl
pop
xor
jge
int3
fdivrl
sbb
int
jl
add
rcl
lods
enter
jnp
fwait
xor
pushf
in
add
sub
insl
stos
daa
es
loopne
psllq
xchg
in
das
in
pop
mov
cmp
mov
mov
push
inc
sbb
xor
subl
push
mov
sub
mov
push
add
mov
and
loop
jae
test
ret
mov
das
push
jle
lods
das
push
loop
fiadds
icebp
arpl
xchg
loop
and
push
pop
shrb
sbb
mov
bound
or
aaa
add
imul
rolb
mov
movsb
inc
mov
mov
xchg
push
popf
pop
popa
xchg
mov
adc
mov
icebp
ror
out
sbb
push
mov
adc
xor
out
mov
jo
add
divb
rolb
repz
pextrw
movsl
gs
adc
shlb
orb
mov
jne
add
pop
push
push
cmp
sarl
xchg
add
fsubrl
adc
lds
lods
into
pop
xchg
lcall
sbb
mov
pop
pop
mov
xchg
fbstp
mov
jb
pusha
xchg
or
jb
push
ds
mov
fisttpll
mov
in
mov
fs
mov
xchg
insl
mov
je
fdivrs
push
mov
xor
mov
das
shlb
mov
fcompl
lcall
lret
in
sub
push
cmp
cmp
ret
add
lret
fsubrl
jae
jl
pop
jne
scas
push
and
xchg
lea
mov
sti
push
fdivl
adc
pop
ds
mov
push
cltd
xchg
sarb
sbb
sub
arpl
or
adcl
push
mov
lock
and
lods
mov
js
jle
add
mov
mov
pop
pop
fiadds
je
cmp
scas
rclb
push
push
cmp
into
push
lods
out
gs
imul
imulb
xlat
and
movsbw
mov
sub
mov
xor
mov
cmp
jne
movsbw
mov
sub
mov
xor
mov
cmp
je
mov
xor
mov
sub
add
jmp
mov
mov
mov
lea
mov
mov
mov
xor
add
mov
mov
mov
xor
add
pop
cmp
jne
mov
xor
mov
add
imul
mov
pushl
jmp
mov
add
mov
mov
mov
movsbw
mov
sub
mov
xor
mov
cmp
jne
mov
mov
mov
jmp
mov
cmp
jne
push
pushl
pushl
pushl
pushl
call
pop
pop
leave
ret
push
mov
sub
xor
push
mov
mov
sub
add
mov
addl
mov
movl
push
or
mov
mov
xor
mov
mov
mov
incl
xor
movzwl
adc
mov
xor
mov
andl
add
add
imul
movzwl
mov
cmp
movl
je
mov
sub
mov
xor
add
adc
mov
xor
addl
lea
xorl
mov
or
mov
mov
movl
cmpl
je
cmpl
jne
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
xor
xor
add
add
imul
mov
cmp
je
jmp
xor
aaa
fwait
mov
decl
ljmp
jp
stos
in
iret
sbb
xlat
cmpsl
repz
pop
xlat
lret
imul
xchg
testl
repnz
ja
inc
push
cmp
cwtl
sub
jne
xchg
pop
mov
sub
inc
and
out
and
mov
push
fcomi
cmc
popa
shlb
lcall
mov
aaa
sti
mov
mov
fidivl
and
jp
or
fstp
sub
xchg
fildl
pop
fisttpll
mov
les
mov
int
adc
cmp
jmp
std
add
jp
scas
cmp
push
call
repz
sbb
pop
jbe
dec
sub
sahf
cmpsb
cmpsl
inc
data16
cmpsl
outsb
xchg
lahf
scas
jbe
outsb
sub
movsb
xor
xchg
test
mov
jns
repz
je
fstpt
jnp
fcom
hlt
lods
in
sub
repz
or
nop
movsl
add
insl
inc
in
test
inc
dec
jb
sbb
push
or
jge
leave
cwtl
clc
mov
testl
pop
jo
adc
dec
jmp
add
inc
mov
inc
fninit
sub
jne
push
mov
pop
inc
adc
nop
loope
leave
lods
lcall
stos
push
push
or
outsl
das
scas
fdivr
in
andb
adc
sahf
adc
dec
enter
dec
add
xchg
aad
xchg
sahf
or
sub
fsts
cmp
pop
shlb
pusha
add
xor
std
pop
push
xchg
in
out
popa
cmp
cmpsl
test
hlt
stos
pop
adc
imul
aad
adc
imul
ljmp
jne
cli
inc
cmpsl
mov
call
sub
sbb
ret
ficoml
sub
gs
pop
iret
stos
faddl
lods
les
sub
cmp
rorb
inc
lock
sbb
dec
sub
gs
xor
xor
icebp
jmp
mov
xchg
cld
outsb
or
out
inc
aaa
adc
and
fdivp
orb
rorb
xor
ljmp
enter
adc
inc
inc
pop
fcmovnb
xchg
push
mov
movsb
and
ja
mov
mov
cmp
rorl
push
push
adc
int3
pop
sbb
incb
inc
enter
popa
mov
sbb
cmp
cmp
mov
cmpsb
lods
jae
hlt
cmp
pop
into
shll
xor
rcll
mov
adc
outsb
mov
mov
push
hlt
adcb
aad
lcall
mov
lahf
xor
outsl
andl
push
pop
loop
add
mov
or
loopne
dec
dec
ja
xor
hlt
dec
jo
or
enter
lods
and
inc
mov
inc
adc
pop
inc
push
pop
adc
pop
mov
push
jmp
pop
inc
mov
add
ja
cmpl
dec
jecxz
ja
out
filds
xchg
loop
or
lret
jmp
jp
push
and
pop
fcomps
test
fidivs
fwait
pop
subl
xor
or
sbb
leave
push
push
cmp
mov
jmp
subl
push
scas
mov
mov
xlat
or
push
sbb
les
das
jo
stc
xchg
gs
jmp
in
sub
rcll
daa
repnz
fwait
mov
out
jae
xor
ljmp
push
inc
js
lcall
negb
ja
mov
iret
hlt
cmp
mov
into
gs
and
ljmp
and
cmpsb
dec
lret
or
sbb
stos
loopne
pop
fcomp
gs
lods
loope
int3
pop
xor
add
clc
cmp
push
push
insl
leave
aaa
movsl
inc
sub
sahf
xchg
cmp
imul
adc
hlt
jecxz
inc
xchg
shl
xchg
test
out
rorl
push
xor
pusha
ret
int3
xchg
add
pop
leave
pop
std
adc
in
in
int
sti
mov
dec
insb
movsl
jmp
jnp
nop
jns
inc
mov
fcoml
jle
add
adc
ja
xchg
jb
jb
pop
mov
xchg
or
movsl
inc
lret
jbe
aaa
popf
roll
das
loop
pop
mov
movsl
in
pop
shlb
out
arpl
fs
ret
mov
lea
cmp
sbb
cmp
les
stc
negb
dec
add
lods
sbb
mov
sub
fists
xor
xchg
cmp
int
imul
mov
cmp
xchg
adc
loop
push
mov
imul
insl
scas
outsl
xchg
call
clc
mov
cmp
or
and
repz
testb
leave
push
push
movl
aam
movsb
addr16
cmp
in
sub
pushf
sub
movsb
add
mov
into
ja
jmp
pop
mov
sub
out
lds
and
mov
mov
sbb
out
or
dec
sti
data16
add
mov
pop
push
and
popa
mov
pop
shll
mov
sub
add
or
scas
fisubs
and
mov
cmp
out
popa
jo
xchg
jp
jbe
subl
xchg
mov
cwtl
fwait
cmc
xchg
pushf
push
pop
and
mov
mov
xchg
or
add
loop
jnp
push
add
jg
or
test
iret
and
adc
add
fcmovnu
sahf
jnp
push
dec
es
imul
arpl
adc
in
push
add
mov
jg
xchg
lret
inc
sbbb
inc
xchg
mov
mov
cs
lea
jmp
sbb
adc
dec
insb
push
push
daa
call
mov
js
test
mov
ret
jmp
cmp
push
fnsave
jge
addr16
push
out
cmp
fimull
int3
lret
movsl
loop
inc
xchg
cmp
cmp
scas
fs
inc
or
lret
clc
les
cmc
pop
rcrl
mov
out
or
clc
push
clc
add
test
sub
scas
inc
mov
cmpsb
cmp
mov
scas
fcomps
sahf
aaa
int
rcll
jnp
mov
and
out
push
pop
addr16
clc
jne
mov
add
stos
in
jno
in
push
push
adc
popf
insb
lods
push
hlt
sub
jle
iret
out
mov
out
jecxz
jmp
push
js
clc
xor
jp
pop
mov
push
dec
out
lea
movsb
out
cmp
in
int
push
jne
add
clc
push
sbb
adc
dec
cwtl
lret
into
mov
and
mov
hlt
sbb
andb
cld
dec
push
xchg
mov
fs
sbb
fwait
fwait
jbe
enter
ret
call
mov
or
mov
adc
jl
xor
test
in
int
sbb
flds
outsl
pop
stos
std
daa
mov
inc
sub
push
adc
xor
lret
push
leave
inc
xchg
rcrb
mov
clc
sbb
jecxz
imul
fsubrs
out
popa
imul
or
sbb
ss
sbb
sbb
mov
bound
push
mov
sub
dec
inc
push
push
jle
xor
loop
xor
sarb
mov
mov
xchg
fldenv
inc
shr
in
in
hlt
hlt
insl
pop
scas
mov
ret
dec
adc
sbb
adc
movsb
push
adc
jg
popf
jb
daa
sbb
insb
mov
dec
je
cltd
jmp
and
and
xor
sbb
mov
iret
mov
aad
outsb
ljmp
filds
or
and
and
insb
mov
or
or
pop
xor
test
adc
enter
pop
das
mov
out
cmp
push
cmp
in
mov
sub
nop
or
pushf
andb
sahf
scas
dec
sbb
xchg
cmp
hlt
stos
ja
jle
mov
repnz
aas
negb
pop
cmpsl
scas
insb
or
jbe
push
inc
idivl
fs
lea
xor
add
mov
add
mov
sti
mov
ljmp
mov
mov
push
and
into
push
push
mov
xchg
lahf
out
nop
and
pop
in
subb
add
and
iret
mov
das
add
cwtl
mov
pop
dec
loopne
outsl
loope
mov
lds
jg
mov
mov
sub
dec
aaa
fwait
xchg
repz
mov
jb
in
scas
jno
xor
or
jb
scas
addr16
jo
jmp
add
scas
xchg
or
loopne
sarl
xchg
sbb
mov
add
mov
mov
lcall
cltd
adc
inc
int
fistps
xchg
test
leave
ss
fwait
fstpl
pop
jns
sbb
stos
dec
cltd
dec
lods
or
jne
push
cmp
mov
testl
sub
jmp
iret
cs
xor
daa
pop
mov
ja
mov
mov
in
adcl
jl
or
dec
scas
push
pop
push
ret
aaa
cmp
in
fistpll
nop
adc
jecxz
and
jo
xor
test
dec
adc
sbb
shll
popf
xor
aaa
gs
pop
sbb
popf
cmp
add
ljmp
out
cs
arpl
and
gs
dec
lahf
fisubl
adc
test
inc
movsb
out
fsub
dec
movb
sbb
mov
jmp
push
jp
cmc
xor
mov
pop
xor
or
bound
call
loopne
lret
fsubp
sub
jo
hlt
int
flds
fnsave
inc
lds
lds
xor
ljmp
mov
jo
xor
dec
mov
sbb
out
mov
dec
mov
loope
dec
push
pop
lods
jae
cmp
lahf
loopne
add
pushf
cltd
jmp
dec
scas
call
iret
jecxz
scas
sbb
insl
push
xchg
in
pop
sub
cs
jl
mov
dec
iret
sub
or
adc
push
lods
cmp
mov
mov
dec
sti
out
and
add
sbb
jle
je
cmp
decl
add
xor
inc
push
and
sbb
es
lret
add
inc
pop
shll
pop
stos
mov
pop
sahf
dec
xor
push
pushf
mov
push
loopne
addl
push
push
stos
adc
and
mov
scas
out
mov
sbb
movsl
add
js
sbb
mov
xlat
mov
mov
mov
sub
mov
addr16
ficomps
cld
inc
pop
rorb
or
hlt
mov
push
xchg
jge
adc
push
cmp
pop
sbb
mov
ss
and
pop
mov
test
sbb
popf
imul
cmp
hlt
cmp
lret
cmc
and
cmp
movsb
sub
pop
das
shll
pop
pop
fsubl
xor
in
mov
into
sti
xchg
cmc
lea
cltd
imul
push
imul
int
sbb
inc
movsl
out
test
pusha
daa
pop
mov
mov
pop
stos
fnstcw
push
test
pushf
inc
mov
dec
add
imul
add
sti
cmpsb
add
xchg
xor
xor
sub
inc
sbb
jb
hlt
xlat
push
xor
cmpl
ja
adc
je
rcrl
mov
xor
add
sbb
subb
je
loope
fwait
jecxz
inc
cmp
sub
dec
or
push
jle
out
mov
andl
std
popa
fcoms
pop
push
push
push
ret
cmp
xor
lods
or
loope
jae
lds
adc
xlat
xchg
sub
inc
sub
aam
cltd
push
lret
pop
push
scas
dec
addl
jmp
xchg
cmpsb
mov
imul
cmp
dec
cmp
adc
sbb
pushf
fnstsw
test
xlat
xchg
jp
pop
xchg
sbb
adcb
in
sti
cmp
iret
ficomps
adc
pop
aam
fidivl
and
sub
lcall
rorb
test
fldl
cs
shlb
push
adc
mov
mov
jmp
adc
movsb
mov
inc
sbb
xlat
xor
shll
cmp
fmull
add
mov
cmp
dec
andl
add
cs
pop
fnsetpm(287
out
mov
shlb
pop
std
inc
repz
fs
inc
js
or
dec
xorb
mov
mov
sub
ja
add
jecxz
adc
sbb
pop
sarb
pop
fisttpll
in
mov
cmp
sbb
movsb
pop
and
push
jbe
cmp
pandn
sbb
cmc
aas
sub
test
adc
push
mov
inc
dec
push
sub
adc
lods
repz
test
xchg
aam
mov
pop
out
xchg
sbb
iret
xchg
sbb
push
xchg
iret
jnp
sub
sub
xchg
pop
sbb
repnz
xchg
std
inc
jmp
push
push
ljmp
loope
xchg
jmp
push
gs
jnp
repz
aam
push
data16
pextrw
aaa
call
insb
fbld
inc
cmp
sti
jns
adc
cmp
pop
lds
xlat
xchg
pushf
mov
out
or
pop
sub
or
hlt
addr16
ror
and
xor
jbe
icebp
insl
jmp
xor
in
insb
mov
fstpl
nop
pop
shl
mov
cmpsl
mov
stos
das
dec
jge
call
push
shll
push
push
imul
xchg
mov
es
xlat
inc
popf
dec
out
lock
in
mov
mov
iret
in
aad
in
mov
aas
shll
or
sbbl
mov
pop
stos
lods
jae
xchg
js
je
xchg
in
cwtl
mov
fnclex
sub
push
addb
fs
jecxz
add
or
jnp
mov
andl
subl
sub
mov
arpl
aas
mov
leavew
mov
xchg
fnstcw
sub
pop
xlat
mov
sti
push
test
jo
push
push
push
vpunpckldq
cld
pop
stos
out
movsl
in
enter
and
cmp
xchg
push
pop
add
bound
or
ficoms
sbb
pop
fs
adc
fdivrs
or
xchg
sti
mov
xchg
iret
int
inc
mov
mov
and
adc
or
or
aaa
sbbl
xchg
adc
in
in
into
ja
sub
div
jnp
sub
sub
and
icebp
sti
mov
test
popa
loopne
movsl
mov
xor
in
out
inc
int
les
ret
mov
jle
iret
inc
mov
and
nop
pop
push
fsubl
mov
rol
inc
push
add
aas
dec
jno
fwait
lods
int
mov
les
push
test
jno
pop
mov
ds
test
lcall
insb
repz
js
push
add
repz
mov
out
gs
movsb
sub
loope
repz
std
clc
mov
cmp
sub
je
push
aaa
push
imul
frndint
mov
fidivrl
push
inc
scas
pop
ss
mov
add
outsl
pop
shlb
icebp
mov
out
popl
loop
inc
fiaddl
xchg
imul
mov
subl
out
shr
gs
pop
pushw
jo
nop
jmp
addr16
lea
shl
lods
xor
pcmpgtb
push
mov
mov
pop
push
ljmp
inc
test
push
fiadds
adc
addr16
lods
nop
ror
ficompl
into
jmp
sub
loop
fsubs
sub
popa
mov
bnd
add
cmpsb
add
dec
fsubs
push
gs
adc
jns
or
mov
adc
bound
cmp
pop
in
add
and
pop
scas
das
pop
cmpsl
mov
rcrl
repnz
or
jg
mul
repz
incb
sub
xchg
or
test
out
mov
stos
xchg
test
lock
jge
xchg
mov
repz
pop
subl
and
int
fisubs
add
adc
fmul
fldcw
test
cmc
arpl
jno
insb
or
jge
movsl
popa
inc
xor
sbb
sbb
xor
cmp
roll
mov
push
addr16
push
inc
pop
push
mov
pop
xchg
ficomps
adc
test
std
fsubl
outsl
je
out
cmpsb
movsl
pushf
lret
rol
nop
in
fildl
je
or
cmp
pop
in
lods
arpl
dec
dec
dec
lahf
rcrl
data16
jbe
shll
loop
pushf
inc
jmp
repz
fcmovnu
xor
enter
xchg
test
vphsubbw
ret
push
test
ja
cmc
lods
xchg
mov
cld
lds
pop
xchg
fsubr
jnp
mov
divl
les
pop
mov
or
popf
cwtl
jmp
xchg
pop
adc
imul
sub
mov
int
or
jecxz
xor
push
xchg
push
cmc
lods
cli
jge
sbb
jg
nop
dec
in
pushf
push
jp
sub
add
jp
pop
dec
cmpsb
fsubrl
lock
push
mov
repz
dec
dec
mov
sarb
xlat
das
addr16
outsl
test
out
xchg
cmp
sbb
daa
xor
pop
xchg
inc
sbb
dec
cmp
sub
xchg
pop
mov
aam
or
shll
imul
es
sbb
cmpsl
mov
mov
adc
lock
or
push
and
sahf
sbb
in
out
shlb
mov
add
rorl
jns
jo
test
aas
jmp
out
test
adc
stc
dec
adc
mov
mulb
mov
outsl
push
inc
call
mov
xchg
mov
adc
inc
push
sbb
lods
test
pop
pop
mov
push
cmc
pop
rorl
push
dec
icebp
test
xor
pop
lret
dec
imul
outsl
mov
test
mov
pusha
out
push
or
inc
mov
add
fs
out
jg
stos
test
into
outsb
jnp
sub
jo
mov
icebp
setp
inc
mov
push
xchg
mov
arpl
ret
push
push
mov
and
adc
rcrb
andl
push
jp
aaa
mov
sub
adc
data16
daa
jbe
push
lods
jnp
inc
cmp
sahf
subb
ljmp
push
pushf
push
push
andl
pusha
popf
ror
xor
push
stos
aam
fs
out
xor
sti
sarb
icebp
sub
jae
mov
adc
sub
xlat
xlat
das
sbb
fdivl
fdivrl
nop
frndint
out
jl
rcll
daa
lea
and
loope
dec
xchg
lret
xor
out
hlt
scas
mov
and
ror
movsb
mov
js
rcl
fistps
mov
les
xchg
pushf
xor
ret
leave
gs
mov
lods
mov
or
sbb
or
sbb
out
lods
filds
mov
jg
add
les
xchg
loope
cmp
out
cld
pop
test
inc
clc
mov
push
pushf
adc
out
jbe
adc
or
add
mov
jno
dec
sbb
and
bound
mov
or
push
cmp
fistpll
and
and
jne
xchg
fwait
dec
fstps
add
inc
shlb
ret
aas
int
mov
leave
sbb
jns
call
bound
inc
sbb
and
cmp
hlt
scas
int3
pop
xor
loop
dec
cld
adc
mov
lcall
cmp
inc
aaa
xor
sbb
mov
mov
sub
in
xlat
adc
sbb
xchg
test
pop
daa
adc
dec
movsb
test
xchg
ret
add
imul
xchg
orl
daa
cli
outsl
ret
pusha
mov
lret
popa
out
mov
inc
je
jg
lds
xchg
adc
adc
ss
add
arpl
imul
mov
out
mov
adc
adc
mov
push
cmp
sbb
clc
cli
add
out
fincstp
int
imul
dec
in
inc
mov
inc
iret
mov
rolb
jae
sub
pop
pop
hlt
mov
mov
fldenv
js
and
cmpsl
clc
mov
xchg
andb
push
xorb
icebp
xchg
mov
mov
in
adc
movsl
cmpsl
fsubs
cmc
sub
lea
jns
lret
push
xchg
adc
inc
mov
push
in
lret
inc
dec
lret
add
mov
xor
add
out
add
imul
adc
fbld
fimull
push
outsb
icebp
push
lods
sbb
xchg
dec
and
or
rorb
arpl
xchg
xchg
lcall
pop
fwait
test
or
test
idivb
jae
fwait
mov
cmp
jno
arpl
sti
xchg
xorl
shrl
shl
cltd
xor
pop
sub
fnstsw
inc
jae
enter
repnz
mov
lea
sar
loopne
add
xor
cltd
mov
xchg
outsl
es
jo
add
xchg
loope
adc
xchg
add
clc
sbb
lods
push
lock
mov
mov
sub
inc
mov
sub
movsl
sub
or
and
jne
fldenv
cmp
stc
push
mov
xchg
dec
inc
popf
push
subl
clc
pop
cmp
ret
xor
xchg
lret
inc
js
mov
int
adc
jae
test
mov
insl
dec
jecxz
inc
dec
ret
xchg
and
adc
insl
lret
div
les
jecxz
movsb
push
jbe
dec
add
pop
jo
push
cmp
ljmp
mov
cmp
push
scas
les
test
ljmp
insl
push
dec
sbb
sbb
inc
sbb
jno
es
xchg
roll
and
pop
stc
mov
mov
mov
in
sub
jb
pop
dec
bound
or
test
sbb
cmp
stos
or
testb
add
sbb
mov
sub
cmc
lret
sbb
repnz
inc
jmp
and
xor
cwtl
lds
add
push
push
jns
fs
lret
aaa
test
xor
sti
movsl
adc
push
insl
mov
in
incl
icebp
ljmp
cmpsl
xlat
mov
popf
testb
sbb
notb
sbbb
xor
aaa
lea
xchg
lea
insl
call
cmp
adc
push
daa
jle
mov
in
mov
fsubs
fcompl
or
hlt
or
xlat
lods
cli
iret
daa
pop
mov
add
xchg
test
iret
lock
push
push
add
ja
inc
push
fwait
sti
les
movsl
sbb
mov
adc
and
stos
clc
xchg
iret
lea
pop
mov
jns
cwtl
clc
stos
icebp
inc
mov
scas
mov
adcb
test
loope
mov
imul
lret
sahf
cmpsl
aaa
jle
xchg
rclb
mov
mov
pop
jecxz
mov
imul
mov
pop
dec
loop
lock
cmp
movsl
pop
dec
mov
ds
std
lcall
cmpsl
cltd
mov
js
xchg
outsl
fisttps
bound
stos
jmp
mov
or
bound
dec
sbb
sub
jle
aam
lret
jle
mov
ljmp
out
adc
dec
and
or
aaa
add
lods
sbb
cmp
mov
or
mov
jo
fnstenv
out
jecxz
inc
jl
in
rolb
cltd
mul
lahf
jne
push
loope
push
test
mov
leave
adc
pop
and
mov
mov
jno
mov
je
lret
or
inc
sbb
data16
add
outsl
enter
fcoml
lcall
int3
subb
dec
sub
pop
ret
and
mov
dec
ret
loopne
mov
and
ret
stos
adc
sub
ficompl
in
call
nop
das
sub
out
sahf
and
xchg
pop
xchg
cmp
les
dec
mov
pushf
test
and
xchg
cmpsb
dec
jp
mov
push
cwtl
ljmp
outsb
jecxz
aam
imul
lcall
add
jle
jb
pop
mov
adc
ret
mov
sbb
popf
ror
push
mov
dec
sub
xchg
inc
in
jbe
data16
jno
jecxz
cltd
dec
dec
xchg
and
gs
test
cmp
std
sub
and
pusha
fistpll
or
xor
cltd
and
rclb
pop
cmp
jecxz
cwtl
cmp
notb
pop
xchg
dec
pop
mov
sub
inc
popa
sbbb
es
add
adc
ret
or
mov
outsb
ss
cwtl
push
ljmp
xchg
shlb
sub
outsb
or
loope
std
lods
lods
cli
popf
push
push
add
mov
mov
int
test
mov
sarb
sub
and
stos
inc
push
je
mov
inc
adc
nop
std
adc
or
cmpsl
lret
push
insl
adc
mov
xor
js
and
xor
mov
mov
and
sbb
and
fmull
jo
and
movsl
pop
fsubrl
popa
lods
ret
push
sti
in
cld
loope
daa
mov
dec
sbb
out
push
aad
fcomp
mov
frstor
outsl
sub
push
gs
inc
mov
dec
inc
mov
ffreep
jae
mov
mov
or
sub
mov
bound
daa
mov
out
in
jge
jb
add
lret
push
cmp
adcl
add
test
enter
push
fdiv
imulb
pop
jne
xor
dec
pop
call
mov
movsl
loopne
test
in
sub
fs
xchg
cwtl
mov
aam
cmp
icebp
mov
insb
lahf
mov
sbbl
ss
mov
xchg
test
bound
mov
cld
jmp
xor
pop
stos
pop
sub
fs
pop
adc
dec
jb
pop
push
insl
cmpsb
inc
das
push
and
add
cmp
jno
inc
push
push
dec
mov
cltd
movsb
out
fwait
repz
pop
das
or
and
into
negb
dec
cltd
inc
sub
stos
cs
out
lock
xor
jecxz
xchg
or
pop
aam
loopne
subps
rol
insb
out
pop
movsb
shrb
dec
shlb
pop
sub
outsb
inc
out
mov
pushf
adc
inc
lock
push
or
je
jo
mov
and
or
xor
xchg
movsl
push
scas
dec
popf
shr
nop
cld
jp
push
aad
adc
lods
hlt
xchg
roll
inc
add
mov
repz
int3
insl
cmp
pop
lods
pop
fbstp
hlt
hlt
mov
stos
xlat
dec
mov
mov
aad
pop
div
adc
jne
negl
sub
sti
popf
cmpsb
std
movsb
lret
inc
in
inc
testb
xor
inc
in
jmp
and
sbb
jmp
mov
loopne
lock
mov
dec
pop
push
pusha
outsb
mov
push
cmp
ss
iret
subb
xchg
push
loopne
sub
ret
std
inc
lret
mov
jge
adc
enter
jmp
test
cli
in
push
test
out
notb
mov
or
pop
jp
pop
testl
das
cmpsl
stos
inc
mov
movsl
inc
adc
popf
adc
xchg
pop
jae
add
cmc
push
xor
mov
jns
in
sub
mov
xchg
xchg
cmpsl
dec
mov
ja
cmp
mov
and
xchg
pop
sub
shlb
and
or
ss
mov
int
ja
inc
andb
cmp
fsub
stos
mov
shll
insb
cmp
leave
pop
xor
add
jne
rorl
lea
mov
jbe
fxch
clc
es
stos
xchg
stos
cmp
xchg
fcomps
aaa
daa
insl
mov
out
mov
mov
shlb
adc
add
aam
xchg
and
jg
sub
jae
out
mov
mov
add
daa
sbb
call
jo
ja
cmc
sbb
sti
sub
aaa
cli
pop
lds
mov
xchg
xor
push
sub
jbe
aad
mov
xchg
sbb
enter
pop
pop
cmp
jg
lret
add
mov
mov
repnz
mov
dec
inc
lret
hlt
pushf
scas
imul
pop
inc
cmp
pavgw
push
sbb
fcmove
cs
cmp
mov
leave
dec
add
push
sti
mov
xor
shr
push
bound
sub
add
repz
cmp
cld
ss
mov
push
mov
xchg
lods
xchg
leave
jbe
pusha
pop
scas
shrb
shlb
pcmpeqb
push
hlt
lret
jmp
in
mov
adc
nop
mov
add
lcall
mov
push
hlt
mov
mov
popf
push
aam
mov
int3
and
fs
into
daa
cld
sub
data16
inc
mov
in
mov
clts
fcomps
out
dec
push
pop
adc
cmpsb
loop
sub
inc
mov
aas
pop
cmpsb
cvtps2pd
movsl
fstpt
inc
sti
ds
jbe
fcmovnbe
es
shll
lds
add
lret
rcr
add
test
mov
cmp
clc
outsb
mov
mov
cs
jg
pop
push
loope
push
fdivs
inc
sbb
scas
pop
aad
or
lret
clc
push
cld
das
fs
loope
test
xchg
faddl
cli
cmpsb
loop
sub
dec
lret
sahf
popf
mov
mov
and
bndstx
mov
dec
clc
inc
push
shrl
jmp
rol
inc
sub
ss
nop
jbe
xor
inc
popf
addb
rorl
loopne
push
out
jg
jbe
sbbl
adcb
xor
aas
dec
daa
hlt
fisubs
jo
lret
test
pop
dec
outsl
jecxz
push
dec
fsubrs
and
test
mov
xchg
sbb
mov
push
cld
xor
mov
add
imul
add
mov
mov
jmp
mov
mov
xor
xor
add
add
imul
pop
pop
leave
ret
push
mov
push
movl
xorl
mov
mov
adcl
mov
xor
sbbl
add
orl
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
jmp
andl
mov
xor
push
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
pop
leave
ret
push
mov
sub
add
mov
movzbl
adc
mov
adcl
xor
mov
orl
add
xorl
movzwl
mov
movb
adc
lea
mov
sub
mov
orl
mov
andl
xor
orl
sub
orl
mov
andl
movl
xor
push
movl
cmpl
je
cmpl
jne
push
push
push
call
cmpl
jne
xor
or
dec
mov
mov
dec
mov
jmp
movl
mov
addl
push
add
mov
movl
cmpl
je
cmpl
jne
pushl
push
push
call
xor
xor
dec
mov
jmp
andl
xor
add
inc
mov
cmpl
jne
push
push
push
pushl
pushl
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
xor
mov
push
add
movl
jmp
mov
movl
mov
movl
inc
movl
cmp
jb
mov
addl
xor
adcl
add
movl
jmp
mov
movzwl
sub
mov
mov
decl
xor
mov
andl
add
andl
movzwl
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
push
push
push
call
cmpl
jne
mov
inc
mov
jmp
add
mov
movzwl
orl
xor
add
mov
mov
mov
inc
movl
mov
movl
cmp
movl
jne
sub
mov
adc
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
cmpl
jne
xor
xor
inc
mov
jmp
xor
andl
mov
inc
mov
cmpl
jne
push
pushl
push
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
add
movl
mov
mov
adc
xor
sbb
add
or
mov
movl
movl
movl
cmpl
je
cmpl
jne
call
xor
xor
dec
mov
jmp
movl
mov
or
mov
mov
xor
add
add
movl
mov
mov
mov
je
mov
mov
jmp
mov
pshufw
lcall
fcomps
jp
and
inc
ficomps
and
xor
iret
lcall
lods
xor
out
fs
data16
dec
sahf
pop
jae
in
stc
imul
push
fs
mov
shr
sub
push
add
std
jle
mov
lahf
add
insb
mov
aas
xchg
int
lds
pop
lds
jno
out
or
dec
je
rclb
or
aam
into
cli
mov
xchg
cmp
mov
push
xor
std
cpuid
mov
ja
in
adc
xlat
ljmp
jge
jae
mov
xor
sub
pop
jg
fdivrl
xlat
adc
inc
inc
mov
xorl
and
pop
subl
fcoms
shrb
push
xchg
in
jae
sub
aaa
xor
cmp
pop
inc
stc
into
aad
lock
adc
sbb
jmp
add
mov
or
or
jge
xor
rcll
jb
cwtl
sub
in
fcoml
adc
xor
mov
imul
cli
fistpl
mov
sbbl
mov
in
mov
cmp
lods
pop
dec
pop
ds
mov
psrlq
sub
call
adc
xchg
jecxz
imul
test
pop
push
test
jae
push
mov
push
push
mov
rcl
lock
rcrl
mov
in
stos
push
add
sub
ja
hlt
les
sbb
push
test
push
mov
sbb
in
dec
mov
mov
push
call
es
loopne
xor
in
fsubrs
mov
cltd
cmp
mov
mov
mov
jo
out
or
push
pop
hlt
jg
rolb
dec
mov
arpl
or
adc
cwtl
js
jno
xor
popf
int
lea
sub
shlb
jbe
cwtl
imul
int3
xchg
xor
bound
inc
into
inc
xor
and
push
xlat
pop
inc
add
pop
into
add
jb
jmp
push
ret
daa
icebp
xchg
addr16
into
roll
sbb
push
inc
outsl
sub
cltd
xchg
pop
gs
out
xchg
dec
inc
es
mov
cmpsb
cmp
lods
inc
cmp
in
icebp
adc
xor
cmc
es
xor
icebp
xlat
imul
add
fisttpl
in
push
subl
push
sub
out
mov
bound
lods
dec
mov
jle
push
pop
shll
add
inc
mov
sub
or
fsubl
lock
jecxz
mov
fiaddl
push
mov
xchg
out
adc
add
cltd
shlb
ljmp
stos
test
insl
fcmovu
ds
fstps
popf
mov
sub
mov
inc
add
pop
gs
pop
pop
ret
test
add
mov
hlt
jmp
adc
shl
fwait
add
inc
or
sahf
cmp
lret
test
data16
fistpll
mov
shl
sbb
test
adc
mov
xchg
fnstenv
insl
push
mov
cmp
xchg
jb
jmp
add
daa
test
inc
push
out
or
mov
xchg
inc
shlb
fadds
clc
int
lea
sbb
xchg
push
xchg
loopne
out
incb
jnp
movsl
or
adc
js
push
pushf
rclb
inc
mov
and
cmp
jae
xor
cs
das
jle
inc
aad
xor
xchg
xor
cmpsb
mov
xor
inc
inc
mov
cli
rcr
xor
insl
cmp
stos
mov
cmp
cld
and
mov
xor
pop
mov
fidivrl
shrl
daa
and
add
cmp
sbb
imul
adc
loop
je
outsl
pop
ficompl
jb
arpl
sub
fcmovne
pop
js
bswap
sub
sub
int
out
sub
inc
scas
pop
fs
add
sbb
shll
aam
or
and
mov
es
lcall
fsubl
mov
xchg
jp
shll
mov
ljmp
enter
and
add
insb
aad
leave
xor
into
cli
outsb
mov
fnstsw
mov
dec
inc
inc
pushf
jbe
dec
add
imul
cld
pop
mov
sub
lret
add
out
shlb
pusha
loopne
in
and
jge
sarl
mov
sub
in
fistl
xchg
cmpsb
push
push
iret
rcrb
adc
dec
cmpsb
xor
scas
push
int
fcmove
or
sub
push
cmpb
sub
mov
adc
repz
push
mov
mov
imul
and
out
xchg
dec
cmp
add
movsl
fwait
dec
jns
xor
lret
mov
push
sbb
ret
ficompl
fistpl
popa
ss
jne
addr16
sbb
jg
shrl
repnz
mov
or
mov
popa
ljmp
cmpsb
mov
cli
stos
sbb
add
sbb
add
add
into
int3
insb
cmpsb
rclb
insl
es
xchg
imul
cmp
rorl
ret
mov
mov
out
inc
inc
pop
jge
cmp
mov
shll
das
and
adcb
cmp
xchg
lods
cmpsl
jnp
sbb
push
in
lods
xchg
sbb
xor
int
aad
sbb
les
fstpl
call
sub
mov
inc
fistps
frstor
lcall
sbb
shl
xor
sub
adc
sarb
jo
cmp
jnp
mov
mov
js
jo
xor
int3
cmp
ret
fbld
enter
xchg
mov
push
xchg
outsb
pop
pop
pop
lock
sub
and
dec
and
cwtl
out
jmp
mov
push
ja,pt
popl
std
mov
in
flds
aam
or
cmp
popa
and
scas
jns
daa
enter
add
pop
arpl
xor
das
mov
insb
lret
rcrb
arpl
pop
add
push
leave
enter
rclb
stc
adc
dec
push
cmp
std
jo
fisttpl
imul
jle
out
pop
mov
xchg
outsl
mov
ljmp
lea
aam
pop
and
ds
les
jmp
into
popf
lods
cmp
repnz
sbbb
stc
push
mov
ror
sub
mov
pop
jl
inc
mov
jge
in
movsl
call
mov
scas
xchg
xchg
loope
sub
jg
jns
push
mov
fnstsw
mov
outsl
inc
cmc
ficompl
daa
mov
pusha
xchg
gs
sub
popf
imul
js
jno
mov
pop
mov
mov
add
cmp
and
dec
imul
xchg
jae
inc
adc
mov
inc
jmp
mov
xchg
adc
aaa
psrlq
inc
push
push
mov
int3
bound
sub
sar
dec
and
xchg
shlb
add
sbb
mov
insl
mov
loopne
fst
out
stc
add
popa
lods
faddl
mov
adc
cmp
jp
fldcw
test
lds
jbe
push
cmpsl
rcl
nop
or
jmp
cmp
loope
lea
xchg
imull
sub
push
adc
add
cmp
fmuls
push
aad
adc
mov
sub
lds
xchg
mov
mov
loopne
jmp
ja
je
add
xchg
mov
test
sub
push
and
daa
push
mov
xor
in
xchg
or
jns
cltd
jmp
jecxz
fldl
adc
lock
leave
jp
jle
lods
loope
jp
jnp
faddp
rcrl
ljmp
mov
and
sbb
out
fnstenv
push
xchg
stos
data16
cli
mov
daa
adc
mov
add
xchg
push
lcall
add
mov
mov
nop
jae
lock
push
fs
fisubl
sahf
jle
ds
sbb
mov
lods
testl
test
add
icebp
int
and
adc
stos
popw
add
cmp
test
mov
mov
lods
push
jnp
push
pcmpeqd
in
sub
fwait
lds
push
mov
jp
iret
xchg
incb
sub
sub
mov
inc
and
jbe
jo
jle
scas
shll
sub
cmc
or
pusha
adc
mov
push
push
outsb
into
out
push
cmp
xor
adc
movsl
std
xor
mov
loope
sahf
jmp
inc
mov
xor
icebp
test
out
cld
add
cmp
inc
cltd
mov
dec
fs
aam
xlat
sub
popf
inc
jecxz
sbb
push
mov
adc
adc
push
cs
sub
je
pop
push
cmpsb
std
mov
lods
fsubrl
mov
leave
js
rorb
mov
sub
mov
test
mov
cmp
mov
orb
gs
and
loopne
fs
dec
or
lods
inc
out
cmp
mov
sahf
and
dec
mov
mov
repz
daa
addr16
jg
mov
movsl
push
movsl
movb
repnz
mov
andl
adc
fsts
ss
cmpsb
lods
gs
test
and
sbb
xchg
fisubs
pop
sbb
mull
sub
sbb
or
movsb
and
lods
pop
movsb
jecxz
es
in
test
imulb
adc
xor
or
mov
dec
lret
or
out
dec
loop
dec
scas
outsl
pop
xor
push
insb
iret
icebp
outsb
xchg
xlat
jnp
stos
mov
mov
cli
repz
sub
cmpsb
pop
stos
outsb
in
mov
mov
jl
insl
dec
add
cmp
jmp
ljmp
cmp
and
dec
aaa
jns
lea
xchg
enter
cli
xchg
les
mov
xlat
lcall
jge
jg
pushf
mov
mov
xor
xchg
push
mov
imul
bound
imul
xor
sub
imul
cmpsb
sarb
into
sbb
in
sub
mov
push
std
out
les
xchg
xchg
fwait
dec
inc
cmp
pop
int
mov
fisubl
movsl
mov
inc
jecxz
mov
push
cs
stos
sbbb
xor
insl
mov
test
aas
pop
mov
mov
dec
repnz
cmp
das
movzwl
mov
mov
nop
mov
ja
rcrl
ja
jbe
scas
lock
inc
movsl
leave
ret
paddw
xlat
test
push
jl
jb
int3
outsl
test
jle
pop
inc
pop
jb
out
mov
mov
sub
push
push
imul
cmp
test
jmp
rol
fstpt
scas
lock
lods
xor
adc
daa
lock
stos
or
mov
stos
dec
aaa
or
lahf
jno
cld
mov
pop
jecxz
push
int
icebp
lahf
fsubr
rolb
in
and
lret
jno
mov
push
add
mov
ja
adc
mov
xor
xchg
adc
lret
pop
sti
movsl
jmp
lds
daa
ficomps
mov
divb
xor
shlb
xchg
insl
mov
pop
scas
andl
mov
push
rcl
mov
xchg
fnstsw
cmpsl
lods
imul
and
jae
test
jnp
les
sub
inc
orl
push
fld
push
lea
lds
arpl
xor
adc
sub
mov
les
addb
adc
out
repz
movsl
jns
negl
pop
aaa
mov
sub
rcrb
orl
cmp
leave
mov
jnp
sbb
fs
mov
test
xchg
imul
xchg
div
aas
add
adcl
enter
jne
pusha
inc
test
hlt
out
dec
lret
add
dec
clc
dec
std
outsl
jl
xor
add
pop
dec
sbb
sbb
aaa
out
loopne
aas
mov
add
popa
test
pop
xlat
xchg
stc
cmp
sbb
es
imul
push
inc
fsub
shrb
dec
and
icebp
mov
jne
mov
xlat
cwtl
sub
sub
loope
cmpsl
push
sbb
add
int
in
or
or
dec
ret
movl
jp
xchg
into
fsub
ljmp
cwtl
sahf
fidivl
inc
lock
negb
test
in
in
test
ljmp
push
loopne
ja
cli
stos
int3
or
cli
or
inc
loopne
addr16
mov
pop
insl
xchg
mov
add
test
cmc
pop
push
leave
pmullw
sbb
jmp
bound
or
cmp
ret
and
add
lret
cmp
add
push
jae
mov
cld
mov
mov
mov
mov
test
dec
xchg
mov
sti
jmp
sub
jmp
xchg
popa
lahf
inc
inc
sarb
jmp
cld
gs
xor
mov
orb
add
mov
jae
idivl
and
ficoms
stc
jle
jmp
push
int3
fistpl
scas
add
shll
imul
sub
cltd
movsb
sbb
mov
pop
push
stos
clc
sbb
scas
stc
mov
daa
test
dec
adc
sub
test
mov
adcl
cmp
pop
incl
in
cs
pop
pop
sbbb
dec
jecxz
out
insl
inc
leave
add
push
in
cmp
push
popa
les
push
push
sub
rorb
cmp
loop
dec
outsl
add
loope
pop
cwtl
push
or
cwtl
push
mov
mov
xor
loop
mov
sub
clc
sub
leave
ds
fs
cmp
mov
orps
outsb
xchg
jg
xlat
jl
push
les
in
cmp
push
mov
jl
mov
lcall
inc
test
test
nop
divl
decb
lcall
fisubs
sahf
outsb
jl
adc
pop
and
push
fdivp
add
or
mov
test
aaa
xor
mov
mov
inc
call
mov
and
mov
add
in
jae
in
mov
and
cld
adc
and
xlat
test
mov
mov
pop
ss
push
push
data16
test
ret
mov
and
jmp
dec
insl
fdivrp
push
mov
mov
cmp
fs
push
enter
cmp
test
fwait
loopne
ret
inc
xor
bt
aad
in
movsl
cltd
outsb
enter
xor
mov
das
xlat
pushf
push
lods
jae
dec
lcall
popf
cltd
or
mov
dec
inc
das
aad
shrb
scas
test
sub
aam
mov
sbb
dec
lea
pop
mov
cli
in
or
jl
or
fcomps
cmp
aas
push
mov
in
lret
jnp
push
shlb
push
ds
xor
popa
repz
mov
dec
pop
push
je
out
icebp
imul
add
add
and
repnz
xor
iret
cmp
in
mov
movsb
mov
mov
sbb
cmp
jecxz
xor
dec
test
mov
inc
pop
cmp
scas
test
cmp
or
jbe
jne
out
jb
test
push
jl
push
pop
xor
xchg
push
jo
lret
jae
sub
ret
inc
pop
fdivr
fwait
mov
nop
adcl
xor
pusha
fwait
sahf
or
inc
loope
add
inc
xor
cld
adcb
les
xchg
cmpsl
cmp
inc
sbb
mov
das
aad
pop
jnp
popl
data16
aad
adc
mov
mov
xor
lods
cld
in
lret
dec
aas
pop
mov
js
sub
dec
adc
jbe
mov
cli
outsb
fidivrs
mov
adc
dec
movsl
inc
jmp
add
push
push
inc
xchg
and
aas
push
pop
enter
and
fcompl
inc
fisttpll
xorb
inc
loop
xor
or
out
lret
icebp
fldl
jbe
pusha
mov
repz
shlb
popf
push
sbb
mull
push
pop
mov
or
adc
pop
iret
pusha
arpl
int
scas
lock
sbbb
insb
dec
add
sar
js
jmp
bound
xchg
fs
jns
xor
lcall
pop
xchg
bound
enter
pop
push
arpl
fwait
pop
aas
cmp
jne
mov
and
adc
pop
push
xchg
pusha
fs
mov
cmpl
mov
pop
stos
bound
jne
jmp
inc
mov
sbb
ds
mov
and
stos
mov
lret
mov
and
sbb
aam
iret
add
pop
pop
sbb
scas
ds
repnz
mov
mov
dec
out
rol
pop
and
pop
mov
mov
lods
mov
mov
sub
mov
jp
aam
movsl
lods
xchg
sbb
pop
loopne
into
int
outsl
cmpsb
or
jmp
sbb
cmc
jnp
xchg
scas
pop
sub
lods
mov
stos
les
stos
popf
stc
fstl
jbe
cwtl
adc
jne
ret
jbe
ja
sub
testb
popf
fstl
inc
stc
pop
and
or
pop
inc
push
aaa
movsl
push
adc
popf
pop
pusha
inc
push
fsubr
jl
mov
sbb
mov
ljmp
jno
and
imul
or
jecxz
pop
int3
sti
imul
aaa
push
rcll
in
addr16
jmp
adc
xor
outsl
mov
lahf
jle
popa
daa
inc
fbld
outsb
sti
notl
add
lds
pop
popl
lds
jb
lea
cmp
adc
jns
sarb
mov
pusha
push
jb
or
push
adc
test
xor
fiadds
pop
shrb
pop
ficoms
std
or
stos
aam
adcb
jl
inc
jge
xchg
pop
sbb
lods
adc
daa
inc
sub
mov
shrb
in
sti
xlat
jg
dec
push
in
lds
sti
daa
jae
sbb
push
addr16
scas
inc
or
outsb
cmp
lods
xchg
mov
pushf
stos
stc
push
in
pop
popa
data16
xchg
hlt
mov
fidivl
pop
adc
ficompl
cwtl
jbe
popa
or
lea
cs
cmp
add
inc
pop
mov
adc
test
inc
xlat
sub
mov
sub
test
test
adc
cltd
or
push
jb
push
dec
or
nop
nop
scas
adc
movsb
ds
aaa
or
testb
das
pop
aam
pop
into
mov
mov
cwtl
xchg
cmpsb
mov
int
xchg
lcall
xchg
jns
xchg
fidivrs
loop
dec
lret
movsl
pop
test
iret
shlb
mov
cmpsb
jl
push
xchg
xchg
jp
fmul
nop
leave
cs
cwtl
push
in
push
mov
push
mov
add
out
mov
incl
aad
sub
xchg
jns
jne
sub
mov
mov
mov
mov
or
outsb
sub
jbe
test
filds
movsb
gs
ret
mov
push
in
mov
enter
xor
test
push
ds
pop
outsl
xor
cmp
mov
mov
jo
push
shll
loopne
popf
xor
mov
add
dec
mov
sub
push
and
mov
pop
pop
mov
xchg
lods
add
pop
xchg
not
mov
aad
add
test
push
js
push
arpl
addl
mov
cmp
sbb
cmpb
nop
js
fildll
int
addb
sub
cmp
clc
notb
cmp
mov
xchg
pusha
jns
in
lret
adc
dec
aaa
sahf
ret
stos
pop
and
rorb
enter
or
add
bound
sbb
in
xchg
sti
add
sbb
ret
loop
outsb
mov
push
scas
fistpll
ja
mov
psrlw
cmc
iret
and
sub
jge
sub
and
jg
iret
and
adc
xchg
mov
adcb
or
push
pop
cltd
xor
leave
sti
int
ret
aaa
dec
stos
ja
lret
push
mov
aam
ficoms
mov
rclb
dec
xchg
fmul
push
cld
mov
ljmp
xchg
std
rcll
mov
push
sbb
jmp
xchg
cli
repnz
cli
and
and
mov
xchg
dec
or
mov
and
xorb
inc
lea
into
fiaddl
popf
shrb
ficoml
mov
jecxz
adc
addr16
mov
or
inc
inc
ret
mov
add
ss
push
es
enter
js
out
dec
mov
pusha
insb
ja
cld
inc
inc
out
sbb
inc
jge
sub
repnz
sar
jno
xchg
push
inc
mov
sbbb
push
mov
out
repz
xchg
call
stos
jno
loop
arpl
jle
aad
mov
aaa
push
push
xor
fidivl
jmp
cmpl
pop
jne
iret
jmp
fidivl
std
mov
jbe
rcr
cmp
pop
dec
fdiv
loopne
dec
das
imul
mov
xchg
xchg
push
ljmp
sub
mov
imul
jl
cmpsb
das
cmc
rolb
sbb
xor
test
into
xchg
pop
jae
add
push
adc
sub
pop
nop
stos
inc
push
test
dec
fcmovnbe
rol
dec
sahf
push
push
pusha
movsb
sbb
sti
in
popa
jmp
mov
mov
sbb
add
int
out
and
mov
push
dec
cli
movsb
sahf
sbb
addr16
fildll
mov
adc
adc
enter
dec
jo
mov
and
ror
push
sbb
jle
aam
dec
mov
int
mov
orb
in
movsb
shr
ficomps
ret
jle
jp
xchg
push
dec
test
pop
inc
cmp
lea
jecxz
in
and
or
push
push
xchg
cmpsl
in
cmpsl
ror
sub
sub
sub
fs
jbe
mov
or
cmp
in
cmpb
cli
daa
subb
push
stos
adc
mov
stos
sbb
in
imul
ffreep
int3
js
cmpsl
or
cmp
or
mov
mov
sbb
ljmp
lock
loope
repz
inc
icebp
jle
ds
xchg
push
sub
and
add
divl
leave
mov
xlat
fcmovbe
decb
add
ds
fdivrs
ss
in
pop
loopw
lret
lea
or
fdiv
cmp
lret
fdivs
fcomi
filds
imul
int
fcomi
hlt
push
cmp
std
outsb
sahf
cmpb
and
cmp
ja
xchg
xor
fdivrs
inc
mov
xor
mov
cmpb
mov
roll
fmul
pushf
repz
je
push
xchg
dec
jl
lods
adc
sti
mov
add
jmp
xor
pusha
xor
rcll
jg
mov
lea
sub
aam
jae
test
call
mov
dec
rcll
dec
pusha
dec
inc
int
in
int3
xor
jae
mov
test
and
std
std
cltd
xlat
push
ljmp
adc
lods
std
fadds
popa
insb
notb
sub
push
inc
jmp
dec
mov
sbb
mov
lahf
push
pop
sbbb
mov
xor
inc
xor
inc
cmp
imul
mov
push
fwait
xchg
xchg
mov
daa
jmp
popa
dec
lds
aad
dec
jl
jg
fst
push
sbb
addl
es
mov
lret
push
fs
add
mov
sarl
lods
xlat
insl
xor
push
jae
insb
not
dec
cli
les
ret
std
test
sub
mov
xchg
scas
dec
xchg
xor
xchg
rcrb
iret
xchg
and
lcall
xlat
inc
fs
jo
push
xchg
sub
fcmovnb
jp
sarl
xchg
loopne
lods
and
xchg
fistpll
sub
push
pop
jnp
idivb
dec
pop
int3
in
mulb
repz
sub
jge
jae
cmpsl
ret
pop
jmp
push
int
dec
and
mov
loop
jae
fsubrs
addr16
mov
mov
mov
lea
out
push
sbb
or
std
pop
sub
pushf
jmp
imul
fcomps
test
adc
data16
mov
inc
lock
scas
cs
push
add
cmpsl
mov
daa
cwtl
mov
inc
out
rorb
push
pusha
test
push
dec
iret
shrl
cli
and
out
dec
push
jnp
xor
sub
jg
hlt
es
decl
test
push
jb
rclb
or
sbb
jecxz
dec
in
add
push
dec
sbb
aam
and
cmp
aas
lock
subl
dec
aad
adc
push
mov
or
adc
push
jg
add
int3
mov
xchg
jg
or
andb
pop
sub
sahf
loopne
inc
pandn
int3
mov
pop
dec
popf
pop
jge
jnp
add
test
cltd
sti
inc
js
xchg
mov
or
pop
xor
xlat
aas
repnz
stos
stos
mov
mov
dec
insl
in
xchg
rcl
adc
push
inc
jle
mov
xchg
xchg
push
cltd
dec
adc
repnz
jne
jmp
sub
push
xchg
filds
push
scas
pop
gs
jb
pop
cld
xchg
sbb
pop
loope
inc
inc
push
shr
lds
es
bound
adc
push
cwtl
mov
push
adc
mov
mov
mov
adcb
movsl
and
jns
repnz
dec
sahf
loopne
bound
push
cmp
addl
push
jp
adc
in
cmpsb
dec
scas
hlt
sub
daa
mov
aaa
xor
push
push
dec
lahf
adc
sub
lds
mov
xchg
call
inc
mov
dec
sub
aas
into
cli
push
arpl
fmul
push
imul
int
adc
int
xchg
sub
push
stos
ret
and
fsubrl
xor
mov
pusha
mov
neg
out
xor
xchg
xor
in
psubd
mov
lods
pusha
add
in
push
xchg
mov
dec
cli
out
lret
jmp
push
pop
cmp
jne
push
lret
pop
js
xor
stos
push
push
rorb
mov
sbb
loopne
jg
in
faddl
sti
xchg
push
mov
xor
mov
pop
jge
xor
aad
cmc
xchg
call
loope
push
add
adc
nop
shl
pop
daa
mov
sbb
inc
div
orb
rcrb
nopl
jns
mov
fwait
imul
sub
std
pop
sub
das
dec
mov
mov
fs
ret
jmp
pop
xchg
nop
or
leave
iret
and
js
daa
faddl
shll
test
in
fiaddl
test
mov
xor
push
mov
cs
and
imul
mov
in
push
mov
cli
addb
out
js
fsubrl
push
mov
sub
add
ljmp
push
out
or
xchg
and
and
jns
pop
shlb
adc
jnp
cmp
int3
sahf
push
ret
aad
addr16
add
addr16
inc
test
pushf
inc
shll
cmp
pop
test
nop
mov
mov
mov
push
push
aaa
pop
lret
and
pop
cs
sarl
or
loope
cmp
jge
and
rcrb
mov
repz
sbb
xchg
mov
cltd
push
jnp
xor
ret
xor
dec
xchg
lcall
jbe
cmpsl
sahf
sbb
dec
inc
cmp
rcrl
jb
cwtl
scas
and
mov
rolb
push
lods
mov
adc
das
mov
dec
test
add
sub
mov
popf
inc
xor
rorl
inc
push
outsl
sbb
ret
dec
das
arpl
cmp
jbe
vpmulhuw
sbb
out
inc
cmp
adc
or
fdivrs
mov
pop
test
xchg
pushf
inc
fimull
pop
test
not
add
cmp
in
ret
mov
das
jo
sahf
xchg
mov
or
mov
and
je
test
movsl
push
outsl
push
adc
and
inc
or
mov
jl
test
push
test
mov
inc
mov
lahf
sti
insl
jno
add
jb
std
out
adc
mov
xchg
sub
pushf
xor
lret
mov
and
add
mov
fwait
ss
mov
sub
mov
jmp
dec
dec
dec
data16
mov
jnp
xor
movsl
mov
ds
pop
enter
push
imul
loop
mov
pop
sbb
loop
hlt
add
aaa
std
jle
and
inc
mov
je
push
lcall
add
test
lcall
out
cld
mov
fstpl
aaa
out
call
cld
push
sbb
frstor
ret
aam
frstor
mov
pushf
cmp
sar
push
leave
xchg
pushf
push
xchg
mov
fidivrl
lahf
leave
loope
fstl
jg
iret
cwtl
lret
in
inc
jbe
jb
insb
je
jge
pop
js
testb
sub
int3
inc
mov
mov
mov
loope
fsubrl
ficoml
nop
inc
add
cltd
jbe
sbb
fbstp
push
xchg
jmp
test
neg
xor
in
fmul
aas
jg
aas
call
inc
mov
push
pop
or
or
sub
adc
pushf
mov
fists
js
orb
movsl
or
fsubrs
dec
repnz
cli
jae
add
addb
mov
sbb
push
in
push
lea
fbstp
push
cmp
movsl
jb
mov
mov
js
sbb
sti
xchg
adc
mov
sahf
call
cmpsl
aas
mov
insb
stos
xor
cmp
pop
xor
xor
into
mov
push
pop
aad
xor
stos
sub
xchg
movsb
aad
jl
push
lods
and
mov
dec
or
repnz
xchg
arpl
mov
xchg
xor
xor
add
push
mov
rol
lock
std
shrb
xchg
ficompl
xchg
xor
pop
mov
scas
inc
out
adc
into
pop
xchg
pop
divl
ds
iret
pop
push
arpl
jp
fwait
jg
and
xor
add
mov
call
xchg
fldz
cwtl
xchg
stc
xlat
xchg
cmpsb
fisubl
xor
xor
xorl
sub
movl
sub
or
xor
movl
mov
mov
mov
add
orl
imul
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
push
push
pushl
pushl
push
call
jmp
adc
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
call
cmpl
jne
mov
inc
mov
jmp
movzbl
or
mov
movl
mov
addl
add
xorl
or
mov
not
mov
mov
add
xor
adcl
mov
mov
not
mov
subl
add
subl
and
subl
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
push
pushl
call
cmpl
jne
xor
add
inc
mov
jmp
mov
mov
movl
lea
andl
mov
mov
mov
sub
add
subl
mov
mov
orl
xor
add
movl
jne
movl
jmp
mov
sub
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
push
call
cmpl
jne
mov
inc
mov
jmp
sub
xor
mov
sub
mov
sbbl
mov
incl
xor
addl
xor
movl
sub
subl
sub
xor
movl
mov
mov
movl
mov
jmp
mov
neg
mov
xorl
xor
addl
xor
sub
and
sub
xor
mov
mov
adc
mov
xor
xor
adc
mov
mov
xorl
add
imul
xor
or
add
mov
mov
mov
sbb
mov
xor
xor
add
mov
add
or
mov
mov
mov
add
xor
mov
mov
mov
add
and
mov
mov
mov
lea
mov
mov
mov
sub
add
mov
mov
xor
add
jne
mov
mov
mov
cmp
je
mov
mov
mov
mov
xor
cmp
jne
mov
mov
xor
movsbl
mov
xor
add
cmp
mov
mov
mov
je
xor
add
mov
je
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
add
imul
mov
mov
mov
add
or
mov
mov
mov
add
xor
mov
mov
mov
add
and
mov
mov
mov
lea
mov
mov
mov
sub
add
mov
mov
xor
add
jne
jmp
mov
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
add
imul
mov
mov
mov
add
or
mov
mov
mov
add
xor
mov
mov
mov
add
and
mov
mov
mov
lea
mov
mov
mov
sub
add
mov
mov
xor
add
jne
mov
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
add
imul
mov
mov
mov
add
or
mov
mov
mov
add
xor
mov
mov
mov
add
and
mov
mov
mov
lea
mov
mov
mov
sub
add
mov
mov
xor
add
jne
mov
mov
xor
lea
mov
mov
xor
add
jne
jmp
mov
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
add
imul
mov
mov
mov
add
or
mov
mov
mov
add
xor
mov
mov
mov
add
and
mov
mov
mov
lea
mov
mov
mov
sub
add
mov
mov
xor
add
jne
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
add
imul
mov
mov
mov
add
or
mov
mov
mov
add
xor
mov
mov
mov
add
and
mov
mov
mov
lea
mov
jmp
sub
jg
imul
stc
nop
inc
sub
jecxz
xor
fcomps
jp
dec
adc
adc
push
test
cmp
jecxz
mov
data16
mov
push
test
mov
xor
out
dec
jp
sbb
pop
fnsave
mov
push
push
enter
and
imul
int3
mov
and
push
dec
shl
dec
push
aas
mov
bound
lods
jbe
mov
xchg
cmp
in
add
or
scas
aas
add
xlat
sub
mov
sti
xchg
fwait
lds
fucomip
lea
jb
fs
jl
or
cltd
test
pop
movsl
mov
fsubs
sub
push
pusha
push
dec
test
repnz
xchg
mov
stc
add
fwait
xor
bound
xchg
sbb
aam
int3
inc
dec
ret
add
adc
and
pop
leavew
sti
inc
fcompl
dec
das
jo
aad
shll
insb
aaa
inc
lds
pop
lahf
dec
nop
out
or
push
xor
add
mov
cmp
xchg
jg
mov
dec
xor
call
pushf
sahf
cwtl
lcall
shl
xor
jmp
js
mov
dec
pop
cmp
mull
sarb
cmpsb
pop
push
mov
cmp
adc
push
push
pop
icebp
xchg
sub
pop
cmp
ds
movsb
cwtl
inc
xor
pushf
inc
sbbl
dec
sub
jg
mov
inc
cli
push
add
ss
fcmovnbe
into
sub
iret
push
jl
pop
test
or
mov
jne
and
pop
mov
scas
popa
ss
nop
jg
popf
popf
sub
stc
lahf
notb
mov
std
xor
mov
jg
sub
sbb
fnstenv
jmp
add
fnstcw
pop
out
sar
js
sub
inc
pmaxsw
int
jns
inc
call
lods
mov
lret
fsubrp
loop
cmpsb
pop
xchg
cmp
mov
jno
push
das
pop
mov
frstor
cmp
movsb
jnp
jnp
mov
aam
std
xlat
int
data16
mov
std
fs
loop
clc
lret
outsl
stos
mov
pop
sub
test
pop
inc
dec
adc
push
loopne
icebp
shlb
adc
or
sub
dec
xchg
push
jbe
or
or
adcl
fdivrs
inc
ds
test
cmp
jmp
loop
or
pop
ret
jl
cmpsb
sub
in
cmp
push
test
in
xchg
or
imul
dec
pushf
fstl
jg
dec
adc
jle
dec
xor
cli
sarl
into
xor
mov
in
and
pop
es
cld
sbb
movsb
xor
mov
icebp
popf
cli
test
add
add
in
insl
test
cmpsl
nop
shll
rcll
add
mov
jae
icebp
mov
pop
inc
and
sbb
mov
mov
adc
mov
inc
popa
ja
add
sbb
dec
ds
mov
fmull
mov
sarl
sbb
push
das
cmc
adc
push
or
in
push
dec
dec
xchg
jge
icebp
loopne
ret
sbb
and
pushf
ds
xor
xchg
arpl
jg
adc
fwait
mov
nop
cltd
cwtl
insl
and
lret
or
cwtl
es
setb
ret
fsubrl
je
les
dec
arpl
adc
sbb
mov
push
movsb
bound
jns
insl
sub
cmp
sti
mov
mov
push
lock
dec
push
pop
and
mov
outsb
lods
sub
dec
stc
cli
inc
or
push
and
jbe
testl
sub
sub
loope
xor
fildll
mov
xchg
xchg
int3
fwait
jp
call
pop
rcll
int3
mov
jecxz
fiadds
clc
mov
mov
jl
ljmp
ss
pop
or
mov
and
pop
icebp
mov
jmp
pop
or
scas
js
rorl
popl
dec
icebp
dec
mov
add
faddp
ficomps
cmp
mov
out
ret
stos
inc
test
adc
das
stos
inc
xor
sub
das
xchg
cld
iret
pop
loop
sbb
movsl
popf
call
inc
or
sub
loopne
and
in
dec
imul
xor
ss
add
push
out
enter
ljmp
push
push
hlt
call
loopne
mulb
lods
out
ficomps
sbb
popa
mov
jnp
sub
mov
pop
outsb
fsubl
push
sarl
mov
push
or
paddd
in
push
daa
mov
fwait
pop
jmp
scas
mov
fsts
xchg
test
imul
test
xor
orb
jo
push
jecxz
test
leave
cmp
jl
les
jb
xor
push
cmp
push
or
loope
jb
dec
fistps
lock
pop
add
das
test
cmp
sbb
outsl
xchg
sar
mov
call
and
sbb
pusha
add
or
push
aad
sub
fidivrs
ljmp
adc
test
push
call
or
push
lea
std
flds
inc
cmp
mov
jle
lea
mov
xchg
int3
pushf
jnp
sub
and
dec
loopne
pop
dec
jle
jb
mov
dec
sbb
or
aaa
pop
pop
dec
enter
pop
test
adc
mov
pop
push
push
inc
cmp
adc
fcompl
daa
movsb
push
adc
je
cmp
mov
xor
add
sar
stos
mov
cwtl
jmp
jl
arpl
in
dec
jae
and
nop
repz
loop
outsb
repnz
in
int
cwtl
lret
push
pop
inc
dec
pop
sub
xor
mov
adc
iret
push
into
and
jg
mov
add
xor
fisttpl
pop
dec
push
clc
lods
dec
adc
cmpsl
dec
inc
inc
lcall
ret
sub
js
mov
jp
mov
lods
add
outsl
xchg
adc
xor
popa
pop
add
pop
out
stos
subps
inc
xchg
jne
mov
aas
movsb
ds
rolb
mov
das
roll
data16
mov
notl
push
out
pop
loope
mov
clc
jl
lods
clc
lret
sub
push
or
sbb
mov
mov
out
mov
frstor
add
xchg
adc
mov
aas
pop
xchg
xor
sbb
adc
pop
xchg
sbb
xlat
sbb
xchg
leave
nop
sub
mov
into
inc
test
movl
lcall
daa
cld
in
scas
cmp
mov
sub
sbb
stos
cmp
sbb
mov
xchg
jmp
jle
cld
das
fimull
sarl
sbb
stos
jb
adc
sarb
popa
test
fs
jno
movsl
inc
aaa
mov
pop
clc
outsl
roll
subl
ds
xchg
mov
dec
int
or
xchg
cmc
rcll
repnz
aas
bound
pop
dec
push
daa
or
jle
test
iret
ljmp
add
pusha
insl
repnz
and
orb
fcmovb
pop
insb
cmp
dec
loopne
test
in
mov
fsubrl
inc
dec
xor
in
push
mov
cwtl
jge
test
lock
repnz
xor
sti
mov
fistpll
arpl
nop
das
pop
dec
push
xor
adc
mov
popa
mov
bound
test
sarb
dec
cwtl
popf
cli
adc
sub
or
subl
sub
icebp
xor
mov
stos
jo
mov
icebp
mov
jbe
movsb
or
mov
adc
iret
out
xchg
mov
add
mov
dec
pop
push
xor
movsl
out
dec
data16
mov
and
and
add
out
repz
repz
sub
mov
out
ret
add
or
rcrb
dec
std
pop
cmpsl
jmp
repz
inc
pop
pop
xor
cmp
pop
push
shlb
add
into
scas
xchg
ja
mov
aas
pop
mov
sbb
sahf
sub
fistpl
cmp
inc
fs
mov
outsb
clc
xchg
and
add
xchg
xor
pop
addb
std
mov
mov
cwtl
lret
jne
push
fbstp
dec
ficoms
aad
pop
add
pop
test
inc
loop
lods
les
into
pop
enter
jno
cs
sbb
inc
cmpl
loop
movq
imull
fisubl
and
arpl
pop
xor
push
mov
lds
scas
pop
into
hlt
jns
mov
pop
dec
jno
test
pop
mov
cmp
mov
cmpsl
and
inc
push
push
hlt
cld
les
or
xlat
scas
pop
xor
roll
insl
movsb
cmp
mov
es
dec
enter
idivl
arpl
push
xor
andl
gs
mov
ljmp
push
andl
sbb
sarb
hlt
and
insl
cmpsl
mov
fs
clc
cwtl
cmp
lret
or
add
xchg
or
cli
popf
aad
mov
pop
sbbl
sarb
mov
icebp
in
sahf
mov
arpl
cmp
jo
and
aaa
pushf
test
sub
out
lcall
mov
cmp
mov
push
aam
dec
subl
and
dec
or
sbb
mov
pop
ss
out
xchg
pop
out
xchg
push
je
sub
mov
cmp
outsb
xor
daa
sub
insb
push
jno
stc
clc
xor
rolb
and
add
test
lods
sub
inc
sub
hlt
mov
loop
push
adc
sahf
or
xor
dec
pop
inc
and
push
and
mov
mov
pop
aaa
jmp
add
push
repz
lock
das
push
push
fidivrl
out
dec
and
daa
mov
jle
push
jle
test
shlb
in
int
fcomps
rolb
lds
loopne
mov
fcomi
iret
data16
push
test
sbb
imul
push
push
rcr
mov
std
pop
out
jle
sub
pop
fildl
loop
lds
jae
call
mov
ds
mov
aad
sub
sub
pop
mov
xlat
adc
or
cmpsl
imul
sbb
mov
xor
cwtl
into
out
mov
and
mov
push
jne
bound
clc
or
into
cmpsb
clc
pop
or
pushfw
pop
test
outsl
inc
xchg
ret
psrld
sahf
cltd
lahf
test
sbb
lea
shlb
push
dec
jg
add
lahf
repz
movsl
adc
inc
mov
pop
sbb
push
rcl
sub
mov
xchg
sbb
mov
cmp
pop
insl
ja
jbe
dec
dec
aad
mov
rcr
popf
pop
aad
test
inc
dec
loopne
fcomi
push
push
pop
out
sub
cmp
stos
xchg
sub
inc
xchg
pop
pop
or
mov
adc
nopl
arpl
push
push
sbb
mov
popf
test
jg
testb
xor
add
push
jle
fistpll
fdivrp
mov
clc
sub
jecxz
aas
in
xchg
mov
jle
std
es
xor
sahf
por
adc
out
pop
jae
ficoms
ss
das
mov
pusha
rcrb
sub
and
lahf
outsb
ja
push
push
jne
add
mov
in
ficomps
or
negb
push
mov
pop
test
rorb
inc
or
outsb
shrl
pop
icebp
lcall
out
leave
ja
pusha
jb
mov
stos
ret
sar
xor
sub
into
mov
clc
or
fidivrs
mov
dec
je
push
xor
addl
out
imul
shl
pop
xadd
inc
leave
lret
or
decb
pop
cmp
cli
mov
sub
cmpsb
rcrl
inc
pop
xor
xlat
or
mov
or
mov
mov
insl
clc
pop
lods
inc
xlat
insb
mov
ret
pop
into
add
add
sub
or
sahf
pop
lods
mov
adc
push
mov
jmp
dec
or
imul
jno
aaa
js
fidivs
adcl
sub
push
shll
sbb
mov
mov
push
sbbl
inc
idiv
jb
int
js
arpl
lock
inc
ljmp
push
sbb
addr16
adc
cwtl
pop
outsl
sbb
sbb
int3
test
dec
lds
mov
fcmovnbe
mov
lods
movsb
aaa
cli
push
stc
adc
sub
or
or
mov
and
cmp
mov
push
push
xorl
adc
cmp
outsb
mov
jg
aaa
sti
sub
out
jg
push
leave
push
cmp
in
adc
fcom
inc
ret
cld
and
push
cmp
loope
add
mov
inc
mov
out
aad
inc
jns
sbb
pushf
jns
push
add
loopne
xor
mov
fs
aad
in
out
mov
int3
mov
add
jns
pop
arpl
stos
outsl
lods
xchg
xchg
inc
pop
mov
pop
push
push
cmpsl
ljmp
std
pop
xor
dec
sbb
hlt
add
lret
adc
gs
data16
sahf
daa
fwait
rorb
in
lret
cmpsb
adc
pusha
stos
jp
mov
mov
shrb
fisttpl
fstpl
pop
and
out
cmc
nop
mov
mov
mov
lret
jbe
inc
push
push
mov
dec
jge
mov
mov
push
push
fldl
xor
push
hlt
jne
mov
arpl
incl
test
jb
sub
clc
or
loope
cmpsl
jge
cmp
add
cwtl
dec
sti
or
aas
jmp
loop
sub
push
push
fimull
add
andb
jle
jae
jae
fwait
outsl
jb
fs
add
outsb
iret
pop
inc
aaa
loop
fstpt
nop
push
xor
pop
mov
sub
push
fs
bound
out
aas
and
xchg
gs
outsb
inc
movsb
xor
lea
pop
mov
jmp
adc
popf
ss
test
sbb
dec
or
and
outsl
gs
xchg
adc
mov
scas
jno
test
inc
and
nop
out
leave
dec
adc
sub
mov
dec
pop
imul
fsubs
sahf
in
push
inc
inc
push
pop
js
push
xor
fidivrl
mov
popa
orb
dec
mov
or
or
mov
pop
and
xchg
add
dec
in
push
lock
or
push
cmp
pop
push
xchg
sbb
ja
mov
mov
sbb
leave
ja
inc
pop
addr16
dec
sbb
outsl
or
mov
xchg
xchg
in
mov
pop
sub
gs
jae
lock
dec
mov
push
movb
mov
data16
ja
fisttps
adc
adc
jl
lock
and
and
shll
aam
mov
xor
dec
mov
sahf
pop
sbb
inc
jecxz
ror
aad
enter
pop
testb
jns
inc
dec
mov
lds
daa
xchg
mov
mov
push
xor
lcall
inc
jg
notb
sbb
iret
loope
aam
test
xor
pop
fmull
clc
lret
push
mov
sbb
outsb
push
shrb
pop
sub
push
or
dec
fmuls
inc
sbb
mov
leave
or
insl
push
lahf
jb
xor
and
lahf
cmpsb
lds
icebp
mov
and
sub
movsl
jmp
sbb
leave
movsb
xchg
cmp
mov
or
add
adc
test
es
cmc
cs
das
mov
xchg
sbbl
jmp
lock
aam
adc
es
inc
repnz
fdivs
lret
sahf
into
dec
pop
mov
and
push
sbb
cmp
sub
push
cs
xchg
sbb
cmp
inc
lcall
adc
or
jecxz
jmp
mov
cmpsl
xlat
mov
push
xchg
xor
shlb
mov
sub
or
lods
jo
aaa
inc
sti
cmp
push
sbb
adc
in
out
xchg
dec
mov
mov
fcmovb
aas
repz
mov
repz
out
jnp
ror
cli
xor
push
pusha
rclb
lret
jle
add
push
pop
rorl
test
mov
sbb
fstpt
stos
jp
fsubl
lods
xchg
cmpsb
and
pop
xchg
mov
sub
fimull
xlat
inc
jnp
test
adc
leave
or
dec
inc
xor
mov
ljmp
lea
ljmp
inc
cmp
dec
push
pusha
dec
repz
pushf
mov
xchg
push
addr16
std
push
cmp
rorb
sub
sti
test
loop
inc
in
adc
fcoms
out
mov
jbe
nop
popa
cltd
mov
mov
xchg
adc
sbb
lods
icebp
cmp
add
xor
xchg
jae
jnp
inc
loope
mov
inc
xchg
popf
outsb
subb
mov
jmp
xchg
popf
data16
lcall
sbb
or
mov
add
aam
jbe
add
pusha
popa
leave
fcomps
in
xor
inc
add
repz
push
push
pop
mov
js
fbld
cmp
mov
les
je
or
mov
addr16
cld
fsin
lods
add
adc
mov
fidivs
cli
stos
jecxz
daa
push
out
scas
adc
mov
jno
push
cmp
scas
add
ds
nop
insl
or
sahf
repz
mov
push
sbb
cmpsb
jecxz
orb
pop
push
mov
mov
jp
adc
int
mov
pop
mov
es
scas
sub
stc
rcll
add
pop
or
mov
lods
mov
push
in
nop
pop
pusha
icebp
push
dec
adc
sahf
lahf
cltd
xchg
daa
shl
popa
test
leave
cmp
mov
mov
mov
fcompl
or
lock
aaa
cli
mov
rolb
mov
sahf
scas
inc
and
cli
adc
xor
jg
inc
cwtl
dec
shll
int
dec
shrl
pop
outsb
sbb
sub
ret
push
in
jb
mov
xchg
sub
fisttps
pop
addr16
ss
fcompl
add
xchg
sbb
repnz
jle
adc
inc
push
mov
jecxz
jp
xor
outsl
cmpsb
push
leave
ror
jg
cmp
out
test
mov
lret
dec
lcall
popa
pop
dec
pop
xchg
inc
fs
add
xor
and
inc
or
and
sbb
cmpl
scas
dec
mov
mov
xor
ss
adc
fnsave
xchg
sbb
fsts
iret
push
add
insl
fildl
pop
cmc
leave
jge
test
decb
cmp
inc
nop
lods
fs
ds
iret
shll
dec
pop
pop
clc
cmp
stos
rcl
add
out
push
mov
inc
mov
xchg
lret
lods
jno
repnz
popf
cmp
outsl
sub
mov
cmc
daa
jbe
adc
dec
push
xchg
lea
adc
call
lods
and
int
adc
xchg
stc
mov
mov
adc
adc
pushl
adc
jbe
cltd
iret
mov
popf
pop
jmp
mov
sub
cmp
sti
push
sub
rorb
xchg
mov
pusha
fstpl
ds
arpl
outsl
lods
mov
cmp
push
loopne
and
xchg
das
orb
test
push
jne
jmp
adc
fwait
in
push
inc
shrb
ss
shl
negb
popa
lahf
add
sub
and
cli
xchg
pop
ljmp
adc
pop
cld
cwtl
arpl
mov
stos
int
jge
dec
mov
fisubrl
scas
es
xchg
das
adc
cmc
inc
repz
cmp
pop
push
cmp
ret
lret
outsb
push
jno
xor
shlb
push
in
adc
dec
stos
adc
push
add
mov
mov
es
mov
sub
andl
insb
and
outsb
out
lret
lret
out
mov
stc
inc
push
mov
and
mov
mov
push
or
pop
nop
cwtl
and
lods
or
scas
mov
mov
aaa
nop
dec
cli
push
lods
mov
sti
aaa
adc
sbb
jno
into
mov
pop
or
inc
out
push
das
fs
sbb
mov
mov
pop
or
inc
pop
mov
aad
sub
outsb
jmp
sbb
jmp
adc
xlat
iret
cmc
jg
pushf
xchg
jne
cmp
adc
repnz
bound
xchg
sub
scas
cld
movsb
add
push
test
sub
xchg
cld
push
ds
mov
imul
ds
xor
insb
add
inc
lods
xor
int
fdivrs
push
mov
sub
pop
mov
cltd
push
aaa
mov
jns
add
adc
push
loopne
out
dec
je
push
sub
inc
add
xchg
out
test
stos
inc
mov
mov
dec
shll
call
inc
mov
fldt
out
daa
insl
lea
stos
push
mov
push
and
jns
mov
cmp
cwtl
push
loopne
rep
mov
add
mov
push
adc
int3
xchg
jmp
xchg
cwtl
jno
or
xor
in
cmp
test
cltd
xchg
in
push
pop
push
fldenv
xor
jne
add
jge
aad
cmp
jmp
sbb
dec
jg
out
add
pop
mov
movsb
xor
cmpsl
jle
call
xor
in
adc
enter
fcoms
insl
pop
mov
mov
push
stos
adc
xor
sti
lea
jb
popa
fnstenv
cld
sub
adc
stc
ficompl
lods
es
cli
mov
jp
adc
pop
les
adc
stos
jecxz
orl
xchg
jnp
cmp
add
add
inc
clc
inc
add
test
fisubrl
adc
cwtl
sbb
sbb
mov
or
js
out
sbb
rcll
xchg
and
push
xchg
jno
xchg
pop
adc
inc
push
pop
aas
xor
sub
fcmovne
pop
sbb
mov
mov
add
loope
cmp
sub
shr
and
add
mov
mov
add
mov
jmp
add
add
xchg
inc
mov
sbb
jle
lea
and
mov
mov
lret
or
repz
scas
ss
loope
push
add
inc
stos
jne
loopne
inc
lret
jns
xchg
mov
fsubrp
xchg
ret
icebp
mov
sub
scas
loopne
add
pusha
cltd
insl
cmpsb
mov
sbb
or
test
jp
dec
adc
insl
push
inc
pushf
hlt
pop
inc
jle
jle
fcmovu
xor
insb
cmp
popa
scas
fisttpll
mov
ljmp
jmp
sub
ror
pop
addr16
jl
cmp
dec
dec
dec
imul
pop
cld
popl
jo
jge
punpckhdq
pop
bound
or
jmp
pop
sub
mov
aaa
mov
xchg
xor
pop
mov
xor
cltd
mov
push
ja
pop
mov
or
fdivrs
insb
das
sahf
fs
sahf
sbb
in
jge
psraw
xchg
cld
dec
cli
and
test
test
cmp
jle
loope
xchg
jle
nop
clc
rcrb
mov
jmp
sbb
jb
add
inc
icebp
sub
or
add
hlt
outsb
negb
cwtl
shrl
insl
std
clc
xor
inc
and
cmp
stc
push
sarl
or
es
pop
push
xchg
rcrb
nop
insb
or
sub
push
cmpsl
cli
icebp
jg
pop
nop
adc
inc
ja
pushf
stc
addb
sbb
adc
fsubr
mov
or
lods
cmp
pop
leave
mov
mov
out
test
stos
pop
hlt
sbbl
mov
and
lret
add
movsb
and
pop
lock
ds
jmp
gs
inc
and
mov
jl
sti
daa
dec
cmp
jne
xor
imul
test
jnp
mov
les
mov
mov
fldl
fcoms
adcb
mov
jnp
pop
insl
xchg
arpl
cmc
mov
mov
js
js
jmp
add
adc
popf
or
sub
rcrl
mov
sbb
movsl
ja
cmpsl
fadds
pop
pusha
pop
popa
xchg
pop
sub
xchg
fimuls
in
cli
dec
sbb
and
daa
jle
fistps
int3
hlt
enter
ret
cwtl
cmc
mov
mov
call
sbb
cmp
jae,pn
pop
pop
lcall
ret
decl
push
aad
push
mov
int3
jbe
push
or
pop
xchg
mov
add
ljmp
dec
jecxz
and
nop
push
outsb
ret
mov
je
pop
pavgb
js
lods
fsubrl
into
sahf
dec
outsl
sbb
test
enter
ss
inc
pop
pop
scas
loop
add
in
scas
lret
adc
jnp
std
adc
sbb
leave
and
add
addb
lret
inc
cmp
xchg
rclb
ja
out
insb
push
xchg
aas
in
mov
jnp
mov
sub
cmp
cli
dec
jbe
cmpsl
aad
test
cld
mov
xchg
cmp
fcompl
loop
cmp
dec
rcrl
lret
scas
clc
sub
sub
icebp
mov
cmc
add
jnp
inc
pop
jo
test
in
dec
xchg
loopne
jg
xchg
jecxz
sub
or
arpl
push
aaa
pop
and
mov
cmp
aas
lretw
repnz
xchg
dec
aas
aaa
dec
push
out
xchg
or
jmp
or
inc
add
or
push
fnstsw
sbb
je
xchg
mov
and
xor
xor
inc
xor
mov
aam
les
cmp
or
sbb
pop
lods
adc
pop
sbb
xor
adc
add
test
fbstp
iret
in
push
or
leave
mov
stos
mov
imull
roll
adc
push
idivb
and
les
push
xor
aas
js
inc
inc
cmp
loopne
sti
imul
sbb
imul
adc
push
cmpl
mov
decl
mov
lea
jb
xor
xchg
sbbl
scas
jl
mov
xchg
test
jl
jbe
adc
xor
jae
sub
pop
ljmp
adc
in
test
aam
xor
sbb
xor
mov
mov
push
push
dec
repnz
lretw
test
jl
nop
jle
adc
add
mov
mov
add
push
aam
sbb
aam
and
lods
mov
sub
arpl
lahf
in
sub
xchg
cmp
xor
sbbl
or
push
out
outsl
enter
mov
dec
lret
jmp
push
push
ds
aad
dec
jge
push
xchg
fdivrs
adc
out
std
aam
fsubrs
inc
push
inc
adc
sbb
xchg
mull
add
adc
repnz
or
lods
jns
mov
mov
pop
lcall
in
push
iret
or
pop
cmpsl
call
jne
pop
daa
insl
das
or
ljmp
fs
mov
arpl
mov
adc
ja
jl
aam
mov
scas
aaa
xor
iret
mov
loop
pop
lods
call
jne
push
jnp
inc
mov
insl
cltd
ja
clc
adc
sub
into
imul
das
push
scas
cmc
push
js
cmp
sar
inc
jb
push
xchg
stos
dec
cmpsb
jmp
cmp
popf
xor
in
mov
cmp
shlb
push
std
orb
stc
fadds
dec
lds
mov
sbb
idivb
std
stos
sbb
pop
shrb
icebp
cmpsl
adc
and
xchg
scas
xor
push
pop
movsb
inc
pop
je
push
cmp
jo
or
pop
dec
lret
push
sub
push
ficompl
xor
xor
mov
cmp
std
and
jnp
push
cmp
and
adc
insb
jp
and
out
mov
mov
sbb
adc
and
jo
ljmp
jle
shlb
ss
dec
push
jge
xor
fadd
les
inc
push
sbb
out
cwtl
adc
fisubrl
sub
pop
sahf
mov
mov
jge
cmpsb
xchg
mov
sub
mov
xor
push
les
notl
sub
xor
jno
adc
sahf
pop
dec
dec
pop
imul
clc
cli
and
loope
sub
xlat
lret
out
fcmovu
test
fsubrs
sarl
idivb
idivl
in
cmp
fst
cltd
sbb
inc
enter
mov
popa
fstl
sub
clc
shlb
push
addr16
mov
add
sub
jle
xor
mov
add
addr16
push
aas
gs
es
popa
dec
push
push
dec
xchg
pop
pop
push
loopne
sbb
push
jo
sbb
jle
dec
clc
push
insb
cmp
je,pn
orl
and
or
inc
cmp
pop
add
add
push
sbb
pop
rcl
std
xor
xchg
xchg
pop
test
dec
loop
jo
lret
sbb
sub
in
jne
outsl
mov
push
movl
or
adc
add
pop
mov
inc
repnz
rcrl
cld
lds
mov
out
scas
pop
mov
mov
sarb
sub
dec
sbb
lcall
jnp
lahf
mov
add
es
add
hlt
arpl
or
mov
xchg
mov
adc
sbb
adc
sti
scas
daa
jmp
pop
in
push
lods
pusha
push
dec
lods
imul
add
and
int
repnz
mov
lds
adcb
jns
jb
jmp
inc
sar
dec
mov
and
xor
scas
pop
js,pt
jg
xchg
mov
mov
arpl
xchg
push
adc
jg
xchg
outsb
scas
out
repz
in
or
fwait
enter
jmp
int3
xlat
lods
orl
jmp
addr16
inc
nop
sub
jg
dec
mov
sarb
inc
mov
add
xchg
pop
call
negb
addr16
sbb
pop
fbld
iret
dec
inc
movsl
movsb
imul
fisubs
cmp
dec
clc
std
and
pop
xchg
mov
jno
and
std
ficoml
adc
cwtl
in
sbb
xor
push
mov
xchg
in
push
dec
jae
nop
mov
scas
mov
xor
add
lcall
mov
subl
rolb
xchg
les
leave
pop
xorb
in
sahf
push
pushl
xchg
imul
jnp
in
mov
mov
cmp
push
mov
mov
sub
add
mov
mov
xor
add
jmp
clc
fsub
mov
mov
mov
cmp
push
jns
fcomps
jp
jae
push
fistps
push
push
mov
in
cs
dec
jne
push
aaa
or
pop
xor
ja
in
cs
mov
outsl
cmp
imul
bound
leave
lods
jae
add
inc
sbb
adc
and
cmpsb
je
pop
sbb
cltd
or
into
xchg
enter
scas
mov
add
fcoml
xor
fnstsw
or
sub
out
repnz
iret
mov
lahf
fsubrs
scas
dec
push
sub
xorb
outsl
mov
cs
xor
xchg
iret
sbb
fbstp
enter
aam
cmpsl
push
dec
pushf
loopew
push
jnp
daa
test
outsb
aam
mov
jecxz
test
fnstcw
or
or
lea
pop
jmp
pushf
push
mov
icebp
jae
jns
push
testl
mov
xchg
fs
cltd
and
in
xchg
mov
shll
mov
outsb
imul
ss
jae
push
scas
shll
fdivrl
icebp
mov
arpl
mov
stos
pop
cs
xor
push
inc
mov
pusha
psraw
dec
pop
mov
je
push
test
or
jno
mov
mov
cmpb
popf
leave
dec
mov
shrb
pusha
dec
xor
jmp
out
les
push
repz
je
cmpl
loopne
jg
xchg
xchg
mov
ret
pushf
fcoms
push
sub
inc
arpl
dec
mov
out
xchg
shr
cmp
mov
jb
stos
scas
idiv
add
mov
sub
push
jne
jb
mov
popf
sbb
in
inc
jne
inc
fdivs
xchg
fadd
enter
mov
je
cmp
push
push
loopne
sbb
jp,pn
clc
mov
adc
fidivl
inc
cmp
iret
scas
in
push
xchg
jns
rorb
inc
bound
test
jmp
sub
repnz
fnstcw
ret
lea
cmp
and
imulb
pop
andb
cmc
outsb
js
in
cmp
push
imul
addr16
aam
test
setns
into
xchg
xchg
mov
outsb
xor
cmp
in
dec
pop
mov
popf
jg
fcomip
cmc
cwtl
inc
xor
mov
dec
mov
fstps
into
es
jmp
mov
pusha
call
out
cli
fwait
fwait
inc
sbb
fldcw
les
mov
dec
inc
push
mov
add
movsl
sbb
xchg
popf
push
cmc
ret
jg
xchg
dec
cmp
aad
xchg
xor
pop
jmp
xchg
je
add
cmp
add
push
adc
mov
cmp
lods
xorb
inc
outsb
sbb
or
add
mov
daa
loop
add
mov
ret
leave
push
lods
sub
cld
imul
outsb
sbb
jl
aad
jbe
xor
stos
inc
les
aad
cmpsl
sub
sbbl
ds
lock
ds
or
push
loop
ja
add
dec
xchg
dec
or
rcrb
sbb
sti
mov
lahf
bound
repz
mov
mov
xor
or
jge
cmp
mov
in
aaa
loop
andl
int
test
xor
das
daa
cmp
mov
cmp
aaa
pop
repz
les
pop
jo
imul
mov
fs
inc
mov
adc
arpl
add
in
push
mov
dec
mov
push
loope
xlat
dec
push
jecxz
xorb
test
sti
fbld
xchg
fnstsw
iret
or
add
inc
nop
mov
push
xchg
mov
push
dec
pop
fdivs
mov
cltd
mov
cmp
in
aaa
sbb
repz
shlb
shrl
add
aas
or
dec
lahf
pusha
cmp
cmp
hlt
mov
mov
std
and
sbb
sub
jle
fcmovbe
mov
xchg
mov
lock
pushf
gs
popl
fcoms
jmp
mov
xchg
mov
inc
rorb
inc
in
jg
lods
jmp
add
lods
in
test
or
sbb
and
sti
cwtl
push
sti
data16
jo
add
gs
lods
mov
negl
fdivl
scas
jecxz
sar
and
xchg
test
lea
stos
daa
stos
testl
mov
into
sbb
push
and
mov
das
pmullw
cli
mov
sahf
cmpsl
push
or
xor
and
cltd
and
scas
pop
push
sahf
mov
les
pusha
ja
push
out
dec
cmpl
scas
or
test
push
adc
pop
cmp
sub
xor
jae
lret
jmp
inc
sbb
ds
push
data16
mov
es
stc
shlb
dec
sbb
scas
repz
or
inc
lahf
xor
arpl
pop
cmpb
std
loopne
aas
out
cltd
inc
pusha
push
cmpsb
jmp
pop
test
popa
push
cltd
and
outsb
mov
test
xchg
push
mov
dec
xor
sti
mov
or
je
stc
mov
imul
stos
icebp
rorb
mov
scas
push
leave
cmpb
dec
pop
jl
and
push
and
xor
sub
in
pop
fst
popa
pop
jbe
xchg
pop
ljmp
and
sti
pop
mov
xchg
cmpsb
or
pop
sub
popa
mov
repnz
dec
mov
mov
cmpsl
push
sbb
ljmp
or
mov
or
inc
jno
push
inc
sbb
push
fmuls
cmp
mov
addr16
sti
test
sbb
mov
sbbb
sar
xor
jne
mov
sbb
inc
and
mov
inc
mov
mov
aam
or
pop
or
cld
out
sub
ret
ds
add
xchg
outsl
adc
dec
arpl
and
sbb
sbb
push
repz
sub
pop
adc
and
shll
out
mov
jg
add
dec
pop
icebp
popf
sub
cld
dec
xor
dec
idivl
add
jge
or
imul
aaa
fucomi
rorb
push
xor
addr16
mov
dec
fidivl
dec
out
ret
cmp
jb
mov
cmpsb
call
sbb
mov
sbb
das
jp
iret
ret
std
ljmp
push
movl
inc
jnp
cmp
fs
jg
daa
push
dec
lahf
adc
shlb
enter
nop
inc
or
push
push
inc
insb
pushl
sbb
sbb
jle
jecxz
xor
sub
aaa
pop
push
jno
lds
aam
cmp
stc
out
js
decb
cwtl
mov
lret
in
cmpsb
jno
enter
jb
xchg
mov
push
int
insb
rcrb
inc
xor
xchg
xchg
add
mov
mov
clc
insl
cmpxchg
xor
add
push
dec
mov
ljmp
clc
adc
int
gs
fstpt
xor
sub
inc
test
pushf
inc
xchg
enter
notl
inc
into
sahf
addl
jne
dec
hlt
jbe
inc
popa
aaa
mov
inc
es
shrb
sub
jp
clc
loopne
mov
sbb
pop
dec
shlb
out
dec
in
jno
sub
test
sbb
arpl
js
sahf
jg
shll
and
iret
loop
out
mov
sbb
movsb
jns
cld
sbbl
dec
adc
sbb
clc
jmp
out
lcall
into
sbb
bound
sub
pushf
cmp
fsubrl
cmp
mov
or
daa
pop
or
add
xor
mov
stos
dec
imul
insb
mov
pop
fistpl
adcl
inc
jne
cmpsl
packssdw
adc
in
add
insl
frstor
add
arpl
mov
out
add
pop
rcll
hlt
outsl
mov
mov
popa
and
xor
xchg
jp
mov
jp
add
mov
insl
sbb
cmp
push
sbb
mov
mov
mov
test
and
xor
mov
or
pop
xor
ljmp
negl
scas
imul
fldcw
jg
mov
out
movsl
mov
or
xchg
pop
int3
add
mov
out
mov
pop
sbb
push
adc
or
pop
jb
or
mov
sbb
mov
loopne
mov
outsl
mov
iret
stos
inc
push
mov
into
aaa
and
mov
cmp
xchg
pop
xchg
int
nop
push
mov
cld
lcall
and
test
push
sbb
and
ret
stc
inc
outsb
dec
outsl
push
mov
and
sbb
jmp
pushf
xchg
push
nop
sbb
repz
clc
pop
es
int
pop
jb
mov
sbb
jbe
lcall
fistpll
jecxz
cltd
sub
in
add
fisubrs
dec
repz
fisubrs
inc
mov
leave
adc
add
and
xor
popw
jbe
mov
aam
pusha
rolb
int3
and
aas
les
test
pop
out
pop
ja
mov
sbb
pop
in
loopne
inc
push
inc
stc
fiadds
add
aas
popf
xor
sbb
stc
sbb
std
adc
mov
jp
push
add
ss
ret
rorl
gs
aad
fldcw
faddl
sarb
push
popa
xchg
pop
mov
mov
addl
push
aaa
mov
in
into
cld
xor
xlat
mov
pop
test
xor
int
repnz
adc
arpl
or
push
xor
sti
push
out
mov
add
out
aas
mov
sub
dec
pop
push
inc
add
test
mov
xchg
xchg
sub
push
inc
jp
pop
aam
es
jo
das
xor
push
inc
out
lods
or
push
fs
mov
adcb
inc
cmp
fs
out
lret
data16
xchg
in
xchg
insl
push
push
sub
out
insb
clc
xor
pop
pop
jg
pop
data16
mov
adc
sub
repz
es
and
shl
fnstcw
push
mov
mov
rolb
xor
and
jmp
fisubrl
scas
sub
out
jnp
mov
dec
cmp
cmpsl
mov
popf
mov
mov
cmp
icebp
out
add
cmp
jno
mov
cmp
imul
sbb
cmpsb
pop
push
and
fadds
out
ja
push
sub
push
jb
mov
sbb
movsl
cs
xor
imul
out
lret
insb
adc
scas
jae
or
nop
cwtl
andl
mov
lds
inc
pop
sbb
ljmp
push
arpl
inc
adc
dec
jmp
mov
lock
ficoms
push
ret
add
jmp
nop
pusha
and
ret
clc
ret
je
mov
ret
int
ret
roll
cmp
jno
inc
aad
push
mov
jae
push
cmp
sub
xchg
or
shrb
and
mov
mov
idiv
ss
mov
aaa
jno
xlat
inc
push
jnp
mov
lret
push
lods
and
adc
icebp
int
popa
cmc
std
inc
shlb
nop
ds
push
cmp
xor
jns
pop
int
mov
out
sub
hlt
sbbl
push
pop
lahf
lea
pop
inc
loope
dec
xor
out
sub
mov
jmp
repz
and
adc
dec
js
cltd
jns
ret
shll
or
test
adc
fstpt
mov
repnz
jle
or
or
push
outsl
and
in
ret
loopne
cmp
sbb
lods
xor
mov
add
cld
pop
insb
pop
sbb
jbe
and
sti
jle
push
lret
repnz
imul
aas
leave
das
push
xchg
add
test
and
jle
push
mov
pop
pop
xchg
lods
jnp
jl
scas
adc
pop
push
mov
jg
mov
dec
inc
adc
and
test
test
mov
decl
fcomps
pop
ret
mov
insb
mov
add
or
loope
imul
sub
pop
push
pop
mov
mov
fcoml
nop
jle
xchg
ret
lcall
mov
pop
sbb
shr
ret
es
and
shlb
dec
xor
inc
movsl
shr
out
dec
mov
lock
mov
lods
shrl
xor
popf
xor
add
imul
cmp
mov
rcrl
dec
push
pop
ljmp
mov
or
push
movsb
test
jns
xchg
pop
adc
nop
sbb
pop
mov
or
repz
add
adc
testb
fs
data16
sti
stos
les
mov
iret
adc
out
into
pop
in
cmp
add
lock
inc
in
mov
inc
filds
mov
xor
cmpsb
or
int3
jle
xchg
pushf
fisttpll
ljmp
bound
cmp
repz
negb
mov
dec
mov
mov
into
ret
dec
or
movsb
mov
sub
fwait
imul
pop
push
pushf
shrb
sbb
mov
iret
mov
cmp
sbb
sbb
sub
push
and
jb
add
cmp
xor
add
imul
jbe
call
push
shll
fdivr
ficoml
cmpsb
inc
dec
rcll
int
ficomps
jnp
sahf
xorb
fists
call
lret
loope
in
mov
cmp
mov
mov
scas
mov
popa
aas
cmp
mov
add
sbb
adc
sbb
sub
enter
shlb
add
clc
scas
loop
jmp
fistpl
movsl
pop
sti
adc
cli
mov
mov
mov
inc
dec
pop
pop
addr16
xor
outsl
jnp
incl
push
push
mov
or
xchg
rclb
test
add
sub
mov
or
mov
jp
push
bound
inc
sub
jae
dec
insb
cli
cmp
sbb
pop
xchg
xchg
inc
aaa
pop
imul
cld
fs
pop
pop
mov
stos
out
div
mov
lock
inc
insl
sysret
add
data16
xchg
mov
rorl
es
sti
xor
xor
shll
push
sbb
loop
adc
xchg
cmp
das
sub
mov
cltd
push
mov
xchg
addr16
push
adc
ljmp
out
scas
xor
call
out
xlat
outsl
rcrb
add
add
cmpsb
flds
ret
ds
notl
out
mov
movsb
xchg
cmpb
cmpsl
mov
mov
mov
push
mov
pop
je
jbe
or
cwtl
icebp
cs
push
ror
mov
xchg
sub
movsl
in
je
cltd
in
enter
pop
lcall
popf
sbb
xchg
jg
mov
insb
js
stos
ds
bound
mov
or
push
dec
daa
cmp
lods
std
lds
xchg
stos
mov
imul
out
aaa
inc
bound
aas
nop
xchg
in
pop
dec
rorl
lods
fucomp
cmp
dec
push
out
gs
call
jbe
scas
xchg
dec
pop
cmpsl
cmpsl
sbb
dec
lods
dec
mov
jl
pop
xchg
insb
add
xor
out
xchg
out
mov
loop
lahf
lcall
rorl
aas
jp
addl
add
push
xlat
and
push
xchg
insb
mov
dec
jmp
or
push
pmulhw
mov
fildll
and
mov
shl
lods
aaa
ljmp
pusha
fcmovb
dec
sub
adc
mov
dec
inc
pop
mov
cli
ss
aad
sub
lahf
ds
jb
test
jle
inc
mov
fbld
jne
adc
adc
ret
cmpsl
imul
dec
daa
dec
fs
movsl
shl
call
popa
pop
ds
mov
dec
test
aam
jecxz
and
pop
inc
out
shlb
xchg
jecxz
adc
jge
pop
xchg
frstor
cld
fisttpll
xchg
adc
cltd
dec
push
daa
mov
lret
dec
add
icebp
sub
cli
push
ret
inc
xchg
fwait
das
or
mov
incl
ret
or
pop
jle
mov
add
loope
stc
or
xchg
pop
rep
mov
rclb
jb
fmull
enter
push
aam
sub
sub
sub
xchg
inc
pushf
or
mov
jmp
sbb
dec
inc
inc
lcall
fmuls
test
dec
lret
pushf
mov
sbbb
cmpsl
mov
daa
inc
std
inc
hlt
mov
add
cmpsl
push
sahf
cmpsl
data16
mov
out
icebp
in
rcrb
js
mov
jnp
in
jne
jmp
lret
dec
add
cmp
or
jp
sbb
push
or
jae
push
mov
push
push
xchg
lods
mov
mov
xchg
sub
pop
xor
push
mov
in
jns
push
inc
out
lds
clc
ud0
add
addr16
rcrl
jae
idivl
mov
mov
cwtl
divb
inc
add
pop
orl
pushf
jo
cs
lods
movsb
fadds
cmpsb
xlat
aad
mov
inc
or
movl
jp
push
inc
shrb
pop
mov
lock
push
das
imul
mov
scas
fbstp
jae
popa
loopne
nop
adc
aas
mov
shrb
mov
hlt
adc
sbb
mov
es
xchg
leave
push
imul
jl
pop
into
dec
ret
push
incl
mov
xorb
pop
cmc
mov
cmp
mov
jl
and
cld
inc
in
dec
repz
aam
shlb
bound
scas
jnp
pusha
pop
mov
jbe
xchg
sbb
lahf
sub
xchg
lret
adc
cwtl
dec
popf
mov
pop
and
in
cs
fstps
and
mov
or
pushf
fisttps
stos
dec
pop
test
xchg
aad
inc
jge
and
mov
cmpl
shlb
xchg
imull
sti
jg
mov
fdivrp
into
shrl
inc
xor
mov
scas
das
cli
push
ret
bnd
ficomps
add
pop
push
ljmp
psraw
add
push
jns
scas
push
cmpsl
mov
mov
xchg
std
cmp
adc
xchg
fisubs
push
stc
or
sub
imul
jns
adc
repnz
cmpsl
js
adc
and
out
insl
add
mov
rcr
sahf
subl
mov
push
fsubp
cmpsl
out
addr16
test
add
mov
xchg
xchg
jge
push
std
add
mov
test
out
loopne
sbb
lea
cmp
or
arpl
pop
popf
pop
dec
movsb
stos
push
dec
inc
dec
mov
fiaddl
loop
filds
fidivrs
dec
mov
imul
cmpsb
ljmp
mov
pop
pop
sub
sub
inc
int
les
jns
dec
lret
jmp
xor
in
push
and
mov
imul
adc
inc
jge
outsl
fdivr
adc
mov
mov
sar
stc
in
pop
movsl
and
xchg
sbb
inc
jle
mov
das
dec
or
xor
rol
movsl
test
insb
imul
jne
adc
sbb
js
dec
mov
mov
aaa
jo
in
cltd
dec
cwtl
orl
push
fsub
js
inc
xchg
push
int
push
loope,pt
insl
mov
repz
loop
aaa
sbb
sbb
adc
lret
lret
out
sub
pop
jae
outsl
mov
push
push
les
ss
xor
daa
mov
inc
in
cltd
dec
push
xchg
sub
jmp
inc
sbb
push
mov
jp
lods
int
outsl
mov
cmc
cmp
ret
cmp
pop
adc
cmp
sahf
repz
rcll
inc
mov
mov
mov
mov
xchg
fildl
push
jmp
mov
out
lods
push
pop
mov
push
lock
xchg
inc
fistl
or
insb
push
pop
adc
ficompl
cmp
adcb
cmc
outsl
mov
or
andl
inc
imul
ds
pop
adc
je
cmc
inc
cmp
xchg
scas
enter
movsb
and
fsubrs
inc
cmp
fistl
and
daa
fstps
push
int
icebp
mov
cmp
sbb
int
ret
pop
adc
inc
dec
push
je
int
int
sub
mov
aaa
sbb
cld
pop
movsl
test
mov
jns
sub
push
into
dec
ret
aad
sub
push
scas
dec
sti
inc
mov
repz
sarl
imul
lods
out
inc
lret
popf
out
imul
mov
or
mov
sub
mov
mov
andl
bound
xchg
cs
lahf
sub
xor
and
fildl
xchg
mov
and
or
roll
mov
jle
shrl
fdivr
fwait
xchg
fldenv
inc
jo
movsl
pop
xchg
fs
jmp
repz
std
mov
adcb
push
cmovo
out
test
mov
sub
mov
and
sarb
aas
aaa
in
pop
mov
xlat
lcall
loopne
daa
repnz
test
ljmp
mov
aad
mov
and
push
pop
dec
pop
addb
pusha
inc
cs
pop
ficomps
call
pop
iret
daa
shrl
pushf
iret
cmp
push
push
or
fadd
in
cltd
jns
aaa
leave
aaa
daa
pushf
lahf
into
cmp
mov
sbb
ror
push
mov
lds
cmpsl
mov
lock
adc
loopne
xor
js
jl
loope
xor
cmc
sbb
ret
mov
jecxz
push
loope
xchg
sbb
sbb
push
or
incl
lock
xor
push
xchg
rol
pushf
div
adc
jg
jbe
jns
mov
nop
pop
test
ficoms
cmp
mov
fildl
je
dec
mov
mov
lcall
jge
leave
and
rorb
in
jge
out
sbb
mov
shlb
lods
imul
xchg
das
in
dec
into
imul
pop
out
sub
pop
in
jne
push
sti
mov
mov
jne
incb
and
pushf
lds
cwtl
xor
outsl
push
lock
cmc
ja
popf
or
mov
cmp
out
aaa
xor
mov
add
adc
cs
cmp
out
popaw
pop
mov
push
aas
je
imul
or
xor
sbb
mov
pushf
cmp
outsl
pop
or
mov
aas
pop
pop
mov
jle
nop
jg
insl
fcompl
outsl
rcl
lret
mov
and
subb
lahf
clc
fmuls
aaa
aad
push
daa
mov
push
xchg
iret
mov
arpl
pop
or
popf
cli
mulb
cmp
popa
cltd
ret
mov
jmp
orb
fcmovb
fbstp
mov
shl
inc
adc
add
mov
and
lock
cmp
mov
sbb
mov
es
xor
add
test
inc
test
cld
int3
add
ljmp
bound
cmp
lods
push
push
aad
cmp
and
dec
iret
dec
iret
jnp
mov
xchg
xchg
push
insl
add
pop
in
bound
jl
jmp
inc
fiadds
fstpl
sub
dec
and
dec
aad
ret
cld
inc
sbb
mov
mov
popf
jmp
pop
pop
dec
push
pop
rorl
xor
les
scas
into
imul
lods
imul
and
mov
lock
cmc
das
sarl
dec
stos
push
in
inc
mov
push
xchg
pop
out
pop
add
jecxz
test
dec
outsb
icebp
pop
aas
jns
scas
sti
xchg
js
cmc
test
lret
int
aam
iret
sbb
imul
nop
xor
mov
call
into
rcr
mov
or
cwtl
push
call
or
loopne
cmp
fs
ljmp
mov
sub
mov
adc
fcomp
add
jle
mov
js
cvtps2pd
xchg
inc
dec
lahf
insb
or
add
call
dec
pop
push
sbb
xchg
mov
insl
mov
or
scas
jns
out
sbb
fdivr
cli
mov
cwtl
test
dec
inc
jle
jne
out
xchg
cmp
push
out
pop
mov
cli
or
sbb
fcmovu
in
xchg
in
fs
jae
std
aas
dec
ja
negb
andb
outsl
mov
mov
ljmp
xor
or
fisttpl
lcall
cltd
add
mov
arpl
push
push
fwait
or
dec
pop
xor
outsl
push
aam
pop
shl
push
mov
and
in
mov
inc
cld
mov
stc
insl
xorb
das
cltd
cmpl
sub
ss
subl
lock
mov
in
mov
push
movsl
cmpsl
out
out
xchg
mov
pop
jno
add
jne
fisttpll
out
mov
loope
mov
std
jge
sbb
vmulps
stos
leave
cmp
aam
insl
es
or
jb
cmp
data16
cmp
xlat
out
mov
lret
loopne
mov
sti
and
inc
outsl
jae
inc
andl
dec
outsb
push
pop
lcall
fwait
jg
loop
jo
inc
cmc
lcall
mov
sti
push
push
xlat
adc
ss
scas
jle
jge
shll
pop
push
push
stos
jmp
sub
pop
mov
nop
mov
pop
bound
dec
mov
leave
mov
lret
mov
mov
add
xchg
jnp
mov
xlat
js
aas
repz
sub
repz
push
jo
and
test
cld
xor
push
in
popa
push
idivl
mov
js
dec
js
andl
mov
pop
nop
jg
or
cmp
call
xchg
shrb
dec
push
adc
sub
mov
cmp
pop
je
mov
out
jg
pop
test
mov
pop
and
adc
pushf
and
pushf
nop
xchg
and
and
xor
adcb
into
scas
enter
pop
arpl
pop
jo
or
cmp
loope
into
not
xchg
rcll
jb
sub
push
lods
fistpll
stos
cltd
adc
mov
mov
lahf
or
xchg
cwtl
popa
out
cli
bsf
sub
cmp
xorb
stos
je
pop
xor
cld
pop
leave
xchg
sub
pop
cld
es
dec
dec
cwtl
fsubl
rcll
leave
nop
cmpsb
or
mov
mov
dec
jmp
lods
jp
gs
lods
das
or
xchg
fsubs
adc
cmc
int
jecxz
fwait
movsl
sub
popf
jmp
gs
aas
and
push
mov
out
cmp
jecxz
mov
ret
jp
jmp
fwait
push
cmp
outsl
push
mov
sbb
inc
inc
sbb
movsb
sarb
mov
add
adc
movsb
or
cmc
out
stos
lock
test
lock
jmp
jno
inc
inc
sub
jne
lea
sub
cwtl
icebp
mov
mov
mov
addr16
lcall
inc
jl
mov
push
inc
mov
scas
add
fcmovne
push
mov
sbb
mov
mov
dec
dec
sarb
loope
xor
pop
pop
mov
push
push
pop
loope
pop
es
shlb
cmc
push
lahf
inc
idivb
push
push
test
xchg
or
stc
pop
pop
test
mov
pop
daa
sub
ret
loope
movb
xchg
pop
ret
sbb
push
dec
cmc
stos
fs
pusha
jp
jg
sub
mov
mov
sub
mov
fmuls
add
insb
push
jp,pt
mov
or
and
sbb
mov
cwtl
cs
xchg
inc
add
mov
mov
ret
test
stc
loopne,pt
imul
arpl
push
hlt
and
mov
rcr
cmp
mov
sbb
iret
das
add
and
cmp
xor
mov
sbb
repnz
flds
cmp
inc
cmp
loop
into
mov
scas
pop
pop
xor
xchg
xor
and
fistpll
adc
lea
and
inc
rorl
incb
popf
cbtw
movsl
xchg
inc
mov
idivl
adc
mov
xorl
sbb
inc
add
jbe
push
fidivrl
inc
lcall
pop
push
fbld
pusha
repnz
jmp
data16
xor
add
lcall
out
adc
mov
and
sub
ja
cmp
mov
pop
aaa
lret
push
stos
sbb
das
dec
aad
pop
adc
and
add
stos
pop
cli
test
insl
adc
fs
mov
mov
dec
not
pop
mov
and
pushw
sahf
in
dec
enter
or
and
incb
scas
mov
ret
aam
push
out
incl
ljmp
roll
lahf
lods
ja
rol
mov
int
mov
dec
fs
add
inc
inc
fisttpl
mov
das
push
mov
rcll
or
stos
pop
mov
lods
repnz
inc
push
lret
mov
aam
and
testb
fwait
in
mov
mov
addr16
mov
lods
cmp
dec
cmp
lea
add
insb
or
sbb
pop
add
cmp
push
mov
jge
push
xor
add
adc
pop
and
out
rcll
inc
xchg
push
adc
cmpb
mov
xchg
push
notl
roll
lret
cmpsl
inc
dec
mov
cmc
cltd
dec
mov
pop
xor
stos
jne
sub
jecxz
lret
cmp
dec
cltd
dec
pop
push
adc
inc
outsl
sbb
test
movsl
cwtl
stos
adc
fcmovu
repnz
mov
push
jmp
pop
into
into
ret
inc
cmc
xor
cmp
movb
mov
call
adc
mov
stos
pop
out
cmp
ret
inc
pop
adc
test
inc
mov
lea
push
mov
stc
pushf
add
mov
jne
mov
out
dec
pusha
mov
push
jp
lods
repz
in
sub
mov
sbb
add
clc
xor
mov
add
mov
pop
pop
pop
leave
ret
add
inc
add
mov
inc
add
mov
inc
add
mov
inc
add
rolb
add
inc
add
rolb
or
inc
add
rolb
adc
inc
add
rolb
sbb
inc
add
sub
pop
dec
add
add
add
add
cmp
popl
add
add
add
add
add
pop
dec
add
add
add
add
add
add
add
add
clc
mov
add
mov
add
popl
add
sub
add
popl
add
add
popa
insl
imul
aas
inc
gs
jae
jb
bound
arpl
arpl
imul
gs
bound
arpl
arpl
nop
inc
add
inc
add
nop
inc
add
inc
add
nop
inc
add
inc
add
nop
inc
add
inc
add
nop
inc
add
inc
add
nop
inc
add
mov
add
inc
add
mov
add
inc
add
mov
add
inc
add
mov
add
inc
add
rolb
rolb
rolb
rolb
rolb
rolb
rolb
rolb
add
push
push
inc
push
or
icebp
and
addr16
mov
mov
add
inc
cmp
jb
outsb
je
popa
je
pop
dec
outsl
imul
insb
imul
dec
gs
mov
sub
push
mov
xchg
mov
cmp
jne
mov
cmp
jne
mov
mov
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
push
movb
movb
push
movb
movb
push
movb
xor
movb
xor
pop
mov
lea
movzbl
xor
add
inc
mov
cmp
jb
xor
lea
movzbl
xor
add
inc
mov
cmp
jb
xor
lea
movzbl
xor
add
push
mov
inc
pop
cmp
jb
lea
mov
mov
mov
mov
mov
cmp
jne
movl
movl
mov
mov
cmp
jne
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
lea
mov
mov
mov
lea
mov
add
mov
lea
mov
mov
mov
dec
mov
mov
mov
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
lea
mov
movl
movl
lea
mov
xor
sub
mov
inc
dec
jne
lea
mov
lea
push
mov
mov
xor
mov
add
push
mov
add
push
mov
mov
movl
pushl
mov
call
mov
xor
add
mov
cmp
jne
mov
or
mov
add
mov
mov
mov
mov
mov
mov
mov
lea
mov
add
mov
lea
mov
add
mov
lea
mov
mov
mov
mov
lea
mov
mov
mov
mov
add
mov
mov
add
mov
lea
mov
add
mov
mov
mov
mov
movzwl
xor
add
xor
mov
mov
movzwl
xor
add
xor
mov
xor
mov
mov
mov
lea
lea
movl
mov
call
mov
lea
push
mov
xor
add
push
lea
push
pushl
mov
call
mov
lea
lea
mov
call
mov
lea
push
mov
xor
add
push
lea
push
pushl
mov
call
mov
pushl
pushl
pushl
pushl
pushl
pushl
pushl
call
add
mov
mov
mov
mov
mov
mov
lea
mov
cmp
jb
mov
mov
mov
add
cmp
jae
sub
add
mov
pop
pop
pop
leave
ret
push
push
push
push
mov
mov
add
push
cld
mov
add
push
mov
lods
xchg
push
mov
or
shl
not
push
mov
or
shl
not
push
add
mov
sub
sub
inc
push
push
push
push
push
push
sub
push
or
mov
shl
lea
mov
shr
rep
push
pop
call
loop
lea
lea
mov
mov
sub
and
mov
mov
call
jne
mov
and
shl
sub
neg
shr
pop
add
pop
lea
shl
cmp
pop
lea
push
push
mov
push
mov
jb
mov
sub
movzbl
mov
shl
mov
and
add
lea
call
mov
shr
and
cmp
mov
jne
cmp
jb
jmp
mov
call
inc
inc
sub
sub
cmp
jb
pop
inc
cmp
dec
mov
jb
inc
cmp
dec
mov
dec
jb
mov
dec
sub
push
jmp
mov
dec
call
jne
pop
pop
pop
pop
pop
pop
pushl
push
push
mov
mov
jmp
mov
dec
call
jne
mov
dec
call
jne
pop
cmp
mov
jb
mov
push
mov
sub
cmp
jb
lods
mov
stos
jmp
mov
call
mov
je
mov
call
mov
je
mov
mov
mov
mov
mov
mov
mov
mov
pop
pop
pop
mov
mov
add
push
push
cmp
mov
jb
add
push
mov
call
jne
mov
mov
shl
sub
push
pop
lea
jmp
mov
add
call
jne
mov
mov
shl
push
pop
push
pop
lea
jmp
mov
add
push
pop
mov
mov
sub
inc
mov
call
mov
sub
jb
add
cmpl
jae
addl
mov
cmp
jb
push
pop
mov
shl
sub
inc
push
pop
lea
mov
call
mov
sub
jb
mov
mov
cmp
jb
mov
andl
shr
orl
dec
cmp
jae
mov
sub
mov
shlb
add
shl
add
mov
jmp
sub
call
shr
shll
cmp
jb
incl
sub
dec
jne
mov
add
mov
shll
push
pop
sub
inc
mov
mov
call
test
je
or
shl
dec
jne
jmp
incl
mov
add
mov
mov
sub
cmp
ja
mov
sub
mov
lods
stos
cmp
jae
dec
jne
mov
movzbl
cmp
jb
call
sub
lea
mov
mov
sub
mov
mov
mov
sub
mov
leave
pop
pop
pop
ret
pop
pop
sub
inc
jmp
cmp
jb
ret
shl
push
mov
cmp
jae
mov
shl
lods
mov
mov
pop
ret
mov
movzbl
shl
add
add
jmp
movzbl
add
mov
lea
sub
lea
cmp
jae
mov
shll
cmp
jae
mov
incl
shl
mov
mov
movzwl
shr
imul
cmp
jae
mov
mov
sub
shr
add
add
lea
ret
shr
sub
sub
sub
add
add
lea
ret
push
mov
sub
push
push
push
movl
movl
mov
mov
mov
mov
xor
mov
add
mov
mov
xor
add
mov
mov
xor
add
mov
mov
xor
add
mov
movl
movl
movl
push
pop
mov
mov
push
pop
mov
mov
movl
movl
mov
xor
add
mov
mov
xor
add
mov
movl
movl
movl
lea
lea
call
decl
jne
decl
jne
decl
jne
movl
mov
xor
mov
add
mov
mov
andl
xor
add
mov
mov
mov
mov
mov
mov
mov
mov
lea
mov
mov
lea
mov
mov
pushl
lea
mov
call
mov
xor
add
cmp
je
mov
mov
mov
mov
mov
mov
add
mov
mov
lea
push
mov
mov
mov
add
push
pushl
push
call
pushl
mov
mov
mov
movl
movl
movw
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
call
push
mov
mov
pushl
call
test
jne
mov
mov
mov
add
mov
mov
mov
call
push
mov
call
test
jne
mov
mov
mov
add
mov
mov
mov
call
push
mov
call
mov
mov
xor
add
cmp
je
mov
xor
mov
sub
add
mov
cmp
ja
movl
pushl
mov
mov
mov
call
push
mov
mov
pushl
call
mov
mov
mov
mov
mov
mov
xor
lea
call
push
mov
mov
pushl
call
mov
mov
mov
mov
xor
lea
call
push
mov
mov
pushl
call
andl
mov
and
add
push
call
test
jne
and
jmp
mov
mov
mov
xor
lea
call
push
mov
mov
pushl
call
mov
incl
cmpl
jb
mov
mov
xor
mov
add
lea
call
push
mov
mov
xor
add
lea
call
push
call
mov
xor
add
cmp
jne
movl
mov
mov
xor
lea
mov
mov
test
je
mov
mov
xor
lea
mov
mov
xor
mov
sub
add
mov
cmp
jbe
mov
mov
mov
cmp
jne
pushl
lea
push
call
mov
jmp
mov
mov
xor
add
xor
mov
mov
xor
add
cmp
je
mov
mov
xor
add
cmp
je
mov
xor
add
jmp
mov
mov
and
or
sub
add
mov
xor
lea
mov
cmp
jb
mov
mov
mov
movl
mov
mov
mov
mov
xor
add
mov
mov
xor
add
mov
movl
movl
mov
mov
xor
add
cmp
je
jmp
mov
mov
sub
mov
xor
add
xor
div
mov
mov
mov
xor
add
cmp
jbe
mov
xor
add
mov
mov
mov
xor
add
imul
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
add
movl
mov
movl
mov
movl
mov
mov
xor
add
jmp
movl
movl
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
xor
add
add
imul
add
mov
mov
mov
cmp
jb
mov
mov
xor
add
imul
mov
xor
add
or
mov
xor
add
mov
xor
add
mov
lea
jmp
mov
mov
xor
lea
mov
mov
xor
mov
sub
add
mov
mov
xor
add
imul
cmp
jbe
mov
mov
mov
mov
mov
xor
add
push
mov
xor
add
push
push
mov
mov
xor
add
push
call
mov
mov
xor
add
cmp
je
mov
jmp
mov
xor
mov
mov
mov
xor
lea
xor
mov
sub
xor
cmp
jne
mov
mov
mov
xor
add
push
mov
xor
add
push
pushl
call
mov
mov
mov
mov
mov
mov
xor
mov
add
movl
movl
jmp
xor
mov
xor
sub
mov
movsbl
movzbl
cmp
jne
mov
mov
xor
lea
xor
cmp
jne
jmp
mov
xor
add
mov
xor
add
cmp
je
mov
movl
movl
movl
movl
mov
mov
mov
xor
add
push
mov
mov
xor
add
push
mov
xor
add
push
mov
xor
add
push
call
mov
mov
mov
mov
xor
add
push
mov
xor
add
push
mov
pushl
xor
add
push
call
mov
xor
add
mov
cmp
je
mov
xor
add
cmp
je
movl
movl
mov
xor
sub
mov
mov
xor
sub
mov
mov
xor
sub
mov
andl
andl
lea
push
pushl
push
lea
push
mov
pushl
mov
add
push
push
call
mov
mov
mov
mov
xor
add
push
mov
xor
add
push
push
call
mov
add
xor
cmp
mov
mov
mov
jne
xor
add
push
mov
xor
add
push
pushl
call
mov
mov
mov
mov
jmp
xor
add
push
mov
xor
add
push
pushl
call
mov
mov
mov
movl
mov
mov
mov
mov
xor
add
mov
mov
xor
add
mov
movl
movl
mov
mov
xor
add
cmp
je
jmp
mov
mov
sub
mov
xor
add
xor
div
mov
mov
mov
xor
add
cmp
jbe
mov
xor
add
mov
mov
mov
xor
add
imul
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
add
movl
mov
movl
mov
movl
mov
mov
xor
add
jmp
movl
movl
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
xor
add
add
imul
add
mov
mov
mov
cmp
jb
mov
mov
xor
add
imul
mov
xor
add
or
mov
xor
add
mov
xor
add
mov
lea
jmp
mov
mov
xor
lea
mov
mov
xor
mov
sub
add
mov
mov
xor
add
imul
cmp
jbe
pushl
mov
pushl
lea
push
mov
mov
pushl
mov
mov
pushl
pushl
pushl
call
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
xor
add
push
mov
xor
add
push
pushl
call
pop
pop
pop
leave
ret
push
mov
push
push
lea
mov
push
mov
mov
mov
mov
cmp
pop
jne
movb
movb
movb
movb
leave
ret
push
mov
push
push
lea
mov
mov
mov
mov
mov
cmp
jne
mov
movb
movb
movb
movb
leave
ret
push
mov
push
push
lea
mov
mov
mov
mov
mov
cmp
jne
movb
mov
movb
movb
leave
ret
push
mov
push
push
lea
mov
push
mov
mov
mov
mov
cmp
pop
jne
movb
movw
movb
leave
ret
push
mov
push
push
lea
mov
mov
mov
mov
mov
cmp
jne
mov
movb
movb
movb
leave
ret
push
mov
call
mov
mov
movb
call
push
mov
movb
call
push
movb
call
movb
mov
jmp
push
mov
push
mov
push
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
movl
mov
movzwl
xor
add
pop
test
je
mov
movl
leave
ret
push
mov
sub
andl
movl
movl
movl
movl
movl
mov
mov
mov
mov
push
push
mov
mov
mov
mov
mov
push
mov
test
jne
pushl
mov
call
mov
mov
add
mov
mov
mov
mov
xor
mov
add
cmp
jne
mov
mov
mov
mov
mov
mov
xor
add
mov
mov
andl
xor
add
mov
lea
push
mov
xor
add
push
mov
add
push
mov
mov
movl
pushl
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
mov
lea
mov
lea
push
mov
xor
add
push
mov
add
push
mov
mov
movl
pushl
mov
call
test
je
andl
cmpl
jbe
mov
mov
sub
mov
incl
mov
mov
inc
cmp
jb
mov
mov
add
mov
mov
add
sub
add
mov
mov
mov
movl
jmp
add
shr
mov
je
lea
mov
mov
mov
mov
movzwl
mov
and
mov
mov
shr
add
xor
cmp
jne
mov
add
mov
cmpl
je
mov
add
mov
mov
mov
mov
addl
decl
jne
mov
add
mov
cmp
jae
add
mov
mov
test
jne
mov
mov
movl
mov
mov
mov
xor
add
mov
lea
mov
lea
push
mov
xor
add
push
mov
add
push
mov
mov
pushl
mov
call
mov
mov
add
mov
pushl
mov
pushl
pushl
call
mov
add
lea
mov
mov
mov
mov
mov
mov
mov
cmp
jb
mov
mov
mov
lea
mov
add
cmp
jae
mov
mov
mov
sub
add
mov
mov
jmp
pushl
call
mov
mov
mov
xor
add
mov
jne
mov
mov
pushl
mov
call
jmp
mov
mov
lea
add
xor
pop
pop
pop
leave
ret
push
mov
sub
push
mov
mov
cmpl
je
test
je
test
je
mov
test
je
cmpl
je
cmp
je
mov
andl
mov
sub
add
movzwl
mov
movzwl
add
je
lea
push
mov
mov
push
test
je
mov
andl
and
add
movzwl
movzwl
add
je
lea
mov
test
je
mov
andl
and
add
movzwl
movzwl
add
je
lea
mov
mov
mov
test
je
mov
add
movzwl
movzwl
incl
addl
add
cmp
jb
movzwl
movzwl
mov
incl
add
add
mov
cmp
jb
mov
movzwl
movzwl
incl
add
add
mov
cmp
jb
pop
pop
xor
inc
jmp
xor
pop
leave
ret
push
mov
mov
mov
sub
push
xor
push
push
cmp
je
cmp
je
cmp
jne
xor
inc
jmp
mov
add
mov
mov
mov
mov
add
add
mov
cmp
ja
mov
mov
cmp
jbe
cmp
jae
movzwl
jmp
mov
lea
mov
test
je
add
mov
cmp
jbe
mov
mov
add
cmp
jae
mov
jmp
sub
mov
mov
test
je
mov
inc
mov
cmp
jb
jmp
xor
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
movl
mov
mov
mov
mov
mov
mov
push
mov
push
mov
movl
mov
mov
push
mov
xor
xor
add
add
mov
cmp
je
mov
mov
xor
add
cmp
je
mov
mov
xor
add
cmp
je
add
mov
mov
xor
add
mov
mov
cmp
je
mov
mov
imul
xor
add
cmp
jne
mov
mov
imul
xor
add
cmp
je
mov
mov
mov
imul
add
mov
add
xor
mov
mov
mov
xor
add
xor
mov
mov
add
add
cmp
je
add
mov
mov
xor
add
mov
lea
mov
movl
mov
pushl
mov
call
mov
xor
add
mov
cmp
jne
mov
pushl
mov
call
mov
movl
movl
mov
xor
add
cmp
jne
mov
mov
xor
xor
lea
mov
mov
add
imul
push
call
mov
xor
add
cmp
jne
mov
xor
add
cmp
jbe
mov
xor
add
cmp
jne
mov
mov
xor
lea
mov
jmp
movl
movl
mov
xor
add
jmp
mov
xor
add
mov
mov
xor
add
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
mov
mov
mov
xor
add
cmp
je
mov
mov
xor
add
shr
cmp
je
mov
mov
mov
movzwl
push
pushl
call
jmp
mov
add
mov
mov
add
push
pushl
call
mov
mov
mov
xor
add
cmp
mov
jne
mov
xor
lea
mov
jmp
mov
xor
add
imul
mov
mov
mov
xor
lea
mov
mov
xor
add
cmp
jne
mov
mov
mov
sub
xor
jmp
mov
xor
add
cmp
mov
jne
mov
jmp
mov
xor
add
pop
pop
pop
leave
ret
push
mov
sub
movl
movl
mov
mov
push
mov
mov
mov
mov
xor
mov
add
cmp
je
mov
mov
add
push
mov
movl
mov
mov
mov
xor
xor
add
cmp
je
mov
mov
add
mov
mov
sub
mov
xor
add
mov
cmp
je
mov
xor
add
mov
push
movl
jmp
mov
xor
lea
add
shr
cmp
jae
sub
lea
mov
movzwl
and
mov
mov
mov
sub
add
movzwl
shr
xor
mov
mov
mov
mov
xor
lea
mov
mov
mov
xor
add
cmp
jne
mov
mov
xor
add
cmp
jne
mov
mov
add
add
decl
jne
mov
add
mov
mov
mov
xor
cmp
jae
add
mov
mov
xor
add
mov
cmp
jne
pop
mov
pop
jmp
mov
xor
add
pop
leave
ret
push
mov
sub
movl
movl
mov
push
push
mov
xor
push
mov
add
mov
mov
xor
add
mov
mov
mov
mov
xor
mov
addl
mov
mov
xor
mov
addl
mov
mov
xor
mov
addl
mov
mov
xor
mov
addl
mov
mov
mov
test
je
mov
test
je
mov
test
je
mov
mov
xor
mov
add
mov
cmp
jne
mov
xor
add
mov
mov
mov
mov
add
mov
mov
test
je
movl
mov
xor
add
mov
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
cmp
jne
mov
lea
push
mov
xor
add
push
pushl
pushl
call
mov
mov
mov
sub
add
push
push
call
mov
mov
mov
mov
pushl
pushl
push
call
mov
mov
add
movzwl
lea
mov
mov
movzwl
xor
add
mov
cmp
je
mov
xor
add
mov
mov
movzwl
xor
sub
sub
cmp
ja
mov
add
mov
jmp
mov
mov
lea
mov
mov
test
je
not
and
add
push
mov
add
push
call
mov
mov
mov
xor
add
cmp
je
push
mov
add
mov
add
push
push
call
mov
mov
mov
add
xor
lea
mov
mov
mov
movzwl
xor
sub
mov
sub
mov
cmp
jbe
mov
mov
cmp
jne
mov
lea
push
mov
xor
add
push
mov
pushl
push
call
test
je
mov
mov
mov
xor
add
je
andl
andl
mov
lea
movl
movl
mov
mov
mov
movl
mov
mov
xor
mov
add
mov
incl
cmpl
mov
jb
mov
mov
mov
mov
mov
lea
mov
mov
mov
movl
mov
mov
movl
movl
movl
movl
movl
mov
movl
mov
movl
mov
movl
mov
movl
movl
xor
mov
xor
sub
mov
inc
cmp
jb
mov
lea
push
call
mov
lea
push
push
call
lea
push
mov
pushl
call
mov
test
je
mov
jmp
mov
mov
cmp
je
mov
mov
cmp
jne
mov
mov
cmp
jne
mov
mov
mov
add
mov
mov
push
push
pushl
call
test
je
pushl
mov
pushl
call
test
je
mov
mov
mov
call
test
je
push
pushl
call
test
je
mov
mov
cmp
jne
mov
lea
push
pushl
mov
pushl
push
call
mov
mov
mov
xor
add
je
mov
mov
movl
mov
pushl
xor
pushl
add
or
add
push
call
movl
jmp
mov
mov
add
call
mov
mov
mov
mov
movl
cmpl
jne
andl
mov
jmp
xor
pop
pop
pop
leave
ret
push
mov
movzwl
movzwl
push
push
xor
lea
test
je
mov
lea
cmp
jb
mov
add
add
cmp
jb
add
inc
cmp
jb
xor
pop
pop
pop
ret
push
mov
sub
movl
movl
movl
mov
mov
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
mov
push
mov
xor
push
mov
mov
add
push
cmp
je
mov
mov
xor
add
cmp
je
mov
xor
add
mov
mov
xor
add
mov
movzwl
movzwl
mov
xor
mov
xor
mov
add
add
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
jmp
mov
mov
xor
add
cmp
je
mov
mov
xor
add
cmp
mov
mov
je
cmp
je
mov
mov
xor
mov
add
cmp
jb
mov
mov
xor
mov
add
cmp
ja
movzwl
movzwl
add
mov
mov
mov
xor
mov
add
cmp
jb
mov
mov
xor
mov
add
cmp
ja
movzwl
movzwl
add
mov
mov
mov
cmp
jne
mov
mov
xor
lea
mov
mov
mov
xor
lea
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
cmp
jne
mov
xor
mov
add
imul
mov
jmp
mov
xor
mov
lea
mov
mov
mov
mov
mov
sub
mov
xor
mov
cmp
jne
mov
mov
mov
sub
xor
cmp
jne
xor
jmp
xor
inc
jmp
mov
xor
add
pop
pop
pop
leave
ret
push
mov
push
mov
push
mov
sub
mov
xor
mov
movl
mov
cmp
je
push
push
movzwl
mov
mov
mov
cmp
jne
mov
lea
xor
mov
xor
mov
mov
sub
mov
xor
mov
cmp
jne
mov
pop
pop
cmp
je
xor
lea
pop
leave
ret
push
mov
push
push
push
movl
mov
call
mov
mov
add
xor
cmp
je
mov
mov
mov
push
mov
mov
sub
mov
xor
mov
cmp
jne
mov
lea
xor
mov
xor
lea
mov
add
xor
cmp
jne
mov
pop
cmp
je
xor
xor
mov
mov
pop
pop
leave
ret
push
mov
push
push
movl
mov
call
mov
mov
sub
mov
xor
mov
cmp
je
push
push
movzwl
mov
mov
mov
cmp
jne
mov
lea
xor
mov
xor
mov
mov
sub
mov
xor
mov
cmp
jne
cmpl
pop
pop
je
xor
inc
jmp
xor
pop
leave
ret
push
mov
push
mov
movzwl
push
lea
mov
push
xor
mov
mov
cmp
je
mov
sub
mov
jmp
mov
mov
add
movzwl
mov
add
xor
mov
cmp
jne
xor
pop
mov
mov
pop
leave
ret
push
mov
sub
movl
movl
mov
xor
add
mov
movl
movl
movl
mov
xor
mov
lea
mov
xor
add
mov
imul
cmp
jae
mov
mov
sub
mov
xor
add
cmp
jbe
mov
add
mov
add
mov
mov
mov
mov
mov
xor
mov
lea
mov
jmp
mov
mov
sub
mov
xor
add
cmp
jbe
mov
add
mov
add
mov
mov
mov
xor
mov
lea
mov
jmp
mov
mov
sub
mov
xor
add
cmp
jbe
mov
add
mov
add
mov
mov
mov
xor
mov
lea
mov
jmp
mov
add
mov
add
mov
mov
mov
inc
mov
jmp
leave
ret
push
mov
push
push
movl
movl
xor
inc
je
mov
xor
add
cmp
jne
jmp
mov
xor
add
mov
sub
mov
mov
xor
add
mov
add
mov
jmp
leave
ret
push
mov
sub
movl
movl
mov
mov
mov
push
push
mov
xor
mov
add
cmp
mov
jne
xor
add
jmp
mov
xor
add
cmp
jne
mov
jmp
lea
mov
mov
mov
mov
xor
add
mov
mov
push
call
mov
mov
mov
jmp
mov
sub
mov
mov
mov
call
mov
pushl
mov
call
mov
xor
add
cmp
jne
mov
call
mov
xor
add
push
pushl
pushl
call
mov
xor
add
cmp
je
mov
mov
mov
mov
mov
add
cmp
jne
mov
xor
add
pop
pop
pop
leave
ret
mov
mov
jmp
push
mov
mov
sub
cmpl
push
push
push
je
test
je
movzwl
mov
mov
xor
and
mov
xor
add
mov
andl
xor
push
pop
cmp
jae
lea
xor
movzwl
mov
lea
cmp
jne
movzwl
mov
cmp
jne
mov
movzwl
cmpb
je
mov
movzwl
movsbw
mov
sub
xor
cmp
je
push
pop
incl
mov
cmp
jb
jmp
incl
push
pop
mov
movzwl
cmpb
je
inc
cmp
jne
xor
pop
pop
pop
leave
ret
mov
add
xor
xor
cmp
sete
jmp
push
mov
sub
push
mov
mov
cmpl
jne
xor
jmp
push
pushl
call
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
push
mov
mov
call
push
mov
pushl
call
mov
test
je
mov
push
push
mov
add
mov
mov
mov
mov
add
mov
mov
add
add
mov
mov
mov
cmp
ja
mov
xor
mov
cmp
jbe
jmp
mov
mov
movzwl
cmp
jae
cmp
jae
mov
mov
mov
mov
lea
add
add
sub
movl
mov
mov
cmpl
jne
mov
pushl
push
call
mov
test
je
mov
mov
mov
addl
decl
jne
mov
inc
mov
cmp
jb
pop
pop
pop
leave
ret
push
mov
mov
push
pushl
lea
mov
call
mov
mov
mov
xor
cmp
pop
setne
mov
pop
ret
mov
push
jmp
xor
add
mov
add
add
movzwl
mov
cmp
jne
xor
mov
mov
pop
ret
push
mov
mov
shl
add
jmp
xor
sub
mov
inc
inc
mov
cmp
jne
movb
mov
add
pop
ret
push
mov
sub
push
mov
mov
lea
push
mov
mov
mov
mov
push
xor
mov
add
cmp
je
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
mov
movl
mov
mov
mov
movl
mov
mov
xor
mov
sub
add
mov
movl
jmp
mov
mov
xor
xor
lea
mov
xor
div
mov
mov
xor
xor
sub
cmp
jne
mov
add
mov
mov
mov
xor
xor
add
add
cmp
jae
lea
mov
mov
xor
add
lea
mov
mov
cmp
jbe
addl
jmp
addl
mov
xor
inc
incl
add
cmp
jb
mov
mov
test
jne
xor
sub
jmp
mov
xor
mov
sub
add
mov
xor
sub
ror
xor
mov
add
mov
mov
mov
sub
xor
cmp
jne
mov
mov
xor
xor
sub
sub
xor
mov
mov
xor
mov
sub
add
jmp
mov
xor
mov
sub
add
mov
mov
cmp
jne
mov
jmp
mov
xor
add
pop
pop
pop
leave
ret
push
mov
sub
movl
movl
mov
mov
movl
push
push
movl
mov
mov
mov
xor
mov
xor
add
add
imul
jmp
mov
mov
xor
xor
add
add
test
mov
mov
je
xor
xor
add
add
shr
mov
xor
add
xor
jmp
xor
xor
add
add
shr
mov
mov
xor
lea
mov
mov
xor
xor
sub
cmp
jbe
mov
pop
mov
mov
pop
leave
ret
push
mov
sub
movl
movl
movl
push
movl
mov
push
mov
push
xor
mov
add
mov
movl
movl
movl
mov
mov
mov
xor
xor
add
add
imul
jmp
mov
sub
xor
mov
lea
call
mov
mov
mov
mov
mov
mov
xor
lea
mov
mov
mov
xor
xor
sub
mov
cmp
jbe
mov
xor
add
mov
movl
mov
jmp
mov
mov
xor
add
shr
mov
mov
mov
mov
mov
mov
movzbl
xor
mov
mov
mov
xor
add
and
mov
mov
xor
mov
mov
xor
lea
mov
mov
xor
mov
sub
add
mov
mov
mov
xor
add
cmp
jne
mov
mov
xor
add
pop
pop
xor
pop
leave
ret
push
mov
mov
mov
mov
mov
mov
sub
push
push
push
mov
xor
mov
add
cmp
jne
orl
jmp
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
mov
mov
movl
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
mov
xor
add
mov
mov
xor
add
mov
mov
mov
sub
mov
mov
mov
mov
dec
test
mov
je
mov
mov
mov
dec
not
and
mov
mov
add
jmp
mov
mov
mov
xor
add
mov
mov
xor
add
mov
mov
mov
xor
add
mov
mov
movl
movl
movl
mov
mov
xor
add
imul
mov
mov
xor
lea
cmp
jae
mov
xor
add
mov
mov
add
mov
pushl
mov
mov
call
mov
movl
mov
xor
add
push
lea
push
call
mov
test
je
mov
xor
add
push
pushl
lea
push
call
mov
mov
mov
mov
sub
mov
mov
mov
mov
add
mov
cmp
jb
mov
mov
mov
add
mov
sub
jmp
push
pushl
lea
push
call
mov
mov
movl
movl
movl
lea
mov
lea
mov
lea
mov
lea
mov
mov
xor
add
mov
jmp
cmp
je
mov
xor
mov
add
mov
mov
xor
lea
mov
mov
mov
xor
add
cmp
jne
mov
xor
add
push
push
lea
push
call
mov
mov
xor
mov
mov
xor
movzbl
add
cmp
je
mov
mov
xor
mov
mov
xor
movzbl
add
cmp
je
mov
mov
xor
mov
mov
xor
movzbl
add
cmp
je
mov
mov
xor
mov
mov
xor
movzbl
add
cmp
je
mov
mov
xor
mov
mov
mov
xor
mov
xor
mov
mov
xor
mov
or
mov
mov
xor
mov
cmp
jne
mov
mov
xor
mov
mov
mov
xor
mov
xor
mov
mov
xor
mov
or
mov
mov
xor
mov
cmp
jne
mov
mov
xor
mov
mov
mov
xor
mov
xor
mov
mov
xor
mov
or
mov
mov
xor
mov
cmp
jne
mov
mov
xor
mov
mov
mov
xor
mov
xor
mov
mov
xor
mov
or
mov
mov
xor
mov
cmp
jne
lea
push
call
mov
cmp
je
mov
xor
add
mov
mov
xor
lea
xor
mov
mov
xor
add
cmp
je
mov
mov
xor
add
cmp
jne
mov
mov
xor
lea
jmp
push
pushl
lea
push
call
mov
mov
xor
add
cmp
je
mov
xor
add
push
push
lea
push
call
mov
add
mov
pushl
pushl
mov
add
push
call
mov
mov
xor
add
cmp
je
push
pushl
mov
add
push
call
mov
mov
add
mov
add
mov
mov
mov
xor
add
imul
mov
mov
xor
lea
cmp
jb
mov
mov
mov
jmp
mov
mov
xor
xor
add
add
cmp
jne
mov
imul
mov
jmp
mov
xor
add
cmp
je
subl
jmp
andl
pop
pop
pop
leave
ret
push
mov
and
mov
sub
push
mov
push
push
cmp
jne
push
jmp
mov
cmp
jne
push
jmp
mov
cmp
jne
push
jmp
mov
cmp
jne
push
jmp
mov
mov
cmp
jne
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
mov
add
mov
mov
mov
mov
mov
mov
mov
add
mov
mov
mov
push
push
pushl
push
call
mov
mov
pushl
xor
add
mov
lea
push
push
pushl
pushl
pushl
call
mov
mov
xor
add
cmp
je
mov
mov
xor
add
imul
mov
jmp
mov
cmp
jne
push
jmp
mov
cmp
jne
push
jmp
mov
cmp
jne
push
pushl
pushl
push
pushl
pushl
pushl
call
mov
mov
pop
pop
pop
mov
pop
ret
push
mov
sub
mov
mov
movl
mov
xor
add
mov
mov
push
mov
pushl
lea
pushl
push
pushl
pushl
pushl
call
mov
mov
leave
ret
jg
jge
xorb
lods
ds
add
add
add
fcomip
xorb
and
push
movsl
dec
xor
das
pop
js
adc
adc
not
sub
imul
mov
aam
or
call
and
test
std
pop
test
inc
cmp
icebp
stc
leave
fbld
stos
add
repz
adc
in
xor
xchg
mov
dec
test
xbegin
add
hlt
flds
push
xchg
cwtl
notl
stos
test
nop
sub
and
cmp
in
and
bound
sbb
ret
js
pop
pushf
jmp
clc
xor
sub
push
mov
dec
xchg
mov
or
es
add
lea
or
mov
shlb
out
into
scas
jmp
out
outsb
js
mov
inc
ds
mov
sahf
lret
lods
movsl
push
mov
bound
out
dec
sub
fisttpl
out
fildll
out
pop
into
jmp
jno
lea
jl
inc
iret
xor
popa
xchg
les
mov
loope
ret
mov
popf
popa
outsl
push
aas
push
pusha
repnz
in
jecxz
cmp
lods
insl
imul
jns
dec
imul
daa
cmp
es
aas
cmp
mov
jo
test
cli
mov
aas
mov
jae
jge
out
je
dec
adc
dec
fnstsw
pushf
cld
in
pop
cltd
pop
jnp
add
xchg
inc
xchg
or
cmp
inc
cmp
sub
or
pop
ss
inc
xchg
xchg
xor
xor
xchg
mov
jno
mov
lcall
dec
hlt
cmpsb
scas
mov
out
mov
sbb
imul
movsl
pop
xchg
add
mov
mov
je
xorl
ficomps
mov
dec
mov
adc
xchg
std
push
inc
ret
out
jb
or
pop
jle
adc
mov
or
fnsave
push
rdtsc
int3
hlt
movb
mov
mov
cli
jae
pop
mov
scas
push
jecxz
ficomps
pop
xchg
and
or
push
jns,pt
or
out
mov
add
ret
jl
jo
in
xlat
fdivp
jns
pop
mov
and
ja
dec
jl
mov
xchg
mov
jo
fldcw
xchg
add
mov
sarb
stos
movsl
leave
or
and
xor
xor
adc
data16
mov
push
xlat
mov
ret
mov
incl
cmc
fdivrl
pop
mov
or
mov
sbb
xor
std
inc
or
dec
testl
push
xorb
sub
das
sub
bound
or
rorb
jnp
pop
roll
add
idiv
jg
mov
mov
pop
add
fs
add
add
add
cmc
jle
gs
stos
add
sbb
inc
outsl
ljmp
jbe
cmp
xor
test
sub
jmp
sbb
jg
push
mov
mov
sbb
add
and
dec
lea
mov
imull
mov
sub
nopl
test
adc
out
lock
in
mov
xor
mov
movsb
xor
jne
pop
std
adc
adc
push
or
mov
xor
add
repz
shrl
push
lods
push
nop
xchg
insb
out
mov
insb
fdivrs
sbb
rcr
in
mov
push
and
or
imul
mov
fst
mov
jle,pt
out
ret
xchg
sub
sub
jge
push
pop
bound
aas
imul
and
aaa
imul
push
push
das
insl
push
shll
jb
or
ja
dec
pop
popf
mov
cmp
or
aaa
cmp
xor
cli
fisttpl
stos
lds
test
test
lahf
in
inc
or
jg
xor
lcall
dec
xchg
mov
mov
dec
aaa
adc
cs
insl
inc
leave
pop
cwtl
sti
xchg
dec
cli
cmp
sbb
cmc
lock
and
scas
push
adc
push
jge
dec
scas
cmp
das
aad
jecxz
pop
hlt
xor
loop
fsubrs
inc
adc
add
mov
dec
inc
inc
fildl
push
sub
cmp
mov
mov
loope
cmpsl
pusha
pusha
imul
mov
xor
ret
mov
dec
mov
pop
lods
sub
pop
adc
or
shlb
jg
pop
dec
jne
dec
and
sub
aam
lcall
dec
addr16
lret
notl
mov
xlat
loopne
push
mov
adc
cmc
nop
sbb
iret
jle
dec
sbb
inc
adcb
out
addb
in
jb
or
mov
sbb
jg
pop
insl
pop
ja
nop
dec
das
subl
adc
mov
inc
imul
cmp
movsl
push
cmpsl
push
push
imul
les
pop
movsb
fildll
xor
sub
dec
movb
cmpsl
mov
andl
inc
cltd
in
loopne
out
jp
gs
sbb
test
lds
push
mov
xlat
test
std
mov
addr16
lret
jl
insl
dec
in
and
test
sysenter
dec
push
popf
leave
xchg
loope
sub
outsb
lcall
add
cmc
ret
xor
mov
outsb
dec
adc
fdivs
pop
sub
xchg
jecxz
fsubr
and
inc
or
mov
das
int3
stos
push
jmp
push
push
test
dec
jmp
inc
int3
imul
aas
mov
sahf
pop
add
pop
sbb
pop
xchg
mov
add
add
or
push
add
cli
mov
clc
cmc
clc
fcompl
inc
scas
xor
jecxz
add
inc
add
stc
repnz
js
sbb
jmp
jns
xor
cmpsb
movsl
shll
ljmp
std
mov
jp
mov
loope
clc
int
sahf
jg
lret
repnz
adc
jge
pushf
sub
data16
xchg
add
fdivr
or
mov
cmp
scas
rclb
dec
or
cmp
push
jo
adc
decb
ljmp
jle
hlt
nop
movsl
ljmp
push
push
mov
add
or
je
data16
sbbl
outsl
dec
outsl
data16
cmpsb
movsl
push
lds
inc
aam
xchg
lds
xchg
inc
sbb
push
sahf
cld
jno
mov
add
roll
adcb
jns
cli
push
cmp
pushf
out
adc
add
mov
jecxz
mov
aam
xchg
scas
sub
sbbl
pop
push
pop
gs
mov
sbb
pop
pop
aam
ret
lds
xor
decl
js
cmp
int
lock
or
imul
jno
ret
inc
scas
jns
aad
and
pop
dec
and
js
shll
loopew
lar
loop
sbb
sub
fsubr
push
ljmp
add
pop
pusha
scas
dec
mull
sub
or
pushf
push
adc
adc
cmp
cmpsl
outsb
test
xor
jmp
pop
loop
lret
loope
cli
dec
jle
push
jg
add
scas
or
leave
jl
dec
pop
leave
lcall
and
lcall
bound
mov
mov
fiaddl
adc
inc
stos
into
mov
jge
jmp
push
mov
clc
dec
xchg
or
xchg
mov
sarb
out
loope
pop
imul
mov
mov
jmp
add
xchg
imul
jae
adcl
iret
sbb
mov
test
mov
mov
mov
mov
out
jecxz
pop
arpl
cmpsb
lea
cmpsb
jmp
iret
stc
inc
out
hlt
daa
loopne
adc
pushf
shrb
roll
mov
fistps
push
test
ret
mov
xchg
shrb
sub
or
add
icebp
in
sub
adc
and
out
mov
xchg
iret
fwait
push
sbb
xor
cmpsb
dec
movsb
ret
lret
jne
sbb
fcmove
mov
ret
or
fs
lods
adc
pop
insl
mov
pushf
imul
xorb
push
das
fimull
mov
loopne
dec
aam
not
jecxz
push
rorb
mov
dec
xchg
ss
pop
cmpsl
or
sub
xchg
add
push
add
mov
jp
push
xchg
rcrl
sbb
add
add
aas
and
jbe
push
rolb
addb
mov
mov
push
out
and
movsb
fwait
mov
dec
std
sbb
pop
cmp
mov
cli
lods
xor
mov
out
cmp
push
iret
das
nop
je
lods
add
ljmp
fimuls
sarb
pop
inc
movsb
movsl
negl
push
scas
data16
xor
dec
lret
call
in
inc
cmp
add
sbb
fidivrl
test
mov
pop
fimuls
xor
loope
jmp
or
inc
jl
jle
push
js
mov
sti
lret
fwait
or
push
dec
inc
stc
sbb
pop
imulb
jle
movsl
loope
push
aam
push
dec
ficomps
jmp
and
subl
inc
stc
lahf
xchg
clc
sti
icebp
mov
daa
shlb
sub
in
mov
cmp
gs
add
fimuls
pop
adc
push
mov
cwtl
stc
arpl
and
push
iret
adc
insl
add
insl
ret
pop
add
xorb
outsb
mov
fldcw
sub
and
mov
loopne
adc
sbb
ds
inc
les
inc
js
mov
out
loope
xor
das
lds
test
add
inc
mov
sbb
and
xchg
rolb
fs
mov
hlt
call
aam
mov
push
mov
sti
and
repnz
jns
ja
out
add
cmpl
dec
mov
inc
sahf
popf
adc
aad
mov
xchg
inc
loope
lcall
in
xchg
iret
pop
test
fnstenv
pop
out
pop
pop
pop
pmaxsw
imul
xchg
sub
andl
shr
inc
lret
lods
jns
in
inc
xchg
xchg
xor
dec
sbb
and
lods
jb
sbb
add
push
jle
movsl
mov
jnp
mov
ss
sahf
rcl
shr
call
pusha
adc
mov
pop
xchg
mov
mov
imul
scas
push
sbb
add
xchg
cmp
push
fsubr
sub
adc
gs
sahf
iret
or
fidivrs
or
ret
loope
cmp
out
inc
shr
pop
aas
fcmovnbe
call
jae
int
sti
addr16
incl
fisubl
and
pop
jnp
test
shrb
shlw
and
jle
rcll
addb
jb
inc
imul
and
mov
dec
movsl
popf
sub
dec
test
rcrb
mov
loop
jns
mov
lock
xor
inc
test
add
bound
cmc
out
push
push
inc
mov
mov
inc
fs
push
lret
daa
and
mov
and
lcall
dec
lock
add
js
hlt
mov
std
jl
dec
pop
cmp
or
or
dec
add
add
add
in
mov
les
jmp
into
inc
sarb
pop
popf
dec
mov
gs
sub
or
mov
iret
adc
and
mov
leave
out
pop
pop
mov
mov
mov
mov
xchg
jp
mov
mov
or
mov
xchg
ljmp
fistpl
xor
loop
or
fwait
imul
leave
daa
aad
or
repnz
int3
mov
int
test
adc
mov
xorb
leave
xor
cs
push
decl
push
and
and
push
adc
add
xor
inc
stos
cltd
pop
jp
dec
test
mov
sub
std
push
sub
outsb
push
int
clc
push
das
jmp
mov
pop
stos
out
icebp
add
mov
xchg
hlt
scas
aam
lea
jne
inc
int3
jmp
aas
add
gs
cwtl
test
sbb
cmp
mov
enter
scas
push
xor
pop
or
mov
jnp
adc
sub
movzbl
mov
xor
loop
or
test
lock
outsb
out
lcall
adc
dec
addr16
xchg
dec
jmp
xor
mov
stos
xor
or
aaa
push
lock
sub
push
mov
shr
pop
insb
cmp
push
stos
pop
sbb
cmpsb
mov
pop
movsb
fdivl
sti
jmp
add
flds
std
sub
pop
dec
fistl
ret
out
in
popa
cmp
fsubr
pop
jmp
cmp
dec
arpl
loopne
push
xor
sub
mov
dec
cmp
pop
mov
jo
nop
cmovnp
push
push
fcomp
dec
mov
vpbroadcastd
lds
cmp
cmp
fidivl
add
sub
add
test
aam
pop
idiv
sbb
mov
cmp
mov
popa
dec
inc
adc
dec
pop
pop
adc
scas
test
cmp
mov
inc
pop
addr16
shl
xchg
xor
fs
aam
out
neg
xor
orb
in
cmc
cmp
outsb
or
mov
or
outsl
inc
nop
cltd
inc
stc
leave
arpl
loopne
and
sbb
popa
outsl
jecxz
testl
mov
xchg
add
pop
mov
bound
loope
pop
int3
mov
adc
cmp
addl
inc
jno
adc
out
cmp
testl
test
jle
inc
pminsw
hlt
aad
mov
cwtl
outsl
cmc
cmp
sbb
sub
sub
leave
loope
and
cmp
sbb
adc
int3
outsb
inc
xor
inc
xlat
mov
push
cmp
pop
pop
repz
pop
mov
mov
xchg
ja
aad
dec
add
add
add
enter
pop
fwait
call
mov
lods
in
jl
cmpb
or
aad
mov
dec
pushf
shrb
push
mov
out
pop
cwtl
jbe
pop
adc
in
dec
mov
lds
repz
daa
pop
xchg
mov
xorl
pop
data16
mov
xchg
cmpsb
and
xchg
sbb
roll
add
mov
vunpcklps
imul
inc
push
lahf
mov
out
inc
push
adc
fcmovu
mov
adc
fwait
mov
push
frstor
sahf
out
clc
orl
fcmovnb
xchg
je
lret
xchg
sbb
or
inc
push
mov
fs
mov
mov
repnz
cli
xchg
push
loop
sarl
and
test
xor
lock
mov
dec
mov
add
cmc
mov
cmp
les
sbb
mov
xchg
call
mov
addb
std
add
fists
mov
sbb
iret
xchg
xchg
ss
pop
inc
mov
rcrl
cld
jnp
mov
rcrl
dec
add
mov
cmp
std
jbe
and
lds
mov
popa
mov
add
repz
fcoms
jp
cmp
mov
pop
sbb
xor
fcmovnb
in
sub
iret
icebp
mov
push
movsb
stos
out
outsb
adc
adc
cld
adc
xor
pop
mov
xchg
int3
sub
stc
sbb
data16
out
and
stc
or
dec
rorl
xor
jno
mov
jmp
inc
mov
cmpsl
mov
sbb
pop
adc
adc
fstps
xchg
test
xlat
enter
dec
mov
push
pop
and
push
and
test
add
push
pop
sti
mov
or
loop
push
dec
xlat
push
les
ffreep
movsb
popl
sbb
jne
bound
ret
or
lods
es
jbe
xchg
mov
pop
xor
inc
adc
dec
push
out
dec
imul
pop
aam
inc
xlat
pop
rorb
call
rorb
cltd
sub
add
xchg
add
mov
mov
mov
lea
xchg
jmp
sub
dec
pushf
or
pop
push
dec
repz
and
test
in
test
adc
ds
mov
adc
jge
xor
or
mov
js
mov
loopne
cwtl
and
into
xchg
daa
adc
inc
inc
inc
cmp
push
xchg
cld
mov
std
mov
in
movsl
sub
push
pop
add
dec
mov
clc
and
nop
neg
add
les
jmp
mov
xchg
mov
pop
aad
add
add
add
add
fstps
jmp
fisubrs
outsb
or
push
sarl
leave
pop
push
aaa
aaa
call
aas
pushf
sub
scas
push
mov
inc
xor
insl
nop
xchg
cmp
mov
inc
sarb
nop
lock
sbb
mov
imul
cmp
movsb
and
xlat
mov
sarb
outsl
adc
mov
push
adc
bound
or
cwtl
xor
nop
jno
sub
in
adc
sahf
adc
mov
xchg
inc
mov
gs
aaa
fdivrl
mov
push
ret
dec
pop
and
lods
aam
adc
and
inc
adcb
test
ss
lret
sar
mov
scas
loope
sub
or
outsl
pop
call
mov
repz
int3
add
sub
test
test
add
mov
jae
lods
and
jle
jge
in
stos
fstl
pusha
mov
fldl
xchg
nop
das
lea
pop
loope
push
pop
add
data16
dec
mov
into
pop
pop
xchg
mov
stos
jno
mov
xor
pop
mov
adc
push
mov
outsb
mov
out
popa
pop
mov
cmp
lcall
pop
aam
dec
cwtl
jge
call
gs
outsl
sbb
and
stc
push
lret
pop
xchg
in
adc
mov
in
aam
or
ret
sbb
into
jmp
ds
inc
sbb
loopne
inc
pusha
sub
xchg
xchg
enter
lods
jno
jmp
push
insb
or
pop
sub
push
std
aad
cmp
rolb
lock
cmpsl
inc
ljmp
pop
ljmp
mov
push
lods
sbb
movsb
stos
inc
outsb
xchg
loope
outsb
imul
pushf
sub
std
push
push
push
mov
and
ds
and
xchg
sub
ror
insl
and
scas
dec
je
lods
jmp
loop
mov
pop
jae
nop
pop
iret
pop
pop
mov
pop
inc
outsl
pop
loop
jp
dec
and
inc
inc
mov
xchg
loop
cli
fmul
jno
test
scas
popa
sbb
mov
xlat
and
sbb
fwait
sbb
mov
pushf
lods
xor
mov
icebp
mov
xor
xchg
mov
or
dec
leave
pop
xchg
mov
dec
xchg
pop
aaa
repnz
iret
inc
fisubs
shr
pop
or
mov
test
adc
push
lods
fcomi
inc
ja
das
das
arpl
fisttpll
xor
je
jno
push
jbe
or
dec
arpl
lahf
popl
hlt
dec
aad
add
dec
adc
cmp
and
js
jg
inc
xor
sub
adc
or
dec
sbb
mov
fwait
mov
pop
fsubp
es
popf
loop
xor
add
cmc
fistpll
stc
cmpsl
mov
mov
push
dec
push
add
add
add
lret
cmp
inc
xor
sub
sbb
repnz
push
std
inc
jbe
dec
shll
sub
negb
push
lds
es
into
lret
mov
loopne
sub
daa
das
incb
fstpl
subb
adcl
outsb
adc
xor
out
insl
jmp
cmp
push
ret
hlt
fsubrl
cmp
push
addr16
jo
loopne
mov
lods
dec
std
xor
push
mov
inc
jge
mov
xor
out
or
aad
insb
cmpsb
decl
in
inc
jbe
movsl
sub
pop
push
mov
rcl
fidivl
jno
push
fwait
sbbl
fildl
push
cmp
lds
jnp
fisttps
add
pop
adc
and
xor
cmp
mov
out
test
lods
adc
mov
xchg
mov
cmc
repnz
sub
pop
and
in
add
incl
std
mov
aam
or
inc
negb
mov
mov
outsl
sub
fistpl
dec
push
dec
cmp
icebp
movsb
repnz
jne
daa
push
dec
sbb
fimull
add
repnz
mov
xchg
cli
mov
jns
std
add
add
outsl
ficompl
stos
stos
arpl
into
mov
adc
mov
imul
out
xor
inc
repnz
sub
sub
out
cmpsb
or
mov
adc
aaa
inc
inc
andb
lret
lods
shlb
mov
adcb
push
mov
mov
imulb
mov
sbb
sub
sbb
repnz
lret
xchg
mov
jp
in
inc
sbbb
xchg
pop
add
sbb
ss
cli
into
xor
fmuls
lret
int
mov
sub
push
jmp
inc
sub
fstpl
pop
xchg
pop
mov
or
and
fcmovnbe
or
cwtl
fnstsw
push
or
mov
add
stos
push
addr16
fwait
jle
arpl
icebp
push
insb
mov
cmp
cmpb
shrb
and
std
fcmovnbe
push
bound
xchg
call
and
fstpt
push
fdivl
push
sti
stos
inc
push
cmp
jp
adc
sbb
dec
shrb
mov
push
repnz
sub
ljmp
cmp
aam
ret
jg
mov
jmp
loopne
imul
adc
mov
fisttpl
call
dec
sbb
jecxz
stos
xchg
aaa
xor
mov
sub
frstor
pop
sbb
mov
xor
dec
gs
bound
cmp
add
and
movsb
lea
lods
and
push
pop
add
add
add
out
add
movl
jno
ja
je
push
xchg
bnd
stos
add
fucomi
loopne
rcll
insl
mov
jp
jle
jl
rcll
daa
dec
cltd
pop
shlb
jmp
dec
xchg
jl
lds
push
shll
fldl
dec
cmp
sbb
repz
ja
sbb
sbb
push
dec
dec
cmp
or
out
cs
in
aaa
bnd
fcoml
xor
shlb
pusha
adc
lret
pop
repnz
ret
add
mov
je
sub
fwait
je
shlb
cmp
dec
dec
outsl
xor
fdivl
inc
add
adc
sub
xorb
sbb
dec
rolb
loope
fidivrs
mov
mov
or
xchg
mov
mov
adc
dec
movsb
ds
shl
sub
push
add
cmc
push
cmpsb
and
sub
xor
sahf
shlb
dec
gs
add
pop
sub
das
xlat
xor
decb
leave
sub
sti
jg
or
jp
pushf
outsl
and
mov
dec
scas
in
cmpsb
bound
das
lods
sahf
xor
sti
fildl
les
ror
jmp
cltd
clc
hlt
inc
in
gs
xor
jno
push
js
leave
lods
test
mov
lods
daa
jecxz
and
or
cmp
mov
loopne
or
daa
push
xchg
dec
adc
xchg
inc
daa
mov
jmp
push
mov
iret
pusha
cmp
sbb
or
pop
pop
addb
enter
pusha
or
ja
mov
mov
cltd
out
xchg
dec
sarb
push
cltd
jb
outsb
mov
negl
adc
aaa
bound
shlb
imul
cmc
sahf
or
aas
mov
cmp
pushf
xor
loop
shlb
lahf
pop
xor
pop
rorl
std
push
or
lcall
aad
cmc
pop
add
scas
popf
add
icebp
adc
sub
fldl
icebp
sti
add
inc
test
dec
mov
fimuls
mov
aad
loop
push
and
lcall
lods
setns
imul
push
and
xchg
clc
ljmp
mov
sbb
movsb
jmp
xor
imul
js
ds
jecxz
and
jmp
fnsave
stos
push
fisubs
inc
mov
std
sarl
pop
ret
popf
cmp
test
push
outsl
rolb
and
ret
insb
push
fsubp
sub
lea
mov
ret
sarb
cld
sbb
cmp
scas
jle
insb
pop
pop
pop
mov
pop
inc
lcall
xor
test
test
std
mov
pop
add
add
add
sbb
in
dec
jg
xchg
in
sbbb
push
or
stc
cltd
arpl
or
jl
jb
rol
sbb
mov
mov
inc
in
ja
mov
mov
test
dec
fwait
popl
fdivl
or
in
fimull
xchg
cmpsl
pop
and
push
out
sarl
out
scas
fstps
xchg
mov
ljmp
mov
sahf
pop
test
mov
adc
or
pand
in
icebp
xor
imul
or
add
bound
inc
add
lret
cmpsb
aam
jae
xor
cmpsl
dec
pushf
je
fisubrs
add
sub
inc
adc
dec
fisubs
mov
mov
lahf
pop
sbb
mov
lea
decl
xor
xchg
int3
fwait
push
xchg
int3
jne
nop
or
or
aad
shl
cmp
mov
cltd
push
ss
js
sub
test
mov
arpl
jo
dec
or
add
inc
mov
pop
pop
push
ficoms
pop
fsubs
jno
or
xor
mov
dec
xchg
lock
cmp
xchg
push
inc
push
ljmp
inc
dec
pop
mov
xchg
pop
mov
fsubs
ja
add
mov
cmp
popa
rcr
mov
shl
jg
lahf
repnz
enter
mulb
mov
jmp
dec
sbb
sub
ret
rcll
sub
test
lock
aaa
imulb
pop
and
bound
jmp
pop
add
and
in
test
jne
mov
lret
cs
test
inc
push
jne
add
jbe
mov
push
adc
std
mov
and
fwait
ss
mov
or
push
cmp
movsl
out
xor
xor
jecxz
rcr
jle
pushf
jnp
jmp
ret
push
outsb
jno
fwait
icebp
inc
mov
jle
lods
xor
push
orb
fcmovnu
out
ds
adc
ja
fwait
push
into
std
mov
movsl
pop
fidivl
les
rclb
jbe
in
ds
rclb
subb
mov
jbe
enter
sbb
bound
std
test
daa
inc
xchg
lea
fdivp
mov
mov
inc
adc
movsl
mov
inc
inc
cmpb
rclb
out
aam
sti
push
and
in
fcompl
sbb
mov
jns
dec
add
mov
les
mov
mov
xchg
mov
pusha
mov
xor
mov
and
fbld
sahf
test
imul
dec
mov
sub
aaa
cwtl
pop
inc
xor
inc
pop
mov
pop
mov
insl
call
xchg
push
clc
jmp
pop
leave
xchg
call
cltd
pop
jp
jae
mov
add
add
ret
sbb
jo
inc
in
aas
dec
cmpsl
or
lcall
cmovno
cli
arpl
sbb
testl
push
mov
mov
out
xchg
mov
test
loopne
lock
les
fwait
xchg
movsl
dec
repz
cmpsl
push
sbbl
nop
push
inc
xchg
bound
mov
dec
shll
mov
movzwl
imul
xchg
and
push
xchg
insl
xabort
mov
out
movsl
inc
xlat
mov
xor
insl
aaa
pop
lret
stc
gs
int3
pop
sub
xlat
or
jno
add
sbb
ss
inc
adc
in
movsl
lret
cli
loopne
outsl
insb
loopne
cmp
add
cmp
sbb
js
loop
pop
pop
in
jmp
icebp
mov
xor
pop
stos
push
loopne
or
or
sbb
xchg
lahf
mov
je
pop
fwait
imul
sub
or
or
sar
add
dec
cmc
xchg
cmp
clc
or
mov
lret
outsb
stos
cmpsl
lods
lea
imul
inc
jo
out
adc
loopne
pop
fsubr
sbb
repz
inc
xor
pop
or
out
gs
jo
xor
loope
fwait
mov
lcall
movsl
inc
jno
movsl
sbb
mov
inc
xchg
inc
fxch
mov
insb
test
or
mov
in
insb
lret
pop
popa
dec
mov
adc
dec
out
push
mov
xlat
xchg
out
sbb
push
push
push
mov
jns
bound
lahf
pushf
lock
dec
sbb
js
mov
push
add
out
mov
add
sahf
xchg
cli
pusha
cs
imul
pop
out
aam
mov
mov
cltd
xor
aam
push
loopne
lahf
mov
leave
push
pop
aaa
stos
test
movups
jle
imulb
stos
lret
aam
push
cmc
imul
sub
inc
dec
pop
in
cmp
add
cmp
pop
sbb
sub
inc
jmp
imul
push
arpl
test
cmp
push
inc
sub
sub
lcall
cmp
add
leave
pop
mov
xor
adc
push
xchg
sbb
push
incb
cwtl
dec
leave
push
jo
and
cmp
jmp
jmp
imul
enter
roll
and
pop
negb
cmpsl
icebp
mov
imul
sub
shrl
sarb
add
repnz
out
pop
mov
dec
pop
push
jecxz
shll
sub
mov
repz
scas
adc
push
loopne
jecxz,pt
xchg
fwait
clc
push
xchg
fs
cmp
test
push
pop
add
mov
idiv
iret
std
mov
in
loopne
add
add
add
xorb
and
mov
mov
lret
ret
js
pop
lock
push
pop
pop
nop
inc
inc
push
inc
in
les
scas
mov
jnp
sbb
inc
sbb
icebp
fdivs
pop
fstl
test
aaa
pop
sbb
inc
in
jmp
jg
pushl
sub
and
cmp
mov
xchg
pop
fmuls
dec
mov
stc
lret
inc
dec
test
nop
pop
xor
cs
cli
stos
in
push
std
movsb
or
ret
loop
pop
out
mov
mov
bound
add
push
insl
movl
ja
xchg
xor
mov
mov
es
pop
adc
adc
iret
pop
ss
xor
pop
cli
aam
mov
xchg
sbb
pusha
sbb
and
mov
stc
shl
lods
mov
enter
imul
sbb
ljmp
mov
dec
sti
pop
cwtl
sbb
sbb
pushf
lret
outsl
push
and
sbb
clc
mov
jmp
jl
stos
dec
push
daa
mov
pop
cltd
adcl
in
popa
lcall
cmpsl
dec
add
xchg
or
inc
lds
rorl
outsl
out
push
inc
jg
loope
out
scas
sti
std
cld
mov
sbb
lret
js
jmp
je
ljmp
push
inc
cmp
or
add
inc
ja
xchg
out
lds
insl
fdivr
lret
call
shr
addr16
cmpsl
or
cs
sbb
data16
xchg
lea
loope
sbb
ja
loope
xchg
repz
mov
fwait
jnp
fnstsw
cld
pusha
jl
inc
add
fadd
inc
dec
pusha
or
adc
lret
sub
out
sbb
push
divl
imul
cmp
sub
inc
dec
xchg
fdivs
sahf
or
test
dec
cmp
popf
ja
sub
pop
aas
loope
pop
jl
cli
mov
insl
inc
sub
or
mov
ffree
pop
push
cmp
outsb
push
addr16
mov
orb
fnstsw
or
cmpsb
mov
jno
fldenv
sub
adcb
jne
add
test
jno
add
jmp
mov
xchg
sahf
cmp
stc
lahf
mov
or
lahf
inc
xchg
call
icebp
jmp
push
mov
in
xchg
adc
std
mov
mov
xor
incl
and
shr
lahf
or
add
add
fwait
push
or
int3
data16
stos
mov
pusha
dec
adc
mov
mov
pop
adc
aam
xor
jle
jp
add
jle
sub
ss
je
stos
push
es
stos
pushl
and
mov
add
ret
add
imul
mov
popf
sub
aas
out
mov
outsb
push
add
add
add
repnz
fmuls
sub
out
xor
cwtl
dec
repnz
mov
lcall
mov
add
rcl
lods
ss
push
addb
and
aam
push
push
dec
jg
xchg
push
rorb
mov
cmp
aad
fmuls
mov
cs
mov
icebp
daa
jmp
add
aas
das
push
rcrl
mov
mov
enter
orb
gs
mov
add
shrb
into
lock
xchg
pop
jle
push
icebp
inc
dec
cmp
loope
push
je
loop
stc
dec
xor
arpl
pop
mov
dec
push
aaa
pop
addr16
cmp
dec
cmpsl
jbe
ds
and
xorb
lcall
jns
push
or
push
mov
push
push
loope
arpl
mov
cmp
pusha
les
jbe
incl
cli
sbb
push
pushf
push
xor
cmp
mov
push
pop
je
jl
icebp
outsl
mov
das
outsl
cld
fsubrs
xchg
in
notl
loopne
outsl
cld
and
aam
test
sbb
mov
xor
sub
jmp
cmp
cmc
in
dec
aam
mov
cld
push
in
push
fwait
push
stos
mov
mov
scas
mov
add
loope
les
popf
or
popf
inc
mov
adc
ret
pushl
xor
arpl
mov
cld
pop
add
inc
ds
dec
mov
ret
add
push
popa
out
inc
push
jmp
pop
jl,pn
push
or
sub
addr16
mov
ret
and
push
mov
add
sub
inc
sarl
sbb
inc
gs
cmp
leave
nop
adc
xorl
stos
divb
xor
push
in
jge
cmp
aas
pop
cmp
mov
stos
mov
sbb
mov
test
lret
xchg
sub
outsb
in
jg
pop
mov
repz
jge
sar
mov
outsl
jg
xchg
scas
aad
loope
add
aas
xchg
push
cmp
jge
test
test
lods
xor
and
or
into
or
jb
roll
or
outsb
sti
fwait
adc
sbb
sub
jnp
xor
jbe
xchg
outsl
scas
hlt
inc
adc
cs
mov
xchg
lret
mov
adc
bound
jns
lahf
iret
mov
addl
cmp
data16
aaa
aad
push
jmp
jnp
iret
call
add
mov
jnp
jecxz
pop
shl
jne
daa
shl
nop
je
ss
and
mov
push
cmpsl
pushf
cmp
and
mov
cmc
xchg
add
push
push
jle
xlat
outsl
mov
lcall
add
add
add
sub
sahf
pushf
mov
jge
dec
adc
lods
out
and
lret
jo
mov
mov
addr16
jp
or
add
cmp
ret
fcoml
cmp
test
in
push
leave
inc
cmp
jle
popf
jmp
mov
lret
sub
inc
test
xor
das
dec
xlat
adc
out
xor
sti
shrb
inc
sub
and
pop
idivb
pop
xchg
dec
and
fs
test
jp
add
ljmp
mov
ret
push
scas
shrb
push
push
sub
xor
sub
shlb
xor
push
inc
out
sub
lea
fwait
jecxz
shl
inc
push
dec
dec
outsl
loopne
aam
orb
add
stos
addr16
jo
jmp
push
incl
dec
int
fincstp
sbb
inc
mov
cmc
xlat
fcompl
cmpb
pop
dec
xchg
add
sbb
jge
inc
pop
fisttpll
jge
fcmovne
loop
lds
cmp
insl
or
daa
inc
mov
xchg
testb
shlb
xor
cltd
xor
mov
mov
xor
xchg
in
mov
dec
and
aam
call
xchg
cmp
or
mov
mov
into
pop
hlt
xchg
mov
xor
js
gs
jbe
xor
lcall
adc
insl
sbb
bound
out
aas
rcrl
rol
or
iret
stos
or
leave
ja
cmp
or
xchg
push
popf
cmc
out
js
mov
pusha
repz
hlt
xchg
mov
cmpsl
mov
mov
lods
or
and
imulb
fld
push
addr16
and
and
mov
mov
jns
dec
xchg
push
adc
fcmovbe
mov
je
push
pop
dec
call
xor
or
inc
addr16
mov
in
repnz
movsb
mov
les
icebp
nop
sbb
xchg
mov
icebp
sahf
js
in
or
xchg
outsl
xor
jmp
sbb
xlat
pop
sub
cmp
sub
or
add
xor
sbb
push
je
popf
sti
jge
adc
sub
aam
popf
ja
js,pt
dec
jl
mov
jge
inc
push
mov
mov
adc
lcall
mov
add
loopne
mov
ret
enter
mov
cmc
pusha
cmpb
dec
sub
sub
jae
aam
ljmp
arpl
mov
cli
test
sbb
arpl
cs
push
cmc
lcall
and
movsb
fldl
std
or
mul
xchg
in
xchg
in
stos
les
adcl
cmc
cmp
cmc
hlt
push
scas
fnstcw
jno
adc
cli
aas
or
mov
jle
xlat
gs
mov
lds
push
or
pop
out
repz
sub
sbb
imul
add
add
lds
repz
pushf
pushf
or
mov
cmc
mov
cmpb
pop
leave
sub
xor
add
fsubrs
mov
and
xchg
pusha
mov
sub
add
adc
mov
sbb
arpl
js
lahf
mov
negl
fsubl
xchg
imul
mov
mov
lds
pushf
cmpsl
or
jno
loopne
insl
lods
out
fcoml
inc
jecxz
cmpsl
pop
sub
xor
lods
jecxz
into
mov
jge
inc
xor
jmp
mov
outsb
mov
xor
scas
test
add
or
xor
sti
push
mov
and
aam
mov
rorb
xor
jp
test
das
and
cmp
pop
test
add
xor
roll
jne
sahf
sarl
cmpsb
ret
dec
shlb
jb
jb
xor
push
and
jmp
loopne
loop
sbb
and
xor
aaa
stos
loopne
dec
xor
test
jbe
push
jge
push
je
fmuls
pop
fiaddl
sub
xchg
dec
mov
adc
jns
fsubrl
dec
aaa
and
mov
xor
cmc
pop
cmpsb
dec
icebp
jmp
dec
and
test
pushw
jb
insb
or
push
xor
fsubrp
push
fsub
mov
pop
jnp
iret
mov
xor
jg
and
rcrl
ret
and
and
lret
jp
jg
add
push
imul
lret
lods
fdivrs
outsl
jp
xchg
xchg
outsl
test
dec
in
add
test
shl
mov
pop
lahf
leave
outsl
xchg
adc
inc
pop
xchg
data16
ret
scas
fstps
lods
inc
jno
dec
in
sbb
push
fisttpl
jnp
xor
cmp
or
incl
test
xor
xchg
popa
sub
int3
and
negb
cmp
cmpl
insb
lret
int
ja
and
cmc
mov
in
xor
pushf
rcll
pop
shll
mov
dec
add
mov
push
cmpsb
cli
cmpb
insl
jg
inc
sbb
fisttps
add
mov
imul
lahf
and
pushf
mov
subl
les
imul
mov
pusha
inc
xchg
shrb
out
mov
rclb
xor
push
iret
cmpsl
xor
mov
xor
cs
mov
enter
sbb
pop
sub
pop
pusha
or
movsb
gs
out
and
sbb
xchg
pop
xchg
fnstenv
imul
push
mov
aaa
cli
add
js
in
add
xchg
insl
mov
aam
inc
fadds
outsb
add
add
add
nop
in
js
cmpsl
lahf
xlat
push
push
les
enter
sbb
ret
call
out
stos
xor
sub
pop
mov
aad
popf
pop
pop
push
add
cmpb
pop
std
jb
sbb
cmovo
scas
pop
fisubl
inc
test
pushf
fidivl
mov
in
mov
sbb
mov
mov
mov
mov
cmp
xchg
cmp
js
mov
sbb
cmovp
jecxz
icebp
xor
sbb
mov
test
sub
sti
or
dec
adc
push
lds
call
ret
inc
lea
into
jmp
or
dec
rcr
lea
xor
adc
stos
mov
rorb
push
inc
mov
jp
and
lods
pop
xor
loopne
sti
pop
int
xor
xchg
dec
jo
jg
je
cmp
loop
mov
mov
mov
mov
xor
push
movsb
cmc
push
int3
pop
sub
out
stc
add
test
or
repnz
cmp
mov
enter
std
addr16
dec
push
mov
gs
cmp
push
insl
push
std
sub
cli
std
repnz
nop
cs
aas
push
pop
mov
fstpt
xchg
out
push
loope
cmp
jmp
sub
push
ret
or
out
fimuls
aas
clc
mov
imul
xor
enter
fldl
movsb
aas
jnp
inc
in
push
in
push
mov
inc
mov
test
popf
sub
mov
dec
pop
jo
mov
xchg
xlat
pop
lcall
jle
lods
pushf
mov
dec
mov
in
shll
je
xor
arpl
imul
cltd
fstl
insl
adc
inc
pop
mov
push
jle
push
scas
mov
xor
aas
pop
pusha
pop
push
xor
and
jne
es
adc
das
outsb
addr16
xchg
and
lds
rclb
dec
out
jg
pop
je
jbe,pt
in
lock
in
rcrl
in
stc
repz
mov
inc
dec
pusha
inc
lahf
jecxz
popf
int3
lods
pop
xchg
subb
dec
or
pop
addr16
stos
in
out
xchg
outsl
mov
aaa
mov
fs
mov
pop
dec
pop
or
jne
sub
outsb
jno
idivb
and
lods
stos
mov
pusha
sbb
or
jo
add
in
mov
scas
cld
nop
rclb
pop
mov
sub
jae
add
aam
into
mov
daa
int
xor
pop
jbe
jecxz
sub
push
stc
roll
inc
mov
repz
sbb
xor
and
and
cmp
or
push
jge
inc
outsl
std
push
push
push
cli
mov
movsl
inc
ss
imul
pop
out
dec
mulb
jae
cld
stc
sahf
jno
add
add
add
jmp
int3
cmp
shll
pop
fisttpl
lahf
lea
add
ja
and
and
cli
in
cmp
out
or
add
xor
jle
inc
dec
and
enter
std
dec
mov
or
rolb
lock
fisttpll
push
out
add
fwait
xchg
sub
dec
and
leave
mov
lahf
fldl
xchg
add
mov
outsl
js
adc
movsl
adc
pop
cs
push
xor
jb
inc
test
test
idivl
pop
mov
pop
or
cmp
cmp
stc
jne
sarl
aam
aas
add
pop
sbb
shl
xlat
mov
daa
inc
sub
lock
and
sbb
repz
cltd
inc
out
push
jns
fwait
push
add
push
adc
jnp
jp
dec
cmp
pop
leave
sub
daa
gs
outsb
je
push
dec
cmp
sbb
inc
jp
sub
pop
ret
push
and
fdivs
pusha
and
loope
push
pop
pusha
movsb
cli
inc
mov
out
icebp
cwtl
dec
push
popf
or
sbb
dec
cmp
iret
add
inc
arpl
ret
movsl
add
rcl
mov
xchg
pop
lcall
dec
not
push
sbbb
pop
rsm
xchg
test
cmp
testb
outsb
xor
fldt
movsb
daa
insb
mov
lret
push
add
stc
iret
or
add
jb
in
cmp
mov
shr
pop
jo
and
fstp
cli
bound
xor
ret
fst
aaa
das
jle
cmpsb
test
push
fsubs
mov
mov
pop
mov
xlat
test
jbe
pop
out
and
psraw
imul
mov
insl
pop
aas
lods
iret
mov
arpl
lds
pxor
lods
shll
hlt
push
cltd
fcmovbe
out
mov
lret
xor
out
in
out
das
lock
imul
scas
ss
stos
int
add
jbe
adc
popa
cwtl
imul
ljmp
jle
lret
data16
pop
scas
dec
bound
xchg
push
dec
andb
mov
std
loope
sbb
add
sbb
jge
xchg
add
lods
in
sub
add
fs
dec
stos
adc
ret
inc
test
shlb
mov
mov
or
sti
repz
in
xchg
lock
addr16
repnz
enter
and
push
sub
sub
cmp
and
xor
push
mov
xor
out
sub
dec
cmp
adc
aas
xchg
js
cmc
fwait
insb
sub
and
jbe
jge
pop
dec
sarb
mov
jb
ja
jnp
shrl
push
xor
adc
mov
xchg
cmp
adc
pop
jecxz
sti
mov
test
ret
les
add
add
mov
cmp
xor
add
iret
mov
in
cmp
mov
out
cmp
insl
jae
sub
fwait
iret
leave
cmp
pop
and
lret
das
mov
mov
cmp
out
cmp
ss
push
cli
pusha
cs
jl
pop
sti
push
pop
or
insl
mov
inc
sbb
pop
mov
insb
lods
aaa
test
gs
cmp
ds
fisttpll
sub
push
pop
scas
pop
stc
loopne
aaa
sub
dec
cmpb
sub
or
add
es
fcmovb
jle
adc
int
jl
addr16
and
push
cld
xchg
outsb
dec
das
testb
aaa
lods
aas
imul
add
loope
fldt
inc
push
jge
jno
dec
inc
pop
or
mov
xor
mov
lret
mov
mov
mov
inc
push
enter
dec
js
enter
dec
sub
je
and
fsubl
and
call
xorl
add
inc
fnstsw
mov
sbb
gs
adc
iret
mov
push
push
adc
pop
lahf
xchg
cmp
gs
inc
sub
popa
in
adc
mov
jo
sub
cs
jl
xchg
add
mov
push
jmp
cltd
dec
pop
das
sti
jo
sbb
jge
fdivrl
stos
sahf
loope
inc
inc
or
cld
lds
mov
mov
pop
pop
sub
pop
and
xchg
loope
lods
or
xchg
xchg
fwait
loop
pop
cmp
loope
add
mov
mov
mov
daa
imul
mov
jmp
jg
xchg
pop
lods
push
add
mov
jg
jnp
cmp
les
sbb
jg
and
lea
mov
int
sub
icebp
dec
lea
test
jb
adc
sbb
sub
jbe
mov
ret
std
int3
jnp
in
sub
lea
xchg
sub
jno
sti
cmc
ds
icebp
add
and
xchg
imul
ds
adc
nop
jbe
out
les
sbb
push
pop
cmpsb
inc
sarb
cwtl
xchg
test
pusha
out
push
push
adc
test
mov
test
fnstsw
push
pop
or
lret
aad
jb
movsb
adc
xchg
cmp
dec
daa
dec
out
jno
xchg
adc
add
inc
cmpl
mov
jmp
stos
rolb
mov
cld
out
fcomps
fnstsw
xchg
mov
pop
mov
inc
into
aam
loop
in
imul
add
mov
cmpsb
es
std
lret
add
in
imul
add
stos
sub
imul
stc
lret
dec
xchg
jg
push
fstl
mov
push
push
mov
call
inc
push
ljmp
add
mov
test
into
jnp
inc
mov
push
in
or
test
pusha
enter
fildll
daa
shll
into
jg
dec
out
mov
inc
seta
push
cltd
jmp
in
int3
in
mov
mov
cmp
scas
mov
inc
out
jb
mov
push
mov
xor
mov
mov
fs
push
sub
ja
xchg
fdivs
cmp
dec
jmp
sbb
lret
pushf
movb
dec
and
mov
mov
mov
in
xchg
inc
testl
or
lret
int3
mov
pop
bound
fwait
and
lret
test
int
mov
and
outsl
dec
xchg
add
adc
testb
cs
xor
mov
ret
mov
fmulp
jnp
mov
cmp
into
mov
lret
mov
xor
enter
adc
test
repnz
jae
cld
cwtl
lahf
shrl
xor
mov
out
jns
icebp
nop
daa
in
pop
lock
nop
jae
in
sbb
int3
mov
xchg
push
fndisi(8087
push
roll
and
cmp
sbb
clc
add
fninit
sub
add
xor
inc
lods
mov
add
and
add
add
imul
pop
mov
loopne
push
mov
stos
pop
jbe
mov
adc
sub
out
jns
data16
imul
add
sbb
xor
imul
xchg
push
jecxz
and
cmp
push
shrl
sub
push
clc
je
jg
lahf
roll
fiadds
mov
dec
ds
cwtl
jne
xchg
add
sub
sarb
lds
push
cmp
test
jbe
sti
stc
sub
dec
xchg
xchg
fstpl
jp
dec
ljmp
pusha
push
insl
fmull
jge
push
into
mov
cmpsb
xlat
xchg
stos
mov
rclb
mov
dec
js
outsb
inc
imul
lods
lret
roll
inc
mov
dec
add
enter
push
pop
popa
mov
sbb
out
imul
pop
mov
or
push
cmpsl
aaa
mulb
leave
dec
bound
dec
out
mov
dec
and
push
lret
pusha
push
in
jo
mov
add
push
push
cmovs
mov
inc
shrl
sbb
pop
popa
xchg
xor
jg
cwtl
out
mov
or
push
sbb
mov
movsb
sahf
stos
jmpw
dec
arpl
mov
mov
outsb
inc
shlb
in
xchg
das
push
sbb
or
pop
ljmp
cli
add
stc
std
in
mov
mov
std
pop
xor
std
xchg
lods
adc
add
add
add
icebp
ja
mov
aad
insb
sahf
lret
mov
xor
aas
stos
repnz
call
mov
test
std
sub
imul
pop
mov
enter
adc
mov
and
jp
test
cld
or
jb
jo
sub
xlat
add
enter
sub
ljmp
scas
pop
mov
mov
enter
pop
sub
mov
or
or
shrl
xor
mov
push
mov
adc
jmp
xor
cmp
flds
fwait
loope
testl
add
xchg
movsl
jno
das
xor
int3
pop
inc
stos
repnz
mov
mov
jmp
mov
mov
sarb
fisubl
outsl
and
fisubrl
xor
jle
push
fwait
in
push
push
sbb
pusha
mov
scas
fdivp
addr16
xor
mov
inc
movl
mov
inc
push
push
adc
mov
sbb
adc
dec
jg
or
adc
cmp
push
mov
or
arpl
pop
filds
sub
frstor
add
icebp
xchg
mov
pop
push
lods
adc
jp
xor
adc
ja
xlat
addr16
in
fcomps
push
sub
inc
repnz
pop
inc
push
push
sbb
out
or
out
mov
in
loope
sbb
mov
xor
pop
jnp
in
icebp
adc
test
mov
pop
sub
int
dec
rorl
mov
int
loopne
lock
mov
add
cmpsl
push
dec
ret
sbb
and
xchg
cli
pop
add
xchg
movsb
ds
jg
dec
out
pop
imul
mov
out
sbb
mov
add
addr16
pop
pop
sub
push
dec
dec
dec
mov
sbb
dec
lods
fwait
xchg
ss
sbb
jbe
lgs
mov
jb
xlat
jg
push
dec
popa
dec
xor
mov
cmpsl
aam
add
fnstsw
cmp
sub
dec
inc
test
mov
sbb
sbb
in
mov
test
push
mov
les
movsl
xor
jg
sbb
ret
mov
sti
sbb
xchg
int3
jno
sbb
pop
mov
sbb
cmp
cltd
ds
cmp
and
jecxz
pop
inc
push
enter
and
jmp
mov
dec
ret
mov
popf
std
adc
dec
loop
pop
mov
movzbl
mov
fmul
bound
xor
lret
testl
lret
movb
xorb
std
pop
cmp
jg
les
out
lea
dec
scas
ss
push
pop
imul
add
add
jno
push
mov
add
rolb
out
sub
psrlw
or
jle
add
add
add
pop
inc
rorb
adc
push
loopne
aaa
mov
rorb
or
ljmp
pop
fwait
adc
dec
or
xchg
dec
cmp
es
push
sar
mov
rcll
push
sub
add
push
test
xor
ljmp
mov
pop
lcall
cmp
push
xchg
out
fcomp
sub
cmc
testb
add
adcl
dec
fnsave
and
add
add
test
and
rcr
pop
lock
cmp
add
loopne
lods
divl
push
pop
add
clc
push
add
xchg
movsb
sbb
lock
or
or
aam
add
fidivrs
cltd
popf
jle
and
mov
pop
inc
add
xchg
call
neg
jo
sbb
add
mov
in
mov
dec
aaa
clc
imulb
je
jnp
push
mov
ret
cmp
in
lahf
subb
fwait
ret
out
xor
pop
fidivrl
jg
shl
xlat
add
inc
pop
pop
ret
jns,pn
stc
xchg
dec
aam
nop
addr16
sub
inc
add
orl
cli
mov
mov
lret
xor
push
cmp
or
lcall
adc
xchg
jnp
shl
aas
cmp
les
idivl
aaa
hlt
orl
fbld
outsb
fstpt
adcl
das
mov
push
lods
adc
push
rcrb
mov
cs
cmp
fdiv
repnz
dec
dec
sub
sub
loope
iret
outsl
cltd
mov
fsubr
pop
adc
xor
mov
cmp
xchg
sbb
adc
add
mov
test
dec
pushf
push
pusha
inc
add
cmp
xor
insb
testb
fcmovnb
lret
xor
popa
jo
dec
mov
scas
out
mov
ss
and
and
pop
or
rorl
outsb
arpl
sub
mov
xorl
xor
out
jle
in
mov
mov
pop
jmp
or
in
and
lea
aam
jnp
xchg
inc
pop
mov
or
adc
stc
inc
in
dec
fdiv
inc
xchg
jbe
cmc
pop
cmp
jg
dec
out
roll
daa
out
xor
lret
repz
jae
inc
or
dec
sub
jl
xacquire
mov
dec
add
sahf
loope
push
inc
addb
xorb
fwait
sbb
idivl
sub
sub
sbbb
and
addr16
mov
jno
jge
pushf
test
out
leave
jle
sarl
sub
add
inc
inc
popa
data16
rcrl
xor
mov
add
add
add
inc
mov
jne
je
sti
je
mov
imul
push
sarl
dec
cmpsb
idivl
adc
sbb
popf
out
xchg
mov
aaa
int
jmp
jg
inc
cmp
ret
push
cmpsb
stos
test
jno
jnp
inc
fnsave
pop
mov
call
cmp
fs
cmp
nop
jae
outsl
fisubrl
sub
add
mov
lds
add
mov
fiaddl
dec
jno
enter
repz
out
mov
mov
jb
inc
pushf
jmp
mov
ds
lods
sahf
or
dec
adc
test
fists
bound
mov
pop
int3
or
or
pop
xor
push
mov
gs
popa
and
lcall
pop
jbe
mov
and
jmp
lret
sub
mov
jle
outsl
xorl
push
bound
pop
pop
cmpsl
cmp
xor
sbb
fsubrs
mov
fidivl
adc
iret
sbb
arpl
mov
dec
test
ret
or
loop
push
mov
hlt
shlb
or
int3
xor
cmc
or
in
arpl
popa
fcoml
mov
subb
rclb
ljmp
jno
fisubl
xor
insl
inc
or
push
fisttps
fsubr
popa
jecxz
push
insl
jp
or
cs
inc
loope
jle
shlb
loop
fcmovb
pop
js
pop
jge
int3
xchg
in
push
jno
mov
cmp
sub
cmp
insl
mov
rcrb
sub
mov
pushf
pop
montmul
cmpsb
inc
add
shlb
mov
push
dec
and
gs
cmp
and
mov
imul
jno
insl
nop
addr16
dec
jo
loopne
test
call
int
xchg
mov
fisubrl
cltd
xchg
movsb
jp
data16
jnp
icebp
cli
testb
mov
mov
fstpl
mov
fidivrs
or
cld
or
aaa
xor
mov
cs
orl
xlat
fisttps
cmpsb
push
cmc
add
jmp
cmp
jb
test
pop
mov
loopne
xor
mov
pop
ret
adc
adc
inc
dec
aad
xor
negl
mov
mov
out
and
xchg
fcmovnbe
add
test
dec
push
or
fcmovu
mov
mov
shlb
pop
push
fdivs
jo
mov
dec
jno
addb
mov
lcall
jae
jge
idivb
jb
mov
mov
in
xchg
and
addr16
mov
arpl
mov
scas
out
loopne
sbb
push
xlat
sub
arpl
mov
jl
mov
cli
call
ljmp
in
jg
loopne
add
addb
mov
fistps
lock
sub
stos
cmpl
push
cmc
adc
cmovs
mov
lods
xchg
add
fdivl
notl
out
xor
jno
sbb
sbb
enter
mov
mov
mov
js
xlat
mov
push
dec
and
sub
adcb
addr16
loopne
or
jno
adc
out
or
mov
lret
push
jge
fidivrl
movsl
jl
pop
mov
cmp
scas
imul
fstpl
cs
xchg
scas
enter
ja
incb
xchg
cmp
dec
lahf
jbe
mov
push
pop
pop
jo
je
inc
mov
out
fsubp
imul
inc
mov
mov
adc
bound
movb
jle
int
hlt
stc
xchg
lahf
and
nop
mov
bound
cmp
mov
push
loop
xorl
icebp
xor
sub
adc
mov
mov
pop
adc
stos
add
addr16
aad
lock
xor
les
push
cwtl
jp
mov
in
mov
mov
dec
jbe
lret
mov
lods
ror
and
cmp
or
loop
or
mov
loop
test
ds
cli
push
xor
pop
out
loop
xor
and
fsubrl
pushl
cmpsl
jmp
push
mov
inc
mov
xchg
insl
push
fcmovnbe
shll
push
sub
mov
pop
in
inc
icebp
lods
adc
jecxz
jnp
lods
add
inc
xchg
sub
imul
mov
or
jnp
clc
push
inc
sarb
sbb
mov
fs
sbb
jecxz
repnz
pop
mov
lea
loop
inc
lock
cmp
push
sub
xchg
test
mov
lods
push
push
test
mov
jmp
ficomps
shll
insl
aam
aad
in
test
or
pop
bound
mov
push
lods
xlat
push
xchg
lahf
add
pop
mov
ret
es
imul
stos
mov
loopne
mov
or
ja
vcvtps2pd
cmp
test
mov
mov
stc
mov
or
mov
imul
jne
mov
mov
std
sbb
jp
mov
ss
cs
test
stc
inc
and
mov
sbb
cmp
fiaddl
mov
lea
std
mov
sub
lods
mov
lods
mov
daa
jo
push
fldcw
adc
mov
sar
test
out
mov
dec
sbb
mov
sbb
jle
insb
cmc
or
enter
sub
sub
fs
js
aam
movsl
sbb
rorb
jg
xor
push
push
push
sbb
add
and
push
push
cmpsb
and
xchg
add
add
add
bound
std
pusha
scas
lea
loopne
xchg
aam
jns
mov
arpl
pop
dec
xchg
adc
xlat
cvtdq2ps
cld
dec
mov
dec
adc
pop
lods
mov
lds
mov
cmp
fcoml
push
xlat
add
cmp
mov
inc
scas
outsl
das
push
xchg
outsl
adc
xor
inc
insl
insl
push
sarl
cmpsb
mov
jb
sahf
push
sbb
mov
ljmp
or
clc
in
fwait
mov
clc
push
sbb
notb
mov
mov
sub
repnz
jo
push
test
test
enter
or
aad
and
negl
movsb
enter
mov
sarl
jl,pn
xor
fsubr
add
lods
adc
lock
xor
flds
mov
add
fdivrs
addr16
xchg
xor
data16
aaa
mov
cmp
sbb
inc
test
cltd
adc
push
loop
push
and
insl
movsl
lcall
push
pop
leave
pop
repz
xlat
push
or
and
fildll
adc
stos
mov
adc
and
or
pushf
clc
aam
mov
adc
push
and
mov
gs
rcl
push
xchg
mov
push
ss
insb
arpl
test
dec
lea
into
shll
jno
shl
ss
cmp
fwait
pop
dec
stos
xchg
sub
fimull
inc
pusha
sbb
std
jge
je
cltd
imul
loope
sub
jp
fidivrs
cmp
es
in
lea
dec
inc
ds
add
jo
nop
pop
dec
push
cs
xlat
adc
lds
adc
scas
fs
dec
aam
outsb
mov
push
test
dec
xchg
js
inc
xchg
mov
movsl
adc
fninit
pop
in
dec
cli
lcall
inc
clc
jl
hlt
jbe
xchg
xor
adc
push
add
stc
or
loopne
inc
inc
leave
in
repnz
sbb
jmp
xchg
stc
xchg
jle
aam
inc
lock
movsb
aas
les
dec
dec
in
inc
and
aaa
adc
add
xor
inc
mov
sarb
int
mov
mov
mov
jnp
leave
dec
jge
out
addr16
cmp
sti
mov
cmp
imul
xchg
mov
lcall
pop
xchg
ret
push
pop
xchg
int
sahf
xchg
mov
sbb
mov
xor
sbb
shrb
jle
and
mov
mov
scas
lret
test
mov
mov
cmpsb
inc
lods
jns
push
movsb
cmp
xchg
pop
enter
jo
fisttpll
inc
insl
insb
js
xchg
out
fs
sbb
movsb
pop
push
add
cmp
mov
add
pusha
xchg
into
mov
add
add
add
in
test
and
imul
hlt
add
or
xor
sbb
andl
insb
push
negl
pop
gs
pop
add
inc
adc
xor
and
shrl
sti
mov
inc
outsl
int3
stos
stc
or
or
push
outsb
xchg
int3
stos
jne
jbe
aas
push
add
dec
xchg
push
sub
test
cltd
pop
insb
add
inc
xchg
and
push
sub
scas
jbe
push
push
test
push
jae
rcrb
gs
pop
jb
ljmp
insl
testl
ret
mov
out
add
add
mov
std
mov
push
adc
jnp
push
sbb
lahf
popa
cmc
in
int
mov
outsb
cmp
or
daa
dec
js
mov
cs
gs
pop
or
push
jg
dec
fistpl
mov
cmpb
data16
pop
sub
sub
push
and
cmp
fldenv
add
jo
xchg
lds
repnz
pop
pop
inc
inc
sbb
movsl
cmp
ret
cmp
sub
fisubrs
mov
fwait
iret
fidivl
cmp
fimull
mov
mov
popl
movsb
pop
pop
inc
mov
xor
mov
cmp
sub
out
das
lret
cmp
or
stos
pop
push
lahf
or
leave
mov
and
call
cmp
mov
pusha
int
js
insb
xlat
mov
sti
dec
xchg
sub
add
outsl
pop
add
dec
or
out
mov
jl
std
xchg
sti
outsb
ds
push
sbb
clc
loop
dec
inc
mov
mov
cs
mov
inc
rolb
cmp
inc
xchg
loope
sub
add
push
rcrl
jp
out
andl
inc
int3
jl
movsl
ror
mov
popf
pop
xor
mov
mov
mov
shll
sbb
add
and
out
mov
push
hlt
sarl
test
xor
not
xor
mov
test
xchg
popl
insl
mov
repnz
mov
mov
inc
leave
ret
mov
loop
adcb
mov
in
bound
cwtl
or
cmp
out
fmul
sub
xchg
rclb
xlat
mov
faddl
sti
mov
and
add
jge
mov
mov
test
and
aas
or
stc
fisubrs
mov
sbb
push
mov
pop
push
clc
repz
test
in
hlt
pusha
xchg
dec
pop
jmp
mov
sbb
fmull
cmpsb
and
or
lahf
add
add
inc
mov
and
hlt
lea
add
add
add
cmp
pop
nop
stc
rcrl
mov
lds
fstpt
loopne
pop
xchg
inc
je
mov
jecxz
out
jo
mov
push
or
mov
jnp
mov
push
addl
or
mov
mov
pop
pop
lods
cmc
mov
xor
sbb
hlt
mov
arpl
jge
dec
out
cmp
std
inc
mov
loop
sbb
mov
jp
pop
mov
mov
xchg
jb
aam
push
dec
add
and
in
adc
sub
cwtl
sbb
dec
in
std
mov
popa
cmpl
pop
lods
rolb
iret
mov
ss
inc
lock
jns
out
scas
adc
mov
mov
xchg
cmpsb
xchg
cmc
sub
ja
addb
add
push
int3
loop
xor
mov
jl
add
or
lcall
and
andb
and
lods
jmp
adcb
or
addl
dec
pop
out
stos
push
cli
loope
call
push
daa
mov
jns
pop
sub
aam
cmp
and
mov
and
arpl
aad
stos
test
xchg
ret
sbb
ljmp
loope
bound
mov
mov
dec
andb
scas
hlt
imul
sub
xchg
or
sahf
pop
mov
inc
push
iret
xlat
xor
xorb
lds
dec
xchg
sub
rcrl
jne
popf
insl
inc
ficompl
or
dec
fidivrl
mov
or
sbb
js
add
insb
dec
adc
ja
xor
sub
inc
mov
and
pop
dec
gs
cmpsb
xor
xchg
adc
xor
shr
shrb
fisubrs
add
push
stos
fs
addl
test
das
pop
daa
scas
push
bound
xlat
out
loope
iret
outsb
stos
dec
fistps
addl
xchg
sti
clc
add
xchg
int
and
mov
movsl
cmpsb
jg
stos
lock
aam
divb
dec
bnd
imul
les
stos
jle
jecxz
mov
jo
popf
rorb
stos
mov
mov
mov
ja
push
mov
inc
lahf
adc
xchg
popf
mov
int3
xchg
xor
ret
call
dec
jae
lea
aaa
adc
addr16
xchg
push
outsl
imul
insl
sub
pop
xor
jns
ljmp
lcall
fiadds
cwtl
jae
adc
pop
repz
push
popa
add
fidivrs
mov
out
inc
jne
std
dec
or
lcall
fdivrs
insb
movsb
fwait
jecxz
sub
sbb
mov
clc
mov
cmp
jle
xor
jb
pop
sbb
add
enter
mov
mov
mov
mov
and
movsb
hlt
sub
gs
stc
mov
fisubrs
add
dec
adc
and
cmpsb
fsubrl
lds
adc
add
call
pop
fisubl
mov
sub
add
dec
mov
or
ljmp
adc
jnp
test
xchg
jns
cmpsl
mov
jno
std
mov
add
in
jecxz
jae
andb
push
rcll
dec
rorb
lret
daa
push
mov
jb
js
loope
pop
mov
adc
jae
cmp
into
imul
xor
mov
iret
push
inc
loope
jmp
mov
hlt
sbb
sbb
cld
and
nop
lods
jmp
outsl
gs
dec
xor
inc
sbb
inc
je
pop
repz
lods
rorb
outsl
jmp
xor
incl
sub
jp
jg
cli
test
out
mull
inc
push
stc
and
push
rol
sub
or
out
push
and
mov
stos
mov
push
int3
pop
add
loope
pop
add
inc
jne
loop
dec
sub
fisubl
mov
lret
xchg
subl
mov
fistl
jns
orb
mov
cmp
lcall
pop
push
iret
cmp
sahf
test
cwtl
sbb
ja
out
fnstcw
pop
xchg
jb
ds
aad
je
sub
and
push
loop
sahf
push
mov
inc
int
xchg
pop
in
adc
mov
sti
push
cmc
insb
push
xlat
mov
mov
push
sub
cmpsb
in
aas
fwait
xchg
sbb
orl
mov
arpl
mov
pop
xor
aaa
cwtl
fwait
mov
leave
mov
dec
neg
push
pop
ds
sbb
mov
dec
jmp
in
xor
xchg
xchg
into
sub
mov
push
pop
push
xor
stos
das
cli
or
xor
jae
xchg
cmp
lea
shll
js
mov
pop
daa
sti
xchg
aaa
dec
cmp
movb
ja
push
ss
std
in
add
xchg
adcl
push
imul
aam
or
dec
dec
push
scas
fwait
lret
mov
push
loopne
daa
cmp
mov
inc
xchg
jb
mov
mov
cmp
cli
dec
test
mov
xchg
je
and
arpl
sbb
or
and
dec
lock
mov
insb
sub
cmp
inc
or
add
adc
dec
mull
test
push
ja
jb
mov
scas
jne
lret
or
cli
cltd
mov
int
mov
mov
loop
mov
ds
cmp
jne
or
adc
fwait
daa
xchg
sub
adc
out
fninit
mov
aam
inc
push
jecxz
xchg
dec
mov
ljmp
lods
idivl
mov
adcl
add
add
add
lock
add
mov
lea
mov
mov
scas
dec
xor
push
fwait
mov
test
xor
in
bound
aad
js
xchg
aas
ja
sub
sbb
jl
dec
comiss
cmp
sbbb
sbb
sub
clc
mov
aad
lea
xor
fidivl
cwtl
xchg
sbb
sub
jae
adc
jb
pop
fmull
aad
mov
sub
dec
into
jge
into
stos
and
xchg
lahf
cmp
mov
mov
stc
adc
nop
xor
pusha
xor
xor
cmp
mov
pop
xorl
in
loopne
cltd
mov
or
push
xchg
popf
insl
mov
mov
or
stos
sub
jb
cmp
out
rcrl
jae
add
or
inc
iret
mov
popa
cmp
xchg
clc
rorl
mov
dec
jne
jmp
lock
dec
mov
jb
scas
push
hlt
iret
push
add
pop
xchg
cmp
lods
mov
ds
fbld
insb
rcr
jo
ds
mov
ret
movsbl
shl
sbb
pop
cld
in
es
ret
test
add
inc
pop
xor
rcrb
jge
aam
icebp
adc
cmp
and
cmpsb
ljmp
out
ret
mov
adc
pop
cmpsb
cli
cmc
rcll
sbb
data16
leave
or
xlat
unpckhps
sbb
xchg
jg
xchg
in
int
repnz
jg
lock
pop
or
or
sar
jno
cmc
mov
add
jg
xchg
sub
shl
fdivl
ret
xorb
xor
ljmp
out
icebp
cmp
pop
lcall
mov
aad
aaa
adcb
rcrb
hlt
mov
cli
dec
data16
loop
icebp
pop
push
addr16
add
and
cli
sti
and
pop
xor
or
insb
es
data16
xchg
bound
fcoms
scas
mov
jmp
repnz
jmp
andb
pop
movsb
in
lock
lret
das
pop
mov
fidivrl
inc
or
xchg
ss
icebp
pop
aad
das
int3
lret
ret
sahf
xchg
fnstcw
lea
out
leave
hlt
jg
add
insl
dec
inc
jnp
xor
push
cwtl
xlat
jno
in
inc
cmp
cltd
xchg
push
test
inc
jb
sbb
mov
movsb
mov
ret
hlt
mov
pop
push
loopew
mov
jp
ss
push
xlat
cmpsl
call
push
ljmp
dec
mov
es
inc
movsl
xor
in
flds
xchg
mov
inc
jbe
int
mov
xor
out
or
push
sbb
and
repz
gs
fcompp
out
gs
notb
xchg
add
add
add
xor
jae
cmp
adc
sbb
das
enter
dec
stc
nop
stos
loopne
jl
dec
stc
jp
xchg
cli
pop
mov
and
push
xor
nop
push
rcrl
inc
lahf
ret
fcomip
stc
pop
pop
leave
loope
cmp
stos
dec
int
pop
cmpsb
pop
loope
mov
adc
add
lret
in
or
mov
xchg
add
divl
pop
pop
insl
xchg
in
popa
cmpsl
data16
mov
and
mov
add
mov
pop
jl
adc
cmpsb
fs
rcrl
add
test
sahf
sbb
cli
sub
in
jmp
jnp
mov
mov
mov
mov
mov
sub
aam
scas
les
add
dec
or
push
inc
lcall
sarl
lock
shlb
in
loope
sti
in
repz
cmp
mov
xchg
mov
pusha
shrb
pusha
jmp
mov
cmpsl
pop
push
dec
pop
out
dec
aad
or
xchg
stos
out
mov
sub
xorl
movsl
negb
mov
fcmovbe
xchg
dec
cwtl
xchg
sti
xor
push
push
fldcw
rol
iret
call
dec
daa
dec
pop
add
sbb
pop
jge
fldcw
adc
inc
stos
and
pop
sbbl
adc
shll
pop
js
lods
pop
lret
scas
jmp
addr16
jge
push
pop
scas
sbb
imul
repnz
cmp
inc
inc
inc
pop
mov
inc
fs
xchg
pop
out
or
fmuls
hlt
lahf
stc
or
pusha
pop
cmp
and
jmp
pop
pop
out
cs
mov
addl
aaa
xchg
cmp
imul
test
stc
addl
daa
je
rcrl
int
or
loope
arpl
mov
pushf
add
jo
and
mov
cmp
das
xlat
cmp
pushf
hlt
pusha
daa
add
pusha
cs
popf
scas
xor
insb
dec
jbe
lea
sbb
sub
popf
movsl
mov
mov
push
stos
pop
into
or
sub
jmp
cmp
adc
aaa
sbb
lds
insb
pop
dec
movsb
out
sub
inc
ljmp
and
or
push
sub
adc
mov
dec
nop
add
dec
mov
mov
clc
sub
inc
mov
mov
ffree
lret
mov
nop
incl
cmp
cmpsl
sub
out
fcomps
sub
push
enter
mov
cltd
and
test
dec
sahf
arpl
pmaxub
add
lcall
out
enter
es
mov
xsave
push
mov
daa
dec
adc
fs
mov
fsubs
jmp
adc
sub
xchg
inc
mov
add
rcrb
fs
add
dec
push
fdiv
mov
iret
mov
mov
pop
cli
in
pop
jno
fcompl
imul
xor
xor
movsb
aas
imul
adc
sbb
jle
jp
mov
cmpsl
rcrl
data16
xchg
shlb
cvtpi2ps
lods
ds
lods
pop
or
ds
adc
pop
add
addb
push
jb
loope
filds
mov
rclb
mov
cltd
lds
imul
xbegin
pop
fcomp
mov
jl
push
stos
shrl
adc
stos
das
lret
cld
movsl
dec
clc
push
push
dec
bnd
jne
mov
or
jnp
and
aas
test
cmpsb
xor
pop
pop
push
aam
dec
stos
sbb
pop
xor
stos
rorb
jno
std
mov
out
loop
enter
mov
pop
dec
hlt
out
jno
ret
xchg
cmp
or
jl
dec
imul
inc
mov
daa
lret
pop
into
decb
xchg
in
sub
shrb
and
jl
sbb
sbb
mov
int
lahf
add
add
mov
cmp
addr16
lods
jge
mov
ret
push
sbbl
das
cmp
mov
repnz
mov
lds
cli
leave
lahf
mov
lahf
into
shrd
sbb
in
jp
fnstsw
orb
and
and
loop
imul
inc
jmp
dec
adc
iret
dec
clc
mov
fisubrs
dec
js
jno
dec
sar
hlt
pop
cs
jmp
pusha
test
mov
cs
add
or
rcr
mov
pop
pop
repnz
test
pop
inc
pop
dec
add
movsl
inc
fdivl
add
lret
jle
aad
fs
daa
sub
push
cwtl
push
jnp
mov
sub
xchg
cmpsb
fmuls
pop
aad
sub
nop
pusha
cli
repnz
mov
lds
dec
xor
std
test
int
arpl
mov
and
ret
shrl
fnstcw
movsl
cmp
and
les
xor
or
out
pop
imul
sti
in
aad
repz
jp
les
daa
fistl
out
lcall
mov
jbe
lods
xchg
adc
insb
cmp
jo
and
inc
add
pop
outsl
outsb
xor
sbb
mov
jo
push
adc
mov
and
dec
and
and
int3
les
lods
fistl
ss
jbe
pop
cmp
subb
outsb
push
aaa
bound
shlb
test
and
jge
scas
pop
sbb
sbb
cmp
push
mov
sub
repz
jbe
inc
pop
cltd
cmp
jge
mov
push
mov
in
add
push
and
xor
jecxz
lahf
mov
add
add
add
push
stos
cmp
push
pop
lock
dec
mov
shll
sub
into
int
insb
adc
shlb
mov
xchg
xor
cs
gs
outsb
movsb
mov
stos
mov
add
fs
push
sbb
icebp
cmp
stos
in
mov
fcoms
shll
adc
test
push
fimuls
xchg
jnp
pop
dec
pop
cmpsb
pop
and
cmp
test
std
cmp
jno
scas
mov
push
push
push
cltd
mov
sbb
cmp
ficomps
mov
cwtl
popa
adc
aam
mov
in
jae
imulb
in
jns
clc
or
jmp
and
fidivl
dec
ret
ret
daa
cmp
cwtl
pop
cmp
xor
push
ljmp
jae
or
or
jle
mov
aam
mov
dec
aad
push
pop
dec
xchg
push
cwtl
cmc
lea
cmpsl
mov
leave
jbe
pop
mov
jge
mov
sarl
mov
sti
jle
mov
push
imul
jle
aaa
lret
push
inc
inc
data16
in
adc
jl
insb
push
jae
push
mov
and
cmp
mov
dec
fldt
cld
cld
jmp
bound
in
and
ljmp
sub
xchg
or
sbb
bound
icebp
mov
or
mov
lahf
mov
lods
xor
pop
mov
pop
push
incb
cli
sbb
dec
js
mov
decb
cmp
int3
xor
dec
add
xchg
jbe
lds
fimull
push
call
pop
loope
xor
inc
call
inc
push
sbb
mov
or
and
xchg
pop
lds
shlb
out
xor
push
bound
insl
mov
mull
push
cmp
cld
js
shrb
stc
mov
insb
cmp
mov
cwtl
cli
mov
cli
push
pop
and
leave
repnz
mov
xchg
int3
out
push
jle
daa
jecxz
cmp
aad
jns
clc
jne
sub
adc
lahf
sub
xor
negb
inc
adcl
sahf
movl
out
and
inc
nop
out
jne
cmp
sub
add
fcompl
or
icebp
cmp
dec
add
shll
adc
jp
inc
push
push
aaa
mov
sbb
imul
idivl
fidivs
inc
cmp
fsubs
data16
jbe
cmp
addr16
and
sbb
test
ds
sub
xor
pop
jno
sbb
decl
fisttpll
pushf
mov
sbb
cmpsb
xchg
rep
mov
cmp
es
ja
fs
jmp
add
push
jecxz
jg
popa
hlt
mov
mov
add
add
add
mov
inc
fwait
std
sbb
inc
push
jns
out
cmp
cmp
outsb
jle
out
movsl
push
rcll
shlb
shlb
mov
aam
pop
enter
sbb
in
pop
out
cmp
icebp
cli
inc
jmp
test
adc
pushf
loop
insl
fcmovnbe
lods
hlt
mov
sbb
xor
inc
mov
inc
mov
xor
ret
or
mov
fdivs
test
bts
pop
repnz
call
aam
mov
into
add
jb
leave
jle
scas
cs
mov
sbb
fs
ja
ret
je
and
and
jnp
int3
mov
mov
mov
adc
addl
cmp
scas
add
aad
and
lock
leave
fistl
mov
dec
or
push
mov
sbb
ret
sbb
bound
iret
popf
arpl
js
test
scas
sti
cmp
cvtps2pi
add
dec
shlb
fwait
sarb
loopne
pop
popa
push
and
and
mov
mov
bound
and
aaa
pop
xchg
fsub
fwait
mov
insb
cld
movsl
sub
imul
test
out
push
or
jbe
sub
pop
rcr
rclb
jl
cmp
push
js
cmp
adc
lret
pop
nop
add
jge
movsl
cltd
jp
sbb
push
dec
fwait
loop
addr16
in
sbb
das
add
sti
add
into
mov
jl
xchg
xchg
or
push
neg
cmpsb
xchg
sub
mov
iret
mov
mov
aam
mov
mov
mov
rorl
ret
cmp
dec
pop
ja
jae
mov
in
lcall
jnp
les
mov
lds
and
sarl
fcoml
push
aad
rcr
stos
in
xor
adc
test
rcr
and
mov
lret
outsl
xchg
ljmp
jo
lcall
dec
cmc
gs
pusha
mov
adc
nop
xor
mov
and
fs
daa
and
popf
dec
pop
xor
mov
push
insb
sbb
scas
clc
addr16
mov
stos
sub
pop
leave
adcb
jo
or
das
mov
jns
push
jae
in
aam
js
std
jl
daa
data16
inc
adc
int
xor
adc
xchg
xchg
jecxz
outsl
cwtl
movsb
sbb
es
pop
push
dec
js
dec
add
inc
xor
push
sub
and
xchg
inc
mov
mov
loopne
enter
je
popa
adc
lahf
pop
sub
dec
dec
and
pop
xchg
ret
icebp
mov
loope
xor
jp,pt
adcl
push
jmp
mov
dec
xchg
xor
mov
mov
jle
push
mov
jo
nop
cmp
add
pusha
jbe
out
fnstsw
mov
mov
add
jecxz
imul
xchg
sbb
popf
inc
jmp
ret
adc
push
pop
jo
leave
shl
cmp
mov
xor
ja
mov
mov
nop
xor
shr
lret
in
jns
jo
inc
push
pop
cmpsl
or
sub
test
imul
jnp
negl
sub
es
push
or
xor
and
and
inc
fs
xor
jecxz
pop
inc
dec
pusha
cmpsl
jnp
add
adc
addb
and
add
pop
push
pop
insb
and
mov
jne
dec
popa
mov
jge
icebp
mov
inc
data16
jl
lock
mov
inc
stos
dec
sub
addr16
jle
pop
add
cld
scas
jne
sub
add
bound
ror
mov
push
cmovg
stos
lcall
nop
jge
cli
xor
insl
jmp
repnz
sub
daa
or
mov
xchg
add
dec
pop
add
push
enter
fidivrs
mov
dec
mov
and
xor
jl
fwait
aaa
fsts
fdivrp
loop
mov
movsb
mov
data16
cld
aam
popf
mov
adc
int
xchg
addl
inc
push
xor
adc
push
out
mov
fldlg2
sarb
andb
pop
sub
push
cwtl
mov
imul
cs
jnp
or
jg
insb
int
jl
and
fsubrs
iret
cmp
mov
inc
movsl
jne
push
lahf
std
sub
psubd
mov
xlat
scas
andl
mov
jnp
dec
jle
les
sub
dec
adc
mov
pusha
jge
sbb
xchg
dec
test
pop
inc
dec
push
sbb
test
sbb
mov
outsl
inc
fldenv
sub
in
xchg
insb
cmp
push
push
scas
add
sbb
mov
aaa
xor
movsb
arpl
push
divb
jmp
mov
jns
push
jo
jl
push
rcrb
ret
jo
dec
mov
int
mov
cld
jmp
cmp
push
ret
popa
mov
popf
mov
test
adc
xor
pushf
and
fcoms
cmp
push
gs
and
and
jecxz
xlat
xor
xorl
mov
push
aam
jge
incl
je
cwtl
popa
mov
mov
lods
jge
push
test
les
sub
or
push
out
push
cmpsb
dec
xchg
or
mov
outsl
add
int
and
js
pop
push
shlb
sbb
sub
lock
xchg
and
inc
gs
popa
pop
lret
inc
mov
pop
mov
add
push
sub
fucomip
ficoms
adc
mov
jg
cmpsl
add
add
add
lret
sti
ja
sbb
jl
imul
add
and
pop
dec
mov
add
xchg
sti
js
cmp
dec
call
mov
jb
adc
fiadds
or
and
inc
push
loope
and
fisubs
and
mov
aas
lcall
push
inc
mov
inc
mov
insb
sahf
repnz
je
cmp
adc
aad
fmulp
inc
xchg
mov
ss
lret
or
pop
sub
cmpsb
nop
lahf
sbb
pop
jae
insb
and
fidivs
jle
add
xchg
daa
dec
or
mov
cltd
shrb
and
inc
mov
ljmp
arpl
les
inc
arpl
and
lcall
imul
scas
inc
enter
jle
hlt
rep
popf
lds
daa
xor
js
cmpsl
std
cmc
movsl
sbb
dec
mov
fcmovb
dec
loopne
mov
movsb
icebp
jne
in
mov
rcll
lds
push
repnz
jnp
sub
mov
cmpsb
mov
jl
cmp
mov
dec
es
cltd
mov
shll
xchg
push
inc
push
push
stos
push
push
sbb
mov
cmp
inc
out
bound
lret
cmpsb
mov
je
xchg
push
jl
dec
pop
mov
mov
scas
fwait
inc
dec
xor
ja
pushl
xchg
inc
in
ds
xor
push
push
negl
mov
movsl
or
push
aas
push
ljmp
adc
out
in
fiaddl
mov
lcall
inc
dec
fstps
xor
push
jns
adc
insb
jl
mov
je
outsb
dec
mov
and
jge
pop
xor
fstps
cld
imul
test
data16
mov
mov
adc
shr
mov
int3
cmp
pop
mov
ss
scas
jg
xchg
insl
scas
sub
push
xlat
movl
je
mov
and
cmp
movsl
sbb
mov
ret
sti
push
loopne
mov
sbb
inc
dec
xorl
stos
jno
cmp
jno
mov
jo
hlt
repnz
sbb
cmpsl
cmpsl
int
mov
add
cmp
and
lds
cli
jecxz
push
pusha
cmp
jp
xchg
into
fldt
shr
dec
jle
or
dec
imul
sbbl
in
mov
jo
push
scas
or
and
out
popa
xor
in
mov
bound
xchg
shll
mov
mov
pop
mov
jo
out
jmp
jnp
xor
iret
lods
and
lea
cmp
xor
or
or
push
pop
add
xlat
cmp
aas
data16
int
pusha
xchg
mov
and
or
push
fists
loop
add
outsl
daa
insl
push
push
stos
adc
jae
dec
stos
add
add
add
xorl
jg
inc
int
and
cmp
pop
inc
rorl
mov
mov
pop
mov
lret
scas
mov
lock
int
in
or
es
mov
push
lahf
pop
xor
mov
fstpt
pop
dec
dec
nop
add
je
jmp
sti
jge
push
adc
push
mov
out
mov
xor
fnsave
repz
cmp
scas
dec
in
in
jns
mov
sbb
sub
pop
mov
mov
rol
xchg
jne
inc
ja
cmp
dec
stos
popf
dec
nop
xchg
mov
ds
mov
in
in
cmp
loopne
xor
mov
push
push
push
in
or
std
xchg
cmpsb
out
xor
jno
das
inc
add
aas
arpl
cmp
jbe
jle
inc
cmpsb
loopne
mov
ljmp
dec
dec
add
sub
adc
dec
adc
pop
dec
mov
add
popf
and
dec
lds
jl
mov
xor
mov
out
daa
xchg
adc
sar
push
mov
and
jno
sub
jae
jg
jecxz
xor
pop
push
and
mov
jbe
push
int3
jl
lcall
aam
cmp
popf
mov
nop
cmp
push
pushf
lret
js
xchg
dec
fisubl
push
lods
push
loope
clc
out
sarl
repnz
sbb
lock
sahf
popf
and
mov
test
inc
ja
outsl
adc
das
mov
add
inc
mov
inc
int
lret
mov
mov
pop
xchg
or
iret
clc
enter
and
sub
sbb
loopne
mov
and
mov
daa
inc
nop
xchg
rcll
pop
outsb
cmp
push
jmp
xlat
dec
andb
es
mov
xor
imul
xchg
movsl
fldenv
aas
in
xor
xlat
insb
aad
lds
sbb
rcrl
mov
xchg
xor
in
mov
out
mov
or
xchg
aas
jle
or
js
mov
push
inc
xor
cltd
sub
lcall
hlt
inc
clc
xchg
imul
loope
jmp
inc
jb
mov
stos
js
mov
pop
cmp
dec
into
cmp
inc
mov
mov
sti
xor
fwait
cmp
popf
fsubrl
les
stc
mov
jne
or
fsubs
xchg
ret
nop
loop
loope
push
push
xchg
sub
mov
rcrb
repnz
xlat
fld
push
fidivrl
add
outsl
loop
mov
and
or
ret
test
sbb
sub
add
leave
mov
jns
inc
add
inc
lea
and
mov
out
add
mov
add
add
add
lods
pop
dec
sub
sub
lds
lock
jb
bound
fistpll
cmc
mov
rcll
mov
xchg
sub
loopne
jb
ss
xor
jnp
ja
pop
xor
ret
xchg
pop
or
mov
pushf
jg
into
or
xchg
test
mov
jmp
sub
shrb
push
pop
xchg
ret
imul
push
dec
lods
lcall
dec
sbb
and
xchg
subl
fwait
jp
shrb
add
or
mov
or
repz
push
es
xor
pushf
out
and
dec
cwtl
adc
xor
shrl
test
xor
rcll
pop
inc
push
cmp
jg
mov
pop
fcoms
xlat
sbb
inc
sarl
adc
aam
les
xchg
sbb
std
push
xor
out
mov
aas
jge
jnp
push
pop
pop
pop
sbb
mov
inc
dec
mov
inc
ficoms
lahf
ljmp
test
jno
mov
sbb
sarb
hlt
dec
pop
or
inc
inc
cmpsl
cmp
push
int3
sub
test
and
mov
rorl
arpl
cld
arpl
cmpsl
pusha
fs
push
pop
jmp
sub
xor
pop
cmp
fldt
lock
inc
dec
pop
and
jmp
adc
loope
push
sub
rcr
mov
into
cmp
jo
mov
mov
lods
xchg
sahf
js
push
mov
out
adc
test
bswap
data16
out
and
push
adc
das
rcr
and
pusha
popa
lahf
mov
out
lds
bound
lds
std
insb
and
jge
dec
lret
cmp
arpl
jge
clc
inc
cwtl
xor
jmp
cmpb
hlt
xchg
fs
sub
dec
mov
and
mov
sub
push
jecxz
mov
faddl
adc
mov
hlt
scas
sar
xor
mov
les
inc
bound
jno
out
ljmp
jns
repnz
pop
dec
push
mov
add
push
pop
fstpl
mov
cs
data16
lods
inc
ficoms
loop
inc
mov
jl
add
sti
jns
lea
int3
stc
sbb
lods
mov
sbb
adc
add
jb
inc
clc
addr16
and
inc
cmp
outsl
lret
fadds
push
int3
dec
xor
pop
aad
and
push
push
mov
outsb
pop
cmc
jo
jmp
or
out
mov
push
pop
mov
mov
jle
fs
xchg
pop
ss
jo
fidivs
ret
jg
or
inc
jnp
lock
xor
arpl
xor
push
sub
sbb
xchg
jg
std
mov
cmp
add
add
add
ficoms
fsubrs
movsl
dec
pop
cmp
fxtract
jbe
mov
sub
into
push
ds
add
ss
add
xor
stos
xchg
fistpll
or
jle
mov
sbb
data16
rclb
rcl
lea
subl
push
aam
lea
std
lret
mov
test
aam
filds
out
cs
pop
inc
js
ficomps
mov
repnz
xchg
push
inc
sbb
jb
mov
mov
jnp
pop
xchg
ss
sbb
xchg
lds
sbb
add
mov
lods
clc
xor
lods
sub
add
hlt
ret
sbb
pop
aas
sbb
mov
adc
pop
xchg
or
sbbb
push
jno
mov
lahf
inc
insl
in
in
push
ret
dec
mov
cld
pop
mov
pop
push
fisttpll
cmp
pusha
shll
jmp
pop
pop
loope
pop
push
mov
jbe
add
sbb
pop
mov
loop
sub
idiv
dec
ds
inc
sbb
subb
mov
mov
xchg
xor
shr
jle
subb
mov
mov
push
push
adc
andb
xor
repz
lds
loopne
fsub
test
es
jle
mov
pop
and
je
cwtl
cmp
lcall
shl
sbb
ds
mov
mov
sbb
stc
inc
cwtl
lahf
pusha
out
push
mov
call
popa
xchg
bound
idiv
inc
rol
pop
shlb
fidivl
leave
adcb
xor
push
sbb
sub
sbb
and
fs
jbe
call
pushf
inc
fs
pop
dec
xchg
popa
jne
mov
cwtl
sbb
add
mov
cmp
mov
jle,pt
add
inc
arpl
xchg
inc
jo
mov
mov
ficomps
and
pop
lods
cmp
stos
cmpsb
pop
stc
add
je
add
cli
dec
addr16
mov
mov
cmpsb
ja
lods
or
sbb
in
mov
pop
xlat
das
mov
test
notl
div
mov
cmp
and
inc
loope
lods
leave
aaa
addr16
xchg
fildll
or
jmp
test
cmp
pop
ds
loope
enter
and
cltd
out
loope
out
mov
jns
push
push
mov
ret
dec
je
sub
add
jg
mov
pushf
mov
mov
rclb
arpl
push
test
ret
loop
outsb
les
stc
or
cmpsb
hlt
inc
daa
into
push
cmp
add
sbb
jge
mov
mov
add
add
add
mov
xlat
lret
test
in
mov
add
mov
inc
and
mov
mov
je
in
mov
sti
fiaddl
aad
repz
adc
fcomps
outsl
out
test
scas
mov
test
ljmp
inc
sub
xchg
movsl
jbe
shll
sub
mov
mov
add
or
ja
push
loop
and
scas
pop
daa
inc
xchg
add
negl
movsl
in
divb
add
xchg
and
mov
jge
dec
out
or
fistpl
repz
push
insl
repz
pop
aam
ljmp
enter
sub
adc
ja
ds
xchg
loope
add
cmp
pop
mov
in
add
mov
fs
push
mov
cmpsl
or
rcll
push
and
addr16
jmp
fidivrl
inc
jns
out
scas
xchg
pop
out
mov
insb
add
add
out
out
pop
jne
push
pop
addb
dec
in
sbb
dec
adc
cmp
stos
pop
push
out
insb
push
add
imul
or
xorps
dec
pop
xchg
mov
loop
je
lcall
mov
push
adc
lods
test
push
adc
repnz
data16
or
lock
insb
push
test
mov
xchg
add
pushf
lds
xor
pushf
dec
inc
add
les
imul
or
inc
movsb
mov
loopne
and
movsl
mov
xchg
xor
adc
sahf
dec
mov
movsl
jno
xlat
lahf
and
cmp
add
filds
jo
pop
and
in
adc
insb
lret
adc
shlb
pop
stos
scas
jb
iret
out
mov
popa
xchg
and
dec
mov
mov
je
fcoml
js
add
mov
xor
in
aad
pop
xor
loop
pop
mov
xorl
addr16
sub
mov
xor
cwtl
mov
mov
or
and
mov
cmp
xchg
repz
scas
cmp
mov
lods
dec
pop
dec
cltd
lret
or
lcall
stos
push
xchg
inc
ret
dec
popf
cmp
ja
adcb
out
add
sahf
cld
mov
pop
aad
and
pop
sub
xchg
cmp
std
sub
mov
or
sar
pop
or
pop
js
xchg
sbb
inc
sub
jecxz
insl
push
ds
movsb
addb
sarl
sub
popw
ja
movsl
test
jl
ljmp
out
jmp
push
bound
mov
mov
mov
xor
xlat
xor
mov
add
add
add
push
leave
arpl
psubusw
xorl
out
js
clc
jmp
out
lods
jp
mov
push
add
dec
fiadds
shl
mov
lahf
bswap
dec
repz
rcr
mov
push
gs
imul
adc
rolb
outsb
mov
mov
xor
sub
test
aaa
sbb
pusha
push
fwait
sub
cmp
rcrl
test
sti
les
lret
dec
in
pop
pop
push
jo
test
mov
xorl
dec
xorl
jmp
or
es
dec
pop
adc
adc
shlb
ljmp
data16
push
scas
bound
add
in
mov
lcall
or
cltd
or
leave
sbb
pop
fistl
xchg
or
push
xchg
dec
ljmp
stos
out
rcrb
pushf
push
xor
aaa
aad
loope
call
jecxz
push
cs
jbe
sub
bnd
pop
lods
clc
imul
int
pop
inc
decb
inc
push
jmp
rcrl
mov
lea
aam
pop
push
xor
jnp
imul
cli
int3
out
inc
mov
lock
cli
pushf
mov
outsl
pusha
je
mov
cs
sbb
lods
jno
pop
pop
push
aas
leave
scas
inc
sbb
cmp
aaa
inc
lahf
jne
mov
insb
dec
mov
mov
push
jbe
pushf
scas
ljmp
cmc
testl
test
in
scas
push
and
mull
and
and
adcb
les
dec
cmp
mov
loope
addb
add
lock
pop
push
or
fdivrp
push
out
ljmp
cmp
xchg
xor
push
in
pop
enter
xlat
aaa
cmp
test
fistpl
jecxz
mov
push
add
jl
mov
dec
sbb
mov
jl
icebp
jle
and
ljmp
roll
mov
dec
movsl
stc
leave
sbb
test
mov
fldenv
or
push
push
outsb
add
hlt
add
mov
ds
sahf
movsl
stos
pop
cmp
lea
jecxz
testl
movsb
dec
cltd
int3
jge
imul
add
mov
and
xchg
and
sub
mov
int3
sub
mov
jno
nop
and
fadds
dec
dec
dec
push
loop
dec
push
jbe
sbb
outsb
sbb
add
mov
jns
inc
and
mov
push
xchg
mov
das
inc
ljmp
pop
lods
fldenv
and
push
mov
clc
mov
test
ret
jne
lahf
add
dec
inc
mov
in
stos
clc
adc
adc
outsb
or
add
popf
jecxz
sub
dec
cmp
mov
dec
sbb
dec
dec
les
rolb
jns
icebp
sbb
jne
test
inc
aam
pop
jmp
inc
jno
xor
stc
mov
jae
jnp
pop
lods
shll
sub
lods
jl
enter
push
lods
das
xor
test
jmp
pop
out
imul
xchg
add
les
loop
cmp
and
rorb
cmpsb
popa
pop
arpl
icebp
cmovl
jg
cmpsl
ret
ror
sub
enter
xchg
pop
xchg
and
stos
popa
enter
pop
rcll
les
ss
daa
scas
fdivrl
ret
and
mov
iret
mulb
aam
sbb
or
xchg
mov
shrb
mov
jbe
lock
data16
add
fldcw
jg
fidivl
push
ss
mov
rol
movsb
aad
or
sub
fs
xchg
push
shll
cmp
int3
mov
je
pop
je
jg
popf
shl
sbb
mov
mov
stos
je
mov
and
pop
cmp
rorb
lea
stos
inc
dec
pop
lret
adc
mov
data16
insl
mov
nop
sbb
mov
jecxz
ljmp
sarb
dec
pop
stos
subb
sbb
test
jne
mov
sub
mov
shll
ds
mov
ficompl
les
dec
mov
xlat
cmp
or
push
leave
adc
push
jp
nop
pop
push
push
cmc
jge
add
xor
xlat
dec
in
incl
add
call
add
sbb
adc
cmp
and
xchg
push
cmp
cmp
lcall
pop
ret
xor
rorb
dec
cmpsl
ret
xchg
pusha
xchg
and
pop
movsl
add
fiadds
inc
inc
ja
test
int
imul
jns
xor
xor
mov
push
outsb
xchg
pop
insl
or
sbb
lret
hlt
or
movsb
scas
lods
pop
mov
xchg
icebp
dec
gs
cld
std
lock
scas
mov
sbb
xchg
xchg
mov
lock
sbb
adcl
fcmovb
mov
mov
mov
dec
out
and
push
dec
add
push
ds
push
mull
sub
mov
outsl
mov
mov
ljmp
mov
cmovb
or
inc
daa
and
jno
je
cmp
inc
inc
fcmovu
cwtl
jg
add
mov
add
das
rcll
test
add
dec
dec
fwait
dec
sbb
mov
and
sbb
shrl
lea
outsl
xlat
cmpl
inc
int
dec
jecxz
mov
pop
lret
add
fldcw
loopne
push
add
cs
add
xor
mov
jne
loop
and
in
pop
inc
clc
xor
test
cmp
rorb
psubsb
ja
sbb
inc
push
imul
ds
sub
adc
cmp
out
jo
and
mov
pop
outsl
add
sub
popf
jg
cmp
fcoml
or
test
cld
xor
js
psubq
cmc
push
hlt
pop
lods
mov
aam
xchg
mov
jl
mov
jbe
inc
int3
adc
xchg
jo
dec
and
outsl
js
nop
cmp
pop
inc
out
fs
xchg
sbb
addr16
stos
jb
stc
rcrb
out
test
mov
rcll
jl
jg
xorb
mov
adcb
inc
pushf
and
mov
scas
notb
push
cs
in
in
aaa
pusha
and
insl
xor
push
mov
cmp
cwtl
xchg
and
jbe
popa
inc
nop
clc
dec
mov
scas
sbb
push
pop
out
mov
xchg
xor
fidivrl
lcall
ja
and
repz
adc
insl
cmp
mov
mov
mov
inc
pop
add
loop
scas
sub
jns
and
inc
lret
pusha
jecxz
outsl
push
scas
and
pop
div
roll
mov
stos
and
pop
fmuls
xor
stos
popa
inc
lcall
fcmovu
in
xor
divb
pop
inc
xor
xchg
or
jl
fcoml
adc
push
push
stos
and
dec
mov
mov
data16
dec
pop
cli
loop
in
cmpsb
arpl
add
cmpl
lahf
out
jns
aam
adcb
out
sbb
lods
xchg
xlat
push
xorl
inc
sbb
cs
pop
add
or
or
in
mov
xchg
dec
test
cmpsb
pop
cwtl
sub
pop
adc
sub
cs
mov
cmp
xor
jg
pop
icebp
xchg
xchg
andb
fbstp
out
dec
insl
adc
es
test
jg
fcom
sti
cmp
jmp
rolb
xchg
test
adc
push
pop
pop
cmpsb
ret
rorb
loop
pop
in
inc
lahf
loopne
mov
push
mov
in
cmp
int
fsubr
movsl
mov
sahf
sbb
imul
aas
xchg
and
sub
mov
inc
mov
movsl
and
shlb
inc
xor
lret
jle
ffree
inc
mov
outsl
adc
out
add
dec
adc
xlat
sbb
mov
xchg
test
popa
adc
lock
aam
xchg
je
ror
xchg
cld
js
stc
and
orl
addr16
sbb
enter
mov
lock
push
xchg
dec
adc
add
push
dec
pop
xchg
js
mov
push
rolb
add
add
lcall
mov
mov
outsl
sbb
mov
out
das
pop
dec
dec
scas
fisubrl
out
sub
jmp
pop
stos
mov
in
rcrb
add
push
push
loopne
pushf
pushf
add
das
divl
loope
pushf
cld
xchg
mov
movl
sbb
inc
inc
ljmp
dec
jno
data16
imulb
dec
repz
sbb
insb
repz
sti
mov
pop
idivl
sarl
xchg
rcrl
adc
mov
popa
out
shl
stc
jmp
arpl
sbb
lcall
popa
or
nop
adc
mov
sahf
aas
pop
das
loop
fmull
dec
inc
xchg
inc
xchg
or
or
xchg
mov
icebp
xor
test
jmp
or
mov
and
movsb
dec
popa
scas
test
icebp
adc
leave
inc
push
push
scas
inc
jmp
push
and
inc
cwtl
fiadds
les
fs
jmp
add
xor
cli
in
leave
pusha
imul
stos
ljmp
pusha
xchg
xchg
pop
movsl
lods
pop
add
jl
xor
adc
xchg
or
push
call
xor
cmp
cmpsl
adc
aaa
and
sahf
pusha
fwait
push
out
xor
mov
mov
loop
mov
ja
shl
es
and
sub
mov
test
ja
push
repz
rclb
ja
movsb
dec
adc
icebp
lds
xlat
push
mov
std
cmp
pop
sub
dec
mov
stos
sbb
jb
pop
push
in
pop
push
sub
pop
outsl
pop
mov
pop
jmp
test
int3
cmp
stos
inc
cmpsb
in
iret
shlb
and
pop
add
pusha
jmp
shr
add
and
out
daa
xor
inc
sar
dec
mov
sub
daa
jecxz
cmpsl
push
or
insl
xlat
jae
fdivs
xor
loopne
out
sahf
int
loope
sub
leave
imul
pop
adc
repnz
jae
hlt
or
mov
dec
das
xor
pop
daa
movsl
push
inc
jbe
pop
mov
test
inc
or
push
mov
mov
mov
add
stc
test
push
or
stc
xor
and
cmpb
cmp
sahf
pop
push
ja
shrl
ret
pop
pusha
pop
hlt
and
sti
mov
lds
push
arpl
movsb
push
and
test
jo
test
add
adc
and
mov
pop
and
xlat
ljmp
sahf
je
or
js
pop
into
test
pop
add
dec
add
loopne
dec
or
je
jge
dec
pop
push
and
imul
pop
jg
add
inc
cmp
in
out
cs
jo
pop
mov
sahf
andb
sub
sbb
lahf
cmpsl
sub
aam
add
xchg
jl
cld
decl
in
jo
lea
ret
add
add
add
je
adc
jle
push
sub
sbb
addr16
mov
mov
out
or
push
mov
mov
dec
lea
imul
sbb
jbe
call
xchg
or
and
adc
or
pop
push
icebp
pop
test
mov
sub
sarl
jnp
insb
mov
shrl
mov
subl
hlt
out
rcll
pop
xchg
out
sahf
xchg
lea
sub
mov
ret
pop
push
mov
adc
or
cmp
xchg
js
cmpsb
push
xlat
pusha
aaa
pop
in
pop
hlt
std
xor
adc
clc
xor
push
stc
addr16
adc
jne
addr16
inc
sub
js
push
jae
and
pop
and
lods
xchg
pop
jmp
jbe
out
aad
mov
lcall
pop
adc
loop
and
mov
mov
xchg
jp
scas
xchg
les
sub
jecxz
adc
out
push
cmp
rol
mov
aas
fcomps
ss
out
cmp
in
test
jb
das
popa
push
xchg
movsb
add
or
negb
mov
fisttps
jmp
sbb
stos
mov
sbb
ret
adc
fimull
push
mov
out
out
out
mov
mov
insb
and
shlb
and
fisubrl
lods
mov
dec
sub
push
orb
mov
test
and
roll
or
lcall
gs
mov
push
pop
and
mov
nop
in
nop
mov
test
imul
jge
mov
js
pop
push
lds
mov
in
mov
loopne
inc
pop
or
into
lods
cmp
push
inc
jmp
mov
test
mov
jg
inc
dec
imul
mov
inc
out
dec
mov
imul
hlt
pop
and
js
pop
shll
cmp
outsb
or
lds
mov
adc
xor
dec
mov
insb
scas
lret
mov
aaa
je
clc
loopne
mov
xchg
and
dec
lea
pop
add
bound
sbbb
es
popa
lret
mov
sarb
outsb
cmpsl
dec
add
rorb
lret
or
cmpb
and
stos
jg
es
xchg
adc
add
aas
loop
adc
nop
inc
or
inc
xlat
notb
fisubs
mov
lods
push
enter
pusha
test
js
aam
inc
test
andb
push
js
cmc
fists
xor
push
sbb
cltd
push
jmp
mov
sbb
fcmovnu
rcr
dec
add
lcall
aam
lahf
lcall
bound
sub
pop
mov
mov
enter
outsb
jo
cwtl
test
loop
daa
adc
mov
mov
cmp
xchg
roll
cmp
int3
dec
sub
add
and
dec
repz
fldt
idivl
add
add
add
sub
xor
out
gs
or
aad
cmp
add
xor
ljmp
inc
mov
shll
jb
aam
jns
ret
dec
jecxz
sti
icebp
push
cltd
mov
mov
shrb
sbb
subb
mov
jmp
mov
bound
pop
mov
xchg
sarl
fcmovnb
adc
inc
ja
pop
xchg
dec
jg
enter
js
inc
dec
mov
out
in
das
jle
push
test
push
push
mov
or
lds
xor
addl
sub
sub
inc
xchg
sbb
pushf
xchg
mov
enter
fs
jg
add
push
push
addr16
daa
lret
add
mov
mov
rcrl
inc
gs
xchg
dec
ds
pop
enter
mov
push
addr16
jge
scas
jb
loopne
hlt
xchg
bound
sbb
or
mov
les
iret
in
dec
adc
lret
mov
add
xchg
jae
pop
call
ss
adc
iret
cltd
adc
adc
sub
mov
movsl
jnp
cmp
cli
cs
ja
aas
mov
out
lods
inc
aad
out
jmp
cmpsl
in
or
push
rorb
jmp
adc
and
adc
icebp
add
pop
jns
jne
xor
adc
sub
mov
ret
aaa
mov
mov
mov
les
sbb
popa
repz
cmp
mov
xor
sbb
mov
leave
push
stc
loope
push
out
not
push
mov
aas
cld
cmpsb
push
cmpsb
sub
pop
lcall
adc
mov
push
enter
ret
ficoml
aas
xor
pop
and
add
or
scas
lret
adcl
sub
lret
leave
pop
inc
sbb
inc
add
and
add
fildll
lds
mov
loopne
js
jb
ds
popf
inc
leave
mov
pop
jge
inc
testb
and
pop
in
fs
cmp
jl
aas
sub
loope
dec
jne
sub
cmp
sub
hlt
xchg
aad
popf
cmp
push
cmp
xchg
pop
mov
orb
js
ja
pusha
sbb
xchg
cmp
aas
cld
fiaddl
ljmp
ja
ret
inc
mov
and
jle
scas
xchg
fisubs
adc
outsl
adc
or
outsb
pop
aaa
outsl
pop
mov
jbe
dec
roll
outsl
sbb
xchg
push
data16
hlt
push
adc
rcrb
jo
jne
jbe
call
add
movsb
js
test
add
lcall
jnp
pop
pop
mov
mov
xor
leave
add
add
add
xchg
das
jns
jno
or
jle
push
sub
ret
hlt
push
lahf
or
and
arpl
jbe
and
jne
push
mov
push
aaa
into
jb
data16
mov
das
xchg
jae
pop
lahf
lods
bound
inc
sar
pop
and
sbb
in
jle
adc
in
mull
repz
sub
nop
out
outsb
pop
mov
rcrb
xor
push
dec
inc
addr16
cltd
imul
sbb
test
inc
dec
int3
xrelease
in
movsl
or
shll
adc
sahf
insl
mov
shll
sub
cmp
aam
fcmove
cltd
insb
sarl
inc
cli
flds
xchg
loope
sub
cmp
push
mov
jg
mov
pop
jb
fcomps
sub
gs
adc
sbb
sbb
in
es
mov
cwtl
fs
mov
cltd
xlat
jne
jns
xchg
push
push
popf
imul
push
add
sbb
push
hlt
cwtl
mov
mov
data16
cs
daa
rorb
out
cwtl
cli
and
fcoml
push
sbb
xchg
mov
push
push
jb
orl
pop
lds
push
icebp
xor
sub
xor
clc
xor
xor
sbb
lods
fisubrl
shll
xor
xor
cmpsw
mov
sti
dec
fiadds
int3
dec
pop
sbbl
mov
adc
adc
pop
mov
add
push
enter
cmpsb
and
dec
out
enter
xlat
pop
lods
add
leave
and
xchg
lcall
in
lds
gs
in
dec
jp
in
shrl
ja
loopne
push
mov
push
xor
fiadds
cmpsl
push
xchg
sahf
stos
les
mov
xchg
mov
push
push
adc
cltd
mov
xor
pusha
data16
mov
mov
shl
bound
sbb
xchg
sbb
std
cltd
pusha
xor
ret
xchg
cltd
dec
sahf
sbb
in
hlt
aad
mov
mov
mov
out
or
cwtl
mov
inc
mov
mov
push
clc
mov
pushf
arpl
mov
popa
or
mov
je
xchg
aaa
mov
notb
cwtl
push
or
bound
jg
jge
add
push
pusha
orl
hlt
popf
test
sbb
fwait
cmpsl
movb
je
cmp
xchg
arpl
cmp
cmp
gs
in
hlt
pop
ret
and
xchg
pop
cmpsl
mov
xor
sbb
lret
movsl
dec
adc
addl
push
dec
mov
mov
test
mov
dec
jl
inc
scas
movsl
jmp
je
subps
stc
ds
sbb
loop
fistl
out
pop
cltd
or
addb
rorb
fs
xchg
in
push
xlat
mov
pop
aaa
dec
idivl
int3
add
add
add
dec
rorb
out
jns
dec
mov
mov
and
roll
push
sbb
in
sbb
sub
lret
xchg
dec
push
enter
das
or
out
jecxz
aaa
sbb
push
push
mov
push
ljmp
xchg
cmp
or
inc
pop
add
loopne
mov
mov
pop
push
xor
sbb
ds
inc
shrl
mov
inc
dec
push
jae
aad
jmp
popa
xor
fcomps
imul
lods
and
repz
inc
cwtl
cmc
pushf
adc
loop
or
in
push
dec
jmp
shll
iret
fsubrs
lods
outsb
pop
fwait
adc
xor
addr16
jne
or
out
movsb
cmp
xor
add
dec
mov
ja
mov
cmc
xlat
or
sub
jp
mov
or
inc
pop
in
nop
dec
ret
lret
add
lods
sbb
inc
sti
mov
xchg
roll
insb
sub
sub
push
inc
out
sub
sub
repnz
inc
or
xchg
in
out
push
out
xor
sub
mov
inc
int
mov
or
andl
or
mov
scas
andb
lret
and
cli
daa
add
cli
repz
cmp
cli
ds
pop
cwtl
inc
jne
fmulp
pop
push
cmp
add
inc
sub
mov
dec
push
stos
imul
inc
sahf
sti
rorb
outsl
mull
dec
sbb
mov
xchg
pop
cmpsb
sbb
push
push
fsubrs
stos
scas
ljmp
test
lret
outsb
test
add
xor
jle
popa
fdivrs
je
mov
movsl
mov
test
jg
xor
test
xlat
cmpsl
mov
pushf
sub
inc
inc
daa
jmp
aam
xchg
push
adc
pop
push
mov
rclb
push
pusha
and
push
lahf
xchg
aaa
push
push
test
xor
lret
fiaddl
pop
ljmp
mov
push
add
adc
movsl
stc
hlt
push
cld
and
add
mov
mov
cmp
pop
cmp
scas
stc
arpl
cltd
push
in
and
loope
scas
stos
int3
sbb
xchg
sbb
lods
movsl
sub
out
test
fdivs
push
insl
daa
push
xchg
dec
idiv
pop
xchg
int
fistpl
das
test
out
scas
shll
xor
xchg
mov
pop
mov
xchg
aaa
cmpsb
lretw
adc
loop
mov
jge
xchg
inc
ljmp
sbb
xchg
pop
scas
imul
push
mov
adc
and
cmp
cmc
jg
pop
dec
add
nop
jmp
int
popa
xor
call
mov
dec
sbb
hlt
adc
add
add
add
stos
inc
and
sbb
inc
add
dec
ret
ficomps
push
hlt
or
add
aas
xchg
sub
cmc
jg
push
mov
movsl
mov
neg
pop
jl
mov
roll
jecxz
dec
and
dec
shrb
repnz
xchg
dec
or
icebp
cli
addr16
mov
sub
enter
cwtl
arpl
sub
xchg
push
pop
rclb
sbb
in
add
adc
or
or
xor
pop
push
lock
adc
les
fdivp
mul
cmpl
xchg
dec
mov
out
setle
jb
push
cmp
lds
popf
cmp
mov
inc
fstpl
in
ds
mov
push
or
mov
leave
add
mov
inc
mov
aad
mov
cmpsb
rol
in
cmp
jmp
push
push
adc
mov
rol
mov
addb
inc
xchg
jno
add
out
and
pop
sti
push
rol
ljmp
outsb
mov
les
lret
and
sbb
mov
dec
xor
xlat
imul
cld
mov
idivb
roll
in
or
or
lret
aad
std
dec
ja
sbb
push
add
lods
mov
xor
xor
jmp
push
inc
cmp
xor
xchg
mov
sbbb
aam
stc
xchg
adc
and
outsb
arpl
xchg
push
mov
inc
aas
and
mov
dec
cmp
gs
scas
fbstp
fsubl
pushl
sub
lahf
mov
sub
dec
cwtl
push
stc
ror
cmp
xchg
sahf
jns
push
or
outsb
loop
outsl
push
js
sub
shrl
negb
push
adc
clc
mov
sbb
pop
cmp
dec
int3
xor
xor
mov
fbld
mov
data16
loopne
mov
pop
adc
test
mov
xlat
rcrb
out
or
stos
push
adc
push
cwtl
icebp
icebp
loop
push
mov
and
aaa
addr16
add
loope
push
xor
mov
xchg
dec
mov
xlat
divb
loope
xchg
andb
jl
shlb
scas
add
sbb
stc
mov
enter
pop
cli
or
pop
push
pop
mov
sub
sahf
test
pop
enter
cmp
aam
cld
adc
fcomps
sbb
or
mov
leave
in
or
adc
mov
pop
push
mov
and
cmpsb
dec
lret
loope
lret
mov
test
std
xor
movsl
dec
adc
push
bound
cmp
or
adc
mov
jl
mov
jp
ljmp
mov
fsub
subl
mov
add
add
add
in
push
fs
aas
fwait
cwtl
lahf
inc
fs
mov
cmp
lret
mov
xchg
mov
lahf
xor
xchg
mov
mov
mov
fs
pop
sbb
shl
xchg
pop
into
inc
fdivrl
inc
fs
repz
mov
cli
repnz
rorb
adc
cmpsb
rcpps
mov
scas
inc
push
jne
mov
test
push
rcrl
mov
fs
fdivp
mov
addb
cmp
or
cmp
je
fcomps
inc
in
mov
das
outsl
mov
repz
adc
lods
into
mov
mov
and
mov
pushf
push
jmp
inc
cmpl
pop
rcrl
outsb
in
fs
xor
sbb
es
jg
lds
sbb
dec
xchg
fcomi
adc
or
inc
cmc
xchg
dec
push
xor
xor
xor
notl
aad
cmp
adc
jecxz
and
out
xor
imul
xchg
mov
lock
jns
add
ja
lds
sub
stos
out
call
ret
imulb
jb
inc
mov
jg
jno
pusha
scas
mov
out
push
inc
xor
jge
mov
push
adc
loope
or
dec
mov
cmc
adc
mov
roll
xor
ljmp
imul
lds
push
ss
icebp
xchg
hlt
adc
stos
sub
add
cmpsb
sbb
iret
jle
cltd
xor
fxch
ja
std
in
clc
in
dec
push
movsl
mov
or
sub
dec
jo
dec
add
in
movsl
jp
pop
and
les
clc
fwait
or
mov
pop
jbe
outsb
mov
and
leave
jns
xchg
mov
jg
cmpsl
jnp
shrl
xchg
fs
pop
pop
rcrl
daa
mov
add
dec
test
andl
in
std
lds
flds
xchg
xor
sarl
pop
xchg
call
or
aas
sub
mov
pop
loope
in
jg
int
add
ret
cmp
or
adc
clc
fistl
loopne
shrb
mov
push
sbb
add
out
es
loope
iret
fnstsw
ja
inc
subl
lahf
inc
outsb
leave
icebp
stos
mov
pop
rcrb
pop
sbb
mov
cmpl
leave
fwait
mov
and
addr16
cli
push
pop
or
mov
jmp
clc
adc
fisubrl
xor
addr16
mov
testl
loopne
or
repz
jbe
dec
adc
sbb
mov
ljmp
pop
scas
test
cmpsb
jns
dec
out
nop
js
enter
mov
xchg
jmp
out
adc
test
mov
pop
sbb
cli
inc
cli
outsb
ljmp
pop
add
add
add
push
xor
push
and
xchg
and
mov
mov
pop
mov
jmp
push
add
jmp
ja
lret
call
jp
xlat
js
add
enter
loop
xchg
inc
sub
incb
xorb
aaa
mulb
movsl
addb
adc
int
icebp
xchg
inc
add
mov
jecxz
pop
lcall
mov
xorb
pop
psubd
adc
sub
jle
inc
aas
out
push
inc
sahf
scas
loop
jg
xor
lcall
dec
sbb
mov
movsb
dec
or
lcall
pop
mov
call
lds
add
push
xlat
mov
xor
jb
les
jo
inc
push
add
xchg
cmp
adc
ret
add
pop
mov
mov
pop
sub
or
cmpsl
jno
sub
subl
mov
pusha
stc
imul
jb
jnp
pop
clc
mov
sub
loop
lahf
ret
xchg
cmp
test
jns
or
roll
pop
cmc
call
xchg
xor
mov
inc
push
mov
movsb
jo
lret
fs
xorb
adc
push
bound
movsl
pop
dec
inc
dec
cmp
arpl
popf
mov
push
lret
ret
cs
inc
andb
movhps
jns
lods
xchg
mov
leave
jnp
pushf
mov
xlat
out
push
shl
je
int3
cmpsb
sti
lods
inc
repnz
int3
xchg
in
popa
insb
or
ja
add
and
repnz
pop
insb
mov
dec
pop
mov
aam
ret
sbb
fwait
add
sbb
or
pop
pop
je
push
add
lret
ds
pop
loope
pop
pop
jl
sub
ret
lea
inc
sub
push
mov
dec
inc
jecxz
push
std
push
xor
sar
xchg
dec
mov
fsubl
dec
xor
jl
mov
pop
imul
jbe
jnp
mov
pop
and
test
loop
cs
jbe
addl
fsubp
jo
sub
or
sub
lds
xor
test
fsubl
mov
pop
adc
xor
xor
fldenv
shlb
dec
loop
pop
nop
fiadds
pop
lcall
shll
sbb
jno
cltd
mov
mov
jae
push
sbb
pusha
add
cmp
lds
lods
cwtl
pop
daa
push
or
xchg
imul
test
std
fcmovne
rorl
arpl
push
dec
test
lods
pop
imul
adc
icebp
xor
pop
add
sub
mov
fistpll
lahf
lahf
cltd
repz
mov
xlat
push
xlat
ja
out
ss
mov
test
add
add
add
aas
pop
mov
add
inc
clc
cwtl
loope
inc
lds
cs
loopne
loopne
loopne
fwait
cmp
or
icebp
adc
cmp
xchg
dec
data16
aam
inc
es
int3
das
lock
xor
dec
mov
int3
inc
fcmove
jmp
mov
aad
pop
jmp
lock
jo
insl
xlat
inc
dec
add
mov
add
jle
loope
xor
lods
fnstenv
or
dec
frstor
sbb
mov
push
xor
popa
jge
cmp
adc
inc
outsl
add
xor
into
xor
jg
bound
fnstcw
or
add
adc
add
cmp
lret
cmp
in
pop
imul
cld
dec
inc
fcoms
lahf
mov
mov
sbbb
mov
sbb
xlat
mov
int3
sbb
inc
loopne
push
jno
insb
ret
movsl
movsb
push
test
clc
xor
outsb
call
lock
xor
mov
aam
dec
mov
fs
jle
adc
sbb
lds
std
xchg
lcall
jl
shlb
add
stc
mov
jl
aad
pop
push
pop
adc
cmp
arpl
xor
mov
add
xor
sbb
iret
stos
daa
addr16
and
notl
cmp
pop
test
xlat
push
sub
mov
incl
add
rorb
xchg
outsl
push
adc
adc
cmpl
and
add
adc
lods
addr16
xchg
vpcomd
sbb
dec
decb
lahf
xor
xchg
inc
shl
es
jmp
test
push
or
in
jo
push
sbb
add
inc
cmc
jg
loope
out
fwait
and
sbb
movsb
rol
lods
repz
mov
movsb
inc
pop
pop
and
or
inc
jnp
imul
fucomi
xor
ja
xlat
lds
lock
enter
lahf
or
rcll
adc
jb
xor
stc
mov
add
das
adc
push
jecxz
scas
in
push
dec
dec
push
cmp
stc
mov
add
cli
inc
sub
imulb
outsb
push
dec
je
aam
xchg
xchg
push
and
insb
mov
mov
jecxz
pop
and
into
push
xlat
jns
adcl
add
in
add
add
push
mov
mov
ffreep
icebp
dec
insw
sahf
dec
add
repz
adc
pop
repnz
inc
dec
push
cmp
lea
call
jecxz
jne
add
ret
insb
cs
or
add
hlt
xor
and
inc
xor
test
aam
inc
aam
mov
sbb
jle
call
or
ficoms
orl
sti
xlat
mov
popa
fwait
dec
mov
adc
pushl
mov
xchg
stos
faddl
add
add
add
dec
jnp
ret
push
add
daa
ljmp
push
xchg
ror
push
clc
mov
imull
cmp
shll
mov
adc
les
loop
lahf
imul
add
fwait
stos
pop
je
stos
shll
jge
movb
pop
subl
xchg
jmp
sub
test
imul
movsl
mov
sti
pop
dec
pop
aam
add
loope
mov
mov
ret
push
orb
addr16
jno
lock
cmp
dec
frstor
sbb
and
mov
in
jb
mov
and
adc
ljmp
clc
mov
push
and
push
push
or
xlat
adc
adc
push
sub
lret
pop
mov
lret
insb
xor
or
jecxz
mov
mov
sub
insl
mov
mov
fstpt
cmp
dec
pushf
mov
aaa
mov
mov
cltd
fimull
or
jge
push
sub
das
subl
xor
mov
enter
ret
and
notl
cmpsb
xor
jo
sub
jnp
test
pop
imul
pusha
fsts
ret
scas
and
popf
xchg
scas
push
sub
rcll
vpcmpgtd
dec
scas
cmp
push
mov
lcall
mov
adc
push
push
movaps
mov
dec
icebp
xor
add
sub
incl
xor
idivb
incb
adc
pop
cwtl
add
cwtl
lods
sbb
fs
aam
sbbb
xor
inc
pushf
and
pop
js
js
fnstsw
add
pop
daa
inc
imul
adc
push
sub
push
mov
sbb
xchg
stos
lcall
rorl
mov
sti
out
lret
adc
mov
out
pusha
lods
das
mov
div
int
mov
jns
dec
fistpll
xchg
inc
push
jne
xor
fdivrl
add
cwtl
cs
pop
daa
jle
sbb
out
xor
xor
jo
xor
push
jge
scas
sub
mov
and
test
push
cld
mov
sub
inc
addr16
push
scas
xchg
arpl
push
std
andl
movsb
add
adcb
mov
outsb
loopne
movsl
pop
push
pop
mov
rolb
and
cli
scas
outsl
xchg
xchg
xor
add
xchg
cmp
xchg
es
xchg
in
inc
mov
in
cltd
sub
enter
sbbl
loope
int3
ja
or
jp
test
mov
out
movsb
jo
inc
or
pop
int3
jnp
pop
and
dec
mov
jp
mov
cmp
fistl
jnp
pop
addb
xchg
out
mov
loop
shll
test
add
iret
negb
out
lods
push
notl
mov
rcr
add
add
add
cli
decl
cmp
sub
cmpsl
inc
mov
sub
lods
scas
jecxz
rorl
pop
add
xchg
pusha
push
adc
movsl
push
cmp
ja
pop
xor
adc
xchg
jne
sbb
in
mov
icebp
xchg
shlb
jns
jbe
test
cmp
jno
xor
nop
popf
into
into
adc
enter
int
scas
or
dec
pop
pop
dec
pop
xchg
xchg
popa
loopne
data16
hlt
inc
mov
xchg
stos
xchg
ljmp
clc
scas
das
sbb
mov
out
cmp
ja
fwait
xor
out
and
push
je
notb
jle
pushf
scas
movsl
and
lods
jmp
ficomps
enter
and
and
mov
and
loope
cmc
or
xchg
xor
mov
xor
xor
lock
xchg
cmp
dec
add
out
xorb
pushf
pop
pop
cmp
hlt
punpcklwd
ss
jns
fsts
stos
jae
out
xor
movsb
push
mov
jp
push
pop
or
inc
stc
dec
pop
fisttpll
jle
stos
push
pop
adc
test
sub
ret
jo
add
or
inc
fwait
mov
sbb
jl
xor
ds
icebp
clts
jmp
jle
inc
addr16
mov
push
and
das
jnp
jl
adc
in
mov
aas
ja
int3
lods
cmp
mov
dec
mov
inc
fwait
gs
cmp
cmc
aas
cltd
push
pop
in
xlat
imul
mov
test
fs
add
clc
aaa
scas
clc
leave
test
popf
ret
sub
mov
inc
fwait
iret
dec
xor
sub
bound
xchg
shrb
mov
push
inc
adc
jge
push
push
dec
mov
mov
xchg
mov
movsl
cmpsb
lods
mov
sub
sbb
jp
pushf
sbb
cmp
aad
daa
fistpl
les
mov
addb
add
in
fisttps
test
dec
dec
loopne
xchg
cmpsl
sbb
lods
and
and
jle
mov
add
popf
lods
xchg
push
dec
inc
rcll
ss
call
and
jg
ss
jg
imul
add
lods
add
mov
lret
imul
add
adc
adc
pop
cli
out
sub
stc
pop
call
push
xor
dec
xor
push
call
push
adcb
lcall
aad
mov
xor
cmpsb
sbb
repz
cmp
xlat
call
outsb
push
sbb
sub
outsl
jl
sbb
jo
mov
cmp
int3
jns
jp
xchg
push
sbb
and
ret
int3
mov
cmp
movsl
std
cmpsl
fstpt
sbb
pop
fistps
add
push
push
jnp
fisubs
std
and
loop
add
add
add
mov
es
push
xchg
or
push
push
and
push
mov
and
jns
and
stos
sub
pushf
adc
adc
sub
jle
jo
add
xor
movsl
fmull
in
icebp
dec
pusha
loope
mov
out
std
sbb
leave
push
cmpsb
inc
subl
pop
and
xchg
int3
roll
xor
inc
arpl
sbb
cltd
inc
xlat
sbb
and
dec
leave
in
push
pop
lods
jge
push
xor
push
jae
dec
mov
push
jle
out
jbe
xchg
xchg
test
stos
lahf
mov
je
sub
inc
div
mov
movsl
sub
mov
mulb
inc
addr16
cwtl
or
ret
ja
mov
je
xchg
xlat
xchg
and
es
nop
mov
shlb
aad
jmp
bound
ss
insl
lods
cwtl
sub
stc
enter
cmpsb
cmp
call
mov
and
jne
ret
out
push
xchg
dec
out
jno
mov
xchg
inc
mov
inc
dec
add
pop
dec
add
pop
nop
cmpsl
cmpsl
dec
push
aad
xchg
or
ljmp
xor
and
mov
bound
fst
adc
leave
repz
jb
loop
sahf
test
cmp
out
pusha
popa
fisubl
sarb
xor
sub
ljmp
loopne
movl
ret
fnstenv
mov
pop
js
scas
jne
xor
addr16
insl
inc
cmpb
mov
stos
out
mov
or
push
mov
cli
xchg
test
repz
addps
mov
push
cs
cmp
sbb
xchg
adc
lock
jle
jbe
xchg
ret
sub
jge
sbb
adc
lods
call
nop
dec
xor
dec
xchg
out
and
jmp
inc
nop
add
mov
mov
mov
xor
sahf
and
imul
push
xchg
fadds
insl
sarb
sub
fdivrl
cld
xorb
xlat
or
dec
xor
dec
in
sub
rcrb
cmpsl
cmp
stos
cmpsl
xchg
xchg
popa
inc
add
lock
sub
nop
leave
sahf
or
mov
pop
arpl
in
sarb
mov
aam
imul
inc
sahf
add
adcl
xchg
das
push
ret
sub
mov
pop
aas
and
dec
adc
push
cmp
fsubrl
xor
insb
mov
adc
mov
outsl
pop
xor
jl
pop
jne
push
xchg
dec
or
cmp
push
loopne
test
xlat
cmp
fdivrl
xor
jne
xchg
out
mov
push
sbb
mov
and
pop
out
sbb
add
cltd
enter
mov
push
outsb
aam
cs
add
add
mov
adc
int3
and
cs
xor
stc
adc
and
mov
cmpsb
jle
push
sub
xor
jg
add
stos
cli
in
fstl
sbb
xor
inc
loopne
add
push
push
mov
push
pop
adc
pop
rcrl
and
lods
jle
mov
arpl
in
imull
jp
add
pop
cs
xorb
cld
mov
add
imul
xor
cwtl
hlt
mov
popf
imul
bound
inc
add
xchg
loopne
fnsave
xchg
xchg
cmp
lret
test
movsl
mov
les
pop
adc
push
lret
jg
xchg
push
outsb
imul
push
add
mov
aas
mov
imul
inc
dec
lds
lret
inc
pop
adc
jo
nop
jne
xchg
lds
mov
inc
push
stos
sarb
mov
and
call
push
loope
mov
shrl
pop
mov
lods
inc
mov
add
add
cld
ret
out
bound
pop
dec
mov
cmc
loop
ret
sub
pop
out
push
xor
aad
jns
out
xor
inc
inc
mov
push
jle
push
and
fsubrl
into
inc
cltd
push
push
add
push
push
std
jg
sub
jns
arpl
jge
sbb
gs
and
xchg
jb
arpl
mov
fs
jmp
cmc
leave
daa
ss
into
jp
cmp
testl
sarb
mov
roll
repz
out
sti
xlat
jne
jae
dec
jp
iret
fs
push
ss
bound
inc
sub
xor
dec
repnz
fisubrs
and
mov
nop
add
lret
pop
lods
ret
sbb
movb
or
sbb
sub
sub
add
shr
jmp
mov
fsubrs
push
mov
or
xor
fnsave
inc
inc
imull
mov
xlat
push
in
outsb
adc
sbbb
shl
cwtl
pop
push
pop
cmp
ss
ds
rcll
outsb
mov
lret
outsb
repnz
imul
aas
dec
pop
or
ss
repnz
test
jbe
cltd
mov
shlb
dec
cmp
dec
and
xchg
xlat
pop
add
in
out
xchg
out
or
out
and
dec
movsl
mov
inc
repz
out
xchg
out
xor
incl
inc
jg
mov
jbe
ss
test
psubq
movsl
filds
xchg
and
stos
test
mov
xor
mov
or
xor
and
mov
add
sbb
jge
int3
outsb
xchg
test
jmp
add
push
je,pt
adcb
decl
add
adc
les
jae
sub
cld
xchg
and
das
lahf
call
mov
xor
and
data16
ret
subl
sti
pop
push
pop
xor
add
dec
fbstp
xor
push
addr16
xchg
test
pop
sbb
iret
scas
sub
inc
and
imul
xchg
xchg
push
mov
lret
cmp
pop
push
lret
sarb
sbb
add
dec
das
and
leave
mov
mov
sub
lds
fcompl
and
sub
cmc
lahf
pop
scas
xchg
int
xor
test
cmp
xchg
mov
insb
mov
push
push
inc
das
mov
pusha
xchg
mov
sbb
pop
inc
dec
js
mov
dec
icebp
and
adc
mov
mov
test
rcl
or
pop
mov
js
rolb
dec
xchg
mov
jp
sbb
inc
jmp
test
inc
js
adc
and
and
lea
or
test
pop
mov
mov
cltd
inc
xchg
repz
xchg
jb
subl
xchg
pop
add
out
rolb
mov
xor
mov
push
insb
stc
xor
in
cltd
repz
pushf
fistl
sti
shll
clc
mov
xor
lahf
cli
or
and
call
inc
loop
xlat
cld
arpl
fcomps
push
and
sahf
xchg
out
lds
insl
orl
sub
xor
lods
push
adc
stos
fldl
je
cmp
sbbb
pop
pop
stos
lock
cltd
xor
mov
lds
std
jo
movsl
xchg
shl
add
cmp
dec
mov
pop
iret
and
add
cld
adc
mov
xchg
popf
pop
stc
jl
pop
jp
adc
sahf
arpl
or
jae
pop
mov
add
or
fcoms
push
icebp
daa
aad
movl
int3
sub
testb
adc
cmc
inc
outsl
testl
sub
sbb
jbe
sbb
movsb
cld
add
ds
mov
lods
and
outsb
mov
mov
dec
mov
aas
jbe
push
push
rcll
out
out
cmpsb
mov
sbb
mov
and
jbe
inc
cli
test
js
pop
xor
js
aas
dec
push
icebp
mov
out
aas
ret
fistpl
in
sub
mov
push
pushf
hlt
cmp
push
jbe
pop
cmp
xchg
cld
xlat
stos
inc
mov
mov
shlb
subb
std
dec
mov
scas
mov
and
adc
enter
shl
fsts
cmp
add
roll
pop
sub
scas
mov
add
add
push
mov
lods
icebp
xchg
mov
sbb
ja
sbb
ja
out
stos
xchg
mov
pop
xor
mov
jne
sbb
sbb
sub
cli
xlat
negb
movsb
mov
lods
xor
orb
ret
jg
mov
push
lock
dec
into
cmpsl
xor
repnz
and
stos
loope
fadd
idivb
stos
clc
push
popf
pop
ret
insl
pop
mov
xchg
cld
sbb
test
or
pop
aam
mov
mov
jne
sub
sub
cltd
adc
dec
shll
ja
dec
fwait
inc
add
xor
mov
movsb
mov
ret
roll
repz
imul
dec
lods
dec
jmp
lcall
fs
inc
enter
dec
cmpl
jmp
mov
pop
jle
lea
sbb
movsl
inc
push
data16
movsb
jo
cld
shrb
lahf
andl
mov
add
ds
stos
mov
popl
push
test
push
sbb
xor
dec
sbb
xor
sbb
lcall
sub
mov
lret
or
test
jae
push
mov
jo
iret
out
xchg
aaa
xchg
subb
sbb
lea
cmp
loopne
pop
lea
xchg
xchg
dec
inc
cwtl
jbe
cs
jge
cmp
dec
push
dec
adcl
mov
push
dec
xchg
into
gs
fiaddl
clc
mov
cld
mov
push
or
pop
sbb
push
andl
pop
scas
js
pushf
or
jne
pop
out
mov
sbbl
push
fsub
je
out
adc
jno
xchg
mov
enter
cmp
inc
notb
xor
sub
add
inc
mov
jge
and
negb
cmpsb
sarl
mov
mov
lcall
push
inc
and
pushf
fbstp
repz
mov
pop
mov
ljmp
or
int
sahf
addb
and
mov
mov
xorb
loop
dec
stos
xor
ror
jb
push
subb
jns
add
rorl
ret
and
subb
mov
cs
fbld
repnz
mov
leave
push
adcb
fistpll
mov
mov
push
in
insb
dec
inc
sbb
jecxz
adc
movsl
js
cmpsl
or
jo
pop
pop
push
into
test
jae
pop
sub
cmp
sbb
add
rol
jo
fwait
xchg
adc
pushf
filds
and
lods
andb
arpl
ret
pop
test
test
mov
inc
mov
xchg
mov
loope
xchg
pusha
cmpsb
mov
add
sbb
pushf
cli
mov
scas
aad
sbb
add
add
add
inc
icebp
data16
push
sub
dec
in
cmpsb
aaa
ret
mov
cmp
mov
les
outsl
jecxz
adc
jmp
xor
sbb
sarb
outsb
mov
jns
into
fildll
pop
out
pop
xchg
xor
mov
xor
fistl
sbb
loop
aaa
cmpsb
pop
jg
adc
sbb
fstl
loopne
adc
jo
xor
outsl
inc
jo
pop
mov
jno
mov
mov
loopne
fwait
test
sub
xchg
dec
adcl
cmp
lods
mov
dec
dec
and
dec
scas
mov
mov
cmpsl
rolb
jmp
scas
sbb
fdivr
std
in
nop
sbb
mov
pop
test
push
mov
aas
adc
lret
imul
iret
xchg
mov
and
rcrb
dec
cmp
cmp
in
sbb
push
sbb
xlat
add
pop
mov
sub
xchg
pop
xchg
inc
test
pushf
xchg
xchg
push
jp
sarb
and
faddl
pushf
lock
subl
popa
inc
ljmp
fucomip
ja
aad
orl
les
mov
rcr
mov
xchg
jecxz
dec
bound
call
sti
add
xchg
dec
mov
in
inc
cmp
inc
leave
xor
mov
jb
pop
cli
jnp
jg
lods
xor
andb
xor
ljmp
mov
mov
adc
popa
sbb
adc
mov
jp
stc
icebp
xchg
imul
sub
sub
shlb
insb
cmc
mov
test
xlat
fsubrp
or
xchg
sub
lcall
add
call
ret
inc
push
and
mov
xchg
addr16
lret
dec
jl
lds
out
sarb
mov
mov
test
filds
test
mov
dec
mov
push
or
dec
mov
jae
popa
dec
dec
fistpll
lret
jb
adc
xchg
scas
stos
and
dec
addr16
sbb
cmp
mov
sub
mov
push
shl
outsl
rolb
add
jae
dec
pop
add
vpackssdw
dec
test
aad
jo
or
sub
int3
and
jb
pop
in
dec
lret
sbb
sahf
flds
mov
sub
mov
mov
pop
xchg
gs
mov
lret
inc
inc
aaa
lahf
cwtl
fs
stc
mov
dec
fldcw
nop
cmp
jmp
je
sbb
popl
mov
lds
out
lcall
outsl
shrb
les
shll
jg
dec
add
or
sahf
mov
and
pop
insb
dec
push
xor
dec
xor
out
and
inc
adc
add
fisubl
mov
in
push
mov
add
add
add
sub
popf
dec
xchg
outsb
mov
test
add
cmpsl
xor
xlat
rclb
sbb
jmp
lds
cs
jo
out
push
insl
and
pushf
nop
cmp
ret
xchg
inc
adc
pushf
or
cmp
xchg
jnp
outsl
imul
pop
les
inc
mov
xchg
repz
sbb
imul
insl
pop
movsl
inc
jp
pop
sub
xchg
jo
lcall
fiadds
lret
and
fwait
push
cltd
lods
pop
inc
xchg
pop
inc
negl
test
cli
stos
mov
orb
jecxz
mov
fwait
mov
loope
dec
insb
jl
mov
mov
xchg
mov
pop
incl
or
push
mov
movsl
rolb
xor
add
lret
mov
sbb
add
mov
test
scas
cmp
add
pop
inc
outsb
popa
mov
rcrl
sbb
fisubs
jb
pop
push
jns
sbb
pusha
lods
movsl
insb
scas
jno
dec
int
cmpsl
xchg
push
jecxz
xchg
adc
jmp
adc
mov
inc
inc
jnp
mov
jbe
insb
and
mov
xor
mov
sub
mov
aad
out
xor
inc
mov
ret
mov
jns
lret
mov
push
dec
pop
mov
jne
dec
data16
mov
lds
popa
scas
pop
scas
push
push
mov
mov
stos
aad
call
fildl
out
call
or
mov
sub
out
mov
push
add
movsl
push
xchg
aaa
jb
jo
test
dec
mov
movsl
int
inc
rorl
xchg
push
sub
cmpsl
add
xlat
adc
push
jle
xchg
cs
adc
and
dec
mov
xor
stos
push
cmp
add
inc
ljmp
lods
cmp
xchg
xchg
cwtl
push
sub
lcall
xchg
mov
fucom
aad
adc
inc
lods
in
negl
and
es
sbb
fs
nop
cmpsb
add
or
fiaddl
pop
mov
cmp
push
lea
sub
xor
mov
add
mov
std
mov
mov
xor
movsl
mov
or
ljmp
jbe
in
cmpl
rcr
jns
in
clc
or
xor
adc
sbb
cmc
leave
push
imul
xchg
add
icebp
outsb
cld
outsb
cmpsb
stos
and
je
add
or
pop
xchg
lcall
sub
ficoms
pushf
rol
and
mov
cmp
ret
pop
aad
repnz
ret
push
lea
mov
adc
lret
fsts
inc
xorl
pop
jno
hlt
fnsave
add
nop
stos
es
aas
iret
cmc
sti
pushf
loop,pt
mov
cmc
add
add
add
fucomip
inc
adc
push
mov
insb
pop
clts
sarb
dec
jno
or
insb
ds
push
mov
sub
xchg
or
jg
sbb
pop
jle
rcrb
pop
push
xor
sbb
sub
fisttpl
outsb
mov
or
jne
mov
data16
leave
inc
mov
cmp
jns
jle
or
outsl
negl
lods
stos
loope
fmulp
out
pushf
jg
add
xchg
mov
ja
pop
jmp
fwait
lcall
lock
pop
sahf
lret
inc
cmpsb
mov
aas
pop
cmc
popf
jle
pop
ja
pop
mov
mov
icebp
insl
xchg
negb
scas
popa
mov
jne
push
push
sbb
shlb
mov
cwtl
mov
adcb
addb
ljmp
ja
mov
mov
lea
aad
and
push
or
xchg
xor
mov
adc
xchg
imul
push
jno
fadds
pop
adc
add
mov
imulb
push
das
mov
or
ds
mov
jl
mov
xchg
xor
outsb
es
dec
sbb
mov
rclb
cmp
mov
dec
jae
dec
adc
mov
or
xor
xlat
lds
or
gs
insb
rclb
rorb
les
adc
imul
cmp
xor
push
rcrl
mov
mov
lahf
or
cmc
arpl
sub
inc
int
rclb
add
push
mov
in
test
mov
xchg
aam
ror
sub
mov
pushf
addr16
sub
loopne
push
or
lahf
test
adc
sbb
cmc
repnz
aam
idivl
adc
out
aas
mov
mov
pop
sbb
and
arpl
xchg
outsb
sub
stos
outsl
ret
and
js
xor
and
ret
dec
mov
lds
dec
add
subb
xor
dec
lds
ret
cmp
jbe
out
dec
test
sbb
aam
mov
xchg
xchg
xor
outsl
xchg
fcom
cmp
push
xor
dec
in
out
cwtl
pop
test
cli
sub
cmp
stos
dec
and
cli
inc
jae
mov
jmp
and
push
push
adc
pop
out
rorl
dec
jle
xor
fisttpll
jb
sub
in
pop
imul
fisttpl
popf
test
lock
adc
dec
or
imul
jp
out
mov
adc
mov
mov
xchg
jne
sbb
pop
fidivs
mov
dec
je
cwtl
insl
xchg
xor
sbb
adc
in
fdiv
lods
jecxz
sub
and
rorb
lret
add
repz
sbb
sti
add
std
cmp
stc
int
xor
pushf
sahf
test
add
add
add
add
ljmp
inc
push
fisubl
imul
insb
push
push
out
out
aad
cmc
push
push
adc
pop
cwtl
loopne
arpl
and
add
mov
xlat
test
sti
inc
sbb
in
fisttpl
sbb
pop
clc
nop
sbb
push
inc
sub
jne
fwait
mov
dec
into
jo
mov
sbb
dec
loopne
aaa
jmp
xchg
testl
sbb
push
add
repnz
into
lods
xchg
sub
push
and
inc
fs
push
xchg
xchg
xor
pop
imul
in
jns
ss
mov
or
loopne
pop
dec
mov
jmp
pop
out
xorb
inc
and
add
mov
lea
cmp
fstpl
push
sbb
mov
jecxz
xchg
data16
stc
lods
lahf
sti
sbb
jge
push
pop
stos
add
push
inc
and
pop
scas
stos
gs
ret
inc
pop
es
enter
subl
adc
push
or
das
int
pop
test
insl
iret
ss
mov
adc
jbe
adc
leave
xor
jo
movsl
add
fists
jg
movl
daa
pop
jle
adc
adc
lods
orb
call
orb
leave
popa
push
fisttps
out
adc
inc
inc
insl
adc
jge
push
xchg
lods
jbe
fwait
rcl
sub
xchg
sbb
mov
xor
scas
daa
sbb
push
pop
inc
das
and
cltd
jne
stos
cmp
insl
jecxz
adc
rolb
leave
sub
mov
or
mov
add
add
js
rcrb
add
pusha
ret
mov
cmp
mov
xor
cmp
scas
fisubl
adc
xor
into
stos
call
mov
pushw
mov
lds
sub
mov
aad
das
iret
fmuls
mov
in
ret
out
jge
cmpsl
mov
inc
ficoml
sub
imul
lock
lahf
adc
push
into
andl
jbe
outsl
mov
inc
out
xchg
in
daa
jp
mov
es
pop
in
add
je
cmp
mov
jge
movsb
jnp
add
mov
and
push
lock
das
aam
cmp
sub
dec
or
xchg
int3
aad
push
adc
icebp
mov
stos
push
std
aaa
mov
in
pusha
xor
fnstenv
sub
and
jno
aas
pusha
xor
sub
out
lods
shrb
cmpsb
iret
jp
push
xchg
outsb
mov
mov
mov
test
gs
xchg
je
repnz
push
test
subl
pop
or
faddp
dec
clc
outsl
inc
mov
add
cmp
mov
imul
add
add
cmp
jae
xorl
stos
or
