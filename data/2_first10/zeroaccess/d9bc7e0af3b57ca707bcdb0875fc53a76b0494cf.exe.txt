push
mov
sub
add
movl
mov
or
mov
movl
inc
mov
sub
movl
movl
movl
and
mov
and
xor
sub
mov
div
xor
add
sub
xor
orl
push
add
mov
orl
and
div
adc
mov
cmpl
jg
mov
xor
jmp
push
push
pushl
push
pushl
push
pushl
call
movl
movl
mov
mov
imul
notl
lea
mov
mov
cmp
movl
je
cmpl
jb
jmp
push
push
push
call
movl
movl
movl
mov
mov
xor
and
cmpl
jl
andl
jmp
push
push
push
call
mov
xor
mov
movl
movl
mov
mov
sbb
mov
orl
jmp
xchg
test
xchg
mov
push
imul
clc
aas
jecxz
cmc
cmc
cmc
push
push
cmc
mov
dec
mov
xchg
or
xor
cmpl
mov
push
jge
out
inc
aad
push
sbb
cs
loopne
inc
shl
insl
jmp
scas
pop
ss
mov
aaa
enter
subl
push
inc
push
sub
fwait
xor
addr16
loopne
pusha
repz
mov
mov
lahf
push
mov
dec
inc
dec
stc
and
mov
push
movsl
repz
jo
aas
sub
int3
shrb
sub
xchg
lods
idivl
xchg
sub
call
test
adc
pop
adc
mov
data16
xor
test
clc
dec
fadd
lret
push
inc
or
int
and
xor
ret
jbe
xchg
enter
inc
dec
jecxz
sub
and
add
andl
xchg
aaa
lahf
cwtl
inc
sub
pop
push
nop
xchg
aad
mov
imul
push
subl
jl
in
xchg
mov
inc
push
dec
mov
push
popf
sbb
push
call
xor
ja
stos
push
shrl
fdivr
lock
test
fdivl
mov
xchg
xchg
repz
out
inc
pop
xlat
flds
add
shlb
int3
push
dec
ffree
cwtl
mov
in
mov
mov
sub
jb
sbb
in
stos
pop
rdpmc
cmp
lock
inc
push
out
outsl
repnz
mov
lds
mov
jae
aas
outsl
out
mov
cmp
popf
add
xor
stc
xor
out
sub
pop
adc
xchg
jo
inc
in
add
outsl
cmpsb
add
mov
and
imul
jecxz
adc
mov
push
push
lret
or
imul
sub
loope
std
call
pop
mov
and
scas
pop
sbb
pop
das
inc
and
and
lock
loopne
mov
in
test
inc
fcompp
mov
incl
clc
push
xchg
lret
jno
push
xchg
push
dec
cld
pop
xor
adc
jle
bound
out
stos
icebp
cs
out
sahf
aad
cmpsl
loopne
push
push
xor
pop
cmc
lea
dec
or
pop
adc
dec
mov
stos
js
mov
push
mov
push
or
push
jg
mov
push
add
or
pushf
jnp
xchg
push
fidivrl
cmp
gs
out
mov
jnp
imul
sub
das
or
inc
push
inc
dec
push
mov
push
clc
rorl
push
les
pop
mov
add
insl
push
mov
adc
enter
lods
ss
es
push
fcoms
pop
mov
das
pop
inc
pop
push
and
cli
les
mov
les
dec
dec
insb
or
mov
jge
clc
adc
repnz
fisttpl
sub
std
xchg
pusha
pop
in
xor
pop
jnp
pop
jp
mov
add
jg
insb
cmp
leave
movsb
jne
or
mov
into
mov
maskmovq
mov
fadd
cmp
aam
shlb
and
pop
hlt
xbegin
sbb
vmovdqa
stos
pop
aam
sub
sbb
inc
pop
jno
flds
dec
jb
stos
dec
add
or
pop
or
mov
mov
cmp
outsl
fcmovnb
or
or
rorl
dec
push
xchg
rol
inc
imul
pop
push
clc
xor
mov
mov
cmp
add
test
and
dec
jae,pn
pmaddwd
sub
pushf
mov
sbb
cmp
mov
das
xlat
rorl
stc
je
js
out
jecxz
mov
xor
cltd
and
inc
sbb
fiaddl
lcall
xchg
scas
mov
divl
arpl
pop
adc
shrl
cmp
in
dec
int
aad
in
add
test
stos
xor
cmpsb
xor
dec
push
push
subl
leave
in
or
pop
in
test
lret
lock
movsb
mov
xor
dec
xchg
mov
fcmovnb
xor
sbb
jno
xor
xor
push
aam
rcr
adc
fwait
mov
jp
fs
gs
jnp
xlat
sahf
roll
ja
xor
in
sub
mov
or
mov
xchg
mov
mov
inc
outsb
gs
pop
les
sbb
sbb
mov
dec
cmp
adc
nop
and
jg
cmp
enter
mov
jmp
jp
jbe
and
mov
mov
xchg
push
and
adcb
in
pop
popa
pop
push
hlt
pop
inc
or
shll
add
jb
dec
fistl
jecxz
mov
pop
and
insb
testb
mov
cmc
out
pop
jo
cwtl
xchg
pusha
jae
push
gs
insl
ss
mov
shlb
int
add
scas
loop
addl
xchg
sti
and
je
sahf
es
pop
rolb
xor
cmp
out
adc
imul
pop
movsb
ds
xchg
xor
add
push
popf
and
xor
sub
xchg
xchg
push
sub
jg
inc
adc
rolb
add
daa
inc
add
icebp
mov
movl
cmp
je
sub
movl
or
movl
and
movl
cmpl
jl
jmp
push
push
call
movl
movl
push
movl
mov
mov
push
push
sbbl
push
call
mov
mov
orl
and
add
mov
sbbl
and
adc
jmp
add
push
jae
inc
add
shl
push
push
cmc
push
push
cmc
jno
cmp
out
nop
leave
inc
test
lcall
cmp
mov
loope
test
mov
mov
or
hlt
mov
push
into
insb
lods
jecxz
test
add
ja
pop
pop
lea
movsb
jmp
out
das
mov
adc
or
pusha
adc
roll
xor
xchg
xchg
adc
xchg
push
mov
add
pushf
icebp
loope
adc
dec
out
fnstenv
incl
xchg
mov
xor
out
pop
test
cmp
cwtl
lret
icebp
fstl
ljmp
aam
ficomps
ja
push
clc
cli
cmpsl
inc
lock
movsb
mov
jns
cld
data16
std
movsb
jmp
aad
testb
fwait
jo
out
xor
pop
jbe
fwait
cwtl
push
lods
cmp
out
or
fisttpl
push
add
dec
cmp
or
dec
sbb
sub
shrl
pop
stos
or
fidivs
sti
imul
in
mov
ss
ficompl
mov
or
push
push
out
mov
cmpsl
xor
iret
adc
faddp
mov
stos
push
fldenv
shl
cmp
lock
push
cltd
jmp
mov
roll
arpl
adc
inc
fimuls
jecxz
and
inc
push
mov
data16
ds
xor
mov
ds
pop
xor
push
cmpsb
push
sub
out
fisubrs
repz
dec
xlat
lret
push
adc
lcall
xchg
add
jl
mov
aam
xorl
xor
adc
fs
ds
cmpl
push
ss
les
test
mov
dec
fidivl
mov
mov
lahf
xchg
gs
int3
push
jge
repnz
pop
or
les
pop
cmp
xchg
and
int
fsts
arpl
mov
fdivrs
and
pop
lock
cld
xor
repnz
aas
test
fcompl
fs
int
push
ja
xor
mov
int
mov
mov
pop
ficoml
mov
nop
out
adc
je
dec
idivl
push
mov
aas
ret
mov
into
call
in
push
sub
jnp
push
cltd
dec
sbbl
sub
mov
outsl
mov
mov
ss
sbb
std
mov
xchg
pop
mov
inc
jmp
jmp
jno
jmp
lock
add
cmp
mov
push
leave
lcall
jmp
push
les
sbb
xor
pop
mov
jl
andl
jle
std
jne
addl
add
rorl
fildl
stos
mov
or
pop
paddsw
shrb
dec
stc
inc
add
icebp
stc
dec
mov
mov
xchg
mov
stos
movsb
je
aaa
in
div
mov
dec
jmp
cmp
xchg
movsb
pop
dec
mov
lahf
xchg
cmc
mov
sbb
movsl
and
adc
cmc
jmp
xor
mov
clc
fwait
inc
or
pop
test
das
pop
rcll
adc
inc
std
in
xchg
cmp
push
aas
fucomp
insl
mov
xchg
sti
mov
push
into
xchg
lods
push
push
out
sbb
inc
add
sbb
xlat
mov
bound
rol
stos
jae
fadd
call
mov
pop
fidivrs
and
mov
icebp
loop
dec
movsb
sti
aam
sbb
shlb
mull
out
repz
gs
bswap
pop
push
pushf
push
mov
je
adc
rolb
mov
subb
int
add
jo
mov
push
std
inc
vpunpcklwd
jb
cmpsl
stos
xchg
push
ljmp
adc
xchg
popa
sub
adcb
mov
mov
pop
or
lret
pop
cmp
and
xchg
pop
fcom
lods
dec
test
adc
inc
sbb
jb
ss
data16
test
icebp
mov
xchg
or
push
push
mov
in
adc
daa
lret
stc
jo
sbb
hlt
fildl
lods
or
addl
push
stos
mov
test
int3
sub
sub
std
pop
lahf
push
in
cli
sbb
in
push
psrlq
cmc
and
push
aad
sub
push
scas
lock
adc
fildll
int
out
lods
pop
pop
rcl
sarb
out
hlt
stc
push
hlt
dec
fisubrl
repz
icebp
insb
xor
scas
push
clc
dec
cwtl
fistpl
loope
adcl
ja
mov
jbe
andl
mov
push
pop
mov
xor
js
cmp
insb
aas
xor
ljmp
jle
fwait
inc
ja
and
xchg
mov
sub
stos
lea
cmpsl
jnp
xor
cld
pop
xor
cmpsb
cwtl
dec
es
jb
clc
test
aaa
inc
out
inc
mov
js
sbb
or
movsl
jnp
mov
lea
test
mov
dec
mov
rolb
int3
mov
shrl
xchg
das
or
idivb
daa
aaa
lods
xchg
jmp
inc
xchg
jnp
jne
dec
adc
bound
push
adc
in
xchg
sbb
mov
add
cld
in
push
leave
stos
mov
jmp
or
out
cld
imul
xchg
sbb
and
aad
jne
and
xorl
and
jmp
adc
xor
push
lods
mov
sbb
push
push
cmc
mov
sbb
loope
adc
add
es
adc
repz
js
out
loope
cmpsl
mov
push
cli
pop
xchg
xchg
mov
push
rcll
cmovg
push
mov
aad
adc
dec
sbb
cwtl
cmc
push
shlb
push
and
mov
add
cwtl
push
dec
jae
mov
adc
fs
icebp
mov
push
es
jne
loope
out
xchg
test
inc
outsl
je
roll
cwtl
add
jl
mov
xchg
lods
daa
cmpsl
lcall
loop
leave
dec
mov
add
jecxz
jae
mov
shl
fisubrl
int
jo
lcall
mov
xchg
jae
bound
push
push
outsl
xor
sbb
fwait
sbb
ror
and
mov
rorb
jno
sbb
ljmp
add
int3
test
fwait
rorl
insl
leave
add
cmpsb
mov
xchg
pop
cmpb
jno
or
or
outsl
mov
pop
and
mov
lock
sbb
cmp
loop
dec
and
stc
fcoms
fadds
sbb
aas
int
enter
fsubrl
js
push
js
data16
and
sti
stc
mov
inc
out
test
and
lock
rcrl
sbb
cwtl
jle
push
xchg
cs
gs
or
shrl
fsts
sbb
sbb
sbb
jnp
in
stc
test
loope
push
adc
xchg
cs
mov
mov
cwtl
cmp
mov
popf
jnp
cmp
inc
imul
pop
cmp
jbe
xchg
cltd
sbb
shll
push
dec
pop
jecxz
xor
lret
loopne
insl
pop
daa
add
in
lcall
or
cld
mov
dec
lock
fcompl
push
or
pop
push
sbb
adc
ds
shl
xchg
sub
adc
push
xor
inc
add
mov
pop
aas
ljmp
push
pop
bound
push
mov
fsubr
insl
bound
xor
pop
dec
cmp
dec
out
outsl
jecxz
testl
jnp
dec
cmc
xchg
pop
mov
sub
out
mov
push
pop
loope
ljmp
adc
adc
out
lods
cmpsl
sbb
or
fsubl
mov
call
loopne
xchg
stc
test
pusha
mov
incl
jge
std
sbb
in
xor
inc
jle
sub
ja
cltd
sbb
test
loopne
mov
shl
push
fdivrl
adc
dec
push
adc
in
testb
add
in
mov
mov
sbb
sbb
add
mov
pop
lods
pop
xor
or
scas
clc
or
insl
mov
rcrb
clc
out
imull
push
fs
rcrb
shlb
not
or
push
subl
push
mov
rclb
in
subb
lahf
cs
xor
xchg
adc
sub
shll
test
stc
arpl
push
sahf
push
ljmp
or
int3
cmpsl
shrb
movsl
les
mov
int
jno
inc
mov
daa
lret
and
mov
sar
jo
cmp
loopne
mov
test
sbb
jnp
cmpsb
insl
jl
loopne
xor
dec
adc
sub
repz
je
icebp
dec
mov
and
sahf
pop
mov
or
dec
idivb
mov
lret
adc
xchg
shr
jae
fwait
scas
pushf
add
and
mov
loop
fs
scas
lods
data16
repz
shlb
mov
insb
movb
push
out
subl
cmpsb
aas
adc
jle
inc
push
arpl
mov
push
jb
test
mov
xor
cmp
pop
dec
rol
stc
xlat
adc
sub
pop
and
dec
push
mov
xchg
mov
ficomps
xor
nop
jecxz
aaa
lret
xor
andl
inc
pop
jge
jg
dec
pop
cwtl
cmp
inc
fisttpll
fadd
mov
lds
fidivl
loopne
and
push
aam
pop
in
pop
jmp
cmpl
fisubs
sub
push
stos
ret
xchg
jbe
aaa
mov
jg
sahf
cwtl
leave
pop
jae
movl
dec
lcall
ljmp
jg
xchg
dec
loopne
jo
inc
lcall
in
sahf
movsb
and
jp
jg
fwait
scas
add
in
mov
mov
push
lock
and
dec
sbb
ret
repnz
mov
jecxz
data16
rdtsc
mov
sbb
shlb
jecxz
and
insl
popa
jp
mov
push
xlat
sahf
inc
sbb
cltd
fdivrp
orb
fisubrs
push
js
jnp
or
mov
sub
jmp
leave
cmp
mov
fimuls
sub
mov
pop
push
je
or
stos
xacquire
js
xor
mov
mov
std
xor
sbb
icebp
mov
jne
test
push
dec
cwtl
pushf
push
shll
ficompl
dec
mov
movl
mov
mov
mov
movl
cmp
jne
mov
mov
mov
mov
shrd
shl
mov
mov
shr
mov
xor
xor
or
jmp
add
pop
call
xchg
jecxz
es
das
push
fdiv
cmc
push
push
cmc
std
mov
and
imul
xchg
stos
stos
cltd
fmull
sbb
add
inc
sub
inc
push
rcl
or
dec
out
sbb
adc
shr
inc
or
test
or
xchg
xchg
inc
jle
mov
sbb
in
ret
imul
xchg
xor
lret
ss
jecxz
add
pop
js
and
gs
call
int3
popa
cmpsl
fiaddl
mov
int
sbb
or
in
popa
inc
and
sbb
stos
das
outsb
pop
push
pushf
insl
pop
in
out
mov
adc
cmp
shlb
ljmp
jl
and
inc
xchg
pop
std
cmp
xor
pop
inc
loopne
bound
dec
sbb
or
stos
push
xchg
scas
scas
js
aas
dec
add
xchg
pop
ljmp
mov
inc
or
and
sbb
xchg
add
cmp
sbb
test
pop
push
lret
push
int3
jb
jp
dec
xlat
ficoml
jo
inc
lods
mov
dec
mov
push
pusha
pop
jecxz
add
icebp
aaa
push
or
mov
dec
xor
outsl
pusha
mov
dec
pop
cmpsb
and
sti
mov
push
repnz
and
push
gs
sub
mov
scas
loopne
and
jno
xchg
loopne
test
xchg
dec
push
pop
lcall
inc
mov
fcoml
adc
iret
cltd
and
cmp
xchg
bnd
adc
xlat
ljmp
jp
insl
sbb
adcb
sub
mov
mov
dec
inc
push
lods
fdivrp
ss
xchg
mov
jb
mov
xor
push
xchg
dec
loop
fstpl
cmp
imul
and
push
cs
andb
jne
lcall
outsb
shl
cmp
stos
aam
sub
jne
cld
inc
out
xor
test
jb
xchg
lods
scas
push
inc
fisttpll
and
xor
aaa
roll
push
iret
adc
loope
mov
test
sub
ljmp
push
mov
aam
ds
or
inc
mov
fwait
divb
push
jno
dec
cmp
xchg
mov
mov
inc
xor
mov
mov
aam
mov
jle
test
fistl
in
test
or
push
push
dec
xchg
bound
arpl
xchg
sbb
xor
mov
mov
sub
fsubl
push
mov
sbb
push
jle
ds
stos
fmull
jo
dec
pop
dec
sub
dec
lds
pop
fstps
sbb
mov
push
and
pop
fwait
xor
scas
mov
popw
mov
pop
xchg
adc
adc
out
xchg
popf
out
mov
sub
jle
outsl
mov
cld
jl
lret
sub
cld
or
sbb
sub
xor
daa
dec
or
jp
jl
inc
push
out
jns
cs
or
nop
bound
jae
jne,pn
leave
jo
mov
pop
push
sub
in
imul
std
rorb
dec
xchg
icebp
lods
into
push
imull
jae
ja
faddl
dec
mov
add
push
mov
push
stos
das
inc
mov
adc
mov
mov
pop
iret
cmp
shl
je
and
dec
xchg
mov
popa
xchg
mov
push
xchg
push
cmp
in
mov
mov
lcall
adc
push
inc
push
lods
push
js
fdivs
fwait
test
aam
mov
inc
clc
xor
push
js
dec
mov
and
mov
push
out
pop
sub
rdseed
and
pop
push
test
pop
jae
add
imul
xor
loop
sahf
sub
aad
leave
adc
loopne
or
add
cmpsb
jecxz
js
adc
sub
mov
inc
push
stc
and
and
or
jl
movsl
dec
fildl
dec
add
cmp
add
aaa
and
mul
data16
pusha
or
lret
inc
jb
addr16
movsl
lds
push
dec
into
jnp
dec
and
push
fimull
dec
es
mov
outsb
add
mov
xor
mov
mov
mov
or
and
push
adcl
xor
sbb
push
mov
mov
stos
vmwrite
std
sub
push
icebp
and
sahf
sbb
mov
mov
arpl
scas
sub
ds
lret
and
int3
sub
addr16
inc
stos
jo
cmp
sub
xor
adc
cmp
dec
sub
stos
sti
xor
pop
fwait
fwait
sub
push
leave
jne
in
xor
ds
pop
pushf
movsb
in
scas
jbe
push
insb
fisubl
mov
mov
sbb
and
insb
inc
xchg
pop
out
adc
pop
pop
jbe
fmuls
bound
fsubrs
add
xchg
icebp
call
cmpsl
ret
test
jnp
into
and
std
or
fists
rclb
in
xor
fldenv
mov
cmp
fldt
adc
mov
mov
mov
shrd
xor
shr
mov
mov
xor
or
mov
movb
movb
movb
movb
or
shl
mov
sub
mov
xor
mov
and
mov
imul
movzbl
shr
mov
movb
movb
movb
mov
mov
jmp
sub
xor
les
add
repnz
insl
xor
cmc
cmc
push
push
cmc
test
add
cmpl
ret
mov
fstpt
cmpsb
cmc
ret
push
aad
outsl
fcomps
xor
ret
pop
mov
lock
push
adc
out
mov
dec
clc
inc
test
les
lcall
fists
sbb
idivl
arpl
fs
jns
cwtl
fwait
in
ja
push
pop
fistps
imul
jns
icebp
xor
aam
jo
arpl
jne
jbe
and
mov
in
lret
xchg
lahf
test
pop
or
shl
jle
inc
in
push
lahf
mov
jne
push
adc
pop
loope
and
shl
or
push
mov
push
cmp
mov
push
insl
out
nop
cmp
mov
fdivrl
jl
pop
mov
cmp
inc
sub
dec
and
dec
sub
adc
push
lods
fsubr
cmpsb
lret
mov
sbb
add
movsl
loopne
jnp
xchg
loop
das
insl
scas
inc
fcmovnbe
and
loop
inc
nop
xor
inc
and
adc
add
and
adc
push
sbb
sub
addl
fs
pop
push
jp
mov
fidivl
push
add
push
push
nop
les
jno
addl
sub
inc
cmp
ljmp
jnp
cmp
sub
and
push
mov
fidivrl
pop
cmp
jmp
or
cmc
add
les
aas
push
xchg
jns
add
fnstcw
mov
std
cmpsl
shlb
ljmp
inc
mov
push
xor
pop
std
cmc
mov
out
fwait
add
lds
movsb
in
and
xchg
pop
movl
xchg
xchg
dec
call
int
jmp
mov
push
out
aad
pop
xchg
repnz
cmp
jp
add
jne
sub
jle
outsl
sbb
mov
add
cmc
lds
insb
out
adc
mov
out
lahf
inc
adc
cli
rolb
adcl
aad
fbstp
dec
dec
outsl
cld
mov
jle
pop
mov
xchg
sahf
test
out
add
or
movsl
jo
sbb
jbe
jmp
pop
in
nop
or
nop
js
or
xchg
shll
out
add
inc
lods
jno
rcll
dec
dec
in
push
cmp
pop
popf
lock
scas
and
setae
icebp
lret
in
push
fwait
add
pop
mov
addb
mov
push
mov
lods
loop
clc
mov
rorb
les
rcrl
dec
cmp
scas
inc
mov
and
or
fists
sti
idiv
cmpl
push
mov
cmc
xor
repnz
cltd
popf
push
xchg
xchg
sbb
mov
xor
shll
in
dec
dec
mov
xchg
sarl
sub
ret
xchg
nop
gs
fsubrs
pop
xor
into
rcll
sbb
add
dec
lods
xor
sub
mov
xchg
inc
dec
scas
dec
lods
arpl
sbb
hlt
int3
ret
ljmp
push
add
push
fnstcw
jecxz
mov
xchg
xor
inc
and
call
mov
push
jl
je
xor
out
dec
call
je
sbb
jl
cmc
jp
mov
repz
jge
pop
jns
popf
cmc
mov
jge
inc
xor
adc
lahf
inc
xlat
push
push
ss
sarl
fildll
xchg
mov
fmull
adc
pop
mov
push
hlt
or
jo
stc
inc
out
inc
mov
call
and
loopne
scas
xor
dec
repz
pusha
std
out
fs
add
dec
pop
pusha
add
and
inc
cltd
lods
lcall
mov
outsb
cmc
fnstcw
jns
xchg
dec
mov
xorb
dec
mov
imul
mov
and
out
pop
mov
insl
xchg
mov
std
cltd
repz
cld
pop
jnp
cmpsl
adc
mov
gs
rcr
std
adc
test
imull
dec
shrl
mov
mov
in
xlat
and
aas
in
out
add
cmp
and
pusha
push
mov
leave
repnz
mov
out
test
add
push
fcomi
mul
xchg
pop
xchg
pop
les
pop
pop
sub
mov
jbe
loop
jnp
jecxz
mov
lret
push
and
mov
and
jnp
rclb
fsubl
popa
push
rorl
pushf
int
xchg
xchg
pop
scas
testb
jp
or
test
sti
mov
jbe
xor
cwtl
inc
mov
mov
in
inc
push
push
push
mov
cli
das
push
dec
mov
neg
rcrl
pop
mov
mov
mov
in
lret
push
cmp
inc
mov
push
xchg
ds
sub
popa
fcmovne
sahf
out
xor
mov
and
cmp
jo
cmp
outsb
mov
push
clc
adc
cmp
or
pop
push
jb
and
mov
pop
push
int3
xor
fwait
sbb
fdivr
fimuls
push
aad
les
jbe
push
push
sub
xor
sub
mov
add
mov
add
cmp
ja
mov
mov
shrd
xor
mov
shr
mov
xor
shl
or
mov
pop
leave
ret
movl
cmp
movl
jae
movl
cmp
movl
jmp
repnz
jge
aas
xor
mov
inc
sbb
scas
push
cmc
je
leave
add
dec
xor
stc
cli
push
outsb
das
ja
adc
dec
mov
or
fs
xor
push
fsubs
test
repz
mov
jp
adc
daa
imul
roll
adc
imul
and
mov
add
xchg
popf
cmc
mov
jb
in
mov
dec
mov
sbb
xor
push
and
lea
pop
call
stos
iret
aas
cmp
cmpl
mov
aas
mov
ret
movsb
stc
inc
push
mov
outsb
test
xchg
ret
sbb
test
or
adc
pop
dec
and
and
dec
mov
inc
jb
rorl
or
aam
mov
xchg
outsb
call
stos
jb
fidivrl
out
out
popf
cmp
in
cmp
jmp
adc
imul
push
sbb
cmp
xchg
out
add
xor
mov
jge
out
adc
int
cwtl
daa
sbb
stos
jl
fisttpl
mov
imul
and
cmp
adc
jge
out
fisttpl
xor
je
jb
fnstenv
xor
jae
pop
sub
dec
push
or
hlt
mov
lods
fs
mov
mov
pop
fst
and
sbb
sbb
inc
xchg
push
out
mov
inc
int3
insl
loope
addb
cs
xchg
pop
mov
or
and
sbb
xorb
dec
inc
cmp
xchg
mov
fs
push
fucomip
sbb
nop
add
pop
xchg
sub
rcll
mov
ret
test
or
add
dec
lcall
popf
shrb
or
insl
lret
and
dec
jbe
test
enter
push
push
or
dec
aam
add
fsubl
push
push
decb
outsb
mov
jmp
loopne
out
rorb
lods
sub
jnp
add
movsl
clc
in
mov
sub
sub
mov
sahf
mov
ljmp
jmp
cli
addr16
xor
ss
arpl
and
push
mov
pop
cmpsl
pushf
mov
xchg
test
sbb
dec
xchg
lods
std
push
mov
add
mov
sahf
dec
test
adc
adc
jmp
imul
add
mov
lret
arpl
xchg
push
aad
pop
repnz
mov
and
sbb
insl
inc
xchg
push
scas
adc
rcrb
cwtl
mov
icebp
cmp
xor
xor
adc
add
xchg
nop
popa
ficomps
sbb
mov
test
mov
fcomp
cmpsl
mov
in
lahf
or
jge
mov
inc
das
pusha
jae
andl
cmp
mov
xor
dec
jbe
in
or
stos
aam
hlt
shll
dec
loope
and
lahf
mov
test
lock
add
cmp
lret
xor
sarb
leave
xlat
popf
and
xchg
dec
and
sbb
jl
inc
in
jb
cwtl
movsb
into
insb
or
mov
cmpsl
lret
int3
dec
sbb
sub
cmova
jae
and
call
jp
jge
ret
popa
popl
das
jns
cmp
push
outsl
jbe
div
push
mov
pop
es
test
xchg
xchg
pop
fldt
loope
test
daa
sub
xor
insl
cmpsb
sar
mov
shrl
lret
xor
sbb
jne
dec
jg
cwtl
sbb
pop
or
push
mov
aas
scas
insl
fsubrl
aas
and
or
ss
mov
stos
pop
dec
hlt
dec
lods
popa
iret
stc
xchg
test
cwtl
sub
and
std
cmp
dec
scas
push
ss
hlt
cld
push
xchg
movsl
mov
jg
sub
pop
pusha
insl
jno
mov
and
iret
jb
add
push
sub
adc
std
adc
sbb
gs
dec
sub
je
mov
pushf
xchg
jbe
out
ret
dec
repz
mov
jge
ljmp
jnp
sub
push
cs
jno
adcb
divb
arpl
push
jle
mov
xor
adc
rolb
lret
lds
inc
jne
pop
xor
jae
pop
mov
test
sub
cmpsb
pop
loop
popa
sbb
dec
addl
addr16
add
jmp
xchg
and
bound
fadd
and
pop
scas
sti
mov
aam
aas
pop
dec
data16
sti
ja
adcl
add
adcl
shrd
shr
ret
xorl
mov
xor
and
shr
ret
xor
xor
ret
mov
mov
ret
mov
mov
ret
push
mov
sub
mov
xorl
mov
subl
mov
adcl
sub
movl
push
mov
mov
mov
inc
sbb
adc
mov
and
orl
sbbl
orl
mov
mov
mov
xor
or
sub
imul
mov
adc
mov
subl
sub
mov
movl
sbb
mov
adc
orl
orl
cmpl
ja
jmp
pushl
push
push
call
lea
mov
mov
mov
mov
jmp
xor
xor
and
in
lock
xor
push
cmc
pop
fs
xchg
fisubrs
jb
inc
fldcw
gs
jl
sahf
cltd
sub
push
pusha
lret
push
or
test
mov
mov
fdivr
gs
jns
or
shrb
and
test
hlt
cmp
notb
push
xchg
pop
sahf
out
cltd
cmpsl
bound
or
mov
add
scas
das
mov
enter
and
jecxz
jns
in
dec
cmp
cli
mov
andl
inc
jne
sahf
push
lods
aas
push
rclb
in
mov
pop
shll
jnp
push
fistps
ja
jle
push
mov
sbb
mov
mov
movsb
je
shll
cltd
lock
call
inc
test
push
sub
inc
cmp
mov
or
pop
stos
mov
adc
das
xor
and
ds
mov
adc
repz
cmp
push
jp
xchg
adc
and
inc
faddp
sbbl
std
sub
loop
bound
lcall
scas
outsb
dec
xchg
test
gs
mov
mov
bound
dec
or
mov
lods
sub
xchg
sub
adc
js
dec
std
pop
adcb
out
aad
push
and
adc
ja
loope
add
cmpl
xchg
xchg
jbe
aam
insb
jno
fs
out
xchg
add
and
pop
inc
cmp
xchg
in
addb
dec
xor
mov
test
add
lock
mov
inc
sbb
inc
loop
mov
sbb
jle
mov
add
mov
jle
adc
mov
jle
xchg
rep
mov
les
jae
cmpsl
out
popa
sbb
fimuls
mov
push
jae
sub
mov
xor
inc
mov
add
pop
out
mov
repz
insb
jl
int3
outsb
or
pop
popf
cs
push
cmp
dec
xor
mov
lock
jo
orl
lock
mov
dec
rcll
dec
popa
mov
fldcw
testl
out
mov
mov
cmp
mov
mov
or
jmp
jl
jge
ds
loope
outsb
int
repz
dec
insl
jecxz
xlat
ss
xchg
mov
bound
cmp
mov
push
adc
push
leave
jno
mov
sbb
das
pushl
test
outsl
push
insl
les
in
inc
ficomps
push
aad
and
aaa
arpl
sbb
nop
mov
or
pop
mov
push
lret
outsb
pushf
push
neg
mov
cltd
push
lods
jbe
cmc
mulb
mov
pusha
push
stos
xchg
fbld
in
pop
xor
out
inc
xchg
mov
xchg
hlt
pop
fnstenv
mov
dec
and
jle
out
fdivrs
inc
pop
lahf
sub
inc
mov
adc
adc
xor
es
push
outsl
sub
cld
lock
xchg
fisttps
pop
and
and
scas
mov
xchg
dec
dec
pop
leave
xchg
pop
mov
push
push
icebp
pop
mov
sarb
and
aam
mov
rolb
or
lods
loop
pop
in
lret
mov
pusha
sbb
icebp
jno
add
test
jno
and
sbbl
enter
sarl
repnz
mov
outsb
out
icebp
sbb
and
add
fsubl
into
aas
mov
das
push
and
xchg
xchg
test
inc
cmp
lahf
adc
inc
sub
sub
lret
aam
daa
push
lahf
andl
pop
and
int
xchg
mov
repz
jl
shll
add
pop
mov
adc
std
testb
and
push
iret
fdivrl
in
clc
cmp
aam
ds
orl
mov
add
out
shrl
jg
jnp
les
dec
inc
sbb
xchg
dec
dec
out
sub
xchg
out
test
je
mov
cmp
fdivl
movsl
push
mov
gs
and
cmp
fildll
adc
inc
test
clc
mov
shlb
daa
push
push
sbb
std
out
push
mov
popa
or
cmp
cmpsl
out
push
push
xchg
int
mov
cmp
jnp
inc
inc
dec
push
dec
mov
prefetch
or
mov
out
bound
dec
sbb
cli
cmc
push
dec
dec
test
fistps
mov
out
mov
cmpsb
sub
jbe
outsl
xlat
add
insb
hlt
mov
mov
xchg
js
cs
jle
and
js
fists
lea
xchg
movsb
lods
rcr
cli
and
jbe,pt
stos
scas
in
sub
movsl
movb
insb
push
sysenter
ds
and
sbb
add
adc
cld
sub
stc
fcompl
pop
cmp
rol
pop
inc
insb
jmp
or
mov
rcll
gs
mov
add
mov
cmpl
jle
xor
jmp
pushl
push
call
mov
shrd
shr
mov
mov
xor
subl
xor
or
xorl
mov
movzbl
adc
movl
movl
movl
or
movl
movl
movl
movl
mov
mov
adc
movl
xor
movl
sbbl
movl
or
movl
sbbl
movl
mov
adc
mov
movl
movl
movl
movl
cmpl
jl
xorl
mov
or
jmp
pushl
pushl
push
call
movl
movl
movl
movl
movl
mov
add
mov
movl
mov
or
mov
jmp
mov
sbb
mov
mov
jnp
sbb
cmc
cmc
mov
loopne
push
in
out
addr16
jp
add
jg
mov
out
les
mov
aas
movsl
mov
cld
jne
xor
mov
xor
xchg
inc
movsl
outsb
clc
pusha
xlat
repz
xchg
jge
xchg
lods
cmp
pop
data16
arpl
std
sbb
pushf
sbb
xor
dec
pop
clc
jb
shlb
sub
jne
mov
cmp
pop
mov
sahf
mov
jmp
outsl
push
inc
xor
adc
insl
add
sti
jge
xchg
mov
in
add
loope
pop
jecxz
int
mov
or
sub
xchg
jmp
mov
inc
pop
mov
mov
push
jecxz
pop
lahf
jne
or
mov
fists
pop
add
sub
push
in
popf
pop
cmpb
xor
pusha
sbb
and
jle
pop
sbb
dec
ja
verw
xor
sbb
push
mov
cltd
mov
mov
outsl
mov
mov
sbb
xchg
js
int3
testb
test
cld
push
mov
sub
aam
adc
stos
mov
outsl
and
mov
testb
xlat
mov
dec
fldl
jg
mov
shll
sub
mov
and
mov
mov
mov
or
shlb
in
lods
jnp
xchg
dec
popf
inc
ja
and
inc
or
psrad
push
mov
rcrb
sub
and
push
sbb
loop
xchg
repnz
les
mov
mov
stos
scas
push
jecxz
in
mov
xlat
call
inc
andps
pop
out
cmp
sub
and
push
cmpl
dec
and
ds
call
das
inc
dec
push
faddl
cmp
jno
cld
lret
out
jae
sub
jp
mov
and
popf
mov
orb
mov
shrl
rcll
inc
sub
out
mov
xchg
cmpl
cmp
and
data16
mov
sbb
divb
insl
aam
incl
iret
gs
xchg
sbb
xchg
lock
lcall
add
dec
xor
scas
or
xor
jle
push
xor
mov
hlt
cs
xlat
cmpsl
mov
jno
jno
pop
in
xor
scas
xchg
cmpsb
jp
inc
stc
lea
sbb
jmp
aad
daa
cmc
int3
and
inc
fcomps
mov
in
pop
cmc
lret
daa
shrl
push
ja
push
mov
sub
add
add
iret
pop
dec
popa
jmp
js
cmp
ljmp
or
fucomp
add
outsb
jno
popa
xor
outsl
jo
pop
add
xchg
inc
loop
xor
jnp
xchg
and
mov
inc
jp
inc
or
pop
movsl
add
jbe
cmp
or
and
into
lods
mov
addr16
dec
lcall
test
jnp
fldl
jno
rorb
out
mov
and
ret
dec
add
imul
nop
sub
jmp
xchg
adc
stos
mov
pop
mov
nop
cs
push
sbb
ret
outsb
jnp
imul
add
lods
clc
arpl
cmp
js
inc
xchg
es
sub
xchg
lret
sub
lret
push
mov
pop
xor
divl
scas
sarb
je
push
lret
popf
cmp
stos
sub
xor
loope
adcb
mov
mov
xlat
add
mov
in
mov
push
popa
fucom
xchg
nop
iret
push
lahf
jo
jns
stos
jecxz
cmpsb
dec
or
sbb
xchg
sbb
rcr
inc
push
sub
mov
push
dec
outsl
sarl
add
test
pop
arpl
mov
and
add
cmp
outsl
push
xlat
cmc
cltd
add
jne
mov
fadd
scas
aad
cmp
dec
mov
cmp
rcrl
add
sti
sbbb
sarb
jg
lahf
frstor
insb
mov
mov
sbb
push
fimuls
shlb
repz
cs
pop
call
pop
jo
mov
cmpsl
cmpsl
arpl
sbb
jge
xor
mov
sub
xchg
cli
xchg
mov
jae
sub
add
insl
jns
bound
add
mov
sub
cli
jnp
sub
mov
sbb
sbb
xor
pop
ss
in
orb
iret
inc
fsubrs
push
adc
repnz
adc
sub
cmp
jno
mov
shl
jb
aad
pop
fldt
jo
push
addr16
sub
xchg
mov
js
insb
aas
pop
inc
mov
sbb
mov
cmpsb
xchg
dec
insb
dec
mov
jp
adc
popf
mov
movsb
and
or
sahf
mov
cmc
sub
mov
iret
jle
fwait
adc
mov
fwait
inc
daa
pop
outsl
dec
dec
mov
add
shl
mov
push
subl
push
andl
push
push
xorl
call
xor
mov
mov
cmpl
jb
jmp
push
push
pushl
call
xor
mov
mov
sub
mov
lea
mov
adcl
mov
or
adcl
and
mov
or
xor
movl
cmp
jne
movl
mov
mov
andl
shrd
andl
shr
cmpl
jb
orl
jmp
pushl
call
mov
mov
jmp
pop
cli
das
lds
adc
imul
out
mov
mov
cmc
mov
out
xchg
and
push
add
test
mov
or
sbb
out
aas
inc
push
das
jae
jmp
stc
sarl
jge
sbb
dec
or
ljmp
mov
mov
xchg
xorl
and
ret
insl
jg
lods
scas
test
arpl
jb
adc
loopne
js
inc
cltd
clc
mov
or
cmp
pusha
movsl
xchg
dec
cmp
dec
fs
inc
cmc
jns
mov
into
jbe
nop
int3
xlat
repnz
mov
xchg
push
aad
cld
and
xchg
jmp
test
cmpl
xchg
xlat
gs
xor
mov
and
inc
pop
pop
pop
fdivs
ss
mov
sub
jge
sub
sub
and
sbb
dec
iret
hlt
imul
loope
call
pop
scas
mov
lret
ficomps
andb
jge
shll
adc
sbb
ret
push
mov
sub
ret
js
cmp
sbb
bound
stc
fsub
mov
sub
in
xor
sbb
mov
fsts
cmpsl
mov
xor
jb
lcall
int
add
in
test
xor
pop
cmp
push
fnsave
jl
popa
mov
fildl
outsl
std
pop
pop
xchg
stos
mov
push
mov
movsl
ret
pop
sub
mov
pop
xlat
arpl
arpl
fisttpl
inc
inc
repz
pusha
in
mov
jg
lea
push
xor
mov
xchg
sub
sbb
jmp
mov
cwtl
leave
ljmp
pop
mov
pushf
scas
loope
movsb
push
cld
in
pushf
cld
pop
jmp
lods
ds
xchg
ds
and
movsl
repz
pop
sub
decl
fldcw
mov
dec
cmp
aam
je
pusha
insl
cmp
sahf
lret
dec
aam
aad
fwait
ds
pop
orl
sub
imul
inc
mov
push
sbb
pop
insb
mov
cmpsb
mov
pop
or
add
jmp
adc
lods
jbe
ss
clc
cltd
loope
pop
mov
push
adc
aad
fidivrs
mov
xchg
mov
popf
pushl
xlat
fistps
cld
stc
push
and
mov
jnp
sbb
fyl2xp1
and
into
mov
push
popf
aas
mov
inc
aam
inc
popl
in
jae
sbbb
xchg
inc
pop
movl
stos
lods
add
and
ret
das
mov
jmp
pop
add
test
xchg
mov
lahf
mov
jmp
mov
cmc
jnp
inc
lods
or
xchg
dec
mov
mov
add
fisttpll
cli
in
dec
jno
sbb
shlb
pop
cs
jg
cmp
std
dec
jmp
cs
dec
lcall
or
xor
inc
lahf
iret
sbb
arpl
cld
test
sub
xchg
sub
xchg
mov
scas
ret
cmpsb
mov
shll
sbb
push
xor
sahf
sbb
paddusb
sbb
aaa
fistpl
or
jge
lret
lcall
movsl
and
mov
inc
push
jnp
inc
fwait
popf
xor
lea
mov
push
jg
sub
jae
cmp
sarb
dec
xor
inc
jne
sub
cli
into
out
or
mov
xchg
cmpsb
in
push
lods
gs
repnz
divb
aad
out
cmp
or
fmuls
mov
data16
in
iret
sub
iret
jmp
push
push
sarl
imul
jno
xchg
jnp
ds
jg
cmp
push
xchg
aas
data16
pop
push
jo
repnz
mov
adcb
imul
cld
inc
and
test
add
mov
scas
mov
dec
add
mov
out
and
stos
push
or
or
push
cli
mov
inc
mov
fsubrs
out
mov
and
xorb
cs
inc
std
xor
iret
inc
es
push
movsb
xor
push
lcall
cmp
push
push
sbb
int
sub
insb
and
loopne
and
jge
outsl
mov
jnp
stc
mov
out
cmc
pop
cltd
arpl
imul
pushf
call
ret
mov
ljmp
mov
jae
and
ds
jno
lds
repz
js
ds
test
outsl
fsubl
sub
shl
pop
addl
out
mov
sbbb
mov
loopne
push
data16
push
stos
cmc
scas
lcall
in
insb
dec
xchg
jno
dec
insl
cmp
or
cmp
dec
and
cmpsb
xchg
mov
mov
mov
movsb
pushf
and
xchg
mov
or
push
dec
mov
mov
xchg
mov
arpl
mov
bound
bound
add
enter
mov
pop
xchg
hlt
pushf
lds
and
stc
jns
mov
pop
std
jmp
dec
int
test
imul
out
jno
shrb
rorb
shl
xor
xor
or
mov
mov
cmp
movl
jne
mov
movzbl
add
mov
xor
cmpl
jg
add
jmp
pushl
push
pushl
call
mov
mov
mov
shrd
mov
jmp
pop
mov
sbb
inc
or
das
push
pushf
cmc
cmc
mov
pop
inc
xor
test
inc
push
adc
ss
mov
pop
test
cltd
xor
dec
stos
fnstcw
in
mov
xchg
cmpl
into
mulb
cmpsb
cmp
push
in
push
and
pushf
lahf
daa
inc
call
stos
fcomip
daa
sbb
in
mov
push
ss
cltd
push
jae
cltd
movsb
test
and
insl
out
movsl
cmp
mov
mov
rcr
mov
mov
mov
pusha
iret
fdiv
or
sub
outsl
adc
mov
fs
mov
shl
test
jns
xor
sub
shll
pop
mov
push
mov
xor
cmp
push
xchg
loopne
push
mov
and
loope
lcall
sarl
pop
nop
dec
xor
mov
sbb
pushf
pop
lods
xchg
ljmp
jno
rolb
or
pop
imul
imul
loopne
pop
jge
bswap
sti
loop
aas
movsb
shll
pop
cltd
dec
scas
lods
mov
mov
aad
dec
repz
inc
pop
jl
outsb
inc
sub
dec
add
xorb
xor
jmp
adc
int
cmp
out
sar
mov
cmp
js
push
cld
lret
xchg
loopne
add
sbb
and
es
fisttps
fiadds
into
inc
xor
insb
push
scas
repnz
pop
xchg
jle
fisubl
lock
pop
sbb
xchg
cmc
mov
test
fstpt
dec
mov
pop
push
jae
shll
fcmovnbe
lret
cmpsb
ljmp
out
popf
in
push
inc
in
sti
mov
and
or
or
mov
jge
pop
cmc
inc
mov
fnstsw
fucomi
pop
xor
roll
and
js
sub
dec
or
mov
push
xchg
jmp
loopne
lret
nop
xor
pop
mov
pop
mov
xor
mov
sub
lret
mov
out
enter
je
cmpsl
xor
dec
sbb
jbe
push
adc
pop
jno
int
sbb
fs
mov
dec
adc
jae
dec
lcall
push
sbb
adc
mov
or
aas
mov
push
adcl
push
ret
int3
pop
aad
mov
jle
fldl
fldt
jecxz
jb
xchg
xor
mov
cmp
pop
movsl
xchg
cmpsl
push
rcr
popf
push
fstpl
sub
test
dec
shl
dec
cmpsb
roll
mov
xor
sub
mov
sbb
shll
xchg
xor
es
enter
adc
ja
scas
data16
or
test
movsb
inc
hlt
mov
jo
pop
add
loope
imul
das
and
mov
jmp
lret
andb
fdivrl
repnz
mov
pop
jno
outsb
iret
test
and
movlps
pop
rcll
cmpl
fbld
sbb
sub
lds
inc
test
mov
ja
enter
mov
push
adc
or
ljmp
fwait
popf
test
ret
cmp
cli
pop
dec
pop
das
orb
mov
and
xor
lret
sub
adc
cs
adc
jmp
sbb
arpl
push
enter
mov
decb
sub
push
sub
fstpt
jnp
xchg
mov
adc
xor
jle
orl
or
call
sbb
cld
ror
jns
or
loopne
cmp
adc
adc
popf
ficomps
rolb
xor
dec
popa
fdivrl
inc
push
out
in
cwtl
jp
push
cs
mov
popf
repz
or
inc
jge
xchg
outsl
push
mov
std
xor
and
jmp
jg
mov
call
cwtl
bswap
orl
mov
inc
cmp
adc
fsin
lock
jbe
mov
inc
cmp
rcrl
jo
clc
and
int3
clc
sub
xchg
jne
loop
pop
adc
fs
jecxz
inc
or
nop
sbb
out
lods
or
adc
fdiv
add
cmp
jge
mov
dec
out
cltd
push
push
mov
aad
pop
mov
inc
adc
mov
or
cmp
xchg
outsl
add
stc
xor
adc
jle
addr16
cmp
push
push
stos
pushf
push
movsl
lea
and
outsl
pop
sbb
add
push
rclb
or
addl
xchg
test
xor
clc
loopne
mov
push
push
jmp
sbb
xlat
in
add
in
dec
mov
xorl
dec
lcall
sti
and
add
jg
mov
sub
cmp
gs
popf
lods
in
jne
cld
movsb
and
pop
lods
sbb
jecxz
into
inc
and
mov
subl
xor
shr
mov
adcl
jmp
out
out
imul
fcmovu
jg
fimuls
cmc
cmc
sahf
das
mov
fiaddl
pop
inc
pop
mov
push
divl
cmpsl
outsl
push
aas
mov
fcoms
in
pop
into
aam
push
cmp
outsb
mov
jge
lea
out
mov
mov
adc
in
lahf
test
fwait
inc
lds
outsb
jg
and
jle
add
rcrb
jge
iret
cmpsb
scas
inc
lock
sub
inc
sti
mov
fnsave
stos
push
cltd
insb
cmp
dec
xchg
dec
cmp
sbb
mov
loop
sti
mov
inc
test
test
jno
push
sarl
sbb
sub
psubusw
mov
inc
jo
dec
outsl
sbb
test
push
in
cld
add
inc
xor
push
inc
adc
shlb
jg
divb
lahf
sbb
lcall
sti
popf
dec
add
adc
hlt
push
in
shlb
das
sahf
mov
cmp
ffreep
enter
enter
push
int
int3
sbb
push
inc
test
xor
mov
cmpsb
lret
insl
xchg
cltd
out
insl
xchg
lods
cmp
rorl
sub
pusha
adc
xor
inc
push
mov
cmpsb
inc
cmp
mov
addb
xchg
pop
jnp
mov
sti
mov
fiadds
adc
rol
pushf
pop
sub
in
test
pop
nop
or
pop
mov
sbb
jb
popf
dec
popf
cmc
sbb
jb
into
mov
popa
shl
pop
les
jecxz
fcmovnbe
dec
mov
jae
push
jb
insb
aas
mov
sub
loopne
nop
push
xchg
bound
dec
mov
movsb
mov
dec
inc
mov
bound
in
sub
shll
xchg
enter
mov
or
loopne
rclb
ret
scas
int3
call
roll
iret
decb
dec
sub
int
cmpsb
arpl
imul
cmp
sahf
mov
mov
loope
xchg
or
and
mov
inc
mov
cmpsb
and
fcmovnbe
pop
sbb
inc
test
pop
jge
sub
or
or
movsb
or
in
in
inc
add
ja
mov
jg
imul
dec
cli
jb
add
xor
cmc
add
jb
movsb
pop
jl
mov
mov
hlt
mov
sbb
dec
aas
mov
push
or
test
pop
rorl
test
mov
jg
insl
dec
popa
fwait
jo
xor
or
cltd
mov
sub
mov
in
dec
fnstcw
inc
or
pop
sbb
pop
pop
cmpb
mov
jne
mov
movsb
fmull
or
cld
clc
orb
jns
call
pop
xchg
insb
dec
das
adc
aam
jbe
aaa
data16
push
mov
scas
test
iret
sub
sbb
xor
test
ret
xchg
jmp
je
aaa
mov
loope
imul
in
push
clc
in
icebp
pop
mov
cmpl
sub
mov
int
lock
pop
and
pop
xchg
jo
mov
or
jno
mov
pusha
adc
mov
insb
jmp
inc
cmpsl
ret
inc
fcmovnb
adc
push
mov
insb
mov
das
pop
stc
cmc
shr
xchg
pop
fdivr
rorb
daa
adc
mov
ret
subl
lret
dec
popf
rcrb
jnp
and
cmc
std
es
fstpt
dec
add
xor
mov
popl
xchg
clc
jge
mov
insl
aad
xchg
stc
jno
outsb
int
cmp
mov
jbe
inc
or
xchg
and
fldenv
loope
push
movb
cmpb
add
mov
sbb
mov
dec
xor
sbb
popa
cmc
sub
js
test
jg
mov
and
faddl
sbb
pop
ret
jp
pop
out
add
out
inc
cmpsb
cs
pop
std
aaa
mov
mov
mov
addr16
jo
mov
xchg
nop
mov
int
fcomps
jmp
test
aad
punpckhdq
sti
test
adc
out
std
adc
xchg
dec
icebp
cmp
out
inc
pop
xor
dec
sub
andl
mov
stos
xchg
mov
pop
movsl
into
mov
inc
fsincos
adc
popf
aas
push
incl
and
cmp
push
cmp
mov
mov
mov
in
clc
add
push
ss
xor
shll
test
xorb
stc
in
orb
dec
jb
or
lock
inc
xor
pop
cli
and
in
icebp
jo
iret
fldenv
test
sbb
adc
push
ret
xchg
lret
fs
pop
xchg
add
imul
mov
mov
int
mov
xor
pop
test
add
sarb
sbb
hlt
cmpsb
add
jg
cmp
insl
cmp
shr
into
add
cmp
outsl
stos
inc
jmp
out
xlat
or
imul
inc
xchg
sbb
xor
sbb
mov
lret
inc
je
aas
inc
test
mov
or
adc
dec
jo
jmp
clc
push
rcrb
inc
mov
jp
and
ja
sbb
dec
and
mov
adcb
sbb
push
adc
stos
push
movsb
bound
xchg
lock
shrl
lret
dec
or
call
in
enter
sahf
push
sbb
push
xor
dec
jbe
or
jne
push
mov
mov
mov
push
jo
dec
push
nop
sbbl
cmp
xchg
adc
jmp
popf
sti
xor
test
jmp
mov
inc
fwait
pop
xor
mov
aad
out
jb
dec
cmp
stos
fstp
sub
add
cmp
out
rcrb
mov
lret
call
arpl
insb
pop
vorps
test
das
roll
pop
mov
fdivrl
stc
dec
dec
xorb
xchg
out
testb
jae
mov
mov
scas
testb
mov
xchg
movsb
mov
xchg
cltd
mov
dec
lds
pusha
scas
mov
push
cmpsl
out
xor
out
and
mov
push
in
sbb
fwait
inc
outsl
add
or
outsb
jmp
xchg
mov
lcall
repz
popf
jecxz
and
imul
sub
push
dec
call
in
jne
insl
pop
inc
jge
sub
cld
dec
pop
sbb
mov
or
out
outsb
cmp
arpl
mov
icebp
lods
sub
sub
xor
jno
jl
sub
cs
stos
jb
xchg
inc
icebp
cmp
mov
and
xchg
push
inc
xchg
int
pop
xorl
fdivrl
enter
or
xor
cwtl
cmp
in
push
pop
xor
pop
mov
add
pop
movsb
xchg
cmp
dec
mov
pop
sub
add
mov
sbb
jbe
testb
je
push
leave
ss
in
inc
inc
jl
mov
cmp
inc
test
pop
adcb
inc
enter
adc
loopne
xchg
jle
mov
enter
sbb
or
movsl
adc
aam
lea
out
push
add
mov
push
add
sub
xchg
sub
xor
scas
xchg
mov
sbb
xchg
imul
cmc
xor
jne
mov
adc
inc
or
inc
aas
insb
mov
jne
add
and
into
mov
mov
ret
das
es
jp
int3
loopne
cld
inc
sub
sbb
repz
aaa
and
push
inc
cmpb
inc
arpl
lds
mov
pushl
cmp
mov
dec
dec
cwtl
repnz
and
hlt
movsl
ljmp
ja
aas
sbb
and
ss
fdivrl
pop
clc
dec
cs
mov
mov
mov
cmp
xchg
xchg
pop
and
add
ljmp
in
cmc
inc
out
push
mov
push
dec
cltd
xor
jne
and
cpuid
mov
stos
sets
or
jae
cltd
jecxz
dec
addb
and
mov
cmc
sbb
mov
in
sti
rclb
and
pusha
lcall
pusha
lcall
add
cwtl
test
insl
pusha
clc
and
inc
ja
sub
inc
fstpt
xor
out
int3
add
out
sbb
addr16
adc
movsl
cmp
xor
pop
pop
lods
xorb
pop
les
in
pusha
mov
out
ret
aas
lcall
or
loopne
xchg
sbb
push
mov
sub
aad
pop
testl
mov
ss
addl
jge
jo
shl
sbb
pop
adc
cmp
stos
cmpsb
lock
aaa
cmp
imul
sbb
add
lea
dec
inc
icebp
or
jmp
test
adc
test
test
adc
push
sbb
and
sbb
mov
lods
jle
push
push
xor
out
out
add
js
lahf
pop
adc
dec
sbb
punpcklbw
dec
jl
push
pop
jo
imul
mov
pop
nop
pop
cli
sbb
enter
rol
ss
sub
push
adc
xor
fwait
call
shll
mov
orb
sbb
in
xor
or
mov
push
fdiv
cmp
std
cmc
xchg
out
add
xchg
in
dec
jnp
jns
out
sub
shrl
mov
inc
mov
test
pop
imul
test
xchg
cwtl
sbb
mov
cmp
sub
mov
cltd
sbb
xor
std
and
cld
adcb
aaa
mov
cmp
xchg
sub
cmp
push
push
fchs
or
stos
ss
dec
jno
adc
test
cmpsl
push
cmp
push
hlt
rcr
outsb
scas
or
shl
sbb
sub
jmp
jl
sbb
lds
jle
add
cmc
mov
subl
popf
or
mov
pop
sub
cmpsl
icebp
xlat
mov
lds
ror
test
and
in
adc
jecxz
add
aas
jns
fmull
mov
mov
sbbb
lea
xor
sbb
pop
cmpb
or
push
push
lds
xchg
lods
add
xchg
mov
mov
adc
jp
lahf
xor
push
dec
daa
test
das
push
dec
cmp
mov
inc
cltd
sarb
dec
iret
mov
popa
inc
push
mov
sbb
sahf
push
sbb
mov
and
lahf
push
fisubrs
add
jae
jns
sub
pop
aaa
cmp
je
xor
daa
cmpsb
jbe
mov
sub
dec
imull
insb
pop
sub
addb
cmpsl
dec
pop
xor
cmp
dec
dec
pushf
movsl
mov
data16
inc
mov
mov
sbb
push
arpl
jae
mov
sbb
mov
movsb
push
jb
cmp
aam
xor
add
loopne
loop
cmpsl
cmc
jne
xchg
sar
bound
ja
add
hlt
loopne
out
andb
arpl
fcoms
xchg
and
xchg
lea
repnz
jp
adc
sbb
mov
not
rorl
test
sub
dec
cmpsl
add
sub
push
dec
inc
inc
pop
xchg
pop
in
xchg
adc
sahf
sahf
sub
cmp
iret
test
popf
jb
xor
in
sarb
pusha
insl
mov
jmp
cmpsb
push
in
dec
loop
cli
push
out
sub
mov
data16
insb
adc
shrl
fyl2x
jp
or
dec
loope
cmp
push
mov
sahf
orb
sub
aam
jp
div
inc
mov
daa
xchg
add
push
jg
dec
xchg
out
pusha
and
inc
bound
jo
push
lods
push
popa
in
mov
popf
fistps
ljmp
jbe
pop
shll
outsb
ss
or
mov
sub
inc
sahf
dec
lcall
xchg
sub
ficompl
mov
jb
mov
cmp
or
dec
sub
iret
xchg
or
mov
jle
jmp
push
cwtl
sbb
inc
shrl
repz
xlat
cmp
out
push
incb
push
sub
rolb
xor
push
push
add
pushl
mov
xor
ret
inc
enter
cltd
pop
cs
and
cwtl
or
inc
add
mov
jp
pop
xchg
pop
pop
xchg
or
mov
test
iret
out
pop
jo
add
mov
fwait
xchg
jg
out
cs
pop
inc
push
mov
jl
gs
mov
mov
mov
rcll
jo
and
dec
xor
push
pop
cmpsb
dec
sti
push
xlat
mov
arpl
sub
jmp
push
lcall
jg
insl
sti
cmp
addb
fs
and
aam
fs
push
es
test
mov
iret
sbb
outsb
xchg
cli
sti
popf
push
dec
and
scas
xor
mov
mov
dec
lahf
xor
pop
xchg
push
xchg
into
pushf
sub
jge
rorb
xor
cmpsl
addr16
xchg
or
je
mov
mov
inc
xchg
ljmp
jp
hlt
dec
dec
leave
xchg
inc
sbb
push
movsb
fidivrl
jne
lods
andb
ret
xor
inc
push
xchg
xor
and
shrb
outsb
jbe
int
cmpb
rorl
or
add
or
or
adc
scas
push
lods
insb
arpl
xchg
sbb
push
inc
mov
mov
cmp
or
push
loop
mov
aaa
cmp
dec
mov
inc
and
fnstsw
mov
shrb
fidivrl
xor
inc
jl
xchg
mov
fisubrl
lahf
mov
jp
sbb
into
push
ret
sti
add
inc
enter
dec
push
adc
adc
inc
xchg
popf
imul
jp
and
dec
sbb
adc
ret
sbb
jno
out
jne
jecxz
cmp
imul
push
cmp
jbe
fisttpl
jmp
fldenv
cld
loop
xor
and
in
fs
xchg
dec
cmp
jo
push
popl
adc
ds
in
mov
and
inc
cmp
mov
jnp
inc
shll
fistpl
cltd
and
adc
ret
lods
lock
jno
adc
test
testb
movsl
jb
mov
add
adc
pop
pop
lea
pushf
cmp
js
mov
es
sub
inc
cmp
xor
stos
int
dec
lea
inc
out
repnz
movsb
aaa
jne
ja
ror
es
push
ffree
gs
imul
hlt
xor
xchg
jo
aas
mov
js
rolb
sbb
dec
dec
adc
loopne
add
pop
mov
sti
add
jns
je
fwait
rorb
or
sti
mov
mov
mov
inc
add
leave
mov
mov
or
add
and
mov
mov
and
mov
cmpl
jl
xor
or
add
sbb
jmp
pushl
call
shrd
shr
mov
xor
or
add
mov
xor
xorl
shl
cmpl
jge
jmp
push
call
xor
or
mov
mov
shrd
shr
mov
mov
sub
mov
xorl
xor
orl
xor
or
shl
lea
sbbl
mov
and
mov
shrd
shr
and
mov
mov
mov
add
mov
xor
jmp
in
push
cmp
add
adc
frstor
push
cmc
mov
outsl
mov
pushfw
outsb
jns
subl
xlat
in
inc
les
mov
sub
cs
and
push
xchg
sbb
imul
ret
pop
jnp
xor
add
fs
mov
int3
cmp
mov
push
pop
ljmp
iret
add
notb
arpl
lods
dec
sub
mov
jmp
sub
iret
push
jl
stos
hlt
clc
pop
jb
repnz
rolb
jmp
stos
aad
cmp
bound
movsb
adc
mov
pop
insb
and
pop
out
in
mov
adc
adc
adc
cmpsb
jl
imul
push
add
xchg
loopne
adc
and
cmp
inc
sahf
pop
fs
add
mov
insl
pop
fcomi
hlt
gs
push
mov
push
fcmovnbe
into
repnz
ljmp
fs
push
movsb
test
std
inc
pop
push
mov
mov
jns
jp
mov
and
stos
and
mov
pop
adc
push
pop
push
sbb
mov
popa
jge
dec
ret
pop
in
fcmovnb
pop
jno
mov
and
enter
repz
sti
jle
push
lods
add
test
cmp
movsb
xchg
arpl
insb
repz
int
lahf
sub
rcr
inc
inc
cwtl
fstps
out
mov
arpl
daa
xor
inc
in
pop
cmpsl
shll
mov
add
pop
sub
dec
cwtl
shll
std
lcall
jle
or
rolb
mov
cs
fnstcw
add
cmpb
xor
sub
add
adc
inc
mov
jl
cli
sbb
sbb
mov
pop
mov
das
mov
and
subl
jl
out
ret
jns
mov
ss
jne
jge
aas
mov
mov
sbb
test
dec
xlat
push
js
jns
or
pop
and
sbb
or
and
xchg
jbe
rclb
mov
shlb
dec
push
mov
cmp
lret
hlt
xchg
jae
mov
mov
mov
rol
outsl
pop
arpl
or
out
pop
mov
pop
or
pop
and
push
and
fiaddl
cmpsb
adc
lock
xor
add
lods
sbb
aaa
outsl
adc
pushf
test
mov
mov
and
pop
cmp
sbb
mov
hlt
mov
jmp
inc
ds
dec
insl
stos
adc
inc
repz
xchg
out
dec
and
pop
dec
and
sbb
dec
xchg
int3
mov
lret
movsb
jo
dec
ss
rcrb
push
inc
js
pop
loopne
xchg
rolb
movsb
in
mov
test
adcb
inc
insl
mov
cltd
xchg
test
ja
jg
stos
aaa
jae
inc
mov
imul
sub
ret
jno
addb
xchg
adc
mov
hlt
lcall
or
scas
cmp
notb
and
jo
and
or
leave
js
fs
sub
subl
ss
not
jl
or
jecxz
xor
mov
inc
movsb
js
sub
sub
dec
push
cs
inc
bound
js
pop
mov
js
jno
in
xchg
aas
lds
in
out
xchg
sub
out
xchg
dec
xchg
mov
leave
repz
outsl
xor
or
pop
dec
push
push
mov
sahf
gs
or
push
cli
out
in
mov
hlt
or
add
jge
dec
out
push
or
imul
add
or
shl
dec
xor
mov
xor
xor
divl
arpl
add
lods
in
push
cmp
jge
mov
mov
sbb
add
xor
leave
mov
jecxz
pop
push
mov
mov
data16
outsb
aam
jno
inc
adc
dec
mov
push
adc
adc
add
out
cmp
mov
sarl
and
xchg
and
jle
sub
adc
push
lcall
mov
add
cmc
mov
hlt
mov
xchg
inc
dec
cltd
aas
sbb
mov
push
les
mov
ja
xlat
lods
stc
dec
pop
repnz
and
cmp
adc
pusha
xchg
fimull
xlat
cld
mov
mov
std
inc
movsb
int
js
mov
push
xchg
xchg
dec
mov
pop
cmp
cmpsb
mov
lcall
pop
aad
xchg
xchg
ss
aam
rcll
push
pop
or
push
mov
cmp
mov
mov
fcomps
lods
aad
in
sbb
rorb
in
xchg
std
push
lods
or
pop
in
sbb
cmpsl
repnz
adc
push
fmuls
hlt
outsb
insl
cmpsb
mov
mov
or
mov
cmc
mov
jb
pusha
lcall
cli
repnz
pop
jg
mov
xor
pop
jne
fisubs
inc
xchg
in
sahf
fnstsw
das
das
push
loop
cmp
sbb
mov
jae
dec
add
adc
cmpl
adcl
xor
subl
or
shl
jmp
push
ja
outsl
jg
lock
je
cmc
mov
jns
ja
push
adc
ficoms
mov
cmpsb
dec
adc
dec
pop
jno
int3
and
add
out
mov
xchg
negb
std
add
and
popf
inc
pop
inc
sbb
bound
cmp
or
ljmp
in
mov
pusha
and
push
mulb
stc
sub
nop
imulb
int3
pop
push
or
xchg
jno
and
adc
dec
jecxz
adc
xor
iret
xor
mov
rorl
sub
and
jmp
mov
aam
ret
stc
ficoml
sbb
adc
jecxz
sti
mov
subl
outsl
mov
push
out
jo
or
push
pop
jg
pop
sub
pop
mov
xor
and
add
imul
or
sbb
aad
iret
mov
leave
ljmp
push
push
or
lods
pop
inc
sbb
push
mov
or
mov
mov
jno
js
je
jbe
rcrl
mov
mov
or
enter
stos
clc
fildll
nop
pop
push
mov
lret
outsl
pushf
ficoml
mov
in
jmp
divl
out
ljmp
sub
aaa
fwait
pop
sub
pop
xchg
dec
push
out
mov
sbb
lock
and
mov
or
aam
aad
in
mov
nop
sbb
cmc
out
lock
movsl
jmp
pushf
xor
pusha
ret
jg
add
popf
out
jbe
das
push
les
out
test
fwait
cmpsb
mov
cmp
lock
sbb
sbb
mov
sub
xchg
insb
leave
or
adc
jo
sbb
push
push
outsb
cld
ret
or
loop
push
pop
xor
or
aas
lcall
mov
jo
mov
out
push
dec
cmp
mov
jmp
test
sbbl
sbb
jb
jb
mov
or
xchg
into
insb
and
mov
or
cwtl
mov
pop
mov
pop
inc
pop
popf
std
cli
das
cmpsb
cltd
xlat
jecxz
rol
jns
sti
xchg
cli
mov
mov
jne
movsb
addr16
mov
dec
aas
daa
and
mov
loopne
loopne
mov
pop
test
lds
fdivrp
or
out
shlb
mov
inc
fwait
add
jnp
add
cmp
rcl
gs
and
dec
fidivrl
mov
adc
loop
loopne
xchg
push
cmpsb
call
leave
push
mov
cli
mov
and
sbb
shrb
stc
inc
aad
lock
push
push
jbe
inc
je
or
cmpsb
fdivs
mov
jle
mov
dec
call
into
pop
sub
or
jmp
shll
fcompl
dec
xlat
clc
sar
lds
xor
fwait
std
jb
dec
xor
mov
ret
dec
js
repnz
ret
cmc
mov
jecxz
loopne
dec
push
popf
jno
inc
neg
sahf
cmp
nop
daa
sti
jns
jo
jle
pop
inc
jp
lds
das
dec
les
out
sub
rorl
insb
xchg
imul
jae
call
jns
xor
adc
xchg
push
jge
lahf
push
lods
imul
mov
add
aaa
bound
cld
xchg
inc
sarl
mov
xor
mov
inc
cmp
lahf
sub
in
xor
addb
cs
std
push
xchg
popf
push
adc
adc
mov
cmpsl
pusha
out
cmp
outsb
aam
dec
or
les
fldt
adc
lret
cmpsl
push
sub
stc
dec
mov
pop
and
shrb
js
cmp
jmp
or
les
lahf
int3
aaa
cwtl
lahf
jne
and
in
inc
and
mov
test
jle
and
jne
add
adc
pushf
in
rorl
pop
loopne
inc
or
mov
and
shr
daa
or
scas
into
cmp
imul
cmp
dec
push
push
inc
xchg
out
outsb
dec
movsl
push
fisubs
jecxz
jg
mov
mov
cltd
rclb
jns
pusha
divl
and
shll
call
adc
in
lods
movsl
jl
repnz
xchg
js
or
xchg
loop
ljmp
mov
sub
adc
andl
lea
inc
subl
inc
shrl
fldl
jns
nop
dec
ret
jns
xor
movsb
pop
and
xchg
in
aam
stos
cmp
shll
mov
jno
mulb
es
mov
xor
xor
dec
jns
push
pop
je
lea
imul
shl
push
gs
jb
mov
outsb
int3
sbb
imul
shrb
pop
pop
adc
cmp
sbb
mov
int3
les
iret
out
mov
addr16
ja
inc
mov
es
xor
lods
and
movsl
xchg
call
mov
mov
sub
push
inc
ror
or
sub
push
fnstenv
adc
scas
roll
add
mov
add
add
inc
add
push
push
pushl
pushl
push
call
jmp
sub
and
das
outsl
repnz
push
cmc
xchg
xor
movsl
or
mov
cmc
pop
mov
and
add
in
jge
xor
jecxz
movsl
adc
fnstenv
mov
repnz
jmp
mov
shl
cltd
sub
leave
push
mov
adc
std
add
xchg
ja
lods
mov
addl
cld
or
outsl
inc
cli
adc
adc
dec
movb
es
out
sub
cmpsl
jo
lock
push
xor
pop
jo
out
cmp
add
sbbb
jp
movsb
ret
sub
inc
arpl
stc
gs
loope
push
push
adc
fstp
xor
in
inc
cmp
push
xor
fnsave
dec
push
adc
pop
cmp
cltd
or
test
test
ss
or
cld
mov
mov
ljmp
repz
les
push
mov
sbb
inc
insl
push
or
pop
pop
jb
xchg
lret
imul
icebp
jg
pop
cmc
or
stos
cld
stc
push
adc
push
jecxz
push
jne
mov
sbb
pop
lods
jae
mov
mov
data16
les
into
ret
sub
ret
in
lret
mov
or
pop
pop
mov
jle
repnz
clc
aaa
rclb
adc
push
cmp
out
jp
adc
loopne
and
repnz
push
stos
dec
inc
js
dec
enter
xchg
icebp
mov
xchg
xchg
shrl
pop
push
adc
cmp
addr16
adc
or
je
in
jl
push
adc
in
dec
out
ljmp
mov
outsl
add
je
jo
push
mov
sub
sub
xchg
fs
std
out
scas
ja
outsb
lds
insl
dec
pop
bound
out
ds
aad
outsb
inc
into
jno
mov
xchg
rol
or
pop
xchg
mov
or
adc
sbb
push
adc
scas
lret
xlat
sbbl
lahf
sub
outsb
fisubrs
xor
xor
sbb
dec
sbb
sar
mov
push
dec
hlt
aas
loop
dec
cmp
mov
into
es
mov
rcl
lahf
clc
pop
pop
xor
dec
mov
push
ja
gs
xlat
sbb
cli
sub
mov
push
adc
call
mov
xchg
fisttpl
push
scas
jmp
cwtl
test
pop
push
cmc
inc
and
jno
mov
cmc
fwait
jne
cmp
out
jae
pop
in
push
add
or
scas
add
push
data16
cld
lods
add
mov
mov
adc
inc
inc
loop
mov
mov
or
jl
mov
sub
lret
pop
mov
rep
xchg
mov
out
fldcw
repnz
and
cmpsl
test
fdivp
out
jne
aaa
inc
inc
mov
rclb
mov
scas
lret
cmpsb
jne
inc
outsl
iret
cmp
add
lret
or
dec
jbe
adc
cmp
ret
push
xor
push
subl
movsl
xor
fisubrl
mov
dec
adc
shrl
fnsave
and
push
js
jae
pushf
dec
pop
mov
mov
scas
gs
mov
aam
pop
xchg
cmp
push
imul
sbb
pushf
push
pushf
or
cmp
pop
mov
jmp
aaa
xor
fldl
mov
push
adc
sub
xor
mov
aam
sub
push
loope
roll
push
popf
enter
jg
mov
loope
xor
xchg
jge
or
ja
lods
xchg
xor
popf
push
pop
loope
add
jae
pushf
inc
add
xchg
mov
sbb
mov
mov
inc
adc
xor
pop
inc
insl
cmp
movsb
loopne
mov
sti
daa
sbb
xchg
push
and
xchg
jge
aaa
movb
sub
dec
add
cmp
mov
stos
mov
loope
scas
pop
fisubl
cmpb
and
push
cli
xor
push
out
mov
push
cmp
stos
cmp
loop
adc
mov
repz
sbb
xchg
sahf
out
js
shrl
or
mov
ficoms
cmpsl
out
les
enter
xor
or
and
into
stc
stos
fcmovb
mov
push
jmp
mov
add
dec
xchg
cmp
leave
outsl
stos
fwait
cmp
pop
popa
pop
jg
adc
pop
xchg
pop
and
clc
xor
fwait
sbb
add
or
sbb
repnz
mov
fisubrl
movl
mov
xor
cmp
dec
roll
call
int3
and
and
mov
sti
mov
stos
in
stos
cmp
clc
and
lods
test
int
imul
notl
xchg
adc
adc
pop
mov
xor
xor
mov
add
xchg
mov
outsb
xor
xor
mov
push
notl
mov
mov
cwtl
mov
mov
shrd
mov
mov
xor
shr
mov
sub
mov
andl
xor
or
shl
sub
mov
movl
cmp
mov
jg
xorl
mov
xor
add
or
mov
shrd
addl
mov
adc
mov
xor
shl
andl
xor
subl
or
addl
shr
mov
cmpl
jbe
adc
jmp
push
call
mov
mov
mov
shrd
shr
mov
sub
mov
mov
xor
xor
or
subl
shl
jmp
mov
xor
jo
shl
inc
dec
cmc
cmc
mov
scas
push
mov
sub
xchg
sbb
dec
xor
js
pop
iret
arpl
jns
fstpl
cmp
xor
imul
cs
xchg
mov
xor
and
divb
or
rorb
js
inc
adc
cld
je
shll
rolb
std
sbb
movsb
gs
jnp
cmp
sub
cmp
and
xchg
mov
aad
sahf
or
in
cs
js
mov
mov
int
sub
push
push
out
cltd
outsb
mov
sarl
or
jae
lods
jbe
mov
lods
insl
int
in
mov
loop
lea
idivb
sarl
and
fmul
ds
jl
outsb
test
std
mov
mov
test
out
jg
call
xchg
inc
ret
xchg
mov
cmpsb
mov
pop
adc
pop
xor
fincstp
mov
adc
outsl
jmp
push
sbb
sbb
push
fcomps
jge
adc
nop
repz
lret
sbb
mov
adc
and
int
lcall
popf
imul
aam
ss
mov
fs
jle
dec
sub
neg
out
inc
movl
xor
enter
mov
movsl
xor
add
or
fisubrl
jno
cmp
mov
adc
cmpsl
inc
fs
mov
loopne
mov
sub
dec
cmp
shlb
movsb
inc
dec
jmp
sub
xor
mov
and
movsb
fmull
repz
imul
mov
pop
fcoml
dec
pop
outsl
int
jns
sub
push
inc
xchg
out
call
fstl
add
pop
ror
jle
std
ja
stc
test
rcll
mov
nop
fistpl
in
sub
mov
test
and
fsubrp
sti
dec
xchg
adc
jne
test
xchg
jno
lods
gs
sub
dec
in
push
pop
jle
sub
pushf
adc
rorl
test
cmpsb
sbb
imul
jae
pop
inc
cs
sbb
or
scas
mov
call
out
xor
dec
push
in
and
mov
ljmp
es
loop
xchg
add
dec
movsb
cli
mov
fldt
fs
pop
inc
xchg
xchg
mov
sbb
mov
cmp
nop
push
call
shll
in
aam
mov
ret
imul
ficomps
cltd
xor
and
xchg
je
imull
pop
ljmp
mov
cmpsl
not
inc
adc
fcomps
pop
and
out
mov
push
ljmp
jmp
nop
dec
out
and
iret
inc
sub
scas
and
aad
adc
out
xchg
lret
lock
imul
push
sbbl
mov
stos
cmp
icebp
xor
pop
mov
mov
test
cmp
and
jno
mov
xchg
jnp
aaa
and
dec
mov
je
push
outsl
lret
daa
or
cmp
fs
fiaddl
xlat
and
and
inc
mov
lods
push
inc
add
xlat
ljmp
shll
ja
test
or
sahf
clc
fcmovu
jbe
fnsave
pop
shll
mov
jmp
pop
jno
roll
and
cltd
cmp
jae
int3
stos
ret
outsb
nop
pop
je
test
cmp
push
fiadds
xchg
add
or
pop
popf
xor
push
out
jg
fmuls
adc
pusha
int
xor
or
fwait
mov
ficoms
cmp
icebp
and
push
xor
ficomps
test
mov
cmp
das
mov
cmp
inc
neg
hlt
mov
mov
pop
inc
lods
mov
fimull
jne
inc
push
repz
nop
cmp
dec
mov
mov
fistl
cltd
mov
movsb
xchg
and
popf
and
stos
pop
sbb
into
rcrb
mov
push
pop
xchg
repnz
inc
aaa
shrl
jae
push
and
sub
mov
movsb
repz
fidivrl
jb
dec
add
fimull
or
add
lods
mov
orl
stos
out
jnp
mov
add
xor
dec
rorl
mov
push
hlt
pop
xor
iret
insb
mov
xchg
sbb
sub
xchg
inc
mov
push
dec
loope
int3
xchg
fcmovbe
add
je
inc
test
in
iret
mov
inc
xor
pop
add
jno
cmc
sarb
mov
and
adc
sub
xchg
data16
push
jnp
scas
jns
pushf
mov
loop
bound
pop
out
jo
in
popa
fsts
ss
dec
inc
xchg
shrl
idivb
scas
hlt
cs
and
jg
decb
or
mulb
fmuls
pop
push
push
inc
mov
dec
dec
pop
xor
mov
jl
sahf
test
mov
scas
push
aam
add
sub
add
adc
add
pop
add
jmp
or
mov
mov
addl
shrd
subl
mov
mov
xor
subl
shl
subl
xor
or
shr
cmpl
ja
dec
jmp
pushl
push
push
pushl
push
push
push
pushl
call
mov
mov
mov
mov
shrd
shr
mov
cmpl
jl
sub
jmp
push
call
mov
mov
xor
xor
or
shl
add
add
xor
mov
adcl
mov
shrd
cmpl
jg
adc
jmp
push
push
call
shr
mov
mov
xor
shl
xor
or
xor
mov
cmpl
ja
mov
sub
jmp
push
push
push
pushl
call
movl
mov
jmp
add
mov
push
or
and
cmc
mov
call
jns
orl
cld
mov
add
adc
pop
pushf
xchg
out
incb
xchg
scas
push
outsl
xor
mov
shll
and
mov
in
push
and
xor
cli
addb
scas
out
jo
mov
mov
jmp
into
cmpsb
adc
loope
adc
mov
ljmp
or
call
sub
lds
cmc
push
sbbl
in
inc
push
or
test
enter
pop
jle
leave
jo
xlat
add
jecxz
push
mov
bound
mov
sbb
pop
sahf
stc
or
cltd
dec
mov
cmp
fsqrt
or
mov
sub
inc
stos
cs
sar
aaa
xor
ss
leave
outsl
or
push
sahf
insb
dec
jbe
push
sbbb
pop
ficoml
imull
jo
xchg
loopne
imull
and
adc
add
mov
cmp
rclb
fisubl
les
add
jbe
push
fisubl
cwtl
cmc
das
xorl
sbb
shll
jns
xor
pop
xchg
fstps
push
in
add
sub
or
cmp
jge
pop
pop
jae
gs
andl
xor
fs
inc
xor
and
popf
xchg
push
inc
jp
cmc
fsubs
div
pop
xor
jae
cmp
cmp
dec
daa
or
mov
mov
ljmp
jg
loope
and
push
inc
divl
pushf
cld
dec
arpl
pusha
cmp
sbb
dec
jmp
adc
inc
inc
std
in
push
jmp
mov
and
jnp
aas
mov
arpl
insl
cs
es
sarb
das
jge
lcall
data16
inc
out
lahf
lret
add
sahf
pop
mov
push
jp
adc
xchg
xlat
ja
repz
mov
negl
push
hlt
aad
aaa
subb
out
arpl
inc
test
sub
push
jmp
push
pop
mov
iret
shll
daa
add
jl
cltd
or
out
cmc
add
call
jae
lret
mov
mull
inc
or
popa
jae
xor
inc
add
cmpsb
fisubrs
out
mov
cmp
push
popa
xchg
fdivrp
es
jl
jbe
das
pop
lock
pop
pop
clc
sub
imul
inc
adc
arpl
mov
leave
out
lret
movl
cltd
and
cmp
std
cli
cs
jl
fisubrl
sbb
adc
jp
inc
js
jne
xchg
incl
mov
dec
ss
out
or
movsl
add
loop
add
cmp
sbb
mov
mov
test
cld
popa
not
fiadds
xchg
pop
or
pusha
mov
icebp
aam
fidivrl
fsubrl
xchg
fcomp
xchg
test
and
jge
inc
xor
fcomp
push
hlt
add
sbb
mov
mov
icebp
mov
add
stos
cli
jnp
and
cmc
mov
ljmp
dec
adc
das
cltd
ds
stc
xchg
mov
loope
jmp
je
enter
mov
cli
dec
outsl
ret
ja
xchg
test
movsb
in
mov
push
lcall
insl
sbb
inc
addr16
sub
cwtl
mov
sbb
mov
cmp
ds
cli
je
adc
aas
mov
nop
fidivl
push
hlt
outsl
sbb
pop
aaa
in
or
mov
rcrl
xchg
mov
sti
aam
fwait
dec
push
sbb
rorb
or
jl
rolb
in
sub
in
lock
mov
pop
adc
mov
sbb
fcoml
inc
xor
or
outsl
fildll
xor
xlat
stc
and
inc
sbb
imul
and
mov
inc
xor
stc
or
jmp
pop
stos
loopne
enter
sbb
xchg
sub
mov
aam
ds
outsl
push
shll
test
cmp
mov
dec
adc
mov
cmpsb
out
dec
xor
lret
mov
ret
push
mov
pop
outsb
mov
js
ficoms
imul
sahf
scas
jbe
cwtl
dec
fstl
pop
cltd
cmp
push
test
popf
xor
add
adc
fwait
cld
push
mov
xchg
iretw
lods
loopne
orl
les
xchg
test
mov
sub
xor
addr16
lcall
fimull
orl
xchg
sub
pop
out
scas
pop
xor
push
lock
jnp
stos
cmpl
adc
js
jns
push
out
mov
mov
test
adc
mov
shl
inc
cmp
call
rcr
lods
mov
in
xchg
mov
mov
sub
fisttps
mov
jb
mov
movl
mov
movl
mov
cmpl
ja
mov
mov
sub
imul
jmp
pushl
push
push
pushl
pushl
call
movl
mov
mov
mov
shrd
cmpl
jge
or
movl
jmp
push
call
shr
mov
mov
xor
shl
xor
or
lea
add
mov
and
mov
mov
movl
shrd
cmpl
jbe
or
jmp
pushl
pushl
call
shr
mov
mov
jmp
adc
nop
xor
cmp
bnd
cmc
cmc
mov
mov
cmpsl
mov
dec
daa
add
and
std
sbb
dec
stc
test
add
push
xchg
orl
ja
and
ss
mov
xchg
ficoms
jns
inc
andl
in
adc
arpl
adc
aaa
jne
push
xchg
lds
lock
jle
xchg
lret
push
inc
mov
int3
roll
repz
jbe
xchg
fcomps
add
jns
les
cs
repnz
sbbl
jge
mov
rcll
and
out
popa
mov
shll
cmc
add
sub
push
inc
rol
mov
int
add
or
fsubl
fdivs
ret
sbbl
cwtl
loope
sbb
add
pop
shll
popl
jl
repnz
adc
mov
mov
push
inc
adc
sub
dec
pop
popa
xchg
jno
mov
rcll
out
test
xchg
fbstp
fildl
fwait
mov
add
mov
les
push
test
mov
in
add
xor
fidivrs
adc
push
mov
xchg
xor
cmp
push
inc
mov
addr16
mov
ret
fnstenv
jle
push
repnz
clc
xor
and
lret
pop
lods
or
arpl
pop
clc
sahf
fldenv
sti
ret
ss
jl
mov
mov
test
out
or
inc
hlt
cmpsb
push
mov
xor
inc
loope
rolb
jle
popf
mov
int3
arpl
or
out
les
and
push
in
mul
sbb
nop
fdivrl
loop
ret
and
shrl
sbb
xor
lods
js
lret
cs
push
das
ret
mov
shll
add
or
inc
jl
or
pop
add
dec
jno
hlt
jmp
jns
mov
cli
loop
arpl
popf
imul
out
stc
xor
rcrb
sub
fisttpl
dec
xchg
push
xor
data16
xchg
push
repz
mov
sbb
push
mov
xchg
adc
mov
fbld
push
pop
imul
shlb
jmp
adc
push
ret
scas
popf
cmpb
or
sbb
jmp
fcom
test
bound
loope
add
bound
in
or
ret
shlb
loopne
lods
into
sub
and
fsubrl
popf
add
outsl
and
dec
jmp
cmc
loope
lock
mov
push
fs
xlat
cld
in
jne
mov
add
add
dec
sahf
xchg
ds
jb
xor
jbe
lret
addr16
pop
cmp
or
fcomp
add
sahf
shlb
sub
xchg
cs
int3
inc
mov
jp
pop
fldcw
pop
scas
fucomp
mov
cltd
or
arpl
divl
aaa
das
inc
sti
mov
lcall
dec
inc
add
add
shll
or
xlat
push
inc
mov
xchg
mov
stos
movsb
xor
push
loop
adc
xor
nop
or
mov
pop
lret
outsb
sbb
pop
jns
push
lret
adc
loope
imul
insl
mov
dec
gs
jne
xchg
test
mov
enter
sti
xchg
icebp
dec
push
push
sbb
mov
out
std
cmpb
mov
pushf
test
dec
jno
aas
mov
aam
mov
xlat
fcmovbe
xlat
insb
in
xchg
dec
push
sbb
sbb
push
mov
cli
inc
repnz
in
mov
outsl
add
lret
ja
pop
push
out
addr16
pop
cwtl
sahf
adc
dec
fidivrs
daa
lcall
mov
fcmovu
test
inc
test
outsb
fwait
lahf
push
adc
fs
dec
mov
push
push
fcomps
stos
sbb
lret
jno
sub
leave
pop
js
or
jge
lds
imull
call
lods
jmp
sub
ficomps
push
and
fidivrs
es
leave
mov
inc
fwait
mov
test
mov
jb
dec
outsl
mov
in
add
rorl
jbe
fwait
pop
cmp
mov
lret
inc
jp
icebp
push
ljmp
sbb
add
les
dec
repz
jnp
and
testb
adc
fnstenv
fcomps
sbb
dec
pop
push
insl
in
cmpsl
push
sbb
mov
sbb
aad
xchg
scas
pop
push
test
xor
xlat
arpl
gs
clc
test
push
gs
out
or
xchg
mov
cld
out
in
cmp
push
xchg
jns
or
aaa
or
mov
xor
inc
or
adcb
xchg
mov
xchg
adc
fcomps
adc
dec
loop
insb
in
jo
leave
add
jmp
iret
popa
mov
int
pop
loope
mov
xor
addl
xor
or
cmpl
jg
andl
jmp
pushl
push
pushl
call
mov
mov
xor
mov
jmp
repnz
push
adc
adc
mov
sub
cmc
cmc
mov
shll
xchg
inc
mov
movsb
pop
rcll
dec
je
and
cmp
inc
int3
rcl
xchg
jnp
rolb
add
shl
mov
mov
sub
sub
and
mov
jge
cmp
flds
sbb
dec
aas
push
loope
inc
in
mov
xor
xorb
lock
imull
icebp
mov
call
pop
cmp
add
pop
and
push
pop
xchg
iret
cmp
aas
dec
imul
pop
fisttps
test
loopne
int3
push
adc
cmp
mov
mov
shl
adc
stos
mov
or
push
in
ss
dec
jge
rclb
push
int
pop
out
add
loope
sti
push
out
push
add
cli
push
sbb
dec
fdivrs
xorl
insb
fisubs
sbb
or
push
push
ljmp
mov
xchg
nop
lock
fsubl
xor
dec
inc
and
lea
aad
cmc
add
stc
add
jns
test
cld
inc
std
mov
xchg
jge
rorb
add
roll
fs
pop
mov
movsl
jne
mov
je
jb
mov
add
mov
jg
fimull
cmp
pop
adc
lahf
jecxz
pusha
sub
add
jecxz
push
rcrl
pop
push
add
push
sbb
jne
loopne
mov
mov
jae
lds
lcall
aad
jge
addr16
jge
xor
sub
push
jge
xchg
sti
testl
and
cld
jle
data16
pop
jno
mov
testl
lock
arpl
aad
mulb
add
sub
bound
inc
loop
dec
movsl
and
push
test
and
repz
dec
enter
je
jmp
pop
andl
and
and
sbb
mov
xchg
mov
add
fwait
in
leave
mov
mov
repnz
cltd
dec
push
pop
mov
inc
push
das
and
into
in
jb
push
fcomps
loope
shlb
repnz
cmp
pop
push
xor
push
push
leave
push
dec
stos
add
push
ret
jecxz
inc
add
into
mov
dec
pop
mov
push
iret
xlat
xor
sbb
cmpsb
popf
mov
fisttpll
adc
sbb
sahf
sub
adc
into
xchg
jnp
out
jno
cmp
xor
sub
imul
and
mov
test
test
rcr
pusha
lret
mov
pop
sbb
adc
adc
fistpll
fsubs
incb
adc
xchg
movsb
sbb
jbe
cmp
mov
iret
jae
jg
lcall
cmp
jo
popa
inc
pop
mov
test
cmp
xlat
jg
ds
push
sub
jno
lcall
loop
out
pusha
push
push
pop
sub
clc
cwtl
or
mov
add
das
loopne
mov
idiv
xchg
inc
jo
rcll
out
xor
pushf
sbb
xor
dec
dec
dec
adc
addr16
js
push
or
imul
cmp
dec
inc
in
jno
push
push
xchg
insb
out
xchg
sub
inc
sbb
cmc
cmpsb
cmp
stos
ror
lahf
push
and
or
xor
bound
mov
daa
out
add
cmp
push
pop
cwtl
add
movsl
and
adc
icebp
xlat
into
addb
je
scas
pop
sbb
mov
in
test
inc
jle
jecxz
in
das
adc
je
pop
cmp
xchg
outsl
xchg
xchg
cwtl
or
cmc
cli
shrl
ja
incb
xor
adc
push
stos
push
loop
sahf
push
push
shl
dec
inc
loopne
pop
or
int
pushf
xchg
sub
add
loope
add
jb
rorb
andl
mov
mov
mov
mov
orl
adc
lret
push
dec
out
add
add
pop
imul
shl
test
daa
mov
aaa
out
in
insb
ss
pop
push
sbb
loop
or
sarl
add
insl
add
aad
pop
inc
inc
mov
in
and
jns
pushf
xchg
push
stos
lret
and
add
push
insb
out
out
pop
mov
bound
out
sub
mov
inc
insl
push
cmp
sbb
insl
outsl
nop
xor
xor
mov
es
shlb
mov
inc
ss
out
je
push
fs
lock
iret
mov
loope
sti
dec
push
js
sub
mov
jne
fdivrs
cld
popf
and
movsb
lcall
push
sub
jnp
or
or
jmp
or
data16
lahf
jp
mov
add
ret
jne
xchg
loop
dec
in
lods
enter
cmpsl
daa
inc
add
jmp
daa
inc
add
dec
loopne
adc
mov
adcl
xor
shl
xor
addl
or
cmpl
jle
and
jmp
push
call
jmp
pop
mov
or
and
loop
shl
mov
mov
cmc
mov
imul
bnd
or
pop
xchg
sbb
out
insl
push
mov
nop
paddq
sbb
and
push
xchg
dec
push
cmp
xchg
addr16
nop
sti
xlat
jmp
aas
xor
sbb
gs
push
daa
dec
nop
leave
and
sahf
pop
or
cs
fcmovnbe
xor
dec
adc
sbb
dec
je
pop
mov
sbb
or
push
rorb
cmpl
and
mov
dec
les
insl
mov
sub
push
cmp
dec
xchg
in
ljmp
test
adc
stos
mov
sbbb
xchg
cmp
or
mov
cli
das
inc
add
cmpsb
bound
xor
enter
shll
xor
xchg
fstpt
lods
stc
cmpb
in
jl
out
das
test
jle
fdivrs
test
pop
movsl
loope
dec
movb
sbb
mov
sub
je
fmuls
sar
loopne
cmp
push
jo
push
mov
xor
aam
xchg
push
push
or
lahf
out
in
add
leave
push
aam
das
xor
cmpsb
popa
or
arpl
ja
cmp
inc
sarb
rorl
or
jge
repz
dec
out
leave
out
mov
and
sub
fists
mov
xchg
xchg
jnp
fwait
sbb
aam
push
pop
cs
orb
mov
sub
add
popf
jns
mulb
push
xchg
jge
insb
mov
inc
push
add
push
ss
pop
jle
cmc
insb
mov
mov
pop
jnp
mov
vminss
xor
push
das
cmp
je
scas
cmp
fs
xlat
mov
push
pop
mov
sbb
push
xor
mov
icebp
xor
xor
hlt
or
push
adc
sub
adc
add
jbe
cmpsb
roll
pop
inc
push
or
push
dec
fisttpl
cmp
push
mov
xchg
icebp
xchg
aaa
andl
sbb
jae
dec
jecxz
jmp
popa
fidivl
mov
ds
xor
or
push
movsb
adc
cmp
adc
jo
sarb
cwtd
sbb
pop
mov
mov
jmp
pushf
movsb
mov
xchg
arpl
loopne
shl
mov
push
inc
xchg
fiadds
jg
inc
lret
add
xor
test
loop
enter
and
xor
cwtl
stos
mov
leave
aaa
pop
or
push
out
add
lods
push
mov
jle
fnstcw
movsl
xchg
int3
insl
outsl
jno
cli
inc
mov
mov
das
and
lods
mov
xor
pop
and
je
inc
cmp
jge
sbb
xchg
mov
mov
mov
push
push
out
mov
dec
xchg
xcrypt-ecb
cmpsl
dec
sub
mov
sub
push
push
mov
mov
xor
xchg
in
and
or
mov
jno
or
mov
sub
mov
mov
xchg
and
mov
inc
cmpsl
mov
stc
adc
push
add
notb
xchg
mov
push
mov
lret
cmp
shll
mov
iret
sbb
mov
in
push
sbb
pop
negb
dec
jmp
mov
adc
inc
ficoml
push
ret
rcll
imul
movsl
rclb
add
clc
add
push
je
xchg
stos
popa
scas
out
mov
js
pusha
dec
add
mull
xor
push
arpl
and
loop
lods
push
cli
sub
and
negb
inc
pop
cmp
test
mov
mov
or
mov
lock
sub
jle
mov
lock
pop
scas
int
shr
push
sbb
inc
ss
mov
jno
iret
dec
mov
sub
jns
sub
adc
rcll
jg
xor
and
mov
aad
fistpl
mov
sbb
testl
pusha
bound
leave
fnstcw
adc
add
subl
call
mov
fcomip
jg
sti
fwait
sahf
sub
shrb
cmp
ss
std
jle
xor
das
loope
int3
mov
lcall
jge
cmp
xor
lea
jno
fs
shl
ds
fs
push
sbb
push
in
insb
adc
scas
mov
out
mov
sub
cld
scas
sub
push
scas
sub
cmp
add
fs
hlt
mov
add
aam
add
sub
pop
clc
fsts
jnp
into
das
notl
inc
xlat
push
sbb
lcall
mov
into
femms
fs
mov
xor
jne
nop
outsb
cld
imul
mov
loop
cmp
cmpb
sbb
shll
arpl
ss
icebp
std
lock
fwait
repz
insb
jecxz
lea
mov
mov
mov
shrd
shr
mov
or
mov
orl
shl
not
mov
adcl
xor
xorl
xor
xorl
jmp
sub
out
fidivl
aam
or
loopne
repnz
inc
and
cmc
mov
sub
sbb
xchg
mov
test
mov
push
rcl
out
stos
stos
lea
cmp
int3
sbb
mov
push
test
mov
jg
sub
jo
pop
dec
daa
dec
push
jle
shrl
test
mov
addl
arpl
fcoml
add
pop
cmpl
inc
nop
iret
xchg
xchg
xor
in
fwait
dec
push
jbe
adc
cld
push
lea
test
jns
lods
arpl
insb
sbb
jb
dec
sbb
test
inc
sub
jl
fxtract
jge
movsb
shl
and
shlb
in
pop
aam
push
cld
push
adc
inc
mov
iret
jmp
xor
imul
sbb
push
add
jmp
shlb
mov
sbb
jae
pop
hlt
idivl
dec
pop
sbb
scas
add
cmp
xor
mov
mov
jns
xchg
cmp
adcb
push
mov
lcall
dec
pushf
subl
loopne
aam
push
jecxz
mov
daa
sub
loop
sub
iret
stos
mov
imul
jge
xchg
imul
sub
addr16
pushf
adc
int
arpl
int3
adc
inc
cmp
adcb
movsb
mov
or
cmp
push
mov
sarb
pop
mov
xchg
pop
pop
push
push
mov
stc
add
dec
cmp
jo
in
lcall
cld
push
inc
lcall
stos
sbb
pop
daa
imul
inc
cmp
fbstp
test
add
jge
inc
adc
or
pop
xor
pop
sbbl
repnz
add
jecxz
pop
cmpb
xchg
imul
lahf
push
sti
inc
loop
fcompl
fimuls
in
insl
stos
pop
push
lock
sub
xchg
jo
fidivrs
adc
inc
fsubl
out
mov
pop
lahf
leave
fnstenv
cmpsl
in
jg
push
jge
popa
push
scas
dec
inc
ret
arpl
outsb
cwtl
jg
scas
cmc
xchg
pop
or
sahf
test
xor
es
fcmove
imul
test
xchg
icebp
xchg
insl
fcmovnb
pop
fwait
out
sub
mov
adc
dec
shlb
pop
xchg
fldcw
or
or
push
lcall
lea
or
cltd
popa
dec
cmc
mov
push
dec
es
adc
adc
outsl
push
jbe
push
inc
test
jp
fldl
pushf
dec
fbld
xchg
jb
roll
jge
jb
sbb
adc
fwait
sar
mov
fsubrs
cmpsl
fcoms
lret
imul
jl
movsb
arpl
cmc
push
inc
and
mov
ret
mov
aaa
jae
sahf
xor
add
push
fstl
xor
out
std
xorb
mov
mov
xor
lods
je
das
int
popa
or
pop
inc
nop
ljmp
jmp
mov
sarb
clc
daa
sti
neg
fcomi
outsb
mov
ljmp
or
or
and
inc
mov
jg
ret
icebp
inc
mov
sub
mov
mov
rclb
and
jno
cltd
negb
stos
ljmp
pop
loop
test
xchg
mov
mov
je
add
jp
add
adc
pop
or
lret
rolb
leave
dec
sbbl
stos
adc
inc
mov
sub
pop
out
inc
or
inc
aaa
inc
push
das
adc
jg
lcall
movsl
hlt
jle
loop
and
adc
and
loopne
jmp
jp
pusha
in
push
mov
ror
xchg
jne
int3
and
sbb
cmp
fsubl
lahf
popf
negb
loop
or
leave
add
movswl
mov
cmp
pop
sahf
subb
popa
push
nop
mov
pop
ja
fst
mov
scas
movsl
dec
xor
sbb
fistpll
adc
lock
and
test
je
or
xchg
sbb
adc
icebp
ret
push
mov
or
jae
daa
mov
fistl
pop
gs
mov
xor
fsts
xor
call
inc
mov
or
and
hlt
movsb
jp
push
inc
sbb
sub
hlt
cmc
fcoms
int
jecxz
pop
out
shrb
push
mov
mov
in
push
repnz
call
dec
mov
dec
adc
stos
dec
shrl
push
shr
rcrb
sahf
gs
jae
or
pop
inc
lock
xchg
fwait
jb
dec
cmp
shlb
pop
lcall
mov
or
mov
into
xchg
mov
shlb
aad
jae
sbb
shll
imul
cmp
iret
jo
out
sub
mov
in
or
incl
xor
cltd
test
cmp
adc
fistl
jns
xor
mulb
add
sti
dec
repz
push
pop
pushw
pop
jae
lock
cmc
cmc
mov
jb
out
xchg
int
lahf
inc
dec
xor
push
in
and
pushf
xchg
push
jno
test
xor
fiadds
data16
fidivl
adc
inc
cmovb
mov
adc
cmpsl
push
in
std
cs
sub
out
sarb
cld
push
mov
test
jns
dec
call
adc
dec
push
aam
jbe
fildll
rcr
sbb
pusha
mov
out
adc
cmpsl
xor
or
dec
xchg
aad
mov
pop
push
repnz
mov
sbb
in
addr16
and
scas
pop
push
mov
ja
je
andb
pop
inc
mov
pop
dec
push
and
leave
xchg
sbb
int
adc
clc
add
or
xchg
add
les
fcom
adc
mov
xor
mov
aas
iret
mov
lret
adc
sub
je
fwait
sub
out
movsl
mov
push
cltd
mov
int3
mov
xchg
scas
aas
cmpsl
dec
negb
notl
nop
mov
dec
bound
jo
mov
add
enter
shl
sub
xor
icebp
dec
mov
daa
adc
inc
xor
push
lcall
dec
push
inc
pop
in
fsubs
cmc
fld
and
sbb
and
int3
mov
push
das
lret
scas
test
in
sar
mov
mov
insb
mov
stc
sub
cmpsl
jb
popf
add
insl
pop
fs
stos
gs
mov
enter
or
cs
repnz
xlat
out
sub
cmpl
dec
nop
bound
aas
inc
adc
cmpsb
xor
jnp
pop
rcrl
cmpsb
packssdw
clc
inc
cmp
push
xorb
cmp
int3
pusha
orl
ja
adcl
vcvttsd2si
iret
push
icebp
xorb
movsl
add
ret
ja
xchg
mov
push
mov
test
out
outsb
in
jl
pushf
rcrl
aas
xor
fwait
push
insl
xchg
add
dec
push
lahf
movsb
gs
and
jnp
adc
push
out
into
mov
mov
jmp
stc
cwtl
into
push
xor
fiaddl
shl
stos
popa
les
and
out
and
aam
lock
orb
inc
jno
outsb
pop
pop
shrl
xchg
jle
out
pop
loop
pop
bound
sar
push
lret
lcall
mov
sub
mov
adc
inc
ret
in
lcall
ljmp
push
ficoms
out
and
mov
or
jl
enter
sub
aaa
push
inc
mov
test
in
addl
mov
lea
and
mov
pop
pop
mov
out
inc
push
insw
pushf
sub
sbb
mov
cli
fs
inc
jmp
cltd
mov
or
shlb
cmp
lcall
push
popa
xor
mov
or
jo
inc
inc
mov
lahf
jo
jnp
les
push
mov
loop
je
stc
mov
cmp
jne
rcrl
xchg
lock
mov
push
clc
test
imul
popf
bound
cmp
mov
inc
js
add
negl
in
iret
sbb
out
ljmp
push
or
push
dec
pop
inc
pushf
js
ss
hlt
outsb
popf
imul
lahf
mov
data16
fmull
dec
add
out
sbb
bound
icebp
sbb
jo
and
push
lds
pop
or
jg
sti
out
dec
or
int3
or
or
xor
push
inc
push
fidivl
pop
cld
sub
sbbl
mull
lods
pop
push
push
dec
mov
mov
fstl
push
out
ret
aas
imul
repz
xor
mov
cld
lods
and
popa
inc
jb
ficoms
pop
xchg
xor
ds
mov
jne
push
jmp
fcmovnu
decl
scas
and
push
arpl
roll
packssdw
test
xor
add
cmp
add
insl
inc
cli
repz
xor
sub
hlt
in
nop
into
adc
sbb
xor
mov
adc
rorl
in
aam
les
jg
imul
push
test
out
shl
mov
sarb
ja
dec
cmp
aad
sub
xchg
addr16
mov
push
clc
in
xor
test
sbbb
jnp
jae
jg
pop
xor
inc
jl
cmp
cwtl
or
adc
and
sub
and
xchg
pop
outsb
cld
arpl
or
mov
push
xor
test
add
adc
in
xchg
cmpsb
flds
dec
push
pop
js
lods
sbb
sbb
sar
mov
mov
jno
fiaddl
xchg
testl
std
jl
clc
sbb
and
imul
mov
iret
or
daa
mov
in
pop
lret
inc
pushf
jns
add
mov
sub
cltd
add
mov
inc
mov
movsb
cli
jae
nop
xchg
int
push
xchg
add
ret
lods
test
xchg
pop
shlb
out
or
loope
add
mov
sbbl
or
subl
mov
negl
mov
sub
shrd
cmpl
jl
sbb
jmp
push
pushl
push
call
shr
mov
mov
xor
shl
xor
adc
or
lea
sbb
jmp
inc
mov
fimull
pop
add
das
pusha
lret
repnz
cld
cmc
cmc
mov
adc
jbe
fcmovb
mov
movsl
daa
mov
mov
lcall
aas
daa
rol
push
cmp
ja
popf
outsb
lods
fildll
cmp
scas
es
cmpsl
popf
sbb
shlb
int3
push
sahf
fcomp
enter
mov
add
test
xor
mov
aad
leave
loop
inc
jecxz
push
or
loopne
aad
loope
mov
sub
xor
xchg
das
lahf
xchg
ja
pop
pop
rcr
fimull
arpl
lcall
jg
je
mov
fnstsw
shr
les
rcrb
icebp
pop
stc
sub
aad
and
mov
out
lods
sub
xchg
cs
mov
push
inc
mov
sub
ljmp
pop
jl
jae
mov
dec
mov
ret
cmp
cmpsl
and
push
xlat
xor
sbb
scas
jmp
mov
aas
lret
push
jo
dec
pushf
mov
shll
test
repnz
adc
test
cmp
adc
lret
cltd
outsb
mov
mov
movsb
pop
fldcw
sbb
push
mov
in
fcmove
add
jecxz
fwait
inc
mov
jnp
mov
aas
in
adc
add
lods
cmpb
sbb
fistps
in
mov
and
sub
mov
icebp
or
in
and
das
inc
fnstcw
mov
push
pop
add
jp
stos
mov
std
mov
dec
or
xor
cmp
leave
mov
in
mov
je
sub
rclb
cmp
xor
rcl
dec
xchg
adcb
cli
jle
xorb
lds
insl
sbb
ret
mov
stos
pop
fdivrs
sbbb
call
and
mov
leave
stos
into
xchg
push
and
pop
push
xor
fbld
js
mov
lods
shrl
jle
cltd
loop
ffree
jmp
xchg
cs
inc
add
xlat
movsl
pop
clc
clc
add
push
ret
or
pop
arpl
mov
xchg
test
out
ss
ja
imul
sub
daa
push
jnp
mov
lcall
cmp
add
fimuls
jae
outsb
lods
and
loop,pt
test
stc
call
aas
cmpsb
mov
and
data16
dec
sbb
leave
repz
and
push
cltd
movsl
inc
dec
and
mov
adc
or
lea
fstpt
dec
adc
or
inc
or
sub
arpl
and
rcll
cmc
cmp
imul
mov
mov
cwtl
inc
lcall
xor
or
add
pop
cmp
ja
mov
xor
mov
imul
mov
sahf
subb
repz
aas
fwait
in
ffreep
and
sub
jecxz
pop
sbb
dec
or
lret
lretw
fisttpll
aas
nop
stos
lret
inc
mov
push
jmp
rorl
sub
jno
xor
or
test
and
sbb
fdivrs
sarl
in
mov
mov
xchg
rcrb
push
xlat
push
pop
lods
inc
pop
mov
cli
fcomps
jmp
mov
push
push
cltd
pusha
nop
mov
stos
sarb
xchg
push
or
adc
mov
push
cwtl
outsl
ss
or
lods
inc
mov
inc
cli
xchg
mov
scas
rorb
scas
sahf
sbb
sub
enter
shlb
push
jg
cmp
adc
pop
lods
mov
ljmp
dec
jb
lret
pop
xchg
aad
and
cs
into
add
scas
jmp
pop
iret
subb
out
dec
lret
and
xchg
push
stc
loopne
rcl
cmp
bound
xor
lods
mov
sbb
call
and
xchg
adc
mov
jmp
rolb
jne
jl
or
mov
addr16
lods
loop
jns
loopne
mov
jl
add
mov
jmp
cmp
loop
xor
call
and
ja
xor
xchg
in
cltd
mov
pop
push
push
dec
add
aas
jno
jo
add
jb
mov
fcoms
inc
xor
scas
mov
mov
mov
sahf
cltd
add
std
mov
inc
out
adc
int3
shrb
and
inc
push
push
push
in
dec
inc
xor
arpl
cmp
inc
sub
cmp
pusha
mov
fcoms
jg
daa
inc
cwtl
cmp
pusha
out
test
adc
enter
sbb
jae
notb
in
mov
js
sub
mov
xor
aad
jno
push
in
xchg
imul
add
push
gs
ror
mov
dec
inc
movsl
xchg
ja
fists
adc
cmp
pop
cld
fisttpl
ret
jecxz
hlt
rclb
pop
pop
int
jb
pop
and
jb
scas
outsb
mov
xchg
mov
mov
adc
mov
mov
cmpl
jl
movzwl
sbb
mov
jmp
pushl
push
pushl
call
jmp
mov
repnz
mov
and
ds
and
xlat
lock
cmc
cmc
mov
mov
and
xor
scas
mov
aaa
pop
cltd
movl
pop
jae
int
jmp
mov
sub
leave
jmp
add
and
mov
sahf
roll
adc
add
aad
mov
cmp
pop
nop
add
add
ja
jmp
dec
cmp
cmpsl
outsl
pop
mov
xchg
cmp
jnp
mov
xchg
push
sbb
ljmp
rcl
mov
insb
xchg
in
xchg
mov
sub
aad
xchg
pusha
sarl
xchg
in
or
dec
or
movsb
test
out
enter
mov
mov
sbb
sbb
cmp
xchg
iret
cmp
mov
aas
rorl
test
popf
mov
pop
shrb
mov
mov
mov
jl
mov
sbb
int3
mov
cmp
sub
push
daa
gs
sbb
xchg
fidivrs
push
cli
fcomps
jbe
mov
xchg
mov
popa
inc
push
pop
add
jae
add
rep
jae
xlat
jge
dec
in
dec
pusha
pop
pop
in
sar
xchg
mov
cltd
popa
dec
popa
aas
fisttpll
sahf
sub
cmpsl
xor
addb
jg
adc
fsts
cli
repz
loopne
inc
mov
rcl
int3
xchg
xchg
ss
push
sahf
cmp
shll
inc
sti
lods
mov
push
test
sub
sbb
push
add
xor
or
jg
pop
test
mov
stos
cmp
pop
movb
xor
cmpsl
js
out
pop
iret
shll
xchg
js
adc
xor
jae
pop
loope
and
frstor
xor
cmp
cmp
cmp
imul
movsb
cmp
jne
sbbb
pop
pusha
or
pop
fisttps
adc
test
adc
rcr
push
mov
xchg
pushf
or
aas
jb
jne
sub
test
adc
imul
icebp
jecxz
lds
mov
xchg
mov
inc
in
rcrl
xchg
or
loope
jge
test
jo,pt
stos
cmp
mov
lods
out
fwait
leave
add
mov
dec
cmp
ss
jbe
jbe
xor
rcl
dec
cmp
sbb
orb
dec
jnp
push
fucom
iret
stos
cmpsl
pushf
jecxz
decl
jmp
pop
mov
cmp
mov
ret
pop
ret
xchg
mov
jp
ja
into
out
cmp
xchg
xchg
sub
ja
popf
add
fistps
or
xor
adc
or
pop
sbb
dec
pop
aas
mov
push
xchg
push
pop
jecxz
inc
mov
scas
inc
adc
jg
repz
in
mov
stos
dec
push
out
sbb
and
push
dec
mov
pop
mov
xchg
add
or
fimull
shlb
mov
xor
ja
js
adc
push
mov
das
sub
lea
enter
add
cmp
enter
add
mov
jbe
addr16
mulb
cwtl
pop
les
mov
fadd
sbb
sub
add
sahf
mov
push
xor
mov
mov
jno
sbb
jmp
fistpll
fsubrp
inc
in
ds
dec
in
push
xlat
mov
dec
daa
push
out
pop
dec
outsb
mov
out
jne
adc
or
aas
pop
push
shlb
jp
mov
loop
fstpt
xor
add
adc
das
or
mov
jle,pn
and
repz
pusha
lcall
mov
rorb
loop
pop
push
xchg
xchg
in
insl
inc
pop
mov
mov
dec
loopne
dec
xor
dec
addr16
bound
push
xchg
mov
mov
fs
cmpsl
mov
movsb
push
imul
movsb
out
mov
pop
jmp
xchg
test
into
movsl
movsb
addl
scas
test
testb
adc
jg
mov
mov
outsb
pop
insb
sbb
sbb
jb
xchg
adc
das
or
xor
scas
or
mov
clc
adc
cld
xor
test
inc
ret
mov
ret
pop
or
adc
cmpsb
dec
int3
in
mov
insl
add
pusha
cld
sub
sub
xor
cmp
js
gs
jnp
sahf
jo
mov
xor
enter
and
xor
and
addr16
lock
cmp
xchg
fucomip
hlt
int3
sbb
jne
shlb
xchg
shl
fs
test
fimull
mov
scas
in
fisubl
das
scas
bound
sar
gs
inc
adc
add
out
icebp
or
shl
jge
pusha
dec
in
sub
insb
mov
ljmp
pop
js
xchg
imul
imul
jo
add
repnz
pop
mov
cld
wbinvd
jb
iret
adc
cwtl
ret
push
and
lods
fsubrs
jnp
cmp
ret
xor
push
shrd
shr
mov
mov
addl
xor
sbbl
shl
xor
mov
orl
xor
subl
or
cmpl
ja
xor
jmp
push
pushl
call
mov
mov
add
mov
mov
shrd
shr
mov
jmp
pop
jb
test
fnsave
adc
xchg
repnz
cmc
mov
inc
pop
stos
cld
sub
jecxz
sbb
cmp
notl
fs
mov
and
adc
out
mov
lods
or
jp
shr
jmp
inc
test
cld
outsb
and
popf
cmp
and
adc
jns
sub
das
rolb
mov
lret
rcll
pop
ljmp
jecxz
aaa
jae
dec
ss
icebp
stos
mov
arpl
cld
mov
xor
fwait
sti
xor
sbb
sti
mov
or
daa
jp
pop
add
or
jmp
jg
xor
rcrl
mov
pop
std
and
fldt
lcall
mov
cmp
rolb
xor
mov
mov
ret
inc
aaa
push
xor
rcl
dec
dec
dec
cmpsl
leave
xor
jae
lret
shl
xor
imul
cmp
cmp
mov
test
mov
ror
xchg
lahf
jg
mov
imul
popf
dec
and
in
pop
rolb
pop
push
cmp
pop
and
sub
pop
push
aam
add
inc
push
mov
dec
xor
lea
ja
out
fwait
inc
push
mov
jae
adcl
mov
mov
insl
adc
cmp
lods
sahf
mov
jecxz
lret
jo
fbstp
pop
xor
add
idivb
test
xor
mov
push
in
sbb
lret
sti
lds
mov
cmp
mov
sub
xor
and
cmp
out
nop
inc
nop
jl
pop
je
jo
pop
scas
inc
cmp
lods
sbb
cmpsb
dec
into
arpl
fnstcw
cmc
and
xor
cmpsl
jbe
push
pushf
dec
in
clc
imul
stos
mov
test
push
xor
mov
shr
hlt
sahf
add
pop
cmp
in
jb
mov
jb
mov
cli
jl
fnstsw
or
lods
bound
jle
xor
adc
mov
jle
dec
leave
push
lret
xor
adc
out
or
ds
imul
fwait
test
clc
faddl
test
in
mov
inc
mov
scas
lea
arpl
pop
cmp
mov
mov
mov
pop
mov
cmp
bound
ljmp
add
int3
call
psubw
push
jb
mov
mov
movsb
jmp
les
lods
pop
pop
pop
xchg
mov
ds
xor
loop
xorb
mov
and
fs
fsubr
sbb
and
inc
lret
mov
sbb
pop
sbb
mov
jge
and
stos
cmpsl
pop
pushf
aam
jp
movsl
hlt
push
addr16
pop
sub
fsubs
dec
fisubs
jae
fists
dec
hlt
lock
add
jl
stc
and
push
in
test
or
jbe
subl
pop
xchg
enter
jo
lods
push
lock
insl
lock
icebp
cmp
call
repnz
movsl
lcall
mov
mov
and
pop
pushl
jne
or
sub
cmp
xor
xor
fisubrs
pop
pushl
push
dec
push
enter
ss
test
mov
hlt
pop
rorl
dec
push
adc
ret
and
mov
lods
cmp
std
bound
insb
push
xor
nop
adc
xor
mov
jno
xchg
sbb
les
test
aam
cmp
jge
fwait
push
jb
jb
shlb
cmp
pop
cli
ss
mov
add
cwtl
dec
ficoms
mov
push
leave
sbb
cli
mov
inc
mov
outsb
lock
sub
in
fimull
cltd
icebp
xchg
lret
fistpll
sbbl
arpl
sbb
mov
pop
push
cmp
mov
sbb
mov
xor
call
jmp
test
jne
sar
sarl
pop
add
shlb
lods
add
inc
addb
pop
lods
push
cwtl
inc
sbb
jmp
fsubrl
inc
or
popf
cmp
cwtl
vpminsw
in
gs
xchg
sbb
daa
jno
sub
clc
in
mov
sarl
sahf
xchg
test
push
cmp
lret
dec
inc
pop
inc
dec
fstl
lods
mov
xor
sub
in
fistpll
fisttpl
movsb
das
aam
jle
xor
ficomps
testl
lods
mov
aam
inc
xchg
or
mov
sarb
lcall
dec
pop
mov
adc
sub
enter
mov
mov
ss
xchg
aas
mov
popa
std
mov
lock
and
and
adc
xor
enter
ja
sti
cli
adc
adc
push
es
push
lds
nop
push
sbb
dec
mov
andl
xor
xor
or
mov
mov
xor
lea
cmpl
jl
xor
or
mov
sbb
jmp
push
call
mov
mov
shl
orl
mov
cmpl
jl
subl
jmp
push
push
call
shrd
shr
mov
mov
xor
xor
addl
or
and
mov
addl
jmp
fsub
inc
in
inc
or
sarl
mov
das
xchg
in
and
cmc
mov
movsb
inc
dec
xor
stos
cmp
mov
std
mov
xlat
loop
sbb
sti
cmp
jle
xchg
push
inc
xchg
jno
adc
mov
push
leave
xchg
lret
xor
shll
dec
jns
or
push
fmuls
xchg
negb
mulb
loope
js
pushf
mov
cmpsb
cmpsb
adc
pop
leave
lret
push
and
fwait
mov
aad
cltd
mov
adc
cmp
ja
pop
scas
push
xor
push
fstps
lods
addr16
stos
adc
inc
mov
mov
push
inc
dec
jno
dec
lock
pushf
xchg
xor
sub
pop
push
sbb
ja
lods
frstor
cli
push
push
lods
adc
xor
pop
mov
or
sbb
jb
or
fwait
test
or
loope
push
mov
cmpl
idivb
fdivs
out
mov
mov
movsb
mov
imul
cltd
cmp
cmc
pop
shr
adc
mov
mov
add
or
out
sti
mov
scas
ja
imul
xchg
das
jecxz
jmp
pop
xor
mov
pop
push
les
mov
sbb
push
aas
popf
jl
pop
es
lds
mov
jg
test
cs
sub
push
xchg
and
fwait
adc
scas
dec
jl
mul
imul
adc
mov
call
ljmp
fwait
rcr
pop
divl
pop
cmc
ljmp
sbb
push
xor
adc
or
cs
xchg
icebp
ljmp
add
imul
test
xchg
ljmp
mov
call
imul
jae
cmp
in
nop
sbb
adc
and
mov
mov
sti
lret
stos
out
inc
mov
jecxz
cwtl
mov
xchg
test
ss
inc
shr
inc
jmp
insb
bound
and
jo
dec
in
cmp
ret
shl
lods
arpl
rorl
andnps
rorl
jb
rclb
dec
enter
adc
andps
mov
movb
add
lcall
ss
cmp
fisubrl
lea
jecxz
shrb
ror
cld
hlt
fmul
jp
mov
ja
test
cwtl
mov
jnp
adcb
mov
adc
int3
out
cmpsb
pop
jae
fdivs
mov
loop
mov
fcoml
xchg
in
lret
repz
shr
rolb
cmp
adc
adc
lods
xor
rcrl
jmp
fisttpll
je
pushf
data16
pop
inc
jne
mov
sbb
shr
dec
loopne
adc
lods
push
jmp
add
out
mov
or
out
jp
push
add
inc
aad
and
mov
das
fsubp
jl
stos
pop
push
nop
faddp
pop
aad
xchg
test
mov
sub
or
movsb
or
inc
int3
dec
xchg
xor
xchg
mov
fisttpl
xor
push
add
push
fstpl
fnstsw
xchg
push
ss
fistpl
pop
dec
mov
or
add
mov
ja
call
cltd
fistps
insl
shr
lea
out
push
loop
je
cli
cmp
jns
sub
mov
xchg
cwtl
pop
fnstsw
fdivs
imul
jecxz
in
xchg
sub
lods
loopne
push
mov
cwtl
lea
mov
pop
pop
lcall
xor
push
scas
imul
jmp
daa
mov
fs
cmp
jbe
inc
cmpsb
dec
cld
sub
sbb
mov
enter
inc
mov
and
hlt
sub
sub
sub
sbb
mov
xchg
cs
daa
add
add
mov
inc
gs
jae
lcall
fnstsw
add
sub
flds
ficoms
or
std
push
jns
lret
test
mov
stos
inc
or
mov
clc
cmpsl
ja
movsb
xchg
add
pop
das
sub
repz
into
dec
inc
daa
ror
push
and
jae
push
push
xchg
movl
arpl
lds
dec
and
loope
sti
dec
jns
push
idivl
sbb
fnsave
ret
mov
or
cwtl
fwait
jae
mov
int
dec
insl
imul
jne
arpl
in
dec
push
mov
mul
out
adc
lcall
ret
xor
lods
mov
ret
fs
lods
mov
xor
dec
jne
andb
faddl
mov
mulb
arpl
xor
fs
cmpsl
ds
pop
inc
dec
stos
inc
cmpsb
jns
adc
mov
sti
lret
mov
pop
cmp
xor
xchg
pop
arpl
imul
addr16
sbb
xor
mov
inc
push
out
xchg
daa
pop
insb
ja
loope
xor
mov
ljmp
push
xor
push
js
pop
nop
or
shrb
out
movsl
movsb
dec
jmp
push
jbe
in
in
jp
je
xchg
inc
mull
fistpl
shl
sbbl
mov
subl
mov
adc
mov
or
orl
mov
sbb
mov
shrd
subl
shl
jmp
shll
pop
aad
inc
jecxz
push
sub
stos
leave
cmc
cmc
mov
shll
mov
xchg
xor
inc
mov
popa
lret
das
mov
jno
xchg
repz
aad
mov
dec
mov
and
dec
jo
loope
adc
pop
cmp
mov
dec
xchg
int3
aaa
scas
dec
inc
outsl
icebp
addr16
xor
call
fs
dec
xor
les
xchg
jno
lahf
inc
xchg
xor
mov
sti
test
imul
ret
xchg
mov
sub
and
aaa
aaa
lods
mov
sbb
pop
mov
stos
mov
iret
sub
rcrl
pop
ljmp
jmp
adc
lock
out
icebp
inc
lret
jp
sti
mov
pop
inc
pop
jno
dec
daa
inc
and
test
inc
bound
xor
sti
pop
mov
mov
cmp
mov
nop
repnz
sub
mov
mov
add
call
push
imul
lret
mov
push
mov
pop
pusha
or
mov
mov
add
and
cmp
jne
imul
or
lret
push
push
mov
lea
xor
pop
int3
jge
bound
mov
ljmp
sub
inc
ds
xchg
std
mov
push
sub
shl
push
addl
cltd
push
leave
cmc
sub
or
cmp
ret
push
or
jecxz
movsb
dec
loop
dec
push
mov
icebp
jno
jge
cmc
and
data16
mov
jecxz
jg
fisubs
jmp
and
pop
push
add
ucomiss
add
std
mov
xchg
dec
or
sbb
push
scas
add
bound
test
js
fstps
or
jp
mov
out
gs
int3
pop
mov
mov
ja
push
mov
mov
enter
stos
in
xor
push
fcoml
insb
dec
push
movsb
cmp
inc
loopne
stos
lahf
cs
sbb
xor
in
mov
cmpsl
test
xchg
dec
mov
pop
dec
stc
lret
adc
pusha
fisttps
addr16
sbb
inc
call
mov
ja
stos
in
in
cmpb
jle
mov
mov
sbb
push
xchg
mov
xor
mov
sbb
mov
inc
adc
sub
shll
stos
pop
subl
add
imul
xchg
cmp
pushf
cwtl
daa
xor
loope
jl
mov
cwtl
fcmovb
sub
bound
cmp
loope
ljmp
ss
mov
fcoms
sahf
or
repz
stc
fstp
pop
jmp
or
or
dec
js
sarl
es
inc
ret
pop
daa
fcmove
test
and
les
lods
int
mov
in
xlat
or
jp
mov
jge
jo
adc
out
lods
jbe
fsubs
cmp
pop
shlb
push
pop
int3
jns
out
pushf
inc
sahf
mov
ss
test
sbb
stos
test
movsb
ds
pop
jecxz
adc
imul
mov
cmpsl
scas
mov
decb
aas
into
mov
jae
xor
rorb
addr16
fsubl
jl
push
jae
sub
push
fistl
mov
sub
orl
inc
dec
cmc
fsubs
stos
xchg
subl
xchg
dec
insl
xor
cmp
xchg
hlt
mov
popa
shl
mov
mov
scas
mov
inc
data16
xchg
jl
xchg
sub
and
lods
inc
adc
ja
aad
bound
movsb
inc
arpl
ljmp
jo
cmc
mov
cmp
or
mov
aas
mov
fnstcw
scas
mov
sar
cmpb
or
mov
rcll
xor
gs
aas
in
dec
cmp
movb
idivl
xchg
cmp
xchg
sub
mov
addr16
int
dec
inc
gs
fbstp
add
jmp
orps
xor
sub
bound
lcall
jbe
cmpb
pusha
rclb
pop
in
mov
incb
je
xor
mov
rcll
fs
cwtl
fstps
pop
shrl
divl
sbb
cmp
jnp
xor
mov
mov
mov
clc
scas
scas
inc
and
jge
push
mov
pop
incl
or
in
rcrl
push
std
adc
movb
ljmp
sub
fldl2e
in
and
jp
aad
lods
insb
scas
sbb
lock
push
sahf
mov
rol
std
clc
jae
mov
or
inc
rcll
lret
pop
adc
sub
jbe
test
sti
pop
lret
add
lcall
adc
dec
inc
fsubl
lcall
scas
adc
imul
adc
loope
test
mov
fisubs
ja
cld
push
dec
pop
jle
pop
cltd
stc
aad
mov
cltd
and
imul
push
cld
jnp
inc
jmp
outsl
dec
out
popf
subl
and
add
mov
adcl
mov
cmpl
jb
add
jmp
push
call
xor
mov
xor
or
mov
dec
orl
not
and
sub
xor
cmpl
jl
jmp
push
push
push
call
mov
mov
xor
or
jmp
bound
fdivs
movsl
fnsave
shl
cmc
mov
cmpsl
and
jg
dec
mov
lods
adc
inc
nop
inc
jp
into
in
mov
xchg
fsubrl
xor
shr
cmp
out
mov
push
loope
push
in
add
cmpb
sub
push
add
pop
mov
addr16
push
outsl
in
sti
xchg
fs
js
jg
pop
scas
repz
in
mov
cs
pop
xchg
rclb
outsl
adc
fistl
cmp
icebp
jb
popa
sub
fnstcw
mov
in
push
cwtl
mov
es
mov
data16
repz
inc
mov
mov
xor
aad
adc
iret
add
test
ret
aaa
mov
mov
insl
pop
dec
push
lahf
shl
mov
test
jge
in
leave
dec
push
mov
sbbb
stc
sbb
sbb
sub
cmp
cwtl
or
lret
mov
je
dec
dec
ds
or
lock
mov
int
sbb
xchg
es
xchg
push
lcall
dec
rcrl
dec
scas
pop
nop
mov
push
and
push
cmp
or
add
lea
movsb
mov
repnz
sbb
cmpsl
ja
push
mov
mov
in
cmpsl
dec
xchg
cmp
faddl
stos
pop
leave
adc
sbb
mov
mov
testb
push
aas
and
push
push
dec
xchg
dec
iret
push
repz
push
in
aad
xlat
test
loopne
fildll
sbb
scas
xor
aad
xor
cmp
loopne
pop
je
inc
ljmp
daa
and
enter
add
out
dec
cmp
mov
mov
fadds
lock
mov
repz
cwtl
sbb
inc
jnp
ds
pop
push
test
push
out
jle
mov
js
test
out
pop
into
jmp
rclb
mov
sbb
xchg
in
dec
xchg
dec
sar
ds
mov
pop
leave
jo
movq
inc
dec
out
lret
pop
cmp
out
mov
stos
fbld
test
dec
mov
dec
mov
enter
push
insb
ljmp
pop
adcl
jb
rorb
arpl
lds
jl
iret
in
in
aaa
mov
and
add
loope
push
push
scas
push
mov
sub
sbb
add
pop
jg
cmp
sub
mov
cmp
lahf
jno
lock
pop
daa
xchg
xchg
jmp
imul
inc
or
sbb
push
mov
fldenv
dec
add
sbb
fidivs
inc
mov
mov
or
into
arpl
sub
pop
mov
lods
and
ficomps
xchg
cmp
subb
loopne
sbb
xchg
test
xchg
je
scas
sub
and
inc
cmp
add
fnstsw
lods
jb
push
jo
sub
sbb
jns
sub
push
sbb
pop
cmp
xor
cld
insl
ror
xchg
inc
test
cmp
pop
mov
jle
push
add
jp
jmp
or
outsl
rcr
jbe
pop
mov
cmpsb
adc
mov
and
push
mov
add
and
adc
push
nop
mov
xchg
pop
jns
js
enter
mov
mov
pop
pop
add
hlt
stos
inc
addr16
jno
popa
into
arpl
int
int
rcrb
sub
push
stos
xlat
inc
mov
into
mov
imul
stc
add
cltd
decl
inc
test
fildl
jecxz
bound
cmpb
add
movsb
push
rcll
cld
int3
pop
mov
cmp
jb
jb
push
xlat
outsb
inc
push
test
jmp
dec
pop
cli
fsubl
aam
xor
xchg
adc
pop
mov
jge
jmp
or
xchg
gs
jg
popa
fcmovnbe
rolb
clc
shr
fstpl
jo
inc
int3
or
test
and
dec
test
mov
and
inc
xchg
sbb
fstps
imul
filds
inc
push
pusha
ficoml
mov
insl
xor
dec
push
sub
int3
pushf
fdivl
cs
mov
sub
cmpl
jbe
sbb
or
pushf
adc
push
lret
fs
mov
call
cmp
popf
cmpsb
jge
dec
insl
cmp
adc
jo
mov
add
add
or
inc
or
or
add
xor
rcr
push
ljmp
sbb
mulb
fcmovnbe
movsl
sbb
in
fwait
cmp
mov
jb
popa
pop
cmp
std
dec
jle
fsubrs
mov
push
sar
jnp
push
sti
fimuls
dec
clc
hlt
and
sbb
add
pop
cmpsb
rcll
pop
pop
sbb
sub
sahf
addb
les
shlw
jmp
arpl
push
inc
mov
loop
jl
xchg
call
xlat
or
dec
sub
in
mov
scas
xchg
jno
jp
data16
fwait
adc
sbb
ja
inc
mov
dec
mov
lods
enter
jg
inc
add
jmp
daa
inc
add
jg
or
jmp
push
call
mov
mov
mov
xor
mov
xor
xorl
shl
addl
mov
addl
or
mov
mov
cmp
movl
je
sbbl
mov
xor
or
sbb
mov
sub
xor
xor
and
mov
cmpl
jl
mov
adc
jmp
pushl
call
mov
mov
shl
xor
mov
mov
mov
xorl
xor
subl
xor
orl
shrd
orl
shr
orl
or
xorl
xor
incl
or
sub
mov
mov
mov
mov
xorl
xor
notl
shl
xor
xorl
mov
mov
jmp
cmpl
pop
and
inc
aaa
cwtl
ja
mov
mov
cmc
cmc
sti
aad
mov
fdivl
sbb
jl
andb
iret
inc
enter
pop
add
sbb
adc
fdivl
inc
cmp
call
jns
dec
rorl
cmp
xchg
dec
mov
fucomi
mov
sub
dec
mov
jne
sbb
xchg
mov
cs
fptan
leave
inc
fidivl
adc
mov
push
mov
jle
in
mov
push
mov
lods
xchg
mov
or
shlb
sbb
out
outsl
dec
sbb
stos
dec
mov
push
stc
push
push
cltd
pop
lret
mov
push
shl
pop
add
push
test
outsl
inc
mov
in
xchg
shll
push
dec
lods
cli
ljmp
dec
xor
divb
mov
sbb
jns
mov
loope
adc
gs
dec
add
mov
or
pushf
mov
xchg
push
push
mov
and
adc
shr
notb
dec
lods
gs
pop
xor
and
pop
sbb
adc
ds
lcall
or
testl
mov
fstps
in
dec
push
mov
lcall
icebp
scas
mov
add
shll
mov
rolb
or
cwtl
add
repnz
or
fistpl
push
test
clc
icebp
pop
rolb
mov
mov
push
mov
cmp
outsb
sbb
repz
cmp
add
cwtl
or
dec
nop
repz
dec
mov
test
fwait
mov
test
pop
test
loopne
push
push
dec
inc
or
xchg
push
xor
cmpsl
pop
inc
ret
add
adc
and
call
inc
or
or
popa
mov
or
outsl
aad
ret
sub
nop
lcall
cmp
shl
pop
mov
cld
inc
cs
js
push
test
mov
sub
adc
mov
dec
mov
lds
xchg
icebp
ds
push
popf
push
push
adc
mov
add
dec
adc
xchg
inc
iret
xor
jle
mov
pusha
ret
inc
lock
xor
jmp
sub
jmp
mov
fs
mov
cwtl
mov
mov
sub
adc
push
int
dec
ror
xor
mov
xor
inc
sahf
cli
sahf
or
cmp
fwait
pushl
pushf
sbb
outsb
shll
adc
out
repz
cmp
loopne
mov
pop
sbb
in
fs
addr16
and
push
sbb
loop,pn
shrb
fs
cli
adc
lods
mov
jg
test
lahf
imul
jmp
orl
mov
pop
das
scas
inc
pop
js
data16
test
mov
adc
out
sub
sar
pop
sbb
enter
insb
sub
push
std
lahf
aad
outsl
mov
xor
or
dec
cli
push
mov
jecxz
std
and
mov
sbb
mov
hlt
and
gs
and
call
mov
lcall
mov
call
movsl
and
idivl
test
and
mov
outsb
pop
icebp
inc
cmp
fdivrp
xor
cmp
and
daa
scas
xchg
enter
ret
sub
cmp
add
sbb
aaa
push
xlat
adc
and
pop
repz
shrl
mov
es
mov
leave
inc
cmp
push
cli
fnstcw
shrl
cmp
cmpsb
stos
fucom
push
mov
add
mov
pop
xchg
xchg
or
mov
inc
scas
stos
pop
xchg
fdivs
mov
int3
es
jnp
fwait
sbb
jp
insb
jmp
mov
test
lods
inc
xchg
in
sarb
jo
and
adc
sub
lds
stos
push
sti
mov
cmp
pop
pop
lods
jg
ja
flds
mov
lds
fstpt
and
stos
xchg
dec
sub
mov
and
dec
shll
sub
adc
and
mov
mov
pop
cmp
xchg
cmp
in
push
pop
addb
mov
icebp
lods
sbb
inc
ret
out
and
sbb
add
cmp
ja
lock
xrelease
dec
and
cltd
adc
mov
repnz
dec
jge
xchg
mov
sbb
xor
inc
sbb
int
jg
dec
push
rclb
movsb
xor
out
ljmp
inc
lods
lret
mov
xchg
aad
mov
jp
dec
popf
sbb
mov
rcrb
cmp
popf
pop
or
mov
mov
mov
or
xchg
jo
fwait
jae
fs
mov
pop
cmp
and
adc
out
push
les
sti
jnp
add
shlb
je
jo
mov
rclb
divb
fincstp
lock
and
jnp
movsb
pop
test
sbb
xlat
fs
push
xchg
sub
into
add
sub
sub
sbb
xor
cmc
cmc
mov
popf
adc
les
fwait
iret
lods
pop
cmpsl
jb
sub
or
and
loope
notl
cld
int
pushf
jbe
jp
push
into
xchg
std
mov
bound
cmp
push
les
pop
lret
scas
pop
loop
mov
inc
pop
mov
jnp
icebp
sub
popl
popf
ja
ret
xchg
insl
xchg
and
push
mov
push
das
clc
fdivs
pop
push
sub
rcr
out
adc
dec
arpl
sbb
lahf
dec
mov
push
sub
pop
or
or
pop
mov
outsl
cmp
cmpl
cmpsb
jg
pop
adc
mov
pop
pop
std
inc
popf
jecxz
mov
mov
mov
cwtl
mov
push
lock
inc
mov
xchg
and
cwtl
and
dec
bound
cmp
sbb
xchg
imul
sub
mov
ss
ds
or
loop
mov
ret
adcb
xchg
mov
sub
das
adc
stos
add
inc
xor
mov
mov
fcomi
sbb
inc
mov
inc
jne
setno
adcl
popf
mov
and
out
xor
mov
lods
sbb
push
movsl
inc
repz
pop
mov
cmp
nop
scas
push
add
repz
push
mov
dec
xor
xlat
jecxz
jecxz
call
sub
add
mov
mov
in
gs
cmpsb
arpl
insb
sahf
sbb
xor
in
test
sub
xor
dec
push
les
sub
push
cli
pop
daa
pop
push
jns
push
scas
sub
sbb
cltd
cmpsb
mov
mov
sbb
inc
push
enter
sahf
mov
bound
jp
fidivrs
out
jp
movsl
xor
jnp
clc
sub
inc
sbb
or
dec
incl
sarl
and
push
mov
fwait
mov
jo
push
or
cli
push
ret
bound
sub
add
rcll
add
out
jmp
lds
and
imul
add
xchg
xor
xchg
divb
popa
daa
xor
add
rorb
jge
xchg
adc
mov
pop
int3
insl
popf
insb
scas
pop
loope
fs
in
jno
inc
test
mov
jae
adc
sti
dec
adc
jl
cmpsb
or
mov
push
icebp
pop
movb
xchg
dec
mov
jbe
es
loopne
xor
xchg
fs
andl
dec
sahf
les
into
adcl
scas
jno
add
jae
jnp
mov
ret
das
daa
push
inc
push
fadd
shrl
sub
xchg
mov
pop
push
rol
ja
lahf
mov
add
in
dec
add
lock
cmpsb
cmc
jp
ficoml
fidivrl
adc
xor
sub
fwait
aad
xor
mov
pop
es
jg
movsl
les
mov
mov
test
cmpsb
sbb
add
adc
sbbl
fnsave
lods
shlb
inc
mov
scas
push
stos
insb
or
shrl
mov
bound
lahf
push
pushl
mov
mov
jp
pop
gs
and
push
fisubs
scas
and
mov
ss
imul
loope
gs
sub
rcrb
jmp
stos
pop
xchg
mov
mov
pop
mov
aad
aad
imul
mov
test
push
sub
inc
jg
xor
not
push
jecxz
lods
pop
shr
out
cmc
pop
lea
adc
or
xor
jbe
into
add
subl
mov
sub
mov
jb
lock
mov
sub
leave
mov
cwtl
add
and
test
jnp
sub
jbe
xor
dec
xor
or
imul
das
push
adc
or
jl
adcb
enter
xchg
xor
scas
cmpsl
sbb
into
mov
push
add
rcrb
dec
add
test
or
push
mov
test
out
nop
nop
or
pop
in
xor
into
and
add
nop
ret
int
filds
fsubrp
push
cmpsl
adc
push
push
fcomps
jmp
fsubs
pop
cmp
andl
insl
je
add
shlb
cmp
loope
pop
dec
mov
mov
popa
sub
aad
push
xchg
mov
xchg
mov
hlt
mov
pop
dec
or
testb
or
ja
sub
out
xchg
imul
inc
push
and
inc
or
dec
pop
imul
mov
shlb
push
dec
js
mov
aas
cmc
cs
mov
xchg
aas
mov
sahf
scas
cmpl
jb
xor
add
and
sub
sbb
cwtl
fwait
xchg
mov
test
fistpl
icebp
aas
add
adc
pop
popf
movsl
xchg
lock
aam
mov
in
add
pop
test
imul
scas
std
push
or
jne
sub
inc
xor
fldl
push
xchg
push
xlat
hlt
imul
cmp
push
jnp
popf
adc
cmp
add
pop
xchg
push
mov
ficompl
inc
add
je
add
lods
rolb
xorl
or
sbbl
shr
orl
mov
mov
or
mov
mov
or
mov
cmp
movl
jne
cmp
movl
je
movl
jmp
mov
cmpl
jb
sub
jmp
push
call
mov
mov
shl
xor
mov
mov
mov
xor
xor
shrd
xor
or
mov
mov
mov
mov
xor
shr
or
mov
mov
shl
xor
jmp
call
push
rorl
xor
sbb
mov
xchg
mov
lods
aas
add
jno
dec
lock
jecxz
nop
xchg
fmuls
lods
pop
inc
adc
scas
or
fwait
jg
out
sbb
push
and
jno
xor
sbb
in
rorb
mov
lret
rcr
xor
mov
inc
fs
add
test
out
mov
sub
cmp
jno
adc
mov
loopne
movsl
pop
mov
inc
cmpsl
or
fwait
or
movl
xor
push
shr
and
push
jbe
push
mov
cmp
and
sbb
fidivl
xor
sbb
insb
out
out
xchg
mov
lahf
cmp
push
sbb
and
test
jae
inc
scas
mov
insl
imul
loope
insl
push
fistpl
movsb
imul
sahf
mov
mov
aad
outsb
in
pop
fldcw
sbb
cmc
out
bound
or
add
xchg
or
pop
xchg
outsl
xchg
enter
popa
jle
or
cli
or
inc
fmuls
mov
pop
movsb
pop
push
icebp
icebp
and
iret
add
push
mov
ss
xchg
fldl
pop
cli
push
cmp
hlt
les
popf
push
movsl
lret
test
in
push
pop
mov
imul
je
fwait
arpl
cmpsb
mov
loope
mov
fistps
rcrl
push
mov
lea
mov
clc
imul
es
sbb
lock
je
rclb
bound
mov
mov
test
je
add
dec
mov
nop
push
mov
outsb
jp
je
cmp
fisubl
lock
mov
mov
jbe
sub
pop
in
push
and
adc
paddusb
bound
scas
mov
mulb
push
push
mov
pop
sti
xchg
arpl
and
leave
jmp
mov
popf
push
fs
inc
mov
out
enter
sti
add
ret
xchg
mov
je
scas
aad
cmpsb
adc
sub
ret
mov
adc
xor
stos
fcomi
xchg
xchg
inc
sbb
mul
push
mov
jae
sub
clc
movsb
sub
hlt
sbb
add
ljmp
das
cmc
loope
and
xchg
cmpsl
mov
push
out
stc
pusha
mov
jo
adc
imull
mov
dec
or
lea
ja
pop
cli
or
sub
out
jecxz
mov
pop
and
dec
dec
xlat
std
xor
incb
sub
pop
insl
inc
and
mov
sub
iret
jl
xchg
push
xor
push
and
loopne
mov
mov
xchg
push
cmpsb
lods
add
daa
cs
mov
arpl
sub
push
and
adc
aam
scas
shrl
cmc
mov
cwtl
bound
xchg
lds
les
add
mov
cld
push
jmp
ficoms
or
pushf
test
push
cltd
xchg
xor
cmp
push
xlat
pop
inc
push
addl
dec
pusha
mov
pop
xchg
or
scas
sub
mov
xlat
mov
ds
cmp
pusha
insb
std
bound
dec
inc
xor
insb
sub
jns
push
inc
mov
hlt
cmp
mov
sub
mov
mov
xchg
adc
push
int3
and
xor
addr16
addr16
sub
jbe
xchg
test
imul
aam
popf
popa
insl
mov
pop
mov
dec
mov
pop
mov
sub
movl
out
and
cmpsl
popf
xor
hlt
movsb
jp
xchg
adc
or
subl
pusha
cld
out
or
scas
mov
adc
shll
fimull
sar
jbe
ss
mov
mov
sbb
cmpsb
aad
jle
je
xor
push
sti
or
cld
xchg
sbbb
lock
mov
ret
mov
add
popf
gs
lods
lahf
rol
pop
xchg
xor
mov
cmc
int
push
insl
pusha
jo
pop
loopne
inc
nop
in
mov
or
push
mov
js
leave
mov
dec
ret
inc
nop
xor
iret
mov
outsb
and
push
aaa
inc
aad
mov
mov
xor
push
add
mov
pusha
idivb
lds
lahf
jae
push
xchg
js
or
hlt
mov
idiv
bound
ds
push
sbb
loopne
ffree
cmp
decl
fsubrl
into
sub
push
xor
cwtl
dec
scas
ljmp
data16
pop
sti
mov
jo
and
or
ds
mov
jmp
in
in
and
sbb
jae
jmp
sbb
sbb
xor
testl
xchg
mov
mov
das
sahf
movsb
cltd
shlb
lods
add
std
scas
popa
or
std
push
ret
bound
sub
sub
xor
movsl
inc
ds
lds
push
cltd
push
frstor
lret
mov
push
jg
enter
xlat
mov
mov
xor
mov
mov
xor
shrd
or
jmp
fimull
xchg
xchg
enter
cmpsb
movsb
mov
cmc
mov
jne
jns
mov
sbb
imul
stc
ljmp
aad
jmp
sub
test
mov
test
sbb
push
xchg
xlat
or
je
out
pop
outsb
fwait
inc
xchg
xor
sti
xor
mov
sbb
dec
pop
xor
aas
fadds
call
loopne
add
ficoml
xlat
push
les
cli
nop
insb
std
pop
or
add
or
inc
pop
jg
mov
or
xor
pop
pop
xchg
loopne
adc
aas
pop
adc
push
sbb
pop
push
ds
ja
xor
and
and
jmp
mov
cmp
xor
mov
pop
sbb
cmpb
shrb
xchg
xchg
stos
ret
push
sub
or
loopne
dec
lock
cli
pusha
icebp
das
call
jecxz
mov
filds
pop
mov
jp
mov
jp
nop
imul
aas
cwtl
or
mov
push
dec
mov
mov
mov
test
scas
push
xor
ficomps
rcll
sub
popf
mov
pushf
ret
push
adc
sub
jl
stos
pop
lock
shrb
imul
jne
rcrl
xchg
imull
sub
jae
in
aad
rclb
mov
cmp
fcoml
mov
add
push
xchg
jecxz
jne
sbbb
dec
pop
pop
pop
jo
fistl
push
out
mov
scas
dec
sub
lret
jbe
push
stos
add
and
inc
ja
mov
mov
jge
dec
mov
shll
lahf
adc
bound
inc
mov
sub
fcmove
jns
mov
mov
cltd
clc
sbb
xchg
jecxz
adc
pusha
bound
xchg
test
mov
push
bound
decb
xlat
mov
cmp
repnz
mov
jmp
sbb
lods
test
lret
mov
in
jmp
divl
imul
loope
lods
cs
outsb
and
jnp
aas
scas
xchg
xchg
fs
xor
jno
adc
insb
gs
push
xor
lret
sbb
mov
and
sbb
repnz
cld
jbe
dec
pusha
push
ss
outsl
mov
fcompl
ret
cmc
hlt
andl
pop
or
pop
cmpsl
push
mov
roll
xlat
dec
inc
rcrb
popf
xchg
fildll
dec
test
faddl
mov
imul
shl
lret
adc
jecxz
inc
xor
or
dec
add
mov
loope
pop
ss
xchg
movsb
sbb
int3
adc
inc
pop
stos
sbb
negb
mov
mov
cmc
loope
or
f2xm1
inc
scas
repz
mov
mov
push
and
gs
pop
xchg
fwait
ret
xor
cltd
and
cmp
or
notb
inc
pop
mov
lea
pop
ret
inc
shll
popf
adc
sahf
movsb
mov
shr
adc
cmp
aad
insl
ss
xor
mov
cmc
outsb
aaa
fwait
mov
jno
loopne
pushf
in
in
outsb
cmp
popa
xchg
adc
jns
xchg
xchg
pusha
rcrb
xchg
xor
imull
mov
jl
das
lea
lds
pop
push
sub
imul
push
jmp
aam
je
pop
cmpsl
or
cmp
xchg
repnz
addr16
mov
repz
adc
jle
or
adc
pop
adc
pop
add
pop
adc
mov
add
repz
sbb
xchg
fildl
hlt
gs
lahf
ljmp
out
stos
adc
test
fmuls
add
xchg
in
decb
mov
mov
push
daa
mov
cld
fyl2x
ds
pop
cmpl
stos
cmp
jae
push
jae
mov
mov
and
push
mov
jmp
jl
sbb
jmp
lock
add
mov
in
mov
xor
sahf
sub
inc
scas
insb
scas
add
xchg
xchg
xor
pop
xchg
mov
rorb
jecxz
cmp
fadd
pop
lea
aas
inc
loop
or
cli
repnz
jnp
jbe
and
sub
sahf
mov
xchg
loope
adc
sahf
les
mov
pop
xchg
push
gs
mov
pop
loopne
movswl
jmp
inc
inc
cli
or
mov
push
arpl
sbb
jg
and
shll
cmp
push
add
les
xor
pop
testl
pop
jl
sbb
lret
subl
dec
les
xchg
sti
jb
and
std
add
popa
xor
sub
jo
add
mov
stos
daa
jge
es
mov
sub
lods
je
or
cs
push
or
dec
mov
testl
sbb
fimull
out
xor
or
mov
jg
push
mov
adc
jl
jge
mov
test
add
or
jmp
sahf
push
jae
jae
and
and
popa
xor
cmc
cmc
mov
addr16
std
daa
mov
xor
push
ret
sbb
and
adc
cmp
loop
sub
shl
gs
sub
dec
nop
in
cld
out
push
out
loope
cmpsl
fmull
inc
insl
or
aaa
aad
adc
xor
fs
adc
repz
adcb
jge
or
lret
fwait
cltd
xchg
mov
add
push
dec
or
or
jno
push
cli
rcll
subl
xor
push
ljmp
in
xchg
test
shrb
xor
in
inc
adc
lods
rclb
push
lcall
mov
mov
int3
outsl
dec
stos
movsl
jecxz
fdivrs
jle
mov
jae
aaa
inc
xchg
push
mov
lock
jns
pop
mov
ss
inc
lret
xor
cwtl
pop
sub
xor
xor
arpl
push
cltd
hlt
jge
mov
cli
pop
mov
or
dec
js
lret
jnp
fcom
fstp
addl
ljmp
fwait
xchg
mov
outsl
cs
cmp
scas
xor
adc
pop
add
xorl
push
sub
sub
cmp
out
pusha
test
dec
bsr
pop
stos
xor
loope
jo
inc
dec
mov
adc
dec
jge
and
adc
aas
arpl
pop
int
loop
and
cmpsb
movsl
lds
nop
ficoms
leave
addr16
sbb
xchg
add
stc
cmp
mov
and
hlt
xor
xor
roll
pusha
xchg
mov
inc
outsb
dec
sti
clc
dec
mov
std
ss
out
test
lcall
test
add
arpl
mov
insl
rolb
out
sub
add
push
test
push
addr16
mov
pusha
pushf
dec
loopne
hlt
pop
mov
push
mov
jmp
adc
pop
mov
stos
outsl
or
jecxz
shll
es
or
test
icebp
sub
lahf
inc
mov
add
ficomps
mov
sub
xchg
pcmpeqb
mov
test
daa
rcll
sbb
mov
test
mov
push
adc
mov
xchg
rcr
int3
lds
xor
adc
inc
push
inc
push
push
add
jnp
xor
jle
int
movsl
pop
jne
pop
cmc
cmpsb
push
test
fcompl
and
pop
pop
pop
mov
sub
inc
inc
fbld
fdivrs
imul
mov
clc
sbb
push
sub
jle
mov
movsl
pop
or
or
in
lret
jecxz
adc
out
in
pop
add
repnz
int
add
jg
cmp
mov
and
in
cs
jg
sti
jo
push
movb
push
loop
jbe
inc
mov
or
jmp
xchg
sbb
out
mov
std
jl
or
jne
adc
ror
cmp
nop
jle
insl
in
stos
divb
sbb
xchg
mov
scas
dec
xor
mov
lahf
clc
aad
xor
and
jge
sbb
enter
jne
mov
and
rcrl
data16
inc
push
popa
push
adc
inc
out
push
sub
ljmp
push
je
aas
les
fcomip
stos
clc
loop
pop
push
test
jle
daa
outsb
outsl
test
and
dec
or
sbb
add
into
cld
jp
sbb
loope
test
setbe
nop
add
loope
pop
fldl
test
push
dec
adc
xchg
cwtl
sub
xchg
or
inc
mov
lods
xor
lret
or
shl
dec
insl
test
pusha
rcrl
sub
ficompl
add
mov
pop
movsb
sti
or
enter
lret
int
cmp
fistl
in
subl
inc
test
mov
imul
or
fcmovbe
push
jno
popa
lods
scas
imul
ljmp
sbb
lret
sub
lds
leave
jp
rcr
or
sbb
out
ja
sbb
mov
mov
xor
mov
mov
inc
dec
je
loop
imul
repnz
add
mov
and
popf
sbb
aam
pusha
inc
jmp
lea
int
in
add
mov
popl
dec
mov
pop
xchg
xchg
mov
and
iret
mov
jecxz
rcll
sahf
sarb
lea
and
pop
mov
lcall
cmp
hlt
adc
cwtl
sahf
push
cmp
rcrl
call
sarl
lds
popf
sbb
imul
sub
xor
add
xchg
repnz
sbb
movsb
jbe
xchg
mov
push
push
mov
fs
mov
cld
push
mov
jg
inc
push
scas
mov
xchg
out
lret
sub
in
lds
ret
sub
xor
scas
repnz
sub
ss
cli
jns
xor
inc
cmp
lds
aad
sarl
lds
test
adc
add
push
aaa
push
and
xor
fstps
xchg
mov
jmp
xchg
xchg
and
movsb
mov
mov
cmp
jne
mov
cmp
je
mov
mov
jmp
xor
xor
xor
adc
shrb
cmc
mov
fsts
scas
mov
cs
sub
add
push
cltd
sti
in
lock
cmpsb
iret
push
jle
lea
ds
xor
lods
clc
arpl
and
mov
aas
out
repnz
cmp
loopne
rcll
xchg
test
pop
out
xchg
and
into
mov
or
test
mov
add
fwait
jge
push
test
and
xor
and
pusha
cwtl
cmp
cltd
jbe
cltd
xchg
fdivr
cmp
or
insb
mov
mov
mov
test
push
pop
cmpsb
es
or
jno
jne
xor
mov
or
jno
xor
mov
cmp
pop
fsubs
xor
add
fdivp
movsb
inc
scas
cli
cmpsb
addr16
repnz
es
xchg
mov
je
push
xor
xchg
lret
arpl
roll
dec
xor
ljmp
push
jbe
mov
loope
and
les
xlat
push
xchg
xchg
push
inc
push
lock
in
insl
test
xor
mov
mov
out
call
sub
xchg
mov
stos
push
jbe
push
insb
or
lods
cmp
jg
dec
loope
repz
ss
cmp
dec
in
pushl
inc
sub
test
sub
cmp
and
dec
xchg
aam
adc
mov
lods
jo
cmp
aaa
push
jecxz
inc
arpl
xchg
outsl
mov
into
lcall
inc
add
lock
pop
dec
cmp
sbb
cltd
xor
arpl
out
pop
sub
jg
xor
jae
xor
inc
adc
gs
dec
and
clc
repnz
adc
push
xchg
push
xchg
mov
or
cmc
and
and
jo
js
mov
loop
popf
cmp
pusha
push
jnp
lock
mov
sbb
mov
leave
notb
icebp
pop
add
xor
jmp
ljmp
jnp
xor
ret
xchg
shlb
sub
cltd
insb
cli
fldt
test
out
sub
movswl
test
mov
add
jp
stos
ret
lret
ja
push
mov
mov
sti
pop
dec
xor
pop
cmp
jp
adc
in
cld
pusha
incl
in
insl
out
dec
aas
or
mov
fstpt
and
out
lods
jnp
and
fstpl
and
xor
adc
mov
loope
ljmp
pop
jae
stos
addr16
mov
or
cmp
mov
ljmp
inc
xchg
pop
xor
pop
in
cld
and
and
hlt
repz
stos
pusha
out
cmp
jae
cmp
lea
test
loop
in
mov
dec
popa
bound
xor
call
leave
mov
sahf
jae
sti
dec
push
push
std
ret
mov
inc
push
insb
pop
clc
mov
sbb
enter
add
mov
idivl
push
inc
ja
ljmp
movsl
mov
sbb
aaa
into
inc
pushf
xlat
shr
or
or
sbb
inc
sub
mov
or
rcll
mov
scas
or
aaa
sub
inc
dec
xor
in
jmp
and
fidivl
fwait
add
dec
adc
xchg
adc
arpl
hlt
jmp
or
dec
movq
cmp
push
es
xchg
aam
mov
xchg
sahf
or
pop
ret
inc
inc
iret
mov
mov
add
xchg
cli
out
bound
mov
test
mov
int
xor
subl
adc
repnz
or
dec
scas
mov
mull
cld
imul
aad
jae
xor
dec
or
ficoml
ja
mov
lret
es
iret
mov
pop
sar
lret
andl
in
jae
pop
inc
dec
mov
popf
sbb
cmp
out
sbb
cmp
or
jmp
pop
movsl
out
pop
mov
mov
pop
insl
dec
pop
cmc
inc
cltd
leave
jg
aaa
xchg
out
ljmp
sub
mov
lods
mov
jle
cmpb
pop
pop
push
dec
xchg
test
mov
pop
sbb
and
xchg
filds
and
ja
mov
je
nop
loope
inc
sbb
xchg
jecxz
mov
lds
daa
or
insl
push
jle
sub
ss
movsl
jb
into
lea
jg
sarl
adc
xor
fbld
push
aam
subl
cmp
sarb
daa
repz
mov
xchg
dec
ljmp
in
or
push
movsb
mov
pusha
test
and
jp
inc
push
add
out
cmp
jp
xchg
in
pop
jp
aaa
or
xor
rorl
inc
sbb
mov
nop
jp
out
aam
add
mov
fsubl
insb
inc
push
sti
leave
ficoml
or
mov
sub
jo
stos
jl
mov
mov
lea
mov
jmp
in
xorb
jae
mov
and
imul
cmc
cmc
fwait
aam
xchg
xor
movsl
in
rcrl
dec
add
rcrl
mov
ret
pop
add
sahf
rorb
lahf
inc
push
xchg
loop
fistpl
aaa
sbb
inc
mov
xchg
dec
mov
jmp
cltd
rorb
or
fnclex
cs
cltd
sbb
jno
das
or
stc
adcb
test
ljmp
mov
repz
js
mov
pop
jne
mov
mov
movsb
mov
and
xchg
fstpl
cmc
add
sub
dec
jecxz
and
mov
pop
mov
push
roll
fadds
mov
aad
repz
or
pop
sbb
push
notl
jbe
cmp
push
es
mov
aad
aad
es
mov
fcoms
pop
push
add
notb
xor
loop
xchg
inc
sub
dec
fwait
mov
cmp
cmpsl
mov
sub
scas
popf
faddl
and
or
xchg
cmp
push
lret
call
icebp
ljmp
fsubrl
test
pop
out
scas
mov
push
add
lret
pop
dec
fstpl
arpl
orb
or
outsb
add
dec
lds
in
call
in
scas
mov
std
stos
mov
push
mov
mov
adc
mov
mov
pop
fwait
pop
fwait
xor
xor
js
dec
mov
std
fucomp
das
xor
push
adc
xchg
cltd
das
rcl
or
pop
lds
scas
mov
push
or
mov
or
jle
dec
ja
xchg
sbb
push
sub
pop
cmp
sub
xor
lcall
xchg
adc
movsb
clc
push
jb
sub
bound
pop
pop
imul
ds
punpckhdq
int
sub
inc
cmc
fs
inc
stos
dec
in
cmpl
ds
andb
shr
jle
pop
mov
std
push
inc
inc
notb
sti
push
or
xchg
cmc
push
mov
pop
and
cmp
pop
adc
outsl
lahf
out
dec
sub
pop
stos
add
mov
lahf
stos
xchg
lret
lret
xor
or
sub
testb
sbb
inc
mov
xor
push
cmp
insl
lea
pop
dec
cmpsb
jns
jb
xchg
imul
adc
xor
insl
mov
jne
mov
addr16
lock
cltd
add
pusha
sbb
dec
push
jg
adc
mov
cmp
into
icebp
xchg
repz
repnz
or
cld
bndldx
and
mov
ss
mov
mov
jo
pop
adc
add
adc
push
ret
xor
movsb
imul
jp
shrb
inc
popa
cmp
mov
arpl
jne
inc
and
int
test
pusha
xlat
daa
int3
cld
adc
ljmp
fisubl
sub
cli
push
jae
les
inc
daa
lea
mov
fincstp
lahf
scas
sub
ss
push
mov
inc
push
cmp
std
sbb
cs
inc
xchg
dec
jp
jae
and
stos
in
frstor
lcall
mov
pop
and
jge
xchg
add
enter
cmp
call
je
mov
les
jl
cmp
lcall
add
cmp
mov
lds
imul
int
xor
pop
sbb
lcall
dec
and
mov
aas
fisubrs
cmp
cmp
imul
xchg
dec
ret
push
testl
and
ja
cld
jnp
cmp
das
ficomps
jl
xlat
ret
call
sub
xlat
push
add
data16
cmp
and
add
pop
je
bnd
mov
sub
cwtl
lret
xchg
ja
xchg
mov
cwtl
ficomps
cld
xchg
dec
pop
ljmp
pop
xchg
dec
sub
js
js
push
cwtl
mov
cwtl
sub
xchg
into
imul
xchg
into
jle
enter
mov
lds
jne
shlb
mov
cld
stc
fs
pushf
mov
xchg
cs
out
sub
and
add
inc
loop
inc
repnz
aam
das
call
sbb
inc
sbb
cli
mov
shll
mov
jp
dec
adc
sub
xor
push
adc
in
test
les
mov
inc
and
or
ret
ret
inc
ret
xor
cld
ds
pop
rcl
dec
pop
xor
fimull
rclb
and
das
popf
imul
push
subb
mov
hlt
ret
and
and
loope
in
rcrl
push
inc
mov
pop
push
inc
movsb
int
xchg
mov
pop
int
mov
or
loop
or
cld
xor
lcall
fs
pop
fldcw
ljmp
adc
nop
push
out
in
rorl
jmp
lret
xchg
or
movsb
cwtl
mov
aad
cmc
cmc
mov
and
std
push
push
cmp
nop
insb
sbb
cmp
adc
gs
adc
jecxz
sbb
fimull
cmp
outsl
pushf
dec
adc
std
mov
loopne
enter
je
adc
out
pop
or
add
pop
movsl
xlat
xor
adc
mov
push
sbb
xchg
jnp
sub
test
mov
aam
mov
mov
sbb
cltd
mov
test
idivl
mov
les
sbb
outsb
push
inc
shll
and
pusha
dec
pop
sbb
lcall
sti
lcall
in
mov
je
adc
into
hlt
xchg
sbb
daa
repz
or
stos
xchg
test
push
xchg
jle
aad
inc
mov
xor
push
or
pop
pop
mov
xor
loop
ds
gs
test
mov
repnz
stos
repz
cmp
jnp
jnp
jbe
push
add
scas
stos
mov
into
subl
cmp
add
cmp
mov
gs
mov
cmp
movsb
out
cmpsb
adc
inc
repz
adc
xor
sub
mov
ljmp
jo
or
decb
jl
out
cmc
rolb
lcall
or
shrl
sbb
aaa
pop
ret
arpl
mov
pop
xchg
sub
mov
fisubrl
ret
push
pusha
rcrl
popa
scas
and
or
mov
xor
fwait
subl
rorl
mov
inc
dec
mov
loop
int
and
adc
out
xchg
repz
or
mov
mov
pop
lret
sbb
fisubs
jecxz
rorb
add
and
ret
pop
or
lret
mov
out
pop
dec
jmp
test
or
push
sbb
mov
sbb
arpl
xchg
fists
arpl
jecxz
push
cmp
cmp
pop
adc
cmc
xor
mov
mov
pop
cli
add
jl
mov
call
dec
in
mov
rcrb
leave
jo
sarl
lahf
cmp
inc
pop
cwtl
push
xlat
test
lods
sbb
mov
scas
into
pop
into
shll
inc
jl
imul
xchg
and
fidivs
stos
aam
sbb
filds
ljmp
xchg
popf
add
cmp
pop
push
call
shll
out
jbe
mov
out
pop
jae
cmp
xor
dec
push
out
sbb
mov
add
mov
testl
cli
dec
bound
test
sti
push
aad
and
dec
ret
push
sub
and
xor
or
sahf
outsb
or
dec
add
mov
rcll
lock
scas
mov
mov
jecxz
mov
flds
xchg
or
mov
dec
mov
test
mov
jl
xor
popa
xchg
dec
mov
and
jae
mov
jge
mov
scas
or
add
fsubr
and
pop
sbb
loope
jae
sub
rcr
andl
sar
mov
jmp
aas
sub
test
and
test
jnp
dec
mov
mov
shlb
sarb
xchg
cltd
sbb
aad
es
in
mov
inc
mov
ljmp
jae
mov
xor
movsb
or
inc
clc
lods
into
sub
ds
aam
rorb
das
arpl
out
jnp
mov
push
int3
cld
sti
adc
inc
mov
fcmovu
inc
sbb
test
mov
fwait
repz
insl
sbbb
pusha
xor
pop
inc
addr16
mov
leave
push
xchg
std
push
outsb
add
rcll
push
iret
pop
fsts
push
fistl
jge
sub
push
xchg
rcl
fs
fmulp
bnd
dec
sarl
out
jne
add
pop
loop
setbe
call
or
ss
fwait
pop
int3
int
sbb
leave
add
and
mov
subl
jl
push
adc
sub
test
add
inc
lret
push
stos
pushf
aas
inc
xchg
or
outsb
cmp
inc
jl
sti
push
dec
xchg
and
fdivs
adc
adc
xor
jl
in
into
cltd
jg
rol
mov
scas
arpl
dec
jp
rolb
mov
pop
jmp
mov
test
sbbl
enter
in
jge
sti
jb
sahf
inc
mull
add
push
push
fcoml
xor
test
add
inc
xchg
jne
dec
dec
cld
cmp
sbb
sub
dec
cmpb
add
inc
push
dec
in
cmp
in
repnz
insb
fcoml
fxrstor
arpl
clc
outsb
call
xchg
nop
mov
lahf
mov
mov
xor
lock
xor
mov
and
inc
xchg
jmp
test
cmp
inc
adc
lock
cmc
cmc
adc
test
push
push
pop
mov
test
cmp
sub
test
test
jne
repnz
loopne
xor
out
imul
cli
daa
pop
aas
jb
add
lds
xlat
fiadds
mov
push
mov
jnp
jp
or
inc
jns
jne
es
ss
push
jbe
test
jne
push
fstl
inc
xchg
cmp
adc
jmp
dec
sti
adc
adcb
push
jp
push
cmp
adc
stos
sahf
pushf
repz
push
cld
out
xorb
pop
mov
addr16
push
lcall
out
and
inc
into
mov
push
ret
xchg
dec
sti
lret
sbb
insb
push
or
sbb
aam
pop
add
shrd
mov
mov
mov
out
push
xchg
in
xor
and
in
insb
push
push
imul
cmpsb
rolb
mov
mov
or
jno
mov
aam
ss
sti
pop
inc
xlat
stc
jb
pusha
pop
loopne
into
sahf
enter
mov
repz
incl
jle
xchg
xor
clc
cwtl
push
and
aam
ss
sub
std
sbb
arpl
movsl
fwait
jge
jo
arpl
pop
fdivrs
jae
in
or
dec
mov
add
out
stos
pop
into
sbb
enter
sub
andl
notl
out
div
mov
in
dec
pop
outsl
sbb
int3
mov
add
jne
roll
adc
cmp
loop
stc
sar
jecxz
jmp
jmp
jne
pushf
rolb
ret
sub
xor
push
push
mov
das
vcvttss2si
ret
loope
jae
cmpsb
stc
mov
dec
pop
js
dec
xchg
sub
xchg
dec
mov
cltd
mov
pop
jle
pusha
mov
fwait
call
xchg
aaa
dec
push
sub
out
mov
in
insl
mov
ja
out
jns
jmp
sbb
xor
cld
mov
or
je
lahf
or
xor
imul
sub
xchg
push
cmc
dec
in
ss
je
xlat
movsb
jae
insb
inc
ja
and
enter
or
xor
push
mov
mov
push
or
je
sbb
sbb
mov
xchg
push
shll
lds
sub
adc
divl
and
dec
sub
sub
and
test
add
stos
adc
or
popf
push
xchg
shlb
push
jae
ficomps
xor
push
mov
jl
test
ret
xchg
stc
scas
ret
sub
aas
jns
xchg
clc
bound
imul
add
push
adc
cmp
fisubrs
in
imul
jle
jo
les
xchg
jae
aad
add
leave
push
ret
aad
sbb
outsl
imul
inc
sub
out
xrelease
push
jmp
jge
jnp
sahf
enter
add
popf
xor
xchg
scas
imul
gs
arpl
clc
dec
mov
dec
sarb
pop
pop
cmp
inc
adc
scas
push
adc
and
ret
xchg
jnp
pop
jmp
aam
outsl
inc
repz
jl
jg
ss
mov
inc
das
mov
and
mov
jle
adc
out
iret
fcompl
xchg
shlb
xchg
test
xchg
bnd
aam
mov
into
add
cmp
testl
outsl
std
lea
mov
push
test
scas
leave
fcmovu
ret
popa
gs
outsb
mov
jl
in
sub
mov
mov
mov
int
int
xchg
or
push
jnp
push
mov
int3
adc
push
daa
cmp
mov
add
mov
std
gs
insb
hlt
das
pop
fstpl
inc
jg
aam
dec
dec
xor
push
nop
mov
int3
mov
sbb
lods
mov
std
filds
push
inc
cwtl
cmp
jne
aas
and
cld
mov
sub
jno
pop
rclb
movsb
and
mov
dec
subb
mov
mov
sub
mov
sbb
mov
jns
pop
push
sub
pop
pop
repnz
mov
jbe
and
pushl
sub
adc
inc
mov
addr16
lock
pop
mov
mov
push
jg
aam
sub
adc
pop
js
mov
ds
dec
loopne
dec
mov
jmp
shlb
add
jge
push
enter
dec
lock
pop
fldt
xchg
gs
jmp
fcoml
cmc
mov
sbb
or
nop
out
ficomps
jnp
mov
fmul
xlat
pop
call
mov
add
shrl
in
ja
sub
mov
scas
test
bound
pop
xor
jo
icebp
loop
pop
negb
cs
adc
push
scas
mov
lret
dec
int3
mov
mov
pop
test
pop
pop
xor
addr16
aaa
lret
movb
movsb
push
sub
mov
mov
jmp
inc
test
aas
aaa
cmovge
mov
lock
push
cmc
repnz
add
scas
add
pop
jne
ja
xchg
jae
push
mov
out
push
repz
push
xor
cmp
cmpl
repnz
jns
nop
mov
mov
inc
cltd
adc
jne
xchg
ret
inc
cmp
push
xor
mov
and
movsl
test
dec
out
pushf
pop
ret
leave
cltd
pop
sbb
pushf
inc
shll
neg
jl
mov
push
adc
ljmp
arpl
jp
jns
jno
cwtl
scas
mov
mov
mov
fsubrs
or
adc
enter
xchg
inc
lcall
jne
inc
lret
dec
fs
cmp
ss
outsl
imul
jb
inc
inc
sub
inc
or
sbb
cmpb
inc
outsb
or
cmc
cmp
movb
cld
sti
ja
dec
or
stos
int
jns
mov
mov
in
inc
ds
push
dec
scas
aas
add
jne
xchg
lahf
pop
imul
mov
or
mov
addl
adc
push
fcmove
lock
jmp
jno
xlat
movsb
lods
insl
pop
stc
int3
out
je
mov
hlt
rcrl
add
cmp
fildl
outsb
lahf
inc
rcll
out
dec
inc
imul
push
movl
sub
stos
das
ret
mov
sub
imulb
sub
sbb
int3
pop
cmp
add
xlat
cwtl
pop
dec
in
pop
cmp
add
push
jae
fiaddl
pop
push
cmp
inc
idivb
and
xor
mov
prefetcht2
test
call
lcall
inc
lret
test
push
sub
sbbb
and
stos
pop
jecxz,pt
dec
repz
subl
pop
xor
fsubr
inc
sbb
dec
or
filds
pop
dec
or
test
jl
xchg
icebp
fs
mov
lcall
enter
jbe
mov
icebp
sbb
int3
pop
inc
imul
mov
xor
fcmovne
das
decb
shlb
xor
lods
in
xchg
lret
stos
push
push
mov
or
out
add
js
add
call
nop
and
jnp
jno
orb
int3
movsb
leave
pop
pop
push
sbb
fiadds
cwtl
lods
mov
gs
xor
xchg
cmp
sub
aas
or
lret
cmpsl
or
xorb
adc
add
add
in
lods
push
xchg
dec
fistl
adc
add
cld
lcall
jecxz
jp
adc
iret
add
aam
stc
sbb
lds
cltd
jne
inc
pop
sarl
sbbb
cmp
outsb
mov
push
inc
test
popf
add
pop
fnstcw
dec
cmc
test
add
jle
jb
pusha
lock
sti
inc
pop
out
mov
ds
xchg
sbb
negl
dec
lret
pop
dec
int3
xchg
lret
sbb
xorl
add
pop
mov
aaa
add
jb
aad
loop
das
out
xchg
adc
out
or
mov
das
adc
jmp
mov
bnd
mov
out
sbb
adc
and
mov
xchg
add
cld
cmp
inc
and
mov
aas
clc
adc
jbe
or
aad
cmc
pop
iret
stos
push
scas
ret
testl
stos
pusha
mov
push
and
jp
icebp
or
test
adc
push
int
sub
out
test
mov
movsl
and
cmpsb
mov
out
jno
pop
pop
inc
sub
hlt
dec
mov
mov
ret
lods
or
subl
adc
shlb
xlat
xor
sbb
adc
rolb
lahf
jle
mov
pusha
leave
pushf
push
jg
stos
and
ljmp
xchg
fisubrl
cmpsb
pop
mov
cmp
xor
test
inc
in
in
loopne
out
aam
in
out
cmp
ret
push
lret
daa
daa
push
shll
stos
push
pushf
iret
push
jnp
lret
push
in
mov
add
jo,pt
cmp
add
and
popa
test
jae
sub
movsl
es
or
xor
xchg
cmp
add
dec
cltd
fisubl
roll
cmp
push
mov
dec
addr16
or
or
int
adc
aad
lods
jg
sahf
jno
xor
movsb
roll
lcall
dec
xchg
xchg
cs
jae
mov
ret
out
jnp
rorb
enter
mov
addl
cwtl
inc
out
adc
arpl
dec
stos
test
inc
mov
daa
sbb
cs
jne
xchg
into
inc
mov
js
int
jge
push
pop
inc
adc
jbe
or
mov
ss
daa
add
dec
leave
repnz
wbinvd
cmpsb
jnp
push
nop
fsin
js
jecxz
push
clc
or
lock
xor
shr
mov
xor
shl
or
mov
mov
mov
xor
shld
xor
mov
mov
shl
mov
mov
xor
mov
cmp
jne
mov
cmp
jne
mov
mov
mov
mov
mov
xor
shl
mov
mov
xor
mov
mov
xor
jmp
inc
sbb
xor
xchg
sbb
and
push
cmc
cmc
mov
bts
inc
and
mov
mov
test
and
int3
and
cmpsb
jecxz
jbe
cli
mov
outsb
xchg
popa
in
shlb
push
pop
icebp
pop
stos
pop
cld
mov
arpl
orb
cmpl
jp
repz
shrb
dec
add
fstpt
test
dec
out
andb
repnz
roll
sub
push
into
js
xchg
stos
nop
xor
mov
jl
ja
inc
or
scas
std
xchg
pusha
ret
and
inc
jge
popa
test
mov
insb
fisubs
or
sbb
scas
out
aad
mov
scas
push
jns
lock
mov
iret
fmull
jne
xchg
jle
sbb
cmp
ds
push
jnp
icebp
sarl
or
push
xchg
movsl
loope
sbb
fwait
add
mov
ljmp
int
push
jo
xchg
fcmove
push
pop
out
push
aam
in
dec
or
push
dec
jbe
sbb
lods
lock
dec
jl
ds
jl
inc
outsb
cmpsb
bound
loope
repz
cli
into
into
jno
sbb
and
and
call
and
push
stos
cmpsl
test
sbb
xor
mov
in
ret
ffreep
jnp
stos
pop
out
cmp
push
fmul
aaa
outsl
outsl
imul
gs
lds
xchg
lea
movsl
out
negb
xchg
jnp
adc
cld
and
lret
scas
xor
icebp
popa
sbb
and
add
std
cmpsb
push
test
dec
or
cwtl
call
sub
push
mov
push
inc
inc
adc
rcl
push
js
movsl
jle
loopne
int
aam
out
push
mov
mov
iret
pushf
out
dec
aam
sub
sbbl
and
into
ds
inc
ljmp
cld
aad
adc
shlb
stc
les
inc
or
inc
jl
cld
bound
sbb
mov
les
xchg
je
cmc
mov
inc
call
push
adc
popa
mov
das
inc
insl
jae
or
gs
mov
and
mov
mov
pop
or
mov
testl
std
mov
adc
rolb
sub
lods
push
ficomps
mov
inc
pop
dec
mov
data16
mov
adc
scas
lds
sarb
sub
mov
adc
xor
mov
test
xor
lods
std
pop
adc
dec
add
xor
push
jle
adc
sub
xor
scas
stc
negb
push
push
sbb
dec
sbb
pop
jl
lahf
nop
fiadds
sti
mov
xchg
inc
add
sbb
mov
lock
dec
xchg
fsubrl
imul
rcrl
into
xor
loope
aad
jb
je
mov
mov
or
push
les
mov
pop
mov
aaa
out
cld
rdmsr
mov
ss
arpl
cmp
jns
out
push
lret
cltd
push
xlat
ja
nop
or
pop
lods
push
sub
dec
mov
sub
mov
mov
ror
movsb
sbb
push
pop
js
mov
sahf
fimull
repz
xchg
sbb
xor
push
imul
outsl
shll
lods
cmp
ds
int
cli
or
inc
adc
push
into
adc
sbb
aad
imul
in
inc
pop
aam
packsswb
lock
loop
fstpl
pusha
or
mov
movsl
inc
loopne
xor
xchg
fisttps
push
push
addr16
cmp
adc
adc
int3
mov
les
out
lret
aam
iret
jae
inc
out
sbbb
jae
or
aad
mov
mov
pop
div
mov
pop
mov
testb
idivb
push
cmp
xor
test
mov
fsts
dec
and
adc
mov
in
mov
fmul
or
outsb
sbb
dec
or
xchg
jmp
jns
ss
xchg
loopne
punpckhbw
rclb
out
mov
mov
cmp
xor
aam
mov
mov
fsubrl
rcrb
shlb
in
lods
fiaddl
jbe
and
sbbb
adcb
enter
push
int3
movsb
sub
or
hlt
xchg
sbb
aad
and
aas
push
mov
jge
jle
cltd
xchg
sti
sub
pop
push
out
rorl
mov
mov
loope
mov
push
mov
and
xchg
sub
cmp
jp
out
push
jle
cltd
xor
xor
pop
mov
xchg
scas
pop
mov
cltd
out
sub
arpl
arpl
inc
js
xchg
mov
sarb
mov
sub
shlb
add
add
pop
shr
adc
repz
stos
dec
add
lcall
jecxz
jbe
aad
fs
lds
shrd
or
shr
mov
mov
or
mov
mov
push
pushl
jmp
lret
mov
mov
xor
cmp
cmc
cmc
mov
adc
aas
cmp
mov
inc
in
inc
cli
aam
inc
aad
xor
es
std
mov
movsl
add
xor
adc
daa
out
adc
push
shrl
jne,pt
cmp
cmp
subb
lock
scas
in
pusha
adc
subb
or
sqrtps
in
mov
cs
inc
ljmp
clc
push
xchg
xor
insl
mov
ljmp
scas
adc
xchg
cmp
xchg
adc
arpl
test
and
xor
cmp
and
in
insb
dec
push
pop
lods
sub
mov
nop
into
pop
les
adc
in
outsb
call
rorb
mov
test
cmpsb
sbbb
pop
fucom
inc
das
nop
mov
xchg
out
or
mov
dec
adc
cmp
cli
std
mov
in
aad
aaa
or
lods
sbb
cmp
mov
or
xchg
xchg
mov
enter
mov
adc
cmp
aam
fwait
repz
sbb
mov
mov
cmp
sbb
call
push
cs
jl
cmp
leave
jle
divb
xlat
movsl
test
xchg
mov
push
adc
jne
xchg
mov
ss
jl
mov
sub
mov
aaa
test
inc
sahf
jno
mov
ret
sahf
out
xorb
mov
loope
jae
scas
mov
addb
sbb
cmpsl
or
icebp
in
push
fsubrl
mov
lea
mov
loopne
pop
xchg
andl
jbe
mov
sbb
push
into
ja
push
cltd
pop
daa
ja
and
popa
jmp
inc
movsl
mov
xor
and
test
mov
jg
inc
fnsave
bound
mov
cmc
call
jmp
mov
inc
scas
and
jge
push
jns
and
clc
mov
mov
loopne
pop
xor
fildl
mov
shl
icebp
dec
aad
and
popf
insb
lods
popa
pusha
lret
popf
std
pop
outsb
stc
adc
in
adc
adc
in
das
dec
sbb
mov
in
add
pushf
mov
jae
cmpsl
cld
lods
addr16
fcomps
dec
call
repnz
clc
jmp
dec
jo
add
mov
mov
sahf
imul
add
push
xor
pop
cwtl
fwait
and
nop
dec
pop
push
cmpb
sti
std
dec
jg
add
int
mov
stos
inc
mov
outsl
add
out
jl
mov
arpl
lds
into
mov
loopne
push
cs
mov
sbb
jb
cmp
shrl
pop
in
jl
cmp
push
pop
notb
scas
cmp
dec
ljmp
pop
pop
mov
mov
aaa
test
loopne
jmp
loop
cmpsb
aam
dec
popf
fidivs
mov
dec
leave
imul
ljmp
mov
aas
mov
sbbb
cmp
jl
insl
in
or
push
mov
fdivs
push
sbb
sub
pop
jb
das
test
rorl
aas
mov
xorb
dec
cwtl
sbb
adc
je
mov
jnp
and
xor
popf
dec
fiaddl
int3
sbb
icebp
aam
loopne
shrb
inc
arpl
inc
mov
gs
aam
jg
inc
outsb
inc
fisttps
push
mov
xchg
fdivl
in
jmp
jle
mov
xor
lcall
mov
mov
mov
scas
mov
xor
pop
or
push
in
fisubrs
inc
les
and
adc
rcll
and
mov
mov
shl
imul
pop
test
inc
das
or
nop
xchg
inc
and
sahf
mov
or
sahf
hlt
inc
and
jne
stos
in
popf
adc
mov
mov
data16
and
hlt
imul
sbb
addb
or
aaa
or
out
push
and
mov
add
sbb
jp
in
xchg
cmp
mov
imul
jge
test
cs
movsl
aam
imul
dec
je
pop
imul
xchg
lahf
test
adc
sbb
sbb
add
jecxz
sbb
jb
lcall
call
je
cmp
lahf
inc
cli
int3
pop
jne
inc
inc
pop
or
inc
jo
les
mov
adc
dec
test
sub
pushf
in
test
repnz
addl
pop
das
xchg
or
and
test
xchg
imul
test
gs
popf
mov
jp
dec
or
aas
and
inc
push
lea
aaa
cmp
mov
lret
add
notl
pop
and
insl
aas
push
insl
mov
mov
pop
xor
stos
xlat
jae
mov
sbb
or
jmp
test
arpl
and
fisttpll
cmc
cmc
mov
int3
jbe
fisubl
and
jbe
fcomi
and
jecxz
test
add
imul
iret
sub
push
dec
imul
fiadds
iret
dec
inc
mov
add
cmp
out
fildl
imul
push
iret
sbb
sub
xchg
sbb
subl
pushf
sbb
mov
mov
xorb
add
push
test
mulb
sahf
mov
addr16
hlt
insl
das
pop
mov
mov
repnz
into
xor
mov
sti
jmp
mov
xchg
jmp
mov
test
sahf
mov
sbb
cwtl
xchg
xor
mov
xor
stos
mov
jae
or
clc
push
or
leave
icebp
push
ret
aaa
out
jp
mov
aam
call
fcomps
insl
cmpsb
cmp
cmp
dec
mov
repz
pop
les
rcl
push
mov
adc
xor
push
pop
es
xor
cmp
aaa
inc
and
cwtl
mov
fistl
inc
and
xchg
lcall
sbb
jnp
push
leave
adc
icebp
inc
jo
stc
lret
jl
test
fisubs
jne
lds
jecxz
cmp
lret
roll
dec
mov
insl
iret
sbb
setl
sub
das
shl
jl
pusha
call
mov
add
jno
addb
aad
insl
das
mov
push
inc
pop
mov
dec
ljmp
cmp
ja
inc
dec
icebp
inc
je
push
int
and
xor
cwtl
sbb
rclb
mov
cmp
lret
add
dec
and
stos
rcrl
cwtl
cmp
add
in
inc
push
push
mov
pusha
inc
orl
jecxz
or
fcoml
std
mov
xchg
xchg
sub
test
fstps
jne
insb
stos
out
pop
pop
jb
das
sbb
or
push
addl
dec
icebp
and
addb
stos
int
jp
cmpsb
mov
lahf
push
jo
jnp
hlt
lods
out
add
in
cmp
mov
or
inc
mov
push
jns
lea
mov
pop
iret
andl
lahf
mov
push
cmpsb
and
mov
jecxz
sbb
sahf
and
test
test
mov
pop
rclb
cmc
dec
jbe
jp
jbe
pop
ljmp
ss
cli
fbstp
les
cmpsb
sub
pop
sub
cmc
fadds
or
push
cmpsl
jg
cmp
jnp
out
jecxz
xchg
pop
mov
xchg
loop
add
xor
out
push
sbb
sub
pop
mov
roll
scas
add
and
jno
fs
lret
xor
add
test
sub
push
fists
je
jecxz
pushf
sbb
or
jmp
icebp
mov
mov
inc
aas
pop
aas
jl
jmp
ds
xchg
sub
push
mov
les
rep
enter
sub
add
mov
mov
int
sub
mov
loope
mov
mov
in
lds
cmp
pop
xor
mov
les
lret
pop
lods
pop
mov
mov
in
inc
sub
out
jne
jns
cwtl
jg
aam
mov
dec
or
stos
das
ret
repnz
push
xor
fnsetpm(287
lock
mov
loop
sbb
jb
je
cmp
call
cmp
in
and
xchg
mov
adc
xchg
mov
aaa
sbb
and
push
or
cs
aaa
cmp
out
dec
dec
lds
push
xor
testb
cwtl
or
mov
clc
sarb
leave
mov
test
sub
lods
push
xor
dec
lret
es
ss
jmp
or
cld
sarb
dec
pop
sbb
add
xor
fwait
out
lahf
adc
mov
jns,pn
orl
call
popl
in
xor
repnz
dec
pop
fucom
lahf
and
lea
dec
icebp
sub
int3
loopne
dec
fistps
shlb
ss
inc
aad
movsb
das
loop
hlt
dec
mov
xor
and
sub
mov
sub
fs
imul
cmpsb
xchg
flds
daa
scas
push
cs
mov
lcall
pop
repnz
mov
push
push
pushf
jns
sarb
mov
fldl
xor
push
jbe
push
or
and
dec
sbb
adc
push
jno
inc
dec
adc
sbb
mov
scas
xchg
leave
pop
push
dec
fadds
push
data16
sub
cs
cmp
adc
pop
scas
cmp
nop
mov
xor
xorl
xor
pop
shrb
jp
fwait
sbb
inc
mov
xor
lods
lods
jbe
adc
jge
in
sbb
dec
jle
les
jg
inc
xchg
mov
mov
shrd
shr
shr
xor
push
xor
mov
mov
mov
push
push
push
call
shld
mov
xor
or
mov
mov
shl
or
xor
xor
xor
xor
jmp
stos
lods
and
xchg
rsm
xor
xchg
repnz
xor
cmc
mov
push
sbb
test
pop
int3
cmp
imul
or
cmp
in
mov
in
push
cmp
mov
jns
mov
cmpsb
add
int
imul
call
xchg
out
popa
fiadds
xchg
inc
jnp
pop
mov
addr16
mov
push
cmp
jp
cmp
xchg
xchg
fcos
mov
popa
fwait
xor
xor
mov
mov
pop
lods
push
outsb
mov
pop
xorb
out
push
popf
jmp
mov
stos
loope
push
adc
sbb
out
in
push
mov
and
inc
lcall
das
xchg
pop
mov
or
mov
dec
cmpsb
sub
xchg
mov
and
push
push
xor
and
push
pop
pop
xchg
loope
sub
cltd
aas
cmpsl
cmp
sub
mov
sbb
add
pop
pop
mov
dec
sbb
mov
in
test
data16
ds
cmpb
xchg
data16
inc
jne
or
shr
es
les
add
xchg
test
and
testl
push
cmp
ror
jg
shr
inc
sub
adc
and
jp
daa
lock
xchg
dec
mov
repz
cmp
push
push
inc
mov
xor
and
adc
xor
shlb
fistpll
out
mov
and
push
fstps
sarl
fnstcw
lds
repnz
add
icebp
cmp
sub
xchg
hlt
inc
pop
lcall
fcomp
imul
and
pop
ja
cmp
add
sbb
push
loope
mov
insb
fmuls
jg
aaa
in
dec
mov
jp
ret
lcall
scas
push
pop
imul
ret
imul
js
xor
mov
pop
cmp
mov
stc
mov
mov
movsb
and
inc
pushf
adc
scas
dec
fs
test
nop
shlb
fs
repz
adc
ret
shl
and
cmp
shlb
loope
mov
mov
push
cld
in
mov
cmc
hlt
in
in
mov
outsb
and
mov
stc
cmp
push
andl
shlb
mov
scas
shll
adc
int
pop
repnz
mov
sub
add
sbb
xor
cmpps
js
mov
loop
ljmp
mov
mov
mov
add
xchg
push
sti
inc
aas
in
mov
xor
dec
iret
fisubrl
jne
pop
fneni(8087
lahf
clc
ja
ficoms
mov
imul
dec
lcall
ja
orps
out
jg
adcb
pop
scas
push
idivl
mov
test
jmp
pop
ds
adc
inc
push
sub
pop
sbb
adc
or
xchg
adc
push
cltd
xchg
mov
mov
sbb
icebp
mov
enter
out
andb
dec
aam
dec
or
xchg
push
cs
lods
repnz
lahf
xor
jno
cmc
inc
inc
sbbl
gs
inc
scas
scas
int3
lds
fbld
cmc
mov
andb
xor
js
xchg
mov
sub
insb
daa
push
pop
mov
pushf
repnz
decl
pop
xchg
repnz
out
push
jae
add
stos
jb
adc
jg
ja
mov
push
inc
loopne
stos
push
outsb
mov
aam
add
out
push
inc
test
sub
and
std
jge
mov
adc
cmp
jp
in
mov
adc
loop
clc
loopne
mov
call
pop
push
mov
pop
push
push
xchg
and
lds
ficoml
lock
aas
mov
push
xchg
imul
inc
xor
add
push
add
sbb
dec
ds
and
pop
xchg
mov
cmpsl
loopne
sbb
ss
gs
add
sbb
pop
lahf
adc
push
pop
mov
mov
bound
mov
jecxz
test
js
loopne
aam
pop
loopne
lock
repnz
adc
sub
test
rol
movsb
pusha
jne
dec
lock
and
data16
lods
shr
and
push
shlb
lods
sbb
fs
cmp
dec
fs
movsb
jle
popf
mov
fbld
std
pop
mov
mov
cmp
lahf
test
cmp
sti
jo
push
pop
mov
jnp
push
or
insl
add
shll
cmp
int
sbb
adc
ljmp
enter
data16
out
lock
fst
mov
adc
aaa
xor
addl
sub
popa
pop
fmull
sub
pop
lcall
imul
decb
and
mov
mov
jmp
mov
add
mov
mov
mov
mov
mov
mov
movzwl
cltd
shld
xor
mov
mov
shl
mov
mov
xor
mov
cmp
jne
mov
cmp
jne
movl
mov
movl
mov
movl
mov
movl
mov
jmp
fiaddl
ret
adc
xor
popa
xor
pop
cmc
cmc
mov
lods
cmp
pop
jbe
sub
movsb
push
jecxz
xchg
out
arpl
je
addb
lods
in
jp
and
std
movsl
jnp
sar
addr16
or
mov
pop
adc
add
mov
nop
ret
push
cmpsb
xchg
push
xor
inc
push
or
clc
scas
in
mov
mov
adc
jle
bound
sub
inc
adc
out
mov
add
xchg
ds
test
add
adc
inc
or
jnp
adc
jo
and
xchg
mov
das
bound
fwait
shlb
aas
push
data16
mov
xor
xor
cld
in
int3
push
orb
mov
jbe
mov
ret
push
in
mov
add
popa
jecxz
aam
jne
addr16
lret
mov
jb
push
xchg
outsb
mov
sarb
sbb
lods
cs
sub
mov
push
jno
frstor
xor
pop
aad
add
hlt
lret
imul
jno
cmpb
ja
jbe
push
cs
cmp
ret
in
jbe
adc
sub
or
push
xlat
sub
mov
inc
dec
sbb
scas
push
or
dec
in
sar
cmc
xchg
enter
repz
add
arpl
in
cli
loopne
fsts
xrelease
loopne
test
mov
lds
cmpsb
fnstenv
push
sub
xchg
hlt
in
mov
xchg
jg
ret
push
int
xlat
mov
fisttps
mov
add
sub
and
or
inc
xor
mov
sub
push
mov
rcr
xchg
cltd
icebp
stc
rcl
lret
adc
mov
scas
out
and
push
pop
je
xchg
sub
or
inc
icebp
adc
jp
lea
fnsave
cmp
mov
loope
jecxz
or
cmp
inc
fmuls
mov
int3
push
and
fwait
push
fdecstp
mov
popf
pop
stos
mov
ss
push
push
cmp
push
jns
lret
fadds
lock
inc
test
cmpsl
mov
subl
jb
mov
pop
std
nop
lea
push
insb
xor
out
aaa
inc
data16
lds
or
or
js
add
inc
pop
mov
aad
lret
hlt
dec
hlt
sbb
and
cmpl
push
lret
lcall
movsb
cmpsb
mov
and
or
cwtl
fisubl
pop
movsb
jne
push
in
lods
mov
inc
popa
mov
inc
jle
ljmp
bndldx
mov
mov
cmp
sarb
sbb
xchg
popf
push
add
sarb
mov
and
pop
test
sub
pushf
ret
inc
and
mov
in
mov
in
cmp
mov
pop
lea
aam
mov
push
xor
mov
mov
call
lret
add
adcl
dec
cltd
cmp
mov
jmp
in
in
sub
xchg
inc
and
je
mov
dec
lret
ror
adcb
aaa
inc
test
adc
scas
sub
js
mov
hlt
jmp
addr16
add
xchg
dec
sbb
cmp
and
ja
sub
inc
inc
loope
mov
mov
and
aas
xlat
arpl
push
mov
mov
lea
fcoml
idivl
shl
ja
xlat
je
je
pop
aad
sbb
jb
jle
mov
js
jae
adc
mov
jne
cmc
mov
adc
adc
mov
fldl
adc
push
std
hlt
jmp
cli
mov
xor
fstps
je
shrl
adc
jp
pop
sub
mov
and
xor
push
mov
jl
push
push
std
stc
lods
sub
pop
adc
mov
outsl
jecxz
and
arpl
xchg
jg
and
neg
jle
xor
push
jge
lcall
mov
dec
sti
mov
mov
loopne
call
sub
cltd
jecxz
fwait
pop
lret
push
cli
sbb
jne
insb
push
rcrl
test
xchg
lahf
insl
add
mov
xor
rcll
filds
data16
push
ja
mov
mov
cmp
fsubrl
add
mov
test
cli
clc
sub
int3
mov
add
pop
push
xchg
imul
hlt
sbb
and
lea
inc
mov
lret
push
add
test
cmp
sub
jmp
sbb
xor
imul
sbb
pop
iret
cltd
xchg
movsl
xchg
xchg
mov
stos
push
xchg
or
loope
pushf
out
mov
xchg
loop
fcomip
je
imul
jmp
loop
fwait
ds
xchg
rorb
xchg
dec
cmpsb
inc
and
push
pop
dec
not
push
sub
cmp
pop
or
mov
inc
mov
and
sbb
mov
aam
ss
filds
dec
mov
aam
test
jmp
js
aad
sbb
mov
leave
aam
test
test
sub
push
jmp
sbb
mov
lret
std
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
add
mov
mov
mov
shrd
shr
mov
jmp
inc
jecxz
push
xor
dec
mov
repz
fnsave
cmc
cmc
mov
add
dec
xchg
mov
in
pop
and
xor
add
je
mov
fimull
adc
or
jns
xchg
les
mov
inc
adc
mov
ret
push
adc
or
out
and
out
xchg
xchg
outsl
jo
es
test
sbb
mov
adc
push
add
cmpsb
or
fstpt
aaa
and
cmpsb
sbb
loopne
jno
mov
jbe
fistpll
aad
mov
cmpsb
mov
repz
ret
data16
sub
lret
cmp
mov
cmc
mov
fldcw
sbb
cs
cli
sarb
push
mov
sub
cmp
loope
arpl
std
mov
inc
ret
sub
mov
sub
stos
jbe
mov
mov
mov
pop
fstps
xlat
std
je
add
mov
test
push
xchg
cmp
xor
in
stos
adc
fldt
pop
movsb
and
test
sub
aas
mov
mov
test
jg
fnstsw
xlat
or
addr16
jge
fisubl
pop
js
popa
or
lods
sbb
sbb
cmpsb
sbb
out
in
into
cwtl
jne
lret
aam
cwtl
push
add
test
push
cmp
das
repz
bound
in
xchg
test
or
jae
xchg
call
pop
adc
jo
imul
pop
out
pop
cmp
xlat
icebp
sub
add
adc
xor
cmc
fstl
sub
dec
xor
xchg
jne
mov
xchg
addr16
mov
test
push
push
mov
and
cmp
pop
mov
ljmp
aas
sbb
dec
xor
xchg
sbb
out
bound
rcrb
lahf
fmul
xchg
mov
iret
mov
dec
pop
sub
cmpb
cmpsl
test
mov
jbe
sbb
es
jae
pop
mov
pusha
push
outsb
lds
fs
sbb
mov
push
imul
int
notb
add
les
push
jne
mov
loope
mov
or
sbb
lods
imul
mov
push
out
pop
je
mov
ss
mov
adc
mov
idivb
cmpsl
push
pop
mov
cwtl
daa
sub
mov
xor
sub
jb
lds
jb
movsl
ror
fcoms
fldenv
push
push
fstps
fs
out
stos
jb
popa
sbb
mov
adc
out
push
push
push
push
out
hlt
jmp
stc
push
inc
inc
adc
cmp
jecxz
xchg
inc
nop
aaa
dec
cld
jnp
mov
pop
nop
xchg
ljmp
push
ret
outsl
insb
mov
es
sub
aas
dec
fmul
pop
or
pushf
in
adc
jle
mov
cli
xchg
dec
test
mov
cmp
pop
push
adc
push
adc
clc
sub
jmp
pushf
mov
stc
fildl
cmp
stos
inc
cmpsb
pusha
lea
shll
mov
cmp
mov
jbe
push
mov
or
mov
pop
jno
pop
cmp
std
xchg
cmpb
lret
mulb
sar
mov
fadds
jo
rcrl
and
lret
push
popa
adc
pop
in
xchg
pusha
cmc
sub
dec
mov
fwait
sub
pop
fninit
xchg
scas
xor
cmpsl
or
pop
or
adc
mov
icebp
or
dec
cmp
adc
xor
or
negl
cmp
add
cs
clc
sbb
cmp
addb
jl
adc
or
ja
jno
pop
fisttps
inc
push
mov
mov
dec
xchg
aad
mov
ret
stc
mov
movb
outsl
andb
dec
leave
in
or
aas
test
sub
clc
mov
mov
into
sub
push
mov
sub
jmp
push
fistl
sub
loopne
out
mov
js
sbb
sub
ret
imul
cld
int
je
out
and
mov
mov
dec
cmp
popf
sbb
xor
out
cmp
test
sbb
sub
clc
pop
dec
lods
push
push
push
mov
lcall
cmp
add
and
or
ljmp
fbstp
cmp
es
ror
cmp
ficompl
bound
sbb
sahf
jae
addr16
js
lahf
and
mov
push
nop
dec
das
sti
push
scas
cs
push
xor
inc
sbb
cltd
sti
adc
call
xchg
ret
pop
jne
addb
in
adc
fldcw
mov
cmp
outsl
aaa
pushf
sbb
icebp
lahf
test
adc
leave
add
mov
test
fldl
outsb
push
mov
xchg
test
popa
call
sbb
add
add
push
mov
jno
mov
jmp
jmp
cvttps2pi
xchg
cmpsl
add
pusha
je
das
and
div
mov
cmpsb
inc
int3
lods
loope
sbb
and
in
add
push
sti
pop
test
pop
sbb
xor
subl
iret
lock
aas
fstl
int3
mov
mov
fprem1
int
in
fnsave
jg
das
mov
push
xchg
int
and
xor
cmc
lds
xor
aad
mov
sbb
testl
dec
xchg
pop
cmpsl
shrl
push
sub
dec
dec
lret
fwait
fwait
mov
pop
data16
sbb
inc
imul
and
mov
push
repnz
filds
ret
pop
test
stc
sbb
lock
repnz
add
cmp
mov
lds
jns
sub
jmp
sub
jp
sbb
push
mov
sbb
les
lcall
mov
mov
andb
jp
mov
jge
mov
int
adc
rcl
dec
nop
inc
and
cmp
sahf
xor
cmp
stos
pushf
cmp
jl
mov
movsl
je
stos
clc
jns
call
lds
or
imull
jb
aad
sti
push
jne
mov
shll
adc
pop
ja
add
out
ret
out
in
or
mov
andb
stos
xor
repz
enter
mov
add
mov
scas
push
repnz
shlb
sti
fcmovnb
cmp
push
es
int
adc
mov
cmp
or
fisttpl
push
out
dec
das
out
xchg
repz
dec
aam
dec
repz
xchg
xorl
outsl
rcl
popa
and
test
roll
int3
cmp
xchg
ljmp
sub
mov
out
or
jge
or
notb
movsb
mov
sahf
and
fcoml
das
stc
dec
sub
cmp
push
sbb
mov
jo
lret
xchg
push
push
fistpl
cmpsl
inc
into
outsb
daa
mov
jbe
jle
lcall
mov
cwtl
popf
aaa
aam
inc
lret
mov
push
es
fiaddl
pop
in
test
mov
cmp
xchg
mov
xchg
xor
in
add
pavgb
orl
or
and
dec
aam
jnp
xchg
dec
ret
insl
push
mov
push
pop
hlt
cmp
int
inc
loope
jp
or
fdiv
lahf
es
jle
jbe
xchg
fisttpl
add
int
int
adc
psubusb
xchg
filds
and
push
dec
fdivs
pop
test
ret
jae
in
cli
push
xor
mov
call
lds
mov
mov
sub
pop
mov
sbb
idivl
add
pop
dec
movsb
fiaddl
xchg
mov
aam
dec
popf
sub
loopne
cli
push
push
sbbl
add
call
out
fisubrs
adcl
cmc
mov
inc
imul
adc
cli
xor
push
jns
cmp
inc
call
in
mov
pop
inc
aam
in
sbb
out
lock
aam
cli
inc
dec
sbb
cltd
jb
dec
aad
cmp
pop
fs
xor
loop
enter
ljmp
cltd
adc
lds
lds
mov
sub
or
mov
xchg
daa
mov
push
push
test
ds
je
scas
lods
add
mov
sub
pmulhw
push
sub
mov
cltd
adc
push
lret
cmpsl
dec
or
sbb
jnp
push
fucom
enter
popa
cmp
xor
in
outsb
into
test
sbb
inc
pop
xchg
cmp
xchg
mov
inc
lahf
pop
daa
push
or
pop
aad
movb
mov
cld
ds
push
adc
decb
in
fisubl
icebp
dec
and
xor
and
movsl
xor
dec
xchg
rcrb
ret
mov
xor
mov
dec
dec
inc
mov
inc
aas
in
clc
lea
cmp
iret
outsb
pusha
mov
les
sub
scas
cld
pop
or
test
dec
dec
jl
mov
sbb
sti
jle
lods
dec
pushf
frstor
sub
inc
ss
cs
loopne
es
int3
stc
mov
sub
int
cld
mov
push
fisubs
shll
and
mov
lahf
push
lds
jmp
push
mov
scas
lcall
mov
jp
xchg
aad
outsl
stos
mov
push
sbb
mov
cmp
mov
inc
aad
aaa
popf
fwait
mov
jb
inc
lds
lea
movsb
xchg
ja
loope
aad
sub
sbb
pop
xchg
shlw
fldl
push
lahf
pop
push
xor
stc
cwtl
lret
loope
jnp
pop
lahf
add
dec
lret
mov
sbb
enter
mov
mov
shll
mov
shl
xor
or
mov
jmp
insl
mov
cs
push
mov
xor
das
pop
das
or
lods
add
cmc
mov
in
mov
mov
test
cmp
repnz
and
pop
jp
mov
mov
jp
adc
adc
movsl
insl
clc
sub
push
and
sbb
mov
pop
dec
mov
sbbb
je
add
push
sub
ja
or
scas
ret
pusha
decb
inc
jecxz
andb
lods
std
xor
sbb
mov
xchg
xchg
mul
enter
mov
mov
out
cwtl
push
mov
push
and
jno
cmp
jno
stc
cld
test
pop
pop
hlt
ret
test
mov
nop
jp
add
xchg
jns
insb
jl
fcoml
addr16
cmp
out
dec
sub
stc
and
inc
push
arpl
inc
mov
in
fnstcw
clc
lcall
sbb
adc
dec
mov
sbb
cmpb
and
ja
add
scas
dec
out
and
add
mov
int
cld
mov
cmp
arpl
jle
pop
mov
pop
add
popa
addb
outsl
lea
cwtl
out
cmpsl
sbb
test
aad
icebp
and
or
test
shrb
inc
dec
add
mov
pop
outsb
jb
and
and
jb
cmp
jns
out
insb
push
mov
js
mov
ret
fnstcw
sbb
cmp
shl
es
push
or
call
sbb
int3
lds
stc
push
jmp
out
insl
or
dec
mov
push
insl
mov
sub
adc
call
lods
cmp
icebp
enter
shlb
cmp
rclb
frstor
adc
jbe
aaa
lods
mov
ljmp
or
pop
jnp
stos
in
xchg
notl
xor
das
jl
sbb
mov
jae
dec
jge
shrb
cwtl
out
jmp
xor
mov
add
popa
popa
mov
xor
push
xchg
jmp
jae
frstor
sarb
jl
or
xchg
es
cmp
and
xchg
les
pop
js
jne
or
cwtl
scas
fwait
pop
or
ja
push
cmp
mov
outsl
aad
jae
mov
dec
lock
xchg
jno
or
shll
add
cmp
add
aas
pop
fnstcw
dec
lcall
test
jge
inc
mov
arpl
jnp
jecxz
testb
mov
rcll
jb
aam
jne
call
repnz
es
lcall
mov
cmpsl
into
out
xchg
iret
call
jne
movsl
movb
push
cmp
sarb
scas
push
pop
inc
and
inc
cwtl
das
sbb
fldenv
loopne
lods
add
xchg
iret
lcall
xchg
scas
or
mov
hlt
std
fsubr
sub
ja
insb
sbbl
popa
jl
push
scas
fisubrl
stos
repnz
les
add
sbb
pop
lret
pop
shlb
iret
mov
mov
add
lahf
das
xor
lods
pop
mov
negb
cld
push
ret
fs
or
sbb
xchg
xor
in
jb
shlb
dec
mov
std
jecxz
aam
negl
mov
insb
bound
loop
lahf
sbb
mov
mov
cli
imulb
cmc
sub
add
out
and
pop
mov
sbb
fnstenv
aam
cltd
jo
rclb
inc
mov
hlt
das
inc
sahf
test
loopne
nop
xlat
out
mov
andl
push
leave
insb
ret
es
data16
jmp
mov
test
push
xor
out
repnz
xchg
pop
push
stc
pop
mov
fistl
jo
pop
lahf
std
into
jns
jnp
loopne
aas
cltd
dec
sbb
dec
push
fisubl
pop
push
and
pop
sbb
js
pop
mov
xor
icebp
adc
and
mov
pushf
add
mov
push
mov
data16
insb
mov
dec
loop
scas
data16
addr16
in
popf
lds
pop
jmp
and
push
cmp
lret
mov
test
rcrl
scas
xchg
lock
xor
jo
pusha
cld
mov
pop
push
xchg
mov
out
ret
cli
add
cmp
mov
dec
add
inc
je
out
ret
mov
inc
adc
jle
hlt
adc
je
mov
addr16
xchg
out
push
jle
mov
arpl
cmp
data16
div
sarb
test
adcl
lahf
or
add
rcl
sbb
loopne
push
xchg
daa
sub
sub
dec
dec
addr16
xor
or
popa
jecxz
mov
mov
or
int3
push
mov
or
ss
mov
and
aam
shll
fisttpll
in
data16
and
mov
inc
cmp
cmpsl
fst
lahf
test
fadds
push
bound
jp
lahf
mov
xor
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
add
mov
mov
mov
shrd
shr
mov
mov
xor
shl
xor
jmp
push
add
mov
sbb
f2xm1
cmp
div
mov
mov
dec
sub
fcmovnbe
jmp
cmc
es
and
add
cmp
push
jg
es
popa
out
push
div
js
fcmovne
cmp
aaa
push
insl
ljmp
jmp
add
icebp
lret
aaa
mov
push
jae
test
cmpps
popa
cmp
mov
pop
dec
jns
daa
pop
iret
and
xchg
xor
enter
ja
mov
add
mov
or
lcall
pop
and
data16
rsm
pop
jns
pop
mov
movsl
mov
dec
shrl
int
lds
scas
push
cli
fs
sbb
xchg
sub
stos
clc
fmull
xchg
dec
dec
dec
out
cmp
adcl
std
jb
sub
xchg
shlb
jp
jecxz
cmp
mov
lret
ja
dec
cld
sub
push
or
mov
fld
add
loope
pushf
shrb
sbb
mov
xchg
cld
movsb
stc
push
dec
pop
xlat
scas
mov
inc
addr16
int
dec
mov
cmp
scas
mov
inc
sub
insb
jge,pt
adc
adc
mov
fsubl
sbb
mov
in
pusha
sub
das
movsl
test
cltd
sahf
jg
sbb
orb
in
mulb
mov
cmp
lds
pop
push
lret
pop
call
insb
sub
mov
fcmovb
lea
outsb
outsb
lods
xchg
jle
cmp
adc
imul
xor
mov
adc
adc
lods
pushf
or
mov
or
in
test
sbb
fs
mov
mov
sbb
inc
lret
sub
lcall
repz
mov
dec
lock
push
mov
mov
cmp
xlat
mov
sbb
inc
lret
shlb
jno
cli
push
and
in
dec
jge
xlat
ljmp
or
xor
and
inc
mov
mov
icebp
ljmp
sbb
fwait
adc
jp
push
jge
mov
xchg
fidivrs
mov
test
sarl
jmp
fmull
rorb
xor
ret
hlt
xor
cli
hlt
test
mov
mov
aam
pop
ret
movl
or
pusha
in
ret
bnd
loop
in
mov
call
sahf
repnz
int
mov
sbb
xchg
test
mov
je
xor
lret
jno
jbe
jnp
ljmp
or
mov
ret
jae
jae
insl
mov
mov
enter
push
xor
orb
lret
leave
cs
cli
mov
mov
mov
ljmp
xchg
cmp
inc
arpl
movsl
jae
inc
mov
lahf
xor
pop
mov
jle
ficomps
clc
sahf
mov
rorl
call
cmp
stc
and
stos
xchg
mov
mov
mov
rcll
lock
xor
daa
cwtl
and
mov
dec
addr16
fstl
or
addl
rcll
mov
xchg
imul
mov
lock
mov
test
push
cmp
out
popf
mov
mov
inc
imul
xchg
ret
mov
aam
lcall
sub
dec
inc
add
mov
sub
mov
adc
jge
test
pop
push
popa
and
jl
dec
cli
mov
push
mov
fs
inc
icebp
or
sbb
and
adc
pop
or
pop
popf
test
test
scas
les
fnstsw
sub
mov
rorb
xchg
add
sbb
sti
jmp
out
les
outsb
ljmp
pop
shl
in
mov
cli
aas
xrelease
jp
sub
fldt
lods
mov
es
gs
adc
add
xor
js
add
pop
enter
or
push
push
repz
pop
lds
rclb
in
loopne
mov
out
ret
out
mov
jo
stos
dec
mov
iret
sbb
cmp
mov
mov
push
jb
arpl
push
call
sahf
xchg
mov
rorb
rclb
repz
or
aam
rclb
test
cmp
jp
mov
sub
sub
es
and
mov
dec
push
xor
scas
cmp
jnp
pop
inc
pop
adc
sub
cmp
jb
mov
ret
jl
jp
adc
adc
pop
popf
mov
sub
test
test
push
pop
filds
push
jbe
adc
arpl
and
dec
loope
cwtl
test
std
out
lods
lahf
fstpl
lods
push
ds
cmc
inc
or
mov
in
in
iret
inc
jno
xor
xchg
jle
mov
or
mov
jmp
dec
jmp
nop
and
dec
sub
cmc
f2xm1
jg
dec
repnz
cmc
mov
cmpsl
rcll
push
addr16
and
or
ljmpw
je
out
jmp
das
xor
in
add
rdtsc
mov
dec
lret
pusha
sbb
pop
repnz
lods
fimuls
cmp
movsl
xorb
ds
cmpsl
sub
lahf
es
cwtl
pop
push
repnz
adc
popf
not
rolb
ret
push
pop
jne
or
aaa
push
pop
test
mov
ficompl
sub
scas
xchg
imul
xchg
pop
sarb
pop
push
in
fwait
mov
dec
push
mov
and
pushf
xor
mul
lcall
xchg
dec
ret
and
sub
adc
rcl
rcrb
lds
fistpl
inc
mov
aam
movsl
pop
pop
jno
mov
ficoms
xchg
cmc
fwait
popl
les
loop
xlat
loop
add
popl
push
push
dec
push
inc
mov
add
xor
cmp
cmpsb
adc
in
fs
push
xchg
loopne
xchg
pop
adc
inc
xchg
sub
rorl
cvtps2pi
mov
mov
lret
jge
mov
mov
cmp
test
arpl
lock
dec
movl
mov
and
xorb
add
inc
pop
fbld
or
imul
adc
in
lock
loopne
lahf
mov
and
xchg
pop
pop
ret
sets
add
sbb
popf
in
mov
jecxz
xchg
xchg
xor
sahf
pop
pop
movsb
or
mov
fiadds
daa
cmc
sbb
lea
or
push
xor
sub
cli
add
and
cmpsb
mov
fdivl
stc
orl
mov
loop
sahf
mov
ret
pop
dec
shll
test
xchg
mov
repz
repz
sbbl
adcl
stos
ret
add
sahf
shl
pushf
xchg
faddp
push
ficoms
mov
arpl
fistps
outsb
dec
fldl
pop
xor
decl
loopne
push
jo
pop
push
repz
push
xchg
xchg
xchg
clc
xor
stos
xchg
ja
fistpll
fs
push
xor
decl
mov
into
xchg
xlat
jns
test
lcall
xchg
adcb
out
xchg
mov
cli
sub
bound
js
xchg
pop
xchg
sub
inc
push
cmp
movsl
outsb
inc
lret
stos
pop
insl
repz
je
add
outsl
arpl
fdivrl
mov
mov
rorl
fs
lret
ljmp
cld
pop
inc
dec
or
addr16
sub
mov
push
fnsetpm(287
rcrb
adc
and
arpl
cmp
push
mov
mov
push
insb
mov
outsl
in
scas
jl
insb
int
mov
adc
jnp
jb
int3
in
and
fidivrs
ret
rcrb
xchg
push
cmpsl
addl
in
sbb
pushf
arpl
ret
cwtl
jbe
and
sub
sub
mov
cmpsl
add
adc
jp
push
inc
pop
or
nop
and
scas
scas
mov
ds
jb
lcall
shrl
adc
cwtl
xchg
stc
movsb
inc
mov
pand
adc
sub
mov
jae
stos
inc
jae
mov
pop
mov
fstps
cmp
sbb
or
lret
jge
xor
adc
arpl
jno
es
insb
push
aaa
out
ss
adc
xchg
jle
push
pusha
in
sub
mov
nop
in
jo
mov
hlt
jnp
outsl
cwtl
shrb
or
xor
fadd
push
insb
xchg
int
shlb
xor
imul
insb
jns
push
shrl
lret
jg
test
inc
pop
ret
sub
ret
or
orl
adc
sub
cmp
or
fistl
movsb
das
ds
mov
xchg
mov
sub
aas
mov
shll
mov
jl
xchg
inc
xor
inc
stos
fildl
xchg
outsb
mov
mov
mov
call
xchg
jl
int
jnp
cld
ja
in
test
loopne
add
cmpsl
ds
mov
mov
jle
jae
out
pop
gs
sub
orl
loope
idiv
into
ret
push
and
or
xchg
mov
mov
iret
pushf
sbb
pop
cmp
cli
mov
jnp
fsubrs
sarb
push
fcomps
out
mov
stos
mov
mov
mov
or
repnz
daa
mov
sub
mov
mov
inc
sbb
aad
psadbw
cld
xchg
pop
push
out
imul
mov
out
out
pop
dec
xchg
mov
pop
mov
jl
je
je
sbb
or
mov
adc
mov
pop
dec
adc
push
or
jle
mov
into
ret
cwtl
adc
pusha
jecxz
in
push
sar
call
sub
movsl
lods
aas
rcrl
dec
lret
test
aas
mov
xor
fstl
arpl
push
rorb
lcall
pop
je
std
lret
lahf
or
mov
scas
mov
xchg
stos
sbb
loopne
mov
or
mov
mov
jmp
lds
xor
dec
xchg
xor
jg
repnz
in
cmc
mov
push
pushl
pop
add
into
inc
adc
pop
in
push
pop
push
hlt
sub
daa
xchg
adc
mov
push
sbb
je
mov
ja
and
out
in
into
add
inc
lret
jns
pusha
push
fcomps
in
xlat
xlat
fs
pop
pushl
out
in
dec
and
jns
negb
ljmp
push
sub
int3
jle
sbb
fmull
or
cmpsl
in
mov
aaa
pop
outsb
xor
arpl
jp
not
adc
jbe
mov
or
sbb
mov
lret
rcrb
adc
mov
sbb
fcomps
mov
pop
into
out
pop
xchg
lret
fs
pop
out
dec
stos
data16
or
mov
pop
xchg
mov
add
out
cwtl
mov
xchg
lock
mov
call
sahf
adc
pop
call
sahf
and
mov
andb
xor
mov
js
daa
lahf
or
adc
insl
pop
or
lds
xchg
push
fwait
or
gs
dec
pop
fistpl
out
inc
xor
xor
mov
sbb
repz
jecxz
adc
sub
rol
push
inc
mov
pop
lret
lods
fsubrl
lcall
loop
pop
mov
xor
or
into
movsb
push
add
xchg
sbb
ret
ds
xchg
lret
push
push
popa
cmpsl
mov
out
cwtl
adc
sbb
aaa
je
push
outsl
pop
sub
sub
or
fisubl
loop
and
imul
sbb
rol
and
mov
and
dec
push
mov
lret
or
insb
dec
push
int3
test
test
pop
mov
jb
mov
lahf
inc
sarb
stos
jbe
repz
sbb
std
fdivrs
test
aaa
daa
call
mov
push
mov
daa
cltd
add
sub
push
mov
into
lock
adc
je
xchg
dec
or
lcall
cmp
mov
popf
fwait
cld
dec
push
lock
and
dec
sbb
jb
mov
aaa
adc
jbe
jg
daa
mov
xor
aaa
mov
insl
cmp
add
adc
dec
mull
es
leave
and
push
mov
inc
xchg
filds
mov
js
loop
and
ljmp
fnsave
fsts
cli
pop
shlb
mov
mov
pop
inc
mov
je
popa
push
hlt
test
sbb
fiadds
mov
pusha
push
lcall
ljmp
dec
and
push
pop
insb
push
cwtl
add
loop
mov
xchg
push
adc
setae
ret
jae
jg
aad
jne
inc
dec
lcall
mov
pop
pop
leave
aam
fwait
push
aad
jbe
lock
mov
call
xchg
xchg
or
dec
test
loope
test
imul
jbe
mov
or
cmpsl
stc
jb
add
or
push
sbb
mov
cmp
jmp
stos
leave
mov
out
cmp
push
cmp
dec
js
movsb
movsb
xor
xchg
flds
mov
cmc
push
out
or
lds
dec
test
loope
rdmsr
loopne
mov
mov
rolb
cs
mov
movsl
push
push
subl
fimull
fdivs
push
xchg
ja
ficoms
lea
adc
inc
sub
lret
mov
dec
lods
pop
cli
push
frstor
jne
inc
jns
add
stos
jo
push
icebp
cmp
mov
bound
bound
je
mov
mov
xchg
mov
pop
int
mov
jno
and
mov
xlat
shl
jge
jbe
test
push
mov
or
adc
pop
loop
inc
mov
pop
cli
inc
sbb
or
mov
daa
ljmp
sub
and
xchg
mov
sti
sub
mov
andb
mov
jno
add
in
mov
mov
inc
fcmove
sub
push
data16
sub
xchg
mov
cmp
push
popf
cmp
insb
add
dec
sbb
pusha
sbb
out
push
out
fwait
adc
xor
sbb
inc
iret
and
mov
push
pop
inc
stc
inc
rorl
sbb
push
or
add
shl
insl
in
push
inc
mov
sarb
mov
push
stos
pop
dec
push
pop
in
out
sbb
dec
and
dec
push
mov
push
ret
rcrl
mov
pop
cs
push
jnp
out
xor
mov
ret
mov
sbb
or
outsl
fs
mov
frstor
hlt
mov
loope
enter
mov
ss
ret
inc
dec
mov
cmp
xor
fisubs
sti
mov
jp
enter
rcr
rorb
mov
xor
add
pop
lea
xchg
push
add
jmp
mov
xor
xor
or
add
shl
mov
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
mov
mov
add
mov
mov
shrd
shr
mov
mov
xor
shl
mov
xor
or
mov
add
shrd
jmp
mov
out
call
sbb
and
mov
lock
shl
cmc
mov
out
int
jnp
addr16
mov
jle
gs
xchg
cld
shlb
sub
cltd
ret
sti
add
mov
jnp
repz
roll
push
shlb
icebp
aad
xor
xchg
xlat
pop
in
sub
inc
xchg
mov
call
xchg
orl
mov
sub
mov
push
in
shll
test
mov
ret
scas
xchg
sbb
push
daa
mov
cmpsl
mov
push
push
insl
push
or
dec
and
xchg
sbb
mov
cmp
xchg
ss
lcall
lret
das
xor
sbb
sti
mov
lret
lret
sbb
inc
add
dec
push
les
scas
incb
add
daa
and
sbb
xor
arpl
mov
inc
jl
jmp
into
jne
ror
add
xor
mov
xchg
imul
adc
ss
scas
adcb
and
nopl
xchg
xchg
loop
lea
and
imul
inc
test
roll
ds
or
aas
sbb
pop
fistpl
into
into
ret
dec
imul
cmc
das
insl
jbe
cmp
pop
arpl
fmuls
pop
adc
pop
mov
push
and
or
and
clc
push
pop
pop
fs
in
mov
dec
or
xchg
loop
mov
outsb
jo
cmp
lods
mov
imul
fcompl
adc
in
sbb
popf
fldenv
cmc
inc
xorl
fldcw
mov
das
push
rolb
bound
imul
cmp
xchg
mov
popa
repnz
adc
push
push
xor
mov
mov
jg
mov
flds
je
sbb
add
js
mov
cs
inc
pop
test
lret
adc
mov
mov
cmpsb
in
scas
sub
inc
jle
inc
or
xchg
inc
lds
xor
xchg
dec
pop
mulb
inc
mov
imul
shl
aam
mov
out
xor
leave
push
inc
mov
jge
out
test
xor
xor
fstps
int
cmpsb
sbb
dec
mov
pop
sbb
ljmp
daa
je
aas
pop
xor
jcxz
xchg
push
cmp
mov
fisubs
push
adcb
xorl
push
mov
popf
cmp
es
mov
mov
addb
inc
lods
dec
sbb
sbb
push
push
in
and
xchg
jno
shlb
sbb
arpl
xor
xchg
sub
mov
xchg
lea
xchg
sub
loop
xor
push
cld
sbb
enter
push
std
bound
imull
push
pop
sub
mov
sahf
sbb
fimuls
scas
pop
mov
sub
movsl
inc
pop
nop
cmc
icebp
out
xchg
add
std
cltd
insl
cld
push
jl
sbb
call
mov
in
cs
cli
cmpsl
clc
in
add
adc
lods
lods
data16
sub
cmp
pop
push
popa
adc
fisubs
stos
daa
dec
jns
test
or
add
mov
je
sbb
std
inc
xchg
imul
mov
mov
push
jg
xor
adc
mull
xlat
jne
js
add
xchg
lods
xchg
mov
xchg
xchg
mov
test
mov
cld
ljmp
lds
xor
int
and
lock
push
cltd
mov
dec
fcomps
cli
xor
hlt
test
lods
repnz
cmpl
inc
hlt
mov
pop
andb
test
adc
push
fsubs
dec
xchg
cmc
mov
mov
fs
sub
or
push
in
push
pop
sbb
sarl
sbbl
pop
jge
add
arpl
lea
mov
fwait
pop
adcl
jle
lret
outsl
movsl
cmp
ljmp
pop
jno
inc
int3
js
pop
jl
pop
repz
sbb
cmpsl
dec
cmc
inc
enter
inc
call
into
sbb
mov
pop
push
xor
add
mov
push
or
es
or
jl
sbb
stos
psubd
outsl
xchg
lods
arpl
jge
aam
push
test
insb
fidivrs
xchg
fcompl
loopne
mov
dec
ds
test
add
maxps
call
stc
xchg
jle
xchg
xor
fsubs
sbb
and
or
add
in
xor
push
push
cmp
iret
movsb
sbb
and
clts
imul
pop
les
sti
scas
pop
jecxz
sub
ror
insb
or
lods
cmp
or
xchg
data16
cmp
adc
xchg
or
arpl
imul
mov
jbe
xor
mov
dec
add
mov
push
in
fwait
jbe
adc
and
mov
cld
lea
xchg
xor
scas
or
and
jb
adc
mov
aaa
cmc
jmp
mov
inc
mov
mov
mov
xor
shr
mov
mov
xor
or
mov
or
shl
mov
mov
shl
mov
xor
mov
mov
mov
xor
xor
jmp
add
aam
adc
shll
mov
and
mov
div
mov
lcall
ds
sbb
mov
scas
pop
push
rcrb
fwait
cmp
rolb
popa
out
dec
stc
out
or
jp
xchg
and
add
fdiv
jle
sbb
push
daa
popa
test
mov
or
aas
xor
push
push
mov
aas
loopne
ljmp
cltd
ror
add
sahf
xchg
sub
notb
push
out
sub
cli
lret
imul
fwait
rol
xchg
push
jp
or
repz
jns
inc
daa
roll
push
icebp
int
shr
mov
dec
aas
push
bsf
sbb
mov
mov
scas
icebp
call
mov
test
iret
aaa
nop
xchg
mov
sub
mov
nop
jge
pushf
and
inc
cmpsb
ljmp
je
repz
xchg
mov
shrl
jnp
pop
in
push
inc
roll
imul
gs
pop
mov
mov
push
sub
subl
shl
jbe
pop
icebp
xlat
push
inc
cmp
jb
ret
push
push
add
std
jmp
out
cmp
xor
out
test
pop
xchg
imul
xchg
sub
adcl
mov
pop
lret
adc
mov
leave
pop
cli
jo
imul
into
push
das
aaa
mov
mov
inc
xchg
mov
call
or
fs
add
out
arpl
int3
mov
repz
scas
lods
sub
jmp
push
imul
andl
addr16
inc
or
cmp
lea
sbb
filds
lret
jns
and
or
xchg
xchg
jp
pop
cmp
lods
mov
in
mov
outsb
out
cld
sub
into
mov
test
or
jbe
js
push
sbb
inc
inc
popf
ljmp
pop
ja
cmp
in
push
lahf
sbb
jnp
xor
inc
jmp
push
mov
lea
fmulp
adc
fisubl
scas
jb
pop
out
repz
lods
mov
repnz
jnp
pop
in
push
ror
jecxz
jmp
jp
xchg
xlat
je
test
test
rcrl
arpl
jle
inc
stos
xchg
lods
in
fdivr
call
mov
push
cli
mov
jge
xchg
mov
popl
xor
mov
icebp
cltd
adc
mov
pop
xor
in
cmp
hlt
fmul
fs
je
jg
jae
xchg
es
cmpsb
adc
sub
mov
lea
outsb
mov
movsb
jl
ds
pop
pop
xchg
lret
mov
mul
call
add
add
testl
sub
lcall
popf
lret
mov
add
cli
lock
pop
xchg
popf
adc
ret
jns
sarl
and
pop
sti
test
mov
cmp
shl
ljmp
aas
orl
xlat
jg
ss
cmp
adc
adc
add
loop
add
test
fcmove
jp
push
jo
jne
xor
and
mov
je
sbb
pop
clc
push
ja
nopl
ret
aad
pop
rcrl
adc
pop
rcrb
jns
and
adc
dec
mov
mov
inc
pop
scas
cmp
adc
int
pop
outsb
xchg
push
loope
push
pop
xor
lds
int3
lcall
and
cmp
jbe
xor
mov
movsb
dec
int
inc
sarl
cmp
cld
cmp
stc
sub
and
jb
jle
addr16
insb
xchg
gs
jnp
ss
push
cltd
leave
and
mul
cld
or
out
fstpt
adcl
mov
fimull
mov
icebp
xlat
loope
dec
gs
and
pop
mov
xor
jbe
sbb
jp
sub
rolb
add
xchg
int
lock
sub
mov
fisttps
mov
out
loope
jmp
lods
insl
mov
lods
lret
add
mov
ret
xchg
pusha
cmp
jle
xor
push
xor
hlt
xchg
adc
call
sarb
outsb
push
jp
jbe
or
push
xchg
inc
push
jmp
insb
push
fisubs
mov
cmp
sahf
xchg
inc
incb
movsl
in
ficoml
xlat
in
pop
inc
mov
mov
cmp
lds
and
adc
outsb
or
out
add
mov
jne
mov
jp
add
call
xchg
adc
cmp
mov
push
movsl
inc
test
iret
in
cmc
in
mov
ja
xor
lcall
inc
xchg
dec
into
cmp
mov
into
test
std
pop
inc
insb
push
scas
or
mov
xlat
test
icebp
cmpsb
inc
push
mov
or
addl
mov
dec
sub
push
shrl
stc
out
push
pop
mov
enter
icebp
stos
bound
sbb
imul
sub
scas
icebp
or
fs
fwait
jae
movsb
test
lds
lock
js
shrd
shr
or
jmp
aaa
jg
adc
push
and
mov
cmpsb
div
mov
xlat
popf
push
mov
daa
loopne
iret
pop
jae
xchg
lret
out
icebp
bound
inc
push
icebp
add
xlat
mov
cli
jnp
int
stos
pop
ret
in
sub
lahf
leave
bound
dec
sbb
mov
lret
stc
out
repz
sub
and
mov
lds
dec
sub
push
mov
outsb
int3
pusha
test
lret
xlat
xchg
pop
push
dec
mov
inc
movsb
inc
pusha
popf
shr
fninit
sbb
pushf
out
add
repnz
outsb
aam
jo
sbb
rcl
mov
xor
cli
adc
mov
lock
mov
andb
popf
aas
sbb
in
mov
lock
add
cmp
stos
sub
mov
test
subb
ret
add
mov
fcomip
adc
xor
and
xchg
xchg
pop
jp
fistps
dec
pop
out
sub
jno
gs
jecxz
adc
mov
stc
aam
push
aad
loopne
inc
sar
cmp
add
push
xor
xchg
imul
add
or
loopne
rcrl
or
inc
scas
cltd
pop
pusha
pop
lcall
jne
pop
in
sbb
jno
and
das
jo
xlat
xchg
enter
push
mov
cmp
int3
rcrl
out
ret
lretw
xchg
movl
cld
xchg
icebp
fbstp
repnz
imul
adc
fs
sub
inc
xor
add
imul
iret
push
sub
ljmp
nop
insl
movsl
push
mov
test
and
jne
or
negl
insl
aad
mov
rclb
dec
mov
or
lret
adcl
loop
inc
gs
or
mov
imul
mov
adc
iret
and
sbb
mov
ret
cmc
jg
fnstcw
lock
xor
js
loope
push
dec
scas
sbb
hlt
mov
test
lcall
jl
lods
repnz
dec
fisubl
stos
arpl
pop
test
cmp
sbb
adc
hlt
lcall
mov
in
arpl
sbb
mov
rcll
les
push
aaa
inc
xor
aaa
sahf
or
pop
loop
mov
enter
in
cmc
lock
jnp
push
dec
das
lds
cltd
xor
cli
mov
int3
pop
mov
and
insl
pusha
shrl
and
or
jno
mov
jle
and
loopne
pop
xchg
repz
sub
or
mov
mov
clc
mov
test
xor
test
ja
sti
mov
testl
cmpl
aad
adc
in
add
popa
jge
in
call
ss
xor
and
es
xchg
roll
cld
cmp
sbb
mov
cmp
jne
sbbl
push
mov
cmp
lds
fdivrs
js
jo
dec
cmp
in
add
sub
cs
frstor
imulb
cmp
shlb
loop
das
into
sub
stos
mov
jnp
insb
sub
daa
dec
clc
scas
inc
sub
push
inc
popl
pop
sub
jmp
jecxz
les
dec
sub
cli
inc
pop
push
ds
bound
icebp
push
stc
mov
loopne
dec
sbb
rorl
sarl
sub
cmp
data16
sub
mov
mov
enter
aas
xor
hlt
mov
mov
adc
nop
enter
cmp
add
add
xchg
repz
movaps
sti
mov
adc
cld
mov
stc
cmp
scas
mov
in
sbb
inc
cmp
push
ja
or
jb
in
adc
es
mov
dec
xchg
xchg
js
popf
fwait
scas
jp
scas
lods
cmpsl
cmp
xchg
fst
mov
push
stos
sti
push
mov
mov
cmpl
popf
inc
lret
jae
into
daa
sub
out
pop
add
push
shrl
push
sbb
adc
and
pushf
pop
testl
inc
mov
cmpsb
pop
xrelease
xor
cmp
ret
gs
and
fs
jl
into
cmp
jmp
pop
adc
and
ret
add
sarb
and
mov
lods
jne
add
and
jb
inc
divb
test
int3
in
dec
les
pop
fcom
jbe
lods
jae
adc
ljmp
les
cltd
lea
xlat
dec
aaa
dec
mov
int3
in
ret
nop
sub
js
clc
in
xlat
loopw
and
rorb
addl
popf
rcrb
push
mov
xor
popf
syscall
stc
fldl
push
xor
in
add
push
int3
fisubrs
xlat
push
or
mov
push
lahf
mov
mov
or
or
cmp
popa
cli
outsb
lods
sbb
or
mov
mov
mov
mov
xor
shl
xor
mov
mov
mov
mov
xor
xor
jmp
mov
stos
out
and
inc
insl
xor
mov
cmc
mov
add
sub
lods
test
lret
pop
pop
cltd
inc
outsb
out
xlat
pusha
lds
scas
xchg
gs
add
nop
sub
mov
add
and
dec
push
divb
sbb
daa
mov
ss
enter
jae
sbb
loop
mov
shr
stos
mov
mov
mov
enter
jp
mov
pop
push
sbb
xchg
xchg
push
into
mov
into
inc
or
sbb
ss
mov
adc
push
ljmp
push
sub
lret
aam
jo
bswap
dec
bound
fisubs
jnp
and
inc
xor
movups
lahf
jae
lock
add
mov
imul
fcmovu
mov
aam
ss
push
aam
shrb
cwtl
dec
out
outsb
stos
sbb
pop
clc
and
add
enter
test
mov
jb
es
fstps
sarb
imul
dec
jo
lahf
xchg
dec
js
stc
out
scas
insb
test
ss
jecxz
in
add
shrl
and
sbb
jns
loope
sbb
and
lods
or
fisubl
adc
push
cmc
xchg
movsb
cmp
inc
sub
repnz
mov
repnz
outsb
push
mov
in
sbb
xchg
push
scas
rcrl
inc
or
sbb
and
loopne
fcmovnu
fistpll
stc
popa
inc
scas
fsubrl
pop
dec
cmp
adc
ret
les
ljmp
addr16
sub
mov
and
inc
add
mov
pop
fsts
add
xor
xlat
lahf
ffree
jl
or
sub
sbb
inc
icebp
jp
push
popf
pop
es
sarl
pop
push
dec
push
clc
mov
push
jae
out
xchg
faddl
jno
inc
test
mov
cwtl
in
mov
jmp
jns
push
cmp
pop
test
add
sub
mov
push
adc
inc
xor
test
pop
and
les
rcrl
dec
or
fisubrl
bound
cmp
inc
test
mov
mov
data16
iret
push
shll
jg
push
add
gs
scas
xchg
gs
cmp
aad
and
push
lods
aam
in
out
ss
int3
in
fadds
jno
xchg
ret
dec
lret
int3
inc
mov
cmp
test
das
ret
dec
pop
fcom
test
xor
imul
xor
jno
pop
sub
mov
adc
nop
adc
lret
jp
rorb
loop
adc
cli
mov
out
sahf
inc
jg
sahf
out
cmp
pop
fsubs
lahf
sub
adc
orl
imul
pop
cld
pushf
cmc
leave
jno
mov
lock
sbbb
cmp
ljmp
push
adc
push
andb
inc
popf
lahf
jno
pop
nop
lcall
sti
xorl
out
mov
neg
push
pop
adc
jl
cmp
add
shl
test
sub
stc
sub
sub
mov
add
adc
adcl
push
into
jp
lcall
iret
sbb
xor
dec
fdivs
push
bound
out
mov
rolb
mov
inc
inc
ds
jne
push
sub
lods
mov
cs
outsb
insl
jp
sbb
xor
mov
xor
adc
xchg
xchg
xchg
inc
sbb
and
jmp
out
aad
adc
ja
nop
xchg
imul
inc
adc
es
and
daa
push
inc
les
insl
sbb
lahf
xor
divb
mov
int3
aam
clc
or
sahf
in
or
lds
or
cmp
inc
nop
mov
loop
cmp
push
lahf
mov
out
mov
inc
push
aam
xchg
xor
aad
mov
sub
daa
test
scas
pop
adc
sahf
sub
xchg
add
jecxz
mov
mov
sbb
fdivrs
das
xor
cmpl
pop
test
push
push
push
jnp
add
and
dec
cmpsl
movsl
xor
dec
lahf
push
clc
insl
lahf
mov
ret
dec
add
nop
lds
mov
adc
shll
cltd
enter
fiadds
mov
mov
mov
ficoms
push
adc
or
stos
mov
loope
add
std
addr16
inc
or
lods
adc
inc
xor
sbb
mov
pushf
push
push
sbb
pop
imul
fwait
out
and
repnz
lods
rorl
stc
call
out
mov
pop
inc
lock
or
jge
dec
or
dec
testb
test
fs
sti
adc
push
mov
pop
inc
jg
push
jg
div
mov
add
cmp
adc
ficompl
jge
dec
mov
nop
or
arpl
int
dec
pop
adc
outsl
mov
repz
dec
sbb
es
or
shr
mov
mov
or
mov
cmp
jne
cmp
jne
jmp
mov
mov
mov
mov
mov
xor
shl
mov
mov
xor
mov
jmp
and
loopne
adc
adc
mov
or
pop
std
jno
dec
sahf
div
mov
lods
lret
cltd
les
test
xor
jno
pop
int
mov
dec
out
jp
jl
jae
sub
imul
jmp
inc
add
sbb
push
outsb
addb
or
sub
rcl
call
push
sub
sbb
loopne
fstpl
xor
sub
sub
jns
roll
jecxz
mov
daa
aas
inc
sahf
sub
jmp
cs
xor
ljmp
imul
and
shr
dec
mov
sbb
inc
sbb
sahf
rcl
xchg
pop
xchg
stos
mov
ljmp
inc
cwtl
mov
je
xor
jmp
push
xchg
rcrb
mov
lds
lods
lock
cmpsl
add
mov
cli
pmaxub
lret
das
sub
cmp
ret
sub
fldt
dec
popf
clc
xor
or
push
icebp
mov
add
cmp
adc
repnz
xchg
mov
pminsw
adc
pusha
pop
lea
pop
lret
and
icebp
out
repnz
leave
adc
fldcw
pop
mov
mov
mov
shlb
mov
mov
cmp
lahf
jbe
mov
push
aad
add
xchg
icebp
je
jns
push
add
cld
clc
sahf
fsubrp
bound
push
xchg
int3
bound
inc
or
dec
add
loop
cmpsl
mov
add
js
dec
pop
add
add
iret
add
cs
movsb
dec
out
aas
push
sbb
movsb
adc
cwtl
mov
push
ds
aam
ret
pop
mov
pop
rcr
pop
cli
leave
dec
sub
cmp
icebp
add
sbb
outsb
addr16
scas
or
xor
clc
and
mov
add
popa
lcall
mov
je
out
cs
adc
adc
jmp
mov
cmpsb
orb
adc
rcl
or
jne
ds
mov
int3
je
sbb
imul
fwait
rorl
xorl
icebp
sbb
sti
jno
rcr
sub
mov
int3
xor
cld
fisubs
xchg
dec
dec
adc
jmp
and
push
test
fbstp
cmc
push
pop
rorl
pushf
xchg
bound
cmp
jo
jl
ljmp
jbe
dec
sbb
jbe
jle
mov
nop
xchg
mov
aam
add
es
dec
clc
addr16
push
cld
and
lds
insb
aad
adc
mov
pop
int
fcmovu
mov
cmc
xchg
push
dec
adc
add
and
loop
lcall
mov
daa
sub
cmp
cmp
inc
int
out
pushf
into
mov
jg
push
and
sub
mov
mov
xor
mov
jae
and
hlt
popa
xchg
cmpsl
mov
xor
sub
push
pop
sbb
es
xor
jp
dec
in
pop
sub
mov
xchg
and
or
scas
push
xchg
jae
bound
dec
mov
add
jns
add
mov
cmp
push
pop
cs
push
ret
dec
jbe
outsl
int
pop
mov
inc
mov
or
adc
mov
jo
mov
fildll
jae
nop
dec
jp
pop
iret
jo
pop
rcr
xchg
rclb
rcrb
ss
ret
cwtl
mov
stos
call
mov
nop
in
adc
lahf
pop
and
jo
negb
xor
and
mov
aad
jecxz
int
jl
mov
popf
xor
int
jnp
lods
add
sbb
sahf
stc
pop
test
in
and
and
fcompl
sbb
adc
pop
xor
mov
add
shll
mov
std
push
inc
mov
mov
cltd
subb
inc
mov
shrl
ret
arpl
pop
movsb
xchg
rol
lods
ret
pushf
xor
or
mov
cmp
sub
lahf
shl
xchg
cmp
ja
sub
jne
test
pop
jecxz
ss
mov
fbld
xchg
mov
sub
les
lds
add
or
movl
mov
lret
test
cld
or
mov
scas
bound
cld
fbstp
push
jnp
push
mov
pop
jp
cmp
jae
adc
lods
enter
stos
mov
inc
cmc
or
sti
xchg
int3
xchg
mov
imul
ss
xlat
clc
xchg
xchg
shll
adc
test
and
mov
add
clc
or
je
xchg
add
and
fcmovne
pushf
cwtl
fstpl
xchg
lcall
cmp
fiaddl
mov
ficomps
mov
and
sbb
cmp
hlt
popa
pop
pop
mov
ss
jnp
stos
push
repnz
push
inc
and
jae
outsl
xor
dec
rcr
arpl
sbb
and
fsubs
mov
xor
xor
shrd
or
shr
jmp
lds
and
fimull
das
adcl
and
mov
cmc
mov
stos
std
pop
jl
jecxz
pop
xor
sbb
in
xchg
cmp
aad
in
idivb
add
stos
push
daa
in
insl
pop
xor
mov
mov
aam
push
mov
xor
loopne
cwtl
sahf
loop
sub
inc
adc
cltd
adc
add
in
dec
mov
sub
sbb
scas
cmpsl
je
inc
aam
jmp
loop
add
sar
mov
mov
mov
cs
scas
or
and
popf
in
hlt
sti
rolb
icebp
xchg
mov
jecxz
inc
insb
lret
jo
dec
mov
lea
jae
dec
fisttps
lret
xor
fdivp
stos
fstl
bound
sbb
jp
cwtl
aas
and
lock
je
or
hlt
cmpsl
push
ds
xlat
int3
rorl
shr
aad
inc
inc
add
xchg
or
je
xor
cmp
inc
xchg
out
lea
add
aaa
repz
mov
test
add
std
xchg
jecxz
push
pop
pusha
cwtl
inc
push
idivb
lock
lret
jp
sub
dec
mov
push
push
mov
mov
push
insb
mov
fs
adc
push
lcall
xchg
mov
cmpsb
stc
sub
insb
adc
movsl
push
in
das
pop
in
sub
inc
xor
out
fst
dec
sarl
push
jecxz
test
and
push
test
lahf
mov
sub
and
xchg
rcr
xchg
mov
in
dec
mov
xchg
dec
stos
aaa
iret
int
pop
ret
aad
xor
adc
inc
jne
mov
lahf
mov
pop
loope
or
cli
mov
pushf
nop
inc
push
mov
dec
sub
mov
rcrb
pop
push
cmc
push
or
in
mov
xlat
cmp
in
jmp
lahf
cmp
or
jge
setne
pop
jno
cld
xchg
jns
jno
nop
jbe
fisttpll
adc
xor
xchg
movsl
mov
mov
pop
test
pusha
sbb
jecxz
sbb
push
mov
cmp
mov
mov
repz
jecxz
or
adcl
cmp
and
popf
xchg
and
shlb
clc
jg
ja
jmp
in
out
and
test
xchg
mov
push
mov
xor
mov
xor
xchg
insb
out
call
jb
outsb
scas
mov
pop
aas
mov
and
out
mov
repz
inc
cmp
and
scas
inc
jbe
jne
int3
xor
loop
je
mov
jp
and
mov
imull
rcrl
xor
loopne
scas
lret
push
in
push
repnz
lret
subb
xchg
mov
mov
mov
test
push
jg
dec
adc
mov
lret
xchg
fld
dec
jge
loopne
orb
add
sbb
pop
xchg
icebp
add
sti
stc
lods
fs
push
sbb
lret
adc
mov
movsl
lods
push
xlat
push
test
bound
xchg
dec
mov
push
xchg
std
out
xor
insb
iret
in
lds
repz
movsb
pop
sub
push
inc
aas
in
jae
and
repz
inc
sbb
mov
mov
aad
adc
popa
iret
clc
sub
in
cltd
faddl
xor
arpl
movsl
dec
pusha
mov
aam
int3
aaa
popf
mov
popf
ss
push
ss
leave
or
inc
or
out
int
cmp
cmp
mov
inc
sarl
push
jae
sbb
rcrb
jbe
ss
push
sub
pop
dec
jb
mov
xchg
mov
scas
nop
lods
cltd
push
mov
push
jnp
mov
pop
stc
ja
fstpt
je
inc
push
loope
stos
subl
cli
mov
jae
mov
jns
inc
push
fucom
or
lret
int
pop
mov
pop
sbb
js
sub
addr16
loopne
lds
jp
inc
and
cmpsb
pop
inc
inc
fmuls
fildll
les
ret
jecxz
out
lahf
sarl
inc
cmp
addb
xchg
mov
mov
fsubl
or
mov
or
mov
insl
mov
push
ret
fucomp
push
sub
mov
rclb
inc
in
xlat
lret
mov
dec
pop
int
ja
pop
int
das
addl
push
dec
push
arpl
add
xchg
mov
jp
or
jb
hlt
xor
fnstcw
mov
mov
jle
push
sahf
bound
outsl
mov
hlt
fnsave
aaa
shl
mov
mov
fisubrl
sub
mov
out
pop
or
xchg
scas
lods
dec
dec
cmpl
pushf
push
pop
dec
push
jns
stc
ljmp
xor
sahf
cmpsl
roll
adc
mov
mov
iret
out
shll
negl
push
inc
les
lods
cwtl
mov
and
or
cs
mov
mov
das
imul
fstpt
les
cmp
mov
or
mov
mov
push
pushl
push
push
call
mov
mov
shrd
shr
shr
xor
push
xor
jmp
or
test
mov
cmp
xor
xchg
div
mov
mov
adc
insl
int3
push
or
fwait
aam
pop
stc
mov
aaa
aad
dec
cli
sti
arpl
insl
movsl
mov
jnp
adc
xor
testb
inc
lea
repnz
roll
lcall
jae
xchg
lods
mov
nop
xchg
out
sub
pop
sbb
aad
loop
mov
int3
sbb
mov
std
loop
pushf
outsb
pop
in
dec
icebp
xchg
adc
mull
sub
les
scas
out
mov
fcoms
fstps
ja
xchg
clc
xor
pop
push
cmp
xchg
test
in
mov
jmp
movsl
testb
fs
int
ret
lock
fsts
inc
inc
pushf
scas
cltd
sub
mov
ret
add
adc
pop
pop
xor
and
ret
test
pop
and
cmpsl
addb
adc
adc
and
mov
movsl
dec
and
pop
and
inc
sbb
ficompl
and
ds
ficoml
sub
daa
jnp
imul
or
cli
in
rclb
cli
xlat
in
nop
loopne
das
arpl
fldt
jae
aad
pop
rcrl
add
hlt
test
dec
mov
bound
lcall
outsl
addr16
out
lods
cmc
out
insb
scas
mov
outsl
fdivs
mov
cmp
mov
push
test
jecxz
daa
sbb
cltd
sub
sub
sub
cmp
or
cmp
inc
out
cmp
movsb
adc
mov
pop
or
loopne
xchg
sti
ljmp
cmc
test
sub
xchg
icebp
jge
rorb
cltd
out
int3
jmp
dec
pop
cmpsl
jbe
xchg
add
cmp
adcl
xchg
mov
jl
xchg
aas
mov
pushf
pop
jo
out
sub
lock
popf
ljmp
lods
sbb
jg
pop
fcomp
lret
out
outsb
repnz
inc
push
add
add
iret
mov
pushf
cmp
nop
aaa
mov
cwtl
loope
dec
ja
xchg
nop
dec
mov
xor
jbe
add
jns
mov
push
rcl
mov
shll
adc
icebp
cmp
pop
movsl
adc
sbb
xor
mov
test
stos
mov
cmp
addb
test
js
aam
shrb
sahf
sub
push
cmp
push
or
pop
pop
add
inc
mov
dec
add
loope
test
mov
add
mov
fstps
jo
jnp
xchg
or
hlt
mov
jo
mov
and
mov
jp
popa
pop
xor
test
int
push
jg
jnp
dec
sbb
divl
xchg
test
inc
ret
je
das
xlat
adc
inc
push
clc
or
and
pop
adcb
int
jp
adc
out
jl
andl
dec
add
sbb
xlat
adc
popf
xor
mov
inc
inc
frndint
loopne
mov
or
daa
push
inc
inc
jo
and
popa
mov
aam
adc
sahf
push
adc
fists
and
mov
lods
and
mov
pop
mov
out
cmc
push
jecxz
push
xor
add
cld
sahf
or
add
cld
or
fdivrl
ss
hlt
xchg
xor
pop
jbe
or
cmc
push
shll
xsha256
mov
outsb
mov
xchg
sti
lock
cmp
popa
repz
jmp
pop
mov
push
jg
test
inc
mov
push
mov
mov
rclb
sub
adc
xorb
push
lcall
and
jo
pushf
xchg
push
dec
rorb
push
inc
mov
ljmp
pop
mov
mov
pop
bound
jns
xchg
leave
out
push
scas
push
jl
xchg
pop
cwtl
std
fwait
mov
and
pop
nop
or
std
cmp
xor
mov
ljmp
dec
cmp
or
mov
xchg
push
jnp
mov
test
mov
mov
imull
xor
pop
mov
push
inc
test
dec
rcll
je
add
adc
ds
jecxz
pop
mov
test
sub
repz
nop
cmpsb
std
mov
jle
or
jae
mov
cmp
adc
fdivl
jg
or
push
fstpl
cmpsl
aaa
jge
daa
jns
test
aaa
or
pusha
mov
mov
xor
lods
aaa
int
pop
pop
in
mov
xchg
lods
cmp
test
push
in
inc
imul
mov
fldlg2
movsb
jg
test
pop
jge
sysexit
call
cmpsb
sub
xlat
cmp
xchg
adc
and
mov
stc
js
push
popf
xchg
dec
ss
jg
repnz
pop
mov
das
cld
or
call
shll
and
movsb
xor
fsubs
fimuls
mov
lods
jae
adc
xor
out
cmpsb
push
and
cmp
sbbb
je
enter
add
mov
push
jmp
push
fbld
das
dec
or
jecxz
sub
and
xor
mov
movsb
faddl
add
cmc
jmp
pop
dec
jns
nop
push
outsl
call
sti
in
push
loope
outsb
flds
mov
jp
dec
adc
and
adc
lret
mov
aaa
xor
dec
nop
sti
push
lcall
inc
dec
addr16
xchg
fistl
jp
mov
test
movsl
test
adc
js
mov
nop
xlat
mov
nop
adc
das
push
in
icebp
push
sub
stc
das
and
adc
enter
pop
inc
scas
add
jns
lret
inc
addr16
pop
mov
test
shl
pop
sti
loope
cmp
dec
cld
sub
dec
scas
rep
cwtl
xchg
ds
adc
lahf
in
movsl
cmp
mov
cmp
xchg
lcall
jnp
inc
insb
cld
mov
inc
mov
popf
cs
repz
adc
sbb
out
sarb
loopne
and
js
dec
loop
fcmovnu
lret
jmp
or
repz
xchg
sbb
int3
test
mov
test
outsl
cli
ficompl
rolb
pop
xor
pop
aaa
jecxz
aaa
mov
ss
bound
les
icebp
mov
mov
call
sbb
and
andb
out
in
jg
mov
dec
push
mov
and
or
pop
mov
xor
sub
xorb
cmp
fists
push
inc
mov
xchg
aad
xor
mull
repnz
xchg
mov
cs
mov
popa
pop
movsb
ja
pop
lods
dec
je
push
mov
push
mov
out
out
sub
cmp
pop
mov
fldt
xchg
pop
pop
xor
jle
fsubrs
xchg
and
mov
aas
inc
and
sub
lea
cld
aaa
fstpl
ljmp
pop
into
pop
das
inc
fstpl
clc
jg
test
cmp
jo
fildl
fnsave
aam
and
test
sub
inc
sbb
outsl
mov
lods
sbb
inc
call
push
cld
lods
loopne
cmp
mov
cmp
ret
pop
cld
xchg
sbb
fiaddl
out
inc
movsb
test
aaa
mov
pop
xlat
sub
mov
add
push
hlt
fmull
daa
mov
sub
xor
mov
scas
out
out
jmp
ret
test
aam
lcall
mov
mov
je
cmp
ret
push
out
push
roll
lock
subb
xchg
decb
mov
mov
or
inc
loopne
loopew
stos
sub
mov
pusha
clc
bound
stos
ljmp
dec
mov
fcmovne
jbe
cs
andl
jge
sti
cmpsl
repnz
push
inc
and
mov
out
lods
add
lods
inc
lahf
stc
in
lahf
jb
aas
outsl
xor
or
fwait
mov
push
sub
sti
cmpsl
mov
push
add
cmp
aam
push
repnz
sub
fstps
xchg
popf
in
movsb
bound
add
out
or
add
mov
cmp
push
cmp
aas
movsb
add
adc
or
jle
and
jno
inc
mov
xor
int3
jl
pop
add
adc
cs
iret
xchg
jg
jp,pt
cmpb
in
repnz
push
sar
lahf
repz
int3
and
push
sub
imul
xchg
xlat
dec
jl
mov
xor
inc
cwtl
jle
xor
shrb
ja
pusha
inc
mov
leave
popa
pop
imul
lods
int
push
xchg
adc
or
mov
addr16
dec
cwtl
lods
adc
adc
and
jo
push
pop
ja
push
test
jmp
in
fcmovne
xchg
push
into
bound
test
xchg
cmpsb
jbe
sub
mov
daa
mov
andnps
sbbl
mov
shl
dec
pop
mov
mov
sbb
or
mov
movl
mov
sub
push
movsb
pop
mov
fisubs
xor
cld
xor
jo
inc
and
add
lds
lock
and
movsb
and
cmc
sub
pop
adc
xor
xchg
xor
push
repz
int3
lods
jno
fwait
pop
orl
andb
sbb
pop
sbb
push
cmp
int3
fcoms
cltd
mov
je
hlt
pop
cmp
adc
ret
inc
add
fisubrs
stos
push
xchg
xchg
in
std
cmp
stos
mov
jmp
jae
sbb
and
aam
mov
imul
fwait
add
in
or
push
pop
hlt
ret
je
xorb
sbb
scas
fisttpl
js
jae
es
cmpsl
pop
inc
jne
push
xchg
xlat
xor
inc
inc
repz
mov
pop
call
adc
cmc
sarb
push
mov
jb
push
fisttpl
das
cmc
xchg
loopnew
jae
jle
dec
andl
pushf
sub
out
shll
pushl
pop
repz
out
arpl
aas
dec
leave
and
rclb
xor
call
xor
inc
testl
or
imul
shld
shl
mov
or
xor
or
xor
xor
mov
mov
mov
mov
mov
mov
shl
xor
mov
mov
mov
xor
xor
jmp
in
mov
adc
sub
sbb
sbb
mov
or
mov
mov
jle
nop
inc
ficoml
je
xchg
cmc
rcll
or
shlb
insb
mov
out
lock
dec
adc
push
imul
inc
and
jno
sbbb
lods
out
push
stos
pop
data16
fwait
push
test
fnsave
shlb
into
jmp
decl
in
scas
mov
popa
ret
aam
stos
notb
jg
loope
push
xor
ret
adc
nop
enter
loop
dec
dec
cmpsb
movsb
add
adc
outsl
into
push
movsl
jmp
cs
outsl
repz
sbb
cmp
push
cmpsl
rcl
fstl
sbb
jns
mov
in
or
les
xor
mov
call
popf
dec
je
pushf
pusha
hlt
push
stc
insb
xor
and
sbb
mov
fistps
sahf
test
in
ss
cwtl
inc
dec
leave
inc
shll
jmp
nop
sub
mov
xchg
nop
sub
push
inc
lahf
addl
push
lods
mov
dec
pop
call
xlat
or
push
movsl
bound
std
inc
popf
xor
or
not
mov
dec
sbb
stc
shrl
fstpt
ds
xchg
adc
cmc
jne
adc
xchg
inc
fisubrs
fimuls
fistpl
jl
or
push
cmp
ficompl
jge
lock
fwait
push
ds
add
loope
je
movsl
sub
das
adcl
dec
cmp
xchg
lret
cwtl
sbb
dec
add
orl
js
add
int3
mov
and
and
or
cs
or
mov
add
pop
int3
fstl
stos
cmp
cs
arpl
xchg
push
into
add
fsubrs
or
push
std
mov
add
stos
mov
out
aas
rorl
xchg
push
sbb
loop
lds
or
inc
push
mov
jl
inc
jno
jne
jnp
and
jno
jecxz
ja
cltd
sbb
push
jp
ljmp
sbb
mov
jl
setb
lea
sti
sti
adc
ret
stos
out
sub
lea
mov
adc
mov
push
in
jg
cmp
loop
cwtl
in
ret
cwtl
xchg
imul
pop
test
nop
popa
cmp
jo
jmp
rcrb
push
dec
lods
fildl
mov
jecxz
incl
pop
xchg
sbb
mov
jl
xchg
cmp
sub
cmp
fmull
outsb
or
sti
xor
pop
fstpl
or
dec
inc
mov
leave
dec
push
or
xor
outsl
xchg
mov
ficoml
mov
inc
bnd
arpl
mov
flds
insl
in
in
sbb
repnz
mov
pushf
imul
inc
test
fdiv
stc
mov
xchg
les
in
stc
push
dec
outsl
push
fisubrs
cld
and
outsb
cmp
mov
pop
mov
or
insb
pushf
out
fnstenv
mov
in
stc
stc
jno
ret
lods
xchg
add
lods
dec
mov
hlt
aad
sub
test
or
pop
enter
pushaw
std
jae
xchg
popa
sbb
mov
add
xchg
sub
inc
int3
dec
das
int
repnz
into
and
stc
xchg
loope
in
cmpsb
lds
push
adc
pop
dec
pop
lea
cmpsl
inc
dec
sub
mov
out
cmp
test
cmpsb
mov
popa
or
or
mov
test
inc
out
lock
cmp
lods
stc
imul
xchg
ror
int3
jecxz
je
rcrb
fdivl
imul
push
aaa
in
push
jns
push
adc
sub
dec
clc
adc
addr16
les
lock
push
ret
in
mov
insl
xchg
mov
push
mov
and
scas
push
bound
xor
xchg
lock
or
rcrb
lea
push
mov
push
xlat
jg
add
jno
sbb
jg
xor
push
cmp
dec
cmp
xor
repz
jbe
je
test
inc
addr16
cmp
dec
xor
inc
shlb
rcl
push
or
imul
mov
adc
ss
outsb
xchg
mov
inc
xor
jge
repz
data16
movsl
xor
pop
xchg
lea
insl
mov
pop
subb
mov
fwait
mov
outsl
clc
lds
xchg
jl
mov
fs
lods
test
insl
or
mov
cmp
dec
movsl
xchg
mov
sbb
and
sbb
outsl
fs
inc
add
mov
pop
inc
adc
pusha
jbe
lret
fcoml
xchg
sbb
pop
cmc
sub
packuswb
shll
je
pop
daa
sahf
jge
jbe
mov
dec
jmp
into
out
cmpl
inc
shl
fidivrs
aam
nop
xor
cltd
dec
sub
aad
pop
inc
pop
dec
and
adc
push
or
mov
into
sub
shrd
shr
or
xor
mov
or
mov
mov
mov
shl
xor
mov
mov
mov
xor
xor
shrd
jmp
stos
pop
movsl
outsb
adc
xor
jo
jecxz
mov
pop
das
sub
cmc
mov
dec
pop
inc
add
mov
lret
test
negb
aad
and
enter
imul
dec
lods
addb
push
cmp
or
out
loop
lea
cmp
pop
outsb
pop
mov
imul
xor
inc
jae
dec
add
jecxz
loop
shlb
int
and
aam
adc
lcall
lods
dec
xor
xchg
outsl
sahf
pop
fcoms
ret
or
cmc
sbb
fstpt
test
decl
ret
addr16
sub
andb
xor
sahf
pop
in
dec
js,pn
lds
repnz
in
xchg
int
jge
push
mov
shrd
push
in
movsl
pop
mov
daa
mov
clc
int3
aas
push
jge
repz
outsb
jmp
jbe
xor
add
mov
xor
mov
insl
cmp
stc
adc
clc
pop
iret
push
int
dec
loope
or
xor
xchg
push
push
stos
call
stos
add
jbe
pop
sbb
dec
sbb
stos
aad
push
xchg
bound
push
push
les
test
in
jno
push
xchg
mov
or
subl
sti
sbb
add
test
incb
sub
into
insb
into
lret
or
rcr
imul
ret
and
and
cmp
mov
pop
inc
pop
cmp
and
daa
mov
cld
inc
push
adc
dec
call
outsb
sub
sbb
gs
push
ret
and
cwtd
movsl
int
inc
fildll
out
shll
add
mov
pushf
add
jp
imul
jg
aam
test
fldt
xchg
sub
shlb
es
clc
nop
inc
mov
xor
pop
inc
mov
lret
xchg
mov
insb
jl
xlat
loop
cltd
push
jnp
inc
adc
icebp
into
xor
pop
sub
nop
movsl
add
mov
inc
enter
mov
jne
cmp
sub
ljmp
cld
dec
sar
repnz
negl
pop
xchg
loope
sbb
lods
dec
mov
add
fnsetpm(287
ret
scas
mov
or
lret
lods
cld
pusha
mov
add
push
and
xlat
jle
int3
les
ret
pop
adc
lock
sub
lcall
push
xchg
mov
iret
das
fidivs
rorb
andl
pop
rclb
int
lock
loop
push
outsl
fistpl
adc
push
fwait
inc
std
int3
int3
adc
mov
clc
out
aad
loope
add
jns
mov
dec
ja
ljmp
sub
mov
insl
pop
adc
movsl
fistpl
add
add
or
fmul
dec
mov
out
idivb
pop
std
repnz
lods
fcoml
sbbl
outsb
sahf
sub
cmp
mov
xor
push
fildll
vcvtss2sd
ljmp
inc
sub
rcl
xlat
pop
mov
imul
jae
loope
movsb
cmp
pop
js
jb
lret
das
inc
mov
push
add
stc
test
dec
adc
push
enter
jo
push
fs
xor
enter
ja
mov
mov
pop
out
push
dec
xor
cltd
outsl
inc
mov
adc
xor
or
sbb
jg
arpl
mull
rcll
cmp
imul
add
pop
std
jbe
or
stos
sub
fisttpl
movsl
sbb
ffreep
and
subb
fdivrs
mov
pop
add
xchg
lods
subb
xchg
mov
cmp
imul
dec
push
mov
les
test
shll
jns
ds
pop
jno
in
orb
lret
mov
push
mov
shlb
adc
popf
push
dec
scas
ss
pop
jno
mov
mov
and
add
int
cld
flds
xchg
aaa
pop
mov
push
rolb
inc
sub
test
mov
incl
cmp
add
jo
mov
dec
xchg
pop
hlt
dec
call
cmc
push
xchg
shr
jge
sbb
xchg
test
enter
xor
jmp
xchg
xor
and
cltd
lods
test
mov
sub
addb
out
jae
outsb
cmp
rolb
mov
add
add
sbb
mov
enter
mov
fbstp
add
repnz
dec
push
or
sbb
cmp
cmpsb
lcall
mov
outsb
cli
add
dec
push
sarb
out
out
xor
jb
std
out
add
xchg
xchg
out
sub
sub
fwait
sahf
mov
cmp
orb
mov
mov
ds
xchg
mov
jnp
cmpsl
sub
out
and
cmp
in
push
mov
mov
lmsw
jbe
dec
aaa
inc
pop
popf
xchg
ret
fstpt
in
leave
shr
or
or
cmp
jmp
out
es
xor
enter
and
jnp
lods
xor
push
cmc
push
inc
push
push
xchg
outsb
dec
cmp
stos
sbb
and
mov
mov
cmp
xchg
and
icebp
sbb
aad
or
andl
pop
ss
push
cmp
xchg
mov
sbb
mov
repnz
insl
inc
outsb
lods
xorb
pop
neg
dec
mov
sub
rcrb
js
add
movsl
addb
fldenv
xorb
xchg
xchg
push
push
enter
es
test
gs
add
in
ds
fsubr
push
jno
push
sbb
gs
lcall
pop
in
mov
pop
jp
in
lea
insb
pop
xchg
mov
jo
xchg
or
arpl
stos
mov
adc
push
lahf
int3
stc
fldl
repz
int
stos
adc
cmp
mov
cli
mull
andl
lea
mov
nop
subl
xlat
xor
jno
pop
push
lret
cmp
dec
enter
sub
rcrb
xorb
mov
mov
sub
das
mov
pop
cmp
das
push
jg
ficompl
arpl
aad
lods
shlb
das
js
cmp
out
fistps
and
xchg
xchg
sbb
pop
cmpsb
inc
fsubrl
add
negb
mov
fistpl
jl
incl
pushf
mov
add
aad
mov
mov
cmp
xchg
jo
inc
bnd
sub
test
xchg
sbb
scas
inc
xchg
insl
ffreep
push
jno
or
cli
popa
adc
cmp
into
test
or
lods
mov
out
add
stos
xrelease
jbe
pop
xchg
xor
or
fsubs
cmp
loope
push
stos
push
stc
xor
cmp
xor
pusha
xor
dec
test
adc
adc
pop
mov
sub
fcomps
mov
orps
cmpb
in
in
xchg
jbe
lods
mov
xchg
les
push
arpl
cmp
dec
or
add
xchg
pop
ljmp
lret
cmp
xor
jo
fmull
pop
push
mov
daa
mov
es
and
fs
mov
xchg
xor
mov
xchg
out
ljmp
aad
xor
cmp
mov
out
jle
dec
fidivrl
iret
mov
out
aaa
xchg
push
sbb
push
int
fimuls
pop
sahf
nop
popa
sub
cmp
add
and
xchg
pop
iret
leave
icebp
or
or
mov
cmpsb
push
repz
aaa
arpl
mov
clc
sub
xor
loop
int
mov
jns
sbb
fidivrl
in
ret
mov
test
jnp
dec
jne
adc
fidivrs
cmp
mov
dec
mov
or
js
lret
mov
je
fstpt
pop
jmp
lock
xchg
mov
dec
mov
mov
popf
aad
jno
adc
fwait
jo
iret
xchg
lods
mov
fs
push
test
mov
jnp
nop
into
in
gs
ja
push
inc
push
jo
pop
lret
add
aad
push
add
mov
dec
in
scas
cltd
repz
jmp
lahf
out
in
sbb
mov
xchg
inc
mov
fwait
sti
outsl
jge
add
hlt
test
xor
sarl
fimuls
lods
dec
add
pop
inc
jle
mov
xchg
sub
lods
mov
add
sarl
fldt
bnd
dec
inc
mov
dec
add
icebp
cmpsl
ret
mov
stos
dec
pop
in
in
mov
in
add
or
pop
pop
lret
mov
add
stos
ds
pop
pop
pop
dec
mov
repnz
movsb
cmp
push
call
sbb
sbb
adc
fcmovu
cmp
adc
push
movsb
pop
lcall
adc
scas
mov
lods
jge
push
repnz
push
scas
sbb
rolb
push
push
push
scas
inc
pushf
mov
mov
jle
aam
xchg
loopne
push
inc
mull
loope
mov
mov
sarl
jmp
jb
xchg
mov
cmp
loopne
into
stos
add
fcmovbe
shlb
leave
les
sub
je
dec
fwait
scas
sub
jl
jnp
xchg
lret
xchg
outsl
add
stc
jle
pop
pop
ljmp
add
mov
or
dec
paddw
sbb
out
mov
pusha
push
or
test
pop
outsb
cltd
mov
adc
rcll
jae
adc
enter
arpl
out
adc
cmp
sbb
popf
fmull
aam
push
inc
out
jg
dec
mov
cmpl
or
jge
jmp
xor
pop
and
jno
stc
daa
test
mov
mov
out
adc
es
cs
mov
insb
repz
xchg
mov
xchg
cmp
jmp
fadds
mov
adc
push
inc
adc
xchg
mov
scas
sub
add
cmp
je
pushl
pushl
pushl
push
push
call
pop
leave
ret
mov
mov
ret
mov
mov
ret
push
mov
sub
push
push
push
movl
movl
movl
movl
movl
movl
movl
jmp
sub
or
adc
adc
xchg
cmpsl
fnstsw
imul
dec
div
std
cmc
cmc
addl
pusha
sbb
mov
imul
adc
stc
xchg
xchg
fcomip
int
sar
or
fdivl
push
dec
adc
xchg
mov
jg
cmp
adc
lock
shl
enter
data16
repnz
and
xchg
sub
cli
and
ret
mov
mov
out
mov
cmc
outsb
sbb
stos
mov
add
popa
popf
dec
imul
cmp
inc
cmpl
jg
inc
add
and
jp
push
outsb
pop
cltd
cwtl
std
leave
js
add
xlat
or
xorl
bound
mov
add
inc
or
dec
adc
out
push
and
movsb
out
movsb
mov
jno
pop
push
add
negb
jmp
sti
sbb
add
sbb
cmovs
sbb
aam
jp
int
in
fs
and
sbb
bound
pop
mov
cmp
inc
mov
jbe
lock
mov
nop
xor
xchg
aam
or
mov
bound
leave
dec
cmp
dec
adc
mov
arpl
cmc
mov
loop
pop
xor
dec
pop
stos
mov
push
sub
xchg
sbb
jecxz
lahf
icebp
je
clc
cmpsb
loop
mov
sbb
mov
jnp
or
data16
imul
jnp
adc
repnz
out
adc
rcrb
inc
enter
cmpl
push
jae
xor
adc
mov
push
add
adc
mov
nop
pushf
fiaddl
inc
xor
or
inc
lods
push
icebp
pushf
shrl
xchg
or
mov
mov
add
mov
jmp
or
inc
popf
and
mov
adc
xchg
and
loopne
in
sub
fidivrl
or
or
scas
lods
and
outsb
mov
mov
shl
movsb
jp
and
push
mov
rclb
mov
jmp
cs
or
insl
int
cmp
mov
loope
loopne
mov
mov
xor
jno
ljmp
push
cmc
clc
mov
xor
jp
std
inc
cs
pop
nop
mov
push
jmp
sub
add
jle
hlt
mov
pop
pop
xchg
sbb
mov
adc
ja
mov
or
mov
and
cmpsb
call
fidivs
cmp
enter
sbb
sub
je
mov
pop
jnp
cs
sub
mov
out
fcmovne
cwtl
mov
cmp
out
jne
insl
fwait
mov
outsl
pushf
dec
vmovsd
dec
mov
movsl
cltd
icebp
movsl
cld
add
jl
scas
insb
xlat
dec
rol
stos
hlt
sbb
lret
sbb
dec
es
jno
cmc
xchg
push
xchg
das
mov
sti
fnstenv
mov
js
mov
outsl
mov
sub
sub
or
dec
cwtl
xchg
add
lock
adc
in
adc
push
xchg
push
mov
sbb
mov
and
inc
cwtl
xchg
xor
loopne
push
hlt
cmp
es
out
les
xchg
push
es
addr16
mov
shlb
paddq
mul
cmp
fistpl
cltd
mov
sti
adc
repz
enter
pop
dec
adc
xlat
xchg
ds
inc
sub
je
mov
arpl
rcrl
xchg
cmp
cltd
cmc
pop
or
mov
add
imul
imul
movsl
mov
lea
xchg
adc
ljmp
fisubl
ds
out
lret
mov
inc
jnp
mov
cmp
loopne
mov
cmp
inc
into
push
inc
fbld
ja
incb
cld
popf
mov
mov
filds
in
das
and
cmpsb
mov
dec
cmc
aas
fbld
stos
lods
cmp
jecxz
jl,pn
stos
dec
cmp
scas
call
mov
or
imul
jmp
jp
xchg
adc
hlt
sarl
sbb
dec
ss
std
cmc
cmc
das
test
nop
data16
mov
mov
push
test
sbbl
or
addr16
cmp
lds
push
and
jb
cmpsl
ja
pop
aad
xor
shll
mov
and
je
lret
addb
pop
aad
aad
shlb
pop
cmpsl
cmp
push
adc
mov
icebp
dec
xlat
adc
ficomps
sbb
fistpl
int3
mull
not
pop
dec
je
pop
imul
xchg
dec
movaps
mov
push
push
nop
roll
fsub
dec
jne
dec
cld
mov
jno
add
fnstsw
sbb
cld
stos
scas
xchg
stos
test
lods
rcrb
xchg
shrb
xchg
test
stos
sti
stos
les
xchg
sub
scas
jno
cmp
cwtl
cmp
clc
or
mov
jp
jmp
fsubrp
push
or
or
iret
fstl
mov
adc
test
dec
mov
cmp
pop
je
sbb
loopne
pop
fimuls
mov
sbb
jne
loopne
sub
mov
data16
dec
xchg
sbb
sbb
or
lods
add
adc
add
cld
xchg
lret
sub
lock
xchg
mov
cli
call
dec
sub
jnp
push
or
imull
pop
popf
stos
loopne
pop
or
pop
cmp
xor
add
out
dec
xor
pop
dec
sub
pop
or
sbb
out
mull
outsl
lods
pop
dec
mov
pop
imul
into
jecxz
scas
push
in
pop
mov
xchg
mov
and
sbb
daa
out
xchg
je
enter
repnz
xor
stos
xchg
test
xor
or
dec
in
mov
mov
ja
or
jl
cs
movsb
pop
cli
rorl
xor
stos
inc
repnz
sahf
push
imul
fsts
shrb
imul
and
nop
inc
icebp
test
iret
pop
sbb
shrb
mov
pop
test
cli
pop
loop
pop
and
fmull
mov
fcmovbe
adc
or
cmc
jnp
push
into
add
push
xor
jns
jl
cmp
test
push
fnstsw
push
adc
inc
or
push
dec
cmp
icebp
jge
test
push
xor
sti
int
mov
add
xchg
xchg
mov
jecxz
mov
outsl
test
ret
in
es
subb
mov
imul
mov
xorb
loope
adc
jno
push
pop
insl
stc
dec
mov
mov
push
mov
imul
loope
mov
into
mov
xchg
jecxz
xchg
jnp
sbb
ds
pop
jnp
iret
jle
test
cmc
dec
pop
sahf
gs
movsb
hlt
pop
leave
sahf
cmp
mov
mov
push
das
cmp
dec
imul
inc
out
in
xor
xlat
xor
xchg
jnp
imul
lss
or
mov
dec
mov
pop
rol
pop
in
mov
mov
fidivs
mov
nop
loopne
mov
xchg
icebp
pop
shlb
sub
push
sbb
mov
leave
in
sub
mov
adc
and
dec
xchg
jno
roll
stos
and
loope
ficompl
or
mov
test
sub
push
dec
hlt
imul
repnz
push
push
hlt
cmp
inc
lods
in
enter
sbb
xor
out
adc
jnp
cmpsl
inc
mov
sub
add
jb
jbe
pop
cwtl
push
lds
dec
dec
aad
and
andb
lret
dec
and
xchg
add
jae
notl
jge
out
repz
sbb
enter
lods
xchg
cli
iret
dec
daa
mov
jle
push
mov
data16
decl
cltd
cs
les
xchg
lods
out
sbb
cmp
fstps
cltd
add
inc
aam
imul
xchg
push
jnp
jne
mov
hlt
jbe
mov
mov
push
lock
idivl
mov
movsl
push
and
sub
cmp
incl
add
add
and
add
mov
sub
mov
and
mov
jmp
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
add
or
jmp
jnp
jo
adc
dec
repnz
insb
aas
jecxz
inc
div
std
cmc
cmc
rorl
push
into
dec
hlt
test
inc
sub
mov
loop
mov
jae
sub
pop
test
and
xchg
pop
aad
lahf
in
mov
rclb
dec
push
push
jb
pop
out
dec
jno
inc
ja
rorb
mov
cmpsl
insb
dec
sti
divl
daa
lahf
rorl
sub
in
pop
push
adc
push
inc
dec
testb
je
cmp
push
pusha
mov
push
out
mov
pop
mov
mov
bound
imul
push
push
xchg
mov
sbb
aaa
inc
xchg
xchg
jmp
push
fwait
scas
dec
mov
bnd
mov
pusha
mov
xor
out
add
imul
in
push
imul
push
pop
andl
jecxz
testb
int3
or
sbb
mov
nop
in
dec
push
nop
inc
sti
push
ja
outsb
inc
mov
sbbl
push
ja
dec
out
sub
sbb
or
arpl
inc
pop
mov
ret
jns
dec
fldt
mov
jge
add
xor
xor
xchg
or
jae
push
mov
inc
mov
mov
je
ljmp
das
sub
rolb
and
pushf
stos
in
je
int
outsb
xchg
std
sahf
push
fwait
xor
push
mov
mov
push
cltd
xor
inc
jae
je
cld
mov
push
jb
add
or
sbb
mull
jb
cmp
cmc
nop
push
dec
jl
dec
lret
jge
fisttpl
xchg
in
iret
xchg
inc
pop
xchg
mov
push
ficoml
add
aad
cs
lock
aam
jbe
cmpsb
lods
sbb
sub
lret
dec
fs
jp
mov
lret
jns
out
imul
leave
ss
mov
push
cmp
and
mov
xor
inc
mov
jg
js
loope
fisubl
mov
insb
imul
test
cli
je
xor
push
aaa
outsb
dec
xor
shlb
ds
dec
pop
ja
mov
cli
jg
movsl
or
mov
fcompl
jnp
test
mov
ds
xchg
mov
xor
js
shlb
xchg
jg
mov
mov
cmpsb
dec
mov
orb
cmp
mov
sarb
je
test
mov
faddp
fistpll
lock
or
decb
or
inc
xchg
notl
or
push
push
pop
int
sub
xchg
test
ficomps
out
aam
sub
sbb
out
add
jns
ucomiss
jge
in
xor
jb
in
push
jo
adc
stos
popf
push
jl
fstpl
sarb
sbb
mov
ljmp
inc
sub
outsl
push
bound
into
out
hlt
scas
mov
pop
jecxz
xchg
xor
jl
mov
mov
aaa
dec
dec
rorb
icebp
mov
rcl
mov
mov
xchg
inc
or
outsb
fsub
pop
out
xchg
outsl
je
xor
bound
cli
push
inc
push
and
pop
mov
and
test
push
xor
and
cmp
pushl
or
jns
repz
addr16
mov
fstpt
ret
add
ret
mov
lret
push
subb
daa
js
jo
cltd
nop
xchg
push
lret
dec
cmp
popf
cmp
add
adc
pop
fidivrs
push
push
lret
cmpsb
pop
xor
push
mov
imul
xchg
sub
cli
cwtl
std
push
mov
in
xor
addl
mov
xchg
sbb
aas
mov
addr16
movsl
dec
mov
xchg
aas
push
pop
mov
sub
mov
ss
popf
and
fmull
mov
push
jg
mov
cld
iret
pop
sub
movsb
mov
push
out
jmp
outsl
xor
mov
into
push
and
inc
pop
movsl
push
pop
or
cli
xor
sub
jge
xor
mov
sub
jmp
jo
cmp
push
xor
cli
adc
das
fnsave
das
cmp
div
std
cmc
cmc
mov
loop
nop
in
pop
inc
xlat
xchg
std
aam
push
xor
or
data16
fadds
ss
scas
inc
sub
out
xor
lret
es
lock
sub
testb
adc
cli
sti
jnp
inc
inc
jo
loope
into
shll
sbb
adc
sbb
mov
data16
leave
hlt
fstp
incl
mov
push
pop
cmpsb
ljmp
or
push
fxch
and
bound
push
cmovg
pop
sub
imulb
add
test
pop
push
shll
ja
cwtl
jmp
in
adc
sahf
xor
cmp
jbe
sub
dec
aas
es
ret
xor
jmp
inc
ja
jp
pop
and
inc
mov
mov
loopne
icebp
xchg
lret
sbb
dec
outsb
lods
push
cmpsb
gs
das
fnstenv
xchg
fwait
in
sti
mov
testl
lcall
push
popf
imul
cmp
or
imul
pop
inc
push
pop
hlt
popl
or
in
sub
add
cmc
inc
aam
hlt
repz
repnz
outsb
or
sub
inc
jmp
sub
inc
gs
mov
fadds
lods
cmpsl
enter
mov
fldcw
adc
inc
sahf
std
add
dec
lret
add
push
js
xchg
push
inc
adc
cmp
push
push
lods
mov
push
adc
sbb
hlt
mov
pop
adc
adc
std
imul
fwait
scas
xchg
sti
add
in
test
push
mov
jp
loope
xor
and
movsb
arpl
cli
cli
iret
aad
mov
fiadds
mov
cld
cli
jl
pop
fcom
or
cs
xlat
and
int3
mov
mov
cwtl
xor
adc
scas
mov
aas
popa
icebp
iret
mov
movsl
mov
aaa
lret
sbb
and
shrb
sub
test
or
lods
loop
push
cltd
lock
xchg
adcl
adc
jbe
cmp
leave
add
mov
fcmove
jge
scas
outsl
enter
es
stos
aas
mov
xor
mov
sbb
loop
add
mov
rorb
int
rorl
cmp
push
mov
lods
pop
loope
std
not
dec
shl
sahf
movsb
inc
mov
jnp
dec
sub
std
popa
in
cmp
imul
dec
or
sub
cmp
leave
in
add
sbb
mov
inc
enter
cmpsl
lock
jecxz
mov
pop
or
outsw
sbb
je
lret
std
call
adc
xchg
popf
pop
cs
or
xchg
ret
dec
and
sbb
jnp
push
xor
xchg
dec
imul
arpl
stc
in
shrl
xchg
stos
daa
xchg
repnz
ret
cmp
mov
xchg
adc
mov
ss
cmp
cmp
xor
pop
ds
xor
mov
mov
inc
push
sub
push
cmp
aad
shlb
pop
jmp
das
outsl
in
mov
or
ror
jb
repz
call
or
xlat
sbb
xchg
testb
add
jno
xor
xorb
sahf
fistl
push
cmc
inc
pop
inc
int3
faddl
hlt
faddl
repnz
sti
imul
adc
ror
dec
pop
cs
adc
mov
cmp
and
cs
inc
dec
dec
cmp
nop
or
je
sub
cwtl
out
imul
adc
ss
scas
jb
and
loopne
int
repnz
cs
lret
out
cli
pop
jle
imul
dec
shl
shr
lret
in
out
sahf
push
out
movsl
sarb
inc
daa
and
icebp
sbb
push
jo
iret
cmpsl
scas
cmpsb
lcall
cmc
rorb
cmp
xchg
hlt
int3
adc
dec
pop
das
mov
add
mov
imul
mov
add
add
and
jmp
test
sarb
cli
mov
das
or
inc
xor
cmc
std
cmc
cmc
sbb
stc
dec
fdivrl
or
scas
shlb
stos
lea
jns
mov
out
jle
adc
aaa
in
icebp
ret
mov
or
or
loopne
mov
lahf
mov
xor
or
add
pusha
mov
or
xor
out
jbe
jns
sbb
adcb
aas
cmp
rorl
sub
sub
fimull
lods
stc
test
loopne
les
jge
jg
aad
fdivrp
xor
mov
fwait
les
xchg
adc
or
rclb
xor
shll
mov
add
lret
mov
jb
popf
sbb
popa
aaa
xchg
aas
xchg
movb
push
or
addl
push
mov
add
mov
push
mov
inc
pop
and
out
dec
adc
test
imul
ja
mov
jns
xchg
adc
in
jae
mov
inc
imul
inc
or
add
xchg
pop
lds
cmp
adc
xchg
rorb
lret
push
stos
push
push
mov
aaa
addr16
popl
dec
repnz
mov
outsl
insl
and
jns
pop
xchg
vmovq
fwait
add
xor
mov
nop
pop
jl
mov
inc
pop
movsb
das
sub
out
rcrl
loope
inc
push
inc
or
notl
hlt
inc
xlat
repz
nop
ficoml
mov
xor
test
out
xchg
xor
sub
dec
push
xchg
insb
vaddss
lods
inc
dec
sahf
test
movsl
insl
fcomp
cmp
xchg
cmpsl
dec
push
jb
dec
fisubl
dec
mov
popf
fs
out
mov
jbe
push
mov
add
mov
xlat
mov
mov
sbb
pushf
mov
or
inc
jae
test
jl
ficoms
or
ret
pop
sbb
pop
jo
pop
mov
mov
shll
cld
adc
cmpsb
mov
mov
fidivs
inc
jb
mov
mov
and
pop
jbe
push
fstps
cmp
insb
pop
mov
and
cli
cld
sbb
fs
push
dec
mov
pushf
les
push
mov
inc
jne
hlt
fdivrs
std
xchg
xorl
std
mov
popf
inc
jne
sbb
add
mov
loopne
add
mov
push
jecxz
lahf
xbegin
outsb
pop
dec
hlt
xor
sahf
sahf
mov
pusha
add
outsb
fistpll
or
fwait
xchg
cld
es
aaa
xchg
or
cmp
loope
dec
jae
and
movsl
ds
leave
cld
cmc
or
cmp
mov
pop
pop
and
imul
int
stos
and
and
testb
sarb
and
push
pop
loope
clc
hlt
aaa
sbb
xchg
cmp
addr16
aad
jo
cli
ljmp
pop
pop
mov
data16
loop
mov
mov
mov
inc
rorl
mov
add
in
push
ljmp
xor
ds
dec
shll
incb
inc
aad
adc
xor
sbb
stos
enter
or
jbe
push
push
dec
mov
inc
add
sub
dec
rorb
add
mov
mov
daa
fidivrl
mov
sub
jmp
inc
ljmp
and
jp
fimull
xor
inc
scas
aas
lock
loopne
loopne
daa
aad
shll
cli
mov
or
das
jno
push
movsb
cltd
adc
and
repnz
dec
pushf
mulb
mov
imul
call
nop
negb
mov
idivl
int3
or
es
rcr
mov
movsl
mov
sub
inc
mov
add
mov
push
jecxz
or
mov
xchg
and
jecxz
shlb
bound
inc
imul
cld
or
mov
pop
pop
push
aam
mov
lods
cs
test
outsb
sub
inc
popf
inc
orl
add
add
add
fimull
cmp
sbb
mov
mov
xor
imul
mov
sub
and
lea
mov
or
add
and
add
mov
and
xor
cmp
jne
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
xor
jmp
or
adc
daa
leave
push
sbb
cmc
std
cmc
cmc
jne
jnp
int
pusha
mov
ss
inc
pop
adc
lahf
jmp
mov
orl
mov
jb
out
dec
int
xchg
cmpsl
scas
add
cmp
fwait
lods
testb
xorl
inc
repnz
fimull
lds
enter
dec
sub
int
lea
jp
lret
inc
inc
dec
xchg
movsb
xchg
call
xor
sti
loop
daa
ficoml
ljmp
jns
cmp
repz
popf
mov
insb
scas
xchg
jge
pusha
xor
xor
iret
xchg
imul
mov
lret
jo
push
addr16
inc
adc
pop
fisttpl
fmulp
fidivrs
sbb
dec
and
andb
sub
sbb
push
jo
daa
fs
aam
cmp
adc
xor
pushf
loope
mov
push
fdivrl
xor
rclb
adc
stos
scas
mov
and
mov
enter
fwait
sbb
add
fldenv
cmp
aam
dec
mov
in
fcompl
push
std
rorb
sbb
or
mov
cltd
mov
mov
out
xor
loop
fs
cmc
jae
xchg
lret
fistpl
sahf
xchg
cwtl
pop
into
sbb
fmuls
and
mov
mov
jg
xchg
xor
les
rclb
lret
mov
rcll
cwtl
mov
lcall
sub
loope
stc
stos
aam
ret
mov
xor
add
test
rcr
mov
fnstenv
dec
xchg
and
shrb
clc
mov
into
pop
shl
add
and
iret
push
cmp
inc
fstl
andl
ficompl
jns
pop
push
mov
divb
and
rcr
jge
ficoms
push
jge
inc
mov
mov
sar
push
or
jns
lods
mov
fcmove
mov
jnp
or
cwtl
xchg
or
lock
xor
pop
int3
int
xor
jbe
daa
xchg
std
mov
aaa
imul
lock
test
jnp
stos
add
dec
inc
fmuls
in
jnp
shll
arpl
insb
mov
insb
test
inc
mov
sti
outsb
test
pop
mov
xchg
mov
adc
mov
mov
mov
mov
in
dec
jmp
sarb
scas
in
daa
mov
and
nop
xor
cmpxchg
add
dec
in
mov
inc
fs
daa
add
pushf
add
jecxz
jl
push
iret
popa
jecxz
cmpl
clc
cmp
fcoml
imul
insb
xor
stos
xor
or
mov
xor
dec
cmp
push
cwtl
stc
in
loop
add
push
ss
sub
xchg
out
xor
ds
popl
ds
das
leave
rcrl
adc
leave
ja
push
add
data16
dec
xchg
jnp
out
or
out
cmp
xchg
in
xchg
das
xchg
lret
adc
pop
add
popf
jnp
jns
pop
test
pop
ss
inc
push
rcrl
add
mov
adc
mov
jo
sbb
shrb
mov
mov
mov
push
push
fadds
xor
sar
cmc
push
sub
jg
clc
enter
mov
int
push
sub
in
mov
lret
mov
cli
mov
sub
xchg
rol
mov
mov
push
test
jae
nop
dec
push
sbb
fsubr
iret
push
push
mov
js
fsubrl
xchg
cmp
das
loop
rcll
xchg
pop
xor
stos
mov
push
out
decl
popa
lahf
sbb
lds
sub
cmp
cmpsb
out
jmp
push
jmp
xchg
outsb
fildll
mov
jp
push
or
xchg
add
inc
popa
dec
or
ss
pushf
jo
pop
ret
pushf
orb
inc
aam
dec
fdivs
shr
pushf
add
add
or
dec
rcrb
xor
cmc
std
cmc
cmc
xor
sub
cmp
or
mov
insb
jo
adc
inc
or
push
xor
pop
inc
jns
pop
mov
outsl
dec
push
xchg
fidivrl
mov
rcrb
roll
dec
mov
xor
iret
scas
push
pop
inc
pop
mov
out
shlb
sahf
cltd
scas
cmp
repz
pop
adc
inc
flds
andb
cmp
lds
fwait
insb
push
inc
stos
lret
std
and
inc
sahf
outsb
mov
mov
pop
add
cmpsb
sbb
aam
lahf
jge
fdivl
ss
sub
and
dec
mov
mov
cmp
test
ljmp
add
stos
repnz
push
aad
ficompl
cli
dec
push
mov
add
jge
std
shll
mov
dec
iret
sahf
xlat
and
int
rcr
pop
add
add
xchg
gs
add
imul
fs
inc
lods
scas
fmull
jb
cmp
stc
lods
pop
rcr
inc
jecxz
cmp
dec
add
xor
fcmovnu
pop
cmp
sub
adc
or
lods
outsb
adc
xchg
pop
push
xchg
into
stos
test
inc
out
mov
hlt
xor
les
or
cmp
xchg
push
and
xchg
dec
push
adcb
lock
shll
leave
sbb
sub
mov
xor
ja
adc
add
sahf
mov
or
stc
divb
aam
cmp
push
cmc
cmpsb
xor
cs
inc
test
inc
mov
mov
fldt
stos
push
mov
cmp
or
fcomp
and
sub
lock
adc
sbb
in
adc
jb
push
add
and
lock
cmp
stc
sub
les
rcll
test
mov
or
push
xor
xor
ljmp
and
jmp
push
ja
aam
cs
adc
and
in
fstl
or
lds
clc
xor
pushf
lret
mov
movsb
cmp
dec
fisubrl
lds
mov
add
js
mov
inc
add
cltd
xorb
adc
repz
mov
mov
out
adcl
pop
mov
out
repz
outsb
pop
fldenv
dec
pop
imul
sahf
mov
int3
push
and
jmp
xor
push
sbb
test
push
rclb
cmp
xchg
mov
clc
insl
cmp
sar
imul
xchg
in
inc
inc
out
add
jge
pop
repz
dec
jnp
addr16
pop
aaa
jne
out
xor
out
sti
orl
ja
mov
cltd
mov
inc
popf
cmpsb
or
or
add
nop
ss
inc
jecxz
aam
jns
test
test
add
scas
dec
in
add
je
data16
mov
cmp
mov
cltd
fsubrs
cmp
xchg
add
xchg
repnz
mull
jb
pop
pop
insl
leave
xlat
pop
lret
into
pushf
inc
mov
imul
or
pop
sub
xchg
add
xchg
jecxz
rclb
rcr
push
dec
jg
shr
jecxz
push
cmp
addb
fbld
and
bnd
popa
xlat
movsb
nop
lods
lcall
pop
lods
popa
std
rcrb
sub
decl
jbe
ret
pop
in
cmp
push
dec
and
jb
mov
xor
mov
push
js
dec
loop
lret
imul
mov
dec
bound
out
or
xchg
std
pop
inc
cmpl
out
fcoms
pop
loope
es
repz
fcoms
jl
inc
inc
cmpsl
stos
or
loop
pop
mov
and
jb
nop
inc
inc
in
and
xor
xor
hlt
cmp
stos
in
mov
jl
add
incl
jb
xchg
les
push
repnz
mov
std
push
cld
push
jb
jmp
ret
mov
mov
xor
jmp
movl
movl
movl
movl
movl
movl
mov
mov
or
xor
mov
lea
xor
mov
sub
mov
mov
mov
add
or
xor
div
mov
mov
imul
add
xor
sub
mov
mov
mov
mov
and
lea
mov
mov
lea
mov
and
add
cmp
jb
movl
jmp
xchg
pusha
into
sub
sub
push
xor
dec
repnz
frstor
sbb
cmc
std
cmc
cmc
fs
mov
das
scas
iret
lahf
adcl
fiaddl
mov
jecxz
xor
test
fsubrs
mov
sbb
xlat
sarb
pop
enter
in
add
data16
in
mov
fimuls
cwtl
cs
cld
icebp
cwtl
out
jp
push
nop
testl
pop
adc
dec
adc
out
pop
push
adc
and
mov
mov
xorl
sahf
or
xor
pop
sub
ficoms
gs
cmp
cwtl
cmp
lret
out
push
leave
xor
stos
mov
mov
mov
ja
adc
insl
das
jb
fidivrl
loope
das
cmp
xchg
sub
scas
nop
out
inc
mov
lcall
lods
jno
cmp
icebp
int
inc
add
das
inc
pop
stc
mov
adc
lea
mov
cmp
out
jns
in
push
mov
sub
es
imul
loopne
ds
sbb
lods
push
and
or
push
xor
cmp
and
cmc
in
std
adc
ss
and
jb
mov
pop
mov
fistps
je
test
aam
adc
insl
lahf
ja
cmp
testb
dec
cmc
pop
insb
mov
push
dec
mov
loopne
into
and
sub
mov
repnz
outsl
ret
jl
aad
test
mov
es
loope
jnp
fwait
andl
stos
mov
loope
push
mov
cmc
jmp
cld
sbb
scas
bound
and
jns
fildl
mov
imul
cmp
xor
ret
mov
adc
push
cmp
cmpsb
push
or
test
inc
xchg
add
and
mov
cmp
clc
lret
cmp
out
jo
or
dec
xor
inc
dec
and
adc
adc
scas
xchg
adc
xlat
shlb
aas
pop
insb
dec
jne
leave
mov
xor
and
imul
add
cs
cmc
jno
mov
mov
xor
sub
lahf
inc
inc
xor
xor
popf
push
fistl
insb
adc
xor
mov
push
xchg
adc
add
clc
test
mov
clc
or
fs
repz
inc
stos
sub
lret
sahf
iret
jnp
sub
shl
popf
push
lahf
fidivrs
or
repnz
inc
test
sub
in
and
dec
cmpb
add
iret
leave
lock
sbb
cmpsb
and
ret
adc
sub
loopne
outsl
arpl
adc
mov
jl
ljmp
sti
sub
loop
push
and
xchg
and
pop
mov
pop
xchg
mov
insl
push
inc
dec
hlt
mov
push
adc
mov
mov
cld
pop
mov
adc
adc
arpl
lock
fldcw
ss
pop
inc
hlt
mov
cmpl
pushf
dec
inc
jb
call
mov
mov
out
lods
lods
push
test
jmp
xor
cs
and
cltd
enter
xor
das
iret
jmp
add
push
fadds
int3
es
push
xchg
xchg
out
or
rcrl
enter
leave
lods
push
sbb
dec
cmp
inc
adc
push
mov
data16
cmpsb
insb
outsl
or
clc
fstps
lret
loop
jecxz
icebp
pop
imul
lds
sub
push
jo
insl
cld
lret
cmpsb
outsl
cs
add
ret
cmpb
jmp
fsubrs
mov
jb
sti
popa
movsb
inc
jo
in
push
sbb
movsb
stos
stos
in
sbb
les
cmpsl
or
adcl
xor
adc
mov
jg
sbb
incl
mov
in
cmp
cli
shl
sar
xor
cmp
inc
int3
mov
inc
enter
add
pushf
add
add
push
xchg
push
xchg
inc
adc
lock
and
div
std
cmc
cmc
and
mov
dec
cmp
pop
add
jecxz
adc
clc
sub
sbb
dec
fdivs
inc
into
push
outsl
cs
ret
push
into
hlt
out
test
xchg
imul
and
or
sbb
or
xor
mull
loope
mov
add
adc
enter
dec
aaa
xchg
subb
inc
movsb
pop
xchg
jb
cmp
sbb
bound
jmp
jl
fstpt
jne
xchg
inc
xchg
mov
xchg
push
cs
sbb
sbb
or
dec
mov
in
inc
mov
mov
icebp
push
push
test
mov
jp,pn
and
fxtract
inc
cmc
or
lock
add
inc
cmp
jg
jecxz
mov
mov
dec
cmp
ja
push
fildl
data16
dec
mov
icebp
lods
std
popa
jbe
stc
xchg
xchg
test
push
fucomip
andb
popa
cmc
cmp
sbb
cmp
adc
push
rcrl
mov
movsl
push
add
jbe
shlb
pop
loope
adc
jae
dec
pop
jns
sub
out
adc
lods
adc
insl
mov
adc
clc
cmp
sbb
imul
insl
aad
xor
inc
repz
inc
pop
jnp
and
cmp
push
hlt
mov
and
xor
sti
addb
call
cmp
xor
push
or
addr16
cltd
jae
or
add
test
lea
jb
cli
xchg
cmp
fisttpll
popa
inc
fcomip
inc
mov
or
adc
pop
outsb
mov
repz
and
xor
inc
nop
mov
cmp
push
out
mov
cmpsl
test
mov
cmpsb
ficomps
lcall
inc
add
mov
rcll
sub
rcrb
and
jg
mov
or
ret
roll
ljmp
incb
outsb
jmp
insl
sbb
enter
xchg
mov
cmp
loope
test
or
mov
mov
adc
sub
js
hlt
hlt
lods
pop
push
das
pop
jge
aaa
lret
lock
lcall
inc
std
jnp
add
test
cmp
inc
scas
int3
in
mov
je
push
es
test
jp
jge
stos
ret
int
cmpb
sbb
push
mov
shll
and
in
fisubl
add
inc
mov
dec
in
imul
push
inc
sbb
xchg
pop
sbbl
repnz
mov
andnps
sbb
cmp
lcall
dec
shr
int
inc
dec
xor
pop
lahf
lret
adc
mov
dec
lock
mov
inc
mov
cli
mov
lods
scas
and
xor
lret
aaa
xchg
and
mov
insl
stos
imul
xor
mov
lret
adc
lcall
ret
xchg
stos
and
daa
sbb
jbe
mov
pop
scas
daa
test
icebp
ss
and
and
adc
dec
and
inc
mov
xchg
mov
adc
pop
aam
push
cmp
ljmp
mov
sahf
dec
xor
jo
mov
mov
cld
outsb
xor
mov
jns
inc
lahf
and
lock
or
xchg
pusha
shll
and
in
aam
pop
adc
fnstcw
mov
aam
sbb
ret
repnz
out
cli
push
insl
cmpsl
mov
ret
aaa
mov
cmp
clc
mov
pop
inc
jmp
shll
lock
loopne
and
cmp
pop
fnstsw
jbe
test
das
inc
and
add
fnsave
cli
bnd
insl
xchg
sbb
xchg
jg
rcl
mov
repnz
aas
pop
scas
xchg
outsb
hlt
jno
xchg
ret
dec
repnz
out
xchg
xchg
sub
push
sbb
cmp
sub
insb
xchg
adc
jg
in
jp
shlb
movl
movl
movl
movl
movl
movl
mov
mov
imul
mov
imul
or
xor
add
xor
mov
mov
jmp
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
and
mov
or
jmp
adc
xor
xor
adc
lods
adc
jecxz
sahf
cmp
or
div
stos
stc
cmc
cmc
andl
movl
arpl
repnz
inc
sub
out
mov
decl
push
xchg
fmull
jnp
insb
push
jbe
dec
and
cwtl
xchg
xor
mov
jb
cmp
scas
adc
cmp
out
in
push
fldcw
insl
xchg
lds
das
cmp
inc
mov
adc
addr16
aad
das
pop
mov
mov
inc
mov
pusha
lds
pop
sbb
aaa
call
sti
lods
iret
lods
stc
out
push
or
int
rorb
pushf
mov
mov
les
push
sub
test
test
ss
pushf
xor
loopne
mov
inc
push
mov
les
in
lahf
mov
cmpsb
pop
mov
jns
inc
cli
les
mov
jle
pop
jns
and
inc
adc
and
inc
lahf
sbb
pop
add
adc
push
pop
subb
pop
scas
sub
adc
mov
dec
xchg
movsl
xor
cli
xor
inc
jo
or
pop
cmpl
mov
jno
je
shll
testb
scas
es
inc
lds
xchg
in
push
mov
out
mov
scas
jae
mov
mov
jecxz
dec
int
ja
fists
push
icebp
cmp
add
inc
lcall
push
ljmp
shr
arpl
pushf
sahf
das
xor
in
out
add
bound
push
clc
fisubrl
adc
sbb
adc
lods
in
sub
mov
adc
stos
ficoms
ja
sub
sbb
add
ds
insl
testl
or
xchg
je
out
sbb
int3
cmpb
mov
cmp
cmp
sub
xchg
add
ljmp
xchg
leave
sub
cltd
orb
mov
pop
xor
pusha
add
mul
xor
inc
sbb
test
clc
adc
fidivs
push
out
fisubs
fstpl
adc
push
fidivrs
scas
shll
mov
mov
test
and
in
or
es
dec
mov
ss
xchg
dec
mov
pop
jmp
stos
insb
mov
xchg
mov
js
in
jmp
inc
adc
push
cmpsb
daa
in
push
mov
mov
mov
xor
xor
div
mov
mov
add
lea
mov
mov
mov
and
or
sub
xor
mov
sub
mov
mov
mov
mov
mov
mov
add
and
or
xor
add
mov
and
add
mov
and
sub
mov
imul
sub
cmp
jb
pop
pop
pop
leave
ret
push
mov
sub
push
movl
movl
mov
mov
imul
or
and
xor
add
xor
mov
movl
movl
mov
mov
add
div
mov
or
sub
imul
lea
mov
movl
movl
movl
movl
mov
mov
or
mov
and
mov
or
sub
mov
movl
movl
mov
mov
mov
mov
or
mov
imul
and
or
and
xor
mov
sub
mov
movl
movl
mov
mov
or
or
mov
sub
mov
movl
movl
mov
mov
sub
xor
sub
mov
movl
mov
movl
mov
add
mov
and
imul
and
sub
mov
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
or
or
mov
mov
xor
xor
sub
mov
sbb
mov
sub
mov
sbb
mov
push
push
push
push
call
add
mov
adc
mov
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
sub
xor
add
xor
push
mov
mov
xor
div
mov
and
lea
add
push
mov
mov
mov
mov
and
sub
mov
mov
add
and
mov
mov
xor
add
mov
push
mov
xor
div
mov
xor
mov
imul
mov
sub
xor
lea
call
mov
mov
imul
mov
or
sub
and
mov
sub
cmp
jne
mov
push
pop
xor
div
xor
xor
add
xor
lea
push
mov
mov
imul
mov
and
mov
or
add
mov
and
mov
div
push
mov
add
push
mov
mov
and
xor
and
mov
mov
xor
pushl
call
mov
mov
lea
mov
incl
mov
mov
xor
shld
shl
mov
mov
xor
xor
cmp
jne
cmp
jne
mov
mov
jmp
lea
mov
mov
mov
mov
mov
sub
mov
mov
mov
sub
mov
movl
movl
mov
mov
mov
mov
pushl
pushl
pushl
pushl
pushl
push
push
pushl
mov
call
mov
mov
mov
call
mov
push
add
push
push
call
mov
jmp
mov
mov
pop
leave
ret
push
mov
sub
movl
movl
movl
push
movl
mov
mov
push
push
push
call
mov
mov
or
and
add
xor
mov
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
xor
mov
mov
lea
mov
mov
or
mov
mov
or
mov
mov
sub
add
xor
xor
lea
mov
sub
mov
movl
movl
movl
movl
movl
mov
and
add
mov
and
mov
imul
mov
xor
div
mov
push
sub
mov
mov
movl
movl
mov
sub
xor
pop
div
mov
xor
push
sub
add
mov
mov
movl
movl
mov
pop
div
mov
xor
xor
imul
sub
div
mov
xor
mov
movl
movl
movl
movl
movl
mov
mov
and
mov
div
xor
add
mov
div
sub
leave
ret
push
mov
sub
push
push
mov
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
xor
mov
xor
mov
or
mov
mov
mov
or
or
or
add
cltd
adc
cmp
jne
cmp
je
mov
mov
mov
mov
push
push
or
or
push
push
call
mov
mov
mov
add
adc
and
and
mov
sub
mov
sbb
mov
mov
mov
xor
cmp
jne
cmp
jne
mov
mov
xor
or
mov
or
lea
xor
mov
mov
and
imul
mov
xor
sub
mov
and
sub
mov
mov
xor
or
xor
div
mov
push
push
sub
lea
mov
mov
mov
xor
imul
and
lea
mov
add
mov
mov
mov
mov
and
and
and
and
push
push
call
mov
xor
xor
add
adc
xor
xor
xor
cmp
jne
cmp
jne
mov
mov
and
xor
div
mov
sub
mov
add
mov
add
add
add
mov
pop
pop
leave
ret
push
mov
sub
push
push
push
movl
movl
movl
movl
movl
xor
inc
mov
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
movl
movl
movl
movl
mov
mov
push
mov
push
xor
xor
push
push
call
push
mov
push
push
push
call
mov
mov
sub
mov
sbb
add
adc
mov
mov
xor
push
push
xor
xor
push
push
shr
mov
call
push
push
push
push
call
mov
mov
sub
sbb
add
adc
shld
shl
or
mov
or
xor
xor
mov
mov
mov
mov
mov
mov
push
push
push
push
call
mov
mov
push
push
and
and
push
push
call
mov
mov
mov
xor
xor
add
mov
adc
mov
mov
mov
mov
mov
mov
xor
mov
xor
mov
push
push
xor
xor
push
push
call
mov
mov
add
mov
mov
mov
mov
xor
mov
xor
mov
push
push
xor
lea
xor
push
shl
push
xor
xor
call
mov
mov
add
adc
add
adc
xor
xor
shrd
shr
or
or
mov
mov
mov
mov
mov
mov
or
or
add
adc
and
mov
and
mov
xor
xor
and
and
add
mov
pop
adc
pop
mov
mov
pop
leave
ret
push
mov
sub
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
or
sub
mov
and
imul
mov
mov
xor
mov
sub
mov
xor
add
cmp
jne
mov
mov
or
mov
imul
add
mov
push
mov
push
mov
or
mov
imul
add
mov
or
or
mov
add
add
mov
xor
xor
mov
mov
shl
mov
add
add
mov
mov
mov
imul
or
imul
mov
sub
pop
pop
cmp
je
mov
jmp
mov
mov
sub
add
add
add
xor
jmp
movl
movl
mov
mov
or
sub
add
leave
ret
push
mov
and
sub
push
push
lea
mov
mov
mov
mov
sub
sbb
mov
orl
orl
lea
push
lea
push
call
mov
mov
pushl
mov
pushl
mov
pushl
pushl
pushl
pushl
pushl
call
pop
pop
mov
pop
ret
push
mov
sub
push
push
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
xor
imul
or
mov
mov
xor
mov
and
mov
or
and
xor
sub
mov
sub
mov
mov
xor
add
div
mov
mov
or
mov
sub
add
cmp
ja
push
movl
movl
movl
movl
movl
mov
mov
mov
and
xor
div
mov
mov
xor
or
xor
div
mov
mov
sub
sub
mov
mov
mov
mov
mov
mov
mov
mov
xor
mov
xor
and
xor
mov
div
add
mov
mov
xor
mov
and
mov
or
and
xor
mov
sub
mov
mov
xor
add
div
mov
or
mov
sub
add
cmp
jbe
pop
pop
pop
leave
ret
push
mov
sub
mov
xor
push
cmpl
jg
jmp
pushl
push
pushl
pushl
push
call
push
push
mov
mov
shrd
shr
mov
cmpl
jb
jmp
pushl
call
mov
xor
mov
xor
or
mov
mov
cmpl
ja
and
jmp
push
pushl
pushl
call
shl
mov
shrd
xor
shr
mov
xor
xor
xor
mov
xor
or
mov
cmpl
jb
andl
mov
mov
sub
xor
jmp
pushl
call
mov
mov
cmpl
jbe
sbb
jmp
push
push
push
call
mov
mov
mov
mov
mov
mov
subl
mov
mov
xor
or
sub
and
shl
xor
shld
sub
shl
mov
mov
notl
mov
mov
subl
xor
addl
xor
movl
movl
movl
movl
mov
movl
cmp
jne
cmp
je
mov
cmpl
jl
inc
add
jmp
push
call
mov
mov
xor
shld
shl
mov
xorl
mov
xor
xor
mov
cmp
movl
jne
movl
cmp
je
and
mov
mov
sub
shl
movl
mov
movl
xor
andl
shr
andl
or
xor
mov
adc
mov
cmpl
jb
xor
jmp
pushl
push
push
call
mov
mov
mov
mov
push
pop
sub
cmpl
jge
movl
jmp
push
push
call
mov
add
mov
lea
mov
mov
neg
mov
xor
adcl
shr
sbbl
shl
orl
or
mov
mov
or
mov
movl
cmpl
ja
jmp
pushl
push
push
push
push
call
mov
mov
xor
shr
shl
or
push
sbbl
lea
push
lea
addl
push
xorl
call
xor
mov
cmpl
jb
mov
mov
xor
jmp
pushl
call
mov
xor
shr
shl
or
cmpl
jg
xor
jmp
push
call
push
lea
push
mov
mov
shrd
shr
or
mov
mov
subl
xor
xor
or
xorl
lea
push
shl
orl
call
mov
sbb
mov
sbbl
xor
shl
cmpl
ja
sbb
not
jmp
push
call
shr
or
push
lea
push
mov
mov
cmpl
jbe
sbbl
jmp
push
pushl
call
shrd
shr
mov
mov
xor
shl
xor
adcl
or
orl
lea
addl
push
orl
call
or
mov
mov
cmpl
ja
movl
mov
and
jmp
pushl
push
call
xor
shl
shr
or
push
cmpl
ja
jmp
pushl
push
call
lea
push
mov
mov
shrd
shr
mov
adc
mov
adc
xor
cmpl
jb
sub
mov
and
mov
jmp
pushl
push
push
call
xor
or
shl
sbb
mov
or
mov
or
shrd
adc
shr
mov
sub
mov
xor
xor
or
adcl
add
adcl
lea
push
negl
shl
call
or
mov
addl
mov
cmpl
ja
adc
decl
jmp
pushl
push
push
push
call
shl
xor
shr
or
push
addl
lea
sbb
push
xor
add
xor
mov
mov
mov
sbb
mov
mov
shrd
subl
shr
mov
xor
or
mov
sub
add
mov
sub
xor
mov
or
mov
shl
and
mov
xor
or
or
cmpl
ja
jmp
pushl
pushl
call
mov
shrd
shr
mov
mov
xor
xor
addl
or
adc
add
and
mov
cmpl
jle
movl
jmp
push
push
pushl
push
push
pushl
pushl
call
shl
mov
shrd
shr
mov
mov
sbbl
xor
xor
or
adcl
add
movl
lea
orl
push
subl
shl
call
mov
and
mov
mov
xor
xor
add
shr
shl
cmpl
jle
jmp
pushl
call
or
mov
lea
push
mov
mov
shrd
xor
shr
and
mov
cmpl
jl
xorl
or
jmp
pushl
pushl
pushl
call
mov
xor
xor
or
push
mov
mov
addl
push
pushl
shl
orl
call
addl
lea
or
push
mov
add
mov
mov
xor
mov
incl
shrd
or
shr
sbb
mov
cmpl
jl
add
jmp
pushl
push
call
mov
xor
xor
or
push
mov
addl
push
pushl
sbbl
shl
orl
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
rol
mov
xor
cmp
je
movl
mov
movl
mov
mov
mov
mov
mov
mov
xor
shld
shl
xor
mov
mov
mov
xor
inc
xor
mov
mov
mov
movzwl
mov
cltd
idiv
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
imul
mov
and
mov
and
mov
imul
mov
sub
mov
cmp
ja
mov
mov
shrd
shr
mov
mov
xor
xor
or
shl
mov
mov
mov
mov
mov
xor
xor
shrd
mov
shll
xorl
xor
or
mov
shr
or
xor
cmp
ja
jae
mov
add
mov
mov
movb
movb
movb
movb
mov
movzbl
mov
xor
mov
imul
movzbl
xor
and
add
mov
movb
movb
mov
mov
and
or
imul
mov
cmp
ja
movb
movb
movb
mov
mov
and
or
add
mov
movzbl
cltd
movzbl
idiv
mov
movb
movb
movb
mov
mov
xor
sub
mov
movzbl
movzbl
cltd
idiv
mov
cmp
jb
mov
mov
shrd
shr
mov
mov
xor
xor
or
sub
shl
mov
mov
shrd
shr
mov
mov
xor
xor
shl
mov
or
ror
jmp
mov
mov
mov
mov
mov
shrd
shr
mov
mov
xor
xor
or
add
mov
shl
mov
mov
mov
xor
xor
shrd
mov
shll
xorl
xor
or
mov
shr
or
xor
cmp
jb
ja
cmp
jb
decl
jne
mov
mov
mov
shrd
shr
mov
mov
xor
xor
or
push
add
push
lea
push
shl
call
mov
mov
shrd
shr
mov
mov
xor
xor
or
add
push
push
mov
shl
mov
shrd
shr
mov
mov
xor
xor
or
add
push
shl
call
push
lea
push
mov
mov
shrd
shr
mov
mov
xor
xor
or
add
push
shl
call
mov
mov
shrd
shr
mov
mov
pop
xor
xor
pop
shl
or
pop
leave
ret
mov
orl
mov
or
mov
movl
jne
mov
mul
ret
push
or
mul
sub
mov
mov
sbb
mov
addl
mull
add
mov
mul
add
pop
ret
push
mov
sub
push
push
xor
inc
mov
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
movl
mov
mov
sub
mov
or
mov
imul
mov
sub
or
add
sub
shr
lea
mov
mov
mov
and
xor
xor
div
mov
sub
cmp
ja
push
movl
movl
mov
mov
xor
sub
and
xor
mov
sub
sub
mov
mov
xor
mov
div
mov
xor
sub
div
mov
mov
add
sub
mov
mov
mov
sub
or
mov
xor
xor
add
mov
sub
or
add
shr
lea
mov
mov
mov
and
xor
xor
div
sub
cmp
jbe
pop
pop
pop
leave
ret
push
mov
and
sub
push
push
xor
push
mov
inc
pushl
call
cmp
je
movl
movl
cmpl
jle
xor
or
mov
sub
add
jmp
push
push
call
movl
push
adc
movl
mov
mov
and
mov
movl
push
push
push
addl
call
sub
mov
mov
addl
xor
add
xor
mov
mov
and
and
sub
and
cmpl
jg
add
jmp
push
push
call
add
mov
adc
mov
movl
movl
movl
movl
cmpl
jge
mov
mov
sub
sub
jmp
push
push
push
push
push
pushl
pushl
pushl
push
push
push
push
call
movl
movl
mov
adc
mov
mov
cmpl
jle
sbb
jmp
pushl
push
pushl
push
call
mov
add
mov
adc
mov
xor
adcl
xor
or
mov
addl
or
movl
xor
addl
xor
cmp
movl
jb
ja
movl
cmp
movl
jbe
cmpl
jle
jmp
push
push
push
call
movl
movl
movl
movl
movl
movl
mov
cmpl
jle
sub
jmp
pushl
push
push
pushl
call
mov
movl
movl
movl
movl
movl
movl
cmpl
jbe
and
jmp
push
push
push
push
call
movl
movl
movl
mov
mov
imul
mov
imul
subl
sub
orl
and
cmpl
jl
sbb
jmp
push
push
push
call
or
mov
sub
pushl
mov
mov
imul
sub
mov
xor
add
mov
andl
pushl
andl
xor
div
xor
xor
mov
sub
pushl
xor
xor
pushl
mov
pushl
orl
add
adcl
pushl
xor
pushl
pushl
and
pushl
neg
push
mov
mov
add
pop
subl
div
mov
addl
xor
div
mov
adcl
xor
andl
sub
add
pushl
cmpl
ja
movl
jmp
push
push
push
call
mov
mov
div
mov
or
mov
sbbl
or
mov
orl
or
sub
movzbl
sub
pushl
mov
mov
sub
sub
mov
adc
mov
addl
pushl
andl
add
subl
xor
and
or
xor
pushl
pushl
call
cmpl
jge
movzwl
or
sbb
jmp
push
call
movl
movl
movl
mov
cmpl
jb
movl
jmp
pushl
pushl
pushl
pushl
pushl
pushl
push
push
pushl
push
call
mov
sub
mov
xor
div
pushl
orl
pushl
pushl
call
dec
movl
cmp
movl
jne
mov
not
mov
dec
mov
subl
mov
movl
sbbl
mov
xorl
call
inc
lea
cmpl
jbe
xor
xor
jmp
push
push
push
call
mov
lea
mov
mov
mov
sub
mov
mov
xor
shl
cmpl
jl
sub
jmp
pushl
call
shr
or
mov
mov
lea
mov
xor
add
sbb
mov
adc
mov
sbb
mov
add
shrd
cmpl
jl
xorl
neg
jmp
call
shr
mov
mov
xor
xor
adcl
or
mov
subl
push
pushl
addl
lea
push
shl
call
sbbl
lea
sbbl
push
xorl
mov
decl
mov
negl
lea
adcl
push
mov
lea
xorl
mov
andl
mov
subl
mov
push
adcl
call
push
push
pushl
incl
call
cmpl
jbe
or
jmp
pushl
call
mov
mov
mov
mov
shr
shl
or
mov
xor
xorl
mov
adc
lea
mov
adcl
lea
mov
xor
mov
adc
sub
cmpl
jge
dec
movl
jmp
push
push
push
push
pushl
pushl
pushl
call
lea
xor
movl
movl
mov
mov
sbb
mov
mov
or
xorl
or
push
push
orl
push
andl
push
adcl
call
xor
or
sub
mov
or
mov
movl
or
movl
sbb
movl
sub
push
inc
movl
mov
mov
push
subl
push
push
call
cmpl
jl
sbbl
jmp
push
push
call
mov
mov
and
and
mov
mov
subl
add
movl
adc
adcl
xor
xor
cmp
jb
ja
cmp
jbe
movl
movl
andl
movl
movl
cmpl
jl
jmp
push
push
push
call
movl
movl
mov
mov
mov
mov
and
addl
and
sbbl
or
or
add
mov
adc
mov
add
movl
mov
movl
adc
cmpl
ja
add
jmp
push
push
push
call
mov
movl
movl
movl
movl
movl
and
movl
sub
mov
sbbl
mov
mov
cmpl
jbe
jmp
pushl
push
call
mov
xor
xor
and
mov
and
mov
adcl
push
push
addl
push
orl
push
call
mov
movzbl
or
mov
mov
add
movl
adc
orl
or
xorl
or
movl
cmp
movl
jne
cmp
movl
je
cmpl
jb
jmp
push
call
mov
mov
mov
xor
shld
shl
xor
subl
xor
cmp
jne
movl
cmp
je
mov
movl
cmp
movl
je
sbb
mov
mov
and
mov
cmpl
jle
jmp
push
push
call
mov
mov
xor
xor
shrd
mov
shr
xor
mov
mov
or
sbbl
mov
shl
xor
sbbl
or
mov
mov
movl
cltd
cmp
jne
movl
cmp
jne
cmpl
jb
and
jmp
push
call
movl
movl
mov
mov
mov
mov
addl
xor
shld
andl
shl
orl
xor
adcl
xor
cmp
jne
movl
cmp
movl
jne
movl
mov
mov
shrd
shr
mov
mov
shl
mov
xor
xor
or
mov
mov
cmp
jne
movb
movb
mov
mov
add
movzbl
cltd
movzbl
idiv
mov
movb
movb
movb
mov
mov
and
imul
mov
and
mov
xor
cmp
je
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
add
adc
xor
mov
xor
mov
sub
mov
sbb
mov
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
or
or
xor
mov
xor
mov
push
push
push
push
call
push
push
push
push
call
mov
mov
push
push
push
push
call
mov
mov
cmp
jb
ja
cmp
jb
mov
mov
shrd
shr
mov
mov
mov
xor
xor
or
push
push
push
lea
push
lea
push
shl
call
jmp
mov
jmp
mov
pushl
pushl
pushl
pushl
call
mov
mov
shrd
shr
mov
mov
shl
xor
xor
or
mov
mov
mov
mov
shrd
shr
mov
mov
shl
xor
xor
or
mov
mov
mov
mov
mov
cmp
jne
mov
mov
mov
cmp
jne
xor
inc
mov
mov
mov
mov
mov
mov
mov
movzwl
movzwl
and
mov
xor
cltd
movzwl
idiv
push
pop
mov
xor
inc
mov
mov
mov
mov
movzwl
cltd
idiv
mov
movzwl
movzwl
cltd
idiv
mov
add
cmp
jb
lea
push
lea
call
cmp
jne
cmp
jne
xor
jmp
mov
mov
mov
mov
add
adc
mov
mov
push
push
lea
push
call
mov
push
pushl
lea
push
call
mov
mov
mov
mov
mov
mov
mov
lea
mov
add
mov
mov
mov
mov
movzwl
mov
imul
mov
imul
add
xor
mov
mov
mov
mov
mov
mov
mov
mov
xor
mov
imul
mov
sub
mov
cmp
ja
mov
mov
mov
xor
shld
shl
xor
xor
cmp
jne
cmp
je
mov
mov
mov
mov
xor
shr
shl
or
xor
shld
shl
xor
xor
cmp
jne
cmp
je
mov
cltd
mov
mov
cltd
shld
shr
xor
shl
or
or
mov
mov
xor
xor
mov
cmp
jne
cmp
je
pushl
pushl
mov
mov
pushl
mov
call
mov
mov
mov
mov
push
add
push
lea
push
call
mov
mov
pop
pop
pop
mov
pop
ret
push
mov
sub
push
push
adc
push
movl
movl
cmpl
jl
movzbl
add
add
jmp
push
pushl
push
push
call
mov
add
xor
mov
cmpl
jl
jmp
push
push
call
xor
xor
mov
movl
movl
mov
xor
mov
mov
mov
add
imul
add
and
or
sub
mov
mov
add
mov
movl
movl
negl
movl
and
movl
cmpl
ja
xor
or
sub
orl
jmp
push
pushl
push
push
push
pushl
call
movl
movl
mov
adc
imul
or
mov
xor
mov
sub
xor
xor
and
mov
and
mov
and
sub
or
mov
and
xor
neg
mov
add
sbbl
mov
subl
movl
movl
movl
movl
movl
orl
mov
mov
xor
adcl
div
add
sbb
mov
subl
imul
sub
mov
movl
mov
sbb
movl
movl
cmpl
jb
jmp
pushl
call
mov
mov
lea
shr
mov
xor
and
xor
add
and
mov
sub
neg
mov
movzwl
and
mov
movl
cmpl
jl
jmp
push
pushl
call
movl
movl
mov
and
mov
sub
add
add
mov
subl
and
mov
sub
and
mov
cmpl
jbe
not
jmp
push
push
push
push
push
call
movl
movl
movl
mov
add
mov
andl
sub
and
add
cmpl
jb
adc
jmp
push
push
call
xor
mov
movl
movl
movl
mov
mov
subl
lea
imul
or
mov
xor
cmpl
jg
jmp
push
push
call
xor
sub
mov
movl
movl
movl
mov
mov
andl
sub
add
sub
or
movzbl
sbb
sub
mov
decl
xor
mov
or
sub
subl
mov
dec
movl
sub
movl
cmpl
jle
mov
mov
sub
sub
jmp
push
call
movl
movl
movl
movl
adc
movl
movl
xorl
mov
cmpl
jge
jmp
push
push
call
mov
sub
add
mov
sub
mov
sub
incl
add
sbbl
push
movl
call
mov
sub
mov
imul
sbb
mov
mov
or
mov
xor
cmpl
ja
movzbl
sub
and
jmp
push
call
mov
lea
mov
and
adcl
mov
or
sub
mov
sub
mov
add
andl
mov
movl
cmpl
jg
mov
mov
sub
sub
jmp
push
push
call
movl
movl
movl
movl
add
movl
movl
movl
add
movl
movl
movl
or
mov
add
mov
sub
mov
mov
xor
and
xorl
sub
negl
mov
lea
subl
mov
mov
adc
mov
or
mov
cmpl
jge
jmp
pushl
push
pushl
push
call
mov
imul
and
sub
sub
mov
lea
mov
movl
movl
sbb
movl
cmpl
jg
xor
jmp
call
movl
mov
mov
mov
xor
xor
addl
mov
call
or
mov
cmpl
jle
mov
xor
mov
adc
jmp
pushl
pushl
call
mov
mov
mov
addl
xor
xor
mov
orl
call
adcl
or
or
or
mov
mov
adcl
xor
xor
mov
adcl
call
sbb
mov
xor
add
and
mov
mov
subl
mov
cmpl
jb
xorl
movzbl
adc
jmp
push
push
call
mov
xor
xor
mov
movzwl
or
mov
mov
add
mov
andl
mov
mov
adcl
call
mov
sub
mov
or
movzbl
sbb
mov
or
sbbl
push
push
subl
push
push
call
movl
mov
cmp
movl
jne
xor
mov
subl
mov
movl
xor
notl
xor
addl
mov
sbbl
call
and
mov
mov
addl
mov
cmpl
jbe
sub
jmp
push
call
mov
xor
xor
mov
call
or
xor
or
adc
mov
mov
addl
xor
adcl
xor
andl
mov
sbbl
call
mov
mov
cmpl
jg
addl
jmp
push
call
mov
mov
xor
xor
mov
mov
xorl
mov
sbbl
call
adcl
or
mov
mov
adc
mov
or
adcl
push
push
adcl
push
xorl
push
sbbl
call
mov
movl
jmp
jmp
mov
mov
and
lea
mov
mov
cmpl
ja
xor
jmp
pushl
push
pushl
push
pushl
pushl
call
movl
mov
xor
shr
mov
xor
adcl
shl
or
or
mov
mov
xor
or
sub
and
mov
mov
and
mov
add
mov
mov
orl
xor
incl
xor
sbbl
mov
sbbl
call
cmpl
ja
mov
mov
sub
xor
jmp
push
pushl
push
call
mov
mov
mov
cmpl
jb
mov
and
mov
mov
adc
mov
jmp
push
call
mov
xor
xor
mov
subl
call
or
movzbl
adc
or
mov
and
mov
subl
xor
decl
xor
mov
call
cmpl
jl
dec
jmp
pushl
push
call
mov
mov
mov
mov
xor
xor
adcl
mov
cmpl
jle
movzwl
sub
jmp
push
pushl
push
push
call
mov
mov
mov
mov
call
movzwl
adc
mov
mov
subl
or
cmpl
jbe
xor
or
mov
sbb
jmp
push
push
push
push
call
mov
or
push
xorl
push
sbbl
push
xorl
push
sbbl
call
mov
mov
cmp
movl
je
or
mov
mov
xor
xor
subl
mov
call
mov
add
mov
mov
mov
sub
mov
subl
xor
addl
xor
mov
call
or
or
and
mov
imul
xor
add
mov
mov
mov
movl
mov
jmp
movl
jmp
cmpl
jge
andl
jmp
push
push
call
mov
mov
xor
xor
mov
call
cmpl
jb
xor
xor
mov
sub
sub
jmp
push
push
push
push
push
call
mov
mov
or
mov
and
mov
xor
xor
mov
andl
call
or
sub
or
andl
mov
cmpl
ja
jmp
push
pushl
call
mov
xor
xor
mov
call
mov
mov
mov
sub
mov
xor
subl
xor
mov
negl
mov
orl
mov
xorl
call
subl
or
add
mov
sbbl
or
push
adcl
push
push
andl
push
call
mov
movl
jmp
mov
xor
mov
xor
xor
subl
mov
notl
call
add
mov
subl
mov
cmpl
jg
add
jmp
pushl
push
push
pushl
call
mov
mov
xor
xor
mov
call
sbbl
or
orl
or
movl
mov
movl
jmp
cmpl
jbe
jmp
push
push
push
call
mov
mov
xor
xor
mov
call
mov
mov
and
mov
mov
add
mov
mov
xorl
xor
andl
xor
addl
mov
andl
call
or
adc
or
mov
mov
or
cmpl
jg
add
xor
xor
mov
sub
add
jmp
pushl
push
push
call
mov
cmpl
jb
add
jmp
pushl
push
pushl
pushl
push
push
call
xor
imul
and
add
mov
lea
mov
movl
movl
movl
movl
movl
movl
movl
movl
mov
add
mov
or
add
mov
imul
xor
add
mov
and
sub
mov
sub
mov
sub
mov
xor
and
mov
mov
add
lea
mov
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
imul
add
xor
mov
lea
mov
imul
mov
sub
imul
mov
xor
div
mov
and
mov
sub
mov
add
mov
xor
mov
imul
or
add
xor
mov
mov
add
add
mov
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
and
add
or
mov
sub
xor
add
mov
and
mov
or
mov
sub
mov
mov
imul
imul
sub
xor
mov
mov
add
add
mov
andl
jmp
mov
inc
mov
mov
mov
cmp
je
mov
mov
mov
add
mov
mov
mov
mov
mov
movl
movl
movl
movl
lea
mov
mov
movzwl
xor
movzwl
sar
mov
movzwl
xor
movzwl
shl
or
movzwl
mov
mov
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
movzbl
push
lea
push
call
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
add
mov
mov
cmp
je
mov
mov
movzwl
xor
movzwl
sar
mov
mov
movzwl
xor
movzwl
shl
or
movzwl
mov
mov
mov
movzwl
xor
movzwl
sar
mov
mov
movzwl
xor
movzwl
shl
or
mov
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
mov
or
je
lea
mov
mov
xor
mov
call
mov
mov
mov
xor
mov
call
or
or
xor
xor
mov
mov
mov
mov
movsbl
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
movsbl
cmp
je
mov
movsbl
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
movsbl
cmp
je
jmp
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
movsbl
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
movsbl
cmp
jne
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
add
mov
jmp
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
mov
cmpl
je
mov
mov
movzwl
mov
mov
mov
jmp
jmp
cmpl
jne
xor
jmp
mov
add
mov
movl
cmpl
je
cmpl
je
mov
shl
mov
movl
sub
mov
movl
mov
cmp
je
mov
mov
mov
mov
mov
mov
mov
inc
mov
jmp
movl
push
jmp
mov
mov
ret
push
pushl
pop
or
mov
push
mov
notl
or
jne
not
mov
xor
mov
or
xor
xorl
div
mov
movzwl
and
mov
notl
div
not
mov
movl
jmp
mov
or
mov
sub
mov
andl
mov
shr
movl
rcr
shr
movl
rcr
adcl
or
jne
div
mov
mull
mov
mov
mul
add
jb
cmp
ja
jb
cmp
jbe
dec
xor
mov
pop
pop
ret
addl
subl
movl
cmpl
je
negl
add
movl
mov
mov
movl
pop
pop
pop
leave
ret
movl
cmp
movl
jae
movl
cmp
movl
jae
shld
shl
ret
mov
andl
xor
and
shl
ret
xor
xor
ret
