push
mov
sub
push
add
push
adc
push
adc
xor
sbb
mov
adc
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
call
jmp
xor
push
mov
pop
push
call
push
andl
push
push
push
push
xorl
push
sbbl
call
push
addl
push
push
push
sbbl
push
push
push
incl
call
addl
dec
movl
jne
push
sbbl
push
push
andl
call
test
je
mov
adc
imul
mov
mov
movl
mov
movl
cmp
jne
addl
movl
pushl
subl
pushl
andl
pushl
xorl
call
mov
mov
or
mov
xor
mov
mov
sub
movl
lea
xor
mov
lea
mov
addl
mov
mov
adc
mov
mov
add
mov
mov
xor
mov
xor
mov
adcl
add
movl
mov
mov
movl
cmp
movl
jne
mov
mov
mov
xor
add
mov
xor
mov
movzbl
and
mov
mov
movl
cmpl
je
cmpl
jne
push
push
push
call
xor
xor
dec
mov
jmp
mov
or
mov
xor
add
or
mov
mov
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
push
pushl
call
jmp
mov
xor
or
adc
mov
xor
xor
mov
sbb
mov
xor
mov
mov
mov
sub
mov
orl
mov
movl
add
mov
xor
add
mov
add
mov
andl
mov
adcl
xor
xor
sbbl
add
movzbl
and
mov
xor
lea
cmp
ja
or
mov
mov
xor
mov
sbbl
xor
andl
lea
subl
push
sbb
mov
xorl
xor
lea
orl
push
movl
cmpl
je
cmpl
jne
pushl
pushl
push
call
mov
dec
mov
jmp
mov
andl
pushl
call
mov
sbb
mov
andl
mov
inc
mov
cmpl
jne
pushl
push
pushl
pushl
call
cmpl
jb
xor
lea
mov
mov
decl
xor
xor
sbbl
add
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
push
push
call
jmp
movzbl
sub
mov
mov
xorl
xor
lea
mov
cmp
movl
jbe
add
mov
add
mov
mov
mov
andl
mov
inc
mov
cmpl
jne
pushl
push
push
call
cmpl
jb
mov
adc
mov
mov
xor
mov
sub
andl
xor
mov
not
mov
movl
cmp
movl
jne
addl
lea
andl
mov
lea
addl
mov
mov
xorl
test
movl
je
adc
mov
mov
mov
sub
mov
mov
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
jmp
and
mov
andl
mov
inc
mov
cmpl
jne
push
pushl
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
movl
cmpl
je
cmpl
jne
push
push
call
cmpl
jne
xor
add
dec
mov
mov
dec
mov
jmp
adc
mov
andl
jmp
xor
add
inc
mov
cmpl
jae
cmpl
jne
pushl
push
call
jmp
sub
cltd
mov
mov
mov
or
add
mov
adc
andl
subl
xor
xor
mov
mov
movl
cmpl
je
cmpl
jne
pushl
push
push
push
pushl
push
call
mov
dec
mov
jmp
not
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
call
cmpl
jne
mov
inc
mov
jmp
mov
xor
negl
add
mov
mov
movl
adcl
xor
addl
mov
mov
xor
movl
mov
cmp
movl
jne
mov
mov
cmp
movl
je
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
jmp
mov
negl
mov
movl
mov
andl
xor
add
movl
adc
andl
xor
addl
xor
movl
cmp
movl
jne
cmp
jne
mov
addl
mov
andl
xor
movl
cmpl
je
cmpl
jne
push
push
call
mov
dec
mov
jmp
addl
mov
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
push
push
call
jmp
adc
mov
xorl
add
movl
jmp
movl
mov
movl
cmp
je
mov
mov
orl
xor
add
cmp
je
movl
cmpl
je
cmpl
jne
push
pushl
pushl
pushl
call
cmpl
jne
mov
dec
mov
xor
add
dec
mov
jmp
mov
movl
mov
mov
mov
adcl
pushl
addl
mov
pushl
addl
add
movl
cmpl
je
cmpl
jne
push
pushl
pushl
call
cmpl
jne
mov
dec
mov
xor
or
dec
mov
jmp
add
mov
mov
orl
pushl
call
mov
mov
movl
mov
movl
jmp
adc
mov
sub
mov
andl
xor
subl
add
cmp
jne
add
mov
movzwl
sbb
mov
adcl
mov
xor
sbbl
add
cmp
movl
jne
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
push
pushl
pushl
call
cmpl
jne
mov
inc
mov
jmp
xor
mov
andl
push
xor
movl
add
xorl
push
xorl
push
andl
pushl
adcl
pushl
sbbl
call
add
mov
mov
sub
mov
or
mov
sub
mov
adc
mov
xor
mov
sub
add
adc
mov
movl
cmpl
je
cmpl
jne
push
push
push
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
andl
mov
inc
mov
cmpl
jne
pushl
push
push
call
cmpl
jb
incl
mov
mov
mov
mov
mov
mov
mov
sbb
movl
mov
xor
decl
add
mov
sbb
mov
mov
or
mov
mov
and
mov
mov
push
sbb
pop
orl
sub
add
xorl
movl
mov
mov
mov
mov
mov
mov
mov
xor
add
mov
lea
mov
mov
xor
add
mov
lea
push
mov
xor
add
push
mov
push
pushl
call
mov
mov
mov
mov
xor
mov
add
jmp
lea
mov
mov
sub
mov
mov
mov
mov
mov
mov
movl
mov
xor
add
mov
mov
xor
add
mov
movl
movl
mov
mov
xor
add
cmp
je
mov
xor
mov
sub
add
mov
mov
xor
add
imul
cmp
ja
mov
mov
mov
sub
xor
xor
add
div
mov
mov
mov
xor
add
cmp
jbe
mov
xor
add
mov
mov
mov
xor
add
imul
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
add
movl
mov
mov
mov
movl
movl
mov
mov
xor
add
jmp
movl
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
xor
add
add
imul
add
mov
mov
mov
cmp
jb
mov
mov
xor
add
imul
mov
xor
add
or
mov
xor
add
mov
xor
add
mov
lea
jmp
mov
mov
xor
lea
mov
jmp
mov
mov
xor
mov
lea
lea
xor
cmp
jne
mov
xor
mov
mov
mov
mov
xor
mov
xor
mov
mov
mov
xor
mov
mov
mov
xor
add
mov
mov
xor
add
mov
lea
mov
lea
mov
mov
test
je
mov
movl
movl
movl
movl
mov
mov
mov
andl
mov
movl
mov
mov
xor
mov
orl
mov
mov
xor
mov
addl
mov
mov
xor
mov
addl
mov
mov
xor
mov
addl
mov
mov
xor
mov
mov
mov
xor
add
xor
mov
mov
mov
sub
mov
addl
mov
movzbl
movzbl
sub
mov
movzbl
xor
mov
mov
xor
add
mov
lea
mov
lea
mov
lea
mov
lea
mov
mov
xor
add
push
mov
xor
add
push
mov
xor
add
push
lea
push
pushl
pushl
call
test
je
lea
push
mov
xor
add
push
mov
add
push
mov
mov
pushl
call
mov
lea
mov
mov
mov
mov
mov
test
je
lea
mov
mov
mov
mov
mov
mov
mov
sub
mov
xor
mov
sub
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
pushl
xor
sub
mov
mov
pushl
pushl
pushl
pushl
pushl
pushl
pushl
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
cltd
mov
mov
add
adc
andl
xor
mov
mov
mov
mov
xor
add
mov
adcl
xor
mov
mov
xor
mov
cmp
jne
mov
cmp
je
mov
mov
mov
xor
add
adc
xor
xor
cmp
jne
cmp
jne
mov
mov
xor
mov
mov
mov
add
mov
mov
mov
xor
mov
add
xor
add
adc
xor
xor
xor
add
adc
xor
xor
cmp
jne
cmp
jne
mov
mov
mov
push
add
push
lea
push
call
mov
mov
pop
pop
pop
leave
ret
push
mov
movl
movl
pop
jmp
xor
inc
ret
push
mov
push
movl
movl
mov
addl
mov
add
xor
cmp
movl
jne
add
mov
andl
jmp
xor
xor
inc
mov
cmpl
jae
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
jmp
mov
add
mov
mov
mov
xor
push
mov
mov
add
cmp
pop
je
mov
jmp
mov
xor
add
jmp
mov
xor
add
leave
ret
push
mov
sub
xorl
push
adcl
push
addl
push
push
andl
lea
push
push
adcl
call
push
call
sub
movl
xorl
movl
mov
mov
xor
mov
xorl
add
mov
sbb
mov
test
je
mov
mov
orl
mov
movl
cmpl
je
cmpl
jne
push
push
push
call
mov
dec
mov
jmp
mov
sbb
imul
andl
mov
inc
mov
cmpl
jne
push
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
movl
add
movzbl
and
xchg
sbb
mov
movl
sub
mov
xor
movl
cmpl
je
cmpl
jne
push
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
mov
adc
add
mov
sub
mov
sub
xor
add
mov
sub
mov
mov
xor
xor
add
add
mov
movzbl
sbb
mov
mov
adc
xor
xor
add
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
push
push
pushl
pushl
call
cmpl
jne
mov
inc
mov
jmp
movl
cmpl
je
cmpl
jne
push
call
mov
dec
mov
jmp
andl
mov
inc
mov
cmpl
jne
push
call
cmpl
jb
or
mov
orl
sub
addl
lea
xor
andl
xor
movl
cmp
movl
je
sub
mov
xorl
xor
adcl
add
cmp
jne
orl
pushl
call
movl
cmpl
je
cmpl
jne
push
pushl
call
xor
or
dec
mov
jmp
sbb
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
push
push
call
cmpl
jne
mov
inc
mov
jmp
mov
subl
mov
inc
xor
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
pushl
pushl
pushl
call
cmpl
jne
mov
inc
mov
jmp
mov
sbbl
add
cmp
movl
je
adcl
pushl
addl
pushl
negl
call
mov
xor
mov
add
mov
subl
xor
subl
add
cmp
je
or
mov
mov
adc
mov
mov
mov
mov
and
mov
andl
mov
inc
mov
cmpl
jne
push
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
mov
add
mov
mov
mov
add
mov
mov
mov
add
mov
mov
jmp
mov
mov
add
mov
mov
mov
xor
add
cmp
je
jmp
mov
mov
xor
add
cmp
je
mov
mov
xor
add
cmp
je
lea
push
pushl
pushl
call
mov
mov
mov
xor
add
cmp
je
mov
movzwl
mov
mov
mov
jmp
mov
xor
lea
jmp
mov
xor
add
jmp
mov
jmp
or
xchg
xchg
pushf
cmp
jl
jl
pop
jl
adc
and
imul
xor
fsubp
push
dec
imul
bound
iret
pop
dec
and
dec
jg
jb
jg
movsb
cmp
ljmp
cld
push
jg
in
cmp
mov
mov
mulps
fldl
lock
sub
dec
push
sub
mov
test
jmp
lret
sbb
jp
arpl
lcall
xor
cmpb
jae
fsubrl
push
jecxz
mov
mov
out
push
dec
push
and
cmp
lods
dec
int3
cmpsl
xor
push
pop
std
push
pop
movsl
stc
push
cli
inc
sbb
mov
orb
stos
push
mov
mov
mov
mov
jmp
js
push
lcall
pop
repz
sbb
sbb
jo
and
push
sarb
jb
xor
outsb
int3
jp
mov
insb
addb
aam
outsb
lock
bound
xor
or
fwait
rcrl
imul
imul
or
sbb
mov
out
jnp
sub
int
cmc
cmpsl
add
xchg
mov
mov
inc
jo
inc
cs
sbb
xor
cmc
pop
sbb
insb
pushf
dec
jb
icebp
jl
cmp
rolb
xchg
dec
and
aad
dec
loopne
test
mov
pmulhuw
fnstsw
cmp
jae
xor
fs
cmp
daa
pop
enter
ds
or
cmp
bound
rcll
jne
add
add
cli
cmp
stos
or
pop
ret
sbb
dec
mov
into
int3
xchg
jne
insl
mov
stos
xchg
cli
inc
scas
dec
mov
mov
cmpb
cmp
int3
loop
xchg
jg
clc
or
test
repz
negl
popa
pushf
add
sub
cmp
push
mov
call
in
push
jle
aas
lret
std
into
xchg
sbb
cmp
and
scas
or
enter
mov
add
add
cmc
lock
lods
iret
cmc
fstps
mov
test
lret
add
sbb
aam
divb
in
jmp
cli
in
shlb
cmpsl
sub
mov
push
dec
adc
adc
xchg
fdivrs
lahf
pop
out
jmp
sbb
pop
lods
adc
lret
shll
xlat
in
inc
or
test
xor
addr16
dec
xor
fistpll
in
mov
jmp
bound
pop
sbb
je
push
pop
push
shrl
adc
jp
mov
ffree
gs
lea
test
dec
mov
in
shrl
xchg
scas
js
xchg
jmp
add
mov
outsl
insl
or
in
ss
jne
or
mov
loope
jne
js
mov
ret
int
scas
mov
jge
clc
stc
pop
jae
aaa
test
call
in
jne
pop
outsb
cmc
adcb
and
aaa
jle
sbb
outsl
imul
scas
test
movsb
inc
sub
rcrb
ja
jecxz
xchg
outsl
lea
sub
fisubrs
hlt
pop
out
push
cmpb
into
mov
js
sti
inc
aam
sbb
jp
lcall
cmp
sar
outsb
faddp
jne
mov
mov
sbb
cmp
jmp
cmp
sti
es
sbb
xor
sub
or
adc
ss
in
lock
and
pusha
xor
and
sub
jne
imul
push
mov
cmp
mov
in
lods
sbb
xor
inc
mov
test
div
int3
loop
sarl
or
dec
mov
add
cmp
and
mov
cmp
mov
fs
nop
xchg
popf
mov
jg
xchg
cmp
fs
xchg
jge
cmp
add
push
bound
sub
into
inc
enter
mov
test
scas
scas
test
adc
xor
xchg
roll
leave
jg
push
leave
or
mov
pop
and
mov
push
xor
and
mov
xchg
out
inc
test
out
inc
int
dec
xor
cwtl
loope
cs
enter
out
sbb
shrb
lret
or
les
and
push
stos
fcomps
mov
cmp
jne
cmp
mov
dec
aaa
dec
imul
stos
jmp
mov
fs
xchg
lret
mov
sub
sub
inc
mov
outsb
out
adc
xor
pushw
pop
addr16
pop
pop
scas
inc
xchg
test
push
fmuls
ret
in
popf
pop
jns
and
or
loopne
dec
sbb
scas
or
cmpsb
adc
jnp
xor
frstor
rol
mov
cmp
add
sti
or
repz
jle
scas
mov
pusha
mov
ret
push
inc
push
cmp
xor
jo
adc
enter
pop
pop
cwtl
jp
push
mov
sub
popf
cmp
sarl
test
ss
dec
and
test
insb
sub
push
mov
mov
xchg
leave
xchg
jb
pop
jne
inc
add
daa
enter
pop
dec
std
gs
inc
jp
or
cmpb
lods
dec
insl
test
rcl
add
sub
mov
dec
lcall
shr
pusha
jecxz
xchg
inc
jo
jmp
mov
adc
sub
dec
scas
lods
fidivl
ror
mov
and
call
loopne
in
cwtl
jbe
xchg
loop
gs
or
inc
das
mov
scas
neg
ret
jae
xor
and
mov
xchg
pop
aad
int3
repnz
test
xchg
or
sub
int
dec
dec
xchg
and
bound
jb
into
insl
push
cmp
cmovbe
xchg
pop
xchg
lods
mov
jnp
or
in
inc
xorl
cwtl
sub
lahf
out
fistpl
rorb
or
test
les
sub
mov
movsb
es
mov
mov
inc
adc
mov
dec
fcmove
push
loop
sbb
mov
sub
sbb
das
ret
aaa
aaa
xchg
adc
mov
addr16
test
xor
mov
ficompl
push
test
mov
lcall
xrelease
ss
lret
ss
xor
in
jae
rolb
mov
sahf
fsubrp
pop
xchg
jns
addb
sbb
stc
mov
pushf
ret
mov
mov
cmpl
fdiv
inc
jns
lock
lds
add
cs
insb
pop
sub
nop
mov
inc
sub
push
adc
enter
sbb
loopne
adc
mov
in
mov
adc
fsubrs
sub
mov
icebp
mov
mov
xorb
fisubrs
mov
out
or
loop,pn
push
push
test
cmp
or
sub
mov
xchg
pusha
xchg
cld
out
ret
jns
lret
or
cmp
xor
movsb
inc
adc
fisttpll
mov
hlt
sti
mov
pop
lahf
cmp
pop
mov
pushf
add
loop
sbb
out
mov
mov
andb
outsl
push
inc
dec
mov
mov
into
rcrb
aas
scas
imul
xor
loop
sub
sbbb
pop
shl
xchg
cli
lahf
fs
nop
clc
xor
scas
jae
inc
or
push
int3
int
and
xchg
clc
push
daa
insl
cmp
xlat
and
mov
and
lods
mov
insb
jno
xchg
xchg
xor
stos
sub
xor
sub
daa
lret
mov
or
fucom
mov
push
nop
or
out
cwtl
and
lds
es
decb
mov
pop
jge
int
insl
sub
push
jg
add
sub
je
outsl
nop
aam
in
mov
mov
lock
xchg
add
mov
dec
mov
mov
test
cmp
or
std
jl
leave
adc
dec
mov
and
sti
add
sbb
es
inc
lret
cmp
or
cs
lods
dec
int
ret
pop
pop
leave
mov
push
icebp
dec
and
pop
lea
es
add
or
and
add
daa
cs
std
call
xchg
mov
push
jle
int
dec
sub
xor
shr
push
cmp
sub
cmp
fbstp
ret
xchg
mov
push
sub
flds
mov
fmulp
fcoml
outsb
dec
js
lds
scas
fnstsw
pop
repnz
pop
aam
mov
test
dec
icebp
add
shll
mov
sub
mov
mov
mov
dec
popf
std
icebp
cwtl
in
xchg
imull
fdivrs
fwait
pusha
push
sub
aam
cld
lret
popf
orb
arpl
push
les
pusha
add
xor
mov
inc
add
aaa
js
xor
cmp
outsb
mov
insb
into
xchg
jo
sub
out
xchg
stc
out
imul
xchg
jno
push
fsts
inc
push
or
adc
test
inc
aam
jae
cltd
jge
mov
stos
mov
lock
das
mov
addr16
lcall
pop
ret
mov
clc
fcmovbe
mov
adc
repz
lahf
inc
lock
sbb
imulb
inc
xor
cltd
loopne
mov
das
inc
rcll
adcl
pop
jl
jmp
xlat
push
xor
dec
sbb
cwtl
lcall
call
cmpsl
fbstp
sbb
repnz
das
dec
ret
push
fstpl
lods
dec
fists
scas
mov
fxch
sbb
sub
fs
ror
popf
sahf
xor
fcomp
lahf
inc
mov
fs
icebp
pop
inc
push
pop
stc
jnp
sti
sub
xor
or
shrb
lret
roll
or
fisubs
sbb
fsts
add
cvtps2pd
sbb
daa
jmp
stos
push
mov
dec
in
mov
pop
add
repnz
imul
aas
jae
add
addr16
inc
rclb
mov
popa
lahf
leave
xor
xchg
xchg
jecxz
in
jmp
xchg
or
xor
pop
pop
dec
sbb
movsb
ret
push
mull
push
jno
mov
jg
inc
mov
or
out
lcall
leave
adc
lea
lods
fidivs
pop
inc
mov
inc
dec
mov
pop
ret
mov
shl
sbb
lcall
mov
mov
loope
and
pop
shl
xor
popa
subl
in
in
and
mov
lcall
sbb
imul
stc
out
mov
test
dec
push
scas
cmp
mov
xlat
andl
mov
cltd
push
xchg
shll
cmpsl
push
dec
pop
shl
xchg
push
test
adc
jmp
sub
push
mov
lods
je
scas
xor
mov
sbb
loope
xor
imul
fsubr
popf
jno
mov
mov
fbld
shrb
push
inc
cmp
pop
pop
cmp
cmp
scas
mov
adc
add
stc
pop
jb
jno
lods
xor
call
ret
fimuls
scas
out
push
jmp
xor
mov
xchg
das
cmpl
fimull
jmp
inc
dec
test
jge
das
xor
inc
cli
add
stc
cltd
in
mov
stos
sbbb
mov
aam
andps
scas
dec
pop
jnp
popf
sarb
xor
in
push
in
cmp
in
mov
loope
test
cmp
ret
loopne
sub
outsb
loope
push
sbb
test
add
jmp
bound
cmpb
dec
es
scas
pop
scas
cmp
or
lcall
inc
cli
pop
sub
mov
lock
sbb
stos
mov
xchg
mov
push
and
das
shl
gs
pop
mov
stc
imul
pop
inc
jp
xchg
mov
jno
testl
xchg
popf
xor
push
jp
jl
icebp
mov
dec
add
push
fcomp
cmp
adc
xor
in
dec
rcrb
pop
stos
jno
ljmp
nop
iret
rcr
das
add
icebp
out
sbb
jae
inc
or
sub
pop
in
out
sub
cs
fisttpl
mov
jecxz
inc
aam
mov
push
aam
push
gs
arpl
js
iret
xchg
push
sarb
push
inc
push
lods
frstor
pop
or
add
fisttpl
cmc
xor
subl
pushf
add
jl
pop
test
push
mov
pop
inc
add
enter
hlt
mov
inc
mov
daa
nop
push
cmc
cmp
js
or
jo
pop
subb
sub
loopne
sub
cmpsl
jp
mov
iret
je
cmp
xchg
stos
imul
enter
mov
outsb
cmc
pop
ljmp
addr16
push
das
enter
inc
pop
stos
outsb
insl
popa
lret
xchg
sbbl
pop
scas
push
dec
add
bound
pop
pop
rorb
out
lods
into
popa
jp
jo
sbbb
and
pop
inc
pop
inc
in
pop
jmp
bnd
or
adc
lds
mov
and
xor
mov
roll
out
jno
fistl
aas
mov
pop
movsb
sti
and
cmpsl
mov
adc
xlat
adc
mov
and
jle
xchg
call
sub
orl
orl
add
jmp
pusha
push
int3
sub
pop
or
pop
fwait
out
xchg
andb
mov
in
shrb
orb
test
lret
insb
pop
mov
incl
mov
mov
mov
push
lea
inc
xor
in
rorb
shll
dec
add
je
inc
or
imul
inc
cmp
ds
pop
push
test
mov
aaa
pusha
dec
mov
jb
sbb
add
push
and
js
push
pop
ljmp
sbb
jp
fildl
xlat
leave
sahf
out
push
add
loope
mov
pop
mov
into
and
pop
cld
cmpsl
dec
mov
divb
ss
inc
cmp
cli
lods
push
push
jae
dec
xchg
or
cld
out
jne
adc
xlat
adcb
dec
sahf
ss
sbb
mov
fdivl
mov
xchg
cmc
cmc
add
test
or
ja
mov
sbb
push
push
testl
adc
jl
mov
cmp
enter
test
mov
dec
movsb
lret
imul
out
xchg
xchg
jae
mov
pop
iret
loopne
xor
add
adc
lret
or
rcrl
cmpb
roll
dec
repnz
repz
fmuls
cli
and
in
sarl
mov
sbb
add
sbb
in
int
jg
rcl
pop
sahf
nop
sbb
push
and
js
cmp
js
aam
xor
dec
test
addb
aam
sub
ret
jle
cmp
jns
push
js
dec
xor
fwait
pop
mov
dec
jns,pt
mov
or
js
xlat
cmpsb
js
push
or
leavew
push
test
jno
fsubrp
fsubl
push
mov
outsl
cmpsb
daa
pop
mov
aad
xor
xchg
rorb
mov
daa
dec
repnz
scas
loope
dec
or
ss
cmpsl
dec
nop
mov
test
out
push
xor
lods
sub
xor
jne
mov
mov
roll
stc
jns
outsl
aaa
call
stc
push
add
stos
and
das
xchg
add
in
loopne
aas
push
mov
jo
mov
cli
or
pop
lcall
add
int
inc
stc
dec
add
inc
test
add
sbb
xor
push
es
fs
icebp
lahf
fdivrs
mov
adc
mov
stos
cmp
xchg
fcoms
dec
shl
add
jp
jecxz
mov
scas
jp
cld
pop
fstpt
mov
cmpl
stos
mov
outsl
fst
adc
inc
movsb
pop
int3
dec
cwtl
and
jnp
fs
xor
mov
pop
lret
les
inc
test
orb
add
pop
lcall
movl
adc
mov
scas
aas
in
gs
push
xchg
outsl
sbb
sti
in
ja
test
in
push
add
lock
xor
sarl
mov
xor
xchg
mov
pop
int
and
jo
xlat
lock
movsl
xchg
loope
out
cmp
lcall
dec
xor
je
fwait
dec
divb
sbb
sbb
movsl
cmpsb
mov
invd
xlat
scas
hlt
xor
adc
cmp
xlat
lret
dec
adc
xor
and
xchg
inc
mull
lcall
insb
in
popa
or
dec
and
data16
fldenv
dec
mov
xchg
sbb
cmp
sbb
add
sti
enter
cld
sarb
jne
aaa
sti
std
mov
stos
mov
cs
sbb
push
push
popf
dec
jmp
popf
imul
add
in
mov
sbb
pushf
outsb
dec
push
scas
sbb
xchg
ret
fwait
mov
loop,pt
out
cmp
stos
xor
mov
cmc
mov
jle
or
mov
pop
xchg
repnz
daa
adc
and
mov
je,pt
adc
pop
mov
lret
inc
iret
inc
cs
xor
pop
jmp
shll
mov
sbb
xor
add
mov
fdivrs
out
scas
cmp
mov
push
loopne
lods
add
inc
cmp
lods
cli
andl
mov
push
mov
mov
fldenv
sub
sub
push
pop
popf
mov
fwait
pop
ljmp
insl
or
cld
data16
push
push
outsl
inc
dec
inc
push
jnp
clc
in
lock
mov
xor
xchg
adc
insl
jno
adc
stos
inc
popl
mov
cltd
testb
xchg
mov
cmpsb
dec
pop
mov
mov
daa
testb
mov
les
jno
mov
and
add
or
test
ljmp
jb
sbb
mov
cmpsb
mov
add
inc
dec
mov
mov
outsb
repnz
mov
cmp
adc
lea
mov
test
and
or
push
jle
cmp
es
add
jl
pop
aam
push
stos
ficoml
xchg
push
xchg
stos
fisttpl
jmp
stc
arpl
in
in
ss
mov
pop
shrb
jecxz
stc
outsb
out
clc
cmc
in
scas
mov
fisttpl
mov
mov
fst
js
cwtl
mov
fs
mov
cmp
int
xchg
jns
sub
test
mov
imul
sbb
aaa
mov
lock
sahf
dec
cmpl
gs
imul
and
mov
fiaddl
imul
sti
div
fwait
pop
fstl
mov
loop
outsb
pop
daa
pop
daa
popf
aas
jg
inc
cld
pop
ds
repz
mov
clc
push
std
sub
scas
loopne
add
stos
dec
pop
out
inc
add
jbe
enter
jle
adc
outsb
and
or
push
rcr
push
jge
pop
inc
aaa
adc
inc
movsl
test
cmp
adc
lret
iret
mov
push
stos
adc
xlat
adc
insb
arpl
dec
fcmovb
or
mov
out
xchg
sub
test
fs
outsl
jno
test
xlat
imul
fbld
sub
pop
aas
in
pop
popa
lahf
fmull
cs
and
jle
sbb
and
fidivrs
aam
lock
jnp
pop
ret
ss
mov
rcrb
xchg
inc
jbe
jg
cmpsb
ficoms
sarb
jp
cmp
adc
pop
inc
shlb
je
in
popf
xor
into
sbb
test
in
sbb
cmp
mov
dec
and
add
stc
icebp
mov
jecxz
imul
inc
xchg
xchg
orl
push
fcmovu
sub
aas
dec
sub
test
das
pop
in
jo
add
add
pop
mov
repnz
insb
dec
cmp
into
pop
orl
loope
fnstsw
notl
cltd
out
scas
aas
shrb
mov
dec
inc
stc
sahf
icebp
fcompl
fiaddl
gs
and
xchg
jg
int
jge
testb
sub
out
popf
dec
cld
les
mov
cld
sbb
test
mov
cmp
int
int
push
sub
dec
cli
outsb
jb
sub
sbb
sbb
cli
in
in
mov
fdivp
stos
sub
sahf
or
jo
and
das
push
or
sbb
jle
push
or
xchg
push
push
call
imul
xchg
sahf
dec
int
pop
ret
pop
stc
lods
imul
into
lock
cmpsl
imul
inc
repnz
pusha
shrb
cmc
gs
mov
mov
jns
lods
mov
adc
iret
aaa
xchg
fisttpll
lock
cmp
fcomps
xor
cwtl
or
fidivrs
stc
fnstcw
jnp
or
mov
movsb
mov
xlat
sub
aad
test
adc
test
pop
popa
nop
sbb
mov
sub
and
push
loopne
sub
mov
inc
pop
jg
and
scas
mov
jmp
pop
pop
imul
incl
arpl
test
movsl
cmp
cld
mov
and
imul
xor
add
cmp
or
shlb
or
cmp
insb
jge
xor
outsl
pop
mov
mov
mov
fcoms
jnp
xor
or
repnz
mov
scas
leave
push
jne
pop
cmpsl
test
or
repz
cmp
xchg
inc
jo
push
out
test
mov
adc
xchg
mov
int3
cmpsb
push
shrb
call
daa
cmp
sti
ja
mov
xor
or
adc
loop
pop
mov
push
sbb
lcall
lea
shl
js
daa
push
sbb
fcomps
stc
outsl
pop
mov
hlt
inc
inc
pop
not
outsl
sub
sbb
call
jbe
cmp
decb
repz
jecxz
cltd
iret
and
addl
xchg
cmp
mov
fistl
and
mov
sbb
and
cmpsb
sbb
jnp
sbb
cmp
incb
sub
add
push
mov
lcall
shll
les
leave
icebp
data16
push
fcoml
jb
xlat
push
clc
stc
xchg
sti
aam
popa
mov
mov
xchg
xor
push
mov
jg
xchg
daa
cmp
lds
cmp
scas
sarl
hlt
sub
xchg
lock
imul
adc
enter
sub
sbb
push
pop
insl
aas
pop
jne
sub
movsl
push
dec
jge
jo
dec
lea
cs
push
jne
mov
sub
into
in
push
push
xchg
sub
pop
outsb
sub
stc
outsb
xchg
dec
pop
inc
rcrb
xchg
stos
adc
xchg
icebp
into
mov
inc
outsb
sub
ror
push
jns
lret
fcmovnb
outsl
adc
fdivl
or
lret
xchg
lds
xor
out
xchg
dec
lea
adc
mov
aad
cmp
push
cltd
in
popf
not
mov
cmc
xchg
inc
cltd
std
cmp
stos
fisttpll
lds
inc
push
push
pop
mov
sbb
cwtl
inc
mull
inc
jnp
stos
mov
repz
push
cltd
jmp
fldenv
sbb
xor
mov
add
add
loopne
into
pop
jne
or
mov
dec
inc
or
dec
and
and
div
push
mov
ja
ja
ret
and
repz
mov
imul
sahf
imul
ljmp
fnsave
or
dec
push
sar
cmp
jl
lcall
add
adcl
aam
cwtl
inc
dec
lock
inc
cmpsl
mov
push
loope
push
and
in
dec
js
ds
mov
xchg
loop
mov
test
push
jbe
int
out
lods
push
inc
sub
ds
pop
into
sub
mov
cmc
icebp
add
dec
xor
aaa
mov
mov
xor
pop
jecxz
mov
mov
fldenv
gs
fldenv
jo
pop
lahf
mov
mov
inc
mov
nop
sbb
ret
mov
scas
mov
push
mov
jmp
loop
inc
sub
mov
xor
cmc
pop
rol
add
int3
and
aam
add
rorl
add
dec
push
lods
cs
loop
and
dec
popf
pop
xor
in
push
clc
outsl
add
addb
fstpl
jae
aam
push
outsb
sysexit
jmp
mov
loope
fisubl
fidivrs
into
out
dec
pusha
ja
out
scas
jp
adc
mov
push
scas
outsl
xchg
in
mov
in
mov
push
into
repnz
cmp
or
fcmovb
cmpsl
insl
sbb
adc
insl
out
scas
ror
cld
fildl
loope
daa
sub
mov
addr16
lods
sbb
push
adc
popa
outsl
xchg
push
xchg
sub
adcl
in
mov
xchg
xchg
fsubrl
insb
add
push
mov
dec
cmpsb
loop
mov
adc
inc
jl
pop
dec
int3
outsb
pop
aaa
andl
daa
push
sbb
or
in
xor
push
mov
int3
lret
popf
xchg
jp
cmp
and
push
subb
outsb
add
pop
leave
push
mov
stos
insb
inc
pop
andl
aam
aam
shrl
push
pop
daa
fld
ret
jb
sub
xorb
rcll
in
sbb
and
jle
jno
int
ljmp
pop
push
pusha
cmp
test
lock
cmp
mov
mov
xchg
adc
leave
stc
and
mov
sbb
test
mov
stos
in
stos
xor
out
lret
in
movsb
into
push
cmp
push
adc
dec
sub
sahf
test
xchg
inc
icebp
in
movsb
rclb
in
jg
mov
or
fs
stc
or
fiaddl
adc
sub
call
shlb
mov
daa
lret
xlat
pop
test
xchg
jae
sbb
imul
ja
cwtl
xor
out
imul
and
test
je
pushf
mov
sbbl
add
ja
push
or
adc
pop
dec
mov
push
mov
cmp
addr16
jmp
ret
mov
mov
repnz
cltd
fwait
mov
push
outsb
outsb
dec
popf
dec
lods
add
mov
js
jbe
sbb
add
inc
cmp
mov
test
mov
pop
out
mov
scas
lret
adc
pop
xor
ljmp
and
and
iret
frstor
xchg
cltd
aas
mov
xor
lock
sar
xrelease
inc
jne
out
rclb
cmpl
pop
push
jmp
shl
test
movsb
fisubs
scas
jg
imul
and
repnz
mov
ss
addr16
lahf
xchg
xchg
xor
pop
mov
sahf
decb
ljmp
lds
lea
push
sti
lds
dec
loopne
cmp
insb
xor
popf
xor
push
mov
mov
mov
push
ja
jae
mov
nop
push
ds
mov
xchg
ret
in
sub
cmpsl
lds
jns
jmp
mov
push
mov
inc
adc
pusha
inc
adc
and
xchg
xchg
hlt
mov
mov
les
sbb
xchg
cli
sub
mov
cmp
popf
add
out
sub
clc
out
repz
or
cwtl
sbb
and
std
bound
push
xchg
inc
dec
or
clc
pushf
pop
insl
lcall
mov
xor
and
xor
test
push
xor
popf
pop
pop
xchg
insl
dec
in
xlat
mov
gs
mov
std
das
add
or
sbb
repz
fistps
xorb
add
out
orl
and
sbb
pop
adc
mov
fs
sub
inc
pop
jnp
mov
popf
ret
inc
or
mov
adc
cld
pop
dec
jmp
nop
xchg
sbb
push
cmp
lahf
mov
mov
push
adc
cmp
sub
mov
pop
push
adc
shl
bound
testl
xchg
xor
xchg
fiadds
mov
sub
cltd
in
hlt
xchg
mov
add
cmp
lcall
shll
dec
xor
push
sarl
cmp
movsb
test
fsubrs
push
mov
sbb
mov
pusha
fcomps
adc
inc
xchg
movsl
test
pushf
out
stc
adc
call
icebp
sahf
je
lds
js
add
xchg
adc
repnz
subb
jp
mov
addr16
pop
and
das
mov
out
mov
js
xor
xor
or
lods
lahf
lock
dec
xchg
test
subb
or
ds
dec
mov
mov
cli
les
mov
std
mov
dec
mov
sahf
push
xchg
add
mov
cmc
push
fsubrs
ss
int3
jnp
dec
and
outsl
sarb
insb
loopne
mov
js
in
xchg
add
ja
xor
pop
shrl
out
ffreep
push
mov
sub
push
int3
xor
mov
inc
dec
dec
aam
roll
lret
in
mov
mov
js
sub
adc
jns
inc
add
xor
mov
sub
add
popl
shl
cmp
fisubl
daa
dec
push
xor
cs
ret
push
inc
jne
andb
inc
scas
or
lcall
insb
frstor
inc
or
int3
mov
mov
push
cltd
arpl
push
dec
sub
push
call
ret
push
inc
dec
fwait
int3
into
pop
pushf
xchg
dec
ror
pop
sub
mov
mov
inc
adc
rcll
jmp
bound
dec
lss
pop
fidivl
sbb
decl
mov
add
repz
mov
mov
mov
mov
test
sahf
dec
js
cld
cmpsl
fldenv
lds
out
or
adc
sbb
jns
mov
ret
add
jmp
mov
add
mov
mov
test
je
movl
push
xor
pop
add
push
pop
push
dec
pop
dec
xchg
sub
xchg
dec
mov
imul
sub
mov
mov
mov
xor
mov
add
mov
mov
xor
add
mov
imul
mov
xor
mov
lea
cmp
je
mov
mov
mov
mov
mov
xor
xor
mov
add
div
mov
xor
lea
mov
mov
mov
mov
mov
xor
lea
mov
mov
mov
xor
add
imul
mov
xor
mov
lea
cmp
jne
mov
jmp
mov
mov
mov
xor
add
mov
mov
add
xchg
xor
push
mov
pop
mov
add
lea
add
add
push
inc
pop
dec
xchg
dec
xchg
dec
xchg
dec
push
mov
pop
dec
call
cmp
je
xchg
push
pop
push
pop
inc
xchg
sub
xchg
dec
dec
mov
imul
add
xchg
push
xor
mov
dec
inc
add
dec
xor
add
pop
mov
pop
pop
pop
leave
ret
push
mov
sub
andl
mov
inc
mov
cmpl
jne
pushl
push
pushl
pushl
call
cmpl
jne
xor
or
inc
mov
cmpl
jb
and
movl
xor
or
mov
and
lea
mov
push
adc
mov
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
push
push
call
cmpl
jne
xor
add
inc
mov
jmp
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
push
call
cmpl
jne
xor
or
inc
mov
jmp
movl
cmpl
je
cmpl
jne
push
call
mov
dec
mov
jmp
adc
lea
mov
or
mov
and
mov
mov
xor
add
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
push
call
cmpl
jne
mov
inc
mov
jmp
and
mov
mov
addl
mov
add
sbbl
push
xor
mov
mov
movzbl
sub
mov
mov
adc
xor
mov
addl
add
movl
cmp
je
mov
movl
jmp
mov
movl
cmp
movl
jne
push
jmp
mov
movzwl
mov
cmp
jne
mov
incl
xor
add
mov
adcl
mov
mov
xor
sbbl
add
imul
and
mov
andl
xor
add
cmp
movzbl
mov
push
movl
je
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
call
cmpl
jne
mov
inc
mov
jmp
mov
add
mov
mov
xor
add
imul
mov
jmp
mov
xor
mov
mov
xor
mov
mov
sub
add
mov
mov
add
mov
mov
mov
xor
xor
lea
mov
xor
add
imul
mov
xor
sub
mov
add
cmp
mov
mov
jg
xor
mov
sub
add
jmp
xor
add
add
mov
mov
mov
jmp
imul
stos
sbb
push
shl
pop
jl
dec
pop
jl
push
std
cmp
fistpl
in
xor
xchg
data16
cli
jg
xor
ret
adc
test
aaa
xlat
dec
idiv
add
fs
add
adc
pop
pop
test
sub
adc
lock
cmp
orb
push
xchg
jg
cmp
inc
shlb
icebp
imul
les
xor
mov
movsl
in
ficoml
or
int
insl
cmp
push
and
dec
popa
jle
ss
popf
mov
fsubrs
shrl
push
test
fiaddl
push
clc
out
pop
lahf
and
lods
repnz
es
js
mov
or
icebp
mov
pop
and
jle
add
test
das
and
iret
icebp
data16
jne
adc
jge
iret
cltd
fidivl
iret
test
push
out
rol
cltd
cmpsl
cld
imul
pop
fwait
sub
xchg
jg
or
cli
or
push
pop
adc
cwtl
add
or
std
mov
mov
or
jbe
scas
add
test
lods
adc
xor
loope
shlb
mov
add
test
cld
pop
mov
jl
mulb
iret
mov
arpl
stc
lods
adc
jne
dec
mov
notb
push
addb
jmp
add
and
add
lods
xchg
iret
pop
mov
xor
xchg
iret
pop
int3
ds
and
cltd
xlat
sbb
cmp
sub
mov
or
xchg
lret
and
jecxz
je
sbb
das
iret
pop
mov
dec
and
xchg
dec
into
cmc
ret
dec
sub
mov
cld
push
mov
pop
cmp
sbb
into
sub
pop
insl
jno
stos
lods
in
add
adc
loopne
dec
in
out
add
pop
popf
inc
das
mov
mov
xchg
inc
stos
in
or
movsb
js
ja
inc
mov
in
lret
pop
pop
push
mov
aaa
and
pop
fistpl
pop
shlb
adc
lods
lret
mov
daa
in
rcrl
int3
add
inc
adc
cmp
jnp
mov
mov
mov
push
imul
ja
mov
dec
int3
into
add
pop
into
pusha
repz
xor
sub
stc
push
xchg
mov
pop
shr
cmpsb
cmp
jbe
mov
push
jnp
add
cmp
gs
mov
jg
in
push
mov
jecxz
or
popa
push
pushf
rolb
mov
mov
loop
les
gs
sub
dec
push
mov
jno
jmp
xor
mov
outsb
sbb
mov
dec
inc
pop
addr16
insb
enter
sahf
fistps
inc
sbb
mov
aam
jb
addr16
fdivrs
and
push
add
sub
aad
js
test
or
jnp
mov
fidivs
rcrl
xchg
je
add
pop
lds
or
daa
xor
arpl
out
push
pop
jno
add
lock
pop
aaa
sbb
test
sbb
aad
movsl
sub
inc
push
insl
cmpsl
mov
push
mov
mov
xchg
dec
outsb
test
outsl
arpl
setl
dec
imul
dec
icebp
mov
and
sti
lea
stos
sahf
les
ret
and
pop
ret
pop
adcb
mov
scas
cld
out
cmp
mov
shlb
mov
sbb
mov
rorb
bound
iret
ret
cld
xchg
rcrl
inc
das
in
inc
flds
repz
add
cmp
ljmp
call
test
jecxz
dec
cs
loope
cmpsl
jnp
je
mov
scas
mov
movsl
bnd
pop
orb
or
cmp
nop
and
mov
push
fimull
adc
in
addl
dec
mov
imul
pop
imul
sub
inc
loope
and
push
outsb
lahf
shrb
stc
lock
andl
imul
add
in
sbb
or
out
iret
mov
lahf
dec
movsl
sbb
cmpsl
lods
sub
and
sahf
sub
jp
and
push
push
push
lret
and
pop
mov
xchg
sahf
dec
push
and
cmpsl
dec
jae
in
cld
shrb
out
pop
mov
mov
xchg
mov
call
std
lea
repnz
rcrl
and
inc
js
aad
push
leave
and
push
dec
pop
sbb
push
shl
daa
pop
sub
cmc
xchg
setl
dec
inc
in
jle
mov
xlat
dec
orb
or
xchg
dec
repnz
test
shrl
aad
jae
mov
and
jo
mov
jl
lock
xchg
xchg
push
jb
xorl
addr16
mov
aaa
out
inc
jle
lock
imul
dec
adc
mov
or
jnp
or
xor
imul
mov
xor
fnstsw
cwtd
popa
mov
mov
xchg
jl
lea
lret
ss
pushf
xchg
cmc
mov
fs
sbb
out
inc
sub
pushf
outsb
dec
xor
shll
cmp
stc
bound
adc
mov
test
push
enter
add
outsl
enter
andb
sbb
leave
cltd
xchg
mov
in
sti
stc
out
jmp
sbb
and
test
pop
mov
mov
jo
femms
sub
pop
xor
push
xchg
outsb
add
sahf
xor
mov
inc
testb
seta
sbb
pop
iret
and
push
jle
xor
std
adc
jmp
push
outsb
and
jb
lret
jbe
adc
dec
jns
arpl
jb
shll
insb
lea
aam
mov
ds
xor
xchg
xchg
xchg
in
push
xor
in
cmp
stos
or
mov
xor
pop
rcr
test
and
arpl
das
test
jb
push
adc
popa
fmuls
je
xchg
mov
lods
andps
or
or
rclb
movb
xchg
mov
push
adc
add
mov
in
pop
dec
loopne
fistpll
stc
pusha
test
jae
pop
les
pop
mov
imul
adc
pop
in
leave
test
aas
lahf
mov
negl
repz
inc
ja
mov
pop
shlb
stos
push
in
inc
test
pop
adc
pop
iret
fstps
add
push
mov
stc
jns
lock
lods
cmp
inc
fs
daa
inc
adc
outsl
orl
fdivr
add
dec
in
ror
adc
inc
arpl
sub
push
xchg
and
or
fcmovnu
fstpt
fs
and
iret
cmp
call
in
jo
pop
ds
mov
sub
add
mov
sbb
loop
dec
mov
mov
jnp
test
mov
ss
sti
dec
movsl
cmp
mov
loopne
adc
test
mov
xchg
jmp
jae
les
jge
sarl
mov
mov
sub
sti
cmp
cmpsl
fdivr
xchg
dec
fisttpll
mov
fcoml
xor
or
mov
hlt
xor
rorb
sti
mov
lcall
xchg
repnz
push
inc
or
gs
into
ja
xchg
xlat
xor
mov
or
popa
pop
mov
and
icebp
scas
or
mov
pop
and
and
insb
stos
xchg
popa
or
dec
xchg
jae
call
mov
cmpxchg
nop
inc
arpl
jno
jbe
rcrb
jp
js
cmp
mov
imul
mov
dec
cmc
scas
hlt
test
fnstcw
cmpsb
sub
fstl
jmp
add
dec
or
callw
sub
jo
orl
leave
addr16
and
test
or
daa
lret
std
dec
pop
fdivl
mov
mov
jo
mov
lods
inc
stc
arpl
add
or
push
xor
clc
clc
or
and
mov
fcoms
pop
fs
jbe
ljmp
int3
lods
jae
mov
cli
call
iret
mov
mov
dec
aad
sub
test
outsl
fildl
popf
sbb
addps
adc
fcoms
into
cmp
loope
or
orb
or
dec
lahf
add
icebp
jne
cmp
pop
dec
loope
jl
cmp
pop
xchg
cli
loop
mov
icebp
adc
pop
push
add
subb
outsl
jl
or
jecxz
mov
mov
loop
cmp
sti
jp
lcall
arpl
fildll
aad
shll
add
push
and
mov
or
inc
mov
mov
jns
dec
add
jnp
shll
mov
fwait
rolb
enter
inc
fidivrl
jns
jl
outsw
jmp
cltd
repnz
aam
outsl
mov
shl
fucomip
push
cmpsb
sub
sbb
subb
push
pushf
dec
cli
push
je
cmp
push
jne
pop
xchg
dec
in
aaa
mov
xchg
outsb
mov
add
pop
shrb
mov
mov
es
jno
mov
mov
into
popa
fdivs
jl
jnp
ret
push
xor
fs
adc
dec
inc
push
inc
lcall
data16
jne
pop
aam
cli
pop
gs
inc
jp
mov
int
bound
inc
and
mov
mov
xchg
and
xor
loope
mov
test
mov
cmpsb
mov
pop
data16
xchg
das
or
dec
xor
inc
sbb
das
cmc
push
add
ljmp
adc
ljmp
lret
hlt
decb
lcall
fdivrs
push
nop
push
subl
jmp
out
fbstp
or
adc
sti
jae
test
cmp
and
jmp
mov
pop
enter
sti
mov
xchg
stos
cmc
xlat
jne
cmp
sub
inc
test
jo
pop
popa
cmp
xchg
cmp
in
mov
or
push
mov
es
xchg
cs
cmc
ret
daa
push
inc
aas
and
xchg
incb
pushf
cmp
aaa
loop
dec
imul
imul
rorb
nop
les
js
int
sub
mov
pop
sahf
pop
mov
push
gs
sarb
js
cwtl
popf
sub
xor
ja
fnstsw
test
sub
ja
mov
hlt
cmp
push
xchg
inc
mov
adc
lods
in
subb
ja
pop
sbb
push
popa
gs
mov
scas
sbb
xor
ljmp
cli
dec
mov
push
sbb
sbb
into
xchg
loop
xor
and
pop
mov
xchg
or
mov
sbb
pop
push
mov
mov
ljmp
inc
xor
inc
cmp
xor
and
jno
xchg
push
mov
repnz
sbb
movsl
lret
addr16
fsubl
and
popf
int
mov
jbe
push
push
jne
push
nop
loop
cmp
push
mov
mov
mov
pop
insb
in
test
cmp
sbb
fsub
jmp
adc
pusha
out
adcl
dec
rcrb
repnz
and
lods
imulb
or
adc
xchg
sbb
lea
cmp
ror
mov
and
adc
xor
fstl
adc
in
sub
lock
pop
outsl
adc
outsb
xchg
xor
pop
in
inc
adc
daa
mov
push
dec
dec
aas
enter
ja,pt
mov
xor
nop
mov
movsb
inc
cld
cmpsb
xor
stos
add
jb
orl
mov
inc
dec
adc
mov
pop
pop
pop
sub
aaa
push
pop
adc
test
cmp
enter
ja
not
xchg
add
cmpsl
inc
filds
sub
mov
repz
subl
decb
movups
ds
call
ficoms
repnz
testl
lcall
xor
sub
sahf
cmp
add
and
push
pop
jae
in
jns
mov
test
xlat
and
lcall
out
shr
or
mov
mov
mov
ss
ja
adc
je
das
fisttpll
cmc
aaa
mov
stos
and
mov
lock
icebp
sti
mov
lds
imul
jle
dec
bound
in
xchg
adc
xchg
ja
das
push
sub
jb
adc
repz
pusha
shr
mov
dec
repz
or
fisttpll
fisubs
out
adc
in
jle
mov
jbe
addr16
popf
lret
out
inc
sub
xor
and
divl
mov
aam
or
sbb
xchg
mov
or
mov
jg
jmp
insb
jg
cmpsl
sti
cmpsl
or
dec
inc
sbb
loopne
pop
mov
lods
mov
insb
adc
daa
popa
and
mov
push
lahf
in
mov
imul
inc
fsts
int3
mov
jmp
push
outsl
adc
pop
fadds
sub
push
shl
test
fdivrp
jae
push
out
add
out
cli
push
out
mov
cmp
lret
mov
xchg
ljmp
jae
popf
lahf
ror
sub
or
push
inc
fisttpll
outsb
lods
aam
arpl
popa
mov
fists
push
push
aas
mov
addb
and
into
outsb
in
mov
les
add
add
test
and
mov
mov
mov
mov
std
ret
mov
cmp
notl
push
add
lcall
cmp
xor
push
les
mov
das
cmc
xchg
inc
out
push
cwtl
cli
mov
xlat
sbb
push
not
lock
cmc
ljmp
jno
xor
into
ja
fisttpl
fldl
dec
mov
push
pop
shrl
inc
dec
stos
call
xchg
cmpsb
mov
add
cld
mov
in
ss
int
jbe
out
and
sub
cli
push
jecxz
inc
idivl
out
lods
mov
outsl
dec
insb
sub
cmp
sbb
aaa
push
in
adc
idivl
mov
lret
inc
insl
fistpl
inc
and
sbbl
scas
pop
mov
xor
pop
sbb
faddl
jl
scas
push
cmp
dec
jmp
loopne
pop
mov
fcoms
mov
dec
movsl
mov
call
mov
mov
aam
mov
ficoml
loopne
popa
das
or
xor
or
cmp
xchg
mov
aam
xchg
inc
adc
es
rolb
or
pop
insb
mov
add
aam
std
pushf
sub
inc
pop
xchg
fbld
fwait
and
jecxz
sahf
outsl
push
jae
sbb
mov
mov
pop
dec
lret
test
push
xchg
fsubs
test
notb
out
jne
lret
sub
push
fnstsw
dec
mov
aaa
jge
cmc
cmp
cs
cmp
or
cli
jle
jmp
ficompl
sub
popa
pushf
cmpsl
testb
inc
adc
dec
inc
xor
inc
jnp
cs
or
push
loopne
xchg
jae
shlb
push
lods
fdivl
and
jne
mov
lea
leave
pop
add
idivl
sub
sub
mov
cmp
or
xchg
rcll
jae
mov
mov
or
fistl
adcl
or
jmp
stos
cmp
jo
cmpsb
loopne
or
mov
mov
jp
dec
rcll
addr16
mov
into
xor
xor
stos
iret
cmc
cwtl
mov
add
xor
mov
mov
movsb
sbb
loope
ja
xor
cmp
ds
rcll
jns
push
jo
xor
unpckhps
enter
xchg
in
js
jp
dec
or
je
xchg
add
add
jecxz
jae
dec
inc
mov
push
add
and
int
sub
idiv
and
xchg
test
cmp
mov
pop
fld
mov
fadd
jl
push
test
xchg
je
outsb
mov
jp
cmp
mov
out
mov
dec
je
inc
add
insl
jg
cli
pop
fidivs
sub
aad
add
test
mov
mov
pop
scas
je
jmp
jecxz
mov
cmp
cltd
mov
mov
mov
add
or
inc
dec
cmp
int
mov
push
repnz
movsb
sti
rcl
mov
popf
pop
jae
push
fstps
lds
test
ret
fisubl
movsb
mov
fmull
push
jns
in
push
lock
dec
cmp
mov
and
daa
lret
inc
or
inc
ss
shll
repz
fcoms
fisubrl
xlat
dec
jne
xchg
mov
mov
roll
loopne
mov
push
lea
aaa
dec
ficomps
inc
add
shrb
loope
xchg
movsl
cmp
cmp
xchg
hlt
mov
and
mov
mov
insb
mov
insl
ds
push
scas
dec
movsb
aas
lock
scas
nop
xchg
dec
lret
cmp
jge
lahf
enter
cmp
addr16
jae
xor
testb
aam
fwait
or
fnsave
xor
sbbb
cmp
mov
imul
jp
test
pop
mov
repz
cli
mov
test
lret
lcall
ret
xchg
add
rolb
jo
jnp
push
rorl
mov
push
and
xlat
leave
fstpl
iret
cmp
or
or
test
aad
daa
out
fnstcw
xchg
adc
adc
sbb
mov
in
scas
jne
adc
testb
pop
cmpsb
mov
xchg
sub
imul
jnp
shll
push
adc
fisttpll
fcompl
or
or
cmp
xchg
loop
mov
rorb
jnp
xor
add
pop
mov
aam
insl
cli
cmp
and
xor
xor
fcoms
jecxz
mov
repnz
push
outsb
push
cmpsl
adc
leave
fisttpl
and
cmp
push
addl
pop
dec
push
cmp
loope
dec
sbb
popa
mov
divb
inc
mov
movsb
pop
push
mov
mov
inc
push
int3
cmp
dec
jecxz
movb
inc
xchg
add
add
xchg
idiv
cmp
pop
dec
add
mov
dec
pop
sbb
cmc
mov
aas
add
js
or
movsl
out
cmc
mov
jbe
stos
inc
mov
jo
in
ds
push
mov
enter
repnz
inc
jl
pop
xor
pop
sub
imul
inc
dec
inc
sbb
roll
sub
sti
xchg
aaa
xchg
mov
jbe
ret
out
mov
xor
jg
xchg
popa
xlat
and
pop
xor
inc
fidivrl
sbb
sbbb
jae
pop
pop
inc
push
inc
in
xchg
out
jmp
in
repnz
and
or
cli
dec
popa
pop
in
dec
fcoms
and
sahf
sbb
or
cmp
xor
notl
out
je
or
sbb
jbe
jae
shlb
aad
xchg
mov
into
out
xor
in
dec
or
imulb
and
lods
pop
nop
adc
add
dec
fwait
dec
add
cmp
lret
push
sub
and
cs
mov
cmp
jne
jge
push
mov
dec
mov
jb
or
imul
popa
pop
ret
mov
inc
ljmp
sub
push
mov
sub
arpl
pop
lahf
and
dec
insl
mov
ds
and
dec
inc
cmp
and
jae
jle
xor
lret
notl
aam
inc
jo
imul
xchg
lea
xchg
out
sbb
pop
loopne
push
imulb
aam
or
jne
pop
hlt
fldlg2
jg
sti
push
popa
jmp
jmp
ret
pop
push
ja
mov
push
lahf
pop
mulb
cld
mov
test
and
adc
xlat
cli
xchg
sbb
pop
fsubr
sbb
sub
inc
adc
cmp
ja
pop
cmpl
aas
jne
clc
je
inc
mov
or
ret
cmp
mov
decl
xchg
add
xor
fstl
out
push
fdivl
insl
cli
xchg
mov
clc
adc
push
add
and
loopne
lcall
jo
mov
out
and
fs
xchg
push
out
mov
pop
mov
daa
test
inc
dec
ja
xchg
fcoml
jae
pop
mov
arpl
imul
stos
sub
dec
leave
fcmovnbe
gs
xor
mov
push
mov
push
out
leave
clc
fiadds
std
sbb
sahf
adc
lahf
movsb
pop
call
fs
xor
loope
je
insb
jl
arpl
adc
mov
out
fnstenv
test
fists
leave
dec
clc
mov
adc
orb
mov
sub
jnp
or
push
fbstp
sbb
push
mov
xchg
arpl
insl
mov
push
push
and
adc
cmp
xor
hlt
fcoms
popf
icebp
lock
adc
add
pop
pop
mull
inc
inc
lcall
aad
rclb
fadd
mov
adc
test
mov
shl
dec
cmp
and
stos
shrb
xchg
scas
add
fsubr
add
enter
fcomps
ds
aad
push
jmp
pop
push
and
cmp
sarb
xlat
xorl
mov
outsl
data16
mov
imul
pop
or
adc
imul
pop
mov
mov
sub
lods
pop
clc
inc
scas
and
push
mov
in
sbb
ja
mov
inc
jp
pop
dec
roll
pop
and
push
sbb
lcall
jle
inc
test
inc
push
out
stc
sbb
and
das
out
insb
ja
out
and
movsl
sub
cmpsl
xor
adc
orl
xchg
data16
fsubrl
lods
nop
inc
lods
xchg
insb
cld
cmp
inc
mov
push
xchg
jmp
fidivs
dec
jae
xchg
sbbl
dec
jecxz
out
mov
cli
sub
xor
xchg
mov
cmpsl
lock
lahf
xchg
into
jno
int
inc
jns
and
or
int
and
add
lds
mov
jl
add
ds
xor
in
xor
out
lods
sahf
loope
fiadds
cmp
cld
adc
or
cmp
push
arpl
iret
fwait
xlat
mov
pushf
pop
jge
sbb
mov
cmpl
stos
dec
icebp
mov
cmp
aad
adc
aam
sahf
mov
enter
and
test
xchg
js
push
adc
xorb
pop
mov
shlb
loope
rol
adc
cli
cmpsb
fistpll
mov
dec
jg
jl
imul
mov
xchg
mov
shrl
mov
ljmp
fs
push
mov
inc
cmp
pop
movsb
add
add
lds
add
popf
dec
test
mov
add
dec
inc
pop
sub
out
jl
xchg
fists
pushf
xchg
xor
push
push
dec
fisubl
mov
jmp
mov
ja
xchg
je
mov
xor
pop
push
shlb
sbb
loope
inc
inc
fistpl
fcoml
jg
test
mov
pop
shrl
shl
loope
insl
es
jbe
icebp
test
fmull
stc
adc
or
in
pop
popa
pop
dec
or
jl
lods
ljmp
jecxz
jo
xchg
mov
jne
lret
jb
dec
fdivs
sbb
cmp
outsl
jb
or
out
stos
push
push
jne
mull
rorb
sub
sbb
sbb
mov
roll
push
pop
xor
mov
pusha
mov
add
test
popa
dec
add
cmp
adc
inc
pop
adc
cltd
add
dec
cmpsb
mov
lret
dec
nop
lods
or
sar
rolb
orl
int
loope
dec
push
and
stos
push
rcrl
or
mov
jge
pop
icebp
cmpsb
out
push
enter
xor
push
fmul
cmp
xor
push
icebp
xor
bound
cwtl
mov
jmp
imul
push
sub
dec
icebp
mov
roll
filds
call
push
dec
repz
mov
cli
jae
pop
and
xchg
movsb
dec
mov
mov
in
push
xor
mov
ljmp
out
or
ficoms
mov
ss
push
loop
cs
jle
adc
xchg
jo
and
sub
das
cmp
test
sub
mov
cmpsl
add
jecxz
aas
mov
sbb
ss
sub
sub
sub
movsb
mov
in
aam
loope
aad
mov
jo
lahf
adc
std
lds
adc
iret
mov
mov
je
sub
jg
xlat
scas
lods
outsb
pop
adc
xor
push
mov
cmp
push
aad
in
popf
pop
mov
push
out
push
dec
xchg
add
mov
gs
lock
cmc
inc
lcall
movsb
or
cmpsl
cmpsb
pop
pop
push
pop
dec
outsb
cwtl
sub
push
adc
push
adc
sub
mov
inc
ljmp
shl
pop
xchg
ss
test
movb
popa
pop
xor
mov
ds
in
int
push
ja
jo
fxch
mov
scas
loop
pop
addb
shrb
xor
xchg
jno
xchg
xchg
out
inc
push
inc
in
arpl
pushf
push
stos
jo
xchg
dec
cwtl
pusha
rcrb
call
add
pop
sub
leave
sub
inc
test
outsb
lcall
mov
pop
mov
add
aaa
loopne
int3
arpl
lahf
das
push
clc
rorl
outsl
adc
pop
sbb
aad
cltd
in
mov
loopne
loop
idivl
jle
jo
outsb
loopne
dec
movsl
mov
cwtl
mov
bound
jbe
inc
in
push
mov
pop
rorb
xchg
hlt
push
mov
popf
push
aad
mov
js
clc
dec
ja
adc
loopne
stc
sbb
jmp
inc
data16
lahf
add
jbe
pop
es
adc
or
mov
sub
lret
aaa
add
and
push
or
xchg
pinsrw
cmc
loop
inc
orb
add
hlt
nop
mov
mov
adc
arpl
cmp
sbb
and
lcall
stc
inc
bound
les
adc
ret
inc
scas
cmp
in
fcomip
enter
es
enter
int3
adc
ret
in
and
cltd
fimull
cmp
mov
cmp
cmp
arpl
jnp
pop
es
mov
inc
movsb
dec
push
insb
lcall
and
les
daa
fisttpll
or
jecxz
repnz
and
push
push
adcl
in
mov
jmp
sarb
out
push
test
add
jge
xor
out
sahf
popa
ljmp
push
xchg
adc
xchg
mov
mov
push
xor
lcall
dec
push
lds
pop
push
add
jo
jecxz
divl
cmp
jp
pop
notb
xor
jmp
push
push
insl
jp
outsb
lahf
icebp
cmp
inc
int3
push
mov
pop
add
xlat
mov
cmp
loop
maxps
jns
add
cltd
rcll
inc
adc
or
and
pop
adc
push
mov
push
outsb
adc
iret
push
mov
mov
mov
and
out
in
pop
js
push
lock
and
stc
mov
loope
dec
test
out
or
pop
test
mov
out
jbe
call
push
fwait
and
mov
pop
stos
sar
lcall
in
jmp
test
mov
push
fimuls
loop
mov
jno
pop
jnp
mov
aam
std
lods
adc
call
mov
or
notb
mov
dec
push
jle
add
mov
mov
daa
pushw
std
mov
mov
arpl
repz
cmp
pop
push
sbb
hlt
fcomp
xor
inc
jbe
outsl
sub
ds
insb
nop
jmp
vmovupd
mov
pop
test
sahf
addl
push
inc
outsl
fiadds
or
test
add
ljmp
lret
testl
jns
cmp
test
lahf
push
mulps
push
loope
fs
jmp
pop
fsubl
mov
cmpsl
pop
es
movsl
test
clc
ret
push
and
inc
daa
ss
loop
xor
lret
mov
ds
lret
pop
aaa
adc
cwtl
cli
push
mov
add
mov
jg
jp
lret
cwtl
das
arpl
out
sbb
lds
mov
dec
subl
outsl
into
fcomps
lods
in
lret
dec
sti
dec
sbb
push
jp
imul
pushf
pop
xchg
jae
pop
xlat
jbe
insl
jle
push
cwtl
int3
aad
daa
movsb
sub
cmp
mov
push
jl
and
mov
xchg
sbb
or
sahf
lods
xor
lret
xchg
sub
and
mov
xor
ja
sbb
hlt
nop
adc
xcrypt-cfb
cmpsl
mov
nop
sbb
cmc
pop
mov
in
or
lret
std
sub
scas
cmp
and
bound
lea
iret
lcall
enter
out
rcr
test
test
shl
pushf
inc
jnp
inc
mov
lahf
in
int3
bound
push
insb
or
js
inc
arpl
cmp
and
ja
jns
cmp
pop
mov
cmp
adc
ffreep
lea
testb
stc
add
frstor
jae
or
shll
mov
inc
push
filds
jl
stc
mov
mov
jns
add
adc
xlat
outsl
mov
pop
pop
inc
sub
nop
mov
jb
sub
mov
cmpsl
xorl
pushf
adc
fadds
jmp
sbb
inc
inc
push
and
out
cmp
lods
es
jp
and
loop
cmp
scas
cmpsl
jns
dec
mulb
or
or
insl
aaa
std
jb
push
xor
jmp
in
int
arpl
push
insb
scas
cmp
lods
into
pop
and
cld
sti
mov
dec
pop
cli
std
loope
cmp
inc
fcmovne
stc
out
xor
fwait
aad
mov
stos
pop
xchg
mov
xchg
out
bswap
into
jg
dec
mov
add
add
xlat
and
movsbw
mov
sub
mov
xor
mov
cmp
jne
movsbw
mov
sub
mov
xor
mov
cmp
je
mov
xor
mov
sub
add
jmp
mov
mov
mov
lea
mov
mov
mov
xor
add
mov
mov
mov
xor
add
pop
cmp
jne
mov
xor
mov
add
imul
mov
pushl
jmp
mov
add
mov
mov
mov
movsbw
mov
sub
mov
xor
mov
cmp
jne
mov
mov
mov
jmp
mov
cmp
jne
push
pushl
pushl
pushl
pushl
call
pop
pop
leave
ret
push
mov
push
movl
andl
mov
mov
mov
xor
add
mov
movzwl
and
mov
mov
sbbl
xor
adc
push
sub
mov
movzwl
sbb
mov
negl
add
xorl
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
pop
leave
ret
push
mov
push
andl
xor
add
inc
mov
cmpl
jne
pushl
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
sbb
push
movl
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
push
push
push
push
call
jmp
and
movl
movl
cmpl
je
cmpl
jne
push
call
cmpl
jne
xor
add
dec
mov
mov
dec
mov
jmp
mov
push
mov
mov
xor
xor
mov
add
add
imul
mov
jmp
mov
in
xor
mov
adc
and
pop
jl
mov
sbb
push
movsl
out
mov
out
mov
lods
cltd
adc
mov
fidivrs
insb
cli
roll
movsl
and
outsb
xor
pop
enter
push
jl
enter
in
push
xchg
in
outsl
sub
bound
mov
cmp
jb
push
pop
adc
mov
push
movsb
iret
lea
iret
subb
int
push
fmuls
xchg
sub
imul
loope
pop
inc
push
xor
jl
lods
dec
adc
mov
push
xchg
sub
jne
in
fwait
cmp
mov
jbe
sahf
out
push
xchg
in
inc
mov
dec
jg
jns
push
adc
test
jmp
and
adc
jmp
les
cwtl
inc
add
sbb
outsb
pop
dec
addr16
cmc
stc
mov
push
insl
insl
xchg
pop
cmp
mov
fidivl
inc
mov
outsl
sbb
aaa
test
movsl
jns
insl
ret
push
pop
lret
sbb
xchg
push
mov
sub
sub
add
add
stos
mov
jge
imul
xlat
lods
add
in
repnz
movsb
outsl
mov
add
mov
mov
jmp
inc
dec
mov
mov
cmpsl
dec
jbe
ror
add
repnz
int3
mov
sub
leave
pop
mov
cltd
dec
fstl
stos
pop
in
leave
sbbb
pushf
jl
mov
leave
fsub
push
push
add
gs
jns
decb
enter
inc
jns
lahf
hlt
insl
mov
inc
cltd
mov
xlat
mov
fnstsw
jge
in
hlt
mov
mov
sbb
in
iret
push
pop
jbe
sbb
or
push
movsl
add
or
jp
movsl
xchg
aam
pop
pop
call
sahf
mov
mov
inc
cmp
cmpsl
ljmp
mov
dec
cltd
test
mov
xchg
adc
mov
sbb
adc
outsl
insb
jge
lcall
stc
cmc
clc
in
mov
lea
mov
or
dec
mov
inc
cmc
dec
xor
mov
imul
mov
add
fdivs
out
or
rcll
inc
cmc
shrb
xor
aad
and
inc
movsl
testb
xchg
ljmp
xchg
and
mov
outsl
daa
cli
nop
loopne
testb
and
out
sbb
pusha
mov
jg
fwait
add
jg
popf
addr16
xchg
add
rolb
mov
dec
sbb
xor
mov
lods
fisubrl
mov
aas
lea
fs
mov
test
imul
adc
mov
pop
xor
pop
push
jg
jg
xor
nop
cli
dec
mov
shrl
xchg
mov
and
aad
add
insb
vandps
sub
sti
cmp
inc
shr
out
and
rolb
loope
mov
jl
pop
sub
das
adc
jp
pop
xchg
mov
andl
jp
jecxz
jb
sub
xchg
out
add
inc
xor
popf
dec
dec
pop
adc
mov
sarb
push
mov
and
push
call
xchg
aas
cmp
in
add
out
out
sbbl
cmp
pop
push
mov
cmp
mov
mov
scas
adcb
xchg
mov
lret
out
jge
jno
std
mov
das
ljmp
jnp
lahf
sbb
das
fs
or
mov
and
sbb
sub
shrl
mov
dec
or
iret
popa
jmp
push
mov
xchg
or
and
inc
fnstenv
mov
cwtl
push
sbb
adc
mov
xchg
mov
into
xor
or
mov
shrb
shll
scas
into
add
sahf
fwait
nop
das
test
push
cmc
cmp
movsl
mov
cmp
inc
xor
dec
out
insl
or
dec
stos
dec
xlat
cmpsl
push
jg
mov
icebp
mov
ficomps
ds
sub
xor
out
xchg
fistpl
repnz
jmp
stos
test
mov
sbb
cmpsl
pop
mov
cmp
adcl
xor
fistps
jb
roll
sbb
jne
cmp
inc
arpl
popa
popf
in
pop
js
sub
rorl
sub
xchg
jl
cmp
jg
jge
pop
es
mov
pop
dec
pop
mov
pop
cld
std
xor
arpl
sub
aam
aam
insl
mov
xchg
js
pop
rolb
xchg
add
jne
pop
daa
cmp
cmpsb
add
mov
out
adc
inc
jns
xor
adc
adc
mov
into
sbb
cmp
push
fsubs
out
bound
dec
or
sub
push
or
adc
mov
popl
push
sub
mov
fadd
aaa
add
cltd
add
sbb
adc
or
inc
stos
dec
mov
test
mov
dec
add
hlt
inc
adc
dec
mov
call
test
pop
dec
ds
mov
std
xor
aaa
aad
mov
loop
sbb
jns
cltd
mov
push
push
mov
dec
shrb
fimuls
push
daa
loop
out
test
outsl
cs
sub
adc
dec
inc
ja
jp
mov
andl
xchg
push
pop
ss
add
js
cmpsb
mov
subb
loop
cltd
dec
iret
add
fisubl
inc
mov
dec
xchg
mov
lcall
in
js
xchg
cmp
pushf
cld
data16
insl
scas
xadd
pop
scas
add
andb
jmp
mov
mov
sub
or
popf
pop
div
in
xor
mov
push
fadd
xor
rcll
lret
adc
repnz
sub
inc
pop
shll
ja
je
cmp
mov
mov
in
mov
dec
jl
shlb
in
inc
and
mov
and
dec
cmp
stos
clc
jp
xchg
fmuls
add
adc
or
aad
push
adc
fiadds
mov
pushf
out
mov
movb
adc
add
xchg
outsb
cmp
mov
aad
push
jmp
add
mov
or
push
push
cmp
repz
inc
movsb
inc
add
in
out
push
clc
xchg
sub
addr16
stos
sub
or
add
sub
and
sarb
xchg
mov
xor
xor
and
sbb
leave
xchg
mov
mov
and
fcmovnb
xchg
dec
data16
push
pop
xor
mov
dec
cmpsb
popa
mov
push
lock
divl
xchg
insb
or
pop
addr16
ror
jp
inc
mov
jmp
in
or
and
cld
popa
cmp
sub
arpl
nop
cmp
pop
inc
mov
or
mov
add
sahf
imulb
pushf
cmpsl
sbb
clc
inc
rclb
mov
jae
mov
sbbb
mov
pop
sbb
push
inc
and
xchg
inc
mov
push
xchg
or
bound
test
adc
mov
ja
jmp
shrb
mov
or
cmc
cmp
xchg
ret
cltd
sti
addr16
outsb
add
aam
pop
push
dec
shll
sbb
sub
jmp
xchg
in
movsl
jg
rcll
popa
test
sub
loope
mov
inc
test
arpl
cmp
push
push
or
push
fiaddl
movsb
push
mov
inc
push
mov
imul
xchg
arpl
in
aam
adc
aam
cmc
pushl
mov
jmp
xchg
lret
adc
aad
les
js
push
mov
inc
dec
mov
loopne
mov
mov
mov
addl
sbb
add
push
sub
sbb
lret
lods
gs
sub
jmp
arpl
add
and
push
dec
lcall
orl
mov
cwtl
adc
cmp
or
jo
sti
dec
or
gs
enter
inc
stos
or
mov
cwtl
fmul
jnp
fnstenv
mov
iret
xchg
jle
fwait
mov
into
xchg
fnstsw
mov
test
std
lods
mov
out
lds
in
lea
in
je
test
add
scas
out
lahf
sub
dec
fdivrp
ja
ficompl
jae
movsl
cwtl
call
mov
xchg
dec
ret
xchg
aaa
dec
nop
aas
movsl
lods
mov
cmpsl
out
add
sti
cltd
cmp
jmp
lock
mov
inc
sub
mov
sbb
lds
aad
js
shrl
ja
aaa
mov
mov
leave
xor
jg
insl
lods
mov
orb
and
jno
mov
pop
jb
pusha
shll
dec
dec
mov
popa
jb
rolb
cmp
xchg
test
rolb
call
insl
sub
xor
lret
xor
push
jecxz
fcomps
ret
pusha
xchg
cs
movsb
jno
ds
mov
ja
cmp
jbe
and
mov
jnp
add
aaa
sub
lods
mov
pop
inc
rcrb
pop
rclb
ljmp
sbb
mov
enter
jnp
sbb
cmpsl
mov
sbb
mov
aam
pop
js
ljmp
inc
shr
pop
ja
mov
ja
xchg
cltd
mov
xchg
lret
mov
mov
mov
xor
movsb
cmp
push
es
mov
sbb
jmp
jl
ficomps
mov
inc
mov
adc
xor
jno
repz
add
add
mov
imul
jmp
dec
sbb
mov
adc
fldt
lahf
xchg
sbb
jmp
popl
xchg
out
cmc
pusha
cmpsb
sub
sub
cmpsl
xchg
mov
ljmp
test
subb
sbb
push
ja
fs
es
ret
test
ret
xchg
int
loop
rorl
inc
outsl
inc
sub
cwtl
lods
scas
popf
lods
jbe
xor
cmpsl
gs
mov
filds
iret
loop
scas
icebp
xor
inc
or
test
movsl
int
lcall
std
mov
push
lcall
loopne
jo
jmp
dec
lds
loope
jnp
dec
push
or
add
mov
shll
pop
daa
xchg
loopne
lret
xor
push
shlb
rcll
push
fnstcw
mov
cld
jns
mov
mov
popf
xor
adc
jae
inc
xchg
dec
test
or
mov
cmp
and
popa
push
sub
mov
dec
push
push
cmpsl
xor
lods
mov
cli
rcr
mov
mov
cld
jge
mov
xor
dec
dec
enter
cmp
clc
dec
dec
arpl
iret
push
or
lret
jge
push
jae
and
xor
sbb
cmp
adc
pop
loop
add
pop
out
out
popf
sbb
add
test
xchg
jae
xchg
xlat
roll
mov
sub
push
push
stos
movsb
js
and
xor
adc
mov
adc
jno
jbe
xor
or
or
push
adc
sub
insl
mov
xor
cwtl
stc
mov
dec
sbb
ss
push
add
mov
popa
aaa
push
jp
fldt
pop
push
xchg
xchg
mov
xor
cli
pop
int
cltd
repnz
repz
scas
test
fwait
sti
sub
inc
mov
cmpsb
not
xchg
cmp
cmp
hlt
cwtl
stc
jns
adc
js
xchg
sub
les
clc
lods
mov
xchg
xor
push
std
popa
cmpb
xchg
pop
sub
sub
xchg
jnp
shrb
imul
push
sub
out
mov
xchg
pop
test
push
sub
cld
inc
sysexit
mov
cmpl
push
pusha
ja
mov
xchg
jle
or
iret
je
mov
mov
inc
cmpsb
iret
sub
push
jl
mov
fs
sbbl
ss
rcrb
jecxz
and
ret
mov
xchg
push
fisubl
repz
stos
adc
push
loope
mov
fisttps
cmc
mov
into
dec
pusha
icebp
imul
inc
dec
jg
js
test
dec
test
mov
cmp
into
sti
cmp
jecxz
mov
leave
push
insb
jns
mov
aas
test
icebp
add
fbld
inc
cmp
arpl
pop
xchg
cmp
scas
stos
fbstp
inc
and
add
aad
mov
xchg
push
cwtl
cmp
test
dec
in
inc
mov
cmp
dec
into
ret
aaa
outsb
imull
int
jbe
adc
sub
xchg
sub
pushf
add
mov
into
jl
int3
mov
shrl
and
xchg
movsl
pop
pop
push
cmp
adc
movsl
es
not
icebp
xchg
mov
mov
stos
cmp
xor
into
notb
mov
fwait
cmc
mov
add
loopne
imul
ret
push
pop
xchg
xchg
mov
or
shlb
adc
push
inc
daa
loopne
xorl
arpl
xchg
dec
jle
cmp
xchg
jge
cmp
mov
addr16
and
iret
loopne
fwait
js
mov
and
cmp
dec
dec
sbb
sbb
in
jo
xchg
mov
dec
dec
and
insb
rol
xor
and
dec
sbb
and
dec
outsb
fildll
jp
inc
js
mov
pop
std
fisttpll
movsl
push
add
jo
jmp
shrb
arpl
ret
add
imul
dec
mov
hlt
xor
sub
rcrb
js
or
xlat
or
and
add
loopne
pop
jp
sarb
in
fnstenv
xor
out
push
push
mov
ds
rclb
popa
xchg
xlat
sbb
decb
cmc
je
push
mov
arpl
jnp
roll
inc
pop
imul
dec
int
mov
adc
clc
dec
adc
jo
test
push
xor
fiadds
fwait
mov
ds
loop
add
pop
jg
mov
xor
or
ret
cmp
or
dec
lret
lea
pop
aaa
pop
lods
loopne
leave
in
xlat
movsb
push
nop
inc
mov
sub
sub
clc
or
push
out
xchg
sbb
mov
test
inc
and
sarb
push
jns
mov
les
cmp
push
jge
mov
flds
lret
rorb
sub
fwait
sub
jns
add
dec
popa
xchg
xor
and
cli
mov
arpl
pop
out
inc
and
sub
cmp
shrb
mov
test
jmp
aad
hlt
add
and
jecxz
push
push
inc
mov
adc
cmpsl
mov
cmp
arpl
jne
and
lds
mov
jbe
add
pop
insl
imul
xor
jbe
lret
clc
ss
xchg
jns
xor
cld
ret
shll
sub
jae
and
xchg
pcmpgtb
mov
add
jecxz
jl
cmp
scas
add
outsb
jbe
jno
xchg
sarl
push
sahf
sub
or
cmp
xchg
mov
dec
scas
inc
sub
into
test
dec
out
daa
push
cld
add
sbb
or
mov
add
gs
lods
jbe
mov
pop
push
fidivl
scas
cmp
sub
out
mulb
inc
lods
pop
stos
fstpt
cmp
xchg
adc
mov
sbb
jae
aas
in
jge
test
cli
cwtl
fnstsw
adc
dec
out
mov
mov
inc
out
call
lea
mov
sahf
adc
dec
push
jmp
push
daa
test
mov
gs
loope
or
enter
mov
nop
in
or
je
jae
jl
dec
jae
dec
mov
out
int3
das
pusha
cmp
cmp
pop
or
fwait
and
inc
push
adc
or
fstp
pop
sub
cmp
int3
out
xchg
xor
sbb
mov
test
clc
cmpsb
in
cmp
hlt
jge
cld
movsb
mov
arpl
push
jecxz
rcrl
push
imul
and
pushf
adc
lret
cli
mov
mov
cmpsb
cmp
pop
mov
jg
call
in
inc
jecxz
adc
inc
adc
fsubs
xchg
jp
mov
sti
ret
mov
out
pusha
insb
add
inc
jecxz
jo
aaa
mov
es
inc
mov
bound
pop
xchg
subb
sub
popf
into
imul
sub
cltd
push
push
cwtl
iret
pusha
cmp
ficompl
mov
add
mov
add
test
mov
or
dec
int3
inc
jne
cs
jb
or
inc
mov
cmp
cmp
out
pop
rcrl
mov
aas
pop
inc
xlat
dec
cmp
inc
lcall
xor
mov
dec
popa
loopne
xchg
scas
push
cmpsb
sahf
push
scas
push
xlat
lahf
lcall
shrb
adc
pop
push
pop
xor
in
cwtl
dec
movsb
adc
inc
daa
xlat
sub
inc
andb
jl
jg
cmp
rol
cmp
cmp
push
mov
dec
les
out
test
rorb
inc
sub
fnstcw
out
add
lock
pop
push
test
xor
ret
ret
add
mov
daa
jo
icebp
pop
in
fld1
shl
rcrl
pop
jle
lock
movsl
jns
jle
xchg
stos
xor
sbb
xchg
outsb
in
es
nop
push
pop
jp
ret
mov
mov
rorl
insb
pop
jns
add
mov
xchg
sub
and
and
test
dec
pop
ja
int3
mov
pop
neg
jge
lret
ret
mov
cs
lds
into
push
test
cwtl
fnstenv
xor
pop
cli
clc
add
add
sub
int
or
das
mov
ret
mov
sbb
or
push
inc
lods
xchg
leave
outsb
int
adc
adc
xchg
jne
shlb
or
aad
test
pop
mov
movsl
or
mov
xchg
loopne
shlb
pop
ds
sar
and
pusha
stc
xchg
mov
pop
clc
cltd
jle
mov
inc
jnp
mov
adc
outsb
and
icebp
fwait
cmpl
clc
and
bnd
mov
pop
add
xor
stc
push
lcall
test
mov
mov
inc
lret
add
lods
lret
pusha
ljmp
push
mov
cld
jp
fstp
push
sti
and
inc
clc
cmp
mov
xorl
mov
jne
daa
add
shl
mov
and
jmp
sub
inc
idivl
icebp
enter
pop
jle
pop
sarb
xchg
lea
xor
gs
mov
mov
test
dec
add
push
scas
cmpsl
sbbb
sbb
aas
add
js
ss
in
cli
inc
mov
xor
rorl
cltd
xchg
decb
push
fnstenv
jp
pop
fdivrl
lcall
and
fistpll
dec
das
push
test
bound
js
aaa
rclb
xchg
cmpsb
mov
jp
sarb
hlt
and
jno
dec
cmp
cmpsb
mov
sbb
ret
je
lret
adc
and
mov
enter
cwtl
cmp
xchg
sub
sub
aaa
add
stos
push
bound
and
arpl
cs
xlat
mov
inc
mov
or
add
push
adc
mov
xchg
scas
mov
sub
orb
outsb
or
in
or
popa
pop
cmpsb
mov
jne
pushf
mov
loope
mov
insl
outsb
in
xchg
insl
out
int
cmpb
lahf
movb
dec
sbb
mov
cld
sub
pop
mov
xchg
cmpsb
nop
pop
mov
jae
mov
lret
test
lcall
push
mov
xchg
mov
mov
gs
fidivs
bound
sbb
cltd
rol
and
fwait
adc
sub
das
or
jne
aam
subl
mov
xor
into
and
stos
push
in
cltd
rorl
shlb
mov
repz
push
adc
mov
in
xchg
push
cld
dec
dec
push
push
mov
mov
popa
adc
daa
xor
ss
mov
pop
ds
int
push
stos
sub
lahf
mov
cli
scas
jg
adc
repz
cmp
push
inc
mov
ds
mov
jo
subl
xchg
ljmp
xchg
jg
xorl
cli
mov
add
and
outsb
pop
and
aad
adc
stos
jbe
and
xor
std
and
push
hlt
pop
ss
enter
jp
mov
cltd
jno
sub
dec
rcrl
or
cli
out
addr16
xorl
js
adc
insb
aam
outsl
stos
imul
mov
inc
movsl
add
mov
out
int3
ss
and
lds
pop
jo
lods
or
mov
push
push
ret
or
rorl
cltd
std
pop
jge
rorl
ljmp
clc
sti
jecxz
pop
gs
jnp
aas
pop
cwtl
xchg
lcall
outsb
lds
icebp
stc
lock
es
cmpsl
mov
or
ret
sbbl
pop
sub
fstl
outsl
fdivrl
popa
std
xchg
push
jnp
inc
fidivrs
push
aam
pop
ja
outsb
adc
ret
scas
and
push
xor
int
cmp
jb
xor
pop
and
cld
lret
iret
daa
inc
or
or
mov
ret
xor
xchg
mov
mov
lret
jno
cmp
dec
ja
push
ret
mov
loop
jp
cmc
dec
xchg
push
cmpsl
mov
push
test
mov
pop
fldl
stos
mov
movsl
fistpll
fstpl
mov
bound
adc
and
nop
repz
mov
push
and
mov
inc
addr16
dec
ret
movsl
in
std
or
out
jmp
movsb
and
mov
pop
stos
mov
push
mov
iret
mov
call
mov
sbb
mov
or
inc
xchg
icebp
negl
and
sbb
jge
lds
sub
mov
mov
jnp
push
repz
xchg
push
sbb
out
icebp
dec
stos
mov
imul
dec
ret
pop
daa
xor
jne
or
fldl
jo
std
cli
stc
rolb
inc
add
mov
aam
sbb
mov
mov
out
mov
cmp
and
ja
dec
cmpsb
dec
add
into
mov
stc
into
fs
sub
cld
lea
in
inc
test
or
mov
xchg
inc
outsl
fidivrs
mov
lds
inc
nop
in
cwtl
inc
adc
xchg
jae
jmp
jp
pop
dec
data16
loope
pop
aad
nop
jb
lods
sahf
push
add
inc
pop
sarb
xor
cmpsb
imul
sbb
inc
sbb
push
int3
into
jg
jge
lock
in
sbb
pop
fsubr
sbb
cmpsl
push
sub
xchg
pop
jbe
dec
cmp
cmp
loope
cmp
mov
and
pusha
sbb
sub
push
imul
out
lods
imul
int
movsb
dec
dec
rorl
fmull
mov
mov
fmuls
movsb
into
fs
out
shlb
push
ss
outsl
inc
ds
gs
je
adc
jle
movsb
pop
es
add
loope
mov
pushf
mov
mov
movsl
inc
mov
aas
xor
xorb
aam
lea
lods
rolb
incb
pop
mov
and
xor
adc
ret
lcall
xor
xchg
shl
pop
subl
movsb
out
sbb
pop
push
roll
sub
rol
adc
cwtl
pop
pop
jns
outsb
push
pusha
sub
stos
sahf
push
stos
shr
pop
mov
test
imul
js
dec
push
mov
mov
mov
sahf
push
xor
jne
aaa
sbb
dec
dec
mov
jo
imul
lahf
lcall
test
fs
adc
ret
adc
dec
and
andps
and
pushf
int3
cmpsb
xchg
xchg
or
xor
and
add
add
mov
in
stos
pop
xorl
into
inc
xor
push
ret
cmpsl
sarb
enter
push
sub
mov
aad
cmp
pop
sub
and
adc
jp
jnp
cltd
mov
cmp
cmp
pushf
xchg
rcrb
pop
cwtl
pop
sbb
cmpsb
xor
insl
cmpsb
cltd
pop
ret
mov
out
ds
pop
mov
inc
cmpsl
adc
jmp
ljmp
add
xchg
push
aam
outsb
inc
push
icebp
add
gs
es
icebp
lahf
sbb
mov
xor
out
mov
sti
into
xorl
lahf
cmpsb
mov
out
or
or
aad
stos
lods
or
sbb
cli
mov
cmc
xlat
fcomps
loop
inc
dec
imul
mov
mov
jb
lock
add
cmp
movsb
ljmp
push
loopne
std
dec
and
fadds
lret
fcmovb
and
push
push
sbb
vmovlpd
mov
es
adc
xlat
mov
cwtl
dec
mov
inc
inc
stc
stos
add
xchg
enter
jns
stos
inc
test
sahf
decb
cmpsb
pop
xor
jnp
scas
sahf
xlat
lds
test
test
cmpsl
pop
in
push
sbb
push
push
inc
xchg
jne
loope
cmp
or
pop
adc
and
stc
add
or
or
inc
xlat
dec
or
lds
iret
mov
pop
cmpsl
daa
and
xor
fwait
cmp
xchg
outsb
cs
scas
stos
push
insb
mov
dec
mov
push
rorl
lods
cmp
mov
imull
xor
push
inc
in
test
mov
das
scas
push
pop
fildll
nop
jo
outsb
cmpb
pop
mov
imul
adc
mull
pusha
sub
clc
dec
in
add
ror
int
lock
dec
rclb
int
inc
or
fistl
mov
jmp
pop
movsl
dec
sbb
shlb
cmp
and
test
testl
lock
jecxz
addr16
lret
lods
pop
jge
shlb
rorl
push
add
sub
cltd
lea
inc
jbe
cmp
add
insb
movsl
mov
xchg
xor
add
mov
arpl
jo
insb
lahf
dec
outsl
push
aad
cmpsl
cmp
mov
imul
fmuls
popa
and
xchg
and
fidivrl
in
xchg
and
xchg
sub
or
scas
loop
fldenv
pop
daa
push
dec
xchg
xchg
pushf
mov
xor
mov
pop
aaa
push
int3
stos
jge
or
movsb
add
and
inc
stc
out
std
jb
mov
loopne
ss
inc
loope
sbb
pushf
shl
scas
lcall
cmp
test
fsubrs
shll
add
dec
cmc
in
adc
cmpsl
out
cmc
xor
push
test
fs
lahf
cwtl
cmpsl
cwtl
sub
xchg
call
dec
out
pop
xchg
ja
in
pop
mov
lea
add
or
dec
lds
sahf
stos
imul
iret
push
rcrl
jns
jp
xchg
dec
and
jns
add
ja
repz
mov
jo
test
loop
mov
xorl
push
test
add
jmp
mov
lcall
outsl
leave
mov
cmp
sub
arpl
mov
mov
push
jl
mov
jmp
test
cmp
push
pop
sbb
out
sub
movsl
cmc
mov
adc
adc
inc
xchg
dec
jnp
insb
aam
jne
mov
sbb
inc
fucomip
mov
sbb
jb
flds
push
jecxz
out
cmp
cmpsb
mov
jbe
dec
pop
stos
cmp
enter
cmp
mov
cmpsl
push
xor
mov
mov
pop
std
sub
inc
fwait
xchg
adc
inc
adc
gs
lret
inc
sub
jecxz
das
fisubs
add
insl
inc
inc
push
sub
inc
pop
enter
sbb
popf
jne
push
cmp
inc
xchg
mov
iret
out
decb
push
dec
jns
pop
nop
aaa
xchg
mov
add
imul
int3
lea
mov
test
inc
push
mov
inc
sub
jns
adc
xor
mov
pop
push
lretw
xchg
sbb
mov
pop
add
vunpcklps
push
outsl
pop
test
fwait
testb
push
mov
lret
or
das
shlb
aam
sbb
fsubrl
ljmp
inc
sub
fsubl
das
filds
cmc
jecxz
dec
outsb
sarl
out
fiadds
add
push
xchg
hlt
xor
xor
adc
jl
sub
xchg
jge
push
pop
mov
mov
adc
xchg
fdivs
shrl
outsl
fwait
inc
fcomi
xchg
jge
mov
dec
movsb
mov
jg
lds
mov
fwait
inc
rorl
add
sbb
imul
cmc
sahf
sub
nopl
fs
dec
outsl
sub
add
push
sub
mov
outsl
cmp
cs
shlb
sub
push
bound
sarb
pop
lret
ss
leave
and
aam
cs
dec
lock
clc
push
and
push
ja
fs
test
or
push
mov
jecxz
jns
into
lock
sbb
out
or
sub
sbb
or
xchg
popa
imul
ss
xor
fidivrl
notb
movsb
fs
pop
out
or
push
push
enter
mov
in
daa
mov
dec
cltd
push
xchg
push
adc
shlb
loopne
jle
push
adc
xchg
flds
jl
rolb
cmp
ja
fucom
adc
test
xor
sbb
cmp
xor
rcr
mov
mov
xchg
push
aad
jne
cwtl
mov
shlb
pop
cmpl
out
or
ret
adcl
fs
mov
jg
xchg
add
inc
jle
push
jb
inc
mov
sbb
mov
je
pop
xlat
xor
push
rorb
adc
popf
inc
inc
xor
orl
or
mov
shrb
scas
movsl
ss
mov
pop
mov
mov
inc
outsb
arpl
hlt
jno
in
cmp
jg
or
iret
fsubrp
xchg
sbb
push
sbb
dec
cmp
mov
rcll
in
jae
push
mov
out
or
jne
mov
mov
xor
xor
add
add
imul
jmp
mov
mov
mov
mov
mov
xor
xor
add
add
imul
mov
cmp
mov
je
xor
add
mov
imul
add
mov
mov
pop
leave
ret
push
mov
sub
sbb
mov
xor
xor
sub
mov
add
movl
or
mov
push
mov
add
xor
movl
cmpl
je
cmpl
jne
push
call
mov
dec
mov
jmp
add
mov
negl
push
mov
adcl
add
cmp
movl
je
mov
mov
xor
xor
adcl
add
add
adc
negl
xor
mov
push
movzbl
adc
xor
xor
mov
and
mov
add
movl
adc
addl
xor
movl
xor
movl
cmp
movl
jne
movl
cmp
je
jmp
mov
andl
xor
xor
inc
mov
cmpl
jne
push
pushl
call
cmpl
jb
mov
mov
xor
add
mov
imul
mov
xor
add
mov
mov
mov
mov
xor
xor
add
adc
lea
xor
xor
xor
mov
add
adc
xor
xor
cmp
jne
cmp
jne
mov
pop
pop
pop
leave
ret
push
mov
sub
sbbl
mov
andl
mov
inc
mov
cmpl
jne
pushl
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
movl
cmpl
je
cmpl
jne
pushl
push
pushl
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
xor
notl
mov
adcl
add
movzwl
mov
mov
sbb
movb
add
lea
xor
mov
addl
mov
mov
orl
xor
andl
sub
andl
mov
movl
or
push
jmp
and
add
sbb
fisttpl
push
jl
pop
pop
jl
push
jg
lea
or
ret
std
subb
fdivl
push
xchg
repnz
jecxz
or
std
lock
sysret
int3
push
mov
sub
mov
push
sahf
inc
jecxz
outsl
adc
mov
mov
inc
sub
xchg
push
jnp
and
ja
xchg
cmp
in
sar
mov
adc
aad
inc
inc
sub
xor
dec
xchg
stos
popa
inc
nop
dec
mov
sti
xchg
and
fildl
sub
stos
cli
xor
or
adc
xchg
jp
jp
fdivr
mov
pushf
xchg
test
popf
push
bnd
xchg
sbb
adc
dec
dec
push
pop
inc
lret
xchg
jle
adc
rcll
ret
lods
pop
lahf
loope
xchg
imul
adc
mov
pop
test
je
arpl
daa
jge
test
jge
icebp
mov
or
icebp
sbb
mov
stos
or
repnz
arpl
test
movd
ja
or
test
and
xor
test
es
lret
and
pop
shrl
mov
in
or
mov
cs
imul
lret
mov
incl
jg
xor
or
push
mov
cmp
adc
ret
popa
pop
popw
or
cmp
sub
pop
or
imul
popa
cli
in
arpl
sub
nop
mov
out
lret
cmp
ret
sub
mov
mov
lret
outsl
or
xor
xor
or
pop
loopne
enter
mov
in
sahf
stc
fisubl
push
scas
popf
xchg
jle
fdivrl
cmp
popf
mov
dec
xchg
loope
imul
loop
xchg
mov
rcl
fs
xchg
scas
xlat
sub
repnz
sub
cmp
and
or
or
jo
or
jb
out
aaa
cld
lods
jno
or
mov
sbb
dec
push
or
insl
movsl
pop
cmpsl
decl
scas
out
dec
mov
jmp
xchg
cld
jp
xchg
mov
scas
lock
inc
cmp
or
inc
lock
into
enter
int3
int
lods
xchg
dec
in
repnz
add
adc
inc
cmp
sbb
addl
dec
xchg
cmpb
int3
ret
pop
jp
inc
out
ja
mov
xchg
ja
data16
jecxz,pn
pop
jmp
sti
aaa
xchg
cwtl
fyl2x
in
or
mov
insb
sub
and
lods
cmp
sub
jmp
or
push
jbe
mov
aaa
leave
xchg
mov
pop
push
divb
or
adc
xchg
rol
cmp
adc
add
outsb
add
pushf
stos
fdivl
adc
es
mov
cltd
cld
cmp
xchg
icebp
add
scas
cltd
stos
and
jae
lret
mov
addr16
pop
test
add
out
mov
push
jnp
sub
fcoml
xor
fyl2xp1
out
loop
call
arpl
sbb
and
pop
xchg
adc
mov
xlat
pop
cltd
aam
imul
frstor
sbb
aam
mov
mov
hlt
sbb
fcmovne
js
lret
dec
aaa
mov
xor
sarb
push
cmp
add
ret
je
mov
jnp
push
jle
dec
clc
pop
aad
ret
push
jge
xchg
jo
out
or
fcoms
xlat
flds
sub
das
mov
or
pop
jnp
cmp
sub
xchg
cmp
mov
push
xor
je
std
arpl
push
cmpsl
fisubs
and
mov
jb
jmp
push
dec
repz
xchg
jg
dec
gs
clc
inc
cmp
das
mov
sahf
lods
cli
add
imul
jno
push
fucomp
jecxz
push
pop
adc
idivb
inc
das
nop
push
mov
xor
stc
cmp
ljmp
sbb
inc
std
fcompl
orl
inc
sbb
gs
mov
aas
int3
outsb
and
dec
inc
sti
mov
aas
in
fnsave
loopw
gs
add
and
or
into
daa
addb
xchg
jecxz
data16
ret
sub
mov
fwait
push
inc
inc
repnz
divps
jecxz
cmp
jg
imulb
cmpsb
bound
xor
incl
cs
mov
out
xchg
outsb
xchg
mov
pushf
pop
inc
dec
sub
xchg
xor
repnz
pop
dec
cmp
push
scas
repz
and
mov
scas
lods
stc
mov
jp
push
sbb
or
push
xchg
lret
jmp
sbb
lret
ficomps
inc
xor
sbb
outsl
inc
in
aam
sub
sub
dec
mov
into
movsb
push
aas
sbb
inc
jbe
dec
dec
mov
fimuls
testb
jb
movsl
cmp
sub
stc
pop
xor
pop
out
lahf
sbb
imull
fcmovbe
or
cmp
sahf
cs
cmpsb
xlat
pop
std
daa
push
push
fs
outsl
sti
push
sahf
nop
mov
sbb
arpl
cld
mov
jmp
dec
dec
or
int3
cld
sub
cmpl
insb
xor
inc
dec
or
pop
xor
lret
popa
fisttpl
bound
lods
pop
test
outsl
jp
mov
dec
adc
aad
adc
add
push
das
lods
lods
xchg
cmp
mov
idivb
testb
add
ja
pop
dec
addb
push
xor
mov
inc
mov
mov
mov
shl
and
jo
and
js
es
fnstcw
ret
fdivrl
add
add
pop
mov
pop
ss
push
mov
or
cmp
lods
mov
or
pop
dec
add
adc
ja
xchg
pop
sub
shl
push
mov
stos
and
or
inc
movsb
jecxz
mov
enter
push
jg
out
std
xor
mov
sub
movl
dec
mov
mov
dec
mov
fdivl
push
inc
adc
imul
push
dec
sbb
test
loope
add
lds
jnp
jmp
rcr
stos
roll
jge
aas
leave
pop
bound
outsl
push
in
inc
mov
push
out
dec
sub
mov
movsb
mov
out
out
dec
pushf
dec
jmp
ljmp
mov
mov
popf
mov
jge
icebp
arpl
cli
push
cltd
out
stos
adcb
stos
jp
mov
pop
ja
sahf
scas
sbb
push
shlb
cmpsb
repnz
push
enter
cwtl
roll
lret
lock
or
jbe
sti
pop
jmp
scas
pop
jns
sbb
dec
stos
stos
and
outsb
cmpsl
and
mov
fildl
jg
push
lods
push
or
push
or
daa
cmpsl
pop
outsb
stos
loop
or
scas
in
lret
rcr
fisubrl
mov
movb
adc
mov
pushf
adcb
jb
dec
sbb
xchg
sbb
cmp
shrl
or
sub
mov
dec
xchg
int3
and
sub
dec
cld
cmp
iret
push
hlt
jnp
inc
xchg
mov
mov
xor
and
outsl
rcrl
jmp
lock
jmp
jp
mov
lods
sahf
aam
adc
pop
mov
lret
xorb
daa
cld
mov
sbb
out
lcall
sbb
jmp
clc
call
push
lcall
xchg
repz
pop
sub
cmpsl
xor
xchg
pop
pop
push
or
push
add
out
es
fldl
inc
addr16
xchg
fisubs
roll
push
xchg
test
imul
sbb
push
shll
scas
or
jns
lock
and
cmp
imul
cli
pusha
pusha
xchg
sbb
out
xchg
xchg
sub
fistps
mov
pop
mov
mov
dec
xor
pop
cmp
ss
cld
fmull
and
aas
mov
push
add
add
stos
and
dec
in
imul
mov
sbbb
xor
fldl
xchg
ret
pop
jo
test
test
push
out
xchg
shll
fisttps
fldenv
pop
inc
xor
lock
loop
divb
mov
cli
jge
test
repnz
pop
xchg
adc
cmc
push
dec
cltd
sarb
dec
int
xchg
std
jp
xchg
scas
and
or
in
xor
sub
sbb
aad
sti
cltd
pop
mov
addr16
cmp
popf
popf
add
or
mov
repnz
xchg
mov
cmp
mov
jae
cmp
mov
inc
jae
negl
mov
mov
fldcw
hlt
mov
inc
faddl
cwtl
outsl
std
scas
xchg
push
xor
bound
lcall
aas
lock
xchg
and
mov
adc
test
xchg
bound
lea
pop
push
sbb
je
adc
mov
pop
xchg
pop
pushf
add
adc
and
aas
mov
cmp
lcall
ret
sbb
popf
sbb
jecxz
jnp
push
jne
sti
jne
and
pop
shl
dec
push
bts
jmp
sbb
je
add
or
jmp
popf
subl
and
mov
or
cwtl
cltd
imul
test
jo
cmc
mov
dec
addr16
xchg
cmp
xor
xor
pop
or
pop
cmpsb
imul
and
add
popf
mov
adc
lds
hlt
jg
outsl
mov
stos
push
and
fwait
mov
add
mov
dec
cmp
hlt
mov
in
and
repz
aad
push
xor
pop
add
out
imul
add
jns
xchg
lods
mov
fst
daa
movsl
fsubp
icebp
or
and
push
loop
push
or
xchg
test
push
xchg
mov
fdivrs
ss
imul
mov
int3
xchg
test
jne
in
sub
mov
int3
int3
pop
sbb
je
adc
nop
pop
lods
jecxz
mov
pusha
cs
in
pushf
insb
sbb
sbb
xor
mov
mov
stos
adc
ja
dec
insl
fidivrl
mov
dec
sbb
adcl
cli
jle
in
test
pop
add
dec
roll
cwtl
int
jbe
clc
push
fsts
mov
in
je
shll
rorl
adc
mov
xor
sub
sub
into
jne
outsb
mov
cmc
sbb
scas
popa
aas
mov
xchg
fscale
rol
mov
aad
sti
xchg
stc
test
push
and
pusha
out
repnz
adc
in
rcr
add
xor
test
sahf
mov
pop
push
sar
inc
mov
sbb
pop
xchg
mov
imul
fnstsw
movsb
imulb
repz
fdivl
fwait
dec
add
stc
daa
dec
movsb
xchg
push
dec
cli
test
mov
fstpl
sbb
add
fdivl
sub
jbe
jne
andb
shlb
mov
xor
in
movsb
mov
test
add
loope
jmp
dec
js
dec
test
iret
outsb
mov
pop
or
pop
in
movsb
push
inc
inc
jecxz
jg
out
xor
inc
outsb
jbe
pop
jnp
or
sub
repnz
es
xchg
cmpl
test
push
not
mov
sub
xlat
stc
lods
xchg
lahf
popa
das
punpckhdq
pop
lahf
xor
sub
pusha
scas
aad
and
adc
mov
and
push
sahf
mov
cmp
aaa
or
xchg
cmpsl
insb
popa
iret
and
mov
or
scas
xchg
push
jnp
fucom
jnp
mov
xor
js
outsb
lcall
clc
sub
jmp
push
cmpsb
jecxz
daa
jmp
mov
add
shl
cmp
adc
movsl
roll
lea
dec
outsb
lods
xchg
xchg
mov
ljmp
sbb
mov
add
sub
adc
adc
jmp
dec
mov
out
notl
push
cmp
stos
cmp
mov
mov
add
stc
icebp
push
aam
stos
jecxz
adc
mov
fisttps
pop
cmp
mov
int
ds
sar
fsubrl
sbb
mov
loope
inc
icebp
cld
ficoms
loope
popa
dec
lds
inc
scas
mov
cs
in
pushf
jb
jbe
adc
dec
push
sbb
repz
cltd
push
sub
adc
imul
pushf
in
xchg
push
movsl
movsb
repnz
pop
subb
xchg
jbe
repnz
gs
pop
push
mov
fadds
outsb
and
mov
in
subb
ss
mov
fdivs
cmp
jo
mov
pop
aas
or
fldt
push
mov
loop
push
add
outsl
pop
and
call
mov
insl
stc
outsl
push
jl
mov
out
jbe
jle
lock
into
loopne
sub
in
es
inc
push
lea
lods
negb
sub
inc
ret
sub
adc
in
xor
or
scas
loop
ljmp
push
insl
pop
insb
jp
xchg
popf
fucomip
xchg
and
xorl
xlat
add
jnp
xchg
stc
and
cmp
loope
ffreep
mov
stos
jle
push
push
xchg
int
mov
xchg
sbb
out
xchg
push
jo
pusha
or
mov
in
data16
shlb
lahf
ljmp
es
ja
fwait
adc
test
dec
cmpl
xor
je
mov
xchg
sbb
and
dec
pop
jp
lcall
mov
gs
sub
xor
imul
out
dec
pop
leave
xor
fstpt
pop
xor
daa
aas
pop
cmpsb
bound
sbb
push
sbb
mov
leave
xchg
adc
inc
es
jnp
leave
scas
fisubrl
sbb
push
inc
insl
ds
shll
int3
pop
and
mov
jp
pop
lock
in
into
stos
dec
cmp
lret
dec
push
mov
cli
add
xor
out
sub
push
faddl
fs
jns
repz
sub
das
mov
cmp
push
jbe
ret
clc
stos
xchg
push
outsb
sti
in
rcrl
leave
jmp
icebp
or
std
cmp
outsl
mov
adc
loopne
push
std
out
and
adc
mov
ljmp
jne
movsl
rcrb
jb
push
sbb
clc
arpl
cli
addr16
lock
cmp
scas
push
loope
jp
fdivrs
movsl
jg
aam
test
dec
cmp
fisubl
adc
sub
mov
jecxz
stc
sub
xor
mov
push
adc
adc
fisubrl
sbb
clc
dec
inc
les
pop
test
sub
adc
mov
mov
js
xchg
mov
js
stc
dec
cmpsb
sbb
outsb
movsb
int
iret
lock
out
pushf
rorb
mov
push
pop
add
cmp
inc
std
jae
xor
sarl
into
push
jmp
xor
and
adc
sub
ja
mov
loopne
lahf
test
and
inc
pop
dec
imul
xchg
cmp
mov
inc
pop
lds
imull
cmpl
bound
cld
jge
lock
repnz
stc
inc
jnp
jmp
outsb
adc
sbb
stos
into
cltd
int3
mov
rclb
lahf
sbb
jle
loop
cwtl
fcompl
loop
mov
in
or
add
mov
bound
sub
sbbb
xchg
in
fstpt
cmpsl
xlat
or
lea
mov
mov
cwtl
int
pop
scas
xchg
push
and
push
loopne
outsb
mov
fnstenv
jmp
rcll
add
stos
stos
xchg
jne
xchg
aas
aas
push
jge
or
adc
lods
add
or
cmp
repnz
lret
pop
je
jle
fsubs
jbe
ret
movsb
loope
fcomps
xchg
pop
in
cmpsb
inc
outsb
aad
stos
jno
pop
jb
andl
xchg
mov
out
xchg
xlat
or
lea
idiv
out
ss
xor
jmp
popf
and
js
adc
roll
cmpb
pop
push
sbbb
adc
in
sub
mov
cmp
in
lea
ds
in
sar
fst
fldl
dec
iret
iret
outsl
push
mov
cmp
test
sbb
mov
inc
dec
fiadds
cmp
mov
jl
jbe
test
or
dec
cmpsb
divl
rep
jae
sub
add
dec
sub
jle
fisubrs
out
add
add
out
xor
cltd
mov
sbb
pop
fldl
ret
ret
dec
test
jo
inc
cmpsb
or
lods
arpl
xchg
pop
insb
cmp
in
xchg
adc
jge
out
arpl
pop
in
sub
jae
insb
mov
cmp
xor
inc
sub
pop
mov
subl
adc
aaa
dec
cs
out
push
push
jo
sbb
xor
out
or
push
pusha
jl
imul
lods
sbb
mov
or
mov
xchg
fcmovnu
stc
xor
xor
push
divl
pop
add
imul
add
das
in
and
mov
mov
aas
mov
dec
int3
in
and
inc
pop
enter
inc
jp
mov
fwait
daa
push
pop
xor
jnp
outsl
mov
lods
movsb
and
mov
dec
nop
adc
sbb
lods
cmp
add
aam
orps
xchg
shufps
xchg
das
jle
icebp
sub
mov
inc
test
popf
add
inc
xlat
or
repz
and
out
push
or
cli
sub
bound
lock
addl
enter
imul
in
in
cli
pop
fnstcw
pop
push
adc
das
in
jecxz
cmp
iret
xor
mov
popa
lods
sub
fisubrl
xchg
adc
shll
fstl
sbbb
xchg
insl
popa
jmp
orl
pop
mov
call
mov
es
adc
test
scas
add
push
cmp
sahf
cmpsl
fldl
jbe
addr16
stos
pop
adc
cvtpi2ps
xchg
dec
repnz
add
dec
jp
cmp
add
mov
test
jg
lods
pushf
ss
push
add
lahf
iret
pusha
outsl
ja
add
adc
enter
out
sbb
push
and
xchg
pop
pushf
je
pop
das
les
pusha
popf
push
lcall
sbb
popa
xchg
stc
pop
mov
pop
jl
jns
xchg
repz
xchg
mov
adc
outsl
js
js
pop
add
push
adc
inc
sub
mov
add
int3
out
xchg
xchg
gs
sarl
adcl
xchg
push
mov
cmc
push
sub
or
add
push
loopne
mov
test
push
pop
fcmovnb
int
in
aaa
je
adc
push
adc
leave
lods
xor
negl
jecxz
or
aam
jnp
ja
aam
push
hlt
mov
xlat
xor
sbbl
hlt
sbb
or
jmp
in
inc
lahf
inc
mov
and
imul
imul
lock
jge
push
inc
push
les
adc
xchg
fwait
mov
push
rcrl
push
and
sti
and
mov
sahf
shl
jbe
imul
or
stos
xor
adc
aaa
mov
jnp
aas
fwait
loop
cmp
push
aas
arpl
sbb
test
adc
dec
and
jno
cmp
xchg
mov
xchg
mov
mov
and
cli
nop
lock
pop
test
mov
mov
mov
mov
imul
movsb
std
outsb
dec
jge
mov
sahf
popf
divl
cmp
mov
arpl
dec
or
push
sub
sbb
in
adc
mov
and
adc
xchg
jp
test
sub
cmp
or
out
adc
pop
adc
adc
xorb
dec
movsb
mov
mov
mov
push
icebp
enter
das
lcall
psubd
fistpll
inc
dec
sub
xlat
daa
xchg
aas
push
and
das
inc
repz
sahf
or
rcl
jg
mov
shrb
mov
addr16
adc
popa
sar
lock
inc
and
sub
int3
mov
cwtl
outsl
and
push
js
pop
add
movsl
cmc
mov
push
stc
jnp
add
movsl
xor
jne
jmp
rcrb
mov
loopne
stos
scas
fimull
aas
lret
dec
add
inc
out
dec
adc
pop
orl
xor
xlat
addr16
jmp
and
sub
jl
into
lret
dec
hlt
out
les
jecxz
andb
mov
or
xchg
adc
adc
push
dec
out
cmp
fdivrp
inc
bound
icebp
test
push
lods
push
shl
ret
fcmovnu
outsl
dec
cmp
mov
sub
shrl
out
decl
adc
jb
push
push
jecxz
jl
mov
push
mov
push
arpl
xchg
pop
aad
stos
cmp
aaa
out
mov
arpl
pop
mov
add
in
lods
push
movsl
dec
mov
adc
mov
jge
out
cltd
mov
aad
ret
jp
leave
and
xchg
xchg
mov
sbb
cmpsl
fimull
xchg
mov
dec
scas
lds
push
pop
inc
inc
rorb
jmp
add
cltd
xor
outsl
lret
xchg
adc
ds
icebp
pop
std
ret
xor
icebp
imul
dec
das
fbstp
xlat
mov
push
in
fildll
adc
lahf
xchg
add
mov
hlt
in
jb
test
imul
mov
push
xor
xchg
insl
loop
xlat
jp
sarl
stos
testl
xchg
pop
into
cmc
aaa
dec
aam
jno
notl
gs
bound
mov
xchg
xchg
pushf
out
pop
push
cltd
lds
ficoms
cmp
adc
sub
insl
loope
daa
std
mov
sub
push
xor
je
adc
movnti
sahf
or
ror
jge
addr16
xor
divl
mov
das
sub
sub
add
test
push
mov
xchg
and
mov
les
sub
gs
mov
std
lock
pusha
sub
push
inc
ret
popa
ljmp
popa
xchg
es
cmp
mov
mov
cwtl
jl
adc
pop
lret
es
mov
pop
lods
outsb
inc
cmp
mov
push
stc
pop
and
jb
inc
mov
clc
pop
hlt
mov
ss
push
xor
lcall
into
push
xchg
addr16
ret
outsl
cmp
jne
das
and
shll
xor
push
cmovo
cmp
add
incl
and
dec
les
in
mov
adc
enter
icebp
sub
lods
xor
adc
mov
or
clc
mov
push
push
aam
xor
mov
aam
add
mov
dec
dec
fbld
int
pop
imul
add
cmp
sbb
sub
mov
inc
mov
arpl
in
mov
lods
mov
xchg
bound
push
shll
stos
loope
dec
push
jecxz
dec
sbb
mov
leave
insl
and
xchg
test
fmulp
loope
inc
sub
sbb
sub
mov
jo
cmpsb
xchg
fdiv
stos
into
or
inc
and
cmp
push
pop
xor
out
push
or
push
mov
push
aas
movb
jle
popa
or
lahf
xor
push
mov
push
loopne
push
cltd
scas
sub
nop
mov
divl
les
push
mov
dec
lods
mov
xor
ret
pushf
fadds
cltd
xchg
call
das
push
sbb
mov
inc
mov
paddusw
mov
pop
pop
fmul
rcll
scas
inc
adc
pop
imul
or
daa
test
push
js
imul
ss
outsb
push
adc
iret
adc
decl
mov
lods
xchg
xlat
repnz
movsb
fdivrs
jo
cmp
mov
cli
pop
ffree
and
xchg
hlt
dec
mov
add
lret
and
xor
or
adc
lret
sub
andb
cmp
mov
in
jmp
call
mov
jle
lods
push
sbb
cmp
mov
sahf
and
aas
std
dec
jp
jae
pop
lock
out
sbb
dec
cmpsl
or
add
inc
adc
xchg
testl
mov
pop
jle
add
lcall
mov
stos
mov
push
lea
sbb
gs
aam
xchg
jne
adc
sbb
mov
fstp
arpl
stos
lcall
xor
mov
or
jge
mov
pusha
and
icebp
ret
push
mov
xchg
cmp
xor
mov
aad
in
push
mov
mov
sti
jo
pop
jne
pop
xchg
xor
xlat
jae
or
and
test
cmpsb
decl
insb
pushf
mov
stc
nop
bound
adc
into
clc
push
addl
std
cmp
pop
mov
add
rorb
dec
or
mov
subb
imul
mov
pop
nop
xor
jno
xor
pop
sub
mov
je
pop
xor
fimull
sbb
mov
popf
bound
cmp
cmp
adc
mov
pop
mov
lods
inc
and
mov
insl
cmp
push
out
inc
fiaddl
movsl
fcmovb
aas
scas
outsl
pop
push
push
in
nop
imul
xchg
jge
in
fbld
push
inc
repz
lods
cmp
pop
jl
ljmp
push
or
divl
inc
cmp
mov
mov
xlat
adc
fsts
adc
out
add
cmp
stos
mov
movsl
sbb
mov
and
mov
fcompl
mov
cmc
mov
int3
mov
sti
rclb
push
push
push
call
cs
jp
jbe
dec
test
mov
dec
rcll
in
stos
adc
cmc
js
and
shr
movsl
test
ret
insb
add
pop
or
outsl
cmc
inc
push
adc
out
push
call
xor
push
out
sbb
sbb
dec
or
popa
inc
pop
sbb
aam
or
insb
out
das
add
dec
sbb
es
test
sub
addr16
jns
cmp
push
sbb
jb
inc
pop
sub
inc
pushf
add
dec
outsb
ret
cwtl
das
out
sbb
shlb
rolb
lods
das
pop
cmp
ja
aad
and
push
loope
repz
pop
iret
adc
insl
bswap
data16
jbe
rorl
mov
pop
pop
adc
orl
stos
adc
ljmp
daa
jno
call
fsubl
adc
mov
push
dec
inc
insl
cwtl
pop
jmp
jns
xor
test
inc
inc
scas
pop
lock
inc
xlat
jns
mov
xor
adc
xchg
cmp
add
arpl
or
punpckhbw
jp
push
add
mov
cld
inc
mov
adc
loope
out
sub
push
sarb
ret
or
les
sbb
and
outsl
mov
test
in
pop
push
stos
add
and
clc
and
movsl
test
out
cmp
or
xchg
out
sbb
aam
and
lahf
xor
test
cltd
aad
aaa
lea
jg
or
or
lds
sub
dec
add
cmpsl
aad
outsb
test
jo
call
pop
xlat
dec
ljmp
push
lods
lock
pushf
mov
std
inc
mov
cs
addl
sbb
ss
sbb
dec
dec
bound
mov
mov
xor
mov
and
mov
out
cmpsl
xchg
in
mov
dec
xchg
aam
daa
outsb
xlat
lds
mov
add
outsb
pusha
sub
cmpsb
imul
loop
insb
mov
cs
testb
lods
inc
sbb
jns
nop
loop
aaa
outsb
xchg
push
add
sbb
xor
push
ret
mov
leave
mov
push
cmc
fimuls
sti
jb
inc
cld
push
mov
pop
ror
pop
add
jecxz
out
mov
inc
adc
out
lea
pop
sub
outsl
cmpsl
cmp
arpl
mov
test
mov
cwtl
jbe
sbb
cmpsb
and
dec
ja
nop
add
ficomps
shrb
mov
adcl
mov
iret
mov
push
xor
into
cmpsl
jo
hlt
test
jmp
sar
in
mov
mov
aas
and
jns
add
sub
pop
sbb
sbb
jmp
imul
mov
shlb
jbe
cmp
mov
mov
mov
jmp
es
mov
repz
fistps
jmp
pop
dec
ficoml
or
mov
je
mov
mov
mov
je
push
in
add
loope
jb
inc
inc
jmp
fwait
sarb
andl
sti
jl
push
test
add
imul
mov
daa
rcrb
push
sub
fldcw
push
fnstenv
mov
cmpsl
mull
or
lahf
adc
cmp
lods
cs
adc
dec
sbb
sbb
fdivl
xchg
cmc
int
pop
xchg
bound
dec
bound
sbb
arpl
add
lret
cld
or
push
sar
mov
push
inc
jbe
inc
mov
gs
jo
in
aam
dec
push
loop
aam
jecxz
pushf
cmp
mov
cmp
jmp
sbb
sbb
push
adc
fucompp
mov
lds
mov
test
dec
ljmp
xor
mov
rcrl
pop
push
dec
dec
adc
inc
je
dec
xor
mov
pop
pushf
xor
iret
lods
das
insb
stos
add
jae
cmp
push
clc
xchg
popl
mov
popf
sahf
xchg
frstor
test
mov
das
jp
arpl
daa
push
sbb
into
pop
sbb
xchg
dec
xchg
repnz
shlb
test
pop
in
xor
mov
adc
cmp
loop
decl
fdivrs
lahf
adc
clc
inc
cmp
shlb
fstpt
imul
rorl
cmc
cmp
inc
pop
lcall
mov
jo
sbb
movsl
das
roll
mov
push
mov
sbb
xor
mov
and
icebp
mov
jb
adc
inc
cmp
mov
dec
mov
adc
and
adc
test
cmpsl
pop
dec
jnp
sub
xchg
into
jg
xor
dec
mov
daa
push
fists
cmp
ret
xor
les
add
lcall
inc
pop
pusha
div
or
arpl
shrb
sub
or
sbb
aaa
lret
lret
shr
push
enter
and
jp
add
mov
rcll
pop
sub
push
movl
xorl
mov
andl
jmp
xor
or
inc
mov
cmpl
jae
cmpl
jne
push
push
pushl
call
jmp
movl
cmpl
je
cmpl
jne
push
push
push
pushl
call
mov
dec
mov
jmp
push
sbbl
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
push
push
call
jmp
inc
xor
sub
mov
movl
push
xorl
add
jmp
mov
notl
mov
notl
inc
cmp
movl
jb
adc
mov
xor
add
jmp
andl
mov
and
mov
adcl
xor
andl
mov
inc
mov
cmpl
jne
push
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
movl
cmpl
je
cmpl
jne
push
call
mov
dec
mov
jmp
xorl
mov
add
sbbl
movzwl
xorl
mov
negl
mov
orl
movzwl
xorl
xor
add
mov
mov
inc
mov
cmp
movl
jne
mov
movl
mov
decl
xor
add
andl
mov
dec
mov
xor
andl
add
movl
mov
not
movl
movl
movl
mov
mov
movl
mov
jmp
mov
add
mov
andl
xor
xor
sub
sub
xor
andl
mov
inc
mov
cmpl
jne
push
pushl
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
adc
mov
movl
mov
lea
mov
mov
mov
lea
movzwl
sbb
mov
mov
andl
mov
add
mov
negl
lea
andl
mov
inc
mov
cmpl
jne
push
pushl
call
cmpl
jne
xor
add
inc
mov
cmpl
jb
orl
mov
mov
add
mov
lea
add
mov
mov
orl
mov
lea
adc
mov
andl
mov
inc
mov
cmpl
jne
push
push
call
cmpl
jb
mov
sbb
mov
sbbl
lea
mov
andl
mov
inc
mov
cmpl
jne
pushl
push
push
push
pushl
pushl
call
cmpl
jb
mov
xor
add
jne
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
imul
xor
add
lea
mov
add
mov
mov
xor
add
jne
mov
mov
mov
cmp
je
mov
mov
mov
cmp
jne
mov
mov
movsbl
xor
add
cmp
mov
mov
mov
je
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
xor
imul
add
lea
mov
add
mov
mov
xor
add
jne
mov
mov
xor
xor
add
add
cmp
jae
lea
mov
mov
movl
lea
mov
mov
addl
mov
xor
add
lea
jmp
sarb
jae
dec
bound
sub
jmp
jl
add
je
std
sarb
push
jp
jb
sbb
xor
cmc
mov
icebp
xchg
imul
xor
sbb
jne
out
mov
in
cmp
xchg
jns
mov
push
sbbb
dec
popf
daa
mov
aam
dec
neg
inc
adc
in
pop
pop
shll
jb
mov
mov
fstps
dec
pushf
test
jg
enter
fwait
sub
arpl
and
fcoml
mov
lea
popa
jo
shl
or
mov
xchg
sbb
lret
mov
sub
lret
mov
das
popa
mov
test
enter
mov
xchg
xchg
mov
dec
lods
andb
dec
push
push
fwait
xor
loop
inc
pop
dec
int3
pop
test
fbld
call
movsl
or
push
stos
xchg
jbe
xor
mov
dec
shll
mov
imul
inc
xchg
shll
lods
jb
push
dec
dec
into
or
pop
addr16
mov
jns
cltd
and
sub
sub
mov
mov
xchg
add
pop
cmpl
pop
cltd
sarb
ljmp
cld
repnz
lods
push
in
xchg
mov
cs
or
pop
push
repz
cmp
repz
decl
pop
icebp
imul
andl
scas
xor
jns
mov
mov
lret
lods
movsl
lret
iret
mov
fadds
test
aaa
test
daa
insl
rclb
into
testl
lcall
es
mov
lods
push
notb
sub
jne
push
sbb
addb
pop
pop
loopne
adc
outsb
out
stos
ret
lea
cmp
push
es
out
leave
lret
addl
xor
cmp
push
fdiv
mov
mov
ret
mov
shll
in
pop
je
push
mov
cmp
mov
cmp
js
mov
and
dec
lods
sbb
jno
insb
pop
lods
mov
data16
add
movsl
mov
mov
loop
xor
push
pop
movsl
dec
aam
in
pop
int3
lret
es
jg
shll
leave
ss
jae
lcall
jae
add
dec
inc
cmpsb
dec
xor
mov
jle
pusha
jge
jo
les
fcomps
cmp
lahf
adc
jmp
xchg
test
ficoms
jns
lods
pop
mov
jge
rclb
mov
mov
sbb
mov
xor
lret
jo
les
jb
push
not
sub
push
lea
mov
aaa
adc
push
loop
xor
nop
pop
pushf
xchg
rcr
sbb
fimull
clc
fisttpl
push
and
insl
call
add
in
dec
pusha
ds
scas
ss
popa
or
add
mov
addr16
out
ret
imul
shrl
xorb
por
dec
or
ret
and
mov
xchg
inc
push
mov
jle
and
mov
push
test
push
pop
sbb
aam
xor
int
imul
add
addr16
push
push
es
pop
or
daa
jne
adc
js
enter
dec
inc
pop
popf
in
shl
js
lcall
cli
fisttpll
les
and
mov
and
add
push
inc
and
mov
push
pop
adc
cld
lods
adc
mov
sub
addb
push
lcall
aaa
xor
adc
pop
xor
mov
mov
pop
xchg
add
loope
fwait
addl
or
push
xor
jge
dec
push
mov
mov
ljmp
stos
mov
mov
cmp
inc
fucomi
inc
mov
inc
fistps
int3
cltd
or
jge
sub
incb
mov
aas
lret
sahf
movsl
ss
sahf
loope
aaa
jo
xor
fwait
push
adc
adc
jb
dec
nop
and
mov
lret
adc
sub
dec
setnp
push
call
pop
cmc
fcmove
pushf
cmc
and
bound
out
sahf
xchg
in
stc
and
dec
xor
push
and
in
push
jns
jl
aad
sbb
out
mov
pushf
cs
movsl
push
pop
lods
pushf
xor
shlb
dec
push
xchg
pusha
mov
fiadds
int3
sbb
jae
adc
mov
adc
and
stos
push
mov
pop
rcll
call
xor
dec
sub
bnd
ret
add
cld
imul
pop
mov
adc
loop
dec
pop
inc
lret
or
stc
jge
imul
stc
stc
ds
dec
adc
ret
lods
xor
push
xchg
fcoml
mov
mov
notl
inc
fadds
nop
pop
inc
stos
pop
lret
sti
aas
push
mov
pandn
aad
lds
jns
pop
add
ljmp
dec
cwtl
mov
adc
lods
jg
out
aaa
scas
fcmovne
xchg
or
arpl
sub
mov
xchg
movsl
add
pop
mov
insb
xor
insl
out
jo
mov
les
repz
rcrb
retw
mov
jl
lods
shlb
fistl
xor
scas
mov
lea
outsb
inc
sbb
push
repnz
dec
mov
inc
push
mov
inc
mov
or
sbb
jno
imul
pop
in
sub
xchg
test
cmc
shll
or
popa
lahf
imul
mov
in
repnz
and
pop
shrb
adc
adc
fstl
cmp
imul
sbb
shr
xchg
addl
cmp
xor
xchg
sub
add
lea
jecxz
cmpsl
ljmp
mov
das
sarb
mov
pusha
fucomi
daa
out
mov
xchg
mov
sbb
mov
xor
into
leave
or
mov
sbb
inc
jae
sti
add
push
das
std
mov
xor
and
pop
lds
adc
pop
jb
fists
cwtl
in
aam
in
dec
das
pop
dec
xchg
test
ss
xor
scas
and
mov
xchg
popa
push
shll
add
mov
push
sahf
sub
test
mov
insb
bound
aad
jecxz
jge
add
push
rcr
push
sbb
push
sub
pop
idivb
ljmp
jl
sbb
outsb
movsl
jae
sub
mov
imul
movsl
mov
mov
mov
insl
jo
dec
add
pusha
xchg
lret
xchg
add
xlat
jno
jge
cmpsb
mov
jge
test
ljmp
jb
xchg
int
nop
mov
mov
das
xchg
xchg
hlt
imul
mov
std
push
mov
xchg
aaa
mov
stos
imul
mov
mov
mov
push
mov
ss
stc
inc
popa
dec
call
mov
sbb
jne
mov
jl
mov
push
test
mov
xchg
test
xor
pcmpgtb
fiaddl
out
sbb
dec
dec
addr16
push
mov
push
ret
or
leave
mov
out
sarb
aad
sar
cmp
aam
lcall
sub
dec
gs
std
sbb
pop
mov
in
addl
jecxz
mov
cmc
cltd
and
xchg
push
pop
andl
cmpsl
xor
test
mov
mov
in
push
dec
push
jae
cmc
negb
jae
pusha
call
xorl
bound
jnp
sarl
dec
dec
nop
in
rorb
pop
push
mov
daa
mov
xlat
cmp
and
aam
adc
sti
jmp
lock
bound
int
jmp
jg
popa
lret
add
dec
mov
clc
xchg
push
pop
fcoms
xor
out
xchg
negb
mov
mov
gs
and
ljmp
fwait
adc
ret
mov
jo
sarl
jmp
add
xchg
xor
push
pop
sbb
mov
push
push
push
leave
push
mov
fnstsw
adc
xor
sbb
les
lea
outsb
mov
lret
fwait
outsl
pop
out
mov
pop
repnz
add
in
sbb
mov
data16
dec
adc
push
mov
xor
fistl
insb
jb
mov
pop
rorl
push
sbb
jecxz
popa
push
insb
jp
imul
mov
loop
dec
daa
outsl
std
xor
data16
or
sbb
out
inc
sub
pop
pop
lea
xchg
mov
push
test
inc
sbb
jns
into
mov
pop
jp
pop
mov
out
xlat
sbb
jmp
sti
fildl
pop
fstpl
test
adc
mov
and
mov
shrb
mov
and
add
sub
sub
mov
out
icebp
push
cli
and
fstps
mov
dec
mov
push
outsb
or
cmp
dec
xchg
xor
mov
dec
mov
mov
mov
ljmp
repnz
test
cmp
and
cmpsl
and
jne
sbb
mov
std
ficoml
popf
dec
mov
test
cltd
sbb
lea
lea
cli
out
xchg
sub
jecxz
mov
imul
outsl
add
sbb
and
es
dec
sbb
fbld
cwtl
sub
mov
and
xchg
inc
add
xchg
popf
out
sbb
popf
fs
sbb
out
xchg
je
dec
dec
repnz
or
leave
push
sbb
adc
rclb
cmpsl
std
sysenter
in
pop
inc
lcall
inc
arpl
stos
std
mov
popa
aam
rcrl
sub
rolb
xchg
test
add
inc
ret
and
dec
je
mov
adc
or
xchg
in
lods
push
push
lods
dec
jae
lock
movsl
subb
aaa
pushf
call
jno
jecxz
cmpb
sar
jns,pt
insb
mov
xchg
into
push
addr16
jl
out
add
icebp
enter
lcall
bswap
rolb
aam
cmp
and
pop
movsl
and
je
jns
insl
lea
adc
sub
pop
dec
rorl
in
aad
cmp
stos
mov
push
std
adc
push
jb
and
pop
adcb
cld
xchg
addb
nop
loop
mov
call
sti
jbe
mov
cmpb
imul
test
mov
call
xor
adc
imul
shl
mov
clc
sbbl
jmp
test
sbb
mov
mov
and
or
rcl
rcrb
mov
mov
lds
mov
aam
mov
lea
into
pop
push
xor
mov
mov
xorb
sbb
jo
addb
cmp
mov
or
pusha
imul
pop
out
push
aaa
call
stos
adc
mov
fwait
sbb
cmpsb
add
jl
repnz
mov
adc
movsb
mov
cmpsl
sbb
cmp
sub
mov
arpl
outsb
and
mov
pop
jl
cmp
lea
scas
lock
add
rcrb
mov
dec
ss
scas
cld
aas
fisttpll
fmul
and
shlb
mov
in
loope
out
adc
movsl
dec
in
enter
movsl
jecxz
mov
stos
or
dec
jmp
push
xchg
jge
ret
jecxz
rorl
test
les
scas
push
jbe
pop
and
xchg
ljmp
aas
xor
mov
mov
lods
xchg
adc
mov
inc
sahf
bound
push
or
test
mov
lea
pop
xchg
sub
cld
jo
out
cmp
pop
jecxz
js
pop
mov
int3
notb
mov
mov
pop
sub
loop
push
jae
fstpl
out
xor
push
sbb
adc
data16
jmp
push
mov
or
sub
xor
jp
std
loope
inc
mov
cld
pop
repz
lods
mov
mov
cwtl
jl
cmpl
adc
jmp
adcl
dec
push
rcrb
arpl
lret
int3
and
cwtl
int3
popl
cwtl
shl
leave
mov
adc
clc
pop
fistl
and
cs
test
jae
dec
xchg
ret
xchg
xor
sub
test
scas
shll
adc
fs
mov
xor
cld
das
mov
hlt
dec
lea
dec
sbb
les
aad
add
xor
mov
test
dec
dec
imul
cmp
in
push
fisttpl
jecxz
sbb
mov
sbb
or
lds
in
aad
daa
idivl
movsl
pop
jnp
test
xchg
dec
pop
sub
pop
sub
xchg
mov
lds
neg
frstor
push
jne
cltd
jns
cmp
inc
addl
mov
lret
pop
lret
iret
and
shrb
dec
movsl
push
movl
adc
jnp
push
loope
mov
fisttps
femms
mov
xor
jge
mov
jmp
sti
or
cmpsb
outsl
sub
insl
mov
mov
push
mov
ret
dec
lret
xchg
or
inc
arpl
mov
sahf
shll
daa
xor
lea
in
cmpsl
jmp
jmp
push
mov
insb
sbb
mov
enter
fdiv
mov
out
push
in
loope
std
cmc
sbb
orb
xor
mov
lods
mov
mov
or
inc
roll
rorb
into
dec
cmp
repz
ficompl
cmp
out
add
les
sbb
lcall
push
and
fdivr
mul
xor
lar
fwait
jl
and
mov
or
ficompl
cmpl
mov
xor
out
in
andl
jle
jle
mov
jmp
rcr
pop
arpl
xchg
pusha
xchg
movsb
push
in
or
and
popf
dec
jmp
sub
sub
mov
inc
or
xchg
pop
xchg
hlt
dec
xchg
xlat
clc
cmpsl
sbb
inc
xlat
inc
xor
add
adc
mov
push
mov
mov
cmpsb
out
mov
xchg
jge
jle
lea
lret
add
cmpsl
jmp
popf
jo
lea
aad
and
imul
in
out
dec
push
arpl
and
push
jns
pop
add
jno
loope
hlt
inc
xchg
mov
mov
ffree
int
sub
sahf
push
int
clc
mov
rorb
gs
cmp
clc
outsl
push
insl
mov
jnp
jge
enter
push
jb
cmc
sahf
std
scas
popa
nop
jnp
cmp
test
pop
push
mov
pop
jl
pusha
sub
lods
daa
call
lock
jp
pop
adc
mov
loopne
ds
test
pushf
cwtl
lds
mov
arpl
ror
xor
mov
scas
or
push
mov
jp
popa
xlat
lret
or
cmp
inc
pusha
nop
in
test
inc
punpckhdq
mov
sbb
ret
jns
mov
in
dec
clc
add
shl
xor
jae
call
adc
mov
or
jmp
addb
push
push
rcrl
mov
imul
sarb
adc
pop
cli
cwtl
outsb
cltd
sbb
adc
dec
mov
xchg
cld
and
or
add
aam
stos
movsl
xchg
sbb
push
mov
insl
cmp
into
repz
loopne
jp
mov
mov
mov
imul
xor
cmp
inc
and
pop
xchg
pop
lahf
push
push
adc
or
divl
mov
movlps
repnz
imul
test
dec
lret
or
add
xor
xchg
jecxz
popf
inc
imul
shrb
mov
push
inc
pop
sbb
sar
stos
jb
filds
stos
xchg
scas
es
aas
imul
hlt
das
daa
imul
pop
enter
dec
cwtl
push
dec
in
or
dec
fwait
jns
mov
mov
lret
push
xchg
movsl
sub
hlt
seta
mov
lods
sbb
xchg
inc
jbe
xor
mov
jnp
lcall
dec
jmp
mov
adc
test
cmpl
icebp
inc
or
push
mov
sti
pop
inc
in
fstpt
scas
es
mov
cld
fsubr
dec
push
js
ret
imul
sahf
xor
sbb
mov
mov
loop
adc
cmp
ja
jnp
push
add
fisttpll
jg
xchg
mov
inc
imul
push
mov
pop
sar
call
out
repz
aam
sub
mov
adc
lock
fidivl
js
push
or
push
imul
lock
push
adc
lock
or
jne
and
sbb
pop
add
into
mov
lret
aas
push
xchg
clc
mov
insl
imul
mov
xchg
jne
outsb
lea
dec
out
adc
divl
xor
xchg
ret
orl
add
jnp
xchg
or
je
inc
out
pop
push
mov
aad
inc
xchg
scas
outsb
sub
inc
icebp
dec
call
mov
mov
cltd
xchg
pop
clc
sbb
and
jp
loop
fcoms
jnp
in
inc
sub
jl
push
test
stc
shlb
mov
loopne
rcll
stc
mov
add
fcomps
pop
add
out
aas
pop
mov
sub
test
mov
sbb
mov
sbb
xchg
push
lds
mov
addr16
jle
shrl
dec
fwait
mov
scas
or
inc
and
cmp
fcoms
test
clc
dec
cmp
rorl
sar
jbe
cmp
xor
insl
xor
sub
popl
sub
in
cmpsl
or
mov
lods
mov
push
push
inc
adc
outsl
sbb
pop
mov
out
lods
push
inc
das
cld
std
xor
jne
cmpsb
data16
sub
mov
lcall
cmp
lahf
filds
jmp
sub
insb
inc
in
mov
mov
out
into
xlat
daa
xchg
lahf
data16
ljmp
mov
sub
dec
out
mov
xchg
sub
push
nop
and
pop
in
lret
sub
mov
and
inc
cmpsl
xchg
cmp
sbb
mov
and
inc
stos
and
clc
iret
out
ret
test
pop
into
adc
and
shll
jae
xor
dec
pop
outsl
cmpsl
fstpl
push
mov
sbb
out
mov
in
jo
lock
das
aad
push
mov
and
mov
nop
mov
sub
add
into
jns
and
test
addl
test
push
push
and
call
jl
inc
mov
mov
cmp
dec
cmp
in
fldt
shl
mov
cmp
adcb
arpl
fcomps
sub
out
ds
adc
xorb
into
test
sti
sub
ds
bound
xor
repz
imul
mov
test
sbb
leave
jnp
adc
ret
cmp
enter
imul
mov
mov
pop
sbb
pop
mov
push
pop
std
scas
outsb
xor
cld
push
xchg
sbbl
dec
shlb
dec
xchg
add
movsb
mov
ds
sbb
rcll
jno
mull
pop
dec
sub
cmp
lahf
pushf
imul
stc
aam
scas
adc
or
dec
mov
dec
pop
inc
lods
fs
push
aam
mov
or
arpl
add
data16
add
popf
jg
xor
stos
inc
mov
mov
mov
dec
jg
xor
idivl
or
sub
push
inc
and
pop
pop
in
aas
inc
rorb
loopne
cmpsl
sub
jae
mov
das
pop
sub
out
add
mov
jle
push
jmp
add
jg
xchg
cmc
mov
adc
mov
addb
xchg
mov
std
movsl
int3
dec
xchg
or
in
sbb
stc
jecxz
out
jg
enter
cwtl
mov
push
mov
and
leave
cmp
mov
fcomi
fisttps
push
ljmp
add
lcall
jmp
push
stc
xchg
les
js
or
pushf
in
nop
mov
aas
sbb
add
push
jp
cld
mov
enter
cmc
xchg
pushf
jge
add
sti
add
pop
cmp
fisttps
nopl
and
flds
dec
push
push
push
rol
inc
push
mov
insl
pop
leave
sbb
or
jl
dec
in
cmp
mov
call
loop
add
in
imul
push
popf
popf
inc
insb
xchg
into
inc
ret
mov
into
or
inc
scas
push
sbb
dec
mov
xlat
cwtl
test
lret
shrl
call
cmp
lahf
cmp
aaa
negb
lock
pop
aaa
mov
sarb
repnz
mov
sbb
dec
int3
mov
std
and
call
pop
sub
repz
dec
or
shll
jle
sbb
dec
nop
dec
rep
push
fisubrs
jbe
sub
into
fnstcw
cmpsl
fwait
or
std
sub
jp
or
or
push
outsl
adc
lret
mov
addr16
mov
loop
jecxz
loop
bound
push
xchg
outsl
push
sbb
mov
jmp
adc
dec
adc
inc
jecxz
cmc
jle
jae
and
fcoms
icebp
cmp
les
cmp
into
aas
movsb
imul
pop
stc
pushf
sbb
jb
daa
lcall
xlat
arpl
jns
dec
imul
test
mov
pop
jnp
xchg
mov
inc
adcl
incb
push
inc
sbb
or
data16
orl
and
inc
add
std
jmp
push
jb
adc
hlt
inc
repz
loope
xor
cmp
inc
mov
test
sub
sub
mov
out
out
imul
jecxz
cli
push
cmpsl
nop
movsb
mov
xor
out
xchg
sub
xchg
push
cmp
cwtl
rclb
lcall
and
in
loop
nop
dec
xchg
cmp
inc
sahf
pop
mov
mov
dec
inc
fwait
push
adc
mov
pop
nop
push
xor
cmc
adc
sbb
jo
mov
out
mov
aaa
mov
in
and
jb
pop
pop
pop
pop
mov
rcll
fdivs
popf
rcll
sti
lahf
je
sub
cmp
jns
push
insl
mov
or
pop
push
loop
dec
jl
bound
xchg
pusha
jmp
xchg
cmpsl
sub
pop
adc
int3
or
imul
fidivl
je
jne
ss
or
dec
mov
lret
sub
es
jae
dec
cli
imulb
inc
rolb
hlt
xchg
dec
sbb
push
jp
addr16
scas
mov
and
lods
mov
cwtl
aad
cmp
in
push
mov
aam
dec
xor
dec
nop
fstl
adc
es
lahf
in
psrld
imul
int3
ljmp
cmp
adc
xchg
and
xor
lods
xchg
stos
movl
or
mov
ds
jp
loopne
stos
mov
push
pop
out
and
jmp
scas
inc
call
andb
sub
jl
insb
cmp
mov
mov
or
sti
xchg
jge
ss
filds
cmp
in
push
sbb
mov
push
mov
cli
mov
jbe
xor
inc
push
cs
and
jno
mov
jns
or
cmp
xor
lret
jmp
xchg
pcmpeqb
gs
cld
and
fdivl
pop
mov
mov
jae
cmp
sbb
adc
push
jge
mov
dec
call
or
test
in
cmp
mov
jp
or
fucomp
gs
rcrl
in
imul
addr16
or
loope
jmp
push
sbb
fiaddl
cmp
pop
dec
jmp
popa
into
ljmp
adc
out
pusha
push
sbb
out
cmp
lret
push
aas
pop
out
add
sbb
bnd
push
fstps
aas
mov
mov
xor
and
pop
cmp
pushf
int3
call
dec
jo
in
prefetchnta
out
addr16
addl
push
push
pop
jnp
xchg
sub
loop
mov
mov
adc
repz
filds
dec
or
adc
cmp
data16
jae
push
lahf
fcoms
xor
push
jge
pusha
rclb
movsl
scas
iret
add
popf
cmpl
dec
mov
movd
push
add
fcoml
sub
and
pop
lock
inc
mov
jns
arpl
pop
jmp
mov
push
fmull
stos
push
and
xchg
sub
inc
das
jl
adc
lcall
jne
push
fimull
fsubrs
faddl
or
mov
enter
aaa
mov
xor
bound
push
addw
out
inc
and
aaa
aam
insl
push
leave
sub
cs
jbe
sbb
test
data16
loope
lahf
incl
test
cmp
pop
mov
pop
enter
xor
popa
test
addr16
pmaxub
daa
scas
cmpsl
mov
mov
xor
mov
dec
mov
jle
jo
cmp
pop
xor
test
push
leave
les
add
loop
and
cmpsb
cmp
adc
fcmovnu
pop
jbe
scas
repz
lods
xor
xor
adc
adc
xor
out
adc
mov
negl
out
aaa
pop
pop
xlat
mov
in
xchg
mov
push
rorl
cmpsl
sub
repz
xchg
ficoml
enter
outsl
movsl
inc
push
sbb
mov
cmpsl
dec
inc
pop
mov
xor
lods
cmp
stos
push
lock
in
push
mov
push
push
dec
nop
int
lods
cld
mov
push
push
sbb
inc
dec
pop
sbb
and
adc
insl
shr
pop
sub
push
stc
push
loop
ljmp
sub
jge
in
mov
incl
jb
mov
mov
mov
andb
xchg
add
or
mov
xchg
or
outsl
push
jae
fsub
scas
jl
sbb
add
push
loopne
jmp
aad
sub
mov
hlt
xchg
fcmovb
ljmp
shll
pop
fidivs
xor
and
and
lods
pop
out
dec
add
and
mov
and
jbe
lea
sar
fistpll
xor
loopne
jmp
ss
push
mov
xlat
fdecstp
pop
adc
bound
add
and
sti
jmp
add
test
iret
sbb
shr
lods
inc
push
arpl
xchg
fstl
pusha
js
mov
icebp
add
mov
movsl
cs
adc
and
jbe
call
adc
test
adc
mov
cltd
pop
loope
jb
rcr
or
sub
adc
sti
enter
jno
xchg
inc
daa
mov
aam
xchg
cli
push
sbb
sbb
loopne
rcrl
inc
pop
in
mov
loop
outsl
stc
les
icebp
xor
pop
imull
jmp
aaa
scas
sub
push
mov
into
lret
test
insb
repz
mov
xor
lods
jnp
addb
inc
or
jb
dec
xor
xchg
nop
repnz
fiaddl
test
ret
leave
dec
fiaddl
shrl
and
int3
je
ss
jg
mov
je
std
cmc
sbb
push
push
iret
push
lret
inc
pushf
pusha
pop
xchg
es
call
stc
or
sbb
or
push
add
xchg
int
mov
dec
fstpl
sbb
out
pop
xor
bound
daa
cmp
test
popa
dec
pop
jecxz
out
clc
inc
mov
roll
xlat
ljmp
sbb
rcrb
orl
in
or
call
cltd
push
sbb
lahf
mov
in
xchg
jnp
dec
push
and
xchg
repz
or
daa
inc
jge
xlat
call
cmc
add
push
mov
adc
mov
movsb
mov
and
jmp
and
dec
mov
ss
lock
out
jno
xlat
test
fwait
popa
outsb
push
insb
imul
test
lahf
push
data16
xor
bound
dec
test
std
xchg
sub
cwtl
jge
insl
inc
dec
movsl
push
dec
lods
xchg
lcall
inc
arpl
adc
add
mov
test
inc
sbb
add
loopne
movsl
pop
shl
push
pop
popf
xchg
fimull
cmp
ror
lahf
sbb
cmp
movsl
popl
xchg
sub
mov
xor
fdivr
cmp
pop
lds
lea
jne
jmp
and
movsb
push
sub
adc
jmp
cmc
xchg
xor
fmull
jle
scas
sbb
lock
bound
out
dec
pop
das
xchg
lods
cmpb
mov
inc
call
cmpsb
std
mov
es
inc
mov
mulb
out
lea
dec
add
fxch
arpl
lods
adc
dec
dec
addb
mov
andl
push
xchg
aam
hlt
xorb
test
test
jecxz
lret
scas
push
test
xor
push
fwait
sub
jmp
loopne
imul
adc
addr16
loop
movd
lcall
inc
cmp
pop
test
dec
int3
les
into
xor
sahf
shll
jmp
cmp
sub
fcoml
lods
adc
dec
xchg
repz
mov
hlt
mov
cmp
push
test
je
lods
or
dec
pusha
push
das
mov
les
push
or
xchg
sbb
cmpb
jo
adc
outsl
jmp
inc
lods
dec
jb
into
mov
cmp
xchg
insl
aaa
mov
aad
adc
daa
loop
sahf
mov
mov
iret
test
or
movsb
mov
pop
imul
mov
jae
mov
adc
jl
inc
sub
out
mov
xor
mov
mov
xor
inc
incl
add
cmp
jb
jmp
mov
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
imul
xor
add
lea
mov
add
mov
mov
xor
add
jne
mov
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
imul
xor
add
lea
mov
add
mov
mov
xor
add
jne
mov
mov
xor
lea
mov
incl
mov
xor
add
jne
jmp
mov
mov
jmp
mov
mov
xor
xor
sub
jmp
mov
cmp
mov
pop
int
jl
pop
jl
repnz
adc
fidivrs
fwait
ljmp
xor
mov
jg
mov
ja
repz
xor
lods
ljmp
add
jg
jno
ret
xchg
bound
pusha
jnp
inc
insb
in
fidivl
ret
out
mov
and
repnz
mov
js
fsub
test
push
adc
sub
sbb
aaa
jl
jne
sub
inc
pusha
mov
rclb
mov
inc
notl
test
lahf
push
dec
xor
mov
movq
mov
xchg
ljmp
out
xor
cli
loop
mov
es
mov
cli
jg
int3
cmp
out
fnstsw
xor
outsb
adc
lds
out
xadd
add
stc
xorl
pop
popf
out
sub
out
and
movl
int
arpl
outsl
popf
stc
and
pop
movsl
xor
imul
ja
push
test
xchg
mov
xchg
es
stos
test
ljmp
xchg
cs
inc
mov
sbb
and
xchg
pop
bound
ret
xchg
mov
addr16
int
mov
fbld
dec
daa
add
shufps
push
jge
cmp
fcompl
add
shrb
xchg
dec
mov
pop
in
mov
lods
ss
push
test
nop
lds
imul
aas
push
out
loop
enter
push
add
add
orl
mov
test
push
hlt
add
out
int3
ret
je
lea
add
and
pop
jno
iret
nop
pop
mov
mov
bound
pop
fidivl
aas
jnp
adc
mov
icebp
pop
lcall
lock
mov
push
lret
fldcw
pop
in
inc
sbb
jecxz
push
mov
or
mov
push
add
adc
adc
in
or
cmp
sbb
pop
mov
cs
lret
idivl
pop
jo
out
or
cmp
and
fists
dec
in
or
add
mov
insl
and
mov
pop
clc
fbld
es
cmp
movsb
adc
je
ss
adc
xor
in
adc
sbb
scas
sbb
xor
call
inc
push
into
adc
xor
or
push
inc
inc
dec
push
cmc
cwtl
test
mov
in
push
loop
andb
insb
add
lds
pop
js
cmp
and
pop
adc
jle
imulb
mov
adc
jmp
add
pop
add
mov
mov
cmp
inc
mov
lahf
into
addr16
xchg
flds
sub
loope
cld
loope
aas
cmp
mov
aam
fidivrs
frstor
stc
cld
das
ret
loopne
fidivl
fisttps
dec
xchg
shlb
or
sbbl
jae
scas
and
les
ds
adc
les
adc
pop
aas
jo
aaa
in
pop
xchg
mov
lret
pop
inc
jecxz
sub
sub
int3
dec
mov
lea
inc
or
negl
jne
loope
adc
mov
pop
fwait
subb
xlat
repnz
repz
idivl
and
sub
jo
lods
daa
iret
roll
cltd
jno
rcrl
ds
xor
dec
push
jne
xchg
mov
gs
inc
sub
ljmp
insl
cmpsl
popa
out
xchg
popa
push
les
fnstenv
sbb
jne
xchg
inc
xchg
cmc
adc
punpcklwd
and
or
and
pop
ficoml
xchg
mov
cmp
dec
add
insl
fdivr
icebp
rcll
fsub
mov
add
xor
sub
jl
inc
add
scas
jno
sbb
sbb
adc
test
xchg
jbe
imul
and
push
pushf
cs
or
mov
sbb
enter
jge
adc
mov
cli
jne
fs
push
stos
pop
jae
fldenv
xor
mov
push
add
sahf
jnp
jne
scas
mov
inc
imull
or
add
icebp
aaa
pop
push
or
jbe
sub
xchg
mov
or
mov
jp
imul
inc
arpl
rcrl
xor
xchg
push
sbb
lcall
push
outsl
mov
clc
sub
dec
and
mov
push
std
xor
insb
dec
add
test
fiadds
mov
inc
push
pushf
add
or
xor
sbbl
daa
jbe
mov
testb
into
fmull
mov
movsl
cmpsb
stos
repz
shlb
popf
push
cltd
push
iret
jp
aas
mov
and
mov
loopne
xor
pop
push
fcompl
sbbl
int
add
xchg
push
or
mov
fimuls
out
xor
push
inc
loope
mov
movsb
sbb
repz
inc
jae
inc
xchg
dec
sub
dec
mov
lret
cmp
ds
push
cmp
pop
xor
call
jl
mov
xchg
xchg
pop
jno
leave
jno
mov
pop
jb
das
adc
or
adc
lods
sbb
dec
push
pop
mov
xchg
or
add
popf
enter
aad
leave
jbe
imul
movsb
pop
pop
or
push
cmpsb
js
ljmp
movb
imul
pop
mov
int3
mov
or
cmpsl
dec
subb
out
ret
int
mov
and
push
out
shlb
aas
adc
xlat
notl
test
dec
sub
pop
xor
test
popa
cmp
inc
push
sbb
mov
mov
pushf
dec
xchg
gs
jns
push
push
ljmp
pushf
mov
jne
arpl
pop
les
test
sub
out
cmp
cmpsl
adc
mov
fwait
inc
mov
ljmp
dec
pushaw
lods
push
mov
cli
fstps
test
jbe
mov
notb
sbb
xor
push
cmp
jnp
std
adc
notl
add
addr16
cmc
fsubrl
add
or
inc
cmpsl
xor
mov
bound
fbld
add
rol
nop
popa
push
fwait
fs
mov
xchg
add
lret
es
jmp
mov
movl
push
mov
add
mov
test
cmp
cmc
fdivp
push
pop
dec
mov
imull
or
mov
les
add
test
dec
rol
sub
cmpsl
xor
add
mov
cld
test
cwtl
imul
imulb
or
sarl
push
call
subl
je
leave
push
inc
pushl
iret
xor
mov
push
xlat
cld
imul
call
scas
dec
dec
dec
mov
into
mov
inc
push
sbb
ja
fistps
test
jo
outsb
rcrl
xor
and
inc
cmp
test
aad
pop
mov
cmp
bnd
mov
jno
push
dec
mov
fdivl
sub
cmp
xor
mov
push
mov
inc
xchg
inc
adc
sbb
inc
into
push
mov
push
mov
pop
mov
testl
dec
mov
aaa
adc
jl
lods
outsl
imul
jo
ret
push
stos
scas
mov
add
adc
jno
push
mov
icebp
lcall
ja
or
in
outsb
sbb
mov
stos
add
idivb
xchg
cmp
loope
shr
mov
pop
lret
mov
and
jmp
xchg
push
xchg
mov
dec
xchg
movsl
xchg
insl
adc
adc
pop
push
xchg
push
les
dec
jae
push
add
aas
je
pop
jl
jae
jb
iret
mov
push
jo
das
add
in
insl
mov
push
loope
sbb
or
mov
mov
dec
int
ret
xchg
test
in
or
lea
out
popa
sti
iret
arpl
pop
xor
out
or
sub
js
sbb
out
xchg
dec
xchg
daa
sbb
sbb
cmc
pop
jne
testl
pop
xor
aam
push
in
rcrl
xchg
mov
jle
pop
xchg
or
pusha
out
adc
mov
push
sbb
in
and
mov
cmp
mov
fwait
sub
cmpsb
mov
dec
sahf
insl
add
cltd
fstl
add
mov
push
lar
ds
inc
mov
mov
ret
sahf
scas
xchg
cmp
cli
aaa
sub
xor
jo
clc
fdivr
add
xor
fisttpll
xchg
and
in
adc
lds
hlt
jno
jo
insl
aaa
nop
xchg
bound
cmp
adc
or
and
adc
jg
xchg
clc
lret
adc
hlt
arpl
ss
cwtl
xor
xchg
xor
fxch
outsl
test
dec
lods
std
outsl
pop
pop
rcrl
push
inc
in
jbe
jns
popa
inc
std
jle
test
adc
lods
cmp
jae
cmp
insb
arpl
and
pop
jbe
cmpsb
lret
lea
inc
push
loopne
jnp
mov
cmpsb
push
clc
or
jecxz
es
add
cmc
stc
inc
and
lret
fsubs
sub
dec
xchg
xorl
dec
xor
ss
das
addb
xlat
jp
mov
pop
sbb
in
or
ljmp
lds
inc
adc
xor
lds
and
adc
xor
pop
push
loop
pop
xchg
lea
mov
aas
and
or
neg
xchg
mov
mov
cltd
or
cmp
and
inc
sarl
jne
xor
mov
cmp
addl
fildl
test
mov
enter
outsl
pop
lock
into
inc
ret
mov
xor
ret
xchg
lods
daa
aad
in
xchg
adc
je
dec
jo
outsb
mov
ret
or
xchg
arpl
sti
addr16
clc
push
dec
pop
pop
xchg
xor
adc
jo
jp
or
jb
inc
cmpsb
xchg
jmp
call
add
cmpsb
loope
xchg
inc
mov
aaa
test
sar
aam
xchg
sbb
shlb
ja
mov
mov
pop
scas
addr16
sti
sti
and
mov
adc
cld
push
in
and
icebp
stos
fld1
jmp
call
pusha
dec
push
xchg
mov
xor
mov
in
inc
mov
insb
mov
repnz
in
outsl
push
in
loope
fimuls
iret
jle
lea
das
shr
sub
loop
lea
roll
stc
and
sbb
add
pop
scas
je
cmp
pop
dec
mov
push
jmp
incb
xor
push
int
and
xchg
cmp
cmp
xor
sbb
pop
addr16
add
cmp
mov
aaa
or
push
add
ds
dec
loop
add
pusha
stc
lret
rcrb
adc
into
xor
jecxz
jno
je
icebp
jl
stos
pop
mov
cs
sti
adc
mov
mov
leave
imul
into
cmp
xor
sbb
push
dec
out
xor
jno
jge
dec
mov
or
ret
imul
sub
xor
ficoml
lcall
pop
xor
sti
or
sbb
test
adcl
push
js
nop
sbb
dec
loopne
xor
xchg
pop
outsl
and
jg
xchg
pop
mov
psllw
test
xlat
xchg
sbb
add
hlt
in
outsl
cmp
scas
out
stc
fs
pop
scas
sahf
jmp
stos
cmc
dec
push
jno
cmp
fcoms
or
sahf
imul
push
fmul
add
adc
xor
or
mov
cli
pop
sbb
sbb
les
gs
fdivs
sbb
or
or
scas
in
lods
xor
mov
add
cmp
fadd
frstor
pop
push
stc
gs
dec
lods
push
push
mov
popa
dec
jmp
lret
popl
and
in
xchg
push
stos
jnp
mov
mov
mov
addr16
fildll
js
pop
loope
xchg
mov
pop
or
dec
not
push
adc
jecxz
outsb
mov
pop
adc
out
xchg
cltd
pop
stc
pop
int
and
mov
bound
out
sbb
mov
dec
imulb
and
out
mov
mov
mov
les
xchg
dec
mov
addl
sub
sbb
out
cmc
push
aad
pop
insb
test
mov
or
mov
outsb
jg
ljmp
ss
ret
mov
jae
jbe
jno
stos
cmp
das
xlat
xchg
test
test
in
insl
add
pop
add
pusha
rclb
or
clc
ds
add
push
jnp
imul
xlat
pushf
add
scas
scas
mov
mov
sub
sub
mov
jge
xor
or
inc
jno
inc
lock
outsl
mov
pop
add
sbb
sub
mov
mov
jmp
pop
mov
call
mov
pushl
push
push
lcall
jbe
dec
mov
sbb
mov
mov
add
mov
fdivrs
leave
mull
xor
lcall
ja
popf
lret
or
mov
dec
fbld
push
adc
popa
lret
mov
and
cmp
dec
sbb
xchg
dec
mov
not
stos
aaa
fists
nop
and
in
xor
push
fisubrl
adc
xor
xor
adc
sub
push
stos
add
in
repnz
jmp
jle
adc
sti
mov
test
adc
inc
jmp
lock
or
fwait
aam
cmc
push
sub
adc
aam
mov
push
aad
pop
xor
inc
cmpb
pop
jno
sub
pop
mov
cmpsl
fucom
add
cmp
sbb
or
add
add
pop
ja
cmc
in
xchg
stc
add
mov
inc
inc
cli
jmp
sti
jbe
and
cmpsb
aam
iret
cld
xor
mov
insl
pop
in
aam
lods
xor
in
fidivl
es
bnd
pop
inc
inc
test
jns
cwtl
mov
clc
nop
xchg
imull
sti
dec
sbb
sub
cmp
push
addr16
stos
push
mov
lods
mov
jmp
jno
int
imul
jmp
mov
addl
sbb
pop
and
fsub
adc
fmull
jp
rcll
call
xor
jns
inc
loopne
add
call
imul
xor
inc
aad
push
pop
fsubr
and
in
cli
jne
sub
scas
fdivrp
cltd
int3
jmp
call
cmp
aad
sub
and
and
out
out
sahf
or
lods
jl
cmc
repnz
lea
sbb
push
or
faddl
push
xor
lcall
mov
inc
sub
jle
push
add
and
dec
int
fsubrs
vpsllw
sub
add
lcall
out
push
jo
and
push
leave
and
pop
out
and
inc
jmp
xchg
fldcw
pop
enter
pop
ja
sub
inc
addr16
mov
roll
jbe
scas
sub
pop
pop
outsb
push
scas
xchg
cmp
jge,pt
lock
and
sar
lret
repnz
adc
cmp
rorb
fwait
sub
mov
ljmp
add
lret
or
push
sbb
mov
std
repz
test
inc
icebp
and
cwtl
stc
js
pop
mov
xor
cmp
push
and
jecxz
sbb
sbb
push
adc
pop
test
or
mov
push
mov
in
mov
mov
mov
negb
add
push
add
add
rclb
jecxz
sub
loope
mov
mov
jle
xchg
in
xor
sub
jl
nop
xchg
xchg
rorb
pusha
cmc
sbbl
jbe
xor
add
dec
loopne
mov
fldcw
lret
clc
test
arpl
mov
jmp
pop
ret
divl
movsl
cld
sbb
xchg
push
movsl
push
ret
mov
hlt
dec
pop
sbb
lret
jns
xor
push
push
xor
sbb
xlat
inc
mov
imul
bound
mov
lods
add
inc
aam
test
mov
hlt
movsb
cmc
cmp
imull
daa
movsl
lea
cltd
stc
push
pop
sub
xor
cli
adc
data16
xor
pop
jp
xor
xor
mov
jg
addr16
leave
addb
fdivr
sbb
sub
mov
outsb
mov
ret
loopne
ret
or
jge
adc
and
dec
popa
hlt
imul
cmpsb
shrl
and
popa
rcll
add
imul
aaa
rol
popa
xchg
inc
stos
mov
mov
sub
scas
mov
mov
fiadds
insb
push
push
xor
add
pop
push
xlat
in
shl
repnz
lds
xchg
mov
fs
xchg
decb
mov
push
sbb
cmc
fs
dec
fcomps
stc
mov
push
xchg
add
mov
ss
shrl
push
xor
clc
rcrl
roll
movsl
jb
mov
imul
in
fstl
jns
mov
insb
andl
lock
inc
leave
mov
jo
push
dec
arpl
push
add
lea
xchg
cmpsb
sbb
mov
bound
add
stc
les
xor
sbb
or
mov
xchg
je
fdivrp
jle
jecxz
or
and
xchg
notb
test
jmp
adc
ror
stos
xor
dec
data16
mov
lcall
clc
mov
inc
adc
push
rclb
nop
movsl
lcall
sbb
fcmovbe
jmp
cmpsl
mov
insl
fists
sbb
les
insb
jg
and
adc
inc
mov
adc
roll
xor
cmp
mov
pop
lea
xor
pop
lods
sar
leave
std
inc
dec
lea
imul
push
sti
mov
cmpsl
or
sbb
sar
mov
lea
out
xorl
pusha
js
int3
icebp
fnstenv
dec
mov
adc
popf
pop
test
dec
add
lds
cld
je
sahf
les
and
inc
jns
nop
fisttpll
jne
push
arpl
xchg
mov
std
cmp
movb
movsb
adc
in
cmp
xorb
stos
jg
nop
xor
mov
add
xchg
lods
pop
push
jl
push
call
lea
stos
mov
adc
sub
xchg
dec
sub
out
and
sub
out
ret
xchg
inc
repnz
pusha
cmc
push
push
cwtl
pop
shrb
stos
inc
sbb
pusha
jno
mov
enter
add
add
mull
push
loopne
jbe
lcall
addr16
sti
pop
call
icebp
dec
mov
incb
and
outsl
inc
loop
pop
imul
pop
mov
push
adc
fsubrs
cmp
inc
je
xor
jge
and
mov
daa
adc
add
cld
xchg
rcr
test
repz
cmc
mov
cli
dec
stos
mov
add
pop
nop
leave
mov
adc
and
xchg
mov
and
fmull
push
mull
out
add
not
and
sti
or
cmpsl
sub
mov
in
push
sub
aam
mov
mov
imul
inc
cmp
test
aam
dec
out
or
inc
enter
mov
int
mov
add
xchg
jae
loope
lahf
mov
xchg
pop
lds
fwait
sahf
xchg
inc
ljmp
fs
std
repnz
push
push
push
in
mov
xor
or
add
addr16
jae
mov
icebp
xchg
or
pcmpeqd
ficoml
and
pop
sub
stc
xchg
hlt
inc
ffreep
push
mov
out
add
or
mov
mov
sub
je
lcall
pop
js
fnstenv
mov
stc
rol
repz
push
jo
push
test
insl
mov
xchg
jae
push
insl
js
pop
jno
outsl
push
sti
xchg
and
mov
std
or
pop
add
and
push
adc
cs
inc
jp
push
mov
jp
jg
fisttpl
xchg
das
int3
sbb
pop
jp
roll
into
pop
dec
and
cmp
movsb
jp
lods
cwtl
out
int3
push
xor
stos
jmp
loop
push
fbstp
mov
fstpl
mov
frstor
out
adc
sahf
rolb
sub
imul
pop
mov
fmuls
adc
or
xchg
stos
cmp
pop
pop
sub
cmp
iret
sbb
andb
pop
pop
mov
call
inc
pop
jp
lods
inc
daa
imul
add
scas
lods
inc
lods
in
jns
and
scas
mov
call
loope
jmp
inc
cmp
ror
inc
mov
orb
adc
shr
mov
jno
inc
push
push
sbb
push
pop
fisttpll
and
rcl
or
jl
lock
add
mov
dec
fmull
bound
mov
lock
inc
subl
adc
jecxz
sub
out
mov
popf
enter
xor
aad
mov
lret
mov
paddusw
mov
sbb
enter
and
and
mov
jae
sbb
leave
and
sbb
clc
mov
mov
pop
dec
and
lods
jmp
stc
jle
jl
inc
sti
shlb
mov
lea
test
sar
into
stos
mov
shrl
dec
push
and
push
and
mov
xorb
loopne
inc
xchg
and
clc
or
out
cmp
jmp
lods
pop
cmp
mov
lods
sub
cli
push
adc
not
pop
mov
push
xlat
and
divl
pop
xor
sahf
xchg
in
test
inc
mov
xor
push
mov
mov
push
icebp
adc
ret
mov
xchg
push
into
outsl
and
mov
ljmp
rclb
cmp
ret
jg
inc
mulb
das
cmp
push
inc
mov
stos
repnz
cmp
dec
push
fs
jne
inc
mov
scas
or
sub
add
xlat
pop
clc
mov
mov
mov
add
mov
nop
and
or
mov
sti
mov
push
mov
lret
fadds
leave
addl
jbe
pop
incl
popf
ja
sbbl
jle
fists
inc
cmp
jae
push
idivl
mov
cmpsl
jae
mov
xor
push
lea
adc
lahf
and
inc
lock
ss
and
xchg
in
ja
inc
push
dec
mov
or
mov
das
mov
movsl
aas
inc
push
sub
std
sti
ja
loop
scas
mov
add
cltd
pop
shrl
add
loope
inc
lods
mov
sub
xchg
stos
aad
fistpl
addl
addr16
ss
stc
mov
fdivrl
and
push
or
xchg
push
arpl
test
pushf
in
cmp
jbe
scas
mov
pop
push
std
les
int3
push
inc
leave
or
mov
xchg
or
xchg
sub
out
inc
std
hlt
scas
scas
or
popf
out
pop
xchg
lods
or
or
ret
xchg
in
cli
aaa
movsb
in
cmp
mov
cmp
aaa
mov
movsl
jae
dec
popa
aad
dec
arpl
shll
in
mov
ret
add
data16
sbb
cmp
push
les
dec
and
addr16
out
leave
mov
jne
out
jecxz
or
cs
andl
mov
add
push
pop
inc
loop
adcb
inc
xlat
lock
outsb
movl
push
stos
movsb
pop
gs
sbb
dec
xchg
or
jne
lods
aas
fwait
cmc
sub
ss
mov
adc
inc
inc
pop
call
out
ljmp
popa
clc
out
jbe
jbe
xchg
mov
cmc
push
data16
xchg
and
fdivrs
mov
out
push
inc
lret
fsubr
loopne
mov
adc
int3
es
xchg
jae
out
adc
xchg
lods
cmp
popf
mov
rclb
sub
mov
roll
test
add
push
mov
jbe
sbb
in
mov
pop
mov
cs
adc
fdivs
shll
cmpsb
lock
movsl
add
cmpsl
jbe
movb
fldl
mov
jmp
leave
iret
xor
add
mov
out
and
popf
inc
pop
add
pop
ret
jae
inc
sbb
out
fs
les
fwait
inc
jns
ror
dec
fwait
jp
aaa
and
xchg
js
repnz
enter
mov
sub
and
out
push
xchg
sub
jecxz
mov
test
daa
sbbl
xchg
mov
testl
dec
ret
dec
and
js
jae
adc
test
pushf
loop
inc
cmp
popa
decb
arpl
iret
xchg
rcrb
out
dec
iret
mov
ds
daa
mov
aas
pushf
leave
rcr
hlt
int
movb
pop
test
fmull
adc
in
mov
cld
add
or
dec
dec
add
or
fsubp
std
hlt
mov
xor
mov
mov
nop
loopne
inc
subl
addr16
cmc
push
cmpsl
sub
pop
pop
cmp
jmp
jp
mov
inc
fstpt
xchg
out
pop
xorl
xchg
or
test
je
mov
xchg
pop
jne
sbb
and
add
pop
jecxz
jmp
sarl
fiadds
xor
pop
mov
lods
jne
push
negb
insl
in
add
push
jmp
ret
xlat
mov
cmp
scas
xor
jmp
sbb
popf
jmp
divl
shll
mov
xor
out
inc
sbb
pop
in
aam
add
out
mov
and
in
dec
lds
lods
mov
jmp
pop
add
aad
adc
xlat
lock
test
and
jb
or
ja
xchg
cmp
jnp
dec
jnp
mov
add
sahf
pop
stos
fndisi(8087
test
negb
dec
imul
mov
jle
inc
pop
jns
ja
cmp
pop
or
pop
pop
mov
mov
mov
loopne
je
push
sbb
loop
test
jmp
test
lret
xor
mov
out
dec
add
cmp
push
cmp
push
xor
pop
adc
daa
dec
mov
insb
xor
test
loop
roll
mov
pop
sub
rcr
sar
gs
adc
ret
mov
xchg
and
xor
std
lar
xchg
mov
mov
fildl
xlat
cmp
jae
popf
mov
mov
call
rorb
jge
or
dec
cmp
xchg
add
add
imul
scas
divb
push
mov
scas
aas
mov
cld
adc
cmp
call
insl
mov
in
lret
adc
loope
xor
movsl
ss
push
or
add
jle
sub
icebp
jb
inc
xor
scas
mov
out
mov
xor
inc
sbb
sbb
xchg
xorl
loop
or
aaa
xor
mov
outsl
xor
cmpsl
jae
test
inc
push
fst
xchg
dec
pop
jge
lock
mov
or
dec
stc
xchg
or
jecxz
or
push
or
les
fiaddl
mov
push
push
lret
fadd
ljmp
fs
pop
imul
outsb
adc
or
and
dec
scas
dec
xchg
loopne
stc
xchg
adc
das
mov
dec
cmpsl
movsb
into
xor
daa
mov
in
cwtl
stos
ret
cmc
push
lock
xchg
push
es
ss
or
or
pop
or
sub
xchg
fcom
ss
inc
sub
fildl
call
pop
adc
test
dec
xor
cmp
outsl
lahf
call
and
lods
ss
cs
jae
dec
jb
outsl
fwait
repz
or
adc
mov
or
stos
jle
mov
or
fsubrs
mov
cmpsb
lret
pop
xor
push
jecxz
cmpb
cmp
xchg
push
dec
inc
out
sti
dec
xchg
push
mov
inc
cli
adc
add
or
mov
syscall
imul
push
inc
or
xchg
pop
adc
jmp
adc
repnz
inc
mov
call
and
add
cmp
jecxz
lret
in
or
adc
mov
stos
cmp
and
cmp
sub
loopne
stos
and
loope
push
int
ja
mov
push
enter
outsl
movsb
mov
push
cmp
pop
inc
mov
addr16
cmp
pop
je
jno
cmp
scas
lret
mov
test
push
es
and
in
or
daa
mov
or
sbb
ja
inc
movsb
inc
es
adc
aad
jp
cwtl
add
mov
fisubl
inc
out
ret
loopne
push
mov
push
ljmp
cmpsb
push
xorb
fld
push
out
imul
mov
test
pop
cmc
cmp
inc
inc
cld
out
arpl
xlat
sahf
add
std
out
xchg
std
push
scas
jbe
mov
inc
ret
sbbb
or
enter
push
inc
negb
sbb
and
pop
mov
arpl
xchg
jl
fidivrl
dec
iret
loop
cmp
test
mov
lahf
inc
mov
enter
inc
ljmp
xor
cwtl
push
mov
push
fwait
or
pop
add
je
mov
imul
das
add
xchg
dec
adc
aas
lret
sub
push
mov
xchg
loope
arpl
hlt
pop
loop
push
jmp
cwtl
sbb
movsl
sub
int3
dec
lock
or
lret
push
mov
mov
ss
mov
fld
lods
push
sub
dec
sbb
or
fs
dec
cmpb
mov
or
fstpl
add
or
sub
nop
test
sub
stc
dec
insb
adc
xchg
cmp
imul
and
add
int
cmp
push
mov
mov
lds
stc
or
imul
mov
cmp
out
pop
mov
stos
pop
test
insb
fimuls
jnp
shll
inc
sub
add
xor
lahf
rclb
jnp
cmp
sub
fiaddl
xor
inc
call
push
xor
daa
ret
out
daa
scas
sahf
pop
test
jmp
das
xchg
xchg
or
into
xor
mov
mov
mov
imul
xor
add
lea
mov
add
mov
mov
xor
add
jne
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
xor
imul
add
lea
mov
add
mov
mov
xor
add
jne
jmp
insb
jns
sbb
mov
push
cmp
jl
pop
pop
jl
idivl
add
adc
mov
pop
xor
jo
push
pop
inc
adc
dec
cli
jbe
xchg
sahf
mov
movsl
movsb
mov
sbb
ret
mov
mov
fistps
test
push
scas
xor
imul
adc
adc
xlat
jecxz
adc
loopne
pop
mov
scas
mov
nop
stos
jno
sub
loope
mov
pop
popf
std
push
pushf
adc
out
mov
jae
pop
test
sub
xchg
not
loopne
js
movl
repnz
mov
sti
pop
outsb
mov
add
jo
mov
vpshufd
pop
mov
sub
xchg
pop
xchg
push
cmp
xchg
xchg
sarl
push
movsb
fiaddl
push
push
andl
fnsave
mov
in
adc
jge,pn
and
pop
in
repz
or
mov
xchg
lea
xor
sbbb
add
ja
inc
sub
push
sbbl
ss
push
and
pop
gs
std
fdivl
lcall
ds
aas
mov
and
adc
add
cs
test
loop
int3
in
shll
inc
mov
xor
xor
jp
in
mov
and
inc
xchg
adcl
dec
mov
jle
daa
gs
mov
mov
sub
int
sub
jmp
mov
iret
jbe
push
sbb
in
imul
scas
neg
mov
jg
aaa
fs
or
jno
xorl
pop
mov
fwait
sbb
fs
mov
loop
xchg
es
orb
mov
push
dec
insl
movsl
jno
fsubl
mov
lea
push
cmp
fld
test
mov
xchg
popa
mov
and
lahf
xchg
push
push
jl
dec
adc
loope
xor
test
popf
mov
jbe
pop
sub
mov
lods
sub
adc
out
mov
arpl
ret
insb
inc
mov
cmp
cmp
mov
mov
sbb
les
rcrb
mov
adc
xor
mov
lds
jge
and
das
push
div
lahf
pushl
stc
mov
popa
mov
dec
jl
shrl
cmpsb
mov
daa
cmpsl
pop
xor
cmpl
xor
loope
push
push
aas
inc
jbe
cmpsl
imul
jge
mov
or
dec
sub
mov
jb
mull
aaa
imul
mov
jbe
fnstenv
movsl
dec
leave
and
push
adc
cwtl
xor
xor
sbb
leave
pop
inc
std
fists
aam
xchg
mov
in
mov
pop
pop
scas
imul
push
pop
pushf
pusha
pop
pop
mov
adc
test
xchg
sbb
push
xor
xrelease
insb
xchg
jmp
lret
ljmp
xor
sahf
sub
fpatan
loope
and
pop
or
inc
mov
dec
push
push
mov
pop
fcoms
loop
or
inc
rol
and
aad
hlt
push
push
dec
das
cli
mov
jae
cli
mov
mov
inc
aaa
pushf
xchg
add
mov
test
sub
dec
or
push
pop
sub
push
fst
dec
cwtl
lods
test
pop
imul
xchg
sbb
pop
push
bound
stos
rolb
subb
je
btr
outsb
dec
das
aad
push
xchg
adc
pushf
xchg
cld
cmp
loopne
mov
int3
sub
push
jle,pt
sub
mov
mov
fwait
mov
stos
dec
or
cmp
cld
mov
mov
jp
sbb
push
mov
jg
or
outsl
int
lret
lret
or
stos
push
mov
or
mov
loopne
push
div
es
dec
adc
or
push
and
xor
mov
inc
std
mov
mull
std
lret
mov
jg
pop
movsb
mov
sbbl
pop
gs
pushf
fs
mov
inc
sub
and
lea
push
fcmovnb
push
and
lods
cmc
ror
sahf
test
dec
ja
imul
mov
xchg
loopne
roll
or
out
leave
in
sub
ja
pop
jmp
xchg
xchg
in
cwtl
rorl
xor
subb
loopne
gs
pushf
sub
inc
mov
outsb
mov
jo
sbb
cmp
rolb
sbb
loop
inc
mul
xor
loopne
xor
movsl
clc
stos
lret
adc
xchg
scas
cmp
mov
insl
shrl
ficomps
cmpsl
scas
repnz
xchg
ror
cs
out
or
dec
add
mov
addr16
push
dec
bound
push
and
mov
popf
fnstsw
and
test
pop
rcrb
xchg
dec
dec
push
enter
negb
fiaddl
dec
pushf
in
xchg
ret
mov
andb
sbb
mov
xor
pushf
adc
popf
inc
inc
inc
xchg
xchg
lcall
aad
mov
mov
pusha
pusha
and
test
jae
imul
clc
pop
fisubl
loopne
jb
push
push
gs
imulb
pop
sub
push
icebp
and
xchg
outsb
inc
push
stos
and
std
lods
adc
adc
pop
addr16
or
ljmp
or
nop
mov
lret
xchg
or
les
lock
shrb
bound
or
mov
cmp
or
xchg
aam
push
cli
packuswb
out
and
xchg
pushf
lock
inc
sbb
xor
pinsrw
iret
xor
jns
fisttpl
fstl
dec
mov
sbb
fldenv
or
or
dec
int3
gs
pusha
mov
rcrb
repz
enter
sti
jne
mov
mov
or
dec
adc
jb
rcrl
sbb
mov
dec
outsl
mov
dec
or
pop
aas
inc
mov
mov
mov
push
testb
lahf
aaa
loopne
cmp
insl
hlt
scas
inc
push
mov
push
scas
pop
clc
fiadds
out
mov
daa
adc
bound
sar
dec
push
mov
inc
or
lds
sbb
mov
bound
jno
bound
adc
mov
xor
inc
insb
cld
dec
adc
outsl
cmpb
ja
mov
pushf
inc
add
xchg
shrb
mov
test
mov
lahf
ljmp
cmp
xchg
jg
loope
popf
out
lods
add
pushf
sahf
and
xor
jle
inc
pop
ss
scas
lret
xchg
push
jmp
pop
testl
daa
sbb
jns
sbb
mov
mov
adc
outsb
mov
or
shll
dec
roll
pushf
dec
push
inc
ljmp
mov
fs
add
inc
adc
aas
adc
xor
xor
incl
sub
push
push
test
mov
adc
enter
sub
popf
addr16
push
push
mov
add
mov
mov
icebp
aas
mov
and
jo
out
aaa
or
ss
jg
sub
adcb
jg
aam
cmpl
push
pop
movsl
pop
cmc
and
mov
push
mov
sub
jae
add
pop
pushf
ds
imul
imulb
popf
mov
and
rcrb
or
cmp
xchg
fimull
lds
push
aam
jecxz
icebp
jbe
or
repz
pop
jne
xor
je
je
jne
rcrb
cmp
pop
fabs
out
adc
xchg
mov
sbb
xchg
xor
ljmp
dec
dec
xchg
in
sarl
sbb
cli
daa
stos
or
std
pop
push
adc
adc
mov
pushf
sub
adc
push
stos
ret
inc
cld
daa
sub
jle
test
pop
jmp
gs
dec
jb
pop
daa
pop
inc
or
jns
cmpsl
sub
outsb
fiaddl
mov
inc
mov
out
cli
jle
jp
call
cmp
jo
imul
sub
dec
out
fnstsw
cmp
mov
push
movsb
and
push
jecxz
lret
inc
int3
fldl
out
imul
add
fsubl
mov
xchg
jae
fwait
imul
cltd
sbb
add
cmp
add
cmp
and
and
push
dec
aad
push
mov
push
fdivl
xlat
mov
not
xor
pop
lahf
enter
js
cmc
imul
xor
add
in
or
call
adcb
add
jmp
cmpsb
lcall
xlat
jmp
mov
insb
jno
aas
int3
jno
std
lar
add
add
push
cmpsl
push
jnp
jb
cltd
dec
enter
fnsave
jae
icebp
jo
push
lods
sub
dec
bt
insl
mov
pop
mov
jg
mov
push
sub
and
or
aas
lock
es
xchg
dec
out
je
or
movsl
mov
push
popa
push
sub
add
mov
cli
and
mov
mov
sub
test
out
icebp
xchg
loope
pop
sbb
sub
mov
loopne
mov
mov
pop
cmpsl
adcl
cli
inc
cmp
or
sub
pusha
cmp
stos
sbb
fcmovu
mov
test
and
mov
std
push
sub
xchg
stos
push
ret
dec
stc
call
jecxz
ja
leave
adc
sub
add
cmp
xchg
pop
mov
xor
mov
bound
cmp
inc
xchg
add
jo
rcll
into
lret
cmc
pop
cmp
mov
sub
jl
je
adc
mov
add
mov
stos
adc
xor
or
test
mov
leave
mov
mov
push
jo
dec
mov
clc
add
insl
out
cmc
or
fs
lcall
shll
inc
xchg
or
outsb
pop
mov
fs
pop
rcl
dec
cld
jns
sti
push
dec
and
ficomps
jge
mov
lret
outsl
push
push
lret
fiaddl
pop
xchg
mov
push
movb
xchg
mov
pop
lret
cmp
dec
lahf
sbb
ljmp
cmp
fsubrp
pushf
lahf
push
movsl
stc
or
test
clc
es
in
mov
jmp
bound
nop
mov
dec
mov
or
ds
mov
nop
fwait
xor
lret
lahf
aad
mov
out
inc
xor
mov
arpl
pop
scas
cmc
sub
dec
xchg
aam
in
in
dec
in
push
pop
xchg
imul
or
stc
pop
mov
and
push
je
sbb
fldenv
mov
stc
mov
inc
xor
outsb
aas
cmp
xchg
xchg
aad
aas
shlb
jle
idivl
insl
fcoml
push
arpl
jl
or
cmp
cmpsl
clc
pop
js
mull
cmp
sahf
jno
fstpl
lods
jg
repnz
ja
and
in
sahf
sbb
adc
iret
mov
jecxz
inc
pushf
jmp
les
sub
mov
mov
jmp
test
sbb
mov
sub
mov
mov
mov
pop
dec
cli
js
clc
test
daa
rcll
xchg
and
cltd
js
loope
imul
jl
pop
mov
push
aam
sbbb
push
or
insl
mov
jno
cli
adc
pop
movsl
mov
cmp
clc
gs
and
or
aaa
std
and
lret
dec
dec
fiaddl
pop
or
or
jecxz
and
in
push
clc
sub
ficomps
xchg
jno
shl
mov
push
mov
fcmove
jl
xchg
or
andb
dec
sub
sbb
adc
mov
repz
pop
in
jle
sub
mov
inc
xchg
jle
inc
pusha
fistpll
sbb
mov
jmp
mov
jb
std
push
in
inc
in
pop
mov
and
shlb
dec
notl
loopne
xor
inc
or
dec
inc
sbb
mov
sbb
pushl
pop
mov
dec
adcb
flds
sub
movsb
xchg
cmpsb
fwait
scas
mov
jns
mov
jnp
dec
dec
loope
cmp
lods
sub
xchg
jne
sbb
int
lret
in
jle
mov
jbe
mov
mov
lods
add
cld
xchg
push
mov
jb
add
adc
cld
iret
and
int3
mov
dec
aaa
shll
mov
pop
fwait
test
and
insb
dec
mov
xlat
jge
cld
test
or
lcall
mov
addr16
jae
out
adc
pop
xchg
inc
adc
addb
mov
sub
sbb
mov
add
ljmp
and
xor
sahf
loope
fadd
shll
dec
pop
mov
bnd
js
fisubs
adc
xchg
dec
xor
add
les
sbb
pop
push
push
outsb
mov
inc
sub
rcrl
movsl
ljmp
mov
jp
jge
cli
xor
dec
call
mov
sub
jmp
mov
sbbl
inc
test
add
push
fwait
xor
add
loopne
fs
mov
outsb
cltd
or
add
mov
cmpsl
pushf
lds
adc
mov
clc
cmp
adc
add
lahf
jbe
lock
adc
es
les
jge
sbb
cwtl
js
rol
cmp
mov
inc
dec
fmull
in
in
cld
sub
cmpsb
mov
in
int
xor
hlt
data16
scas
sub
jecxz
cmc
pop
jle
cmpsl
fbld
sti
jno
mov
bound
bound
bnd
add
insl
rol
mov
jmp
clc
xchg
mov
sarl
pop
dec
popl
xlat
push
fcoml
jmp
lock
rcll
sbb
lea
and
xchg
in
sub
jmp
incl
mov
lahf
add
fxch
cs
faddl
sbb
stc
dec
pop
daa
push
loopne
in
add
xor
adc
xlat
add
mov
adc
xchg
mov
cltd
pushf
dec
cmp
cmp
repz
into
inc
sub
faddp
jo
fnstenv
aam
dec
sbb
popf
push
cli
loopne,pn
repz
pop
lahf
movsl
fdiv
test
movsl
xchg
movsl
daa
or
out
jecxz
sbb
mov
jge
pop
xor
lret
adc
or
or
jnp
mov
inc
and
dec
xor
ret
add
push
mov
or
xchg
mov
std
nop
push
stos
adc
adc
in
fildl
add
fld
fcomi
loop
sub
daa
std
mov
out
lret
push
mov
test
inc
lahf
decl
dec
mov
in
mov
les
lcall
jmp
or
sbb
fwait
mov
xor
pushf
scas
sarb
sub
and
jge
cmpsb
lcall
sub
adc
inc
dec
lods
out
mov
adc
jbe
idiv
jecxz
aas
popf
lds
inc
xchg
cmp
mov
xchg
sub
fidivrs
std
test
mov
int
inc
faddl
loopne
inc
xchg
gs
fcompl
xchg
imul
andb
dec
add
and
repz
dec
jp
mov
fwait
andl
movsb
push
add
cwtl
testl
jecxz
es
or
ss
jnp
addr16
jne
test
dec
cmp
cmp
insb
stc
loope
das
mov
mov
dec
fnsave
mov
or
push
jg
push
js
mov
orb
sbb
sub
shll
rcr
push
dec
sub
ljmp
adc
xchg
xor
dec
lock
lea
gs
or
jno
jecxz
mov
lods
jbe
and
scas
pop
fcmove
fldt
lock
adc
mov
ficompl
and
mov
jecxz
push
xchg
pop
pop
adc
or
std
sbb
jp
jmp
and
inc
js
xchg
dec
cmp
mov
fstps
aaa
imul
add
and
pop
hlt
aad
jl
pop
cmp
mov
jle
add
jns
lock
hlt
int3
pop
adc
add
test
in
loopne
and
xor
push
xchg
adc
mov
push
orb
aas
clc
dec
pop
or
mov
or
xlat
cmpsl
add
sub
pop
loop
repz
mov
into
loopne
jbe
es
adc
jmp
std
insb
jnp
mov
cmpsl
icebp
sub
add
and
jno
and
bound
mov
lret
cltd
mov
jno
jp
mov
add
xor
jbe
imul
shrl
mov
mov
shr
sub
insl
pop
bound
or
ja
inc
out
popf
mov
jae
and
sub
mov
sub
sub
sub
inc
lods
push
mov
mov
stos
xor
add
ret
push
push
sub
lods
sbb
xchg
mov
inc
add
mov
ds
push
sub
fwait
dec
fsubrl
rcrl
cmpsl
adc
btc
fmuls
and
push
xchg
dec
mov
xor
movsl
shlb
test
out
jns
jo
insb
xchg
icebp
sub
fmuls
and
mov
mov
jbe
and
jne
fstpt
stc
jecxz
pop
in
pop
mov
dec
xchg
push
xchg
xchg
cli
add
xor
sbb
push
mov
add
shrb
jecxz
inc
mov
jne
cmp
leave
fistl
ds
jo
mov
inc
movl
iret
hlt
xchg
arpl
and
lock
mov
in
pop
fmuls
xlat
xchg
mov
icebp
xor
inc
or
les
add
and
std
push
mov
je
popf
adc
lods
aas
or
mov
cmp
aam
std
shll
lds
aam
sahf
add
mov
push
inc
push
in
pop
xlat
mov
imul
aaa
sub
inc
lock
hlt
in
jb
arpl
into
jae
test
jge
cwtl
jge
in
dec
and
cmpsl
cli
lret
mov
jno
pushf
adc
sbb
adc
pop
pop
fwait
dec
decb
fdivs
inc
je
dec
add
push
gs
imul
push
out
aas
push
into
adc
pushf
ret
shrb
sar
sbb
repz
dec
cli
std
pop
cmp
mov
add
xor
mov
add
xchg
jg
xorl
repz
jg
mov
add
push
adc
sahf
aas
loope
push
andl
lcall
mov
hlt
jl
cmp
push
xchg
jge
ja
fisubs
pop
test
cs
out
push
xor
imul
js
lret
xchg
xor
dec
cmp
rcrb
arpl
shr
sbb
cmp
repz
shrb
sub
mov
ss
add
mov
mov
lret
clc
addb
int
jae
cli
jecxz
arpl
or
cmp
rolb
aad
sahf
jle
mov
push
clc
in
fisttps
mov
jmp
aam
inc
aam
lods
or
bound
stc
jecxz
mov
lcall
ds
inc
push
mov
subl
sub
je
cmp
adc
aad
mov
xchg
fcmovu
jno
mov
add
lods
mov
rolb
sahf
add
fwait
lock
mov
jle
push
outsb
je
dec
inc
add
call
xor
jl
insb
mov
and
daa
cli
mov
add
xchg
shll
jecxz
lods
mov
fnstenv
pop
js
push
xchg
jns
mov
pop
mov
pop
ja
push
xchg
outsl
push
stos
mov
repnz
mov
mov
sbb
lods
mov
and
xchg
mov
and
sub
mov
push
ja
push
push
ret
push
int3
pop
cmpsl
arpl
leave
ja
rcr
leave
cmpsb
pushf
out
mov
push
stc
mov
shr
gs
mov
mov
pusha
test
lcall
add
mov
mov
in
popf
imul
cwtl
adc
xchg
cmp
mov
cmpsb
int
push
in
mov
das
inc
in
pop
lock
dec
cmp
stos
push
daa
fldenv
in
add
pop
mov
mov
adc
cmp
mov
bound
xor
pop
and
bound
arpl
mov
or
test
arpl
popf
mov
nop
xor
sbb
dec
insl
loopne
xor
in
inc
lods
push
mov
xchg
inc
and
outsl
xchg
xchg
cmpsl
mov
std
jg
adc
loope
mov
add
xor
xor
mov
push
aam
add
jmp
mov
dec
out
fwait
mov
sub
scas
or
popl
add
ja
scas
sbb
and
data16
cmp
mulb
popf
sahf
or
dec
sbbl
jne
lret
adc
ret
popa
sbb
add
xchg
into
lods
xchg
fidivl
outsl
arpl
mov
fstpl
int
xchg
jle
and
call
xchg
push
mov
dec
mov
out
sbb
jmp
in
sbb
fistpll
jno
xor
fildll
xchg
cld
push
std
push
jo
cmc
mov
sbb
mov
xchg
push
or
xor
lret
xlat
js
lods
imul
pop
cmpsl
sbb
add
loope
scas
sub
xorb
lcall
ja
clc
and
ret
and
inc
out
mov
jge
test
mov
out
jbe
repz
stos
and
inc
fisubrs
daa
adc
call
in
and
jg
aam
pop
negb
outsb
repnz
int
stc
xchg
loopne
cmpb
mov
inc
ret
jp
xchg
pop
cmp
dec
test
lret
or
push
cltd
negb
adc
xchg
in
or
mov
sbbb
hlt
push
lock
iret
and
loopne
jmp
adc
les
add
sbb
aad
sub
sbb
cmpsl
dec
fbld
xor
push
enter
popa
mov
adc
testl
das
jae
fcomps
mov
add
ret
fwait
xchg
stos
shlb
adcl
ret
xor
test
cmpsl
sahf
loopne
sbb
je
cmpsl
jbe
aaa
aad
or
adc
ja
xor
sub
popf
and
lcall
aas
push
inc
adc
mov
xchg
stos
dec
mov
push
xor
out
mov
ja
xchg
adc
jnp
imul
loope
mov
cmp
js
loopne
cmp
lods
aaa
cmc
scas
loop
jno
mov
mov
mov
out
sarl
flds
sti
ret
inc
repnz
aad
cmp
mov
adc
pop
pusha
sbb
popa
mov
or
out
xchg
test
test
or
fcoms
lahf
mov
adc
xchg
sub
mov
mov
adc
push
insb
mov
aad
cltd
lret
push
push
fisttpll
int3
repnz
stos
inc
pop
ljmp
adcb
push
jge
and
and
stos
cmpsb
mov
cld
scas
jmp
les
jbe
fmull
mov
cld
mov
add
cmp
adc
cli
into
sub
sbb
pop
jp
adc
cmc
dec
addr16
dec
stos
into
push
aad
jbe
push
jp
sub
or
push
and
aas
and
push
dec
into
insb
inc
and
push
xor
mov
ret
popf
movsl
enter
mov
test
loope
xchg
mov
inc
mov
loopne
cmp
xor
int3
or
jns
fnstenv
mov
sub
add
sahf
into
into
mov
das
mov
fbstp
lahf
in
add
and
mov
or
gs
xchg
in
jmp
sbb
mov
fmul
loopne
dec
lret
or
in
adcb
push
out
inc
push
xor
xchg
push
mov
mov
push
cvtpi2ps
inc
aaa
sbb
pop
push
enter
enter
sti
rcrb
popa
mov
xchg
mov
sbb
mov
test
sbb
mov
jmp
push
sarb
pop
cmp
sbb
xchg
cwtl
mov
fnstenv
cmp
fldt
ljmp
dec
into
cwtl
fbld
mov
xchg
and
mov
cmp
das
xchg
and
cmc
cmp
mov
movsb
adc
xor
pushf
sbb
ds
cmpsb
or
pop
sbb
dec
pop
xchg
add
nop
mov
cs
out
dec
dec
dec
pop
inc
cwtl
fdivr
push
hlt
daa
imul
xlat
cs
cmpsl
xor
les
sub
xor
add
xchg
add
xor
ljmp
mov
cmp
mov
mov
inc
mov
iret
cmp
pushf
cmp
push
adc
jb
or
test
adc
adc
cmp
push
les
push
insl
out
fists
push
test
fldt
and
or
hlt
repz
sub
cmp
rcrb
add
sub
negb
lcall
fdivrs
mov
sub
clc
psubq
sub
outsb
add
cmc
arpl
inc
cs
shrb
and
or
iret
fildll
ja
cli
icebp
stos
mov
mov
mov
cmp
enter
pop
std
push
adc
sub
jnp
push
popl
in
cmc
bound
insl
ret
xchg
pop
push
sbb
cmp
movsb
mov
jge
imul
xchg
roll
and
or
xchg
sub
lock
rcll
rcrb
js
add
sbb
pop
sub
pusha
mov
xor
xchg
es
data16
xor
ss
sbb
fistpll
lods
cmc
xchg
mov
movsl
xor
lea
call
lds
dec
repz
mov
pop
xchg
mov
or
lods
inc
pop
fs
mov
jmp
add
sub
movb
dec
mov
jb
dec
add
loopne
dec
cmp
mov
mov
pop
jl
adc
mov
and
mov
push
push
jl
shl
or
cmp
ss
outsl
sarb
mov
inc
sarl
mov
js
mov
popf
in
mov
sahf
pusha
arpl
ret
shll
bnd
mov
imul
jg
mov
and
sub
lds
sbb
dec
push
adc
sub
mov
xor
inc
mov
rcll
addr16
xchg
cwtl
cld
jns
push
inc
mov
adc
mov
pop
testb
cmp
xlat
clc
add
push
std
cmpsb
js
out
imul
and
popa
add
rolb
mov
jl
jo
scas
mov
sub
loope
jno
inc
aad
mov
stc
pop
and
imul
push
das
sbb
js
cmp
in
mov
mov
test
call
pop
in
add
clc
hlt
dec
push
add
jle
pushl
mov
push
sbb
mov
jae
stos
mov
in
pusha
push
push
insl
pop
adc
cld
fdivrs
scas
aad
fwait
xor
mov
testb
adc
adc
mov
pop
pop
divb
sbb
subb
xor
ja
mov
aad
pop
push
mov
das
or
xchg
test
push
push
imul
subl
add
inc
loopne
sub
aam
mov
jp
int3
in
cwtl
mov
add
es
jmp
fwait
mov
ret
or
pop
cmp
jo
ret
out
mov
mov
mov
insl
sub
dec
sbb
sub
cmpsb
pop
mov
fistl
jns
jb
jb
mov
xor
jnp
pop
push
loopw
xchg
aas
cmp
sbb
das
xor
fisubrs
mov
mov
xchg
push
pop
in
xchg
aad
outsb
dec
mov
leave
push
pop
cld
arpl
lock
in
fwait
xor
pop
cld
aad
xor
popa
cmp
pop
pop
pop
mov
inc
push
xchg
aaa
add
int3
roll
outsb
hlt
into
popf
xor
jnp
fsts
lcall
sub
sbb
sub
lea
cwtl
pop
arpl
xor
adc
add
das
and
jecxz
les
dec
movsb
xchg
jl
xor
xchg
inc
iret
mov
pop
imul
loopne
mov
aaa
sub
xchg
popa
inc
roll
cmp
and
lret
in
out
test
sbb
std
adc
imul
out
and
jae
les
add
xor
es
js
ret
iret
jmp
dec
dec
adc
lock
push
arpl
jno
dec
jmp
adc
popf
rorb
add
dec
mov
fxch
imul
loop
jecxz
fildll
mov
mov
and
fists
mov
divb
cltd
sti
enter
and
into
adc
js
jge
out
pop
or
or
xchg
sbb
call
xor
in
pop
cmp
mov
xor
sti
mov
adc
add
dec
mov
repz
jp
mov
mov
clc
mov
push
rorl
adc
inc
mov
movsl
inc
enter
sub
mov
xchg
jg
je
addr16
imul
mov
enter
sub
or
xchg
dec
js
pop
lods
xchg
loop
push
les
fisubl
cltd
inc
xchg
rolb
mov
sbb
cmpsl
cmc
and
or
fldt
lahf
cmp
bound
jle
lods
inc
cmp
andb
adc
add
push
popf
aaa
add
pop
lahf
ret
xchg
add
repz
jecxz
dec
or
loopw
repz
ret
or
adc
shll
bound
fyl2xp1
add
shll
repnz
push
pop
lods
push
inc
fsubs
ficompl
fwait
mov
jg
and
jo
pusha
inc
insl
fsubrl
data16
add
sub
mov
imul
add
pop
push
mov
fwait
mov
xchg
adc
mov
cmp
push
rorl
aam
rclb
pop
and
in
mov
rclb
add
xor
insb
jns
xchg
cmp
jl
shll
movsl
xchg
mov
xor
mov
add
mov
pop
pop
pop
leave
ret
jne
adc
std
push
adc
aas
adc
sbb
adc
sbb
add
push
adc
out
jg
add
dec
adc
mov
jns
add
inc
adc
sbb
inc
add
cmp
inc
add
cmp
inc
add
cmp
inc
add
add
add
add
add
add
add
inc
cmp
add
scas
inc
adc
inc
cmp
add
adc
push
adc
cmp
add
sbb
add
adc
idivb
inc
add
cmp
cmp
add
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
adc
subb
cli
adc
sbb
adc
pop
inc
adc
sbb
adc
in
pop
adc
pop
sub
add
add
inc
add
add
inc
add
add
cmp
add
aaa
adc
cmpl
adc
push
dec
adc
mov
adc
lock
add
adc
outsb
or
add
add
add
push
push
inc
push
fwait
cmc
dec
sbb
jp
push
clc
mov
or
add
add
pop
dec
outsb
jae
popa
insb
insb
and
je
pop
push
outsb
fs
dec
push
pop
dec
popa
imul
outsl
insb
fs
dec
outsb
arpl
gs
dec
outsb
outsw
inc
jo
add
add
add
add
add
cmp
add
add
add
add
add
mov
cmp
add
mov
cmp
push
jns
bound
imul
inc
insb
outsl
jae
push
imul
popa
je
outsl
outsb
inc
insb
outsl
jae
push
.byte
