mov
mov
ret
mov
mov
ret
cmp
movl
jmp
xor
sbb
test
nopl
jmp
mov
xlat
shrl
in
mov
in
data16
ljmp
push
aas
inc
adc
rolb
dec
ret
clc
loopne
jmp
jbe
cwtl
lds
and
out
mov
mov
jge
mov
loop
stos
xor
int
popf
inc
idiv
sbbl
out
stos
xchg
pop
cmpsl
cmp
or
sub
jae
adc
dec
ss
mov
jne
lret
push
outsb
aam
jle
mov
cwtl
pop
idivl
addr16
mov
xchg
xchg
cmc
xlat
mov
xor
and
xor
fistpl
sbbb
dec
ret
test
pop
sti
push
fldt
mov
das
addl
aam
pop
lea
in
dec
dec
movsl
cmp
mov
pop
add
jno
xor
dec
inc
in
lods
fcoml
dec
dec
pop
inc
mov
mov
xlat
inc
or
insb
inc
or
inc
xchg
and
lods
fldcw
add
je
push
xor
fidivrs
test
es
lret
ljmp
jmp
adc
das
or
jne
in
cmp
xchg
and
aad
out
daa
test
mov
dec
into
stos
roll
cmp
enter
jnp
fimuls
stc
in
shrl
les
mov
aam
adc
push
push
out
xchg
mov
fs
push
mov
mov
jg
jns
clc
les
shrb
das
xor
mov
popf
shrl
or
dec
jmp
xchg
push
aam
xchg
loope
out
sti
test
or
push
sbb
stos
out
sar
xchg
mov
jae
push
jp
jmp
ja
sbb
adc
shll
lods
sub
cmp
cmc
int
mov
pop
add
sub
pop
stos
lock
sahf
pop
shll
aas
adc
sbb
pop
pop
xor
sbb
mov
push
cmp
and
test
ret
outsl
mov
inc
int
mov
repz
mov
es
aam
mulb
popf
popf
add
cltd
sahf
fwait
orb
xor
cmp
sbb
pushf
daa
shll
gs
mov
ficoml
lret
xor
arpl
stos
or
fisubl
cmc
aad
dec
int
pop
scas
jecxz
ds
cmc
test
adc
mov
jl
into
mov
repnz
lock
js
jp
movsl
inc
dec
mov
outsb
mov
inc
mov
xor
sbb
cmc
cmpsl
push
je
cs
and
ficomps
or
xlat
cmp
shrl
xor
sahf
imul
push
shlb
and
xchg
out
mov
lret
mov
int3
push
sub
mov
push
sbb
hlt
aas
popf
outsl
mov
sbb
and
and
jno
and
aas
mov
cmp
mov
out
cld
insb
mov
jae
xor
inc
jbe
mov
cmpb
call
nop
xchg
test
rorl
jg
repz
xchg
mov
cmpsl
xor
xor
xor
fistpl
sub
std
sub
cmp
rorb
mov
cmpsl
icebp
and
inc
or
es
jne
mov
hlt
push
jmp
aas
add
lret
mov
fistpl
sub
push
js
inc
xchg
mov
mov
push
xchg
mov
mov
mov
adc
stc
sub
out
jno
and
add
fists
loope
sub
dec
xor
cltd
mov
add
sub
cmp
fs
sbb
in
repnz
pop
in
ror
or
test
xor
xor
push
movsl
push
fistpll
dec
idivl
enter
ficoms
daa
pushf
xlat
fisttpll
add
xchg
xchg
add
xchg
mov
fisubs
ja,pt
ret
lcall
dec
mov
inc
nop
push
adc
push
sub
clc
ret
in
mov
cmp
mov
mov
mov
pop
add
repz
xchg
sbb
mov
movsl
pushf
jg
dec
xchg
pop
xchg
jne
mov
and
lret
nop
dec
pusha
or
test
adc
mov
mov
in
mov
add
sahf
jg
lcall
rorl
mov
mov
mov
nop
in
test
sbb
xlat
cmp
and
stos
daa
addr16
pop
xchg
xchg
test
mov
dec
fnstenv
sub
loopne
int3
jns
adc
or
testb
adc
lcall
adc
psadbw
push
out
cli
daa
push
xor
aaa
daa
push
xor
and
cltd
jecxz
add
mov
mov
cltd
aam
or
adc
or
fsubrl
lea
in
jl
xor
addr16
lds
xchg
mov
lods
test
cli
mov
imull
or
pop
jg
lea
pop
aam
and
mov
shlb
fs
scas
shlb
rorb
pop
jg
jp
lock
fisttpll
cmp
or
lcall
adc
leave
jb
push
cs
sub
push
push
mov
push
leave
test
lock
fwait
lret
test
cmpl
popa
fisttpl
jb
jb
xchg
adc
jns
or
test
sub
mov
lret
inc
roll
mov
pop
mov
or
incb
cli
pop
scas
adc
mov
or
inc
sub
mov
fs
movsb
pop
mov
pop
lret
mov
xor
inc
lcall
clc
xchg
les
out
push
add
or
mov
out
aam
aas
push
sbb
lods
fstps
testl
xchg
leave
mov
fcmovb
inc
sahf
inc
sarl
jmp
lds
mov
daa
adc
jbe
mov
sarl
mov
dec
imul
leave
rcr
inc
xor
and
out
push
iret
dec
cmpsb
daa
cmpsb
push
mov
jl
pop
popa
not
add
loop
testb
sti
pop
mov
test
dec
fimull
mov
jno
lret
pop
pop
push
ficoms
lds
xchg
cli
or
out
in
hlt
addl
xlat
push
leave
xchg
sbb
mov
icebp
pusha
repnz
aad
inc
into
outsl
insl
aam
lahf
in
pushf
in
imul
stc
xchg
sbb
stos
cmc
mov
adc
pop
sbb
movl
add
movl
cmp
movl
jae
adcl
shrd
shr
ret
inc
mov
xor
and
shr
ret
xor
xor
ret
mov
mov
ret
mov
mov
ret
mov
mov
ret
mov
mov
ret
mov
mov
ret
mov
mov
ret
mov
mov
ret
mov
mov
ret
mov
mov
ret
push
mov
sub
movl
movl
movl
movl
movl
jmp
cld
xor
test
mov
mov
push
add
repnz
rcl
dec
mov
fimuls
test
jmp
mov
imul
mov
mov
es
mov
cmpl
popa
sbb
xchg
rolb
neg
sbb
jp
dec
xor
dec
mov
roll
mov
inc
and
pop
pusha
sbb
popf
xchg
sub
dec
jle
add
loope
ret
nop
xchg
and
iret
xlat
mov
adc
pop
mov
lods
mov
enter
out
dec
test
jne
push
push
movsl
push
push
cmp
das
ret
cmpsl
and
cs
adc
ja
jo
iret
sarb
repnz
adc
movsl
jno
sub
mov
iret
adc
sbb
jmp
pop
push
dec
cmp
push
cmp
pusha
nop
cmp
fists
push
pop
inc
mov
push
in
adc
or
xchg
idivl
mov
xlat
jmp
pop
and
cmpb
pushf
scas
mov
leave
in
sub
in
push
ficompl
loop
clc
sarl
lods
inc
mov
addb
inc
pushf
mov
leave
pop
rorl
roll
pop
mov
out
call
mov
rcl
repnz
inc
scas
xchg
std
clc
jae
ret
or
lods
mov
movsl
inc
xchg
mov
loop
or
sbb
stos
ss
js
jns
and
fbstp
jg
pop
into
fdivr
xor
pop
add
mov
ret
mov
subb
lret
mov
repz
lcall
sti
xchg
xchg
sbb
jnp
and
jg
add
fistl
push
mov
mov
cli
dec
das
ds
popa
scas
and
inc
xchg
cmp
int3
ds
call
lods
cltd
ss
ret
jb
mov
fmull
push
cmpsb
pop
and
lock
cli
dec
xchg
mov
mov
test
or
das
in
jnp
sbbb
fsubrl
ja
sub
dec
cmc
js
jb
loope
daa
jp
mov
nop
mov
add
inc
ljmp
repz
test
into
and
insb
sarl
roll
adc
dec
jb,pt
repnz
mov
pop
xchg
adc
out
inc
out
mov
call
jge
mov
jno
cmp
mov
in
push
insl
cmp
lret
sub
push
jl
sub
inc
call
lahf
pop
outsb
shlb
inc
mov
xchg
cs
sbb
mov
inc
shll
jnp
add
xchg
faddp
sub
sbb
shrb
push
jp
mov
bnd
xor
mov
lods
sbb
jg
lcall
subb
add
xchg
lret
inc
pop
mov
fwait
jnp
jmp
cwtl
popa
pop
xor
fdivs
test
pushf
mov
lods
test
and
cli
sbb
add
mov
insb
push
stc
mov
jg
adc
js
rclb
inc
out
out
and
xchg
xor
call
jle
cli
dec
add
and
test
mov
or
sbb
lcall
mov
notl
xor
add
sub
dec
xor
push
sub
test
nop
sahf
fstpl
out
call
pop
rorl
stc
fdivp
mov
xor
repz
js
mov
imul
fwait
test
loop
repz
push
rcrb
sub
pop
mov
lods
xchg
xchg
jns
xor
int
mov
in
js
pop
test
fistps
inc
push
arpl
fcomps
es
scas
jnp
dec
sti
xor
or
fbld
in
mov
jge
jo
clc
js
cmp
div
mov
inc
inc
push
inc
call
ljmp
hlt
mov
mov
xor
xchg
mov
jnp
mov
fmuls
fisubl
pushf
shr
jecxz
adc
or
sar
out
pop
pushf
cmc
outsl
out
movsb
jb
sub
sti
sbb
sbb
mov
stos
dec
pop
inc
sub
cmc
push
out
add
shlb
mov
adc
mov
popa
insl
sub
sbb
ret
gs
pop
in
cmp
jne
mov
cltd
mov
mov
push
adc
mov
or
adc
push
lret
dec
cmp
enter
insb
ljmp
dec
les
cmp
xlat
xchg
dec
cmp
fnstcw
test
mov
fstl
mov
add
pop
and
shrb
cmp
test
sub
sbb
xchg
pop
and
sti
fistpll
out
inc
mov
push
fdivrl
add
das
or
ds
sti
dec
add
fsubs
aaa
inc
push
data16
xchg
and
dec
pop
mov
pushf
pop
or
je
popa
andl
or
mov
lret
mov
sahf
jge
or
cmpsl
adc
dec
jb
add
jno
nop
jecxz
jl
enter
jae
or
jne
sbb
and
push
sbb
mov
test
mov
ljmp
cmp
xchg
scas
mov
sbb
dec
adc
addr16
ja
mov
lods
test
icebp
sbb
jmp
faddp
inc
aam
jno
add
inc
fdiv
add
add
inc
fcoml
inc
loopne
arpl
add
ds
add
lds
mov
inc
xchg
inc
inc
das
ljmp
loope
pinsrw
xsha256
cmpsb
xchg
test
xchg
in
xchg
mov
pushf
sub
ja
dec
stos
dec
fidivrl
pop
xchg
fsts
fisttpll
stc
mov
shll
cwtl
cmp
sbb
jl
xor
dec
loop
loope
aas
xor
scas
push
pop
or
adc
mov
sub
jl
or
or
icebp
mov
xchg
sub
std
lds
inc
mov
sbb
iret
shrb
dec
mov
mov
out
cli
adc
push
rclb
shlb
push
and
sub
sub
rorb
sar
xchg
stos
cltd
insl
sbb
lret
pop
xchg
pop
add
andb
mov
into
mov
imul
imul
or
adc
dec
ret
mov
daa
cltd
lods
xor
mov
push
cmpsl
push
mov
out
xlat
add
and
adc
mov
repz
shrb
ftst
adcb
insl
notl
pushf
outsl
gs
sub
icebp
jne
test
dec
and
adc
cmp
flds
inc
mov
and
push
test
mov
cmpsb
ljmp
pop
repz
stos
mov
push
shl
jg
xchg
mov
rcrb
xor
arpl
sbb
popa
or
ss
inc
mov
cmp
mov
call
cwtl
pop
adc
adc
ss
cmpsl
pop
ret
push
pushf
fisttps
pop
je
lds
lcall
mov
sbb
jnp
shrl
or
addl
xchg
ret
ds
test
fwait
jecxz
subb
push
jo
inc
mov
mov
in
in
xchg
cli
fnstcw
xchg
add
dec
xchg
bswap
arpl
xchg
stos
mov
mov
adc
hlt
test
pusha
cwtl
jecxz
stos
inc
jbe
add
mov
and
inc
flds
aad
mov
outsl
shrb
jmp
test
cmpb
sub
xchg
repnz
scas
ja
inc
js
sahf
lea
jne
js
pop
xchg
aad
je
dec
xchg
lret
js
jmp
lret
xor
fcmovnu
xchg
aas
in
adc
scas
cltd
std
jbe
jb
not
add
sbb
or
ds
shrl
sub
xchg
sub
call
notb
loope
dec
into
bound
scas
or
aaa
in
movsl
mov
add
mov
dec
inc
and
roll
mov
cmp
movsl
mov
test
je
mov
mov
rcrl
or
pop
sbb
or
leave
mov
or
mov
rorb
dec
or
pop
out
xor
mov
mov
arpl
and
lock
cmp
xchg
dec
addr16
cli
mov
or
sub
maxps
push
jle
jb
and
repnz
sbbl
pop
dec
xlat
xchg
hlt
jmp
out
mov
hlt
xor
dec
dec
fstpt
sub
pop
call
push
insb
pop
jnp
sbb
adc
push
push
in
cmp
das
incb
fadds
pop
mov
dec
push
or
ffree
ds
mov
ret
xchg
sub
pop
test
jbe
pop
sub
adc
insl
inc
mov
hlt
lea
das
adc
xlat
mov
subb
rcl
add
scas
pop
push
in
clc
test
imul
clc
jne
push
mov
mov
push
jge
decl
xchg
in
rcl
int3
xchg
addw
cld
jmp
dec
and
sub
push
scas
sbb
cmpsb
jmp
xchg
and
jge
es
bound
mov
add
fidivrs
push
sub
add
lea
cmp
rorb
lret
test
into
test
iret
test
push
push
cs
sub
dec
sbb
aaa
fwait
sbb
push
push
subl
lods
push
and
pop
and
push
sbb
iret
and
popf
push
outsb
pop
insb
add
clc
into
lock
data16
subl
pusha
shl
inc
sbb
adcl
dec
lods
pusha
in
dec
stc
pusha
mov
sbb
adcb
or
lods
jmp
mov
dec
add
push
xchg
imul
mov
hlt
adc
adc
sub
fistpll
loop
dec
mov
and
mov
mov
fwait
jge
push
adc
push
push
sub
pop
jbe
dec
adc
xor
xor
movsb
add
or
rclb
scas
fidivrl
or
jmp
jo
pop
pusha
xor
popf
test
or
mov
push
in
int
mov
lcall
add
scas
pop
mov
and
pop
jbe
pushf
push
andb
std
repnz
mov
nop
sti
cwtl
rclb
push
sti
hlt
adc
cmp
jno
jbe
lods
pushf
mov
lret
inc
dec
shrb
aas
xor
xchg
daa
cs
lea
movsl
lcall
add
nop
inc
icebp
dec
xor
or
lock
mov
or
adc
xor
shlb
pop
inc
lods
mov
sahf
in
popa
xchg
lret
cwtl
aas
xchg
ds
add
mov
daa
outsl
call
mov
inc
sahf
jne
addr16
lret
or
imul
cmc
and
dec
inc
xchg
fmull
mov
lret
fisttpl
inc
movswl
jge
push
mov
dec
pop
mov
lahf
movl
movl
mov
mov
jmp
pop
inc
sti
and
jbe
pop
js
fwait
cwtl
js
fimuls
pinsrw
pslld
add
and
repnz
into
dec
pop
popa
inc
dec
mov
mov
bound
pop
stos
xor
xlat
nop
popf
pop
and
inc
ja
xlat
lahf
dec
mov
push
cmp
pop
or
mov
sar
and
dec
cs
xorl
scas
ret
sub
push
and
cmp
fisubs
bound
sbb
jg
lret
xlat
cmpsb
xor
push
les
inc
lods
xchg
xor
push
dec
scas
in
das
cmp
mov
jge
ficomps
insb
push
push
push
add
orb
push
inc
jge
push
jle
pop
fmul
xorl
pop
jge
in
sti
lahf
shrl
das
sbb
mov
adc
inc
std
sub
xor
lods
inc
xchg
or
pop
mov
clc
xchg
adc
std
xor
test
cmp
lock
xchg
out
rorl
push
adc
jl
sbb
cld
pop
mov
sbb
xorl
insb
xor
sub
leave
jne
dec
imul
mov
lods
ret
test
sub
add
out
push
pop
stos
mov
imull
mov
inc
push
repnz
pop
rcrb
sahf
adc
shll
xor
pop
mov
jb
loopne
mov
or
sbb
lret
out
adc
fadds
dec
xchg
jns
or
cld
jo
orb
push
addl
jae
test
inc
and
repz
inc
sahf
das
cmp
imul
sub
xor
add
loope
pop
fcomi
subb
mov
fwait
push
add
in
iret
sbb
pusha
mov
add
ljmp
mov
jp
fsubrp
jae
insb
cmp
and
xchg
mov
pushf
imul
push
xchg
pop
scas
inc
pop
ret
in
lret
jo
cwtl
addr16
movntq
add
xchg
daa
lods
add
sahf
inc
jp
pop
addb
adc
mov
das
sub
test
jno
not
add
xor
xor
and
mov
dec
dec
and
repz
aam
xchg
xchg
or
xor
pop
sbb
add
pusha
mov
mov
in
push
cmpsb
cmpsb
in
dec
loop
fiadds
inc
adc
dec
int3
pop
repz
jp
inc
and
lcall
lods
pop
mov
xchg
xchg
cmpsl
fiaddl
inc
mov
dec
mov
sbb
lcall
sub
adcb
test
ja
add
negb
ret
aas
pop
mov
out
enter
mov
and
xor
pusha
dec
inc
xor
xchg
into
push
dec
push
dec
sub
rorl
sahf
mov
data16
push
test
lds
divl
cltd
es
test
sub
pop
xor
and
add
std
int
into
cmp
iret
repnz
adc
fbstp
out
cmpsl
es
test
data16
cmp
outsl
or
popa
call
mov
iret
les
inc
xchg
push
cld
popa
or
dec
inc
add
xchg
lahf
sub
pop
enter
pop
insl
jp
shl
fld
xchg
and
or
testb
js
scas
inc
xlat
dec
pop
mov
inc
pop
xor
cld
pop
cmp
arpl
ffreep
xor
inc
sarl
fdivrs
out
lgs
adc
add
or
into
pop
xor
jle
sti
divb
mov
subb
mov
daa
pusha
out
inc
xor
jge
push
loop
push
jne
jge
mov
sub
aas
xchg
add
dec
out
inc
daa
mov
frstor
shlb
lret
add
jo
sbb
push
pop
out
das
in
es
jmp
out
movsb
pushf
push
ss
popf
sub
ja
ss
mov
sub
sbb
fs
movsb
aad
test
fildl
addr16
fwait
les
sub
xor
in
insb
shll
test
insl
dec
stos
cltd
stos
movsb
aaa
in
sbb
aas
push
hlt
mov
in
xor
test
pop
mov
mov
mov
jle
fs
add
inc
and
sbb
xchg
xor
lret
mov
jecxz
aaa
mov
xlat
jno
les
adc
xchg
loopne
pop
push
popa
push
and
and
movsb
cmp
cmpsb
push
ret
std
and
cld
mov
nop
les
shll
in
sbb
jae
pusha
sub
ret
pop
jle
push
and
add
out
fbstp
lret
imul
aas
lea
mov
or
add
jbe
aam
pop
mov
lcall
sbb
js
and
xchg
das
jbe
push
mov
xlat
fisttpll
cmp
adc
out
cmp
and
inc
push
xchg
adc
popa
fst
dec
movsb
cmp
or
cmp
cmc
jno
or
xchg
sbb
fcoms
movsb
or
in
cmp
xorb
shll
stc
jg
mul
sbb
pusha
les
cmp
in
xchg
push
loope
push
xor
out
xchg
stos
rclb
cs
rorl
lock
pop
pop
loopne
fstps
cs
pusha
pop
aas
fdivrs
mov
xchg
shll
cmp
bound
add
pop
sub
outsb
outsb
inc
test
add
fsub
es
mov
aam
jo
imull
adc
or
mov
adc
xor
hlt
mov
mov
rorb
push
inc
add
xor
imul
mov
push
sub
push
movl
jmp
ljmp
stos
lea
jbe
xchg
loop
pinsrw
paddusw
aas
dec
dec
pushf
pop
je
pop
scas
add
popa
lods
fsubrp
mov
movsb
mov
jbe
movsl
jg
test
sub
lahf
in
cmp
jne
inc
mov
lds
pop
sub
out
cmp
push
std
mov
js
adc
sub
xor
sar
mov
pop
pmuludq
adc
adc
pop
sub
js
jecxz
ret
push
sub
fdivrs
adc
out
dec
test
xchg
insb
pop
lods
sahf
lahf
xchg
les
ja
fisttpl
fcompl
lods
ds
pop
popa
mov
dec
adc
pop
fidivrl
fcom
mov
dec
mov
cmpsl
fs
jle
xor
in
inc
mov
fisttpl
mov
xchg
mov
sti
sbb
shlb
mov
dec
push
shrl
int3
je
inc
pop
jns
es
push
js
mov
or
orl
sub
xor
fldt
paddusw
sbb
std
cmpsl
je
cmp
xor
xchg
dec
cmp
repnz
adc
fisttpl
inc
or
data16
add
jno
mov
or
fiaddl
fsubrl
pop
test
jecxz
cli
jno
fcmovb
popa
roll
or
fucomip
xor
push
popl
push
andl
hlt
adc
out
fidivrl
sbb
xchg
mov
push
jle
cmp
rclb
orl
iret
sub
mov
scas
push
enter
fcmovnu
jl
jge
or
int
fadds
cli
std
jnp
out
sbb
dec
cs
xor
lahf
shlb
leave
std
sub
idivl
adc
push
add
icebp
pop
test
into
mov
mov
fidivrl
ss
push
aas
cmp
pop
add
push
sti
add
mov
lahf
insb
ja
iret
sbb
sbb
faddl
pop
push
fwait
shll
xor
pop
scas
lods
movsb
ljmp
insl
je
or
bound
inc
into
imul
push
dec
das
jne
daa
adc
inc
jmp
inc
inc
rolb
mov
cmpb
aaa
std
inc
cmp
frstor
stc
mov
jbe
pop
push
mov
lock
sahf
sbb
aaa
std
cmp
mov
adc
shrl
div
mov
sti
mov
mov
mov
jns
xchg
xor
mov
pop
cltd
mov
or
daa
jae
aam
aaa
sub
push
xlat
push
lods
sub
mov
jg
ja
mov
jl
push
loopne
xor
lret
sub
add
es
imul
sbb
jmp
jnp
push
mov
and
outsl
rol
cmp
cmc
dec
cmp
cmpsb
mov
rcl
cmp
or
loop
xor
ret
call
jns
dec
test
or
pop
adc
fdivl
and
mov
add
addb
xor
mov
addr16
test
mov
scas
push
mov
push
jp
mov
jmp
cwtl
movsl
cld
notl
mov
aas
jo
negb
addr16
imul
xor
sub
pop
mov
repz
cmp
movsb
stc
mov
inc
push
stc
sub
outsl
les
movsb
and
cwtl
ret
mov
jae
push
jecxz
lods
mov
add
test
dec
xor
mov
push
in
in
mov
push
rorb
xor
xchg
xor
mov
dec
int3
shlb
xor
addr16
pop
xor
xchg
push
jecxz
xchg
sub
and
cmp
leave
fdivl
sahf
popf
push
fbld
jmp
xchg
das
push
ja
outsl
sub
fwait
pop
jae
imul
add
push
popf
mov
xor
inc
cmp
repz
pop
shlb
push
fwait
dec
pop
cmp
xchg
fisubs
je
in
fadd
mov
push
insb
push
fidivl
jecxz
and
mov
and
inc
jp
jnp
mov
push
lret
int
in
dec
pxor
inc
sub
inc
inc
test
mov
mov
out
mov
jno
inc
mov
not
or
pop
jns
pop
mov
jae
or
pop
xchg
mov
push
push
shlb
outsl
popf
xor
sbb
xchg
aam
sahf
sbb
add
cmc
sub
stc
addb
adc
xchg
das
xor
or
xchg
scas
sub
push
into
lcall
lods
push
andnps
dec
jno
xor
ficoms
stos
xchg
js
mov
ja
add
add
cld
andb
push
push
ja
call
in
in
mov
xchg
pop
lcall
pop
or
mov
inc
mov
push
xlat
leave
fdivr
mov
or
outsb
shll
mov
insb
iret
xchg
repnz
repnz
je
adc
push
scas
jle
and
imul
inc
xor
aaa
shlb
cmp
cmpsb
mov
das
push
push
enter
loop
cmp
dec
mov
adc
stc
push
sub
and
addr16
and
insl
fiadds
sahf
mov
mov
cmp
hlt
add
adc
pusha
mov
pop
daa
outsl
jg
xor
jecxz
or
cmp
sahf
sbb
xor
loope
leave
inc
mov
test
lods
cmp
cmc
sub
cmpb
mov
sub
xchg
pop
cmp
or
mov
or
mov
hlt
inc
sbb
add
inc
in
sahf
add
movl
movl
mov
xor
add
mov
or
sub
mov
mov
and
or
mov
or
mov
mov
sub
mov
mov
mov
mov
mov
xor
jmp
xchg
mov
imul
sub
in
rorb
pinsrw
pavgw
jle
fdivrs
cmc
mov
push
cmp
xchg
imul
repz
adc
stos
filds
fdiv
int
jno
loopne
insl
add
adc
test
push
je
pop
cli
xchg
pop
jle
outsb
fsubs
inc
popa
inc
xchg
rcl
out
jb
adc
lret
mov
jg
lds
push
mov
cmpsl
cmp
cmp
shll
ds
xchg
mov
lahf
cmpsb
push
pop
lahf
dec
dec
sub
in
jle
add
addr16
mov
out
pop
or
cmp
addr16
sti
cmpsb
fsubl
lret
add
add
pop
push
xor
xchg
test
loop
aaa
mov
push
cmpsb
sbb
je
lret
jle
inc
cmpsb
je
cmp
jg
xor
mov
cmp
xor
mov
mov
lods
push
xor
push
outsb
mov
push
push
add
addb
cmp
jnp
les
dec
and
xor
aam
mov
lret
cmc
bndstx
xchg
add
cmp
test
aas
push
ljmp
push
jmp
xor
push
mov
fsub
lahf
inc
jae
imul
popf
fistpll
mov
jmp
ds
fistps
add
dec
es
mov
inc
and
mov
mov
add
aad
xchg
lret
push
orb
or
sti
mov
mov
fucomip
sbb
jmp
adc
push
std
push
mov
sbb
cmp
sbb
leave
and
xor
push
popl
xor
push
jnp
xchg
dec
mov
sti
xchg
inc
adc
cmp
sbb
add
push
fildll
insl
inc
pop
pushl
adc
cld
addl
orl
test
pop
inc
shl
test
jbe
enter
cmp
lret
jo
mov
jno
faddl
jns
adc
je
pop
xor
pushf
inc
mov
xor
cmpsl
ja
in
push
inc
and
adcl
movsb
jae
imul
mov
sub
adc
inc
cmp
mov
aad
jg
faddl
dec
popa
call
leave
xchg
faddl
nop
sbb
adc
adc
and
or
sbb
stos
mov
mov
in
cmp
lods
add
jmp
mov
adc
nop
pop
mov
inc
inc
mov
sub
mov
addr16
aam
push
lock
pushf
adc
inc
aaa
jae
int
adc
adc
bound
lds
call
addr16
xchg
pop
xchg
subl
add
pop
sbb
push
mov
and
dec
popf
xor
and
iret
icebp
dec
les
scas
cmpsl
shll
in
cmp
es
ret
lcall
mov
cmp
add
and
push
insl
lcall
adc
jg
xchg
lret
mov
xchg
iret
in
leave
inc
mov
pushf
das
insb
scas
iret
repnz
mov
inc
lahf
jbe
adc
mov
mov
lret
data16
pop
sub
mov
nop
ds
scas
imull
fcmovnb
lret
scas
nop
xchg
xchg
cmp
or
xlat
pop
cltd
sub
dec
mov
rcl
pop
mov
mull
fmuls
sbb
pop
jo
dec
sbb
outsl
cli
inc
sbb
inc
add
push
int3
sbb
das
sub
scas
pop
in
lret
cmp
cltd
aam
sbb
movsb
push
adc
jns
dec
xchg
sbb
mov
inc
or
into
rolb
fcmove
lret
jb
xor
cmp
lods
pop
pmaxub
incl
sub
cmpsb
pop
pop
out
jnp
pop
pop
jmp
sub
xor
push
cld
inc
pushf
sarl
testb
pop
xchg
pushf
xor
xchg
mov
and
inc
mov
popf
mov
pop
mov
mov
adc
mov
popf
ja
imul
mov
test
or
test
mov
and
out
sub
cmp
lods
ljmp
fisubs
lret
ret
sub
imul
xor
shrb
adc
fs
or
movsb
fsubs
es
mov
dec
xchg
shrb
inc
xchg
jnp
daa
push
pop
das
xor
pop
testb
jg
sub
adc
and
inc
jne
stos
xchg
adc
jecxz
push
mov
fsubr
int
jno
pop
adc
mov
fwait
mulb
lcall
call
dec
sub
push
mov
test
jg
mov
mov
adc
out
cmp
jg
cmp
mov
mov
jo
int
mov
ljmp
leave
lfs
mov
inc
ljmp
je
and
pop
push
sbb
leave
loope
cwtl
or
cmpsl
test
gs
jae
inc
out
xchg
ja
pusha
lcall
mov
mov
adc
hlt
sar
mov
jbe
call
mov
dec
mov
jl
adc
arpl
popf
pop
push
pop
out
das
jecxz
in
push
push
addl
mov
cwtl
xchg
out
call
xor
push
adc
clc
lds
shlb
pop
int
mulb
mov
loop
cmp
jmp
inc
push
sub
adc
dec
or
xchg
pop
imul
lea
sbb
mov
mov
repnz
lock
repnz
popa
jl
loope
add
xor
mov
imul
lea
mov
mov
imul
mov
mov
or
xor
div
mov
jmp
push
fadds
sub
push
and
cmp
dec
xchg
pinsrw
pcmpeqw
inc
sub
mov
shr
xchg
xchg
add
dec
adc
adc
mov
iret
into
das
loopne
adc
and
add
cltd
xchg
popa
dec
inc
ljmp
out
push
inc
ss
test
shlb
pushf
sbb
test
push
fnstenv
dec
mov
jb
add
aas
pop
adc
xchg
sahf
into
lock
pop
mov
test
pop
aam
jb
out
mov
aaa
jmp
into
ret
mov
and
movsl
inc
mov
out
rcll
and
add
add
pop
jp
mov
pop
and
test
imul
inc
cmc
movsl
push
cs
dec
js
adc
jmp
in
mov
addr16
frstor
xchg
push
negl
repnz
icebp
leave
popa
cld
push
xorl
std
inc
inc
jns
jno
pop
loopne
jle
outsb
incl
clc
cmp
adc
jnp
xchg
nop
insl
sbb
dec
inc
in
sub
mov
pop
mov
xchg
das
or
loop
lret
cmp
sub
jg
jge
xlat
xor
xor
jae
mov
sub
dec
and
addr16
ljmp
insl
int3
push
xlat
dec
push
mov
add
mov
xchg
out
sub
push
xchg
mov
or
bound
subl
mov
subb
movsb
cmpsl
push
adc
xor
stc
cmp
das
mov
xor
mov
xlat
mov
push
icebp
fistpl
and
xchg
stos
clc
jge
mov
ja
insl
into
push
push
push
leave
out
adc
mov
cmp
fstpl
sub
xlat
fwait
rorl
mov
dec
nop
push
popf
pop
push
dec
stos
fcomi
test
mov
in
xor
arpl
aaa
in
and
fdivl
mov
inc
and
add
into
xor
fcoms
xchg
mov
out
jbe
and
in
add
sysret
cmp
fbld
inc
cmp
sbb
or
add
scas
sbb
sub
push
enter
xchg
and
mov
xor
pop
movsb
fimull
pop
jge
pop
jmp
popf
ss
cmp
mov
fidivrs
sti
sbb
xor
push
sub
icebp
pushf
mov
cmpsb
and
mov
sbb
in
sbb
test
xor
ds
pop
ret
and
xor
mov
jecxz
jmp
call
lds
fwait
inc
popf
pop
adc
pushl
cwtl
movsl
lock
jbe
mull
enter
xor
shlb
shlb
mov
fnstcw
fdivr
inc
fstpl
adc
jmp
lret
popl
or
adc
cmp
mulb
in
sbb
or
lods
add
pop
push
shl
stc
push
sub
idivl
popf
je
ss
rolb
data16
jae
push
in
cmp
repz
pop
add
loope
xchg
sbbl
incl
enter
bound
xrelease
sbb
aas
in
movsl
jge
dec
inc
inc
popf
mov
mov
dec
sub
inc
lret
ret
xor
lahf
lahf
jecxz
shll
test
addr16
inc
xor
subl
stos
xor
loop
xchg
leave
jnp
xor
xor
mov
jo
jp
loopne
dec
mov
sub
xchg
call
adc
movsl
popf
mov
jb
jbe
das
mov
add
mov
xor
jg
xchg
pop
push
xor
divl
imul
or
testl
mov
cmp
fldl
dec
clc
les
in
mov
sbbb
inc
pop
mov
pop
das
inc
sub
push
lret
lds
jns
cmpsb
add
shl
xchg
enterw
mov
lods
xor
adc
lret
jae
xor
or
out
jl
mov
cmp
call
lods
mov
scas
inc
pop
jle
xchg
insl
push
stos
dec
mov
sub
aas
xchg
pop
cs
imull
mov
jae
into
imul
nop
jecxz
loope
imul
outsl
cwtl
outsl
mov
es
mov
shrb
xor
jns
jecxz
xchg
insl
inc
shr
pushf
dec
mov
lcall
lcall
dec
pop
pop
push
out
mov
adc
mov
jl
rcrl
test
mov
out
enter
subb
popa
pop
xor
dec
ret
test
insl
and
adc
mov
pusha
inc
pop
fnstenv
cmc
lret
ret
lock
imul
sbbl
jecxz
sub
lahf
dec
imul
std
mov
adc
cwtl
hlt
and
rcrl
jb
out
stc
push
pop
dec
movb
js
dec
add
inc
mov
and
or
or
out
test
pop
jae
insb
mov
add
sub
inc
frndint
mov
fwait
aad
cmp
sahf
xlat
jmp
test
inc
int3
adc
push
loopne
subl
cmpsb
nop
outsl
xchg
add
hlt
push
faddl
xchg
lock
push
push
jge
movsl
js
or
mov
ret
pop
addl
adc
sub
sti
mov
das
inc
stos
ss
push
sbb
adc
fsubr
ljmp
xchg
rorb
cmp
sub
fildll
std
hlt
push
insl
insb
push
dec
int
imul
and
add
cmp
jb
movl
movl
movl
movl
jmp
xorb
ret
xor
xor
xlat
or
pinsrw
lss
cmp
aad
nop
les
test
mov
imul
or
push
loope
and
or
hlt
lret
jge
ficoms
push
sbb
loop
jmp
std
pop
sbb
into
inc
mov
ror
cltd
and
xlat
loop
lock
popa
mov
adc
adc
jle
sarl
sahf
push
or
popf
popa
mov
and
loope
sbb
xchg
adc
xor
adc
ret
push
add
aam
mov
shl
rcrl
cli
ror
xchg
cmpsb
jmp
cmp
mov
or
xchg
inc
outsb
lock
das
mov
ret
fnstcw
lret
sbb
and
out
gs
sub
xchg
mov
push
cmp
ljmp
mov
jo
dec
dec
mov
sbb
xchg
movsl
dec
jmp
dec
xor
hlt
mov
xchg
jbe
mov
sti
outsb
inc
shr
inc
add
int
cmpsb
jnp
rorl
arpl
jnp
loope
notb
adc
cld
mov
lcall
rclb
pusha
xchg
mov
or
mov
xor
xor
sbb
inc
cmc
ljmp
adc
jno
inc
hlt
sarl
jno
xchg
ds
sbb
inc
sub
mov
pop
aaa
xor
add
lds
jae
rorb
xor
xchg
mov
imul
loopne
xchg
cmp
push
repz
cmp
dec
dec
rorb
cmpsb
jo
mov
or
aad
in
jne
pop
das
mov
xor
scas
xor
int3
cmp
in
xchg
push
jne
push
fdivrs
xchg
sbb
sub
push
sbb
inc
mov
inc
mov
or
push
icebp
push
sub
in
xor
push
cmp
in
pusha
mov
jns
push
jno
and
cli
addr16
jecxz
popf
negl
cmp
out
xor
push
adc
aad
xlat
cmp
psraw
cs
mov
adc
popf
ret
scas
aad
subb
ljmp
xor
lret
std
incl
xor
and
pop
mov
loopne
inc
daa
and
ja
dec
sbb
sti
lret
negb
test
les
jl
xor
mov
xchg
cmp
xor
popa
jae
mov
sbb
and
in
push
cwtl
push
and
in
outsb
mov
fwait
pop
add
mov
pop
and
cltd
mov
xchg
mov
movsb
cmp
lahf
test
lcall
rcll
lret
or
in
push
sub
subb
xor
int
movsb
gs
mov
dec
adc
loopne
sbb
or
cltd
add
imul
xchg
aad
and
lret
or
pop
mov
cmp
push
cltd
sbb
mov
shl
cli
lret
sbb
aam
les
xchg
femms
adc
scas
jno
xchg
pop
aas
pop
inc
xor
mov
sbb
sahf
sbb
xor
dec
lods
mov
pusha
adc
pop
jb
jbe
mov
sbb
or
fisttpl
dec
roll
or
lds
mov
xchg
out
data16
xchg
sub
mov
cltd
mov
in
test
adc
mov
sbb
sti
aas
pop
jp
push
inc
cli
cs
xchg
fldl
test
or
in
push
dec
enter
dec
xchg
inc
xchg
adc
mov
pop
and
jnp
add
scas
pop
jmp
jl
sbb
xchg
pop
rcl
mov
jae
ficoms
adc
std
lahf
in
inc
xlat
sbb
push
dec
fisttpl
fwait
mov
je
cltd
cld
aad
mov
cmpsl
shrl
pusha
push
push
mov
cmpsl
notb
jb
movsb
div
arpl
push
sahf
data16
movlps
sbb
je
add
lahf
sub
mov
xchg
movsl
popf
sti
mov
dec
push
mov
dec
or
or
or
filds
fistl
das
gs
and
mov
push
pop
pop
push
dec
inc
pop
in
dec
cmpsb
jle
mov
imul
lods
call
cmp
pop
adc
sub
inc
cmp
fisttps
inc
jecxz
pop
inc
sub
lods
and
add
popf
testl
and
push
lret
popl
ds
and
add
lods
mov
add
subl
mov
inc
adc
or
pusha
inc
pop
nop
in
fiadds
push
dec
dec
cltd
and
sbb
and
sbb
fmull
sbb
jmp
imul
mov
hlt
shr
lods
test
pop
cmp
cmp
push
loopew
fstpl
test
das
aaa
mov
je
in
add
dec
mov
pop
adcl
add
xchg
popf
cmp
lods
sti
out
shlb
in
jb
aad
jns
xchg
repnz
sarb
mov
sarl
shrl
mov
insb
in
mov
or
ja
sub
xchg
xor
mov
fwait
mov
xchg
cld
and
mov
xor
mov
dec
ljmp
push
clc
mov
jns
out
cmp
rorl
popf
and
push
inc
andl
adc
imul
es
xchg
mov
leave
aam
lret
arpl
dec
fldt
ljmp
out
adc
xchg
fcmovnb
inc
hlt
rcll
add
inc
lock
inc
in
sbb
add
movl
movl
movl
mov
mov
or
lea
add
movl
jmp
add
inc
sti
daa
push
cs
je
xor
or
movhps
fld
leave
arpl
push
sbb
add
popf
jns
and
leave
andb
fdivp
fldt
mov
add
enter
sub
ss
push
adc
or
les
xchg
aaa
movsb
dec
into
in
inc
lods
adc
cmpsl
stos
loop
inc
xor
scas
sub
mov
jae
pop
mov
pop
jb
stos
notb
fnsave
push
inc
pop
outsl
fstps
dec
mov
mov
cwtl
sbb
dec
jne
cmp
sub
out
cmp
pushw
push
jp
lret
cmpl
call
pushf
sbb
or
gs
adc
into
mov
adc
xor
ret
rolb
jo
fimuls
mov
adc
push
pop
sti
jns
mov
repnz
and
lret
xor
jmp
movsb
int
sahf
lahf
mov
or
mov
addb
aad
xorb
icebp
test
sub
repz
pop
pop
push
sbb
cld
adc
jns
xlat
hlt
fildll
fdivrs
out
pop
insb
pop
sbbl
stos
jne
or
addl
mov
jle
xor
sub
scas
and
in
jae
in
popf
int3
enter
mov
lock
ds
imul
sahf
adc
jp
cmp
pop
ja
pop
mov
mov
dec
aaa
xchg
mov
push
xchg
arpl
or
pop
mov
sub
bound
push
cmp
sub
int3
fldl
xlat
cli
adc
mov
in
movsb
mov
inc
add
sbb
popa
and
mov
arpl
clc
fnsave
mov
inc
mov
add
imul
loop
push
std
fsubl
icebp
mov
out
sub
cld
addr16
leave
add
inc
in
pop
sub
lea
xor
mov
cli
mov
pusha
mov
xchg
pop
enter
xchg
adc
sbb
pop
rorb
adc
adc
adc
cltd
sub
xchg
loop
xor
jl
outsb
adcb
clc
mov
lahf
jns
loop
mov
jbe
mov
insb
arpl
das
ljmp
cwtl
sbb
enter
aaa
xor
lret
ds
cmpb
dec
pop
cs
loope
or
push
out
call
jmp
nop
loop
stc
xchg
out
and
repnz
movsl
das
dec
ljmp
mov
jae
push
repnz
fnstcw
fbld
adc
pop
shl
lahf
inc
movsb
sub
lods
pushf
fistl
pop
push
fnsave
mov
adc
mov
daa
js
add
int3
add
std
jb
ds
shll
scas
adc
push
pop
push
push
adc
test
jecxz
sbb
insl
cltd
xchg
sub
and
cltd
dec
jo
or
and
mov
daa
and
in
or
dec
fisubl
in
ss
jge
pusha
pop
clc
test
fs
jge
psubusw
add
movsb
sbb
lods
movsb
fldl
jmp
add
mov
nop
mov
xchg
pop
jno
dec
sub
cmp
les
inc
sarl
xor
js
pop
rcr
lret
sbb
mov
xchg
xor
es
stc
jle
mov
cwtl
mov
xlat
stos
cmp
cli
xor
test
push
in
jno
loopne
out
movsb
mov
cmp
int
adc
hlt
ljmp
jle
loopne
mov
sbbl
scas
or
sbb
mov
xchg
mov
ds
popf
xor
mov
cmp
pop
ret
scas
xorl
out
lret
xlat
cmpb
push
dec
nop
icebp
leave
mov
es
out
add
pop
push
mov
xchg
mov
iret
nop
int3
push
scas
jle
in
imul
inc
mov
icebp
out
aas
icebp
adc
dec
loop
mov
and
inc
daa
inc
mov
pop
test
stos
mov
test
sbb
add
je
ljmp
fwait
pop
push
pop
int
push
ret
lahf
out
cld
mov
xor
push
aam
popf
mov
adc
int
xchg
pusha
or
test
cld
es
sahf
ljmp
mov
cmp
sbb
lret
mov
loopne
and
or
test
repnz
mov
sub
mov
and
push
push
lcall
push
xchg
ljmp
pop
fsubrp
jge
out
jmp
xorb
mov
loopne
adc
pop
or
stc
pop
nop
iret
sbb
jl
scas
faddl
sbb
pusha
inc
inc
pop
mov
mov
ret
cltd
mov
dec
mov
mov
cltd
aam
in
or
into
inc
sub
inc
stos
mov
lahf
fiaddl
dec
outsb
adc
xchg
movsb
mov
ficoms
inc
aaa
cltd
cmc
fwait
mov
lods
jecxz
adc
outsl
pop
stos
lds
jne
lock
cmc
and
cltd
adc
pushf
addr16
mov
fwait
jne
icebp
pop
push
sbb
inc
mov
and
mov
lock
sbb
call
popa
jne
ja
jb
cmp
pop
dec
mov
stos
cmp
sbb
daa
xor
inc
and
loopne
inc
inc
or
or
add
inc
int3
fwait
push
add
movl
movl
movl
mov
mov
sub
add
mov
imul
mov
mov
jmp
aad
sub
ss
adc
xchg
mov
pinsrw
bswap
hlt
filds
incb
push
xchg
adc
pop
inc
ljmp
mov
jo
fldl
or
test
xor
and
daa
cwtl
int3
test
add
leave
sbb
mov
push
cmp
std
leave
nop
or
rolb
aad
mov
sub
enter
add
xchg
aam
test
mov
dec
cwtl
out
xchg
and
mov
in
inc
loope
negl
fwait
popa
je
xor
ficompl
jns
ljmp
shrl
insl
mov
mov
or
out
fs
ret
xchg
adc
int
flds
aad
xor
pop
mov
aam
jmp
stc
fsub
mov
repz
sbb
push
dec
aas
xchg
cli
loope
jo
add
push
or
ja
jle
fcoms
adc
mov
pop
cld
xchg
lahf
lods
sbb
jecxz
xchg
inc
add
sti
in
out
add
sti
push
rol
movsb
shrl
fcmovu
roll
in
out
cmp
push
cmp
mov
add
mov
cltd
pop
lock
addr16
xchg
or
pop
jle
mov
ljmp
fs
scas
mov
int
mov
fsubp
idivl
jne
mov
mov
mov
xor
jmp
jne
sbb
add
aad
hlt
dec
lods
lock
ds
add
scas
daa
add
push
stc
loope
dec
mov
stc
push
cmp
pop
mov
mov
in
push
and
sbb
jne
mov
adc
repz
stos
xchg
push
dec
notl
popf
and
mov
test
sbb
cwtl
or
adcb
mov
scas
int3
cld
call
mov
cli
jb
jg
dec
push
aaa
popf
ret
movsl
sar
insl
gs
mov
sub
repz
imul
push
xchg
lcall
adc
sbb
adc
or
sbb
cmp
imul
loop
push
xchg
cli
fisubs
or
outsl
push
cmp
push
pop
mov
mov
jle
rclb
addr16
inc
push
adc
gs
or
int3
mov
rep
out
mov
pop
push
xor
xchg
and
cmp
repnz
pop
lret
outsl
dec
xor
loopne
fldl
andl
jne
xlat
and
popf
push
xchg
cmp
cmp
push
stos
inc
gs
jno
popf
scas
int
sub
in
pop
out
fsubs
adc
iret
lret
dec
es
loope
xchg
lods
addr16
scas
jecxz
stos
scas
fstl
pop
pop
sub
pop
test
and
mov
jge
push
repz
adc
jp
xlat
cmp
lock
rorb
add
or
ljmp
mov
mov
xchg
and
pop
aad
cltd
mov
mov
test
and
xchg
xchg
aaa
loop
xchg
xor
inc
loop
jne
xor
and
imul
mov
mov
or
mov
fcomi
inc
in
or
lods
adc
sbb
iret
ret
xor
enter
je
js
cmp
xor
jg
pop
cmpl
inc
fdivs
bound
add
enter
adc
lret
and
inc
xlat
add
fdiv
pop
data16
push
add
adc
and
mov
loope
es
in
adc
les
cli
jo
sub
aad
data16
adc
insl
mov
cmc
add
pop
push
psubb
outsb
shll
into
adcb
xchg
cmp
mov
out
mov
cli
dec
mov
add
adc
push
push
cmpb
sahf
bound
popf
test
inc
mov
adc
mov
push
jne
mov
jle
dec
fwait
mov
push
jno
popf
leave
rclb
xchg
mov
cmpsl
aam
insb
imul
adc
dec
dec
hlt
and
out
dec
add
outsb
inc
sbb
cmp
int
push
mov
lods
xchg
test
fcompl
lock
mov
or
xchg
sbb
gs
or
mov
mov
arpl
or
popf
or
lods
fists
sahf
mov
mov
lods
and
jb
shll
jge
cld
scas
shlb
cmp
scas
xlat
mov
xchg
test
in
sbb
jmp
mov
cmc
inc
mov
lahf
pop
jle
outsb
xor
mov
repz
inc
push
mov
dec
sub
pop
idivb
xchg
dec
sahf
mov
mov
cld
out
ja
add
negb
stos
cmpsb
sets
ret
lret
cmp
popf
mov
sub
ret
int3
shrb
in
pop
or
mov
sub
js
push
jns
out
mov
not
jp
cmp
pop
mov
cmpsl
mov
dec
mov
jge
jge
mov
jnp
loopne
movsb
fstp
fsubr
push
mov
or
xor
scas
dec
ret
inc
sbb
mov
mov
add
sbb
dec
adc
fidivl
pop
xchg
mov
fdivl
into
mov
mov
add
xor
sub
mov
mov
mov
mov
mov
sub
mov
imul
mov
or
sub
mov
jmp
out
aad
aad
aad
adc
mov
pinsrw
psubusb
jl
into
pop
jo
fld
jns
xchg
mov
aaa
adc
push
out
or
out
mov
aaa
insl
cmpsb
lods
cli
repnz
mov
nop
aas
lods
mov
mov
icebp
pop
popf
test
and
xchg
enter
test
dec
bound
inc
adc
cmpsb
rcll
pop
cli
dec
daa
mov
cmpsl
and
xchg
mov
mov
jb
inc
dec
aad
lods
adc
and
jle
int3
inc
adcb
sti
add
mov
push
push
cmp
xchg
push
sub
cmp
addr16
push
or
pop
push
pop
fimuls
push
into
jecxz
dec
cmp
in
jb
aad
fildl
jno
jp
push
or
xchg
mov
fs
dec
pop
popa
ja
or
jle
in
clc
mov
jns
addl
push
ret
sti
mov
les
in
call
stos
cmp
enter
mov
mov
fisttps
subb
repz
addr16
cmp
std
pop
push
cmp
push
test
mov
mov
hlt
dec
fiadds
shl
add
dec
and
in
hlt
std
out
shll
and
sbb
arpl
adc
inc
xchg
in
orb
aad
lock
repnz
dec
bound
addr16
out
mov
mov
cmp
cwtl
xchg
scas
xchg
sbb
jno
les
xchg
push
loopne
pop
xchg
hlt
push
lahf
bound
or
or
loop
pushf
pop
stos
rcr
fldl
xlat
lret
fdivr
add
data16
outsb
push
lods
shl
cmp
lcall
lcall
push
cmp
xor
mov
push
movsl
xchg
std
stc
lret
popa
add
dec
or
or
push
adc
andb
adc
fwait
rep
mov
lcall
jbe
pop
pop
adc
and
xlat
imul
mov
mov
cmc
sahf
loopne
sbb
push
pop
jle
sbb
dec
lock
enter
js
sbb
inc
inc
into
clc
mov
jp
mov
jecxz
push
push
xchg
jne
jns
mov
fmul
xchg
xor
js
push
std
dec
lods
jl
das
cmp
mov
xchg
loope
add
test
jge
popf
cli
outsb
xchg
jmp
repnz
loopne
and
jo
pop
adc
mov
out
and
cmp
stos
pop
xor
dec
cmpsb
movsb
pop
mov
or
pop
cmp
or
push
push
xchg
hlt
pop
mov
xor
sbb
or
push
jg
pop
mov
jmp
lds
in
xchg
jne
add
hlt
mov
xor
adc
push
int3
sbb
sbb
mov
clc
pop
fisubrs
das
rcrb
xchg
xchg
jge
icebp
loopne
loopne
push
sbb
addr16
lret
call
movsl
pushf
dec
cwtl
outsl
cmp
sbb
andb
xchg
and
or
popa
rorl
push
je
jns
inc
shr
or
mov
iret
aad
cmp
pop
pop
lcall
enter
popf
jo
sub
mov
into
clc
mov
push
insl
je
orl
outsl
jmp
ret
mov
inc
inc
lds
jns
loopne
out
pop
jg
int3
cmp
mov
js
movsb
outsl
sub
or
orl
ja
sbb
sub
lods
cmpsb
xchg
jle
loop
scas
add
dec
add
jle
out
rclb
psubd
xor
notb
jb
xor
mov
jp
shll
add
xchg
cs
push
nop
adc
into
and
lcall
pop
and
jle
sbb
lret
inc
leave
xchg
test
xchg
lret
adc
push
addr16
push
jg
pop
jl
push
jne
dec
pop
xchg
xchg
jne
cmp
xrelease
repnz
imul
data16
inc
adc
jmp
cmp
mov
test
pop
push
ret
popa
add
cmp
cld
pusha
dec
cmp
enter
clc
fstpt
aad
add
lds
aas
pop
test
inc
aaa
repz
push
inc
mov
add
add
ds
ja
rorl
xor
orb
xchg
pop
mov
cmp
bound
and
xor
mov
call
adc
mov
jbe
adc
cmp
pushf
mov
sbb
mov
scas
pop
loope
xchg
out
inc
in
adc
data16
out
daa
sub
push
mov
push
lret
cmp
stos
popf
mov
or
cmpl
ja
mov
mov
mov
stos
add
loop
aad
stos
xor
imul
add
push
gs
xlat
mov
pop
push
mov
popa
pushf
jp
fsubs
add
movsl
adc
test
ret
sbb
inc
or
push
xchg
adc
js
int3
xor
lods
js
push
loopne
mov
mov
push
mov
mov
or
call
frstor
jg
negb
push
sub
les
cmp
cmp
pop
inc
mov
test
dec
iret
or
clc
and
mov
ss
imul
out
insl
test
in
fnstsw
cwtl
test
and
jae
dec
dec
jl
hlt
xorb
cli
sub
incb
ret
hlt
xor
mov
sub
add
cmp
jbe
xor
inc
mov
mov
movl
movl
movl
movl
movl
movl
mov
mov
add
xor
xor
div
mov
xor
mov
mov
div
mov
xor
div
mov
sub
mov
and
imul
and
xor
cmp
je
push
movl
movl
movl
movl
movl
mov
mov
imul
xor
add
mov
and
sub
mov
mov
add
xor
mov
mov
and
sub
mov
mov
mov
mov
mov
xor
or
imul
or
mov
imul
xor
mov
div
add
mov
and
imul
and
xor
cmp
jne
pop
pop
pop
leave
ret
mov
mov
ret
mov
mov
ret
mov
mov
ret
push
mov
sub
push
push
push
movl
movl
jmp
imull
xchg
xchg
aam
arpl
ret
js
add
pop
icebp
nop
jecxz
and
pusha
inc
pop
std
mov
adc
out
shr
fldt
ss
outsb
pop
mov
xchg
dec
adc
mov
xchg
sub
and
dec
paddusw
cmpsl
add
into
xor
imul
test
mov
mov
je
mov
push
push
cmpsb
mov
push
movsb
xor
sbb
mov
xchg
add
mov
inc
xchg
push
push
sbb
enter
fwait
aad
mov
rorl
loope
imul
arpl
jno
jg
es
inc
js
je
xorl
clc
push
fisubrl
push
dec
jecxz
sbb
push
fisubrl
ret
shl
jo
add
or
xchg
mov
sub
dec
shlb
clc
in
add
jo
xchg
dec
mov
or
jo
cltd
push
jb
lock
mov
add
mov
pop
pop
sub
dec
int
je
mov
dec
insl
mov
inc
mov
mov
adc
jbe
add
mov
imul
pop
orl
sbb
xor
xor
movsl
imul
jmp
mov
ret
fisubl
mov
add
mov
insb
dec
out
and
sub
dec
addr16
sbb
dec
cmp
bound
dec
xor
inc
in
outsb
cmp
inc
loope
adc
repz
in
cmc
negb
push
ljmp
out
cmp
bound
cmp
test
decl
lret
push
shr
or
add
ljmp
mov
push
pop
adc
pop
insb
jno
iret
cmp
mov
andl
adc
adcl
dec
pop
clc
dec
out
mov
xchg
xchg
cli
aaa
sub
mov
enter
pop
popa
aam
ret
pop
push
push
or
mov
adc
hlt
outsb
jnp
jmp
mov
repnz
and
addb
test
imul
loop
jle
ror
stos
sbb
cwtl
dec
adc
shl
incl
sarb
mov
and
stc
or
das
call
push
iret
jle
rol
orb
jle
jns
inc
mov
cwtl
fs
movb
mov
inc
lcall
or
int
inc
pop
mov
cltd
xchg
push
sub
in
jno
or
por
ja
xchg
mov
bound
jo
pusha
jno
enter
jmp
or
sbb
insb
cmpsl
shll
push
out
push
enter
add
arpl
divl
dec
arpl
aad
sub
fldl
push
cmp
in
cli
mov
addl
stc
inc
and
push
int3
jmp
xchg
pop
in
jmp
xchg
cmp
in
push
loopne
mov
repz
pop
xor
les
aam
rclb
call
and
xchg
clc
cmpsl
call
xorb
test
mov
dec
sbb
div
in
scas
mov
xchg
pop
arpl
jge
sbb
test
adc
jns
xchg
sub
push
imul
mov
ficoms
push
test
aaa
adc
sbb
mov
pusha
dec
cld
in
ss
pop
and
out
ret
sahf
jae
sub
and
arpl
jecxz
push
sti
cmp
push
cmpsb
mov
jmp
ja
and
and
mov
leave
test
cmp
fildll
mov
in
push
daa
ja
es
outsb
mov
cs
add
sbb
mov
sbb
adc
inc
sbb
sti
push
xor
inc
xchg
int3
stc
pop
dec
jecxz
adc
popf
jge
add
mov
scas
loope
pop
popa
dec
cmp
or
sbb
sbb
fwait
jp
je
sarb
mov
pxor
add
stos
lock
jbe
cli
lret
call
fldt
imul
in
inc
movsb
pop
iret
jmp
test
fdiv
aam
mov
cmp
cwtl
movsb
sahf
sti
lock
jmp
add
xor
add
push
test
fisubl
ret
les
mov
scas
cmp
push
iret
mov
inc
loopne
test
dec
mov
test
cmp
mov
lods
add
test
in
sahf
xorb
push
lahf
lock
add
dec
xchg
or
mov
shlb
jl
jg
ret
or
movsb
adc
pop
sub
gs
mov
inc
icebp
fwait
add
jae
pop
aas
mov
and
add
xor
mov
mov
xchg
sub
outsb
inc
insl
lahf
int
xchg
inc
out
rorb
shrb
cmp
fs
sub
sub
jnp
icebp
mov
mov
sub
xor
xchg
aam
or
repz
sub
cmp
lahf
clc
sub
jge
push
out
mov
sub
lds
jae
sub
xchg
dec
fistpl
xchg
lods
jmp
addl
push
das
dec
pop
into
ss
xchg
or
or
inc
out
arpl
dec
sarl
xchg
and
xchg
pop
jl
cwtl
sbb
call
iret
inc
in
fbld
adc
popf
mov
jmp
xor
fidivrs
clc
cwtl
divb
dec
mov
loop
insb
fstps
xchg
jno
pop
fldenv
cli
aam
xchg
cs
mov
enter
xchg
mov
and
scas
sarb
or
outsl
and
pop
imul
cmpsl
cmp
icebp
sbb
jecxz
xor
cli
inc
adc
lods
stos
out
pusha
sbb
test
test
in
rol
insb
xchg
clc
movl
cmp
pop
xor
inc
into
push
adc
imul
mov
push
outsb
pop
mov
xchg
pop
rclb
lods
adc
notb
loop
cltd
sbb
call
adc
int3
jne
pop
and
notl
into
jb,pn
mov
scas
leave
dec
cmp
out
push
pushf
stos
mov
or
dec
add
sbb
ficoms
imul
dec
lock
push
or
loopne
push
jl
jae
ret
stc
dec
push
mov
mov
push
bound
imul
sti
sbb
and
cmp
sub
test
mov
inc
mov
pusha
add
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
jmp
pop
fdivl
jo
push
push
mov
xor
repz
jge
dec
outsb
xchg
inc
dec
ljmp
dec
dec
and
outsb
rcll
mov
push
in
sub
push
test
jae
mov
dec
adc
mov
dec
lods
dec
call
insl
in
rcrb
push
mov
imul
pop
and
pop
xor
pop
mov
xchg
aad
fwait
mov
scas
dec
cmc
clc
cmp
xlat
mov
ss
xor
inc
fsub
fs
subb
pop
in
dec
xor
dec
pop
jg
fld
jge
loopne
push
movb
nop
insl
push
mov
icebp
mov
dec
mov
xor
inc
adc
daa
xchg
outsb
insl
scas
adcb
leave
rcl
mov
mov
shll
lds
adc
fistpl
sbb
cld
mov
mov
movsb
mov
fisttps
call
mov
lret
dec
cmp
cltd
sub
xor
lcall
jns
push
or
in
leave
push
lock
subb
add
roll
ljmp
out
push
mov
das
fisubrl
mov
aaa
sub
mov
fsubrl
cli
aad
pushf
cmpsb
js
rcll
sub
sbb
lcall
das
loop,pn
aam
cmpsb
cs
push
testl
jne
fxam
pusha
in
bound
add
int
cltd
in
push
cmp
lds
fisubl
cmp
xor
pop
push
pop
or
add
cmpsb
testb
pop
mov
mov
mov
dec
notl
mov
dec
or
or
insb
xchg
xchg
shrb
push
push
xchg
xchg
xor
addr16
adc
sbb
das
push
pop
xor
cmp
stc
pop
xchg
lahf
std
cli
mov
cmp
or
adc
cmpsl
mov
sub
imul
mov
aad
lods
jmp
dec
mov
dec
push
xchg
loop
jmp
ret
popa
shlb
jecxz
fmulp
mov
fs
xchg
test
ret
idivl
xor
shrl
mov
push
mov
stc
pop
loope
mov
out
shrl
add
iret
sarl
cli
push
or
or
out
lock
xchg
xor
in
imul
and
dec
xor
xchg
cmp
dec
loopne
clc
xchg
scas
mov
outsl
sub
aas
mov
aam
adc
stos
mov
into
mov
ja
ds
idiv
xor
repz
fadds
adc
cmp
and
popf
sbb
enter
xchg
insl
in
xchg
jg
mov
xchg
lcall
push
scas
xor
andl
lods
jbe
mov
sbb
lock
pop
dec
cmp
jo
insb
xor
push
int3
mov
or
cmpsb
pop
out
jmp
clc
loop
call
sbb
call
fldcw
inc
fnstcw
mov
pop
fstl
adc
cltd
push
inc
cs
pop
inc
arpl
addr16
hlt
shl
out
or
pop
loopne
clc
clc
jo
cmpsl
lods
pushf
mov
jo
repz
dec
cmpb
repz
incl
jp
clc
aam
xchg
add
cmp
adc
stos
dec
ds
insb
fwait
inc
in
dec
jno
mov
mov
xchg
enter
add
cmpsl
push
in
aaa
cmpb
pop
lods
packuswb
notb
xchg
xor
push
out
jecxz
call
repz
in
xor
mull
adc
lcall
dec
daa
sti
xchg
jnp
in
or
loope
outsb
das
int
out
cld
mov
cltd
inc
mov
mov
or
sub
and
add
fdivrs
jge
and
sbb
jno
jb
lock
inc
and
in
shrb
jle
pop
mov
cmp
xchg
or
cli
inc
adc
movsl
outsb
aad
sub
add
adc
mov
push
shll
lea
enter
adcb
and
jo
mov
cmpsb
dec
xchg
cld
push
or
mov
insl
mov
sbb
data16
cmc
mov
jnp
js
mov
cmpsb
test
push
cmpsb
push
outsl
sbb
fistpll
mov
pop
pop
jle
cli
into
js
xlat
jmp
pop
subl
fisubs
xlat
jbe
sbb
cmp
xchg
mov
cmp
push
test
lret
fisttpll
lret
or
cld
sbb
or
sbb
jmp
pop
xchg
out
aam
dec
out
adc
mov
fadd
orb
mov
sti
out
lods
fdivr
dec
fwait
and
xor
adc
movsl
sbb
cmp
lret
cmp
insb
or
inc
and
xor
das
scas
repz
movsl
cmpsb
mov
outsl
pop
mov
xor
add
and
xchg
adc
test
sub
fcoml
inc
ds
jmp
cmpl
lcall
pop
rolb
out
int
push
nop
stos
xchg
fcmovnb
leave
sbbb
xor
and
jle
ss
mov
idiv
mov
iret
loopne
xchg
mov
and
std
jmp
cltd
ret
adc
test
ret
xor
into
jmp
xchg
mov
push
aas
int
cmpsb
xor
flds
mov
mov
sbb
jg
insl
imulb
xchg
pop
pop
adc
lock
pop
mov
lock
rol
and
std
imul
mov
ret
jmp
fdivl
scas
hlt
test
divb
pop
lea
pop
out
mov
jo
or
out
cld
das
mov
push
sbb
add
mov
mov
cltd
mov
ficomps
arpl
mov
xor
xor
in
jg
cld
ret
and
and
les
in
mov
cmp
inc
mov
int
sbbb
pop
popf
or
sbb
mov
int
xchg
lret
xchg
or
in
add
or
inc
mov
xor
cmc
sub
cmp
sub
cmp
repz
inc
call
movsb
sbb
scas
into
test
xchg
outsb
scas
stc
repz
iret
roll
cld
loop
or
adc
xor
in
adc
jl
add
leave
aas
ret
and
call
pop
movl
mov
mov
mov
mov
push
add
push
adc
jmp
lcall
xor
jbe
mov
add
fsubs
imul
cmp
cmp
xor
push
daa
xchg
or
in
dec
mov
mov
ljmp
adc
popf
lds
cmpsl
out
ret
aaa
lret
inc
push
hlt
shlb
adc
mov
mov
sbb
fistpll
loop
rorl
es
fcmovne
push
clc
lods
sbb
test
mov
lcall
sbb
push
and
cmp
loope
out
jno
lret
ljmp
insl
mov
jmp
xchg
test
mov
mov
dec
sub
inc
mov
and
and
or
jl
out
sub
mov
add
mov
push
cmpsb
cmp
test
aad
sahf
mov
iret
mov
jl
idivb
stos
mov
std
arpl
lea
shr
xor
inc
pop
lret
mov
pusha
xor
jnp
or
dec
mov
cmc
nop
push
or
push
pop
je
loop
fs
daa
leave
pop
pop
add
jb
iret
test
cs
jnp
mov
jle
andl
xor
push
mov
or
xchg
pop
iret
jo
adc
and
addr16
shl
mov
xchg
dec
push
xlat
add
add
inc
mov
cmc
pop
cmc
outsb
push
and
cli
stos
ficoml
sbb
adc
in
mov
jmp
rcrb
push
mov
pop
xor
test
cmc
mov
and
sbb
inc
or
add
lcall
cmp
jmp
testl
inc
cmp
mov
clc
jno
and
add
out
insb
hlt
xchg
cmp
imul
cs
sbb
aam
mov
rcl
cmp
mov
xor
pop
ljmp
rsm
mov
scas
stc
daa
cmp
push
lret
sbb
add
sar
fcompl
xchg
fmull
mov
cmp
sub
cli
jno
scas
pop
lock
ljmp
rorl
or
rcr
or
jle
mov
or
ret
xlat
inc
lcall
aaa
cmp
jbe
movsb
out
aas
imul
lret
idivb
ror
sbb
inc
sarb
push
sub
or
pop
mov
roll
xchg
icebp
mov
sbb
stc
imul
mov
out
adc
movsb
mov
cli
xor
aad
mov
or
push
xchg
in
sub
repz
pop
loope
xchg
lret
std
jecxz
sub
pop
das
sbb
xchg
add
add
push
int3
faddl
pop
mov
sub
pop
dec
lret
flds
jg
addl
or
out
sbb
pop
push
in
sbbl
jmp
and
or
fnstsw
outsl
stc
aas
xchg
pop
add
pusha
adc
call
mov
sbb
das
adc
sub
add
push
fstp
pop
arpl
in
jmp
cmp
test
outsl
sub
mov
in
scas
jae
mov
sub
call
pop
xchg
sub
jbe
dec
sub
push
jae
and
inc
jbe
cltd
cmp
test
lods
bound
scas
imul
in
push
sbb
in
cmpsb
loope
fimull
xchg
lock
shll
mov
daa
ja
fprem
adc
sub
sbb
mov
pop
sbb
incb
push
cld
mov
add
cld
insl
inc
sub
sbb
dec
cli
pop
sahf
lret
push
add
pop
mov
es
or
adc
pusha
divb
sbb
dec
scas
sub
pop
test
or
pop
sub
pop
cmp
push
mov
popf
mov
fwait
mov
xchg
xchg
fwait
sbb
or
imul
xchg
pop
cmpsl
adc
cmp
icebp
lret
dec
pop
or
pop
rcr
scas
imul
fldl
notl
adc
sbb
imul
xor
xchg
outsl
arpl
cs
in
jo
mov
sbb
mov
ljmp
mov
adc
nop
icebp
jp
movsb
nop
pop
pop
arpl
mov
cmc
push
add
cmc
in
sbb
jmp
push
out
sahf
iret
cmp
nop
stos
sbb
pusha
or
cmc
mov
aam
ret
shll
xlat
lock
jns
jp
cli
ds
pop
xchg
hlt
lret
sbb
adc
enter
repnz
mov
add
das
jle
popf
outsl
cld
jne
inc
adc
push
inc
test
cmp
dec
aam
enter
cmp
sub
fs
shlb
pop
mov
fs
in
pop
into
xchg
inc
sbb
arpl
mov
arpl
shl
jno
cmp
ds
pop
ss
adc
cmpsb
xchg
negl
inc
popf
pop
add
es
mov
sbb
dec
jecxz
repnz
lret
xchg
test
leave
loopne
andl
xor
mov
icebp
test
cmp
fs
cltd
imul
push
flds
lods
out
in
xchg
adc
pop
fisubrl
ss
inc
push
cmpsb
jae
push
push
lcall
or
outsl
pushf
mov
in
out
push
push
or
inc
jl
int3
mov
mov
push
inc
popa
push
jo
roll
pop
push
push
popa
add
mov
cmp
sbb
jg
sub
cli
push
fistps
arpl
xor
xchg
cmpsl
rep
pop
bound
xchg
aas
insb
adc
push
movsb
adc
xchg
inc
aaa
or
push
je
pusha
aad
mov
mov
stc
mov
jno
mov
or
mov
or
pop
lret
daa
pop
mov
ds
ljmp
sub
mov
xchg
mov
ficoms
into
dec
push
out
mov
int3
lea
ficompl
mov
leave
insb
inc
sub
aam
in
movsb
aam
mov
hlt
sbb
imul
pop
fstpl
scas
andb
xor
idivl
jno
pop
xchg
and
nop
pop
mov
push
xorb
xor
sahf
sub
scas
jmp
fiaddl
adc
xchg
add
ss
adc
sbb
add
inc
outsl
test
arpl
push
pop
outsl
inc
or
push
jno
and
mov
mov
pop
imul
mov
cmp
fidivs
rolb
rclb
call
mov
mov
sub
mov
jmp
mov
and
cwtl
sub
inc
aaa
dec
xchg
mov
add
movsl
rclb
stos
inc
int3
pop
lods
and
sub
sub
lods
mov
lcall
xchg
test
repnz
test
dec
adc
stos
in
xorb
dec
das
jl
mov
in
inc
push
flds
xlat
nop
dec
cmp
scas
mov
imul
rcrb
sbb
std
cmpl
mov
enter
loopne
lahf
xchg
jl
xchg
add
cli
dec
fwait
aas
sbb
cmp
lcall
mov
int
sbb
mov
jmp
cmp
inc
jb
imul
push
into
in
stos
rcll
imul
mov
sbb
dec
adc
mov
jae
push
lahf
pop
repnz
mov
ljmp
mov
test
stc
cwtl
sbb
jbe
int3
cmpsb
and
mov
cmp
xor
int3
jb
sub
lea
jnp
leave
xlat
xor
pushf
dec
lea
fisubrs
int
inc
movsbl
out
pusha
sub
jle
xchg
push
push
jns
and
sarb
mov
enter
ss
and
icebp
xchg
ljmp
cmp
mov
pop
scas
int
cwtl
fldcw
out
xor
imul
mov
push
and
mov
cmpsb
fwait
pop
and
fistpll
test
jbe
jnp
ret
repz
stos
xchg
pop
mov
scas
sub
mov
cli
or
cmp
push
cmpsl
push
mov
or
adc
dec
mov
add
fs
in
loopne
and
shr
jno
xor
sti
enter
xor
in
hlt
cmp
or
rcrb
jns
pushf
daa
xor
cmpl
adc
jnp
lea
in
popa
lea
in
lock
aad
lret
fistps
pop
cld
jg
shr
mov
inc
lock
in
dec
sbb
xchg
dec
and
xor
rep
jbe
insb
inc
sub
push
jo
loop
test
mov
nop
cld
push
js
fisubl
pop
inc
sbb
loope
sarb
scas
dec
inc
shr
dec
xor
xchg
cmpsl
arpl
popf
lea
push
jno
adcl
jno
pushf
mov
or
daa
add
sarb
jge
mov
mov
arpl
lock
ljmp
adc
out
cmp
insl
pop
jne
dec
rorb
jg
inc
adc
mov
ss
push
jmp
mov
in
jmp
addr16
mov
adc
or
dec
jnp
ror
push
shrb
jnp
pop
mov
adc
inc
lret
mov
jb
xor
leave
jbe
rcrl
clc
jb
leave
imul
mov
xchg
in
aas
xor
jno
xor
cmp
repz
inc
dec
pop
ret
in
popf
adc
push
jg
pop
or
in
iret
scas
sub
fsubs
sbb
les
int3
aaa
jle
mov
xchg
xor
add
popf
cwtl
xor
adc
popf
dec
in
xchg
push
xorb
sub
mov
mov
xchg
in
push
fs
xchg
fcoml
fwait
repz
sub
jmp
fisubl
add
movsb
inc
mov
cli
add
add
pop
mov
aas
inc
mov
popf
icebp
push
lret
out
sbb
xchg
leave
adc
pop
dec
popf
xchg
xchg
sbb
es
mov
enter
leave
mov
lock
fbstp
stc
cmp
cld
jp
icebp
and
push
cmp
shll
adc
pop
neg
dec
jp
sbb
push
es
mov
ss
pop
mov
xor
or
adc
push
mov
shlb
xchg
push
cmc
jl
out
push
push
daa
jecxz
fidivs
mov
inc
xlat
dec
bound
ret
loop
sub
sahf
ret
jae
pop
scas
jle
inc
inc
pushf
enter
inc
int
in
inc
je
out
out
imul
sub
insl
pop
mov
pop
or
mull
dec
dec
inc
inc
lret
pop
in
popf
cmp
mov
fwait
push
fsts
mov
cmpsb
inc
xor
push
xor
test
insb
sbb
lds
xor
or
imul
aad
aaa
outsl
pop
push
jmp
mov
push
je
and
pop
mov
sub
sbb
lods
pop
jge
xor
stc
mov
test
js
push
mov
pop
cld
push
add
pop
push
or
bound
rorl
out
aam
xchg
ljmp
imul
imul
xchg
jno
mov
rcll
or
push
push
adc
sbb
andl
icebp
ds
stos
inc
enter
mov
add
cmpl
ss
inc
ret
aam
rcrb
inc
scas
pop
ret
add
jb
stos
idiv
adc
mov
les
or
push
in
jnp
fisubs
xchg
inc
aaa
flds
xor
dec
hlt
ja
jge
adc
insl
sub
sub
xchg
adc
pop
movsl
in
test
xorl
movsb
addl
test
jns
out
pop
lock
ret
inc
insl
enter
jge
sbb
pop
and
icebp
xchg
inc
or
pop
mov
daa
das
jl
add
sub
and
in
jbe,pt
jnp
daa
sub
sbb
dec
xorb
leave
in
test
loope
loope
mov
pop
in
stos
pop
int
jae
aad
imul
int3
repnz
push
sbb
aam
xor
mov
out
dec
cmp
bound
push
jbe
js
jge
repz
mov
jnp
cwtl
das
push
cmpl
sub
mov
jo
orb
shr
sarl
mov
inc
ss
mov
dec
add
sbb
pop
sub
sub
mov
mov
in
movsl
sbbl
lods
clc
in
dec
sub
sbb
ljmp
daa
cs
pop
loop
jp
jle
mov
fildll
pop
xchg
into
std
cs
dec
jo
inc
jne
xchg
push
bound
scas
insl
scas
fs
cmp
cmp
add
pop
dec
pushf
data16
push
jo
fildl
add
jmp
push
mov
inc
jg
and
inc
lret
sbb
mov
push
push
push
push
call
add
adc
shld
shl
mov
mov
mov
mov
mov
mov
push
add
push
adc
push
push
call
mov
mov
sub
mov
sbb
mov
push
jmp
lcall
or
jg
push
cs
add
cli
sbb
xchg
iret
lds
decl
pop
lcall
ret
dec
pop
rcrb
je
mov
xchg
mulb
scas
and
int3
mov
loop
leave
or
jb
in
jp
or
and
push
jle
iret
loop
pop
lcall
int3
and
jp
or
popa
pop
mov
and
shlb
cwtl
and
jno
repz
gs
ljmp
inc
cwtl
pop
cmpb
pop
dec
xor
test
adc
cmp
mov
jmp
mov
mov
cmp
mov
push
mov
je
inc
cmpb
sbb
into
and
iret
nop
jp
arpl
decb
dec
lea
mov
sbb
in
outsb
push
fcmove
stos
inc
lds
ja
jae,pn
std
pop
ljmp
push
imul
fidivl
xor
cmp
sbb
div
mov
aad
lock
inc
pusha
dec
pop
test
repz
pop
add
cwtl
rcrl
rol
dec
fneni(8087
fistpl
pop
mov
sub
loope
rcrb
add
imul
dec
scas
fidivrs
push
xchg
push
movsb
add
cmp
cs
adcb
fdivrl
out
adc
hlt
movsl
mov
xor
jmp
cmpsb
sub
mov
sub
into
mov
out
xchg
fsubrp
fwait
aaa
add
iret
out
or
aad
imull
mov
push
xorl
dec
gs
test
mov
fiaddl
sbb
dec
movb
xchg
push
sub
fidivrl
mov
imul
or
fisttpll
sub
inc
add
movsl
cmpb
xor
scas
mov
mov
mov
gs
stos
lret
test
repz
jge
xchg
jo
ljmp
cld
jecxz
std
inc
mov
popf
stos
das
gs
xor
in
loopne
pop
mov
imul
scas
adc
sub
test
cs
sti
push
jmp
xchg
lock
push
sti
enter
test
jae
repnz
lcall
enter
pop
push
fnop
sbb
mov
scas
arpl
xchg
fwait
mov
push
fnstsw
cld
or
xchg
sbb
into
stos
mov
shl
mov
jmp
sub
and
xor
push
mov
cltd
lods
jle
sub
jl
cwtl
aad
xor
xor
mov
fwait
pusha
mov
faddl
iret
mov
add
das
jae
mov
jg
addl
stc
xchg
sub
add
push
cmpl
fnstcw
movsl
pushf
sub
lods
sub
mov
jbe
cmp
cmp
add
jmp
sti
imul
in
sbb
xchg
dec
sbbl
xchg
mov
adc
je
test
pop
push
loop
ljmp
sub
sahf
loop,pn
insl
hlt
hlt
jo
sarb
daa
or
adc
add
pusha
out
sbb
pop
fmul
loope
iret
rolb
and
out
orl
jnp
idivl
push
add
ljmp
repnz
pop
mov
cmpsl
fwait
nop
xchg
outsb
jp
lret
lcall
mov
lods
imul
pop
rclb
xchg
test
inc
add
shlb
out
sub
daa
call
dec
jg
loope
aad
cmpsb
pushl
sub
mov
mov
seta
or
pop
outsl
and
sub
add
insl
push
mov
notb
cmp
ret
out
mov
shlb
shlb
jo
xchg
xor
mov
imul
outsb
pop
mov
dec
outsb
sbb
add
pop
xchg
jl
mov
movsl
xchg
xchg
lret
mov
jae
mov
fidivl
lock
mov
cmp
cmpsb
cltd
test
roll
mov
clc
test
sub
mov
pop
fwait
cmp
or
stc
lahf
jb
rcrb
es
xchg
lea
sti
mov
sti
int3
test
lods
dec
ljmp
pop
sbb
scas
jmp
cmp
fwait
adc
xor
push
add
or
and
sbb
adc
repz
das
sbb
stos
push
cmpsb
lcall
je
jle
mov
jae
cltd
js
nop
jo
push
sarl
loop
jo
in
repnz
add
mov
lahf
cmp
add
adc
and
scas
mov
jmp
sub
inc
in
rorb
push
fs
and
loop
aam
dec
or
scas
sbb
js
xchg
push
push
sub
or
mov
movsb
cmc
push
mov
in
fisttpll
push
fidivl
fistl
mov
rolb
or
dec
loopnew
push
imul
add
sbb
fistps
cmpsl
addr16
inc
mov
inc
push
add
aaa
cmp
and
xor
push
lahf
iretw
xor
gs
aas
leave
sbb
shlb
hlt
xor
and
fcoms
test
pop
stos
mov
hlt
push
stc
lret
insl
negl
movsb
hlt
cmp
mov
loope
add
daa
ret
and
test
fdivrp
inc
sub
mov
mov
addl
test
jle
xchg
jnp
stc
arpl
subb
repz
push
popl
mov
lahf
aas
xchg
int
rcr
jmp
ret
add
out
clc
imul
ss
pushf
push
cmp
jo
hlt
cltd
aad
adc
sbb
ljmp
push
or
hlt
lcall
mov
inc
cmpsl
pushf
jns
push
out
or
or
cs
scas
int3
loopne
mov
sbb
scas
jge
adc
jmp
add
clc
jecxz
sbb
sbb
push
fcoms
sbb
pop
scas
in
mov
mov
cli
and
out
test
shrb
jnp
fidivrl
push
and
xchg
pusha
sar
cmp
and
sbb
cwtl
pusha
mov
xlat
lds
rcll
push
call
add
adc
shr
xor
or
or
xor
mov
push
xor
mov
mov
mov
jmp
mov
sbb
popf
or
pushf
cs
in
inc
add
arpl
jp
add
cmc
ds
ja
ljmp
sbb
jb
aad
dec
mov
add
addr16
xchg
data16
mov
add
les
dec
lcall
out
int
fnstcw
xchg
and
push
aaa
cmp
es
inc
std
jb
fmuls
in
gs
add
mov
jns
jno,pt
inc
lds
aas
push
jb
dec
in
ret
jp
jp
push
xchg
push
test
cmp
jg
enter
test
sbb
popa
and
xor
into
mov
ss
les
cmp
and
pop
sarb
xchg
call
scas
or
shlb
ret
cmp
and
adc
addr16
aad
or
dec
lds
adc
jge
inc
paddusw
les
mov
push
jle
xchg
mov
pop
in
sub
dec
xchg
mov
mov
sub
mov
xor
fisttpll
jae
vmovd
loope
cmp
push
xchg
cltd
js
push
in
ret
loopne
or
pop
xchg
jbe
loopne
in
jae
aas
jmp
out
das
out
adc
outsb
lcall
mov
into
pop
xchg
cwtl
or
popa
cli
inc
pushf
xchg
adc
hlt
inc
xor
xlat
aaa
nop
lret
xchg
add
pop
xor
push
dec
adc
xchg
add
mov
inc
xor
jne
out
jg
rcl
push
mov
in
loope
xchg
in
or
and
sub
push
insl
sub
aam
xchg
loope
push
test
aas
int3
jae
out
xor
cmpsl
out
push
test
jmp
arpl
jp
shll
mov
or
pop
enter
mov
ja
push
testl
mov
movsb
adc
shlb
sahf
or
pop
mov
or
jl
iret
inc
sarb
adc
add
mov
inc
pop
mov
push
sti
push
inc
jae
fldl
ljmp
ss
add
pop
fstpl
mov
lods
mov
in
sbb
popf
xor
data16
ret
out
jle
decl
fisubrl
jg
xor
add
xchg
xor
pop
mov
sbb
outsl
xchg
adc
xchg
in
pusha
jne
sub
push
test
sub
jb
cmp
jo
movb
sarb
xor
out
iret
add
jne
adc
push
add
int3
cmp
pushf
xchg
fstpt
or
push
or
mov
push
mov
fwait
sbb
or
push
sub
mov
mov
push
arpl
subl
popa
cmc
stc
or
push
roll
jae
inc
rcr
mov
mov
inc
shrb
sahf
int3
add
sbb
xor
fdivrs
jbe
push
lret
js
sub
mov
repnz
jo
pushf
int3
movb
add
call
mov
pusha
mov
negl
pop
inc
std
sbb
insl
inc
jg
shrw
sti
data16
and
lods
call
mov
sbb
xor
test
xchg
in
sub
out
push
push
xchg
repz
add
xchg
push
xchg
iret
icebp
sub
add
cmp
bnd
scas
xchg
out
xor
shlb
cmc
out
je
xchg
jbe
sub
movsb
call
dec
daa
icebp
cmp
out
adcb
loope
xor
mov
and
fs
aam
pop
xchg
mov
xor
cltd
jns
sub
inc
jle
jl
lcall
inc
pusha
cwtl
and
cmp
jmp
xchg
mov
inc
xchg
mov
adcb
mov
push
pop
bndldx
cs
sbb
push
pop
jns
sbbb
lock
fidivrs
aaa
mov
cmc
add
jg
idiv
jo
xor
jp
insl
sti
gs
insb
mov
je
pop
or
roll
push
inc
jae,pt
or
mov
int3
push
lods
cmpsb
loopne
nop
ret
pusha
xor
lds
add
loop
jns
outsb
out
test
sbb
mov
xchg
sub
mov
aas
cmp
xor
sub
cwtl
fmulp
outsl
xchg
inc
or
sbb
and
fildl
ficoms
sbb
fs
adcl
jbe
fwait
loopne
sub
int
je
cwtl
mov
mov
mov
cmc
in
leave
test
push
ja
adc
outsb
scas
jb
clc
out
js
jp
addr16
and
lock
in
push
xor
imul
movsl
mov
out
or
das
mov
jp
mov
mov
xor
fisttps
inc
fstl
adc
xor
jne
outsl
and
sarb
xchg
cmp
fiaddl
jmp
jno
leave
popf
mov
stos
cmpsb
lock
sub
outsb
lock
adc
sbbb
pusha
ja
mov
shll
lret
arpl
ret
add
add
lods
mov
jb
jl
lret
addr16
jecxz
and
aaa
sub
shlb
sub
bound
xor
jp
cmp
clc
push
jo
ljmp
jle
sbbl
dec
mov
jne
or
mov
fucompp
mov
xchg
out
sbb
std
ud2
clc
pop
pushf
mov
push
imul
mov
or
popa
and
sub
push
push
or
xor
xchg
sbb
mov
mov
incl
and
mov
iret
addl
insl
sub
into
xor
mov
dec
mov
or
add
pop
push
fistps
lret
or
mov
or
aas
jl
clc
adc
mov
filds
sbb
rclb
cltd
iret
sub
addr16
into
mov
dec
mov
outsl
cmp
mov
es
ret
inc
addl
stos
cltd
cmp
or
dec
add
rorl
je
bound
in
sub
pop
sub
test
jne
les
pop
push
xchg
jns
call
into
mov
mov
mov
insb
jle
frstor
shrl
mov
sbbb
xor
scas
out
icebp
dec
ljmp
push
mov
sbb
cmp
push
push
call
mov
mov
mov
add
mov
adc
mov
and
and
add
mov
adc
add
mov
adc
jmp
mov
xchg
adc
mov
add
ds
add
adc
fdivrs
mov
and
lods
pop
sub
out
ret
test
pop
in
aam
xor
mov
mov
cmp
push
xor
aaa
xchg
pop
lret
jo
jp
jecxz
pop
push
aam
js
cltd
repnz
inc
dec
clc
movsb
jae
ret
dec
mov
mov
leave
push
mov
mov
xchg
ss
mov
adc
lahf
adc
pop
pushf
in
fmuls
les
jno
sub
mov
shl
pop
xor
pop
mov
lret
jb
ror
mov
mov
adcl
push
mulb
ret
lret
cwtl
add
inc
jbe
out
and
xor
inc
jb
xor
push
push
loop
sbb
addr16
jne
roll
loope
mov
add
cmpsl
inc
sbb
shl
repz
pop
mov
icebp
fsub
call
push
xchg
mov
adc
cld
dec
add
lret
mov
mov
sub
call
roll
enter
repz
fnsave
jle
push
mov
push
inc
dec
lret
xchg
imull
jne
movsl
mov
mov
daa
and
ja
push
dec
aam
push
in
cmpsl
jle
loop
xor
inc
pmulhuw
mov
addb
cwtl
mov
xor
xlat
inc
inc
sub
mov
mov
loop
sbb
lea
add
xor
adc
outsl
hlt
icebp
mov
mov
or
dec
mov
jne
push
sbb
xchg
jecxz
and
les
fbld
jp
add
push
add
pushf
sub
roll
cmpsl
cltd
or
rolb
test
out
jmp
lahf
iret
pop
jnp
clc
fst
int3
or
push
lods
push
inc
repnz
mov
andb
jmp
in
jp
inc
imul
notl
mov
mov
lods
movsl
mov
loope
fnsave
mov
fsub
mov
dec
jnp
dec
inc
fmulp
ljmp
mov
repnz
fdivr
mov
jo
xchg
push
xchg
test
shlb
push
jl
jae
xor
rcll
push
inc
sub
int
and
push
ret
daa
mov
in
mov
mov
data16
aam
pop
jp
xor
jnp
push
insl
mov
test
movsb
scas
mov
jne,pn
dec
jnp
cltd
add
mov
daa
cmp
adc
inc
jecxz
addr16
mov
fldenv
leave
cmp
adc
add
aad
insl
sub
hlt
pop
sub
inc
or
jl
and
mov
call
push
scas
fistps
lret
cmp
popa
mov
push
popa
sbb
in
cmp
subb
mov
inc
popf
jbe
mov
pop
aam
push
stos
inc
shll
cld
and
pusha
fsts
cmp
inc
or
fsubp
push
ret
xchg
adc
dec
mov
and
push
leave
mov
stos
ret
push
sub
jmp
cmpsb
cld
ljmp
gs
dec
dec
pop
sub
jle
push
out
cmpsb
inc
cmp
cld
mov
cwtl
and
aad
inc
lahf
mov
inc
sar
jmp
inc
xchg
pop
pop
mov
outsl
cmp
mov
aam
cmp
fwait
and
jle
push
in
push
das
fwait
into
and
xor
push
data16
or
and
xchg
push
std
fsubr
or
xor
add
pop
mov
adc
fcompl
test
orb
gs
dec
jge
mov
repz
cmp
shl
push
insb
push
add
cmp
jl
push
cmc
test
dec
jae
je
lcall
cmp
xor
ficomps
jne
adc
iret
mov
or
lret
and
dec
test
dec
out
sbb
push
dec
stc
push
and
out
fnstsw
inc
pop
imul
inc
loope
inc
in
jnp
jmp
andb
ja
inc
scas
test
inc
sub
ret
fnsave
es
mov
xchg
mov
inc
orb
mov
enter
scas
sti
inc
sub
call
inc
mov
adc
shlb
jg
stos
cli
push
stc
aas
cmp
fs
xor
aas
pop
sub
mov
dec
repz
jp
cmp
jl
lods
mov
data16
xor
std
mov
add
dec
shl
xlat
jmp
fdivl
leave
out
ja
notl
sbb
mov
fiadds
mov
or
pop
inc
xchg
cs
mov
inc
imul
test
mov
je
adc
xchg
sbb
push
sbb
cmp
insl
lods
and
int3
jae
adc
pop
xor
xor
jmp
and
jle
loope
cwtl
ret
jb
or
jb
dec
push
adc
data16
movsl
or
in
sub
sub
fcmovnbe
movsl
dec
sbb
inc
repz
lret
xor
mov
pop
inc
icebp
push
je
pushf
insb
pop
stos
cmpsl
dec
and
and
and
add
fnsave
jle
outsl
inc
mov
cmp
daa
dec
jb
stc
inc
sti
push
popf
leave
pop
sbb
enter
dec
cmp
jno
int
mov
or
jmp
movsb
mov
ja
stos
das
lahf
adc
or
ret
jg
dec
pop
or
cmp
hlt
ljmp
insb
andb
xchg
dec
test
add
and
push
jmp
inc
loopne
fildl
gs
cld
rcll
cwtl
ja
shr
dec
push
and
loop
outsl
mov
sub
aam
out
sub
clc
fwait
or
mov
xchg
sub
arpl
in
jae
xchg
repnz
rcll
adc
daa
fs
pusha
shr
mov
movsl
ds
push
mov
cmp
mov
in
push
pop
jp
fcmovbe
push
das
mov
cmpsl
mov
jns
jg
lods
lods
cwtl
dec
ret
xor
out
je
repz
cmp
push
inc
cmp
jae
mov
hlt
pop
rolb
loope
pop
fstpl
sub
imul
add
ljmp
xor
push
mov
jle
push
mov
add
mov
sub
pop
je
fistl
push
mov
mov
mov
push
push
push
jmp
dec
js
gs
push
pop
cmp
xchg
test
jg
add
int3
les
xchg
jnp
or
sbb
fdivrp
and
mov
push
dec
xchg
out
push
rorb
adc
arpl
das
cli
and
pop
es
cmp
or
adc
cmp
aaa
loope
xchg
mov
fdivr
mov
mov
jbe
int
dec
lods
fbld
xchg
into
jecxz
lods
loop
ret
std
shrl
inc
jp
loop
xchg
out
push
pop
cmp
stos
dec
out
xchg
lahf
jmp
cmp
call
xchg
inc
sbb
std
jne
enter
and
mov
mov
jae
outsb
add
mov
into
cmpsl
jle
add
push
ficompl
sub
jbe
pop
push
cwtl
ret
lock
mov
gs
test
dec
sub
int3
add
dec
sbb
push
push
push
ss
dec
jo
and
sarl
in
adc
ja
mov
cmpsl
add
test
iret
jnp
test
aaa
jno
sbb
sub
xor
lods
out
shl
inc
mov
clc
mov
cmp
in
mov
xchg
pusha
add
pop
out
cmc
in
inc
mov
ss
adc
mov
imul
push
movsl
or
add
sbb
and
fwait
jge
lods
enter
rorl
cmp
add
or
mov
in
ret
sbb
shll
roll
pop
nop
mov
ss
push
sub
push
in
jge
lock
xor
add
sbb
clc
ficomps
pop
popl
lea
sub
icebp
xlat
sub
or
xchg
test
cwtl
sbb
push
xchg
mov
testl
push
arpl
pop
cmp
push
hlt
in
push
lret
adc
cmpsl
cs
pop
pushf
test
adc
push
je
or
inc
push
jnp
movsb
sbb
mov
and
sub
fisttpll
pop
pushf
out
aam
loopne
or
ljmp
fcmovne
add
jae
lahf
pop
inc
push
dec
imul
sti
mov
mov
xchg
xchg
jecxz
add
xchg
lds
jg
cwtl
mov
stos
inc
cmp
mov
pop
jae
sub
ds
test
jne
cmp
dec
jnp,pt
aaa
loope
mull
lret
pop
fwait
inc
cwtl
dec
push
lods
mov
int
cmp
xor
xchg
jge
sbb
adcl
lret
or
sub
jnp
sub
push
mov
add
addr16
mov
or
mov
mov
sbb
shrb
fnstsw
sub
jno
aam
jge
push
xor
jecxz
ss
lret
and
xchg
push
bound
dec
test
das
mov
mov
andl
or
dec
sbb
jo
jnp
sbb
aaa
mov
sti
jge
mov
lret
cld
cmpb
add
jo
cmc
cmpb
stos
sub
les
fldl
sub
lret
mov
repnz
mov
jge
loopne
mov
nop
dec
notb
addr16
lods
data16
xor
daa
aaa
jmp
or
sahf
lds
call
pop
nop
jb
lock
sub
nop
out
xor
mov
xchg
jno
jp
pop
fildll
popa
ds
mov
fidivrs
pop
or
xchg
or
or
jmp
loopne
cmp
sti
shrl
push
push
inc
push
pand
fs
fcom
int
push
lret
insb
sub
stc
xor
stc
ja
aad
xorb
jae
and
push
fcomip
dec
pop
daa
iret
inc
add
jo
hlt
sbb
repnz
inc
flds
dec
es
ds
xor
xchg
test
fmul
mov
inc
jnp
sbb
dec
pop
test
movsb
sub
cld
and
xor
into
push
xchg
ss
pop
popa
js
push
mov
or
scas
mov
sbb
gs
jbe
push
pop
addr16
filds
sarb
popl
cmc
mov
and
push
push
adc
cli
mov
pop
lea
pushf
sbb
sbb
fucomi
or
emms
jecxz
sarb
xchg
ljmp
call
push
pop
jmp
sbb
test
cmc
push
pushf
loope
inc
adc
jmp
xchg
jnp
dec
jl
cwtl
add
shl
orb
cmc
in
adc
out
aad
xor
fadds
out
mov
sbb
aam
ficompl
xchg
in
sahf
push
xchg
add
push
cli
aas
mov
cld
decb
xor
or
movsb
mov
push
mov
pusha
lds
mov
or
mov
adc
sbb
bound
push
arpl
mov
push
dec
inc
or
daa
pop
aas
out
xchg
xlat
movsb
in
mov
push
and
stos
bound
roll
sbb
gs
dec
sbbb
fidivrl
xor
pop
subb
jmp
xchg
mov
inc
cs
push
and
jge
pslld
inc
aas
popa
es
shlb
lcall
xor
inc
imul
push
fnstenv
inc
and
dec
dec
mov
push
jae
push
mov
movsl
xchg
mov
or
mov
popf
pop
test
fs
xor
ljmp
test
adc
fs
xchg
dec
sub
rcrb
out
bound
dec
lret
xor
push
popl
rcr
out
out
mov
iret
sub
push
aad
imul
push
andb
push
daa
repz
addr16
lahf
in
or
stos
pop
loop
jecxz
cmpl
mov
xor
mov
sub
str
push
cwtl
sub
outsl
repnz
add
or
ss
cmpsb
push
in
add
ljmp
inc
jmp
ficompl
imul
rcll
inc
addb
jmp
or
xor
jnp
and
jo
push
sahf
pop
fsubrl
inc
cmp
jno
push
pop
dec
and
sbb
pop
mov
ljmp
push
cmp
mov
mov
mov
cld
lds
mov
push
cwtl
movsb
inc
shlb
fsubrl
in
xchg
sub
daa
adc
jae
and
jb
add
pop
add
push
push
push
call
mov
mov
mov
or
mov
mov
shl
mov
or
mov
xor
xor
call
add
mov
mov
push
jmp
fnstenv
inc
mov
mul
push
movb
add
lret
cmpsl
in
mov
add
outsl
add
push
sbb
pop
and
das
push
repz
enter
scas
or
push
hlt
jge
pop
aam
pop
push
inc
pop
lahf
lea
cmp
movsb
fnstsw
inc
jecxz
push
in
cmp
pop
mov
jle
ret
sub
sbb
rcrb
mov
rorb
andl
in
mov
cmp
test
mov
sbb
call
ss
push
or
and
js
rsm
lea
mov
addr16
adcl
maxps
mov
andl
loopne
ss
sub
std
pop
subl
into
push
sbb
fcoms
xor
aam
call
xor
shlb
gs
mov
fsubrp
dec
imull
rcll
push
call
test
adc
adc
pusha
cmc
mov
or
fldcw
push
mov
orb
cs
add
fcmovnu
cmp
jnp
sbb
or
mov
jmp
cmp
sub
inc
and
aad
mov
jno
ss
sub
jmp
notl
jle
stos
push
inc
xchg
inc
cmpsl
sub
add
pop
stos
jno
lret
mov
lahf
das
aam
insb
adc
mov
dec
dec
cmc
sub
and
cs
aaa
nop
cmp
or
rorl
fildl
mov
push
ljmp
jge
enter
add
lds
sub
adc
fcompl
das
mov
andl
leave
push
mov
ljmp
pop
popa
mov
and
add
xchg
xor
nop
test
in
cmp
int3
dec
jecxz
xchg
xlat
popf
imul
shrb
mov
mov
notb
es
cmc
arpl
push
aaa
pop
mov
lcall
mov
mov
sbb
push
cmc
das
dec
add
cs
imul
xchg
xchg
rcll
jbe
in
cmp
xchg
orb
pop
out
popa
pop
add
test
dec
and
push
int3
mov
add
leave
jp
stos
jge
pop
mov
fcmove
and
jecxz
dec
push
mov
arpl
mov
in
mov
aad
leave
xchg
xor
sub
jecxz
stos
test
cmp
mov
sbb
out
mov
dec
dec
push
lds
lods
test
adc
out
push
xchg
iret
xchg
xchg
imul
jle
lret
jo
int
call
lahf
add
mov
dec
insb
scas
ss
mov
loop
imul
cwtl
push
xor
inc
and
cli
inc
xchg
dec
addl
inc
adc
mov
sbb
dec
fwait
dec
test
jae
aam
pop
inc
fldcw
xor
or
sub
pop
and
insl
je
leave
jle
mov
cmpsl
and
sub
std
hlt
flds
out
pop
push
aad
add
sbb
push
lock
xor
enter
je
lret
xchg
jg
sub
mov
mov
dec
lcall
jnp
mov
jne
insb
mov
popa
outsb
xor
and
std
stos
mov
enter
bts
jbe
cmp
and
cwtl
pop
dec
push
mov
push
iret
pop
fcmovne
add
in
out
orb
subb
cmpsl
sbb
dec
ret
out
mov
repz
xchg
lods
mov
adc
xor
sbb
jp
loope
push
mov
lods
std
xchg
and
mov
or
pushf
rol
adc
aam
mov
lret
loope
cmp
scas
lods
insl
cmp
pushf
push
and
pop
aad
push
ffree
je
sub
mov
ljmp
je
xchg
jge
movsl
fcoml
jns
pop
add
push
js
push
cmp
cmp
out
adc
xlat
and
pop
xchg
shll
push
enter
or
loope
loope
dec
subl
fldenv
jno
and
pop
push
mov
adc
sub
es
aam
cmp
ret
fdiv
pop
fstpt
test
popa
ja
stos
mov
jno
push
ljmp
leave
int
sbb
xor
fsubrs
iret
mov
pop
test
nop
cmc
movsl
add
rclb
push
mov
notl
mov
cmp
shrl
cs
test
jl
subb
nop
stos
dec
les
mov
repz
cmpsb
rcrb
mov
shll
pushf
adc
mov
or
fidivrl
pop
sbb
and
mov
and
shl
enter
sub
outsb
jle
sbb
and
aas
jecxz
inc
iret
mov
pop
pop
fildl
xor
fnstsw
pop
sbbl
fstpt
dec
jecxz
add
loope
sub
push
inc
and
jne
rcrl
add
inc
fwait
cltd
test
pushf
inc
push
sbb
cmp
cmc
andb
mov
jle
imul
ret
aaa
in
test
mov
loopne
ja
jmp
adc
adc
mov
test
dec
cmp
cmp
dec
cmc
cmp
cmpsb
iret
arpl
xchg
pushf
mov
inc
dec
push
and
push
push
shlb
pop
push
popf
subb
xor
sahf
test
jge
mov
cmpsb
data16
xchg
mov
std
sbb
std
push
popa
mov
inc
jp
dec
fcoml
pusha
leave
hlt
cmc
sbb
adc
shl
dec
iret
fs
fsub
add
adc
pop
xchg
push
jp
mov
mov
cs
or
cs
ror
jl
ss
mov
adc
stos
subl
nop
imul
jmp
in
test
imul
xor
sahf
fldcw
test
je
mov
cltd
data16
adc
in
push
push
cli
sahf
and
or
and
ss
or
outsb
push
add
push
pop
sub
mov
cmc
lods
inc
out
shlb
push
adc
dec
push
movsl
loope
aad
pushf
add
pop
push
subb
mov
or
in
fsubr
jb
mov
inc
mov
and
xchg
test
jnp
dec
cs
xchg
jbe
push
idivl
mov
add
cli
push
push
xor
xor
call
push
push
push
push
call
mov
mov
mov
or
mov
or
or
or
xor
xor
add
adc
xor
xor
shrd
or
mov
shr
or
mov
mov
mov
mov
mov
or
jmp
out
fisubl
push
jne
lret
sti
xchg
cli
add
add
pop
repnz
adc
sub
dec
bound
pop
ja
xchg
ret
xor
pop
gs
iret
mov
clc
dec
add
xchg
aam
mov
out
out
jg
sub
sbbb
and
lods
cmc
test
pop
inc
into
out
pop
ds
mov
adc
pop
cmp
mov
addr16
push
xchg
jns
inc
in
shrb
mov
jo
ljmp
loope
jp
push
psubsw
pop
xchg
fwait
jno
dec
jge
fisttpll
or
stc
xchg
or
ljmp
fs
stos
and
adc
or
lods
or
scas
shlb
cmp
je
out
push
mov
daa
pushf
les
scas
or
out
add
test
imul
mov
dec
ds
call
and
xchg
push
subl
cmc
push
fcomi
shlb
jl
push
loopne
cmp
push
or
lock
adc
xchg
jo
inc
fdivrs
mov
jl
lcall
rorb
lahf
scas
pop
adc
lret
jnp
fs
shl
add
fdivs
xor
imul
sarl
insl
sub
dec
push
cmp
fsubrl
sub
add
rcll
popf
cld
cmp
xchg
lret
xchg
ds
js
jmp
lock
aaa
adc
lds
adc
inc
or
or
push
roll
cmpsl
sbb
jmp
test
pop
xchg
inc
mov
or
cs
scas
stc
dec
pop
insl
out
popa
outsl
xchg
xorb
clc
push
lods
or
scas
inc
push
jb
imul
mov
loop
pop
pop
sub
push
out
and
mov
inc
or
mov
enter
test
mov
push
cltd
xor
pop
add
cwtl
dec
outsb
mov
shrb
rcl
cmp
shll
pop
adc
cs
test
enter
mov
inc
test
out
sub
or
mov
jecxz
and
inc
lret
pop
pop
and
xchg
aas
push
ret
and
cmp
ret
or
push
lahf
or
loope
mov
loopne,pn
adc
fiaddl
movsb
mov
adc
jo
aas
das
xor
movb
push
and
xchg
jecxz
jecxz
add
xchg
inc
inc
dec
or
push
bound
mov
dec
jmp
sub
xchg
jne
inc
and
btc
stos
ret
push
push
mov
fs
hlt
cmp
dec
add
rclb
imul
lret
sbb
lds
cmp
xchg
jg
pop
xor
dec
jno
or
mov
add
xchg
dec
repz
aas
lock
divb
jp
daa
fcoml
out
dec
sub
add
or
lahf
popa
fdivrp
test
out
pop
dec
mov
cmpsb
bound
test
push
xlat
dec
add
sub
cmp
testl
in
xchg
sub
jo
mov
mov
pop
loope
roll
and
fbld
scas
jmp
pop
out
sbb
fnsave
popa
mulb
cmpsb
or
xlat
int3
ja
test
mov
mov
pop
adc
cmpsb
adc
shrl
imul
inc
ret
arpl
ds
mov
fidivl
ds
xchg
outsl
stos
jns
icebp
in
aaa
pushf
sarb
das
mov
sub
sbb
fbld
in
fisubrs
std
sahf
dec
or
xchg
dec
into
mov
or
xor
imulb
or
loopne
fiaddl
pop
push
xchg
cmp
ja
pop
jecxz
push
add
jne
dec
mov
mov
lock
lds
inc
lcall
decb
loopne
inc
sbb
addr16
and
pop
scas
jb
and
ficoml
inc
out
call
pop
push
out
enter
aad
push
sub
mov
mov
push
cld
stos
imul
frstor
mov
pop
fsub
addr16
and
adc
lods
lcall
pushf
mov
movsl
pop
bound
insb
ret
hlt
mov
rcl
std
xchg
das
hlt
nop
in
mov
xchg
xor
mov
add
sti
out
mov
adc
jae
lds
lcall
dec
imul
ret
stos
arpl
iret
out
stos
sub
pushf
dec
and
adc
mov
fidivrs
sub
cmp
pop
mov
iret
sub
xchg
adc
pusha
cwtl
xchg
je
mov
sub
addr16
pop
dec
cld
sub
lret
test
shl
rorb
je
dec
popa
test
mov
cmp
pop
inc
lcall
push
cs
sbb
scas
aas
push
push
cmpsb
xchg
cmp
scas
cmp
adc
mov
into
pop
mov
sbb
inc
xor
pop
movsl
and
and
jne
rcr
mov
je
mov
xor
xchg
push
fbstp
adc
mov
loopne
sbbl
add
dec
lock
mov
rcll
repnz
push
sahf
push
jecxz
dec
adc
adc
push
loopne
push
xor
sbb
rcl
inc
faddl
std
push
pop
sarb
cld
jl
imul
inc
pmaxsw
pop
adc
lahf
test
dec
sbb
push
inc
or
mov
insb
push
es
test
pushl
xlat
jge
xchg
cmp
add
lods
leave
jae
jge
push
adc
lret
xor
add
adc
dec
mov
test
sbb
cmpl
movsl
aam
push
in
data16
cmpsb
mov
xor
fcmovne
xchg
stc
data16
nop
stos
jbe
or
push
jne
push
push
out
int3
loopne
inc
in
xchg
enter
xchg
ffreep
addr16
std
imul
push
adc
movzwl
xor
int
ret
lds
pop
pusha
leave
xor
xor
or
adc
or
jno
loopne
mov
cmp
sub
jno
inc
xor
cmp
or
or
add
stos
out
test
insb
mov
inc
sub
xchg
mov
push
hlt
or
xor
mov
xor
mov
push
push
push
push
call
push
push
jmp
add
lds
notb
xchg
mov
add
sbb
mov
xor
adc
fst
cmpsb
inc
pusha
dec
mov
int
in
xor
sbb
dec
mov
mov
out
sbb
test
sub
mov
sub
out
pop
mov
int
aas
pop
mov
rolb
sub
push
insl
xlat
push
lahf
inc
leave
pop
andb
lret
movsb
dec
fcomps
sub
add
cwtl
adc
xchg
imul
add
cwtl
out
pop
xlat
fmull
insb
add
sbb
mov
fadds
in
rol
test
inc
sbb
sub
cli
push
push
stc
jg
shl
insb
out
pop
and
lds
and
mov
mov
push
ss
push
enter
bound
rol
sbb
sbb
mov
or
xchg
cmove
aas
repz
sbb
aas
enter
rorl
ss
dec
xchg
imul
mov
nop
pop
cmpsl
mov
gs
insl
idivl
inc
lahf
mov
jns
stos
or
fwait
stc
cmpsb
out
testb
add
mov
dec
stc
jb
out
scas
inc
aaa
scas
xchg
push
inc
add
push
mov
add
cmp
push
pop
mov
push
sbb
aam
faddl
test
jnp
or
sub
xchg
ja
mov
inc
mov
ds
mov
gs
jle
aaa
push
push
cmp
int
mov
jl
and
xor
and
repz
idiv
xchg
test
iret
push
cmpsb
xchg
icebp
fcomps
icebp
inc
push
dec
nop
dec
decb
mov
ss
sub
mov
sub
aas
fnstenv
popa
xchg
sub
sbb
cs
mov
dec
cmp
loopne
pop
lahf
mov
ret
insb
dec
data16
mov
arpl
sahf
sub
push
dec
inc
rorl
lret
leave
or
fistpl
mov
lds
ja
fstpl
adc
ljmp
jmp
sub
scas
movsl
das
pop
daa
sbb
push
mov
mov
mov
insl
jmp
shlb
xor
jle
insb
hlt
mov
sti
add
adc
xlat
cmp
test
inc
mov
xchg
popa
aam
jmp
aam
or
leave
jae
aas
mov
or
or
jo
or
push
xchg
jg
xchg
jmp
pop
inc
rcrb
inc
jle
addr16
cmp
pop
adc
ja
cld
sbb
cmp
mov
aas
pop
xor
gs
xchg
icebp
scas
adc
ss
push
cmp
in
add
insb
mov
sahf
inc
pop
mov
cmp
ret
dec
std
loope
xor
mov
or
jo
icebp
jle
xor
mov
subb
shrb
cmc
data16
and
mov
dec
aaa
daa
test
inc
js
and
lods
ficomps
cltd
inc
daa
cwtl
mov
hlt
inc
and
addr16
push
push
cmp
test
xor
lahf
nop
dec
cmovl
popa
push
ss
cmp
or
pop
dec
xlat
cmp
add
jecxz
sub
or
xchg
or
xor
sub
push
jo
popf
jno
imul
dec
push
call
adc
fnstenv
je
mov
inc
cmp
pop
lods
mov
sub
pop
adc
sbb
mov
mov
shlb
xchg
cwtl
adc
pop
lock
shlb
dec
sub
or
xlat
rcrl
ret
sbbb
in
cmp
popa
in
out
pop
mov
outsl
push
fisubrl
pop
stc
aad
insb
mov
pop
imul
inc
ja
ret
jmp
mov
incb
out
xor
mov
cmpsl
and
add
jbe
xlat
or
js
sti
icebp
or
lock
lret
inc
jmp
aam
mov
xchg
or
adc
xor
adcb
inc
push
mov
dec
dec
aad
sbb
icebp
jnp
cmp
in
mov
push
jo
dec
loop
popf
std
dec
or
ja
sbb
or
mov
lock
out
loope
stc
retw
inc
pop
add
dec
mov
ret
pop
mov
mov
cmp
push
ret
jo
mov
mov
in
orb
xchg
cmp
movsb
call
icebp
mov
sub
and
out
ret
cmp
push
pop
xor
movsb
pusha
xchg
adc
push
test
ss
into
fxch
add
test
pop
mov
add
out
dec
add
fwait
adc
inc
into
lock
push
test
xchg
pop
gs
inc
dec
xchg
sti
mov
cmc
outsl
pop
je
arpl
xor
daa
and
shll
sarb
xlat
mov
rolb
cmp
xor
jle
insb
clc
daa
dec
jle
inc
ret
pop
mov
pop
xor
xchg
xor
outsb
inc
push
xchg
cmp
xchg
sbb
cs
push
xor
mov
icebp
mov
data16
mull
xor
int
xchg
adc
mov
in
push
ror
data16
test
addb
repnz
jne
xchg
inc
clc
stc
push
or
in
bnd
clc
and
stc
inc
xor
scas
cmc
arpl
repz
aas
fyl2xp1
sub
xchg
push
dec
push
repz
add
jecxz
xchg
inc
adc
mov
mov
dec
jne
jae
pusha
lods
fisubs
ficompl
jne
lods
fnstenv
fisubl
mov
arpl
mov
mov
mov
sbbl
xchg
jb
js
scas
mov
jbe
in
pop
push
stc
cli
adc
mov
insl
scas
and
mov
fldt
sub
sbb
arpl
jecxz
fdivrl
or
add
loopne
pop
nop
fsub
mov
push
stos
repz
je
mov
xor
push
xchg
or
jbe
inc
cmc
imul
push
jl
dec
sub
and
push
rcr
gs
sbb
ljmp
call
cmp
sub
imul
mov
stc
shld
mov
push
jp
pop
cmp
les
push
pop
es
out
je
push
pop
std
sub
mov
fcompl
popa
inc
orl
xchg
sbb
addr16
aas
subb
testb
clc
call
pop
adc
xlat
jg
push
push
call
mov
mov
mov
add
mov
adc
add
pop
adc
pop
mov
mov
pop
leave
ret
push
mov
sub
adc
movl
mov
sub
mov
xorl
mov
addl
movl
orl
jmp
sti
out
out
jo
jo
pop
inc
push
push
mov
js
invd
add
pinsrw
inc
fsubrl
outsb
push
sub
inc
push
push
xchg
adc
add
mov
popa
jns
rclb
repz
cltd
add
hlt
movsl
shr
mov
add
fiaddl
fsubl
xchg
inc
pop
or
sub
sub
pop
xor
mov
ss
xor
xor
aaa
mov
cmp
cmpsl
shrb
addr16
cmc
scas
out
inc
xchg
cs
jbe
mov
bnd
mov
lds
mov
or
dec
das
xchg
push
test
add
loopne
fmulp
sti
jp
mov
shrl
push
xchg
hlt
sbb
cwtl
pop
iret
aaa
cmp
loope
pop
shrl
mov
xchg
cmp
sub
rclb
arpl
xchg
or
and
and
cld
sub
decb
call
pop
pushl
hlt
sbb
lcall
loop
fildll
test
sbb
out
pop
je
out
lods
scas
fstps
xchg
cs
adc
adc
repnz
mov
scas
mov
repnz
jnp
jmp
sub
inc
mov
addr16
addr16
cli
sub
jno
rcrb
int3
imul
out
xor
mov
xor
popa
mov
mov
xor
mov
insb
ret
pop
inc
push
mov
in
jnp
dec
pushf
test
mov
cltd
xlat
push
cs
sub
roll
push
mov
div
fsubrs
les
jg
adcb
scas
xor
jae
repnz
lds
popf
in
cs
pusha
push
push
sub
jmp
push
cltd
stos
sub
xchg
lahf
insb
fdivs
push
ss
insb
fsubrl
mov
add
push
jb,pt
add
dec
xchg
mov
in
cmp
inc
push
mov
mov
cwtl
bound
cmpsb
lret
mov
leave
xor
cwtl
fwait
or
cmpsb
std
out
or
out
pop
lea
xchg
popf
mov
push
movsl
jmp
xorl
pushl
mov
into
mov
in
and
mov
lahf
adc
das
lods
int3
fmull
cmp
jno
sbb
imul
mov
push
or
jmp
inc
fmuls
call
testl
mov
mov
and
aam
jno
jl
test
pop
mov
push
adc
jne
mov
imul
mov
adc
mov
in
mov
lds
dec
adc
sbb
cmp
je
loopne
mov
mov
pop
test
pop
hlt
and
fidivs
insb
stos
sbb
sbb
inc
stos
cmp
addl
aaa
or
dec
mov
outsb
fwait
or
adc
inc
movsb
leave
xchg
leave
jo
int
add
xor
std
and
cli
dec
xchg
ja
push
xchg
add
pop
dec
lahf
cmp
dec
iret
repz
and
test
push
sbb
imul
aas
clc
mov
stc
mov
loope
pop
filds
mov
cmp
cwtl
das
adc
fcomps
mov
aad
add
inc
stc
sbb
fbld
jmp
or
sub
cli
jnp
jge
enter
inc
pushf
inc
jb
and
insl
cmp
cmpsl
mov
fimuls
cmpsb
lahf
cmp
rcll
movsb
mov
jl
inc
or
or
bound
dec
sub
cld
jl
mov
jle
mov
push
and
sub
aaa
push
in
aam
and
xchg
adc
ja
sbb
or
iret
divl
cmp
movsb
pop
popa
lret
jne
push
in
and
jg
test
inc
lods
cld
and
dec
xchg
and
or
mov
mov
mov
jno
leave
xor
gs
outsb
xor
scas
mov
test
push
outsb
cmp
push
and
push
test
lock
scas
mov
nop
sahf
jne
orl
insb
push
lahf
lea
inc
mov
mov
scas
lods
int3
stos
ret
rolb
popf
adc
xchg
mov
test
cli
fldcw
lcall
fwait
out
adc
mov
test
lock
xchg
sbbl
or
sti
sbb
lea
cmp
in
add
pop
and
test
pop
cwtl
xor
std
pop
lds
leave
inc
nop
xorl
rcll
push
push
lcall
jae
les
pop
jns
lcall
push
mov
adcb
pop
cld
es
add
into
jle
inc
rolb
add
sbb
xor
lret
ret
push
repnz
or
mov
nop
mov
in
rcrb
filds
cmp
xchg
inc
std
fsubs
popa
xor
out
xor
cmp
outsb
scas
cs
mov
in
cmp
pop
mov
mov
sbbl
dec
mov
mov
lds
xchg
icebp
and
sub
decl
mov
push
aaa
lret
or
pop
cmp
inc
sbb
jno
mov
pop
cmp
scas
inc
xchg
or
rolb
mov
sbb
mov
push
test
ljmp
shll
jbe
jp
sbb
mov
int
dec
sub
inc
mov
adc
stc
test
vpcmpeqd
pop
add
fildl
jnp
pop
lcall
cli
orl
addl
mov
jle
mov
hlt
mov
sbb
mov
shlb
test
inc
inc
cwtl
cwtl
push
pop
lock
fwait
jae
xchg
test
fiadds
addr16
adc
adc
cmc
ret
stc
sbb
inc
add
jbe
andl
adc
jmp
pushl
call
movb
movzbl
mov
sub
imul
mov
or
movzbl
push
orl
and
mov
movb
movl
movb
subl
movb
movb
orl
mov
orl
mov
subl
add
adcl
jmp
ret
sub
shlb
mov
xor
mov
rcrb
xchg
add
pand
push
jge
mov
lods
aas
shrb
pop
es
mov
aad
xchg
pop
es
xchg
adc
lahf
adc
popf
test
mov
iret
ljmp
popa
add
test
and
or
jl
icebp
push
push
add
jle
push
shl
xlat
mov
xchg
xorb
xor
jae
xchg
cmp
cmp
pop
push
add
dec
push
push
push
pushw
das
adc
scas
jbe
rcl
rolb
adc
out
insb
les
jmp
inc
ret
pushf
xor
icebp
push
stos
xchg
inc
mov
xchg
push
sbb
fwait
pusha
add
mov
ret
ja
lahf
jl
xor
mov
mov
cmc
pop
sbb
je
inc
leave
decb
in
arpl
mov
xchg
pop
scas
mov
pop
shlb
dec
mov
mov
push
push
cltd
cli
cmp
mov
dec
call
push
btc
shll
pop
mov
daa
inc
mov
shrb
mov
xorb
adc
mov
pop
push
add
lret
add
hlt
insb
imull
push
cwtl
mov
mov
movq
jg
mov
into
jg
movsl
jne
stc
push
xchg
push
add
negb
dec
mov
mov
xor
or
pop
pop
mov
outsb
jbe
adc
cmpsb
div
imul
push
adcl
vmaxss
inc
insl
mov
out
or
fwait
js
push
xchg
pushf
mov
add
ss
lds
cwtl
pop
nop
test
mov
jbe
push
push
test
cmc
and
lahf
xchg
sbb
cmp
sbb
push
shlb
pop
jmp
and
xchg
pop
repz
int3
mov
mov
pop
repz
adc
xchg
aad
outsb
pop
sub
in
push
into
mov
cwtl
repz
mov
subb
scas
fnstenv
adc
xchg
dec
and
orl
pop
es
fiaddl
jo
popf
jne
or
fnstenv
pop
in
dec
in
outsb
fcoml
out
push
in
pop
ja
jmp
dec
mov
push
add
icebp
sub
out
pop
fiaddl
scas
je
add
lret
jmp
jmp
pop
mov
jge
xchg
jp
aaa
and
pop
rorl
rolb
pop
rol
sbb
push
es
aas
adc
dec
dec
pop
nop
pop
and
pop
xchg
out
test
mov
jns
sub
popf
arpl
aaa
cmpsb
ljmp
and
xchg
or
dec
fcompl
stos
ss
test
ljmp
sub
dec
inc
fdivp
loopne
aas
movsl
daa
xor
pusha
jb
inc
add
sbb
sti
and
sarl
push
cmc
sub
sarb
outsb
sub
movsb
stc
xor
jb
xchg
cltd
mov
leave
jmp
xchg
arpl
in
sbb
mov
test
xchg
inc
or
addr16
bound
mov
xchg
mov
and
cmp
lret
cli
cmpsl
lods
dec
arpl
jp
imul
xlat
sbb
lock
ss
lods
mov
push
pop
clc
fnstenv
scas
shll
js
popf
pop
test
or
es
cltd
cmp
clc
cld
adc
movsb
fwait
sbb
or
inc
cmp
cmpsb
mov
adcb
and
mov
inc
call
cmp
sbbb
aam
sbb
subb
popf
pop
fnsave
cmp
add
ret
leave
int
into
gs
add
jl
addb
xchg
push
out
enter
fs
jne
rcll
xor
stos
xchg
test
bound
and
bnd
mov
push
add
jmp
das
xor
push
xchg
inc
cld
in
cmc
push
jmp
xor
cltd
mov
jp
dec
pop
sbb
dec
or
adc
outsb
leave
aaa
das
lods
and
jmp
mov
xorb
sub
adc
mov
xorl
mov
mov
orl
mov
test
sbb
in
cmp
dec
lea
stos
jo
dec
adc
and
xchg
cmp
mov
push
dec
sub
ss
sahf
push
in
scas
push
into
add
sbbb
enter
je
scas
in
push
pushf
pop
push
cmpsl
mov
mov
mov
xchg
pop
mov
mov
in
cli
fnsave
add
daa
dec
adc
dec
fidivrl
dec
and
pop
aad
and
adc
ret
cli
xchg
xchg
out
sub
pop
cmp
mov
pop
xchg
add
xor
pop
daa
cmp
out
pop
sti
dec
sar
cltd
movsl
testl
xor
loop
pop
and
add
negl
lret
xchg
out
int3
imul
mov
and
mov
aas
xor
cld
jne
cld
or
test
jae
mov
xchg
addr16
aam
out
ret
mov
out
lcall
ret
jo
jmp
mov
xchg
push
popf
mov
pop
adc
or
enter
arpl
arpl
mov
repnz
lcall
and
mov
mov
enter
xchg
repnz
insb
mov
rep
pop
test
gs
in
test
cmp
xor
pop
arpl
test
je
cwtl
push
orb
push
cmc
in
add
call
pmovmskb
dec
mov
push
ret
pushf
adc
mov
add
jb
cli
pop
lea
adc
mov
add
cli
push
mov
ljmp
sub
dec
incl
add
inc
inc
add
roll
movsb
pop
add
mov
subl
and
movl
jmp
mov
hlt
add
sbb
mov
or
lgs
jo
sar
fwait
ja
or
push
mov
out
fsts
repz
inc
xor
push
test
mov
mov
add
mov
movsb
lcall
push
nop
sarl
adc
inc
es
add
popf
jns
mulb
mov
jmp
pop
jbe
xor
fidivs
daa
mov
inc
sbb
cmp
fidivl
mov
xor
enter
sub
call
pop
dec
jnp
xor
lods
popf
rcll
mov
insl
jno
sbb
sbb
cmp
xchg
jae
in
push
daa
add
addr16
sub
mov
out
push
nop
jmp
sub
adc
aaa
mov
pushf
es
lret
jl
faddl
repz
hlt
xor
adc
std
and
jns
sbb
lahf
loopne
lock
fldcw
mov
sub
std
sub
jno
pusha
xchg
or
xchg
sub
stos
sarl
aad
push
pop
push
outsb
iret
xor
outsl
cmp
inc
pop
mov
inc
xchg
mov
push
aad
push
xchg
out
test
push
and
xchg
test
inc
mov
sub
sub
cmp
pop
sbb
in
mov
xchg
mov
aad
aam
fidivrs
out
loop
sbb
xchg
xchg
fadds
mov
push
andb
stc
push
call
pop
add
loopne
jp
xchg
ret
mov
push
loope
sbb
dec
pop
outsl
xchg
xor
or
push
jecxz
jmp
or
cmp
pushf
imulb
test
rcrb
mov
sub
flds
dec
cmpsb
test
sbb
cmp
addr16
xlat
pop
out
das
fsubrs
jae
movsb
mov
jns
pusha
mov
sub
imul
mov
imul
imul
test
pop
push
test
sub
and
mov
data16
or
stos
pop
jecxz
pop
sub
inc
cld
aas
jae
js
mov
stc
add
jb
loop
test
xchg
fiaddl
mov
push
push
and
testb
mov
std
into
mov
gs
jecxz
shl
loop
or
sbb
and
sbb
jge
jge
add
sub
xor
jbe
pmulhw
fcompl
outsb
jno
and
test
add
mov
std
lods
mov
mov
stos
mov
repz
xor
cmc
add
push
call
xchg
inc
std
xchg
shlb
in
je
aad
int
sbb
add
adcb
dec
xor
add
cwtl
cmp
in
mov
test
inc
ja
and
repz
hlt
int3
sub
sub
mov
jmp
inc
rcrl
sub
inc
push
cmp
out
or
sub
dec
sti
lock
mov
cld
xlat
mov
lods
jmp
movsl
mov
pushf
xchg
dec
in
insl
out
popa
inc
in
sub
in
or
addl
mov
jns
outsl
aas
test
push
outsb
js
jo
rcll
add
pop
lret
xlat
pop
mov
dec
sahf
push
pop
cmc
mov
jmp
adc
or
cs
pusha
jl
jecxz
iret
scas
mov
nop
mov
enter
aam
xor
ret
mov
mov
lret
cmpsb
imul
inc
mov
cmp
push
cmp
push
int
into
aas
stos
mov
imul
gs
add
push
adc
inc
mov
je
lahf
mov
push
cmp
mov
clc
test
jg
jp
aad
cs
in
rol
dec
inc
xchg
sbb
hlt
or
and
shrb
add
pop
ret
loop
icebp
mov
mov
mov
inc
jbe
pop
pop
fnstsw
fcoml
inc
mov
cmc
pop
fldenv
or
jnp
sub
xor
lret
push
lcall
xchg
mov
clc
popa
int3
adc
ja
and
jl
es
int
imul
cmpsb
and
pop
jmp
xchg
data16
scas
mov
cmp
testl
outsb
pop
les
pop
lahf
jmp
pop
mov
and
in
adcl
mov
mov
insl
push
call
mov
adc
push
testl
shlb
out
push
inc
dec
adc
mov
mov
std
daa
popf
and
loopne
mov
mov
dec
mov
ret
gs
fisubrl
xchg
xor
jmp
cmpsl
icebp
pop
dec
add
xchg
add
xor
add
dec
mov
xlat
adc
jns
dec
ds
ljmp
jmp
sbb
cmp
sbb
jo
and
scas
lea
inc
jno
pop
imul
je
mov
les
popf
xor
cmpsl
bound
pop
inc
push
sub
rcrl
inc
ficomps
fwait
xchg
adc
mov
movsl
out
sub
mov
push
fcoml
and
xchg
ret
mov
dec
cmpsb
rcr
aas
repz
rclb
gs
in
inc
mov
inc
pop
mov
jle
aam
bound
xchg
sub
sbb
or
stos
jmp
stc
leave
outsl
stc
vunpckhpd
movsb
repz
out
fs
xchg
pusha
jb
xchg
jnp
lcall
and
ret
dec
repnz
mov
pushf
mov
pop
adc
mov
stos
add
int
jae
dec
out
mull
add
push
sti
shl
fildl
xchg
or
and
mov
in
and
out
test
in
jmpw
lea
daa
aad
outsl
lock
jp
jg
pop
test
shlb
movsb
pop
xchg
mov
cmp
ja
mov
mov
sub
mov
cmpl
jl
andl
mov
and
jmp
push
push
push
call
mov
mov
movzwl
movzwl
shr
addl
or
sub
movl
mov
orl
movb
movb
sbbl
mov
mov
xorl
xor
addl
add
xorl
movzbl
movzbl
sub
cltd
mov
adc
mov
jmp
mov
pop
push
and
sub
mov
mov
lahf
ret
invd
add
lsl
sbb
adc
jns
adc
jg
push
mov
add
pop
rorl
ja
xor
jno
xchg
jecxz
cmp
sub
push
aad
ret
mov
insb
add
sbb
xchg
les
pop
push
adc
mov
addr16
ds
mov
jmp
cmp
xchg
aas
in
dec
shrb
xor
jbe
aam
sub
adcb
movsl
sti
hlt
sbb
mov
xor
sahf
jg
xor
push
xchg
cwtl
mov
mov
dec
ds
stos
cli
fisttps
hlt
dec
rorl
lds
xchg
test
push
push
insl
lret
or
jae
loop
in
cmpsb
jnp
cli
loop
out
lret
mov
int
mov
inc
and
lods
mov
or
stos
in
mov
nop
js
cmp
xor
aas
sbb
mov
mov
adcb
dec
movsl
inc
xchg
in
pop
push
pop
inc
mov
mov
icebp
mov
add
dec
int3
mov
fiaddl
arpl
lods
xor
pop
jo
pop
in
and
mov
repz
cmp
movsl
jp
cmp
shl
test
out
jno
sbb
mov
xchg
push
lcall
leave
push
outsb
xor
adc
sbb
cmpsb
insl
ds
pop
or
ds
inc
push
sub
add
jae
out
shll
aad
jmp
cmp
add
subl
xor
fistl
sub
popa
xchg
jle
and
iret
or
mov
jg
das
mov
sbb
xchg
je
cmp
and
pop
lods
and
lock
sub
movsb
pop
xchg
popa
inc
inc
add
ljmp
das
cmp
xor
sub
pop
push
xor
lcall
push
pushf
out
out
in
mov
cmp
sbb
shrb
adc
inc
loop
add
pop
aas
lods
arpl
push
dec
call
push
sub
fisttpll
in
fisttps
test
addr16
pop
movsb
xchg
lret
cmp
stc
mov
in
outsl
stos
jg
pop
je
xor
popa
and
mov
xchg
dec
xor
and
shrl
jbe
loope
cmp
mov
lret
loope
jo
and
adc
push
cmp
sub
jo
xlat
stos
jg
int3
and
xchg
push
andl
jge
xchg
in
inc
cmp
inc
imul
ret
dec
imul
int
cltd
sub
in
orl
mov
xchg
cmpsb
mov
jl
and
jge
add
adc
cmp
lret
push
or
inc
xor
frstor
call
nop
pop
into
cmp
ds
test
add
sub
je
push
inc
push
pop
and
add
test
mulb
adc
pop
daa
jb
fstl
xor
fcomps
inc
lahf
fidivs
jle
test
and
loop
je
dec
jp
lods
pushf
mov
vpsrad
add
xor
xor
inc
cld
call
push
shlb
idiv
inc
jl
xchg
mov
fldl
loope
fldt
sbb
add
mov
popa
sbb
stos
mov
ss
cmp
test
cmp
and
sarl
dec
fwait
out
rol
push
dec
mov
jecxz
shlb
out
xor
repnz
mov
or
mov
mov
push
or
inc
inc
imul
jb
pop
int3
pop
pop
adc
jbe
dec
mov
xchg
dec
in
sub
shll
lcall
push
ficoms
mov
ja
pop
cmp
leave
sub
iret
add
test
push
or
and
test
sbb
pushf
aad
and
lret
les
or
mov
sahf
imul
adc
xchg
cli
mov
or
push
fwait
mov
mov
dec
ret
push
push
push
loope
sub
mov
aam
inc
pusha
out
pusha
mov
pop
cmovae
ljmp
push
les
fsubl
ja
sub
fwait
mov
jmp
lret
fwait
mov
cwtl
dec
lahf
sahf
repz
add
adc
ss
lods
add
std
cld
mov
adc
mov
loopnew
ljmp
pop
mov
lret
sahf
cmpsb
add
movsl
xor
lahf
lret
push
nop
sub
mov
dec
data16
jbe
test
inc
xchg
inc
fstps
pop
dec
aad
jmp
pusha
or
push
pop
cltd
mov
pop
mov
outsl
repnz
inc
ljmp
xchg
dec
shrb
cwtl
fwait
jg
mov
mov
dec
mov
repz
xchg
icebp
ljmp
fistl
jg
jne
bound
mov
leave
cmpsl
idivb
loopne
push
mov
rcl
cltd
icebp
je
repnz
inc
xor
jecxz
pop
push
enter
cmpsb
jb
mov
jo
sbb
mov
and
cs
cmp
dec
push
scas
mov
daa
popa
jg
aas
out
addr16
imul
adc
and
pop
adc
sbbb
add
xchg
jmp
in
mov
fadd
cmpl
xor
adc
ljmp
sbb
testb
mov
and
test
lahf
fnsave
xchg
xchg
fistpl
out
enter
lcall
mov
ljmp
decb
add
jmp
mov
mov
mov
jb
stos
inc
shl
and
add
mov
pop
mov
movsb
mov
sti
push
cmpl
jl
and
jmp
push
call
jmp
sub
push
xchg
jne
jle
outsb
mov
cwtl
test
add
mov
push
addb
dec
push
not
cld
push
xchg
flds
pop
insb
mov
adc
inc
xorb
fimuls
fiaddl
aaa
shlb
add
fildll
repnz
test
inc
mov
sub
call
test
je
sbb
sub
lcall
push
mov
cli
pop
fidivrl
cmpsl
aad
xchg
je
xchg
out
xor
sub
cmp
out
adc
out
das
or
push
add
test
flds
push
dec
addl
xor
mov
mov
lret
pushf
mov
out
jg
jns
das
and
enter
ret
push
cmp
jl
push
and
push
fs
mov
cmovg
mov
cli
mov
ljmp
lock
mov
push
pop
lcall
push
pushf
cmp
in
fyl2x
jae
popf
xchg
xchg
push
stc
aam
hlt
xchg
insb
scas
pop
xchg
aam
adc
dec
fwait
sbb
outsl
dec
sub
imul
add
xor
mov
pop
repnz
ja
lcall
xlat
notb
aad
popa
xchg
pop
fcmovb
repnz
test
push
aaa
mov
xor
xorl
not
ljmp
mov
mov
jge
xor
bnd
in
std
std
pop
or
mov
pop
adc
cmpsb
push
ja
std
idivb
enter
mov
inc
adc
push
das
enter
jno
adc
insl
jns
xchg
dec
or
mov
sub
or
or
mov
jae
sub
sub
inc
pop
mov
dec
fldenv
add
cmp
inc
xchg
sarl
push
clc
adc
insb
jg
dec
sub
rorl
adc
or
ds
mov
adc
mov
aas
jmp
insb
sub
std
dec
dec
scas
sub
imul
xchg
shrb
xor
fsubrp
push
push
sbb
insl
cmpsl
out
sbb
mov
inc
jo
add
jo
dec
sub
dec
xlat
pop
lods
fwait
sarb
inc
jae
punpckldq
iret
xchg
out
inc
adc
out
jg
stos
fistl
jns
cltd
bound
xchg
push
scas
jg
jle
int3
add
fisubrs
int3
sbb
jmp
insb
pop
aad
hlt
inc
sub
jg
inc
pop
fisttpl
arpl
sti
mov
out
jb
lds
lret
adc
cmpsb
mov
popa
jecxz
pop
pop
mov
cltd
mov
lods
mov
stc
adc
xor
mov
push
movsb
cmc
ljmp
cmp
stos
jno
sbb
push
cmpsl
mov
pop
jnp
adc
inc
jp
cltd
stc
lods
dec
xchg
mov
mov
xchg
inc
ljmp
push
iret
rcll
movsb
push
and
fisubrl
fldcw
fsubrs
xor
idiv
jl
inc
mull
lcall
stc
mull
shll
sub
sbbb
shlb
cmc
mov
enter
arpl
int3
cmp
dec
into
gs
andb
push
push
adc
push
adc
push
fwait
mov
lods
and
adc
arpl
push
dec
and
add
flds
push
sbbl
sub
mov
sub
jge
lock
add
xchg
movsl
and
fs
loope
sbb
mov
sub
sbb
repz
outsl
insb
push
push
jmp
adc
jbe
and
test
nop
outsl
push
jmp
jmp
loope
or
loopne
push
leave
insb
cmpsl
or
mov
dec
insb
clc
jge
and
aam
sub
mov
out
imul
xor
push
loop
ret
mov
lret
cmp
ljmp
rcrb
cmp
adc
clc
and
sbb
repnz
in
fnstenv
sub
int
orb
xchg
insb
daa
cld
out
into
mov
jg
xchg
xorb
cmp
lahf
xchg
cld
das
inc
insl
pop
push
clc
xchg
push
pop
icebp
cltd
movsb
roll
xorl
lea
mov
cmpsl
outsb
sub
sbb
imul
adc
sub
in
mov
jg
lods
daa
mov
imul
cmp
nop
mov
hlt
aam
les
mov
jmp
mov
pop
push
xor
jge
xchg
outsb
call
popl
dec
cwtl
loope
fidivrs
iret
mov
dec
cmp
sbb
ljmp
addr16
cmp
cmp
repnz
nop
into
xchg
cli
arpl
leave
xor
inc
adc
cld
mull
push
mov
cmp
pop
jl
lea
mov
mov
jmp
out
lock
cmove
roll
adc
movsl
jno
push
xor
or
cmp
jmp
mov
aaa
lea
sub
sbb
xchg
mov
shrb
mov
mov
test
in
mov
sbb
ss
lock
push
jns
adc
pop
xor
inc
ffreep
adc
es
mov
xor
aaa
call
adc
repnz
mov
cld
sub
mov
je
add
adc
cmp
xlat
enter
movsb
jb
mov
rcl
and
ljmp
dec
cmpsb
xor
outsl
leave
aaa
sbb
mov
mov
mov
test
sbb
push
test
push
cltd
mov
inc
loopne
loope
mov
stc
fneni(8087
iret
ret
ret
repnz
jg
cmp
mov
sti
mov
and
inc
daa
pop
idiv
jmp
mov
xchg
mov
ljmp
or
setae
mov
xchg
cmp
je
jg
mov
aam
stc
adc
movsl
ja
dec
add
mov
stc
mov
imul
lea
into
scas
ss
scas
movsl
test
ss
push
call
push
or
sbb
push
sti
stos
mov
dec
ficompl
xchg
and
imul
or
ljmp
lret
imul
mov
mov
in
aas
mov
ret
pop
dec
faddl
out
mov
and
lds
loop
add
out
inc
dec
pop
daa
aam
cli
mov
loop
scas
leave
cmp
jbe
xor
adc
and
std
inc
dec
popa
and
stos
push
fwait
xchg
in
mov
daa
aaa
iret
xlat
adc
xorl
sbb
jl
cmc
out
xor
xchg
das
ds
test
cwtl
adc
and
rcl
pop
mov
xchg
cmp
mov
push
xor
cmp
daa
mov
xchg
stos
arpl
dec
pop
cltd
or
enter
movsb
inc
mov
sbb
loopne
xor
xchg
fnsave
lods
aaa
dec
iret
inc
cmp
sbb
inc
xor
inc
lock
mov
inc
adc
xchg
sbb
pusha
sbb
lcall
fsubs
insl
fmul
call
mov
in
inc
testl
push
push
push
in
pushf
cmovl
test
mov
and
jnp
shrb
mov
or
sub
or
outsl
mov
jecxz
and
lods
cmpsl
ds
adc
jnp
fsubrp
push
ja
insl
dec
mov
cmpsb
jnp
adc
ja
inc
inc
inc
mov
sub
mov
add
adc
push
and
and
insl
and
cmp
fisubrs
in
mov
ret
and
mov
inc
sarb
popa
ja
mov
clc
shll
out
sti
push
pop
lret
jae
jo
dec
xchg
popa
dec
bnd
arpl
fstl
mov
lock
xchg
mov
aas
imull
fwait
repz
cmpsb
fiadds
in
hlt
ret
pop
push
xor
jne
test
pop
sub
push
das
or
push
rcrl
adc
mov
cmp
ret
dec
pop
and
cmp
rcl
mov
fidivl
jbe
or
adc
jmp
push
sub
ljmp
push
sub
xlat
adc
xchg
mov
cmp
arpl
lods
pop
or
jge
add
xchg
popf
leave
xlat
dec
int
mov
mov
mov
test
xor
cwtl
or
mov
subl
test
inc
or
into
fisubrl
imull
outsl
or
in
in
sbb
std
icebp
fsubrs
js
jnp
clc
mov
xchg
out
ljmp
ljmp
jmp
sbb
addr16
add
xchg
pop
cli
dec
call
sbb
out
adc
adc
sbb
daa
pop
jae
sub
jge
mov
xor
xchg
ss
or
das
mov
xor
loopne
out
aad
movsl
lods
scas
add
in
insb
pop
sub
sub
push
and
decl
insb
pop
xor
fsubrs
orb
lret
jle
cmpsb
xchg
cmpl
xor
divb
mov
adc
lret
cmc
sub
xchg
arpl
mov
push
stos
dec
push
xchg
rcll
outsl
fldcw
pop
in
xchg
jl
iret
push
repnz
push
loope
push
pop
xchg
cmp
xchg
jecxz
cmpsb
loop
arpl
mov
push
push
out
push
bound
clc
xchg
xor
inc
ja
je
push
jle
lods
loop
rolb
ja
and
ficoms
enter
or
mov
ljmp
dec
xor
mov
jns
push
lods
rol
push
addr16
jne
out
mov
test
shrb
mov
je
test
mov
push
jo
xchg
aad
and
insb
or
xchg
pop
jns
jp
xor
insb
xor
mov
movsl
and
fisubs
push
mov
inc
dec
in
and
sub
pop
faddl
xor
cmp
shlb
sarb
jnp
push
xor
rolb
outsb
mov
jnp
sbb
mov
cmp
pop
jge
inc
mov
pop
ss
adc
test
inc
dec
pop
cmp
outsl
int
ret
sti
nop
cmp
xchg
mov
rorl
enter
enter
add
jae
imul
pop
ja
sub
mov
movsb
icebp
adc
mov
jo
and
adc
std
bound
clc
push
add
jne
and
xchg
mov
lds
je
dec
push
and
jbe
mov
ret
pop
aam
ja
pop
lret
dec
cmp
push
rclb
cmp
or
sarl
movsb
inc
mov
mov
xchg
daa
cmp
push
pusha
sbb
or
sub
mov
sub
fs
jb,pt
sub
out
mov
push
leave
std
cmp
test
pushf
pop
loopne
dec
jno
and
scas
jno
and
dec
dec
mov
jmp
cmp
loope
cmp
and
and
jg
ss
pop
jg
mov
pop
insb
sbb
andl
push
cmp
fstpt
sub
cmp
lea
addb
or
in
xlat
imul
aad
pop
pop
imul
xor
mov
jecxz
sub
mov
and
ucomiss
ja
movsl
inc
dec
les
ror
repnz
outsl
mov
movsl
cwtl
mov
fcoms
push
adc
gs
mov
movb
movb
mov
andl
jmp
dec
mov
aaa
es
mov
mov
or
jle
pop
push
mov
xchg
stos
sub
mov
xor
call
sub
xor
inc
enter
call
pop
sub
outsb
push
pmullw
cmpb
adc
adc
inc
push
notl
mov
adc
xlat
cmpsl
fistl
nop
gs
das
fnstsw
jb
int
lret
cmpsl
or
imul
jg
jle
fucomip
cltd
jmp
jg
or
jmp
cmpsl
dec
dec
in
cmp
out
xor
push
xchg
cmpsb
fildl
adc
ret
push
pop
arpl
inc
dec
fisubrl
cmp
movsl
jb
jg
jmp
inc
psllw
lea
mov
cmpsl
ljmp
aaa
inc
sub
sub
sub
sarl
clc
das
rorl
mov
mov
inc
sarl
rclb
add
fs
push
sub
inc
adc
mov
jnp
sbb
fwait
push
hlt
pop
andl
stos
jb
cli
sbb
jae
add
sbbl
cmc
lds
cpuid
shll
sbb
mov
dec
lock
scas
repnz
sub
test
add
sub
nop
jl
sub
cmp
or
clc
js
add
shrb
xchg
cltd
jg
ljmp
sub
xor
and
lods
fwait
rorl
jb
cmp
pop
inc
mov
mov
lahf
cli
idivb
lret
sbb
mov
pop
jg
nop
pop
lods
sbb
mov
loopne
mov
or
rol
xchg
stos
cmp
or
rcl
sub
inc
push
daa
fnstsw
adc
rcll
mov
ss
sbb
fs
lods
xchg
loope
insl
push
pop
pop
into
mov
js
xor
movsb
ljmp
add
fldcw
negb
cmpsb
fstp
test
jl
xor
repnz
or
cmovb
pushf
pop
and
std
cmp
mov
popa
xor
mov
outsl
std
cli
cld
cltd
add
mov
mov
in
pop
push
sbb
xor
inc
xchg
sarl
ret
es
jge
push
imul
and
mov
lret
pop
out
imul
sbb
outsb
outsb
je
cld
adc
ds
jnp
or
dec
aam
imul
xor
sbb
jmp
rolb
or
add
aaa
stos
es
lret
xor
cltd
inc
les
out
mov
sbb
lret
pop
pusha
imul
int
in
push
xor
arpl
fldcw
movsb
pusha
jbe
jle
cmp
outsl
mov
dec
mov
inc
lods
rcl
ja
test
hlt
arpl
push
test
dec
add
push
pop
je
sar
int3
and
lods
sahf
fs
incb
lods
das
fmuls
push
xchg
add
mov
outsl
sub
loopne
cmp
lret
out
xchg
lahf
clc
shl
mov
and
push
mov
mov
cwtl
rcrl
jecxz
aaa
mov
inc
sbb
fdivp
lds
or
xchg
pop
mov
dec
rorl
fcmovnbe
in
fbld
sbb
dec
mov
add
dec
sub
outsl
pop
lcall
push
fwait
add
out
xor
cmp
daa
and
push
decl
mov
cld
lods
enter
sbb
dec
inc
jo
jno
jne
xlat
xor
mov
sub
cmp
inc
pop
push
hlt
enter
jle
cs
xor
rcrb
sbb
mov
subps
mov
pop
outsl
pop
test
xchg
adc
xchg
test
dec
dec
lock
lahf
jp
sub
pusha
sbb
test
sub
js
mov
leave
xchg
mov
inc
inc
inc
dec
cmc
mov
fucomp
mov
inc
sti
dec
sti
in
mov
into
jne
fs
icebp
adc
fistps
fcmovnu
outsb
mov
push
adcb
or
mov
mov
pop
jg
xor
fildll
jne
nop
mov
in
shll
cli
pop
push
dec
add
xor
test
mov
adc
test
adc
je
jb
insb
push
jl
adc
shrb
mov
inc
xor
mov
fdivr
bound
dec
jae,pt
sub
or
mov
addr16
nop
sub
jne
test
int3
shr
sbb
dec
add
lea
jg
out
ljmp
iret
testb
cmpsl
xor
jmp
fldt
inc
add
popa
lea
fmul
xchg
xchg
mov
pop
bndstx
stos
mov
xlat
imulb
xor
mov
push
cli
and
xor
sbb
xchg
cmpsb
repz
repz
bound
loopne
pop
call
cmpsb
mov
push
adc
push
mov
test
adc
sub
sbb
mov
sbb
aas
cmp
loop
imul
fucomi
movsl
jo
push
sarb
jle
sbb
testl
cld
nop
aas
push
arpl
int
mov
ds
iret
sub
xor
inc
fwait
add
pop
repz
mov
bound
enter
scas
adc
das
jae
arpl
arpl
jl
and
sti
jnp
jl
call
or
aad
sar
mov
dec
in
xchg
ds
or
push
xchg
insl
outsb
xor
push
or
std
adc
aaa
mov
mov
std
jae
jo
cmp
or
inc
pop
aam
dec
addr16
dec
icebp
orl
add
movzbl
movzbl
orl
jmp
insb
lods
push
repz
je
xor
or
jle
xchg
mov
add
push
idivl
push
cmc
push
cli
scas
outsl
sbb
dec
dec
inc
popf
fildll
lret
rcrl
jle
imul
mov
cmpsl
and
mov
mov
sbbl
pushl
std
call
sbb
aad
test
sub
rcll
mov
xor
jae
push
dec
outsb
cmpsb
pop
hlt
lret
cld
jp
xchg
mov
ljmp
outsl
jno
out
int
mov
lcall
jg
jp
int
insb
xchg
xor
inc
inc
lods
mov
andb
fstl
push
push
sti
adc
xor
fmuls
scas
add
mov
shlb
dec
inc
stc
fadds
arpl
sysret
add
mov
out
pop
aaa
inc
push
fistpll
or
out
push
movsl
mov
sahf
xlat
xor
inc
push
inc
sbb
or
imul
sbb
mov
add
cmp
js
adcb
popa
add
mov
cmp
sbb
sbb
roll
stos
lahf
sub
ja
in
in
inc
add
sub
cmp
pop
test
sbb
fisttpl
pop
dec
xor
ss
mov
mov
clc
stc
jns
je
aas
stc
dec
enter
xchg
lock
pop
xor
data16
mov
das
and
ja
add
adc
hlt
in
aas
mov
mov
lods
adc
shll
push
dec
jb
and
test
daa
pop
sub
push
cmp
out
repnz
or
incl
mov
sbb
out
cmp
push
push
push
rorl
into
push
dec
clc
add
call
pop
lcall
sub
xor
xchg
jo
ror
addb
in
adc
sub
cmp
mov
out
shll
xor
mov
adc
jns
sar
daa
and
pop
xor
test
hlt
cltd
mov
clc
jae
ret
sub
pop
shr
inc
sbb
sbb
mov
cmp
outsl
inc
inc
mov
pop
jmp
jge
mov
cld
adcl
mov
insl
hlt
mov
mov
mull
sarb
sub
fwait
in
jns
idivl
idivl
and
lahf
stos
filds
cltd
ss
cli
sarl
insl
sub
outsb
dec
cmp
jbe
iret
push
fwait
ds
cli
add
or
in
jb
mov
cmp
shll
int
mov
pop
sti
jecxz
test
int3
pop
add
in
xor
addr16
pop
bound
xor
ret
inc
push
cwtl
xchg
pop
jbe
cli
lds
dec
jno
mov
cmp
pop
add
mov
xchg
xor
les
xchg
orl
adcb
int3
jmp
pusha
shl
xchg
repnz
mov
mov
addl
xchg
popa
or
out
je,pn
push
cmp
xchg
lods
lods
add
cmp
jnp
cltd
mov
push
cmc
bound
sahf
repz
jo
mov
xlat
loopne
stos
cltd
inc
pop
int
push
jle
lret
xor
jge
xor
xchg
jo
into
mov
out
mov
fcoml
call
pop
mov
pop
iret
fcoml
shrb
mov
subl
inc
mov
jmp
lahf
sbb
jae
cmp
or
bound
out
adc
inc
add
mov
cld
sub
cmpsl
lret
fldcw
xchg
fidivl
sbb
bound
xlat
cmp
xchg
push
add
mov
outsl
movsb
out
jno
mov
xchg
rol
pop
inc
icebp
and
popf
or
and
call
push
pusha
inc
xchg
fwait
push
int
sub
dec
pop
mov
jbe
sbb
push
push
lds
xor
push
mov
and
out
add
call
mov
into
jg
adc
mull
insb
add
jb
or
xchg
add
idivl
dec
pushf
shll
mov
iret
mov
in
jb
or
mov
fnstenv
imul
repnz
fsubl
mov
cld
ds
test
mov
lret
jnp
or
pop
pop
scas
mov
or
jno
movsb
mov
aad
in
xor
push
inc
mov
mov
xchg
lods
es
adc
push
test
add
cwtl
divl
xor
aaa
xchg
lret
sarl
xchg
sbb
lods
icebp
adc
imul
xor
jb
cmp
cmp
pushf
cmp
xchg
push
movsb
mov
sbb
xor
jge
push
jo
outsl
leave
inc
mov
int3
jns
ficomps
outsb
or
mov
jp
dec
adc
ficoml
mov
and
jno
xor
in
adc
adc
pop
lods
mov
loopne
jno
sbb
test
add
push
je
loop
or
xor
fldcw
repz
lea
jge
pushf
mov
test
test
test
pushaw
rclb
rcrl
dec
les
inc
cmpsb
into
pop
fcoml
out
in
jno
in
movsb
adc
lret
sbb
sti
cltd
mov
xor
xchg
outsl
mov
cmp
mov
addr16
xchg
jns
sbb
push
sbb
outsl
push
push
notl
dec
aaa
add
movsb
inc
xor
sub
and
dec
aam
mov
or
dec
or
int
mov
pop
inc
orl
nop
cmp
aaa
mov
gs
sysenter
jne
shll
xor
insl
push
in
repz
xlat
mov
xchg
mov
int3
push
push
xor
sbb
xchg
inc
inc
add
add
idiv
movl
mov
movl
cmp
movl
jmp
fidivl
push
or
fmuls
in
mov
add
wrmsr
je
dec
bound
loope
enter
mov
es
jle
outsb
mov
push
mov
xlat
daa
or
sub
mov
ss
jmp
pop
push
cmp
push
clc
insb
sub
std
nop
sbbb
xor
cmp
lods
pusha
mov
in
cmpsb
or
scas
mov
mov
lock
sbb
xchg
ss
popa
outsl
add
jo
das
mov
test
jae
jp
iret
inc
movsl
cwtl
in
inc
dec
fisubrs
cmc
shrl
adc
ss
in
pop
stos
xchg
or
sub
push
push
rorb
pop
and
cmp
mov
jns
push
fwait
sbb
sub
adc
test
xrelease
in
xor
mov
mov
mov
adc
es
and
push
sbb
jmp
jno
sub
push
dec
xchg
xchg
inc
jmp
push
add
pop
inc
out
inc
and
bound
add
fidivl
pop
jne
xchg
xchg
jbe
mov
sub
jno
popf
fstpl
and
out
xadd
jecxz
lret
jo
mov
dec
sbb
inc
pop
test
or
aas
outsb
sub
in
inc
dec
int3
js
shl
gs
out
loopne
inc
lock
add
xchg
scas
stos
mov
push
and
mov
inc
xor
sub
incb
lods
inc
pop
loop
ja
adc
je
xor
push
and
xchg
aaa
loopne
mov
icebp
sub
scas
jne
loop
or
pop
lock
or
shrb
pop
enter
sub
adc
sub
mov
pop
fisubs
jl
mov
cwtl
push
dec
jbe
outsb
gs
inc
pushf
sbb
mov
cmc
dec
xor
push
cmp
lods
inc
cld
push
jae
int
dec
adc
pusha
mov
dec
jg
xchg
ds
and
fcom
data16
and
mov
xor
neg
jecxz
out
inc
sbb
aad
jbe
test
iret
imul
add
dec
dec
mov
cmpsb
mov
aaa
push
cs
inc
sub
mov
sub
cld
mov
inc
dec
test
repz
in
jl
xor
mov
sti
repz
rorl
lods
or
sub
adc
cmc
jg
fld
dec
lcall
jne
jle
mov
adc
mov
inc
sub
adcb
xchg
and
pmaddwd
int3
insl
mov
cltd
stc
adc
mov
call
or
aad
and
mov
stos
xor
push
mov
adc
iret
out
push
in
pop
call
mov
popf
dec
inc
imul
dec
jg
dec
int3
es
adc
sbb
xor
out
pop
add
mov
movsb
mov
and
jns
or
sahf
sbb
push
les
add
xor
out
cmp
mov
or
pushf
mov
test
sbb
in
mov
xor
push
mov
int3
int3
pop
push
scas
adc
jle
sub
jp
sub
adc
lods
ret
add
adc
fimuls
insb
xchg
xchg
mov
jnp
mov
idivb
jae
jns
gs
cmp
xlat
xlat
pop
aad
jae
js
scas
adc
sub
clc
std
mov
leave
xlat
add
pop
cmp
xor
dec
mov
jne
sub
push
mov
jecxz
cmp
adc
lret
gs
dec
xlat
xor
aad
dec
mov
lds
pop
bound
aaa
dec
dec
or
mov
inc
xlat
xor
dec
pop
lds
inc
mov
ss
addr16
arpl
mov
pop
lret
fstl
push
ret
out
push
sub
ljmp
mov
neg
in
fs
lea
add
add
mov
ret
sub
outsl
mov
and
pop
sbb
cmp
xor
shl
outsl
fsubl
fs
add
addb
and
jne
js
gs
nop
cmpb
addr16
imul
nop
push
or
sub
xor
daa
scas
nop
out
push
mov
out
sub
test
stos
or
fwait
das
ret
dec
or
cmp
mov
or
mov
out
test
jl
xor
xchg
hlt
dec
xor
mov
rcll
ja
clc
sub
addr16
xor
ss
mov
jmp
cltd
inc
jns
imul
mull
cmp
sbb
ret
sbb
or
sub
mov
sar
in
inc
es
pop
mov
fbld
jo
or
xor
xchg
mov
cmp
adc
bound
xorl
jno
cwtl
mov
mov
add
mov
aad
or
adc
mov
sbb
jl
sbb
lcall
adc
adcb
test
xchg
push
es
xor
in
fldl
hlt
add
dec
pop
imul
ds
mov
adc
stos
and
mov
idiv
lea
outsb
mov
mov
add
inc
xor
cmp
xorl
repnz
add
dec
mov
cmp
mov
data16
cmp
xchg
fdivr
jbe
mov
adc
dec
and
add
dec
xor
jnp
and
les
dec
sub
mov
in
mov
push
into
push
shr
outsl
or
sbb
pusha
aaa
inc
pop
pushf
stos
scas
js
mov
jae
xor
movl
cmpl
jb
mov
sbb
jmp
push
call
movl
mov
mov
push
push
adcl
push
push
andl
call
xor
xorl
xor
orl
or
or
movl
mov
mov
mov
cmp
jne
mov
mov
jmp
mov
dec
and
xchg
sub
push
mov
iret
imul
movups
iret
mov
adc
psubq
cmp
rol
ret
fwait
mov
dec
pop
repnz
popa
test
in
add
push
repnz
xchg
pop
cmp
and
lea
inc
xchg
push
out
les
jo
lock
xchg
inc
add
jbe
stc
adc
push
or
add
sub
outsl
push
mov
pop
mov
mov
je
jno
xor
jmp
and
ds
push
xor
shlb
jne
fstps
dec
mov
jbe
push
sub
inc
inc
leave
or
stos
lock
push
push
das
dec
push
sbb
push
jmp
sub
and
cli
insb
fwait
mov
dec
ja
mov
push
adc
mov
out
mov
mov
lret
and
insb
push
jmp
fdivl
push
or
dec
pop
pushf
push
fisubl
loopne
push
mov
sahf
in
pop
jb
jb
inc
stos
stos
sub
lods
and
cltd
lock
jns
bound
outsb
cmp
popl
cmpl
and
insl
por
or
stos
sbb
jno
test
mov
out
dec
mov
cmp
adc
xlat
pop
jne
sub
sahf
pop
les
loopne
icebp
in
fldlg2
lret
mov
add
xchg
or
cmp
push
pop
out
dec
imul
push
aaa
adc
and
movl
add
cmc
mov
sub
or
pop
push
in
ret
mov
leave
lret
mov
sbb
jp
jle
add
bound
rclb
sub
stos
pop
xor
cmp
fbld
aad
lea
cltd
sahf
int
es
test
cmp
and
or
add
cmp
push
mov
xchg
xchg
add
xor
jmp
fidivl
dec
lret
sbb
cmpb
push
and
pop
call
mov
shlb
push
ret
sbb
mov
and
scas
sub
cli
incl
mov
jp
inc
sub
fbld
mulb
mov
imull
lods
cs
push
cmp
fbld
ret
test
or
ljmp
cmp
pusha
add
inc
test
sub
sbb
lods
aaa
adc
pop
jae
adc
arpl
lods
fisttpl
lods
test
js
mov
mov
rcrb
rclb
cmp
into
movsb
cmp
mov
ret
arpl
xor
mov
cltd
or
mov
ret
out
mov
mov
mov
push
in
in
int
or
lock
mov
pop
imul
sarl
dec
push
inc
jbe
jl
pusha
mov
testb
stos
dec
and
add
lea
cld
jp
mov
mov
inc
adc
bound
std
pop
imull
sahf
adc
cmp
xchg
pop
mov
lods
js
jb
add
cld
mov
sub
iret
fdivrp
push
lods
sbb
fimuls
stos
inc
jge
push
cltd
pop
bound
mov
pop
movsb
and
data16
or
adc
or
xorb
pusha
testb
pop
jecxz
lods
out
jne
sti
pop
sub
adc
outsl
addr16
mov
mov
scas
mov
xor
sub
inc
xorps
cmp
mov
test
test
push
arpl
nop
mov
cmpsb
cmp
push
lock
sub
das
repz
and
adc
loopne
fnstsw
hlt
mov
mov
ss
cmpsb
xchg
mov
int3
fnstcw
inc
and
sub
cwtl
mov
xor
and
jecxz
inc
xchg
outsl
ret
lock
inc
pop
out
stos
pusha
add
pop
adc
xor
mov
out
leave
cs
sbb
stos
inc
shlb
std
jno
sub
jne
es
sbb
dec
pop
es
test
sbb
and
ret
cwtl
mov
mov
cld
jp
cmp
std
stc
aam
nop
clc
adc
mov
in
jo
xlat
ljmp
push
jp
and
in
push
cli
lcall
test
sbb
adc
or
xor
out
jmp
push
xchg
fsubp
fwait
jle
rcr
sub
jecxz
test
insb
sahf
aas
addb
je
push
cmp
sbb
jae
inc
mov
cmc
sub
cwtl
cmpsb
jg
cmp
jg
popa
movsl
cmp
sahf
jbe
nop
dec
push
mov
test
gs
aaa
sarl
fnstenv
xchg
or
mov
out
cli
xchg
imul
hlt
and
outsb
xchg
jb
mov
xor
push
loop
std
dec
aas
test
inc
sub
cmpsb
mov
sbb
addb
popf
mov
incl
sahf
and
daa
leave
and
arpl
mov
lretw
jg
fs
dec
mov
xchg
clc
cli
xor
inc
sub
jmp
pusha
sti
lret
insb
insl
dec
imul
test
ret
lret
cmpsl
aad
out
sub
gs
and
jge
push
sbb
xchg
dec
fs
popa
mov
mov
out
inc
scas
fnstsw
xor
in
and
cmp
repz
jg
push
pop
out
or
sbb
or
xchg
cmpsb
xchg
clc
test
lods
add
jmp
adc
iret
es
mov
sti
or
mov
shrb
into
into
or
xor
int
inc
jp
popa
adc
jl
cmp
mov
cmpsb
push
bound
lcall
lods
pusha
hlt
push
ret
lahf
aas
test
add
shll
xchg
inc
insl
add
mov
shrd
shl
mov
mov
shr
xor
mov
xor
or
mov
mov
mov
shrd
xor
shr
mov
mov
xor
or
mov
shl
push
pop
mov
mov
mov
mov
mov
sub
movzwl
mov
movzwl
cltd
jmp
jb
ffreep
push
aad
push
dec
mov
jecxz
lret
push
invd
add
paddq
out
scas
add
cmp
sub
cmp
push
mov
jge
mov
xchg
aas
jl
mov
jne
int
negb
ds
push
cmpsb
add
mov
cmp
aaa
gs
and
and
pop
mov
push
pop
push
dec
repz
movsb
jecxz
mov
fcmovne
dec
cmpsl
in
fwait
xchg
scas
inc
sbb
or
dec
jbe
xlat
fwait
lds
lea
cmp
mov
cld
xchg
xchg
inc
pop
push
sub
andb
stc
xchg
pop
stos
int3
add
out
sbb
cld
dec
push
insl
bound
out
in
mov
daa
pop
fidivrl
lcall
pop
movsl
mov
sbb
lret
adc
cmp
les
inc
xor
in
fstl
cmp
sbb
clc
ljmp
pop
int
flds
stos
mov
push
cmp
imul
sbb
sub
fisttps
jg
xchg
mov
popa
or
lret
pop
mov
lods
pop
fidivrl
adc
sub
or
daa
xor
jmp
iret
jnp
mov
sarb
push
mov
ljmp
enter
adc
lret
mov
mov
test
jae
test
xchg
imul
aas
fiadds
repz
fmuls
xchg
pop
dec
sar
notb
inc
lahf
out
push
sbb
pop
pop
into
mov
fwait
xchg
jbe
stos
lcall
adc
jnp
mov
or
icebp
cmp
xchg
popa
jl
rcl
wrmsr
inc
dec
divl
jg
lahf
sub
popf
cmpsb
aad
mov
xchg
out
dec
push
push
int3
and
aaa
mov
loop
push
scas
mov
in
dec
dec
and
cld
jg
stos
andb
adc
mov
xor
cwtl
cmpsb
in
bswap
mov
lods
lds
dec
gs
jp
sub
xorb
xchg
scas
into
in
ret
or
nop
pop
ljmp
scas
arpl
call
and
movzwl
loope
loope
arpl
lods
cmp
aaa
inc
cs
xor
dec
mov
ret
jecxz
jg
xor
outsl
cmpl
popf
jne
or
pop
mov
jp
test
xor
push
cmpsb
push
cmpsb
lret
clc
dec
sbb
in
shlb
or
arpl
dec
adc
inc
out
nop
test
xor
xchg
mov
cli
sbb
mov
shll
mov
enter
sbb
int
insl
lods
push
mov
clc
movl
xchg
inc
lahf
or
aad
rcrb
jb
out
xchg
aaa
fisubs
mul
and
data16
stos
adc
es
dec
adc
inc
in
push
mov
dec
jns
fidivrl
mov
clc
insb
cli
stos
jae
cwtl
ja
xchg
adc
mov
jb
cmc
xor
pop
lret
mov
sbb
mov
es
popf
movsb
lcall
ds
divb
push
and
mov
sar
or
pop
lds
mov
mov
imul
out
push
adc
push
clc
cmc
test
push
notl
jnp
xchg
sbb
mov
and
xchg
mov
inc
mov
cltd
pusha
enter
inc
jle
scas
mov
xor
aad
cmp
out
and
les
in
jae
mov
shr
sbb
arpl
mov
jp
pop
cmpsb
loopne
lcall
iret
and
xchg
mov
fnstsw
xor
mov
fmul
rol
pop
fcompl
dec
sti
sbb
test
or
xchg
push
jp
mov
pop
mov
and
lahf
gs
insb
and
lahf
mov
out
aad
fisubrs
scas
adc
enter
fs
fidivs
push
or
jmp
mov
pop
inc
imulb
xchg
cmp
jne
repnz
mov
imul
and
icebp
dec
ret
pop
cmp
push
ss
xor
cmp
xchg
fucomp
push
adc
das
xchg
es
cld
jns
inc
divb
bound
roll
push
repnz
pop
jmp
pusha
repz
int3
sub
out
push
into
mov
mov
insb
sub
es
adc
int3
sbb
repz
sub
jb
into
jle
push
and
dec
sbb
cmp
xor
add
rorl
in
lcall
cwtl
cmp
cli
jns
push
push
test
jae
mov
jle
loopne
ret
test
test
adc
subb
mov
outsl
lea
adcl
sbb
dec
leave
aad
pop
loopne
pop
dec
mov
hlt
push
push
fstpl
jnp
shll
js
cmp
fdivs
sub
pop
arpl
xchg
xchg
xchg
adc
add
mov
mov
fwait
ja
jle
xor
push
cmp
jle
loope
dec
pop
arpl
push
leave
fs
push
gs
lret
and
ss
hlt
sbb
in
pushf
xchg
xchg
mov
inc
inc
ds
push
mov
mov
or
dec
xor
dec
xchg
push
add
ret
lret
popa
adc
cmp
in
stc
xchg
ds
fcomps
adc
movsb
push
nop
int
enter
test
jbe
lcall
test
sub
sub
mov
jnp
push
fimuls
jecxz
dec
adc
xchg
mov
xlat
sub
sti
lods
rcl
jecxz
mov
lds
hlt
das
add
xlat
push
mov
and
dec
lods
cmp
push
iret
cmpsl
push
ret
cmp
jge
xchg
mov
pop
cmp
inc
int3
sbb
popa
jl
shlb
add
pusha
lahf
aas
sti
aas
pop
or
ss
push
adcb
insl
mov
int3
int
or
insb
mov
loopne
push
aam
or
clc
sub
dec
aad
push
imul
repnz
mov
ss
jae
xorb
mov
test
mov
and
ret
ret
cmp
lods
inc
in
bound
imul
loope
or
cltd
push
jmp
fcoml
flds
mov
rcl
dec
scas
and
add
add
or
scas
js
test
scas
add
xchg
or
out
and
imul
pop
les
cmp
dec
mov
mov
or
push
add
and
mov
and
dec
fucomp
sbb
add
imul
out
sub
add
testl
lret
dec
out
sti
mov
pop
mov
mov
mov
and
sbb
push
jae
cmpsb
jg
add
push
jbe
cmp
repz
lock
fcoml
push
sub
jo
lds
sbbl
je
fistpl
sub
sbb
in
popf
or
xchg
or
ds
lods
mov
pusha
outsl
pop
xchg
xor
xchg
cmc
js
mov
inc
add
test
sub
fwait
sti
pop
test
mov
jmp
xor
sbb
xor
int
mov
jp
sbb
fisttps
sub
ficompl
pusha
mov
call
xor
xor
mov
mov
sub
jge
jnp
sub
enter
push
dec
mov
out
popf
mov
or
dec
mov
in
fcomps
fcmovu
fwait
sub
xorl
aaa
loope
movsl
jae
fdivr
jb
lahf
test
inc
jb
xor
stos
mov
std
daa
dec
mov
sbb
adc
pop
cltd
or
inc
leave
xchg
loopne
pop
notb
shl
cwtl
cmp
ljmp
xchg
popa
cs
xchg
inc
cltd
out
add
lahf
jae
push
push
insl
sbb
scas
in
xchg
mov
xor
shll
push
sarl
cmp
mov
adc
push
bound
adc
loopne
xchg
inc
sbb
rclb
ret
push
popa
push
push
mov
jnp
jmp
sahf
xchg
movsl
arpl
out
pusha
cltd
jbe
in
loopne
or
cmc
shl
hlt
fwait
movsb
jbe
mov
std
mov
mov
mov
adc
xchg
cmp
addr16
out
icebp
jl
jg
xchg
jl
push
dec
or
cmp
outsb
push
in
jl
jecxz
pushf
inc
out
hlt
shlb
shll
es
fiadds
mov
movsl
adc
jns
pop
pop
fldt
lods
or
leave
outsb
push
es
dec
ja
imulb
std
out
inc
repnz
into
sub
mulb
std
inc
insb
pop
cltd
xchg
xor
movsl
mov
sbb
add
insl
rorl
jne
inc
hlt
pop
xor
adc
pop
mov
shl
ljmp
xor
mov
mov
imul
sahf
data16
cmp
xchg
jo
mov
jge
xorb
sub
imul
push
movsb
aam
fisttpl
dec
test
adc
jns
hlt
mov
jbe
pop
outsl
in
mov
adc
xchg
pop
int3
js
int
cltd
ss
sub
in
scas
call
and
push
out
pop
dec
jno
int
mov
cmc
pushf
ret
scas
nop
call
or
push
xchg
addr16
lds
scas
xor
aad
jno
mov
jbe
data16
mov
sti
nop
rol
lcall
sbb
or
xor
cs
xchg
sub
movsl
sti
pop
jo
mov
jle
ja
mov
xor
clc
jp
insl
xchg
or
aaa
test
mov
pop
test
adc
loop
das
and
divb
out
stc
adc
movsl
pusha
and
insb
and
mov
lcall
pop
xchg
loop
lock
xchg
mov
inc
xchg
call
sub
sbb
xor
or
pop
stc
xlat
or
or
and
stos
cld
in
or
out
out
test
mov
data16
xor
jge
dec
mov
sub
fsubrs
sub
xchg
loope
fdivl
arpl
iret
addl
xchg
outsb
fiaddl
ds
mov
stos
mov
fisttpll
lds
cmp
mov
cmp
xchg
mov
mov
ljmp
mov
adc
mov
pop
testl
pusha
and
mov
pop
lods
xchg
xchg
cltd
jp
mov
jbe
cmp
dec
mov
leave
addb
pop
push
xor
and
cmp
mov
add
mov
insb
pop
adc
pop
mov
int
ss
pop
mov
shll
test
repz
cmc
jl
dec
pop
scas
xor
scas
jmp
ds
and
stos
adc
push
roll
sar
adc
add
mov
aam
aad
shl
cmp
sub
insb
js
xchg
sbbl
mov
je
popf
out
mov
push
fs
aaa
jns
popf
xor
enter
mov
push
or
inc
mov
aam
sbb
and
testb
int
xor
sbb
sbb
add
and
outsl
shll
fdivrp
addr16
js
push
sbb
mov
dec
pop
add
fsubrl
adc
mov
xchg
mov
out
jge
and
fwait
jg
add
mov
mov
mov
mov
mov
mov
mov
mov
and
mov
imul
mov
sub
mov
add
mov
cmp
jbe
mov
mov
shrd
xor
mov
shr
jmp
xor
xor
or
fcoms
invd
add
ud1
lds
das
inc
roll
adc
scas
pushf
adc
push
enter
jns
cmc
push
lcall
cmp
daa
out
cmp
mov
cmp
pop
daa
jl
jo
shrb
out
pop
or
adc
adc
dec
mov
call
mov
xor
push
movsb
pop
cwtl
cli
scas
aam
push
xor
jno
scas
int
sub
shr
mov
movsb
dec
cmpsb
stc
pushf
fcmove
dec
adc
in
jnp
xor
out
call
push
out
ret
adc
repnz
mov
in
ret
in
pop
jg
in
pop
jmp
mov
cmp
jg
pop
cmp
lock
push
mov
cmp
inc
fisubrl
test
xor
jnp
mov
sahf
push
xor
lahf
push
sub
rorb
mov
dec
daa
pusha
fnstsw
inc
jge
mov
mov
data16
pop
or
cmp
sbb
dec
in
repz
loope
mov
push
in
into
add
pop
adc
inc
aaa
pop
insb
xor
dec
xchg
add
lds
out
std
mulb
and
pop
dec
ja
call
in
nop
loope
sbb
out
lea
inc
insl
hlt
pop
je
sbb
call
adc
jnp
rol
test
data16
les
push
ja
mov
aas
lea
pop
mov
psubusw
cli
push
lods
ret
cmp
ss
clc
mov
sub
jmp
icebp
dec
xchg
movsl
mov
shll
jmp
add
mov
les
adc
dec
mov
test
testb
addl
lahf
test
fcmovbe
xor
ret
mov
add
xor
xor
in
cwtl
dec
push
int
sti
jbe
xchg
cs
adc
es
fidivrs
cmpsb
dec
dec
dec
loop
cmp
push
and
leave
test
pop
ja
xchg
adc
or
mov
and
sub
push
arpl
push
pop
bound
int
mov
int
xchg
pop
ljmp
lret
lret
push
in
enter
push
bound
dec
xchg
jmp
adc
fs
push
int
or
add
push
lcall
pushf
cld
lcall
pop
push
fucom
inc
aad
fdivrl
andl
andb
ret
push
std
leave
sub
xchg
xorl
add
jbe
cmp
insl
in
loop
lret
xchg
sbb
subl
dec
outsb
iret
scas
divl
push
iret
add
addr16
and
fdivrl
fildll
jo
es
loopne
jmp
fsubs
ss
push
push
push
jg
mov
outsb
cltd
add
dec
inc
sbb
outsb
dec
cltd
shrb
push
adc
xor
xchg
jl
testb
leave
insb
xor
fmuls
cmpsb
cmpl
sbb
push
cltd
ret
cmp
push
repnz
cmp
lret
cmp
cs
scas
addr16
shll
sub
faddp
sub
mov
iretw
push
ret
lret
stos
test
or
out
mov
adc
xchg
xor
cmp
stc
in
inc
or
cmp
jmp
push
nop
jp
pop
rcrl
std
push
gs
xchg
dec
addb
cmp
push
pusha
imul
out
sub
or
lret
adc
fs
sub
sbb
rclb
push
pop
xchg
inc
push
add
mov
pop
test
mov
ret
dec
lret
imul
mov
mov
repnz
shrl
imul
loope
push
sbb
nop
ds
mov
test
pop
int3
loopne
push
arpl
popf
std
inc
icebp
xor
xchg
mov
pop
add
jns
ds
pop
ret
mov
fsubrs
les
sub
sbb
pusha
xor
push
jmp
or
nop
push
ret
loop
mov
faddl
cmc
mov
mov
aad
divb
lahf
add
sub
das
aam
sbb
xor
scas
lret
cmp
popf
or
inc
stc
push
call
call
xor
xchg
cld
fisubs
jae
ret
xor
jo
pusha
inc
xchg
test
sbb
add
andb
cmpsl
aad
ret
jne
inc
push
xchg
lret
inc
data16
jmp
std
and
push
push
repnz
inc
xchg
add
jns
pop
mov
fsubl
enter
or
shlb
pop
xchg
insl
push
aad
jae
and
jb
mov
rcrl
add
pop
ror
mov
pop
jp
push
fdivp
push
sbb
gs
pop
adcb
sub
mov
cld
push
cmc
mov
xchg
or
inc
jo
fnsave
sbb
scas
jne
add
lods
cli
lods
mov
int
call
mov
lcall
adc
insb
imul
xchg
pop
and
imul
cmp
mov
movsl
jg
into
inc
jp
jp
sbb
fdivrs
inc
inc
repz
dec
jl
setb
add
sahf
inc
cli
test
nop
jns
push
mov
in
cmp
push
jnp
ret
mov
xchg
add
pop
adc
xchg
dec
lahf
leave
js
mov
inc
inc
pop
rclb
jecxz
adc
and
pop
gs
ret
pop
pop
ja
and
sub
cmp
ret
inc
or
push
push
out
sahf
lods
ja
and
in
rolb
shrb
xor
movsb
mov
test
xor
cli
mov
add
inc
push
xor
mov
xchg
div
std
cmp
xchg
pop
insb
sbb
cmp
cmp
inc
adc
xchg
hlt
aam
pop
rcrl
outsl
mov
xor
shl
jmp
push
mov
cli
sbb
fnstenv
dec
mov
inc
invd
add
setne
call
in
or
xchg
mov
out
test
sub
icebp
push
cs
call
jmp
jb
or
and
sub
stos
mov
lret
jmp
pusha
ret
add
adc
into
push
mov
xor
mov
lods
pusha
repnz
call
inc
inc
mov
sbb
les
inc
aas
clc
adc
sbb
dec
cmpsl
shll
push
mov
nop
out
jge
adc
or
xchg
mov
sbb
xchg
hlt
mov
dec
dec
popf
mov
inc
and
in
mov
mov
sub
pop
sub
xor
or
movsl
in
pop
cld
mov
cmp
xor
cmp
shll
pop
and
idivl
inc
xlat
adc
mov
lods
cld
push
jne
ret
cld
movsb
and
sbb
test
lret
leave
cmp
ficompl
dec
mov
add
int
addps
jns
rol
cmp
shrb
loopne
adcl
rcrb
stc
iret
pop
add
jnp
or
push
pop
sbb
mov
test
dec
jne
jno
imul
test
rorl
sbb
mov
aad
and
data16
out
sbb
mov
repnz
and
inc
das
int
shll
push
loope
int3
or
jns
xchg
test
fstpl
adc
cwtl
es
adc
shll
xor
adc
cmpsb
mov
das
out
adc
push
cld
mov
jno
lcall
sub
sarl
mov
stos
mov
or
adc
lods
in
xchg
or
inc
jne
jle
pop
pop
aaa
adc
sbb
mov
push
pop
aas
xchg
push
ja
test
notb
sbb
or
loop
movsb
sbb
lea
test
in
fnstenv
and
pop
xor
clc
mov
sbb
stos
jle
dec
mov
outsl
sub
sbb
mov
jnp
lea
fwait
mov
add
add
or
sub
inc
jl
mov
outsb
mov
lods
xchg
lods
out
adc
pop
test
xor
push
ret
es
push
and
mov
jg
jg
cmp
mov
fadds
mov
div
jp
daa
imul
xchg
rolb
sbb
repnz
in
frstor
inc
mov
js
lock
add
mov
out
inc
int3
jno
xor
data16
push
cmp
outsb
bound
xchg
in
popa
out
add
pop
xor
inc
mov
shl
call
mov
xchg
cmpsb
arpl
inc
adc
jns
sbb
test
jno
jmp
cmp
xchg
popa
pusha
dec
push
jecxz
lcall
cli
inc
fidivrs
add
lods
jge
mov
mov
shrb
cmpsl
xor
pop
sbb
pop
lds
scas
mov
fildll
lcall
push
jle
scas
dec
push
cmpsl
add
outsb
cmp
jmp
loope
xlat
out
and
jg
daa
xchg
inc
xor
stos
pop
dec
jge
push
jo
int3
lds
add
cmp
jmp
push
sahf
sub
jl
mov
xor
gs
jmp
nop
fiaddl
or
or
fs
popl
dec
and
jmp
xchg
mov
cltd
bound
xor
sbb
push
cli
mov
sub
leave
adc
xor
ss
add
xchg
lods
mov
cs
xchg
lcall
jb
dec
cwtl
sbb
xchg
jae
enter
enter
dec
mov
imul
xchg
mov
cmpl
mov
out
out
pop
push
push
jb
add
or
sarb
imul
mov
dec
sbb
rcrl
lods
mov
mov
dec
loop
stos
les
add
mov
fsubr
sbb
mov
test
mov
popa
push
push
stos
movsb
movsl
into
iret
sub
call
je
pop
leave
mov
push
daa
jp
and
lock
clc
xor
mov
add
xchg
mov
mov
cwtl
cs
push
adc
hlt
sub
sbb
enter
ret
mov
sahf
das
sub
cmp
rclb
lods
push
cwtl
iret
jmp
jne
jp
lahf
cmp
addr16
sti
movl
mov
ljmp
repz
loopne
dec
test
jno
push
out
dec
icebp
cmp
add
inc
dec
and
cmp
add
int3
outsl
mov
mov
push
fiadds
cltd
mov
cwtl
repz
xor
int
cmp
movsb
test
dec
insl
dec
filds
je
adc
mov
out
mov
and
cmp
rcll
add
fmulp
cs
daa
jl
push
jno
repnz
jl
and
jns
into
xchg
inc
mov
dec
push
lahf
jnp
cmc
and
lret
out
int3
or
mov
loope
mov
rorb
sub
mov
add
pop
jle
cmp
icebp
fwait
pop
lret
insl
popa
psubsw
in
ljmp
jae
aam
loopne
adc
adc
jb
pushf
mov
sub
out
jno
push
in
andb
stc
lods
stc
lahf
jb
ja
jmp
orl
push
fwait
push
dec
test
out
push
jbe
imul
adcl
popl
fbld
xchg
sbb
jns
xchg
pop
loope
in
outsb
gs
arpl
cs
pop
xor
arpl
shr
adc
pop
f2xm1
mov
stos
push
dec
xchg
lea
mov
and
enter
notb
call
testb
scas
popa
add
xchg
mov
jmp
add
jmp
dec
and
and
je
stos
mov
mov
pop
leave
ret
mov
mov
ret
push
mov
sub
push
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
jmp
inc
mov
or
mov
mov
adcb
bswap
call
push
sbb
dec
pop
cwtl
and
push
and
in
fstl
add
mov
and
pop
cli
jns
pushl
stos
push
push
sub
stos
mov
stc
dec
xor
enter
popf
xlat
xchg
mov
push
cwtl
subl
mov
xchg
hlt
cmp
sbb
aaa
test
insb
stos
loop
jns
lret
mov
sbb
pusha
cltd
jo
stc
jmp
sub
push
movsb
outsb
iret
mov
push
xlat
inc
jl
mov
pop
call
adc
cmp
in
icebp
and
daa
insb
stos
aam
sub
repnz
int3
mov
pop
rol
cltd
rol
or
push
sbb
mov
add
daa
adc
repz
dec
cmpsl
fcompp
mov
pop
sub
cli
stos
aaa
ret
xor
call
jae
mov
pop
adc
mov
push
sub
mov
push
jo
icebp
out
mov
dec
push
sub
mov
jne
inc
adc
insl
cmpsb
pop
hlt
xor
push
xchg
push
std
xchg
push
jae
dec
bound
pop
jl
mov
je
mov
sbb
dec
repnz
jle
jge
sub
cli
push
sbbl
roll
fsubr
pop
popa
push
jb
lahf
xchg
jge
cmpsb
icebp
test
jle
push
mov
adc
sbb
sub
sub
mov
popa
push
mov
mov
jl,pn
jne
jo
ret
in
orl
inc
stos
jecxz
push
pop
fsubl
sub
fimuls
adc
pop
sbb
xchg
shrb
pop
sahf
push
cs
je
mov
mov
xchg
hlt
mov
and
pop
dec
nop
cld
sub
das
pop
cli
dec
jp
dec
add
pop
lahf
out
lea
aam
test
mov
jge
add
add
leave
xlat
pop
enter
mov
and
movsb
pop
xor
insl
mov
mov
enter
ljmp
add
out
lods
mov
pop
sbbb
jo
or
cmp
movsb
lds
mov
loopne
pop
jae
fabs
adc
int
sbb
loop
insl
repnz
jne
mov
xlat
adc
lret
mov
cmpsl
lods
dec
push
xchg
inc
xchg
mov
cmp
cmp
or
out
jmp
hlt
out
mov
int3
lods
dec
adc
xchg
test
loop
gs
sub
popf
shr
push
sub
cmp
stos
sahf
push
or
mov
jne
pop
imul
or
pop
sub
mov
std
mov
and
icebp
icebp
ds
ret
test
jnp
es
pop
lods
or
imul
pop
jp
and
xchg
pop
jb
pop
inc
sub
lret
lret
dec
pop
xchg
jbe
jle
push
pop
inc
fstpl
inc
das
aam
fwait
repz
jb
repz
ds
xchg
mov
nop
sub
faddp
pop
addl
inc
stc
or
clc
notl
push
inc
xor
repz
cmp
aaa
fnstenv
and
ds
pop
jle
push
shll
faddp
mov
les
shrb
aad
cmc
mov
xchg
mov
sub
dec
pop
sbb
addr16
pop
test
std
xchg
adc
ds
add
xor
mov
push
jne
sub
les
test
xlat
sbb
insl
mov
inc
es
into
je
ja
sub
push
jmp
enter
stc
push
mov
pop
in
mov
lds
jge
or
insb
jl
xor
push
cltd
movsl
jmp
xlat
in
jg
clc
push
xor
ret
sbbl
insl
cs
add
in
nop
gs
ja
loop
jmp
lret
in
out
xor
xor
jne
cmpsb
inc
out
xchg
mov
mov
fucomi
iret
dec
rcrb
push
mov
xchg
das
xchg
out
xchg
popf
lret
mov
lret
loopne
fwait
and
mov
dec
sub
ret
test
push
fs
je
xchg
scas
jmp
ss
out
inc
xchg
push
sahf
fcompl
rcr
enter
test
adc
movsb
mov
repz
in
xchg
cmpsl
jg
insl
popa
test
int
or
mov
movsl
fs
or
negb
aam
mov
bound
inc
pop
addr16
repz
fs
mov
aam
pop
test
outsl
jp
ret
add
xchg
mov
mov
inc
lcall
push
push
arpl
xor
xor
xchg
aad
xchg
add
inc
outsl
xchg
clc
les
cmp
aas
sbb
cmc
or
rorb
xchg
adcb
fisubrl
loopne
sbb
cwtl
inc
pop
ja
test
mov
addr16
adc
jo
outsb
pusha
int
sahf
lock
inc
mov
out
dec
aas
dec
ret
push
mov
fnstsw
or
jno
vpshab
push
pop
xchg
insb
mov
add
sbb
push
lcall
sub
stc
nop
jle
xchg
sbb
call
sub
jge
icebp
mov
loop
adc
push
jns
push
fwait
jne
mov
sbb
mov
dec
sbb
sub
mov
cmpb
lret
lea
or
adc
jp
daa
test
add
adc
add
fsubl
fs
scas
adc
addr16
shr
das
leave
jno
and
stc
or
mov
or
pushf
repz
xorb
ds
inc
cmp
xor
icebp
pop
pusha
and
adc
flds
push
jp
fldt
rcll
mov
add
cmp
out
cmpsb
inc
xchg
das
into
pop
inc
mov
pop
adc
and
pop
hlt
mov
mov
xor
jb
hlt
sub
rcl
mov
icebp
outsb
push
adc
neg
sbb
enter
mov
or
test
jnp
mov
mov
push
sub
std
leave
je
cmpsb
shr
inc
jp
or
sbb
out
int
and
adc
cs
mov
into
cltd
aam
out
insl
rol
and
nop
inc
stos
out
xlat
pop
push
inc
cmp
add
and
inc
xchg
cmp
xchg
pop
aas
adc
ret
mov
out
out
insl
cmp
cmp
in
movsb
or
pop
imul
lcall
inc
push
test
lret
ss
cs
cltd
sub
or
jnp
xor
mov
xchg
xchg
push
into
js
xor
and
sbb
int
in
aaa
iret
mov
stos
popf
cld
pop
mov
or
cs
jo
aad
in
std
popl
out
imul
or
add
inc
clc
and
add
inc
call
movl
movl
movl
movl
movl
movl
movl
movl
jmp
mov
ret
mov
adc
cmpsb
js
xchg
ret
sbb
mov
pinsrw
jmp
jnp
out
daa
xchg
jp
nop
movsl
inc
int3
and
jmp
loopne
add
sarl
cmp
mov
inc
mov
lods
hlt
pop
pop
mov
loope
cwtl
jp
rcrb
xchg
cld
jne
cwtl
orl
jne
add
rorl
or
and
jne
js
xchg
flds
xchg
jns
fildll
mov
pusha
leave
out
ss
addr16
xchg
dec
sub
loop
lods
jne
adc
negl
loop
push
in
push
adc
push
inc
xchg
xchg
inc
and
push
out
test
mov
push
fdivs
jge
mov
push
fs
xor
xchg
mov
cmp
mov
leave
jae
xor
enter
mov
push
out
stos
cmp
rcr
in
insb
mov
mov
pop
mov
pusha
xchg
out
std
adc
inc
lock
fidivs
subl
sbb
mov
sub
dec
mov
cmp
and
or
in
push
or
ja
lods
xorb
inc
aad
mov
push
mov
pop
gs
cmpsl
scas
roll
dec
sub
loopne
sbb
ret
xchg
mov
xchg
xchg
in
ja
xlat
sub
jnp
out
jle
xchg
xorl
out
ret
jo
inc
mov
push
and
dec
xchg
mov
test
repnz
xor
jl
inc
and
outsl
lds
mov
cs
sub
cmp
inc
cwtl
and
jg
out
lret
enter
fwait
lock
addb
adc
out
pop
ret
das
xor
cs
repnz
aas
or
arpl
xorl
cld
fcoml
add
aad
mov
or
iret
pop
pop
xchg
cmpsb
and
or
clc
and
add
pop
jo
xor
xchg
dec
rclb
ds
outsb
stc
mov
ds
popa
push
push
fstpt
push
sbb
scas
lret
pop
cmp
inc
mov
mov
adc
ds
jl
inc
jne
pusha
aad
fsubl
incb
sub
xchg
insb
mov
mov
iret
sahf
out
sti
push
mov
aaa
push
sbb
repnz
fnstenv
or
pop
inc
mov
adc
jmp
les
mov
mov
hlt
push
out
int
sub
imul
sbb
cmp
outsb
notb
mov
mov
leave
dec
sub
or
mov
pop
shlb
lods
icebp
mov
sbb
add
inc
mov
jae
and
mov
sub
jo
rcr
lods
push
fildll
int3
and
xor
cmp
hlt
xchg
aaa
insl
xor
add
jnp
xor
mov
dec
pop
arpl
push
lds
call
int
aas
sub
aaa
movb
clc
xchg
mov
icebp
sbb
and
cmp
es
add
mov
fldt
mov
enter
jbe
ljmp
inc
jg
sahf
pop
or
ror
scas
jb
jle
sub
loop
por
orl
aad
adc
test
sbb
mov
rolb
lods
dec
lret
lcall
dec
cmp
aad
dec
fidivl
and
hlt
mov
inc
xor
fnstsw
xor
and
loop
inc
stos
mov
jg
dec
push
nop
xchg
sbb
cmc
ja
jne
or
loop
push
mov
pop
scas
add
adc
mov
ss
adc
dec
inc
icebp
stc
xor
lret
mov
js
into
jno
shll
add
add
xor
and
test
mov
cmp
ret
pop
popa
pop
mov
push
iret
fcom
enter
xchg
jb
and
and
dec
adc
mov
je
btr
lcall
stos
cld
adc
mov
jae
jae
or
outsb
in
mov
pushf
or
hlt
and
in
es
fiaddl
push
arpl
jmp
aaa
clc
leave
fimuls
pop
cwtl
xor
int3
test
das
dec
stos
push
jp
sbb
xchg
push
test
adc
rcll
dec
lea
mov
popa
shl
cmc
pushf
mulb
je
andl
int
lds
adc
lock
or
in
cwtl
aad
pop
cmpsb
scas
sub
push
loopne
jne
outsb
cmp
push
jo
lahf
cmpsl
dec
cs
dec
and
rorb
js
dec
xchg
rcl
jecxz
cmp
jne
mov
mov
pushl
cwtl
shrl
push
push
je
push
test
add
test
lods
repz
dec
mov
jbe
pusha
mov
pop
mov
and
insb
mov
dec
out
cmp
into
loopne
imull
imul
xor
enter
jae
push
movsl
movsl
or
out
ret
adc
fistpl
repnz
sbb
loopne
jl
ss
shl
or
jb
ljmp
int
cltd
aad
mov
int3
lds
into
inc
rol
jp
cli
test
xchg
jo
cmp
shl
mov
jns
repz
int3
insl
andb
rorl
xor
in
cmp
imul
inc
fisttpll
mov
xchg
rorl
sti
adc
data16
andl
call
outsl
sbb
inc
dec
sub
fwait
in
cmp
js
jnp
ret
hlt
jb
xorb
fnstsw
xor
mov
cmp
or
shll
arpl
call
mov
sbb
shll
push
dec
mov
addb
cmp
nop
pop
iret
testb
nop
xchg
adc
arpl
or
cmp
mov
clc
jns
jmp
adc
mov
aas
cltd
xchg
add
hlt
sti
xchg
rclb
in
movsl
adc
dec
out
xchg
xchg
movmskps
out
cmp
movsb
xchg
adc
pop
xor
add
pop
xchg
mov
jmp
movsl
movsl
ja
cmc
je
xlat
cmpsb
ss
jnp
add
cwtl
mov
lcall
mov
movsb
mov
cmp
sbb
dec
inc
pop
adc
in
std
int
outsl
mov
add
lea
jle
ds
fmull
push
out
fistps
cmpsb
xchg
cmp
cwtl
or
jns
mov
mov
mov
mov
jnp
cmp
addr16
mov
fsubrl
inc
ror
cmp
add
inc
aam
add
add
inc
fsubs
add
int3
mov
mov
add
jmp
pop
sbb
dec
mov
or
pusha
and
mov
and
scas
mov
call
lahf
pusha
addr16
sub
xchg
dec
sbb
std
push
xor
mov
in
aas
insb
sub
divb
in
pop
mov
mov
les
sti
into
xchg
xchg
lds
mov
testb
fwait
xchg
sub
jmp
icebp
add
add
sub
insb
add
jecxz
jb
jns
sbb
dec
push
pop
push
jl
xor
adc
out
lods
adc
lods
jne
sub
pop
lea
lret
cltd
jg
add
pop
lods
sarb
push
test
enter
lds
push
jns
inc
adc
ret
inc
or
sbb
sahf
and
fidivrs
push
fsts
pop
add
pop
push
out
lret
pop
ror
out
js
sbb
movb
cwtl
or
decl
insb
test
inc
sub
fs
push
adc
fs
aam
lahf
cmove
sub
inc
notl
adc
jmp
push
xor
push
or
enter
out
pop
jl
xchg
dec
in
mov
cmp
bound
ja
call
inc
outsl
out
pop
test
es
sti
decl
das
mov
in
xchg
pop
gs
mov
fsubs
xchg
bound
and
mov
xchg
mov
pushf
pop
mov
or
mov
and
aam
scas
je
imul
ret
pop
iret
xchg
mov
add
sbbl
mov
mull
jmp
mov
ficoml
jg
add
ss
in
inc
fdivs
xchg
mov
inc
lds
je
mov
outsl
mov
shl
xchg
xlat
gs
cmpsb
push
inc
dec
xchg
ja
lea
or
add
lods
dec
dec
arpl
xchg
sbb
fidivrs
jb
sub
into
scas
pop
push
lret
sub
cmpsl
dec
push
jne
lds
jbe
xchg
popf
sti
test
lods
sub
repnz
push
inc
adc
mov
in
add
ret
cmpsl
dec
push
imul
inc
add
adc
or
adc
pop
fildl
mov
xchg
pop
inc
rcl
pop
push
jns
jge
loope
notl
outsb
dec
xchg
movsl
cmp
in
push
xor
sub
add
sub
ja
or
ds
je
jo
adc
daa
arpl
lods
notl
cwtl
adc
xor
sub
popf
arpl
inc
mov
mov
or
mov
mov
sti
stos
xor
and
ds
xor
test
xlat
ficoms
sbb
or
iret
xor
push
mov
mov
imul
filds
jns
push
mov
imul
movsb
inc
or
jnp
in
adc
ficomps
mov
test
mov
sbb
lcall
jns
xchg
dec
inc
adc
mov
in
dec
lods
adc
test
and
pushf
and
rcrl
inc
push
xor
sub
push
mull
adcb
xchg
push
cs
stos
mov
divl
push
sar
dec
imul
adc
fstps
out
jnp
repz
imul
push
mov
push
lock
cmp
push
in
jg
cmp
push
sub
je
xchg
jecxz
sbb
cltd
into
pop
fistl
mov
aad
leave
pop
aad
stos
lahf
out
dec
cmpsl
pop
mov
into
icebp
jecxz
lret
sahf
push
add
push
jnp
cmp
in
inc
push
jecxz
cmp
loopne
sbb
push
push
inc
lods
or
lcall
sub
pop
mov
dec
pop
jne
fcoml
and
call
mov
mov
leave
stos
push
adc
iret
in
jbe
sbb
ret
pop
pminsw
push
mov
fistl
fsubrs
movsb
fiadds
and
ret
xchg
sbbb
iret
imul
stos
cmp
insb
out
ss
arpl
call
inc
repz
adc
or
loopne
ds
test
push
xor
pusha
cld
jmp
imul
cld
bound
sub
adc
push
std
test
fildll
inc
les
cwtl
inc
add
fisttpl
jecxz
push
xchg
fdiv
xchg
flds
fucom
call
sub
push
dec
inc
lahf
mov
jo
clc
mov
add
es
dec
jp
cmp
xor
aad
sub
pushf
dec
in
mov
mov
out
test
push
pop
data16
out
aaa
es
ljmp
jl
mov
mov
mov
jb
pop
popf
idiv
fs
xchg
xor
decb
sub
pop
fsts
test
out
nop
xchg
cld
mov
push
add
jle
push
or
icebp
lock
pop
inc
out
ret
mov
fisubl
mov
mov
outsl
mov
inc
sub
mul
repz
aaa
rorb
mov
add
pop
jno
in
sahf
inc
ljmp
mov
pop
out
and
shrb
jae
mov
fnstenv
adc
xor
xor
add
ljmp
sub
adc
cli
out
mov
insb
popf
mov
push
lock
cltd
shll
enter
mov
aam
adc
sub
sbb
push
into
cli
sub
push
add
mov
jge
mov
rolb
push
repz
mov
les
add
fidivl
or
out
mov
pop
mov
push
add
jp
cltd
fs
loopne
sbb
popa
ja
jne
lret
in
mov
sahf
repnz
jbe
sub
jg
inc
bound
cmpsb
jg
clc
sub
pop
scas
rclb
int
push
dec
dec
add
sti
jb
inc
cmc
pcmpeqd
mov
xchg
push
cld
scas
push
pop
inc
mov
mov
dec
jg
lods
xchg
test
lods
ss
xchg
sub
repz
push
cltd
inc
pusha
in
aaa
push
xchg
notl
push
cwtl
jb
fstl
repz
fiaddl
mov
xchg
es
cmp
mov
jae
xlat
out
hlt
sbb
mov
mov
xchg
sub
dec
xchg
inc
mov
mov
lcall
idivl
ror
int
mov
jb
dec
jne
lock
dec
push
rol
pop
aad
push
mov
gs
stc
jp
pop
mov
dec
repnz
xchg
call
mov
sahf
xchg
cmp
mov
xchg
jne
ja
das
iret
adc
mov
je
out
lds
sbbb
or
in
cmp
jmp
into
add
or
jge
sahf
xchg
sbb
adc
and
adc
jae
push
mov
jne
lahf
test
adc
pop
inc
dec
sbb
mov
sbbb
mov
xchg
aaa
pop
lock
dec
in
in
pop
int
mov
jecxz
jno
fisubl
dec
xchg
xchg
cmpsl
out
pop
push
mov
pushf
adc
and
xchg
test
xchg
fldenv
sub
test
mov
push
in
or
ja
out
scas
pop
inc
stos
jl
pop
into
and
mov
aaa
daa
adc
orl
pop
clc
test
sub
mov
mov
into
push
cmp
lret
shlb
jns
lea
subl
sub
add
mov
sbb
mov
out
or
packuswb
loopne
and
loop
scas
pop
xchg
push
or
xor
lcall
aaa
fdiv
scas
ss
outsb
add
clc
adc
shll
fcomps
sub
add
adc
pop
daa
jbe
push
and
xchg
imull
xchg
outsl
add
mov
rorl
hlt
mov
clc
push
cs
mov
iret
xcrypt-cbc
cmpsl
aam
or
in
cmp
cmc
mov
arpl
movsl
clc
mov
or
loopne
mov
pop
pop
inc
rcll
mov
push
mov
jle
das
cmp
xchg
repz
pop
push
movsl
xor
mov
jne
or
dec
ret
dec
inc
les
mov
sbb
inc
into
nop
adc
out
and
dec
pop
pop
es
jbe
mov
cs
cmp
jecxz
cmp
daa
push
jbe
ds
test
mov
dec
inc
cltd
idivb
inc
xlat
sub
xchg
fcmovbe
push
mov
cmc
jbe
je
push
jge
jno
jo
xor
subb
int
mov
sbbb
and
jae
add
movsb
mov
bound
mov
pop
mov
jecxz
es
rcrl
fldcw
dec
or
ja
mov
popf
inc
test
xchg
sub
add
jae
lret
add
xlat
mov
sub
dec
xchg
cld
aas
xor
push
test
into
rcr
sahf
out
add
pushf
push
pop
inc
mov
add
push
loop
scas
arpl
outsb
popf
adc
dec
and
outsl
push
sub
jnp
imul
loopne
add
xchg
iret
mov
inc
rorb
int
cmp
pop
lods
and
insl
adc
stos
lds
and
cmp
adc
add
les
sbb
scas
xor
mov
add
notb
jo
xor
and
cltd
iret
mov
sbb
lods
aas
lret
into
fisubs
lods
ret
rolb
or
ret
and
or
jae
mov
mov
mov
dec
push
icebp
mov
push
clc
sahf
fwait
xchg
dec
enter
mov
insl
stc
stc
rcr
adc
mov
outsb
cmp
loope
push
loope
daa
fisubs
rcrb
mov
stos
mov
ds
scas
mov
and
adc
and
dec
jg,pt
mov
mov
inc
ret
push
loopne
jbe
xlat
aad
jp
std
or
gs
jne
iret
mov
aas
outsb
sarl
movsb
jp
dec
xor
flds
push
or
sbb
cwtl
les
push
fwait
call
adc
jns
loope
pop
and
cmp
aaa
sub
aad
sub
cmp
test
mul
es
xor
or
hlt
adc
sub
lret
in
ret
dec
leave
arpl
addl
fbstp
aaa
rcr
inc
fidivl
daa
or
xor
lret
mov
ljmp
cs
test
sub
push
sarl
fxam
js
inc
jge
fbld
mov
xor
push
idivl
fcmovu
push
mov
aaa
adcl
cmp
sbbl
sarb
pop
pop
inc
jecxz
push
fdivrl
xor
push
shrb
lock
xrelease
cli
and
cmp
inc
icebp
jecxz
mov
jmp
dec
leave
imul
insb
mov
or
pop
repnz
push
lock
jb
outsl
jb
fisttps
inc
inc
fcomp
mov
xor
vmovsd
call
loop
cmp
mov
mov
or
mov
adc
stc
pushf
pop
xchg
sbb
dec
int3
sub
mov
lea
ljmp
jmp
les
ret
mov
mov
cmc
movsl
or
dec
or
fs
outsb
jecxz
aaa
adc
ret
scas
mov
test
add
and
fsubrs
and
mov
cmpsb
sub
add
mov
rolb
pop
ss
aas
rorb
xor
shrb
jg
les
lds
sbbb
loop
lcall
mov
xor
mov
ret
add
shr
pop
mov
sbb
cltd
mov
sbb
push
sub
dec
insb
mov
dec
cmp
lock
jmp
outsb
mov
and
cmp
fsubrs
mov
leave
jp
adc
movsl
insb
pushf
push
inc
sub
cmp
mov
aaa
imul
ret
mov
cmp
lahf
repz
or
xchg
sbb
adc
arpl
data16
pop
test
pop
push
xchg
shrl
and
in
xchg
cmp
dec
dec
sti
shl
jecxz
jl
lea
int
aaa
jmp
pop
jg
nop
les
sub
mov
jl
sahf
jne
push
adc
outsl
push
cli
jl
sub
push
xchg
test
mov
orb
outsb
inc
mov
icebp
addr16
ljmp
mov
xchg
inc
dec
daa
loope
cmc
daa
aam
add
xchg
js
fdivrs
hlt
cmp
mov
rcll
rolb
fcoms
and
aam
shlb
ret
jb
mov
loopne
shl
dec
iret
loopne
je
xor
adc
xor
and
xchg
pop
rclb
sahf
ret
dec
repnz
cmp
jne
hlt
jge
sub
pop
mov
jmp
dec
movsb
repnz
lock
jg
sub
inc
or
lds
shll
cs
pushf
pop
fdivs
jnp
aas
push
push
xor
jo
out
push
add
and
sub
mov
sbb
mov
add
adc
or
mov
mov
mov
or
add
cltd
adc
cmp
jne
cmp
je
mov
mov
mov
mov
add
adc
or
or
add
adc
xor
xor
mov
sub
mov
sbb
mov
mov
mov
xor
cmp
jne
cmp
jmp
pop
cli
pop
sub
or
dec
pop
nop
push
scas
test
and
fistl
incb
fcmovne
aad
jno
inc
xchg
adc
and
adc
shll
sub
imull
jmp
aas
mov
push
or
or
cli
lahf
lret
in
xchg
jne
iret
xchg
not
cmp
or
fisubrl
jae
ja
adc
sub
sub
leave
jae
into
mov
clc
xchg
out
icebp
test
sub
nop
test
mov
cli
cmpsb
pop
dec
xor
push
daa
and
divb
mov
mov
inc
aas
shlb
ret
add
pop
das
fdiv
std
loope
sub
das
bound
lcall
shrb
xor
mov
subl
andb
repnz
movsl
cmp
dec
lret
dec
fnstcw
xor
mov
or
mov
dec
mov
and
mov
ret
nop
into
sbb
ret
jo
sbb
add
scas
cmp
xchg
or
mov
sub
push
lea
sahf
cmp
ds
shlb
pcmpgtw
movsb
pop
test
and
jnp
jmp
je
out
adc
dec
jae
and
mov
out
push
jecxz
mov
mov
or
daa
cmp
fscale
ja
dec
arpl
sub
cltd
pop
aad
mov
push
mov
rolb
pop
mov
insb
push
xor
adc
orl
mov
pop
lret
push
sbb
test
sahf
int3
lahf
push
jge
jnp
popa
dec
mov
lods
jge
mov
je
pushf
movsl
xchg
mov
stc
mov
mov
fists
or
push
ret
sub
into
or
ret
in
and
sbbl
popf
pop
cmpsl
stos
sbb
out
outsb
cmpsl
push
jb
addb
icebp
subl
mov
scas
push
mov
out
lds
cmc
dec
dec
jbe
icebp
ret
es
jp
mov
mov
call
cmpsb
fdivp
shrl
or
jns
mov
les
into
loopne
or
xchg
fmul
push
mov
jne
xor
shlb
in
lock
adc
add
lcall
lea
lret
das
int3
add
add
mov
xchg
pushl
or
dec
cmpsl
sbb
and
inc
or
sbb
iret
cld
xor
das
fiadds
mov
sarb
add
popa
xchg
pop
imul
cmp
pop
lcall
shrb
int3
inc
mov
fcomps
jmp
fnstcw
pop
inc
daa
pop
iret
dec
push
lods
int
pushf
lods
or
addl
mov
xchg
sbb
push
adc
je
sub
add
adc
test
xchg
jns
stc
je
std
or
lahf
pop
push
cmp
adc
enter
ds
mov
imul
aaa
jne
stos
jle
push
pop
sbb
push
cmpsb
ljmp
dec
clc
push
jp
leave
fisubrl
jne
sti
movsb
sub
jle
leave
dec
je
call
mov
filds
adc
int
jnp
mov
push
mul
lods
mov
loopne
call
sbb
movsl
sar
ret
lcall
adc
dec
sub
lods
jg
insl
cmpsb
inc
xchg
sbb
mov
pop
inc
ja
mov
iret
push
sbb
xchg
jecxz
mov
lock
out
fwait
in
mov
test
mov
push
pop
insl
int
mov
icebp
jne
vshufps
lsl
mov
out
iret
ds
xchg
dec
jp
push
mov
push
dec
int3
shlb
aaa
dec
adc
jge
faddp
daa
jg
dec
jo
mov
lcall
xchg
ljmp
rcrl
lods
lret
bound
bound
lret
sbbl
pop
or
xchg
jmp
aad
pop
add
test
ret
test
xchg
mov
imul
lods
lcall
push
ficoml
mov
rcrb
xchg
xchg
xchg
mov
out
push
imul
in
push
loop
in
arpl
movsb
and
mov
mov
shll
xchg
in
test
add
fsubrs
imul
lock
inc
dec
or
mov
push
sub
push
movsb
scas
sahf
or
out
and
insl
inc
movsb
xchg
aaa
or
sub
movl
ss
mov
mov
lea
addr16
push
xchg
jmp
arpl
xlat
add
adc
pop
idivb
imul
andb
fmul
lock
add
fsub
inc
sub
fwait
mov
jns
les
mov
mov
pop
rorl
dec
xor
sarl
mov
add
mov
lods
add
jl
je
jae
sbb
pop
les
or
jb
lea
inc
lea
xchg
test
gs
das
mov
aam
iret
cwtl
mov
stc
inc
mov
notb
sahf
cs
mov
jg
ja
cs
and
adc
ljmp
loopne
in
jp
sub
cmp
js
mov
or
jg
add
mov
or
call
or
test
mov
mov
mov
ljmp
jl
cmp
in
mov
inc
adc
lcall
lret
shll
adc
dec
out
mov
aaa
xchg
les
jbe
push
pushf
push
jb
sub
dec
fidivrl
in
cmpsb
inc
fcomps
scas
lahf
push
dec
js
pusha
cmpl
push
sub
fucomip
gs
jle
jmp
mov
jl
mov
insl
in
fcomip
pop
or
cmpsb
loop
mov
loope
icebp
mov
fiaddl
sti
add
outsb
and
test
fwait
movsb
mov
pop
fs
push
jmp
out
ja
inc
add
mov
outsb
adc
fimull
sub
sub
jne
cs
adc
sub
jo
xor
rcrb
cmp
inc
lods
sahf
mov
test
cmp
bound
xchg
jl
fiaddl
cli
int3
aas
loopne
testb
test
xchg
lock
lcall
mov
push
jne
mov
iret
adc
and
bound
repz
mov
bound
xchg
sbb
outsb
mov
add
lods
addr16
sarb
ret
fwait
xchg
mov
or
in
pop
pop
scas
jnp
add
pop
jne
mov
add
imul
xor
mov
div
jmp
lret
pop
cmp
adc
mov
ficoms
mov
mov
repz
adc
add
xor
pop
cmp
ja
sbb
mov
cmc
jp
sub
fiadds
mov
in
out
inc
js
xchg
fdivl
bound
mov
fwait
test
cli
pop
or
push
iret
in
xor
add
fstps
xorb
cmp
sub
add
mov
fnstsw
push
or
cmpsl
inc
imul
mov
jno
sti
sbb
mov
stc
push
stos
mov
push
lahf
dec
cmp
js
arpl
and
out
shl
sbb
xchg
fchs
mov
mov
fmul
cmp
mov
mov
jmp
in
lods
lea
mov
mov
sub
repz
es
insl
lret
orb
sbbb
xor
jb
inc
fsubl
push
xor
ret
pop
mov
mov
sbb
mov
or
test
aas
ds
repnz
daa
dec
sbb
sub
xchg
lods
push
lret
mov
jp
dec
jnp
pop
jl
push
loope
lret
jg,pn
fisttpl
scas
fbstp
push
sahf
add
pop
ss
jl
insb
daa
add
mov
js
xchg
call
adc
movsb
mov
jne
dec
out
mov
scas
inc
scas
cmp
sub
inc
loope
pushf
dec
scas
cwtl
test
cmp
inc
mov
movsl
xchg
jbe
notb
jnp
dec
sbb
repnz
mov
xor
mov
cld
mov
cmpsb
jle
xorb
or
loope
sub
mov
loope
push
rolb
clc
pop
in
pop
mov
in
test
add
push
push
push
inc
fwait
addr16
leave
test
ror
sbb
test
ds
pop
cmpsl
stc
arpl
sbb
push
mov
add
mov
movsb
mov
pop
mov
lods
gs
pop
sbbb
sub
mov
inc
xlat
les
daa
loop
cwtl
mov
xchg
sbb
fs
dec
push
mov
xchg
jmp
notb
push
pxor
movsb
mov
cmp
and
cmp
adc
jecxz
sub
out
ret
outsl
enter
jmp
js
insl
xor
mov
push
int
aam
push
adc
and
fdivl
push
cltd
sub
cmp
cli
out
movsl
shll
adc
adc
cmp
push
sbb
or
inc
pop
stc
mov
cmpl
inc
in
dec
inc
dec
xchg
push
xchg
cmpl
int3
in
pop
cmpsb
jge
and
stc
repz
test
or
mov
cmp
sub
jp
ds
stos
mov
lret
mov
xor
fiadds
cltd
insl
lret
aam
inc
mov
imul
mov
sbb
pusha
movsl
sahf
fs
inc
lcall
test
mov
jo
rcrb
mov
sbb
xlat
in
push
sahf
cld
mov
mov
jbe
jmp
pushf
mov
pop
pop
push
ljmp
lock
pop
pop
or
ficompl
sub
data16
mov
jle
push
xorb
bound
jne
lret
mov
test
jns
and
jb
test
add
mov
xor
pop
sbb
mov
fdivl
mov
jns
xor
xor
shll
in
push
js
push
push
int3
jne
add
xchg
pop
mov
lret
fisubs
stos
frstor
push
cmp
adc
jge
xor
xlat
in
and
adc
fcoml
or
test
pop
sub
mov
push
shrb
adc
out
dec
mov
push
xchg
mov
xor
sbb
imul
sarl
xorb
xchg
shrb
and
call
push
pop
fmul
test
jge
jp
rcr
mov
test
push
mov
jae
cwtl
int
xchg
fisttpl
add
mov
push
add
adc
loopne
mov
negl
shr
in
jmp
push
les
cmp
add
push
hlt
gs
fdivl
push
add
out
test
leave
rol
repz
jns
js
xchg
adc
js
or
jno
xor
push
cmpl
in
inc
adc
mov
and
cmc
aaa
out
pop
push
xlat
sub
jne
clc
movsl
and
sbb
cmpb
adc
pop
test
lret
add
loopne
mov
fsubrp
into
and
mov
push
lock
nop
jmp
repnz
cwtl
fucomi
movsl
and
lahf
adc
jb
push
cli
adc
mov
jo
lds
sbb
jg
push
mov
fs
scas
mov
ror
add
jno
enter
cwtl
and
xor
jecxz
xchg
and
adc
pop
jp
and
rclb
inc
inc
rcrb
jmp
push
jl
adc
jmp
cwtl
icebp
fstl
repz
repnz
das
fnsave
ljmp
jne,pt
ss
jmp
repz
mov
pop
mov
stos
testl
sbb
aaa
std
inc
lcall
in
xor
ret
sbb
jg
je
jg
adc
pushf
pop
or
cmp
fisubs
iretw
pushf
push
sbb
popw
imul
pop
push
cmp
out
push
push
imul
add
cmp
inc
mov
movsb
cmp
shrl
pop
iret
xor
mov
jns
or
dec
lret
addr16
inc
popa
hlt
lock
push
dec
arpl
gs
push
pop
inc
mov
pop
out
ret
inc
fiadds
mov
or
sahf
cmp
mov
cltd
xchg
mov
xchg
sahf
jnp
imul
fsubrl
or
pop
mov
enter
sub
jp
xchg
imul
je
xchg
loop
inc
nop
lcall
cld
sub
dec
push
movsl
xchg
jl
mov
jo
iret
pop
mov
ja
pop
popa
stos
test
cmpsl
sub
std
adc
stc
popf
int
loopne
cld
jmp
inc
jnp
movsl
xor
nop
xchg
and
cmc
jmp
mov
lods
xor
xor
push
cs
dec
xor
jmp
jmp
sbb
fdivl
mov
sti
pop
push
jge
lahf
es
dec
lahf
ficompl
mov
icebp
andl
fnsave
fsubs
add
notl
ror
pop
pop
sbb
jne
xor
jae
mov
into
fcomp
dec
in
add
pop
int
inc
push
or
sub
mov
jmp
cmc
xchg
cmp
push
mov
adc
mov
adc
and
aas
jns
push
sub
cmpsb
fs
int3
call
cmp
jo
pop
mov
push
addr16
ljmp
daa
pop
jg
or
ret
es
gs
rcrb
outsl
jno
mov
insb
cmp
repnz
and
cmpsl
subl
jmp
fldl
adc
mov
cmp
sahf
jge
repz
xchg
jecxz
or
imul
stos
cmpsb
mov
js
and
push
ret
test
cmp
add
addr16
fbstp
test
js
in
rcrb
out
fsubrl
call
xchg
or
faddl
ret
gs
mov
dec
fmul
daa
or
icebp
cltd
cmpsl
enter
push
jl
std
sub
outsb
pop
mov
dec
and
sbb
lret
ss
xchg
aaa
lret
repnz
xchg
pop
dec
rcrb
cmp
mov
inc
bound
adc
shll
pushf
popa
pop
cmc
iret
stc
aaa
cwtl
outsl
or
mov
jae
lods
lret
fmulp
ret
dec
mov
movsb
lds
sbb
dec
ret
cld
test
jle
add
xchg
jns
jge
shr
mov
mov
push
pop
and
test
or
push
and
cmp
add
scas
inc
lds
push
neg
adc
pusha
push
inc
fmull
cli
addr16
ss
fcmovb
or
cwtl
repz
pop
xchg
sub
sbb
outsl
bound
pop
dec
lods
fldenv
pop
fdivl
loope
stos
xor
ror
adc
mov
cmp
jg
inc
push
insb
ljmp
push
lea
push
xor
add
add
inc
add
cmc
call
cmp
outsl
into
cltd
jge
filds
push
sahf
movsb
add
rolb
loopne
addb
test
hlt
sarb
addr16
or
js
outsb
out
jns
clc
in
sbb
movsl
xchg
bound
and
jb
sbbl
out
mov
and
or
int
cmp
adc
pop
adc
rcl
sub
push
jns
xchg
jmp
loop
sarb
push
fsubp
xor
mov
fistpl
xchg
bound
cs
lock
fcom
ja
outsl
out
adc
subl
lret
mov
in
add
imull
cs
cmpsb
je
xchg
adc
adcb
inc
adc
mov
lret
push
xor
inc
aam
lret
jmp
mov
pop
lahf
jge
adc
push
mov
jno
pop
ret
addr16
bswap
push
adc
dec
or
inc
mov
xchg
or
push
call
das
jmp
sti
or
pop
pop
mov
sub
clc
sbb
push
adc
jno
dec
pop
jg
imul
mov
xchg
mov
enter
sub
loope
cmp
xor
adc
shlb
mov
push
gs
jae
in
cmp
mov
ja
cmp
out
iret
scas
sbb
adc
add
mov
pop
pop
inc
xchg
push
fwait
xlat
ja
sub
fsubs
or
xor
std
cmpsl
shrb
loope
sbb
mov
cli
sahf
add
pop
mov
mov
popf
loop
aaa
rorb
add
xchg
add
sbb
push
or
sub
mov
mov
stos
cmp
mov
stc
lods
outsl
fwait
pop
jmp
xor
push
add
xor
imul
pop
and
lcall
push
ds
jne
lret
cs
adc
mov
stos
sbb
js
jno
pop
add
sahf
leave
sar
cld
push
push
imul
inc
mov
outsb
jns
jno
jns
jge
js
dec
repnz
divb
mov
loope
andl
pop
jl
ret
cmp
or
adc
ficomps
imul
pop
ret
cmp
pop
pop
xchg
or
mov
daa
cld
dec
push
sub
cmp
adc
cs
or
mov
enter
push
mov
sar
movsb
roll
aam
pushf
sbb
fists
lahf
dec
push
aaa
xor
push
mov
adc
in
std
cmp
dec
mov
jo
mov
incb
sbb
out
icebp
mov
mov
mov
movsb
mov
lds
adcb
cmp
sub
cltd
add
cmc
fsubr
ret
adc
inc
mov
sbb
add
cmp
rolb
sub
mov
add
mov
out
test
pop
add
dec
cmp
and
xchg
pop
jae
addr16
add
xor
xchg
nop
mov
addr16
or
popf
addr16
ficomps
outsb
jo
mov
popf
aaa
out
aad
out
iret
ficomps
scas
and
jmp
mov
xor
xchg
sbb
fnsetpm(287
movsb
jns
mov
push
inc
fabs
mov
pop
aas
mov
push
pop
jecxz
push
rcrb
mov
mov
push
sahf
or
ds
pop
jo
sub
outsb
jmp
push
arpl
iret
pop
mov
push
and
push
dec
mov
and
in
sahf
test
sub
add
cmc
push
pop
sub
add
sahf
fs
sbb
mov
test
idivb
mov
and
jae
bound
shr
dec
int3
leave
sbb
leave
cmp
lret
adcb
xor
test
subb
mov
test
sub
push
mov
cltd
mov
sbb
inc
push
pop
cld
test
cmp
lret
int
sub
cld
inc
out
movsl
es
fdivp
jne
scas
pop
xchg
ja
mov
dec
add
mov
movsl
xor
int
loopne
xor
and
xchg
mov
jl
push
push
in
and
dec
lds
xor
jle
movsb
mov
shll
pusha
jo
mov
and
xchg
sbb
and
leave
jb
fcompl
out
hlt
or
push
in
nop
out
dec
xorb
push
rorb
lcall
test
add
and
dec
ljmp
ret
repz
int
insl
iret
rorb
lds
mov
imul
test
dec
shll
out
imul
xchg
imul
push
lcall
clc
dec
pop
sarl
ja
xorb
sbb
mov
xor
sbb
pop
push
and
scas
das
movsl
pop
in
and
in
int3
ds
call
pop
daa
sub
rolb
addr16
fisubs
sub
mov
test
xor
push
push
xor
add
xor
mov
mov
sub
mov
and
div
mov
mov
and
sub
imul
add
jmp
scas
fldl
movsl
jl
stc
mov
les
and
hlt
loopne
cs
lods
push
insl
imul
and
and
rorl
add
das
jno
out
cmp
ret
lahf
ss
out
cmovbe
adc
jae
mov
xor
ljmp
push
sub
stos
jmp
out
mov
inc
xor
and
cmp
xchg
popa
pop
shll
dec
test
out
dec
mov
pusha
stc
push
pop
xorb
sahf
pushf
pusha
int
mov
out
sbb
nop
inc
inc
pop
push
mov
gs
out
in
cmpsb
movnti
popf
fimull
xchg
pop
push
jae
jnp
movsb
insl
or
adc
and
push
out
push
fsubr
push
mov
mov
adc
cmpsl
adc
pop
mov
mov
into
sub
inc
jecxz
testb
cmp
xchg
inc
hlt
les
push
jecxz
sahf
mov
cmp
or
or
pop
jnp
cmp
pop
stos
mov
and
outsb
push
xchg
jle
mov
loop
nop
inc
cmc
mov
push
shl
rclb
test
hlt
test
pop
sbb
scas
iret
add
filds
rcrb
scas
xchg
xor
and
sbb
mov
loope
jo
pop
cli
int
mov
imul
insb
shl
cmp
es
pop
pop
stc
cli
bound
sahf
xchg
sbb
addr16
inc
push
insb
dec
imul
leave
pushf
xchg
and
stos
dec
xchg
outsb
add
popf
push
push
jnp
iret
mov
inc
jno
jo
pop
sub
cs
lea
jge
push
fcompl
mov
insb
cmpsb
neg
fmuls
mov
insl
fiaddl
pushf
mov
jg
fdivrs
xchg
adc
dec
push
cltd
xor
jge
into
pushf
ljmp
push
cmp
dec
aas
loope
ss
and
lahf
mov
nop
repnz
pop
push
shlb
lods
add
fwait
pushf
mov
sub
aaa
mov
add
aam
add
lds
out
xchg
shrb
cwtl
sbb
aad
xor
rclb
xchg
sbb
xor
mov
ljmp
scas
or
out
and
adc
into
push
mov
rcll
rclb
and
dec
pop
xor
fsub
cltd
fcompl
jg
addb
mov
sub
and
add
pusha
cmp
pop
pop
and
imul
and
sbb
mov
jns
loope
and
cli
mov
mov
sbb
pop
lahf
nop
clc
in
pop
inc
jno
xchg
stos
cmp
dec
cwtl
fstpt
xor
mul
lock
pop
fisubl
pop
fcompl
cmc
sub
mov
aas
adc
and
cmp
lea
aam
ljmp
cs
pushf
mov
jmp
sub
lret
das
mov
inc
repz
adc
cmp
jns
arpl
repnz
dec
dec
pop
pop
popf
insb
xchg
movsl
fists
sub
mov
inc
xor
test
imul
fs
pop
push
sbb
dec
pop
mov
mov
jmp
lret
ss
and
ss
test
sbb
sbb
cmp
sub
aas
mov
int3
out
pop
inc
les
call
inc
cmp
push
pusha
push
lret
push
mov
push
adc
les
jnp
fmulp
inc
push
sbb
bound
jl
into
mov
fbstp
sub
push
enter
sti
ret
je
add
lea
jmp
je
mov
test
mov
or
clc
repnz
pushf
cmp
mov
sub
jle
hlt
adc
cmp
and
mov
adc
adc
adc
pop
cltd
test
iret
aad
gs
mov
daa
scas
or
cmp
adc
pushf
ret
push
pop
mov
sbb
cs
js
add
xchg
insl
xor
lds
fistl
mov
and
stos
dec
sub
pop
inc
xorb
lcall
enter
sti
ds
lcall
es
into
sub
xor
dec
jge
outsb
xchg
lock
mov
jns
and
iret
fmull
xor
movl
dec
cmpsl
push
enter
xchg
sbb
rcrl
ds
fidivrl
aas
lahf
cmp
or
ss
scas
imul
ja
push
push
or
lods
dec
dec
xchg
and
hlt
adc
in
push
cwtd
and
cmp
shl
nop
bound
push
sahf
mov
pop
cmpsb
addr16
imul
adc
mov
outsl
std
and
pop
xchg
mov
aad
ret
mov
adc
adc
push
xorl
dec
lds
mov
push
pushf
cmp
shrb
repnz
or
popf
mov
fs
dec
mov
mov
movsl
pusha
jecxz
pop
fmuls
pusha
xchg
mov
lahf
or
cmp
cli
cmpsb
stos
call
push
jle
xchg
jge
std
xchg
mov
ret
adc
leave
fists
int3
out
les
pop
push
ss
sahf
push
or
js
lret
rorl
xchg
test
in
shlb
ret
pop
add
push
cmpsl
push
sbb
add
sub
push
and
imul
in
das
add
adc
cmp
into
cmp
pop
in
cs
mov
bound
push
push
out
mov
mov
xor
pop
loope
fimull
testb
cmp
mov
cs
mov
cli
scas
pop
scas
xor
pop
mov
std
fisubrs
rcr
aaa
cmc
sub
jecxz
popa
loopne
sub
and
loope
popf
xchg
mov
mov
repz
pop
jmp
pop
repnz
push
xor
movsl
outsb
test
stc
clc
adc
or
imul
sbb
jg
rorb
loope
push
jp
inc
pop
inc
repz
or
and
fs
addl
cmpsl
daa
xor
dec
push
shrb
push
and
shlb
cwtl
scas
stc
lock
stos
in
jecxz
mov
xchg
stos
xchg
das
lods
jecxz
xchg
sbb
inc
out
scas
rol
xor
in
mov
xchg
into
in
sbb
aam
cmpsb
aad
push
loope
cli
push
cmp
add
push
mov
loopne
stos
popf
push
stos
pop
lcall
ficoml
push
int
adc
outsl
aas
xor
leave
rcrb
in
adc
popf
sub
adc
mov
int
icebp
sbb
jge
enter
aas
dec
xor
and
jmp
jne
add
subl
xchg
jle
out
addr16
and
hlt
outsl
mov
jmp
jecxz
mov
sbb
lods
sahf
movsl
xchg
shll
mov
push
pop
dec
xor
rcrl
cltd
mulb
aam
push
lret
sarl
das
fucomi
cltd
mov
pop
cmp
mov
push
mov
jnp
pop
into
pop
mov
sub
insl
iret
or
in
push
push
jmp
push
ficoml
rcll
mov
es
xchg
test
jecxz
dec
arpl
ljmp
pop
dec
mov
shlb
movb
outsb
add
repz
sub
hlt
out
pop
out
pop
mov
les
mov
jbe
mov
inc
shrl
push
sbb
mov
push
insb
cmpsl
arpl
stc
das
sti
add
les
mov
add
xchg
mov
cmp
xor
or
cltd
flds
fildll
pop
icebp
outsl
xchg
insl
or
jne
js
or
je
xchg
std
pop
mov
jecxz
or
jge
mov
scas
pop
mov
push
call
push
add
icebp
cmpsl
out
call
mov
pop
sbb
push
sub
mov
adc
in
or
sahf
jae
jnp
pop
into
push
mov
loop
cmpsl
jne
pop
out
add
fwait
push
aas
aas
test
inc
subl
das
cwtl
addb
xchg
cmp
leave
in
pop
ret
mov
mov
notl
adc
dec
xor
push
nop
cli
xor
mov
mov
pslld
or
leave
ja
call
mov
mov
lock
xchg
lods
nop
test
notb
inc
insw
xorb
nop
jge
xchg
loopne
fdiv
mov
push
es
jge
and
jae
shrb
aam
jb
add
xor
cmpsl
jl
jmp
add
adc
or
lds
xchg
inc
das
adc
xchg
out
dec
sbb
xchg
jecxz
inc
call
push
daa
dec
push
dec
jecxz
jb
leave
mov
fimuls
popl
mov
add
add
jle
pop
adc
gs
fcomp
jo
and
sarb
and
fstl
dec
loopne
jle
das
sbb
cltd
loope
ret
xchg
das
les
jecxz
or
fwait
jbe
out
inc
out
mov
les
pop
cwtl
cs
leave
inc
arpl
fisubs
enter
sub
mov
sbb
push
push
sbb
loope
in
lods
or
xchg
int3
mov
cmp
pop
inc
xchg
js
or
xor
jae
add
daa
inc
push
rcl
stos
mov
icebp
mov
xchg
stos
fmuls
jae
je
aaa
sub
iret
mov
xor
sub
icebp
data16
or
cs
mov
pop
nop
sbb
fscale
push
out
jmp
pusha
lahf
sub
lods
out
inc
mov
dec
lods
in
sub
sub
mov
iret
xlat
push
jl
xchg
enter
pop
sub
jnp
rolb
loop
lds
repz
mov
xchg
sub
add
dec
add
pop
xchg
pop
mov
xor
sub
pop
push
or
loopne
ret
in
lds
pop
mov
cmp
jo
lods
adc
dec
pushf
fdivl
adc
lods
xchg
shlb
frstor
push
mov
loopne
jmp
popf
xlat
nop
cmp
test
xchg
xor
push
shlb
xor
lea
rcll
mov
jne
cltd
hlt
pop
call
pop
imul
xor
dec
push
dec
xchg
fistpl
cmpsl
inc
arpl
jle
mov
pop
imul
std
out
mov
push
xchg
dec
fldenv
addb
fbld
es
std
cmp
int3
js
daa
push
jge
nop
push
pop
int
mov
scas
mov
out
cmpsl
mov
fsubrs
mov
and
lods
mov
xchg
loope
scas
je
ja
xchg
and
xor
shll
sub
adc
orl
and
mov
lock
adc
in
jo
inc
adc
adc
mov
mov
cli
mov
and
add
cmp
xchg
fists
push
mov
sub
jecxz
aaa
aam
push
mov
sbb
add
loop
ficoml
mov
mov
sahf
faddl
out
add
in
add
mov
push
sub
movsb
push
add
bnd
push
aad
xor
sub
mov
stc
lret
test
ret
sti
mov
ret
pop
xchg
xchg
repz
pop
flds
adc
shll
jmp
pop
mov
jg
shll
int3
lcall
je
mov
into
and
in
sub
mov
sbb
out
mov
inc
pop
mov
addr16
mov
xchg
loope
mov
mov
bound
popa
cmpsb
cmp
inc
jmp
inc
jecxz
mov
out
scas
aam
or
dec
stos
and
rorb
jmp
rorl
xchg
mov
mov
in
xor
repz
sbb
out
aad
mov
dec
cmp
ja
mov
adc
fcmovnu
push
jo
jle
jge
push
mov
push
fcoms
sub
xor
mov
mov
icebp
mov
push
shr
iret
dec
push
sbb
fstpt
cs
nop
sub
in
cs
mov
push
push
sub
std
in
ret
xchg
and
add
and
fcomip
out
fsubr
fidivs
stos
fcomip
pop
mov
imul
popf
scas
fnstsw
xchg
movsb
and
cmpsb
jle
lods
push
fs
inc
mov
cmp
fsubrl
sahf
aaa
pop
xchg
pop
test
dec
stos
cmp
xchg
aaa
xchg
cmc
push
push
dec
xchg
fsubr
cmp
sar
sub
dec
negl
inc
push
mov
jg
ss
xchg
add
std
aaa
or
ljmp
cmpsb
cli
or
in
nop
pop
push
scas
imul
loopew
test
xor
inc
xchg
bound
mov
dec
pop
xrelease
arpl
cmp
int3
daa
les
mov
cmp
out
lret
or
xchg
pop
scas
aas
push
push
fs
outsl
dec
pop
sub
adc
movsb
mov
rclb
mov
add
mov
orl
pop
dec
add
pop
mov
out
adc
xor
lods
addr16
enter
xor
aaa
es
fwait
mov
add
mov
add
jmp
nop
shrb
sub
addr16
sub
dec
lds
mov
ss
call
pop
roll
push
loopne
fidivrl
inc
add
cli
or
repz
xchg
pop
push
lods
aas
stc
xor
fildll
add
fsubrl
fidivrl
es
cmp
dec
loop
jg
pop
mov
mov
dec
jmp
aam
repz
inc
inc
xchg
daa
inc
sub
lret
mov
lods
mull
add
inc
sub
ret
out
push
mov
test
dec
popf
push
mov
adc
lahf
cmpsb
scas
out
ret
inc
pusha
dec
xchg
pop
fistpll
cmc
sbb
cmc
pop
stc
mov
ret
psrad
jle
jmp
cmp
push
xlat
fldt
xchg
imul
mov
dec
imul
sbb
inc
mov
add
idivl
cmp
test
mov
pusha
push
pushf
pop
scas
lret
movsl
test
mov
sub
jl
cld
and
inc
repz
in
xor
ret
rorl
cmp
jo
es
fsubp
and
sahf
pop
push
gs
ljmp
inc
push
lock
xlat
mov
test
fs
insb
int
jge
sbb
mov
mov
or
mov
cmp
lret
xchg
mov
js
dec
fidivrl
outsb
and
test
jno
arpl
adc
and
mov
stos
test
std
ljmp
inc
imulb
shll
pop
dec
sbb
les
sub
das
aaa
dec
pop
pop
imul
imull
addl
inc
pushl
jb
mov
fstpl
ficompl
fcmovne
imul
inc
mov
sbb
lock
lods
into
aaa
mov
push
mov
fsubl
cwtl
or
push
dec
repz
pop
push
push
inc
rclb
sub
cmp
scas
hlt
lods
test
in
cmp
dec
adc
xchg
jne
daa
ret
cmp
mov
loopne
dec
lret
jmp
imul
pop
pop
clc
add
rorl
cld
cmp
inc
xchg
sub
pop
arpl
mov
adcl
scas
add
mov
sti
arpl
loope
push
jle
mov
test
sti
jbe
dec
xchg
mov
add
ds
add
add
cmp
adc
xlat
or
push
bnd
nop
jae
repz
out
int3
les
mov
popf
sbb
jae
mov
add
lods
sbb
mov
sbbl
dec
imul
pusha
mov
sub
sbb
hlt
xchg
int3
mov
ss
out
in
pop
cmpsl
xchg
or
or
mov
cld
and
jp
add
push
in
mov
lahf
arpl
call
dec
pusha
add
jl
imul
sbb
iret
ret
jmp
or
pop
shrb
mov
decb
das
sbb
jbe
inc
lods
sbb
mov
push
mov
add
add
dec
icebp
push
and
pop
xchg
lret
and
hlt
mul
pop
pop
sar
repz
add
pop
mov
pusha
bound
je
cmp
popa
and
mov
addr16
mov
jmp
scas
cmp
movsl
dec
push
aam
mov
outsb
or
js
sub
dec
clc
scas
dec
cli
adc
add
ljmp
cmpsl
xor
adcl
adc
insb
push
hlt
sqrtps
idivb
and
xchg
cmp
sbb
mov
mov
fs
and
lret
sar
jg
mov
in
sbb
lds
sbb
int
dec
bound
divb
jo
add
js
aas
testl
aad
push
arpl
xchg
sti
dec
fdivrs
fisttpl
or
js
out
aas
ss
cmp
outsb
imull
leave
jb,pn
shr
das
lahf
shll
and
pop
xor
mov
shlb
lea
fldcw
int3
insb
out
lods
mov
loope
hlt
into
and
cmpsb
fadd
movb
cld
mov
mov
push
xor
jg
inc
lret
adc
hlt
push
push
cmp
sahf
adc
sbb
loop
or
ljmp
das
push
aaa
xlat
ret
imul
xor
push
adc
add
mov
cli
push
in
xchg
jmp
xor
dec
insl
enter
data16
adc
scas
hlt
in
outsb
add
js
call
icebp
fadd
mov
lret
pop
pop
jo
fs
rcrb
push
and
or
arpl
in
inc
rcl
imul
rol
aad
dec
jmp
outsl
mov
je
leave
push
into
dec
pop
test
pusha
jge
push
mov
insb
xchg
in
jne
in
cmp
sub
hlt
clc
sahf
and
rorl
ret
out
fs
xor
in
test
sarl
mov
xor
jp
cltd
shl
sahf
adc
into
xchg
shl
mov
cwtl
std
pop
mov
lock
pop
and
inc
cwtl
cmp
cmp
test
xlat
nop
jecxz
fdivs
add
test
cmp
jno
dec
cmpsl
jmp
push
fbld
add
sub
test
ss
adc
mov
data16
jl
or
push
sbb
fcmovnb
mov
inc
loopne
in
stos
push
jo
aaa
jns
or
jns
mov
pop
inc
in
sbb
mov
jg
mov
bound
push
scas
pop
add
cmp
mov
push
popf
adc
iret
shrl
shll
lds
dec
jl
lcall
mov
cmp
stos
insl
mov
popf
lods
cs
cmc
mov
jge
and
loop
addr16
mov
decb
ficoml
mov
shll
imul
testl
jae
pop
jnp
mov
int3
xchg
or
jge
pushf
cwtl
sub
ret
inc
daa
fistl
inc
xchg
and
aad
fmull
jnp
push
movsl
enter
lcall
leave
int3
mov
in
sbbl
into
aam
cmp
lea
ror
sarb
inc
push
sub
add
push
js
outsb
inc
fwait
mov
pop
jno
mov
into
clc
pusha
mov
ja
sub
int
mov
add
lcall
xor
inc
and
js
cmpsb
push
dec
jmp
insl
push
fildl
int3
pushf
dec
stc
data16
pusha
cmpsl
push
inc
xlat
data16
lret
push
fstps
orb
and
int
loop
pop
xchg
xchg
test
dec
or
inc
mov
lods
orb
dec
aad
pop
pop
dec
dec
jnp
push
fdivl
ret
push
add
xor
add
mov
add
mov
mov
mov
mov
xor
xor
add
adc
jmp
push
gs
pop
out
dec
push
push
add
mov
inc
mov
add
pushf
ret
lock
xor
shlb
mov
int3
ds
shll
shll
or
pop
test
adc
jp
fs
cld
flds
movsb
sub
add
test
lds
or
jno
inc
mov
loope
fcomp
and
adc
jl
lock
mov
frstor
cwtl
scas
dec
dec
sub
jo
inc
jns
cmp
xchg
or
test
push
lods
push
mov
jbe
rcrb
jns
mul
cld
pop
bound
pop
adc
repz
in
dec
mov
lds
bound
out
aam
ds
mov
mov
jbe
cmp
mov
jge
hlt
movsb
lcall
pop
lds
pop
push
sbb
mov
int3
mov
pop
ljmp
or
stos
test
rorb
fmull
stos
or
mov
lods
pushf
push
stos
das
das
inc
inc
ret
mov
jge
mov
mov
iret
xlat
cmp
imul
mov
adc
dec
mov
nop
test
outsl
cmpsl
inc
iret
and
ljmp
fs
insl
sub
dec
inc
icebp
sub
std
dec
stc
aam
jmp
dec
push
or
cmp
popa
mov
mov
mov
outsb
iret
jno
nop
aaa
out
jo
push
push
pop
ret
mov
test
call
mov
cmpsl
cli
mov
push
dec
or
iret
add
add
mov
sets
outsl
fcompl
arpl
data16
mov
pop
testb
mov
je
lea
and
push
dec
gs
gs
or
mov
pop
in
pop
test
cmp
fsqrt
sti
stos
stos
sbb
xchg
dec
clc
or
sahf
addb
cmp
sbb
sbb
xchg
ret
ljmp
pop
jp
jnp
jg
pop
push
daa
pop
pop
aam
ficompl
maxps
scas
mov
inc
xor
jb
cmc
pusha
mov
lods
sti
not
dec
int3
pop
fistps
inc
or
cltd
icebp
in
or
or
into
mov
xchg
fwait
sub
push
jmp
sbb
insb
mov
sub
fdivrl
ljmp
inc
in
adc
rol
mov
sbb
fimuls
sbb
scas
in
enter
add
loop
call
jb
xor
pop
pop
add
xor
inc
addr16
sub
mov
fsts
mov
cmc
and
sbb
xchg
nop
ficoml
or
scas
fs
xor
sub
out
jmp
push
pop
ret
jl
xor
jmp
ss
das
xor
data16
mov
stc
mov
movsb
add
cmpsl
aad
arpl
movsb
add
or
add
aam
jmp
test
gs
popf
cmpsb
int
fwait
dec
into
and
add
bound
adc
stos
data16
cmp
jae
jo
insl
arpl
fldt
mov
mull
repz
jge
int
push
out
popf
mov
mov
xor
sbb
sbb
fildll
xchg
fbstp
add
lods
adc
ret
ljmp
mov
sub
adc
repz
or
repnz
jecxz
subb
ja
mov
aam
xchg
loope
ss
push
lret
or
or
mov
sbb
jg
adc
jae
cmpsl
sti
stos
sbb
and
cmp
push
jp
inc
call
add
add
pop
int3
rorb
dec
push
int
push
sub
rcrb
pop
pop
dec
xchg
jge
in
movl
xchg
pop
mov
sub
xchg
cmp
adc
cmp
cli
lds
cli
add
cmp
cmp
mov
into
hlt
sub
mov
mov
aaa
testb
daa
out
jae
into
in
sbb
cwtl
and
imul
test
lock
repnz
jmp
scas
cmp
fidivs
lret
jp
add
aas
sub
inc
das
inc
push
imul
or
rcl
lahf
push
test
dec
inc
mov
mov
cmc
and
xchg
xchg
testl
adc
fdivrs
pop
js
adc
mov
sub
mov
or
add
cmc
insb
cmp
mov
jae
pop
sbb
xor
int
insb
sub
sub
inc
push
nop
lret
pop
loop
mov
out
cmp
nop
jl
xor
inc
push
int3
loop
loop
shr
nop
std
in
fcoms
xor
iret
push
or
daa
arpl
mov
or
pop
dec
fiadds
fcom
test
mov
cwtl
push
push
fcmovu
and
shl
imul
adc
jns
js
jecxz
fldl
cld
jp
fldl
sbb
jno
cmpb
sub
push
cmp
and
mov
loop
shll
andl
push
mov
push
mov
sbb
jmp
and
filds
mov
sub
call
adc
adc
adc
scas
pop
sbb
xchg
ja
add
or
xorl
cld
dec
xchg
and
mov
ds
in
outsb
xchg
repz
sub
in
xchg
jg
mov
out
cmp
xchg
xor
xchg
cwtl
sarb
das
lahf
adc
mov
push
jne
add
adc
push
rorb
mov
sub
fxch
ljmp
data16
mov
cmp
outsb
jle
push
adc
mov
mov
push
dec
adc
push
inc
sbb
jae
jp
dec
out
sub
xchg
sub
inc
loope
insb
or
xor
and
push
mov
mov
inc
popf
pop
jl
das
push
and
add
ds
xor
jne
lods
mov
cli
xchg
mov
and
jo
push
pusha
mov
clc
les
and
add
xor
push
mov
mov
aad
or
daa
and
or
push
pop
and
sbb
sahf
push
cmpsl
and
loop
sub
cmp
iret
stos
lods
les
add
les
in
outsl
mov
insb
jge
sbb
scas
fcoms
push
push
js
lcall
xchg
add
inc
out
push
rorl
not
mov
mov
loope
dec
cmp
pop
rol
push
in
mov
jns
xlat
vmread
add
imul
push
cmpsl
xor
jmp
sbb
push
adc
xchg
int3
xchg
mov
adc
and
out
lea
mov
xchg
mov
jmp
mov
sti
test
pop
inc
sbb
outsb
mov
cmp
sbb
leave
push
adc
ret
js
cld
not
xor
mov
mov
ficomps
imul
sbbb
jmp
loope
daa
add
pop
mov
andps
adc
dec
xlat
push
popf
inc
or
ja
mov
mov
imull
outsb
or
push
jo
mov
fwait
or
inc
and
shr
jmp
loopne
and
xchg
je
shrl
fcoms
and
fsubl
insl
xchg
lds
outsb
xchg
xchg
loopne
xor
cwtl
cmp
add
mov
mov
movsl
jnp
add
and
mov
xchg
fwait
cltd
test
jns
jno
inc
pop
pop
notl
outsb
cmp
mov
inc
xlat
dec
aas
rcll
out
and
xor
inc
mov
scas
decl
dec
std
cli
xor
adc
std
pusha
pop
sbb
lcall
das
sbb
sub
mov
mov
jle
repnz
cmp
sbb
cmpsb
repnz
sarb
stos
aam
lahf
mov
in
gs
pop
lea
roll
stos
and
loopne
loop
pop
mov
cmp
add
rcll
jb
aam
lds
sbb
stc
into
or
stos
popf
fcomps
jnp
and
fldcw
cmp
lahf
adc
sub
aam
push
outsb
std
mov
lods
insb
adc
paddd
movsb
lahf
mov
negl
int
fs
mov
mov
jae
jb
dec
hlt
mov
mov
popa
inc
nop
mov
mov
adc
pusha
cmp
add
ret
decb
jno
dec
addr16
sbb
das
add
fcompl
in
decb
xchg
jbe
push
jmp
rol
clc
pop
mov
mov
or
push
xchg
mov
cwtl
scas
xlat
daa
cli
add
push
mov
jno
mov
jo
ljmp
push
or
loop
rcl
mov
aaa
adc
das
sub
adcl
aas
pop
addl
lret
addr16
inc
mov
lcall
mov
add
sahf
call
pusha
in
and
pop
es
imul
dec
gs
cs
int3
enter
nop
fwait
imul
leave
cwtl
ret
out
push
scas
and
shrb
test
outsl
lahf
aad
leave
subl
stos
sarl
pop
mov
out
cmp
das
adc
out
add
or
jb
movsb
popf
inc
in
stos
sti
mov
mov
aam
inc
hlt
sti
dec
xchg
cwtl
mov
dec
sbb
adc
pop
or
insb
xchg
inc
sub
loopne
fsubrl
daa
xchg
or
loopne
cltd
fiaddl
leave
insl
movsl
ja
xchg
mov
mov
mov
fs
add
inc
ret
in
lcall
mov
loopne
inc
mov
cwtl
insb
les
roll
sbbb
fistps
adc
repz
xor
mov
push
rorb
pop
adc
popf
clc
mov
sarb
insl
cld
hlt
std
xchg
scas
jbe
xorb
aaa
pop
sbb
mov
sub
outsb
fsubr
xchg
cli
adc
push
fcompl
jb
negl
sbb
push
push
test
jb
mov
ljmp
and
lock
loop
jmp
xchg
jle
or
xor
xchg
dec
in
adc
fbld
adc
or
jae
iretw
xchg
cmp
std
lahf
mov
call
pop
xchg
adc
pop
dec
sub
cmp
sti
xchg
addb
pushf
jo
gs
pop
pop
cmpsl
xor
stc
pop
pusha
fcompl
sbb
and
mov
ja
sub
sti
jns
sub
and
lods
sbb
jl
testb
sub
and
movsb
adcl
adcb
inc
dec
inc
and
sub
and
stc
jnp
lret
and
fsubrl
cmc
loope
and
nop
mov
movb
sbb
in
inc
mov
fcoms
test
lods
or
cltd
inc
idiv
test
push
inc
outsb
mov
scas
fsubr
fsubl
popf
in
in
jl
or
and
stos
push
fstl
mov
shlb
out
or
pop
or
dec
and
int3
dec
repnz
gs
imul
movsb
lret
xchg
bound
mov
sahf
leave
stos
add
fxch
test
or
or
inc
inc
loopne
insl
xchg
enter
jecxz
mov
sbb
jp
and
lret
out
cltd
stos
lds
or
cmp
push
roll
jbe
int
push
rcrb
imul
mov
jge
jecxz
jnp
pop
mov
push
jmp
out
push
gs
popf
std
or
xchg
mov
aad
sub
xchg
add
xor
inc
mov
jo
jne
cmpsb
leave
notb
clc
outsb
xor
aas
mov
sub
push
je
hlt
into
ds
jecxz
jmp
frstor
into
lea
ljmp
pushf
sbb
or
sub
movsl
mov
cltd
xor
scas
ret
dec
scas
adc
fs
stc
enter
rcll
mov
movsb
jo
jecxz
mov
fdivl
ljmp
ja
xor
jb
lret
shrl
lock
popa
std
in
js
das
lahf
dec
popf
jnp
push
xor
sbb
or
cld
cmp
out
sarb
imul
add
xor
fldl
jne
loope
mov
cmp
jl
fidivl
popa
ret
sub
wrmsr
gs
sbb
out
cld
cmp
adc
mov
dec
mulb
mov
dec
and
lods
adc
push
sub
rcrb
loope
adc
jne
dec
testl
js
jae
mov
mov
cs
mov
lret
push
sbb
inc
pusha
imul
inc
add
cmp
cmp
sarb
or
mov
lea
pop
cwtl
lret
stos
sub
inc
out
mov
leave
ret
dec
pop
mov
scas
inc
jp
xor
mov
mov
inc
adcl
divb
push
es
cmp
imul
dec
xchg
shlb
insb
loop
clc
ljmp
cmp
jmp
mov
push
std
je
lds
out
movsl
xchg
sub
inc
call
push
push
push
push
call
mov
add
adc
xor
cmp
jne
cmp
jne
mov
mov
imul
mov
or
sub
mov
lea
mov
pop
leave
ret
push
mov
sub
cmpl
jg
mov
add
jmp
pushl
call
push
jmp
addb
add
mov
in
cmpsl
xchg
jno
imul
jb
into
sahf
rorl
cmp
pusha
aas
xor
imul
rorl
add
call
inc
or
lods
imul
xor
int3
jl
inc
mov
pop
mov
jle
rol
loopne
ret
repz
mov
pop
cmp
push
sahf
pop
lret
xchg
cmp
mov
xchg
movsb
movsb
pop
pop
push
loope
scas
xchg
out
mov
xchg
push
mov
cmp
fs
stos
popf
fidivrl
lds
mov
xor
adc
or
adcb
adc
push
aad
addb
roll
jmp
mov
and
sbb
aad
stc
fstpt
addl
outsb
mov
shlb
jo
add
outsb
mov
int
cmp
ret
jne
push
adc
repz
bound
call
movsb
sbb
mov
jmp
andl
or
shl
into
mov
in
lahf
jle
add
jo
pop
sub
mov
vmovddup
push
jnp
cmp
inc
push
das
dec
addr16
les
jle
cmp
jle
dec
iret
in
dec
les
in
nop
dec
lret
cmpsl
movsl
jg
sub
outsl
sbb
out
daa
inc
add
xchg
xchg
push
jne
cs
mov
call
repnz
loopne
push
fistps
xlat
jae
es
or
xor
xor
testb
insb
pop
js
arpl
push
stos
sbb
repz
out
test
stos
mov
xchg
or
or
xor
sbb
loope
xchg
jmp
adc
cmp
mov
add
dec
mov
push
xor
mov
push
jecxz
mov
fdiv
mov
loop
std
mov
dec
test
cmp
ror
leave
imul
mov
cltd
mov
mov
pusha
lock
xchg
aad
mov
xchg
add
mov
jno
add
adc
pop
jnp
lret
xchg
xchg
jbe
sub
and
cmp
sub
cltd
outsl
bound
into
xchg
pop
and
lahf
push
subl
popf
test
jmp
cmp
cs
pop
pop
loopne
pop
cltd
aam
lcall
loop
cmp
mov
mov
xchg
shll
loope
lods
rcl
and
rol
in
pop
inc
in
sub
pop
leave
adc
pop
arpl
lret
insl
mov
cld
cmp
pop
imul
sbb
addr16
and
loope
pop
pop
mull
cmp
inc
cmc
dec
or
pop
jmp
sub
sbbl
mov
xchg
mov
scas
mov
jmp
or
sahf
adc
push
jp
xchg
mov
lds
xor
movsl
popf
cmp
lods
stos
cwtl
es
jecxz
scas
sbb
lock
lret
sub
or
pop
jl
loopne
sub
jmp
rcrb
rep
lock
icebp
jecxz
adc
test
jae,pn
pop
xchg
js
pop
xor
pop
stos
lcall
pusha
cmp
lahf
movsl
lret
or
pop
jecxz
les
ljmp
adcl
or
sub
fwait
dec
xchg
cmp
pop
ret
shlb
jbe
test
add
cmp
mov
sti
sbb
addr16
rcrb
sub
lods
cli
mov
fbld
nop
jo
scas
jle
js
test
shl
adc
sbb
les
decl
mov
test
mov
xor
cmp
mov
cmpsl
jecxz
xchg
mov
arpl
cmp
xor
insb
repnz
jle
mov
push
xchg
inc
ret
aas
enter
dec
daa
inc
jle
xchg
jmp
inc
sbb
mov
cmpsb
and
xchg
and
test
jg
jae
push
mov
ljmp
cmp
push
xor
adc
and
jge
out
dec
cmp
out
leave
jae
inc
cmpsl
loopne
mov
fwait
lret
shlb
add
pop
or
xchg
jl
xchg
notb
cltd
dec
xchg
test
nop
notb
add
rcrb
outsl
jecxz
sarl
dec
xchg
std
je
shll
neg
sbb
mov
nop
cmp
negl
and
and
lods
lahf
hlt
in
cmp
jg
sbb
xchg
mov
ss
mov
stc
sub
cltd
or
scas
lods
lcall
movsl
mov
mov
xor
out
cmp
gs
push
popf
push
movsb
xor
cmp
faddl
pushf
cmp
sub
leave
lods
push
mov
icebp
cmc
das
jno
dec
leave
sub
clc
sbb
shrb
movsb
in
push
sbb
fwait
imul
jecxz
mov
gs
jb
scas
sub
clc
das
sbbb
andb
mov
mov
cmpsl
movsb
mov
push
xor
cmpsb
out
sbb
out
outsb
mov
pusha
mov
nop
mov
pusha
rcl
push
dec
add
in
sbb
ja
mov
dec
test
sub
push
cmp
enter
out
js
adc
mov
in
in
pop
add
icebp
xor
into
ja
mov
cs
or
popa
ret
rorb
cmp
jae
rcl
mov
addr16
je
or
outsl
push
es
lcall
pop
dec
movsl
jecxz
mov
xor
cmp
pushf
inc
and
push
xor
je
addb
sarb
adc
or
lods
fs
sub
add
sbb
jmp
sbb
rcrl
shr
std
pop
shr
mov
inc
cmp
sub
lcall
insb
or
mov
add
mov
jbe
mov
adc
dec
adc
adc
imul
sbb
add
and
outsl
sbb
out
test
sbb
sbb
call
and
mov
daa
mov
mov
xorl
test
fldpi
fs
ljmp
addr16
fdivl
dec
out
inc
scas
arpl
iret
add
shlb
rol
in
jb
pop
jno
subl
xchg
jge
insl
cs
inc
push
jmp
pop
mov
mov
cmp
jecxz
iret
outsl
rcl
inc
xchg
in
adc
xlat
mov
pop
and
je
fisttpll
int
or
lret
mov
xor
fiaddl
sarl
adc
and
shll
adc
mov
insb
iret
ljmp
bound
faddl
shlb
mov
sbb
jp
subl
adc
pushf
stc
jno
add
jecxz
mov
cmp
lods
dec
push
shll
inc
adc
dec
hlt
pushf
mov
cmp
jp
add
leave
std
adc
mov
mov
cmpl
jge
movzbl
add
adc
jmp
push
push
push
pushl
call
shrd
jmp
outsb
fwait
push
movsl
or
movsb
js
fs
sbb
jno
iret
lods
mov
xor
stc
pop
outsl
icebp
rolb
xchg
jnp
cmp
lea
mov
xor
int3
arpl
sbb
mov
je
xchg
sbb
out
sub
dec
adcl
dec
sbb
push
cmpsl
mov
push
in
les
and
daa
inc
bound
test
xorl
cmp
push
int3
out
mov
push
push
or
pushf
lahf
ljmp
add
in
out
push
test
mov
dec
icebp
adc
movsl
mov
in
xor
test
gs
or
addb
sbb
jb
xchg
in
mov
int
cs
and
call
sbb
rcrb
addb
adc
dec
cmp
cmp
shlb
xchg
sbb
mov
aas
dec
mov
out
pop
xchg
lds
repnz
jecxz
mov
inc
imul
out
cmp
mov
pop
pop
and
inc
adc
mov
into
pop
insb
in
sub
popf
in
mov
sub
xor
cmp
clc
inc
or
mov
lcall
xchg
mov
mov
out
fnop
subb
dec
adc
ja
aas
mov
or
ljmp
push
dec
cmp
mov
call
adc
pusha
push
mov
push
mov
adc
adc
insb
and
push
jge
aam
mov
aad
mov
jno
fcoml
jle
adc
arpl
sub
mov
rcll
repz
mov
aas
lods
push
into
loop
jle
mov
adcl
mov
cwtl
push
mov
mov
xchg
cmp
add
jb
push
push
xchg
pop
xlat
outsb
out
lret
negb
xor
lret
pop
jnp
inc
adc
mov
sahf
repnz
mov
jb
mov
or
xor
jecxz
fcompl
sbb
push
mov
cwtl
lcall
xchg
mov
je
push
cwtl
mov
divb
mov
cmp
fdivrl
add
jb
push
aas
sub
mov
jo
xchg
or
sub
or
lahf
xor
test
xchg
cmp
ror
stc
xchg
inc
mov
out
xchg
inc
dec
push
sub
fdivrl
jg
repnz
aad
test
jge
test
hlt
sbb
add
fmuls
mov
xchg
daa
out
add
cmpsb
xor
sarb
jge
fists
push
notb
dec
test
push
iret
xchg
addb
mov
inc
xchg
xchg
adc
jb
lret
xchg
mov
pop
shlb
jmp
dec
sbb
aam
pop
lret
cmp
pop
and
stos
insb
dec
mov
cmp
cmp
sub
fcoms
fistl
add
inc
jns
sbb
push
inc
leave
repz
lcall
aad
fcomp
fsubrs
xor
push
xor
xor
sbb
mov
orl
insb
sbb
subb
cmp
sub
fs
sbb
insl
aam
cmp
pop
test
jne
or
sub
jle
xor
xor
or
pop
imul
jmp
divb
xchg
into
inc
mov
jnp
enter
popl
test
push
ss
jae
out
mov
xor
add
je
xorb
fnstenv
pop
fmuls
stos
mov
cmove
roll
push
xchg
sbbl
sbb
dec
lods
mov
mov
mov
stc
push
pushf
int3
push
mov
dec
xor
test
scas
loop
aam
push
dec
ret
stos
add
jl
cld
mov
cmp
inc
jae
inc
adc
in
out
mov
in
or
mov
sub
push
cwtl
sub
mov
lret
cld
ret
push
or
sub
add
lret
cltd
loop
call
push
shll
movsb
cmp
push
mov
push
dec
xor
mov
mov
std
subb
movsb
xor
fcompl
pusha
add
hlt
cli
jnp
mov
std
adc
fwait
cmp
jne
jb
mov
iret
das
push
sbb
jmp
push
or
add
inc
mov
ficoml
data16
fsqrt
pusha
test
pop
gs
ds
addr16
hlt
mov
shll
das
or
mov
sbbl
sti
cmp
rolb
add
or
jb
aad
lea
insb
mov
push
subb
jl
inc
xor
rcrl
push
bound
ljmp
std
cmp
mov
or
xlat
mov
in
xchg
mov
xchg
push
in
mov
rcr
outsb
testb
add
fmul
hlt
out
push
aaa
movsb
repnz
jle
mov
cmp
lret
jecxz
popa
and
bound
es
jp
jo
scas
cmp
adc
dec
jecxz
xor
xchg
insb
sti
repnz
pop
roll
sti
dec
adc
jl
mov
or
call
bound
mov
mov
xchg
cmpsl
cli
insl
enter
and
out
test
arpl
sub
stc
jo
and
mov
bound
xchg
and
rol
jb
mov
mov
inc
add
icebp
rcrl
in
sbb
push
jo
pop
sbb
decb
fidivs
int
adc
pop
mov
xorl
outsb
pop
jno
lret
in
inc
dec
test
test
lock
xchg
push
lret
jp
mov
rorl
ss
dec
mov
mov
cmovge
mov
push
xorl
cmp
shr
cli
mov
mov
and
sbb
out
dec
test
pop
jp
jbe
xchg
mov
cmpsl
shll
mov
sub
fs
fs
mov
aad
ja
xor
xchg
cli
in
sarl
mov
insb
flds
dec
js
mov
popa
and
push
push
xor
fsubr
scas
dec
ficomps
sub
dec
sahf
repnz
jno
and
and
out
leave
or
repnz
enter
jmp
xbegin
ret
lods
jmp
ffreep
cmp
movswl
cmpsl
push
jae
cmp
xchg
add
subb
insb
fildl
pusha
xor
xchg
lods
push
and
dec
jmp
xor
adcb
sbb
sub
std
and
jno
nop
mov
fcomp
add
inc
lcall
jp
push
stos
lods
das
pop
mov
and
ds
cmp
cmp
andl
loopne
fwait
clc
cmpsl
jne
insl
pop
mov
add
jmp
mov
adc
xor
and
mov
sbb
xor
sbbl
or
mov
sub
mov
mov
subl
shl
mov
and
mov
mov
shrd
movl
xor
addl
shr
mov
mov
sbb
mov
mov
mov
mov
sub
sub
xor
decl
or
orl
jmp
cli
int
lahf
push
or
inc
cmpsb
ss
jbe
stos
js
adc
addl
js
jbe
in
adc
dec
push
dec
in
adc
fcmove
das
pop
nop
sbb
test
cmp
in
jmp
jge
popa
and
mov
xchg
jmp
cmpsb
cmp
pop
bnd
pop
push
mov
fisubs
subl
mov
in
sbb
jg
rcrb
jo
icebp
dec
and
jle
adc
insb
add
mov
pushf
mov
popa
pop
xchg
mov
jmp
dec
add
shll
les
or
rclb
aam
or
aaa
jg
inc
std
jmp
test
adc
pushf
fstpt
and
shrb
out
adcl
sets
sub
adcb
pop
mov
gs
push
aad
bound
push
cs
mov
jge
ret
mov
push
push
cmp
iret
pop
nop
push
popf
pop
jmp
enter
pop
mov
xchg
cmp
ljmp
mov
and
adc
gs
je
cmp
ss
test
stos
jne
or
sbb
je
jns
xchg
lret
push
jp
dec
jne
aaa
dec
in
adc
adc
push
sbbb
xor
or
cmpsl
push
rcrl
pop
pop
imull
lret
lds
in
mov
mov
inc
out
cli
xchg
btc
jmp
adc
data16
out
xor
shl
push
mov
clc
jne
lret
jns
lret
inc
xchg
ror
andl
cs
mov
popa
outsb
es
push
dec
dec
jo
mov
neg
mov
pop
adc
push
scas
dec
xor
xchg
ss
cmp
push
add
scas
pop
scas
popf
xor
aas
pop
and
in
cmp
jle
pop
jb
sti
fucom
cmpsb
arpl
clc
xor
inc
push
cli
and
cmp
ret
sbb
inc
or
and
lods
inc
shll
daa
adc
inc
lods
mov
dec
mov
outsl
in
sbb
mov
sahf
mov
inc
mov
push
stc
cmpsl
shlb
stos
cmp
cmpsl
mov
or
jae
and
shlb
test
push
std
adc
std
clc
xor
enter
xor
push
dec
mov
fidivrs
dec
fistl
shlb
pop
sbb
xor
sbb
adc
jmp
ja
xor
jae
adc
dec
jne
sbb
insl
mov
inc
adc
xlat
out
push
sbb
mov
push
mov
mov
ljmp
push
js
int3
inc
roll
pop
mov
pop
shl
cmp
test
fldl
shl
sbb
out
pop
dec
and
aaa
test
in
sbb
mov
add
std
fcompl
sub
outsl
inc
cmp
sub
cmpsb
xor
pop
enter
push
mov
test
add
and
js
fsubs
pop
sbb
mov
jmp
repnz
je
stos
nop
xchg
mov
sbb
flds
mov
es
fists
aad
cs
add
xchg
es
inc
xchg
lea
ja
or
cmp
call
mul
or
repz
push
and
cmc
xlat
inc
mov
jg
sub
xchg
mov
movsb
dec
gs
js
outsl
dec
fistps
loope
mov
or
inc
movsl
sbb
js
imul
lahf
or
popl
ds
fimull
mov
push
outsl
jo
popf
dec
and
ret
sysexit
sub
and
dec
dec
sti
clc
push
push
push
cmc
cld
mov
pop
dec
xchg
pop
xor
xor
ja
mov
jmp
add
int
or
mov
pop
in
adc
enter
sbb
test
pop
mov
cmp
xchg
push
xchg
sub
pop
xchg
daa
jp
out
movsb
ret
xchg
sbb
jne
loopne
in
adc
xchg
adc
ss
jp
sahf
sbb
add
cmpsb
mov
bnd
dec
rcrl
and
out
divb
cmp
mov
addl
push
dec
enter
cld
sub
push
jo
popa
inc
test
mov
imul
mov
adc
mov
xchg
xor
xor
insb
cli
movsb
sete
push
xor
push
int3
push
nop
out
or
push
gs
test
push
inc
lret
rolb
sbb
stc
out
movsb
mov
test
mov
shrb
mov
lds
fimull
xchg
int3
nop
mov
xor
in
cltd
mov
mov
xchg
mov
iret
popa
lds
insb
mov
pop
adc
mov
repz
sbb
sti
mov
popf
into
xor
or
ds
jb
jp
adcl
in
mov
pusha
xor
and
xchg
adc
lahf
xor
xor
andb
sub
cs
pop
or
cmpsl
sub
xor
jle
inc
jnp
push
mov
ficompl
enter
jecxz
div
hlt
in
lret
leave
cld
prefetch
or
rorl
mov
in
xor
cmp
cmpsl
gs
scas
inc
mov
xor
movsb
fidivrs
and
mov
dec
mov
arpl
mov
aas
add
test
enter
rcl
sbb
std
adc
in
out
adc
leave
stos
mov
adc
add
into
push
aaa
neg
mov
sti
push
cmp
int
ja
frstor
dec
push
sub
sub
test
lret
les
cmpsb
lret
cmpsl
test
jns
xchg
adc
mov
lahf
xor
mov
sbb
lahf
aaa
iret
push
xlat
adc
or
mov
lcall
mov
lds
cmc
movsl
add
mov
push
xchg
cld
aam
sbbb
xchg
lods
pushf
outsl
pop
movsb
xor
pusha
fldpi
shll
rclb
xor
lds
loope
loop
xor
jecxz
mov
ja
sub
je
xchg
xchg
cmpsl
mov
jno
imul
xor
jns
ds
clc
fldcw
pop
pop
icebp
hlt
data16
or
sbb
cmp
pop
xor
add
mov
dec
jge
jl
je
sbb
test
in
jecxz
pop
int
pop
lret
inc
enter
inc
sbb
sbb
repnz
xor
mov
clc
outsl
xchg
imul
xlat
pop
test
sbb
arpl
and
loope
jecxz
imulb
incb
sbb
mov
insl
pop
rcl
xor
jge
fmull
addl
inc
lret
push
out
insl
pop
pop
push
or
mov
jle
push
add
es
ficoml
inc
int
shlb
jmp
js
add
shrb
fisubs
stc
push
ds
or
sub
push
mov
add
mov
xor
or
mov
adc
mov
jmp
movsb
dec
dec
jo
gs
adc
push
int3
xchg
sub
push
adc
addl
dec
inc
testl
inc
sarb
shll
fnstcw
lret
enter
out
jns
inc
jno
add
rcrl
in
jne
jo
pop
lcall
add
fsub
mov
xchg
inc
out
dec
cmc
ja
xor
xor
xor
btr
add
test
jge
int
inc
pop
or
adc
pop
mov
adc
lcall
and
mov
mov
jmp
aad
mov
out
inc
fisttpll
push
jbe
bound
mov
ja
cmpsb
dec
sarb
adc
mov
mov
xor
sbb
shrl
jne
jbe
scas
lret
inc
push
inc
mov
or
cmpsl
test
mov
push
fistpll
ljmp
inc
test
sti
nop
sti
xorl
mov
and
fs
imul
pop
movsl
or
dec
dec
ja
add
aad
xor
in
clc
dec
mov
push
inc
stc
std
lods
adc
js
mov
test
loope
loope
xchg
pusha
or
push
insb
bound
into
call
das
dec
dec
test
aas
xor
sbb
pop
ds
stos
mov
cmpsl
in
cmp
xchg
es
cld
jno
int
cld
add
into
push
jg
adc
or
insl
lods
or
lods
pop
dec
jl
popa
test
roll
imul
movsb
push
push
test
popa
out
mov
mov
ss
pop
adc
pop
std
lods
fnstsw
and
scas
in
in
push
push
arpl
push
iret
and
cmp
bound
push
imul
xchg
repz
sub
rorl
xor
mov
stc
mov
mov
cli
pop
in
js
rcrb
inc
aas
pop
pop
mov
and
imul
iret
or
out
jle
not
into
mov
aad
shl
inc
pop
mov
add
int3
aaa
in
enter
mov
xlat
dec
les
and
add
pop
movsl
add
inc
ljmp
cltd
std
stos
adc
int
mov
xor
xor
mov
dec
loope
orl
out
jmp
cli
mov
ja
into
lcall
inc
pop
mov
xchg
pop
ja
push
mov
lods
dec
inc
pop
test
xchg
jl
out
les
mov
jmp
ja
xor
sub
xor
jmp
jne
cmp
pop
dec
lods
mov
lods
push
push
adc
addr16
cwtl
dec
int
push
jbe
loop
sbbl
mov
add
inc
pop
dec
mov
jo
shlb
pop
out
cmp
jge
xor
add
jge
jae
xchg
sub
cmp
jge
pop
pop
cltd
xor
inc
dec
div
inc
jb
rcrb
or
push
mov
ret
ss
adc
mov
push
je
fldenv
lret
subb
in
rcl
jae
or
sub
fdivrl
rcll
inc
ret
push
xchg
ret
xchg
dec
pop
fldcw
mov
add
je
xchg
loop
or
push
fdivl
and
push
jmp
push
cmp
jnp
scas
mov
iret
sbb
hlt
in
mov
adc
xchg
stos
push
addb
mov
xchg
mov
add
cmovb
sub
cmpsb
push
loop
mov
mov
push
int
pop
jp
dec
mov
scas
aas
and
pop
xor
into
leave
and
outsb
xchg
or
ret
nop
sub
sarl
mov
gs
jo
and
inc
fidivs
cwtl
aas
test
pop
or
aam
insb
cmp
mov
movb
fstl
mov
pusha
mov
jmp
cmp
movsb
jp
pop
sub
test
sub
mov
es
movsl
and
xchg
pop
addr16
inc
jl
sbb
mov
enter
push
jmp
xor
push
mov
lret
popf
inc
and
cwtl
adc
dec
add
clc
cmc
mov
jnp
push
or
dec
repnz
pop
idiv
out
das
inc
repnz
jge
mov
mov
rcr
dec
popa
popa
jae
xchg
mov
mov
push
lods
fcmovnb
insl
inc
daa
movsl
outsl
mov
leave
das
faddl
imul
xchg
xchg
scas
movsl
push
daa
lret
ljmp
out
push
into
testb
mov
add
outsb
xor
frstpm(287
push
les
cmpsb
push
jnp
xor
inc
adc
insb
inc
outsb
ret
add
dec
mov
jp
push
pop
xchg
scas
sub
jno
sbbl
jo
mov
push
xchg
fwait
mov
sbb
loop
jg
mov
fcmovne
push
add
and
gs
movsl
shlb
cmp
mov
cld
push
jle
sahf
scas
nop
jle
lds
push
repnz
xor
in
lock
xchg
or
cmp
xor
test
inc
bound
and
sub
mov
sahf
mov
imul
mov
sarl
lret
int3
in
jle
add
or
test
jne
int3
movntq
and
mov
fs
les
je
sbb
sub
jne
mov
mov
mov
sub
outsb
jge
pop
lods
andl
mov
arpl
je
xchg
cmp
sahf
fdivs
dec
xchg
push
mov
sbb
jecxz
movsb
rcll
cltd
sub
inc
or
cld
jb
xchg
mov
enter
dec
in
push
stos
loopne
sbb
pop
lds
adc
xchg
out
out
stos
mov
jns
popa
sbb
dec
lods
xchg
adc
sbb
sbb
push
arpl
pop
sbb
ret
inc
nop
testb
clc
std
nop
insl
nop
insl
repnz
push
pop
sub
ret
mov
push
addr16
stos
jno
out
loop
scas
xchg
mov
inc
das
push
jl
pop
adc
xchg
ficompl
push
sub
push
mov
dec
loopne
mov
push
pop
sbb
cmpsl
push
xchg
push
pop
mov
imul
or
xor
rcrl
movb
in
rolb
fwait
movl
jl
mov
inc
outsb
repz
lds
push
jnp
jp
insl
repz
cmpsl
shrl
cli
inc
aam
and
mov
loop
lods
repnz
lret
les
inc
int
movsb
pop
mov
add
popf
pop
add
sahf
dec
ljmp
sarl
xchg
mov
adc
xchg
and
sbb
cs
in
mov
pushf
push
aas
or
insl
xchg
clc
lods
jne
xor
cmpsb
sbb
add
xor
loopne
dec
lds
or
sbb
cld
pop
push
lahf
lods
stc
sub
insb
inc
xchg
ret
mov
adc
mov
cmpl
jl
subl
jmp
pushl
pushl
call
mov
mov
mov
mov
mov
mov
shl
xor
shld
cmpl
jg
dec
jmp
pushl
call
shl
mov
xor
xor
movl
movl
movl
cmp
movl
jne
movl
cmp
je
subl
mov
mov
cmpl
jg
add
jmp
pushl
push
pushl
push
push
push
push
pushl
call
mov
mov
xor
shld
shl
xor
addl
xor
movl
cmp
movl
jne
cmp
je
mov
mov
shl
mov
xor
movl
shr
or
sbb
mov
cmpl
ja
and
jmp
push
push
pushl
call
mov
mov
mov
mov
mov
jmp
bound
clc
xchg
xor
xchg
outsl
inc
adc
addl
cwtl
bound
inc
imul
push
popa
xchg
xchg
popf
pop
jno
push
pop
loopne
int3
mov
push
push
pop
in
iret
mov
cmp
jp
sar
lods
mov
lods
icebp
jecxz
add
popf
mov
lcall
add
xor
shll
into
and
daa
fidivrl
mov
aaa
xor
aas
jmp
sbb
xlat
push
sub
cmp
xor
out
mov
aad
jno
jno
mov
inc
stos
hlt
es
push
sti
lods
dec
addb
fiadds
jge
lods
xchg
adc
loope
push
pushf
les
sub
xchg
repnz
and
jne
mov
ds
dec
pop
lcall
out
dec
imul
mov
and
int
divb
xchg
xor
and
sub
ljmp
scas
inc
xchg
test
fstps
je
mov
xchg
mov
inc
or
test
dec
test
stos
lret
in
xor
dec
int3
cmp
les
imul
stc
nop
fidivs
fildl
outsb
and
sbb
inc
movsb
add
push
mov
dec
and
shll
jne
inc
or
aas
test
xchg
cwtl
je
out
xchg
push
mov
stos
mov
mov
xchg
add
clc
insb
icebp
mov
xlat
fwait
arpl
dec
dec
adc
jne
rclb
or
ret
sbb
fcoms
cmp
add
mov
lret
sub
mov
mov
ds
sbb
jbe
pushf
sub
mov
and
insl
sub
jecxz
sbb
mov
adc
pop
and
fxtract
cs
gs
ret
fildll
jp
sub
leave
add
lahf
adc
jp
fwait
jne
mov
pop
pop
mov
mov
adc
daa
sub
cmp
and
test
psrld
sbb
add
lods
in
bound
hlt
cld
cmpsb
jge
lret
cmp
mov
pop
insb
das
inc
add
adc
in
sbb
xchg
pop
xor
mov
xchg
test
or
xchg
mov
pop
xor
out
sbb
and
lds
sti
cld
in
inc
mov
jbe
and
mov
mov
and
adc
cli
push
or
test
or
loope
mov
ljmp
mov
push
rclb
xor
push
sti
dec
rolb
fwait
xchg
sub
mov
inc
inc
add
fnsave
sbb
fnstsw
out
push
mov
call
pushf
xor
das
cmpl
cli
iret
sub
cmp
lds
lods
mov
sub
lret
clc
loopne
popl
stc
cs
ljmp
loope
adc
repz
dec
push
cmp
jno
lods
je
mov
adc
cmc
push
imul
lahf
pop
mov
xchg
sub
inc
push
add
xlat
pop
dec
add
sbb
xor
scas
cmpsb
pop
cmp
cmp
fcmove
adc
mov
jo
mov
cmp
mov
jl
push
cwtl
push
pusha
outsl
xchg
aas
adc
aam
ret
inc
inc
mov
cmp
test
jl
jbe
lea
int3
jns
fbld
mov
sahf
or
and
cli
mov
aaa
daa
dec
outsb
out
mov
jecxz
adc
mov
inc
divb
int3
and
adcl
movsl
jb
mov
lea
nop
mov
pop
add
sub
mov
jle
xor
repnz
mov
pop
dec
jp
adc
pop
std
sub
mov
imul
clc
dec
lea
fs
lret
mov
enter
rclb
inc
cmpsl
mov
popf
xchg
cltd
add
in
add
inc
daa
in
push
andl
push
cwtl
lock
iret
xchg
mov
fisttpl
cmp
repz
xchg
je
and
xchg
mov
enter
bound
dec
in
leave
test
lock
sub
ja
mov
ret
adc
movsl
pop
fwait
mov
and
cld
addr16
pop
jp
ljmp
push
cmc
push
or
insb
or
arpl
inc
stc
ja
cli
inc
repnz
add
cmc
push
xchg
adc
sti
lds
dec
out
mov
push
dec
mov
stos
add
scas
shl
lds
subl
es
popa
in
clc
jae
mov
mov
sbb
push
mov
and
xor
dec
push
aas
xor
outsb
fnsave
mov
lret
jecxz
cwtl
dec
lock
push
or
adc
xlat
fcoml
lods
repz
jecxz
push
dec
mov
aad
cmp
or
int3
xor
loopne
hlt
repnz
aaa
or
scas
xchg
cltd
pop
imulb
mov
int3
inc
and
leave
das
fsubrl
jne
cmpsl
sbb
xor
dec
test
lods
sbb
xchg
dec
and
sbb
ja
popa
js
cmp
add
out
ss
es
dec
dec
jge
test
insb
mov
fwait
stos
ljmp
adcb
jle
adc
jo
lods
pop
xchg
imul
or
pop
cmc
aam
pop
inc
idivl
mull
xchg
dec
pop
loop
xlat
js
fs
dec
mov
xchg
andb
mov
adc
jecxz
sub
scas
jne
mull
shl
lods
data16
fiaddl
xchg
aam
repz
push
icebp
shl
add
orl
add
lock
mov
loope
inc
out
stc
mov
mov
mov
sbb
mov
fdivs
fstps
sbb
mov
test
xor
loop
inc
push
daa
push
jg
mov
mov
jp
loop
xor
test
pop
sbb
dec
xchg
stc
into
xor
rclb
daa
and
pop
sbb
pop
scas
jecxz
loopne
add
push
push
xchg
xchg
push
sub
xor
mov
scas
mov
jb
adc
gs
inc
pop
xchg
dec
test
push
test
addr16
sub
fisttps
pop
sbb
insb
inc
inc
mov
cltd
fistpl
mov
jmp
aas
lds
jp
jl
repnz
sub
and
push
xchg
adc
jl
jg
nop
leave
mov
in
call
testl
loope
shrb
push
scas
xchg
scas
xor
cs
add
dec
loop
xchg
add
popf
cmp
jbe
pop
push
xchg
and
xor
xor
xchg
into
stos
aas
pop
mov
clc
cli
add
insb
mov
push
push
adc
add
sbb
adc
sbb
or
or
jo
scas
xchg
bound
roll
insl
push
dec
adc
cwtl
pop
or
negl
pop
xorl
sub
mov
add
mov
lea
mov
xor
mov
mov
mov
adc
jmp
fbld
and
fwait
mov
addl
js
arpl
lret
mov
xchg
adc
jae
sbb
jl
push
imul
stos
pop
fnstcw
shr
push
xchg
rclb
iret
cli
dec
test
and
imul
mov
movsl
cmp
xchg
fimuls
call
mov
cmp
push
mov
mov
lret
negb
insb
dec
fdivrl
and
xchg
movsb
mov
gs
xlat
xor
or
cmp
xor
cli
testb
in
int
ficoms
pop
adc
push
cmc
cltd
in
push
inc
jne
mov
scas
ja
repz
iret
jns
inc
hlt
imul
xchg
stos
xchg
stc
xchg
fnstenv
adc
lea
fdivrl
sub
lock
jne
sbb
jle
lcall
xor
cmp
repz
and
xor
inc
inc
mov
dec
adc
xor
xchg
mov
arpl
les
popf
jmp
fimuls
cmp
add
dec
push
roll
das
mov
repnz
xor
add
fs
nop
pop
adc
cld
pop
test
ret
pusha
inc
or
imul
push
loop
stos
jp
pop
mov
js
xchg
addr16
push
call
cmpsl
pop
dec
stos
jl
insb
mov
pop
add
jno
std
faddp
das
fstpl
stc
sub
sub
sub
jno
out
mov
pop
dec
mov
in
sbb
lret
and
xor
aam
dec
daa
mov
inc
jge
ficompl
sahf
out
mov
cmp
xchg
add
and
nop
add
pop
push
adc
jmp
insl
mov
scas
incb
pop
mov
loope
std
cmpsb
xchg
add
std
sub
fisubl
scas
cmpsb
and
sbb
ret
inc
repnz
adcl
stos
mov
inc
mov
push
mov
in
cwtl
int
dec
dec
xchg
or
and
cltd
lods
int3
sub
jle
lods
inc
divps
dec
inc
mov
dec
mov
mov
pop
add
sub
xlat
das
in
out
xor
push
adc
push
jb
lock
cmp
out
jne
adc
repnz
cmpsb
sbb
add
mov
sub
lret
lcall
arpl
mov
xor
fsubr
jge
popf
dec
jo
mov
sbb
jnp
cld
push
inc
cmpsb
or
sub
jnp
and
fidivl
mov
dec
sub
test
test
movsl
push
sub
into
mov
and
xor
and
popa
out
mov
fwait
les
and
orb
pop
mov
cmp
dec
add
test
enter
xchg
fcomps
sub
jg
btr
fnstcw
clc
pushf
cltd
sub
pushf
leave
push
mov
xor
repz
mov
pop
xor
fcoml
push
mov
adc
aaa
adc
fidivs
je
mov
or
push
js
dec
popa
pop
push
inc
mov
mov
mov
lret
mov
sarb
inc
dec
mov
mov
mov
jae
imul
mov
push
loope
enter
sub
dec
loopne
xchg
cmc
cmp
int3
pushf
lret
mov
cmpb
ja
xor
mov
mov
push
mov
stc
mov
xor
orb
pop
sbb
push
dec
cmc
lods
mov
jle
repz
push
jne
arpl
mov
jmp
int
mulb
sahf
inc
imul
and
dec
mov
call
sub
into
push
je
adc
cmp
mov
popa
in
lods
out
mov
sbb
cmp
into
test
mov
mov
ja
mov
rorl
jl
pop
call
push
stos
btc
add
loopne
jns
pop
adc
xor
popf
jnp
push
jbe
adc
jle
fucomp
xchg
movsb
xchg
mov
lahf
cmpsb
jge
push
add
mov
rolb
out
sub
and
jnp
sbb
dec
imul
jbe
xchg
popf
call
mov
inc
xor
les
ror
cwtl
stos
dec
mov
sarb
arpl
je
bound
sbb
out
outsb
roll
pop
and
cmp
mov
xlat
push
test
sahf
xchg
mov
cmc
dec
fcmovnbe
rcrl
out
shll
orl
and
imul
adc
jne
add
fdivrl
dec
movb
imul
rcll
inc
mov
ret
in
outsl
cmp
fidivrs
xlat
mov
in
cs
or
stos
mov
jbe
mov
lods
cmp
lock
repnz
out
xchg
into
aaa
push
rcll
repnz
add
cld
jecxz
mov
pusha
adc
popa
lahf
pop
mov
mov
popa
jge
xchg
ret
daa
insl
fidivl
in
add
daa
pushf
mov
aad
inc
push
dec
pop
pop
insb
mov
pop
inc
pop
test
mov
outsb
test
pop
adc
push
fistps
pop
and
sbb
inc
adcl
test
dec
insl
or
push
and
mov
aam
call
jo
jae
loope
std
filds
test
cld
mov
adc
insl
mov
inc
cmp
pop
cmp
mov
or
fiadds
stos
push
aad
adc
jle
cmpsl
les
adc
leave
repnz
fldenv
or
loop
sbb
fldl
cli
notl
inc
mov
or
jbe
push
add
int3
jnp
sbb
je
imul
fdiv
jo
pop
cmc
and
cmp
popa
lret
pop
sysret
icebp
cld
dec
sub
ljmp
lods
dec
and
out
fnsave
or
jg
test
repz
cmp
fidivs
mov
jecxz
add
mov
mov
frstor
mov
ss
sahf
mov
outsl
jp
push
xchg
and
cmp
out
movsb
jns
lds
inc
les
andl
sub
pop
jmp
and
cmpsl
in
inc
sub
jb
or
sbb
xor
mov
sub
loop
xchg
scas
loopne
jnp
cmc
inc
pop
rcr
or
ret
sub
xlat
xchg
cmp
cli
mov
loopne
push
mov
xchg
and
inc
xchg
shlb
addb
aam
clc
invd
cs
sub
dec
or
jp
lahf
js
out
inc
mov
orl
xor
orl
shr
xorl
shl
adcl
or
movzbl
sbb
mov
mov
mov
and
movl
sub
mov
neg
mov
xor
shr
negl
shl
or
subl
push
lea
sbbl
push
lea
orl
push
call
and
mov
cmpl
jb
jmp
push
push
pushl
pushl
call
mov
xor
shr
shl
or
push
lea
push
mov
sub
mov
shrd
shr
cmpl
jg
xor
add
mov
sub
imul
jmp
push
push
push
call
mov
mov
movl
xor
addl
xor
or
andl
lea
push
shl
movl
call
mov
sbb
mov
sub
xor
shl
adc
shr
or
mov
sub
push
sub
lea
push
orl
mov
inc
mov
incl
shrd
shr
or
mov
mov
sbbl
xor
shl
xor
movl
or
adcl
lea
push
call
and
mov
or
mov
cmpl
jl
mov
and
xorl
jmp
pushl
call
xor
shl
shr
or
addl
jmp
xchg
adc
inc
adc
xchg
popa
aaa
repnz
cmp
adc
addl
mov
adc
xlat
movsl
jp
mov
push
lcall
pop
add
push
inc
fldcw
xor
dec
pop
in
negl
popf
in
stos
jo
ret
add
cld
aad
push
pop
sub
pushf
lods
or
test
lock
addr16
out
xchg
sub
repz
add
inc
sbb
mov
dec
cs
loope
dec
icebp
aaa
popf
push
add
imulb
adc
jo
fisubrs
repnz
es
mov
ljmp
shlb
movsl
push
frstor
xchg
pop
sahf
jo
adc
jo
inc
jle
pop
and
in
sub
dec
xchg
test
lret
cmp
jnp
cmc
sbb
rcrb
enter
push
movsb
jl
mov
pop
jle
push
mov
or
loope
sub
xchg
fidivl
bswap
sbb
mov
mov
ret
jp
push
popa
hlt
test
popf
cmp
pop
lcall
or
cwtl
repz
mov
jecxz
adc
imul
shll
pop
pusha
add
aam
imul
mov
cmpb
fisubs
ds
scas
pop
aam
xchg
iret
dec
pop
push
jl
mov
mov
mov
addr16
mov
fwait
mov
ret
inc
pop
ret
out
dec
push
mov
stc
mov
rcpps
adc
cltd
pop
push
jle
push
and
ret
mov
fsubrl
dec
roll
mov
sub
cmp
mov
xchg
dec
ficomps
xchg
xor
pop
scas
sbb
popf
jns
pop
dec
sub
out
pop
mov
xchg
cmpsw
insb
mov
jns
pop
xchg
mov
roll
mov
ss
dec
mov
andb
xor
mov
js
or
inc
xor
and
adc
jo
or
pop
jno
xchg
or
pop
mov
ss
pushl
arpl
hlt
idivb
push
cmpsl
jbe
push
mov
mov
out
outsl
jbe
in
ds
mov
or
movsb
add
loopne
fidivrs
movsb
sub
add
mov
loope
loop
sbb
pop
test
jl
or
daa
pop
push
inc
adc
pop
pop
fists
xchg
inc
xchg
xchg
jmp
sub
sbb
xchg
push
inc
jp
es
mov
dec
lret
jl
inc
and
int
mov
out
pop
xchg
in
ljmp
mov
xchg
rep
push
inc
out
mov
popa
inc
loopne
pusha
dec
lock
add
rolb
decb
fwait
inc
fimull
jbe
add
movsbl
hlt
lods
mov
lcall
or
lcall
inc
shlb
ljmp
jecxz
cs
or
lret
insl
pop
mov
sbb
mov
xchg
arpl
enter
adc
mov
cmp
shlb
imul
out
call
faddl
call
sahf
lcall
imul
in
in
sub
push
mov
jne
nop
pop
ja
clc
rorl
fimull
arpl
cwtl
pop
and
inc
aam
xchg
subb
rorl
jns
cmc
jne
inc
fidivs
rcr
mov
xchg
and
jl
shll
adc
fdivs
xor
fdivrs
mov
jbe
es
jmp
push
stos
stos
test
push
repnz
ret
cmp
pop
mov
jmp
lret
out
mov
sti
adcl
xchg
les
cld
push
movsb
leave
jne
or
decb
or
incl
and
mov
popa
fstps
pusha
mov
stos
mov
ret
or
lods
mov
aam
gs
push
lahf
push
mov
mov
xor
sbb
leave
pop
dec
or
pop
mov
aam
es
mov
cmp
leave
add
jae
insl
lret
xlat
jg
mov
aas
pop
adc
mov
test
jg
mov
inc
pusha
inc
ret
testl
sub
cmp
inc
cmp
push
stc
jecxz
jle
stc
sbb
clc
repz
sar
outsb
mov
mov
mov
mov
pop
arpl
sbb
hlt
in
clc
nop
pop
inc
adc
sbb
scas
mov
add
push
mov
addl
in
pop
jno
xchg
inc
imul
mov
pop
sbb
mov
pop
cmp
and
in
sbb
cmp
rcrl
push
mov
add
mov
and
cs
jns
inc
imul
push
cmp
lds
xchg
inc
mov
cmp
dec
add
sbb
rorb
mov
pop
mov
or
jmp
jno
mov
mov
test
mov
arpl
notb
or
outsl
sahf
jmp
enter
sbb
fidivrl
mov
inc
lret
adc
in
or
and
inc
inc
shlb
ret
xchg
and
jae
push
mov
fistps
cmp
imul
test
les
stc
outsb
in
lods
fdivrs
je
pop
fimull
sub
cmp
push
adc
jge
and
mov
ds
and
call
movsb
or
dec
add
xor
fadds
ficomps
in
adcb
xorl
insb
cmpsb
push
add
loope
hlt
sahf
add
cli
add
imul
adc
loope
xor
push
lds
mov
insb
lret
addb
in
das
data16
cmc
jge
xchg
rorb
pop
test
cmpsb
cmpsl
scas
push
xchg
ljmp
jp
outsb
cmp
or
ds
ljmp
mov
clc
mov
sbb
inc
cs
subb
jl
in
cmp
cs
cld
andl
sbb
inc
lret
jge
cmp
fwait
jmp
test
jecxz
lret
pop
dec
inc
shll
loopne
sub
shl
das
ljmp
cli
shrb
pop
sbb
cwtl
mov
aad
frstor
pop
outsl
mov
lods
mov
adc
repz
mov
sub
jnp
pop
les
cmpsb
mov
cltd
pop
mulb
popf
data16
popa
pop
inc
mov
or
cmc
sub
pop
sub
cmp
or
sbb
mov
push
xor
add
pop
rorb
mov
or
mov
pop
sti
jg
inc
dec
repnz
cs
sti
rcrl
mov
out
cmp
xor
outsl
aad
cs
test
test
push
push
scas
into
sbbl
push
xor
lds
push
lea
sbb
push
adcl
mov
sub
mov
shrd
and
shr
mov
mov
adc
xor
xor
subl
or
shl
mov
sub
mov
movl
shrd
shr
adcl
mov
mov
xor
jmp
adc
sahf
dec
push
rcrl
iret
add
scas
adc
jno
push
fistps
sarl
ss
test
lods
inc
inc
push
fs
sub
xor
cmpsl
inc
jecxz
add
push
push
cmc
sti
je
jmp
movsl
mov
and
pop
mov
sahf
lds
inc
shrl
movsl
sbb
jg
mov
es
inc
pop
push
in
pop
loopne
sbb
loope
arpl
shl
jbe
ss
aaa
sub
xchg
xchg
repz
fimuls
inc
jmp
jge
mov
adc
popa
dec
jmp
imul
add
loopne
push
ds
mov
cmp
outsb
push
jae
or
push
hlt
cmp
test
dec
mov
jg
aad
lods
outsl
mov
cmp
call
test
clc
mov
mov
scas
inc
cwtl
pop
cmp
dec
and
mov
hlt
lods
hlt
leave
sub
pusha
lcall
cmc
nop
inc
xchg
mov
rcrb
imulb
std
mov
ret
cmp
out
iret
test
or
fidivrl
jo
xchg
negb
or
js
shrl
sbb
aam
push
je,pt
mov
jecxz
in
inc
popf
stos
or
add
adc
ss
int
pop
fwait
notl
jge
fsts
or
sub
push
repz
sahf
icebp
push
decl
outsl
mov
jb
xchg
lds
das
mov
mov
xchg
mov
push
sbb
or
pop
lret
pop
mov
filds
push
orl
lahf
ret
xchg
test
fbstp
arpl
mov
lea
pop
insb
push
sub
dec
pop
adc
fwait
and
outsl
dec
pop
bound
fidivrl
mov
rcrl
cmp
loop
data16
sbb
mov
xor
int
adc
fisubs
xchg
out
clc
or
in
loope
outsl
fistl
insb
movsl
in
push
jecxz
xchg
jbe
sahf
adc
call
shll
xlat
push
sbb
sub
sbb
in
aad
cwtl
xor
test
cmc
in
pop
dec
or
imul
in
js
ss
test
rcrb
mov
shll
sahf
inc
push
push
pop
mov
or
jo
jbe
imull
test
xchg
or
mov
dec
pop
mov
push
lea
inc
mov
mov
and
in
or
mov
mov
mov
jne
icebp
dec
idiv
sub
mov
roll
loope
xor
mov
shl
jns
push
movl
pusha
lods
mov
xchg
outsb
sub
int
testb
mov
movsl
or
and
pop
xchg
js
scas
jge
xchg
push
cmp
add
call
aam
enter
cltd
mov
lret
data16
or
je
fsts
cmpsb
push
dec
sahf
test
pop
leave
adc
cs
ficoms
xor
cmpsb
xor
pop
aaa
mov
imul
aam
push
mov
out
out
std
pop
push
cmp
cltd
daa
les
ss
lock
push
sar
jbe
sarb
adc
xchg
sbb
pushf
and
sbb
pop
push
jp
repz
dec
pop
add
xchg
sub
insl
dec
loope
fldcw
lods
dec
pop
jae
cld
jo
imul
push
stos
enter
adc
test
repz
lret
sub
loop
adc
mov
mov
xor
es
push
dec
popa
fisttpl
nop
fnstsw
stos
jae
sub
push
loopne
pop
push
loope
ljmp
inc
pushf
cmp
and
mov
inc
push
mov
push
dec
mov
jns
dec
pop
inc
sub
faddl
je
inc
mov
scas
loop
ret
sbb
add
fisttpll
pop
shl
fnsave
or
xchg
lods
mov
lods
mov
adc
ds
shll
pop
aas
cld
inc
ljmp
cwtl
mov
jp
int3
mov
dec
popf
push
mov
or
sub
fcmovu
ficoms
aad
fsubrl
rorl
clc
xchg
cmpsb
lahf
adc
xchg
jle
mov
mov
dec
jbe
test
lret
jbe
test
jmp
mov
sub
xchg
dec
lods
stos
cmp
fcomps
out
sbb
stos
sub
or
cmc
jns
pop
push
pop
int
pop
pushf
pop
and
or
or
mov
in
xor
fmul
xchg
mov
shrb
or
mov
loope
mov
mov
cld
xchg
fisttps
or
xor
lods
jg
xchg
inc
mov
ljmp
sbb
dec
add
pop
dec
imul
loopne
mov
cmpsl
mov
sbb
inc
add
in
stc
pop
fcomp
out
mov
ret
cmp
es
and
mov
sbb
jge
les
jb
inc
mov
adc
popa
call
sub
jl
dec
addb
pop
adc
sub
inc
ljmp
mov
inc
fs
add
jmp
enter
stos
loopne
clc
jae,pt
lods
rdmsr
push
adcl
test
mov
aam
xchg
xchg
push
adc
popa
cmpsb
push
imul
push
popf
movsl
mov
lods
xor
ss
add
sbb
push
pop
jg
and
dec
movsl
movsb
pop
sub
jns
int3
bound
adc
pop
lret
push
repnz
dec
xorb
push
loope
jo
mov
push
and
mov
scas
aas
jo
fxch
cmp
sbb
jbe
icebp
orl
jns
fsubrp
sbb
shll
push
dec
js
xor
adc
xor
comiss
xchg
aam
xchg
scas
test
xchg
testl
daa
ja
add
orl
inc
push
sarl
inc
or
sub
xchg
dec
dec
jmp
sbb
mov
outsl
cmp
and
fdivrp
test
xor
push
out
pushf
je
in
fistpl
ss
cli
push
test
clc
out
popa
ja
imul
insl
notl
and
jno
int3
sbb
lea
mov
and
das
xor
push
mov
xchg
and
and
insl
lret
les
aam
test
mov
popa
andb
jmp
cs
push
imul
and
jae
pop
adc
dec
cld
adc
xlat
push
or
in
dec
insb
fcomps
popa
xlat
outsl
dec
js
fistpll
push
inc
lret
adc
ret
add
stos
inc
fcmovu
addr16
loopne
sbb
xor
mov
cltd
fbstp
popa
sub
xchg
cmp
fs
or
xor
subl
or
add
lea
adcl
push
xorl
shl
call
mov
cmpl
jg
sub
and
jmp
pushl
push
call
mov
shl
xor
shr
or
push
lea
sub
push
cmpl
jg
xorl
jmp
push
pushl
pushl
push
push
push
call
mov
mov
shrd
shr
mov
mov
sub
xor
mov
adc
shl
mov
mov
mov
sbb
xor
or
mov
and
shrd
adcl
shr
adc
mov
mov
orl
xor
xor
andl
or
cmpl
jg
jmp
call
add
mov
shl
mov
shrd
shr
mov
adcl
mov
xor
xor
sbbl
or
notl
add
lea
push
shl
xorl
call
mov
xorl
mov
cmpl
jg
jmp
push
pushl
call
xor
shr
jmp
notl
notb
sub
and
lcall
adc
punpcklwd
xchg
shll
daa
push
loope
mov
and
cmpsl
adc
sbb
add
aam
pusha
in
pushf
lret
xchg
sub
shrl
mov
cmp
inc
cltd
mov
pop
enter
arpl
mov
lcall
or
clc
push
or
insb
nop
lods
clc
fisttps
iret
inc
mov
xor
adc
cld
popa
and
sub
int
adc
fiaddl
iret
jge
loop
mov
add
cmp
call
in
sahf
adc
insb
out
xor
fistps
xor
mov
xchg
push
les
fmul
in
push
xchg
insb
popf
lods
mov
push
dec
enter
push
jnp
in
ret
pop
movsb
enter
nop
stc
lea
push
mov
push
insl
jge
scas
push
jg
pop
mov
outsl
mov
dec
cli
mov
mov
and
scas
or
mov
mov
into
clc
leave
mov
pop
mov
jp
les
pop
jne
jae
fiadds
dec
sar
dec
cmp
in
sbb
cli
ljmp
imul
lea
mov
insb
or
mov
dec
insb
mov
sbb
jbe
add
cmp
cmp
cmp
mov
ret
aad
dec
jnp
cmp
out
xchg
addl
imul
stos
je
sub
pop
sub
mov
sub
loopne
cs
xchg
outsb
shlb
aaa
inc
inc
pop
and
aaa
gs
pop
sti
test
push
xchg
roll
xchg
jo
loope
or
mov
lea
push
cmpl
ja
and
jmp
push
push
push
pushl
call
mov
mov
shrd
shr
mov
mov
addl
xor
neg
xor
or
push
sbb
mov
movzbl
and
mov
mov
push
orl
pushl
subl
shl
call
lea
xor
add
add
push
add
mov
mov
cmpl
jbe
adc
or
jmp
push
push
push
call
shrd
shr
mov
mov
xor
xor
or
addl
push
adc
mov
push
adcl
pushl
subl
shl
call
cmpl
jge
sbb
jmp
pushl
pushl
push
push
pushl
pushl
call
mov
mov
mov
mov
mov
mov
sbbl
mov
rol
mov
adcl
xor
movl
mov
movl
cmp
movl
je
or
movl
mov
movl
mov
mov
mov
mov
mov
mov
add
mov
mov
xor
shld
shl
xor
mov
xor
inc
xor
mov
mov
mov
movzwl
mov
cltd
idiv
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
imul
mov
and
mov
and
mov
imul
mov
sub
mov
cmp
ja
mov
mov
mov
shrd
shr
mov
xor
shl
mov
xor
or
mov
mov
mov
xor
xor
shrd
mov
shll
xorl
xor
or
mov
shr
or
xor
cmp
ja
jae
mov
mov
movb
movb
movb
movb
mov
movzbl
mov
xor
mov
imul
movzbl
xor
and
add
mov
movb
movb
mov
mov
and
or
imul
mov
cmp
ja
movb
movb
movb
mov
mov
and
or
add
mov
movzbl
cltd
movzbl
idiv
mov
movb
movb
movb
mov
mov
xor
sub
mov
movzbl
movzbl
cltd
idiv
mov
cmp
jb
mov
mov
shrd
shr
mov
mov
xor
xor
or
sub
shl
mov
mov
shrd
shr
mov
mov
xor
xor
shl
mov
or
ror
jmp
mov
mov
mov
mov
mov
shrd
shr
mov
mov
xor
xor
or
shl
add
mov
mov
mov
mov
xor
xor
shrd
mov
shll
xorl
xor
or
mov
shr
or
xor
cmp
jb
ja
cmp
jb
mov
decl
jne
mov
mov
shrd
shr
mov
mov
xor
xor
or
push
add
push
lea
push
shl
call
mov
mov
shrd
shr
mov
mov
xor
xor
or
add
push
push
mov
shl
mov
shrd
shr
mov
mov
xor
xor
or
add
push
shl
call
push
lea
push
mov
mov
shrd
shr
mov
mov
xor
xor
or
add
push
shl
call
mov
mov
shrd
shr
mov
mov
pop
xor
xor
pop
shl
or
pop
leave
ret
push
mov
sub
not
mov
cmpl
jb
jmp
push
call
mov
mov
sub
push
mov
mov
sbb
mov
adc
orl
orl
add
mov
mov
add
mov
cmpl
ja
sbb
inc
jmp
pushl
pushl
push
pushl
push
pushl
call
mov
sub
mov
sbb
mov
cmpl
ja
or
jmp
push
push
push
call
orl
orl
lea
mov
mov
mov
not
mov
sbbl
add
neg
mov
mov
adcl
mov
mov
neg
shrd
cmpl
ja
or
jmp
push
push
push
pushl
push
call
shr
mov
mov
xor
xor
or
cmpl
jb
jmp
pushl
push
push
pushl
pushl
call
mov
movl
movl
movl
movl
movl
movl
xor
movl
movl
mov
add
movl
movl
cmpl
jge
adcl
adcl
jmp
pushl
push
push
call
movl
movl
movl
movl
movl
dec
movl
sbbl
movl
movl
movl
cmpl
ja
xor
add
sub
mov
jmp
push
push
push
call
movl
movl
movl
mov
shl
mov
andl
push
addl
push
push
push
andl
call
xorl
mov
xorl
mov
mov
mov
add
xor
add
mov
mov
sub
sub
mov
sbb
lea
and
mov
cmpl
jg
jmp
pushl
pushl
push
call
mov
or
and
mov
or
xor
cmp
movl
jne
not
mov
mov
shrd
cmpl
jbe
adc
jmp
push
pushl
push
pushl
pushl
call
shr
mov
mov
shl
xor
xor
subl
or
mov
mov
cmp
movl
jne
mov
add
mov
neg
xor
xor
or
sbb
mov
cmpl
jbe
jmp
pushl
call
mov
mov
shrd
mov
mov
xor
shr
cmpl
jbe
xor
jmp
push
push
call
mov
xor
or
shl
sub
mov
andl
mov
mov
add
adc
mov
and
mov
adc
mov
shrd
negl
shr
sub
mov
mov
cmpl
jg
add
jmp
pushl
pushl
pushl
pushl
pushl
call
xor
shl
xor
or
mov
mov
subl
shrd
shr
neg
mov
cmpl
jbe
adcl
jmp
pushl
pushl
pushl
call
mov
mov
xor
xor
or
shl
incl
lea
mov
cmpl
jl
dec
jmp
pushl
call
mov
shrd
shr
mov
mov
mov
adc
xor
cmpl
jbe
and
jmp
call
mov
xor
or
shl
imul
mov
dec
mov
sbbl
shrd
mov
or
mov
xorl
xor
orl
shr
mov
mov
addl
xor
subl
or
shl
sub
mov
movl
cmp
mov
mov
jg
sbb
mov
cmpl
jb
jmp
pushl
push
call
mov
shrd
mov
mov
xor
shl
xor
or
shr
subl
mov
sub
mov
mov
adcl
mov
subl
shrd
adcl
shr
add
mov
cmpl
jg
sbb
jmp
pushl
push
call
mov
mov
xor
xor
or
shl
orl
imul
addl
sub
jmp
mov
or
mov
mov
cmpl
jl
or
jmp
push
pushl
call
mov
shrd
mov
mov
xor
shl
addl
xor
adcl
or
andl
shr
cmpl
jg
jmp
pushl
push
push
push
call
mov
mov
mov
mov
shrd
shr
mov
cmpl
jg
mov
adc
or
jmp
push
pushl
pushl
pushl
pushl
push
call
mov
mov
xor
xor
or
shl
mov
mov
adc
add
add
xor
xor
adc
mov
mov
xor
add
adc
shrd
or
shr
movzbl
adc
mov
mov
xor
sbbl
shl
xor
movzbl
adc
or
neg
mov
add
movl
mov
mov
sub
imul
mov
cmpl
ja
or
jmp
push
pushl
pushl
pushl
call
mov
movl
mov
movl
mov
movl
adc
mov
xor
mov
cmpl
jbe
jmp
push
push
push
pushl
call
mov
shrd
shr
mov
mov
xor
shl
adcl
xor
or
movzwl
sbb
mov
lea
cmpl
jbe
and
jmp
pushl
push
pushl
pushl
call
mov
mov
mov
shrd
shr
mov
adcl
mov
subl
shl
adc
mov
xor
xor
sbbl
or
sbb
mov
or
mov
xor
cmpl
jl
jmp
push
push
push
call
mov
mov
shrd
shr
mov
mov
xor
shl
xor
adc
or
adcl
lea
mov
or
mov
cmpl
ja
add
jmp
pushl
pushl
push
call
mov
mov
shrd
shr
mov
mov
subl
shl
and
mov
xor
adcl
xor
xorl
or
cmpl
jle
inc
decl
jmp
push
call
mov
mov
or
mov
mov
shrd
notl
shr
mov
sub
mov
xor
addl
shl
addl
xor
sbb
or
lea
mov
mov
addl
mov
shrd
shr
xor
add
mov
sub
xor
mov
mov
addl
xor
shl
adc
mov
xor
addl
or
mov
sbb
mov
or
add
cmpl
jle
sub
negl
jmp
push
push
call
mov
mov
shrd
shr
mov
cmpl
jge
neg
jmp
pushl
push
push
call
mov
xor
xor
or
lea
mov
cmpl
jge
jmp
push
push
push
pushl
push
push
push
pushl
push
pushl
push
push
push
pushl
call
mov
shl
mov
shrd
shr
mov
mov
addl
xor
orl
xor
subl
or
xor
mov
shl
incl
mov
adcl
mov
orl
mov
addl
or
xor
mov
mov
andl
shrd
shl
sbbl
shr
mov
mov
or
xor
mov
xor
orl
or
mov
dec
orl
not
xorl
and
xor
or
xor
mov
xor
and
mov
cmpl
ja
sub
jmp
push
push
push
call
mov
xor
or
mov
mov
shrd
shr
mov
sbb
mov
mov
adc
mov
mov
xor
xor
xor
adc
mov
addl
xor
andl
shl
subl
mov
addl
or
mov
mov
cmp
je
xorl
mov
xor
add
mov
sub
and
sub
cmpl
ja
add
jmp
pushl
push
pushl
push
push
push
call
mov
mov
mov
shl
xor
mov
mov
mov
subl
xor
adcl
xor
sbbl
shrd
shr
xorl
or
xor
or
mov
mov
mov
mov
xor
shl
xor
mov
mov
mov
mov
xor
xor
shrd
or
shr
mov
mov
or
mov
cmp
jne
cmp
je
jmp
mov
mov
mov
shl
xor
mov
mov
mov
xor
xor
shrd
xor
or
mov
mov
mov
mov
xor
shr
or
mov
mov
shl
xor
mov
mov
xor
mov
mov
xor
shrd
or
shr
mov
mov
or
mov
mov
mov
cmp
jne
mov
cmp
je
mov
mov
mov
mov
lea
mov
mov
mov
mov
mov
shrd
mov
mov
xor
shr
mov
xor
shl
or
mov
mov
mov
xor
shld
xor
mov
mov
shl
mov
mov
xor
mov
cmp
jne
mov
cmp
jne
mov
mov
mov
mov
mov
xor
shl
mov
mov
xor
mov
mov
xor
xor
shrd
or
shr
mov
mov
or
mov
mov
push
pushl
push
push
call
mov
mov
shrd
shr
shr
xor
push
xor
mov
mov
mov
push
push
push
call
shld
mov
xor
or
mov
mov
shl
or
xor
xor
xor
xor
mov
mov
jmp
mov
add
mov
mov
mov
mov
mov
mov
movzwl
cltd
shld
xor
mov
mov
shl
mov
mov
xor
mov
cmp
jne
mov
cmp
jne
movl
mov
movl
mov
movl
mov
movl
mov
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
add
mov
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
mov
mov
xor
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
add
mov
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
mov
mov
or
mov
mov
shrd
shr
mov
mov
xor
xor
or
add
shl
mov
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
mov
mov
add
mov
mov
shrd
xor
shr
mov
mov
shl
mov
xor
or
mov
add
shrd
xor
shr
mov
mov
xor
or
mov
or
mov
mov
shl
shl
mov
mov
xor
xor
mov
mov
xor
shrd
shr
or
xor
or
mov
mov
mov
mov
xor
shl
xor
mov
mov
mov
mov
xor
xor
shrd
or
shr
mov
mov
or
mov
cmp
jne
cmp
jne
jmp
mov
mov
mov
mov
mov
xor
shl
mov
mov
xor
mov
mov
xor
xor
shrd
or
shr
mov
mov
or
mov
mov
push
pushl
push
push
call
mov
mov
shrd
shr
shr
xor
push
xor
mov
mov
mov
push
push
push
call
shld
shl
mov
or
xor
or
xor
xor
mov
mov
mov
mov
mov
mov
shl
xor
mov
mov
mov
xor
xor
shrd
shr
or
xor
or
mov
mov
mov
mov
xor
shl
mov
mov
xor
mov
mov
xor
xor
mov
shrd
or
shr
or
cmp
jne
cmp
je
pushl
pushl
pushl
push
push
call
pop
leave
ret
push
mov
sub
push
movl
movl
movl
push
movl
mov
mov
push
push
push
call
mov
mov
or
or
add
adc
push
push
push
push
call
mov
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
imul
mov
mov
xor
mov
mov
xor
mov
mov
and
xor
mov
sub
mov
sub
mov
imul
sub
mov
movl
movl
mov
mov
or
mov
imul
mov
movl
movl
movl
mov
mov
or
xor
div
mov
mov
sub
mov
xor
div
mov
xor
pop
mov
movl
movl
movl
mov
mov
sub
mov
div
mov
or
mov
sub
mov
mov
movl
movl
mov
mov
xor
lea
xor
leave
ret
push
mov
sub
push
push
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
xor
mov
div
mov
mov
mov
xor
mov
xor
mov
mov
or
lea
mov
xor
mov
and
xor
mov
div
mov
xor
sub
mov
sub
add
mov
mov
and
xor
div
mov
mov
imul
sub
add
cmp
ja
push
movl
movl
movl
mov
mov
add
xor
div
mov
mov
imul
imul
lea
mov
mov
mov
mov
mov
mov
mov
mov
xor
imul
lea
mov
mov
or
lea
mov
xor
mov
and
xor
mov
div
mov
mov
sub
mov
sub
add
mov
mov
and
xor
div
mov
imul
sub
add
cmp
jbe
pop
pop
pop
leave
ret
push
mov
sub
push
xor
xor
mov
sub
xor
push
push
movl
movl
mov
and
movl
movl
mov
mov
and
sbbl
mov
xor
inc
and
and
add
cmpl
jle
xor
sub
jmp
pushl
call
xor
mov
movl
movl
mov
cmpl
jb
xor
jmp
pushl
call
xor
sub
mov
imul
xor
mov
movzbl
sub
mov
div
mov
xor
or
sub
xor
sub
mov
cmpl
jl
sbb
jmp
push
pushl
pushl
call
movl
movl
movl
movl
movl
movl
sbbl
mov
xor
or
adc
mov
sub
imul
xor
add
mov
sub
or
add
or
and
cmpl
jge
xor
xor
mov
and
and
jmp
push
call
sub
mov
sub
add
mov
mov
orl
sub
or
add
cmpl
jg
mov
sbb
mov
adc
jmp
pushl
call
mov
xor
div
xor
mov
xorl
sub
mov
andl
add
sbbl
mov
movl
movl
not
movl
or
mov
sbb
xor
and
add
add
mov
xorl
xor
subl
div
and
mov
or
sub
cmpl
jl
jmp
push
push
push
push
call
mov
movl
movl
movl
movl
mov
mov
orl
xor
cmpl
ja
jmp
pushl
pushl
push
pushl
push
pushl
call
xor
push
pop
div
mov
xor
div
mov
or
cmpl
jle
or
jmp
pushl
push
push
push
push
call
sub
mov
movl
mov
mov
xor
sbbl
div
cmpl
jg
jmp
push
push
call
imul
xor
xor
imul
xor
mov
movl
movl
movl
mov
and
mov
orl
xor
adcl
div
mov
imul
add
xor
and
mov
sbbl
sub
mov
sbbl
movl
mov
mov
sbb
and
xor
and
sub
or
cmpl
ja
jmp
push
pushl
call
xor
mov
movl
movl
movl
mov
and
or
add
xor
add
or
andl
or
dec
sub
cmpl
jg
inc
mov
sub
jmp
pushl
call
mov
movl
movl
movl
and
mov
shr
sub
cmpl
ja
mov
and
jmp
push
push
call
xor
mov
lea
push
call
mov
or
or
mov
add
or
add
and
lea
adc
mov
and
movl
movl
movzwl
adc
movl
sub
movl
mov
sbb
mov
movl
subl
movl
movl
mov
mov
sub
imul
movl
mov
orl
mov
and
sub
mov
lea
adc
mov
mov
cmpl
jbe
sub
adc
jmp
push
push
pushl
pushl
call
mov
mov
imul
and
imul
or
mov
lea
mov
movzbl
xor
movl
movl
movl
and
movl
or
mov
mov
mov
sub
or
mov
mov
andl
xor
xorl
xor
adcl
mov
subl
call
xor
or
or
mov
mov
mov
mov
cmpl
jle
xorl
jmp
pushl
pushl
push
call
mov
xor
xor
mov
call
or
cmpl
jle
jmp
push
push
pushl
call
or
mov
mov
xor
xor
mov
call
or
mov
cmpl
jb
jmp
push
call
mov
mov
mov
xor
xor
mov
mov
addl
mov
mov
mov
andl
call
mov
adcl
or
mov
or
subl
push
adcl
push
andl
push
addl
push
addl
call
mov
mov
cmp
movl
jne
mov
mov
xor
xor
mov
call
xor
mov
mov
sub
mov
adc
mov
addl
xor
xor
andl
mov
call
or
movl
or
add
mov
adc
mov
xorl
xor
xor
mov
adcl
call
sub
mov
mov
xor
mov
mov
mov
sbb
mov
mov
xor
subl
xor
mov
mov
xorl
mov
decl
call
adcl
or
movl
mov
andl
or
push
subl
push
push
addl
push
xorl
call
mov
movl
jmp
jmp
cmpl
jg
add
jmp
push
call
lea
mov
mov
movl
mov
xor
cmpl
ja
jmp
push
call
shr
mov
xor
shl
or
mov
mov
mov
mov
mov
mov
movl
xor
xor
mov
sbbl
call
neg
mov
mov
adcl
mov
xorl
mov
andl
xor
adcl
xor
mov
movl
call
or
and
or
cmpl
jge
orl
movzbl
xor
jmp
push
push
push
call
mov
mov
xor
xor
movl
mov
subl
call
sbb
mov
sub
mov
xorl
mov
mov
subl
xor
subl
xor
mov
mov
mov
mov
incl
mov
call
sbb
mov
addl
or
sub
mov
or
push
subl
push
addl
push
push
sbbl
call
mov
cmp
movl
je
cmpl
jbe
jmp
push
push
call
mov
mov
xor
xor
mov
call
mov
mov
cmpl
ja
jmp
push
pushl
push
call
mov
mov
xor
xor
mov
call
or
or
sbbl
mov
imul
cmpl
jle
not
decl
jmp
push
pushl
push
pushl
push
pushl
call
add
mov
mov
mov
jmp
movl
jmp
cmpl
jb
xorl
jmp
push
call
mov
mov
xor
xor
mov
call
mov
xor
mov
mov
mov
xorl
xor
addl
xor
adcl
mov
call
subl
or
or
adc
mov
mov
xor
adcl
xor
mov
call
adc
mov
cmpl
jb
jmp
pushl
call
mov
mov
mov
xor
xor
mov
mov
mov
orl
call
or
or
mov
or
push
push
negl
push
push
subl
call
movl
mov
jmp
movzbl
adc
mov
mov
and
mov
xor
andl
xor
movl
mov
addl
call
add
mov
mov
mov
mov
sub
mov
cmpl
ja
movl
jmp
pushl
push
call
mov
xor
xor
mov
call
or
or
mov
movl
jmp
mov
cmpl
jl
jmp
pushl
push
push
call
mov
xor
xor
mov
call
mov
mov
sub
mov
xor
or
or
mov
xor
xor
subl
mov
call
xor
or
xorl
or
xor
mov
mov
add
mov
xorl
xor
sbb
mov
sub
sub
sbb
mov
xor
xor
or
xor
movzwl
and
add
cmpl
jge
jmp
push
call
mov
movl
movl
movl
movl
movl
movl
and
movl
xor
movl
cmpl
jl
mov
mov
and
adc
jmp
pushl
pushl
pushl
push
pushl
pushl
push
push
call
mov
add
mov
sub
cmpl
jbe
jmp
push
push
push
push
call
xor
push
pop
div
mov
xor
add
mov
xor
mov
xor
div
dec
or
sbb
mov
cmpl
jg
orl
jmp
pushl
pushl
call
xor
mov
sub
mov
mov
sub
cmpl
jle
xor
jmp
push
push
pushl
call
mov
xor
mov
div
mov
xor
sbbl
div
orl
mov
sub
mov
mov
add
lea
mov
movl
movl
movl
movl
movl
movl
movl
mov
or
mov
xor
div
mov
xor
div
mov
lea
mov
mov
sub
mov
xor
mov
div
mov
imul
add
xor
mov
add
mov
and
xor
mov
mov
add
add
mov
movl
movl
movl
movl
movl
movl
movl
mov
mov
imul
imul
mov
imul
mov
sub
add
mov
and
mov
sub
imul
mov
mov
or
sub
xor
mov
div
xor
mov
mov
add
add
mov
andl
jmp
mov
inc
mov
mov
mov
cmp
je
mov
mov
mov
add
mov
mov
mov
mov
mov
movl
movl
movl
movl
lea
mov
mov
movzwl
xor
movzwl
sar
mov
movzwl
xor
movzwl
shl
or
movzwl
mov
mov
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
movzbl
push
lea
push
call
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
add
mov
mov
cmp
je
mov
mov
movzwl
xor
movzwl
sar
mov
mov
movzwl
xor
movzwl
shl
or
movzwl
mov
mov
mov
movzwl
xor
movzwl
sar
mov
mov
movzwl
xor
movzwl
shl
or
mov
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
mov
or
je
lea
mov
mov
xor
mov
call
mov
mov
mov
xor
mov
call
or
or
xor
xor
mov
mov
mov
mov
movsbl
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
movsbl
cmp
je
mov
movsbl
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
movsbl
cmp
je
jmp
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
movsbl
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
movsbl
cmp
jne
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
add
mov
jmp
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
mov
cmpl
je
mov
mov
movzwl
mov
mov
mov
jmp
jmp
cmpl
jne
xor
jmp
mov
add
mov
movl
cmpl
je
cmpl
je
mov
shl
mov
movl
sub
mov
movl
mov
cmp
je
mov
mov
mov
mov
mov
mov
mov
inc
mov
jmp
movl
push
jmp
push
mov
sub
push
movl
movl
movl
mov
mov
add
xor
mov
lea
mov
add
mov
movl
movl
mov
mov
add
xor
div
mov
xor
push
sub
imul
xor
lea
mov
movl
movl
movl
mov
mov
shr
sub
mov
imul
div
xor
or
xor
mov
movl
movl
movl
mov
mov
or
sub
or
mov
lea
mov
movl
movl
mov
mov
add
imul
xor
and
mov
movl
movl
mov
mov
and
sub
add
mov
movl
movl
mov
add
pop
div
mov
sub
add
imul
mov
movl
movl
movl
movl
movl
movl
mov
mov
mov
sub
mov
sbb
mov
mov
add
mov
adc
mov
or
or
add
mov
adc
mov
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
or
mov
sub
mov
imul
mov
sub
imul
xor
add
xor
push
mov
add
imul
mov
div
mov
lea
push
mov
mov
mov
mov
push
push
push
push
call
mov
mov
xor
sub
and
xor
mov
mov
lea
push
mov
push
pop
xor
div
mov
sub
add
and
lea
call
mov
mov
imul
mov
sub
add
mov
xor
sub
cmp
jne
mov
mov
sub
mov
sub
add
xor
xor
lea
mov
push
mov
and
xor
imul
mov
div
push
mov
add
push
mov
mov
imul
and
mov
imul
mov
xor
pushl
call
mov
mov
lea
mov
incl
mov
mov
xor
shld
shl
mov
mov
xor
xor
cmp
jne
cmp
jne
mov
mov
jmp
lea
mov
mov
mov
mov
mov
sub
mov
mov
mov
sub
mov
movl
movl
mov
mov
mov
mov
pushl
pushl
pushl
pushl
pushl
push
push
pushl
mov
call
mov
mov
pushl
call
mov
push
add
push
push
call
mov
jmp
mov
mov
pop
leave
ret
push
mov
and
sub
push
push
lea
mov
mov
mov
mov
sub
sbb
mov
orl
orl
lea
push
lea
push
call
mov
mov
pushl
mov
pushl
mov
pushl
pushl
pushl
pushl
pushl
call
pop
pop
mov
pop
ret
push
mov
and
sub
push
push
push
mov
pushl
pushl
call
test
je
movl
movl
movl
push
movl
adc
mov
andl
mov
andl
push
addl
push
push
adcl
call
push
subl
push
xorl
and
sbbl
and
push
push
orl
call
xor
xor
and
mov
cmpl
jbe
and
jmp
call
mov
xor
or
mov
xor
or
notl
mov
xorl
movl
movzbl
and
mov
movl
add
movl
movl
sub
movl
adc
movl
cmpl
jb
adcl
jmp
pushl
push
push
push
call
mov
mov
mov
mov
or
mov
or
mov
mov
sbb
mov
adcl
sub
mov
movl
sbb
mov
xor
xor
subl
and
sbbl
and
cmp
movl
jne
movl
cmp
movl
jne
sub
movl
sbbl
movl
adc
movl
cmpl
jl
sbbl
xor
jmp
push
push
pushl
pushl
push
pushl
call
movl
movl
mov
mov
sub
adc
mov
subl
imul
adcl
and
negl
imul
mov
addl
pushl
imul
incl
xor
mov
adc
mov
sbbl
div
xor
mov
adcl
xor
sbb
mov
sub
or
xor
sbbl
pushl
addl
pushl
call
andl
pushl
call
andl
movl
movzbl
sub
movl
cmpl
jge
negl
jmp
pushl
push
push
push
call
movl
movl
movl
movl
mov
mov
sub
mov
mov
add
mov
adc
cmpl
jge
and
jmp
pushl
push
pushl
push
pushl
push
call
mov
add
adc
and
mov
and
orl
mov
movl
decl
movl
addl
movl
xorl
movl
subl
dec
cmp
jne
movzwl
or
movl
mov
xorl
mov
movl
addl
mov
call
xor
lea
mov
mov
sub
sub
mov
lea
adc
mov
mov
cmpl
jbe
jmp
pushl
push
push
call
mov
mov
mov
xor
shl
shr
or
xor
mov
add
mov
or
mov
and
mov
xor
or
xor
or
sub
sub
mov
cmpl
ja
andl
jmp
push
pushl
pushl
call
mov
mov
shrd
shr
mov
mov
subl
xor
sbbl
xor
xorl
or
cmpl
ja
subl
jmp
push
push
pushl
push
pushl
pushl
call
mov
push
pushl
lea
push
shl
call
adcl
lea
subl
push
mov
mov
andl
lea
andl
push
adcl
mov
subl
lea
notl
mov
mov
orl
mov
push
xorl
call
xorl
push
addl
push
pushl
addl
call
mov
cmpl
ja
mov
xor
jmp
push
pushl
push
push
push
push
call
mov
mov
mov
shr
shl
or
mov
mov
sub
sub
mov
xor
xor
mov
or
xor
mov
lea
mov
cmpl
jle
adc
jmp
pushl
push
push
call
lea
mov
mov
sub
lea
xor
sbb
movl
movl
mov
sub
movl
movl
orl
mov
adcl
mov
sub
add
mov
mov
movl
adc
xor
cmpl
jb
and
jmp
push
push
push
call
xor
and
mov
and
mov
movl
movl
movl
movl
sbb
movl
add
movl
andl
mov
sub
mov
adc
mov
cmpl
jl
and
jmp
push
call
mov
push
push
or
or
push
addl
push
xorl
call
mov
negl
mov
sub
mov
movl
sbb
mov
mov
cmp
jne
cmp
je
and
movl
movl
movl
xor
add
mov
sub
xor
movl
mov
mov
sub
xor
mov
mov
mov
cmpl
jb
jmp
pushl
pushl
pushl
push
pushl
call
mov
add
adc
xor
xor
and
mov
and
mov
movl
movl
movl
and
movl
sub
movl
cmpl
jl
add
jmp
pushl
call
movl
movl
movl
mov
mov
push
push
xor
adcl
xor
push
push
call
addl
mov
andl
mov
push
push
push
sbbl
push
call
cmpl
jl
subl
jmp
call
mov
mov
push
push
push
push
andl
call
mov
sbb
mov
mov
mov
andl
add
movl
mov
adc
mov
cmp
movl
jne
movl
cmp
movl
je
xor
mov
xor
mov
addl
xor
adcl
shld
mov
and
shl
mov
mov
sbb
mov
sbbl
xor
subl
xor
mov
movl
cmp
movl
jne
movl
cmp
je
mov
mov
cmp
je
cmpl
jl
sub
jmp
pushl
call
mov
mov
mov
shl
xor
mov
mov
cmpl
jle
and
jmp
pushl
push
push
call
mov
xor
xor
shrd
xor
shr
or
or
mov
movl
mov
movl
cltd
movl
cmp
movl
jne
cmp
movl
jne
movzwl
add
movl
cmpl
jge
mov
add
jmp
push
push
call
movl
mov
mov
mov
xor
orl
shld
adcl
shl
movl
mov
mov
xor
sbbl
xor
mov
cmp
jne
movl
cmp
movl
jne
movl
mov
mov
shrd
shr
mov
mov
mov
mov
mov
shl
mov
xor
xor
or
cmp
jne
mov
mov
mov
mov
mov
mov
movzwl
mov
and
mov
or
mov
add
or
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
or
mov
or
mov
sub
mov
sub
mov
cmp
jbe
mov
mov
mov
mov
movzwl
mov
or
mov
sub
mov
or
imul
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
sub
mov
xor
mov
imul
mov
and
mov
and
mov
cmp
ja
mov
mov
shrd
xor
mov
shr
mov
xor
or
push
push
shl
push
lea
push
lea
push
call
pushl
pushl
pushl
pushl
call
mov
mov
mov
mov
shrd
shr
shl
xor
mov
xor
or
mov
mov
mov
mov
shrd
xor
mov
shl
shr
mov
xor
or
mov
mov
mov
mov
mov
cmp
jne
mov
mov
mov
cmp
jne
movb
movb
movb
movb
mov
mov
or
sub
mov
sub
movzbl
movzbl
cltd
idiv
movzbl
or
mov
movb
movb
movb
movb
movb
mov
mov
or
and
mov
imul
mov
movzbl
movzbl
and
mov
movzbl
cltd
idiv
mov
cmp
je
lea
push
lea
call
cmp
jne
cmp
jne
xor
jmp
xor
inc
jmp
mov
mov
mov
mov
add
adc
mov
mov
jmp
mov
push
push
lea
push
call
mov
push
pushl
lea
push
call
mov
mov
mov
mov
mov
mov
mov
lea
mov
add
movl
movl
mov
and
add
and
sub
and
mov
movl
mov
mov
or
add
cmp
je
mov
mov
mov
xor
shld
shl
xor
xor
cmp
jne
cmp
je
mov
mov
mov
mov
xor
shr
shl
or
xor
shld
shl
xor
xor
cmp
jne
cmp
je
mov
cltd
mov
mov
cltd
shld
shr
xor
shl
or
or
mov
mov
xor
xor
mov
cmp
jne
cmp
je
pushl
pushl
mov
mov
pushl
mov
call
mov
mov
mov
mov
push
add
push
lea
push
call
mov
mov
pop
pop
pop
mov
pop
ret
movl
cmp
movl
jae
movl
cmp
jae
shld
movl
shl
ret
mov
addl
xor
and
shl
ret
xor
xor
ret
push
mov
sub
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
mov
and
and
or
mov
sub
mov
mov
sub
add
add
mov
xor
cmp
jne
mov
mov
xor
div
push
push
push
xor
mov
mov
mov
mov
mov
imul
mov
div
mov
sub
xor
shl
imul
sub
xor
mov
mov
add
mov
add
mov
mov
mov
xor
and
mov
imul
mov
sub
or
mov
pop
xor
pop
pop
cmp
je
mov
jmp
mov
mov
sub
or
imul
add
jmp
movl
movl
movl
mov
mov
add
imul
mov
or
xor
mov
div
xor
leave
ret
push
mov
sub
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
xor
sub
and
sub
push
movl
movl
movl
movl
mov
mov
imul
mov
imul
xor
div
mov
mov
push
shr
and
xor
mov
sub
mov
mov
mov
and
imul
mov
imul
add
mov
sub
mov
mov
add
xor
pop
div
mov
push
and
sub
xor
add
mov
mov
and
imul
mov
imul
or
xor
pop
sub
mov
mov
or
mov
or
mov
add
or
mov
or
lea
cmp
jbe
pop
leave
ret
negl
subl
movl
cmpl
movl
je
cmpl
jbe
xor
jmp
push
pushl
pushl
pushl
push
push
push
pushl
push
push
push
push
pushl
push
call
add
mov
mov
pop
pop
pop
leave
ret
mov
mov
ret
orl
mov
mov
notl
or
mov
movl
jne
mov
sbbl
mul
ret
xorl
push
mul
and
mov
add
mov
mull
add
mov
mul
add
pop
ret
incl
push
mov
sbb
push
mov
andl
or
movl
jne
mov
mov
sub
imul
mov
mov
xor
div
andl
mov
and
mov
movl
div
not
mov
jmp
and
mov
andl
mov
movzbl
xor
mov
cmpl
jge
jmp
pushl
pushl
call
mov
shr
rcr
shr
rcr
or
jne
div
mov
mull
mov
mov
mul
add
jb
cmp
ja
jb
cmp
jbe
dec
xor
mov
pop
pop
ret
