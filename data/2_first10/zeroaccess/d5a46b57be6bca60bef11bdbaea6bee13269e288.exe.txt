push
mov
sub
mov
mov
and
push
movzbl
add
push
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jb
jmp
push
push
push
pushl
push
call
jmp
push
andl
mov
inc
mov
cmpl
jbe
jmp
pushl
call
cmpl
jb
mov
inc
xor
mov
add
mov
and
mov
xor
mov
sub
mov
adc
mov
xor
mov
neg
mov
sbb
movl
and
mov
mov
mov
sbb
xor
andl
mov
inc
mov
cmpl
jg
jmp
pushl
push
call
cmpl
jb
add
mov
adcl
mov
sub
mov
movl
cmpl
je
cmpl
jg
jmp
push
pushl
pushl
call
mov
dec
mov
jmp
mov
movl
cmpl
je
cmpl
jbe
jmp
push
call
mov
dec
mov
jmp
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jge
jmp
push
push
call
cmpl
jne
xor
add
inc
mov
jmp
mov
andl
mov
inc
mov
cmpl
jl
jmp
call
cmpl
jne
mov
inc
mov
cmpl
jb
push
xor
or
sub
pop
orl
sub
andl
mov
inc
mov
cmpl
jg
jmp
push
call
cmpl
jb
add
sub
movl
mov
movl
adc
mov
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jle
jmp
push
push
pushl
push
push
pushl
call
cmpl
jne
xor
add
inc
mov
jmp
mov
adcl
mov
mov
sbbl
xor
add
mov
lea
mov
mov
jmp
mov
xchg
pop
xchg
pusha
pop
sub
jp
fstpl
jp
sub
xor
xor
imul
inc
aad
icebp
pusha
dec
imul
jo
pop
iret
pop
dec
xor
jg
xorb
pushl
cli
arpl
in
cmp
mov
mov
mulps
fstl
push
cli
sbb
imul
and
mov
jmp
enter
cli
js
jae
cwtl
pop
mov
add
fisubrl
fs
mov
mov
int3
mov
push
bound
add
lods
dec
lret
rclb
std
bound
stc
push
into
jo
pop
and
aas
mov
jne
arpl
cld
out
inc
xchg
testl
mov
and
je
xor
xor
imul
mov
std
push
push
pop
aam
into
jp
stc
stos
pop
clc
and
inc
in
cmp
out
adc
hlt
in
lds
orl
cli
xor
in
jmp
and
movsl
push
xor
mov
dec
pop
mov
stos
mov
xor
xchg
inc
jbe
scas
les
out
insl
or
xchg
inc
jle
fisubs
loope
movsl
mov
sahf
mov
cli
leave
in
adc
add
out
xchg
push
xchg
repnz
fs
data16
imul
imul
jg
and
addr16
mov
push
cmp
xor
aas
data16
stos
inc
jb
xor
pop
jnp
test
call
stc
xchg
repnz
inc
sub
in
and
es
cmp
mov
sub
push
jecxz
xchg
dec
push
add
fsubp
inc
hlt
aaa
jns
out
addr16
aam
in
nop
push
cltd
outsl
fstpl
cld
add
jnp
push
in
int
and
push
sti
lret
pusha
mov
adc
mov
fnsave
enter
add
pop
pop
sub
test
arpl
scas
xor
scas
dec
shl
xchg
push
push
ljmp
test
xor
arpl
jae
inc
mov
aad
or
sub
cmp
sarb
xchg
pop
mov
gs
push
sub
dec
out
fucomip
mov
or
out
add
popa
jbe
cmp
enter
xor
pop
and
add
pop
inc
pop
inc
rol
xchg
imul
inc
jns
roll
jbe
test
mov
or
es
xchg
lock
out
jbe
cmp
repnz
or
and
jbe
push
sahf
jb
adc
ret
fstps
cmp
pusha
sub
je
lahf
jns
mov
and
sub
push
gs
cmp
xor
mov
dec
jno
repnz
notl
and
and
xor
call
and
into
xchg
shr
inc
rcl
jg
idiv
lret
loop
cs
movl
adc
pop
inc
stc
inc
pop
int3
adc
push
fisubrl
pushf
add
fcomip
shlb
jnp
movsl
mov
push
xor
clc
xchg
pop
out
xor
sub
hlt
iret
xchg
sarl
inc
pop
nop
call
jle
test
xchg
and
cmc
push
std
fisubrs
mov
repz
mov
jge
aad
or
sahf
add
pop
jge
cmp
loopne
pushf
fildll
push
jle
test
xor
repnz
or
inc
call
xchg
push
aas
inc
xor
pop
cmp
sbb
jo
adcb
pop
cwtl
push
pusha
dec
in
enter
and
fldt
pop
xchg
lret
sbb
jnp
les
negb
push
addr16
sbbb
shll
addr16
inc
mov
sub
cltd
jg
mov
push
stc
adc
shl
dec
jns
cmpsb
sahf
fiadds
lds
js
add
scas
enter
inc
mov
sub
push
mov
adc
mov
sbb
fdiv
mov
in
sarb
xor
rclb
test
adc
push
and
lock
inc
push
sarl
fcoms
dec
mov
mov
mov
fnstenv
aas
dec
mov
incl
xchg
mov
in
dec
stos
dec
ljmp
mov
and
xchg
xchg
or
repnz
jge
imul
scas
xchg
popa
add
mov
dec
jns
jbe
imul
mov
fcompl
bound
pusha
add
pop
fistps
aad
sbb
cmp
fmull
ljmp
out
fst
js
aad
aas
mov
test
fmuls
mov
dec
or
lahf
pushf
xchg
loopne
mov
add
sub
push
sbbb
sbbb
pop
xchg
jge
testl
shll
call
push
popl
pop
and
hlt
mov
jbe
jmp
in
hlt
sub
ss
mov
mov
fnstenv
mov
lahf
pop
mov
inc
xchg
mov
mov
pop
inc
addb
adc
lret
xlat
and
mov
aas
sub
inc
testl
cmc
jg
leave
sbb
push
sub
or
aaa
aam
addb
js
mov
sbb
jns
test
mov
add
jge
cmp
cmp
cmpsw
mov
ret
push
push
vxorps
mov
scas
jne
ret
sahf
inc
ljmp
stos
sub
out
gs
and
jb
hlt
add
or
aam
mov
add
lea
aaa
data16
jge
outsl
jns
mov
and
je
rclb
or
out
cmp
cltd
stos
adc
or
pop
test
adc
outsb
js
push
jo
sub
andl
data16
inc
xchg
pop
mov
outsb
data16
cmp
xor
mov
pop
cli
pop
add
cmp
cmp
enter
das
xlat
dec
push
xchg
and
out
dec
insb
inc
lea
inc
hlt
movsl
jp
ret
lods
jp
mov
jecxz
dec
inc
or
fbstp
pop
pop
sbb
shlb
enter
fadd
jne
hlt
jg
xchg
and
bnd
push
inc
scas
inc
movsl
xchg
fcoms
rorb
dec
pop
fisubs
jecxz
ja
jns
inc
ret
push
xor
xor
xchg
repz
add
mov
pushf
movzwl
shll
cmp
popl
lcall
pop
pop
or
cltd
mov
cmpsl
ja
notb
push
mov
cmc
dec
out
fidivrl
aad
cmp
mov
xor
mov
push
adc
pop
dec
mov
xor
lret
pop
pop
sub
fldt
sub
push
pop
or
pushf
jbe
data16
fmuls
out
push
shlb
and
push
cltd
int
loopne
and
mov
bound
mov
xchg
test
and
mov
test
jge
leave
addr16
mov
rclb
jb
shrb
jmp
aad
fnstcw
fmul
add
pop
daa
lods
inc
int3
push
xchg
es
sub
faddp
in
push
mov
in
icebp
stos
inc
lret
xchg
nop
inc
push
inc
mov
mov
nop
pop
adc
mov
dec
arpl
shll
out
pop
inc
adc
push
out
hlt
or
or
sahf
cli
or
pop
ss
xor
cmpl
fwait
xchg
push
jp
scas
pop
mov
out
sbb
idiv
inc
fs
into
and
xchg
insb
pop
add
jne
cmp
or
leave
test
push
in
jo
sbb
dec
mov
addr16
mov
popf
push
sub
mov
imul
jge
out
es
popl
in
cmpsl
data16
out
insl
mov
inc
inc
mov
int
insb
pop
icebp
call
jns
adcb
xchg
imul
mov
xor
dec
adc
sub
mov
mov
lret
rorl
addr16
rolb
popf
inc
dec
test
lcall
inc
cmp
and
mov
xlat
cld
push
jmp
or
cmc
repz
push
fcoms
adc
movsb
addl
mov
mov
push
adc
push
adc
mov
mov
mov
repz
jl
mov
dec
push
cmp
in
xchg
inc
aaa
push
outsb
clc
pushf
data16
or
and
xchg
sbb
ljmp
sub
dec
ss
sbb
sbb
dec
push
push
mov
popa
sbb
stc
movsl
sub
ret
dec
insl
movsb
xchg
xor
push
pop
mov
mov
add
jbe
mov
lret
loope
cltd
xchg
test
xchg
in
iret
fimuls
outsl
ja
nop
mov
jnp
sti
cld
cltd
int3
loopne
and
jl
call
push
mov
loopne
xchg
mov
lea
outsl
mov
je
mov
add
movsb
jecxz
xchg
je
shl
hlt
int
mov
stos
xor
lock
pop
dec
jnp
push
push
mov
jns
push
cmp
jle
push
fistpll
mov
push
jo
test
stos
mov
mov
out
mov
sbb
out
add
ret
scas
fs
out
jnp
icebp
scas
daa
les
xchg
sub
cmc
inc
mov
fwait
add
sub
icebp
lods
arpl
dec
stc
xor
lds
dec
xchg
or
push
jge
ret
pop
sub
pop
rcrl
fbld
popa
push
cmpsl
ret
mov
mov
shrl
clc
fs
test
fucomip
sub
aas
xor
gs
mov
movsb
fldcw
or
lods
sub
lahf
cltd
or
adc
cmp
inc
fdivl
ret
loopne
mov
or
stc
xchg
mov
jge
mov
xchg
jg
cli
mov
fwait
push
test
xchg
mov
jp
clc
testl
pop
outsb
xlat
push
and
mull
popf
mov
icebp
and
ljmp
adc
jne
jle
lcall
push
jle
or
cs
or
rcr
test
cmpsb
arpl
sub
cmpsl
std
add
pusha
mov
jg
or
or
xchg
mov
mov
test
repz
dec
std
inc
lods
ss
mov
dec
and
and
insl
pusha
mov
enter
fstpt
push
dec
cmp
inc
inc
popf
cmpsb
rclb
pop
mov
cmp
nop
sub
and
insb
movsb
dec
in
hlt
mov
or
in
mov
cmp
mov
xchg
shrl
jae
sub
filds
pop
out
pop
mov
outsb
out
mov
lret
int
mov
out
push
ror
les
and
jnp
addr16
popa
mov
dec
imul
pushf
mul
scas
xor
jmp
jo
jmp
inc
aas
dec
stos
dec
and
pop
mov
fisubrl
xchg
sbb
lds
and
xlat
inc
jb
sbb
stos
imul
push
jg
aad
cwtl
xor
xchg
adcl
testl
subps
popf
push
push
nop
add
sbb
notl
rorb
xchg
rcl
cmp
sub
mov
int
mov
in
dec
cmp
mov
cs
jle
out
loope
adc
stos
fbld
xchg
es
clc
push
push
loope
rolb
jle
das
je
mov
mov
push
push
and
subb
mov
pop
js
cmp
inc
mov
cmp
mov
mov
addr16
adc
and
in
movsb
outsb
xor
adc
outsl
jge
inc
push
popa
add
out
in
push
pop
int3
mov
fs
cmp
jge
gs
popf
in
mov
sub
mov
pop
gs
sti
jne
push
shl
outsb
sub
sub
cmp
push
xchg
sti
clc
cmp
pop
xchg
icebp
push
lock
pop
icebp
push
pop
hlt
fwait
stos
mov
push
and
data16
inc
cmp
cmp
adc
xor
xor
loopne
cmp
sbb
outsl
unpcklps
and
jbe
clc
xor
test
mov
rolb
call
lock
or
in
das
icebp
lods
mov
insb
pop
int
pop
das
adc
inc
lds
or
insl
iret
jg
fistpll
sbb
adc
fstps
in
cwtl
push
sub
xchg
or
imul
shlb
cmpsl
pop
mov
loopne
pop
notl
mov
das
sahf
mov
xorb
add
push
pop
les
mov
xchg
movsb
push
sub
adc
das
daa
mul
mov
cmc
mov
jg
je
scas
cs
xchg
dec
sub
jo
or
rcll
mov
scas
cmc
in
stos
scas
cli
addr16
loop
xchg
sub
mov
subb
bound
cmc
iret
push
mov
adc
test
pop
push
fcomps
mov
inc
imul
sbb
mov
aaa
cmp
icebp
mov
enter
rcrb
or
aaa
jbe
inc
lret
jle
push
push
dec
mov
or
add
dec
sub
xchg
cwtl
icebp
lcall
pusha
test
and
add
add
arpl
push
or
push
jne
mov
dec
xchg
gs
int3
divl
or
test
repnz
jl
xor
scas
jnp
pop
xchg
cli
add
push
xchg
xchg
fstpt
pop
pop
xlat
jmp
mov
repz
stc
xor
or
mov
xchg
sub
or
and
into
out
cmp
test
mov
rorb
iret
mov
ret
es
jns
fists
fs
push
ss
xor
add
rcrb
mov
fmul
shl
mov
sub
movsl
xor
mov
pop
dec
pop
test
sbb
fisubl
push
aad
xchg
mov
inc
fwait
and
or
dec
and
inc
ret
lods
adc
gs
mov
jecxz
push
lret
push
iret
jg
and
pop
mov
inc
sub
push
clts
in
sarl
add
repz
call
je
dec
and
push
pushf
cmp
cltd
xchg
xor
sarl
inc
stos
fsubs
imull
lret
cmp
and
test
insb
and
jg
rorb
shrl
movsb
frstor
test
hlt
aaa
roll
shl
push
int
jp
fwait
dec
or
ret
stos
daa
ret
daa
repnz
xor
inc
ja
aaa
and
mov
sti
sti
xlat
scas
popf
sbb
sub
lods
shlb
jns
shll
pop
mov
sub
push
in
pop
mov
adc
out
push
pop
sub
loopne
dec
rolb
and
mov
fdivrl
leave
ret
and
pop
cmc
and
push
test
inc
test
push
and
mov
or
jae
ret
xor
mov
lahf
jae
fcoml
adc
xchg
jmp
jb
and
and
mov
test
and
xor
arpl
popf
iret
int
adc
mov
bound
insl
jae
test
dec
jb
inc
mov
mov
and
lahf
lods
and
cmp
add
call
mov
rcr
or
sub
arpl
xchg
mov
lret
sub
idivl
or
sbb
enter
mov
pop
xchg
insb
dec
jno
inc
ss
repnz
push
and
dec
adc
mov
sub
cmp
mov
sub
xchg
inc
in
ljmp
nop
aam
js
fwait
insb
xor
and
imul
ljmp
mov
cmp
movl
xor
movsl
hlt
lock
lahf
addb
push
jno
jg
jae
xor
inc
call
nop
insl
push
mov
xor
stos
pop
sbb
icebp
fsubrl
xor
add
mov
cmpl
inc
sbb
mov
popa
into
sbb
cltd
fildll
mov
jno
xor
and
fldt
jmp
inc
lcall
adc
push
jle
sub
adc
int3
cmovbe
cltd
test
inc
ja
jl
mov
jno
dec
xchg
in
out
cmp
mov
push
adc
jp
cmpsb
sbb
fnstcw
pop
lock
mov
push
sbb
stc
push
stos
jb
lahf
call
xchg
cwtd
inc
aad
adc
sub
mov
adc
popf
int
rcrl
xor
mov
push
adc
sub
sbb
stc
lret
sbb
inc
pop
mov
data16
insb
cmp
gs
loop
outsb
xchg
dec
push
imul
push
sbb
jno
push
dec
or
mov
cmp
xor
mov
int3
mov
fstpl
add
imul
mov
fsubrl
rcrb
cmp
xor
pop
inc
lret
pop
mov
sub
add
insb
scas
push
neg
clc
cmc
xchg
loopne
pop
sub
and
fidivl
outsb
dec
inc
imulb
inc
mov
pop
iret
ret
les
movsb
pop
aam
int3
inc
jp
jle
pop
adc
rclb
xor
outsb
imul
xor
bnd
lods
adc
mov
dec
mov
jge
lcall
pop
test
orl
push
ret
jne
test
outsl
movsl
xchg
es
and
xchg
push
or
ljmp
dec
pop
cmp
jbe
gs
test
sub
in
es
test
push
pop
imul
fdivr
call
andl
cwtl
fldl
add
cmp
push
sbbb
mov
sbb
xor
insb
xor
inc
xchg
stos
sahf
stos
xor
leave
cli
cmp
sub
xchg
sar
mov
scas
or
add
ja
fwait
mov
pop
xor
cld
push
mov
mov
mov
adc
push
mov
mov
pop
adc
out
xchg
cli
add
lret
lahf
int
rcll
sbb
adc
xchg
cmp
mov
std
loopne
sub
stos
or
ret
mov
ds
push
lret
mov
aaa
aaa
movd
dec
dec
out
mov
or
lds
xlat
xchg
xchg
sub
add
mov
mov
ja
xchg
jb
fisubrl
push
aad
stc
in
fdivrp
sbb
or
inc
sahf
jecxz
jae
roll
lds
or
sub
jge
inc
mov
inc
push
pop
sbb
insl
notl
xchg
sub
inc
lret
mov
fmuls
addb
jp
sbb
jno
cli
je
fcmovne
jne
jp
sub
mov
ret
rcll
inc
push
and
push
dec
pop
pop
inc
pop
stos
test
bound
out
sbb
gs
pop
aad
xor
mov
inc
pushf
stos
jmp
inc
pop
in
xchg
push
pushf
cwtl
and
aam
add
inc
fiaddl
add
or
mov
jno
adc
fsub
idivl
cmc
gs
shll
movsl
xor
pop
inc
test
jne
ret
les
jmp
sbb
pop
movhps
jno
subb
faddp
mov
and
insb
mov
je
stc
add
fidivl
xor
mov
mov
lods
push
fidivrl
xchg
fcmovb
or
sbb
fistps
test
fwait
ss
stc
jo
inc
shr
iret
iret
pop
cmp
orb
dec
enter
mov
inc
push
push
adc
sbb
add
and
cmpsb
test
ja
repz
or
rclb
stos
dec
sbb
int
stos
xor
into
popa
hlt
xor
mov
mov
out
pop
cmpsl
imul
dec
out
lea
and
stos
push
add
mov
cmpsl
arpl
add
jo
movsb
scas
call
push
jno
fisttps
scas
jmp
adc
xor
lcall
adc
fdivrp
sahf
fwait
pop
pop
stc
jns
mov
sbb
xchg
mov
sub
sbb
xor
cmp
dec
pop
ret
inc
out
sbb
pop
push
ds
in
test
js
mov
cmp
cmp
daa
cli
mov
fs
lret
dec
sbb
fdivr
add
dec
inc
clc
push
lahf
mov
jmp
pop
mov
idiv
dec
insb
jg
jae
adc
sbb
sbb
sub
mov
cmp
mov
push
arpl
lods
pop
xchg
ljmp
sub
daa
push
aaa
mov
sbb
push
jns
ds
scas
ret
repz
movsl
rorl
jae
or
ja
ds
lods
push
in
jnp
imul
jb
adc
mov
adc
daa
repnz
push
and
adc
loop
and
lahf
cmp
xor
cld
leave
mov
daa
or
or
jecxz
lods
fstpt
cmc
test
cwtl
mov
sub
ljmp
adc
mov
xor
mov
dec
rcll
mov
dec
mov
push
dec
iret
mov
outsb
loopne
fmull
js
sub
cmpsl
imul
mov
add
repz
pop
jmp
in
int3
pop
add
lret
dec
inc
mov
pop
repnz
in
jmp
cltd
aam
push
adc
lret
sub
push
cmp
jl
jmp
aas
jp
lods
ja
jge
sbb
ret
sbb
sub
mov
and
mov
xor
inc
jg
fs
fmul
pop
jge
nop
jno
mov
or
ljmp
mov
ret
mov
dec
xlat
mov
dec
ljmp
repz
cltd
add
cmp
jnp
lcall
jg
sarl
outsl
push
gs
popa
cmp
lds
and
movsl
add
mov
pop
jbe
subb
fs
outsb
movsl
add
jbe
movl
mov
jo
test
sub
enter
push
loopne
mov
xchg
js
adc
lret
cwtl
jle
cli
shll
or
mov
push
adc
xor
inc
clc
nop
cmp
out
cmp
into
into
jo
mov
or
jge
cwtl
mov
or
shlb
lock
sbb
imul
or
lea
jmp
push
dec
scas
adc
mov
jno
cmp
jecxz
mov
dec
xor
dec
test
lcall
shl
cmp
das
test
push
pop
dec
aaa
push
inc
les
cmpsb
dec
ljmp
test
adc
mov
test
push
push
or
out
pop
and
mov
xor
cmp
xor
fstpl
out
jg
pushf
jl
insl
adc
add
popf
cmp
aas
and
push
fidivrs
cmpsl
cmpb
sarl
inc
xlat
lret
int3
test
stc
and
bound
shl
xlat
dec
pop
out
hlt
shlb
lods
bound
imul
push
jle,pt
leave
je
fs
sbb
sub
das
rorb
xchg
pop
and
cmp
lds
sub
mov
mov
push
sub
push
fstl
lcall
aad
stos
es
jnp
mov
movsl
sub
repz
xchg
shll
xchg
dec
mov
jmp
jae
gs
cmpb
xor
mov
fistl
mov
jle
sub
mov
aad
push
pop
xchg
imul
in
jg
jge
mov
jl
jae
aas
push
out
popf
into
inc
pop
out
cmp
or
outsb
movsl
sahf
pop
dec
inc
mov
sub
std
in
pop
or
nop
sarb
add
int
stos
jno
pop
pop
cmpsl
setg
pop
inc
and
mov
sbb
and
fists
cli
or
cmp
dec
icebp
xchg
js
test
cmc
mov
iret
jns
pop
inc
fwait
aaa
aam
fldt
je
jae
aaa
in
icebp
shrb
fnsave
dec
adcl
insl
daa
in
ret
gs
aas
lcall
test
je
cmp
arpl
hlt
pop
dec
fisubs
mov
adc
dec
bnd
xchg
mov
push
mov
call
lret
xchg
popa
inc
daa
mov
add
in
xorb
sub
pop
aad
movsb
shlb
imul
sub
adc
daa
or
jp
or
das
rcr
mov
ret
sbb
nop
add
ficompl
push
sub
aam
lea
mov
xor
mov
sbb
push
mov
outsl
xlat
lcall
mov
popa
cmp
push
shl
and
cmp
xchg
add
fucomip
mov
cmp
repz
es
push
push
mov
cmp
lret
push
out
leave
ret
popa
jbe
les
sarb
cmpsb
pop
das
shrb
ret
pop
adc
aaa
les
mov
out
push
add
ds
xor
push
push
pop
add
xor
mov
mov
pop
adc
inc
mov
nop
adc
or
scas
cmpsl
pop
mov
ja
pusha
addr16
mov
inc
mov
shrb
add
sbb
sbb
sarl
stos
cmp
push
jne
int
lcall
dec
dec
outsb
sbb
and
cs
imul
xor
mov
loopne
or
adc
pop
jg
xchg
push
popf
cld
int
push
sbb
aad
lods
daa
inc
or
pop
sbb
cmp
fldt
or
push
dec
or
cmpsl
iret
popa
mov
scas
add
in
imul
decl
std
inc
and
mov
jne
jmp
adc
pushw
bswap
cmc
sarb
xor
enter
in
push
std
dec
mov
roll
mov
add
test
aas
ja
xor
mov
int
insl
inc
xlat
cmp
in
mov
and
push
stc
inc
lahf
arpl
inc
lods
test
mov
repz
jo
lds
push
mov
sbb
ljmp
es
mov
and
cltd
xchg
jno
mov
scas
aas
fndisi(8087
xchg
mov
gs
sbb
sub
xcrypt-cbc
cmpsl
push
fwait
clc
cwtl
xchg
test
cmp
imul
dec
adc
or
cld
cmp
mov
push
cmp
cmpsb
push
or
insb
sub
js
sbb
push
cmp
ljmp
dec
dec
dec
enter
shll
or
cmp
jp
imul
dec
lods
jmp
or
pop
and
fcmovbe
daa
nop
cmp
push
pusha
mov
lods
and
mov
ret
ss
pop
fiadds
adc
sub
adc
mov
and
rol
pop
sahf
in
sbb
and
jmp
pop
xor
call
in
cli
push
jne
xchg
or
ds
mov
negb
add
fidivs
test
jb
popf
jo
stos
sub
xchg
stc
jns
sahf
fimull
push
scas
inc
shrb
and
mov
fmuls
loop
xor
push
cmp
or
sub
pop
rorb
inc
mov
mov
loope
inc
pop
ja
jmp
data16
adc
add
popf
ljmp
pop
jne
jnp
mov
sbb
les
fwait
adc
stc
mov
popa
sub
sti
repnz
aas
mov
pop
sub
shlb
xor
mov
and
outsb
cmp
arpl
stos
orb
adc
adc
mov
pop
js,pn
out
adc
mov
enter
decl
cltd
dec
je
jecxz
cmpsb
test
ds
mov
sub
mov
loopne
sbb
add
lods
fdivr
dec
add
fwait
pop
daa
dec
cwtl
sub
sbb
je
into
pop
out
cmp
add
aam
loopw
daa
xchg
jnp
inc
push
push
jo
push
movzwl
movsl
insb
adc
jmp
xor
mov
enter
inc
inc
cmp
lea
push
push
icebp
in
adc
adc
mov
mov
aam
sub
or
mov
jnp
mov
adc
or
dec
sarl
imul
pop
add
jnp
fcmovu
imul
and
and
and
dec
pop
ret
lcall
jge
pop
loop
sub
mov
mov
imul
shlb
mov
jle
pop
push
addr16
sahf
shlb
call
icebp
add
push
push
xor
psrlw
dec
xor
std
xor
lods
nop
push
movsl
or
outsl
add
adc
push
jne
pop
jecxz
adc
sahf
jecxz
out
cmp
arpl
lea
mov
pusha
popf
push
lret
cwtl
popf
loop
jle
mov
cld
and
push
aaa
push
clc
adc
mov
sbb
and
add
mov
les
fcoml
xchg
movsb
scas
dec
fildl
jmp
outsl
xlat
fisubrl
loop
mov
jns
mov
idivl
fs
es
inc
push
mov
das
pop
data16
jl
div
loope
xor
xor
or
pushf
adc
inc
cld
loopne
pushl
jb
pop
add
inc
imul
dec
adc
negl
mov
mov
xor
jmp
out
mov
cmp
or
icebp
fwait
and
pushf
scas
and
sbb
ret
jb
jb
jg
push
xchg
mov
push
mov
bound
xchg
stc
jp
ficoml
roll
xchg
dec
popf
fwait
mov
pop
je
mov
cltd
xchg
inc
lods
call
mov
mov
add
out
add
push
xchg
inc
sub
aam
sub
mov
lods
xchg
scas
mov
add
repz
push
xorb
call
and
inc
mov
cmpl
add
dec
mov
xchg
jb
push
icebp
sub
adc
sbb
add
mov
mov
inc
dec
xor
loope
ret
sbb
mov
mov
lock
ss
cmp
dec
jb
aad
mov
out
and
movsb
mov
int3
sub
xor
pop
outsb
ja
adc
add
jp
test
xchg
pop
clc
mov
add
loope
dec
xlat
or
push
push
out
flds
andl
dec
fstpt
test
mov
scas
mov
jb
mov
divb
popf
xchg
xchg
mov
arpl
fcmovbe
mov
adc
jp
out
push
xchg
repnz
cltd
fstps
cmp
or
in
inc
and
jbe
fmuls
or
cwtl
add
nop
mov
inc
jp
std
not
roll
std
and
out
mov
loope
pusha
psrlq
hlt
lahf
mov
cmpsl
xor
icebp
sbbb
loop
movb
mov
lea
push
mov
xor
add
push
mov
push
pushl
call
mov
mov
mov
movl
mov
mov
lea
mov
mov
movl
mov
xor
mov
sub
mov
movl
mov
mov
cmp
je
mov
mov
xor
xor
lea
mov
xor
div
mov
mov
xor
xor
jmp
mov
test
lcall
jp
fstpl
jp
push
mov
addb
adcl
pop
pop
jns
cmpsb
and
jl
hlt
mov
cwtl
xor
orl
mov
mov
enter
shll
add
sbb
loope
call
xor
dec
je
pop
add
scas
pop
and
jle
mov
pop
pop
icebp
std
out
cs
cmp
cli
fimull
lea
inc
cmp
mov
jno
call
faddl
stc
pop
push
xor
xor
and
cmp
push
jmp
xchg
mov
mov
sti
push
stos
js
out
outsl
enter
aas
in
xchg
inc
push
data16
ret
lahf
out
jge
loopne
mov
call
or
roll
dec
enter
das
pop
push
cmp
cmpsl
out
jne
mov
and
ja
test
ret
fildll
subl
and
xor
mov
fiaddl
call
lods
pop
inc
lods
gs
test
cmc
push
add
popa
mov
into
mov
dec
movl
push
push
sub
sbb
pushf
aaa
or
iret
jmp
lret
lahf
out
add
adc
pop
mov
fistpl
cmp
gs
mov
jp
jno
sti
fcompl
sbb
out
pop
test
xchg
loope
push
insl
ret
and
add
nop
mov
pop
or
xor
xchg
and
push
cmc
inc
xor
sub
popa
cmc
imul
push
sbb
jb
fisubs
out
cmp
call
pop
cmpsb
xlat
mov
lahf
cs
inc
inc
sub
bound
stos
lods
xor
mov
add
mov
in
lcall
add
lods
aad
mov
jecxz
or
jp
push
test
lods
les
outsl
lcall
mov
lea
push
cs
mov
testb
pop
mov
sbb
pop
jg
xor
mov
ret
lods
sbb
cmovns
or
push
or
dec
iret
xchg
and
lret
pop
stos
xchg
cli
stos
test
pop
xor
in
sbb
lds
add
xchg
mov
aam
loope
pop
out
mov
sub
push
lods
js
mov
sub
fwait
dec
test
or
lock
fnsave
xor
data16
jno
test
sarb
into
pop
jno
cs
lret
sub
sahf
and
stos
andb
and
jmp
shl
testb
popa
push
jno
fisttps
insb
int3
ds
sub
movsb
mov
mov
pop
push
push
mov
outsl
daa
sahf
add
jnp
out
idivl
xor
insl
xor
leave
jg
lock
jmp
int
fsubp
xlat
loop
and
push
out
sbb
xlat
and
aas
push
mov
imul
cmp
jmp
mov
fldl
ja
ss
sub
and
mov
cmpsl
sbb
fdivrl
push
mov
sub
jmp
in
push
sub
in
bnd
xchg
sub
in
out
add
xor
jo
dec
repz
and
mov
shll
idivl
or
push
fcmovnu
mov
push
fiaddl
pop
subb
mov
sahf
jg
ljmp
sub
and
adc
test
pusha
adc
adc
jp
mov
sub
lahf
push
call
push
add
push
mov
out
mov
popf
mov
js
xchg
jne
mov
xchg
int
std
xchg
mov
jbe
add
loope
clc
and
mov
out
fsubrs
push
mov
scas
enter
mov
fs
popf
popa
gs
cs
out
pop
cltd
jo
inc
xchg
inc
jge
testb
adc
fwait
or
sahf
inc
dec
cmpsb
enter
adc
dec
add
rclb
or
insl
daa
pusha
mov
addb
aaa
and
bound
mov
cmc
xchg
sbb
sbb
jecxz
mov
mov
inc
pop
fcom
mov
push
push
aam
aaa
orb
sub
mov
sti
std
add
inc
sahf
mov
test
call
push
fidivrs
sbb
mov
shrl
scas
cmc
fdivl
adc
hlt
movsl
pusha
sbb
mov
jg
sub
jp
and
inc
mov
add
lods
ror
ret
lcall
in
arpl
lods
jmp
push
imul
hlt
icebp
ret
mov
test
das
iret
push
sbb
icebp
inc
push
in
mov
push
add
adc
loop
add
push
jge
sti
cmc
stos
fdivrl
dec
je
pop
fnstsw
lods
xlat
in
cmc
hlt
sub
xlat
push
xor
xchg
daa
pop
push
pusha
xor
or
jp
push
sub
xor
leave
cmp
mov
ret
cld
cmp
xchg
std
pop
sbb
inc
sbb
fstps
inc
push
mov
adc
test
dec
in
mov
xchg
sbb
push
sub
and
hlt
mov
shlb
pop
das
scas
mov
adc
dec
cld
mov
dec
mov
sub
sub
and
shr
hlt
sbb
test
aas
popf
movsl
shrb
bound
cmp
lahf
movsb
fbld
out
cmc
subl
add
jnp
lret
inc
sbb
mov
addb
mov
iret
adc
add
into
insb
popf
sub
cs
xor
iretw
mov
push
loopne
push
icebp
adc
mov
xor
xchg
scas
adc
fisubrs
jb
jp
add
jmp
divl
or
inc
sub
sbb
cmp
movsb
and
vmread
sub
or
mov
mov
jno
imul
fisttps
add
dec
push
xor
cld
sbb
repnz
loop
mov
fmull
nop
push
mov
push
lcall
push
mov
dec
lcall
fisttps
sub
imul
movsl
and
mov
jmp
adc
xor
mov
stc
aam
std
jbe
xor
fdiv
cli
pop
aaa
push
jno
pop
dec
lea
data16
jmp
sbb
aas
pop
mov
pop
inc
enter
mov
push
pop
push
or
mov
sub
out
and
pop
push
mov
fwait
and
mov
or
fistps
sub
test
inc
mov
cwtl
xor
or
lock
cwtl
es
cmp
adc
aam
xor
js
iret
or
cld
jns
xor
mov
jmp
xor
push
sti
pop
push
xchg
adc
gs
jmp
cmpb
jle
or
test
mov
std
test
adc
pop
xchg
test
or
inc
dec
jp
ficomps
xchg
adc
fwait
jo
icebp
insb
mov
hlt
imul
inc
mov
jl
or
pop
lock
sub
push
mov
dec
loopne
clc
xchg
out
add
shlb
stos
repnz
scas
sbb
sub
push
mov
in
mov
rcll
addr16
repz
mov
xlat
insl
push
mov
lods
clc
ret
mov
decl
loope
jae
stos
in
les
mov
aad
fwait
cmp
sar
pushf
mov
push
mov
and
lcall
cltd
fildl
dec
hlt
loop
sub
or
push
jo
mov
mov
sarl
lods
mov
inc
mov
jbe
adc
repz
xchg
ljmp
pop
popf
dec
xor
sti
andb
neg
cmp
fs
mov
cld
iret
loopne
jae
or
repz
xchg
sbb
pusha
xchg
das
push
add
sbb
stos
mov
pop
adc
xor
cmpb
arpl
rcll
pop
cmp
mov
sbb
mov
inc
test
mov
pop
nop
pop
scas
lahf
push
sbb
mov
dec
xchg
fwait
test
mov
push
bound
ja
pop
xor
cli
mov
sbb
fildll
push
jl
mov
xor
rcll
sbb
mov
int3
imul
iret
lret
push
ss
xor
stos
sbb
stos
sbb
rcl
jb
jle
cmp
and
mov
push
ljmp
adc
jnp
pop
sti
insb
in
xchg
sub
je
xor
mov
mov
and
and
scas
test
dec
divb
add
add
pop
xchg
lods
sub
imul
xchg
and
movsb
or
fsubr
in
jle
mov
jns
loopne
or
sub
sub
fwait
dec
mov
mov
lock
pop
fidivrs
leave
stc
jp
fwait
jecxz
jp
mov
mov
sub
imul
lcall
popa
push
xor
pushf
insb
int3
out
int
imul
insb
leave
sub
addl
rorl
in
mov
loopne
cmp
push
lods
cltd
pop
ljmp
std
sbb
mov
mov
es
or
lock
in
cmp
mov
pop
adc
movsl
imul
movsl
mov
cmp
cli
test
inc
add
pop
pop
mull
pop
mov
lahf
loop
inc
sub
loop
mov
xchg
jp
sbb
and
fwait
dec
test
jge
and
push
jle
or
outsb
xlat
push
dec
fnstsw
sub
add
bound
rcrb
inc
add
sub
andb
icebp
pop
jmp
out
cmc
adc
lods
jp
or
scas
lret
pop
lock
push
mov
test
push
add
xchg
daa
or
ds
repnz
xchg
ja
clc
sbb
aam
fnstsw
imul
and
mov
fcmovu
sub
jnp
lret
cmp
mov
sub
leave
sahf
mov
pushf
push
ljmp
pop
jbe
add
call
imul
sbb
out
imul
call
add
movsl
push
sbb
xchg
mov
jp
xchg
and
outsb
sub
add
jo
in
or
mov
cmp
mov
test
sbb
inc
je
mov
andb
sbbl
mov
mov
cmp
sub
sub
fcomp
movsb
inc
imul
bound
imul
sbb
and
push
insl
popa
mov
jmp
xor
pop
xchg
cmpsb
jge
scas
mov
fmull
jp
jecxz
jecxz
inc
push
inc
repz
cmpsb
and
lock
mulb
cmc
testl
cmp
das
xor
mov
mov
shll
shlb
push
adc
test
push
mov
jecxz
xchg
push
lahf
lcall
inc
xlat
sub
sub
imul
add
mov
mov
or
iret
fiadds
ja
inc
sbb
cmpsb
push
mov
std
movsb
mov
out
cmp
pop
cltd
cmp
xor
out
xchg
mov
lods
pop
add
ja
xor
jb
pop
ds
in
sbb
fbstp
jne
pop
call
mov
or
in
pop
pop
lret
lahf
inc
fidivrl
jge
sub
dec
test
or
mov
mov
push
sub
jae
xchg
adc
sbb
enter
jno
ljmp
sbb
bound
aam
pop
cmp
inc
adc
cmpsl
les
sub
outsb
mov
xor
xchg
mov
in
and
xchg
jb
fstpl
mov
mov
icebp
clc
pop
mov
mov
popf
mov
pushf
sahf
sub
xchg
mov
jmp
or
fdivl
inc
scas
mov
add
sub
rolb
inc
insb
aad
sub
in
xchg
mov
mov
sub
cmp
loope
sbb
adc
lock
dec
andl
imul
ljmp
add
xchg
jbe
aad
push
inc
mov
push
pop
mov
inc
cmp
push
mov
bound
lret
xchg
roll
enter
insb
xchg
adc
mov
dec
psubb
sbb
scas
leave
pop
sub
fwait
lcall
pushf
cmp
int3
loope
gs
push
adc
adc
adc
scas
cltd
cli
adc
add
movsl
jle
jns
xchg
and
outsl
inc
mov
jp
push
mov
les
popf
jo
pop
aaa
inc
push
mov
mov
negl
pop
in
and
ljmp
or
pop
lahf
dec
xchg
or
push
xchg
outsl
xor
sub
cs
xchg
mov
xor
inc
jmp
jns
mov
idivb
hlt
loop
ss
xchg
lock
insb
loopne
and
rol
mov
mov
sub
outsl
or
push
ficompl
nop
or
imul
ds
stos
lods
sub
push
imul
stc
imul
inc
xchg
adc
pusha
push
arpl
sub
addr16
jo
push
cltd
out
push
dec
imul
dec
popa
stc
or
jb
push
mov
jmp
xchg
stos
ss
dec
adc
mov
xchg
adc
rcr
jno
bound
out
out
jae
xchg
iret
pop
adc
lds
jg
stos
ret
lret
and
xchg
out
push
inc
jns
jmp
pusha
cltd
in
icebp
ja
out
pop
or
add
inc
loopne
rcr
adc
xchg
jo
push
lods
xchg
andb
iret
lret
fsubp
dec
add
jl
mov
pusha
pop
adc
lds
inc
mov
xchg
push
inc
fs
and
out
arpl
cli
stc
xorl
cmp
inc
mov
sti
and
adc
jg
aad
xorb
movsb
xor
add
setne
lock
out
pop
jg
movsl
ds
lahf
das
sub
push
jmp
test
push
jnp
loop
jae
cmpsl
call
pop
es
mov
aam
in
into
and
cmpsb
mov
cmp
mov
adc
lods
inc
loopne
divl
mov
std
xchg
lock
mov
cmp
cwtl
pushf
pop
daa
sbb
repz
pop
lret
xor
out
scas
out
enter
test
cmp
sub
mov
or
sbb
mov
in
arpl
cltd
xor
je
insb
sub
mov
sbb
push
sahf
repz
pop
movl
mov
out
push
insb
test
inc
rcrl
mov
dec
cmpsl
ss
shlb
notl
or
shrb
sbb
push
mov
fisubrl
jle
leave
sarb
pop
loope
adc
pop
movsb
sub
mov
leave
nop
lods
outsb
movsb
int
in
push
into
inc
mov
sbbb
mov
mov
mov
pop
or
shrl
or
into
insl
or
push
mov
inc
adc
rclb
sbb
jmp
dec
dec
jg
leave
inc
cmp
scas
pop
cld
lock
loopne
sbb
in
out
lret
or
sarb
loope
scas
or
jns
sbb
lock
pop
jmp
dec
or
jno
pushf
mov
out
outsb
cmp
mov
jb
stos
jno
xor
ret
push
jmp
cmp
adc
dec
in
adc
or
into
sar
sbb
aad
and
jge
loope
jbe
loopne
sbb
out
xor
jecxz
cmp
cmp
scas
sbb
mov
mov
outsl
fldl
fidivrs
loopne
movl
in
sub
jg
iret
or
sub
fiadds
divl
nop
inc
push
inc
xor
jp
jg
cmpb
lods
and
push
mov
mov
dec
outsb
clc
sub
mov
add
repz
popa
adc
paddq
popf
out
or
lret
outsl
mov
inc
insb
addb
scas
add
fs
or
fwait
int3
pop
fstps
or
movsb
cs
push
imul
dec
lods
mov
push
gs
lret
push
aad
mov
or
pop
int3
rcr
subl
xchg
xchg
incl
ds
rcll
jmp
nop
clc
decb
or
and
in
adc
jne
push
repz
arpl
in
repz
aas
lcall
dec
icebp
xchg
xchg
test
mov
push
xchg
sub
in
adc
adc
mov
cmp
mov
fnstsw
in
lret
in
mov
pop
shr
xchg
jl
loope
stos
iret
jg
outsl
popf
mov
aaa
fsubl
mov
sub
rcr
popf
shlb
mov
call
das
push
and
cmc
mov
das
pop
jmp
loop
pop
xchg
xor
aas
int
xor
bound
cmp
rcr
mov
loope
call
or
imul
iret
in
or
push
lock
xchg
cmp
add
xorl
sbb
and
sahf
push
push
andb
inc
je
bswap
adc
dec
mov
aas
mov
cmpsl
mov
aas
inc
gs
xor
cmp
jle
jp
adc
mov
sti
in
lods
and
outsl
or
push
pop
stc
jb
xor
or
pop
jge
push
jno
adc
push
pushf
rclb
push
or
cwtl
dec
cmp
jo
cwtl
leave
arpl
int
xor
cmpsb
push
sbb
imul
or
inc
and
lea
nop
push
cs
adc
pusha
out
xorb
or
xor
jbe
add
in
push
inc
sub
pop
imul
mov
cmp
dec
mov
icebp
hlt
gs
adc
iret
pushl
leave
cmc
in
sbb
push
mov
fisubrl
xor
leave
sbb
cld
pop
ds
daa
push
xchg
fists
or
in
icebp
inc
and
movsl
shrb
inc
dec
fucom
cmp
mov
repz
in
aaa
adc
jmp
divb
lods
sbb
aas
pop
xchg
pop
loopne
push
mov
fstpt
sub
int3
mov
cmp
test
ds
pop
ds
loop
fwait
insl
push
lret
mov
fcom
fiadds
push
cs
cmp
mov
pop
bound
addr16
movsl
sub
inc
test
mov
jmp
arpl
lahf
call
jg
dec
sarl
stc
sbb
je
in
fcomi
cmp
mov
lea
mov
lds
mov
pop
pusha
pop
push
push
inc
lods
mov
gs
dec
xor
lcall
in
xor
and
loope
push
cmp
mov
out
sbb
mov
ljmp
shll
mov
pop
xchg
and
push
dec
sahf
push
test
mov
adc
fsub
fidivrs
int3
dec
in
inc
aas
jns
rol
mov
jge
pop
sub
cld
into
mov
stos
push
jge
jnp
sti
or
adc
sub
out
xor
cltd
mov
sar
test
das
xor
mov
repz
xor
add
push
loop
pop
push
pop
push
mov
and
ja
or
imul
adc
cld
add
jbe
sbb
push
lds
adcl
xor
shll
inc
fsubs
scas
mov
cmc
cmc
arpl
dec
xor
push
pop
push
add
fs
popa
xor
mull
mov
xchg
push
in
cld
inc
push
xor
popa
jne
ret
xor
shll
divl
in
inc
cltd
into
es
push
push
stos
sbb
jns
jae
js
imul
pop
fildl
psubq
inc
mov
movq
inc
push
jp
jo
sbb
dec
sub
dec
loopne
mov
adc
mov
jp
rcll
loop
inc
lds
ret
mov
insb
rclb
loopne
popa
insb
cmp
add
sub
mov
aas
dec
int3
mov
clc
jbe
std
xlat
dec
incl
les
out
out
iret
mov
cmpsb
and
mov
addr16
in
fwait
push
xchg
icebp
sbb
mov
sti
jnp
lock
dec
outsb
fsubrs
fistpll
mov
mov
and
out
dec
es
mov
repz
inc
in
out
xor
loope
sbb
ljmp
std
mov
rolb
add
in
in
fptan
cmp
add
pop
gs
lea
in
lahf
dec
jo
xchg
add
das
dec
cmp
daa
cmp
test
mov
push
push
inc
int3
shl
shlb
enter
call
enter
sbb
je
and
and
cmc
outsl
into
fwait
rcrl
adc
div
lahf
push
dec
aaa
xor
insl
clc
push
cli
push
lock
inc
or
pop
cmp
adcl
xor
sub
adc
les
repz
mov
or
sub
pop
mov
mov
int3
mov
mov
stos
xchg
inc
orl
pop
loopne
pop
pusha
adc
outsb
fnstcw
into
stc
fnsave
sub
in
aaa
push
aad
pop
ret
or
or
xor
aam
das
out
clc
daa
xchg
cmp
mov
stos
xchg
xor
sub
mov
mov
call
or
sbb
sbb
cmp
faddl
mov
gs
popf
popa
out
mov
mov
dec
icebp
stc
jle
fdivrl
add
mov
adc
pop
into
loopne
mov
push
jne
clc
insl
loop
roll
lods
ret
fucomip
jmp
popf
lcall
mov
adcl
icebp
inc
test
or
dec
lret
xchg
call
push
and
mov
std
mov
call
sbb
push
push
cli
sub
dec
and
test
out
sbb
lds
leave
jp
jp
xchg
ja
jo
out
mov
xchg
sub
pusha
stos
loopne
and
xchg
daa
push
mov
or
xlat
enter
xchg
cs
addr16
lret
mov
out
mov
lods
jp
andl
arpl
mov
xchg
mov
mov
pop
daa
fistl
lods
aas
aaa
xchg
add
sbb
mov
cwtd
mov
movsl
ja
inc
sub
push
cmp
add
cli
aad
cmp
cli
xchg
test
add
jg
mov
or
fstpl
das
jmp
bound
stos
rcl
push
pop
das
cmp
jl
lcall
hlt
mov
mov
jno
cmp
inc
lret
repnz
xor
dec
aas
xchg
mov
and
inc
jo
jne
inc
inc
push
scas
int
mov
jge
dec
jg
inc
or
jle
and
bnd
test
fimuls
or
xor
pop
mov
or
and
popf
dec
aad
stos
dec
mov
pop
iret
add
lds
stos
cmp
mov
mov
xchg
mov
out
xchg
mov
sub
fwait
sbb
dec
lea
fs
cmp
out
loopne
fwait
sahf
push
data16
aaa
outsb
pop
cltd
xchg
stos
cld
lgs
cli
in
test
dec
dec
mov
pop
push
call
mov
pop
add
loop
dec
ds
int
cld
jmp
test
ja
imul
aas
inc
cmp
out
arpl
imul
ljmp
pusha
pop
pop
repnz
int3
xor
pop
pushf
xchg
fs
sbb
in
mov
jne
and
adc
out
inc
xor
sub
pop
sub
test
ds
jp
ret
adc
stos
out
bound
adc
loop
dec
or
jmp
aaa
movsl
adc
aaa
mov
adc
in
mov
adc
mov
cmp
mov
outsl
mov
ljmp
dec
mov
push
call
pop
xor
push
mov
cmp
dec
int
rcrb
outsl
in
jne
or
mov
cmp
inc
cmp
dec
in
loopne,pn
cwtl
adc
test
stos
rcll
out
cmp
and
or
adc
mov
pop
outsb
mov
adc
or
out
popf
inc
mov
jo
jecxz
mov
inc
add
ds
int3
xor
js
out
pop
popa
fmuls
or
cltd
fst
mov
shlb
add
sbbl
push
int
mov
jne
dec
adc
jle
leave
repz
jbe
xchg
out
jle
mov
sub
filds
lods
scas
mov
pop
out
pushf
or
add
mov
les
mov
mov
fs
cmpl
xor
rcl
stc
out
mov
fucomip
push
movsb
ljmp
pushf
and
mov
dec
jl
sti
inc
jecxz
mov
lret
xor
xor
mov
in
pop
sub
jge
cmp
xchg
and
mov
out
sub
data16
iret
mov
push
sti
mov
dec
iret
dec
fs
stos
arpl
sti
sbb
adc
mov
fwait
inc
imul
inc
ret
ret
ljmp
fdivrs
movsb
push
push
repnz
js
mov
sbbl
arpl
add
movsb
rorb
and
dec
or
lock
xchg
mov
xchg
xchg
roll
xor
fscale
int3
sub
pushf
jp
sti
mov
mov
add
mov
out
push
les
pusha
jecxz
popa
mov
dec
repz
cs
arpl
insl
sarb
leave
addr16
add
notb
adc
xor
pop
mov
jecxz
lcall
pop
xchg
outsl
ret
sub
pusha
rcrl
inc
jg
mov
push
pop
xchg
mov
loopne
fwait
pusha
push
daa
push
dec
cmpsl
adc
outsl
xor
in
push
mov
and
xor
add
insl
xchg
in
ret
sbb
adc
add
lret
inc
dec
adc
rcll
jge
cmc
push
xchg
test
xchg
mov
or
jb
push
sbb
roll
rcrb
scas
fwait
lods
fwait
test
insl
test
inc
test
pop
sti
xchg
push
push
mov
mov
icebp
xor
xorb
je
out
sarl
call
fmuls
or
leave
sub
adc
jo
lea
push
adc
add
dec
mov
or
jge
xchg
insl
adc
jp
idiv
add
cmc
ljmp
fdivrl
lds
inc
inc
pop
pop
lock
enter
xor
pop
sub
sbb
loopne
in
movsb
jecxz
cmp
mov
out
jmp
aas
loop
int3
sub
pushf
test
xchg
or
dec
testl
dec
add
xchg
xlat
rcrl
jne
xchg
dec
jl
adc
or
pop
imul
xor
sub
test
aam
pusha
pop
xchg
mov
lock
aaa
pop
add
add
mov
jno
adc
fisubrl
popl
jns
mov
and
aaa
xchg
add
shll
ja
shll
pusha
clc
mov
in
mov
jmp
dec
or
jbe
push
fwait
pop
sub
mov
cmp
fldl
mov
dec
add
movsb
shlb
inc
jle
xor
lock
cmp
xchg
mov
jge
popa
loope
sti
pop
dec
cmp
ljmp
fcmovb
mov
inc
lds
push
jo
int3
ds
sbb
ss
daa
inc
mov
outsl
mov
sbb
repz
fbld
mov
push
cwtl
movsb
fwait
pop
imulb
dec
inc
rolb
dec
xor
xor
xchg
or
dec
mov
pop
out
push
sub
xchg
lock
xchg
nop
jne
pop
les
sbb
mov
sbb
je
aam
push
lret
dec
clc
js
aaa
mov
mov
push
cs
push
pusha
pop
or
inc
push
mov
sub
push
inc
loop
cmp
out
in
test
push
repz
rcrl
test
out
push
jne
enter
cmpsl
imul
push
cmpsl
jmp
jnp
mov
ss
imulb
mov
stos
cmp
mov
inc
btc
push
loope
imul
shl
sbb
and
mov
aaa
repz
scas
cli
ss
mov
pop
outsl
add
stos
repz
sbb
loopne
loop
push
addb
jo
inc
mov
mov
iret
out
out
mov
test
sub
scas
icebp
push
xchg
or
arpl
or
add
jl
sbb
push
in
jp
sarb
jg
cld
jns
je
lods
lock
pop
insl
test
aaa
out
pop
jo
jnp
out
mov
scas
jecxz
mov
out
cmp
daa
call
mov
pop
mov
sbb
mov
mov
mov
movsl
enter
cmpxchg
mov
fs
pminsw
outsl
jbe
sbb
hlt
pop
inc
loope
cmpsl
inc
mov
mov
in
mov
dec
adc
out
and
cmc
notl
jl
adc
dec
daa
imul
cltd
cmpsb
pop
pop
pop
dec
loop
add
and
jno
cs
mov
add
cmc
cmp
outsl
xor
hlt
pop
imul
movsb
inc
mov
je
mov
cmpsb
arpl
mov
popa
or
push
and
dec
lret
lcall
daa
std
push
rcr
add
jp
cmp
lcall
data16
adc
lods
scas
ud1
add
add
or
ret
popa
mov
or
adc
cmpsl
out
cmp
sbb
mov
sub
xorl
jbe
push
xor
sbb
fnstenv
ja
or
stc
lods
jnp
dec
popf
mov
pop
xchg
fs
fmuls
sti
out
aaa
and
xor
shlb
or
lcall
shll
cmp
dec
inc
adcl
stc
subb
push
xchg
int
adc
jo
inc
test
mov
dec
aas
lahf
xchg
daa
mov
xchg
jle
dec
and
jnp
fsubr
or
mov
in
lock
inc
pop
add
sbb
stc
in
sti
lea
adc
in
lds
inc
in
pushf
xchg
push
xchg
sub
pop
add
pop
xchg
pop
sub
out
ja
xor
push
stos
lds
dec
adc
push
movsb
aam
shlb
in
out
push
inc
f2xm1
es
push
pop
cwtl
movsl
cmp
and
dec
fistpl
into
add
and
jo
sarl
mov
push
adcl
aaa
in
stos
sub
adc
push
pop
subl
mov
les
iret
lret
xchg
idiv
cmpl
sub
add
fcmovbe
or
sub
int
jo
loopne
das
ret
sub
pusha
dec
shll
repz
mov
jp
sub
icebp
fidivs
and
xor
lahf
jl
mull
lds
sbb
dec
dec
in
sbb
sbb
sbb
mov
jne
mov
and
ret
cmp
jne
mov
mov
mov
mov
xor
xor
add
add
mov
cmp
jae
lea
mov
mov
xor
add
lea
mov
mov
cmp
jbe
addl
jmp
addl
mov
xor
inc
incl
add
cmp
jb
mov
xor
sub
xor
mov
mov
mov
mov
sub
xor
cmp
jne
mov
mov
xor
xor
sub
sub
xor
mov
mov
jmp
mov
dec
mov
fisubs
xor
fstpl
jp
insb
adc
mov
add
fs
mov
in
add
iret
sub
push
dec
mov
sbb
out
je
adc
xchg
push
push
jns
in
stos
mov
mov
out
fwait
sub
stc
cmp
xchg
movsb
sbb
add
in
rcll
das
js
xchg
sub
negb
call
xor
test
pop
std
jne
inc
inc
dec
xchg
jns
pop
or
inc
int
loopne
push
jl
test
enter
shll
and
sahf
les
test
aaa
jnp
rclb
cmp
mov
cmp
clc
fstpl
clc
loope
gs
inc
cmpsb
inc
add
mov
popa
mov
xor
js
pop
test
fcmovu
adc
inc
mull
adc
add
lcall
ljmp
mov
mov
pop
push
sbb
dec
xchg
int3
aad
jp
adc
pop
popa
ds
pusha
aad
xchg
mov
sub
repnz
lods
repz
nop
pusha
push
jne
push
in
jge
imul
and
xchg
xchg
push
negl
sub
or
or
int3
add
out
rcl
pop
jmp
pop
mov
idivl
fistpll
jns
es
dec
xchg
sub
inc
rclb
dec
daa
mov
dec
inc
push
call
insb
cmpsl
push
jmp
test
enter
mov
add
shrl
xor
je
sti
jns
fcompl
lods
xor
sub
dec
sbb
mov
jp
orb
arpl
and
into
xchg
jecxz
inc
sub
sub
adc
add
scas
mov
bound
xchg
movsl
push
jge
ss
stos
out
cwtl
dec
and
das
pop
leave
es
sarl
test
dec
pop
xchg
cli
testl
cmp
popf
movsl
imull
add
aad
scas
xchg
sahf
jecxz
aas
popf
dec
js
stos
mov
movsl
inc
aas
cltd
movsl
outsl
iret
cwtl
xor
imul
sbb
testb
fdivl
nop
and
js
lcall
test
adc
pop
adc
mov
or
xor
clc
sbb
pop
aam
cwtl
cmp
jmp
mov
add
mov
daa
xchg
dec
inc
mov
ljmp
cmc
mov
pushf
iret
nop
pop
rorb
mov
aaa
mov
cltd
add
pop
icebp
out
add
cmc
lock
icebp
out
sbb
sub
jp
ja
mov
loopne
mov
mov
pop
je
sbb
cli
xchg
inc
xchg
adc
pop
shlb
je
popf
push
inc
mov
sbb
mov
sbb
xor
add
jmp
stos
lcall
int3
leave
out
push
loopne
std
pop
lods
and
gs
iret
outsl
or
sub
sub
or
sbb
sti
xchg
mov
stos
jb
pop
lret
loop
adc
int
add
dec
repnz
xchg
in
icebp
xor
xchg
jecxz
push
loopne
sbb
xor
mov
insb
lds
shlb
jo
xor
jle
inc
pusha
xlat
cmpb
sarl
fbstp
jle
data16
mov
enter
add
imul
popf
sti
jp
push
add
xchg
test
mov
pushf
test
and
loope
mov
jns
and
scas
jmp
inc
push
mov
adc
lds
add
es
mov
add
test
xor
jg
fsubrs
in
mov
push
push
pop
cld
je
add
xchg
cmpl
lea
aad
xor
xchg
pop
mov
loopne
imul
adc
dec
or
push
mov
movsl
xchg
and
add
mov
popf
xchg
cmp
cmp
jo
push
mull
ds
fdivrl
rclb
movsb
negl
pop
ds
inc
test
sbb
or
jle
repnz
pop
xor
add
mov
adc
push
jbe
orb
cmp
dec
cli
loop
push
ret
js
icebp
ss
out
cmp
dec
subb
aad
or
or
mov
in
into
or
lea
call
and
add
fistpll
lods
idiv
pop
sbb
outsb
int3
push
mov
mov
mov
pop
cmpsl
jo
push
or
movsl
pop
push
inc
dec
jno
insb
jnp
lret
push
test
inc
sbb
in
mov
push
xchg
sahf
dec
out
gs
int3
adc
imul
in
pusha
stc
xchg
inc
push
fnsave
stos
xor
or
or
bnd
jp
jae
icebp
jg
shrl
out
std
and
rclb
mov
mov
mov
pop
dec
xchg
test
fwait
add
in
and
in
sbb
adc
cmp
mov
sbbl
js
and
mov
test
inc
ljmp
mov
xchg
xchg
mov
ret
or
jmp
in
iret
insl
repnz
lock
mov
xor
and
push
icebp
add
sub
addr16
sbb
in
jp
ficomps
adc
add
stos
and
insl
enter
ffreep
mov
cmpsb
or
pop
shll
add
pushf
jge
mov
ss
push
cmpsl
pop
adc
frstor
in
mov
add
fwait
push
and
mov
add
mov
mov
daa
sahf
idiv
lcall
pushf
fnstsw
add
fs
pop
push
xor
repz
je
cltd
nop
mov
cwtl
mov
pop
mov
fwait
aad
jns
scas
pop
add
dec
jnp
mov
rorl
push
cwtl
mov
push
cmp
enter
mov
xchg
cld
das
pop
popa
jmp
dec
nop
sub
cld
inc
ret
add
clc
fwait
test
cmp
aad
and
mov
aad
inc
hlt
int3
push
into
xchg
adc
jmp
pusha
subb
cld
adc
mov
popa
clc
pop
jmp
push
scas
inc
mov
ficoml
add
sbb
cmp
or
fistpl
stc
pop
popf
out
sbb
mov
out
cmpsb
sub
repnz
in
inc
sub
lock
in
sub
shll
adc
int
push
or
movsb
leave
sub
fstpl
sbb
ret
popa
das
dec
push
adc
fwait
xor
mov
pop
add
inc
test
les
repz
sub
hlt
test
in
sbb
push
xor
es
xchg
fldcw
push
or
xchg
aam
inc
xchg
pop
loop
out
inc
stc
loop
pop
xchg
jmp
in
ds
in
pop
test
shlb
addr16
ret
sahf
xchg
ljmp
xor
stc
not
scas
jg
in
dec
fidivrs
outsb
jmp
ret
xchg
cld
pop
shll
jns
inc
cmp
shll
adc
outsl
lcall
adc
jbe
lret
and
mov
sahf
mov
sti
sti
das
ljmp
lods
sarb
sub
and
pop
insl
jb
jp
cwtl
push
es
out
arpl
stos
mov
ret
insb
mov
je
mov
mov
in
fnstenv
test
jnp
dec
push
bound
mov
dec
aam
mov
or
mov
pushf
imul
inc
and
mov
roll
lret
and
data16
xchg
dec
jmp
lods
mov
dec
jg
xchg
xchg
testl
push
jno
lds
int
rclb
fnclex
mov
or
mov
test
sahf
repnz
sbb
fwait
jp
adc
xchg
mov
mov
dec
push
bswap
jno
mov
xchg
or
xchg
sub
push
sbb
jl
cmp
jecxz
fs
add
ss
rclb
mov
stos
jg
test
sub
dec
dec
fcoms
adc
pusha
pop
std
daa
jb
pusha
and
or
mov
lea
nop
sahf
sub
imul
test
mov
jle
mov
outsb
xor
rol
jl
lds
inc
test
pop
adc
mov
push
push
dec
outsb
jno
imul
add
ret
sub
inc
test
sub
xor
mov
adc
cmpl
mov
rcrb
mov
sbb
xchg
arpl
cmp
jle
mov
and
mov
jecxz
lret
fwait
in
sub
cmp
enter
mov
repz
cs
pop
push
sub
push
stos
inc
pushf
test
das
add
cmpsl
mov
rcll
in
inc
inc
xchg
pop
mov
jl
ss
repnz
lds
loopne
xchg
adc
lods
mov
pop
jbe
inc
or
cmc
and
aad
leave
cmp
inc
daa
shrb
push
es
cmpl
je
leave
stos
jb
sub
cs
xorb
imul
jl
sar
ljmp
je
rcr
stos
fisttpl
dec
das
insb
fcmovnbe
mov
mov
movsl
pop
sbb
popa
lret
mov
jns
addl
dec
pop
jbe
mov
push
repz
xor
add
mov
jb
idivb
add
cmp
in
and
jae
ds
and
xchg
mov
pop
push
jl
shl
in
test
enter
int
pop
enter
je
mov
inc
int
sub
mov
shr
out
enter
fimuls
fsts
int
push
js
pusha
xchg
sub
rorl
or
int
xchg
adc
arpl
jecxz
fmul
inc
shrb
fnsave
pop
dec
mov
pop
jg
imul
pop
xor
fwait
pop
mov
or
jge
imul
jbe
test
inc
jns
fildll
push
outsb
cmpl
negl
arpl
ljmp
xor
std
mov
stos
pop
rolb
inc
adc
je
jg
into
and
fsubr
addr16
sbb
cltd
mov
sub
cmc
pop
lcall
push
adcb
gs
fidivl
and
notl
cmp
or
and
pop
jecxz
mov
mov
insl
sbb
and
mov
mov
sbb
push
ja
shrl
or
je
cmc
add
stos
mov
arpl
in
lcall
loopew
or
mov
cmpsb
and
sbb
xor
xor
xchg
aam
and
cld
and
jmp
cwtl
leave
dec
in
sub
jle
in
in
and
rorb
push
jmp
jb
repnz
mov
sbb
or
push
mov
aaa
sbb
push
ret
xor
dec
cwtl
or
adc
cmp
fwait
dec
cmpl
and
mov
and
imul
cmp
pusha
and
cmpsb
or
pop
sbb
xchg
stos
pop
lock
xchg
sub
and
imul
push
repnz
test
out
mov
and
and
push
mov
push
adc
mov
sarb
mov
int3
push
stos
pop
lret
jmp
pusha
mov
xlat
mov
xor
xchg
mov
pop
xchg
cmp
push
jo
push
fcoml
in
inc
fidivl
or
ds
dec
test
in
add
ljmp
and
fisubrs
std
jnp
scas
inc
jns
sbb
xlat
xchg
inc
xor
inc
or
xchg
sbb
jge
lret
pop
outsl
adc
push
rcll
clc
mov
sub
adc
lods
cmp
mov
inc
pop
testb
rcll
pop
mov
xor
sbb
sub
jnp
push
push
scas
mov
and
adc
cld
cli
and
dec
and
shll
les
popf
sub
sarb
mov
pushf
ficoml
mov
fsubr
aad
mov
cmp
pop
mov
popf
mov
xchg
out
dec
mov
mov
and
and
loop
jne
adc
inc
xlat
fld
or
lds
pop
dec
or
xor
outsl
test
and
shlb
stos
mov
mov
popa
scas
mov
or
scas
fsubrp
out
stos
cmp
fadds
ja
adc
popf
and
push
sbb
stos
mov
jge
lcall
and
out
in
mov
lahf
jle
in
xlat
shll
and
in
push
inc
xchg
sub
shll
arpl
jns
add
or
popa
test
bound
cld
mov
sbb
pop
jmp
test
sub
or
int3
and
mov
sar
push
aaa
pop
xchg
sub
sub
in
std
mov
jmp
lock
sgdtl
xor
shll
ja
in
ds
test
cmp
scas
sbb
shll
or
sub
sbb
jae
mov
imul
mov
dec
lods
xchg
out
rcrb
pop
pop
fldt
mov
adc
add
lret
les
in
test
jle
dec
xor
mov
iret
jge
push
mov
push
mov
sbb
test
push
jbe
xchg
addb
adc
inc
mov
fistpll
cmp
xchg
test
and
aad
loope
jle
adc
test
sbb
xor
jp
adc
lds
fldt
inc
mov
repz
mov
popf
pop
push
inc
ljmp
push
inc
gs
mov
xor
movsb
repz
test
imul
inc
or
or
push
mov
sub
adc
add
adc
imul
adc
fsub
push
mov
jl
cmp
adcl
push
and
cmpsl
aas
xchg
or
push
pop
mov
mov
dec
sbbb
and
inc
mov
jb
dec
and
xor
xchg
es
repnz
add
mov
ja
sub
hlt
and
outsl
xlat
mov
rolb
jno
xor
subb
or
or
jl,pt
popl
sbb
imull
js
pop
mov
fnsave
aaa
mov
adc
jne
loopne
pusha
jecxz
repz
dec
sahf
sub
lock
push
or
add
pop
test
xchg
mov
sbb
or
and
push
popa
popf
leave
jmp
sti
gs
mov
pop
sbb
mov
test
fcomps
jecxz
jge
push
adc
dec
mov
xchg
pop
mov
add
stos
loope
xchg
sbbl
icebp
ljmp
mov
addr16
les
adc
sub
je
jmp
outsl
popa
pop
xor
inc
jg
sbb
arpl
ficoms
mov
adc
push
nop
and
sahf
movsl
lods
pop
mov
cli
imul
arpl
hlt
and
mov
addr16
cmc
dec
xchg
insb
sub
sub
out
xlat
scas
dec
xchg
subb
fldt
sbb
cmp
mov
mov
shlb
into
mov
sbb
movsb
repnz
jno
or
pop
push
cmp
push
push
lret
inc
into
xor
std
movsb
or
xchg
pusha
cmp
pop
cmpsb
mov
adc
aas
cmpsl
cmp
loopne
notl
aad
int3
into
xchg
insl
push
cmpsl
push
popl
hlt
test
cld
mov
add
enter
push
loope
pop
mov
aad
or
jecxz
pushf
fildll
push
std
and
xor
sub
fldenv
cmc
pop
push
push
pop
fcomi
pop
adc
outsb
dec
mov
mov
test
in
mov
inc
sbb
jb
clc
cmpsb
inc
pop
push
pushf
rcrb
jg
xchg
add
rcll
loopne
lret
scas
jb
rorb
lret
stc
leave
dec
pop
test
sbb
mov
or
mov
inc
sub
rolb
add
mov
in
int3
pop
add
or
mov
pop
rclb
cmpsb
jmp
pop
xchg
fldcw
adc
lcall
ljmp
sbb
cmp
push
mov
sbb
add
pop
shrb
adc
imul
jne
fidivs
and
adc
jmp
mov
jno
add
inc
mov
fsubrs
ja
test
dec
mov
jno
cmpb
pop
aas
lret
cmpsl
mov
out
cmp
dec
jge
addr16
out
mov
sub
in
push
addr16
sti
add
push
fstpl
rorb
idivl
mov
push
repz
pop
push
cmp
mov
mov
out
call
and
fwait
in
cmp
movsl
dec
push
lret
mov
adc
xor
repz
and
xchg
or
pop
dec
nop
sub
lret
xchg
push
sahf
add
pop
aas
outsl
dec
and
std
jne
out
inc
mov
jnp
or
sub
lea
xor
fwait
or
mov
cltd
add
mov
jne
adc
bswap
cmp
in
mov
into
in
pop
mov
and
xchg
les
rcr
sahf
inc
mov
lcall
jle
add
sub
lods
fstps
jp
jae
push
lods
arpl
adc
push
push
sbb
jno
pop
cmpsb
aam
icebp
inc
shrb
int
jecxz
out
jge
jbe
imul
repz
cltd
xchg
dec
jl
test
cli
add
ljmpw
lahf
es
stos
mov
sub
int
xchg
jnp
pop
mov
cmp
subl
sbb
imul
xor
lcall
inc
sbb
cmp
lds
mov
jecxz
call
ss
xlat
loopne
repnz
jge
aam
in
movsb
shrl
xchg
xchg
inc
daa
arpl
sbb
scas
insl
push
add
loopne
cmp
mov
loope
jle
inc
das
loopne
jno
orb
mov
movsb
sbb
std
dec
scas
jecxz
js
cwtl
pop
shr
jbe
dec
xchg
pop
fidivrl
jge
test
jns
and
stc
xchg
mov
jns
stos
in
cmp
notb
shlb
les
push
push
fistpl
pop
sarl
les
push
adc
les
mov
xchg
js
out
call
into
xchg
pop
stos
mov
outsl
inc
dec
inc
subl
inc
out
bound
stos
push
and
mov
es
dec
leave
mov
and
aaa
loopne
pop
out
int
test
push
xchg
loop
pop
push
mov
mov
push
xchg
push
jo
clc
lds
loope
cmovb
push
fmull
sbb
add
dec
jle
mov
xor
or
dec
cltd
jg
sbb
and
push
jnp
sbb
sbb
adcb
movsb
dec
jp
daa
jns
fstp
jns
stos
cli
jg
ss
addl
fiadds
test
or
jnp
adc
mov
push
adc
test
or
push
std
sbbl
jb
adc
cmp
popa
push
mov
std
aad
fstpt
jle
push
mov
add
sbb
orb
pushf
sub
pop
das
test
test
imul
call
mov
add
sub
push
lcall
push
sbb
cwtl
es
cli
cmp
pop
cmp
sub
test
cmp
sti
cwtl
xor
xor
jmp
stos
mov
cmc
arpl
sbb
jne
pop
jmp
push
pop
jp
mov
adc
push
push
scas
mov
mov
bnd
pushf
in
pop
je
fwait
ret
lock
dec
outsl
iret
nop
push
mov
xor
aad
loopne
repnz
jmp
xchg
repnz
inc
in
aas
cld
cmp
sti
inc
fcompl
fwait
call
fs
cmp
push
es
je
sar
out
es
or
clc
mov
sti
scas
cltd
sub
sub
int
out
cs
mov
mov
stos
mov
sub
push
scas
sbb
pop
xchg
arpl
ja
rcrl
aam
aam
cmp
jge
push
cltd
es
cs
fldcw
test
mov
in
ds
inc
shrd
jg
pop
jbe
mov
mov
xchg
int
xchg
std
daa
in
or
fidivl
imul
sub
gs
insb
ljmp
jp
lcall
lcall
jae
enter
fnstenv
clc
and
clc
and
mov
insb
ret
cmp
xor
or
lods
and
stc
aaa
sub
in
dec
imul
inc
jecxz
jo
mov
xchg
test
orl
adc
mov
sub
divl
data16
mov
lret
cmp
enter
shlb
mov
xorl
addr16
lahf
mov
xor
nop
cld
lds
adc
jp
push
mov
cli
fistpl
jp
pop
mov
loope
mov
xor
sti
lock
pop
test
mov
loope
rorl
icebp
cmp
je
push
cltd
mov
sbb
addl
cli
imul
hlt
dec
daa
test
sbb
imul
jecxz
xchg
jnp
inc
addr16
cmp
add
rcll
cltd
push
pushf
push
dec
xchg
xchg
or
dec
rcl
pop
xlat
sub
mov
imul
fs
fstpt
movsb
jnp
and
push
movsb
insl
adc
andb
inc
pop
js
fs
jno
pop
cmp
jns
cmp
cmp
lcall
and
lcall
xor
adc
jmp
imul
pop
inc
aam
inc
push
inc
hlt
outsb
pop
cmp
movsl
sub
add
aam
pop
pushf
leave
stc
out
jns
jp
mov
mov
int3
outsl
cmc
push
mov
cmpsb
outsb
mov
or
ret
loope
or
pop
mov
daa
int
les
inc
adc
loopne
xor
mov
mov
jg
call
mov
xchg
nop
xlat
jge
lahf
and
mov
sti
sbb
aas
jb
add
in
scas
lods
lret
lret
jns
mov
std
idiv
into
loope
adc
xlat
inc
jbe
mov
push
out
pop
sbb
divl
sarb
inc
mov
int
in
push
xchg
lea
test
jb
sbb
and
and
jmp
xor
xchg
cmp
adc
repz
inc
andl
fisubrs
stc
outsb
xor
pop
push
and
orl
dec
push
shlb
add
mov
ljmp
xchg
pop
jbe
or
jg
xor
mov
sbb
sub
dec
and
mov
sub
test
fstl
cmp
in
add
into
ss
into
cmp
popa
enter
adc
arpl
dec
push
xchg
mov
cmp
and
stos
cmp
cmp
les
shlb
dec
sub
cmp
or
jmp
xor
xchg
xor
sub
cltd
stos
or
mov
fnstenv
ds
pusha
jl
sbb
dec
or
or
je
hlt
dec
mov
push
xchg
pop
inc
cmp
jns
cwtl
xchg
inc
lods
pop
add
cmp
pushf
xchg
in
cltd
sti
out
lret
or
dec
insl
jge
sbb
fcomp
lods
mov
inc
sbbl
js
push
inc
inc
add
pop
dec
sbb
or
push
repnz
pushw
inc
pop
cmp
push
and
sbb
mov
call
adc
stos
test
mov
or
xchg
aam
cli
and
pop
and
mov
popa
mov
xor
push
divb
das
xlat
mov
push
and
push
ja
xor
xchg
cmp
jle
js
jno
mov
pusha
out
popa
std
inc
mov
jnp,pt
mov
mov
outsl
mov
push
xchg
ds
xor
call
lret
sbb
cld
jo
loopne
and
aam
scas
mov
mov
nop
xchg
popa
pop
enter
cmp
pushf
mov
sbb
mov
pusha
jb
push
jp
das
and
cmp
mov
lret
decb
jecxz
sub
inc
push
aad
adc
xor
aad
and
pushl
add
mov
dec
cmp
xchg
add
mov
xor
fsubs
movsl
shll
movsl
movsl
mov
jl
jae
in
call
and
lahf
push
and
xor
mov
out
out
and
fcmove
lcall
add
pushf
mov
sbb
xor
mov
in
icebp
adc
cmpsl
add
adc
or
mov
mov
pop
mov
js
cltd
push
pop
or
icebp
lahf
outsb
ret
or
out
and
stos
imul
jle
bound
add
lcall
add
cwtl
push
push
xchg
fisubrs
inc
sahf
dec
aad
xor
add
jo
push
sub
setb
adc
xor
sahf
repz
push
repnz
mov
in
inc
adc
xor
or
je
jge
jns
cmpps
divb
cwtl
push
and
pop
mov
xchg
cwtl
popa
dec
and
cmp
jbe
pop
ja
cmp
jge
or
add
and
xchg
scas
mov
pushf
jnp
aas
mov
iret
adc
sbb
sbb
pop
nop
mov
repnz
jl
into
ret
xor
xchg
mov
outsl
cmp
xor
es
xchg
shl
xor
fsubrl
test
je
or
inc
pushf
out
and
stos
sarl
subb
notb
std
adc
cmp
fdivrs
lock
mov
fldcw
stos
cmp
scas
mov
es
dec
aad
cmp
xchg
mov
add
aam
into
inc
shlb
sbb
out
cmp
sbb
mov
mov
cs
push
mov
push
pop
mov
cltd
dec
fsubr
jle
repz
cmp
ss
cli
insb
or
jnp
mov
mov
push
sub
push
mov
rcrb
mov
lcall
out
out
aaa
pop
pop
loop
jne
add
adc
jp
les
imul
mov
push
xor
or
mov
dec
or
lret
ja
test
mov
lods
mov
push
loope
sarb
cmpsb
pop
movsb
sub
and
sub
dec
push
aam
decl
fistpll
es
js
sti
sub
call
mov
mov
push
test
cmp
mov
mov
jmp
jns
adc
cs
test
jne
in
inc
ljmp
inc
aam
mov
inc
jg
and
es
adc
or
stos
insb
push
aas
scas
out
fidivl
inc
or
pushf
jnp
and
adc
test
xchg
adc
int
pop
outsb
mov
or
dec
and
aad
scas
jnp
addr16
clc
jb
cld
mov
fcomip
pop
cmp
mov
and
mov
cli
jo
pop
push
adc
out
push
xchg
lret
sub
popf
xor
hlt
shrl
inc
lcall
xchg
xchg
push
and
push
dec
inc
xchg
jp
adc
inc
mov
into
inc
loop
test
int
pop
jecxz
xor
xor
dec
mov
xor
in
dec
cmp
xchg
inc
ffreep
mov
and
outsb
jmp
sarl
or
jge
movsl
rol
mov
jmp
test
push
sti
jl
fisttpll
add
or
pop
jg
or
push
xor
test
icebp
cmp
push
mov
pop
cmpsl
pusha
sbb
out
mov
popa
xchg
mov
dec
scas
fists
movsb
sub
addb
inc
xchg
mov
lods
cmp
jbe
icebp
adc
ds
jmp
scas
ret
xchg
movsl
dec
sub
mov
lds
incl
sub
mov
or
sahf
cwtl
gs
push
enter
jmp
mov
ljmp
sbb
nop
clc
lock
push
adc
xchg
lods
mov
mov
js
push
mov
lcall
mov
in
mov
jg
or
mov
nop
repnz
std
fs
mov
pop
xor
xor
mov
mov
rcrl
sub
movsb
sahf
in
out
mov
xchg
mov
and
dec
das
sbb
mov
adc
cwtl
push
fdivl
aam
ficomps
idivl
shrb
cmp
sub
lret
js
pop
and
pop
mov
pop
xchg
push
arpl
bound
jecxz
arpl
clc
push
fucomp
cmpsb
dec
sti
push
cltd
repz
mov
hlt
les
enter
test
out
xchg
lods
leave
sub
out
movsl
jecxz
stos
cmp
test
mov
and
in
sbb
cld
pop
repnz
inc
mov
jge
mov
test
lods
mov
push
push
aam
cmp
sub
push
jmp
in
imul
xor
addr16
push
pop
sub
jle
vphaddbd
jge
xchg
aas
rclb
movsl
jb
add
es
imul
js
pop
pop
jg
dec
inc
shll
cmc
jecxz
lret
and
in
xchg
fsubrs
shl
fwait
cmp
mov
sbb
cwtl
mov
lock
dec
ficompl
jo
xchg
icebp
outsl
mov
jmp
nop
xchg
out
push
mov
movsl
ss
inc
dec
jae
jecxz
imul
frstor
inc
aad
inc
in
in
and
movsl
imul
movsb
shrb
in
imul
in
leave
dec
mov
daa
cmc
and
outsb
pop
and
add
std
inc
push
adc
xchg
ret
xor
and
cli
mov
fadds
icebp
and
xchg
sbb
cmc
xchg
push
test
cmp
or
sbb
or
adcb
out
testl
inc
arpl
aad
sub
mov
adc
repz
add
stos
imulb
aam
mov
cmpsl
and
mov
adc
push
cld
sbbb
fbstp
insl
push
cmpsb
xchg
mov
xchg
push
push
je
pop
mov
and
loope
add
test
out
iret
inc
shrl
fisttpl
testb
int3
jb
popa
xchg
aam
lahf
inc
test
cmp
aas
js
or
mov
mov
mov
loop
cmpsl
mov
sbb
mov
adc
jl
mov
fidivl
in
pop
add
lret
mov
xchg
adc
xor
mov
sub
jmp
mov
xor
mov
sub
add
mov
mov
cmp
jne
movl
mov
xor
add
lea
xor
cmp
je
lea
mov
mov
sub
mov
pushl
pushl
call
mov
mov
xor
lea
jmp
decl
jne
mov
mov
mov
xor
mov
xor
mov
xor
mov
mov
xor
mov
mov
xor
add
pop
pop
pop
leave
ret
push
mov
sub
add
mov
mov
movl
mov
movl
movl
mov
sub
push
xorl
push
movzwl
add
mov
movl
cmpl
je
cmpl
jg
jmp
push
call
cmpl
jne
mov
dec
mov
xor
or
dec
mov
jmp
mov
sbb
mov
mov
xor
mov
or
xor
mov
adc
add
mov
movl
cmpl
je
cmpl
jg
jmp
push
pushl
push
push
pushl
pushl
call
mov
dec
mov
jmp
mov
xor
add
mov
movl
xor
movl
mov
mov
sub
xor
mov
mov
xor
sbbl
add
movl
cmp
je
movl
push
jmp
mov
add
mov
dec
mov
andl
mov
sub
xor
adcl
xor
add
subl
div
xor
jmp
sbb
fwait
and
int
mov
repz
jp
js
adc
push
bound
movhps
das
imul
xchg
jge
sbb
pop
sbb
addr16
fnsave
jmp
mov
inc
enter
dec
and
and
and
jo
cmpsl
and
test
jmp
add
mov
das
inc
pop
in
or
inc
push
dec
push
jg
clc
sub
xor
addr16
shll
push
dec
scas
pop
dec
sbb
sarl
ljmp
popf
or
mov
push
ret
fsubrl
loopne
in
inc
cltd
inc
lock
adc
mov
xchg
movsl
pop
jns
cwtl
movsb
outsb
push
sub
dec
pop
dec
pop
inc
adc
lds
lock
lods
imul
stos
jbe
add
fs
pop
notb
out
add
sti
mov
std
mov
gs
pop
pop
xchg
and
cltd
les
xchg
flds
divl
fcoms
and
es
gs
fistps
fs
cs
ret
out
push
push
cmc
mov
sahf
enter
jno
out
inc
sahf
cld
daa
pop
inc
popf
and
repnz
mov
xor
cmp
leave
dec
sub
stos
xlat
xor
pop
jne
sahf
mov
inc
inc
bound
pop
push
mov
xor
cmp
or
fcomp
adc
loope
xchg
insb
sbb
mov
test
cmovle
fs
inc
aaa
mov
and
ret
ljmp
mov
mov
jnp
clc
lahf
pop
movsl
into
dec
std
test
cmp
mov
jg
jnp
ret
dec
mov
adc
pop
pop
test
push
xchg
xchg
mov
stos
out
mov
out
xchg
loopne
aad
or
and
popa
dec
insl
in
sbb
mov
jns
xchg
ja
lahf
dec
mov
test
jne
xchg
insb
lds
pop
cmpsb
outsl
lods
mov
fwait
pop
mov
sahf
stos
mov
mov
and
xchg
cmpsb
cmp
mov
and
ss
out
jno
push
outsb
lcall
cmpsl
lods
in
enter
addr16
in
jg
cwtl
outsl
mov
loope
cld
gs
pop
dec
adc
jae
and
adc
das
int3
mov
mov
lock
outsb
jbe
cmpsl
jle
or
popw
xchg
icebp
and
mov
pop
test
out
insb
out
mov
push
out
jecxz
xchg
add
icebp
pop
leave
lea
cmp
test
scas
ret
ror
fcomps
mov
jmp
sub
mov
test
xorl
pop
inc
call
push
sbbl
enter
cmp
add
fs
lds
push
jbe
jbe
jb
cltd
sub
andb
test
mov
jl
and
rcll
and
jne
sbb
sub
xchg
push
mov
sbb
pop
push
xchg
std
fstpl
xchg
cwtl
dec
inc
mov
lods
mov
dec
call
mov
out
inc
dec
psubsb
mov
mov
jge
aad
push
outsb
push
icebp
mov
xchg
jnp
mov
jns
loopne
lret
cmp
jne
dec
add
pop
dec
mov
insl
mov
into
lods
out
pop
sti
outsb
int3
in
fbld
xchg
mov
or
stc
inc
rclb
fbstp
or
sbb
mov
jns
and
xor
gs
jl
sub
shrl
sbb
loope
jb
push
fs
xchg
dec
mull
jno
bts
pop
in
jns
fiaddl
sub
inc
outsl
std
xchg
dec
ror
cmp
cmpb
mov
push
sbb
cwtl
ja
test
cwtl
push
add
int3
sbb
cmp
loope
movsb
xchg
pushf
push
or
push
push
jmp
aas
loope
xor
adc
iret
xchg
stos
stos
fistps
pusha
insb
xor
enter
mov
add
out
popf
lock
add
nop
mov
iret
ljmp
and
sbbb
push
mov
dec
jmp
mov
dec
into
push
add
or
popf
sbb
dec
call
xchg
sbb
xchg
sbb
icebp
sub
cmp
mov
ja
or
fstl
sar
nop
test
sbb
fwait
test
into
aaa
andb
fadds
add
inc
push
aam
pop
jmp
mov
in
mov
mov
jge
mov
cmp
daa
pusha
les
and
and
cmp
cmp
sti
sbb
and
sbb
mov
adc
jp
sub
sarb
movsb
sub
hlt
cmp
pop
stos
ds
push
and
cmp
fisubs
jg
test
jo
inc
idivb
fistpll
mov
sbb
popa
xor
mov
jmp
mov
loopne
mov
in
div
scas
jle
outsb
and
adc
fstpl
subb
nop
paddsb
out
fstpt
iret
sub
xor
mov
rcl
rcrb
inc
inc
dec
push
and
inc
mov
or
test
in
mov
adc
push
orb
lcall
mov
sub
push
loopne
cmp
mov
and
lahf
in
sub
and
jno
lret
dec
test
in
out
test
inc
stc
add
rep
sub
mov
imul
cmp
sarb
daa
mov
xor
push
mov
mov
mov
incl
dec
adc
std
cmpsb
das
f2xm1
push
stos
cmp
std
mov
pop
fldenv
insb
lahf
rcrb
mov
add
push
xchg
mov
iret
inc
xchg
mov
dec
cmp
call
inc
test
or
test
cmp
mov
jmp
inc
mov
imul
rcll
jnp
fwait
cmp
inc
aad
arpl
test
je
loop
dec
shll
aas
inc
hlt
jno
sub
sbb
sar
sti
and
jne
dec
pop
popa
out
sahf
pop
in
xchg
hlt
cs
into
popa
or
popa
sub
push
outsl
aam
jae
sbb
cmp
jne
mov
shlb
hlt
sti
fidivs
les
xlat
std
stos
ja
in
inc
pop
jl
add
cmp
into
js
outsb
pop
stos
div
fsubr
loopne
ss
int3
add
mov
inc
pop
push
mov
movsl
adc
xor
sbb
inc
pop
arpl
or
jb
push
lock
test
jp
or
mov
adc
add
push
psllq
push
std
fcoms
jno
scas
or
pop
adc
xor
push
and
mov
sbb
orl
int3
xchg
push
insl
jl
inc
jmp
add
cmp
sub
pop
repnz
mov
lret
loope
or
xor
xchg
ss
stc
pop
aas
in
pop
sar
stos
scas
mov
or
and
lea
int
cmc
ficoml
sub
cmp
or
mov
mov
mov
test
repz
pop
fistps
jo
lea
arpl
cld
mov
cli
xchg
pop
inc
mulb
sub
sbb
and
mov
add
rcrb
xor
sub
clc
lret
cli
movsb
frstor
inc
xor
es
out
sbb
jmp
sbb
insb
lret
das
lods
das
sti
mov
pop
addl
cmpsl
dec
fidivrs
xor
jae
adc
jo
mov
mov
sub
pop
lea
mov
cmp
popa
test
pop
popa
sbb
sahf
push
and
sub
cltd
jne
das
pop
call
push
sahf
out
sarb
push
lods
sub
ja
inc
sarl
rorb
inc
xor
xor
clc
jne
xchg
imul
mov
push
dec
mov
inc
inc
jecxz
std
popf
test
jns
jae
pop
dec
mov
push
adc
pop
sbb
lds
in
in
pop
mov
in
inc
adc
stos
sub
sbb
stos
push
stc
out
xor
lods
rorl
rcrb
cwtl
cmpsl
mov
push
loopne
lods
mov
cmc
in
sub
push
out
and
mov
sub
sbb
cmp
fwait
mov
sub
sti
mov
out
insb
inc
std
xor
aaa
cmp
cwtl
dec
dec
inc
stos
insb
sub
or
push
dec
push
and
gs
xchg
jnp
push
and
mov
ja
aaa
lret
jno
adc
je
jo
rcrb
dec
adc
inc
fdivs
ds
in
pop
or
sub
mov
lret
rcr
adc
imul
imul
leave
pop
scas
out
push
mov
xchg
jb
xor
pop
sbb
push
int3
xlat
dec
sub
pop
dec
push
adc
mov
inc
frstor
out
loopne
cmp
cli
push
fadd
ja
sub
mov
pop
int
push
and
outsb
les
xchg
or
pop
inc
jmp
dec
pop
pusha
je
cld
cmc
popa
lcall
in
or
loope
mov
faddl
or
jl
clc
leave
ss
pop
dec
addr16
xor
mov
out
dec
jns
mov
or
and
jecxz
jp
mov
loopne
fidivrs
and
xchg
sub
xor
loop
flds
pop
cmc
ljmp
push
adc
adc
inc
and
push
es
loop
hlt
fs
and
scas
sbb
out
aaa
xor
inc
or
xor
xchg
sub
pop
and
stc
insb
stos
jbe
mov
je
pop
ret
inc
cmp
cmp
filds
daa
push
jge
gs
cli
ss
imul
ss
clc
movsb
sub
add
mov
cmp
fbstp
mov
test
aam
ja
jns
mov
and
iret
or
mov
mov
cmc
adc
inc
addr16
imul
pop
dec
mov
sub
mov
mov
add
scas
fnstcw
out
jns
xor
loop
dec
xchg
jecxz
bswap
divb
pop
mov
loop
popf
aad
insl
mov
cmp
dec
and
jl
and
aad
jnp
les
fs
repz
sbb
ljmp
xor
cltd
xchg
mov
mov
mov
imul
push
fmul
aam
sbb
dec
mov
jbe
jle
push
bswap
sub
mov
inc
into
hlt
scas
push
shr
hlt
or
push
shll
das
xchg
and
mov
inc
cmp
insl
rol
add
mov
das
cmp
lock
dec
add
dec
xchg
aaa
push
test
pop
mov
lods
adc
push
ss
jl
sbb
stos
rorb
out
out
dec
aad
cld
jne
mov
stos
mov
xchg
or
mov
adc
repz
pushf
out
stos
clc
cmc
jae
fidivrl
imul
cltd
enter
dec
pop
mov
in
rorl
popf
inc
cmpsl
in
ret
enter
loop
mov
jle
xor
into
push
popa
mov
fidivrs
dec
outsb
and
and
push
push
orb
addr16
pop
push
add
popa
cmp
lret
and
sbb
jg
mov
hlt
popf
aam
or
mov
mov
mov
push
dec
pushfw
jg
cld
dec
mov
test
arpl
js
and
xlat
adc
mov
int
clc
lea
ss
adc
pusha
clc
cltd
cmpsl
cmpsb
dec
into
hlt
aas
lahf
jno
mov
in
add
xchg
shr
ljmp
push
ds
mov
push
adc
add
mov
mov
addb
push
inc
popf
xor
test
sbb
and
adc
inc
addr16
rol
dec
xor
xor
in
mov
jbe
iret
xlat
jge
lds
inc
mov
loop
cmp
sti
mov
sbb
inc
out
pop
sbb
cs
in
mov
cmc
lret
mov
inc
cmc
into
inc
push
inc
out
xchg
bound
and
jno
popa
fiadds
add
mov
test
push
mov
sbb
js
push
adc
arpl
lret
rorb
cmp
mov
push
repnz
fisubrl
loope
cmp
mov
sub
xor
negl
sahf
jp
jge
mov
mov
jge
xchg
pop
mov
sarb
dec
ljmp
mov
or
mov
or
movsl
and
push
adc
sbbb
insb
movsb
or
dec
adc
lret
push
addr16
inc
push
and
jb
mov
lahf
sub
into
out
fidivrs
dec
test
shr
mov
mov
std
cmp
lret
pop
ds
jle
mov
icebp
or
sub
dec
sbb
dec
daa
fidivs
mov
dec
imul
jns
repnz
orl
mov
or
daa
adc
jbe
mov
jle
jmp
sub
dec
jne
add
push
scas
lret
sbb
sub
sbb
out
xor
cmp
xchg
iret
in
xor
xor
rcr
adc
mov
cmpsl
iret
push
cs
and
mov
mov
out
in
lcall
into
pop
adc
scas
cli
adc
pop
mov
jmp
inc
scas
stc
xlat
aad
jae
aam
jnp
shlb
outsb
stos
insl
mov
shr
les
jmp
out
cmpsl
jg
mov
cmpsb
nop
push
mov
jmp
cmp
inc
or
dec
scas
mov
pop
scas
pop
cmpsl
clc
push
inc
mov
sbb
out
pop
jge
push
enter
rclb
stos
and
sub
aad
mov
jg
ret
mov
or
aaa
ljmp
and
inc
jl
jp
mov
in
leave
popa
pop
push
nop
sub
pop
aas
je
jnp
pop
roll
mov
aam
xchg
movups
loopne
pop
adc
sbb
sbb
xlat
cmc
fsub
mov
orl
loop
adc
sti
sti
cli
adc
int
js
pop
push
sub
mov
arpl
pop
cs
jae
xor
jg
test
test
xchg
fsubl
enter
aad
adc
mull
test
add
popa
or
mov
sti
add
jne
loope
out
cmpsl
pushl
sbb
adc
push
xor
sub
lods
and
mov
mov
cmp
out
fs
popa
pop
sti
loope
pop
idivb
shlb
arpl
loopne
notb
shl
adc
pop
push
mov
std
testl
cld
movsb
jecxz
cwtl
and
lods
xorl
push
mov
xlat
shlb
repz
push
stc
movsl
dec
mov
enter
xchg
pushf
ljmp
out
and
lcall
adc
mov
dec
sub
sbb
jmp
loop
mov
test
adc
or
sbb
cmpsl
mov
jnp
outsb
mov
push
popa
out
fst
addl
pop
bound
or
shlb
stos
lods
mov
add
leave
dec
adc
adcb
inc
hlt
jle
and
jg
dec
cmp
repnz
movsb
pusha
mov
data16
adc
mov
std
hlt
test
ja
mov
mov
mov
shl
sbb
data16
movsl
lahf
push
stos
insl
ljmp
pop
es
jle
scas
movsl
sbb
sbb
and
mov
pop
push
push
xchg
xchg
push
sub
decl
test
push
dec
cmpsb
sbb
leave
inc
cld
pop
mov
test
xchg
hlt
scas
stos
cltd
out
mov
add
add
inc
jb
ret
dec
filds
inc
add
adc
pop
shl
js
xchg
jo
bound
mov
jmp
pop
pop
and
lret
dec
lock
movsl
dec
imul
mov
mov
movsl
mov
daa
fisttps
jne
hlt
pop
inc
add
push
popa
iret
jg
adc
push
sub
fucomp
lret
lea
arpl
dec
add
jns
push
pop
loopne
jnp
pop
and
es
arpl
divl
mov
dec
mov
sbb
push
call
sahf
pop
out
or
and
push
in
dec
les
sbb
jne
outsb
das
jmp
sbbb
mov
fsubrs
fidivrl
pop
dec
loopne
jmp
adc
or
decb
push
nop
cwtl
cmpsl
test
cmpsb
imul
and
mov
mov
arpl
push
cmp
push
or
data16
imul
dec
pop
pushf
adc
or
xchg
jno
mov
addr16
insb
xor
pop
shr
pop
ret
aad
or
and
adc
dec
add
mov
inc
dec
outsl
lods
shrb
fnstenv
mov
sub
rolb
adc
ds
inc
pop
mov
dec
xor
es
sbb
cmp
cmp
mov
jno
cwtl
jbe
cs
pop
push
hlt
push
xor
lods
sbb
lea
dec
addl
mov
or
mov
mov
and
stos
scas
ljmp
repz
dec
in
das
arpl
push
es
sbb
mov
nop
dec
insb
cmpsl
call
or
dec
repnz
xchg
xchg
mov
jmp
dec
push
cmp
lods
xchg
lret
out
mov
xchg
loope
mov
in
loope
ljmp
inc
push
mull
adc
ret
test
enter
int3
mov
pop
push
popf
arpl
and
inc
mov
fbld
jno
mov
mov
loopne
call
push
inc
test
xchg
xor
cmc
sarl
call
jecxz
dec
aaa
aam
bound
push
test
seta
insl
xchg
jo
fisttps
and
pop
xchg
outsb
orb
and
sub
aas
and
nop
jns
fdivrs
xor
inc
std
mov
dec
xchg
leave
sbb
popa
cli
or
mov
push
pop
mov
mov
mov
push
imul
sahf
clc
mov
nop
adc
cmp
pop
dec
adc
movsl
adc
outsl
test
push
adc
shrl
pop
sub
out
daa
aam
xchg
out
mov
clc
or
ret
cmpsb
xchg
mov
and
lret
rcrl
cli
mul
push
fwait
inc
cmpsb
ss
clc
pop
jmp
xchg
xlat
and
cli
add
lahf
mov
test
outsb
in
pop
mov
flds
lcall
xor
rorb
add
imul
push
or
adc
xor
dec
int3
xchg
outsl
or
arpl
outsb
test
fcmove
adc
dec
xchg
xchg
stc
fstpl
fildl
add
arpl
add
mov
lds
adc
mov
out
mov
outsb
push
sbb
or
cli
negl
xchg
ja
jmp
adc
inc
popa
pop
pusha
outsl
daa
dec
outsl
ljmp
fldl
aam
sub
cli
mov
jmp
pop
outsb
cmp
cmp
pop
xchg
cld
hlt
inc
enter
add
or
stos
jnp
pop
loope
mov
sbbb
xchg
sti
imul
movsl
std
test
out
xchg
and
mov
outsl
xchg
add
lods
mov
out
addb
repz
and
insb
sbb
push
imul
sub
sub
jle
mov
cld
xchg
imul
xor
mov
jb
and
xor
add
push
ja
adc
dec
jo
std
adc
pop
shlb
add
cld
loopne
jge
out
push
adc
or
or
add
mov
xor
cmp
adc
jle
jo
jmp
jbe
fcomip
rorb
repnz
cmp
loopne
sub
pop
in
adc
inc
or
jb
mov
xor
mov
jp
cmc
pop
and
cwtl
xchg
cmpl
fidivrl
add
enter
adc
jns
leave
hlt
in
push
mov
sti
jae
push
or
adc
mov
pop
sbb
mov
jecxz
lods
dec
sub
sahf
xor
stos
daa
dec
cmpl
lds
jns
imul
pop
add
mov
out
mov
or
push
sarb
movsl
add
aas
fisubs
xchg
mov
mov
and
cmovno
aam
sbb
xchg
or
adc
sub
ljmp
cmc
frstor
mov
inc
std
cs
jbe
fwait
andl
std
mov
pop
ss
loope
dec
lods
jg
loope
push
and
jae
push
pop
sub
ret
jge
or
jl
pop
popa
xor
hlt
jecxz
fstpl
dec
xchg
xchg
shl
daa
inc
leave
or
insl
rol
mov
lea
insl
adc
adc
dec
mov
jl
out
pmulhuw
or
jmp
mov
sbb
push
pusha
inc
sti
imul
jmp
mov
xchg
leave
mov
push
leave
cmp
fxam
shrl
mov
push
cmpsb
dec
inc
xchg
inc
jae
std
data16
sbb
xor
test
mov
jmp
pusha
push
insl
icebp
in
lret
inc
or
cwtl
scas
cmp
and
sbbl
pop
mov
inc
sbb
out
into
cmp
rclb
adc
roll
xor
shrb
jns
pushl
and
adc
pop
cli
ret
mov
sti
xchg
iret
dec
popf
or
push
and
push
push
inc
in
cmpb
sbb
mov
cmp
mov
and
jno
adc
lds
imul
sbb
in
fmull
je
adc
daa
orb
arpl
cwtl
fcoms
clc
jae
mov
inc
insb
push
scas
lods
and
lcall
lods
ret
notb
jnp
aad
jb
lea
inc
push
ret
xor
out
add
shlb
pop
and
lahf
inc
inc
xlat
lods
mov
mov
and
sbb
fwait
stos
xor
jno
les
cmp
cwtl
jae
add
or
sbb
out
mov
mov
and
loopne,pn
add
aad
jnp
pop
mov
jno
inc
and
jnp
jge
loope
inc
sub
add
icebp
mul
sbb
xor
leave
dec
or
and
into
cmp
nop
subb
jb
fwait
insl
negb
pop
adc
orl
pusha
stc
inc
mov
lea
repnz
daa
xchg
inc
and
dec
fldz
fnstcw
ret
mov
mov
nop
les
fs
std
adc
outsl
cs
jno
in
out
faddl
insb
cli
and
sarl
cmp
inc
push
js
iret
test
notb
mov
xchg
lcall
pop
mov
sbb
ficoml
cs
enter
orb
cwtl
mov
sub
xchg
popa
or
inc
rclb
jl
sahf
ss
adc
test
and
ds
or
lret
pop
inc
roll
xchg
xor
push
gs
test
and
out
dec
cmp
adc
btc
fnsave
sub
sbb
daa
pusha
pushl
lcall
stos
sbb
les
fnsave
cmp
iret
push
cltd
push
inc
adc
int
adc
dec
mov
push
cmp
push
sub
scas
pop
cmp
lret
pushf
push
mov
cmp
and
mov
cld
in
aas
push
push
jne
pop
push
add
lods
mov
mov
cmpsl
add
sub
pop
shlb
es
cmp
or
add
mov
mov
into
xchg
hlt
pop
lods
insl
mov
xor
stos
mov
decb
lods
int
inc
adc
cld
shrb
sti
mov
inc
sub
dec
jne
stos
lret
fstpt
jbe
arpl
and
cmp
std
cltd
arpl
movsl
jno
test
icebp
fisubrs
test
arpl
nop
imul
test
mov
sbb
repz
out
mov
out
les
or
adc
mov
loope
rcrb
pop
insl
dec
pop
jle,pt
xor
insb
inc
cmp
add
push
add
jno
adc
pushf
lock
push
mov
mov
insb
push
outsl
hlt
popa
bound
jae
xor
jae
xor
ljmp
call
xor
les
dec
out
lret
data16
test
shl
dec
cmp
out
arpl
popl
outsl
and
add
adc
pop
or
into
or
int3
ds
dec
jbe
cmp
cmpsb
add
dec
call
dec
pushf
cmp
fnstcw
cmp
ret
pusha
pop
das
popl
dec
test
cmpsb
subb
mov
addb
push
test
sahf
add
or
scas
out
movsl
jle
dec
sar
cltd
and
xor
xchg
out
lret
pop
xor
cli
int
sahf
out
mov
pop
or
mov
jae
jae
dec
sbb
jle
outsb
gs
jae
bound
les
cwtl
insl
andl
cmpsl
inc
push
jns
int3
and
scas
mov
adc
mov
mov
dec
stos
sti
sub
xchg
dec
or
inc
cmpsb
lock
insl
imul
sbb
and
ljmp
add
je
xchg
test
add
test
jb
sub
and
ja
xor
sbb
add
ret
mov
mov
xchg
mov
subl
aas
mov
jecxz
pusha
pushf
ret
mov
jb
arpl
pop
xor
aad
stos
icebp
inc
stc
loop
inc
sbb
lcall
ljmp
mov
shrb
adc
xor
mov
orb
jge
xchg
fistpl
push
stos
es
loopne
loop
fdivs
daa
lahf
call
adc
mov
hlt
mov
into
or
or
imul
pop
pop
mov
int3
mov
push
sahf
loope
xor
xchg
pop
clc
or
aad
mov
add
das
pop
loop
jbe
sub
mov
xchg
jo
imul
cmp
jne
icebp
test
arpl
test
test
mov
cmp
push
call
mov
and
movsb
mov
add
out
pusha
push
mov
xchg
push
pop
rcr
insb
popa
negl
add
insb
cli
repnz
add
cmp
sub
popa
add
or
pop
dec
bound
jl
stos
fldenv
sub
out
out
push
out
cmp
cmc
fdivp
pusha
not
inc
sub
add
and
fstpl
inc
out
fidivrs
lods
inc
out
shll
nop
and
mov
imul
pop
xchg
pop
xchg
lods
dec
adc
add
or
sub
into
imul
or
out
mov
mov
xlat
xlat
pop
fildll
xchg
pop
mov
and
jecxz
getsec
and
pusha
jle
mov
and
jb
lock
popf
leave
iret
mov
fists
stc
leave
inc
je
jnp
lahf
ret
stos
pop
pushf
int
dec
test
pop
cmpsb
lahf
xchg
cld
inc
xchg
mov
push
push
or
aam
fimuls
xor
inc
lahf
cmp
mov
stos
stos
mov
ret
filds
mov
mov
sbb
and
pusha
sub
pop
jns
hlt
stc
inc
xor
clc
adc
mov
sub
and
dec
sub
pop
xor
int
push
cmp
pop
jbe
and
outsb
inc
add
decl
cltd
sarl
or
stc
out
int
imul
pop
pop
xor
dec
xchg
cmc
in
jmp
dec
lods
adc
sbb
mov
mov
lret
sub
and
push
loope
ja
pop
cmpsb
add
adc
in
ret
cmpsl
sub
adc
jecxz
xor
les
cmc
imul
dec
xchg
mov
popf
repnz
sub
aas
push
xor
xchg
pushf
cltd
mov
mov
inc
dec
xchg
loop
mov
add
mov
das
xchg
out
mov
lods
xchg
int3
hlt
mov
pop
adcb
sbb
pop
pop
mov
xor
push
cmp
hlt
shlb
mov
int
cmp
xor
cmp
mov
xchg
icebp
aad
xlat
adc
sti
or
add
movsl
loop
mov
push
popa
test
sub
pop
xor
scas
out
ficoml
shlb
jl
add
addr16
cmc
add
inc
and
inc
push
out
hlt
es
push
xor
les
mov
test
mov
pop
cmp
cmp
fldcw
inc
fiadds
out
jmp
xchg
xchg
sub
push
push
sbb
movsl
or
adcb
cmp
fcmovb
pop
mov
aam
enter
xchg
mul
in
mov
mov
mov
mov
and
mov
rclb
mov
xchg
call
stos
loop
and
mov
and
stc
jb
ficoms
je
into
enter
inc
cmp
dec
hlt
jl
mov
lea
sbb
mov
fs
fwait
cmp
fsubs
xchg
push
xchg
mov
lcall
jge
dec
cmp
jb
adc
xchg
imul
or
into
insb
push
push
repz
ss
xchg
das
pop
and
int
inc
pop
flds
mov
sub
dec
mov
adc
and
leave
and
lods
cmp
jns
and
pop
pop
movsl
push
in
in
sbb
ficomps
mov
iret
pop
sbb
fnsave
lahf
pop
sarl
or
push
iret
pop
sub
jb
mov
movsb
mov
mov
mov
and
je
mov
jl
outsb
movsl
jae
fs
dec
iret
inc
jb
cmc
adc
cwtl
lock
cmp
ret
sbb
cmpsb
adc
cltd
mov
sub
mov
lret
sbb
sbb
jmp
jne
mov
mov
cmpsl
loop
ss
sahf
jb
xchg
xor
loop
jecxz
add
mov
xchg
pop
fs
sbb
xor
push
or
adc
mov
or
dec
stc
loop
out
push
push
sti
dec
lods
dec
or
xchg
pop
adcb
daa
cmp
iret
inc
popf
lret
cmpsl
dec
int3
jns
int
push
cmp
dec
and
out
add
lds
cmp
fmulp
cmp
inc
xchg
mov
lahf
dec
int3
mov
call
inc
or
add
sbb
add
cmpl
je
cmpl
jbe
jmp
push
push
call
mov
dec
mov
jmp
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jl
jmp
pushl
pushl
push
push
pushl
call
jmp
mov
xor
add
cmp
movl
jbe
mov
movl
cmpl
je
cmpl
ja
jmp
push
call
cmpl
jne
xor
add
dec
mov
mov
dec
mov
jmp
xor
add
adc
mov
sub
mov
mov
xor
movl
add
subl
imul
andl
xor
xor
inc
mov
cmpl
jge
jmp
pushl
push
call
cmpl
jne
xor
xor
inc
mov
cmpl
jb
mov
mov
mov
sbb
mov
mov
xor
add
cmp
je
mov
mov
mov
add
movl
mov
movl
mov
movl
mov
mov
xor
add
jmp
movl
movl
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
xor
add
add
imul
add
mov
mov
mov
cmp
jb
mov
mov
xor
add
imul
mov
xor
add
or
mov
xor
add
mov
xor
add
mov
lea
jmp
mov
mov
xor
lea
mov
mov
xor
mov
sub
add
mov
mov
xor
add
imul
cmp
jbe
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
sub
add
mov
mov
movl
mov
xor
or
sub
xor
mov
or
push
andl
mov
inc
mov
cmpl
jl
jmp
push
push
push
call
cmpl
jb
mov
sbb
xor
andl
xor
add
inc
mov
cmpl
jge
jmp
push
call
cmpl
jb
jmp
jo
aam
movl
xor
xchg
push
jecxz
adc
jp
adc
jp
movsb
movlps
xor
pusha
lcall
jb
sbb
xchg
loopne
inc
xor
pop
lea
xchg
jns
shr
lea
xor
test
cmp
icebp
jg
jbe
sbb
lods
mov
ret
cmp
enter
push
cmp
in
ret
in
test
mov
mov
adc
fildl
dec
inc
mov
lea
sbb
lret
or
lcall
imul
push
mov
bound
iret
enter
loope
out
mov
repz
xor
jno
loope
or
cwtl
mov
rcr
jmp
push
shl
fsubr
into
cmp
push
imul
xchg
inc
dec
and
div
fdivrl
cmpb
xchg
cmp
dec
cmovb
nop
cli
pop
lahf
hlt
add
xchg
mov
jbe
icebp
ret
inc
rcll
adc
mov
shll
dec
sub
dec
cmp
int
mov
push
add
pop
outsl
jbe
jae
outsb
popa
inc
pushf
and
dec
fs
pop
sbb
push
add
push
dec
sub
in
ljmp
aad
dec
rcl
test
pop
out
cmpsb
pop
popa
mov
in
inc
lock
pop
mov
adc
xchg
lds
cmovp
xchg
xchg
xchg
test
incb
xor
cmp
pop
js
fstpt
pop
les
push
xchg
mov
dec
icebp
xor
jge
and
scas
lret
sub
dec
adc
sbb
ljmp
in
fstpl
cltd
sti
nop
insb
jmp
movsb
lods
test
sub
inc
mov
xchg
insb
ljmp
sbbl
sbb
jge
jno
shlb
test
jo
xor
mov
add
jns
dec
cli
dec
sbb
pop
push
lods
sti
add
jmp
adc
mov
inc
movsl
mov
push
scas
movsb
lret
pushf
xor
push
divl
adc
push
jmp
push
cwtl
push
xor
xchg
xor
pop
push
dec
xor
fidivs
test
sub
rorb
lods
testl
clc
jg
mov
mov
je
mov
cs
or
xchg
mov
pop
mov
cmp
int
push
hlt
mov
xchg
std
mov
xlat
lcall
sbb
push
ja
icebp
xchg
lock
or
stos
in
mov
arpl
popa
push
mov
or
sahf
push
int3
aam
insl
pop
stc
pop
stos
mov
adc
cli
xchg
dec
or
cs
pushf
xor
add
lahf
hlt
mov
cltd
in
mov
fwait
jns
dec
adc
and
cltd
in
sub
das
pop
ficoml
outsl
cmp
and
add
arpl
test
aad
repz
add
addr16
xor
jns
shll
call
cmp
lcall
or
cwtl
enter
mov
ret
mov
xchg
add
dec
sub
clc
insl
ret
mov
pop
pop
ficoml
inc
test
xor
adcl
lahf
mov
lock
lock
xchg
or
add
jecxz
aaa
ffree
jno
mov
xchg
insb
jmp
jle
mov
aam
sbb
std
xchg
es
fadds
stos
and
in
iret
arpl
xor
icebp
and
int3
outsl
push
lcall
sbb
mov
cmp
int
sbb
dec
xchg
pop
add
pop
outsb
jp
adc
sar
xor
inc
pop
sbb
jo
inc
repz
pop
cmpsb
sbb
xor
mov
push
jno
xchg
sarb
xchg
testb
xchg
movsl
out
and
outsl
sub
data16
lds
sbb
int
sub
clc
dec
xchg
mov
or
sub
sub
lods
aam
loopne
inc
fiadds
mov
push
mov
adcl
add
mov
push
adc
pop
call
mov
cmp
jae
pop
das
sub
addr16
mov
mov
dec
xchg
xchg
shrb
dec
aam
into
cmp
cmp
jp
lret
shl
std
or
jg
pop
adc
incb
cld
aas
movsl
scas
insl
jmp
sub
jecxz
movsl
ljmp
leave
sarl
roll
or
outsl
insb
scas
jno
lret
adc
mov
and
int3
mov
jbe
fnstsw
out
xor
xchg
or
cmp
popf
inc
pop
dec
adc
jns
xor
fistpll
imul
loop
cmpsl
stc
lods
out
cs
pop
mov
add
int3
test
cld
dec
sahf
sub
inc
xor
push
insl
iret
in
das
sti
testl
xchg
xchg
sbb
or
mov
in
sbb
dec
in
repnz
std
and
mov
test
call
mov
js
mov
and
adc
mov
sbb
stos
pop
add
xchg
and
xor
js
dec
push
scas
shr
sub
push
cmp
xchg
pop
fnstsw
movsl
inc
call
sub
into
cmp
push
adc
pushl
mov
nop
or
cmp
outsb
scas
jne
push
jo
outsl
add
and
cwtl
push
nop
in
adc
enter
out
mov
dec
loopne
rcll
cmp
out
pop
popa
jno
xor
je
lods
jg
jne
ret
push
popf
pushl
outsb
jge
mov
lea
dec
mov
enter
aas
stos
imul
imul
loope
jmp
loop
fadds
xor
push
xor
or
xchg
notl
or
push
das
shrl
lea
ret
mov
std
and
test
push
int
jne
pop
push
pop
and
adc
jb
movsb
not
adc
jne
movsb
subl
out
and
int
xor
push
inc
lret
daa
stc
mov
push
imul
and
and
cmp
cmp
cwtl
jge
sub
fyl2xp1
sbb
out
divb
xor
popf
inc
ja
test
or
shr
mov
inc
xor
pop
push
repnz
cmpsl
aas
pop
lea
orw
mov
int3
jg
loopne
sbb
dec
insb
cmp
mov
push
mov
jno
dec
push
push
and
test
xchg
jnp
lods
sub
inc
ret
icebp
ret
pop
add
mov
fisubrs
aas
fcmove
cmpsb
or
xor
push
cs
inc
test
adc
sahf
xchg
fimull
shlb
or
cmpsl
jmp
arpl
test
and
fcoms
pop
mov
imul
out
add
inc
sbb
mov
jo
xor
mov
aam
and
dec
icebp
push
jge
push
gs
adc
mov
mov
pop
pop
mov
mov
pop
cmpsb
sbb
lahf
sub
inc
cs
test
lcall
outsl
fists
sub
jl
jl
mov
inc
or
repz
and
test
cmp
mov
in
mov
repz
dec
push
inc
cwtl
popf
cmp
shll
xchg
push
push
sbb
dec
imul
cmpsb
stos
mov
lcall
xor
int
fisttpl
jmp
adc
lret
es
aad
rclb
pop
xor
xor
fwait
fs
and
data16
pop
cwtl
in
cli
test
xchg
in
jle
pop
or
loope
repnz
inc
mov
dec
sub
jno
sti
enter
leave
or
push
pop
test
jb
outsb
loope
in
mov
sti
mov
jo
xchg
pushf
jge
inc
xor
or
testl
pop
cmc
xchg
insb
popf
push
jae
or
or
jl
jge
pushf
jne
enter
test
icebp
jae
pop
or
mov
push
mov
lods
out
sti
xchg
in
or
repz
mov
movsb
stos
loopne
aad
fsub
repz
lret
mov
pop
fdivl
data16
aad
jle
lods
lret
sub
int
jge
cwtl
fwait
aas
and
cmp
sti
std
jp
add
fwait
jne,pt
sbb
push
dec
out
fwait
in
fucomi
pop
fsubrp
out
enter
mov
jns
stos
mov
xchg
sahf
sarl
stos
jecxz
int
roll
scas
cmpsl
or
jl
ds
xchg
aaa
in
or
cmp
ljmp
jmp
push
je
add
scas
or
inc
push
mov
test
andl
pop
dec
popa
incl
nop
ret
ret
popf
adc
shr
cltd
leave
push
inc
test
hlt
sti
jnp
rclb
xchg
imul
test
mov
cmp
lahf
sarl
clc
inc
dec
call
pop
js
into
cmpsb
int
jecxz
pushf
push
inc
push
xor
and
mov
pop
nop
cmp
cwtl
push
aam
sbb
movsl
xor
adcl
dec
lret
movb
xor
pop
fnsave
jmp
mov
nop
xor
jbe
testl
mov
add
pop
sti
mov
mov
popf
lock
xchg
push
cmp
fs
push
rolb
mov
sub
dec
jno
pop
mov
mov
mov
mov
fstl
sub
push
test
inc
ja
jbe
xchg
out
mov
fisttpll
out
mov
mov
add
iret
pop
in
cmp
int
fmull
ljmp
scas
in
sub
les
pop
and
and
jp
jb
addb
jb
stos
lea
xchg
loopne
sbb
cmp
adc
mov
add
mov
cld
pop
mov
iret
mov
ret
xor
and
fcomps
push
pop
hlt
push
sbb
dec
dec
and
cmp
pop
ja
fistps
mov
mov
lret
xlat
out
test
inc
xchg
jmp
and
jge
es
lods
mov
fiadds
fnsave
jmp
scas
aaa
rcl
sub
flds
in
push
aas
bnd
out
loopne
stos
in
pop
nop
fs
mov
aas
fucomi
mov
loope
out
clc
je
adc
outsb
jge
in
push
mov
lods
sub
jl
sub
out
mov
clc
mov
push
jmp
pop
sbb
cmp
clc
enter
int3
ret
xlat
jns
sub
pop
std
inc
notb
mov
xchg
or
sub
call
fcoml
data16
dec
inc
clc
add
repz
call
das
mov
jmp
out
xchg
stos
movsl
dec
xor
stc
mov
cs
push
stos
in
dec
xchg
into
stc
jo
or
cmp
lret
cld
inc
push
out
pop
mov
mov
xchg
mov
js
out
mov
adc
icebp
inc
fstpt
and
xor
in
xchg
cld
fmull
stc
arpl
push
jle
and
test
add
mov
cmp
jbe
cld
pop
add
xor
jle
push
dec
aaa
add
cmp
fwait
cmp
sub
xlat
cld
dec
mov
sbb
mov
adc
jp
inc
in
or
pop
sti
fiaddl
lea
inc
rclb
testb
fmuls
xchg
or
into
nop
sbb
negl
icebp
adcl
fs
push
mov
lcall
mov
xchg
or
xor
leave
xor
aaa
int3
sub
bswap
bound
ja
mov
sub
pop
and
pop
add
repnz
sub
fisubrl
sub
fsubr
mov
je
xchg
ss
js
mov
lret
mov
and
mov
xchg
dec
jne
jp
into
jb
sahf
xchg
rcrl
scas
lods
je
shr
popf
cltd
adc
mov
lds
inc
outsl
mov
jns
popa
inc
mov
lahf
jmp
pop
add
push
loope
push
lds
fstpl
cwtl
fsub
aaa
je
cmpsb
std
lcall
or
mov
orb
pop
popa
sbb
je
adc
sub
scas
stos
iret
mov
mov
hlt
lods
outsl
adc
outsl
and
mov
mov
cmp
movb
add
dec
add
mov
arpl
push
or
shrb
inc
ret
push
gs
xor
arpl
pushf
add
rolb
mov
mov
add
ljmp
cmp
loope
mov
mov
and
stos
in
sbb
or
dec
dec
ffreep
xchg
add
cmp
shr
ret
xor
mov
jb
inc
push
xor
stos
sub
mov
adcb
shll
stos
cli
outsb
ret
jecxz
xor
mov
std
insb
jne
mov
out
push
xor
out
fdivr
nop
cs
fimuls
imul
sbb
lock
shrb
sub
lahf
mov
adc
int
cmp
mov
popf
pushf
push
dec
stos
and
dec
jmp
xchg
cs
xor
fs
cmp
push
cli
xor
xchg
aaa
lcall
or
pop
inc
ljmp
push
enter
pop
inc
test
sub
out
jns
mov
aaa
lret
and
xchg
cmp
xchg
shll
test
jle
cld
shll
in
xchg
sub
std
inc
jmp
dec
popa
roll
and
dec
shlb
cmc
jl
adcl
popf
push
pop
inc
xchg
cmpsb
lods
push
dec
mov
xor
push
imul
test
adc
sub
iret
push
movsb
pop
jo
lahf
outsb
or
xchg
rcrl
rolb
or
mov
addb
push
loope
sub
jno
sub
push
xchg
cmp
add
sub
cld
push
dec
sbb
xchg
dec
and
mov
push
sbb
adc
lods
cmp
lcall
inc
adcb
rcll
fsub
je
sbb
vxorpd
xchg
cltd
mov
xchg
inc
lcall
dec
push
aas
daa
mov
pop
ja
fucomip
cmp
mov
lods
aad
dec
pop
popa
leave
fsts
rcl
cmp
sbb
lock
push
mov
ss
sbb
lock
into
subl
cmc
shl
push
shlb
push
inc
and
je
rorb
into
fs
cltd
dec
insl
cld
add
and
loopne
loop
cmp
sbb
mov
xchg
adc
test
pusha
lods
mov
xor
jbe
test
scas
jle
sub
dec
insl
popa
xchg
or
jp
aaa
cli
vpcomd
jne
mov
mov
outsl
add
repnz
push
push
jle
or
scas
push
lahf
adc
adc
daa
adcl
daa
xlat
and
xor
pop
decb
outsl
cmp
or
sbb
xchg
divb
add
xchg
jmp
xor
xor
xor
bound
sbb
call
shlb
aaa
pop
data16
inc
mov
push
inc
mov
rcr
lds
xor
jne
cmp
cmp
movsb
pop
jbe
push
fisubl
in
out
mov
push
mov
sub
scas
subl
mov
ljmp
add
and
inc
pop
test
mov
wrmsr
xor
cmpsb
rolb
fidivrs
and
es
mov
xor
daa
jle
add
loopne
adc
cmp
sub
scas
push
fcmovne
test
xchg
adc
gs
stc
add
dec
insl
adc
popf
leave
mov
movsl
movsb
xor
stc
popf
out
lahf
jns
xchg
push
in
and
repz
adc
inc
mov
testb
insb
inc
mov
cmp
push
adc
jle
test
inc
dec
loope
pop
dec
mov
pushf
iret
push
mov
inc
mov
dec
push
pushf
addr16
insl
repnz
adc
adc
enter
jbe
lds
arpl
dec
xor
sub
sbb
xor
hlt
insl
dec
pop
and
scas
pop
lods
loop
jbe
test
xor
add
fnstsw
cs
cli
push
add
or
cmp
aas
and
xrelease
cmp
adc
aaa
add
add
in
adc
mov
sbb
adc
lea
xlat
jno
adc
xor
dec
mov
lahf
pop
pop
cmp
fisttpll
xchg
mov
adc
out
xchg
jns
mov
pop
lcall
push
xor
fnstenv
pop
push
aas
push
jl
mov
loop
xorl
pop
pop
mov
int3
pop
cmp
mov
dec
pop
push
repnz
xor
jae
jl
mov
insl
outsl
icebp
cmp
pop
jo
insl
outsl
lret
inc
or
hlt
aad
pop
insb
mov
or
adc
mov
inc
sub
fadds
mov
sub
cmp
push
xchg
adc
xchg
and
lcall
pop
stc
or
sbb
mov
mov
imul
out
inc
loop
enter
xor
or
and
jno
inc
into
mov
xchg
enter
cmp
and
lods
jae
mov
test
pop
stos
bound
sti
cmpsl
sub
bound
mov
add
fstps
clc
jl
icebp
pop
pop
addr16
std
lods
stc
aaa
fcmovnu
outsb
test
out
mov
insb
inc
and
and
xor
xchg
ds
push
add
cwtl
sti
pop
lea
lcall
enter
xor
inc
jecxz
popf
psrlq
ret
pop
dec
sub
mov
sarl
fcoml
pop
adcb
or
rorl
push
aaa
aas
adc
fndisi(8087
sahf
loope
imul
lods
popl
call
cmpb
jmp
xor
fstl
adc
add
xor
out
xchg
mov
mov
inc
lret
push
loope
ret
pop
adc
xchg
cmc
pop
loop
popf
inc
shr
in
ljmp
daa
loope
insb
push
mov
jbe
push
pop
inc
and
jg
std
test
dec
xchg
inc
out
xchg
mov
cld
jb
push
jb
ljmp
mov
cmpsb
inc
ja
rcll
hlt
adc
adc
push
loope
dec
xchg
je
dec
pop
jae
hlt
mov
or
push
mov
mov
insl
test
enter
push
insl
inc
ss
jo
decb
dec
jne
lock
sub
mov
js
cmc
lcall
pop
mov
aaa
rclb
roll
leave
lret
push
sub
mov
jmp
mov
std
test
xchg
js
cmpsl
cmc
mov
hlt
cmovb
add
in
repnz
xchg
add
nop
int3
xchg
nop
in
fbstp
js
mov
xchg
imul
mov
orl
sbb
stos
xorb
test
cmp
add
mov
jae
xor
lods
int
popa
inc
add
lea
mov
mov
xlat
mov
movsb
popa
and
inc
daa
pop
icebp
fmuls
or
adc
pushf
xchg
pop
sbb
rorb
or
pop
jmp
out
mov
xor
movsb
sbb
or
mov
mov
filds
and
out
das
fwait
aas
adc
mov
aas
dec
insb
jno
inc
stos
pop
pop
iret
icebp
aad
cmpsl
add
cmp
mov
cltd
sti
and
addr16
cwtl
mov
out
xchg
les
xchg
jmp
and
dec
sahf
push
or
lahf
mov
inc
mov
xchg
in
mov
xchg
in
jno
and
add
mov
mov
adc
and
hlt
test
lcall
and
jae
jo
cmpsb
push
sarb
iret
lods
outsl
mov
insb
xor
mov
pop
pop
call
xchg
ss
out
or
out
rcll
stos
jae
jecxz
fcmovbe
add
inc
fs
mov
shlb
xor
mov
sbb
daa
outsb
inc
mov
pop
mov
sbb
popa
xlat
or
dec
out
nop
cmc
data16
add
pinsrw
inc
in
push
in
pop
lods
imull
je
sti
outsb
mov
fs
lods
loop
adc
pop
inc
ficoml
cmpsl
sbb
or
jo
mov
or
mov
xchg
jp
psllq
fwait
or
repz
daa
fdivr
sbb
adc
cld
iret
fyl2xp1
xchg
cmp
jns
mov
test
pop
or
cmp
mov
lock
push
and
jno
xor
sbbl
and
push
in
mov
add
mov
movq
cmpsb
cmpsb
inc
and
inc
leave
ror
outsl
push
lods
mov
arpl
xchg
jge
in
andl
lret
cltd
fsubl
add
bound
fcoml
pop
or
dec
mov
repnz
xlat
fldcw
adc
stos
mov
loop
mov
push
ret
inc
jp
cs
daa
inc
test
push
sbb
dec
cmp
cltd
mov
fsts
arpl
jns
rcl
in
push
je
movl
xor
sub
push
adc
decb
stos
pop
out
adc
repz
add
ljmp
and
aas
add
mov
gs
into
scas
add
clc
outsl
stos
cmp
mov
sbb
jp
sub
push
scas
xchg
sub
notl
push
inc
adc
add
lods
mov
arpl
stos
stos
scas
lret
add
repnz
lods
iret
insl
inc
xor
mov
mov
jno
jecxz
std
repnz
dec
mov
fistpll
out
xlat
popa
sar
mov
out
cltd
in
lahf
dec
mov
outsl
out
cmpsb
fcoml
int
icebp
adc
sarb
sbb
sub
jbe
xchg
push
ret
cmp
mov
imul
xchg
mov
inc
pop
inc
std
mov
dec
mov
ja
pop
stos
les
sub
loope
pop
push
loopne
les
mov
lock
test
orl
xchg
and
insb
popf
mov
sbb
push
or
or
jnp
arpl
aam
push
cld
cmc
div
and
enter
iret
sub
aad
inc
fildll
xchg
and
xor
outsl
push
imull
es
mov
idivb
add
hlt
inc
sbb
jp
loop
sbbb
pop
jmp
inc
pop
xor
in
mov
or
push
ljmp
sub
cld
aam
mov
pop
icebp
xchg
je,pt
dec
mov
mov
dec
adcb
inc
push
fnstenv
and
iret
in
add
jp
sar
nop
stos
mov
mov
mov
dec
lds
scas
loope
push
mov
ss
lea
pop
xchg
loopne
push
cmpsb
xchg
cmc
lea
mov
rcrb
sbb
ffree
mov
in
int3
inc
out
mov
mov
jmp
inc
sbb
sub
lods
cmpb
adc
daa
adc
adc
rclb
test
sbb
scas
pop
sbb
in
sbb
rorb
mov
jb
dec
or
lds
repnz
imul
xor
adc
add
add
data16
and
sub
push
sbb
loop
hlt
mov
iret
or
frstor
cmp
jne
cmp
ficoml
idivb
mov
mov
stos
inc
test
ret
and
das
pusha
jne
pop
push
fdivrl
lods
push
hlt
nop
cmp
mov
cmp
mov
sub
ljmp
and
xchg
cmp
mov
into
in
mov
and
jne
lahf
mov
je
mov
pop
hlt
test
jmp
xor
jb
aam
jne
addr16
iret
xchg
shr
rcll
insl
sbb
mov
sub
jbe
loopnew
icebp
scas
mov
stc
push
imul
cmpsl
mov
int3
pop
cmp
mov
or
push
aad
cmp
in
mov
xor
xlat
pop
or
xchg
push
xor
test
pop
adc
adc
jmp
xor
call
or
lret
mov
js
lahf
inc
pop
out
popa
xlat
push
push
fs
popa
orl
inc
jae
sbb
jmp
icebp
mov
sahf
xchg
dec
cld
lret
je
mov
push
cmp
jae
jns
out
pop
push
mov
add
out
ret
xchg
enter
call
cmp
pop
pop
lret
mov
test
jle
add
mov
out
test
pusha
and
jns
aad
inc
xlat
pop
jmp
test
inc
ljmp
lods
dec
sarb
xchg
xor
fabs
cmp
xchg
inc
and
inc
sbb
mov
arpl
lods
mov
mov
cltd
dec
pop
xor
lret
or
mov
cmpsl
xchg
test
test
cli
es
jge
or
call
mov
test
movsb
mov
arpl
aaa
mov
enter
sti
aaa
clc
pop
cmp
jbe
xchg
fcomps
lahf
loopne
sub
jae
mov
test
adc
mov
pushf
mov
mov
in
neg
sbb
jge
lahf
gs
gs
js
es
ret
mov
inc
clc
push
jno
adc
cmpsb
or
scas
mov
xchg
cmp
mov
insl
les
out
and
outsb
imul
cltd
flds
lret
jp
imul
lret
jb
rcll
or
lahf
in
inc
ret
sub
ds
out
pop
aaa
andl
sub
mov
xorl
mov
ficompl
ret
adc
bound
xchg
stos
aad
jg
bound
lret
or
insb
sub
and
das
add
mov
xchg
repnz
mov
lret
mov
adc
sbbb
and
mov
cmpsb
ljmp
movsb
pop
test
jnp
mov
stc
aas
or
cmp
js
adc
cmp
mov
lods
adc
in
adc
loopne
out
mov
fwait
test
mov
cwtl
sub
sbb
stos
jne
sbb
push
add
cmc
sub
mov
sbb
pop
or
orb
popa
jnp
cmc
cmc
lret
pusha
mov
and
lods
lods
sbb
outsl
stos
shrl
int
push
arpl
or
mov
out
ror
mov
adc
sub
sub
cmc
inc
sbb
leave
ja
lret
push
fdivs
cmpsb
mov
or
int
xlat
xchg
inc
pop
nop
and
push
icebp
dec
dec
pop
lock
loope
dec
mov
inc
adc
jg
mov
pusha
dec
aad
mov
xchg
and
dec
sbbb
adc
xor
jecxz
push
shlb
add
inc
test
xchg
cmpb
cmp
adc
xor
inc
aas
ds
mov
pop
call
mov
mov
xor
mov
add
or
xor
sahf
iret
outsb
pop
xor
jbe
cmpsb
icebp
mov
push
dec
add
pop
jmp
pushf
sbb
pusha
int3
mov
cmp
or
xor
and
sti
insl
xchg
lret
add
add
xchg
jbe
adc
shl
sub
jne
insb
push
test
call
sbb
jl
or
push
andl
push
insl
adc
dec
dec
adc
jnp
mov
outsb
jae
sbb
mov
dec
daa
dec
or
jecxz
jns
lods
mov
pop
incl
sbb
push
mov
inc
xchg
push
repz
scas
dec
and
sbb
sbb
popf
mov
xlat
mov
stos
faddp
rorb
ret
fs
addl
pop
pushf
pop
dec
movb
xchg
mov
lods
test
out
adcl
and
je
jnp
mov
popa
pop
arpl
and
pop
lret
jbe
xlat
inc
aad
dec
mov
jp
mov
cmp
jge
pop
and
push
js,pt
aam
sbb
leave
gs
pushf
inc
adc
cmc
out
push
mov
adc
mov
sbb
mov
xchg
mov
mov
movsb
push
pop
ljmp
cmp
popa
ds
jg
adc
inc
sub
xor
or
mov
dec
fidivs
mov
push
cwtl
pushf
mov
int3
inc
mov
xchg
inc
xchg
mov
rdmsr
aaa
and
leave
adc
and
out
clc
out
js
insb
pop
lret
adc
sbb
jnp
inc
cmp
adc
lods
test
xor
mov
jg
cmp
js
popa
ss
jb
and
sub
inc
rcll
pop
xor
jns
dec
cwtl
lods
int
movsl
or
mov
jae
cmp
pop
jno
inc
mov
push
popa
add
into
scas
aaa
test
jp
shll
scas
aaa
or
stos
out
mov
xlat
mov
adcb
pop
inc
imul
mov
xor
add
into
push
sub
pop
add
ja
push
mov
repnz
xchg
or
mov
pop
cmpsb
popa
mov
inc
cmpsb
ljmp
push
lods
scas
arpl
cmp
and
test
jmp
loop
sub
push
mov
pop
test
out
enter
test
xor
inc
add
mov
xchg
adc
push
xor
out
push
iret
mov
mov
lahf
xor
shlb
shl
test
test
ficoml
adc
sar
js
loope
xchg
mov
jg
cmpl
leave
cwtl
xchg
sti
outsl
mov
jmp
inc
inc
add
loope
outsl
adc
or
rorl
mov
xor
sbb
lret
ljmp
lret
cli
mov
lea
das
clc
stos
jnp
xor
push
jb
in
jno
scas
or
in
test
adc
lret
cmpsl
call
push
into
jmp
popa
add
movsb
sub
pop
loope
sbb
add
xchg
push
jae
or
or
jle
sub
lahf
mulb
fnstenv
test
pop
mov
ret
repz
sub
scas
jle
out
add
data16
sbb
xchg
std
xchg
jg
and
or
shlb
js
or
inc
fadds
xchg
dec
shrb
arpl
pop
adc
popf
clc
sub
sub
ljmp
cs
xor
xor
pop
push
loope
stos
xchg
stos
jmp
jo
test
les
paddusw
ljmp
add
mov
data16
loopne
push
in
pusha
call
push
daa
xchg
bound
cld
push
inc
xor
xor
shl
jmp
ja
in
or
push
adc
sub
or
insb
lcall
sbbl
out
pop
sbb
or
test
push
movsl
loop
mov
call
or
iret
sub
fwait
arpl
gs
push
mov
lea
ret
push
push
xchg
add
sbb
mov
jmp
mov
add
icebp
subb
adc
jp
ficoms
dec
sbb
jp
jbe
xor
push
loopne
popa
pop
mov
or
push
or
sbb
call
mov
sub
mov
mov
loop
inc
add
sbb
lods
cli
aam
cmp
or
loop
add
add
es
ret
cld
lods
and
xchg
cmp
sub
imul
popf
enter
pop
or
pop
fwait
sahf
adc
sahf
sbb
cmp
sbb
mov
lds
mov
dec
mov
push
jbe
adc
cwtl
pop
stos
out
lock
mov
sub
mov
mov
push
sub
js
sarb
repz
hlt
cld
addl
mov
jno
icebp
lds
movsl
into
adc
cmp
dec
fidivrl
inc
movsb
xchg
mov
cmc
sub
loopne
mov
out
ret
add
stos
and
push
test
mov
sbb
loopne
ret
es
xor
or
sbb
add
push
add
add
aaa
ret
stos
xor
push
dec
in
pop
mov
aad
arpl
imul
and
fsts
cmpsl
sub
test
pop
push
fwait
jmp
iret
add
push
jge
mov
adc
cmp
sub
movsl
add
sarb
mov
dec
ret
and
pop
dec
jmp
pop
loopne
cmpsl
cmp
in
outsb
ret
sub
fiadds
je
and
push
jne
or
jo
add
push
negb
mov
pop
cwtl
mov
leave
mov
pop
adc
and
into
inc
repnz
mov
gs
xor
lea
mov
xor
mulb
xchg
imul
sbb
ss
in
mov
dec
push
xchg
aaa
jmp
mov
add
cs
out
mov
imul
push
or
stc
or
pop
fsubl
sbb
bound
lods
add
fcomps
pop
jne
cmpsl
test
pop
sub
inc
lock
adc
in
js
outsb
roll
popa
mov
ss
test
dec
ljmp
mov
mov
pop
mov
mov
fwait
jmp
cmp
pop
add
add
adc
ret
mov
xorl
por
fwait
aad
or
stos
push
arpl
push
fwait
into
mov
xchg
sbb
inc
jp
pop
pop
fstp
ret
jmp
enter
popa
xchg
mov
mov
and
cld
addr16
lods
push
popa
daa
adc
jecxz
clc
pop
sub
in
mov
fmul
add
pop
xor
loope
or
jecxz
pop
das
add
cmp
push
es
sbb
add
lods
mov
push
shll
mov
insb
jle
out
loopne
inc
dec
cmc
sub
xchg
xchg
lahf
les
loopne
push
xchg
cld
shlb
out
rcr
xlat
inc
cmp
sti
outsl
cwtl
lret
or
mov
repz
dec
outsl
fldenv
testb
push
cmpsb
dec
rol
jnp
jge
aaa
jbe
out
and
outsl
outsl
and
shll
inc
imul
xor
dec
mov
mov
mov
ret
bnd
and
cmpsl
cltd
fldt
inc
fcomi
and
sbb
sbb
sti
loopne
mov
call
mov
mov
xor
pop
sbb
lock
lcall
sub
jmp
mov
dec
test
push
cmpsb
loope
pop
inc
enter
lods
test
lcall
xor
pushf
sub
dec
sbb
ss
inc
xchg
mov
mov
jae
ror
scas
sub
pop
and
xor
push
and
mov
xor
mov
dec
cs
add
push
adc
leave
pop
mov
faddl
lret
jb
jb
and
inc
icebp
xorl
jnp
adc
pushf
and
pop
lahf
es
mov
cmp
add
xchg
xor
sub
aam
loopne
push
int3
mov
out
call
push
pop
jbe
jne
mov
cmpsl
mov
in
mov
xchg
pop
cld
inc
pop
repz
repz
xchg
pop
popa
mov
std
stos
dec
xchg
ss
push
hlt
movsb
frstor
test
ja
jg
sub
or
lock
daa
push
pushf
pop
cmp
inc
inc
les
inc
sbb
jl
and
int
stos
imul
mov
enter
dec
push
adcl
cmpsb
cmp
shll
mov
call
mov
cmp
xchg
test
or
pop
daa
xor
das
jns
pop
icebp
loop
xchg
jl
xor
leave
sbb
add
nop
fwait
testl
lcall
loop
repnz
adc
pusha
pop
mov
sub
ja
inc
and
jns
loopne
out
sbb
and
xor
add
pushl
pushf
mov
mov
enter
repnz
jnp
test
std
cmp
pop
mov
cmp
dec
jnp
inc
adc
jb
aad
add
js
fcoml
fwait
push
or
ficompl
outsl
inc
mov
stc
xor
ret
mov
ds
pushf
pop
fimuls
cwtl
mov
test
sbb
sbb
xchg
daa
sahf
cmp
xchg
shlb
lods
repz
in
jle
int
imul
mov
xor
mov
nop
shlb
mov
in
in
cmc
inc
les
je
leave
test
js
sahf
and
xchg
clc
cmp
stos
push
ja
pop
aas
jl
aas
mov
mov
xchg
movl
sub
dec
cmpsb
sbb
or
outsl
xor
add
xchg
movsb
sbb
push
call
and
test
pop
mov
xorl
icebp
sub
imul
lods
les
jae
cld
push
popa
inc
xchg
xchg
xchg
push
pushf
rol
rol
adc
add
push
and
xchg
adc
mov
jns
lods
jno
pusha
cmp
jnp
lcall
pushf
ss
popa
mov
shr
repz
stos
loope
sub
cmpsl
push
cs
xor
icebp
and
jg
das
movsb
insb
xor
or
mov
xchg
int
sbb
inc
ja,pn
add
test
pop
sti
cmp
into
cmp
out
push
sti
scas
popa
cmpb
dec
dec
add
mov
sarl
out
lret
cld
mov
in
out
ja
cli
mov
vldmxcsr
jo
mov
int3
cmp
push
sbbl
cmp
cmp
lods
ss
call
xchg
xchg
push
jbe
mov
sbb
jmp
bound
ds
loopne
jecxz
nop
push
dec
in
adc
xchg
xor
test
pushf
mov
jge
fnstenv
fneni(8087
cmp
popa
sbb
fs
jbe
pushf
testb
jae
mov
or
jmp
mov
rcl
mov
in
shll
lcall
mov
imul
adc
inc
cwtl
std
inc
push
movsb
sub
push
mov
sub
ljmp
lahf
inc
adc
je
lock
leave
lods
jnp
hlt
sti
pop
clc
imul
pop
outsb
daa
popa
scas
push
in
jns
pop
jmp
lret
test
or
ljmp
add
mov
sbb
xchg
outsb
dec
sbb
inc
jae
out
mov
sub
and
cmp
dec
fld
ret
xchg
lods
xor
adc
add
popa
cld
popa
dec
sbb
or
dec
jbe
and
jae
adc
and
mov
xchg
stos
adc
mov
xchg
inc
lods
pop
adc
loopne
repnz
int
xchg
gs
sbb
xlat
pop
mov
sarl
loop
inc
fsubs
shlb
ret
insb
mov
iret
push
ljmp
lahf
flds
nop
cmp
xchg
int3
arpl
repz
movw
cmp
enter
aas
lock
jae
mov
js
sub
leave
xchg
clc
aas
dec
xlat
notl
add
adc
adc
push
add
rorl
sbb
and
inc
in
or
shll
out
ret
xchg
mov
cwtl
add
hlt
popl
add
fildl
jl
cmp
int3
pop
fnstenv
orl
cmp
push
aas
lds
mov
icebp
xchg
sti
imul
sub
mov
mov
mov
mov
hlt
fidivs
mov
fimuls
adc
shlb
sarb
cs
push
sbb
pop
xchg
mov
outsl
jg
pushf
das
cmp
xchg
dec
jo
jecxz
ds
sub
int
test
adc
outsl
pop
jne
and
sub
and
inc
icebp
imul
jmp
out
int
mov
iret
test
or
mov
in
mov
insb
scas
mov
scas
je
cmpsb
jbe
pop
stos
lds
les
or
mov
jnp
jbe
lahf
xlat
jecxz
cmp
jns
adc
ds
sbb
push
mov
mov
cmp
ret
jge
iret
jne
je
scas
mov
pop
insb
aaa
mov
je
iret
ds
pushf
ja
xlat
adc
push
or
clc
jp
les
fs
xor
sti
stc
shll
test
loop
jne
sbb
push
dec
mov
push
xchg
stos
add
stc
add
pushf
out
mov
cmp
mov
xlat
pop
xchg
movsb
pop
ror
pop
movsb
push
iret
jecxz
call
daa
sbb
aam
in
and
jb
cld
xorl
xor
mov
push
lret
ret
mov
or
adc
jae
lds
repnz
sbb
addb
cmc
out
mov
lods
and
fdivl
in
test
test
push
cld
push
dec
pmaddwd
ret
outsl
popf
xchg
mov
rcr
sub
push
int
sbb
push
sub
sbb
cmc
mov
fiaddl
movsl
mov
repz
dec
daa
outsb
pop
loopne
push
xchg
ret
ficomps
adc
cmp
mulb
aas
ja
out
in
add
ret
or
push
xchg
push
cwtl
mov
cmc
negb
or
jno
addb
leave
sahf
mov
mov
fcmovu
push
cmc
dec
sahf
and
outsb
xchg
icebp
sub
testl
in
pop
fwait
sbb
lods
or
sti
cli
mov
test
sub
jl
mov
cmp
mov
testl
xchg
or
jae
call
pop
push
add
xchg
out
in
jecxz
fidivs
loope
scas
jp
dec
xchg
lods
xchg
int
jo
inc
sub
out
fwait
into
or
push
clc
xor
push
or
pop
enter
in
or
cmpsb
jne
scas
sbb
push
mov
pop
fadds
push
int3
push
jne
movsl
pop
scas
mov
cmp
ja
xchg
fwait
cli
into
addr16
adc
scas
mov
pop
add
mov
aam
shlb
jg
daa
inc
gs
lret
cli
int
sbb
sub
jbe
das
inc
enter
adc
or
sub
dec
shlb
cvttps2pi
xor
rcrb
push
xchg
into
inc
cmp
data16
in
into
xchg
mov
cmc
sbb
mov
or
pop
add
lods
idiv
jg
sub
mov
adc
js
lahf
lcall
in
push
cmp
pop
daa
adc
jo
xor
cld
mov
test
add
sbb
jae
xchg
mov
lock
scas
adc
jbe
mov
inc
js
sub
test
repz
jbe
std
cmp
push
push
stc
insl
cld
fiadds
out
hlt
jo
mov
adc
dec
dec
cmp
scas
sbb
jo
dec
add
sub
jp
sub
cmc
div
mov
in
or
and
push
repz
sub
cmp
sti
js
mov
pusha
mov
jl
cmp
fidivrl
xor
sub
sar
cmpsb
test
ficomps
xchg
shrb
jmp
jmp
sub
xchg
mov
movsl
sbb
fdivr
jbe
push
jo
imul
into
dec
aas
repnz
outsl
mov
lea
xor
dec
mov
sbb
pop
pop
test
scas
inc
lods
mov
cltd
mov
push
xor
xor
mov
mov
addr16
xchg
dec
loop
dec
icebp
fstl
cs
jae
pop
push
lahf
xchg
prefetch
std
add
loopne
mov
jo
int3
mov
jge
notb
push
mov
mov
in
pop
mov
push
cmp
lods
into
or
push
xchg
xor
out
scas
dec
gs
decl
xor
dec
jne
mov
icebp
mov
je
xchg
notl
adc
lds
std
test
mov
mov
std
insl
pop
loop
stc
dec
pop
or
and
push
jg
cs
imul
mov
cmp
mov
mov
ficoml
dec
mov
test
push
cmp
adc
sbb
add
and
xchg
roll
sahf
fisubrl
fisubl
aas
push
mov
stos
push
insl
inc
fucomip
fisttpl
out
mul
in
sbb
push
jmp
xor
setnp
les
add
and
dec
jbe
test
mov
sbb
jp
scas
enter
cmp
jecxz
icebp
negb
inc
and
hlt
jbe
pop
fstl
adc
fs
lcall
inc
inc
adc
mov
xor
inc
and
inc
orb
mov
sub
adc
cld
cmp
xchg
cld
jecxz
daa
frstor
dec
xchg
push
adc
jecxz
scas
sarl
inc
sbb
push
cmp
mov
subb
push
sbb
int
pop
xor
mov
shlb
pusha
ret
jl
sub
fldt
iret
pop
into
add
stc
mov
push
pop
fsubrp
loop
mov
dec
dec
lods
pop
loope
les
cmp
or
pop
adc
sbb
imul
lea
xor
pop
mov
pop
adc
sbb
aaa
push
add
and
aad
dec
jg
int
shl
shlb
cmp
fdivrp
jne
dec
shrb
fcomps
inc
imul
cld
push
ret
mov
lret
sbb
cmp
outsl
nop
jmp
mov
and
addr16
sti
scas
movsl
ja
daa
cmp
int
add
cltd
push
pusha
pop
pop
mov
sahf
das
xchg
mov
arpl
leave
les
sbb
scas
mov
and
lock
ljmp
or
in
sbb
fucom
mov
insb
jecxz
mov
pushl
hlt
inc
jl
adc
insb
xor
cmp
les
loop
stos
sbbb
mov
lret
xchg
mov
out
jecxz
push
je
jp
jecxz
and
push
jo
arpl
dec
pop
adc
xchg
fcomip
jnp
xchg
movsl
adc
cld
sbb
mov
mul
mov
repnz
daa
dec
stos
jns
pusha
adc
test
jae
and
cmp
and
ds
sti
ss
cmc
pushf
and
loop
sbb
push
hlt
jbe
jo
pushw
aad
popf
les
xchg
pop
mov
mov
mov
fadds
pop
mov
push
test
or
or
mov
pop
imulb
lret
xor
insb
pop
sbb
mov
lock
sub
cmpsl
push
mov
jb
and
mov
xchg
adc
ljmp
mov
cmp
pop
pushf
int3
xlat
out
push
mov
add
push
cmpsb
mov
test
std
pop
or
mov
xchg
sbb
pop
invd
jne
sbb
push
es
mov
repnz
mov
fmuls
pop
push
ds
inc
mov
out
inc
call
sbb
stc
mov
and
cmpsb
lcallw
add
in
mov
lock
orb
push
outsl
push
andl
call
adc
outsb
fs
mov
sbbl
pop
out
adc
sti
or
adc
pop
lret
push
std
aam
outsl
nop
add
int
push
test
mov
mov
pusha
stc
fmull
jbe
outsb
mov
cltd
mov
ret
out
mov
je
rolb
mov
xchg
xor
lods
aam
movlps
add
push
cmp
mov
inc
or
mov
sub
mov
pop
int
cmpsl
xor
sti
movsb
in
or
fs
jecxz
xlat
out
inc
jo
mov
mov
cmpsl
sbb
add
jns
inc
inc
insl
mov
aad
mov
lret
pop
loopne
aad
lret
sub
fadds
mov
dec
ret
ror
test
mov
adc
ret
sub
pushf
xchg
inc
int3
fstpt
jp
mov
icebp
cmp
lods
pop
xor
cmp
rolb
std
repnz
dec
int3
sbb
inc
rcll
mov
or
sti
stc
lds
test
jns
shr
fistpl
in
jecxz
sarb
or
mov
ss
daa
jae
inc
mov
aam
adc
cmpl
gs
xchg
divb
jge
push
fistpll
orl
popf
out
in
jae
aad
mov
add
cmp
cmp
into
cmpsl
nop
jl
or
enter
pop
inc
or
or
xchg
sub
pop
jo
insb
jo
jp
fmul
fsts
and
push
cmp
jecxz
push
adcl
rorl
xchg
sbb
mov
popf
inc
pop
mov
ss
data16
dec
into
mov
ret
dec
inc
adc
cmpsb
leave
movaps
lds
adc
loopne
mov
test
cmp
push
gs
test
pusha
or
test
pushf
lret
push
aaa
pop
mov
loopne
push
lcall
in
ja
test
mov
cmpsb
popf
mov
pop
fdivl
sub
or
fsubrp
movb
and
lcall
pop
dec
push
lea
pop
inc
cmp
repz
sub
sahf
lret
xchg
lret
daa
stc
jl
jnp
cmc
scas
or
push
mov
sti
movsl
in
cmc
cmp
push
arpl
out
shll
mov
fistpll
sti
fsubl
ficoms
aas
push
sbb
jp
mov
lret
call
sahf
pop
data16
andl
out
or
cmp
xor
in
add
shll
cwtl
enter
arpl
xor
lret
std
inc
and
fwait
and
out
ds
and
mov
lds
inc
xchg
xchg
xor
xor
inc
pusha
pop
push
sbb
cmpsl
xchg
adc
lret
hlt
fwait
jecxz
xchg
movsb
jb
lret
hlt
inc
sbb
xchg
sbb
in
test
inc
js
pop
and
test
jo
sti
stos
sbb
sti
pmaxub
arpl
nop
or
into
ret
pushf
js
xor
and
sti
in
mov
std
mov
mov
lods
rorb
mov
jp
push
inc
imul
mov
ss
sbbb
xor
push
aaa
cmc
cmp
push
and
push
xlat
flds
add
sti
icebp
enter
loope
mov
lcall
cmpsb
movsb
pop
prefetchnta
push
jl
pop
mov
fs
jbe
sbb
outsb
sti
loope
dec
push
mov
mov
mov
sbb
jbe
test
repz
xor
pop
inc
mov
imul
sub
xchg
mov
jns
adcb
cmp
je
insl
mov
pop
pop
pop
xor
fwait
push
adc
sbb
enter
das
test
ss
shl
jae
jp
shl
and
sub
adc
adc
dec
repnz
push
addl
pop
lods
inc
hlt
push
mov
out
xabort
sub
cmp
lret
fildl
add
sahf
icebp
call
xor
lods
dec
jp
iret
inc
mov
loope
out
lods
push
mov
push
and
push
int3
jnp
cmpsl
jo
aas
cmp
mov
sub
popf
into
ja
jge
je
pop
mov
out
mov
mov
adc
push
cwtl
or
sbb
sar
jge
xor
lret
cmpsl
xchg
inc
in
mov
jne
sub
insl
call
lret
add
mov
pop
add
pop
mulb
jge
pop
scas
mov
loop
and
pusha
push
adc
movl
iret
enter
jbe
cmp
cld
xchg
shl
jg
mov
arpl
imulb
cmp
inc
cmp
inc
adc
mov
nop
popf
je
mov
mov
sahf
fdivrs
fiaddl
xor
mov
test
cmp
xchg
and
clc
mov
xor
jl
movsl
jae
cmpsb
add
aam
dec
xchg
adc
aad
cmpsb
mov
rcl
or
cmp
xchg
jne
push
test
push
and
sahf
pop
repz
test
shrl
dec
int3
js
lret
fldenv
xchg
adc
js
add
push
not
inc
arpl
fildll
sbb
cs
pop
sahf
hlt
repz
inc
mov
push
mov
pop
fisttps
dec
test
push
jge
in
cmp
imul
xchg
incl
or
loop
stos
jns
xchg
jle
jmp
in
in
and
pop
xlat
rcrb
idiv
loope
pop
dec
jle
push
fidivrs
aam
add
stos
adc
push
mov
inc
cmp
pop
pop
dec
or
movsb
loopne
pop
idivl
lret
pop
cmp
scas
ja
or
icebp
out
cld
add
xchg
js
or
insb
xor
push
dec
add
add
jl
sti
js
jmp
cmpsb
lods
inc
gs
flds
cmp
push
fidivrl
and
push
mov
popf
cmp
dec
adc
mov
sub
lahf
addr16
in
jg
cmp
xchg
shlb
push
insb
cli
inc
xchg
psrad
sub
cmp
iret
fldenv
test
mov
sbb
sbb
jne
lcall
and
nop
cmovbe
lahf
sub
cmpb
cwtl
cmp
mov
fistps
and
in
ret
jge
gs
pop
sub
fisubrl
and
clc
aam
leave
orb
xor
or
cltd
xor
jecxz
ret
jnp
mov
ss
push
or
mov
xchg
push
or
push
xorl
pop
inc
test
xor
es
enter
fs
daa
dec
jns
mov
jnp
and
adc
cmc
stc
dec
lods
dec
xor
test
sub
mov
push
data16
test
pop
test
out
lea
pop
jne
inc
push
jo
enter
out
cld
pop
punpcklwd
popf
adcl
test
adc
mov
push
xor
cs
xor
ret
fucomp
stc
std
mov
dec
adc
add
inc
aam
enter
sbb
jle
je
inc
xor
mov
arpl
imul
leave
jg
insb
sbb
cs
pop
cmp
les
pushf
or
xor
imul
pop
cmp
mov
pop
push
cli
neg
push
leave
sub
add
pop
not
daa
out
sub
pop
loopne
xchg
jle
int
sbb
cmp
cli
mov
addr16
xor
xor
and
loopne
call
jbe
sub
iret
and
xchg
dec
fcomip
fsubrs
sub
lahf
sub
inc
fmuls
shrl
mov
mov
loope
aaa
push
sub
shrl
arpl
popa
xchg
subl
mov
leave
daa
pop
pop
hlt
jae
pop
jne
push
sub
cmpsl
rcl
out
popw
in
jnp
jb
shrl
mov
dec
nop
sub
rcrl
lods
cli
ret
adc
fcoms
outsb
dec
cmp
jecxz
in
xchg
popf
dec
xor
sahf
inc
imul
fstpl
dec
jno
sbb
sti
cmp
das
add
mov
inc
xchg
push
jnp
ja
clc
mov
add
stc
jo
pop
adc
sub
fmuls
lcall
aaa
jle
leave
mov
stos
jo
andl
adc
les
daa
inc
pop
mov
push
jbe
cmp
mov
dec
data16
adc
cmpsb
aam
or
test
push
loop
inc
add
dec
out
push
shrb
pop
js
xchg
insl
jns
frstor
push
adc
nop
sub
sbb
or
dec
bound
bnd
push
add
mov
mov
add
jg
cmpsb
out
mov
sti
dec
ret
cltd
add
jbe
push
xor
mov
sub
and
push
scas
out
pop
cmpsl
sti
orl
pop
xor
mov
inc
je
push
std
jne
push
test
popa
std
js
lock
sbb
popf
sbb
inc
mov
mov
popl
jecxz
sub
add
idivb
fcmovnb
repz
leave
sub
mov
lret
loopne
outsb
jg
add
outsb
sbb
test
sbbl
adc
fwait
jne
pushf
es
cwtl
fstl
iret
mov
adc
rolb
loopne
into
mov
mov
rorb
lcall
loopne
sub
sti
mov
add
rorl
adc
outsl
sbb
out
ja
push
push
pop
pop
inc
ficomps
test
jnp
jo
shr
jge
inc
stos
mov
sub
in
xor
sbb
in
negl
into
jecxz
cli
cmp
stos
inc
inc
mov
incb
movsb
divl
loop
mov
jb
or
inc
inc
loop
or
or
test
arpl
push
cld
xchg
repnz
loopne
in
jne
fdiv
fisubrs
pop
pop
sub
adc
cltd
fadd
subl
sub
icebp
add
sbbl
mov
insl
sbb
iret
test
jns
push
stos
rcll
push
test
test
iret
insb
inc
mov
in
in
pop
shll
filds
and
mov
int
lret
mov
dec
jp
add
mov
icebp
or
jne
cmpsl
xchg
sub
cmp
push
xchg
xchg
push
cmp
fadd
and
jne
sti
mov
pop
xchg
pop
sbb
cmc
push
cmp
shl
data16
mov
jmp
pop
pop
loope
and
aas
dec
dec
jmp
cmp
es
mov
sarb
dec
or
push
fsubs
push
leave
adc
movsl
and
mov
fs
adc
fbld
shlb
cmpb
es
test
add
or
repnz
testb
sub
pop
mov
std
and
sbb
leave
int
aas
xor
fs
push
pop
jnp
mov
addr16
cmp
loope,pt
sbb
sub
and
imul
test
div
fiaddl
fdivl
mov
pop
repz
loope
push
jl
and
mov
int
or
sub
cs
shll
ret
mov
pop
out
cmp
push
push
mov
fsub
jns
xchg
push
movsl
andl
cld
jne
bound
ss
pop
and
int
mov
push
push
dec
inc
aaa
js
adc
push
inc
out
lock
jmp
aam
fldt
loop
xchg
mov
das
mov
ficomps
cwtl
mov
dec
das
jg
fninit
lds
stos
das
ret
pop
inc
jnp
cmp
cs
sub
orb
jnp
inc
jmp
cli
xor
enter
bound
js
cli
pusha
outsb
cs
push
sub
jb
nop
dec
lret
push
inc
pop
mov
push
push
mov
test
cmpsl
sti
inc
push
test
es
mull
loopne
loop
gs
into
test
push
pop
sbb
adc
cmpsb
push
pop
jns
or
aas
test
loope
lods
adc
dec
jbe
fisttps
or
mov
mov
or
pop
leave
push
in
fbstp
imul
iret
xor
adc
push
lds
cmpsb
adc
inc
mov
xchg
cmpsl
and
xorl
sub
mov
jno
gs
outsb
dec
cmpsl
lret
adc
push
sub
pop
daa
insl
lret
sub
clc
add
xchg
xor
jl
out
test
jns
mov
inc
lds
imul
pusha
mov
sbb
pusha
add
andb
inc
stos
mov
sub
push
mov
lahf
jg
in
sti
cmp
push
call
inc
shlb
pop
test
ret
out
shll
cwtl
fsts
xchg
mov
divb
lock
scas
jo
push
push
loope
out
js
and
dec
pop
mov
in
lret
pop
mov
mov
dec
pushf
rcr
aad
ficompl
bound
adc
sahf
jmp
int
sub
out
bound
xor
cmp
mov
shrb
adc
stos
outsl
ds
adc
sub
in
cmpsb
cwtl
insb
sub
mov
pop
pop
cmc
jl
sti
nop
es
sub
sub
cmp
mov
fistpl
out
es
nop
adc
sbb
push
in
or
xor
call
xor
jae
jns
mov
fiaddl
stos
lock
inc
mov
lods
add
pushf
mov
jb
jl
scas
rorl
push
lahf
in
cmp
cmp
cmp
ret
inc
adc
fnstcw
or
mov
pop
cs
lock
dec
pop
jg
pop
inc
cs
ss
lahf
fistpll
cmp
dec
xchg
loopne
jbe
inc
jp
add
and
fdivs
cmp
or
mov
sub
negl
cmp
or
sub
scas
xchg
fiadds
mov
icebp
jae
dec
or
pusha
mov
out
and
daa
es
cmp
sub
push
fcoms
cmpl
es
out
mov
xor
shl
test
and
xor
cld
push
xchg
push
in
mov
add
add
imul
jp
icebp
mov
and
add
jge
ret
add
ficoms
cmp
ret
cli
mov
inc
jns
cmp
sbb
les
out
jb
or
in
arpl
sbb
pop
std
int3
or
mov
and
inc
aam
inc
mov
dec
cltd
sbb
jmp
faddl
push
jmp
sarl
aas
or
imul
jns
cmp
push
orb
rcrl
sbb
dec
or
movb
push
out
jle
test
mov
pushf
aad
js
mov
xchg
das
mov
cmc
int
testl
mov
test
inc
jle
push
cmp
jge
jne
dec
xchg
ficomps
jbe
sahf
sub
enter
fisttpl
or
loop
mov
xor
xchg
push
out
ja
fsts
adc
scas
jp
add
movl
cmp
movl
je
xor
mov
not
mov
subl
xor
adcl
xor
xorl
add
xorl
add
notl
adc
xor
andl
mov
orl
push
add
xor
xor
mov
add
adc
xor
xor
cmp
jne
cmp
je
jmp
mov
mov
mov
xor
add
mov
imul
mov
xor
add
mov
mov
mov
mov
xor
xor
add
adc
lea
xor
xor
xor
mov
add
adc
xor
xor
cmp
jne
cmp
jne
mov
pop
pop
pop
leave
ret
push
mov
push
xorl
movl
dec
mov
orl
mov
mov
adcl
xor
add
orl
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jge
jmp
push
push
call
cmpl
jne
mov
inc
mov
jmp
mov
xor
push
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
pop
leave
ret
push
mov
sub
dec
mov
mov
sbbl
xor
mov
sub
mov
mov
add
movzwl
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jge
jmp
call
jmp
mov
movb
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jg
jmp
pushl
call
jmp
lea
xorl
mov
inc
mov
mov
xor
sub
mov
movl
mov
mov
sub
add
push
andl
jmp
xor
add
inc
mov
cmpl
jae
cmpl
jle
jmp
pushl
push
pushl
push
push
pushl
call
cmpl
jne
xor
xor
inc
mov
jmp
movl
sbb
mov
push
mov
xor
or
mov
or
xor
xor
mov
push
orl
add
movl
jmp
movl
mov
mov
inc
movl
cmp
movl
jb
adc
mov
xor
subl
add
jmp
mov
jmp
sub
xor
test
mov
mov
mov
mov
jp
jne
in
sbb
add
out
push
push
fs
les
xchg
iret
add
xchg
mov
or
arpl
jecxz
mov
xor
jl
sbb
and
jne
fisubrs
lahf
mov
sarl
inc
repz
mov
arpl
test
ds
jae
sbb
sbb
rcrb
shlb
repz
fidivs
imul
rcrl
adc
fimuls
pop
mov
sub
dec
jge
add
dec
and
dec
sub
in
mov
rcll
jl
add
iret
push
cmc
xor
mov
mov
push
or
in
pop
mov
sbb
sbb
clc
mov
imul
inc
push
bound
mov
sbb
sbb
ret
xchg
or
mov
ficomps
sti
adc
pop
xchg
addb
add
mov
sub
pop
lcall
mov
mov
pushf
cmp
xor
push
sti
lods
inc
in
push
stos
cli
lret
cld
sbb
mov
pop
lcall
inc
cmp
imul
fdivrl
push
sub
push
mov
push
add
outsl
lods
aad
test
jbe
adc
movsb
mov
ds
dec
push
negb
ss
pop
testl
inc
das
call
repnz
push
out
ja
loope
push
lea
pop
sahf
mov
out
and
stos
popa
mov
std
xchg
push
push
mov
cmpsb
inc
or
jmp
ja
dec
xor
mov
lods
int
scas
call
sub
pop
xor
stos
rcll
les
mov
dec
jbe
inc
rcrl
sbb
push
dec
out
daa
mov
and
out
aad
mov
xchg
cltd
out
add
adcl
js
push
adc
xchg
and
test
lds
xchg
aam
add
pop
push
jns
icebp
sbb
sysret
ja
lods
jecxz
mov
dec
mov
add
in
lret
cltd
pop
jbe
ficompl
mov
mov
xorb
jmp
dec
push
stos
addb
bound
ds
data16
aam
inc
addl
std
pop
inc
rcr
out
dec
sbbb
sar
or
adc
xchg
pop
movsb
mov
test
add
mov
jl
fwait
lods
inc
xor
pop
adc
std
push
mov
mov
push
sub
out
int
filds
push
sbb
shll
cmp
and
jb
sbb
fdiv
mov
repz
push
lahf
add
js
adc
xchg
leave
js
mov
xchg
ljmp
inc
xchg
push
inc
jmp
push
inc
add
rclb
enter
daa
loopne
in
aad
or
sub
test
fstpl
cmp
mov
push
nop
aaa
xchg
jae
insl
push
enter
lret
cld
cwtl
ljmp
enter
scas
xlat
jecxz
cmp
fcomi
outsb
mov
cmpsb
aas
aaa
mov
comiss
mov
scas
stc
xor
mov
loope
add
shl
lcall
ret
xchg
inc
or
sbb
pusha
ds
jg
cmpsb
adc
dec
aad
lahf
mov
jg
stos
cs
and
mov
mov
push
jl
popa
loope
lea
aas
lret
repnz
cs
xor
dec
repnz
test
loop
sbb
xor
inc
aas
pop
xor
cmpsl
or
scas
cmpl
mov
mov
and
imul
mov
cmpsl
rorb
cmp
test
outsb
in
enter
out
movsb
out
cltd
xchg
xor
xlat
mov
pop
sub
dec
cmp
push
xchg
lcall
movsl
int3
xor
adc
scas
or
mov
test
jg
adc
mov
lahf
inc
inc
adc
cmp
cmpsl
and
dec
imul
clc
jmp
mov
addr16
xchg
push
inc
fs
out
fmuls
jp
sub
xor
sbb
xchg
sub
mov
inc
icebp
mov
lret
outsb
pop
adc
pop
lcall
mov
mov
nop
add
push
aas
dec
pop
loopne
xchg
push
movsb
dec
lret
pop
or
lods
and
lods
adc
cmpsl
jmp
cli
add
stc
cmp
mov
pop
popl
mov
add
or
push
pop
push
push
dec
pop
imul
cltd
aas
imul
sti
rorb
push
stos
or
jo
dec
mov
test
and
stc
add
xor
repnz
adc
daa
stos
inc
lcall
xchg
and
add
jne
in
xchg
push
xchg
mov
xorl
or
sbb
xchg
mov
aaa
push
pusha
add
cs
fsubs
and
in
cmp
pop
and
mov
xor
in
je
test
xor
push
aas
insb
je
imul
lods
jle
cmp
mov
xchg
push
jecxz
add
fsub
mov
sub
pushf
sbb
sbb
outsb
sub
rolb
inc
cld
out
mov
or
dec
outsb
ficomps
aaa
xchg
adc
or
in
sbb
test
xor
pushf
sbb
mov
mov
jo
lods
lcall
dec
mov
add
bound
push
mov
jb
adcl
inc
lods
dec
push
int
dec
xlat
test
mov
notb
stc
shrl
inc
shl
bound
fcoml
mov
sbb
insb
mov
clc
xchg
sub
lods
cs
and
sub
sub
loop
js
mov
repz
jl
fwait
and
inc
and
adc
call
cmp
jle
jb
ljmp
and
mov
xchg
sub
lret
adc
add
jbe
jl
jg
xchg
es
inc
lret
pop
outsl
inc
jbe
fldcw
xor
int
out
jno
shl
cli
out
cmp
arpl
stc
pushf
mov
dec
push
lcall
jae
dec
loopne
sub
or
or
clc
push
int
rcrl
ja
aaa
mov
pop
push
clc
cmp
pop
add
adc
movsb
jle
inc
xchg
es
aas
mov
cli
xor
dec
xchg
jo
fwait
dec
adc
pop
lret
mov
or
imul
push
mov
imul
or
mov
fcmovnbe
pop
xor
hlt
xchg
cmc
mov
enter
loope
mov
daa
lods
inc
iret
jo
in
or
inc
sbb
loop
jb
adc
jb
subb
repz
lds
pop
push
nop
repz
aaa
and
mov
out
adc
and
hlt
xchg
lret
add
insb
or
mov
repnz
push
scas
push
pop
aaa
outsl
xchg
sub
adc
add
movsb
outsb
cld
rorl
jp
jl
xchg
adc
je
aad
push
add
mov
dec
cmp
xor
xchg
push
jl
movsb
mov
scas
mov
pop
js
and
je
jb
call
lds
ficompl
arpl
mov
push
pop
lea
sub
dec
out
push
outsb
outsb
rcll
sub
int
sti
inc
fisttpll
cltd
pushf
jl
cmp
outsb
sub
enter
lds
jecxz
xchg
adc
jge
pop
adc
cld
mov
fiadds
mov
xchg
and
fildl
rorl
int3
out
imull
stos
lods
test
insl
jbe
mov
fucomi
icebp
cmp
add
mov
loopne
imul
loopne
scas
mov
lds
in
sbb
mov
add
ss
jle
xorb
push
jo
xchg
inc
xor
sahf
inc
mov
hlt
fcmovb
jecxz
pop
or
or
sarl
lods
add
dec
sbbb
or
loope
jmp
into
jge
cmpsl
sarl
gs
loop
xchg
add
or
pop
sub
sub
adcb
sub
ror
popf
bound
data16
rcrb
in
lahf
jno
sti
cli
arpl
out
cmp
insl
inc
cmp
stos
jl
icebp
and
add
inc
les
lcall
lea
ljmp
mov
aad
and
or
mov
or
jmp
xchg
mov
mov
stos
adc
cmp
in
xchg
test
or
inc
cmpsl
mov
addb
xchg
mov
call
add
add
inc
cli
mov
mov
mov
icebp
jp
sbb
loop
in
popf
sub
sbb
in
lret
daa
add
xor
scas
add
nop
dec
push
pop
mov
mov
dec
cmp
cs
aas
or
and
sub
repz
leave
sub
scas
sbb
fsubrp
xor
pop
pop
xor
out
fsubr
adc
popa
fnstsw
dec
iret
daa
mov
sub
mov
pop
daa
and
xor
pop
pop
mov
cmp
aaa
inc
mov
inc
and
sub
sbb
and
aam
pop
adc
je
add
mov
mov
mov
cmp
lock
pop
enter
hlt
or
icebp
daa
xor
aam
adc
rcrl
fidivrs
cmc
fistl
push
out
xchg
fsubp
xor
pop
loope
mov
das
clc
movsb
jp
stc
mov
ja
dec
mov
mov
adc
sub
adc
sub
lret
mov
daa
lcall
pop
clc
pop
add
xchg
pop
mov
insl
and
popa
sub
mov
xchg
sub
lahf
push
popa
lret
lock
push
adc
jmp
mov
mov
insl
lods
cmpsb
xchg
vdivss
lock
and
jne
mov
std
jb
add
xchg
inc
mov
imul
sbb
mov
and
jmp
fnstsw
adc
dec
popa
std
xor
sti
imul
sbb
sbb
les
dec
jo
or
dec
and
dec
adc
inc
jns
imul
lds
mov
stos
sbb
test
dec
fidivrl
jge
cmp
les
mov
jmp
aas
insb
fwait
sbb
bound
insb
sbb
add
int3
mov
pop
out
lods
inc
inc
jecxz
insb
bound
aaa
xchg
jl
or
movsb
sbb
arpl
bound
push
int
push
or
loopne
aas
mov
inc
jno
rolb
cmpsl
jb
fldt
lods
adcl
add
mov
clc
mov
sbb
test
add
sub
jecxz
not
aaa
jb
testb
sahf
das
mov
mov
aaa
push
cld
adc
add
mov
mov
cli
push
test
std
outsl
xchg
mov
jg
jno
cs
out
ss
xchg
stc
jp
stos
arpl
leave
and
iret
mov
repnz
cli
inc
out
pop
shll
mov
iret
pop
lods
test
ret
addr16
mov
xchg
mov
fidivl
jno
bnd
cmpsl
fiadds
cmpsl
sbb
inc
sbb
stc
js
adc
js
lock
test
push
add
in
cltd
fisubl
insl
cmp
jecxz
mov
aad
movsl
int3
iret
cmp
xchg
push
dec
fs
mov
dec
iret
mov
xchg
sbb
xchg
or
ja
inc
out
clc
dec
mov
inc
adc
push
jmp
fcmovnu
nop
dec
stos
mov
push
jnp
sbb
or
hlt
call
xchg
cwtl
mov
clc
fdivrs
xor
push
cmp
or
iret
shr
adc
in
out
icebp
xchg
jle
icebp
fwait
jb
cs
or
sub
scas
rcll
and
cmp
push
sub
dec
lea
push
xor
sub
addr16
rorl
pusha
jno
scas
xor
xchg
jae
or
push
shlb
push
mov
mov
lock
mov
clc
mov
fdivs
mov
xor
dec
insb
imul
lods
jle
xor
movsb
cmc
xor
fadd
sbb
lods
lds
scas
xchg
jne
out
xchg
jns
cmpsl
mov
push
mov
pop
fimuls
ret
dec
push
xchg
add
fdiv
or
pop
cmp
jno
cmc
out
push
mov
jnp
jno
pushf
das
jae
lahf
ret
mov
lret
adc
outsb
sbb
sub
out
or
sub
ljmp
repnz
out
ss
push
repnz
bound
fs
push
push
mov
popa
in
orb
clc
cmp
call
call
fldl
push
pop
inc
fsubrl
rcrl
xchg
fisubl
xor
inc
xchg
imul
push
sti
xchg
pop
adc
sbb
imul
ja
xorb
loope
into
push
movsb
imul
popf
sahf
adc
cmpl
cmp
adc
cmp
sbb
jno
inc
add
rol
repnz
ds
mov
or
dec
divl
inc
and
es
call
xchg
leave
imul
cmp
dec
jp
push
nop
cmpsl
int3
xchg
ret
cmp
loope
ss
sbb
scas
sahf
pop
test
mov
sbb
es
js
repz
jns
inc
push
and
xchg
stc
shrl
pop
dec
push
mov
mov
adc
jb
dec
mov
loope
lds
pop
mov
int3
fs
je
out
in
mov
fstpl
or
pop
xor
jb
sbb
mov
les
loop
sahf
negl
cld
cmp
cmpsl
cmp
push
mov
cmp
out
inc
daa
cmp
cmpsb
repnz
cmp
pop
fcmovnb
imul
cmpsl
sub
pop
stc
sbb
enter
jecxz
mov
mov
cld
xor
dec
fildl
sub
dec
lds
fisubrs
adc
lret
aas
fwait
jmp
or
xchg
adc
iret
addr16
push
push
out
mov
sub
mov
in
or
push
sbb
enter
and
mov
sbb
adc
pop
mov
xor
lods
ffree
inc
pop
adc
js
pop
xchg
aaa
inc
mov
fsts
jnp
jae
mov
push
into
scas
adc
sbb
add
add
rcr
cmp
sar
and
adc
fstpl
mov
mov
in
pop
sarl
sbb
ds
fadds
je
push
mov
aam
pop
cmp
mov
sbb
shrd
into
xchg
xchg
jae
ljmp
mov
aas
mov
mov
sti
jnp
ss
orb
repz
xchg
jbe
pop
inc
push
jge
cmpl
and
fldt
mov
dec
push
daa
stos
cld
std
fstl
lods
in
into
mov
adc
jle
mov
sbb
lret
sarb
mov
cmp
and
pop
mov
in
aad
lret
fs
ret
out
mov
pop
jbe
lret
les
popf
in
sub
out
xorl
sub
loope
push
icebp
jle
pop
xchg
fsubrs
pop
push
or
or
mov
or
negb
cmp
xor
fbld
jbe
pop
or
ja
xchg
movsl
jne
push
fwait
aas
inc
shll
in
mov
inc
jo
shrl
mov
mov
xchg
mov
inc
pop
cwtl
in
push
push
xlat
movsb
lods
call
bound
or
mov
pop
jno
jle
pop
ret
negl
sbb
stc
jne
arpl
movsb
or
or
and
sbb
adc
outsb
and
out
sub
xchg
roll
push
push
mov
mov
xlat
test
sub
dec
sbbl
incb
xchg
int
in
dec
and
lahf
xor
inc
movsb
loop
mov
outsb
sbb
pushf
outsl
mov
xchg
aad
push
fmul
fidivrs
inc
addl
sbb
outsb
xchg
jns
bound
dec
add
mov
arpl
sahf
sub
and
dec
push
les
push
fmull
adc
push
pop
int3
pop
not
aam
pop
mov
out
dec
sbb
add
cltd
sbb
mov
test
sub
insb
xchg
fwait
aaa
pop
std
cli
sub
inc
aas
arpl
cli
xchg
pushf
ds
sar
sub
movsl
jns
out
sbb
jle
popf
pop
daa
or
insb
aad
mov
cmp
imul
lcall
imul
cli
pop
inc
mov
lret
repnz
xchg
pop
out
or
sub
data16
lock
imul
jge
cmp
sub
mov
push
lock
call
mov
stc
xchg
lahf
shll
add
mov
cmovg
push
xchg
scas
sbb
jns
daa
rorb
adcb
sar
stos
push
lcall
push
fs
or
add
mov
ret
not
mov
popf
jmp
jbe
adc
jcxz
mov
loopne
jno
filds
dec
push
mov
add
mov
aas
into
push
icebp
sbb
mov
pop
pop
mov
add
ror
jns
mov
add
test
pop
xor
lds
jo
fidivs
lock
rcrb
xchg
cmpsb
push
mov
out
sbb
mov
ret
addb
push
push
jb
scas
fwait
dec
mov
mov
test
rclb
jmp
mov
mov
inc
add
add
push
lods
jno
nop
mov
cmp
mov
icebp
lds
mov
loope
mov
push
stos
nop
test
addl
jg
dec
adc
enter
xchg
xor
in
loope
cmp
pop
adc
je
cltd
out
push
sarb
fists
iret
pop
mov
mov
scas
inc
ljmp
mov
rorl
divb
out
xchg
pop
push
push
stc
xor
sub
jg
cmp
cmp
out
ss
xor
repnz
gs
pop
cwtl
inc
jno
fmull
daa
add
rolb
and
scas
xlat
fadds
cmc
and
rol
shld
pop
fsubrs
mov
push
add
scas
push
xor
dec
scas
and
loop
cmp
rorl
push
xor
inc
xchg
xchg
push
pop
ds
sbb
sub
enter
mov
xlat
frstor
add
add
shll
sbb
push
fdivs
sub
and
sub
icebp
mov
lds
adc
sbb
pushl
cmp
sub
inc
xchg
aaa
fdivr
lahf
push
icebp
fidivl
push
jne
mov
cmpb
movsb
arpl
sarb
test
shl
mov
pop
mov
fcoms
les
sub
add
int3
sbb
fcoml
sub
pop
cltd
mov
out
adc
fsubrs
mov
in
xchg
push
adc
xchg
movsb
push
jne
xchg
testb
xor
mov
jle
imull
pop
lea
pop
mov
int
sbb
jns
fstpl
inc
mov
lretw
test
adc
in
fmuls
and
sub
ds
lahf
cwtl
insl
xchg
test
xchg
sbb
jp
decl
es
sub
or
pop
in
dec
lds
cmp
inc
jbe,pt
lahf
popa
negb
mov
dec
xor
add
jl
into
sbb
sub
adc
ljmp
push
js
pop
mov
addr16
jg
test
jb
or
outsb
and
cmpsl
in
cwtl
je
adc
and
fcmovb
cli
or
and
xchg
add
test
and
mov
test
rcrb
imul
das
pop
mov
dec
mov
or
in
mov
aaa
jo
sbb
xchg
out
lea
js
push
out
dec
push
cmp
out
and
jb
xchg
xchg
popf
adc
dec
xlat
loop
xlat
enter
mov
sbb
jo
ds
xchg
incl
push
and
rcrb
push
popf
ficomps
mov
inc
aaa
and
flds
pop
lock
scas
adc
sub
push
repz
mov
xchg
and
pop
mov
xchg
sbb
fsubl
negb
fcompl
adcl
sbb
jl
fsubrp
xlat
outsl
or
out
test
ss
test
mov
and
dec
sbb
push
stc
stc
orl
pop
pop
or
aam
scas
pop
in
es
xchg
mov
in
into
scas
es
xorl
mov
xor
dec
or
mov
and
int3
loop
lods
pushf
xchg
cmc
jecxz
stos
pop
cmp
add
imul
inc
xchg
sahf
popf
add
arpl
mov
in
mov
push
push
mov
cwtl
jmp
mov
inc
mov
clc
daa
sbb
repnz
std
icebp
shrb
xor
jnp
sbb
dec
mov
push
pop
dec
inc
rorl
js
inc
fisttps
aaa
mov
adc
lea
mov
pop
xor
jne
lcall
jbe
or
xchg
xchg
cwtl
lds
stc
sub
lret
dec
jle
sub
pushf
add
xchg
cmp
and
mov
fistpll
neg
insl
repz
jecxz
addr16
jo
data16
dec
cmp
xchg
push
setg
outsl
add
push
xor
rclb
pop
sub
stc
sbb
adc
imul
scas
lret
xchg
aam
and
subl
add
add
lcall
scas
pusha
stos
test
fstp
jp
xor
mov
mov
insl
push
jnp
data16
lods
neg
stos
ss
and
dec
mov
sar
stos
decl
add
std
mov
lods
jbe
and
fwait
mov
sbb
add
push
inc
xchg
add
testl
xchg
push
mov
ljmp
cmp
sub
pop
lods
jecxz
add
shl
sbb
cmpsl
sahf
pop
leave
lods
lods
nop
inc
sub
in
sbb
loope
dec
pop
inc
push
xor
das
outsb
push
dec
push
sub
fistpl
mov
fwait
pusha
stc
mov
jnp
js
ret
push
mov
jl
xchg
adc
movsb
sub
push
mov
xchg
push
lahf
pop
jbe
sbb
enter
dec
dec
cltd
divb
sub
pop
sub
jnp
dec
mov
les
push
insl
cmp
mov
and
dec
cmpsb
jg
negb
or
xchg
cmp
imul
jne
push
add
sub
dec
test
push
fs
lods
bound
add
push
insl
shr
adcb
cmp
dec
add
sub
test
adc
jl
arpl
push
scas
dec
cmpsw
pop
out
enter
jno
iret
xlat
mov
mov
fisubrs
loope
inc
jb
pusha
adc
mov
and
mov
jb
push
fsubs
mov
jnp
inc
pop
mov
ret
data16
pop
das
test
in
ja
in
inc
jmp
int
cmp
push
xchg
shl
imul
scas
pop
xor
dec
jmp
fisubl
adc
jle
fmuls
adc
std
lcall
inc
fdivl
popf
repnz
test
mov
inc
fiaddl
pop
ret
mov
mov
cli
lret
adc
roll
or
cli
loopne
or
incl
addr16
add
mov
std
daa
pop
push
ja
mov
or
mov
cmp
movsw
repnz
fidivrs
inc
mov
mov
xchg
and
jmp
movl
sbb
das
sbb
shl
repnz
push
enter
sub
adc
cmpl
std
in
sbb
inc
jnp
imul
push
or
adc
pop
fwait
mov
sahf
fs
fidivl
adc
dec
js
xchg
loope
cmc
jmp
cltd
aas
push
sahf
jmp
xor
sbb
xchg
add
in
lods
ficomps
inc
sahf
roll
js
scas
inc
push
add
sahf
orl
xchg
xchg
std
dec
sbb
cmp
or
sbb
add
mov
jl
push
test
lret
sbb
fstpl
jl
rcr
sar
cmpsb
jecxz
aad
lret
imul
cmp
cld
lret
icebp
inc
jae
mov
xchg
daa
inc
fsubrs
inc
dec
int3
cmpsb
mov
dec
mov
cli
scas
sbb
iret
cld
rcll
dec
inc
adc
addr16
jge
int
popa
cmpsb
or
mov
xchg
add
jnp
outsb
in
pop
lds
push
cs
in
dec
mov
cwtl
add
aam
scas
xchg
cli
les
std
aad
in
test
mov
shlb
out
cmp
mov
push
out
pusha
pop
int
jbe
aad
roll
loope
push
cmc
insb
test
fisubl
push
push
dec
pop
outsl
shrb
inc
fwait
jbe
rcr
dec
mov
xchg
ret
mov
pop
jp
das
nop
add
cli
movsb
mov
enter
popf
pop
lock
xchg
gs
scas
sbb
mov
cmc
sbb
dec
je
sub
in
jne
out
testl
mov
push
add
repnz
xor
fisubrs
push
cmp
rcrb
cmp
ljmp
scas
mov
and
repnz
mov
add
enter
pop
notb
movsb
ja
out
movsb
xor
pusha
add
add
flds
cli
jge
jo
leave
sbb
adc
xchg
mov
jecxz
inc
addr16
std
push
into
cmpb
adc
mov
imul
cmp
dec
imul
push
jg
cmp
sbb
orl
sbb
dec
pushf
xchg
adc
mov
test
mov
xchg
adc
out
push
arpl
call
dec
push
pop
popf
mov
sahf
cld
mov
mov
add
out
mov
incl
popa
enter
xchg
dec
mov
mov
scas
or
addb
cltd
adc
les
adcl
jns
sub
les
cmpsl
neg
loope
das
mov
cmp
pop
push
outsb
fwait
xchg
pop
lcall
push
loopne
xor
add
or
add
lods
pop
into
adc
sub
mov
out
loopne
or
adc
mov
out
lahf
sub
imul
adc
lods
adc
inc
loopne
popf
mov
cmp
mov
pop
stos
jge
jg
mulb
out
pop
pop
fwait
cmp
aad
testb
and
mov
lret
mov
and
mov
sbb
fstpt
mov
jae
jge
lods
ds
xor
aas
rcrb
sub
and
rcrb
or
jns
ret
and
ds
int3
jecxz
sbb
movl
add
mov
add
push
in
test
cltd
dec
das
dec
push
hlt
in
fcmovnb
add
dec
mov
or
inc
pop
pop
jg
in
pop
mov
cmp
out
adc
shll
negl
jmp
and
jl
xor
shrl
cmpb
sahf
mov
xor
lds
fbld
sbb
mov
test
out
daa
cmp
aam
leave
push
adc
push
fstps
dec
mov
push
test
xchg
pop
lcall
shlb
inc
syscall
int
push
cmp
imul
loopne
dec
jb
sbb
div
mov
jl
add
adc
push
pop
mov
cmpsl
das
dec
in
scas
pop
add
call
xor
or
bound
fwait
dec
jp
ds
sbb
sbb
test
movsl
mov
dec
mov
xor
rorl
adc
xchg
js
sbb
xchg
out
scas
fwait
sahf
xor
xchg
pop
mov
test
dec
std
repz
pop
test
bound
lods
mov
push
addl
popa
mov
cmpsl
ror
inc
arpl
lahf
inc
add
inc
imul
mov
stc
push
lods
jle
mov
cld
iret
mov
repnz
jmp
stc
add
jno
shlb
aas
inc
mov
mov
lds
dec
jl
repnz
shlb
aas
imul
mov
or
mov
pushf
sahf
test
pushf
or
xchg
movzwl
leave
imul
push
inc
mov
jb
stc
int3
jmp
es
push
les
fdivs
push
in
ja
aam
dec
inc
mov
subl
mov
xchg
and
and
clc
mov
pop
push
fs
popf
push
ljmp
lods
xchg
call
push
xor
out
mov
sub
cltd
lahf
add
and
sub
aam
pop
xchg
sub
scas
andl
mov
cmpl
and
push
and
inc
arpl
out
push
stos
leave
fcomps
stos
sub
xor
test
xor
es
push
mov
dec
in
in
adc
cld
test
xor
andl
fildl
or
iret
jnp
jp
sbb
sub
aaa
or
mov
insl
aas
lcall
jle
into
pop
inc
xchg
cli
cmc
xor
fsubrp
sbb
test
mov
repz
hlt
push
and
ja
adc
push
das
jnp
ficomps
orl
or
ss
ret
cmp
adc
jnp
jbe
sub
cmp
fsubrs
jmp
and
stc
shl
arpl
lods
adcb
call
xchg
cld
pop
int
es
jp
ds
dec
pop
sbb
aad
xor
dec
adc
inc
add
cmpsb
xchg
or
aam
mov
push
lods
push
in
imul
insl
int3
inc
push
or
jno
dec
out
fstl
add
jns
dec
int3
mov
sbb
jbe
jae
xchg
shl
jae
outsb
test
into
mov
pop
sub
mov
cld
push
loopne
fs
shlb
ret
shll
das
xchg
ja
sub
arpl
push
inc
rolb
sti
xchg
fisubs
mov
and
dec
or
pop
sbb
sbb
dec
mov
rcl
dec
xchg
and
int
frstor
imul
subl
or
xchg
mov
mov
xor
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
ja
jmp
push
call
jmp
mov
adcl
add
subl
movzwl
xorl
mov
or
mov
movzwl
addl
xor
subl
add
mov
mov
inc
mov
movl
cmp
movl
jne
andl
mov
inc
mov
cmpl
jbe
jmp
push
pushl
pushl
pushl
pushl
pushl
call
cmpl
jb
mov
xor
mov
adc
xor
add
mov
mov
xor
add
adc
mov
movl
adc
movl
or
movl
sub
mov
and
mov
mov
mov
adc
xor
add
mov
movl
mov
movl
je
mov
mov
sub
imul
mov
movzbl
sub
mov
adcl
xor
subl
xor
sub
and
sub
xor
adc
mov
mov
mov
sub
imul
mov
andl
jmp
xor
xor
inc
mov
cmpl
jae
cmpl
jle
jmp
push
push
call
cmpl
jne
xor
xor
inc
mov
jmp
mov
notl
add
sbbl
imul
mov
mov
movzwl
xor
mov
add
or
dec
mov
mov
xor
mov
adcl
add
xor
incl
mov
sbbl
mov
addl
mov
add
incl
and
and
mov
xorl
mov
mov
lea
mov
and
mov
or
mov
mov
orl
sub
add
add
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jge
jmp
pushl
pushl
push
pushl
push
call
cmpl
jne
mov
inc
mov
jmp
mov
adcl
xor
orl
add
movl
jne
jmp
and
mov
sub
add
xor
mov
andl
jmp
xor
add
inc
mov
cmpl
jae
cmpl
ja
jmp
pushl
call
cmpl
jne
mov
inc
mov
jmp
mov
movl
cmpl
je
cmpl
jl
jmp
push
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
xor
xorl
xor
sub
adcl
sub
andl
xor
movl
mov
movzwl
mov
mov
jmp
adcl
mov
addl
mov
xor
xor
jmp
push
xor
pop
inc
or
into
addr16
pushf
enter
jp
pop
jp
repz
mov
cmp
sbb
shr
mov
sub
xor
in
js
mov
sbb
cltd
mov
cmpsb
mov
lea
imul
inc
xor
arpl
push
mov
inc
push
aad
inc
es
rolb
stos
out
xchg
jb
shlb
cltd
divb
jbe
repnz
xchg
gs
into
out
and
push
push
je
cmp
mov
inc
mov
fnstenv
mov
pop
push
dec
push
adc
jnp
mov
add
or
inc
insl
xor
cli
loope
fbld
xchg
loopne
mov
stos
sub
sub
pop
mov
int3
test
fcomi
add
ljmp
jg
jle
inc
sbb
pushf
and
or
daa
pop
adc
int3
push
int3
fwait
popf
cmc
rorl
jb
mov
xor
and
jg
stc
sbb
fdivl
lahf
dec
mov
sub
cmp
daa
fmull
jbe
mov
cmp
sbb
imul
ret
dec
sahf
dec
fdivs
lods
mov
dec
mov
mov
aas
and
cmp
inc
cmpsb
dec
mov
std
lock
adc
pop
mov
xchg
mov
dec
hlt
lods
int
pop
sarl
cmp
mov
cmpsl
sub
out
mov
sub
movb
insl
mov
sbb
fs
shlb
add
dec
test
ljmp
adc
xchg
mov
iret
xor
pushf
adc
fidivrs
pop
xor
icebp
xor
rclb
sub
inc
pcmpeqw
pop
sbb
adc
lea
stos
stos
push
movsb
dec
adc
aaa
pop
dec
shlb
popf
cmp
pop
push
sub
ds
mov
adc
inc
mov
pop
fucom
xchg
xor
stos
xchg
loope
adc
and
inc
lahf
jne
or
fisubs
cmpsb
xorl
xor
push
jl
les
mov
push
bound
xlat
add
push
push
add
cmp
push
in
out
stos
fadd
xchg
arpl
testl
push
out
lret
in
ss
mov
sbb
scas
daa
dec
add
enter
pop
andl
cs
adc
rcll
push
mov
cmpsl
jo
aas
mov
push
mov
cli
rcrl
fsts
dec
lret
mov
push
rolb
mov
cmpsl
cmp
out
mov
imul
shll
addb
xchg
pop
adc
popf
and
shl
mov
push
iret
cld
inc
push
out
xchg
dec
test
and
decl
insb
mov
lea
fadd
lret
xor
mov
shl
pusha
pop
inc
in
sub
inc
fiadds
dec
sti
and
movsl
or
lods
fstps
rclb
xor
sbb
icebp
dec
sbb
xchg
lret
jp
popf
sbb
sub
testb
aaa
and
mov
das
aad
push
push
push
stc
pop
mov
cmp
lahf
aam
in
pop
out
pushl
dec
xchg
xlat
jge
xor
scas
xor
xchg
out
mov
push
inc
lods
adc
push
fstp
mov
sahf
add
fidivrs
nop
cwtl
addr16
test
lret
neg
sub
jl
fidivrl
test
je
fldl
int3
iret
jle
dec
enter
stc
filds
dec
leave
xchg
bound
mov
sub
in
outsl
xor
inc
push
pop
stos
pusha
jle
fidivrs
jb
dec
pop
call
jae
das
jle
mov
rcrb
lea
loopne
pop
outsl
cmpsb
pushf
addr16
xor
xor
sbb
jmp
sub
pop
psrlw
js
icebp
and
inc
xchg
pop
out
cmp
testl
bound
pop
scas
mov
in
push
push
popa
mov
add
pop
jmp
mov
lcall
loop
nop
xor
adc
add
pusha
aam
sbb
ret
jae
push
inc
pusha
sbb
test
dec
fistpl
imul
or
rolb
out
dec
lcall
sub
jb
lds
and
aam
cmp
sub
inc
imul
and
sub
pop
mov
loop
add
jnp
repz
cmp
jle
sarl
sub
cs
inc
add
jmp
pop
iret
sahf
adc
mov
add
adc
hlt
xchg
stc
test
stc
inc
xor
cmp
sti
xlat
loopne
insb
vrsqrtss
es
gs
rcll
clc
xchg
repnz
push
or
pop
cmp
adc
mov
out
pushf
clc
adc
lcall
pushf
sub
mov
popa
lret
push
ja
push
adc
jecxz
cltd
js
lock
and
xchg
and
push
cmpsb
mov
leave
inc
bound
shll
xor
mov
mov
push
aam
jmp
cld
data16
mov
hlt
sbb
jmp
inc
sub
or
lea
jno
stos
pop
shlb
sbb
enter
lret
inc
shr
mov
sbb
ret
sub
pushf
testl
lods
mov
loopne
test
cmp
dec
aad
lahf
xchg
mov
pop
mov
cmpsb
lahf
fstl
loop
add
lods
cmpl
adc
adc
xchg
movsb
rcll
xchg
sbb
jne
pushf
imul
and
cli
sbb
neg
sahf
or
sub
outsl
int
aad
add
mov
shrb
hlt
pop
xor
push
add
inc
cld
push
je
xchg
push
add
bound
fiadds
or
pushf
clc
fdivrl
push
mull
rorl
mov
subb
fisttpl
xchg
mov
add
stc
sbb
mov
in
scas
loopne
into
jne
cmp
mov
test
jo
and
popa
xchg
test
or
fidivs
push
adc
loopne
pusha
pop
in
mov
imul
or
add
dec
orb
mov
sub
jl
mov
les
outsb
and
in
mov
mov
xchg
pop
test
jmp
ret
mov
jecxz
rorb
lods
outsb
test
jno
pop
jge
cmc
repnz
aam
pop
jno
sbb
bound
adc
cmp
cmp
loope
stc
outsb
jp
or
scas
mov
push
fs
loop
pop
push
cmc
cmp
cmp
jle
test
cmovp
test
negl
sbb
push
add
pop
dec
in
pop
loope
sub
js
sti
orl
xchg
mov
test
jmp
adc
inc
add
mov
cmp
in
lods
lcall
movsl
mov
mov
mov
xchg
push
popf
and
pop
ljmp
outsb
js
not
pop
pop
adc
sahf
xchg
in
dec
aas
imul
movsb
xor
addr16
push
pushf
lea
filds
and
scas
cmp
outsb
imul
test
sub
sbb
jae
or
in
jmp
cmp
fmull
push
mov
cli
or
imul
xchg
sti
jl
call
dec
mov
pop
or
inc
xchg
cmpl
mov
mov
push
cmp
sub
pop
jo
ret
lds
outsl
mov
test
test
push
je
pop
xchg
pushf
inc
mov
test
js
pop
jecxz
sar
xor
mov
sbb
cmp
fs
mov
imul
jmp
aas
inc
loopne
ljmp
xchg
jno
mov
addr16
pop
test
fwait
mov
jo
cli
std
sbb
and
jne
adc
push
xchg
fcomps
pop
push
lcall
jne
sbb
xchg
scas
xchg
test
and
ss
jbe
xchg
negb
jnp
mov
lret
push
push
jbe
mov
xor
mov
sub
or
lret
je
enter
sbb
adc
mov
xchg
sti
mov
arpl
push
dec
leave
into
mov
or
js
sub
ljmp
andl
inc
add
cmpsb
push
cmp
bound
int
xor
int
mov
xor
lahf
xor
loope
adc
addr16
push
cmp
fnstsw
sub
sbb
ljmp
out
cmp
mov
push
fs
mov
arpl
sti
xor
in
loope
int
pop
in
pushf
pop
sbb
jne
lods
dec
jns
pop
int
mov
testb
xchg
dec
dec
loop
movsb
mov
adc
pop
mov
insb
pop
popf
out
inc
enter
dec
mov
lds
xor
cwtl
jmp
push
push
cwtl
pop
out
cmc
sahf
inc
sub
or
mov
test
mov
outsb
test
arpl
dec
mov
cmp
andb
aad
popf
inc
decl
cmp
rorl
inc
insb
negl
xor
sarb
adc
gs
loopne
inc
and
pop
fstpl
repnz
leave
inc
fdivrp
sub
int3
sarb
shrb
ret
add
mov
pop
inc
add
ss
bound
lret
or
rol
bound
adc
sub
mov
cltd
out
push
imul
in
out
xchg
push
adc
movsl
inc
lret
fldl
mov
jbe
xchg
pusha
movsl
push
dec
iret
xlat
clc
outsl
data16
xor
mov
lret
out
add
aaa
shl
push
out
in
fdivrl
xor
es
int
not
setl
aaa
push
push
xchg
and
cli
data16
in
sub
out
push
sbb
sti
scas
push
jo
xchg
outsb
and
cmp
and
test
fsubl
add
jg
mov
jl
sub
lods
xchg
push
adc
scas
add
adc
inc
jg
adc
out
mov
cmp
mov
jecxz
pusha
lock
mov
adc
dec
pop
subb
call
into
stc
rclb
dec
jb
push
inc
stos
lods
mov
imul
inc
xchg
fiaddl
or
xor
out
mov
movsl
sbb
mov
jae
movsl
xor
mov
jle
mov
lcall
shlb
and
xchg
xchg
imul
jg
hlt
pusha
mov
cmp
lea
xlat
adc
mov
mov
leave
in
push
inc
popf
stos
jle
fstpl
ljmp
inc
inc
and
into
scas
test
pop
int
or
lahf
or
imul
mov
cmp
fs
pop
cmp
cltd
or
ja,pt
repz
push
mov
and
xor
ret
out
inc
push
mov
sbb
sbb
adc
push
mov
outsl
push
jg
push
into
cwtl
repnz
rorb
fldt
pop
push
pop
lret
adc
adc
loope
pop
mov
out
push
mov
mov
mov
or
ljmp
xchg
pop
pop
repz
roll
fcomp
and
xchg
or
fsubs
xchg
or
dec
aaa
shlb
xchg
fstl
out
repz
xor
das
xchg
fistpl
or
int
lods
sub
mov
jno
sub
cmpsl
aam
pop
int
outsl
or
mov
nop
xor
pop
jle
out
mov
push
imull
insb
movsl
jmp
inc
stos
repz
pop
cli
mov
rcr
repz
rorl
pop
dec
cmp
aad
loope
mov
mov
das
fldt
inc
jns
lock
mov
or
jg
int3
cld
in
jg
xchg
or
jne
outsb
push
out
out
shll
arpl
add
add
adc
in
lretw
test
dec
push
ret
cltd
mov
dec
and
or
push
inc
fwait
lods
jge
mov
cld
and
mov
mov
aad
ljmp
pop
push
inc
mov
stos
insb
fwait
adc
jecxz
loopne
sub
push
pop
es
stos
sub
dec
cmp
inc
dec
daa
xchg
insl
daa
js
xor
stos
xchg
clc
jae
test
mov
push
int3
js
sub
inc
sbb
shrb
mov
lock
jmp
pusha
inc
aas
rorl
dec
cmp
sbbl
jb
es
data16
jle
shrb
push
jmp
aam
pushf
dec
in
sahf
subb
fsts
mov
dec
rcrl
aad
mov
enter
out
push
xlat
pop
gs
insl
sbb
sub
or
fwait
ja
mov
dec
cmc
iret
aaa
mov
into
js
aas
inc
jns
cmc
shlb
out
jno
js
inc
and
call
mov
xchg
pop
mov
ret
jno
outsb
jle
dec
pop
jecxz
shrb
aaa
icebp
cwtl
je
jnp
jl
push
lret
int
outsb
dec
add
int3
andl
ret
jb
subb
xchg
vshufps
aaa
shl
mov
in
dec
and
das
push
lds
sub
lret
jae
loope
push
push
sbb
pop
cmp
mov
les
fs
out
sti
pop
cld
cmp
inc
gs
dec
push
sbb
pop
pusha
and
xchg
sti
cmpsb
subb
aaa
in
movsb
ljmp
loopne
arpl
jmp
stos
popa
push
xchg
push
push
ds
insl
movsb
add
mov
sbb
sub
pop
fwait
test
lock
gs
mull
cmpsb
lahf
addr16
xchg
xchg
pop
push
jbe
push
sub
bound
arpl
sbb
add
jg
inc
outsb
dec
mov
mov
sub
or
mov
inc
mov
pop
fucomp
into
sub
cli
imul
lods
add
jecxz,pt
push
bound
jo
pop
pop
and
shll
cmp
xchg
lods
adcl
fwait
and
pop
mov
sub
lret
and
pop
add
shl
daa
loop
push
or
add
pusha
mov
in
jle
dec
jbe
loop
mov
sbb
sar
sbb
loopne
imulb
jg
ficoml
outsb
pusha
int3
push
add
shl
out
jae
imul
ror
pop
add
into
or
xor
adc
and
mov
bswap
sub
es
adc
fnstsw
sub
add
pop
aaa
fs
cld
cmp
out
mov
flds
adcl
test
loope
ret
filds
icebp
aam
cld
push
sub
or
fidivl
test
cmp
or
pop
inc
out
mov
mov
push
lahf
sub
lcall
push
push
cmpsl
fildl
sub
dec
jbe
ficomps
ret
cmp
adc
adc
outsb
incb
inc
jecxz
aad
movsb
jg
sbb
push
dec
mov
sub
gs
arpl
adc
inc
outsl
add
dec
sar
jl
sub
je
mov
xchg
lea
in
arpl
imul
push
movsl
jnp
mov
aas
mov
stos
movl
pop
rcll
je
xchg
push
add
push
dec
sub
jmp
cmp
fmuls
adcl
dec
cmp
aas
addr16
gs
or
mov
adc
outsb
mov
sub
cltd
cmp
mov
pop
fadds
test
sub
xor
or
or
int
int3
sti
outsl
ret
int
jns
mov
mov
imul
sahf
xchg
jp
push
dec
dec
xor
dec
lcall
inc
rcrl
inc
lcall
mov
sarb
mov
mov
mov
push
push
fnstcw
push
sti
jae
mov
jp
int3
push
xchg
outsb
mov
in
mov
outsl
dec
jmp
nop
xchg
mov
inc
xchg
jnp
ss
divl
incl
xor
xchg
xchg
mov
lea
aam
bnd
push
adc
rcll
jp
mov
fbstp
ficoms
adc
adc
js
sbb
cmp
mov
into
cs
mov
push
and
mov
or
inc
out
cs
test
popa
aas
or
lret
adc
lea
xlat
pop
pop
pop
movb
aaa
jg
imul
out
outsl
aas
push
int
jp,pt
pop
jg
mov
fadds
rcl
hlt
mov
push
push
sbb
push
xlat
sbb
ds
sahf
cmp
fwait
int3
aaa
movsl
xchg
sbb
xor
mov
stos
aaa
movsb
mov
out
fdivl
mov
or
xchg
lods
mov
arpl
sbb
jb
icebp
push
xor
mov
repz
sbb
out
mov
ljmp
ljmp
and
aad
cmp
fnstcw
xchg
sub
lock
test
dec
shl
pop
inc
inc
dec
fistpl
fbstp
in
das
movsb
sub
dec
add
jecxz
mov
loopne
stc
push
fsts
xor
leave
adc
fisubs
mov
je
dec
jo
stc
xchg
lods
cmp
adc
int
xchg
xor
adc
test
scas
addr16
cmc
sbb
and
push
scas
jnp
jo
dec
pop
ljmp
mov
pushf
xchg
inc
sahf
sbb
std
mov
enter
cmpsl
inc
and
test
in
add
imul
adc
and
movsb
mov
nop
pop
pop
nop
js
mov
fwait
test
jne
into
inc
iret
out
sbb
test
pop
loopne
in
sub
nop
fldl2e
ds
and
push
xor
push
sub
jbe
imul
jl
fisttpl
mov
mov
icebp
cltd
fldcw
arpl
inc
dec
push
cmp
and
sub
xor
mov
testb
add
pushf
loopne
add
pop
sub
dec
sti
pop
pop
aad
push
xchg
dec
in
or
sub
xor
pop
ret
add
sarl
inc
lcall
enter
hlt
mov
repnz
clc
lret
fisubrs
mov
js
sarb
push
jmp
nop
aaa
out
test
sub
add
push
mov
sbb
sub
sub
sahf
and
jno
mov
sub
or
cmp
xchg
inc
xor
sub
and
pusha
and
daa
xchg
fimull
test
rcr
std
add
cwtl
mov
arpl
cmp
inc
repnz
push
mov
push
mov
fstl
sarl
test
enter
xor
out
lock
fs
push
clc
xchg
das
push
mov
mov
sub
movsb
in
out
test
mov
in
or
cmp
rclb
imul
sub
jecxz
sub
adc
clc
pop
push
push
or
fwait
and
xor
xchg
movsl
or
ret
xor
aas
xchg
add
push
jbe
jnp
mov
outsb
std
into
or
in
pushf
mov
xor
hlt
pop
out
cmpsl
push
mov
push
mov
ss
and
mov
mov
sahf
dec
push
out
out
push
jl
fbstp
test
cli
push
dec
or
mov
out
pop
add
or
sahf
dec
inc
mov
subl
aam
testl
cmp
std
xchg
mov
mov
popa
movsb
ljmp
orl
test
cmp
in
inc
and
shl
mov
jge
test
sub
cmc
add
sub
mov
loop
cmp
pop
xchg
pushf
jnp
loop
adc
mov
or
add
nop
dec
jmp
icebp
rcll
sbb
sbb
cmp
lods
in
cmpsb
imul
push
push
lea
call
cltd
subl
cli
pop
mov
repz
std
mov
in
mov
or
daa
cmp
enter
add
pop
add
iret
pop
pop
mov
dec
jbe
mov
xlat
orl
js
inc
out
sbb
in
mov
cmp
add
xchg
lods
mov
mov
mov
pop
pop
out
ds
fadds
popa
mov
repnz
dec
imul
pushf
mov
xchg
or
push
dec
int
push
pop
out
jb
test
adc
and
inc
pop
sbb
stos
cltd
aam
divl
js
iret
popa
into
into
xorl
test
subl
ret
xchg
jne
orl
jle
push
iret
loope
movsl
mov
flds
mov
sahf
dec
add
push
jb
loope
fs
jge
push
testl
xor
mov
inc
push
mov
movsb
mov
shrl
pop
push
mov
cmpb
test
sahf
or
inc
lock
cmc
addr16
into
stos
test
mov
inc
pop
dec
dec
inc
iret
mov
sub
xchg
in
int
out
xor
fisttps
loope
dec
mov
ret
clc
push
jnp
jge
sbb
insb
jmp
lods
mov
cmpsl
scas
or
pop
cmc
mov
adc
test
outsl
adc
fisubl
mov
lock
adc
test
or
and
imul
xchg
movsl
jge
jnp
inc
pop
lcall
jbe
push
cwtl
lock
sub
or
fwait
jbe
rclb
pop
fisubl
mov
out
mov
add
pushf
or
xor
push
push
xchg
adc
mov
push
ljmp
mov
fldt
icebp
js
stc
pushf
pop
mov
inc
sub
lcall
jb
pop
test
sbb
mov
dec
fiaddl
dec
pop
sub
or
jmp
cmp
add
cmpsl
mov
fs
in
out
or
je
mov
cmpsl
lret
jecxz
and
mov
shlb
cmc
loopne
ljmp
fstps
scas
or
sbb
and
xchg
cmp
loope
mov
push
mov
dec
std
and
jp
push
jno
subb
add
fisubrl
dec
xor
cmp
repz
ffree
imul
mov
push
xor
bound
sahf
mov
aaa
xor
cmp
call
fstps
or
fwait
scas
test
jb
das
sti
or
xchg
or
aam
push
adc
lret
add
ds
popf
mov
pop
mov
shrb
outsb
or
movsl
cmp
pop
roll
aaa
mov
lret
jno
stc
or
int
popa
out
into
cmp
adc
xor
fisubl
inc
pushl
dec
adc
mov
push
lahf
xchg
xchg
fiaddl
int
idivb
sbb
mov
xchg
xchg
xlat
inc
loop
mov
into
sahf
inc
fcmovnbe
xchg
xor
in
loop
leave
stc
pop
xor
add
and
pop
add
lods
xchg
jmp
xor
repz
adc
add
push
popa
adc
sbb
mov
xchg
jns
icebp
mov
rcll
mov
inc
insl
mov
mov
lds
mov
fucomi
out
shlb
movsb
lds
pop
nop
lds
aas
lods
popa
pop
cltd
mov
inc
outsl
add
xor
std
mov
sub
pop
mov
pop
pop
cld
subl
sar
test
pop
cmp
push
fs
sub
mov
jb,pt
ljmp
icebp
push
sbb
adcb
enter
push
push
sahf
adc
pop
or
aas
jle
mov
out
js
add
xchg
gs
repz
das
add
repnz
push
push
iret
push
xor
xchg
nop
sbb
fists
add
inc
adc
aam
push
inc
mov
imull
mov
xchg
xchg
dec
xchg
add
sub
xor
js
test
ficomps
pop
aas
aam
in
pop
sti
fdivl
mov
dec
pop
inc
popf
test
rorl
mov
cmp
jbe
incl
ss
loop
test
xchg
inc
push
lods
pop
cmp
xchg
dec
fisttps
xchg
inc
out
jb
mov
cmp
sbb
adc
mov
ja
jle
sahf
push
xchg
rol
lahf
xor
ljmp
mov
sbb
sub
pop
loope
pop
and
shl
pusha
or
inc
dec
ja
sbb
xor
in
adc
lds
mov
sbb
inc
add
xchg
not
sub
sub
jp
mov
ret
cwtl
jge
enter
pop
push
scas
push
jg
sub
lcall
inc
cmc
mov
xorl
clc
lds
pushl
jmp
fstpt
pop
xor
mov
shr
inc
imul
wbinvd
inc
int
jle
test
rcl
popa
add
imul
fisubs
jp
cmp
cmc
push
dec
out
inc
inc
test
pop
fcompl
sarb
repnz
ds
popa
clc
pop
xchg
adc
and
test
add
sbb
movsb
les
mov
adc
in
fdivl
rclb
xchg
in
cmp
inc
jle
fdivl
pop
ret
lret
dec
test
or
mov
fildll
loop
lret
es
jns
push
mov
insb
mov
data16
dec
or
mov
sahf
into
test
sub
mov
cmp
sbb
xchg
jmp
scas
repnz
jns
mov
sarl
gs
aas
int3
unpcklps
push
enter
inc
ja
adc
ljmp
movsb
sub
icebp
push
sbb
movsb
push
fildl
adc
adc
xor
xchg
add
ljmp
mov
clc
mov
xor
adc
cmp
loopne
dec
mov
aad
iret
clc
pop
xchg
and
mov
lds
in
pop
scas
fcoml
popf
bound
pop
sahf
ljmp
mov
outsb
fwait
inc
mov
das
ds
ret
and
testb
xor
repz
popa
cmp
sub
cmp
dec
xchg
addr16
das
outsb
sbb
fildl
lea
ret
push
stos
xor
sbb
pop
xchg
mov
adc
cmp
fisubrs
pop
popf
std
insb
popf
ret
repz
dec
into
fstps
loop
sbb
mov
mov
lret
pop
in
pop
inc
out
inc
mov
or
jmp
pop
inc
push
add
lret
jno
sahf
ret
pop
or
mov
sti
jge
add
nop
inc
xor
idivl
mov
dec
gs
xchg
sbb
dec
pop
mov
popf
test
xor
ja
jl
push
fwait
loopne
sub
add
arpl
dec
or
mov
xchg
dec
test
cmp
adc
mov
and
add
sub
mov
dec
fldenv
adc
lret
inc
adc
push
xor
dec
aad
pushf
xchg
xor
pop
adc
call
sub
stos
mov
or
xor
sub
fstpl
cmc
and
cmc
outsb
mov
clc
std
fldl
cmc
jecxz
imul
inc
mov
mov
scas
adc
push
mov
or
xor
dec
mov
adc
xor
cs
and
sub
mov
xor
sub
daa
fs
sbb
stos
cmp
xchg
hlt
lahf
imul
adc
mov
inc
jne
push
dec
jno
sahf
xchg
lods
push
mov
cld
jo
hlt
inc
into
ja
adc
push
cwtl
in
adc
mov
mov
push
adc
shll
xchg
xor
jns
insb
jge
in
jp
fs
movsl
aam
test
or
mov
and
cmc
jle
pop
mov
dec
jl
outsl
cmc
sahf
cmp
mov
pop
sub
inc
sub
push
and
sbb
leave
mov
sti
pop
inc
sub
fldt
pop
sbb
ja
fwait
sub
mov
aad
in
push
fidivrs
jge
pop
pop
dec
jecxz
rcrl
push
shll
adcl
or
lea
jne
shl
pop
pop
sub
xlat
mov
pop
repz
mov
xchg
xchg
mov
mov
cmp
sub
mov
ret
sub
dec
jmp
mov
imul
xor
movsb
xor
xchg
cld
loop
push
xchg
xchg
fisubs
aam
fistpll
repz
ljmp
mov
mov
fistpll
out
in
adc
push
outsl
jle
test
push
push
inc
ret
cwtl
into
pop
add
mov
les
ss
jecxz
jbe
add
call
adc
jns
and
xor
jno
rep
fs
fcmove
cmp
cli
xchg
addl
xchg
jae
mov
iret
sbb
mov
sbb
cmp
es
fs
lods
rol
cmp
imul
lret
out
sahf
cmp
hlt
mov
adc
std
lea
lret
cmpb
pop
mov
mov
dec
cmp
mov
out
push
mov
inc
xchg
fcompl
push
xchg
outsl
and
mov
cmp
loope
mov
inc
push
jle
jnp
out
in
inc
les
pop
fadds
mov
shrb
sbb
push
xchg
mov
pop
loope
rcrl
scas
lret
xor
shll
mov
fisubs
icebp
out
sbb
xchg
push
les
arpl
mov
fcmovne
push
sub
out
xor
xchg
or
or
xor
test
xor
mov
xchg
sub
popa
repz
stc
test
std
sbb
in
sbb
movsl
fwait
into
out
inc
sub
adc
rol
mov
les
aam
ds
daa
mov
push
dec
jp
push
outsl
lods
cmpsl
sbb
aad
adc
mov
mov
sti
stos
xchg
shlb
ljmp
dec
insb
cmp
sbb
lcall
push
or
lahf
adcb
int
out
loope
mov
loop
and
loop
pop
aaa
scas
push
and
mov
nop
mov
jg
lods
mov
cmp
fildl
mov
cmpsl
movsb
in
les
mov
jmp
bound
add
mov
mov
mov
xlat
mov
arpl
dec
sub
fldcw
fldl
xlat
stos
cmpsl
jge
xlat
mov
mov
loop
fisubl
ds
lcall
sub
xor
push
scas
xor
xchg
test
xor
movsb
enter
xchg
xchg
lods
mov
aas
lds
mov
or
insb
stos
cmp
ss
sub
add
jne
faddl
das
addr16
ja
xlat
xor
sbb
add
jnp
test
cs
add
popa
jne
xchg
imul
sbb
xor
sub
sbb
sub
add
xor
mov
add
mov
mov
inc
mov
subl
add
andl
imul
xor
or
adc
mov
mov
mov
add
sbbl
or
mov
or
mov
movl
cmpl
je
cmpl
ja
jmp
push
push
pushl
call
mov
dec
mov
jmp
mov
addl
add
xor
sbb
mov
mov
mov
add
addl
and
mov
andl
xor
xor
inc
mov
cmpl
jbe
jmp
push
call
cmpl
jb
mov
mov
lea
mov
mov
mov
sub
add
mov
mov
xor
add
jne
mov
mov
mov
cmp
je
mov
mov
mov
mov
xor
cmp
jne
mov
mov
xor
movsbl
mov
xor
add
cmp
mov
mov
mov
je
xor
add
mov
je
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
add
imul
jmp
dec
popl
lea
push
loop
fadd
cmp
jp
pop
jp
dec
mov
jl
mov
push
mov
aas
jp
cli
ljmp
add
push
or
popf
jnp
sub
js
lahf
cltd
insb
jno
inc
pop
leave
nop
ds
dec
out
xlat
popf
jl
neg
mull
or
outsl
cmp
jno
pop
icebp
and
xor
adc
jo
inc
xchg
or
xor
xor
push
ss
xor
ficomps
xor
stc
inc
pop
mov
inc
loop
in
inc
xor
cld
inc
xchg
and
dec
insb
push
ja
lret
jb
clc
jmp
fdivrl
or
inc
push
icebp
stc
enter
jo
sbb
lret
pop
push
mov
cli
out
fldenv
or
fmuls
jne
or
xor
pop
xchg
adcb
lahf
shll
push
insl
rcr
sub
dec
es
ja
aam
out
lods
inc
push
xor
mov
into
or
je
push
dec
mov
mov
push
test
mov
push
out
pop
inc
cmp
sbb
mov
inc
enter
dec
shlb
loope
jg
adc
divl
xchg
xchg
dec
movsl
pop
orb
enter
mov
cmc
push
stos
out
mov
addr16
pop
push
cs
xchg
es
dec
fisttpl
pop
data16
cmp
dec
arpl
and
sbb
lea
cmp
mov
jmp
sbb
sbb
pop
jmp
das
cli
pop
cmpsb
adc
xor
out
out
aad
xchg
mov
fwait
mov
mov
adc
adc
adc
jecxz
and
pop
or
push
cmpl
jmp
cltd
imul
jno
add
lods
daa
test
es
xchg
push
out
inc
jecxz
das
filds
aas
inc
sub
lock
mov
lods
mov
adc
jmp
mov
popf
mov
pop
sbb
mov
sahf
adcl
add
ds
xor
xor
clc
scas
cli
lock
xor
inc
xchg
rcrb
push
add
pushf
dec
dec
push
mov
sub
sbb
xchg
rcrl
xchg
dec
fdivrs
nop
in
jne
out
mov
fsub
cld
fsubr
aad
sbb
dec
jmp
pop
rcrl
mov
xchg
adc
lret
lret
ljmp
sub
inc
mov
into
dec
jecxz
dec
scas
xor
inc
dec
outsb
test
ret
and
jle
mov
cltd
adc
scas
cld
or
mov
test
add
rep
mov
movsb
cmp
push
xor
dec
jg
inc
mov
fnop
adc
mov
cmc
jge
test
cmp
mov
hlt
add
push
sti
mov
gs
imul
movsb
gs
jo
xor
add
lds
ja
mov
lods
fsubs
mov
aas
push
mov
jge
test
fs
mov
das
inc
adc
subl
and
std
out
push
xlat
lock
cmp
push
mov
std
sbb
xor
jb
sub
cmp
fsubrs
lea
mov
loopne
movsb
pop
xchg
sub
jp
push
sahf
mov
mov
inc
push
ja
add
mov
mov
lcall
sbb
jae
pusha
cmpsl
mov
loope
sub
out
aaa
mov
pop
sbb
pop
sbb
xor
push
lods
push
arpl
xchg
aam
lahf
lahf
jnp
inc
sbb
lret
xchg
pushf
add
mov
fidivrs
icebp
inc
and
in
jmp
push
mov
mov
sub
sti
std
mov
mov
in
sbb
not
mov
fists
inc
xchg
add
hlt
inc
pop
out
out
fcomps
sub
fidivs
daa
jmp
add
and
mov
jo
lret
lea
mov
ljmp
xchg
pop
cmp
pop
cltd
out
mov
push
sti
leave
ss
add
mov
aaa
sahf
cld
jne
adc
xchg
mov
lods
xchg
pop
push
imul
lds
add
pop
ds
inc
xor
sub
pop
aaa
jle
adc
jns
jle
and
daa
jge
pusha
shrl
or
cmpsb
adc
std
loop
adc
lods
cmp
mull
repz
push
lods
mov
fstl
pop
inc
insb
andl
movsl
xchg
push
aad
add
mov
pop
jmp
loopne
push
dec
testb
xchg
rcr
outsb
hlt
xor
insb
sti
cmp
outsl
ss
subb
xchg
pop
fsincos
add
test
mov
jmp
push
insb
xlat
addl
cmp
adc
fsubrs
clc
sbb
fisttpl
rclb
and
fcoml
cmp
leave
clc
lret
adc
lahf
xchg
std
je
xchg
in
bound
mov
inc
mov
fcompl
adc
pusha
sub
cwtl
cmp
mov
mov
pop
call
orb
mov
lods
jo
mov
push
dec
outsb
das
test
test
out
and
push
lods
xchg
mov
mov
cld
loop
repz
mov
lret
fs
pushf
pusha
dec
fucomp
push
daa
repz
xchg
and
cwtl
imul
mov
lret
push
mov
loop
rcrb
pushf
fs
inc
aam
call
enter
lret
test
in
dec
popa
outsl
loope
cmp
or
cltd
dec
dec
aaa
jae
outsl
mov
inc
add
jp
pop
adc
adcl
add
fcompl
inc
pop
lret
cltd
and
std
and
mov
rorl
repz
flds
in
outsl
xlat
stos
popa
lret
sti
out
sub
adc
push
cmpsl
negb
dec
and
xlat
test
xor
stos
cmp
repnz
mov
mov
insl
xor
push
mov
in
fstpt
xor
cmp
mov
cwtl
mov
lods
lods
pop
mov
imul
out
pop
xor
lock
inc
repz
scas
jno
and
lds
adc
add
xchg
sub
ds
lret
cs
push
rcr
fwait
add
leave
pop
mov
fcmove
enter
push
dec
aas
xchg
outsl
mov
int
mov
mov
test
gs
push
rorb
scas
in
aam
icebp
dec
aaa
inc
ljmp
pop
jmp
ss
out
pop
jg
jge
pop
test
repz
out
stc
inc
fwait
test
push
ljmp
or
filds
rorb
mov
cltd
pop
ret
push
pusha
test
loopne
cmp
cli
pop
mov
jecxz
loopne
mov
repnz
cmp
popf
and
push
jl
je
outsb
fdivrl
out
shrb
out
xor
test
js
fcom
or
fimuls
test
push
mov
rcll
enter
sbb
lret
or
rcrl
mov
das
icebp
ja
mov
cltd
jo
sti
add
jg
rcr
enter
std
mov
or
mov
cs
aad
test
jmp
fimuls
int3
or
jo
push
xchg
arpl
inc
xchg
xchg
xor
lcall
dec
jmp
das
ds
mov
sbb
fldl
cmp
lods
cli
stos
or
xor
mov
inc
movsl
sbb
adc
lds
pop
inc
movsl
cmpsb
daa
mov
cwtl
jecxz
out
push
xchg
cmc
xchg
mov
cmp
xlat
cmp
sub
dec
adc
sbb
lahf
scas
dec
sub
mov
sets
shr
add
ljmp
mov
loope
adc
ljmp
das
out
ja
jns
jl
and
pop
pop
fdivrl
xchg
loop
dec
fwait
movsb
cmp
outsb
cs
repz
fwait
or
push
pop
xchg
ret
inc
in
arpl
xchg
pop
jo
out
inc
aas
add
adc
dec
fisubrs
inc
lcall
test
lcall
push
jo
rclb
iret
mov
shrb
mov
push
aaa
sahf
inc
popf
mov
mov
repz
xchg
ss
inc
sbb
cli
fiadds
push
or
aad
dec
xchg
add
out
jp
push
mov
scas
std
loop
pop
push
mov
push
in
dec
loopne
jae
cmp
xchg
or
out
pop
out
popa
sarb
mov
scas
pop
xchg
pushl
xor
inc
fmul
std
callw
mov
std
xchg
lds
pop
out
loopne
sbb
test
mov
dec
popa
pop
int3
outsl
shrl
scas
dec
iret
adc
in
das
pop
call
mov
mov
jmp
xor
jo
mov
pop
xor
sbb
lcall
adc
mov
dec
add
pop
test
clc
jmp
mov
shr
mov
mov
pop
xchg
fcmovne
pop
dec
mov
mov
jecxz
dec
mov
lds
movsb
push
jo
imul
mov
and
add
scas
sbb
and
les
addr16
xchg
mov
push
inc
test
cld
scas
xlat
lods
aad
test
jmp
ret
xchg
lock
ds
xor
lock
jns
xchg
jmp
cmc
cmp
cmp
xorb
js
aad
daa
cli
icebp
stos
pushf
mov
sub
adc
add
xor
enter
cmpsl
fisttps
push
mov
sub
movups
or
js
sbb
popa
adc
pushf
out
negl
cmpsb
mov
lret
les
sbb
es
sbb
insl
adc
mov
sbb
jge
orb
loopne
mov
adc
xchg
lret
xchg
and
sbb
int3
test
inc
add
repz
in
stos
xor
sub
pushf
jno
nop
movsl
ficomps
mov
loop
cltd
test
fwait
and
and
pop
push
adc
lea
adc
xor
dec
jbe
psadbw
jl
cmpsb
inc
dec
mov
ret
fs
adc
ficompl
popf
fisttpll
ljmp
and
mov
jb
xchg
add
sahf
insb
std
adc
test
loope
push
iret
addl
pop
ljmp
jb
xchg
fildll
mov
std
mov
dec
repz
sbb
dec
pop
mov
sub
int
mov
rorb
rcrl
inc
jbe
insl
ljmp
jle
jns
addb
loopne
repz
and
mov
push
repnz
jne
movsb
into
pusha
sbb
in
in
fisttps
jnp
push
sub
add
lret
mov
les
mov
lcall
dec
fists
dec
fisubl
mov
into
push
frstor
adc
push
shr
adc
add
push
rclb
xor
mov
out
movsl
push
scas
mov
sub
mov
inc
ret
pop
in
lret
dec
push
fs
outsb
data16
sub
cmp
scas
xor
hlt
fnstsw
stc
test
repz
int
pop
shlb
xchg
mov
add
pop
inc
inc
in
jmp
movsb
stos
test
dec
stc
jg
rorb
fstpl
xor
movsb
cmp
insl
lret
in
or
insb
cltd
lret
xor
mov
lds
mov
or
mov
ss
add
out
lcall
daa
add
idivl
sbb
shlb
jns
mov
inc
cmpsb
fld
sub
icebp
or
fldt
lea
and
jb
xor
mov
aaa
inc
inc
cmp
in
popa
jge,pt
and
mov
into
pop
jns
sub
lahf
push
rorb
out
cmp
int
aam
jle
adc
lods
fcmovnbe
inc
dec
xchg
mov
into
js
sbb
sbb
fistpl
insl
push
lods
fimull
mov
cltd
mov
push
mov
mov
xchg
les
fsubs
mov
adc
popf
fndisi(8087
pop
sub
dec
pop
sbb
imul
inc
pop
cmpsl
scas
test
cmp
decl
int3
xchg
cmp
mov
mov
pop
in
fisttpll
lds
inc
aas
daa
insl
in
lods
arpl
lcall
pop
sarb
aad
mov
and
pop
in
mov
jecxz
inc
in
inc
inc
mov
pop
fistps
test
shlb
sub
jl
jae
jecxz
and
loope
pop
add
or
xlat
in
repz
lcall
das
imul
push
jne
movsl
cltd
dec
lcall
lret
insl
cmpsl
mov
outsb
jg
xchg
movsb
xor
pop
insl
daa
dec
pushf
popf
aam
xchg
jb
sahf
jnp
decb
xor
or
mov
xorb
xchg
jge
and
cmpsl
int
sub
sub
xchg
mov
iret
add
out
and
test
jle
mov
addr16
insb
cmp
bound
out
int3
jg
fsubrl
popf
enter
pop
cwtl
pop
data16
sbbb
fwait
cli
jno
cmp
enter
stc
pop
jmp
mov
adc
es
xor
pop
jnp
call
ret
add
xchg
das
ret
add
xchg
ja
fistpll
das
dec
out
sub
loop
sbb
mov
cmp
es
sahf
xchg
push
mov
movsb
mov
or
fmull
in
push
outsb
sub
mov
or
push
aad
jnp
and
lods
enter
xchg
leave
add
outsb
and
dec
ret
ljmp
sub
nop
lcall
or
lret
or
mov
push
jg
vpunpckhqdq
dec
imul
adc
movsl
ja
scas
aas
add
mov
out
inc
jp
push
ficoml
mov
cmp
mov
xor
or
pop
sub
ljmp
jnp
clc
add
es
xchg
or
orl
popf
stos
cmp
in
jecxz
push
dec
inc
out
test
xchg
shrb
add
cmp
scas
pushf
mov
inc
jg
pop
imul
inc
jae
out
sub
jne
mov
mov
lods
jl
pop
mov
jae
cltd
imul
scas
gs
out
mov
cmc
ja
mov
pop
arpl
jbe
xlat
dec
push
xor
out
xor
adc
dec
sbb
in
push
push
imul
loope
pop
aaa
push
pop
lods
aad
rclb
mov
pushf
add
xchg
mov
mov
adc
aaa
add
movsl
test
stc
dec
cmp
mov
push
fsubrs
jge
xor
fildl
pop
fnstsw
leave
and
cmp
fsubl
sbb
addl
mov
enter
mov
popf
out
sarb
sbb
sbb
int
mov
jmp
mov
dec
cmpsl
xorb
inc
jl
cld
cmp
mov
xchg
push
call
jle
popa
rolb
push
mov
xor
inc
sbb
ret
jno
push
or
fimull
leave
add
enter
dec
push
jge
ss
sahf
xchg
in
push
cmp
add
rcrl
and
mov
notl
pop
lods
lods
rorl
das
outsb
dec
das
jmp
pop
xor
movsl
or
lret
xor
push
fmul
es
ret
aam
mov
pusha
jg
xchg
scas
inc
inc
cltd
inc
dec
lea
pop
dec
inc
mov
or
ret
mov
outsb
repnz
adc
mov
cld
pop
xchg
dec
arpl
push
fistps
sub
xchg
roll
out
ss
inc
out
or
mov
inc
cwtl
mov
dec
mov
icebp
jae
and
inc
jmp
test
fcomp
and
jp
xchg
lds
jo
cmpsb
jle
call
loop
jle
pop
xor
arpl
out
insb
adc
adc
xchg
cmc
mov
repnz
jge
jne
int
sbb
fists
icebp
push
mov
add
sub
test
pop
push
sub
fstpt
and
hlt
in
mov
sbb
fisttpll
jbe
push
sub
leave
dec
mov
cltd
les
cli
test
rcr
data16
sbb
fbld
ja
das
popf
call
test
loopne
sbb
lds
mov
push
push
adc
mov
nop
or
dec
call
scas
bound
stos
ret
daa
jl
test
jnp
jnp
sbb
test
push
jg
mov
fnsave
sti
out
push
dec
xor
mov
mov
or
cmpsl
mov
mov
or
adc
sbb
push
das
fnstenv
xchg
daa
es
fmul
ja
mov
sbb
imull
vcvtpd2dq
popf
push
jle
inc
imul
fistl
inc
jno
xchg
mov
xorl
pop
jae
push
xor
mov
test
ja
mov
push
ret
xor
and
scas
xorl
in
push
and
inc
shrb
in
and
lods
gs
insb
out
inc
adc
divb
jg
jne
movsb
push
lea
pop
push
dec
scas
or
add
mov
jns
push
pushf
sbb
jo
aad
pop
and
rcrb
jl
daa
mov
cmp
out
leave
mov
sub
mov
add
jnp
or
pop
cs
mov
sbb
sar
ret
xchg
sub
loope
inc
fstl
sub
jb
mov
call
xor
inc
aas
mov
dec
addr16
lock
push
das
adc
adc
jns
shrl
and
out
test
shll
or
push
pop
xor
xor
aas
call
or
jbe
push
popl
es
push
mov
cs
std
pop
out
push
imul
lret
cwtl
out
aam
ljmp
fwait
iret
loop
mov
fldcw
mov
xchg
add
stos
mulb
shr
push
dec
dec
jmp
mov
dec
in
lea
mov
cmpsl
and
clc
lcall
or
or
mov
pop
xor
pop
push
int3
mov
sti
clc
aam
shl
mov
pop
pop
int
cmpsb
jns
shrl
in
rclb
rol
test
mov
xor
test
sub
fstps
movaps
out
cmp
sbb
stos
sub
ret
push
lret
dec
aas
push
lahf
imul
or
pop
pushf
test
xor
push
adc
or
lock
mov
fsubl
xor
jmp
aam
insl
push
test
pop
xor
fs
mov
add
cli
lea
fcmovne
mov
mov
mov
mov
adc
test
pushf
mov
inc
xor
in
or
pop
or
sub
jl
cmp
jmp
fisubs
and
adc
mov
jp
adc
enter
or
push
adc
pop
sub
lds
and
ds
loop
mov
push
lods
xor
sub
mov
mov
icebp
pop
addb
sub
ret
adc
sub
loop
lea
jg
xor
dec
or
std
sti
xlat
pop
mov
popf
jecxz
mov
mov
in
arpl
es
dec
fldl
into
in
pushl
out
test
cmp
or
or
fidivl
fwait
in
xchg
stc
mov
pop
insl
cmc
xor
inc
jle
sbb
push
and
xor
and
pop
cld
lods
shll
push
dec
leave
fstps
sbb
or
in
or
jo
mov
not
xchg
dec
xor
xor
out
ror
lods
mov
fwait
sbb
push
inc
popf
movsb
lock
lahf
mov
mov
push
pop
ret
decl
inc
mov
fnstcw
rorb
sub
sti
push
pop
pushf
imul
and
cmp
fptan
call
mov
in
das
out
scas
xchg
jbe
inc
aas
fisubs
xchg
xorl
fdivs
jno
pop
bound
jnp
into
in
dec
icebp
push
jge
mov
shlb
inc
pop
lods
mov
divb
fisttpll
mov
cmp
xor
cwtl
negb
cmpsb
ror
loope
cvtpi2pd
mov
icebp
iret
xchg
movsl
insb
sub
cmp
outsl
and
les
out
shlb
outsl
jnp
scas
and
lcall
xchg
adc
rcrl
outsb
rcrb
or
fimuls
dec
inc
mov
mov
dec
mov
xchg
rcl
inc
mov
addr16
mov
fisubs
popf
mov
jg
sub
and
ret
fsubrl
mov
xlat
sbb
dec
mov
outsb
sbb
arpl
loopne
xor
dec
cmp
lods
push
or
adc
mov
xor
out
pop
leave
in
pmuludq
and
add
sbb
gs
bsf
pop
cmp
loop
fidivrs
xor
fwait
pop
aam
or
pop
push
fwait
and
jmp
cmc
repz
inc
nop
xor
pop
cmovne
fstl
cmc
inc
lods
int3
mov
xlat
push
push
lret
sahf
inc
in
lods
pop
repz
ret
push
or
inc
out
xlat
adc
imul
lods
cs
xchg
or
inc
testb
or
and
in
test
pop
mov
in
xor
or
lods
adc
sti
or
xlat
addl
js
orl
pop
in
xlat
inc
push
jb
movsb
push
mov
fbld
cmp
lahf
cmp
pushf
test
repz
fists
mov
pop
in
push
imul
aam
js
sub
pop
lcall
mov
loopne
fwait
jnp
inc
in
repz
cmp
ret
dec
and
cmpsb
adc
icebp
add
aas
imul
rorl
cmp
mov
pop
mov
lcall
xor
pop
aam
loope
and
lods
jge
fisttps
mov
mov
and
xor
jl
fdivl
inc
and
sub
sbb
cwtl
ffree
sbb
mov
mov
push
push
xor
dec
in
mov
repz
shrl
lahf
mov
mov
push
aam
dec
out
hlt
ja
jns
adc
insb
icebp
xor
daa
stos
mov
dec
inc
xchg
xor
xor
push
xchg
sbb
pop
arpl
sub
outsb
xchg
mov
fcmovnb
lods
jmp
add
leave
fdiv
mov
fcomps
push
mov
lret
mov
adc
fbld
mov
pushl
data16
fnsetpm(287
and
dec
repnz
or
lods
jmp
xor
clc
lock
jp
in
xchg
into
mov
lcall
movsb
xlat
sbb
test
sub
mov
dec
mov
and
popf
jecxz
dec
test
pop
add
sub
sarb
push
adc
mov
jle
imul
sub
xor
pop
shrb
fcom
repz
adc
test
rolb
movsb
inc
and
sbb
sub
fisttps
xorl
adc
mov
lods
fucomp
and
jae
pop
sahf
hlt
inc
mov
mov
lods
dec
cmpsl
addr16
and
cwtl
sbb
xchg
fcoms
mov
inc
cmpl
mov
cmp
stc
std
shrb
mov
pop
push
and
mov
adc
fistpll
mov
out
jl
pop
mov
loop
mov
adc
insl
cmp
pop
xor
dec
imul
mov
sub
and
mov
and
push
insl
imul
add
or
fstpt
cld
into
cmp
dec
pop
mov
xchg
arpl
jg
xchg
mov
xchg
pop
loopne
out
sub
jl
sub
jge
sbb
inc
mov
outsl
aas
push
shr
mov
fmuls
mov
leave
aam
lods
aad
jg
dec
daa
xor
mov
sarb
cmpb
sarl
imull
fstpt
fidivrl
xor
mov
sbb
decb
lret
xchg
cmp
js
adc
and
lods
aaa
les
ficoms
rol
dec
ljmp
scas
aaa
push
adc
push
jae
mov
mov
sbb
push
push
inc
xchg
jg
xor
movl
jnp
stos
push
xor
push
sub
inc
jecxz
cmc
mov
lods
out
jle
outsb
movsb
and
mov
cmp
pop
repz
dec
mov
jbe
and
xchg
sub
xor
cld
ret
insb
adc
out
in
fwait
popa
xor
ds
fcmovnbe
sti
stos
lcall
xchg
sub
shr
push
mov
push
in
aaa
mov
outsb
stos
loopne
out
adcl
shll
mov
fidivl
xchg
pop
jecxz
or
xor
rcrl
lods
mulb
in
lret
cmp
cli
lret
push
in
inc
aad
dec
jecxz
es
into
je
lods
repnz
call
bnd
mov
imul
ljmp
or
cmpsb
div
lods
les
adc
imul
or
push
mov
in
jbe
out
fistpl
sub
pop
sbb
int
jns
push
xor
repnz
mov
fcoml
sti
sub
insl
lahf
outsb
add
mov
jns
adcl
stos
sub
dec
test
mov
popa
jb
xchg
hlt
jg
fwait
mov
cmp
dec
movsl
and
xor
dec
mov
add
xchg
lea
sahf
scas
mov
pop
mov
test
add
adc
add
adc
rorl
test
xor
xchg
mov
and
sar
jp
and
les
movsb
mov
adc
and
rep
stc
mov
in
js
fsub
repnz
imul
cmpsb
dec
mov
shrl
les
mov
test
ret
inc
ljmp
cmp
sub
jecxz
mov
mov
cmp
cmp
loop
pop
movntq
in
push
xor
repnz
push
mov
push
cmc
adc
es
jnp
pop
fcoms
push
imul
jp
cmp
add
xlat
arpl
jne
jns
mov
out
cltd
repz
fcmovnb
notb
add
jae
or
mov
pop
add
fwait
loope
xchg
jge
cs
fmul
xchg
lods
xchg
loop
push
out
in
shlb
push
dec
sbb
xchg
fiaddl
pop
arpl
jnp
hlt
mov
add
fwait
shrb
mov
scas
or
gs
jg
iret
xchg
pop
and
mov
cmp
cmpsl
iret
sbb
inc
jno
mov
inc
pop
daa
xchg
mov
dec
insl
in
imul
sbb
mov
or
push
add
lcall
cmc
stc
dec
test
xor
xchg
cmp
mov
add
jge
aad
pop
jg
icebp
dec
shll
dec
push
add
pop
lcall
es
mov
jnp
jmp
sub
jne
addl
or
add
sub
faddl
cmp
aaa
mov
mov
lods
or
mov
pop
or
mov
lret
hlt
cwtl
insl
test
test
inc
cmp
shrl
lret
jne
call
inc
sbb
lods
mov
lahf
std
add
mov
lret
mov
test
sbb
insl
adc
mov
jmp
or
fcompp
into
loop
movsb
or
iret
mov
in
add
lahf
lods
mov
jno
inc
jno
inc
ljmp
adc
movsl
jo
jb
fidivl
test
addb
xor
sbb
dec
xor
in
mov
pop
cmp
decb
gs
push
lods
inc
sub
jbe
ret
jmp
imul
inc
mov
push
es
xchg
inc
and
jmp
dec
sub
cmp
lcall
int
jnp
add
cmpb
mov
sub
adc
mov
fs
xchg
jecxz
push
xchg
cli
imul
sbb
scas
mov
jecxz
test
adc
or
es
mov
mov
in
mov
pop
mov
test
jbe
call
stos
xchg
xchg
stos
mov
std
in
dec
pop
adc
scas
cli
lar
mov
mov
mov
lret
or
cmp
xchg
inc
bound
sbb
dec
outsl
std
sbb
and
out
cltd
add
mov
xchg
movsl
dec
scas
out
xchg
loop
jl
pop
inc
les
cmp
faddl
js
and
sbb
and
pop
xlat
mov
pushf
lahf
mov
and
aad
dec
sbbl
imul
mov
sbb
cmp
xor
jecxz
sbb
scas
add
in
mov
rol
cmpsb
xor
or
mov
jne
fxam
mov
inc
popf
fisubs
out
pop
int
mov
jae
xchg
lahf
or
sahf
sbb
or
ds
aas
jae
push
stos
es
scas
addb
cltd
add
es
rclb
add
int
repnz
push
mov
aaa
mov
jne
push
xchg
mov
outsb
hlt
in
stc
cmp
mov
scas
ja
xchg
mov
cmp
jp
xor
stc
outsl
leave
imul
je
mov
mov
and
inc
imul
cld
lock
incl
pusha
sub
xchg
in
cltd
mov
adc
int3
xor
roll
adcb
mov
jmp
jbe
gs
repnz
pop
pop
and
sbb
decl
in
xor
cli
jmp
lock
es
pop
or
and
jg
mov
push
pop
inc
lret
mov
dec
adc
fdivr
jmp
in
sub
imulb
mov
pop
mov
pushf
pop
call
mov
xor
notb
pop
sbb
cmovne
add
ss
and
and
out
or
leave
negl
shr
aam
sbbl
test
lar
or
jnp
mov
pop
xor
or
out
and
es
sbb
outsb
mov
sbb
in
pop
fldcw
rorb
shlb
cmp
imul
adc
jmp
loope
mov
enter
or
ret
repz
mov
sub
cld
js
out
pop
pusha
sbb
jno
cld
mov
cwtl
mov
mov
jnp
push
and
enter
cmpl
xchg
jecxz
outsb
daa
decl
test
push
or
xchg
clc
add
rorl
or
pushf
and
add
stos
cwtl
jnp
inc
jns
in
fistpl
cmp
jge
pop
jp
cmpb
in
jp
les
outsb
fisubl
jbe
dec
pop
nop
lock
xchg
repz
xor
fidivrs
lret
sti
inc
fcmovbe
mov
hlt
xchg
popfw
mov
inc
jb
xlat
arpl
int3
call
lods
inc
cmpl
cli
lods
dec
jo
out
shll
ret
dec
popf
cmp
in
mov
mov
es
lock
shlb
xchg
clc
jl
cmpsl
fstpl
lock
lea
fimuls
out
pusha
aad
sbbb
int
mov
pop
aaa
inc
pop
xchg
mov
sub
sti
mov
mov
sbb
aas
mov
mov
xor
movsl
mov
pop
jecxz
sahf
movsb
pusha
aam
mov
and
in
jl
lret
dec
push
pushf
call
mov
jecxz
iret
jae
inc
fnstsw
sti
dec
test
jmp
xor
scas
outsb
imul
cld
adc
mov
insb
jae
ret
bound
int3
push
das
ss
mov
lea
lods
xor
fcmovnbe
cmp
mov
sub
sbb
jns
lahf
dec
mov
or
pop
test
daa
ret
push
jbe
arpl
push
rcrb
mov
test
movsl
xchg
xchg
hlt
push
arpl
push
ljmp
cli
out
cld
loope
loope
and
mov
inc
lock
ja
mov
dec
sub
cmc
movsl
push
scas
pop
cmpsb
in
mov
add
jnp
loope
jb,pt
jo
shl
sub
sub
pop
lea
mov
bound
and
call
call
adc
mov
sbb
pushf
ret
jb
mov
fimuls
hlt
xchg
add
add
shlb
roll
add
cmpl
cmp
data16
sbb
xor
insl
test
pop
sub
mov
cmp
mov
out
xchg
or
jge
into
icebp
mov
loop
leave
mov
mov
stos
cmp
xor
aad
aam
push
pop
repz
push
aas
scas
mov
sub
mov
jge
and
xchg
xor
shll
push
jnp
pop
hlt
je
and
cs
out
subb
dec
adc
ja
add
pop
dec
movsb
stos
scas
daa
add
and
dec
repnz
adcl
daa
lock
cld
lcall
or
icebp
pop
or
es
mov
scas
clc
test
or
lods
cmpsl
add
cwtl
xlat
pop
rclb
xor
sbb
push
sub
mov
adc
int3
jecxz
out
jae
inc
in
outsb
icebp
dec
psadbw
enter
lret
shrl
shll
push
mov
out
dec
push
mov
and
mov
fsub
cmpsl
aas
push
aad
add
ja
jnp
gs
add
loopne
jmp
imul
out
enter
shrb
adc
sahf
pop
out
pop
repnz
rcll
mov
mov
or
jo
push
or
loop
pop
xchg
dec
xchg
ja
xchg
mov
repz
xor
push
ds
inc
rclb
add
daa
imul
adc
sub
add
sbb
pop
push
sbb
int3
cltd
pop
cmp
lods
inc
pop
and
or
fidivs
xchg
scas
sub
je
jg
sub
leave
je
lods
lcall
out
or
jo
pop
cmpsb
mov
dec
out
dec
leave
inc
andl
je
jnp
mov
in
lods
xchg
mov
andb
in
push
adc
movsb
sarb
and
insb
sub
jo
imulb
movsb
add
jb
xor
iret
add
fsubp
xchg
cmpsb
fwait
cs
fcomi
mov
in
dec
stos
mov
or
fprem1
outsb
insl
xlat
pop
dec
ja
stc
sbb
lods
jge
clts
xchg
mov
and
dec
pop
lret
shlb
pop
addb
lods
mov
push
fdiv
enter
or
sbb
pop
or
push
fdivrl
bswap
dec
loope
lcall
ljmp
sub
lahf
push
ss
cmp
imul
inc
stos
xor
push
mov
lret
mov
xor
jae
mov
cwtl
imul
int
loope
into
gs
pop
cltd
mov
mov
add
and
mov
fs
mov
lahf
roll
ja
pop
cli
mov
mov
add
push
cltd
bound
jg
negb
shr
sarb
pop
inc
inc
outsl
popa
lods
adc
into
aam
mov
in
adc
inc
mov
sbb
mov
pop
xorl
in
push
es
out
mov
mov
cltd
sub
pushf
dec
sbb
mov
add
stc
push
stc
jae
jo
inc
fdivrs
mov
xchg
notb
and
aas
pop
mov
dec
inc
leave
scas
rcrb
addr16
stos
mov
push
test
dec
rolb
lea
jecxz,pn
pop
or
cmc
or
pop
xchg
xchg
mov
or
push
test
dec
and
cwtl
push
or
mov
call
hlt
push
aam
jecxz
mov
in
mov
push
stc
jle
or
mov
pop
stc
fwait
pop
pop
jp
inc
cwtl
add
jp
jmp
jecxz
nop
jnp
scas
adc
ds
jb
adc
lret
aas
lret
jae
jb
mov
js
or
adc
pop
mov
push
loope
pusha
std
scas
push
repnz
fisubs
pop
dec
sbb
shr
xchg
insb
sarl
dec
lret
jnp
js
and
push
cmp
mov
adcl
push
loopne
fistl
into
cmpsb
popa
ss
mov
dec
add
out
fs
stc
in
pop
test
pop
std
pop
adc
xchg
imul
lahf
mov
mov
sub
or
mov
xchg
addr16
push
xchg
movsb
dec
sahf
pop
outsb
adc
popf
popf
mov
rep
aas
xor
sbb
cmp
and
lret
jmp
push
sar
inc
sub
sub
xlat
or
fsubs
insb
movsb
push
in
imul
sbb
test
xchg
jo
in
mov
push
adc
inc
scas
call
sbb
ret
push
sub
in
into
jno
push
test
fmul
sub
dec
jbe
mov
dec
in
pop
cmp
xchg
fld
fnsave
pusha
leave
jge
and
cmp
lret
push
mov
add
xchg
pop
jecxz
addr16
push
mov
mov
mov
jns
push
test
cltd
es
sub
ja
int3
popa
jbe
in
xor
sbb
cmp
gs
cmp
fsts
cmp
xchg
push
jmp
sbb
lea
xchg
pop
lret
mov
stc
lret
addr16
adcb
or
movsb
mov
push
movsl
pop
add
lods
adc
dec
mov
cmp
outsb
mov
pop
mov
popa
pushf
testl
xchg
xor
loope
push
lahf
mov
push
push
inc
or
xchg
out
inc
and
addl
dec
and
push
push
or
stos
out
std
std
or
xor
jmp
push
pop
out
out
xlat
cmp
or
mov
testl
sub
and
sub
xor
js
imul
sub
orb
inc
fstl
xchg
or
cli
pop
pop
xchg
add
imul
sub
xchg
movsl
pop
testl
xchg
mov
cmp
push
loope
jge
imul
xchg
popf
pop
and
imul
stos
or
adc
cmp
jbe
mov
es
mov
add
mov
inc
jmp
iret
and
inc
sbb
lret
outsl
or
mov
stc
pop
add
or
sbbl
repz
sbb
frstor
mov
dec
or
iret
inc
into
aaa
xor
push
push
lcall
data16
push
jno
sub
cli
insl
xor
cmpsb
or
mov
mov
loopne
fs
push
jbe
sbb
ficoml
jno
mov
pop
adcb
mov
fcom
push
cmp
mov
adc
icebp
pop
clc
push
jecxz
xchg
dec
out
mov
xor
xchg
dec
cmp
mov
mov
mov
cmp
add
and
fimull
stc
jle
or
lds
cmp
push
in
xchg
not
sbb
and
jp
fs
mov
add
sub
lods
mov
lret
mov
cmp
push
and
xor
mov
cltd
mov
cmp
cs
xchg
dec
ffree
scas
push
xchg
aaa
fwait
and
ljmp
ss
jb
hlt
mov
inc
xor
jne
pop
pop
or
mov
nop
mov
mov
in
sub
jo
sahf
hlt
or
orb
dec
aad
cmp
sub
in
in
ss
cmc
pushf
lcall
lret
loop
jmp
les
enter
or
xchg
jbe
cmp
js
insb
mov
jge
loope
inc
arpl
pop
sti
orl
cmp
sbb
sahf
filds
sbb
fisttps
push
icebp
sahf
jecxz
test
ss
push
xchg
test
or
ja
dec
mov
xor
insl
sbb
outsl
mov
insl
sti
xlat
add
fisubrl
cmpsl
loope
lock
outsb
cmp
lods
std
jl
scas
aaa
pop
or
pop
out
push
sti
cmp
jp
pop
nop
xchg
and
push
ja
cs
lods
leave
jge
jne
in
cmp
add
sub
xor
test
jle
push
inc
inc
pop
inc
test
push
outsl
sbb
dec
sub
xlat
fdivrs
loopne
divl
icebp
sbb
ror
mull
mov
jge
jbe
mov
or
ret
filds
lds
int
dec
xchg
lods
leave
push
cmc
adcl
lcall
xlat
jne
mov
gs
fdivrl
das
mov
pop
shrb
fsts
mov
and
cmp
mov
mov
mov
js
shll
lcall
push
jnp
sbb
cmc
jne
and
inc
pop
fwait
call
mov
loope
addl
and
pop
xor
jo
mov
mov
jbe
push
jns
scas
in
xchg
scas
jl
mov
or
adc
mov
mov
mov
sbb
dec
mov
xchg
iret
add
push
lret
mov
jb
ja
hlt
mov
out
mov
addr16
inc
mov
es
rcl
xchg
adc
cmp
fstpt
sti
std
stc
outsb
lcall
push
dec
imul
es
pop
mov
popa
mov
imul
mov
dec
push
cmp
inc
shll
and
and
je
out
aad
roll
jbe
jl,pn
inc
loopne
pop
sbb
inc
sbb
lods
xor
xor
movsl
sbb
ficomps
leave
je
repz
xchg
arpl
xor
out
jle
std
jns
xchg
dec
add
mov
aam
rclb
ljmp
adc
xor
mov
fcmovbe
adc
out
push
dec
je
mov
fldenv
and
fs
sbb
in
sbb
repnz
xchg
es
push
call
or
jbe
shr
shrb
fbld
in
in
lret
mov
pop
mov
pop
out
rclb
mov
psrlq
mov
int3
jmp
mov
pusha
divl
js
stos
gs
nop
std
lret
in
test
mov
loopne
and
sbb
or
fisttpl
mov
mov
hlt
sbb
aad
add
jnp
daa
mov
pop
lret
push
jns
mov
sar
xorb
pop
scas
shrl
in
sbb
push
clc
fsubr
test
enter
mov
lock
sub
xchg
push
push
out
andb
pop
js
add
data16
in
push
fcoml
mov
add
shrl
sub
xor
push
mov
add
gs
clc
jecxz
cli
imul
push
popf
jl
sti
push
sbb
jae
mov
jo
cld
mov
movsb
mov
xchg
pop
in
stos
mov
sub
dec
lds
and
jmp
mov
mov
push
shlb
xlat
add
push
cmpsb
mov
movsb
jb
pop
cmp
or
shlb
js
xchg
js
adc
or
push
loop
dec
ds
pop
in
sbb
fnsave
mov
dec
push
test
and
pop
mov
cli
stc
cwtl
cwtl
push
mov
jbe
push
in
push
test
xor
out
outsb
dec
push
mov
add
and
ret
lahf
loop
ljmp
out
lret
mov
pop
fwait
leave
test
sbbb
jae
rcr
inc
mov
xor
inc
rcrl
push
lret
xchg
inc
addr16
mov
cmp
in
testb
ret
sub
add
mov
fnstsw
inc
outsb
xor
lret
push
push
shlb
lcall
jns
enter
adc
fistps
hlt
add
or
pushf
mov
les
xchg
or
sub
aam
add
fbld
or
dec
shll
in
cmc
xchg
and
mov
int
sbb
fdivrp
or
daa
sbb
mov
loope
and
xchg
pop
pop
pop
insb
push
lock
loope
push
aad
cwtl
pushf
dec
iret
out
clc
adc
lods
dec
and
test
shl
daa
mov
and
adc
push
adc
mov
fadd
std
cmp
ds
adc
lcall
pop
nop
and
mov
sub
lret
xchg
adc
das
dec
sub
inc
dec
gs
pop
repnz
in
adc
lea
shlb
and
jp
pop
clc
mov
les
sub
push
movsb
fbld
inc
in
xchg
pop
nop
xor
hlt
cmc
pushf
jnp
test
addr16
in
shll
leave
lcall
fdivs
adc
arpl
popf
mov
in
xchg
ror
pop
push
adc
sbb
mov
fcmovbe
push
cmpsl
movsl
jbe
mov
mov
jge
jo
dec
mov
mov
das
rcr
and
movb
inc
mov
xchg
int
inc
repnz
in
jb
sub
scas
mov
inc
inc
mov
push
or
push
cmp
sub
repnz
ret
ja
jmp
dec
adc
sub
jne
jne
mov
pop
bnd
in
leave
cli
lret
xor
jge
mov
daa
mov
cwtl
xor
add
in
and
jno
sbb
xor
sub
adc
xchg
push
out
jg
mov
and
jno
push
ret
jo
out
add
and
jmp
sbb
verw
fdivl
filds
cli
mov
in
jo
xlat
pop
mov
xchg
xchg
cltd
xor
popf
je
dec
lods
adc
push
in
lods
int3
rcrl
xchg
push
mov
pop
push
xlat
inc
mov
cmp
inc
stos
pop
mov
adc
dec
and
in
nop
inc
sbbb
mov
push
out
xor
in
push
in
das
ror
sahf
loope
push
cmp
in
hlt
push
pop
stc
dec
mov
nop
stc
cmpsb
aad
incb
rorl
dec
xchg
movups
nop
dec
cmp
aam
loope
inc
pop
jo
mov
push
stc
aas
fs
or
sar
orb
in
or
push
adc
adc
lods
cmpl
inc
add
jne
mov
jecxz
jae
jge
add
jns
movb
mov
mov
mov
pusha
add
pop
dec
imul
into
aam
xlat
jns
pop
jns
aaa
dec
js
add
mov
bound
jns
pop
cltd
xchg
sbb
pop
xchg
cli
fs
xor
popf
sahf
cltd
ja
push
jge
stc
mov
lret
or
lods
lcall
add
lds
repz
pop
mov
popa
push
jne
ljmp
mov
lods
aad
pop
push
cwtl
sub
or
pop
mov
xor
sahf
xor
xchg
insb
jns
hlt
jne
lods
sarb
mov
inc
mov
scas
jb
pop
dec
sub
mov
sbb
xorb
push
and
cltd
or
insl
ret
js
push
fcoml
fs
push
cmp
movsl
stc
jl
dec
mov
lods
dec
pop
and
cmp
and
cmpsl
jl
mov
dec
sahf
pop
daa
xor
sbb
jb
scas
mov
or
mov
pop
popa
jno
adcl
and
fiadds
out
sbb
or
repz
jp
shr
cmp
dec
sbb
cmpsb
and
out
mov
rcrb
stos
movb
cmp
scas
sahf
or
js
hlt
mov
movsb
sti
jnp
rol
inc
and
ds
cmc
inc
pop
push
cmpsl
mov
dec
jbe
xchg
mov
inc
stc
dec
xor
xor
xor
dec
xchg
lock
pop
mov
fsts
push
int
pop
xor
xchg
sti
adc
gs
push
ljmp
jmp
std
lahf
xor
inc
xchg
scas
push
outsb
pop
in
mov
push
movl
push
out
dec
xlat
lds
add
inc
add
mov
fcmovnbe
adc
je
test
jg
or
js
nop
daa
dec
sub
sub
xchg
fistpll
push
lds
fnstenv
cmp
rcr
jmp
pop
int
shl
daa
sbb
pop
mov
mov
jne
cmp
mov
jo
andb
mov
fwait
or
loop
je
mov
xlat
jbe
rclb
test
std
jle
outsb
sbb
sti
cli
jmp
dec
adc
sbb
cmpb
cmp
jp
inc
sub
pop
jo
sarl
cltd
sub
mov
test
mov
mov
inc
mov
iret
adc
xorb
and
shll
jmp
pop
pop
push
mov
ds
adc
or
ljmp
sub
ss
and
xor
mov
stc
or
and
add
cmp
data16
cltd
repz
in
cli
rcll
std
arpl
cwtl
push
out
cmp
jmp
jmp
arpl
aam
adc
enter
mov
or
or
sub
std
jbe
mov
test
push
xor
rcl
push
loope
cmpsl
mov
loope
mov
mov
insl
mov
xchg
aad
push
mov
mov
push
dec
rolb
sub
scas
test
clc
xchg
xchg
jnp
cld
sbb
or
loop
faddp
insb
fcoms
lret
mov
ret
pop
xor
cltd
sti
fidivl
loope
xor
pop
lods
sarl
push
fs
mov
jmp
dec
in
je
dec
mov
cwtl
push
aaa
sbb
rorb
mov
xchg
mov
addr16
mov
xlat
cmp
or
add
cmpsb
insb
out
mov
subl
adc
adc
push
dec
mov
lret
ficompl
int3
mov
mov
imul
jnp
push
jno
nop
je
lds
cmp
clc
cltd
adc
repz
mov
jle
inc
or
ljmp
mov
cmc
std
mov
out
mov
out
icebp
jge
mov
ss
rcr
jp
lret
cmpsb
inc
sub
subl
mov
mov
test
fadds
les
or
addr16
xor
pop
jecxz
lret
scas
jge
inc
movsl
push
mov
jmp
pop
sbb
jo
sub
xchg
add
fstl
setbe
add
in
pusha
dec
and
and
inc
fistpl
popa
out
nop
and
xchg
dec
mov
ja
lret
xchg
push
stos
mov
add
cmpsb
cwtl
insl
adc
dec
mov
and
and
cmpsl
jo
enter
xlat
adc
add
pop
mov
xchg
dec
xor
mov
cmp
mov
out
cli
pop
inc
repz
jecxz
stos
in
enter
in
xchg
cmp
clc
xor
int
adcb
xchg
jg
jg
mov
inc
hlt
test
or
ss
xchg
popa
out
jnp
call
or
sbb
mov
mov
or
jl
fcmovnb
fidivrs
in
or
frstor
movsb
mov
orb
ret
xor
shll
xchg
dec
adc
mov
add
push
jg
fsubrs
arpl
test
pop
dec
jbe
jg
and
mov
mov
mov
data16
out
and
sahf
pop
int3
div
lret
test
jle
sub
lcall
mov
les
and
adc
in
dec
sub
dec
popa
sbb
stos
and
adc
pop
sbb
adc
pop
mov
jmp
shll
sar
jo
push
pop
mov
hlt
rcll
mov
and
mov
mov
pop
rcl
daa
and
out
mov
scas
sub
movsb
xor
movsb
cmpsl
lods
call
lret
add
jp
dec
int3
dec
mov
cltd
xchg
ss
sub
xor
int
cmp
cltd
rolb
pop
pop
or
xchg
mov
xchg
xchg
pusha
cmp
mov
incb
adc
mov
arpl
into
std
jbe
sub
stos
and
dec
lods
test
cltd
ret
lret
xchg
lock
inc
das
rcrl
shl
pop
or
sti
sbb
cmc
fcmovnbe
jmp
inc
out
inc
cmpsl
stos
cli
out
mov
clc
into
test
jo
or
xchg
or
fwait
inc
mov
jns
xor
mulb
call
and
xor
adc
and
ljmp
xor
mov
xor
add
dec
bound
lods
mov
outsl
rcrb
rorb
adc
loop
mov
push
scas
mov
mov
cmp
inc
sbbl
add
dec
and
sub
pop
mov
sahf
int
fwait
sub
sub
rol
data16
in
fstpl
cmp
jg
aaa
dec
clc
ds
lods
push
lock
and
xchg
cli
lods
lea
aaa
popa
pop
mov
fadds
cmp
xchg
dec
lea
outsl
jne
shrb
ret
cmp
int
lock
add
dec
loopne
outsb
jge
mov
sbb
and
popf
xchg
femms
lds
ss
inc
lahf
fdivrs
sub
fistpll
sbb
cmpsl
pushf
stc
dec
jae
xor
cmc
sbb
rcl
out
movsb
mov
push
aas
test
ja
dec
adc
jp
cwtl
pushf
add
mov
mov
xorl
cmc
jae
insb
jae
pop
xor
loop
push
cmc
gs
push
xlat
mov
sahf
repnz
lcall
adc
aas
xchg
and
sub
shlb
int
mov
loop
sarl
ret
setno
mov
cwtl
push
mov
cmp
sbb
adc
xchg
xchg
lahf
out
mov
in
lea
xor
xchg
popa
dec
shll
div
mov
mov
loop
xchg
inc
adc
aad
out
dec
add
ljmp
lret
insb
push
sar
out
ljmp
and
jbe
hlt
stos
stos
xor
xor
cmp
popa
das
int3
add
in
call
scas
jnp
repz
cmp
mov
shlb
jmp
aam
fcomps
mov
roll
xor
inc
shll
push
lret
add
repnz
sbb
mov
cltd
movsl
frstor
inc
cmp
call
movsl
test
jbe
add
ja
loopne
dec
push
sbb
testb
pop
pop
scas
fs
or
inc
inc
push
or
mov
mov
addb
jno
jns
push
fnstsw
idivl
mov
cmc
rcll
arpl
decb
scas
jmp
or
pop
xor
mov
sub
sub
fwait
lret
sub
imul
xchg
iret
mov
adc
xchg
bound
lea
mov
ror
inc
out
nop
push
inc
imul
adc
loop
add
inc
xor
cmp
mov
mull
push
push
cmp
sub
ljmp
in
mov
sbb
movsl
jb,pt
push
sub
ficomps
sub
mov
cmc
xor
pop
je
sub
pop
mov
mov
movsb
mov
lahf
mov
adc
cmp
mov
xor
xchg
arpl
gs
test
ret
sub
mov
and
cwtl
inc
inc
or
orb
daa
pop
imul
add
mov
rclb
push
xchg
ret
mov
jae
dec
out
jmp
sub
cmp
out
stos
inc
stc
and
les
mov
mov
pusha
inc
dec
jmp
sub
adc
loopne
pop
jmp
lods
adc
or
sub
adc
aam
and
dec
loope
jns
mov
ja
add
pop
pop
push
nop
ror
add
repz
jns
cltd
and
push
push
sbb
sbb
inc
mov
ja
jg
cs
xor
psraw
cmc
adc
dec
mov
push
and
xchg
addr16
adc
sti
or
outsb
push
lret
scas
fildl
push
sahf
lock
aam
test
lret
cmp
pop
adc
pop
fwait
mov
lahf
mov
sbb
xchg
sub
adc
mov
movsl
jmp
mov
jb
enter
dec
aad
push
sub
lods
ljmp
call
in
add
or
push
push
pop
xchg
jp
test
inc
scas
stos
in
popa
aam
hlt
jbe
jmp
push
sbb
sti
popf
pop
or
jb
sub
pop
std
push
fisttps
pop
or
mov
mov
mov
mov
out
inc
mov
pop
xlat
fdivp
fsqrt
push
jae
fiaddl
insb
outsl
mov
inc
subb
dec
and
pop
lcall
jbe
sbb
push
cli
stos
or
enter
push
lret
dec
cmp
pop
repz
xchg
sbb
jecxz
mov
das
inc
pop
adc
es
mov
ja
les
pop
stos
push
xchg
mov
mov
imul
pop
sub
scas
js
ljmp
daa
and
mov
fnstsw
mov
mov
jg
inc
mov
xor
je
xchg
popf
dec
enter
inc
jle
and
mov
add
mov
data16
or
jno
add
popa
aam
int3
imul
test
mov
mov
out
adc
ja
es
jl
sbb
xchg
les
mov
sbb
xchg
dec
insb
jg
clc
insb
mov
cmpl
adc
sbb
lret
out
inc
sbb
xor
mov
add
out
movsb
mov
cmp
mov
xor
sub
mov
jecxz
lret
or
xchg
pop
mov
jl
xchg
and
push
mov
lods
out
ret
popa
mov
pop
movsl
sti
addr16
mov
das
xor
test
ss
push
xchg
fnsave
sbb
imul
cli
xor
repnz
imul
hlt
jne
inc
sub
aas
mov
shll
add
adc
nop
fstpt
iret
and
jle
push
call
dec
jnp
insl
repnz
xor
or
or
add
or
ficomps
shll
movb
cmpb
cmp
pop
sbb
sahf
mov
int3
inc
xor
insb
test
ljmp
adc
inc
aaa
mov
jle
xor
insb
dec
repnz
lea
pop
int3
movsb
mov
ljmp
jo
adc
sbbb
hlt
jns
filds
mov
mov
sbb
push
mov
jnp
shrb
xor
dec
test
mov
mov
xchg
sub
imul
cli
movsb
xor
sbb
and
mov
call
loope
fwait
adc
mov
pop
in
push
dec
outsl
fwait
jge
sbbb
nop
aaa
jne
lahf
mov
and
dec
pop
int3
loopne
mov
lret
xor
mov
testl
aad
cmp
inc
insl
xchg
inc
or
cmpsb
aam
xor
or
and
cli
ret
addr16
xchg
in
jmp
hlt
and
pop
jle
arpl
mov
flds
fwait
dec
xor
sub
mov
andl
or
cmpb
sbb
out
shrb
in
cwtl
sti
enter
imul
jnp
pop
es
mov
ret
inc
and
lods
out
div
xchg
jecxz
dec
cmp
push
add
mov
mov
sub
mov
je
outsl
add
js
fs
call
mov
push
neg
jo
mov
js
insl
dec
jne
movsb
mov
cmpsb
mov
clc
inc
mov
xchg
aam
sbb
mov
sahf
and
mov
mov
aam
sbb
jb
lret
loop
cmpsb
stos
mulps
add
mov
aam
mov
mov
or
pop
popf
hlt
test
mov
push
jg
cmc
pop
int3
sbb
int
aam
jb
shrb
inc
push
jne
ret
adc
jb
mov
es
call
dec
lret
aad
int3
fcmovb
out
jnp
sbb
mov
stos
or
subl
dec
or
pop
jle
dec
in
adc
hlt
xchg
adc
mov
xchg
or
cmc
push
sarl
push
shll
mov
adc
adc
test
frstor
push
push
adc
ret
neg
shrb
faddl
pop
adc
jae
xchg
dec
dec
insl
pop
xor
fs
xchg
add
xchg
dec
xchg
sub
mov
and
and
mov
clc
cmp
cltd
fsub
xor
sub
inc
pop
mov
push
scas
aam
push
rorb
adc
fistpll
sub
vmulpd
sbb
mov
stos
mov
push
cli
mov
adc
leave
movsb
andb
stc
pop
ljmp
xor
mov
and
and
add
sahf
and
pop
test
ljmp
inc
outsl
out
add
imul
mov
add
push
mov
test
mov
popf
sub
mov
and
push
mov
addr16
lret
jne
mov
dec
jl
add
mov
add
xor
mov
mov
mov
add
and
mov
mov
mov
lea
mov
mov
mov
sub
add
mov
mov
xor
add
jne
jmp
jmp
insb
loopne
jmp
mov
shr
mov
pop
jp
outsl
xor
jbe
inc
sub
cwtl
popf
add
inc
pusha
add
pop
scas
xchg
loope
test
jl
int3
push
fistl
pop
gs
push
push
dec
out
les
into
cmpsb
and
and
mov
lods
sub
mov
jle
push
jle
lds
dec
mov
in
dec
xor
ss
jmp
mov
jmp
sub
mov
daa
and
xor
adc
lahf
test
dec
mov
add
jnp
daa
and
ficomps
push
inc
dec
movsb
enter
stos
lahf
sub
sbb
aas
cmpsb
sti
popa
jne
jecxz
adc
inc
fcoml
ss
scas
mov
pop
jo
fneni(8087
cs
adc
fadds
pop
push
push
jnp
cmpsb
clc
cld
cmpsl
test
or
adc
mov
rcr
shll
add
mov
and
test
scas
dec
lods
inc
ss
or
aam
js
push
sub
lret
jb
push
es
aam
scas
aaa
cmp
pushf
mov
sbbl
gs
aad
push
movsl
pop
dec
loope
add
in
or
movsb
in
test
fldcw
xchg
and
lret
sbb
fcom
dec
lods
ja
adc
mov
lock
aad
xchg
sarl
add
inc
ja
mov
add
mov
popf
dec
daa
pop
mov
xor
adc
mov
lods
data16
or
inc
and
fiadds
mov
ja
dec
sarl
test
in
nop
mov
cwtl
adc
add
xor
adc
gs
cmpsl
loopne
ss
call
ds
loopne
movzwl
pop
xlat
pop
imul
xchg
and
ljmp
dec
adc
out
push
adc
dec
mov
push
outsb
lahf
insb
fs
lods
pop
insl
ss
cmp
sub
pop
xchg
dec
cmp
fidivl
rol
loop
in
sbb
xchg
add
cmp
sbb
popf
push
lahf
ror
and
push
mov
mov
sub
lret
sarl
es
xchg
jge
je
lods
roll
in
mov
inc
add
fsubs
ljmp
jge
dec
inc
lods
jp
clc
dec
pop
je
arpl
jle
mov
leave
gs
scas
jbe
sbb
pop
movsb
cmp
sub
fstpl
mov
leave
fidivl
push
clc
mov
ret
or
adc
mov
jp
xor
pop
add
stos
cmp
sub
xor
dec
scas
fidivrl
testl
fstps
fnstcw
mov
aam
shl
mov
idivl
sub
xchg
into
int
push
ret
stos
xlat
pop
xorl
fcoml
mov
dec
adc
lods
xchg
and
and
mov
xchg
sti
or
pop
add
test
fildl
imul
aaa
jbe
insl
cmpsl
jmp
cmpsb
jnp
sub
pop
pop
scas
mov
xor
popa
gs
inc
push
test
pop
push
dec
push
jne
std
std
insl
inc
or
adc
imul
insb
cmp
lock
inc
jo
sbb
cwtl
mov
aam
pop
pop
dec
lret
inc
mov
lret
out
cs
mov
inc
loope
leave
sub
inc
inc
jp
jg
xchg
out
inc
fwait
xchg
mov
inc
pusha
mov
loopne
cld
mov
pushf
ret
in
testl
ds
dec
fmull
add
sbb
sbb
dec
cmpsb
pushf
test
xchg
adc
cmp
or
sbb
mov
mov
jge
add
and
mov
aad
xor
push
insb
jb
out
jae
push
mov
stos
ret
in
jl
test
pushf
shlb
cwtl
outsl
mov
rcrb
inc
dec
jle
xor
setb
dec
jae
lock
inc
data16
push
dec
lret
adc
xchg
cmp
add
adc
xchg
xchg
mov
incl
xor
dec
mov
pop
add
push
xchg
mov
imul
add
call
adc
pusha
pop
sbb
and
mov
leave
adc
sti
xchg
jnp
and
in
add
idiv
je
adc
cmp
xor
sub
or
sbb
mov
js
or
mov
repz
dec
mov
or
scas
jmp
js
inc
jae
hlt
mov
jae
rorl
dec
jns
lahf
cmp
std
dec
mov
jo
lods
cmp
mov
xchg
test
and
cli
add
mov
push
into
negl
fcoml
inc
xchg
adc
mov
and
xlat
shll
xchg
scas
adc
inc
mov
xchg
add
les
mov
pop
bound
pandn
pop
shl
pop
fwait
jl
in
scas
sti
xchg
mov
inc
xchg
and
push
je
and
mov
cld
adc
cmc
pop
fwait
xor
ljmp
outsl
push
repz
jmp
push
sub
mov
add
in
xchg
jne
mov
pop
xor
popf
fnstsw
xchg
jmp
mov
pop
lods
lods
mov
test
push
sbb
or
adc
enter
inc
inc
mov
mov
push
mov
cmc
add
cmp
cmp
lcall
gs
cmpsl
test
sbb
mov
xchg
push
mov
inc
mov
jg
gs
push
outsl
shl
iret
cmpsb
jge
mov
push
jp
popl
inc
insb
into
mov
xchg
mov
popa
imul
push
xchg
stos
loop
fxch
mov
int
cmp
and
pop
push
bound
jno
cld
sub
shrl
sbb
xlat
dec
cmp
fcmovb
in
lds
out
xchg
sbb
cmpsl
repz
sub
dec
sub
stos
mov
daa
pop
imul
pop
out
lret
xchg
cmp
arpl
jp
add
jmp
repnz
das
add
mov
jns
out
lods
out
xchg
sahf
popf
insl
push
test
rclb
push
pushf
imul
aas
je
inc
and
adc
cmp
ds
mov
dec
test
imul
mov
sbb
int
outsb
push
sub
dec
mov
out
xchg
push
inc
or
lods
les
or
ficoml
pop
add
cli
sbb
cli
in
xor
jecxz
ds
adc
shlb
lret
jmp
adc
push
out
ja
in
data16
and
sub
out
rcl
daa
lods
jmp
xchg
js
jbe
push
in
add
aam
cmp
bound
dec
xchg
test
or
or
jecxz
repnz
out
mov
pop
nop
test
clc
inc
bound
aaa
aam
or
and
xchg
mov
dec
lcall
mov
push
cltd
xlat
jbe
dec
jecxz
aaa
orl
xchg
xchg
xor
test
ss
out
sub
cmpsb
and
pop
aas
push
cwtl
xor
push
mov
jge
jmp
and
pop
pushf
adc
imull
mov
cmp
xchg
cmp
push
push
sub
xchg
mov
repz
xchg
jb
add
leave
hlt
push
adc
mov
addr16
jmp
test
pop
lock
repz
lahf
xchg
xchg
and
cwtl
mov
dec
pop
inc
test
les
ss
aas
dec
mov
cmpsb
xchg
inc
sub
pop
and
rcrl
sbb
xchg
call
xchg
jle
xchg
jns
lea
movsb
xor
sub
aad
inc
sub
flds
mov
arpl
mov
xchg
loope
cwtl
nop
xchg
add
or
or
dec
adc
cmp
ja
lock
icebp
dec
imull
mov
xchg
push
adc
mov
inc
cs
xchg
or
adcb
cmpsb
imulb
mov
int3
iret
add
push
jecxz
mov
jp
out
mov
push
arpl
das
lea
push
test
lret
addr16
or
repnz
xchg
cmp
mov
sub
pop
sub
repz
xorb
push
popa
xchg
mov
rorl
or
pop
rcrb
outsl
fsts
shll
jnp
neg
add
inc
mulb
insl
hlt
and
xlat
xchg
repz
sub
loop
push
testl
movsl
xchg
xchg
fwait
mov
dec
inc
test
xor
sbb
pop
aas
dec
enter
dec
es
sbb
xchg
faddl
iret
push
scas
jmp
and
inc
rcrl
sbb
pusha
call
lea
pop
arpl
pop
lret
or
xchg
dec
and
std
sbb
ret
jmp
into
sti
dec
out
imul
inc
lock
or
dec
cmp
lret
je
mov
adc
xor
lahf
xchg
or
repnz
int3
imul
and
pushf
jo
loopew
mov
xor
and
mov
je
ficomps
mov
cmp
dec
in
mov
das
jmp
xlat
xor
cmp
and
xor
inc
pop
dec
jne
jg
cwtl
mov
test
mov
dec
scas
les
lret
outsb
in
add
push
cmpsl
test
mov
inc
adc
out
int
sub
push
ss
arpl
clc
inc
xchg
mov
aaa
xor
pop
jbe
out
cmp
popf
mov
jno
fildl
mov
test
shl
jno
inc
adc
add
jge
dec
jae
cmpsb
icebp
xor
pop
adc
in
cmc
sbb
test
sub
adc
dec
xor
or
cmc
pop
xchg
mov
push
sub
popa
std
xor
and
test
pop
adc
pop
aam
in
paddb
pop
les
mov
insb
mov
inc
mov
pop
lods
jge
lods
pushf
and
inc
adc
or
push
jb
sti
imul
clc
push
mov
popf
dec
in
test
repz
mov
or
outsb
mov
cmp
mov
mov
sub
lcall
mov
cmpsb
outsb
adc
pop
in
in
xor
nop
xor
scas
xchg
mov
mov
sub
push
rcrb
or
dec
cltd
xchg
bound
inc
cmpsl
dec
out
cmp
cmp
adc
icebp
in
insl
repz
or
cld
cmp
cwtl
mov
cld
add
mov
test
movsb
jns
sbb
imull
cmp
std
outsl
lret
push
sti
sub
popa
es
and
subl
into
add
mov
xor
cld
mov
outsl
lret
es
outsl
fidivs
mov
popa
sub
aad
xor
jmp
sbb
les
stos
lahf
pop
mov
xchg
jo
fwait
and
cmp
mov
enter
mov
shrl
mov
aam
sbb
sub
mov
mov
sub
std
in
int
lock
or
mov
shl
daa
sbb
mov
outsl
out
pop
cld
xor
cmpl
aad
pop
out
adc
fdivrs
pop
sub
pop
adc
addr16
ljmp
xor
xchg
or
and
jae
in
rorl
pop
shr
and
lret
mov
fisttps
push
mov
notb
sbb
push
push
and
dec
fdivp
jl
xor
xor
movl
mov
xchg
shrl
outsb
movsb
mov
add
nop
xlat
mov
fbld
mov
les
push
popa
mov
xchg
sbb
sbb
repz
mov
sbb
push
sbb
sbb
jp
xor
lods
sub
push
or
pop
loopne
scas
mov
sub
out
inc
inc
fiaddl
and
mov
arpl
adc
adc
dec
xchg
cmpsl
stc
movsb
add
adcl
jmp
ret
sbb
insl
jmp
addr16
and
lcall
mov
mov
cs
sub
es
jno
loop
clc
adc
sub
popf
das
pop
xchg
shl
popl
sbb
shr
dec
mov
js
adc
push
dec
nop
sbb
sub
mov
mov
dec
inc
enter
push
popa
adc
xlat
jp
insb
js
mov
lcall
testb
pushf
out
push
test
jae
mov
imull
dec
dec
popa
push
cmpsb
inc
jge
rorb
sti
mov
sub
movb
insb
sbb
jbe
pusha
inc
cmc
je
insl
adcb
ret
loop
ret
cmpsl
xchg
pop
sub
dec
es
test
mov
pop
jo
outsb
aas
addr16
dec
mov
cmc
fadd
lods
pop
dec
inc
jmp
mov
jg
jno
jp
cwtl
adc
pop
mov
pop
das
psraw
lret
add
cmc
cmp
sahf
add
and
mov
cltd
sub
ja
sub
cltd
pushf
mov
out
dec
jae
jae
inc
sub
sub
jg
or
add
xchg
lock
and
scas
out
ret
loopne
mov
adc
iretw
repz
mov
lahf
and
lret
sbb
int
lods
frstor
movsb
sbb
cmpl
ret
add
shlb
loopne
xchg
mov
dec
test
cmp
dec
shlb
cmp
xlat
lods
sbb
stos
mov
or
fildll
sbb
sub
xchg
pop
fidivl
xchg
add
or
mov
ret
shr
dec
pushf
pop
cmp
subb
and
pop
mov
or
adc
push
pop
push
dec
pop
mov
mov
fwait
dec
xchg
inc
inc
and
or
pop
dec
pop
pop
pop
pop
mov
test
or
xor
push
pop
ror
call
inc
push
cmpsb
mov
mov
jae
movsl
and
testb
jo
call
std
stos
push
out
cmc
in
xchg
mov
xor
jl
addr16
add
inc
add
stos
aad
nop
or
clts
test
cli
push
cmp
inc
xchg
es
push
ret
pop
fs
out
pop
aad
jl
and
xor
xor
dec
decb
inc
popa
outsl
cli
ret
lcall
or
movsb
data16
fsubrl
mov
jmp
and
loope
pusha
sbb
sbb
insb
xchg
push
nop
mov
xchg
inc
enter
pop
cld
arpl
add
aas
inc
jo
je
in
lods
jg
sub
mov
js
ja
jg
cmp
push
mov
xor
adc
xchg
push
and
pop
lds
fs
mov
mov
faddp
xlat
test
push
pop
hlt
sub
pop
sahf
xchg
sbbl
fdivs
dec
mov
mov
xlat
fistpll
fimuls
int3
popf
sbb
imul
cli
xchg
outsb
out
in
mov
push
les
jne
push
in
dec
push
nop
cltd
lret
push
xchg
pop
int3
xchg
dec
mov
or
out
std
mov
jg
arpl
mov
inc
int3
popf
fptan
jmp
imul
cltd
xchg
jbe
mov
lea
adc
das
push
mov
xchg
xlat
push
sbb
cmp
mov
fiaddl
pop
push
or
stos
mov
imul
sbb
test
in
and
adc
mov
xchg
inc
nop
clc
int3
push
push
lea
and
adc
push
adc
cmc
or
xchg
repnz
mov
jo
pushf
and
xor
mov
daa
cmp
out
mov
inc
dec
repnz
fdivs
push
mov
orl
orl
fimull
push
pop
xchg
mov
xorl
outsl
adc
sbb
test
mov
pop
or
in
fs
lahf
std
add
push
out
xchg
es
inc
mov
mov
mov
sub
movsl
xor
fsubrl
dec
aam
jo
cmpsb
sti
mov
mov
rclb
fmuls
add
ret
mov
in
pop
jne
iret
pop
add
push
leave
ljmp
jle
add
mov
mov
sub
ret
les
push
fistpll
dec
std
lock
mov
push
repnz
mov
test
push
out
mov
sub
and
rorl
xchg
fstp
push
icebp
imul
pop
idiv
testl
sbb
clc
icebp
loop
test
dec
cs
push
ficoms
aaa
or
decl
outsb
push
add
push
cli
stc
adc
rolb
hlt
lds
test
ss
pop
xchg
in
dec
std
pop
jge
mov
int
jp
lods
mov
insb
lea
pop
test
lock
sbbb
clc
and
push
mov
scas
mov
cltd
pop
add
pop
mov
outsl
loop
add
in
pop
mov
xchg
call
adc
dec
cmc
aad
int3
fstpl
inc
cs
lds
testb
hlt
mov
push
out
iret
xor
jl
gs
sarb
xlat
mov
xchg
push
dec
xor
sub
add
int
mov
js
cltd
xchg
xchg
pop
sbb
leave
mov
dec
mov
and
sarb
insb
andl
jmp
aaa
popf
mov
add
mov
lret
mov
adc
sub
push
adc
cli
or
fnstsw
push
xor
insl
add
std
pop
adc
xchg
xchg
ja
sub
cmp
pop
pop
js
mov
xorl
clc
popa
inc
rolb
inc
fcmovne
popf
sub
push
push
in
inc
pop
mov
add
addr16
mov
adc
mov
push
push
and
addr16
sti
lock
daa
pop
sahf
sub
or
hlt
mov
popa
fildll
in
xor
fldcw
jno
xchg
cmc
loope
popl
inc
jno
outsb
inc
fs
sahf
insl
fucom
add
dec
pop
jmp
ret
mov
std
lds
movhps
in
rcrb
fists
dec
mov
les
or
fwait
sbb
pop
mov
dec
push
in
fdivr
cmpsl
lock
push
jmp
pop
fildl
sbb
sub
into
sbb
jb
jns
lds
cmp
dec
or
sub
fldl
inc
in
sahf
and
mov
push
xchg
subl
rolb
push
stos
jbe
andb
jg
mov
insl
lods
inc
movsb
mov
mov
cmpsb
xor
mov
push
inc
into
lahf
push
insb
push
adc
add
or
insb
and
nop
xor
ss
dec
xchg
gs
dec
mov
inc
dec
movsb
mov
nop
xor
or
es
mov
jge
push
enter
push
std
sbb
push
ja
das
push
out
std
xor
pop
outsl
cmp
adc
mov
out
xchg
mov
mov
jb
adcb
test
clc
add
cmpb
movsl
sbb
mov
ljmp
rcrb
push
decl
aaa
inc
jnp
inc
cmp
add
fcompl
push
sbb
aam
inc
testb
jle
inc
inc
lahf
mov
push
test
ss
add
lahf
dec
insb
cmpl
push
popa
outsl
fdivrl
shl
arpl
sub
mov
and
int3
mov
mov
cwtl
add
xchg
pop
sub
mov
js
mov
faddl
test
and
sub
ss
test
xor
stos
fiadds
mov
aad
cltd
sbb
icebp
clc
inc
push
sbb
mov
int
scas
mov
pusha
leave
mov
inc
repz
roll
jp
xor
sub
sbb
adc
cmp
int3
cmp
test
push
sbb
sbb
inc
cmp
jae
add
push
test
cltd
mov
xorb
push
fsubp
pop
dec
int3
aam
push
imul
addr16
in
pop
jmp
outsb
pop
sub
or
pop
lret
loop
mov
fs
bound
pop
xchg
mov
lock
rcrl
push
fimull
sar
jmp
aam
and
pusha
mov
std
mov
cmp
loop
push
inc
mov
icebp
xchg
or
jp
movsl
mov
aas
call
gs
mov
pop
mov
push
test
repnz
adc
lods
mov
rclb
ficompl
cmp
lret
pop
shl
int
call
mov
pushw
xchg
lret
nop
imul
mov
push
fsubrs
test
adc
sbb
cwtl
sub
jge
rorb
sbb
fcoml
rclb
mov
test
xor
loope
int
dec
cmpl
xor
cltd
bound
loop
sub
ret
ret
and
or
jge
sub
and
int
movsb
mov
js
cmp
sahf
dec
icebp
negb
call
fs
xor
clc
xor
xchg
mov
test
sbb
dec
add
bound
mov
std
push
sub
sub
xor
aaa
das
push
mov
scas
sti
xchg
test
cli
xchg
push
sbb
sub
mov
cld
jne
cltd
lds
movsb
lret
xchg
inc
es
mov
das
lret
adc
in
loopne
cwtl
out
arpl
mov
enter
jbe
cmp
cmpsl
inc
add
jae
xor
das
push
gs
cli
call
adc
test
iret
subb
ss
sahf
dec
icebp
xor
leave
pop
rep
cmc
cld
xchg
movb
cmp
mov
xchg
sub
inc
mov
or
mov
pusha
and
dec
incl
inc
orb
xor
inc
cmp
adcl
add
mov
aas
stos
in
sbb
or
fildl
mov
orl
ss
push
mov
outsl
push
push
inc
jne
push
xlat
sbb
adc
push
mov
insb
sub
mov
push
pusha
dec
cmp
jmp
dec
cmpsl
inc
mov
lea
sti
testb
pop
out
call
lcall
mov
mov
sub
mov
loopne
add
add
push
add
mov
mov
push
hlt
outsb
negl
push
push
sti
xchg
ljmp
inc
aam
fcmovbe
jb
ret
in
dec
push
popf
inc
ljmp
mov
dec
inc
test
test
xor
insb
dec
lds
ds
dec
out
int
shr
or
mov
inc
push
mov
mov
movsb
xor
imulb
inc
jae
cmpsb
cs
inc
mov
sbb
xor
ret
sbb
jae
inc
inc
cltd
jle
das
sbb
inc
movl
imul
test
subl
ljmp
mov
mov
and
cmp
inc
jle
push
ficomps
jmp
data16
sbb
pusha
cmp
or
and
repz
inc
int3
std
push
pop
or
jne
push
adc
xchg
lret
pop
inc
cs
inc
mov
cmp
fadds
cli
cmp
or
xchg
cmp
aad
pop
imul
jle
mov
imul
in
rcll
lret
push
xchg
pop
sub
bnd
or
in
ret
ds
je
mov
leave
pop
xor
loop
fcoms
sub
jnp
jge
pop
pushf
adcb
mov
aad
dec
sub
push
xchg
arpl
arpl
inc
fcmovbe
jne
xor
pop
sub
clc
sbb
shl
repz
cmp
hlt
pop
add
pop
adc
inc
in
adc
addb
inc
cmc
dec
sahf
jecxz
clc
out
lcall
fdivr
je
sub
xchg
pop
mov
sub
mov
or
outsb
mov
push
add
sbbb
arpl
imulb
sar
dec
fsub
inc
cmc
scas
movsl
push
imul
out
dec
mov
fistpll
andl
dec
xchg
pop
in
inc
inc
mov
adcl
push
clc
aas
pusha
aaa
cltd
imulb
int3
dec
fcomi
push
flds
hlt
out
adc
sarl
sub
sti
int3
sbb
sub
and
fs
mov
ret
test
std
mov
and
sbb
sbb
adc
xchg
imul
mov
jge
sub
sbb
mov
aam
sbb
rorb
mov
cld
outsl
js
xchg
dec
and
jecxz
push
cmp
in
and
adc
jae
decb
cmp
push
lcall
scas
hlt
jge
stc
loop
pop
add
mov
aaa
adc
cmp
mov
mov
dec
add
clc
jge
sub
nop
inc
pop
inc
mov
es
lds
sbb
subb
hlt
and
into
dec
data16
lcall
sbb
ja
add
mov
lods
push
addb
jmp
sub
push
fisubrs
andb
xor
shlb
les
lcall
inc
mov
mov
in
add
xor
sahf
push
pop
outsl
pop
mov
xlat
push
cmp
inc
cmp
mov
xchg
fcompl
inc
rep
popf
int3
adc
aad
repnz
and
pop
gs
pop
fwait
and
pop
mov
into
sub
in
mov
fisubl
ss
sub
stos
stc
jno
jbe
sbb
out
add
sub
mov
dec
mov
or
enter
or
lcall
sbb
pop
dec
jbe
shr
adc
out
adc
data16
mov
rclb
cmp
inc
adc
push
imul
sub
gs
sbb
leave
xchg
mov
mov
push
cli
leave
cmp
pop
lret
movsb
pop
xor
sahf
inc
adc
lcall
dec
int3
in
out
xor
sahf
cmpb
sub
xor
mov
and
adc
adc
ds
in
sbb
inc
in
imul
in
sub
rcrl
leave
arpl
out
or
lods
data16
xchg
lahf
lcall
into
cmp
lds
xlat
inc
and
mov
push
das
sub
mov
out
cmp
dec
test
xchg
adc
mov
out
mov
hlt
out
movl
push
cmp
inc
test
push
adc
in
cltd
jbe
in
sti
movsl
push
xorb
add
jle
adc
add
xor
push
push
leave
outsb
xchg
fimuls
mov
push
dec
cmp
push
mov
cmp
sbb
notb
fwait
xchg
pop
cmp
ret
and
cltd
sub
push
jne
dec
mov
out
and
xchg
mov
icebp
xchg
sbb
lret
fnstsw
sbb
push
mov
je
adc
mov
shrb
fs
jae
sbb
scas
xor
sub
outsb
fwait
int3
out
pop
orl
scas
loope
packsswb
pop
negl
int
mov
cltd
cld
mov
or
inc
fwait
sarl
mov
jne
adc
sub
ret
push
sub
adc
and
loopne
xchg
push
xor
sbb
xor
inc
cltd
movsl
out
enter
stos
in
cmpsl
pop
pop
arpl
xchg
ret
pop
xorb
nop
cmpsb
mov
iret
and
dec
aas
xor
lahf
nop
and
icebp
nop
rcr
sub
call
sbb
fcmovu
and
push
mov
mov
mov
movsb
lods
scas
scas
lods
ja
adc
cmc
and
xchg
fcmovnu
testb
sub
ret
scas
xchg
jle
push
in
imul
test
andb
dec
test
stos
push
sub
leave
lahf
test
out
sub
mov
jo
ss
sub
flds
add
lock
xchg
das
jle
inc
ss
data16
mov
je
sbb
test
adc
mov
mov
push
sub
imul
pusha
mov
xor
mull
mulb
jmp
scas
movq
scas
testb
lods
lcall
inc
fcmovu
popa
xchg
pushf
or
int
mov
sub
mov
mov
addr16
jo
das
and
ja
lock
ja
sbb
dec
xor
and
and
mov
xor
or
jno
out
ret
mov
mov
mov
add
mov
mov
movsl
lock
inc
repnz
test
loop
mov
sbb
mov
shr
test
xor
dec
out
arpl
les
sub
mov
pop
int3
push
mov
repz
ljmp
hlt
es
lods
lods
loopne
inc
adc
and
enter
inc
push
imul
push
add
and
lods
adc
lds
push
mov
fwait
cmp
mov
mov
sub
insl
jg
push
mov
popa
sbb
add
mov
pop
add
addl
pop
add
hlt
test
lret
cmpsb
xor
ds
cmp
sbbl
jge
mov
dec
rcr
jp
and
xor
iret
jmp
sub
clc
sbb
lret
adc
mov
imul
in
xor
rcrb
movsb
add
cmp
sbb
mov
push
jmp
loopne
xor
stos
sbb
push
icebp
gs
bnd
mov
pop
rclb
push
push
push
mov
int
dec
xchg
inc
hlt
pop
dec
mov
add
ficomps
jnp
das
jl
dec
std
shlb
mov
rcrl
xor
dec
test
dec
arpl
ljmp
pop
pop
mov
or
int3
inc
out
adc
jae
dec
push
mov
mov
dec
lods
outsl
pop
add
cmpsb
and
jns
mov
sarl
xor
out
cmp
mov
pushf
inc
outsb
mov
fdiv
pop
xor
enter
pop
push
or
mov
add
jbe
cmp
inc
sub
fs
mov
or
lods
js
pop
idivb
and
adc
inc
sub
xchg
adc
sarb
jb
in
push
sub
mov
pop
xor
icebp
push
stc
out
push
nop
mov
xor
mov
js
inc
aad
pop
cmc
adc
xchg
jmp
xchg
les
sarl
or
test
rorl
cli
sub
push
push
mov
jle
imul
lods
add
loopne
imul
xor
fs
cwtl
or
jno
jbe
xchg
or
jle
cmp
test
stos
dec
cmp
xchg
dec
push
xor
daa
jmp
out
mov
enter
test
ficoms
or
insb
cmp
cmp
xchg
adc
mov
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
add
imul
mov
mov
mov
add
or
mov
mov
mov
add
xor
mov
mov
mov
add
and
mov
mov
mov
lea
mov
mov
mov
sub
add
mov
mov
xor
add
jne
mov
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
add
imul
mov
mov
mov
add
or
mov
mov
mov
add
xor
mov
mov
mov
add
and
mov
mov
mov
lea
mov
mov
mov
sub
add
mov
mov
xor
add
jne
mov
mov
xor
lea
mov
mov
xor
add
jne
jmp
mov
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
add
imul
mov
mov
mov
add
or
mov
mov
mov
add
xor
mov
mov
mov
add
and
mov
mov
mov
lea
mov
mov
mov
sub
add
mov
mov
xor
add
jne
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
add
imul
mov
mov
mov
add
or
mov
mov
mov
add
xor
mov
mov
mov
add
and
mov
mov
mov
jmp
enter
sarb
add
sbbl
mov
jge
pop
jp
outsb
test
push
jo
lea
sbb
in
sbbl
addw
imul
push
lahf
cld
ljmp
dec
push
fld
lret
inc
es
xorb
and
fnstenv
jp
xorl
jp
repz
iret
test
xor
cld
lahf
enter
adc
jmp
sub
push
cmp
cmp
sub
inc
data16
dec
cmp
dec
pop
mov
pushf
les
cli
fsts
mov
insb
cli
in
lret
iret
inc
jge
or
mov
or
cli
mov
icebp
loop
pop
sbb
aas
xor
into
inc
shll
iret
je
inc
mov
cmp
shlb
mov
mov
mov
scas
fadd
rol
imul
test
sarl
sahf
inc
adc
mov
and
inc
sub
aaa
outsb
cli
js
pushf
and
ret
sbb
add
adc
mov
aad
adc
ljmp
mov
or
sub
int
adc
loopne
xor
add
pop
aaa
addr16
mov
mov
mov
mov
cli
insl
mov
jne
stc
lret
adc
dec
sub
fiaddl
push
xor
in
jo
mov
adc
out
mov
fisubrl
es
in
and
out
test
lahf
inc
lods
rclb
add
test
cmp
add
daa
sub
lret
inc
addb
xchg
loop
cwtl
lcall
lock
sbbb
xlat
mov
js
out
ds
push
cwtl
or
push
mov
mov
out
jae
adc
mov
js
dec
inc
mov
push
sbb
in
and
push
mov
xor
fsts
xor
pop
loope
sahf
xor
push
ret
xor
hlt
sbbl
cmpsl
sub
jns
push
pop
pop
and
mov
ret
cltd
xchg
addl
movsb
adc
push
push
pop
fdivrl
mov
sbb
jnp
rcrb
stos
pop
inc
cmc
push
jp
pop
mov
dec
mov
lea
imul
loope
dec
insb
shll
out
out
ljmp
stos
cmpsl
push
call
dec
aam
cwtl
jae
orb
stos
loop
fwait
jne
popa
push
repnz
fdivs
inc
sbb
pop
mov
aaa
movsb
jle
iret
loope
imul
push
jae
mov
ljmp
test
ret
sbb
fidivl
in
popf
enter
fsub
mov
push
pop
dec
cmp
xchg
pop
pop
mov
inc
cmpsb
imul
repz
mov
mov
ret
sub
jns
aas
das
pusha
and
ret
cmp
pop
jecxz
pushf
cmc
jbe
mov
fwait
add
xor
add
outsb
call
xchg
and
imul
sub
out
test
jmp
cmpsb
out
into
fdivrs
mov
lods
sub
jmp
adc
rcr
cmp
cs
or
push
ja
dec
mov
dec
push
stos
mov
adc
mull
inc
and
pop
or
push
mov
inc
cmp
xchg
rcr
pusha
mov
stos
inc
or
inc
cmpsb
leave
xchg
jae
hlt
xor
mov
sahf
enter
in
clc
sub
xor
repz
xchg
mov
xor
add
icebp
pop
jns
out
push
mov
aaa
xchg
mov
int
es
dec
fidivrs
xchg
sub
outsl
sarb
xor
mov
jecxz
sti
inc
loop
mov
pop
pop
and
fsts
aad
push
shlb
pop
repz
aam
stc
adc
test
scas
lcall
push
push
push
jl
arpl
popf
shll
dec
lods
lahf
insb
xchg
push
add
and
jae
lock
addr16
sub
ss
xor
cmpsb
push
jns
ficoms
mov
je
les
lea
sbb
mov
pop
pop
scas
xchg
fldl
ret
sahf
add
in
and
mov
cmp
rcrl
or
stos
popa
sub
sub
inc
lcall
pop
add
in
jmp
push
int
mov
cmp
push
ret
sbb
in
movsb
cmc
ror
rolb
cs
std
jnp
jno
sbb
shlb
dec
mov
sbb
push
sub
xchg
lock
mov
ret
in
lret
cmc
pushf
sbb
inc
loop
xchg
push
mov
test
cltd
cs
xor
mov
je
add
sbb
cltd
stc
cld
xchg
ror
mov
cmp
xchg
repz
inc
adcl
mov
push
loope
addr16
test
cwtl
push
jmp
jge
mov
adc
xor
in
or
addr16
in
or
sbb
jae
addr16
adcl
mov
scas
jbe
pop
rorl
dec
mulb
jmp
fdivp
jg
aam
mov
addr16
sub
shrl
ror
std
subl
lahf
mov
shl
outsl
lds
mov
xlat
popa
dec
push
roll
fbstp
cmp
mov
std
and
push
scas
imul
lret
test
dec
xchg
je
pop
idiv
or
jno
cmp
das
cmp
jp
jge
mov
int3
fisubrs
int
icebp
push
cltd
push
imul
notl
in
inc
and
dec
into
std
mov
aaa
daa
ss
inc
inc
pop
jnp
jnp
test
xor
jne
mov
sti
xchg
mov
cltd
dec
cmp
mov
popa
outsb
js
sahf
leave
jg
pop
mull
into
cmp
scas
and
mov
sub
mov
xchg
shrl
sahf
es
repnz
xor
mov
int3
push
mov
popa
jmp
xchg
pop
or
insb
mov
nop
rcll
fldenv
adcb
ss
out
sbb
arpl
imul
popa
push
mov
add
jp
cmp
aas
aaa
fs
jmp
nop
xor
mov
cmp
fisubrs
iret
cmc
pop
push
mov
mov
add
es
adc
xchg
or
sub
sbb
mov
inc
inc
frstor
dec
xchg
outsb
adc
sub
xchg
subl
xor
pusha
fistpl
sbb
mov
mov
ret
mov
xor
icebp
scas
aad
adc
xchg
sbb
faddl
into
rorl
mov
out
es
test
pop
adcl
cmc
sahf
mov
sti
lea
iret
arpl
add
enter
mov
out
aaa
call
jge
loop
aam
test
lcall
pushf
sbb
nop
outsb
pop
cmp
pushf
xor
out
xchg
mov
cmpsl
js
pop
xchg
pop
cltd
push
mov
jecxz
stc
and
dec
push
cmc
je
in
fmuls
cmpsl
push
in
xor
iret
mov
stos
xor
idivl
mov
pop
ffreep
jae
popf
popa
dec
pop
and
lods
in
dec
call
loop
scas
fs
je
cmp
dec
sub
daa
xchg
mov
push
xor
cmp
bound
jo
dec
xor
pop
xlat
andb
es
sbb
nop
jmp
test
push
aad
adc
ljmp
lea
xchg
popf
addr16
lds
sbb
mov
adc
jnp
in
mov
jp
cmpsl
enter
cwtl
push
outsl
lods
mov
push
sub
push
je
xchg
jb
testl
xchg
mov
loopne
lock
addr16
mov
cli
push
jp
lods
roll
addl
dec
les
mov
push
out
mov
cmp
mov
jg
data16
test
imul
call
lahf
sub
imul
in
shrl
movsb
or
ret
or
xlat
or
mov
loop
sahf
lods
jle
pop
push
mov
pop
pop
sub
jbe
lock
les
dec
pop
inc
dec
idivb
jbe
dec
aaa
inc
push
nop
dec
xchg
clc
lea
mov
cli
je
cs
sub
sti
out
dec
je
shrl
mov
jmp
movsl
lods
loopne
out
mov
sub
lea
insb
mov
inc
notb
cmp
adc
mov
ficoml
cli
fstl
lods
int3
dec
fwait
adc
loope
adc
cwtl
shr
push
aas
xor
ret
pop
pop
adc
fidivs
stos
dec
xchg
ss
lcall
mov
rol
jb
mov
lea
pop
push
inc
adc
js
stc
jne
aam
test
nop
lcall
ljmp
add
dec
sbb
xchg
les
aam
mov
ret
push
push
jnp
mov
mov
jno,pt
or
pop
push
cmp
inc
out
sahf
pop
pop
ds
shrl
jb
mov
sbb
mov
adcb
stc
sub
cmpsb
mov
cs
and
rclb
lret
mov
jl
adc
mov
or
cmp
fstpl
lret
rorl
xor
loope
pop
daa
jb
jne
xor
dec
out
insl
repnz
aad
gs
mov
lret
adc
adc
mov
aaa
sti
add
pusha
dec
cmpsl
sub
and
inc
push
cmp
xchg
push
mov
or
mov
test
mov
cmp
flds
int3
clc
imul
in
lock
push
shl
add
nop
xchg
mov
mov
mov
xor
inc
les
inc
repnz
sub
mov
loop
dec
je
add
test
pop
std
push
in
or
lret
xchg
xlat
pusha
imull
push
lret
inc
inc
loop
mov
shr
leave
cmp
push
inc
sub
daa
push
adc
push
dec
lds
icebp
shll
pop
lock
sub
push
fisttps
jmp
lret
pop
adc
ljmp
xchg
and
popf
dec
das
push
push
cmp
sbb
mov
inc
into
mov
and
add
lahf
lahf
sahf
and
jmp
mov
lcall
fstpl
sbb
pusha
push
push
xchg
rcrl
cltd
push
pusha
push
xchg
push
gs
movsb
icebp
and
xlat
addr16
sub
mov
mov
or
std
jb
les
scas
push
ja
fwait
mov
sub
jmp
cld
xchg
nop
xchg
aad
dec
call
les
out
mov
test
sti
call
fisttpl
stos
jns
test
pop
mov
ret
mov
jmp
adc
outsl
icebp
imul
xor
xor
mov
mov
cmp
aas
cmp
mov
fidivs
sti
cmp
mov
cld
dec
andb
jno
fsubl
fmul
addr16
filds
test
rcr
imul
lcall
mov
pop
cmp
mov
imul
xchg
cwtl
nop
rorl
fisubs
lcall
adc
mov
inc
push
notl
faddl
in
push
lods
daa
loopne
mov
loopne
shlb
call
jg
movsb
in
jnp
push
xchg
push
test
aas
stc
gs
jecxz
pop
int3
push
shll
popf
imul
or
or
xchg
or
cmp
mov
lret
xchg
add
mov
pop
sbb
into
push
dec
pop
cmc
popa
adc
mov
pop
cwtl
pop
and
or
add
ss
add
insb
bound
mov
in
pop
jo
xchg
pop
sbb
add
xor
ds
mov
fldenv
add
std
jno
mov
movl
jns
stos
mov
fwait
addb
pop
int
les
add
jno
pop
je
lret
cltd
pop
or
out
jecxz
aaa
lahf
mov
pushf
xor
or
icebp
repnz
cs
adc
fcoml
mov
jbe
mov
lret
outsl
fsubrp
insb
jno
je
mov
fwait
les
aas
jl
adc
das
fnstsw
sbb
imul
gs
scas
aaa
test
ret
fadd
adc
outsb
jl
cmp
ret
push
push
mulb
sbb
rolb
fisubl
add
xchg
add
mov
inc
test
pop
jmp
jns
out
movsb
adc
sarl
jg
xchg
dec
popa
push
outsb
aam
stc
in
imul
xchg
push
fsts
add
rorb
aas
pop
mov
mov
ret
fstl
shrl
call
test
mov
into
notl
push
lret
pop
dec
xchg
cmpsb
fnstenv
cmp
mov
add
pusha
arpl
add
xchg
mov
mov
test
lock
movsl
stos
pop
repz
sbb
xor
inc
das
xchg
sub
lret
xor
pop
shll
xor
sub
arpl
inc
repnz
movsl
jmp
test
lcall
int3
sub
sub
push
add
cs
mov
sahf
mov
inc
adc
mov
pop
xchg
insl
jns
cltd
daa
and
fnsave
xor
sbb
loop
mov
jae
or
std
mov
vmwrite
fidivrl
adc
sbb
popa
repnz
stos
jg
lods
cmp
mov
stc
shll
cmpsb
lock
jne
add
sub
cltd
push
or
or
pushf
andb
das
movl
icebp
lahf
adc
jl
cmpsl
sbb
das
pop
pop
stc
sub
inc
jno
fnstcw
jae
jne
and
jg
test
xchg
mov
mov
sub
js
int
lret
pop
xor
gs
sub
xor
push
aad
cs
aam
dec
out
push
mov
add
movsl
xchg
adcl
sahf
mov
sub
push
sub
js
adc
dec
mov
mov
stos
loopne
imul
in
lret
jne
jae
addr16
ss
leave
iret
stc
mov
fnsave
push
sti
sub
push
in
hlt
ja
xor
pop
jae
scas
pop
sahf
mov
mov
xor
push
int
mov
sub
sbb
mov
and
lods
lock
lea
adc
in
pop
inc
icebp
xchg
sar
cld
repnz
aam
ret
scas
jmp
mov
in
out
nop
cltd
fwait
sbb
pop
mov
cmp
jo
out
xchg
pop
or
fstpl
test
test
mov
ss
cli
cmpsb
adc
movsl
lods
leave
xor
ss
push
push
dec
sub
push
mov
je
add
xchg
jmp
jo
imul
dec
pop
cmp
imul
ljmp
enter
ss
adc
mov
or
pop
je
dec
inc
xchg
shrl
stos
xchg
adc
ds
sbb
aam
mov
or
and
stc
fnsave
jmp
aam
clc
imul
arpl
bound
lods
push
fisttpl
lock
clc
pop
mov
das
or
js
enter
cmova
dec
push
loope
push
ret
xchg
ret
or
xchg
fdivrl
fxtract
loope
into
xor
cmc
pop
add
jo
mov
jbe
xchg
dec
rolb
inc
test
or
pushf
aad
sub
in
mov
or
iret
bound
cmp
add
imul
mov
loop
lds
or
loope
mov
es
xchg
pop
push
hlt
pop
cmp
cmpsb
test
or
pusha
lcall
mov
rcll
out
dec
cmp
jmp
aas
fcmovbe
cmp
lods
dec
out
cmp
mov
jbe
popa
inc
adc
lods
mov
sahf
cld
xchg
dec
mov
dec
enter
orl
mov
mov
mov
or
and
lds
adc
xchg
rclb
jnp
adc
lret
adc
push
aam
mov
or
xlat
movsb
xchg
jnp
les
daa
cld
stos
mov
mov
jb
enter
aas
sahf
push
fsubrs
lahf
out
ficomps
push
mov
mov
loope
or
mov
daa
sarl
push
shrl
mov
fnstcw
inc
or
mov
loopne
rcl
jb
out
xorb
push
pop
mov
adc
xchg
ret
jp
arpl
sbb
and
jbe
jmp
sahf
xchg
fdivl
fdivrs
and
push
xor
xor
mov
push
add
dec
shlb
xlat
repnz
orl
cmpsl
cmp
cmovnp
test
sahf
outsl
adc
adc
inc
push
and
sub
mov
jb
stos
xlat
enter
or
ds
popa
xchg
shrl
sub
or
addr16
imul
repnz
pushl
or
les
jecxz
mov
scas
ret
test
lahf
and
mov
mov
jge
sbb
sarb
jo
push
sbb
movsl
cmpsb
xchg
cs
mov
jnp
cltd
mov
inc
jns
or
shlb
dec
int3
xor
dec
adc
test
sbb
cs
inc
nop
and
dec
push
stc
movsl
mov
cmp
jg
and
mov
dec
push
popa
mov
pop
sbb
mov
daa
ja
insb
scas
ja
lea
mov
int
lret
xor
scas
mov
aaa
in
cmp
popa
xchg
xlat
pusha
pop
lret
add
mov
scas
pop
scas
or
scas
push
xchg
leave
push
out
pusha
sbb
loopne
mov
adc
loop
subl
frstor
stc
or
rorb
inc
xlat
sub
cmpsl
loopne
divl
inc
std
rcr
daa
mov
repz
adc
add
mov
fs
or
push
movsb
mov
test
pop
imul
mov
clc
gs
mov
xor
and
inc
jb
lcall
test
scas
push
mov
xor
mov
icebp
adc
inc
xlat
fdivr
or
dec
call
popf
std
fcomi
sub
dec
addb
iret
fs
mov
mov
rolb
jnp
lods
into
ficoms
test
imul
bound
cmp
push
mov
mov
cmpsb
cwtl
adc
inc
xor
add
dec
mov
and
cmpsl
inc
dec
mulb
lahf
scas
mov
push
into
out
adc
and
popa
repz
enter
psraw
dec
mov
lea
test
ss
sar
imul
xor
dec
ljmp
jnp
sub
lods
dec
cmp
dec
and
cmp
outsl
fistpl
sti
fisubs
lock
call
and
in
cltd
jae
pusha
mov
outsb
imul
scas
mov
daa
cmp
insl
cmp
ror
push
addl
jo
xchg
cmp
xorl
or
xchg
mov
cmp
jno
xchg
push
cmpsb
jg
enter
push
dec
jg
aam
mov
add
mov
or
and
mov
cs
cwtl
mov
icebp
sbb
hlt
repnz
sub
cltd
push
and
test
mov
in
mov
rcl
sti
lods
fisttpll
push
xchg
es
push
mov
in
mov
mov
jp
sub
sbbl
xchg
lcall
and
mov
test
repz
rorl
xor
mov
rcll
imul
push
mov
popf
insb
fidivs
es
pop
push
mov
rcll
push
xchg
das
outsb
ss
mov
call
sbb
clc
stc
adc
mov
mov
incb
mov
mov
fbstp
cmp
stos
fdivs
ss
popf
or
in
dec
sub
mov
iret
jb
sarb
gs
and
loop
fimuls
rolb
and
jecxz
cmp
dec
pusha
jns
pop
inc
add
mov
xlat
not
aad
mov
sbb
ret
xor
mov
mov
add
dec
pop
fs
and
fsubrp
in
rol
mov
gs
leave
imul
or
add
enter
repz
ss
dec
sbb
add
mov
jnp
daa
xor
mov
inc
out
add
int
in
call
push
ljmp
sub
and
sub
data16
or
movsl
xor
stc
gs
adc
sub
sbb
and
push
mov
lahf
in
pop
repz
aad
dec
out
mov
sarb
pop
pop
fnstsw
lcall
ror
data16
jge
pop
es
xlat
imul
jge
aaa
lea
xchg
insl
rcrl
cmp
adc
dec
movsl
jno
jne
pop
fwait
jmp
call
leave
mov
jnp
xchg
movsb
jp
or
imul
sub
add
ljmp
roll
xor
les
and
mov
pop
fnstcw
xchg
fwait
jecxz
arpl
jbe
sbb
aam
inc
mov
mov
xchg
xchg
dec
fisubs
add
xchg
nop
push
and
inc
adc
hlt
fsts
add
out
lods
mov
cs
or
push
sbb
rolb
std
xor
or
insl
mov
addr16
movsb
jle
mov
cmc
dec
add
ds
pop
push
push
mov
daa
enter
inc
xchg
std
out
or
adc
mov
fmuls
lahf
jae
or
mov
inc
jl
adc
and
cmpsb
cmpsl
arpl
dec
scas
andl
or
dec
mov
or
and
lods
mov
mov
jl
jmp
push
and
mov
push
das
mov
sbb
stc
add
lods
nop
ds
and
rorl
mulb
push
mov
dec
sbb
or
or
test
rcrl
rorl
push
mov
orb
sub
pop
imul
pop
jno
jns
or
int
bound
scas
inc
cwtl
push
or
xlat
sbb
ret
js
push
aad
clc
popa
pop
cmp
jns
fs
sbb
jmp
cmp
pop
aas
sbb
pusha
adc
movb
jnp
dec
stc
xor
xchg
fstps
sbb
daa
loopne
push
shrl
shrl
dec
cmp
roll
or
test
pop
cwtl
fsubs
xchg
outsl
rorb
push
ja
cmp
call
leave
neg
ffreep
in
sbb
subb
std
inc
jae
jns
xchg
push
out
je
mov
jae
and
mov
push
mov
mov
inc
out
inc
inc
xchg
jae
inc
mov
out
dec
add
inc
pop
loop
sub
push
addb
imul
scas
dec
jo
sarb
add
jno
cld
and
outsl
js
in
pop
ret
imul
pusha
cmp
mov
repz
mov
das
mov
rorl
addr16
adc
bound
repnz
iret
dec
test
cmp
mov
mov
sahf
cmp
mov
les
fsubrs
out
mov
out
jg
sub
sbb
push
repz
xchg
addr16
loopne
xlat
loope
in
lcall
fdivl
mov
xor
xchg
sub
inc
sbb
cwtl
aaa
rorb
jae
addr16
icebp
sub
les
pusha
pop
pushl
clc
fcompl
and
adc
dec
clc
dec
bound
fwait
lret
repnz
add
lds
and
xlat
cwtl
mov
jmp
in
dec
repz
insb
xchg
test
inc
sub
fcompl
lds
hlt
and
mov
adc
and
into
xchg
repnz
adc
jbe
mov
push
mov
stos
and
ja
leave
ljmp
mov
mov
addb
cmp
sub
xchg
mov
inc
xchg
popa
xlat
sbb
lcall
pop
int
xchg
rcll
fisubl
mov
pop
cmp
hlt
cmp
and
xor
pop
std
jno
je
scas
ss
and
pop
adc
inc
jle
cmpsl
adc
out
gs
lcall
xchg
adc
sbb
hlt
repz
divb
fwait
lahf
arpl
cmpl
push
push
dec
jge
xchg
push
mov
inc
stc
shll
loopne
lcall
cmp
inc
and
jmp
xor
inc
fstl
lock
scas
sub
cmp
lahf
fistps
testb
lret
decl
pop
dec
jae
hlt
jns
mov
jg
fidivrs
inc
xor
xchg
mov
stc
mov
mov
jmp
jge,pn
mov
out
jg
mov
cld
jmp
rcr
adc
jne
ror
ret
fsubrs
sti
cmp
xchg
cmp
jb
cmp
call
fimuls
jmp
xchg
push
das
fcmovnu
jne
mov
sbb
outsb
scas
push
fs
dec
pop
add
stc
sbb
inc
xchg
cld
movsb
orl
fcmovne
sub
mov
xchg
rcl
push
or
push
xchg
pop
adc
cwtl
outsl
out
ret
notb
xchg
scas
push
jbe
push
sti
jae
pop
scas
sti
ss
stos
add
outsl
insl
ds
cwtl
push
loope
mov
mov
lods
es
add
pusha
mov
mov
enter
ljmp
shrl
mov
in
xor
divl
mov
incb
movsl
imul
test
pop
inc
mov
sbb
decl
pop
rclb
cmp
out
in
pusha
push
iret
mov
lcall
loop
jl
ret
lods
add
cli
jae
mov
adc
cmp
or
lods
cmpsl
jnp
cs
pushf
push
arpl
pop
jge
ret
ds
mov
sbb
xor
and
std
js
and
test
stc
sbb
call
rcll
insl
mov
in
fsts
xchg
and
adc
pop
dec
jmp
pop
dec
aad
shrb
movsl
addr16
sbb
cmp
push
int3
cli
outsl
push
adc
int3
dec
gs
dec
add
xor
ljmp
xchg
pop
insl
add
sub
xor
add
lock
je
ja
sbb
inc
add
cmpsb
mov
ret
sub
insb
out
fidivrl
and
xchg
jno
adc
fistpl
sbb
and
sti
cld
jl
mov
add
stos
jp
ret
addr16
inc
jp
out
sub
cmp
dec
cltd
xor
xor
push
mov
dec
dec
cmp
inc
cs
sbb
dec
imul
add
mov
xor
mov
mov
std
pop
jne
sarl
and
ret
pop
xor
data16
mov
sub
scas
ficompl
mov
jb
pop
cmp
mov
lods
into
sar
adc
test
insb
daa
mov
ja
mov
push
sbb
dec
ljmp
rolb
adc
inc
cmpb
add
push
xchg
ds
adc
aaa
push
popf
xlat
mov
je
stos
popa
xchg
rcrl
push
out
xchg
dec
mov
sub
mov
imul
movsb
aaa
sti
lea
inc
hlt
lcall
cmp
out
jns
fs
fstl
inc
hlt
orl
cs
fwait
fwait
xchg
pop
lret
cs
leave
insl
mov
and
sub
pop
xor
out
gs
testb
ja
sub
and
lds
adc
mov
dec
bound
mov
dec
not
scas
cmp
add
shlb
mov
jmp
cwtl
aam
jge
push
pop
mov
mov
pop
inc
ret
int
movsb
jecxz
sbb
lock
cld
dec
add
pop
dec
neg
dec
mov
pop
cmpsl
leave
pop
push
and
mov
or
inc
jb
jle
sub
pop
bound
movsb
rol
inc
into
mov
pushf
xchg
adc
inc
enter
dec
ljmp
fwait
jb
or
imul
push
cmpsb
lds
adc
pop
jmp
mov
xchg
xorl
inc
push
in
xchg
dec
mov
sahf
aas
lods
cmp
and
test
in
mov
mov
push
jle
aaa
insb
cmp
jns
popl
push
xchg
sahf
stos
or
dec
jg
daa
cs
mov
mov
js
fidivrs
nop
push
pop
addr16
js
iret
mov
inc
dec
aam
in
fstpl
mov
test
cmp
dec
xlat
cmc
dec
cmp
pop
and
or
xor
sbb
fnstsw
imul
insb
jmp
jp
leave
mov
int
in
aam
push
mov
sbb
fwait
mov
arpl
pop
ss
inc
xor
fwait
push
jne
ret
mov
hlt
dec
mov
xchg
push
cs
rolb
sub
int3
add
shll
xchg
push
jp
pusha
jge
jle
push
dec
sub
ds
loope
adc
jb
int
push
dec
ss
fidivl
xor
cmp
aad
pop
test
das
into
dec
popa
mov
dec
jg
push
adc
popf
and
cmp
aam
and
iret
inc
cs
cmp
push
push
mov
cmp
je
push
ja
mov
lods
xlat
aam
jge
je
std
inc
cmp
jge
mov
push
inc
xor
xchg
adc
repnz
imul
out
adc
clc
ret
dec
add
xchg
mov
stos
inc
movsl
sub
sti
cmp
cmc
fildll
loope
stos
add
pop
and
mov
jmp
sub
cmp
data16
int
jmp
sub
insl
fbstp
mov
adc
ret
dec
adc
pop
xor
xchg
xchg
xchg
icebp
gs
dec
idivl
fcmovbe
int3
push
pop
lahf
mov
xchg
xchg
pop
stos
int3
stc
lods
pop
sub
in
icebp
jbe
mov
mov
imull
in
in
loopne
je
lds
gs
popa
xor
sub
or
pop
sub
lahf
out
lcall
sahf
into
shl
call
cmp
inc
pop
sub
mov
mov
int3
int3
in
pop
mov
pusha
lds
pushf
and
fidivrl
mov
dec
imulb
mov
enter
cli
push
ficomps
sahf
loope
test
add
xor
xchg
add
repz
inc
push
ret
nop
ret
fs
int
scas
lea
mov
mov
mov
sub
add
mov
mov
xor
add
jne
mov
xor
mov
add
mov
pop
pop
pop
leave
ret
push
mov
sub
or
push
andl
jmp
xor
or
inc
mov
cmpl
jae
cmpl
jbe
jmp
pushl
push
call
jmp
push
mov
movl
cmpl
je
cmpl
jl
jmp
call
mov
dec
mov
jmp
mov
xor
add
mov
sub
xor
mov
notl
mov
andl
sub
movl
movl
xor
mov
mov
add
mov
movl
cmpl
je
cmpl
jge
jmp
pushl
call
xor
xor
dec
mov
jmp
sub
add
mov
sub
xorl
mov
adc
mov
mov
inc
mov
andl
mov
inc
mov
cmpl
jb
jmp
push
push
pushl
push
pushl
pushl
call
cmpl
jb
sub
movl
mov
orl
sbb
mov
xor
or
mov
sub
or
mov
sub
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jle
jmp
push
call
cmpl
jne
mov
inc
mov
jmp
mov
orl
mov
mov
sub
mov
orl
mov
mov
sub
mov
mov
mov
mov
xor
mov
add
or
mov
mov
mov
sub
mov
orl
mov
xor
add
push
mov
xor
add
push
mov
xor
add
push
lea
push
pushl
pushl
call
test
je
lea
push
mov
jmp
fs
dec
mov
movsb
jnp
rol
aaa
lret
cmp
jp
pop
jp
mov
dec
leave
xorb
cmpsb
inc
push
arpl
push
cmp
cmc
pop
pop
leave
or
imul
mov
and
or
sbb
sbb
or
push
call
stc
pop
shlb
inc
imul
cld
mov
mov
jne
inc
lcall
mov
mov
lahf
frstor
mov
mov
dec
mov
jle
jecxz
pop
test
mov
and
out
gs
pop
sbb
inc
aas
sarb
movsb
ljmp
push
mov
pop
stos
push
mov
fisttps
enter
fldt
mov
sarb
mov
lods
mov
lret
push
fst
inc
cmp
pop
fwait
shrb
jg
jae
aas
cmpsb
mov
xchg
sbb
sbb
adc
jbe
aad
dec
mov
lods
mov
mov
in
repnz
push
pushf
mov
and
or
push
fisttps
xor
pop
sahf
cli
insl
pop
cwtl
imul
mov
jne
xchg
rclb
ljmp
mov
or
addr16
adc
and
push
icebp
mov
cmpsb
adcl
popa
fs
call
enter
imul
ja
scas
mov
pushf
in
push
nop
ds
inc
sub
fimull
les
jl
je
gs
testl
fldenv
jmp
jns
in
push
push
lret
cwtl
and
jno
inc
inc
jmp
dec
mov
arpl
mov
cmp
dec
int
pop
scas
dec
ss
fyl2x
leave
and
pop
adc
dec
pop
mov
push
push
dec
cwtl
dec
daa
ljmp
push
dec
rorb
inc
push
scas
mov
or
xchg
rcr
loopne
arpl
lcall
pop
and
es
jnp
push
push
lcall
push
sub
mov
divl
pop
sub
clc
mov
sub
imul
ja
popf
push
jecxz
or
xor
jno
inc
pop
xchg
sbb
mov
push
mov
nop
add
jo
push
into
fnstsw
or
mov
fsubrs
cmpsl
xchg
xor
push
stos
xor
imul
fisubrl
test
sub
lods
add
mov
fwait
adc
js
dec
fimuls
jmpw
packssdw
sub
push
movsl
data16
jp
fadds
xabort
xor
pop
xchg
daa
adc
push
sahf
pushf
pop
xchg
test
pushf
xor
in
in
mov
or
daa
mov
stos
push
stc
dec
add
cwtl
xchg
pop
pop
repnz
mov
jecxz
xor
push
and
push
orl
stos
mov
xchg
hlt
adc
and
push
clc
roll
pop
sub
jp
mov
lret
jp
inc
mov
aas
je
gs
dec
and
mov
fstps
pop
mov
cli
mov
fldcw
data16
lea
jp
sub
push
xlat
mov
push
mov
dec
shll
mov
js
adc
ljmp
inc
and
test
std
sbb
inc
call
call
jg
scas
xorb
je
outsb
dec
or
scas
daa
mov
aaa
adc
fs
xchg
adc
xchg
add
cmc
fs
jno
push
test
daa
push
jo
in
xchg
pop
call
inc
adc
rolb
xor
nop
inc
shl
fcoms
aam
jns
divl
stc
jne
pop
sahf
mov
loop
xor
rorb
jle
and
inc
orl
pop
int3
inc
insl
imul
repz
cmp
inc
dec
add
pop
xchg
pop
mov
pop
stc
jne
out
les
push
sbb
and
jne
cld
in
push
cld
enter
das
dec
cwtl
cld
xor
jno
shll
lret
pop
pop
inc
sbb
mov
fwait
cmp
adc
pop
test
jle
lock
decb
and
push
push
jg
das
jne
xchg
movsl
fwait
mov
repz
jmp
inc
cltd
sbb
sahf
aam
xor
xchg
add
jae
push
jle
lret
loope
mov
inc
adc
cmpsl
rcll
sbb
add
lds
test
jle
in
push
cwtl
fsubrs
lea
push
movsb
loopne
imul
clc
in
repnz
cmp
test
leave
mov
mov
adc
outsb
rorl
cmp
inc
fld
cltd
arpl
mov
gs
mov
mov
dec
insb
nop
outsb
or
or
cmp
mov
xchg
xchg
out
add
enter
mov
mov
sub
pop
aam
mov
psllq
bound
scas
iret
xor
loopne
cmpb
or
mov
int3
xchg
sbb
sbb
pop
xlat
jg
sub
in
push
insl
cmp
push
in
cmc
push
adc
loopne
cmp
frstor
xchg
cmp
or
cli
sub
mov
push
scas
movsl
test
in
and
cmc
nop
es
mov
les
pop
dec
pop
fbld
push
in
popf
adc
ficoms
mov
xchg
jmp
mov
jno
loopne
push
ret
sahf
xor
pop
int
iret
dec
aas
add
dec
mov
pop
lods
addr16
ja
adc
int3
add
and
dec
dec
adc
jo
mov
jmp
xor
jo
inc
add
clc
icebp
cmpsb
es
hlt
and
cmp
fmuls
fdivl
fistpl
shl
dec
js
push
dec
xchg
sbb
pop
imul
or
mov
xor
push
clc
jg
stos
or
lret
repz
xchg
jmp
dec
out
addb
sti
push
aam
inc
inc
scas
cmpsl
cmp
subb
mov
dec
ds
fadds
mov
in
outsl
mov
cmc
mov
aam
jae
lock
mov
insl
push
add
sub
or
enter
jmp
sub
gs
cmpsl
loopne
jg
xchg
mov
fsubs
sahf
loop
adc
test
pop
lret
lock
mov
mov
lods
cmovg
push
jb
sti
fwait
push
adc
movsl
das
add
stos
xorb
pusha
add
sbb
rcll
push
dec
bound
cmp
test
add
or
push
enter
iret
test
mov
pushf
xchg
sbb
pop
sbb
insb
inc
xchg
xor
loope
pop
lods
pop
rcr
or
push
cmp
shrl
sub
je
insb
test
lods
subl
mov
mov
pop
mov
mov
jmp
hlt
pop
aam
mov
xchg
mov
cmpsl
xlat
popf
insb
mov
loopne
cmp
push
fbstp
jle
jo
shl
in
push
aaa
lds
xchg
std
push
outsb
push
xchg
cmp
dec
int3
push
push
mov
ret
out
ret
and
aad
xchg
push
loop
push
push
push
pop
and
xor
jmp
cmp
cltd
jbe
test
cmpsb
sbb
hlt
push
inc
aaa
mov
or
fnstsw
leave
jns
jbe
outsb
ja
test
pushf
int3
fdivs
push
pop
and
push
inc
pop
stos
push
stos
dec
xchg
sub
or
pop
mov
adc
dec
das
pop
cmp
dec
and
cli
int
or
adc
sarb
jecxz
insl
mov
inc
mov
lock
inc
sbb
mov
add
mov
insl
sbb
stc
xchg
mov
test
xchg
divb
scas
daa
ror
jge
pop
jecxz
leave
mov
adc
sub
arpl
mov
loope
in
and
jg
sarb
data16
or
mov
out
mov
fisubrs
outsb
fnstenv
sub
push
pop
cmp
js
jl
jno
push
sub
pop
sbb
int3
xchg
sub
jb
loope
je
fisttpll
pop
xchg
cmp
cmpsb
mov
push
mov
push
in
test
frstor
out
shl
mov
pop
rcrb
push
sbb
push
cmpb
loope
pusha
mov
ljmp
arpl
jns
cmp
add
pop
adc
xchg
push
sbb
daa
popf
loope
test
push
cmp
mov
and
jmp
xchg
push
cmpsb
cmp
mov
push
adcb
pop
fcoms
xchg
in
popa
das
mov
shrb
push
test
sarl
cmpsb
out
sbb
mov
aad
inc
fwait
push
jo
inc
cmp
enter
dec
nop
mov
out
sbb
mov
imul
je
cwtl
in
out
pop
add
and
pop
sahf
dec
xchg
daa
cmp
cltd
nop
lea
jl
daa
push
mov
add
jb
daa
push
test
adcl
push
pop
push
or
test
test
lcall
scas
add
in
pop
mov
lea
lcall
shll
jecxz
scas
inc
mov
inc
popa
push
repz
lcall
dec
sarb
std
pop
in
xchg
mov
and
sbbb
mov
inc
dec
mulb
bound
hlt
dec
cmp
push
sbb
mulb
inc
aam
mov
mov
aam
sbb
into
lea
cmpsb
test
arpl
imul
daa
mov
or
xor
push
jg
stos
movsb
push
mov
xchg
mov
xchg
in
test
mov
sub
lcall
call
add
mov
pop
pop
add
adc
jns
push
fdivrl
mov
stc
adc
in
sbb
daa
imul
mov
ret
add
ja
fdivr
jge
cwtl
shll
repnz
mov
jb
iret
add
cmp
shrl
jb
and
nop
mov
cmc
sbb
pop
inc
add
in
mov
mov
scas
inc
mull
sbb
mov
sbb
lahf
adc
daa
jecxz
jne
loopne
lds
dec
jne
in
xor
loop
cmp
notl
sub
or
push
and
lret
xor
cmpl
jbe
aaa
push
fs
and
mov
mov
push
or
movsb
inc
rcrl
jnp
push
je
or
decb
pop
mov
ja
fs
pop
mov
pop
mov
pop
pushl
jbe
mov
push
outsb
xor
xchg
or
test
push
sti
shll
xchg
push
mov
xorb
fs
popf
hlt
shr
jb
inc
add
rorl
xchg
push
or
adc
addr16
in
push
imul
les
sub
mov
jne
out
push
jae
out
pop
push
adc
inc
enter
and
dec
outsb
jae
insb
pop
sub
fiaddl
outsl
xchg
jmp
jg
mov
imul
pop
repz
or
call
lahf
pop
add
insb
cmp
push
adc
not
fcoml
sahf
mov
lret
mov
push
bound
jnp
add
adcb
les
jp
arpl
jns
dec
cmp
xchg
pusha
inc
pop
adc
adc
pop
out
xor
jge
sub
pop
aas
mov
into
pop
rclb
fnstcw
rolb
push
aaa
cli
pop
loopne
out
movsb
popa
add
dec
rcrl
jle
push
xor
xor
or
sbb
or
jle
out
neg
scas
pop
xor
mov
pop
rol
xorl
push
mov
push
xchg
sbb
insb
xor
lock
push
or
jecxz
jmp
aaa
nop
mov
clc
loope
jo
lock
lea
jg
rcrb
lahf
sbb
mov
int
rorb
add
aad
aam
jno
dec
mov
mov
push
push
or
jl
outsb
push
test
iret
dec
cli
lock
or
fidivrs
stc
sahf
je
cmpsl
jo
iret
mov
imul
enter
loop
loop
sbb
lcall
inc
push
fistpll
push
dec
and
push
mov
bound
jns
imul
lods
aad
icebp
decb
or
or
popl
cltd
and
dec
hlt
adc
call
cltd
lahf
repz
jne
daa
lds
inc
xor
in
xchg
mov
movsb
push
push
dec
sub
ljmp
xchg
sub
mov
mov
mov
sbb
xor
rorb
jl
jg
push
jmp
mov
cmp
pop
aam
jne
aas
pusha
movsb
add
or
fdivp
dec
adc
stc
insl
mov
sub
mov
mov
pop
test
inc
adc
or
jp
out
push
inc
fadds
hlt
jns
jnp
push
dec
iret
orl
das
stos
sbb
xor
or
mov
push
xor
lret
lock
push
dec
and
jae
sub
mov
add
inc
inc
jmp
aad
insb
push
push
mov
mov
jns
mov
das
ret
mov
popf
mov
cld
cltd
stos
lret
sbb
aas
clc
and
pop
pop
sbb
mov
jae
jns
insl
dec
stos
fmull
xchg
subb
out
push
fstps
ja
xor
xor
fstpl
cmc
jg
hlt
mov
sbb
clc
jl
adc
mov
in
push
push
xchg
pop
add
and
in
mov
scas
xor
ret
adc
xchg
mov
mov
out
incb
clc
js
rcrb
cmp
test
inc
in
jae
xor
cmp
mov
dec
jnp
xchg
addb
sbb
pop
add
fnstenv
jbe
push
psrlq
adc
lcall
stc
mov
pop
sub
xchg
jo
int
jno
fld1
mov
cmp
jge
xor
incl
hlt
mov
xor
in
pop
addr16
sub
ja,pt
stos
jmp
test
push
xchg
mov
stc
std
sarb
adc
xor
incb
push
out
mov
fstps
pop
pusha
fidivl
lret
jmp
mov
inc
sbb
loop
int
jge
nop
cwtl
cmp
sbb
jle
imul
dec
mov
dec
inc
fwait
outsb
mov
scas
ret
inc
loop
cmp
lret
adc
cmp
add
test
jmp
ja
addr16
inc
push
loopne
jbe
rcrl
in
clc
loop
cmp
test
or
xchg
shr
test
pop
push
bound
sbb
push
push
out
orl
rcrb
push
mov
sbbb
xchg
out
xor
or
or
push
test
pop
js
lret
in
jbe
jns
xchg
aad
mov
mov
hlt
adc
sub
xor
pop
jle
xchg
lds
sub
iret
leave
push
sti
push
pop
mov
jecxz
sbb
sbb
mov
add
outsb
mul
and
mov
gs
mov
inc
loop
scas
shll
in
flds
and
xor
xlat
loop
fst
ffree
pop
dec
add
imul
xchg
setp
push
add
ret
repnz
rcll
mov
mov
jns
js
dec
fildll
mov
ljmp
insb
jns
das
stc
sub
fcmovnu
sbb
les
adc
leave
popa
jb
cltd
lret
cmp
pop
inc
rol
jae
clc
aad
pop
das
cmpsb
xor
pop
cwtl
data16
xchg
mov
repnz
stos
add
fdivs
xor
sub
adc
ja
mov
pop
jo
movsb
xor
fcomp
sbb
inc
out
das
and
fbstp
mov
iret
leave
idivb
mov
pushl
js
xchg
and
sub
ffree
test
jge
aaa
mov
add
xchg
jo
in
nop
push
fidivl
inc
rolb
mov
sub
out
sahf
insb
dec
mov
arpl
cltd
push
push
pop
mov
in
cmc
jno
cmpsl
outsb
lcall
cmc
xchg
les
sub
inc
lods
js
sub
sahf
xchg
xchg
fldcw
pushf
pusha
push
sub
add
push
add
pop
push
dec
jecxz
sti
sbb
movsl
inc
mov
ror
sbb
test
sbb
xchg
rolb
in
rol
insb
dec
add
xor
or
sub
pop
jecxz
sbb
into
jno
lods
push
add
or
jo
push
xor
sbb
or
jno
mov
test
cmc
pop
cld
mov
ficoms
xorl
int3
div
lcall
jnp
ret
repz
fldenv
gs
dec
cmp
pop
gs
xchg
lods
push
or
or
adc
dec
xor
aam
xchg
cmp
hlt
rolb
xchg
add
fnstsw
dec
pop
test
xchg
sub
lods
inc
lods
cltd
insl
jae
inc
push
inc
xchg
inc
fdivl
mov
in
xor
cld
dec
push
or
mov
pushf
popa
cmp
sub
xchg
pop
fistpll
mov
push
xor
enter
jne
aad
sbb
fbstp
adc
mov
sbb
push
subb
mov
push
mov
add
addr16
fs
pop
pushf
lods
or
fsubl
sbb
test
mov
dec
mov
insl
aas
push
shrb
movsl
mov
cmp
call
notl
ret
pushf
pop
xor
add
xchg
or
imul
stos
icebp
jae
xor
sti
jp,pn
inc
and
or
rolb
imul
popa
rorb
cmc
push
scas
mov
mov
push
test
xor
sbb
sbb
dec
cmpsl
loop
bound
test
adc
inc
or
in
fmuls
lahf
xlat
rcl
adc
enter
mov
out
nop
ds
cmp
cmc
stc
leave
stc
ljmp
inc
mov
jg
jle
call
add
inc
cmp
into
aam
aam
push
divl
mov
aaa
and
jno
push
repz
sbb
pushf
sub
push
pop
enter
xchg
addr16
stos
xchg
movsb
fstpt
nop
je
add
ret
sub
jg
neg
jbe
jge
dec
ljmp
add
incb
test
cmpsl
scas
xchg
aam
mov
sub
cmc
insl
pop
and
or
inc
jnp
int
cmp
js
cmp
int
and
or
jg
in
test
xchg
bswap
xor
int
bound
mov
adc
cmp
xor
adc
rolb
cmpsb
fcomps
add
pop
or
pop
mov
or
mov
mov
ds
in
mov
rolb
icebp
cmp
test
fmul
lret
cs
mov
xor
adc
fisubl
push
rclb
cmp
call
testb
stos
adc
adc
sbb
bound
das
mov
ret
int
add
inc
divb
adc
jo
and
lods
mov
cltd
dec
sub
sarb
pop
loope
mov
lcall
sbb
or
daa
rorb
lahf
test
xor
sub
rorl
and
pop
and
insl
int
mov
fsubrp
shrl
add
sub
lcall
and
add
mov
gs
lods
test
movsl
insb
mov
cmp
cld
sub
push
lds
fsubr
fidivrs
dec
bound
adc
inc
in
mov
test
sub
enter
mov
mov
mov
sahf
aas
pushf
cmp
sbb
lock
cmp
and
dec
fidivl
push
testb
ror
hlt
or
fidivrl
and
adc
push
inc
aam
mov
aam
es
sub
scas
call
mov
ss
pusha
mov
and
jle
in
adc
and
lock
fcoml
inc
clc
cmc
mov
out
fwait
xor
aad
imul
sbb
mov
cs
and
cmpsb
lods
jecxz
sub
daa
scas
imul
dec
or
imul
mov
cmpsl
rorb
pop
dec
hlt
lcall
xchg
outsb
pop
push
mov
xor
dec
popf
mov
lock
adc
nop
sub
xlat
gs
sub
ss
xchg
pop
ret
add
repz
push
cltd
inc
push
mov
int3
idiv
adc
arpl
add
pop
jecxz
mov
scas
ja
mov
daa
xor
popf
push
pop
in
xchg
popa
lods
push
add
int
dec
stc
push
dec
bnd
add
fwait
mov
or
cld
sbb
mov
cli
out
jmp
or
add
or
divl
mov
sub
cmpsl
lods
jp
and
xchg
sbb
mov
aad
in
push
push
fwait
int3
lcall
aaa
push
les
xchg
mov
daa
hlt
test
jbe
mov
inc
lock
mov
shlb
fisttpl
jno
inc
or
add
push
sub
cwtl
pop
cmc
ja
dec
js
cmp
mov
xor
pop
mov
mov
int3
test
test
gs
mov
in
pop
call
outsl
lds
or
pop
cmc
jmp
mov
cmp
test
leave
add
outsl
sub
mov
mov
xor
loopne
adc
push
pusha
mov
out
jns
jle
and
mov
jno
mov
ret
xchg
into
je
cmp
add
mov
adc
orb
pushw
jmp
sbb
movsb
ret
add
mov
addr16
loope
jnp
ljmp
mov
loope
in
jmp
sub
sbbl
push
sbb
mov
loopne
xchg
out
push
jnp
iret
jecxz
cltd
cmc
push
ret
or
sub
or
in
lock
fs
jbe
push
cmp
cmpsl
dec
aad
adc
fs
fs
pop
sti
inc
inc
push
lahf
inc
push
xchg
mov
mov
mov
jl
dec
xor
jne
rorl
bound
xor
jnp
push
sti
lock
arpl
adc
jecxz
xchg
fldcw
and
in
jne
sub
fidivrs
popf
xchg
out
aam
lahf
lds
push
into
adcl
push
and
je
jmp
icebp
dec
enter
daa
sub
fstpl
mov
test
pop
adc
mov
sbb
aam
sbb
je
mov
das
xor
adc
inc
xchg
test
sbb
mov
sbb
push
repnz
adc
mov
mov
cli
jb
or
jle
adc
fcoms
lret
mov
adc
clc
and
lahf
inc
inc
fadd
aas
pop
sbb
outsb
fistpll
adc
out
jo
xchg
lret
cmpsl
add
jne
mov
pop
xchg
push
or
adc
jae
stc
unpckhps
sti
frstpm(287
fdivrl
push
addr16
testl
sbb
ss
loope
jnp
mov
mov
jbe
mov
fsubl
dec
or
sub
lret
adc
cmp
dec
xchg
insb
divb
xchg
sub
mov
xchg
cmc
pop
add
shl
outsl
imul
fldt
leave
lods
xor
mov
pop
jg
dec
fsubrs
je
aad
ljmp
inc
addr16
mov
jl
addr16
dec
mov
mov
das
fwait
adc
mov
mov
dec
dec
rolb
into
flds
adc
cmpb
iret
push
fwait
add
jo
insb
lods
nop
jmp
das
mov
test
ds
lret
add
or
dec
lds
mov
repnz
push
sbb
imul
aaa
sbb
adc
icebp
jbe
dec
cli
test
aad
cs
ds
or
int
cwtl
mov
add
inc
jge
mov
iret
int3
xor
test
insl
fdivrl
movsl
rorb
adc
bound
enter
cmp
data16
testl
filds
pop
dec
mov
gs
in
imul
clc
clc
repnz
sbb
dec
lret
insb
jmp
std
mov
mov
jbe
mov
pop
in
add
cmpsb
cmpsb
outsb
rolb
mov
je
test
je
xchg
mov
dec
or
mov
mov
pop
ss
sbbb
sub
cmp
in
jbe
xchg
outsb
stos
push
test
loop
das
xchg
hlt
orl
cmpl
int3
and
mov
pop
mov
adc
fisubrs
xor
daa
out
add
xor
ja
pop
adc
test
les
imul
xor
jbe
addl
fs
je,pt
fbld
cmc
push
setg
cmc
cs
xchg
cs
pushf
fildl
fwait
pop
jbe
cld
sbb
ds
movsl
jmp
jp
sti
cmc
fiaddl
popa
lea
icebp
adc
cmp
mov
fstpl
pusha
mov
lea
daa
lea
jbe
inc
stos
out
out
mov
cmp
adcl
ljmp
xchg
sti
loop
test
dec
cmpsb
sbb
pop
repnz
xchg
fldt
mov
lods
cmp
pop
xchg
movsb
fsubs
gs
loop
dec
sub
push
stc
stos
loopne
dec
push
test
pusha
fidivrs
aad
lret
jo
push
mov
inc
add
pop
cmpsb
fstl
popw
xchg
mov
into
or
cld
inc
inc
xor
stos
insl
inc
inc
lds
push
pop
and
xor
mov
in
adc
inc
fwait
jp
fwait
test
mov
pop
insl
lcall
and
outsl
dec
sub
adc
xchg
xchg
adc
pop
adc
add
insb
push
or
leave
lea
fists
inc
push
push
mov
dec
push
adc
shlb
int
repz
call
push
xorb
fwait
imul
add
mov
jnp
or
nop
hlt
scas
jno
add
xchg
les
push
or
into
jp
push
jb
jbe
pop
push
stos
out
push
cmpsl
pop
sbbb
icebp
sti
sbb
lret
aaa
inc
or
and
pop
sub
jno
mov
sub
in
scas
cmpsl
mov
aam
jg
pop
dec
pop
pop
ds
cli
movsb
lahf
mull
jno
sbb
dec
xor
in
sub
mov
sbb
mov
and
cmp
push
repz
insl
add
inc
push
pop
jnp
cltd
rclb
mov
shll
xlat
dec
inc
inc
mov
push
push
mov
int
push
sub
fldt
cwtl
mov
add
leave
loop
lcall
jno
jl
and
pop
outsb
insl
pop
sub
loopne
pop
fninit
sub
pop
aaa
fiaddl
jns
lcall
sbb
push
mov
mov
xchg
iret
mov
cmc
stc
or
xchg
dec
cmc
shrb
or
sub
sub
call
loope
stos
mov
loopne
movsb
dec
sahf
cli
adc
inc
push
aaa
sbb
or
mov
int3
pushf
cmp
sahf
xchg
inc
xor
mov
clc
cmp
xlat
icebp
ljmp
pop
fstp
or
mov
out
fdivrs
jmp
mov
jbe
cmc
pop
out
pop
int3
and
mov
aaa
sti
aas
xchg
push
dec
pop
hlt
mov
inc
icebp
dec
push
mov
addr16
jmp
testb
xchg
fbstp
mov
mov
and
adc
out
push
cmp
push
mov
arpl
dec
pop
ljmp
cmp
jbe
mov
xchg
sbb
mov
stos
and
inc
and
iret
add
out
or
mov
inc
pusha
shr
or
xchg
movsl
pop
ror
sbb
xlat
mov
idivb
sub
jb
dec
call
inc
or
in
xor
cs
jge,pn
pop
cld
popa
and
cwtl
mov
lcall
fisubrs
imul
addr16
jmp
in
mov
mov
xchg
test
mov
lods
jmp
jne
fwait
adc
xchg
pushf
jmp
icebp
push
incl
mov
scas
popa
stos
mov
movsb
rol
xchg
or
pop
pop
xchg
pop
sbb
es
push
outsb
hlt
adc
mov
in
push
xor
imul
xchg
dec
ret
jmp
out
test
or
jb
inc
pop
jmp
mov
sub
mov
scas
mov
in
mov
push
stos
scas
push
fldl
loop
and
int3
cmp
jnp
mov
push
int3
or
into
sub
mov
and
sub
lahf
fistpl
ret
ficoms
xchg
mov
mov
push
mov
imul
or
repnz
mov
rclb
pusha
rol
push
adc
nop
bound
out
pop
xor
pop
iret
sbb
lods
lahf
jo
addb
jbe
push
push
jno
mov
jecxz
fiaddl
rcrb
or
jecxz
repnz
iret
sub
scas
add
add
push
sbb
cmp
sub
js
jo
mov
push
xchg
popf
cmp
xor
scas
roll
rcrb
xchg
imul
icebp
adc
fmuls
pop
out
jmp
pop
inc
mov
mov
mov
test
mov
push
and
sub
nop
add
jnp
pop
test
test
ja
dec
pop
iret
add
xchg
sti
clc
mov
aad
aas
negl
dec
inc
lea
or
orb
jge
fidivl
add
push
add
inc
roll
aam
cltd
adc
mov
push
in
cli
stos
aad
neg
sar
stos
mov
fildll
mov
push
jo
jae
into
fwait
stos
aaa
inc
sub
push
outsl
pop
std
cmpsl
dec
pushf
pop
repz
dec
call
enter
dec
int3
sub
cmp
inc
xlat
adc
int
jo
push
popa
or
subl
sahf
cmpsb
ss
push
pushf
mov
bound
jns
shrl
xchg
xchg
repz
mov
inc
aas
mov
mov
xchg
jmp
inc
inc
shll
lods
mov
cmp
cmp
cmp
rclb
inc
dec
xchg
or
push
out
sahf
adc
pop
into
int
and
sub
jns
movsl
loope
ficompl
shlb
int
jne
insb
pop
fsub
xor
pop
int
cld
xchg
xchg
or
fidivs
inc
xchg
sahf
jle
adcb
fnsave
outsl
push
and
movb
push
mov
add
push
mov
mov
pushl
call
mov
lea
mov
mov
test
je
lea
mov
mov
mov
mov
mov
sub
mov
mov
xor
mov
sub
add
mov
mov
mov
mov
pushl
movb
mov
pushl
pushl
pushl
jmp
inc
cmp
mov
jnp
sub
jmp
popa
jp
out
test
jp
lret
imul
ficomps
icebp
xor
ret
iret
insl
cli
arpl
ljmp
movsl
adc
inc
push
xchg
and
rorl
jg
add
jns
scas
ss
and
sbbl
mov
int3
sbb
sub
xchg
xorb
pop
fildll
jge
pop
cwtl
dec
jno
mov
sbb
fcoml
fstpl
mov
xor
dec
cmpsb
inc
bound
xchg
add
sbb
sub
xchg
loopne
shll
push
hlt
fsts
xor
es
lods
cmp
xor
push
leave
dec
and
incb
in
enter
dec
stc
xor
mov
mov
xor
cmpb
test
jp
jcxz
std
inc
dec
ds
icebp
cmc
mov
pop
mov
mov
jge
push
and
ds
or
push
push
jae
data16
fcomip
lcall
int
cs
push
lret
cmpl
cmp
cmpb
cld
sti
in
test
jnp
push
pop
addb
ja
and
rcll
fstps
add
in
jl
scas
or
push
outsb
sbb
lods
icebp
testb
adc
lahf
mov
icebp
fdivrs
xchg
aas
mov
mov
add
xor
cmp
sbb
pop
std
repnz
fnstsw
out
cmc
in
sbb
cli
cmp
and
push
insl
and
clc
rcll
add
int3
cmp
out
sub
dec
in
ret
insb
insl
pop
mov
int3
push
mov
push
pop
xchg
sbb
shl
lahf
mov
mov
and
arpl
inc
std
push
fcom
xchg
lcall
xchg
stc
cmp
fcmovbe
dec
in
or
adcl
lods
fwait
pop
fs
xchg
cmpsl
sbb
push
loopne
and
jmp
in
or
stc
loope
xchg
jl
push
adc
dec
aaa
icebp
xor
mov
xor
xor
pop
mov
push
mov
xchg
add
hlt
test
nop
data16
js
mov
lcall
and
push
popf
cmpsl
inc
cmpsl
es
push
bound
sbb
xlat
ror
dec
lods
cmp
cmp
movsb
loope
scas
or
ss
pop
dec
mov
inc
stos
ja
insb
frstor
in
jl
sub
aam
cld
sahf
adc
aas
leave
incl
pop
mov
inc
iret
dec
jp
inc
je
pop
in
lock
sub
popl
lret
mov
scas
pop
mov
push
fdivl
pop
lds
insb
je
ret
pop
mov
loopne
and
jae
mov
repz
cmp
lcall
js
jo
pcmpeqb
cmpsl
sti
or
rclb
xor
pop
add
imul
pop
mov
fbld
fidivrs
push
push
jge
xor
hlt
dec
mov
lahf
mov
jno
sahf
ret
outsb
inc
mov
sub
sbb
fcoms
lcall
dec
mov
cmp
and
scas
xchg
sub
jmp
sbb
and
loopne
adc
loopne
nop
sbb
mov
loope
xor
mov
outsl
push
test
movsl
mov
aas
iret
mov
add
lahf
lds
and
and
js
call
mov
out
ljmp
sbb
jmp
xchg
ds
mov
or
lock
push
shl
fstl
inc
jno
inc
das
mov
aas
sbb
nop
mov
pushf
into
insb
fsubs
push
adcl
cmp
push
cmp
xor
pop
xchg
mov
std
int
in
test
and
in
adc
cmp
push
frstor
xor
int3
aad
lret
popa
jo
mov
sti
sar
cmp
sti
jae
mov
push
xchg
xor
xor
ret
int
jecxz
lods
ds
jno
push
dec
outsl
mov
mov
mov
push
loope
addr16
outsl
xor
xchg
fsincos
sbb
test
jne
addr16
jo
sub
and
dec
xor
je
stos
dec
add
enter
jb
xor
xchg
add
pushf
and
push
test
out
mov
pop
shlb
xchg
mov
cmp
cmp
mov
ds
or
and
aas
lret
ss
fcompl
scas
cs
mov
add
cmp
mov
mov
mov
xchg
scas
mov
or
int3
pop
stos
testb
mov
bound
mov
aaa
movb
sub
pop
xor
sbb
xchg
jg
inc
xchg
mov
pop
sub
sbb
popa
das
aam
jle
incb
push
notl
into
inc
cli
cmp
or
xchg
cmpsl
fs
mov
imul
push
dec
jnp
pop
sti
adc
pop
mull
inc
sub
mov
shr
test
cmp
sbb
xchg
dec
loopne
shrl
jae
push
repz
aam
dec
test
push
jle
add
cwtl
push
fcmovu
fmull
es
lods
inc
loop
mov
arpl
or
aaa
mov
xchg
mov
push
pop
mov
or
cmpxchg
pop
enter
pop
xchg
sti
and
cmp
jl
xchg
inc
pop
jmp
jle
addr16
orb
lock
pop
neg
adcl
pop
xchg
sbb
cmp
gs
xor
sub
ss
or
test
outsb
pop
inc
xchg
xchg
icebp
xchg
sbb
shl
lds
dec
scas
cmp
xchg
rcl
jo
leave
test
inc
not
fmul
out
shll
jl
xchg
andl
push
mov
xor
mov
cmpsl
rclb
cmc
jle
lret
je
ljmp
add
mov
shlb
jne
push
jae
push
jbe
dec
mov
push
rclb
xlat
dec
in
mov
pushf
addb
mov
loope
dec
call
test
mov
jb
outsb
jns
lock
scas
js
xchg
fisubs
in
pop
test
jge
jbe
push
sar
ljmp
fstl
out
mov
and
hlt
lret
dec
shl
mov
out
jae
outsb
pop
rcl
int
push
or
dec
mov
mov
sbb
stos
imul
pusha
mov
pop
cltd
cmp
int
icebp
sahf
pop
std
xchg
fs
in
test
das
ja
cli
les
and
cmpsl
in
dec
lods
jle
jnp
pop
test
pop
adc
test
dec
pop
cmp
enter
das
hlt
inc
stos
repnz
ficomps
fdivrs
and
out
daa
lcall
dec
insl
mov
packssdw
mov
and
rolb
cwtl
jle
ljmp
faddl
imul
fidivrs
mov
ss
test
mov
push
into
es
ss
push
sub
and
sbb
xorb
ss
inc
jbe
daa
dec
scas
pop
or
cmpb
aam
add
pmullw
insb
ror
sub
or
xor
pusha
inc
rolb
sub
inc
jecxz
ror
push
dec
ljmp
mov
cltd
cmpsb
jl
pop
dec
or
add
int
add
mov
push
mov
cltd
loopne
sarb
dec
in
rorl
repnz
sti
out
and
push
jg
push
adc
add
jbe
addl
dec
movsl
aam
lods
mov
repz
push
adc
nopl
std
jbe
in
inc
lea
xorb
dec
mov
lret
xchg
je
dec
orl
or
sti
mov
push
es
add
aam
fwait
add
int
mov
push
in
xor
add
call
xchg
das
xchg
mov
rcrl
inc
aas
sarb
and
add
mov
rorl
dec
push
int
std
pop
cmpsl
fs
test
xlat
pop
lea
sar
pop
popf
jp
je
rorb
call
pusha
arpl
ja
je
movsl
jmp
ds
and
fcoml
and
adc
hlt
xchg
sbb
cmp
inc
sbb
sbb
or
xor
fildl
testl
xchg
cmp
push
mov
and
push
xor
pop
aad
fst
jle
push
lret
cmpsl
pop
pop
push
les
sbb
cmp
fwait
push
jae
push
mov
pop
dec
cld
or
shrb
xor
pop
aaa
push
push
inc
pop
rcr
sbb
or
xchg
movsl
sub
pop
xchg
icebp
cmpsl
mov
xchg
out
add
hlt
popf
xchg
fistl
jp
pushf
or
pop
cmp
pusha
jp
push
cmp
jo
mov
enter
jb
imul
fcoms
in
push
ret
xchg
bound
insl
shlb
mov
pop
lahf
lods
cmpsl
aam
mov
push
movsb
mov
fptan
jnp
push
ret
inc
lock
fyl2xp1
xor
popa
cmp
das
call
or
mov
popa
jecxz
pop
das
lcall
mov
mov
fnstenv
xchg
mov
pusha
push
jge
icebp
pop
inc
loop
lods
xchg
jnp
sti
push
arpl
cmp
aad
test
roll
mov
lret
or
scas
mov
xlat
push
and
inc
sub
push
xor
outsl
mov
mov
xchg
push
test
fsubrs
xor
loopne
movsb
and
xchg
xor
jge
test
or
mov
lahf
push
sarl
test
inc
mov
dec
fistpl
sub
jnp
mov
int
mov
fwait
push
loop
mov
ja
movsl
jno
xchg
push
lock
fcmove
mov
decb
pop
cs
in
sub
push
arpl
lahf
arpl
movsl
lea
or
pusha
lahf
jb
push
adc
mov
push
and
lock
stos
daa
xchg
mov
pandn
ds
out
ret
paddsb
cmp
pop
outsl
adc
lret
sub
mov
ret
imul
lahf
movsb
std
xchg
push
sbbb
pop
dec
or
mov
dec
loop
or
jns
out
push
mov
sub
or
daa
push
icebp
out
xorl
dec
mov
add
or
mov
or
loop
mov
pop
push
adc
xchg
into
ds
xchg
jbe
subb
test
adc
pop
mov
cs
rcl
outsb
jp
repz
cmpsb
push
lahf
adc
lret
cmpsb
xchg
push
mov
mov
xchg
jns
pop
cmp
pop
out
pop
jae
imul
adc
xor
xor
sbb
inc
sub
fdivrs
repnz
scas
lret
mov
xchg
pusha
pop
mov
repnz
mov
cmp
pusha
sbb
stc
cmp
enter
xchg
xlat
fwait
pop
iret
mov
hlt
call
sar
and
inc
jg
mov
stos
rolb
aad
pushf
jmp
lock
fld
push
call
out
imul
mov
fs
jmp
xlat
enter
sub
mov
pop
sti
jge
or
lret
mov
lahf
ss
mov
icebp
and
mov
out
and
xchg
push
aaa
lret
pop
and
dec
aas
inc
sbb
lock
ljmp
out
ror
xchg
not
push
or
mov
ja
lret
mov
inc
shl
in
loop
push
ja
imul
mov
pop
and
subl
adc
add
daa
dec
jl
add
xor
cmp
mov
test
push
mov
into
mov
jns
nop
jl
ds
jecxz
jge
add
inc
mov
and
push
xchg
lock
dec
sti
sub
cwtl
lock
out
mulb
fstpl
aaa
arpl
dec
pop
mov
lods
out
daa
jb
fs
sti
pop
into
cld
fiadds
or
repz
push
out
inc
mov
hlt
xor
inc
into
scas
movl
enter
mov
call
es
ret
or
popf
rcll
inc
cmp
push
xchg
call
xchg
test
int
and
rorl
sub
xchg
mov
sub
dec
mov
or
ja,pt
mov
sti
popf
and
iret
incl
mov
xor
ljmp
fdivs
pop
fidivl
out
push
lcall
lahf
in
pop
xchg
mov
mov
fidivl
push
jae
movsl
ficomps
push
inc
icebp
sbb
cwtl
push
xchg
xchg
ljmp
sbb
add
aad
iret
rolb
dec
push
cmp
je
dec
and
and
repz
daa
jle
idivb
pop
sbb
push
je
push
in
icebp
adc
stos
xchg
mov
popf
adc
cs
ficoms
insl
test
test
push
std
fcmove
sar
jp
inc
push
jecxz
cld
xchg
hlt
cmp
or
push
xchg
or
push
aaa
sarl
icebp
or
add
icebp
shrb
enter
jae
sub
cmp
mov
sbb
es
xor
adc
jmp
cs
cmp
sub
xor
push
call
iret
lret
mov
adc
scas
sbb
mov
mov
xchg
sti
mov
adc
sbb
mov
sti
into
inc
xlat
dec
subb
out
jno
into
add
stos
jae
mov
cmp
pop
out
es
cwtl
stos
addr16
sub
sub
pusha
inc
sub
stc
pop
popf
dec
xor
dec
lret
pop
jmp
adc
bound
adc
adc
pop
add
es
sub
out
pusha
or
cli
repnz
mov
mov
pop
lock
xorl
inc
push
sbb
sbb
icebp
sarb
testb
imul
jae
or
mov
pop
lea
xchg
js
test
or
or
aam
sbb
sbb
xchg
add
xlat
das
fnstcw
sub
out
or
jae
jbe
insb
xor
nop
lret
lret
iret
call
and
insb
shl
lcall
add
xchg
pop
mov
bound
xlat
dec
sti
cmp
xchg
jmp
stos
rcl
scas
ss
dec
push
and
and
and
ljmp
into
cmp
xor
mov
jbe
jge
fnstenv
pop
adc
out
sbb
cmpsb
leave
xchg
and
fxch
lret
mov
pop
mov
pop
jle
cmp
pop
pushf
lds
and
pop
pop
shlb
movl
xor
inc
mov
adc
hlt
fisubs
cwtl
mov
xchg
or
addr16
rcrb
pop
out
movsl
imul
adc
sarb
mov
lods
out
mov
pop
mov
mov
pop
jmp
fildl
jmp
aaa
adc
mov
movsl
cltd
sub
jle
rol
movsb
fstpl
push
loope
pmaxsw
xor
push
mov
mov
mov
in
push
shl
cmp
cmp
pop
lea
dec
dec
inc
lock
mov
cld
pop
imul
mov
fs
mov
cli
dec
adcl
cs
aaa
mov
das
pop
cmp
cwtl
mov
jae
and
and
stos
push
pop
dec
xchg
sub
and
and
push
push
and
lcall
dec
inc
mov
call
xchg
xor
push
fs
pop
xchg
inc
test
xor
fldl
pusha
dec
xchg
jmp
adc
daa
jmp
ficoms
addr16
push
push
dec
pushf
xor
sbb
cs
jb
imul
pusha
js
mov
fstpl
push
bound
cmp
lock
imulb
pop
int3
fcmovbe
or
roll
cmp
xchg
fcoml
ror
push
cmp
push
xor
movsb
mov
or
xorb
sbb
loopne
xor
cmp
mov
push
popf
dec
push
dec
and
outsb
push
mov
std
mov
ret
fs
aam
pop
inc
cmpsb
inc
mov
xchg
sbb
sub
or
push
fistpl
cmp
leave
pop
and
or
cld
js
das
xchg
xchg
lock
je
pop
aam
mov
scas
insl
lahf
xchg
in
pop
fnsave
jg
push
stos
stos
ljmp
stc
stos
push
rcl
sub
add
pop
aad
scas
int
scas
push
or
repz
lds
fwait
stc
in
xor
stos
addr16
mov
sub
nop
sub
dec
jge
mov
icebp
jecxz
cmp
inc
test
lds
repnz
jp
pusha
out
fmuls
mov
int
icebp
jg
or
aas
lods
aad
and
adc
mov
adc
add
insl
mov
jbe
push
out
fldcw
cli
insl
jne
mov
xlat
nop
stos
adc
inc
je
adc
jno
pop
dec
test
aam
jecxz
in
sub
add
push
mov
aam
pop
fs
popa
test
dec
inc
popa
push
aas
ds
jle
out
add
pop
and
test
add
xchg
shl
scas
loop
adc
sbb
cli
insl
xchg
or
aaa
and
add
loopne
inc
mov
add
roll
icebp
push
cld
shr
jne
mov
dec
scas
xchg
into
mov
push
jle
xchg
sub
mov
push
in
test
mov
sub
pop
and
stos
negb
divb
mov
push
push
and
pusha
push
bound
add
adc
cmpsb
or
sub
and
ds
out
mov
test
jne
jmp
lret
cmp
inc
test
pop
mov
mov
dec
add
lods
xor
jmp
ficoms
fs
lds
dec
add
and
pop
sub
pop
dec
dec
popf
ror
je
dec
cmc
das
mov
dec
iret
cmp
mov
idiv
iret
or
repnz
pop
sbb
mov
ficomps
pop
lret
cmpsl
mov
and
mov
outsb
inc
pop
sbb
mov
cltd
out
cmp
jmp
test
out
jns
lock
ret
jge
sarl
pop
dec
inc
fwait
lock
out
jb
dec
inc
cmp
mov
pop
std
nop
sub
pop
and
cs
aam
mov
mov
stos
lds
pop
in
daa
dec
and
inc
outsl
in
cmpl
inc
jnp
sub
jnp
int3
out
imul
js
xor
add
sbb
xchg
popf
pop
sub
lahf
dec
jnp
lret
and
jnp
mov
popa
push
pop
and
push
adc
mov
xor
jb
in
jg
lret
or
or
or
out
shlb
sar
sbb
dec
int
icebp
mov
sub
xor
testb
rcll
dec
jns
dec
imul
mov
out
stc
dec
hlt
sub
mov
popa
insl
in
mov
xchg
out
push
mov
add
loop
push
adc
lcall
jl
mov
iret
iret
sti
fimuls
clc
push
mov
jge
mov
jl
leave
push
jae
into
jb
xchg
fdivl
dec
out
pop
fwait
in
dec
push
dec
adcl
and
cld
popf
lret
push
insl
add
test
add
in
out
adc
sub
in
ss
mov
sbb
shl
outsb
popf
adc
push
lcall
sub
cs
cmp
and
dec
and
and
push
stc
xchg
dec
sub
adc
sbb
sbb
shlb
scas
sar
lods
mov
inc
loopne
xchg
xchg
scas
loop
pop
mov
mov
xchg
push
fsubs
xlat
adc
jmp
ja
jns
push
or
icebp
or
xchg
pop
rorb
sarb
outsl
fnstsw
stos
fidivl
aas
add
js
rcrb
cmp
les
add
xchg
xlat
iret
shl
lcall
jecxz
lret
xlat
lret
jg
mov
test
or
mov
mov
lahf
mov
fildll
sbb
mov
cmp
ds
push
xchg
roll
test
fdivrl
inc
add
cwtl
loop
cld
xor
pop
jecxz
mov
jo
xor
push
test
cmp
clc
jge
pop
mov
cmp
sbb
add
and
mov
add
rcll
add
stos
ja
mov
cld
cmc
and
pop
cmpsb
scas
jnp
int3
repz
movb
inc
pop
pop
out
stc
jns
mov
mov
cmp
push
sub
shlb
ja
gs
or
call
in
xor
aad
push
fucomp
and
cmp
in
icebp
and
sbb
sbb
je
pop
inc
pop
fwait
mov
shl
clc
clc
ret
pop
out
enter
xor
adc
add
sub
pop
hlt
fsubrp
mov
pop
js
cmp
xchg
loop
inc
insl
mov
pop
or
rcr
movsb
into
pop
pop
loopne
and
ret
stos
or
pop
fisttps
sub
mov
xchg
cltd
call
jno
push
in
add
iret
push
mov
push
cmc
push
lods
out
jb
dec
jne
ds
sub
test
jae
jp
or
cmp
lock
push
xchg
test
jl
adc
ret
ja
jge
adc
jg
jge,pt
aaa
arpl
push
xor
jmp
jns
jmp
add
in
jecxz
push
fwait
xchg
repz
rorl
mov
cmpsb
jmp
push
ljmp
push
sar
dec
cmp
push
lock
pop
xchg
dec
sbb
pop
mov
mov
cli
xor
pop
jns
aad
lea
cmp
push
sub
loop
daa
addr16
xor
shll
fs
xor
lods
add
pop
mov
test
pop
cs
jae
and
xor
sti
mov
and
xchg
inc
adc
mov
and
and
dec
ret
sahf
mov
xchg
rclb
or
dec
push
push
push
adc
jns
mov
movsb
or
jo
push
ret
push
adc
and
ficomps
pop
mov
iret
lods
clc
push
aam
daa
inc
arpl
sub
call
test
fadds
pop
insb
xlat
mov
push
inc
mov
int
lods
loop
jmp
cli
sbb
cli
cld
fistps
push
inc
xor
jge
incl
mov
or
cmp
lcall
arpl
jae
lods
mov
push
mov
and
or
inc
dec
mov
pop
icebp
loope
mov
aas
or
int3
loop
mov
je
jge
outsb
sub
mov
dec
nop
movsl
dec
int
test
rclb
cmp
lods
in
adc
xlat
inc
ret
orl
mov
lahf
cld
sbbb
imulb
add
inc
ret
js
iret
test
sub
and
loope
add
pushf
xor
loopne
mov
ret
leave
scas
cmp
es
inc
stos
lcall
cmpsb
roll
xchg
xchg
jmp
xchg
mov
nop
sti
into
mov
add
shlb
add
mov
mov
insb
push
sahf
inc
lret
and
push
mov
inc
out
shr
mov
dec
js
pushf
or
sbb
adc
fucomip
jge
outsl
pusha
sahf
or
mov
stc
loope
fistps
sub
sbb
clc
shlb
movsb
sbb
and
dec
cmpsl
mov
bound
push
or
stos
mov
pop
aam
cmp
adc
arpl
sbb
mov
dec
mov
jo
test
rcrb
sub
dec
pop
outsb
popa
inc
adc
add
adcb
fs
mov
push
popf
cmpsb
pushl
mov
and
jecxz
addr16
imul
movsl
adc
popf
mov
dec
jb
adc
dec
daa
jb
stos
cmp
adc
popa
mov
push
xchg
addr16
ja
decl
aaa
clc
jns
int
sub
dec
leave
lahf
lret
outsb
pusha
mov
push
xchg
pop
pop
test
lahf
jp
jae
or
mov
pushl
cwtl
lahf
adc
leave
mov
xchg
test
lds
aas
loop
mov
rolb
xchg
data16
jno
fcomps
fdivrs
mov
int
sub
adc
mov
add
mov
add
mov
or
cmp
mov
cmp
dec
stc
ds
lods
jno
mov
pop
bt
insb
adc
stos
add
jmp
mov
out
inc
adc
mov
add
jp
nop
lret
out
daa
xchg
and
mov
fdivl
mov
push
mov
and
push
stos
push
jno
dec
leave
mov
adc
jb
enter
cld
push
push
testb
sbb
loopne
das
push
pop
inc
adc
fstps
xchg
arpl
jmp
inc
jo
loope
loope
es
push
add
add
fldenv
adc
mov
hlt
push
fs
dec
sbb
mov
inc
push
push
mov
push
sbb
sarb
imul
xchg
push
shl
jl
bound
std
fs
aas
mov
dec
arpl
fisttpll
fcmove
or
popf
gs
xchg
xchg
mov
rclb
cmc
gs
sub
popf
add
daa
insb
pop
cli
sub
dec
loopne
mov
sbb
push
arpl
mov
rcll
push
dec
or
dec
dec
gs
and
or
push
std
int
insb
xchg
push
adcb
push
out
lods
orb
xchg
inc
sub
pop
dec
xor
push
pop
mov
dec
clc
cmpsl
or
aaa
push
shrl
sub
shrl
hlt
xor
dec
push
and
and
or
adc
fucomip
jnp
bnd
frstor
mov
mov
ljmp
mov
fwait
push
push
out
and
inc
adc
pop
leave
in
ret
xchg
cltd
or
shll
mov
mov
jo
push
pop
and
ds
push
in
stos
pushf
mov
ffreep
aam
xchg
mov
jbe
mov
or
mov
jmp
aam
pop
iret
or
out
sub
loop
fwait
mov
fstl
mov
in
mov
add
cmp
mov
and
push
stos
cmp
scas
fs
adc
xchg
cwtl
dec
inc
orb
lock
cmp
cwtl
push
dec
ror
scas
adc
mov
sub
push
and
pushf
dec
pusha
js
add
loope
test
push
pop
cli
sbb
jecxz
sub
inc
jmp
jge
mov
jl
xor
lret
mov
xchg
xor
shl
pop
stc
je
xchg
sub
push
test
xor
call
inc
jge
jl
fistpl
ret
cmp
mulb
orb
sub
lods
scas
cmp
mov
mov
out
jnp
hlt
imul
mov
imul
cmpsb
fcom
out
xor
inc
orl
cmp
xlat
in
jle
sbb
xor
outsb
std
xchg
cmpsl
into
movsl
push
lods
repz
dec
lcall
je
sbb
inc
jle
fs
inc
add
cmp
subb
add
or
xchg
cmp
ja
push
test
jg
pop
in
mov
fldt
pop
add
les
add
clc
pop
test
sbb
aad
mov
call
cmpsb
int
punpckldq
mov
cmp
insb
mov
outsl
xor
iret
and
mov
push
js
add
mov
sub
enter
lods
xchg
jp
or
shll
jl
call
dec
push
out
out
call
and
das
dec
xchg
sbb
aas
test
xchg
jmp
mov
arpl
inc
add
js
div
cmp
mov
repz
jmp
inc
add
mov
lret
push
pushf
mov
ja
inc
jne
cmpsl
jbe
cmp
cmp
movsb
xor
xchg
jnp
adc
cmp
and
mov
ljmp
mov
jo
and
mov
push
pop
cmp
outsb
lods
fidivrl
jne
push
pop
jno
rorl
jo
inc
lds
pop
test
clc
idivl
shll
loop
inc
repnz
push
out
fdiv
lds
adc
addb
inc
rcll
ficoml
imul
out
sub
fmuls
adc
or
xchg
push
aas
mov
pop
jbe
xchg
fwait
addr16
add
cwtl
mov
pop
ret
xchg
mov
jp
pushf
or
or
dec
jno
jbe
pop
fdivrp
test
inc
fdivr
aad
enter
loopne
jg
imul
loope
scas
pushf
out
out
outsl
daa
dec
mov
adc
cs
inc
push
push
pop
ret
xchg
lret
sub
sbb
cs
mov
lret
out
fimull
mov
testl
xor
dec
mov
inc
sbb
cmp
inc
addr16
lcall
mov
pop
and
mov
sbb
es
xchg
adcb
mov
imul
je
cld
xor
loopne
dec
dec
sbb
test
sub
arpl
cmp
push
pop
enter
test
aam
cli
in
mov
jmp
sub
scas
int3
push
mov
lahf
add
add
cltd
push
fwait
ret
jge
leave
xor
dec
imul
cmp
pushf
and
scas
inc
int3
arpl
and
iret
mull
and
cld
or
pop
outsl
add
fisttpl
push
push
xchg
lds
sbb
dec
xchg
out
dec
lret
xor
dec
adc
rorl
pop
push
or
push
ret
mov
dec
jnp
xchg
js
mov
cmp
in
dec
mov
lea
sti
xchg
mov
push
popf
sarb
test
fnsave
push
andb
cmp
sub
push
jp
imul
out
cmc
mov
dec
fs
inc
outsb
fisttpl
testb
inc
xchg
push
arpl
movsb
inc
call
das
xchg
adc
js
dec
int
inc
cmp
pop
les
adc
xchg
add
in
shll
mov
add
cmp
sub
bound
dec
int
push
dec
cli
inc
sub
shl
cs
or
int3
in
rol
mov
cmpsl
addl
xor
pushl
pushl
mov
call
mov
jmp
xchg
roll
push
mov
div
mov
jge
push
jno
jp
imul
inc
add
add
popf
xchg
inc
mov
jmp
shlb
dec
lcall
sbb
sub
xor
rcl
sbb
stos
xchg
lock
mov
jle
add
bound
jp
fbstp
jl
andl
aas
inc
jmp
jbe
jns
int3
scas
xchg
in
mov
inc
lahf
add
mov
mov
and
test
aas
pop
dec
loop
mov
daa
stc
pop
xor
adc
fdivrs
mov
xor
inc
dec
jnp
xchg
and
mov
cmp
loop
daa
imul
lahf
inc
pop
fs
daa
sub
cmp
cmp
sbbl
nop
out
jmp
pusha
mov
cmp
jbe
test
jo
scas
xor
push
sub
sti
loop
daa
leave
imul
inc
clc
lret
xor
rolb
mov
push
xchg
push
aas
lahf
rolb
and
jae
iret
push
dec
data16
out
std
lods
sbb
outsb
andb
adc
inc
mov
cltd
fnstcw
push
mov
push
ret
aam
shrb
loop
into
add
mov
pop
mov
pop
jmp
mov
dec
fdivl
xchg
or
add
sub
cmpsb
loop
out
push
mov
push
push
fiadds
fldcw
push
aam
call
cmp
sbbb
inc
push
cmc
adc
xchg
xor
sub
std
lret
sub
notb
hlt
xor
mov
pop
insb
dec
lock
sahf
jbe
mov
cwtl
enter
lods
mov
das
add
insl
pop
stos
fdivr
aad
and
or
adc
leave
dec
fsubp
mov
int
xchg
pop
sbb
cwtl
loopne
aad
inc
jmp
cmp
aad
ret
lods
fxtract
iret
rol
into
inc
or
and
rcr
inc
jnp
xor
lods
orb
mov
stos
mov
xchg
sbb
adc
sub
icebp
push
loope
sbb
fsubl
ffreep
dec
dec
data16
test
and
xor
jns
xchg
sub
push
rcrl
or
cmp
dec
mov
xor
mov
mov
int3
fisubs
sbb
pop
shrb
xor
scas
sub
into
call
movsl
xchg
ret
sbb
jns
pop
sbb
les
aaa
fbstp
jns
mov
xor
pusha
std
cmpsb
pop
dec
stos
push
movsb
xchg
stos
out
adc
push
fldenv
xchg
int3
rorl
mov
aad
jae
lcall
mov
and
cs
dec
inc
push
arpl
imul
adc
lods
clc
loope
push
cmp
xor
adc
loop
sbb
hlt
fwait
cmc
jae
and
gs
adc
cmp
inc
adc
adc
xchg
and
mov
adc
push
pushf
ffree
cmp
notl
pushl
movsb
add
fidivrl
xchg
add
inc
lret
add
adc
adc
and
mov
sti
scas
cwtl
bound
mov
push
push
sub
adc
add
lcall
in
je
mov
cmp
add
sbb
adc
push
mov
insl
xor
outsb
xor
aad
jbe
adc
test
jae
cwtl
test
adc
leave
cld
imul
repnz
cmp
movsb
push
inc
mov
mov
cli
imul
aas
and
jp
inc
aam
mov
xor
rorl
xor
arpl
pop
xchg
or
inc
adc
out
mov
jl
mov
xchg
inc
scas
lea
test
jl
arpl
ret
pop
rcr
mov
pop
out
jl
sbbl
mov
cmp
fmuls
cli
clc
sub
shrb
ficoms
sbb
and
xchg
dec
mov
sub
cmpsb
jle
dec
dec
xchg
mov
ljmp
sub
stos
xchg
pusha
push
fistps
jecxz
dec
xchg
and
test
and
addb
sub
mov
jmp
jnp
shrl
pop
stc
and
lods
mov
cli
cli
aaa
rcrb
and
insb
push
jo
stos
ret
push
jb
mov
cli
inc
fldt
aas
call
pop
rcll
pop
push
mov
push
pop
rcl
dec
lea
inc
or
movsl
dec
cmpsl
push
int
inc
and
xchg
jns
je
jnp
xchg
in
sub
add
ljmp
and
add
cmp
lock
std
repz
pusha
mov
cld
or
pop
push
repz
inc
ret
lock
out
test
gs
fs
mov
hlt
xlat
mov
add
pop
pop
leave
ret
push
mov
sub
movl
movzwl
and
mov
lea
adcl
mov
mov
adc
push
add
mov
orl
mov
movl
cmpl
je
cmpl
jge
jmp
push
pushl
push
push
push
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
lea
mov
mov
orl
mov
mov
addl
xor
add
subl
mov
movzwl
sbb
mov
mov
movl
cmpl
je
cmpl
jl
jmp
push
push
call
xor
xor
dec
mov
jmp
mov
mov
add
neg
push
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jb
jmp
push
pushl
push
push
pushl
call
jmp
mov
mov
movl
cmpl
je
cmpl
jb
jmp
push
call
cmpl
jne
mov
dec
mov
xor
xor
dec
mov
jmp
mov
andl
xor
or
inc
mov
cmpl
jb
jmp
pushl
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
andl
mov
inc
mov
cmpl
jg
jmp
push
push
pushl
call
cmpl
jne
xor
add
inc
mov
cmpl
jb
xor
mov
add
cmp
je
movl
mov
movl
jmp
mov
mov
cmp
movl
jne
movl
push
movl
jmp
mov
mov
mov
cmp
jne
mov
adcl
xor
mov
sub
add
andl
jmp
xor
xor
inc
mov
cmpl
jae
cmpl
jl
jmp
push
call
cmpl
jne
mov
inc
mov
jmp
mov
mov
mov
xor
add
imul
mov
xor
add
cmp
mov
push
je
mov
add
mov
mov
xor
add
imul
mov
jmp
mov
xor
mov
mov
xor
mov
mov
sub
add
mov
mov
add
mov
mov
mov
xor
xor
lea
mov
xor
add
imul
mov
xor
sub
mov
add
cmp
mov
mov
jg
xor
mov
sub
add
jmp
xor
add
add
mov
mov
mov
xor
add
not
and
movsbw
mov
sub
mov
xor
mov
cmp
jne
movsbw
mov
sub
mov
xor
mov
cmp
je
mov
xor
mov
sub
add
jmp
mov
mov
mov
lea
mov
mov
mov
xor
add
mov
mov
mov
xor
add
pop
cmp
jne
mov
xor
mov
add
imul
mov
pushl
jmp
mov
add
mov
mov
mov
movsbw
mov
sub
mov
xor
mov
cmp
jne
mov
mov
mov
jmp
mov
cmp
jne
push
pushl
pushl
pushl
pushl
call
pop
pop
leave
ret
push
mov
sub
addl
push
call
sbbl
test
je
xor
movl
jmp
movl
xor
mov
mov
mov
andl
mov
inc
mov
cmpl
jge
jmp
pushl
push
call
cmpl
jb
mov
andl
xor
or
inc
mov
cmpl
jl
jmp
call
cmpl
jne
mov
inc
mov
cmpl
jb
movl
lea
xor
mov
movzbl
add
lea
mov
movzwl
add
mov
neg
mov
andl
xor
add
inc
mov
cmpl
jl
jmp
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
adc
mov
push
push
push
xorl
mov
andl
xor
or
inc
mov
cmpl
jg
jmp
push
push
pushl
push
push
pushl
call
cmpl
jb
xor
mov
sbbl
add
mov
mov
cmp
jne
sbbl
mov
mov
or
mov
mov
xorl
mov
xor
xor
add
mov
sub
mov
mov
add
xor
andl
xor
or
inc
mov
cmpl
jg
jmp
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
add
sub
mov
mov
and
mov
mov
xor
mov
sbb
mov
adc
mov
mov
mov
andl
mov
inc
mov
cmpl
jle
jmp
push
push
push
push
push
pushl
call
cmpl
jb
mov
movl
mov
xor
or
sub
mov
mov
and
movl
sub
mov
mov
mov
mov
xor
mov
xor
xor
addl
add
sbb
mov
xor
xor
adcl
add
movl
lea
movl
cmp
movl
ja
xorl
mov
sbbl
xor
andl
lea
push
mov
xorl
xor
sbbl
lea
push
xor
add
or
mov
pushl
call
andl
mov
inc
mov
cmpl
jb
jmp
push
push
call
cmpl
jb
mov
or
xor
lea
not
mov
movl
mov
xor
sbbl
xor
sbbl
add
mov
xor
movl
lea
cmp
movl
jbe
mov
mov
mov
or
mov
or
mov
movl
cmpl
je
cmpl
jg
jmp
push
pushl
push
push
pushl
call
mov
dec
mov
jmp
mov
movl
mov
andl
sub
sbbl
xor
movl
mov
mov
mov
mov
cmp
movl
jne
lea
mov
andl
lea
xorl
mov
mov
test
je
movzwl
sub
mov
and
mov
sbb
mov
mov
xor
add
sub
imul
mov
xor
mov
mov
mov
mov
cltd
mov
add
adc
andl
xor
mov
mov
mov
mov
xor
add
mov
adcl
xor
mov
mov
xor
mov
cmp
jne
mov
cmp
je
mov
mov
mov
xor
add
adc
xor
xor
cmp
jne
cmp
jne
mov
mov
xor
mov
mov
mov
jmp
mov
cmp
je
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
pushl
mov
pushl
add
mov
mov
pushl
call
mov
mov
mov
jmp
mov
mov
xor
add
cmp
jne
mov
mov
mov
xor
add
cmp
jne
push
mov
xor
add
push
push
pushl
pushl
call
pushl
pushl
call
mov
xor
add
mov
mov
xor
add
mov
lea
mov
lea
mov
mov
test
je
movl
movl
movl
movl
call
mov
mov
mov
mov
mov
mov
mov
mov
cltd
mov
add
adc
andl
xor
mov
mov
mov
mov
xor
add
mov
adcl
xor
mov
mov
xor
mov
cmp
jne
mov
cmp
je
mov
mov
mov
xor
add
adc
xor
xor
cmp
jne
cmp
jne
mov
mov
xor
mov
mov
mov
add
mov
mov
xor
add
xor
add
adc
xor
xor
xor
add
adc
xor
xor
cmp
jne
cmp
jne
mov
mov
mov
push
add
push
lea
push
call
mov
mov
pop
pop
pop
leave
ret
xor
addl
inc
ret
push
mov
push
movl
dec
mov
sbbl
movsbl
xor
xor
or
mov
mov
mov
adc
sub
movzwl
sbb
mov
orl
xor
cmp
movl
jne
adc
mov
push
sub
mov
andl
add
mov
mov
mov
xor
add
cmp
pop
je
mov
jmp
mov
xor
add
leave
ret
push
mov
sub
push
xor
mov
xor
mov
sub
movl
add
push
mov
andl
xor
add
inc
mov
cmpl
ja
jmp
push
call
cmpl
jb
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
ja
jmp
pushl
push
call
jmp
mov
mov
xor
sbb
xor
mov
add
movl
add
movl
imul
mov
mov
movl
cmp
je
not
mov
mov
mov
xor
lea
mov
mov
mov
mov
xor
xor
add
add
imul
mov
cmp
je
mov
xor
mov
add
imul
add
mov
mov
jmp
mov
mov
xor
xor
add
add
imul
pop
pop
leave
ret
push
mov
sub
movl
sub
push
adcl
movl
mov
push
movzwl
or
mov
mov
xor
push
movzwl
add
mov
mov
add
andl
mov
mov
sbb
mov
test
movl
je
xor
mov
mov
mov
and
mov
xor
adc
add
and
mov
xor
mov
subl
xor
orl
add
sub
mov
mov
and
mov
xor
add
andl
mov
inc
mov
cmpl
ja
jmp
push
pushl
pushl
call
cmpl
jb
mov
mov
xor
add
adc
mov
sub
lea
addl
xor
adcl
xor
cmp
je
andl
mov
inc
mov
cmpl
jge
jmp
push
call
cmpl
jb
mov
addl
xor
add
movl
cmp
movl
jne
sbbl
pushl
subl
call
mov
mov
xorl
mov
sbbl
xor
adcl
add
movl
cmp
je
sbbl
pushl
orl
pushl
andl
call
mov
mov
mov
sub
sub
mov
movl
cmpl
je
cmpl
ja
jmp
push
push
call
mov
dec
mov
jmp
mov
movl
xor
addl
add
movl
cmp
movl
je
mov
or
mov
sub
mov
and
mov
adc
mov
add
movzwl
sbb
mov
andl
mov
mov
andl
add
adcl
mov
andl
jmp
xor
xor
inc
mov
cmpl
jae
cmpl
jb
jmp
call
cmpl
jne
mov
inc
mov
jmp
mov
mov
xorl
add
mov
movl
jmp
sbbl
mov
andl
mov
inc
mov
cmpl
jl
jmp
push
call
cmpl
jb
mov
addl
add
movzbl
or
mov
mov
mov
xorl
mov
movl
xor
addl
add
movl
cmp
je
jmp
mov
movl
mov
orl
xor
adcl
add
movl
cmp
mov
je
mov
xor
movl
add
movl
cmp
je
adcl
lea
subl
push
sbbl
pushl
subl
pushl
adcl
call
subl
mov
mov
xor
add
cmp
je
mov
movzwl
mov
mov
mov
jmp
mov
xor
lea
jmp
mov
xor
add
jmp
mov
add
mov
mov
test
je
movl
push
xor
pop
add
push
pop
push
dec
pop
dec
xchg
sub
xchg
dec
mov
imul
sub
mov
mov
xor
add
jmp
mov
mov
mov
mov
xor
add
xor
div
mov
xor
lea
mov
mov
mov
mov
mov
xor
lea
mov
mov
mov
xor
add
imul
mov
mov
xor
lea
cmp
jne
mov
xor
add
mov
mov
add
xchg
xor
push
mov
pop
mov
add
lea
add
add
push
inc
pop
dec
xchg
dec
xchg
dec
xchg
dec
push
mov
pop
dec
call
cmp
je
xchg
push
pop
push
pop
inc
xchg
sub
xchg
dec
dec
mov
imul
add
xchg
push
xor
mov
dec
inc
add
dec
xor
add
pop
mov
pop
pop
pop
leave
ret
add
add
mov
testb
add
add
add
xor
add
lock
add
add
add
push
push
inc
push
lds
mov
test
test
add
inc
cmp
ja
inc
popa
je
pop
inc
outsb
arpl
gs
popa
je
inc
imul
in
or
add
push
mov
xchg
mov
cmp
jne
mov
cmp
jne
mov
mov
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
push
movb
movb
xor
mov
lea
movzbl
xor
add
inc
mov
cmp
jb
xor
lea
movzbl
xor
add
inc
mov
cmp
jb
xor
lea
movzbl
xor
add
inc
mov
cmp
jb
lea
mov
mov
mov
mov
mov
push
mov
mov
cmp
jne
lea
mov
mov
mov
add
mov
lea
mov
add
mov
lea
mov
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
lea
push
mov
mov
xor
add
push
mov
lea
mov
lea
push
mov
mov
mov
mov
mov
movl
movl
movl
movl
pushl
mov
call
mov
mov
test
je
xorl
jmp
mov
mov
mov
xor
cmp
jne
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
mov
movl
movl
lea
pop
mov
xor
sub
mov
inc
dec
jne
lea
mov
lea
push
mov
xor
add
push
mov
add
push
mov
mov
movl
pushl
mov
call
mov
xor
add
mov
cmp
jne
mov
or
mov
add
mov
mov
mov
mov
mov
mov
mov
lea
mov
add
mov
lea
mov
add
mov
lea
mov
mov
mov
mov
lea
mov
mov
mov
mov
add
mov
mov
add
mov
mov
mov
lea
mov
mov
mov
mov
movzwl
xor
add
xor
mov
mov
movzwl
xor
add
xor
mov
xor
mov
mov
mov
lea
lea
movl
mov
call
mov
lea
push
mov
xor
add
push
lea
push
pushl
mov
call
mov
lea
lea
mov
call
mov
mov
mov
pushl
pushl
pushl
pushl
pushl
pushl
pushl
call
test
je
add
pushl
lea
call
mov
mov
mov
xor
add
mov
jne
mov
mov
pushl
mov
call
jmp
mov
mov
add
pop
pop
pop
leave
ret
push
push
push
push
mov
mov
add
push
cld
mov
add
push
mov
lods
xchg
push
mov
or
shl
not
push
mov
or
shl
not
push
add
mov
sub
sub
inc
push
push
push
push
push
push
sub
push
or
mov
shl
lea
mov
shr
rep
push
pop
call
loop
lea
lea
mov
mov
sub
and
mov
mov
call
jne
mov
and
shl
sub
neg
shr
pop
add
pop
lea
shl
cmp
pop
lea
push
push
mov
push
mov
jb
mov
sub
movzbl
mov
shl
mov
and
add
lea
call
mov
shr
and
cmp
mov
jne
cmp
jb
jmp
mov
call
inc
inc
sub
sub
cmp
jb
pop
inc
cmp
dec
mov
jb
inc
cmp
dec
mov
dec
jb
mov
dec
sub
push
jmp
mov
dec
call
jne
pop
pop
pop
pop
pop
pop
pushl
push
push
mov
mov
jmp
mov
dec
call
jne
mov
dec
call
jne
pop
cmp
mov
jb
mov
push
mov
sub
cmp
jb
lods
mov
stos
jmp
mov
call
mov
je
mov
call
mov
je
mov
mov
mov
mov
mov
mov
mov
mov
pop
pop
pop
mov
mov
add
push
push
cmp
mov
jb
add
push
mov
call
jne
mov
mov
shl
sub
push
pop
lea
jmp
mov
add
call
jne
mov
mov
shl
push
pop
push
pop
lea
jmp
mov
add
push
pop
mov
mov
sub
inc
mov
call
mov
sub
jb
add
cmpl
jae
addl
mov
cmp
jb
push
pop
mov
shl
sub
inc
push
pop
lea
mov
call
mov
sub
jb
mov
mov
cmp
jb
mov
andl
shr
orl
dec
cmp
jae
mov
sub
mov
shlb
add
shl
add
mov
jmp
sub
call
shr
shll
cmp
jb
incl
sub
dec
jne
mov
add
mov
shll
push
pop
sub
inc
mov
mov
call
test
je
or
shl
dec
jne
jmp
incl
mov
add
mov
mov
sub
cmp
ja
mov
sub
mov
lods
stos
cmp
jae
dec
jne
mov
movzbl
cmp
jb
call
sub
lea
mov
mov
sub
mov
mov
mov
sub
mov
leave
pop
pop
pop
ret
pop
pop
sub
inc
jmp
cmp
jb
ret
shl
push
mov
cmp
jae
mov
shl
lods
mov
mov
sbb
sarb
xchg
jg
xchg
jo
sarb
mov
push
xor
mov
std
xchg
jp
pcmpgtd
ss
inc
mov
inc
ss
es
hlt
insl
jnp
pop
inc
mov
pop
pop
divl
mov
mov
ss
pop
packsswb
movsl
lds
jp
push
mov
xchg
jno
jge
jp
mov
mov
ss
pop
push
movsl
adc
jp
mov
push
pop
cmp
xchg
push
jge
jp
and
mov
mov
icebp
out
mov
xchg
int
out
divl
jb
xor
sub
jae
mov
xchg
or
jp
mov
sub
mov
mov
sub
mov
mov
sub
mov
mov
jmp
mov
lret
fildl
shl
mov
icebp
out
adc
and
sub
sub
xor
mov
mov
jp
jp
sub
cmc
sub
mov
mov
sub
jl
jp
xor
mov
xchg
add
jp
jmp
jnp
shrl
jbe
jp
sub
lcall
lods
mov
mov
divl
mov
mov
jg
cmc
xor
rcll
jnp
jnp
dec
mov
mov
frstor
jp
cmc
icebp
push
jnp
jnp
cmp
icebp
dec
jnp
jnp
cmp
icebp
cmp
jnp
xor
jmp
cmc
repnz
jp
xor
jmp
cmc
repnz
jp
xor
add
jmp
cmc
repnz
jp
test
jp
sub
inc
mov
stc
jg
jp
xor
cli
out
jge
jp
jb
xor
cli
out
jge
jp
jp
cmp
mov
lea
push
mov
mov
mov
add
push
pushl
push
call
pushl
xor
movl
movl
movl
movb
lea
stos
stos
stos
xor
movl
movl
movl
movb
lea
stos
stos
stos
mov
mov
mov
movl
movl
movw
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
call
push
mov
mov
pushl
call
test
jne
mov
mov
mov
add
mov
mov
mov
call
push
mov
call
test
jne
mov
mov
mov
add
mov
mov
mov
call
push
mov
call
mov
mov
xor
add
cmp
je
mov
xor
mov
sub
add
mov
cmp
ja
movl
pushl
mov
mov
mov
call
push
mov
mov
pushl
call
mov
mov
mov
mov
mov
mov
xor
lea
call
push
mov
mov
pushl
call
mov
mov
mov
mov
xor
lea
call
push
mov
mov
pushl
call
mov
mov
mov
xor
lea
call
push
mov
mov
pushl
call
andl
mov
mov
and
add
push
call
test
je
mov
push
xor
pop
div
add
movzbl
push
call
test
jne
mov
mov
mov
xor
lea
call
push
mov
mov
pushl
call
mov
jmp
andl
incl
cmpl
jb
mov
mov
xor
mov
add
lea
call
push
mov
mov
xor
add
lea
call
push
call
mov
xor
add
cmp
jne
movl
mov
mov
xor
lea
mov
mov
test
je
mov
mov
xor
lea
mov
mov
xor
mov
sub
add
mov
cmp
jbe
mov
mov
mov
cmp
jne
pushl
lea
push
call
mov
jmp
mov
mov
xor
add
xor
mov
mov
xor
add
cmp
je
mov
mov
xor
add
cmp
je
mov
xor
add
jmp
mov
mov
and
or
sub
add
mov
xor
lea
mov
cmp
jb
mov
mov
mov
movl
mov
mov
mov
mov
xor
add
mov
mov
xor
add
mov
movl
movl
mov
mov
xor
add
cmp
je
jmp
mov
mov
sub
mov
xor
add
xor
div
mov
mov
mov
xor
add
cmp
jbe
mov
xor
add
mov
mov
mov
xor
add
imul
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
add
movl
mov
movl
mov
movl
mov
mov
xor
add
jmp
movl
movl
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
xor
add
add
imul
add
mov
mov
mov
cmp
jb
mov
mov
xor
add
imul
mov
xor
add
or
mov
xor
add
mov
xor
add
mov
lea
jmp
mov
mov
xor
lea
mov
mov
xor
mov
sub
add
mov
mov
xor
add
imul
cmp
jbe
mov
mov
mov
mov
mov
xor
add
push
mov
xor
add
push
push
mov
mov
xor
add
push
call
mov
mov
xor
add
cmp
je
mov
jmp
mov
xor
mov
mov
mov
xor
lea
xor
mov
sub
xor
cmp
jne
mov
mov
mov
xor
add
push
mov
xor
add
push
pushl
call
mov
mov
mov
mov
mov
mov
mov
xor
add
movl
movl
jmp
mov
mov
xor
mov
movsbl
xor
sub
movzbl
cmp
jne
mov
xor
lea
xor
cmp
jne
jmp
mov
xor
add
mov
xor
add
cmp
je
mov
mov
movl
movl
movl
movl
mov
mov
mov
xor
add
push
mov
mov
xor
add
push
mov
xor
add
push
mov
xor
add
push
call
mov
mov
mov
mov
xor
add
push
mov
xor
add
push
mov
pushl
xor
add
push
call
mov
xor
add
mov
cmp
je
mov
xor
add
cmp
je
movl
movl
mov
xor
sub
mov
mov
xor
sub
mov
mov
xor
sub
mov
andl
andl
lea
push
pushl
push
lea
push
mov
pushl
mov
add
push
push
call
mov
mov
mov
mov
xor
add
push
mov
xor
add
push
push
call
mov
add
xor
cmp
mov
mov
mov
jne
xor
add
push
mov
xor
add
push
pushl
call
mov
mov
mov
mov
jmp
xor
add
push
mov
xor
add
push
pushl
call
mov
mov
mov
movl
mov
mov
mov
mov
xor
add
mov
mov
xor
add
mov
movl
movl
mov
mov
xor
add
cmp
je
jmp
mov
mov
sub
mov
xor
add
xor
div
mov
mov
mov
xor
add
cmp
jbe
mov
xor
add
mov
mov
mov
xor
add
imul
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
add
movl
mov
movl
mov
movl
mov
mov
xor
add
jmp
movl
movl
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
xor
add
add
imul
add
mov
mov
mov
cmp
jb
mov
mov
xor
add
imul
mov
xor
add
or
mov
xor
add
mov
xor
add
mov
lea
jmp
mov
mov
xor
lea
mov
mov
xor
mov
sub
add
mov
mov
xor
add
imul
cmp
jbe
pushl
mov
pushl
lea
push
mov
mov
pushl
mov
mov
pushl
pushl
pushl
call
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
xor
add
push
mov
xor
add
push
pushl
call
pop
pop
pop
leave
ret
push
mov
push
push
lea
mov
push
mov
mov
mov
mov
cmp
pop
jne
movb
movb
movb
movb
leave
ret
push
mov
push
push
lea
mov
mov
mov
mov
mov
cmp
jne
mov
movb
movb
movb
movb
leave
ret
push
mov
push
push
lea
mov
mov
mov
mov
mov
cmp
jne
movb
mov
movb
movb
leave
ret
push
mov
push
push
lea
mov
push
mov
mov
mov
mov
cmp
pop
jne
movb
movw
movb
leave
ret
push
mov
push
push
lea
mov
mov
mov
mov
mov
cmp
jne
mov
movb
movb
movb
leave
ret
push
mov
call
mov
mov
movb
call
push
mov
movb
call
push
movb
call
movb
mov
jmp
push
mov
push
mov
push
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
movl
mov
movzwl
xor
add
pop
test
je
mov
movl
leave
ret
push
mov
sub
andl
movl
movl
movl
movl
movl
mov
mov
mov
mov
push
push
mov
mov
mov
mov
mov
push
mov
test
jne
pushl
mov
call
mov
mov
add
mov
mov
mov
mov
xor
mov
add
cmp
jne
mov
mov
mov
mov
mov
mov
xor
add
mov
mov
andl
xor
add
mov
lea
push
mov
xor
add
push
mov
add
push
mov
mov
movl
pushl
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
mov
lea
mov
lea
push
mov
xor
add
push
mov
add
push
mov
mov
movl
pushl
mov
call
test
je
andl
cmpl
jbe
mov
mov
sub
mov
incl
mov
mov
inc
cmp
jb
mov
mov
add
mov
mov
add
sub
add
mov
mov
mov
movl
jmp
add
shr
mov
je
lea
mov
mov
mov
mov
movzwl
mov
and
mov
mov
shr
add
xor
cmp
jne
mov
add
mov
cmpl
je
mov
add
mov
mov
mov
mov
addl
decl
jne
mov
add
mov
cmp
jae
add
mov
mov
test
jne
mov
mov
movl
mov
mov
mov
xor
add
mov
lea
mov
lea
push
mov
xor
add
push
mov
add
push
mov
mov
pushl
mov
call
mov
mov
add
mov
pushl
mov
pushl
pushl
call
mov
add
lea
mov
mov
mov
mov
mov
mov
mov
cmp
jb
mov
mov
mov
lea
mov
add
cmp
jae
mov
mov
mov
sub
add
mov
mov
jmp
xor
pop
pop
pop
leave
ret
push
mov
sub
push
mov
mov
cmpl
je
test
je
test
je
mov
test
je
cmpl
je
cmp
je
mov
andl
mov
sub
add
movzwl
mov
movzwl
add
je
lea
push
mov
mov
push
test
je
mov
andl
and
add
movzwl
movzwl
add
je
lea
mov
test
je
mov
andl
and
add
movzwl
movzwl
add
je
lea
mov
mov
mov
test
je
mov
add
movzwl
movzwl
incl
addl
add
cmp
jb
movzwl
movzwl
mov
incl
add
add
mov
cmp
jb
mov
movzwl
movzwl
incl
add
add
mov
cmp
jb
pop
pop
xor
inc
jmp
xor
pop
leave
ret
push
mov
mov
mov
sub
push
xor
push
push
cmp
je
cmp
je
cmp
jne
xor
inc
jmp
mov
add
mov
mov
mov
mov
add
add
mov
cmp
ja
mov
mov
cmp
jbe
cmp
jae
movzwl
jmp
mov
lea
mov
test
je
add
mov
cmp
jbe
mov
mov
add
cmp
jae
mov
jmp
sub
mov
mov
test
je
mov
inc
mov
cmp
jb
jmp
xor
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
movl
mov
mov
mov
mov
mov
mov
push
mov
push
mov
movl
mov
mov
push
mov
xor
xor
add
add
mov
cmp
je
mov
mov
xor
add
cmp
je
mov
mov
xor
add
cmp
je
add
mov
mov
xor
add
mov
mov
cmp
je
mov
mov
imul
xor
add
cmp
jne
mov
mov
imul
xor
add
cmp
je
mov
mov
mov
imul
add
mov
add
xor
mov
mov
mov
xor
add
xor
mov
mov
add
add
cmp
je
add
mov
mov
xor
add
mov
lea
mov
movl
mov
pushl
mov
call
mov
xor
add
mov
cmp
jne
mov
pushl
mov
call
mov
movl
movl
mov
xor
add
cmp
jne
mov
mov
xor
xor
lea
mov
mov
add
imul
push
call
mov
xor
add
cmp
jne
mov
xor
add
cmp
jbe
mov
xor
add
cmp
jne
mov
mov
xor
lea
mov
jmp
movl
movl
mov
xor
add
jmp
mov
xor
add
mov
mov
xor
add
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
mov
mov
mov
xor
add
cmp
je
mov
mov
xor
add
shr
cmp
je
mov
mov
mov
movzwl
push
pushl
call
jmp
mov
add
mov
mov
add
push
pushl
call
mov
mov
mov
xor
add
cmp
mov
jne
mov
xor
lea
mov
jmp
mov
xor
add
imul
mov
mov
mov
xor
lea
mov
mov
xor
add
cmp
jne
mov
mov
mov
sub
xor
jmp
mov
xor
add
cmp
mov
jne
mov
jmp
mov
xor
add
pop
pop
pop
leave
ret
push
mov
sub
movl
movl
mov
mov
push
mov
mov
mov
mov
xor
mov
add
cmp
je
mov
mov
add
push
mov
movl
mov
mov
mov
xor
xor
add
cmp
je
mov
mov
add
mov
mov
sub
mov
xor
add
mov
cmp
je
mov
xor
add
mov
push
movl
jmp
mov
xor
lea
add
shr
cmp
jae
sub
lea
mov
movzwl
and
mov
mov
mov
sub
add
movzwl
shr
xor
mov
mov
mov
mov
xor
lea
mov
mov
mov
xor
add
cmp
jne
mov
mov
xor
add
cmp
jne
mov
mov
add
add
decl
jne
mov
add
mov
mov
mov
xor
cmp
jae
add
mov
mov
xor
add
mov
cmp
jne
pop
mov
pop
jmp
mov
xor
add
pop
leave
ret
push
mov
sub
movl
movl
mov
push
push
mov
xor
push
mov
add
mov
mov
xor
add
mov
mov
mov
mov
xor
mov
addl
mov
mov
xor
mov
addl
mov
mov
xor
mov
addl
mov
mov
xor
mov
addl
movl
mov
test
je
mov
test
je
mov
test
je
mov
mov
xor
add
cmp
jne
mov
xor
add
mov
mov
mov
mov
add
mov
mov
test
je
movl
mov
xor
add
mov
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
cmp
jne
mov
lea
push
mov
xor
add
push
pushl
pushl
call
mov
mov
mov
sub
add
push
call
mov
mov
mov
mov
pushl
pushl
push
call
mov
mov
add
movzwl
lea
mov
mov
movzwl
xor
add
mov
cmp
je
mov
xor
add
mov
mov
movzwl
xor
sub
sub
cmp
ja
mov
add
mov
jmp
mov
mov
lea
mov
mov
test
je
not
and
add
mov
add
push
call
mov
mov
mov
xor
add
cmp
je
push
mov
add
mov
add
push
push
call
mov
mov
mov
add
xor
lea
mov
mov
mov
movzwl
xor
sub
mov
sub
mov
cmp
jbe
mov
mov
cmp
jne
mov
lea
push
mov
xor
add
push
mov
pushl
push
call
test
je
mov
mov
mov
xor
add
je
mov
xor
add
andl
mov
mov
mov
movl
movl
mov
mov
mov
movl
mov
mov
xor
mov
add
mov
incl
cmpl
mov
jb
mov
mov
mov
mov
mov
lea
mov
mov
mov
movl
mov
mov
movl
movl
movl
movl
movl
mov
movl
mov
movl
mov
movl
mov
movl
movl
xor
mov
xor
sub
mov
inc
cmp
jb
mov
lea
push
call
mov
lea
push
push
call
mov
lea
push
mov
pushl
mov
call
mov
xor
add
mov
mov
mov
xor
add
cmp
je
mov
jmp
mov
mov
mov
mov
cmp
je
mov
mov
cmp
jne
mov
mov
cmp
jne
mov
mov
mov
add
mov
mov
xor
add
mov
mov
push
push
pushl
call
test
je
pushl
mov
pushl
call
test
je
mov
mov
mov
call
test
je
push
pushl
call
test
je
mov
mov
cmp
jne
mov
lea
push
pushl
mov
pushl
push
call
mov
mov
mov
xor
add
je
mov
mov
movl
mov
pushl
xor
pushl
add
or
add
push
call
movl
jmp
mov
mov
add
call
mov
mov
mov
mov
movl
cmpl
jne
andl
mov
jmp
xor
pop
pop
pop
leave
ret
push
mov
movzwl
movzwl
push
push
xor
lea
test
je
mov
lea
cmp
jb
mov
add
add
cmp
jb
add
inc
cmp
jb
xor
pop
pop
pop
ret
push
mov
sub
movl
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
push
mov
xor
push
mov
mov
add
push
cmp
je
mov
mov
xor
add
cmp
je
mov
xor
add
mov
mov
xor
add
mov
mov
mov
mov
xor
mov
xor
add
add
sub
mov
jmp
mov
mov
xor
add
cmp
je
mov
mov
xor
add
cmp
mov
mov
je
cmp
je
mov
mov
xor
add
cmp
jb
mov
mov
xor
add
cmp
ja
movzwl
movzwl
add
mov
mov
mov
xor
add
cmp
jb
mov
mov
xor
add
cmp
ja
movzwl
movzwl
add
mov
mov
mov
cmp
jne
mov
mov
xor
lea
mov
mov
mov
xor
lea
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
cmp
jne
mov
mov
xor
add
imul
mov
jmp
mov
mov
xor
lea
mov
mov
sub
xor
mov
mov
sub
xor
mov
mov
mov
xor
add
xor
add
imul
mov
movzwl
mov
mov
xor
add
xor
add
imul
mov
movzwl
sub
sub
xor
xor
cmp
jne
mov
mov
xor
add
xor
add
imul
mov
movzwl
mov
sub
xor
cmp
mov
je
mov
pop
xor
pop
add
pop
leave
ret
push
mov
push
mov
push
mov
sub
mov
xor
mov
movl
mov
cmp
je
push
push
movzwl
mov
mov
mov
cmp
jne
mov
lea
xor
mov
xor
mov
mov
sub
mov
xor
mov
cmp
jne
mov
pop
pop
cmp
je
xor
lea
pop
leave
ret
push
mov
push
push
push
movl
mov
call
mov
mov
add
xor
cmp
je
mov
mov
mov
push
mov
mov
sub
mov
xor
mov
cmp
jne
mov
lea
xor
mov
xor
lea
mov
add
xor
cmp
jne
mov
pop
cmp
je
xor
xor
mov
mov
pop
pop
leave
ret
push
mov
push
push
movl
mov
call
mov
mov
sub
mov
xor
mov
cmp
je
push
push
movzwl
mov
mov
mov
cmp
jne
mov
lea
xor
mov
xor
mov
mov
sub
mov
xor
mov
cmp
jne
cmpl
pop
pop
je
xor
inc
jmp
xor
pop
leave
ret
push
mov
push
mov
movzwl
push
lea
mov
push
xor
mov
mov
cmp
je
mov
sub
mov
jmp
mov
mov
add
movzwl
mov
add
xor
mov
cmp
jne
xor
pop
mov
mov
pop
leave
ret
push
mov
sub
movl
movl
mov
push
mov
xor
mov
add
mov
movl
movl
push
movl
jmp
mov
mov
sub
mov
xor
add
cmp
jbe
mov
add
mov
add
mov
mov
mov
mov
mov
jmp
mov
mov
sub
mov
xor
add
cmp
mov
jbe
add
mov
add
mov
mov
mov
jmp
mov
sub
mov
xor
add
cmp
mov
jbe
add
mov
add
mov
mov
mov
mov
xor
lea
mov
jmp
add
mov
add
mov
mov
incl
mov
mov
xor
add
imul
mov
mov
xor
lea
cmp
jb
pop
pop
leave
ret
push
mov
sub
movl
push
mov
movl
mov
mov
xor
mov
add
cmp
je
push
push
mov
mov
xor
mov
sub
add
lea
xor
mov
mov
mov
xor
sub
xor
mov
mov
xor
add
cmp
jne
pop
pop
pop
leave
ret
push
mov
sub
movl
movl
mov
mov
mov
push
push
mov
xor
mov
add
cmp
mov
jne
xor
add
jmp
mov
xor
add
cmp
jne
mov
jmp
lea
mov
mov
mov
mov
xor
add
mov
mov
push
call
mov
mov
mov
jmp
mov
sub
mov
mov
mov
call
mov
pushl
mov
call
mov
xor
add
cmp
jne
mov
call
mov
xor
add
push
pushl
mov
call
mov
xor
add
cmp
je
mov
mov
mov
mov
mov
add
cmp
jne
mov
xor
add
pop
pop
pop
leave
ret
mov
mov
jmp
push
mov
mov
sub
cmpl
push
push
push
je
test
je
movzwl
mov
mov
xor
and
mov
xor
add
mov
andl
xor
push
pop
cmp
jae
lea
xor
movzwl
mov
lea
cmp
jne
movzwl
mov
cmp
jne
mov
movzwl
cmpb
je
mov
movzwl
movsbw
mov
sub
xor
cmp
je
push
pop
incl
mov
cmp
jb
jmp
incl
push
pop
mov
movzwl
cmpb
je
inc
cmp
jne
xor
pop
pop
pop
leave
ret
mov
add
xor
xor
cmp
sete
jmp
push
mov
sub
push
mov
mov
cmpl
jne
xor
jmp
pushl
push
pop
call
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
push
mov
mov
call
push
mov
pushl
call
mov
test
je
mov
push
push
mov
add
mov
mov
mov
mov
add
mov
mov
add
add
mov
mov
mov
cmp
ja
mov
xor
mov
cmp
jbe
jmp
mov
mov
movzwl
cmp
jae
cmp
jae
mov
mov
mov
mov
lea
add
add
sub
movl
mov
mov
cmpl
jne
mov
pushl
push
call
mov
test
je
mov
mov
mov
addl
decl
jne
mov
inc
mov
cmp
jb
pop
pop
pop
leave
ret
push
mov
mov
push
pushl
lea
mov
call
mov
mov
mov
xor
cmp
pop
setne
mov
pop
ret
mov
push
jmp
xor
add
mov
add
add
movzwl
mov
cmp
jne
xor
mov
mov
pop
ret
push
mov
mov
shl
add
jmp
xor
sub
mov
inc
inc
mov
cmp
jne
movb
mov
add
pop
ret
push
mov
sub
movl
movl
mov
mov
movl
push
push
movl
mov
mov
mov
xor
mov
xor
add
add
imul
jmp
mov
mov
xor
xor
add
add
test
mov
mov
je
xor
xor
add
add
shr
mov
xor
add
xor
jmp
xor
xor
add
add
shr
mov
mov
xor
lea
mov
mov
xor
xor
sub
cmp
jbe
mov
pop
mov
mov
pop
leave
ret
push
mov
sub
push
mov
mov
lea
push
mov
mov
mov
mov
push
xor
mov
add
cmp
je
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
movl
mov
mov
mov
movl
mov
xor
mov
sub
sub
mov
mov
movl
jmp
mov
mov
xor
xor
lea
mov
xor
div
mov
mov
xor
xor
sub
cmp
jne
mov
mov
mov
mov
mov
xor
xor
add
add
cmp
jae
lea
mov
mov
xor
add
lea
mov
mov
cmp
jbe
addl
jmp
addl
mov
xor
inc
incl
add
cmp
jb
mov
cmpl
jne
xor
sub
jmp
mov
xor
mov
sub
add
mov
xor
sub
ror
xor
mov
mov
mov
mov
mov
sub
xor
cmp
jne
mov
mov
xor
xor
sub
mov
sub
xor
mov
mov
xor
sub
sub
jmp
mov
xor
mov
sub
add
mov
mov
cmp
jne
mov
jmp
mov
xor
add
pop
pop
pop
leave
ret
push
mov
sub
movl
movl
movl
push
movl
mov
push
mov
push
xor
mov
add
mov
movl
movl
movl
mov
mov
mov
xor
xor
add
add
imul
jmp
mov
sub
xor
mov
lea
call
mov
mov
mov
mov
mov
mov
xor
lea
mov
mov
mov
xor
xor
sub
mov
cmp
jbe
mov
xor
add
mov
movl
mov
jmp
mov
mov
xor
add
shr
mov
mov
mov
mov
mov
mov
movzbl
xor
mov
mov
mov
xor
add
and
mov
mov
xor
mov
mov
xor
lea
mov
mov
xor
mov
sub
add
mov
mov
mov
xor
add
cmp
jne
mov
mov
xor
add
pop
pop
xor
pop
leave
ret
push
mov
mov
mov
mov
mov
mov
sub
push
push
push
mov
xor
mov
add
cmp
jne
orl
jmp
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
mov
mov
movl
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
mov
xor
add
mov
mov
xor
add
mov
mov
mov
sub
mov
mov
mov
mov
dec
test
mov
je
mov
mov
mov
dec
not
and
mov
mov
add
jmp
mov
mov
mov
xor
add
mov
mov
xor
add
mov
mov
mov
xor
add
mov
mov
movl
movl
movl
mov
mov
xor
add
imul
mov
mov
xor
lea
cmp
jae
mov
xor
add
mov
mov
add
mov
pushl
mov
mov
call
mov
movl
mov
xor
lea
add
push
call
mov
test
je
mov
xor
add
push
pushl
lea
push
call
mov
mov
mov
mov
sub
mov
mov
mov
mov
add
mov
cmp
jb
mov
mov
mov
add
mov
sub
jmp
push
pushl
lea
push
call
mov
mov
movl
movl
movl
lea
mov
lea
mov
lea
mov
lea
mov
mov
xor
add
mov
jmp
cmp
je
mov
xor
mov
add
mov
mov
xor
lea
mov
mov
mov
xor
add
cmp
jne
mov
xor
add
push
push
lea
push
call
mov
mov
xor
mov
mov
xor
movzbl
add
cmp
je
mov
mov
xor
mov
mov
xor
movzbl
add
cmp
je
mov
mov
xor
mov
mov
xor
movzbl
add
cmp
je
mov
mov
xor
mov
mov
xor
movzbl
add
cmp
je
mov
mov
xor
mov
mov
mov
xor
mov
xor
mov
mov
xor
mov
or
mov
mov
xor
mov
cmp
jne
mov
mov
xor
mov
mov
mov
xor
mov
xor
mov
mov
xor
mov
or
mov
mov
xor
mov
cmp
jne
mov
mov
xor
mov
mov
mov
xor
mov
xor
mov
mov
xor
mov
or
mov
mov
xor
mov
cmp
jne
mov
mov
xor
mov
mov
mov
xor
mov
xor
mov
mov
xor
mov
or
mov
mov
xor
mov
cmp
jne
lea
push
call
mov
cmp
je
mov
xor
add
mov
mov
xor
lea
xor
mov
mov
xor
add
cmp
je
mov
mov
xor
add
cmp
jne
mov
mov
xor
lea
jmp
push
pushl
lea
push
call
mov
mov
xor
add
cmp
je
mov
xor
add
push
push
lea
push
call
mov
add
mov
pushl
pushl
mov
add
push
call
mov
mov
xor
add
cmp
je
push
pushl
mov
add
push
call
mov
mov
add
mov
add
mov
mov
mov
xor
add
imul
mov
mov
xor
lea
cmp
jb
mov
mov
mov
jmp
mov
mov
xor
xor
add
add
cmp
jne
mov
imul
mov
jmp
mov
xor
add
cmp
je
subl
jmp
andl
pop
pop
pop
leave
ret
push
mov
and
mov
sub
push
mov
push
push
cmp
jne
push
jmp
mov
cmp
jne
push
jmp
mov
cmp
jne
push
jmp
mov
cmp
jne
push
jmp
mov
mov
cmp
jne
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
mov
add
mov
mov
mov
mov
mov
mov
mov
add
mov
mov
mov
push
push
pushl
push
call
mov
mov
pushl
xor
add
mov
lea
push
push
pushl
pushl
pushl
call
mov
mov
xor
add
cmp
je
mov
mov
xor
add
imul
mov
jmp
mov
cmp
jne
push
jmp
mov
cmp
jne
push
jmp
mov
cmp
jne
push
pushl
pushl
push
pushl
pushl
pushl
call
mov
mov
pop
pop
pop
mov
pop
ret
push
mov
sub
mov
mov
movl
mov
xor
add
mov
mov
push
mov
pushl
lea
pushl
push
pushl
pushl
pushl
call
mov
mov
leave
ret
