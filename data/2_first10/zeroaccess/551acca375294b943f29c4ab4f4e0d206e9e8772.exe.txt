push
mov
sub
push
orl
push
xor
addl
inc
adcl
push
decl
push
notl
call
test
je
lea
push
adcl
call
movl
jmp
orl
push
orl
mov
subl
push
addl
push
subl
call
test
je
subl
lea
subl
push
sbbl
call
movl
jmp
push
mov
or
mov
mov
addl
push
orl
push
adcl
push
call
andl
test
jne
sbbl
push
movl
push
call
incl
test
movl
jne
subl
push
addl
push
call
andl
test
movl
jne
orl
push
push
sbbl
call
xorl
test
movl
jne
movl
push
push
push
adcl
call
test
movl
je
lea
subl
push
adcl
call
movl
jmp
subl
push
push
andl
push
orl
call
test
movl
je
xorl
push
xorl
push
andl
call
test
movl
jne
movl
push
push
call
test
jne
push
push
call
orl
test
movl
jne
addl
push
push
push
xorl
call
subl
test
movl
jne
push
andl
push
orl
push
subl
call
xorl
test
movl
jne
orl
push
push
call
test
jne
movl
push
push
andl
call
test
movl
jne
push
push
call
test
jne
orl
push
sbbl
push
andl
push
addl
call
movl
test
movl
jne
orl
push
addl
push
adcl
push
call
test
movl
jne
addl
push
push
movl
call
sbbl
test
jne
adcl
push
sbbl
push
orl
call
xorl
test
movl
jne
push
push
addl
call
test
jne
push
push
orl
push
call
test
movl
jne
orl
push
subl
push
xorl
push
andl
call
test
movl
jne
push
adcl
push
movl
call
xorl
test
movl
jne
push
adcl
push
orl
call
addl
test
movl
jne
subl
push
sbbl
push
adcl
call
movl
test
movl
jne
adcl
push
push
push
call
adcl
test
jne
sbbl
push
orl
push
movl
push
addl
call
adcl
test
movl
jne
addl
push
push
call
test
jne
push
subl
push
xorl
call
subl
test
movl
jne
adcl
push
negl
push
call
xorl
test
jne
subl
push
notl
push
orl
push
call
test
movl
jne
sbbl
push
push
negl
push
sbbl
call
xor
jmp
mov
mov
sub
xor
movl
mov
mov
mov
neg
mov
mov
sub
mov
movl
xor
add
xor
add
sub
and
lea
andl
mov
movl
cmpl
je
cmpl
jne
pushl
push
push
pushl
call
mov
dec
mov
jmp
mov
xor
xor
sub
add
lea
mov
mov
mov
sub
imul
mov
movzbl
and
mov
mov
mov
xor
mov
mov
and
mov
or
xor
andl
mov
inc
mov
cmpl
jne
pushl
pushl
push
push
call
cmpl
jb
mov
add
movl
mov
movl
mov
movl
cmp
jne
mov
sub
mov
mov
mov
adc
mov
xor
xor
sbbl
add
or
mov
mov
andl
mov
inc
mov
cmpl
jne
call
cmpl
jb
xor
add
add
mov
mov
andl
mov
orl
mov
sbb
mov
sbb
mov
neg
mov
andl
mov
inc
mov
cmpl
jne
call
cmpl
jne
mov
inc
mov
cmpl
jb
movzwl
and
mov
mov
sub
mov
mov
mov
decl
movl
mov
adc
mov
addl
xor
add
movl
jmp
and
mov
mov
sbbl
xor
orl
lea
orl
push
mov
movl
xor
adcl
lea
orl
push
sbb
mov
pushl
andl
call
mov
or
mov
neg
xor
movzbl
add
lea
mov
sbbl
mov
sbbl
xor
xorl
xor
add
mov
xor
lea
movl
mov
cmp
jbe
mov
adc
mov
mov
mov
or
mov
mov
or
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
jmp
movl
mov
adcl
mov
movl
cmpl
je
cmpl
jne
push
call
mov
dec
mov
jmp
neg
mov
sub
xor
mov
mov
movl
cmp
jne
lea
mov
lea
orl
mov
xor
mov
test
movl
je
mov
mov
sbb
mov
or
mov
xor
mov
subl
mov
movl
cmpl
je
cmpl
jne
call
cmpl
jne
xor
add
dec
mov
xor
xor
dec
mov
jmp
mov
mov
movl
cmpl
je
cmpl
jne
pushl
push
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
cltd
inc
mov
mov
adc
mov
mov
and
add
movl
adc
andl
orl
xor
mov
adc
mov
sbb
mov
mov
add
xor
add
mov
mov
adcl
xor
mov
or
mov
xorl
xor
mov
movl
cmp
movl
jne
movl
mov
cmp
movl
je
mov
andl
mov
addl
mov
xor
adcl
add
movl
adc
andl
xor
andl
xor
movl
cmp
movl
jne
cmp
jne
mov
add
mov
andl
mov
adcl
xor
sub
mov
sbbl
mov
mov
addl
add
jmp
mov
movl
cmp
je
movzbl
sub
mov
mov
add
mov
xorl
xor
subl
add
cmp
movl
je
andl
mov
inc
mov
cmpl
jne
push
call
cmpl
jb
adc
mov
or
mov
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
push
call
jmp
mov
notl
pushl
mov
orl
pushl
orl
add
sub
mov
mov
sbbl
pushl
xorl
call
mov
mov
mov
mov
movl
jmp
addl
mov
mov
xor
add
cmp
jne
mov
mov
mov
xor
add
cmp
jne
mov
push
xor
add
push
push
pushl
pushl
call
mov
mov
mov
mov
mov
xor
add
mov
mov
mov
mov
mov
mov
mov
movl
mov
xor
add
mov
mov
mov
mov
mov
mov
push
pop
sub
add
movl
mov
mov
mov
mov
mov
mov
mov
xor
add
mov
lea
mov
mov
xor
add
mov
lea
push
mov
xor
add
push
mov
push
pushl
call
mov
mov
mov
mov
xor
mov
add
jmp
lea
mov
mov
sub
mov
mov
mov
mov
movl
mov
movl
mov
xor
add
mov
mov
xor
add
mov
movl
movl
mov
mov
xor
add
cmp
je
mov
xor
mov
sub
add
mov
mov
xor
add
imul
cmp
ja
mov
mov
mov
sub
xor
xor
add
div
mov
mov
mov
xor
add
cmp
jbe
mov
xor
add
mov
mov
mov
xor
add
imul
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
add
movl
mov
mov
mov
movl
movl
mov
mov
xor
add
jmp
movl
movl
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
xor
add
add
imul
add
mov
mov
mov
cmp
jb
mov
mov
xor
add
imul
mov
xor
add
or
mov
xor
add
mov
xor
add
mov
lea
jmp
mov
mov
xor
lea
mov
jmp
mov
mov
xor
lea
lea
xor
cmp
jne
mov
mov
mov
xor
mov
xor
mov
xor
mov
mov
xor
mov
mov
mov
xor
add
mov
mov
xor
add
mov
lea
mov
lea
mov
mov
test
je
movl
movl
movl
movl
call
mov
mov
mov
mov
mov
mov
mov
mov
cltd
mov
mov
add
adc
andl
xor
mov
mov
mov
mov
xor
add
mov
adcl
xor
mov
mov
xor
mov
cmp
jne
mov
cmp
je
mov
mov
mov
xor
add
adc
xor
xor
cmp
jne
cmp
jne
mov
mov
xor
mov
mov
mov
add
mov
mov
mov
xor
mov
add
xor
add
adc
xor
xor
xor
add
adc
xor
xor
cmp
jne
cmp
jne
mov
mov
mov
push
add
push
lea
push
call
mov
mov
pop
pop
pop
leave
ret
xor
sbbl
inc
ret
push
mov
sub
mov
andl
mov
inc
mov
cmpl
jne
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
movl
movzbl
add
mov
notl
push
and
mov
movzbl
sbb
xor
xor
mov
push
or
mov
negl
add
movl
cmp
je
mov
orl
mov
andl
xor
xor
add
orl
add
adc
xor
mov
mov
mov
xor
push
movl
cmpl
je
cmpl
jne
pushl
pushl
call
cmpl
jne
xor
xor
dec
mov
mov
dec
mov
jmp
xor
xor
mov
add
adc
xor
xor
cmp
jne
cmp
je
jmp
mov
mov
mov
xor
add
mov
imul
mov
xor
add
mov
mov
mov
mov
xor
xor
add
adc
lea
xor
xor
xor
mov
add
adc
xor
xor
cmp
jne
cmp
jne
mov
pop
pop
pop
leave
ret
push
mov
push
movl
movl
cmpl
je
cmpl
jne
push
call
mov
dec
mov
jmp
or
mov
adc
movsbl
and
mov
andl
sub
movl
cmpl
je
cmpl
jne
push
push
pushl
pushl
pushl
push
push
pushl
push
push
push
pushl
push
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
xor
cmp
jne
mov
push
mov
add
mov
mov
mov
xor
add
cmp
pop
je
mov
jmp
mov
xor
add
leave
ret
push
mov
sub
xor
xor
xor
movl
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
push
push
call
cmpl
jne
xor
add
inc
mov
jmp
not
push
movl
mov
addl
push
mov
xorl
xor
sbbl
push
movl
cmpl
je
cmpl
jne
push
push
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
orl
add
adcl
mov
movzbl
xor
mov
mov
test
jmp
lret
int
outsl
cmp
jae
and
jl
jl
pop
jl
adc
and
popa
pusha
gs
insb
insl
xor
fdivrp
push
arpl
stos
jp
push
iret
pop
dec
cmp
dec
jg
mov
jmp
cld
imul
xor
mov
andl
push
mov
fldl
or
and
inc
push
and
mov
sub
mov
jbe
ret
sbb
jb
jnp
xchg
pop
cmpl
cwtl
je,pt
add
sub
push
sti
iret
mov
or
out
push
dec
push
cmp
xor
lods
inc
int3
cmpsl
dec
fiaddl
push
std
push
push
movsl
icebp
bound
cmp
lcall
inc
cmp
int3
xchg
sbb
shlb
cmp
and
ss
and
cmp
lret
push
mov
int3
push
iret
in
and
pop
mov
push
fcmovnb
mov
mov
outsl
xor
movsl
clc
push
mov
lcall
sbb
add
mov
xchg
pusha
popa
cmpsl
jns
je
add
inc
lea
push
aas
add
fs
fabs
cmc
repz
shll
add
push
cmp
ficompl
jge
xchg
inc
mov
and
mov
jne
mov
sub
mov
es
loop
pop
out
mov
data16
sub
es
sub
cmp
cmc
jge
xchg
and
sub
mov
xor
out
int
cwtl
mov
rcl
mov
mov
jl
push
sahf
loope
mov
sbb
data16
dec
sarl
add
repz
push
mov
mov
test
psubb
xlat
cs
cmpsb
sub
and
pop
cwtl
xchg
and
inc
fidivl
pop
imul
pop
pop
or
int
mov
jno
rorl
jb
or
pop
sar
into
mov
dec
jae
lea
aam
mov
xor
mov
ljmp
ffree
and
shll
aas
fwait
jle
sbb
test
outsl
leave
jmp
fsubs
cmpsl
inc
cld
mov
arpl
lret
push
fsubp
jmp
cmpsl
mov
jno
sub
fnstcw
inc
xlat
pop
lea
jns
dec
in
jg
in
xchg
inc
pop
push
jb
jle
jmp
mov
xchg
shll
mov
cmpb
jecxz
cs
pop
ss
dec
aam
insl
xchg
adc
push
cmp
xchg
mov
jnp
ret
push
sub
xchg
adc
das
mov
and
sub
or
pop
aas
push
sbb
xchg
sbb
mov
adc
ja
push
xchg
xor
and
arpl
push
push
outsl
in
mov
jae
call
clc
jb
insb
xchg
adc
je
push
stos
outsb
pop
inc
pop
out
and
mov
ja
jbe
dec
xor
pop
mov
loope
lea
push
fcmovb
mov
or
sub
rcrb
xor
pop
mov
sub
pop
addl
sub
pop
loope
loopne
or
dec
mov
mov
out
shlb
sbb
test
or
test
testb
iret
cmc
mov
mov
mov
dec
fcoml
push
pop
push
or
ret
sahf
mov
or
jge
add
sub
mov
mov
ret
dec
mov
cmp
addr16
adc
mov
rolb
xorl
xor
js
adc
rcrb
lret
popl
or
xlat
mov
pop
sbb
pop
mov
pop
lret
fsts
jmp
stos
jl
fcomps
cmpsl
imul
or
pop
rolb
ret
dec
addb
dec
lods
and
imul
or
pop
mov
jae
add
push
fs
int3
mov
cmp
aad
stos
fsubr
and
loope
aas
mov
xor
jno
ret
sbb
cmp
leave
inc
mov
and
xchg
mov
dec
out
mov
or
rorb
sub
and
xchg
imul
jle
and
stos
push
add
push
icebp
cmpsb
xchg
add
xorb
mov
jo
clc
cmpsl
push
inc
xchg
push
shlb
insb
lea
jns
xor
cmp
int3
xlat
shl
push
insb
imull
push
sahf
and
pop
adc
sbb
ror
ds
mov
jbe
adc
inc
sub
or
or
in
mov
lcall
aas
dec
xor
jl
cmpsl
xchg
push
rolb
les
or
xchg
or
push
lods
fwait
mov
mov
pop
cmp
icebp
je
rcrl
in
mov
add
fdivrp
lods
sarb
xlat
lahf
cmp
bound
sbb
pushf
dec
or
and
test
ret
ret
movsb
and
movsb
xlat
mov
push
jno
xor
push
lds
push
bound
cmp
outsl
xlat
ss
mov
xlat
adc
es
or
mov
in
inc
out
cltd
stc
sbb
lds
inc
xchg
mov
aas
int3
xor
cvtps2pi
inc
ja
iret
nop
push
fwait
cmp
adc
stos
data16
cmp
pop
xchg
mov
out
cmp
mov
inc
mov
mov
cwtl
rorb
es
pop
inc
popf
lea
dec
push
pop
jbe
lret
shrl
cmpsl
insl
shlb
je
xchg
sahf
repnz
jno
mov
jae
dec
inc
or
in
or
add
pushf
in
lds
lret
imul
or
sub
sbb
ret
sbb
jns
mov
ds
mov
hlt
into
jb
jle
and
adc
jmp
adc
adc
adc
inc
stos
push
cmpl
imul
lods
xchg
sti
or
sub
push
mov
sub
dec
in
adc
ja
or
dec
jmp
in
or
rorl
dec
xchg
sbb
add
dec
mov
sbb
fstpl
mov
in
repnz
orl
rcrl
out
sub
push
hlt
mov
lcall
jmp
push
movsl
xor
movsl
dec
pop
daa
jno
insl
loopne
adc
inc
xlat
mov
sbb
nop
push
std
sub
daa
les
lcall
sahf
xlat
dec
ja
rcrl
mov
dec
cmc
popa
add
push
xchg
arpl
push
or
and
add
stos
pushf
push
mov
mov
xor
fbld
js
mov
cmc
shll
pop
addr16
es
in
xor
add
jne
cmpsl
cmp
daa
insl
sahf
xchg
adc
movsb
aam
repz
xchg
js
or
daa
popf
pop
mov
rcll
mov
orl
lret
inc
daa
pop
pop
std
enter
into
sbb
dec
cltd
jno
pop
inc
inc
inc
in
and
xchg
rorl
sbb
sub
dec
push
push
xor
test
xchg
sub
jns
ret
jmp
fnstsw
xor
push
test
loopne
mov
fcmove
xchg
stc
mov
rorl
mov
xor
aad
and
and
sub
lock
outsb
jmp
xchg
pop
ret
dec
enter
xor
add
and
cmc
sbb
mov
sub
lock
shl
shrb
ror
out
lds
xchg
inc
outsl
add
sbb
lods
add
jno
jns
dec
sbb
insb
sub
sbb
std
push
or
inc
push
mov
push
push
xor
shrl
ljmp
cmpb
lret
xchg
test
or
ljmp
lret
pop
push
sbb
jne
pop
sarl
repz
cmp
xchg
add
pop
cmpl
in
jg
movsl
jno
sbb
xlat
jbe
sub
or
mov
dec
aas
lahf
rcll
pop
xor
and
aad
xor
or
aaa
xchg
push
cmp
mov
fdivp
and
inc
mov
cli
sarl
push
lods
fsubl
lock
pop
mov
cmpsl
test
lcall
insl
call
cmpsb
fcmovnb
fisubrl
cltd
testl
jge
add
movsl
cs
push
or
sbb
rolb
cmpsl
pusha
jbe
stos
inc
inc
push
xchg
mov
dec
pop
rorb
jle
and
pmaxsw
adc
mov
js
xchg
or
inc
xor
xchg
addl
cmp
sbb
jo
sti
and
xchg
daa
or
add
ret
cmp
jno
xor
js
rcrb
out
test
cmp
push
xchg
dec
or
dec
outsb
xchg
mov
mov
lret
bound
stos
jle
xchg
push
nop
sub
aas
adc
xchg
xchg
push
or
cmp
fwait
testl
sbb
adc
sbb
jnp
xchg
mov
inc
sub
int3
mov
fdivrp
fistl
push
jns
jbe
shrb
jge
or
into
rcrb
hlt
insl
push
push
addr16
int
scas
mov
add
dec
sbb
sbb
or
movsb
adc
adc
frstor
jl
inc
xchg
mov
dec
addr16
in
std
and
push
pop
pop
sbb
ret
or
mov
inc
dec
mov
sub
nop
mov
xchg
push
daa
dec
subl
jnp
mov
out
sub
xor
pop
insl
cmc
std
shll
loope
sub
ds
dec
inc
divb
xchg
dec
jb
dec
sbb
pop
fucomi
imulb
out
push
lock
lret
fistps
popf
mov
gs
adc
push
rclb
pop
out
bound
jne
mov
fidivs
mov
mov
mov
test
jns
or
sti
push
std
push
sbb
cltd
jmp
jg
outsl
pop
or
in
insl
add
sbb
lcall
sar
addl
add
sbb
and
pop
pop
pop
cmp
dec
or
xchg
and
in
shrl
imul
add
mov
mov
leave
pop
push
lds
test
pop
jae
mov
nop
or
in
dec
icebp
pop
sub
pushf
imul
jno
andb
test
in
movsl
scas
dec
sti
inc
fisttpll
pop
xchg
test
sub
js
jae
cmp
sbb
ret
shll
fstl
or
xchg
adc
sarb
inc
movsl
jne
jecxz
pusha
cmp
enter
enter
clc
adc
hlt
xor
mull
scas
mov
daa
adc
aad
sub
pop
jo
repnz
leave
out
jo,pn
mov
sbb
scas
pop
push
mov
call
or
test
push
pop
jnp
jne
aas
inc
and
sbb
pop
dec
sbb
clc
into
dec
dec
xor
push
mov
divl
gs
adc
adcl
je
inc
gs
dec
lock
push
pushf
cmp
int
mov
dec
add
addr16
adc
push
out
ds
scas
iret
test
pusha
jl
orl
push
jge
inc
cmp
jmp
test
insl
mov
xor
cmpsl
and
cmpsb
xor
sub
lret
mov
add
fcomp
loop
scas
xchg
xchg
xchg
push
imul
divl
loope
jecxz
pop
cmp
aam
lahf
aaa
jge
fcmovne
pushf
das
inc
jo
mov
movsl
mov
in
mov
adc
or
jo
sbb
aam
mov
jno
sbb
sbb
repnz
iret
sub
jl
sahf
pushf
loope
dec
push
repnz
int
out
or
mov
clc
mov
pushf
cld
insb
sbb
mov
iret
and
sub
xor
mov
test
aam
daa
pop
test
inc
rcrb
dec
mov
adc
popf
and
clc
imul
xchg
rorl
outsb
das
fcmovb
sub
sub
in
in
int3
out
icebp
cmpsb
fstl
lahf
lcall
inc
mov
xchg
pop
push
lods
add
repnz
jecxz
or
repnz
enter
jle
out
xchg
cs
je
pop
ja
in
incb
mov
lahf
jns
mov
cltd
lods
clc
imul
xchg
sar
dec
inc
loop
loope
ret
loope
scas
sbb
test
pop
push
add
addr16
push
lods
scas
lea
jo
jbe
xchg
cwtl
fisttps
and
lahf
out
in
daa
mov
sbb
jne
mov
nop
inc
mov
std
push
fwait
outsl
xchg
in
and
pop
scas
lods
xor
push
sbb
adc
adc
mov
cmp
and
cmp
out
pop
int3
add
push
imul
adc
in
int3
pop
sti
mov
ljmp
imul
cli
movsb
xor
mulb
pop
sbb
imul
push
mov
add
mov
xor
mov
xchg
and
jae
jg
adc
mov
mov
pop
jecxz
stos
in
dec
xchg
cltd
inc
inc
fists
les
rcrl
scas
shrb
aas
and
dec
mov
dec
lods
test
ja
movb
imul
xchg
imul
insb
aas
outsb
int
pop
out
inc
push
out
subl
add
rorl
push
in
pop
int3
lcall
pop
xchg
out
daa
sub
mov
jmp
loope
and
lods
js
add
les
pop
int
pop
dec
xchg
std
xor
cmc
lods
sub
lods
or
out
sbb
in
call
and
pop
adc
add
pop
dec
push
cmp
mov
out
xchg
xchg
pusha
jns
fs
adc
ds
nop
mov
je
lods
adc
jge
mov
cmp
inc
push
and
jae
sahf
jne
jo
out
hlt
lods
pop
fisttps
jne
lods
stc
pop
sbb
lcall
mov
cltd
das
jge
push
mov
lahf
adc
aam
jecxz
lods
sub
arpl
iret
data16
mov
in
inc
aam
push
mov
out
dec
js
xor
xor
mov
fsubs
in
mov
imul
xor
and
inc
sub
add
pop
xchg
lea
mov
int
sbb
pop
arpl
cmp
ret
cli
andl
flds
shlb
in
inc
pop
inc
and
dec
mov
js
andb
or
cmp
int3
sub
jle
jecxz
cmc
shll
add
in
in
in
rclb
lret
fimuls
lahf
xchg
sbb
push
dec
push
scas
xchg
rcll
ljmp
pop
decl
pop
add
shrl
mov
pop
mov
sahf
call
fld
stc
adc
sbb
add
jmp
cmp
jae
cmp
stc
xchg
pusha
jl
je
sub
inc
jno
out
cmc
fcomps
fs
ja
out
jb
jmp
xchg
into
jo
pop
adc
jno
xlat
sbb
repz
mov
sbb
cltd
xchg
jae
mov
jbe
push
mov
xor
sbb
ficomps
daa
push
jmp
sbb
in
sub
mov
popa
jl
add
out
mov
mov
fisubs
sub
or
fstpt
lods
int3
inc
and
stc
jb
push
fnsave
dec
jl
lcall
stos
rorb
push
sub
mov
aas
nop
push
ja
aaa
out
mov
mov
leave
sub
pushl
out
mov
insb
mov
mov
mov
add
and
stos
pushf
jo
sub
pop
mov
push
inc
mov
icebp
cli
imul
inc
mov
fists
xchg
jns
adc
adc
repz
decb
xor
mov
aas
aad
out
sti
mov
pop
pop
mov
and
dec
neg
aad
inc
xor
fldt
hlt
les
dec
enter
call
cltd
mov
push
jecxz
jb
xor
xchg
lret
cmp
pop
aas
jae
dec
jecxz
xchg
mov
xor
push
lea
pop
cli
cmp
flds
dec
sahf
ss
push
roll
xchg
movsb
outsl
popf
cltd
leave
mov
dec
loope
stos
pop
push
mov
sub
lock
adc
inc
push
or
add
imul
xor
push
cwtl
sub
cmp
fisttpll
mov
cmpsl
sbb
add
imul
outsb
sub
mov
mov
sub
jle
push
sub
dec
loopne
pop
xchg
push
fwait
aas
jno
mov
jae
out
insb
jnp
mov
sub
out
mov
in
or
test
ds
int3
sub
popl
cmc
cmpsl
mov
rcll
pop
cmovo
jns
insl
inc
mov
arpl
es
adc
xor
cmp
sbb
inc
arpl
shlb
mov
fwait
lret
xchg
lods
clc
repnz
das
mov
mov
jne
xchg
std
sbb
inc
push
shll
mov
lods
jg
lods
mov
mov
push
popa
inc
or
ficomps
mov
rcrb
fiadds
mov
loopne
pop
mov
inc
lds
or
mov
xchg
icebp
out
cmp
mov
rorl
insl
stos
jle
push
inc
or
jb
and
mov
fs
lcall
mov
fiaddl
das
andl
ret
out
cmp
into
ret
push
mov
mov
loop
pushf
sahf
leave
fnstcw
daa
fcoml
inc
jge
xchg
sub
jp
hlt
sub
inc
pop
jae
andb
imul
push
sub
lods
cli
mov
push
mov
call
popa
dec
dec
mov
push
cmp
aaa
pop
add
sarl
std
sub
cmpsb
das
mov
lds
sbbb
rcl
cmp
popf
xor
gs
stos
xor
lret
rcrb
lahf
adc
sbb
mov
or
adc
jno
and
sti
scas
test
jle
pop
fnstcw
fdivrl
fsubr
push
popa
cmp
loope
loopne
out
push
push
sub
repnz
adc
pop
pop
or
aas
mov
insb
xor
or
fsub
inc
push
outsb
das
fmull
jp
xchg
or
bound
add
push
ret
imul
aas
mov
negb
jp
clc
jle
outsb
mov
lds
loopne
mov
shlb
cli
adc
inc
js
add
inc
fidivl
xchg
push
push
add
sbb
loopne
repz
mov
out
mov
nop
lahf
scas
xor
test
arpl
insl
imul
mov
aaa
leave
out
pop
or
cmp
mov
mov
mov
imul
dec
push
in
jno
out
pusha
push
sbb
or
stos
fwait
pop
xchg
or
and
repz
xchg
xchg
call
xchg
popf
xor
mov
jno
push
mov
lods
jne
adc
lret
xchg
adc
xlat
sbb
adc
mov
fbld
pop
or
sub
cmp
repnz
test
xchg
jecxz
dec
jmp
enter
outsl
adc
in
sub
pop
aad
stos
loop
xchg
inc
aas
xchg
mov
mov
daa
mov
inc
jo
mov
mov
mov
mov
mov
mov
outsb
pop
cli
cmp
push
xchg
and
loop
int
shlb
lods
xchg
in
iret
ret
jl
ja
adc
add
imul
and
outsl
cld
stos
sub
mov
cmp
stos
insb
ret
mov
adc
inc
or
xchg
xlat
nop
shll
inc
fs
fsubrl
jne
lock
out
loope
mov
cltd
mov
in
cmp
aas
mov
xchg
jo
mov
scas
pop
fsubrs
test
stos
mov
push
imul
push
inc
cmp
mov
and
out
xor
mov
jg
outsb
in
lret
dec
lcall
ss
in
pusha
xchg
pushf
into
push
xor
aaa
inc
fcmovbe
push
sbb
sbb
jmp
mov
push
and
pop
shll
sbb
pop
imul
notb
or
push
into
adc
dec
sbb
adc
push
arpl
or
mov
scas
mov
test
popf
xchg
adc
aam
movsb
fnstcw
enter
das
int
shlb
ljmp
out
sub
sbb
inc
cmp
mov
sbb
repnz
mov
pop
enter
xchg
les
or
js
add
lock
movsl
sub
inc
push
or
btrl
pop
cmc
out
push
mov
ret
lds
or
mov
mov
cwtl
in
leave
mov
or
or
shrd
idivb
adc
pushf
jno
push
xchg
aam
mov
pop
not
repz
scas
push
test
aaa
outsl
inc
sub
cltd
aas
dec
rcll
mov
push
addr16
es
dec
inc
in
or
dec
mov
int3
inc
loopne
les
xchg
lods
mov
jnp
mov
jl
or
sub
fsub
inc
data16
xor
mov
mov
pop
xor
push
sub
scas
scas
ljmp
fsubl
repz
fmull
or
adc
fdivrl
loopne
aad
xor
es
sub
mov
mov
in
pop
in
rolb
xchg
xor
mov
xchg
lods
jmp
mov
pop
enter
mov
mov
add
or
js
add
js
push
out
xchg
daa
pop
inc
outsl
push
sti
ss
xor
adc
stos
std
adc
lcall
imul
dec
imul
int3
lahf
lcall
shll
jne
popa
mov
outsb
jge
pop
aaa
fcom
aaa
inc
jmp
lock
jns
enter
jbe
jle,pt
cmp
push
sti
dec
stc
out
lods
or
dec
int3
icebp
das
aad
fcomip
icebp
mov
sahf
and
inc
pop
xor
cmpsl
sub
jecxz
dec
pop
jo
cmp
xor
mov
std
mov
or
jbe
mov
pop
mov
das
sbb
sub
and
fsubr
push
mov
ljmp
sbb
sbb
sub
lahf
aaa
aaa
sub
push
push
mov
add
or
mov
push
ss
leave
mov
test
push
mov
ja
jb
fs
les
mov
icebp
bound
push
mov
and
test
ljmp
sbbl
jne
int
or
jg
pop
cli
shrb
jo
es
mov
cmpl
mov
fsubrs
push
fcmovb
imul
adc
sbb
xchg
stos
mov
or
sti
pop
scas
std
out
xor
xchg
js
inc
adc
lods
mov
and
into
sub
lahf
loope
je
sbb
daa
push
cmp
push
jb
pop
jns
add
fwait
push
jecxz,pt
pop
jg
notl
mov
mov
add
lods
sub
xchg
xchg
leave
sbb
out
int
push
ss
or
add
cmp
xlat
out
insb
repnz
cmp
cltd
shrl
out
mov
mov
and
lcall
sbb
xchg
xor
push
or
iret
pop
mov
pop
pushf
aam
arpl
or
nop
bound
out
fisubl
das
arpl
adc
mov
sub
inc
xchg
and
mov
jge
jg
popf
mov
icebp
sbb
sub
or
push
in
dec
dec
mov
out
rcll
or
ja
xlat
cmp
xchg
mov
cltd
fisubrl
je
push
loopne
or
jg
sbb
fwait
mov
cmp
mov
scas
mov
dec
gs
loopne
push
stos
sub
pushf
mov
jg
dec
inc
push
addr16
mov
nop
into
movsl
inc
dec
xchg
pushf
mov
sub
pop
lret
mov
sbb
movsb
les
jbe
push
loopne
add
cmp
arpl
rcrl
loope
mov
aas
rclb
pop
fbstp
popf
insl
test
cmp
dec
mov
xorb
cmp
addr16
cmp
mov
dec
dec
test
sub
lock
leave
ja
in
in
mov
insl
out
lods
mov
scas
loopne
cmpsb
mov
inc
mov
push
test
add
fcoms
lahf
push
scas
out
pop
imul
cmp
test
sbb
shlb
dec
cmp
int3
pop
inc
mov
dec
fisubs
mov
jecxz
fstpt
cmpsb
sbb
mov
push
fcomps
xchg
sub
popl
add
enter
ljmp
lea
pushl
push
andl
add
fistl
movsb
fldcw
jg
mov
inc
add
pop
stos
or
clc
mov
rcll
or
jo
push
mov
push
xchg
and
rorb
pop
ja
mov
pop
popf
mov
mov
cmp
cld
xchg
nop
dec
adc
lahf
jecxz
mov
loopne
neg
cmc
imul
popf
addr16
adc
jmp
push
outsl
mov
outsl
xchg
sbb
cmp
test
jecxz
mov
mov
xchg
mov
repnz
in
adc
adc
push
cld
add
lea
jnp
fiadds
sti
lods
ja
andl
xchg
xlat
test
leave
in
fiadds
enter
aas
aaa
cmp
in
aaa
repz
cwtl
rcl
pusha
push
test
push
push
or
or
mov
xlat
rcr
sbb
pop
mov
xchg
jecxz
sbb
call
dec
mov
xchg
jl
ret
sbb
push
xchg
sti
testb
aas
mov
call
or
xor
dec
mov
andl
das
jle
stc
push
loopne
les
add
test
ret
jl
into
or
adc
rcr
aas
out
movsl
cmc
lods
cmp
mov
fsts
mov
vcvtsi2ssl
into
xchg
fdivs
lret
mov
adc
movsb
into
pop
lret
or
movsl
or
or
call
jmp
cli
sti
xchg
mov
mov
inc
pusha
jmp
pop
mov
bound
and
dec
push
mov
fisubrl
sub
lahf
push
adc
xchg
jg
sti
add
icebp
adc
cmpsl
nop
mov
cmc
fstpt
cltd
shll
lahf
and
enter
jo
mov
mov
push
adc
ljmp
push
test
in
enter
js
xchg
mov
add
xchg
movhps
insl
sub
arpl
loope
mov
leave
sub
sub
mov
lea
ja
jl
icebp
xor
scas
aad
test
insl
dec
stos
and
mov
dec
xchg
xchg
adc
xchg
popf
insb
pusha
dec
insb
jae
xchg
dec
mov
jbe
popf
fbld
push
lahf
into
push
mov
aaa
jbe
mov
pop
add
imul
ljmp
out
cld
mov
xchg
insl
fldt
in
fs
push
fldcw
jmp
roll
mov
icebp
cmpl
or
ja
fmul
pop
and
mov
mov
test
xchg
idivl
aas
mov
lcall
sti
jo
je
mov
int3
out
dec
add
lds
dec
pop
sub
jg
nop
dec
addr16
sbb
mov
sbb
ljmp
leave
inc
gs
jmp
xchg
clc
cmpl
cmp
addl
imul
imul
sub
and
mov
sub
jl
movsl
inc
sbb
dec
xor
add
lret
jmp
or
sub
pop
call
fnsave
sub
mov
cmpsb
out
inc
mov
out
dec
das
inc
dec
jnp
push
es
addr16
push
add
cmp
cmc
inc
je
mov
sub
push
adc
fcmovbe
pop
jg
cwtl
shrl
jl
es
xchg
xchg
pop
fdivs
mov
icebp
fcoms
clc
and
imull
pop
gs
jnp
mov
nop
dec
pop
sbb
dec
cs
hlt
int3
aaa
xchg
fisttpl
jnp
push
cmc
inc
push
xchg
and
jp
and
push
test
push
ret
repnz
pop
adc
cmp
imulb
pop
sub
imul
lods
push
ret
xchg
add
xor
jb
out
repnz
jo
fwait
in
pop
outsl
jle,pt
adc
jae
cmpsb
shrl
push
push
ret
pop
sbb
jmp
mov
push
test
push
loopew
cmpsl
loope
sub
mov
pop
sub
push
sbb
sarb
out
mov
into
xchg
xchg
int
or
pop
cmpsl
loop
sysexit
std
fsts
adc
in
jne
je
fs
outsl
ror
bound
pop
dec
mov
subb
sahf
mov
out
aas
xlat
inc
imul
push
dec
popa
add
mov
inc
adc
fs
out
lds
dec
pop
shll
mov
adc
aam
jo
mov
sti
repz
inc
xor
jl
push
push
clc
sbb
or
cmpsl
sbb
mov
add
fdivp
sub
je
aas
jecxz
movsl
dec
jle
lahf
xlat
jcxz,pt
mov
inc
lods
stos
mov
lods
mov
sbb
mov
jge
sahf
jp
pop
adc
add
jecxz
jecxz
cmp
pop
gs
shrl
cmp
xor
jne
aas
arpl
les
jo
clc
xor
jge
xchg
pop
dec
in
jb
lcall
mov
sub
mov
clc
je
loopne
pop
imul
pop
jge
jb
nop
in
ficoml
mov
negl
add
mov
push
testl
or
test
or
insl
cmpsb
lods
xchg
jp
rcrl
call
xchg
ud0
sub
or
push
loope
inc
or
mov
mov
jne
jno
in
adc
repnz
cmp
jno
add
jo
loope
fsubl
sbb
out
lea
in
mov
inc
ja
into
pop
inc
jb
hlt
jae
jns
mov
aam
scas
push
fstps
adc
flds
mov
sbb
cmp
adc
jo
enter
mov
ja
cmpsb
push
icebp
fiaddl
test
xlat
push
push
inc
iret
je
and
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
pushl
push
push
call
jmp
mov
sub
mov
mov
andl
mov
inc
mov
cmpl
jne
call
cmpl
jne
xor
or
inc
mov
cmpl
jb
xor
or
add
mov
mov
mov
mov
sub
or
mov
movl
cmpl
je
cmpl
jne
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
xor
add
add
mov
and
mov
sbb
xor
add
andl
mov
inc
mov
cmpl
jne
push
call
cmpl
jb
mov
mov
xor
add
mov
mov
mov
mov
xor
xor
add
movl
cmpl
je
cmpl
jne
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
movl
cmpl
je
cmpl
jne
call
mov
dec
mov
jmp
movl
cmpl
je
cmpl
jne
push
push
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
movl
cmpl
je
cmpl
jne
pushl
push
pushl
pushl
call
mov
dec
mov
jmp
andl
mov
sub
lea
andl
xor
subl
xor
cmp
movl
je
mov
addl
xor
add
movl
cmp
movl
jne
orl
pushl
sbbl
call
movl
cmpl
je
cmpl
jne
push
pushl
pushl
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
mov
mov
xor
add
cmp
je
pushl
pushl
call
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
mov
add
mov
mov
mov
add
mov
mov
mov
add
mov
jmp
mov
mov
add
mov
mov
mov
xor
add
cmp
je
jmp
mov
mov
xor
add
cmp
mov
je
mov
xor
add
cmp
je
lea
push
pushl
pushl
call
mov
mov
xor
add
cmp
je
mov
movzwl
mov
mov
mov
jmp
mov
xor
lea
jmp
mov
xor
add
jmp
mov
add
mov
mov
test
je
movl
push
xor
pop
add
push
pop
push
dec
pop
dec
xchg
sub
xchg
dec
mov
imul
sub
mov
mov
xor
add
jmp
mov
mov
mov
mov
xor
add
xor
div
mov
xor
lea
mov
mov
mov
mov
mov
xor
lea
mov
mov
mov
xor
add
imul
mov
mov
xor
lea
cmp
jne
mov
xor
add
mov
mov
add
xchg
xor
push
mov
pop
mov
add
lea
add
add
push
inc
pop
dec
xchg
dec
xchg
dec
xchg
dec
push
mov
pop
dec
call
cmp
je
xchg
push
pop
push
pop
inc
xchg
sub
xchg
dec
dec
mov
imul
add
xchg
push
xor
mov
dec
inc
add
dec
xor
add
pop
mov
pop
pop
pop
leave
ret
push
mov
sub
movl
cmpl
je
cmpl
jne
push
call
mov
dec
mov
jmp
adc
push
sub
push
mov
mov
sub
add
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
pushl
push
call
cmpl
jne
xor
or
inc
mov
jmp
dec
mov
sbb
mov
mov
movl
cmpl
je
cmpl
jne
push
call
cmpl
jne
xor
xor
dec
mov
mov
dec
mov
jmp
andl
mov
mov
adc
movl
add
movl
mov
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
push
push
call
jmp
and
sub
adc
mov
xorl
sbb
mov
mov
or
sub
mov
orl
add
mov
xor
xor
mov
sub
imul
mov
movl
cmpl
je
cmpl
jne
pushl
push
push
call
cmpl
jne
xor
or
dec
mov
mov
dec
mov
jmp
sub
mov
orl
mov
mov
sub
mov
orl
mov
mov
sub
mov
mov
mov
mov
xor
mov
add
or
mov
mov
mov
sub
mov
orl
mov
xor
add
push
mov
xor
add
push
mov
xor
add
push
lea
push
pushl
pushl
call
test
je
lea
push
mov
xor
add
push
mov
add
push
mov
mov
pushl
call
mov
lea
mov
mov
test
je
lea
mov
mov
mov
mov
mov
sub
mov
mov
xor
mov
sub
add
mov
mov
mov
mov
pushl
movb
mov
pushl
pushl
pushl
pushl
pushl
pushl
pushl
mov
call
mov
mov
add
pop
pop
leave
ret
push
mov
sub
movl
cmpl
je
cmpl
jne
pushl
pushl
pushl
pushl
call
cmpl
jne
xor
xor
dec
mov
mov
dec
mov
jmp
mov
mov
sub
and
movl
subl
lea
mov
movzwl
sbb
push
mov
mov
and
mov
sbbl
lea
addl
mov
neg
mov
sbb
mov
mov
sbbl
xor
andl
add
mov
adc
mov
adc
mov
mov
xorl
add
push
and
mov
movzwl
sub
mov
xorl
jmp
mov
mov
jno
push
cmpsl
xor
pop
jl
dec
pop
jl
loop
sub
call
dec
daa
jl
scas
outsb
lcall
xchg
mov
popf
mov
mov
jl
sbb
sbb
call
insl
stos
pop
inc
sbb
mov
ret
rcrl
fcoms
xchg
lds
xchg
movl
in
push
xchg
nop
hlt
inc
inc
aas
sub
cmp
out
add
ljmp
cmp
adc
sub
call
mov
aam
xchg
add
sbb
sub
jmp
ret
inc
gs
jbe
js
push
sbb
cmp
dec
jmp
xchg
mov
pushf
push
push
push
inc
xor
in
sbb
addl
popf
ss
lahf
mov
fistpll
ljmp
jo
xchg
orl
xchg
subl
or
sbb
outsl
in
push
iret
stos
mov
cmpsb
push
mov
sub
aas
jg
or
lahf
imul
jle
arpl
insb
cmp
mov
xor
nop
in
imull
pop
scas
push
dec
and
popf
cmc
xchg
cmc
xchg
pop
loop
mov
hlt
adc
loopne
xor
jg
jo
repnz
or
jbe
sbb
es
fistpl
pop
adc
add
or
dec
imul
scas
les
sbb
mov
cli
xchg
push
mov
sbb
test
mov
orb
in
xchg
dec
pop
adc
rcll
adcl
mov
into
adcl
bound
div
or
out
add
inc
je
idivl
push
insb
adc
sbbl
out
mov
shl
ss
or
dec
inc
xchg
push
sbb
xor
cli
push
jb
mov
mov
add
mov
jecxz
inc
fneni(8087
popl
mov
out
add
mull
mov
inc
dec
fchs
xchg
sub
and
inc
mov
mov
popa
ss
mov
fdivrl
clc
addr16
aas
xchg
aaa
jo
movsl
lds
lods
bound
loopne
fisttps
iret
in
sahf
mov
aaa
addr16
shrb
sub
jmp
adc
loopne
cltd
imul
lret
xlat
fsubrs
scas
pop
loopne
inc
sub
int3
nop
fildl
dec
pop
pop
sbb
mov
sub
test
out
xor
mov
scas
imull
mov
in
in
inc
inc
inc
inc
and
add
mov
into
int
call
aas
push
jb
mov
divl
mov
cmpsb
pop
dec
fwait
popf
rorl
jne
jo
addr16
xor
loop
in
and
ss
in
and
cld
in
add
std
movsl
pop
add
push
cmp
rorb
repz
mov
bound
push
or
js
xor
imul
aad
loop
rcll
mov
rorb
sbb
mov
test
xchg
push
data16
aad
int3
fnsave
mov
test
scas
mov
mov
jl
or
push
gs
icebp
xchg
pushf
inc
cltd
pop
mov
arpl
mov
jp
jb
neg
dec
test
clc
leave
das
dec
jmp
arpl
dec
adc
jp
insb
insb
mov
iret
imul
push
cs
cmpb
pop
cltd
adc
les
stos
xchg
mov
pusha
mov
movsl
je
fldz
jno
frstor
imul
cmc
insb
push
out
and
lea
jmp
fadds
adc
push
xchg
cld
jg
xor
outsb
pop
fsubrs
subl
add
inc
dec
dec
pop
lods
push
xor
xor
inc
lods
mov
pop
xor
daa
stos
in
stos
add
jl
and
jp
and
insb
mov
cmp
negb
in
subb
lret
ljmp
clc
sub
call
push
xor
lods
push
adc
push
jl
leave
lds
test
mov
cmp
push
cmp
out
mov
pop
xorb
call
shlb
xchg
cli
mov
pushf
pop
mov
popa
xchg
xor
ja
adc
shll
subb
mull
sub
stc
sbb
xchg
mov
xor
or
xor
mov
fwait
outsb
mov
push
cmp
jl
mov
es
loopne
inc
in
repz
idivb
cs
das
xchg
aam
fcomps
pop
insb
in
pop
in
cld
xor
es
popf
and
sbb
or
pusha
js
pop
inc
fdivl
pop
dec
pushf
xsaves
shrl
dec
adc
icebp
mov
mov
pop
push
or
or
fs
stos
sbb
pop
xor
out
ret
test
cmc
push
ljmp
jp
dec
pop
rol
or
sarb
outsl
push
sub
pop
mov
sti
lret
shrb
add
mov
add
lea
loopne
leave
loop
mul
rol
push
or
xor
out
xchg
push
addr16
adc
jecxz
jae
aad
das
out
push
and
cmp
sti
outsb
cli
mov
bound
inc
loopne
add
mov
mov
cltd
movsl
or
int
adc
scas
xor
fidivrl
xchg
insb
jg
es
inc
fists
jg
fdivr
into
popa
mov
in
mov
jns
aas
xchg
xchg
add
fistpl
out
mov
xor
cld
loop
push
jne
popa
add
lds
inc
sub
jmp
pop
adc
popf
call
int
add
mov
mov
popf
push
mov
jb
xchg
je
adc
into
lahf
int
hlt
pop
add
test
enter
icebp
adc
and
cltd
data16
jge
fdivrs
mov
nopl
cmp
shlb
cmp
or
into
or
pop
popa
cmp
adc
pushf
cld
divl
mov
mov
adc
mov
loope
ljmp
dec
int3
cmp
cmpsb
ja
cld
jns
andl
add
repz
mov
loopne
fistl
fcomp
mov
cmp
fwait
adc
ja
data16
pop
mov
jne
sbb
ret
sbb
adc
fdivrs
sbb
or
aaa
inc
ljmp
mov
dec
jnp
outsb
add
lcall
fcmovbe
enter
out
jle
lahf
sbb
stos
js
mov
pop
pop
cmp
pop
pusha
mov
jno
aaa
mov
mov
fistps
outsb
cmp
aad
jb
sub
ret
cmpsl
rcl
rolb
cmp
adc
lea
xchg
fistps
daa
jae
fisttps
jecxz
add
sbb
std
aad
cmp
sub
jae
jmp
xchg
or
out
shrb
mov
fmulp
gs
adc
ss
enter
ja
mov
xor
mov
test
lea
sti
out
mov
outsl
ret
into
hlt
add
fistpll
cld
jmp
jns
sub
mov
mov
xchg
popa
sti
add
cmc
daa
into
sub
test
cmp
cs
jbe
jl
sub
sbb
push
mov
out
push
adc
mov
xchg
lds
xchg
sahf
pop
in
in
scas
ds
loop
daa
lods
fwait
je
jg
xor
sti
fsubp
push
cmc
aaa
mov
mov
xlat
inc
arpl
jge
sbb
pop
popf
shll
shll
mov
out
std
xor
cmp
addl
jmp
sub
mov
nop
ja
mov
and
test
adc
pop
sbb
and
popa
inc
adc
push
test
cltd
push
loop
aad
xchg
inc
fisttpll
jge
sbb
movsl
iret
jl
add
or
aam
xor
dec
scas
xor
sbb
pop
mov
inc
push
xor
sbb
adc
cmp
cmp
out
mov
mov
dec
adc
mov
popf
cmp
adc
int3
or
cmp
insb
xchg
jecxz
pop
add
fs
xchg
arpl
insl
xchg
js
xor
pop
jnp
add
pop
daa
sbb
fildl
out
dec
add
ss
or
inc
mov
push
movsb
xchg
scas
inc
hlt
mov
add
mov
pop
ret
push
jno
fisubs
inc
imul
inc
dec
insb
cwtl
jne
pop
test
inc
xor
shr
mov
inc
sbb
dec
fisttpll
inc
int3
mov
repnz
inc
decl
push
test
shll
add
push
mov
xor
ret
insl
sub
xor
adcb
xchg
je
pop
mov
mov
jnp
clc
pop
push
xchg
sub
ret
push
mov
jp
lods
les
addr16
xchg
fistps
repz
popf
mov
shrl
xor
sub
push
jns
movsl
ljmp
ss
es
sub
rcrl
mov
fsubp
pop
aam
pop
inc
ret
dec
mov
js
inc
ret
lret
mov
lret
xor
xor
jns
sub
shr
sub
int3
in
jmp
inc
adc
pop
shl
leave
sub
jae
mov
andl
xchg
cmpsb
test
dec
mov
fcoml
adc
adc
jecxz
add
in
sbb
mov
jb
lea
mov
xchg
das
jae
mov
push
in
sub
nop
in
mov
mov
mov
jnp
daa
ret
lea
mov
sahf
xor
flds
jg
pop
add
push
push
bound
cmc
cli
sub
pop
or
push
fldcw
negb
sub
rorb
imul
ja
lods
rcll
xlat
push
and
pop
sarl
cltd
inc
je
mov
rorl
mov
and
adc
lods
and
mul
dec
and
jns
mov
outsb
xchg
or
cmp
mov
xor
dec
es
in
or
pop
arpl
call
aaa
es
xchg
sbb
pop
std
rep
push
and
repz
lds
in
test
push
xchg
addl
inc
int3
aam
cmp
loop
call
ds
shlb
rorl
mov
leave
call
in
es
or
push
dec
inc
lods
movsb
and
dec
ret
lret
sbb
xor
popf
xor
mov
in
mov
aad
push
scas
add
fwait
rcr
mov
or
and
popa
mov
push
lahf
jo
mov
cmp
jge
test
pushf
xor
loope
lock
out
sub
lods
adc
add
fsubl
insb
int
aas
cld
or
rol
sub
xor
repnz
inc
xchg
xor
arpl
mov
in
in
adc
ret
cmp
mov
hlt
mov
lods
popa
dec
loop
icebp
pop
aas
fcoml
lcall
inc
aad
or
jnp
pinsrw
imul
daa
jmp
rcrl
dec
mov
int
cld
in
loopne
push
adc
adc
add
or
adc
sub
adc
and
xor
xorl
sbb
dec
sbb
lret
clc
ret
int3
test
xor
mov
or
push
pop
push
pop
rcll
pop
cmp
xchg
jl
fsts
sub
mov
pop
xchg
bound
cmc
xor
imul
and
and
repz
stos
inc
xor
bound
loopne
mov
cmp
jecxz
insb
sub
aaa
js
adc
pop
xchg
loop
pusha
sar
lds
mov
in
cli
test
aaa
loopne
inc
or
cwtl
std
pushl
orl
nop
popf
fcomi
jecxz
rcl
insb
insl
push
inc
pop
lahf
or
nop
jbe
fldcw
xor
sbb
sarl
push
fsubrp
outsb
imul
or
mov
xchg
inc
test
dec
pop
lret
fcmovb
orl
and
cmp
daa
out
inc
in
lods
scas
repnz
mov
out
jle
or
pop
mov
jp
add
inc
xchg
orl
jecxz
in
jb
out
dec
and
mov
or
jmp
add
clc
jge
shrl
lea
pushf
ret
stos
dec
arpl
sbb
jg
and
loopne
xor
scas
jo
ljmp
das
repnz
aad
lahf
pop
outsb
cmpl
aam
mov
xchg
add
loopne
sub
leave
les
hlt
bound
sahf
lahf
clc
mov
sbb
push
out
sbb
inc
pop
pop
jnp
cmp
jl
lret
aad
call
jns
cmp
push
add
xchg
cmp
add
lods
xor
sub
into
cltd
dec
or
sbb
jno
jecxz
mov
adc
dec
scas
test
sub
ss
or
clc
mov
lcall
mov
ljmp
fadd
int3
aam
sub
dec
mov
xor
add
ds
push
ljmp
pusha
sub
inc
stc
jo
mov
popa
test
cld
shl
mov
push
aam
dec
mov
mov
push
or
jne
xchg
lcall
ror
mov
dec
clc
xchg
jae
jmp
scas
sub
adc
mov
fdivp
popa
sbb
mov
push
cmp
xchg
sahf
fdivl
xchg
push
ret
pop
inc
rcl
push
jmp
in
pushl
ficomps
leave
repz
pop
xor
ja
push
int
mov
and
inc
jg
xor
aad
xchg
cwtl
dec
mov
xor
push
outsb
imul
mov
xchg
repnz
xchg
mov
xor
push
cwtl
cli
lret
ret
fstpt
subl
lret
xchg
ds
fs
mov
jns
push
push
leave
cmp
push
sub
je
cmpsl
pop
mov
fnsave
xor
xchg
push
out
insb
orb
push
xor
mov
push
fsubl
mov
jne
or
ljmp
push
or
cmp
fld1
xor
into
add
ljmp
imul
mov
filds
js
mov
je
shrb
jns
icebp
cmpl
sub
mov
enter
in
in
jnp
dec
push
fstp
aam
pop
and
pop
mov
and
jmp
rcll
mov
xchg
in
lods
sti
std
jnp
inc
repnz
pop
adc
pop
outsb
inc
arpl
cmpsl
or
push
dec
inc
inc
xor
mov
pusha
fnstenv
cmp
fwait
jle
sub
dec
test
cmp
pusha
test
and
push
mov
pop
push
adc
add
ret
and
and
xorb
nop
sub
xor
inc
lret
push
cmp
sbb
xchg
fdivs
aaa
ret
inc
shll
out
addr16
daa
xor
push
jb
add
dec
imul
ss
call
cmp
pusha
fwait
lods
jne
dec
rcll
jne
movsl
fbstp
aad
sub
outsl
or
repnz
push
mov
lahf
and
mov
pusha
cs
dec
xchg
sbb
xor
push
negb
inc
test
loop
push
inc
movsl
fstl
sub
fdivs
add
xchg
pop
mov
inc
adc
push
sbb
or
movsb
pusha
movsb
inc
repnz
mov
test
sbb
insl
stos
sbb
mov
cltd
aas
jmp
cld
cmc
dec
lock
shrb
insl
lods
mov
mov
xchg
push
iret
xor
jns
aad
repnz
or
add
fsubp
pop
cmp
stos
jnp
mov
jmp
lods
xor
nop
xor
jo
lret
xor
icebp
push
mov
jge
sbb
sub
loop
loope
movl
mov
fdivp
sbb
xchg
sub
mul
lock
nop
sbb
jge
adc
inc
inc
jle
lret
mov
cld
mov
mov
adcl
xchg
and
adc
push
push
leave
cmp
call
sarl
rorl
adc
push
daa
pop
gs
inc
ja
dec
mov
flds
push
mov
aas
icebp
sbb
mov
xchg
pop
and
adc
test
and
cmp
jge
and
mov
repnz
adc
inc
fsubl
sahf
pop
aas
sub
test
jns
rol
dec
xlat
mov
xor
es
rorb
xor
and
inc
pop
or
inc
mov
xchg
addb
sbb
or
enter
aaa
adc
push
out
test
inc
lcall
pop
negb
stc
push
hlt
cltd
xchg
std
xor
mov
pop
or
xchg
add
out
pop
mov
aaa
aas
inc
rcr
fcmovnu
pop
xorb
dec
mov
mov
xchg
push
daa
push
nop
jae
fsubp
mov
inc
pop
hlt
das
dec
xchg
ljmp
cltd
je
jecxz
out
mov
addr16
sbb
std
pop
xor
jmp
pop
add
out
push
xchg
add
add
mov
add
push
push
inc
cwtl
popa
push
push
mov
mov
push
mov
sbb
popa
push
repnz
stos
test
push
inc
mov
mov
test
ljmp
xor
int
and
dec
lret
stos
cli
inc
add
or
adcl
mov
fcoms
xchg
in
cmp
xor
data16
mov
mov
dec
outsl
lahf
or
mov
xchg
inc
cld
sbb
dec
icebp
flds
push
ret
out
jae
push
or
sbb
mov
mov
popa
xchg
clc
xor
iret
dec
push
and
push
test
inc
and
mov
int
adc
lea
loope
ror
jae
push
jge
in
add
jmp
mov
popf
adc
addr16
pop
sbb
inc
cmp
clc
sbb
cmp
and
loopne
jge
jecxz
pushf
ret
push
jb
out
mov
adc
inc
sbb
and
or
xchg
xchg
cld
out
mov
call
mov
sub
pop
mov
jmp
into
imul
and
mov
inc
adc
addl
push
pop
aam
imul
cmp
and
loop
ror
and
mov
xor
repz
mov
xchg
mov
cmp
scas
mov
mov
jmp
and
stc
mov
pushf
adc
int3
ret
pusha
cmp
fidivs
mov
sub
sub
inc
cmpl
adc
inc
dec
xor
fldenv
imul
out
pop
nop
pop
pop
lods
je
imul
fidivl
add
jp
icebp
call
lods
subl
jo
xchg
or
repnz
lret
enter
jl
jno
mov
mov
push
jg
sub
cmp
aas
pop
xchg
jmp
jne
mov
iret
xchg
call
int3
test
test
push
je
mov
aaa
mov
add
jle
push
jg
cld
test
push
outsb
jnp
jge
sub
mov
lret
lahf
scas
mov
push
iret
aas
insl
test
adc
jle
pop
xor
add
sbb
push
or
jp
mov
insl
int3
js
inc
scas
inc
xchg
ds
jnp
mov
arpl
cwtl
out
push
jbe
sbb
daa
push
out
sub
fimull
mov
and
aam
insl
enter
adc
enter
mov
cmovns
pushf
lret
sbb
js
lret
hlt
xchg
rorb
adc
pusha
mov
ljmp
add
push
addl
xor
add
stos
int3
test
rcrb
and
in
or
rol
testl
adc
cmp
push
adc
roll
std
repnz
notl
sbb
addr16
mov
mov
filds
lret
std
fmulp
fs
push
fmuls
or
outsl
and
cmpsb
fdivs
test
and
push
jae
mov
push
and
cmp
jecxz
std
cli
xor
out
mov
ss
xor
inc
adc
in
dec
adc
or
xchg
jne
pop
pop
pop
out
js
or
cmc
lea
cmp
fs
push
mov
pusha
jb
sbb
and
nop
add
adc
arpl
push
push
or
xor
pop
andl
sub
and
add
cmp
dec
pop
subb
push
push
xchg
push
out
cmp
scas
pop
mov
mov
pop
stc
lock
rolb
xlat
outsl
add
mov
scas
xlat
stos
mov
xlat
ret
mov
lods
shl
pop
push
jno
iret
pop
xchg
pop
lret
out
sub
add
or
fisttpl
out
and
sbb
xor
mov
lods
ret
in
repnz
int
scas
sbb
jg
mov
adc
jnp
loopne
cmpsb
mov
mov
sbb
insb
std
daa
loopne
les
jl
jbe
or
sti
stc
or
mov
xor
fisubrl
jbe
in
leave
xchg
repz
aam
inc
push
or
movsl
xchg
movsb
or
rolb
xor
push
inc
subl
xor
add
mulb
mov
adc
jmp
dec
xor
fstl
cltd
aad
lcall
cld
jns
cmp
adc
insl
mov
repnz
int3
mov
cli
pusha
inc
jae
jnp
push
dec
cmpsl
mov
sbbl
and
mov
shrb
xchg
add
xchg
stos
xchg
dec
repnz
jg
push
out
jns
mov
das
mov
es
adc
jo
inc
xchg
scas
jmp
fidivrl
fxch
add
and
mov
cmp
jno
out
mov
cmp
jnp
mov
sbb
testb
jp
inc
inc
sti
push
and
sub
and
inc
fnstsw
sub
lcall
addl
out
mov
push
loope
sbb
out
scas
mov
js
or
mov
icebp
sbb
stc
insl
pusha
cli
pushf
mov
xor
lret
fsubrl
cltd
add
outsb
xor
imul
stc
lret
out
std
loop
inc
ljmp
lret
clc
dec
inc
pop
daa
mov
push
xchg
mov
cmp
dec
or
inc
out
cs
add
inc
lock
sbb
enter
mov
cmp
pop
enter
out
cmpsl
jp
jle
insb
lahf
sbb
push
iret
mov
scas
mov
xor
movb
cld
shll
pop
inc
sarb
add
and
enter
mov
ds
ficoms
fdivr
aas
ret
add
jo
loop
inc
enter
dec
push
xchg
and
adc
cmp
pushf
rcrb
fnsave
sahf
arpl
cmp
mov
or
lea
enter
sbb
imul
lret
pop
std
shrl
push
mov
jmp
pop
inc
mov
in
fs
xchg
out
shlb
mov
cmc
add
in
bound
imul
mov
std
push
ds
sbb
cwtl
inc
and
mov
cmpb
cli
xlat
adc
dec
or
outsl
xchg
jno
arpl
push
add
jp
ljmp
dec
dec
dec
in
movsb
jge
adc
sub
jge
fdivs
in
dec
pop
pop
nop
inc
int3
ss
mov
shll
pop
jecxz
mov
sbb
pusha
sbb
and
insb
cmpsl
int3
ficomps
stos
jle
push
or
es
or
enter
adc
pop
fnstcw
mov
hlt
sub
push
push
sti
mov
ret
jo
imul
cmpsb
mov
adc
repnz
adc
sahf
push
xchg
jnp
adc
mov
pop
add
shlb
and
mov
cli
loop
out
aas
mov
pop
aam
setbe
push
lret
adcl
mov
outsl
push
andl
scas
mov
jmp
and
and
lea
xor
sub
push
pop
pop
dec
and
daa
inc
sbb
out
jmp
mov
ret
sub
fs
int3
push
fldl
loopne
inc
hlt
and
mov
mov
inc
daa
mov
imul
jno
in
sub
aad
fdiv
push
xor
imul
xor
mov
pop
popa
cmpsl
adc
aam
sub
xor
rcr
or
aas
in
leave
leave
daa
bound
xchg
mov
repnz
or
xchg
aad
stos
xorb
out
or
ss
dec
lds
sub
pusha
outsl
test
call
ljmp
mov
inc
out
or
outsb
pushf
dec
cmc
inc
std
sbb
dec
mov
fnstcw
sahf
sbb
adc
cs
and
stc
out
ds
fsts
and
js
scas
call
and
sahf
xchg
stc
push
add
fsubrp
popl
loopne
mov
fwait
into
lahf
es
aad
jae
inc
test
das
std
andb
sub
subb
into
mov
xchg
fildl
arpl
jmp
mov
cltd
aaa
lds
adc
mov
mov
adc
sbb
jle
fildll
lret
ds
push
fmuls
out
ret
jne
arpl
xor
xor
inc
mov
leave
pop
cmp
inc
add
cmc
add
cmp
adc
imul
divb
adc
add
sar
lret
stos
out
orl
sarl
dec
pop
mov
xchg
push
aas
inc
adc
and
rcll
cmpsb
popf
inc
mov
sub
popa
incl
mov
push
dec
aad
js
pop
xchg
mov
stc
aaa
pop
int3
pop
cmp
jnp
xor
pushf
out
and
push
les
mov
rol
clc
push
push
mov
popa
call
movsl
or
jns
gs
cmp
arpl
daa
xchg
cmp
jne
test
div
mov
leave
lahf
inc
cmp
xchg
push
and
fsubrp
repnz
cmp
in
jg
repz
dec
and
sahf
insl
inc
imul
insl
daa
dec
repz
out
xlat
add
stc
dec
mov
bnd
fisubrs
dec
mov
sub
adc
pop
cmp
sbb
add
mov
cmc
sbb
xchg
mov
fiaddl
pop
lret
inc
jge
pop
out
popa
push
jnp
ss
mov
or
outsb
or
cmp
xor
sub
xchg
int3
pop
stos
lret
js
out
jle
push
in
lock
jno
popf
mov
inc
jle
stos
enter
xchg
arpl
int
fistl
ja
jo
clc
cwtl
pusha
mov
push
test
lock
mov
jb
add
mov
sub
sbb
add
fdiv
or
fwait
es
fdivr
mov
pop
inc
mov
and
jle
xchg
cld
push
xchg
jae
jnp
mov
mov
test
and
sbb
dec
das
sti
mov
test
xchg
mov
loopne
xchg
push
pop
pop
ss
and
cmp
sarl
sbb
sbb
mov
jle
insl
arpl
inc
inc
imul
pop
mov
push
lock
inc
cmp
ja
dec
notl
pop
movsl
cmp
cli
add
sbb
xchg
scas
adc
test
hlt
lcall
lret
ss
fistl
std
insl
push
dec
xchg
jecxz
fcom
popa
dec
lods
iret
xor
adc
cmp
fldenv
or
add
or
lcall
push
sti
push
das
pop
adc
lret
mov
or
jg
popa
jns
loop
mov
mov
sub
push
pop
pushf
mov
mov
loopne,pn
jp
pusha
pop
add
daa
shrb
movsl
fstpl
xchg
jne
sub
pop
pushf
jle
push
jg
sub
jecxz
push
jne
icebp
out
pop
and
jno
test
js
mov
or
xor
cld
outsb
push
mov
gs
xchg
push
xor
push
and
adc
adc
xor
dec
cmpw
mov
mov
cmp
xor
loope
sahf
add
mov
test
pop
dec
iretw
or
mov
inc
cmp
gs
leave
or
mov
stos
daa
pop
sbb
cmpsb
dec
mov
loope
inc
xor
sub
xor
aas
mov
in
insl
or
mov
test
shrl
clc
pop
jb
jl
daa
je
mov
jg
adc
mov
mov
test
sti
xlat
cmp
cs
pop
sbb
xchg
sahf
mov
loope
mov
pop
jl
outsb
ljmp
divb
rcll
fstpt
mov
je
clc
ret
cmpl
adc
fidivrl
leave
dec
xchg
push
in
out
xor
and
xor
lods
or
mov
or
jb
dec
shl
mov
test
test
popa
sbb
or
pop
loopne
testl
jno
out
sub
mov
bound
adc
scas
cmpb
rclb
add
out
pop
cmpsb
xchg
jle
in
mov
daa
test
scas
xor
arpl
test
cli
adc
cmp
push
pop
lods
jmp
push
push
aam
xor
push
pop
test
ficomps
andb
and
leave
adc
popl
or
popf
rcrb
cmp
sbb
pop
stos
rorb
arpl
mov
jbe
xchg
cmp
and
fwait
aad
jae
daa
adc
ljmp
hlt
sbb
jbe
shrb
mov
push
cmp
and
jp
in
cmp
imul
andl
fwait
push
out
xchg
xlat
mov
lds
aad
mov
xchg
or
cmp
xor
notl
jge
mov
jbe
dec
flds
sbb
add
sarl
shl
mov
mov
dec
jmp
mov
cmp
mov
sbb
sbb
cmp
pop
jl
or
xchg
iret
jmp
adc
mov
or
scas
push
add
fcompl
xchg
mov
jns
outsl
call
and
leave
add
imul
cmpsb
mov
stc
push
int3
pop
cmp
test
jecxz
xor
bound
testl
nop
mov
std
push
pop
mov
jmp
into
popf
and
aaa
cld
in
data16
inc
das
pop
push
mov
out
sbb
mov
lret
mov
push
sub
jnp
sub
mov
fs
mov
out
in
movsb
es
sbb
popa
mov
sub
repnz
pop
dec
fdiv
fdivl
pop
push
or
sbb
movsl
dec
in
nopl
jo
cmp
pusha
sbb
adc
ret
leave
lds
out
cld
xor
and
bound
cmp
test
jp
jbe
push
lcall
push
jbe
mov
cld
mov
pop
or
std
push
popa
out
pop
dec
adc
rcl
and
jle
push
ds
ja
enter
sub
ficompl
sbb
fs
pop
loop
jne
ret
outsl
adc
push
add
dec
rolb
xchg
lea
scas
loop
push
sub
jmp
mov
inc
mov
clts
pop
and
dec
and
and
push
mov
jbe
dec
out
iret
dec
imul
mov
mov
dec
call
jle
imulb
es
dec
cmp
pop
adc
push
mov
shr
mov
das
or
mov
and
push
xlat
jp
xchg
dec
cmp
add
jp
cs
xchg
push
sti
test
sbb
test
cmp
mov
leave
test
sbb
test
bound
int
adc
test
lcall
push
mov
xor
cltd
jmp
dec
and
and
sub
mov
mov
add
pushl
data16
rorb
lods
jl
test
xor
adcl
outsb
add
add
dec
push
jmp
stos
js
pusha
mov
jmp
lret
movsl
or
lds
mov
add
pop
jbe
scas
push
sbb
out
cmp
jno
dec
pop
xorb
xchg
dec
dec
pop
fcomp
popa
cmp
movsb
lds
inc
ss
data16
mov
scas
push
lret
in
xchg
int
push
add
ficompl
fistps
xchg
arpl
cmp
stos
sub
dec
jo
lret
icebp
lret
add
sahf
fwait
dec
dec
ret
idiv
adc
xlat
fisubs
stos
xchg
addr16
add
add
xchg
adc
push
iret
mov
sti
cmpsl
shrl
loope
in
lods
popf
mov
xor
mov
or
cmpsb
or
jmp
or
sti
xor
in
lods
xlat
xchg
ljmp
fiaddl
push
stc
insl
pop
in
rcrl
frstor
out
cmp
sub
jecxz
std
jl
fildl
lods
cmpsl
pop
insl
aaa
mov
es
mov
shll
xlat
rorb
pop
idivl
test
sub
mov
mov
jg
fxch
inc
lods
imul
mov
ds
mov
sub
insb
cmp
mov
push
mov
inc
or
mov
movsl
jbe
push
aas
iret
aam
pop
les
add
test
iret
fsubrs
leave
jg
lds
jbe
ja
ljmp
mov
loopne,pt
fmull
lods
push
stos
cwtl
iret
pop
fstpl
insb
mov
xchg
xor
add
cld
cltd
inc
and
dec
mov
mov
stos
dec
sub
push
add
push
hlt
aam
nop
test
rolb
cmp
loop
les
push
cmp
mov
add
mov
and
aas
popa
hlt
clc
jbe
or
mov
pop
fisttps
push
mov
jns
push
addr16
cmp
ss
test
jecxz
into
adc
mov
hlt
mov
sbb
mov
sar
dec
xlat
fistl
xchg
inc
add
stos
in
sub
and
and
cmp
leave
lret
or
fwait
ljmp
pop
cmp
adc
les
push
loope
xchg
mov
lea
inc
lcall
stos
ret
jae
sbb
enter
outsb
dec
sti
push
lds
push
push
xor
loop
inc
dec
add
mov
push
test
jg
mov
hlt
add
inc
inc
push
sub
sbb
cmp
mov
mov
xchg
popa
inc
push
pop
adc
or
cmc
jno
scas
xchg
jmp
sbb
mov
dec
sbb
pop
ror
adc
mov
push
fmul
pop
xor
in
push
or
cmp
adc
xchg
or
rcr
cmp
pop
add
cli
test
add
and
fwait
jle
cmc
add
mov
mov
out
leave
mov
xlat
mov
cmp
mov
mov
add
idivl
cmp
jl
dec
adc
cltd
xchg
add
insb
adc
hlt
push
or
subl
pop
jge
mov
lea
inc
pop
mov
xchg
sarb
ror
ror
cli
stos
test
fcmovnb
jbe
sbb
je
test
aaa
mov
fimull
sbb
enter
and
fwait
outsl
loopne
lods
lret
mov
aas
mov
add
mov
mov
pop
cmp
psllw
mov
repnz
rorl
fbld
push
mov
jns
pop
mov
xchg
mov
inc
dec
or
jns
mov
out
cmp
pop
lds
loopne
je
cs
fimuls
push
xlat
jo
imul
xchg
and
sbb
or
push
mov
xchg
mov
movsl
add
mov
and
mov
andl
and
sbb
push
xchg
inc
in
fbld
inc
mov
jecxz
idivb
movsb
in
cli
xchg
lock
cmp
stc
xor
lahf
or
fdivrs
xchg
push
repz
fldt
dec
sub
pop
cmp
test
add
push
sahf
adc
xor
jne
push
sub
aam
add
add
push
mov
mov
jl
data16
sub
lret
jg
push
sbb
xchg
repz
je
adc
cli
jmp
mov
btc
mov
or
pop
stos
push
xlat
sar
push
cmp
xor
aas
fisubs
xor
lods
sahf
jg
out
cli
enter
cmp
addr16
test
call
jns
cmpsl
inc
jp
adc
mov
xchg
pop
pop
fisttpl
ljmp
out
lahf
xchg
mov
dec
mov
mov
aas
xchg
ret
scas
mov
subb
in
mov
jo
loopne
js
mov
xchg
in
subl
test
mov
stos
repnz
xchg
jae
fdivs
dec
and
shrb
pop
xchg
cli
and
popa
pop
outsl
mov
popa
repnz
jae
clc
int
xlat
es
mov
insl
dec
enter
pop
shrl
and
pop
mov
sbb
je
and
jne
mov
std
mov
add
test
rolb
daa
mov
xlat
mov
sti
jg
sbb
pop
loopne
sti
push
mov
imul
mov
adc
xchg
xchg
lds
rol
pop
dec
sub
cld
inc
lods
pop
stc
sahf
rcl
inc
mov
and
xchg
xlat
sub
jmp
xchg
push
sarb
xor
cs
stos
pop
imul
fcomp
dec
and
cli
dec
xchg
dec
decl
stos
sub
stos
inc
push
mov
inc
xor
fcmovu
testb
jbe
outsl
scas
mov
pop
xchg
push
push
fidivrs
xchg
fdivrl
push
push
adc
xchg
test
and
or
faddp
insl
negb
testb
jbe
or
lret
xchg
int3
mov
push
stc
jno
xor
nop
test
add
icebp
mov
inc
dec
fistpll
fdivl
pop
jns
push
bound
loope
sbb
cmp
shrb
fldt
addl
cmp
mov
adc
add
ret
testb
scas
ss
mov
xor
fldt
push
pusha
pop
inc
arpl
test
jp
int
cvttps2pi
in
sahf
pop
mov
sub
jne
and
jbe
dec
mov
xchg
xchg
jl
cld
int
mov
fdivrl
xor
xchg
iret
fs
sbb
sub
xchg
dec
mov
pushf
dec
mov
pusha
fcoms
mov
clc
outsb
jle
xor
jmp
imul
insb
call
push
dec
inc
in
movsl
jge
flds
xchg
int
mov
ja
int
lods
sbb
rolb
outsl
int3
pop
popa
mov
jne
adc
lds
add
push
aas
ja
add
sbbb
adc
xor
adc
outsb
test
mov
ss
mov
inc
push
or
fldl
fcomps
es
stos
mov
xor
mov
add
pop
ja
xchg
inc
and
lds
mov
xchg
mov
cli
jp
push
pop
push
mov
adc
xchg
xchg
xlat
adc
and
xor
mov
inc
into
fldl
dec
stc
and
jle
jle
sbb
les
push
jne
pop
movb
lret
xor
imul
dec
and
imul
mov
xchg
fidivl
and
es
push
outsw
jmp
cmpsl
cmpsb
sub
mov
jnp
repz
lret
mov
mov
andl
inc
push
ltr
das
das
cld
fdivp
mov
bound
pop
add
js
fldl2e
xor
inc
jne
lea
xor
int
mov
xchg
sahf
add
test
cld
jae
xor
outsl
insb
loopne
mov
imul
lods
adc
mov
int3
lods
sub
and
fnstenv
mov
js
into
int
aaa
mov
out
leave
cwtl
jmp
xor
push
dec
inc
movsb
mov
push
shll
pop
call
aam
dec
xor
fwait
sbbb
push
jl
and
mov
jle
push
pop
arpl
addb
lahf
mov
jns
nop
orl
xchg
jo
leave
sub
daa
out
mov
fwait
stc
aad
lret
sbb
cltd
push
sarb
push
mov
pop
or
ret
mov
mov
stos
sub
cmp
mov
jae
ret
cmp
xchg
in
mov
adc
cmp
inc
sbb
inc
or
sbb
insb
inc
push
cmp
push
imul
andl
ret
mov
xor
xchg
mov
call
dec
insb
cld
aas
jae
andl
xor
stc
sub
pop
xchg
sbb
inc
imul
fnsave
jb
insb
mov
mov
es
jl
lods
call
push
pop
mov
inc
lea
out
lret
sub
push
mov
mov
testl
aas
cs
ret
push
add
jecxz
aas
sub
fnsave
enter
push
cmpsb
nop
scas
sbb
aas
das
dec
pop
pop
test
mov
pop
sub
js
loop
scas
sub
push
aam
push
xor
adc
jbe
adc
lret
and
stc
ret
stc
cmp
dec
std
mov
push
sbb
aaa
sub
pop
data16
or
push
xor
xchg
jae
cmc
and
jo
push
lcall
addr16
ss
ret
adc
sti
popa
mul
xchg
iret
and
je
gs
imul
and
lret
or
sti
sti
pop
imul
pop
aaa
shrb
cmp
dec
sbb
lock
ljmp
and
dec
inc
sti
repz
sbb
cmp
dec
mov
ds
lock
mov
sub
out
leave
or
pop
xchg
test
and
pop
pop
and
xchg
movsl
cmp
jno
push
push
sbb
inc
mov
stos
aaa
mov
dec
mov
cmp
pop
mov
adc
leave
sub
sub
iret
sub
jl
mov
mov
test
jle
imul
bound
xchg
mov
pop
and
mov
add
inc
imul
xor
sbb
addb
mov
ss
and
repz
aaa
stos
es
es
cmc
jns
mov
push
and
roll
inc
pop
jne
mov
xlat
mov
xchg
mov
mov
fists
int3
dec
ss
fldt
pop
mov
and
jl
and
popf
mov
push
xor
leave
sbb
dec
rorl
pushf
pop
lcall
aam
cs
test
mov
test
mov
dec
jmp
lods
orb
dec
test
pop
add
mov
fcomps
into
mov
js
scas
fwait
lea
push
push
or
stc
pop
dec
jmp
lea
adc
dec
cmpsl
fwait
int3
mov
sbb
xlat
call
scas
xchg
and
fimuls
and
push
cmp
cmp
cmp
mov
sahf
or
xor
repnz
ret
clc
ret
movsl
ss
push
fwait
pop
mov
jne
mov
lahf
or
iret
mov
arpl
dec
scas
insb
insb
cwtl
in
popa
push
aas
jecxz
pcmpeqd
sub
popf
mov
cltd
les
popa
push
sub
sbb
popa
repz
sub
ss
mov
jg
cltd
jbe
mov
mov
ret
mov
mov
sub
cs
and
add
in
aad
or
loop
sub
cli
add
sbb
jg
sahf
sbb
das
add
mov
es
xchg
dec
push
push
dec
sub
cs
in
orl
push
or
push
or
fcmovu
int
pop
imul
mov
out
mov
and
mov
sbb
adc
mov
iret
mov
dec
xchg
inc
inc
dec
fisttpll
bound
xchg
flds
add
nop
popf
adc
fwait
xchg
cmp
cmp
cmp
insl
xlat
or
mov
xchg
stc
or
xchg
test
inc
loop
aaa
sub
mov
fs
or
rcll
ret
jp
xchg
dec
xchg
insl
sub
xchg
frstor
push
int
jnp
mov
pop
adc
aas
inc
fdivrs
jno
test
into
rcrb
mov
jge
xor
inc
push
mov
mov
call
xchg
icebp
fstps
adc
imul
or
xchg
pop
push
js
in
into
js
push
out
push
add
pop
decb
pop
in
jae
adc
jno
es
or
pusha
or
mov
and
cli
xchg
add
rorb
into
and
stos
mov
push
std
and
dec
mov
js
dec
mov
lds
xchg
lods
push
pop
vphsubwd
mov
push
test
int
das
cwtl
dec
test
lret
add
xchg
xor
sbb
cli
divb
add
push
aam
aad
sbb
xchg
dec
loopne
ret
inc
adc
jbe
cmpsl
pop
lods
in
push
mov
mov
popa
mov
jmp
scas
push
pop
mov
push
sub
fs
or
cmpsb
xor
sahf
push
ljmp
jb
rclb
cmp
outsl
mov
pusha
sti
movsl
loop
incb
sbb
int3
arpl
jnp
pop
mov
stos
sub
cld
fsts
or
je
mov
xchg
lret
mov
mov
lds
outsl
aad
out
mov
jns
test
inc
cmp
jnp
dec
lahf
lea
cmp
mov
lods
out
or
adc
je
ljmp
push
call
jecxz
imul
lcall
and
pop
sub
test
out
icebp
pusha
inc
jmp
sbb
adc
jp
pop
lods
int3
push
sbb
stc
iret
imul
imul
aas
sub
pop
push
iret
ret
or
sub
sbb
mov
xchg
mov
mov
push
stos
pop
cmpsl
loope
mov
das
lcall
dec
orl
sbb
stos
fists
mov
adcl
in
cmp
dec
sbbl
call
push
mov
insb
pop
inc
pop
push
lods
addr16
push
out
push
pop
jmp
sbbl
dec
sbb
pusha
outsb
ja
sub
inc
xchg
mov
xor
arpl
push
fwait
sarl
pop
lea
inc
ja
or
cltd
mov
and
std
cmpsb
cmp
inc
pop
adc
push
add
call
add
je
mov
or
cmc
xorb
mov
mov
sti
push
psllq
jp
test
aaa
ret
lea
sbb
xor
add
xor
arpl
sbb
inc
or
das
fs
faddl
push
out
mov
inc
xor
jnp
and
out
stos
out
call
cmp
mov
and
adc
shrl
cmc
outsl
inc
jbe
ljmp
les
pop
dec
enter
std
out
in
cmpsb
mov
xchg
ret
xchg
test
or
fwait
xchg
cmp
sub
pop
mov
in
sub
es
cwtl
inc
stos
jnp
shlb
add
cmp
sub
lods
out
lahf
aaa
mov
es
daa
int
pop
and
sbb
dec
xorb
aaa
and
mov
xor
mov
or
lods
xchg
add
xchg
popf
mov
cmp
inc
pop
dec
jmp
adc
mov
pop
and
xchg
xor
pop
dec
inc
es
iret
or
mov
ja
cmp
or
ret
enter
stc
adc
push
xchg
arpl
mov
shlb
int
adc
dec
cmp
sub
shlb
lcall
mov
inc
mov
fistps
sub
mov
mov
int3
mov
xchg
mov
sub
jnp
test
sahf
outsb
or
mov
out
insl
mulb
xchg
dec
and
out
hlt
stc
dec
push
add
mov
pop
dec
int3
imul
cltd
mov
repz
pop
mov
roll
into
sahf
cmp
shll
sub
add
sub
into
pop
cmpsb
or
scas
mov
xchg
cmc
hlt
dec
ret
sbb
mov
inc
out
mov
imul
add
nop
xchg
mov
lods
mov
pop
or
into
pop
popa
shll
addr16
xchg
or
notl
mov
pop
sti
inc
pop
and
movsl
adc
sti
xchg
adc
movb
or
mov
xchg
jnp
mov
fisttpll
stos
out
fwait
mov
mov
addr16
je
daa
fisttpl
push
adc
inc
jnp
sub
std
test
jno
push
call
pop
out
ret
shl
sarb
cli
push
jne
lds
add
jge
hlt
das
mov
sub
sbb
arpl
shll
xor
leave
sti
cmpsb
xor
sub
jo
lcall
xchg
jecxz
enter
pusha
pop
fbld
pusha
cmp
pop
add
cmp
scas
xchg
cmp
or
lea
pop
incl
js
sbb
imul
hlt
or
mov
mov
inc
mov
mov
mov
and
adc
outsl
cmc
bnd
xor
in
jae
dec
ja
scas
push
or
pusha
in
enter
mov
imul
test
shrl
mov
jp
push
push
xor
addr16
sbb
aad
mov
rorl
fsubrs
add
cmp
dec
jbe
popf
hlt
mov
cs
in
lds
imul
mov
and
ret
pop
jecxz
mov
insl
push
sbb
jno
lods
js
adc
pop
rcrb
sub
sub
test
insb
or
mov
fimuls
in
mov
stos
imul
dec
or
jnp
repnz
mull
mov
and
addr16
sbb
arpl
jmp
cmp
dec
dec
stos
xor
fstps
daa
xor
and
xchg
cld
or
xchg
cmpsb
or
cmc
inc
mov
pop
int3
call
mov
adc
aam
lret
jecxz
mov
fidivl
cwtl
test
nop
xchg
add
xor
lret
sub
cs
sbb
mov
or
jp
repnz
cmpsl
jmp
int
jle
rorl
lods
sti
cmp
push
sar
testb
mov
aad
mov
pushw
int
mov
loop
mov
xor
lret
jb
and
leave
mov
shlb
mov
push
clc
dec
pop
jecxz
xchg
mov
rclb
xor
cmp
sub
jb
jb
lock
inc
cmpsl
mov
movsb
aad
sub
push
cmp
dec
arpl
loopne
push
jae
shll
or
mov
mov
inc
and
push
cwtl
adc
jno
adc
adc
mov
testb
dec
mov
adcl
jae
mov
add
lods
jns
pop
mov
sub
pop
ret
andl
adc
fisubl
push
rorb
imul
push
notl
or
xchg
inc
push
daa
cld
xor
mov
adc
sbb
add
cli
sbb
or
icebp
icebp
mov
aas
or
lea
call
pushf
jo
je
pop
scas
popf
mov
xchg
aas
cmpb
xor
inc
clc
loop
jo
fs
inc
dec
lcall
mov
clc
mov
push
push
pop
add
out
or
cmp
outsl
enter
insb
xchg
add
mov
leave
pop
or
mov
fsubs
js
inc
fmuls
cmpsl
mov
mov
ficoms
push
sar
lret
ffreep
cmp
mov
adc
jns
scas
adc
arpl
and
movsb
and
lods
dec
out
pop
jnp
xorb
pop
mov
rorb
push
or
scas
xchg
fisttps
pusha
or
push
mov
or
rorb
inc
jb
jge
mov
xchg
cmp
fwait
pop
cmpsl
mov
daa
in
mov
rcrl
adc
and
icebp
pushf
cmc
je
add
in
inc
jb
sti
outsb
lret
subl
jecxz
repz
sub
push
daa
cmp
add
mov
int
and
xchg
cmpsl
and
xchg
xor
lret
sub
pop
adc
or
sahf
outsl
push
adc
pop
bound
outsb
pop
inc
loop
adcl
jmp
xchg
xchg
ret
push
pusha
mulb
cmpb
mov
pop
sarb
aad
popa
jbe
test
decb
jmp
push
jb
sbb
adc
dec
repz
mov
pop
shlb
testb
jb
js
stos
push
imulb
pop
push
loope
dec
sub
outsl
dec
push
xchg
add
add
add
cmp
add
int
sbb
sub
cltd
push
lahf
mov
mov
leave
fwait
pushf
mov
xor
call
rcll
pop
es
out
sar
mov
nop
pop
pop
mov
mov
jp
push
push
icebp
repnz
pop
rcr
out
mov
inc
or
test
call
add
scas
mov
xorb
repnz
je
idiv
movsb
in
popa
adc
addr16
pushf
in
out
adc
lds
xor
stos
jb
outsb
jo
bound
push
in
push
inc
mov
jge
push
imul
ret
outsb
mulb
jne
pop
pop
mov
adc
jns
aas
sbb
mov
rcr
and
push
hlt
and
mov
jb
push
test
loope
add
add
imul
jbe
ret
xchg
sub
lcall
xchg
and
jnp
dec
sub
sbb
stos
pop
dec
pop
mov
push
imul
int
xor
daa
xor
scas
push
mul
incl
sub
jne
hlt
iret
cmpsb
lds
mov
mov
scas
mov
xorb
xor
loopne
insb
push
flds
insb
jecxz
mov
and
cmp
movsb
cmp
mov
pusha
aam
adc
std
xchg
cld
dec
sbb
ficompl
cmc
out
rclb
mov
outsb
adc
int
gs
push
data16
mov
push
pop
xchg
and
sarb
lock
push
insb
repnz
imul
insl
cmp
mov
cltd
xlat
push
inc
mov
add
out
xchg
dec
in
arpl
mov
add
add
jge
jae
push
xchg
shl
ret
mov
test
ss
adc
mov
pop
mov
scas
inc
mov
fsubs
dec
scas
int
adc
fcoms
jg
mov
addb
sub
ja
or
ds
popa
popf
movsl
out
iret
aam
ds
jno
xor
test
std
lahf
cmpsb
dec
repz
add
outsl
push
mov
dec
loopne
jo
and
xor
divl
push
gs
aam
dec
xchg
rorl
adc
fadd
dec
sarl
repnz
shlb
lret
stc
dec
daa
pusha
movups
rcll
stos
insl
xchg
or
scas
or
das
push
out
movsl
sub
pusha
lcall
scas
push
je
xchg
mov
div
rcrb
cld
call
and
sub
xchg
xchg
lock
push
mov
je
ret
xchg
fcoms
fwait
imul
sbb
repz
jne
pop
lods
lods
xchg
std
dec
and
add
mov
scas
jle
jns
pop
arpl
push
and
imul
movsb
inc
pop
xchg
jp
cmp
xchg
loopne
inc
lcall
pop
dec
jp
inc
fistpll
mov
sbb
test
dec
sti
push
cmpsl
dec
pushf
les
hlt
addr16
mov
aam
jno
call
mov
push
pop
xlat
mov
or
dec
mov
test
addr16
dec
mov
or
adc
test
hlt
inc
pop
fldl
mov
imull
aas
nop
loop
mov
aas
repnz
movsb
xor
mov
sbb
cmpsb
daa
inc
filds
scas
aas
pop
aam
pop
sbb
fildll
cld
stos
pushf
jns
dec
xchg
jae
loopne
aaa
pusha
pop
mov
ret
mov
stos
fs
jecxz
jnp
xor
push
inc
cmpsb
add
int3
jo
fidivs
roll
xor
push
mov
fstpt
jmp
add
insb
sub
ljmp
lock
xchg
pop
jo
cld
popf
imul
loopne
stc
insb
imul
imul
pop
aad
lock
pop
imul
aas
sbb
daa
inc
jmp
mov
je
jae
adc
addb
je
ljmp
mov
or
loop
aaa
daa
or
sub
adc
xorb
jle,pn
movsl
cmp
sub
adc
mov
out
call
xor
lahf
mov
addr16
cmp
push
into
mov
loopne
or
loope
pop
testl
fs
in
fs
movsb
mov
inc
mov
and
fdivrp
shlb
sbb
insl
fdivrp
push
sub
mov
xabort
jne
jg
lahf
loope
ret
insl
out
xchg
cs
inc
and
fildll
cmpb
push
push
ljmp
rcrl
cmp
add
out
mov
mov
dec
adc
shlb
push
rorb
mov
mov
pop
xchg
fmull
jb
mov
out
scas
jno
sbb
out
push
jo
stc
and
fidivrl
push
mov
mov
fs
mov
lret
ret
in
scas
bound
pop
mov
lods
mov
mov
inc
sub
mov
pop
in
mov
add
addr16
cmp
xor
adc
add
jg
mov
std
pop
aas
andl
gs
jno
mov
adc
dec
pop
lock
in
mov
sub
mov
inc
push
push
pusha
mov
or
lret
mov
loop
and
push
push
stos
arpl
fsubrs
sbb
pushf
add
sub
les
fwait
test
mov
out
fdivs
push
xlat
xor
push
mov
dec
mov
mov
in
mov
ljmp
cs
and
cmp
mov
dec
ds
inc
sbb
mov
fnsave
push
fstpt
pop
jns
dec
jecxz
and
dec
lcall
push
dec
in
jg
pop
sti
dec
pusha
repnz
fnsave
xor
sub
dec
icebp
popa
repnz
jge
fiadds
fidivrl
cmc
jp
inc
in
push
jbe
jge
xor
jo
ret
cld
dec
xor
outsl
insl
jno
loope
lods
into
jle
pop
jp
fmull
popa
add
in
lahf
dec
pop
dec
fucomip
movaps
push
sub
xchg
inc
mov
popa
xchg
xor
mov
jg
xchg
pushw
push
addr16
push
fsubrl
movsb
rolb
bound
sub
mov
mov
and
or
andb
inc
lea
ffree
xchg
adcl
inc
iret
cmp
ja
stos
xchg
lret
movsl
inc
sbb
dec
nop
xor
in
inc
ficoml
movsb
push
push
jl
cmp
dec
and
cmpsb
sub
mov
mov
mov
icebp
push
xchg
repnz
add
mov
mov
dec
sbb
rorb
mov
dec
pop
adc
cmpsl
jl
fisubrl
mov
add
push
ljmp
daa
aad
lea
xchg
sarl
jge
push
cmp
mov
scas
cmp
aaa
push
adc
add
es
and
mov
insl
and
xor
dec
push
roll
push
mov
inc
daa
cwtl
mov
outsl
mov
out
cmp
cwtl
scas
jne
movsl
jno
xorb
mov
inc
addr16
jmp
and
dec
out
pop
cmp
mov
testl
mov
xchg
cmp
call
cmc
pop
mov
aas
test
mov
add
add
add
add
rolb
adc
inc
mov
cmpl
jne
pushl
pushl
push
push
push
push
pushl
push
pushl
pushl
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
xor
add
mov
movl
add
cmp
movl
je
mov
movl
jmp
mov
mov
cmp
movl
jne
movl
push
jmp
mov
mov
cmp
movl
jne
sbb
mov
andl
mov
inc
mov
cmpl
jne
push
pushl
push
pushl
push
call
cmpl
jb
movl
cmpl
je
cmpl
jne
call
xor
xor
dec
mov
jmp
mov
or
xor
and
add
andl
xor
add
inc
mov
cmpl
jne
push
pushl
call
cmpl
jne
xor
xor
inc
mov
cmpl
jb
xor
xor
or
mov
mov
mov
mov
xor
add
movl
imul
andl
mov
inc
mov
cmpl
jne
pushl
call
cmpl
jb
mov
xor
add
cmp
mov
push
je
mov
add
mov
mov
xor
add
imul
mov
jmp
mov
xor
mov
mov
xor
mov
mov
sub
add
mov
mov
jmp
pusha
sub
repz
xchg
cli
adc
je
jne
rolb
jl
sahf
inc
leave
jmp
popf
rcl
imul
pop
sbb
add
call
inc
adc
jecxz
xlat
mov
xor
or
add
push
pop
cld
mov
loope
pop
repz
sbb
pushf
icebp
adc
gs
ljmp
mov
sbb
fstpt
jb
and
push
mov
pop
cli
sub
or
jle,pt
in
adc
push
jmp
adc
fnstenv
outsb
xlat
cmp
sub
insl
mov
aad
je
mov
loop
mov
stos
xor
out
or
inc
push
je
sbb
repnz
bnd
mov
test
shrb
sbb
mov
xor
xchg
sub
push
lret
jbe
or
in
icebp
fcoml
xchg
sub
xchg
and
mov
jmp
mov
inc
xor
pop
ljmp
pop
out
mov
sbb
mov
mov
or
sub
cmp
cmp
inc
mov
xchg
je
xor
mov
fistpl
fwait
mov
test
push
xor
lds
dec
push
jmp
lock
iret
scas
sub
das
outsb
das
in
test
ja
std
insl
cmp
and
dec
lds
add
fiadds
cmp
pop
sub
jb
popa
js
lock
cmpsl
lret
sbb
in
adc
aad
shlb
rcl
pop
dec
jge
fmull
int3
jae
push
ja
xchg
cmp
dec
fstpl
fcomps
cmp
jne
jp
xchg
push
dec
rorb
dec
test
aad
fs
pop
pop
push
iret
push
rorb
mov
and
ja
sti
xor
imul
xchg
int
jle
jp
jo
jg
or
sub
adc
hlt
inc
inc
out
movsb
cmp
xor
dec
xchg
sub
loope
clc
sbb
xchg
fildll
lahf
jns
in
sub
mov
xor
cmp
roll
jl
loope
popf
add
in
pop
add
je
push
inc
test
popf
movsl
pop
or
add
rcrl
sbb
fdivr
pushf
das
cld
mov
mov
mov
mov
or
pop
repz
jmp
outsl
int
mov
cmp
int
loop
stos
xor
add
jp
xlat
jbe
lret
pushf
xor
cmp
cwtl
int
and
insb
ds
popa
or
adc
cmpsl
jl
adc
fnstsw
or
mov
or
rcll
jl
in
inc
stc
sti
jae
std
sub
pop
mov
sbb
and
add
jp
aam
or
jl
add
ja
in
push
daa
mov
xchg
je
cmpsb
stos
mov
leave
push
xor
movsb
xchg
jb
icebp
pop
push
or
adc
scas
push
lret
cmp
mov
test
stc
dec
mov
stc
leave
add
lcall
imul
pop
fs
mov
pop
loope
xor
or
and
jle
push
sarb
xorl
mov
mov
or
ret
xchg
push
push
lret
int
adc
mov
je
push
push
pushf
sti
es
gs
out
xor
mov
divl
adc
addl
test
int3
adcb
mov
mov
xor
shr
mov
cmp
jmp
sbb
xchg
cmc
inc
std
lret
jbe
stos
xchg
adcb
ret
add
or
pop
pop
scas
bound
jns
sbb
fnstsw
jecxz
mov
ret
scas
xchg
lea
cwtl
scas
aad
mov
sub
sbb
mov
or
add
pop
pop
popf
or
nop
cmp
xchg
out
popa
inc
ror
xchg
cwtl
in
pop
mov
out
sti
or
xor
out
mov
sbb
lret
enter
xorb
shlb
addr16
push
jge
ret
push
pop
pushf
cmpsl
inc
cli
xor
sub
pop
dec
mov
pop
insl
pushf
in
inc
insb
add
stos
dec
repnz
cld
or
std
push
push
cmp
mov
sysret
jb
fimuls
adc
out
sbb
jmp
push
out
pop
add
movsb
xchg
roll
lret
repz
jle
dec
bsr
aaa
and
dec
les
sub
ja
pop
mov
push
int
daa
mov
or
mov
push
adc
and
aas
cltd
std
pop
sub
btc
rorb
into
inc
jmp
sbb
cmp
pop
je
leave
and
js
xor
pop
das
inc
mov
int
xchg
shrl
cmp
into
gs
cltd
nop
mov
movsb
fadd
dec
mov
testb
out
cmp
adc
xor
fs
daa
xchg
das
scas
je
pop
outsb
lea
xchg
mov
pop
pop
pop
xchg
fwait
popf
ficompl
push
fbstp
jl
cmp
adc
ret
in
clc
orl
inc
scas
cltd
mov
mov
aam
repz
add
enter
dec
std
or
lds
jb
sbb
add
sbb
xchg
xchg
repnz
dec
push
xor
mov
pushf
pusha
outsb
lods
je
stc
js
les
outsl
jge
push
lret
mov
push
mov
push
pushf
shl
or
add
leave
std
xchg
out
or
lods
outsl
fisubrs
xchg
inc
fisttpl
mov
test
add
in
outsb
sub
outsl
push
cmp
mov
add
in
sub
pop
xchg
int3
xor
or
in
dec
xchg
out
jns
cmp
pop
xor
inc
test
dec
sbb
jmp
jno
add
lret
jo
arpl
shlb
cmpsb
mov
std
adc
lahf
je
lds
out
out
sub
shlb
pushf
push
pop
push
and
lock
sub
and
int
mov
jmp
cmp
mov
sahf
add
test
addr16
adc
lods
cmp
or
xchg
outsl
and
je
push
xchg
sbb
sar
jmp
jge
test
aam
or
shlb
or
push
scas
stc
or
mov
sbbl
jge
out
lods
jbe
sahf
jmp
adc
xor
pusha
inc
jo
xchg
test
jno
adc
jge
xor
adc
gs
mov
insl
adc
ljmp
mov
xlat
add
xor
test
jnp
addr16
bound
daa
inc
xchg
aas
inc
lds
inc
pop
fcomp
sbbl
test
pop
sbb
inc
aaa
xor
in
sbb
jg
mov
jge
cmp
sar
mov
iret
test
xchg
mov
enter
adc
mov
mov
push
pop
xchg
cmp
cmp
jns
loopne
loopne
sub
test
xchg
andb
cmp
or
dec
and
and
push
sub
jmp
inc
ja
clc
divl
rcrl
pop
push
hlt
outsl
rep
jp
imul
pextrw
test
aad
cmp
mov
and
add
aad
dec
sbb
jbe
jno
pop
xchg
jecxz
cltd
sub
loope
popf
dec
adc
sarb
mov
xchg
mov
sub
pushf
imul
imul
repnz
push
inc
daa
push
leave
push
sub
enter
leave
adc
mul
popf
lods
add
repz
and
stos
sbb
adc
imul
mov
ljmp
nop
xchg
je
mov
in
xchg
inc
or
push
nop
jmp
sub
sbb
pop
and
cmp
add
imul
mov
std
test
std
and
mov
fs
and
mov
jae
xchg
daa
mov
out
imul
and
jp
movsl
sub
lret
test
fstp
pop
sbb
xor
jmp
call
xchg
jae
scas
mov
pop
pop
scas
lds
xchg
cmp
setb
leave
jb
push
insl
mov
jbe
mov
inc
mov
cmp
out
mov
mov
jo
inc
jl
jne
insl
lahf
sti
and
stos
push
push
and
daa
mov
or
lcall
popa
aad
push
mov
sti
sbb
jns
pop
enter
ljmp
mov
inc
fcoms
loopne
dec
pop
sub
mov
jl
dec
pop
pushf
mov
into
stos
es
daa
lcall
mov
dec
jae
lcall
scas
inc
pop
jno
cmp
out
mov
xchg
jmp
sti
fnstenv
or
test
push
in
int
enter
in
dec
in
inc
pop
enter
adc
incb
mov
fisttpl
push
std
xchg
imul
leave
push
addr16
popf
daa
pop
mov
int3
jae
scas
movsl
jae
popa
cmp
mov
or
lods
rcll
outsb
les
jb
aam
sub
pop
adc
js
xchg
pop
sub
mov
mov
adc
in
mov
test
mov
add
mov
xor
xchg
mov
les
sbb
pop
cmc
out
push
lret
loope
or
rcr
adc
xor
and
daa
pop
bound
push
fidivs
cmc
mov
std
int3
notl
sbb
enter
pop
cmp
lahf
leave
sbb
fdivrs
mov
adc
mov
xchg
add
test
sub
inc
inc
and
jns
add
andl
push
mov
xchg
in
loope,pt
mov
mov
int
sbb
je
sarl
pop
mov
sbb
repnz
std
out
xchg
mov
or
pop
sbb
push
call
xchg
jbe
add
jg
cltd
lock
inc
jbe
jle
pop
out
mov
pushf
pop
mov
pop
pop
jl
push
mov
shrb
and
pop
hlt
cmc
cmpsb
push
xchg
cmp
rolb
mov
in
nop
cmc
hlt
xor
xchg
mov
inc
leave
lds
xchg
adc
push
and
out
es
lcall
push
divb
push
int
jg
rol
adc
fisttpll
ret
or
jmp
lret
cmp
lods
mov
hlt
pusha
pushf
inc
push
sub
shl
movsb
cmp
fdivrs
inc
cmc
mov
sbb
out
in
nop
mov
sub
jo
rol
dec
in
push
xchg
xchg
push
push
jl
bound
fsts
lods
xchg
dec
fisubrs
xlat
or
inc
test
iret
cmpsl
sub
pushf
inc
push
cmp
jns
fisubs
xchg
not
movsb
sbbl
insl
add
in
push
jae
or
daa
mov
rorl
sub
imulb
or
dec
outsb
jbe
push
int3
mov
arpl
and
adc
cltd
ret
inc
push
aam
add
mov
push
icebp
lret
fcomp
jne
adc
jge
cmp
movsb
aaa
push
cmp
cmp
cmp
pop
outsl
sarl
sub
mov
shll
out
std
mov
cmpsb
xchg
mov
dec
dec
jae
dec
and
mov
push
mov
std
push
or
jecxz
rcll
adcb
push
or
adc
cmp
adc
outsb
sbbb
lds
in
mov
mov
jle
mov
data16
inc
and
mov
jmp
idivb
les
repz
in
dec
adc
push
jl
sbb
dec
push
scas
jnp
cwtl
inc
out
enter
aaa
inc
sahf
add
or
fnstenv
sbb
stos
add
push
test
cmp
or
pop
sub
xchg
pop
imul
adc
std
adc
scas
jbe
xchg
sbb
or
imul
mov
stos
test
mov
sub
std
mov
inc
xchg
arpl
xchg
out
jae
andb
push
jb
push
jne
data16
fsubrl
xor
dec
fcompl
lret
out
js
mov
ja
inc
add
push
or
cltd
inc
pop
jg
mov
jmp
mov
mov
out
fwait
xchg
mov
das
mov
int
aaa
out
jbe
sub
imul
jle
scas
lret
pop
push
mov
fnstenv
jg
incl
inc
adc
and
and
addl
adc
and
loope
cmp
mov
imul
adc
imul
jo,pt
xchg
lret
insl
lcall
jmp
dec
popa
insb
scas
inc
ljmp
je
mov
mov
add
lods
jl
bound
add
idivl
add
andb
lods
cmpsl
add
mov
push
mov
fs
aas
pop
cmp
cltd
push
adc
negl
scas
and
xchg
popa
imul
push
xchg
xchg
imul
mov
mov
cmp
not
mov
mov
lods
pop
sub
dec
inc
and
das
sbb
xor
pop
clc
outsl
push
or
mov
adc
and
or
cmp
shll
cmp
icebp
sbb
testl
jge
mov
inc
fnsave
fwait
les
sub
dec
cld
add
mov
jae
mov
pusha
push
insl
push
xchg
pop
shrl
xlat
mov
pushf
pushf
testb
or
sbb
icebp
ret
cmp
mov
dec
aas
mov
sbb
jno
inc
popf
or
jae
xchg
sarl
xor
sbb
and
sti
add
xor
ret
faddl
sbb
rcll
dec
lea
outsl
ds
dec
pop
das
adc
jb
popf
aam
jge
fsubrl
xchg
leave
push
cmpsl
inc
jo
fidivrl
movsb
fs
aad
iret
fwait
cld
mov
sbb
out
cmpsl
rorl
int3
cmp
mov
out
dec
in
cmc
mov
mov
dec
aad
test
cmp
dec
jge
enter
and
mov
mov
cmp
mov
sub
mov
xor
sub
jbe
mov
or
push
pop
aam
daa
push
pop
adc
mov
dec
repnz
mov
les
pop
xor
sub
xchg
jb
xchg
popf
maskmovq
testl
jb
mov
xlat
out
inc
int3
cmpsb
fists
add
arpl
stos
fcompl
cmp
imul
dec
dec
adc
add
shl
mov
xchg
pop
sahf
fistl
or
roll
xor
inc
or
cld
imul
mov
sbbb
sub
mov
js
mov
fiaddl
clc
push
aam
cmp
call
lret
jo
cld
sbb
je
xchg
out
xor
subl
inc
pop
mov
push
xor
push
push
pop
add
in
lret
fimuls
movsb
pop
sub
push
and
sub
ret
inc
push
xor
dec
lea
cmp
cmp
pop
shll
loop
out
pop
sbb
shr
jae
xor
xchg
mov
cmp
stos
std
bound
fiaddl
sbb
xor
adc
lods
dec
bound
ficoml
int
sub
dec
test
arpl
and
or
adc
mov
mov
inc
jae
inc
and
sahf
xor
and
mov
push
out
dec
daa
or
popa
sbb
xchg
mov
in
pop
inc
in
rcll
rcrb
arpl
jno
and
push
xchg
lods
incb
rclb
pop
inc
pop
adc
add
adc
add
jle
subb
fbstp
jb
adc
shrb
push
sbb
test
xchg
orb
pop
stc
add
dec
pop
sahf
ss
repz
sub
mov
push
ret
adc
test
adc
test
add
je
add
pop
adc
into
lods
roll
movsb
test
js
ljmp
pop
xchg
rcr
mov
out
jmp
mov
rclb
sub
das
cmp
fistps
mov
mov
lahf
mov
lahf
sbb
adc
aad
mov
int
sub
jb
or
cmp
es
or
ret
shll
jb
inc
pop
in
jno
sbb
pop
jmp
cld
jno
mov
mov
and
mov
roll
in
pop
inc
mov
push
push
jp
rcrb
mov
mov
sbb
push
mov
idivl
mov
je
fadds
in
ds
pop
cmp
neg
enter
mov
fwait
cs
pop
jne
fnstsw
adcb
dec
cltd
xchg
fidivs
mov
xor
add
aaa
lds
jecxz
dec
les
int3
shrl
cmpsl
arpl
les
fists
mov
jo
jge
push
mov
rcrl
out
push
in
fstpl
mov
pop
sbb
ljmp
add
and
js
jg
decl
pop
or
xor
movsl
insl
cltd
and
jnp
aad
add
adc
lea
mov
or
rolb
inc
icebp
addb
rcll
cmp
or
ljmp
pop
test
jl
sub
insl
stos
outsb
sbb
cli
dec
cmp
xor
cmp
xchg
xchg
lods
sub
leave
sbb
cmp
out
hlt
or
mov
cmpl
dec
popa
daa
movsb
mov
mov
dec
cmp
push
mov
les
cmpsb
pop
push
sub
mov
sbbl
mov
fs
fstl
adc
cltd
mov
shrb
push
test
and
aaa
xchg
dec
add
or
push
nop
test
pushf
mov
inc
xlat
outsl
scas
repz
lods
imul
push
mov
adc
sub
std
sbb
in
mov
pop
iret
outsl
mov
add
les
mov
dec
stos
das
sbb
mov
int
or
daa
lret
repnz
add
ret
jmp
in
sub
stc
stc
popa
jns
adc
in
mov
push
sub
pop
cmp
dec
ljmp
inc
icebp
jg
jns
dec
out
sbb
insl
jmp
adc
add
add
cmp
push
or
or
lock
mov
dec
shl
or
sbb
push
xchg
xor
jae
inc
movsl
sub
gs
jmp
xor
cmp
adc
loop
cmp
insl
inc
mov
rcrb
std
dec
ret
in
push
jecxz
loop
movsl
mov
jp
sbb
mov
add
xchg
cs
inc
test
cmp
xchg
xor
pop
cmpsl
adc
pop
fisubrl
xorb
lock
push
cmovb
clc
fwait
inc
fcmovbe
data16
into
cmp
jbe
aaa
mov
push
mov
jg,pn
pop
aam
jae
mov
sub
push
popf
mov
cmc
pushf
lret
fbld
insl
jp
push
ss
mov
or
mov
push
ds
push
out
out
dec
out
or
xchg
and
jl
or
dec
lds
adc
imulb
xchg
loop,pn
pop
or
push
inc
insl
inc
mov
cwtl
test
fistps
jne
fstps
icebp
pop
sub
xor
xchg
jmp
loope
xor
sub
mov
pop
stc
xor
pop
sub
mov
and
or
dec
es
scas
lods
mov
push
shlb
jno
es
out
repnz
test
call
les
push
jp
movsb
jge
dec
inc
fbstp
loopne
mov
jl
xor
lods
dec
in
jae
xchg
mov
cmp
fsubr
into
or
in
imul
sahf
mov
out
inc
jle
nop
inc
xchg
dec
fidivrs
icebp
jle
adc
das
xlat
divl
aam
push
xchg
or
test
fimuls
into
sub
clc
mov
sbb
add
scas
jl
inc
test
add
xorl
leave
mov
loop
insl
adc
nop
inc
mov
sub
leave
stc
inc
push
popa
pop
push
sahf
fbld
test
in
out
inc
aas
cld
mov
pop
add
jne
out
push
call
cmp
mov
pop
rolb
jp
fdivrs
adc
add
nop
out
pop
pusha
dec
ret
adc
adc
fistl
loop
mov
xor
pop
dec
clc
jae
dec
cmp
fimull
cmp
mov
or
inc
jb
je
push
in
fs
lret
iret
sub
sub
aam
cmp
notb
and
jns
cs
rolb
xor
pop
dec
sbb
fisubrs
pop
inc
inc
xchg
jmp
jecxz
ds
loope
and
push
int3
sub
cld
clc
xor
push
inc
add
repnz
mov
pop
mov
push
sub
lret
and
cmp
pop
jnp
sbb
adc
and
outsb
call
aad
mov
out
test
adc
push
cwtl
dec
ss
push
popf
inc
pop
fsubs
jo
ret
and
testl
ja
mov
jnp
sub
sbb
popf
dec
idivl
cltd
lea
xor
xchg
iret
rcl
or
sbb
push
mov
fwait
adc
notb
out
jl
rcll
jbe
add
repz
xchg
cmp
adc
mov
xchg
ja
inc
sbb
pop
out
cmp
or
xchg
mov
scas
inc
aaa
dec
cli
add
push
pushf
cmp
mov
jbe
xlat
rcrb
sub
xchg
add
mov
mov
mov
outsl
adc
adc
cs
sub
push
sub
xor
in
xlat
sbb
hlt
dec
shlb
jne
adc
xor
out
mov
loop
dec
fmuls
or
aad
push
adc
push
sti
icebp
mov
loopne
stc
cmp
xchg
jl
aad
jmp
cs
jmp
inc
lcall
jnp
orl
cmp
or
scas
aad
sub
mov
sbb
test
pop
push
mov
inc
aad
fidivl
mov
ret
adc
ret
cmp
ds
or
rol
scas
les
and
dec
fstl
fmuls
lret
mov
test
rcrl
dec
ljmp
test
lcall
mov
mov
add
inc
pop
fstps
xchg
jp
mov
mov
jb
xchg
sub
push
adc
mov
xchg
adc
cmpsb
popf
mov
jne
sbb
xorl
lock
pop
pop
add
lea
jp
icebp
mov
je
ja
dec
xchg
pop
and
cmpsb
ja
call
out
inc
push
adc
pop
test
mov
mov
sbb
ret
cmp
add
repz
pop
sub
fst
daa
pop
xor
std
mov
decb
dec
push
and
loopne
dec
out
aam
aad
lods
mov
xor
dec
pop
out
inc
scas
inc
add
das
pop
push
sub
mov
icebp
jnp
xor
aam
push
test
adc
lahf
imul
loope
jbe
cmp
test
sub
ljmp
es
pop
cli
push
or
dec
lds
mov
outsb
aas
ret
js
xchg
fisttps
add
inc
xchg
mov
das
dec
popa
lea
add
leave
in
and
in
dec
addr16
fs
popa
jmp
shlb
shrl
out
in
rcl
mov
add
mov
andl
pop
and
sub
sub
push
popf
pop
stos
cs
pop
out
repnz
sbb
fcoml
inc
ret
mov
mov
jae
insl
and
addr16
xor
cmpsb
adc
push
stos
mov
js
dec
ret
addl
add
inc
lahf
adcb
xchg
dec
cmpsb
sarb
aas
push
aaa
addl
cmp
nop
sbb
jmp
dec
in
lods
inc
adc
into
mov
jno
ftst
push
ret
lds
mov
mov
push
dec
mov
int
xor
xchg
cltd
movsb
sti
mov
sbb
add
xorb
scas
lahf
push
aas
iret
ja
jb
mov
inc
xchg
jg
xchg
cmpsb
push
gs
popf
test
mov
ror
dec
arpl
sbb
mov
mov
and
sarl
inc
adcl
sti
call
mov
in
sub
mov
dec
mov
das
mov
aad
push
repnz
jg
sub
lods
fstpt
negl
aas
pushf
or
fmul
cmc
dec
jbe
xor
mov
push
cmp
call
sub
movsb
mov
stos
cmp
cmpl
data16
sbb
mov
or
mov
dec
jnp
fcmovb
cmp
or
test
loope
xchg
scas
push
xchg
inc
and
movsl
pop
mov
add
mov
ja
cld
inc
jno
jmp
stc
lcall
lret
xchg
and
jg
frstor
out
cmp
pop
pop
pop
pop
xlat
fcoms
and
cmp
in
test
xchg
pop
decb
lods
cmp
fnstsw
mov
int3
mov
sbbl
imul
xchg
mov
adc
xchg
ret
test
insb
lcall
jne
xchg
dec
adc
rclb
push
cmp
sbb
push
jnp
popa
stos
sbb
scas
xchg
dec
cmp
loopne
and
fs
in
outsb
mov
stos
lock
insb
call
and
sub
shll
jb
mov
or
sar
andb
fdivs
adc
int
sbb
sub
test
mov
adcb
xor
mov
mov
movsb
insl
jbe
xchg
movsb
mov
loopne
mov
lcall
ljmp
xchg
inc
jl
pushf
mov
loopne
test
mov
sbb
push
adc
pop
sub
dec
sub
mov
dec
out
jmp
xor
out
xchg
fstpl
data16
call
add
xchg
out
insb
ret
add
and
shll
mov
or
movl
or
popa
adcl
xchg
sub
nop
es
jecxz
pusha
popf
push
pop
ljmp
inc
es
sbb
mov
pop
pop
add
inc
loop
xor
xchg
xlat
xchg
or
bound
dec
mov
jge
or
cmp
cmp
pushl
jmp
ret
insl
out
mov
fnstcw
sbb
dec
or
or
int
loopne
sub
inc
daa
outsl
fwait
pop
inc
push
xor
adc
outsl
mov
or
leave
add
pop
ds
aas
inc
sbb
adc
pop
mov
loopne
lods
loop
sub
std
xchg
lcall
in
cmp
mov
ret
sub
ficoml
mov
fstpt
arpl
xchg
sub
xor
mov
xlat
add
in
cmp
stc
dec
loopne
pop
aaa
mov
mov
or
add
leave
and
fwait
negl
shrb
pop
lret
nop
mov
rcrb
push
xchg
inc
and
pop
adc
popa
jmp
frstor
push
lret
ss
xor
jno
shll
pop
dec
xchg
int
pop
inc
dec
cmpl
mov
adc
xchg
inc
movsb
or
cmpsb
fildl
push
iret
inc
popf
shlb
mov
mov
pop
jp
gs
push
into
test
mov
mov
outsl
jmp
int
lds
xor
lods
pop
xchg
inc
sub
out
aam
mov
mov
addr16
pop
das
cmp
push
push
mov
add
cmpsb
shll
push
xor
cmp
push
lds
adc
sub
and
les
popa
icebp
filds
in
mov
mov
leave
xlat
ja
dec
sbb
cmc
jae
stos
pusha
mov
pop
mov
pushf
divl
mov
icebp
xchg
das
movsl
out
fs
rcll
jbe
dec
pop
jmp
adc
dec
insb
mov
add
mov
arpl
aad
iret
cmp
rcr
pop
scas
push
mov
xchg
xor
inc
fnstcw
push
ret
or
inc
mov
out
dec
pop
nop
js
mov
sbb
mov
mov
lea
push
add
add
lret
into
jge
pop
cmp
fdivrp
addb
dec
xor
fadd
sahf
call
mov
cmp
imul
jb
testl
and
mov
sbb
xchg
jecxz
sub
shrb
inc
pop
inc
mov
subl
cs
cmp
mov
inc
bnd
loope
xchg
icebp
sbb
cmp
repnz
cmpsl
mov
nop
arpl
cmp
sbb
mov
inc
gs
jmp
dec
nop
xor
dec
sbb
cld
fwait
mov
fsubl
jns
cwtl
cmp
pop
push
hlt
fidivrl
xor
cmp
cmp
dec
sbb
jg
int3
repz
int
inc
out
sub
repz
adc
adc
jmp
test
push
cmp
mov
stos
dec
ja
rcrl
and
test
aam
je
dec
gs
dec
cmc
aad
jne
stos
push
bound
and
pop
jmp
loop
pop
or
push
xor
ret
addb
sbb
mov
jg
jnp
cltd
rorb
xlat
out
scas
lret
test
xchg
mov
add
pop
mov
mov
aas
push
fs
insb
pushl
or
in
fs
stos
cmp
jnp
or
js
jg
mov
dec
jl
fisubrs
jno
or
dec
push
xchg
xor
fneni(8087
xor
inc
adc
cmc
add
rolb
mov
mov
pusha
mov
mulb
mov
push
insl
repz
mov
fmuls
scas
cmc
cmp
pop
mov
cmpsb
or
rorl
jnp
pop
add
test
adc
adcl
xchg
in
shrl
adc
xchg
out
lret
scas
inc
in
hlt
jmp
mov
push
and
shll
insb
out
mov
in
xor
es
movsb
insb
imul
js
and
push
fstpl
stos
sbb
pushf
push
cs
in
or
xchg
cltd
ficoml
jnp
and
pop
les
rep
add
cmp
or
jge
xor
xor
lea
mov
xor
add
imul
mov
xor
sub
mov
add
cmp
mov
mov
jg
xor
mov
sub
add
jmp
xor
add
add
mov
mov
mov
xor
add
not
and
movsbw
mov
sub
mov
xor
mov
cmp
jne
movsbw
mov
sub
mov
xor
mov
cmp
je
mov
xor
mov
sub
add
jmp
mov
mov
jmp
dec
sub
pusha
repz
or
test
enter
loopne
jl
pop
jl
push
adc
mov
xchg
mov
push
imull
sub
neg
xlat
in
add
stc
mov
xchg
cmp
jns
pushf
sbb
std
pop
testb
stc
popa
movsl
push
ds
aaa
mov
sti
inc
mov
sub
in
mov
xchg
jne
jnp
sub
mov
mov
aas
pop
or
fwait
imul
popf
jo
imul
mov
sbb
dec
and
arpl
cmp
int
enter
jne
jo
xchg
pop
lds
jecxz
outsb
pop
sub
repnz
ret
add
divl
test
in
and
add
mov
loopne
mov
xor
test
push
insb
jp
adc
adc
xlat
or
jle
sub
test
mov
pop
or
testl
popa
data16
xor
xchg
adcb
jmp
mov
push
testl
in
pushf
sbb
dec
ss
clc
xchg
fadds
dec
inc
push
outsl
jno
fs
or
mov
dec
pop
enter
lret
sar
xchg
jl
ja
inc
clc
inc
popa
scas
sbb
popa
push
push
xchg
rolb
aad
xchg
ss
mov
mov
arpl
in
add
add
decb
cmp
and
test
jg
cwtl
fmulp
sbb
cmp
xchg
sbb
pushf
cmp
mov
cld
fdivs
xlat
cmp
nop
dec
xchg
add
or
loope
arpl
data16
push
test
jg
dec
int
or
add
out
mov
cs
lcall
mov
je
mov
add
sub
aas
push
repz
mov
popl
pop
les
jl
cmp
fs
les
mov
mov
dec
pop
out
sahf
mov
jb
sti
pop
data16
dec
push
mov
push
loopne
sbb
in
pop
pop
xor
enter
pop
fmull
and
in
lea
jbe
out
lea
pop
xor
sti
dec
jmp
es
dec
jg
sbb
mov
push
pop
loope
out
push
push
sub
or
cmpb
cs
jmp
push
mov
es
scas
insb
pushf
cmp
ja
arpl
sbb
in
lds
sub
aaa
fldt
mov
mov
push
push
imul
je
mov
push
xor
add
push
mov
fs
ljmp
outsl
mov
push
xor
add
nop
mov
inc
ljmp
or
sub
andb
test
stos
scas
repnz
xor
inc
or
adc
and
outsl
pop
mov
js
or
and
and
shll
mov
testb
std
sbb
lcall
mov
sarl
ret
and
imul
out
mov
and
pop
out
lahf
dec
roll
or
in
das
lock
test
fcmove
inc
adc
inc
fldt
outsl
rcrl
xor
sub
and
insl
cmpsl
adc
add
pop
jne
lds
and
push
and
add
sub
pop
and
das
scas
pop
ss
mov
cwtl
test
flds
adc
gs
mov
and
mov
pop
inc
push
xchg
jnp
push
ror
cwtl
nop
sbb
lahf
std
or
rcl
ss
lea
leave
and
inc
scas
xlat
cmp
imul
inc
movsb
jns
jae
push
mov
test
push
in
push
add
xor
das
fsub
inc
into
daa
lcall
cld
negb
leave
mov
aam
fmuls
cmpsb
pop
jno
clc
jle
scas
mov
push
and
inc
or
xchg
push
std
push
loop
mov
jecxz
test
add
test
and
mov
ffree
jb
push
add
pop
sub
jo
fwait
in
cmp
push
or
ficoml
rolb
xchg
mov
adc
mov
sub
jg
add
jmp
int
push
rclb
or
xchg
cmpb
mov
fcmovb
repnz
dec
es
jno
cmpl
push
adc
jg
dec
stos
pop
lahf
sar
loopne
int
and
je
jbe
call
or
push
leave
fisttps
in
shll
or
cmp
pop
and
test
das
dec
sub
andb
dec
mov
repnz
mov
mov
sub
or
clc
inc
sub
sub
int3
push
mov
fdivl
sbb
xchg
out
int3
and
addps
jb
xor
xor
inc
add
mov
cli
xor
push
pushf
js
daa
pop
mov
fcmove
xchg
xchg
inc
add
lds
das
jb
pop
jmp
rorl
rorb
dec
sub
loope
shrb
imul
faddl
stos
mov
or
pusha
loop
lcall
out
sub
mov
push
mov
dec
xchg
adc
sbb
stos
push
mov
pop
xchg
mov
stos
fidivrs
fisttps
adc
jle
ret
push
adc
xchg
outsb
nop
xchg
test
adc
int3
dec
test
mov
jnp
rcll
pop
aad
add
inc
daa
arpl
adc
jecxz
jns
mov
mov
jmp
xorl
mov
mov
fsubrs
ret
sbb
mov
stos
pop
jmp
shl
sbb
or
divb
bound
data16
xchg
cmc
sbb
and
pop
dec
inc
sub
pop
data16
and
sbb
int3
cmpb
loope
call
push
out
into
xlat
cwtl
inc
xor
jbe
and
xchg
sbb
fwait
or
int
movsl
scas
hlt
adc
pop
loopne
int
sbb
mov
das
dec
cmp
frstor
test
shlb
aad
cwtl
leave
fdivrl
cmp
jne
jmp
adc
popa
xlat
cmp
cmp
or
scas
lahf
testl
in
addr16
test
movsb
out
jp
psubw
mov
mov
add
test
push
jl
ror
cltd
cltd
inc
shl
pop
xchg
lods
inc
xor
adcl
pop
rcrl
gs
mov
das
movsb
stos
mov
push
jle
push
stos
mov
stos
test
fld
pop
imul
sub
mov
out
jmp
incl
cmp
pop
cmp
push
arpl
jae
sbb
xlat
dec
nop
icebp
outsb
push
adc
mov
inc
and
add
mov
pop
dec
lds
arpl
movsb
loop
xlat
lods
aaa
mov
scas
fistpl
xchg
lcall
fiadds
cmp
dec
cmpsb
sbb
pop
std
push
addr16
ret
jns
pop
and
pop
clc
and
cmpsb
or
fsubs
or
push
xchg
cmp
add
movsl
aam
and
jno
lea
push
cli
outsb
or
cmc
xchg
outsb
test
and
mov
das
sub
jl
addr16
incl
fsts
jbe
jl
int3
arpl
fisttpll
int3
adc
cmpsb
mov
mov
inc
xchg
sbb
stos
loopne
adc
sub
daa
call
jnp
rcrb
dec
ret
mov
inc
push
push
ret
adc
push
mull
xor
out
dec
add
je
push
insl
jge
sbb
jecxz
fsts
es
cmpsl
hlt
lock
push
mov
pop
inc
leave
adc
testb
adc
mov
loope
mov
sbb
cli
dec
cmp
and
bound
push
icebp
rcrb
dec
pop
pop
fdivp
add
out
adc
sub
test
add
push
cs
and
mov
pop
je
insl
shrb
dec
or
adc
ss
cld
sbb
inc
xchg
js
icebp
lock
jne
mov
jp
cmpb
jp
test
xchg
push
negl
xchg
stos
mov
xchg
in
xorl
push
push
sbbb
and
dec
aad
sub
sub
aam
inc
je
in
not
js
outsb
pop
xchg
out
pop
mov
jne
xchg
outsb
scas
inc
push
mov
cs
lcall
pop
lods
fcomps
stos
or
mov
movsl
repz
cli
mov
mov
pusha
adc
fdivr
gs
pop
pop
cmp
lfs
jg
sbb
cli
shl
flds
imul
das
test
jae
out
popa
mov
ficompl
scas
subl
gs
jnp
mov
xlat
xor
daa
xchg
or
xor
shrl
inc
dec
bound
mov
scas
xor
testl
out
xchg
mov
xor
cwtl
inc
pushf
jmp
push
int
inc
out
pop
and
nop
adc
cld
sbb
int3
sbb
add
lcall
cmp
push
fisubrl
movsl
mov
sbb
mov
mov
outsl
fadd
out
insl
sub
push
add
sub
and
scas
out
gs
shlb
fxtract
insb
icebp
cmp
xor
jecxz
sub
dec
pop
xchg
pop
movsl
push
mov
ss
ret
mov
das
int3
dec
dec
stos
or
add
sub
pop
pop
cmpsb
jecxz
notl
shl
or
and
repnz
adc
xchg
pop
pop
insb
test
or
and
lock
pushf
scas
arpl
dec
pushf
and
and
add
inc
cmp
movsb
in
in
leave
adc
xchg
ljmp
sub
xor
and
xchg
mov
fdivp
in
xchg
es
mov
je
adc
outsb
in
mov
xor
pcmpeqb
ret
mov
and
mov
cmpsl
call
xchg
mov
dec
fiaddl
int
xor
sbb
daa
jge
fildl
xchg
lods
repz
push
cmc
ds
iret
add
bound
pop
bound
sbbb
fcmovu
mov
inc
jmp
jge
adc
in
add
imul
sahf
cmp
mov
push
mov
xchg
out
push
push
mov
int3
out
inc
fdiv
and
adc
fwait
cmp
out
aad
inc
lret
lods
js
jp
mov
movsb
jl
add
jg
aas
xchg
and
adc
push
enter
outsl
sub
jns
fcmovnu
adc
daa
mov
sbb
call
mov
push
aad
rorb
inc
ret
outsl
pop
outsl
jp
fcoml
cmpb
test
aas
fldt
aas
cmp
imul
ss
mov
pop
xor
clc
les
xlat
rcrb
push
sahf
jecxz
mov
adcb
int
sub
adc
int3
shr
in
mov
insl
mov
hlt
roll
movsl
mov
cmp
xlat
movsbl
inc
sbb
mov
lahf
jne
sbb
inc
dec
mov
lock
je
aam
loope
dec
in
push
add
sbb
sub
add
mov
dec
mov
push
out
ficoms
adcl
mov
inc
pop
xchg
push
cmp
sub
sub
sub
or
out
cmp
mov
leave
mov
ret
cs
pop
sahf
sub
xor
es
popf
xchg
push
mov
sti
jmp
pop
lods
push
lods
mov
or
jno
jae
xchg
cmc
mov
xor
lods
arpl
pop
inc
push
sub
sub
int
ljmpw
jb
mov
scas
cmp
jae
push
repnz
and
fcoms
xchg
js
int
and
stc
push
jg
sub
xchg
push
add
ffreep
adc
xchg
mov
inc
or
adc
fwait
in
mov
in
filds
mov
add
push
ds
push
popf
jb
stos
fs
add
cwtl
mov
scas
popf
outsl
cmpsb
xor
mov
adc
or
lret
push
xchg
sub
push
xchg
or
cld
or
jge
sub
push
scas
in
test
mov
sub
mov
sarb
arpl
push
iret
je
dec
jecxz
pop
pop
xor
or
inc
mov
cli
pop
sti
mov
and
dec
add
add
rep
test
pop
and
xlat
gs
lret
cmp
sub
fsubrp
and
adc
aam
push
mov
shll
cmpsb
or
int3
and
inc
inc
ret
cmpl
xchg
cmp
sbb
popa
test
test
xor
ss
lahf
adc
popf
fwait
sub
mov
bound
aas
sub
sbb
leave
lods
cmp
pop
sbb
adc
jns
or
pop
dec
stos
or
scas
and
leave
cmpsb
jb
sbb
xor
and
bound
out
xor
or
test
das
data16
cmp
inc
pop
lcall
scas
in
test
push
mov
sub
sti
daa
imul
jge
aad
test
cmp
in
cmpl
adc
add
mov
or
dec
int3
loope
adc
cmp
xor
pop
adc
fldcw
pop
pop
jne
fidivrl
fs
in
adc
outsl
push
cmp
popa
rorb
adc
adcb
and
pushf
ja
sahf
lods
inc
adcb
adcl
xor
rorb
xchg
mov
popf
inc
push
loope
mov
push
cmpl
fwait
shrl
iret
and
rorl
pop
push
ja
pop
and
in
dec
call
pop
inc
xchg
das
xchg
xchg
leave
dec
xchg
sbb
orl
ret
mov
test
dec
mov
mov
call
nop
sarl
data16
daa
pop
dec
fimull
iret
jle
aaa
imul
mov
dec
push
and
mov
dec
scas
push
adc
xchg
roll
mov
test
stos
push
es
push
mov
lea
lock
shl
inc
das
mov
pop
jle
sbb
pop
rcrl
mov
sub
mov
cs
mov
xchg
push
es
add
or
mov
mov
inc
rcll
stos
std
ret
jns
sub
out
inc
mov
pop
cmp
and
xlat
mov
push
sub
or
std
pop
sbb
scas
stc
mov
das
repnz
lock
lret
mov
xchg
mov
xor
pop
cld
bound
jmp
mov
fcmovnb
mov
push
out
test
xor
cld
xchg
negl
lods
sub
cmp
daa
pop
mov
jb
sbb
lods
jecxz
jp
push
push
dec
imul
jl
inc
or
and
dec
fwait
nop/reserved
stos
cmp
sbb
push
and
loop
in
xor
push
cltd
lcall
add
cmpsl
xchg
inc
mov
sti
repnz
lcall
test
mov
xchg
mov
gs
push
js
xor
shll
pop
mov
or
xchg
pop
mov
hlt
add
lahf
cmc
stc
cmpsl
daa
xlat
out
push
mov
add
push
xor
data16
adc
clc
pop
cmp
adc
mov
add
adc
ljmp
fnstsw
cmp
jg
sbb
inc
es
test
shll
lock
cmp
and
push
mov
mov
fistl
stos
sti
pusha
xchg
pop
push
popf
sahf
lods
jne
lods
push
lods
stos
mov
dec
inc
repz
orl
gs
sahf
xacquire
rdtsc
or
pop
add
mov
repz
test
jae
in
xor
mov
lret
es
jg
pop
cld
push
mov
xor
xchg
inc
jae
insb
out
and
scas
sahf
in
jle
bound
fbld
mov
outsb
testb
mov
sub
out
xor
hlt
mov
push
insl
je
cmc
test
call
mov
fwait
adc
mov
addb
xchg
or
ds
scas
sub
dec
stos
pop
mov
inc
loopne
cmp
sub
sbb
into
repnz
or
inc
dec
inc
cmp
outsl
mov
or
mov
test
push
in
or
scas
mov
test
mov
lret
mov
adc
pop
out
imul
repnz
popa
int
dec
mov
mov
adc
cs
jno
inc
arpl
mov
jb
loopne
xchg
and
shrl
shll
movsl
mov
inc
xor
mov
xor
lahf
mov
dec
sub
jecxz
test
pop
fistpll
rorb
jp
mov
shl
and
add
das
scas
test
cmp
int3
jge
push
mov
sbb
inc
enter
dec
sbb
xor
inc
xchg
add
push
sbb
sahf
xchg
jl
in
aaa
inc
inc
xlat
push
ret
adc
movsb
adc
push
lahf
and
test
stc
movsl
mov
add
gs
cmp
mov
dec
ret
aad
js
fisubrl
dec
scas
jb
imul
mov
rorb
testl
push
int
push
jns
rolb
and
pop
jge
movl
scas
mov
lret
jecxz
add
mov
adc
and
mov
sbb
mov
js
ja
filds
shll
outsl
adc
inc
iret
xchg
xchg
inc
int
daa
sub
pop
jno
mov
leave
insb
es
cmp
xchg
lods
inc
cwtl
jg
lret
and
push
mov
pop
dec
sub
or
push
aad
mov
fidivl
mov
into
push
cmpsb
aas
jmp
ljmp
mov
jbe
stos
mov
daa
add
sub
popf
pop
popl
adc
imul
ss
sbb
es
enter
dec
enter
clc
mov
das
mov
sub
pusha
addl
xchg
mov
mov
push
jge
shlb
roll
cmpsb
lea
sbb
pop
in
in
lds
daa
ds
fdivp
mov
and
or
sub
adc
loopne
ficoms
jmp
mov
cltd
int3
aas
fnsave
test
mov
fldt
insb
xor
fdivrs
stos
fbstp
or
or
bound
lret
adc
xor
lods
push
fdiv
xor
clc
std
jbe
in
push
int3
stos
sub
xchg
aam
pop
dec
arpl
cmp
das
movsl
push
cmc
add
xchg
aas
dec
sbb
xchg
js
push
pusha
pop
push
sub
cmp
insb
test
aaa
push
iret
imul
fisubl
mov
cmp
inc
ljmp
mov
pop
lret
inc
dec
xor
sub
cwtl
mov
push
lcall
int
push
pop
push
sbbb
cmp
jle
jbe
lcall
cmp
cmpsl
mov
jns
cmp
mov
push
popa
addl
jmp
in
je
ja
mov
aaa
shll
xor
jae
repnz
in
cwtl
ffree
inc
mov
ffree
and
lock
jp
daa
dec
pop
fisttps
les
fsubr
mov
sub
add
in
add
int
cmpsb
push
dec
mov
sbb
xor
xchg
mov
jne
dec
pop
mov
or
stc
cmp
cmp
rorb
sub
xor
push
movsb
cmpsl
icebp
faddl
mov
repnz
inc
inc
outsb
or
push
sbb
mov
out
imul
pop
pop
test
mov
repnz
daa
les
add
cmpsb
cmc
out
xchg
sti
push
jmp
add
sbb
cltd
in
out
stos
fsub
mov
adc
in
insl
xor
nop
add
rorb
movsl
adc
adc
jb,pt
jns
ret
mov
cmp
aas
fwait
in
cmp
outsl
adc
aaa
scas
sub
inc
fwait
pushf
fucomi
scas
popa
enter
xchg
pop
loopne
cli
mov
sbb
ljmp
stos
or
mov
xchg
ljmp
pop
ds
fsubr
cmp
fisttpl
stos
mov
lea
xchg
cmp
stos
lcall
fcoms
push
mov
xchg
fistpl
gs
stos
sub
fwait
xor
es
xor
sub
in
pushf
xchg
out
les
sbb
test
add
fwait
or
movsb
mov
imul
movsb
ret
out
pop
shlb
fs
es
fsubr
je
xchg
mov
cli
cmpsl
mov
pop
das
imul
pop
enter
push
push
pop
xchg
dec
push
pop
pop
mov
popf
xor
xor
inc
jae
pop
sub
add
mov
jae
and
stc
and
sbb
cmpsb
push
pushf
mov
inc
dec
lods
jne
lods
xchg
lock
or
in
ljmp
or
cwtl
push
es
dec
push
xchg
xchg
les
fistpl
hlt
repnz
dec
adc
push
pop
imul
sbb
adc
add
push
or
mov
addr16
gs
test
or
mov
pop
adc
push
outsb
shll
xlat
sbb
pop
and
das
call
ja
ds
daa
mov
stos
sbb
data16
xchg
and
mov
cs
dec
lcall
add
add
loope
jge,pt
dec
stc
add
inc
dec
lock
pop
dec
mov
xor
jno
int
jp
adc
push
jns
lds
pop
flds
xor
das
jmp
lret
pop
jo
sbb
lcall
mov
mov
or
pop
sub
mov
push
cli
insb
mov
loopne
fwait
jbe
scas
repz
arpl
inc
mov
test
add
shr
mov
mov
push
adc
stos
shl
ret
lcall
mov
stos
ds
pop
ret
sub
inc
dec
mov
sarl
sbb
lods
dec
push
mov
mov
jne
push
push
mov
adc
testb
aas
or
xchg
jmp
dec
shl
or
jnp
shlb
cmp
int3
mov
or
jnp
jg
adc
push
dec
cmp
loop
sub
add
sub
mov
scas
xor
shll
sbb
jl
enter
sub
xchg
sub
xchg
cmp
in
sarl
daa
mov
mov
lahf
sub
mov
dec
daa
xchg
mov
inc
repz
add
mov
dec
mov
pop
punpckhdq
lret
aad
out
add
sbb
dec
movsl
cmp
imul
jne
mov
dec
popf
add
pop
rclb
mov
add
loop
xchg
call
rolb
cli
js
cmp
mov
mov
ficoms
xchg
dec
cltd
jnp
push
jl
mov
cmc
aaa
dec
sub
mov
and
mov
xor
nopl
xchg
jo
xor
jecxz
repz
sbb
and
mov
inc
mov
repz
lds
xor
shll
cmp
int3
mov
lods
repnz
in
sahf
or
icebp
adc
fwait
adc
mov
cld
dec
lahf
aaa
cmp
adc
jge
add
sub
adc
pop
scas
clc
cmp
mov
cld
add
and
and
rcrb
add
lret
movsl
jns
jge
mov
ss
xrelease
dec
fsubrs
push
inc
clc
imulb
imul
lret
stos
sbb
cmp
fisttpll
xchg
add
mov
and
sub
or
and
add
fisttpll
movsl
cli
pop
mov
mov
andb
push
mov
sbb
stos
jns
fisttpll
in
fdivs
loopne
cmp
icebp
xchg
int
jbe
cmp
ret
cli
push
add
dec
sar
mov
cmp
sbb
jnp
mov
data16
leave
adc
or
fiaddl
into
jo
in
inc
pushl
adc
dec
insl
mov
push
je
jg
pop
sub
push
or
push
fs
sub
fstp
push
or
add
stos
xchg
fstl
xor
out
or
add
pop
sub
stc
xchg
daa
inc
dec
in
in
jmp
nop
pop
rolb
cmp
xlat
aad
inc
jns
xor
lahf
jg
fsubrs
repnz
cmpsb
mov
outsl
sbb
addb
dec
mov
dec
imul
push
test
xchg
xchg
cld
sbb
mov
cmp
fcmovb
mov
jnp
pop
xchg
repz
sbb
mov
or
int3
sbb
cmp
jae
or
idivl
dec
mov
mov
ret
fwait
xchg
repnz
jecxz
pop
add
in
jge
push
jno
cmpsl
xor
nop
popl
or
outsb
adc
sbb
pop
jns
or
pop
stos
pop
ja
dec
mov
sub
pop
mov
sub
push
lods
pop
fmuls
cmpsl
pusha
negb
xchg
outsl
cmc
ds
push
pop
dec
sbb
repz
mov
and
imul
inc
mov
cmpsb
lock
xor
daa
aam
in
iret
mov
pop
outsb
sbb
testb
into
int3
enter
repz
loopne
js
mov
pop
mov
ja
jno
and
push
pop
add
add
xchg
insl
adc
shl
adc
or
rcl
mov
cmc
mov
push
push
push
imul
jnp
fxch
test
pop
mov
sbb
dec
cmpsb
cwtl
loope
cwtl
push
inc
mov
stc
cmp
cltd
xchg
mov
lret
mov
aaa
xor
mov
xchg
cs
sub
mov
fstps
loopne
mov
dec
inc
xchg
xor
fdivp
add
mov
mov
lcall
loope
or
mov
mov
ja
add
outsb
cwtl
shrl
fmuls
add
idivl
pop
cli
dec
mov
mov
add
add
jle
scas
mov
inc
lahf
add
mov
cs
jo
subl
out
test
xchg
cmp
test
mov
fstps
sahf
out
aad
cld
xor
data16
stc
mov
xchg
jno
push
adc
jnp
add
xchg
ljmp
or
int3
mov
xorb
out
cwtl
js
in
xchg
jl
lock
sbb
pop
mov
or
adc
outsl
cmp
into
sbb
jg
mov
jne
aas
sbb
cs
daa
dec
mov
mov
cmp
inc
or
xchg
cld
scas
and
outsl
sbb
cmc
dec
popa
ret
jmp
push
add
xchg
popf
add
sti
sub
jb
and
inc
mov
mov
and
loope
jne
push
in
imul
cmp
mov
adc
push
xor
fcompl
pop
push
pushf
loope
lods
sub
addr16
cmpsb
cmp
addr16
fidivs
sbb
mov
push
out
jns
mov
jbe
cmc
cli
jecxz
orb
push
std
sbb
mov
mov
sub
dec
inc
in
movzwl
loop
and
cmpsb
jl
in
jle
adc
or
mov
imul
push
cli
out
add
mov
adcl
adc
ljmp
adc
pop
mov
xchg
jne
cmp
jno
das
out
loop
lcall
std
ljmp
xchg
test
push
call
xor
and
sbb
jo
xor
mov
loopne
hlt
call
shrb
sub
adc
xchg
in
pcmpeqb
in
or
push
push
in
leave
mov
ss
ss
mov
decb
and
dec
shll
ljmp
ja
out
into
popa
xlat
loope
inc
xchg
sar
push
mov
xchg
in
cmp
jge
jns
sub
fwait
sub
lahf
aaa
lret
icebp
xchg
inc
popa
adcl
pop
int
dec
test
xor
aam
mov
mov
mov
test
add
cs
cld
bound
adc
outsl
and
test
mov
or
xor
rclb
or
ret
xchg
imul
ljmp
inc
mov
fistl
xchg
push
mov
rcrb
inc
dec
inc
xor
mov
cmp
out
je
dec
add
insl
mov
lds
jmp
fs
out
movsl
xchg
movsb
push
lods
pop
loop
mov
push
mov
cli
sub
inc
bound
sbb
cmpsb
enter
arpl
das
mov
scas
cmp
es
mov
push
pop
push
loop
cmp
scas
add
push
lret
inc
rcl
jo
aaa
sub
in
js
shl
js
scas
push
scas
cmp
hlt
sub
adc
dec
dec
popa
pop
mov
icebp
add
mov
cwtl
or
pop
or
push
add
push
cwtl
adc
mov
scas
cmp
mov
and
xacquire
cmc
sub
adc
cmp
dec
dec
or
lods
out
xchg
cmp
cmpsb
test
dec
out
sti
dec
aam
testb
std
push
sar
shll
fsubs
fsubl
int3
add
mov
cmpsb
sub
and
outsl
add
hlt
pop
into
push
mov
adc
jbe
data16
das
movsl
shr
fstpt
mov
jb
mov
cli
mov
mov
jg
adc
jg
inc
cmc
repnz
add
jo
sbb
popf
in
mov
mov
xor
adc
xchg
mov
iret
data16
inc
in
sbb
rcrl
scas
hlt
loope
push
cmp
add
repnz
in
sbb
mov
fldl2t
mov
inc
jmp
mov
jnp
pop
movb
pop
ret
add
imul
fxam
out
push
mov
aaa
shll
in
xchg
adc
xor
xor
cmp
or
jg
js
mov
mov
dec
inc
daa
inc
and
ret
addb
es
sub
mov
pusha
jae
jl
jecxz
push
pop
cmp
ret
inc
mov
rol
pop
aad
cld
pop
mov
sbb
mov
sti
scas
adc
push
mov
sbb
mov
lea
mov
mov
mov
xor
add
mov
mov
mov
xor
add
pop
cmp
jne
mov
xor
mov
add
imul
mov
pushl
jmp
mov
add
mov
mov
mov
movsbw
mov
sub
mov
xor
mov
cmp
jne
mov
mov
mov
jmp
mov
cmp
jne
push
pushl
pushl
pushl
pushl
call
pop
pop
leave
ret
push
mov
sub
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
pushl
push
pushl
push
pushl
pushl
push
push
push
pushl
pushl
push
call
cmpl
jne
mov
inc
mov
jmp
andl
jmp
xor
or
inc
mov
cmpl
jae
cmpl
jne
pushl
pushl
push
push
call
jmp
push
mov
xor
mov
movl
mov
mov
sub
add
push
mov
mov
mov
mov
xor
xor
mov
add
add
imul
mov
cmp
je
mov
mov
mov
xor
lea
mov
mov
mov
mov
xor
xor
add
add
imul
mov
cmp
je
mov
xor
mov
add
imul
add
mov
mov
jmp
mov
mov
xor
xor
add
add
imul
pop
pop
leave
ret
push
mov
push
andl
xor
or
inc
mov
cmpl
jne
push
pushl
push
pushl
call
cmpl
jb
movl
mov
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
call
jmp
mov
xor
add
mov
mov
xor
push
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
pop
leave
ret
push
mov
sub
adc
jmp
xor
jg
mov
pop
ja
inc
out
scas
jns
int3
jl
inc
pop
jl
dec
pop
test
jae
jecxz
in
test
mov
jne
jg
mov
mov
xlat
jno
mov
push
add
inc
dec
in
lds
jo
adc
lds
mov
das
mov
out
mov
xchg
aaa
inc
loope
scas
mov
xor
mov
ficoml
and
sbb
xchg
pop
pop
outsb
js
std
pushf
inc
mov
ljmp
test
fidivs
popf
xor
xor
shlb
jle
int
mov
popf
xchg
jae
sbb
pop
insb
adc
cmp
dec
ljmp
ret
dec
test
adc
mov
sub
jo
test
int
xchg
sub
xchg
and
add
out
xor
jmp
sub
aad
pop
lcall
pop
push
loopne
adc
andb
add
inc
daa
cs
pop
mov
sub
mov
jle
fidivs
mov
lods
mov
scas
loope
testb
in
cmp
sbb
jmp
lret
adc
aaa
jmp
les
jecxz
xchg
cmp
or
xchg
jge
inc
mov
sub
dec
jmp
mov
call
and
sbb
lds
xchg
js
test
fucomp
in
inc
pop
je
mov
mov
enter
push
divl
jmp
fwait
add
icebp
fwait
out
test
and
imul
imul
or
repnz
inc
ffree
adc
cmp
jle
xlat
jecxz
inc
jl
pushf
std
bound
sub
xlat
int3
sbb
adc
or
out
mov
lods
ds
aas
jnp
push
rclb
jb
mov
mov
or
jp
or
jns
xor
pop
adc
pusha
icebp
xor
add
mov
hlt
sub
out
push
lret
incb
es
cmp
sbb
mov
in
repz
and
out
rorb
push
mov
add
in
vpunpcklwd
out
mov
dec
mov
fistl
inc
mov
or
imul
push
jp
cmc
fmul
test
popf
dec
lock
adc
jle
sar
pop
rorb
jno
es
fdivl
and
pop
lret
or
xchg
or
push
cmc
lds
xor
insl
mov
xchg
fcomps
aaa
icebp
sbb
cld
mov
sbb
inc
or
leave
stos
add
cs
int3
and
jmp
ret
outsb
xchg
mov
jno
lret
or
inc
je
repz
inc
dec
dec
fcmovnbe
cmp
sbb
and
mov
xor
dec
popa
pop
jb
dec
pop
pop
cmp
mov
pushf
lds
jns
jbe
shl
xchg
popf
lds
mov
mov
push
mov
push
xlat
test
daa
popa
dec
outsl
sbb
scas
into
in
sbb
mov
es
sahf
pop
nop
mov
pop
mov
jo
call
out
push
adc
test
pop
or
inc
jmp
in
adc
xchg
std
out
jl
movl
fistpll
mov
aas
xor
bnd
jle
jb
lret
das
jo
sub
fsts
mov
mov
sbb
call
in
in
cli
pop
and
ret
mov
pop
cmp
ljmp
mov
push
or
notb
mov
mov
mov
mov
dec
xor
mov
dec
aam
inc
pop
adc
dec
scas
rol
addr16
hlt
xorl
sub
add
clc
and
pop
push
aam
add
les
hlt
icebp
out
mov
stos
aad
and
aas
or
dec
pop
mov
cmp
loope
ja
xchg
fiadds
cmpsl
sti
imul
incb
lods
mov
mov
add
mov
push
mov
ret
cmpsb
ss
lds
stos
xlat
mov
xor
dec
repnz
lret
bt
movsb
fmuls
js
insb
xor
mov
popa
rolb
cmpsl
jmp
dec
adc
ss
mov
loopne
aad
sub
adc
clc
mov
aaa
daa
mov
inc
cmc
stos
call
shlb
testl
mov
mov
or
or
sti
mov
mov
pop
ror
or
dec
lock
add
cmp
iret
addl
add
mov
pop
js
xchg
or
hlt
stc
inc
outsl
add
cmp
inc
and
jmp
ficoml
xor
repz
test
fiadds
mov
mov
sbb
mov
mov
jmp
lods
mov
in
mov
iret
ret
push
fisubrl
mov
adc
pop
js
imul
in
notl
lret
loopne
js
pop
cmp
ljmp
mov
fldcw
cwtl
dec
aam
sbb
int3
sar
lea
ret
mov
push
loope
stos
aam
pop
out
mov
mov
inc
inc
jl
sub
mov
add
movb
cmpsl
or
shr
push
cmpsl
mov
push
sbb
mov
ja
mov
mov
mov
push
or
orb
xor
or
mov
out
push
mov
jns
nop
stos
push
cli
mov
popf
pusha
adcl
fwait
jmpw
out
lret
dec
ret
in
add
not
test
and
or
nop
iret
or
fstl
push
lea
divb
push
mov
or
jmp
mov
pop
xchg
mov
dec
jnp
daa
xor
xchg
jge
movsb
sub
mov
cmp
mov
fs
out
hlt
xor
scas
push
add
adc
iret
loope
loopne
add
mov
mov
add
inc
sub
mov
inc
flds
into
dec
mov
push
sub
cmpl
jo
pop
out
insb
dec
lret
dec
fwait
lcall
cmp
call
xchg
mov
pop
jnp
push
push
dec
sub
pusha
call
xchg
mov
movsl
fidivs
std
fimuls
lret
cmp
adc
inc
daa
popf
ljmp
cld
xor
stos
or
loope
push
mov
insl
jns
ret
clc
arpl
aas
rorb
lods
in
jae
inc
mov
clc
xchg
or
inc
add
pop
ret
push
mov
jo
aas
jge
jp
addl
lahf
and
scas
push
jp
inc
das
push
mov
in
jns
add
lea
or
imul
movsl
addl
cmp
or
jp
movsl
js
fcom
push
mov
fstpl
adc
mov
xchg
fcomip
imul
hlt
jecxz
lods
iret
mov
xor
test
xchg
std
out
insl
stos
movsb
or
or
lret
repnz
pop
cmp
cli
xor
sub
mov
scas
iret
inc
lods
shrb
push
daa
cmp
in
and
pop
xor
lret
out
outsl
xchg
push
sarl
data16
mov
inc
mov
lea
mov
push
xlat
inc
mov
gs
dec
cmp
push
roll
xchg
mov
out
xlat
xor
jno
or
dec
popa
and
pop
and
imul
xor
movsb
pop
lea
inc
xchg
stos
dec
lcall
fwait
mov
jns
subb
push
jge
mov
test
sub
dec
dec
adc
jge
xor
dec
cmp
inc
pop
or
clc
sbb
sbb
jg
int3
das
add
int
ja
int3
fdivl
aas
sub
andl
sbb
push
rclb
shll
pop
out
fcompp
out
leave
leave
cmp
dec
lods
adc
jmp
mov
mov
xor
out
mov
in
add
divl
imul
movb
sbb
jne
mov
shll
ljmp
add
insb
dec
sub
aaa
push
outsl
movsb
adc
cmpsl
inc
int3
push
repz
out
lods
push
add
lock
and
fistpl
jg
lahf
lret
imul
sbb
xor
dec
pop
push
jnp
shl
or
nop
flds
mov
aas
sub
cmpsl
decb
test
aaa
dec
jns
sbb
jge
aas
cwtl
addr16
ret
sub
in
pop
add
rep
push
mov
sub
push
std
aad
movsb
push
and
jge
push
rcrb
pop
cmp
dec
add
cmp
or
jne
outsl
sub
icebp
jl
ds
and
add
filds
cwtl
and
pusha
lret
stos
lea
test
mov
icebp
dec
iret
ret
cmpsb
popf
outsb
fwait
leave
mov
mov
jne
out
outsb
xchg
cs
xorb
sti
push
jecxz
loop
add
inc
add
jl
mov
repnz
dec
out
push
lock
scas
dec
jo
enter
dec
and
dec
cwtl
mov
aas
pusha
je
xor
push
mov
push
aas
shll
popl
xchg
push
loope
dec
dec
popf
pusha
lock
mov
push
sub
cmp
push
imul
mov
stos
lods
insb
adc
dec
call
cwtl
sbb
jo
add
frstor
sbb
push
outsl
arpl
adc
test
lahf
cmpsb
ret
pushf
aad
icebp
adc
push
pop
fildl
in
add
fisubl
testl
test
mov
mov
xchg
xor
mov
jbe
in
jecxz
sbb
jl
mov
es
mov
dec
or
xlat
or
inc
in
adc
pop
sbbl
sbb
jmp
daa
or
aas
adc
popa
loop
dec
or
mov
loopne
cli
cli
mov
icebp
movsb
and
fs
das
imul
stos
jecxz
jge
shlb
xor
and
dec
xor
pop
loope
push
jg
push
pusha
setns
sub
push
and
jge
pop
push
mov
inc
test
push
insl
add
repz
dec
push
fildll
pop
mov
xchg
test
and
and
cmpsb
mov
insb
out
in
pop
ds
out
ja
loopne
jmp
sbb
stc
xchg
cvtpi2ps
int
cmp
mov
and
cmp
jnp
adc
inc
cs
add
comiss
pop
pop
pop
mov
or
mov
sub
mov
sub
fbld
imul
sub
mov
in
xor
scas
pop
loopne
pop
mov
inc
add
xchg
xor
jmp
jne
pop
jecxz
adc
dec
std
ss
xor
pop
push
xchg
ret
mov
push
inc
add
stos
adc
adc
ljmp
jne
popf
jmp
and
jo
and
dec
sbb
dec
add
cmpsl
icebp
mov
fstl
mov
enter
inc
repz
in
adc
jl
or
lods
flds
stos
ret
daa
jae
test
popa
cmpsb
clc
fimuls
xor
xchg
jg
popf
sbb
divl
push
mov
out
mov
aam
pop
andl
push
movl
inc
xchg
push
mov
jg
and
cltd
fcompl
push
jl
jno
sbb
imul
std
mov
mov
inc
cmp
mov
mov
dec
in
push
mov
scas
push
sbb
push
int
push
cmp
cmp
adcb
iret
cmc
mov
test
in
ja
addb
test
jl
add
repz
inc
loope
adc
xchg
dec
int3
lds
mov
xchg
or
sbb
xor
adc
lods
repz
fwait
movsb
paddsb
lahf
jp
mov
scas
insl
test
fcoms
out
test
add
push
jbe
mov
jge
pop
lcall
pushl
mov
js
mov
push
or
cld
rorb
mov
mov
ret
adc
xchg
add
in
dec
lahf
ficomps
icebp
mov
mov
xchg
addr16
or
push
or
dec
mov
xchg
sti
clc
push
imul
push
mov
loop
inc
mov
add
lahf
movsb
rclb
jge
add
inc
xchg
jmp
push
es
mov
jecxz
add
sub
adc
add
mov
fnsave
xchg
push
inc
ljmp
lods
inc
mov
adc
jl
wrmsr
push
js
out
xor
mov
pushf
push
xchg
pusha
dec
xchg
iret
inc
inc
dec
out
clc
arpl
arpl
sbb
lock
sbb
push
inc
loope
push
scas
das
dec
pop
incb
negl
nop
sub
enter
sbb
jg
push
test
cmp
jp
cmc
jbe
sub
pushf
cmp
loope
gs
push
xchg
mov
adc
ja
int3
cmp
and
ja
fcom
pushf
pop
push
es
xchg
fistl
sbb
pop
int3
repz
jbe
jmp
es
xor
iret
mov
cmpsb
adc
out
cli
inc
movsb
rorl
popa
outsl
repz
imulb
loopne
imull
push
mov
pop
scas
mov
push
add
push
mov
ds
ss
sub
aas
out
xchg
mov
dec
jb
inc
xchg
filds
dec
pop
fucomip
xchg
sahf
or
jno
imul
push
mov
bnd
mov
sbb
xor
sub
mov
push
add
ret
xor
shlb
mov
rcr
sarl
sub
pop
into
jecxz
mov
jno
inc
sub
sub
inc
and
add
aam
mov
cmc
xor
jo
adc
das
push
add
sub
dec
mov
pop
pushf
sbb
ror
inc
int
mov
daa
ljmp
xchg
shll
add
in
sub
cmpsb
mov
dec
push
sbb
pop
incb
in
iret
xchg
mov
add
daa
aam
jb
fildl
jmp
fiadds
mov
add
mov
mov
sub
mov
adc
sub
mov
in
add
mov
mov
pop
mov
mov
fmuls
lret
imul
cmp
divl
popf
cmp
cld
pop
rcl
jl
adc
incl
aas
push
call
cli
aad
fadds
sbb
sbb
or
or
jmp
rcl
ljmp
call
sbb
das
mov
scas
dec
pushf
sub
cmp
xor
jbe
mov
pop
out
mov
jnp
movsl
cmp
jae
dec
sahf
add
jmp
inc
inc
push
inc
lock
test
arpl
mov
pushf
lret
push
mov
xchg
push
push
sbb
inc
shlb
fstpt
mov
or
add
jns
movsb
dec
or
data16
pop
dec
scas
sbb
mov
test
cmp
pop
add
es
mov
jecxz
push
imul
xor
sub
xorb
je
ficomps
mov
arpl
dec
call
add
cmp
movl
adc
es
lret
add
cwtl
xchg
xchg
fsubrp
sbb
dec
rcll
negl
pop
mov
mov
sbb
cld
xchg
or
cmp
scas
into
cpuid
inc
ds
lcall
jbe
sub
add
sub
mov
call
dec
pop
aam
ja
mov
sbb
push
cld
pushf
mov
jp
adc
xchg
call
in
xchg
push
jae
push
or
fwait
clc
sub
dec
sbb
cmp
cld
xorl
mov
pop
add
and
cs
mov
loope
jle
pushf
in
adc
loop
addr16
and
popl
data16
xchg
popf
lods
cmp
mov
sahf
pop
xor
popa
or
lret
scas
inc
dec
idiv
pop
pop
mov
cmp
fildll
std
jbe
mov
cld
pushf
xchg
mov
inc
loop
mov
mov
mov
and
push
mov
mov
sbbl
or
imul
out
imul
stos
and
sbb
mov
cli
test
nop
and
mov
aaa
dec
repnz
bound
pop
jg
mov
in
arpl
mov
cmp
popa
clc
lods
or
addl
mov
dec
iret
sbb
testl
xor
in
xor
xchg
les
test
loope
xor
test
fs
pop
push
add
dec
cmp
fsts
mov
inc
add
aaa
xor
sbb
ss
xchg
sbb
insb
mov
notb
pusha
sbb
mov
dec
out
inc
nop
pop
xor
gs
mov
lret
out
pusha
push
insl
addr16
jno
pop
dec
add
pop
cltd
addr16
push
in
add
pusha
dec
add
ljmp
sbb
mov
es
test
imul
mov
adc
outsb
lock
xchg
push
sbb
sbb
std
inc
out
push
mov
push
lock
mov
dec
lret
push
testl
jb
mov
nop
xor
xor
cmp
mov
adc
pushf
ret
mov
push
dec
dec
loop
rol
jmp
push
fists
push
inc
in
dec
in
out
push
push
nop
fistpl
loope
pushf
call
jge
loope
pop
jge
push
aam
mov
pop
rcl
mov
adc
cmc
stos
das
lret
daa
rclb
xor
ret
ds
hlt
and
movsl
pushf
push
jnp
test
adc
xor
stos
pop
popf
mov
rorl
mov
xor
jae
jbe
fadds
fsubp
xchg
adc
pop
pop
xor
into
dec
xchg
jne
dec
mov
push
test
ret
sub
ficomps
xchg
push
add
fcoms
adc
ds
stos
ret
lods
xchg
sbb
ljmp
mov
repz
cmp
dec
lahf
or
mov
addr16
roll
popf
lds
mov
sbb
test
aas
sub
add
mov
push
cmpsl
xor
jns
lds
popa
lds
addr16
adc
daa
mov
faddp
iret
fisubrs
adc
mov
or
or
jae
leave
loopne
pop
pusha
loope
add
lock
std
cmc
sbbl
lds
pop
cmp
cmp
pop
xchg
xor
mov
clc
fs
mov
sbb
push
jae
pop
jnp
loope
jo
in
inc
add
lods
jmp
test
mov
out
and
loopne
out
sarb
stc
clc
and
lods
push
test
jp
push
repnz
cmc
and
addb
push
adc
iret
adc
xchg
mov
fstps
sbb
ljmp
mov
push
aas
pop
inc
sub
loop
inc
xchg
shll
lret
les
inc
mov
pop
jns
mov
scas
ret
fldl2t
push
mov
test
xchg
add
sbb
jmpw
insb
push
outsl
in
dec
iret
aad
loop
cmp
xchg
data16
mov
mov
xchg
cmp
cmp
insb
ja
lahf
int
mov
cmpsb
outsl
lahf
hlt
push
sbb
mov
lcall
jo
push
xchg
cmp
mov
lods
int
push
ds
pop
xor
jo
pop
lret
ret
xchg
inc
repz
test
sub
fwait
push
lcall
adc
or
sbb
mov
lds
sbb
push
movsl
popf
add
rclb
xchg
add
addr16
addr16
scas
test
orb
arpl
fisttps
pop
jecxz
mov
insb
jle
sar
or
dec
nop
xor
shll
jnp
xor
sub
cmp
rorb
pop
cwtl
sub
dec
adc
outsl
xor
adc
shlb
adc
cltd
lret
mov
or
inc
mov
pop
into
sbb
outsb
push
cli
push
dec
jnp
cmpsb
xchg
mov
cmp
scas
mov
lret
or
test
sub
mov
cmp
in
cli
jg
mov
push
pushf
cmpl
sub
or
push
push
lock
xchg
ja
xor
cmp
adc
jl
sbb
pop
stc
cmp
sub
imul
test
and
sbb
xchg
xchg
adc
mov
sbb
dec
test
xchg
mov
mov
in
lret
mov
inc
sub
pop
inc
mov
dec
insb
pop
mov
sub
stos
sbb
sbb
adc
push
call
xor
adc
or
xchg
xchg
sub
mov
dec
iret
pop
sub
mov
add
roll
les
popf
rcll
enter
mov
or
add
pop
int
and
mov
push
sub
mov
pushf
cmp
mov
cli
lods
daa
xor
scas
aad
rcll
inc
jne
mov
sbb
dec
ss
adc
stos
jl
sarl
jg
or
loop
xor
icebp
mov
mov
and
pop
dec
jae
jmp
aad
js
cmp
mov
sub
xchg
mov
in
pop
lret
scas
std
pop
inc
dec
fmuls
cwtl
dec
pop
fdivr
arpl
mov
mov
lds
icebp
cmp
ja
and
pop
xchg
xor
std
mov
fcoml
pushf
inc
jp
and
lods
or
jp
inc
std
loopne
jl
cwtl
subb
push
js
test
push
loop
xchg
dec
mov
imul
pop
and
add
cmpsb
xor
xchg
pmuludq
je
cmc
enter
idivl
std
xor
insb
pop
dec
mov
das
inc
pop
orb
cmp
push
xor
stc
imull
mov
sbb
sub
aad
inc
iret
enter
iret
sbb
es
nop
mov
subl
push
fdivl
fs
movsb
mov
push
jmp
andb
jns
jnp
lcall
mov
jl
and
cmc
mov
or
test
in
xchg
testl
inc
out
xor
and
je
cmpsl
push
dec
pop
fs
into
sbb
ljmp
out
push
lahf
cmp
pop
and
sahf
aad
or
xor
out
lret
addl
aam
sti
out
test
fisttps
fistl
fsubs
sbb
and
cwtl
data16
pop
hlt
push
inc
xor
inc
adc
jo
sub
pop
and
lcall
xor
push
movsb
add
xchg
inc
mov
or
sahf
shl
lea
pop
adc
leave
adc
add
xlat
js
xor
scas
shl
push
les
sub
inc
adc
sbb
jl
jge
pop
jns
and
xchg
inc
jecxz
fwait
push
xor
repz
addb
xor
pop
push
clc
andb
sub
imul
mov
mov
das
inc
add
push
out
and
xor
les
out
mov
and
lret
popa
pop
leave
xor
add
inc
push
and
xor
movsb
fldenv
fisubrl
bound
mov
outsl
imul
ss
pop
ret
ljmp
nop
adc
inc
xor
insb
cmp
mov
xor
stos
pop
fnstsw
inc
subb
popa
insb
insb
fnstenv
dec
sbb
leave
leave
es
or
or
insb
add
jle
orl
mov
inc
bound
or
and
adc
popa
iret
push
arpl
sbb
or
cli
or
dec
stc
and
and
notl
rorb
mov
cmpb
push
aam
push
mov
sub
pop
xor
addb
jb
loopne
xor
mov
xchg
sbb
repz
fldpi
out
mov
sbb
push
rcll
fisttps
pop
mov
test
and
cmpsl
cmpsl
sub
and
insl
lods
fmull
jo
ljmp
adc
dec
in
pop
mov
mov
insl
inc
mov
sub
jmp
ret
sbb
mov
mov
push
cld
cmp
xor
test
xchg
aam
jnp
lods
stos
jb
imul
mov
or
push
lea
das
pop
jns
sbb
icebp
outsb
jg
jmp
stos
fldt
pusha
pop
lret
loop
jle
or
jb
adc
push
xor
outsb
fldcw
lea
pop
inc
stos
pop
clc
out
xchg
imul
dec
popf
sbb
xchg
call
cmpsb
subb
inc
jg
and
arpl
add
sub
sbb
add
mov
pop
mov
sti
stos
jno
pop
fisubrs
mov
bound
mov
out
outsb
das
mov
mov
sub
sar
inc
nop
sbb
xlat
fstpt
andl
adc
mov
jl
bound
dec
out
sbb
pop
lea
shrb
loop
xchg
or
or
dec
sub
scas
stos
shll
lds
xlat
cmpsl
out
std
push
and
push
orb
loope
push
or
rclb
and
imul
or
mov
push
lcall
test
sahf
dec
stos
sbb
pop
negb
add
xchg
in
jle
popf
scas
insl
fs
adc
sub
movsl
in
out
xchg
or
outsl
or
mov
je
or
sub
aaa
xchg
mov
fbstp
mov
jmp
scas
aaa
jmp
sub
fisubs
les
insl
insb
add
sub
sub
int3
mov
lcall
cld
pop
pop
into
mov
pop
decb
loope
fsubrs
pop
leave
adc
movsb
add
pop
in
popf
adc
lock
and
popa
jge
mov
xor
pushf
loop
dec
ja
sbb
push
ficomps
mov
sarl
mov
xchg
pusha
scas
xchg
ds
ds
repz
fiaddl
addr16
cmp
dec
or
js
mov
pusha
or
clc
icebp
cmc
pushf
inc
mov
push
dec
sub
cwtl
sub
call
push
psllw
jecxz
pop
and
inc
mov
andb
lods
mov
fstpl
xchg
sub
dec
sbb
jl
imul
mov
mov
mov
mov
xchg
testl
mov
mov
sbb
popf
mov
pop
xor
scas
pop
lcall
imul
je
pop
jo
fpatan
dec
fsubl
jns
lods
jl
dec
dec
pop
jo
add
addr16
xchg
or
cltd
inc
shrb
cmpsb
pop
jne
inc
adc
stos
mov
es
ljmp
imul
adc
insl
cs
scas
dec
inc
pop
mov
int3
jae
bound
dec
test
fstps
repz
loop
bswap
fwait
ds
dec
outsl
loop
sahf
scas
cmp
rcrb
out
stos
decl
ret
shrl
fisubrl
add
mov
mov
negb
rolb
int
cli
dec
mov
out
push
cld
sub
mov
nop
test
pushf
movsb
call
xchg
lods
mov
dec
cmp
pop
cmp
les
lcall
push
test
cwtl
sbb
push
xor
test
jge
shl
and
mov
jg
ficoml
jbe
jb
jo
pop
mov
stos
jmp
fcmovb
imul
popf
sub
ror
test
push
pop
pushf
sub
mov
mov
addr16
pop
imul
iret
imul
sbb
push
test
idivl
push
dec
imul
mov
fcmovne
xchg
xchg
push
mov
das
int
movsl
fsubrl
cmpsb
mov
jg
out
mov
inc
icebp
sbb
jle
mov
fidivrs
fnsave
add
fwait
dec
icebp
int3
xchg
or
jne
lahf
loopne
pop
jp
dec
mov
fistpll
cmpsb
mov
out
into
cli
push
subl
adc
test
sub
mov
ja
sub
test
aam
mov
dec
mov
out
sahf
repz
fstl
cmpsl
nop
cli
xor
into
sub
mov
cld
or
mov
cmp
xchg
fwait
and
and
adc
mov
jmp
mov
sub
mov
and
pop
mov
idivl
xchg
repz
fsub
and
mov
das
je
cld
mov
ds
arpl
push
insl
sub
aam
xor
std
sbb
pusha
and
hlt
push
mull
push
arpl
pop
cli
push
mov
lods
inc
in
andl
jge
mov
pop
sub
sbb
in
jmp
incl
pop
push
pop
add
clc
sbb
jl
pop
leave
add
pop
mov
and
xchg
ror
and
hlt
lods
mov
push
jnp
out
inc
jecxz
and
mov
cmp
lds
jmp
xchg
aad
pop
popf
into
push
add
push
adc
ja
sbb
mov
cmpsl
mov
cmpsb
sbb
jg
stos
std
and
test
dec
pop
push
fmul
pop
outsb
ja
andl
push
testl
mov
and
out
popf
cmpl
mov
in
inc
mov
mov
lret
xor
outsl
push
daa
int3
push
cs
jle
lea
sub
inc
stc
fwait
xor
bound
mov
add
fcomip
or
scas
ds
aas
cli
js
insl
js
and
dec
leave
push
sbb
and
stc
addl
iret
xor
aam
scas
sub
mov
add
jb
push
in
je
mov
sub
sub
addb
jne
add
leave
xor
dec
cltd
or
das
add
roll
mov
xor
mov
inc
inc
xlat
and
daa
xchg
ss
adc
inc
movsb
sbb
jmp
je
loop
mov
mov
xor
adcl
mov
orl
add
or
movzwl
mov
xor
movb
lea
and
mov
mov
mov
xorl
xor
sub
addl
mov
movl
andl
jmp
xor
add
inc
mov
cmpl
jae
cmpl
jne
call
cmpl
jne
xor
xor
inc
mov
jmp
movl
push
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
jmp
andl
mov
inc
mov
cmpl
jne
pushl
push
push
call
cmpl
jb
xor
movl
andl
jmp
xor
or
inc
mov
cmpl
jae
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
jmp
xor
mov
decl
push
mov
mov
mov
sub
xor
inc
mov
addl
push
orl
add
jmp
movl
mov
movl
mov
movl
inc
movl
cmp
movl
jb
mov
xor
add
jmp
sub
mov
add
mov
xor
sub
mov
xorl
add
movzwl
mov
mov
sbbl
movzwl
xor
adcl
add
mov
movl
mov
inc
mov
movl
cmp
movl
jne
movl
cmpl
je
cmpl
jne
call
cmpl
jne
xor
add
dec
mov
mov
dec
mov
jmp
adc
mov
or
mov
neg
xor
add
add
mov
andl
mov
inc
mov
cmpl
jne
push
push
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
or
mov
xor
sbbl
add
mov
movl
movl
cmpl
je
cmpl
jne
push
pushl
push
pushl
call
cmpl
jne
xor
or
dec
mov
mov
dec
mov
jmp
xor
xor
mov
sub
or
movl
movl
andl
mov
inc
mov
cmpl
jne
pushl
pushl
pushl
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
mov
mov
movl
cmpl
je
cmpl
jne
push
call
xor
add
dec
mov
jmp
xor
movzbl
sub
mov
add
movl
mov
mov
mov
je
orl
mov
mov
andl
xor
jmp
test
jno
cmc
jo
sub
pop
push
inc
scas
jl
inc
pop
jl
pop
cmpsl
push
mov
addr16
loop
out
pop
scas
inc
xchg
jnp
mov
jbe
push
addr16
sub
or
insl
dec
mov
mov
loopne
and
xchg
jbe
dec
and
pop
fwait
jb
cmp
fucomp
pop
add
lahf
scas
test
fnstsw
push
imul
adc
or
cmpsb
test
mov
call
or
sbb
add
rolb
mov
xchg
adc
xchg
pop
mov
add
push
push
sbb
call
mov
cmpsb
jbe
arpl
sub
mov
arpl
jge
in
sti
or
xchg
jo
jp
mov
loopne
rep
pop
and
ror
out
xchg
and
testb
push
addr16
jae
push
xor
in
add
cmp
gs
mov
ret
lahf
mov
pop
call
gs
enter
scas
js
clc
out
test
popa
nop
pop
jecxz
pop
cmp
pop
ja
jae
test
mov
std
iret
cli
cmc
in
test
jne
decb
std
daa
jae
test
loopne
sti
and
mov
pop
add
int3
jge
mov
sti
inc
mov
sbb
sbb
roll
jo
hlt
lret
mov
je
sar
mov
and
jp
inc
fs
mov
or
icebp
roll
jge,pt
jbe
cmp
dec
jl
xchg
adc
jl
scas
dec
enter
ds
pop
dec
rcrb
loope
or
dec
xchg
xchg
aad
ret
mov
and
adc
jl
incl
pop
lods
mov
push
dec
xlat
push
inc
inc
jns
xor
shll
lods
pushf
sbb
sbb
jbe
cli
in
pop
xchg
sbb
pusha
mov
dec
negl
fiaddl
outsl
sbb
fstpt
and
mov
mov
pop
ljmp
out
pop
push
jl
mov
sub
dec
jb
jne
and
and
daa
or
push
icebp
cld
ffreep
adc
hlt
add
outsb
fstps
xlat
in
fldl
add
out
xchg
pop
dec
scas
mov
mov
jb
add
stc
or
adc
or
pop
and
push
mov
push
js
sbb
lods
cs
push
push
mov
jle
or
sub
mov
divl
arpl
clc
scas
pop
orb
or
repz
dec
xchg
cltd
pop
movsl
jg
cli
movsb
jmp
dec
lock
std
imul
pop
pop
adc
mov
inc
cli
or
inc
lods
add
sbb
sub
adc
sbb
adc
xchg
imul
js
pop
push
loope
push
inc
jle
les
lods
xchg
jnp
sub
mov
rol
push
ffreep
mov
sarb
mov
inc
xchg
repz
push
insl
andl
ss
adc
mov
rcll
jge
jo
fsubr
mov
out
push
fidivrs
and
fcmovnu
sbb
imul
popa
xchg
dec
sub
and
mov
jle
sbb
into
arpl
cmpsl
fwait
imul
ljmp
xchg
movsl
xor
addr16
in
cmp
adc
shrl
loopne
push
or
add
loope
fstpt
int3
add
int3
ljmp
inc
cmp
inc
js
jno
inc
mov
sub
in
push
mov
test
mov
dec
xor
xchg
pushf
mov
hlt
cmp
mov
into
xlat
std
mov
sbb
nop
ja
and
js
xchg
int3
sub
daa
fcompp
repnz
cmp
inc
daa
mov
xchg
pop
adc
je
cmpsb
nop
mov
mov
scas
imul
scas
pusha
test
cmc
test
jle
loop
adc
mov
cmp
and
fdivrl
cmp
sub
adc
insb
sub
mov
and
mov
push
ds
lea
inc
in
mov
clc
flds
ret
or
xor
adc
jo
popl
fwait
and
out
test
jbe
cli
mov
or
xchg
pop
or
dec
mov
jno
clc
fs
inc
xchg
inc
popf
pushf
into
rol
xchg
sbb
jnp
out
test
xor
push
arpl
out
cmp
push
xchg
lcall
xchg
inc
jno
xlat
xchg
in
jl
aam
push
jno
pop
sar
notl
mov
adc
pop
fidivrl
ljmp
mov
mov
cltd
pop
loop
inc
hlt
pop
pop
std
lahf
clc
cltd
nop
test
fsubrs
push
jae
mov
fwait
mov
mov
push
jmp
lea
push
rorb
adc
jg
out
inc
data16
and
push
dec
lods
es
xchg
iret
popa
fbstp
sbb
insb
loopne
xor
xchg
out
pop
pop
rclb
jge
cmp
add
jae
lods
cli
dec
imul
mov
sub
push
jno
addr16
repz
js
adc
push
test
test
outsl
mov
cmpsl
dec
sbb
push
xor
jne
subb
aad
in
jg
mov
lds
fistl
push
jp
adc
cmp
daa
sarl
mov
mov
add
iret
pop
popa
and
sub
into
daa
popa
imul
sbbl
aam
mov
insb
add
adc
dec
pop
int3
sti
push
lea
les
jp
lret
adc
arpl
xor
in
mov
jge
sbb
jg
inc
ffree
out
add
into
imul
and
xchg
mov
add
mov
xor
iret
cltd
std
inc
es
sub
out
mov
push
mov
pop
or
iret
mov
adc
jge
push
jecxz
mov
addl
divl
jl
aaa
adc
jne
cmp
call
cmp
jne
lods
in
inc
mov
out
fs
outsb
stos
je,pt
xchg
push
and
cmp
arpl
xchg
add
mov
sub
inc
int3
xor
mov
sbb
nop
jmp
inc
jb
mov
adc
mov
mov
add
loop
outsb
out
ja
jno
sub
xchg
andb
cs
lea
cmpsb
out
jmp
scas
int3
jbe
pop
push
jl
cmp
cmpsb
sbb
pushf
call
rcrl
mov
mov
lahf
mov
jecxz
sbb
les
icebp
cmp
pop
adc
stos
pop
jge
push
sahf
je
cmp
std
or
adc
xor
cmpsl
stos
cltd
jp
icebp
in
mov
icebp
sahf
lods
xchg
adc
hlt
pop
out
mov
mov
ljmp
aad
adc
jge
push
ljmp
jl
mov
repz
or
leave
imul
aad
pusha
movsl
frstor
mov
and
push
mov
imul
sub
and
aaa
xchg
jge
push
ret
or
push
push
dec
pushf
add
ds
sub
inc
sahf
movsb
mov
add
jb
mov
sub
testl
test
fldcw
cli
test
or
inc
imul
js
icebp
test
test
in
idiv
stos
loop
jne
js,pn
dec
and
sub
shlb
sub
mov
pushf
xchg
repz
iret
sub
mov
pop
sub
add
ja
push
add
inc
mov
sub
loop
and
push
jno
movsl
cli
and
bound
jo
cmp
xor
adc
pop
pop
rol
aad
sbb
push
cmpl
fwait
xlat
stos
shr
or
mov
or
lahf
mov
mov
sub
hlt
jne
loope
xchg
or
push
daa
xchg
xor
ja
test
adc
jge
test
pop
mov
shr
xchg
test
or
pop
cmp
sub
out
cmp
rclb
divl
fxch
ljmp
push
jle
loope
cmpsb
repz
pop
jns
cld
xchg
xchg
stos
ret
push
loop
lods
imul
dec
in
add
stc
sub
ja
xor
xchg
sbb
fsubr
pop
andb
cmpsb
push
test
push
rclb
bound
clc
iret
lret
gs
cmpsl
adc
xchg
push
int3
xor
cltd
decl
repz
push
mov
cltd
push
shlb
jno
add
mov
and
push
ljmp
mov
lock
cmp
xchg
dec
cwtl
xchg
ds
pop
scas
test
rcrb
out
sub
and
add
xchg
lds
xor
imul
das
dec
daa
jmp
cs
out
stc
push
push
add
inc
daa
pop
xchg
sbb
inc
pop
outsl
inc
test
push
xchg
shlb
das
dec
insb
xorl
outsb
inc
cltd
dec
cmp
mov
cld
nop
in
and
and
add
ficoms
and
arpl
into
lret
jp
cltd
xchg
jne
xchg
fcompl
out
dec
mov
das
aad
mov
daa
mov
bound
and
xchg
or
and
jge
aam
mov
cmc
mov
mov
add
fwait
in
adc
xchg
int
xor
xchg
mov
push
outsl
jns
and
movsb
and
jmp
filds
pop
jne
xor
adc
and
xor
or
insl
xchg
dec
lret
adc
enter
xchg
fisttps
stc
rcll
sbb
sbb
addr16
mov
ja
arpl
push
addr16
mov
xor
sarb
jg
cmp
push
xchg
push
fsts
lock
int
dec
mov
out
dec
shrl
cmpsb
into
es
movsb
lcall
stc
rcrl
cmpsl
mov
aas
dec
push
and
jge
loope
dec
adc
mov
std
inc
arpl
ss
arpl
pop
mov
mov
fnsave
sbb
cmp
xchg
ja
mov
mov
cmp
cmp
jne
sbb
mov
sbb
imul
sbb
lret
dec
and
mov
mov
jae
jg
dec
xchg
cmp
inc
jl
push
rcl
inc
pop
mov
mov
jnp
pop
pop
bound
cltd
sbb
pop
je
pop
pop
movl
and
and
loop
lods
cltd
out
popf
repz
mov
mov
push
and
push
cli
cmpsb
xchg
aad
pop
xchg
cmpb
pushf
sti
stos
orb
enter
shl
aaa
inc
pop
adc
xchg
bound
ds
das
or
lds
aad
xchg
push
adc
ret
push
int3
imull
and
lret
cmc
inc
xor
mov
scas
ss
roll
pop
insl
push
into
in
xor
xor
dec
fs
fwait
int3
sub
adc
movsl
push
lahf
out
add
fildll
mov
mov
loop
jecxz
xchg
jb
das
mov
pusha
push
shl
pop
in
aam
mov
fcmovne
es
mov
xchg
incl
fistl
jbe
adc
aad
xor
mov
push
dec
clc
fs
popf
adcb
jbe
addr16
sarb
enter
js
sbbl
jmp
fstps
pop
js
nop
fwait
adc
test
jmp
cmpsl
pop
inc
stos
mov
popa
testl
jb
repnz
cmp
sbb
mov
sbb
scas
jo
xor
cmp
or
int
lea
cmp
mov
frstor
daa
cli
mov
sub
mov
pop
inc
xchg
mov
rcll
insb
jl
lret
mov
das
pushf
or
notb
add
sub
aam
testl
in
pop
xchg
stos
mov
movsl
mov
subb
scas
push
mov
pop
push
sahf
adc
aam
inc
fxch
pop
fnclex
mov
dec
repnz
mov
fstpt
dec
movsb
outsl
jo
mov
mov
push
fimull
inc
pop
out
mov
bound
xor
scas
ret
in
dec
mov
push
xchg
shlb
or
xor
test
in
jnp
mov
scas
pusha
sarb
enter
pushf
mov
mov
ljmp
ljmp
pop
lods
adc
jne
xchg
ret
cmp
jnp
pop
inc
mov
fs
mov
and
addr16
iret
rcr
or
lahf
sbb
xor
jmp
pop
repz
dec
mov
jno
hlt
jne
sub
xchg
or
iret
xchg
jmp
sarb
pop
xor
sub
std
xor
inc
mov
xchg
cltd
sbb
jnp
mov
cmp
push
and
ror
jecxz
fwait
daa
pop
adcb
mov
jle
pop
jmp
out
idiv
into
cmp
popf
mov
ss
gs
adc
jl
jno
pop
dec
jae
push
out
insl
lcall
hlt
shrb
or
pop
inc
jnp
stc
lret
aaa
xor
add
enter
dec
mov
lea
dec
xchg
lcall
xlat
stos
xor
js
out
incb
push
les
mov
sub
sbb
aad
je
push
or
sub
fdivl
push
xor
mov
int
jmp
jae
jae
mov
cmpsl
leave
push
aaa
aam
add
mov
in
dec
jmp
ja
lock
clc
cld
add
dec
daa
lods
push
inc
pushf
mov
pop
xor
push
push
xor
shl
dec
jb
dec
test
dec
aad
jno
mov
sbb
je
fistl
pop
leave
jecxz
jb
int
lods
or
scas
add
mov
ljmp
dec
pop
cld
pop
inc
pop
xor
movsl
jge
add
inc
pushf
cmpsl
xchg
ret
je
into
fucomp
rcl
cmp
ret
lds
pop
insb
push
addr16
sbb
aad
call
lds
in
xchg
std
inc
or
testl
jmp
andb
xor
mov
pop
fs
repz
xor
cltd
outsb
pop
dec
lahf
dec
lods
pop
mov
inc
dec
mov
cwtl
je
pop
inc
imull
and
add
sub
mov
ljmp
js
pop
pop
sub
jo
jo
mov
fs
cmpsb
inc
sbb
cmp
sahf
imul
in
jl
push
push
mov
pop
fs
arpl
and
add
mov
jmp
mov
sahf
popf
ret
mov
flds
ds
jg
xlat
add
and
pushf
sahf
mov
test
inc
lret
mov
das
aaa
sbb
cmp
es
imul
and
pop
cmp
sbb
insb
call
pop
js
hlt
cmp
test
movsb
push
repnz
mov
jne
xchg
jns
add
or
cwtl
sub
dec
adc
fs
adc
sbb
and
or
outsl
inc
ss
out
xlat
sub
adc
xlat
xchg
jns
pop
xor
inc
or
or
in
pop
or
pop
cmpsb
xchg
pop
xor
dec
or
jae
decl
adc
mov
mov
sbb
pop
into
mov
int3
cwtl
cmc
fcomps
inc
jg
push
sub
and
punpcklwd
xor
inc
sub
dec
push
mov
arpl
in
call
mov
lea
push
adc
flds
arpl
pop
lahf
and
mov
sub
sar
cmp
xchg
mov
jmp
into
mov
inc
inc
sub
sbb
or
shrb
leave
enter
sub
fdivrs
lret
lea
push
sti
out
push
sbbl
dec
or
rolb
dec
mov
or
ss
stc
cmc
push
cmp
enter
leave
repz
fsub
push
test
mov
push
adcb
pop
mov
jb
jne
outsl
pop
mov
mov
test
jge
and
out
push
jmp
sub
cltd
not
inc
mov
rcrb
sub
mov
mov
dec
sbb
and
hlt
stos
sbb
adc
fsts
shrb
mov
fcoml
jge
xchg
adc
loope
mov
sbb
gs
xchg
jp
mov
jle
adc
mov
pop
dec
les
rolb
roll
dec
fucomi
gs
and
inc
jne
sbb
int3
and
xchg
out
pop
jae
lea
ret
xlat
adc
dec
insl
add
cmc
push
and
fnstcw
data16
std
inc
cmp
or
add
and
cmovge
test
test
fidivl
jge
mov
inc
mov
dec
notb
imul
add
pop
test
cmp
scas
test
push
jp
ffreep
jge
adc
fstps
loope
dec
pop
repz
shll
lret
mov
inc
mov
rcr
cmpsl
adc
por
ljmp
add
xor
hlt
sbb
xchg
pop
sahf
dec
gs
pushf
lock
fsts
popa
popa
mov
das
divl
pop
mov
xchg
xchg
fwait
dec
sub
scas
push
enter
arpl
push
ret
out
cmp
dec
stos
pusha
cmp
jo
fdivl
xchg
divb
scas
mov
lret
call
dec
sbb
adc
adc
or
adc
push
push
unpckhps
into
xor
xchg
or
inc
sbb
cwtl
les
roll
pop
add
push
arpl
setno
inc
daa
lcall
mov
lea
cmp
orl
push
jae
jb
sub
rol
and
push
lds
push
cmc
mov
sub
mov
shll
adc
cmc
push
xchg
inc
mov
xor
dec
jo
mov
test
push
xor
and
jnp
dec
push
jge
jecxz
push
mov
ror
and
cmpsb
data16
sub
add
and
cmp
ret
loopne
jmp
or
neg
repz
cli
sub
stos
inc
lret
cld
movsl
rcpps
mov
gs
jne
xchg
cmp
aam
xchg
movsl
inc
push
shlb
and
adc
xor
jns
add
stc
sahf
lahf
xchg
inc
pop
push
mov
fsubrp
or
fdivl
cmpb
and
cmp
push
lahf
and
push
adc
test
leave
div
jp
add
repz
push
mov
push
movsb
push
loope
xor
adc
rorb
jg
sub
inc
jns
push
sub
mov
clc
push
dec
mov
adc
mov
sub
fwait
shrl
es
stc
add
pop
cmc
aam
add
rcrb
test
sub
dec
jns
mov
inc
mov
fdivs
pop
scas
leave
icebp
jb
rol
aas
js
mov
mov
adc
mov
dec
sub
int3
jl
cmpl
in
add
stos
repz
rclb
push
sub
pop
mov
push
jle
xchg
adcl
inc
repnz
push
xchg
adcl
mov
pop
xchg
imul
or
gs
push
push
rorl
mov
mov
pushf
pop
jp
xor
pop
fsubr
add
cmp
pop
ret
pop
xchg
adc
adc
add
scas
cmp
dec
inc
sbb
movsl
cmpsl
push
and
or
lea
repnz
sbb
mov
in
sarb
pop
sbb
adc
outsl
stos
inc
and
jnp
xlat
add
inc
das
dec
pushf
ret
hlt
lret
test
inc
lds
stos
imul
imul
jmp
mov
imul
xchg
sbb
pop
decl
mov
aaa
mov
js
cli
rol
adc
sub
cmp
adc
repz
xlat
aaa
inc
xchg
xchg
inc
jo
mov
jnp
movsl
add
push
pop
sub
push
mov
sbb
bound
into
incb
jns
shrl
bound
test
xchg
shlb
scas
mov
ds
enter
lret
adc
loop
add
arpl
std
shrl
icebp
out
arpl
loop
dec
mov
sbb
pop
mov
rcrb
and
test
mov
leave
and
aaa
mov
out
fiadds
sahf
push
and
xchg
cli
movsl
testb
insl
sbb
mov
pop
clc
jb
cmp
in
xlat
aam
out
ret
je
jbe
js
jp
sarl
pop
xlat
mov
mov
xchg
adc
mov
xor
fstps
jo
int
outsb
or
test
xlat
outsb
ret
repz
insl
push
cmp
hlt
sbb
inc
dec
push
or
dec
pop
js
not
cli
aaa
push
xchg
outsb
test
inc
cmp
mov
adc
mov
in
mull
dec
xchg
pusha
mov
xchg
and
loopne
pop
data16
or
outsb
or
dec
insl
push
outsb
dec
sbb
lcall
mov
hlt
cmp
pop
lock
mov
lds
ffree
add
and
xlat
sbb
cmp
sub
fs
mov
sbb
jnp
out
dec
inc
mov
mov
scas
adc
or
dec
shlb
out
mov
mov
fmull
add
sarl
outsl
fstpt
arpl
inc
sub
push
mov
mov
iret
jb
xchg
cwtl
add
icebp
dec
cmp
sub
loope
or
pop
push
cli
adc
pop
dec
sysenter
sahf
daa
es
inc
pop
mov
arpl
lea
adc
into
mov
les
out
clc
hlt
gs
dec
adc
pop
divl
and
repnz
orb
sbb
jle
pop
push
outsl
mov
xchg
or
loop
dec
inc
dec
lret
inc
addr16
call
outsb
sub
test
out
sub
jmp
or
cmpsl
inc
push
data16
xor
cmp
inc
int
xchg
push
or
sbb
jmp
lret
fnstenv
pop
es
and
sarb
dec
mov
add
negl
testb
lea
or
mov
jmp
outsl
pop
pop
dec
mov
leave
xorb
fwait
mov
shll
cmp
jmp
sub
push
inc
lret
push
xchg
rorb
mov
andl
xlat
out
mov
das
fdivs
dec
xchg
ds
mov
dec
add
mov
inc
push
xor
jle
pop
jg
pop
push
movsb
inc
pxor
ljmp
jnp
mov
cltd
mov
leave
lret
push
dec
dec
scas
adcb
sbb
add
bound
addr16
mov
xor
push
imul
lock
xlat
aam
cwtl
into
mov
fidivrs
mov
idivl
push
adc
xchg
sub
in
lret
add
ds
mov
jecxz
popa
mov
xor
dec
iret
subb
dec
sbb
mov
xchg
pop
mov
and
rcrl
xchg
rorl
push
jmp
jge
push
dec
cs
adc
testb
add
jp
out
stc
fsubs
mov
mov
iret
mov
loope
sub
cwtl
add
pop
fcmovnb
in
dec
adc
or
cmp
test
rcl
cltd
imull
xchg
in
mov
icebp
inc
sub
pop
cld
fsubrs
add
pop
sahf
dec
cltd
fwait
push
or
into
sbb
xor
inc
enter
pusha
enter
cmpsb
fdivr
sbb
fcmovu
adc
dec
xor
out
lock
in
mov
sbb
sbb
add
in
idivb
daa
shll
dec
jge
inc
mov
add
sbb
sbb
cmp
popl
sbb
mov
fstps
movsl
cs
push
mov
sub
test
xchg
mov
jecxz
xchg
cmpl
mov
add
sbb
out
mov
enter
fidivs
fcoml
sbb
dec
lods
arpl
out
scas
lock
mov
insb
in
out
xchg
cwtl
les
adc
xchg
adc
loope
xor
lds
pop
jne
popa
pop
enter
lods
jmp
icebp
xchg
mov
scas
mov
mov
mov
mov
sub
xor
das
stos
dec
cmp
iret
sbb
dec
subl
sbb
dec
outsb
je
lahf
and
inc
cwtl
mov
cli
das
sbb
jae
negl
sarl
fmull
dec
push
outsl
into
ret
inc
cld
je
test
jp
lret
or
insb
lock
outsb
xchg
mov
ss
lret
out
mov
das
adc
mov
inc
adc
lret
fwait
lods
pop
int
mov
dec
xchg
jecxz
jg
es
sub
mov
in
mov
push
bound
lds
aad
jge
pop
divl
pop
sbb
les
decl
mov
sub
sbb
or
es
jmp
jecxz
dec
pop
int
inc
cmpb
mov
cmpsl
adc
inc
ds
mov
jno
adc
in
push
mov
and
xchg
pusha
loop
insl
mov
dec
clc
mov
ja
int3
mov
jp
jo
pop
jmp
hlt
and
ret
mov
and
jl
stos
sbb
pushf
call
lds
ret
lea
arpl
mov
jg
imul
xchg
lret
sbb
nop
popf
xchg
push
sarb
mov
sbb
sbb
fsub
mov
add
negb
xchg
scas
mov
add
push
add
enter
enter
add
jg
ret
cmpsl
test
dec
mov
dec
fwait
stc
push
idiv
cmp
mov
or
cmp
mov
pop
xor
sub
movsb
aas
js
rorl
inc
sub
fisubrl
mov
icebp
cwtl
shl
cmc
pop
ret
mov
into
lret
in
loope
and
sbb
ss
cmp
stc
inc
aas
test
jno
push
gs
push
ret
sbb
push
and
aaa
rep
xor
mov
push
adc
or
or
push
loopne
lea
push
sbb
lea
jmp
repz
iret
lcall
push
ret
clc
jp
cli
pop
or
push
inc
dec
fsubrs
dec
and
xrelease
cli
rol
push
mov
test
sub
sbb
add
jbe
add
sbb
dec
insl
pop
sahf
mov
mov
xorb
movsb
les
scas
and
mov
ficompl
add
lret
cmpb
fs
int
in
scas
int
lret
dec
nop
lcall
ret
sbb
adc
and
sbb
mov
out
mov
mov
int
stos
je
adc
div
in
dec
mov
shrb
dec
loope
mov
pusha
out
push
push
stc
adc
and
mov
jge
mov
imul
sbb
xchg
jno
pop
mov
jne
mov
jnp
pop
rcll
cmp
mov
inc
cli
cmpsb
imul
add
call
add
pop
add
lcall
je
fsubs
xor
idivl
aad
mov
les
and
sti
sub
xchg
push
fidivl
pop
cltd
je
mov
test
mov
mov
ds
xchg
clc
pop
aaa
jmp
push
js
aas
lret
lock
push
xor
call
shll
stos
push
out
addr16
enter
lods
in
pop
xchg
pushf
pushf
sub
jp
add
xchg
lods
gs
cld
mov
aad
mov
and
shll
or
xchg
stos
shll
or
or
xchg
nop
cmp
cmpsl
sahf
leave
add
jbe
xchg
bound
int3
mov
movsb
sbb
push
mov
mov
dec
rolb
lods
push
rcrb
andb
mov
imul
cmp
test
sub
cwtl
inc
sub
icebp
sbb
sbb
stc
cmpsl
push
ds
cli
popa
mov
and
cmp
scas
sarl
ret
flds
iret
jge
loop
adc
mov
bound
mov
das
cmp
imul
dec
mov
lret
bound
or
mov
mov
cmp
adc
jnp
mov
imulb
push
std
sub
xlat
inc
bound
or
repz
sub
js
lods
xor
insb
xchg
aas
icebp
outsb
pop
cmc
ja
mov
popa
lods
push
in
or
jecxz
push
imul
test
adc
subb
mov
inc
push
fwait
cmpsl
dec
imul
ljmp
inc
mov
movsl
dec
ljmp
push
lgs
and
jge
repz
or
adc
ficompl
addr16
lret
mov
loopne
std
inc
pop
sbb
fisubl
jg
xor
mov
out
mov
sub
inc
js
jbe
cli
inc
xor
sbb
data16
dec
mov
test
xor
fists
addr16
jne
outsl
xchg
push
xchg
cmp
mov
idiv
cltd
insb
pop
in
adc
add
jl
test
out
das
jnp
push
mov
or
adc
or
push
clc
and
or
jmp
sub
scas
or
adc
push
mov
adc
jo
or
cmp
mov
push
sbb
lods
outsb
fs
adc
pop
lock
adc
pop
jno
mov
sahf
mov
and
setnp
push
fiadds
jbe
movsl
pushf
mov
repz
push
inc
daa
adc
dec
iret
loop
test
clc
fsubrl
incl
punpcklwd
xchg
mov
cmp
push
cmp
xchg
outsb
push
jg
clc
repz
lods
add
xor
inc
push
and
das
inc
jbe
xchg
mov
or
insl
int3
sub
repnz
int
push
mov
and
and
add
pop
ss
movsb
or
inc
arpl
cmc
lods
pushf
into
cs
data16
stos
int3
rcrb
aaa
xor
test
jge
iret
std
fldenv
jns
sti
add
mov
lahf
inc
jb
fidivs
aaa
xlat
and
or
sbb
outsl
and
push
pusha
jb
push
push
and
sbb
enter
out
xchg
cmp
adc
mov
push
or
xor
jl
jae
gs
repnz
lcall
mov
ds
sbb
lret
repz
sub
fsubs
xchg
sbb
xchg
push
data16
xchg
loop
lret
test
imul
xor
andl
sub
sub
adcl
xor
addl
mov
or
mov
mov
subl
add
imul
mov
mov
andl
mov
inc
mov
cmpl
jne
pushl
call
cmpl
jb
andl
mov
inc
mov
cmpl
jne
push
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
add
mov
movl
add
or
addl
mov
mov
mov
andl
add
xorl
xor
mov
add
mov
adc
mov
orl
add
orl
and
xor
mov
movl
cmpl
je
cmpl
jne
push
push
pushl
push
call
mov
dec
mov
jmp
add
mov
sbb
mov
lea
mov
inc
mov
movzbl
sbb
mov
sub
add
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
push
call
jmp
or
mov
movl
cmpl
je
cmpl
jne
push
pushl
push
push
call
mov
dec
mov
jmp
addl
mov
xorl
xor
movl
add
movl
jne
movl
jmp
xor
add
sbb
mov
movl
cmpl
je
cmpl
jne
call
xor
add
dec
mov
jmp
or
sub
xor
mov
mov
sub
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
pushl
call
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
add
imul
mov
mov
mov
add
or
mov
mov
mov
add
jmp
xchg
mov
aad
mov
mov
xor
ja
clc
cmp
adc
jl
inc
pop
jl
mov
ss
loope
sbb
push
sahf
mov
sub
out
and
adc
jne
mov
lock
lods
stos
mov
outsb
xor
ljmp
test
push
xor
movl
jb
sub
inc
jge
mov
jb
xchg
scas
sbb
scas
sahf
insl
sub
mov
mov
jnp
lret
hlt
mov
adc
push
call
sub
movl
mov
loop
mov
and
cmp
cmpb
add
sbb
fmul
inc
cmp
sbb
imul
xchg
inc
sub
mov
cli
popf
xlat
adc
cmpsb
inc
faddl
fcoml
push
shr
loope
sbb
in
pop
jmp
mov
sub
mov
dec
pop
sbbb
adc
lock
daa
jp
lods
push
popf
mov
add
into
cmpl
loopne
jbe
mov
cmpsl
and
cltd
inc
sbb
into
xchg
insl
lock
mov
dec
xchg
pop
dec
mov
mov
cmp
mov
mov
scas
push
mov
or
inc
call
add
mov
aaa
pop
pop
stos
repnz
xor
mov
pop
cwtl
cmpsb
jno
dec
cmp
data16
inc
push
mov
pushf
mov
sbb
sbb
paddsw
xor
rolb
inc
lods
cmpsl
insl
cld
cmpsb
jl
scas
jbe
outsl
mov
outsl
mov
sub
mov
mov
dec
jnp
movsb
xor
jb
jo
mov
and
inc
divl
mov
sub
mov
addr16
arpl
cli
mov
negb
mov
mov
jp
fdivrl
adc
pop
fs
dec
or
mov
bound
jg
outsb
shrl
cmp
shlb
insb
loopne
fstpl
inc
adc
push
sahf
mov
jle
sub
sbb
aaa
inc
push
xor
stos
xor
bnd
aad
cmp
das
jne
cltd
sub
push
pop
dec
xchg
dec
mov
cltd
mov
pop
cmp
filds
data16
lea
and
call
mov
rorl
or
rcrb
cld
ljmp
mov
int3
test
xor
into
ja
shrl
push
pandn
ffreep
mov
cmpsb
jno
fnstcw
xchg
mov
jne
dec
fwait
pop
popf
add
movsl
adc
popf
repnz
add
pop
adc
pop
dec
mov
loope
jg
adc
mov
mov
rcr
icebp
pushf
test
pop
sub
dec
xor
popa
mov
sbb
mov
cmp
pop
aad
andb
push
cmp
jmp
jne
ds
mov
xor
mov
lods
push
out
xor
ss
mov
mov
jl
leave
xor
jge
loope
xchg
cmp
jbe
fistpl
sub
mov
mov
push
cs
addr16
out
flds
rcrl
cmpsb
jg
mov
cmp
popf
or
push
outsb
ja
mov
dec
and
and
int
cmp
popa
dec
ljmp
insl
out
shll
jg
pop
sub
inc
dec
data16
jnp
push
mov
shlb
rorl
cmpsb
xor
insl
cmp
test
xchg
stc
lcall
into
dec
jl
inc
repnz
jle
sub
into
dec
jg
pusha
jge
std
fwait
add
ficoml
mov
mov
cmpsb
in
stos
add
in
push
sti
dec
cltd
adcb
ljmp
or
fmull
test
adc
int3
cmc
sahf
icebp
jmp
pop
xchg
dec
cmc
fstl
ljmp
push
shr
push
pop
or
dec
mov
ficoms
add
out
arpl
les
add
stos
in
jae
test
sarb
test
adc
fcomip
lcall
aam
sub
inc
lods
xorb
push
call
pop
sub
es
push
adc
push
xchg
push
mov
jo
aad
xchg
repnz
les
je
pop
int3
bts
cmc
cmc
fneni(8087
fidivs
jns
jae
mov
cmpsl
xchg
mov
int3
ficomps
mov
mov
bound
sub
dec
int3
mov
sti
es
fnop
xor
loope
popa
mov
adc
inc
sbb
cmp
imul
add
shrb
jns
jle
pop
sub
jb
dec
pop
ret
sub
sbb
inc
test
jle
inc
push
out
adc
jmp
pop
xchg
and
push
imul
jecxz
bound
mov
lock
mov
jbe
adcb
in
lahf
inc
dec
stos
repnz
or
add
das
or
cli
lea
mov
and
inc
adc
jecxz
lret
add
cmpps
daa
inc
mov
jo
out
push
repz
xlat
sub
dec
filds
push
lahf
mov
nop
pop
js
jns
dec
cmp
push
cli
adc
scas
stos
movd
shl
adc
test
inc
adc
pop
std
loopne
cwtl
in
stos
nop
and
rclb
pusha
lcall
enter
mov
jg
lods
pop
rclb
push
push
mov
aam
rcll
inc
mov
add
iret
sub
xchg
lea
push
dec
pop
pop
inc
mov
aam
jmp
cmp
lcall
mov
inc
sub
mul
cmp
bnd
inc
xor
adc
mov
sbbl
les
and
aad
and
cmp
cmp
dec
sub
xchg
std
fcmovb
stc
sbb
imul
ljmp
push
lcall
mov
loope,pn
pop
cmpsl
insl
hlt
add
fdivs
pop
mov
mov
sub
lock
scas
imul
xchg
mov
pop
flds
push
jns
in
jl
insl
idivb
lcall
sbb
cmp
out
sti
cmp
scas
andl
cmpl
pop
dec
loope
mov
or
add
jne
es
push
cmp
pop
push
out
mov
xor
xor
sahf
adc
sarl
ret
xor
test
mov
mov
inc
mov
mov
int
arpl
or
testl
ret
test
into
mov
les
and
sub
cmp
xor
xchg
shll
mov
add
or
fdivl
loope,pn
mov
mov
imul
jmp
cwtl
jo
mov
mov
stc
push
jle
add
arpl
movsl
mov
and
dec
out
psubd
shl
fnstenv
sub
in
fcmovu
jae
xchg
xor
lahf
sub
outsl
push
sbb
cmp
and
or
mov
mov
lods
or
pop
mov
jp
adc
pop
fwait
push
inc
xorl
jns
decl
jbe
xlat
inc
stc
adc
scas
xchg
loop
fwait
test
rorl
test
outsl
cmpsb
dec
xchg
mov
roll
mov
xchg
lret
lahf
cmpsl
rolb
mov
inc
rcrl
dec
jbe
scas
ljmp
sbbl
mov
adc
xor
dec
ret
dec
setl
stos
dec
aam
stos
aaa
mov
dec
xor
inc
shl
sbb
jb
jb
xor
jnp
sub
pusha
dec
fistl
out
stc
test
mov
jb
pop
add
leave
xchg
pushf
out
pop
adc
mov
lahf
cmp
sbb
aaa
sbbl
mov
push
push
xor
mov
in
pop
cltd
pop
cmovge
iret
inc
pop
dec
movsb
sbb
push
xor
hlt
xor
lahf
sbb
data16
fstp
inc
push
loope
bound
enter
xchg
mov
loop
jecxz
xchg
hlt
outsl
xchg
mov
push
mov
addr16
push
pop
lock
xchg
xchg
sub
mov
mov
cmpsl
insl
dec
adc
int
outsl
xchg
test
loopne
insb
rcrb
sub
shll
aad
push
add
repnz
jmp
cmp
mov
aam
xlat
xchg
sbb
jb
hlt
shlb
fwait
inc
add
cmpsb
lret
push
fbstp
pushf
mov
sub
enter
fildll
cmp
add
stos
scas
and
std
cmp
ja
mov
lret
popa
addr16
sub
lods
decb
and
ret
scas
fwait
and
loope
imul
dec
aam
ret
inc
and
out
loop
fs
inc
inc
mov
repz
test
clc
loopne
adc
lret
imull
incb
add
push
fidivrs
aaa
add
es
mov
xor
stos
mov
cmpb
divb
sub
mov
mov
jmp
adc
and
add
test
dec
loop
das
pop
jl
push
adcb
jns
das
clc
add
sub
add
lods
jmp
and
shr
mov
sti
pop
mov
mov
mov
lea
cld
pop
lods
hlt
dec
pop
dec
ficomps
ljmp
mov
in
call
jnp
sbb
lds
rolb
jb
push
push
adc
incb
mov
mov
push
sbb
inc
pop
in
ljmp
xor
dec
scas
outsl
mov
fcomps
fs
inc
jne
imul
in
sti
clc
movsl
cmp
test
clc
inc
pushf
or
loopne
in
dec
cmpsl
adc
mov
mov
out
add
add
mov
cmp
adc
xchg
popf
pop
pop
pop
xchg
idivb
cli
aaa
dec
fwait
inc
jecxz
and
in
xchg
add
xchg
dec
push
xchg
bound
xchg
in
out
out
push
dec
or
and
xchg
mov
push
jg
rorl
sarl
add
xchg
jmp
gs
ret
push
jae
lret
push
fcmovnbe
dec
mov
jno
loop
xchg
cs
pop
add
popa
mov
in
pop
lcall
push
xchg
in
pop
rcrb
fstl
push
jns
xchg
pusha
je
inc
fdivp
sbb
popf
sbb
cltd
jg
and
push
aas
dec
xlat
stc
lock
or
add
and
rorl
inc
rcll
xchg
mov
jns
or
lahf
jle
and
pushf
fwait
pop
adc
xor
mov
je
add
cmpsl
ss
mov
nop
stos
sub
inc
push
fidivs
sbb
jg
stos
mov
mov
xchg
sbb
ljmp
scas
int
subb
sub
adc
call
je
pop
fstps
cld
fsubs
fsubrl
add
bound
add
aam
lahf
xorl
xchg
insl
push
sub
lea
divb
and
inc
xor
movsb
js
rcrl
je
cmp
inc
pop
push
cmc
dec
sbb
es
int3
fisubl
push
icebp
jle
and
xchg
mov
out
jmp
bnd
push
lahf
sbb
in
iret
jne
mov
out
lahf
cmpsb
jle
xor
ds
lods
fbld
pop
mov
push
dec
int
aaa
pop
cli
adc
loop
dec
mov
adcb
vpand
push
mov
sbb
and
ja
mov
mov
loopne
pushl
sarl
or
dec
and
je
mov
lods
adc
cmp
push
mov
out
lock
fsubrs
dec
in
push
lret
sub
fists
fldenv
push
xchg
or
std
pop
xor
popf
test
lcall
in
mov
cmp
jae
jmp
jbe
icebp
xor
movsb
dec
ss
dec
rcrl
insl
xor
xor
add
adc
ljmp
xor
mov
ss
jbe
stos
mov
inc
pusha
scas
imul
cli
mov
add
add
and
jbe
lock
insl
imul
out
fldcw
mov
mov
pop
insl
cmc
dec
rcrb
or
mov
cmp
decb
in
jno
push
jno
pusha
scas
cli
inc
scas
insl
cmp
sub
jecxz
int3
adc
push
leave
inc
repz
add
pop
mov
mov
ror
leave
pop
lret
ss
jmp
pop
cltd
adc
lcall
je
xor
pushf
mov
sub
jns
rcll
stos
ljmp
cwtl
xchg
sbb
clc
add
inc
adc
jo
xor
jne
insb
cmp
mov
xchg
into
xchg
xor
repz
jb
cmp
jbe
mov
pop
sti
push
notl
mov
sub
mov
aad
dec
sub
lock
test
cmp
insl
cli
cmp
mov
outsb
fwait
dec
cs
mov
inc
loope
popf
jo
or
cli
jg
outsl
mov
and
dec
mov
sub
xor
push
push
andb
inc
cmp
repnz
scas
cmpsb
sub
pop
xlat
fcoms
scas
loopne
notb
push
scas
cmc
push
mov
sbb
mov
xor
push
jnp
pop
mov
jmp
jb
mov
fucomip
push
xchg
cmc
xchg
inc
imul
mov
or
lcall
insb
cmc
leave
add
sub
lods
shll
mov
lret
int3
adc
sti
add
clc
pop
bound
fbld
lret
lods
stc
cmp
adc
sub
inc
or
lods
ret
xor
mov
loopne
popf
xchg
bswap
mov
sbb
dec
add
ljmp
mov
and
push
mov
cmp
cmpsb
faddl
and
stc
sbb
outsb
insb
sub
xor
insl
mov
rcl
jnp
mov
pusha
outsl
shrl
adc
push
sub
out
scas
fadds
dec
lea
iret
mov
rcr
inc
test
outsb
and
sbb
push
xor
mov
in
into
lock
or
dec
cltd
mov
dec
xor
and
sbb
mov
lret
and
push
popa
pushf
bound
into
inc
push
cmc
push
ret
mov
je
aas
push
and
lock
lea
aas
shl
sbb
sti
cmp
push
adc
scas
jns
adc
outsl
mov
xchg
cli
jae
sbb
add
or
and
negl
divl
cmp
add
push
pop
jb
xchg
mov
mov
popf
sbb
repz
stos
repnz
pop
fstps
jns
js
mov
dec
outsb
dec
xchg
repz
mov
lods
out
push
mov
arpl
mov
add
ss
xchg
or
xor
or
sbb
adc
and
repz
pop
adc
mov
adc
sbb
fwait
add
lret
mov
cmc
fsub
in
dec
cmp
les
lret
dec
xchg
mov
add
jmp
movsl
aam
mov
mov
sbbl
in
inc
test
cmp
cwtl
inc
pop
cmp
clc
faddl
xchg
inc
jnp
cmpsl
ror
lds
dec
call
or
cmpsl
call
xor
icebp
adc
sub
mov
mov
std
int3
push
cmp
lea
mov
inc
jnp
xchg
inc
add
rcll
inc
cmp
dec
mov
cmp
jmp
popl
dec
dec
push
dec
aam
or
cmpsl
stos
xchg
dec
and
add
cmpsl
xchg
push
add
pop
into
out
fs
shlb
and
xchg
popf
scas
mov
pop
dec
in
jle
push
cltd
dec
jo
leave
fyl2x
and
pusha
push
or
rcll
inc
cmp
inc
mov
or
lea
in
mov
add
pusha
jns
cld
push
push
push
cmc
cmp
imul
or
xor
out
mov
mov
sub
jnp
mov
push
sub
or
jp
gs
testl
add
icebp
bound
add
jmp
and
mov
dec
nop
sub
xor
or
clc
push
cmpsl
lret
cmp
jp
shrl
out
iret
inc
cmp
and
imul
cmp
sbb
dec
call
std
fmuls
mov
xor
pop
jl
int3
rcrl
sahf
popf
nop
loop
push
or
repnz
push
aad
imul
jmp
mov
and
repz
push
xor
movsb
ss
cmp
pop
rcll
int3
out
mov
cmp
xchg
jb
xor
xchg
adc
add
adc
jo
ret
push
mov
iret
test
sub
inc
scas
sbb
dec
fucom
push
jecxz
and
and
fstpt
loopne
inc
addr16
dec
test
icebp
dec
mov
mov
cld
mov
mov
jecxz
arpl
mov
cmpl
sub
nop
add
mov
mov
mov
xchg
loop
mov
xchg
mov
xor
pop
jecxz
loop
jmp
aad
mov
or
test
xchg
sbb
pop
movsl
pop
pusha
leave
inc
mov
mov
pop
js
ret
xor
sbb
pusha
mov
jmp
ljmp
insl
mov
js
pop
jns
jle
loope
fisubs
or
mov
or
jge
fisubrl
roll
cmp
pushf
stos
loopne
sahf
mov
inc
mov
xchg
das
jbe
mov
test
sbb
testl
cwtl
add
negb
fcmovne
jne
mov
add
fsubrs
subb
jae
sub
ljmp
cmp
sub
mov
or
imul
out
add
cmpsb
push
or
popf
cmp
jbe
push
xchg
jae
lods
fisttps
data16
inc
iret
ds
lock
adc
test
dec
sbb
inc
stos
aad
add
into
lea
cmpsb
nop
pop
sub
sbb
js
add
sub
jnp
outsb
dec
in
lea
jg
lods
cmp
jb
mov
daa
sub
dec
pop
scas
out
cmp
mov
in
fdivrs
inc
dec
push
cld
and
push
std
xchg
pop
sub
or
aas
aaa
mov
push
mov
cld
aad
pusha
mov
mov
mov
dec
rol
sbbb
adc
mov
lcall
xor
xchg
pop
mov
mov
mov
fwait
aam
xchg
enter
sbb
jecxz
sbb
jg
mov
ja
bound
mov
imul
insb
insl
mov
jmp
movsb
outsl
cld
sbb
adc
mov
int
daa
or
cwtl
inc
stos
or
jecxz
lds
or
out
clc
mov
cmp
xor
rcrl
xchg
es
and
push
mov
ljmp
push
adc
shrb
aaa
mov
test
xor
test
int3
push
inc
xor
xchg
sarb
and
ret
mov
adc
mov
mov
adc
ret
ss
enter
lret
rclb
movsl
std
rcl
test
cli
xchg
notl
and
adc
sahf
lcall
pop
into
addr16
mov
insb
popa
call
sbb
fs
filds
mov
lcall
adc
leave
inc
pop
sub
les
sbb
imul
inc
jnp
dec
add
leave
arpl
inc
test
rol
nop
push
dec
std
xchg
movsb
add
sub
shl
sub
dec
mov
rcll
cmpsl
pop
cmp
push
sub
lret
cmp
push
dec
jmp
jno
lea
mov
jns
out
call
scas
stos
inc
push
jne
inc
rclb
outsl
xchg
cltd
adc
add
fwait
loopne
adc
jae
stos
mov
sbb
ret
mov
aas
pushf
mov
stos
ret
ljmpw
je
xor
jecxz
sub
mov
xor
clc
cs
arpl
leave
xchg
pop
into
or
jb
ret
add
cmp
out
cmp
jmp
push
gs
test
inc
pop
je
jmp
fwait
adc
sub
cwtl
push
xor
xor
mov
mov
cmp
lods
addr16
mov
test
xlat
pop
loopne
add
cmp
sub
call
cmove
ljmp
outsl
adc
inc
sbb
scas
sbb
xor
popf
out
sbb
xor
shlb
div
out
push
or
lods
add
cmc
inc
xchg
pop
cmp
outsb
adc
dec
cmp
mov
add
push
or
outsl
hlt
sub
lret
flds
and
shlb
loopne
lock
fs
ja
adc
xor
js
mov
xchg
dec
lahf
call
outsl
push
inc
or
jb
in
clc
add
inc
mov
sub
cmpsl
mov
pop
lock
mov
bswap
cmp
mov
push
xor
inc
in
dec
popa
pop
sbb
sub
lret
push
lret
push
sub
xlat
jl
cmovo
cld
xor
stos
pusha
push
nop
jnp
ds
push
gs
mov
add
push
daa
xchg
sbbl
xlat
mov
xchg
leave
inc
dec
scas
movsl
bound
push
adc
mov
in
aas
shll
dec
insl
decb
inc
xchg
lods
push
xlat
pop
mov
idiv
lea
sub
aam
les
xchg
jnp
mov
and
test
sahf
mov
mov
mov
addr16
js
rorl
xor
mov
sub
jb
int
ja
push
push
lcall
aam
push
mov
aaa
flds
out
or
and
xchg
add
push
jl
repnz
cvtpi2ps
aad
test
mov
inc
push
imul
mov
in
pusha
in
adcb
mov
cmp
xchg
or
pop
mov
xchg
loopne
loopne
call
addr16
sub
jnp
add
inc
fcmovnu
cwtl
fwait
add
hlt
jmp
mov
movsb
push
addl
lret
mov
cmpsl
cmpsb
sahf
repnz
mov
sbb
sbb
xor
jne
sub
out
jns
and
add
sub
add
sub
jb
call
clc
xchg
imul
cmp
sbb
jmp
and
xchg
dec
rclb
push
add
adc
push
pop
pop
adc
fsubrs
sbb
gs
adc
out
sahf
loop
mov
xchg
aad
popf
mov
xor
aaa
dec
loop
fadd
dec
call
fildl
mov
adc
stos
stos
sbb
out
hlt
fmul
leave
sbb
das
movsl
data16
js
mov
stc
mov
push
lret
mov
sbb
jo
test
sub
outsb
jecxz
scas
pop
jne
inc
dec
cld
jbe
jmp
sbbb
int3
sbbb
movsl
mov
aas
ja
stos
dec
jl
mov
out
mov
xchg
aas
jecxz
jmp
iret
cld
fsubs
cltd
fisttpl
neg
jno
cmc
and
stc
mov
repz
ret
mov
and
mov
mov
inc
mov
lods
int3
add
stos
hlt
or
cmp
shlb
call
sbb
out
mov
mov
or
mov
push
sub
aad
stos
dec
add
mov
enter
add
pop
xor
and
test
addr16
and
pop
sub
dec
mov
enter
mov
pop
push
inc
mov
cmp
sub
adc
mov
xor
sbb
dec
pop
and
aam
mov
shll
xlat
cmpsb
xlat
inc
fdivrl
rclb
mov
incb
pop
fcomps
outsl
int3
or
xchg
lcall
sub
sbb
les
jo
int3
fisttps
loopne
sar
jge
jle
shll
xlat
scas
push
inc
sub
cmp
jo
test
cmp
pop
ja
in
jp
divps
insl
ss
pop
mov
sbb
push
fidivrs
inc
pop
inc
mov
loop
cmp
xchg
outsb
adc
push
pop
lahf
ja
and
inc
in
inc
roll
mov
xor
xlat
adc
cmc
inc
lret
lds
ljmp
add
mov
push
mov
jge
mov
mov
xchg
sti
xor
jp
jle
mov
dec
mov
sub
add
fwait
jle
xchg
aam
mov
sar
adc
fistpll
pop
incl
push
and
and
pop
sbb
loope
or
xor
jmp
js
addr16
addr16
jge
orb
es
jecxz
jl
mov
jns
sahf
jne
inc
sbb
and
inc
test
fisubs
aad
push
insw
jbe
jns
push
and
test
xchg
lahf
popf
inc
xor
mov
pop
or
icebp
pop
xchg
int
cltd
inc
nop
ret
shlb
push
lcall
pop
es
fcmovne
data16
ss
paddusw
insb
fdivl
es
add
aad
roll
push
sub
jb
add
aas
repz
sub
lret
mov
js
mov
lods
popf
mov
pushf
cmp
mov
stos
pop
adc
jae
sub
xlat
lds
mov
xchg
mov
push
in
pop
lock
adc
mov
jp
mov
daa
xchg
in
inc
jno
pop
push
or
shl
gs
jl
jo
sub
xorb
les
add
je
dec
pop
push
push
add
sbb
sbb
sbb
dec
mov
xor
xchg
inc
and
out
xor
adc
mov
xor
cmc
or
mov
imul
imul
mov
push
leave
mov
jecxz
arpl
fildll
jbe
lds
aad
cmp
jmp
loope
adc
pusha
mov
outsb
icebp
mov
inc
andb
fmul
mov
mov
jmp
mov
xchg
repnz
test
repz
fs
or
pop
dec
fnstcw
jb
add
sub
mov
lret
cmp
push
js
movsl
adc
in
jno
xor
test
sub
pushf
test
jge
push
adc
pop
jmp
pop
add
pop
test
pop
adc
das
sub
test
pop
xchg
jl
jns
inc
xor
and
mov
out
cmp
inc
test
loopne
dec
jp
shr
lcall
mov
mov
and
loope
sub
sub
mov
sub
push
mov
sarl
jbe
cmpsb
add
mov
adc
ret
and
mov
inc
cmp
or
xchg
std
mov
and
add
cs
sub
mov
arpl
cmpsl
mov
mov
push
out
adc
sbb
movl
pop
pop
pop
ret
push
js
jge
xchg
jg
sbb
in
out
call
lea
jae
jge
dec
inc
and
pop
out
lahf
ljmp
fsts
iret
adc
cmp
outsl
leave
and
dec
dec
inc
aaa
ja
lahf
xor
xlat
mov
push
sub
cli
sub
jg
stc
aad
or
imul
cmp
scas
jge
inc
mov
cs
scas
scas
notl
jb
jp
fadds
dec
ds
popf
mov
sbb
test
rclb
dec
push
add
push
mov
int3
les
and
movsb
adc
movsb
scas
push
push
mov
bound
outsl
and
add
cmpsb
inc
test
stos
in
aad
pop
pop
lock
lods
pop
mov
adc
rcrl
add
test
rcr
and
mov
jb
fsubrs
mov
xor
add
pop
lea
mov
sub
push
pop
mov
sbb
hlt
lods
push
pop
movsb
push
push
or
aaa
pop
push
pop
repz
and
jo
mov
jg
cmp
inc
xor
rorb
jns
jne
out
or
push
dec
adc
lock
xor
loopw
pop
jl
jp
in
adc
cltd
xchg
xchg
int
test
xchg
inc
ret
fdivrl
clc
push
mov
jne
rclb
repz
push
aad
xor
icebp
leave
pusha
xchg
mov
mov
fcompl
sahf
mov
outsb
push
sbb
ret
je
mov
leave
sub
lcall
xlat
daa
jne
fs
sbb
cmpsl
scas
repz
ljmp
push
aam
mov
fists
and
sbb
sbb
pop
stc
aaa
ljmp
stos
pop
mov
and
jbe
jns
mov
out
pusha
pop
sti
rorb
push
inc
fnstcw
push
fldenv
mov
dec
mov
leave
cmp
mov
stos
adc
or
xor
sbb
aam
xchg
add
mov
push
fiadds
mov
movsl
leave
push
lcall
shrb
add
push
arpl
sbb
and
rcrl
fildll
pop
sbb
pop
sbb
mov
jb
daa
or
push
mov
jmp
scas
in
sub
lahf
repz
push
scas
mov
aas
push
out
movsb
jle
or
cmc
clc
mul
test
and
xchg
stos
pop
lcall
mov
lock
out
add
clc
out
popa
stc
and
and
sarl
inc
add
call
aas
sub
adc
stos
je
dec
cmp
or
pop
sub
and
push
mov
fisubs
movsb
or
sbb
ds
lret
pop
shll
mov
stos
lods
adc
ljmp
bound
test
sub
lods
lahf
std
xchg
xchg
cmp
stos
xor
xlat
mov
jle
xchg
and
iret
pop
inc
sub
loope
test
mov
push
xor
mov
push
sub
adc
pop
cld
push
lret
cmpb
push
int
fwait
or
outsl
push
stos
pop
cmp
and
or
shlb
int
add
sahf
add
mov
dec
js
pop
cmp
mov
sub
rcr
pushf
aad
out
sbb
sahf
inc
mov
and
cmc
movsb
xlat
loope
aas
subl
or
cmp
xor
mov
lods
in
sahf
stc
adc
scas
xor
pop
inc
mov
notl
mov
ja
mov
in
jbe
lret
icebp
mov
das
push
out
arpl
dec
jo
bound
out
mov
push
adc
ss
cmc
lret
pushf
inc
adc
into
das
cmp
fsub
je
xor
mov
mov
mov
add
and
mov
mov
mov
lea
mov
mov
mov
sub
add
mov
mov
xor
add
jmp
inc
mov
ss
test
and
clc
push
jge
inc
pop
jl
subb
loop
xor
shr
daa
add
into
dec
cltd
pusha
stc
push
or
jnp
out
or
add
rcll
push
dec
sar
sub
pop
test
mov
sub
sar
dec
adc
arpl
xlat
push
aaa
fdivrl
push
push
sti
shll
test
push
lret
orl
mov
adc
jle
and
push
pop
and
call
ja
cmp
jae
fld
aam
leave
stos
jbe
insl
clc
ret
or
add
sbb
sub
pop
sub
mov
cs
dec
jne
fmul
xor
xor
aam
jg
pop
mov
or
loope
pop
sbb
lods
mov
pop
push
hlt
rorl
pusha
mov
cmp
add
fs
fwait
pop
or
subl
lcall
pop
loopne
repnz
xor
pop
mov
leave
mov
arpl
push
hlt
jp
and
mov
es
push
pushf
and
ja
imul
dec
inc
popf
dec
imul
pushf
dec
sahf
dec
jne
adc
mov
repnz
test
out
mov
ds
adc
inc
pop
push
icebp
repz
sub
push
mov
and
in
les
pop
hlt
lods
outsb
add
notb
ret
cld
cwtl
orl
fwait
inc
sub
push
scas
dec
rolb
cmp
add
inc
fildll
test
mov
push
pusha
andl
daa
jns
xchg
ljmp
out
mov
je
stos
jo
enter
inc
sbb
xor
fnstenv
je
jge
mov
adc
pop
dec
out
jmp
add
lea
out
push
scas
push
push
xchg
xor
xor
cmp
and
sub
repz
sub
lcall
out
mov
push
jne
stc
out
pop
inc
inc
jo
sar
or
xchg
clc
inc
loop
jno
fisubrl
push
ret
pop
xchg
pop
inc
cmp
cmp
and
les
dec
push
adc
push
lret
mov
movb
cmp
mov
addr16
or
popf
push
lret
mov
out
jle
out
fldl
push
push
arpl
in
dec
repz
mov
sub
lahf
in
or
xor
shlb
dec
andl
dec
jnp
loop
xchg
jg
and
das
ds
cltd
mov
xor
push
inc
or
pop
inc
lds
testb
xlat
gs
mov
and
ret
movsb
push
pop
add
js
test
add
sub
mov
loope
pop
cmc
cmp
push
jl
sbb
mov
pusha
fidivrs
sub
jmp
int3
imul
outsl
dec
and
xor
lcall
iret
push
loopne
cmp
fistps
outsl
clc
fcomps
cmc
dec
inc
jge
aam
inc
cltd
pop
lcall
int3
int3
loop
fs
mov
test
sbb
ljmp
cli
out
pop
ret
popf
dec
sbb
daa
cmpb
sbb
mov
pushf
cmp
mov
fsubrl
jne
or
adc
jle
push
add
leave
bound
mov
or
pusha
xor
lret
pop
mov
xchg
ja
mov
jne
adc
fcompl
add
pushf
lods
cmpl
pop
push
sub
fs
pushf
lea
mov
jecxz
rcrl
or
pop
fistpll
cmc
mov
jle
daa
sbb
into
dec
lods
inc
push
xorl
call
jne
leave
stos
shrb
cmp
pop
aad
jns
adc
jecxz
and
pushf
sbb
inc
ret
and
loop
push
pusha
out
or
inc
add
jnp
stos
push
out
lahf
mov
lock
adc
xor
dec
jp
test
inc
cmpsb
scas
push
add
jb
mov
sbb
pop
aas
arpl
sub
jle
xor
das
nop
xchg
out
jp
mov
xchg
sbb
adc
bnd
sahf
enter
xor
bound
push
loope
mov
fbstp
add
imull
out
adc
push
jne
adc
shl
xor
lds
ret
movsl
inc
pop
sti
inc
rcll
push
aam
xlat
rcrl
cmp
dec
jp
pop
or
bound
mov
fdivrs
dec
mov
mov
call
adc
mov
ss
jp
insb
sub
dec
pop
out
in
lods
push
pop
sub
cli
hlt
cmp
and
push
or
ss
xor
or
or
cmp
add
repnz
pop
pop
stos
dec
insl
add
sub
int3
sbb
xchg
sub
ljmp
jbe
pop
lds
int
stos
movsl
jbe
push
in
insl
pop
cld
es
iret
scas
lret
push
leave
and
das
sub
or
or
xor
fiaddl
mov
test
xchg
int3
sbb
dec
ss
inc
cmp
shlb
outsl
cmc
push
hlt
and
mov
inc
cmpsl
mov
xchg
fildll
std
lods
je
cwtl
add
push
cli
outsb
sbb
jmp
rcll
push
mov
fimuls
xchg
in
cld
imul
popf
clc
pop
ds
stc
stos
inc
or
dec
lock
push
jne
push
push
inc
stos
xor
jae
push
sbb
pop
idivl
push
and
sub
mov
shrb
js
xchg
cli
stos
and
adc
xchg
jno
out
jmp
int3
sub
mov
dec
nop
mov
icebp
loopne
fbld
adc
fnstenv
cli
call
cmp
bound
lods
cmp
mov
ret
or
leave
fnstcw
xor
dec
adc
lock
lods
jecxz
mov
xchg
mov
or
xchg
xchg
pop
aad
rcr
cmp
lods
adcb
pop
mov
insb
pop
mov
sbb
sub
ret
imul
and
pop
lock
mov
sub
dec
sbb
ret
mov
push
dec
add
adcb
call
aad
enter
divl
mov
pop
inc
popa
inc
pop
pop
dec
arpl
in
xchg
mov
pop
mov
adc
xchg
mov
addr16
std
int3
pop
cmpsl
push
sbb
shrb
or
inc
xor
adc
enter
xor
mov
mov
adc
pop
pushf
sahf
cmp
cli
arpl
ds
gs
lahf
out
xchg
imul
movsb
loope
notb
xchg
xor
popa
dec
test
add
mov
xchg
mov
sbb
pop
xchg
jle
xchg
cld
adc
mov
inc
repnz
fldt
movsl
rorb
lods
in
mov
xchg
fucom
cmp
xor
cmp
in
sahf
cli
sbb
ret
movsb
and
mov
frstor
pop
cmp
cwtl
or
and
shl
sub
pop
cmp
dec
dec
xor
lock
ds
jbe
ret
push
mov
push
pop
sub
inc
mov
jg
add
enter
lret
push
ss
leave
fwait
sbb
xor
add
cmpsl
adc
inc
pop
rorb
xchg
outsb
in
adc
adc
inc
arpl
es
negl
loop
mov
aas
mov
inc
popf
nop
adc
test
outsl
cmp
sbb
addr16
mov
pop
and
and
rorb
inc
je
test
sub
or
xchg
es
jl
stos
xor
mov
xor
loope
adc
ljmp
pop
push
aaa
insb
es
lds
sbb
mov
jne
dec
and
jecxz
push
sub
aaa
aaa
orb
mov
scas
xchg
cltd
lea
ja
notb
int3
popf
push
inc
shrl
stos
jbe
cltd
bts
push
mov
lcall
push
stos
ffreep
mov
sub
sbb
pop
clc
testl
adc
or
sub
inc
loop
or
cwtl
out
mov
mov
push
xor
sti
lea
sub
cmpsl
cmp
dec
pop
jo
push
mov
mov
je
imul
adc
jnp
push
ret
lds
lret
dec
lock
dec
cmp
dec
iret
fistpll
sub
mov
sub
loope
xor
jecxz
lods
mov
xlat
mov
push
xchg
add
pop
xchg
and
sbb
cwtl
fwait
lcall
sbb
enter
addr16
jae
fdecstp
cmpl
add
mov
mov
adc
push
push
lods
sub
or
sub
leave
adc
scas
mov
jg
xchg
mov
xor
into
dec
rcll
xchg
xor
pop
mov
sbb
test
imul
dec
addr16
je
ret
cmp
ja
mov
loope
jmp
js
sti
cmp
jle
xchg
pop
sahf
sub
test
popf
aad
test
cmp
imul
add
cltd
pop
mov
lods
cli
pop
or
or
enter
sti
and
pop
outsl
ss
out
fdivs
pop
mov
outsl
imul
mov
xchg
lods
mov
js
in
cwtl
pop
dec
lret
push
dec
xor
mov
adc
in
scas
inc
xchg
fadd
int
push
jbe
ljmp
leave
xlat
push
inc
cmpsb
pop
mov
dec
fldt
lock
sub
sbb
movsb
test
cmp
ljmp
add
orl
nop
je
dec
ds
push
lret
filds
test
push
sub
xchg
adc
cmp
add
cmp
icebp
mov
insb
mov
cmp
scas
xchg
and
cli
jns
xor
test
pop
fidivs
xor
pop
add
in
jne
ljmp
sub
adc
push
in
mov
mov
push
gs
fisttpl
jb
pushf
jle
xor
out
mov
cmp
pop
jmp
pusha
leave
out
cmp
enter
cwtl
add
gs
pop
dec
dec
fisubrs
movsb
clc
lret
js
add
xor
mov
pop
dec
int
mov
mov
pop
push
js
adc
fldcw
sub
sub
jbe
sub
aas
imul
cmp
sub
jge
push
rolb
xchg
imul
test
push
inc
jnp
inc
out
out
sub
pop
sti
pop
into
js
sub
movsl
sbb
pop
out
pushf
sahf
cmp
outsb
jge
pop
xchg
insl
shlb
dec
arpl
repnz
sub
inc
jmp
or
sub
pop
lcall
jl
fistpl
loopne
int
cltd
mov
roll
lock
lret
test
aas
frstor
pop
lods
es
fmuls
jecxz
adcl
mov
lods
nop
add
mov
push
mov
sbb
mov
pop
sbb
or
orb
mov
lahf
pop
adc
cmp
or
aad
stc
test
fadd
mov
cmp
jo
shr
mov
daa
and
mov
cmp
les
mov
push
xor
mov
fsubr
xor
out
test
adcl
loope
fistl
mov
movsl
add
fdivrp
mov
loop
or
andb
in
xchg
fldt
jne
mov
in
neg
cmpsl
sahf
add
sahf
outsb
daa
mov
push
sub
mov
cmp
jg
cmc
push
scas
adc
ljmp
cmp
cmp
stc
xor
sub
lock
dec
iret
fnstcw
pushaw
mov
pushf
dec
popf
les
rclb
jge
cli
cli
scas
or
jp
outsl
icebp
cmpsl
mov
or
shrl
mov
inc
test
inc
push
clc
xor
adc
hlt
push
outsb
xor
call
add
or
mov
mov
popa
test
out
dec
sub
fs
adc
fs
and
stc
push
insb
ret
shlb
inc
int3
jecxz
movl
leave
dec
sbbb
stos
loope
icebp
lahf
sbb
push
fistpl
shr
adc
in
shll
loope
cmp
push
or
push
movsb
cmp
ds
sub
test
push
pop
hlt
or
push
pop
mov
nop
imul
aaa
xchg
roll
es
js
add
and
lahf
push
mov
xor
push
sub
ljmp
shl
jmp
in
nop
lock
and
scas
mov
addr16
jmp
xchg
ret
push
push
dec
jge
xor
cmp
movsb
movsl
dec
add
fdivrl
inc
inc
ficompl
fdiv
out
push
repz
inc
jbe
jecxz
test
sbb
stc
cli
cmc
shll
imul
push
in
xchg
inc
xor
in
jns
jmp
xorw
movsl
cmpsl
loope
xor
mov
and
insl
mov
repz
mov
jb
or
sbb
test
pop
sbb
mov
imul
mov
cmp
dec
divl
jmp
xchg
jns
inc
xchg
mov
out
outsl
inc
xlat
loopne
out
or
test
scas
test
cmp
lods
clc
xchg
fcmovbe
mov
or
xchg
dec
in
aaa
mov
into
sbb
lock
and
pop
jne
inc
popa
sbb
mov
test
jb
sar
es
jbe
sbb
push
jge
lret
enter
pop
mov
xchg
gs
sti
test
or
mov
test
pushl
sub
repnz
dec
ljmp
pop
dec
mov
imul
push
andb
xchg
test
dec
lds
inc
pop
aas
cmp
mov
cld
lret
mov
xchg
out
jne
mov
pop
jl
push
lock
mov
repnz
fcmovnbe
negb
mov
xchg
pop
out
loopne
ljmp
popa
inc
dec
shlb
roll
arpl
aam
addr16
fidivs
mov
stc
mov
mov
aad
test
sub
popf
cltd
fxch
cmp
leave
insl
sub
xorb
mov
xchg
mov
and
adc
addr16
negl
dec
sbb
adcl
add
enter
mov
add
mov
out
outsb
pop
jo
jle
fsts
push
addl
dec
test
enter
mov
cli
or
xor
test
pop
jecxz
mov
push
les
leave
rorb
aad
jnp
insb
dec
ljmp
and
mov
test
mov
ja
pop
stos
test
je
sbb
int3
push
inc
shl
jle
lret
add
cwtl
xor
sub
dec
fmuls
ljmp
pop
repz
icebp
sub
xor
out
adc
dec
sub
filds
inc
fsts
div
cld
repz
sbbb
ret
mov
lahf
call
in
push
out
fs
fisttpll
and
repnz
push
push
xchg
jns
pop
xor
and
pop
dec
mov
mov
mov
iret
ljmp
stos
sarb
or
stos
andl
pop
adc
jmp
push
pop
dec
inc
imul
mov
xor
stc
lcall
inc
lds
jb
and
test
shrb
cltd
je
add
pushf
mov
fistps
xor
push
pop
mov
fwait
dec
xor
jecxz
cmp
push
dec
lock
mov
pushf
jb
andb
xchg
fbld
lods
aad
mov
aam
outsb
mov
xor
jg
and
or
mov
stc
cmpsl
adc
enter
mov
pop
je
pushf
push
pop
jg
rcrb
or
aad
imul
aam
les
lret
and
xor
cmp
pop
cld
jmp
pop
fcomip
xor
sub
ja
stos
rcr
aas
ret
xor
movsb
dec
push
js
lods
mov
test
ss
jge
divb
pop
adc
mov
inc
push
push
fistps
nop
jno
fbstp
mov
dec
ret
mov
xor
jnp
adc
repz
adc
or
add
push
push
xchg
fs
aam
sub
pushf
sbb
in
jae
cmp
jae
or
add
icebp
daa
fildl
xor
and
xorb
cmpsb
sbb
xor
xor
loopne
pop
movsb
mov
adc
and
xor
pop
jge
test
add
icebp
lock
sbb
adc
cmp
fcomps
shll
inc
outsb
push
or
fiaddl
sub
lock
and
test
and
xor
scas
sub
iret
xor
lret
fstl
fstpt
push
imul
xor
sbb
push
and
fwait
and
sbb
pop
or
jg
or
andl
scas
jg
cld
call
mov
xchg
repnz
shll
dec
je
mov
mov
or
bound
outsl
jmp
ss
js
dec
popl
dec
xor
push
push
dec
mov
es
add
rcrl
cmp
inc
add
inc
vpaddsb
and
or
push
jl
movsb
sbb
lea
pop
loop
inc
pop
push
and
jmp
adc
cmc
add
mov
or
pop
fwait
pop
sbb
std
jp
sbb
lea
hlt
and
imul
pop
lcall
pusha
pop
pop
ret
test
adc
mov
aas
push
nop
into
mov
lcall
aas
jno
pop
jg
js
push
repz
leave
enter
pusha
pop
or
arpl
sub
xor
loopne
and
cmp
pop
incl
and
mov
or
add
pop
xor
adcb
test
mov
je
hlt
hlt
int3
adc
ret
mov
inc
ljmp
sbb
repnz
sub
sbb
fistpll
in
repz
out
cltd
inc
pop
xchg
daa
mov
dec
je
adc
mov
and
inc
push
xchg
imul
movb
fadd
push
movsl
outsl
sub
mov
mov
js
or
pop
xor
ret
ja
dec
es
pop
xchg
repz
nop
sub
dec
mov
mov
cmpl
cmp
test
adc
sub
int3
mov
lcall
aad
xor
clc
out
xchg
aad
xchg
cmpsl
push
daa
xchg
ss
jnp
fnstcw
imul
cmc
decl
pushf
enter
aam
or
mov
mov
jl
pop
push
add
xor
sar
dec
lret
xchg
loope
inc
out
jno
icebp
sbb
pushf
jmp
dec
bound
ficomps
into
pop
sub
sbb
lret
dec
xchg
ds
pushf
mov
dec
and
insb
xchg
ret
xchg
in
sbb
sbb
mov
inc
repnz
jge
and
into
scas
mov
in
nop
sbb
iret
repz
lds
and
mov
jbe
loop
iret
dec
inc
in
sbb
mov
inc
push
mov
adc
cs
shl
mov
test
in
scas
mov
push
data16
lahf
in
lret
and
test
rcrl
sub
mov
dec
scas
jne
inc
mov
fnstcw
imul
or
fs
hlt
dec
sbb
sbb
mull
mov
jns
rclb
and
sahf
ljmp
add
stos
xor
ja
ficoml
out
inc
sarl
leave
sbb
or
arpl
sahf
adc
fldenv
and
mov
mov
test
push
jle
cmp
imul
push
cmp
xor
push
and
push
ficompl
int3
loope
decb
sahf
jnp
bound
pop
inc
cmc
mov
stos
mov
loope
cmp
out
imul
or
bound
or
pop
sahf
insb
xchg
mov
roll
or
and
aaa
out
aas
repz
call
mov
bound
test
jb
arpl
ljmp
pop
bound
cmpsl
incl
push
cli
sahf
sbb
push
call
popf
cmp
adc
aam
cmc
pop
mov
and
adc
mov
mov
sub
xor
or
dec
repz
mov
cmp
xchg
mov
sub
or
shlb
out
xchg
mov
fidivs
or
sub
dec
push
cmpsb
orl
fisubl
mov
rclb
or
mov
in
or
jbe
dec
ljmp
jp
out
out
enter
arpl
out
loope
sbb
enter
dec
add
mov
dec
adc
mov
push
out
or
push
fisubrl
sbb
bnd
decl
loop
inc
in
mov
jge
or
lods
mov
add
pushf
and
fbld
push
aad
mov
jnp
jl
push
jmp
inc
fdivrl
int3
pop
jns
jb
lock
addl
pop
pop
mov
mov
push
je
inc
sbb
add
das
inc
mov
sahf
loop
scas
xor
sar
sub
mov
in
mov
dec
add
and
pop
test
std
cmpb
out
pushf
adcl
mov
mov
sbb
xchg
test
mov
iret
loope
int
or
fs
inc
pop
and
inc
inc
mov
add
pop
call
push
push
scas
fsubrp
dec
dec
out
or
push
push
mov
pop
jo
mov
aas
jmp
sbb
fwait
into
push
cltd
sub
je
and
cmp
mov
cmp
negb
es
inc
mov
adc
or
push
cli
addb
nop
das
pop
jp
inc
cmp
or
fucom
fs
movb
sbb
dec
jns
xor
pop
into
fidivrs
mov
mulb
aas
ja
in
enter
push
dec
movl
nop
inc
inc
fwait
pop
into
jge
cmpsb
push
popa
mov
int3
xchg
xchg
and
das
or
lds
push
xchg
int
sub
adc
or
aad
jge
cs
outsl
je
pop
jecxz
mov
fisttpll
mov
or
cltd
je
ficoms
mov
fildl
neg
push
jne
xor
dec
push
pushf
add
jecxz
fwait
pop
test
testb
test
daa
xchg
inc
call
stos
sbb
pop
pop
pop
pop
mov
mov
loope
hlt
jnp
jmp
push
sbb
les
in
es
push
insb
bound
mov
call
pop
xchg
daa
fiaddl
and
mov
cmp
je
mov
xor
fwait
es
xor
out
push
jnp
aam
out
mov
or
or
mov
bnd
cmc
mov
popf
das
in
jnp
fbstp
jb
fcoml
push
mov
push
jae
es
jnp
testb
into
repnz
pop
in
mov
fdivs
push
adc
add
pop
mov
pop
push
cli
stos
in
dec
ja
mov
push
jge
ss
pop
and
fisttpl
cmp
outsl
sbb
jg
pop
cli
xchg
inc
xor
or
push
push
cmp
in
mov
add
lods
ficoml
stos
push
insb
mov
aas
push
notl
fsubrs
jl
add
lds
and
imul
cwtl
and
mov
pusha
pop
rclb
call
stos
inc
push
into
loopne
adc
sti
jae
std
in
add
aas
dec
jns
mov
sub
or
cmp
xor
sbb
outsl
or
sbb
dec
jno
lcall
sbb
or
xlat
mov
cmpsb
icebp
pop
clc
cmpl
lea
in
pop
jo
out
mov
sahf
cmpb
sbb
push
pop
push
insb
push
xchg
add
filds
fstpt
lahf
das
lcall
int3
cltd
mov
cli
outsb
int3
mov
mov
adc
dec
movl
inc
mov
sub
dec
inc
cli
jns
mov
xchg
add
dec
insl
sub
not
sub
jne
push
icebp
das
movsb
add
cmp
call
bound
push
es
and
sub
imull
lret
lock
mov
mov
leave
ss
dec
loopne
xchg
mov
mov
inc
arpl
mov
int3
aad
pop
push
scas
or
mov
adc
sub
ja
xor
lods
es
inc
xor
pop
fisubrl
mov
xchg
or
and
xchg
pop
mov
inc
gs
mov
pushf
xchg
adc
cs
ljmp
mov
mov
loope
je
ret
xlat
lret
aam
aam
in
fldcw
movsb
and
call
mov
ret
push
in
int3
dec
insl
inc
mov
lea
jo
mov
inc
ffreep
mov
jae
xchg
inc
dec
les
xor
mov
xor
mov
out
push
mov
sbb
mov
dec
jle
xchg
mov
pop
subl
insl
xor
ficoms
mov
repz
jae,pt
lea
pmullw
jle
and
call
sti
dec
adc
filds
mov
jb
movsb
clc
mov
aas
xor
dec
xchg
les
mov
iret
pop
incb
cmp
pop
imul
mov
xor
and
inc
jmp
add
lods
loopne
outsb
inc
outsl
fdivrl
pop
mov
pop
into
cmc
cli
xchg
js
push
out
in
leave
jecxz
mov
pop
aaa
push
cmc
fisttpll
movsl
repnz
je
mov
cwtl
cmp
pop
jb
mov
in
and
lcall
test
jmp
hlt
movsb
andl
iret
in
pop
add
lock
inc
or
pop
sbb
insl
lods
test
pop
and
push
leave
xor
mov
out
xor
dec
mov
xchg
daa
mov
xchg
xor
and
jno
clc
or
sarb
cmp
pop
adc
addr16
add
add
jp
mov
lahf
dec
ja
arpl
lods
sahf
adc
mov
pop
xchg
mov
test
mov
movsl
cmp
jecxz
or
mov
mov
adc
xchg
nop
cmp
push
ja,pn
jno
pop
fmuls
loop
aad
out
jg
call
jb
push
cmc
jae
mov
cmp
jge
lret
dec
adc
mov
push
fmull
orb
mov
sbb
clc
sti
movsb
mov
imul
xor
xor
lcall
push
xchg
rorb
stos
cmp
push
push
pop
jne
pop
jge
dec
fsubl
mov
cmpsb
stos
ret
inc
xchg
mov
je
insb
or
xchg
inc
or
and
icebp
lret
mov
inc
dec
cld
iret
xor
imul
jecxz
xchg
mov
cmp
jb
lock
xchg
mov
fcoml
lret
xchg
dec
jns
cltd
xchg
mov
jle
dec
aam
lret
mov
in
in
mov
lea
cmp
sti
add
or
xchg
fstpt
jecxz
inc
mov
repnz
cmpsl
mov
ss
push
das
push
stc
ret
jl
sbb
lahf
ljmp
xlat
add
push
iret
sub
cmp
iret
xchg
dec
les
stos
mov
xchg
iret
xchg
push
incb
ljmp
pop
inc
jl
lods
sub
mov
ret
add
jg
jbe
inc
inc
stos
jb
loope
rorb
and
je
jne
pop
adc
fsubs
test
sub
inc
jg
sub
or
jb
sbb
das
fs
daa
testb
mov
fidivrs
jecxz
mov
sub
lss
xlat
pop
test
pop
sub
jo
outsl
cld
mov
pop
add
daa
adc
push
xor
popf
pop
repz
popa
and
add
xor
in
shrb
push
jl
cli
inc
or
jle
or
test
cwtl
inc
jb
sub
pop
mov
sti
dec
dec
xchg
inc
pop
cli
push
cmpsb
test
mov
jns
and
fxch
mov
push
hlt
dec
adc
arpl
and
dec
fldl
popa
and
add
fadd
stos
into
cmpsl
ret
fwait
lahf
inc
inc
aaa
je
ficoms
dec
xor
arpl
ss
jo
popa
lods
outsl
adc
fsubr
out
cli
movsl
push
xchg
ret
pop
and
mov
pop
loopne
in
fsts
lahf
push
fcoml
dec
insl
jae
xor
mov
jo
out
ficomps
shll
out
inc
and
lcall
push
add
data16
out
mov
scas
cli
dec
pop
push
rcl
xor
jbe
mov
dec
cmpsb
xchg
mov
int
repz
aad
lods
push
add
lods
xchg
mov
jb
cmp
sub
out
getsec
and
repnz
and
call
nop
mov
aas
sbb
test
cmc
test
fxch
lret
icebp
xchg
popa
enter
xor
movsl
daa
xchg
insl
xchg
aas
add
push
les
addr16
cmp
ss
or
ljmp
pusha
notl
pop
xlat
xchg
cli
xor
test
pusha
push
sti
xor
sbb
into
jne
pop
test
loope
ret
insl
sbb
push
sbb
jbe
or
mov
dec
pop
mov
negb
imul
sbb
inc
das
adc
fs
movd
add
push
push
popa
repnz
push
or
pop
mov
sti
pop
cmp
adc
fucom
out
js
mov
adc
hlt
nop
arpl
inc
inc
push
adc
insl
jb
test
jp
movsb
mov
out
xlat
mov
ffreep
sub
mov
mov
lcall
push
xlat
xchg
mov
push
inc
inc
rorb
pop
jp
mov
mov
cli
jae
push
or
and
pop
fwait
dec
in
sarb
adc
cltd
cmpsb
popa
sbb
orl
xor
xchg
and
jle
or
ljmp
ja
lods
fwait
jle
mov
shrl
xchg
and
inc
and
test
mov
hlt
mov
mov
cmp
je
mov
mov
mov
mov
xor
cmp
jne
mov
mov
xor
movsbl
mov
xor
add
cmp
mov
mov
mov
je
xor
add
mov
je
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
add
imul
mov
mov
mov
add
or
mov
mov
mov
add
xor
mov
mov
mov
add
and
mov
mov
mov
lea
mov
mov
mov
sub
add
mov
mov
xor
add
jne
jmp
jmp
adc
lods
fnsave
lock
sbb
inc
xchg
sti
jmp
xor
inc
pop
jl
jns
iret
cli
movsl
adc
push
sbb
clc
mov
arpl
add
jb
cltd
cmp
repz
pop
lret
dec
jle
pop
and
mov
ds
cwtl
insl
mov
loop
mov
lret
add
push
loop
fnstsw
rorl
cmc
in
push
pop
jo
mov
dec
fnstsw
lret
in
jnp
sub
bnd
test
sbb
xor
loopne
int3
loopne
mov
lods
outsl
lods
sidtl
ret
sub
insl
xor
cmp
ret
divl
jo
push
ficomps
inc
inc
sar
inc
or
add
or
int3
xor
cmp
xor
mov
lcall
shl
xchg
hlt
dec
or
jge
jne
push
les
loope
and
mov
sbb
xor
lods
push
mov
and
mov
mov
jb
mov
and
lret
les
pop
stos
sub
mov
xchg
push
pop
gs
scas
shll
fsubs
dec
cmp
outsb
hlt
mov
popa
sbb
mov
adc
mov
dec
mov
cmp
mov
jno
imul
lock
pusha
mov
or
xchg
pop
rorb
mov
adc
push
pop
aad
movsl
stos
lods
pop
in
cmp
lret
lock
subb
sub
repnz
pop
int3
dec
adc
imul
clc
jmp
test
mov
jmp
sub
int3
xor
mov
and
xchg
leave
xor
or
popf
ljmp
pop
sbb
mov
add
sub
lds
ja
cs
jg
pushf
shlb
jo
jmp
add
sub
add
jle
xchg
lret
cld
jne
adc
pop
xchg
push
cmp
popf
test
push
jo
dec
cltd
iret
xor
clc
test
pop
lret
lods
adc
add
popa
or
mov
dec
rcrb
fdivs
js
pop
inc
sti
jp
mov
or
call
cli
test
je
jnp
xchg
add
in
insb
jae
bound
repz
jmp
out
mov
fcmovu
popf
outsb
push
dec
fwait
cs
xchg
xor
adc
in
pop
int3
push
ror
dec
insb
push
in
sbb
inc
and
repz
jl
out
xor
inc
adc
mov
test
push
sarb
ljmp
jae
pop
push
jne
sub
sub
lds
and
mov
std
cmp
jl
xchg
dec
out
lret
or
or
sub
sub
pop
mov
clc
scas
call
pop
jl
addr16
out
call
mov
mov
or
inc
daa
inc
push
dec
dec
repz
xchg
std
inc
enter
add
sub
lcall
adc
sbb
mov
sbbl
in
mov
mov
push
adc
insl
and
addr16
out
pushf
outsl
cld
mov
jno
xor
xchg
pop
mov
jp
cmp
mov
add
cld
sub
jbe
test
push
popf
inc
arpl
xor
movb
xor
orl
mov
aas
test
mov
adc
sbb
divl
and
xor
sbb
test
ficompl
xchg
cltd
js
pop
add
enter
iret
iret
fimull
sub
add
sbb
lds
js
ret
clc
test
popf
js
lret
mov
cmpl
push
sub
bound
mov
in
xchg
mov
repz
aaa
push
repz
cmp
jae
add
mov
rolb
adc
push
aad
test
hlt
mov
inc
pop
xor
int3
in
dec
and
dec
pop
lea
sub
iret
pop
inc
pop
in
movsb
mov
fisttpll
or
jg
mov
sub
roll
add
pop
int3
pop
je
add
push
push
mov
inc
sub
jg
das
sub
mov
es
mov
in
mov
inc
es
jnp
testl
insb
rcll
sub
push
out
mov
mov
andl
cmp
fildl
jns
aam
push
adc
xchg
stc
into
test
mov
loop
subb
sbb
push
cmp
js
and
jmp
push
adc
outsl
test
lahf
je
daa
push
and
jnp
and
fsubr
aad
mov
int3
iret
aad
out
fwait
xchg
into
shrl
pushf
outsl
mov
xchg
push
out
add
and
dec
mov
or
jae
dec
mov
xlat
fcoms
cltd
sbb
imul
add
or
sti
xor
push
cwtl
scas
pusha
faddl
add
movb
sbb
icebp
pop
lods
cmp
xor
mov
jmp
fcoms
cmp
pushf
pushw
cltd
std
scas
adc
pushf
xor
adc
cwtl
stc
dec
loop
push
arpl
inc
test
push
xrelease
pushf
push
lods
sub
fcompl
cs
mov
test
cmp
sub
bndldx
int3
arpl
inc
dec
aam
cltd
icebp
nop
fcoms
dec
push
dec
add
loop
loope
sbb
adc
ja
bound
mov
dec
push
cmc
imul
lds
dec
sti
nop
out
push
fimuls
les
push
dec
out
xchg
jo
leave
arpl
push
push
inc
jp
shrb
xchg
xchg
dec
push
js
dec
add
push
jle
sbb
ja
loopne
movsb
pop
test
xchg
rorl
hlt
mov
inc
push
aas
les
sub
mov
sbb
mov
jne
mov
xchg
xor
push
adc
ud0
js
test
jecxz
ja
hlt
jo
mov
sahf
ss
incl
stc
xchg
sub
xchg
push
arpl
add
andb
sub
mov
pushf
jne
mov
mov
test
sbb
sub
mov
jbe
ljmp
push
ss
mov
mov
pop
out
dec
mov
or
insb
add
lahf
loopne
movsb
aam
sbb
in
add
or
pop
and
std
mov
sub
ja
jge
inc
sbb
sub
xor
jo
enter
pop
add
mov
mov
insl
loopne
rcrb
inc
xorb
lods
push
iret
aas
scas
and
jns
and
jg
mov
sub
aaa
je
mov
cltd
sub
mov
and
xor
cmp
lret
mov
push
cmp
add
pop
imul
or
fdivrl
cwtl
inc
aaa
loop
cmpsb
loop
jo
popa
enter
xor
pop
or
mov
pop
std
xor
add
or
jbe
clc
cmp
inc
rorb
dec
pusha
loope
pusha
push
sbb
fs
xchg
stc
mov
inc
add
adc
cmp
lods
jo
js
cmp
pop
xor
cltd
mov
fs
mov
adcl
filds
add
imul
ss
daa
cltd
add
adcb
fsubl
xchg
out
sbb
adcb
jns
hlt
cltd
mov
sbb
xor
lock
xchg
dec
les
lahf
or
jmp
mov
pop
imul
jno
roll
shrb
cmpsb
adc
sub
mov
lods
aas
jae
add
call
aam
mov
jg
lea
mov
jo
ret
adc
xor
mov
ss
jecxz
aas
lcall
jno
xchg
mov
repnz
push
sbb
pop
or
je
mov
lds
sbbl
jne
pop
cmpb
ss
lret
aam
test
in
rcrl
sub
pop
gs
cmpb
xor
mov
outsl
adc
inc
sti
mov
js
inc
mov
jns
push
adc
cli
out
push
xor
mov
push
or
fstpl
add
xlat
mov
mov
inc
adcl
pop
jle
nop
test
fldcw
fwait
imul
pushf
adc
push
lcall
shlb
sti
mul
dec
popa
and
scas
inc
fcoml
mov
cli
pop
or
mov
mov
mov
setae
dec
dec
pop
pop
enter
push
lods
aas
jb
iret
dec
mov
mov
sub
das
fs
into
clc
or
imul
out
test
mov
movsb
fs
push
pusha
hlt
ljmp
jb
sbb
mov
in
adc
bound
push
popa
aaa
loopne
jns
mov
jg
xor
repz
das
adc
dec
jp
adc
or
js
inc
xorl
ficomps
jmp
jae
movsb
cmpsl
and
enter
imul
and
cmp
ja
and
loop
ja
cmpsl
inc
mov
fistpl
ljmp
cld
in
mov
and
xor
and
ja
mov
push
inc
xchg
xor
cwtl
xchg
inc
repnz
mov
es
int3
divl
out
lods
test
in
ds
loopne
mov
test
mov
jp
out
rcr
cmc
fldcw
rcrl
movsb
push
jl
xor
pop
mov
or
icebp
or
pop
fbstp
jg
mov
aam
jbe
dec
and
cmovbe
or
adc
mov
enter
mov
sbb
jl
xchg
mov
push
ja
sub
sub
xlat
cmp
mov
xor
push
lock
or
mov
xchg
cmc
pop
stc
test
sub
mov
cmc
out
aaa
test
pushf
cltd
or
ret
leave
cmpl
test
xchg
jb
push
adc
cmp
mov
test
arpl
imul
inc
sub
leave
insb
add
clc
mov
jmp
cmp
cmc
cltd
push
leave
lds
out
test
ljmp
inc
dec
mul
stc
mov
rolb
fcmovu
lret
cmp
sahf
imulb
loope
adc
or
dec
gs
dec
stc
mov
jnp
fldz
out
fwait
push
mov
adc
int
inc
pop
mov
xor
imul
pop
addl
out
mov
loop
push
in
pop
or
add
loopne
andl
jns
or
jmp
adc
sub
idivl
dec
call
test
inc
adc
insl
ret
notb
and
xchg
mov
dec
cs
pop
inc
adc
cmpsl
inc
jne
mov
adc
dec
push
cmp
scas
dec
shrb
in
mov
sbb
out
and
es
ja
add
enter
les
das
call
jmp
mov
lea
lea
mov
popf
jge
sbb
pusha
jecxz
adc
lods
lahf
aas
leave
and
inc
pushf
jns
mov
pop
jae
pop
lret
cmp
mov
daa
not
lods
push
mov
sbb
adc
sbb
cs
cld
push
mov
push
ret
mov
cwtl
inc
and
fldcw
in
in
mov
jl
hlt
xchg
and
cmp
shlb
movsl
clc
jg
mov
xchg
xor
repz
test
xorb
lret
mov
mov
leave
lods
cmc
jno
leave
pop
cmp
push
pop
mov
dec
fcomps
cli
outsb
adc
xor
das
inc
lods
dec
dec
push
mov
movsb
imul
repnz
stc
daa
xchg
sarb
dec
or
mov
ss
aas
decb
jge
mov
push
js
lea
test
push
xchg
mov
xchg
push
popa
scas
shrl
or
scas
insb
dec
inc
js
sbb
cmp
inc
mov
popa
xor
rol
ss
inc
fcoml
or
sbb
xor
add
sub
fidivl
lcall
es
dec
pop
adc
cmp
mov
imul
dec
popa
push
es
movsb
xchg
xor
mov
xor
xor
cmpsl
cmpsb
mov
in
push
push
cwtl
cwtl
icebp
sbb
cwtl
inc
lods
dec
or
testb
sub
lahf
ljmp
mov
mov
stc
mov
mov
in
xchg
add
gs
into
sbb
fildl
cmp
call
mov
xor
push
and
and
adc
pop
out
cs
cmp
hlt
insl
adc
sbb
sub
movsb
cmp
movb
adc
sub
add
mov
mov
repz
xor
mov
inc
lds
mull
and
sub
flds
pop
cwtl
push
cmpsl
outsb
xor
xchg
cmp
jmp
sub
js
inc
or
mov
nop
jo
push
inc
int
jo
inc
xchg
jge
xor
jmp
fdivl
in
imul
pop
push
lret
adc
mov
in
in
imul
sti
roll
cltd
fidivrs
dec
imul
mov
pop
add
jl
mov
repnz
ficoml
sub
aam
iret
leave
xchg
aad
lods
addr16
cmp
adc
mov
adc
xchg
inc
inc
or
bound
into
scas
push
loopne
mov
jnp
sbb
jbe
push
lahf
jmp
jno
inc
sbb
pop
out
jne
iret
jl
das
inc
insl
lods
cwtl
out
mov
jmp
jge
mov
mov
jmp
and
shr
jb
pop
cld
mov
mov
mov
push
adc
mov
addl
stos
out
subl
and
xchg
sbb
repz
or
sbb
addl
insw
pcmpeqd
push
fwait
ja
lods
dec
out
outsb
fsubl
and
pop
push
pop
js
lret
or
test
xor
cli
push
sub
add
pop
jle
sub
fisubrl
add
stos
jp
mov
or
out
daa
dec
sub
call
or
repz
or
dec
enter
push
jb
xlat
xor
repnz
xlat
add
fidivl
push
std
add
shrb
pop
mov
nop
or
shrl
scas
xor
mov
pop
jo
mov
xchg
push
or
fisttpl
test
pop
iret
testb
leave
sbb
push
fdivrs
int3
out
mov
rolb
loope
push
or
cld
into
and
in
dec
and
pop
jg
push
and
and
paddusw
xor
ret
aad
rol
cwtl
or
in
xor
in
icebp
scas
or
xchg
inc
notl
xor
outsl
sub
lret
sbb
out
sub
loope
sbbb
in
pop
xchg
and
and
ja
fdivrs
mov
popa
inc
repnz
data16
rorl
pop
rcll
int
stc
movsb
aas
sbb
push
mov
outsb
shlb
insl
jge
out
push
sarb
mov
jnp
fisubs
jns
pop
ret
imul
jmp
mov
xor
ja
pusha
or
rcrb
and
test
jne
imul
sbb
xchg
ds
mov
in
in
insl
dec
cmp
jbe
sub
sbb
repnz
out
and
fsubl
add
mov
fstp
dec
add
adc
sbb
iret
pop
xor
call
cmc
inc
test
add
sti
orb
shlb
cld
fwait
das
in
xor
fwait
mov
out
cli
jne
push
jle
dec
push
push
xchg
dec
out
or
pop
addl
adc
xchg
jne
dec
sbb
or
rorb
mov
je
and
pop
add
pop
push
xchg
sub
or
nop
movsl
jp
mov
sbb
adc
aaa
jg
cmpb
hlt
lock
dec
push
shl
jbe
inc
nop
icebp
dec
out
dec
push
adc
add
in
cmp
pop
jecxz
in
xor
imul
cmp
inc
lahf
pop
jno
enter
xchg
jb
pop
add
or
cmpsb
pop
cwtl
cmp
dec
getsec
xor
std
pop
pop
scas
loope
xchg
mov
sbb
inc
sub
jae
add
mov
sahf
inc
xchg
gs
test
mov
and
in
testl
cmp
leave
pop
hlt
cld
jns
jecxz
jb
hlt
xchg
xor
sub
jb
cmp
dec
lret
sbb
cmp
inc
add
aas
rol
fstpt
mov
stos
mov
add
ret
adc
outsb
or
sbb
xor
outsl
call
imul
mov
add
jle
stc
mov
mov
cld
pop
mov
pop
fdivrp
mov
and
rolb
repz
ljmp
pop
xlat
mov
fcomps
inc
mov
fs
ret
cs
loop
pop
stos
clc
jmp
cmp
movl
aas
add
mov
or
cmp
xor
ljmp
gs
aas
adc
cmp
mov
cwtl
push
dec
pop
xchg
pop
cmp
pop
push
mov
je
pop
cs
add
rorl
aas
in
xor
dec
xor
data16
out
je
jb
mov
frstor
sbb
inc
jecxz
repz
cltd
stc
imul
sete
jmp
and
adc
mov
sub
dec
cltd
sbb
or
daa
mov
push
and
shll
pop
push
xor
insl
lock
leave
insl
test
stos
inc
add
sbb
dec
or
call
jno
dec
mov
in
dec
out
jae
pop
push
cmp
addr16
sbb
sub
mov
stos
addr16
clc
cmp
or
mov
jmp
dec
insb
cmpsb
cmp
in
or
dec
sub
movsb
testb
push
movsl
mov
in
adc
inc
mov
popa
xor
test
aam
fsubl
nop
dec
notl
std
into
lret
decl
push
les
out
push
sbb
mov
add
and
xlat
jne
cwtl
das
mov
cs
loope
fnstcw
addr16
hlt
testl
adc
sub
pop
sub
mov
jbe
mov
mov
sub
push
push
mov
sbb
inc
add
push
mov
pop
sub
or
aad
pop
fiaddl
xor
and
mov
arpl
mov
mov
jb
add
mov
fistl
outsl
jne
and
fsts
inc
imul
push
int
cmp
loope
push
xorl
inc
pop
cmc
jmp
lds
push
fstpl
scas
lods
jb
dec
fcoms
incw
cmp
icebp
inc
adc
inc
xor
int3
movsb
push
out
int3
mov
sbb
cmpsl
pop
jb
add
mov
sbb
jp
imul
cmc
sub
pop
dec
mov
xchg
ss
loop
or
rcrl
sub
daa
mov
sub
jns
call
adc
sbb
mov
xchg
fs
ret
fwait
xchg
jne
xorb
pop
insl
lret
jg
gs
push
mov
stc
mov
cwtl
stos
push
mov
mov
or
lret
push
std
xor
repnz
stc
mov
xchg
notl
inc
jbe
or
pop
adc
das
adc
je
ss
test
xor
popf
xchg
xchg
cs
and
movsb
enter
mov
call
outsl
test
arpl
cmp
aaa
rorb
mov
push
repz
loop
ss
add
mov
xchg
test
jnp
or
pop
push
push
xor
sbb
pushf
rcrl
dec
jo
mov
mov
fcomps
pshufw
xchg
das
pop
or
out
imul
add
movsl
push
cli
call
sbb
push
xor
and
mov
data16
mov
xchg
in
push
mov
or
sub
aad
fmul
lods
xchg
sub
cs
gs
mov
xorb
mov
popa
dec
lock
push
mov
push
insb
xchg
aad
pop
jns
mov
fbld
or
inc
push
push
mov
nop
sub
negb
nop
stos
es
jl
shrb
idivl
scas
pop
jbe
pop
sbb
mov
mov
sub
clc
inc
imul
pop
or
stc
aaa
xlat
push
pop
xlat
sbb
mov
sbb
inc
mov
push
xor
mov
cmpl
inc
data16
mov
jbe
lods
lds
push
xchg
stc
adc
dec
sub
dec
mov
mov
adc
add
stos
cmp
arpl
and
mov
mov
mov
jno
pop
jmp
in
push
or
cmc
pop
addr16
movsb
cmp
mov
jmp
loopne
test
out
cmp
adc
pop
imul
icebp
mov
imul
and
flds
sti
shr
mov
mov
jecxz
sub
cltd
cwtl
add
in
shll
pop
cmp
rorl
mov
aad
lock
pushf
dec
push
push
and
je
stos
jnp
xchg
mov
pop
les
lds
imulb
jbe
les
push
xchg
icebp
fcomip
cmpsb
jp
pop
push
jnp
in
sbb
in
stos
mov
fwait
int3
lods
cmp
es
pop
adc
mov
xchg
inc
mov
xchg
addr16
adc
mov
sbb
mov
ja
sbb
mov
fsts
jp
or
dec
sbb
mov
outsb
and
insb
ljmp
pop
dec
or
xor
js
and
rorl
int3
cmpsl
fstpl
pop
add
fwait
jge
mov
leave
mov
jp
cmpl
mov
and
xor
xchg
mov
cmc
into
xor
mov
dec
pop
and
mov
ret
outsl
sub
or
test
div
mov
push
ffree
out
fidivrs
jg
popa
outsb
mov
lahf
scas
mov
inc
pop
jo
fisubrl
cmp
cli
pop
lds
mov
xor
sub
lcall
rclb
jge
cmp
movsl
push
imull
mov
out
xor
leave
icebp
mov
stc
xchg
mull
jns
shrl
sbb
dec
mov
jmp
in
jmp
sbb
jb
xchg
and
rclb
leave
cmc
mov
mov
sti
test
sbb
push
mov
inc
loopne
dec
or
clc
imul
add
adc
out
add
into
sub
cs
lcall
out
fstps
subl
gs
adcb
add
out
pop
add
imul
dec
sub
test
jl
xchg
mov
push
out
mov
or
xchg
pop
mov
iret
cld
les
adc
popf
add
lcall
lods
andb
sti
leave
jnp
mov
xor
jp
imul
mov
jle
jo
xor
cltd
mov
rcr
sbb
aam
loope
ret
addr16
nop
cmp
mov
in
and
dec
push
call
push
push
bound
mov
out
insb
inc
lods
cmpsl
inc
push
dec
cwtl
add
loop
aad
mov
insb
or
std
fs
xchg
stos
mov
xlat
xchg
push
pop
mov
adc
push
mov
mov
es
xor
decl
cmp
xor
sub
pop
fstl
push
cmpsb
sbb
mov
mov
jo
test
mov
add
out
cmpsl
movsb
ljmp
test
pop
dec
push
adc
mov
js
loope
imul
push
push
inc
fistpl
stos
push
ja
jne
add
fs
xchg
push
xchg
int3
cmp
testb
inc
xchg
lcall
jb
enter
enter
dec
cmp
cmpsl
push
pop
or
pop
xchg
frstor
mov
push
xchg
pop
fidivs
xor
idivl
xor
xlat
movsl
sbb
mov
lods
mov
inc
dec
jae
or
push
arpl
push
loopne
push
push
pop
ret
push
test
arpl
mov
out
out
insl
inc
xchg
xor
fsubrs
xchg
mov
movsl
add
xchg
data16
jmp
jmp
sub
mov
pop
pop
jnp
shrb
jno
xor
inc
push
getsec
inc
pop
mov
cmp
sahf
jp
xor
inc
cmp
fs
ja
into
push
adc
js
inc
dec
hlt
pop
xchg
out
orb
cltd
sub
pop
inc
rclb
cmpsl
pop
xchg
fdivs
insb
inc
mov
or
cmp
dec
dec
loope
lret
sbb
jbe
mov
cltd
pop
xor
pop
mov
xchg
pushf
into
popf
mov
inc
aam
mov
insb
mov
push
pop
test
pop
pop
sbbl
stos
out
lcall
push
sarl
push
repz
xchg
loopne
sub
pop
sbb
lret
stc
leave
hlt
outsl
icebp
jno
and
push
ds
subl
push
cmpsl
dec
jmp
fistps
pop
inc
outsb
jnp
sub
cwtl
xchg
out
scas
mov
out
imulb
push
jge
jp
cmpl
mov
fadd
scas
mov
pop
jo
sbb
xorl
mov
xor
mov
sub
jno
jmp
or
pushf
or
dec
jmp
jo
sub
adc
popf
pop
dec
jge
mov
pop
xchg
push
sbb
xchg
xor
and
in
inc
out
pop
xchg
es
lcall
lea
jmp
xchg
pop
and
jge
aas
add
lods
lret
ret
or
push
outsb
sarl
gs
push
sbb
fisubl
add
out
jbe
xchg
sbb
cltd
movsl
jg
xlat
cwtl
xor
adc
ret
inc
repz
imul
pushl
ret
test
pop
std
pushf
adc
arpl
leave
xorl
mov
cmp
dec
fwait
lock
lcall
dec
adc
dec
adc
push
in
int
icebp
add
push
sbb
mov
push
flds
mov
lods
sbb
jae
jmp
cli
out
mov
cmp
outsb
out
inc
lcall
mov
aam
push
sub
mov
sbb
cmp
shl
inc
cmp
inc
addl
pusha
shrd
stos
xchg
cmp
cmpsb
dec
mull
mov
add
xor
jo
fistps
in
outsb
fbld
lret
push
mov
push
in
test
cmp
outsl
and
jno
jecxz
sbb
mov
lds
out
loop
lods
inc
ror
sub
inc
popf
lcall
mov
mov
fists
xchg
pushl
and
push
xchg
loopne
xchg
push
mov
cmp
mov
stos
inc
rol
loop
mov
cld
fwait
push
mov
push
mov
fstpl
xchg
lds
shrb
or
mov
rol
xchg
jg
push
mov
and
adc
add
push
insb
push
imul
ret
sub
ret
test
mov
mov
sbb
loope
pop
mov
add
and
cmc
leave
sbb
mov
cmp
fsubrl
inc
mov
dec
insb
xlat
mov
push
push
dec
stos
leave
pop
pcmpeqd
add
arpl
arpl
inc
push
mov
xor
mov
xchg
std
jnp
cmp
imul
adc
pop
nop
imul
int
mov
add
sbb
pusha
push
push
scas
cmc
mov
fucomi
jbe
pop
mov
out
rorb
scas
adc
dec
ret
cld
movsb
das
in
jbe
jno
data16
inc
arpl
dec
scas
jae
xlat
lods
push
mov
cmp
lods
cmp
sbb
lahf
cmp
icebp
sub
inc
fstpt
mov
sti
add
mov
add
scas
mov
stc
xchg
jl
add
adc
stc
mov
fiadds
mov
push
fistpl
lods
and
cmc
push
loope
pop
mov
adc
fsubrl
xchg
es
lea
and
lret
cwtl
loope
nop
mov
jp
call
jns
dec
mov
mov
pop
mov
xor
inc
mov
sub
pushf
mov
sbb
icebp
ret
into
xchg
in
fwait
or
or
sbb
inc
cwtl
jmp
adc
hlt
mov
inc
ret
pop
inc
ret
movsb
test
xor
outsl
stos
nop
fidivrl
sbb
add
or
inc
add
add
push
inc
pop
lea
add
enter
mov
push
ret
add
xchg
lock
xor
das
push
mov
xchg
cmc
decb
fmulp
sbb
test
test
xchg
fdivrl
cli
mov
mov
int
and
jo
sub
iret
stc
jecxz
push
mov
pop
cmp
test
sbb
dec
ret
mov
and
inc
repnz
push
outsb
sub
mov
cwtl
ja
dec
push
xor
sub
cli
cmpl
mov
aas
daa
test
fmulp
in
imul
push
mov
mov
jnp
idiv
aas
repnz
lea
mov
test
sub
sbb
jne
and
hlt
add
and
ds
mov
add
add
and
lods
sub
fs
dec
or
sbb
xor
movsl
adc
push
mov
enter
cld
mov
sti
add
jnp
cltd
push
xchg
aaa
jae
jmp
cmp
rcrb
dec
mov
sbb
out
and
pop
xorb
xlat
sub
enter
imul
stos
inc
mov
fcoml
sub
jbe
ror
jg
cltd
adc
ljmp
xchg
fisubrl
sub
inc
or
data16
shll
scas
enter
arpl
ficoms
mov
fdivl
aad
mov
imul
dec
xor
decl
and
aam
sbb
xchg
fistpll
sbb
pop
mov
push
xchg
jne
cmp
mov
mov
aam
out
outsb
add
dec
pop
inc
je
aad
push
in
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
add
imul
mov
mov
mov
add
or
mov
mov
mov
add
xor
mov
mov
mov
add
jmp
lret
lock
mov
cmp
jecxz
adc
inc
pop
jl
jnp
arpl
cmp
pop
pop
into
pushf
and
and
pop
ret
repnz
insb
pop
push
xor
mov
inc
pop
pop
dec
dec
and
cmp
jnp
mov
pop
mov
mov
mov
xor
mov
out
fcmovnb
lea
jle
sbb
roll
mov
ficompl
es
icebp
sbb
nop
dec
cmp
inc
or
aam
dec
mov
imul
aad
fldcw
xlat
mov
xchg
sti
xchg
push
mov
arpl
jne
lret
fs
push
cmp
loop
das
dec
inc
test
dec
lock
mov
inc
scas
ljmp
ret
jne
and
mov
dec
jle
scas
pop
sbb
pusha
push
pop
repz
movsb
cltd
cwtl
pushf
sub
das
imul
fsubs
xor
stc
add
repnz
popa
std
filds
mov
adc
and
inc
orb
les
imul
daa
int
sti
inc
out
ret
fsubs
icebp
lret
lods
out
mov
rorl
adc
ja
pusha
mov
add
stos
mov
dec
js
repz
loope
and
lds
sbb
fldl
scas
mov
test
add
fistpl
adc
mov
mov
fiaddl
inc
int
jmp
aam
pop
xor
gs
lret
push
jg
jbe
mov
lods
push
xchg
cmp
pop
add
add
sub
push
jecxz
test
push
sbb
mov
test
push
xchg
popa
dec
iret
mov
jb
insb
xor
fcompp
dec
jge
sub
push
pop
outsl
int
sbb
xchg
mov
xchg
xor
inc
push
and
mov
insl
jecxz
sub
adc
sarl
jmp
push
popf
add
repnz
sub
sbb
fimull
jbe
ror
aad
arpl
xchg
cmpsl
je
mov
sbb
pop
or
mov
fwait
xchg
and
call
adcb
jo
sahf
es
call
jnp
xchg
cmp
sarl
outsl
sbb
xchg
lret
lret
sbb
test
jae
mov
pop
push
popa
ja
cmp
enter
incb
pop
pop
ffreep
or
add
sbb
cmc
push
roll
mov
mov
sub
mov
adc
test
insb
xlat
mov
js
dec
pop
mov
iret
je
jno
out
test
leave
mov
dec
xchg
insb
jae
pop
adc
stc
fsubl
je
or
jmp
int3
arpl
rdmsr
arpl
imul
mov
sub
or
pop
sbb
or
int3
test
aad
mov
js
pop
icebp
sub
mov
cmpsb
and
repz
out
xchg
rcrl
adc
int
push
stos
maxps
sub
push
imul
arpl
je
shlb
mulb
fsub
out
mov
rclb
fnstenv
jge
ds
pop
fmuls
mov
pop
push
fmulp
fdivr
inc
mov
cli
lahf
sarb
into
addr16
inc
push
mov
nop
shrl
xchg
push
and
fs
adc
push
daa
push
mov
jae
add
inc
arpl
rolb
pop
inc
push
mov
jge
mov
orb
or
sub
lcall
mov
mov
sbb
mov
mov
xchg
rorl
clc
sahf
push
pop
repz
sbb
sub
adc
leave
mov
loop
hlt
scas
push
cmp
mov
dec
lea
and
dec
pop
push
add
aad
dec
popa
jp
idivl
dec
xor
inc
insl
pop
mov
adcb
jmp
les
or
fiadds
jmp
push
inc
pop
inc
aaa
mov
in
mov
js
insb
adc
fldcw
and
cltd
call
cs
aad
jmp
pop
jb
lea
sbb
sti
cmp
pop
sbb
push
aas
or
mov
push
inc
jg
pushf
jl
push
mov
in
jp
dec
js
out
shrb
inc
addr16
cmp
mov
sub
pop
mov
cmp
mov
or
imul
sar
popa
xor
stc
pop
xlat
xchg
lcall
xchg
cld
xor
in
lret
dec
loopne
out
xchg
sub
dec
repnz
dec
leave
push
push
add
das
std
mov
xor
xlat
mov
xchg
call
into
inc
mov
and
sbb
dec
push
les
stc
dec
cmp
les
adc
adc
shl
insl
test
test
shl
xor
iret
cmp
mov
mov
sub
inc
sub
addl
pop
dec
or
pop
mov
lcall
jge
cmp
incb
mov
dec
xchg
push
mov
pop
out
nop
popf
aad
dec
int
sbb
fsts
dec
xor
inc
mov
enter
pop
repz
jl
lahf
shll
cmpsl
adc
out
stos
mov
jecxz
hlt
psrld
fwait
adc
adc
in
inc
and
pusha
cs
xchg
inc
xlat
leave
jge
adc
andb
es
mov
jb
adc
in
pop
in
pop
jbe
mov
dec
lock
dec
mov
rcll
out
in
adc
shlb
cmp
shrl
mov
jecxz
add
addr16
inc
jb
xchg
pop
xchg
fcomps
imul
sub
add
mov
jno,pn
cmpl
inc
jae
outsb
xchg
mov
cmpsl
inc
aad
jbe
nop
add
push
xchg
xchg
popa
in
add
push
cmp
jp
lcall
cmp
sub
test
lods
pop
fdivrs
inc
push
sub
inc
aaa
and
push
jg
and
stc
cmc
cmpsb
push
jb
push
or
addl
daa
clc
scas
pop
cmp
push
fmuls
jns
mov
xchg
xchg
insl
sbb
in
outsl
xor
dec
mov
inc
sub
mov
adc
fildll
lock
ds
fsubs
popa
push
adc
ffreep
lret
insl
dec
test
stc
scas
push
jge
xor
mov
mov
pusha
or
mov
movsb
in
pop
imul
popa
mov
sub
imul
outsb
aad
jns
or
mov
data16
and
lret
movsb
adc
not
enter
in
leave
or
addr16
xchg
aam
std
ss
mov
sbb
mov
xchg
vorpd
cld
movsb
cs
scas
outsl
ja
pop
mov
imul
fisttpl
push
pop
inc
push
cmp
sbb
and
les
pcmpgtb
repz
jnp
adc
pop
iret
pop
add
jae
call
lea
fbld
sbb
jmp
add
inc
outsl
inc
cmp
jge
jl
fimull
imulb
das
pop
jp
int3
outsl
jp
mov
pop
das
mov
or
outsl
pop
jp
cmp
xlat
ljmp
dec
in
mov
sub
stos
pop
wbinvd
mov
and
jnp
push
pop
adc
sub
jge
ffreep
xor
cmp
cmpb
addr16
pop
adc
jle
push
xorl
js
add
or
inc
mov
and
and
sbb
scas
inc
int
lahf
repnz
sub
mov
jbe
mov
aas
movsb
inc
adc
mov
outsb
pop
mov
pop
dec
bound
icebp
and
jmp
jne
sub
adcl
pop
mov
bound
gs
aas
fisttps
lea
je
xchg
daa
cmpsl
dec
nop
imul
mov
pop
or
mov
insl
hlt
sti
js
scas
int
cwtl
test
sub
mov
sub
fcmovnbe
aaa
out
cmp
or
xchg
cmpsl
movsb
pop
jae
scas
imul
pop
mov
arpl
std
or
jle
cmpsl
repnz
or
jge
xchg
outsl
cmpsb
cmc
fdivrs
sbb
sbb
cmpsl
adc
mov
xor
daa
lret
lcall
jmp
sbb
bound
cmpsb
rcr
xor
aam
push
jbe
mov
sahf
mov
dec
push
les
mov
bswap
cmc
mov
mov
jmp
push
jnp
test
xor
in
repz
xor
xor
pop
les
enter
das
arpl
jp
dec
out
jmp
loopne
or
cmp
mov
add
ss
stos
dec
mov
mov
in
nop
clc
ja
or
xchg
cld
add
push
xor
pop
lea
sub
inc
movsl
mov
mov
rclb
cmpl
stc
test
pop
es
cmpsb
aad
in
and
fisttpl
xor
leave
insl
ds
pop
test
fs
leave
not
or
loop
cwtl
pop
sub
loop
fs
sahf
aas
jb
iret
shlb
adc
cmp
sub
xchg
dec
cli
push
add
mov
dec
and
mov
cli
ds
sub
or
je
ds
xor
mov
pusha
xor
nop
in
cmpsl
mov
push
lea
loopne
pop
sub
in
push
push
adc
js
lds
mov
std
jae
scas
sub
je
jg
sbbb
mov
pop
pop
stc
push
mov
pop
pop
add
jmp
popa
out
std
dec
out
int
adc
out
mov
push
cld
nop
pop
and
mov
popa
lret
sub
test
jbe
xor
popf
aad
jecxz
dec
xor
jns
or
inc
jo
fst
pop
movsb
loopne
leave
jmp
push
adc
call
xlat
xor
xchg
mov
rcll
mov
xchg
mov
push
and
dec
lahf
es
nop
insb
and
ret
mov
mov
mov
pop
aaa
jle,pt
and
sbb
xor
and
push
scas
pop
add
or
pushf
lea
jle
lock
mov
nop
lea
sbb
pop
dec
popf
cmc
push
cmp
push
and
aas
in
out
sub
stos
and
xor
ss
aad
mov
push
stos
push
sub
mov
mov
xchg
cld
mov
shrl
push
pop
add
cmp
xlat
in
adc
xchg
movsb
inc
arpl
les
dec
add
or
iret
fs
or
pop
aas
sbb
dec
out
rcr
pop
fcompl
jmp
or
mov
cmp
lret
cmpsb
mov
mov
sbb
cmc
test
cmp
xor
push
shrl
xlat
mov
inc
and
inc
js
mov
arpl
mov
popa
in
sub
loope
jp
sbb
sub
xor
es
and
in
and
test
xlat
xchg
inc
popa
les
fsubrl
loopne
mov
dec
jne
popf
test
add
mov
inc
mov
mov
inc
subb
mov
jno
xchg
cmp
cmp
jge
mov
xlat
lods
add
fisttpll
je
pop
aad
push
adc
mov
hlt
jle
dec
scas
ret
test
push
cmp
fs
call
sti
and
in
gs
enter
test
pop
pop
icebp
sbb
sub
push
xchg
push
cmpsl
in
rcl
adc
jmp
pusha
xor
add
xchg
push
cltd
jecxz
sbb
xor
xchg
sahf
cmp
insl
jg
push
inc
push
aaa
mov
imul
xor
notl
xor
and
xchg
adcl
mov
mov
loope
stos
cmp
shl
xchg
jne
sub
xor
mov
fldl
or
mov
ds
ret
jo
addb
aad
enter
push
repnz
repz
ss
adc
in
orb
and
clc
mov
mov
je
adc
jmp
xlat
cmpb
mov
out
jns
or
ret
lock
pop
lock
mov
outsb
test
fidivs
fldl2t
int
std
outsb
aaa
orl
sub
fnsave
int
xchg
pop
shr
xchg
jl
outsl
xchg
das
pop
sub
xchg
add
push
pop
lds
sbb
mov
sbbb
or
inc
ja
xchg
pop
adc
add
insb
jl
mov
icebp
pop
jmp
push
jo,pt
push
mov
subl
int3
ljmp
cmp
add
push
sub
pop
aas
std
loop
shrl
mov
scas
sahf
fs
sahf
ljmp
adc
sti
xchg
pop
mov
adcb
je
into
test
decb
hlt
inc
mov
xor
xchg
jno
sbb
add
test
mov
aam
sub
push
out
ljmp
mov
jg
jge
loope
in
sbb
xchg
aaa
loop
popf
mov
jl
pop
outsl
in
fisubrs
mov
push
pop
test
lods
and
cmp
mov
in
sbb
mov
out
frstor
sub
aaa
sub
push
push
out
sahf
mov
cmpsl
dec
pop
imul
addr16
push
dec
daa
adc
or
in
es
inc
mov
fwait
lods
lods
ds
inc
aam
aad
cs
movsl
test
xor
rep
in
out
xchg
shrb
xchg
and
cmp
andps
push
lock
insb
lcall
push
sub
nop
les
cs
shl
popf
jae
insl
inc
stc
sub
mov
ss
dec
jae
cli
add
fwait
inc
pop
sub
test
fimuls
decl
mov
mov
xorl
mov
call
xor
test
pusha
pop
fdivl
cmp
fcompl
pop
adc
ret
pop
ss
fcoms
fnstenv
mov
cli
les
mov
movsl
inc
sarl
lock
sbb
or
dec
addr16
xor
sub
add
add
inc
into
out
sbb
int
std
mov
add
ja
scas
ja
cmpsl
lds
cmpl
inc
roll
push
inc
gs
lods
hlt
push
jb
mov
or
mov
shll
neg
fdivrs
gs
les
xorb
jae
ds
or
ss
stos
sub
add
nop
mov
jb
mov
sub
lea
mov
aas
notb
lds
lret
fimuls
sub
pop
push
ljmp
dec
lahf
mov
sub
lods
stos
jl
push
xchg
repnz
mov
add
ss
sti
push
jbe
test
insl
adc
fdivrl
push
mov
out
ror
jb
ss
pushf
push
and
stos
daa
push
push
and
and
insb
pop
out
lret
sbb
mov
aad
test
cwtl
pop
pop
and
add
pop
fcmovb
sbb
jmp
call
mov
mov
add
add
shll
mov
and
push
cltd
ljmp
aas
fdivs
movsb
xor
shlb
cmp
mov
shlw
scas
icebp
sbbl
dec
sub
stc
scas
jns
jne
jbe
or
shlb
xchg
push
rcrb
aad
or
mov
push
sub
pop
adc
push
xor
cld
push
mov
mov
xor
sti
cs
in
push
pop
outsb
sbb
fildl
or
out
xchg
sbb
icebp
pop
mov
dec
sbb
leave
xchg
idivl
mov
ret
outsl
push
inc
cmp
in
loope
adc
sbb
and
les
lcall
lcall
or
mov
notl
outsb
jle
and
fidivl
neg
or
inc
mov
jle
and
xorl
jb
push
cmpsb
shl
aas
cmpsl
xor
sub
cltd
and
pushf
lcall
shl
inc
les
xor
xchg
xorb
and
cltd
pop
add
std
xor
testl
cmpb
cltd
dec
push
push
scas
push
pop
dec
push
lret
or
sbb
push
ds
cwtl
sbb
push
mov
lock
jnp
jnp
lahf
and
out
mov
daa
sbb
add
adc
adc
std
mov
movsl
dec
pop
inc
sbb
adc
sub
pop
cmp
idivb
cs
cmc
pop
mov
shrd
sarb
mov
jmp
mov
sbb
xor
daa
ljmp
sub
push
jnp
sub
ds
xchg
sub
aad
mov
push
lea
dec
adc
mov
ret
jbe
mov
jne
push
dec
lret
and
mov
in
sub
add
push
inc
sahf
xchg
fs
pop
enter
lods
stos
and
repnz
mov
cmpsb
push
adc
cmpsl
jnp
xor
jae
xchg
pop
call
cmp
dec
divl
scas
addr16
xchg
fsubrp
fimuls
cs
add
and
lcall
xlat
dec
xchg
add
add
jle
cmp
popf
enter
aam
cltd
push
addr16
or
arpl
add
test
ljmp
in
dec
ds
sar
lock
adc
jle
jnp
movsb
or
xchg
jne
dec
insl
mov
push
ljmp
in
lahf
pop
stc
repz
enter
mov
leave
xor
lods
dec
scas
and
sbb
lods
das
add
das
cmp
adc
fnstcw
rol
out
xchg
ja
pop
lcall
push
hlt
sub
decl
rol
fists
dec
shll
test
and
cwtl
add
adc
xchg
cmp
and
dec
pop
xchg
fnstenv
inc
cmp
test
jmp
fs
jb
xchg
mov
out
jo
mov
aad
adc
ljmp
mov
cmp
popa
rorl
dec
cltd
pop
cmp
dec
and
push
push
mov
xchg
xchg
add
nop
enter
jge
adc
pop
xor
int3
dec
pusha
mov
movsl
mov
movsl
inc
aad
push
rorl
je
aam
and
cmp
repz
lods
mov
mov
outsl
lods
and
xchg
push
jnp
mov
iret
and
repz
int3
outsb
out
scas
faddp
jne
xchg
iret
fmull
scas
out
test
outsl
push
or
cmpl
mov
loopne
push
push
les
xchg
lds
jmp
sahf
cmpl
out
repz
leave
dec
pop
leave
and
hlt
mov
xchg
pop
mov
fwait
dec
mov
lahf
or
jb
in
jnp
cs
rorb
jae
pop
mov
add
rcrb
mov
subl
cltd
pop
xchg
and
icebp
inc
jp
repnz
cs
mov
lds
pop
xor
add
sub
jbe
cld
mov
sbb
repz
fstpl
xor
sti
add
dec
dec
or
cli
jb
pop
daa
outsb
sub
out
and
jecxz
into
mov
dec
inc
je
pop
mov
push
icebp
insb
push
mov
sahf
jle
cmpsb
adc
push
mov
inc
loopne
fstp
or
and
sbb
inc
sbb
inc
stos
add
xchg
sahf
push
nop
ret
push
mov
push
dec
popa
out
jns
or
aam
pop
daa
je
nop
mov
clc
cmp
inc
and
imul
or
nop
repnz
xchg
iret
out
pusha
lret
push
or
popa
sahf
xchg
daa
adc
or
pop
movsl
fs
push
xor
mov
push
xlat
fimuls
add
and
testb
adc
out
sbb
pop
sub
fsubl
jmp
and
mov
repz
lahf
ficomps
ret
mov
shrl
xchg
std
push
dec
xor
adc
xchg
rol
imul
lods
daa
cli
inc
cltd
shlb
ss
inc
lahf
repz
flds
lret
insb
fstps
push
test
pop
pushl
sbb
stc
sub
jmp
aam
les
js
ret
push
sbb
adc
hlt
pop
lret
lods
call
test
xchg
aas
pop
sub
sub
rorb
or
lret
pusha
enter
popf
test
and
test
mov
push
cmpsl
loop
fistpl
cmpsb
and
push
cmp
cmp
lds
cwtl
int
mov
rcrb
push
mov
imul
test
jge
loop
inc
adc
fbld
loopne
add
mov
xchg
shl
and
sub
addl
jge
add
inc
ja
mov
push
das
pop
push
add
jne
xlat
mov
push
stos
xor
rclb
jb
negb
daa
sbb
push
in
cmpl
pop
rorb
or
inc
not
orl
fldl
push
insl
push
or
mov
les
add
push
test
int3
pushf
cmc
mov
mov
into
xlat
inc
jge
cmp
and
inc
mov
adc
data16
jb
sub
xor
mov
into
movsl
jb
mov
inc
xor
inc
cmp
adc
lods
pop
lods
xchg
and
add
lds
jbe
sbb
mov
mov
inc
jl
lcall
sub
ja
cmpsb
popf
dec
push
inc
gs
jno
in
mov
je
dec
lahf
xchg
jecxz
and
xchg
xor
loopne
mov
fld
cmp
aaa
inc
jecxz
add
and
cld
in
lods
or
jnp
aas
add
int3
pop
cmp
insb
or
and
loop
fs
andl
inc
out
mov
cmp
sbb
das
fcoms
aaa
scas
js
leave
dec
lods
scas
push
out
movsb
mov
mov
xor
in
clc
pushf
sub
inc
xchg
xor
lods
mov
sub
mov
rcl
shlb
adc
lahf
arpl
int3
adc
mov
and
inc
cmp
mulb
and
and
in
fnstenv
outsl
xchg
pusha
lret
mov
movsb
dec
push
xchg
in
push
ljmp
push
pop
push
adc
in
pop
mov
mov
jmp
mov
shll
push
inc
mov
incl
or
mov
mov
in
jge
cmp
lcall
mov
call
and
orl
xchg
pop
and
lods
push
mov
mov
push
mov
jae
icebp
add
psrad
mov
sbb
shlb
sahf
inc
psubb
jb
sub
insb
aad
mov
inc
xchg
or
cli
push
jnp
push
fisubrs
hlt
jbe
insl
pop
sub
fsubp
push
push
pop
mov
sbb
cmp
and
jno
sbb
push
push
push
les
jmp
adc
mov
inc
daa
stos
pop
mov
pushf
fwait
xor
lock
and
jb
pmaddwd
push
movsb
sub
fprem1
shlb
mov
push
stos
std
popf
mov
dec
popa
adc
lea
xor
popa
out
lcall
rcr
dec
leave
mov
lods
sub
ljmp
inc
mov
sub
adcb
psrlq
lock
mov
jecxz
and
stos
repnz
push
cmc
add
int3
sub
or
mov
les
lods
pop
push
push
sbb
mov
mov
xchg
vpand
jge
lret
out
pop
shlb
cmp
scas
shr
sbb
dec
int3
sub
push
rcl
xor
movsl
dec
adc
call
add
data16
xchg
sbb
cmp
push
lcall
rorl
cmp
hlt
aas
mov
inc
and
cmpsl
adc
push
icebp
and
dec
inc
pop
or
lea
cmp
add
sahf
pop
movsl
jg
pop
adc
sub
inc
and
jo
mov
add
push
xor
stos
mov
and
loop
aas
push
mov
xchg
cmp
sahf
mov
stos
push
cld
xchg
cld
sar
ljmp
dec
mov
adc
jae
cmp
sub
inc
dec
imul
pusha
outsl
and
and
in
adcl
pop
movb
test
add
out
dec
enter
inc
stc
icebp
sub
aad
jno
and
ss
enter
pop
cmpsb
bound
pop
xchg
cwtl
mov
fidivl
ficompl
int3
add
lds
and
fs
mov
test
sbb
sbb
shlb
icebp
pop
mov
call
cli
insb
arpl
xor
in
lret
adcb
inc
aas
inc
xor
popf
dec
out
in
lock
push
std
pop
pop
xchg
inc
adc
cmc
faddp
mov
mov
lret
popa
mov
xlat
and
push
or
inc
cmp
mov
lcall
outsl
or
dec
arpl
lahf
lea
sub
mov
pop
mov
jb
fistl
mov
xor
ret
lods
inc
decl
mov
jmp
negb
mov
sub
and
icebp
lret
clc
loopne
sub
jle
shrb
pusha
movsl
in
les
sub
xchg
and
lret
fisttpll
cld
adc
lods
sub
gs
dec
push
xchg
andb
and
shrb
int3
jle
out
mov
and
scas
sahf
shl
test
clc
out
pop
hlt
jns
xlat
ss
test
rolb
inc
clc
out
xchg
jge
mov
lcall
jge
push
jge
add
gs
aad
adc
or
fiadds
pop
push
aas
mov
mov
inc
jne
and
push
or
stos
inc
push
iret
jbe
cmovle
mov
dec
mov
jg
sub
popa
aas
enter
repnz
popl
dec
fwait
es
xchg
in
cmpsl
push
les
lcall
and
xchg
push
ret
out
xor
sub
bound
imul
scas
mov
mov
pusha
std
pop
sub
mov
jmp
fisttps
mov
icebp
jg
add
adc
imul
adc
sbb
test
test
mov
jecxz
ljmp
xor
inc
sub
xchg
sbb
cmp
dec
lock
vmovlpd
mov
nopl
mov
xor
enter
dec
notl
jns
mov
sbb
cwtl
clc
push
mov
xchg
xor
addb
xlat
adc
jnp
pop
call
cmpsl
in
sbb
mov
scas
adcb
cmpsl
jmp
jns
lret
adc
jge
insb
sub
dec
push
pop
out
mov
push
subl
movsl
push
fs
jg
jns
xacquire
jp
inc
sbbb
rcr
insb
inc
cld
xor
lcall
push
lea
jo
xchg
andl
call
out
popa
sub
sbb
add
fldl
out
ja
sbb
mov
pop
jg
pop
jp
cwtl
push
stos
aaa
lahf
and
xchg
xor
mov
cld
and
jl
adc
ljmp
insl
ret
in
mov
shrb
mov
dec
cmp
lds
sbbl
sub
xor
clc
orb
sbb
int3
imul
jge
xchg
test
jmp
mov
bound
rcrl
addr16
push
orl
popf
mov
and
sub
aaa
sub
inc
sub
dec
jl
pop
fsubrl
cmp
imul
or
xor
sbb
xor
aaa
out
pop
addr16
int3
cmpsb
jl
jg
rol
movsb
sub
pop
inc
in
mov
inc
xor
jge
std
push
push
dec
arpl
xor
loop
fwait
das
add
sub
and
add
cwtl
add
sbb
and
sahf
cli
sbb
add
sbb
in
sti
push
ret
shlb
jns
mov
out
xchg
jg
fldcw
add
rcll
and
push
ret
mov
dec
jns
xchg
mov
xor
aam
inc
in
arpl
xor
stos
mov
out
sub
push
add
pop
jmp
fsub
test
aas
fldl
mov
jmp
xchg
out
not
pop
sub
inc
push
xor
add
bound
mov
sbb
lcall
and
aad
std
push
movsl
sti
js
les
ret
or
mov
push
inc
dec
pop
pop
jb
mov
pop
pusha
mov
dec
mull
nop
into
insb
mov
or
cwtl
xor
enter
sub
adc
pusha
push
mov
dec
repz
mov
popa
jle
out
pop
fldt
lods
pop
adc
jmp
xchg
push
inc
loopne
mov
addb
daa
clc
push
arpl
or
inc
sbb
mov
pop
or
sbbb
and
in
bound
mov
xor
out
and
nop
xchg
scas
ret
mov
sti
jae
or
mov
adc
push
jl
jb
cmp
jle
cmpsl
and
and
dec
push
fwait
cmpsb
cmp
mov
gs
inc
push
popa
out
nop
push
xor
sbb
and
std
push
mov
hlt
jge
test
mov
cwtl
lods
call
sarl
push
mov
push
js
popf
sbb
and
imul
sbb
jns
adcb
lret
cli
psllw
inc
lods
inc
shr
add
add
cld
nop
mov
mov
mov
test
bound
aam
enter
ja
add
stc
call
sti
addb
inc
and
sar
lods
pop
and
aaa
push
aad
pusha
ret
pop
ljmp
or
xchg
cld
and
jbe
jb
or
push
les
lret
sub
movsb
mov
xchg
shrb
lcall
dec
mov
pop
bound
inc
popa
insb
popf
adc
sbb
jg
pop
hlt
add
pop
mov
xor
xor
sbb
ljmp
push
sbb
scas
xchg
jp
repnz
adc
stos
addr16
jno
push
fwait
mov
mov
sub
aas
test
lret
and
mov
mov
mov
lea
mov
mov
mov
sub
add
mov
mov
xor
add
jne
mov
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
add
imul
mov
mov
mov
add
or
mov
mov
mov
add
xor
mov
mov
mov
add
and
mov
mov
mov
lea
mov
mov
mov
sub
add
mov
mov
xor
add
jne
mov
mov
xor
lea
mov
mov
xor
add
jne
jmp
mov
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
add
imul
mov
mov
mov
add
or
mov
mov
mov
add
xor
mov
mov
mov
add
and
mov
mov
mov
lea
mov
mov
mov
sub
add
mov
mov
xor
add
jne
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
add
imul
mov
mov
mov
add
or
mov
mov
mov
add
xor
mov
mov
mov
add
and
mov
mov
mov
lea
mov
mov
mov
sub
add
mov
mov
xor
add
jne
mov
xor
mov
add
mov
pop
pop
pop
leave
ret
add
inc
add
mov
inc
add
mov
inc
add
mov
inc
add
rolb
add
inc
add
rolb
or
inc
add
rolb
adc
inc
add
rolb
sbb
inc
rcr
xor
add
add
add
add
into
add
inc
ret
add
inc
add
nop
inc
add
inc
add
nop
inc
add
inc
add
nop
inc
add
inc
add
nop
inc
add
inc
add
nop
inc
add
mov
add
inc
add
mov
add
inc
add
mov
add
inc
add
mov
add
inc
add
rolb
rolb
rolb
rolb
rolb
rolb
rolb
rolb
add
add
add
add
inc
push
pop
dec
sub
dec
xchg
adc
mov
add
mov
inc
cmp
jb
outsb
je
popa
je
pop
dec
outsl
imul
insb
imul
dec
gs
mov
sub
push
push
mov
xchg
mov
mov
cmp
jne
mov
cmp
jne
mov
mov
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
push
movb
movb
push
movb
movb
xor
pop
mov
lea
movzbl
xor
add
inc
mov
cmp
jb
xor
lea
movzbl
xor
add
inc
mov
cmp
jb
xor
lea
movzbl
xor
add
inc
mov
cmp
jb
lea
mov
mov
mov
mov
mov
cmp
jne
mov
movl
mov
mov
xor
mov
cmp
jne
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
lea
mov
mov
mov
lea
mov
add
mov
lea
mov
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
lea
push
mov
movl
movl
lea
pop
mov
xor
sub
mov
inc
dec
jne
lea
mov
lea
push
mov
mov
xor
add
push
mov
add
push
mov
mov
movl
pushl
mov
call
mov
xor
add
mov
cmp
jne
mov
or
mov
add
mov
mov
mov
mov
mov
mov
mov
lea
mov
add
mov
lea
mov
add
mov
lea
mov
mov
mov
mov
lea
mov
mov
mov
mov
add
mov
mov
add
mov
lea
mov
add
mov
mov
mov
mov
movzwl
xor
add
xor
mov
mov
movzwl
xor
add
xor
mov
xor
mov
mov
mov
lea
lea
movl
mov
call
mov
lea
push
mov
xor
add
push
lea
push
pushl
mov
call
mov
lea
lea
mov
call
mov
mov
pushl
pushl
pushl
pushl
pushl
pushl
pushl
call
test
je
add
pushl
lea
call
mov
mov
mov
xor
add
mov
jne
mov
mov
pushl
mov
call
jmp
mov
mov
add
pop
pop
pop
leave
ret
push
push
push
push
mov
mov
add
push
cld
mov
add
push
mov
lods
xchg
push
mov
or
shl
not
push
mov
or
shl
not
push
add
mov
sub
sub
inc
push
push
push
push
push
push
sub
push
or
mov
shl
lea
mov
shr
rep
push
pop
call
loop
lea
lea
mov
mov
sub
and
mov
mov
call
jne
mov
and
shl
sub
neg
shr
pop
add
pop
lea
shl
cmp
pop
lea
push
push
mov
push
mov
jb
mov
sub
movzbl
mov
shl
mov
and
add
lea
call
mov
shr
and
cmp
mov
jne
cmp
jb
jmp
mov
call
inc
inc
sub
sub
cmp
jb
pop
inc
cmp
dec
mov
jb
inc
cmp
dec
mov
dec
jb
mov
dec
sub
push
jmp
mov
dec
call
jne
pop
pop
pop
pop
pop
pop
pushl
push
push
mov
mov
jmp
mov
dec
call
jne
mov
dec
call
jne
pop
cmp
mov
jb
mov
push
mov
sub
cmp
jb
lods
mov
stos
jmp
mov
call
mov
je
mov
call
mov
je
mov
mov
mov
mov
mov
mov
mov
mov
pop
pop
pop
mov
mov
add
push
push
cmp
mov
jb
add
push
mov
call
jne
mov
mov
shl
sub
push
pop
lea
jmp
mov
add
call
jne
mov
mov
shl
push
pop
push
pop
lea
jmp
mov
add
push
pop
mov
mov
sub
inc
mov
call
mov
sub
jb
add
cmpl
jae
addl
mov
cmp
jb
push
pop
mov
shl
sub
inc
push
pop
lea
mov
call
mov
sub
jb
mov
mov
cmp
jb
mov
andl
shr
orl
dec
cmp
jae
mov
sub
mov
shlb
add
shl
add
mov
jmp
sub
call
shr
shll
cmp
jb
incl
sub
dec
jne
mov
add
mov
shll
push
pop
sub
inc
mov
mov
call
test
je
or
shl
dec
jne
jmp
incl
mov
add
mov
mov
sub
cmp
ja
mov
sub
mov
lods
stos
cmp
jae
dec
jne
mov
movzbl
cmp
jb
call
sub
lea
mov
mov
sub
mov
mov
mov
sub
mov
leave
pop
pop
pop
ret
pop
pop
sub
inc
jmp
cmp
jb
ret
shl
push
mov
cmp
jae
mov
shl
lods
mov
mov
pop
ret
mov
movzbl
shl
add
add
jmp
movzbl
add
mov
lea
sub
lea
cmp
jae
mov
shll
cmp
jae
mov
incl
shl
mov
mov
movzwl
shr
imul
cmp
jae
mov
mov
sub
shr
add
add
lea
ret
shr
sub
sub
sub
add
add
lea
ret
push
mov
sub
push
push
push
movl
movl
mov
mov
mov
mov
xor
mov
add
mov
mov
xor
add
mov
mov
xor
add
mov
mov
xor
add
mov
movl
movl
movl
push
pop
mov
mov
push
pop
mov
mov
movl
movl
mov
xor
add
mov
mov
xor
add
mov
movl
movl
movl
lea
lea
call
decl
jne
decl
jne
decl
jne
movl
mov
xor
mov
add
mov
mov
andl
xor
add
mov
mov
mov
mov
mov
mov
mov
mov
lea
mov
mov
lea
mov
mov
pushl
lea
mov
call
mov
xor
add
cmp
je
mov
mov
mov
mov
mov
mov
add
mov
mov
lea
push
mov
mov
mov
add
push
pushl
push
call
pushl
mov
mov
mov
movl
movl
movw
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
call
push
mov
mov
pushl
call
test
jne
mov
mov
mov
add
mov
mov
mov
call
push
mov
call
test
jne
mov
mov
mov
add
mov
mov
mov
call
push
mov
call
mov
mov
xor
add
cmp
je
mov
xor
mov
sub
add
mov
cmp
ja
movl
pushl
mov
mov
mov
call
push
mov
mov
pushl
call
mov
mov
mov
mov
mov
mov
xor
lea
call
push
mov
mov
pushl
call
mov
mov
mov
mov
xor
lea
call
push
mov
mov
pushl
call
andl
mov
and
add
push
call
test
jne
and
jmp
mov
mov
mov
xor
lea
call
push
mov
mov
pushl
call
mov
incl
cmpl
jb
mov
mov
xor
mov
add
lea
call
push
mov
mov
xor
add
lea
call
push
call
mov
xor
add
cmp
jne
movl
mov
mov
xor
lea
mov
mov
test
je
mov
mov
xor
lea
mov
mov
xor
mov
sub
add
mov
cmp
jbe
mov
mov
mov
cmp
jne
pushl
lea
push
call
mov
jmp
mov
mov
xor
add
xor
mov
mov
xor
add
cmp
je
mov
mov
xor
add
cmp
je
mov
xor
add
jmp
mov
mov
and
or
sub
add
mov
xor
lea
mov
cmp
jb
mov
mov
mov
movl
mov
mov
mov
mov
xor
add
mov
mov
xor
add
mov
movl
movl
mov
mov
xor
add
cmp
je
jmp
mov
mov
sub
mov
xor
add
xor
div
mov
mov
mov
xor
add
cmp
jbe
mov
xor
add
mov
mov
mov
xor
add
imul
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
add
movl
mov
movl
mov
movl
mov
mov
xor
add
jmp
movl
movl
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
xor
add
add
imul
add
mov
mov
mov
cmp
jb
mov
mov
xor
add
imul
mov
xor
add
or
mov
xor
add
mov
xor
add
mov
lea
jmp
mov
mov
xor
lea
mov
mov
xor
mov
sub
add
mov
mov
xor
add
imul
cmp
jbe
mov
mov
mov
mov
mov
xor
add
push
mov
xor
add
push
push
mov
mov
xor
add
push
call
mov
mov
xor
add
cmp
je
mov
jmp
mov
xor
mov
mov
mov
xor
lea
xor
mov
sub
xor
cmp
jne
mov
mov
mov
xor
add
push
mov
xor
add
push
pushl
call
mov
mov
mov
mov
mov
mov
mov
xor
add
movl
movl
jmp
mov
mov
xor
mov
movsbl
xor
sub
movzbl
cmp
jne
mov
xor
lea
xor
cmp
jne
jmp
mov
xor
add
mov
xor
add
cmp
je
mov
mov
movl
movl
movl
movl
mov
mov
mov
xor
add
push
mov
mov
xor
add
push
mov
xor
add
push
mov
xor
add
push
call
mov
mov
mov
mov
xor
add
push
mov
xor
add
push
mov
pushl
xor
add
push
call
mov
xor
add
mov
cmp
je
mov
xor
add
cmp
je
movl
movl
mov
xor
sub
mov
mov
xor
sub
mov
mov
xor
sub
mov
andl
andl
lea
push
pushl
push
lea
push
mov
pushl
mov
add
push
push
call
mov
mov
mov
mov
xor
add
push
mov
xor
add
push
push
call
mov
add
xor
cmp
mov
mov
mov
jne
xor
add
push
mov
xor
add
push
pushl
call
mov
mov
mov
mov
jmp
xor
add
push
mov
xor
add
push
pushl
call
mov
mov
mov
movl
mov
mov
mov
mov
xor
add
mov
mov
xor
add
mov
movl
movl
mov
mov
xor
add
cmp
je
jmp
mov
mov
sub
mov
xor
add
xor
div
mov
mov
mov
xor
add
cmp
jbe
mov
xor
add
mov
mov
mov
xor
add
imul
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
add
movl
mov
movl
mov
movl
mov
mov
xor
add
jmp
movl
movl
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
xor
add
add
imul
add
mov
mov
mov
cmp
jb
mov
mov
xor
add
imul
mov
xor
add
or
mov
xor
add
mov
xor
add
mov
lea
jmp
mov
mov
xor
lea
mov
mov
xor
mov
sub
add
mov
mov
xor
add
imul
cmp
jbe
pushl
mov
pushl
lea
push
mov
mov
pushl
mov
mov
pushl
pushl
pushl
call
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
xor
add
push
mov
xor
add
push
pushl
call
pop
pop
pop
leave
ret
push
mov
push
push
lea
mov
push
mov
mov
mov
mov
cmp
pop
jne
movb
movb
movb
movb
leave
ret
push
mov
push
push
lea
mov
mov
mov
mov
mov
cmp
jne
mov
movb
movb
movb
movb
leave
ret
push
mov
push
push
lea
mov
mov
mov
mov
mov
cmp
jne
movb
mov
movb
movb
leave
ret
push
mov
push
push
lea
mov
push
mov
mov
mov
mov
cmp
pop
jne
movb
movw
movb
leave
ret
push
mov
push
push
lea
mov
mov
mov
mov
mov
cmp
jne
mov
movb
movb
movb
leave
ret
push
mov
call
mov
mov
movb
call
push
mov
movb
call
push
movb
call
movb
mov
jmp
push
mov
push
mov
push
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
movl
mov
movzwl
xor
add
pop
test
je
mov
movl
leave
ret
push
mov
sub
andl
movl
movl
movl
movl
movl
mov
mov
mov
mov
push
push
mov
mov
mov
mov
mov
push
mov
test
jne
pushl
mov
call
mov
mov
add
mov
mov
mov
mov
xor
mov
add
cmp
jne
mov
mov
mov
mov
mov
mov
xor
add
mov
mov
andl
xor
add
mov
lea
push
mov
xor
add
push
mov
add
push
mov
mov
movl
pushl
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
mov
lea
mov
lea
push
mov
xor
add
push
mov
add
push
mov
mov
movl
pushl
mov
call
test
je
andl
cmpl
jbe
mov
mov
sub
mov
incl
mov
mov
inc
cmp
jb
mov
mov
add
mov
mov
add
sub
add
mov
mov
mov
movl
jmp
add
shr
mov
je
lea
mov
mov
mov
mov
movzwl
mov
and
mov
mov
shr
add
xor
cmp
jne
mov
add
mov
cmpl
je
mov
add
mov
mov
mov
mov
addl
decl
jne
mov
add
mov
cmp
jae
add
mov
mov
test
jne
mov
mov
movl
mov
mov
mov
xor
add
mov
lea
mov
lea
push
mov
xor
add
push
mov
add
push
mov
mov
pushl
mov
call
mov
mov
add
mov
pushl
mov
pushl
pushl
call
mov
add
lea
mov
mov
mov
mov
mov
mov
mov
cmp
jb
mov
mov
mov
lea
mov
add
cmp
jae
mov
mov
mov
sub
add
mov
mov
jmp
xor
pop
pop
pop
leave
ret
push
mov
sub
push
mov
mov
cmpl
je
test
je
test
je
mov
test
je
cmpl
je
cmp
je
mov
andl
mov
sub
add
movzwl
mov
movzwl
add
je
lea
push
mov
mov
push
test
je
mov
andl
and
add
movzwl
movzwl
add
je
lea
mov
test
je
mov
andl
and
add
movzwl
movzwl
add
je
lea
mov
mov
mov
test
je
mov
add
movzwl
movzwl
incl
addl
add
cmp
jb
movzwl
movzwl
mov
incl
add
add
mov
cmp
jb
mov
movzwl
movzwl
incl
add
add
mov
cmp
jb
pop
pop
xor
inc
jmp
xor
pop
leave
ret
push
mov
mov
mov
sub
push
xor
push
push
cmp
je
cmp
je
cmp
jne
xor
inc
jmp
mov
add
mov
mov
mov
mov
add
add
mov
cmp
ja
mov
mov
cmp
jbe
cmp
jae
movzwl
jmp
mov
lea
mov
test
je
add
mov
cmp
jbe
mov
mov
add
cmp
jae
mov
jmp
sub
mov
mov
test
je
mov
inc
mov
cmp
jb
jmp
xor
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
movl
mov
mov
mov
mov
mov
mov
push
mov
push
mov
movl
mov
mov
push
mov
xor
xor
add
add
mov
cmp
je
mov
mov
xor
add
cmp
je
mov
mov
xor
add
cmp
je
add
mov
mov
xor
add
mov
mov
cmp
je
mov
mov
imul
xor
add
cmp
jne
mov
mov
imul
xor
add
cmp
je
mov
mov
mov
imul
add
mov
add
xor
mov
mov
mov
xor
add
xor
mov
mov
add
add
cmp
je
add
mov
mov
xor
add
mov
lea
mov
movl
mov
pushl
mov
call
mov
xor
add
mov
cmp
jne
mov
pushl
mov
call
mov
movl
movl
mov
xor
add
cmp
jne
mov
mov
xor
xor
lea
mov
mov
add
imul
push
call
mov
xor
add
cmp
jne
mov
xor
add
cmp
jbe
mov
xor
add
cmp
jne
mov
mov
xor
lea
mov
jmp
movl
movl
mov
xor
add
jmp
mov
xor
add
mov
mov
xor
add
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
mov
mov
mov
xor
add
cmp
je
mov
mov
xor
add
shr
cmp
je
mov
mov
mov
movzwl
push
pushl
call
jmp
mov
add
mov
mov
add
push
pushl
call
mov
mov
mov
xor
add
cmp
mov
jne
mov
xor
lea
mov
jmp
mov
xor
add
imul
mov
mov
mov
xor
lea
mov
mov
xor
add
cmp
jne
mov
mov
mov
sub
xor
jmp
mov
xor
add
cmp
mov
jne
mov
jmp
mov
xor
add
pop
pop
pop
leave
ret
push
mov
sub
movl
movl
mov
mov
push
mov
mov
mov
mov
xor
mov
add
cmp
je
mov
mov
add
push
mov
movl
mov
mov
mov
xor
xor
add
cmp
je
mov
mov
add
mov
mov
sub
mov
xor
add
mov
cmp
je
mov
xor
add
mov
push
movl
jmp
mov
xor
lea
add
shr
cmp
jae
sub
lea
mov
movzwl
and
mov
mov
mov
sub
add
movzwl
shr
xor
mov
mov
mov
mov
xor
lea
mov
mov
mov
xor
add
cmp
jne
mov
mov
xor
add
cmp
jne
mov
mov
add
add
decl
jne
mov
add
mov
mov
mov
xor
cmp
jae
add
mov
mov
xor
add
mov
cmp
jne
pop
mov
pop
jmp
mov
xor
add
pop
leave
ret
push
mov
sub
movl
movl
mov
push
push
mov
xor
push
mov
add
mov
mov
xor
add
mov
mov
mov
mov
xor
mov
addl
mov
mov
xor
mov
addl
mov
mov
xor
mov
addl
mov
mov
xor
mov
addl
mov
mov
mov
test
je
mov
test
je
mov
test
je
mov
mov
xor
mov
add
mov
cmp
jne
mov
xor
add
mov
mov
mov
mov
add
mov
mov
test
je
movl
mov
xor
add
mov
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
cmp
jne
mov
lea
push
mov
xor
add
push
pushl
pushl
call
mov
mov
mov
sub
add
push
call
mov
mov
mov
mov
pushl
pushl
push
call
mov
mov
add
movzwl
lea
mov
mov
movzwl
xor
add
mov
cmp
je
mov
xor
add
mov
mov
movzwl
xor
sub
sub
cmp
ja
mov
add
mov
jmp
mov
mov
lea
mov
mov
test
je
not
and
add
mov
add
push
call
mov
mov
mov
xor
add
cmp
je
push
mov
add
mov
add
push
push
call
mov
mov
mov
add
xor
lea
mov
mov
mov
movzwl
xor
sub
mov
sub
mov
cmp
jbe
mov
mov
cmp
jne
mov
lea
push
mov
xor
add
push
mov
pushl
push
call
test
je
mov
mov
mov
xor
add
je
andl
andl
mov
lea
movl
movl
mov
mov
mov
movl
mov
mov
xor
mov
add
mov
incl
cmpl
mov
jb
mov
mov
mov
mov
mov
lea
mov
mov
mov
movl
mov
mov
movl
movl
movl
movl
movl
mov
movl
mov
movl
mov
movl
mov
movl
movl
xor
mov
xor
sub
mov
inc
cmp
jb
mov
lea
push
call
mov
lea
push
push
call
lea
push
mov
pushl
call
mov
test
je
mov
jmp
mov
mov
cmp
je
mov
mov
cmp
jne
mov
mov
cmp
jne
mov
mov
mov
add
mov
mov
push
push
pushl
call
test
je
pushl
mov
pushl
call
test
je
mov
mov
mov
call
test
je
push
pushl
call
test
je
mov
mov
cmp
jne
mov
lea
push
pushl
mov
pushl
push
call
mov
mov
mov
xor
add
je
mov
mov
movl
mov
pushl
xor
pushl
add
or
add
push
call
movl
jmp
mov
mov
add
call
mov
mov
mov
mov
movl
cmpl
jne
andl
mov
jmp
xor
pop
pop
pop
leave
ret
push
mov
movzwl
movzwl
push
push
xor
lea
test
je
mov
lea
cmp
jb
mov
add
add
cmp
jb
add
inc
cmp
jb
xor
pop
pop
pop
ret
push
mov
sub
movl
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
push
mov
xor
push
mov
mov
add
push
cmp
je
mov
mov
xor
add
cmp
je
mov
xor
add
mov
mov
xor
add
mov
mov
mov
mov
xor
mov
xor
add
add
sub
mov
jmp
mov
mov
xor
add
cmp
je
mov
mov
xor
add
cmp
mov
mov
je
cmp
je
mov
mov
xor
add
cmp
jb
mov
mov
xor
add
cmp
ja
movzwl
movzwl
add
mov
mov
mov
xor
add
cmp
jb
mov
mov
xor
add
cmp
ja
movzwl
movzwl
add
mov
mov
mov
cmp
jne
mov
mov
xor
lea
mov
mov
mov
xor
lea
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
cmp
jne
mov
mov
xor
add
imul
mov
jmp
mov
mov
xor
lea
mov
mov
sub
xor
mov
mov
sub
xor
mov
mov
mov
xor
add
xor
add
imul
mov
movzwl
mov
mov
xor
add
xor
add
imul
mov
movzwl
sub
sub
xor
xor
cmp
jne
mov
mov
xor
add
xor
add
imul
mov
movzwl
mov
sub
xor
cmp
mov
je
mov
pop
xor
pop
add
pop
leave
ret
push
mov
push
mov
push
mov
sub
mov
xor
mov
movl
mov
cmp
je
push
push
movzwl
mov
mov
mov
cmp
jne
mov
lea
xor
mov
xor
mov
mov
sub
mov
xor
mov
cmp
jne
mov
pop
pop
cmp
je
xor
lea
pop
leave
ret
push
mov
push
push
push
movl
mov
call
mov
mov
add
xor
cmp
je
mov
mov
mov
push
mov
mov
sub
mov
xor
mov
cmp
jne
mov
lea
xor
mov
xor
lea
mov
add
xor
cmp
jne
mov
pop
cmp
je
xor
xor
mov
mov
pop
pop
leave
ret
push
mov
push
push
movl
mov
call
mov
mov
sub
mov
xor
mov
cmp
je
push
push
movzwl
mov
mov
mov
cmp
jne
mov
lea
xor
mov
xor
mov
mov
sub
mov
xor
mov
cmp
jne
cmpl
pop
pop
je
xor
inc
jmp
xor
pop
leave
ret
push
mov
push
mov
movzwl
push
lea
mov
push
xor
mov
mov
cmp
je
mov
sub
mov
jmp
mov
mov
add
movzwl
mov
add
xor
mov
cmp
jne
xor
pop
mov
mov
pop
leave
ret
push
mov
sub
movl
movl
mov
xor
add
mov
movl
movl
movl
mov
xor
mov
lea
mov
xor
add
mov
imul
cmp
jae
mov
mov
sub
mov
xor
add
cmp
jbe
mov
add
mov
add
mov
mov
mov
mov
mov
xor
mov
lea
mov
jmp
mov
mov
sub
mov
xor
add
cmp
jbe
mov
add
mov
add
mov
mov
mov
xor
mov
lea
mov
jmp
mov
mov
sub
mov
xor
add
cmp
jbe
mov
add
mov
add
mov
mov
mov
xor
mov
lea
mov
jmp
mov
add
mov
add
mov
mov
mov
inc
mov
jmp
leave
ret
push
mov
sub
movl
push
mov
movl
mov
mov
xor
mov
add
cmp
je
push
push
mov
mov
xor
mov
sub
add
lea
xor
mov
mov
mov
xor
sub
xor
mov
mov
xor
add
cmp
jne
pop
pop
pop
leave
ret
push
mov
sub
movl
movl
mov
mov
mov
push
push
mov
xor
mov
add
cmp
mov
jne
xor
add
jmp
mov
xor
add
cmp
jne
mov
jmp
lea
mov
mov
mov
mov
xor
add
mov
mov
push
call
mov
mov
mov
jmp
mov
sub
mov
mov
mov
call
mov
pushl
mov
call
mov
xor
add
cmp
jne
mov
call
mov
xor
add
push
pushl
mov
call
mov
xor
add
cmp
je
mov
mov
mov
mov
mov
add
cmp
jne
mov
xor
add
pop
pop
pop
leave
ret
mov
mov
jmp
push
mov
mov
sub
cmpl
push
push
push
je
test
je
movzwl
mov
mov
xor
and
mov
xor
add
mov
andl
xor
push
pop
cmp
jae
lea
xor
movzwl
mov
lea
cmp
jne
movzwl
mov
cmp
jne
mov
movzwl
cmpb
je
mov
movzwl
movsbw
mov
sub
xor
cmp
je
push
pop
incl
mov
cmp
jb
jmp
incl
push
pop
mov
movzwl
cmpb
je
inc
cmp
jne
xor
pop
pop
pop
leave
ret
mov
add
xor
xor
cmp
sete
jmp
push
mov
sub
push
mov
mov
cmpl
jne
xor
jmp
pushl
push
pop
call
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
push
mov
mov
call
push
mov
pushl
call
mov
test
je
mov
push
push
mov
add
mov
mov
mov
mov
add
mov
mov
add
add
mov
mov
mov
cmp
ja
mov
xor
mov
cmp
jbe
jmp
mov
mov
movzwl
cmp
jae
cmp
jae
mov
mov
mov
mov
lea
add
add
sub
movl
mov
mov
cmpl
jne
mov
pushl
push
call
mov
test
je
mov
mov
mov
addl
decl
jne
mov
inc
mov
cmp
jb
pop
pop
pop
leave
ret
push
mov
mov
push
pushl
lea
mov
call
mov
mov
mov
xor
cmp
pop
setne
mov
pop
ret
mov
push
jmp
xor
add
mov
add
add
movzwl
mov
cmp
jne
xor
mov
mov
pop
ret
push
mov
mov
shl
add
jmp
xor
sub
mov
inc
inc
mov
cmp
jne
movb
mov
add
pop
ret
push
mov
sub
push
mov
mov
lea
push
mov
mov
mov
mov
push
xor
mov
add
cmp
je
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
mov
movl
mov
mov
mov
movl
mov
mov
xor
mov
sub
add
mov
movl
jmp
mov
mov
xor
xor
lea
mov
xor
div
mov
mov
xor
xor
sub
cmp
jne
mov
add
mov
mov
mov
xor
xor
add
add
cmp
jae
lea
mov
mov
xor
add
lea
mov
mov
cmp
jbe
addl
jmp
addl
mov
xor
inc
incl
add
cmp
jb
mov
mov
test
jne
xor
sub
jmp
mov
xor
mov
sub
add
mov
xor
sub
ror
xor
mov
add
mov
mov
mov
sub
xor
cmp
jne
mov
mov
xor
xor
sub
sub
xor
mov
mov
xor
mov
sub
add
jmp
mov
xor
mov
sub
add
mov
mov
cmp
jne
mov
jmp
mov
xor
add
pop
pop
pop
leave
ret
push
mov
sub
movl
movl
mov
mov
movl
push
push
movl
mov
mov
mov
xor
mov
xor
add
add
imul
jmp
mov
mov
xor
xor
add
add
test
mov
mov
je
xor
xor
add
add
shr
mov
xor
add
xor
jmp
xor
xor
add
add
shr
mov
mov
xor
lea
mov
mov
xor
xor
sub
cmp
jbe
mov
pop
mov
mov
pop
leave
ret
push
mov
sub
movl
movl
movl
push
movl
mov
push
mov
push
xor
mov
add
mov
movl
movl
movl
mov
mov
mov
xor
xor
add
add
imul
jmp
mov
sub
xor
mov
lea
call
mov
mov
mov
mov
mov
mov
xor
lea
mov
mov
mov
xor
xor
sub
mov
cmp
jbe
mov
xor
add
mov
movl
mov
jmp
mov
mov
xor
add
shr
mov
mov
mov
mov
mov
mov
movzbl
xor
mov
mov
mov
xor
add
and
mov
mov
xor
mov
mov
xor
lea
mov
mov
xor
mov
sub
add
mov
mov
mov
xor
add
cmp
jne
mov
mov
xor
add
pop
pop
xor
pop
leave
ret
push
mov
mov
mov
mov
mov
mov
sub
push
push
push
mov
xor
mov
add
cmp
jne
orl
jmp
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
mov
mov
movl
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
mov
xor
add
mov
mov
xor
add
mov
mov
mov
sub
mov
mov
mov
mov
dec
test
mov
je
mov
mov
mov
dec
not
and
mov
mov
add
jmp
mov
mov
mov
xor
add
mov
mov
xor
add
mov
mov
mov
xor
add
mov
mov
movl
movl
movl
mov
mov
xor
add
imul
mov
mov
xor
lea
cmp
jae
mov
xor
add
mov
mov
add
mov
pushl
mov
mov
call
mov
movl
mov
xor
lea
add
push
call
mov
test
je
mov
xor
add
push
pushl
lea
push
call
mov
mov
mov
mov
sub
mov
mov
mov
mov
add
mov
cmp
jb
mov
mov
mov
add
mov
sub
jmp
push
pushl
lea
push
call
mov
mov
movl
movl
movl
lea
mov
lea
mov
lea
mov
lea
mov
mov
xor
add
mov
jmp
cmp
je
mov
xor
mov
add
mov
mov
xor
lea
mov
mov
mov
xor
add
cmp
jne
mov
xor
add
push
push
lea
push
call
mov
mov
xor
mov
mov
xor
movzbl
add
cmp
je
mov
mov
xor
mov
mov
xor
movzbl
add
cmp
je
mov
mov
xor
mov
mov
xor
movzbl
add
cmp
je
mov
mov
xor
mov
mov
xor
movzbl
add
cmp
je
mov
mov
xor
mov
mov
mov
xor
mov
xor
mov
mov
xor
mov
or
mov
mov
xor
mov
cmp
jne
mov
mov
xor
mov
mov
mov
xor
mov
xor
mov
mov
xor
mov
or
mov
mov
xor
mov
cmp
jne
mov
mov
xor
mov
mov
mov
xor
mov
xor
mov
mov
xor
mov
or
mov
mov
xor
mov
cmp
jne
mov
mov
xor
mov
mov
mov
xor
mov
xor
mov
mov
xor
mov
or
mov
mov
xor
mov
cmp
jne
lea
push
call
mov
cmp
je
mov
xor
add
mov
mov
xor
lea
xor
mov
mov
xor
add
cmp
je
mov
mov
xor
add
cmp
jne
mov
mov
xor
lea
jmp
push
pushl
lea
push
call
mov
mov
xor
add
cmp
je
mov
xor
add
push
push
lea
push
call
mov
add
mov
pushl
pushl
mov
add
push
call
mov
mov
xor
add
cmp
je
push
pushl
mov
add
push
call
mov
mov
add
mov
add
mov
mov
mov
xor
add
imul
mov
mov
xor
lea
cmp
jb
mov
mov
mov
jmp
mov
mov
xor
xor
add
add
cmp
jne
mov
imul
mov
jmp
mov
xor
add
cmp
je
subl
jmp
andl
pop
pop
pop
leave
ret
push
mov
and
mov
sub
push
mov
push
push
cmp
jne
push
jmp
mov
cmp
jne
push
jmp
mov
cmp
jne
push
jmp
mov
cmp
jne
push
jmp
mov
mov
cmp
jne
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
mov
add
mov
mov
mov
mov
mov
mov
mov
add
mov
mov
mov
push
push
pushl
push
call
mov
mov
pushl
xor
add
mov
lea
push
push
pushl
pushl
pushl
call
mov
mov
xor
add
cmp
je
mov
mov
xor
add
imul
mov
jmp
mov
cmp
jne
push
jmp
mov
cmp
jne
push
jmp
mov
cmp
jne
push
pushl
pushl
push
pushl
pushl
pushl
call
mov
mov
pop
pop
pop
mov
pop
ret
push
mov
sub
mov
mov
movl
mov
xor
add
mov
mov
push
mov
pushl
lea
pushl
push
pushl
pushl
pushl
call
mov
mov
leave
ret
jg
jge
add
popw
xor
fimull
addl
cld
add
add
js
scas
adc
je
in
or
jbe,pt
std
pop
mulb
mov
ljmp
xor
lds
pop
mov
mov
das
xor
xchg
inc
pop
xor
stos
and
jb
movl
rolb
mov
mov
add
aam
inc
popa
orl
cmpsb
jg
clc
jae
jmp
jne
sub
mov
mov
push
subb
into
sub
test
dec
push
gs
stc
pop
outsl
not
pop
flds
push
lock
dec
dec
push
and
into
push
inc
pusha
int
sub
movsl
ss
ret
test
push
add
mov
add
push
push
stos
or
pusha
gs
xlat
push
xor
jle
push
cmp
out
add
sbb
arpl
dec
cmp
sbbb
mov
out
imul
adc
stos
jge
mov
lahf
or
sub
sbb
pop
pop
pop
xor
xchg
add
sub
mov
test
lods
fmuls
int
bound
xor
dec
idivb
push
push
ds
rorb
psubd
pop
cmpsl
movl
or
gs
xchg
aaa
or
push
popf
rcl
pop
mov
lea
popf
cmp
ljmp
sarl
adc
and
xchg
leave
mov
dec
lock
jle
push
pushf
int3
dec
or
lock
jmp
fsubl
cmc
sarl
imul
mov
push
in
je
les
adc
push
divl
add
loopne
fwait
ja
js
jae
pop
mov
dec
leave
ljmp
loope
ja
idiv
jg
mulb
sti
xlat
add
add
cld
add
add
mov
jno
mul
jne
sbb
sbb
pushf
jne
aas
mov
test
insb
ljmp
jl
fldt
dec
out
mov
je
pop
inc
aaa
roll
and
jmp
ficomps
daa
fildll
inc
ret
xchg
push
out
std
jmp
add
dec
pop
push
mov
sbb
xor
and
outsl
and
insb
aam
adcl
bound
mov
out
shrl
sub
popf
sbbb
cmp
daa
call
inc
daa
loope
sbb
sub
dec
dec
push
push
mov
xchg
cmpsb
inc
pop
mov
stc
shll
mov
adc
int3
ret
daa
xchg
aad
hlt
pop
cmc
les
inc
ss
lock
pop
fcmove
mov
lock
lcall
stos
stos
or
push
xor
lahf
mov
jns
cmp
out
pop
sbb
fstl
or
rclb
jge
mov
leave
push
insl
xchg
fcomip
cld
repnz
xchg
cli
les
les
sar
and
iret
in
cmpsb
cli
push
aas
adc
dec
std
or
out
fimull
test
popf
imul
pop
js
jne
pop
mov
mov
push
pop
cli
mov
fsubs
scas
ds
mov
insl
data16
sti
icebp
mov
dec
sub
sbb
add
shlb
push
loopne
fisttps
pop
ds
loope
frstor
out
pusha
xchg
ljmp
cmpsl
in
jno
or
test
icebp
sub
inc
lahf
xchg
push
fxch
jae
mov
or
jno
push
pop
and
dec
mov
xchg
pop
sub
jl
sbb
pop
jecxz
cltd
mov
xor
add
add
sbb
pop
std
jg
popf
add
add
orb
fwait
lcall
mov
xor
das
mov
mov
in
xchg
in
inc
sub
int
sbb
movd
ret
pop
sbb
xchg
scas
scas
push
jae
outsb
in
scas
jecxz
mov
push
or
mov
cld
inc
push
mov
cmp
stc
adc
test
rcl
sub
inc
mov
stc
mov
push
add
xchg
xor
push
xor
jo
idivl
out
adc
lcall
cmp
out
inc
lcall
int3
frstor
sbb
dec
outsl
popa
mov
xchg
xchg
daa
mov
xor
jbe,pt
mov
in
lea
int3
inc
lock
incb
hlt
sbb
or
mov
cmp
mov
mov
mov
lock
mov
mov
orb
xchg
mov
push
xchg
and
inc
sub
and
mov
enter
add
push
hlt
lret
push
fidivl
aas
mov
cli
push
scas
shrl
stos
out
xchg
lods
push
enter
sbb
mov
push
jo
cmpsb
lods
sub
in
pop
mov
mov
xchg
xchg
push
adc
out
dec
pop
mov
push
push
lahf
movsl
add
mov
xor
pusha
xor
xchg
cmpl
stos
repnz
scas
lcall
sarb
rolb
arpl
inc
dec
dec
or
or
mov
ret
mov
jmp
out
inc
and
iret
add
sub
pushf
cmpb
mov
xchg
jg
in
cld
pop
dec
pop
jge
test
cmp
test
sbb
shr
leave
into
xor
push
mov
pop
neg
mov
aam
into
leave
fsubl
enter
push
add
mov
int
mov
mov
add
add
add
xchg
in
mov
nop
not
data16
pusha
clc
inc
inc
sbb
js
jle
insl
mov
cmp
insl
push
mov
dec
mov
pop
pop
cmp
int
leave
gs
jo
mov
xor
leave
or
adc
idivb
jno
xorl
cli
mov
cmp
lods
pop
inc
lret
mov
filds
enter
xor
and
dec
push
cmpsb
icebp
and
push
pop
fstpt
lea
lret
cltd
divb
push
cmp
mov
or
adc
repz
xchg
into
scas
popa
mov
lret
rol
cwtl
and
data16
pop
ret
shll
mov
xchg
test
imul
mov
mov
arpl
out
xor
push
xchg
xchg
sbb
adc
sub
cmp
aas
mov
inc
je
scas
enter
mov
jp
lock
xchg
xchg
push
fcompl
je
lcall
or
jge
add
push
sti
mov
push
inc
popa
clc
sub
insl
xchg
or
in
sub
mov
cmp
jno
push
mov
pop
leave
pop
rorb
xchg
dec
push
out
arpl
or
and
mov
sbb
mov
leave
lods
outsb
ret
or
mov
mov
out
jne
in
mov
inc
test
mov
es
aam
xchg
inc
mov
or
fisttpl
in
cld
xor
xchg
or
lds
lea
and
inc
int
push
dec
out
shl
mov
jns
js
in
mov
cmp
addr16
xor
ljmp
and
rorb
js
hlt
mov
std
jl
xor
jg
fdivl
clc
mov
add
add
add
cwtl
rolb
sti
mov
sub
and
pusha
fs
xor
mov
add
leave
shrb
cmpsl
or
cmp
cmp
ja
nop
mov
test
lret
fstpt
sbb
aaa
xor
cpuid
hlt
scas
mov
repnz
lods
xor
sbb
dec
jg
push
outsb
ss
inc
cmc
call
mov
fadd
xor
or
outsb
imul
push
psrlq
mov
mov
bound
inc
push
sbb
lret
cs
xchg
inc
into
push
cmpl
cli
dec
jb
fildll
imul
int
inc
cmp
test
imul
dec
pop
jecxz
andl
push
jecxz
push
pusha
fcmovne
xchg
sbb
scas
loop
sti
sbb
lahf
andl
and
pop
adc
mov
in
iret
push
pop
rcll
sbb
push
out
ss
into
test
popf
lds
aaa
jg
push
iret
pop
mul
mov
popf
dec
std
xchg
add
mov
mov
push
mov
and
mov
adc
add
mov
insl
adc
lahf
in
xchg
subl
in
imul
cmp
xlat
stos
inc
pop
and
imul
cwtl
add
outsl
ret
test
ss
cmpsb
mov
mov
ret
dec
or
out
dec
into
lods
jne
cmc
cmp
sbb
rorb
lahf
fidivrs
push
jg
out
cmpsb
xlat
jae
jle
mov
mov
lret
push
xlat
push
aad
addr16
xchg
ja
dec
adc
loopne
pop
mov
inc
call
mov
jns
leave
ficompl
mov
movsl
mov
pop
mov
mov
cld
hlt
mov
add
add
add
inc
inc
insb
in
mov
ret
push
xor
sub
mov
gs
or
rclb
jb
jmp
mov
out
xlat
mov
adc
cmp
xchg
loope
push
push
imul
icebp
out
fs
dec
xor
mov
lods
push
fistpl
and
jecxz
jae
testb
das
sbbl
mov
dec
mov
rsqrtps
test
xorb
aas
cmpl
in
sbb
jns
mov
outsl
push
loop
sub
sti
pop
lods
fnsave
mov
fistps
test
sub
and
lods
mov
sbb
jae
xor
sbb
push
addr16
cmp
cmp
mov
sbb
cmpsl
data16
cmc
cmp
push
sti
divb
mov
sbb
ret
ud0
dec
xor
lock
dec
cld
ret
dec
clc
jnp
std
inc
push
les
ja
dec
scas
fs
imul
mov
shrl
loope
push
dec
sahf
loop
cmp
std
in
test
stos
les
push
test
sti
lcall
fisttps
adc
or
out
and
inc
ljmp
or
mov
push
fdivs
or
arpl
out
ljmp
or
hlt
mov
pop
add
es
jecxz
ljmp
movsb
arpl
xor
out
mov
loop
repz
and
fstpt
mov
xchg
ljmp
inc
cmp
lods
popf
es
pushf
mov
inc
icebp
sbb
hlt
rcll
dec
cmp
test
mov
xchg
cmp
xchg
loop
ljmp
or
inc
rclb
cmpsl
sbb
jg
pop
fstps
lock
add
add
add
jns
test
dec
sbbb
scas
in
lock
sahf
ss
imul
mov
and
leave
mov
cmp
sti
ja
dec
inc
cmp
mov
scas
add
data16
es
decl
cmp
add
inc
insb
dec
hlt
add
adc
sub
jp,pt
enter
inc
sbb
inc
jae
mov
mov
stc
pop
xor
loope
jl
push
push
lock
dec
call
scas
mov
pop
jp
pop
xchg
sbbl
and
negb
jg
jmp
inc
xor
adc
add
push
loope
jl
sub
cmp
ja
add
enter
pop
divb
jle
add
cmp
sbb
sahf
xchg
inc
cmp
push
xchg
imul
jne
sub
mov
mov
xor
xor
insl
test
pop
loopne
cmc
popf
orl
jp
push
cltd
lods
and
sahf
adc
push
jg
jl
mov
pop
jbe
mov
in
movsb
rclb
aad
jne
cwtl
imul
ds
fsts
outsb
pop
je
and
push
nop
mov
or
jbe
cmc
mov
or
fwait
inc
cld
ss
adc
adc
dec
notb
dec
sti
pop
imul
sub
mov
ds
xor
jmp
and
cmp
jb
cld
xor
pop
cld
lods
aad
jecxz
lret
adc
pop
imul
std
mov
shll
cwtl
loop
subl
lds
mov
cmp
into
pop
xorl
adc
xchg
push
fdivrs
pop
shrb
es
and
ljmp
shlb
xor
orl
roll
add
add
cmc
fistpll
movsb
fidivl
leave
jmp
nop
add
cld
add
add
add
shll
jae
in
gs
nop
sbb
adc
jnp
movsl
cwtl
or
test
dec
push
pop
sbb
mov
mov
fisttpll
out
push
aaa
sbb
dec
mulb
push
dec
inc
add
mov
sub
pop
cmp
cmp
in
fldenv
pop
and
aam
cmpsb
leave
int3
sbb
dec
adcl
xchg
mov
add
jg
and
sbb
andl
xchg
and
pop
and
push
mov
jnp
cmp
int
mov
dec
leave
jecxz
jle
mov
loopne
mov
imull
dec
lock
loopne
or
in
insl
inc
or
cmp
mov
sbb
gs
xor
mov
push
push
cld
mov
add
pop
shlb
xlat
xor
lcall
mov
sbb
mul
pop
cmc
mov
addr16
test
pushf
and
cmp
lcall
push
jecxz
push
sub
cmp
repz
in
stos
scas
mov
pushf
aam
test
mov
xchg
call
xchg
or
sub
jmp
sbbl
push
mov
xor
pusha
scas
inc
ret
cli
aad
mov
xchg
mov
stc
jmp
rsqrtps
imul
rclb
pop
lds
ds
add
sbb
scas
and
jmp
ljmp
mov
iret
add
iret
pop
lcall
jle
lret
add
inc
sahf
test
jne
clc
adc
dec
fdivr
jo
sub
stos
ror
clc
lcall
fsubrs
fs
ljmp
pop
cmp
add
add
push
movsb
lea
sub
testb
movsb
call
add
add
cmp
into
lods
sbb
and
and
dec
enter
mov
sub
cwtl
mov
sub
mov
into
in
lods
ss
pop
sbb
lea
into
jo
stos
dec
jle
in
in
lahf
clc
jge
mov
or
lods
scas
xchg
add
in
push
shr
adc
ret
jge
imul
js
sar
popl
xchg
aad
mov
cmp
clc
stc
xchg
mov
test
sbb
fidivrs
mov
sub
jo
add
iret
push
gs
or
xchg
loop
add
shr
add
mov
leave
dec
stos
mov
fidivrs
xchg
cld
bound
xchg
push
dec
pop
pop
jle
cld
mov
in
xlat
pop
cli
jmp
ds
pop
loop
push
into
mov
cld
cmp
adc
pusha
cwtl
xchg
repnz
xlat
pop
or
inc
sub
test
decl
sub
sub
in
hlt
adc
add
sbb
and
js
mov
and
xchg
notb
lret
and
cs
jmp
dec
xchg
mov
mov
popw
ds
sub
xlat
dec
popf
testb
dec
insb
test
mov
out
cmpsl
sub
xchg
cmpsb
pop
jmp
mov
pop
pop
loop
xchg
inc
cmp
xor
jne
ret
inc
jns
shll
dec
imul
cld
pop
sub
or
cltd
mov
adc
sub
push
cmpl
test
int3
mov
inc
js
adc
scas
lret
pop
inc
xchg
cmp
aad
rclb
aas
jne
and
and
repz
shr
xor
xor
test
add
mov
cmp
popl
mov
push
js
in
add
cld
add
add
in
sub
insl
add
js
adc
addb
mov
icebp
or
pop
ficoml
pop
fwait
jle
cwtl
test
pop
daa
mov
and
stos
and
lahf
test
mov
jle
stos
inc
and
imul
cs
addr16
adc
pop
xor
in
push
lcall
cltd
subl
dec
imul
inc
xchg
repz
push
mov
mov
scas
mov
dec
cmp
lahf
ret
or
inc
pop
pop
mov
lahf
inc
frndint
hlt
pop
fistpl
fscale
in
flds
daa
decl
xorl
lcall
xorb
nop
push
out
jbe
mulb
lea
rcrl
jnp
cwtl
adc
rcrl
out
bound
sahf
out
add
mov
add
jecxz
mov
add
shlb
ficoml
test
lods
or
sarb
xchg
xchg
push
cltd
inc
decb
pop
addr16
and
inc
movsb
and
fbld
jnp
lods
hlt
lcall
xor
mov
repnz
mov
add
sub
inc
or
jo
push
mov
in
je
mov
add
mov
fstpl
adc
shl
iret
cmpsl
and
test
iret
icebp
mov
addr16
les
push
and
pop
stc
movsb
mov
data16
add
rcrl
mov
bound
movsb
imulb
loopne
leave
dec
paddb
sar
repz
add
xchg
mov
mov
push
movsl
mov
popf
cmp
call
js
stos
in
xor
jmp
cmp
call
sub
nop
mov
ja
std
mov
xor
test
xchg
std
jg
mov
lea
cld
add
add
mov
mov
push
dec
sahf
cmp
cmpsb
inc
lret
dec
inc
sahf
mov
adc
cmpsl
rorl
jb
loop
xchg
jmp
adc
inc
and
lock
xchg
pop
and
iret
or
testb
sbb
jp
dec
jbe
mov
pop
scas
add
leave
pop
cmpsl
pop
nop
adc
in
inc
inc
sub
jmp
jbe
out
fmul
das
jne
stos
loopne
fisubs
test
add
out
imul
xchg
adc
jb
repnz
push
sbb
xor
mov
sub
pusha
subb
push
xchg
loop
int
pop
fs
pop
repnz
sbb
or
ror
or
movsl
fmuls
sar
fwait
loopne
test
pop
push
cmc
jo
cmpsb
and
mov
enter
sbb
cmp
fucomi
sti
aam
movsb
jle
inc
pusha
imul
mov
push
pop
sub
cli
out
sub
stc
sbb
imul
mov
out
cmpsl
adc
dec
leave
cmp
jge
outsb
add
pop
pop
stos
cld
cs
fldt
stos
ror
add
imul
insl
addl
pushf
mov
andb
push
add
scas
xor
jo
xlat
das
mov
mov
gs
mov
dec
jb
mov
cwtl
movsb
mov
pop
cmp
push
mov
pop
mov
fisttpll
adc
push
test
outsb
jne
push
jmp
xorl
mov
insl
lods
sti
loope
lret
pop
jae
sbb
fnstenv
mov
xchg
push
inc
cmp
xor
es
std
ret
xchg
out
in
cmp
push
push
pop
nop
aas
pop
loopne
xchg
sub
and
fcmovne
stos
push
andl
mov
mov
idiv
iret
rorl
test
add
add
add
push
pushf
mov
dec
jne
out
int
rclb
cltd
imul
add
je
xor
out
stc
pop
add
bound
ret
pop
push
mov
into
ror
mov
push
dec
push
lea
jmp
sbb
lea
jns
out
pop
xor
aam
ds
nop
loop
mov
jns
ds
dec
or
insb
cmpl
ret
js
daa
je
lcall
ja
movsl
in
stos
jg
ja
je
or
push
or
loope
sbb
cld
or
sti
loopne
es
sbb
xchg
add
pop
ret
mov
inc
sti
dec
jns
daa
insl
xor
inc
xor
add
jns
jmp
and
jb
cld
xchg
cmp
loope
test
cs
mov
outsl
xchg
jne
int
cmp
pop
xchg
sbb
add
mov
and
xlat
xor
popa
arpl
cmp
fdivl
fimull
sbb
subb
fmull
jne
xor
mov
pop
jno,pn
rorb
and
and
dec
inc
mov
dec
inc
iret
aas
sbb
or
imul
inc
jmp
scas
loopne
mov
xchg
pop
ja
xchg
in
push
mov
clc
lock
inc
lods
xchg
pop
cmp
sbb
cmp
xchg
cli
pop
inc
stc
and
ss
jecxz
jns
into
xor
out
xlat
pop
jo
mov
or
pop
rcrl
jecxz
loope
xor
sub
lods
mov
dec
jns
shlb
jo
mov
test
push
out
cmpsl
xor
fbld
into
and
xor
test
cmp
mov
out
xor
jbe
cmp
add
add
ret
mov
ja
or
lcall
cwtl
mov
mov
pop
daa
daa
roll
and
push
pusha
cs
mov
xor
add
icebp
xchg
cmp
aaa
push
inc
xchg
lods
lods
or
adc
xchg
ds
lret
pop
in
mov
test
mov
aad
cmpsb
jmp
sub
push
hlt
jp
hlt
pusha
and
lret
cmp
outsb
fstps
hlt
lahf
sub
inc
sub
test
in
cmc
jge
fdivrp
shl
xchg
rcl
call
mov
nop
cli
mov
in
sbb
int3
dec
cmc
xchg
mov
mov
dec
push
jl
mov
sub
movsb
cmp
andb
std
add
adc
jmp
xlat
jno
xchg
rcr
das
ret
mov
pusha
jnp
movsb
repz
leave
pop
xchg
das
jbe
lcall
icebp
sub
mov
sbb
repnz
gs
outsb
fucomi
cmp
mov
and
rclb
scas
add
lods
gs
adc
lahf
fs
pop
vunpckhps
enter
outsl
sarl
xchg
xchg
sub
sbb
cmpsb
lret
sbb
mov
cmc
arpl
push
push
push
adc
imulb
and
jns
stos
add
sbb
push
push
lret
and
imul
ficoms
sahf
jecxz
xor
mov
mov
jle
jnp
insb
mov
setg
gs
mov
in
mov
out
mov
jle
jle
popf
or
pop
adc
adc
xor
mov
mov
test
popf
xchg
test
dec
ljmp
and
lea
clc
aam
xor
xchg
lahf
push
clc
cld
imul
cmpsb
mov
ss
ja
add
lret
nop
or
lahf
sarb
scas
xchg
cmp
push
push
jle
xlat
lret
push
testl
pushf
add
cld
add
add
test
popa
out
test
dec
push
test
jae
push
cmp
outsb
std
xor
stos
and
pop
fisttps
lock
lea
sub
iret
ret
pop
push
sub
dec
mov
fmull
in
fdivrp
inc
pop
lcall
fbstp
pop
lret
lds
into
into
out
cmpl
test
push
ss
fwait
out
fiadds
push
clc
pop
xchg
flds
cmp
push
or
jecxz
mov
adc
push
mov
lods
mov
dec
fsubr
sahf
sbb
and
stos
dec
or
mov
jne
lods
adc
mov
cwtl
mov
xchg
pop
shlb
jg
jns
cltd
stos
xchg
cmpsl
and
stc
mov
mov
pop
sub
add
push
xor
cmpsl
pop
and
imul
lret
ud0
sub
xor
sbb
mov
xchg
int
lea
rolb
xor
pop
pop
std
jo
xor
push
push
mov
or
inc
imul
int3
cmpsb
mov
push
mov
in
or
les
push
int3
sub
in
jecxz
lock
nop
dec
pop
sub
xchg
xor
aas
pop
mov
fldl
jnp
dec
fld
jns
loope
xor
mov
shlb
lds
push
xchg
sub
ror
fs
mov
push
adc
or
pop
aam
sbbb
and
xlat
push
mov
aad
leave
test
rcrl
push
je
test
mov
or
mov
clc
xor
or
imul
jp
push
inc
jl
cmp
sbb
pop
jmp
inc
sbb
ret
fwait
xchg
pop
daa
add
adc
or
pop
out
repz
fucomp
repz
in
rcrb
add
sbb
inc
and
addr16
imul
xchg
mov
xchg
lods
imul
lahf
push
into
adc
cld
mov
and
punpckldq
and
cs
pop
mov
or
mov
outsb
xchg
add
and
je
and
xor
leave
loope
and
jge
pop
or
jge
pop
jmp
subl
xchg
fxch
inc
push
ss
cmp
popa
inc
dec
ljmp
out
mov
push
inc
sbbl
cmp
ljmp
dec
xlat
mov
jnp
das
in
cmp
inc
push
sbb
loopne
aas
data16
push
pusha
incl
push
add
test
or
rcl
mov
cmovns
outsl
push
loope
cwtl
out
mov
push
out
aaa
xadd
cmpl
repnz
arpl
mov
int
out
into
outsb
scas
jne
sbb
push
xchg
stos
mulps
cmp
or
popa
cwtl
mov
icebp
mov
and
ja
in
jecxz
es
test
cmc
outsl
mov
mov
cmpsl
add
xchg
ja
dec
push
xor
mov
mov
and
push
sub
pushl
sbb
cmp
inc
gs
pushf
arpl
and
scas
mov
inc
in
scas
and
ss
cs
and
dec
xchg
cmc
jb
int3
mov
jmp
add
fistl
addr16
jns
pushf
mov
mov
call
shlb
xchg
or
pop
adc
cwtl
jmp
std
cmp
sub
inc
stos
mov
stc
cs
dec
fs
cmp
inc
mov
or
ss
jg
mov
andl
mov
mov
jmp
mov
jae
shrb
leave
xchg
insl
mov
out
nop
sbb
mov
add
cld
add
add
sub
les
rcl
fdivrs
fwait
push
jns
mov
mov
jb
aad
or
mov
jns
mov
lret
push
sbb
aad
rcl
shrl
iret
push
xor
pop
xor
cmp
scas
cmp
subb
out
in
cmp
movsl
fcomp
jecxz
icebp
cmp
mov
jns
ss
orb
dec
mov
shrb
sbb
aad
loop
sbbl
decb
movsb
out
jge
mov
ret
jne
mov
cmp
test
sub
mov
scas
pop
xor
into
dec
jnp
insb
and
add
dec
cltd
ficompl
mov
or
aaa
lahf
imul
aam
stos
cmc
mov
ss
and
add
dec
test
nop
add
mov
popf
aam
imull
xchg
fcoml
push
dec
mull
sub
add
and
add
push
or
jle
push
sti
cltd
sbb
and
sbb
xchg
mov
sub
ret
and
gs
dec
lahf
sbb
add
and
lock
dec
lods
fstps
xchg
cs
out
mov
jg
push
aam
sti
hlt
insb
inc
and
sub
mov
ret
aad
mov
in
sub
push
or
xchg
add
not
cmp
mov
hlt
pop
ds
hlt
jo
jo
pop
mov
stc
push
inc
mov
inc
or
sub
dec
sub
pop
sbb
mov
xchg
hlt
fnsave
mov
and
xor
push
into
stos
ja
in
adc
pop
adc
pop
xor
mov
xor
imul
adc
sbb
mov
lods
cltd
cmp
adc
aaa
inc
lods
add
lea
dec
out
ja
idiv
pop
out
cmp
mov
add
add
add
jp
and
fisttps
cmpsb
push
sub
xor
mov
roll
mov
int3
inc
mov
add
rcrb
push
lret
mov
lock
out
adc
dec
mov
mov
sarb
leave
insb
lds
clc
inc
ljmp
or
sbb
cmp
cmp
xlat
dec
fmulp
mov
arpl
iret
jmp
sbb
sbb
fstpt
call
repz
insl
cli
andb
jne
mov
aaa
cmp
or
movsb
cmp
lea
cltd
mov
lds
push
rcrb
sub
pop
cmp
sahf
andb
xor
in
mov
cmpsl
inc
mov
in
rorl
imul
test
mov
ret
adcl
cmp
cltd
fxch
push
xor
mov
out
or
ret
gs
loopne
sbb
jne
cmc
xchg
add
or
jmp
dec
repnz
sarl
outsl
and
into
andb
xor
inc
cs
sahf
inc
pusha
fcoms
aam
fsubrs
cmpsl
aad
dec
pop
push
mov
mov
inc
into
push
pusha
out
mov
mov
lock
stos
mov
add
inc
icebp
xor
pop
adc
jnp
jo
and
xchg
in
or
cmpsl
aam
jmp
mov
cmc
mov
nop
in
xchg
loope
shlb
pop
inc
dec
xor
pop
mov
scas
add
sub
pop
xor
adcb
mov
sbb
lea
je
sbb
cmpsl
cmp
mov
call
cmp
or
add
and
jge
movsl
outsl
mov
pop
jecxz
sti
mov
inc
xchg
sbb
add
add
add
cmpl
or
cmp
push
cmp
shlb
mov
fnstsw
arpl
push
sbbl
fsubrs
popf
mul
add
mov
popf
in
out
push
adc
or
push
movsb
and
add
mov
in
cmp
push
cltd
inc
mov
sub
mov
in
addl
dec
xchg
mov
lock
mov
add
adc
lret
in
sbb
gs
in
push
inc
popf
inc
adc
adcl
es
in
mov
popf
push
pop
dec
jp
jge
cli
lret
push
loop
fiadds
ficompl
add
xchg
lds
jne
sub
aaa
iret
sub
scas
fnstenv
and
or
test
mov
mov
mov
jns
mov
sub
xchg
inc
xchg
movsl
mov
iret
mov
push
insb
mov
cs
xchg
pusha
pop
loop
mov
iret
scas
sub
or
lock
xlat
mov
pop
push
fbstp
add
rcll
or
cld
add
pushf
dec
es
and
ret
int
add
jne
cltd
jo
fdivs
or
sub
sbb
fadd
cmpsb
jbe
mov
cmc
dec
testb
shl
pop
mov
push
add
mov
ljmp
ret
in
vpaddd
mov
daa
aas
aad
stc
push
adc
stos
pop
subb
pushf
inc
mov
out
aam
addr16
in
rcr
out
cmp
pop
cmovp
mov
sub
out
pop
cmp
clc
mov
jo
add
add
sahf
xor
sub
cmpsb
add
cld
add
add
inc
lret
iret
in
inc
push
imul
add
mov
sbb
lods
pop
pusha
pushf
sbb
and
adc
push
mov
xchg
xchg
fmulp
cmp
adc
ret
mov
xor
and
jno
ja
cmpsb
cli
por
out
sbb
int
and
insb
daa
sti
jecxz
scas
shr
das
loopne
inc
sub
dec
sbbl
or
fisubrl
xchg
jmp
inc
push
sbb
inc
inc
xor
xchg
mov
or
stos
mov
ret
rcr
push
inc
fsubrl
xchg
add
cmpsb
ljmp
and
jo
cmp
mov
sahf
xlat
push
xchg
pushf
movsb
pop
cmc
sub
fninit
test
dec
or
mov
pop
leave
icebp
lret
mov
dec
mov
stos
mov
xchg
loope
pop
mov
lods
push
scas
scas
ss
out
sbb
and
or
bound
mov
jne
mov
hlt
addl
insl
out
mov
pop
mov
aam
cmp
popf
cmp
in
or
sbbb
mov
mov
aas
push
adc
mov
add
js
in
inc
andb
push
dec
test
cmp
in
pusha
jno
inc
lahf
push
xchg
add
cmpsb
pushf
pop
mov
push
adc
pushf
push
jge
sbb
dec
mov
cmc
jb
mov
cltd
mov
js
addr16
movsl
adc
mov
mov
shlb
pop
loope
adc
ss
aad
enter
inc
pop
js
es
cmp
mov
jbe
push
push
dec
scas
add
mov
adc
pop
out
leave
mov
xlat
and
stc
std
in
mov
mov
std
cmp
jne
mov
add
add
fdivp
xchg
cmpsl
adc
test
push
rolb
pop
lret
popa
fiaddl
push
xor
jecxz
fldcw
adc
int3
xorb
and
cmp
in
movsl
mov
mul
mov
mov
int3
push
aam
out
xchg
cmpsb
rorl
lret
outsb
pop
mov
xorl
mov
fwait
daa
or
mov
push
popf
mov
mov
or
loopne
jo
in
push
fwait
xchg
lock
std
lahf
cmp
popf
ret
daa
mov
in
int
xchg
ret
pop
sbb
dec
and
rclb
vcvttss2si
jo
inc
lock
xor
inc
push
pop
jmp
das
daa
call
dec
inc
xchg
sti
and
int3
sbb
or
adc
loope
mov
bound
pop
cmpsb
sbb
lahf
mov
aad
jb
mov
test
int
loop
jl
repz
mov
dec
mov
jns
fistps
movsl
mov
test
inc
sub
hlt
or
mov
jb
cmp
push
mov
cmp
bound
pop
icebp
inc
cmc
or
push
dec
in
mov
fstpt
shl
jmp
lds
mov
lcall
mov
cmp
or
mov
sbb
adc
add
mov
test
aam
push
lret
daa
pop
clc
jno
dec
lods
sub
cwtl
sub
mov
jnp
xor
notl
aaa
jbe
std
jnp
les
push
nop
daa
leave
or
stos
mov
aam
fdivs
movsl
int3
mov
shrl
jg
jno
sub
adc
add
loop
out
sbb
dec
std
mov
inc
roll
sbb
xor
out
xchg
sahf
pusha
jmp
add
dec
pusha
xor
push
add
insl
mov
repnz
testb
inc
movsb
inc
add
add
add
add
in
les
dec
mov
rorb
scas
pop
lret
sti
pop
in
lds
pop
mov
jns
cmp
nop
xor
fstps
int3
pop
push
jle
cmp
jno
mov
js
arpl
lcall
jno
mov
hlt
mov
dec
cmpsl
xchg
and
mov
cli
aas
adc
push
fistpll
sub
push
test
addr16
rol
into
dec
fwait
arpl
shrl
cmp
notl
test
scas
mov
in
into
mov
pop
sbb
xchg
adc
ret
call
stos
testb
add
sbb
lcall
rcl
scas
xchg
cmp
adc
cwtl
aaa
inc
xchg
sbb
hlt
xchg
mov
and
loope,pn
push
dec
insb
fistpl
std
mov
cmpb
cltd
fyl2x
fdiv
sbb
inc
testl
enter
jmp
jmp
add
adc
jno
sbb
add
lahf
test
ljmp
idiv
and
xchg
dec
fidivrl
insb
xor
mov
es
xchg
cltd
icebp
fwait
add
dec
mov
leave
loop
mov
xchg
push
inc
and
cmpb
jmp
mov
pop
in
and
xchg
jnp
xorb
into
jl
loop
mov
xor
inc
clc
data16
add
sub
or
ficomps
add
jmp
in
decb
test
sbb
dec
mov
out
and
mov
push
push
jmp
pushf
pop
faddp
mov
adc
xchg
repnz
test
shrl
mov
cmp
ret
shrl
stos
jno
or
ja
inc
sahf
daa
out
pushf
call
jns
jo
mov
mov
inc
add
dec
ss
inc
leave
jo
test
call
add
add
popa
data16
gs
mov
lods
sub
mov
cld
add
add
pop
jp
push
adc
mov
mov
adc
sahf
push
aas
adc
push
mov
jne
stos
and
cmp
fidivs
lcallw
lea
enter
mov
and
xchg
gs
xchg
jle
shll
mov
jnp
outsb
outsb
outsb
repz
xor
jmp
hlt
pushf
lods
push
cmc
adc
cmp
sahf
pop
mov
cmp
mov
jae
insb
cmp
fiadds
cmp
test
dec
movsb
jp
cs
or
fisubrl
xchg
cli
fisubrl
adc
jns
test
mov
and
pop
lret
xchg
pop
adc
cmp
stos
faddl
ja
iret
jg
jb
mov
cltd
xor
sub
fidivrs
jp
or
test
mov
es
sar
sub
mov
dec
gs
or
scas
and
std
fidivrs
sub
push
arpl
rcll
mov
movsl
aaa
cmp
fisubs
hlt
pop
movsl
ret
fcompl
iret
shl
int3
jb
sbb
sbb
jns
mov
pop
lret
out
test
sub
rcrl
and
iret
mov
int3
push
mov
xchg
jbe
in
jge
pop
or
and
aad
movsl
add
mov
mov
js
es
lret
mov
ss
push
jmp
cmpsl
lahf
in
fwait
imul
lods
mov
sarb
in
les
loop
dec
dec
lcall
leave
xor
insl
sub
bound
inc
shrb
jmp
scas
popa
mov
fcomps
ja
mov
test
addb
sub
lret
jae
fisubrs
xor
pushf
test
adcb
movsb
pop
lods
roll
add
mov
rcrl
repz
cli
cmp
adc
into
mov
mov
cld
add
add
xchg
xchg
xchg
mov
cmc
mov
mov
in
sbb
cwtl
loop
insl
push
and
sub
mov
aad
or
ljmp
mov
mov
add
test
repz
push
int3
jb
popa
dec
ljmp
and
xor
loope
add
les
dec
or
dec
sbb
cmp
pop
rorb
add
repnz
push
jnp
shrb
xor
clc
pop
out
xchg
lahf
ffreep
pop
mov
mov
adc
in
div
iret
mov
and
push
popf
pop
call
stos
mov
mov
mov
aaa
and
mov
lahf
push
cld
jno
jne
clc
pusha
or
add
xlat
test
test
cmp
int
xor
add
push
in
inc
popf
xchg
xor
enter
cs
ds
out
lods
push
inc
shrl
ret
sub
cs
mov
mov
icebp
cmp
lods
add
mov
sbb
lret
arpl
adc
mov
aaa
adc
daa
jmp
jecxz
out
xlat
mov
mov
inc
jbe
sbb
inc
loopne
xchg
push
jmp
jns
jns
and
add
dec
dec
lret
sbb
pop
mov
mov
add
lret
and
in
lock
or
leave
adc
shrl
mov
cmpsb
cmp
cmp
lret
or
nop
push
adc
dec
ret
xchg
push
xchg
ja
fidivrl
push
sub
mov
lahf
into
idiv
inc
int3
lahf
call
ja
hlt
ds
movups
lods
int3
mov
adc
stos
out
fsubrl
outsb
test
aas
fsubrl
fdivs
shlb
xchg
lcall
cmp
jb
add
lods
mov
add
add
add
stos
sbb
add
xchg
adc
mov
adc
mov
mov
movsl
flds
xchg
add
mov
cmp
pop
pop
ret
jbe
mov
in
shll
in
out
jno
cld
dec
mov
shr
mov
mov
jae
xchg
and
or
fsubrs
dec
jbe
repz
jle
dec
sbb
cmpsl
sub
mov
mov
pop
mov
mov
xor
in
nop
out
fdivrl
jne
test
lea
pusha
inc
xchg
jo
iret
inc
fstpt
xchg
outsb
ljmp
push
sbb
sub
sti
ljmp
sbb
sub
cmpb
mov
xchg
adc
push
sub
mov
jne
mov
les
mov
fwait
sbb
push
push
fwait
or
sbb
inc
xchg
ljmp
xchg
lea
lret
add
gs
jle
pop
xchg
mov
pop
push
sti
or
adc
test
inc
xor
sbb
jmp
leave
out
mov
pop
out
dec
into
xchg
int3
jne
aad
and
xor
cld
cltd
cmpl
cmp
inc
add
pop
jecxz
mov
ss
es
daa
ds
int
push
mov
xchg
mov
cmp
lods
nop
paddusw
movsl
adc
stc
lods
adc
pushl
xor
jbe
dec
ja
push
outsl
jns
mov
lcall
push
dec
and
sbb
sub
and
mov
into
repnz
lock
jecxz
fs
mov
mov
gs
imul
rorl
jmp
pop
xchg
and
inc
cld
adc
gs
and
xlat
push
inc
aam
add
add
cmp
mov
in
outsb
fs
cmpsl
rol
data16
add
cld
add
add
hlt
popf
nop
adc
ret
and
push
add
pop
xchg
and
adc
inc
mov
add
add
push
scas
pop
lret
lods
inc
or
test
lods
out
lcall
std
lcall
xor
sub
push
lcall
or
outsb
adc
sub
mov
out
mov
je
jecxz
pop
mov
and
aaa
xor
xchg
test
sub
pushf
xorl
inc
cmp
fcomps
sti
ja
loope
sbb
cmp
scas
pop
ljmp
les
mov
enter
fistpl
fbstp
push
mov
mov
xchg
jb
in
pusha
push
loop
lods
pop
dec
addr16
loope,pn
push
cmp
pop
mov
test
icebp
int3
push
lods
or
aaa
aas
push
lret
lcall
rorb
mov
daa
xor
inc
cmp
mov
xchg
sub
ljmp
insl
sbb
inc
xchg
mov
pop
popf
add
pusha
je
sahf
data16
push
or
loopne
jae
push
jbe
inc
sbb
xchg
ret
jmp
sub
add
pop
cmpsl
in
test
fs
nop
pop
stos
lods
sbb
jno
xchg
dec
outsl
rol
ljmp
shlb
lret
repnz
xchg
and
pop
js
or
add
lds
cs
shrb
imulb
jnp
aad
repnz
sbb
clc
clc
ret
xchg
jb
dec
packssdw
jne
jle
mov
pusha
xor
and
decl
jb
and
int
fistpl
add
xchg
xor
std
mov
pop
mov
xor
outsl
repnz
add
add
add
inc
mov
jb
add
in
movsb
mov
add
add
add
mov
mov
sbb
or
lds
jne
push
shll
inc
subb
xchg
mov
jecxz
jg
aaa
loop
push
pop
push
imul
adc
or
push
and
lods
bound
mov
fnstcw
cmpsb
outsb
int
daa
pop
stos
jg
stos
aad
cmp
lds
cld
jnp
divl
in
add
cmp
lods
iret
cli
lea
adc
es
mov
pop
aam
and
addb
lea
pop
jns
repnz
cmp
pop
jne
xor
insl
cmc
jae
mov
jae
lahf
lods
in
add
stos
xor
shrb
pop
add
imul
or
jb
xor
mov
fldt
and
jne
repz
push
add
and
pop
pop
sub
xchg
addr16
jl
adc
jle
repz
dec
push
mov
mov
inc
xor
popf
mov
jns
arpl
arpl
and
jg
or
pop
ss
dec
mov
xchg
in
dec
in
cwtl
push
xchg
cltd
fwait
scas
jbe
xchg
sbb
out
out
outsl
pop
and
pop
loopne
mov
fcompl
dec
out
cs
mov
dec
out
xor
out
inc
lock
ds
xchg
jo
mov
push
sbb
add
inc
cmc
ret
push
cmpsl
dec
js
ja
lods
out
jge
cs
cmpsb
test
xchg
test
das
test
dec
mov
jno
cmc
loop
das
xchg
in
sub
repnz
or
test
enter
lds
xor
cld
loop
xchg
xlat
add
popa
or
jno
imull
insl
into
sti
and
add
mov
cmp
mov
cltd
and
mov
add
add
mov
mov
insb
test
mov
sub
pusha
xor
add
cwtl
cmpsl
fstpl
les
dec
pand
xchg
mov
addr16
fisttpl
ficompl
ret
in
ss
sahf
pop
test
adc
testb
xor
movsl
and
aad
dec
cmp
sbb
popa
mov
cmp
push
in
mov
scas
loopne
mov
daa
loope
push
cmp
xchg
dec
in
lea
push
loopne
pusha
sub
xor
pop
adc
fdivrl
adc
jl
nop
call
cwtl
setae
sub
cmp
out
mov
cmpsl
mov
jns
in
loop
xor
jns
lods
aas
mov
dec
push
jmp
mov
aaa
sti
adc
xor
fildl
daa
mov
mov
mov
jmp
rclb
and
adc
adc
loope
out
lea
test
pop
rorb
imul
dec
mov
sbbl
jo
mov
shrb
push
aaa
scas
mov
sti
lods
dec
cmp
jbe
add
mov
inc
or
int3
and
ret
mov
ss
aas
xchg
test
push
cmp
inc
dec
adc
inc
sbb
ja
shr
sti
aam
or
pop
test
inc
jmp
rolb
mov
pop
shll
adc
or
aad
lcall
add
jl
sub
push
fsubrl
push
lds
nop
wbinvd
mov
repnz
pop
fidivl
js
xorl
bound
popfw
add
icebp
sbb
pop
mov
xchg
add
mov
xor
mov
ja
jo
repz
dec
into
imul
add
add
add
cmp
out
idivl
test
inc
cmpsb
sub
add
sbb
jae
jp
insl
sbb
pop
call
push
je
in
ret
fnsave
jmp
stos
pop
int3
mov
flds
js
int3
sarb
fs
imul
loope
mov
xor
mov
ret
and
sbb
imul
inc
mov
push
sahf
mov
mov
add
je
jecxz
xor
cmp
in
fcoms
sbb
cmp
cmp
in
and
and
pusha
inc
test
into
insl
lret
cmp
and
pop
and
dec
ficoms
stos
and
out
mov
fwait
xchg
xor
or
movzwl
mov
scas
ljmp
pop
mov
lret
push
jb
fstps
scas
mov
lret
repz
jge
mov
sub
mov
cmp
push
fstps
and
mov
aaa
jns
es
pusha
fldl
mov
adc
mov
movsb
cmc
repnz
insl
sbb
popf
cmp
lds
incl
add
mov
mov
jb
jmp
lock
xchg
pop
ret
cwtl
cmpl
adc
es
mov
and
int
mov
cltd
or
jne
ss
push
lret
in
adc
movsb
add
popa
lods
rcrb
pop
in
int3
enter
out
dec
xchg
push
or
ds
insb
das
cld
xor
inc
xor
lcall
roll
xchg
dec
mov
cmc
sti
jg
rcl
add
jmp
xor
das
mov
in
sar
outsb
sub
xor
sbb
out
mov
insl
mov
movsl
or
inc
loop
cmp
dec
leave
inc
sbb
arpl
or
cmpl
adc
insl
push
adc
fldcw
gs
fcompp
out
fs
popf
outsb
cmp
int3
imul
add
hlt
xchg
jmp
lret
xor
dec
mov
cmpsl
adc
or
jne
pop
out
pushf
leave
or
sahf
cmp
inc
clc
js
xchg
lods
ja
xchg
sbb
dec
push
pop
mov
xchg
sub
aam
jbe
clc
mov
aam
inc
shll
dec
push
mov
or
jns
and
mov
push
icebp
xchg
pop
push
sarl
aam
cmp
jnp
inc
mov
das
lods
inc
add
cmp
pop
sbb
jecxz
movsl
loop
add
test
fcomps
ss
decl
dec
enter
mov
andb
jecxz
lcall
xor
push
inc
dec
icebp
push
mov
loopne
daa
stos
cmp
insb
push
pop
dec
jle
jae
in
adc
add
in
popf
pop
push
mov
ret
scas
nop
xor
adc
push
push
mov
fistpll
push
mov
and
lret
jb
push
pop
pop
dec
pop
aas
in
mov
out
or
fwait
cmp
mov
xchg
cltd
les
rorb
or
push
ljmp
adc
xchg
js
adc
sbb
cmpsb
aas
sbb
mov
cmp
sti
add
cs
add
lret
test
enter
xor
leave
jne
fs
lret
aas
jp
xchg
outsl
out
jmp
movsb
or
imul
xor
ret
ljmp
cmp
ljmp
movsb
push
adc
into
in
mov
add
jb
adc
js,pt
cmpsl
cmp
mov
cmp
aad
sti
xor
shrb
fldenv
dec
dec
and
clc
or
aam
push
mov
rorb
mov
add
adc
arpl
sti
adc
jl
dec
dec
push
test
cld
add
add
outsb
in
fwait
xlat
fmuls
je
pop
xlat
xorl
iret
ret
mov
dec
cmovle
inc
cmp
jecxz
inc
fs
ja
xchg
stc
add
push
imul
jns
out
push
outsb
dec
dec
mov
or
imul
jno
lret
jmp
sub
jmp
sti
inc
cltd
mov
jg
sbb
loope
or
fwait
addr16
cmpsl
sbb
cmpsl
mov
test
mov
imul
aaa
fsubrs
popa
mov
jae
jno
inc
icebp
push
sub
cmp
and
cmp
dec
pop
rolb
sub
testl
jl
mov
imul
mov
popa
cltd
outsl
out
lds
xchg
mov
xchg
std
sbb
shlb
add
insb
add
movsl
push
mov
popa
lahf
xor
cmp
jg
xchg
test
pop
or
dec
xchg
xchg
int3
fistps
imul
ja
xchg
mov
bound
mov
lret
adc
pop
sub
sub
push
and
push
lea
cmp
rcrl
dec
rorl
aaa
inc
mov
pop
shl
fwait
outsl
dec
pop
mov
es
into
ret
cmp
or
push
js
jp
ja
mov
xchg
ret
xor
pop
clc
fsts
loope
cmp
inc
lret
push
jb
rorb
cmp
loope
xchg
enter
test
push
adc
ljmp
push
dec
insb
leave
adc
fwait
cmp
and
sbb
inc
push
add
add
aad
jmp
mov
push
and
scas
sbb
and
mov
xor
fidivl
jae
mov
mov
lods
jmp
dec
ficomps
push
and
cmc
push
icebp
movsb
adc
cld
mov
jp
push
sub
adc
push
push
and
xor
sub
sahf
nop
mov
add
cmp
jp
int3
add
in
out
bound
adc
das
inc
loopne
mov
into
outsl
push
mov
outsl
mov
and
arpl
nop
mov
in
adc
cmp
sub
jb
jbe
jp
and
inc
xorl
add
das
sbb
pop
or
jmp
imul
dec
dec
test
push
adc
jnp
mov
pusha
insb
cs
pop
mov
loopne
xchg
xor
sbbb
sbb
lods
mov
call
sub
and
pop
repz
pop
adc
imul
add
mov
popa
jb
dec
stos
inc
idivl
dec
push
add
push
or
pusha
xorl
pop
sarb
add
ds
icebp
aas
mov
jle
into
pop
push
xchg
test
add
movsl
sub
stos
repnz
or
mov
stc
push
dec
cld
dec
je
jno
sub
xchg
lock
dec
xchg
jne
sub
sahf
mov
ja
lds
mov
scas
add
mov
movsl
xlat
xor
xor
addr16
imul
inc
call
jecxz
sbb
pop
scas
ret
in
lret
jg
hlt
dec
jp
sub
push
jbe
pop
ret
mov
loopne
les
aaa
xchg
mov
pop
aam
mov
sti
jne
mov
mov
mov
or
pop
inc
and
jle
add
mov
cmp
push
push
mov
pop
pop
cmp
or
push
scas
in
roll
jb
fildl
shlb
or
cmp
sub
inc
push
xlat
enter
movsb
hlt
cmpsl
xorb
lock
dec
or
into
out
lods
xchg
rcrl
jmp
nop
xchg
push
scas
fidivl
mov
lods
cmp
inc
or
adc
fiadds
pop
mov
jg
data16
sbb
xchg
cmpsb
mov
add
and
xor
ret
sarb
aaa
jecxz
dec
add
fcomp
movsl
push
outsb
pop
mov
push
daa
mov
dec
sub
mov
cmp
add
je
aas
out
mov
loopne
adc
jge
mov
xor
inc
add
pop
pop
movsl
jecxz
adc
lock
pop
lea
or
pop
out
mov
ja
push
jge
mov
jns
les
cmp
lahf
sbb
dec
es
es
mov
in
push
arpl
adc
push
into
inc
mov
lcall
int3
mov
push
aaa
dec
or
fists
sahf
push
inc
or
lea
cld
inc
int
movsl
scas
mov
rcr
xchg
pop
cmp
ljmp
xor
movsl
js
dec
test
mov
movhps
inc
in
or
int
xor
inc
lret
inc
stos
jg
jo
out
jae
xchg
lcall
out
xchg
rolb
or
cmc
loope
xor
test
dec
jne
xor
add
cmp
mov
movsl
xor
fstpt
cmp
in
mov
sub
push
pop
daa
mov
inc
adc
pop
cmp
leave
dec
and
ja
int
stos
fwait
cwtl
sahf
outsl
adc
leave
nop
dec
xchg
cwtl
lcall
pop
dec
lea
sbb
in
adc
test
scas
rcrl
jb
jmp
cmp
pop
popl
push
xor
lahf
pushf
shl
add
shrl
or
xchg
fsubl
mov
aad
imul
fbld
and
mov
rolb
lods
fs
adcb
loopne
mov
xor
or
iret
or
ljmp
sub
and
add
add
pusha
jbe
out
test
stos
call
ret
cld
add
add
fisttpl
stos
aaa
xor
xor
xchg
and
movl
cmpsb
scas
cmpsb
dec
enter
repnz
push
gs
jb
mov
xchg
je
repnz
into
les
pop
inc
pop
sbbb
inc
xor
stos
jmp
lds
fildll
jb
int3
adc
jge
call
imul
xor
scas
sbb
push
push
sub
arpl
xor
fwait
loop
xor
lret
and
pop
or
aad
mov
pop
push
lea
lret
and
sub
out
sar
push
shlb
cmp
mov
rcr
xchg
call
out
nop
movsb
sahf
mov
sbbl
xor
out
scas
dec
dec
fstps
cmpsb
sbb
loopne
pop
and
jne
cwtl
mov
lret
ljmp
ja
lret
mov
leave
push
mov
push
mov
xlat
sbb
std
setnp
jae
and
rolb
sub
xchg
push
adc
in
cmp
add
nop
xchg
out
lods
pop
adc
mov
scas
mov
cld
fiaddl
add
push
popa
outsb
cmp
cld
mov
dec
xchg
xchg
iret
pop
xor
jne
push
dec
or
pop
orb
mov
and
rol
rorb
add
addr16
jno
adc
lea
add
sti
lret
or
mov
sbb
jmp
leave
imul
xor
daa
scas
cmp
mov
cmp
sbb
ret
repz
jle
dec
sub
adc
fdivrl
sarl
pop
mov
sbbl
lahf
mov
jg
push
shlb
mov
flds
add
add
pop
lcall
addr16
int
sub
add
lret
sti
loopne
jno
xor
iret
shll
cmpsl
lock
fidivl
icebp
jae
popa
jmp
xchg
js
out
push
dec
hlt
jae
lods
repz
and
push
dec
and
sti
mov
mov
and
insl
test
xchg
add
push
xor
stos
jb
xchg
mov
es
lds
je,pt
xchg
ljmp
lods
jmp
rcrb
aam
dec
lcall
or
pop
xor
dec
sti
mov
lcall
push
cmp
stc
leave
or
cmp
int
dec
push
test
mov
inc
xchg
sub
jne
push
rol
rorb
leave
dec
outsl
sbb
jmp
sbb
xchg
inc
pop
leave
cli
sahf
mov
dec
lock
pop
nop
xchg
mov
jns,pn
imul
dec
leave
xor
loop
lcall
scas
dec
loope
mov
add
jecxz
cs
movsb
or
fst
rcrb
sub
stos
imul
jb
loopne
in
in
dec
pop
add
mov
into
sub
push
das
inc
fdivs
adc
push
mov
mov
mov
pop
filds
enter
ret
inc
cmpsb
and
outsl
push
jle
rorl
and
pop
and
stc
movsb
and
dec
push
idivb
fdivr
jmp
and
inc
sub
outsb
xchg
jecxz
xlat
cmp
pop
pop
mov
pop
pmuludq
pop
add
push
dec
in
test
adc
lret
out
push
mov
icebp
push
xlat
jne
jnp
mov
test
scas
jecxz
inc
sbbb
cmp
fs
xor
call
ja
cwtl
adc
daa
push
sub
xor
push
mov
mov
bnd
xchg
mov
lret
mov
pop
inc
out
cmc
push
imul
inc
cmp
xchg
iret
pop
mov
push
insb
sub
outsl
daa
insl
push
addb
xor
out
add
add
add
add
push
mov
push
jge
jp
addr16
adc
nop
mov
add
xor
push
data16
cmp
cmpl
xchg
add
test
and
cmp
ss
mov
cmp
inc
or
movsb
cmp
mov
mov
cmpsl
repz
push
aam
mov
and
sub
pop
mul
shll
cmp
mov
or
test
adc
jae
mov
pusha
cmp
adc
cltd
xchg
cmp
stos
jo
fdivs
push
imul
cld
adc
inc
add
pop
ss
shlb
inc
fucomip
push
leave
jne
mov
sbb
lret
mov
xor
lods
lret
loop
outsl
pop
das
in
fwait
idivb
xchg
push
xchg
xchg
inc
inc
ja
popa
xor
and
insl
cmp
popa
int
inc
enter
into
mov
les
fistps
and
pop
pop
orb
mov
jecxz
sbb
xor
sbb
add
bound
into
jno
adc
mov
lcall
sbb
nop
repz
bound
or
xchg
insl
sbb
fnstsw
lea
movups
std
cmpl
mov
pop
push
add
mov
xchg
adc
mov
into
xchg
std
vpsraw
xor
icebp
and
jbe
xorl
call
push
mov
or
add
or
ds
rorl
push
fidivrl
push
insl
rcrl
inc
sbb
negl
inc
mov
adc
pop
pop
cmp
push
outsb
shlb
mov
dec
sarb
popf
cmp
pushf
mov
cmp
shll
mov
out
out
mov
add
add
add
add
pop
and
mov
out
leave
enter
fldl
add
add
add
fstpt
incb
add
rcrl
jecxz
imul
stos
adc
xchg
mov
xor
push
cmp
lods
pop
mov
mov
sbb
sub
insl
pop
push
sub
inc
or
and
nop
push
out
ds
bnd
add
pop
enter
cmp
scas
outsb
insl
aad
addr16
adc
dec
imul
xor
divl
scas
shll
test
jnp
ss
mov
cmp
lds
int
mov
lea
inc
in
jnp
sub
cmp
jno
popf
or
sbb
jne
mov
sbb
sbb
ret
nop
inc
outsb
lret
jmp
jp
fs
loop
jecxz
and
sub
pop
push
movsb
jnp
adc
ret
push
mov
push
add
push
dec
mov
mov
test
xor
jbe
sti
sub
pop
jmp
scas
jbe
mov
sub
pop
test
cmp
mov
jl
add
pop
sbb
push
aam
mov
repz
mov
add
or
xor
mov
push
push
fsubrs
cmpsb
jle
sti
dec
or
add
mov
fs
mov
add
dec
dec
rcrl
inc
in
xchg
scas
ret
xchg
jb
sahf
cmp
jnp
jp
daa
out
test
inc
xor
repz
pop
mov
or
dec
sarb
jmp
mov
and
jmp
insb
mov
int
or
movsb
or
je
jle
ljmp
lods
add
or
dec
cld
pop
int
sbb
loop
add
push
inc
sahf
or
lea
addr16
ja
xchg
fstl
stc
sti
dec
les
inc
inc
sbb
add
add
cmp
mov
pop
cmp
add
add
add
jge
mov
test
mov
sub
fldenv
xchg
in
mov
or
in
bound
sub
cmp
jp
call
lcall
gs
mov
in
cs
pop
scas
cmc
jge
xchg
fldcw
jno
sub
or
add
enter
sub
and
add
cmp
clc
mov
dec
jae
ljmp
fadd
fstps
and
cmp
xor
repnz
movsb
xchg
sub
and
movsb
imul
jb
dec
sbb
pop
andb
add
fistpll
jg
ret
inc
xor
ljmp
std
cmp
push
arpl
dec
scas
xlat
cmpsl
adc
mov
xchg
sub
filds
outsl
jns
sahf
sbb
xchg
push
jne
js
jae
stos
add
pop
inc
in
push
repnz
gs
add
dec
sub
adc
out
sar
flds
or
push
leave
push
jp
jb
adc
lea
or
aas
xor
enter
rcrb
sbb
xlat
sub
dec
mul
inc
jnp
scas
push
push
xor
push
mov
mov
sarb
jns
outsl
cmp
divb
or
nop
fmull
xchg
pop
pop
fnstsw
hlt
dec
sbb
cmp
rcrl
lods
popf
pop
pop
mov
pop
dec
sub
sbb
data16
dec
daa
out
sub
loopne
int3
xchg
fidivrs
loopne
sti
jnp
arpl
lea
and
cmp
enter
mov
xchg
pop
in
shll
dec
sub
test
in
cmp
sub
insb
pop
fadd
nop
movb
add
push
ds
outsb
sbb
aam
dec
sbb
imul
jecxz
and
iret
ljmp
dec
or
push
insb
std
pop
mov
inc
sbbl
fwait
cmp
xor
or
sbb
push
daa
mov
test
dec
jl
ffreep
sbb
jno
popa
pushl
mov
lidtl
xchg
insl
mov
sbb
add
cmpsb
mov
fnstsw
jp
sbbb
pop
mov
xor
or
int
lods
mov
rolb
int3
push
dec
arpl
lret
mov
lock
jnp
dec
push
and
pop
cli
mov
adc
ret
fists
and
ret
pop
add
jae
pop
or
movsl
mov
or
int
pop
mov
and
aam
sub
mov
cmp
cmp
mov
cmp
add
sbb
lods
sbb
xchg
push
add
mov
jp
sub
gs
xchg
cmpsl
mov
arpl
or
out
lret
xchg
movsb
out
lcall
movsb
sbb
jae
cmp
sbbl
in
push
mov
fs
cwtl
test
mov
cmc
cld
push
dec
mulb
mov
pop
out
jae
lret
aam
and
in
jo
xor
fwait
dec
or
es
in
mov
jbe
aam
test
aad
xchg
out
mov
adc
popa
sbb
jp
and
lcall
xchg
mov
js
sbb
call
jnp
mov
sub
iret
or
xor
push
clc
inc
ret
add
pop
cmc
ficoms
roll
cmpsb
sti
dec
jne
fiaddl
mov
fs
ja
fucomp
jnp
scas
addr16
dec
dec
into
sbb
add
repnz
faddp
adc
xchg
insb
xchg
mov
out
movsb
pushf
loope
add
add
mov
nop
in
pop
jmp
jo
add
cld
add
add
adc
out
js
roll
sbb
jbe
mov
push
adc
nop
stos
je
push
mov
mov
aad
sub
adcl
jno
xor
shrl
aad
mov
call
sbb
es
pop
jl
and
lret
shl
jnp
mov
push
lret
inc
add
jne
roll
sub
icebp
andl
arpl
bound
mov
shll
mov
negb
inc
xorl
push
decl
fistpl
jg
cs
repnz
push
fidivs
xchg
lock
ret
notl
inc
inc
jge
sub
jnp
sub
negb
js
push
mov
ds
pop
mov
jno
or
cmp
inc
dec
jl
sbb
sti
or
mov
idivl
jne
jo
scas
jae
cs
outsb
lods
addl
pushf
mov
jo
cltd
dec
push
std
pop
jno
int
xchg
cmp
in
pop
mov
xchg
inc
and
ljmp
popf
imull
pop
mov
sub
sbb
pop
gs
jle
repnz
fwait
gs
das
pop
jl
cli
dec
sub
pop
pop
les
sti
lea
pop
mov
mov
dec
push
pop
lea
jb
push
lea
xchg
std
aad
repz
movsl
adc
cltd
scas
arpl
mov
sbb
cmpsl
sbb
adc
cltd
inc
inc
test
inc
or
test
add
inc
cs
insl
mov
les
data16
jecxz
mov
call
sbb
pop
or
mov
xor
mov
pop
test
ja
mov
push
icebp
fadd
andl
mov
add
scas
out
inc
inc
or
int
call
test
scas
iret
mov
add
dec
inc
mov
in
dec
cmp
adc
imul
cld
add
add
mov
mov
cmp
xorl
xchg
mov
in
stos
or
jo
xchg
arpl
dec
jg
ss
xchg
testl
test
outsl
clc
lret
ret
addr16
xchg
aam
dec
pop
je,pt
es
sti
and
pop
dec
lret
addr16
inc
ror
in
mov
sar
or
add
inc
cmp
jmp
lods
or
push
push
aam
jno
and
popa
add
push
scas
mov
mov
push
addb
or
dec
cltd
sbb
push
jl
add
mov
jecxz
stos
add
inc
jb
stos
roll
imul
jmp
test
rcrb
inc
xlat
inc
into
xor
fldl
xchg
cmp
cmp
ret
enter
out
scas
pop
push
pop
dec
nop
xchg
push
or
sub
mov
push
push
sub
push
stc
lds
leave
push
pushf
cmpsb
push
ljmp
es
jae
inc
and
jb
scas
out
and
sbb
movsl
sahf
and
ja
mov
sub
dec
scas
aam
mov
sub
fildl
and
pop
push
xchg
add
inc
xchg
inc
sbb
imul
sub
enter
das
inc
es
and
and
add
ss
ds
mov
int
inc
sbb
jmp
mov
into
ret
pop
pop
das
shr
sbb
pop
cmpsl
iret
testb
ljmp
subb
mov
mov
push
add
cmp
rclb
enter
add
sbb
cmpsl
mov
push
lret
adc
cmp
cmc
mov
test
pop
mov
pop
outsl
pop
jle
ja
jo
hlt
jmp
rcr
lock
xor
imul
in
mov
aam
lea
pop
ljmp
arpl
mov
stos
jo
dec
cli
fldcw
pop
sub
add
add
add
stos
enter
cwtl
and
mov
push
rcl
mov
lds
adc
test
pop
jmp
or
xorps
sbb
jnp
jl
movsb
in
sti
dec
int3
int3
sbb
cld
in
stc
shl
loope
inc
insb
push
inc
xchg
in
cmc
adc
int3
int
push
lahf
std
push
pop
lret
and
dec
jecxz
add
sarl
xor
dec
inc
insb
out
xor
pop
fcompl
jae
xchg
lds
mov
fwait
pusha
out
sbb
fcompl
dec
push
adc
imul
push
pop
mov
mov
enter
and
push
cli
xor
and
mov
dec
lret
ja
jmp
ss
js
inc
in
jae
cmpsb
jnp
or
sub
push
xchg
in
mov
loope
stos
ret
ret
sbb
pop
lods
mov
dec
std
cmpsb
push
sbb
mov
jle
cmp
cld
repnz
ss
pop
outsb
jl
out
dec
test
popa
cmp
adcl
les
or
sti
hlt
sub
cwtl
push
aam
add
inc
jo
pop
cmp
imul
fildll
out
nop
stc
out
ljmp
dec
xchg
push
idivb
adcl
sbb
int
jp
daa
in
aad
mov
mov
nop
push
adc
sbb
inc
scas
mov
clc
mov
cmp
mov
and
bound
cmp
lds
dec
daa
and
jge
aam
adc
push
dec
lods
lahf
out
cs
test
inc
arpl
dec
cltd
jmp
inc
inc
inc
outsl
xor
clts
movsl
scas
jecxz
or
pop
mov
cmpsl
xchg
mov
xor
aaa
mov
add
add
push
dec
pop
xchg
xor
add
cld
add
add
fstpt
out
cmp
pop
pop
push
hlt
sbb
int3
push
mov
or
push
enter
cmpsb
enter
ror
cmpsl
adc
test
mull
mov
dec
dec
mov
lcall
lods
leave
cmc
cli
pop
jg
mov
add
xchg
or
subl
test
xor
mov
leave
jbe
in
add
jmp
insl
sub
in
cltd
pop
xchg
push
dec
push
bound
cmp
jge
rsm
mov
lcall
hlt
cmp
jmp
adc
jge
adc
cmp
add
outsl
iret
loop
sbb
dec
dec
arpl
dec
loop
mov
test
popf
cmp
movsb
cmpsb
mov
mov
dec
in
cmpsl
mul
stos
ret
mov
hlt
cmpsl
or
ds
sub
jmp
lahf
inc
cmpb
sbb
nop
sti
xor
in
add
mov
insl
inc
mov
lahf
jmp
loopne
sbb
jge
dec
cld
arpl
jge
or
jp
mov
int3
xor
xchg
xor
sub
dec
sti
push
sbb
data16
xchg
arpl
fisubrs
pop
add
sbb
mov
iret
nop
lods
arpl
xorl
cld
inc
push
sbb
enter
out
mov
pusha
stc
insl
or
jmp
and
sbb
mov
xor
push
xor
dec
test
or
xchg
lds
cmc
jo
or
out
cmc
aas
dec
pop
push
xchg
lea
xchg
inc
stos
adc
lods
dec
fwait
test
sub
cmp
imul
mov
jno
ds
mov
pusha
sbb
jo
add
push
cmp
or
notb
add
add
xchg
jl
cld
decl
or
sub
mov
add
add
add
movsl
lahf
mov
and
cmc
push
lock
sbb
push
mov
dec
push
xor
outsl
bound
cmp
aaa
lods
hlt
adc
add
xor
out
aas
inc
rcll
mov
xchg
dec
in
int3
xchg
sbb
jg
push
pop
movsb
jge
test
pop
in
lret
jae
fisubl
aad
sbb
adc
imul
sub
inc
mov
and
mov
and
mov
mov
sbb
outsb
push
cmc
xchg
pusha
add
or
mov
icebp
mov
loopne
dec
ret
inc
mov
cmp
push
add
hlt
dec
adc
xchg
xchg
pusha
jbe
push
stos
jnp
out
adc
mov
std
xchg
sbb
pop
jae
push
outsb
pop
mov
cwtl
cmp
into
add
mov
add
and
ss
add
mov
std
stos
popf
adcl
pop
mov
jmp
daa
fs
pop
jae
sbb
or
and
aad
xor
std
pop
mov
xor
sub
add
adc
repnz
aam
je
xchg
cld
push
subl
cmpsl
shll
jge
ret
mov
in
sbb
adc
lcall
mov
in
sub
cli
jne
jecxz
mov
aad
jmp
rclb
lea
sub
mov
jle
mov
jmp
jnp
mov
add
mov
dec
imul
jne
call
in
outsb
cmp
xchg
jmp
push
sub
and
and
ud2
out
cmp
scas
roll
mov
xor
xorb
dec
negb
and
sbb
add
add
and
dec
repz
fldt
xchg
pushf
mov
add
add
add
push
mov
inc
dec
loope
stos
fisttpll
cmp
addr16
into
outsl
movsb
add
jmp
leave
add
sti
add
cs
mov
sbb
and
fnstsw
shll
pushf
dec
cmp
shrl
jae
pop
jge
jno
in
dec
aas
pop
out
sbb
push
push
pop
into
jne
xor
push
adc
ret
xchg
mov
dec
pop
shrl
arpl
xchg
dec
ret
adc
push
push
mov
mov
movsl
mov
or
sub
push
pmaxsw
mov
add
and
std
in
inc
and
daa
gs
out
mov
shr
aam
xor
jne
jmp
sahf
push
push
hlt
into
rcll
dec
xor
jl
inc
jo
sub
js
push
and
dec
in
dec
or
out
push
jl
in
and
fnstcw
push
repnz
clts
mov
cmc
cs
add
jae
pusha
pop
cltd
jl
mov
mov
or
shll
insb
pop
dec
fimull
and
out
popa
jbe
out
inc
gs
pop
ss
in
icebp
or
adc
clc
inc
out
les
sahf
xor
and
sbb
popf
push
les
sub
pop
es
push
test
mov
add
adc
scas
push
test
or
xchg
pushf
push
aad
xlat
sti
insb
cmpsl
rolb
jg
pop
sbb
inc
loopne
out
inc
sahf
mov
xlat
adc
inc
sub
mov
jnp
in
xor
cs
imull
mov
fwait
ja
pop
lock
scas
insb
sbb
stos
test
and
or
jmp
iret
xchg
loopne
or
hlt
sub
loopne
js
push
cwtl
sbb
cmp
lret
inc
lods
and
jmp
lcall
adc
lret
add
add
lcall
shll
adc
pop
fiaddl
add
add
add
sbb
dec
lods
jmp
out
sbb
imul
shll
cmp
or
out
dec
and
xor
jb
push
add
hlt
mov
mov
cmp
xor
mov
mov
das
es
xor
push
cmp
cmpsl
push
push
cmp
addr16
cmpsb
inc
push
in
movsl
mov
call
int3
add
mov
push
sub
ret
xchg
jbe
lea
mov
addr16
pop
xchg
pushf
add
scas
push
test
or
movsl
scas
add
clc
popa
mov
and
cwtl
jne
addl
cmp
jg
out
les
lcall
jl
cmp
inc
repz
in
or
cld
dec
mov
sbb
cmpsl
aad
aas
mov
cltd
lcall
lds
lret
dec
jne
daa
popf
aas
add
imul
add
inc
fwait
or
fdivrl
out
adc
mov
cmp
mov
loopne
mov
jo
jmp
sub
dec
sahf
ret
inc
aad
lods
inc
jo
mov
lahf
xor
popf
jg
push
gs
xorl
sub
jae,pt
or
out
int3
mov
pop
cmpsb
mov
lret
movsb
inc
insb
sbb
lret
ret
les
jmp
sub
mov
cmp
add
fnstsw
cmpsb
mov
stos
cmp
xor
xchg
mov
push
jge
push
cmp
sbb
adc
cli
xlat
data16
add
mov
mov
xor
mov
add
pushf
lea
jl
pop
in
rorb
lods
test
adc
hlt
pop
les
mov
testb
jnp
pop
xchg
in
iret
and
clc
into
filds
inc
xchg
rolb
dec
idivl
jg
addr16
add
add
add
sub
sub
jg
sbb
jb
sti
xor
jo
xchg
ds
fiadds
inc
js
xchg
mov
mov
mov
pop
imul
aam
repnz
movsl
mov
cmp
pop
mov
jnp
les
push
fadds
adc
add
xchg
pop
int
and
adc
xorl
adc
mov
xlat
lods
out
jmp
mull
cs
js
cmp
and
movsl
gs
and
mov
cmc
test
cli
into
push
or
rcll
into
push
test
cmp
push
jge
jnp
lock
sarb
adc
cmp
ja
pop
lods
lea
mov
hlt
int
push
add
sbb
fdivs
add
mov
test
jo
cmp
mov
into
push
pop
nop
movsb
dec
in
push
cs
aaa
mov
and
dec
mov
push
mov
or
push
push
adc
push
cs
jmp
dec
in
push
pop
jns
adc
jmp
insl
mov
push
cmp
mov
in
or
les
or
dec
imul
repnz
outsl
ret
push
in
mov
popf
xor
mov
push
stc
fstl
and
mov
cmp
add
cmc
fsubrs
mov
xor
sbb
call
outsb
ss
adc
pop
cmp
mov
or
pop
jl
rclb
outsb
fisubs
mov
push
lods
xor
and
mov
cmp
iret
rcll
jb
fs
shrl
imul
adc
or
into
cmp
cmc
test
lea
mov
out
stc
mov
sbb
inc
addr16
outsl
push
mov
into
mov
call
mov
xor
ss
fiadds
add
add
add
cmp
jbe
gs
mov
inc
jmp
aas
rol
lret
and
lahf
pop
call
ja
ret
and
jmp
icebp
pusha
xchg
push
and
movsl
idivb
dec
pop
outsl
dec
mov
cwtl
add
rcl
cmp
outsb
leave
arpl
mov
std
cmp
stos
ret
jnp
inc
ds
mov
inc
addr16
xchg
jns
pop
and
sub
aaa
aas
fimuls
or
roll
pop
xor
sub
dec
mov
xor
lock
dec
sbb
out
cs
xchg
jae
loop
inc
cmpsb
repnz
or
jno
mov
and
sahf
sarl
xchg
jge
or
xchg
out
enter
adc
mov
pop
fisubs
cmp
insl
pop
push
push
test
fstp
dec
jmp
mov
and
ror
cltd
jl
and
mov
xchg
push
movsl
scas
jno
or
mov
movsb
shll
inc
out
mov
or
xchg
ret
cmpsl
call
fwait
add
outsb
aaa
inc
fcmovbe
leave
dec
inc
cmpsb
xor
lret
cld
out
push
insb
push
jnp
inc
andb
mov
pop
mov
hlt
mov
push
loope
das
fnstenv
cli
dec
push
mov
adc
mov
xor
negb
stos
stos
fwait
cmp
gs
xchg
push
push
mov
mov
mov
mul
ficoms
jecxz
outsl
les
push
inc
pushf
in
add
push
dec
inc
and
test
loop
inc
xchg
sbb
lcall
mov
pop
push
test
cltd
mov
mov
add
pop
jnp
jmp
xchg
or
and
stc
jp
dec
and
jae
out
ja
je
mov
jno
addl
mov
cli
pop
pop
jg
jg
or
sbb
add
add
ficompl
mov
push
adc
add
add
add
push
into
and
push
jg
test
cltd
out
adc
out
and
xchg
jmp
inc
in
cwtl
xchg
hlt
push
cli
int
mov
jp
push
mov
and
into
pop
lahf
ds
popf
fisubs
stc
loopne
push
hlt
mov
dec
adc
cmpsl
sahf
jnp
fsubp
loope
pop
and
adc
dec
xchg
add
adc
and
adc
insl
xchg
jo
aad
inc
rcrb
rcrl
add
test
xor
mov
mov
push
div
rcr
or
mov
inc
mov
insl
fwait
bound
cmp
mov
pop
rep
nop
cmp
lcall
jge
xchg
stos
insl
push
sbb
adcb
stc
dec
sub
push
sub
jmp
ficomps
testl
fdivr
cmp
dec
mov
add
mov
mov
aam
pop
xor
test
outsb
or
xchg
rolb
mov
add
mov
lock
dec
xchg
inc
lds
out
mov
inc
add
lret
cwtl
push
das
sbb
dec
fmulp
pop
adc
loopne
add
dec
inc
popa
xchg
ret
xchg
repnz
fisubrs
ljmp
mov
fdivrl
mov
and
sub
cmc
dec
scas
dec
pop
popf
test
dec
cmp
pop
stos
adcb
push
sbb
and
xor
or
mov
sub
pop
pop
pushf
xchg
adc
movsb
out
inc
sbb
daa
fsts
sbb
lret
push
dec
push
adc
push
call
and
je
push
adc
sub
mov
sbb
sub
movsb
clc
adc
sub
or
popa
subl
pushl
xchg
inc
daa
jle
mov
lahf
cmp
imul
test
add
add
pop
sbb
cli
inc
cli
mov
std
mov
add
add
add
mov
js
adc
fists
mov
push
addr16
fildl
xchg
sub
leave
pop
jecxz
mov
jmp
cmp
xchg
fsubrs
inc
fcmovnb
xlat
je
push
notl
std
jnp
subl
icebp
pop
enter
out
mov
jg
mov
test
mov
mov
mov
fwait
adc
jns
sahf
lcall
in
cmp
pop
lods
mov
jno
inc
repnz
movsb
push
imul
push
or
jecxz
loope
mov
xor
sub
or
jge,pn
inc
jecxz
pop
inc
int
ret
stos
add
xor
test
add
mov
pop
pushf
push
mov
cmp
ds
sbb
dec
imul
pop
cmp
dec
insl
lret
lret
lods
enter
xor
inc
adc
bound
cmp
xlat
js
dec
jp
sti
test
xor
hlt
sbb
adcl
es
xchg
movsb
ja
push
jmp
sbb
pop
jae
xlat
int3
or
add
and
dec
xchg
mov
push
out
sbb
std
lret
cmp
mov
rcrb
cmpsl
xchg
sbb
repnz
sti
fldt
push
js
dec
push
cmp
cltd
movsb
inc
pop
jp
sub
xor
mov
xchg
xchg
repz
loopne
or
or
pop
ret
fdiv
out
mov
lret
push
je
je
cltd
les
outsl
lea
test
ss
adc
test
cmp
sub
jo
daa
stos
test
cmc
xchg
rclb
push
cmpb
aaa
sub
mov
inc
std
adc
addr16
mov
sub
addr16
and
sbb
js
je
pop
pop
ja
xchg
std
mov
dec
jp
xor
and
pop
push
mov
xlat
push
xlat
ja
out
push
lahf
cmp
jns
in
add
add
add
dec
sbb
cmc
jge
in
inc
sub
pop
mull
jmp
jnp
pop
pop
rcll
stc
jno
popf
sahf
xchg
jnp
pop
lret
cltd
pop
adc
jb
fists
sbb
arpl
fcoml
into
adc
jmp
mov
shrb
test
push
das
icebp
in
daa
pop
inc
xlat
sub
mov
sar
mov
fdivrl
addr16
mov
test
sub
mov
push
mov
in
ficomps
mulb
adc
dec
cmp
fldl
pop
daa
repz
dec
dec
dec
lret
pop
out
inc
xlat
hlt
jne
add
sbb
sar
push
cwtl
out
xlat
aad
inc
xchg
cs
or
push
mov
out
mov
pop
jle
push
hlt
cmp
xchg
stos
mov
test
lahf
std
mov
ds
mov
mov
fisubrs
xor
xchg
fsubl
sbb
dec
sbb
mov
sahf
xchg
pop
and
sahf
push
or
push
mov
cmp
adc
push
lods
add
push
cmc
arpl
dec
push
add
xor
ds
repnz
es
icebp
dec
xchg
push
jg
push
into
enter
jbe
adc
inc
loopne
clc
push
ja
xchg
out
std
jl
rol
jnp
push
and
xor
punpckhbw
cli
and
mov
jnp
and
push
mov
inc
push
insb
lret
cwtl
mov
loope
jmp
aaa
int3
test
xor
adc
jae
push
fmulp
lods
ja
ja
jecxz
stos
nop
push
cmpsb
push
rolb
push
dec
adc
cwtl
sbb
mov
xchg
imul
xchg
sbbb
inc
sub
daa
cwtl
xor
mov
jno
xchg
ds
inc
roll
enter
add
cli
rcll
jmp
hlt
mov
add
add
add
sbb
lahf
movsl
pop
gs
inc
jl
xor
push
in
pop
jbe
mov
test
sahf
dec
shl
sbb
loop
sahf
mov
mov
cmp
xor
jne
pop
push
daa
pop
in
dec
les
movsl
aam
mov
movsb
xchg
in
sbb
loope
imul
lods
hlt
repnz
mov
roll
push
mov
pop
lret
jns
ljmp
mov
pop
pop
xor
or
sar
add
xchg
mov
pop
in
inc
add
xorb
xlat
les
sub
cltd
cmp
inc
push
es
ljmp
inc
cs
dec
sub
daa
cwtl
jno
je
daa
mov
adc
jl
and
movsb
and
imul
push
js
dec
ljmp
inc
dec
jo
xchg
push
pop
repnz
in
push
xor
push
xor
es
sub
jne
mov
push
inc
out
jmp
gs
mul
push
fs
cwtl
or
sub
lock
fdivl
cmp
js
xchg
mov
sbb
or
inc
frstor
cmp
into
testb
lds
and
sbb
inc
fcoml
movsb
fbstp
rcrb
pop
stc
xor
sarb
test
mov
gs
and
adc
mov
les
pop
and
push
inc
cmpb
inc
lods
add
es
cmp
faddl
inc
push
pop
mov
pop
mov
js
je
or
adc
fdivrp
ljmp
push
pop
aam
xchg
dec
data16
stos
or
mov
xor
aad
jl
jmp
icebp
pop
pop
xor
inc
push
sub
add
iret
negb
mov
loopne
icebp
cmp
add
cld
add
add
in
inc
mov
and
outsl
jge
dec
scas
out
add
sub
pushf
inc
icebp
pop
xchg
in
in
xchg
loope
ja
cltd
sub
lret
scas
punpcklwd
scas
popf
fstpt
sti
aad
mov
mov
or
loop
pop
ja
lods
pop
loope
sarb
cmc
jecxz
aas
and
mov
cmc
int3
adcl
popa
inc
das
hlt
xor
jnp
xor
psubq
rorb
jo
stos
in
inc
js
in
jle
sbb
cmc
inc
adc
cs
or
dec
std
sahf
ds
pop
dec
xchg
push
add
lea
pusha
push
arpl
add
jns
pop
movsl
loope
pusha
mov
fcomi
adc
mov
out
add
stos
rorl
hlt
mov
adc
mov
and
sahf
test
pop
add
stc
xchg
and
cmovae
mov
ljmp
ja
xchg
ss
fdivs
aaa
push
subb
lea
dec
dec
sbb
ss
test
pop
pop
pop
xchg
or
xchg
imul
sub
in
fwait
jnp
pop
add
mov
and
repnz
das
daa
pop
or
mov
test
iret
imul
addb
popf
lret
mov
hlt
jg
fs
icebp
jg
xlat
cmp
lods
pop
ret
test
push
jbe
popa
je
jno
push
inc
std
gs
pop
sbb
cld
push
add
jmp
enter
dec
mov
mov
fdivr
icebp
test
jmp
imul
adc
mov
aam
mov
mov
sub
clc
fdivr
xchg
int3
lock
jg
xor
dec
faddl
and
xor
addr16
dec
filds
mov
cmpl
xchg
add
push
push
jnp
outsl
jno
dec
and
cli
jge
ljmp
mov
out
enter
mov
dec
dec
scas
hlt
push
in
pop
push
imul
xchg
sarl
inc
das
xchg
test
jmp
int
lock
popfw
ficomps
sbb
decb
inc
imul
fsub
rcrl
stc
loope
out
scas
xchg
cli
jnp
push
shrl
pop
dec
inc
or
dec
mov
sub
xchg
ja
sbbb
sbb
sub
in
and
incl
pop
inc
popa
pop
mov
push
cmp
aad
sub
mov
repz
push
and
pop
xor
lods
aam
mov
dec
pop
jnp
mov
sub
out
mov
test
int3
testb
rcrl
jl
daa
pop
out
cltd
sbb
jmp
sub
js
sahf
cwtl
lahf
cmpsl
mov
adc
ret
dec
inc
mov
xchg
and
leave
dec
pop
dec
lcall
mov
push
push
xor
iret
rcrb
inc
mov
mov
and
mov
mov
mov
les
test
jns
aaa
or
jp
xor
mov
adc
fcoml
out
nop
and
push
xchg
cmpsl
gs
mov
adc
or
das
mov
push
mov
mov
mov
xchg
push
cmpsl
stc
mov
pop
push
addl
les
jge
add
mov
jb
out
fsub
out
sahf
adc
inc
outsl
ja
push
mulb
adc
clc
pop
data16
mov
pop
repz
dec
mov
or
add
pushf
and
test
sub
pop
push
inc
pop
push
lcall
sbb
inc
notl
fildll
dec
dec
xor
aam
out
xlat
cmp
jge
push
push
xor
outsl
icebp
inc
inc
loope
add
add
mov
stc
popf
addr16
dec
shlb
add
cld
add
add
sub
mov
push
and
push
pusha
je
out
xchg
roll
inc
xlat
dec
or
add
call
das
and
sahf
sub
ja
mov
jmp
stos
stc
ret
cwtl
sub
pop
in
cmc
mov
push
jecxz
into
clc
and
push
lds
negl
jne
pop
mov
pop
test
outsl
mov
outsl
int3
cmc
pop
xchg
fldt
adc
dec
push
stc
push
mov
movb
jae
filds
pop
cmc
scas
xchg
mov
cmpsb
shl
fcompl
test
jb
sbb
mov
inc
addr16
add
mov
cli
and
fwait
xchg
add
add
jo
clc
addr16
fcoms
mov
mov
sbb
push
push
shl
push
add
movsl
jo
lods
cmp
hlt
sbb
mov
xchg
jl
xlat
imul
mov
sub
mov
mov
xchg
std
lahf
lret
idivl
adc
mov
and
sti
mov
jl
gs
imul
scas
pop
fnstsw
sbb
aam
sbb
fiaddl
xchg
xchg
pop
pop
sbb
mov
lahf
jbe
push
sbb
mov
and
jp
xor
loope
call
push
fdivp
popf
das
mov
outsl
outsb
xchg
jae
add
xrelease
pop
pop
mov
into
sub
jnp
repnz
mov
push
int3
sti
sbb
adc
jns
sahf
sub
aam
fs
aas
jecxz
into
push
daa
adc
adc
out
xchg
ficomps
xchg
adc
jle
stos
pushf
ficoms
movsl
xor
jg
mov
pop
lcall
ds
xchg
aam
ds
or
clc
mov
jns
sbb
jge
and
dec
push
out
add
cld
add
add
pusha
xchg
lret
mov
outsl
movsl
xchg
std
movsl
mov
sbb
add
adc
mov
mov
sbb
sub
test
std
mov
xchg
orl
mov
push
lods
je
adc
sbb
mov
push
pop
fcoml
mov
sahf
push
or
adc
lcall
lret
repz
push
imul
jne
out
scas
nop
rorb
sbb
roll
mov
mov
sbb
xchg
push
ret
movsl
movq
add
js
jnp
cwtl
sti
xchg
nop
movsb
cltd
xchg
rcll
cwtl
into
adc
cmp
inc
cmp
cld
sub
pushf
xor
imul
stc
cmp
out
fsubl
and
and
xchg
sar
pushf
cmp
cwtl
dec
leave
out
fwait
call
cmp
adc
sub
negb
xor
cmp
lcall
pop
out
fiaddl
daa
push
test
sbb
xchg
xchg
dec
gs
fdivrl
outsl
mov
imul
scas
push
jno
push
adc
sbb
call
jns
jno
mov
out
mov
and
into
in
jecxz
mov
fsts
xrelease
push
js
in
out
mov
cli
fs
push
xchg
sub
mov
pop
mul
xchg
mov
xchg
insl
in
jmp
inc
stos
xchg
pusha
scas
jo
mov
test
sbbl
and
ror
add
mov
insl
sub
add
cwtl
cmp
cs
adc
sti
sbb
ss
aas
cld
and
mov
psubsw
mov
mov
mov
lret
loop
mov
inc
sub
inc
xchg
int3
add
and
cmc
test
sbb
jmp
cmp
nop
ret
add
pop
pop
add
inc
fcmovnb
fstpl
arpl
dec
mov
cld
add
add
sub
into
and
sub
mov
xor
movsl
jmp
jl
fiadds
stc
iret
fwait
pusha
aas
adc
mov
push
addr16
xchg
cld
xor
jl
xchg
pop
adc
out
fdivs
add
stc
mov
mov
aam
adcl
test
mov
sub
mov
mov
inc
ljmp
imul
or
mov
lahf
jns
dec
daa
dec
jbe
in
dec
mov
cmp
pop
lea
push
popf
jmp
push
orb
insb
and
mov
jb
loop
push
mov
enter
fnstcw
into
xchg
cmp
mov
not
data16
dec
xchg
mov
or
ss
lret
aad
pop
jnp
mov
orb
shll
mov
arpl
stc
cmpsb
push
test
lds
jbe
jle
out
cmp
pop
movsl
leave
xor
testl
cld
pop
out
imul
and
sbb
insl
or
or
scas
jno
call
cmpsl
shlb
cs
adc
push
sbbb
outsl
ss
xchg
inc
mov
add
enter
xor
xor
in
cmp
loope
jb
jg
fwait
popa
sbb
faddp
push
in
aad
jle
mov
add
cmp
push
bound
sbb
pushf
push
sbb
cmpb
push
mov
in
mov
arpl
and
cmp
xchg
mov
pop
popa
cmp
ret
push
lods
fiadds
push
cltd
dec
sbb
xchg
pop
mov
mov
lgs
lods
dec
stos
cltd
mov
mulb
xchg
in
lea
dec
mov
cmpsb
loopne
sub
add
xor
or
add
add
daa
pushf
cli
mov
xchg
out
cltd
imul
add
shll
pushf
lods
or
pop
test
jp
arpl
add
std
dec
push
cmpsb
adc
arpl
adc
or
cmc
adc
pop
push
fadd
jns
jp
test
cwtl
frstor
ds
cmpsl
xor
leave
and
mov
adc
pop
push
mov
mov
sub
sbb
mov
and
mov
inc
inc
mov
lret
repz
test
jne
push
jle
rcll
fcos
jl
pop
mov
into
jnp
dec
sub
clc
xorl
in
pop
lock
fdivrp
dec
jle
cli
jnp
xchg
cmp
dec
xchg
inc
popa
add
div
mov
fwait
jnp
jecxz
les
je
push
loopne
std
add
mov
push
xor
repnz
icebp
inc
push
add
dec
out
mov
call
out
aas
or
xchg
out
nop
mov
jno
int
adc
add
or
lock
out
mov
hlt
aas
jnp
in
mov
and
inc
jae
outsl
sub
mov
popa
inc
das
xor
insl
sbb
hlt
ret
inc
mov
inc
mov
push
lret
mov
je
shll
inc
subl
mov
pop
repnz
adc
mov
dec
adc
xor
add
cs
push
sbb
xor
jne
shrl
xchg
mov
adc
push
push
mov
dec
sub
repz
ljmp
xchg
test
popf
dec
and
insl
adc
pop
ja
adc
mov
gs
cwtl
and
test
xchg
mov
repnz
add
add
fisubl
and
scas
jmp
add
add
add
pushf
add
jmp
mov
movsb
jo
andl
test
sub
dec
lcall
cmp
fstpl
dec
sbb
add
daa
inc
fisttps
mov
cmp
out
push
push
sbb
mov
lret
sahf
fadd
cmp
aad
ficoms
ja
in
loope
add
in
lods
loop
jae
gs
adc
test
cli
pop
mov
dec
mov
ss
xchg
jnp
sbb
pop
addl
and
adc
jnp
fimuls
sti
scas
mov
inc
push
xlat
lea
push
stc
or
stos
add
jne
stos
scas
stc
inc
adc
inc
push
or
mov
divb
dec
push
sahf
leave
xchg
inc
int
aad
cmp
fnstcw
jbe
hlt
stos
aam
mov
dec
ljmp
sub
sbb
push
push
cld
push
lahf
fld
xchg
sub
or
xchg
or
popa
insb
rolb
addr16
lods
aas
ljmp
inc
sahf
mov
jne
xor
lret
push
pusha
push
add
hlt
xor
adcb
jne
out
ret
adc
inc
add
daa
mov
dec
fnstsw
jle
cmp
ds
shl
or
shll
adc
and
rclb
ret
jns
loop
mov
inc
sub
pop
push
lret
rorl
shrl
push
sbb
bound
notb
lahf
xchg
push
jb
repz
bound
sti
mov
mov
push
xor
dec
mull
mov
adc
cmp
les
jae
and
movsb
sub
mov
cmc
mov
pushf
jno
add
add
iret
cmc
sti
pushf
and
push
xchg
jle
and
add
cld
add
add
dec
loopne
or
lahf
mov
test
mov
fcmovnb
je
cli
inc
xlat
enter
bndldx
ret
subb
addr16
mov
xor
or
mov
xor
into
faddl
fs
movsb
xchg
xchg
push
or
imul
pop
sbb
lods
lret
imul
call
and
call
clc
hlt
mov
and
imul
adc
stos
jae
cmpsl
dec
mov
sbb
jae
cli
jae
das
orb
xor
xor
inc
add
sbb
arpl
adc
and
cmpb
or
enter
pop
mov
inc
popf
fdivs
pop
loop
mov
xchg
cmc
pushf
fdivp
pusha
push
mov
fs
inc
jns
xchg
jbe
mov
sbb
jge
scas
daa
stos
lea
pop
mov
int
jb
ja
sbb
call
cmp
sarl
stc
or
loope
ret
and
leave
mov
divb
mov
mov
orl
test
jp
and
and
push
pop
push
fsubrs
mov
adc
ss
gs
lods
mov
xchg
adc
and
stc
mov
sbb
inc
out
add
sbb
jp
leave
sbb
loopne
or
inc
test
es
push
push
xchg
scas
inc
test
mov
cmp
xchg
mov
je
mov
mov
mov
shrb
jae
pop
aam
aas
cmc
jg
mov
sbb
jne
mov
dec
sbb
mov
dec
pop
fs
out
cmp
ja
das
sub
or
add
cmp
stc
jl
stc
jne
testl
add
add
sub
lods
ds
sbb
adc
mov
imul
jge
adc
data16
push
imul
pop
mov
xlat
xchg
and
add
and
xorl
or
adc
ficoml
ljmp
lock
xchg
out
xchg
push
dec
cmp
test
cs
and
call
pop
enter
cs
call
mov
adc
push
mov
or
enter
or
mov
mov
mov
ret
negb
addr16
daa
std
cmpsl
outsl
mov
aad
push
mov
inc
int
mov
sub
cli
pop
add
adc
pop
std
dec
rcrl
sub
push
lds
mov
mov
sub
add
imul
bswap
addl
test
sbb
pop
sahf
jo
dec
dec
es
js
cmp
jle
nop
in
repnz
sbbb
fsubl
je
movsl
aad
fstpt
pop
addb
xchg
pop
xchg
loope
push
popf
in
stos
enter
jle
inc
jne
shlb
out
out
mov
xchg
xor
mov
pop
pop
loopne
xor
xor
xor
push
ret
mov
mov
sbb
dec
loopne
cmp
inc
mov
adc
sbb
sub
les
scas
in
or
mov
fmuls
jecxz
sub
mov
add
ret
lock
xor
aas
adc
andb
sahf
lock
cmp
push
ror
test
das
lods
in
lea
mov
pushf
xchg
mov
scas
subps
cmp
xchg
mov
insl
jae
in
or
jge
maxps
adc
popl
or
add
add
add
