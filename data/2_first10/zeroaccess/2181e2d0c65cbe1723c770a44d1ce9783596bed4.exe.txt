push
mov
jmp
xchg
popf
dec
sub
sub
jne
push
test
add
jmp
jmp
into
inc
xor
mov
daa
aaa
mov
dec
ds
and
fidivrs
xor
lds
shlb
and
dec
mov
leave
aas
aaa
movsl
roll
movsl
dec
cmp
mov
movsl
mov
dec
movsl
movsb
mov
inc
dec
rorl
iret
mov
ret
dec
sub
shlb
inc
leave
mov
aas
xor
lds
mov
xor
inc
mov
les
daa
mov
mov
ret
and
mov
push
xor
leave
mov
ds
ss
cmp
lds
daa
and
sub
mov
mov
xor
and
sub
mov
mov
ret
xor
inc
lds
int
les
mov
leave
sarb
inc
mov
xor
dec
inc
mov
dec
int
dec
and
inc
mov
mov
and
mov
leave
mov
inc
mov
xor
mov
lret
inc
test
inc
mov
daa
dec
mov
xor
mov
movsl
inc
ds
mov
dec
mov
xor
cmp
and
ss
inc
mov
xor
mov
mov
rorb
movsb
sarl
inc
xor
mov
xor
mov
and
dec
xor
ror
mov
mov
rol
xor
mov
inc
into
rol
xor
lret
dec
mov
mov
ret
enter
inc
lret
xor
mov
inc
mov
movsb
and
into
dec
inc
cmp
mov
mov
cmp
and
and
rol
mov
rol
xor
and
lret
ss
sub
inc
dec
movsl
enter
mov
and
dec
and
xor
iret
dec
aaa
inc
mov
rorb
dec
enter
and
daa
test
mov
iret
and
aas
sub
mov
inc
inc
leave
les
cmp
mov
and
mov
and
fiadds
iret
cmpsl
xor
mov
dec
and
mov
aas
inc
cmp
xor
dec
xor
test
mov
mov
cmp
enter
mov
ss
dec
movsb
xor
mov
dec
inc
mov
dec
mov
mov
dec
movsl
mov
mov
xor
int
and
xor
iret
inc
mov
mov
vpmaxub
aas
aaa
mov
and
xor
mov
mov
rorl
dec
cmp
mov
dec
aas
aas
iret
ret
mov
cmp
cmp
cmp
mov
xor
mov
inc
lds
mov
dec
and
xor
xor
movsl
mov
fidivrs
test
mov
inc
mov
sub
push
movl
push
sub
movl
mov
mov
adc
movl
cmpl
ja
jmp
push
call
mov
mov
mov
mov
mov
movzwl
jmp
in
fiadds
data16
push
and
push
mov
push
jmp
inc
xor
leave
iret
aaa
xor
mov
into
mov
aaa
and
test
les
shll
cmp
xor
test
int
mov
inc
aas
movsb
xor
ss
ds
xor
es
mov
dec
shrb
into
and
dec
movsl
mov
inc
inc
mov
mov
fisubs
rorb
aas
leave
and
mov
dec
cmp
sub
xor
cmp
test
inc
dec
les
and
dec
and
xor
sub
mov
and
sub
inc
mov
mov
es
mov
lret
mov
inc
roll
movsb
xor
enter
sub
fisubs
iret
enter
and
mov
and
leave
mov
shlb
lds
cmp
les
ret
mov
mov
mov
test
xor
leave
mov
cmpsl
mov
leave
and
dec
cmp
mov
iret
and
dec
aas
dec
inc
mov
mov
dec
es
xor
into
and
enter
cmp
shlb
and
push
shll
int
into
lds
ret
and
iret
mov
test
mov
ds
sub
fidivrs
aaa
and
int
mov
mov
les
dec
inc
dec
mov
movsb
ds
ror
mov
inc
and
daa
ds
inc
xor
and
inc
int
mov
shll
mov
and
fidivs
into
mov
mov
les
enter
mov
mov
inc
dec
xor
mov
leave
mov
rclb
mov
ds
daa
mov
inc
inc
leave
fidivs
inc
sarl
ds
iret
mov
aas
mov
into
lret
and
aas
rorl
mov
xor
lds
mov
shlb
cmpsl
xor
ror
fisubs
xor
mov
rol
dec
leave
inc
rol
mov
mov
xor
cmp
cmpsl
into
cmpsl
inc
leave
mov
mov
and
into
xor
movsb
push
dec
mov
movsb
roll
aas
shlb
cmp
test
test
cmp
mov
movsb
and
into
cmp
mov
and
mov
mov
mov
lds
mov
xor
ss
and
enter
mov
test
mov
xor
movsb
and
inc
dec
into
dec
mov
enter
inc
int
mov
inc
mov
xor
lret
inc
mov
xor
les
mov
ds
les
ret
dec
into
cmp
les
movsb
mov
dec
xor
mov
and
ds
push
inc
lds
and
xor
inc
mov
mov
int
and
mov
lds
mov
add
movzwl
xor
orl
inc
andl
or
sub
addl
mov
mov
not
mov
andl
mov
dec
mov
addl
mov
andl
mov
adcl
mov
movzwl
notl
movzwl
sbbl
or
mov
orl
movzwl
addl
cltd
subl
idiv
decl
mov
and
adcl
imul
cmp
je
movb
cmpl
jbe
sbb
jmp
pushl
call
movb
movzbl
mov
imul
and
mov
adcl
imul
and
adc
sub
mov
sub
jmp
nop
sub
outsl
test
adcl
sahf
js
lock
jmp
xor
inc
dec
cmpsl
and
inc
mov
cmp
ss
xor
mov
movsl
mov
dec
dec
test
ds
ds
mov
dec
and
daa
fisubs
movsl
les
inc
es
shll
les
dec
dec
cmp
inc
dec
mov
sub
mov
xor
mov
sub
dec
mov
into
mov
mov
cmp
int
cmp
rorb
and
inc
mov
daa
dec
cmp
dec
and
mov
mov
push
mov
inc
test
aaa
inc
shrl
test
mov
faddp
mov
dec
mov
mov
and
xor
mov
dec
int
cmp
movsl
into
es
daa
inc
inc
mov
rol
cmp
mov
push
int
and
mov
xor
xor
and
sub
mov
cmpsl
inc
mov
cmp
shlb
dec
leave
into
mov
mov
mov
dec
daa
cmp
mov
mov
and
mov
and
xor
movsb
and
mov
dec
mov
inc
test
lds
cmp
xor
ret
inc
mov
enter
mov
inc
mov
inc
mov
dec
leave
cmp
cmpsl
mov
enter
inc
and
cmp
mov
mov
fmulp
mov
and
ds
aas
dec
mov
mov
sarb
push
mov
mov
inc
mov
and
mov
lds
xor
cmpsl
es
aas
aaa
inc
inc
fidivs
and
leave
mov
cmp
xor
shlb
mov
dec
mov
mov
aas
and
cmp
mov
lds
mov
mov
dec
aas
push
inc
and
mov
sub
aaa
ret
inc
movsl
and
push
mov
inc
mov
mov
dec
aaa
xor
inc
xor
dec
and
dec
test
dec
and
es
and
cmp
xor
xor
iret
ror
ss
and
into
les
mov
shlb
rol
shlb
mov
les
inc
dec
lret
lds
mov
inc
inc
aas
aaa
iret
mov
mov
dec
test
aas
push
daa
mov
inc
mov
test
dec
mov
mov
mov
es
test
and
lret
dec
dec
mov
mov
and
push
mov
mov
leave
xor
cmp
mov
mov
mov
mov
mov
mov
daa
xor
les
test
cmpsl
inc
mov
mov
mov
mov
mov
cmp
cmp
mov
mov
push
inc
and
movsb
cmp
daa
mov
fisubs
mov
mov
inc
out
inc
cmpl
jl
neg
addl
jmp
pushl
pushl
push
push
push
call
movb
movb
movb
mov
movzbl
and
mov
cltd
orl
idiv
jmp
leave
push
mov
in
sub
and
jmp
jmp
rol
leave
es
mov
ss
dec
mov
mov
inc
mov
aaa
mov
es
movsl
cmpsl
and
xor
mov
mov
mov
mov
cmp
enter
and
dec
inc
cmp
and
test
cmp
mov
xor
mov
mov
mov
mov
daa
ret
aaa
iret
xor
mov
and
daa
inc
inc
mov
xor
inc
push
mov
shll
mov
ds
es
mov
and
int
int
inc
rolb
mov
mov
lret
aaa
cmp
dec
test
es
mov
aas
mov
mov
cmpsl
xor
into
inc
push
les
mov
mov
enter
into
mov
rol
and
lret
mov
inc
mov
and
and
dec
and
mov
inc
movsl
dec
sub
cmp
and
sub
ss
daa
and
cmp
mov
inc
cmp
mov
dec
movsl
cmp
mov
ret
movsl
mov
dec
sub
and
shlb
movsl
movsb
dec
and
and
movsl
ret
inc
mov
lds
mov
shlb
xor
mov
and
and
mov
lret
inc
dec
movsl
dec
inc
cmp
cmp
and
and
es
movsl
xor
inc
mov
mov
mov
and
daa
mov
and
mov
dec
rolb
xor
mov
mov
xor
mov
and
inc
mov
xor
and
mov
enter
cmpsl
faddp
mov
dec
mov
and
mov
cmp
push
cmpsl
dec
int
es
leave
ret
lds
mov
dec
inc
iret
mov
dec
movsb
inc
mov
mov
mov
inc
and
es
aas
dec
les
inc
xor
mov
and
iret
aas
rol
inc
and
mov
push
cmp
aaa
xor
inc
mov
movsb
ss
cmp
inc
enter
sarb
ret
and
test
movsl
mov
mov
sarb
mov
mov
and
int
movsl
mov
dec
iret
daa
ds
cmp
and
and
mov
dec
inc
roll
ret
mov
roll
mov
movsb
aaa
cmp
and
xor
and
iret
cmp
leave
fidivrs
inc
xor
rolb
cmp
ss
mov
rolb
sarb
lds
movsl
and
inc
cmp
daa
inc
les
xor
mov
dec
cmp
rorb
and
movsl
cmp
aaa
cmp
mov
ljmp
roll
jae
add
out
inc
add
mov
add
rorl
mov
add
mov
add
rol
repz
inc
add
dec
add
mov
movl
cmp
movl
je
movl
cmpl
jg
jmp
push
push
push
call
movl
movl
movl
movl
movl
mov
mov
sbbl
mov
subl
jmp
xchg
xchg
fstl
add
mov
scas
out
icebp
shr
jmp
iret
mov
dec
mov
shll
mov
daa
xor
test
sarb
movsb
mov
dec
movsb
mov
lret
ret
inc
and
into
cmp
mov
fidivrs
shll
mov
mov
aaa
mov
sub
and
mov
inc
mov
push
mov
and
ret
xor
and
aas
inc
and
mov
enter
mov
rorb
mov
daa
cmp
mov
inc
es
shlb
iret
lret
mov
dec
inc
mov
mov
dec
rolb
and
mov
aaa
push
xor
dec
daa
xor
leave
fisubs
ret
inc
push
daa
dec
and
mov
xor
inc
aaa
es
inc
sub
and
mov
dec
cmp
mov
xor
es
rolb
cmp
mov
int
and
and
aas
dec
ror
movsl
xor
mov
leave
cmp
mov
xor
mov
fisubs
mov
mov
inc
inc
mov
les
xor
rol
mov
mov
and
mov
movsl
xor
and
sub
dec
xor
and
and
cmpsl
push
dec
mov
inc
and
mov
lds
lret
xor
mov
daa
inc
xor
inc
mov
dec
movsb
sarb
movsl
les
and
mov
mov
mov
leave
mov
mov
es
aas
movsb
and
cmpsl
inc
cmp
mov
and
mov
rol
dec
cmp
dec
mov
mov
rorl
mov
shll
mov
mov
mov
lds
mov
and
movsl
ds
roll
inc
xor
mov
mov
ret
mov
lret
xor
into
daa
inc
mov
rolb
push
mov
ds
mov
inc
fidivs
daa
and
lret
and
sub
mov
enter
movsb
int
dec
mov
inc
test
mov
mov
lds
cmp
and
dec
mov
inc
movsb
leave
mov
lret
dec
sarb
mov
cmp
dec
mov
es
dec
inc
mov
and
mov
daa
mov
es
shlb
lret
movsb
leave
lds
cmpsl
mov
and
shll
aaa
ss
dec
dec
inc
mov
and
lret
lds
xor
aas
lds
xor
inc
mov
xor
rol
inc
dec
test
xor
and
push
inc
inc
ret
mov
and
mov
mov
xor
mov
shlb
mov
and
xor
xor
daa
mov
aaa
xor
cmp
cmp
mov
and
fimuls
lret
dec
mov
fmulp
dec
lret
mov
cmpsl
xor
inc
les
and
fisubs
jge
or
or
sbbl
sub
mov
jmp
fldcw
jl
lret
insb
stc
loope
pop
jno
cmpb
jmp
jmp
ds
xor
mov
and
dec
int
leave
xor
aas
daa
mov
ss
iret
cmp
mov
mov
dec
mov
daa
and
test
mov
aaa
inc
mov
and
les
mov
mov
inc
ret
dec
cmp
ret
mov
es
mov
mov
enter
mov
dec
xor
cmp
mov
lret
mov
fisubs
cmpsl
aaa
into
les
and
mov
iret
rorb
int
fisubs
daa
inc
iret
aas
mov
and
inc
mov
leave
mov
inc
enter
cmp
xor
mov
leave
inc
shlb
shll
mov
aas
shlb
lret
cmpsl
sarl
and
inc
sarb
inc
movsb
into
shrl
inc
dec
push
mov
mov
rorl
sub
es
fisubrs
mov
movl
into
xor
cmpsl
mov
leave
mov
and
and
cmp
push
enter
into
inc
mov
iret
dec
mov
inc
mov
ret
leave
dec
mov
daa
lds
les
inc
xor
cmp
lds
lds
mov
mov
and
int
mov
mov
push
dec
iret
mov
mov
cmpsl
and
xor
enter
sub
iret
into
xor
mov
dec
xor
cmpsl
les
mov
ds
les
cmp
and
aas
dec
test
into
lret
mov
int
leave
mov
sub
cmp
mov
test
and
and
mov
xor
rol
mov
ds
movsl
mov
iret
dec
and
mov
mov
int
and
sub
and
mov
shll
mov
cmp
daa
cmp
mov
xor
test
inc
sub
mov
xor
mov
mov
lds
es
mov
mov
lds
mov
iret
sub
ds
and
leave
dec
aas
shlb
fidivs
and
dec
inc
rolb
dec
and
inc
mov
movsl
cmpsl
mov
mov
fmulp
iret
ret
inc
xor
mov
ds
dec
sarb
xor
lds
fmulp
test
inc
mov
dec
mov
dec
leave
mov
mov
test
shrb
mov
xor
into
fisubs
mov
and
cmp
cmp
dec
dec
mov
fidivrs
mov
lret
mov
push
mov
sarb
cmp
dec
and
inc
xor
mov
leave
and
mov
push
xor
inc
mov
mov
lret
xor
xor
mov
cmp
dec
mov
inc
ss
xor
lds
call
and
in
adcl
add
adc
subl
or
or
adcl
xor
addl
xor
movl
mov
movl
mov
mov
movl
cmp
jne
mov
mov
mov
mov
shrd
shl
mov
mov
xor
shr
mov
xor
or
mov
mov
mov
shrd
jmp
mov
repnz
arpl
mov
add
push
jmp
mov
aas
dec
xor
lret
mov
xor
aaa
movsl
cmp
fisubs
push
inc
mov
mov
lds
inc
mov
ret
ss
leave
fidivrs
rol
xor
sub
inc
les
mov
es
mov
into
ds
mov
inc
mov
mov
mov
fisubs
inc
xor
mov
inc
sarb
cmp
into
mov
enter
sub
and
cmp
shlb
dec
ds
mov
dec
dec
dec
shll
cmp
xor
iret
mov
cmp
and
enter
sub
aaa
and
cmp
inc
and
into
ror
aas
xor
sarl
xor
iret
leave
and
test
cmp
test
roll
and
mov
lds
sub
mov
xor
daa
mov
aaa
enter
inc
dec
xor
xor
xor
ss
mov
aaa
mov
mov
cmp
daa
ret
mov
dec
mov
shll
enter
inc
lret
mov
cmp
aaa
es
xor
mov
push
fiadds
xor
mov
ds
inc
cmp
dec
and
and
cmp
inc
and
dec
cmp
mov
mov
and
mov
mov
aas
xor
mov
movsl
mov
dec
roll
daa
inc
dec
ss
and
xor
mov
and
and
ds
ss
xor
dec
inc
movsl
xor
movsl
test
dec
xor
dec
into
int
movsl
inc
into
fidivs
mov
mov
sub
xor
test
mov
mov
inc
mov
and
ret
xor
test
aaa
dec
inc
mov
iret
dec
mov
mov
xor
dec
inc
and
and
enter
push
mov
mov
faddp
xor
mov
and
lret
inc
aas
mov
cmp
and
mov
inc
aaa
aas
ds
aas
enter
inc
xor
and
lds
xor
inc
cmp
and
mov
cmp
and
dec
dec
leave
mov
inc
enter
and
es
mov
inc
daa
mov
cmp
mov
int
lds
aaa
mov
inc
cmp
inc
cmp
movsl
inc
inc
dec
mov
sub
mov
mov
inc
mov
rol
ds
ds
iret
mov
ret
mov
dec
aaa
movsl
mov
inc
inc
lds
dec
rol
and
mov
lds
xor
and
inc
aas
inc
mov
ret
sarb
dec
inc
xor
daa
dec
dec
inc
and
dec
cmp
lret
rorl
mov
into
test
aaa
xor
lds
shlb
lret
shlb
cmpsl
mov
shr
mov
mov
xor
xor
or
mov
movl
movl
movl
mov
add
mov
shl
xor
div
xor
mov
sub
div
mov
mov
movl
movl
movl
mov
jmp
enter
lods
push
test
pop
mov
jae
test
jmp
jmp
mov
inc
mov
xor
shlb
es
sub
lret
inc
and
mov
enter
iret
cmp
shrb
and
xor
mov
mov
shlb
mov
mov
inc
leave
movsb
mov
dec
lds
dec
and
inc
xor
ss
cmpsl
into
and
es
xor
xor
xor
int
dec
sub
sub
mov
mov
mov
ss
cmp
ret
xor
movsl
cmp
sub
inc
fidivrs
inc
xor
and
and
cmp
xor
iret
ds
push
xor
ss
cmpsl
movsb
inc
mov
and
enter
enter
cmp
dec
mov
inc
mov
ss
rcl
leave
iret
and
mov
mov
mov
lds
rorl
and
aaa
mov
mov
mov
mov
mov
inc
mov
mov
sub
mov
inc
and
mov
xor
daa
mov
lds
mov
sub
dec
ror
mov
mov
lret
cmp
mov
fmulp
mov
cmp
mov
mov
inc
leave
mov
mov
cmp
cmp
iret
int
cmp
mov
movsb
sub
xor
cmpsl
rorl
xor
mov
into
test
inc
cmp
inc
inc
rol
enter
xor
shll
int
daa
xor
inc
dec
enter
and
mov
ss
shlb
mov
xor
into
push
and
dec
dec
mov
and
movsl
enter
inc
dec
dec
mov
dec
inc
ds
and
movsb
mov
and
inc
ds
mov
and
and
es
xor
xor
mov
les
sub
mov
mov
mov
ss
int
xor
mov
dec
test
es
cmp
ret
lret
int
movsb
es
into
mov
enter
cmp
into
inc
dec
inc
mov
xor
xor
sub
mov
mov
enter
mov
and
xor
ret
daa
ss
movsl
dec
cmp
dec
int
movsb
dec
daa
xor
cmp
movsl
mov
xor
mov
mov
mov
aaa
mov
and
push
movsl
xor
sub
movsl
into
mov
mov
mov
inc
and
movsl
xor
push
les
mov
mov
aaa
rorb
movsb
cmpsl
enter
leave
lret
inc
and
ror
inc
fisubs
mov
cmp
cmpsl
mov
ret
mov
mov
mov
movsb
iret
xor
shlb
ror
inc
and
dec
shlb
into
dec
mov
dec
dec
inc
cmp
and
daa
mov
inc
in
sub
and
add
mov
jmp
dec
sarl
movsb
and
lret
jl
sbb
jmp
jmp
dec
mov
mov
mov
movsb
mov
sub
mov
mov
dec
into
shll
rol
les
dec
ds
mov
and
mov
mov
mov
mov
inc
mov
mov
sub
cmp
and
mov
mov
xor
push
aas
mov
mov
mov
int
mov
les
mov
lds
shll
and
aaa
mov
mov
lds
dec
and
inc
mov
mov
dec
mov
movsb
mov
dec
dec
xor
les
mov
mov
xor
es
mov
rolb
ret
daa
aas
cmpsl
shlb
dec
and
xor
cmp
ss
fisubrs
cmp
les
mov
mov
cmp
movsl
lret
mov
and
mov
inc
mov
int
and
sub
xor
inc
dec
shlb
dec
mov
ror
mov
dec
xor
movsb
mov
push
inc
dec
inc
xor
and
leave
aas
shll
and
xor
dec
and
dec
mov
mov
inc
daa
ret
rclb
mov
mov
push
mov
inc
leave
movsl
mov
mov
mov
enter
mov
int
into
and
mov
lds
mov
mov
inc
aaa
mov
es
fisubs
mov
int
cmp
iret
ds
inc
mov
dec
xor
inc
inc
xor
enter
mov
inc
inc
mov
iret
and
mov
daa
inc
fidivrs
cmp
rorl
xor
mov
les
mov
into
rolb
mov
fisubs
ret
aas
mov
mov
xor
xor
ds
mov
mov
enter
into
xor
cmp
enter
shlb
int
movsl
xor
xor
movsb
daa
mov
mov
ret
xor
int
leave
xor
enter
les
and
int
rol
dec
dec
inc
mov
inc
rorb
enter
ret
mov
aas
cmp
ret
les
inc
cmp
lds
movsl
mov
xor
and
xor
inc
lds
leave
cmpsl
mov
int
inc
test
xor
sub
and
xor
rorb
ret
xor
dec
movsl
mov
enter
mov
mov
into
daa
mov
mov
shlb
inc
mov
mov
shlb
cmp
movsb
and
mov
mov
ret
es
les
cmp
xor
mov
dec
into
mov
and
mov
testb
cmp
ja
mov
mov
shrd
xor
mov
shr
mov
xor
shl
or
mov
jmp
iret
shll
xchg
fdivs
test
fsubr
jmp
inc
mov
dec
xor
enter
dec
inc
cmpsl
mov
and
shlb
and
mov
cmp
and
and
mov
daa
xor
int
xor
inc
push
sub
mov
shlb
shlb
xor
mov
xor
shlb
aaa
xor
movsb
rol
mov
inc
xor
inc
test
sub
mov
into
cmpsl
aas
xor
and
inc
dec
iret
mov
dec
inc
inc
mov
push
inc
mov
into
and
mov
es
aaa
into
inc
and
mov
cmp
mov
es
movsb
inc
xor
cmp
inc
cmp
iret
mov
and
mov
cmp
mov
xor
leave
inc
dec
inc
int
int
mov
mov
ss
lds
dec
mov
lret
dec
movsl
push
xor
inc
mov
into
inc
mov
dec
movsb
xor
mov
and
les
sub
mov
aas
enter
dec
test
aaa
dec
aaa
inc
mov
xor
mov
shll
inc
ret
mov
xor
cmpsl
dec
mov
movsl
les
mov
les
inc
xor
cmp
and
and
aaa
inc
dec
enter
int
dec
test
xor
sub
fisubs
lret
mov
inc
mov
mov
cmp
inc
es
movsb
aas
dec
and
daa
movsl
sub
enter
into
mov
and
movsl
iret
enter
mov
movsb
movsb
sub
and
inc
and
daa
daa
shlb
mov
movsb
and
mov
mov
into
mov
dec
cmp
iret
mov
inc
mov
and
cmpsl
mov
ret
ss
inc
daa
test
xor
lds
fisubs
xor
mov
xor
movsb
shll
shll
movsl
dec
aas
xor
and
daa
and
aas
inc
mov
cmp
cmp
and
lret
cmpsl
cmp
mov
and
ror
les
movsl
dec
into
daa
les
mov
shlb
and
and
and
lds
aaa
dec
enter
mov
inc
mov
and
mov
aaa
les
es
enter
into
dec
mov
dec
into
dec
enter
xor
shlb
cmpsl
xor
xor
mov
and
xor
enter
sub
xor
xor
cmp
mov
enter
mov
mov
lds
es
lds
and
es
mov
inc
test
dec
and
aas
lret
mov
int
ss
int
mov
mov
mov
mov
sarb
xor
and
dec
xor
test
test
cmp
int
mov
inc
leave
into
cmp
dec
mov
pop
pop
leave
ret
movl
cmp
movl
jae
movl
cmp
jae
decl
shrd
shr
ret
cmpl
jle
jmp
pushl
pushl
call
mov
xor
and
shr
ret
xor
xor
ret
mov
mov
ret
mov
mov
ret
push
mov
jmp
inc
cmpsl
cmpsl
stos
lret
mov
insl
lock
push
jmp
xor
sub
cmp
inc
daa
mov
mov
inc
mov
inc
cmp
fidivs
mov
aas
aaa
cmp
inc
movsl
inc
int
cmp
cmp
cmp
mov
cmp
mov
dec
and
mov
mov
mov
es
mov
dec
aaa
mov
cmp
cmpsl
lds
cmp
movsl
sarb
xor
dec
xor
fiadds
mov
dec
leave
cmp
mov
and
es
mov
and
inc
and
ds
inc
and
and
mov
es
lret
mov
dec
xor
mov
mov
lret
mov
movsl
and
mov
xor
aas
movsb
and
inc
enter
test
mov
and
aaa
inc
mov
ret
push
test
daa
enter
inc
and
mov
rol
enter
es
inc
faddp
daa
mov
cmp
inc
and
mov
inc
dec
xor
dec
mov
int
into
mov
dec
aaa
fidivs
push
inc
iret
xor
inc
inc
leave
aas
xor
mov
test
ret
into
dec
push
leave
mov
lret
sub
les
mov
xor
xor
mov
aas
cmp
mov
leave
mov
and
test
sarb
inc
inc
aaa
mov
dec
cmpsl
mov
mov
inc
int
xor
xor
shlb
mov
cmp
daa
mov
push
leave
mov
daa
push
xor
inc
mov
mov
inc
cmp
dec
ret
movsl
cmpsl
sub
cmp
cmpsl
lds
cmp
cmp
dec
dec
inc
shll
xor
xor
mov
lret
inc
daa
mov
mov
enter
aaa
mov
dec
dec
cmp
mov
mov
mov
mov
and
inc
inc
mov
int
enter
ss
and
dec
movsl
mov
mov
inc
cmp
mov
enter
dec
and
test
shlb
movsl
mov
and
movsl
aaa
mov
dec
xor
xor
inc
fidivs
shlb
dec
xor
dec
xor
enter
daa
mov
int
mov
mov
leave
mov
and
roll
inc
shlb
and
mov
dec
mov
mov
dec
push
inc
dec
leave
cmp
and
inc
ss
es
and
test
int
xor
mov
movsb
movsb
dec
and
int
sub
lret
dec
push
shlb
and
iret
dec
mov
xor
dec
mov
inc
aaa
xor
xor
mov
les
dec
rol
aas
dec
movsb
int
xor
xor
xor
shlb
dec
dec
test
mov
mov
xor
mov
iret
mov
shlb
xor
xor
mov
dec
movsb
and
mov
cmpsl
int
inc
sub
ret
inc
movsb
inc
inc
sub
ror
es
push
iret
mov
xor
aas
test
and
int
xor
fiadds
mov
int
cmp
sub
mov
xor
lret
dec
mov
daa
lds
mov
leave
mov
lds
inc
aaa
sub
xor
ret
enter
inc
movsl
sub
ds
daa
dec
ds
dec
test
mov
sub
mov
mov
mov
addl
sub
mov
push
mov
mov
movl
sbb
mov
adc
jmp
ja
out
hlt
js
jl
in
fsubl
lods
lds
jmp
aaa
cmpsl
mov
int
and
rol
dec
shlb
sub
aaa
test
ret
and
cmp
into
shlb
aas
mov
into
xor
dec
inc
mov
dec
into
and
mov
inc
ret
xor
mov
dec
mov
mov
and
and
mov
mov
ss
daa
lret
mov
mov
shlb
mov
mov
mov
les
mov
xor
aas
ds
aaa
mov
inc
xor
dec
mov
mov
mov
lret
rorb
mov
inc
mov
xor
mov
rorb
dec
and
and
mov
leave
inc
mov
and
inc
mov
les
mov
lds
mov
enter
ss
xor
mov
cmp
dec
lret
mov
dec
mov
sub
sarb
mov
les
dec
mov
dec
xor
ret
cmp
ror
mov
push
xor
mov
ds
movsb
cmp
mov
mov
dec
and
mov
shll
inc
mov
enter
movsb
cmp
ss
sub
mov
inc
xor
aaa
dec
test
movsb
mov
dec
shll
sub
mov
inc
movsb
dec
movsl
mov
sub
mov
movsl
leave
dec
mov
push
mov
mov
dec
and
xor
dec
and
aas
and
inc
es
and
mov
leave
xor
mov
and
inc
sarl
aaa
inc
dec
ds
movsb
iret
mov
push
inc
lret
and
xor
mov
mov
ret
mov
and
cmpsl
push
cmp
cmpsl
es
inc
mov
ss
mov
dec
cmp
mov
mov
mov
mov
dec
shll
mov
aas
mov
dec
dec
mov
mov
ss
inc
movsl
mov
mov
enter
les
xor
mov
sub
inc
sarl
lds
ror
iret
mov
mov
and
mov
mov
mov
mov
cmp
mov
and
mov
and
sarb
into
dec
and
mov
mov
sub
inc
inc
lds
lret
inc
mov
push
dec
and
push
mov
mov
ss
cmp
and
enter
and
and
shll
xor
mov
and
ror
xor
and
sarb
and
shlb
mov
mov
rcl
rol
leave
leave
lds
mov
and
mov
xor
mov
mov
mov
enter
xor
dec
int
cmpsl
daa
mov
mov
mov
dec
xor
lret
mov
ret
mov
dec
sub
cmp
mov
and
and
shlb
mov
cmp
aaa
rorb
aaa
push
shll
int
mov
and
mov
mov
daa
cmp
cmp
mov
sub
aas
mov
mov
outsl
in
push
cltd
or
orl
jmp
enter
dec
stos
test
adc
xchg
pop
and
testl
jmp
inc
xor
daa
and
ficoms
xor
and
and
xor
int
inc
xor
push
dec
into
int
sub
xor
cmpsl
dec
fisubs
leave
and
aas
enter
mov
dec
aas
dec
cmp
and
dec
inc
lds
movsb
and
inc
mov
mov
dec
fmulp
and
xor
inc
dec
enter
into
mov
ds
fisubrs
mov
enter
int
enter
mov
cmp
mov
mov
inc
shlb
mov
dec
aaa
and
inc
cmpsl
xor
int
lret
mov
mov
and
mov
mov
mov
leave
inc
dec
ss
and
xor
cmp
dec
inc
cmp
and
es
sub
and
movsb
and
xor
rorb
aas
lds
mov
movsb
int
test
aas
inc
mov
mov
movsl
inc
fidivs
movsb
inc
fmulp
leave
xor
dec
mov
mov
inc
mov
sarb
and
test
shlb
fiadds
dec
enter
mov
xor
cmp
inc
inc
inc
mov
test
enter
shrl
cmp
push
and
enter
inc
push
movsl
rolb
les
push
and
xor
rorb
movsl
shll
and
enter
lds
dec
es
mov
mov
push
int
xor
mov
shlb
inc
ss
mov
leave
inc
xor
inc
mov
push
ds
push
daa
leave
es
lds
cmpsl
mov
mov
mov
lret
and
mov
xor
test
and
mov
daa
ss
dec
cmp
cmp
mov
daa
mov
mov
inc
xor
xor
ds
and
push
mov
lds
mov
mov
mov
sarb
les
ror
and
aaa
daa
ss
mov
mov
inc
iret
mov
and
test
mov
mov
mov
and
daa
mov
mov
and
daa
mov
xor
ret
movsl
xor
mov
and
xor
xor
ss
cmp
mov
xor
movl
inc
mov
dec
and
and
leave
and
mov
iret
inc
xor
sub
mov
fimuls
xor
mov
ss
lret
inc
and
shlb
mov
dec
aaa
inc
cmp
and
mov
inc
inc
xor
cmp
mov
mov
and
test
and
enter
leave
inc
les
ret
mov
mov
movsb
dec
xor
les
fidivs
into
dec
movsb
mov
sub
cmpsl
shll
and
and
xor
es
lret
mov
xor
shlb
test
dec
lret
int
mov
movl
cmp
sarb
xor
xor
inc
movsl
sub
leave
mov
into
mov
mov
movsb
inc
mov
aas
mov
and
mov
mov
mov
sub
not
jmp
shll
mov
mov
es
cs
lret
pusha
mov
inc
jmp
jmp
mov
fidivs
inc
dec
fiadds
cmp
and
mov
shlb
leave
dec
inc
movsl
mov
mov
ss
mov
and
mov
ret
and
mov
mov
mov
mov
mov
shlb
and
test
aas
lds
movsb
inc
ds
rcr
dec
inc
cmp
dec
enter
mov
and
sub
ret
and
ss
cmpsl
xor
leave
mov
int
es
mov
aaa
cmp
mov
and
shlb
test
mov
daa
lret
and
cmpsl
and
cmp
sub
dec
xor
sub
aas
sub
mov
int
aaa
sub
into
shlb
dec
lds
into
and
and
and
mov
enter
mov
and
les
mov
xor
lds
mov
xor
les
les
mov
dec
movsb
daa
ds
into
cmpsl
xor
movsl
ret
enter
dec
xor
ds
xor
and
mov
ret
inc
mov
ss
mov
shlb
mov
xor
xor
daa
xor
inc
xor
and
dec
cmp
mov
shlb
into
mov
movsb
push
xor
xor
aaa
sub
lret
iret
movsl
mov
push
mov
sub
mov
ss
ror
and
leave
dec
leave
and
mov
dec
ds
and
mov
xor
xor
and
cmp
dec
mov
les
movsl
mov
test
cmp
cmp
cmpsl
mov
dec
mov
mov
mov
xor
and
daa
mov
dec
shll
inc
cmp
xor
mov
cmp
inc
mov
iret
mov
mov
inc
cmp
aaa
test
push
xor
push
dec
test
into
enter
and
xor
lret
sub
int
shll
and
dec
test
movsb
push
dec
and
xor
mov
mov
cmpsl
mov
movsb
mov
les
fmulp
and
mov
mov
mov
enter
cmpsl
xor
dec
es
test
leave
mov
dec
iret
xor
sub
sub
enter
ss
and
movsl
mov
xor
mov
inc
xor
into
mov
xor
fidivrs
inc
inc
inc
dec
xor
mov
iret
mov
mov
inc
mov
dec
dec
mov
cmpsl
dec
movsl
mov
lds
mov
sarb
fidivrs
les
mov
movsl
movsb
ret
and
dec
inc
mov
and
dec
dec
and
dec
dec
dec
dec
mov
mov
inc
iret
aas
sub
ret
mov
xor
mov
iret
es
iret
cmp
mov
mov
les
dec
iret
push
cmp
cmpsl
xor
movsl
mov
dec
and
int
mov
xor
mov
int
aas
ror
xor
lret
into
iret
push
mov
cmp
movsl
int
mov
ds
mov
es
mov
mov
mov
mov
push
xor
lret
xor
dec
iret
xor
xor
cmp
mov
ret
shlb
and
cmp
mov
mov
sbb
mov
orl
orl
cmpl
jge
xor
or
sbb
jmp
push
pushl
pushl
pushl
pushl
call
orl
lea
mov
mov
mov
cmpl
jg
jmp
pushl
push
push
pushl
call
mov
jmp
xor
repz
jl
jnp
fcoms
hlt
leave
addr16
mov
inc
jmp
jmp
cmp
dec
ds
sub
ds
cmpsl
mov
xor
dec
ss
enter
inc
lret
and
roll
and
and
cmpsl
mov
movsb
inc
and
and
mov
dec
xor
cmp
xor
shlb
shlb
iret
inc
xor
mov
dec
mov
and
ret
lret
into
xor
lret
mov
vcmpss
dec
iret
ss
mov
aas
cmp
inc
cmp
int
ss
dec
aas
daa
lret
ret
daa
es
mov
xor
les
faddp
es
mov
mov
ss
test
xor
inc
mov
into
mov
movsl
mov
and
es
mov
cmp
mov
and
leave
into
xor
mov
inc
mov
mov
and
mov
mov
dec
shlb
inc
mov
xor
leave
mov
iret
mov
push
movsl
sub
test
daa
mov
mov
cmp
mov
and
and
aas
iret
fisubrs
xor
mov
mov
leave
dec
mov
mov
mov
and
int
enter
xor
inc
xor
iret
ds
mov
xor
rorb
dec
lret
ds
aas
and
movsb
leave
dec
xor
mov
xor
push
inc
mov
sub
rclb
dec
mov
mov
sarl
and
mov
mov
test
ret
mov
dec
cmpsl
and
iret
mov
xor
aas
cmpsl
aas
mov
sub
movsl
mov
ror
and
mov
and
mov
mov
leave
mov
xor
xor
mov
dec
lret
cmp
xor
dec
leave
mov
dec
and
movsb
mov
aaa
inc
inc
shll
push
mov
mov
and
leave
mov
mov
xor
mov
dec
cmp
mov
mov
xor
dec
mov
mov
dec
cmp
mov
mov
ds
es
mov
lret
mov
dec
dec
ss
shlb
dec
mov
dec
aaa
mov
cmp
leave
cmpsl
aas
inc
mov
sub
aaa
mov
dec
mov
and
int
dec
dec
xor
mov
mov
les
and
daa
int
mov
mov
mov
dec
mov
cmp
iret
dec
mov
inc
leave
enter
dec
sarb
ret
mov
dec
fidivrs
ss
aas
aas
enter
daa
aaa
movsb
movsb
ss
mov
lret
mov
into
es
dec
mov
mov
and
mov
and
test
mov
ds
xor
leave
dec
int
sub
and
xor
xor
dec
dec
mov
int
mov
mov
inc
dec
mov
mov
cmp
cmp
mov
into
mov
dec
test
aaa
daa
fmulp
inc
inc
movsb
daa
and
int
xor
lds
cmp
xor
cmp
inc
cmp
mov
push
xor
movsl
add
mov
mov
mov
mov
shrd
cmpl
jbe
movl
jmp
pushl
pushl
push
call
shr
mov
mov
jmp
lock
inc
mull
add
or
ja
cld
jmp
jmp
int
mov
and
mov
cmp
ror
dec
and
sarb
xor
and
mov
mov
movsb
mov
enter
lds
ret
mov
dec
dec
mov
ss
fidivrs
mov
movsl
xor
and
mov
cmp
aaa
mov
and
mov
ret
shll
enter
movsl
cmp
cmp
rcr
mov
movsl
dec
test
rol
enter
daa
and
mov
mov
mov
inc
mov
dec
mov
inc
dec
lds
mov
mov
dec
xor
aas
and
lret
rolb
into
mov
mov
mov
enter
mov
inc
lds
cmp
es
mov
int
mov
xor
aaa
shlb
mov
inc
cmp
rcl
and
mov
xor
cmpsl
ds
and
dec
and
iret
inc
test
fidivs
mov
mov
xor
movsb
lret
ret
movsb
lret
and
daa
mov
ds
and
mov
mov
inc
mov
movsb
xor
lret
inc
mov
sub
xor
leave
mov
xor
mov
daa
and
mov
mov
lds
cmp
es
xor
sub
dec
les
xor
and
xor
lds
sarb
ds
es
inc
xor
mov
mov
dec
dec
mov
mov
xor
dec
and
dec
xor
lret
aas
daa
movsb
cmp
inc
and
and
inc
inc
aaa
cmp
lret
dec
enter
dec
test
movsl
inc
and
lret
shll
sub
dec
into
mov
mov
and
dec
dec
test
inc
dec
xor
mov
xor
and
xor
dec
mov
ds
iret
cmp
mov
aaa
leave
mov
mov
mov
mov
sub
movsb
xor
inc
daa
ror
cmpsl
xor
leave
ss
lret
mov
xor
cmp
ds
dec
and
sub
iret
leave
les
mov
ss
mov
sub
int
cmp
test
test
mov
and
inc
and
and
inc
aaa
sub
xor
mov
mov
cmp
cmp
xor
mov
dec
sub
dec
cmp
dec
mov
inc
mov
leave
xor
xor
enter
xor
mov
lret
fidivrs
mov
les
and
mov
test
mov
inc
into
cmpsl
inc
leave
and
inc
mov
xor
xor
movsl
and
dec
sub
roll
mov
iret
mov
mov
mov
int
test
and
mov
xor
xor
mov
daa
mov
shlb
ss
xor
enter
mov
aas
and
inc
sub
inc
inc
xor
mov
leave
rclb
and
mov
dec
test
push
int
shlb
cmp
mov
mov
mov
aaa
mov
mov
rorb
rclb
add
mov
movl
cmpl
jl
jmp
push
push
pushl
call
movl
movl
movl
movl
movl
movl
movl
sbb
movl
adcl
movl
mov
and
movl
movl
movl
andl
movl
and
movl
sbbl
movl
orl
movl
adc
movl
movl
cmpl
jle
sbb
jmp
push
pushl
push
push
pushl
pushl
push
call
movl
movl
movl
mov
shl
mov
movl
push
push
xorl
push
push
call
xor
mov
mov
xor
mov
mov
sub
imul
mov
cmpl
jl
jmp
push
call
mov
sub
mov
jmp
cmp
outsl
pop
mov
and
cld
jae
inc
and
vpsubsw
push
jmp
dec
cmp
ds
mov
iret
inc
shlb
lds
cmp
mov
xor
xor
mov
fidivs
mov
mov
and
mov
daa
mov
ret
lret
iret
dec
mov
cmpsl
test
mov
mov
inc
inc
mov
lret
test
rorl
aas
ss
xor
xor
inc
dec
mov
mov
movsb
xor
xor
ss
dec
rcl
iret
mov
lds
into
mov
mov
cmp
ds
mov
sub
push
mov
mov
cmp
xor
into
and
mov
push
into
xor
mov
and
push
fidivrs
int
and
and
mov
cmpsl
ss
inc
dec
xor
into
ret
inc
and
mov
movsl
movsb
ss
int
aaa
dec
mov
mov
movsl
movsl
daa
inc
movsb
xor
mov
movsb
and
dec
inc
inc
inc
aaa
mov
cmp
iret
inc
mov
and
mov
es
xor
mov
ss
xor
xor
mov
int
push
mov
mov
mov
enter
cmpsl
and
mov
and
mov
and
cmp
mov
cmp
dec
mov
cmpsl
aas
inc
dec
daa
mov
dec
mov
mov
mov
mov
mov
inc
mov
inc
inc
ret
int
movsb
mov
movsb
and
ret
cmp
aas
mov
mov
aas
ret
fisubrs
into
lret
mov
mov
xor
lds
int
fiadds
xor
les
mov
inc
dec
mov
iret
ret
and
xor
movsl
mov
mov
mov
leave
and
leave
mov
mov
leave
xor
ror
inc
mov
xor
ror
xor
sub
into
and
inc
test
lds
mov
xor
mov
push
mov
lret
dec
xor
cmp
mov
aaa
aaa
mov
lds
mov
iret
mov
mov
int
mov
movl
test
cmp
dec
les
inc
lret
mov
cmp
rol
sub
mov
mov
mov
fidivs
mov
and
ret
aas
cmpsl
into
xor
into
mov
ret
inc
cmp
and
sub
xor
iret
sub
rorl
ror
aaa
inc
and
dec
cmp
xor
inc
mov
xor
cmp
es
aas
mov
lret
xor
shlb
mov
dec
mov
mov
movsl
ror
dec
mov
enter
lret
cmp
mov
mov
and
inc
inc
rorb
and
inc
ds
rorl
daa
mov
daa
mov
mov
ret
mov
mov
xor
ret
mov
movsl
les
and
dec
mov
inc
ds
int
inc
dec
iret
inc
lret
movsb
inc
cmp
dec
mov
mov
dec
inc
cmpsl
cmp
ds
and
les
shll
push
and
dec
test
inc
dec
xor
mov
into
xor
mov
mov
lea
mov
mov
or
and
add
mov
subl
jmp
insl
test
mov
cmpsb
scas
gs
cld
or
adcl
jmp
jmp
movsl
dec
inc
aaa
xor
ror
and
ror
mov
inc
cmp
dec
dec
ret
aaa
mov
mov
test
inc
mov
cmp
lds
iret
aaa
shll
inc
dec
xor
aaa
cmpsl
mov
and
inc
iret
test
and
roll
mov
mov
cmp
leave
cmpsl
int
mov
push
cmp
into
movsb
leave
and
movsl
es
mov
dec
dec
int
inc
shlb
ret
dec
cmpsl
mov
sub
into
les
lret
xor
movsb
mov
movsl
iret
test
and
movsl
dec
mov
mov
enter
shlb
xor
dec
ds
sub
daa
movsl
movsl
cmp
and
into
inc
cmp
mov
mov
mov
mov
and
cmpsl
lret
leave
and
and
cmp
xor
mov
mov
sub
mov
mov
es
xor
mov
mov
cmpsl
mov
xor
mov
mov
dec
into
mov
cmp
aas
cmp
mov
dec
and
mov
les
dec
mov
shll
aaa
vmovaps
and
mov
xor
dec
sub
ss
mov
mov
dec
inc
inc
int
and
cmpsl
cmp
iret
into
and
mov
mov
xor
rol
enter
mov
cmp
mov
daa
inc
xor
aaa
dec
shll
mov
xor
fidivrs
les
mov
into
fmulp
and
mov
dec
movsl
sub
mov
mov
cmpsl
fiadds
and
ret
dec
leave
enter
ds
mov
inc
movsl
lret
mov
inc
iret
daa
inc
mov
xor
inc
and
and
mov
lret
inc
dec
inc
dec
iret
fidivs
shll
mov
mov
daa
mov
mov
and
cmp
cmp
les
es
mov
dec
and
mov
cmp
cmp
mov
mov
and
inc
lret
mov
mov
xor
fidivs
inc
cmp
mov
cmp
cmp
shlb
rol
sub
fisubs
sarl
inc
inc
rorb
cmpsl
dec
ror
and
daa
and
lret
ds
inc
shlb
mov
mov
dec
movsb
mov
mov
and
ret
mov
lret
inc
es
dec
mov
enter
and
into
inc
enter
mov
cmpsl
ret
inc
xor
dec
and
mov
mov
inc
dec
ret
shll
and
xor
mov
sub
dec
inc
inc
int
mov
leave
mov
movsl
dec
and
leave
into
sub
mov
movsb
dec
cmpsl
iret
mov
aas
mov
xor
dec
cmp
into
dec
xor
dec
xor
xor
aas
sub
and
xor
xor
ds
enter
lret
mov
and
mov
and
dec
mov
ss
dec
mov
inc
mov
mov
dec
mov
iret
mov
jae
inc
add
mov
add
add
add
sub
add
testb
add
faddl
sbb
mov
sarb
ja
sbb
loop
and
push
jmp
mov
les
mov
dec
xor
dec
push
mov
leave
mov
mov
dec
shll
into
mov
cmp
and
and
les
xor
test
sub
mov
mov
lret
enter
lds
mov
dec
mov
cmp
mov
and
cmp
int
mov
mov
mov
mov
mov
daa
xor
xor
inc
xor
sub
rol
movsl
rclb
ss
mov
push
push
mov
inc
les
mov
mov
inc
cmp
es
push
inc
mov
aaa
dec
xor
push
movsl
daa
inc
dec
test
xor
xor
dec
dec
dec
inc
mov
into
and
iret
aas
aaa
dec
inc
rcll
xor
mov
dec
mov
cmp
cmp
dec
mov
lds
xor
les
xor
mov
xor
mov
mov
sarl
test
and
inc
inc
dec
xor
mov
rorl
fmulp
lds
shll
movsl
and
mov
es
mov
mov
int
aas
mov
mov
inc
rol
xor
fiadds
mov
sarl
lret
dec
xor
mov
dec
and
and
lds
inc
rolb
movsl
mov
and
mov
and
xor
leave
mov
mov
cmp
mov
mov
xor
mov
ret
mov
les
cmpsl
mov
and
xor
iret
movl
dec
mov
mov
sub
mov
xor
mov
rorl
mov
test
aas
xor
ror
xor
mov
dec
cmp
int
xor
push
and
leave
aaa
mov
fidivs
cmp
and
mov
leave
mov
inc
aas
enter
roll
xor
cmp
mov
xor
and
xor
shll
es
dec
mov
enter
and
mov
and
mov
iret
movsb
enter
mov
mov
inc
les
and
cmp
and
dec
iret
fimuls
inc
mov
ss
daa
dec
and
leave
inc
mov
aaa
ret
cmp
inc
and
mov
inc
les
mov
movsl
lret
cmpsl
sub
xor
mov
mov
mov
cmp
xor
xor
inc
enter
mov
cmpsl
movsb
dec
inc
xor
dec
mov
movsb
ret
mov
inc
into
mov
xor
test
test
mov
cmpsl
mov
aaa
leave
inc
inc
dec
cmp
mov
and
dec
xor
inc
mov
mov
daa
and
mov
movsl
iret
ret
inc
inc
mov
int
sub
mov
inc
leave
inc
into
lds
aas
rorb
mov
fidivs
int
mov
and
mov
mov
movsb
ds
inc
fimuls
daa
mov
movsb
mov
shlb
inc
cmp
movsb
mov
mov
lret
inc
cmp
mov
movsl
mov
mov
iret
iret
dec
xor
ds
int
or
test
add
xor
mov
cmpl
jbe
adcl
sub
jmp
push
pushl
call
mov
shrd
shr
mov
mov
shl
xor
orl
xor
or
movl
mov
movl
cmp
movl
jne
cmpl
jle
xor
and
jmp
pushl
call
mov
jmp
out
fstps
fmulp
and
push
add
pop
cmp
jmp
jmp
xor
mov
inc
mov
xor
inc
leave
mov
and
mov
lret
aaa
dec
ds
dec
into
movsl
cmp
movsl
inc
shlb
lret
inc
inc
aaa
lret
mov
fisubs
mov
movsb
mov
leave
cmp
mov
mov
dec
sarl
dec
mov
into
mov
cmp
and
test
iret
mov
xor
sub
mov
ds
rol
int
int
sarb
ret
dec
cmpsl
dec
sub
mov
fmulp
dec
inc
les
les
inc
and
ds
and
leave
dec
les
inc
into
leave
leave
mov
mov
dec
mov
mov
shll
xor
mov
mov
shll
and
shlb
and
and
iret
sub
mov
mov
mov
xor
inc
into
movsl
ret
mov
shlb
and
mov
ds
fidivs
daa
dec
daa
and
and
fidivs
cmp
mov
leave
inc
shlb
leave
aas
ret
iret
lret
mov
dec
dec
xor
dec
and
sub
xor
mov
cmp
and
mov
mov
movsb
inc
es
push
inc
and
shlb
mov
inc
leave
inc
cmp
inc
les
cmp
cmp
rcll
movsl
dec
int
dec
les
dec
mov
mov
mov
xor
push
es
and
xor
push
dec
mov
shll
ds
aas
ret
dec
mov
enter
test
dec
lret
mov
mov
mov
push
mov
shlb
cmp
inc
mov
xor
lds
inc
inc
mov
xor
inc
shlb
lret
inc
lret
mov
lret
dec
movsb
lds
ret
xor
mov
sarl
movsl
xor
mov
mov
xor
push
ss
and
mov
ss
mov
enter
mov
mov
xor
ret
lds
and
mov
ret
cmp
xor
and
rol
fidivrs
mov
ss
fisubrs
mov
dec
test
les
and
dec
xor
movsl
inc
cmp
and
push
daa
movsl
shrb
mov
movsl
cmpsl
es
xor
dec
mov
inc
mov
xor
dec
mov
mov
and
mov
and
inc
mov
ds
mov
mov
and
and
xor
cmpsl
mov
lds
mov
mov
daa
xor
and
mov
and
mov
and
int
mov
mov
xor
into
inc
cmpsl
mov
xor
mov
xor
and
inc
mov
ret
mov
int
into
ss
dec
into
mov
movsl
cmp
mov
fidivrs
movsb
push
mov
movsb
dec
mov
mov
mov
movsl
movsl
and
mov
mov
fisubs
dec
daa
test
and
and
aas
fimuls
mov
mov
aas
lds
mov
and
mov
and
dec
into
aaa
mov
push
and
rorl
mov
xor
mov
mov
and
mov
xorl
shrd
andl
mov
add
mov
orl
xor
shr
mov
addl
xor
or
orl
shl
and
jmp
and
mov
in
push
inc
int
jmp
push
xor
inc
ss
daa
dec
into
lds
xor
lds
aaa
inc
mov
shlb
and
ss
mov
and
mov
mov
and
dec
and
dec
mov
xor
xor
mov
ds
cmp
dec
iret
xor
mov
cmp
mov
ss
mov
inc
mov
aaa
movsl
xor
and
xor
and
mov
inc
cmp
dec
mov
mov
mov
and
xor
cmp
sub
inc
and
cmp
inc
fidivs
cmp
and
xor
mov
cmp
mov
mov
es
cmpsl
daa
mov
enter
xor
rol
mov
dec
lds
ds
inc
and
daa
les
movsb
leave
mov
aaa
push
mov
sub
and
ret
ds
xor
mov
dec
dec
mov
and
cmp
mov
daa
enter
enter
mov
xor
mov
cmp
mov
inc
cmpsl
lret
mov
into
inc
dec
mov
mov
daa
shlb
xor
shlb
lret
leave
inc
inc
test
xor
inc
lds
mov
xor
xor
sarb
dec
int
movsb
xor
inc
les
xor
int
mov
cmp
daa
mov
mov
mov
mov
fisubs
mov
int
xor
xor
leave
dec
inc
mov
inc
and
dec
mov
es
inc
mov
xor
mov
mov
movsb
ds
mov
inc
movsb
int
mov
mov
movsl
mov
int
mov
mov
lret
cmp
cmp
mov
leave
mov
mov
mov
and
test
movsb
cmp
aas
les
mov
xor
aas
movsb
les
movsl
enter
lret
daa
inc
dec
inc
cmp
inc
mov
push
inc
inc
movsb
mov
leave
and
enter
mov
mov
mov
mov
and
mov
mov
xor
mov
and
xor
xor
lret
and
cmp
and
aaa
movsb
enter
mov
mov
mov
mov
movsb
mov
mov
dec
mov
mov
mov
inc
ror
dec
xor
test
rorb
ret
mov
test
cmp
dec
daa
aas
mov
into
movl
es
cmp
inc
inc
mov
cmpsl
movsb
into
inc
mov
shlb
movl
into
dec
into
iret
mov
and
leave
iret
and
and
dec
xor
mov
xor
inc
dec
aas
mov
cmpsl
inc
and
push
int
dec
mov
int
dec
xor
cmp
cmpsl
fidivs
aas
xor
xor
mov
mov
lret
xor
ss
mov
cmp
cmp
daa
ret
and
and
cmp
mov
daa
and
xor
xor
mov
mov
xor
mov
shlb
xor
cmp
mov
mov
es
es
mov
mov
dec
ds
movsb
ds
cmpsl
inc
mov
mov
adc
or
mov
mov
sbb
add
and
mov
mov
add
mov
cmpl
jle
movl
jmp
pushl
call
shrd
shr
mov
mov
xor
shl
cmpl
jge
sub
jmp
push
pushl
push
push
call
xor
or
mov
mov
shrd
shr
mov
addl
mov
neg
mov
xorl
xor
xor
orl
or
addl
shl
lea
cmpl
jge
xor
or
mov
sub
xor
jmp
pushl
call
mov
mov
jmp
popa
jp
mov
outsl
mov
test
mov
jmp
sub
ror
dec
leave
mov
dec
enter
mov
ss
mov
sub
dec
and
mov
cmp
dec
mov
and
lds
shlb
iret
iret
mov
int
movsl
es
into
inc
lret
iret
shlb
shlb
movsl
ret
mov
movsl
xor
enter
dec
movsb
mov
aaa
mov
es
mov
int
sarb
and
movsl
into
and
mov
xor
into
dec
iret
push
dec
mov
enter
fiadds
and
lds
shlb
mov
movsl
aaa
cmpsl
mov
aaa
and
xor
mov
inc
shlb
cmp
mov
inc
les
cmp
cmp
inc
les
fidivrs
mov
cmpsl
inc
int
inc
leave
push
rol
cmp
int
cmp
iret
les
mov
daa
mov
mov
es
shlb
and
mov
and
iret
inc
roll
lds
dec
shlb
and
mov
xor
les
movsl
shll
cmp
lret
inc
mov
and
mov
aas
movsb
inc
xor
mov
and
inc
dec
shlb
xor
inc
xor
daa
aas
enter
leave
mov
lret
inc
les
mov
inc
mov
shlb
test
dec
ret
inc
and
dec
xor
ss
daa
aas
mov
mov
xor
aas
inc
test
leave
inc
and
mov
int
cmp
shll
mov
mov
aaa
mov
mov
aas
dec
xor
movl
sub
ret
mov
mov
mov
rcl
xor
and
rol
mov
aas
dec
xor
sarb
and
mov
mov
and
es
and
cmp
mov
cmp
mov
mov
xor
leave
movsb
dec
mov
mov
movsb
dec
inc
mov
mov
test
mov
mov
mov
inc
mov
movsl
dec
inc
movsl
dec
mov
and
mov
enter
mov
mov
and
iret
xor
lret
shlb
xor
inc
movsb
cmp
shll
mov
mov
and
and
cmp
dec
inc
int
shll
mov
inc
mov
cmpsl
inc
sarb
mov
xor
mov
and
and
test
les
xor
mov
into
mov
dec
and
dec
aaa
mov
cmp
int
mov
sarl
xor
mov
int
es
dec
xor
mov
cmp
iret
int
xor
lret
dec
xor
xor
and
mov
aaa
es
inc
inc
fiadds
sub
mov
int
xor
daa
fmulp
mov
push
mov
mov
mov
mov
mov
ss
inc
cmp
inc
movsl
xor
dec
fidivrs
fisubs
cmpsl
iret
mov
mov
into
daa
cmp
ss
inc
dec
dec
xor
xor
int
xor
into
mov
inc
inc
es
mov
mov
mov
and
shrd
shr
dec
mov
mov
mov
and
mov
cmpl
jl
mov
adc
jmp
push
push
push
push
call
xor
mov
xor
or
shl
imul
sbb
mov
subl
mov
shrd
orl
mov
mov
xor
adcl
shr
adc
mov
cmpl
jbe
sbbl
jmp
pushl
push
call
mov
xor
or
jmp
sbb
int3
or
imul
cld
push
jmp
cmpsl
movsl
xor
inc
movsb
into
lds
cmp
rol
dec
xor
into
dec
and
dec
xor
cmp
rcll
movsb
ss
lds
mov
mov
mov
inc
mov
movsb
aaa
mov
daa
inc
and
cmp
fidivs
leave
and
shlb
dec
mov
and
dec
ret
xor
xor
into
sub
inc
daa
xor
and
mov
faddp
fiadds
dec
cmp
inc
lret
mov
into
shrb
cmp
and
ss
inc
dec
xor
iret
les
cmp
mov
fidivrs
and
mov
int
daa
cmp
sub
movsb
cmp
dec
rorb
mov
mov
leave
ds
cmp
push
iret
inc
xor
xor
aas
daa
mov
shlb
mov
xor
cmp
mov
movsl
es
sub
xor
and
rol
mov
mov
mov
mov
cmp
dec
and
mov
mov
es
mov
and
mov
xor
and
mov
shlb
inc
rorb
int
iret
mov
leave
test
xor
mov
cmp
ret
mov
inc
movsl
mov
int
cmpsl
iret
mov
mov
xor
and
es
dec
xor
inc
mov
mov
mov
movsl
sub
cmp
int
int
les
inc
and
dec
movsb
mov
rorl
cmp
and
movl
inc
dec
mov
mov
les
mov
xor
cmpsl
and
and
lret
dec
leave
cmp
lds
dec
dec
inc
mov
into
dec
es
cmp
aas
mov
sub
xor
mov
cmp
mov
mov
mov
mov
xor
aaa
mov
aas
les
xor
xor
sub
mov
xor
cmpsl
and
mov
and
daa
dec
dec
xor
mov
mov
mov
xor
mov
inc
mov
dec
dec
xor
mov
cmp
mov
and
and
les
inc
aaa
int
and
mov
xor
cmp
ret
mov
rcr
aaa
cmpsl
shlb
mov
mov
leave
mov
es
mov
iret
xor
cmp
inc
cmp
inc
mov
mov
dec
cmp
shlb
iret
mov
fimuls
mov
iret
cmp
movsb
cmp
cmpsl
mov
xor
mov
mov
les
lret
daa
mov
mov
enter
cmp
inc
mov
xor
inc
mov
sarb
ss
and
ss
mov
cmp
cmp
mov
dec
fimuls
and
int
mov
dec
rolb
mov
movsb
cmp
mov
ret
es
leave
mov
inc
and
xor
dec
movsb
and
xor
mov
mov
inc
xor
mov
shl
sub
mov
cmp
mov
movl
jg
addl
mov
mov
adcl
shrd
mov
mov
xor
movl
shl
xor
or
shr
mov
xorl
jmp
test
push
in
lods
imul
aam
js
aaa
jmp
jmp
and
dec
enter
mov
test
mov
lds
es
mov
mov
test
mov
mov
xor
and
shlb
cmp
inc
dec
dec
rol
cmp
sub
and
mov
fimuls
inc
dec
inc
mov
ss
push
xor
shll
into
movsb
test
ds
aaa
ret
sub
rorl
and
aas
sub
les
xor
mov
into
inc
int
mov
cmp
les
mov
shll
sarb
mov
dec
and
rcl
dec
mov
cmp
xor
and
shlb
aas
and
shll
cmp
dec
daa
mov
mov
mov
push
leave
mov
sub
mov
es
mov
xor
mov
and
mov
and
and
mov
mov
xor
ss
int
mov
test
mov
cmp
and
xor
mov
fisubs
les
mov
aaa
mov
inc
iret
and
mov
and
lds
inc
mov
xor
sub
mov
inc
cmp
xor
les
les
mov
aaa
and
rolb
mov
lret
inc
mov
inc
test
dec
dec
mov
and
mov
mov
int
mov
ret
sarb
mov
mov
ret
ror
and
movsl
aaa
sub
int
shlb
mov
dec
aaa
xor
cmp
shll
dec
mov
int
into
mov
movsb
dec
dec
push
cmpsl
into
sarl
and
dec
and
inc
into
ds
inc
movsl
mov
dec
and
push
ds
mov
inc
and
mov
mov
and
mov
dec
mov
cmpsl
cmpsl
ds
inc
mov
daa
dec
mov
mov
and
cmpsl
aas
inc
lret
mov
aaa
iret
daa
mov
aas
leave
into
xor
inc
mov
sarb
and
aas
mov
inc
mov
push
and
cmp
xor
aas
dec
rol
and
es
iret
mov
enter
aaa
daa
lds
dec
inc
dec
ds
and
ret
daa
mov
mov
and
xor
into
enter
mov
mov
dec
enter
mov
into
mov
iret
dec
sarb
cmp
and
push
inc
les
ss
movsl
sub
movl
ds
sub
mov
cmpsl
dec
int
sarb
and
into
mov
mov
mov
aas
mov
movl
mov
mov
es
lret
movsb
and
and
sub
ret
ret
and
aaa
iret
shlb
mov
inc
aas
xor
movsl
and
dec
es
and
push
ds
dec
and
and
fidivs
mov
cmp
inc
cmp
mov
mov
mov
cmp
mov
mov
inc
mov
inc
xor
mov
mov
aas
into
sub
xor
and
dec
lds
dec
sub
and
xor
les
enter
mov
xor
add
sbb
mov
cmpl
ja
adc
jmp
push
call
mov
shrd
shr
mov
mov
mov
xorl
xor
andl
xor
negl
or
shl
sbbl
imul
sbbl
sub
movl
jmp
and
jmp
aad
loop
insb
sub
hlt
pushf
push
adc
add
jmp
xor
inc
mov
mov
mov
inc
dec
cmpsl
mov
iret
int
mov
mov
cmp
into
inc
mov
fisubs
ret
es
inc
test
es
dec
mov
and
dec
and
ret
shll
and
inc
xor
dec
and
aas
aas
mov
mov
movsl
int
rolb
xor
and
fmulp
mov
test
mov
test
xor
ret
shlb
xor
shlb
mov
and
push
dec
ret
xor
mov
xor
inc
test
shlb
mov
mov
les
sub
mov
inc
dec
sarl
es
mov
and
xor
cmpsl
mov
mov
mov
cmp
ret
ss
shll
test
mov
lds
mov
aaa
into
rolb
iret
push
test
into
dec
mov
cmp
fidivs
push
shlb
inc
inc
push
ss
xor
ret
ss
inc
dec
shlb
cmp
mov
inc
inc
mov
mov
dec
sub
dec
ss
cmp
fidivrs
mov
xor
movsl
shlb
into
and
inc
cmpsl
movsb
inc
cmp
inc
cmp
inc
leave
mov
xor
dec
test
leave
enter
mov
cmp
mov
lds
mov
xor
ret
sub
mov
mov
mov
xor
mov
inc
mov
push
daa
mov
sub
test
shlb
mov
mov
sub
mov
mov
xor
xor
into
ror
mov
enter
inc
xor
mov
dec
shll
movsb
mov
mov
dec
enter
inc
mov
mov
ss
dec
mov
aaa
movsb
inc
movl
mov
shll
xor
leave
movsl
aaa
cmpsl
les
fidivrs
daa
mov
xor
inc
mov
dec
movsl
es
les
xor
inc
mov
dec
xor
ret
lds
push
shll
into
mov
mov
xor
xor
mov
fmulp
xor
int
cmp
and
dec
dec
cmpsl
ficoms
cmp
mov
mov
and
and
and
test
and
ds
sarb
lds
es
mov
inc
fidivrs
les
and
shlb
lds
xor
inc
and
inc
lds
mov
xor
cmpsl
xor
mov
lret
mov
sarl
inc
int
cmp
leave
mov
mov
cmp
mov
and
xor
es
aas
enter
inc
ds
sarb
mov
cmp
cmp
xor
cmp
mov
xor
mov
and
and
mov
xor
push
lds
shll
cmpsl
mov
int
inc
mov
ret
mov
cmp
inc
mov
aas
leave
inc
push
ss
xor
mov
inc
daa
mov
mov
sub
fidivs
xor
inc
and
iret
daa
ret
inc
ret
push
adc
mov
shrd
sbbl
mov
jmp
jmp
mov
jl
or
addl
mov
cmp
jmp
and
lret
int
daa
mov
mov
dec
test
int
cmp
inc
cmpsl
and
cmp
mov
ds
push
int
inc
mov
inc
dec
lret
inc
les
mov
and
and
fidivs
ret
shll
mov
mov
aaa
mov
ss
sub
movsl
xor
ret
sub
mov
aaa
mov
enter
mov
dec
lds
sarb
xor
sarl
lds
dec
inc
mov
leave
test
mov
lds
movsb
mov
shll
cmpsl
es
mov
cmpsl
mov
xor
dec
es
xor
inc
mov
mov
mov
and
sub
inc
aas
sub
mov
and
movsb
daa
es
mov
dec
movsl
push
daa
cmp
mov
ret
leave
into
int
into
and
inc
cmpsl
mov
cmp
dec
lret
and
les
push
dec
and
mov
leave
mov
cmp
fidivs
mov
sub
les
mov
lret
and
dec
inc
inc
mov
inc
mov
mov
inc
mov
int
cmp
cmp
dec
and
dec
dec
cmp
iret
ret
ror
les
mov
xor
xor
inc
xor
aas
inc
mov
and
aas
xor
sub
inc
movsl
ret
and
xor
shll
xor
ss
test
ret
inc
les
push
daa
mov
enter
mov
inc
cmp
movsl
and
inc
dec
and
mov
xor
xor
mov
mov
dec
and
daa
cmpsl
enter
inc
mov
dec
dec
sarl
inc
xor
inc
mov
shlb
mov
cmp
fidivrs
mov
and
mov
ss
and
aas
push
xor
mov
and
mov
inc
cmp
cmp
mov
inc
aaa
lds
and
and
enter
mov
mov
into
inc
int
mov
into
daa
int
mov
mov
xor
mov
es
inc
mov
test
inc
aas
into
cmp
movsl
cmp
dec
dec
mov
enter
xor
mov
cmp
shll
aas
mov
and
mov
les
cmp
and
into
leave
inc
mov
mov
and
inc
inc
inc
fisubs
xor
leave
mov
dec
ss
test
xor
mov
mov
cmpsl
and
xor
daa
xor
xor
enter
ss
xor
cmp
test
mov
mov
dec
dec
xor
daa
mov
cmpsl
ds
and
mov
and
test
aaa
inc
mov
enter
xor
mov
mov
mov
fisubs
cmp
inc
and
mov
inc
dec
int
mov
mov
and
leave
daa
mov
mov
cmp
dec
rolb
mov
dec
movsl
mov
shlb
ds
leave
inc
and
mov
leave
mov
mov
and
into
aaa
cmpsl
and
inc
dec
inc
cmp
in
xor
xorl
orl
xor
subl
or
movl
shr
and
mov
add
mov
mov
mov
mov
sub
mov
xorl
shrd
addl
shr
cmpl
jg
jmp
push
push
push
push
pushl
call
mov
mov
mov
xor
xor
or
shl
cmpl
ja
addl
and
jmp
pushl
push
push
pushl
push
push
call
add
add
mov
mov
shrd
shr
mov
xor
add
sub
imul
mov
mov
addl
xor
xorl
shl
xor
or
mov
incl
movl
adc
mov
cmpl
jbe
jmp
push
call
mov
movl
mov
jmp
lock
dec
jle
xor
js
cmp
jmp
inc
xor
int
xor
mov
ret
mov
xor
ss
inc
dec
mov
dec
ds
ss
inc
dec
dec
push
and
and
dec
les
dec
xor
ss
shlb
inc
xor
inc
inc
dec
sarb
mov
enter
mov
mov
xor
mov
and
xor
mov
cmp
mov
es
aas
mov
sub
mov
int
mov
iret
cmp
lret
mov
mov
and
mov
xor
push
and
iret
mov
les
and
cmp
into
int
cmp
movsb
and
shll
dec
push
sub
lret
dec
shlb
xor
and
lret
cmp
shlb
rorl
mov
shlb
leave
xor
cmp
and
aaa
inc
leave
mov
ret
iret
inc
cmp
lds
cmpsl
mov
iret
inc
and
rolb
xor
mov
es
cmpsl
shlb
push
mov
xor
mov
les
mov
mov
inc
inc
xor
xor
and
dec
enter
xor
ret
mov
and
and
inc
enter
lds
shrl
movsl
xor
enter
xor
mov
mov
xor
xor
inc
ror
mov
inc
dec
cmp
movsb
and
dec
xor
xor
movsl
iret
dec
and
xor
sub
dec
push
mov
shll
cmp
and
sub
movsb
fidivrs
cmp
inc
mov
inc
sarl
dec
mov
dec
mov
test
leave
inc
mov
mov
enter
mov
mov
lret
mov
leave
mov
inc
dec
cmpsl
xor
lds
les
dec
mov
cmp
xor
sub
mov
inc
inc
movsb
sarb
dec
inc
sarb
mov
mov
aas
xor
and
cmp
and
push
xor
and
xor
mov
dec
rolb
mov
inc
dec
dec
mov
ds
enter
mov
and
inc
iret
aaa
sub
movsl
rcr
ds
mov
xor
dec
shlb
xor
mov
inc
xor
ds
ds
aas
sub
xor
xor
mov
inc
shlb
into
rol
and
xor
ds
mov
inc
mov
leave
fidivs
and
dec
cmp
mov
aas
fimuls
sarl
inc
dec
mov
dec
daa
mov
faddp
dec
mov
mov
lret
push
and
mov
aaa
xor
int
inc
int
mov
dec
and
dec
and
ds
mov
mov
ss
mov
lret
mov
xor
xor
rol
shlb
mov
xor
dec
dec
daa
xor
xor
dec
mov
daa
shlb
dec
mov
mov
dec
aas
movsb
shlb
mov
and
xor
sub
int
movsl
and
xor
mov
cmp
movsb
movl
mov
movl
mov
mov
adc
mov
decl
shrd
movzbl
sbb
shr
mov
cmpl
jge
subl
jmp
push
call
mov
xor
shl
xor
or
lea
mov
or
mov
mov
cmpl
jg
adc
movl
jmp
push
call
jmp
xor
jne
insb
test
decl
mov
pop
testb
aas
jmp
jmp
inc
es
dec
inc
iret
mov
inc
and
inc
cmpsl
test
daa
dec
mov
dec
mov
fisubs
aaa
xor
cmp
inc
mov
push
xor
push
mov
sub
ret
xor
mov
sub
and
push
dec
fidivs
mov
xor
movsb
and
xor
mov
cmp
shll
shrl
push
dec
inc
daa
inc
push
mov
dec
cmp
push
inc
cmp
cmpsl
and
and
mov
inc
cmp
mov
cmpsl
ds
aaa
inc
mov
movsl
xor
and
movsb
and
inc
xor
mov
cmp
dec
mov
and
enter
lds
dec
xor
fimuls
mov
mov
test
mov
movsb
movsb
xor
inc
mov
inc
into
dec
mov
mov
mov
rol
push
movsb
ds
ss
dec
aas
mov
and
inc
into
les
iret
cmp
xor
inc
es
dec
dec
ds
leave
mov
and
mov
leave
xor
inc
iret
xor
movsb
cmp
mov
mov
faddp
and
movsb
shlb
iret
mov
mov
inc
leave
test
mov
les
mov
and
mov
daa
aas
and
les
les
inc
mov
mov
movsb
aaa
rol
aas
inc
mov
mov
and
dec
lds
xor
aas
aas
mov
aas
int
mov
cmp
mov
cmp
and
mov
and
mov
mov
int
mov
mov
dec
inc
mov
fisubs
inc
sub
sarb
dec
inc
cmp
int
into
dec
mov
xor
inc
and
iret
mov
into
mov
dec
mov
mov
sarb
inc
mov
mov
mov
movsb
movsb
shlb
inc
dec
dec
ds
mov
faddp
mov
cmp
shll
movsl
ds
sarl
dec
xor
and
es
iret
sub
inc
dec
cmp
mov
mov
into
movl
aaa
mov
cmpsl
cmp
xor
mov
shlb
mov
ret
ret
dec
lds
mov
mov
and
mov
ds
mov
inc
mov
ret
and
iret
iret
mov
mov
mov
and
movsl
ds
mov
mov
into
dec
into
sarb
mov
mov
dec
inc
push
mov
daa
es
mov
ret
fidivs
ss
mov
mov
push
enter
dec
mov
rolb
xor
mov
les
fidivs
ss
inc
mov
xor
xor
mov
and
mov
and
push
and
mov
dec
inc
cmpsl
cmp
ret
dec
daa
inc
aaa
aas
mov
inc
inc
dec
and
mov
xor
ret
inc
mov
mov
dec
movsl
daa
dec
cmp
mov
mov
into
fmulp
dec
mov
lds
xor
fidivs
push
and
add
jmp
mov
shl
mov
xor
movl
xor
or
cmpl
jle
sbb
adcl
jmp
pushl
push
pushl
pushl
push
pushl
pushl
call
mov
mov
xor
mov
mov
shrd
shr
mov
neg
mov
andl
xor
andl
shl
xorl
xor
mov
sub
mov
jmp
call
push
stos
add
ds
pop
pop
cmp
jmp
mov
cmpsl
xor
xor
dec
and
cmp
dec
xor
les
sarb
dec
les
mov
dec
leave
and
movsl
xor
mov
mov
mov
mov
les
and
es
inc
mov
cmp
cmp
movsl
mov
mov
and
mov
sub
inc
inc
sarb
inc
mov
cmp
dec
mov
movsb
and
mov
es
dec
and
es
mov
int
dec
mov
cmp
daa
mov
dec
sub
test
dec
mov
movsb
mov
cmpsl
cmp
leave
dec
inc
mov
inc
into
aas
mov
les
mov
and
mov
inc
les
mov
dec
test
dec
mov
cmp
enter
xor
mov
dec
ds
fiadds
mov
test
inc
es
mov
fisubrs
aas
xor
dec
mov
cmp
mov
and
mov
shlb
int
les
lret
aaa
aas
and
aas
mov
cmpsl
inc
mov
shlb
iret
cmp
fisubs
xor
push
ds
mov
dec
mov
les
inc
lret
mov
cmp
sarb
mov
xor
dec
mov
cmp
xor
int
inc
mov
xor
and
fimuls
cmp
sarb
ret
shll
cmpsl
ret
lret
int
inc
mov
mov
enter
ds
cmpsl
dec
xor
mov
xor
aas
mov
leave
dec
xor
mov
es
inc
mov
dec
inc
inc
push
mov
enter
dec
xor
lds
ret
ret
and
xor
mov
les
mov
xor
enter
aaa
dec
mov
dec
xor
sub
inc
mov
cmp
aas
dec
iret
inc
mov
sub
aas
iret
mov
movsb
sarb
lds
cmpsl
push
cmpsl
ds
cmp
enter
cmp
es
xor
xor
test
inc
leave
aas
aaa
les
xor
xor
push
cmpsl
movsb
xor
inc
dec
and
ss
xor
inc
cmpsl
ret
inc
mov
cmp
dec
enter
push
mov
xor
sub
cmpsl
mov
mov
ret
inc
leave
rorl
and
cmp
aaa
test
xor
dec
mov
mov
roll
inc
sub
mov
mov
test
ror
and
mov
and
mov
daa
daa
dec
mov
cmp
ror
lds
sub
mov
mov
inc
inc
daa
iret
cmp
and
test
into
rcr
mov
mov
and
enter
mov
les
cmpsl
xor
dec
mov
mov
ret
dec
mov
sarl
mov
xor
mov
dec
cmp
inc
daa
and
iret
movsl
mov
mov
into
int
xor
lret
mov
shlb
ficoms
lds
mov
xor
fisubs
mov
and
xor
dec
leave
and
test
movsl
or
cmpl
jg
jmp
push
push
push
call
lea
mov
mov
mov
shrd
jmp
lock
adc
lahf
mov
pop
pop
ljmp
jmp
mov
into
cmpsl
sub
test
test
movsl
mov
cmp
and
inc
and
dec
fmulp
aas
inc
int
mov
inc
mov
and
cmp
push
mov
xor
push
aaa
mov
and
les
inc
inc
shlb
iret
cmp
rorb
movsl
xor
mov
into
enter
cmp
xor
mov
inc
dec
mov
inc
mov
cmp
dec
push
xor
ss
and
and
ss
mov
and
mov
cmpsl
mov
shlb
mov
movsb
es
ror
rol
mov
dec
cmp
iret
inc
movsl
ds
inc
movl
enter
mov
ret
cmp
mov
shlb
daa
and
leave
aas
shlb
mov
aas
daa
xor
and
inc
xor
mov
and
and
cmp
fisubrs
movsb
ss
inc
aaa
inc
cmp
inc
mov
ror
inc
and
inc
mov
movsl
mov
aaa
inc
iret
xor
dec
mov
dec
and
enter
mov
mov
shlb
mov
mov
inc
aas
test
dec
inc
movsb
mov
and
inc
aas
shll
xor
cmp
inc
mov
test
xor
and
mov
mov
les
enter
ds
mov
mov
mov
ds
xor
cmp
cmpsl
es
xor
mov
ret
movsb
mov
and
xor
int
enter
xor
ror
shll
iret
mov
roll
inc
iret
cmp
iret
mov
and
mov
iret
mov
lret
xor
mov
int
cmp
ret
movsl
and
and
cmp
into
lret
enter
and
mov
inc
movsb
dec
shlb
daa
xor
dec
dec
inc
into
ss
and
cmpsl
xor
movsb
and
movsl
aas
and
inc
fimuls
mov
mov
mov
dec
rol
mov
fmulp
mov
mov
movsb
mov
mov
mov
iret
mov
mov
xor
shlb
xor
and
xor
cmp
xor
xor
rol
cmp
mov
daa
mov
mov
lret
xor
iret
mov
and
aaa
int
ds
shlb
dec
ficoms
enter
mov
into
inc
mov
les
xor
cmp
cmp
sub
fmulp
xor
xor
iret
rorl
xor
mov
leave
mov
mov
dec
sub
leave
mov
leave
sub
iret
dec
mov
aaa
shlb
sub
xor
lret
ss
and
movsl
xor
lds
mov
sarl
lret
dec
inc
leave
enter
mov
daa
movsb
inc
xor
fidivs
aaa
cmp
xor
es
dec
mov
int
mov
ret
leave
int
mov
sub
mov
mov
push
mov
mov
xor
rol
mov
ss
enter
dec
cmp
mov
inc
mov
xor
daa
and
add
or
lea
add
add
add
add
jmp
push
push
call
mov
shl
mov
xor
xor
or
andl
mov
mov
adc
or
or
mov
addl
mov
shrd
cmpl
ja
sbb
add
jmp
pushl
call
shr
mov
mov
jmp
inc
dec
xor
sbb
loop
cmp
sbb
cld
push
jmp
xor
sarl
ss
mov
daa
sarb
shlb
mov
mov
mov
sub
test
iret
inc
and
mov
mov
fisubs
ss
inc
mov
aaa
and
xor
push
mov
and
shlb
mov
cmp
mov
dec
into
and
ret
enter
mov
aas
cmp
and
mov
mov
mov
iret
dec
lds
sarb
mov
mov
sarb
mov
rol
and
cmp
inc
mov
ds
aas
mov
test
xor
xor
inc
roll
cmp
dec
xor
aaa
xor
cmp
mov
mov
inc
cmpsl
push
aas
mov
dec
dec
mov
mov
aaa
mov
ds
int
mov
movsl
dec
enter
into
xor
fidivs
fidivrs
xor
xor
and
leave
movsl
mov
inc
mov
mov
mov
mov
mov
es
dec
int
daa
and
test
daa
inc
and
iret
mov
movsb
leave
xor
mov
es
dec
into
inc
daa
mov
mov
inc
inc
enter
dec
mov
xor
int
ret
ror
cmp
mov
int
and
inc
and
mov
mov
leave
xor
mov
cmpsl
and
ret
mov
movsb
int
dec
dec
cmpsl
mov
test
dec
mov
mov
shlb
dec
mov
cmp
ss
xor
cmp
mov
cmp
push
mov
mov
mov
xor
into
cmp
inc
and
faddp
enter
movl
shlb
and
dec
sarb
mov
iret
inc
leave
inc
leave
ret
lds
sarb
cmp
and
ret
mov
xor
dec
cmp
and
dec
mov
into
daa
mov
dec
cmpsl
and
daa
mov
inc
ss
test
movsl
into
xor
aaa
mov
ss
and
lret
mov
movsl
mov
rol
ret
mov
dec
inc
int
into
dec
xor
xor
rcr
rorl
ss
inc
mov
ds
mov
fidivrs
ret
mov
ds
lret
mov
dec
mov
int
dec
and
dec
movsl
mov
mov
mov
and
cmp
movsl
mov
xor
and
movsl
lds
xor
fisubs
aas
mov
and
inc
enter
rcr
mov
mov
xor
inc
mov
mov
inc
dec
inc
cmp
mov
mov
shlb
mov
and
int
shlb
daa
dec
int
mov
daa
aaa
ret
iret
mov
dec
inc
mov
push
cmp
and
dec
mov
into
mov
lds
push
mov
mov
lret
mov
shlb
mov
ret
movsb
mov
mov
les
ss
fidivrs
mov
mov
mov
dec
cmp
xor
mov
mov
ds
inc
cmpsl
xor
jmp
sbb
arpl
mov
aaa
sub
adc
pop
or
jmp
jmp
xor
inc
ret
iret
lds
mov
xor
cmp
iret
inc
into
mov
les
mov
mov
movsb
mov
mov
inc
ret
xor
mov
inc
inc
movsl
mov
inc
inc
mov
and
mov
dec
sub
dec
movsb
daa
mov
movsl
aas
xor
xor
mov
mov
cmp
lds
aaa
movsl
rol
mov
mov
fidivs
movsb
enter
movsl
rcl
les
mov
mov
xor
xor
sarb
dec
push
mov
dec
es
daa
mov
les
es
dec
cmp
into
mov
xor
mov
test
inc
mov
xor
movsb
lret
daa
mov
mov
ror
xor
and
cmp
les
roll
inc
mov
mov
inc
mov
inc
and
shll
enter
inc
and
mov
and
sub
shll
xor
push
aaa
inc
lds
mov
lds
dec
and
dec
xor
xor
dec
mov
ss
leave
leave
push
mov
es
dec
xor
mov
mov
mov
xor
cmp
enter
movsb
push
ds
lret
mov
cmpsl
iret
mov
aaa
mov
aas
iret
lds
ret
xor
iret
aas
xor
enter
dec
and
sarb
mov
rolb
push
faddp
iret
inc
xor
sub
enter
and
mov
test
daa
les
mov
and
and
inc
and
into
dec
movsl
xor
dec
inc
mov
int
inc
mov
xor
and
mov
sarb
and
into
inc
dec
and
mov
cmp
daa
int
and
mov
iret
and
leave
enter
and
mov
enter
lds
sub
dec
dec
mov
mov
inc
dec
movsb
enter
inc
daa
mov
inc
ret
dec
enter
dec
mov
dec
inc
xor
dec
cmp
es
shlb
xor
and
xor
xor
inc
inc
mov
inc
and
daa
mov
mov
mov
mov
xor
mov
inc
movsl
inc
sub
xor
mov
dec
dec
aaa
mov
iret
mov
xor
xor
xor
and
es
mov
and
sarb
and
xor
cmp
leave
and
aaa
xor
dec
and
ret
enter
inc
int
dec
mov
inc
es
lds
xor
enter
mov
push
inc
movsb
lds
mov
dec
mov
rol
mov
mov
inc
mov
int
movsb
dec
dec
inc
iret
inc
shlb
into
cmp
es
mov
xor
mov
mov
and
test
cmpsl
inc
int
mov
inc
lds
ret
cmp
mov
inc
enter
inc
and
int
mov
shlb
cmp
cmp
mov
lds
and
mov
mov
push
xor
or
lea
mov
xor
or
sub
imul
mov
or
mov
orl
mov
movzbl
sbb
shrd
cmpl
ja
and
mov
xor
jmp
pushl
pushl
pushl
pushl
pushl
call
shr
mov
mov
xor
shl
mov
xor
or
cmpl
jge
jmp
pushl
call
mov
mov
add
mov
mov
shrd
shr
addl
mov
cmpl
jg
sub
jmp
pushl
push
call
mov
xor
xor
or
lea
mov
cmpl
jbe
jmp
push
push
call
mov
shl
mov
shrd
shr
mov
mov
adcl
xor
xor
notl
or
cmpl
jle
xor
add
jmp
pushl
call
mov
shl
mov
mov
mov
sbbl
or
adc
mov
mov
sbbl
shrd
shl
addl
jmp
mov
xchg
mov
setne
test
jmp
and
dec
push
shlb
dec
sub
enter
xor
xor
dec
cmp
shll
mov
mov
fidivs
and
dec
xor
dec
mov
mov
shlb
inc
xor
sub
mov
daa
mov
mov
and
mov
cmpsl
xor
mov
test
dec
and
int
dec
mov
xor
mov
mov
shll
les
enter
into
and
mov
dec
dec
and
mov
dec
xor
mov
rclb
leave
cmp
cmpsl
cmp
dec
mov
inc
dec
mov
mov
leave
and
sarb
int
mov
xor
and
lds
dec
movl
lret
push
mov
and
dec
mov
leave
and
xor
aaa
dec
mov
shlb
xor
cmpsl
cmp
mov
aaa
lret
xor
shlb
movsl
test
inc
mov
and
mov
cmp
inc
xor
mov
movsl
enter
mov
sub
movsb
sarb
ret
inc
push
movsl
mov
and
xor
push
xor
and
lds
and
rcr
lret
les
ss
sub
iret
and
xor
iret
xor
rol
movsb
ret
es
and
mov
sub
test
mov
aaa
xor
mov
dec
xor
movsl
movsb
es
and
lret
aas
inc
cmp
mov
mov
dec
cmp
mov
test
rol
faddp
enter
and
mov
ret
mov
mov
ds
es
mov
inc
fiadds
dec
mov
shlb
les
lret
mov
aas
shlb
mov
dec
sub
mov
xor
int
les
lret
mov
daa
fidivrs
rclb
and
mov
mov
xor
mov
inc
cmp
inc
mov
and
mov
mov
inc
cmp
movsl
inc
mov
dec
into
mov
dec
enter
dec
dec
mov
and
mov
iret
dec
shll
fidivs
inc
and
mov
mov
aas
dec
sarb
push
mov
mov
daa
int
enter
inc
ss
mov
sub
cmp
mov
sarb
sarl
mov
cmp
aas
mov
mov
sarl
lret
mov
aas
mov
and
inc
cmp
dec
test
mov
mov
mov
cmpsl
inc
movsb
mov
and
les
xor
lret
xor
movsl
es
inc
movsl
xor
cmp
ret
sub
aaa
mov
dec
ret
dec
cmp
enter
mov
and
ds
aaa
dec
inc
cmp
lds
fidivrs
ret
sub
inc
fisubs
cmp
xor
leave
inc
cmp
mov
dec
mov
mov
and
enter
fisubs
and
xor
mov
lret
mov
mov
xor
mov
dec
xor
add
add
testb
add
shl
mov
test
dec
push
adcl
add
cmpsb
jmp
jmp
mov
ret
les
cmpsl
sarb
shlb
cmp
faddp
dec
dec
int
mov
mov
mov
dec
mov
inc
leave
dec
enter
lds
aaa
ss
and
mov
ds
dec
inc
ret
enter
mov
sub
rcr
fidivs
dec
dec
shlb
inc
cmp
shlb
mov
aaa
dec
mov
dec
xor
les
mov
dec
ret
dec
sub
inc
enter
dec
mov
xor
inc
shll
mov
test
mov
leave
and
leave
mov
and
les
dec
ss
mov
int
lret
xor
ret
xor
xor
inc
dec
dec
dec
xor
int
xor
and
dec
mov
mov
enter
and
rorl
lds
ret
ds
enter
leave
xor
fimuls
shlb
inc
cmp
and
inc
mov
xor
and
aas
mov
dec
mov
mov
dec
aaa
fisubs
mov
test
and
mov
aas
and
xor
movsl
fidivs
mov
aaa
shlb
mov
and
inc
xor
lret
mov
into
mov
movsl
dec
cmp
ret
inc
daa
and
mov
and
mov
and
inc
mov
cmp
mov
into
and
mov
mov
dec
push
les
xor
mov
cmp
inc
daa
fimuls
mov
shlb
and
mov
movsl
ss
dec
and
dec
mov
inc
dec
mov
fidivrs
enter
mov
enter
dec
ds
mov
xor
and
mov
mov
xor
cmpsl
and
int
les
mov
test
xor
fimuls
ss
mov
cmp
ss
xor
mov
dec
dec
lds
mov
cmpsl
dec
mov
mov
into
int
movsb
and
cmpsl
cmp
lds
mov
mov
and
and
mov
fidivrs
cmpsl
inc
dec
dec
dec
xor
mov
movsb
mov
inc
dec
mov
cmp
cmp
dec
mov
inc
cmp
xor
mov
cmp
mov
sub
dec
mov
sarl
leave
leave
mov
mov
dec
test
rcl
ret
dec
mov
mov
mov
mov
fidivrs
mov
fisubs
daa
mov
inc
and
lret
es
xor
aas
dec
and
mov
mov
lret
iret
enter
test
lret
and
mov
lds
and
dec
mov
shrb
lret
test
xor
cmp
mov
dec
cmp
daa
movsl
into
inc
mov
lret
mov
cmp
inc
cmp
mov
dec
aaa
dec
mov
mov
enter
cmpsl
dec
xor
aaa
ror
fisubs
mov
mov
inc
cmp
test
movsl
aaa
mov
dec
mov
mov
es
and
dec
inc
ss
sub
ds
lret
lds
push
adc
add
adc
add
mov
movzwl
and
xor
mov
addl
xor
or
mov
dec
adcl
not
andl
jmp
and
mov
mov
cwtl
pop
fnstsw
divl
push
jmp
mov
int
les
mov
shlb
sarb
ret
fidivrs
aas
rol
aas
sarl
mov
daa
int
xor
iret
mov
xor
shlb
daa
mov
dec
aas
ds
xor
cmp
movsb
mov
mov
mov
inc
ret
movsl
aaa
and
inc
mov
and
movsl
mov
daa
dec
les
cmp
mov
into
mov
movsl
inc
xor
lret
inc
inc
and
ret
int
mov
and
movsb
cmp
mov
inc
movsb
mov
and
xor
movsb
xor
push
push
and
sarb
mov
dec
es
xor
mov
ret
les
into
enter
shlb
mov
cmpsl
movsb
dec
ret
sarl
cmp
les
shll
and
cmp
int
cmp
into
ror
test
mov
iret
les
ficoms
into
dec
xor
mov
movsb
inc
ds
mov
mov
push
shll
mov
inc
and
inc
mov
ret
inc
mov
mov
mov
shlb
mov
mov
xor
mov
xor
dec
cmp
xor
and
inc
aaa
les
ss
aaa
mov
mov
es
sub
xor
dec
sub
shlb
aas
inc
and
inc
mov
lret
and
aas
mov
into
rol
and
fidivrs
and
cmp
sub
es
inc
enter
mov
mov
and
enter
mov
and
es
cmp
movsl
xor
ds
xor
inc
xor
mov
shlb
and
aaa
mov
ret
and
iret
and
and
mov
inc
inc
xor
les
ror
mov
lret
iret
mov
mov
les
mov
inc
mov
inc
dec
inc
daa
es
sarl
into
dec
enter
push
cmp
leave
dec
les
lds
ret
mov
cmp
mov
mov
and
dec
leave
mov
dec
inc
and
mov
dec
mov
and
cmp
inc
dec
aas
xor
xor
cmpsl
mov
les
xor
cmp
shlb
mov
mov
and
fimuls
enter
dec
mov
cmp
mov
daa
aaa
mov
dec
mov
inc
inc
xor
mov
xor
mov
inc
and
cmp
inc
mov
ret
dec
mov
ret
mov
and
xor
cmp
dec
inc
ret
movsb
and
and
xor
xor
cmp
fidivrs
and
mov
mov
mov
cmpsl
mov
xor
xor
mov
mov
aas
mov
cmp
xor
shll
mov
lret
mov
shlb
mov
movsb
mov
ss
fidivs
mov
inc
dec
mov
mov
inc
dec
movsb
mov
mov
inc
mov
mov
shrb
mov
mov
xor
and
sub
mov
test
inc
fidivrs
aaa
and
orl
xor
mov
mov
not
xor
and
or
addl
mov
sub
mov
sbb
shrd
cmpl
ja
addl
jmp
pushl
call
shr
mov
mov
mov
xor
mov
addl
xor
andl
shl
mov
or
mov
movl
cmp
movl
jmp
inc
xchg
ret
test
dec
movsb
mov
dec
stos
jmp
jmp
enter
dec
dec
inc
dec
lds
mov
inc
dec
push
mov
enter
mov
mov
ds
dec
push
fisubs
mov
es
mov
shll
mov
inc
mov
and
aaa
xor
movsb
sub
int
and
inc
sub
dec
mov
inc
dec
dec
inc
xor
cmp
aaa
fmulp
inc
cmp
inc
aas
and
inc
mov
cmp
shlb
and
mov
and
mov
cmpsl
lds
mov
inc
mov
int
and
dec
xor
lds
inc
rolb
mov
mov
mov
dec
movsb
mov
iret
inc
es
mov
aaa
and
sarl
dec
movsl
lds
inc
xor
xor
cmpsl
and
inc
ss
inc
ds
mov
mov
lds
xor
inc
xor
xor
int
into
mov
movsl
mov
ss
dec
xor
ret
mov
dec
lret
cmp
mov
mov
dec
mov
movsb
mov
inc
mov
lds
rolb
movsl
aaa
cmp
cmp
and
mov
iret
and
dec
lds
and
aas
aas
xor
aas
xor
les
mov
daa
aas
into
test
dec
cmpsl
les
mov
dec
cmp
inc
shll
push
dec
aas
lds
fidivrs
push
mov
mov
aaa
ss
and
shlb
enter
and
xor
enter
aas
inc
and
iret
daa
xor
and
and
dec
inc
movsb
xor
cmp
mov
and
fidivrs
push
xor
xor
mov
les
aaa
les
dec
xor
push
inc
inc
and
mov
ret
test
mov
lret
and
xor
dec
cmp
into
mov
and
ret
xor
ss
lds
int
leave
xor
cmp
lds
mov
xor
inc
xor
shlb
dec
aaa
movsb
lds
sub
ss
push
mov
and
dec
cmp
mov
mov
xor
les
mov
sub
iret
dec
dec
dec
cmp
mov
movsl
mov
mov
and
movsb
dec
and
inc
movsl
int
into
dec
cmpsl
mov
mov
and
xor
movsl
and
enter
and
and
into
dec
mov
inc
lret
mov
mov
lds
and
ror
daa
and
lret
dec
mov
mov
inc
shlb
xor
dec
dec
inc
dec
and
enter
mov
xor
and
xor
and
and
cmp
mov
xor
xor
daa
ror
aaa
lret
and
aaa
movl
cmp
leave
mov
xor
xor
mov
push
shlb
mov
lds
mov
movsl
test
ss
inc
and
xor
dec
iret
leave
daa
into
and
xor
enter
fidivrs
dec
movsb
test
mov
mov
inc
mov
xor
mov
mov
push
mov
push
cmp
mov
movsb
mov
movsl
mov
mov
lret
and
mov
movsb
lds
test
leave
jmp
js
mov
mov
aas
lcall
mov
jmp
inc
int
movsl
and
mov
inc
and
iret
mov
ds
mov
xor
ret
dec
push
mov
inc
mov
and
mov
dec
dec
movsb
mov
mov
xor
mov
and
inc
xor
mov
and
test
dec
cmp
xor
mov
dec
cmp
fisubs
shll
dec
lds
and
ret
daa
movsl
and
mov
mov
ss
lret
lds
inc
test
and
xor
mov
lds
inc
inc
es
ss
xor
sub
and
rol
xor
inc
shlb
into
mov
and
mov
mov
mov
cmp
les
inc
mov
and
mov
aas
dec
mov
into
rol
cmp
dec
mov
mov
inc
xor
xor
cmp
shll
mov
mov
mov
dec
dec
movsl
cmp
dec
and
and
dec
mov
and
mov
xor
mov
inc
cmpsl
sub
mov
mov
mov
ret
mov
push
cmp
xor
ss
push
sub
mov
and
ss
xor
mov
xor
into
rorb
mov
cmp
cmp
int
inc
inc
inc
leave
mov
mov
mov
mov
mov
and
mov
dec
enter
mov
mov
dec
inc
ds
dec
mov
ret
xor
dec
xor
and
xor
dec
movsb
leave
xor
lret
cmpsl
les
xor
movsl
cmp
inc
cmp
mov
mov
inc
mov
push
enter
xor
inc
inc
inc
aas
mov
xor
fisubs
inc
shlb
shlb
cmp
dec
ds
movsl
cmpsl
inc
and
mov
mov
mov
dec
ds
cmpsl
shlb
mov
and
xor
mov
dec
and
dec
enter
movsb
xor
mov
xor
mov
mov
xor
int
and
mov
leave
es
movsb
cmp
les
mov
les
mov
mov
cmp
mov
dec
mov
ds
fimuls
mov
les
shlb
fisubs
mov
cmp
and
mov
and
cmpsl
mov
inc
mov
cmpsl
shrb
shlb
dec
cmp
shlb
shlb
inc
lret
int
cmp
inc
shlb
leave
rorl
xor
ds
dec
cmp
dec
ror
rol
mov
mov
fisubrs
faddp
xor
dec
cmp
and
dec
mov
lret
xor
mov
xor
into
sarb
mov
xor
movsb
mov
mov
mov
cmp
dec
inc
xor
mov
mov
and
mov
and
dec
and
dec
xor
xor
mov
and
mov
aas
mov
mov
sub
ss
leave
mov
xor
inc
dec
lds
mov
mov
adc
inc
cld
mov
mov
sbb
xor
xor
add
mov
or
jmp
cmc
jp
cmpsb
mov
dec
push
or
cli
add
cs
jmp
and
and
inc
shlb
aas
xor
inc
dec
aaa
aas
lret
mov
and
xor
mov
and
and
ds
xor
dec
test
les
xor
mov
dec
movsb
mov
test
cmpsl
push
ret
enter
mov
fidivs
dec
int
roll
push
dec
dec
iret
mov
dec
xor
enter
xor
daa
movsl
fmulp
movsb
cmp
mov
mov
cmp
les
lret
mov
dec
iret
cmpsl
inc
inc
mov
enter
dec
ds
mov
mov
movsb
mov
shlb
xor
les
leave
and
inc
sarb
and
cmp
daa
mov
ret
and
and
ds
mov
cmp
mov
rorb
int
mov
mov
mov
ss
dec
and
movsb
ret
and
shlb
xor
and
ret
push
and
cmpsl
dec
mov
and
and
mov
cmp
es
mov
ds
mov
inc
mov
mov
fisubs
aas
mov
inc
xor
daa
mov
fmulp
mov
push
mov
mov
es
mov
xor
ror
aaa
movsb
mov
cmp
and
shlb
mov
mov
leave
and
les
mov
movsb
lds
iret
movsb
and
mov
into
mov
mov
sub
cmp
aaa
test
leave
cmpsl
mov
movsb
inc
mov
cmp
mov
enter
fisubrs
mov
rorb
inc
into
mov
xor
and
iret
leave
cmp
mov
xor
shlb
daa
dec
cmp
mov
mov
xor
lret
mov
inc
and
daa
iret
dec
les
inc
inc
xor
mov
push
and
push
mov
and
and
es
daa
mov
leave
les
enter
mov
mov
mov
dec
mov
es
mov
into
sub
mov
and
mov
inc
mov
mov
test
into
and
xor
mov
mov
les
mov
mov
cmpsl
movsb
cmpsl
mov
mov
sub
xor
mov
cmp
inc
mov
mov
and
dec
and
movsb
iret
sarl
movsb
inc
mov
cmp
xor
mov
shll
inc
leave
fidivs
mov
inc
mov
shlb
mov
mov
and
xor
dec
mov
dec
aaa
leave
mov
xor
int
dec
push
cmp
aas
mov
shlb
mov
push
inc
rol
dec
xor
ss
int
enter
test
movsl
lret
int
cmp
xor
inc
mov
inc
inc
ds
ror
mov
mov
mov
iret
inc
sub
inc
mov
sub
aas
mov
shlb
mov
es
and
inc
mov
ror
mov
shlb
mov
aas
sub
dec
mov
dec
mov
dec
inc
lds
mov
fimuls
xor
ss
jmp
js
dec
or
in
imul
xor
mov
adc
jmp
lret
dec
daa
push
inc
xor
inc
and
and
ds
cmp
inc
inc
mov
mov
enter
inc
int
leave
xor
dec
int
cmpsl
sub
mov
xor
lds
and
into
and
mov
enter
xor
leave
aas
mov
dec
dec
mov
dec
mov
es
mov
dec
shlb
ss
mov
xor
mov
cmp
sarl
and
lret
inc
and
sub
mov
lret
mov
mov
xor
shlb
and
dec
les
sub
inc
into
mov
mov
and
faddp
and
daa
into
dec
cmp
and
mov
push
and
xor
dec
aaa
ret
shlb
fimuls
inc
dec
mov
movsb
cmp
inc
rcr
inc
mov
dec
and
and
mov
cmpsl
cmp
mov
cmp
dec
daa
dec
les
xor
int
mov
push
inc
inc
mov
xor
and
lret
mov
lret
inc
mov
inc
xor
ss
aas
iret
cmp
push
xor
mov
mov
fmulp
inc
dec
xor
mov
sub
mov
mov
mov
aas
mov
xor
ss
cmp
mov
mov
iret
xor
iret
test
ret
and
ret
shlb
xor
mov
and
movsl
mov
mov
int
xor
dec
aaa
ret
les
movsl
and
mov
mov
es
dec
aas
mov
and
cmpsl
shlb
mov
sub
xor
enter
mov
inc
inc
cmpsl
dec
enter
aaa
lret
daa
mov
and
cmp
fiadds
rorb
mov
ret
test
lret
dec
push
mov
xor
mov
iret
mov
xor
movsb
sub
xor
mov
ss
inc
mov
les
cmp
and
push
mov
les
mov
mov
aas
cmp
inc
ss
mov
mov
xor
dec
xor
inc
xor
movsb
mov
movsl
mov
mov
and
cmp
cmp
mov
mov
sub
mov
ret
leave
xor
iret
int
sub
and
sub
inc
mov
inc
dec
lds
int
and
int
mov
lds
rol
dec
mov
aas
cmp
dec
mov
daa
mov
mov
cmp
cmpsl
mov
cmp
cmp
mov
cmp
mov
inc
lret
mov
mov
movsb
xor
mov
inc
into
dec
lds
enter
movsb
mov
dec
inc
dec
mov
mov
mov
dec
mov
es
ds
inc
xor
inc
mov
mov
inc
lret
test
daa
mov
and
ror
cmp
mov
mov
and
dec
mov
cmp
mov
leave
mov
xor
cmpsl
cmpsl
and
mov
movsb
dec
inc
and
mov
aaa
xor
mov
iret
sub
int
dec
test
mov
cmp
mov
mov
mov
sub
test
mov
mov
dec
inc
cmpsl
cmp
aaa
and
movsb
daa
shlb
and
mov
mov
lods
roll
xor
or
add
shr
dec
mov
xorl
mov
cmpl
ja
jmp
push
pushl
pushl
call
mov
mov
xor
or
jmp
fs
loopne
loopne
fs
add
out
or
add
jmp
jmp
cmpsl
inc
ret
daa
fidivs
mov
mov
mov
mov
dec
dec
mov
mov
mov
les
mov
mov
aas
xor
iret
test
mov
xor
xor
daa
sarl
mov
sub
inc
leave
int
sub
mov
les
xor
mov
xor
mov
mov
dec
iret
leave
dec
and
xor
mov
cmp
mov
leave
mov
xor
mov
cmpsl
int
inc
mov
daa
and
mov
mov
mov
lds
and
cmp
mov
and
mov
lret
cmp
enter
sub
mov
and
inc
dec
aaa
movsb
cmp
shll
les
ss
mov
enter
cmp
mov
mov
mov
aaa
xor
mov
and
daa
and
daa
mov
mov
ss
xor
xor
dec
mov
iret
aaa
dec
movsl
cmpsl
inc
mov
mov
mov
mov
inc
and
push
daa
mov
movsl
int
rorl
mov
mov
mov
movsl
test
and
mov
mov
dec
mov
iret
sarl
sarb
mov
and
cmpsl
aaa
and
mov
mov
cmp
and
mov
int
mov
xor
xor
dec
push
xor
mov
xor
shlb
and
int
mov
xor
cmp
cmp
mov
ret
ds
aaa
mov
xor
mov
dec
and
mov
and
mov
cmp
cmp
inc
and
sarb
mov
mov
lret
mov
mov
rolb
xor
movsl
mov
daa
daa
sub
shlb
aas
cmp
les
mov
push
and
mov
cmpsl
mov
mov
iret
ret
iret
daa
mov
aas
mov
daa
cmp
mov
mov
dec
push
dec
mov
iret
dec
dec
int
dec
xor
mov
aas
xor
mov
dec
dec
cmp
into
cmpsl
sub
lds
daa
xor
mov
xor
and
xor
test
inc
mov
ret
fidivrs
leave
mov
xor
mov
and
fisubrs
dec
xor
cmp
mov
inc
cmpsl
mov
fimuls
mov
inc
mov
dec
and
ds
xor
mov
cmpsl
ret
into
es
mov
enter
leave
mov
leave
mov
lret
mov
cmp
enter
mov
xor
test
sub
movsl
enter
xor
fmulp
mov
xor
movsl
ret
mov
mov
shlb
mov
dec
and
and
mov
lds
test
mov
mov
mov
and
aas
mov
xor
cmpsl
sub
inc
inc
aas
inc
movsl
xor
inc
inc
lds
xor
inc
daa
dec
mov
enter
cmp
inc
and
lds
mov
inc
mov
mov
xor
cmp
movsb
inc
xor
inc
mov
mov
mov
mov
mov
incl
xor
subl
xor
mov
and
mov
or
mov
shrd
notl
shl
subl
xor
or
jmp
out
mov
loopne
les
push
mov
add
adc
jmp
jmp
leave
cmp
dec
and
mov
xor
cmp
aaa
mov
push
iret
shll
inc
cmpsl
mov
dec
mov
cmp
mov
mov
mov
movsl
xor
dec
xor
mov
ror
les
mov
dec
leave
mov
inc
movsl
inc
and
mov
cmp
and
rolb
mov
cmp
mov
inc
mov
mov
inc
movsl
dec
and
aaa
test
inc
inc
mov
roll
mov
ss
cmp
sub
mov
ret
test
inc
test
mov
inc
movsb
mov
ds
dec
and
leave
mov
push
rol
daa
mov
dec
inc
mov
es
daa
mov
mov
xor
sub
ds
and
lret
mov
push
and
inc
enter
mov
rorb
xor
mov
and
mov
xor
xor
mov
and
inc
sarl
mov
daa
mov
leave
ret
inc
fidivrs
mov
fidivs
enter
mov
and
les
and
mov
inc
mov
ss
inc
enter
shlb
test
mov
xor
mov
cmp
inc
inc
les
dec
and
dec
mov
and
mov
mov
mov
leave
movsb
lds
mov
movsl
rolb
xor
inc
inc
les
mov
and
inc
ds
aas
into
dec
leave
daa
movsb
mov
cmp
into
daa
xor
lds
mov
es
movsl
movsl
mov
mov
xor
inc
fidivs
rcr
xor
mov
mov
xor
movsl
shlb
movsl
cmp
enter
fiadds
cmp
and
and
cmp
shll
dec
and
inc
daa
dec
lret
and
inc
mov
push
xor
mov
lret
cmp
inc
and
movsb
dec
cmp
mov
mov
into
push
movsb
inc
mov
and
push
daa
dec
aaa
iret
cmpsl
mov
inc
aas
dec
dec
les
mov
aaa
int
mov
fmulp
fisubs
movsl
aas
xor
xor
iret
mov
cmp
inc
sub
inc
mov
mov
lret
dec
xor
mov
and
mov
int
mov
mov
movsb
dec
xor
mov
dec
es
aas
les
mov
mov
and
xor
dec
xor
inc
xor
lret
dec
inc
inc
ret
mov
cmp
aaa
mov
inc
mov
cmp
dec
inc
cmp
cmp
inc
test
daa
mov
es
cmpsl
les
mov
sarb
inc
dec
mov
movsb
sarl
movsl
mov
test
shlb
mov
es
and
push
and
mov
movsb
xor
push
lds
inc
mov
cmpsl
movsb
push
aas
ds
and
aaa
mov
dec
leave
mov
ret
dec
inc
inc
dec
cmp
les
sub
mov
dec
mov
xor
cmp
daa
inc
mov
rol
daa
mov
mov
mov
mov
negl
mov
xorl
shll
orl
xorl
subl
mov
mov
mov
xor
or
shr
sbbl
or
movl
cmp
jne
cmp
je
movl
jmp
add
mov
mov
xor
cmpl
jge
and
xorl
jmp
pushl
push
pushl
push
pushl
call
xor
shrd
shr
mov
mov
mov
mov
xor
or
shl
xor
or
mov
mov
xor
mov
mov
mov
mov
xor
mov
mov
shrd
shr
mov
mov
mov
shll
xorl
xor
mov
or
mov
mov
mov
or
mov
mov
cmp
jne
mov
cmp
je
mov
mov
mov
mov
lea
mov
mov
mov
mov
jmp
adc
fdivr
mov
idivl
test
cld
push
jmp
aaa
movsb
mov
ss
and
xor
xor
mov
ret
dec
cmpsl
aas
inc
mov
inc
fimuls
mov
mov
dec
mov
aas
dec
dec
int
mov
dec
ds
aas
sub
mov
aaa
mov
and
mov
dec
fisubs
int
shlb
mov
shlb
ss
push
dec
mov
iret
and
mov
es
xor
daa
push
mov
dec
and
into
and
lret
inc
mov
push
inc
mov
movsl
xor
fisubs
cmp
sarb
mov
mov
aaa
and
mov
mov
mov
mov
movsb
mov
lret
ds
into
leave
lret
and
mov
mov
push
fidivrs
mov
movl
cmp
cmpsl
mov
daa
inc
mov
lds
dec
cmp
aas
mov
leave
inc
mov
xor
test
aas
inc
and
mov
iret
mov
faddp
mov
sub
mov
mov
and
dec
mov
cmpsl
mov
xor
mov
xor
inc
push
xor
cmp
xor
aaa
ds
lds
inc
cmpsl
and
movsb
lds
mov
ss
mov
aaa
xor
and
mov
and
mov
dec
aas
mov
mov
mov
mov
enter
les
push
xor
rol
ss
xor
mov
inc
mov
lret
ret
iret
inc
dec
int
es
ss
mov
inc
xor
daa
mov
mov
xor
dec
shll
iret
int
sub
xor
inc
lds
inc
shlb
daa
inc
dec
iret
mov
inc
mov
mov
fimuls
mov
les
dec
mov
movsl
mov
into
and
push
xor
into
mov
faddp
inc
xor
mov
shlb
int
shlb
dec
sub
inc
mov
inc
mov
fidivrs
and
aaa
mov
dec
mov
ds
mov
xor
fmulp
mov
inc
into
inc
xor
mov
mov
les
enter
leave
inc
and
xor
daa
mov
mov
mov
xor
mov
shlb
leave
cmp
test
ds
les
cmp
mov
and
dec
dec
enter
mov
sub
and
xor
ds
mov
mov
and
mov
cmp
mov
aas
cmp
inc
dec
and
leave
and
mov
mov
mov
and
roll
inc
mov
mov
cmp
mov
inc
xor
cmp
inc
aas
inc
cmpsl
ret
ds
iret
les
mov
mov
mov
movsl
xor
mov
mov
mov
and
mov
ror
and
les
and
mov
push
les
xor
mov
movsb
and
shlb
dec
dec
mov
cmpsl
dec
dec
mov
mov
rcr
xor
mov
add
lods
rolb
mov
mov
jmp
repz
out
sti
jae
inc
popa
hlt
dec
sbb
jmp
sub
xor
movsb
enter
movsb
xor
mov
aas
and
inc
shrb
mov
and
and
xor
rol
ss
mov
aaa
and
movsl
mov
rorb
inc
and
ret
fidivrs
lds
xor
les
cmp
ds
movsl
movsl
movsl
cmp
xor
shrb
dec
mov
cmp
int
sub
mov
int
xor
leave
mov
aaa
mov
xor
cmp
iret
fimuls
int
inc
inc
int
xor
int
movsl
dec
aas
mov
push
cmp
mov
sub
test
enter
mov
mov
mov
sub
cmp
mov
fisubs
and
rol
dec
mov
dec
dec
and
mov
mov
dec
xor
dec
xor
lds
xor
movsl
fmulp
inc
fisubs
dec
mov
les
mov
push
es
mov
dec
sarb
inc
xor
mov
sub
xor
les
ss
xor
shlb
movsb
aaa
iret
mov
and
mov
lret
mov
sub
enter
movsl
mov
les
int
push
mov
mov
dec
mov
mov
dec
mov
mov
mov
cmp
and
and
xor
mov
inc
shlb
and
enter
enter
and
ss
inc
dec
dec
inc
shll
mov
into
enter
cmp
and
mov
cmp
push
mov
mov
rolb
mov
mov
mov
movsb
dec
and
inc
lret
mov
mov
dec
mov
mov
xor
xor
xor
shll
dec
inc
dec
aas
and
enter
mov
shlb
into
mov
dec
mov
dec
mov
mov
xor
mov
sub
fidivrs
test
cmp
xor
mov
enter
lret
xor
push
mov
ss
cmp
dec
mov
enter
dec
les
aaa
mov
aaa
iret
dec
mov
and
les
shlb
and
and
cmp
mov
inc
and
cmpsl
mov
int
cmpsl
mov
ss
enter
mov
inc
inc
leave
daa
rorb
mov
into
shlb
and
dec
mov
mov
and
mov
mov
sub
mov
mov
cmp
mov
and
inc
lret
aaa
rcll
and
ds
mov
inc
inc
xor
enter
cmp
mov
aaa
mov
mov
sub
iret
xor
test
cmpsl
sarl
mov
and
fimuls
mov
cmp
mov
test
mov
and
xor
movsl
enter
push
mov
mov
mov
movsb
aaa
xor
and
int
fidivs
dec
cmp
mov
int
into
cmp
mov
enter
mov
sarl
dec
movsb
es
xor
ds
xor
mov
dec
and
leave
cmp
test
test
mov
les
iret
inc
jge
shr
mov
xor
shl
or
mov
mov
jmp
imull
insb
call
call
andl
jmp
iret
mov
mov
mov
dec
mov
ss
ss
xor
movsl
ror
mov
lds
ret
and
inc
movsl
dec
mov
and
mov
push
dec
ss
shrb
movsb
cmpsl
mov
es
dec
dec
and
shlb
aas
inc
lret
and
and
and
and
and
and
mov
cmp
inc
mov
mov
mov
rorl
enter
mov
movsb
dec
xor
mov
iret
mov
and
sarb
dec
les
mov
movsb
ds
into
dec
and
dec
xor
inc
inc
xor
ror
mov
sub
iret
xor
mov
mov
mov
ror
mov
shll
lret
dec
aas
mov
and
cmp
mov
xor
xor
mov
movsl
mov
mov
inc
rclb
cmp
inc
and
movsb
sub
ret
and
inc
and
into
mov
inc
mov
xor
cmp
aaa
mov
mov
movsb
xor
shll
into
xor
ret
mov
xor
inc
dec
ss
dec
mov
mov
movsl
mov
xor
xor
dec
ret
inc
mov
push
dec
and
ret
ficoms
mov
sarl
xor
inc
mov
daa
dec
inc
inc
dec
inc
dec
xor
mov
dec
dec
mov
cmpsl
and
ss
cmpsl
mov
dec
mov
movsl
mov
lds
lds
cmp
and
and
mov
dec
mov
dec
fisubrs
mov
ss
iret
mov
dec
enter
into
mov
mov
dec
xor
movsl
int
fisubs
fidivs
inc
mov
and
enter
sarl
les
cmpsl
mov
ds
mov
shlb
mov
mov
xor
inc
enter
rol
sub
int
push
leave
mov
inc
cmp
lret
shlb
inc
mov
and
mov
iret
int
mov
mov
lret
shll
sarl
aas
iret
sub
dec
test
leave
aas
push
shrl
sarb
dec
into
inc
leave
cmp
mov
ss
mov
cmpsl
dec
sub
into
inc
and
lds
dec
xor
dec
mov
mov
es
into
mov
mov
mov
xor
fisubs
ret
xor
fiadds
mov
dec
cmp
inc
mov
mov
mov
dec
movsl
sub
into
and
mov
mov
mov
mov
mov
xor
mov
cmpsl
shll
aaa
inc
mov
ds
iret
dec
mov
and
fidivs
ret
and
and
cmp
xor
dec
mov
dec
xor
es
mov
ss
mov
ror
int
and
and
sub
aas
int
xor
enter
sub
push
and
leave
rorb
mov
inc
mov
cmpsl
mov
inc
shlb
int
xor
mov
es
and
cmp
mov
xor
ds
rorb
movsb
ret
rorl
add
add
xchg
mov
je
jl
stos
xchg
add
mov
cld
push
jmp
mov
rorl
cmp
mov
mov
mov
and
mov
cmp
rorb
daa
inc
dec
xor
cmp
mov
dec
ss
rorl
mov
shll
leave
and
xor
mov
into
cmp
cmp
test
rol
dec
and
into
cmpsl
mov
test
sub
mov
int
mov
mov
xor
daa
mov
rorl
leave
aas
cmp
cmp
rol
inc
into
dec
mov
cmpsl
mov
mov
shll
movsl
daa
cmp
mov
push
cmp
and
mov
into
and
cmp
inc
dec
inc
dec
mov
iret
mov
and
xor
iret
rol
mov
mov
inc
inc
mov
xor
les
inc
cmp
dec
cmpsl
xor
xor
mov
xor
dec
enter
fisubs
mov
push
ss
rolb
mov
xor
rolb
les
mov
mov
sub
es
xor
into
iret
mov
mov
ret
mov
sub
xor
lret
and
xor
push
xor
iret
mov
cmp
fidivrs
dec
aaa
mov
ss
enter
sub
dec
dec
ss
inc
inc
cmp
mov
int
mov
mov
push
mov
cmp
mov
dec
and
iret
int
mov
movsl
rorb
shlb
cmpsl
int
test
mov
dec
enter
mov
faddp
mov
xor
dec
into
rol
inc
enter
mov
cmp
ss
lret
mov
xor
mov
and
mov
mov
enter
and
mov
mov
xor
push
rol
cmpsl
aas
aaa
aaa
mov
mov
mov
daa
mov
sub
cmp
mov
mov
dec
and
cmp
fidivs
xor
inc
les
mov
ss
and
xor
ss
dec
push
mov
mov
lds
mov
fisubs
dec
xor
mov
mov
cmpsl
les
lds
and
and
cmp
int
fidivs
test
dec
mov
inc
xor
xor
and
dec
inc
and
test
cmpsl
inc
dec
dec
movsl
aaa
enter
into
dec
mov
cmpsl
les
ds
inc
inc
and
dec
dec
enter
xor
and
mov
inc
dec
mov
xor
mov
cmp
and
sarl
aas
mov
fisubs
lret
aaa
daa
dec
aaa
mov
sarl
movsl
shlb
mov
mov
test
dec
xor
aaa
dec
and
shll
movsl
leave
xor
mov
mov
shrl
movsl
ret
cmp
and
sub
into
xor
ss
test
cmp
int
mov
lret
shll
dec
sub
and
and
leave
inc
aaa
movl
dec
movsl
dec
cmp
cmp
into
dec
daa
enter
dec
dec
lds
test
sub
and
aas
fmulp
mov
mov
int
into
aaa
inc
fidivrs
dec
xor
inc
mov
cmp
push
shl
mov
mov
xor
mov
cmp
jne
mov
jmp
aas
inc
push
mov
jae
les
ja
cli
popf
jmp
jmp
mov
mov
dec
lds
xor
cmp
mov
push
aas
xor
aas
inc
xor
xor
and
inc
leave
and
mov
cmp
dec
mov
dec
mov
mov
mov
xor
mov
mov
mov
mov
mov
ds
sub
mov
es
push
dec
and
es
mov
mov
mov
and
and
cmp
inc
ds
movsl
mov
inc
mov
dec
dec
rorb
fisubs
test
rolb
lret
dec
inc
dec
mov
inc
mov
enter
daa
movsb
mov
inc
inc
and
mov
mov
aaa
rolb
ror
mov
leave
xor
xor
daa
mov
dec
dec
dec
les
xor
les
mov
mov
movsl
and
cmpsl
mov
movsb
xor
test
and
and
mov
xor
xor
xor
dec
lds
and
mov
mov
fidivrs
inc
xor
cmp
xor
inc
mov
into
inc
cmp
dec
movsb
lret
mov
ss
inc
mov
xor
fisubs
and
into
mov
push
mov
aaa
xor
mov
mov
mov
dec
lret
mov
lret
and
mov
movsb
mov
and
mov
test
xor
and
into
cmp
dec
and
mov
cmp
mov
xor
dec
dec
aas
shlb
into
mov
xor
xor
movsl
dec
enter
cmp
and
int
inc
lds
aas
mov
mov
ds
into
mov
inc
mov
es
inc
cmpsl
mov
sarb
lds
inc
movsl
xor
ret
xor
mov
xor
enter
xor
sub
sub
mov
into
ret
es
and
mov
and
es
lds
mov
aas
lret
fmulp
cmp
xor
mov
mov
mov
mov
and
xor
xor
lret
mov
inc
mov
mov
enter
cmpsl
dec
xor
cmp
xor
int
mov
mov
aaa
test
xor
cmpsl
mov
mov
mov
aas
mov
lds
dec
push
mov
sub
xor
mov
and
roll
rol
ret
dec
mov
int
dec
mov
test
cmp
rol
xor
ss
mov
mov
ret
mov
mov
xor
les
vaddsubps
mov
mov
inc
fidivs
leave
and
ds
daa
dec
push
int
sarb
xor
xor
sub
and
mov
enter
inc
xor
xor
xor
sub
mov
aas
fidivrs
mov
inc
mov
sub
and
mov
ds
xor
cmp
push
mov
cmp
mov
mov
mov
mov
dec
xor
mov
test
mov
movsb
xor
into
xor
cmp
jne
mov
mov
mov
mov
xor
xor
mov
mov
shrd
shr
mov
mov
jmp
sahf
pop
mov
movsl
xor
jbe
lahf
enter
sub
cld
push
jmp
xor
mov
cmpsl
mov
aas
mov
dec
xor
mov
es
and
iret
mov
mov
and
inc
inc
cmp
xor
mov
lds
and
inc
mov
mov
cmpsl
mov
les
dec
inc
mov
mov
and
mov
lds
mov
xor
mov
dec
inc
dec
dec
leave
rol
and
aas
xor
xor
test
xor
dec
xor
mov
ret
mov
mov
lds
and
lret
enter
sub
movsb
fidivrs
cmp
leave
push
cmp
inc
inc
aas
dec
dec
shlb
mov
mov
cmp
iret
xor
movsl
cmp
and
xor
mov
and
push
xor
inc
lret
xor
and
aaa
and
into
inc
and
test
mov
cmpsl
ds
xor
mov
cmpsl
rorb
les
dec
faddp
dec
mov
mov
sub
mov
mov
inc
xor
cmp
dec
shll
mov
movsb
cmp
fiadds
dec
inc
inc
inc
and
inc
leave
lds
ficoms
test
dec
int
test
int
sub
and
dec
es
mov
mov
xor
movsb
lret
mov
aaa
cmpsl
dec
mov
mov
inc
mov
test
mov
es
push
xor
les
and
lret
test
and
mov
fisubrs
int
daa
aaa
cmp
into
xor
mov
mov
leave
xor
aaa
int
xor
mov
ret
mov
inc
mov
xor
and
and
dec
and
mov
mov
and
shlb
mov
es
xor
lret
test
cmp
enter
and
into
push
dec
rolb
shlb
and
shlb
dec
movsb
mov
aas
inc
movsb
rol
leave
fidivrs
dec
mov
les
and
into
mov
sarb
mov
mov
mov
movsb
les
cmp
mov
mov
rorb
ret
xor
cmp
shlb
mov
cmp
into
and
aas
mov
movsl
inc
xor
xor
push
cmp
mov
xor
fiadds
xor
xor
mov
push
dec
mov
mov
les
leave
iret
daa
mov
dec
ds
sub
rorb
xor
int
mov
into
ret
into
movsl
dec
xor
mov
xor
enter
and
mov
rolb
aas
mov
ret
mov
enter
sub
xor
mov
dec
mov
mov
daa
mov
fisubs
cmpsl
dec
xor
cmp
into
inc
ret
movsl
int
movsb
mov
mov
and
enter
lret
inc
and
aas
mov
and
dec
rolb
xor
mov
mov
mov
rorb
inc
cmp
mov
rorl
and
enter
mov
and
fidivs
iret
les
rorl
and
mov
shrb
inc
inc
xor
iret
and
inc
mov
mov
xor
or
mov
shl
xor
mov
mov
or
mov
push
pushl
push
push
call
mov
mov
shrd
shr
shr
xor
push
xor
mov
mov
mov
push
push
push
call
shld
mov
xor
or
mov
mov
jmp
shr
out
data16
jle
in
adcl
sbbl
jmp
mov
fiadds
xor
iret
and
enter
xor
cmp
dec
inc
and
xor
mov
mov
les
daa
and
enter
mov
enter
test
mov
iret
into
mov
leave
mov
inc
mov
test
movsb
inc
es
mov
inc
mov
mov
inc
mov
mov
cmp
sub
dec
and
push
ss
and
aas
dec
lret
mov
xor
mov
inc
mov
mov
cmp
and
into
dec
xor
and
and
fisubs
xor
dec
mov
aas
cmp
shrl
mov
iret
es
aas
es
lds
dec
cmp
cmpsl
and
cmp
fmulp
xor
mov
xor
mov
aas
mov
sarl
cmp
inc
mov
enter
mov
mov
mov
inc
aas
es
xor
inc
lds
sub
and
shlb
lret
inc
aas
cmp
mov
enter
and
cmp
movsl
shll
mov
cmp
lds
int
xor
mov
mov
and
inc
cmp
aaa
mov
daa
inc
dec
dec
dec
ds
mov
inc
movsb
mov
dec
dec
iret
dec
fmulp
xor
cmp
lret
dec
xor
and
mov
movsl
sarb
mov
mov
leave
leave
rol
movsb
ret
into
movsl
sub
mov
ds
mov
sub
mov
xor
mov
lret
mov
and
dec
dec
mov
mov
daa
shlb
dec
xor
shlb
into
inc
mov
mov
cmp
mov
mov
cmp
sub
xor
ss
es
mov
daa
es
mov
sarl
xor
dec
mov
ss
mov
mov
enter
ret
mov
dec
inc
mov
mov
aas
fisubs
mov
es
aas
mov
and
sarb
mov
les
xor
ds
sarb
sub
mov
iret
ret
mov
dec
mov
mov
cmp
dec
daa
rol
and
dec
ds
mov
inc
into
dec
mov
into
fisubs
roll
xor
xor
xor
xor
dec
mov
faddp
daa
cmp
inc
dec
dec
and
ds
dec
push
sub
inc
cmpsl
and
test
mov
ret
mov
mov
cmp
mov
lret
mov
int
aaa
shll
test
aaa
dec
mov
inc
mov
dec
dec
push
enter
shlb
into
sarl
and
inc
inc
mov
daa
mov
mov
mov
aas
cmp
daa
mov
iret
xor
mov
xor
xor
inc
inc
inc
shrl
sub
inc
mov
mov
cmpsl
and
and
aas
shll
mov
and
push
dec
movsb
cmp
iret
ret
sarb
movsl
mov
dec
shlb
mov
ret
aaa
xor
shlb
les
xor
loopne
or
xor
xor
xor
xor
mov
mov
jmp
mov
add
mov
mov
mov
mov
mov
mov
jmp
or
xchg
repz
insb
insb
adc
add
imull
xchg
jmp
iret
mov
inc
test
mov
cmp
xor
and
inc
movsb
ret
inc
dec
ds
dec
mov
dec
mov
cmp
inc
movsl
dec
aas
and
mov
mov
rorb
xor
mov
xor
and
cmp
cmp
and
test
int
cmp
aas
int
ret
daa
mov
mov
xor
daa
enter
xor
dec
les
and
xor
es
ss
and
mov
mov
iret
aas
dec
movsb
lret
cmp
dec
cmp
xor
movsl
mov
les
mov
mov
lds
enter
mov
dec
mov
mov
mov
mov
ds
mov
inc
cmp
sarl
dec
and
rorl
lret
mov
mov
iret
mov
iret
cmp
mov
mov
and
aaa
mov
dec
mov
aas
and
mov
cmp
mov
xor
inc
xor
cmp
es
movsl
leave
and
mov
and
inc
mov
inc
and
mov
cmp
mov
mov
dec
shll
inc
mov
mov
xor
mov
cmpsl
sub
xor
leave
dec
xor
mov
mov
leave
push
test
and
ds
inc
inc
mov
inc
mov
dec
dec
mov
mov
cmp
mov
rolb
rorb
shll
inc
dec
mov
iret
iret
ss
cmp
lds
cmp
dec
mov
cmp
sarl
mov
inc
mov
cmpsl
and
dec
xor
mov
into
mov
dec
mov
movsl
shll
and
mov
and
xor
sub
mov
mov
dec
iret
inc
inc
inc
movsl
dec
mov
and
mov
fisubs
mov
dec
movsb
int
and
inc
cmp
mov
and
mov
fidivs
mov
and
cmp
inc
movsl
dec
mov
enter
xor
mov
mov
and
int
dec
movsl
mov
dec
inc
cmp
movsb
mov
xor
mov
and
mov
lret
xor
es
dec
mov
fidivs
xor
push
iret
aaa
mov
mov
inc
movsb
mov
inc
iret
mov
inc
and
mov
mov
xor
ror
int
inc
mov
inc
mov
and
cmpsl
test
sarb
iret
sarl
rclb
cmp
inc
mov
inc
mov
iret
mov
mov
cmpsl
inc
es
push
vmovaps
mov
and
push
and
mov
movsb
and
mov
sub
lret
rol
dec
enter
and
mov
mov
xor
inc
mov
es
movsl
dec
test
enter
iret
ss
mov
dec
and
and
mov
cmp
lds
ss
and
sub
mov
into
dec
cmp
sub
into
cmp
inc
mov
cmp
mov
enter
mov
iret
movsb
int
mov
mov
shrb
push
dec
xor
sub
and
lret
xor
inc
xor
movzwl
cltd
shld
xor
mov
mov
shl
mov
mov
xor
mov
cmp
jmp
ret
sbb
mov
jae
mov
test
jmp
movsb
dec
xor
dec
mov
cmp
daa
xor
and
lds
dec
mov
dec
ds
leave
inc
lds
daa
dec
aaa
and
inc
ds
and
lret
mov
xor
cmpsl
inc
inc
mov
leave
enter
movsl
int
dec
sub
and
and
inc
aaa
mov
mov
mov
int
xor
cmpsl
cmp
inc
shlb
cmp
mov
sarb
mov
enter
mov
mov
mov
and
mov
dec
mov
mov
xor
inc
sub
leave
cmp
ret
push
fidivrs
inc
mov
xor
fiadds
push
ds
xor
and
and
cmp
iret
and
and
and
and
mov
aas
and
mov
xor
enter
into
enter
ret
mov
lret
cmp
mov
cmpsl
les
aas
daa
cmp
shlb
rcr
mov
ds
mov
and
and
lds
enter
mov
daa
mov
lds
rorb
cmp
int
and
mov
and
es
dec
dec
mov
shlb
and
cmp
into
cmp
mov
and
inc
lret
mov
cmpsl
dec
mov
les
inc
mov
mov
inc
rolb
mov
dec
and
movsl
inc
test
les
les
and
dec
cmpsl
lret
aaa
into
leave
xor
xor
inc
xor
ds
push
lds
ret
movsl
mov
mov
mov
daa
es
cmp
mov
inc
test
inc
xor
shll
and
dec
mov
es
mov
into
xor
test
lds
mov
mov
mov
mov
ss
int
cmp
movsl
movsb
dec
rol
inc
iret
xor
mov
mov
test
mov
cmpsl
mov
into
cmp
sub
dec
and
mov
and
iret
movsl
cmp
shrb
ds
mov
aas
enter
shlb
dec
inc
mov
cmp
les
shlb
dec
dec
dec
es
inc
and
iret
sarb
sub
mov
mov
mov
enter
mov
fisubs
dec
fisubs
dec
mov
and
movsl
mov
shlb
les
cmpsl
mov
cmpsl
and
mov
cmp
ds
mov
inc
mov
fisubs
mov
xor
inc
mov
shll
dec
mov
mov
xor
sarb
lds
cmp
cmp
cmpsl
es
cmpsl
dec
and
dec
and
inc
mov
iret
mov
inc
mov
and
xor
and
push
xor
leave
iret
rorl
ds
dec
xor
and
cmpsl
shlb
mov
and
fisubs
inc
aas
and
shlb
inc
mov
dec
fidivrs
cmpsl
mov
dec
inc
mov
and
mov
lds
mov
and
dec
mov
aas
cmpsl
aaa
les
enter
mov
dec
mov
push
mov
inc
mov
mov
test
cmp
jne
movl
mov
movl
mov
movl
mov
movl
mov
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
add
mov
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
mov
mov
xor
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
add
mov
mov
mov
jmp
mov
imul
leave
nop
jae
push
mov
mov
jmp
and
movsb
iret
ds
mov
dec
mov
fisubrs
inc
aaa
and
movsl
and
test
lret
movsl
mov
iret
mov
mov
dec
mov
and
int
int
xor
test
rolb
dec
xor
int
xor
mov
into
cmp
mov
enter
mov
cmp
mov
inc
mov
xor
int
leave
enter
and
cmpsl
and
es
mov
dec
mov
sub
ror
rol
dec
and
inc
xor
movsb
dec
dec
lds
mov
movsb
aaa
movsl
dec
dec
mov
aas
cmpsl
shll
dec
into
mov
cmpsl
inc
xor
ss
into
mov
iret
enter
inc
inc
aaa
and
mov
mov
dec
into
and
dec
inc
inc
mov
mov
into
lret
mov
enter
dec
cmp
dec
mov
movsb
inc
lds
and
daa
mov
leave
and
mov
lds
shlb
cmp
inc
dec
dec
inc
mov
mov
cmp
fisubs
int
es
test
xor
movsb
dec
mov
leave
inc
lret
and
dec
int
push
mov
xor
and
ret
mov
push
mov
movsb
inc
ss
mov
ds
push
int
cmpsl
xor
inc
mov
int
shll
cmp
test
dec
inc
rol
cmpsl
movsl
xor
ds
sub
and
ret
inc
and
mov
xor
es
movsb
into
inc
int
rcll
and
mov
mov
inc
mov
mov
mov
dec
movsb
rol
dec
movsb
mov
inc
cmp
and
dec
into
inc
and
mov
sub
mov
mov
dec
mov
les
iret
dec
leave
and
xor
xor
into
enter
mov
and
mov
cmp
cmpsl
and
push
mov
and
xor
cmp
mov
enter
inc
dec
test
lret
inc
cmp
mov
inc
cmp
movsl
mov
and
cmpsl
sub
mov
test
sub
inc
mov
mov
mov
and
mov
mov
and
sarb
movsb
movsb
cmp
inc
cmpsl
and
inc
inc
mov
mov
mov
xor
lret
test
dec
dec
and
sub
mov
xor
mov
ret
leave
lds
mov
aas
push
push
and
inc
aaa
xor
aas
mov
xor
movsl
inc
mov
leave
xor
mov
mov
inc
cmp
aaa
movsb
movsb
test
and
iret
ret
mov
cmp
into
ret
es
mov
aaa
inc
mov
cmp
movsl
mov
and
ret
xor
xor
shll
cmp
aaa
mov
xor
xor
mov
fidivrs
mov
ret
aaa
sarb
rorb
into
inc
daa
aaa
inc
lret
inc
fidivs
mov
dec
movsb
dec
dec
rol
dec
mov
xor
dec
iret
xor
dec
push
cmp
mov
dec
and
leave
xor
inc
xor
mov
dec
les
shlb
mov
and
ret
shlb
leave
shrd
shr
mov
mov
xor
shl
xor
or
mov
mov
jmp
orb
push
lods
jb
imul
cmpl
mov
jmp
mov
mov
and
aaa
shll
dec
mov
into
cmp
rorl
mov
mov
xor
mov
into
inc
movsb
cmpsl
enter
test
inc
dec
mov
mov
movsb
ret
lret
mov
cmp
mov
aaa
leave
and
mov
dec
mov
movsb
mov
and
int
enter
fisubs
mov
and
into
daa
and
xor
xor
mov
les
and
dec
dec
ss
mov
mov
cmp
mov
ds
dec
sub
shlb
dec
inc
mov
and
mov
dec
xor
cmp
aaa
aas
xor
mov
ret
inc
leave
cmp
aas
lret
cmp
and
xor
cmp
mov
les
ss
xor
lds
mov
xor
and
dec
inc
mov
dec
ds
sarb
mov
ss
daa
dec
fisubs
mov
int
aas
inc
rol
shlb
mov
mov
lret
dec
test
fisubs
cmpsl
movsb
mov
cmp
inc
mov
les
dec
mov
and
mov
dec
mov
xor
les
mov
push
mov
and
mov
cmpsl
int
xor
dec
enter
ret
dec
mov
shll
and
and
movsb
cmp
mov
inc
mov
shrl
mov
mov
mov
mov
enter
int
mov
ficoms
dec
mov
ds
mov
cmp
dec
mov
cmp
int
cmp
ds
ss
iret
cmpsl
cmpsl
mov
mov
and
inc
inc
mov
mov
and
test
xor
shlb
dec
test
daa
mov
inc
enter
mov
cmp
xor
dec
mov
mov
mov
lds
ret
mov
daa
iret
and
leave
dec
dec
inc
dec
and
inc
aaa
ret
lret
inc
dec
mov
mov
mov
xor
enter
mov
inc
mov
aas
lds
and
mov
daa
xor
mov
and
xor
mov
mov
cmp
daa
inc
daa
fidivs
inc
mov
movsb
xor
mov
xor
daa
shll
movsl
xor
mov
dec
dec
into
mov
mov
push
mov
aaa
into
mov
xor
mov
aaa
sarb
sub
shlb
test
mov
daa
fidivrs
dec
and
movsb
mov
xor
int
rorb
sub
les
lret
lds
inc
xor
and
shlb
iret
test
dec
mov
mov
mov
mov
leave
shlb
cmp
test
inc
shlb
xor
and
and
dec
and
and
xor
mov
sarb
lds
test
cmp
ds
inc
and
mov
rolb
aas
mov
inc
fidivs
cmpsl
dec
and
rclb
cmp
mov
mov
mov
xor
mov
int
mov
sub
xor
or
mov
mov
shrd
shr
mov
mov
xor
xor
or
jmp
inc
sub
jo
mov
jne
stos
loop
mov
psubsw
cld
push
jmp
mov
mov
xor
les
xor
xor
es
and
xor
push
mov
dec
mov
dec
mov
dec
and
dec
and
mov
mov
cmp
cmp
mov
aaa
les
mov
leave
es
and
inc
movsl
leave
inc
les
inc
sarb
les
enter
xor
and
dec
mov
daa
mov
dec
mov
cmp
iret
aaa
dec
mov
cmp
cmpsl
xor
mov
and
dec
mov
cmp
push
xor
and
xor
into
cmp
xor
mov
sarb
and
mov
cmp
sarb
iret
ror
and
mov
cmp
and
dec
ds
mov
mov
dec
inc
ds
and
dec
inc
mov
xor
enter
xor
test
aas
and
mov
aaa
ret
ss
dec
inc
mov
cmp
mov
shlb
inc
movsb
cmp
lret
mov
dec
es
daa
and
xor
mov
movsb
and
aas
and
lret
inc
mov
and
xor
mov
mov
inc
xor
dec
mov
and
rolb
cmp
les
mov
dec
xor
mov
dec
ds
cmp
mov
movsb
rorl
inc
mov
iret
movsl
shlb
movsb
ror
ds
push
xor
aas
dec
sarl
and
mov
faddp
mov
test
inc
xor
test
ds
mov
xor
and
dec
inc
mov
inc
mov
xor
aaa
inc
enter
into
vaddsubps
inc
into
mov
xor
mov
movsb
sub
inc
shlb
mov
rcr
movsb
xor
dec
dec
ret
dec
cmp
mov
daa
iret
mov
mov
movsb
cmpsl
inc
dec
cmp
dec
mov
dec
mov
mov
inc
mov
iret
inc
cmp
roll
test
inc
daa
inc
inc
es
mov
and
mov
inc
dec
xor
push
int
into
inc
mov
fisubs
mov
movsb
mov
ret
mov
movsb
leave
enter
test
movsb
mov
lds
dec
mov
mov
and
inc
aaa
aaa
mov
iret
aaa
mov
iret
cmp
ror
xor
mov
inc
mov
dec
lds
push
mov
and
push
mov
xor
mov
leave
mov
xor
daa
mov
leave
mov
int
mov
and
cmp
lret
shlb
and
push
dec
cmpsl
cmp
dec
mov
ret
movsl
shll
int
mov
inc
inc
inc
inc
and
cmp
leave
cmpsl
mov
mov
dec
xor
mov
test
mov
xor
leave
mov
mov
xor
mov
cmp
inc
mov
ss
and
dec
ror
aaa
dec
inc
iret
cmp
cmp
and
int
cmpsl
cmp
sub
mov
lret
cmp
cmpsl
and
mov
xor
rorb
inc
movsl
faddp
dec
aas
dec
mov
dec
and
mov
inc
add
loope
mov
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
mov
mov
add
mov
mov
shrd
shr
mov
mov
xor
xor
or
add
jmp
icebp
dec
sahf
mov
jecxz
xchg
repnz
jmp
movsl
lret
lds
mov
les
movsb
inc
mov
xor
enter
cmp
xor
xor
mov
movsb
xor
xor
inc
xor
aaa
mov
dec
mov
mov
lds
dec
mov
into
les
rorb
cmp
leave
and
mov
and
ret
xor
and
dec
lret
lret
lret
xor
inc
mov
cmp
test
push
mov
mov
rolb
fisubs
and
cmpsl
movsb
and
into
cmpsl
mov
cmpsl
inc
mov
mov
push
test
enter
mov
enter
mov
mov
xor
mov
rcr
push
fiadds
xor
les
leave
dec
rcr
movsl
test
mov
dec
and
mov
dec
aas
aas
movsl
dec
shlb
push
inc
shlb
mov
mov
movsl
mov
and
mov
dec
test
leave
movsb
movsl
dec
dec
mov
mov
dec
push
iret
inc
aaa
lds
mov
mov
sub
inc
aaa
dec
and
mov
dec
lret
ds
ds
mov
cmp
mov
fidivrs
daa
and
dec
ds
dec
mov
inc
dec
shlb
dec
ds
aas
dec
iret
mov
ds
test
movsb
and
cmp
movsl
mov
mov
dec
fiadds
dec
into
rol
and
ss
mov
mov
xor
xor
and
shlb
movsb
cmp
inc
movsl
movsb
int
aaa
test
ss
mov
xor
ss
xor
mov
inc
xor
cmpsl
leave
mov
shlb
mov
aaa
lds
ret
mov
movl
mov
dec
aas
mov
xor
ret
push
into
ss
mov
inc
shll
cmp
ret
dec
test
and
daa
mov
cmp
lds
xor
cmpsl
and
dec
lds
inc
cmp
mov
push
mov
mov
cmp
and
and
dec
ret
and
xor
mov
xor
shlb
sub
inc
lds
mov
mov
into
mov
mov
inc
inc
es
and
xor
lret
dec
mov
inc
mov
and
xor
mov
and
cmp
rol
int
cmp
into
inc
mov
xor
mov
push
es
inc
ss
mov
and
mov
mov
movsl
cmp
mov
mov
int
xor
xor
mov
mov
movsb
dec
daa
ret
rolb
inc
mov
fisubrs
mov
ret
shll
dec
movsl
sub
inc
mov
mov
and
lret
cmp
mov
les
mov
dec
push
cmpsl
dec
and
ss
cmp
dec
fisubs
inc
fiadds
fisubs
mov
and
inc
sub
mov
inc
lret
mov
xor
mov
mov
mov
dec
mov
mov
mov
mov
mov
sub
leave
movsl
enter
movsl
fidivrs
int
inc
mov
ret
ror
aas
sarl
mov
es
mov
dec
mov
mov
shrd
xor
shr
mov
mov
xor
or
jmp
mov
inc
in
fs
dec
imul
repnz
add
jmp
jmp
mov
es
mov
inc
int
push
and
dec
mov
mov
es
and
lret
mov
test
xor
mov
mov
and
dec
rol
inc
les
mov
cmp
xor
mov
lret
shlb
mov
enter
mov
mov
mov
mov
mov
into
cmp
mov
into
and
lret
mov
and
inc
xor
lds
mov
mov
xor
movsl
fisubs
aas
mov
daa
movsl
movsb
mov
test
mov
daa
enter
mov
shlb
mov
mov
mov
inc
xor
aaa
mov
mov
into
ds
mov
sub
dec
and
inc
movl
dec
dec
movsb
and
xor
and
mov
and
iret
inc
dec
mov
movsl
xor
sub
rol
mov
inc
and
mov
iret
push
dec
mov
fmulp
dec
mov
push
dec
mov
dec
mov
dec
shlb
inc
mov
dec
and
les
shlb
lds
and
ror
iret
cmp
and
sub
fimuls
dec
dec
int
and
mov
mov
and
inc
mov
mov
inc
mov
leave
lret
movsl
mov
cmp
and
and
mov
daa
es
shrl
and
mov
mov
mov
xor
inc
and
lret
int
inc
ret
movsl
into
and
dec
into
cmp
shll
aaa
xor
mov
aaa
xor
and
dec
ret
dec
dec
push
xor
ss
cmp
es
shll
xor
int
cmp
mov
push
ret
xor
cmp
and
enter
xor
mov
ds
leave
mov
leave
mov
dec
cmp
ss
cmp
mov
les
sub
mov
sub
mov
sub
ret
lret
push
movsl
sub
mov
and
mov
inc
daa
int
mov
aaa
xor
fmulp
mov
ds
shlb
and
dec
mov
mov
cmpsl
sub
mov
rol
cmp
lret
inc
mov
inc
fidivs
leave
movsl
mov
inc
xor
xor
movsb
aas
cmpsl
xor
rol
ss
int
rcl
mov
xor
dec
dec
int
aaa
mov
rolb
push
movsb
mov
inc
mov
cmp
mov
ror
roll
lds
enter
cmp
movsl
shll
mov
lret
movsl
int
and
cmp
mov
inc
cmp
mov
and
daa
xor
and
mov
ss
cmp
mov
mov
sub
mov
ds
into
movsb
mov
mov
rolb
ds
mov
mov
mov
xor
mov
xor
cmp
or
loop
mov
mov
mov
mov
jmp
push
orb
arpl
or
adc
jmp
jmp
and
mov
xor
inc
shll
es
inc
and
lret
mov
mov
les
inc
lret
and
mov
aaa
mov
mov
mov
daa
inc
mov
ds
push
inc
sub
es
leave
dec
mov
cmp
and
mov
mov
cmp
mov
lds
dec
sarl
and
inc
fisubs
mov
mov
lds
int
shlb
inc
mov
movsb
cmpsl
int
and
xor
mov
mov
into
dec
mov
ds
ror
cmp
mov
mov
leave
mov
ficoms
mov
cmp
and
xor
fisubrs
es
iret
and
mov
xor
lret
xor
dec
and
mov
mov
daa
mov
dec
xor
shlb
xor
ss
cmp
into
aas
rolb
and
dec
dec
xor
lret
inc
mov
mov
push
fidivrs
into
mov
daa
ss
lds
mov
enter
cmp
mov
mov
mov
mov
cmp
cmp
mov
inc
mov
and
inc
xor
dec
and
mov
and
cmp
movsl
and
dec
mov
cmp
shll
into
mov
iret
cmp
and
shlb
lret
mov
inc
dec
mov
xor
int
xor
movl
and
daa
enter
sarl
xor
fmulp
mov
ss
movsl
mov
sub
mov
mov
aaa
movsl
ret
cmp
mov
cmp
daa
inc
and
push
mov
and
movsl
lds
inc
shlb
ds
push
push
cmp
lds
sub
movsb
mov
movsl
and
mov
rol
mov
and
cmp
shlb
mov
mov
aaa
dec
fidivrs
mov
cmp
mov
inc
and
cmp
mov
mov
into
dec
xor
aaa
mov
mov
mov
mov
xor
into
mov
and
mov
ds
xor
shlb
mov
and
fisubrs
mov
mov
xor
ret
cmpsl
mov
and
mov
dec
inc
sub
cmpsl
dec
test
and
mov
mov
cmp
mov
mov
mov
lret
xor
lret
xor
dec
mov
inc
fimuls
dec
ret
inc
mov
inc
ds
mov
lret
cmp
and
test
cmpsl
test
inc
mov
dec
fidivrs
mov
inc
and
xor
xor
mov
xor
mov
ss
mov
and
and
leave
mov
dec
movsb
dec
dec
shlb
mov
inc
int
mov
dec
xor
shlb
les
shlb
mov
cmp
sarb
sub
dec
ds
aas
daa
and
and
and
xor
iret
inc
inc
mov
mov
inc
xor
shlb
mov
mov
test
rolb
cltd
xor
shrd
xor
or
jmp
jbe
mov
arpl
jbe
add
js
adc
mov
imul
jmp
cmpsl
ss
xor
xor
mov
dec
mov
cmp
mov
inc
rorb
ds
inc
daa
mov
fisubrs
lret
cmp
mov
mov
xor
inc
mov
mov
push
mov
rorl
mov
mov
movsb
inc
shlb
and
lds
and
daa
and
aas
and
mov
fidivrs
xor
dec
xor
dec
dec
cmp
push
iret
cmp
mov
mov
mov
aas
xor
inc
dec
mov
dec
mov
cmp
xor
sub
mov
movsb
xor
daa
xor
dec
aas
and
and
iret
and
shrl
es
lds
mov
inc
inc
rorb
sub
mov
dec
xor
cmpsl
rolb
cmpsl
xor
dec
xor
iret
iret
xor
mov
cmpsl
sub
lret
dec
leave
inc
aaa
and
shll
cmp
int
inc
movsb
lds
ds
cmpsl
ss
shlb
movsl
mov
mov
iret
sub
dec
inc
fidivrs
dec
and
and
es
cmpsl
dec
ss
mov
enter
mov
dec
and
movsb
mov
sarl
dec
cmp
sarl
inc
mov
xor
sub
aaa
dec
movsl
mov
dec
mov
and
mov
mov
mov
inc
ret
mov
aaa
int
and
dec
aas
ss
mov
push
xor
and
lret
mov
int
mov
and
mov
mov
leave
xor
enter
dec
rorb
xor
leave
inc
mov
mov
dec
iret
aaa
mov
xor
xor
test
inc
and
sub
xor
xor
mov
mov
mov
xor
dec
inc
inc
mov
mov
aas
shlb
mov
inc
and
enter
int
dec
mov
les
int
mov
sub
mov
mov
es
lds
mov
cmp
aas
inc
mov
inc
xor
and
inc
int
inc
cmp
mov
mov
lds
les
xor
dec
cmp
ss
mov
ss
leave
mov
into
ret
and
rol
mov
fidivs
enter
int
lret
ret
movsb
inc
int
dec
shlb
iret
daa
daa
ss
dec
mov
int
ret
test
push
shlb
and
mov
xor
and
mov
inc
dec
and
ss
ret
inc
movsl
lret
mov
ds
dec
and
daa
mov
cmpsl
cmpsl
test
mov
xor
dec
mov
mov
mov
dec
xor
inc
inc
rorl
mov
inc
aas
inc
inc
sub
mov
and
movsb
mov
mov
es
and
inc
daa
ret
ss
and
inc
lret
movl
enter
mov
mov
fidivs
mov
int
movsb
mov
mov
sub
cmpsl
inc
int
lret
and
mov
lds
xor
mov
or
xor
xor
jmp
subb
insb
jl
movsl
test
or
jmp
jmp
inc
ror
shrl
fisubs
mov
es
and
es
iret
test
es
mov
sub
mov
dec
mov
rol
test
mov
sarl
inc
movl
mov
dec
mov
mov
daa
aas
fidivrs
cmp
int
shlb
mov
dec
dec
mov
cmp
mov
and
enter
enter
mov
aas
xor
inc
inc
mov
dec
xor
sarb
mov
cmpsl
mov
dec
shlb
inc
dec
inc
cmpsl
mov
aaa
cmp
movsl
les
and
cmpsl
dec
inc
xor
mov
mov
inc
ss
shlb
mov
inc
les
xor
fimuls
mov
mov
ds
dec
inc
and
xor
daa
mov
cmp
mov
dec
dec
test
dec
and
iret
mov
int
inc
cmp
dec
and
mov
test
ds
ror
dec
es
mov
and
shlb
aas
xor
enter
xor
inc
dec
mov
test
mov
mov
mov
xor
cmp
mov
test
inc
iret
rol
aas
inc
and
mov
ss
mov
cmp
mov
ss
shlb
ss
cmp
inc
cmp
mov
fidivrs
mov
mov
mov
dec
inc
mov
and
rolb
and
leave
mov
dec
lret
cmp
and
xor
mov
mov
movsl
cmp
lret
shlb
leave
xor
aaa
dec
movsl
push
and
and
mov
int
ss
cmp
lret
mov
shlb
aaa
inc
inc
dec
ss
rorb
inc
cmp
mov
cmp
ret
and
mov
mov
int
ds
test
mov
cmp
inc
dec
enter
ds
leave
ds
leave
dec
mov
mov
mov
dec
inc
mov
mov
movsb
ds
int
sarb
movsl
lret
mov
lret
movsl
into
ret
mov
inc
mov
es
mov
mov
push
into
fidivs
xor
dec
mov
xor
leave
and
into
ror
xor
cmp
mov
sarb
lret
and
dec
sarb
mov
and
les
lret
cmp
and
aas
cmp
enter
cmp
daa
shlb
ss
and
inc
xor
and
lret
mov
sub
test
and
ds
fidivrs
mov
xor
and
inc
aas
inc
xor
xor
mov
mov
mov
mov
mov
and
inc
cmp
dec
mov
xor
cmp
dec
ret
mov
movsl
movsb
aas
leave
mov
sarb
push
shlb
daa
into
mov
aaa
daa
and
mov
mov
enter
aaa
mov
push
sub
xor
xor
xor
ret
lret
daa
aas
mov
mov
mov
shrd
shr
shl
jmp
dec
cli
call
call
movsl
icebp
or
cld
push
jmp
xor
mov
lret
movsb
mov
shlb
inc
aas
aaa
and
push
dec
mov
int
movsb
enter
mov
les
rorl
inc
ret
dec
leave
and
cmpsl
and
xor
mov
inc
ret
inc
aas
es
xor
cmp
sub
inc
ss
lds
dec
xor
fisubs
mov
test
cmp
mov
cmp
push
xor
xor
ds
and
ss
mov
xor
cmp
lret
mov
inc
aaa
rcr
movsb
mov
cmp
ss
mov
xor
and
and
lds
inc
inc
daa
test
fiadds
sub
es
mov
inc
les
dec
cmpsl
and
movsl
movsl
inc
xor
movl
mov
iret
mov
inc
mov
mov
movsl
cmp
mov
inc
aaa
cmpsl
leave
xor
mov
es
and
movsb
mov
ds
shlb
dec
dec
mov
mov
mov
lds
cmpsl
mov
int
xor
push
and
xor
cmpsl
dec
mov
inc
and
ror
sub
fidivrs
mov
inc
movsb
aas
mov
shlb
mov
es
cmp
shll
mov
xor
enter
iret
cmp
cmpsl
sarl
shlb
leave
mov
mov
enter
push
into
mov
mov
cmpsl
shlb
dec
shll
xor
sub
iret
leave
cmp
mov
mov
mov
leave
into
mov
mov
mov
xor
mov
movsl
and
lret
rorb
mov
enter
mov
rol
and
ror
mov
mov
mov
mov
xor
dec
xor
enter
mov
mov
lds
fiadds
xor
and
es
dec
ss
mov
enter
lds
cmp
mov
movsl
cmpsl
cmp
inc
and
mov
test
mov
dec
mov
dec
ss
into
xor
ss
mov
xor
inc
leave
inc
dec
xor
dec
inc
cmp
dec
dec
daa
inc
movsb
les
leave
mov
mov
and
and
lret
mov
xor
mov
ss
cmp
mov
les
movsb
lret
cmp
cmp
iret
ret
mov
aaa
xor
dec
int
mov
mov
mov
daa
iret
and
inc
movsl
movsl
mov
mov
push
and
dec
and
xor
mov
mov
xor
mov
enter
and
mov
mov
aas
dec
dec
mov
int
sub
les
sarb
lret
dec
xor
sub
inc
rolb
cmp
movsl
dec
dec
mov
mov
sarb
inc
ds
ds
mov
and
inc
mov
aaa
and
test
mov
inc
xchg
mov
mov
mov
xor
or
mov
shll
xor
mov
jmp
loopne
je
je
les
xchg
hlt
lock
jmp
jmp
iret
mov
mov
mov
xor
mov
and
inc
mov
mov
lds
mov
xor
ficoms
dec
mov
and
cmp
mov
mov
rorb
roll
mov
mov
iret
inc
mov
xor
cmpsl
rcl
mov
test
ds
mov
mov
xor
and
xor
mov
inc
fisubs
mov
movsb
into
dec
inc
mov
lret
mov
dec
ror
mov
cmp
movsl
mov
mov
cmp
and
xor
and
and
mov
and
inc
inc
shrl
fidivrs
ds
sarl
lret
inc
lret
mov
inc
dec
mov
movsb
mov
mov
movsb
enter
sub
mov
shlb
movsb
mov
and
mov
rolb
movsb
leave
shll
inc
mov
ds
mov
dec
fiadds
ds
lret
movsl
lds
aas
mov
mov
ret
mov
dec
dec
mov
dec
movsb
cmp
aaa
inc
mov
into
and
lds
mov
inc
leave
cmp
dec
cmp
xor
xor
cmpsl
es
lds
mov
mov
mov
inc
and
ror
and
aas
es
cmp
cmp
mov
xor
inc
push
ret
dec
lret
aaa
and
cmpsl
mov
dec
aaa
es
xor
mov
inc
mov
dec
inc
and
inc
shll
ds
shlb
xor
ret
and
iret
mov
inc
dec
mov
es
les
xor
daa
mov
dec
mov
dec
test
daa
mov
mov
and
inc
movsb
fidivs
int
iret
mov
cmp
into
lds
dec
inc
enter
xor
xor
inc
inc
xor
dec
inc
and
cmp
aaa
cmp
mov
aas
rolb
cmpsl
aaa
lds
rol
mov
mov
enter
cmpsl
and
cmp
ret
mov
rcl
mov
dec
mov
int
mov
int
inc
es
cmp
aaa
movsb
inc
les
inc
inc
mov
xor
mov
dec
mov
xor
inc
cmpsl
aas
mov
mov
sarb
inc
aaa
mov
enter
mov
mov
cmp
cmpsl
mov
mov
mov
mov
mov
inc
dec
push
lret
test
cmp
into
mov
mov
mov
dec
mov
xor
dec
push
shlb
inc
les
mov
mov
mov
dec
xor
push
es
inc
es
mov
movsl
xor
iret
leave
ds
dec
cmp
cmp
into
les
lret
test
enter
mov
mov
dec
xor
push
cmp
and
cmp
fiadds
mov
int
mov
leave
mov
mov
mov
mov
mov
fidivrs
sub
ret
es
xor
mov
xor
movsl
daa
mov
mov
inc
les
les
inc
dec
xor
cmpsl
xor
into
xor
mov
add
jge
xor
or
shr
or
cmp
jne
cmp
jne
jmp
mov
mov
mov
mov
xor
xor
jmp
dec
iret
stos
fsubrl
shrl
jmp
mov
inc
and
int
mov
mov
leave
and
xor
and
inc
sarb
inc
mov
mov
leave
mov
inc
and
mov
mov
mov
aaa
mov
mov
enter
into
and
dec
inc
enter
cmpsl
inc
inc
mov
mov
and
mov
movsl
mov
ret
mov
mov
cmp
shlb
mov
dec
mov
mov
mov
enter
es
shlb
push
ret
daa
lret
mov
rol
dec
mov
into
mov
mov
mov
mov
int
xor
rorb
mov
aaa
dec
leave
enter
mov
mov
push
xor
mov
dec
lds
int
es
into
mov
inc
inc
mov
and
mov
mov
xor
inc
inc
cmp
ds
enter
inc
lret
inc
es
cmpsl
ds
movsl
xor
les
xor
ss
aas
mov
leave
int
mov
mov
and
test
cmp
int
lds
mov
ss
cmp
aas
mov
les
ret
mov
shll
fisubs
sarb
dec
les
aas
and
daa
inc
lds
dec
ss
inc
inc
push
rol
mov
into
xor
fisubs
sub
cmp
movsb
inc
xor
iret
cmp
inc
movsb
daa
iret
inc
mov
and
es
mov
ss
mov
inc
mov
leave
mov
mov
mov
es
mov
ret
cmpsl
mov
mov
movsl
mov
and
mov
enter
cmp
mov
cmp
mov
fiadds
and
and
movsl
and
inc
mov
test
dec
leave
mov
daa
xor
and
inc
inc
xor
push
dec
mov
mov
mov
xor
movl
mov
aaa
mov
dec
and
xor
and
int
les
mov
mov
movsl
sarl
inc
fidivrs
int
es
test
inc
mov
cmp
aas
and
int
mov
enter
mov
cmp
xor
inc
test
test
ret
iret
xor
sarl
inc
cmp
dec
into
leave
and
movsl
movsb
inc
aaa
sub
shrb
mov
dec
mov
mov
inc
aas
dec
ss
leave
xor
xor
dec
dec
mov
sub
aaa
and
mov
dec
cmp
aaa
dec
mov
movsl
mov
inc
mov
xor
dec
aas
mov
les
mov
lret
int
mov
mov
movl
and
mov
xor
push
lret
mov
es
enter
mov
fimuls
sarb
aaa
mov
into
xor
enter
mov
mov
sub
and
movsb
dec
mov
daa
mov
mov
and
inc
dec
iret
mov
int
movsl
dec
xor
mov
mov
and
iret
mov
es
rcr
xor
sarb
movsb
and
mov
mov
enter
lods
roll
call
mov
mov
mov
xor
or
mov
shl
xor
mov
mov
or
mov
push
pushl
push
push
call
mov
mov
shrd
shr
jmp
push
jmp
outsl
imul
imul
in
notl
jns
add
sub
cld
push
jmp
dec
mov
movsb
and
lret
roll
movsb
dec
and
xor
int
mov
dec
cmp
lret
mov
mov
xor
faddp
inc
mov
mov
iret
aaa
sarb
mov
mov
mov
xor
les
xor
mov
rol
inc
aaa
push
xor
mov
mov
movsl
iret
cmp
and
mov
mov
mov
dec
mov
lds
mov
dec
les
mov
inc
ds
dec
leave
enter
cmp
mov
dec
inc
shlb
shlb
push
and
aas
and
inc
mov
and
mov
movl
iret
cmp
cmpsl
shlb
ret
cmpsl
daa
mov
inc
ret
and
aas
xor
and
cmp
aas
xor
lds
mov
mov
mov
dec
movsb
int
aas
mov
sarb
leave
dec
cmp
mov
mov
mov
and
mov
dec
xor
inc
int
test
inc
movsb
and
dec
leave
mov
int
inc
int
inc
dec
aaa
leave
movsl
inc
mov
shlb
push
mov
aaa
and
and
dec
leave
int
sub
movsb
dec
mov
xor
aas
shlb
and
inc
mov
ds
mov
dec
mov
lret
int
push
mov
mov
mov
mov
fisubrs
roll
xor
sarb
daa
inc
dec
mov
mov
movsb
shll
leave
mov
mov
and
mov
and
ds
mov
into
rol
sarb
mov
into
mov
mov
inc
mov
movsl
xor
dec
mov
test
mov
mov
cmp
into
cmp
test
xor
ret
mov
dec
shlb
inc
es
test
cmp
cmp
les
dec
mov
mov
dec
dec
aaa
inc
mov
sub
inc
mov
iret
mov
xor
daa
enter
mov
xor
lret
mov
mov
fisubs
mov
iret
movsl
and
leave
movsl
sub
inc
mov
aaa
movsb
mov
mov
mov
dec
sarb
mov
cmp
xor
xor
mov
test
xor
int
mov
lds
daa
movsb
mov
inc
mov
iret
ds
daa
xor
xor
xor
sarl
mov
push
cmpsl
rol
mov
mov
ret
dec
ret
inc
shlb
and
xor
into
push
sub
shlb
xor
sub
inc
ret
int
mov
ror
mov
inc
mov
rol
mov
dec
mov
cmpsl
cmp
xor
cmpsl
mov
and
mov
mov
ds
aas
inc
mov
fidivs
mov
movsb
mov
movsb
iret
mov
xor
dec
ss
lds
mov
mov
and
shlb
mov
xor
mov
les
mov
cmpsl
es
sub
inc
aas
mov
dec
and
mov
mov
int
mov
mov
cmp
es
mov
cmp
daa
mov
inc
mov
xor
daa
mov
ljmp
out
xor
mov
mov
mov
push
push
push
call
shld
shl
mov
or
xor
or
xor
xor
mov
mov
mov
mov
mov
xor
xor
shrd
shr
mov
mov
mov
mov
xor
or
mov
mov
mov
xor
xor
shl
mov
mov
mov
shrd
xor
or
mov
mov
mov
mov
shl
xor
or
shr
xor
or
cmp
jne
cmp
je
pushl
pushl
pushl
push
push
call
pop
leave
ret
mov
mov
ret
mov
mov
ret
push
mov
jmp
sub
ds
adc
sbb
jmp
shll
mov
mov
and
mov
ret
ds
dec
dec
cmpsl
xor
aas
inc
and
daa
and
enter
and
mov
es
and
inc
les
dec
movsl
mov
test
and
into
dec
mov
mov
inc
and
push
ds
lret
sub
xor
dec
dec
mov
mov
and
dec
mov
inc
rolb
sub
ret
and
mov
cmp
ret
inc
dec
cmp
mov
and
aas
movsl
and
aas
leave
into
ss
mov
movsb
xor
ret
leave
mov
dec
dec
dec
mov
dec
xor
dec
dec
int
inc
push
xor
dec
mov
mov
iret
dec
inc
mov
and
mov
inc
mov
cmp
mov
mov
dec
mov
es
fidivs
mov
mov
mov
les
lret
mov
daa
les
inc
xor
cmp
dec
mov
mov
inc
aaa
and
xor
aaa
daa
inc
xor
inc
mov
mov
mov
dec
mov
xor
es
xor
mov
mov
shlb
and
iret
xor
sub
xor
aaa
daa
cmpsl
into
into
xor
iret
and
mov
rorl
daa
movsb
test
cmp
aaa
and
mov
aas
push
dec
daa
aas
and
dec
mov
leave
and
movsb
xor
int
and
inc
rcr
enter
into
dec
dec
test
and
mov
mov
fiadds
and
inc
mov
inc
mov
iret
cmp
dec
movsb
cmp
cmpsl
movsb
dec
mov
and
les
and
sub
mov
mov
xor
mov
fidivs
ret
xor
sub
push
push
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
and
mov
or
mov
imul
jmp
or
or
repnz
orl
jmp
jmp
mov
xor
mov
movsl
dec
lds
cmp
mov
daa
and
xor
ret
fmulp
xor
movsb
mov
aaa
inc
mov
mov
into
and
les
dec
inc
mov
leave
movsl
leave
mov
shlb
inc
and
cmp
inc
cmpsl
cmp
mov
iret
and
xor
lret
inc
mov
mov
xor
mov
movsl
iret
mov
xor
ret
inc
mov
aaa
mov
mov
mov
lret
enter
mov
ror
push
and
mov
sub
rol
mov
cmp
dec
ds
enter
mov
test
inc
inc
mov
mov
push
mov
mov
cmp
inc
mov
mov
and
mov
inc
mov
les
mov
lds
and
dec
ss
and
dec
mov
xor
and
sarb
dec
xor
es
cmp
xor
and
inc
inc
xor
test
aaa
sub
les
mov
mov
push
inc
into
dec
lret
int
push
mov
mov
dec
cmp
and
mov
xor
mov
xor
mov
xor
mov
enter
int
push
leave
xor
cmp
daa
daa
and
iret
mov
aas
xor
les
mov
shlb
fidivs
xor
cmp
dec
and
inc
xor
dec
es
int
dec
les
xor
mov
inc
dec
dec
inc
aas
inc
lret
leave
mov
mov
sarl
xor
and
aaa
int
lret
ds
mov
mov
dec
mov
shll
and
movsl
push
inc
and
xor
mov
mov
imul
and
mov
xor
mov
or
mov
sub
mov
add
imul
mov
jmp
movl
movl
jmp
push
sbb
popf
les
xchg
hlt
lret
div
fs
jmp
cmpsl
xor
sub
mov
into
inc
mov
xor
dec
lds
cmpsl
dec
cmp
aas
movsl
rclb
es
roll
ss
lds
mov
xor
test
mov
and
int
and
xor
mov
shll
and
mov
xor
ret
sub
fidivrs
and
test
ss
ds
mov
aas
rol
cmpsl
int
dec
cmpsl
es
rcl
test
cmp
push
ror
mov
ret
inc
mov
cmpsl
enter
cmp
xor
les
lret
fimuls
ds
inc
iret
mov
mov
mov
cmp
les
xor
fiadds
and
cmpsl
mov
mov
inc
cmp
movsb
leave
cmp
inc
into
enter
shll
iret
mov
inc
push
mov
mov
and
shlb
and
leave
int
mov
sarb
fidivrs
es
movsb
test
cmp
mov
dec
xor
xor
mov
mov
and
mov
dec
mov
dec
mov
xor
mov
cmpsl
mov
cmpsl
lret
cmp
dec
dec
mov
sub
cmp
shll
dec
dec
inc
lret
xor
mov
cmp
cmpsl
cmp
lds
es
inc
inc
inc
ret
inc
inc
mov
mov
mov
shlb
mov
fimuls
and
sarl
ds
dec
mov
mov
test
inc
mov
mov
and
mov
movsb
cmpsl
mov
and
lds
xor
inc
and
dec
mov
xor
dec
inc
and
dec
aas
leave
mov
sbb
add
mov
mov
or
xor
mov
jmp
push
fwait
push
fwait
mov
jns
out
jmp
jmp
into
mov
mov
mov
mov
cmp
inc
mov
movsb
aas
xor
movsb
mov
and
movl
dec
mov
mov
movsb
les
lds
dec
dec
aas
cmp
mov
daa
mov
test
xor
ds
dec
cmpsl
mov
inc
mov
les
xor
and
test
sarl
mov
mov
daa
fiadds
mov
dec
movsb
and
push
mov
sarl
inc
cmp
lds
xor
xor
rorb
aas
mov
cmp
cmp
mov
inc
sub
cmp
mov
and
into
inc
leave
mov
and
xor
mov
mov
xor
mov
aas
and
movsb
ds
and
dec
xor
mov
fisubs
fidivrs
aaa
mov
inc
leave
rorl
xor
rol
mov
ror
xor
mov
dec
enter
cmp
mov
mov
into
sub
and
mov
mov
inc
cmp
xor
movsb
xor
mov
and
mov
es
and
dec
cmp
mov
mov
and
dec
mov
int
shll
mov
mov
sarb
inc
and
lret
es
enter
mov
inc
mov
and
inc
inc
xor
daa
dec
mov
cmp
inc
and
cmp
inc
dec
aaa
dec
inc
movsb
sub
cmp
lds
mov
iret
cmp
and
es
lret
ds
mov
cmp
enter
ss
cmpsl
and
mov
xor
shlb
enter
mov
enter
inc
sub
mov
mov
mov
shr
xor
and
sub
mov
mov
mov
mov
mov
or
mov
sub
imul
lea
mov
mov
imul
xor
mov
or
mov
jmp
aas
rcl
jmp
in
arpl
jns
pusha
stc
sbb
push
out
jmp
ss
cmp
inc
xor
cmp
and
shlb
leave
inc
mov
inc
mov
inc
fiadds
mov
mov
lds
inc
rolb
xor
dec
leave
mov
ds
iret
enter
leave
int
mov
sarb
inc
aaa
mov
inc
dec
fmulp
and
mov
mov
mov
mov
xor
inc
es
lret
xor
lds
inc
cmp
leave
mov
mov
ds
dec
xor
mov
mov
int
mov
inc
lret
mov
inc
ss
cmp
inc
leave
les
xor
into
rol
rol
int
into
and
mov
inc
and
mov
into
inc
mov
and
mov
mov
test
push
dec
inc
cmpsl
mov
sub
inc
shll
xor
mov
mov
ds
dec
mov
ret
xor
dec
es
dec
mov
dec
daa
mov
dec
roll
aas
inc
dec
mov
and
iret
enter
cmp
dec
dec
sub
sub
mov
mov
xor
lret
mov
daa
mov
mov
daa
mov
and
int
mov
xor
xor
mov
les
shll
shll
and
cmp
mov
dec
push
mov
mov
and
mov
xor
and
cmp
into
lret
mov
mov
sub
aaa
and
mov
cmp
mov
dec
cmpsl
dec
cmp
dec
aas
sarb
mov
fisubs
mov
cmp
daa
mov
mov
cmpsl
movsb
rol
dec
xor
into
movsl
push
into
inc
mov
mov
xor
dec
cmp
sub
mov
imul
jmp
or
jmp
fisttpll
js
call
jmp
dec
xor
mov
aas
dec
inc
xor
cmp
ds
mov
mov
mov
into
dec
mov
lret
ret
inc
sarb
cmp
dec
and
movsb
inc
inc
aaa
mov
cmp
shll
dec
inc
cmp
shll
inc
mov
cmp
xor
xor
mov
dec
and
mov
lret
mov
mov
les
mov
push
lret
dec
xor
iret
mov
xor
mov
mov
inc
and
into
lret
and
mov
ss
cmpsl
xor
dec
dec
and
push
mov
dec
and
inc
lds
cmpsl
xor
and
aas
xor
mov
sub
inc
dec
mov
xor
int
into
aas
push
aaa
dec
shlb
push
inc
cmp
les
mov
mov
push
mov
aas
lds
dec
aas
and
dec
push
inc
cmp
mov
cmp
and
rorb
xor
dec
ret
iret
test
shrl
fmulp
shlb
rolb
ret
inc
mov
mov
xor
mov
mov
mov
lret
xor
mov
iret
cmp
mov
aaa
les
roll
sub
iret
dec
ss
mov
mov
sub
dec
inc
mov
ds
mov
ds
and
daa
mov
into
dec
inc
aaa
mov
lds
leave
leave
dec
les
cmp
test
sub
lds
mov
mov
aaa
mov
sub
test
and
rol
cmp
sarb
mov
xor
es
xor
dec
es
cmp
mov
xor
add
cmp
jmp
xchg
xchg
lret
jmp
mov
mov
mov
in
jmp
cmp
cmp
mov
sub
mov
mov
and
mov
and
aaa
and
daa
cmp
cmp
mov
mov
and
inc
dec
mov
dec
movsb
and
ror
daa
mov
mov
aas
lret
and
movsb
mov
and
dec
movsl
mov
mov
and
sub
mov
ret
movsb
ds
mov
dec
cmp
mov
and
mov
mov
and
mov
and
xor
xor
dec
movsb
mov
dec
int
aaa
aas
mov
and
mov
mov
cmp
mov
cmp
movsl
mov
leave
daa
mov
mov
mov
and
and
mov
leave
mov
xor
test
fidivrs
dec
enter
push
inc
enter
dec
mov
mov
dec
and
dec
xor
dec
into
and
mov
xor
dec
sub
aas
and
enter
ss
daa
dec
mov
xor
mov
and
mov
and
cmp
fisubs
xor
into
xor
and
and
xor
mov
mov
and
rolb
mov
xor
cmp
and
cmp
dec
inc
movsb
xor
movsl
inc
xor
aas
mov
mov
mov
ss
mov
movsl
dec
shlb
push
mov
xor
xor
mov
and
xor
lret
fidivs
mov
mov
mov
shlb
cmp
ds
inc
mov
inc
dec
mov
xor
ds
movsb
push
cmp
ret
push
cmp
aaa
movsb
ss
and
jne
movl
movl
movl
movl
movl
movl
xor
movl
mov
mov
div
mov
xor
imul
div
mov
jmp
mov
mov
movsl
int3
lods
sub
fwait
divl
xor
aas
out
jmp
dec
cmpsl
sub
and
aas
es
xor
inc
movsl
dec
mov
inc
aas
daa
ds
mov
daa
shlb
dec
mov
aas
dec
dec
into
and
cmp
xor
mov
fidivs
movsb
mov
ds
mov
xor
movsl
rclb
dec
int
leave
mov
shlb
mov
int
dec
cmpsl
and
mov
mov
and
daa
xor
mov
inc
mov
sarl
faddp
cmp
and
cmp
mov
and
dec
daa
lds
mov
leave
into
dec
and
inc
and
mov
rorb
xor
ret
mov
inc
lds
xor
mov
es
dec
daa
xor
movsl
leave
mov
iret
xor
shlb
inc
es
mov
rolb
and
les
push
mov
mov
inc
inc
enter
mov
inc
lret
inc
mov
and
inc
int
mov
mov
and
movsl
test
xor
mov
inc
and
mov
xor
dec
mov
mov
sub
mov
dec
dec
dec
and
mov
int
and
aas
and
iret
mov
dec
and
dec
inc
lds
mov
leave
mov
inc
aaa
push
dec
and
inc
mov
fidivrs
mov
xor
movsl
es
mov
inc
xor
inc
mov
aaa
int
and
and
lret
mov
ss
mov
push
dec
mov
mov
xor
mov
xor
movsl
mov
lds
daa
mov
inc
mov
dec
mov
mov
and
and
mov
inc
mov
daa
xor
xor
cmp
add
add
add
inc
shlb
imul
jns
add
movl
movl
movl
movl
movl
mov
mov
mov
xor
shr
jmp
mov
insb
jl
pop
mov
popf
js
jmp
jmp
cmp
inc
mov
movsb
inc
dec
mov
aaa
les
mov
aas
dec
mov
mov
lret
les
movsb
dec
aaa
xor
sub
mov
into
cmp
lds
mov
fidivs
ds
xor
cmp
iret
ss
cmp
enter
dec
inc
xor
test
cmpsl
leave
mov
int
leave
cmp
lds
aaa
mov
test
fimuls
xor
leave
xor
xor
inc
xor
push
xor
int
xor
and
iret
dec
mov
into
inc
daa
mov
xor
shlb
dec
inc
xor
lret
xor
sarb
cmp
int
shll
dec
mov
mov
test
fisubs
mov
mov
dec
les
mov
mov
inc
movsl
ret
dec
daa
cmp
iret
mov
sub
dec
mov
and
mov
les
sub
daa
sub
mov
fidivrs
sub
ror
dec
rolb
cmp
dec
dec
mov
into
mov
cmp
lret
mov
sarb
rolb
inc
es
mov
mov
mov
dec
leave
inc
into
cmp
mov
mov
movsl
enter
lret
inc
xor
iret
mov
rol
leave
mov
into
cmp
mov
push
cmp
test
mov
xor
shlb
mov
and
inc
mov
dec
daa
cmp
xor
and
mov
iret
xor
rolb
mov
mov
and
cmp
rol
and
mov
and
movsl
xor
mov
into
inc
mov
lret
inc
and
lds
mov
mov
mov
movsl
roll
and
imul
xor
div
xor
lea
mov
mov
add
div
jmp
push
popa
insb
jl
stos
jbe
idivl
in
jmp
jmp
xor
mov
ss
and
dec
test
and
mov
shlb
shrl
mov
shll
and
dec
movsl
inc
iret
les
ss
movsl
cmp
mov
dec
aas
cmp
inc
leave
mov
test
inc
inc
ds
mov
aas
mov
mov
es
and
dec
aaa
mov
ret
test
shlb
aaa
and
movsl
movsb
ret
mov
cmp
dec
inc
mov
shll
ds
mov
inc
mov
dec
cmp
mov
xor
inc
movsb
mov
aaa
xor
and
enter
and
and
les
mov
mov
and
mov
fmulp
fidivrs
cmp
sub
mov
push
inc
xor
mov
inc
mov
mov
lret
and
and
xor
inc
xor
mov
leave
shlb
inc
rorb
mov
iret
mov
xor
aaa
cmpsl
enter
inc
inc
dec
es
mov
inc
xor
cmp
dec
xor
dec
enter
inc
sub
enter
mov
and
faddp
cmp
mov
int
aas
mov
inc
movsb
int
and
test
mov
mov
fisubrs
xor
enter
cmpsl
inc
xor
aaa
cmp
dec
mov
ret
and
cmp
mov
cmpsl
cmp
movsl
sub
ret
into
daa
daa
movsb
inc
mov
shlb
les
daa
daa
cmp
ret
xor
aas
mov
push
dec
es
and
push
enter
movsl
mov
daa
shlb
sub
and
shll
ret
test
and
mov
inc
ret
and
rol
cmpsl
movsb
ss
mov
lret
inc
mov
jmp
aas
add
in
imul
cmpl
add
jmp
jmp
iret
xor
lds
and
shlb
mov
aas
inc
movsb
mov
mov
mov
mov
mov
mov
mov
push
dec
lds
xor
iret
mov
mov
xor
mov
mov
dec
push
and
mov
inc
cmpsl
and
inc
and
xor
ss
and
dec
les
ds
dec
dec
es
daa
and
dec
int
test
xor
xor
dec
dec
lret
mov
mov
int
mov
and
cmp
lret
mov
inc
and
and
mov
dec
les
ror
and
shll
shlb
es
inc
inc
push
mov
int
ret
int
inc
inc
movsb
movsb
mov
test
iret
mov
mov
sarb
es
dec
dec
movsb
mov
push
inc
mov
and
ror
ss
dec
and
lds
xor
push
cmp
dec
les
xor
mov
cmp
shlb
mov
inc
and
and
mov
mov
les
inc
les
mov
mov
aas
cmp
mov
movsb
mov
shlb
dec
and
mov
inc
push
test
mov
lds
daa
mov
movsl
mov
dec
dec
cmpsl
mov
mov
mov
xor
lds
mov
mov
ror
shlb
mov
and
movsl
mov
test
xor
inc
aaa
daa
aaa
mov
sub
daa
xor
xor
mov
sub
inc
dec
mov
dec
dec
lret
mov
dec
cmp
xor
mov
mov
lret
lds
lds
test
xor
dec
mov
cmpsl
cmp
fisubs
dec
cmp
push
loopne
scas
ret
push
test
rolb
add
mov
mov
mov
mov
mov
imul
xor
mov
or
imul
mov
sub
mov
and
add
mov
or
and
xor
cmp
jb
movl
movl
movl
jmp
fistps
cmpb
jl
aas
mov
imul
mov
cmp
cmpsl
inc
mov
sub
int
and
dec
shlb
aas
xor
mov
inc
xor
inc
daa
sub
push
dec
mov
dec
mov
faddp
mov
and
mov
movsb
lds
cmp
shlb
dec
mov
sub
mov
iret
and
cmp
cmpsl
mov
inc
push
mov
iret
inc
ss
mov
cmp
movsb
and
xor
leave
push
dec
fidivrs
dec
cmp
iret
and
and
cmpsl
inc
and
rorb
daa
cmpsl
movsl
dec
daa
shlb
inc
mov
rol
cmp
inc
and
xor
and
and
mov
lret
fisubs
and
xor
xor
mov
les
mov
aaa
and
mov
enter
movsb
and
ds
aas
xor
and
mov
and
cmp
and
inc
aas
and
and
shll
inc
mov
xor
rcl
enter
ss
rcr
mov
lds
es
and
les
xor
inc
cmp
mov
xor
mov
dec
into
lret
mov
movsl
dec
and
xor
mov
fidivs
mov
xor
mov
mov
xor
lret
int
shlb
iret
fmulp
mov
aaa
movsb
inc
mov
mov
les
inc
inc
xor
mov
aaa
inc
daa
shlb
mov
lret
xor
lds
mov
xor
cmp
push
fisubs
iret
inc
shlb
lds
mov
dec
daa
mov
and
cmp
and
outsl
add
movl
movl
mov
mov
xor
mov
or
push
pop
div
mov
xor
or
sub
xor
add
div
mov
add
cmp
ja
push
movl
movl
movl
movl
movl
movl
movl
movl
mov
xor
push
pop
div
mov
xor
push
div
jmp
sub
test
hlt
pop
cmc
or
je
push
add
out
imul
inc
movsl
into
mov
movsl
mov
ror
ret
and
ret
mov
test
cmp
cmp
leave
sarb
cmp
enter
and
mov
and
mov
and
aaa
cmp
daa
mov
movsl
and
inc
and
mov
mov
mov
dec
movsl
xor
dec
faddp
xor
mov
mov
mov
xor
and
xor
inc
ror
push
mov
inc
mov
sub
dec
push
push
xor
daa
ss
movl
sub
int
dec
dec
aas
cmp
inc
dec
mov
cmp
cmp
and
inc
test
dec
dec
movsl
les
ss
cmp
xor
push
push
cmp
ss
iret
dec
xor
mov
sarl
ss
dec
leave
cmpsl
es
and
iret
test
mov
iret
enter
mov
iret
mov
and
aas
mov
int
fidivrs
mov
cmpsl
mov
mov
rol
xor
inc
mov
fidivs
dec
lret
int
iret
es
lds
mov
ss
fiadds
cmpsl
lds
cmpsl
fmulp
leave
sub
inc
mov
int
mov
aas
aaa
cmp
shlb
and
xor
mov
shlb
cmp
inc
cmp
dec
aas
dec
mov
ss
push
mov
les
mov
rol
mov
mov
mov
int
les
and
mov
xor
daa
shlb
xor
push
into
lret
inc
inc
dec
push
inc
mov
mov
mov
inc
into
mov
les
aaa
xor
and
dec
mov
daa
and
leave
xor
and
into
daa
xor
inc
enter
inc
mov
movsl
mov
int
inc
iret
mov
movsl
dec
mov
shr
xor
mov
sub
mov
mov
imul
mov
or
xor
add
mov
xor
mov
add
mov
mov
jmp
sub
nop
mov
je
or
jo
jmp
cmp
enter
mov
cmp
leave
xor
sub
sub
and
inc
aaa
int
dec
mov
dec
mov
xor
movsl
cmp
lret
ret
fimuls
and
daa
cmp
sub
and
dec
xor
mov
mov
mov
mov
rorb
mov
dec
sub
xor
cmp
mov
and
cmp
movsl
mov
xor
cmp
dec
es
and
mov
mov
int
dec
inc
movsl
inc
mov
leave
shlb
fidivrs
xor
es
leave
xor
int
cmp
mov
enter
mov
dec
test
inc
sub
xor
mov
test
xor
sub
mov
into
xor
xor
movsl
es
xor
mov
ror
cmp
shlb
mov
ds
mov
lds
mov
and
inc
mov
mov
and
mov
xor
leave
and
rorb
int
mov
mov
and
sub
inc
movsl
mov
movl
int
ss
and
test
push
aas
ds
mov
ret
inc
ss
rol
inc
and
mov
inc
mov
mov
enter
push
mov
mov
shll
lret
ret
and
and
mov
xor
xor
mov
cmp
dec
lret
mov
es
cmp
rolb
mov
ds
enter
mov
sub
aas
movsl
mov
and
movsl
inc
les
inc
xor
ror
cmpsl
mov
es
and
sarb
inc
mov
mov
add
mov
xor
and
lea
mov
or
xor
pop
div
mov
xor
div
add
cmp
jbe
pop
pop
pop
leave
ret
push
mov
sub
push
push
push
movl
movl
mov
mov
shr
sub
or
mov
and
lea
mov
movl
movl
movl
mov
mov
or
sub
mov
imul
xor
div
mov
xor
xor
jmp
cmp
mov
add
jne
pop
insl
imul
mov
mov
iret
cmp
cmp
mov
mov
test
daa
movsb
push
inc
ss
test
xor
mov
cmp
leave
and
movl
mov
mov
and
dec
inc
mov
inc
into
inc
lds
daa
and
movsb
xor
xor
mov
fisubrs
dec
movsb
dec
daa
mov
ret
inc
movsl
roll
and
iret
aaa
xor
lret
xor
test
dec
xor
inc
dec
mov
ds
mov
dec
dec
cmp
iret
ret
dec
movsb
cmpsl
and
cmpsl
mov
mov
dec
aaa
xor
daa
inc
mov
and
inc
push
test
dec
push
mov
mov
shlb
iret
shlb
mov
mov
leave
aas
inc
enter
daa
into
daa
les
sub
les
movsl
and
fiadds
test
xor
dec
inc
shlb
dec
and
xor
cmp
shlb
aaa
inc
mov
iret
and
inc
cmp
mov
lret
aas
aas
ss
ret
ss
cmp
mov
shll
es
inc
mov
cmp
faddp
mov
mov
and
mov
mov
mov
dec
xor
mov
daa
cmpsl
aas
mov
fidivs
dec
dec
ror
mov
dec
dec
dec
int
inc
test
cmp
mov
mov
dec
mov
rorb
mov
xor
ds
and
fimuls
ds
cmp
es
test
push
ret
dec
mov
mov
and
enter
dec
rol
ss
leave
mov
lret
xor
mov
into
ds
and
inc
cmpsl
dec
and
faddp
movsl
inc
movsl
and
xor
enter
and
into
mov
push
dec
dec
xor
xor
enter
fisubs
es
mov
dec
iret
cmp
and
movsl
daa
dec
mov
and
ret
and
cmp
xor
shrl
into
inc
xor
mov
mov
mov
movsl
xor
and
cmp
dec
les
aas
xor
lret
push
mov
mov
inc
inc
and
cmp
leave
mov
dec
dec
mov
cmp
inc
mov
push
dec
movl
into
xor
test
mov
int
daa
iret
les
into
inc
xor
movl
mov
inc
and
aaa
mov
push
enter
push
inc
xor
xor
movsl
mov
dec
inc
movsb
aaa
inc
test
dec
mov
shlb
cmp
iret
aaa
mov
fiadds
cmp
ret
mov
dec
mov
cmpsl
inc
inc
inc
and
jmp
or
js
mov
cmp
imul
inc
into
int
test
dec
mov
les
dec
inc
mov
inc
dec
int
mov
and
sarl
daa
and
test
int
and
ss
fisubs
daa
dec
rolb
shlb
aaa
inc
mov
es
mov
ret
xor
sarl
mov
and
mov
lret
xor
mov
mov
mov
dec
mov
xor
dec
xor
les
mov
lds
sarl
mov
rorl
xor
leave
push
leave
mov
mov
mov
and
xor
xor
inc
movsb
rclb
movsl
leave
fisubs
mov
aaa
enter
dec
sub
lret
sub
sarl
xor
movsl
cmpsl
mov
and
les
mov
movsl
aas
mov
and
lds
cmp
and
xor
mov
ret
inc
xor
rolb
cmp
iret
daa
and
xor
push
sub
test
xor
cmpsl
inc
lds
aas
vcmpps
inc
leave
leave
mov
cmp
push
and
mov
shlb
ror
mov
inc
ss
sarb
lds
mov
mov
inc
and
mov
mov
mov
mov
es
mov
lds
xor
rol
cmp
fmulp
sarb
int
dec
les
inc
lret
dec
ss
xor
mov
aas
sub
xor
dec
mov
xor
fisubrs
and
lret
xor
dec
xor
aas
mov
ds
ss
inc
cmp
es
test
xor
xor
mov
inc
push
ss
xor
dec
mov
dec
iret
mov
fimuls
mov
and
mov
xor
lret
cmp
sarl
daa
movsb
mov
cmp
mov
xor
mov
mov
mov
ds
push
mov
dec
shlb
and
xor
into
movsl
dec
and
sarb
and
and
aas
cmpsl
iret
xor
movsb
mov
xor
mov
mov
cmp
leave
mov
inc
inc
inc
and
and
mov
movsb
mov
inc
mov
mov
lret
and
cmp
inc
movsl
sub
mov
xor
iret
inc
and
mov
inc
mov
enter
mov
fidivrs
ret
iret
mov
mov
inc
xor
cmp
dec
cmpsl
mov
mov
dec
rolb
xor
cmp
mov
xor
lea
mov
movl
movl
jmp
push
xchg
cmp
jl
xchg
jl
enter
dec
das
mull
aam
jmp
inc
xor
and
inc
mov
aas
int
into
cmp
sarb
and
mov
ret
cmpsl
mov
mov
push
inc
mov
sub
mov
dec
mov
mov
mov
fisubs
mov
dec
and
ds
dec
daa
sub
movsl
test
dec
cmp
xor
dec
xor
int
inc
daa
mov
cmpsl
and
cmp
daa
ret
into
ds
sarb
cmpsl
and
ds
mov
cmpsl
dec
push
inc
int
es
test
and
lret
cmp
cmp
xor
shlb
cmp
cmp
and
dec
dec
mov
int
fidivrs
mov
mov
and
aas
push
ret
mov
mov
sarl
push
daa
movsb
mov
mov
int
and
and
movsb
shlb
cmp
lret
cmp
inc
leave
mov
ss
and
shll
and
movsl
mov
ret
and
mov
and
daa
dec
push
xor
mov
mov
aaa
inc
sarl
mov
into
enter
mov
dec
aas
inc
and
dec
xor
iret
and
les
xor
and
ror
inc
dec
xor
movsb
mov
and
mov
mov
and
ror
mov
inc
xor
xor
inc
aas
inc
dec
and
ss
mov
movl
dec
iret
dec
dec
and
enter
mov
dec
mov
iret
xor
mov
dec
xor
xor
mov
mov
xor
xor
mov
ret
int
mov
test
dec
aaa
fidivs
inc
int
cmp
mov
and
into
movsb
fimuls
mov
les
leave
ss
mov
test
lret
mov
inc
mov
xor
inc
mov
enter
mov
cmp
cmp
mov
inc
xor
mov
mov
movsl
mov
movsb
lds
test
movsl
mov
daa
daa
aaa
dec
mov
ss
ds
fisubs
and
mov
dec
mov
mov
rorb
aaa
aas
mov
cmp
ss
inc
dec
movsl
mov
dec
mov
xor
sub
cmpsl
iret
dec
inc
leave
sub
push
fidivrs
cmp
mov
inc
and
daa
cmp
inc
and
push
mov
cmp
rcll
mov
aaa
shlb
mov
movl
mov
mov
add
imul
mov
add
div
xor
add
mov
movl
movl
movl
mov
mov
div
mov
xor
imul
and
xor
mov
movl
movl
mov
mov
xor
imul
xor
sub
mov
movl
mov
movl
mov
mov
jmp
cmp
and
and
mov
jg
lcall
jmp
mov
enter
fimuls
mov
ret
cmp
mov
and
and
dec
mov
leave
mov
mov
cmp
daa
sarb
iret
iret
mov
lret
mov
xor
xor
xor
sub
and
lds
int
push
and
enter
cmp
inc
movsb
and
mov
dec
mov
sub
mov
cmp
mov
and
sub
sub
and
inc
movsl
xor
mov
inc
inc
mov
inc
mov
inc
rcr
cmp
mov
sub
iret
mov
daa
inc
mov
dec
mov
test
lds
mov
xor
dec
xor
xor
xor
mov
cmpsl
dec
mov
inc
dec
xor
dec
lret
shrb
lds
push
and
mov
inc
and
and
dec
into
xor
dec
int
mov
mov
ss
xor
daa
aaa
inc
and
leave
mov
dec
and
mov
xor
lret
leave
mov
xor
enter
cmp
ret
mov
enter
dec
mov
mov
mov
es
lds
xor
and
mov
xor
cmp
ret
ret
mov
xor
and
and
mov
shlb
ret
xor
and
daa
and
dec
inc
and
mov
mov
dec
cmp
inc
rorb
iret
push
mov
mov
dec
leave
mov
cmpsl
mov
inc
mov
mov
mov
int
mov
mov
xor
mov
vcmpss
mov
movsl
and
mov
xor
dec
shll
mov
cmp
mov
dec
iret
dec
daa
movsl
inc
lret
push
mov
daa
inc
shlb
dec
mov
and
xor
and
mov
mov
inc
into
mov
mov
movsb
movsl
daa
and
inc
shll
inc
cmpsl
xor
shlb
dec
mov
iret
mov
mov
cmp
fisubs
and
dec
inc
dec
lds
mov
mov
inc
xor
push
inc
mov
and
int
ret
xor
cmp
inc
aas
mov
lret
mov
les
mov
and
xor
ss
and
fimuls
and
mov
cmpsl
mov
mov
cmp
movsl
aas
xor
inc
and
dec
into
leave
mov
sub
int
movsb
mov
and
mov
iret
and
mov
mov
adc
add
icebp
mov
imul
sub
and
xor
mov
movl
movl
mov
mov
and
or
sub
sub
xor
mov
movl
mov
mov
movl
movl
movl
movl
mov
mov
mov
sub
mov
sbb
mov
mov
push
add
push
adc
push
jmp
fldl
dec
arpl
mov
in
jns
div
xlat
imul
into
enter
and
mov
mov
cmp
cmpsl
inc
mov
mov
mov
dec
mov
mov
into
mov
les
xor
ror
les
mov
es
mov
and
mov
aaa
shlb
into
les
and
and
ret
dec
mov
sarb
mov
mov
cmp
cmp
dec
and
inc
mov
xor
cmp
cmp
push
shlb
xor
push
mov
lret
dec
mov
dec
and
ds
movsl
and
mov
xor
dec
xor
mov
inc
mov
mov
xor
mov
movsb
mov
and
mov
mov
mov
dec
inc
enter
mov
mov
aas
lret
enter
aas
xor
aas
mov
inc
movsb
ds
cmp
inc
mov
mov
rol
cmpsl
mov
sub
iret
leave
cmpsl
mov
leave
shlb
mov
leave
mov
xor
mov
les
movsl
fisubs
mov
test
inc
mov
mov
inc
lret
mov
lret
cmp
enter
int
push
mov
inc
lds
ss
and
into
and
sub
movsb
dec
into
dec
xor
xor
dec
lret
leave
enter
xor
leave
iret
cmpsl
mov
cmp
es
and
movsb
movsb
dec
mov
lds
and
shlb
xor
and
rol
ss
mov
mov
mov
mov
inc
sub
mov
xor
aas
es
inc
and
mov
and
shll
lds
into
xor
movl
inc
inc
iret
int
enter
leave
movsl
dec
iret
mov
mov
inc
cmpsl
leave
inc
ds
ds
aaa
mov
cmpsl
mov
xor
mov
ret
dec
dec
dec
dec
enter
fidivrs
xor
mov
xor
sub
cmpsl
test
cmp
mov
daa
push
sub
and
and
dec
int
mov
movsl
movsb
rol
cmp
mov
mov
mov
ss
into
cmp
dec
iret
mov
leave
fmulp
test
xor
movsb
aaa
inc
mov
leave
faddp
push
mov
aaa
and
iret
mov
mov
dec
mov
ss
mov
inc
mov
xor
lds
mov
mov
mov
test
mov
cmp
ss
mov
xor
movsl
aaa
lds
lds
add
faddl
rcll
xor
mov
xor
mov
movl
movl
movl
movl
movl
movl
movl
movl
jmp
mov
insb
insb
mov
inc
sbb
jmp
mov
int
dec
ror
aas
cmp
push
xor
mov
mov
cmp
mov
iret
int
into
mov
lret
mov
les
and
inc
inc
cmp
rol
and
mov
mov
mov
es
ret
xor
es
mov
ds
dec
and
ss
mov
inc
es
leave
xor
shlb
movl
cmpsl
mov
push
xor
fisubs
ss
ss
xor
mov
and
mov
mov
movsl
leave
sub
ret
ss
aaa
lret
mov
daa
and
cmp
xor
int
lds
dec
mov
mov
mov
xor
mov
xor
xor
mov
lret
mov
es
xor
xor
cmp
mov
mov
cmp
and
les
dec
and
test
aaa
and
xor
fisubs
mov
iret
leave
mov
push
cmp
cmp
mov
sarb
xor
lret
mov
inc
and
and
shlb
mov
lds
mov
cmpsl
sub
mov
mov
movsb
mov
dec
and
cmpsl
movsl
daa
mov
mov
les
iret
ret
int
mov
mov
mov
inc
xor
lret
xor
movsl
iret
aas
mov
mov
inc
mov
fidivrs
int
sub
movsl
mov
fidivrs
and
ds
and
mov
enter
int
dec
dec
test
mov
sub
xor
aas
mov
mov
cmp
inc
rorb
into
into
xor
push
inc
movsb
and
cmp
dec
ds
mov
mov
mov
shrb
ds
test
mov
movsl
mov
xor
inc
mov
inc
xor
mov
mov
leave
ds
sub
inc
int
dec
iret
movsb
inc
rorl
enter
sub
rol
movsb
mov
mov
mov
mov
enter
cmp
les
aaa
les
mov
sub
cmp
rorb
ss
into
dec
mov
lret
lret
shlb
enter
les
xor
test
dec
mov
mov
and
mov
into
mov
cmp
xor
mov
cmp
mov
test
inc
and
iret
fidivs
mov
and
and
push
inc
cmpsl
xor
cmp
ds
cmp
mov
mov
es
inc
shlb
xor
into
rcl
and
sarb
dec
mov
inc
add
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
jmp
mov
cmp
insb
pushf
test
imul
sbb
hlt
pop
pop
imul
leave
inc
mov
iret
ret
movsb
dec
enter
inc
shlb
enter
and
and
test
iret
mov
dec
xor
dec
mov
mov
and
inc
dec
aas
rol
sub
inc
leave
xor
push
into
mov
push
mov
leave
xor
aas
and
iret
and
iret
and
movsb
dec
cmp
cmp
shlb
xor
int
dec
mov
xor
mov
inc
mov
mov
les
shlb
xor
mov
mov
enter
mov
cmp
mov
mov
mov
inc
ss
dec
mov
les
ss
xor
into
mov
int
ret
shll
shlb
es
int
movsb
xor
inc
mov
and
and
cmp
push
shll
mov
test
inc
inc
daa
movsb
xor
cmp
fidivs
mov
movl
mov
inc
test
xor
roll
mov
fimuls
daa
xor
ss
rorb
and
faddp
mov
and
mov
ficoms
and
inc
cmp
cmpsl
shlb
shll
iret
ss
cmp
mov
cmp
mov
daa
dec
inc
inc
iret
cmp
inc
cmp
fimuls
mov
cmp
aaa
and
inc
mov
shll
dec
cmpsl
daa
mov
mov
sub
into
rorb
lret
and
test
sub
dec
ror
mov
lret
inc
and
dec
xor
aaa
sarb
inc
cmp
sarb
es
inc
sub
iret
ss
inc
es
and
fmulp
cmp
test
daa
and
push
les
cmp
mov
test
into
cmp
xor
mov
mov
mov
dec
and
xor
dec
mov
sub
and
and
xor
lret
cmp
xor
mov
lret
mov
xor
mov
mov
leave
cmpsl
fmulp
and
sarb
iret
shlb
and
dec
sarb
mov
and
aaa
mov
and
mov
inc
xor
mov
mov
dec
mov
inc
movsb
and
mov
dec
mov
mov
mov
cmp
iret
test
xor
xor
mov
ret
fidivs
inc
and
aas
mov
mov
xor
cmpsl
lret
roll
mov
xor
push
movsb
xor
mov
inc
mov
aaa
mov
iret
dec
mov
xor
enter
cmp
inc
cmp
fisubs
mov
movl
movl
movl
movl
movl
mov
mov
xor
sub
jmp
rclb
sub
in
lods
insb
mov
or
rcr
imul
xor
mov
mov
inc
dec
mov
inc
mov
test
mov
ss
cmp
es
inc
dec
mov
xor
mov
ret
mov
es
aaa
inc
mov
daa
and
xor
inc
and
movsb
mov
movsl
mov
mov
mov
fmulp
dec
push
dec
lret
cmpsl
fidivrs
xor
les
leave
dec
shlb
shlb
inc
mov
cmp
mov
mov
shlb
mov
test
and
aaa
int
dec
cmp
mov
into
xor
dec
es
mov
daa
daa
aas
les
sub
sub
xor
sub
shlb
xor
mov
dec
mov
movsl
xor
inc
mov
mov
cmp
inc
mov
inc
mov
and
mov
dec
lds
into
rol
mov
xor
mov
iret
mov
movsb
inc
xor
mov
mov
mov
mov
xor
and
dec
inc
inc
mov
mov
mov
inc
xor
fidivrs
daa
ds
cmpsl
and
cmp
iret
cmp
inc
dec
mov
push
lret
xor
sub
ror
ss
daa
mov
xor
into
movsb
into
inc
mov
mov
rorb
mov
dec
es
dec
and
xor
mov
dec
movsb
xor
inc
mov
mov
shll
iret
les
test
dec
inc
movsb
inc
test
dec
cmpsl
xor
and
ror
dec
xor
inc
mov
xor
sub
iret
mov
mov
mov
cmp
mov
mov
mov
rol
inc
lret
mov
mov
mov
shll
mov
les
ss
mov
fidivrs
xor
mov
movsl
les
es
mov
leave
and
and
lret
mov
mov
xor
aaa
daa
test
rolb
push
dec
ror
leave
int
es
sarb
sub
ds
sub
inc
and
iret
daa
xor
daa
enter
dec
leave
and
mov
mov
ror
xor
mov
aas
and
mov
into
cmpsl
inc
mov
dec
dec
leave
mov
dec
test
inc
ds
fmulp
es
movsb
iret
int
into
sarb
dec
mov
mov
mov
cmp
mov
inc
shlb
mov
mov
and
xor
ds
enter
xor
mov
xor
fidivs
mov
leave
rorl
aas
mov
cmp
aas
xor
movsl
and
leave
lds
dec
cld
lea
add
push
mov
mov
or
mov
jmp
lret
mov
shlb
mov
xchg
cmc
mov
dec
loop
and
jmp
les
test
cmpsl
iret
dec
and
xor
leave
sub
mov
mov
inc
cmp
mov
xor
les
into
es
dec
mov
dec
ror
dec
es
into
and
enter
and
rolb
and
xor
xor
mov
test
dec
mov
es
iret
mov
movsl
xor
mov
dec
and
xor
into
cmp
and
mov
dec
and
mov
dec
and
sarb
dec
mov
mov
test
cmp
and
xor
and
mov
enter
dec
iret
movsl
mov
xor
mov
mov
mov
cmp
sub
mov
xor
inc
mov
sub
ret
and
xor
inc
mov
mov
inc
mov
mov
xor
mov
mov
ss
ds
dec
mov
mov
cmpsl
mov
push
iret
mov
cmp
mov
daa
mov
inc
mov
mov
lds
mov
and
inc
mov
cmp
dec
and
mov
xor
xor
xor
es
cmp
ret
iret
mov
int
xor
test
mov
movsl
enter
and
dec
and
es
cmp
mov
es
mov
ret
mov
les
sub
mov
and
xor
dec
mov
leave
int
mov
enter
iret
mov
and
int
xor
mov
inc
faddp
lret
mov
mov
inc
xor
iret
test
int
shll
inc
mov
mov
ss
leave
dec
shlb
push
and
sub
test
test
test
inc
daa
dec
lds
inc
inc
xor
mov
sub
mov
and
cmp
dec
inc
dec
lret
movsb
mov
mov
mov
aaa
ret
mov
cmp
xor
dec
dec
and
mov
and
mov
ret
xor
dec
mov
cmp
and
cmpsl
dec
fidivs
cmp
dec
faddp
mov
dec
lret
xor
shll
and
mov
dec
xor
mov
and
xor
dec
and
rorb
dec
sarb
ret
mov
mov
test
mov
aaa
mov
mov
test
and
and
xor
cmp
and
and
xor
cmp
fmulp
mov
dec
es
leave
push
mov
ss
and
cmp
dec
les
and
mov
push
sub
jmp
pop
fcoms
int3
xchg
mov
cmpl
hlt
xchg
fildll
jmp
mov
xor
lds
and
push
dec
sub
cmp
xor
and
inc
lret
mov
inc
es
and
dec
dec
mov
into
daa
and
aaa
lret
dec
inc
xor
int
dec
iret
sub
cmp
cmp
test
xor
daa
xor
mov
dec
inc
mov
mov
xor
and
and
inc
mov
shlb
mov
xor
mov
sarb
inc
mov
aas
ret
ror
aaa
ret
mov
inc
mov
ss
lds
mov
test
cmpsl
ds
ret
mov
mov
dec
lds
test
inc
sarl
into
mov
les
es
movsl
mov
mov
xor
ds
and
mov
inc
cmp
lret
and
movsb
shlb
dec
and
mov
xor
sub
dec
sub
mov
lret
movsb
mov
mov
daa
mov
inc
leave
cmp
test
xor
daa
ret
daa
cmp
mov
mov
dec
and
xor
xor
and
aaa
inc
and
cmp
dec
leave
fisubs
mov
leave
movsl
mov
sub
movsb
mov
xor
inc
push
and
mov
and
mov
xor
daa
inc
dec
movl
mov
xor
and
inc
dec
mov
iret
inc
into
and
mov
inc
and
mov
mov
dec
lret
shll
mov
mov
cmpsl
iret
movsb
xor
int
and
push
int
cmp
ss
mov
xor
inc
and
inc
movsb
and
xor
and
dec
dec
aaa
fidivs
daa
push
mov
xor
ss
dec
ds
aaa
inc
inc
mov
ss
leave
iret
cmpsl
test
dec
mov
mov
rol
mov
fidivs
leave
aaa
mov
xor
int
cmpsl
push
sub
sub
int
xor
cmp
enter
ss
aas
cmp
mov
aas
cmp
enter
shrb
and
mov
es
inc
mov
ret
xor
ds
aas
dec
ret
and
inc
les
cmp
mov
movsb
ret
mov
push
xor
ds
cmp
movsl
roll
inc
mov
es
aaa
push
dec
mov
mov
into
cmp
aas
sub
enter
leave
movsb
mov
mov
aas
lds
xor
mov
inc
inc
cmp
shll
and
xor
cmp
leave
cmp
fisubs
sub
add
mov
push
mov
push
push
push
push
call
mov
mov
sub
mov
mov
add
mov
mov
mov
jmp
jbe
sti
dec
imul
sbb
mov
xchg
jmp
cmp
sarl
fmulp
enter
es
ret
mov
mov
ss
fisubs
mov
mov
cmp
mov
mov
mov
iret
leave
dec
mov
mov
les
xor
movsb
xor
cmpsl
mov
fisubs
and
enter
and
mov
mov
mov
cmp
sub
xor
dec
leave
mov
lds
dec
mov
inc
and
mov
cmp
and
fimuls
mov
xor
ret
inc
xor
cmp
lds
mov
enter
leave
into
enter
daa
dec
and
mov
es
xor
dec
lret
daa
inc
es
inc
iret
les
xor
lret
inc
mov
iret
and
mov
shlb
leave
shlb
mov
mov
dec
mov
dec
cmp
iret
int
mov
mov
lds
ret
leave
xor
dec
dec
mov
es
sarb
xor
mov
mov
shll
dec
and
mov
mov
shrb
test
es
inc
mov
mov
and
mov
ror
dec
roll
and
inc
movsl
mov
xor
dec
enter
cmp
into
dec
les
and
sarb
fiadds
enter
and
cmp
mov
inc
mov
inc
mov
mov
mov
mov
sarl
mov
mov
mov
and
and
mov
mov
and
inc
into
dec
xor
faddp
mov
rorb
ret
ss
and
dec
mov
mov
inc
dec
fisubrs
es
cmp
leave
dec
es
aaa
dec
and
dec
mov
rolb
aaa
mov
int
dec
ds
shll
dec
shlb
xor
and
xor
and
inc
int
inc
inc
inc
mov
dec
mov
movsl
mov
dec
movsl
xor
rclb
mov
movsb
mov
mov
sub
sarb
rol
inc
mov
cmp
xor
sarb
mov
xor
aas
inc
and
and
mov
aaa
cmp
sarl
aaa
inc
daa
mov
mov
movsb
movsb
and
cmp
and
dec
cmpsl
ss
ror
mov
cmpsl
dec
movsl
inc
and
and
mov
sub
mov
xor
xor
cmpsl
mov
push
inc
enter
shlb
and
sarb
leave
sub
dec
cmp
inc
dec
and
xor
imul
lea
push
mov
xor
lea
call
mov
mov
and
mov
and
mov
and
mov
xor
sub
cmp
jne
mov
mov
imul
sub
mov
or
xor
mov
xor
div
mov
jmp
add
loop
mov
aam
cmpl
jmp
mov
xor
faddp
and
dec
shlb
enter
inc
lret
xor
xor
xor
aas
dec
xor
and
mov
ds
and
leave
dec
mov
fidivs
and
mov
movsl
into
dec
cmp
mov
movsl
mov
mov
mov
inc
cmp
xor
and
cmp
rcr
dec
and
mov
es
mov
cmp
inc
int
mov
sub
mov
and
lret
inc
sub
xor
rolb
int
mov
fidivs
test
mov
and
movsb
and
and
ret
es
leave
mov
xor
cmpsl
ror
int
cmp
rol
int
and
aaa
movsl
mov
mov
shlb
xor
mov
mov
and
mov
mov
mov
mov
daa
mov
dec
int
mov
cmp
inc
rol
ss
xor
ds
into
dec
dec
mov
dec
test
sub
enter
push
mov
inc
leave
test
cmp
inc
mov
inc
and
cmp
mov
fidivs
xor
aas
and
inc
and
les
and
mov
inc
int
test
iret
shlb
inc
into
into
mov
and
sub
test
inc
lret
cmp
aas
inc
inc
mov
inc
shlb
leave
xor
and
mov
push
dec
cmp
push
mov
lret
mov
xor
xor
shll
and
mov
cmp
mov
push
inc
and
test
dec
rcr
shlb
dec
push
ret
mov
dec
mov
xor
mov
inc
mov
les
mov
ret
test
sub
xor
and
lret
xor
mov
mov
sarl
mov
fiadds
mov
sub
and
dec
xor
cmp
mov
and
int
xor
ss
ss
mov
xor
rol
xor
lret
dec
lret
mov
ret
and
sub
enter
inc
lds
sub
inc
dec
test
and
mov
leave
ds
rorb
mov
inc
shll
and
dec
dec
inc
lret
and
es
mov
xor
into
dec
iret
ds
inc
ret
xor
dec
into
movsl
mov
mov
mov
inc
leave
ss
mov
enter
shlb
aaa
ss
inc
inc
and
mov
push
lds
sarb
xor
test
mov
ret
mov
aaa
push
dec
aaa
sub
xor
xor
lea
push
mov
or
mov
imul
mov
div
push
mov
add
jmp
sub
stos
xchg
fs
sub
xor
adc
xlat
fwait
adc
push
les
jmp
dec
ds
push
movl
fiadds
mov
into
push
movsl
leave
cmp
fidivs
mov
mov
daa
mov
xor
mov
dec
shlb
aas
dec
mov
enter
mov
mov
mov
movsb
and
mov
xor
les
and
and
enter
cmp
mov
test
aaa
and
mov
inc
int
aaa
mov
mov
mov
xor
cmp
mov
cmp
mov
mov
xor
xor
es
movl
dec
sub
mov
daa
dec
cmp
dec
mov
xor
mov
cmp
mov
aas
sarl
inc
xor
es
mov
fisubrs
push
dec
daa
into
mov
mov
mov
dec
ss
mov
mov
mov
and
int
ret
dec
test
mov
iret
mov
mov
mov
cmp
leave
shll
mov
and
mov
movsb
dec
ds
mov
shlb
lret
mov
movsl
mov
lds
mov
inc
mov
xor
mov
mov
daa
dec
leave
and
es
ds
xor
inc
es
aaa
mov
dec
and
and
ret
mov
dec
and
mov
mov
mov
xor
cmp
lret
lds
shlb
mov
mov
dec
test
movsl
iret
sub
xor
and
inc
movsl
aaa
cmp
faddp
mov
inc
aas
shll
daa
inc
mov
mov
test
mov
xor
mov
movl
sub
push
cmp
inc
aas
roll
dec
lret
mov
and
xor
cmp
mov
dec
mov
lret
lret
leave
into
iret
mov
mov
mov
inc
leave
daa
movsl
dec
mov
mov
fiadds
mov
inc
movsl
dec
cmp
leave
les
lret
xor
aas
ret
aas
ss
mov
dec
mov
mov
ror
push
and
inc
dec
and
leave
fisubrs
ror
and
mov
sub
sub
cmp
aas
inc
mov
and
push
aas
xor
xor
aaa
cmp
dec
mov
xor
cmp
xor
lds
inc
dec
test
shlb
and
mov
fimuls
xor
mov
mov
mov
mov
iret
inc
mov
aaa
xor
cmp
test
dec
cmp
mov
inc
push
mov
mov
or
add
and
mov
mov
jmp
out
add
add
testl
xor
mov
ds
int
fmulp
into
leave
and
ss
lret
sub
inc
mov
ret
cmp
enter
xor
enter
inc
mov
leave
dec
ds
into
mov
cmp
ds
aaa
roll
dec
lds
lret
xor
ss
cmp
mov
es
mov
mov
shlb
mov
mov
cmp
and
mov
ds
mov
mov
xor
movsl
lret
inc
dec
fimuls
and
and
inc
mov
and
xor
aas
mov
ds
xor
mov
inc
int
xor
es
int
ret
inc
rorb
aas
mov
leave
xor
and
inc
dec
into
iret
into
mov
mov
mov
movsb
mov
and
mov
sub
into
ret
mov
cmp
movsl
fidivs
mov
and
xor
inc
mov
dec
movsl
mov
sub
cmp
into
ret
fiadds
xor
lret
push
movsb
aaa
fidivrs
mov
dec
cmpsl
mov
xor
cmp
shlb
and
lret
mov
sub
enter
and
and
aas
dec
mov
rorl
mov
fidivs
aaa
sub
inc
push
and
xor
ror
xor
inc
mov
mov
les
lret
xor
and
into
cmp
and
iret
mov
daa
lds
xor
cmpsl
and
ret
mov
int
xor
mov
xor
cmp
iret
lds
inc
cmp
xor
mov
cmp
iret
mov
inc
mov
les
lret
cmp
movsl
dec
lret
sub
and
and
mov
xor
enter
inc
push
inc
inc
dec
mov
cmp
mov
rolb
lret
ret
into
into
ret
into
push
push
fisubs
dec
test
xor
int
dec
movsl
lds
movsl
enter
inc
lds
sub
mov
mov
and
xor
mov
and
inc
iret
mov
mov
dec
es
iret
iret
cmp
cmpsl
movsl
les
mov
movsl
inc
cmp
test
dec
cmp
ret
shll
sarb
mov
cmp
dec
and
shlb
and
inc
and
mov
es
dec
mov
inc
lds
iret
sub
inc
leave
mov
es
dec
xor
mov
cmp
inc
leave
lret
mov
fdivrp
call
mov
mov
lea
mov
incl
jmp
push
or
outsb
cmp
addl
jmp
inc
and
rol
mov
test
lret
mov
mov
ss
iret
inc
xor
lret
xor
test
xor
xor
daa
and
int
cmp
mov
into
inc
aaa
inc
xor
xor
rol
xor
cmp
mov
mov
iret
mov
mov
mov
es
inc
and
mov
dec
and
xor
inc
dec
mov
inc
inc
cmp
cmp
les
mov
mov
xor
mov
sarb
int
mov
mov
aaa
into
fmulp
inc
aaa
ds
xor
xor
movsl
daa
xor
inc
dec
mov
xor
mov
mov
mov
mov
iret
and
mov
aaa
mov
test
cmp
mov
mov
mov
aaa
int
sub
and
xor
ds
mov
daa
iret
and
cmpsl
and
xor
xor
aas
xor
cmp
mov
les
cmp
inc
xor
mov
mov
dec
ds
dec
inc
cmp
xor
inc
movl
push
xor
mov
mov
push
xor
iret
mov
xor
es
movsb
dec
xor
mov
test
ss
cmp
sub
dec
into
mov
inc
enter
inc
mov
and
mov
movsb
xor
cmpsl
mov
mov
inc
mov
mov
xor
sub
dec
xor
mov
xor
aas
mov
mov
and
and
inc
aas
mov
fiadds
mov
dec
mov
ret
and
sub
mov
dec
es
dec
mov
ds
mov
cmp
lds
and
mov
and
xor
cmp
mov
inc
dec
inc
faddp
inc
inc
int
mov
mov
mov
xor
mov
rcr
inc
shrb
mov
leave
mov
mov
cmp
lret
dec
les
mov
mov
xor
movsl
test
les
inc
lret
int
xor
inc
inc
inc
dec
ret
cmpsl
enter
mov
mov
mov
sarb
ret
movsl
dec
movsb
enter
mov
lret
test
cmp
and
movsb
daa
dec
enter
push
aas
dec
int
enter
enter
ret
fidivs
int
mov
and
cmp
sub
shlb
push
and
int
shll
xor
movsb
ds
int
xor
inc
cld
mov
xor
shld
jmp
push
adc
dec
mov
jbe
in
jno
out
xchg
inc
imul
mov
mov
dec
cmp
ret
mov
sub
es
xor
dec
xor
movl
and
inc
mov
mov
and
xor
lds
rol
mov
ds
sub
inc
ss
mov
ss
es
ret
xor
leave
ss
enter
leave
inc
iret
mov
movsb
fisubs
and
mov
lret
mov
movsl
fimuls
mov
xor
fidivs
and
cmp
dec
movsb
mov
and
inc
mov
inc
dec
movsb
cmpsl
and
mov
mov
mov
aaa
mov
int
movsb
cmpsl
and
lret
and
aaa
xor
push
inc
ret
dec
mov
dec
and
ret
mov
dec
mov
mov
movsl
mov
inc
mov
cmp
cmp
and
mov
mov
mov
leave
int
xor
shrb
xor
mov
dec
les
shlb
mov
mov
inc
aaa
mov
iret
mov
lret
ret
enter
mov
into
leave
mov
inc
les
mov
mov
mov
mov
inc
cmp
movsb
push
inc
les
mov
and
shlb
les
and
mov
mov
sub
cmp
mov
inc
sub
and
and
mov
fiadds
mov
lds
and
mov
xor
les
mov
mov
mov
mov
mov
inc
mov
cmp
movsl
mov
cmp
and
ret
xor
mov
mov
enter
mov
rol
mov
leave
push
dec
mov
daa
xor
xor
mov
inc
mov
mov
mov
enter
mov
ss
shlb
xor
fidivs
dec
and
dec
xor
mov
lds
fidivrs
cmp
mov
aaa
xor
shlb
aas
mov
movsb
ds
daa
mov
mov
aas
es
mov
mov
mov
and
inc
mov
daa
mov
inc
shlb
into
mov
xor
and
mov
sub
cmp
mov
dec
mov
push
int
push
cmpsl
xor
mov
push
mov
faddp
aaa
dec
mov
dec
aaa
aaa
lret
cmp
cmp
xor
mov
inc
shll
mov
xor
fmulp
push
shll
mov
xor
loopne
mov
mov
xor
xor
cmp
jne
cmp
jne
mov
jmp
scas
stc
xchg
lock
scas
arpl
xchg
scas
imull
imul
and
and
dec
leave
aas
ss
and
cmp
and
cmp
xor
mov
dec
mov
and
cmp
xor
mov
movsb
dec
inc
sarb
ds
mov
xor
mov
dec
mov
rolb
movsb
ret
int
and
mov
mov
lret
inc
lds
mov
xor
and
xor
mov
rorl
and
mov
inc
sub
and
enter
mov
daa
and
mov
inc
dec
dec
mov
leave
mov
iret
mov
test
dec
xor
xor
inc
and
sarb
cmp
xor
dec
ret
enter
ret
movsl
ss
ret
sub
xor
leave
inc
lret
xor
mov
aas
leave
daa
int
and
dec
dec
cmp
aaa
mov
and
mov
ret
xor
mov
cmp
mov
inc
cmpsl
inc
mov
dec
enter
mov
mov
dec
inc
cmp
mov
daa
mov
inc
mov
mov
mov
aaa
ret
mov
xor
fidivs
mov
daa
mov
dec
mov
inc
inc
mov
mov
dec
cmp
cmpsl
inc
ret
mov
mov
mov
daa
aas
into
fimuls
inc
roll
xor
inc
cmp
movsb
mov
test
mov
mov
mov
mov
mov
dec
and
xor
mov
test
dec
dec
and
mov
es
xor
mov
es
mov
leave
mov
mov
and
dec
lret
xor
xor
dec
and
test
aaa
iret
push
mov
fisubs
mov
and
mov
dec
mov
xor
xor
movsl
dec
xor
mov
aas
dec
mov
mov
lret
dec
aas
movsb
fidivs
enter
ds
cmp
leave
inc
mov
ret
enter
daa
inc
movsb
xor
inc
cmp
movsb
cmp
mov
and
aas
and
mov
inc
mov
int
es
and
cmp
and
rcl
dec
ss
and
inc
movsb
mov
mov
xor
movsl
leave
xor
xor
enter
mov
dec
mov
inc
shll
dec
and
mov
aas
cmp
mov
mov
rol
xor
and
mov
inc
xor
mov
sarl
mov
lds
xor
xor
mov
dec
cmpsl
test
and
dec
mov
shlb
dec
aas
and
movsl
mov
cmp
das
pop
add
lea
mov
mov
mov
mov
mov
sub
mov
mov
mov
sub
mov
movl
jmp
dec
inc
sbb
in
mov
mov
xchg
add
xorl
jmp
movsb
faddp
cmp
ret
shlb
mov
leave
mov
and
dec
inc
rcl
iret
inc
rolb
es
cmp
dec
inc
push
les
int
and
and
mov
and
mov
inc
and
mov
mov
xor
inc
and
mov
dec
inc
ror
mov
mov
leave
mov
les
ror
mov
sarb
mov
mov
mov
fmulp
ds
and
inc
xor
into
mov
inc
aaa
aas
inc
leave
mov
mov
mov
push
inc
shlb
dec
ss
mov
dec
mov
and
dec
dec
xor
lds
lret
ss
inc
dec
movsb
fisubrs
mov
and
aas
dec
mov
mov
xor
aaa
inc
inc
mov
inc
int
lret
shlb
and
enter
dec
inc
mov
test
mov
mov
xor
dec
cmp
mov
mov
dec
mov
movsb
mov
cmp
and
into
les
and
xor
mov
mov
ss
les
mov
iret
int
mov
aaa
mov
shrb
movsb
int
int
cmp
mov
leave
ret
ss
es
and
enter
xor
mov
inc
and
mov
lret
push
mov
mov
xor
rorb
movsl
and
inc
mov
xor
mov
cmp
mov
mov
mov
enter
fidivrs
xor
dec
inc
and
xor
inc
dec
mov
mov
mov
and
mov
cmp
inc
dec
and
xor
shlb
mov
es
dec
movsl
dec
xor
cmp
mov
iret
xor
aas
lds
and
sub
dec
dec
fisubs
mov
mov
rorb
cmp
mov
xor
enter
int
mov
sub
test
ds
dec
mov
fisubs
ds
mov
dec
and
and
xor
xor
into
leave
push
inc
xor
dec
enter
enter
cmp
sub
les
leave
dec
and
inc
mov
into
mov
inc
inc
and
ss
mov
shlb
dec
mov
xor
dec
cmp
enter
xor
xor
mov
mov
xor
and
xor
mov
xor
and
xor
rcl
into
mov
mov
cmp
and
add
gs
mov
mov
mov
mov
pushl
pushl
pushl
pushl
pushl
push
push
pushl
mov
call
mov
mov
mov
pushl
jmp
fwait
scas
pop
mov
xchg
test
imul
daa
aas
mov
push
inc
and
mov
lds
mov
mov
mov
mov
test
fidivs
lds
mov
mov
lds
fimuls
mov
xor
lds
mov
mov
mov
into
xor
les
mov
daa
mov
shlb
shlb
inc
mov
iret
and
es
and
cmpsl
ret
xor
and
xor
xor
xor
mov
push
leave
xor
and
daa
movsb
dec
leave
inc
xor
iret
into
movsl
mov
xor
iret
and
iret
and
les
xor
sarl
ss
mov
mov
xor
xor
daa
iret
mov
es
xor
movsb
dec
mov
inc
mov
and
xor
movsb
xor
xor
inc
les
xor
mov
iret
sarb
cmp
lds
and
mov
fidivrs
dec
ror
and
dec
mov
es
mov
mov
movsb
les
mov
and
les
enter
iret
mov
mov
ret
mov
mov
test
mov
xor
rorb
rorl
mov
mov
iret
and
mov
xor
xor
dec
xor
dec
aas
and
mov
aas
xor
mov
daa
inc
int
dec
inc
cmp
es
movsb
mov
mov
push
int
mov
inc
lret
mov
dec
fiadds
xor
inc
leave
and
dec
mov
push
movsl
and
rolb
xor
shrb
mov
inc
mov
ret
ds
inc
push
and
push
mov
inc
movsb
cmpsl
test
inc
mov
movsb
mov
xor
rorb
aas
mov
ror
inc
and
mov
mov
dec
daa
lds
sarl
mov
test
mov
inc
inc
ss
les
ds
and
inc
mov
leave
mov
ret
test
cmpsl
mov
sarl
inc
xor
mov
movsb
les
dec
mov
xor
sub
mov
roll
mov
and
sub
cmp
mov
movsl
ds
mov
aaa
dec
mov
mov
cmp
mov
xor
push
leave
lret
xor
mov
and
dec
inc
sarb
mov
int
mov
mov
dec
mov
les
mov
lds
ss
mov
mov
mov
ret
inc
leave
inc
dec
cmp
mov
and
ds
mov
and
ret
shlb
aaa
daa
mov
rol
call
mov
push
add
push
push
call
mov
jmp
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
push
push
xor
inc
mov
movl
movl
jmp
mov
push
or
ret
jmp
ds
and
mov
push
enter
and
into
inc
inc
xor
mov
and
xor
enter
movsl
mov
xor
cmp
shlb
daa
into
movsl
dec
movsl
mov
xor
ret
xor
sub
inc
ret
and
lret
inc
into
mov
xor
mov
xor
mov
aaa
and
cmp
xor
inc
test
xor
cmpsl
push
leave
cmp
ret
lds
into
inc
dec
mov
rolb
mov
dec
leave
mov
mov
mov
cmp
int
dec
mov
mov
mov
mov
mov
dec
and
sarb
mov
aas
mov
sarl
mov
lds
daa
dec
dec
mov
movsl
ret
mov
mov
cmp
movsl
mov
cmp
dec
enter
mov
cmp
lret
inc
ss
xor
mov
aas
aaa
xor
ret
cmp
shlb
es
mov
mov
and
cmp
mov
and
and
cmp
mov
inc
les
les
mov
cmp
cmp
dec
dec
xor
dec
mov
dec
lds
lret
xor
dec
mov
cmp
inc
movsb
fisubs
inc
shll
mov
mov
sub
faddp
mov
sub
xor
shll
movsb
cmp
cmp
aaa
into
test
inc
lds
mov
mov
xor
les
xor
inc
shlb
and
mov
shlb
xor
movsb
lds
xor
xor
mov
and
dec
cmp
ss
push
and
mov
mov
daa
es
iret
sarb
mov
mov
mov
test
mov
into
dec
inc
mov
mov
ror
xor
xor
ss
xor
test
mov
xor
inc
and
xor
mov
ss
mov
inc
ds
and
inc
leave
mov
cmp
mov
cmp
mov
rorb
xor
enter
xor
mov
xor
movsl
mov
dec
mov
mov
inc
daa
mov
mov
data16
add
jmp
out
jp
fs
xchg
pop
jae
mov
hlt
repz
xchg
ljmp
mov
movsb
inc
inc
mov
cmp
dec
enter
les
movsb
into
cmp
inc
cmpsl
and
inc
xor
cmp
dec
cmp
push
dec
mov
int
and
into
and
mov
shlb
rorb
sarb
iret
and
aas
mov
and
shlb
inc
mov
mov
fisubs
inc
mov
xor
aaa
inc
and
cmp
dec
xor
movsl
cmp
mov
daa
inc
inc
cmpsl
xor
inc
xor
lret
mov
into
ds
cmp
and
iret
xor
dec
into
cmpsl
cmpsl
cmp
cmp
mov
ss
mov
inc
fiadds
mov
mov
cmp
xor
inc
cmp
cmp
lret
dec
int
mov
xor
iret
ds
sarb
leave
xor
mov
inc
and
and
sub
aaa
inc
mov
leave
ds
les
mov
ret
xor
mov
inc
mov
shlb
mov
lds
cmp
lret
sub
push
daa
xor
xor
movsl
xor
les
dec
into
mov
aas
es
movsl
mov
ror
inc
mov
and
xor
dec
inc
enter
inc
xor
xor
movsb
xor
es
mov
mov
inc
cmpsl
shll
test
and
aas
lret
inc
leave
inc
shlb
and
and
mov
daa
rol
mov
iret
mov
aaa
daa
cmp
xor
cmp
mov
inc
inc
inc
dec
int
enter
mov
shlb
xor
int
xor
movsl
iret
mov
mov
and
int
lret
sub
dec
lret
mov
mov
les
mov
mov
dec
inc
enter
dec
mov
inc
lds
into
shll
mov
mov
and
mov
iret
push
and
enter
les
xor
cmp
and
into
lret
movsl
aaa
ss
inc
mov
inc
dec
xor
ret
inc
and
cmpsl
and
dec
into
movl
mov
mov
push
push
push
call
push
push
push
push
call
mov
mov
push
push
and
and
push
push
call
xor
sub
mov
movl
movl
movl
movl
jmp
push
scas
int
mov
je
sub
hlt
dec
sbb
jmp
mov
sub
rol
ss
enter
ds
mov
and
xor
xor
lret
xor
ret
shlb
and
shlb
cmpsl
ret
xor
mov
and
enter
enter
mov
aaa
aaa
ss
dec
and
daa
mov
aaa
inc
ret
inc
iret
mov
mov
dec
and
lret
shll
fidivs
inc
xor
rol
mov
cmp
xor
iret
mov
inc
mov
ds
inc
sarb
cmp
dec
int
cmpsl
and
inc
mov
mov
shlb
ret
movsl
movsb
sub
movsb
inc
movsl
rorb
xor
shll
xor
fimuls
inc
sub
shlb
aaa
dec
les
dec
and
cmp
inc
mov
sub
and
enter
aaa
and
enter
mov
mov
lds
test
movsl
sub
mov
inc
mov
shll
movsb
sub
xor
mov
leave
ss
int
cmp
ds
mov
dec
movsl
aaa
iret
dec
ret
inc
lret
mov
shlb
mov
mov
and
and
mov
inc
cmpsl
dec
into
xor
es
xor
dec
mov
aaa
xor
inc
mov
mov
iret
push
lds
mov
mov
ds
ds
movsb
mov
and
mov
mov
dec
dec
mov
ret
test
sub
cmp
xor
sub
into
leave
movsb
dec
les
test
aaa
test
inc
aaa
mov
mov
into
shlb
mov
movl
aas
aas
into
mov
mov
mov
mov
inc
push
movsl
fisubrs
mov
ss
shll
mov
xor
inc
mov
inc
mov
inc
mov
shlb
and
dec
and
les
mov
shll
enter
xor
inc
fmulp
movsb
mov
movsb
push
mov
xor
cmp
push
iret
mov
iret
lret
and
dec
mov
mov
mov
inc
loopne
pop
add
movl
movl
movl
mov
movl
mov
mov
mov
mov
and
mov
sub
mov
mov
sub
mov
imul
mov
sub
xor
div
add
mov
and
mov
movl
movl
movl
mov
mov
xor
add
mov
imul
xor
mov
mov
movl
mov
xor
jmp
movsb
jle
ret
insb
insb
popa
pop
adc
lret
fcoms
jmp
mov
enter
cmp
push
cmp
int
mov
daa
inc
movsl
mov
inc
push
enter
dec
mov
xor
test
test
les
into
aaa
ds
and
and
xor
mov
cmp
cmp
iret
movsb
ds
movsb
inc
mov
mov
mov
sub
mov
cmp
mov
cmp
and
mov
xor
and
sub
xor
shlb
mov
inc
fimuls
daa
sarl
ror
dec
daa
mov
mov
into
and
lret
mov
cmp
dec
ss
mov
push
mov
mov
mov
dec
daa
fimuls
enter
inc
dec
ds
mov
and
rol
ss
mov
aaa
aaa
iret
inc
inc
shlb
fisubrs
dec
shll
cmpsl
and
inc
movsl
mov
lret
mov
mov
xor
iret
int
inc
mov
xor
push
dec
mov
push
aaa
inc
mov
mov
lret
mov
cmpsl
aas
into
aas
ds
xor
mov
inc
lret
inc
into
iret
and
and
and
mov
and
mov
inc
ret
mov
dec
lret
and
int
movsl
aaa
leave
mov
mov
xor
xor
inc
enter
into
mov
cmp
mov
lret
cmp
iret
dec
dec
dec
shlb
inc
movsb
into
and
inc
and
cmpsl
mov
shlb
push
ds
xor
xor
mov
ret
mov
inc
mov
inc
xor
shll
inc
inc
ss
mov
ss
mov
shll
cmp
cmp
mov
dec
dec
dec
mov
cmp
mov
aas
sarb
cmp
inc
leave
and
cmpsl
dec
xor
mov
mov
into
inc
mov
push
inc
movsb
shll
mov
xor
and
and
mov
rorb
cmp
les
movsl
mov
mov
shll
mov
inc
iret
mov
shll
ds
mov
mov
mov
inc
inc
ss
enter
xor
mov
int
dec
add
xor
mov
movl
movl
mov
mov
shr
add
and
mov
sub
mov
mov
movl
movl
movl
movl
mov
add
mov
jmp
mov
insb
test
cld
jae
outsb
out
cwtl
mov
jmp
cmp
dec
dec
lds
lret
and
cmp
mov
shll
lret
inc
and
daa
fimuls
cmp
ret
inc
mov
mov
lret
mov
lds
mov
mov
int
es
cmpsl
movsb
int
mov
movsb
dec
xor
inc
xor
ds
movsl
mov
aas
mov
dec
xor
iret
inc
and
mov
dec
mov
aas
and
xor
aas
mov
xor
cmp
dec
ss
ds
leave
and
inc
mov
es
dec
ss
fiadds
and
and
dec
mov
aas
shll
cmp
cmp
mov
es
mov
cmp
inc
push
inc
ret
mov
dec
dec
ds
mov
les
sub
inc
mov
leave
rolb
mov
sarb
inc
push
dec
mov
dec
sub
ss
int
xor
mov
mov
cmp
xor
lds
dec
inc
iret
roll
movsl
cmp
fimuls
xor
inc
mov
movsb
inc
and
ret
dec
inc
mov
and
ror
dec
dec
fidivs
mov
mov
mov
into
enter
leave
mov
and
dec
enter
enter
mov
mov
and
and
cmp
movsb
mov
cmpsl
aaa
and
and
mov
daa
and
mov
mov
inc
dec
ss
xor
inc
leave
mov
es
xor
cmp
roll
iret
lret
fidivrs
cmpsl
inc
push
es
and
mov
xor
cmp
mov
inc
movsl
int
aaa
dec
sub
xor
dec
dec
dec
mov
mov
roll
inc
shlb
daa
aaa
mov
aas
xor
push
movsb
mov
cmp
dec
shlb
cmp
and
mov
inc
mov
iret
dec
mov
ds
mov
movsl
mov
xor
mov
mov
xor
cmpsl
enter
cmpsl
int
int
mov
inc
in
xor
mov
pop
div
pop
leave
ret
push
mov
sub
push
movl
movl
movl
movl
movl
movl
jmp
add
xor
jns
cmp
xor
cld
ljmp
mov
cmpsl
inc
and
xor
mov
and
mov
mov
inc
mov
xor
ss
es
inc
mov
inc
roll
and
iret
cmp
cmpsl
enter
les
enter
les
push
dec
xor
es
into
leave
and
mov
lret
mov
mov
mov
cmp
xor
movsb
dec
mov
mov
inc
xor
into
movsl
dec
movsl
ss
cmp
daa
dec
shlb
sub
push
dec
ror
inc
mov
enter
cmp
xor
mov
cmp
mov
ret
inc
test
inc
and
movsl
xor
mov
mov
inc
mov
mov
mov
ret
cmp
and
ss
ret
and
lds
mov
leave
xor
aas
mov
inc
mov
cmp
mov
xor
iret
mov
dec
and
and
test
sub
into
iret
int
mov
and
push
aas
aas
mov
mov
inc
inc
and
mov
xor
dec
xor
and
ds
inc
inc
mov
leave
mov
mov
daa
aaa
mov
into
mov
mov
sarb
mov
push
cmp
mov
dec
sarl
into
ret
mov
dec
inc
mov
movsl
inc
mov
dec
and
movsb
lret
inc
test
cmp
int
and
and
dec
and
cmp
inc
xor
mov
enter
dec
aas
mov
dec
mov
sub
aas
mov
fidivrs
mov
ds
lret
inc
mov
ret
cmp
xor
inc
mov
fidivs
enter
enter
mov
lds
lds
inc
inc
mov
mov
dec
mov
into
dec
sarb
ss
ror
cmp
dec
movsb
and
dec
dec
mov
iret
mov
inc
mov
aaa
mov
inc
dec
movl
xor
iret
inc
mov
and
enter
mov
xor
cmpsl
movsb
lret
int
mov
xor
int
inc
mov
mov
mov
mov
dec
rol
xor
mov
shll
mov
xor
dec
es
sub
aas
roll
xor
inc
dec
xor
fidivs
mov
mov
int
enter
mov
aaa
mov
ret
add
testb
add
or
insb
movsl
jl
pop
ret
js
mov
jmp
push
ds
iret
dec
dec
into
xor
enter
leave
cmp
inc
mov
into
mov
aaa
lds
cmp
sub
mov
xor
dec
rol
es
mov
cmp
les
dec
lret
into
mov
push
dec
xor
dec
dec
mov
inc
inc
iret
leave
iret
inc
into
and
xor
dec
mov
mov
dec
xor
int
ret
mov
lret
and
and
ror
cmpsl
sub
push
push
mov
xor
mov
cmp
xor
xor
xor
lret
into
mov
rorb
fisubs
mov
and
mov
dec
dec
enter
mov
aas
xor
mov
and
mov
lret
mov
leave
shrb
and
test
dec
mov
dec
mov
mov
enter
movsb
inc
xor
dec
mov
shll
mov
mov
ds
sarb
mov
movsb
mov
mov
and
rolb
shll
cmp
lret
xor
xor
mov
and
mov
xor
int
mov
mov
les
dec
xor
es
inc
ret
mov
mov
xor
mov
dec
test
mov
inc
mov
dec
ds
aas
rol
mov
mov
mov
inc
dec
dec
shlb
cmp
xor
and
leave
and
and
mov
inc
movsl
cmp
ds
mov
mov
mov
aas
fiadds
sarl
iret
movsl
xor
inc
leave
mov
cmp
ss
mov
mov
leave
sarb
dec
mov
mov
ss
mov
and
dec
mov
mov
inc
iret
aas
mov
mov
dec
and
mov
inc
aaa
roll
enter
mov
mov
mov
shll
dec
sub
mov
push
dec
xor
mov
and
cmp
shlb
dec
iret
mov
mov
inc
and
lret
xor
movsb
fmulp
leave
shlb
fidivs
aaa
mov
cmp
dec
lret
inc
aaa
lret
daa
rorb
mov
xor
movsl
xor
inc
and
inc
xor
xor
mov
mov
fidivs
dec
and
enter
test
mov
inc
mov
repz
add
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
jmp
xor
aaa
pop
mov
mov
in
jecxz
imul
mov
shlb
push
mov
dec
mov
mov
fimuls
inc
cmp
cmp
xor
ret
fimuls
dec
daa
test
dec
inc
and
mov
xor
inc
iret
mov
faddp
inc
mov
xor
and
leave
dec
sarb
and
mov
cmp
inc
rol
lds
cmp
rol
inc
mov
and
mov
ds
mov
mov
inc
mov
mov
mov
mov
xor
inc
fmulp
ret
mov
inc
mov
xor
mov
inc
cmp
dec
ret
inc
cmp
enter
inc
and
and
mov
mov
cmp
shlb
mov
dec
mov
shlb
shlb
push
test
ret
push
xor
mov
cmp
inc
xor
cmp
and
mov
and
cmp
inc
dec
mov
dec
ret
movsb
into
mov
inc
mov
and
test
and
lds
and
and
inc
ret
ret
enter
inc
mov
mov
inc
sub
and
sarb
int
ss
inc
cmp
roll
lds
inc
mov
push
mov
movsl
ret
inc
dec
inc
xor
cmpsl
xor
cmp
mov
mov
cmpsl
aas
xor
dec
and
dec
and
cmp
mov
ret
fisubs
mov
mov
mov
cmp
inc
mov
aas
mov
mov
mov
mov
cmp
xor
and
inc
cmp
xor
leave
inc
mov
mov
xor
mov
xor
test
inc
lret
daa
inc
enter
mov
mov
cmp
mov
les
sarl
rolb
es
mov
dec
dec
movsb
mov
mov
xor
mov
int
xor
dec
xor
and
lret
mov
mov
mov
leave
sub
and
aaa
and
mov
dec
xor
mov
mov
inc
cmp
aas
iret
shll
iret
inc
mov
mov
aaa
movsl
dec
movsl
ds
mov
iret
leave
ds
shlb
int
mov
enter
rol
and
dec
mov
cmp
enter
mov
cmp
es
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
push
add
push
adc
push
push
call
mov
mov
mov
mov
mov
or
or
add
cltd
adc
cmp
jne
cmp
je
mov
mov
mov
jmp
decl
leave
in
into
imul
xchg
hlt
push
ss
inc
mov
mov
inc
mov
cmpsl
lds
xor
xor
mov
ret
aaa
mov
ss
inc
inc
xor
mov
dec
shlb
mov
mov
into
fisubs
daa
lds
movsb
mov
cmpsl
mov
xor
sub
and
dec
dec
fidivs
leave
fidivrs
cmp
xor
iret
and
cmp
cmp
sub
and
and
int
dec
dec
dec
aas
xor
ret
mov
leave
sub
mov
xor
cmp
mov
mov
mov
xor
cmpsl
dec
lret
enter
mov
cmp
mov
and
into
mov
cmp
mov
fiadds
xor
and
movsl
xor
mov
and
xor
push
rol
inc
xor
mov
daa
and
dec
cmpsl
mov
and
xor
mov
lds
ret
cmp
and
fisubs
es
dec
shll
cmp
mov
dec
xor
leave
mov
and
int
fimuls
int
leave
ret
movsb
mov
dec
mov
movsb
daa
xor
movsb
and
xor
xor
daa
into
xor
mov
mov
dec
sub
cmp
into
xor
inc
cmp
ret
and
mov
push
mov
movl
inc
iret
test
movsl
xor
mov
mov
xor
mov
iret
test
mov
mov
rol
dec
and
cmp
xor
aaa
xor
mov
and
ds
dec
mov
mov
mov
push
mov
shlb
movsb
daa
and
mov
movsb
mov
mov
dec
daa
dec
and
cmp
mov
ss
inc
inc
mov
leave
inc
int
leave
ds
fidivs
lret
and
iret
and
movsl
ds
ds
dec
leave
dec
and
cmp
and
int
mov
sub
cmpsl
push
and
inc
mov
xor
mov
mov
leave
cmp
mov
movsl
xor
and
mov
les
ror
dec
mov
movsb
mov
mov
ret
shlb
and
dec
mov
dec
cmp
iret
inc
sub
mov
mov
rol
mov
lds
inc
push
int
cmpsl
and
mov
and
mov
and
mov
push
push
xor
jmp
jecxz
scas
stos
test
add
loop
jae
mov
jmp
dec
inc
dec
xor
mov
push
mov
xor
es
es
dec
mov
cmp
sarb
aas
ret
mov
sarl
mov
ss
and
mov
inc
and
aaa
mov
and
mov
ss
mov
mov
int
mov
ds
inc
xor
mov
mov
dec
inc
xor
ds
ds
rcl
mov
mov
xor
xor
sub
mov
daa
mov
mov
mov
int
mov
ret
mov
inc
cmpsl
shlb
cmp
xor
push
mov
mov
mov
mov
inc
sarl
dec
mov
cmp
int
dec
fidivrs
iret
mov
ss
ret
mov
movsl
dec
iret
inc
mov
mov
inc
leave
dec
rol
and
into
cmpsl
sub
test
dec
mov
xor
lds
dec
and
dec
and
mov
dec
mov
xor
inc
dec
les
leave
mov
inc
mov
mov
rorl
ds
inc
fidivrs
and
enter
mov
inc
es
inc
mov
into
cmpsl
xor
and
inc
mov
test
mov
cmpsl
movsl
push
shll
mov
daa
dec
cmp
and
enter
and
and
rorl
lds
and
inc
test
dec
and
fisubs
mov
xor
leave
mov
mov
and
mov
inc
and
les
cmp
mov
and
mov
mov
dec
and
rol
movsb
test
mov
sub
mov
mov
mov
xor
movsb
fidivs
xor
sub
mov
dec
mov
daa
cmp
xor
cmpsl
into
aas
fmulp
inc
mov
and
inc
mov
mov
ss
dec
xor
lds
and
cmp
dec
mov
daa
shlb
inc
sub
mov
iret
test
dec
es
movsb
iret
shlb
mov
dec
dec
inc
mov
test
rorb
es
and
movsl
and
and
movsl
into
shlb
xor
sarb
ret
ret
inc
xor
push
push
call
mov
mov
jmp
repnz
cmpsl
mov
sub
pop
xor
imul
cmp
mov
leave
mov
es
and
dec
and
mov
and
and
test
lds
mov
inc
inc
xor
ret
dec
movsl
cmp
dec
mov
mov
dec
aas
and
xor
mov
dec
sub
cmp
cmpsl
sub
lret
les
mov
lret
es
inc
xor
cmp
aas
cmp
and
dec
and
mov
xor
inc
dec
and
mov
aas
cmpsl
lret
and
dec
mov
daa
mov
mov
inc
and
cmp
and
inc
sarl
leave
cmp
and
mov
mov
mov
movsb
ret
mov
movsb
cmp
xor
mov
and
ds
and
cmpsl
dec
dec
and
mov
mov
mov
ss
mov
xor
inc
cmpsl
and
inc
inc
mov
daa
into
mov
test
iret
and
xor
mov
leave
mov
mov
int
int
mov
mov
inc
rorb
aaa
and
ror
inc
mov
shlb
cmp
inc
mov
mov
ror
push
dec
ror
and
shlb
mov
xor
mov
cmp
inc
cmp
mov
mov
dec
mov
mov
leave
shlb
xor
cmp
lret
es
mov
test
cmpsl
xor
cmp
and
cmp
xor
int
dec
dec
mov
les
test
xor
dec
enter
and
ds
inc
sub
leave
mov
inc
lds
inc
shrb
inc
lret
xor
cmp
inc
mov
mov
inc
xor
cmp
shlb
inc
sarb
inc
mov
aaa
test
aas
aas
mov
mov
xor
cmp
mov
mov
les
dec
fiadds
xor
mov
and
cmp
es
mov
mov
dec
iret
lret
iret
and
inc
mov
mov
dec
aas
mov
push
xor
test
ss
into
inc
and
into
and
inc
aas
aas
xor
mov
iret
mov
iret
ret
inc
mov
dec
lret
aas
mov
mov
mov
ds
ds
cmp
dec
cmp
incl
cmp
jmp
xchg
stc
bound
add
adc
xchg
nop
aas
mov
jmp
mov
aaa
xor
xor
mov
daa
inc
inc
inc
inc
mov
rcll
cmp
xor
dec
and
daa
push
xor
mov
push
xor
mov
xor
mov
mov
shrb
enter
inc
ds
cmp
daa
mov
inc
mov
dec
mov
inc
mov
inc
cmpsl
movsb
inc
mov
lret
mov
mov
dec
movsb
and
ds
dec
xor
and
inc
movl
cmpsl
and
dec
mov
mov
mov
iret
aaa
test
xor
mov
lds
aas
inc
dec
mov
inc
cmp
xor
cmp
cmp
mov
es
test
dec
movsb
xor
mov
and
inc
enter
movsl
mov
aaa
aaa
es
inc
inc
dec
les
xor
xor
inc
shlb
mov
and
mov
aaa
and
mov
mov
dec
xor
xor
xor
rorl
dec
mov
ret
es
movsl
and
lds
mov
lds
cmp
mov
sub
mov
ss
aas
cmp
and
mov
lds
mov
dec
ror
cmp
cmp
xor
int
and
mov
and
dec
daa
mov
dec
cmp
movsb
inc
mov
xor
lds
movsl
inc
inc
lds
xor
mov
inc
mov
mov
es
inc
inc
dec
push
mov
inc
les
xor
and
cmp
inc
int
sarl
mov
movsb
and
dec
mov
mov
shlb
ds
mov
cmpsl
leave
mov
mov
cmp
movsl
iret
dec
and
inc
mov
mov
and
and
dec
and
sub
mov
and
and
mov
mov
leave
rorb
enter
inc
shrb
rorl
mov
lret
cmp
inc
lret
aas
mov
and
fidivs
dec
xor
and
dec
xor
mov
mov
and
xor
xor
and
fisubs
and
sarl
mov
cmp
cmp
lret
xor
dec
mov
cmp
lds
mov
ss
cmpsl
push
lret
mov
movsl
ror
inc
dec
enter
mov
inc
sub
fmulp
mov
aaa
xor
xor
dec
mov
mov
cmp
inc
and
or
add
bnd
jmp
cmp
push
cmpsl
dec
stos
movsl
mov
cld
in
mul
icebp
or
cld
ljmp
dec
push
les
cmpsl
inc
and
xor
dec
daa
dec
mov
daa
dec
and
fimuls
mov
mov
fidivs
cmp
aas
mov
dec
xor
mov
sub
dec
mov
cmpsl
leave
les
push
mov
inc
shlb
es
mov
iret
cmp
ror
mov
test
mov
ret
ret
mov
and
cmpsl
dec
ret
ds
dec
and
lds
and
ss
int
int
inc
dec
mov
mov
shlb
mov
aas
enter
xor
dec
and
ss
test
dec
ss
dec
enter
dec
movsl
inc
inc
and
mov
and
iret
xor
inc
and
daa
iret
fmulp
mov
and
rorl
inc
mov
daa
xor
inc
into
mov
mov
mov
ret
and
mov
cmp
mov
mov
sub
xor
mov
mov
dec
and
inc
aaa
and
movsb
test
mov
mov
into
inc
enter
ret
into
cmp
inc
xor
leave
movsl
ss
sub
mov
xor
mov
mov
cmp
mov
cmpsl
mov
shlb
test
xor
mov
mov
xor
int
inc
les
iret
sub
inc
xor
les
movsb
mov
sarb
xor
xor
and
ds
mov
and
movsl
leave
aaa
movsb
mov
mov
mov
xor
lds
int
mov
sarl
mov
and
cmpsl
lds
mov
push
shlb
and
dec
inc
inc
mov
cmp
mov
xor
xor
mov
cmp
and
dec
cmp
cmp
mov
es
mov
dec
aas
xor
xor
mov
inc
mov
mov
dec
daa
leave
test
cmpsl
fisubs
xor
dec
ret
cmp
inc
mov
sarb
sub
daa
xor
xor
mov
cmp
inc
rolb
ret
xor
cmp
and
int
mov
movsb
mov
cmp
leave
aas
cmp
sub
push
fidivrs
mov
leave
and
cmp
mov
xor
daa
iret
mov
lds
ror
inc
mov
and
mov
xor
mov
xor
mov
dec
mov
mov
dec
xor
aas
mov
mov
cmp
inc
cld
mov
sub
mov
xor
or
xor
mov
sub
mov
add
xor
mov
xor
push
pop
div
mov
mov
xor
shr
imul
mov
add
mov
jmp
js
xor
insb
mov
movsb
addr16
pop
mov
jmp
and
sub
mov
inc
mov
mov
leave
into
dec
dec
and
inc
sarb
int
mov
mov
aaa
cmp
dec
xor
cmp
les
mov
mov
inc
mov
mov
mov
and
inc
les
mov
inc
test
mov
lret
aaa
and
shlb
push
test
inc
mov
mov
mov
movsl
xor
dec
mov
inc
inc
cmp
dec
dec
inc
and
enter
xor
lret
mov
mov
dec
sub
mov
xor
mov
mov
mov
and
inc
push
enter
mov
xor
fidivs
and
movsl
dec
mov
mov
fimuls
cmp
xor
dec
ss
cmp
mov
and
xor
iret
movsb
aaa
push
mov
xor
fidivs
es
cmp
aas
xor
dec
dec
cmp
dec
movsl
mov
and
inc
cmp
dec
leave
mov
ret
ret
mov
sarb
into
mov
movsl
movsb
mov
mov
and
movsl
aas
ss
test
leave
cmp
dec
inc
ret
movsl
and
cmpsl
iret
mov
xor
cmp
into
inc
dec
mov
dec
lret
mov
mov
and
inc
lds
mov
es
and
mov
and
xor
mov
mov
dec
mov
xor
xor
shll
xor
inc
dec
lds
aaa
xor
rcl
mov
inc
movsb
xor
aas
inc
mov
mov
rol
mov
dec
rol
leave
mov
inc
es
cmp
cmp
inc
inc
mov
cmp
shll
mov
cmp
mov
xor
inc
cmp
xor
xor
xor
les
xor
leave
aaa
and
test
movsl
and
mov
iret
mov
es
mov
shll
xor
sub
ret
mov
inc
mov
es
shll
sub
rorl
aaa
lds
iret
inc
fidivrs
mov
leave
mov
xor
and
inc
int
mov
sarl
inc
xor
cmpsl
and
sarb
xor
inc
mov
mov
mov
mov
sub
add
mov
or
mov
mov
or
mov
and
lea
add
mov
jmp
sub
pushf
in
add
push
subl
cld
ljmp
and
mov
xor
daa
inc
dec
xor
mov
mov
mov
inc
daa
cmp
movsb
sarb
mov
enter
inc
inc
mov
into
mov
iret
ss
dec
cmp
mov
cmp
dec
and
mov
dec
es
mov
mov
movsl
test
push
cmp
mov
inc
mov
xor
mov
movsl
and
inc
sub
dec
lret
ds
mov
dec
leave
sub
mov
dec
mov
xor
test
movsb
mov
mov
mov
mov
les
enter
leave
mov
mov
aaa
dec
ss
into
aas
fmulp
mov
es
and
aas
xor
ds
inc
mov
and
inc
xor
shlb
ss
cmp
inc
dec
mov
into
inc
mov
xor
movl
dec
enter
push
ret
mov
lret
les
xor
inc
xor
movsb
and
sub
daa
ret
int
inc
xor
dec
mov
es
fisubs
ss
lds
mov
dec
dec
inc
mov
mov
leave
and
daa
rorl
and
aaa
and
lds
mov
and
mov
mov
into
mov
aas
movsb
daa
lret
mov
into
mov
xor
int
mov
aas
mov
daa
les
rorb
cmpsl
mov
int
es
mov
ret
mov
ret
inc
dec
mov
roll
cmpsl
mov
xor
movsl
cmpsl
inc
daa
inc
mov
shlb
mov
ret
movsb
leave
mov
lret
sub
mov
enter
and
mov
dec
ret
test
mov
fisubs
es
ss
int
mov
sarl
cmp
test
mov
cmp
mov
dec
mov
mov
inc
dec
faddp
inc
mov
xor
dec
daa
mov
mov
daa
xor
ret
inc
inc
int
inc
ds
iret
mov
mov
cmp
cmpsl
mov
sub
movsb
and
xor
xor
and
mov
inc
xor
inc
xor
dec
enter
enter
and
fmulp
lds
aas
mov
aas
mov
xor
inc
lds
iret
mov
push
cmp
mov
mov
dec
movsb
mov
mov
or
mov
or
mov
or
mov
or
mov
xor
xor
add
mov
adc
xor
xor
xor
cmp
jne
cmp
jne
mov
mov
and
mov
xor
or
xor
and
add
mov
pop
leave
ret
push
mov
sub
push
push
push
movl
movl
movl
movl
movl
movl
movl
movl
jmp
xchg
ret
ret
int3
xchg
mov
loope
int
adc
jmp
sub
enter
and
sub
dec
movsb
test
lret
sub
mov
dec
mov
and
into
mov
mov
and
sub
aas
inc
ret
mov
push
aaa
inc
lds
mov
and
sub
es
xor
lret
dec
mov
cmp
lds
mov
into
mov
leave
dec
fidivs
mov
fiadds
sub
inc
and
mov
mov
xor
mov
aas
movsb
les
int
dec
inc
push
inc
mov
dec
mov
xor
sarl
dec
daa
cmpsl
mov
inc
aas
and
xor
xor
int
iret
xor
int
movsb
movsl
daa
mov
and
lds
mov
mov
xor
inc
inc
fidivrs
fidivs
mov
enter
es
mov
movsb
sub
push
mov
ds
inc
cmpsl
mov
ss
dec
inc
inc
cmp
les
sub
xor
mov
xor
xor
movsb
and
lds
push
aaa
mov
mov
push
mov
rolb
xor
dec
mov
dec
cmp
mov
ss
enter
mov
dec
mov
and
xor
dec
inc
cmp
inc
movsb
rorl
mov
inc
into
iret
dec
movsl
cmp
inc
dec
sub
and
xor
dec
mov
lds
shlb
shlb
inc
dec
inc
cmp
and
inc
xor
and
mov
mov
mov
aaa
mov
shlb
inc
mov
cmpsl
mov
and
inc
mov
cmp
inc
xor
aas
and
es
dec
mov
cmp
inc
fiadds
and
rolb
inc
xor
movl
inc
shll
mov
les
leave
les
mov
mov
and
mov
into
sarl
mov
inc
mov
mov
inc
mov
mov
and
mov
test
inc
sarb
ret
into
and
xor
shlb
rolb
mov
xor
mov
inc
leave
cmpsl
dec
cmp
mov
inc
aas
mov
iret
and
push
int
xor
ror
mov
leave
mov
inc
enter
mov
dec
leave
aas
sarb
dec
mov
test
and
ror
movsb
xor
lret
mov
mov
movsl
xor
aas
movl
movl
movl
movl
jmp
or
inc
xchg
imul
sahf
sbb
xchg
jmp
xor
mov
and
inc
ret
rol
mov
mov
test
aaa
aaa
mov
xor
mov
test
mov
mov
movsb
inc
aas
dec
mov
mov
mov
ds
into
mov
cmp
mov
mov
and
aas
and
mov
dec
iret
mov
aaa
mov
inc
dec
dec
lret
dec
ret
mov
lds
mov
xor
cmp
dec
sarb
xor
inc
inc
xor
inc
mov
rol
mov
and
rolb
mov
mov
mov
fisubrs
xor
mov
dec
mov
xor
aaa
aas
mov
mov
ss
mov
xor
leave
xor
dec
inc
rcr
mov
daa
enter
mov
dec
mov
and
cmp
movsl
dec
mov
push
ror
mov
test
mov
mov
and
lds
cmp
and
inc
and
aaa
mov
enter
es
cmp
inc
inc
inc
sub
inc
enter
movsb
xor
movsb
xor
rol
dec
shlb
mov
into
cmp
mov
dec
leave
movsb
dec
xor
sarb
ror
inc
and
and
inc
mov
inc
movsl
movsb
lds
mov
inc
mov
and
dec
mov
inc
xor
movsl
ds
mov
mov
mov
push
aas
cmp
xor
cmp
mov
int
mov
rorb
aas
movsl
xor
fidivs
dec
movsl
cmp
push
and
dec
inc
dec
shrb
inc
fmulp
leave
shlb
inc
inc
mov
movsl
mov
cmpsl
and
iret
inc
and
ret
mov
iret
mov
and
into
cmp
inc
fidivs
xor
inc
mov
iret
inc
dec
mov
inc
mov
mov
les
cmp
xor
dec
mov
xor
mov
inc
lret
leave
dec
aas
aas
int
mov
iret
into
cmp
les
cmpsl
mov
movsb
ret
es
mov
mov
dec
mov
rolb
sub
cmp
xor
mov
inc
mov
aas
movsl
cmpsl
xor
and
cmp
rol
fidivs
cmp
shrl
lret
mov
and
dec
aaa
cmp
mov
shll
dec
xor
movl
movl
movl
movl
jmp
push
gs
faddl
xchg
popf
js
pop
scas
hlt
push
daa
imul
and
dec
dec
inc
dec
mov
leave
mov
cmp
mov
mov
test
mov
rorb
and
lret
inc
ss
xor
mov
sub
mov
cmp
rorb
mov
mov
rol
les
movsl
daa
dec
xor
sub
rorl
mov
leave
mov
movsb
mov
mov
inc
int
inc
mov
mov
aaa
dec
les
xor
mov
daa
mov
daa
cmp
into
dec
aas
dec
dec
dec
mov
inc
cmpsl
movsl
iret
int
and
mov
and
mov
mov
movsb
es
and
mov
sarb
movsb
ss
dec
xor
mov
movsb
inc
les
and
and
cmp
push
dec
cmp
xor
lret
inc
dec
and
leave
inc
inc
and
shll
movsb
mov
push
mov
sub
shlb
movl
mov
ss
lds
xor
mov
daa
mov
daa
dec
inc
mov
ror
xor
mov
fidivs
push
shrb
movsl
dec
mov
mov
ror
mov
es
aaa
shlb
cmp
xor
movsb
mov
mov
into
and
push
ret
inc
test
lds
movsb
mov
and
movsl
dec
mov
lret
xor
into
int
les
ss
xor
mov
mov
mov
xor
and
sarl
lds
push
xor
mov
xor
inc
cmp
cmp
inc
les
movsl
xor
movsl
xor
xor
and
mov
dec
mov
cmp
cmp
dec
dec
test
and
dec
dec
mov
daa
mov
mov
rolb
test
enter
and
ds
mov
mov
shlb
and
xor
and
inc
shll
mov
roll
push
cmp
mov
mov
movl
movsb
mov
and
rolb
and
and
shll
mov
mov
mov
mov
mov
mov
mov
rcl
and
inc
es
inc
movsl
xor
and
xor
mov
mov
leave
aaa
push
dec
iret
lds
xor
and
iret
mov
dec
dec
int
sub
xor
dec
mov
into
xor
daa
daa
inc
dec
les
enter
inc
movl
movl
movl
mov
jmp
sub
in
and
mov
jl
movsl
test
jmp
and
dec
mov
mov
and
dec
mov
mov
movsb
and
sarb
dec
daa
dec
fimuls
mov
inc
and
mov
movsl
dec
dec
xor
dec
mov
dec
mov
ds
xor
int
inc
cmp
movsb
mov
mov
xor
mov
leave
int
mov
movsl
and
xor
ss
and
sarl
cmp
xor
mov
mov
ret
sarl
xor
mov
and
mov
mov
aas
xor
movsl
mov
dec
mov
xor
push
and
xor
ror
mov
mov
mov
shll
cmpsl
dec
xor
and
dec
mov
inc
cmp
int
dec
and
movsb
aaa
dec
mov
and
movsl
and
and
xor
lds
dec
dec
and
mov
inc
cmp
movsl
shlb
mov
cmpsl
inc
dec
aas
daa
mov
mov
les
sarb
mov
mov
shll
and
inc
mov
mov
dec
and
lds
mov
mov
and
mov
inc
int
enter
leave
mov
dec
cmpsl
xor
lret
mov
inc
mov
ror
movsl
dec
leave
inc
xor
fidivrs
into
ret
and
lds
cmp
sarl
es
xor
mov
dec
les
into
and
int
mov
int
mov
xor
enter
es
mov
cmp
and
ss
faddp
ds
push
shlb
cmp
rorb
mov
lds
movsl
rolb
les
leave
mov
aaa
mov
mov
and
mov
int
dec
inc
ds
mov
enter
xor
movsl
mov
aaa
mov
and
sarb
int
ds
cmp
and
les
and
inc
ds
mov
dec
xor
cmp
push
inc
into
les
push
cmp
into
lds
aas
les
aas
and
dec
cmp
cmp
xor
iret
mov
xor
leave
mov
enter
inc
dec
mov
ds
and
movsl
dec
and
iret
leave
aaa
aas
and
es
cmpsl
ss
dec
inc
sarb
lds
mov
into
cmp
leave
xor
mov
into
fisubs
and
es
movl
mov
mov
mov
push
push
push
call
jmp
dec
sbb
lock
pop
hlt
xor
ljmp
dec
lret
shlb
mov
xor
push
cmp
shlb
inc
xor
inc
leave
cmp
xor
mov
mov
xor
xor
xor
inc
shrb
leave
movsb
test
xor
and
xor
mov
es
dec
cmp
mov
push
mov
sub
dec
mov
es
and
movsb
and
mov
into
sub
dec
mov
dec
mov
push
xor
xor
mov
dec
dec
mov
les
fisubs
dec
into
dec
movsb
mov
aaa
and
and
mov
mov
mov
lds
mov
and
inc
fidivrs
mov
push
mov
xor
and
xor
rolb
mov
and
leave
dec
inc
xor
sub
ror
and
mov
mov
movsl
int
dec
inc
movsl
xor
xor
inc
inc
mov
shll
xor
inc
inc
and
ds
inc
mov
cmp
mov
mov
and
and
inc
cmp
mov
dec
movl
ret
daa
movsb
sarl
ret
shlb
daa
lds
fisubs
sub
and
xor
mov
iret
es
leave
movsb
dec
mov
mov
cmp
xor
mov
dec
movsl
fidivs
shlb
ss
cmp
mov
leave
xor
mov
inc
shlb
test
dec
daa
enter
dec
leave
xor
mov
cmp
cmp
mov
into
lret
inc
shlb
push
leave
movsb
cmp
and
cmpsl
and
inc
xor
aas
mov
inc
mov
and
into
inc
mov
movsb
dec
mov
inc
cmp
dec
dec
leave
rol
mov
xor
aaa
es
mov
leave
mov
cmp
xor
inc
mov
mov
mov
and
mov
inc
cmpsl
aas
xor
and
mov
sub
dec
mov
mov
movsb
inc
inc
mov
sub
xor
daa
sub
inc
es
xor
and
inc
mov
ret
inc
mov
ret
and
les
cmpsl
lds
mov
iret
inc
xor
and
mov
mov
sub
mov
ret
mov
and
hlt
push
push
push
push
call
mov
mov
push
push
or
or
push
push
call
push
mov
sub
mov
pop
sbb
mov
push
jmp
mov
in
data16
insb
clc
adcl
test
ljmp
mov
movsb
leave
and
mov
inc
inc
mov
shlb
dec
mov
dec
daa
shlb
inc
xor
shlb
es
inc
mov
dec
xor
leave
xor
rcl
and
sub
dec
into
int
les
aas
mov
and
ds
sarb
mov
int
cmp
and
mov
and
mov
xor
mov
and
into
cmp
test
mov
mov
leave
les
xor
es
mov
xor
daa
mov
aaa
mov
mov
rolb
lret
mov
daa
inc
inc
aaa
leave
cmp
xor
xor
mov
and
mov
mov
mov
inc
mov
inc
mov
mov
and
mov
xor
push
xor
cmp
mov
mov
dec
enter
fidivs
iret
ret
sarl
dec
and
mov
mov
shll
inc
ret
mov
les
mov
and
mov
dec
dec
and
lret
sub
xor
mov
xor
dec
cmp
ds
dec
mov
dec
dec
and
mov
daa
mov
mov
es
cmp
and
dec
mov
cmp
dec
es
xor
mov
mov
leave
aaa
mov
inc
mov
les
faddp
daa
xor
cmp
dec
iret
leave
daa
and
into
movsl
mov
shlb
enter
leave
sarl
inc
cmp
mov
inc
xor
ss
and
mov
inc
xor
mov
lret
and
aas
les
push
dec
xor
xor
leave
mov
inc
and
rcl
xor
es
fisubs
lds
cmpsl
mov
mov
mov
cmp
xor
lret
les
les
fiadds
cmpsl
mov
and
mov
leave
movsb
and
and
daa
xor
mov
ss
int
leave
and
aaa
mov
movsl
mov
and
es
mov
mov
xor
dec
and
xor
inc
mov
mov
mov
leave
inc
mov
iret
daa
and
and
and
cmpsl
dec
fidivs
inc
and
mov
mov
mov
and
inc
and
inc
dec
cmp
and
and
fcoms
rclb
push
mov
call
mov
mov
push
push
push
push
call
mov
mov
push
push
or
jmp
leave
fcoml
inc
cld
insb
jge
pop
out
js
xor
jmp
and
mov
inc
mov
mov
mov
mov
ds
rcr
mov
xor
and
xor
mov
inc
push
mov
mov
int
inc
dec
mov
daa
dec
sub
leave
shlb
roll
rorb
shlb
xor
and
leave
mov
and
ds
dec
mov
fidivs
dec
and
inc
cmpsl
mov
mov
iret
mov
xor
es
int
ret
and
int
and
movsb
faddp
mov
lds
xor
lds
enter
and
lds
and
mov
test
xor
mov
mov
fidivrs
and
xor
test
leave
ds
into
shlb
ds
aas
lret
leave
xor
dec
leave
ds
and
aas
mov
les
and
and
inc
les
mov
and
lret
mov
aas
lret
dec
sarb
push
shlb
mov
and
push
and
xor
inc
mov
dec
cmp
ret
xor
cmp
xor
aas
enter
lds
les
inc
rorl
mov
dec
and
mov
mov
inc
sub
and
mov
dec
xor
mov
inc
sub
ror
dec
les
inc
int
int
ror
inc
mov
dec
xor
ret
inc
xor
dec
mov
es
and
inc
ss
movsb
inc
inc
and
mov
sub
lret
les
dec
xor
and
ret
cmpsl
fidivrs
ds
inc
daa
dec
aas
and
movsb
int
ror
mov
mov
mov
mov
inc
mov
test
daa
push
mov
cmp
dec
daa
mov
xor
cmp
faddp
fiadds
sub
aas
xor
sub
xor
mov
mov
mov
mov
cmp
mov
inc
into
dec
xor
mov
inc
xor
xor
lds
lret
dec
movsb
int
aaa
rol
dec
mov
mov
push
ss
and
sarb
dec
test
leave
mov
dec
sub
dec
mov
mov
mov
dec
inc
mov
cmpsl
movsb
xor
sub
inc
mov
mov
and
dec
aas
mov
and
xor
and
leave
or
push
push
call
push
mov
sub
pop
sbb
shld
shl
or
mov
or
xor
xor
mov
mov
jmp
outsl
mov
enter
loope
mov
js
sub
jl
jmp
rol
dec
inc
xor
cmp
mov
movsb
lret
daa
mov
shll
inc
mov
and
and
enter
mov
dec
dec
inc
mov
dec
push
daa
xor
rol
mov
push
cmp
mov
xor
inc
mov
mov
mov
int
and
xor
sub
inc
mov
dec
mov
xor
mov
mov
ror
ds
mov
mov
mov
mov
mov
sarb
movsl
and
enter
shlb
fisubs
mov
mov
mov
sub
mov
aaa
aas
sub
mov
into
movsl
shlb
enter
dec
inc
dec
dec
inc
fimuls
and
movsl
dec
inc
movsb
aaa
ror
dec
and
and
shll
lret
mov
mov
xor
push
mov
mov
inc
and
lret
into
mov
into
mov
mov
dec
dec
shlb
dec
inc
ret
inc
int
into
mov
aas
mov
dec
cmp
sarl
mov
cmpsl
mov
rol
mov
iret
inc
and
mov
ror
mov
aas
ds
xor
xor
inc
dec
cmpsl
and
fimuls
ret
mov
xor
fiadds
inc
mov
inc
iret
mov
movsl
dec
mov
lret
inc
fmulp
test
inc
and
enter
ret
inc
aaa
and
mov
dec
cmp
xor
aaa
mov
cmp
mov
and
daa
and
cmp
mov
mov
daa
and
push
cmpsl
lret
mov
rol
mov
sub
mov
xor
cmp
xor
les
inc
mov
mov
cmpsl
mov
test
daa
dec
dec
mov
test
dec
inc
aas
xor
mov
aaa
mov
mov
shll
inc
cmpsl
dec
lds
mov
int
mov
shlb
dec
xor
leave
mov
xor
sub
inc
mov
es
xor
lret
dec
cmp
and
lret
iret
les
test
mov
mov
mov
and
ds
ss
int
mov
mov
dec
int3
mov
sub
push
mov
push
sbb
push
push
call
push
add
push
adc
push
push
call
mov
mov
mov
xor
xor
add
mov
adc
mov
mov
mov
mov
mov
mov
and
mov
and
mov
push
push
push
push
call
push
push
xor
xor
jmp
pop
cmp
sbb
out
adc
scas
imul
fmulp
leave
inc
mov
mov
and
es
inc
leave
fisubs
ror
and
int
mov
xor
cmpsl
ror
leave
ss
dec
and
shll
cmp
inc
inc
dec
iret
inc
sub
inc
and
ror
sub
movsl
mov
mov
dec
dec
ret
es
inc
daa
mov
mov
mov
mov
enter
iret
mov
mov
sub
mov
mov
dec
mov
test
cmpsl
ds
mov
int
dec
aas
inc
cmp
iret
mov
cmp
cmpsl
iret
movsl
xor
int
mov
aaa
xor
mov
mov
mov
xor
movsl
mov
push
ds
mov
xor
leave
and
and
sub
mov
inc
and
xor
movsb
mov
mov
xor
mov
iret
xor
lret
inc
inc
aas
cmp
aaa
ret
shlb
mov
xor
mov
inc
shlb
lret
and
ss
movsl
mov
ss
xor
mov
mov
mov
push
mov
inc
dec
mov
aaa
ror
inc
dec
int
es
mov
dec
mov
mov
dec
mov
mov
and
dec
dec
cmpsl
ss
xor
mov
int
inc
iret
mov
and
rcr
int
mov
cmp
cmp
inc
xor
xor
lret
xor
xor
sarl
ds
xor
cmpsl
enter
leave
mov
sarb
and
cmp
push
mov
mov
ds
es
mov
cmp
xor
mov
sub
and
mov
es
xor
mov
movsl
leave
ss
push
ret
mov
xor
inc
inc
mov
mov
and
dec
sub
xor
inc
cmpsl
mov
xor
mov
mov
cmp
mov
aaa
cmp
dec
dec
mov
push
dec
push
mov
dec
aas
enter
push
mov
sarb
int
mov
mov
rclb
mov
inc
and
dec
mov
xor
dec
and
cmp
test
daa
xor
mov
movsb
aaa
and
and
dec
mov
xor
mov
mov
daa
ss
and
inc
test
lret
mov
push
cmp
mov
mov
dec
cmp
xor
xor
rolb
inc
ret
mov
and
imul
or
clc
mov
mov
shl
mov
xor
xor
call
add
mov
mov
adc
mov
mov
xor
xor
and
and
mov
mov
push
push
push
push
call
push
push
xor
xor
push
push
call
xor
mov
mov
xor
add
adc
xor
xor
shrd
or
mov
jmp
mov
sub
xor
adc
jmp
mov
mov
aas
xor
mov
xor
mov
mov
into
mov
inc
mov
cmp
int
xor
mov
leave
inc
ret
mov
mov
inc
int
inc
mov
roll
enter
mov
mov
and
mov
mov
cmp
and
inc
xor
cmp
cmp
fisubs
inc
movsb
cmpsl
mov
xor
mov
and
movsl
mov
shlb
ret
inc
mov
sub
into
dec
dec
cmp
rclb
and
and
mov
dec
and
mov
es
movsb
dec
inc
dec
inc
aaa
and
int
xor
mov
xor
ret
sub
mov
ret
aas
inc
mov
xor
and
movsl
inc
into
cmp
mov
inc
into
xor
mov
rol
xor
dec
mov
movsl
mov
cmp
lret
dec
ds
aaa
mov
cmp
xor
mov
rolb
inc
dec
dec
aaa
es
xor
ret
mov
dec
mov
mov
mov
mov
mov
test
mov
dec
xor
mov
inc
mov
and
cmpsl
enter
int
mov
mov
inc
test
mov
xor
enter
les
mov
and
dec
mov
inc
inc
and
int
and
dec
mov
roll
aaa
sub
mov
mov
ret
xor
inc
les
mov
inc
xor
dec
mov
shlb
inc
dec
dec
mov
mov
lret
mov
faddp
movsb
lret
mov
into
inc
iret
movsl
dec
mov
dec
mov
inc
daa
mov
cmp
and
aas
mov
leave
mov
dec
les
sarb
mov
cmp
mov
leave
mov
mov
dec
mov
leave
mov
mov
push
iret
leave
inc
dec
enter
cmpsl
inc
mov
dec
shlb
sub
test
mov
push
mov
aas
mov
sarb
xor
mov
xor
mov
movsb
mov
mov
fimuls
mov
inc
fidivs
inc
mov
and
cmpsl
aas
aas
es
daa
inc
movsb
mov
push
mov
leave
mov
mov
dec
mov
ljmp
mov
mov
mov
mov
xor
xor
sub
mov
sbb
mov
push
push
push
push
jmp
imul
mov
pop
xor
lea
scas
imul
cmp
and
push
ds
inc
mov
mov
roll
cmp
test
mov
daa
leave
inc
iret
iret
cmp
and
ret
mov
and
leave
dec
mov
mov
xor
and
dec
fidivrs
mov
and
and
iret
movsl
ret
xor
inc
ds
cmpsl
mov
inc
movsb
es
lds
and
daa
and
and
dec
sub
mov
movsl
into
leave
mov
into
mov
xor
mov
inc
xor
xor
mov
dec
ds
mov
cmpsl
mov
mov
enter
and
and
dec
movsb
xor
mov
faddp
movsl
cmp
and
and
dec
push
int
dec
dec
lret
shlb
daa
cmp
inc
sarb
mov
aas
ret
sarl
and
mov
shlb
lds
dec
shll
aas
xor
mov
ror
mov
es
dec
and
inc
fidivs
dec
mov
dec
sarb
ret
rorl
mov
and
cmpsl
mov
mov
into
inc
dec
rcl
inc
leave
lds
daa
mov
mov
mov
into
mov
xor
enter
xor
inc
dec
xor
mov
inc
inc
xor
mov
and
inc
mov
dec
xor
cmpsl
roll
inc
cmp
dec
xor
lret
daa
daa
movsl
lds
sub
cmpsl
xor
xor
cmp
and
movsb
movsl
int
aas
mov
les
enter
and
mov
inc
dec
mov
mov
and
lret
aaa
cmp
shlb
and
ss
dec
xor
inc
movsl
mov
dec
and
cmpsl
faddp
xor
mov
xor
mov
enter
and
mov
mov
movsb
mov
mov
mov
daa
and
inc
mov
inc
mov
and
rolb
lret
mov
shlb
faddp
movl
aas
int
sub
movsb
iret
daa
ss
xor
mov
mov
dec
mov
aas
daa
cmp
fisubs
push
enter
mov
cmp
mov
lds
aas
aaa
inc
mov
lds
es
faddp
and
aas
mov
enter
and
int
mov
aas
enter
mov
add
mov
mov
mov
add
mov
adc
add
pop
adc
pop
mov
mov
pop
leave
ret
push
mov
sub
mov
mov
movl
movl
movl
movl
movl
jmp
repnz
push
mov
sub
js
adc
jmp
dec
mov
sub
rolb
and
and
iret
and
dec
mov
and
aaa
inc
dec
dec
cmpsl
iret
mov
cmpsl
dec
inc
and
xor
sarb
cmpsl
mov
mov
dec
leave
xor
and
dec
mov
daa
inc
inc
cmp
dec
inc
sub
and
int
enter
ds
xor
mov
mov
mov
xor
mov
mov
mov
movsl
les
mov
shrb
test
dec
inc
mov
inc
xor
roll
dec
aas
dec
ds
ret
mov
dec
xor
xor
dec
mov
lds
cmp
dec
mov
and
and
mov
and
xor
shlb
rol
xor
and
enter
lds
inc
inc
fmulp
fisubs
mov
ss
es
daa
cmp
dec
cmpsl
mov
enter
rcl
daa
mov
leave
es
movsl
dec
test
ss
mov
mov
mov
aaa
daa
mov
movsl
lret
and
shrl
movsb
mov
movsl
and
mov
mov
sarb
shlb
into
xor
xor
into
and
mov
and
mov
mov
and
and
and
into
mov
lds
into
cmp
int
mov
mov
and
mov
mov
sub
inc
and
mov
mov
mov
iret
xor
mov
les
cmp
shlb
mov
leave
mov
mov
mov
test
and
inc
ds
int
dec
dec
mov
mov
mov
enter
and
and
mov
inc
mov
mov
ds
rolb
mov
movsb
ss
xor
mov
movsl
test
and
mov
xor
mov
mov
mov
mov
xor
mov
lds
inc
and
aas
es
xor
mov
movsl
mov
les
into
mov
aas
mov
mov
sub
sarl
int
ret
es
daa
inc
test
cmp
cmp
daa
mov
cmpsl
mov
mov
inc
inc
ret
mov
inc
mov
ror
dec
xor
dec
les
xor
mov
dec
dec
and
xor
daa
xor
test
rorb
mov
mov
and
lds
dec
and
mov
dec
xor
iret
inc
rorl
mov
and
mov
mov
test
xor
movsl
shlb
and
lret
test
ret
mov
dec
sub
mov
es
ds
mov
cmpsl
into
les
cmp
inc
loopne
push
add
movl
movl
movl
mov
mov
and
sub
mov
and
or
xor
mov
mov
jmp
sahf
xor
lret
insb
lret
data16
jnp
testl
dec
push
jmp
lds
test
push
mov
shlb
movsl
and
mov
lds
int
push
dec
lret
ret
mov
shlb
xor
dec
and
sub
and
dec
mov
mov
mov
push
ss
mov
inc
push
mov
ds
xor
xor
push
mov
mov
mov
ds
aas
mov
mov
enter
shll
les
cmp
inc
mov
leave
and
inc
inc
mov
test
leave
mov
push
daa
dec
and
ds
mov
mov
dec
mov
xor
int
xor
xor
enter
inc
inc
shlb
inc
test
inc
mov
mov
inc
into
dec
cmp
and
dec
mov
into
mov
mov
shlb
mov
mov
into
aas
mov
inc
aas
aas
mov
xor
inc
xor
cmpsl
dec
mov
cmp
shll
and
and
mov
aaa
and
mov
les
lds
cmp
test
cmp
xor
int
cmp
movsb
mov
shlb
xor
xor
dec
mov
mov
dec
mov
xor
mov
daa
rorb
ret
movsb
enter
inc
mov
mov
dec
xor
xor
fidivrs
int
mov
mov
lds
sub
mov
mov
push
ds
ret
iret
daa
mov
leave
into
inc
mov
mov
mov
dec
xor
push
ds
ss
cmpsl
and
inc
mov
movsb
leave
xor
rol
mov
shlb
shlb
fidivrs
mov
dec
iret
inc
ret
mov
mov
mov
leave
inc
dec
cmp
xor
mov
xor
mov
lret
daa
mov
into
cmp
mov
fisubs
dec
and
ds
xor
xor
inc
xor
and
dec
lds
fidivrs
dec
aas
inc
mov
ss
mov
aaa
movsb
push
mov
movsb
mov
mov
sub
dec
inc
movsl
cmp
mov
mov
les
mov
test
mov
and
int
test
xor
mov
daa
push
and
xor
dec
mov
and
xor
movl
dec
les
dec
es
shlb
inc
mov
int
mov
mov
mov
enter
test
ss
dec
and
mov
int
mov
cmp
mov
aaa
mov
xor
and
dec
inc
mov
mov
daa
leave
fisubs
mov
mov
xor
fidivs
push
xor
add
cmp
jne
mov
mov
mov
add
shr
or
mov
jmp
cmpsl
or
or
mov
hlt
testb
push
jmp
and
daa
xor
and
mov
test
dec
mov
xor
inc
ror
mov
mov
aaa
mov
xor
and
and
lret
and
mov
dec
mov
dec
movsb
daa
int
dec
sub
xor
xor
mov
aaa
xor
xor
movsb
xor
lds
lds
movsl
mov
cmp
and
es
ds
dec
iret
mov
cmp
mov
rorb
mov
enter
push
inc
ds
aas
inc
into
sarl
xor
mov
mov
xor
mov
movsb
xor
and
mov
iret
and
and
xor
shlb
and
mov
xor
mov
shrb
lds
and
dec
cmp
mov
mov
movsb
shlb
ror
mov
lds
lds
inc
mov
mov
dec
ret
les
lret
mov
mov
dec
movsl
iret
enter
xor
xor
es
mov
cmp
dec
mov
into
sub
dec
inc
cmpsl
movsl
dec
mov
lds
fimuls
xor
dec
sub
xor
iret
movsl
dec
les
cmp
fimuls
sub
mov
ds
sub
mov
dec
xor
sub
dec
aas
dec
fiadds
inc
and
mov
push
xor
mov
mov
movsb
aas
lret
mov
inc
inc
xor
inc
mov
dec
and
int
xor
mov
dec
inc
mov
iret
cmp
xor
dec
cmp
fisubs
dec
and
inc
mov
aaa
dec
mov
into
inc
mov
and
xor
xor
and
movsb
mov
mov
xor
shlb
xor
mov
leave
cmpsl
es
test
xor
sub
push
dec
mov
dec
mov
ss
enter
mov
cmpsl
cmp
mov
daa
cmpsl
shll
dec
mov
mov
mov
test
inc
inc
mov
mov
mov
shll
xor
inc
and
sub
roll
dec
movsb
enter
dec
lret
mov
shll
mov
inc
daa
ror
mov
mov
mov
xor
xor
mov
dec
sarb
leave
ds
dec
lret
movsl
inc
mov
int
xor
mov
lds
mov
dec
iret
mov
inc
movsl
sarl
xor
lds
iret
xor
movsl
inc
aaa
mov
mov
mov
and
les
test
xor
ds
xor
mov
mov
leave
rol
shlb
mov
enter
aas
movsb
and
movsb
xor
mov
mov
test
add
mov
shr
or
mov
jmp
testb
insb
js
mov
mov
imul
rorl
aas
push
rorl
inc
shlb
aaa
mov
ds
and
xor
aas
inc
inc
and
cmp
mov
mov
and
int
test
inc
dec
mov
sub
mov
movsb
aaa
mov
lret
shlb
mov
and
iret
xor
daa
and
mov
mov
movsb
lds
sub
and
cmp
mov
aaa
mov
mov
sarb
int
inc
cmp
cmp
dec
lret
and
mov
rcr
and
cmpsl
xor
and
and
shll
inc
cmp
mov
lds
cmp
fidivrs
enter
dec
iret
and
lds
test
iret
lret
ret
movsl
inc
mov
mov
xor
mov
and
push
xor
sub
leave
mov
and
inc
and
inc
dec
dec
xor
shlb
shlb
mov
sub
and
mov
fidivrs
ss
movsl
rol
mov
inc
push
movsl
cmpsl
movsb
mov
leave
dec
sub
movsl
lret
inc
mov
xor
dec
mov
cmp
mov
cmp
aaa
shlb
cmp
int
es
mov
inc
cmp
mov
inc
xor
cmp
dec
cmp
and
roll
test
and
rol
ror
mov
dec
ss
xor
fisubs
inc
cmp
cmp
sub
shll
mov
xor
mov
mov
xor
lds
inc
les
mov
mov
iret
into
mov
mov
and
movsl
mov
inc
mov
cmp
and
cmp
cmp
sub
ret
test
dec
mov
shll
dec
int
cmp
xor
dec
inc
movsl
dec
enter
cmpsl
ret
dec
aaa
mov
cmpsl
fidivs
aaa
ds
xor
lret
aas
push
mov
mov
ss
dec
fiadds
inc
mov
inc
xor
cmp
inc
cmp
mov
mov
dec
es
mov
into
mov
dec
cmp
xor
daa
dec
mov
dec
aas
test
leave
into
es
xor
mov
daa
leave
sub
leave
aas
mov
aas
mov
shlb
into
movsb
lret
dec
movsl
and
les
cmp
mov
xor
xor
inc
test
inc
leave
mov
mov
xor
int
mov
cmp
dec
enter
shrb
mov
and
mov
mov
xor
fidivrs
mov
xor
mov
ds
ds
inc
mov
and
loope
mov
mov
lea
add
mov
jmp
je
lcall
adc
mov
push
jmp
xor
lds
daa
dec
cmp
shlb
mov
movsl
mov
inc
int
es
sarb
aaa
dec
mov
rorb
rorb
push
cmp
ds
mov
leave
lds
daa
cmp
ror
mov
mov
xor
mov
and
es
mov
les
rorb
es
mov
xor
mov
mov
and
sub
ss
sub
and
cmpsl
mov
xor
fiadds
mov
mov
inc
mov
mov
ds
dec
dec
fidivrs
lds
ss
mov
mov
aas
and
mov
mov
dec
and
movsl
xor
xor
iret
mov
cmp
ss
dec
enter
dec
shlb
inc
into
and
mov
inc
lret
mov
dec
xor
dec
lds
mov
mov
sub
mov
sub
and
mov
cmp
aas
inc
into
sub
mov
shll
mov
daa
es
int
sub
shlb
mov
mov
daa
mov
ds
mov
inc
ss
inc
mov
rolb
dec
ret
dec
dec
push
mov
dec
inc
and
aas
dec
test
mov
daa
mov
and
ss
test
into
and
mov
movsl
push
ret
dec
test
mov
mov
enter
inc
and
and
xor
and
aas
and
leave
les
mov
inc
cmp
mov
and
mov
iret
shll
dec
iret
inc
lret
mov
mov
mov
inc
int
roll
cmp
shlb
xor
cmpsl
mov
leave
inc
mov
enter
inc
cmp
sarb
dec
fidivs
dec
dec
les
xor
ss
xor
lds
aaa
ss
mov
xor
movsb
and
mov
mov
mov
movsb
shlb
cmp
cmp
mov
inc
mov
lds
mov
ds
dec
xor
mov
sub
push
int
shlb
int
rol
mov
mov
into
les
xor
enter
sarl
and
enter
mov
mov
lret
mov
shlb
cmp
push
ds
fidivrs
and
cmp
and
fidivrs
xor
into
inc
movsl
cmpsl
and
mov
dec
fmulp
cmp
into
mov
cmp
sub
cmp
ret
mov
mov
and
movsl
inc
mov
inc
test
sub
and
ret
mov
mov
mov
int
leave
movsb
shlb
inc
inc
movsl
leave
mov
mov
xor
mov
mov
mov
imul
xor
div
mov
xor
and
cmp
je
mov
jmp
mov
add
xor
add
imul
xor
jmp
movl
movl
movl
mov
mov
sub
and
add
or
sub
leave
ret
push
mov
and
jmp
pop
mov
push
push
add
sbb
jmp
and
inc
dec
mov
shll
mov
ret
shlb
and
xor
xor
mov
mov
mov
mov
xor
xor
into
push
ss
into
fisubs
mov
inc
movsb
push
inc
xor
mov
inc
dec
and
daa
into
ss
xor
sarb
inc
mov
cmp
movsb
mov
mov
xor
xor
and
dec
aas
iret
xor
mov
mov
mov
les
iret
es
xor
xor
dec
dec
aaa
ret
inc
dec
lds
movsl
mov
ds
aas
leave
mov
cmp
inc
dec
mov
leave
cmp
mov
movsl
les
xor
inc
cmp
test
inc
shll
int
xor
mov
mov
ret
int
mov
dec
push
movsl
ret
mov
dec
ds
dec
xor
rol
daa
mov
into
aas
mov
ds
mov
mov
aaa
mov
xor
cmp
push
daa
mov
shlb
ds
sub
fiadds
dec
inc
ror
inc
sub
dec
cmp
inc
rorl
mov
mov
xor
mov
xor
aaa
push
inc
aaa
sub
and
mov
and
mov
cmpsl
mov
movsl
dec
dec
cmp
mov
and
cmp
mov
dec
xor
lret
mov
mov
inc
dec
inc
mov
mov
xor
dec
mov
xor
cmp
mov
lds
lds
and
mov
xor
dec
inc
mov
push
xor
mov
and
mov
xor
mov
sub
lret
les
mov
mov
sub
ss
xor
cmp
sub
rcr
movsl
ret
iret
vpmovsxwq
aaa
iret
movsb
iret
aas
dec
lds
iret
mov
int
ds
aaa
xor
sub
cmp
mov
push
dec
mov
movsl
xor
mov
mov
iret
mov
inc
cmp
rorl
xor
shlb
dec
dec
dec
mov
leave
inc
dec
cmp
xor
and
lds
inc
mov
dec
es
aaa
xor
mov
mov
shll
push
mov
dec
lds
shll
rorb
and
enter
mov
dec
es
mov
ret
ss
ret
inc
and
cmpsl
dec
mov
test
and
mov
dec
mov
movsl
lret
mov
dec
mov
ret
leave
ret
mov
movsb
es
lds
shlb
iret
leave
mov
inc
daa
sarb
mov
ret
mov
xor
aaa
leave
enter
ret
mov
mov
into
and
enter
and
lret
xor
inc
dec
enter
and
test
mov
xor
lds
and
lds
aaa
int
mov
in
and
lea
mov
mov
mov
mov
jmp
popf
aaa
and
insb
insb
test
cmp
cwtl
pop
xlat
testl
jmp
mov
mov
xor
shlb
inc
xor
leave
inc
xor
mov
sub
dec
mov
aaa
and
push
enter
mov
mov
xor
iret
int
aaa
xor
cmpsl
mov
and
ds
and
mov
xor
dec
dec
shlb
inc
mov
shll
inc
es
sarb
cmp
inc
dec
xor
movsl
mov
sub
rorl
mov
mov
inc
lret
movsl
enter
fiadds
inc
dec
fmulp
shlb
mov
mov
and
lret
rcr
aas
and
iret
and
fidivs
mov
cmp
mov
mov
mov
leave
mov
mov
shlb
es
push
mov
rorb
mov
test
mov
int
leave
dec
mov
cmp
mov
mov
lds
ss
mov
sarb
and
mov
dec
les
xor
aas
rorb
int
xor
mov
xor
push
mov
mov
mov
mov
movsb
int
mov
mov
mov
les
mov
mov
inc
mov
push
movsl
push
mov
mov
test
and
and
mov
mov
xor
inc
sub
inc
mov
dec
mov
dec
into
xor
inc
shlb
aas
mov
mov
mov
dec
mov
aas
mov
xor
mov
movsb
mov
mov
mov
and
inc
into
sarb
xor
movsl
les
inc
inc
xor
test
mov
inc
mov
inc
push
mov
mov
inc
and
mov
lret
mov
mov
cmp
and
lret
inc
and
mov
shlb
inc
push
inc
lds
int
enter
mov
rolb
ret
xor
mov
mov
dec
mov
and
fidivs
mov
daa
ret
int
mov
mov
xor
fidivs
xor
xor
int
lds
ror
movsl
mov
dec
cmp
sub
sarb
test
dec
cmp
cmp
mov
cmp
cmpsl
ret
rorb
and
dec
leave
push
dec
mov
dec
inc
mov
aas
leave
xor
mov
mov
inc
mov
and
rcr
inc
dec
inc
and
movsl
movsb
and
les
cmp
mov
inc
inc
lret
and
iret
xor
push
mov
movsb
leave
mov
test
cmp
fimuls
xor
inc
and
mov
into
inc
mov
rol
fidivrs
xor
es
inc
lds
xor
dec
es
lret
movsl
dec
iret
and
xor
iret
iret
mov
cmp
dec
mov
mov
dec
mov
xor
inc
inc
inc
movsb
dec
dec
mov
inc
mov
mov
inc
xor
mov
dec
aaa
daa
inc
inc
dec
inc
sub
sbb
mov
orl
jmp
out
xchg
or
mov
xchg
add
or
xorl
jmp
push
mov
mov
xor
mov
and
sub
ror
sarb
mov
dec
xor
mov
mov
movsl
daa
mov
shll
mov
mov
and
mov
dec
aaa
cmpsl
int
mov
lds
lret
into
dec
mov
movsb
lds
mov
inc
cmp
and
mov
sub
movsl
xor
xor
mov
dec
enter
sub
mov
mov
inc
ds
mov
mov
movsl
vmovapd
mov
and
inc
mov
cmp
cmp
lds
es
vmovmskps
cmp
iret
ss
xor
shrl
inc
lret
mov
es
cmpsl
mov
test
cmp
les
and
inc
lds
mov
test
mov
rol
and
enter
and
and
mov
xor
enter
xor
mov
sub
into
dec
and
aas
mov
ret
daa
rol
fidivs
mov
shll
dec
xor
fidivrs
dec
leave
les
mov
aas
dec
mov
daa
aaa
into
dec
cmp
push
xor
and
cmp
mov
mov
sarb
enter
mov
cmp
mov
mov
movsb
and
iret
and
shll
inc
shlb
cmp
les
xor
mov
mov
dec
cmp
test
push
push
mov
shll
inc
and
xor
xor
xor
inc
rol
and
shlb
mov
mov
mov
dec
cmp
cmp
iret
xor
mov
dec
cmp
cmpsl
xor
mov
shlb
daa
mov
xor
ret
mov
xor
cmp
leave
lret
movsb
lret
aaa
inc
xor
inc
cmp
movsl
dec
dec
inc
mov
mov
mov
enter
dec
mov
ss
cmpsl
inc
mov
aaa
ret
aas
mov
mov
sub
leave
mov
mov
xor
movsb
xor
int
lret
mov
dec
shlb
mov
cmp
mov
mov
dec
xor
inc
xor
mov
mov
inc
xor
dec
xor
xor
mov
test
mov
mov
mov
and
inc
inc
mov
dec
movl
movsb
enter
and
rcr
mov
dec
aaa
inc
mov
shlb
shll
mov
mov
mov
mov
cmp
mov
dec
dec
mov
inc
inc
dec
sub
inc
es
mov
mov
ret
lret
and
leave
dec
and
mov
ror
and
test
mov
and
test
lret
daa
leave
xor
mov
es
xor
mov
sbb
xchg
add
add
fistpl
inc
imul
sti
jae
sbb
imul
inc
and
dec
mov
mov
fimuls
inc
aaa
aaa
mov
mov
les
cmp
and
movsb
mov
mov
mov
dec
cmp
dec
dec
xor
lret
and
shll
into
cmp
mov
xor
aas
sub
test
inc
and
mov
daa
cmpsl
xor
xor
mov
mov
mov
mov
cmp
aaa
leave
test
push
iret
mov
dec
ds
cmp
mov
and
cmp
lret
mov
daa
cmp
xor
mov
mov
and
cmpsl
enter
lret
shlb
lds
xor
lret
mov
movsb
mov
ret
and
aas
mov
dec
mov
sub
movsb
mov
inc
and
fisubs
mov
shlb
and
and
cmp
ds
mov
sub
into
mov
mov
xor
dec
mov
mov
test
leave
and
cmp
mov
xor
int
mov
xor
mov
mov
mov
xor
and
push
mov
rol
les
and
ds
dec
dec
mov
iret
mov
cmp
aaa
aaa
mov
enter
mov
and
inc
roll
into
mov
mov
aas
aaa
movsl
cmpsl
daa
mov
inc
aaa
xor
mov
mov
mov
daa
dec
enter
xor
mov
aaa
mov
les
and
mov
mov
into
shlb
mov
mov
test
xor
cmp
cmpsl
mov
dec
inc
mov
mov
daa
mov
shrl
cmpsl
xor
mov
ds
inc
inc
fisubs
cmp
mov
and
dec
dec
inc
mov
ret
inc
and
xor
shlb
sarb
es
mov
into
mov
inc
mov
into
mov
mov
dec
rorb
sarb
inc
xor
lret
leave
dec
dec
dec
shlb
inc
dec
cmpsl
xor
mov
and
xor
int
xor
dec
cmpsl
mov
dec
daa
iret
xor
and
and
mov
mov
lret
es
cmp
mov
push
dec
mov
dec
mov
aas
mov
int
mov
mov
test
ss
test
dec
and
aas
iret
and
mov
dec
les
xor
xor
mov
cmp
xor
xor
cmp
xor
dec
iret
shlb
push
cmpsl
dec
aas
inc
daa
mov
dec
mov
cmp
inc
into
ss
xor
inc
sub
ds
xor
cmp
es
dec
and
dec
inc
and
inc
aas
shlb
mov
mov
cmp
dec
shlb
ror
inc
mov
cmp
push
call
mov
mov
pushl
mov
pushl
mov
pushl
pushl
pushl
pushl
pushl
call
pop
pop
jmp
add
in
addl
sbb
movsl
push
jmp
shll
es
mov
cmpsl
mov
inc
mov
xor
xor
mov
inc
xor
mov
dec
and
and
ror
and
xor
mov
dec
iret
daa
and
ds
xor
mov
mov
mov
cmp
xor
cmp
int
dec
xor
xor
mov
mov
and
dec
cmp
iret
and
mov
lret
inc
and
push
inc
iret
mov
mov
and
mov
movsb
cmp
ds
mov
mov
lret
aas
movsb
mov
sarb
inc
int
leave
cmp
and
dec
and
sub
lds
lret
mov
dec
ss
rorl
dec
xor
cmp
mov
inc
mov
mov
enter
and
sub
dec
enter
inc
int
movsl
dec
iret
mov
mov
inc
dec
mov
xor
mov
dec
mov
mov
inc
lret
daa
ret
push
inc
xor
xor
mov
int
xor
int
movsb
inc
inc
mov
aaa
inc
shlb
inc
ds
and
cmpsl
ret
aas
ret
dec
cmpsl
cmp
lds
les
lds
mov
int
mov
mov
cmp
movsl
inc
movsl
inc
lds
mov
xor
dec
xor
mov
iret
mov
dec
cmp
and
ret
and
mov
and
push
mov
xor
dec
lret
leave
daa
mov
and
ds
shlb
inc
inc
inc
and
daa
ret
mov
dec
and
and
and
inc
aas
aaa
movsb
inc
daa
aaa
enter
mov
mov
int
enter
inc
xor
mov
cmp
mov
faddp
and
ror
mov
mov
leave
movsl
shlb
mov
inc
xor
and
dec
mov
xor
mov
mov
mov
dec
xor
mov
mov
mov
daa
es
mov
into
and
daa
test
test
and
aas
cmp
mov
mov
dec
dec
aaa
iret
dec
movsb
mov
xor
xor
inc
mov
shlb
mov
dec
inc
ficoms
push
inc
xor
mov
xor
mov
mov
dec
dec
les
mov
mov
and
sarb
and
mov
test
and
dec
dec
les
and
mov
dec
enter
aas
mov
cmp
cmp
and
cmp
mov
xor
sarb
mov
aaa
and
es
dec
shll
rol
mov
xor
mov
mov
cmp
les
sub
mov
mov
mov
mov
dec
inc
leave
dec
mov
sarb
and
mov
mov
mov
fidivrs
mov
dec
leave
shll
roll
and
mov
pop
ret
push
mov
sub
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
and
mov
sub
mov
imul
mov
xor
jmp
hlt
sbb
cs
push
in
sti
xchg
jns
dec
add
repz
sarb
cmp
and
push
iret
mov
mov
lret
mov
and
mov
into
ficoms
fidivs
dec
mov
mov
mov
mov
test
mov
cmpsl
and
inc
xor
movsl
mov
xor
inc
ss
mov
es
mov
shlb
test
xor
iret
cmp
enter
mov
fisubrs
xor
mov
and
mov
enter
shlb
mov
mov
mov
mov
mov
sub
mov
mov
xor
xor
and
daa
mov
mov
mov
into
mov
inc
aaa
mov
cmp
shlb
es
movsl
xor
mov
mov
xor
lret
and
mov
shll
mov
mov
mov
mov
and
dec
cmpsl
daa
shll
leave
mov
mov
int
mov
inc
inc
and
dec
mov
dec
mov
dec
aaa
mov
dec
mov
enter
enter
int
mov
leave
cmp
inc
cmp
mov
ds
mov
push
mov
mov
mov
sub
les
and
aas
movsl
movsb
inc
int
movsb
mov
push
sarl
ss
inc
iret
mov
mov
dec
mov
inc
mov
mov
mov
mov
dec
inc
lret
ret
mov
mov
leave
into
inc
enter
fisubrs
mov
fimuls
mov
es
xor
mov
xor
push
into
fidivs
dec
mov
iret
lret
dec
inc
les
cmpsl
cmp
inc
shll
mov
inc
and
mov
and
dec
into
mov
push
and
mov
mov
mov
xor
mov
dec
mov
mov
and
cmp
xor
inc
inc
inc
mov
push
into
leave
mov
test
aas
daa
mov
xor
and
leave
mov
daa
movsb
dec
mov
lds
fimuls
cmp
cmp
mov
mov
and
mov
xor
xor
xor
push
mov
xor
movl
movl
jmp
sbb
in
fs
push
or
push
subb
ljmp
xor
xor
mov
movsb
cmp
xor
daa
cmp
cmp
xor
into
int
es
cmp
and
xor
xor
dec
cmpsl
mov
xor
dec
cmpsl
cmp
mov
push
mov
dec
mov
and
iret
movsl
int
movsb
movsb
sarb
cmp
xor
mov
cmp
mov
mov
test
ds
inc
xor
sub
mov
aas
and
aas
mov
mov
rol
mov
and
mov
dec
fidivs
mov
lret
inc
cmp
mov
mov
xor
mov
mov
mov
xor
mov
movsb
mov
cmpsl
xor
mov
leave
mov
mov
mov
and
xor
aaa
mov
mov
daa
dec
movsb
xor
and
mov
xor
xor
mov
aas
and
cmp
and
inc
and
xor
inc
mov
mov
lret
aas
mov
mov
test
inc
mov
cmp
dec
ret
xor
shrl
xor
les
inc
ds
mov
mov
ds
and
leave
lds
and
and
inc
and
sub
xor
mov
push
dec
dec
cmpsl
aaa
inc
xor
inc
and
push
ds
ret
mov
xor
int
cmpsl
into
ret
dec
mov
and
dec
inc
xor
mov
mov
dec
mov
and
test
cmp
mov
ror
mov
xor
and
aaa
inc
int
mov
push
lret
dec
cmp
aas
mov
ror
es
rolb
mov
test
sarb
and
and
mov
mov
dec
mov
and
mov
mov
mov
movsb
xor
leave
sarb
movsb
mov
xor
xor
shlb
mov
xor
mov
xor
ret
ds
and
mov
dec
inc
and
mov
ret
mov
mov
and
aas
roll
and
ds
sarl
mov
dec
daa
mov
mov
mov
inc
movsb
xor
movsl
cmpsl
xor
mov
iret
into
mov
xor
mov
mov
movl
mov
mov
imul
sub
mov
imul
or
mov
jmp
add
xchg
in
mov
fs
sbb
sub
or
repz
movsl
shlb
dec
xor
dec
cmp
mov
shll
les
inc
and
mov
ss
test
and
test
les
rol
dec
cmp
inc
aaa
movsl
xor
sub
into
rorb
rol
mov
movsl
lds
and
movsb
and
lds
leave
mov
mov
cmp
inc
inc
xor
leave
daa
into
dec
xor
movsl
mov
xor
xor
mov
dec
and
xor
enter
mov
dec
mov
les
les
inc
iret
mov
and
cmpsl
sub
mov
fidivs
dec
mov
daa
inc
mov
mov
mov
mov
mov
xor
cmp
mov
mov
lds
into
mov
sub
and
lret
movsl
dec
les
movsb
dec
and
mov
enter
inc
leave
mov
fidivrs
les
cmpsl
mov
fidivrs
mov
dec
mov
mov
and
cmpsl
daa
mov
mov
fmulp
mov
cmp
cmp
daa
push
xor
dec
mov
cmpsl
dec
push
sub
mov
xor
shrl
ret
push
into
dec
mov
inc
inc
inc
and
inc
xor
push
les
mov
mov
into
cmp
push
mov
xor
int
dec
test
into
into
movsl
dec
test
fidivs
mov
mov
mov
lds
xor
aas
and
inc
int
mov
inc
lret
test
inc
xor
cmpsl
cmp
lds
les
mov
aas
les
mov
ss
aas
int
dec
and
and
mov
cmp
into
daa
cmp
inc
dec
inc
mov
ret
mov
test
fidivrs
fidivrs
xor
dec
mov
mov
test
dec
leave
mov
movsb
mov
and
mov
mov
xor
mov
shlb
into
dec
inc
test
mov
leave
mov
xor
movsb
dec
leave
mov
lds
inc
sarb
mov
sub
ret
mov
mov
lds
int
ret
and
xor
daa
cmp
test
mov
ss
cmp
mov
aas
and
mov
and
dec
mov
mov
es
enter
push
cmpsl
mov
dec
mov
les
movsb
xor
xor
and
or
mov
sub
sub
mov
mov
mov
mov
mov
mov
mov
mov
add
and
mov
imul
xor
push
pop
div
mov
jmp
pop
mov
lds
add
add
insl
nop
jae
add
jmp
inc
and
mov
mov
mov
mov
and
mov
and
mov
cmp
iret
lds
xor
lds
dec
mov
inc
into
dec
mov
and
dec
mov
mov
mov
enter
shlb
inc
mov
daa
ret
push
mov
mov
sub
xor
cmp
mov
push
fidivrs
and
ss
movsl
xor
mov
xor
test
and
inc
dec
dec
cmp
daa
xor
push
mov
mov
iret
aas
dec
and
sub
iret
dec
ret
cmpsl
mov
int
mov
mov
mov
mov
leave
cmpsl
xor
into
shll
mov
mov
inc
mov
dec
aaa
dec
enter
and
aas
cmpsl
and
shlb
xor
mov
xor
xor
leave
ret
mov
dec
inc
ds
ds
mov
lret
lret
mov
cmpsl
ret
and
daa
xor
ds
mov
test
daa
lret
mov
xor
inc
and
mov
ss
inc
xor
xor
sub
cmp
xor
push
mov
inc
dec
dec
xor
inc
xor
xor
xor
shrb
int
and
dec
dec
inc
cmp
shlb
xor
shlb
movsb
daa
ds
inc
mov
mov
xor
dec
inc
shll
movsb
les
inc
mov
inc
mov
fisubs
and
mov
shlb
ror
mov
inc
inc
dec
into
mov
int
dec
inc
lret
mov
dec
dec
movsb
mov
mov
and
mov
daa
into
cmp
cmp
lret
xor
ds
cmp
daa
mov
mov
mov
xor
mov
cmpsl
aas
mov
dec
and
and
mov
leave
sarb
xor
xor
mov
rcr
test
cmp
dec
cmp
daa
push
cmp
cmp
ret
inc
inc
test
rorb
ret
into
dec
les
mov
cmp
dec
mov
daa
inc
aas
enter
lret
into
mov
shlb
mov
xor
ret
lret
dec
enter
xor
es
dec
mov
add
add
mov
jmp
adc
sahf
lock
jl
or
subl
addl
ljmp
mov
dec
inc
lds
ss
and
dec
mov
enter
rorb
sub
movsl
mov
ss
xor
mov
and
mov
inc
es
mov
xor
ret
enter
push
xor
movsb
mov
sarb
mov
push
ret
inc
inc
and
daa
ds
inc
cmpsl
and
movsl
int
xor
mov
cmpsl
int
shlb
xor
enter
mov
cmp
mov
dec
mov
dec
and
xor
inc
iret
rolb
cmp
mov
xor
cmp
xor
inc
movsb
inc
ds
mov
mov
mov
and
mov
mov
mov
test
dec
mov
mov
es
inc
mov
lds
mov
mov
iret
daa
and
xor
mov
cmpsl
lds
ss
and
mov
lret
enter
and
ds
es
mov
and
xor
sub
mov
aas
inc
cmp
lds
mov
inc
mov
into
mov
fisubs
inc
leave
inc
mov
xor
and
mov
and
mov
mov
mov
ret
mov
mov
dec
mov
lds
xor
cmp
lret
xor
into
xor
mov
ds
into
dec
mov
xor
mov
ror
mov
movsl
dec
and
movsb
inc
and
and
cmp
sarl
dec
mov
mov
int
mov
and
inc
aaa
iret
es
dec
inc
mov
daa
dec
and
lret
lds
into
daa
mov
mov
xor
xor
mov
mov
mov
and
ret
mov
lret
mov
daa
mov
cmp
mov
inc
xor
shlb
rcl
xor
and
rolb
xor
ret
into
shlb
int
inc
xor
cmp
cmp
mov
mov
mov
mov
ss
mov
ret
inc
leave
int
xor
xor
int
mov
dec
dec
mov
daa
xor
fidivs
les
lds
and
inc
cmp
dec
enter
add
add
add
mov
imul
mov
sub
mov
mov
imul
mov
imul
xor
and
add
jmp
insb
mov
andb
divl
jmp
dec
or
jmp
leave
mov
xor
mov
rol
mov
es
aaa
cmp
ds
and
into
lds
mov
es
xor
dec
shlb
mov
mov
es
inc
xor
mov
xor
ret
dec
fisubs
and
inc
and
and
mov
inc
xor
mov
shll
iret
mov
mov
ret
mov
enter
into
inc
aas
int
shlb
xor
shlb
inc
and
dec
inc
movsb
movsb
dec
mov
inc
inc
lret
dec
xor
movsb
mov
mov
push
aas
mov
mov
inc
cmp
and
xor
movsl
rorb
mov
dec
cmp
movsl
daa
fisubs
xor
mov
les
mov
mov
mov
les
sarb
mov
int
lret
mov
mov
inc
mov
dec
xor
mov
lret
ss
dec
mov
into
aaa
inc
dec
and
mov
daa
int
and
into
into
mov
test
inc
xor
cmpsl
inc
inc
int
mov
mov
dec
movsl
inc
dec
and
mov
xor
ss
xor
and
dec
mov
inc
xor
cmp
mov
into
and
dec
dec
aaa
enter
lret
movsl
lds
dec
ds
enter
cmp
xor
ss
movsb
inc
dec
inc
int
dec
movsb
ret
shll
xor
dec
cmp
cmp
mov
mov
dec
dec
inc
enter
cmp
sarb
xor
int
enter
mov
dec
lds
inc
movsl
mov
es
daa
enter
cmp
dec
cmpsl
sarb
lret
mov
sarb
mov
test
mov
test
cmp
aas
dec
enter
mov
daa
movsl
cmp
fidivs
mov
movsb
cmp
int
and
xor
mov
aas
mov
inc
iret
xor
into
mov
ss
mov
mov
xor
movsb
mov
sub
ficoms
aaa
xor
leave
and
mov
mov
cmp
inc
inc
daa
mov
movsl
dec
test
dec
fimuls
mov
cmp
xor
sub
daa
dec
xor
and
movsl
mov
and
iret
leave
cmpsl
sub
and
leave
dec
mov
and
and
repnz
jbe
jmp
sub
lea
fs
and
add
loopne
pop
in
mov
repz
inc
cmpsl
into
rol
xor
and
xor
lds
mov
and
int
inc
test
cmp
dec
mov
les
cmp
int
sarb
es
inc
mov
mov
xor
mov
mov
xor
mov
shlb
inc
mov
les
inc
xor
cmp
leave
mov
xor
mov
sub
rol
mov
dec
cmpsl
dec
and
cmp
mov
cmpsl
cmp
ss
fiadds
dec
mov
sarb
aaa
ds
mov
xor
daa
shlb
fisubs
leave
mov
xor
leave
xor
and
movsl
les
movsl
daa
dec
mov
mov
inc
xor
mov
sub
test
mov
mov
daa
mov
xor
mov
mov
mov
mov
leave
mov
mov
leave
mov
xor
sub
enter
cmpsl
mov
mov
mov
lds
and
and
dec
mov
mov
int
cmpsl
ss
sub
xor
movsb
mov
mov
mov
xor
sub
inc
dec
and
mov
mov
xor
daa
mov
mov
and
cmpsl
movsb
sub
iret
shll
mov
aaa
and
dec
xor
leave
inc
inc
aaa
cmp
fiadds
inc
mov
and
push
inc
cmp
aaa
mov
mov
iret
ret
xor
dec
aaa
xor
les
and
mov
mov
es
mov
inc
cmpsl
iret
ret
cmp
cmpsl
dec
mov
xor
leave
movsb
xor
cmp
inc
mov
xor
cmp
xor
and
xor
es
and
dec
mov
leave
rcll
xor
cmpsl
lret
into
mov
aaa
inc
dec
sub
sarb
movsb
enter
aas
ret
and
and
aas
xor
mov
mov
mov
ret
mov
and
inc
push
mov
mov
aaa
mov
cmp
xor
cmpsl
dec
daa
dec
mov
cmp
xor
mov
mov
dec
xor
lret
mov
and
mov
lds
mov
sub
movsb
mov
and
leave
ret
leave
les
pop
leave
ret
push
mov
sub
xor
push
cmpl
jb
inc
mov
mov
add
jmp
push
push
call
push
push
mov
incl
mov
xor
shrd
and
shr
mov
mov
xor
cmpl
jge
xor
jmp
push
push
push
push
pushl
call
mov
xor
or
mov
mov
shl
mov
add
mov
mov
mov
mov
and
shrd
movl
xor
movzbl
adc
mov
shr
sbbl
mov
add
mov
adc
xor
or
xor
xor
mov
adc
mov
cmpl
jl
xor
xor
mov
sub
sub
jmp
pushl
push
push
call
mov
mov
jmp
and
and
and
hlt
mov
adc
jmp
ss
mov
test
aas
leave
inc
xor
ret
and
ficoms
xor
and
mov
mov
xor
dec
mov
mov
cmpsl
aaa
and
mov
cmp
faddp
es
mov
cmp
sarb
cmpsl
les
and
mov
ret
xor
mov
daa
mov
enter
aaa
aaa
dec
inc
cmp
dec
push
les
ss
mov
ret
and
push
test
push
sub
mov
mov
mov
inc
enter
dec
inc
mov
mov
xor
inc
dec
dec
xor
mov
mov
and
fidivs
mov
ret
cmp
and
xor
xor
aas
lds
mov
leave
xor
daa
dec
ss
into
ret
cmp
mov
ds
inc
lds
xor
movsb
es
faddp
mov
inc
mov
inc
mov
mov
and
xor
and
enter
mov
lret
mov
ror
mov
mov
les
mov
leave
cmp
dec
movsb
shlb
inc
inc
mov
cmp
xor
aaa
mov
cmp
inc
ror
mov
int
xor
mov
xor
mov
and
movsl
lds
mov
and
inc
movsb
inc
cmp
es
test
mov
mov
dec
mov
mov
rorb
mov
mov
inc
test
aas
es
lds
mov
movsl
mov
cmp
aaa
sub
dec
mov
aas
dec
leave
xor
and
mov
dec
les
leave
mov
enter
fidivrs
mov
ss
leave
dec
mov
push
sarb
dec
cmp
ds
dec
xor
dec
inc
mov
into
sub
cmp
aas
shll
mov
push
shlb
enter
dec
mov
xor
inc
mov
aaa
xor
cmpsl
mov
mov
daa
fidivrs
aaa
cmp
mov
mov
cmp
xor
shll
test
cmp
mov
inc
add
mov
add
xor
mov
cmpl
jge
jmp
pushl
pushl
push
call
mov
jmp
inc
enter
jb
lods
in
add
sub
adc
push
ljmp
push
enter
xor
mov
mov
cmp
and
mov
dec
shlb
int
xor
inc
mov
xor
daa
xor
cmpsl
xor
inc
xor
sub
push
leave
into
cmp
lret
and
iret
mov
mov
mov
inc
and
lds
inc
inc
faddp
mov
sarb
mov
les
sub
fidivrs
dec
xor
mov
cmp
dec
movsl
cmp
and
and
push
daa
mov
faddp
inc
xor
mov
mov
mov
into
rol
and
cmp
cmp
mov
fimuls
inc
ss
and
shll
inc
xor
cmp
lds
mov
sub
and
mov
dec
mov
xor
enter
iret
inc
mov
movsb
cmp
sub
int
fisubs
aas
xor
mov
xor
ret
push
leave
test
and
ret
movsl
mov
and
and
mov
mov
aaa
mov
and
and
fidivs
int
lds
push
mov
mov
movsl
mov
and
mov
dec
movsl
rolb
movsl
cmp
enter
mov
lds
mov
dec
cmp
fmulp
es
mov
les
and
dec
es
fiadds
and
fidivs
xor
xor
leave
daa
mov
dec
shll
cmp
mov
aaa
inc
and
cmp
and
sub
mov
cmp
dec
mov
mov
mov
dec
movsb
dec
inc
into
rolb
movsb
cmp
aaa
lds
dec
ror
into
mov
mov
mov
shlb
dec
cmp
sarb
xor
iret
rol
xor
xor
mov
cmp
ret
xor
movsb
and
mov
cmp
xor
mov
movsb
and
movsb
xor
cmp
xor
mov
push
int
lret
inc
enter
cmp
dec
dec
dec
mov
and
dec
aas
cmpsl
and
mov
aas
lret
mov
int
test
inc
ss
and
mov
push
or
loope
xor
shld
cmpl
jg
jmp
push
call
shl
mov
mov
mov
mov
xor
xor
movl
movl
movl
movl
movl
mov
movl
cmp
movl
jne
movl
cmp
je
mov
adc
mov
mov
mov
cmpl
jbe
jmp
push
push
push
pushl
call
mov
xor
shld
shl
mov
mov
xor
subl
xor
movl
mov
movl
cmp
movl
jne
cmp
je
sbb
mov
mov
mov
sub
mov
adc
push
adcl
pop
adcl
xor
sub
shl
xor
mov
xor
shr
or
mov
and
mov
add
mov
xor
jmp
adc
cmp
inc
pop
stc
add
pushf
scas
hlt
pop
lea
push
ljmp
and
dec
dec
inc
rcll
mov
movsb
push
xor
inc
cmpsl
ret
aaa
mov
mov
mov
leave
and
int
ds
leave
and
and
mov
cmp
xor
and
cmp
es
xor
enter
mov
mov
enter
mov
mov
lds
mov
aaa
sub
dec
lret
mov
dec
mov
push
cmpsl
inc
mov
into
aas
and
mov
fidivrs
mov
lret
xor
mov
inc
cmpsl
les
shrb
xor
mov
ret
into
and
leave
daa
mov
mov
mov
lret
int
xor
and
mov
daa
inc
les
dec
dec
lds
leave
movsb
fidivs
xor
dec
mov
aaa
mov
inc
inc
mov
dec
aaa
inc
aas
mov
ret
ror
int
dec
inc
mov
into
dec
shlb
and
inc
cmp
ret
inc
mov
inc
ret
es
inc
ss
mov
xor
and
movsb
push
movsb
xor
inc
movsl
les
mov
es
mov
inc
xor
mov
into
enter
inc
cmpsl
and
dec
shll
inc
inc
ret
ds
mov
dec
sub
mov
mov
mov
push
sub
xor
xor
mov
mov
cmp
xor
xor
test
ds
xor
fidivs
lds
inc
inc
ret
movsb
mov
cmp
lret
test
movsb
sub
and
mov
cmpsl
cmp
ds
mov
mov
inc
dec
fisubs
dec
lds
les
push
mov
cmp
xor
dec
les
movsb
mov
cmp
dec
shll
es
mov
inc
mov
mov
movsb
mov
and
shll
inc
rorl
mov
mov
mov
aaa
int
cmp
xor
test
mov
dec
movsb
shlb
int
inc
and
sub
xor
mov
rorb
cmp
fisubs
daa
mov
mov
iret
mov
lret
sub
shlb
xor
mov
mov
mov
xor
xor
mov
and
mov
sub
jmp
mov
xchg
js
adc
repnz
push
ljmp
lds
inc
mov
cmp
xor
les
into
and
cmp
les
mov
sarb
movsb
and
shlb
mov
mov
cmpsl
ds
aaa
leave
and
xor
ror
xor
enter
test
xor
push
int
mov
sub
xor
iret
and
xor
lds
xor
cmp
mov
inc
mov
inc
xor
cmp
rorl
mov
faddp
dec
mov
and
and
ret
movsb
shlb
cmp
dec
mov
cmpsl
movsl
inc
shll
daa
and
ss
aaa
les
mov
mov
test
lret
ds
inc
leave
xor
mov
rorl
rol
inc
iret
mov
ss
aaa
mov
into
and
int
ror
ss
cmp
enter
and
xor
mov
cmp
xor
inc
mov
inc
and
inc
inc
iret
xor
les
aas
enter
mov
cmp
mov
push
ss
mov
mov
and
xor
mov
dec
cmpsl
xor
shlb
mov
mov
ss
daa
mov
test
sarb
cmp
inc
and
mov
mov
mov
leave
aaa
mov
inc
ss
lds
ss
xor
and
shll
inc
mov
mov
aaa
ror
fisubs
lret
and
movsb
inc
mov
ds
mov
dec
dec
sub
dec
inc
cmp
dec
mov
mov
mov
mov
and
mov
dec
mov
fisubrs
dec
mov
es
into
lds
xor
mov
dec
movsl
mov
mov
mov
es
dec
les
xor
xor
inc
mov
es
into
push
leave
dec
mov
inc
and
and
shll
faddp
faddp
xor
xor
mov
dec
xor
inc
aas
and
mov
and
xor
mov
mov
and
and
mov
mov
mov
ss
xor
mov
int
daa
mov
iret
and
and
mov
shr
add
add
call
shr
jle
js
xor
imul
mov
cmpsl
mov
mov
es
dec
inc
mov
es
cmp
test
into
xor
mov
xor
xor
dec
push
cmp
xor
and
and
mov
mov
xor
mov
les
dec
mov
and
mov
test
xor
es
enter
ss
mov
mov
dec
dec
cmp
inc
mov
mov
mov
and
into
cmpsl
mov
push
and
xor
into
xor
lret
mov
xor
daa
inc
cmp
inc
inc
iret
mov
cmpsl
and
mov
sarl
aas
mov
xor
cmp
and
enter
and
mov
int
movl
and
shlb
inc
and
enter
xor
mov
and
daa
daa
fmulp
inc
rclb
mov
movsb
and
dec
mov
and
cmp
aas
mov
into
iret
mov
movsl
mov
into
mov
ror
enter
movsb
dec
mov
mov
enter
test
aaa
mov
xor
inc
mov
mov
and
sub
xor
and
dec
iret
ds
iret
mov
fidivs
mov
xor
dec
cmp
dec
movsl
dec
movsb
movsl
fisubrs
ror
movsl
mov
cmp
inc
dec
xor
dec
and
shlb
cmpsl
test
xor
ss
mov
push
and
cmp
and
xor
leave
lds
mov
shlb
mov
mov
cmp
mov
push
mov
into
and
and
mov
shlb
movsl
mov
daa
mov
inc
cmp
xor
mov
inc
mov
daa
cmp
into
mov
mov
fidivs
mov
xor
mov
xor
sarl
dec
dec
xor
cmpsl
and
ss
dec
and
fidivs
mov
iret
xor
xor
inc
inc
ror
rclb
cmp
mov
cmp
ret
and
mov
mov
rol
ror
movsb
and
mov
iret
cmp
mov
add
sbbl
mov
movl
lea
cmpl
jge
andl
jmp
push
call
mov
mov
jmp
adc
js
popa
sub
hlt
jle
je
pusha
jno
jmp
les
mov
xor
and
iret
movsl
inc
sarb
int
aas
mov
mov
inc
ret
movsb
fmulp
cmp
dec
and
daa
inc
lds
inc
push
mov
fidivs
inc
dec
ror
test
mov
es
cmpsl
dec
xor
lds
iret
mov
test
leave
aas
cmp
dec
dec
cmpsl
test
dec
cmp
inc
ds
cmp
mov
mov
dec
cmp
aas
es
ret
sub
ds
mov
rcl
xor
aaa
movsl
dec
dec
mov
inc
mov
cmpsl
dec
push
mov
and
mov
xor
enter
xor
mov
and
shll
and
inc
and
test
mov
mov
dec
aas
dec
push
shlb
lret
xor
cmpsl
leave
inc
cmp
sarb
mov
inc
mov
mov
mov
xor
iret
ret
and
mov
mov
movsb
dec
mov
and
shrb
mov
inc
ds
ss
mov
movsl
xor
movsb
mov
inc
dec
es
fidivrs
push
es
test
movsb
mov
dec
and
dec
xor
dec
inc
dec
mov
aas
and
mov
mov
mov
shrb
inc
test
mov
and
xor
es
and
mov
cmpsl
aaa
inc
int
test
leave
aaa
aas
mov
ss
and
aaa
int
rcll
dec
ret
xor
and
mov
inc
and
mov
mov
leave
mov
inc
inc
cmpsl
inc
inc
xor
daa
aaa
inc
xor
mov
dec
and
xor
mov
lret
and
enter
and
push
and
xor
mov
cmp
and
inc
mov
int
mov
cmp
xor
mov
dec
iret
inc
mov
sub
inc
xor
mov
mov
cmpsl
sub
xor
lret
mov
lret
daa
aaa
mov
cmp
mov
xor
mov
sub
movsb
cmp
xor
xor
mov
xor
xor
mov
dec
cmp
mov
iret
movsl
ret
mov
mov
rorl
movsl
iret
xor
cmp
mov
mov
xor
and
dec
mov
xor
xor
shr
adcl
shl
subl
or
andl
mov
jmp
lods
jbe
adc
dec
push
stc
cli
add
jb
jmp
ss
mov
xor
and
xor
sub
ret
cmp
dec
ds
mov
cmp
lds
mov
aas
daa
push
ds
iret
daa
dec
mov
mov
enter
cmp
mov
xor
mov
shll
cmp
mov
and
mov
mov
lds
ss
mov
mov
and
enter
fisubs
mov
es
test
inc
xor
push
and
daa
ss
mov
cmp
movl
mov
inc
xor
mov
es
lret
fisubs
mov
cmp
mov
shrb
xor
inc
int
into
int
test
xor
inc
shrl
daa
inc
inc
test
aaa
xor
and
lret
and
cmpsl
aaa
ds
mov
test
cmp
daa
shlb
dec
and
mov
into
daa
movsl
aaa
inc
mov
shlb
mov
mov
mov
and
lret
iret
fidivs
mov
movsl
aaa
xor
int
mov
aas
mov
mov
lds
mov
rorb
test
ret
xor
lds
sub
and
fisubs
movsb
mov
and
xor
int
and
mov
mov
enter
inc
xor
and
mov
mov
inc
dec
mov
mov
shll
test
iret
and
mov
int
and
shrb
cmp
xor
mov
and
mov
mov
int
aaa
mov
fidivs
ss
mov
mov
mov
daa
inc
mov
aaa
rorl
rol
and
into
mov
sub
and
cmp
xor
mov
sarb
movsl
lds
mov
dec
shlb
inc
cmp
test
lds
mov
sub
xor
and
mov
and
mov
test
ret
cmp
sub
ret
inc
cmp
mov
movl
sub
mov
and
jmp
add
in
in
sarb
mov
sbb
push
ljmp
push
mov
dec
leave
sarl
movsl
mov
dec
ret
les
and
xor
xor
ret
cmp
and
les
mov
leave
xor
iret
mov
and
lret
daa
ror
mov
and
mov
lds
shrl
mov
cmpsl
inc
sub
mov
movsl
mov
mov
xor
mov
mov
cmp
movsl
mov
sub
dec
inc
sub
mov
mov
test
xor
aaa
push
shll
mov
ds
dec
and
rorl
shlb
mov
mov
dec
and
cmp
iret
sub
shlb
mov
dec
mov
dec
xor
enter
inc
mov
into
and
into
mov
cmp
cmp
mov
inc
mov
inc
xor
into
cmp
test
ss
and
ss
mov
aas
into
and
mov
dec
mov
movsb
cmp
inc
mov
xor
into
ret
mov
inc
xor
inc
iret
and
mov
dec
push
es
cmp
aas
inc
mov
mov
xor
inc
mov
xor
inc
into
dec
ss
mov
inc
aas
aaa
mov
mov
cmp
mov
and
sarb
ds
dec
mov
and
mov
lds
mov
movsl
movsl
daa
ds
ret
ss
dec
dec
xor
and
rol
mov
dec
dec
mov
cmpsl
and
xor
and
and
dec
cmp
mov
les
cmp
rorb
movl
inc
mov
fidivrs
mov
mov
leave
dec
leave
daa
cmp
xor
movsl
int
cmp
les
xor
xor
test
iret
inc
xor
mov
inc
inc
xor
ss
enter
test
fidivs
mov
inc
mov
mov
and
shlb
mov
cmp
aaa
cmp
inc
fidivrs
xor
mov
mov
mov
mov
and
mov
cmp
inc
daa
and
mov
mov
dec
aas
mov
mov
and
movsl
movsl
movsb
xor
cmp
call
mov
inc
add
add
xor
andl
shr
xorl
jmp
popf
sbb
popa
insb
bound
hlt
add
pop
jne
jmp
xor
int
inc
mov
dec
push
cmp
inc
shlb
iret
rorb
and
es
movsl
inc
mov
ror
xor
lds
leave
sub
cmp
shlb
inc
mov
and
mov
dec
shlb
mov
sub
les
xor
enter
mov
and
inc
inc
daa
cmpsl
fisubs
dec
mov
and
mov
es
inc
into
and
aaa
ret
and
int
mov
mov
leave
mov
inc
mov
sarl
cmpsl
cmp
xor
mov
cmp
mov
movsl
daa
mov
mov
xor
lret
ss
int
mov
mov
cmp
ror
movsl
mov
mov
daa
mov
and
xor
leave
mov
rol
xor
int
faddp
ds
les
and
mov
aas
xor
les
es
xor
mov
rorb
mov
lds
test
ss
xor
xor
mov
and
cmpsl
mov
ds
mov
sub
shlb
lds
dec
mov
sarb
iret
inc
dec
movsl
and
inc
shll
mov
aas
test
iret
movsb
cmp
xor
inc
xor
mov
mov
aas
ret
dec
mov
cmp
sub
mov
mov
mov
mov
aaa
enter
int
movsl
and
mov
les
xor
mov
fimuls
push
enter
mov
mov
dec
xor
inc
mov
inc
xor
rclb
mov
shlb
cmp
cmpsl
dec
cmpsl
ss
mov
es
xor
cmpsl
mov
mov
lret
daa
mov
mov
sarl
enter
inc
dec
shlb
les
mov
xor
mov
movsl
mov
dec
inc
mov
inc
xor
push
push
dec
xor
dec
into
lds
and
mov
leave
xor
movsb
sarl
int
inc
dec
and
and
dec
cmp
mov
dec
movsl
ret
dec
orl
jmp
xor
mov
jl
scas
push
mov
arpl
hlt
jbe
jmp
xor
mov
aas
xor
mov
cmpsl
aaa
mov
shlb
aas
mov
push
xor
fidivrs
xor
test
dec
ret
aas
into
aaa
inc
iret
dec
xor
and
aaa
rolb
leave
aaa
enter
mov
rorl
mov
into
inc
ds
xor
mov
inc
xor
xor
test
int
mov
ss
mov
fidivs
inc
ret
ds
mov
mov
les
mov
and
mov
inc
movsb
mov
mov
into
and
cmp
xor
dec
mov
movl
and
enter
inc
shll
and
shll
sub
mov
aaa
enter
ret
ss
mov
test
xor
inc
mov
xor
mov
mov
int
xor
mov
int
and
sarb
mov
inc
and
dec
les
ss
xor
xor
mov
mov
les
enter
inc
lret
shlb
inc
dec
mov
iret
mov
and
into
lds
ds
ret
mov
cmp
les
mov
into
aaa
and
rcl
ficoms
les
shlb
xor
cmp
aaa
leave
xor
aas
dec
mov
movsb
sub
lret
movsl
movsb
push
mov
inc
inc
cmp
inc
cmpsl
mov
leave
mov
sub
aas
xor
iret
mov
mov
and
shlb
ds
leave
daa
sub
cmpsl
and
int
mov
cmpsl
inc
and
mov
xor
push
mov
dec
les
dec
mov
mov
and
mov
mov
dec
into
rolb
and
mov
dec
inc
ret
cmp
mov
mov
push
cmp
ret
inc
aaa
sub
mov
dec
aaa
inc
daa
sarl
mov
cmpsl
cmp
and
and
dec
test
mov
ss
sub
dec
mov
push
dec
mov
lret
test
ss
dec
es
ss
daa
roll
and
es
fisubs
and
les
int
mov
xor
into
into
inc
xor
fmulp
xor
subl
push
lea
xorl
push
xorl
lea
addl
push
adcl
call
mov
notl
mov
sbb
xor
xor
movzbl
sub
shr
shl
or
push
lea
xor
or
mov
sub
or
push
mov
adc
mov
mov
mov
shrd
shr
cmpl
jbe
movzwl
or
mov
jmp
push
call
mov
mov
xor
xor
sbbl
or
xorl
lea
sbbl
push
addl
shl
call
add
mov
xor
mov
addl
xor
xor
shr
xor
shl
incl
or
push
cmpl
jb
sub
jmp
push
pushl
push
pushl
push
pushl
pushl
call
lea
push
mov
mov
shrd
shr
sbbl
mov
mov
xor
orl
xor
sbbl
or
lea
push
shl
notl
call
mov
mov
xor
xor
shl
cmpl
jge
adc
jmp
pushl
push
push
push
pushl
call
shr
or
push
lea
push
mov
mov
cmpl
jg
notl
jmp
push
call
shrd
shr
mov
mov
jmp
imul
clc
mov
insb
cmp
js
and
ljmp
lds
mov
dec
fidivrs
aaa
mov
int
and
cmp
mov
ret
mov
mov
mov
push
sub
mov
cmp
and
es
mov
and
xor
inc
aaa
mov
dec
mov
test
enter
cmp
mov
mov
movsl
rol
xor
inc
inc
iret
mov
xor
movsl
inc
lds
and
ss
rolb
daa
into
es
inc
and
xor
movsl
dec
and
and
and
mov
and
mov
xor
fidivs
xor
sarb
xor
mov
inc
inc
mov
dec
and
inc
and
dec
cmp
lret
mov
dec
dec
les
daa
es
lret
inc
leave
mov
lret
aaa
shlb
test
and
mov
aaa
daa
inc
ret
mov
and
inc
and
shlb
sub
mov
inc
inc
mov
mov
lds
mov
mov
mov
and
inc
dec
aaa
xor
xor
lret
mov
mov
mov
mov
inc
inc
mov
xor
cmp
test
xor
and
push
test
cmp
and
rol
inc
les
and
mov
cmp
mov
ds
sub
mov
inc
ss
leave
inc
fidivrs
int
and
xor
xor
mov
xor
dec
mov
mov
dec
inc
es
mov
cmp
xor
es
cmp
mov
and
shll
rol
iret
es
xor
mov
aas
movsb
sub
enter
and
dec
and
cmpsl
dec
iret
mov
cmp
cmpsl
xor
les
dec
mov
movsl
daa
cmpsl
daa
lds
cmpsl
ret
xor
dec
movsb
iret
and
dec
inc
ror
mov
int
dec
and
mov
leave
mov
cmpsl
ret
ret
mov
xor
cmp
inc
movsb
mov
ss
mov
cmpsl
and
cmpsl
dec
mov
inc
mov
fidivrs
and
daa
and
inc
daa
test
lds
and
rolb
movsl
mov
mov
xor
inc
mov
mov
dec
xor
shlb
adc
or
shl
movzbl
sub
mov
mov
adc
shrd
cmpl
jge
andl
jmp
push
push
call
shr
mov
mov
xor
xor
or
adcl
add
lea
xorl
push
xorl
shl
call
mov
addl
mov
and
xor
add
shl
sbb
xor
shr
cmpl
jl
jmp
push
push
push
pushl
call
or
push
jmp
lret
pop
outsl
sbb
xchg
flds
js
mov
imul
iret
aaa
xor
mov
xor
xor
inc
cmp
mov
rol
movsb
mov
inc
mov
dec
cmp
shll
xor
mov
test
xor
les
mov
inc
inc
dec
mov
push
mov
xor
into
and
into
movsb
shlb
cmp
dec
dec
xor
aaa
cmp
inc
mov
cmp
mov
cmp
ret
xor
inc
mov
test
mov
mov
lds
inc
mov
int
push
cmpsl
dec
mov
shll
mov
cmp
mov
mov
aaa
xor
enter
mov
inc
mov
leave
shlb
into
aas
mov
mov
mov
xor
dec
shlb
sub
mov
dec
and
push
enter
les
shll
mov
mov
inc
sub
aaa
xor
dec
dec
mov
movsb
dec
mov
mov
int
mov
ds
iret
and
ret
dec
xor
les
rol
leave
and
mov
dec
shll
and
and
dec
ss
mov
movsl
ss
cmp
cmpsl
mov
inc
mov
shlb
mov
xor
shlb
and
mov
mov
cmp
es
cmp
inc
int
mov
shlb
ret
inc
inc
xor
es
lret
leave
dec
movsl
cmp
and
int
mov
mov
les
aas
mov
daa
les
inc
dec
mov
mov
mov
mov
mov
and
and
enter
daa
dec
cmpsl
mov
xor
mov
mov
mov
and
xor
mov
and
and
xor
inc
dec
xor
xor
cmp
fisubs
inc
sarb
and
enter
xor
inc
dec
mov
inc
sub
mov
mov
les
inc
and
aaa
mov
dec
mov
inc
into
test
cmp
cmp
enter
sub
lds
mov
and
int
lret
mov
inc
aaa
sub
mov
mov
xor
dec
dec
test
dec
lea
push
mov
mov
shrd
shr
or
mov
cmpl
jg
adc
subl
jmp
pushl
pushl
push
pushl
call
mov
jmp
xor
insb
insb
cmp
fwait
scas
hlt
pop
mov
jae
jp
jmp
iret
int
xor
inc
inc
inc
xor
dec
and
and
into
vaddsubpd
dec
inc
dec
mov
xor
enter
ss
mov
shlb
mov
mov
enter
mov
and
mov
xor
inc
and
enter
es
cmp
cmp
xor
xor
lds
inc
mov
inc
es
inc
dec
xor
inc
aaa
mov
xor
cmp
mov
leave
mov
dec
dec
cmpsl
mov
mov
aaa
aas
aas
dec
and
test
inc
shlb
mov
dec
mov
cmp
and
mov
inc
test
into
xor
xor
and
aaa
xor
mov
aas
mov
test
ret
inc
into
cmpsl
dec
mov
mov
inc
inc
mov
daa
dec
dec
inc
int
xor
and
xor
iret
mov
dec
fidivs
aaa
xor
sub
fisubs
and
test
cmpsl
and
mov
mov
dec
xor
and
inc
sub
aaa
inc
mov
and
mov
mov
mov
enter
mov
cmp
lret
cmp
lds
movsb
lret
aas
shlb
sarb
mov
dec
lret
test
lret
ds
mov
mov
and
and
shll
mov
inc
leave
mov
mov
and
mov
mov
mov
xor
test
mov
es
int
push
sarb
ret
xor
cmp
lds
ss
push
inc
xor
push
lds
cmpsl
movsb
mov
mov
cmp
mov
ss
cmp
mov
xor
iret
mov
daa
inc
mov
aas
les
mov
cmp
daa
mov
mov
mov
cmp
leave
mov
mov
lds
movsl
mov
inc
inc
mov
daa
mov
aaa
cmpsl
movsb
cmp
mov
and
cmpsl
and
shlb
mov
mov
mov
mov
dec
xor
dec
ret
fidivrs
xor
shl
mov
xor
cmpl
jle
jmp
pushl
push
call
or
mov
shrd
jmp
jp
cmp
push
jnp
in
imull
add
push
ljmp
mov
inc
test
es
cmp
cmp
sarl
aas
mov
shlb
cmp
ss
and
mov
sub
mov
movsb
mov
xor
daa
mov
mov
mov
inc
xor
aaa
mov
roll
mov
faddp
and
xor
roll
int
and
xor
dec
xor
xor
mov
dec
xor
mov
cmp
movsl
test
aas
mov
inc
inc
shll
xor
xor
cmpsl
inc
dec
dec
mov
aas
and
and
dec
sarb
and
iret
ror
mov
es
and
and
dec
movsb
int
mov
cmp
ret
xor
xor
inc
mov
dec
aas
lret
lret
mov
xor
mov
movsl
test
rolb
mov
mov
inc
ret
movsl
sub
mov
sub
xor
and
mov
dec
and
enter
inc
shll
cmp
test
aaa
daa
mov
into
ds
es
leave
and
ds
enter
sub
mov
ds
aas
movsl
shll
xor
test
ss
and
lret
cmpsl
mov
mov
movsb
dec
mov
mov
xor
and
shlb
inc
movsl
ret
mov
dec
lret
ror
xor
xor
aas
push
mov
inc
movsb
into
cmp
sub
ret
mov
xor
and
xor
mov
mov
into
mov
dec
int
sarl
daa
shlb
sarb
mov
inc
mov
mov
mov
mov
enter
mov
ret
inc
and
dec
mov
xor
cmp
ret
cmp
mov
ret
rol
mov
xor
cmp
and
iret
mov
mov
ds
int
sarb
ds
xor
cmp
mov
and
mov
shll
iret
lds
mov
and
lds
xor
inc
mov
cmp
movsb
lds
dec
dec
shr
mov
mov
xor
xor
decl
or
cmpl
jl
jmp
push
push
push
push
pushl
pushl
call
shl
add
mov
mov
shrd
shr
xor
mov
or
mov
xor
movl
or
xorl
add
addl
lea
andl
jmp
xchg
dec
dec
andb
lahf
jns
cmpl
imul
inc
mov
cmp
ds
inc
int
iret
rol
inc
xor
and
movsb
cmpsl
movsl
aaa
movsl
enter
sub
iret
inc
mov
fidivrs
ret
mov
dec
inc
leave
inc
aaa
int
mov
mov
and
and
mov
mov
mov
enter
mov
mov
push
mov
and
int
movsb
les
inc
dec
inc
mov
mov
sub
inc
shlb
inc
xor
dec
into
enter
mov
mov
ss
cmp
mov
inc
aaa
mov
fidivs
ret
mov
inc
cmpsl
sub
and
xor
ds
aas
and
inc
lds
and
mov
xor
dec
inc
rol
rol
shrb
mov
cmp
inc
int
and
dec
and
les
dec
xor
cmp
inc
test
mov
dec
sub
mov
xor
dec
movsl
enter
mov
mov
inc
inc
mov
mov
mov
iret
mov
mov
push
mov
les
dec
lds
inc
and
xor
enter
xor
movsl
xor
xor
dec
inc
and
into
sub
ret
mov
inc
inc
mov
iret
mov
aaa
dec
and
and
xor
and
mov
and
ds
movsl
dec
iret
mov
dec
push
dec
movsb
inc
mov
aaa
mov
leave
mov
mov
and
sub
dec
and
leave
into
sub
mov
mov
les
and
cmpsl
mov
ss
inc
cmp
mov
inc
mov
enter
inc
fidivrs
and
inc
mov
dec
daa
cmp
and
fidivs
ds
push
mov
ror
mov
dec
and
dec
xor
mov
les
xor
cmp
mov
cmp
enter
leave
ss
mov
movsb
ss
dec
lret
test
sub
enter
mov
mov
enter
sarl
mov
mov
dec
int
dec
test
push
mov
inc
ss
mov
ss
and
mov
push
mov
adcl
shl
call
addl
mov
sbbl
mov
or
xor
addl
xor
shr
or
shl
cmpl
jl
sub
and
jmp
pushl
call
or
mov
lea
push
mov
mov
shrd
shr
cmpl
jge
mov
xor
or
sub
or
jmp
push
call
mov
mov
xor
xor
adcl
or
orl
jmp
fwait
push
or
in
fcoml
jnp
out
push
jle
jmp
daa
daa
cmp
sub
xor
daa
int
cmp
iret
xor
cmp
xor
fmulp
movsb
dec
mov
enter
ds
mov
mov
xor
mov
sarl
ss
dec
and
leave
inc
mov
aas
ss
int
cmp
inc
and
mov
xor
dec
daa
push
mov
xor
and
sub
mov
ds
leave
mov
mov
aas
mov
xor
ret
mov
enter
xor
ror
dec
dec
mov
cmp
cmp
mov
fidivrs
mov
ss
test
test
ds
inc
mov
sarb
inc
leave
mov
ret
and
inc
enter
mov
dec
mov
dec
push
mov
dec
shlb
dec
mov
mov
inc
mov
les
and
inc
lret
sub
mov
dec
mov
cmp
xor
mov
iret
lret
dec
inc
inc
movsl
mov
push
cmpsl
inc
xor
cmp
xor
leave
fisubs
cmp
mov
and
lret
inc
dec
and
shlb
lds
mov
movsb
daa
faddp
ds
ret
inc
aaa
mov
inc
mov
ret
sub
mov
dec
movsl
inc
push
into
mov
fidivrs
mov
dec
inc
and
xor
dec
and
ror
mov
xor
iret
xor
xor
cmp
ss
and
xor
xor
dec
ds
xor
rol
mov
sub
into
iret
xor
and
daa
and
mov
mov
mov
daa
and
lds
xor
mov
int
daa
dec
cmpsl
mov
inc
inc
into
xor
inc
shll
lds
mov
mov
int
ss
mov
cmp
xor
ret
inc
movsb
and
xor
into
aas
into
es
and
into
shlb
xor
mov
mov
iret
dec
xor
daa
mov
iret
and
inc
sub
enter
iret
inc
mov
mov
mov
fmulp
xor
mov
inc
push
mov
jmp
and
ret
insb
in
jle
pavgw
xchg
push
imul
aas
and
sub
shll
movsb
inc
sub
mov
sub
and
mov
push
les
dec
lret
mov
movsl
aas
movsb
xor
inc
mov
les
mov
inc
aas
mov
xor
mov
rorl
inc
cmp
sub
mov
cmp
shlb
mov
iret
xor
shll
movsb
mov
es
sarb
cmp
lret
ds
into
dec
shll
cmp
cmp
es
and
dec
aas
dec
dec
into
movsl
ds
and
shlb
sub
into
dec
vmovaps
dec
xor
xor
mov
mov
mov
lret
mov
dec
and
and
ret
dec
ss
daa
inc
mov
cmp
mov
mov
iret
movsl
aaa
mov
mov
mov
lds
dec
dec
dec
mov
mov
cmp
es
sarl
movsl
dec
ds
push
aas
mov
cmpsl
inc
and
mov
mov
mov
ds
xor
mov
leave
dec
les
rol
ror
inc
sub
enter
cmp
mov
mov
inc
movsl
mov
xor
mov
inc
movsb
inc
xor
mov
dec
ds
and
mov
inc
and
dec
xor
shlb
inc
xor
dec
inc
into
xor
mov
rorl
aas
mov
and
mov
int
dec
mov
dec
lds
lds
shlb
dec
cmp
ret
cmp
xor
shll
daa
mov
movsb
cmp
xor
push
daa
dec
iret
test
mov
movsl
les
and
shrl
ret
into
mov
and
leave
inc
sub
ds
daa
mov
xor
test
cmpsl
mov
es
ds
mov
mov
ror
ror
and
mov
aas
mov
and
inc
mov
movsl
sub
xor
mov
dec
mov
aaa
mov
les
movsb
push
ret
les
xor
daa
mov
mov
mov
inc
fidivs
inc
shlb
mov
and
ss
test
add
ret
add
loopw
insb
aam
push
inc
jb
sbbl
push
ljmp
les
mov
inc
and
int
inc
mov
and
mov
lret
rol
iret
rorb
sub
mov
and
aas
mov
cmpsl
push
cmp
dec
push
mov
mov
xor
xor
rcl
mov
movsb
shll
inc
mov
cmpsl
cmpsl
shlb
lds
mov
mov
ds
dec
les
int
aaa
mov
mov
cmp
dec
cmpsl
movsb
movsl
mov
mov
mov
cmpsl
enter
mov
inc
les
mov
mov
mov
fiadds
daa
mov
xor
sub
daa
xor
and
mov
ss
int
sub
iret
rorl
mov
xor
inc
and
leave
cmpsl
movsb
and
leave
and
cmp
mov
mov
shll
mov
and
mov
mov
dec
movsb
mov
dec
ret
dec
movsb
mov
inc
shlb
inc
mov
and
rorb
xor
mov
inc
les
les
movsl
inc
and
les
and
dec
cmp
mov
cmp
mov
cmp
xor
rol
inc
movsb
mov
ds
mov
and
mov
cmp
leave
mov
ror
and
into
mov
xor
roll
dec
les
push
ds
sarl
inc
rcr
iret
mov
and
xor
iret
enter
leave
cmp
cmp
xor
aaa
int
dec
mov
fisubs
dec
mov
sub
ret
cmp
mov
inc
mov
mov
cmp
inc
sarl
mov
inc
inc
iret
test
dec
dec
iret
int
inc
les
mov
and
inc
inc
mov
cmp
aas
and
mov
mov
push
iret
sub
cmp
sub
inc
cmpsl
movsb
xor
push
les
xor
inc
dec
mov
inc
inc
mov
mov
dec
cmp
leave
lds
mov
inc
inc
dec
mov
and
mov
inc
aas
and
shlb
xor
dec
into
shlb
xor
cmpsl
int
test
lret
aaa
mov
sub
push
sarb
and
sub
leave
mov
lds
orl
pushl
andl
jmp
aaa
stos
cld
jl
sub
js
in
notl
sti
jae
bound
push
ljmp
mov
xor
mov
mov
mov
mov
dec
and
and
mov
lret
mov
cmp
aas
and
sub
and
mov
mov
daa
inc
iret
mov
lret
inc
cmp
and
test
mov
mov
push
mov
test
and
mov
enter
iret
inc
xor
sub
es
lret
movsb
inc
lret
inc
mov
cmp
fisubs
push
push
mov
mov
inc
movsl
and
inc
movsb
cmp
mov
mov
and
xor
mov
rclb
inc
mov
mov
inc
inc
mov
daa
push
inc
inc
mov
mov
and
mov
ds
int
inc
int
mov
xor
test
into
int
shlb
ds
ss
into
inc
xor
mov
mov
mov
xor
mov
mov
mov
ss
inc
ds
and
movl
mov
into
mov
shlb
shlb
ss
inc
and
sub
xor
mov
mov
inc
inc
mov
sub
xor
rol
dec
leave
leave
mov
movsb
dec
lds
dec
mov
fisubs
movsl
rorb
and
inc
mov
cmp
int
mov
movsl
ds
push
xor
cmp
int
inc
inc
dec
mov
fmulp
iret
xor
inc
and
inc
test
mov
movsl
ss
mov
mov
cmp
sub
mov
mov
ss
dec
enter
mov
shlb
lret
mov
into
dec
aas
aas
leave
and
dec
aas
xor
mov
lret
daa
aas
rol
dec
mov
test
into
inc
es
lret
dec
mov
mov
dec
lret
es
mov
xor
sub
shlb
cmp
and
aaa
shll
cmp
mov
dec
dec
aas
mov
int
inc
shlb
mov
dec
dec
push
mov
mov
dec
into
dec
mov
xor
cmpsl
mov
and
dec
and
cmp
mov
mov
dec
ret
dec
fidivs
ds
aaa
les
int
dec
and
and
xor
mov
inc
enter
ds
cmp
enter
int
loope
xorl
call
adc
lea
push
mov
sub
mov
cmpl
jle
add
andl
jmp
push
call
shrd
jmp
in
cs
sub
insb
mov
dec
data16
call
jmp
mov
mov
sub
mov
cmpsl
aas
and
xor
mov
shlb
and
mov
mov
xor
mov
mov
ret
sarl
les
sarl
mov
dec
mov
cmp
sarb
dec
push
and
lret
lds
iret
mov
sub
and
int
daa
dec
xor
and
aaa
mov
movsl
ror
mov
and
movsb
sarl
mov
xor
cmp
mov
movsb
mov
and
xor
aaa
dec
movsl
xor
dec
mov
xor
dec
daa
inc
cmp
sub
dec
mov
dec
and
xor
ret
mov
inc
daa
movl
cmpsl
dec
mov
xor
shlb
xor
faddp
xor
mov
mov
mov
sub
mov
lds
mov
dec
mov
movsl
mov
xor
xor
and
xor
cmp
aas
push
mov
xor
and
es
mov
mov
dec
movsb
mov
test
xor
mov
into
cmp
lret
les
mov
mov
dec
movsb
daa
shlb
movsb
daa
mov
movl
xor
mov
dec
daa
push
leave
shlb
mov
mov
and
ss
mov
mov
and
and
and
daa
test
mov
rol
rolb
mov
xor
xor
dec
mov
lds
mov
mov
cmp
inc
lret
aas
cmpsl
aaa
ds
and
mov
dec
mov
sub
ss
int
mov
mov
mov
mov
movsb
mov
lds
mov
enter
and
dec
mov
les
mov
and
sarl
movl
aas
aaa
ret
cmp
xor
ret
dec
shlb
mov
into
movsl
cmp
fiadds
test
ret
aaa
xor
cmp
ss
movsl
push
xor
cmp
cmpsl
daa
mov
and
mov
shlb
shr
mov
mov
xor
xor
addl
or
push
sbb
mov
push
pushl
shl
call
mov
mov
jmp
aad
nop
jae
je
sti
push
xchg
mov
dec
test
push
ljmp
movsb
mov
mov
ret
mov
mov
ror
mov
inc
mov
lds
cmp
and
and
mov
lds
mov
and
test
xor
aas
xor
xor
cmpsl
mov
test
mov
dec
and
leave
inc
shlb
xor
mov
mov
les
mov
cmpsl
aaa
mov
iret
mov
xor
leave
cmp
xor
ret
movsb
mov
es
and
dec
and
and
cmp
cmp
mov
movsl
mov
aas
inc
mov
daa
iret
enter
mov
dec
ds
mov
rorb
mov
dec
mov
roll
inc
into
dec
and
dec
and
cmpsl
test
movsb
mov
lds
movsb
and
ss
sarl
mov
iret
enter
xor
dec
mov
iret
les
ds
cmpsl
mov
inc
cmp
movsl
dec
cmp
dec
sub
cmpsl
es
and
xor
xor
inc
mov
and
mov
rcr
test
mov
inc
fidivrs
dec
and
inc
mov
into
lret
enter
mov
and
cmp
mov
inc
aas
dec
es
cmp
mov
xor
xor
mov
mov
mov
cmp
mov
inc
xor
mov
movsb
mov
and
lret
dec
inc
mov
lds
es
leave
ret
cmp
inc
movl
into
mov
movsl
int
mov
dec
push
fisubs
dec
es
enter
cmpsl
and
aaa
inc
mov
leave
mov
xor
mov
mov
mov
and
lret
and
rolb
dec
mov
and
rclb
shrb
lret
aas
inc
dec
mov
mov
shrb
and
dec
dec
mov
inc
mov
aaa
mov
dec
mov
lret
shrl
mov
mov
movsb
enter
enter
and
dec
mov
cmp
push
cmpsl
mov
movsb
movsl
and
into
aaa
enter
xor
roll
into
cmp
mov
mov
mov
jmp
orl
and
mov
fistl
pop
adc
jmp
ret
shrl
xor
iret
es
sub
movsl
cmp
xor
mov
and
aaa
les
inc
mov
mov
xor
dec
xor
mov
les
inc
and
dec
lds
mov
mov
and
cmpsl
dec
movsl
cmpsl
ror
int
cmp
xor
cmp
mov
xor
movsb
xor
inc
mov
es
int
ret
and
mov
es
dec
dec
inc
inc
and
mov
and
push
inc
rolb
xor
mov
push
ror
xor
inc
iret
enter
es
and
cmp
mov
shll
cmp
ret
mov
shll
inc
cmpsl
daa
push
mov
mov
mov
mov
mov
enter
mov
mov
dec
mov
and
mov
mov
ret
cmpsl
enter
fidivrs
mov
movsl
and
xor
push
lds
mov
dec
dec
mov
aaa
leave
mov
mov
mov
dec
shlb
shll
mov
mov
mov
xor
movsb
les
and
into
and
lds
xor
xor
mov
xor
lds
enter
lds
movsl
xor
dec
movsb
test
dec
ror
mov
xor
mov
mov
ds
aas
leave
test
aas
xor
rol
leave
inc
es
mov
ret
mov
mov
mov
cmp
dec
xor
cmp
and
inc
int
mov
test
mov
es
xor
sarl
inc
cmp
mov
mov
sub
xor
daa
xor
inc
dec
lret
cmp
rolb
aas
xor
inc
xor
and
mov
sarb
cmp
mov
mov
ss
dec
and
cmp
inc
aas
mov
sarl
cmp
xor
lds
mov
test
lds
xor
shrb
shlb
fisubs
ret
mov
lret
leave
int
fidivs
fisubs
xor
mov
es
inc
inc
ficoms
dec
mov
cmp
mov
movsb
mov
mov
mov
mov
jmp
mov
ljmp
jns
xchg
hlt
mov
sti
jae
in
imul
inc
test
and
int
mov
mov
inc
cmp
cmpsl
mov
mov
mov
mov
xor
push
xor
dec
aaa
lds
cmp
mov
mov
mov
mov
mov
and
xor
dec
inc
dec
mov
sarb
lret
mov
xor
shll
xor
enter
mov
cmpsl
mov
daa
inc
and
and
mov
fidivs
mov
dec
mov
cmp
mov
inc
lret
and
dec
inc
xor
xor
dec
and
push
cmp
mov
shlb
mov
dec
es
push
mov
and
xor
inc
into
inc
mov
ret
es
dec
into
mov
inc
inc
int
dec
aas
mov
xor
enter
cmpsl
and
push
and
lret
and
and
xor
and
sub
and
dec
cmp
mov
mov
cmp
cmp
inc
mov
mov
aas
ret
mov
mov
mov
cmp
cmp
mov
dec
mov
mov
mov
push
and
and
and
daa
mov
and
mov
dec
test
xor
iret
inc
rol
cmp
and
shlb
movsb
shlb
ss
lds
cmp
lds
dec
mov
cmp
dec
aaa
inc
mov
les
mov
ds
ss
inc
les
dec
ss
inc
xor
inc
test
inc
movsl
and
ds
sub
cmp
ss
inc
ret
les
xor
mov
dec
mov
sub
dec
daa
mov
and
cmp
cmp
mov
iret
into
inc
mov
mov
mov
aaa
ds
es
dec
aaa
dec
leave
cmpsl
movsl
and
mov
inc
mov
les
dec
rorl
cmpsl
iret
xor
sub
and
enter
iret
iret
shlb
mov
mov
mov
leave
xor
lds
and
daa
mov
iret
xor
mov
mov
mov
xor
movsl
mov
cmp
mov
ss
aaa
inc
aaa
xor
cmp
add
xor
cmp
je
movl
mov
movl
mov
movl
mov
movl
mov
jmp
stos
xor
bound
mov
xchg
push
imul
jmp
dec
aaa
es
push
mov
mov
cmp
cmp
test
shrl
cmpsl
int
shlb
inc
dec
rcr
cmp
cmp
dec
cmp
cmp
xor
inc
mov
dec
cmpsl
xor
iret
xor
mov
cmpsl
lret
and
mov
les
cmp
leave
mov
mov
xor
xor
es
xor
inc
dec
mov
test
leave
and
xor
inc
mov
int
xor
mov
mov
and
xor
and
inc
mov
shll
int
and
leave
xor
movsb
mov
and
cmp
sarb
ficoms
dec
aaa
ret
enter
ret
mov
mov
inc
mov
cmp
mov
inc
and
and
dec
es
mov
sub
inc
ret
and
inc
mov
and
iret
inc
mov
mov
rolb
movl
mov
cmpsl
into
es
dec
and
cmp
aas
mov
mov
dec
mov
ret
iret
inc
lret
ss
fmulp
mov
xor
sub
inc
ss
cmp
and
sub
and
mov
xor
les
iret
inc
test
daa
mov
mov
mov
leave
mov
sub
dec
and
xor
sarb
dec
and
mov
xor
mov
dec
mov
inc
mov
mov
and
mov
movsb
xor
dec
dec
mov
cmp
mov
dec
dec
inc
lret
mov
cmp
enter
inc
mov
mov
inc
ds
mov
mov
mov
xor
int
mov
inc
and
mov
mov
inc
mov
cmp
movsb
dec
sarb
shrl
aas
xor
movl
mov
mov
xor
movsb
into
dec
dec
aaa
xor
mov
mov
into
shll
and
mov
into
push
cmpsl
ds
aas
les
mov
ss
rol
ret
mov
xor
mov
inc
xor
inc
mov
inc
mov
xor
shld
shl
xor
mov
mov
mov
xor
inc
xor
mov
mov
mov
movzwl
mov
cltd
idiv
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
imul
mov
and
mov
and
mov
imul
mov
sub
mov
cmp
jmp
cmc
aas
inc
pop
or
cmc
jmp
sub
pop
stos
jnp
testl
ljmp
dec
mov
dec
enter
inc
leave
mov
ds
leave
leave
cmp
faddp
faddp
leave
mov
push
mov
roll
mov
sub
shlb
fidivs
faddp
mov
inc
xor
ret
mov
aaa
ss
ds
mov
test
test
mov
iret
cmp
aas
aaa
dec
mov
cmp
dec
leave
movsb
ds
xor
shll
fidivrs
lret
ss
mov
enter
and
xor
and
and
into
push
aas
lds
xor
int
mov
test
lret
shll
cmp
ret
sub
cmp
mov
push
mov
ret
and
mov
daa
lds
mov
dec
and
lds
and
shlb
mov
fiadds
and
shrb
int
shlb
mov
mov
daa
shlb
ret
inc
lret
les
inc
cmp
shll
and
mov
ds
enter
dec
into
inc
inc
sub
mov
mov
mov
lds
aaa
dec
lds
and
cmpsl
xor
cmp
dec
leave
fidivrs
mov
leave
leave
and
ss
xor
lret
mov
rorl
and
dec
mov
inc
mov
xor
inc
ss
inc
inc
mov
mov
ret
inc
ret
rolb
mov
inc
push
xor
int
ds
ds
mov
shlb
les
xor
lret
rorb
ds
inc
and
mov
aas
sub
iret
lds
aaa
and
ds
cmpsl
dec
ss
es
and
rol
dec
and
and
cmpsl
dec
mov
mov
enter
into
fidivs
mov
and
xor
int
mov
sub
and
mov
dec
cmpsl
dec
xor
aaa
iret
mov
test
and
into
inc
push
ss
movsb
xor
dec
fmulp
lret
mov
mov
dec
aas
les
xor
mov
xor
sub
mov
cmp
daa
test
mov
add
mov
dec
mov
lods
enter
add
mov
shlb
or
shl
mov
mov
mov
mov
mov
xor
xor
shrd
mov
shll
xorl
xor
or
mov
shr
or
xor
cmp
ja
jae
mov
add
mov
mov
movb
movb
movb
movb
mov
movzbl
mov
xor
mov
imul
movzbl
xor
and
add
mov
movb
movb
mov
mov
and
or
imul
mov
cmp
ja
movb
movb
movb
mov
mov
and
or
add
jmp
push
jge
xchg
mov
pusha
jmp
adc
lods
hlt
and
ljmp
sarl
mov
les
dec
xor
cmp
cmp
fiadds
shrl
inc
xor
and
mov
xor
mov
shll
ror
mov
and
xor
mov
and
int
mov
mov
dec
xor
sarl
sub
inc
aas
shlb
and
push
inc
mov
xor
mov
mov
mov
mov
xor
cmp
shlb
dec
movsb
inc
and
and
xor
mov
les
cmp
mov
mov
movsb
cmp
aaa
ror
aas
fisubs
mov
mov
mov
daa
ss
mov
cmp
ss
movsb
ss
cmp
dec
dec
mov
mov
mov
inc
mov
shlb
leave
and
into
inc
mov
daa
lret
dec
int
mov
mov
dec
inc
ret
push
shll
mov
push
ss
shlb
push
dec
and
int
xor
and
dec
mov
cmp
xor
push
dec
xor
les
leave
mov
xor
faddp
dec
mov
mov
xor
sarl
leave
mov
cmp
and
cmp
cmp
mov
ss
dec
cmp
and
and
lds
and
dec
push
aas
int
mov
movsb
sub
mov
sub
leave
ss
cmp
lds
shlb
and
mov
rol
aas
push
shlb
faddp
mov
test
mov
sub
leave
ds
and
mov
xor
inc
xor
inc
mov
xor
ss
xor
ss
enter
dec
mov
mov
mov
mov
ret
lret
lret
enter
mov
ret
dec
inc
and
dec
movsb
dec
mov
mov
lret
mov
mov
mov
mov
into
dec
mov
dec
dec
mov
cmpsl
ss
dec
inc
sub
mov
movsb
inc
and
mov
es
cmpsl
mov
ss
cmp
and
mov
int
mov
inc
cmp
dec
icebp
movzbl
cltd
movzbl
idiv
mov
jmp
jl
shrb
out
std
jbe
or
insl
ljmp
dec
and
dec
xor
lret
xor
es
into
cmpsl
and
les
inc
and
mov
ds
xor
mov
mov
enter
mov
dec
ror
xor
and
ret
aaa
inc
mov
mov
mov
mov
mov
lds
mov
int
es
movsl
inc
and
ret
sub
inc
aaa
shlb
cmp
dec
cmp
inc
cmp
cmp
cmp
mov
mov
mov
cmp
mov
xor
inc
mov
xor
cmp
and
xor
xor
inc
int
dec
dec
inc
dec
inc
mov
int
and
mov
mov
xor
dec
xor
mov
enter
and
lret
inc
inc
inc
test
cmp
movb
movb
movb
mov
mov
xor
sub
mov
movzbl
movzbl
cltd
idiv
mov
cmp
jb
mov
mov
shrd
shr
mov
mov
xor
xor
or
sub
shl
mov
mov
shrd
shr
mov
mov
xor
xor
shl
mov
or
ror
jmp
mov
mov
mov
mov
mov
shrd
shr
mov
mov
xor
xor
or
add
mov
shl
mov
mov
mov
xor
xor
shrd
mov
shll
xorl
xor
or
mov
shr
or
xor
cmp
jb
ja
cmp
jb
decl
jne
mov
mov
mov
shrd
shr
mov
mov
xor
xor
or
push
add
push
lea
push
shl
call
mov
mov
shrd
shr
mov
mov
xor
xor
or
add
push
push
mov
shl
mov
shrd
shr
mov
mov
xor
xor
or
add
push
shl
call
push
lea
push
mov
mov
shrd
shr
mov
mov
xor
xor
or
add
push
shl
call
mov
mov
shrd
shr
mov
mov
pop
xor
xor
pop
shl
or
pop
leave
ret
mov
cmpl
jg
jmp
pushl
call
mov
or
mov
jne
mov
mul
ret
push
cmpl
jbe
jmp
pushl
push
pushl
push
pushl
pushl
push
call
mul
mov
mov
mull
add
mov
mul
add
pop
ret
push
mov
sub
push
push
movl
movl
xor
inc
mov
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
movl
movl
mov
mov
mov
xor
add
xor
imul
mov
div
xor
push
pop
xor
mov
mov
or
xor
mov
imul
or
mov
div
sub
mov
mov
mov
imul
xor
div
mov
mov
sub
or
mov
and
mov
sub
sub
cmp
ja
push
movl
movl
movl
movl
movl
mov
mov
mov
sub
xor
div
mov
push
pop
push
sub
mov
imul
lea
mov
mov
or
xor
div
mov
mov
sub
mov
xor
add
mov
mov
mov
xor
div
mov
mov
lea
xor
div
mov
xor
add
mov
div
xor
mov
mov
or
xor
mov
imul
or
mov
div
pop
sub
mov
mov
mov
imul
xor
div
mov
sub
or
mov
and
mov
sub
sub
cmp
jbe
pop
pop
pop
leave
ret
push
mov
and
sub
push
push
push
xor
pushl
call
cmp
jne
movl
movl
movl
mov
sub
mov
sub
subl
and
mov
andl
sub
mov
movl
movl
movl
mov
cmpl
jl
mov
mov
and
jmp
pushl
push
push
call
mov
xor
mov
sub
adc
mov
movl
xor
movl
cmp
movl
jbe
and
movl
xor
movl
movl
xorl
movl
mov
mov
sbbl
sub
cmpl
jle
jmp
push
push
call
mov
or
mov
imul
mov
sub
sub
xorl
xor
notl
pushl
xorl
pushl
orl
pushl
call
cmpl
jle
jmp
pushl
call
movl
movl
movl
movl
movl
mov
mov
and
xorl
or
xor
div
orl
mov
orl
sub
xor
xor
adc
xor
pushl
mov
orl
mov
orl
pushl
sbbl
and
pushl
imul
pushl
adcl
and
sbbl
xor
andl
pushl
pushl
call
pushl
call
inc
movl
cmp
jb
mov
xor
mov
andl
mov
andl
mov
movl
movl
andl
mov
call
xor
add
or
lea
cmpl
jl
add
jmp
pushl
push
pushl
push
pushl
call
mov
lea
mov
mov
mov
mov
xor
mov
xor
xor
adcl
shl
movzwl
xor
shr
or
mov
mov
sub
and
mov
mov
cmpl
ja
jmp
pushl
call
lea
mov
mov
mov
mov
shrd
shr
sub
mov
sbb
mov
orl
xor
xor
subl
or
add
mov
subl
push
subl
pushl
addl
lea
sbbl
push
orl
shl
movl
call
lea
orl
push
addl
mov
addl
mov
lea
push
incl
mov
subl
lea
mov
mov
sbbl
mov
negl
push
xorl
call
subl
push
push
pushl
adcl
call
add
mov
cmpl
jb
sbb
jmp
pushl
push
call
mov
mov
mov
shr
shl
or
mov
xor
mov
xor
lea
sbb
mov
lea
cmpl
jge
adcl
inc
jmp
push
pushl
call
mov
mov
sub
lea
xor
movl
cmpl
jle
or
jmp
push
pushl
push
call
movl
movl
mov
sub
mov
and
or
mov
sbbl
sub
cmpl
jge
xorl
incl
jmp
push
call
mov
movl
movl
movl
mov
andl
mov
xor
mov
addl
sub
cmpl
jg
sbb
jmp
pushl
pushl
call
mov
xor
cmp
ja
mov
mov
mov
mov
movzwl
xorl
mov
add
movzwl
sbbl
or
sub
xorl
mov
xor
inc
mov
mov
adcl
mov
xor
mov
mov
mov
andl
mov
subl
movzwl
movzwl
or
negl
mov
adcl
movzwl
cltd
orl
idiv
adcl
mov
and
addl
imul
movl
cmp
movl
je
mov
sub
mov
subl
xor
shld
addl
shl
mov
cmpl
jg
jmp
push
pushl
pushl
call
mov
xor
xor
mov
cmp
jne
cmp
je
not
mov
movl
cmp
je
cmpl
ja
dec
jmp
pushl
push
push
push
push
call
mov
mov
mov
shl
xor
mov
cmpl
jle
or
jmp
push
pushl
pushl
pushl
call
mov
mov
xor
xor
shrd
xor
shr
or
sbbl
or
mov
mov
mov
movl
cltd
cmp
movl
jne
cmp
movl
jne
cmpl
jl
adcl
jmp
push
call
movl
movl
mov
mov
mov
xor
movl
shld
shl
sbbl
mov
cmpl
ja
jmp
push
pushl
pushl
pushl
push
push
pushl
call
mov
xor
xor
mov
cmp
jne
cmp
movl
jne
mov
mov
sub
sub
movl
movl
mov
xor
mov
or
shrd
shr
inc
mov
mov
xor
addl
shl
xorl
xor
sbbl
or
movl
mov
mov
movl
cmp
jne
movb
movb
movzbl
mov
imul
orl
and
subl
mov
subl
imul
cmpl
jl
xor
jmp
pushl
call
and
sub
mov
movb
movb
movb
sub
movb
mov
movzbl
cmpl
jg
jmp
push
pushl
call
mov
cltd
idiv
mov
sub
mov
sub
mov
addl
xor
mov
movl
cmp
je
adc
movl
sub
movl
sub
movl
mov
mov
xor
mov
add
add
mov
andl
xor
movl
div
cmpl
jge
not
andl
jmp
pushl
push
push
pushl
call
xor
mov
sub
div
xor
mov
movl
movl
movl
movl
mov
mov
sub
and
add
mov
div
mov
or
cmp
ja
mov
mov
shrd
shr
mov
mov
xor
xor
or
push
push
push
lea
push
lea
push
shl
call
pushl
pushl
pushl
pushl
call
mov
mov
mov
mov
shrd
shr
shl
xor
mov
xor
or
mov
mov
mov
mov
shrd
xor
mov
shl
shr
mov
xor
or
mov
mov
mov
mov
mov
cmp
jne
mov
mov
mov
cmp
jne
movl
movl
mov
mov
and
sub
xor
and
mov
movl
movl
movl
mov
mov
add
or
xor
add
mov
cmp
jae
lea
push
lea
push
call
cmp
jne
cmp
jne
xor
jmp
mov
mov
mov
mov
add
adc
mov
mov
push
push
lea
push
call
mov
push
pushl
lea
push
call
mov
mov
mov
mov
mov
mov
mov
lea
mov
add
movl
movl
movl
push
movl
mov
mov
push
push
push
call
mov
mov
or
and
mov
or
and
mov
movl
movl
movl
movl
movl
movl
mov
mov
push
push
push
push
call
mov
mov
and
mov
and
mov
push
push
push
push
call
mov
mov
cmp
jne
cmp
je
mov
mov
mov
xor
shld
shl
xor
xor
cmp
jne
cmp
je
mov
mov
mov
mov
xor
xor
shr
shl
or
xor
shld
shl
xor
xor
cmp
jne
cmp
je
mov
cltd
mov
mov
cltd
shld
shr
xor
shl
or
or
mov
mov
xor
xor
mov
cmp
jne
cmp
je
pushl
pushl
mov
mov
pushl
mov
call
mov
mov
mov
mov
push
add
push
lea
push
call
mov
mov
pop
pop
pop
mov
pop
ret
push
mov
sub
cmpl
ja
jmp
pushl
push
push
push
push
pushl
call
push
push
push
movl
movl
mov
add
cmpl
ja
jmp
pushl
push
pushl
push
call
and
shr
add
imul
xor
mov
movl
movl
movzwl
or
mov
xor
shr
cmpl
jb
mov
mov
sub
or
jmp
pushl
push
call
and
mov
and
dec
sub
xor
mov
movl
movl
and
movl
movl
addl
mov
or
and
sub
sub
and
xor
mov
or
xor
xor
mov
and
mov
sub
mov
addl
mov
andl
lea
cmpl
jge
adc
jmp
push
call
mov
movl
movl
mov
xor
push
andl
pop
adcl
div
xor
and
adcl
mov
sbbl
imul
cmpl
jb
xor
jmp
push
call
sub
mov
movl
mov
imul
imul
sub
xor
mov
div
sbbl
mov
sub
mov
and
movl
or
movl
movl
sub
mov
sbb
mov
andl
sub
mov
sbb
imul
orl
xor
mov
div
cmpl
jb
jmp
push
call
mov
sub
sub
mov
movl
movl
mov
or
mov
orl
sub
imul
not
xor
movzbl
adc
mov
imul
cmpl
jge
adc
jmp
pushl
push
pushl
push
push
push
pushl
call
sub
mov
movl
mov
or
sub
cmpl
ja
adcl
adc
jmp
pushl
push
push
call
xor
sub
mov
movl
movl
movzwl
sbb
mov
movl
movl
or
mov
mov
add
sub
cmpl
ja
adc
sbbl
jmp
push
push
call
mov
xor
mov
xor
div
adc
mov
lea
not
mov
movl
mov
xor
mov
movl
cmpl
jg
or
jmp
push
call
movl
movl
movl
movl
mov
add
xor
mov
sub
mov
sub
cmpl
jbe
sbb
jmp
pushl
pushl
push
push
push
call
xor
mov
or
mov
lea
push
subl
call
mov
mov
mov
sbb
xor
sbbl
xor
xor
cmpl
jg
adcl
decl
jmp
push
call
and
lea
mov
movl
movl
mov
mov
sub
imul
movl
movl
cmpl
jl
sbb
jmp
pushl
pushl
call
movl
movl
movl
mov
mov
or
cmpl
jge
jmp
push
pushl
call
sub
imul
mov
lea
mov
mov
mov
cmpl
jl
xor
or
mov
sub
sub
jmp
push
call
imul
or
imul
adc
xor
adc
add
mov
movl
dec
movl
sbbl
movl
movl
mov
or
mov
cmpl
jg
jmp
push
push
pushl
call
mov
xor
xor
mov
call
mov
mov
or
mov
movl
mov
xorl
xor
subl
xor
movl
mov
xorl
call
negl
or
or
andl
mov
mov
orl
xor
xor
mov
addl
call
cmpl
jb
movl
jmp
pushl
push
push
push
pushl
call
mov
mov
mov
mov
xor
xor
mov
or
mov
and
mov
xorl
mov
mov
adcl
call
xor
mov
sbbl
or
xor
mov
or
push
andl
push
andl
push
adcl
push
call
movzbl
mov
cmp
movl
jne
mov
mov
xor
sbbl
xor
sbbl
mov
subl
call
cmpl
ja
sbb
jmp
pushl
push
pushl
pushl
call
mov
mov
mov
mov
xor
xor
andl
mov
addl
call
xorl
or
cmpl
ja
jmp
push
push
push
push
push
push
pushl
call
or
mov
mov
xor
xor
mov
call
mov
sbb
mov
mov
mov
orl
xor
sbbl
xor
mov
mov
mov
call
movl
or
sub
mov
orl
or
push
adcl
push
push
push
call
movl
mov
movl
jmp
jmp
lea
mov
mov
adc
mov
mov
add
movl
mov
addl
xor
shr
mov
cmpl
jge
dec
jmp
push
pushl
call
xor
shl
or
mov
mov
mov
and
mov
and
mov
cmpl
jbe
mov
mov
and
jmp
push
push
push
push
call
mov
xor
xor
mov
xorl
call
xor
mov
mov
mov
or
mov
subl
xor
sbbl
xor
xorl
mov
call
movl
or
or
mov
orl
mov
sbbl
xor
subl
xor
xorl
mov
andl
call
mov
adc
mov
mov
mov
xor
andl
xor
mov
adc
mov
mov
sbbl
mov
orl
mov
xorl
call
mov
andl
or
neg
mov
subl
or
movl
push
andl
push
push
orl
push
sbbl
call
mov
movl
cmp
je
add
mov
mov
andl
xor
xor
orl
mov
sbbl
call
mov
mov
cmpl
jg
mov
add
mov
xor
xor
sub
sub
jmp
pushl
call
mov
orl
mov
xor
sbbl
xor
mov
call
or
cmpl
jle
sbb
mov
mov
or
jmp
pushl
pushl
call
or
mov
imul
add
mov
mov
mov
movl
mov
movl
jmp
movl
jmp
incl
mov
sbb
mov
xor
movl
xor
andl
mov
call
sbb
mov
sub
mov
mov
or
mov
mov
cmpl
jb
or
jmp
pushl
push
push
call
mov
xor
xor
mov
call
or
or
xor
or
add
mov
mov
mov
xorl
xor
xor
subl
mov
negl
call
mov
notl
mov
adc
mov
mov
xor
addl
xor
sbbl
mov
mov
mov
andl
call
or
mov
orl
or
addl
push
push
negl
push
push
call
movl
mov
jmp
notl
mov
mov
mov
adc
mov
xor
addl
xor
mov
xorl
call
mov
xor
mov
mov
mov
andl
xor
orl
xor
negl
mov
negl
call
xorl
or
addl
or
movl
mov
movl
jmp
mov
mov
xor
xor
subl
mov
call
cmpl
jg
xorl
jmp
push
pushl
pushl
push
pushl
call
mov
mov
mov
mov
xor
xor
addl
mov
call
cmpl
jge
orl
jmp
push
pushl
push
call
or
or
mov
mov
mov
xor
add
mov
or
sub
or
xor
subl
add
mov
mov
adc
mov
movl
adcl
movl
movzbl
and
movl
movl
or
movl
sub
movl
movl
movl
cmpl
ja
subl
jmp
pushl
call
movl
mov
mov
sub
mov
xor
adc
div
or
mov
xorl
lea
cmpl
jl
sub
jmp
push
call
mov
add
mov
or
mov
or
and
xor
mov
and
movzbl
sbb
imul
andl
add
not
xor
push
or
pop
sbbl
div
mov
sbb
mov
adc
add
dec
lea
mov
cmpl
jbe
movzwl
adc
andl
jmp
push
call
movl
movl
movl
movl
or
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
or
mov
and
add
mov
lea
mov
add
mov
imul
mov
imul
mov
or
mov
sub
mov
mov
xor
imul
mov
imul
mov
and
imul
mov
mov
add
lea
mov
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
lea
mov
and
mov
lea
mov
lea
mov
sub
mov
sub
xor
mov
mov
xor
mov
xor
add
mov
xor
div
mov
mov
add
lea
mov
andl
jmp
mov
inc
mov
mov
mov
cmp
je
mov
mov
mov
add
mov
mov
mov
mov
mov
movl
movl
movl
movl
lea
mov
mov
movzwl
xor
movzwl
sar
mov
movzwl
xor
movzwl
shl
or
movzwl
mov
mov
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
movzbl
push
lea
push
call
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
add
mov
mov
cmp
je
mov
mov
movzwl
xor
movzwl
sar
mov
mov
movzwl
xor
movzwl
shl
or
movzwl
mov
mov
mov
movzwl
xor
movzwl
sar
mov
mov
movzwl
xor
movzwl
shl
or
mov
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
mov
or
je
lea
mov
mov
xor
mov
call
mov
mov
mov
xor
mov
call
or
or
xor
xor
mov
mov
mov
mov
movsbl
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
movsbl
cmp
je
mov
movsbl
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
movsbl
cmp
je
jmp
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
movsbl
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
movsbl
cmp
jne
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
add
mov
jmp
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
mov
cmpl
je
mov
mov
movzwl
mov
mov
mov
jmp
jmp
cmpl
jne
xor
jmp
mov
add
mov
movl
cmpl
je
cmpl
je
mov
shl
mov
movl
sub
mov
movl
mov
cmp
je
mov
mov
mov
mov
mov
mov
mov
inc
mov
jmp
movl
push
jmp
mov
mov
ret
push
push
movzwl
add
mov
or
movl
jne
cmpl
jl
jmp
push
call
mov
mov
xor
div
mov
mov
div
mov
mov
movl
jmp
or
mov
mov
mov
mov
addl
shr
movl
rcr
sbbl
shr
rcr
or
movl
jne
mov
xor
xor
sub
or
div
mov
mull
mov
mov
mul
add
jb
cmp
ja
jb
cmp
jbe
dec
xor
mov
pop
pop
ret
subl
movl
cmpl
movl
je
add
notl
mov
movl
mov
mov
pop
pop
pop
leave
ret
movl
cmp
jae
cmp
movl
jae
shld
movl
shl
ret
add
mov
addl
xor
orl
and
shl
ret
xor
xor
ret
add
add
add
fwait
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
add
push
mov
add
add
jno
add
jg
add
xchg
mov
add
mov
add
add
add
mov
add
add
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
add
jae
add
xorl
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
jo
inc
jns
gs
fs
inc
gs
outsl
jbe
insb
popa
popa
ja
add
add
insb
imul
imul
imul
imul
imul
add
jb
outsw
jb
outsw
jb
outsw
jb
outsw
jb
outsw
jb
outsw
jb
outsw
jb
outsw
jb
add
add
andb
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
inc
add
inc
add
stos
inc
add
scas
ret
mov
mov
loop
jle
xchg
mov
mov
mov
pusha
mov
mov
js
pop
mov
lods
xor
js
loop
jle
xchg
mov
mov
mov
pusha
mov
mov
js
pop
mov
int
ret
jbe
testb
mov
mov
pushf
mov
mov
in
xor
adc
adc
hlt
and
daa
jb
loopne
js
loopne
jo
pushf
mov
cli
mov
js
pusha
mov
or
adc
hlt
inc
testb
loopne
js
loopne
jo
pushf
mov
mov
js
pusha
mov
sub
adc
hlt
popa
mulb
mov
mov
nop
mov
cli
mov
cmpsb
mov
mov
xor
inc
adc
popa
cmc
xor
mov
nop
mov
hlt
mov
mov
push
js
outsb
mov
insl
xor
adcl
jb
aam
js
nop
mov
fmuls
insb
mov
mov
lea
adcl
adc
jb
aam
js
nop
mov
fimull
insb
mov
pusha
mov
lods
xor
cmc
loope
out
mov
mov
mov
jle
cwtl
mov
js
jb
xor
xor
adc
adc
pop
cmc
and
daa
jo
repnz
stos
mov
mov
sahf
mov
js
outsb
mov
or
adc
inc
jb
add
fsubs
inc
add
test
inc
add
cmpsl
inc
add
test
inc
add
adc
add
stos
inc
add
add
test
inc
add
inc
add
inc
add
loope
sahf
call
stos
inc
add
inc
add
stos
inc
add
stos
inc
add
cmpsl
inc
add
inc
add
stos
inc
add
inc
add
xchg
sahf
in
scas
ja
push
stos
inc
add
inc
add
test
jo
mov
add
mov
push
fistl
add
ja
mov
push
pop
popf
data16
xchg
fsubrl
xchg
sahf
jle
xchg
sahf
jb
xchg
sahf
jbe
xchg
sahf
push
xchg
sahf
outsb
aaa
xchg
sahf
bound
xchg
sahf
data16
xchg
sahf
pop
aaa
xchg
sahf
pop
aaa
xchg
sahf
cmp
xchg
sahf
sub
addl
cmpsl
inc
add
inc
add
jae
ja
sahf
out
es
sahf
fmull
add
enter
imulb
add
and
add
ljmp
add
data16
stos
mov
scas
mov
mov
mov
js
add
mov
mov
stos
mov
mov
js
xchg
mov
mov
mov
js
add
sahf
mov
mov
mov
shr
rorb
shrb
rorb
outsl
rorl
shr
rorl
shrl
rorl
outsl
shrb
shl
shl
shl
shl
sar
sar
sar
sar
shl
shl
shl
shl
shr
mov
nop
out
jo
mov
mul
jbe
shl
dec
dec
test
cmp
ja
mov
aad
out
addr16
push
lock
mov
cmpsb
and
xchg
xorb
and
out
test
outsb
add
fsubs
outsl
arpl
test
inc
add
add
add
je
popa
imul
outsl
outsb
arpl
addr16
insl
jae
jo
outsl
outsb
jns
ja
gs
imul
outsb
gs
data16
bound
popa
jne
jae
js
gs
jo
popa
insb
imul
gs
imul
ja
bound
jns
add
add
push
jne
ja
jns
outsl
insl
jns
outsl
data16
outsl
ja
gs
outsl
outsl
ja
push
push
imul
popa
insb
popa
ja
jne
jo
jae
js
jne
dec
outsl
imul
inc
outsl
outsb
gs
ja
jae
inc
gs
jb
outsb
add
push
gs
insl
jae
popa
data16
add
imul
bound
popa
jno
jae
add
inc
insb
imul
outsl
add
push
jne
fs
je
jne
jne
jns
jb
addr16
insl
jae
jne
ja
outsl
jb
je
jo
jo
fs
outsl
je
gs
insb
gs
insb
jae
popa
bound
jp
jne
arpl
add
gs
popa
imul
jns
add
add
decb
add
add
add
add
add
fists
add
add
add
inc
add
add
pop
int
dec
add
add
dec
lods
add
add
add
add
add
add
lods
add
sbb
add
pop
lods
add
push
lods
add
nop
lods
add
mov
add
add
add
add
icebp
sub
add
sub
add
add
insb
dec
add
fwait
movsb
add
jo
gs
bound
outsl
jne
popa
je
arpl
add
fs
imul
fs
jb
jne
outsb
je
insb
fs
cmp
dec
outsb
arpl
insl
outsb
je
gs
imul
xor
add
fs
outsl
insb
fs
js
inc
xor
inc
gs
popa
insb
jne
inc
js
inc
cmp
gs
outsl
outsb
je
outsb
arpl
imul
popa
insl
popa
outsl
bound
add
ja
popa
jb
jns
jne
imul
popa
insl
gs
outsl
jb
insb
insl
gs
insl
imul
jo
addr16
jae
fs
outsl
add
jbe
outsb
addr16
arpl
jbe
js
jns
arpl
jae
imul
popa
push
jne
jns
popa
jo
jne
add
jo
push
add
gs
jb
jae
popa
jns
popa
jo
outsl
add
jae
fs
jne
bound
popa
outsb
jns
outsl
addr16
popa
gs
gs
imul
popa
add
jae
imul
jo
js
outsl
je
imul
add
fs
imul
popa
jne
jo
addr16
outsb
add
gs
jns
bound
push
gs
jae
outsb
data16
push
je
je
fs
push
bound
gs
inc
jne
gs
outsl
jo
popa
je
gs
add
push
add
outsl
add
jae
je
ja
popa
add
add
jne
add
add
jne
bound
add
jns
popa
add
add
inc
add
bound
jae
add
jne
outsb
add
outsl
add
jae
outsl
add
popa
add
push
add
je
add
insb
add
jbe
push
add
jb
imul
imul
arpl
outsl
add
inc
add
outsl
add
push
outsl
add
popa
add
add
push
add
popa
add
bound
jne
add
insb
add
add
add
add
jne
jb
imul
imul
je
add
outsl
add
jb
popa
add
add
imul
add
je
add
inc
add
je
add
add
jne
add
jo
add
insb
add
jo
jne
jb
add
add
imul
add
adc
jnp
adc
hlt
adc
fsubs
adc
icebp
adc
inc
pop
adc
movsl
push
adc
call
add
add
jb
add
adc
negb
add
adc
push
adc
pop
pop
adc
call
adc
ds
add
dec
adc
outsl
or
add
adc
mov
xor
add
push
adc
jmp
adc
mov
and
add
adc
add
dec
adc
bound
add
jp
add
adc
mov
cmp
adc
fldt
add
dec
adc
and
add
add
xor
add
adc
cli
adc
add
push
add
sbb
add
adc
fsubl
adc
mov
jge
add
aaa
adc
mov
add
insl
adc
jecxz
adc
sbb
adc
lcall
add
adc
dec
xor
add
add
add
adc
jge
adc
ret
add
sub
add
cmp
add
adc
xchg
add
add
movups
xor
adc
xlat
sbb
add
sbb
add
xor
add
pop
adc
imul
push
bound
add
adc
iret
scas
inc
add
scas
inc
add
scas
inc
add
scas
inc
add
scas
inc
add
scas
inc
add
scas
inc
add
scas
inc
add
scas
inc
add
scas
inc
add
scas
inc
add
scas
inc
add
scas
inc
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
cmpsb
add
aas
mov
add
mov
add
add
pop
mov
add
add
addr16
add
cmpsb
add
imul
add
add
add
add
fsubs
add
pop
mov
add
add
fwait
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
add
push
mov
add
add
jno
add
jg
add
xchg
mov
add
mov
add
add
add
mov
add
add
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
add
jae
add
xorl
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
add
outsb
jae
popa
je
dec
gs
popa
add
or
inc
je
popa
arpl
push
dec
outsb
jo
je
adc
gs
jae
inc
inc
add
popa
insb
imul
add
outsb
fs
gs
popa
addr16
js
das
add
je
arpl
gs
imul
add
je
arpl
insb
insb
push
outsl
jae
add
add
je
insb
popa
jae
dec
outsl
outsb
addr16
add
push
gs
arpl
jo
jns
add
add
je
gs
outsl
popa
jb
push
jns
add
arpl
outsl
jo
jo
outsb
jne
add
add
jae
jb
outsb
je
inc
add
add
popa
jb
jb
jbe
add
add
je
gs
je
je
add
add
insb
insb
push
imul
outsl
arpl
sldt
imul
outsl
ja
outsl
push
outsl
jo
add
push
gs
outsb
jne
stos
add
fs
jne
jae
jb
add
inc
push
xor
cs
insb
add
pop
add
je
dec
jae
imul
add
dec
push
inc
push
dec
cs
insb
add
add
popa
jb
push
popa
addr16
add
jne
inc
outsl
outsb
je
popa
insl
imul
add
add
je
imul
jae
mov
inc
gs
gs
dec
bound
arpl
addb
gs
gs
inc
outsl
insb
outsl
jb
add
inc
gs
outsl
outsb
je
popa
je
add
add
insl
outsl
jbe
inc
outsl
outsb
je
gs
jne
arpl
add
dec
xor
cs
insb
add
xor
xor
fs
insb
add
sahf
add
gs
je
dec
jne
gs
add
xchg
add
outsl
bound
inc
outsl
insl
jo
arpl
add
jne
push
gs
jne
arpl
popa
outsb
addr16
addr16
add
cwtl
add
popa
imul
je
jo
gs
bound
arpl
add
add
gs
je
push
gs
outsl
je
push
push
add
iret
add
je
jne
jb
outsb
je
imul
jns
add
and
inc
gs
jbe
jb
popa
jo
gs
gs
insb
je
xor
inc
gs
jne
bound
inc
outsl
jb
popa
je
add
js
inc
gs
imul
popa
je
add
jno
push
jb
inc
outsb
je
jb
jb
je
arpl
push
arpl
outsb
add
push
dec
inc
dec
xor
cs
insb
add
arpl
jae
insb
gs
insb
add
or
rorb
shlb
xor
mov
pop
xchg
sbb
sub
adcl
in
push
repz
cmp
adc
fistps
pop
rorb
mov
and
sarb
cmpsl
pop
xchg
fsubrp
test
or
in
int
in
leave
and
xor
aas
adc
add
fistps
pop
rorb
mov
and
sarb
cmpsl
pop
xchg
fsubrp
add
mov
sub
andl
adc
add
fistps
pop
rorb
shlb
test
shl
mov
pop
xchg
sbb
push
in
add
lret
in
fistl
xchg
cmpsl
mov
pop
or
rorb
mov
and
sarb
cmpsl
pop
xchg
fsubrp
mov
or
in
sub
in
popa
mov
adc
mov
mov
es
or
fldenv
mov
popaw
call
ds
loopne
mov
out
cmp
std
fstp
fldcw
out
cmp
std
fstp
fnstcw
mov
out
dec
je
add
loop
pop
shl
or
cmp
pop
inc
or
cmp
pusha
jne
jae
lea
cmp
cmp
bound
pop
xorb
lahf
es
rorb
cmp
cmp
cmp
imul
push
and
sub
fistl
in
lret
pop
scas
mov
leave
lock
push
sub
pop
cmp
inc
cmp
cmp
cmp
jle
lahf
and
test
xorb
fs
mov
xlat
cmp
mov
rcll
out
popa
xchg
sbb
cmp
cmp
pop
xchg
in
jmp
outsl
mov
lea
cmp
cmp
popa
lock
push
out
popa
out
popa
mov
xchg
in
inc
adc
mov
xchg
mov
adc
sub
add
je
loopne
enter
push
enter
call
out
lock
cmp
fnstsw
mov
mov
fdivs
push
lea
cmp
cmp
cli
cmp
push
lea
cmp
call
cmp
adc
mov
mov
and
xchg
call
popa
cmp
aaa
mov
and
sub
cmp
cmp
lea
cmp
mov
in
out
cmp
popa
cmp
mov
in
int
call
rcl
fidivs
mov
iret
rcl
in
shr
iret
in
repnz
mov
mov
loop
leave
push
lret
xchg
lea
cmp
call
mov
sar
je
ret
pop
pop
dec
add
out
cmp
scas
popa
cmp
call
mov
sar
ret
ret
pop
aas
dec
add
repz
ret
inc
cmp
cmp
xlat
pop
je
add
cmp
popa
xlat
pop
out
xchg
cmp
out
xchg
mov
pop
out
add
out
mov
push
sar
je
add
add
aas
enter
cmp
cmp
rcl
rcl
iret
out
add
out
iret
popa
pusha
push
out
iret
cmp
out
pop
mov
cmp
je
mov
xchg
iret
lret
pusha
std
lret
rorb
add
push
add
cmp
pusha
iret
jge
std
adc
cmp
push
adc
mov
lea
lret
rorb
rol
add
cmp
mov
lea
popa
out
int
iret
pusha
push
mov
add
cmp
or
mov
pop
out
cmp
lahf
and
or
pushf
sub
cmpsl
divl
inc
xchg
xchg
rcrb
xchg
lahf
imull
cmp
je
pop
pop
es
mov
jbe
call
rorb
cmpsl
stc
mov
and
shrb
stos
outsb
cmp
je
add
in
mov
popa
adc
shll
mov
pop
xchg
call
or
sar
aaa
rorb
xchg
mov
xchg
add
roll
test
inc
lret
mov
push
pop
pop
or
je
pop
pop
or
mov
popa
mov
cmpsb
rol
jbe
xchg
shll
mov
shll
cmpsb
shll
movsl
es
or
fidivl
shll
jbe
insb
mov
mov
je
rcr
mov
inc
pop
pop
add
shll
jbe
out
mov
inc
out
popa
pop
pop
add
jmp
cmp
mov
mov
in
test
shlb
lea
in
mul
lea
dec
cmp
mov
fiaddl
xchg
cmp
stc
popa
cmp
dec
or
and
sub
rorb
mov
pop
mov
pop
psrld
ret
test
pushl
pushf
xor
rorl
push
mov
pop
mov
pop
test
pusha
sar
mov
rorb
mov
pop
mov
pop
test
pusha
sar
mov
rorb
mov
pop
mov
pop
test
pusha
sar
mov
rorb
pushf
daa
inc
dec
or
and
ret
inc
ret
rorb
rorb
ret
rorb
rorb
dec
or
enter
dec
or
or
cmp
mov
pop
mov
pop
test
cmp
pushl
stos
rorb
mov
pop
mov
pop
test
cmp
pushl
stos
rorb
dec
or
lock
cmp
std
cmpsb
cmp
cmp
pop
cmp
cmp
imul
cmp
in
cmp
into
cmp
cmp
call
call
call
pop
add
cmp
test
ss
mov
jb
rcl
cmp
xlat
pop
out
imul
xchg
rorl
jb
rcl
in
mov
cmp
cmp
or
mov
add
or
mov
dec
rorb
mov
sub
imul
cmp
cmp
rolb
popa
cmp
mov
sub
call
rolb
popa
cmp
lea
cmp
mov
pop
mov
pop
test
test
rcr
sar
mov
xchg
push
test
sub
sub
mov
mov
sub
mov
lret
mov
sub
pop
sub
cmp
cmp
mov
sub
mov
lret
cmp
cmp
add
cmp
loopne
fildll
call
or
cmp
out
out
cmp
cmp
mov
or
mov
add
cmp
repz
mov
jne
jne
test
or
cmp
out
out
cmp
cmp
mov
or
cmp
cmp
mov
stc
cmp
cmp
pop
mov
jne
jne
mov
sub
popa
cmp
dec
or
pop
out
xor
pop
test
and
pusha
repz
or
cmp
cmp
out
cmp
cmp
mov
or
cmp
cmp
cmp
sbb
or
cmp
cmp
or
cmp
cmp
out
cmp
cmp
mov
or
cmp
cmp
cmp
lds
cmp
pop
or
cmp
cmp
clc
clc
cmp
fnstenv
popa
cmp
cmp
lea
cmp
or
fnstenv
popa
cmp
mov
sub
inc
add
or
mov
push
popa
cmp
fmull
cmp
fnstenv
inc
call
mov
sbb
cmp
rorb
and
cmp
lea
push
cmp
fnstenv
or
mov
pop
test
jb
lea
shll
outsb
cmp
cmp
out
fisubrl
cmp
dec
or
cmp
cmp
cmp
sub
mov
xchg
cmp
fnstenv
popa
cmp
cmp
lea
cmp
mov
sub
shlb
or
mov
aaa
popa
cmp
out
cmp
push
mov
sub
mov
sub
popa
cmp
lea
shl
mov
sub
shlb
or
mov
sbb
cmp
sub
cmp
cmp
fnstenv
popa
cmp
cmp
cmp
sub
or
mov
sub
mov
sub
cmp
lea
cmp
fnstenv
popa
cmp
cmp
cmp
sub
popa
cmp
mov
sub
cmp
fdiv
cmp
fnstenv
popa
cmp
cmp
cmp
sub
aas
cmp
or
mov
aas
out
leave
out
jns
cmp
mov
or
ret
xchg
out
fstpl
stos
subl
call
mov
sbb
cmp
cmpsl
and
fnstenv
popa
cmp
cmp
cmp
sub
or
add
cmp
out
aas
repz
mov
pop
mov
pop
mov
sub
repnz
cmp
jb
rcrl
cmp
lea
mov
pop
mov
pop
mov
sub
cmp
jb
rcrl
cmp
lea
cmpsl
mov
pop
mov
pop
test
test
rcr
sar
mov
xchg
push
call
popa
cmp
cmp
test
ljmp
or
rorb
inc
out
mov
pop
mov
pop
test
cmp
jb
ror
in
or
mov
pop
mov
pop
test
test
lea
shll
cmp
push
xor
cmp
xchg
push
call
pop
or
rorb
add
or
mov
pop
mov
pop
test
out
ss
sar
mov
jns
ret
mov
pop
mov
pop
test
jb
lea
shll
dec
mov
cmp
test
jb
lea
shll
inc
mov
cmp
test
cmp
jb
roll
mov
pop
mov
pop
test
test
rcr
sar
mov
lret
xlat
and
and
or
mov
push
dec
or
and
dec
or
sub
mov
cmp
jb
fidivrl
rcl
addr16
cmp
or
std
jb
fidivrl
rcl
in
or
xchg
mov
or
mov
cmp
cmp
std
jb
shll
jnp
cmp
cmp
cmp
mov
test
rorl
push
mov
std
je
test
in
or
mov
xor
cmp
std
jb
shll
mov
xor
or
std
jb
fidivrl
rcl
in
or
mov
aaa
test
test
sar
rcr
mov
mov
in
mov
mov
cmp
or
fidivrl
std
jb
shll
stos
cmp
cmp
mov
addr16
dec
or
and
cmp
rorb
dec
or
adc
sbb
mov
in
xlat
in
in
or
std
jb
fidivrl
rcl
xchg
cmp
cmp
rcrb
or
pushf
xor
mov
mov
fidivs
or
std
jb
fidivrl
shll
xlat
cmp
or
mov
mov
fidivs
in
fidivrl
std
jb
shll
xlat
daa
mov
daa
test
jb
jecxz
mov
lret
xlat
cmp
mov
fnstcw
cmp
mov
fnstcw
cmp
test
test
sar
shl
mov
lret
fwait
xlat
icebp
test
xlat
icebp
mov
push
fidivs
fcmovnb
jecxz
sar
mov
mov
xchg
cmp
inc
mov
fidivs
or
std
jb
fidivrl
shll
xlat
cmp
or
mov
mov
fidivs
std
jb
or
fidivrl
shll
xlat
aas
mov
aas
test
jb
jecxz
mov
lret
xlat
cmp
mov
movsl
cmp
cmp
test
test
sar
shl
mov
lret
fwait
xlat
icebp
test
xlat
icebp
mov
push
fidivs
fcmovnb
jecxz
sar
mov
mov
xchg
cmp
inc
mov
sub
or
std
jb
shll
mov
jecxz
mov
test
ror
xchg
or
mov
xchg
xor
or
mov
aas
test
rcr
test
sar
mov
mov
test
shll
jb
shll
cmp
shll
fcmovnb
jecxz
test
into
mov
in
mov
in
test
sar
test
rcrl
mov
lret
pusha
lret
shlb
or
mov
in
test
test
sar
rcr
mov
lret
rorb
mov
in
mov
in
test
sar
test
rcr
mov
mov
std
je
mov
in
mov
in
test
test
shl
sar
mov
mov
addr16
stos
xchg
shrl
mov
pop
mov
pop
mov
and
cmp
mov
mov
sub
test
rcr
test
mov
sbb
cmp
pushl
into
fbstp
test
test
rcr
sar
mov
fbstp
test
test
rcr
sar
loop
into
fistpll
fnstcw
mov
pop
mov
pop
test
test
rcr
sar
mov
rorb
xchg
push
out
loop
sbb
cmp
and
cmp
mov
sub
popa
cmp
mov
inc
cmp
test
shl
out
shll
fneni(8087
mov
pop
test
mov
pop
out
ss
sar
mov
loopne
call
shr
push
ret
lahf
and
and
or
ret
test
je
out
mov
push
mov
sub
test
cmp
pushl
stos
mov
push
rolb
lret
dec
xchg
push
adc
mov
and
mov
push
mov
sub
test
cmp
pushl
stos
mov
push
rolb
lret
dec
xchg
push
adc
mov
push
mov
pop
rorb
mov
pop
test
test
sar
rcrl
mov
mov
pop
dec
or
aad
aad
dec
or
aad
aad
rorb
mov
test
rcl
std
rcll
std
jb
or
rcl
inc
push
inc
add
and
out
fwait
adc
pop
mov
pop
mov
pop
mov
pop
test
sar
test
rcr
mov
mov
aad
in
std
jb
or
test
lret
or
out
and
jmp
lret
fidivl
into
mov
inc
mov
rcl
aad
lock
xor
add
lahf
pop
mov
pop
test
test
rcrl
sar
mov
mov
pop
mov
pop
test
cmp
jb
rcll
cmp
dec
or
and
in
xor
in
mov
std
ret
inc
rorb
mov
sub
test
fcmovnb
jecxz
mov
fbstp
test
shl
mov
fbstp
test
jb
jecxz
mov
fbstp
test
test
rcr
sar
mov
fistpll
fnstcw
mov
mov
sub
test
shl
mov
fbstp
test
jb
jecxz
mov
fbstp
cmp
aaa
test
test
rcr
sar
mov
fistpll
fnstcw
rorb
xlat
pop
test
test
sar
rcr
mov
xchg
dec
test
stos
jae
cmp
test
test
sar
rcr
mov
xchg
or
test
jo
cmp
dec
or
sbb
adc
mov
aad
lea
icebp
inc
leave
mov
pop
mov
pop
rorl
popa
mov
das
mov
das
rorl
cmp
dec
data16
cmp
out
outsb
cmp
cmp
pop
or
cmp
fnstcw
call
cmp
cmp
call
cmp
dec
mov
push
out
repz
lea
cmp
rorb
mov
sub
mov
sbb
cmp
cmp
pushl
into
fbstp
test
jb
jecxz
mov
cmp
data16
inc
roll
and
shll
and
popa
cmp
mov
inc
call
loope
fidivrl
pushl
into
fbstp
test
jb
jecxz
mov
fistpll
call
mov
std
rorb
mov
aaa
rorb
add
rcr
sar
mov
fbstp
test
jb
jecxz
mov
fistpll
call
mov
and
or
mov
push
dec
or
and
dec
or
sub
mov
addr16
test
sar
rcr
mov
rorb
mov
addr16
addr16
test
sar
rcr
mov
rorb
dec
or
xchg
mov
or
mov
addr16
test
rcr
sar
mov
mov
xor
cmp
cmp
cmp
mov
cmp
cmp
jb
push
mov
xor
xchg
fstpl
or
mov
std
mov
std
test
test
rcr
sar
mov
mov
xchg
push
sbb
or
mov
std
test
test
sar
rcr
mov
rorb
mov
in
xlat
in
in
or
std
jb
fidivrl
shll
or
mov
addr16
addr16
test
rcr
sar
mov
mov
xchg
push
test
stos
cmp
cmp
mov
cmp
or
dec
or
and
cmp
rorb
pushf
xor
das
sbb
mov
aaa
mov
aaa
test
test
sar
rcr
mov
rorb
mov
fimull
popa
cmp
mov
dec
or
cmp
cmp
pushf
xor
dec
or
pushf
xor
mov
mov
fidivs
or
std
jb
fidivrl
shll
xlat
aas
push
sti
mov
mov
fidivs
in
fidivrl
std
jb
shll
xlat
aad
cmpsl
aad
mov
jecxz
mov
lret
xlat
aas
test
dec
sub
mov
sarl
cmp
test
test
sar
shl
mov
lret
fwait
xlat
sti
test
xlat
sti
mov
push
fidivs
fcmovnb
jecxz
sar
mov
mov
xchg
aas
inc
add
or
mov
fiadds
jb
fidivrl
shll
xlat
aas
push
sti
mov
mov
fidivs
std
jb
or
fidivrl
shll
xlat
cmp
mov
jecxz
mov
lret
xlat
aas
test
dec
sub
mov
and
in
fcmovnb
std
jb
jecxz
mov
lret
fwait
xlat
sti
test
xlat
sti
mov
push
fidivs
fcmovnb
jecxz
sar
mov
mov
xchg
aas
inc
add
or
mov
das
test
test
rcr
sar
mov
mov
cmp
mov
jecxz
mov
test
ror
xchg
or
mov
xchg
xor
or
mov
cmp
cmp
in
std
jb
shll
xlat
aaa
test
shll
cmp
shll
fcmovnb
jecxz
test
into
mov
in
mov
in
test
sar
test
rcrl
mov
lret
pusha
lret
shlb
or
mov
in
test
test
sar
rcr
mov
lret
rorb
mov
in
mov
in
test
sar
test
rcr
mov
mov
xor
or
mov
in
test
test
shl
sar
mov
mov
cmp
test
sbb
cmp
mov
sub
call
cmp
sub
mov
sub
cmp
mov
sub
cmp
cmp
and
call
cmp
rorb
mov
pop
mov
pop
test
jb
lea
shll
mov
sub
mov
sbb
cmp
cmp
pushl
into
fbstp
test
test
rcr
sar
mov
fistpll
call
repnz
adc
add
add
mov
mov
xor
cmp
cmpsb
cmp
cmp
xchg
test
cmp
cmp
or
pop
xchg
cmp
mov
inc
cmp
cmp
inc
test
push
cmp
cmp
inc
push
cmp
cmp
test
pop
cmp
cmp
jle
pop
pusha
cmp
cmp
out
sbb
mov
je
lret
mov
pop
test
and
pop
mov
cmp
pop
and
lea
cmp
mov
mov
imul
loope
fisubrs
mov
out
pop
sub
rcl
add
jns
xorl
test
popf
pop
test
out
dec
lret
je
popf
rcrb
mov
or
out
mov
pop
popa
outsb
leave
test
popf
pop
test
out
dec
cmp
out
and
lret
lahf
pop
adc
mov
lock
mov
add
or
out
sub
and
xlat
add
imul
mov
lea
mov
sbb
shrl
jmp
xlat
lea
sbb
cmp
xchg
test
add
inc
and
xchg
cmpsl
mov
mov
xor
cmp
je
insl
test
xor
cmp
xchg
xchg
out
jge
sbb
add
sbb
mov
outsb
mov
es
ds
lretw
lret
shr
and
and
adc
adc
sbb
in
mov
lock
hlt
pop
jle
mov
or
out
lret
rcrb
repz
dec
mov
pop
lret
and
sub
shlb
pop
out
mov
pop
movsb
rclb
pop
xchg
adc
adc
repnz
adc
add
add
psrld
rorb
dec
or
sub
mov
and
ret
sbb
mov
fidivrl
test
shll
or
xlat
lea
mov
and
mov
and
mov
and
aam
enter
and
mov
arpl
fidivrl
or
popa
cmp
xchg
mov
pop
sub
cmp
mov
and
sti
rcr
shll
or
cmp
mov
and
cmp
mov
and
sti
shl
shll
fistl
cmp
lret
rcl
fidivs
test
shl
shll
fcmovnbe
cmpsl
sbb
outsl
mov
and
in
pushl
lea
stos
mov
sbb
push
call
mov
and
jb
lea
stos
mov
sbb
push
repz
adc
cmp
mov
and
icebp
sar
roll
mov
mov
sbb
mov
repz
rcl
std
mov
and
jmp
fidivrl
pushl
into
mov
and
xlat
in
sub
xlat
pop
mov
and
jb
jecxz
mov
mov
pop
xchg
into
out
lret
rcl
in
xlat
and
jmp
fidivrl
pushl
into
lret
dec
or
or
rcl
add
lret
add
popa
cmp
fistpll
repz
dec
cmp
add
cmp
dec
dec
or
mov
add
sbb
and
jmp
fidivrl
pushl
into
rorb
xchg
push
call
mov
pop
test
test
sar
rorl
iret
mov
iret
test
test
in
mov
dec
mov
sbb
cmp
fidivrl
pusha
test
fneni(8087
cmp
es
and
ljmp
mov
xchg
or
call
mov
in
test
test
rorl
push
xchg
out
test
movsl
cmp
cmp
test
test
rorl
rcll
pop
mov
pop
test
test
rorl
shll
popa
cmp
dec
or
xor
add
dec
or
aam
inc
cmp
or
test
test
add
std
jb
in
fisubrl
cmp
test
test
rorl
rcl
add
test
test
rorl
rcl
imul
mov
fidivrl
push
mov
in
push
out
mov
sub
or
mov
sub
or
mov
and
jb
lea
shll
mov
and
in
jb
lea
shll
shl
mov
add
popa
cmp
test
adc
cmp
pop
cmp
sub
insl
mov
imul
sub
popa
cmp
out
cmp
cmp
pop
cmp
sub
or
mov
and
ljmp
mov
mov
imul
pop
call
ljmp
mov
popa
or
add
ljmp
lea
shll
xlat
std
rolb
mov
pop
test
test
rorl
ror
mov
and
in
jb
lea
shll
or
cmp
mov
sbb
jb
dec
pop
add
shll
inc
fcmove
and
cmp
test
test
rorl
sarl
call
mov
pop
add
mov
and
in
sar
rorl
adc
add
add
dec
or
and
sub
rorb
shlb
cmpsl
and
ss
test
and
loope
pushl
lea
stos
mov
sub
cmp
mov
sub
loop
cmpsl
imul
or
mov
pop
test
sar
test
rorl
and
roll
shl
mov
mov
imul
sbb
cmp
mov
imul
cmp
mov
sub
mov
and
mov
and
cmp
arpl
and
cmpsl
iret
xchg
jmp
pop
js
cmp
mov
and
ss
roll
mov
shlb
sbb
mov
and
cmp
push
jb
jmp
sbb
cmp
mov
and
test
mov
jecxz
mov
pop
mov
loope
out
cmp
cmp
pop
fldcw
shr
pop
test
insb
mov
cmp
cmpsl
add
call
jecxz
rorl
insb
shl
mov
inc
shr
add
cmpsl
lea
test
pop
ss
rorl
sub
cmpsl
add
test
pop
rorl
loope
call
jp
cmpsl
dec
mov
dec
test
pop
rorl
loope
call
sub
popa
dec
out
cmp
xlat
pop
test
cwtl
cmp
cmp
sbb
test
pop
rorl
loope
call
xchg
out
pop
mov
mov
and
jecxz
rorl
mov
add
add
mov
std
test
mov
std
out
repnz
or
test
mov
and
lea
shll
sub
cmpsl
mov
mov
cmp
and
pushf
xor
pop
sub
mov
and
loop
ss
pushf
xor
rorl
jb
rcl
std
mov
and
lea
into
sar
mov
rorb
mov
outsb
mov
add
or
mov
xor
imul
imul
inc
mov
sbb
or
mov
xor
pop
mov
pop
test
rorb
mov
daa
inc
dec
or
mov
inc
mov
sub
inc
test
jns
cmp
mov
dec
or
pop
adc
or
or
pop
push
jae
cmp
mov
sub
lea
icebp
scas
cmp
mov
popa
jae
cmp
test
rorl
jb
rcl
fidivs
mov
sub
mov
fnop
xlat
outsb
or
pop
ljmp
and
lfs
in
in
pop
rorl
in
rclb
in
or
mov
and
mov
mov
scas
lret
or
mov
and
mov
shlb
xorb
cmp
pop
cmpsl
std
loopne
cmpsl
imul
cmp
pushl
pusha
mov
dec
loopne
cltd
cmp
outsb
mov
dec
mov
movsl
mov
fnstenv
lret
int3
mov
cmp
popa
cmp
shlb
cltd
movsl
cmp
sub
lea
cmp
mov
scas
lret
mov
repz
mov
and
sbb
sar
rorl
sub
shlb
pop
push
cmp
cmp
test
out
ss
rorl
iret
mov
pop
mov
pop
out
ss
sar
rorl
sub
je
jge
iret
test
mov
xlat
out
sub
xlat
data16
mov
data16
cmpsb
mov
rorb
int
fisubs
or
add
stos
fnstenv
in
cmp
mov
data16
sub
xlat
in
mov
and
push
ss
sar
mov
jge
in
out
mov
sub
and
mov
add
lea
or
mov
pop
mov
pop
test
push
ss
test
popa
xlat
iret
mov
outsb
rorb
mov
pop
mov
pop
out
ss
sar
rorl
outsb
test
push
divb
xlat
iret
test
cmp
cmp
xchg
callw
xlat
sbb
pop
cmpsl
std
loopne
cmpsl
sbb
fidivrl
pushl
pusha
mov
dec
loopne
cltd
movsl
outsb
or
pop
jmp
cmp
mov
outsb
mov
in
popa
cmp
mov
mov
test
fidivrl
std
jb
push
test
xchg
popa
cmp
mov
and
sbb
rorl
rcl
lea
pop
and
rcl
aas
dec
or
stos
sbb
inc
dec
or
inc
sbb
inc
rorb
dec
or
and
movsl
pop
aaa
shl
mov
cmp
cmp
cmp
cmc
mov
rorb
movsl
cmp
cmp
or
or
rorb
pop
addl
inc
dec
or
cmp
cmp
sbb
inc
rcrb
cmp
cmp
sub
or
cmp
cmp
sbb
inc
dec
or
cmp
cmp
or
cmp
cmp
sbb
inc
dec
or
cmp
cmp
or
cmp
cmp
xor
sbb
or
cmp
cmp
inc
shlb
in
xor
inc
dec
or
sub
xor
sub
sbb
inc
dec
or
and
push
or
cmp
cmp
fidivrl
sbb
inc
push
jae
cmp
cmp
out
insb
adc
cmp
pop
pop
sarl
cmp
fistpll
flds
cmp
pop
sub
cmp
cmp
fnstcw
fildll
rorb
pop
or
fnstenv
cmp
mov
push
cmp
mov
and
sbb
rorl
rcl
mov
and
sbb
sar
rcr
mov
mov
lea
xchg
test
cmp
mov
lea
data16
das
popa
cmp
xchg
pop
call
popa
cmp
mov
xchg
pop
call
popa
cmp
mov
dec
mov
test
mov
pop
mov
pop
test
out
rorl
rcl
mov
outsb
loop
lea
cmp
or
pop
loope
cmp
cmp
outsb
mov
jge
or
pop
xchg
cmp
cmp
fisttpl
or
pop
mov
jge
or
pop
xor
cmp
mov
das
popa
cmp
xchg
callw
int3
sbb
cmp
std
fistpll
call
cmp
outsb
mov
in
popa
cmp
mov
mov
out
ss
sar
rorl
dec
or
and
xor
sub
rcr
mov
cmp
add
mov
jbe
xchg
rolb
dec
cmp
cmp
cmp
mov
repz
jbe
subl
xlat
jbe
orl
mov
divl
cmpl
jbe
dec
or
popa
cmp
cmp
lahf
fidivrs
call
xchg
xchg
add
inc
repnz
stos
outsb
cmp
fcomip
test
cmpl
pop
shrl
or
dec
pop
outsb
jns
adc
adc
in
sub
out
lret
adc
adc
inc
testl
repnz
adc
add
add
and
dec
or
sub
adc
sbb
inc
dec
or
sub
xor
fisubrs
sbb
inc
psrld
in
add
xor
lea
std
mov
imul
popa
test
test
rorl
loope
call
pop
in
cmp
mov
imul
rorl
loope
call
pop
mov
cmp
mov
imul
shl
rorl
in
cmpsl
imul
shl
rorl
fidivs
mov
iret
mov
pop
rcll
mov
rcrl
test
test
lahf
pop
fiaddl
cmp
cmp
mov
push
cmp
push
mov
es
cmp
mov
imul
roll
rcll
mov
mov
dec
xchg
ss
mov
sub
popf
mov
mov
iret
mov
iret
mov
push
cmp
push
mov
mov
in
mov
in
mov
push
cmp
push
mov
test
call
pop
lret
shr
sub
mov
push
cmp
push
mov
mov
in
mov
in
mov
push
cmp
push
mov
test
call
pop
lret
shr
and
mov
sub
inc
popa
cmp
mov
sbb
push
cmp
and
push
jb
call
mov
sbb
and
push
cmp
push
jb
call
mov
in
lahf
lea
shr
sub
mov
shr
and
mov
push
cmp
push
mov
cmp
mov
add
hlt
rorl
loope
call
shlb
cmpsl
imul
shl
rorl
add
cmpsl
add
shl
rorl
shlb
mov
faddp
jecxz
rorl
shlb
mov
pop
mov
sbb
mov
mov
mov
sbb
mov
mov
test
test
pushl
push
cmp
loope
call
test
roll
test
push
cmp
std
test
jle
mov
pop
mov
pop
test
test
sbb
pushl
jmp
lahf
sbb
hlt
rcrl
shll
and
lea
mov
cmp
sbb
loope
lfs
mov
sbb
mov
pop
mov
pop
test
fcmovnb
push
cmp
pushl
loope
call
test
and
push
cmp
push
jb
lea
cmp
fidivs
push
mov
imul
mov
add
or
sar
rorl
adc
add
add
mov
mov
mov
cmp
mov
or
or
xchg
shlb
xor
pusha
test
daa
cmp
cmp
and
ficomps
popa
add
mov
pop
mov
stos
mov
mov
cmp
rcrb
push
ss
mov
and
sbb
shl
mov
push
pop
scas
mov
mov
mov
inc
shlb
cmpsl
and
cmp
push
ss
mov
and
fnstcw
dec
mov
call
xchg
mov
xchg
out
mov
test
out
ss
sar
mov
pop
rcr
cmp
and
xchg
cmpsl
mov
shl
inc
and
or
xchg
mov
lea
cmp
and
out
sbb
and
test
pop
cmp
cmp
and
mov
pop
shlb
mov
sarl
test
out
aaa
mov
rcrb
sbb
sar
mov
and
sbb
rcr
mov
push
pop
scas
mov
mov
test
mov
test
rcl
and
xchg
and
ljmp
mov
and
and
out
hlt
lds
and
call
xchg
mov
xchg
out
mov
test
out
rcll
sar
mov
test
mov
and
xchg
cmpsl
mov
out
dec
psrad
imul
nop
xchg
shlb
xor
cmp
mov
stos
mov
mov
pusha
test
out
cmp
out
and
mov
add
mov
pop
mov
stos
mov
mov
cmp
rcrb
push
ss
mov
and
sbb
shl
mov
push
pop
scas
mov
mov
mov
inc
shlb
pushf
xor
and
cmp
push
ss
mov
and
fnstcw
dec
mov
call
or
xchg
out
test
add
inc
repnz
adc
in
shl
test
xchg
mov
inc
mov
mov
shr
and
je
mov
cmp
mov
mov
into
mov
test
mov
and
adc
add
dec
or
mov
cmp
dec
or
lret
cmp
std
clc
cmp
dec
or
xchg
repz
pop
cld
cmp
dec
or
inc
mov
cmp
in
dec
cmp
dec
or
lret
cmp
sarl
mov
cmp
dec
or
pop
cmp
mov
and
je
mov
pop
test
mov
mov
cmp
cmp
cmp
cmp
imul
cmp
dec
or
pushf
out
cmp
pop
inc
repz
mov
pop
mov
and
test
pusha
lret
dec
cmp
je
shlb
lret
mov
and
cmpsl
dec
push
or
mov
add
test
stos
mov
je
mov
pop
lret
adc
cmp
cmpsl
std
mov
iret
mov
repz
in
mov
cmp
or
mov
cmp
xchg
fstp
mov
fmulp
lahf
insl
cmp
fs
mov
je
mov
cmp
cmp
repnz
stos
dec
cmp
scas
dec
or
cmp
cmp
imul
cmp
pop
pushf
cld
cmp
dec
or
mov
pop
xchg
movsb
cmp
dec
or
dec
call
add
xchg
jb
cmp
push
movsb
fistpll
cmp
jo
cmp
dec
or
popa
fistpll
cmp
in
out
cmp
dec
or
loopne
cmp
dec
or
push
adc
pop
pop
cmp
cmp
shlb
cmp
mov
cmp
int
cmp
xchg
dec
or
jbe
cmp
pop
push
dec
cmp
mov
pop
mov
std
jae
jl
cmp
cmp
lahf
sub
xor
cmp
shlb
mov
in
pop
jecxz
cmpsl
in
stos
mov
std
jle
inc
add
mov
test
stos
mov
push
test
stos
mov
xchg
xchg
sub
and
fs
mov
imul
stos
lret
test
cmp
or
ja
ja
cmp
cmp
cmp
hlt
mov
lea
push
cmp
xchg
dec
test
cmp
and
adc
add
cmp
and
pushf
xor
or
sub
mov
and
inc
pushf
xor
repnz
sar
rorl
sub
xlat
and
pop
test
test
rorl
rcr
cmp
cmp
jb
lea
shll
mov
and
or
cmp
or
mov
dec
rorb
mov
and
ljmp
mov
rorb
mov
dec
jge
mov
mov
sub
or
out
sub
or
mov
sbb
cmp
rorb
mov
repz
pop
lea
cmp
mov
and
ljmp
mov
xchg
xchg
call
faddl
imul
sar
rorl
call
lea
xlat
and
jmp
fidivrl
pushl
into
xchg
shl
mov
dec
mov
rorb
mov
sub
xchg
push
test
mov
or
mov
and
cmp
jb
rcll
cmp
add
mov
out
repz
psrad
sub
cmp
cmp
test
shlb
sbb
xlat
and
xlat
sbb
mov
mov
dec
or
add
cmp
mov
mov
pusha
dec
mov
xlat
pop
pop
dec
sub
jge
cmp
jl
mov
mov
test
xlat
and
cmp
test
adc
mov
mov
push
mov
push
dec
or
repz
cmp
or
mov
mov
pusha
adc
inc
add
or
dec
or
pop
cmp
cmp
adc
test
cmpsb
dec
jo
jnp
or
out
imul
or
cmp
test
xchg
adc
sbb
push
test
xchg
mov
daa
inc
add
add
psrld
mov
mov
cmp
pop
jge
call
and
cmp
ret
call
cmp
pop
dec
jp
or
pop
dec
rcl
or
pop
dec
mov
int3
inc
cmp
cmp
or
pop
int3
inc
cmp
cmp
or
pop
int3
cmp
cmp
or
pop
int3
push
cmp
cmp
or
pop
int3
repz
cmp
rorb
pop
int3
dec
popa
cmp
rorb
pop
int3
movsl
popa
cmp
rorb
mov
aas
popa
cmp
loop
lahf
xor
fnstenv
cmp
lea
xor
cmp
call
shr
std
shr
pop
dec
or
xchg
and
mov
rcl
in
lahf
fidivs
in
call
mov
test
test
test
icebp
cmp
push
jb
fnstsw
cmp
inc
roll
mov
mov
mov
test
out
cmp
cmp
imul
mov
adc
pop
or
mov
fidivs
mov
in
out
test
sar
lret
cmp
cmp
pop
roll
mov
mov
out
cmp
fidivrs
shr
or
mov
in
mov
iret
out
mov
or
xor
rorb
std
adc
gs
mov
imul
std
movsb
push
adc
mov
mov
mov
fidivs
mov
in
inc
and
lea
pop
mov
roll
mov
test
sbb
call
mov
in
lahf
fidivs
xchg
mov
inc
mov
inc
roll
mov
mov
mov
test
or
cmp
mov
pop
or
pop
mov
cmp
mov
scas
mov
add
es
outsb
mov
jbe
repnz
or
mov
ds
loope
xlat
shlb
xchg
xchg
pushf
lret
imul
imul
mov
in
mov
data16
mov
mov
lods
lret
icebp
mov
sub
call
je
sub
or
shr
dec
or
mov
cmp
mov
and
mov
call
mov
add
mov
add
jae
or
shlb
or
out
and
pusha
mov
iret
mov
pop
add
or
xchg
or
adc
in
and
adc
add
sbb
cmp
aad
cmp
mov
sub
mov
shlb
testb
shll
lods
sub
shlb
cmp
pop
test
pusha
adc
cmp
in
test
pop
mov
test
mov
sub
xchg
loop
pop
mov
sub
push
test
add
sbb
and
out
sub
mov
push
and
call
mov
sub
dec
repnz
cmpsl
mov
out
ds
sub
sbb
pushf
xor
and
pushf
xor
psrld
or
dec
or
lock
xor
or
out
mov
and
pushf
xor
ljmp
push
cmp
sbb
xlat
sbb
jmp
fidivrl
pushl
into
test
sbb
push
cmp
cmp
test
sar
test
fidivrl
into
mov
and
sti
shl
shll
fisttpl
into
mov
pop
mov
pop
out
test
sar
test
shl
mov
mov
and
sti
rcr
shll
or
jecxz
xlat
add
sti
rcr
shll
or
sar
test
shl
mov
mov
and
sti
rcr
shll
or
jecxz
cmpsl
pop
mov
and
jmp
fidivrl
pushl
into
lret
xlat
imul
sar
rcr
mov
mov
and
sti
shll
jecxz
mov
je
xchg
sbb
mov
cmp
repnz
popa
mov
pop
xchg
adc
add
add
psrld
pop
and
imul
xor
pop
mov
pop
ret
pushf
xor
out
test
pushl
lea
stos
mov
sub
cmpsl
pop
test
lret
lret
test
pusha
sar
rorl
dec
xchg
fisubrs
cmp
mov
dec
mov
sub
fdivrp
int3
movsl
lods
test
sar
inc
xor
call
dec
pop
movsl
lods
shr
dec
or
repnz
movsl
lods
shr
xchg
xchg
pop
movsl
lods
test
rcl
std
shr
pop
rorb
cmpsl
iret
mov
mov
dec
test
in
cmp
lods
frstor
mov
andl
or
cmp
mov
rol
cmp
mov
and
cmp
mov
mov
dec
mov
mov
sub
mov
stos
mov
test
stos
mov
mov
cmpsl
pop
mov
add
cmp
mov
std
out
std
cmp
call
jmp
shl
mov
pop
test
or
mov
adc
iret
mov
in
mov
iret
test
xlat
std
test
test
pop
cmp
std
jb
cmp
cmp
add
into
mov
test
arpl
cmp
sub
cmp
mov
sbb
leave
push
push
in
cmp
or
pop
in
mov
test
or
push
push
test
cmpsl
and
test
stos
cmp
cmp
inc
and
or
in
ret
mul
or
inc
push
ret
sbb
pop
jecxz
cmpsl
and
popa
cmp
out
add
test
out
cmp
dec
or
loop
cmp
dec
or
iret
int
cmp
repz
idivb
cmp
sub
cmp
mov
sub
cmpsl
pop
lret
jle
cmp
test
stos
mov
pop
test
stos
subl
cmp
rorb
dec
or
mov
cmp
dec
or
in
cmp
dec
or
sbb
sub
cmp
test
stos
mov
pop
je
mov
pop
subl
cmp
cmp
and
xlat
test
daa
cmp
cmp
or
add
or
mul
or
sub
xlat
ret
es
push
cmp
push
inc
lods
test
adc
bound
cmp
or
jbe
or
mov
or
pop
push
ret
jle
clc
shrl
test
inc
test
adc
cmp
or
mov
in
aaa
push
cmp
fidivrl
xlat
fidivs
xchg
push
stos
testl
xlat
push
mov
test
sarl
cmp
or
mov
and
dec
xchg
sar
push
xchg
push
inc
or
push
mov
inc
mov
xchg
fidivrl
xlat
inc
mov
xchg
inc
jno
adc
lret
or
sar
mov
iret
mov
in
mov
iret
mov
lods
test
test
pop
cmp
std
jb
adc
cmp
cmp
add
into
mov
test
ja
cmp
test
jo
cmp
rol
xor
imul
rorl
roll
mov
pop
mov
pop
test
dec
sar
rorl
xchg
adc
add
cmp
sarb
rclb
sbb
and
pushf
xor
add
mov
pop
or
xchg
mov
sbb
pop
mov
test
rorl
rcl
pop
dec
or
lock
xor
in
out
dec
or
sub
cmp
mov
mov
and
jb
in
lea
shll
mov
pushl
into
test
roll
mov
imul
cmp
roll
pop
rorb
mov
pop
mov
imul
pop
in
and
cmp
test
test
rorl
ror
imul
imul
ljmp
lea
shll
mov
pushl
into
je
mov
imul
mov
pop
test
test
rorl
rcl
pop
dec
or
mov
xor
fisubl
cmp
cmp
test
std
jb
mov
fidivrl
push
mov
pop
fisttpl
or
push
push
pop
test
inc
test
rorb
mov
add
lea
ljmp
xlat
imul
or
and
cmp
or
mov
and
ljmp
mov
popa
or
mov
and
ljmp
mov
push
or
mov
sbb
in
jb
lea
shll
lcall
mov
pop
test
test
sar
rorl
xlat
pop
and
rcll
mov
out
out
or
and
xor
pop
mov
rorb
mov
ds
xor
cmp
shlb
popa
cmp
mov
lret
xlat
pop
mov
and
ss
and
dec
rorl
jb
rcl
in
mov
and
lea
or
jb
rcl
std
mov
pop
mov
lea
or
mov
pop
mov
cmpsb
mov
pop
and
or
out
mov
cmpsb
mov
pop
mov
movsl
and
mov
pop
mov
cmpsb
lret
lret
movsl
rorb
xlat
and
cmp
jb
rcl
ds
and
or
jb
lea
rcl
ds
and
dec
sar
rorl
repz
cmpsl
ds
or
adc
sbb
ret
inc
fcmove
idivb
cmp
test
or
lea
jb
rcl
std
mov
lret
rorb
call
lea
jecxz
cmp
or
dec
or
lock
xor
iret
mov
iret
test
or
lea
jb
rcr
or
mov
or
out
mov
iret
mov
iret
test
or
lea
jb
rcr
call
mov
in
rorb
mov
iret
mov
dec
je
rorb
mov
ds
ds
repz
mov
iret
xchg
push
adc
or
mov
dec
mov
ds
mov
iret
je
ficompl
and
dec
or
sub
adc
sbb
rorb
pop
or
rorb
pop
or
rorb
pop
or
rorb
mov
and
or
lea
jb
rcl
iret
fcmove
lret
mov
inc
test
dec
lret
ret
call
mov
pop
mov
pop
test
or
jb
lea
rcl
std
shr
in
lahf
in
or
rorl
jb
sbb
call
mov
pop
test
sar
test
lea
shll
ljmp
pushl
into
lret
xlat
iret
shr
aas
xchg
push
call
mov
pop
test
or
lea
jb
rcr
dec
pop
or
mov
and
or
jb
lea
shll
mov
and
or
lea
jb
rcr
dec
pop
or
mov
imul
test
test
jb
lea
shrl
aad
xlat
and
fcmovnb
fidivrl
pushl
fwait
inc
mov
xchg
shrl
mov
sbb
cmp
jb
lea
shrl
aad
xlat
and
fcmovnb
fidivrl
pushl
fwait
inc
mov
xchg
shrl
mov
ds
ds
mov
test
test
jb
lea
shrl
aad
xlat
and
fcmovnb
fidivrl
pushl
fwait
inc
mov
xchg
shrl
mov
add
cmp
jb
lea
shrl
aad
xlat
and
fcmovnb
fidivrl
pushl
fwait
inc
mov
xchg
shrl
mov
sbb
cmp
dec
rorl
jae
mov
imul
test
rcr
test
sar
mov
push
shll
ds
test
rcr
test
sar
mov
push
shll
imul
fidivrl
pushl
into
push
push
test
xor
or
mov
ds
mov
test
sar
test
lea
shrl
aad
xlat
sbb
add
ljmp
pushl
into
push
shll
add
cmp
fcmovnb
pushl
into
push
shll
sbb
rcr
sar
mov
push
push
test
imul
cmp
mov
mov
test
sar
test
lea
shrl
aad
xlat
ds
mov
ds
test
rcr
test
sar
mov
push
shll
imul
test
sar
mov
push
shll
ds
test
test
rcr
sar
mov
push
push
test
and
cmp
mov
add
cmp
dec
rorl
jae
mov
imul
test
rcr
test
sar
mov
push
shll
sbb
cmp
fcmovnb
pushl
into
push
shll
add
rcr
sar
mov
push
push
call
mov
cmp
and
dec
sar
rorl
std
mov
pop
mov
pop
mov
pop
mov
pop
test
test
std
jb
sbb
call
test
out
and
std
and
push
jb
push
mov
mov
inc
mov
and
dec
sar
rorl
std
xchg
push
test
insl
and
cmp
test
or
jb
lea
shll
mov
pop
mov
pop
test
or
lea
jb
rcr
popa
cmp
ret
sarb
call
mov
and
or
jb
lea
shll
mov
pop
mov
pop
test
or
jb
lea
shll
mov
pop
mov
pop
test
or
lea
jb
rcr
pop
or
mov
and
or
lea
jb
rcr
pop
or
mov
in
lret
or
cmp
inc
cmp
ds
xor
or
mov
and
or
jb
lea
shll
mov
pop
mov
pop
test
or
jb
lea
shll
mov
pop
mov
pop
test
lea
or
jb
rcr
call
lret
mov
and
lea
or
jb
rcr
call
lret
mov
repz
inc
popa
sub
rorb
xlat
pop
test
sar
test
lea
shll
xlat
and
fcmovnb
fidivrl
pushl
into
lret
xchg
shrl
mov
sub
and
adc
add
add
mov
es
xor
cmp
or
mov
sub
mov
dec
mov
test
sub
sti
cmp
or
rol
jb
pop
cmp
jns
imul
add
and
xchg
hlt
call
ss
mov
jmp
fiaddl
cmp
mov
sub
mov
dec
test
test
shr
imul
imul
imul
mov
imul
push
rclb
sbb
xchg
fucom
push
call
cmp
jbe
call
into
fnstsw
cmp
neg
inc
cmp
cmp
mov
sub
cmp
call
test
mov
mov
sbb
mov
roll
rorl
jb
push
mov
repz
mov
mov
sub
lods
test
in
cmp
xchg
roll
mov
mov
xchg
xchg
inc
xchg
sbb
add
push
inc
sub
push
cmp
inc
sub
sub
mov
dec
mov
sub
movsl
lods
test
ss
adc
std
jb
xchg
test
lret
cmp
cmp
sbb
mov
call
dec
mov
mov
add
orl
mov
repnz
adc
add
add
or
mov
dec
test
push
cmp
fidivrl
xlat
sub
jb
xlat
inc
inc
jno
adc
mov
shlb
or
mov
inc
popa
cmp
mov
mov
outsb
mov
inc
popa
cmp
mov
lret
mov
outsb
mov
sbb
cmp
cmp
cmp
cmp
fchs
cmp
leave
mov
sub
cmp
fidivrl
xlat
sub
test
test
and
and
loop
call
cmp
ds
repz
dec
cmp
sub
mov
sub
cmp
fidivrl
xlat
sub
xchg
sar
mov
mov
xchg
push
out
mov
repz
ds
push
cmp
fidivrl
xlat
repz
ds
test
xlat
data16
test
or
shlb
adc
add
psrld
cmp
loop
lahf
outsb
mov
xchg
ficomps
lods
adc
xchg
hlt
call
pop
stos
cmp
cmp
lods
call
pop
insl
cmp
cmp
lods
call
pop
in
cmp
cmp
lods
call
pop
bound
cmp
lods
call
pop
cmp
ss
movsl
lods
test
mov
cmp
xchg
fisubrs
cmp
daa
cmp
cmp
lods
call
pop
and
cmp
mov
lods
call
xlat
mov
lods
call
andl
call
pop
sub
mov
or
cmp
cmp
cmp
cmp
call
cmp
ds
repz
dec
cmp
sub
fidivl
cmp
mov
sub
fstl
aaa
sti
cmp
pushl
pop
roll
test
fnsave
adc
mov
mov
shr
repz
mov
stc
mov
repz
ds
sub
mov
dec
mov
sub
or
mov
lods
test
sti
cmp
add
std
jb
rol
jb
pusha
mov
test
fnsave
mov
mov
sub
movsl
lods
test
out
cmp
cmp
mov
lret
fidivs
mov
divl
pop
movsl
lods
mov
sub
test
sar
mov
roll
lret
cmp
cmp
xchg
lret
xlat
sub
mov
ds
fsubp
and
push
and
lods
mov
lods
shl
test
pop
xor
hlt
xor
ljmp
cmp
mov
sub
fstl
aaa
sti
cmp
pushl
pop
roll
test
fnsave
adc
ffree
fcmovnbe
call
mov
sub
mov
dec
test
mov
lods
test
sti
cmp
pushl
pop
test
add
fnsave
insl
cmpsl
ds
divl
mov
ds
repz
ds
repz
ds
mov
mull
lods
test
sti
cmp
pushl
pusha
roll
test
fnsave
std
jb
shll
sbb
pop
movsl
lods
mov
sub
test
mov
mov
repz
mov
lret
call
and
jecxz
test
sbb
pop
movsl
lods
mov
sub
adc
out
and
lods
mov
sub
outsb
ret
hlt
mov
lret
xor
mov
mov
lods
loopne
call
loop
call
cmp
repz
dec
cmp
sub
ror
mov
repnz
adc
add
add
mov
rcl
sbb
rorb
dec
or
repnz
movsl
lods
rorb
mov
sbb
push
cmp
push
cmp
call
fldenv
adc
jmp
cmpsl
and
cmp
dec
pop
or
cmp
sub
mov
cmp
dec
cmp
add
call
cmp
sbb
repnz
mov
and
stos
sub
cmpsl
mov
mov
cmp
test
or
pusha
xchg
fcmovne
dec
or
adc
sti
in
dec
or
out
pop
dec
inc
dec
or
dec
cmp
mov
gs
dec
or
mov
mov
mov
mov
test
mov
sarb
mov
or
int3
and
out
pop
sub
or
jmp
or
inc
shrl
fmuls
push
adc
dec
test
fwait
shll
out
lds
cmp
cmp
cmp
push
cmpsb
cmp
cmp
out
add
iret
test
jge
sub
cmp
push
call
mov
fwait
inc
test
pop
jae
cmp
cmp
xchg
mul
cmp
fwait
xchg
test
daa
jnp
cmp
cmp
cmpsl
cmp
and
cmp
mov
fwait
xchg
test
aas
jnp
cmp
cmp
xchg
add
test
xchg
test
daa
jnp
cmp
cmp
std
test
cmp
lret
std
test
xchg
call
lahf
dec
mov
shl
inc
ds
xchg
call
faddp
jecxz
inc
ds
xchg
call
jmp
add
sub
cmp
and
stos
dec
cmp
jg
popa
mov
pop
popa
ss
popa
mov
lea
inc
lret
xchg
cmpsl
mov
mov
cmp
mov
shl
dec
or
repnz
movsl
lods
rcl
pop
dec
or
xchg
pop
movsl
lods
rcl
sbb
pushf
xor
and
pushf
xor
fimuls
pop
movsl
lods
rcl
in
or
loop
movsl
lods
rcl
aas
mov
add
cmp
jecxz
mov
add
rolb
adc
mov
rorb
pop
or
rorb
mov
inc
pushf
xor
push
pop
movsl
lods
shlb
mov
and
ss
test
sar
mov
mov
and
jecxz
test
shll
fcmovne
into
mov
and
jecxz
test
shll
fcmovne
into
mov
and
jecxz
test
shll
fcmovne
into
rcrb
cmp
cmp
test
test
fidivrl
into
mov
lea
in
shl
shll
fcmovnbe
push
sub
cmp
cmp
cmpsl
and
test
test
shl
shll
fcmovnbe
push
sub
cmp
cmp
test
test
fidivrl
into
mov
and
or
test
shl
shll
lea
hlt
shll
xchg
lret
or
rclb
out
cmp
mov
ds
ss
test
rorl
and
test
fidivrl
into
mov
and
hlt
ss
shll
fcmovne
into
mov
and
hlt
shll
jecxz
mov
lret
pop
pop
out
cmp
pop
or
cmp
cmp
mov
and
test
test
rorl
rcr
or
pop
inc
inc
cmp
cmp
mov
aad
cmp
cmp
cmp
shlb
or
mov
pop
test
push
cmp
fidivrl
xlat
std
mov
pop
test
xchg
mov
loopne
call
cmp
stc
lea
or
mov
pop
test
push
cmp
fidivrl
xlat
std
mov
pop
test
xchg
mov
loopne
call
cmp
testl
xlat
and
in
lea
shll
mov
fidivrl
fcmovnb
pushl
into
lret
xlat
and
fidivrl
fcmovnb
pushl
into
lret
xlat
and
fidivrl
fcmovnb
pushl
into
lret
or
cmp
cmp
xlat
lea
fcmovnb
fidivrl
pushl
into
rolb
pop
out
cmp
mov
dec
mov
mov
and
fidivrl
add
test
sar
mov
rolb
pop
out
cmp
mov
data16
data16
sar
test
rorl
and
mov
pushl
fidivrl
into
mov
and
jecxz
out
shll
fcmovne
into
rolb
pop
out
cmp
mov
and
sar
test
rorl
and
test
fidivrl
into
lret
xlat
and
test
fidivrl
into
pop
sub
cmp
cmp
mov
and
loope
xlat
iret
rclb
out
cmp
mov
jbe
hlt
ss
shll
fistpl
push
cmp
cmp
loopne
cmp
cmp
xor
xlat
sbb
fidivrl
pusha
mov
mov
add
ljmp
mov
mov
xchg
sub
mov
jle
jle
cmp
adc
push
sub
test
push
cmp
fidivrl
xlat
imul
sar
mov
repz
lret
or
mov
xchg
push
fnop
xlat
repz
divb
mov
mov
lret
shlb
data16
lret
cmp
cmp
xlat
repz
mov
add
adc
shlb
lret
mov
add
xlat
mov
sbb
fidivrl
xlat
add
dec
sar
mov
rorb
mov
repz
popa
cmp
mov
add
cmp
fidivrl
xlat
add
mov
test
dec
out
pop
mov
pusha
ficoml
cmp
mov
repz
movsb
sub
adc
rcl
divl
test
sarl
cmp
or
mov
in
std
jb
or
test
test
or
cmp
or
mov
imul
out
push
roll
mov
pop
test
adc
jle
adc
xlat
pop
test
or
std
jb
or
rcr
mov
pop
test
sar
mov
jle
sti
mov
mov
es
int
xchg
shll
or
test
sarl
cmp
or
mov
in
std
jb
or
test
cmp
sbb
test
or
rcll
test
mov
test
sarl
cmp
xchg
pop
movsl
lods
test
jg
pop
movsl
lods
call
jno
cmp
xlat
repz
xlat
jle
scas
sub
out
mov
mov
repz
xlat
sub
or
mov
popa
sub
or
cmp
xlat
imull
cmp
jae
xor
or
popa
or
dec
or
enter
rclb
xchg
test
push
cmp
fidivrl
xlat
inc
mov
xchg
jb
xlat
dec
mov
test
dec
mov
pop
rol
pop
mov
stc
xchg
sub
lret
rorb
mov
add
or
mov
sbb
fidivrl
xlat
add
dec
mov
sar
jge
ds
nop
cmp
mov
and
fidivrl
ss
test
sar
mov
mov
and
jecxz
test
shll
fcmovne
into
mov
and
jecxz
test
shll
fcmovne
into
mov
and
in
shl
shll
fcmovne
into
rcrb
cmp
cmp
mov
lea
cmp
arpl
fcmovnbe
push
sub
cmp
cmp
cmpsl
and
test
test
shl
shll
fcmovnbe
push
sub
cmp
cmp
test
sar
test
into
mov
and
or
test
shll
jecxz
mov
mov
and
lea
arpl
xchg
lret
push
sub
cmp
cmp
test
ss
test
sar
mov
mov
and
jecxz
test
shll
fcmovne
into
mov
and
jecxz
test
shll
fcmovne
into
pop
cmpsl
iret
shlb
pop
out
cmp
pop
pop
sbb
cmp
fbstp
test
faddp
fidivrl
pushl
into
fistps
push
cmp
cmp
mov
aad
cmp
cmp
cmp
popa
cmp
rorb
mov
sub
xlat
dec
mov
imul
shl
mov
imul
jb
cmpsl
imul
test
push
cmp
push
cmp
call
test
test
fcmovne
into
mov
imul
jb
call
cmp
push
cmp
call
test
test
fcmovne
into
mov
imul
jb
call
cmp
push
cmp
call
lahf
pop
test
mov
lret
fnstcw
call
cmc
pop
cmp
mov
repnz
adc
add
add
psrld
test
or
xchg
pop
movsl
lods
cmp
rorb
dec
or
repnz
movsl
lods
rorb
dec
or
and
and
xor
sbb
pushf
xor
sbb
pushf
xor
pop
and
rorb
mov
data16
inc
popa
cmp
mov
data16
data16
xor
cmp
scas
mov
in
mov
das
popa
cmp
rcrb
test
xchg
sbb
lahf
in
mov
iret
mov
adc
jb
jge
fistl
shlb
mov
repz
dec
pop
cmpsl
std
loopne
call
cmp
pop
or
cmp
sub
call
cmp
add
pop
or
rorb
mov
data16
outsb
rolb
dec
cmp
cmp
cmp
rolb
mov
outsb
rolb
mov
outsb
rolb
dec
add
cmp
cmp
insl
mov
data16
data16
xor
cmp
mov
je
rorb
mov
and
and
adc
add
popa
cmp
psrld
jg
pushf
xor
push
cmp
mov
repz
pushf
xor
inc
push
cmp
dec
or
xchg
pop
movsl
lods
cmp
rorb
dec
or
repnz
movsl
lods
rorb
or
mov
imul
cmp
inc
mov
cmp
mov
inc
xchg
sarl
mov
cmp
pop
sbb
pop
out
mov
mov
mov
stos
push
shlb
mov
mov
dec
ds
popf
push
mov
rorb
mov
mov
shrb
add
cmp
out
add
cmp
pop
sbbl
cmp
out
pop
mov
cmp
pop
xor
cmp
cmp
inc
icebp
mov
cmp
mov
cmp
mov
mov
cmp
mov
add
cmp
fidivrl
xlat
add
cmpsl
adc
sar
mov
add
out
pop
mov
inc
test
adc
sar
mov
inc
push
jae
cmp
mov
pop
mov
lea
jecxz
mov
pop
mov
lea
sar
lret
pop
imul
inc
mov
add
cmp
fidivrl
xlat
add
xchg
sar
mov
add
out
and
inc
test
adc
sar
mov
inc
push
jae
cmp
mov
pop
mov
lea
jecxz
mov
pop
mov
lea
sar
lret
pop
leave
call
mov
sbb
fidivrl
xlat
add
xchg
sar
mov
add
pop
addr16
cmp
cmp
inc
test
adc
sar
mov
inc
push
jae
cmp
mov
pop
mov
lea
jecxz
mov
pop
mov
lea
sar
lret
pop
sub
mov
cmp
rorb
mov
pop
mov
shrb
mov
rcr
add
cmp
mov
lea
cmp
shr
lea
pushf
xor
test
jle
cmp
jge
lea
cmp
mov
cmp
mov
mov
cmp
cmp
mov
cmp
cmp
mov
cmp
out
sub
cmp
cmp
mov
mov
cmp
out
stc
mov
cmp
pop
and
idivb
cmp
out
cld
mov
cmp
pop
and
push
cmp
cmp
cmp
cmp
add
pop
cmp
cmp
cmp
cmp
rorl
cmp
cmp
mov
mov
cmp
mov
repz
ss
mov
rorb
daa
cmp
mov
dec
mov
dec
test
rorl
jb
rorl
sub
cmp
cmp
daa
cmp
fnstenv
test
rorl
jb
rcr
or
cmp
fnstenv
popa
cmp
dec
or
cmp
adc
mov
ds
rorb
mov
pop
or
push
mov
cmp
mov
dec
mov
dec
ret
mov
test
sar
rcr
mov
mov
imul
push
test
xchg
jae
cmp
test
faddp
pushl
into
mov
imul
push
mov
dec
mov
dec
test
faddp
pushl
into
mov
imul
push
mov
mov
cmp
mov
mov
cmp
mov
mov
cmp
out
and
cmp
mov
mov
cmp
out
in
mov
cmp
mov
mov
cmp
out
inc
mov
cmp
mov
mov
cmp
mov
mov
cmp
mov
mov
cmp
mov
mov
cmp
in
iret
out
dec
mov
pop
jle
cmp
out
cmp
cmp
cmp
or
cmp
in
sti
jmp
cmp
cmp
in
std
mov
cmp
cmp
in
and
or
mov
cmp
cmp
in
arpl
mov
repz
repz
cmp
pushl
into
add
lahf
repz
shl
test
push
jb
jmp
into
test
rcll
mov
repz
repz
shl
test
push
jb
jmp
lahf
pop
out
lds
cmp
sarl
mov
repz
repz
test
jb
jecxz
mov
mov
pop
lret
cmpsl
repz
repz
test
jecxz
roll
mov
out
sub
xlat
pop
xchg
into
adc
xlat
repz
repz
cmp
pushl
into
rcrb
cmp
mov
dec
mov
dec
test
jb
fidivrl
into
pop
cmpsl
iret
shlb
pop
sub
and
rcl
das
out
dec
mov
mov
and
rcrb
mov
and
mov
dec
jb
rcrb
rcrb
rcrb
rcrb
rcrb
rcrb
mov
dec
add
pop
and
out
jb
rcrb
aas
mov
or
xlat
dec
mov
dec
test
test
fidivrl
into
mov
dec
mov
dec
test
shl
pop
rcl
cmp
jmp
mov
rcrb
xlat
dec
mov
dec
test
cmp
pushl
into
mov
dec
pop
rcl
das
test
mov
dec
shl
test
push
jb
jmp
mov
rcrb
xlat
dec
mov
dec
test
sar
test
into
mov
dec
mov
dec
test
shl
test
push
jb
jmp
rclb
sbb
cmp
mov
dec
mov
dec
test
sar
test
into
mov
dec
mov
dec
test
shl
test
push
jb
jmp
rclb
cmp
mov
repz
repz
test
fidivrl
into
mov
repz
repz
test
jecxz
roll
mov
lret
pop
daa
cmp
mov
dec
mov
dec
mov
sub
cmp
pushl
into
pop
or
cmp
rolb
pop
sub
or
lea
out
cmp
mov
repz
repz
mov
test
rcr
sar
mov
rolb
pop
sub
or
mov
dec
test
rorl
jb
shl
pop
or
cmp
fnstenv
test
rorl
jb
rcr
or
cmp
fnstenv
fidivs
test
test
mov
sub
lea
jb
rcrl
cmp
rclb
sub
or
lea
xlat
repz
repz
push
ss
mov
rolb
pop
sub
inc
mov
cmp
repz
cmp
cmp
mov
cmp
cmp
mov
cmp
mov
mov
cmp
mov
mov
cmp
out
pushl
cmp
cmp
mov
cmp
out
pop
mov
cmp
pop
enter
pop
pop
cmp
cmp
cmp
cmp
icebp
mov
mov
cmp
pop
enter
pop
sbb
cmp
mov
cmp
out
pop
mov
mov
cmp
mov
mov
cmp
mov
cmp
mov
test
shrb
and
cmp
pop
mov
dec
or
cmp
cmp
mov
or
cmp
cmp
xchg
mov
shrb
mov
mov
repz
repz
in
test
sar
rorl
repz
test
sar
rcrl
mov
test
out
insb
ret
adc
inc
cmp
cmp
sub
cmp
mov
repz
repz
xchg
push
jb
ljmp
cmp
cmp
cmp
test
pop
shll
or
push
mov
cmp
cmp
pusha
sbb
repz
repz
pop
shll
or
push
mov
cmp
cmp
test
cmp
push
jb
ljmp
xlat
repz
test
sar
rcrl
mov
test
out
insb
ret
adc
mov
mov
cmp
cmp
inc
jno
adc
or
mov
sub
shlb
add
mov
xchg
cmp
fidivrl
xlat
xchg
xchg
mov
mov
imul
das
popa
cmp
fstps
imul
cmp
sar
lea
cmp
mov
add
cmp
fidivrl
xlat
add
mov
imul
cmp
mov
xchg
push
test
cmp
cmp
xchg
add
shlb
rclb
in
or
mov
in
xlat
in
test
push
cmp
fidivrl
xlat
in
cmpsl
in
test
xchg
mov
loopne
call
cmp
shr
cmp
mov
in
xlat
in
test
push
cmp
fidivrl
xlat
in
cmpsl
in
test
xchg
mov
loopne
fwait
inc
popa
cmp
sar
cmp
lea
mov
cmp
mov
mov
scas
lret
xlat
sub
test
sarl
cmp
or
mov
fiadds
inc
mov
mov
sub
push
out
mov
in
popa
cmp
dec
cmp
pushf
xor
dec
mov
repz
idivl
call
cmp
outsb
cmp
data16
lea
cmp
rorb
sbb
cmp
mov
mul
sbb
mov
mul
sbb
mov
sbb
cmp
mov
not
andl
cmp
imul
and
adc
add
pop
pop
out
stc
rorb
es
cmp
dec
shll
stc
cmp
cmp
pop
shll
repz
call
cmp
outsb
cmp
data16
ds
repz
dec
cmp
sub
mov
sub
shll
add
or
pop
sub
cmp
mov
es
or
pop
sarb
cmp
cmp
outsb
cmp
outsb
cmp
outsb
mov
add
fidivs
es
pop
or
rcl
sub
es
mov
es
mov
es
cmp
mov
mov
sub
jge
test
daa
popa
cmp
mov
mov
mov
scas
pop
movsl
inc
fnstenv
mov
sub
test
pushf
popa
cmp
mov
sub
je
lret
cmp
inc
popa
cmp
mov
es
or
or
popa
cmp
mov
es
cmp
mov
rcl
es
mov
es
cmp
mov
rcl
es
mov
es
cmp
mov
mov
rcl
es
mov
es
cmp
mov
mov
rcl
es
mov
es
mov
in
popa
cmp
mov
in
popa
cmp
mov
mov
inc
pushf
xor
out
rorl
push
rcl
es
dec
shll
sub
cmp
cmp
out
mov
es
cmp
mov
out
and
call
jbe
out
jbe
out
jbe
out
jbe
shll
jle
fiadds
adc
cmp
outsb
cmp
outsb
mov
add
fiadds
add
out
ds
idivl
fiadds
divb
rcl
sub
out
mov
es
cmp
sub
sub
iret
popa
cmp
shlb
shll
sub
pushf
xor
sub
out
ss
rorl
es
xchg
shr
mov
es
mov
iret
popa
cmp
cmp
and
popa
cmp
cmp
testl
rcl
es
mov
es
mov
es
cmp
mov
popa
sub
add
cmp
sub
lea
cmp
shll
add
cmp
mov
mov
popa
sub
cmc
adc
push
inc
push
push
mov
cmpsl
hlt
stos
insl
dec
sbb
xor
inc
cmp
jae
imul
jne
imul
pop
popa
data16
insb
gs
insl
popa
jns
outsl
je
outsl
imul
bound
jb
jae
gs
jb
outsl
data16
outsl
fs
jo,pn
bound
add
add
add
add
add
add
add
add
add
add
sbb
add
add
add
add
add
add
add
push
and
add
add
addb
add
add
add
add
add
add
add
or
add
add
mov
add
pop
add
add
inc
dec
pop
add
add
add
add
add
add
add
add
add
add
add
add
add
add
les
les
popa
cmp
pop
rol
pop
rol
pop
rol
pop
rcrl
pop
les
les
insl
and
push
les
les
les
les
les
les
sub
inc
inc
test
pop
rol
pop
rol
pop
rol
pop
rol
pop
rol
pop
rol
pop
roll
les
les
les
les
repnz
xchg
les
les
les
es
push
ja
daa
les
les
les
ds
les
les
mov
sbb
add
rol
pop
sar
and
pop
rol
pop
rol
pop
rol
pop
rol
pop
rol
pop
roll
les
aaa
pusha
xor
pop
rol
pop
rol
pop
shll
mov
les
les
or
les
les
les
shrl
les
les
les
pop
rol
pop
rol
pop
rol
pop
rol
pop
rol
pop
rol
pop
shll
inc
pop
rol
pop
shll
imul
pop
rol
pop
rol
pop
rol
pop
rol
pop
rol
pop
rol
pop
rol
pop
rol
pop
shr
mov
les
jle
ja
pop
rol
pop
rol
pop
rol
pop
rcll
rol
pop
rol
pop
rcll
dec
les
les
les
les
inc
push
dec
les
add
pop
shll
rol
pop
shrl
aad
pop
rol
pop
rol
pop
rol
pop
rorl
in
les
loopne
or
pop
rol
pop
rol
pop
rol
pop
rol
pop
rcll
jge
les
inc
test
pop
js
pop
rol
pop
rol
pop
sarl
imul
pop
rol
pop
rol
pop
rol
pop
rol
pop
rol
pop
shll
mov
pop
rol
pop
rol
pop
rol
pop
rol
pop
rol
pop
rol
pop
rol
pop
rcr
push
dec
les
aam
lret
roll
rol
pop
rorl
push
shll
push
aad
ror
sbb
rol
pop
rol
pop
rol
pop
rol
pop
rcll
push
in
pop
les
les
les
les
les
les
les
les
les
les
les
les
les
les
stos
mov
les
les
les
les
les
les
add
pop
rol
pop
rol
pop
rol
pop
rol
pop
shl
mov
loop
dec
dec
subl
les
les
les
les
les
les
les
adc
mov
stos
mov
inc
les
les
les
xorb
les
les
les
les
les
add
pop
rol
pop
rol
pop
rol
pop
rcll
xchg
jns
pop
rol
pop
rol
pop
roll
les
les
les
les
adc
pop
les
inc
inc
push
les
and
jnp
pop
rol
pop
rol
pop
rol
pop
rol
pop
roll
lods
bound
in
les
les
cli
repz
les
les
out
loopne
xchg
xchg
les
les
les
les
les
les
push
xchg
ret
rol
pop
rol
pop
rol
pop
roll
ret
rol
pop
rol
pop
rol
pop
rol
pop
shll
push
les
les
les
les
les
les
add
pop
rol
pop
rol
pop
sarl
dec
vmwrite
pop
rol
pop
rol
pop
rol
pop
shll
rol
pop
rol
pop
rol
pop
rol
pop
rol
pop
rol
pop
rol
pop
rol
pop
rol
pop
rol
pop
rol
pop
rol
pop
rol
pop
rol
pop
rol
pop
rol
pop
rol
pop
rol
pop
roll
les
les
les
cltd
cmp
les
les
sahf
or
in
push
pop
rol
pop
rol
pop
rol
pop
shll
rol
pop
rol
pop
rol
pop
rol
pop
rol
pop
rol
pop
rol
pop
rol
pop
rol
pop
shll
aas
les
inc
jnp
mov
jno
les
stos
mov
les
rclb
pop
push
sbb
out
pop
roll
lea
mov
jmp
pop
les
push
daa
mov
inc
les
les
les
xorb
les
les
les
les
les
les
les
les
mov
rcrl
push
xor
pop
rol
pop
rol
pop
rol
pop
rorl
les
test
xor
pop
rol
pop
rol
pop
rol
pop
rcll
imul
mov
les
les
les
les
les
les
les
out
fstpt
les
les
les
les
les
les
add
mov
jbe
les
and
inc
push
inc
in
pop
shrl
push
les
les
les
enter
pop
rol
pop
rol
jae
adc
inc
pop
rol
pop
rol
pop
rol
pop
rol
pop
rol
pop
rol
pop
rol
pop
rol
pop
ror
push
les
fwait
bound
