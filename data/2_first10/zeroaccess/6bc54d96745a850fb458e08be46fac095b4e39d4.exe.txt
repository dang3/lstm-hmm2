push
mov
sub
mov
mov
inc
mov
sbbl
jmp
xchg
xor
xchg
and
mov
adc
adc
adc
adc
das
cmpsb
sbb
lea
push
repz
lods
add
lea
ret
pop
rorb
mov
hlt
test
popf
fldcw
push
rorb
scas
inc
sbb
scas
ror
arpl
icebp
dec
js
mov
adc
js
dec
cmp
mov
jns
pop
lahf
or
inc
les
call
sub
movsb
fsts
pop
mov
fidivrs
xor
inc
dec
xchg
in
xor
mov
shlb
stos
iret
mov
cltd
cmp
mov
lock
mov
xchg
or
push
divl
inc
cwtl
jmp
mov
and
mov
and
pop
nop
orl
cmpsb
cwtl
ret
movsl
sub
pusha
cmp
dec
mov
imul
insl
xchg
sub
lock
loopne
pop
jae
loopne
jp
ja
mov
scas
pop
add
arpl
insl
daa
clc
in
jne
out
mov
xchg
pusha
xchg
mov
jbe
imul
daa
call
js
inc
cmp
adc
mov
jecxz
test
dec
or
cmp
das
cmp
xchg
les
loope
pop
clc
mov
aad
cmc
lods
jl
sub
mov
loop
or
pop
fldenv
int3
dec
xchg
cmp
cli
adc
sub
add
mov
scas
mov
mov
cmp
enter
into
sbb
xchg
xchg
cld
imul
icebp
xor
jae
repnz
dec
fsubr
lock
rcrl
xor
adc
sbbb
push
dec
xlat
xor
daa
push
inc
popf
and
pop
adc
mov
jp
sub
jno
lods
push
cs
dec
lahf
mov
out
repz
cmpsb
cwtl
xchg
lret
mov
pop
addb
outsl
in
sbb
sbb
push
mov
loope
xor
pop
cmp
mov
iret
xor
or
fidivs
sbb
push
std
mov
std
rcll
movsb
add
xor
fsts
std
pop
xor
in
ljmp
ja
into
outsb
aaa
pop
push
inc
testb
and
cmpsb
icebp
push
mov
mov
shll
cwtl
popf
pop
xor
out
adc
push
cmp
mov
add
inc
jl
fadds
stos
aad
mov
jns
popa
outsb
adc
pop
cmp
fmull
mov
cmc
rcrl
out
or
mov
mov
mov
dec
ljmp
insl
xchg
je
out
sbb
push
jnp
cmp
pushf
dec
jo
call
add
sbb
adc
lahf
std
push
cmpsb
dec
sahf
sbb
jge
or
xchg
inc
xchg
mov
or
sub
stos
mov
mov
pop
sbb
mov
add
push
and
xor
pop
nop
pop
cltd
adc
ds
pushf
lods
cli
xchg
inc
sahf
icebp
loope
or
nop
cmp
mov
cld
imul
shl
les
test
adc
mov
into
jb
ret
jge
movl
mov
sbb
mov
orl
orl
mov
and
mov
mov
cmpl
mov
mov
jmp
mov
jbe
pushl
pushl
pushl
call
mov
mov
add
adc
movzwl
sub
dec
or
xor
mov
add
adc
mov
cmpl
movl
mov
jmp
movl
jb
push
push
call
xor
mov
mov
and
mov
or
mov
xor
sub
xor
mov
mov
xorl
sub
mov
movl
sbb
cmpl
mov
not
jmp
mov
jg
pushl
call
xor
or
mov
sub
or
and
dec
mov
or
xor
subl
mov
cmpl
movl
mov
movl
jmp
mov
movl
jb
push
call
or
mov
xor
movzwl
and
sub
sub
adc
sbbl
or
orl
orl
adcl
lea
mov
mov
sub
imul
mov
or
mov
or
jmp
and
sub
sbb
sbb
fs
lods
jnp
or
adc
adc
cmp
ret
mov
pushf
add
cmp
in
pop
jno
dec
xor
fwait
in
lods
lret
out
mov
adc
mov
ds
inc
and
mov
hlt
adc
inc
pop
lret
or
add
cmpsl
inc
cld
iret
push
mov
ret
cmc
mov
cmp
xor
xchg
je
xchg
or
es
inc
inc
xchg
xchg
adc
fwait
insl
popf
incl
inc
data16
lahf
imul
add
loopne
lahf
adc
jns
mov
das
pop
lods
pushf
arpl
inc
and
jle
aam
out
jo
jl
fdecstp
shlb
divl
inc
sub
js
xor
pop
cs
rcl
mov
mov
loope
pushf
add
repnz
or
scas
mov
jge
mov
repz
rcrb
sbb
xor
test
stc
pusha
cmp
rcrl
adc
inc
scas
cmp
mov
test
dec
inc
shlb
jmp
push
and
jl
pusha
out
mov
xchg
shl
cmp
popa
fisttpll
jo
in
gs
lods
clc
repz
mov
push
and
repz
jecxz
out
cmp
sbb
jae
lcall
arpl
jmp
lret
pushf
scas
sub
js
adc
fs
ja
adcb
ds
ds
rcl
dec
dec
adc
xchg
pop
push
imul
push
mov
adc
sub
mov
ficomps
mov
cmp
inc
adc
movsl
jne
push
push
scas
mov
adc
mov
sub
and
pop
fwait
loope
xor
iret
mov
add
shlb
inc
aaa
or
jmp
insl
sahf
and
mov
in
in
lret
sub
xchg
addl
movsl
scas
adc
cmp
or
inc
pavgw
dec
and
xor
pushf
mov
in
fs
sbb
rcll
cmp
cmp
mov
inc
outsb
push
inc
xchg
and
pusha
mov
push
mov
ljmp
push
pop
lea
jecxz
pop
xor
dec
js
sbb
js
mov
rcrb
push
jb
cmp
mov
or
adc
hlt
ret
mov
push
sub
lcall
sub
rol
xchg
or
adc
jge
mov
pop
dec
dec
rorl
add
dec
or
mov
cmc
mov
jne
mov
dec
pop
dec
inc
pop
and
jbe
fidivrs
or
push
push
pusha
sbb
inc
iret
fstpt
add
mov
adc
add
sbb
iret
mov
repnz
fnsave
out
cmp
xor
lea
pop
sbb
movsl
rol
fnsave
fisttpl
lcall
jg
fidivrl
jae
mov
hlt
fnstcw
shl
ljmp
in
mov
cmp
mov
sub
or
mov
jmp
push
pop
and
pop
leave
and
sti
lcall
pop
adc
adc
adc
mov
adc
dec
fstl
add
insb
shlb
push
inc
cmp
mov
rorl
test
repz
into
or
lcall
xor
std
loopne
xchg
pusha
sbb
bnd
inc
stos
or
push
fwait
fs
call
jne
daa
arpl
ljmp
dec
test
aad
jle
lea
mov
pushf
repnz
xchg
insb
shrl
dec
fnstcw
push
sbb
out
push
xchg
mov
mov
mov
ret
inc
je
push
div
pushf
dec
and
in
mov
adcl
adc
sahf
fwait
add
mov
in
jbe
stos
mov
sahf
mov
cld
cli
inc
mov
pop
fcoms
nop
jl
out
cmpsl
jnp
jl
dec
shlb
dec
mov
sahf
lods
aad
imul
pop
cmp
dec
push
jbe
bound
testl
pushl
lret
sub
sbb
pop
xlat
xchg
clc
enter
inc
mov
mov
loopne
pusha
cltd
frstor
dec
or
fidivrl
inc
lcall
test
cmp
xchg
add
lods
addb
sbb
pop
jbe
push
or
pop
out
in
xor
outsb
gs
dec
inc
or
mov
into
hlt
daa
push
jmp
fs
mov
in
inc
push
lret
das
cmp
rclb
lods
in
push
jb
sub
fistl
ja
add
adc
and
rclb
fcomps
enter
add
fcompl
and
adc
sub
fbld
test
aam
xor
jecxz
movsb
fs
cmpsb
mov
pop
cltd
pop
aaa
ret
adc
inc
mov
mov
idivl
call
push
and
jp
inc
gs
push
xor
leave
or
inc
rcrb
and
jge
dec
cmp
jnp
sub
shlb
inc
pop
iret
outsl
jp
lock
dec
roll
inc
repz
cs
js
mov
rcrb
mov
daa
mov
push
push
jmp
inc
leave
jge
or
push
es
xchg
xchg
cmp
repz
push
push
mov
mov
js
int
in
xor
cmpsb
jns
adc
loopne
in
jno
int
push
pop
fucomi
jns
pop
dec
push
cwtl
push
jmp
mov
cs
hlt
sbb
fldt
loope
pop
lods
and
xor
mov
inc
out
and
push
outsb
cmp
mov
jle
push
push
in
mov
outsb
test
mov
pop
gs
add
dec
xchg
je
push
les
fistl
loop
dec
incb
xor
push
ja
scas
fistl
mov
sbbl
or
pusha
and
cmp
je
and
mov
cmc
jl
mov
mov
pop
pop
dec
je
add
mov
mov
sub
or
mov
cmpl
mov
mov
movl
mov
jmp
mov
mov
jl
push
pushl
push
pushl
push
call
not
adc
adc
mov
sub
mov
movzbl
sub
mov
mov
shrd
shr
andl
mov
adc
mov
xor
addl
xor
or
mov
movl
xor
or
sbb
movl
movl
movl
xor
add
mov
adc
movl
movl
movl
cmpl
movl
notl
movl
movl
jmp
not
jge
push
push
pushl
push
push
call
addl
xor
movl
addl
adcl
movl
add
movl
and
movl
sub
movl
movl
movl
movl
sbb
movl
movl
movl
mov
xor
movl
movl
subl
movl
add
movl
movl
movl
movl
cmpl
movl
movl
jmp
movl
movzwl
jne
push
call
addl
andl
adcl
or
subl
andl
cmpl
movl
movl
jmp
not
ja
push
call
subl
andl
subl
orl
subl
andl
mov
shl
orl
mov
push
subl
push
xorl
push
xorl
jmp
and
pop
and
push
xor
mov
adc
adc
jb
loop
push
xchg
out
sub
jbe
mov
inc
leave
movsl
ja
leave
lock
jnp
pop
cs
add
inc
cmp
sbb
push
clc
in
nop
pop
inc
out
mov
mov
push
adc
cmp
xor
add
call
mov
hlt
jnp
out
jne
push
cmp
mov
or
fwait
cmp
inc
xchg
adc
sub
and
xchg
mov
jnp
sahf
push
inc
jne
add
jne
add
aad
icebp
out
pushl
incb
test
jbe
add
cs
mov
and
iret
cmpb
mov
frstpm(287
ljmp
pop
sub
inc
dec
inc
test
nop
cmp
leave
sub
movsb
ds
push
out
xchg
jle
cmp
sbb
and
daa
and
andl
iret
mov
ret
sub
xchg
lea
bound
adc
movsb
jns
and
sub
push
fstpt
ss
cwtl
mov
jns
push
and
inc
int
mov
cmpsb
dec
or
mov
sub
xor
pop
movsl
jae
or
mov
xchg
add
xor
in
sub
mov
xchg
ficompl
fisubl
je
lock
xor
cmp
daa
add
loop
and
dec
sub
xor
sbb
adc
dec
enter
cs
or
hlt
orb
and
jns
hlt
push
ret
sbb
popf
mov
pusha
stos
lock
xlat
push
arpl
adc
ss
test
push
mov
ds
and
arpl
jbe
add
and
bound
adc
mov
lret
mov
fldl
add
lcall
popa
scas
adc
xor
sbbl
cmp
mov
add
mov
sbb
pop
mov
test
rcrl
dec
rolb
mov
mov
scas
stos
dec
sbb
out
iret
pop
sarl
push
repnz
les
arpl
adc
pusha
inc
xchg
ret
lds
jns
aad
or
stos
sub
lret
jle
pop
fmul
add
sahf
pop
jp
frstor
sub
test
sbb
test
mov
out
or
or
lcall
popa
adc
cmc
fstps
neg
int
xchg
ret
fsubl
jno
mov
xor
mov
out
mov
jne
adc
push
dec
jbe
jmp
fdiv
dec
or
push
push
clc
push
push
out
in
jge
push
lods
sub
and
scas
out
push
nop
inc
aad
add
das
loopne
mov
jmp
adcl
adc
push
mov
sbb
jo
sarb
call
daa
repz
data16
xchg
lods
mov
push
call
mov
sbb
mov
mov
xor
xor
not
jmp
sub
sub
jno
mov
adc
adc
jne
ljmp
ret
sahf
sub
mov
cmp
das
pop
mov
push
mov
test
cmp
leave
and
dec
cmp
enter
push
or
sub
movsb
mov
cmp
cmp
xchg
add
cmp
pusha
jb
mov
orl
xor
mov
into
jno
mov
ljmp
andb
push
or
insl
ss
les
xor
gs
lcall
xchg
repnz
pop
filds
sbb
cmpsb
and
aaa
in
push
jmp
sahf
and
fsubrl
lret
mov
in
or
or
ss
mov
lea
iret
daa
mov
aas
ja
mov
xchg
movsb
mov
out
push
or
mov
clc
pop
xor
cltd
es
jecxz
pop
push
leave
xor
jl
aaa
dec
adc
fdiv
sbb
repz
fdivl
pop
lds
sbb
in
pop
cltd
in
fisubl
or
aas
cmp
xor
rorb
adc
test
mov
out
jns
popf
jae
dec
mov
dec
mov
imul
xor
adc
mov
mov
test
jnp
sbb
xchg
xor
and
cmpsb
jl
xchg
stc
inc
jg
js
xor
inc
sti
sbb
fldl
and
xor
jo
mov
loope
push
push
scas
or
and
sbb
cmpsb
js
fidivrl
or
xchg
xchg
mov
loope
leave
inc
in
cmp
jne
pop
mov
sub
fadds
mov
add
jbe
sbb
sub
lahf
add
and
lret
mov
mov
sub
int
mov
sbb
inc
inc
aas
stos
mov
pusha
mov
sub
cmp
cmp
and
ret
les
and
sub
int3
or
rcrb
xor
jae
fcompl
rorb
daa
jl
ss
dec
shld
shl
das
add
movsl
mov
and
pop
ss
leave
cli
jl
dec
or
mov
cwtl
movsl
xchg
ja
lock
pop
aad
pushl
insl
les
or
sub
dec
sub
xor
pop
int3
test
xchg
pushf
xchg
aam
lods
dec
pop
inc
mov
lods
sti
jle
fwait
add
and
mov
mov
cmp
adc
testl
cmp
pusha
push
mov
or
scas
js
pop
jg
lcall
push
pop
lahf
rcr
jge
push
subl
mov
xchg
jnp
fld
adc
cmp
pop
add
rolb
dec
pushf
pop
jl
mov
mov
pop
cld
sbb
iret
loop
pop
inc
into
xchg
and
mov
aas
inc
out
and
jb
call
inc
mov
mov
insb
fnstcw
ret
add
mov
xor
add
add
mov
sub
or
mov
mov
sub
mov
lea
xor
or
mov
and
mov
adc
mov
adcl
or
and
addl
mov
or
adcl
xor
movl
cmp
movl
jne
mov
mov
sub
sub
mov
sbb
mov
shrd
xorl
shr
mov
or
mov
movl
shl
adcl
xor
xorl
xor
addl
or
movl
mov
movl
cmp
jne
adc
mov
mov
mov
sub
add
mov
xor
sbb
mov
cmpl
movl
mov
jmp
notl
jbe
push
pushl
pushl
pushl
pushl
push
push
call
xor
subl
notl
or
mov
sbb
mov
cmpl
movl
movzwl
mov
jmp
movl
jle
push
call
sbbl
xor
neg
subl
sbb
mov
orl
shrd
subl
mov
dec
mov
addl
xor
shr
xor
mov
sbbl
xor
adcl
or
xorl
shl
xor
sub
and
mov
and
mov
xor
add
xor
mov
xorl
add
mov
neg
mov
adc
mov
and
shrd
orl
shr
mov
mov
add
mov
mov
xor
mov
mov
adc
xor
shl
negl
xor
cmpl
mov
mov
mov
jmp
movl
jb
pushl
push
push
pushl
pushl
push
push
push
pushl
pushl
pushl
pushl
pushl
call
sub
sbb
subl
sbbl
neg
adcl
xor
xor
xor
mov
subl
or
mov
add
jmp
lcall
imul
sbb
popf
repz
adc
adc
cli
cld
fucomp
push
pushf
cmp
mov
mov
jo
fsubs
cmp
xlat
mov
and
fs
or
jne
dec
lods
data16
lahf
and
jnp
ljmp
sbb
adc
stos
std
lock
push
jge
orb
cmp
dec
and
dec
and
and
mov
not
es
cmp
fldt
clc
adc
or
xlat
fidivl
push
cli
mov
addr16
dec
out
movsl
mov
out
cwtl
sbb
and
rorb
cmp
and
clc
cmp
out
arpl
xor
and
xor
aaa
repnz
out
mov
and
iret
push
nop
lds
jg
ror
bound
sti
ret
sbb
sahf
test
les
mov
adc
and
pop
jmp
sub
lock
push
lock
sbb
icebp
xor
arpl
push
test
mov
in
jbe
jmp
mov
icebp
pop
mov
lds
stc
inc
or
cmc
mov
lret
loope
cli
lods
or
jmp
outsb
jo
mov
pusha
xor
jl
repnz
iret
jecxz
ficoml
aas
xchg
jno
jmp
aaa
std
pop
sbb
xchg
movsl
ljmp
pusha
lret
repnz
ss
add
push
xchg
mov
xchg
loope
pop
cmp
sub
mov
push
nop
cmc
ljmp
ror
frstor
pop
mov
and
ret
mov
mov
ljmp
xchg
cmpsb
sub
popa
sti
mov
add
pushf
sbb
jecxz
into
jae
lock
dec
mov
ror
jae
gs
inc
pop
mov
add
and
xchg
sti
add
inc
fdivs
push
push
and
inc
mov
lods
in
push
fst
idivl
pop
fimull
shl
jecxz
int3
das
mov
dec
sbb
test
inc
mov
sbb
xor
sahf
loop
mov
or
mov
jg
or
pop
js
lret
mov
mov
pop
out
test
lret
adcl
cmp
jge
fwait
pushf
mov
pop
cli
dec
lret
lret
dec
mov
push
inc
cmpb
push
cwtl
xor
mov
adc
mov
push
cld
shrb
mov
jp
inc
or
rcl
inc
push
push
cmp
mov
loop
aad
sub
sarl
xor
xor
inc
cmp
jno
rolb
jae
adc
jle
jns
negb
cmp
xor
mov
shll
sub
cltd
sbb
decl
xor
ljmp
push
or
out
adc
mov
stc
or
test
push
mov
popf
cmpsb
sbb
jne
out
in
inc
arpl
jg
fcmovu
enter
pop
sub
push
push
out
jno
inc
cmp
enter
dec
push
adcb
push
adc
jne
add
xchg
cltd
bound
and
push
jo
aaa
sub
adc
adc
adc
xchg
pop
cltd
sarl
inc
jecxz
test
clc
push
and
test
xchg
pusha
bound
rcll
xchg
enter
jbe
repz
loope
pop
cmp
mov
or
enter
lods
sarl
adc
push
fdiv
dec
cmp
cmpsb
icebp
das
push
aam
bound
push
jecxz
pop
in
imulb
shll
pusha
mov
outsl
sub
add
adc
mov
sbb
lret
adc
int
sbb
scas
push
push
pop
sbb
jge
jnp
sahf
add
test
das
cmp
inc
das
sbb
xor
dec
mov
stc
aaa
jnp
fistps
mov
push
add
in
repnz
mov
stos
xchg
adc
and
scas
idiv
pop
cltd
aas
lret
popa
cltd
or
adc
cli
test
jns
out
adc
aam
push
cmp
cmp
xchg
shl
mov
adc
ja
lods
jge
fadds
mov
sub
dec
push
jecxz
jp
ret
lods
jno
ss
mov
mov
pop
push
mov
xchg
iret
dec
imul
hlt
bound
lock
or
mov
bound
add
xlat
in
pop
mov
jne
and
popa
sti
xor
mov
pop
inc
scas
cwtl
ds
mov
out
add
pop
imul
leave
lea
std
addr16
sub
cmp
cmp
ds
pop
and
lret
inc
sbb
inc
mov
je
scas
push
adc
into
pop
pusha
xchg
or
pusha
pop
push
ja
sub
shrb
mov
add
jmp
cld
mov
out
mov
sub
cmp
js
pop
popf
sbbl
clc
mov
sub
insl
mov
fucom
test
lret
in
mov
lods
dec
push
inc
cli
out
decb
xor
push
divl
and
mov
shrb
int
shlb
daa
das
adc
and
mov
lcall
mov
sub
pop
sbb
xchg
sub
cltd
push
add
shll
add
sub
jo
sbb
dec
mov
jbe
cli
iret
adc
jecxz
mov
cltd
pop
mov
and
push
xchg
adc
xor
and
shlb
in
insl
fisttpl
and
in
addr16
cmp
jno
xchg
push
jmp
pop
out
mov
cmpsl
adc
jmp
std
into
sub
pop
insl
cmpsb
cmp
xchg
outsl
popa
push
scas
inc
lea
scas
out
sub
flds
mov
dec
or
xchg
add
les
stos
cld
fsqrt
loopne
add
mov
jne
mov
xchg
lret
dec
xor
adc
push
das
ficompl
lds
xchg
dec
xor
dec
cwtl
mov
mov
inc
xchg
popa
lock
mov
jne
aad
xchg
mov
add
and
gs
cwtl
jp
arpl
fdivrs
or
imul
mov
insl
test
enter
lods
roll
andl
shr
mov
sbb
mov
mov
xor
orl
xor
or
shl
orl
lea
neg
mov
movzbl
add
mov
mov
shrd
subl
shr
mov
cmpl
mov
mov
mov
jmp
mov
movl
jae
push
pushl
pushl
call
dec
not
or
sbb
adcl
sbb
mov
mov
adcl
xor
mov
xor
orl
or
xorl
shl
add
imul
mov
movzwl
xor
mov
mov
shrd
mov
adc
mov
movl
xor
shr
mov
sbb
jmp
out
pop
out
pop
pop
jns
lcall
mov
adc
adc
lock
adc
and
das
outsb
sbb
cmp
jecxz
mov
jo
mov
mov
and
addb
mov
mov
imul
and
push
adc
cld
sti
subb
push
add
icebp
outsl
movsb
jns
push
and
outsb
out
push
data16
and
push
jmp
test
sub
ss
daa
cs
pop
add
or
lcall
dec
xor
js
mov
xchg
add
mov
ret
push
inc
insb
bound
repnz
test
adc
push
enter
repz
roll
add
sub
sbb
bound
stos
cmp
or
xor
mov
xchg
adc
inc
pushf
lods
cmpsl
pop
mov
or
mov
call
dec
mov
in
push
pop
and
mov
enter
aad
test
or
jno
aaa
or
decl
mov
and
xchg
imul
sub
test
and
pop
sarb
inc
loope
jae
xchg
ljmp
jo
and
or
fbld
icebp
xchg
push
fsts
faddp
rol
jecxz
nop
test
mov
sub
pop
add
push
aas
adc
call
add
pop
xor
pop
aad
sahf
iret
in
andl
les
jecxz
xor
lcall
and
divb
jnp
dec
pop
dec
cmp
inc
jp
adc
jge
dec
and
or
push
add
out
xor
pusha
aad
mov
mov
pushf
sub
test
inc
mov
push
lret
loope
mov
cmp
loop
je
js
pop
sbb
xchg
pop
int3
push
gs
in
xchg
ret
outsb
cmp
pop
mov
loope
es
push
addr16
jno
xor
cmp
xor
fcmovnu
or
ret
add
scas
out
xchg
mov
das
mov
jbe
cmp
cmp
inc
mov
fistps
addr16
xor
inc
fdivp
daa
aaa
cld
xchg
sbbl
sti
ret
fadds
out
and
push
add
inc
call
push
sbb
pop
shr
mov
sub
cmovs
and
inc
shr
xor
jg
add
mov
pop
pop
mov
jo
lret
pop
stos
ret
int
call
std
scas
pusha
sub
and
lahf
cmp
add
xchg
mov
data16
in
sub
inc
inc
add
push
sbb
es
or
mov
mov
aam
xor
outsb
in
jae
mov
adc
mov
xor
push
pop
outsb
lds
pop
pushf
dec
sahf
jmp
mov
int
mov
cmpsl
jecxz
int3
pop
in
inc
pop
xchg
push
and
add
push
xor
jle
std
mov
and
ss
inc
test
movsb
adc
xchg
test
sbb
aaa
sub
imul
test
out
push
mov
jne
rclb
jnp
pop
aas
out
repz
jmp
adc
dec
jbe
push
mov
xor
or
orl
shl
sub
movl
mov
movl
cmp
mov
mov
jg
sbb
mov
cmpl
mov
movl
jmp
notl
notl
ja
pushl
pushl
pushl
pushl
push
push
call
adcl
mov
add
sbb
add
and
mov
subl
shrd
mov
cmpl
movl
mov
mov
jmp
movl
ja
push
call
or
mov
mov
adc
movl
mov
add
movl
dec
mov
xor
shl
xor
orl
or
shr
mov
mov
mov
mov
xorl
shrd
shr
mov
sbb
mov
andl
mov
xor
sbbl
xor
or
orl
shl
imul
orl
sub
jmp
mov
dec
mov
shrd
orl
mov
mov
sub
mov
xor
andl
shl
xor
xorl
or
orl
shr
xor
mov
mov
cmpl
mov
mov
jmp
movl
movl
jae
call
and
xor
xor
xor
or
sub
add
subl
mov
mov
sub
imul
adc
sbb
jmp
popa
aad
mov
mov
popf
adc
xchg
adc
adc
orl
mov
or
xchg
lods
shrb
cmp
lods
outsl
mov
std
adc
test
gs
jmp
int3
cmp
cs
mov
js
sbb
ljmp
adc
out
xor
sbb
in
aas
leave
shlb
es
movl
icebp
jmp
jl
stos
jp
dec
fnstcw
dec
dec
ret
int3
sbbb
sub
scas
xor
ret
dec
push
or
sub
notb
sarl
dec
decl
jp
jmp
mov
sub
dec
mov
icebp
dec
jo
or
rolb
lods
xchg
test
jg
out
adc
cmp
adc
stos
fnstcw
test
or
pop
adc
mov
and
push
loopne
imul
cmpsb
push
pop
pop
push
ss
or
sub
bound
and
or
xchg
add
adc
pop
popa
cmp
sbb
mov
rorb
inc
ja
fs
sub
popa
cmp
xchg
push
jl
lret
dec
test
out
pop
pop
cli
pop
lock
iret
adc
pop
iret
mov
aam
cli
mov
mov
fwait
xor
dec
mov
cli
scas
scas
or
je
inc
orl
dec
mov
xchg
shll
jmp
fwait
popf
push
adc
xchg
dec
jno
sub
pop
mov
mov
inc
cmp
je
cli
or
lods
test
sahf
sti
push
ds
fucomi
xchg
repnz
xchg
cwtl
sub
dec
ss
int
aad
mov
xor
push
test
arpl
addl
mov
loop
negb
mov
sub
loopne
or
shl
lock
mov
xchg
hlt
lret
js
mov
xchg
imul
int
or
pop
pushf
jp
mov
outsb
test
add
aaa
es
add
pop
xchg
mov
lods
enter
dec
jl
scas
repnz
adc
je
or
adc
mov
cmc
sub
test
mov
adc
add
pop
mov
rcll
repnz
stc
push
mov
pop
ret
pusha
or
lods
sub
add
dec
enter
xor
lret
xor
loopne
mov
mov
add
sar
mov
bound
stos
into
sbb
shll
dec
xchg
cmp
arpl
add
push
push
jg
inc
mov
sbb
in
xchg
cmc
pop
dec
pop
clc
sti
mov
sbbl
idiv
xchg
in
pushf
inc
leave
mov
inc
mov
cmpl
stc
mov
xchg
or
pmaxsw
pop
stos
jecxz
dec
sbb
imul
dec
js
push
imul
inc
shl
and
jb
sub
es
cmp
push
jmp
dec
dec
leave
mov
cmpl
mov
movl
movl
jmp
notl
je
push
push
call
sub
movzbl
sbb
movzbl
sbb
sub
and
mov
adcl
shrd
sbbl
shr
mov
or
mov
mov
sbb
mov
xor
xor
adcl
or
xorl
shl
add
add
xor
mov
movl
mov
shrd
shr
mov
cmpl
mov
mov
jmp
movl
movl
jbe
push
push
push
push
call
and
xor
add
add
add
movl
xor
add
mov
xor
sub
mov
subl
xor
shl
xor
or
sbb
mov
cmpl
mov
mov
movzbl
jmp
notl
jl
push
pushl
push
push
push
call
sub
adc
sbb
subl
add
movl
adcl
mov
mov
add
movl
cmpl
movzbl
mov
mov
jmp
movl
movl
jl
push
push
push
push
pushl
pushl
push
pushl
call
sbb
sub
add
and
add
sbbl
sub
mov
movl
mov
sbb
movl
mov
mov
mov
or
shrd
subl
shr
cmpl
movl
movl
jmp
movl
jae
pushl
pushl
pushl
call
sbb
add
and
subl
adc
and
adcl
mov
mov
mov
add
mov
subl
xor
shl
and
xor
xorl
or
lea
mov
mov
mov
shrd
shr
mov
mov
shl
mov
xor
xor
or
mov
mov
xor
jmp
or
adc
inc
add
pushf
lods
mov
fcoms
adc
adc
sub
jmp
lods
fdivl
adc
xchg
ret
ret
cltd
or
loope
and
xor
jne
shll
jmp
mov
lods
movb
ja
pop
cmpsb
icebp
pop
outsl
jbe
fistl
cs
adc
mov
outsb
ja
test
enter
les
xchg
and
test
jge
mov
imul
sahf
jmp
and
xchg
mov
cmpsl
xchg
pop
pop
sub
mov
les
roll
xchg
or
dec
stos
es
in
cmpsb
test
pop
pop
adc
xchg
xor
jno
cwtl
jb
add
xchg
mov
int
flds
cmp
mov
xor
dec
fcoms
in
inc
aad
jae
popa
test
fdivs
xor
js
movsl
cld
mov
int
pop
jecxz
adc
add
insb
or
fistpll
fidivrl
pop
call
mov
ja
pushf
xor
pop
cmp
mov
mov
jle
std
cmp
out
mov
scas
inc
ret
sub
and
and
mov
mov
test
push
pop
mov
je
out
inc
add
dec
add
inc
mov
mov
mov
push
xchg
repnz
fs
jb
das
das
jae
iret
pushf
fisttpll
push
mov
subl
jg
sbb
mov
and
outsl
js
popf
fwait
cmp
cld
dec
in
jg
orl
dec
adc
mov
adc
repz
add
sbb
frstor
add
pop
push
inc
add
lock
js
leave
les
repnz
push
movsb
test
daa
sbb
call
fucomip
xchg
daa
jg
mov
push
cmp
lods
or
addr16
pop
daa
mov
imul
test
jle
jo
xor
push
cld
mov
je
push
imul
shl
adc
in
imul
cmp
outsl
sub
sahf
pushf
jecxz
daa
add
pop
mov
ret
out
dec
lret
bound
stc
movsb
jbe
stos
push
mov
int
mov
bswap
mov
ja
outsb
in
outsl
test
lcall
jb
cmc
cmc
xchg
or
pop
popa
push
clc
dec
je
ja
test
out
mov
loop
adc
and
jge
aam
mov
mov
jo
sahf
jnp
in
leave
repz
test
sbb
nop
fstps
sbb
adc
lock
or
outsb
mov
jecxz
cltd
mov
mov
fisubrs
mov
imul
mov
or
pop
cwtl
sbb
xlat
int
clc
inc
sub
int
cltd
andb
pop
sbb
sahf
loope
adc
jae
popf
mov
ss
movsb
adc
lock
and
adc
lds
mov
out
lahf
mov
xor
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
lea
mov
mov
mov
shrd
shr
mov
mov
shl
mov
xor
xor
or
mov
mov
or
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
lea
jmp
gs
test
sbb
xchg
js
or
and
adc
adc
adc
sub
pop
mov
xchg
aad
je
add
mov
push
cmp
inc
add
daa
nop
xor
pop
mov
cld
loopne
bound
pop
js
sub
jmp
loope
fsts
arpl
mov
dec
xor
jne
and
fs
insl
data16
enter
jnp
idivl
sub
in
stos
and
dec
fdivrl
lods
es
mov
mov
mov
dec
sub
lock
cli
push
into
jmp
jl
pushf
jle
push
addr16
pop
stc
inc
pop
out
inc
mov
xlat
jge
inc
push
icebp
lods
insl
push
sbb
dec
les
cmc
sbb
mov
psubusw
push
sti
push
push
cmp
ds
cs
lcall
subl
lahf
jno
mulb
add
push
imul
inc
or
bound
adc
push
loopne
arpl
cmpsb
mov
push
mov
jne
rcr
jb
cmp
fdivr
ss
daa
inc
pop
sbb
push
mov
test
cli
adc
js
bound
pop
add
and
fstpl
movsl
cli
cmp
add
xchg
je
jmp
lahf
jecxz
xlat
mov
popf
add
lahf
mov
movsb
bound
xchg
sub
mov
mov
insb
jmp
dec
mov
shll
adc
push
stc
jmp
push
fs
shrb
push
stos
ja
mov
sahf
cvtpi2ps
ret
and
in
orb
jo
aaa
rcll
xor
add
ss
repnz
xchg
jno
sub
xor
pop
mov
pop
mov
sbb
jb
aaa
cwtl
fwait
xchg
jmp
push
dec
jne
or
lds
fidivl
sbbl
jns
das
mov
jecxz
loope
stos
mov
mov
imul
lods
cmp
sti
mov
mov
cmpsl
dec
out
into
sbb
xchg
add
outsl
mov
jge
mov
addr16
popa
test
push
ret
in
sub
jb
aas
je
mov
fstpt
test
in
push
inc
mov
xor
lock
sbb
push
add
xor
xchg
test
sub
cmp
xchg
mov
adc
dec
xor
sub
mov
imul
mov
and
fnstenv
or
jl
cli
add
adc
in
push
inc
xor
out
rorl
mov
movsb
in
add
repz
inc
addr16
stos
hlt
xchg
sub
pop
arpl
add
xor
in
mov
in
je
mov
adc
mov
adc
or
rcrb
sarb
sbb
lea
into
cmp
jns
dec
dec
xor
jge
loope
fnsave
and
psubw
cmpl
xor
aam
iret
ds
adc
call
jle
sbb
push
cld
inc
lock
mov
imul
out
call
jge
jg
mov
int3
mov
mov
shrd
shr
mov
mov
xor
shl
mov
xor
or
mov
mov
add
mov
mov
shrd
shr
mov
mov
xor
xor
or
jmp
cli
mov
cltd
mov
pushf
adc
adc
adc
lock
jp
ds
ret
aaa
mov
cwtl
fs
out
xchg
mov
daa
mov
jge
lret
enter
lcall
mov
es
cwtl
pop
popf
pushf
les
jp
je
dec
insb
push
pop
jmp
push
je
cs
sarl
outsb
movsl
leave
or
cmp
ljmp
negb
jbe
rclb
xchg
cmp
or
mov
jnp
scas
addr16
mov
mov
int3
sbb
lea
pop
hlt
pop
std
fistps
imul
mov
roll
mov
aas
mov
mov
loopne
xchg
sub
int
or
test
sbb
lret
sbb
fs
out
mov
fs
xchg
sarl
rcrl
ljmp
imul
std
jle
out
cs
sbb
test
mov
push
xchg
mov
pop
shll
push
pop
lahf
enter
push
cmp
inc
lret
enter
mov
insl
movsl
jae
shlb
ds
mov
mov
fistl
testb
insl
int
mov
cltd
mov
int
push
sub
loopne
fisttpll
pop
inc
ret
dec
sbb
es
mov
dec
add
ret
enter
ljmp
sbb
jmp
mov
mov
adc
add
sub
cmc
push
sti
fsubr
lods
shll
inc
int
out
rcrl
cmp
pop
mov
add
imull
mov
xor
or
dec
push
inc
and
xchg
pop
daa
out
int
mov
pop
cmp
fwait
sbb
jne
add
jl
jno
cmp
inc
stos
jns
test
arpl
push
cmc
mov
push
or
xchg
inc
push
loopne
sahf
subl
loope
insl
mov
aas
sub
pop
sbb
dec
dec
scas
mov
push
icebp
mov
jno
xor
mov
mov
xor
cs
repz
test
dec
adc
xchg
movsb
xor
dec
es
cli
loope
dec
daa
jno
pop
in
les
enter
xor
loop
lods
andl
cmp
mov
adc
outsl
pop
push
xor
sub
ljmp
mov
pop
sbb
add
and
out
mov
mov
flds
jne
sarb
sub
xchg
mov
pop
outsb
pop
sbb
and
cmp
cmpsl
jmp
call
sbb
cmp
pop
add
lods
mov
popa
int
lret
hlt
inc
fisubs
dec
sarl
cmc
dec
popa
call
inc
and
cmpsw
lock
mov
lods
xchg
fldenv
push
mov
adc
mov
call
and
push
mov
jle
daa
popa
cmc
in
xchg
iret
jp
jno
cwtl
mov
mov
mov
xor
lea
mov
mov
shl
mov
shrd
shr
mov
mov
xor
xor
or
mov
shl
mov
jmp
in
repz
jmp
les
inc
stos
sub
mov
mov
adc
adc
mov
push
test
shrb
cld
pop
mov
xor
ja
mov
pop
stos
mov
movsb
pop
movsb
pop
add
movl
xchg
andl
lds
sbb
cltd
mov
ja
mov
in
test
dec
fisttpll
test
repnz
dec
cli
mov
sbb
jecxz
pop
fists
cmpsb
jno
jmp
out
push
inc
cli
sub
pop
inc
add
mov
jae
loope
sti
mov
xchg
pop
aas
test
hlt
mov
test
and
adc
out
adc
mov
xor
movsb
mov
xor
testl
xchg
xor
not
in
icebp
cltd
pop
popa
pop
test
push
pop
adc
mov
cli
and
jnp
movswl
or
iret
and
outsb
sbb
cmp
outsb
and
js
jp
or
lea
outsb
int
cld
mov
into
inc
jmp
lea
dec
pop
mov
repz
test
adc
mov
shlb
pushf
lods
and
add
std
mov
insb
popa
popa
out
fwait
push
inc
es
xchg
aas
sbb
mov
or
xchg
testb
push
jmp
mov
jo
stc
jns
sub
and
ja
incb
dec
decb
cmc
movsb
mov
jae
sub
jmp
xchg
xchg
jge
cmc
push
or
mov
negl
xchg
mov
and
rorb
cmp
imul
cmc
divl
adc
push
add
data16
xchg
push
mov
sbb
mov
jecxz
ficoms
cltd
clc
mulb
mov
jne
movb
jmp
push
cmp
fwait
inc
mov
call
add
and
int
outsl
jae
in
sub
adc
orl
inc
cmp
cltd
jbe
pop
jb
add
sub
stos
sti
mov
insb
xchg
fisubrl
js
aam
cmp
xchg
pop
test
fimull
cmp
jl
mov
shlb
arpl
dec
adc
cltd
outsl
jb
popf
cld
push
dec
pop
xor
repnz
adc
das
lods
scas
int
lcall
dec
cmp
cmpsb
lret
cltd
test
cmpsb
sbb
shll
arpl
pop
cwtl
cs
aad
dec
jg
cmp
pusha
push
jmp
push
xchg
xor
dec
lods
or
mov
out
xchg
cltd
jmp
add
jle
mov
dec
shrb
test
ret
xor
or
jo
or
cmp
sbb
movsl
mov
loope
lods
push
mov
push
and
pop
dec
jb
das
rcrl
inc
mov
xchg
ficomps
jl
negw
pop
push
xor
adc
movsb
stos
or
stos
sbb
jno
shl
pop
loope
dec
cmpl
mov
inc
mov
mov
or
mov
or
mov
mov
shrd
shl
shr
mov
mov
xor
mov
xor
or
mov
dec
not
and
xor
mov
mov
xor
or
mov
mov
shrd
shr
mov
mov
mov
xor
mov
xor
shl
mov
or
mov
cmp
je
mov
sub
mov
mov
xor
xor
shrd
shr
mov
mov
mov
mov
xor
or
mov
mov
mov
xor
xor
mov
mov
mov
shrd
shl
jmp
fs
push
add
aaa
sbb
push
push
mov
push
ret
adc
adc
ret
mov
int
cmp
add
mov
mov
mov
add
ljmp
inc
sbb
test
sbbb
push
mov
ss
cltd
jg
dec
lcall
sahf
mov
addr16
test
scas
mov
clc
outsb
add
xchg
and
pop
sbb
icebp
movsl
sbb
leave
lcall
cmp
push
cmpsl
sub
cs
jg
xlat
jge
call
std
in
nop
aam
jno
mov
pop
and
stos
jmp
xchg
mov
pop
push
mov
sbb
cltd
sub
jo
lahf
js
xchg
jns
push
cwtl
or
fbstp
inc
jmp
leave
pop
movsb
dec
lods
adc
pop
aam
fidivrl
int
xchg
dec
push
or
adc
pop
mov
dec
movsb
gs
xchg
mov
rcl
lcall
iret
mov
out
mov
pop
mov
xchg
mov
sbb
xor
and
lcall
push
dec
mov
out
lret
xor
inc
repnz
pushf
xor
or
push
cmpsb
push
stc
xor
jl
aaa
mov
and
movsl
lea
popf
xchg
fsubrl
sbb
mov
aad
popa
inc
push
popa
sub
inc
fwait
int3
pop
add
aas
or
xchg
pop
jb
push
cli
push
psrlq
and
mov
push
ss
test
leave
movsb
fmuls
lret
sub
push
jl
std
setne
push
jp
mov
adc
insb
sbb
enter
cli
psubd
data16
cltd
push
mov
cmp
aas
xor
mov
sub
addr16
adc
je
js
add
cmp
sub
into
add
movsb
xor
jp
hlt
stos
fstpl
push
ljmp
data16
cltd
ficompl
jp
popf
or
je
test
cmpsb
test
ja
xor
dec
imul
out
xchg
outsb
sbb
and
rolb
pusha
inc
dec
jbe
punpckhwd
scas
pop
iret
push
pop
negl
imul
add
das
and
xchg
out
cmc
aad
and
aad
mov
ret
push
std
mov
push
sbb
in
add
push
push
lods
xor
mov
rep
in
icebp
sub
jmp
add
popf
shlb
aam
leave
out
imul
fiadds
or
out
cmp
cmp
fwait
sbb
int
mov
shr
shll
jno
dec
mov
inc
push
mov
push
jno
int3
mov
sbb
push
xchg
and
aam
enter
mov
pop
das
lahf
sub
sbb
cwtl
in
ret
fs
xchg
outsb
add
leave
nop
jecxz
cmp
scas
sbb
xor
pop
fwait
sbb
cmpl
std
lods
aas
lods
push
xchg
push
cmpsl
iret
arpl
adc
jb
out
sub
fcmovb
pop
cld
lock
push
movsb
mov
mov
mov
shll
mov
mov
mov
xor
or
shr
or
cmp
jne
cmp
je
jmp
mov
mov
xor
xor
shrd
shr
mov
mov
mov
mov
xor
or
jmp
lods
dec
sbb
sbb
sbb
and
js
mov
adc
shll
fildll
jmp
add
es
fwait
ss
pop
hlt
lahf
push
cmp
push
add
cmpsl
out
push
sarl
imul
adc
jb
std
adc
stos
mov
mov
icebp
pop
jg
sbb
jp
push
lcall
std
xchg
xchg
inc
pop
gs
cmpsl
imul
or
push
faddp
lds
xchg
cmp
imul
leave
cmp
mov
jp
scas
mov
sahf
imul
movsb
pop
inc
sbb
pop
cs
es
jno
xchg
pop
andl
nop
xchg
add
xchg
lock
inc
rclb
adcl
inc
test
scas
mov
push
mov
xor
push
ja
ss
jle
jns
das
and
add
mov
ja
aam
adc
lods
sbb
jns
dec
xchg
and
cmc
scas
push
cli
lds
push
icebp
add
or
push
push
jecxz
dec
idiv
mov
pusha
dec
inc
sbb
push
jecxz
fmuls
dec
xor
pop
test
xchg
mov
sbb
loop
mov
xchg
jbe
jmp
adc
ds
loopne
add
pop
pop
xorb
mov
out
cmpsb
xor
subl
lret
aad
xchg
push
lock
ss
mov
faddl
shr
add
pop
mov
inc
pushf
and
push
xchg
adc
repnz
nop
xchg
and
int3
and
add
ficoml
jne
push
movsl
cmpsb
punpcklbw
fidivs
sbb
push
adcl
sti
mov
out
cltd
lahf
sarl
cmpsl
arpl
int3
ja
je
cmpsl
jb
mov
add
popa
sub
fs
shrb
jns
and
cmp
and
fwait
aad
push
xchg
mov
aam
fisubs
jl
cmc
adc
insb
xor
xchg
mov
inc
sub
push
mov
and
and
cmpsb
push
leave
jmp
div
pop
mov
outsb
lods
mov
lods
imul
sub
loopne
clc
sti
pop
in
mov
and
fwait
in
enter
mov
mov
lret
jmp
add
lcall
adc
xchg
cli
xor
xchg
push
rdpmc
mov
pushf
lret
mov
pop
jmp
cmp
jle
ficomps
aas
adc
sub
pop
sub
jb
call
pop
fdivrl
or
mov
mov
loope
lods
ret
xchg
lea
mov
and
xor
lea
adc
pop
push
sbb
lock
or
movsb
jb
mov
aas
dec
movb
test
add
or
rorl
mov
jb
xor
fs
dec
lods
ret
scas
stc
lds
mov
add
cmp
mov
scas
ds
fstpl
jmp
push
iret
jl
lds
in
ja
outsl
mov
mov
lods
lods
dec
or
add
or
mov
mov
xor
mov
mov
mov
mov
xor
mov
mov
shrd
shr
mov
mov
mov
shll
xor
mov
or
mov
mov
mov
or
mov
mov
cmp
jne
mov
cmp
je
mov
jmp
scas
mov
mov
sub
stos
pop
or
adc
adc
movb
jle
rorl
jg
mov
pop
ret
jno
in
bts
ret
mov
sti
cmpsl
cwtl
loope
mov
push
xlat
dec
sti
mov
ret
ja
enter
inc
in
cmp
and
and
cmp
xor
add
insb
and
das
outsl
enter
aad
push
ja
notl
cmp
ficompl
dec
ja
out
sub
lahf
bound
sub
inc
push
sbb
popf
cwtl
loope
sbb
inc
pusha
aad
jl
mov
mov
pop
adc
mov
shrb
pop
data16
push
iret
add
xchg
and
sub
xchg
lret
out
std
mov
pop
adc
jg
jo
loopne
dec
test
aas
aad
ja
lods
mov
data16
cltd
xchg
leave
or
scas
sub
cmp
dec
rorb
movb
adc
push
test
test
bound
enter
fldt
sbb
pop
js
xchg
cmp
or
loop
movsb
mov
mov
in
or
rcll
or
and
test
fadds
ljmp
loope
cli
jge
sub
push
test
xlat
imul
sysret
fsts
push
lea
lcall
shr
dec
fwait
fwait
ljmp
in
and
insl
pop
jp
leave
mov
aaa
out
pop
ja
add
dec
fdivrs
xchg
xchg
fwait
mov
lcall
add
movl
iret
in
test
aam
fsubr
out
fisttpll
cmp
inc
int3
int
cmc
mov
insl
mov
jmp
xchg
sbb
lahf
addr16
sbb
mov
pop
nop
and
loopne
mov
ret
dec
addl
xchg
cli
dec
adc
adcl
shlb
stos
xchg
xor
push
enter
or
mov
mov
loop
xchg
cmp
scas
shll
add
idivb
ja
fsubl
mov
xchg
bound
jg
inc
cmp
jge
xlat
nop
sbb
pusha
mov
cmpsb
ss
and
outsb
ret
cmp
fisttpll
imul
jb
mov
icebp
movsl
and
outsb
push
iret
jne
mov
pop
icebp
sahf
fs
cmpsb
mov
adc
imul
mul
mov
popa
hlt
mov
push
inc
push
mov
pop
icebp
movsb
mov
out
and
xchg
inc
jo
dec
sub
shll
test
rcr
cmp
xor
and
pushf
cmp
dec
pop
jl
inc
lret
loop
scas
repz
aas
arpl
dec
cmp
roll
ret
push
adc
pop
push
les
mov
addl
mov
pop
mov
fidivl
cs
ljmp
dec
jl
jno
daa
cmp
mov
and
jge
mov
jo
mov
mov
xlat
xchg
js
lcall
xor
pop
clc
sub
dec
popf
push
and
mov
pop
mov
mov
mov
lea
mov
mov
mov
mov
mov
shrd
mov
mov
xor
shr
mov
xor
shl
or
mov
mov
mov
xor
xor
xor
shld
mov
mov
mov
mov
shl
mov
cmp
jne
mov
cmp
jne
mov
mov
mov
mov
xor
xor
jmp
hlt
xor
pop
and
xchg
ret
hlt
scas
adc
adc
adc
mov
fists
xlat
fcoms
mov
or
mov
stc
inc
mov
addr16
push
xchg
loope
ljmp
xchg
in
jb
loop
mov
jns
fcoml
adc
addr16
cmp
push
negb
xchg
popa
inc
mov
jo
stc
insb
push
enter
jne
and
aaa
pusha
jno
push
ja
pop
push
mov
or
or
mov
test
ret
or
icebp
sub
aas
pop
add
pop
mov
or
test
mov
dec
sub
cmp
rorl
pusha
idivl
adc
and
fiaddl
mov
push
jnp
jo
jmp
icebp
lret
and
aam
icebp
test
jp
jge,pt
leave
or
inc
push
out
js
aaa
mov
xchg
or
popa
dec
or
lret
inc
in
icebp
idivb
xor
sbb
test
or
add
mov
fs
and
sbb
mov
pop
jnp
iret
dec
jmp
loop
adc
mov
rol
wrmsr
mov
shl
sub
push
xchg
outsb
neg
push
scas
into
std
mov
cld
into
xor
js
mov
add
sbb
xor
lcall
mov
dec
cmc
aad
push
pop
cwtl
rclb
fdivrs
jne
insb
jl
stos
and
sub
les
dec
jne
decl
jbe
inc
insb
add
cmp
jae
cmp
push
js
mov
mov
scas
jge
popa
mov
xchg
insl
fst
jo
and
insb
std
addr16
int3
ss
xchg
popf
iret
int
aad
push
pop
jl
or
mov
jmp
imul
sti
mov
sub
call
xor
or
adc
push
mov
cpuid
movsb
out
inc
cmp
xor
sub
les
gs
mov
xor
mov
sbb
cmp
fistpl
pop
aad
mov
sahf
xlat
orl
ja
dec
mov
jg
inc
or
shlb
ja
into
jle
in
and
pushl
aam
out
stos
ja
ja
cmp
xor
hlt
sbb
jb
mov
sub
and
and
push
push
sti
out
xor
int
mov
iret
lret
dec
dec
push
push
popa
sbb
jl
push
lcall
pop
push
popa
loop
xor
stos
incb
xchg
sub
push
outsb
push
es
decb
jge
out
in
inc
call
test
jge
gs
xchg
lcall
fsubrl
mov
mov
sub
mov
lds
sbb
cmp
mov
leave
mov
das
inc
mov
push
in
sbb
ficompl
sbb
cmpl
in
scas
jae
loop
pop
in
add
dec
lds
aaa
sbb
push
cltd
adc
mov
mov
enter
lods
roll
call
mov
mov
mov
xor
or
mov
shl
mov
mov
or
jmp
inc
jbe
js
js
sub
push
adc
adc
adc
xchg
xor
push
pop
out
lock
shrb
fcompl
les
xor
loopne
les
fcmovu
jl
fisubl
popa
mov
inc
icebp
mov
cwtl
mov
sbb
add
insl
das
pop
mov
xchg
inc
outsl
jnp
stos
cmpsl
pop
js
rcrb
fistl
cli
addr16
pop
mov
cltd
push
xor
lods
ljmp
sti
daa
outsl
push
mov
mov
mov
adc
mov
fs
xor
mov
pop
sbbl
pop
fildl
push
mov
mov
jge
ret
adc
arpl
mov
push
clc
mov
insl
leave
and
vandps
cmp
in
leave
lret
pop
insb
movsb
adc
sub
int
fisubrs
mov
lahf
inc
dec
pop
ret
mov
sub
out
loope
xchg
xchg
shll
aaa
mov
sub
mov
in
dec
addr16
pop
cld
pop
lret
js
ret
js
sub
jl
mov
sbb
jle
pop
dec
ret
cmp
stos
out
enter
int
sub
sbb
out
js
sbb
lcall
and
lods
pusha
dec
inc
add
add
dec
inc
xor
mov
leave
imul
adc
add
int3
data16
clc
pop
test
in
dec
push
test
pop
add
mov
jne
stos
imul
push
jo
enter
mov
sbb
daa
xor
push
cmc
mov
inc
jne
mov
mov
out
jg
mov
js
xchg
mov
lods
adc
mov
add
pushf
pop
jecxz
or
cmp
jnp
and
and
loopne
mov
jp
mov
cltd
mov
push
imul
shll
sub
and
test
jno
ds
xchg
adcb
push
pop
push
cs
or
sub
shll
rcl
je
sbb
xchg
sahf
dec
sbb
add
ss
push
and
scas
fs
cmc
pusha
push
cmpsl
movsl
stos
adc
in
out
out
fdivs
lock
es
cmp
dec
out
adc
pop
xor
inc
cmc
sub
outsb
inc
bound
and
loopne
inc
lcall
cmp
lret
inc
or
pop
mov
pop
in
xchg
je
clc
pop
xchg
add
dec
test
bnd
push
cmpsb
shrb
inc
push
or
clc
dec
pop
scas
mov
clc
lea
add
loope
cltd
push
shl
add
cmp
js
dec
push
mov
add
mov
lahf
mov
sbb
adcl
cwtl
lret
mov
sahf
shrb
mov
jae
in
mov
mov
or
loope
lods
dec
movsl
sbb
movq
mov
push
pushl
push
push
call
mov
mov
andl
shrd
shr
shr
xor
push
xor
mov
mov
mov
push
push
push
call
shld
mov
mov
or
mov
shl
or
xor
xor
xor
xor
mov
mov
jmp
mov
add
mov
mov
mov
mov
mov
mov
movzwl
cltd
xor
xor
shld
mov
mov
mov
mov
shl
mov
cmp
jne
mov
cmp
jne
movl
mov
movl
mov
movl
mov
movl
mov
mov
mov
shrd
shr
mov
mov
jmp
stc
xor
mov
sub
icebp
stos
fwait
and
adc
adc
cmp
xor
nop
out
out
std
adc
cmp
rcrb
pushf
pop
scas
jle
xor
js
aam
pop
mov
sub
lret
mov
loope
xor
repz
xchg
loopne
stc
call
add
repz
jle
aas
mov
push
orb
mov
xchg
xchg
sbb
rcrb
divl
aam
push
or
push
xlat
shlb
cmp
ljmp
pop
add
scas
mov
cmpsb
enter
fstpt
inc
out
xchg
inc
enter
shlb
lret
xlat
dec
dec
testb
jbe
sbb
leave
xchg
cmp
shlb
ret
mov
jo
imul
mov
jnp
mov
pop
sub
roll
iret
xchg
dec
mov
pop
jp
imul
punpckhdq
inc
decl
out
das
ror
xchg
mov
fstl
add
push
jne
push
out
imul
inc
mov
and
ja
shlb
rcr
movsl
pushf
int
add
stos
cmc
and
add
inc
mov
mov
les
lock
addr16
jae
inc
sbb
or
cmp
xchg
pop
jns
testl
or
cmp
outsb
pop
push
loop
add
add
outsl
inc
mov
mov
loop
xorl
stos
int
fdivl
mov
fildll
ljmp
int3
negl
fisttpll
xor
std
sbb
aas
pusha
sub
lods
push
adc
arpl
repnz
cs
mov
outsl
imul
inc
lret
ret
sbb
or
sub
andl
push
mov
add
testb
addl
and
andl
push
jmp
or
imul
movsl
pusha
push
jecxz
out
fidivrl
push
mov
loop
ja
add
push
dec
sbb
mov
inc
sub
shll
orl
movsb
adc
jo
adc
mov
popa
cmc
xor
pop
xchg
pop
adc
ja
mov
mov
xchg
jg
mov
dec
nop
fcoml
data16
lea
or
ds
inc
int3
add
sub
int
movsl
and
movsl
fwait
fs
subl
sub
push
out
out
sbb
sub
int
rcl
orl
test
xchg
xor
adcl
pop
mov
dec
pop
in
mov
xchg
dec
cld
jp
cmpsb
push
jne
in
ret
or
dec
push
jge
rolb
aad
in
xchg
mov
ljmp
call
pop
out
test
imul
dec
mov
je
push
cmp
mov
mov
xchg
mov
test
call
inc
inc
xlat
push
fisubrs
add
sub
das
adc
mov
or
add
mov
jmp
xor
and
fidivrs
js
lcall
inc
enter
xchg
jecxz
xor
sarb
fdivl
fs
inc
xor
and
inc
hlt
jmp
outsl
lcall
cmpps
pop
in
pushf
notb
ficomps
lcall
and
inc
sarb
es
adc
sbb
pop
test
insl
mov
pop
push
sub
in
dec
sub
adc
loope
pop
push
popf
enter
dec
jmp
jle
hlt
sbb
or
dec
push
inc
movsl
pushf
icebp
mov
cmpl
stos
adc
or
add
ficoms
and
outsl
jae
xchg
adc
mov
jg
rcrb
in
xchg
dec
movsb
xchg
in
xor
sbb
mov
div
insb
pop
in
das
push
int3
cmpsb
xchg
daa
cmp
popf
pop
push
pushf
enter
xchg
xchg
push
adc
mov
cs
test
jnp
sahf
rolb
cmpps
fsubrp
subb
test
add
xor
fdiv
test
mov
pop
lods
out
imul
mov
leave
lret
stc
into
xchg
cmpsl
leave
or
idivl
mov
in
jp
test
pushf
fbld
adc
dec
js
xchg
in
std
pop
xlat
test
mov
mov
popf
jg
cs
push
data16
cmp
or
jbe
cmp
filds
xor
cli
dec
jb
xchg
dec
mov
lret
imul
or
sti
loop
lret
or
rolb
divb
add
xchg
leave
and
sbb
xchg
lock
arpl
icebp
or
add
sub
mov
xchg
jae
add
call
jmp
into
sub
stc
dec
mov
fdiv
xchg
iret
inc
pop
adc
insb
lods
dec
push
cli
repnz
lcall
or
pop
gs
mov
pop
mov
rcrb
dec
jecxz
sbb
imull
jl
hlt
sbb
cwtl
leave
push
rol
mov
shrl
xor
xor
stos
jmp
and
popa
dec
ficompl
pushf
test
js
cmpsb
imul
lods
adc
stc
sbb
mov
mov
push
lea
jg
cld
xchg
enter
shlb
fwait
iret
mov
and
insb
adc
lds
repnz
mov
test
loopne
inc
popa
mov
ds
push
sub
cli
fimull
sbb
js
jbe
push
sahf
jge
mov
sbb
mov
pop
xchg
fwait
mov
cmp
dec
push
inc
jne
sub
je
jb
pop
mov
loope
inc
push
jae
out
loopne
adc
out
sbb
inc
jb
ja
add
xor
mov
adc
lods
mov
mov
dec
adc
mov
insb
cmc
dec
xchg
add
stos
xchg
cmp
mov
mov
loope
outsb
sub
testl
inc
or
enter
add
or
mov
or
mov
mov
xor
mov
mov
shrd
shr
mov
mov
xor
shl
jmp
adc
and
sbb
mov
nop
adc
adc
adc
scas
shrl
pop
pop
cs
jl
sub
ror
lret
aam
add
jecxz
xchg
xor
mov
push
loopne
ss
push
inc
push
jmp
jmp
mov
rcll
sub
das
sbb
or
lock
aas
mov
test
pop
mov
stos
jb
add
add
and
push
cmp
lret
lock
dec
dec
shlb
shlb
sbb
test
and
rclb
cld
xor
std
pop
cwtl
mov
xchg
mov
bound
and
negb
jnp
mov
sub
lret
mov
and
cs
jb
xchg
repz
mov
fiadds
inc
xchg
push
faddp
es
xchg
mov
pop
mov
ljmp
in
insb
jo
dec
jmp
jnp
repnz
scas
or
imul
lods
xchg
mov
cmp
dec
pop
adcb
movsb
sar
or
ret
xor
inc
pop
movsl
jl
adc
jo
out
fucomi
pop
mov
call
xor
arpl
and
pop
ret
shll
jp
push
cltd
dec
rcr
add
push
scas
inc
ja
cmp
adc
call
lret
jb
adc
insl
sbb
sahf
addr16
push
das
aam
jmp
outsb
jle
xchg
int3
mov
cmp
mov
lea
loop
ja
in
std
pop
mov
insb
and
lods
xchg
mov
xor
cmp
ret
mov
adc
stos
aam
cli
shrl
sti
mov
out
in
mov
into
mov
nop
sbb
xchg
xor
mov
or
cmp
jae
out
dec
cmpsb
mov
mov
and
test
scas
push
out
fisubrs
dec
and
pop
sbb
xchg
adc
es
dec
add
sbb
lock
xorl
mov
push
shrl
clc
filds
fucom
cli
ja
and
inc
loope
xorl
ja
sub
nop
add
inc
push
add
mov
movsb
sub
adc
icebp
add
xor
push
jle
pop
pop
push
or
sbb
fdivrs
push
cld
mov
iret
cmc
ret
in
mov
iret
addl
jecxz
push
add
mov
jmp
aad
mov
jmp
xorl
or
xor
lods
sbb
rclb
cmc
push
subb
dec
addr16
xor
xchg
cwtl
jl
pop
pop
xchg
sub
cmp
iret
add
jp
fisubs
mov
test
sub
mov
fstpl
fwait
inc
test
jg
xchg
cli
fadds
lods
mov
enter
lods
je
and
jp
sbb
ret
repz
mov
dec
and
ja
sbb
push
in
inc
cld
mov
push
cmp
sub
dec
mov
pop
fcmovu
cs
adcl
add
mov
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
mov
mov
or
mov
mov
shrd
shr
mov
mov
xor
xor
or
add
shl
mov
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
mov
mov
add
mov
mov
shrd
shr
mov
mov
xor
shl
mov
xor
or
mov
shrd
add
xor
shr
mov
mov
xor
or
mov
or
shl
mov
mov
xor
jmp
insl
outsb
fstps
ret
mov
fnstcw
jle
mov
adc
adc
push
mov
rcrl
std
nop
push
xor
add
xor
sbb
rdtsc
xor
fs
insb
xchg
pop
add
mov
or
xor
and
jg
jle
scas
push
in
int3
int
jge
mov
es
ja
in
les
call
mov
mov
fmull
push
xor
add
sub
js
jl
mov
cwtl
arpl
dec
andl
std
mov
ficoms
into
popf
or
stc
or
pop
push
int3
ja
insb
adc
arpl
and
mulps
aaa
notb
push
or
jne
in
add
cmp
adc
push
add
cmpsl
repz
inc
rclb
shll
sbb
xlat
cli
jbe
cmp
xchg
test
and
xor
ret
sub
loop
cmp
in
mov
push
jle
je
leave
adc
cmp
push
insb
add
mov
or
adc
out
ja
sub
adc
ret
pop
cld
push
rclb
roll
sub
int3
sub
adc
cltd
movsb
cmp
mov
sahf
xchg
inc
cmp
fisubs
stos
jae
mov
js
leave
or
adc
fwait
das
push
xchg
nop
nop
add
punpcklbw
cmp
pop
aam
push
daa
fnstenv
aas
mov
les
test
cli
aam
sbb
inc
xor
daa
mov
out
push
sbb
jbe
xor
lret
call
sbb
jp
insl
das
test
pop
adc
scas
jnp
pop
add
fnsave
es
jnp
mov
adc
add
imul
ljmp
cmpsl
xor
sub
leave
dec
dec
in
test
or
shrl
mov
ficompl
scas
sar
imul
and
bound
or
out
sub
into
xchg
dec
mov
push
pop
mov
bound
les
dec
inc
mov
imul
lods
push
add
mov
or
inc
xchg
lret
cmpsl
mov
fprem
test
fs
adc
ja
pop
xor
sub
subl
pop
xor
sub
sahf
jb
je
mov
lock
imull
jno
fwait
mov
int3
mov
test
or
fwait
mov
out
int
in
scas
and
xchg
and
pop
xor
dec
aam
cmp
push
adcl
cmpsb
push
cmp
push
rcll
mov
loop
repnz
fwait
loop
sub
jae
pop
lods
inc
inc
fadds
mov
sub
shrb
adc
or
cmp
lock
fcmovnb
mov
imul
test
dec
leave
int
lock
cmpsl
mov
xlat
cmpsl
popa
shlb
mov
push
addr16
mov
cmp
ret
mov
push
ja
dec
push
repnz
sbb
jo
stos
jnp
mov
cmpsb
mov
xor
shrd
shr
mov
mov
mov
mov
xor
or
mov
mov
mov
xor
xor
mov
mov
mov
shrd
shl
or
mov
mov
mov
shll
mov
mov
mov
xor
or
shr
or
cmp
jne
cmp
jne
jmp
mov
jmp
out
sub
pop
popf
and
inc
dec
mov
movl
mov
or
out
or
add
int3
push
cmpsl
test
sub
lock
cmp
movsl
jno
scas
inc
in
push
js
fsub
sub
cmp
movsb
out
mov
mov
aam
sub
clc
sub
cmp
mov
push
imul
mov
lcall
shll
mov
loopne
lret
lret
mov
cwtl
popa
out
lods
pop
push
mov
cmovp
shlb
cmp
sub
ss
loope
cmpsl
lret
outsb
xchg
jl
cmp
xchg
xchg
mov
and
push
push
mov
std
lea
mov
stc
push
imul
mov
sbb
push
int3
xor
push
sub
imul
or
shrb
rol
js
lds
push
adc
cmp
icebp
je
data16
add
mov
push
das
insl
push
and
push
dec
jns
jns
xor
loop
in
dec
cld
cmp
cmp
push
inc
ret
pushf
add
je
lea
push
in
xor
das
imul
mov
inc
out
sbb
lret
cmp
sbb
data16
shl
sub
ret
int
leave
adc
shr
xchg
jl
insb
xor
adc
push
addr16
test
jne
lcall
in
sti
dec
sarb
xor
testb
nop
adc
lods
push
cmp
ja
scas
inc
js
decb
lcall
sbb
mov
cmp
out
jno
sbb
or
jle
inc
pop
shlb
test
adc
sbbl
inc
mov
repnz
test
movsb
xchg
std
inc
out
sub
mov
cmpsb
stos
stc
int3
add
pop
dec
xchg
pop
out
ret
sub
dec
fistpl
adc
sub
popf
xchg
cli
imul
xchg
movsb
leave
add
jae
xlat
xor
pop
inc
and
dec
mov
bound
pusha
adc
call
imull
cmp
pop
sarb
inc
sti
and
xorl
xchg
lods
cmc
andb
mov
movsb
loope
xchg
jmp
nop
push
push
or
stc
sub
sbb
xor
pop
outsl
pop
cmp
or
and
fcoml
aam
cmp
push
push
adc
pop
test
xchg
mov
mov
addr16
mov
sub
out
and
stc
adc
rol
xor
cmp
jns
jnp
xchg
test
sub
rorb
test
fcomps
dec
adc
sub
adc
dec
jmp
lret
ret
jae
push
pop
mov
mov
push
dec
cmpb
sub
lret
imul
cmpsb
nop
shlb
jmp
mov
cmpsb
test
insb
insl
dec
push
arpl
mov
adc
mov
add
inc
fisubs
adc
aam
outsl
and
daa
ds
es
mov
mov
xor
xor
mov
mov
shrd
shr
mov
mov
mov
mov
xor
jmp
xchg
hlt
insb
lret
xor
pop
dec
mov
push
jl
adc
adc
push
push
pop
in
fcompl
jg
mulb
fdivs
jnp
in
sub
cli
shr
adc
js
pop
mov
ljmp
movb
and
pop
mov
addr16
cmc
adc
hlt
pop
aam
xor
arpl
inc
mov
push
scas
xor
repnz
shll
adc
pushf
jg
roll
inc
cmp
mov
jl
outsb
push
xchg
shrb
xorb
dec
out
lcall
add
leave
iret
lret
cmpl
movsl
push
pop
cmp
sbb
das
cs
xor
shrl
jl
pop
inc
cwtl
lcall
cli
jbe
jo
sub
pop
icebp
adc
jae
mov
pop
add
popf
cmovo
mov
cmp
sbbb
lret
push
repz
mov
leave
stc
int3
aas
inc
jns
out
sub
bound
arpl
xchg
lahf
fisttpll
mov
rclb
mov
sbb
mov
int
out
add
lcall
cmp
mov
ret
xor
push
jecxz
lock
andl
fwait
jo
out
mov
test
pop
cmc
test
cmpsl
pushf
mov
push
stc
outsb
mov
ret
push
and
xchg
add
test
nop
gs
mov
rcrl
dec
insl
outsb
mov
ret
xchg
or
or
inc
call
mov
enter
stos
repnz
scas
xor
popa
sbb
ret
jl
clc
jge
cmp
stos
pop
dec
jo
insl
or
punpckldq
sbb
cld
out
push
in
arpl
jbe
fimuls
xor
cltd
in
test
push
pop
adc
sbb
insb
sti
mov
outsl
pushl
lods
push
movsb
repz
sti
sti
xor
es
fistpll
mov
jne
adc
lahf
xor
mov
or
and
jno
add
push
mov
pop
jae
filds
dec
cli
push
outsb
adc
fmull
ret
test
jmp
dec
mov
pop
les
or
call
dec
add
call
mov
out
sub
loope
dec
popa
pop
cmc
es
lods
sub
shl
xor
dec
mov
cmpl
push
pop
mov
fldt
adc
mov
int3
inc
in
loop
lods
icebp
cli
jae
cmp
inc
or
stos
ljmp
mov
mov
push
lods
ja
push
imul
jmp
mov
pop
pop
aas
gs
aam
fsubs
xchg
cmpsb
addr16
cltd
xor
pop
pop
pop
cmp
mov
pop
dec
xlat
adc
jl
jge
adc
cs
mov
negl
int3
out
dec
gs
mov
jmp
fnstenv
cmp
jp
push
rcll
ss
add
and
push
jecxz
aam
mov
pop
repz
out
or
cwtl
adc
pop
fmull
and
fnstsw
cmp
sbb
in
addr16
cld
cmpsb
jo
call
nop
mov
or
loop
mov
mov
or
mov
push
pushl
push
push
call
mov
mov
andl
shrd
shr
shr
xor
push
xor
mov
mov
jmp
inc
jae
jge
sbb
into
lods
jmp
je
adc
adc
xchg
aam
loope
decb
pop
or
pop
jno
enter
adc
add
inc
push
push
mov
sbb
add
and
test
inc
shlb
scas
rcr
pop
popa
and
inc
adc
repnz
jb
data16
push
sbb
je
inc
xchg
les
arpl
test
adc
repz
push
clc
int3
pushf
shrb
mov
add
sbb
push
scas
mov
mov
jge
shr
aam
xor
shrb
mov
cs
inc
fcmovnb
jb
inc
cwtl
jge
ret
lods
add
testb
icebp
cmp
push
xchg
jnp
jl
call
mov
int
and
movhlps
addr16
imul
lods
in
mov
pmaddwd
in
add
ret
push
xchg
arpl
enter
jmp
out
insl
and
mov
add
bnd
cmp
mov
cld
mov
mov
mov
cmpsl
dec
lcall
out
int3
or
fcmovnb
fs
xor
xor
mov
sub
mov
jmp
mov
rclb
sti
fcompl
lea
fmuls
sbb
movsb
pushf
mov
shrb
xchg
add
in
mov
pmuludq
inc
pop
popa
dec
inc
inc
les
addb
in
xor
inc
mov
mov
addr16
mov
or
les
jmp
das
out
mov
es
rcrl
inc
xchg
inc
movsl
icebp
insb
xorl
std
xchg
add
loop
fdivl
push
and
dec
outsl
xchg
lahf
mov
fidivrs
mov
outsl
push
mov
jb
jae
stos
sbb
ret
or
mulb
xor
xor
scas
jno
out
mov
ds
dec
lahf
sub
inc
movsb
es
fwait
insb
add
sahf
roll
jo
fwait
push
or
xchg
push
dec
mov
sbb
pop
sbb
outsl
push
lret
jge
jecxz
mov
xchg
pcmpgtb
inc
testb
das
cwtl
imul
mov
add
xchg
mov
sub
mov
adc
sbb
js,pn
ret
inc
imul
pop
loop
arpl
in
pushl
mov
decb
add
mov
xlat
pop
in
shr
and
and
sub
xor
repnz
rorb
mov
inc
sub
idivb
dec
ret
fldenv
cli
sub
xchg
push
mov
lcall
add
in
jle
mov
addr16
dec
adc
add
lods
adc
enter
lods
jno
jge
cmpsb
scas
mov
test
and
ror
call
inc
push
xchg
pop
pushf
or
push
jg
in
mov
mov
cmp
pop
sbb
and
push
fwait
cli
mov
hlt
in
loop
hlt
popf
addr16
xor
loop
jge
xchg
cmp
and
lds
add
push
jle
mov
ja
xchg
cmp
add
push
push
call
shld
or
shl
or
xor
xor
mov
mov
mov
mov
mov
xor
xor
shrd
shr
mov
mov
mov
mov
shl
or
xor
or
mov
mov
mov
mov
xor
xor
mov
mov
mov
shrd
xor
shr
shl
or
or
cmp
jne
cmp
je
pushl
pushl
pushl
push
push
call
pop
leave
ret
movl
cmp
movl
jae
cmp
movl
jae
adcl
shrd
shr
ret
mov
mov
adc
mov
xor
and
shr
ret
xor
xor
ret
push
mov
sub
movzbl
xor
movl
sub
mov
or
mov
notl
movl
and
mov
inc
movl
movl
dec
movl
movzbl
and
push
sub
movl
movl
push
addl
movl
movzbl
or
mov
cmpl
mov
mov
jmp
movl
ja
push
call
adc
adc
sbb
sbb
and
xor
add
add
sbb
mov
push
andl
push
andl
push
jmp
mov
pop
sbb
cltd
or
jb
adc
adc
fistps
mov
mov
test
outsb
mov
loope
ficomps
push
cli
dec
xchg
popf
in
or
add
rcrb
rol
nop
andb
inc
les
mov
insl
sti
dec
daa
aas
mov
shll
test
inc
mov
icebp
xor
pusha
push
xor
lods
pop
mov
fs
jo
or
sti
dec
sub
mov
imul
cli
xchg
sbb
jmp
xchg
xlat
fidivs
push
jns
xchg
insb
cmp
cltd
sbb
push
mov
dec
mov
in
addr16
daa
outsl
mov
or
pusha
test
loopne
pop
mov
leave
add
mov
jge
daa
hlt
jae
loop
ss
rcr
lcall
lret
and
adc
lret
inc
inc
into
xchg
xor
jmp
mov
xor
and
outsb
inc
sub
ds
mov
or
aas
cmc
cwtl
adc
lcall
mov
mov
arpl
ja
shll
xor
or
jecxz
add
push
nop
add
and
loop
movsl
mov
subl
testb
pop
mov
jns
push
push
sub
fwait
orl
test
aam
inc
rol
mov
push
das
mov
push
cmp
imul
push
xchg
cwtl
push
adc
cmp
or
or
and
push
push
dec
ficoml
fnstsw
push
iret
cmp
adc
sub
inc
mov
call
data16
lret
mov
insl
xlat
sub
in
dec
xlat
pop
popf
repz
adc
rcl
push
pop
jge
mov
fisubrl
fisubrs
jno
shrb
adc
call
leave
fnstsw
pusha
mov
sub
mov
mov
mov
shl
insb
notb
ds
and
mov
sbb
xor
and
arpl
out
and
cmpsb
mov
scas
insb
jp
xchg
outsb
in
dec
fistps
jnp
es
inc
pop
dec
aam
stos
adc
pusha
pop
mov
sub
out
gs
lret
stos
inc
xchg
fnstenv
js
sbb
std
add
cmp
and
jb
jne
test
add
inc
jl
jl
pop
rorl
inc
pop
mov
out
dec
ficoml
ds
test
sub
push
adc
call
or
xor
jno
cmpsb
mov
jle
xor
test
int3
or
mov
sbb
and
aam
scas
hlt
rcrb
movsb
xchg
orb
mov
or
mov
xchg
mov
loopne
rcl
xor
jne
mov
jp
test
pusha
mov
xor
insl
xchg
adc
inc
movsb
xchg
test
outsb
test
inc
sbb
pop
jecxz
xchg
mov
dec
in
xchg
mov
fsub
lret
lret
lahf
pop
sbbl
pop
test
add
ja
iret
pop
add
jmp
ja
sbb
cmpb
jmp
xor
push
pop
push
popf
jmp
iret
dec
mov
dec
mov
imul
nop
aam
pop
pop
gs
jecxz
lcall
xchg
mov
fnsave
js
das
ret
sub
mov
mov
andl
add
xorl
mov
mov
subl
push
sbbl
or
xorl
push
or
xor
xor
push
push
xorl
call
mov
movzbl
xor
mov
orl
push
andl
push
adcl
push
push
call
mov
xor
or
mov
sub
sub
mov
cmpl
movl
mov
movl
jmp
movzwl
mov
ja
push
pushl
call
add
andl
adc
adcl
movzbl
sub
add
and
movl
movl
adcl
movl
movl
movl
cmpl
mov
movl
mov
jmp
movl
mov
je
push
pushl
call
sub
mov
adc
mov
and
sub
movl
mov
cmpl
mov
not
mov
movl
jmp
movl
jg
push
push
push
call
dec
add
adc
neg
mov
adc
mov
sbbl
jmp
mov
and
sbb
scas
push
mov
inc
push
adc
fstps
pop
ja
add
push
repz
push
test
cmovge
and
pop
std
mov
fdivrs
push
xchg
cmp
jle
push
mov
mov
stc
jle
popa
and
jl
and
in
mov
inc
xchg
jnp
outsb
insb
mov
jle
jnp
cltd
subl
pop
mov
in
and
rcrl
adc
dec
cmp
adc
das
mov
movsb
jmp
sahf
sbb
jne
push
rorl
notl
pop
mov
aam
inc
andb
inc
test
push
adcl
xor
add
cmc
hlt
and
mov
jo
add
fistpl
fisubl
xchg
add
cmpsb
imull
mov
pusha
jbe
loope
js
and
push
scas
cld
ret
mov
dec
ret
dec
xchg
cmp
push
and
sti
and
mov
arpl
or
call
add
cmp
rcl
adc
aad
cmp
test
inc
jns
addr16
push
push
cmpsb
mov
jnp
sub
ficompl
int3
mov
ret
pop
adc
not
mov
add
xlat
pop
push
inc
pop
jmp
xchg
dec
dec
and
loope
xor
pusha
ror
outsl
pushf
pop
cmp
push
bound
pop
jmp
cmp
jl
aam
cmp
sarl
pop
hlt
iret
push
xor
mov
roll
mov
xor
jb
dec
cmp
dec
mov
push
add
inc
sub
test
and
push
div
imul
and
pop
jmp
notb
cmp
or
mov
inc
scas
test
loopne
and
pop
jnp
icebp
es
ret
adc
jmp
jmp
in
out
sub
insl
insl
add
lods
in
ja
addb
pop
sub
pushf
fdivl
sbb
sahf
xorb
rcr
mov
ds
dec
dec
sbb
dec
popf
pop
bound
mov
cli
xor
or
sbb
testb
fisttpll
lret
mov
push
in
pop
sub
push
xchg
pushf
push
lcall
dec
xor
xor
popa
int
icebp
iret
ret
push
lock
nop
clc
sbbb
aam
or
je
or
mov
rcrb
mov
xchg
add
dec
mov
xor
mov
repnz
xchg
inc
jl
mov
inc
sarl
popl
push
test
jb
mov
aam
ljmp
lods
lahf
mov
jnp
scas
mulb
and
sbb
out
or
fsubp
and
jle
into
inc
in
xchg
iret
ss
fdivrl
in
frstor
nop
mov
scas
push
jno
jl
sbb
or
pop
xor
dec
ja
data16
jns
lret
pop
shll
push
pusha
sub
xchg
mov
adc
dec
sub
push
jg
and
cli
ds
jae
sub
cwtl
rolb
mov
mov
aam
mov
outsb
mov
adc
jno
in
nop
jg
clc
outsb
ljmp
xor
adc
insb
mov
das
daa
cmc
mov
adc
nop
addb
cltd
fcmove
xor
pop
mov
shlb
repz
xchg
inc
test
jmp
jne
add
movl
adc
andl
or
xor
xor
sbb
mov
or
cmpl
movl
movl
jmp
movl
jle
pushl
call
sbb
adc
sbb
adc
add
xor
xor
adc
mov
or
sub
mov
or
mov
notl
or
or
movl
cmp
jne
movl
cmp
je
movl
movl
mov
mov
xor
xor
and
and
mov
mov
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
add
mov
adc
mov
add
adc
xor
xor
add
mov
adc
mov
cmp
jne
cmp
je
movl
movl
jmp
cld
into
loope
mov
cs
jecxz
lods
bound
adc
sbb
out
inc
shlb
into
sub
mov
sub
mov
push
rcrb
repz
xor
xor
cmp
orl
loope
in
sbb
push
mov
in
push
cmp
or
xchg
enter
daa
push
sbb
icebp
in
xor
add
mov
mov
jle
jne
or
adc
and
in
outsl
cmpsb
or
pop
dec
cmp
add
and
repnz
jne
push
mov
push
sbb
sub
pop
xor
mov
xchg
add
adc
rcll
cld
dec
push
jae
test
sarl
sbb
push
xchg
addr16
insl
bound
jbe
pop
insl
lock
xorl
lds
leave
in
je
add
sbbb
movsb
addr16
pop
push
lcall
js
sbb
mov
mov
sub
and
jmp
push
incb
xchg
idivb
pop
outsl
pop
mov
inc
add
aad
mov
jns
ds
or
mov
pop
out
dec
or
cmp
sbbb
inc
pop
sbb
or
push
cmpsb
xor
xchg
loopne
adc
inc
mov
mov
clc
jmp
adc
outsb
cli
ds
add
or
sahf
repnz
lahf
jmp
pusha
daa
sbb
shrl
enter
mov
sbb
lahf
in
repnz
iret
fldenv
add
xor
mov
dec
test
adc
xchg
pop
jg
subb
cmp
jo
lret
repnz
into
outsb
jbe
and
xchg
dec
mov
cmp
push
ficoms
pop
sbb
les
loope
in
cmpsl
pusha
lret
xor
popf
or
xor
pusha
or
iret
loop
xchg
adc
rcrb
xor
push
jno
jl
sub
and
cmp
shrb
inc
push
lahf
jo
int3
shrl
sarl
and
daa
loop
or
push
repnz
int
xchg
jge
jns
inc
ja
xchg
jmp
pop
test
add
mov
and
push
sub
fs
inc
inc
or
mov
hlt
jne
pusha
or
push
adc
std
pop
and
mov
insb
in
nop
sub
push
pop
xchg
cld
push
out
fsin
push
insl
lds
and
fwait
rcr
xlat
movsb
in
add
roll
pop
inc
call
jb
fldenv
mov
inc
popa
mov
stos
push
adc
cmp
test
cmc
xchg
int3
xlat
out
int
arpl
in
inc
push
adc
inc
jmp
xor
pop
cld
clc
aad
inc
das
mov
push
lret
sub
enter
add
sbb
xchg
mov
and
push
mov
lcall
mov
dec
mov
sub
push
cmp
scas
out
movsl
or
out
enter
ret
xchg
popa
stos
ret
aam
pop
dec
addr16
insl
hlt
ss
lods
push
xor
xchg
jae
mov
jb
pushf
push
leave
mov
test
imul
mov
pop
sub
mov
scas
hlt
xchg
popf
sub
jecxz
movl
push
movl
mov
mov
push
push
push
call
mov
mov
push
push
and
and
push
push
call
jmp
icebp
push
out
sub
repnz
xor
stos
gs
adc
mov
int
sbb
testl
dec
push
cmp
jo
adc
add
pop
sbb
rclb
xchg
das
mov
imul
test
lcall
popf
push
icebp
push
and
jle
jno
xor
aam
cmc
or
sbb
adc
inc
and
cwtl
in
lahf
push
insb
test
xlat
stos
push
aas
push
add
or
out
cmp
dec
icebp
sbb
mov
inc
loope
addr16
jmp
mov
lods
into
push
stos
pop
movsb
mov
daa
jb
outsb
dec
and
sub
sbb
mov
sbb
mov
mov
mov
iret
xchg
out
and
hlt
insb
les
aad
in
ss
test
out
int
out
pop
or
popf
pusha
jns
mov
jge
or
add
cmp
sbb
cmp
push
lret
xlat
jecxz
arpl
pop
adc
dec
jno
scas
js
shlb
lahf
adcb
mov
addr16
jae
push
inc
jo
daa
dec
push
aaa
sbb
jmp
xorl
and
xchg
stos
mov
push
xchg
sbbl
pop
fld1
mov
xchg
clc
add
or
jae
stos
ret
inc
fisubl
inc
mov
cltd
into
sbb
imull
pop
loop
sub
jmp
pop
push
cltd
lock
pop
dec
mov
dec
out
mov
push
jns
xor
iret
add
mov
loopne
sbb
or
adcb
push
js
inc
xchg
sbb
outsb
andl
fisttpl
mov
sub
pop
jno
cwtl
adc
movl
lods
icebp
pop
test
push
fsubrs
out
mov
fisttps
jle
jge
sbb
int
cmc
aam
jge
mov
inc
adc
stos
sti
sub
mov
scas
inc
aas
test
dec
xor
mov
outsl
jmp
add
sbb
dec
mov
stc
push
int3
jb
stc
mov
inc
out
or
in
mov
test
and
sbb
cmpsb
mov
xchg
sub
mov
idivl
lods
leave
movsb
scas
clc
stos
leave
stos
lods
lea
mov
push
out
popf
test
test
add
push
pop
inc
xchg
jo
mov
push
das
or
lods
jae
movsb
xor
xor
inc
test
inc
aaa
movsl
and
add
pop
lods
pop
call
lods
adc
mov
pop
sub
sub
pop
xchg
pop
arpl
testl
xor
jmp
in
cmpsb
fdivl
sub
jge
shlb
cltd
mov
cmp
pop
jbe
pop
rclb
cltd
or
sub
popf
addr16
xchg
push
mov
les
sbb
insb
movsb
and
gs
push
pop
loope
dec
iret
out
mov
test
ss
push
xor
gs
pop
and
sub
adcb
enter
notb
fildl
mov
cmpsl
test
jmp
leave
ds
push
ja
lods
fstpl
lret
mov
sarl
add
shlb
loope
cmp
cmp
int
jns
pop
into
in
inc
cli
std
arpl
out
push
cmp
sub
mov
dec
aad
popa
ret
out
loop
fdivp
outsl
mov
sti
imul
xor
xor
mov
mov
mov
cmp
jne
mov
mov
mov
mov
shrd
shl
mov
mov
shr
xor
mov
xor
or
mov
mov
mov
shrd
shr
mov
mov
xor
xor
or
mov
movb
movb
movzbl
shl
mov
xor
add
push
add
mov
movb
pop
mov
movb
mov
movzbl
cltd
idiv
mov
add
mov
or
mov
add
cmp
jae
mov
mov
shrd
xor
mov
shr
mov
xor
shl
or
mov
pop
leave
ret
push
mov
sub
push
push
push
movl
movl
movl
movl
movl
movl
movl
movl
xor
inc
mov
movl
mov
mov
sub
add
jmp
sub
aam
push
cltd
sbb
adc
js
ss
mov
mov
adc
push
bound
lods
xor
mov
xor
loopne
ljmp
ja
sbb
mov
call
push
jb
mov
nop
shl
iret
mov
jnp
jb
mov
in
sub
jge
lahf
adc
js
lret
push
in
cmp
jge
pmullw
push
lods
push
lods
fstp
mov
or
fsubrl
imul
or
push
shrl
push
sbb
pop
lret
jp
jno
iret
lret
lahf
jne
inc
test
mov
adc
ss
das
test
cmp
stos
and
sub
cli
mov
cmp
xadd
notb
jg
loopne
adcl
cltd
inc
push
iret
es
movsl
mov
pop
stos
enter
mov
mov
movb
sbb
mov
pop
mov
ss
xchg
jns
mov
lahf
nop
pop
arpl
rcl
popf
data16
mov
sbb
hlt
das
out
ret
mov
cmp
mov
outsb
movsb
cmp
add
mov
cli
mov
test
insb
sub
repz
xor
in
scas
lods
cmp
pop
dec
js
push
lahf
sti
cmp
out
sbb
fnsave
mov
fiadds
push
je
lret
or
mov
movsl
add
inc
shld
mov
jae
int3
push
test
andb
aas
aaa
sub
pop
sub
test
mov
inc
add
test
inc
scas
in
sub
dec
xchg
inc
fisubl
jbe
leave
cld
and
sbb
outsb
or
int
mov
lret
fldt
loop
jp
push
mov
lods
sbbb
loop
pop
shlb
and
popa
pop
lods
sahf
ret
fcmovnbe
sub
lds
cmpsb
dec
and
or
dec
in
mov
jne
mov
ficompl
lods
xor
lcall
jns
jmp
pop
xchg
inc
repz
push
pusha
loope
sbb
mov
cmc
xor
fxch
xchg
popf
jecxz
adc
cwtl
cs
and
mov
pop
lods
push
enter
insb
ds
call
or
xchg
push
cmp
fistl
xchg
insb
imul
and
sarb
loopne
movsl
cmp
fbstp
cmpl
fbld
movsl
lds
mov
xchg
stc
and
bound
jno
inc
cmp
lcall
or
xchg
sbb
cmpsb
cli
out
mov
fldl
push
mov
decb
xchg
scas
lds
aad
inc
mulb
adc
movsl
pop
push
xor
lods
call
lret
addr16
jo
mov
out
aaa
roll
jnp
jb
cmp
hlt
and
lock
imul
int3
mov
inc
cmp
out
hlt
imul
xlat
push
dec
mov
or
pusha
out
mov
dec
and
bound
ret
fidivrl
pop
cmp
punpckhwd
mov
cmp
cmpsl
pop
sub
ja
fscale
add
and
mov
enter
aam
rcr
in
aad
mov
pop
enter
lret
outsb
in
sbb
pop
push
dec
jecxz
rorb
loope
sbb
push
testb
sti
adc
test
or
repnz
mov
cmpsb
jle
add
imul
add
xor
movl
movl
movl
movl
mov
or
add
mov
and
mov
sub
mov
mov
mov
add
or
sub
xor
sub
mov
mov
mov
mov
mov
and
xor
xor
div
lea
mov
add
mov
and
mov
imul
mov
sub
cmp
jbe
push
pop
mov
mov
movl
movl
movl
mov
movl
movl
xor
movl
mov
mov
sub
div
mov
xor
mov
div
mov
xor
div
xor
mov
mov
imul
mov
add
div
mov
mov
sub
sub
xor
div
mov
add
cmp
jae
movl
movl
movl
movl
xor
movl
movl
mov
push
pop
div
mov
mov
mov
sub
mov
mov
imul
mov
xor
sub
add
and
mov
sub
mov
sub
mov
sub
mov
mov
mov
mov
xor
add
xor
and
lea
mov
mov
add
div
mov
mov
sub
xor
div
add
jmp
xor
sub
cltd
xor
outsb
or
insb
xchg
dec
adc
mov
adc
mov
int
mov
cvtps2pd
int
cmp
cmp
xchg
xor
sub
xor
cmp
push
fistpl
jnp
shl
adc
repnz
mull
stos
cmpsl
mov
and
cmc
inc
pop
adc
add
div
xchg
inc
or
mov
adc
outsb
cltd
push
lock
fiaddl
jmp
sub
sub
or
imull
and
lds
ret
cmp
arpl
pusha
call
arpl
call
jp
test
sub
cmp
cli
pop
cmp
mov
mov
inc
xchg
ljmp
mov
dec
mov
push
roll
and
jb
subb
rcrb
mov
cmp
or
xor
mov
and
jne
dec
lahf
jnp
pop
loope
es
push
mov
lods
out
aaa
mov
mov
add
xchg
inc
pop
cmp
aam
cs
mov
es
bound
jne
or
jno
mov
sub
inc
push
clc
aam
and
sbb
cmp
aas
push
outsl
or
push
mov
push
inc
repz
aam
popa
inc
or
shl
sub
insb
popa
hlt
stos
cmp
add
cmp
dec
xor
inc
fidivrs
stos
cmc
pop
pop
jg
inc
ss
out
mov
lcall
sbb
sti
xchg
out
jmp
jecxz
mov
mov
xchg
bound
lods
sub
rorl
jnp
jns
div
ret
fs
add
add
lods
nop
fcompl
pop
movsb
mov
les
mov
insb
ret
mov
dec
movb
rcr
pop
sub
pop
pop
sbb
test
push
je
or
pop
pop
ljmp
jno
push
and
sarl
push
mov
mov
cmc
out
cld
mov
xchg
xchg
call
fistps
lret
cltd
sti
mov
mov
mov
clc
inc
pop
xchg
int3
mov
xchg
mov
ljmp
mov
mov
insb
pop
jne
mov
sbb
inc
ljmp
adc
cs
shrb
callw
out
clc
jae
inc
aam
iret
jne
idivb
iret
jp
inc
hlt
xor
mov
loopne
sbb
enter
jecxz
sub
push
js
iret
sti
pop
mov
and
ret
setno
sbb
inc
out
jle
int3
and
stc
and
jb
sbb
iret
sub
dec
pusha
imul
ret
dec
jbe
aad
and
sbb
xchg
lea
adc
arpl
aad
pop
sbb
cmpsl
daa
mov
int3
inc
xchg
test
lods
jg
sbbb
rorl
bswap
push
div
sarb
adc
pusha
es
mov
dec
lods
mov
test
loopne
add
out
lahf
pop
jo
enter
mov
mov
rcr
repnz
ret
out
cmp
lret
mov
sbb
test
jmp
iret
dec
jo
push
popa
or
cmp
jb
xor
inc
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
add
and
xor
mov
sub
movl
movl
mov
movl
movl
mov
mov
imul
xor
or
xor
mov
sub
mov
mov
mov
or
sub
xor
div
jmp
mov
in
xor
sbb
stc
test
add
cmpb
adc
adc
jno
jmp
stos
adc
psubw
jg
xor
lcall
nop
sti
shl
icebp
jmp
mov
cmp
or
daa
and
fs
xchg
loop
pop
xchg
das
in
hlt
arpl
lret
shrl
jge
and
data16
jl
shll
fadd
bound
mov
out
xor
xor
pop
sub
mov
shlb
repnz
and
scas
rorb
fwait
jns
and
jmp
stos
and
dec
test
loope
sti
mov
jl
mov
out
cwtl
rcrb
or
pop
jecxz
ficompl
add
test
inc
cmp
scas
sbb
mov
je
hlt
pop
test
cwtl
repnz
mull
or
add
fcmovnu
pop
fcmovu
adc
inc
mov
or
and
mov
outsl
push
mov
adc
dec
fimull
imul
and
test
jns
xchg
xor
pop
fcompl
popf
mov
adc
and
add
mov
xchg
cmp
mov
call
cmp
mov
xlat
ja
xor
addr16
cld
gs
hlt
lods
lods
jno
and
mov
dec
decb
dec
jle
nop
jl
fcomps
js
fsts
arpl
jae
mov
mov
and
in
xchg
push
pop
ss
xor
iret
mov
out
add
fs
into
pop
push
inc
cmpsl
aaa
out
or
sub
pusha
decl
insl
push
adc
sbb
testb
cmp
rol
push
push
call
push
popf
inc
push
push
gs
push
pop
aas
cld
mov
icebp
xor
push
xchg
xchg
jle
das
xchg
adc
arpl
xor
mov
fisubl
dec
outsb
ja
and
dec
adc
out
push
adc
and
test
addr16
int
ror
add
push
jns
js
pmulhuw
mov
push
imul
mov
int3
imulb
mov
jb
jne
dec
in
adc
jecxz
push
inc
xchg
jg
xchg
fidivs
cmp
xor
popa
mov
push
sarb
js
pop
pushf
les
shl
push
in
mov
add
inc
outsl
shll
into
inc
into
inc
and
rcll
push
aam
and
stos
movsb
mov
cld
push
inc
mov
iret
test
mov
enter
mov
icebp
inc
fsubrl
movsb
pop
mov
arpl
pusha
cs
pop
hlt
push
ficoms
in
les
sbb
and
std
jne
cmpsb
xor
push
popf
xor
jge
insl
jmp
out
cmpb
clc
xor
pop
cmp
outsl
xchg
inc
push
imulb
ret
fldcw
adc
push
xor
pop
sub
inc
or
jnp
push
lahf
std
adc
negl
addb
out
jns
lds
test
jnp
dec
movsl
lahf
xchg
mov
fsubrl
icebp
sbb
popa
ja
ret
adc
adc
dec
js
mov
sub
lret
xor
jbe
inc
pop
or
sbb
nop
in
dec
push
adc
add
xlat
in
inc
xchg
dec
in
mov
sub
js
sti
aas
mov
mov
sub
mov
mov
mov
mov
mov
imul
jmp
mov
leave
pop
dec
push
sub
push
call
push
adc
mov
adc
roll
inc
iret
das
jno
dec
mov
gs
hlt
inc
jmp
sbb
in
and
cmp
das
inc
push
mov
ja
xchg
mov
enter
jmp
push
inc
push
cmp
mov
push
push
in
fsubrp
iret
addr16
das
mov
jno
cmp
in
add
dec
dec
mov
mov
cmpsl
mov
inc
ret
hlt
push
imul
push
mov
push
subl
les
or
dec
lret
popa
add
out
loop
sub
ss
not
or
mov
repz
outsl
jle
or
leave
add
mov
push
repz
jbe
out
or
mov
je
leave
enter
loope
outsb
pop
xor
adc
sub
insl
mov
ffree
dec
mov
pop
out
in
jns
xor
out
sbb
out
cmpsl
inc
cmpsl
mov
and
sub
movsb
push
cmp
rclb
ja
or
js
shll
push
inc
dec
cld
lcall
adc
neg
jmp
data16
sub
insb
mov
loope
or
add
fdivrl
decb
inc
inc
ss
gs
sub
mov
pusha
nop
cmpsb
iret
fsubl
scas
lahf
daa
cmp
push
cmpsl
addr16
lds
sbb
adc
sbb
stos
mov
push
ret
adc
inc
xor
mov
in
cld
sbb
pop
ljmp
push
cwtl
out
jo
jnp
cltd
push
roll
les
mov
and
orb
test
imul
push
adcl
and
movsl
call
sub
ror
adc
xor
dec
inc
jecxz
shl
fdivrs
add
popf
adc
repnz
fnclex
mov
ja
stc
sub
sarb
xchg
adc
mov
repz
cwtl
push
dec
sub
mov
lea
insb
cltd
add
out
adc
push
mov
adc
lcall
or
cmp
je
jae
repnz
aas
dec
in
fwait
loopne
iret
int
xlat
out
movsb
out
add
and
xor
outsb
in
lret
lods
push
xchg
insb
sbb
out
cwtl
xlat
xchg
mov
and
dec
mov
dec
pop
bnd
mul
and
pusha
popf
push
push
inc
idivb
scas
lock
xor
pop
testl
mov
jmp
adc
pop
xor
fists
dec
push
popa
sbb
add
dec
adc
subl
ss
cmp
in
into
clc
or
mov
jns
lret
loopne
lcall
movsb
inc
hlt
idivl
aam
shrl
fs
mov
mov
xlat
lahf
mov
lret
push
inc
je
and
mov
insl
dec
xchg
lea
out
push
sub
aad
sarb
and
jge
xchg
rorb
sahf
sub
fildl
jecxz
scas
frstor
popa
test
pop
in
or
enter
inc
int
adc
nop
mov
xchg
notl
push
jne
jne
or
shl
sarl
xchg
pop
sub
out
sbb
push
sub
mov
out
insl
mov
ret
mov
les
mull
push
cmpb
ret
fidivrs
out
loop
pop
push
push
mov
imul
or
mov
or
xor
lea
mov
and
add
xor
add
cmp
jne
pop
pop
pop
leave
ret
push
mov
sub
push
push
movl
movl
jmp
pop
sub
pop
rcll
sub
scas
je
out
xor
jbe
adc
mov
adc
addr16
mov
inc
xchg
dec
and
xorb
ss
in
clc
cwtl
mov
jo
push
push
cmovp
and
outsl
loop
clc
jbe
mov
repz
xlat
xchg
movsl
dec
mov
pop
bound
sub
add
cmpsb
movsb
inc
mov
sub
out
xchg
faddl
mov
shrl
loop
testl
fnstsw
fcmovbe
add
dec
xchg
in
aam
addr16
ljmp
adcb
mov
daa
dec
leave
mov
stos
out
popf
jae
filds
mov
mov
stos
mov
roll
cmpl
rcll
jge
lea
les
jle
mov
repnz
mov
insb
clc
scas
xor
jo
jb
fwait
std
nop
jns
push
loop
insl
outsb
ret
pop
inc
clc
mov
and
mov
mov
shll
and
imul
test
xor
rorl
idivb
movsl
jnp
movsl
ljmp
xor
mov
test
add
fstps
decl
xchg
cmp
xchg
cmp
sbb
into
mov
into
cltd
stos
sub
nop
inc
scas
xchg
xor
out
dec
or
jne
lods
fisttpl
push
adc
shl
xor
mov
inc
sbb
hlt
jnp
fnstcw
pop
inc
fildl
and
xor
sbb
rolb
out
test
das
push
jo
imul
xchg
cmpl
push
inc
shll
add
stmxcsr
sbb
fmull
cli
nop
sub
push
jnp
scas
inc
sub
dec
divl
out
jnp
test
ljmp
xchg
mov
andb
pop
ficoms
push
cld
imul
xor
mov
cmp
rcl
clc
rorl
pop
or
sbb
stos
dec
push
mov
les
pop
dec
xor
sbb
jnp
mov
std
sahf
fiadds
out
xchg
push
mov
jp
jge
and
sub
or
add
aas
fdivrs
sbb
mov
test
mov
bound
sub
mov
jae
push
inc
or
or
add
sub
jecxz
push
or
scas
outsl
adc
mov
mov
repz
jae
xchg
js
fwait
jl
lret
xchg
sahf
dec
jns
mov
sarb
loopne
fdivrs
out
mov
cmp
mov
imul
es
je
std
and
outsb
pop
sbb
outsb
popa
lret
fucom
lea
dec
lcall
stos
xor
sahf
add
adc
mov
pop
shr
and
lods
int
jae
push
or
pop
xor
jl
push
sti
adc
popf
sbb
or
fnstcw
adc
cmp
mov
test
sub
jmp
mov
add
fcompl
pop
mov
pop
in
jno
mov
dec
xor
nop
push
es
jae
aam
xor
loop
pop
ljmp
pop
int
sub
push
je
insl
inc
outsb
rorb
adc
je
insl
std
pop
int3
and
sahf
dec
pop
mov
rclb
pop
daa
pop
jbe
lret
test
hlt
jae
int3
mov
mov
add
or
mov
lea
mov
movl
movl
mov
mov
and
xor
mov
imul
xor
lea
mov
movl
movl
mov
xor
push
pop
div
mov
xor
jmp
in
stc
sub
les
pop
lods
or
adc
mov
adc
call
xchg
mov
mov
int3
rcrb
out
shrl
mov
mov
lods
inc
and
add
or
mov
inc
push
gs
mov
lods
and
les
out
dec
call
loopne
xchg
cmc
xchg
sub
stos
jle
cmpl
and
adc
fsubr
pop
xchg
mov
pusha
leave
xor
sahf
adc
cmp
nop
cltd
jle
ja
mov
rol
xchg
fldenv
mov
cmpsl
scas
and
mov
adc
adc
sbb
scas
adc
ret
fs
cld
inc
jl
jp
in
fcomps
xchg
jnp
sbb
bound
cmpsb
stos
popa
adc
cli
lods
mov
xchg
adc
inc
push
pop
stos
pop
or
mov
xchg
inc
jl
mov
rolb
shl
pusha
ficoml
push
leave
push
add
jecxz
push
push
orb
movsb
je
sbb
divb
insb
pop
push
fwait
pop
adc
add
ds
lods
cmp
nop
ja
dec
mov
jmp
and
ja
pop
shrl
test
mov
mov
adc
sub
inc
xor
jo
iret
out
jo
add
adc
pop
popf
cltd
add
and
sbb
push
mov
popf
lret
fwait
sub
bound
push
xlat
jo
pop
scas
cmp
mov
sbb
sti
mov
or
je
sub
xlat
daa
js
inc
xlat
jae
xlat
push
sbb
jnp
cmp
add
pop
mov
js
push
stos
dec
cmp
push
daa
add
andb
add
jns
push
push
xchg
cmp
mov
and
sub
push
push
cmp
ss
loopne,pn
xchg
jecxz
xchg
inc
push
xor
xchg
nop
pop
faddl
divl
scas
sbb
fisubrs
jae
xchg
mov
pushf
dec
mov
lods
insl
pop
sub
nop
into
out
pop
enter
ss
je
push
imul
lods
sub
mov
sbbl
jle
je
inc
jnp
inc
pushf
insl
xor
or
cmp
and
inc
ja
div
clc
flds
scas
loopne
hlt
andb
dec
add
and
mov
fiadds
jmp
cli
testl
int
pop
inc
fs
pop
les
pop
xchg
sbb
mov
or
push
cwtl
test
jb
decl
jns
and
rcrl
jecxz
aam
jmp
jbe
sbb
push
xor
gs
les
pop
add
push
jns
add
and
nop
sub
sbb
inc
xchg
loope
and
mov
mov
and
xchg
mov
pop
pop
test
sahf
mov
sarl
dec
addr16
stos
jl
mov
leave
dec
sub
in
das
das
cs
and
loop
xor
lret
inc
fsubrl
rcrl
jne
movsb
push
push
dec
cs
mov
jbe
mov
out
cmp
xchg
lea
iret
cltd
int3
cli
fcmovne
push
inc
out
push
imul
decl
stc
cli
ret
cmp
xchg
int3
dec
sub
or
mov
mov
inc
jns
les
or
xchg
imul
sub
mov
and
leave
pop
test
adc
push
xor
and
mov
daa
and
xor
add
and
mov
sub
mov
movl
movl
movl
mov
mov
lea
mov
div
mov
lea
mov
movl
movl
movl
mov
mov
xor
sub
mov
sub
xor
mov
movl
pop
mov
movl
jmp
jo
pop
bound
stos
sbb
add
mov
adc
cmp
sbb
shll
inc
nop
sar
pop
add
fists
jb
pop
mov
lea
and
fcomps
sub
and
cmp
gs
mov
rcrl
cmc
cld
ljmp
jb
lret
idivl
shl
xchg
lahf
pusha
lods
xorb
xchg
enter
out
xchg
sub
dec
icebp
testb
out
mulb
hlt
jnp
fistl
out
jecxz
mov
xor
sbb
iret
mov
xor
mov
repz
pmaxub
sub
pushf
mov
andb
aas
std
mov
popa
cli
jmp
add
sbb
jle
popa
movsb
ficoml
push
outsb
repnz
subl
ret
sbb
shlb
ljmp
push
and
ss
mov
or
dec
repz
cli
mov
fwait
cmpsl
ror
dec
jbe
xlat
ljmp
lahf
icebp
pop
scas
inc
pop
pop
fstps
fsubs
rorb
fists
jns
mov
movsb
rcrb
fwait
jbe
xchg
pusha
test
xchg
pop
jp
lcall
and
inc
imul
jb
add
aad
dec
shl
movsb
rolb
test
pop
xchg
jp
out
mov
mov
push
loop
push
sti
cmp
jmp
mov
or
je
mov
movsl
and
cmovb
mov
pop
cmp
les
jns
jp
jle
and
shrl
popf
push
cmp
in
add
call
jmp
in
sti
call
cltd
mov
add
xchg
pop
in
mov
lds
sbb
pop
std
xchg
mov
sbb
fwait
add
add
jns
pop
aam
jle
pop
mov
sub
xchg
aad
push
cwtl
sti
cmp
cmpsb
and
push
mov
mov
and
lret
sub
dec
mov
inc
out
xor
idivb
mov
imul
rcll
sub
xor
out
dec
in
adc
pop
push
push
and
sbb
sarb
test
es
pop
xlat
or
inc
adc
mov
mov
lahf
addl
pop
jmp
jle
jmp
pop
in
jb
mov
mov
imul
xchg
xor
fisttps
movsb
aam
and
mov
stos
sbb
cmp
incl
fldz
movsb
test
cmp
mov
add
pop
xor
or
movsl
adc
cmp
inc
loopne
xchg
lret
aad
adc
xchg
rcl
cmp
outsl
aas
mov
insb
in
daa
cld
orb
or
push
mov
js
sahf
fwait
lcall
sbbl
inc
cmp
jns
xchg
es
cmpsl
shlb
and
mov
add
daa
sub
push
pop
push
cltd
shl
daa
dec
stos
ds
into
mov
iret
mov
jl
xchg
dec
dec
pop
mov
pushf
sub
rcrb
inc
in
mov
sarb
or
xor
pop
sbb
jecxz
pusha
mov
push
add
gs
sbb
adc
subb
adc
dec
jmp
imul
icebp
loope
dec
lock
ljmp
pop
adc
scas
movl
mov
mov
mov
xor
xor
jmp
pop
xchg
push
dec
push
sbb
js
insb
insb
adc
push
sbb
adc
lret
sbb
in
jp
mov
inc
in
xor
push
rorb
xchg
mov
rcr
xor
in
pop
fs
push
jle
in
xchg
push
push
push
and
mov
jne
sbb
pop
adc
in
in
or
xchg
jge
shrb
loope
fsubs
mov
stos
mov
add
mov
mov
jno
stos
into
sbb
add
ret
in
push
sub
mov
mov
dec
pop
push
sti
pop
push
jmp
sbb
mov
push
adc
push
sub
sbb
xor
jl
adc
mov
lods
das
cmp
pop
mov
in
mov
mov
xchg
pop
mov
pop
andl
or
repz
or
add
jnp
into
dec
aaa
or
pop
popa
push
push
das
mov
inc
out
xabort
jns
mov
pop
gs
push
ss
jge
pop
jg
mov
cli
mov
xlat
aad
sbb
xchg
pop
adc
sbb
mov
or
lcall
cmpsb
inc
cmp
xchg
mov
scas
mull
xor
sbb
outsl
push
mov
loop
subb
sti
mov
sbb
mov
fiadds
cmp
sub
cmp
adc
lcall
or
mov
scas
xchg
subb
lea
xlat
les
push
inc
push
inc
xor
incl
jnp
stc
ret
mov
lahf
xor
jae
test
les
sub
out
lret
pop
mov
loop
repz
jmp
arpl
mov
js
aaa
test
fstps
daa
pop
pushf
push
or
pop
xchg
xor
add
mov
fbld
xor
sub
push
scas
fldt
fiadds
ds
orl
xchg
fdivrs
loope
mov
push
or
xchg
rclb
aam
mov
add
sbbb
push
fwait
xchg
inc
pop
pop
es
aas
jge
cmp
push
mov
sbb
inc
cmp
sub
add
dec
stos
in
jmp
dec
adc
push
les
js
out
jecxz
popa
out
fs
fsubs
add
jp
add
dec
inc
sbb
outsl
xor
imul
pop
int3
fwait
push
xor
out
mov
imul
test
fwait
nop
rclb
dec
mov
orl
xchg
popa
adc
dec
outsl
js
stos
ret
inc
out
push
ret
fsubrl
jp
xor
add
outsl
or
mov
pop
inc
xchg
insl
bnd
scas
inc
fsubl
int3
loop
and
xchg
int3
inc
jae
push
std
xchg
or
setge
xchg
sub
xchg
scas
sub
daa
inc
lock
lock
push
xor
xchg
inc
cltd
xchg
adcb
arpl
gs
dec
jl
imul
lret
lods
arpl
cli
add
addl
fsubrs
dec
cltd
pusha
shll
aad
mov
sbb
push
frstor
add
inc
loopne
daa
and
push
or
into
adc
addr16
lret
adc
hlt
and
sbb
div
mov
and
sub
mov
movl
movl
movl
jmp
out
sbb
fsts
xchg
add
ficoms
adc
adc
push
ret
ret
and
xor
mov
xchg
jecxz
repz
cmp
jge
adc
cmp
push
jb
mov
arpl
dec
sub
xor
pop
lods
pop
jno
je
adc
sti
cltd
and
daa
std
mov
pop
ja
dec
pop
xchg
push
pop
jmp
fcompl
mov
push
stc
pushf
and
lock
pop
ret
lods
daa
jmp
or
ja
jmp
andb
add
sarb
push
xor
inc
icebp
xor
mov
call
sub
inc
aaa
andb
cmp
ja
sub
ljmp
push
scas
push
sub
push
iret
pop
inc
mov
adc
rol
mov
cmp
ss
and
sti
jbe
ja
les
loope
movl
addr16
dec
mov
shrl
mov
addl
imul
scas
mov
lahf
in
add
fwait
aaa
adc
add
addr16
inc
cmp
push
hlt
addr16
inc
ror
mov
xor
pop
addr16
sti
push
nop
lahf
and
int3
mov
cmp
rcrl
lods
or
pop
enter
xor
insb
test
ffree
pop
out
leave
and
cmp
xchg
popa
adc
faddl
ljmp
int
sub
mov
xor
cli
jae
loope
iret
add
xchg
ret
aam
adc
push
pop
icebp
lods
movsb
xor
icebp
clc
icebp
mov
lds
loop
int3
pop
ja
jo
and
lods
xchg
jo
ja
push
mov
dec
sub
test
pushf
sbb
inc
push
scas
loopne
in
mov
hlt
mov
push
dec
mov
les
insl
cs
mov
and
pop
jecxz
mov
add
dec
xlat
jecxz
push
mov
hlt
sbb
jb
repz
jle
push
mov
dec
int3
movsl
cmp
jp
pop
lods
push
out
test
clc
jno
out
rcrb
mov
cmp
jbe
pushf
pop
pop
int
and
mov
inc
lods
adcl
scas
mov
jle
pop
cmp
repnz
sbb
fstps
out
mov
pop
mov
pusha
pop
shrl
je
cmp
test
mov
in
mov
sbb
mov
cld
call
pusha
push
outsl
pop
imul
fadds
or
xchg
cmp
and
pop
out
push
cmc
lcall
incl
push
mov
les
xor
ds
mov
push
pop
inc
lods
xor
ret
leave
ffreep
mov
adc
icebp
push
xchg
out
push
sbb
pop
xchg
mov
and
mov
fadds
jae
xlat
inc
and
test
cmp
movsl
sub
iret
xor
jo
push
mov
sub
adc
sub
dec
xor
loope
out
test
daa
sub
xchg
cld
sub
iret
arpl
mov
lea
fiaddl
dec
fstpl
ljmp
ret
xor
add
xchg
mov
or
fwait
maskmovq
idivl
or
mov
shl
fdivr
std
in
dec
xchg
fisttps
insb
sub
cmp
enter
adc
inc
and
pop
lods
xor
xor
add
cli
jecxz
inc
mov
movl
movl
movl
mov
add
mov
xor
mov
or
mov
or
mov
and
mov
sub
mov
movl
jmp
fisubrs
outsb
rcrl
iret
sbb
insb
pop
out
adc
adc
adc
test
sbb
lret
fisttps
add
push
lahf
jne
ja
dec
pushw
outsb
cmpsb
scas
lock
daa
stc
pop
mov
idiv
iret
cmp
push
add
add
lret
jge
cmp
addr16
pushl
push
shlb
inc
out
jb
mov
mov
mov
xchg
mov
call
sbb
mov
stos
pop
or
shlb
icebp
shll
movsb
or
hlt
inc
xchg
sub
mov
mov
xor
jns
mov
out
xor
add
or
jl
sub
jle
outsb
push
pop
insl
cmc
push
and
pop
xor
iretw
movsl
gs
or
notb
jns
push
and
cli
loop
sbb
movsb
dec
push
mov
mov
lcall
xchg
cmpsl
mov
pop
das
xchg
fstpl
rcr
loope
es
pop
aam
pop
stc
enter
leave
push
mov
clc
xchg
push
jecxz
cmp
lds
pop
in
repz
sbb
mov
add
jbe
push
or
mov
lds
addr16
push
xor
inc
aas
stc
cmp
dec
cltd
jg
mov
out
in
clc
lret
loop
lahf
jmp
jp
mov
adc
jg
test
ss
inc
xor
mov
enter
cmc
sub
aad
push
hlt
push
jl
nop
add
or
movsb
push
adcb
xor
call
mov
mov
inc
jne
mov
aas
and
jp
xchg
mov
loop
je
test
je
dec
sti
popa
mov
stc
mov
call
std
in
xchg
and
xchg
aad
dec
out
xor
outsb
fcoml
jnp
sahf
stos
insb
aaa
jmp
addl
xlat
pop
lods
pop
icebp
loope
and
or
mull
mov
push
mov
movsb
jmp
mov
andb
xchg
push
push
inc
jmp
dec
decb
jae
mov
aas
xchg
adc
add
out
add
imul
sbb
lock
int3
je
insl
pop
xchg
pop
jnp,pn
incb
call
sub
rcr
jbe
push
cmp
push
and
mov
push
push
fildll
imul
and
pusha
cmp
xchg
bound
mov
lods
out
push
xor
xchg
das
ljmp
dec
imulb
mov
push
testb
push
lods
jle
in
je
dec
arpl
fdivs
mov
inc
jle
xchg
nop
mov
cmp
int3
cmp
xchg
and
mov
loopne
popa
popf
push
ss
ret
into
sub
fdivs
xchg
xchg
xor
aas
jae
sbb
jo
insl
shrb
lahf
ret
mov
mov
cmc
fdivrs
push
pop
and
sbb
int3
dec
outsl
jp
sbb
rorl
out
jge
jno
add
jecxz
or
fcomps
out
xor
test
push
add
in
repnz
or
jmp
mov
inc
mov
cmp
mov
push
add
jns
hlt
push
adc
mov
mov
cwtl
cwtl
xchg
daa
ficoms
popa
mov
xchg
mov
bound
mov
cwtl
cmp
inc
mov
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
add
adc
or
mov
or
or
mov
mov
or
mov
sub
mov
sbb
mov
or
or
add
mov
adc
mov
movl
movl
movl
movl
movl
movl
movl
xor
inc
mov
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
movl
mov
movl
movl
mov
or
add
mov
or
mov
sub
mov
sub
imul
add
mov
push
mov
lea
mov
xor
div
mov
lea
push
mov
mov
push
push
push
push
call
mov
mov
push
push
or
or
push
push
call
mov
mov
xor
mov
mov
mov
and
add
lea
xor
push
lea
call
mov
mov
mov
sub
xor
imul
add
xor
xor
mov
div
cmp
jne
jmp
in
xchg
es
cwtl
pop
push
and
fbstp
stos
adc
adc
mov
adc
xchg
sub
push
adc
xchg
movsl
cmp
in
fnstcw
pop
cmpsl
test
xchg
mov
add
flds
ficoml
sbb
mov
xor
pop
inc
cmp
fdiv
mov
sbb
mov
fsubs
sahf
lahf
fcmove
xchg
ret
mov
addb
iret
push
sub
and
mov
fidivrl
add
lods
cwtl
outsb
andl
xchg
scas
sbb
je
cmc
dec
roll
jmp
mull
xchg
enter
jne
out
xchg
data16
adc
xor
or
mov
inc
xchg
xchg
push
push
popf
incb
scas
nop
push
cmp
cmpsl
lret
mov
mov
incb
imul
push
mov
pop
or
xchg
ret
add
jge
push
in
loopne
in
int3
add
or
in
aaa
pop
add
testb
sahf
fisubrl
loop
mov
fisubs
or
lret
adc
popf
mov
subl
imul
enter
sbb
dec
xchg
inc
scas
cwtl
adc
es
mov
xlat
inc
pushf
push
and
or
int3
mov
cmp
cmpsl
sbb
inc
jmp
aad
add
add
pusha
shr
xchg
xchg
imul
arpl
xchg
ss
jecxz
xchg
sti
cld
pushf
movsl
leave
sub
stc
mov
jne
mov
in
mov
sbb
popa
mov
lock
cld
inc
mov
repz
add
sbb
mov
adc
add
cmp
outsl
repz
inc
cmp
cmp
outsl
inc
insb
loop
cmp
lcall
popa
in
adc
aad
insb
lods
xor
jns
cmp
add
push
shl
mov
rorb
inc
cli
cmp
dec
dec
lret
test
in
idivb
aam
or
leave
mov
outsb
mov
jle
jp
pop
mov
and
pop
sbb
test
jnp
push
mov
cld
and
js
cmp
mov
inc
dec
cmp
sti
dec
call
rcrl
jge
mov
add
xor
xchg
push
pop
pop
add
inc
mov
fnstcw
fs
mov
or
ret
mov
packssdw
fabs
add
jbe
lret
mov
addb
dec
pop
jmp
jb
mov
mov
out
rolb
jno
xor
inc
lret
or
out
and
or
in
mov
cmp
and
lods
int
faddl
test
jo
pushf
jno
fnstsw
clc
je
paddsb
and
jg
addr16
mov
inc
jmp
adc
imull
inc
mov
ljmp
push
cmp
inc
sbb
popa
cmp
adc
fwait
push
jb
les
sbbl
sbb
inc
push
sbb
add
mov
out
dec
leave
and
je
inc
push
sub
and
les
shrl
stos
inc
cmpsl
icebp
xchg
gs
and
cmp
push
xlat
mov
outsl
jmp
addl
ss
loopne
mov
inc
sbb
inc
sar
sub
xor
jmp
cmp
ja
pop
aaa
and
or
lods
test
adc
mov
adc
push
outsb
data16
xchg
xchg
sbb
mov
test
inc
and
mov
lret
pop
and
mov
orl
jg
add
mov
inc
cmpxchg
mov
ljmp
or
mov
mov
mov
and
fwait
sbb
dec
xor
adc
and
arpl
jno
sbb
xor
or
aaa
dec
xchg
add
cmpb
dec
add
xor
sbb
fstl
ret
cmp
cmp
outsb
fadds
push
dec
movb
xchg
mov
test
push
iret
imul
and
jb
push
inc
in
data16
out
pop
or
enter
and
pop
sbb
pop
push
push
xchg
cld
ret
je
push
std
testl
mov
sbb
rorl
jg
pushf
loopne
cmpl
in
adc
fdivrl
mov
ja
orl
mov
clc
mov
jecxz
cld
ret
xchg
sub
lcall
xchg
xchg
mov
ss
pop
js
pop
pop
pop
stos
sbb
stos
cmp
std
dec
outsb
in
enter
xchg
fmull
enter
iret
xchg
pop
xchg
or
je
push
jb
cmp
or
mov
adc
pop
mov
cmp
mov
xchg
jbe
sub
ret
pop
movsl
xchg
fbld
jg
cmp
jns
and
fistpl
jg
fldlg2
ljmp
pop
sbb
imul
pushf
lock
jno
in
mov
push
push
leave
or
test
xchg
sub
push
test
mov
into
notb
adc
ljmp
dec
sub
jge
decb
inc
popf
mov
xchg
loope
fcmovu
push
adc
push
mov
or
ljmp
shll
mov
les
adc
sub
test
bound
add
add
and
push
mov
iret
add
push
pop
mov
jle
loope
aam
mov
sub
lahf
xchg
dec
sti
add
pop
xor
or
cmp
shl
or
sbb
sub
sub
sub
pushf
sub
lret
push
adc
cmp
and
pop
xchg
jae
mov
ror
jbe
aaa
iret
mov
xchg
pop
jecxz
ror
cmp
push
nop
clc
jp
aaa
ficomps
fidivrs
cmp
call
dec
in
test
mov
and
scas
adc
insl
das
inc
out
sbb
cli
out
xchg
repnz
aaa
jb
dec
and
xchg
out
iret
aaa
cmpsl
stos
movsl
jnp
and
mov
mov
and
jbe
int3
jne
jg
lock
push
push
loopne
test
jp
cli
inc
ds
add
xor
inc
add
test
pop
sbb
es
out
push
adc
inc
cld
loope
mov
xchg
popf
lcall
pop
cmp
fnstcw
lods
add
adc
into
fldl
add
stos
add
mov
in
in
dec
xchg
add
xor
out
jg
pop
inc
cwtl
push
outsl
mov
push
std
outsb
mov
cltd
sub
sub
sbb
push
insl
adc
repz
push
iret
mov
pop
cld
xchg
imul
lock
push
jbe
cmp
adc
sub
ret
imul
lock
shrl
in
addr16
cmpl
icebp
mov
mov
xor
sub
mov
xor
sub
or
lea
push
mov
push
pop
div
mov
xor
div
mov
mov
xor
xor
div
imul
sub
push
mov
add
push
mov
sub
mov
pushl
call
mov
mov
lea
mov
incl
mov
mov
xor
mov
xor
xor
and
cmp
jne
cmp
jne
mov
jmp
lea
mov
mov
mov
mov
mov
sub
mov
mov
mov
sub
mov
movl
movl
mov
mov
mov
mov
pushl
pushl
pushl
pushl
pushl
push
push
pushl
mov
call
mov
mov
pushl
call
mov
push
add
push
push
call
mov
jmp
mov
pop
mov
pop
leave
ret
push
mov
sub
push
push
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
push
push
push
push
call
mov
mov
add
adc
and
push
and
or
push
or
xor
xor
push
push
call
mov
movl
movl
movl
movl
xor
movl
push
inc
mov
mov
mov
push
push
push
call
mov
mov
or
or
push
add
push
adc
push
push
call
mov
lea
xor
mov
div
mov
sub
mov
movl
mov
movl
mov
mov
sub
mov
xor
div
mov
xor
or
or
mov
mov
movl
movl
movl
mov
add
mov
and
lea
mov
mov
mov
movl
movl
movl
mov
mov
sub
add
xor
add
mov
div
mov
xor
pop
pop
or
mov
movl
movl
movl
mov
mov
and
sub
or
mov
imul
mov
div
leave
ret
push
mov
sub
push
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
jmp
xchg
lods
sub
addl
adc
adc
adc
cs
mov
jnp
stc
mov
nop
repnz
xchg
cmp
lcall
setae
pop
mov
jne
mov
cmpsl
lods
repz
push
and
clc
mov
push
mov
sub
xlat
sub
or
mov
dec
pop
lods
lods
lret
jns
mov
push
dec
testb
adc
and
and
mov
xchg
and
mov
push
fsubrs
hlt
dec
test
xchg
in
in
imulb
mov
mov
mov
sbb
mov
insb
push
lret
pop
and
mov
cltd
aad
xchg
xchg
andb
ja
dec
sbb
lods
push
mov
cmp
mov
push
movsb
xor
movb
outsb
sbb
jg
and
sbbl
dec
xchg
mov
data16
sub
sbb
dec
mov
shlb
mov
mov
into
not
mov
sbb
pusha
lock
or
lret
ficoms
xchg
add
push
fsubl
xchg
mov
push
jne
divl
pop
repz
jle
lret
adc
push
out
cli
add
pop
jo
add
mov
outsl
pop
jle
cltd
icebp
sub
fisubs
jnp
ja
pop
mov
sahf
out
mov
mov
xchg
sub
ss
daa
addr16
int
outsb
adc
mov
lret
aad
dec
push
dec
out
or
adc
ja
and
in
add
sbb
xchg
out
dec
sbb
cmpsb
xor
in
ret
mov
ret
or
mov
mov
mov
shlb
iret
cli
loop
xchg
insl
push
lods
push
mov
jge
add
std
or
jb
cs
sbb
call
stc
jae
das
ret
fnop
jecxz
xor
mov
cmp
aad
mov
and
mov
movsb
hlt
xchg
stos
aas
sbb
lods
rorl
sbb
adc
add
ja
cmp
cltd
hlt
outsb
xchg
fnstcw
hlt
inc
ret
adc
int
pushf
sub
and
out
out
aas
fsubrl
icebp
out
sti
cltd
adc
dec
sbb
jge
test
incb
iret
dec
popf
je
das
push
xchg
xchg
push
out
enter
ret
mov
out
and
and
add
push
or
sbb
lret
rorb
cltd
and
imul
hlt
and
negl
xor
jns
test
dec
or
sub
adc
cmp
sbb
add
cmp
pop
xchg
test
push
push
pop
push
xor
mov
pusha
sarb
push
mov
pop
sub
jns
les
cmpsl
or
push
je
xchg
loope
sub
cwtl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
push
movl
mov
mov
push
push
push
call
mov
mov
xor
mov
mov
mov
xor
mov
xor
or
mov
mov
mov
xor
jmp
jle
mov
cltd
cmp
or
stos
dec
xchg
out
lock
adc
adc
or
mov
mov
xor
jle
push
fstp
adc
adc
popa
scas
cmp
out
jge
aaa
mov
mov
mov
or
pushl
stos
dec
loop
mov
mov
das
xor
and
pop
or
out
in
ja
idivl
xor
xchg
jmp
pop
stc
add
add
shlb
add
scas
ja
or
nop
mov
cmp
add
xchg
pop
out
in
clc
xor
adc
lods
clc
jge
andb
cmp
in
mov
incl
jne
mov
mov
in
push
insb
push
loop
sarl
out
mov
jno
xor
sbb
ja
push
xchg
movsl
push
jns
sub
mov
add
loop
out
call
cld
jp
sbb
lcall
pop
inc
mov
push
sub
push
imul
testl
addr16
scas
or
or
sbb
cwtl
xor
inc
mulb
sbb
lea
lret
negl
cltd
jg
popf
call
sbb
jecxz
mov
pusha
inc
ja
nop
cmpl
lret
pop
fwait
jno
outsb
pop
leave
in
ds
push
cmp
imul
dec
lods
repz
sbb
rcrb
aad
push
sarl
fdivs
push
or
push
pushf
int
lods
lods
and
fimull
push
sub
xchg
fucomi
lods
testb
add
dec
xchg
lret
loopne
xchg
enter
cmpsl
movsl
imul
aad
out
push
ret
ret
push
push
lock
outsl
cmc
lods
in
jbe
enter
imul
pop
mov
pusha
jne
pop
sub
in
cmc
jnp
ret
pushf
jns
xchg
je
pop
lret
inc
push
idivb
aas
jl,pt
fsubr
int3
sbb
js
lahf
imul
addr16
lahf
mull
loope
lcall
mov
int3
adc
push
stos
pop
gs
dec
into
adc
sub
adc
in
stos
or
imul
pop
fnstcw
addr16
into
push
jp
dec
jnp
mov
xchg
in
sub
xor
out
cmp
or
mov
push
clc
inc
jle
out
outsl
icebp
dec
sbb
repnz
nop
mov
aad
movsb
dec
push
enter
lret
mov
int
out
add
iret
repnz
adc
outsl
dec
jg
stos
sbb
ja
call
je
jle
fsubp
ljmp
aam
jmp
pop
xor
repz
cmp
jp
repnz
rcrb
xor
jns
fisubs
cmpsl
nop
push
sarb
loopne
out
mov
jb
jp
xchg
xor
mov
mov
ret
insb
les
xchg
sbb
shll
add
jne
cmp
je
mov
mov
mov
mov
jmp
mov
popf
dec
cltd
push
and
rclb
jb
mov
adc
adc
jne
loopne
rcrl
cmp
adc
cmpsl
sahf
daa
adc
sahf
pop
sub
jp
iret
mov
stos
sub
adc
cwtl
add
sarb
arpl
stos
loope
jae
pop
mov
idivl
les
push
lahf
jp
daa
adc
popa
or
add
fldenv
adc
scas
mov
out
xor
negl
xchg
out
out
cltd
and
movsl
aaa
ds
xchg
divl
inc
std
aad
pop
lahf
and
cmpsb
sub
cmc
adc
pop
jp
adc
cmc
mov
inc
ds
xlat
fbld
int
inc
jecxz
fcmovbe
js
jne
xor
push
scas
mov
adc
scas
mov
add
scas
cmpb
mov
es
sub
or
mov
mov
jg
jl
out
add
jecxz
xor
pop
mov
xchg
sarb
scas
cs
iret
out
jp
xchg
out
test
cmpsl
jge
pop
jno
sub
xchg
push
or
je
mov
jmp
outsl
adc
push
inc
sub
jp
test
mov
mov
dec
out
lds
cmp
inc
pop
add
jbe
mov
mov
loopne
push
dec
mov
pop
xchg
fldcw
clc
popf
dec
push
xchg
lcall
add
inc
aaa
test
cmpsl
pushl
or
xor
in
ja
dec
dec
adc
das
pop
addr16
push
fsub
cwtl
mov
sbb
push
or
pop
pop
pop
sub
lret
fxam
push
xchg
jne
sahf
sbbl
inc
jp
cmpl
lar
and
mov
pop
int3
out
pop
xchg
sti
sub
mov
push
adc
add
adc
mov
push
loop
repnz
or
ljmp
xchg
jg
inc
push
sub
add
addr16
repnz
mov
sarl
cmp
inc
mov
movsl
push
out
jb
aaa
incb
fsubl
mov
sub
mov
cmp
mov
or
mov
rcrb
aas
mov
into
push
sub
popa
ret
negl
or
dec
pushf
cmpsl
aas
lret
adc
pop
add
mov
push
xchg
sub
adc
mov
xchg
fmul
sbb
jne
fnstcw
sub
fwait
lea
das
dec
and
push
jno
incb
movb
mov
fsts
xchg
mov
and
adc
jge
jecxz
lods
cwtl
inc
cltd
add
lods
popf
and
mov
daa
idiv
push
push
inc
aaa
rcll
dec
mov
mov
cmp
imul
insl
xchg
sbb
mov
lds
adc
pop
or
xlat
mov
iret
cmpl
mov
sarb
jp
daa
add
adc
or
mov
or
mov
push
push
push
push
call
mov
mov
and
mov
mov
mov
and
xor
xor
xor
cmp
jne
cmp
jne
mov
mov
add
or
mov
or
xor
lea
xor
mov
and
add
mov
jmp
xchg
jne
and
js
ret
cmc
stos
dec
jecxz
adc
adc
adc
mov
push
out
cs
mov
lahf
sub
or
cmp
mov
xor
stc
decb
mov
aam
fsubr
das
push
inc
pusha
jl
icebp
mov
cmp
push
mov
mov
insb
pop
aam
enter
pusha
in
jbe
mov
mov
sarb
dec
pop
insl
push
out
jns
je
movsb
xchg
cmp
mov
lods
std
mov
imul
sub
xchg
push
mov
xchg
imul
push
daa
pushl
leave
repnz
ds
push
jle
rcr
ss
sub
adc
push
mov
jg
mov
or
lcall
pushf
xchg
sbb
bound
cltd
jl
adc
sarl
repz
sbb
inc
xor
push
fidivrs
lahf
xchg
inc
sub
ss
into
sub
xchg
add
in
fstp
and
sub
add
cmp
hlt
xchg
cmp
mov
inc
pop
sub
in
inc
mov
or
test
ret
sub
mov
inc
pop
repz
xchg
hlt
divl
pop
stos
jns
inc
xor
je
mov
adc
sbb
in
adcb
adc
stc
pop
mov
int
xchg
mov
lret
btr
ljmp
add
mov
imul
xor
popa
lcall
mov
sub
cmp
test
xor
cs
xchg
add
push
loop
pop
mov
cmp
xchg
inc
fs
xchg
mov
jmp
jnp
xchg
nop
or
jecxz
dec
push
or
lods
push
shll
lret
push
mov
cltd
sbb
aas
rcrb
jne
and
push
dec
push
imul
mov
fidivrs
movsl
adc
cmp
es
pop
mov
loope
cmp
enter
inc
xor
mov
ss
ss
xchg
test
sbb
mov
jnp
je
es
popa
cmp
enter
mov
stc
xchg
mov
mov
out
std
mov
lret
or
sbb
sbb
pop
mov
clc
imul
pushf
je
jbe
lahf
push
out
int
mov
jae,pn
iret
lods
pop
dec
add
adc
lods
jae
mov
test
lods
addr16
jae
mov
test
repnz
mov
push
cmp
mov
sub
mov
mov
sub
in
adc
test
popf
jb
call
leave
orb
int
daa
outsb
int3
shrl
cltd
and
dec
test
mov
pushf
in
mov
jl
bound
and
jo
pop
xor
add
dec
xor
jl
or
dec
repnz
imul
mov
insb
add
xor
div
mov
mov
xor
imul
mov
push
push
xor
mov
lea
jmp
or
jo
outsb
mov
insb
xchg
movsb
xchg
adc
adc
outsl
loopne
stos
inc
xchg
movb
xchg
or
imul
mov
std
lahf
shlb
jp
or
pop
jp
adc
mov
cmp
insb
cli
push
into
gs
leave
ljmp
push
push
lds
clc
mov
repnz
ljmp
mov
pop
ret
jg
xchg
or
repz
rclb
push
mov
mov
add
xlat
pop
outsl
xchg
lahf
adc
jne
jno
push
cld
pop
movsl
inc
imul
cli
les
scas
inc
gs
jmp
lret
or
push
in
sbbb
repnz
dec
inc
and
push
jns
clc
test
sbb
lahf
imul
pop
push
inc
pop
push
in
es
icebp
fwait
xor
push
call
imul
fmul
inc
jo
enter
int
xor
jb
leave
and
xor
xchg
inc
dec
xor
xchg
jl
xchg
nop
sub
inc
cmc
mov
mov
mov
fidivs
sub
jno
xor
fldln2
cmpsl
int3
or
hlt
mov
push
movd
xor
int3
mov
xor
js
andl
pop
fstl
ret
fldenv
or
push
mov
hlt
iret
jmp
push
xor
in
aad
adc
out
sbb
cli
cld
push
sub
insb
mov
out
fisubl
xchg
xchg
jmp
jnp
push
jbe
cmp
sbb
daa
sbb
mov
mov
sbb
dec
ret
setb
movsb
sub
adc
int3
loop
pop
lea
and
add
xor
add
dec
dec
je
arpl
lods
and
jl
push
mov
mov
add
incl
lret
inc
lahf
stos
pushl
into
jo
nop
inc
ss
ljmp
repz
lcall
popf
mov
xchg
test
outsl
inc
dec
push
add
pushf
inc
xchg
mov
fisttpl
sbbl
add
aas
fsub
sahf
cmp
adc
in
pop
jg
xchg
jno
jge
test
dec
sub
dec
shr
push
jne
outsl
gs
mov
or
pop
pop
pushf
pushf
mov
sub
push
out
cmp
enter
mov
and
dec
mov
shlb
xchg
mov
cmp
mov
sub
inc
cmp
std
mov
xor
cmc
stos
jns
push
ret
fisubrs
pusha
jmp
push
out
mov
mov
shll
enter
adc
jae
dec
pusha
setle
lods
aaa
jge
out
sub
out
or
pop
ja
test
mov
arpl
or
jl
data16
pop
jecxz
cmp
jge
mov
mov
lea
mov
mov
or
xor
div
mov
add
xor
add
mov
jmp
lds
mov
mov
cmpsl
xlat
adc
adc
adc
add
pop
pop
insb
call
xor
mov
popf
fadd
addb
insl
inc
adc
je
add
jecxz
icebp
inc
sahf
bound
adc
mov
add
in
lods
sbb
std
orl
lret
adc
add
mov
mov
fsubp
pop
xchg
stos
dec
loope
mov
push
push
cmp
push
inc
add
orl
es
xchg
in
mov
jne
loopne
sti
jge
mov
adc
sub
mov
cltd
mov
fimull
lahf
xchg
or
data16
mov
sbb
enter
pusha
mov
xchg
subb
leave
xchg
push
mov
test
or
jmp
outsl
xorl
add
fdivrl
mov
mov
outsb
test
cmp
or
inc
add
add
xchg
stos
mov
bound
je
test
inc
js
mov
sbb
jbe
fdiv
fcoml
cmp
in
int
push
call
cmpsb
loop
dec
xor
push
or
push
daa
inc
jo
adc
and
stc
xchg
jne
iret
inc
repnz
imul
cmp
pminub
out
sub
inc
inc
aaa
aas
jmp
popa
and
movsb
sti
cwtl
cmp
fadds
mov
pusha
mov
adc
mov
or
mov
ljmp
and
adc
mov
out
aas
js
aas
in
xor
jno
clc
or
mov
mov
jle
mull
cmp
xor
test
idiv
jns
lahf
push
xor
enter
and
sub
shlb
adc
js
jo
mov
fbstp
xchg
cmp
lret
xorb
dec
cmovp
lods
push
lds
andl
int3
pop
jo
inc
sub
loopne
dec
push
xchg
scas
fsubs
faddl
lret
in
hlt
inc
dec
mov
sub
jecxz
jmp
call
ret
push
push
sub
sahf
inc
scas
lcall
js
add
jmp
dec
sub
in
push
mov
mov
out
and
mov
mov
pushf
insb
pushf
lcall
cmp
js
mov
pop
jmp
pop
jge
fdivrl
xor
fs
pop
cmp
imul
add
mov
xor
dec
mov
les
ficoms
ficomps
ret
ja
lds
push
mov
in
mov
push
pop
push
xchg
loopne
out
stc
out
sub
jbe
cmpsb
xor
jg
cmp
adc
pop
push
cmp
call
inc
xor
ret
loop
xchg
ss
fstpt
xchg
xor
fidivl
mov
xor
or
decl
decl
decl
ljmp
rorb
lcall
icebp
mov
xor
mov
xor
mov
add
adc
add
adc
push
push
call
mov
sub
push
pop
jmp
mov
sbb
adc
push
call
adc
adc
adc
fdivrl
test
mov
js
sub
cltd
add
ret
movsb
dec
cmpsb
jg
das
daa
shll
enter
cmp
jbe
aam
in
xor
jmp
adc
mov
push
mov
cmp
fiadds
adc
lcall
or
mov
dec
jge
or
je
xchg
mov
inc
mov
lret
movsb
insl
mov
ret
cmpsb
ja
roll
jo
push
mov
add
std
fwait
add
test
jle
lret
in
lock
lock
mov
dec
in
push
outsl
mov
jb
sbb
pop
xchg
cld
add
fldcw
popf
cmp
imul
pushf
imul
pop
ja
mov
out
xor
sbb
xchg
sub
mov
into
jmp
test
jnp
sti
cli
dec
test
daa
addl
dec
adc
jmp
jge
and
jp
in
jns
dec
jle
and
mov
iret
je
jmp
imull
fldcw
fmuls
xchg
das
sbb
into
inc
fcoms
popa
cs
mov
stos
in
mov
pushf
cmpb
dec
fbstp
xchg
push
mov
add
negb
jmp
adcl
cmp
mov
dec
xor
pop
gs
xor
adc
adc
pushf
or
mov
in
in
push
pop
leave
psubusb
dec
mov
int3
xor
repnz
in
int
je
sbb
add
bound
adc
sbb
jmp
mov
dec
sub
shl
xor
mov
out
jecxz
adc
cmpsl
subl
and
mov
jecxz
cltd
jg
inc
jge
mov
jns
jecxz
push
imul
cs
cmp
rcll
inc
jg
push
bound
jg
cmp
mov
iret
rcl
ja
popw
imul
icebp
in
shrl
add
push
les
or
aas
test
sub
ficompl
push
sbbb
popa
sbb
loop
fwait
and
cmp
repnz
jl
test
imul
icebp
dec
mov
fstps
sbb
pop
stos
xchg
fldenv
sbb
shl
jg
mov
enter
lods
adc
fisubrl
or
adc
ss
adc
xor
inc
ret
insb
out
outsb
nop
xchg
cltd
enter
sahf
pushf
push
push
jns
cmpsl
sub
jg
add
or
cmc
pop
pop
mull
pop
xchg
push
movsl
jbe,pt
das
loopne
dec
xchg
mov
push
cwtl
popa
out
mov
sbb
mov
and
dec
mov
mov
idivb
rorl
test
lock
mov
mov
add
shr
or
mov
xor
xor
add
mov
pop
leave
ret
push
mov
sub
push
push
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
adc
mov
push
push
or
or
push
push
call
mov
mov
and
or
mov
mov
and
or
xor
xor
shld
shl
shr
xor
or
or
xor
mov
mov
xor
mov
mov
mov
mov
mov
push
push
push
push
call
add
push
adc
push
push
push
call
jmp
xchg
and
sbb
outsb
dec
adc
cmc
push
add
adc
xchg
movlps
lret
das
pusha
ficoms
in
adc
clc
movsl
pop
lahf
scas
push
inc
out
adc
scas
push
jp
jae
sub
add
jl
mov
nop
pusha
push
jnp
jmp
jl
stc
stc
out
jae
jle
mov
adc
dec
pop
inc
out
push
mov
mov
jg
ljmp
fstpt
sub
or
and
shl
add
add
sbb
test
insb
pop
iret
in
jp
fst
mov
xchg
push
push
mov
cmp
and
cmc
imul
movsb
mov
adc
cwtl
ds
pushl
sti
rcll
lock
push
xor
idivl
sahf
adc
lea
inc
call
das
xchg
inc
ss
gs
mov
fwait
jmp
add
mov
jecxz
mov
shr
xlat
inc
imul
dec
jbe
test
lahf
xchg
jne
mov
push
es
lcall
sub
mov
fmull
loope
sbb
mov
jnp
aad
mov
xor
pop
pop
ret
pop
sbb
mov
xchg
fcomps
and
inc
cmpsl
in
imul
daa
fldenv
fidivs
mov
repnz
add
imul
mov
push
lds
pop
mov
cmp
add
es
adc
add
shll
inc
jl
shl
pop
sub
xchg
sub
push
decb
sbb
in
stos
test
les
std
addl
xchg
cmp
pop
sub
jg
repz
rorl
mov
aaa
or
mov
out
in
test
enter
cmpsb
sub
jbe
pusha
or
test
sub
dec
xchg
lret
fistps
push
in
pop
add
data16
dec
out
or
outsb
adc
stos
cmpsb
out
sti
icebp
lods
scas
mov
or
mulb
ljmp
leave
lea
enter
mov
xor
xor
add
mov
adc
mov
mov
mov
mov
mov
jmp
ds
fistl
push
push
leave
adc
xchg
movlps
inc
add
push
lods
call
je
inc
test
je
mov
pop
or
in
into
adc
jmp
mov
or
outsb
test
and
mov
jo
and
mov
dec
addr16
push
lret
pop
insl
repnz
into
cmp
adc
add
in
xor
xchg
daa
psrlw
out
add
popf
das
movsl
xlat
xchg
es
lock
mov
sub
dec
test
and
jo
dec
cmp
push
cmpsb
lahf
jmp
ds
xor
pop
push
or
push
ror
jmp
adc
dec
push
je
push
mov
and
lahf
insb
std
das
sbb
aas
fcoms
push
mov
push
cmpl
sarb
and
inc
push
push
mov
and
gs
es
lahf
mov
mov
cmp
out
shrl
adc
jmp
xchg
xor
icebp
arpl
fbstp
leave
push
inc
lret
negl
lock
lret
daa
push
mov
sahf
lods
mov
fldl
pop
lret
in
adc
cltd
pop
fstpl
rcrl
push
adc
jle
lret
xchg
ljmp
fsubrs
jmp
jns
mov
xor
mov
mov
out
jp
mov
shlb
movsl
loopne
bound
xor
mov
test
decl
xchg
dec
pushf
xchg
fwait
jmp
add
outsl
scas
push
push
fcom
fadds
mul
mov
cltd
mov
sub
out
loope
inc
inc
and
adc
leave
lahf
and
icebp
loop
push
movsb
orl
jmp
push
dec
xchg
out
and
gs
push
pop
xor
cmpsb
and
adc
aad
ds
dec
out
mov
mov
mov
and
and
imul
jne
ljmp
popf
xchg
leave
fwait
and
mov
pop
adc
sub
mov
dec
pop
lock
shrl
pop
test
iret
pop
fucomp
sub
sbb
shlb
sub
mov
mov
sbb
jmp
sbbl
cmp
aam
pop
lods
sbb
cmp
add
adc
xchg
movlps
cmp
out
stc
je
mov
inc
push
scas
cwtl
push
jg
popf
int
xchg
insl
jo
sti
jae
pop
out
test
arpl
dec
out
gs
fiadds
lcall
xchg
subl
xor
das
mov
mov
or
test
adc
pop
pusha
dec
xor
in
inc
adc
xchg
mov
or
iret
testb
cmpsb
mov
cmp
bound
mov
push
mov
mov
xchg
jmp
js
push
icebp
push
inc
outsl
cmp
inc
mov
jnp
rclb
mov
fisubrl
dec
cmp
scas
cmp
dec
sti
test
lds
dec
fldenv
pop
fsubrs
mov
les
push
mov
inc
arpl
or
imul
test
in
xchg
inc
cltd
xor
xor
js
ljmp
decb
aas
shll
jle
repz
inc
aam
sbbl
jle
ss
dec
test
mov
mov
jns
xor
lret
mov
mov
pop
mov
ret
jne
jnp
jb
test
adc
cvtdq2ps
fldenv
dec
and
in
movsl
push
mov
frstor
imul
hlt
sti
inc
fcomps
sbb
test
xlat
mov
stos
mov
in
adc
jbe
add
cld
mov
or
cmpsb
push
fwait
mov
and
lods
or
xor
jnp
jb
mov
sbb
xor
mov
pinsrw
jp
cmp
and
mov
lea
xor
cmpsb
mov
push
in
mov
mov
adc
adc
sarb
dec
sub
das
pop
out
push
sahf
lea
mov
lock
mov
and
sbb
sub
pop
xchg
mov
mov
call
mov
imul
sub
js
xchg
mov
and
fsubrl
rorb
add
mov
adc
push
xor
mov
pop
sub
mov
sub
jmp
rclb
mov
insb
das
jns
insb
add
adc
into
xor
lods
addr16
lea
pop
je
insb
popa
push
jle
std
mov
lret
js
sub
jne
ret
xor
or
movsl
adc
push
test
dec
push
jp
in
inc
setb
jp
xlat
ja
xchg
setl
test
adc
sbb
and
popf
out
aas
xchg
pop
in
daa
push
cmpsl
pusha
sbb
in
in
lea
pop
hlt
clc
sbb
ljmp
js
or
mov
fisubl
adc
cmpsb
xlat
and
cld
neg
mov
mov
add
pop
push
adc
rcll
jmp
or
or
and
xchg
mov
mov
mov
or
xor
pop
in
push
mov
or
cmp
and
push
daa
adc
inc
aam
push
cmp
sarl
or
or
outsb
push
mov
inc
lods
fwait
and
xchg
cmp
mov
push
lea
loope
jnp
dec
cmc
xchg
ret
and
imull
xlat
cmpsl
outsb
push
or
sub
cmp
clc
cld
add
mov
test
mov
pop
pop
push
cmpsb
push
inc
cmp
mov
xlat
or
leave
test
dec
sbb
xchg
adc
jne
cmpsl
inc
imul
out
mulb
cmp
testl
arpl
ret
xchg
lret
pusha
mov
adc
jbe
xlat
aad
pop
inc
les
sahf
cli
dec
das
xchg
dec
cltd
sub
fnstcw
mov
pop
inc
mov
out
push
pop
xchg
stos
push
icebp
jno
imul
mov
ret
dec
bound
mov
in
mov
js
arpl
sbb
or
and
icebp
sub
and
neg
dec
andb
jmp
xchg
push
mov
dec
fistps
lods
pushf
icebp
out
jns
lahf
add
cltd
sub
push
inc
mov
cltd
sub
and
jns
scas
mov
mov
xchg
fsubp
mov
call
mov
mov
add
xor
jmp
fnsave
cmp
add
add
adc
adc
xchg
das
xor
or
lods
sub
pusha
dec
dec
xchg
gs
cmp
je
add
jno
push
inc
jns
adc
outsl
roll
xor
mov
out
pop
xor
sub
or
div
xchg
flds
insb
es
in
lods
push
jne
mov
outsb
rcl
pushl
dec
sub
jnp,pn
mov
and
mov
push
sahf
repnz
ret
fldt
cmp
aad
test
xor
out
sar
repz
xchg
mov
pop
test
cmpb
movsb
cli
sbb
mov
cmp
scas
mov
or
dec
or
ret
nop
das
faddl
push
xchg
or
pop
xchg
sub
dec
mov
sahf
and
push
loop
retw
scas
fistpll
jl
or
dec
pop
movsl
adc
movsb
std
add
mov
cmp
pop
outsl
jbe
insb
in
bound
pop
jmp
incb
mov
je
and
push
cmp
push
xchg
test
pop
cmp
inc
je
push
movb
enter
int
pop
pop
pop
imul
sahf
mov
jl
sub
xchg
out
sub
lods
mov
cltd
data16
shrb
lcall
bound
sub
int
test
scas
stos
stc
ss
cs
cmpsl
pushf
out
mov
sub
jo
cmp
push
or
stos
xor
andb
aam
mov
xchg
aad
cmp
push
idivb
ljmp
lds
mov
jmp
xor
fbstp
jecxz
movsb
lock
and
xor
testb
adc
xchg
movsl
pusha
jge
add
push
clc
pop
mov
enter
loop
push
loop,pn
call
imul
dec
lret
or
fiaddl
sbb
and
movsl
sub
fldenv
cld
std
sbb
pop
test
ds
fisttps
xor
cltd
and
stos
jge
add
pop
rcr
sbb
push
jnp
push
ret
cltd
xor
xor
repnz
ret
leave
shr
or
shl
or
mov
push
mov
mov
mov
push
push
push
call
mov
mov
mov
or
mov
or
mov
add
jmp
inc
lds
gs
inc
and
imul
mov
stos
test
adc
sub
sbb
mov
ljmp
pop
mov
popf
rcl
addb
ja
mov
xor
aam
loopne
dec
inc
pop
dec
insb
loop
mov
lods
sub
dec
add
sti
xchg
or
aam
mov
jmp
and
jne
repz
incl
test
loope
cmp
in
out
xchg
ret
xchg
in
bound
pop
cmp
enter
inc
push
add
mov
and
arpl
outsb
rorl
dec
push
inc
loope
cmp
aaa
ja
pusha
lret
fcos
stos
fsubrs
cwtl
lds
pop
jbe
outsl
push
dec
popf
jb
cmp
sbb
jle
mov
jp
lahf
nop
shl
call
cwtl
jbe
iret
lahf
mov
mov
fnstsw
andl
pop
lods
lds
stos
lcall
je
dec
outsl
adc
es
fcompl
mov
cmpsl
pop
insb
pop
dec
cmpsl
xor
mov
lret
dec
mov
push
adc
aad
mov
arpl
xchg
stc
jg
repnz
out
lds
inc
sub
dec
in
jl
idiv
adc
push
dec
stos
xor
idivb
jecxz
psubsw
mov
adc
in
or
dec
inc
sbb
iret
xchg
addb
sub
leave
ficomps
push
lock
xor
outsl
cld
jle
sub
pop
and
jb
clc
sbb
test
out
adc
push
ja
xor
or
jo
test
sahf
lret
ret
mov
imul
push
mov
push
mov
pushf
jne
fwait
push
aas
xchg
movsl
mov
pushw
in
out
pop
push
ljmp
daa
fs
nop
jmp
jge
mov
es
pop
and
enterw
inc
pop
std
mov
mov
sbb
les
sbb
push
mov
out
inc
pop
mov
imul
rcrb
pop
mov
adc
mov
add
mov
adc
add
adc
pop
mov
mov
pop
leave
ret
push
mov
sub
movl
movl
movl
movl
jmp
hlt
aaa
add
pop
dec
pop
sbb
bound
scas
adc
add
adc
pop
pushf
in
cmp
pop
sbb
shl
add
filds
push
data16
push
js
lcall
popf
jge
cwtl
push
das
out
fbld
xchg
sarb
jno
sub
daa
add
dec
jns
jp
test
push
nop
inc
lock
fists
in
int
inc
or
xchg
sub
test
mov
shll
jmp
and
mov
or
mov
cli
pop
jbe
mov
push
cmp
add
fsubp
and
and
ljmp
rorb
pop
fadd
je
xor
out
out
xchg
cmpb
ficoms
and
fldenv
out
divl
pop
jo
add
rcrb
push
and
popf
sbb
fsubrl
mov
hlt
hlt
fdivrp
mov
pop
sar
int
mov
ss
icebp
xor
mov
cmovo
cmp
dec
cmc
adc
call
pop
sbb
or
xchg
ds
jnp
dec
add
gs
xchg
sti
add
push
add
test
std
stos
mov
add
aas
aaa
movsb
cli
in
xchg
loop
sbb
inc
fwait
jbe
xchg
out
add
inc
shlb
rcrl
mov
and
cmp
cmp
mov
int3
cltd
cmp
push
negb
sbb
mov
and
mov
adc
inc
mov
icebp
test
add
jnp
lret
and
lahf
test
push
pop
or
cltd
push
mov
inc
rorb
aad
or
cmp
and
out
xor
lahf
mov
addb
or
inc
insl
adc
loop
xlat
cmp
fildll
pop
mov
fistpll
mov
pop
rcll
orl
jnp
sub
nop
pop
cmp
subl
ljmp
jb
xchg
pop
loope
js
pushf
btc
cmp
rclb
jne
mov
addb
lcall
out
out
add
ficomps
push
jnp
fwait
and
inc
notl
pop
dec
mov
xchg
pop
cmpb
mov
sbb
cmpsl
sbb
ja
sbb
arpl
stos
pop
out
cmpb
inc
pop
push
les
xchg
into
ficoml
dec
leave
rorb
mov
psllq
stos
sub
pop
in
negl
mov
sbb
mov
sbbb
ja
negl
daa
push
push
pop
int
lods
cltd
shlw
mov
in
in
loopne
cmp
or
dec
imul
jp
jbe,pt
or
sbb
xor
insl
mov
dec
mov
adc
pop
mov
sarb
adcl
in
xchg
es
push
add
or
jge
push
inc
dec
or
pop
inc
mov
mov
lods
ret
in
jg
and
push
popl
mov
pop
out
iret
xchg
mov
xchg
cmp
mov
sub
cmp
push
jge
out
outsb
inc
mov
push
pop
dec
dec
xchg
sub
jns
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
and
add
mov
and
mov
sub
and
mov
mov
imul
add
add
xor
jmp
xor
cmpsb
pop
cmpsb
pop
sub
jg
push
push
stos
add
add
adc
xlat
jl
sbb
aad
add
ja
push
mov
insb
or
stos
push
xchg
into
mov
or
dec
mov
pusha
cmpsl
int3
dec
out
dec
aaa
add
js
fwait
sahf
pop
and
dec
insb
lods
dec
xchg
mov
pop
lret
aaa
aam
sbb
loop
push
mov
pop
dec
mov
adc
jb
inc
mov
je
xchg
mov
in
andl
jnp
or
pop
xchg
dec
jmp
ffreep
push
ss
jns
fiaddl
testb
dec
dec
les
int3
out
inc
mov
loope
popa
movsb
pushf
mov
ret
inc
sahf
mov
lret
lock
icebp
addl
repnz
std
add
fcmovnbe
xor
mov
sub
push
mov
sub
in
sub
loop
dec
inc
cltd
dec
lea
inc
int
out
mov
mov
popf
dec
fildll
lea
lret
sahf
in
pop
dec
aaa
cmpsl
xchg
into
movsl
xchg
mov
lds
lds
xlat
dec
enter
mov
push
lret
enter
and
outsb
das
aas
inc
pop
cmc
pop
jne
mov
std
shll
aas
or
lods
mov
jno
xchg
mov
adc
shrl
aaa
rcrb
js
mov
mov
lahf
xor
repnz
fsubl
push
push
stos
add
jg
popa
xchg
scas
fs
iret
test
mov
aas
pop
pop
push
imul
outsl
sbb
and
and
shrl
insb
and
div
and
dec
xor
mov
cmp
or
insl
into
jae
jle
scas
mov
stos
cmpsl
sbb
mov
push
scas
add
out
aam
cmpsl
xlat
inc
leave
or
add
out
inc
xor
rcrl
inc
sbb
xchg
lahf
loop
testl
sbbl
xchg
stos
negl
lds
cmp
icebp
cli
outsl
add
test
and
push
movsb
cmp
push
push
cmp
addl
inc
int
sub
scas
inc
es
lea
cmpsl
and
bound
sahf
ret
pushf
xor
or
jp
xor
mov
inc
xor
pushl
jp
dec
and
jne
orl
push
out
sahf
dec
lds
add
sub
dec
add
push
ret
cmpb
stos
adc
xor
add
lcall
dec
fildll
xorl
fisubrl
pusha
insl
mov
lret
push
das
lcall
and
push
mov
popa
sub
out
jns
scas
add
sbb
jmp
pop
daa
xor
fwait
jge
lret
adc
sub
add
arpl
cmpsb
dec
or
incl
pop
dec
cli
inc
sbb
jb
jp
and
mov
xor
stos
lds
lds
paddd
dec
push
xor
in
cltd
jle
movsl
das
and
sbb
mov
neg
pop
sbb
addl
mov
xor
icebp
dec
add
jnp,pn
sub
cmp
movsb
sarl
jmp
jl
js
cmp
adc
insb
je
cmp
jne
mov
mov
mov
sub
add
mov
or
mov
imul
sub
add
mov
or
mov
mov
add
imul
add
mov
add
mov
mov
mov
and
mov
and
mov
imul
mov
or
mov
imul
mov
sub
cmp
je
jmp
loop
repnz
es
jbe
mov
add
adc
mov
sub
aas
jp
ret
jbe
stos
outsb
xor
aad
mov
mov
sahf
mov
imul
pop
pop
sbb
pop
jbe
in
cmc
ficoml
test
adc
fldcw
xor
gs
jl
jbe
xchg
push
loop
add
jl
pop
xor
pop
pop
lea
or
mov
mov
mov
mov
mov
ret
insl
jmp
push
leave
inc
jge
int3
fst
imul
mov
cmpb
jp
mov
pop
adc
adc
testl
and
mov
outsb
insb
adc
inc
cmc
rorb
push
mov
xchg
aad
cmc
lea
and
pop
insb
dec
xchg
popf
and
mov
jne
xchg
into
dec
cwtl
xor
push
xor
sti
and
or
subl
push
outsl
add
fs
pop
divl
ja
cmp
int
push
loop
jecxz
cwtl
fs
pop
pop
cmp
cmpb
daa
xlat
lret
sbb
lods
flds
cmp
fisubs
mov
push
mov
push
lods
fstpt
and
push
push
shll
jne
sbb
add
jo
xor
sub
push
setg
dec
loop
adc
dec
sub
bswap
lret
jno
cli
inc
mov
aad
or
outsb
push
xchg
push
mov
call
mov
fisttpll
dec
test
sbbb
and
xor
daa
mov
in
cmp
outsl
push
jo
stc
int3
in
pop
jne
mov
lret
lock
dec
iret
xchg
shrb
xlat
jmp
add
sub
xor
mov
jmp
mov
mov
leave
push
fisttpl
bound
mov
pop
mov
adc
adcl
mov
fstpt
push
shrl
add
stc
shlb
mov
test
out
ss
popl
adc
jne
xchg
cmp
lcall
xor
daa
sub
aaa
and
xlat
stc
mov
xlat
sbb
jmp
lret
or
addr16
or
xlat
mov
add
jecxz
adc
sbb
pop
leave
in
adc
jl
pusha
mov
push
and
stos
stos
aaa
xchg
xchg
jl
mov
pop
imul
inc
ret
push
sbb
pop
iret
mov
popa
scas
push
ret
push
nop
fsubs
jecxz
aas
push
or
in
pusha
xor
movsl
or
leave
sbb
push
les
push
mov
fdiv
in
inc
xor
lcall
cmp
inc
cmp
shrl
and
in
fcomi
es
and
pusha
dec
and
fsubrs
sbb
cmp
push
jbe
rorl
nop
push
lods
data16
roll
popa
loope
mov
subl
paddsb
lock
loopne
stc
pushf
adc
jns
mov
dec
repnz
push
stc
loope
jns
pop
jmp
cmp
loop
outsl
loopne
jmp
jbe
add
mov
jmp
mov
sub
xor
add
jmp
movl
movl
mov
mov
imul
add
and
add
or
sub
leave
ret
push
mov
and
sub
jmp
popf
jnp
cwtl
sub
loopne
cmpl
adc
adc
scas
int
ljmp
fcomps
mov
jmp
add
outsl
rcl
les
mov
pusha
sub
mov
jg
aaa
shrl
sahf
out
rcl
lock
in
pop
jmp
pop
icebp
shr
pop
outsb
sub
dec
jl
dec
mov
jmp
mov
xchg
sbb
out
test
pushf
std
lock
inc
ret
sub
pop
xor
das
fistl
and
jp
movsb
cwtl
add
fisttpll
leave
lcall
pusha
sbb
or
popa
pop
adc
jo
sbb
dec
sbb
loopne
xor
pop
xchg
ficoml
les
test
gs
subb
cmpsb
icebp
and
push
shll
aad
mov
push
mov
push
loop
loopne
inc
pop
and
add
pop
aaa
shlb
adc
cli
and
sbb
movsb
jg
mov
inc
outsb
jo
cmp
mov
sarb
inc
mov
adc
ret
dec
loopne
sbb
cli
mov
inc
mov
popf
pop
dec
call
scas
jp
addb
ret
subl
filds
enter
rolb
dec
push
xor
pop
shll
mov
jns
stos
push
xchg
jle
mov
inc
sub
push
or
jno
xchg
aaa
testl
clc
mov
jne
rclb
dec
pop
in
insb
in
dec
inc
aad
dec
in
mov
nop
dec
ret
mov
ret
scas
push
fxch
out
or
imul
addb
mov
or
pop
sbb
loope
call
push
sub
jne
loop
cmp
mov
or
and
sub
jns
push
enter
inc
sti
mov
adc
xor
sarl
push
pop
cs
loop
pop
loope
call
jns
xor
cs
stos
mov
jecxz
sbb
cmp
pop
stc
pop
or
or
cltd
jno
pop
in
flds
in
test
sbb
fdivrl
xor
cmpsb
ja
aaa
sbb
pop
pop
jo
pop
pop
inc
dec
push
cs
leave
into
int3
sbb
pop
sbb
sahf
lea
out
xor
mov
bound
add
fmulp
insl
dec
stc
mov
inc
mov
sbb
mov
fimull
cld
sbb
add
xchg
xor
outsl
sti
rolb
cld
mov
push
mov
mov
fs
fmull
shl
ret
stc
jl
stos
loopne
stos
scas
sbb
cld
add
shl
sub
ret
mov
dec
push
pop
in
jns
jae
dec
hlt
pop
popa
mov
xchg
scas
push
jb
imulb
xchg
xor
insb
inc
pop
js
ret
sbb
xor
adc
pop
mov
in
push
test
pusha
fcmovnu
push
loop
xchg
aaa
adc
sbb
fists
stos
inc
push
or
hlt
fstps
stos
fstps
int
sub
jb
leave
mov
sbb
dec
dec
std
mov
decl
leave
divb
xchg
adc
fdivrp
dec
das
pop
lret
lahf
mov
sub
sub
pop
fisttpll
insb
jnp
and
pop
mov
mov
pop
rcl
pop
pop
add
ret
xchg
outsl
push
shlb
push
cltd
das
add
in
cmpsl
jecxz
mov
cmp
sub
mov
lods
mov
ss
jae
inc
cltd
dec
push
divb
iret
aam
frstor
lods
push
imul
addl
adc
inc
and
mov
mov
sub
sbb
mov
orl
orl
lea
push
jmp
dec
mov
loope
and
les
cwtl
lods
aas
neg
mov
jne
adc
test
clc
ljmp
sbb
sbb
repnz
push
pop
cmc
jb
ja
out
xchg
xor
fadds
dec
cli
adc
outsb
inc
mov
mov
ljmp
xchg
mov
lahf
fwait
dec
mov
push
call
movsb
adc
lods
incb
in
leave
dec
jae
inc
mov
lds
xor
pop
testl
das
mov
adc
xor
and
lret
push
jo
push
mov
loop
mov
cltd
sub
call
xchg
pop
inc
imul
aam
aad
dec
ret
out
aad
jb
pop
leave
mov
sub
push
xor
imul
movsb
dec
lods
dec
lds
jnp
and
mov
out
into
gs
push
cmp
repnz
and
xchg
jno
jl
es
or
insb
sahf
cmpb
mov
inc
insl
ja
dec
pusha
fcomps
add
mov
in
xchg
enter
out
sub
pop
stc
add
das
push
ja
sub
sti
dec
push
imul
mov
inc
mov
in
cmp
out
adc
data16
push
and
rcrb
jl
xor
lods
mov
and
jno
mov
fdivrs
dec
or
call
push
dec
inc
mov
imul
dec
pop
cmpsl
iret
sti
fistpll
aas
pop
mov
stos
stos
pop
stos
push
pushf
stos
jp
loope
push
xchg
add
cwtl
pushf
mov
add
jg
enter
cltd
lcall
jmp
mov
mov
xchg
or
mov
or
dec
jg
cltd
push
xchg
push
sub
adc
clc
cmp
sbb
stc
adc
mov
dec
hlt
sbb
push
dec
testb
mov
xchg
sbb
cmp
mov
dec
in
jmp
sbb
push
movl
xor
popa
jle
outsb
mov
repz
stos
pusha
or
in
push
sub
movsl
pop
cwtl
icebp
push
cmp
fs
adc
outsl
xchg
add
dec
mov
test
xlat
andb
xor
in
jnp
stos
lret
pop
rclb
mov
int3
lods
rol
aaa
push
rol
leave
lahf
outsb
mov
or
adc
out
mov
leave
loop
jne
lea
mov
addr16
outsb
dec
fcompl
xchg
out
cli
or
loop
aaa
daa
or
js
out
push
ja
sbb
inc
xchg
pusha
xor
jge
test
cs
xchg
bswap
cltd
or
inc
adc
dec
push
jb
or
inc
add
push
dec
push
mov
movsb
inc
adc
fstl
cmp
and
xor
popa
subl
and
jecxz
pop
daa
mov
jmp
dec
int3
mov
dec
mov
loopne
cmp
stc
sbb
and
adc
insl
cmp
ss
pop
gs
out
call
cmp
sub
movsl
addb
test
dec
ret
xchg
nop
mov
pushf
push
mov
mov
lcall
ds
iret
adc
mov
pusha
sub
popa
mov
fisubs
das
fmul
rorl
and
jecxz
test
lret
adc
or
loopne
push
inc
mov
add
inc
sar
push
into
shl
push
je
lea
push
call
mov
mov
pushl
mov
pushl
mov
pushl
pushl
pushl
pushl
pushl
call
pop
pop
mov
pop
ret
push
mov
sub
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
add
xor
mov
and
imul
xor
push
movl
movl
movl
mov
mov
xor
sub
div
mov
mov
or
xor
mov
sub
mov
mov
mov
mov
mov
mov
mov
mov
imul
and
or
xor
add
mov
mov
sub
add
mov
xor
mov
and
mov
xor
sub
jmp
popf
mov
and
sbb
js
adc
mov
fimull
adc
jg
arpl
xchg
les
cmp
mov
lahf
mov
inc
sbb
loopne
mulb
xor
fidivrs
adc
mov
sub
dec
add
roll
repnz
sbb
sbbb
mov
ljmp
faddl
mov
cmp
and
jmp
into
shll
repz
popf
gs
xor
xchg
pop
aam
cmp
mov
mov
les
inc
sub
cmpsl
int
lcall
mov
add
xchg
fs
rcrb
lahf
or
and
pop
pushf
push
out
popf
push
gs
cmpsb
push
sub
dec
testb
popa
xor
into
sub
por
insb
sub
daa
push
out
rcrl
add
mov
loope
dec
add
sbb
xor
cltd
xor
mov
cmp
fimuls
adc
fisubrl
xchg
add
popa
dec
shl
fwait
xchg
bound
scas
add
negb
test
loopne
add
push
shll
adc
sub
pop
add
jge
ja
fs
add
cld
push
add
rcrl
pop
xor
mov
push
jmp
fmull
inc
cld
push
adc
and
loop
or
pop
xchg
pop
push
sub
jnp
into
sub
jl
xchg
dec
add
sub
jle
ret
insl
ljmp
add
aas
push
pop
mov
add
mov
inc
test
ss
mov
push
sub
mov
jg
data16
mov
jl
xor
adc
cmp
cli
mov
mov
sbb
sahf
inc
mov
mov
xor
das
shll
loop
imul
sbb
int
xor
push
sub
imul
push
lds
stc
aam
xchg
xchg
scas
fwait
notb
leave
lea
jbe
mov
mov
and
lea
mov
shr
or
mov
sub
add
cmp
jbe
pop
leave
ret
push
mov
sub
add
push
cmpl
notl
movl
movl
mov
jmp
movl
movl
jle
pushl
push
push
call
xor
or
sbb
add
cmpl
movl
mov
jmp
mov
je
push
pushl
pushl
call
or
sbbl
sub
xor
or
mov
sub
xor
xor
add
and
push
notl
push
mov
mov
shrd
cmpl
movl
movzbl
mov
jmp
mov
jbe
pushl
pushl
push
call
add
dec
xorl
add
sbb
and
shr
cmpl
mov
movl
movl
jmp
mov
ja
push
call
mov
xor
sub
add
xor
sub
xor
add
adc
mov
cmpl
mov
mov
mov
jmp
notl
jbe
push
push
push
call
add
xor
addl
add
mov
mov
add
sbb
mov
cmpl
movl
mov
movl
jmp
movzwl
jb
pushl
call
adc
mov
xor
add
sub
or
mov
mov
or
and
adc
movl
xor
adc
mov
xor
cmpl
movl
mov
movl
jmp
movl
movl
jae
push
pushl
push
call
xor
xor
or
mov
sub
movl
movzwl
sub
mov
or
adc
not
mov
add
xor
or
mov
mov
cmpl
movl
mov
movl
movzwl
jmp
mov
jle
pushl
push
push
push
push
push
call
mov
add
add
inc
add
mov
and
mov
or
and
sbb
shl
mov
shrd
xor
sbb
shr
cmpl
movl
mov
mov
movzwl
jmp
movl
movl
ja
push
push
pushl
push
pushl
call
or
xor
or
adc
adc
movzwl
xor
sub
adcl
and
mov
mov
cmpl
movl
mov
movl
movl
jmp
mov
movl
ja
push
pushl
push
pushl
push
call
xor
add
adc
subl
movzwl
sbb
mov
xor
andl
movzbl
adc
xor
sbb
or
orl
mov
neg
mov
negl
mov
cmpl
movl
mov
mov
jmp
movl
not
jge
pushl
pushl
pushl
call
sbb
sub
notl
sub
sbb
add
mov
adc
mov
mov
cmpl
mov
movl
movl
jmp
mov
mov
jle
push
call
sbbl
xor
or
or
mov
movzbl
sbb
mov
cmpl
mov
not
jmp
mov
jne
push
pushl
push
pushl
pushl
pushl
push
call
andl
and
or
movzwl
add
or
mov
adc
mov
orl
shl
xor
movzwl
add
xor
sub
mov
cmpl
not
mov
mov
movzwl
jmp
mov
mov
ja
push
push
pushl
pushl
push
call
xor
xorl
sub
or
mov
and
mov
xor
shld
shl
mov
movl
movl
movl
movl
movl
cmp
movl
jne
movl
cmp
je
adc
mov
movzbl
adc
mov
sbb
xor
xor
xor
mov
mov
andl
shld
shl
jmp
ffree
addl
cmp
push
inc
mov
adc
movlps
jns
loop
inc
and
cmp
popf
int
nop
cmp
loopne
add
or
outsl
xor
push
test
aaa
or
sahf
insb
jmp
jle
jg
adcl
insl
inc
aam
testb
cli
std
popa
lahf
in
inc
or
sti
cmp
sbb
add
pop
adc
and
mov
cwtl
fs
push
in
mov
lock
inc
xchg
roll
lock
leave
sub
jp
xor
mov
iret
dec
faddl
inc
movsl
xchg
popf
and
jne
mov
sbbb
sbb
xchg
in
clc
out
lahf
jnp
mov
jg
filds
push
call
adc
and
jg
out
ret
filds
stc
inc
pusha
fwait
adc
dec
outsl
dec
jnp
mov
pop
rcl
add
xor
inc
lock
inc
sahf
insl
fildll
bound
pop
sbb
push
aas
fildll
out
addr16
mov
sti
stos
daa
loopne
jmp
scas
mov
insb
xchg
dec
push
jecxz
and
xchg
insl
sub
adc
arpl
sub
push
arpl
pop
std
adcb
jnp
xchg
xchg
das
outsb
xchg
loope
push
bswap
xchg
out
lea
inc
ljmp
add
pop
jo
cmp
rclb
lods
mov
jmp
mov
imul
mov
cwtl
std
cwtl
lcall
adc
mov
and
dec
clc
int3
jmp
and
mov
adc
push
push
pushf
cmc
mov
cmp
hlt
stc
repnz
pop
add
repnz
mov
dec
mov
cmp
lock
arpl
sar
sti
loop
jns
sahf
roll
or
inc
pop
dec
lret
adc
outsl
cmc
cmp
fdivr
sub
rorb
and
imul
mov
cwtl
ret
mov
leave
das
pop
pop
pushf
popa
push
and
cmp
pop
xchg
dec
bound
jb
or
daa
xchg
mov
xchg
les
test
pop
sbb
xchg
cmp
pop
push
hlt
enter
js
pop
xor
enter
cs
and
lret
mov
jmp
cmp
push
pop
loopne
test
insb
rolb
fbstp
shrb
push
inc
add
test
add
add
cli
je
mov
mov
push
pop
xor
shl
mov
xor
shr
or
mov
mov
mov
mov
mov
mov
push
pop
sub
mov
add
mov
lea
mov
mov
mov
xor
jmp
gs
test
dec
jmp
push
or
jle
test
adc
movlps
sbb
mov
inc
es
mov
iret
jle
mov
dec
filds
test
insb
mov
stos
xchg
iret
into
lea
mov
lahf
push
or
popf
nop
stos
lret
xorl
frstor
lret
xchg
int3
mov
xchg
bound
mov
mov
mov
jb
xchg
out
es
pop
xor
data16
les
out
push
mov
inc
push
test
mov
dec
and
add
rolb
mov
loop
lea
daa
pop
sbb
aaa
and
test
mov
aaa
ret
mov
inc
and
cmp
lods
dec
mov
pop
adc
jnp
das
cmp
out
pop
insb
jle
mov
mov
pop
pop
or
or
add
in
loope
push
inc
jns
jns
mov
cltd
repnz
lods
mov
mov
mov
sub
mov
xchg
lcall
mov
cs
faddl
ss
push
leave
lret
iret
test
xchg
ja
std
outsb
in
jg
mov
std
jecxz
push
insl
and
pop
jae
sub
lods
mov
fsubr
rclb
in
dec
je
js
fdivl
xchg
pop
xchg
popf
out
xchg
add
dec
pop
in
and
cmc
sbb
ds
shlb
dec
xchg
repz
mov
xchg
into
add
dec
pop
lock
add
shrb
shrl
lods
rcl
mov
mov
mov
cmp
push
jns
cmp
sbb
mov
mov
in
sub
cwtl
int
add
daa
jo
push
pop
iret
xchg
dec
pushf
cmp
xchg
sbb
lods
test
jo
dec
pop
ds
stos
aam
cmp
xchg
add
scas
push
push
aas
nop
popa
cmpsb
add
cwtl
aas
shlb
jp
inc
rclb
add
aam
mov
pop
ss
xor
mov
sbb
mov
mov
adc
out
daa
xchg
sub
inc
jl
push
push
leave
dec
jp
xchg
ljmp
pushf
hlt
js
loope
inc
jl
sbb
fdivp
push
and
xlat
xchg
stos
xor
aad
mov
hlt
andb
jp
sub
out
outsb
fwait
mov
sbbb
loope
lret
shr
shl
or
mov
movl
mov
mov
xor
xor
shr
shl
or
push
lea
push
jmp
xchg
enter
pop
cs
lcall
movlps
aaa
pushl
mov
int3
idivb
nop
into
lea
daa
test
hlt
xor
mov
mov
cld
data16
out
xchg
cmp
movsb
mov
ds
stc
sub
cmp
pop
pop
fldlg2
and
cli
or
scas
lahf
addr16
mov
inc
ror
or
in
pushl
pop
out
std
movsb
ret
test
fistpll
insl
xchg
lds
mov
mov
xor
hlt
jmp
jle
inc
cmp
mov
cmp
push
jg
sahf
sbb
xchg
sti
sti
outsl
rcr
push
mov
add
out
or
xor
xchg
pusha
out
lret
scas
bound
insb
cmp
cmp
test
xor
and
into
mov
inc
subb
push
lret
addr16
inc
jmp
in
hlt
push
mov
xor
sbb
fmull
dec
inc
cmc
sahf
jae
in
idivb
out
bound
sbb
dec
push
ja
mov
rcrb
add
push
pop
sub
mov
sbb
mov
xlat
push
jecxz,pt
std
adc
mov
imul
push
mov
jmp
push
jmp
cld
xchg
dec
jp
fnstcw
mov
sti
adc
lahf
dec
mov
adc
dec
imul
push
xchg
iret
sti
stc
fdivrl
xlat
add
ds
es
pop
shlb
cmp
inc
aad
pusha
dec
repnz
call
push
loop
movsb
lahf
pushf
gs
push
ds
icebp
xchg
imul
xchg
lods
psrlw
and
stos
mov
cmp
addr16
push
ljmp
lods
pop
scas
test
dec
insl
jg
js
cmpsb
add
sbb
insb
shll
ror
ljmp
arpl
jmp
adc
insb
mov
xor
inc
loop
mov
ja
rorl
push
mov
lret
or
jo
test
jmp
inc
dec
mov
fisubs
loopne
into
sti
sahf
jbe
enter
mov
push
aaa
outsb
push
jnp
icebp
mov
jmp
daa
das
pop
adc
shr
shll
push
nop
add
dec
cltd
sbb
movsb
sbb
subl
inc
push
leave
arpl
xor
jnp
cmpsb
insl
jbe
imul
inc
pop
ret
mul
je
cmp
adc
decl
clc
xor
xor
shr
shl
or
push
lea
push
mov
mov
shrd
shr
mov
mov
xor
xor
or
lea
push
jmp
adc
sbb
sbb
clc
ja
adc
movlps
fcoms
popf
out
add
push
cmp
dec
pusha
int
daa
ljmp
xorb
mov
adc
xchg
push
les
hlt
mov
xchg
cmp
and
jmp
adc
rorb
incb
lret
adcb
outsb
adc
dec
mov
xchg
mov
and
add
or
outsl
and
mov
cmp
insl
test
frstor
ds
insb
ja
movl
mov
fbstp
std
mov
imul
cmp
scas
xchg
xchg
pop
push
mov
arpl
out
jl
mov
call
add
lahf
hlt
xchg
int
xor
lds
arpl
xchg
and
cmc
outsl
sarb
push
rol
rcl
popa
mov
into
movsb
dec
sbb
dec
mov
fcoml
or
pop
mov
repz
push
xchg
aam
les
dec
push
adc
fcomip
ret
mov
addb
fwait
push
inc
add
push
cmpl
xchg
jge
iret
es
dec
mov
inc
cmc
pop
jmp
lret
shlb
sub
scas
insl
xor
mov
not
sbb
stc
add
push
or
pop
mov
jmp
sbb
cmp
rolb
ret
ficomps
xchg
rcrb
jg
jae
out
and
lret
cld
push
arpl
call
adc
dec
pop
push
ljmp
xor
ds
mov
das
shrb
pop
mov
cs
or
mov
inc
dec
icebp
xor
and
add
out
loope
sbb
in
ret
cmp
dec
pmaxub
lds
cmp
movsl
fcompl
xchg
jns
dec
mov
mov
xor
ret
adc
mov
icebp
cwtl
ja
cmc
sub
int
loopne
js
clc
inc
inc
out
mov
xor
add
jge
cmp
cwtl
xchg
jl
cmp
ss
jne
lahf
jns
xchg
pop
or
push
push
sahf
and
movsl
or
xchg
iret
xchg
inc
loop
leave
mov
mov
mov
fisubrs
mov
lret
scas
test
mov
es
fldenv
sahf
push
ljmp
loope
call
mov
jmp
js
cmc
repz
sub
fiadds
js
jne
adc
movlps
inc
mov
fists
int3
imul
into
cli
std
xlat
dec
je
pusha
adc
jns
movb
cld
pop
adc
xchg
lock
pushf
and
jns
lret
xchg
xor
fldlg2
mov
mov
push
movsl
add
rcrb
fidivl
jmp
dec
sarl
and
and
loope
mov
enter
enter
test
shlb
outsl
insl
fwait
mov
sarb
out
mov
mov
aam
push
aad
out
mov
push
aam
incl
mov
enter
daa
testl
cwtl
test
sar
sbb
and
ret
inc
nop
mov
pop
jae
mov
push
iret
jae
add
jnp
push
ffreep
pop
test
clc
push
pushf
shrl
xor
mov
aam
out
pop
loope
pop
cmp
jno
negb
xor
js
test
int
mov
lea
add
lods
and
jp
gs
nop
mov
push
jecxz
das
xchg
dec
out
aad
and
mov
dec
lds
sbb
mov
mov
aaa
scas
mov
pop
mov
decl
addr16
into
std
inc
jmp
sarl
daa
pusha
pop
mov
xchg
xor
mov
or
es
sti
sahf
mov
mov
inc
jg
xchg
stos
sti
push
jnp
jb
sbb
popa
daa
lret
fdivs
cld
sub
sbb
shlb
mov
dec
in
inc
sti
and
daa
in
insb
inc
xor
sbb
or
sbb
mov
or
in
inc
inc
pop
xchg
icebp
dec
mov
xor
jp
push
cmpb
inc
or
sarb
bound
in
gs
fldenv
lds
xchg
or
outsb
xor
pop
jnp
or
cmp
mov
pop
das
pushf
outsb
jge
cmc
jmp
xor
add
cltd
das
ds
loop
xchg
fnstcw
leave
adc
mov
leave
decb
mov
iret
mov
jge
inc
cmp
adc
jnp
out
ss
dec
cld
push
imul
mov
lret
test
gs
xor
jl
sarl
push
call
lret
jl
mov
mov
fs
cli
test
add
xor
shr
shl
or
push
lea
push
mov
mov
shrd
shr
mov
mov
xor
xor
or
lea
push
shl
call
mov
mov
xor
xor
shl
shr
or
push
lea
push
mov
mov
shrd
shr
mov
mov
xor
xor
or
shl
mov
mov
shrd
shr
mov
mov
xor
xor
jmp
jb
and
sbb
pop
jmp
add
stos
ret
jno
adc
movlps
cmp
lahf
sbb
mov
push
cld
rcll
jae
fiadds
and
outsb
dec
and
push
mov
icebp
jnp
xchg
das
sub
cwtl
mov
into
mov
lock
mov
outsb
xlat
jle
std
jae
fdivrp
sti
scas
add
mov
cmc
mov
mov
or
stos
jb
pushf
jg
xorb
mov
orl
into
jl
imul
cmp
add
push
mov
lahf
and
je
mov
testb
mov
push
cmp
dec
scas
cmp
cmpb
cmp
jbe
jg
in
inc
jmp
adc
mov
inc
jge
adc
call
sbb
xchg
push
push
js
lock
out
dec
xchg
jl
lea
inc
mov
arpl
sub
int
jbe
clc
adcb
mov
push
and
fildl
cmp
lcall
shl
gs
jecxz
cld
pop
mov
mov
jle
fisttpl
dec
xchg
mov
or
cmp
sahf
cmp
subl
stos
addb
arpl
enter
pop
lods
mov
int
out
les
ret
push
mov
add
aad
pop
push
scas
push
cmp
xchg
xchg
pextrw
into
mul
pop
push
fucomp
adc
outsl
jmp
adcb
pop
repnz
jecxz
inc
hlt
add
ret
xchg
cs
pop
mov
mov
push
outsb
out
aad
fstps
das
sbb
ss
cmp
cwtl
call
push
icebp
mov
dec
dec
in
dec
inc
std
pop
fdivs
fcomps
inc
adc
in
in
aas
cld
add
out
jle
and
push
jno
shrl
imul
in
or
out
sub
mov
mov
ret
outsl
jmp
and
add
imul
mov
mov
cmp
sbb
stos
mov
jae
cmp
test
mov
push
inc
pop
xchg
fcoms
pop
sbbb
lcall
rcll
and
gs
mov
orl
lahf
pushf
xor
popa
jmp
xchg
jbe
cmp
les
fadds
in
push
dec
ror
inc
scas
fwait
jo
daa
sub
sbb
outsl
clc
mov
fistl
fisttpl
jmp
test
lret
add
lea
push
shl
jmp
push
loopne
jo
jno
mov
into
jbe
push
adc
decb
adc
add
sbb
mov
mov
fistps
push
les
cmp
sbb
ss
push
outsb
sub
inc
mov
inc
push
mov
xchg
popa
mov
mov
pushf
mov
sbb
adc
lcall
mov
xchg
int
push
in
iret
lea
adc
pop
lock
xchg
pop
dec
adc
in
cmp
aaa
imul
jmp
cmp
dec
inc
mov
push
and
in
jne
cmpsl
sbb
jp
imul
std
push
jbe
push
push
mov
mov
arpl
push
sbb
sub
or
shr
icebp
pop
sbb
cmpsl
inc
fdivs
jecxz
mov
cmp
loopne
cmpsb
sahf
or
add
sbb
sub
es
mov
dec
push
outsb
or
imul
cmpsl
decb
mov
pop
mov
mov
mov
clc
test
push
inc
jge
mov
dec
inc
fs
xchg
fcom
pop
int
inc
add
sti
imul
jle
arpl
outsb
mov
fwait
icebp
fisubrs
push
mov
stc
scas
cwtl
add
hlt
jg
fsts
pop
addr16
or
push
xchg
imul
dec
sub
push
sub
lds
pop
cs
ja
popf
jne
adc
fstpl
lock
xchg
dec
outsb
leave
test
in
push
and
pop
cmp
scas
ds
push
imul
adc
mov
enter
pop
fsubrl
sbb
push
in
mov
fisttpll
mov
sbb
jp
mov
in
pop
sti
jno
push
cli
jae,pt
add
inc
jmp
enter
pusha
adcb
popf
ja
in
xchg
fwait
pop
ret
inc
xchg
fistpll
adc
jnp
incb
addl
sbb
lret
jmp
xchg
cld
std
adc
mov
in
jecxz
adc
movups
imul
pop
add
pop
xchg
fucomip
shrl
pop
iret
and
cmc
dec
call
hlt
cs
xchg
fldenv
pop
in
sar
add
lret
stos
mov
insb
dec
mov
or
dec
sti
call
mov
mov
xor
shl
xor
shr
or
push
lea
push
mov
mov
shrd
shr
mov
mov
xor
shl
mov
xor
or
mov
shrd
shr
mov
mov
xor
xor
or
shl
add
mov
mov
shrd
shr
xor
mov
mov
xor
or
add
lea
push
shl
call
jmp
imul
sbb
loop
mov
decb
adc
das
out
je
mov
icebp
mov
adc
iret
scas
mov
xor
jmp
sbb
sbb
out
ljmp
sbb
xchg
inc
lcall
rorl
mov
cmp
ss
mov
cmp
mov
leave
pop
pop
add
rorb
sahf
add
mov
outsb
xchg
xchg
fisubl
cmp
xchg
and
pop
push
adc
or
cmp
mov
inc
or
dec
pop
mov
rclb
sub
stc
sub
out
pop
pushf
les
aas
dec
push
cmp
cmp
cmpsb
rclb
out
pusha
or
pop
fsubrs
repz
sbb
or
push
xchg
aam
mov
cmp
call
jae
mov
and
pop
jo
jmp
sahf
out
pop
call
push
movsl
push
pop
inc
cmp
out
sahf
mov
mov
pop
jno
xchg
cmpsb
inc
inc
inc
sbb
call
pop
add
push
dec
loopne
test
lods
sti
cltd
ficompl
mov
out
cmp
out
test
push
dec
cmpsb
movsb
insb
adc
pop
jno
inc
adc
adc
pushf
mov
xchg
dec
int
sub
jnp
mov
cmc
in
ss
pop
lahf
mov
jnp
mov
push
jbe
cld
bswap
dec
xchg
mov
sbb
lcall
mov
mov
lods
daa
jmp
xlat
xchg
pushf
push
rol
push
mov
mov
xchg
dec
gs
lea
mov
pushw
mov
mov
shlb
dec
add
gs
clc
arpl
jecxz
insb
push
ljmp
mov
stc
subl
dec
fwait
or
dec
add
ljmp
push
outsl
stos
dec
jle
push
cmpsb
je
out
out
mov
les
sub
dec
shlb
cmp
xchg
mov
fsubrs
mov
enter
fwait
add
mov
adc
mov
es
out
xchg
pop
inc
js
mov
xchg
mov
xor
lahf
push
add
sbb
in
sbbl
clc
clc
cltd
add
and
dec
adc
loop
mov
or
inc
mov
sbb
sahf
mov
movsl
fstl
xchg
ja
sub
fs
mov
xor
shr
shl
or
mov
lea
push
mov
mov
shrd
shr
mov
mov
xor
xor
or
push
mov
mov
push
pushl
shl
call
lea
push
mov
mov
shrd
shr
mov
mov
xor
xor
or
push
mov
push
pushl
shl
call
mov
mov
mov
mov
mov
mov
rol
mov
xor
cmp
je
mov
mov
xor
jmp
lods
lods
scas
sbb
xchg
adc
adc
stos
jp
adc
decb
adc
cmp
push
sbb
enter
repnz
adc
lea
mov
mov
sub
test
cld
dec
mov
and
sti
xchg
fidivl
or
inc
dec
stos
mov
stos
cmpl
sub
nop
lods
add
mov
pop
gs
mov
jnp
push
cmpsb
jmp
mov
aaa
lret
add
inc
clc
push
addb
xchg
add
outsb
xchg
inc
inc
add
movsl
sbb
insb
test
xchg
adc
jae
into
call
lahf
fimull
leave
pop
sub
fdecstp
push
int3
adc
mov
ret
aad
cli
testl
cld
test
mov
fs
stos
push
cmpsl
es
jl
scas
jle
shlb
lods
outsb
cld
lea
jg
adc
je
popa
or
out
mov
jecxz
in
adc
pop
xor
and
and
movsl
shr
jne
fsubrp
cld
push
jae
jne
push
movsl
add
bswap
jb
and
pushf
push
jl
pop
aaa
xor
and
ror
sub
movzwl
pushf
inc
inc
cmpsl
loope
rcr
scas
mov
insl
cmpsb
jno
add
and
cmpsl
into
mov
pop
clc
xchg
and
cli
test
or
sub
jno
dec
inc
mov
mov
mov
jns
pop
add
push
in
loope
lds
jp
into
mov
push
cld
xchg
cltd
roll
xchg
subl
and
insl
lock
call
loope
mov
fneni(8087
lods
je
cld
inc
das
sbb
out
add
mov
cmpsl
push
xchg
xchg
loope
inc
int
push
cmp
xlat
or
shll
push
add
mov
xlat
cli
shrb
xor
pop
inc
mov
sbb
idivb
loope
lods
roll
outsb
repnz
mov
and
popf
cltd
fbld
popf
mov
scas
ss
je
lods
ds
in
xor
mov
or
dec
xor
daa
lret
lods
mov
xor
sub
xor
mov
sahf
pop
in
push
inc
sbb
je
sbb
bound
jbe
inc
mov
or
or
or
clc
pushf
push
test
je
mov
mov
movzbl
sub
mov
jmp
sbb
sbb
mov
mov
lods
pop
pop
adc
decb
adc
add
aaa
xor
pushf
adc
imul
mov
cs
fstpt
sub
jnp
imul
lds
sub
push
pop
fdivrl
dec
pop
mov
fdiv
test
and
fdivrl
cwtl
in
fstp
fstpl
std
inc
mov
dec
add
cmc
mov
outsl
data16
lahf
mov
loopne
insb
push
pop
fdivrs
or
dec
test
sbb
jbe
sbb
lret
add
popf
pop
and
mov
and
dec
jmp
pop
jb
mov
cli
cmc
sti
imul
jo
xlat
fnstsw
or
shl
mov
lcall
clc
cmp
xchg
pop
mov
test
pop
and
into
in
xchg
push
test
mov
enter
shrl
into
push
pop
mov
hlt
and
jne
outsl
and
jecxz
sbb
and
rcl
xor
inc
lret
or
stos
stos
lea
push
call
cli
xchg
pop
into
add
lea
in
push
sbb
jns
clc
cmp
jle
push
mov
rcrb
popf
cmp
pop
fcmovne
dec
xor
jne
in
in
jae
dec
add
ss
incl
call
pop
push
fwait
nop
mov
ret
out
and
stos
or
sub
or
mov
pushf
jmp
xchg
lods
ret
dec
stos
dec
test
mov
ret
add
dec
test
add
adc
aad
inc
adc
sub
lock
lods
push
adc
adc
sub
mov
rol
push
xchg
and
rcl
pop
iret
fmulp
das
cmp
push
xchg
loopne
int
push
mov
cmpsl
xor
pop
fistps
lods
sub
add
ds
fistps
cwtl
xchg
clc
mov
popa
cmp
fldt
in
ds
dec
and
lds
leave
pop
mov
xor
pop
sar
xlat
add
xchg
add
lretw
fcomps
aas
add
fwait
inc
push
cmpsb
enter
sub
sub
rclb
divb
out
popa
test
fwait
das
or
jmp
xchg
adc
adc
jae
ret
jle
addr16
adc
decl
cmp
shr
add
add
bt
cmp
leave
mov
inc
push
adc
decb
adc
stos
sbb
ja
rclb
fdivs
lea
jecxz
sbb
xchg
pop
test
aas
xchg
and
ds
es
mov
lods
bound
adc
push
lds
xor
rorb
mov
inc
mov
lds
aad
xchg
out
pop
adc
loope
mov
lcall
ficompl
cltd
ret
loop
cmp
pop
lea
cltd
xchg
pushl
mov
loopne
je
iret
push
jg
ds
jle
fisubs
cli
dec
movsb
mov
jle
xchg
mov
pop
ja
call
aad
loop
sub
lea
mov
nop
subb
gs
pusha
jno
in
out
sbb
fs
pushf
lahf
jle
and
mov
xchg
cmpsl
ficomps
cmp
loope
insb
outsb
pop
pop
jp
pusha
fcmovu
cmp
jo
popf
hlt
imul
sbb
xor
sub
test
and
ret
daa
adc
addr16
loop
mov
dec
fucomip
iret
cmp
ret
dec
sub
out
pop
dec
cltd
mov
faddl
mov
mov
pop
inc
pusha
subl
inc
sbb
add
adc
rcl
in
add
dec
jmp
ja
jp
xchg
stc
sub
cltd
push
push
push
aam
mov
xor
inc
push
and
xchg
dec
mov
das
jbe
push
xchg
shrb
imul
mov
cmp
std
fcoms
mov
loopne
int
int
cmpsb
inc
into
je
ljmp
ss
fcmove
aas
outsl
mov
dec
jg
xchg
or
fstps
pop
inc
mov
cmp
push
mov
outsl
stos
pusha
add
mov
add
mov
adc
mov
and
and
lods
or
rcrl
jns
les
scas
or
xlat
lcall
adc
xor
push
or
jg
xchg
in
std
adcl
sub
mov
adc
mov
add
adc
imul
ljmp
push
xchg
out
mov
sbb
enter
cld
std
repz
rol
fwait
adc
ret
push
inc
add
sub
xchg
jmp
mov
mov
jb
dec
jne
mov
mov
shrd
shr
mov
mov
xor
xor
or
push
add
jmp
nop
sti
sti
fnstsw
jno
mov
jle,pn
add
daa
dec
adc
decb
adc
xor
push
popf
nop
mov
gs
sbb
cmp
dec
ds
fldcw
or
ror
inc
xchg
xchg
dec
sub
scas
repz
ljmp
in
repz
push
sbb
inc
sbb
arpl
sub
pop
push
negb
les
cli
jno
outsb
xchg
fdivrl
and
aas
sahf
in
rolb
cmp
inc
shrb
mov
pop
leave
sub
mov
stc
sbb
in
push
adc
mov
cmp
ret
add
fiadds
or
lcall
cmp
adc
out
dec
jo
add
popa
adc
test
jo
xchg
es
cltd
fsubrs
test
mov
and
mov
push
bound
aad
and
pop
sub
or
outsb
inc
dec
xchg
mov
mov
rorb
lret
mov
mov
cwtl
scas
test
mov
inc
iret
push
jnp
clc
lea
and
push
push
xor
sub
iret
pusha
in
fs
imul
outsl
push
bound
icebp
iret
sbb
call
ljmp
mov
scas
xchg
stc
data16
mov
jb
clc
loope
pop
ja
xchg
jb
out
daa
xor
aas
sub
jle
ficompl
scas
movsl
das
push
sub
xor
xchg
xchg
addb
divb
adc
mov
mov
push
push
movsl
fidivrs
int
sub
pushf
popa
inc
pop
imul
ja
mov
out
repz
popf
add
fidivrl
inc
sarl
aas
mov
add
mov
pop
dec
insb
call
in
lods
mov
and
pop
std
adc
push
adc
cmpsb
push
push
out
clc
adc
lahf
add
ret
or
cmp
je
mov
cmp
nop
sbb
fs
xor
inc
inc
mov
adcl
lahf
rcr
dec
ljmp
leave
jp
sarl
ret
negl
jg
mov
dec
jecxz
fwait
movsb
test
adc
mov
pop
cmp
mov
and
mov
sbb
mov
cmp
out
loope
sub
ret
pop
out
ja
cmp
jecxz
mov
icebp
lock
cwtl
push
push
fdivs
pop
in
addl
lea
push
shl
call
mov
mov
shrd
shr
mov
mov
xor
xor
or
add
push
push
mov
shl
mov
shrd
shr
mov
mov
xor
jmp
ss
mov
lods
insl
xor
js
adc
decb
adc
nop
testb
out
pusha
mov
movsb
sub
add
pop
in
push
cmp
outsl
push
jnp
mov
jns
mov
rorl
pop
mulb
jo
lret
ljmp
jl
mov
jecxz
mov
jmp
out
ds
lds
ljmp
cs
ss
or
add
cmc
movsl
pop
testb
push
enter
xchg
push
sbb
xlat
xchg
push
jae
and
mov
cmp
or
in
jae
pop
in
test
imul
leave
rolb
out
pop
jbe
sbb
add
jb
ret
int3
call
popf
adc
cli
es
and
mov
fisttpll
pop
test
push
sarl
xor
popa
xor
inc
call
xchg
rcrb
sbb
push
imul
dec
out
sbb
pushf
into
pop
test
clc
xor
jo
dec
cltd
dec
mov
popl
xchg
mov
xchg
rcrl
and
inc
mov
dec
and
or
adc
bound
rolb
lahf
lods
pop
adc
jbe
js
ret
pop
outsl
jp
movsl
js
adc
pop
lods
fsubrl
mov
das
test
nop
rcrl
jno
out
call
fst
shlb
mov
daa
mov
arpl
sbb
popa
push
aas
xchg
push
sahf
xor
inc
jbe
sub
mov
aaa
mov
int
mov
jb
out
outsl
cmp
sbb
push
adc
xor
imul
cmpsb
mov
inc
ret
out
pop
sbb
es
push
loopne
sbb
cmp
cmp
add
sub
sti
outsl
cmp
xor
xchg
jmp
call
mov
int
ja
sarb
aaa
mov
jecxz
fadd
mov
sub
inc
sbb
push
adc
push
push
jmp
stos
add
xor
jbe
mov
dec
rcll
cmp
cmp
stos
xor
lea
inc
dec
add
mov
in
fisttps
mov
xchg
ja
mov
nop
aaa
mov
add
mov
subl
icebp
and
cmp
rorb
ret
push
shl
call
jmp
cmp
addr16
pop
push
cmp
cmp
mov
repz
adc
decb
adc
stos
test
loope
test
shrb
inc
daa
jle
or
dec
sahf
pop
leave
scas
movb
cmp
sub
stos
shlb
sub
test
add
dec
dec
in
add
dec
cmp
jecxz
lcall
mov
pop
push
ds
cli
insb
cmpsb
int
es
cwtl
mov
push
mov
hlt
push
sbb
cmp
fidivl
sbb
jg
loope
sub
and
and
retw
daa
push
push
xor
xchg
xchg
cmpsb
js
jp
pushf
or
lahf
add
rcrl
inc
add
mov
inc
and
pop
mov
push
mov
pop
loope
push
push
inc
sub
lret
ret
mov
or
add
data16
arpl
fcmovnu
mov
lock
xchg
movsb
mov
cmc
sbb
sub
xorl
jg
sbb
and
sarl
pusha
mov
icebp
xor
mov
shll
jmp
popf
cmp
pop
fucomi
bound
mov
adc
jb
dec
xchg
mov
scas
nop
xchg
ret
testl
daa
inc
cmpsl
adc
aaa
ljmp
xor
arpl
mov
icebp
call
sub
pop
sub
pop
aad
jnp
mov
sbbl
inc
and
shll
sarb
jne
mov
cli
movsl
outsb
loop
xchg
pop
data16
pop
sub
pusha
div
add
das
mov
lds
mov
cs
test
sub
aad
and
add
adc
add
smsw
xchg
and
jmp
ja
cmp
mov
xchg
push
sti
call
xchg
outsl
adc
ss
mov
divps
inc
nop
fists
stos
enter
dec
mov
push
mov
ret
stos
cmp
push
int3
filds
or
lea
ds
adc
cmp
jmp
inc
ljmp
cwtl
es
and
mov
imul
je
dec
addr16
xchg
mov
hlt
pushf
inc
sbb
outsb
shl
das
movsb
cmp
movsl
bswap
imul
lds
pop
int3
xlat
push
adc
int
add
inc
adc
enter
add
adc
xor
or
add
push
shl
call
mov
mov
shrd
shr
mov
mov
pop
xor
xor
pop
shl
or
jmp
imul
leave
sub
xlat
xor
fnstsw
adc
decb
adc
loope
sub
or
cmc
push
into
inc
jg
insl
arpl
mov
or
lea
jmp
push
lcall
mov
mov
xchg
or
popf
aad
test
inc
pop
sar
int3
lods
pusha
out
mov
adc
jge
jmp
push
cld
xchg
xor
jbe
xchg
test
dec
cmpsb
lahf
jns
scas
jmp
iret
jle
inc
inc
arpl
mov
cmc
pop
mov
dec
pop
aas
movsb
cmpxchg
fldcw
fst
lcall
jmp
pop
out
mov
std
mov
repz
sbb
adc
push
inc
jmp
jno
dec
jno
cli
jp
incb
cmp
pop
sub
scas
sti
mov
out
and
int3
in
out
fistpll
test
or
sbb
cmpl
add
mov
aaa
and
push
mov
adc
stc
loope
xchg
sub
inc
jne
lcall
in
jle
inc
in
insl
mov
adcb
pusha
dec
ret
ficoms
mov
sub
cmp
popf
movl
pop
dec
mov
inc
insb
mov
aad
jmp
movsb
aas
je
mov
stc
es
jno
mov
jp
add
cld
dec
push
cmpsb
mull
add
cmpsl
cld
xor
test
push
cmpb
call
sub
testl
xor
ds
enter
lods
pop
loop
cmp
pushf
mov
add
shr
jge
out
ret
push
xchg
pusha
insb
dec
jecxz
mov
jmp
inc
jp
ss
mov
cmpsl
arpl
js
jae
cwtl
and
inc
ret
jnp
lret
mov
dec
testb
xlat
fwait
lret
rcrb
and
jb
push
dec
xchg
sub
fs
xor
bound
xlat
iret
cwtl
bound
shrl
lods
and
and
adc
inc
repnz
out
and
xor
mov
sub
inc
das
push
test
loope
popf
add
loop
mov
cmpsl
pusha
pusha
pop
es
dec
add
movsb
shl
jno
andl
push
sbb
outsb
cwtl
pop
jb
jae
sub
mov
pop
sbb
xchg
test
dec
pop
pop
leave
ret
mov
inc
mov
or
mov
mov
jne
mov
incl
mul
ret
push
mul
mov
cmpl
movl
movl
jmp
not
ja
push
push
pushl
call
subl
adcl
adcl
xorl
xor
mov
mull
add
mov
mul
add
pop
ret
push
mov
sub
push
push
push
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
xor
jmp
jmp
mov
dec
addl
roll
sarb
adc
lods
das
nop
lcall
mov
mov
and
dec
test
sbb
xor
ds
imul
sbb
cmc
mov
adc
mov
mov
mov
xchg
pop
imul
test
sub
pop
shl
insb
mov
or
clc
mov
rcl
cmp
addl
or
pop
sahf
push
popa
push
movsb
in
pushf
das
ficoml
fldl
sbb
cltd
push
jecxz
dec
js
dec
or
arpl
pop
mov
mov
loope
or
sub
inc
mov
test
ss
jae
int3
out
je
or
jp
lods
lea
pop
es
loop
mov
cmc
in
dec
testb
adc
rorl
inc
ret
or
stos
push
test
ret
in
or
popw
aam
xor
lcall
mov
cmp
inc
fsub
lret
and
push
test
mov
jae
mov
in
push
dec
push
imulb
push
testb
scas
ja
fsubrl
mov
mov
dec
jb
push
fidivrl
hlt
inc
nop
movsb
rolb
stos
insl
pop
cmpsl
xchg
es
xlat
out
pop
cmpsb
daa
sub
xor
mov
loope
fstpl
add
xor
lret
jno
mov
out
push
lds
cmpsb
out
rcrl
mov
mov
ja
mov
adc
add
stc
or
adc
dec
jmp
dec
data16
out
cli
loope
addr16
jmp
jle
push
js
push
sub
dec
aaa
popf
jmp
mov
xchg
mov
das
scas
sub
mov
or
lods
inc
lahf
pop
lock
adc
jg
mov
not
mov
das
das
xor
divl
adc
mov
mov
out
bound
push
inc
pop
sbb
cmpsb
outsl
mov
jmp
jecxz
cs
mov
int3
cld
test
pop
jp
mov
cmpsl
pop
dec
jo
fidivl
xchg
xchg
mov
sbb
dec
clc
popf
xlat
mov
test
hlt
inc
and
in
mov
and
fcmovbe
ljmp
sbb
clc
xor
jb
mov
push
lea
xchg
sbb
pop
dec
out
lods
jl
nop
insl
in
add
jle
inc
dec
or
andl
push
mov
fisttps
jo
stos
jae,pt
push
ljmp
stos
cmp
or
or
mov
fdivs
cltd
ja
mov
dec
xlat
sti
mov
adc
fdivl
sarb
jmp
xchg
add
and
xchg
and
sub
mov
adc
popf
movlps
mov
xor
rolb
adc
mov
xor
test
dec
fisubrs
mov
push
mov
addr16
cmp
jb
xchg
dec
cmpsb
ret
mov
lret
sbb
lret
imul
or
icebp
scas
jae
mov
or
in
mov
lcall
push
lock
and
inc
int
in
and
cmc
cmp
sub
xchg
mov
out
and
xchg
test
xchg
xor
imul
fdivs
mov
push
ret
mov
mov
hlt
sahf
sub
xlat
outsl
mov
clc
xchg
push
pushf
cli
pushf
lahf
lret
fwait
inc
jae
dec
push
icebp
and
in
push
in
insb
insl
das
xor
add
out
loope
js
or
or
into
cmp
in
xlat
ja
in
subb
bound
mov
pop
jo
lds
fistpl
adc
mov
push
sbb
lods
xor
xchg
fildll
add
pop
in
test
popa
leave
leave
ja
repnz
cmp
jle
sbb
inc
stos
adc
cmp
outsl
sub
cmpsb
in
or
cmpsb
lea
mov
cmp
dec
push
lock
gs
loop
std
pop
adcb
ret
daa
inc
decb
test
adc
decb
stc
in
adc
jl
mov
ss
stos
mov
mov
sti
push
andb
iret
push
jg
comiss
les
fsts
stos
add
inc
rcr
inc
sbb
cmp
push
aaa
dec
add
dec
sub
xor
pop
mulb
leave
mov
scas
mov
out
lea
lret
aas
negb
mov
sbb
adc
mov
sbb
ds
jno
pop
cmp
inc
dec
jbe
push
popf
loopne
mov
rcll
data16
inc
outsl
adc
in
xchg
dec
or
rcr
enter
xor
in
add
vpcmpgtw
in
arpl
adc
inc
loope
xor
dec
lods
mov
nop
int
pop
cltd
xchg
sbbl
push
cmp
arpl
and
sbb
stc
adc
sub
pop
sub
sub
xchg
pusha
push
push
pop
loop
jmp
ds
shrl
xchg
cwtl
jmp
call
pminub
jbe
adc
das
adc
add
xor
push
div
mov
xor
xor
sub
mov
lea
mov
mov
sub
xor
mov
xor
or
xor
mov
sub
mov
mov
xor
mov
sub
div
mov
pop
xor
sub
cmp
ja
jmp
mov
movl
movl
movl
movl
mov
mov
mov
sub
imul
xor
xor
div
mov
mov
push
and
mov
sub
sub
mov
mov
mov
xor
mov
xor
and
add
add
mov
mov
add
jmp
pop
mov
pusha
cltd
pop
sbb
repz
xchg
js
das
adc
popf
movlps
pop
ljmp
ffreep
mov
je
fwait
push
outsl
jno
mov
loope
or
insb
pop
sti
sbb
and
adc
mov
sbbb
sbb
mov
test
jmp
into
lods
fdivp
add
ret
aaa
data16
dec
adc
fisubl
jl
idivl
rol
push
stos
cltd
sub
lock
or
dec
jb
imul
pop
push
lods
lods
sub
adc
add
popf
jge
gs
mov
or
add
or
jbe
adc
pop
cmp
and
inc
rolb
lds
daa
mov
jecxz
enter
or
pop
ret
addb
or
lods
fimull
xchg
out
cwtl
sbb
arpl
xlat
data16
dec
jbe
adc
adcb
cmc
xlat
cwtl
inc
dec
adc
add
or
sub
cmpsb
scas
sub
jmp
jl
xor
or
fmulp
push
test
inc
mov
inc
xorl
cmpl
pop
fldenv
push
lea
mov
sbb
shrl
cltd
out
cmpsb
ljmp
outsl
mov
stos
mov
jo
mov
lods
dec
mov
out
lret
ror
mov
pop
pusha
mov
in
jmp
sbb
rolb
popa
mov
inc
mov
test
inc
or
push
sbb
adc
ret
filds
ficoms
mov
data16
pop
pop
xlat
cmp
idivb
int3
add
push
mov
mov
xchg
rcr
icebp
fcmovne
push
ret
jns
fwait
test
xor
fisubl
add
xchg
pop
lcall
lcall
pop
adc
sahf
test
inc
mov
movsl
sarb
push
pop
in
mov
jbe
dec
sarl
test
fsubrl
or
add
dec
call
pop
out
shl
xor
inc
clc
add
xor
xchg
pop
push
jle
roll
lods
jno
sbb
out
inc
mov
out
mov
sti
hlt
je
sbb
fldt
cwtl
push
dec
mov
xor
mov
popf
sbb
cld
movsl
pusha
jmp
adc
jmp
xor
aam
xchg
and
sti
adc
hlt
shlb
cmp
mov
movsl
xrelease
insl
dec
cmp
pop
popf
sbb
fisttpl
mov
mov
inc
mov
push
fimuls
adc
les
push
sub
movsb
adc
add
les
loopne
xlat
dec
mov
xor
mov
xor
mov
sub
mov
add
mov
jmp
jo
sbb
lcall
sub
adc
dec
or
pop
std
jno
ret
cs
jb
lret
stos
stos
xchg
adc
push
add
ss
lahf
mov
jo
fstl
movsb
push
push
xor
dec
addr16
pop
dec
push
cli
cmc
stos
adc
test
sbb
sub
push
or
pop
dec
sbb
addr16
aas
les
int
test
insl
sahf
push
xchg
add
in
arpl
jecxz
lods
ljmp
lahf
insb
dec
dec
dec
pop
xchg
scas
or
fnstcw
add
sub
das
push
aaa
or
adcb
shl
xor
imul
nop
sahf
xchg
insl
sub
and
repz
mov
testb
add
xlat
push
shlb
cmp
pop
mov
mov
mov
cmpsb
mov
aas
jb
cmpsl
loop
jecxz
addr16
pop
push
xor
sbb
mov
ret
sbb
adc
outsb
push
sub
jle
repz
mov
and
inc
adc
fcomp
fs
fimuls
mov
cmpsl
ljmp
pushl
fistpl
scas
cmc
pop
xor
out
rcr
mov
into
xor
cld
leave
sbb
mov
in
xchg
xchg
in
int
pushf
sbb
rcll
pop
and
nop
add
lods
decb
and
in
or
out
jg
or
xor
lock
xchg
popa
cli
into
clc
cld
in
adc
fsubrp
fxtract
pop
lock
dec
test
cltd
mov
fstpt
pop
xor
pop
lret
sub
in
sub
pop
sbb
fisubs
movsb
shlb
inc
mov
inc
mov
pop
xchg
daa
jae
mov
sub
jmp
cli
add
shl
xchg
enter
jbe
cld
sahf
xor
rorl
fwait
xchg
bound
push
sbb
cmpsb
cmp
mov
lock
inc
insl
iret
cmp
mov
mov
cmp
insl
data16
and
mov
ficoml
inc
or
mov
sti
frstor
cli
fidivs
daa
cltd
jb
sub
inc
inc
dec
lea
fildl
mov
ret
sub
add
mov
in
inc
es
out
adc
insb
nop
mov
add
jb
or
mov
aas
add
in
test
jmp
insb
and
cmp
fs
xor
mov
xor
or
xor
mov
sub
mov
mov
mov
xor
xor
sub
div
pop
xor
sub
cmp
jbe
pop
pop
pop
leave
ret
push
mov
and
sub
push
push
jmp
fiadds
ljmp
or
fsubs
adc
iret
movlps
xlat
sub
addr16
js
mov
or
add
subl
out
and
sarb
aas
cwtl
cmp
pusha
enter
pop
lahf
xorb
add
cmp
movsb
fistps
cs
jo
orl
hlt
int
mov
sbb
ret
inc
cli
imul
jp
mov
xchg
push
dec
lock
add
sub
cmp
jae,pt
andl
ja
mov
daa
add
jne
test
jmp
iret
xor
out
hlt
add
fsubrs
cmp
jnp
cmp
test
adc
int3
imul
addr16
rcrb
mov
dec
cld
mov
rcrl
data16
cmc
cwtl
ljmp
lods
jle
fwait
cmpsl
mov
ss
pop
lret
xorb
sub
ja
or
ja
and
test
add
add
cmp
out
jo
ss
icebp
mov
loope
rcrl
movsl
mov
sahf
xchg
hlt
jno
jno
repz
outsl
enter
mov
stc
jae
ficoml
into
divl
gs
cmc
int3
mov
fs
push
lahf
nop
push
sub
les
cs
icebp
push
lcall
adc
cs
inc
ljmp
ja
popf
idivl
dec
addr16
add
and
cmc
mov
imul
gs
movsb
sbb
dec
adc
xchg
mov
das
bnd
aad
sub
and
call
das
jno
addr16
or
stc
push
mov
adc
add
mov
mov
divl
mov
in
pop
fidivl
jnp
imul
shll
jne
hlt
jbe
insb
imul
rcrb
sub
cmp
cs
adc
mov
push
inc
addr16
daa
bound
lcall
imul
in
pushf
jg
mov
push
cmp
fdivl
add
sbb
dec
sbb
popf
imul
ss
and
rorb
sbb
popa
ljmp
jb
fmuls
int
cwtl
cmc
inc
lods
jae
adc
mov
lret
es
pop
movsl
lods
iret
sbb
popf
add
bound
fsub
in
push
adc
push
push
push
call
mov
movzbl
push
call
test
jne
decl
xor
jmp
mov
mov
incl
mov
cmpl
mov
movl
jmp
mov
mov
jae
call
sbb
adc
xor
movl
orl
add
push
add
pop
mov
sbb
mov
mov
andl
mov
addl
mov
adcl
movzwl
or
cltd
sbbl
movzwl
sbbl
idiv
sub
movzwl
or
or
mov
neg
mov
xor
xor
mov
adc
mov
cmpl
movl
mov
movl
jmp
movl
jge
push
pushl
push
pushl
pushl
pushl
call
xorl
sbb
mov
xor
mov
orl
and
addl
sub
mov
sbbl
jmp
arpl
ja
arpl
mov
cmp
pop
adc
iret
movlps
shrb
out
dec
adc
cld
pop
sbb
xchg
test
outsb
push
mov
sub
shlb
cld
xchg
scas
or
shlb
pop
test
pushw
cmpsb
pop
mov
inc
repnz
fsts
xchg
psrlw
cmp
sti
repnz
cmp
or
leave
call
jne
add
mov
mov
jnp
xlat
ja
cmc
rclb
cld
lods
sbb
sub
xchg
into
mov
les
ret
lahf
sub
push
inc
jne
dec
fsubrl
loope
and
pop
inc
mov
push
jno
out
std
xchg
xchg
rolb
cmp
mov
mov
incb
fldl
jb
dec
stc
das
loopne
and
cld
push
cmp
cwtl
xor
and
fucomp
xor
adc
add
inc
inc
mov
push
loopne
mov
sahf
lret
pusha
inc
xor
out
jbe
fwait
push
or
push
pop
and
dec
jns
sbb
out
repnz
jl
xchg
mov
movsw
inc
fstps
in
fildll
data16
mov
iret
test
xorl
sti
pop
pop
sti
lcall
inc
or
lea
pop
out
or
mov
fistpll
mov
addr16
mov
mov
inc
adc
test
into
cli
push
add
aam
in
das
lret
add
dec
aam
imul
shlb
stc
fnstsw
aaa
nop
es
inc
out
xchg
add
ja
adcb
pushf
or
call
cmpsl
jbe
popf
fmull
das
xchg
std
pop
repz
lods
mov
jne
mov
cmp
in
ss
test
mov
mov
bnd
jb
push
mov
movsl
mov
mov
pop
mov
int3
and
arpl
lods
or
inc
jne
aad
insl
loopne
xchg
fistpl
jmp
notb
in
fwait
es
pop
aad
mov
push
nop
jne
imul
push
xchg
push
mov
sbb
rorl
adc
aam
ret
sbb
adc
insb
inc
aam
lahf
add
mov
into
jge
fwait
mov
push
idivb
xor
xchg
hlt
out
out
fldt
loop
or
dec
std
dec
out
loopne
ret
out
dec
dec
psrlw
push
push
dec
pushf
cld
loope
and
aad
insb
push
leave
cmc
fidivrl
inc
mov
pusha
in
les
fisttpl
or
push
inc
cs
or
in
fst
or
mov
and
mov
and
mov
adcl
sub
mov
xor
mov
sub
movl
mov
cmp
movl
jb
cmpl
mov
mov
jmp
movzwl
jb
push
call
mov
sub
mov
xor
mov
orl
xor
or
sbb
add
subl
add
movl
movzwl
sbb
movl
movl
andl
movl
mov
mov
sbb
mov
andl
xor
mov
adc
add
mov
mov
xor
mov
subl
xor
subl
div
or
mov
andl
add
adcl
and
pushl
orl
pushl
sbbl
call
movl
not
movl
movl
sub
mov
and
mov
subl
and
or
mov
xorl
and
xor
pushl
adcl
pushl
call
sub
pushl
movl
movl
cmpl
movl
mov
jmp
movl
movl
jge
pushl
push
call
movzbl
or
xorl
andl
negl
sbb
mov
mov
add
dec
sub
or
movl
xor
movl
movl
cmpl
mov
movl
jmp
movl
jbe
pushl
push
push
call
xor
neg
add
adc
sbb
and
adcl
cmpl
mov
mov
mov
jmp
mov
mov
jg
pushl
call
orl
xor
adc
xor
andl
sbb
movl
movl
xor
movl
mov
and
mov
sub
movl
mov
orl
or
and
mov
sub
cmpl
mov
movl
movl
jmp
movl
movl
jge
push
push
pushl
call
decl
xor
xor
add
not
pushl
mov
xor
mov
addl
add
and
xor
mov
sub
sbb
mov
xor
subl
and
andl
pushl
xor
mov
sbb
mov
andl
imul
xorl
xor
subl
or
movl
mov
subl
sub
addl
pushl
andl
call
dec
jne
or
movl
xor
add
adc
mov
movl
mov
andl
movl
mov
call
lea
xorl
mov
cmpl
movl
mov
mov
jmp
movl
movl
jg
push
push
push
call
or
sub
addl
or
xor
xorl
lea
adc
mov
sbbl
mov
orl
mov
mov
mov
cmpl
movl
not
mov
jmp
movl
notl
jne
pushl
push
push
pushl
call
sbb
sub
neg
or
or
adc
xor
cmpl
mov
movl
mov
jmp
mov
jle
push
push
call
or
movzbl
and
mov
sub
subl
orl
xor
jmp
pop
mov
xor
mov
clc
les
iret
movlps
or
loop
rolb
adc
lahf
arpl
insl
insl
xchg
or
jb
je
jmp
cmc
jae
mov
sub
dec
mov
and
dec
mov
ret
xorb
nop
and
sbb
scas
xchg
arpl
sub
or
cmp
mov
int
adc
in
stc
pop
xchg
lahf
mov
jg
add
pop
cli
lcall
fcoml
push
jno
and
popf
mov
hlt
xchg
pop
aaa
lods
mov
lods
stc
xchg
enter
cmc
cmp
sbb
xor
sbb
cmp
cld
insl
xchg
or
sub
shll
popf
scas
add
jnp
dec
repz
cmpsl
lods
mov
daa
inc
mov
adc
sbbl
add
insb
adc
outsb
shlb
shr
pop
hlt
xlat
mov
cmc
jae
lock
adc
nop
dec
pop
ret
or
imul
je
mov
fldl
les
lret
or
dec
adc
icebp
call
int
cmp
in
sarl
jmp
scas
call
addr16
cltd
movsb
mov
in
xlat
popf
stc
and
addr16
cmp
xchg
and
test
cli
dec
jbe
push
into
je
dec
movsb
and
addl
pop
pusha
lea
int
ja
cmp
mov
jb
mov
xlat
jle
sbb
fldcw
js
aaa
aad
dec
mov
push
mov
or
sahf
jmp
mov
loop
loope
jg
popa
dec
and
or
sub
mov
sbb
xor
scas
aam
jae
dec
and
mov
ror
mov
and
dec
insb
sahf
sub
ja
dec
inc
xor
sbb
cmc
icebp
call
das
mov
and
sub
adc
and
mov
lret
cmp
scas
adc
mov
add
ljmp
daa
cmpsl
mov
push
and
addr16
test
and
jle
inc
sti
mov
push
pop
cmpsl
ret
iret
adc
jle
sbb
push
aad
arpl
lea
add
jl
pop
push
test
sbb
into
call
loopne
mov
movsl
repnz
movsl
js
jg
add
and
aad
outsb
mov
loope
lea
xor
xor
inc
shl
shr
or
incl
mov
cmpl
movl
movl
mov
movl
jmp
mov
movzbl
jbe
push
call
movzbl
sbb
andl
xorl
and
subl
sbb
mov
adc
mov
inc
mov
mov
mov
mov
mov
shrd
cmpl
mov
movl
mov
not
jmp
mov
jb
push
push
push
push
call
mov
and
mov
add
and
add
xor
sbb
shr
mov
inc
mov
cmpl
movl
mov
movl
jmp
movl
jbe
pushl
pushl
call
andl
sbb
or
xor
xor
negl
mov
andl
xor
addl
xor
sbbl
or
xor
xor
add
mov
andl
push
addl
pushl
lea
push
subl
shl
call
xorl
lea
push
mov
mov
lea
xorl
push
addl
mov
lea
andl
mov
mov
andl
mov
push
adcl
call
sbbl
push
push
pushl
call
add
mov
mov
sbb
mov
addl
mov
mov
xor
add
sub
or
mov
or
shr
cmpl
mov
notl
not
jmp
movl
jg
pushl
push
call
sbb
inc
or
sub
add
sub
dec
neg
adc
shl
cmpl
notl
mov
movl
jmp
movl
jb
push
push
call
adc
adcl
xor
and
add
adcl
or
subl
mov
xor
xor
mov
dec
lea
cmpl
movl
mov
movzwl
jmp
movl
notl
jbe
push
pushl
call
adcl
and
add
movzbl
or
movzbl
xor
mov
mov
xor
lea
cmpl
mov
movl
jmp
movzwl
movl
jg
push
pushl
push
pushl
push
pushl
pushl
call
and
sub
sbbl
mov
sbb
mov
add
neg
mov
movzwl
and
mov
sub
lea
cmpl
mov
mov
mov
jmp
movl
jbe
push
push
push
pushl
call
xor
add
xor
andl
xor
add
or
movzbl
sub
sbb
xor
mov
sbb
movl
movl
movl
jmp
out
rclb
bound
cwtl
push
insb
mov
adc
adc
out
insb
dec
push
out
notb
movsl
xor
adc
popa
jne
mov
cmc
cmp
push
jbe
mov
pop
shlb
iret
dec
pushf
xorb
and
cmp
add
stos
sti
push
aad
mov
repnz
flds
ret
addr16
stc
xchg
pop
mov
jno
mov
mov
movsl
pushf
sub
mov
lahf
mov
jge
and
test
ljmp
sbb
imul
inc
xchg
adc
pop
and
loopne,pn
test
sahf
ds
adc
pop
ss
sub
xchg
push
push
lcall
jl
jge
push
inc
dec
les
add
mov
fcompl
xor
push
mov
mov
cmp
and
or
test
jnp
popf
lret
repz
iret
popa
and
push
mov
mov
mov
mov
fcmovnu
sbb
jne
pop
sahf
mov
hlt
ds
test
mov
gs
cld
or
subb
inc
popf
mov
and
mov
pop
xchg
mov
movl
testl
push
add
adc
jo
mov
test
es
jp
imul
call
fiadds
sti
fidivrl
test
xor
and
dec
cmp
lods
mov
cmp
jg
cmp
push
cmpsb
scas
inc
sub
cwtl
test
sub
inc
outsb
pop
lods
inc
sbb
pop
push
xchg
fdivl
mov
sub
cmp
aad
ss
sub
jl
stos
insl
stos
shrb
jp
lret
sar
xchg
lods
push
test
fdivrs
sbb
mov
imul
scas
xchg
xchg
lods
sti
mov
add
divl
mov
cmovle
shlb
sarl
fxch
xor
movsl
xchg
jge
mov
xor
cld
inc
and
and
or
jmp
xor
xor
loope
shll
pop
jmp
mov
clc
push
sub
mov
mov
pusha
add
clc
xchg
repz
into
jb
pop
xchg
subl
mov
in
sbb
std
mov
xor
pop
mov
inc
and
imul
adc
push
and
mov
add
adc
xor
xor
and
mov
and
mov
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
jmp
mov
adc
jg
mov
shl
idivl
jb,pt
unpckhps
iret
movlps
cmp
mov
out
fsubr
xchg
jle
xchg
jmp
push
rol
imul
aaa
pushf
pop
mov
jns
ds
test
sbb
cltd
mov
push
push
out
call
mov
pop
inc
enter
push
hlt
bound
push
aad
gs
mov
xchg
sub
and
daa
enter
pusha
out
in
sub
jno
dec
ud1
jb
sub
mov
lea
cmp
out
pop
ja
rclb
into
mov
and
push
jns
outsb
std
jns
jl
jb
cmp
jmp
or
jp
xchg
xchg
bound
outsl
subl
inc
out
dec
gs
jmp
push
mov
push
push
aad
lcall
pop
add
jg
enter
call
gs
jns
test
test
pop
stos
data16
adc
loop
in
cltd
out
mov
stos
mov
ja
add
fiadds
add
pop
and
fwait
aas
add
jl
mov
push
jp
std
dec
repnz
dec
incb
adc
and
test
xor
push
push
and
sbb
adc
popa
paddusw
jne
sbb
and
lret
sub
rcrl
test
jns
movsl
adc
mov
es
cmp
loopne
mov
push
lea
out
in
lret
mov
in
push
xor
aad
lcall
ss
outsl
adc
inc
cli
enter
xchg
scas
arpl
mov
add
pushf
das
mov
xchg
dec
mov
mov
xchg
neg
lcall
mov
mov
or
jmp
sub
push
lods
mov
jecxz
adc
pushf
and
xlat
in
pop
movsb
jle
dec
jle
repz
lret
daa
jnp
jp
lea
and
lret
ret
stc
adc
inc
and
push
inc
jno
push
mov
sub
jg
mov
aad
std
int3
add
add
cmp
mov
or
jo
or
pop
dec
push
imul
sbb
pop
add
dec
jnp
push
or
sbb
lret
dec
xchg
jmp
cmp
sub
dec
inc
xchg
cmpsl
mov
pop
xlat
rcll
push
push
push
or
or
jmp
dec
pop
imul
enter
pop
lods
test
adc
xchg
add
mov
mov
out
pop
cld
fs
xor
loopne
pop
lcall
inc
jp
or
int3
outsb
push
sbb
adcl
dec
push
leave
pushf
sub
mov
mov
or
loope
dec
fisubrs
das
and
mov
insb
clc
pushf
loopne
mov
jae
xor
ljmp
adc
cmc
lahf
mov
sbb
cmp
mov
psrld
pop
enter
dec
xchg
mov
mov
and
xchg
adc
sahf
mov
push
cmpsl
mov
rclb
push
mov
inc
dec
jne
xchg
pushf
repnz
or
mov
sub
call
leave
lock
aaa
adc
fs
dec
lea
fsin
test
sub
jae
pop
mov
imul
shl
mov
push
add
dec
bound
stos
arpl
andl
aad
mov
cmpsl
sub
leave
jbe
int
je
mov
dec
pop
jo
sahf
out
notl
mov
dec
es
out
dec
cmpsb
fldl
inc
js
mov
xlat
aaa
mov
cmp
mov
push
in
mov
pop
lret
cmp
nop
subb
arpl
jl
xor
and
std
add
hlt
dec
and
adc
mov
dec
ret
pop
xchg
dec
lock
mov
push
stc
sub
jmp
adc
insb
or
jnp
fstps
subl
push
or
sbb
lods
iret
sbbb
mov
xlat
or
aaa
xchg
int3
fs
adc
or
dec
rol
or
mov
dec
mov
testb
sbb
jmp
sbb
adc
in
jmp
mov
out
dec
sbb
lret
xchg
ja
push
imul
pop
inc
xchg
leave
ficomps
outsl
in
dec
lret
cmpsb
shl
xchg
popf
inc
xchg
data16
or
iret
xchg
xor
sarl
cwtl
insl
test
in
adc
sbbb
xchg
jl
mov
imul
mov
sub
sub
outsb
and
fbld
mov
aaa
sbb
nop
and
enter
sbb
jbe
push
jp
sub
enter
sbb
or
pop
mov
pop
arpl
jmp
mov
dec
jne
mov
sub
int3
push
push
call
mov
mov
sub
mov
sbb
mov
cmp
jne
cmp
je
movl
movl
movl
movl
mov
mov
mov
mov
add
adc
xor
xor
and
mov
and
mov
movl
movl
movl
movl
movl
movl
movl
jmp
jp
jg
aaa
lret
int
xor
aas
or
adc
mov
gs
out
sbb
add
pop
fwait
xchg
pusha
lret
insl
mov
push
pop
test
ja
js
aad
xchg
xlat
cmp
jbe
mov
inc
cmpsl
cmpsl
inc
or
ret
pop
iret
ret
and
int3
and
push
out
jp
sbb
pop
outsb
cmp
mov
std
es
stc
in
mov
and
dec
fiaddl
pop
nop
push
jl,pn
mov
ss
xchg
pop
or
pop
aad
mov
cmp
fwait
cwtl
aas
lcall
stos
in
adc
fs
lret
fstpl
jge
insb
int3
es
loop
xor
cmp
xchg
movsb
sbb
sti
repnz
push
lahf
mull
jp
pop
in
test
scas
ret
dec
jnp
bound
fstps
or
lret
mov
cmp
xor
sbb
sbb
and
subl
lock
push
inc
cmp
jg
shrb
and
dec
icebp
lds
mov
xchg
pop
cmp
imul
xchg
rcrl
add
loop
inc
out
cmp
jae
fdivrs
dec
sub
lcall
es
sbb
mov
dec
or
inc
test
leave
xchg
jl
ret
add
addl
mov
or
add
imul
xlat
nop
pop
aaa
sub
ss
mov
mov
mov
aam
fs
mul
xchg
cmpsb
pushf
nop
sti
ret
xor
aam
push
xor
adc
in
ret
cli
hlt
cmp
loope
lds
dec
or
std
icebp
xor
xchg
sbb
xor
inc
mov
mov
bound
es
jg
dec
jb
xchg
push
andb
lock
inc
mov
fwait
cld
push
stos
push
in
ror
mov
incl
add
cmp
ss
mov
pop
pop
mov
mov
xchg
orl
clc
arpl
dec
jp
jns
mov
push
shr
stc
sub
rcrl
sub
clc
mov
fidivs
dec
fdivr
push
dec
std
sbb
push
mov
lds
addb
ret
mov
dec
cmp
or
out
arpl
mov
mull
daa
ret
mov
adc
sarl
mov
jp
xchg
cmp
jmp
je
movl
mov
mov
push
push
xor
xor
push
push
call
mov
mov
push
push
push
push
call
mov
mov
jmp
aaa
jae
jnp
jns
das
jmp
fcompl
mov
iret
movlps
cwtl
cmp
call
mov
sbb
dec
pop
lret
inc
inc
add
dec
cmc
jbe
pop
jecxz
cmpsb
mov
rolb
mov
pop
cltd
loopne
xlat
fmull
sbb
mov
mov
push
dec
inc
push
stos
mov
add
pusha
push
int
pushf
js
fidivs
jecxz
mov
sub
inc
daa
rcrb
mov
cmpsl
rcll
pop
je
pop
sub
ss
mov
popa
hlt
js
out
sub
insl
fwait
sarb
inc
mov
test
sub
mov
test
mov
adc
inc
push
xor
pop
push
dec
cs
and
jle
out
xor
testl
sub
lahf
rol
lahf
xchg
jo
pop
cmp
mov
outsb
pop
and
xchg
sbb
xor
mov
and
mov
or
ret
int3
fisubs
pop
jg
push
les
enter
sarl
outsb
js
fbld
or
push
outsb
inc
sub
js
cmc
scas
gs
mov
arpl
in
cmp
sbb
movsl
sub
xchg
and
cltd
pop
dec
cli
mov
rcr
pop
xor
lds
sbb
into
add
leave
add
jmp
cmp
fcoms
jmp
lcall
cmp
sbb
pop
movsb
popa
data16
sbb
daa
mov
into
dec
xor
into
add
xor
jg
sub
and
xchg
lods
inc
in
fmuls
daa
inc
mov
push
in
insb
mov
jne
sarl
mov
loope
push
lcall
in
decl
dec
lods
mov
xchg
into
dec
xchg
bound
fstpl
cld
mov
mov
ljmp
cmp
xor
or
jle
outsl
inc
shl
cwtl
inc
jae
pop
shll
add
insl
mov
sbb
mov
in
cmp
aam
xor
cmp
mov
pop
mov
iret
sahf
clc
push
sbb
cmpsb
inc
mov
dec
fwait
lcall
mov
xchg
or
hlt
sbb
pop
inc
mov
aad
dec
pop
stc
push
test
and
sbb
jg
adc
clc
addr16
sub
add
xorl
lods
fsubrp
test
bswap
jno
jl
cmpsl
push
push
push
push
call
mov
mov
add
mov
adc
jmp
and
das
sbb
sbb
or
mov
movlps
stos
sbb
mov
pop
xlat
repnz
shlb
adc
sahf
test
int
ja
data16
stos
xor
pop
add
sub
loope
pop
movsb
inc
ret
pop
pop
divl
jb
mov
adc
cltd
add
inc
mov
daa
inc
and
inc
cmpb
push
inc
mov
and
push
cmp
inc
arpl
subl
inc
or
mov
mov
call
sbb
xchg
dec
es
lock
out
data16
jb
imul
xor
ret
dec
outsl
sbb
cmc
pushf
xor
data16
and
xchg
jg
enter
scas
dec
ss
gs
push
xchg
jg
mov
rorl
popa
fwait
sarb
in
xchg
push
movsl
add
inc
or
push
mov
loope
push
pop
sub
xor
xchg
mov
ds
lods
mov
movsl
daa
roll
adc
pop
test
adc
test
shr
leave
cwtl
jge
jne
push
push
andb
aad
adc
dec
and
fmul
dec
lret
shl
fildll
stos
xchg
inc
imul
cmpl
xchg
or
mov
icebp
outsl
push
aas
int3
imulb
js
push
xchg
xchg
fbld
or
mov
xchg
xor
rolb
paddsw
mov
pmaxsw
jge
ror
sub
movsb
mov
inc
xor
jns
inc
pushf
ret
outsb
cmp
pop
dec
push
lock
mov
lahf
pop
inc
leave
aam
in
aas
in
jge
xor
mov
ret
adc
out
mov
pop
xor
fcomp
push
mov
lea
push
fildl
sbb
mov
cwtl
jecxz
cltd
in
xor
jle
out
inc
mov
stc
mov
ret
nop
jo
data16
lret
repnz
inc
mov
cmc
rcrb
jno
outsl
inc
inc
sbb
mov
and
mov
aam
data16
sub
mulb
cmp
pop
dec
cmp
jl
mov
lcall
push
mov
aaa
mov
aam
fldt
adc
fimuls
es
adc
pop
push
arpl
jbe
mov
mov
rol
xchg
dec
mov
pop
scas
pop
cld
mov
cmp
jne
cmp
je
mov
mov
mov
xor
xor
xor
shld
shl
cmp
jne
cmp
je
mov
cmp
je
mov
mov
mov
mov
xor
xor
shrd
mov
shr
shl
or
mov
xor
or
cltd
cmp
jne
cmp
jne
movl
movl
jmp
pusha
into
out
sbb
and
jo
pop
mov
iret
movlps
fnstenv
ljmp
sub
dec
mov
add
mov
dec
push
sarl
xchg
pop
in
or
cwtl
push
fldcw
repz
mov
dec
rcr
mov
or
sarl
enter
leave
mov
pop
or
stos
rcrl
ret
inc
push
add
sbb
mov
inc
mov
jo
lret
mov
leave
push
imul
jl
test
movsb
icebp
inc
add
lea
add
mov
es
push
dec
ret
mov
push
jno
push
jl
cli
mull
add
cmpsl
mov
test
xlat
mov
push
aaa
cmp
dec
mov
jnp
call
popa
cmc
mov
jl
pop
sbb
jmp
jns
inc
pop
iret
mov
push
fwait
mov
pop
popa
mov
push
leave
test
jg
js
out
fs
fs
je
int
in
or
out
sub
mov
in
pop
ja
or
ficompl
mov
cmc
ja
addr16
push
outsb
mov
mov
pop
cwtl
xor
xchg
and
or
xchg
fs
addb
add
xor
mov
outsl
push
shl
rcrb
test
jno
mov
movsl
loope
mov
pushf
jnp
jmp
rol
pushf
lret
lcall
adc
jo
mov
pop
and
inc
xor
cmp
pushl
mov
sbb
pop
daa
cltd
mov
and
jae
lret
xor
inc
add
pop
pop
mov
push
decb
xor
cld
mov
adcl
outsl
cmp
mov
adc
aas
mov
pop
fwait
adc
adc
jmp
ret
sub
std
fwait
adc
push
or
push
xchg
cmp
jmp
fcos
mov
add
pop
inc
mov
sbb
push
in
sbb
imul
mov
or
fiadds
lcall
mov
test
push
lret
idivl
negb
sbb
popf
aaa
mov
xchg
enter
test
or
stos
adc
cmc
cmp
push
ficomps
test
movb
inc
push
addb
fcompl
test
pop
es
sub
int
lds
jecxz
cmp
mov
mov
mov
mov
xor
xor
xor
shld
shl
cmp
jne
cmp
jne
movl
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
mov
mov
cmp
jne
mov
mov
jmp
pop
and
fldenv
js
outsb
insb
lret
jle
out
adc
adc
sub
add
pop
inc
bound
andb
jo
push
lcall
mov
mov
mov
push
add
divb
xchg
mov
shr
int3
lcall
sbb
jg
popa
gs
mov
in
shlb
and
adc
movsl
sbb
outsl
sbb
test
loopne
out
idivb
js
sub
push
int
popf
mov
mov
scas
shrl
lock
mov
adc
lds
pop
enter
mov
sub
aad
cmp
xchg
pop
loopne
jle
movsl
dec
imul
and
mov
out
insl
push
pop
add
iret
add
aam
pop
dec
inc
push
fistps
xorb
push
fs
pop
jg
hlt
fwait
ret
and
or
jmp
push
pop
pop
inc
lods
mov
adc
popa
cmp
push
data16
mov
xchg
jmp
sbb
arpl
xchg
xor
xchg
test
cs
mov
jecxz
in
xchg
add
out
pop
xchg
in
cmp
jo
rol
js
add
in
ret
mov
hlt
push
add
pop
rep
inc
xchg
ret
les
repz
fsubl
test
jp
push
add
mov
mov
out
popa
mov
push
and
std
jb
pop
outsb
mov
fcomps
sub
repz
sbb
mov
cmp
nop
inc
push
push
jp
jo,pt
adc
jb
push
out
cmc
mov
pop
cld
mov
xor
loope
xor
int3
cmp
push
std
mov
fistpll
pop
sub
int3
adc
jl
xor
bound
xchg
clc
decl
mov
mov
popf
jg
sub
mov
test
lds
lcall
rcr
fwait
push
std
je
add
dec
cmp
sahf
push
and
xor
inc
sub
xchg
jle
push
sbb
das
inc
je
enter
aad
popa
out
frstor
mov
xchg
pop
mov
xchg
mov
adc
push
sbb
adc
imul
mov
add
in
aam
cmp
popf
dec
lahf
mov
mov
mov
mov
adc
cmp
pop
lret
fst
lahf
shrb
ds
mov
cmp
enter
adc
pushf
or
test
addb
add
fisubs
test
mov
add
mov
mov
mov
movzwl
mov
and
mov
or
mov
add
or
mov
mov
mov
mov
mov
mov
mov
mov
mov
jmp
add
and
inc
and
mov
push
in
adc
adc
pop
and
cli
sbb
cmp
mov
sbb
adc
sbb
shl
add
sub
lret
push
mov
and
cli
and
xlat
or
lds
pop
in
adc
adc
lret
jp
stc
fisubl
add
aam
pop
mov
jmp
add
xor
scas
cmc
sub
in
ss
sub
add
das
mov
jne
ss
dec
test
stos
outsl
mov
add
inc
je
lods
cmp
imul
stos
mov
push
pop
cld
and
mov
mov
push
lahf
push
in
outsb
xor
outsb
adc
mov
lods
sub
xlat
popf
loopne
mov
cld
add
ljmp
sbb
lret
jno
adc
xchg
enter
and
mov
and
fsubs
call
mov
xor
pushf
gs
in
icebp
add
imul
inc
push
cmpsl
mov
or
add
jg
lea
andb
adc
clc
xor
das
jb
ljmp
testl
jns
mov
sti
or
lea
jbe
push
addl
push
dec
and
ret
mov
lods
stc
push
in
xor
cmp
das
out
cmp
sub
xchg
or
push
jns
mov
scas
clc
out
sub
pop
inc
cmp
sub
sbb
push
pop
or
push
clc
xor
jnp
mulb
ret
xor
lea
orb
mov
xchg
mov
mov
sti
pop
test
mov
mov
pop
and
pushf
rcr
fdivs
imul
out
test
mov
xchg
sbb
aam
add
push
push
or
push
fcoml
dec
jl
popf
fmuls
push
lds
xor
ds
push
repnz
pop
pop
rorb
inc
add
mov
sahf
fisubs
pop
fninit
test
mov
paddb
nop
fcmovnu
mov
pop
jecxz
je
fmuls
stos
sub
lret
rorl
xor
loop
xchg
pop
add
pop
fwait
cmp
jne
xor
lahf
sbb
dec
dec
in
xchg
mov
add
inc
aam
or
jg
mov
push
jbe
insb
push
push
pop
mov
scas
cmp
test
scas
in
cmpsl
stc
mov
mov
or
mov
or
mov
sub
mov
sub
mov
cmp
jbe
mov
mov
mov
mov
movzwl
mov
or
mov
sub
mov
or
imul
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
sub
mov
xor
mov
imul
mov
and
mov
and
mov
cmp
ja
mov
mov
shrd
shr
mov
mov
xor
xor
or
push
push
push
lea
push
lea
push
shl
call
pushl
pushl
pushl
pushl
call
mov
mov
shrd
shr
mov
mov
shl
xor
xor
or
mov
mov
mov
mov
shrd
shr
mov
mov
shl
xor
xor
or
mov
mov
mov
mov
mov
cmp
jne
mov
mov
mov
cmp
jne
movb
movb
movb
movb
mov
mov
or
sub
mov
sub
movzbl
movzbl
cltd
idiv
movzbl
or
mov
movb
movb
movb
movb
movb
mov
mov
jmp
les
mov
mov
cmpsl
ljmp
loope
in
mov
mov
gs
movsb
adc
push
jb
cmovno
xchg
cmp
je
and
idivl
pop
add
fdivl
lret
fmuls
fiaddl
mov
xchg
es
pop
and
inc
cmp
xchg
and
push
aam
jmp
push
sub
mov
and
mov
sbb
fidivrs
call
test
add
sti
jns
and
or
test
adc
inc
out
and
out
adc
pop
cmp
inc
cmpl
fstp
testl
jg
mov
std
adc
pop
loope
mov
test
xchg
xor
out
cs
push
sub
jb
ret
cltd
fnsave
mov
lcall
add
rcrb
rcl
inc
aaa
add
mov
xchg
lock
aam
shrl
xor
loope
in
inc
stos
les
ret
jmp
lret
lcall
pushf
push
aaa
shrl
pop
out
outsb
push
faddl
push
adc
add
leave
neg
jae
pop
outsl
dec
mov
mov
xor
xor
adc
dec
or
sub
cmp
adc
shrl
cmp
adc
push
adc
sbb
shll
jns
xchg
adc
add
pop
cmpsb
loop
or
lea
xchg
repz
aas
jne
mov
lods
lret
mov
push
in
cmp
in
int3
loope
inc
sbb
sbb
out
adc
test
sub
cmc
cmp
fwait
pop
mov
gs
push
arpl
push
addr16
cmpsb
insl
xchg
mov
add
fistl
imul
shlb
gs
jb
lods
addb
sub
cwtl
fcomps
iret
fistpl
push
pop
int3
iret
cltd
scas
js
test
add
lahf
pop
sbb
fs
mov
push
sub
pop
repnz
hlt
out
sbbl
dec
add
or
sub
xchg
nop
sahf
fistps
adc
out
hlt
mov
xor
cld
inc
sti
sub
test
loopne
jp
popa
pop
jmp
inc
push
or
sub
ss
arpl
or
fsts
imul
in
push
cmpsl
inc
shrb
jg
shl
cmp
stos
fstps
or
and
mov
imul
mov
movzbl
movzbl
and
mov
movzbl
cltd
idiv
mov
cmp
je
lea
push
lea
call
cmp
jne
cmp
jne
jmp
mov
mov
mov
mov
add
adc
mov
mov
push
push
lea
push
call
mov
push
pushl
lea
push
call
mov
mov
mov
mov
mov
mov
mov
lea
mov
add
movl
movl
mov
and
add
and
jmp
je
adc
cmp
mov
movlps
pusha
decb
cmp
xlat
pop
arpl
sub
cmp
nop
jl
in
or
add
stos
outsb
jo
mov
or
add
repz
add
mov
rolb
xchg
les
jb
mov
cmp
adc
fldt
lcall
jg
je
fadd
sbb
mov
xchg
test
sub
in
jge
mov
or
add
ja
or
jb
popf
fsub
jo
xlat
sub
xor
fidivrs
lods
fdivrs
lcall
push
shrb
sbb
in
lahf
xlat
cmp
mov
stc
adc
call
cmp
ds
lret
mov
scas
pop
inc
sub
in
dec
pop
test
pushf
sub
mov
popa
addr16
into
xor
lds
xor
xor
iret
bound
sub
leave
mov
dec
inc
and
int3
xor
pop
mov
cmp
dec
icebp
push
jns
jmp
dec
inc
sahf
lret
jecxz
push
xor
mov
repnz
mov
int
and
fwait
aam
adc
sarl
dec
fistpll
push
jmp
loopne
lahf
cmp
sti
add
data16
inc
mov
xlat
cmc
out
cli
mov
sub
jl
stc
pop
daa
xor
arpl
popw
add
mov
scas
jle
rolb
add
inc
push
adc
das
call
ss
data16
sub
mov
push
sbb
hlt
outsb
in
sub
stc
arpl
je
dec
mov
orl
mov
jmp
and
cmp
dec
out
lods
fs
xchg
out
pop
ret
xchg
sbb
cwtl
lahf
insb
in
mov
adc
aaa
mov
adc
or
adc
mov
ljmp
jmp
adc
int
sti
call
cwtl
fs
int
lcall
in
mov
dec
push
ljmp
add
lahf
mov
dec
lret
xchg
mov
dec
and
mov
xchg
arpl
mov
loope
outsb
add
loop
in
add
dec
or
xchg
js
xor
iret
push
adc
ret
jnp
xor
sub
ds
pushw
sbb
lahf
push
sbb
nop
jl
jnp
lahf
fcoms
and
sub
and
mov
movl
mov
mov
or
add
cmp
je
mov
mov
mov
xor
xor
xor
shld
shl
cmp
jne
cmp
jmp
in
xchg
xchg
or
or
mov
sti
jle,pn
fcoml
adc
mov
scas
dec
fildll
outsb
mov
dec
dec
mov
push
push
push
sbb
xor
imul
jns
fwait
sub
mov
bound
loopne
int3
jae
or
into
scas
popl
push
js
add
xchg
rcrb
mov
sbb
mov
insl
xchg
lods
loope
inc
push
mov
mov
outsl
ret
out
mov
push
xchg
negl
inc
addl
shlb
cmpsb
out
adc
mov
ljmp
mov
xchg
xchg
outsb
das
mov
jg
add
sub
fwait
mov
popa
dec
cmp
xchg
inc
pop
int3
shll
fstpl
push
into
movsl
out
cmp
cmp
cld
jp
int
inc
xchg
add
jl
sub
movsl
sbb
loop
outsb
add
sub
into
xchg
ret
jge
mov
js
push
test
cmove
jae
sub
cld
and
test
push
daa
push
fldcw
cmpsb
filds
xchg
ds
add
push
jl
xchg
jmp
jns
jmp
sbb
imul
lret
and
lea
test
jg
rolb
inc
repnz
xlat
mov
or
int
clc
int3
int
ss
dec
add
adc
xchg
fnsave
jg
faddl
cmp
sub
add
xchg
mov
mov
sbb
sub
dec
mov
jecxz
xor
jmp
jo
ds
cmp
outsb
ljmp
and
scas
inc
loopne
lock
inc
bnd
and
sub
call
loopne
sub
push
fisubrs
out
mov
cmp
hlt
xchg
mov
lods
sub
pop
fstpl
int3
ljmp
inc
mull
arpl
sbb
or
pop
inc
insl
or
pusha
pop
add
orb
fsubrs
mov
ret
icebp
sbb
ds
into
and
out
lret
xchg
icebp
xor
in
xchg
xchg
cs
aam
dec
xchg
pop
adc
shrl
shll
pop
or
test
push
sub
jnp
fnstsw
cmp
pusha
or
lea
pop
aas
shll
sbb
mov
jno
pushl
jne
or
sub
cmpsl
bound
xor
or
test
test
add
mov
mov
mov
mov
xor
xor
shl
shr
or
xor
xor
jmp
pop
sbb
sbb
and
lret
xor
js
cmc
js
fcmovnu
adc
adc
popa
ja
pop
cmp
scas
mov
mov
clc
or
mov
jo
or
dec
pop
dec
outsl
xchg
sbb
scas
mov
lcall
movsbl
cmp
mov
iret
das
xchg
cmp
inc
fcompl
sahf
mov
jecxz
in
scas
or
push
stc
or
pusha
jmp
pop
insb
push
daa
jb
insl
jmp
pop
ds
inc
mov
sub
cmpsl
mov
test
test
jp
clc
sub
mov
test
mov
xchg
nop
sub
and
inc
ret
mov
jmp
or
insb
cmp
fidivs
dec
add
mov
enter
xchg
or
jbe
out
insl
xlat
das
pop
iret
xor
inc
cmp
and
les
sbb
test
lret
mov
dec
pop
out
cmpsl
mov
aaa
sbb
push
or
mov
pop
je
pop
aaa
popa
out
arpl
data16
xchg
aad
mov
scas
test
cmpsl
out
pop
imul
pop
jns
jo
cmp
cmp
mov
pop
fstpl
outsb
lds
or
hlt
jmp
dec
cmp
pop
je
aam
sbb
lock
cli
pop
mov
test
adc
fdivrs
lret
test
je
stos
xlat
sbb
sbb
in
push
cld
mov
jne
pop
out
xor
sub
xchg
inc
lock
dec
mov
fldl
jmp
sahf
pop
sbb
daa
jbe
adc
int3
and
cs
xchg
xor
aaa
test
sbb
je
add
xor
adc
pop
movsl
mov
test
test
adc
push
jno
ret
pop
jae
mov
stos
mov
push
mov
dec
movsb
push
in
jecxz
mov
mov
push
insb
dec
adc
xchg
mov
add
mov
nop
pop
xchg
push
fisubrl
cmc
imul
mov
xchg
pop
cmp
inc
fimull
inc
or
enter
cwtl
xor
mov
nop
ljmp
mov
and
cltd
int
xchg
test
lods
or
push
arpl
enter
in
cmp
jle
or
mov
std
loopne
cmp
fmull
mov
pushf
mov
push
xchg
sbb
shll
cmp
dec
mov
jo
xchg
mov
cmp
data16
jge
fisubrs
aas
cmp
jne
cmp
je
mov
cltd
mov
mov
cltd
shld
shr
xor
shl
or
or
mov
mov
xor
xor
mov
cmp
jne
cmp
je
pushl
pushl
mov
mov
pushl
mov
call
mov
mov
mov
mov
push
add
push
lea
push
call
mov
mov
pop
pop
pop
mov
pop
ret
push
mov
sub
push
movl
push
cmpl
mov
movl
not
jmp
mov
je
push
pushl
push
push
call
sbb
sub
adc
add
sub
add
cmpl
mov
mov
not
movl
jmp
movzbl
movl
jg
push
call
andl
xor
xor
andl
mov
mov
sbb
dec
push
movl
sub
movl
xor
movl
dec
mov
xor
add
xor
mov
xor
xorl
div
cmpl
movl
mov
movl
jmp
movl
movl
jl
pushl
call
orl
or
not
sbb
imul
mov
xor
mov
add
mov
and
mov
xor
adcl
jmp
adc
sbb
xchg
pop
pop
cmp
insb
cwtl
rclb
adc
sbb
aas
or
fsubp
mov
outsb
mov
or
out
mov
xchg
stos
dec
cs
insl
xchg
cmp
pusha
xor
sbb
ds
lret
insb
dec
jge
movaps
cmc
icebp
rclb
shrb
aam
pop
cli
pushl
call
jae
jmp
xlat
lcall
push
mov
push
daa
xorb
mov
rorb
scas
aas
cmc
adc
clc
data16
out
fs
xor
xchg
imull
es
inc
stos
jmp
inc
shrl
pop
call
stos
dec
cmp
push
jno
hlt
pop
mov
loopne
lret
outsb
icebp
ja
push
dec
jne
pop
inc
and
pop
orb
inc
mov
mov
cmp
mov
inc
call
add
shl
shl
ret
mov
fistpl
push
adc
int
dec
push
rcrb
je
bound
scas
cmp
and
add
inc
push
fwait
repnz
xchg
jo
sub
nop
aas
icebp
stos
inc
into
je
rcrb
pop
inc
dec
pop
gs
dec
mov
sahf
movsb
push
cmpsl
fs
mov
adc
std
mov
in
je
sahf
fcmovb
adcb
nop
icebp
jae,pn
jmp
or
in
out
push
or
ret
adc
cs
cmp
mov
loopne
test
dec
push
push
aaa
pusha
cmpsl
movsl
bound
in
out
jae
cmp
mov
test
nop
call
bound
js
xchg
lahf
push
shl
sbb
push
add
into
jnp
adc
mov
add
lret
mov
adc
test
test
adc
sub
clc
push
and
mov
cmp
mov
fiadds
stos
data16
sub
sub
lret
lcall
stc
mov
addb
in
mov
sub
adc
fdivrl
jl,pn
out
xchg
dec
xor
adc
mov
int3
lret
pop
jo
es
insl
pop
sub
adc
rorb
jg
ss
inc
outsl
orl
and
data16
test
icebp
xchg
pop
dec
jecxz
xor
ret
lods
add
pop
xchg
sub
dec
clc
cli
pop
in
dec
mov
jle
shrl
cli
fnstsw
pop
adc
xchg
pop
xchg
repz
cmp
cmp
jo
dec
lea
stos
stos
push
cmpl
pop
push
inc
mov
aad
rolb
rorb
fsubs
and
jbe
test
test
fsubl
add
aam
sub
dec
sarl
insb
push
xchg
loopne
inc
mov
push
mov
das
insl
out
push
test
mov
inc
in
xchg
je
or
inc
stc
and
and
xchg
jae
in
or
push
data16
hlt
jne
sub
das
addl
xchg
xor
mov
mov
das
gs
int
ja
xchg
dec
and
adc
mov
lods
cmpsl
mov
adcl
cmpl
push
or
ret
and
mov
xchg
jb
add
push
xchg
mov
ds
inc
cltd
pop
cs
dec
and
xchg
mov
out
inc
inc
dec
push
mov
dec
call
dec
or
js
icebp
sub
adc
mov
movl
sub
movl
add
movl
mov
adc
mov
add
mov
or
xor
xor
imul
mov
and
sub
xor
mov
mov
mov
sub
sub
movl
movl
sub
movl
movzwl
or
movl
mov
sbb
imul
mov
cmpl
mov
movl
jmp
movl
movl
jl
push
push
call
sbb
addl
xor
xor
xor
add
mov
dec
adc
sub
imul
imul
mov
adcl
and
or
not
mov
xor
mov
adcl
mov
sbbl
lea
mov
sub
movl
and
movl
and
movl
cmpl
movzwl
mov
movl
jmp
mov
mov
jne
pushl
pushl
push
call
sbbl
and
sbbl
subl
sub
mov
xor
mov
or
add
jmp
adc
mov
and
xchg
js
sti
dec
mov
stos
adc
adc
mov
call
scas
mov
mov
inc
sub
negb
lea
mov
imul
out
pop
lds
clc
aad
bound
sub
push
adc
mov
out
xor
push
jp
xor
insl
ljmp
mov
or
add
inc
aas
mov
icebp
inc
xor
and
or
in
sbb
out
popa
fxch
shlb
popf
out
in
push
xchg
sbb
outsb
mov
pop
inc
lcall
mov
dec
mov
ds
mov
cmp
aaa
pop
xor
stos
mov
xor
cltd
mov
mov
sub
xlat
cmp
in
mov
into
xchg
mov
stos
dec
int3
adc
ret
cwtl
sbb
scas
add
shrb
bound
push
cmpsb
xorl
xor
cmpsl
cmpb
pop
mov
xor
jge
mov
mov
xchg
cmp
or
cli
xlat
ret
mov
shl
stc
sbb
mul
adc
cmp
lret
inc
push
dec
sub
and
dec
mov
inc
movsl
pop
mov
jg
add
sub
mov
inc
jne
repz
lds
push
sub
cmp
loopne
mov
lret
ds
movsl
sbb
fisttps
cmc
pop
addl
repz
inc
add
dec
lods
cmp
in
mov
sbb
pop
inc
sub
mov
xchg
movsl
inc
jl
xchg
jmp
push
cli
rolb
push
add
dec
adcb
adc
push
pusha
loop
lock
jl
repz
and
xlat
and
into
into
push
outsb
pop
in
or
adc
sub
div
in
sbb
pop
inc
insl
repnz
icebp
mov
sub
inc
pop
xor
or
cmp
aaa
pop
or
adc
adc
pop
lret
insl
ret
mov
shlb
pop
jge
add
xor
loopne
xlat
xor
jo
mov
dec
sub
xor
sub
hlt
repz
sahf
jle
popa
sub
js
push
dec
clc
and
mov
jns
pop
or
inc
movsb
dec
xchg
sbb
adc
pusha
sub
insl
fstpl
add
in
cmc
rol
repz
lock
push
xchg
inc
test
xchg
push
or
mov
leave
cmp
jmp
and
sub
jmp
cmp
adc
in
cli
inc
xor
int
add
push
out
test
fbld
jnp
dec
and
in
pop
jecxz
repnz
lcall
repz
stos
push
aaa
and
add
and
push
movsb
inc
inc
xor
outsb
sti
xchg
push
mov
and
jb
adc
pop
add
stc
inc
add
jns
push
push
push
pop
xchg
xor
and
dec
and
push
jg
ljmp
mov
mov
jp
fs
mov
insb
jp
imull
cmpsl
ss
hlt
xor
sub
cmpb
cld
out
mov
bound
int3
pop
adc
mov
push
cmp
cmp
in
jmp
leave
jge
test
movsb
sbb
dec
lea
js
jecxz
inc
fcomps
popa
jp
pusha
imul
cmpsb
inc
jge
mov
pop
add
sbb
or
decl
roll
add
adc
xor
cmpl
not
mov
not
movl
jmp
movl
movl
jae
push
push
call
or
or
adc
notl
adc
xor
mov
or
movl
movl
movl
cmpl
mov
movzbl
movl
movl
jmp
mov
jg
pushl
push
push
pushl
push
push
push
call
adc
xor
mov
and
mov
dec
sub
and
mov
sub
add
xorl
mov
sbbl
sub
cmpl
movl
mov
mov
jmp
movl
jne
pushl
call
xor
or
add
mov
xor
mov
mov
sbb
and
xorl
mov
xorl
lea
mov
xor
mov
or
cmpl
movl
mov
mov
jmp
mov
je
push
pushl
call
and
andl
adc
mov
or
not
sbb
sub
mov
cmpl
mov
mov
mov
mov
jmp
movl
mov
jae
push
pushl
call
mov
adc
mov
xor
movl
movzwl
xor
and
orl
movl
and
movl
cmpl
mov
mov
jmp
movl
jb
push
push
push
call
adc
adc
add
or
mov
add
mov
or
adc
mov
add
add
movl
imul
mov
imul
or
xor
mov
div
or
sub
mov
cmpl
movzbl
not
jmp
mov
jb
pushl
pushl
push
call
xor
or
and
mov
inc
sbb
add
xor
add
mov
and
xor
mov
mov
and
movl
add
movl
movzbl
or
movl
movzbl
or
mov
add
mov
subl
xor
xorl
div
or
imul
add
cmpl
mov
mov
movl
jmp
movl
mov
jbe
push
push
pushl
push
pushl
call
sbb
addl
add
add
adcl
adcl
add
mov
xor
cmpl
mov
mov
movl
mov
jmp
mov
movl
je
pushl
pushl
call
movzwl
xor
movl
xorl
andl
movl
add
sbbl
xor
jmp
xchg
fldenv
push
pop
xchg
pop
outsb
bound
mov
mov
adc
testl
jle
adcb
es
ljmp
jl
inc
xchg
pop
xchg
or
inc
insb
pop
int
aad
sub
dec
subl
dec
loop
std
loope
sub
mov
lea
dec
cld
push
mov
inc
jp
repz
cmp
push
andb
fsubr
and
lods
dec
lret
add
in
clc
inc
and
sub
shr
sahf
xor
mov
xchg
outsl
les
xchg
xor
call
cmp
sti
ror
ja
add
sbb
ds
scas
imul
mov
xor
push
je
inc
mov
adc
out
dec
xchg
mov
sub
in
repnz
das
xchg
adc
loopne
mov
jle
iret
xor
add
jge
subb
mov
fldenv
sti
mov
xor
clc
lock
dec
idivb
ljmp
insl
out
int3
sbb
push
cli
xchg
rorb
xchg
jl
jo
mov
in
and
int
mov
adc
jb
cs
loope
mov
mov
adc
jae
cli
push
in
xchg
jno
js
xor
daa
sarl
push
mov
mov
sbb
jnp
mov
pop
cmpsl
orl
jnp
mov
sub
mov
push
dec
jge
jle
fisubs
add
or
push
push
lret
int3
pop
xor
lds
bound
adc
fidivrl
js
inc
and
ret
je
push
popa
lods
fsubs
incb
ret
jmp
pop
lret
aad
jl
inc
test
scas
add
fiaddl
in
push
enter
push
scas
mov
out
pop
push
xor
nop
and
icebp
cmpsb
add
iret
adc
aas
out
out
xchg
push
movsl
hlt
push
jge
jb
push
xor
xchg
popf
pop
nop
test
aas
fidivrs
pop
xor
fisubs
add
arpl
xlat
jo
push
insb
xchg
mov
lret
jecxz
fs
loopne
mov
data16
pop
xor
mov
mov
inc
lds
fdiv
cld
movsl
adc
movsb
cmp
jge
rcll
cs
fstpl
jp
cmp
mov
inc
pop
cltd
stc
and
lret
adc
jnp
inc
mov
xlat
hlt
inc
scas
push
fbstp
arpl
sbb
lods
xchg
std
xor
adc
fsts
iret
mov
jne
inc
jne
pop
cmp
insl
adc
ret
out
subb
iret
das
ds
mov
dec
xchg
jae
sbb
dec
call
jmp
push
mov
and
loop
mov
jecxz
cwtl
push
jne
cmp
sbbb
mull
mov
jns
lock
ret
xchg
imul
stc
mov
xchg
scas
and
fdecstp
mov
jmp
pop
mov
mov
jge
cwtl
in
insl
mov
xchg
jno
les
ret
jno
dec
or
loopne
push
test
xchg
pop
cmpsb
and
arpl
outsb
aad
insb
add
daa
fsqrt
or
repz
test
dec
xor
and
adc
cmc
daa
lahf
xlat
sbb
lods
xchg
xor
ret
jecxz
out
sbb
pop
and
popf
or
jnp
inc
xchg
cmp
popa
xlat
sub
das
mov
push
int
aas
cmp
push
mov
div
subl
xor
mov
adc
movl
movl
movl
mov
and
mov
addl
sub
dec
shr
sub
mov
imul
cmpl
movl
mov
mov
jmp
mov
jne
push
call
orl
adcl
movl
xorl
adcl
addl
mov
addl
and
cmpl
movl
movl
jmp
movl
jl
push
pushl
push
push
push
push
pushl
pushl
push
push
pushl
call
xorl
sbb
andl
sub
andl
orl
xor
or
adc
mov
andl
sub
mov
movl
cmpl
mov
mov
movl
not
jmp
mov
jbe
push
call
dec
xor
orl
add
mov
mov
sub
adc
adcl
movl
mov
cmpl
mov
movl
movl
jmp
movl
mov
jae
push
push
pushl
push
call
subl
mov
adc
mov
movzwl
or
negl
and
adc
and
jmp
insb
cmp
push
daa
aaa
mov
pop
add
adc
cmp
mov
pop
cmp
cmp
xchg
stos
add
mov
jge
out
pop
cmpl
and
mov
inc
cmp
dec
xchg
das
std
in
orl
dec
add
call
sub
mov
xchg
mov
imul
insb
mov
mov
mov
repnz
sub
mov
push
arpl
rorl
cmp
mov
mov
pop
into
xchg
dec
xor
push
pop
scas
jne
int
pop
sahf
add
jnp
andl
pusha
sub
mull
test
mov
mov
xor
push
test
cltd
jmp
mov
add
lds
je
pushf
jecxz
out
push
or
ss
bound
adc
xchg
mov
fstps
mov
inc
add
iret
jp
out
fldlg2
xchg
fnstenv
dec
lahf
jo
pop
mov
sub
loopne
xor
ficoml
jb
loop
out
adc
mov
add
mov
cmpb
mov
movsb
pop
and
pop
int3
push
repnz
ja
orb
data16
and
cs
imul
and
jp
adcb
jle
mov
dec
sbbb
cmp
sub
xchg
fcoms
addr16
xchg
lea
sbb
dec
push
lret
sahf
out
mov
add
cmc
xor
cmp
adcb
xchg
push
sub
imul
in
dec
cwtl
imul
dec
sahf
inc
push
xchg
xor
and
ret
out
inc
push
cmp
in
cltd
fwait
in
push
xor
mov
jo
cmc
push
push
cmp
pop
mov
mov
mov
in
jno
out
aam
fcmovnb
fidivs
dec
ret
ret
xchg
jb
mov
mov
insl
or
icebp
cmp
arpl
mov
stc
mov
mov
pushf
pop
mov
pop
jmp
pop
mov
push
lock
flds
mov
pop
fimull
xchg
adc
fcoms
add
xor
inc
imul
or
movups
data16
cmp
clc
mov
outsb
mov
sbb
or
or
mov
push
mov
mov
fadds
mov
scas
jae
inc
test
mov
inc
xchg
pushf
xlat
inc
cmp
bound
xorl
jns
pop
and
adc
aas
dec
jae
pop
add
pop
in
mov
pop
repz
mov
xlat
jns
popa
mov
and
out
rorl
mov
mov
mov
push
mov
dec
fdivrl
loop
insb
pushf
xchg
push
movsb
pop
cmp
sub
rcl
fidivrl
outsb
push
mov
ljmp
mov
fmuls
sub
bound
and
and
ja
fs
mov
mov
xlat
cmp
insl
je
in
orb
pop
mov
pusha
ret
jecxz
push
cmpsb
dec
fiadds
adc
mov
adc
dec
sti
cmpsl
xor
push
or
inc
mov
or
xor
sub
mov
cmpl
notl
mov
jmp
movl
mov
jne
push
pushl
push
push
call
movzbl
adc
mov
xor
mov
and
subl
adc
add
movl
or
jmp
xchg
pop
dec
or
cltd
push
pop
jecxz
mov
mov
adc
pushf
jmp
ljmp
add
loop
sub
push
jne
push
jp
lods
pop
cld
xor
dec
mov
ljmp
and
push
clc
adc
add
jl
popf
dec
sbb
loopne
sub
dec
stos
mov
fcoms
push
jmp
add
movsb
xchg
mov
xchg
adc
mov
xchg
xchg
mov
add
cmp
mov
hlt
cmpsl
xchg
mov
jge
cs
pop
sub
xchg
and
pop
sbb
daa
aaa
push
xor
push
out
lea
pop
inc
jno
rclb
mov
jp
sarb
sarl
leave
lcall
mov
jmp
nop
inc
rorb
sahf
mov
add
dec
xchg
fisubs
add
or
mov
in
jg
ja
dec
ret
xorl
add
xor
or
pop
xchg
jmp
icebp
test
jnp
xor
repnz
jmp
testl
push
popa
push
arpl
je
mov
or
lea
fsubs
push
into
aad
cmp
and
ja
pop
cli
add
and
sub
and
add
pop
enter
dec
lock
outsb
push
aas
mov
push
call
fwait
outsb
dec
outsb
sbb
jle
lock
pop
push
and
sub
xor
dec
test
repnz
repnz
xor
dec
rolb
xchg
stos
daa
xchg
mov
rorb
addr16
int
mov
sub
xchg
ja
sub
jp
rclb
aaa
mov
lods
sarb
call
stc
leave
stos
fbstp
shlb
mov
in
mov
fsubl
addr16
xchg
cmp
sub
addw
push
dec
xchg
repz
jne
dec
dec
push
xor
mov
xor
and
dec
xchg
mov
daa
xor
or
ret
popf
push
jo
push
dec
mov
mov
dec
movb
lods
outsl
jp
mov
nop
mov
cmp
add
repnz
jnp
call
cltd
pusha
fstps
jl
sub
out
insb
test
adc
sbb
add
mov
push
cltd
aam
inc
jg
adc
popf
mull
xchg
xchg
int3
jno
rclb
hlt
cld
mov
pop
fcomip
mov
fidivl
lds
pop
mov
mov
dec
push
and
pop
xor
loopne
pushf
arpl
or
push
xor
or
ja
ljmp
lea
adc
xchg
cmpsl
add
dec
subl
mov
outsb
cmpsl
mov
xchg
movsl
rcll
lock
adc
lods
outsl
out
push
fiadds
jmp
cmp
repz
fldcw
xlat
mov
std
add
push
jp
sub
lcall
idivl
fcoml
mov
mov
jecxz
daa
mov
jbe
movsl
movsl
loope
ret
dec
pop
push
mov
and
call
push
or
pop
cmp
mov
fsubrs
mov
test
cmp
xchg
push
lret
sub
push
fisttps
inc
dec
movl
subl
movl
sbbl
movl
mov
mov
sub
xor
movl
or
movl
movl
cmpl
mov
movl
mov
movzbl
jmp
mov
jb
push
call
sub
adc
and
add
movzwl
and
mov
mov
add
mov
sub
cmpl
movl
mov
jmp
mov
jne
push
pushl
call
sbb
mov
add
and
or
and
andl
mov
mov
add
mov
imul
cmpl
mov
mov
mov
mov
jmp
movl
movl
jbe
push
push
push
push
pushl
call
sub
dec
mov
sub
or
adc
orl
add
imul
mov
or
dec
mov
lea
adcl
push
call
add
mov
add
mov
imul
add
and
mov
mov
xor
sub
add
xor
mov
andl
div
cmpl
notl
movl
movl
jmp
movl
movl
ja
push
push
pushl
pushl
call
xor
xor
and
mov
or
sub
mov
or
mov
inc
xor
xor
add
and
mov
movl
mov
and
mov
movl
and
movl
addl
movl
cmpl
mov
mov
mov
jmp
mov
jg
pushl
call
mov
adc
sbb
mov
adc
or
movl
xor
movl
andl
movl
orl
movl
xorl
movl
sub
movl
movl
movl
sbb
movl
mov
mov
mov
cmpl
mov
mov
jmp
movl
ja
pushl
push
push
call
or
sbb
adc
movl
cmpl
mov
movl
mov
jmp
mov
ja
push
push
pushl
call
and
and
incl
mov
and
not
and
mov
adc
mov
cmpl
notl
mov
movl
jmp
movl
jbe
push
push
call
sub
xor
adc
mov
mov
sub
sbb
sbb
and
xor
sub
sub
cmpl
mov
movzbl
mov
jmp
movl
jg
push
pushl
push
call
add
mov
xor
add
sub
or
xor
add
mov
sub
or
notl
sub
adc
xor
imul
mov
sbb
lea
mov
xorl
mov
neg
mov
mov
movl
xor
adc
add
or
mov
xor
lea
and
xor
add
sbb
mov
mov
cmpl
movl
mov
jmp
movl
movl
je
push
push
push
call
subl
sub
adc
sub
or
sbb
sub
movl
add
mov
cmpl
movl
mov
mov
not
jmp
mov
jb
push
call
xorl
sbb
add
add
xor
add
movl
sub
movl
adc
movl
movl
cmpl
movl
movl
jmp
movl
not
jle
pushl
call
andl
sub
xor
mov
adc
or
and
mov
cmpl
not
movzwl
mov
jmp
movl
jl
pushl
pushl
call
add
neg
or
adc
adcl
sub
mov
and
mov
xor
xor
adcl
mov
adcl
call
cmpl
mov
mov
movl
jmp
movl
movl
ja
push
call
adcl
xor
xor
or
and
or
mov
mov
mov
mov
xor
xor
mov
call
or
or
jmp
sbb
adc
cli
sbb
pop
enter
lods
adc
adc
mov
jmp
inc
push
add
adc
fisubs
out
and
arpl
pop
andl
adcb
jge
cmp
and
inc
jp
mov
jle
sar
mov
shll
test
lods
jmp
mov
push
or
shll
mov
cmpsl
insb
cs
mov
movsb
mov
movsb
mov
sbb
xchg
leave
popa
cwtl
pop
std
imul
or
scas
pop
push
mov
or
fisttps
enter
inc
or
dec
xchg
dec
out
fiadds
ja
fsts
sub
cmp
ljmp
inc
arpl
data16
mov
inc
addr16
or
xchg
or
xchg
fstpt
or
and
and
repz
jl
inc
jl
or
sbb
and
mov
leave
addr16
scas
mov
mov
es
ret
jl
mov
sbb
ljmp
or
cmp
iret
jg
adc
xor
add
popf
das
xchg
fld1
seto
aam
and
ss
jbe
jo
jbe
nop
lea
add
stos
data16
loope
popa
data16
lcall
adc
jl
or
out
mov
in
push
dec
fnsave
cmp
inc
jo
sub
inc
les
rorl
adc
dec
dec
into
aas
rcll
addr16
xchg
aad
jg
or
xchg
into
aad
outsb
cmp
adc
cmc
ret
sbb
sahf
inc
ds
ror
in
jp
inc
cmp
dec
testl
sub
mov
push
movups
lcall
sti
xor
stos
ret
idivb
std
mov
inc
or
pushf
and
sbb
inc
scas
fucom
cmp
in
dec
ret
mov
cmp
lahf
mov
sbb
testl
subl
stos
cmc
ds
bound
cld
mov
lock
push
pop
gs
ds
mov
daa
dec
pop
mov
das
rcrl
lret
in
mov
dec
outsl
inc
push
scas
testl
dec
sub
push
cwtl
push
jno
test
sub
popf
xchg
fcomp
aam
call
ret
lods
pop
in
idivb
popf
lods
ss
sbb
out
iret
popa
lcall
test
jmp
jns
mov
pop
pop
lret
lret
xchg
push
test
or
push
xor
jg
jo
hlt
repz
outsb
add
sti
push
jnp
int3
dec
inc
mov
xor
es
dec
insb
lahf
lea
add
jae
in
mov
enter
and
push
movsb
shll
int3
push
int
xor
andb
xchg
dec
pusha
mov
add
sbb
sub
jl
daa
orl
pop
mov
subb
and
icebp
push
push
inc
arpl
and
and
cmp
add
pop
mov
ds
ret
cli
shrl
xor
dec
out
mov
out
imul
push
hlt
sbb
pushf
mov
jg
gs
popf
arpl
insb
jg
das
xor
lds
flds
and
into
push
or
js
mov
mov
xor
xor
jmp
or
mov
mov
mov
jmp
movsb
adc
adc
adc
mov
rol
and
cmp
xchg
dec
adc
fdivp
ret
pop
fnstcw
pop
fidivl
sbb
aam
movsl
mov
mov
mov
cld
pushf
daa
push
jl
and
cwtl
popf
popf
ja
in
pusha
inc
jecxz
jg
push
sbb
mov
aam
sbbl
or
or
loope
pop
push
pop
jl
movsl
repnz
push
rolb
mov
add
pop
push
push
mov
jge
cld
pop
push
enter
idivl
push
js
cmp
mov
ljmp
test
rorl
cmpb
stos
or
aaa
fsubl
cld
lods
shll
mov
xor
sub
roll
gs
push
pop
mov
add
out
fldenv
push
add
gs
or
xchg
je
js
jg
adc
dec
pop
bnd
xchg
and
jnp
in
dec
sbbl
js
jo
push
lods
add
pop
pop
adc
addr16
icebp
push
jae
sbb
add
mov
add
cli
es
pushf
jl
xchg
fs
icebp
sbb
arpl
cmp
int
add
lcall
sahf
xor
xlat
pop
cmc
fldl
lods
or
jecxz
inc
lret
and
cmp
push
cmpsl
stc
adc
fbld
sub
sbb
jne
mov
and
movsb
dec
adc
repz
xor
mov
rolb
mov
popa
pop
scas
out
xchg
fs
into
sbb
cmp
sub
xchg
aad
in
pop
add
adc
enter
packuswb
pop
pushf
xchg
mov
push
adc
cmp
pushf
cmp
inc
arpl
xor
loop
xchg
movsb
inc
hlt
inc
fmul
int3
pop
xor
movsl
or
cltd
dec
test
xor
and
sbb
sbb
inc
xchg
adc
faddl
mov
sbbl
xchg
and
inc
out
mov
push
jns
add
mov
out
orl
push
sbb
inc
and
push
xchg
sbb
repnz
loopne
insb
inc
aaa
sub
std
cmp
test
movsb
mov
or
jecxz
mov
outsl
jg
daa
jns
pop
sub
fwait
mov
shlb
or
scas
sub
dec
enter
adc
jne
lds
int
ljmp
in
mov
out
and
cli
mov
sbb
mov
int3
rcrl
or
jbe
cwtl
jo
adc
pop
mov
jmp
jmp
fidivrl
sbb
push
push
leave
mov
jnp
popa
mov
jmp
xchg
sbb
inc
and
pop
in
push
dec
cmpsb
test
push
and
xlat
cmp
pushw
cmpsl
mov
insl
push
xchg
mov
or
xchg
cmp
mov
sub
je
clc
push
cmp
mov
sti
inc
mov
sahf
xlat
rcrb
out
outsb
pop
pushf
xor
mov
shr
push
jmp
mov
movsb
int
xor
or
out
mov
adc
clc
fcmovnu
scas
fwait
jae,pn
cmpsl
adc
sub
inc
fnstsw
sti
adc
decl
decl
decl
incl
lret
add
add
inc
incb
cmp
ds
mov
push
pushf
adc
adc
cld
sub
in
xchg
ljmp
leave
mov
popf
outsb
xchg
and
out
popa
cmp
ficomps
ja
push
leave
repz
ret
mov
insl
insl
xor
mov
add
mov
push
cmpsl
cmp
mov
and
loop
cmp
loopne
dec
inc
dec
mov
daa
push
cltd
iret
test
push
test
psubusb
roll
aam
or
enter
insb
mov
add
aaa
xor
cmp
pop
add
lret
ss
xchg
shlb
mov
adc
add
test
mov
les
cltd
xchg
dec
cmp
fsub
mov
adc
inc
std
test
aam
mov
xchg
cli
enter
lock
lds
lds
push
mov
insb
dec
xchg
mov
addr16
pusha
and
adc
mov
stos
pop
scas
cwtl
pop
test
jmp
orl
pop
nop
imul
fsubrs
inc
mov
in
xchg
push
mov
in
mov
mov
xchg
clc
dec
inc
mov
out
imul
adc
movsl
inc
ret
inc
ret
jno
shlb
xchg
sbb
sti
mov
fidivrl
push
mov
cltd
fdiv
push
movsb
cmp
mulb
and
mov
push
jae
adc
imul
test
mov
jge
pop
add
pop
and
test
or
bts
push
add
in
lret
pop
ja
or
ret
mov
cmp
outsl
fcom
jge
push
push
xor
mov
sub
push
test
dec
or
popa
jbe
xor
ja
popf
into
or
ja
add
mov
push
add
sub
repz
imul
lods
push
inc
rclb
xor
dec
gs
aaa
pop
out
push
mov
mov
sbb
in
mov
lods
or
xor
push
or
inc
or
or
inc
mov
or
or
mov
mov
jl
dec
pcmpeqb
repz
repz
and
stos
movsl
sarl
adc
imul
adc
mov
adc
jge
sbb
lds
ja
sbb
dec
push
mov
rcrb
leave
cld
sar
sarl
mov
mov
test
cmp
xchg
nop
ret
mov
outsl
ret
push
or
test
imul
xchg
xor
inc
and
inc
rcll
and
pop
mov
cld
test
in
mov
loop
and
adc
ja
xchg
lea
inc
jmp
push
shr
hlt
cmp
jmp
inc
xor
adc
sbb
xor
jns
dec
jmp
inc
scas
push
xchg
inc
add
add
gs
stos
jle
cltd
or
rol
sub
mov
xor
add
sub
cmc
pop
xor
fs
clc
xchg
adc
xchg
ja
add
inc
hlt
cwtl
das
fadd
mov
out
inc
cmp
push
jle
fidivrs
mov
mov
aaa
sub
cmp
xchg
sti
icebp
adc
imul
lds
jo
mov
add
or
mov
sbb
xor
lret
mov
cmpsb
xor
jmp
jge
jmp
cmp
mov
js
jne
mov
stos
adc
adc
ds
cwtl
push
ljmp
and
cmp
das
lcall
mov
sbb
push
sbb
push
loop
aaa
pop
cli
mov
sarl
js
push
push
out
push
out
out
sbbl
xchg
pop
xor
lret
jmp
popf
mov
inc
fisttpl
leave
sti
or
loop
dec
jbe
fwait
movsb
loope
je
ds
sarl
out
sub
hlt
sti
fsubrs
push
or
push
inc
adc
cmpsl
ret
jecxz
fadds
test
ja
repnz
jns
cmc
pushf
lret
jg
in
insl
mov
out
add
pop
lret
xchg
repz
xor
mov
pop
inc
in
ljmp
fisttpll
jge,pn
jg
mov
xchg
jbe
fldcw
mov
outsb
jo
in
cmp
das
sub
in
cmp
inc
mov
jns
andb
push
sbb
push
jmp
push
inc
sti
data16
pop
sti
sbb
sub
adc
mov
dec
outsl
gs
lcall
imul
shlb
jo
push
push
in
cmp
fdivp
jnp
jecxz
das
mov
dec
adc
in
negl
fdivrp
imul
scas
into
ss
mov
out
mov
pop
dec
jno
cmc
addr16
out
add
and
aas
sbb
push
pop
push
test
in
adc
repnz
mov
or
rorb
pop
push
leave
pop
cmp
xor
mov
out
scas
pop
pop
inc
lds
add
and
add
xor
xor
adc
addr16
aaa
pop
pop
or
dec
dec
aad
movsl
icebp
scas
dec
push
adcl
lods
pop
enter
dec
lods
ljmp
add
pop
xchg
lahf
pop
mov
add
shll
mov
jp
lea
ret
push
stos
push
mov
inc
jbe
fidivl
mov
cmp
repnz
insl
idiv
add
mov
add
dec
xchg
push
ds
push
rorb
jmp
xchg
call
xor
je
outsb
cli
push
cmp
mov
xchg
clc
pushf
and
push
push
xor
aaa
xor
addr16
add
cmp
ror
into
adcl
push
std
in
minps
pop
mov
mov
jl
int3
lret
dec
das
mov
rcrb
dec
adc
test
call
mov
jo
fistps
jmp
mov
adc
or
push
add
push
mov
data16
loope
ret
dec
sbb
push
stc
imul
mov
bound
push
mov
filds
sti
mov
lcall
xor
xor
xchg
jecxz
mov
aaa
or
sti
pop
adc
fcmove
addl
out
push
xor
aad
test
rcll
lret
sbb
cmp
mov
daa
inc
insl
dec
sbbl
sbb
scas
test
out
fs
bound
fs
out
fiaddl
inc
sbb
jo
aad
inc
andl
xchg
jo
mov
mov
mov
mov
mov
call
mov
or
mov
or
push
push
push
push
call
mov
cmp
jne
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
xor
jmp
inc
fwait
pop
dec
sbb
fwait
lds
xchg
js
xchg
adc
adc
and
sbb
push
xchg
outsb
sbb
fnstcw
ret
xchg
inc
movsl
mov
inc
pusha
sub
xchg
rclb
dec
std
xor
dec
into
cli
and
cmpsb
push
scas
mov
out
cltd
cld
cs
sbb
cmp
and
outsb
mov
outsl
or
in
imul
into
mov
xor
xor
in
jo
jae
jg
ret
jb
sahf
inc
xchg
std
out
xchg
sti
in
push
cmpl
out
es
mov
lods
or
xchg
pop
xchg
pop
movsb
js
cmp
scas
dec
xor
xchg
sbb
push
hlt
jb
imul
pop
xchg
or
push
roll
add
ret
lods
cmp
mov
jbe
xor
sbb
scas
and
push
data16
aaa
mov
or
cwtl
mov
add
clc
ret
sub
popf
dec
repz
pusha
mov
mov
lret
cmpsb
pop
outsb
std
cmc
pop
aad
jp
or
add
testb
push
xchg
popl
jecxz
mov
out
outsl
into
frstor
stc
and
shll
mov
shlb
and
or
int
adc
int
cmpsl
pop
rorl
inc
insl
inc
jl
mov
leave
aad
jae
mov
xlat
mov
filds
sarb
lret
mov
fidivl
std
ret
sub
and
std
jecxz
cmp
dec
fsubrl
andl
jns
pusha
xchg
sbb
push
adc
inc
shll
adc
inc
repz
sub
lret
mov
in
jbe
scas
mov
fbld
popf
and
mov
test
push
and
jecxz
push
pop
mov
push
xor
dec
ret
js
inc
lods
add
cmp
jo
push
cld
dec
aad
or
out
fsubrl
push
filds
leave
imul
sahf
out
stos
sub
and
pushf
pop
test
mov
mov
xchg
jle
icebp
inc
add
inc
cli
jnp
push
test
jo
in
bound
xor
lcall
dec
inc
popf
push
mov
sbb
and
add
cmpsb
jle
repz
aad
bound
mov
fistps
or
xor
xor
cmove
xor
insb
stos
sahf
jge
mov
aam
adc
decl
leave
mov
mov
into
push
fdivl
rcr
jp
es
mov
rclb
out
sbb
mov
jmp
fisttpl
shlb
add
xchg
lock
stos
outsb
xlat
mov
push
imul
fs
loopne
mov
push
stc
ljmp
test
pop
sub
mov
cmp
sbb
mov
or
data16
movsl
sub
ds
icebp
ret
js
lods
mov
movsl
inc
cmpsl
iret
push
lret
sub
add
mov
clc
xchg
mov
adc
adc
mov
out
es
popf
repz
cmpsl
lods
in
ret
rcrb
inc
fstpt
inc
push
jo
fdivrs
push
pusha
jp
mov
repnz
in
arpl
pusha
std
xor
leave
out
shlb
sub
daa
jns
mov
inc
jne
jne
repnz
jmp
sahf
pop
pop
adc
lahf
sbb
mov
stos
adc
adc
xor
out
leave
iret
and
fnstsw
repz
push
mov
mov
xor
out
dec
pop
push
xor
mov
push
lret
lcall
pop
out
mov
mov
jns
insb
out
mov
cmc
pop
push
and
push
jbe
aas
shrb
mov
inc
jnp
and
jmp
lods
fstp
mov
insl
in
inc
mov
jns
pop
inc
ds
sub
jo
ror
cmpsl
xchg
mov
out
mov
mov
call
and
or
push
jg
xchg
and
and
stos
test
xchg
cld
scas
out
cmp
sub
div
mov
es
push
xchg
xchg
lret
ret
in
repnz
or
pop
imul
scas
daa
add
mov
sub
mov
mov
ret
nop
mov
bound
ficompl
pop
adc
xor
cltd
jle
add
leave
clc
and
mov
add
push
ja
scas
sbb
jb
cli
popa
ret
cmpsl
push
shll
pop
stos
cltd
or
std
test
pop
xchg
sti
gs
mov
icebp
xor
out
fstps
movsl
bound
sar
sbb
dec
mov
add
cmc
icebp
testl
mov
mov
lcall
add
jg
push
push
pop
xchg
call
insb
xchg
mov
add
and
dec
xchg
jp
adc
sbb
popf
scas
int
fadd
inc
cwtl
fisubs
sub
and
mov
iret
or
sbb
aad
lock
aaa
js
pop
popf
jp
jo
and
lcall
jecxz
push
jge
test
es
in
fsubrs
and
imul
inc
idivb
sbb
cs
lods
or
mov
paddd
aam
mov
push
mov
mov
movsl
fldcw
sub
pop
gs
dec
mov
sahf
inc
cmp
inc
in
push
pop
jge
pop
inc
xlat
xchg
mov
sbb
inc
push
iret
scas
adc
cmp
addr16
xor
iret
dec
mov
jge
or
test
ja
sub
mov
jae
dec
mov
in
mov
sbb
mov
in
mov
incl
mov
xor
fwait
mov
paddusb
xor
in
nop
subb
xchg
sbb
xchg
mov
push
dec
flds
arpl
add
xor
mov
add
inc
push
and
xor
in
js
mov
sbb
pop
cli
scas
inc
lods
dec
mov
fsts
lock
sub
rol
dec
cmc
outsl
mov
pop
add
mov
xor
mov
add
jbe
jbe
pop
xchg
shrb
mov
arpl
scas
out
cli
in
mov
out
arpl
mov
insl
push
aam
mov
cltd
or
gs
lods
cmpsb
mov
adc
shll
lret
and
sub
push
jae
push
xchg
add
mov
roll
push
pop
lret
fbld
lods
int
dec
xchg
inc
iret
pcmpgtw
je
mov
std
testb
clc
int
add
pop
lds
add
xor
lods
fcom
xchg
lahf
daa
inc
jbe
mov
imul
mov
adc
stos
fisubrl
in
xchg
test
int
decl
lea
test
incl
lret
fmuls
fdivr
decl
pop
dec
add
or
mov
or
push
push
push
push
call
mov
jmp
jmp
lea
mov
mov
movl
mov
jmp
mov
sbb
lahf
cmp
xor
stos
adc
adc
cli
cwtl
sbb
sub
and
fcomps
xchg
pop
cwtd
addr16
lahf
mov
inc
sbb
or
adc
addr16
xchg
pop
xor
cli
jl
sub
in
push
pop
clc
pushf
and
sub
shll
test
xor
pop
into
outsb
inc
popf
leave
jae
lds
mov
rolb
push
stc
fwait
adc
add
int3
cltd
push
rclb
scas
insb
mov
lods
sbb
cmpsl
stc
jae
sub
pop
fildll
outsl
mov
push
sbb
jmp
lea
popa
loope
jbe
xchg
in
pop
inc
ret
lock
jbe
mov
call
negl
lea
aam
aas
enter
incb
mov
push
mov
frstor
je
mov
lcall
aam
mov
dec
or
movsl
cmp
ror
int3
out
pushf
jbe
shll
push
shll
popa
or
orl
mov
and
das
push
in
push
les
popf
and
scas
rorl
push
fmul
ds
sub
pop
xchg
je
mov
stos
nop
jge
jmp
out
orl
fiadds
insb
in
push
lock
pop
imul
sbb
add
decl
and
sbb
xchg
mov
stos
fisubrs
dec
lret
pop
stos
sahf
shrb
loop
pop
loop
into
xchg
inc
out
popf
ret
push
mull
repz
mov
mov
fsubrs
xchg
mov
mov
jne
lcall
jae
int3
xor
repnz
stos
jl
mov
adc
add
jae
popf
push
push
in
xorl
les
dec
and
das
mov
sub
mov
mov
pop
dec
xor
arpl
sub
and
xchg
fsubrl
add
insb
out
inc
mov
in
rcrl
jmp
sub
shll
in
jl
insb
jae
mov
shr
xchg
out
out
add
xchg
dec
out
pop
sub
jb
fmull
mov
mov
xor
mov
sbb
cmp
ja
mov
pusha
jnp
push
jno
jge
or
xor
sub
fwait
sarb
push
xchg
in
sub
adc
xchg
mov
mov
ss
mov
inc
sub
adc
fidivrs
dec
fdivrs
and
mov
testl
das
adc
adc
xor
cmp
dec
mov
lcall
ror
fstpt
aad
pop
lea
out
js
mov
mov
test
sti
inc
xchg
inc
push
arpl
outsl
mov
pop
adc
cmc
sbb
ret
or
xchg
and
ss
popf
jge
push
and
ja
loop
mov
fbstp
mov
notb
lds
nop
test
bound
sub
sbb
lahf
lahf
dec
aas
jle
outsl
mov
scas
enter
mov
into
and
xchg
ret
fbstp
test
in
lea
push
fcoml
ds
pop
bswap
mov
mov
repnz
jnp
adc
jno
stc
aas
ja
cmp
mov
adcb
test
pop
cmpsl
xchg
cmc
ret
push
cmc
dec
ljmp
and
stos
js
push
imul
aas
sub
lock
lds
and
pushf
ds
fs
jno
shll
call
incl
mov
rorl
mov
mov
jmp
stos
cwtl
dec
pop
ds
lcall
outsb
xor
mov
adc
adc
subl
xchg
pop
push
cli
mov
insb
cmp
mov
cs
movsl
xor
sub
dec
push
cmp
jmp
bound
push
cmp
mov
sahf
imul
cmp
or
int3
insb
gs
stc
mov
sbb
adc
sysret
test
mov
and
push
inc
xorl
inc
inc
add
cmpsl
push
fisubs
incl
fists
mov
inc
sub
repnz
mov
push
mov
jbe
xchg
ficomps
inc
std
push
or
loope
xchg
test
mov
sbb
mov
daa
pop
popf
ds
scas
scas
and
cmpsb
jg
lds
pop
or
mov
mov
sub
aas
add
frstor
aad
ret
or
xor
enter
lahf
out
jmp
lret
in
inc
adc
inc
rcl
or
mov
adc
mov
rclb
mov
lock
stos
pusha
jg
mov
popa
cmpsb
dec
rcrl
pop
popa
enter
lods
mov
lret
adc
sbb
call
mov
xor
push
in
fistpl
rcll
loope
mov
jbe
xchg
cli
push
out
mov
rorl
cs
adc
test
scas
fiaddl
fistl
scas
mov
decb
lods
jo
subl
push
mov
arpl
sarb
out
or
inc
das
pushf
loop
lea
jp
fiaddl
mov
pop
jae
push
xchg
out
sbb
test
mov
out
andb
cmp
sub
mov
xor
sub
test
rcl
rcll
adc
sbb
lods
in
orb
loop
push
inc
ss
iret
pop
inc
stos
xor
pop
inc
jge
lods
out
pop
ret
out
les
outsl
add
push
push
dec
int
addl
ficoml
mov
mov
mov
adc
or
pop
mov
not
clc
xor
inc
into
push
leave
pop
lcall
cltd
and
xor
or
xchg
jno
icebp
lret
fcomip
push
xchg
bound
outsl
jns
iret
xor
loop
popf
dec
xor
aas
fbstp
sub
fs
push
or
pop
jne
call
insb
fwait
pushf
and
imulb
jmp
jmp
shrl
mov
daa
sti
sbb
cmpsl
test
mov
mov
ja
cs
pop
fsubp
pop
and
mov
pop
scas
pop
push
in
sub
sti
mov
push
jb
call
pop
pop
or
clc
pop
es
sti
test
sbb
or
pop
push
rcl
out
call
ds
loope
divl
fisubl
inc
addb
jmp
or
addr16
pop
sti
push
push
push
imul
enter
fcmovu
inc
push
cmp
aas
lds
popf
push
pop
mov
in
loopne
inc
sub
dec
jnp
jecxz
cli
jb
stos
sub
push
negb
pushf
test
mov
mov
sub
fsincos
popf
cmp
dec
imul
testl
hlt
aaa
pop
push
mov
decl
jmp
mov
clc
mov
sub
jle
movsl
mov
push
jo
adc
and
loop
imul
and
cmp
xchg
pushf
cmpsl
or
mul
xchg
icebp
mov
inc
jne
out
gs
mov
sub
sbb
push
jl
or
lcall
dec
call
mov
insl
pop
sub
lcall
mov
inc
pop
mov
and
aad
xchg
lahf
ret
daa
xchg
fs
mov
push
sti
mov
mov
lods
movsb
outsl
leave
push
test
add
stos
sub
test
add
lret
ret
notb
addb
test
or
sub
and
not
jp
mov
das
xchg
lods
inc
or
test
push
sbb
cmpsb
jnp
or
cmp
add
mov
and
jge
popf
mov
repz
mov
in
sahf
push
scas
repz
popf
mov
ret
scas
dec
jbe
loope
adc
dec
nop
or
xlat
xor
test
sbb
loop
sbb
setp
aas
add
ret
in
mov
out
stc
pop
in
loopne
push
call
clc
dec
in
or
push
lret
movsb
out
xor
sbb
call
imul
mov
mov
mov
lahf
pop
stc
mov
adc
adc
lcall
push
inc
mov
jae
sbb
paddsb
int3
shl
popa
adcl
sbb
faddp
movsl
push
and
jbe
scas
mov
push
es
rcrl
pop
sti
in
pop
lret
pop
mov
mov
xchg
aas
inc
sbb
clc
pop
shll
cmp
lds
add
or
xchg
jo
pop
ljmp
arpl
lock
push
fsubrl
mov
cwtl
js
inc
jo
xor
or
push
cli
pushf
es
pop
fnstcw
and
test
dec
ds
inc
push
test
std
dec
cmp
sbb
jbe
push
out
adc
js
je
not
dec
pop
jbe
test
jp
xchg
cmpl
call
mov
das
fucomi
dec
int
xor
sub
cmpsl
fcomip
cmpsl
cmp
int3
add
mov
cmp
pushf
xorl
inc
adc
and
xchg
loopne
into
andb
out
inc
jb
pop
push
sbb
stc
dec
add
mov
xchg
pop
pop
xor
sbb
jo
js
mov
cs
rcll
clc
mov
cmp
dec
popa
sbb
dec
cmpsb
inc
mov
pop
lcall
push
das
outsl
cmp
test
xor
enter
scas
add
xchg
sbb
or
cmp
pop
lcall
dec
xchg
pop
xor
mov
dec
xor
in
push
cmpsl
mov
je
add
jp
into
jbe
xchg
fistpl
test
mov
adc
ds
mov
dec
jmp
lret
icebp
cmc
and
cmpsl
in
sarl
xchg
dec
subl
inc
adc
pop
mov
pop
mov
std
shll
jne
lret
fisttpll
iret
mov
mov
mov
push
out
pop
bound
sbb
popa
jle
jns
mov
ffreep
out
pop
jecxz
in
push
jp
sub
pop
and
int3
fiadds
add
leave
imul
dec
pop
dec
xchg
les
cmp
movsb
mov
push
scas
mov
xchg
mov
pushl
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
jmp
icebp
sbbb
push
cmpsb
icebp
stos
shl
mov
stos
adc
adc
jge
ret
push
ds
stc
call
push
pushf
leave
shr
cltd
out
in
movsb
std
aaa
xor
sub
or
in
mov
mov
mov
mov
cmpsl
dec
add
out
xchg
xchg
popf
int
in
in
pop
mov
pusha
mov
pop
bound
mov
sbb
jno
fs
inc
mov
call
and
cmp
ja
bound
fistps
out
cmpsl
faddp
and
jne
arpl
inc
xlat
adcl
cmpsl
nop
and
jecxz
imull
rorb
sub
lcall
daa
jmp
and
outsl
mov
jecxz
mov
lods
push
pop
scas
cwtl
sub
sbbb
mov
mov
dec
lock
cmp
js
sub
sbb
arpl
jl
xorl
mov
cmp
ja
fdivl
stos
and
jge
movsl
cmp
insb
pop
mov
adc
xor
xchg
das
xchg
or
xchg
arpl
xor
sti
xorb
push
or
std
mov
mov
popf
aam
aad
jle
and
fwait
hlt
stos
jb
or
add
sbb
fists
mov
cmp
sub
mov
jo
scas
push
adc
cmovbe
dec
fcomps
mov
in
notl
mov
push
pop
sub
xlat
cwtl
cmpsb
push
xor
mov
jns
lret
xchg
mov
dec
in
sbb
mov
mov
mov
pop
ds
sahf
sub
push
aas
and
xlat
xchg
xor
nop
pop
jp
cltd
inc
repz
dec
jge
test
daa
std
arpl
rcrb
ret
cs
pop
push
mov
xchg
dec
cmp
mov
xor
hlt
pusha
movsb
cvttps2pi
scas
daa
jae
imul
push
lcall
adc
rcll
or
push
ret
loopne
cmpsb
int3
data16
pop
pop
mov
call
xchg
xchg
add
add
push
pop
idivb
mov
outsl
out
jp
repnz
popa
xchg
xor
sbb
les
pop
add
pop
fs
adc
and
ljmp
mov
lret
xor
inc
shlb
inc
negl
out
adc
push
cmp
xchg
mov
push
lret
or
and
adc
add
subb
test
test
stos
call
aaa
mov
adc
xchg
je
add
out
and
jge
dec
jae
cmp
push
mov
inc
push
sbb
ret
cmpb
dec
mov
jge
push
and
mov
mov
sbb
cmp
inc
mov
push
inc
pop
adc
scas
jecxz
lods
lcall
mov
filds
and
and
adc
test
repnz
xor
xor
pop
jg
aad
lret
sub
mulb
jl
outsl
and
aam
xchg
add
out
mov
mov
cwtl
je
inc
dec
popf
push
lock
cmp
xchg
insl
adc
neg
adc
sub
jo
push
cmc
in
out
repz
jae
fsubrs
andb
movsl
mov
push
pop
enter
aam
cltd
and
cmp
leave
pop
add
lcall
mov
mov
call
mov
or
mov
or
push
push
push
push
call
mov
cmp
je
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
imul
add
mov
mov
mov
jmp
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
jmp
xor
xchg
aas
sbb
sub
jb
add
jg
adc
adc
add
out
loope
push
xchg
or
jo
dec
sbb
sbb
loope
or
mov
jge
mov
sub
out
hlt
cld
out
and
sbb
test
xchg
dec
mov
xor
jns
cmpsl
and
inc
add
mov
aaa
mov
outsl
insl
sbb
pop
stos
add
add
out
test
cmc
cmp
sbb
es
cmpsb
adc
push
sub
test
xor
xchg
xchg
andl
mov
mov
dec
pop
xchg
enter
pop
cmp
sbb
pop
jno
push
or
mov
pop
push
repz
inc
inc
push
aas
cmpsl
mov
inc
test
add
cwtl
jne
cs
sub
imul
add
test
sub
mov
mov
roll
pop
test
lcall
ds
sbb
dec
aaa
dec
inc
add
mov
mov
arpl
mov
xchg
pop
add
cmpsb
mov
jne
push
lods
cld
push
xor
push
cmp
and
ret
jl
js
mov
sub
out
in
lcallw
loope
mov
push
push
mov
in
into
sbb
mov
or
loope
imul
inc
out
push
lock
inc
es
mov
push
into
ret
jb
daa
shrl
lods
subl
dec
xor
mov
jl
cmp
daa
sbb
ljmp
sahf
dec
mov
pop
lds
pop
call
and
je
dec
popl
outsl
jle
cmc
cld
mov
into
or
adc
dec
loopne
test
xchg
imul
loop
adcl
jecxz
fdivrl
inc
push
pop
mov
cmp
enter
xchg
add
pop
mov
xchg
idivl
test
xor
bnd
push
xor
or
dec
clc
enter
and
js
jecxz
mov
sarl
out
push
sbb
imul
add
xor
stos
pushf
push
xchg
cli
or
cmp
xchg
insb
and
les
loop
imul
je
jle
push
insb
bound
dec
int3
push
les
jne
pop
test
out
test
aaa
test
jnp
mov
outsb
or
in
mov
mov
hlt
xor
xor
test
les
cmpsb
push
push
inc
inc
ret
aad
es
stos
mov
or
movsl
ds
mov
xorb
mov
cltd
fs
mov
hlt
and
dec
lcall
das
sahf
jne
pusha
addr16
inc
pop
negl
pop
mov
or
cs
cmc
outsl
cmp
inc
xor
jg
jno
or
insb
push
cmp
rcll
push
je
jbe
sbb
testl
mov
popa
jae
add
jnp
cmp
aam
push
cmp
cmp
push
lret
gs
mov
mov
push
into
movsl
mov
add
and
mov
outsl
push
js
pop
cmc
push
mov
pop
inc
pop
pop
iret
jbe
xchg
jp
mov
scas
andb
xchg
loopne
push
loopne
insl
ficoml
or
test
pushl
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
mov
mov
call
or
mov
or
push
push
push
push
call
mov
jmp
mov
mov
xor
xor
mov
call
jmp
adc
and
sbb
arpl
popl
jl
sbb
adc
mov
das
not
test
xchg
cmp
call
jg
xchg
jbe
push
and
mov
or
push
push
add
mov
sub
push
cmp
iret
call
inc
xor
shrb
sub
and
hlt
fdivl
sbb
aaa
sub
das
fimuls
jnp
cmp
jecxz
and
jnp
jo
pop
mov
jae
mov
xor
pop
push
or
jns
mov
jmp
pop
jge
mov
add
adc
lds
pop
inc
pop
lods
adc
adc
daa
ret
adc
aam
dec
sbb
xor
lret
pushf
pop
scas
cli
mov
push
push
push
out
test
mov
inc
sub
pop
dec
fptan
incb
call
mov
jecxz
adc
hlt
testb
aas
mov
and
cwtl
sbb
iret
adc
jo
jge
xchg
jp
jp
mov
mov
mov
call
in
cmp
enter
fadd
js
rolb
stc
push
mov
xlat
movsb
and
xor
or
into
lret
fcoms
ja
adc
sbb
pop
lods
jns
inc
clc
mov
insl
inc
mov
pushf
sub
testb
jl
jb
test
mov
fistpll
adc
push
loopne
or
xor
mov
ss
hlt
push
dec
inc
test
adc
fcmovnb
js
inc
pop
mov
dec
adc
iret
sub
imul
fsubrl
mov
out
dec
xchg
inc
xchg
sbb
shrb
mov
out
pop
in
bound
sbb
inc
push
lahf
jo
scas
cmp
xor
pop
fistpll
jns
push
pop
imul
clc
cmp
ja
scas
xor
adcb
xchg
fnstsw
jno
or
push
push
dec
sub
pop
dec
loop
stc
lods
lahf
push
jge
push
push
sahf
sbb
lock
mov
js
fisubs
xor
inc
or
int3
loop
imul
aas
or
inc
sub
fs
das
lock
jg
sbb
push
lcall
and
cld
imul
clc
je
or
jg
xchg
inc
dec
movsb
mov
leave
push
into
gs
jnp
cmc
insb
ret
loopne
test
ficoml
add
cld
cmp
push
outsl
gs
xchg
pop
cmp
mov
jb
mov
or
xorb
xchg
jmp
insl
cld
mov
push
mov
scas
fadd
out
inc
or
dec
clc
or
sbb
dec
or
sub
push
xor
inc
push
mov
adc
shlb
pop
mov
inc
cli
jp
sarb
adc
mov
xor
clc
cli
push
or
shrl
mov
sbb
and
mov
adc
sub
icebp
gs
notb
repz
setle
jmp
mov
movsb
fmul
imul
fs
je
mov
dec
cmc
cmc
out
ds
jg
and
je
ljmp
jbe
cli
mov
popf
out
out
gs
sbb
pop
mov
xor
inc
fsubr
mov
or
sbb
loope
push
decb
int
mov
ds
cmp
mov
mov
xor
xor
mov
call
or
or
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
mov
xor
div
mov
and
add
mov
lea
xor
jmp
jg
dec
dec
sub
loop
mov
mov
adc
adc
das
loop
dec
add
call
or
hlt
dec
mov
push
jae
sbb
sbb
sbb
addr16
cwtl
and
in
adc
shrl
pushf
mov
iret
scas
ret
inc
ds
ja
sub
inc
inc
jne
in
pop
cmpsl
mov
out
push
popa
sbb
sbb
inc
fisubrl
repz
jmp
loopne
bound
cmp
scas
jmp
sbb
outsl
int3
ljmp
movsb
mov
pop
movsl
add
lret
push
push
lods
flds
ljmp
mov
xor
push
cli
pop
or
lods
fnsave
push
leave
lahf
lret
rcrb
sub
jp
insb
lock
cli
iret
and
lock
add
shl
sub
push
outsb
jo
inc
into
mulb
xor
sbb
gs
rcll
popf
mov
adc
xchg
ret
jnp
pop
jg
dec
mov
push
fcmovnu
je
les
dec
dec
mov
cmpsb
pop
repz
shl
pop
repz
hlt
mov
push
dec
dec
and
or
adc
test
push
sahf
inc
scas
mov
xchg
xchg
jo
test
sti
add
push
dec
repnz
test
xor
push
hlt
add
sbb
mov
out
jno
out
or
gs
out
in
pop
popl
push
js
adc
push
xchg
mov
or
orb
test
lcall
add
iret
std
cwtl
fcompl
push
push
cmp
cmp
mov
hlt
clc
cmc
sbb
out
cmp
mov
push
mov
aaa
in
idivb
mov
sbb
inc
xchg
and
push
leave
xchg
sbb
cmp
cmp
outsl
ja
add
add
test
stos
in
cmp
pop
jnp
addl
jp
outsl
xlat
daa
dec
or
out
sub
mov
and
seta
jnp
adc
or
xlat
shlb
jmp
loope
in
push
inc
mov
mov
mov
repnz
dec
rcl
mov
arpl
in
cmp
xlat
ret
cltd
mov
decb
pop
into
fwait
lock
xlat
pop
adc
stc
incb
scas
mov
fcmovne
outsb
and
mov
shll
jbe
xchg
xchg
lahf
xchg
icebp
pusha
jg
std
repnz
out
lret
adcl
push
push
xor
js
lea
lock
cld
adc
dec
push
lods
mov
sti
mov
shl
popf
cli
add
lods
aaa
outsl
data16
mov
jbe
cmpsl
enter
rorl
mov
inc
fdivs
sub
sti
frstor
scas
lods
or
xor
sub
data16
xor
daa
sti
scas
repnz
aas
nop
cmc
jns
jno
shlb
push
cs
in
addr16
sub
mov
mov
push
adc
pop
scas
out
dec
rorl
mov
rorl
loopne
inc
fsts
dec
sti
inc
xchg
mov
xor
and
aad
rcrb
jo
mov
stos
adc
xor
ss
jg
pop
pop
bound
cld
pop
iret
movl
outsb
arpl
add
mov
sbb
out
push
popl
test
test
inc
inc
hlt
push
pop
add
movl
movl
movl
movl
movl
movl
jmp
sbb
or
pusha
cmp
push
aaa
xchg
js
dec
adc
adc
and
inc
test
hlt
xor
ffreep
iret
inc
lock
out
jne
mov
or
or
or
sahf
mov
pop
ds
cmp
cld
sbb
mov
pop
dec
jne
imul
push
sbb
push
add
outsb
cmc
enter
inc
sbb
insb
inc
and
insl
push
sbb
and
imul
pop
push
stc
les
xchg
and
into
test
inc
jl
xchg
cltd
jne
ret
lods
mov
test
sub
andl
shlb
mov
aam
xchg
adc
popf
or
out
shrb
sub
inc
fcoml
data16
cmpsl
js
fisttps
pop
jle
fcmovnb
stc
and
ret
sar
jnp
subl
xchg
das
jmp
sub
dec
add
test
cmc
leave
shrl
mov
jge
cld
ja
or
adcb
int
jl
dec
inc
xchg
sub
lds
aas
shll
outsb
add
out
clc
xor
leave
hlt
scas
or
ret
sub
pop
int3
arpl
mov
aam
cmp
sarb
outsb
mov
sbb
std
cwtl
add
mov
fisubrs
mov
pop
clc
sahf
fldt
cli
add
dec
adc
fwait
mov
out
fidivrl
fdivrs
xlat
aaa
mov
iret
pop
and
fisttpl
mov
test
and
pop
or
out
clc
or
stos
addr16
aam
dec
dec
imul
out
out
add
add
pop
pop
pop
mov
out
mov
das
pop
rcrb
enter
test
cld
add
movsl
mov
or
aas
cmpsb
mov
or
mov
scas
dec
cs
mov
cmp
in
sbb
or
or
fldenv
mov
xlat
sahf
xchg
das
popa
jae
fildl
iret
lret
repz
push
enter
ret
or
inc
mov
adc
aad
mov
mov
mov
xchg
cwtl
cmpl
or
and
push
clc
sbb
repnz
test
pop
out
inc
adc
movsl
iret
outsl
add
inc
bound
add
rorl
pop
adc
repnz
cmp
add
push
pop
adc
jmp
fldcw
cmpsl
add
xchg
loopne
jl
sub
loop
push
push
mov
stos
rclb
mov
popa
popf
sar
push
inc
popa
ljmp
mov
fistl
inc
sub
stos
add
hlt
enter
mov
pop
rorb
push
mov
adc
lcall
mov
mov
cwtl
mov
sbb
fs
call
inc
and
mov
cld
add
scas
cmp
ucomiss
push
dec
pop
test
imull
xchg
mov
icebp
jne
or
or
or
cwtl
scas
not
xor
idivb
push
push
mov
mov
mov
les
in
xor
cmp
jmp
mov
sub
mov
pop
iret
aad
xchg
fstpt
jb
inc
repnz
adc
cltd
lea
cmpsl
push
lods
fidivrs
push
scas
mov
fnstcw
std
xchg
xor
in
lahf
pusha
jne
mov
jno
fistpl
jl
and
and
dec
and
stos
fdivl
add
inc
push
cmp
lea
movl
movl
movl
mov
mov
xor
div
add
mov
and
xor
add
mov
mov
sub
mov
or
mov
and
mov
xor
mov
mov
sub
mov
imul
xor
xor
mov
mov
add
add
mov
movl
movl
movl
movl
movl
movl
mov
xor
mov
imul
mov
lea
mov
and
and
xor
push
pop
div
imul
mov
and
mov
or
add
imul
mov
xor
xor
mov
mov
add
add
mov
movl
movl
movl
movl
movl
movl
mov
xor
jmp
test
sub
sbb
xchg
push
push
mov
mov
filds
stos
adc
adc
mov
sbb
xchg
mov
inc
aas
mov
xor
add
lods
pop
pop
xlat
test
or
sub
cmp
add
cmp
or
hlt
lock
bound
orl
mov
fisubrs
xchg
or
xor
dec
pop
push
or
xchg
adc
lea
stos
or
sbb
mov
add
adc
lret
nop
cmp
xchg
in
ljmp
sub
pop
fcmovnbe
mov
ret
or
je
dec
pop
imul
pushf
shl
push
mov
xchg
mov
sbb
mov
aad
sub
xor
popf
adc
clc
daa
jle
clc
and
imul
out
pusha
sbb
pop
es
jnp
out
cmp
push
sub
mov
ss
dec
mov
cmpsl
jno
outsb
iret
mov
shrl
jmp
push
xor
int
in
jg
cli
test
and
inc
inc
and
jle
adc
or
loopne
scas
cmp
pop
pop
pop
and
or
mov
sahf
test
add
hlt
ljmp
fcmovbe
scas
jo
jecxz
inc
cmpsb
call
push
dec
std
jo
out
xor
mov
into
inc
jge
out
out
in
mov
xchg
lea
aam
pusha
mov
adc
call
adc
out
movsb
adc
pop
push
xchg
sbb
jl
pop
mov
addr16
addb
repz
xchg
fcom
scas
push
popf
add
push
or
pop
in
mov
mov
movsb
mov
sub
inc
popa
jmp
add
nop
add
xchg
add
push
scas
stc
je
cmp
rclb
loop
push
daa
dec
aad
and
ljmp
add
xchg
popa
inc
mov
enter
sti
push
mov
lds
loope
xchg
mov
mov
and
insl
push
rcl
dec
hlt
cmc
lods
push
mov
fidivs
cmp
pusha
dec
cmc
push
sbb
mov
arpl
mov
sbb
test
jbe
and
ret
in
int
aad
fsubp
outsl
rcrb
mov
outsb
mov
inc
and
call
mov
test
push
jbe
pop
cli
das
dec
pop
scas
mov
and
iret
aas
inc
mov
pushf
leave
ficompl
outsb
mov
fs
in
pop
xor
inc
jmp
or
iret
shlb
aaa
jge
cmp
inc
cs
pop
lret
mov
repnz
and
adc
pop
push
pop
inc
je
mov
je
scas
and
jb
fmul
rcrw
idivl
add
aaa
cld
in
jmp
xor
dec
ret
rolb
loopne
pusha
mov
xchg
movsl
jp
cmp
ror
xor
rorl
sarl
mov
xor
fistpll
negl
lret
ret
jns
dec
mov
push
popa
xchg
sub
imul
loope
pop
or
rcrb
or
and
mov
out
xor
int3
ficoml
inc
mov
sub
add
fidivrl
mov
loopne
xor
xor
and
dec
add
ds
push
lds
or
xor
xchg
iret
add
jo
add
push
pop
div
mov
or
mov
xor
div
imul
mov
lea
mov
and
and
sub
xor
mov
xor
mov
and
and
or
mov
mov
add
lea
mov
andl
jmp
mov
inc
mov
mov
mov
cmp
je
mov
mov
mov
add
mov
mov
mov
mov
mov
movl
movl
movl
movl
lea
mov
mov
movzwl
xor
movzwl
sar
mov
movzwl
xor
movzwl
shl
or
movzwl
mov
mov
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
movzbl
push
lea
push
call
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
jmp
mov
pop
cmp
movsl
mov
cmpb
adc
adc
jle
loopne
xlat
imul
xchg
jae
inc
imul
and
fsubrs
faddp
inc
mov
out
push
jg
mov
xchg
xor
mov
jb
hlt
ret
in
dec
and
cmpsl
or
inc
in
bound
inc
sar
push
outsl
lret
subb
jmp
xor
cmp
mov
loopne
and
push
insl
dec
int3
or
jb
mov
ljmp
es
dec
inc
stos
fidivl
inc
rol
mov
xor
pop
insl
xor
sub
mov
arpl
rorl
mov
clc
or
scas
scas
cmc
sub
popa
and
call
push
fisubs
cmc
pop
lcall
xor
std
or
stc
xor
push
std
push
lds
jp
cmpb
mov
fdivrs
sarb
mov
icebp
push
xchg
mov
lds
sub
sub
rol
dec
pop
enter
out
inc
xor
push
inc
fisttpl
mov
lret
mov
es
or
out
scas
addr16
mov
lods
dec
rcrl
fdivrl
popf
imul
or
clc
mov
or
imul
ja
cmc
cwtl
jg
and
xchg
or
popa
icebp
arpl
and
lods
push
mov
dec
int
mov
dec
nop
int3
test
out
and
clc
shlb
hlt
dec
fldz
aam
cs
pop
pop
fidivrs
adc
shl
or
or
cmpb
cld
pop
mov
add
inc
dec
push
aam
cli
scas
pop
cwtl
je
push
and
inc
pop
or
enter
mov
loop
push
imul
mov
pop
push
je
inc
jl
push
push
adc
movsl
mov
xchg
add
inc
std
movsb
or
inc
rorb
sub
mov
mov
testl
xor
mov
je
movsb
sbb
or
and
jnp
loope
repnz
xchg
js
inc
repnz
and
lds
loope
mov
pop
gs
mov
cmp
mov
and
jbe
out
pop
arpl
enter
mov
sub
inc
aas
pop
in
leave
push
andb
psubsw
mov
in
sub
mov
mov
add
inc
mov
cld
pop
in
xchg
push
cld
out
clc
ljmp
adc
dec
pop
lret
outsb
jecxz
sbb
aad
push
mov
fs
sbb
dec
add
lea
inc
lods
pop
ja
sub
lods
and
ret
out
ret
add
dec
fiaddl
mov
lods
pop
jmp
ret
push
jne
or
xor
inc
sub
jecxz
fdivrl
nop
ljmp
or
xor
cs
mov
xor
jbe
pop
inc
add
loope
cmp
stos
mov
pop
sbb
es
or
dec
and
sti
mov
sbb
aad
in
cmc
inc
clc
dec
pop
adc
cmc
adc
push
pop
pop
push
push
fwait
dec
inc
xlat
or
and
iret
fcomip
push
aas
shll
rcl
push
push
sub
mov
lods
shlb
insl
arpl
pop
ja
cmp
add
push
xor
or
add
or
or
add
mov
mov
jmp
jbe
ja
cmp
aam
push
push
xchg
js
xor
adc
inc
and
mov
in
je
bswap
loopne
jg
xchg
mov
bound
in
test
pop
dec
popf
int
aad
je
sbb
push
ret
sbb
jno
xchg
fidivl
jmp
mov
push
cs
fdivl
and
scas
int3
mov
lods
jne
aaa
pushf
ret
call
ljmp
gs
add
rcr
mov
mov
sti
js
adc
stc
out
test
dec
int3
cmpsl
notb
inc
test
mov
ss
or
dec
xor
push
inc
test
push
jp
in
mov
add
lahf
inc
rolb
mov
sub
lock
xchg
sbb
enter
aas
movsb
inc
ja
sbb
hlt
aaa
loopne
notl
in
inc
cli
scas
jg
dec
adc
fiaddl
push
mov
mov
test
xlat
pop
push
jmp
and
mov
fcoms
cltd
lret
aaa
inc
mov
repz
xlat
xchg
mov
cmp
mov
push
popa
rorb
insb
mov
and
cmpsb
fistps
pop
ja
mov
xchg
pop
cld
mov
inc
push
mov
fs
dec
loop
ljmp
ret
mov
and
push
lea
mov
inc
test
pop
out
aad
add
andps
jmp
push
idivl
cmovae
mov
jge
jo
dec
daa
iret
leave
lahf
push
je
das
into
jecxz
sbbl
inc
push
inc
xor
sarl
mov
into
xchg
ss
cmpsl
mov
sub
add
push
xor
mov
mov
popl
pop
repz
jo
cmp
ficoml
icebp
repnz
in
lret
js
aas
or
cmc
out
jl
mov
jmp
rorb
cmpsb
lds
fstpl
fcomps
sbb
cmp
daa
inc
stos
mov
fwait
pop
jne
mov
sbb
test
lods
shl
mov
insl
jne
out
rclb
aas
dec
das
or
push
ret
inc
push
outsl
sub
mov
or
sub
push
call
jne
shrl
ret
inc
pop
icebp
mov
mov
ds
cmp
out
loopne
jno
in
adc
xor
mov
add
and
jo
sbb
out
dec
pop
fnsave
test
fs
adc
stos
lcall
xchg
xchg
push
mov
mov
push
out
or
pusha
and
jae
fwait
mov
rorl
cmpsl
cld
call
adc
xor
xchg
clc
scas
inc
or
sub
ret
lock
mov
stos
data16
pop
push
lds
pop
push
or
sbb
insl
sub
lret
test
xor
ja
idivl
mov
aam
pop
sbb
pop
cmp
fistpl
dec
pop
xlat
mov
adc
ficomps
mov
jns
scas
notl
lret
fdivrl
ds
std
xchg
movsl
sbb
jge
jno
ljmp
loop
xchg
mov
pop
enter
pop
scas
dec
shrl
sub
mov
call
imul
and
or
hlt
mov
mov
or
or
push
movsl
mov
push
xor
fldenv
cmp
je
mov
mov
movzwl
xor
movzwl
sar
mov
mov
movzwl
xor
movzwl
shl
jmp
jnp
add
xor
cwtl
lods
cmpsl
xor
adc
sbb
pop
pop
inc
dec
mov
or
push
mov
lret
and
pop
push
adc
push
dec
jns
ret
in
adc
hlt
pushf
loopne
mov
sahf
shlb
leave
inc
mov
mov
repnz
jno
in
shll
mov
sub
out
stc
xor
sbb
xchg
pop
mov
or
sbb
lret
pop
loopne
fisubl
dec
mov
mov
dec
push
mov
mov
pushf
pop
fcmovnbe
adc
rorb
int
jl
leave
mov
add
mov
inc
out
push
inc
enter
cmpsl
inc
and
dec
inc
js
pop
inc
jbe
mov
int
mov
push
dec
push
repz
mov
xchg
or
add
cmpsl
cmp
jo
mov
jmp
and
mov
xor
and
mov
les
dec
addr16
lods
push
ljmp
sti
adc
enter
es
jnp,pt
xor
aaa
cwtl
xor
sbb
stos
xchg
call
jecxz
stos
enter
pushf
xchg
push
adc
into
fstpt
and
aaa
repnz
rcrb
pop
sub
jno
outsl
int3
cmc
mov
xchg
loope
jmp
or
nop
or
push
pop
hlt
daa
mov
cld
imul
inc
lret
jmp
xchg
jb
mov
clc
add
sub
or
movsl
test
scas
cmp
push
pop
or
lret
lret
adc
int3
pop
lret
mov
sub
movsb
sub
mov
lods
adc
xor
sarb
fimuls
inc
lcall
sub
mov
fistpl
inc
dec
dec
cmp
push
sbb
rcrb
je
shl
in
aam
mov
pop
outsl
cld
xchg
sarl
test
mov
jl
in
shrb
ret
or
fcmovnb
or
mov
pop
sbb
test
leave
ja
movsb
inc
gs
lods
je
mov
stos
sub
mov
rcl
int
mov
cmp
repnz
and
and
ficompl
mov
ret
pop
mov
mov
pop
outsl
pop
sub
mov
push
mov
addb
sbb
sbb
push
arpl
imul
lcall
movsb
test
divl
fistpll
mov
ja
push
and
adc
cmpb
jle
rcl
vlddqu
adc
push
mov
add
or
inc
cld
fadds
jb
sbb
mov
xchg
jle
fsubrl
push
lcall
cli
sub
mov
roll
xor
je
loope
lret
lea
adc
testb
pushf
lret
sbb
scas
stos
mov
push
stc
jno
cmc
jg
imul
lcall
test
int3
lret
xor
push
aas
lods
sub
inc
cwtl
lock
inc
loope
push
cwtl
lret
shll
es
ds
std
subl
mov
xor
add
cmp
jne
scas
inc
inc
pop
mov
fstps
cmovp
arpl
pop
or
std
mov
test
mov
jns
jle
xchg
mov
jns
es
movzwl
mov
mov
mov
movzwl
xor
movzwl
sar
mov
mov
movzwl
xor
movzwl
shl
or
mov
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
jmp
popa
rolb
and
loopne
insb
in
imull
adc
lret
mov
rcl
mov
stos
das
cwtl
out
sti
jns
jmp
mov
xchg
jns
xor
cwtl
and
out
and
dec
jg
addr16
aam
xchg
jmp
test
shlb
mov
and
divl
mov
sbb
push
or
fdivrp
push
and
rcll
sbb
adc
shr
iret
in
add
ret
fnsave
sub
pop
loop
xor
mov
sub
jnp
repz
inc
stos
xor
ss
lds
pop
call
or
inc
out
push
jns
inc
cmp
outsl
repz
mov
sbb
cmp
fcmovne
in
mov
xchg
inc
fsubs
inc
cwtl
rol
test
flds
inc
je
rep
mov
or
push
fildll
push
lret
shl
test
and
imul
popf
sub
sub
ljmp
fdiv
icebp
mov
push
mov
jmp
js
stc
mov
inc
mov
or
pop
push
mov
and
jge
cmpb
xor
aad
mov
fwait
in
mov
in
daa
and
test
inc
pop
hlt
fdivrs
daa
cld
mov
out
xchg
arpl
fbstp
xchg
xchg
mov
adc
mov
adcl
dec
fdivl
std
fcom
je
cltd
dec
sahf
fstpt
fbstp
adcb
jge
pop
or
movb
add
xchg
jmp
push
sub
nop
jle
out
xchg
push
xchg
push
sub
ret
jp
std
rorb
lahf
mov
cmp
jne
das
popa
inc
adc
stos
xor
push
inc
mov
xchg
roll
repz
rcrb
lds
push
xor
popf
outsb
into
imul
ds
data16
shrb
or
repz
in
test
imulb
mov
xor
rolb
sbb
cmp
rcrl
xchg
cmp
lds
data16
js
push
clc
dec
data16
repnz
sarl
jp
jmp
flds
fmul
or
or
sub
lds
lret
je
push
insl
dec
add
btc
xchg
in
xor
mov
int3
cs
testb
xchg
call
jo
pop
sbb
leave
pop
sub
sub
iret
rcrl
imul
dec
outsl
popa
dec
mov
in
movsl
push
les
je
outsb
int3
dec
loopne
and
cmp
ja
mov
pop
orb
scas
push
pop
jno
test
cli
mov
int3
lea
adc
sqrtps
loop
pop
and
rorb
insl
and
jge
adc
pop
jno
in
mov
cltd
sub
or
aaa
sbb
mov
sbb
frstor
xor
inc
ss
sbb
int3
insl
test
xor
inc
pop
aad
imul
in
mov
sub
pop
imul
movsb
pushf
xor
jmp
movsb
sbb
ja
mov
cwtl
xchg
ficoms
dec
pop
call
fcompl
mov
ficoml
fisttpl
mov
mov
popf
inc
inc
rdpmc
mov
and
mov
enter
add
cld
cs
add
or
jg
mov
call
or
or
mov
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
mov
or
je
lea
mov
mov
xor
jmp
test
push
cmpsb
inc
sbb
cltd
adc
mov
fsubs
adc
adc
lret
push
call
jns
mov
pop
call
xor
repnz
mov
fs
shll
into
push
mov
xor
das
into
push
pusha
leave
mov
es
push
pusha
lahf
pop
les
cmpl
and
jl
ret
inc
pop
jg
mov
gs
mov
pop
pop
jmpw
cmpsl
push
pop
cmp
orl
fimull
iret
mov
ret
pop
out
in
dec
jae
push
jge
sbb
jmp
cmc
mov
lea
xchg
push
lahf
aas
test
lods
add
out
sub
inc
fildll
sub
stc
ljmp
cmpsb
ljmp
dec
je
mov
jp
lds
adc
jecxz
and
popa
test
push
jl
xorb
sbb
mov
enter
cmpsl
scas
add
mov
mull
xchg
lock
lock
int3
dec
push
pusha
jmp
and
jmp
or
jo
outsl
enter
xor
sub
pop
adc
nop
gs
rol
loopne
dec
add
cmp
fwait
les
dec
inc
rorl
adc
and
gs
ja
cmp
sbb
lock
jno
jl
iret
sub
xor
shlb
and
or
stos
loopne
stc
mov
mov
stos
shrb
dec
adc
cmp
xor
sub
xor
sti
pop
push
jns
xor
daa
int3
lcall
ret
inc
pop
cli
mov
dec
xor
mov
cli
out
cmp
and
fldcw
fs
btr
mov
out
xor
mov
lret
or
mov
mov
add
sub
test
adc
push
test
push
or
lahf
jle
xchg
lret
mov
lock
lods
push
jg
dec
dec
pop
jo
fsubr
mov
xchg
in
add
sub
aaa
cmp
stc
fsubrl
jb
add
lds
loop
mov
aas
lods
mov
sbb
js
out
xchg
aaa
negb
dec
and
push
push
xchg
leave
push
subb
inc
mov
sbb
imul
or
negl
fidivl
and
sbb
or
push
cmp
inc
xor
clc
push
fdivrs
outsl
dec
fdivl
add
orb
jl
btsw
out
pop
inc
inc
xor
inc
jecxz
and
jle
repz
dec
xor
add
out
loope
rcl
out
mov
out
stc
xor
push
or
sub
mov
je
mov
mov
repz
xchg
sub
mov
mov
or
mov
ss
pop
cmovbe
dec
insl
inc
xchg
inc
cmp
adc
sub
inc
inc
gs
pop
xchg
xorl
mov
lcall
and
jmp
mov
jmp
cmpsl
loopne
add
inc
xor
movzwl
lods
dec
test
inc
test
add
fsubrl
jns
xchg
push
lea
push
gs
cmpsl
std
mov
adc
adc
sbb
cmp
push
push
push
fisubs
xlat
rorb
sar
pop
cmp
sbbl
int3
mov
jns
sub
sub
scas
xchg
xor
mov
or
push
pop
fwait
pusha
rorl
lahf
cmc
mov
call
mov
mov
mov
jmp
or
mov
adc
inc
es
sbb
adc
cmc
pop
xor
fwait
xchg
mov
lds
mov
pusha
repz
lret
sti
pop
pop
pushl
mov
int3
mov
movsb
stos
aaa
cli
mov
test
hlt
add
sti
push
repz
jnp
faddp
mov
adc
jno
xchg
xchg
xchg
dec
pop
imul
push
in
pop
rorl
or
adc
lock
cmp
push
and
daa
xchg
lcall
mov
or
sub
pop
pop
clc
add
dec
xchg
je
xor
int
push
xchg
fiadds
inc
xor
inc
jecxz
mov
insb
sub
mov
cmp
or
stc
xchg
xor
les
and
sbb
dec
dec
fisubrl
mov
fnstsw
sahf
jno
cmpl
pop
mov
inc
push
std
jge
pop
rcrb
add
leave
subb
loopne
imul
cmp
jb
lahf
iret
jo
add
repnz
popa
and
scas
popa
loop
mov
mov
cmpsb
stos
loopne
or
js
mov
lcall
test
inc
ret
xchg
cvtdq2ps
gs
dec
stos
dec
add
mov
mov
stos
sbb
into
cli
cwtl
sbb
xor
pushf
mov
sbb
cld
and
mov
cltd
sbb
mov
xchg
insl
jb
daa
fcomi
addb
jo
pop
push
mov
xor
mov
pop
or
popa
and
cmp
repnz
cmpsl
mov
add
sub
aaa
in
daa
clc
cmp
addr16
mov
test
fnstenv
cmp
out
jge
adc
dec
inc
out
mov
out
and
fnsave
inc
bound
adc
fsubrs
xchg
and
xor
mov
and
pop
inc
sub
int3
imull
dec
xlat
mov
jns
push
aaa
jp
sbb
jbe
xor
out
sbb
fs
xor
adc
dec
add
ljmp
cmp
int
inc
aaa
pop
pop
xchg
aas
lods
pop
loope
imul
mov
repz
mov
pop
xchg
jmp
pop
pop
sbb
and
sub
inc
or
nop
sbb
sub
mov
mov
jno
or
inc
shlb
sub
dec
insb
sub
cmp
dec
ljmp
mov
xor
insb
enter
mov
scas
sub
test
int
add
loop
subb
or
repz
mov
cld
adc
ja
test
xchg
pop
jg
iret
or
std
imul
add
jg
das
mov
jecxz
or
fstl
inc
dec
xchg
xchg
sbb
xchg
sbb
mov
lahf
subb
and
cs
insl
je
cmp
xlat
xchg
js
ror
mov
insb
cmc
bound
xorl
lods
lods
loope
mov
fidivrl
leave
test
dec
push
cmp
daa
arpl
in
jne
push
andl
fildl
mov
push
dec
imul
push
fsubrl
jg
pop
pop
fcmovnu
call
jmp
jge
les
cmp
sub
fcomp
pop
dec
rclb
je
xor
mov
call
or
or
xor
xor
mov
mov
mov
mov
movsbl
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
movsbl
cmp
je
mov
movsbl
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
movsbl
cmp
jmp
insl
into
leave
mov
jne
lret
cmp
mov
stos
adc
adc
js
fadd
sub
mov
movsb
repnz
inc
xchg
cmc
sarb
mov
cmp
dec
gs
sti
xor
mov
xchg
and
mov
mov
idiv
iret
mov
or
mov
jne
stos
loope
sbb
ret
jp
jmp
adc
cwtl
dec
scas
add
fcoml
cmpsb
cmpl
sub
icebp
aaa
xor
rolb
movsb
fistl
popa
xchg
test
jp
fnsave
inc
roll
pushf
test
stc
xor
ret
stos
jo
sbb
mov
sbb
mov
xchg
imul
sbb
inc
cmp
pusha
shrl
cmpsl
xchg
push
repnz
inc
call
js
int
pop
jno
sbb
icebp
jno
ret
xchg
inc
mov
sub
sub
lods
push
sahf
add
or
jp
les
daa
mov
jmp
sub
lods
cli
cmp
dec
inc
jo
roll
test
test
mov
xchg
dec
pop
jo
scas
imul
sti
cmpsl
lods
pop
mov
shlb
dec
jae
rcll
mov
hlt
jno
sub
sahf
inc
nop
mov
or
scas
adc
fistl
xorb
dec
filds
mov
ret
pop
adc
std
or
flds
or
push
xchg
rcrl
or
js
icebp
mov
lods
add
pop
jmp
jb
out
inc
insl
pop
negb
cmpsb
mov
loopne,pt
sahf
xor
cwtl
pop
jae
pop
in
in
push
divl
push
bound
das
btr
in
jmp
mov
inc
call
and
jns
xchg
loop
je
dec
es
pop
lods
jns
dec
mov
popa
adc
loop
xor
mov
and
call
xor
repnz
lret
fisubrs
sahf
cmovge
popf
cmpsl
ja
push
stos
aam
es
imul
jnp
jo
xor
js
int
ffreep
jo
out
mov
out
rcll
aad
sbb
adc
hlt
lret
pop
xorl
out
sbb
inc
pusha
cmp
sbb
lcall
call
inc
addb
dec
pop
mov
xchg
mov
mov
adc
mov
std
cmp
sbb
push
push
mov
sub
arpl
or
cmp
pop
clc
jns
and
dec
jb
notl
cmp
inc
dec
les
add
sub
movsb
adc
jb
sbb
inc
sbb
in
add
pop
dec
sub
outsb
ja
lret
adc
hlt
scas
mov
add
inc
mov
lods
fs
dec
mov
xor
pushf
ds
jb
lods
sub
cmpsb
std
and
and
mov
fdiv
sbb
daa
and
nop
insb
insl
out
ljmp
adc
insb
push
stos
mov
cmovae
test
add
insl
push
adc
add
mov
xchg
mov
insb
push
cmpsb
loopne
jmp
sub
cmp
test
dec
and
in
stos
pop
das
add
and
adc
and
inc
xchg
aad
iret
pop
je
jmp
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
movsbl
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
jmp
mov
xchg
pop
mov
dec
mov
mov
adc
ficoml
rcll
mov
hlt
and
mov
sbbl
adc
mov
aaa
imul
adc
icebp
mov
xchg
mov
es
ljmp
xchg
aad
mulb
pop
les
dec
dec
ss
cmp
loope
aad
xchg
loopne
jae
add
pushf
dec
mov
fstpl
bnd
mov
int
test
xor
sub
pop
or
in
inc
shrl
sahf
cmp
clc
in
cmp
loope
push
xchg
ja
jno
lret
cmp
push
dec
xchg
leave
dec
jo
mov
mov
pop
mov
dec
jge
loopne
push
mov
pusha
xchg
insl
or
out
inc
gs
xchg
negb
ret
adc
add
lret
xor
jecxz
outsb
pop
pop
inc
sub
flds
fwait
xor
mov
cmp
sbb
mov
jns
aaa
mov
dec
push
add
test
ret
sub
imul
add
je
dec
adc
ljmp
mov
dec
jae
adc
dec
ret
fidivl
ljmp
xor
cmp
cli
gs
lcall
adc
mov
movsl
movsl
sbbb
jmp
mov
adc
pop
in
out
out
cmc
inc
sub
add
fmuls
cli
movsbl
cmp
jne
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
add
mov
jmp
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
mov
cmpl
je
mov
mov
movzwl
mov
mov
mov
jmp
jmp
cmpl
jne
xor
jmp
mov
add
mov
movl
cmpl
je
cmpl
je
mov
shl
mov
movl
sub
mov
movl
mov
cmp
je
mov
mov
mov
mov
mov
mov
mov
inc
mov
jmp
movl
push
jmp
mov
mov
ret
push
cmpl
movl
notl
movl
jmp
mov
jg
pushl
pushl
push
call
adcl
orl
adc
sbbl
orl
addl
notl
push
movzbl
sub
mov
or
jne
mov
and
mov
mov
sbbl
xor
div
sub
mov
mov
and
mov
div
notl
mov
jmp
xor
mov
mov
mov
mov
shr
rcr
shr
rcr
or
jne
div
mov
mull
mov
mov
mul
add
jb
cmp
ja
jb
cmp
jbe
dec
xor
mov
pop
pop
ret
adcl
subl
cmpl
movl
je
and
add
movzbl
mov
mov
mov
pop
pop
pop
leave
ret
movl
cmp
movl
jae
cmp
jae
subl
shld
movl
shl
ret
cmpl
mov
mov
jmp
movl
je
pushl
push
call
xorl
adcl
sbb
and
xor
adc
adc
mov
xor
and
shl
ret
xor
xor
ret
