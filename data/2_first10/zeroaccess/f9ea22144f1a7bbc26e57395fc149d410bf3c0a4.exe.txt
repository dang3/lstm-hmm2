push
mov
sub
xor
mov
xor
mov
adc
mov
sub
push
mov
mov
mov
mov
jmp
mov
or
inc
sbb
adc
adc
clc
adc
dec
notl
cld
fimull
mov
fsubl
int3
or
adc
jo
movsb
xchg
jle
dec
mov
mov
xchg
mov
daa
and
push
sbb
sbb
pushf
dec
out
sbbb
add
sbbb
inc
ret
mov
movsb
in
jne
loopne
jno
aas
xchg
in
rolb
pop
or
sbb
notl
add
pop
fidivs
cli
xchg
cmp
or
pop
or
cmp
inc
cld
mov
leave
push
jbe
push
fsubr
or
jno
test
scas
mov
sbb
mov
lret
inc
jae
push
xchg
mov
adc
mov
movsl
dec
adc
pop
mov
and
push
es
fimull
mov
mov
pop
adc
enter
push
movsb
sbb
pushf
daa
lock
stos
imul
test
aam
adc
pop
fs
push
cmp
inc
imul
out
mov
icebp
push
xchg
inc
jnp
xor
out
test
bound
in
idivl
cmp
mov
sbb
aad
lods
pop
jecxz
add
ret
pop
mov
xor
stos
push
fsubl
test
sbb
daa
push
cmp
shll
popf
dec
fstpl
push
xchg
inc
adc
jae
sbb
add
sub
cmp
mov
aam
in
mov
pop
push
fsub
mov
fimull
adc
fisubrl
jecxz
cmpsl
fstpt
aad
cmpsl
ss
and
fimull
xchg
push
mov
inc
push
xor
repz
mov
ja
mov
lds
sti
out
repnz
addr16
xor
sub
cmpsb
cmpsl
stos
lret
fsubl
push
mov
adc
cmp
rclb
mov
xor
lcall
jecxz
sub
sub
mov
jg
cwtl
fisubs
imul
jle
bound
xchg
cmp
pop
fstps
cmpps
lods
cmpsl
fstps
inc
fildll
je
inc
int3
enter
mov
push
cmp
in
mov
add
shrl
sub
adc
xlat
jg
testl
inc
iret
mov
inc
outsl
mov
stos
cmpsb
andl
clc
bound
inc
push
popa
repz
decb
rcl
push
cmp
add
dec
xor
or
cld
jp
leave
cwtl
aam
fs
lret
jae
nop
push
das
lret
xchg
hlt
xor
dec
mov
and
mov
and
jp
hlt
movl
negb
in
es
test
push
leave
nop
mov
lods
test
adc
mov
mov
jb
adc
xchg
cmp
xchg
movsb
inc
mov
dec
pusha
mov
pop
in
scas
scas
stos
xor
mov
or
loop
pop
jl
xchg
cli
orb
jmp
lret
pop
fsubrp
insl
cmp
es
push
inc
into
addb
ljmp
sti
scas
xchg
in
or
fidivrl
xchg
mov
mov
lret
clc
jo
sbb
leave
lods
ret
dec
pop
mov
xor
ficomps
jg
popf
ja
ror
mov
test
adcl
aam
loopne
jp
xor
dec
inc
mov
out
xchg
inc
push
and
cmp
pop
pop
fmull
es
mov
imul
ret
push
push
int
shrb
and
ljmp
inc
cmp
addr16
and
sahf
in
arpl
fimull
shll
add
loop
ja
ja
or
sbb
jg
enter
popa
mov
bound
xor
je
push
xor
push
lods
xchg
hlt
or
mov
aaa
or
cmovno
inc
ficompl
and
stos
pop
push
movsl
lods
push
sbb
icebp
jmp
test
shrb
loop
test
div
adc
negb
sub
lods
outsb
or
sub
add
fstpt
je
pop
fnstsw
lods
fs
ljmp
push
popf
and
or
inc
cs
or
jl
push
adc
sub
jmp
cmpsl
mov
jp
push
cmpsb
and
dec
in
adc
pop
sub
sub
sti
popf
test
jl
sub
mov
xchg
aam
dec
or
xchg
xchg
mov
lock
inc
xchg
adc
push
int
inc
sub
xchg
mov
sub
test
mov
sub
xchg
jge
xorl
mov
bound
insl
pop
fs
jno
jae
loope
add
cmpsl
sbb
es
dec
inc
xchg
or
adc
cmpsb
pop
lret
sahf
out
pop
ficomps
cmp
pop
cmpl
out
lret
loopne
xor
pop
negb
rcrl
lcall
push
push
cmp
cmp
test
jg
adc
pop
ror
sbb
pop
pop
mov
imull
rcr
adc
push
sarb
fildl
ret
mov
js
fdivrl
ficoml
sbb
mov
mov
dec
daa
je
scas
les
sub
cmpsl
repz
test
mov
mov
xchg
adc
arpl
xchg
and
sub
sbb
ljmp
jno
mov
sub
push
insl
mov
sahf
daa
cmp
dec
push
in
xor
iret
sbb
enter
scas
or
cmc
stc
push
out
mov
cld
mov
inc
fldenv
push
adc
in
adc
and
outsb
clc
ja
roll
add
inc
leave
dec
or
lret
fsubl
sbb
xor
jecxz
adc
clc
pop
pop
mov
data16
cwtl
lcall
shll
xor
pop
lods
jp
push
and
jb
jae
push
xlat
ljmp
cmp
outsl
push
or
add
cmp
adc
cmp
sbb
add
fsubrl
lahf
inc
xor
pop
xchg
aad
pop
xchg
fisubrl
jbe
mov
mov
orl
orl
orl
mov
cmpl
movl
movl
jmp
movl
jne
push
push
push
call
xor
adcl
sbb
mov
and
sbbl
xor
adc
mov
sbb
mov
inc
mov
sub
mov
sbb
cmpl
mov
not
mov
jmp
movl
jg
pushl
call
sbb
or
adc
xor
or
or
sbbl
mov
orl
sub
orl
cmpl
mov
mov
movl
jmp
movl
jbe
pushl
push
pushl
call
and
and
xor
add
and
movzbl
add
mov
add
mov
sub
movl
lea
cmpl
mov
movl
jmp
movl
jg
push
call
movl
xor
add
sbb
or
and
xor
mov
addl
mov
and
mov
or
mov
mov
add
mov
add
orl
mov
mov
mov
or
mov
movzbl
or
shrd
cmpl
mov
mov
mov
mov
jmp
mov
jl
push
pushl
push
push
push
call
and
or
adc
mov
sub
shr
andl
mov
cmpl
not
notl
jmp
mov
movl
jne
push
call
movzbl
adc
and
movl
sbb
xor
add
adc
mov
mov
xor
orl
xor
or
mov
movl
sbb
jmp
push
test
pusha
stos
xchg
nop
hlt
hlt
mov
adc
push
clc
adc
insb
fldenv
add
int3
cwtl
mov
mov
std
out
jno
jmp
adc
sub
ss
cmp
out
sub
push
in
pop
mov
inc
fldcw
hlt
inc
pop
cld
and
sbb
adc
lret
or
pop
aam
lock
out
pushf
jecxz
mov
insl
jl
xchg
dec
rcrl
cmp
xchg
or
mov
testb
jo
push
sub
mov
or
adc
sti
cld
mov
pop
push
xchg
add
inc
mov
into
mov
ljmp
aam
enter
and
aam
or
ret
mov
push
pop
push
popf
push
ret
fidivrl
xor
sbb
add
mov
mov
cmp
negl
or
xor
sbb
sbb
cmp
int
push
dec
int3
scas
push
pop
cmc
jp
jp
stos
fimull
test
add
in
dec
mov
push
fdivl
dec
sub
and
adc
loopne
jnp
movsl
inc
shl
dec
test
shl
xchg
clc
jb
andb
cmc
jbe
xchg
cmp
jle
cmp
and
add
mov
or
dec
inc
pop
shrl
imul
stos
or
adc
push
loop
sub
cmp
ds
jns
adc
fdivr
test
cmpsl
outsb
mov
popa
sbb
dec
xor
gs
out
std
sbb
int
mov
and
lods
dec
ja
loop
fadd
mov
and
pop
int
filds
sub
xchg
mov
mov
push
fwait
repnz
sbb
aam
xchg
call
and
sbb
aas
loop
sbb
pop
int3
jns
cmp
dec
push
mov
insl
adc
nop
add
daa
mov
xor
cmc
das
mov
and
cltd
and
inc
test
nop
jp
mov
sbb
aaa
cli
int3
jns
arpl
xchg
push
lea
fstpt
decl
pop
sub
cs
lea
push
xor
addr16
mov
mov
mov
cs
sub
insb
pop
inc
inc
js,pn
push
cmp
fstps
adc
cmpsl
adc
xchg
ret
stos
bound
sbb
or
fsubr
testl
fsubrs
add
inc
add
cmpsb
loopne
xor
enter
scas
xchg
sbb
sbb
pop
cmp
je
and
test
pop
inc
add
xchg
fldenv
in
lret
xor
xlat
cltd
jl
fdivr
enter
inc
loope
mov
cmpsb
pop
mov
and
mov
inc
add
mov
cltd
lods
sbb
add
push
adc
fs
stos
adc
jo
cmc
cmpsl
cmp
push
pop
mov
sbb
push
pop
roll
dec
jmp
out
sbb
dec
mov
or
popf
lea
das
pop
fucomi
enter
mov
adc
je
jae
jnp
or
out
notb
stos
repz
xor
fistps
pop
cwtl
loopew
push
dec
dec
jne
out
nop
in
loope
inc
sub
mov
lret
adc
in
pop
int3
outsb
mov
cmp
imul
das
mov
add
push
int
or
sbb
jmp
adc
and
add
sbb
ret
push
add
inc
gs
pushf
jl
dec
movsb
or
or
xor
mov
and
xchg
loop
inc
movsb
or
sbb
jae
sbbl
clc
adc
ficoms
add
inc
mov
rcl
inc
int
add
popa
jnp
sbb
jp
scas
fldl
dec
fucom
aad
xor
sahf
adc
xor
jg
ds
mov
in
or
xchg
xchg
addr16
sub
sbb
and
and
into
xchg
inc
nop
lret
fsubrl
pop
fmuls
or
pop
add
jbe
inc
adc
stos
stos
mov
repz
jb
cmpb
inc
mov
push
jmp
mov
inc
negl
inc
pop
ja
lds
cmp
and
pop
ret
jne
push
mov
dec
enter
jno
mov
movsb
jl
test
jae
in
push
mov
std
subl
pop
xorl
push
fsubrs
cli
sub
fimull
jp
mov
xchg
in
jnp
lock
lods
jl
test
repz
rcrb
xor
orb
or
leave
sub
out
mov
jno
push
hlt
in
ds
ret
fists
mov
cmpsb
mull
aad
fwait
xchg
inc
loop
out
in
imul
scas
mov
insl
mov
push
movsl
ret
add
lods
into
mov
js
push
sahf
xor
xorl
adc
iret
xchg
addr16
adc
cmp
and
sbb
loopne
aad
scas
ss
out
call
dec
inc
xchg
cmp
sub
test
call
lret
add
or
notb
ss
ja
cmp
shld
ja
arpl
jmp
dec
jns
loopne
test
sub
sbb
mov
scas
pop
jecxz
mov
xchg
push
dec
fiadds
int3
adc
sbb
repz
jae,pn
jl
repnz
js
pop
inc
push
enter
jecxz
mov
jecxz
insb
pop
xlat
dec
fistpl
cmp
mov
and
xchg
out
jne
es
mov
add
jl
xor
movsl
dec
xchg
shlb
nop
in
pop
jbe
lock
mov
cmpsb
outsb
jge
fcomip
xlat
push
cmp
jmp
bound
sub
lock
addr16
in
jb
insb
dec
ret
pop
inc
in
int
mov
cwtl
cld
xchg
push
mov
icebp
shlb
jnp
sub
sbb
jno
push
or
stc
xor
push
repz
test
ret
inc
ficoml
test
mov
lret
int
adc
mov
les
jb
xchg
es
inc
xchg
outsl
inc
add
negl
movl
neg
movl
neg
movl
movl
add
movl
or
movl
mov
adc
movl
cmpl
movl
mov
jmp
not
mov
jle
pushl
call
sub
orl
movl
andl
movl
and
adcl
and
movl
movl
jmp
push
sbb
sbb
sbb
sbb
pusha
sbb
xchg
ljmp
mov
cli
sub
jb
rclb
hlt
push
in
arpl
bound
mov
lds
mov
dec
cmp
fsubrs
cmp
cmp
dec
xchg
es
int
pusha
lahf
or
out
fcmove
fcompl
xor
xlat
mov
roll
and
or
mov
pop
dec
aaa
daa
repnz
pop
inc
cli
adc
out
adc
sbb
jecxz,pt
sbb
nop
inc
cmp
jg
pop
ficompl
or
out
pusha
xorl
insl
add
push
aad
orl
cmpl
xchg
idivb
aad
mov
mov
test
ret
xor
and
sbb
sub
lods
insl
jno
pop
fwait
dec
mov
jno
xchg
fmull
imul
leave
push
sbb
lret
xor
mov
aas
cs
xchg
jns
pop
ljmp
ror
aam
or
dec
mov
inc
push
shlb
xchg
and
in
jo
popf
sbb
mov
mov
in
fwait
dec
or
ret
jecxz
pop
jecxz
mov
in
fdivrs
sub
mov
in
insl
mov
repz
scas
ret
bswap
imul
in
btc
jecxz
push
outsl
xor
pop
xchg
jle
repz
pop
arpl
or
push
add
xchg
dec
inc
gs
sbb
aas
jno
and
inc
or
mov
stos
adc
cmpb
scas
cmp
dec
lea
inc
out
clc
cld
popa
out
fstpl
adc
mov
stc
decb
jge
push
rcrb
fdivrl
mov
in
cmp
or
rorl
mov
cmp
test
and
cmp
push
adc
mov
mov
sub
pusha
mov
cld
stc
aam
xchg
push
lcall
call
rcr
es
adc
adc
add
jmp
std
adc
cwtl
jle
bound
out
movsb
sbb
dec
jno
enter
in
jns
mov
mov
xchg
jns
int3
ss
jae
add
push
popa
push
jno
mov
sbb
add
xchg
fisubrl
pushf
sub
add
imul
stos
cmp
sub
xor
xor
movsl
popf
mov
sarl
imul
cmp
push
mov
add
popa
dec
push
fnop
xchg
sar
sahf
aam
stc
pop
test
jnp
in
pop
outsl
mov
mov
cmp
fisubl
sqrtps
lret
pop
cld
dec
arpl
mov
repnz
cmp
lds
fs
jmp
mov
ljmp
mov
lods
adcb
rcll
push
add
inc
sbb
and
xor
xchg
popa
and
arpl
movsl
stc
test
sub
es
lds
rol
test
imul
filds
push
and
inc
lea
xchg
mov
cmp
cmpsb
scas
dec
mov
xor
add
inc
into
pushf
cmp
lock
xor
dec
mov
and
xchg
mov
insl
inc
outsl
cmp
ret
test
mov
xchg
or
pop
pop
scas
sahf
add
inc
call
add
mov
popf
jle
jge
fistpl
icebp
sbb
rcrb
adc
mov
int3
cmp
jge,pt
xchg
into
call
jl
push
stos
gs
loopne
cmc
adc
and
cltd
loope
scas
or
loope
sub
xor
push
mov
clc
xchg
push
sarb
aas
adc
xor
sbb
push
pop
cmp
lea
mov
jbe
rcrl
bound
mov
adc
outsb
jnp,pn
popl
int
nop
int
cmp
jl
jl
iret
sbb
xchg
movsl
push
icebp
rcl
inc
mov
jbe
gs
enter
dec
ja
pop
outsl
mov
es
mov
inc
and
adc
mov
jle
sti
std
sbb
sub
in
sbb
xor
xchg
dec
jno
push
mov
mov
push
dec
cmp
jae
and
and
mov
cltd
sub
dec
das
dec
loop
fadds
sbbl
int
ljmp
xchg
jbe
loopne
test
in
sub
and
sbb
aam
add
subb
lods
scas
xchg
stos
daa
mov
pop
jecxz
mov
dec
imul
inc
mov
jg
out
scas
adc
jne
aaa
outsb
addr16
xor
pop
movsl
loope
xchg
sbb
push
add
ss
mov
sbb
mov
inc
inc
xor
lock
cwtl
inc
inc
cs
mov
or
xchg
jl
cld
std
test
mov
pop
pop
shrl
cmp
pop
ljmp
pop
mov
inc
add
cli
into
lds
inc
xor
lock
dec
jns
cmpsb
int
es
push
lret
andl
mov
out
ss
mov
lock
icebp
outsb
and
lcall
xchg
jge
es
popa
pop
mov
imul
jnp
jno
and
adc
pop
pop
or
inc
into
es
mov
int
loop
aaa
cwtl
cltd
mov
cmp
imul
stc
mov
call
xor
xchg
inc
lcall
in
inc
jge
mov
test
movsl
pop
inc
mov
dec
and
add
lea
mov
pop
ss
loopne
and
jnp
mov
jns
mov
in
xchg
cmpsl
in
inc
add
push
pop
and
push
mov
jae
push
mov
addb
jnp
stos
ja
icebp
mov
cmp
lods
stos
adc
mov
lretw
notb
adc
or
decb
cmp
jbe
pop
lret
fldl
andb
nop
xor
dec
nop
shrl
clc
mov
sbb
stos
inc
xchg
push
mov
movsb
out
xchg
daa
in
mov
popa
and
aaa
push
push
fcmovne
push
xchg
mov
jecxz
addl
xchg
mov
inc
cwtl
inc
sbb
add
inc
pushf
jge
add
not
movl
cmpl
movl
movl
jmp
movl
not
je
push
push
push
push
pushl
push
push
pushl
call
sbb
negl
orl
subl
subl
orl
movl
movl
movl
sub
movl
jmp
loop
in
gs
ljmp
aam
adc
push
clc
adc
cmp
dec
sti
cli
mov
mov
mov
pop
or
in
lretw
or
jnp
mov
jns
mov
loopne
outsl
pop
popf
clc
mov
push
outsb
xchg
fwait
dec
gs
clc
jp
mov
or
xchg
dec
jl
andb
mov
jg
ret
addr16
add
test
ljmp
rorl
cwtl
enter
xor
inc
jnp
push
dec
jecxz
cmc
push
sbb
cmc
shlb
xchg
mov
lods
cmp
fwait
test
and
or
mov
jb
pop
mov
mov
or
gs
jp
sub
insb
or
mov
and
and
movsb
mov
mov
add
jo
pushw
mov
addr16
jge
and
or
and
fbstp
xlat
mov
mov
dec
cmp
push
les
inc
push
lret
or
bound
push
incb
cld
scas
in
pop
jl
add
inc
outsb
pop
push
sub
mov
add
call
add
and
or
fldt
movsb
mov
dec
loope
push
push
insl
pop
mov
push
sahf
push
js
push
sub
enter
cmp
es
push
jl
shlb
sbb
roll
hlt
sbb
jecxz
out
mov
dec
mov
loopne
mov
int
push
cmc
add
inc
fdivs
aaa
xor
adc
ljmp
xchg
pop
cmpsl
ret
cmp
lods
icebp
sub
js
cmpb
sub
ljmp
stos
sub
inc
mov
mov
pop
lret
push
lcall
ja
and
nop
sbb
fsubs
inc
cmp
sub
sbb
mov
lods
jo
int
dec
cmp
mov
scas
adc
cmp
fbstp
testl
push
enter
out
sub
dec
cs
jecxz
pop
repz
loope
and
loop
popa
add
icebp
sub
inc
jp
rorb
inc
fstl
xor
mov
pop
adc
lret
inc
jae
les
nop
fistps
fldl
arpl
dec
and
dec
sub
adc
fwait
shll
ret
andb
mov
or
pusha
pop
sub
lret
fiadds
xor
push
inc
insl
inc
ljmp
push
adc
pop
cli
push
push
mov
out
lcall
out
pop
sub
xchg
aaa
out
loopw
ss
mov
cmpsb
pop
adc
bound
scas
sub
stos
faddl
sbb
aam
sub
stos
das
cwtl
dec
push
ss
pop
aaa
imul
mov
jecxz
cmp
in
xchg
loopne
cs
jno
lock
jmp
jl
or
repnz
inc
andb
xchg
push
mul
pop
inc
push
int3
cld
test
dec
mov
rcrb
xor
sbb
fldcw
mov
sbb
filds
ret
pop
imul
mov
and
movsb
call
mov
push
cmpsl
mov
jmp
jge
adc
xchg
cwtl
imul
loope
mov
lcall
mov
ficomps
jbe
shll
fwait
mov
xchg
and
rcrl
fsubl
push
outsl
mov
inc
mov
fcmovne
sub
repz
jge
sti
push
cmp
aaa
out
mov
pop
es
adc
push
out
cmpsl
cmc
cmp
hlt
imul
ja
adc
sbb
or
lock
out
push
mov
lods
sub
negb
inc
sub
test
pop
push
fcomps
fs
xor
sbb
jecxz
sti
mov
dec
jge
and
xchg
imul
mov
mov
pushf
scas
jge
xor
in
insl
add
cwtl
addb
test
outsb
call
cmp
and
aad
int3
in
loop
mov
lods
andl
xor
push
shrl
mov
mov
mov
or
xlat
xchg
fchs
jo
add
xchg
xchg
jmp
inc
std
mov
fistps
mov
in
insb
loop
mov
pop
pusha
cltd
shrb
call
mov
xor
cmp
shll
cmp
aas
jbe
push
ror
jge
mov
enter
sbb
ret
int
push
inc
out
push
xchg
and
fnsave
mov
and
into
cmp
or
lcall
imul
xor
cmp
dec
mov
fnsave
jb
push
cmp
sbb
cs
push
jmp
sahf
sbb
jge
sbb
dec
sahf
xor
xor
xchg
dec
push
pusha
loopne
lret
inc
jle
fldt
mov
in
pop
fwait
mov
das
in
mov
add
lods
sbbb
xchg
push
xchg
jl
test
rclb
sbb
cmc
push
mov
inc
add
xor
sahf
mov
das
aas
cli
xchg
leave
and
ss
xor
jg
cli
cli
bound
jae
pop
je
sbbb
fwait
aad
mov
loope
shrl
mov
add
cmp
jmp
inc
fdivrs
loope
repz
gs
jge
add
lret
imul
jne
and
dec
loope
pop
cmp
xlat
decl
ret
mov
dec
jp
jns
and
sub
repz
xlat
in
or
sbb
and
out
fwait
out
in
rcrl
loop
out
xchg
orl
pop
or
lret
inc
enter
mov
dec
loop
lock
scas
int
adc
mov
cmp
int
sbb
cmc
out
sbb
adc
push
pushf
inc
cltd
jmp
addl
inc
lcall
lret
in
ficomps
decl
nop
movsb
mov
mov
push
xor
inc
filds
jno
fs
cmp
cmpsb
daa
loope
pop
cmp
push
movl
movl
movl
mov
adcl
shl
xor
or
and
mov
push
xorl
push
sbbl
push
push
call
mov
mov
xor
mov
and
mov
orl
xor
mov
cmpl
mov
not
movl
not
jmp
movl
movl
jb
pushl
push
push
call
sub
and
subl
xor
andl
add
orl
xor
or
mov
adc
mov
cmpl
mov
movl
movl
jmp
movl
jg
push
push
pushl
call
or
sbbl
and
xor
not
subl
cmpl
movl
movl
mov
jmp
movzbl
jge
push
pushl
push
push
call
xorl
sbb
sbb
movzwl
xor
xor
xor
and
sub
not
mov
lea
cmpl
mov
mov
jmp
movl
ja
push
push
pushl
call
sub
mov
or
sbb
or
adc
or
cmpl
mov
movzbl
jmp
mov
jl
pushl
call
xorl
mov
mov
xor
add
xorl
mov
mov
orl
or
andl
and
cmpl
mov
movl
movl
mov
jmp
movl
movl
jne
pushl
pushl
call
adc
movzwl
sbb
add
mov
sbb
mov
or
or
xor
or
or
mov
or
xor
cmp
jne
mov
and
mov
or
shrd
shr
mov
sbb
mov
shl
orl
xor
subl
xor
or
mov
cmp
jmp
pop
fdivrs
sbb
cltd
fistps
adc
push
clc
adc
dec
dec
ficoms
int
shrl
fs
andb
xor
push
dec
mov
repnz
or
mov
fildll
test
mov
xchg
out
sub
ss
mov
dec
in
stc
or
cli
sar
mov
shlb
outsb
xor
sahf
jnp
sub
fidivs
icebp
push
dec
lahf
cli
lahf
ret
gs
sub
jb
dec
push
add
leave
fs
cmp
cmp
xchg
lret
sbb
shl
jnp
les
jno
add
aad
outsl
insl
outsl
cmp
aaa
das
dec
aam
adc
cmpsb
sub
jno
xlat
lods
xor
mov
cmpsl
jmp
mov
cld
jge
outsb
push
cmp
add
lds
sbb
fucomp
std
dec
push
popa
dec
mov
xchg
adc
cltd
push
mov
test
jns
and
cwtl
jle
je
push
and
fidivrs
shl
xchg
call
sbb
dec
shll
sbb
xchg
dec
mov
rcrl
mov
jecxz
loope
sub
ficompl
inc
test
shll
xor
les
push
mov
test
adc
int3
je
cli
test
iret
sub
out
pop
je
or
daa
mov
loope
nop
mov
lea
xor
adc
mov
xor
je
mov
ds
ja
sbb
mov
test
fcompl
lds
out
or
mov
xchg
out
jge
cmc
movsb
cmp
jae
xchg
fistpll
inc
ss
imul
rcrl
cld
addr16
ss
mov
xorl
cs
sub
inc
outsl
sbb
shlb
cltd
inc
jle
add
jmp
dec
push
out
rcr
jmp
jg
mov
arpl
inc
icebp
cmp
shll
test
or
idiv
lock
jl
stos
ret
inc
mov
sub
imul
xor
mov
ficoml
in
xor
xchg
adc
add
xchg
xor
in
inc
push
adc
mov
jns
in
arpl
sti
sbb
adcb
fidivl
ret
pop
mov
and
das
cmp
push
or
sub
jg
jnp
stc
adc
fnsave
adc
jno
lods
xchg
or
es
cmp
ret
sbb
hlt
insb
add
pusha
daa
repz
leave
mov
adc
jp
mov
cmp
gs
push
cltd
jo
lods
shl
mov
sbb
rolb
jbe
cmc
mull
xchg
imul
std
jnp
mov
movsb
inc
pop
ret
cs
ficoms
add
jg
add
out
sub
es
inc
sbb
iret
mov
sti
iret
ljmp
or
push
out
outsb
mov
push
sahf
sti
cmpl
mov
lcall
cmpsb
mov
jge
dec
adc
dec
sbb
in
loop
or
mov
push
pop
stos
cmp
inc
ja
fdiv
das
mov
jle
loopne
sbb
mov
loop
and
je
mov
mov
xchg
cmpps
and
cmp
scas
fs
fisubrs
jnp
mov
cmp
gs
mov
mov
je
paddsb
mov
push
sbb
jns
dec
push
test
pusha
and
les
mov
lock
jecxz
push
shrd
xchg
mov
sbb
pop
fwait
out
jle
mov
lds
jmp
dec
repz
sbb
xchg
sahf
mov
lods
xchg
call
add
push
stc
mov
inc
push
adc
bound
push
jnp
arpl
pop
mov
test
daa
test
jge
pop
repz
popa
idivl
ret
mov
imul
pusha
push
jne
inc
push
arpl
push
test
ret
cmp
stc
mov
nop
adcb
dec
jle,pn
decb
shll
pop
lea
cmovge
scas
rcrb
inc
shr
sahf
mov
xor
scas
rcll
cmp
fildll
or
push
pusha
sbb
sub
push
clc
push
pop
jno
mov
out
pop
ljmp
pop
cmp
mov
jb
outsl
cmc
xor
inc
dec
data16
add
das
lods
loopne
sbb
mov
shll
cmp
sbb
sbb
test
xchg
pushf
out
int3
jb
pop
clc
cmp
jnp
mov
jbe
in
call
loope
fdivrs
rcrl
jecxz
mov
mov
cmp
ret
pop
sub
imul
push
cli
ss
out
add
or
mov
aad
adc
adc
push
sub
or
fwait
outsl
repz
in
into
lds
pop
mov
js
pop
jo
mov
andl
or
xchg
adc
ja
aad
jmp
popa
loop
movsl
pop
fistpl
mov
mov
push
enter
subl
shrb
inc
test
mov
shll
mov
dec
scas
outsb
mov
xor
cmpl
insl
and
cmp
jns
pop
mov
inc
dec
dec
mov
jp
add
fistps
out
shlb
fstpl
dec
xchg
aam
cmp
or
cmp
add
cmp
cmpsb
test
sbb
jecxz
aad
lock
lahf
outsb
jo
and
xchg
leave
cmpsb
lods
insb
test
sub
inc
lret
pavgb
movsb
cld
cmpsb
push
jge
fidivs
cmc
push
test
sbb
dec
mov
cmp
aaa
sbb
shrb
leave
out
pop
lret
mov
xchg
sub
addr16
jno
adc
jnp
daa
cwtl
jecxz
xor
xchg
lods
arpl
pop
pop
push
xor
jae
stos
or
jo
dec
push
add
rcrb
iret
hlt
fucompp
roll
dec
sarb
mov
out
mov
stos
inc
mov
xor
xchg
std
push
scas
repnz
in
out
jne
pop
pop
jmp
push
cmp
test
cmp
add
add
lcall
daa
inc
add
add
push
add
add
add
mov
sbbl
add
push
push
call
inc
addl
sbb
mov
xor
mov
negl
sbbl
mov
cmpl
movzwl
mov
mov
jmp
movl
mov
jle
push
push
push
push
push
push
call
subl
xor
add
sbb
mov
xor
addl
mov
jmp
std
fnstsw
pop
sbb
cmpsb
pop
decb
jbe
push
rcll
push
clc
adc
in
bound
add
aaa
push
neg
je
cwtl
pop
jbe
divl
imul
movsb
lock
pop
xchg
mov
rcr
sahf
test
dec
cltd
push
fiadds
inc
xor
subb
mov
ret
mov
mov
xor
or
sbb
ja
jmp
scas
dec
dec
sbb
mov
dec
aas
mov
jmp
lds
sbb
mov
bound
dec
inc
xchg
icebp
ljmp
sub
fsubrs
out
ja
lods
outsb
inc
ss
jnp
xchg
loop
cmp
lcall
mov
jge
mov
adc
adc
dec
out
das
aas
or
bnd
jbe
nop
in
icebp
cld
sub
cli
sub
fs
sbb
arpl
mov
dec
adc
jecxz
mov
test
add
sbb
cwtl
inc
js
xorl
jns
pop
xchg
inc
mov
rcll
ja
jo
xchg
dec
inc
mov
loope
cmp
jg
add
mov
ret
jecxz
shl
dec
inc
imulb
sbb
lods
int
leave
mov
mov
arpl
mov
sbb
pop
mov
fmuls
aam
mulb
js
rclb
and
inc
or
xor
fcom
lcallw
cmp
cwtl
push
jbe
fimuls
andb
rcl
inc
or
bound
inc
mov
and
mov
or
in
mov
cmp
daa
xchg
sub
imul
dec
mov
shlb
mov
inc
aas
pop
xchg
cmc
and
movsl
push
rolb
data16
out
and
cmpb
pusha
ret
loopne
cmpsl
cli
ret
or
xchg
setns
and
sar
dec
pop
dec
fists
and
xor
hlt
xchg
ja
mov
mov
movsb
fldl
pop
mov
pop
pusha
pushf
outsl
or
inc
sub
dec
xor
jge
cmpsl
sub
cmp
ret
adc
scas
fildl
lock
jg
inc
xchg
adc
lea
cwtl
dec
stos
and
dec
pop
setp
data16
xor
mov
dec
rcrl
dec
xchg
rolb
shl
jp
cs
jne
lock
mov
and
outsl
les
cmc
ja
push
add
dec
icebp
test
inc
dec
lods
movsb
xor
addb
invd
stos
test
gs
xchg
mov
fbstp
cmpsl
pop
xchg
je
jne
popa
xor
movsl
repz
mov
xlat
mov
add
dec
sbb
jmp
xchg
in
jno
loope
repnz
pmaxub
xor
movsb
sub
test
aam
into
fwait
jl
xchg
cmp
jne
jns
sbb
cmp
or
addr16
ds
rorl
out
sbb
in
sarl
movsl
jecxz
inc
nop
jmp
xor
movsb
pop
stos
arpl
out
out
cmp
xchg
addr16
add
gs
dec
mov
jmp
test
loope
popf
sub
mov
stos
lret
incl
lds
push
xor
sbb
aaa
cmp
data16
test
test
and
lock
cwtl
jp
rorb
xor
adc
dec
adc
mov
add
mov
push
mov
adc
jns
test
sub
pop
cwtl
loopne
int
jb
je
mov
dec
push
btr
and
icebp
ret
ret
mov
pushl
cmp
push
or
and
icebp
loopne
iret
nop
pop
and
test
and
add
fistps
sub
test
movsb
shl
pop
icebp
add
imull
lcall
dec
jge
sbb
or
popa
mov
jg
enter
pop
aad
loop
sarb
sub
ja
daa
sub
sbb
inc
jb
scas
lock
push
int
lret
sub
imul
jmp
adc
shll
fstl
subb
das
push
pushl
arpl
leave
into
and
jno
inc
push
push
inc
movsb
fwait
cltd
push
xor
fidivrs
push
mov
pop
pop
in
or
xchg
mov
stc
mov
shlb
into
invd
jmp
pop
mov
push
das
jmp
in
pop
mov
jmp
xor
mov
sbb
inc
outsb
in
test
mov
fcomi
xor
xchg
pusha
rcrl
insl
iret
shll
pop
cmp
xchg
xchg
test
xor
xchg
xchg
mov
mov
and
gs
push
mov
cmp
adc
pop
aad
jne
out
sbb
add
mov
arpl
add
jecxz
pop
or
mov
shlb
mov
add
push
lret
lock
mov
cwtl
push
sub
ret
maxps
std
dec
mov
pop
adc
mov
mov
add
clc
dec
jecxz
das
ret
and
fimull
jns
or
or
daa
inc
xchg
cltd
pop
in
or
pop
js
add
test
xchg
xor
xlat
and
sub
lret
test
inc
data16
or
mov
and
cmpsl
add
into
sbb
mov
sub
fsubl
mov
cmp
lods
xor
outsb
add
out
addr16
scas
ds
xchg
and
mov
mov
mov
stc
jg
cmp
mov
cmp
xchg
into
sbb
mov
push
sbb
out
hlt
xor
add
inc
cltd
fcompl
push
aaa
add
adc
or
mull
popa
or
pop
add
movb
sbb
lea
repnz
mov
clc
jno
pop
sbb
mov
pop
mov
fsubl
pop
icebp
sbb
cmp
dec
pop
pop
sub
mov
xor
inc
ds
add
pusha
insb
aas
frstor
stc
inc
mov
out
push
rorb
xor
xor
add
mov
shrd
incl
mov
cmpl
movl
mov
mov
not
jmp
movl
movl
jne
pushl
call
sbb
neg
or
add
or
mov
adcl
xor
shr
mov
xor
or
shl
sub
mov
mov
mov
orl
add
mov
sbb
mov
sub
mov
shrd
or
jmp
je
stos
cmc
sub
inc
mov
ret
adc
push
clc
adc
push
jge
mov
jo
addb
js
add
push
repz
pop
nop
imul
pop
pop
dec
scas
xor
sbb
adc
lods
outsb
dec
loope
movsb
pop
sub
lock
or
xor
sbb
add
xor
jo
outsb
add
pop
popf
inc
xor
adc
es
and
mov
dec
sbb
out
mov
mov
inc
ss
mov
push
add
mov
das
mov
pop
test
hlt
adc
aam
lods
out
jge
pusha
pop
push
push
repnz
inc
adc
xchg
sbb
push
out
jnp
sbb
sub
lods
or
les
and
add
outsb
cmp
adc
cmp
fwait
dec
push
enter
leave
fstps
xchg
sbb
jns
addb
and
dec
add
cmp
sti
in
inc
lahf
insb
mov
test
jg
mov
mov
ja
fiaddl
pop
lea
loop
dec
xor
aad
jnp
cwtl
inc
jo
pop
jle
aad
cli
insb
xchg
sub
roll
in
jnp
decl
cmp
int3
mov
mov
dec
loopne
lock
and
das
xchg
or
cld
fmulp
nop
int
mov
push
pushf
cmp
jg
lahf
dec
into
ljmp
loop
inc
daa
xor
movsb
mov
nop
ljmp
add
fs
call
xchg
cli
pop
insl
mov
xor
xor
clc
jae
and
xor
pop
adc
mov
mov
dec
das
xor
adc
mov
lahf
and
test
jnp
lds
adc
dec
pop
lods
aaa
shlb
movsl
je
imul
hlt
insl
lahf
add
cmp
outsb
cmc
xchg
add
in
mov
int3
xor
mov
test
ja
mov
movsl
outsl
arpl
lods
rcrl
xchg
jl
jae
add
nop
sbb
nop
mov
cld
rcr
aad
enterw
enter
inc
cmp
sti
xchg
repnz
add
cwtl
hlt
imul
paddsb
sbb
js
add
rorl
add
push
das
lcall
xor
in
js
repnz
nop
andl
cmc
pop
adc
inc
cmp
pop
mov
hlt
mov
mov
or
lock
xor
or
mov
inc
psrld
pop
das
jnp
pop
xor
sti
xor
inc
insl
push
cmpsl
test
sti
lret
dec
sub
sti
inc
out
and
fbstp
jmp
mov
sbb
test
push
sub
jp
daa
inc
out
xor
movl
fnstsw
es
adc
stc
cmp
push
dec
and
push
adc
scas
fucom
ss
pop
aad
dec
xchg
mov
xchg
movsb
push
dec
jbe
into
xchg
xor
mov
cmp
adcb
xor
pushf
test
or
clc
popa
fdivs
loope
mov
pop
mov
xor
push
pop
fidivs
pusha
ficompl
inc
cld
lahf
imul
test
gs
pusha
aad
je
ljmp
sbb
lock
jne
xchg
inc
push
or
cmp
adc
cwtl
add
stos
sbb
pop
roll
mov
stc
jno
fnstcw
stc
in
js
xlat
out
iret
sbb
flds
xor
xchg
dec
pop
mov
ljmp
and
sub
mov
lret
insl
add
sbb
mov
outsl
and
sub
mov
leave
push
popf
add
mov
pop
ficoms
mov
lock
push
push
xchg
xor
push
inc
mov
iret
lock
and
or
pop
mov
mov
mov
jg
xchg
mov
loopne
clc
imul
ror
popa
fisttpll
cwtl
inc
cmc
je
push
or
mov
mov
inc
das
sub
adc
jl
jo
cmp
aam
inc
nop
cmpsl
cltd
or
mov
add
mov
mov
outsl
in
and
mov
push
movsb
or
lds
mov
xchg
jae
insb
imul
outsl
or
and
xor
inc
notl
rolb
sti
lock
xchg
sub
mov
sbb
cs
lret
in
add
xchg
dec
add
mov
or
std
cmc
dec
add
cmp
or
push
dec
mov
fcoml
cwtl
sub
sbb
ds
or
push
pusha
mov
sub
xlat
push
out
movb
std
fs
enter
lcall
mov
mov
xchg
out
les
enter
adc
mov
out
lods
cltd
fists
mov
lock
sbb
xchg
cmpsb
mov
out
xchg
test
mov
cmp
js
jbe
mov
add
push
mov
les
jg
sbb
mov
cmp
mov
jmp
sub
jmp
mov
push
js
mov
fidivrl
inc
mov
test
bound
xchg
mov
les
mov
es
cmp
adc
dec
sar
test
in
addr16
xchg
pusha
push
mov
sahf
sbb
sub
push
in
cs
inc
pop
jmp
sti
call
loopne
and
ljmp
mov
cmp
pop
pop
adc
mov
dec
push
js
mov
imul
cmpsl
xchg
cmp
inc
sub
lret
cmc
lock
in
imul
mov
mov
movsl
xor
mov
jo
mov
lea
and
mov
adcl
push
mov
lock
or
mov
into
insb
inc
outsl
into
lods
and
xorl
cmpl
shll
repnz
jp
test
aas
push
addb
into
inc
add
data16
push
mov
push
mov
leave
fcomps
enter
pop
jnp
jl
push
pop
inc
mov
lods
test
movsl
sbb
xor
test
sub
push
jb
mov
repz
jno
push
sub
and
pop
sti
mov
pop
mov
jl
or
jae
xchg
dec
mov
call
es
add
movl
movl
mov
jmp
movl
movl
jb
push
pushl
pushl
push
pushl
push
pushl
call
incl
mov
and
mov
xor
xorl
sbb
movzbl
sbb
mov
mov
sub
sub
mov
cmpl
movl
mov
jmp
mov
mov
jb
pushl
pushl
push
push
call
movzwl
xor
adc
add
inc
mov
mov
adc
mov
xor
notl
shl
cmpl
not
mov
mov
jmp
movl
jl
pushl
call
or
xorl
xor
sbb
adcl
movzbl
sub
xor
sbb
or
cmpl
movzbl
mov
mov
jmp
movl
not
jae
pushl
pushl
push
call
mov
sub
orl
adc
neg
mov
or
mov
mov
or
mov
and
mov
notl
shrd
xorl
shr
mov
cmpl
mov
mov
mov
jmp
movl
mov
jl
pushl
pushl
push
pushl
pushl
call
mov
mov
adc
xor
or
sub
addl
addl
mov
cmpl
movl
not
jmp
movl
jle
push
pushl
call
adc
xorl
or
subl
movl
or
add
add
mov
orl
xor
xorl
xor
or
shl
negl
jmp
test
out
pop
mov
mov
frstor
adc
push
clc
adc
dec
cmp
push
mov
inc
adc
lds
jns
test
aas
mov
insl
mov
inc
lods
sub
movb
nop
sub
outsb
push
cmp
inc
lods
push
push
sbb
inc
int3
push
mov
shll
push
ss
into
xor
psubusb
adc
imul
xor
repnz
js
mov
movsb
pushf
inc
leave
addr16
daa
mov
mov
sub
xchg
stc
dec
cltd
fdivrs
jmp
roll
ss
outsb
enter
inc
dec
sub
pop
cmp
push
into
arpl
cwtl
roll
nop
fbld
call
lock
fistl
sbb
ja
mov
out
sub
dec
lea
cmp
push
hlt
dec
push
popfw
mov
mov
xchg
sub
test
or
cld
jae
nop
pop
xchg
jecxz
inc
mov
cmp
fs
dec
add
sarl
cli
out
out
mov
xor
adc
xchg
mov
inc
dec
adc
and
sahf
sub
mov
mov
adc
push
jecxz
xchg
int
cltd
lock
ret
pop
rcll
ret
cmc
xor
mov
dec
stos
dec
ljmp
ret
push
dec
stc
sub
mov
xchg
add
mov
sub
cld
daa
out
cs
ret
cmpsb
mov
mov
sub
fmul
ret
cmovno
mov
mov
pop
and
imul
xor
aas
xchg
call
mov
xchg
stos
dec
pop
cld
in
push
cltd
add
repz
inc
cmp
shrl
adc
mov
notb
outsb
jmp
addr16
cmp
jo
adc
sbbl
fcmovnbe
jae
ljmp
loop
bound
xlat
daa
outsb
push
std
xchg
int3
pusha
jle
shll
les
arpl
jno
inc
inc
out
les
cmc
or
ret
inc
aas
stc
add
push
push
loopne
outsb
jl
in
push
shrb
sbb
mov
insb
add
fs
xor
jbe
adc
cld
inc
and
push
lret
lock
pusha
push
dec
cmp
push
mov
je
sub
mov
fisubl
jge
les
or
inc
dec
xchg
cmpb
adc
xlat
sbb
gs
les
mov
fninit
xor
xchg
insl
mov
jle
aam
adc
jnp
or
or
lock
inc
jecxz
mov
pop
adc
push
mov
lods
je
cmp
test
pop
pop
hlt
mov
stc
sub
add
mov
pusha
ret
xor
sbb
dec
xchg
mov
mov
add
popa
lret
int3
mov
and
push
or
mov
mov
pop
cmp
mov
and
test
mov
in
mov
adc
sbb
gs
pusha
lock
into
dec
fstl
or
mov
xlat
cmp
push
xor
xchg
cmc
arpl
cld
shll
cmp
nop
call
sub
nop
repz
out
lret
inc
mov
xchg
or
popa
jno
lods
fsubl
bound
xor
out
adc
stos
jp
in
add
dec
icebp
jle
pop
mov
leave
imul
loop
mov
mov
fists
repz
test
and
loop
cmp
ficoms
fwait
jne
testl
and
and
jg
repnz
push
frstor
loope
sub
scas
mov
fs
in
and
pop
xchg
and
pop
push
cld
cmp
sbb
inc
mov
jb
push
aam
lret
push
in
mov
dec
je
xor
mov
lea
test
lea
ret
roll
cs
pop
insb
jg
in
in
xor
push
xor
inc
jnp
loopne
jecxz
mov
sbb
dec
and
cmc
and
push
mov
out
out
stc
sbb
fwait
popf
es
into
jecxz
pop
mov
mov
adc
mov
sti
test
shlb
int3
pop
test
pop
ljmp
add
push
arpl
xchg
sbbb
notl
sbb
xchg
ret
xor
sub
or
xchg
xor
sti
ja
dec
je
js
mov
sbb
or
orb
cmpsl
mov
pop
sbb
dec
dec
sbb
add
jb
adc
enter
mov
jbe
jbe
dec
or
lock
repnz
adc
sub
inc
cwtl
clc
pop
or
into
cld
xchg
aaa
mov
dec
in
mov
mov
sbb
pushf
dec
movsb
xlat
push
jl
pushf
push
jle
mov
stos
cmpsb
add
fcoms
mov
les
jno
stos
jae
cmp
out
lcall
mov
sbb
add
mov
bound
mov
and
cmpsb
clc
dec
sub
inc
jge
or
iret
xchg
dec
push
inc
imul
cmp
add
jl
or
lods
popa
push
mov
addb
mov
xchg
scas
nop
ss
icebp
loope
rclb
adc
ja
repnz
pop
cmp
adcl
add
daa
aad
enter
popa
outsb
out
or
push
shrb
out
mov
inc
sahf
int3
shlb
lods
sub
sub
outsb
ret
je
stos
xchg
movsb
sub
add
addl
jl
lahf
inc
lods
inc
imul
mov
xchg
enter
push
insl
and
pop
mov
mov
xor
mov
outsb
mov
add
addl
and
xor
cmpl
mov
int
repz
cld
sarb
loop
cmpsb
push
push
push
cmp
cwtl
dec
cmc
jnp
jge
and
xchg
pop
repnz
shll
in
jge
cmc
jp
in
aaa
ljmp
call
or
mov
fwait
data16
outsl
je
xchg
cmpsb
xchg
lea
or
mov
xor
or
sub
mov
subl
shrd
shr
mov
cmpl
mov
movzbl
jmp
movl
jb
push
push
call
mov
xor
sbb
sbb
andl
sbb
sbb
mov
mov
cmpl
mov
mov
notl
jmp
movl
mov
jne
pushl
push
push
push
call
add
mov
or
addl
xor
mov
add
mov
adc
adc
xor
mov
andl
xor
adcl
or
shl
or
imul
mov
mov
addl
shrd
xorl
mov
incl
mov
andl
xor
shr
incl
mov
cmpl
movzbl
movl
mov
mov
jmp
movl
jg
pushl
push
push
call
adc
mov
or
mov
dec
andl
adc
adc
sbbl
mov
xor
or
subl
shl
sub
jmp
jl
mov
xor
xor
adc
push
clc
adc
jge
adc
mov
or
xchg
stos
jne
xchg
pop
mov
add
lea
fstl
push
fxch
cmp
jbe
sub
and
fcompl
nop
jmp
ret
mov
mov
pop
pop
dec
xor
cld
mov
pop
or
les
xor
imul
xchg
lahf
ja
sbb
fistps
and
xchg
push
movsb
fisubrl
cmp
inc
lds
mov
mov
xor
ret
mov
roll
cmp
das
push
loop
aaa
ficomps
xor
pop
loope
push
daa
mov
mov
cmc
pusha
into
dec
jo
aas
pop
xor
cmp
mov
pop
sbb
movl
pusha
add
or
pusha
std
and
psubusw
or
clc
and
out
or
out
outsb
mov
jecxz
jmp
sarb
xchg
ja
shr
test
mov
pop
sbb
mov
sub
sti
pushf
and
jnp
mov
aaa
aaa
scas
pushf
lds
aam
inc
pushf
fcoms
jno
mov
inc
xchg
ss
popa
xchg
xorl
js
subl
fcmovu
push
sbb
scas
movsb
xor
xchg
ljmp
jo
and
cmp
test
out
lock
stos
push
nop
mov
xor
call
out
xchg
mov
sub
push
mov
inc
and
mov
mov
sahf
fprem1
daa
test
clc
sub
movsl
daa
ljmp
in
imul
adc
call
mov
into
divb
sbbl
push
pushf
xor
enter
pop
call
adc
das
popf
dec
jno
xchg
ss
fcmovnu
xchg
add
sbb
les
mov
fdivrl
sbb
xor
jmp
cli
adc
or
xchg
movsl
fimull
dec
into
ror
loope
arpl
mov
push
movsl
xchg
mov
add
sbb
mov
fwait
dec
xchg
push
pop
sbb
daa
adc
xorl
and
mov
jbe
sahf
cmp
fiadds
fdivrl
sbb
cmpb
push
jg
sub
push
lods
stos
out
movsb
test
xchg
or
xor
adc
xor
pop
cmpsb
adc
fcmovnb
clc
xor
dec
xchg
stos
cwtl
add
popl
je
inc
xchg
add
pop
push
notb
add
pop
test
push
das
popa
dec
fnstenv
pushf
push
jbe
xchg
xchg
fistps
lock
aad
ja
jmp
lahf
pop
sbb
sbb
xorl
gs
or
std
jp
lods
xorb
adc
insb
dec
xchg
xor
push
push
pop
xor
lods
add
inc
adc
cmp
scas
test
shlb
push
cmp
callw
mov
push
sub
je
divb
xchg
pop
sbbb
cli
rorl
or
adc
sbb
or
mov
sub
jne
adc
sub
dec
adc
scas
pop
in
outsb
int
xor
fs
or
mov
add
dec
sub
pop
cmp
pop
in
mov
mov
sub
sbb
sqrtps
insl
outsl
push
fcmovnu
xor
bound
push
jns
push
iret
outsb
clc
sub
test
sub
and
push
loop
flds
insl
sti
enter
sbb
push
push
cltd
mov
jae
inc
mov
inc
test
xchg
pusha
adc
pop
loope
stc
lret
mov
inc
adc
and
pop
repnz
xchg
jecxz
mov
dec
mov
leave
add
clc
mov
shr
pop
lock
cld
or
testb
data16
push
stc
dec
push
xor
add
pop
lods
mov
pop
rcrl
inc
pop
xchg
dec
sbb
pop
mov
pop
rorl
jne
jge
jno
enter
out
mov
jb
add
dec
or
ret
xchg
jae
sub
mov
jne
shrl
mov
inc
out
mov
pop
std
inc
iret
mov
sti
sub
aam
ss
lds
adc
cmp
mov
aaa
out
adc
test
test
push
mov
mov
jo
ja
push
inc
and
jo
fistl
call
pop
mov
test
std
xchg
mov
xor
iret
cmp
lock
mov
pop
aaa
xor
scas
xorl
lods
aas
int3
mov
std
xchg
lods
mov
push
cmc
and
inc
and
jmp
mov
dec
sub
push
movsb
sub
mov
inc
or
xlat
xchg
mov
cmp
dec
mov
add
inc
mov
outsb
sbb
je
fcompl
insl
fsubl
or
ret
scas
scas
popa
ficoml
repnz
mov
dec
fdivs
inc
mov
inc
and
vpcmpeqd
push
sbbb
ljmp
xor
inc
cld
pop
mov
pop
xor
sbb
sub
xlat
xor
popf
imul
je
insl
fdivl
xchg
mov
xchg
movsl
in
mov
test
cwtl
mov
and
pop
outsb
test
sub
mov
call
loop
gs
aad
or
push
sbb
mov
nop
outsb
pop
fisttps
mov
mov
sub
inc
int
ljmp
mov
adc
mov
cwtl
imul
pop
and
sbb
leave
daa
inc
rcrb
mov
jno
out
xchg
aad
cli
or
std
outsb
stc
jmp
jb
das
mov
int3
ljmp
xchg
jmp
pop
repnz
les
enter
test
cmpsl
inc
inc
xor
inc
ljmp
xor
insb
leave
jle
outsl
fs
add
or
stc
fidivrs
shl
add
ljmp
push
mov
int
sbb
int3
inc
dec
xor
mov
repz
add
push
iret
cmp
jmp
inc
andb
push
cmp
loope
test
pop
pop
push
mov
cmp
xor
mov
mov
fld
mulb
xchg
push
xchg
cmpsb
pop
ds
mov
dec
mov
movl
cmp
mov
movl
jg
or
mov
orl
mov
shrd
xorl
mov
mov
subl
xor
shl
addl
xor
subl
or
addl
shr
mov
mov
sbb
mov
and
mov
shrd
shr
mov
and
mov
mov
xor
subl
xor
andl
jmp
pop
leave
sti
subl
xlat
or
fcmovu
push
mov
push
clc
adc
add
aas
mov
inc
fildll
lock
cld
inc
or
iret
or
outsb
and
dec
sbbb
loop
stos
popa
push
popf
test
insb
inc
ficompl
test
mov
lea
xlat
mov
mov
sub
dec
ficoms
rorl
or
and
xchg
add
das
jg
flds
notl
sub
jmp
push
test
push
sub
call
and
add
xor
andb
ret
mov
hlt
in
cli
mov
mov
cmpb
jns,pt
sbb
or
test
ret
pop
das
add
les
jbe
sbb
mov
mov
xchg
xor
xchg
push
jno
jns
push
dec
mov
popa
fisubrl
test
or
sub
scas
jg
jecxz
fisttpl
and
out
mov
adc
mov
inc
and
pop
pop
xor
dec
and
xchg
mov
mov
push
insl
dec
and
cmpsb
sbb
sub
int3
jnp
stos
jmp
and
inc
stos
lcall
sub
push
sub
cwtl
sbb
cmpsl
add
mov
pusha
lahf
mov
add
inc
loope
scas
xchg
mov
daa
cli
clc
push
scas
fmul
scas
out
daa
cmp
mov
push
movsb
inc
or
mov
mov
pop
jmp
pusha
and
mov
or
pop
out
or
fmul
jno
stos
test
movb
les
jno
dec
clc
out
pop
push
dec
sub
and
sub
das
aas
test
cli
je
or
orb
jnp
push
push
shlb
mov
adc
lock
inc
stos
jl
popf
fcmovb
mov
imul
xchg
cmpsb
call
ret
dec
stos
jno
inc
inc
test
dec
ljmp
xor
ljmp
push
aas
or
pop
push
xchg
cmpsb
daa
leave
out
mov
add
addr16
jg
mov
add
mov
xor
gs
adc
pop
push
adc
imul
das
sahf
lods
mov
cli
std
pusha
cmp
sub
sub
inc
or
dec
popf
insl
push
jg
lds
push
cmp
mov
mov
mov
jns
mov
mov
lcall
out
popw
dec
nop
inc
jp
insb
lods
outsl
mov
or
adc
ds
aad
push
les
push
outsb
jbe
repnz
mov
jmp
mov
imul
xchg
mov
test
ss
test
iret
enter
push
sub
xchg
loopne
sbb
aaa
inc
pop
jbe
xchg
enter
jmp
and
xchg
adc
pushf
add
sbb
lahf
mov
in
inc
push
cli
pushf
add
mov
jnp
fsubp
iret
ds
rorl
adc
add
das
ror
pop
insb
adc
or
sub
inc
pusha
in
orl
pop
popa
jnp
out
and
sar
popf
inc
xchg
jge
add
push
push
sbb
add
scas
ret
enter
imul
aas
bound
and
loop
jmp
movsl
push
xchg
in
cmp
loopne
loopne
jno
pop
int3
sahf
out
imul
pushf
add
cmp
cmp
mov
dec
jb
popl
je
out
jo
inc
push
jge
sbb
xor
mov
jmp
cmp
cmp
pop
subl
xor
pop
cmp
enter
fwait
mov
pop
xor
hlt
sbb
mov
cwtl
adc
mov
inc
push
subl
xlat
xchg
mov
and
addb
pop
neg
jmp
dec
shrb
adc
repnz
mov
rcl
icebp
pop
jo
push
inc
in
ja
in
xchg
addl
iret
push
fistl
and
mov
addl
mov
pop
pop
adc
xlat
stos
jge
jo
dec
jo
jo
mov
mov
inc
xchg
imul
in
ret
cmpsb
mov
ja
imul
loop
fmul
pop
daa
push
jo
dec
icebp
xor
ja
aad
cmp
jmp
lret
xor
ret
push
sahf
loope
mov
js
mov
call
pop
inc
cmp
stos
in
sub
incb
pushf
addb
and
xchg
cmc
pusha
cld
addr16
and
push
in
outsl
shlb
adc
into
cmp
mov
sub
pop
in
xchg
icebp
xor
int3
out
dec
mov
pushf
cld
mov
sub
imul
icebp
jmp
addr16
ficoms
sbb
mov
xor
int
clc
pop
pop
mov
add
loopne
stos
leave
iret
and
fcompl
test
in
sbb
pop
aad
data16
adc
loope
cmp
adc
inc
imul
cmpb
add
jl
mov
iret
xchg
out
shll
loop
and
fldenv
hlt
rolb
add
sbb
mov
std
lret
lcall
rclb
push
subl
mov
cwtl
sub
lahf
out
pop
inc
sbb
sub
jb
repz
cmp
push
sar
bound
inc
xchg
fcoms
mov
aaa
decl
cs
or
div
cli
loop
roll
pop
xor
cmp
adc
and
mov
and
xchg
das
xchg
fwait
out
cmc
rolb
in
movsl
mov
shlb
sbb
out
push
push
sub
outsb
add
in
mov
fwait
add
jge
cmp
rcrb
mov
inc
cmpsl
dec
pop
sarb
enter
aas
cli
cld
pop
popa
in
fadds
aam
out
aam
pop
scas
push
xchg
push
sub
stos
jae
cltd
or
mov
xor
cmp
push
int3
imul
std
ret
lret
mov
mov
inc
test
loope
sbb
adc
xlat
daa
repnz
adc
clc
inc
inc
jl
in
mov
fsubr
pop
test
jl
movl
dec
inc
cli
and
ljmp
shr
xchg
rorl
stos
clc
jno
jne
sarb
pop
leave
outsb
push
or
shl
andl
imul
jmp
mov
or
push
and
ljmp
xor
push
clc
adc
adc
push
jge
dec
in
mov
jns
aad
pop
rcl
aaa
jno
scas
pop
inc
into
sahf
mov
das
mov
iret
xchg
sub
xchg
jbe
lahf
and
sbb
cmpsb
into
sub
cmpsl
repnz
lock
mov
loopne
rolb
js
movsl
out
dec
int
push
mov
ret
clc
test
loopne
fsubrp
inc
xor
or
jmp
sbb
jecxz
cmp
xchg
ja
push
xor
inc
and
je
or
mov
push
sar
push
jp
mov
js
fistl
popa
iret
mov
divb
setbe
filds
rcll
fstp
repz
lret
aam
in
daa
aaa
sub
jae
in
xlat
adc
add
addr16
lahf
enter
jo
xchg
sbb
mov
adc
in
push
incl
xor
push
and
call
dec
cmp
std
lret
or
popf
ret
ficoml
push
jl
aas
xchg
stc
out
sub
mov
xor
cmpsl
inc
or
add
pusha
js
xchg
mov
cmp
jne
inc
andb
rolb
inc
sub
insb
out
call
pop
popa
jge
pop
fisubl
js
stc
xchg
cwtl
jbe
lret
jle
outsl
and
imul
xchg
loopne
sbb
push
mov
scas
pusha
cmpsb
add
pop
mov
sbb
scas
xorb
xchg
call
cmp
xor
out
fsubrs
loop
mov
test
cli
incl
lds
cld
stos
das
xchg
pop
sbb
ret
test
push
aaa
fstpl
push
lods
movsl
push
cmp
push
jl
cmc
sub
jne
lcall
inc
or
mov
sahf
fidivl
insl
sarb
adc
iret
rcrl
fmull
push
inc
lahf
mov
sub
hlt
xchg
mov
inc
imul
loope
adc
sub
ret
pop
into
push
enter
sbb
int
xor
jmp
pop
xchg
push
mov
sbb
fs
inc
mov
cmp
mov
pop
push
test
or
dec
int
jg
jge
out
dec
xchg
mov
out
repnz
pop
out
fisttpll
xchg
arpl
enter
bound
sbb
push
pop
jnp
testl
xchg
push
aas
cmp
jmp
jl
pop
movsl
shrb
xchg
rolb
mov
sarb
xchg
mov
push
jle
fisubrs
jecxz
pop
adc
jle
outsb
jge
in
sbb
pop
out
insb
popf
or
xchg
pop
aad
and
fidivs
jp
cmp
adc
xchg
daa
jecxz
outsb
mov
lea
pop
shlb
rcrl
xor
jnp
packuswb
movsl
pop
int3
mov
inc
push
insl
xlat
je
add
push
inc
adc
stc
test
out
xchg
ljmp
xor
sahf
andl
mov
hlt
push
in
fs
mov
out
xchg
and
sub
fimuls
das
pop
and
xor
pushl
cmpb
repnz
aaa
or
add
inc
add
ret
lods
insl
rorb
cmp
dec
push
cmpsb
enter
ret
cmp
xchg
arpl
mov
aam
andb
int
das
aaa
cmc
mov
lock
and
dec
cmp
hlt
notl
gs
fbld
xchg
xchg
stos
outsb
dec
mov
pop
push
popa
fcompl
add
ret
sub
arpl
and
mov
sbb
pop
mov
cmc
mov
in
imul
in
sbb
cmpsl
cmpsl
mov
cmp
syscall
outsb
mov
sahf
fcmovb
imul
pop
mov
or
test
inc
pusha
pop
and
movsb
loope
sbb
inc
and
dec
xor
cmp
xchg
lea
enter
incb
les
mov
push
jne
mov
mov
mov
les
push
cmp
xacquire
sarl
lods
pop
roll
adc
dec
out
mov
decl
push
lock
shlb
xchg
cmp
sahf
pop
xchg
mov
pop
jnp
dec
lea
movsl
sub
mov
xor
push
jle
das
mov
mov
lea
imul
xor
xchg
mov
pshufw
ja
int3
push
xchg
lock
push
cmp
push
inc
cmp
xor
push
pop
inc
cmp
dec
jo
mov
inc
incb
dec
mov
cmp
scas
cmpsb
aad
outsl
insb
xor
scas
pop
into
and
xchg
inc
cmc
add
inc
cmpsb
or
pop
shlb
arpl
aas
mov
stc
mov
lods
mov
lret
or
adc
rolb
and
dec
int
lds
add
shlb
cltd
ljmp
xchg
inc
addb
test
xor
mov
jae
push
sbb
push
push
pop
repz
fsubr
inc
sub
addr16
arpl
or
pop
ret
and
inc
out
in
mov
stc
xor
stos
adc
jbe
mov
jp
cvtps2pi
lea
pusha
sbbl
aad
mov
jbe
xlat
out
stos
call
dec
push
outsl
sub
cmp
push
imul
or
roll
jns
je
fldl2t
movsl
test
xchg
push
aam
testl
leave
popa
mov
outsb
xor
pop
in
pop
mov
lds
dec
jmp
mov
jnp
call
mov
adc
mov
outsl
rclb
mov
sub
arpl
scas
dec
push
stc
loopne
mov
pop
inc
jnp
arpl
outsl
stc
jbe
fwait
pop
repz
test
push
lea
mov
loop
cmp
inc
and
lods
popf
cmp
lahf
test
ret
xor
aas
fsubrl
cmpsb
popa
add
gs
adc
aaa
and
adc
inc
leave
sbb
out
push
inc
sbb
cmp
mov
mov
cwtl
pop
loop
shrl
test
pop
and
lods
ja
lahf
repnz
dec
fs
stc
add
jle
clc
fimull
lcall
xor
lea
or
adc
mov
add
mov
xorl
mov
orl
shrd
mov
orl
jmp
or
dec
addr16
adc
push
add
outsl
adc
push
clc
adc
imul
cld
dec
push
push
dec
js
in
loopne
cmp
ljmp
test
arpl
and
sbb
ss
test
adc
sub
mov
dec
je
outsw
jmp
test
or
fstl
cmp
jge
loope
lahf
loope
pop
movsb
into
fwait
std
aas
je
test
subb
jns
shrl
test
add
aaa
lock
ljmp
sbb
adc
test
aaa
shr
push
mov
ret
push
int3
push
lcall
shr
scas
es
lock
int3
std
stos
je
add
sub
or
sub
adc
lcall
rclb
cmc
mov
outsb
lahf
sbb
cmp
in
add
jae
pop
push
mov
lret
sub
mov
mov
mov
mov
sbb
mov
jp
int3
push
ret
fcoms
repnz
arpl
or
dec
xchg
gs
push
cmp
xor
leave
daa
and
rclb
mov
mov
push
aaa
call
mov
out
jo
mov
push
repnz
pop
repnz
call
les
jmp
sbb
xor
loopne
dec
jmp
shll
or
adc
mov
inc
cltd
and
addr16
inc
je
sbb
mov
push
test
movsb
int
lahf
jmp
adc
inc
sub
mov
xchg
mov
pop
or
mov
dec
dec
std
into
mov
mov
mov
sub
nop
jno
sbb
icebp
sbb
fadds
lcall
or
imul
jecxz
faddl
push
xor
adc
add
mov
arpl
add
cmp
js
mov
in
dec
rcll
fldcw
imull
push
lds
mov
int
or
jecxz
push
pop
pushf
and
push
lds
xor
enter
or
xor
sub
xlat
leave
pop
aam
and
sub
mov
outsb
sub
pop
add
or
jnp
jae
std
stc
xchg
icebp
mov
mov
mov
sbb
in
jge
cmpsb
fsubl
test
lcall
xor
loopne
insb
push
xchg
pop
cmpsb
mov
xchg
sbb
mov
in
pop
daa
loop
popa
int3
xor
adc
stc
xlat
push
jmp
test
jbe
jb
xor
jnp
scas
je
or
icebp
pop
xchg
cmpsb
call
scas
inc
dec
mov
popa
or
adc
aaa
repz
cmp
inc
xor
xor
inc
cli
or
xchg
and
cmp
mov
lea
inc
mov
imul
out
inc
push
sbb
repnz
out
imul
addr16
jge
scas
mov
sti
mov
jmp
mov
mov
add
xchg
jne
add
dec
sbb
aas
add
sbb
in
mov
pop
int3
inc
lods
inc
mov
adc
cmp
and
shl
je
call
clc
pop
mov
jb
lret
ja
mov
inc
add
mov
mov
mov
je
addr16
cs
imul
xor
jb
clc
shlb
mov
sub
or
cwtl
jo
cwtl
ss
fsts
xchg
js
in
cld
shlb
scas
pop
and
sub
into
insb
adc
mov
les
mov
sub
popf
adc
pop
dec
shlb
ret
mov
fsubrl
or
pop
ljmp
mov
rcrb
int3
jae
daa
xor
mov
fidivl
jg
je
push
hlt
aas
jae
mov
jl
cmp
mov
xlat
in
mov
or
sbb
insb
mov
shl
pushf
je
lods
in
aas
sub
sti
jns
ret
jl
ret
aam
gs
incb
push
inc
repz
mov
sti
clc
cli
sbb
enter
xchg
add
and
and
shrl
adc
adc
ds
inc
bound
jmp
or
stc
mov
in
dec
aaa
inc
jle
andb
mov
cmp
inc
mov
xchg
das
sbb
loope
aam
jmp
std
fwait
and
xor
cmp
dec
xchg
arpl
mov
pop
lret
das
xchg
lods
or
mov
lcall
test
sahf
adc
lods
mov
shl
pop
jg
fs
nop
adc
ljmp
lret
sub
add
dec
out
jge
xchg
popf
test
aaa
lahf
int
ds
in
add
xorl
inc
ret
es
pusha
shrb
cwtl
data16
jp
es
push
ret
and
mov
iret
xchg
pop
ret
rcr
push
fimull
test
outsl
loop
outsb
mov
out
clc
enter
aas
or
adcl
jecxz
cmp
cli
inc
in
fistpl
push
and
mov
lret
loop
loopne
lods
push
divl
sarb
gs
iret
push
insl
lret
testl
dec
mov
or
jp
stc
aas
scas
cli
test
icebp
aaa
cmp
add
mov
or
inc
pop
ss
repnz
in
push
ds
cmp
inc
jns
jnp
push
mov
mov
stc
xchg
or
shll
add
lret
jecxz
mov
test
inc
icebp
jmp
int
mov
cltd
pop
inc
xchg
xchg
cli
bnd
sub
sub
and
or
outsb
in
shll
push
sub
mov
clc
rclb
fld
movsl
pop
xor
cmp
mov
mov
imul
jo
xlat
repnz
mov
addl
add
push
shl
xchg
dec
mov
int
shlb
movsb
fcmove
or
and
push
int3
dec
rcrl
outsb
psllw
ret
inc
fmull
adc
add
int
inc
add
jge
orl
shl
xor
orl
or
shr
xorl
mov
sub
mov
mov
mov
shrd
shr
jmp
ljmp
sub
pop
lahf
hlt
adc
clc
adc
xchg
xchg
mov
pop
xor
mov
repnz
push
aas
movsb
pop
das
mov
cmp
cmp
les
aad
int
out
xchg
jecxz
jmp
mov
mov
arpl
sahf
add
pop
sbb
pop
ret
fmull
lret
add
push
clc
mov
lcall
mov
xchg
cmp
push
out
sub
pop
adcl
movsb
mov
sahf
push
pop
lods
mov
outsb
sarb
lcall
sbb
sub
add
stc
aad
or
js
xlat
fwait
in
sbb
aad
cmc
jns
jns
ljmp
pop
rcrl
imul
insl
add
sub
and
xchg
xor
xor
cmp
or
lcall
and
cmc
push
sub
not
push
int
loope
pop
cmp
xchg
add
pop
lahf
lret
in
std
dec
call
mov
dec
dec
cmp
enter
dec
mov
cmp
jo
cmp
or
sahf
sbb
jno
addl
xor
insb
insl
sub
xor
fsubs
inc
pop
repnz
mov
push
push
adc
rcr
sahf
sbb
sub
dec
std
outsl
clc
shl
out
or
mov
outsb
call
dec
mov
mov
repnz
aas
dec
mov
in
adc
or
fmulp
push
rcl
cld
fdivs
insb
daa
pop
mov
mov
mov
or
pop
jns
sarb
push
mov
mov
cld
add
nop
divb
mov
mov
xchg
push
scas
cmp
scas
clc
mov
cmp
pushf
cmp
or
call
mov
sub
repz
mov
add
mov
das
lds
cmp
push
fidivl
stc
cmp
and
out
xlat
sarb
mov
leave
mov
lea
xchg
cli
add
pusha
push
insb
ficoms
js
inc
out
lret
jae
movsl
fcomi
cmp
psubsb
cmp
pop
mov
je
fbld
sub
aad
cli
pop
adc
les
movsb
cs
ss
xor
add
lret
push
and
jge
mov
lods
je
mov
or
stos
shrl
lods
and
int
or
add
loopne
pop
fnsave
jg
daa
enter
aaa
pop
xor
fadds
rep
sub
shrb
out
push
adc
out
cld
mov
cwtl
mov
lret
adc
aas
dec
pusha
sub
jmp
leave
jmp
xchg
xorl
mov
lock
mov
jns
fadds
ficoml
aaa
mulb
mov
mulb
sbb
sbb
and
movl
and
mov
mov
mov
out
mov
dec
pop
mov
scas
call
sub
mov
es
dec
or
mov
mov
push
mov
cmp
add
in
pop
and
iret
aam
xchg
sbb
fnstenv
popl
dec
push
mov
cli
or
out
aam
lcall
xor
or
jmp
packuswb
inc
mov
outsl
gs
ljmp
clc
outsb
add
mov
lret
xchg
insl
mov
mov
xchg
push
mov
and
or
popf
pop
aam
add
sbb
adc
adc
test
jle
jl
cld
pop
scas
ljmp
mov
into
shlb
scas
in
jns
popf
mov
and
test
cmpsb
pop
sub
lahf
xchg
adc
scas
shl
fmuls
push
mov
lahf
andb
cld
pop
rcll
divb
inc
ficompl
test
mov
xchg
pop
loop
icebp
shll
out
mov
fidivs
stos
cmp
adc
xor
movsl
adc
cmp
cmpsb
add
xor
xchg
pop
aam
lcall
das
push
test
sbb
mov
arpl
pop
insb
daa
icebp
xchg
inc
mov
xchg
sub
addr16
bound
mov
pop
repz
fwait
test
inc
mov
jp
icebp
inc
jae
pushl
icebp
and
iret
fwait
inc
push
adc
inc
or
repz
adc
cmc
filds
push
mov
arpl
lcall
cs
in
jp
xchg
push
adc
dec
and
js
pop
or
sub
aas
xor
inc
enter
ficoml
nop
or
xor
lret
dec
aad
and
pushf
cmp
cmp
ja
and
sarl
es
xor
mov
stc
sti
or
out
pop
sub
aam
stc
lcall
mov
fnstcw
jg
inc
xor
mov
jmp
mov
mov
mov
popf
mov
adc
cli
mov
int3
aas
scas
gs
outsl
sbb
xchg
dec
clc
iret
ja
jns
pop
insb
jns
lcall
outsb
pop
ret
mov
setp
rcl
cld
mov
sbb
pop
out
cmp
jl
mov
scas
into
cmp
xor
cmpsl
fwait
xchg
stos
pop
pop
mov
mov
xchg
das
mov
ja
push
adc
dec
dec
mov
ds
or
js
jno
rcrl
test
mov
dec
jl
cmp
ljmp
xorl
jge
inc
cmp
ja
push
push
cli
in
fmull
dec
fwait
xchg
sub
cmpsl
jmp
sbb
scas
sub
les
sub
js
xlat
sbb
jg
fisttpl
mov
shl
or
stc
inc
jp
sbb
lret
stos
push
ret
in
notl
shl
push
lret
or
pop
subl
adc
cs
repz
addr16
mov
lea
or
xlat
lcall
push
adc
dec
jl
jb
aas
sub
imul
cmp
in
in
push
data16
clc
fwait
daa
pusha
imul
dec
pop
mov
xor
mov
xor
add
sub
mov
mov
xor
xor
or
shl
add
add
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
mov
movl
mov
mov
movl
mov
movl
mov
movl
mov
mov
mov
shrd
shr
mov
mov
jmp
out
add
and
xlat
es
test
inc
dec
xor
fists
adc
push
clc
adc
and
cli
sub
insb
filds
fs
mov
mov
out
lret
dec
or
je
cmp
push
ret
jno
jb
mov
xchg
or
adc
adc
fs
mov
lret
mov
or
aam
dec
mov
dec
test
xor
stos
fdivrp
xchg
jecxz
xchg
xchg
xchg
cmp
cmc
outsb
xchg
aad
out
outsb
sahf
pop
cli
rcrb
mov
jnp
out
jae
xor
movsb
inc
fisubrs
cmp
push
pop
xchg
mov
add
rcr
cs
cmp
int3
pop
lahf
shll
movsb
mov
iret
add
dec
push
in
lcall
loop
xchg
ljmp
ret
xchg
fists
add
push
repnz
int3
adc
lds
and
or
hlt
mov
cmp
es
out
pop
das
pop
sub
pop
dec
push
xor
push
cmp
dec
inc
es
add
fisubrl
sbb
jp
sbb
adc
push
push
insb
stc
and
out
in
mov
imul
jb
sub
rcr
fcmovnb
xchg
pop
mov
xchg
mov
inc
cmpsl
mov
and
cmp
gs
popf
sbb
mov
das
sbb
fxam
inc
aas
fldln2
dec
jecxz
adc
xor
out
adc
pop
push
scas
dec
stc
cltd
or
mov
and
sbb
cli
xchg
mov
cld
xor
adc
clc
inc
movsb
mov
in
fwait
pusha
jp
mov
cmpsb
rorl
jbe
fiaddl
xor
mulb
push
adc
and
mov
push
ja
sahf
inc
jnp
lods
sub
mov
inc
out
stos
pop
imul
and
in
sbb
int3
inc
rorb
into
cmpb
mov
test
and
jbe
pusha
xor
call
sbb
xor
dec
mov
fwait
loopne
in
inc
push
lods
adc
lret
test
scas
mov
mov
data16
cmp
repnz
out
leave
jo
addr16
mov
add
loope
rcll
fucomp
xor
loope
sub
pop
pop
fdiv
stos
mov
mov
rolb
loope
fs
or
mov
sbb
add
loope
inc
xor
cs
dec
push
lods
mov
jns
or
cli
outsb
cmp
insl
leave
mov
fstpl
sbb
lcall
enter
repz
push
ds
pop
push
aam
test
xlat
mov
ficomps
pop
unpcklps
mov
adc
aas
sbb
dec
xchg
in
lea
js
fwait
repz
mov
pop
fcoml
push
push
loope
movsl
in
push
cmp
dec
je
cmp
jmp
mov
addr16
mov
cmp
xor
sbb
scas
cmp
dec
ret
push
pop
and
out
push
popl
mov
cli
lods
push
push
popf
or
cmp
push
test
out
pop
and
lahf
loope
add
add
sub
sub
bound
fwait
std
mov
xlat
xchg
dec
int
rolb
sarl
in
jp
leave
xchg
repnz
adc
popf
dec
inc
mov
xor
fnstsw
fistpl
lahf
sub
out
iret
loopne
sti
xor
jo
add
xchg
adc
idivl
and
into
and
dec
ret
in
ds
add
sub
popf
ja
xor
sbb
fstpl
popa
xchg
adc
ret
test
push
ljmp
jnp
arpl
jmp
jnp
inc
push
cmc
sahf
mov
mov
pop
jg
cli
xchg
mov
push
movsb
rep
aas
sbb
inc
lods
lcall
das
jl
xchg
fcoml
mov
mov
out
xchg
jbe
mov
inc
popa
pop
jmp
dec
dec
hlt
add
roll
mov
push
ja
push
inc
lcall
adc
loopne
lret
flds
daa
cmc
test
lret
es
stos
imul
adc
xchg
xchg
xchg
jnp
push
sub
fisubrl
mov
sbbl
sbb
ljmp
fs
push
add
enter
push
inc
out
mov
enter
clc
cmpsb
mov
xor
incb
mov
pmuludq
andb
xchg
rep
pop
adc
or
mov
iret
loop
in
xlat
fbld
lods
jo
insb
inc
mov
jle
add
stc
ja
dec
mov
rclb
xchg
test
js
add
jno
push
vmptrst
or
dec
aam
in
cmp
ss
les
call
test
lds
adc
in
mov
xchg
clc
mov
ror
rolb
jl
outsl
cwtl
inc
popf
in
xor
das
arpl
mov
inc
jo
movsl
lock
and
jnp
xchg
movsl
aas
xchg
push
aaa
in
inc
jbe
mov
aas
or
ficomps
pop
loop
shl
lret
push
into
mov
mov
in
sbb
mov
cmpsb
test
xlat
fistps
ja
adc
test
dec
push
stos
dec
adc
push
pop
fstpl
sbb
xchg
js
xor
clc
loope
adc
pop
xchg
sbb
dec
hlt
aaa
lret
jg
ljmp
jecxz
adc
lret
mov
mov
xor
test
ret
cld
cmc
mov
mov
mov
jp
xor
setle
fdecstp
sbb
xlat
jle
pusha
popf
add
sbbl
mov
neg
jnp
jmp
pusha
stc
mov
mov
bound
les
xor
jno
xorb
pushf
dec
inc
pop
sub
cli
fsubrp
repz
xor
hlt
jl
hlt
xor
mov
lcall
jb
mov
inc
jne
dec
xor
cmpl
scas
or
lret
jg
rcll
push
mov
mov
mov
xchg
mov
cmp
inc
ret
scas
clc
mov
and
jns
rorb
ret
mov
jne
int3
or
imul
mov
or
lea
mov
mov
mov
shrd
shr
mov
mov
shl
mov
xor
jmp
inc
mov
mov
mov
adc
push
clc
adc
stos
adc
push
xchg
xor
mov
xchg
xchg
sbb
dec
push
fidivrl
cli
out
bound
out
xor
sub
adc
test
mov
xor
lret
sahf
movsb
fwait
mov
mov
repz
lahf
mov
push
test
out
aam
xchg
pusha
mov
lock
icebp
lcall
pop
cld
inc
outsb
rcrl
pusha
rclb
pop
aas
int3
xor
pop
mov
xchg
clc
cmp
out
mov
popf
dec
nop
jp
jmp
in
xor
mov
ret
mov
mov
popa
dec
push
mov
sbb
ja
jo
cs
mov
lods
loop
rorb
pop
xlat
gs
push
jbe
mov
ret
testl
pushf
or
mov
cmp
pop
mov
inc
cmp
lea
mov
fsubs
mov
in
hlt
push
mov
jp
mov
mov
nop
popf
stc
out
int3
mov
mov
and
adc
lea
lcall
jge
les
cmp
ret
test
sub
mov
push
in
sub
mov
cmpsl
addr16
and
jmp
add
xchg
xchg
xor
lock
xor
jo
mov
call
adc
hlt
inc
jle
push
sub
addl
jae
jmp
jno
mov
fiadds
sbb
out
out
popf
jge
mov
jl
cmc
jl
push
inc
enter
mov
call
jo
cwtl
out
push
scas
arpl
arpl
mov
cmp
and
and
dec
and
adc
enter
dec
fidivrl
adc
xlat
out
dec
pop
adc
and
ficompl
pop
enter
ljmp
xor
xchg
inc
pop
sbb
sbb
or
cmp
bound
sub
cmp
push
push
cmp
fmuls
jbe
popa
pop
int
mov
inc
sbb
jo
js
sbb
daa
xor
dec
test
stos
adc
adc
mov
adc
fisttps
sbb
enter
mov
in
sub
icebp
adc
mov
pmullw
shll
leave
das
loope
or
hlt
dec
loope
shll
rcl
cltd
mov
cmp
imul
and
hlt
inc
cmp
jae
lock
xchg
pushf
shll
repnz
mov
cmp
xor
sbb
pop
dec
lret
and
add
jmp
dec
arpl
pushf
mov
call
pop
lods
movsl
insb
lret
cmpsl
sti
and
cmp
andb
popa
sahf
andb
orb
or
dec
xlat
iret
mov
jne
dec
out
clc
cmp
jae
std
cmp
test
into
pop
loope
xor
mov
addr16
jns
mov
pusha
pop
pop
dec
inc
xchg
mov
cmpsb
inc
mov
loop
imul
nop
cld
sbb
lods
mov
ret
popa
dec
aad
inc
adc
and
dec
repz
inc
outsb
orb
mov
insb
cmp
loopne
add
mov
scas
push
sub
into
mov
mov
push
in
mov
add
gs
ljmp
or
xor
sub
or
lret
sbb
test
adc
mov
fwait
mov
jmp
add
aam
je
outsb
popf
xchg
loopne
pop
dec
push
mov
in
xor
mov
popf
mov
data16
sub
aas
adc
cmp
aas
mov
push
arpl
sti
mov
lods
fsubrl
add
pop
cs
cmc
movsb
pop
xchg
and
pop
aaa
ja
out
in
aam
inc
mov
leave
rcrl
mov
and
pop
lock
xchg
fcoms
mov
jp
mov
xchg
pop
dec
adc
insl
shr
mov
sub
in
mov
ds
test
jg
sub
push
ja
inc
sub
bound
xor
outsb
in
out
dec
jns
jmp
push
repz
cltd
cltd
adc
inc
sub
or
leave
das
or
loop
daa
jo
pop
push
cmp
aam
cmp
push
or
and
push
cmc
adc
jb
xchg
or
jne
scas
add
shll
insl
cmpsb
rclb
js
adc
mov
mov
pop
pop
jb
inc
subl
sbb
cmp
pop
fwait
lea
ret
stos
mov
mov
lods
inc
in
cmc
adc
mov
popf
fwait
and
cld
push
mov
xlat
inc
pop
js
arpl
xor
adc
add
pop
inc
lahf
repnz
leave
in
int
push
neg
cmp
add
lcall
shrl
mov
pop
insb
mov
push
xchg
dec
push
cld
sub
aam
mull
dec
call
inc
sub
pop
out
xchg
inc
mov
sub
mov
mov
mov
sbb
inc
in
lcall
out
mov
bound
or
pop
xor
rorb
xor
fs
adc
leave
or
lret
adc
or
xchg
pop
xchg
mov
popf
jo
inc
lea
aad
and
aad
in
cmpsl
xchg
cmp
pop
bndstx
cltd
sbbb
andl
mov
clc
xor
xchg
push
test
add
adc
lds
lock
fistps
into
out
xchg
js
insb
cmp
leave
xor
pop
daa
test
imul
loop
cltd
adc
ss
addr16
pop
call
ljmp
mov
sub
or
stos
cmp
call
pop
push
test
fists
shrb
mov
pop
fistl
mov
jne
xlat
lods
lods
mov
out
mov
lret
sub
ja
bound
mov
adc
test
les
stc
dec
jecxz
add
notb
mov
and
in
scas
stos
js
aas
mov
test
push
mov
ret
or
cld
push
add
add
mov
sbb
dec
ss
xor
push
clc
adc
add
push
les
scas
mov
ljmp
cld
in
scas
mov
sub
push
sbb
gs
aam
add
in
jecxz
sub
push
adc
neg
ret
adc
jmp
out
nop
popa
fdivrs
xor
or
mov
sub
cmpsl
sarl
push
subl
ret
andb
inc
push
lcall
je
mov
cld
pop
mov
mov
adcl
or
dec
fsubs
adc
xor
xchg
mov
loopne
cwtl
cmp
push
addr16
adc
in
js
pop
mov
in
fs
push
repz
out
inc
dec
sbb
pop
pop
pop
cmpsb
mov
xchg
pop
xchg
mov
scas
adc
gs
or
cmp
lods
insl
pop
jle
pop
jp
dec
mov
xchg
pop
and
shrb
inc
push
incb
es
pop
jecxz
iret
mov
lds
xor
ja
movsl
pop
test
mov
aam
mov
and
sub
cmp
inc
push
and
xor
cmp
gs
or
add
sub
movsl
lret
adc
jecxz
ret
xchg
mov
inc
fsubs
int3
das
mov
xor
ljmp
mov
lea
dec
mov
adc
outsb
test
dec
arpl
and
sub
pop
mov
dec
sbb
rcll
add
movsl
adc
pop
dec
clc
frstor
jle
jne
hlt
loopne
decl
and
inc
sub
out
cmp
int
loop
in
or
sti
sub
loop
mov
pop
pop
inc
daa
sub
mov
push
add
jle
push
js
push
shr
inc
outsb
iret
xchg
orl
push
les
dec
cld
lcall
cltd
fs
je
push
adc
out
out
leave
frndint
aaa
xor
xchg
dec
outsb
les
xlat
lahf
jg
fcoms
pop
pop
push
or
fdivs
xchg
pop
mov
ss
sub
push
shl
mov
into
or
push
jl
mov
mov
mov
adc
js
pop
sub
and
jno
movsl
jp
fsub
and
pop
dec
xchg
adc
cmpsb
lea
out
xchg
es
lret
push
fdiv
repnz
pop
mov
sub
and
test
in
pushl
cmc
push
xchg
push
jge
outsb
pop
incb
ret
mov
mov
add
and
scas
inc
and
cltd
mov
xchg
dec
sub
test
jl
test
mov
out
stos
mov
jecxz
ret
inc
pop
lods
aad
sub
mov
mov
out
mov
push
orb
xchg
and
insb
or
dec
lahf
out
lret
test
adc
mov
lcall
jp
mov
push
nop
repz
ss
popf
rcrl
push
cmp
fld
lds
lret
arpl
insl
jp
cmpsb
aad
push
push
and
adc
vphaddudq
iret
mov
repnz
or
lods
and
adc
mov
cwtl
idivl
fisubrs
lcall
fnstsw
xchg
enter
inc
bound
adc
pop
xor
or
js
dec
orl
loope
xchg
xor
js
xchg
in
fsubs
test
jmp
push
add
push
andl
pop
push
imulb
aaa
test
add
sub
shrb
cmp
stos
popf
pushf
icebp
fisubs
xor
adc
sub
cmp
adc
loop
push
dec
mov
dec
push
sbb
pop
hlt
xchg
cmp
sbb
js
std
pop
lea
add
and
jae
push
lcall
dec
fcmovu
mov
add
jg
and
cmp
gs
mov
xchg
dec
shll
cmpl
loop
stc
ret
cltd
cmpsb
push
arpl
movsb
jno
es
popa
icebp
push
aam
xlat
inc
mov
jno
mov
xorb
out
les
fsubl
clc
imul
das
aas
popa
pop
idivl
xor
shll
push
cmp
jmp
repz
pminub
add
aaa
jae
into
ret
lods
into
mov
inc
xchg
and
add
sbb
dec
pop
jb
xchg
cmpsl
add
scas
xor
sbb
fnstenv
pop
js
push
inc
ds
stos
shll
or
or
enter
dec
jmp
jg
jle
in
push
les
mov
sbb
mov
arpl
push
cltd
scas
sbb
fistps
pop
nop
je
xlat
lea
rcrl
nop
pop
mov
xor
xchg
inc
fldcw
xor
sub
pop
push
pop
adc
jbe
cltd
ret
rcrb
push
addr16
pop
jg
addb
xlat
sbb
mov
mov
cmpsl
in
pop
inc
in
jno
and
icebp
aas
push
sbb
mov
adc
push
loop
sub
insl
mov
aas
pop
es
fdivs
lcall
xor
mov
adc
add
push
stc
sub
and
push
cmpl
inc
pop
jle
xor
sub
pop
jnp
sub
or
pop
icebp
mov
adc
push
cmp
sbb
pop
add
and
add
pop
pop
cmp
shll
mov
orb
dec
and
ss
push
outsb
pop
fwait
cmpps
cmpsl
call
pop
cld
cwtl
scas
pop
push
jg
jne
out
sti
jo
cwtl
imul
pop
pop
xlat
das
bound
fldenv
sub
aam
push
inc
sbb
addl
mov
and
jmp
inc
in
cmp
jle
mov
push
xchg
pop
push
test
repnz
lods
mov
xor
out
dec
scas
mov
jmp
les
cs
outsb
or
repz
mov
and
dec
xchg
sub
andb
mov
decl
mov
mov
xor
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
lea
mov
mov
jmp
fs
xor
push
fs
fisubrs
adc
adc
push
clc
adc
mov
ficoms
jo
subb
out
stc
sub
jmp
or
frstor
dec
les
cmp
and
cmp
push
sbb
outsl
enter
shrb
sahf
test
int3
cmp
xchg
xor
jne
sbb
incb
jmp
mov
add
aaa
sbb
and
andl
mov
cmp
stos
mov
mov
subl
adc
dec
mov
or
fdivrs
mov
jno
clc
inc
sahf
outsb
or
loop
jge
fcomps
sahf
ss
lcall
jp
ret
ja
push
rcrl
jne
ljmp
lods
fsubl
sbb
and
mov
ficompl
jns
dec
call
dec
pop
mov
mov
sub
xchg
mov
sub
int
sub
mov
scas
mov
ret
test
mov
push
lods
adc
arpl
shll
addr16
iret
test
aad
dec
flds
sbb
shll
mov
xorb
inc
lock
push
into
lods
or
roll
mov
outsl
xchg
xor
addb
and
ss
dec
push
push
jo
stos
adc
das
pop
mov
mov
lret
cli
fistl
sarl
addr16
sbb
inc
mov
xchg
jae
stc
push
mov
andl
dec
out
loope
lret
and
loop
enter
and
adc
jns
or
repz
lcall
outsl
sub
xchg
icebp
jbe
cmp
loope
in
push
push
or
or
movl
dec
stc
out
cmp
cltd
xchg
repz
sbbl
adc
xchg
sub
cmp
mov
notl
daa
jae
dec
xchg
xchg
orb
jle
pop
lret
inc
mov
add
lcall
xchg
addr16
inc
cmp
cmpsb
or
movsb
ffreep
insl
outsb
pop
ficoms
outsl
adc
mov
test
test
imul
aad
mov
push
mov
sbb
cmp
jb
aaa
push
jae
jo
jge
nop
xchg
jmp
dec
xor
xchg
sub
sahf
out
rcll
ret
data16
sub
shl
loope
outsb
mov
loop
fs
fs
jns
adc
repz
xbegin
outsl
sbb
dec
xchg
scas
mov
pop
fbld
pop
inc
sahf
popa
push
push
sbb
xchg
popf
cld
sbb
push
adc
or
mov
push
iret
lods
dec
pop
dec
in
pusha
jle
xchg
dec
cmpsb
aam
into
mov
pop
pop
xchg
sub
inc
imul
stos
imul
and
cltd
push
jno
test
xlat
sub
les
mov
sub
dec
cmp
cmp
nop
into
pop
sbb
cwtl
insl
fcompl
es
xlat
push
and
cmpsl
jns
cmp
and
aad
fnstsw
xchg
in
cmp
xorb
mul
jb
mov
fs
lds
adc
mov
cmp
inc
orl
lret
xchg
mov
pusha
in
sbb
ljmp
push
ds
sbbb
xor
and
adc
xchg
jle
sub
xlat
pop
sub
out
dec
sbb
bound
adc
lods
jae
push
inc
scas
je
shrb
in
xor
out
mov
pop
dec
lahf
fwait
loope
fnstsw
jae
out
test
fcomi
into
lret
gs
push
xchg
lea
in
fnsave
xchg
cmp
and
push
mov
pop
clc
call
pushf
push
sahf
setns
inc
into
pop
daa
stc
mov
insl
and
enter
jmp
xchg
sti
ja
rorb
and
push
dec
mov
ljmp
ja
pop
jle
dec
and
and
js
cmp
inc
dec
es
and
add
enter
hlt
es
lods
ret
out
xor
scas
jp
jl
int
ljmp
and
mov
mov
int
mov
nop
dec
lret
or
mov
ja
inc
std
loop
imul
cmpsl
mov
add
push
pop
repz
fwait
jge
mov
test
or
xor
jbe
arpl
ret
inc
dec
hlt
mov
jnp
xlat
pop
mov
cmp
inc
pop
lret
aaa
fidivl
out
pop
pop
in
adc
add
xchg
fldenv
iret
sub
mov
mov
cltd
sbb
jmp
or
cwtl
or
and
imull
push
leave
je
dec
pop
mov
jmp
mov
dec
lahf
push
decb
xchg
inc
cmp
and
and
daa
icebp
mov
mov
sub
xchg
mov
les
xchg
call
jno
in
ljmp
dec
and
sarb
cmc
jnp
xchg
stos
inc
pop
mov
push
out
xor
enter
push
dec
testb
add
and
mov
and
lret
aaa
lret
mov
pop
cmp
cmp
inc
jb
pop
pop
or
neg
mov
gs
dec
mov
test
mov
pop
add
loopne
stos
mov
sbb
pop
cmp
ficomps
pop
pushf
inc
xchg
dec
rcll
sub
jo
and
pop
loop
lds
loope
or
cmpsl
cmp
in
rcl
pop
loop
ss
cmp
xor
pop
int3
imul
insb
jae
jb
js
leave
mov
loop
add
add
int
cmp
jecxz
sbb
push
cwtl
sbb
push
out
imul
cmp
out
shll
push
std
hlt
fldenv
pop
add
int3
dec
mov
cmovp
ljmp
pop
cs
and
subl
pop
add
push
adc
hlt
or
out
inc
mov
shrd
shr
mov
mov
shl
mov
xor
xor
or
mov
mov
or
mov
jmp
rcr
out
xchg
xchg
push
inc
es
nop
hlt
pop
mov
adc
push
clc
adc
fs
pop
std
leave
in
mov
mov
jmp
mov
in
xchg
mov
xchg
fsubrl
or
je
aad
sbb
mov
push
pop
repnz
lds
fimuls
fwait
imul
or
fdivs
push
lods
mov
mov
les
movsb
xor
sub
mov
rclb
clc
mov
cmpsl
aad
xor
mov
cli
lcall
pop
dec
arpl
js
push
fdivrl
je
subb
or
bnd
push
sbb
sub
xchg
mov
pop
adcl
lds
dec
xlat
dec
push
or
adc
xchg
or
xchg
jge
loope
cmpb
cmpsl
fwait
xor
pop
mov
loop
xor
adcb
loop
push
jp
jmp
mov
icebp
dec
or
es
arpl
orl
fstps
and
mov
sub
out
and
mov
insw
xor
push
cmpsl
add
psrlq
lret
and
repz
dec
shlb
pop
mov
jecxz
jne
adc
mov
inc
sbb
lock
jo
inc
in
movsb
add
loop
and
pop
sub
ja
stos
loopne
cli
fdivrp
sbb
fnsave
adc
inc
push
ret
int
cld
xchg
lds
push
pop
xchg
shlb
or
fnstenv
outsb
aas
or
xchg
popl
clc
pop
push
das
mov
add
mov
xor
mov
out
or
or
lods
mov
push
cld
pop
in
shlb
hlt
xchg
push
push
test
lods
mov
sbb
fidivrl
sbb
adc
test
pop
cmp
ret
and
push
ret
scas
insl
mov
sbb
xor
inc
pop
jne
repnz
leave
mov
dec
add
jnp
jmp
cmp
sbb
xchg
xchg
pushf
lcall
pop
iret
clc
test
cmovns
insb
int3
pop
cmp
pusha
adc
mov
push
and
dec
insl
std
sub
sbb
pop
daa
psubsb
into
ss
inc
mov
dec
dec
mov
xor
jl
out
pop
out
lea
jle
pop
test
and
or
outsl
cmp
push
jo
scas
repz
push
loopne
push
mov
mov
mov
stos
ret
fs
les
inc
xor
cs
addb
cmp
jbe
ss
cld
test
mov
xchg
jecxz
jecxz
add
pusha
jne
cwtl
xor
inc
mov
push
and
leave
mov
leave
sarl
sub
jg
leave
inc
pop
mov
movsb
inc
cmp
or
mov
hlt
and
out
inc
inc
jmp
shll
ja
icebp
mov
iret
add
pop
in
je
cmpsl
mov
aas
jle
push
mov
cwtl
xchg
sbb
cmp
mov
int
push
jp
adc
test
aas
dec
lret
dec
dec
xchg
lcall
or
pop
aad
dec
push
cmp
out
clc
mov
lcall
cmp
ret
xor
negl
movsb
popf
push
mov
jae
rep
aas
shl
xchg
rorb
or
and
jmp
scas
frstor
push
add
sbbb
fstl
mov
fwait
test
sbbb
loope
popa
loope
hlt
ja
xchg
lods
stc
mov
test
mov
xor
dec
in
outsl
aad
popa
outsl
adc
lods
out
imul
rclb
cmpb
or
fisubs
mov
icebp
jo
fdivs
sub
jecxz
jne
fdivs
push
shlb
ret
or
cmp
sbb
iret
loopne
jbe
mov
loopne
dec
js
ss
insb
pop
in
fildl
cltd
out
stc
les
pop
rcrl
pop
data16
fnstcw
lcall
in
sbb
ss
push
jb
aad
push
test
inc
xor
stos
dec
push
lcall
les
mov
insb
xor
jle
mov
adc
add
mov
inc
jnp
int3
movsl
add
in
arpl
xchg
jo
sbb
int3
pop
aad
aas
push
test
pusha
adc
addr16
mov
ljmp
pop
adc
xchg
inc
cmpl
mov
aas
mov
lahf
mov
loopne,pt
lret
out
push
xchg
jge
loopne
test
into
insl
imul
data16
sub
cmpsb
les
clc
lcall
sub
popa
pop
or
testb
loope
mov
mov
mov
rcl
jl
inc
pop
add
inc
mov
dec
fmull
pushf
cs
outsb
imul
cmpsb
push
sahf
mov
mov
lds
std
je
and
pop
xor
addr16
push
inc
push
add
push
sub
lcall
add
or
mov
mov
fildll
jg
cmpsb
fisubs
mov
push
js
pop
fxtract
cmp
and
cmp
rol
dec
dec
adc
jecxz
inc
jns
inc
fldt
adc
xchg
add
pop
xlat
pop
mov
mov
loope
adc
mov
insl
mov
jnp
out
or
int3
roll
and
testl
stc
imul
addr16
call
ds
jmp
pop
aad
pop
push
jmp
mov
ficomps
jmp
gs
push
cmp
push
dec
push
push
adc
addb
movsb
in
cmpb
mov
pop
test
out
dec
sub
stos
mov
lds
into
inc
repz
inc
push
pop
addr16
in
push
jge
dec
shl
insb
jp
cld
and
rorl
cltd
je
jae
scas
dec
out
adc
movb
aas
popf
jmp
lret
dec
pushf
icebp
ja
stc
dec
push
in
lea
cmp
cmpsb
add
xor
ret
pop
hlt
sbb
mov
inc
dec
jbe
lret
xor
xchg
or
mov
adc
adc
scas
dec
rorb
popa
xchg
mull
sbb
push
addb
xchg
and
dec
hlt
shrd
shr
mov
mov
xor
shl
jmp
add
xchg
rorb
ret
jo
xchg
unpcklps
clc
adc
mov
enter
mov
or
pop
cli
xlat
sti
fistps
idivl
data16
sbb
imul
xchg
pop
rorb
xor
test
adc
cli
mov
stos
jg
loop
ss
loop
sub
jnp
xlat
mov
jne
or
popa
out
popa
filds
xor
push
pop
add
mov
cmp
jne
push
nop
add
push
out
mov
sub
in
xor
lds
add
push
mov
sub
mul
jg
mul
push
enter
sbb
or
add
mov
mov
pop
jns
mov
cli
jl
mov
fistps
cmp
es
mov
cli
out
and
jle
push
mov
or
cmp
mov
out
popf
mov
add
lahf
inc
cmp
test
enter
mov
inc
cmp
xor
sbb
pop
stc
scas
loop
push
or
pop
inc
or
xchg
mov
sub
iret
cmp
push
sahf
sbb
nop
mov
add
mov
js
pop
int3
or
out
stos
in
sbb
out
dec
cmp
xchg
inc
jbe
mov
xchg
sbb
pop
jns
fsubrl
inc
cmc
mov
je
dec
sub
mov
sub
clc
mov
dec
popf
lahf
and
idivb
or
add
push
outsb
push
pop
dec
dec
je
dec
hlt
les
aaa
inc
xlat
pop
out
pusha
add
je
nop
sbb
xchg
shl
jbe
adc
jne
mov
out
mov
mov
test
int
ljmp
mov
aad
mov
fisttpl
mulb
fistpl
aas
or
pushf
cmp
hlt
test
dec
xchg
int3
jne
sti
enter
xchg
push
xor
test
movsl
movsb
push
inc
jo
dec
push
dec
push
sarl
or
dec
mov
loope
int
int
sahf
or
xchg
nop
cld
data16
and
inc
jl
mov
ss
es
repz
mov
mov
mov
xor
xor
loope
adc
out
fimuls
cmp
int
add
jecxz
mov
push
pushf
adc
jnp
jg
jmp
push
jmp
sahf
rclb
in
xchg
and
add
cmp
pusha
jmp
int3
icebp
popa
test
insl
and
pop
das
sbb
and
pop
movsl
sub
add
iret
nop
mov
out
pop
lret
dec
and
lcall
and
mov
or
ret
ror
xchg
sub
or
sbb
dec
xchg
cli
xchg
push
scas
mov
fildl
jb
fstl
sbb
jb
repnz
cmp
push
lods
push
jo
test
pop
cmp
and
shlb
bound
xor
jo
loop
int
out
dec
movsb
mov
cld
mov
sahf
in
push
xchg
in
pop
xchg
fwait
mov
fwait
bnd
das
icebp
outsb
mov
mov
push
xchg
insb
leave
adc
lock
sub
int3
and
pop
and
insb
jg
add
adc
mov
mov
test
jg
pop
mov
mov
mov
mov
push
jle
mov
jae
inc
adc
sub
ljmp
rclb
pushf
fucomp
cli
in
fwait
dec
fsubr
dec
dec
lds
stos
je
push
sbb
in
pop
int
cmp
pop
outsl
adc
out
inc
repnz
pop
hlt
movsl
sbb
int3
aam
dec
hlt
mov
loop
add
in
and
xchg
mov
mov
stos
xchg
cmp
scas
xor
stc
mov
mov
push
mov
mov
push
sbb
lods
mov
inc
or
addb
cmp
pushl
pop
push
shll
shll
sbb
mov
ret
sti
decl
push
sub
sbb
dec
lock
lcall
test
adc
mov
ja
std
sti
dec
sbb
push
inc
mov
adc
pop
aaa
int
jge
jle
repnz
and
pop
sbb
int3
test
xchg
test
add
pop
jns
adc
mov
xor
mov
push
aam
and
loop
iret
sbb
sti
and
mov
repnz
xchg
push
mov
cli
fs
mov
sub
dec
mov
inc
inc
xor
repnz
sbb
hlt
js
xchg
test
inc
int3
sbb
inc
shrl
mov
je
add
out
pop
mov
inc
xchg
int
repnz
fnstenv
cmp
cmp
loop
enter
xadd
stos
mov
xchg
or
out
mov
sub
mov
jae
mov
stc
inc
movsl
xchg
daa
call
sahf
subb
mov
cmc
and
inc
mov
add
push
sub
out
or
push
jbe
cmp
imul
shl
xchg
inc
add
mov
adc
scas
xor
lods
aas
rorb
lahf
lock
xchg
popa
ficompl
pop
fwait
push
scas
enter
rcrl
pop
mov
mov
push
aad
hlt
movsl
pop
dec
cmp
insl
push
sbb
adc
arpl
or
jg
push
sub
das
inc
adc
mov
pop
es
xchg
fwait
cltd
popa
jle
push
int3
or
dec
addb
out
lock
cs
mov
jbe
stos
dec
xor
dec
cmp
cmc
mov
iret
push
xor
es
lret
jecxz
or
ficompl
dec
insl
sar
movsb
stos
in
push
stos
scas
inc
pop
es
jns
repnz
sub
out
xchg
and
push
lret
imul
mov
mov
es
push
fidivs
in
stc
xor
mov
mov
add
cs
aad
dec
xor
loop
lock
pop
stos
inc
push
and
push
pop
cmp
jo
add
lea
xor
inc
jne
xchg
scas
ret
movsl
pop
cltd
sbb
ja
sbbl
decb
sbb
rorb
ret
add
mov
mov
shrd
jmp
aaa
aas
lods
and
andb
add
adc
push
clc
adc
std
inc
cmp
popa
cmc
or
mov
test
rcr
stos
ljmp
ret
mov
xchg
imul
or
or
jge
xor
jmp
loop
fsubrs
fildl
inc
xchg
push
mov
test
cmp
icebp
je
sub
cli
movl
dec
js
je
mov
iret
jg
lahf
stc
fimull
cmp
adc
in
or
bound
adc
pop
mov
sub
and
outsl
lds
or
orl
cmp
xor
rclb
outsb
push
add
adc
inc
dec
insl
cmp
sbb
push
mov
sarl
jae
dec
mov
jle
lea
jae
mov
lret
orb
xchg
cli
cltd
jge
jge
je
std
xchg
sbb
adc
xchg
jae
or
int3
mov
mov
push
xchg
popa
or
daa
xchg
movsb
cmp
leave
pop
adc
loopne
jae
mov
pop
cs
jno
xor
fstps
mov
mov
or
dec
cmp
mov
inc
jecxz
adc
out
mov
outsb
fistpll
push
jmp
mov
ficoms
jno
cmp
int
mov
int
imul
das
in
test
xchg
cmc
pop
fisubrs
dec
sbb
int3
inc
outsb
rorb
aam
lea
inc
sbb
mov
sahf
jne
mov
mov
sbb
sti
movsb
mov
mov
mov
inc
sub
jl
orl
and
lock
cs
test
xchg
or
xor
xchg
add
adc
arpl
dec
xor
or
mov
testl
psrlw
ret
test
sbb
out
stc
sbb
cmp
sbb
lahf
shll
es
mov
nop
jnp
add
push
jle
cltd
jmp
mov
imul
cmp
ss
rcrl
xchg
in
or
xchg
icebp
cltd
mov
dec
call
push
arpl
mov
cltd
sbb
das
xchg
add
and
mov
dec
or
sbb
fimull
scas
mov
repnz
mov
movsb
enter
sub
in
js
shrb
ret
sbb
sbb
cmp
rclb
mov
inc
sbb
cs
push
cmpsl
outsb
fs
add
sub
int
push
sbb
stc
adc
xor
mov
push
jbe
ret
jne
mov
push
xor
aas
divl
sbb
cwtl
dec
inc
test
in
outsl
pop
inc
gs
jbe
jo
hlt
jmp
sub
addl
hlt
and
enter
stos
dec
mov
cmp
mov
xor
lock
dec
inc
in
xchg
mov
repz
dec
pop
jae
push
dec
jno
aaa
sti
pop
cmp
lods
ljmp
cmp
pop
aad
ror
shrb
es
push
sub
xchg
mov
adc
mov
aad
or
setg
loope
xchg
clc
mov
test
jp
in
jo
sbb
mov
shll
jns
push
inc
shl
add
fwait
stc
adcl
jns
jmp
pop
inc
pop
mov
lods
push
sbb
mov
sbb
push
adc
and
and
pop
cwtl
out
add
aad
sbb
shll
lahf
mov
sbb
enter
in
push
lret
jge
dec
sub
cmp
fwait
js
shlb
aas
mov
aas
sti
lods
adc
push
sbb
js
filds
mov
inc
enter
pop
pop
mov
sbb
jge
jmp
jbe
rcrb
inc
and
pop
pop
mov
jg
rclb
lea
daa
sub
mov
and
or
sar
mov
mov
testb
lcall
mov
shrl
adc
push
sbb
in
pop
ds
jle
scas
xchg
les
sti
les
mov
add
test
jge
cli
jg
mov
inc
jae
mov
and
cmp
sub
sub
loope
ret
sub
mov
sbb
cmp
adc
es
aam
insb
sti
xor
cmc
xor
mov
push
jmp
cmp
pop
and
lods
popa
test
cli
out
cld
cwtl
sbb
sbb
pop
inc
int3
adc
mov
mov
lock
xor
mov
mov
xchg
ss
daa
adc
pop
in
aas
xchg
fnstenv
lea
push
sub
insl
or
mov
sbb
sti
pop
xchg
xor
sbb
js
mov
mov
loopne
outsl
jb
out
jecxz
sbb
push
addr16
cmp
out
and
cli
fwait
jno
int3
fmul
push
fucomp
ds
and
cmp
idivb
call
jle
pop
imul
cmc
lods
jecxz
dec
push
insb
pusha
dec
je
xor
jae
filds
jbe
out
push
pusha
cli
addr16
rcrl
cs
mov
and
hlt
and
out
popa
cmp
aam
adc
cli
xlat
inc
imul
bnd
les
and
add
jp
es
lock
adc
jmp
sub
dec
cmp
add
xor
data16
push
subb
mov
mov
nop
notb
mov
aaa
adc
sub
mov
dec
mov
fs
movsb
shll
push
das
insl
cmp
adc
push
out
mov
aam
adc
movsb
inc
in
lods
data16
jno
mov
stos
lret
sbb
xlat
jnp
and
sti
pushf
cmc
lds
mov
lods
mov
fists
lahf
jl
out
cltd
insb
jae
mov
lret
xchg
inc
xchg
and
gs
adc
popa
mov
popf
push
mov
cli
orl
and
mov
out
div
sahf
inc
xor
sahf
shl
adc
add
loope
shr
mov
mov
xor
shl
mov
xor
or
mov
mov
add
mov
mov
shrd
shr
mov
mov
xor
xor
or
lea
mov
jmp
dec
jmp
dec
xchg
and
mov
adc
add
push
clc
adc
in
popf
dec
push
pop
aaa
test
sub
shll
test
bound
and
arpl
xchg
ja
loope
mov
sbb
jle
sbb
sbb
nop
insb
jecxz
or
loopne
cwtl
cmp
and
lcall
or
fldenv
mov
mov
or
test
add
pusha
test
shll
dec
push
sahf
push
push
fucomp
loop
std
jo
push
push
daa
adc
adc
push
cmp
pop
sub
inc
data16
sbb
outsw
cmp
inc
xor
rcrb
sub
cwtl
mov
sub
data16
lock
pop
mov
je
inc
mov
lods
jns
mov
xchg
push
push
adc
das
xchg
insb
repz
scas
mov
hlt
cmp
cmpsl
mov
mov
fdivrl
sub
adc
shrl
add
loopne
mov
lock
movsl
jns
push
iret
test
ds
aam
mov
das
jae
sub
loop
xchg
shlb
mov
xor
jns
out
jg
jnp
jl
cmp
out
bnd
xchg
sbb
aaa
int
daa
iret
sub
jb
arpl
xchg
ja
jo
inc
add
jg
das
mov
push
jb
dec
sub
cmp
popf
xor
jge
sbb
sbb
xor
in
push
stc
add
sti
cmc
jge
repz
push
in
dec
fs
mov
jo
int
adc
cmp
ret
jl
je
outsb
jmp
popf
stc
add
mov
sarb
xchg
sti
xlat
test
subl
mov
sbb
pop
xacquire
in
dec
out
push
repnz
xchg
ljmp
dec
jg
adc
inc
and
dec
cmpsl
insl
xor
xchg
lea
mov
pop
aad
sub
jae
fsubp
lret
push
cmp
js
push
loope
shll
stc
or
push
loope
or
adc
dec
sahf
fidivrl
sub
lds
cmpsl
mov
das
jge
dec
into
outsl
mov
add
es
jle
mov
jle
popa
repz
outsl
les
fsubl
loope
sbbl
popa
sbb
inc
push
icebp
push
out
mov
cli
push
sub
insb
test
and
adcb
fs
imul
fdivs
cmp
inc
lea
iret
lcall
fistpl
adc
popa
mov
call
aam
call
int3
icebp
hlt
daa
mov
call
mov
iret
mov
fidivl
xorl
sub
in
sahf
mov
pop
mov
in
dec
out
out
subb
xorl
aas
scas
jmp
sar
je
fld
push
insl
mov
jmp
push
addb
ss
ret
push
lcall
adc
lret
lea
push
mov
call
sbb
push
xchg
jg
aam
out
setnp
pop
ret
adc
sbb
xor
dec
jl
aad
push
or
push
xor
or
mov
es
imul
ret
jns
sahf
pop
or
scas
mov
scas
xchg
pop
cwtl
rcrb
stos
push
imul
icebp
ja
xlat
sub
mov
jle
ret
loopne
push
pop
jb
adc
scas
xlat
mov
neg
dec
js
sub
mov
xchg
notw
pusha
das
mov
dec
and
fcom
test
xchg
pop
popf
mov
out
lods
mov
jle
xchg
xchg
je
jp
jmp
lcall
inc
movsb
ss
lods
js
insb
and
cwtl
in
lods
insb
addr16
pushf
mov
mov
imul
shlb
in
in
sbb
loope
cmpsl
imul
xchg
js
adc
mov
push
icebp
in
inc
loop
or
out
adc
lock
repnz
push
jno
jb
mov
add
xor
lods
imulb
add
sub
pop
mov
inc
stc
negl
xor
imul
aas
jge
jae
cs
les
and
xchg
insb
push
dec
mov
push
dec
negb
push
shlb
mov
sti
jno
fmuls
test
or
stos
cltd
daa
sbb
int3
sbb
rcrb
inc
sbb
out
cmp
daa
xor
sub
repz
rsm
mov
pop
cli
pusha
xor
shrb
arpl
push
jle
gs
shl
mov
movzbl
cmpsl
ret
je
sbb
push
mov
mov
jp
sub
addr16
mov
adc
xor
xor
jmp
loop
xchg
xlat
sahf
ljmp
scas
ficompl
push
jae
lea
push
enter
push
in
or
mull
mov
cs
cmp
les
mov
jb
push
jg
add
sbb
in
outsl
jnp
push
mov
xor
sar
dec
inc
inc
fstps
mov
mov
mov
and
addb
dec
push
xchg
aas
pop
test
sub
xor
lcall
mov
out
mov
pusha
and
and
xchg
or
jl
jg
cmp
sbb
mov
lods
int
loopne
loopne
shlb
jmp
inc
mov
js
enter
or
fistps
in
push
mov
iret
lahf
mov
mov
push
xor
push
movsl
jmp
jnp
cmpsb
or
loopne
cli
div
cmp
popf
pop
jne
inc
push
mov
mov
add
faddl
mov
xor
incl
adc
sbb
mov
sub
mov
sub
out
ret
bound
lods
mov
enter
mov
das
xor
and
fwait
outsb
pusha
shll
mov
pop
fdivrl
or
out
repnz
dec
push
scas
cmp
cmp
push
or
jbe
fists
add
jg
insb
ret
sbb
pop
enter
inc
jp
mov
pushf
leave
xchg
pop
and
jnp
mov
imul
jp
xchg
and
mov
dec
movsb
shrd
shr
mov
mov
jmp
pop
inc
inc
mov
aas
push
sbb
mov
incl
push
cmc
adc
push
clc
adc
test
pusha
std
ds
dec
xchg
dec
pop
jl
bound
hlt
shrb
add
fcmovbe
gs
movsb
in
inc
arpl
inc
jl
mov
jne
test
adc
and
jnp
and
rcll
mov
cwtl
dec
cs
ffreep
lock
push
jb
mov
imul
xchg
nop
mov
pop
inc
addr16
insl
mov
sbb
adc
xor
dec
scas
dec
mov
mov
mov
cmc
mov
xchg
mov
xchg
mov
in
or
rolb
das
sahf
ljmp
and
push
ja
sub
dec
xor
fnsave
add
dec
imul
iret
mov
stc
xor
lahf
mov
jge
push
sbb
dec
mov
shrb
sti
mov
cmpsl
cmp
jecxz
pop
pushf
cmp
in
divl
push
pop
pop
jns
in
movsb
out
rcrl
mov
leave
cmp
jb
mov
cmp
dec
pop
xor
xchg
pop
into
call
dec
mov
outsl
adc
out
int3
or
ret
xchg
icebp
ljmp
and
rolb
inc
mov
xor
divb
shrb
sti
adc
add
das
cmp
push
push
add
arpl
dec
xor
adc
es
cmpsl
inc
mov
add
and
ljmp
push
lods
dec
pop
lods
mov
popl
add
mov
push
sub
and
sub
sub
movsb
loope
incb
sbb
push
mov
xchg
andb
bound
imul
insl
addr16
sti
sbb
dec
lcall
push
mov
mov
dec
xchg
sub
and
mov
adc
sub
adc
les
mov
loope
popa
sub
sub
mov
cmpb
add
fsubl
inc
aaa
add
xor
cltd
data16
lret
nopl
mov
pop
pop
pop
stos
push
pop
mov
inc
adc
mov
outsb
loopne
push
pushf
add
push
xlat
das
push
cmpsl
sbb
mov
mov
lods
cmpsb
call
cltd
loope
cmc
xchg
ds
lahf
or
xor
std
dec
andb
in
xor
and
jecxz
xlat
popf
xchg
jae
sbb
in
mov
mov
mov
fdivl
je
mov
adc
xchg
xor
adc
xor
cmp
stc
add
clc
scas
loopne
cs
inc
shrl
out
ret
jne
adc
cmp
mov
sbb
mov
mov
or
mov
mov
repz
inc
mov
sbb
cmc
cs
loop
xor
jno
sub
dec
std
mov
mov
call
and
sbb
pop
push
addr16
jmp
pop
movsb
mov
movsb
cltd
stos
enter
mov
pop
movsb
jl
or
lock
jbe
sbb
jnp
cmp
push
sti
xchg
pushf
jmp
mov
fildl
loopne
jecxz
bound
xchg
das
and
and
mov
mov
push
push
ds
das
icebp
mov
cmpsb
inc
xor
sbb
aaa
xchg
adc
mov
add
subl
aad
leave
xchg
mov
xor
or
push
dec
outsl
fwait
movsl
movsl
sub
cmp
hlt
repz
jae
fcomip
or
pop
test
shl
movsb
popa
and
jmp
mov
fadd
jg
testb
jmp
call
lret
popl
in
xchg
in
dec
and
shr
push
movsb
add
cmp
xor
test
cmp
mov
and
mov
xchg
cmp
test
js
sbb
push
fildl
xor
outsb
mov
mov
pop
dec
std
jne
push
mov
je
fbstp
mov
stos
jge
sti
gs
inc
imul
add
stc
adc
lea
or
adc
outsb
dec
sub
xchg
aaa
loopne
insl
inc
popf
jne
jge
fwait
std
fwait
aaa
inc
mov
adc
in
pop
jge
out
shll
fsubs
push
pop
mov
adc
jl
add
push
fsts
lahf
loope
mov
shrb
mov
js
xor
add
sub
pop
sbb
mov
inc
sbb
pop
inc
jp
cld
test
mov
fisubrs
addr16
adc
mov
aas
daa
mov
jmp
dec
insb
dec
xor
push
outsb
cld
mov
lcall
inc
test
loopne
pop
adcl
test
test
fwait
movsb
popf
inc
xchg
dec
dec
inc
imul
mov
or
loopne
push
rorl
and
jae
pslld
mov
cmp
xchg
pop
dec
repz
ds
dec
dec
jp
sub
push
sub
sub
ds
cmp
mov
push
je
mov
adc
daa
loop
cmp
pop
jbe
test
sbb
dec
out
mov
inc
adc
test
pusha
les
popf
fsubrs
jbe
repnz
adc
sub
mov
int3
xlat
outsl
xor
testl
mov
mov
stos
nop
sbb
dec
jbe
and
loop
ja
dec
sbb
int3
out
ret
mov
rorl
jecxz
pop
mov
fildl
loopne
jle
adc
mov
mov
je
push
outsb
stos
es
cmpsb
outsb
add
mov
ret
fcoms
cmpsb
sub
mov
mov
mov
sahf
jnp
test
rclb
jp
cltd
mul
push
pop
imul
popl
lds
sahf
and
mov
and
mov
clc
in
sub
pop
push
arpl
pop
or
scas
pop
pop
sub
test
dec
sarl
and
pop
cmpsl
jnp
push
andl
subl
in
test
mov
push
insl
movsb
iret
adc
sub
mov
rorb
cmp
faddl
xor
or
mov
shl
jmp
push
xchg
push
pop
push
es
or
adc
push
clc
adc
sbb
sub
cmp
in
inc
cmp
in
pop
jge
jecxz
hlt
push
fsubr
out
push
hlt
shll
xchg
js
aaa
out
out
addr16
movsl
lods
dec
jo
add
gs
jg
movl
lret
mov
push
fldl2t
addr16
or
mov
push
xchg
xlat
mov
les
mov
adc
mov
shrl
mov
or
gs
jmp
enter
shr
mov
addl
and
mov
not
cmp
scas
popa
sbb
lahf
cmc
dec
cmc
outsb
sti
iret
pop
int
cmpl
rorb
orb
sbb
mov
notb
sbb
inc
and
in
out
ficomps
xchg
xchg
and
stos
out
jmp
gs
cmp
push
xchg
mov
mov
and
insb
mov
jmp
xchg
movsl
aas
ret
cmpsl
and
iret
dec
fstpt
sbb
cmp
nop
mov
inc
rolb
aam
mov
lds
es
cmpl
in
cs
inc
lds
movsb
leave
test
pop
dec
mov
dec
jno
ljmp
pop
loope
xchg
rol
xor
sbb
sbb
data16
out
sub
insb
test
pop
jnp
or
cld
aas
add
push
push
jns
nop
sbb
enter
cmp
lret
lea
mov
xchg
push
scas
push
mov
inc
xlat
stos
jmp
lock
dec
sbb
lahf
pushf
cmp
out
mov
test
idivb
xchg
mov
gs
adc
or
push
je
xchg
mov
and
mov
notb
jo
int3
jmp
mov
sahf
shrl
rorb
pop
mov
sub
aad
xchg
cmp
fistps
aam
push
insb
jo
filds
daa
or
push
cwtl
imul
add
mov
insb
adc
mov
out
push
addr16
sar
lock
mov
inc
mov
and
fdiv
fwait
mov
jle
psubd
mov
add
pop
ds
cmp
lcall
mov
mov
sbb
lds
jg
pop
pop
mov
fwait
gs
mov
call
adc
push
test
pop
sub
xchg
sub
xchg
mov
in
daa
push
add
push
test
pop
outsl
xor
ja
sbb
mov
daa
mov
inc
inc
jecxz
and
daa
jnp
jae
scas
mov
les
fwait
loopne
or
xlat
lods
pop
cmp
mov
fcomp
ret
nop
or
lret
or
xor
and
outsl
add
sti
jnp
adc
fdivs
xchg
xchg
loope
sahf
in
mov
mov
push
orl
xor
sub
mov
fs
pop
fchs
sub
jge
inc
and
addl
pushf
adc
mov
xchg
xor
and
js
xlat
mov
scas
and
jp
sub
push
xlat
pop
data16
push
lea
ljmp
or
xchg
dec
dec
lock
fstpt
mov
lock
pop
enter
xor
cmp
push
pusha
add
pop
xchg
js
ja
loop
add
int3
jno
dec
es
insl
and
in
inc
outsb
sub
or
adc
insl
dec
xchg
cmp
mov
dec
fnstcw
dec
lahf
xlat
in
push
xchg
jns
jo
adc
mov
add
sub
cli
dec
xor
jo
push
cmpl
mov
aaa
jp
ds
mov
cmp
out
mov
mov
sub
xor
mov
imul
inc
fisubrl
sbb
test
movsb
pop
movsl
sub
scas
xchg
inc
inc
dec
cli
mov
sbb
xchg
inc
fmull
lret
push
fidivrs
lcall
cltd
dec
mov
xchg
push
ret
mov
push
out
mov
push
cmc
andl
xor
loopne
stos
addl
mov
pushf
iret
ret
pop
inc
mov
cs
sub
dec
xchg
sti
cmpsb
mov
and
add
outsl
inc
jle
loop
inc
adc
aad
jecxz
jo
jp
sub
dec
xchg
jb
jb
or
ja
inc
mov
xlat
pop
dec
inc
jg
cmc
aam
cmp
push
ljmp
dec
mov
jg
cmc
out
mov
add
mov
xor
sbb
fbstp
shrl
lret
xor
mov
jmp
push
orl
and
cmp
sub
cld
or
jp
mov
scas
mov
inc
mov
or
or
and
fsubr
sbb
mov
dec
add
lea
sbb
cmp
in
jg
adc
aam
jge
or
inc
mov
fistl
je
outsb
pop
std
jnp
rcll
mov
and
push
add
aas
xchg
sarl
sub
pop
xchg
add
cli
jle
push
int
mov
cld
mov
dec
or
je
fstpl
inc
add
mov
loopne
in
cmp
lods
lret
cmc
or
xchg
or
sbb
movsb
xchg
or
push
sbb
mov
pop
das
adc
push
jmp
jbe
jl
and
jo
ret
insl
or
and
test
cmp
cmp
jnp
repnz
or
push
lea
fwait
aas
sub
repnz
mov
xchg
xchg
mov
hlt
mull
mov
or
out
incl
es
jle
out
mov
incb
cmovne
jb
hlt
sub
adc
lds
dec
fsubrl
adc
xor
rcll
fnsave
xchg
fwait
xor
scas
in
jbe
or
lea
fisubrl
sbb
ljmp
mov
jno
incl
leave
aam
sub
adc
dec
int
mov
out
sub
repnz
mov
mov
lds
pop
mov
dec
call
cltd
mov
and
adc
and
jb
cltd
scas
dec
popa
mov
pop
scas
repz
mov
mov
or
mov
mov
shrd
shl
shr
mov
mov
xor
mov
xor
or
mov
jmp
pop
mov
push
xchg
enter
mov
enter
clc
adc
cmp
mov
push
icebp
sub
idivl
leave
flds
adc
scas
out
fwait
lret
and
push
inc
outsl
dec
jb
int
add
or
sub
add
repnz
xor
nop
clc
xchg
xchg
in
push
insl
sahf
add
sub
dec
dec
jmp
lods
lret
pushf
push
out
inc
jbe
ljmp
add
and
sub
jecxz
into
push
popa
push
fisttpl
jne
test
lcall
dec
cmp
ffree
mov
and
test
mov
cltd
ret
nop
out
push
movsl
cmp
out
mov
jb
gs
sbb
lods
scas
mov
nop
je
cmp
mov
pop
cmpsl
cmc
mov
sbb
or
icebp
test
mov
pop
cmp
dec
cmp
aad
or
cltd
sbb
cmp
jg
movsl
jmp
outsb
add
f2xm1
ret
jno
adc
and
cmp
dec
mov
push
xor
mov
cmpsb
cmp
push
ret
outsl
sti
test
push
pop
repz
mov
test
out
jge
mov
cld
ja
xor
jge
cld
call
cld
xchg
pop
rclb
push
gs
lea
and
out
clc
push
rol
adc
arpl
dec
nop
in
inc
inc
push
lods
dec
aas
add
jle
dec
mov
out
rcl
mov
inc
sub
push
xlat
pushw
gs
pop
mov
and
or
iret
incl
nop
pop
cli
fsubl
mov
dec
mov
jmp
lods
scas
pop
xor
and
xchg
cmpl
mov
inc
or
pop
add
adc
scas
aaa
cld
jnp
sub
mov
and
je
dec
push
lock
lock
adc
stc
adc
jecxz
dec
xchg
sub
test
cmp
push
xor
test
inc
out
cmpsl
or
sbb
stc
mov
into
or
enter
push
cltd
push
inc
xchg
and
lods
lcall
mov
xchg
xchg
leave
incl
jle
jo
xchg
jl
mov
dec
sbb
cwtl
out
jmp
jb
mov
addr16
sub
mov
adc
sub
mov
or
inc
dec
xchg
jp
lock
mov
dec
and
or
sub
adc
les
jmp
pop
addr16
jb
jg
mov
adc
inc
imul
cmp
inc
jns
sub
shll
or
nop
and
pop
loope
xor
mov
jmp
ds
arpl
sbb
mov
out
push
mov
inc
push
jg
mov
jns
inc
jmp
lods
cwtl
loopne
xchg
lea
repnz
push
inc
or
pop
cmp
mov
mov
sbb
mov
gs
dec
je
out
ljmp
mov
adc
jge
push
mov
subb
mov
lcall
mov
add
xor
adc
rclb
shrb
das
hlt
push
scas
stos
icebp
xchg
lods
cmc
xor
lret
popf
dec
movsb
call
out
cld
mov
lds
cli
cmp
and
les
ret
or
push
or
or
cmp
inc
mov
int3
aam
and
push
inc
jmp
and
sub
imul
cmp
dec
sahf
mov
jbe
popa
and
or
mov
pop
hlt
mov
stc
adc
in
mov
in
adc
cmp
add
xor
popf
sbbl
xor
mov
in
cmp
insb
out
test
add
mov
mov
mov
cmp
jecxz
jl
inc
pop
xchg
les
xchg
push
add
ljmp
add
call
inc
aad
mov
add
int3
sbb
movsl
mov
and
adc
mov
mov
in
mov
and
jno
sbb
push
inc
mov
adc
inc
sarl
mov
mov
ss
clc
dec
dec
insb
fimuls
and
jo
sarl
std
pushf
and
sub
xor
pop
inc
mov
aas
das
lahf
adcl
inc
xor
mov
mov
jp
adc
dec
adc
push
lret
in
or
mov
daa
rcrb
js
ds
mov
push
mov
cmp
popf
mov
pop
sub
test
rorb
inc
cmp
testb
and
rcrb
test
repnz
lods
outsb
fs
je
movsl
or
aas
iret
loopne
xor
jg
push
out
rcl
dec
push
in
adc
fcoms
push
scas
push
std
shl
pop
pop
scas
jmp
jnp
xchg
out
mov
dec
jp
fnstsw
lea
mov
and
shl
inc
lahf
pushf
repnz
mov
test
ret
rol
mov
icebp
js
outsl
push
and
out
aad
pop
jnp
ljmp
jp
adc
and
int
adc
insb
test
loop
xor
jmp
js
mov
mov
sbb
push
push
test
aaa
push
mov
adc
adc
push
cmp
fsts
jne
ljmp
fisubs
push
into
sahf
adc
mov
push
repnz
pop
mov
sbb
or
dec
fsts
pop
popa
iret
jg
xchg
leave
or
mov
mov
xchg
jmp
pop
mov
sarb
jne
in
xchg
push
push
pop
mov
dec
iret
mov
out
lods
push
push
icebp
jmp
fmuls
pop
sbb
sbb
inc
jnp
data16
mov
leave
out
jnp
shll
mov
xor
cmp
cltd
mov
jmp
or
and
shrb
mov
shl
xchg
roll
pop
pop
and
mov
xchg
rcrl
pusha
rclb
pop
xlat
push
inc
mov
cs
cmpsb
jns
push
or
mov
add
mov
push
stc
jae
imul
ret
lods
int3
arpl
dec
not
and
xor
mov
mov
xor
or
mov
mov
jmp
lds
jno
push
push
or
inc
pushf
nop
push
add
adc
push
clc
adc
dec
std
jae
mov
les
sbb
add
loopne
imul
mov
and
lods
sarl
movsl
dec
cmp
dec
pop
or
sbbl
ds
and
fimuls
xchg
push
loop
aam
pushf
jo
pop
in
loop
mov
enter
cli
rcll
lahf
adc
xor
lret
je
sbb
call
inc
iret
cmpsl
bound
xchg
pop
frstor
test
sub
insb
xchg
cwtl
inc
lods
jnp
sub
outsl
push
push
insb
jecxz
pop
lcall
gs
lret
lret
enter
xchg
cmp
gs
jb
pop
xor
sbb
xchg
xor
orl
daa
and
xchg
cs
stos
shr
loop
shrb
mov
mov
xchg
adcb
aas
sbb
mov
fnstcw
dec
sbb
movsl
xchg
push
jae
dec
adc
pop
and
cwtl
insl
into
jo
mov
ljmp
fdivs
mov
ds
gs
sbb
aad
mov
xlat
nop
out
sbb
fcomps
js
cld
jae
iret
cltd
inc
pop
push
cmpsl
jno
xchg
jns
xor
sub
and
adc
mov
add
mov
adc
filds
and
jg
mov
mov
or
jbe
xor
dec
mov
xchg
dec
vcvtpd2dqx
filds
jbe
ja
in
pushf
xchg
and
lods
aad
sub
js
mov
cmp
mov
jge
out
push
push
ss
add
dec
dec
add
mov
andb
ror
insl
xchg
push
xchg
in
sbb
xor
mov
addr16
ficoml
sub
out
dec
and
inc
or
sub
repz
sahf
pushf
test
in
add
and
sahf
movsb
jmp
cmp
rorb
pop
jp
mov
stc
jl
add
jmp
pusha
mov
je
push
stc
and
or
ret
stos
xchg
clc
popa
jmp
jle
push
mov
sti
push
mov
ss
sub
call
shrl
dec
outsb
ret
icebp
or
cmc
hlt
leave
push
mov
mov
adcl
mov
pushl
dec
leave
cs
pop
pop
mov
addb
jge
lods
and
aas
mov
add
outsl
xor
negl
push
test
popf
jo
repz
ret
cld
xchg
movsb
inc
pop
cmp
push
pop
push
fs
out
pop
clc
outsl
push
xchg
int
and
jo
addr16
loope
xor
sub
pop
mov
push
dec
sbb
pop
js
xor
ljmp
mov
das
outsb
adc
sbb
ljmp
lock
aaa
pop
lock
jb
jl
mov
lock
les
aas
push
jg
testl
clc
jne
fisubs
jo
popf
daa
adc
rcll
jno
stc
cmp
mov
out
dec
mov
mov
repnz
cmp
mov
add
fisubrl
inc
cmc
imul
and
enter
cmp
sbb
in
push
adc
jle
mov
out
test
xchg
xchg
in
in
bswap
js
pop
dec
loop
push
pop
or
mov
xchg
dec
lea
jg
inc
hlt
outsl
repz
xlat
movsl
cmp
jecxz
andb
mov
sub
mov
icebp
jg
mov
movsl
orps
sti
scas
ja
mov
pop
loopne
outsl
push
jle
shl
jnp
add
inc
add
je
or
dec
fistl
jne
pop
daa
jge
add
insl
pop
mov
push
ljmp
xchg
sarb
or
xlat
les
cmp
mov
and
test
pop
add
test
fstpl
sub
clc
push
add
pop
outsl
xor
fldl
pop
adc
or
cs
mov
xor
jle
mov
and
je
inc
jle
pop
or
test
cli
fsubrl
mov
inc
pop
push
mov
add
push
lea
xor
in
icebp
jmp
loopne
scas
xchg
mov
dec
mov
sbb
fdecstp
movsl
push
push
imul
and
push
jl
cltd
scas
add
sub
pop
in
mov
repz
mov
xor
cli
fldenv
mov
cmpsb
dec
enter
cmp
rcr
mov
xchg
jo
fldt
push
add
mov
add
cltd
mov
mov
jbe
int
int3
pop
scas
xchg
mov
outsb
fnsave
lods
fisubl
addr16
mov
jns
ja
ss
cli
fidivrl
ret
pop
movsl
idivl
or
ljmp
fcmovbe
add
mov
xor
xchg
adc
push
cmp
inc
sbbl
pushf
pop
jmp
adc
add
xchg
add
push
jmp
mov
xchg
sub
dec
and
xor
mov
adc
mov
jnp
outsb
test
jp
adc
mov
stos
outsb
fucomp
or
lea
iret
inc
mov
ja
aad
sbb
inc
add
adc
jp
pop
and
mov
roll
push
or
pop
shrl
push
cltd
jmp
mov
adcl
inc
inc
sbb
fsubs
dec
shll
enter
push
popf
addr16
sbb
jnp
adc
mov
xchg
sub
andb
xor
xor
enter
data16
daa
jge
cmp
addr16
iret
mov
adcl
mov
dec
add
mov
gs
cld
into
mov
cwtl
mov
push
scas
lret
mov
xor
cs
loope
add
mov
jmp
xorb
out
fidivrl
adc
sti
xchg
mov
lahf
lret
and
push
or
xchg
cltd
lret
and
in
push
cmp
clc
inc
mov
shr
mov
mov
mov
xor
mov
xor
shl
mov
or
mov
cmp
je
mov
sub
mov
mov
mov
shl
xor
mov
mov
mov
xor
xor
shrd
shr
or
xor
or
mov
mov
mov
mov
xor
shl
xor
mov
mov
mov
mov
xor
xor
shrd
or
shr
mov
mov
or
mov
cmp
jne
cmp
je
jmp
jmp
inc
jle
add
add
add
sbbb
push
scas
adc
push
clc
adc
inc
shl
or
arpl
int
mov
js
mulps
and
push
fs
dec
adc
xchg
cmp
xor
in
adc
mov
lods
or
mov
movsl
aam
push
push
mov
push
push
jmp
add
sub
fiadds
les
stc
gs
das
jmp
pushf
or
out
movsl
xchg
sbb
push
mov
aad
push
inc
hlt
imul
mov
addr16
mov
pusha
rolb
shlb
dec
std
xorb
xor
cmp
lcall
cmp
xchg
cld
in
cs
dec
out
push
push
mov
mov
push
stos
xor
shll
xchg
scas
adc
xchg
and
fstps
mov
add
and
ss
push
or
pop
cmp
push
dec
adc
pop
inc
and
dec
push
mov
sub
push
das
out
push
cmpsb
jo
ficoml
loope
push
inc
push
cli
in
lods
add
mov
cmpsb
adc
pop
test
cmp
cmp
sbb
add
or
jecxz
in
cmpsl
pop
mov
dec
rcr
lds
js
adc
jecxz
sbb
call
bnd
sbb
mov
ret
leave
in
or
adc
scas
dec
dec
lret
mov
lea
push
inc
push
test
xor
push
xor
adc
mov
inc
mov
and
mov
movsl
xchg
std
sar
push
mov
ljmp
jb
in
rol
adc
inc
push
sub
lcall
loop
leave
je
sub
dec
addb
pop
push
outsb
jae
imul
xchg
fistps
mov
mov
or
cmp
or
cwtl
push
daa
aad
sub
add
movl
or
sbb
stos
adc
insl
dec
mov
pop
decl
or
push
int
inc
sub
jb
sbb
scas
mov
das
mov
fisubs
outsb
cmc
ss
sub
mov
negb
pop
movsl
dec
test
xor
js
adc
dec
pop
jnp
dec
dec
xchg
in
int3
jecxz
push
repnz
js
sub
mov
xchg
cli
pop
lahf
dec
into
pop
decl
adc
mov
add
sti
pop
icebp
push
mov
mov
and
js
dec
pop
add
cmp
icebp
aad
lret
in
imull
cmp
and
inc
insb
dec
les
js
xor
int
xor
mov
enter
xchg
icebp
loope
int
fildl
push
sti
int
dec
pusha
clc
call
dec
je
cmp
ds
loope
mov
cmp
outsb
mul
pop
outsb
mov
add
and
inc
dec
sbb
aas
mov
jo
xor
xor
rcl
pop
fwait
dec
mov
mov
daa
movsb
push
scas
lret
adc
ljmp
mov
mov
out
xor
add
mov
lods
inc
data16
hlt
dec
inc
jl
push
sub
adc
pop
mov
or
fwait
icebp
mov
hlt
dec
mov
jno
shrb
sbb
sub
cmp
cmp
arpl
inc
cmpb
pop
test
cmp
push
and
add
inc
push
mov
es
lret
incl
jo
insb
sbb
jns
xor
nop
es
pop
mov
out
decl
adc
imul
adc
mov
stos
sti
dec
pop
jnp
enter
into
sbb
cmpsb
mov
mov
call
sbb
dec
xchg
xor
arpl
dec
jns
popa
mov
outsl
icebp
push
inc
mov
in
mov
sbb
ret
or
dec
mov
or
fcoml
xor
lahf
in
out
nop
xor
add
xlat
lods
subb
das
dec
aam
dec
inc
push
and
cmc
mov
mov
xchg
pop
leave
push
add
outsl
cltd
jge
mov
dec
sti
js
dec
outsl
sub
movsl
cmp
test
in
push
jo
adc
mov
pop
cmp
leave
jno
mov
lea
mov
xor
xor
push
jg
test
sub
push
mov
lret
sti
je
xlat
inc
icebp
fdivl
sbb
rorb
inc
pop
mov
jns
sub
jl
jb
mov
jmp
nop
dec
mov
push
loopne
pop
push
pop
dec
xor
push
bound
mov
in
inc
loop
shll
fists
mov
push
not
add
nop
shlb
sub
xchg
shr
dec
call
outsb
sti
out
pop
scas
movsb
pop
sub
push
pusha
push
mov
adc
insl
xchg
movsl
add
jb
pop
popa
pop
jne
jnp
int3
insb
add
pop
lret
bswap
in
inc
negl
jno
int3
push
adc
lods
cli
inc
int
cmc
sub
adcb
movsb
add
sub
fs
movsb
jg
aam
lahf
aaa
inc
and
sbb
adc
pusha
jnp
sahf
mov
sub
rclb
xor
inc
cmp
inc
and
mov
punpckhdq
mov
pop
cmp
repz
test
xchg
push
out
xlat
xchg
fsts
xchg
bound
movd
dec
sahf
or
pop
shll
mov
mov
xchg
dec
sti
pop
inc
jecxz
dec
stc
pop
std
inc
mov
adc
dec
stos
stc
filds
enter
inc
xchg
mov
pop
loop
fisttpll
cmp
jae
jns
test
mov
add
rorb
je
push
js
pop
fucomi
jae
dec
ud0
jns
jne
adc
repz
push
lds
jbe
sbb
popf
add
cmc
sbb
and
xor
mov
jp
inc
std
mov
jp
push
mov
jecxz
push
xchg
xor
and
je
xchg
outsb
xor
js
sbb
push
sub
je,pn
rolb
cmpsb
push
fdivr
xor
adc
pop
in
jne
inc
int
push
aaa
mov
mov
or
sbb
int3
jb
sub
fwait
push
adc
movsb
xor
add
shl
xor
mov
mov
mov
xor
xor
shrd
xor
or
jmp
test
and
push
mov
repz
jmp
sbb
xchg
mov
adc
clc
adc
movsb
aam
sub
add
push
rcrb
dec
lcall
aaa
jmp
dec
mov
scas
pop
lods
addr16
sub
scas
cmpl
mov
inc
ret
imul
icebp
cmp
in
testl
je
add
pop
or
repz
jnp
lcall
sub
loope
inc
out
cltd
insl
pop
mulb
sbb
or
test
dec
popf
in
pop
add
jp
jmp
jmp
test
scas
shl
dec
lods
dec
dec
pop
out
inc
jnp
push
sti
jp
or
push
jecxz
inc
and
and
cmp
test
add
mov
leave
insb
sub
push
jns
test
add
inc
and
jp
icebp
or
daa
cmp
mov
das
sti
std
dec
inc
mov
test
fistpl
imul
mov
and
lea
sahf
mov
js
test
jae
sbb
sbb
ficoms
mov
mov
pop
pop
loop
les
jo
pushl
out
fcomps
sbb
shlb
mov
jmp
lock
rorl
mov
stc
mov
cmp
mov
xchg
or
popa
insl
sub
mov
mov
pop
xchg
lods
sub
insb
cld
scas
scas
xchg
xchg
mov
imul
inc
fstpl
push
mov
nop
popf
xchg
xchg
popf
push
cmp
int3
cs
fbstp
lods
dec
cmp
push
xorb
jle
out
lret
mov
xchg
pop
cmp
in
orl
popf
jmp
jno
sahf
adc
test
lret
or
ds
cld
ret
pusha
and
testl
pop
pop
mov
pop
imul
sub
clc
lahf
xchg
iret
mov
mov
and
cmpsb
fdivl
clc
movsl
jo
inc
imul
loope
xor
and
jae
jno
fs
sub
cld
sbb
nop
test
xchg
movsl
mov
xor
jle
and
into
mov
data16
inc
push
or
adc
jecxz
adc
mov
push
aas
out
xlat
int
jp
push
fcmovbe
cmpsl
enter
int
in
add
push
adcl
mov
mov
xchg
lahf
jg
lcall
out
and
test
xchg
pop
mov
cmp
dec
sarb
rolb
sbb
mov
add
sub
xor
jbe
enter
nop
cmc
cmp
int3
xlat
or
mov
pop
test
mov
push
cld
aam
dec
cmpsl
or
daa
mov
jle
mov
into
jl
into
stos
xchg
aam
inc
divl
mov
mov
pop
adc
test
or
or
imul
test
imul
xchg
xor
dec
ret
xchg
jmp
xchg
fcomps
movsl
mov
arpl
dec
lds
loop
mov
arpl
adcl
loop
jne
push
push
shlb
add
lods
push
xor
sub
pmullw
dec
dec
es
std
icebp
sub
cmpb
negb
sub
mov
dec
mov
sbb
dec
push
mov
dec
jge
insb
adc
xchg
dec
aaa
mov
mov
mov
mov
sub
xchg
nop
lds
sbb
push
or
mov
or
stos
aam
icebp
jg
push
mov
mov
add
negl
cs
lock
ret
mov
inc
outsl
dec
mov
dec
add
dec
testl
xor
ss
xchg
dec
mov
cmp
sbb
mov
in
sti
inc
and
xchg
dec
mov
aam
cmp
mov
lcall
mov
pop
or
adc
xchg
sub
cmp
adc
jnp
in
mov
ja
mov
cmp
std
mov
xchg
xor
push
movsb
cs
scas
dec
cwtl
adc
mov
mov
mov
test
mov
jnp
adc
xchg
jle
popa
pop
jae
loope
adc
inc
xchg
aad
shlb
jl
inc
xor
mov
xor
subl
into
cltd
mov
sbb
push
mov
and
test
nop
dec
adc
bnd
mov
mov
mov
mov
int3
jbe
enter
stos
add
and
insb
mov
mov
into
popa
popa
test
inc
test
mov
xchg
lea
loop
arpl
jno
pop
xchg
pop
inc
add
xchg
cmp
pusha
pushf
arpl
out
fidivs
push
loop
jo
insb
inc
push
aam
or
inc
nop
xchg
inc
je
xchg
push
jp
xor
lods
mov
rorb
fsubl
fadd
popf
call
pop
push
je
outsb
into
adc
loop
and
aas
dec
mov
es
sub
jmp
mov
sub
jno
jo
fsubrs
test
xchg
nop
lret
sbb
mov
mov
pop
fwait
add
dec
test
inc
jmp
sub
pop
sub
xchg
mov
and
or
lds
fcmovnbe
xchg
aaa
sbb
mov
ret
int3
ljmp
lods
icebp
sbb
sbb
push
pop
shrl
cmp
cmp
fimull
out
adc
je
add
cmp
add
arpl
lea
or
sub
xchg
in
and
jne
add
xor
in
cltd
test
inc
shll
icebp
scas
clc
jno
je
cmp
lock
ja
push
mov
addr16
sti
add
mov
dec
test
fnsave
xlat
adc
and
inc
aaa
frstor
jp
leave
enter
xorb
mov
pop
lds
jnp
out
and
mov
negl
es
lods
cmp
hlt
das
popa
mov
mov
mov
xor
shr
or
mov
mov
shl
xor
mov
mov
xor
mov
mov
xor
shrd
or
shr
mov
mov
or
mov
mov
mov
jmp
movsl
mov
mov
inc
repz
stos
shlb
aam
adc
push
clc
adc
movsl
cld
popf
sti
jecxz
fsub
mov
or
insl
hlt
pop
lcall
vminsd
push
aam
cld
and
xchg
out
jbe
mov
and
push
or
and
pusha
popf
mov
or
jno
stc
nop
aaa
inc
jmp
test
ret
movsb
and
push
cmp
stos
pop
shrl
mov
fldl
sahf
jecxz
inc
push
fs
mov
pusha
jo
pop
icebp
push
bound
loopne
decb
and
dec
pop
imul
xchg
mov
mov
hlt
rcll
popa
insl
sub
bound
out
sub
xchg
pop
pop
fcmovnb
popa
mov
xor
dec
jae
cld
adc
and
xor
fs
or
mov
ret
rorl
jbe
popa
loopne
dec
inc
xlat
in
jl
cmp
mov
fwait
cmp
lret
mov
dec
lock
sbb
and
addr16
and
dec
xchg
inc
outsb
push
xchg
add
test
add
repz
inc
rolb
in
inc
fdivrs
or
add
xor
adc
stos
loopne
xor
pushf
rcll
out
ljmp
fs
sti
adc
shrl
out
sbbl
push
xchg
jno
add
fnstsw
cmpsb
jns
cwtl
fldenv
test
loop
adc
push
iret
inc
pop
cmp
int3
fwait
pop
scas
xor
and
push
mov
hlt
cmpsb
iret
sahf
notl
fld
xchg
xchg
push
leave
xchg
dec
lcall
push
int
mov
testb
into
ret
dec
lea
inc
lods
arpl
push
sub
gs
bound
ljmp
push
in
mov
gs
lret
jp
xchg
loopne
stos
dec
dec
insb
jnp
mov
pop
jl
dec
adc
adc
pop
mov
lret
lods
nop
pushf
pop
jae
jno
loop
and
leave
push
sbb
mov
aas
pop
xchg
mov
into
pushf
aam
movswl
xchg
dec
xor
xchg
inc
faddl
addb
or
repz
jae
sti
jne
push
inc
enter
push
inc
or
push
xchg
out
je
mov
lock
test
rcll
repz
and
je
dec
lahf
xor
ljmp
nop
mov
add
loope
adc
sbb
js
jnp
lahf
inc
imul
jne
pop
cmp
pop
push
adc
cli
in
mov
pop
lock
add
inc
into
push
sub
dec
cmpsb
nop
mov
repnz
inc
mov
sti
orb
adc
mov
mov
mov
pop
add
add
jne
fldenv
jo
stos
ret
sbb
repnz
inc
xchg
inc
es
jg
fstl
adc
mov
add
sbb
pop
mov
decl
data16
lds
mov
loopne
xor
lret
negb
cmp
push
mov
jp
and
jbe
fstl
adc
mov
or
pop
dec
sbb
icebp
xor
nop
mov
adc
lds
mov
xor
add
pop
int
aam
adc
adc
mov
xorb
icebp
dec
scas
adc
push
push
fistps
je
sbb
sub
inc
xadd
popf
xchg
lea
jb
or
mov
and
pop
add
or
push
jbe
dec
hlt
jbe
lods
js
rorb
pop
mov
adc
sahf
sub
mov
dec
mov
xor
mov
mov
icebp
scas
fisubl
mov
insb
mov
movsl
adcb
jnp
ljmp
insl
mov
mov
xor
lea
flds
lds
sub
mov
ds
mov
sarb
in
mov
ja
jo,pn
sub
or
enter
rorl
xlat
loopne
xchg
fistps
xor
in
call
out
mov
mov
orb
leave
mov
js
leave
add
outsb
and
aam
pop
xchg
loopne
sub
mov
push
xor
cmp
dec
out
cmpb
fs
add
inc
lods
pop
push
sub
mov
or
add
jo
xor
or
cmp
sbb
dec
cld
xor
andb
or
lds
dec
xchg
sbb
push
lods
mov
xchg
subl
or
imul
sub
bound
xchg
mov
jnp
adc
rolb
xchg
out
pop
xchg
lret
cs
jle
cmp
mov
jnp
pop
dec
incb
out
js
xor
or
sub
fsubrs
or
test
push
xchg
add
pop
cmpsb
icebp
out
add
inc
call
jle
push
cmpsl
or
cld
and
adc
jle
les
movsl
xor
out
or
ss
add
in
sbb
imul
push
inc
jae
push
xchg
into
pop
insl
movsl
pop
add
pop
sbb
js
cmp
push
xor
out
or
cli
push
xchg
mov
dec
xor
popf
mov
push
sbb
repz
pop
mov
xchg
fistpl
cmp
mov
dec
sbb
mov
loope
or
out
jmp
add
sti
enter
push
inc
xchg
or
pushf
and
pop
outsl
leave
out
xchg
cli
xchg
bswap
xor
xchg
aaa
mov
push
sub
pop
cmpsb
into
stc
mov
mov
pop
mov
or
inc
xor
lret
or
out
test
cwtl
movsl
mov
push
mov
aad
in
pop
les
das
shll
jb
std
mov
push
sub
dec
out
dec
insl
stos
adc
idivb
xor
inc
lods
adc
cmc
xorl
cld
pop
inc
movsl
aam
sub
fmull
dec
fdivrs
mov
adc
mov
dec
mov
push
add
lea
push
cmp
jg
mov
mov
push
pusha
cmp
cmp
jne
mov
cmp
je
mov
mov
mov
mov
lea
mov
mov
mov
mov
mov
shrd
mov
mov
xor
shr
mov
xor
shl
or
mov
mov
jmp
xchg
inc
aad
les
push
fmuls
add
outsb
mov
adc
clc
adc
cli
rclb
ss
mov
rolb
dec
sahf
jnp
movsl
iret
clc
cmc
fcompl
jbe
and
fadds
cmc
pop
cmpsl
test
cmc
insb
cmp
jne
sbb
movsb
popf
or
push
scas
scas
stos
sub
push
xchg
cwtl
mov
lds
mov
push
pushf
andb
out
js
mov
add
shrb
pop
ja
mov
cwtl
movsb
ficoms
and
pop
jmp
stos
xchg
push
sbb
out
push
cwtl
push
repz
lahf
lock
loope
pop
inc
vmovapd
sbb
cmpsl
cmp
enter
mov
aas
repnz
icebp
iret
cmove
lret
cmpsb
mov
or
adc
pushf
shrl
push
in
jle
inc
jbe
or
cwtl
in
mov
xor
dec
dec
repnz
scas
into
stc
testl
cmc
pop
mov
sbb
sbb
ljmp
es
cltd
xlat
jbe
dec
out
pop
shlb
test
test
and
push
pop
lret
out
mov
inc
push
sub
xlat
cmp
pusha
int3
inc
add
xor
fcmovne
jge
insb
cltd
rolb
xchg
xor
push
fisttpll
mov
mov
push
adc
xor
add
imul
sti
dec
mov
mov
adc
out
xlat
jbe
popf
mov
out
mov
loopne
orl
movhps
mov
dec
pop
stos
loopne
pop
idiv
xchg
cmp
cmp
sub
fdivp
jnp
ljmp
gs
adcb
lahf
into
cmp
mov
aad
dec
clc
imul
ret
pop
dec
push
stos
xchg
and
aam
dec
mov
ss
xchg
adc
int3
loop
test
fnstsw
lock
inc
mov
fadds
push
and
fdivs
aas
testl
std
jbe
insl
shr
mov
or
dec
and
stos
xor
lret
inc
cmp
jg
test
xchg
outsb
pop
mov
and
lds
or
scas
sbb
hlt
pushf
jmp
mov
mov
ja
ds
mov
sub
mov
mov
push
cltd
mov
push
pop
push
or
cmpsl
xor
and
in
insb
insb
add
push
jnp
cld
fwait
aad
mov
jge
shrb
dec
insb
ret
sub
je
push
jg
push
jmp
das
sbb
mov
ficomps
or
fnstcw
stos
jle
adc
pop
adc
dec
pop
in
loop
adc
dec
and
or
add
fnstsw
mov
push
fsubrs
dec
test
ss
in
cmp
push
ret
int3
cmovbe
movsl
loope
call
cmp
loopne
adc
fsubr
pop
cmp
sub
rep
shl
adc
jo
shr
mov
dec
outsb
add
pop
dec
jg
push
xor
jns
sbb
jge
jbe
test
in
and
popa
mov
loope
lcall
cmpsl
inc
jmp
mov
fdivs
dec
es
push
jl
add
scas
cmp
inc
out
cmp
xor
in
cwtl
mov
js
cmpsl
aas
andb
in
mov
pop
mov
mov
test
adc
ja
dec
mov
pop
iret
roll
xchg
jmp
push
jmp
enter
jns
mov
sbb
or
loope
inc
test
out
jne
outsl
mov
negl
and
jmp
mov
inc
test
jno
fistpll
adc
jo
jnp
add
pop
cmp
inc
negb
imul
sbb
mov
push
mov
xlat
cmp
addr16
xor
es
enter
cmp
sarb
icebp
sub
mov
outsb
xchg
fstl
insb
stos
xchg
fsubr
and
lcall
rclb
mov
xchg
repnz
insb
cmp
mov
and
sahf
lds
jle
mov
insb
in
fucom
mov
sti
sar
repz
mov
xchg
cld
std
outsl
mov
sub
xchg
cmp
push
movsb
sub
ss
pop
mov
mov
dec
cld
call
divl
imul
call
data16
dec
jbe
dec
inc
mov
call
lock
sub
ret
popf
in
cmp
sub
xor
stos
and
jge
mov
sbb
add
mov
bound
int
mov
adc
push
jmp
and
cwtl
mov
loope
dec
pop
jne
scas
mov
or
scas
mov
push
cmp
push
add
mov
push
scas
andb
ss
fstps
insb
out
dec
push
add
dec
pop
jmp
and
bound
sbb
dec
ror
inc
xlat
mov
add
js
mov
jno
jbe
int
imul
mov
push
cmpsb
icebp
pop
adc
out
mov
idivb
movsl
ror
cmpsb
mov
ficoml
pop
mov
fnstcw
add
mov
mov
mov
xchg
movl
ja
jg
jl
jbe
nop
and
ret
or
mov
xchg
in
test
inc
rcrb
jo
sub
mov
stos
repnz
stos
sbb
xor
test
or
push
daa
jno
sub
push
cmp
out
movsl
inc
mov
shlb
stos
lock
sahf
lods
loope
xor
cwtl
icebp
call
mov
add
mov
rolb
cmp
outsl
add
imul
psrlw
call
adc
pusha
test
loope
or
rclb
adc
mov
xchg
dec
outsl
pop
shrl
fcomp
pop
stos
mov
push
jns
in
mov
mov
mov
xor
js
adc
mov
lret
mov
es
adc
mov
dec
push
inc
jmp
stos
sbb
mov
pop
call
mov
xor
shld
xor
mov
mov
shl
jmp
lret
xchg
cli
icebp
mov
fiadds
ret
push
xchg
push
clc
adc
int
inc
sub
flds
stos
negb
aad
fisubs
movsb
xor
out
in
orb
je
xor
lock
notl
lahf
adc
or
dec
movsl
cltd
mov
rclb
stos
mov
cmpsb
mov
jmp
lahf
push
test
jae
data16
fmuls
je
cmp
fs
push
loopne
xchg
mov
sub
xchg
adc
jb
sahf
frstor
add
es
mov
stc
cmp
push
stos
mov
shll
add
mov
adc
shlb
adc
mov
and
ds
sub
fcomi
push
pop
sbb
push
repnz
mov
fsub
leave
cmpsb
jp
mov
add
aam
bound
dec
das
or
icebp
icebp
lds
mov
dec
notb
sahf
mov
out
pushf
xor
sbb
adc
aad
mov
pop
push
mov
add
shl
les
loope
pop
cld
push
pop
fiaddl
popf
popf
aaa
sub
fists
jno
adcl
xor
xor
ljmp
adc
jbe
jnp
push
jmp
iret
shll
push
jle
or
push
popa
jo
dec
add
jg
pop
push
rcll
xchg
xor
movsb
out
lret
push
or
aam
decb
dec
xchg
push
or
xchg
addb
jb
mov
pop
pop
je
or
test
mov
icebp
mov
cli
lret
add
fisttpll
arpl
cmp
int
shr
mov
xchg
es
jge
mov
pop
testb
pop
mov
cmp
pop
mov
rcrl
sbb
xchg
adc
inc
cld
sbb
in
mov
in
sar
push
jge
mov
xor
pushf
pop
mov
xchg
test
mov
pmuludq
cs
test
inc
loope
je
out
nop
ss
popa
jnp
xchg
push
adc
and
mov
inc
js
sub
sub
and
std
mov
dec
ret
add
into
sub
and
pop
push
test
or
push
mov
xor
xchg
mov
xor
push
jle
jb
push
jne
xor
xchg
orl
push
scas
sub
ljmp
xchg
jp
adc
mov
dec
rep
ljmp
cmp
repnz
lock
out
repz
leave
aam
negl
dec
pop
out
imul
or
xchg
and
shrl
xchg
es
inc
or
xchg
adc
or
fistps
xor
cmp
push
push
lahf
or
out
notb
push
mov
out
js
adc
pop
adc
dec
pop
jae
je
incb
jbe
and
push
jmp
xchg
stos
pop
test
clc
fidivs
adc
stos
push
adcb
js
aad
decb
jecxz
mov
ret
shlb
sub
fcmovb
mov
add
jmp
pop
xor
xchg
paddq
mov
or
jmp
cmp
sub
je
mov
call
cmpb
out
cmpsb
in
gs
mov
loop
push
xor
sub
out
int3
call
fisttpl
lods
push
mov
cmp
mov
ret
xchg
lahf
leave
push
mov
imul
dec
out
movsl
and
insl
xor
xor
xor
aam
lret
xor
lea
loopne
mov
mov
sbb
sti
sbb
xchg
dec
mov
push
pushl
inc
lock
int
popf
xor
bnd
inc
sub
sub
imul
cmp
push
add
cmp
loop
jae
and
imul
adc
fs
lret
aad
add
sub
pop
and
pop
popf
inc
movsl
or
fdivr
cltd
incb
fcmovu
enter
out
jmp
mov
stc
loop
sbb
adc
jp
rolb
js
push
insb
dec
push
mov
sbb
lods
dec
sarb
aaa
rcrb
dec
dec
mov
pop
sbbb
loopne
ret
xlat
jge
xchg
clc
jno
dec
mov
xchg
inc
repnz
ret
jge
test
or
arpl
cwtl
sbb
cmpsb
cs
inc
sbb
jle
rcr
ja
pop
fldt
sahf
xchg
cmp
int
or
and
jbe
sahf
nop
push
subl
cmp
in
popf
out
lods
out
scas
inc
mov
push
lods
loop
call
sub
add
push
jae
mov
insb
mov
sub
cwtl
sub
sub
mov
pop
roll
or
mov
dec
je
mov
mov
inc
mul
cltd
shlb
sahf
mov
in
jecxz
xchg
dec
mov
or
movsl
hlt
rcrl
and
adc
lods
pop
cmp
sub
aam
inc
add
add
push
inc
mov
add
jp
or
sbb
pop
dec
sub
push
xchg
dec
cltd
mov
sbb
adc
adc
jmp
mov
lret
aam
inc
cwtl
loope
mov
cmp
push
aaa
inc
xor
cmp
stos
or
test
aam
xchg
xor
mov
hlt
xchg
scas
push
fiaddl
aaa
orb
pop
rcll
add
ja
repnz
mov
xor
xlat
mov
mov
sbb
mov
loopne
loopne
test
mov
inc
stos
pop
xchg
stc
adc
jle
adc
push
test
lds
mov
pop
mov
ss
insl
cmpl
pop
mov
mov
sbbl
jns
negl
iret
pop
or
mov
push
jmp
pop
sbb
mov
ret
sahf
lea
popa
cmp
out
add
or
aam
pushf
aad
fistpl
xchg
cld
cs
out
mov
sarb
and
mov
nop
jns
repnz
in
mov
repnz
lods
mov
mov
xor
mov
cmp
jne
mov
jmp
mov
imul
push
inc
pop
xchg
push
adc
lcall
cmp
pop
lea
psubw
call
rolb
sbb
mov
inc
push
inc
mov
ret
movsb
shl
je
inc
or
addr16
pop
pusha
jl
out
je
sbb
stos
int3
jg
cmp
xchg
or
add
lahf
repnz
push
xlat
add
pop
scas
out
pop
into
ret
add
stc
jno
ja
jmp
adcl
in
bound
pop
ds
or
dec
xchg
cwtl
sbb
insl
divb
mov
or
ret
or
or
xor
mov
and
sbb
negb
sbb
int
pusha
loope
or
adc
xchg
in
sub
orb
stc
aaa
adc
cmp
cwtl
das
insb
push
push
mov
fsubrs
lret
and
lahf
cs
and
adc
push
std
mov
xlat
mov
decb
sub
addb
call
loop
pop
iret
or
inc
push
pop
inc
or
enter
icebp
xor
test
outsl
cmpsb
push
cld
sbb
push
jnp
fisubrl
dec
and
sub
repnz
pop
xchg
add
push
mov
outsl
or
jb
add
cmc
mov
jl
cmpsl
adc
mov
cmp
mov
mov
imul
and
inc
fstps
insl
jg
test
or
dec
jl
xchg
xor
mov
aad
mov
jecxz
loop
fildl
cli
data16
mov
fisubl
in
sbb
testl
mov
pop
aas
push
notb
aas
add
inc
push
aad
dec
xlat
bound
aaa
sbb
add
pop
xor
rcl
loopne
je
push
xchg
insb
in
push
sbb
cmpsl
imul
cwtl
xor
fadds
out
jmp
clc
sub
sarb
insl
pop
push
xchg
loope
enter
adc
inc
push
outsl
cmp
out
int3
xor
jne
mov
incb
testb
or
or
fidivl
aaa
sbb
and
fbld
scas
test
fstps
imull
push
aad
in
insb
aas
notl
dec
movsb
push
cmp
outsl
dec
jo
fdivrs
mov
dec
pop
mov
mov
sbb
push
inc
add
sbb
xor
stc
jo
repnz
or
add
out
add
popaw
outsb
push
inc
arpl
out
fwait
push
in
or
lods
pop
sbb
arpl
jae
outsb
jecxz
popa
ss
scas
dec
push
cmp
cmp
test
inc
push
jmp
cmp
push
pop
mov
ja
cli
sbb
scas
dec
dec
stos
inc
psrld
imull
std
das
lds
popf
pop
ret
in
and
push
or
sbb
enter
jne
out
js
mov
add
pop
dec
mov
movsl
xor
icebp
push
mov
mov
outsb
sub
mov
dec
out
rcr
orl
xchg
xchg
aam
pop
in
inc
out
and
imul
or
loope
mov
mov
cmp
mull
popf
mov
xchg
jecxz
incb
xor
add
xchg
mov
inc
cmpsl
outsl
push
mov
subb
dec
push
push
fs
sbb
pop
into
inc
in
sbb
add
je
push
pop
movsl
pop
pushf
icebp
fdivrs
fs
dec
lahf
push
and
cli
and
or
fsubrl
jno
xchg
pop
mov
push
rcll
loop
jl
dec
fs
scas
into
fistl
xchg
cmpb
fs
cwtl
sbb
icebp
aam
fs
shrb
out
pop
ret
jecxz
out
mov
mov
or
jg
cld
cwtl
outsb
sahf
rcl
push
push
fwait
mov
jns
pop
sub
ret
dec
mov
xor
fsubs
xor
adc
fldcw
push
pop
test
dec
icebp
cmp
sub
inc
or
in
pushf
lahf
add
cmpsb
ret
out
popf
inc
add
mov
push
sarb
add
js
xchg
rcll
dec
dec
test
push
lock
sbb
jp
xor
pushf
imul
mov
ret
push
push
aaa
pop
jmp
stos
mov
inc
sti
stc
insl
gs
mov
iret
xor
outsl
repnz
outsl
lock
rolb
sub
jnp
jle
pop
outsl
stos
push
aad
cmpsb
mov
xchg
cmp
add
xchg
sbb
aad
inc
and
addl
adc
test
out
jae
andb
push
mov
and
dec
and
push
pop
cmp
lods
sarl
sarb
loop
adc
jbe
imul
and
sub
je
cmp
mov
cwtl
fimull
dec
in
or
push
out
insb
test
inc
mov
in
or
fsubrs
cmp
mov
in
mov
sub
mov
and
leave
adc
cmpsb
lock
lock
mov
push
push
test
mov
insl
aas
add
jge
in
jbe
dec
cs
stc
mov
out
inc
mov
pop
loope
jne
negl
mov
inc
mov
mov
clc
add
out
div
ljmp
inc
pop
out
mov
mov
fbstp
jecxz
mov
aaa
and
adc
enter
mov
ds
xor
cld
ja
daa
sub
das
jo
mov
or
call
push
andl
in
adc
cmp
xorl
and
cmc
scas
cmc
push
call
test
test
mov
ljmp
ss
loop
xchg
dec
inc
inc
frstor
xlat
inc
xor
mov
push
out
mov
pop
pop
fdivr
inc
sbb
cmc
mov
mov
int
mulb
dec
stc
mov
add
ja
fmul
jp
push
ficomps
pop
fnstcw
fcoml
fsubrp
mov
adc
inc
or
test
push
mov
mov
mov
mov
xor
shl
mov
mov
xor
jmp
dec
lds
stc
or
loopne
push
out
cmp
aad
adc
push
clc
adc
push
sarb
int3
push
jmp
push
or
dec
jle
sbb
inc
lods
pushf
std
xor
stc
testl
cltd
pushf
aam
sbb
pushf
sar
mov
mov
andb
in
xchg
andb
repz
fdivrs
sbb
inc
inc
sub
sub
sarl
mov
mov
mov
xor
enter
dec
test
jmp
fisubrs
add
fnstenv
loop
pushf
xlat
pop
dec
fldcw
xor
gs
xlat
inc
mov
and
pop
fnsave
sub
and
lds
push
test
pusha
xchg
shl
inc
dec
add
dec
out
shr
cli
ja
adc
ret
pop
dec
lock
out
push
and
dec
xchg
add
ret
fdivr
lock
cld
ret
ret
push
adc
sbb
cmp
dec
xchg
mov
and
dec
and
jp
adc
mov
inc
dec
pushf
adc
or
mov
pop
push
cld
push
cmp
xchg
clc
test
popa
push
and
in
loope
stos
jno
call
into
inc
xchg
pop
jle
lods
mov
push
lock
push
jmp
stos
push
jg
mov
adc
xlat
lret
daa
push
cmc
out
rcrb
mov
dec
sbb
aas
xchg
out
scas
dec
sub
test
and
inc
add
gs
or
test
out
enter
mov
std
roll
add
rorl
movsl
out
jne
outsl
js
push
cmp
cmp
xor
sbb
adc
stos
aam
dec
push
mov
ss
or
cli
or
loopne
add
push
lods
jl
cmp
idiv
adc
lret
add
push
inc
sub
sub
ret
lea
sub
sahf
sub
lods
xor
push
pop
cmc
inc
jecxz
xchg
dec
mov
fwait
mov
sbb
lods
aaa
sub
and
xor
mov
pop
push
pushf
xlat
jns
repz
faddl
dec
out
pop
adc
mov
jne
inc
cmpsl
je
negb
push
mov
popa
fidivl
jl
mov
icebp
xor
xchg
push
in
dec
and
adcl
jo
or
incb
pop
pop
in
leave
push
rcrl
push
lea
fs
mov
fidivl
sbb
mov
jecxz
repz
jecxz
outsl
push
pop
jg
mov
and
push
or
daa
and
aam
jl
fistl
xchg
add
and
push
lea
inc
xor
fs
out
mov
mov
cmc
sbb
mov
sub
lods
xchg
xchg
imul
fst
addr16
std
into
mov
test
setl
pop
mov
fcoml
inc
sahf
push
mov
fdivrs
and
cld
mov
in
mov
and
pusha
sbb
xor
or
aas
jge
or
pop
fstl
loope
inc
sub
test
scas
das
adc
sub
inc
xchg
add
jne
and
imul
insb
mov
mov
mov
adc
fisttpl
pop
fsubrl
or
outsl
mov
sub
cmp
xor
repnz
or
iret
push
cmp
pop
dec
std
push
inc
mov
sahf
dec
xchg
push
adc
mov
mov
inc
ds
ret
nop
fxch
sub
cmp
jnp
and
jns
mov
jp
adc
cmp
mov
inc
rcll
insb
sbb
stc
sub
sub
mov
test
pop
push
loopne
hlt
inc
mov
mov
xor
inc
cwtl
inc
lret
rcl
lds
movsl
mov
dec
add
or
sub
in
or
sub
adc
mov
aaa
hlt
adc
clc
bound
add
test
ficompl
test
mull
mov
xchg
outsb
mov
mov
add
jge
xchg
push
or
push
mov
ja
clc
les
mov
enter
ja
loope
push
call
into
pushf
iret
xchg
repz
add
mov
roll
aas
and
sbb
pop
es
push
bound
push
imul
pop
out
clc
pop
out
cli
dec
mov
pop
test
mov
xchg
mov
xlat
sub
js
inc
mov
mov
repnz
shll
pop
js
add
pop
pop
insl
insw
int3
jecxz
mov
jae
pop
outsl
and
rol
and
push
jecxz
incb
mov
push
mov
jns
xchg
cmpl
daa
lcall
fnstenv
jp
dec
mov
gs
push
repnz
push
jmp
sub
mov
inc
decb
mov
sub
rolb
inc
sbb
ja
in
stos
sbbb
or
xchg
ret
pusha
scas
out
daa
mov
xchg
cmp
movsb
sbb
mov
xchg
xlat
xchg
enter
sub
or
adc
mov
stos
int3
pop
test
insl
cmpsb
lods
aaa
jp
enter
xor
inc
jnp
add
imull
add
add
add
mov
hlt
pushf
jno
inc
pop
jae
inc
fimuls
pop
mov
cmp
dec
daa
jns
jo
mov
nop
test
dec
push
xchg
mov
call
addr16
jno
popl
bound
mov
pop
pop
out
cld
inc
xchg
jb
adc
aaa
ret
in
xchg
and
mov
xorl
cltd
lock
fbld
insb
jp
jo
je
pusha
insb
aaa
adc
insb
dec
cmpsb
std
and
jle
imul
mov
mov
mov
ret
push
aaa
mov
call
mov
in
inc
std
pop
aaa
add
inc
sub
sbb
add
adcb
scas
inc
je
ljmp
mov
iret
or
xchg
scas
pop
mov
jns
int3
notl
dec
or
add
jp
xlat
inc
clc
aaa
lock
mov
sbb
shl
rcrb
sbb
rorl
test
push
adc
push
add
cld
push
add
cmpsl
sbb
jbe
es
sbb
inc
inc
adc
adc
push
clc
adc
ret
int
cli
call
popa
pushf
call
aad
rorl
mov
jecxz
inc
xchg
mov
cli
mov
arpl
mov
filds
adc
ja
cli
jne
lcall
mov
push
pop
rcll
jnp
popl
pop
jno
lahf
int3
stos
pop
mov
inc
cld
divb
popf
xchg
pop
sbb
inc
pop
lcall
orl
dec
lret
and
adc
mov
cld
cwtl
mov
lds
mov
xor
cltd
scas
je
mov
pop
jno
adc
daa
aaa
jbe
or
out
xlat
sbb
ja
cmp
xlat
xchg
iret
sbb
fst
add
jb
and
xor
ljmp
mov
add
dec
sub
subl
lods
ret
mov
pop
and
daa
add
cmp
inc
xchg
fidivs
pop
xchg
decl
shl
sbb
test
out
push
mov
xchg
mov
cmc
divl
xor
lret
dec
iret
jge,pn
test
decb
fs
jnp
sarl
jl
add
inc
and
aam
add
dec
int3
testb
dec
xor
aaa
xor
adc
sub
add
imul
stos
xchg
jns
dec
loop
aas
outsl
jne
movsb
mov
lods
pop
sub
mov
icebp
jl
push
jle
jp
iret
mov
pop
mov
pop
clc
mov
add
ljmp
jg
push
hlt
and
std
jno
jne
lods
jg
pop
nop
jge
js
ljmp
fidivrs
or
mov
or
int
ret
add
or
xchg
add
fsubrl
sub
aad
cmc
aaa
sub
mov
and
mov
or
sbb
inc
loope
hlt
pop
cmpsl
lahf
sarl
inc
ljmp
xchg
dec
mov
jecxz
pusha
addr16
ret
pop
and
rclb
shll
stos
sahf
das
push
sub
push
push
mov
movl
adc
xor
xchg
xchg
and
dec
shlb
jo
inc
adc
popf
sub
dec
gs
adc
pushf
pop
fs
sbb
pop
adc
mov
jno
and
ja
jb
test
jmp
or
mov
cmp
mov
or
js
repnz
sahf
xchg
jae
xchg
jg
test
push
pop
in
fsubl
jnp
popf
movsb
mov
push
adc
mov
xchg
repnz
add
loopne
push
cmc
pusha
mov
mov
stos
jno
pop
ss
sub
xchg
mov
sub
add
stc
lds
push
cmp
and
test
fucomip
repnz
and
cltd
inc
pop
mov
or
xlat
pop
aaa
sbb
cmp
fcmovb
data16
iret
sbb
stc
or
les
push
sbb
cmp
sbb
fldenv
xchg
adc
pop
lods
les
mov
or
mov
xchg
ret
cmpsl
fdivrl
iret
sahf
testb
xchg
mov
or
adc
push
and
std
ss
adc
sbb
sbb
faddl
sub
mov
cmp
aam
je
mov
push
mov
push
mov
lods
fcomp
sub
sahf
sahf
jmp
aas
popf
xchg
popa
sub
out
add
adcb
enter
push
je
sbb
std
or
mov
push
xchg
pushf
pusha
pushf
jmp
mov
fldcw
jo
mov
leave
leave
lahf
in
pop
add
pushf
movsl
inc
xor
clc
aaa
xchg
push
outsb
jecxz
sbb
push
stc
dec
add
frstor
sub
lcall
mov
mov
mov
addr16
loop
loopne
and
and
rcrb
push
jae
xor
es
in
ret
adc
in
inc
js
cld
into
jbe
lret
pop
in
mov
test
sbb
outsl
idiv
arpl
stos
xor
repnz
cltd
int3
subl
cmp
pop
mov
xchg
mov
pop
ret
xchg
mov
repnz
push
in
mov
loop
sub
pop
scas
cmp
inc
add
pop
addl
ds
mov
fsubrs
pop
sti
out
sti
lcall
inc
and
sub
insb
nop
xchg
shl
stos
lret
out
xchg
addb
add
pop
and
fidivrs
jns
jo
nop
imull
addr16
icebp
call
daa
mov
or
dec
xchg
rorl
mov
jo
inc
push
cmpsb
cli
je
or
fsubrl
mov
cmp
je
dec
fsubrs
and
mov
mov
lock
sub
xchg
out
push
popf
imul
stos
gs
cmpsl
mov
inc
push
nop
dec
lods
fmuls
cmp
mov
popa
adc
jle
and
cmp
add
xor
jmp
dec
cli
jmp
cld
stos
add
sbb
movl
rol
xor
outsl
fs
lcall
jmp
and
cmp
mov
sahf
mov
push
in
sub
cs
lcall
mov
add
insb
cld
mov
scas
sbb
adc
movsb
jno
push
lret
lock
inc
inc
std
mov
mov
mov
dec
adc
pop
mov
sbb
daa
push
mov
mov
xchg
mov
mov
insb
push
cmp
inc
scas
adc
jmp
faddl
inc
mov
stos
xor
xor
adc
push
jmp
mov
sub
dec
repnz
xor
pop
fisubl
punpckhwd
inc
cwtl
or
sarl
stos
lds
mov
movsb
jle
loop
sbb
xchg
ss
rclb
pop
add
insl
adc
mov
in
cli
repz
cli
mov
pushf
jmp
pop
movsl
cmp
pop
cmp
sub
jb
dec
dec
shl
inc
jle
fidivrs
xor
xor
shrd
or
shr
mov
mov
or
mov
mov
push
jmp
adc
outsb
mov
mov
pop
inc
pop
push
push
adc
push
clc
adc
push
dec
outsl
sub
jns
rcl
sbb
lds
xlat
or
fldcw
lea
aam
add
xor
fldt
daa
mov
repnz
xchg
mov
and
mov
dec
cmc
ss
inc
ljmp
fisubrs
mov
pop
addr16
imul
mov
push
pop
sub
xor
pop
xchg
and
repnz
mov
mov
dec
mov
jbe
and
mov
mov
cmp
cltd
iret
adc
adc
arpl
mov
xchg
cmpsb
sub
jmp
and
xlat
repz
add
bound
jmp
mov
cmp
push
mov
dec
fnstcw
dec
dec
xchg
push
xlat
pop
push
or
dec
adc
je
clc
ret
pop
mov
mov
jae
xor
addr16
in
aaa
adc
jnp
push
aas
mov
xor
jecxz
iret
ret
aam
mov
cmp
cmp
in
call
xchg
sub
cli
imul
int3
xchg
dec
ret
mov
lea
inc
stos
mov
inc
ret
xor
add
sbb
mov
inc
mov
cmpsl
sub
cmp
sub
cmp
or
sbb
pushl
fadds
gs
jmp
lds
xorl
sbb
lock
pop
or
mov
mov
mov
lods
in
xchg
push
cwtl
inc
mov
aad
icebp
in
mov
push
popa
add
enter
adc
pop
add
out
inc
stos
mov
dec
loop
xchg
test
divl
stos
lods
jb
pop
std
pop
adc
mov
hlt
xchg
jl
mov
shrb
aad
popa
push
xchg
jo
mov
in
movsl
insb
jns
add
mov
jae
adc
es
sub
dec
cmp
test
mov
xchg
jg
gs
pusha
jnp
fisubrs
xor
and
jne
sbb
pop
mov
xchg
or
ja
dec
sub
jmp
int
jge
cmp
jo
xor
dec
jle
call
or
popa
int3
mov
fnsave
mov
and
jnp
push
icebp
push
adc
sti
jmp
mov
cmpsb
outsl
pop
pop
inc
mov
push
nop
jbe
cli
inc
mov
aam
and
xor
mov
sub
sbb
jae
out
mov
inc
repnz
adc
arpl
aam
test
mov
sbb
add
popa
cmp
jno
out
inc
and
lods
shlb
icebp
dec
bound
dec
add
xchg
fs
inc
or
ja
xor
push
stos
and
pushf
jns
fidivrl
jmp
mov
sbb
rclb
rcrb
jl
call
or
clc
stos
mov
inc
test
xchg
repz
and
push
push
xor
adc
mov
pop
jmp
repz
mov
jp
jbe
lret
lds
hlt
or
mov
test
shr
popf
xchg
pusha
fsubs
and
sub
or
enter
lcall
sub
sbb
in
adc
mov
mov
fwait
and
or
jns
shlb
cmp
xchg
int
and
adc
sbbb
test
or
daa
add
cmp
dec
cmc
add
sti
nop
adc
push
arpl
inc
mov
or
roll
enter
pop
fcompl
mov
dec
jno
cld
pop
pop
ljmp
aam
mov
and
fcmovnbe
mov
sbb
fsts
xor
dec
pop
aaa
decl
jo
scas
mov
push
mov
repnz
sub
pop
push
fstl
in
add
sub
xor
pop
jo
dec
dec
scas
mov
sub
stc
lods
into
inc
loope
and
mov
push
xor
xorl
pop
dec
out
pusha
and
popf
inc
rol
imul
popf
push
lahf
mov
cld
adc
fidivs
std
lods
adc
rcr
adc
lods
cwtl
mov
xchg
inc
dec
test
and
xorl
int
sub
or
in
mov
lcall
lock
hlt
xchg
jmp
jle
mov
cwtl
add
dec
inc
dec
cmp
mov
loope
movsb
testb
bound
fs
sub
aaa
mov
call
adc
mov
sbb
dec
inc
push
push
or
outsb
jb
xchg
arpl
aas
or
pop
adc
or
test
add
in
sub
jecxz
xchg
xchg
mov
mov
sub
rcrl
int3
popf
jne
icebp
arpl
mov
mov
mov
shlb
pop
sahf
scas
mov
dec
xchg
outsb
xor
arpl
cli
bound
imul
sub
fimuls
jnp
xor
push
jecxz
mov
inc
pop
dec
popa
fwait
lods
popa
cmp
inc
sbb
push
call
mov
xlat
push
fsubl
ds
mov
lret
sub
ret
lock
add
sbb
mov
sahf
stc
loopne
loopne
into
test
or
xchg
daa
adc
daa
mov
or
ss
jns
out
and
iret
les
pop
js
in
inc
stos
test
mov
jb
dec
daa
add
jne
pshufw
xchg
imul
ds
ror
call
xor
jno
aaa
adc
jnp
into
push
mov
and
pop
pop
ficompl
sbb
push
pop
enter
jge
adc
insl
jge
push
stos
push
inc
inc
push
push
bound
out
inc
jb
add
in
nop
mov
inc
mov
pusha
or
and
xchg
fisubrl
orb
push
out
ret
inc
adc
clc
ja
cmpsl
loopne
popa
pop
mov
nop
adc
cmp
xor
dec
inc
mov
add
jne
jmp
add
mov
inc
insl
inc
pop
adc
int3
pop
xchg
inc
adc
push
clc
adc
sti
cwtl
mov
fistpll
dec
mov
ret
xor
xchg
call
jecxz
test
cs
sub
and
dec
mov
jb
push
push
inc
sub
sub
popa
jno
push
lock
mov
mov
outsl
push
cwtl
sbb
loope
insb
subb
mov
jnp
test
push
xchg
repnz
push
pop
mov
insb
stc
jl
push
sub
scas
sub
icebp
fidivs
sbb
adc
xchg
xor
movsl
cmc
mov
fildl
xor
shl
mov
or
mov
imul
je
icebp
imul
clc
push
pop
xchg
aam
cmpsl
aas
mov
icebp
mov
cmp
pop
popf
mov
jl
loopne
arpl
jae
xchg
repnz
in
enterw
push
mov
addr16
xor
repz
jmp
xchg
sbb
lods
mov
mov
mov
mov
lcall
outsb
test
loopne
stos
stc
mov
imul
jae
decl
xlat
mov
push
adc
add
aam
mov
out
add
test
sub
mov
sub
xor
popf
dec
sub
and
lret
clc
ja
aam
pop
paddusb
pop
xchg
int
mov
add
jnp
mov
in
mov
repz
xchg
sti
sub
pop
mov
and
mov
sbb
adc
xchg
mov
leave
mov
xor
stc
mov
mov
mov
xor
xchg
mov
call
lea
push
mov
cmp
hlt
int
pop
loopne
lea
xchg
mov
loopne
add
iret
xor
pop
in
ds
xchg
push
je
xchg
add
ret
pop
lods
push
and
dec
adc
ja
lret
lcall
mov
fiadds
push
xor
sti
loop
lock
ss
in
push
pop
xor
out
arpl
sbb
fwait
cli
mov
jns
les
push
push
loopne
inc
mov
jmp
arpl
sti
imul
mov
jmp
insl
jg
mov
loope
les
fnstsw
mov
mov
popf
sbbl
adc
cmp
sub
test
int
xchg
mov
mov
std
pop
iret
cmpsl
test
cs
sub
lea
mov
int3
sbb
loopne
les
xchg
xor
in
stc
iret
cs
scas
dec
pop
mov
sbb
adc
test
xor
aad
mov
out
cmp
jp
dec
inc
in
xchg
adc
adcl
mov
leave
mov
add
daa
pop
mov
ja
jge
mov
jmp
out
jge
jbe
mov
cld
push
sub
jne
lcall
jnp
nop
mov
ds
pop
hlt
roll
push
push
push
add
push
xor
jmp
sub
std
pop
jle
arpl
cmpsb
mov
xchg
and
mov
mov
sbb
jno
dec
lds
out
xor
cmp
repnz
mov
cmc
repnz
icebp
cmc
cli
xor
dec
add
shll
adc
jne
test
fwait
pushf
movsb
cmpps
call
jno
daa
sub
and
in
or
aas
xchg
xchg
add
sti
cmp
popa
lret
mov
and
mov
mov
cmc
test
rorb
lods
movsb
mov
std
mov
pusha
arpl
mov
shll
push
and
adc
xchg
xor
ret
lock
fdivrs
lcall
enter
hlt
xchg
or
mov
mov
rclb
lea
popa
xlat
mov
mov
push
lret
shll
cmpb
lret
popa
mov
pop
test
aam
cmpsb
xchg
inc
loopne
mov
and
in
xchg
daa
cmp
xchg
pop
movsb
mov
sub
push
imul
cltd
call
clc
lds
cmpsl
mov
or
jbe
movb
push
jo
iret
mov
mov
dec
sbb
ss
dec
cmp
outsb
and
imul
sub
nop
in
jl
in
aad
pushf
mov
jns
call
pop
add
jbe
mov
dec
cltd
mov
push
ss
call
sub
cmp
push
stos
fmull
shlb
mov
xor
inc
stos
dec
sbb
push
stc
and
or
sbb
xchg
sbb
and
ljmp
mov
cmp
lods
pop
cmp
or
stos
jae
push
adc
or
scas
lcall
and
cltd
mov
ret
adc
add
je
mov
lods
aas
mov
ja
dec
pop
xchg
mov
dec
jge
fwait
roll
xor
js
pop
ljmp
mov
movsb
cmc
inc
fnstsw
cltd
filds
cmp
lods
or
loope
stc
mov
in
add
or
cwtl
mov
mov
ficomps
dec
inc
lret
push
fxch
fdivl
ljmp
icebp
dec
inc
lea
adc
and
arpl
mov
stos
mov
out
xchg
loop
fmull
inc
mov
testl
clc
sub
imul
nop
arpl
jae
cmp
jge
jae
cwtl
push
inc
push
pop
int3
clc
and
cmp
xchg
bnd
out
mov
mov
les
pop
cmp
hlt
insl
push
and
jge
adc
inc
jns
inc
rclb
or
push
mov
in
push
mov
ret
lret
xchg
roll
fcoml
add
mov
inc
jle
mov
call
mov
mov
shrd
shr
shr
xor
push
xor
mov
mov
mov
push
push
push
call
shld
mov
xor
or
mov
mov
shl
or
xor
xor
xor
xor
mov
mov
jmp
mov
add
mov
mov
mov
mov
mov
mov
movzwl
cltd
shld
xor
mov
mov
shl
mov
mov
xor
mov
cmp
jne
mov
cmp
jne
movl
mov
movl
mov
movl
mov
movl
mov
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
add
mov
mov
jmp
jae
jmp
dec
movsb
xchg
hlt
mov
pop
add
xor
adc
clc
adc
and
pop
adc
gs
popf
pop
outsb
loopne
xchg
mov
inc
dec
movsl
fs
sbb
lret
sbb
add
frstor
insb
or
add
cli
cld
mov
xor
add
shrl
int3
ja
cmp
in
xchg
cltd
aam
pusha
mov
loope
push
stos
pop
xor
rorl
mov
push
xchg
xchg
inc
push
add
aad
das
fiadds
nop
jecxz
mov
cmc
cld
and
mov
inc
xlat
cmp
jnp
jne
ss
std
jo
pop
repnz
shl
mov
das
popf
push
icebp
cmp
fidivrl
add
popa
xchg
inc
mov
xor
or
xchg
pop
cmp
popf
adc
xchg
rorb
insb
cmpsb
shl
push
cmc
sbb
pop
mov
stos
cmp
cmpsl
add
xchg
hlt
sbb
cmp
iret
xchg
shlb
and
sbb
fisubl
jae
je
jnp
jle
sub
les
mov
add
cmp
sbb
or
sbb
sahf
sbb
into
scas
xchg
mov
sahf
rol
sbb
std
pop
push
push
mov
scas
add
and
iret
mov
adc
sti
outsl
mov
fcom
mov
xchg
and
andl
test
mov
dec
cld
or
pop
sbb
mov
push
inc
inc
insb
add
movsb
fisttps
inc
fs
int3
out
sti
mov
xchg
or
les
jo
xorl
adc
xchg
cwtl
int3
xchg
fsubrs
sub
xchg
in
adc
in
in
cli
or
jno
jle
rcrb
daa
arpl
xor
repnz
or
das
push
arpl
rcrl
mov
and
sbb
sub
pop
adc
mov
pop
mov
jns
push
sti
push
sbbl
xchg
cmp
xor
in
or
cmp
jg
mov
mov
fisubl
mov
fmull
cmpb
rolb
hlt
jns
test
sub
jb
and
jns
scas
dec
sti
addr16
shlb
mov
sbb
into
repnz
and
iret
cmpsb
or
adc
lock
mov
xor
ljmp
mov
ds
mov
iret
or
mov
daa
push
pop
int3
fcomps
sub
sbb
hlt
ds
or
test
stos
dec
cmp
outsb
jbe
sarl
repz
scas
shlb
jae
jle
pop
cld
jbe
in
and
pop
dec
in
fcmovb
ret
mov
mov
repz
pop
jb
jmp
imul
ret
lret
xchg
inc
pop
fsubs
mov
push
pop
sub
aam
bound
lods
jmp
xchg
mov
push
pop
test
mov
inc
xchg
aad
mov
add
repnz
or
cmpsb
mov
les
aaa
lret
dec
imul
mov
daa
mov
icebp
test
dec
addr16
adc
jo
inc
insl
loop
js
jb
or
mov
fwait
pop
icebp
adc
xor
add
inc
cmp
and
inc
lods
rorl
mov
scas
push
or
stc
imul
nop
sti
ret
sub
loopne
outsl
sub
pop
stos
fstpl
psubb
jb
aad
daa
xor
sbb
jb
sub
inc
cwtl
rcll
xlat
stos
addr16
or
cmpb
inc
aas
lahf
scas
aam
adc
jbe
cmpsb
add
mov
movsl
test
enter
popa
mov
stos
sahf
lret
and
cmpsb
cwtl
xor
mov
or
and
aad
and
out
addr16
mov
mov
jb
call
cmp
iret
pop
dec
or
inc
sub
cli
sub
sbb
mov
push
into
add
mov
add
subb
fucom
les
adcl
mov
inc
aam
out
xchg
add
fcomp
out
push
push
push
adc
cmp
lret
mov
adc
rcr
and
aaa
xlat
mov
jno
imul
sahf
cmp
pop
adc
lods
mov
sbb
rclb
sbb
xchg
mov
int
jo
mov
mov
inc
xchg
nop
push
jae
imul
xor
lock
je
and
insb
sub
jg
aam
sub
xchg
jns
mov
sbb
inc
pushf
cwtl
gs
stc
inc
push
mov
fisttpll
in
jbe
out
in
xchg
cld
repz
jae
std
test
sbb
push
inc
or
and
sub
xorb
mov
push
xchg
xchg
es
mov
insl
sub
mov
stc
xchg
das
cs
popa
in
aam
shrb
mov
xchg
loope
dec
cmp
push
push
psubusb
jbe
jns
adc
hlt
ljmp
aad
pop
jnp
fldl2e
xor
movsb
sbb
xor
aaa
fdivp
lret
push
mov
mov
ds
testb
stos
popf
or
arpl
push
mov
mov
scas
sti
or
sub
dec
call
idiv
xchg
jae
rorb
add
pusha
inc
into
daa
fidivrs
mov
and
mov
pop
cltd
cs
movsb
shr
aad
inc
inc
xor
test
insb
iret
in
das
inc
pop
lcall
cli
ljmp
mov
pop
gs
pop
pushf
aaa
jbe
and
mov
push
stc
divb
cmpsl
test
or
push
pop
sub
ret
ja
mov
loop
pusha
lret
pop
cmpsl
jae
test
inc
test
dec
hlt
std
sets
add
icebp
fbstp
jmp
cltd
out
test
mov
xor
dec
sub
push
decl
loope
enter
sub
jns
jl
xchg
xor
orps
leave
xchg
into
push
leave
pop
adc
fcmovbe
xchg
pop
out
inc
sti
jne
sbb
pop
pusha
dec
idivb
lret
ror
out
mov
aad
iret
inc
fwait
jne
shr
inc
inc
call
aas
sbb
test
adc
scas
stos
jl
lahf
addl
shr
mov
mov
xor
shl
jmp
lods
jmp
nop
cmp
push
add
data16
clc
adc
add
add
movsb
xor
int
rcl
add
jne
jmp
sahf
pop
pop
mov
fwait
std
inc
cld
sbb
cmc
cmpsl
bound
idivb
clc
aaa
push
push
ret
mov
dec
adc
hlt
mov
adc
mov
out
mov
jle
adc
iret
mov
clc
jmp
stos
ljmp
mov
lods
xchg
imul
arpl
stc
imulb
xchg
jecxz
mov
mov
aam
jl
pusha
jb
cmp
or
outsb
pop
jne
dec
mov
imul
mov
and
je
ds
mov
inc
xlat
mov
mov
scas
imul
cmpsl
add
sarl
cwtl
adc
pop
or
arpl
cmp
dec
scas
push
pop
das
add
sub
repnz
mov
sub
aas
mov
fnsave
cmp
push
sbb
loop
call
or
adc
in
mov
dec
jp
sti
mov
xchg
add
inc
lods
nop
xor
cmp
shlb
or
inc
mov
jp
sub
and
push
sti
sbbb
repnz
stos
or
dec
stc
repnz
cmp
subb
ret
int3
mov
push
pop
and
jnp
sahf
adc
rol
loopne
das
shll
jl
out
xchg
pop
outsb
xchg
fnsave
fs
in
lods
push
dec
lods
popa
aad
push
xor
subl
cmp
jl
cmp
in
add
add
mov
ja
loop
sbb
or
clc
cmp
dec
dec
push
push
decl
and
add
sbbb
and
push
inc
insl
mov
fsts
xor
push
lods
fldcw
fiadds
add
mov
cmp
sub
cmp
pop
jge
push
rcrl
scas
dec
lods
xchg
sti
push
push
orl
xchg
cmpsl
in
sbb
mov
test
scas
repnz
mull
or
call
pop
mov
jo
adc
add
mov
jle
test
scas
popa
mov
sub
divb
inc
cmp
mov
hlt
push
fwait
mov
mov
scas
cmp
cmp
inc
outsl
ja
mov
xchg
pop
lcall
xchg
imul
mov
lds
hlt
mov
mov
sti
or
pop
outsb
mov
test
bnd
repnz
xor
jl
pop
mov
jno
sub
adc
cmp
xchg
leave
lret
push
inc
sti
sbb
cs
inc
mov
jge
mov
add
fisttpll
pop
into
mov
das
mov
xor
pushf
cltd
jbe
aam
dec
push
add
imul
fsub
test
mov
sbb
sahf
icebp
xor
out
imul
xchg
sarl
pop
fs
dec
mov
dec
mov
push
stos
arpl
xchg
leave
mov
pop
mov
into
stc
dec
iret
and
fdiv
xchg
ss
loop
push
cwtl
xor
push
dec
cmp
in
mov
cmp
add
xor
cli
dec
iret
xchg
inc
adcl
mov
sti
push
movsl
mov
jns
inc
sbb
sub
bound
cli
or
dec
cmc
and
dec
mov
pop
icebp
ljmp
bnd
pop
cmpsl
pop
into
pop
cmp
jbe
mov
cwtl
lahf
sbb
pop
imul
lods
ds
hlt
add
jmp
mov
jb
push
and
adc
loop
push
dec
mov
dec
xchg
in
pop
rorb
mov
sbb
mov
aaa
xchg
sbb
mov
push
and
daa
push
mov
cmc
out
loopne
dec
mov
dec
xor
testb
cmp
mov
pusha
movsb
adc
shlb
mov
xchg
daa
adc
lock
xchg
add
fcmovnu
movsl
ret
pushf
mov
std
cmp
movsl
mov
nop
call
inc
mov
or
into
pop
xchg
lret
cmpsb
aas
stos
outsl
xchg
dec
in
or
faddl
nop
mov
dec
inc
mov
daa
movsl
push
in
clc
dec
inc
adc
fwait
add
cmp
jbe
jle
cmp
in
pop
push
inc
fs
lock
scas
cmp
mov
fdivp
jo
lcall
mov
lcall
push
ss
shl
cli
xchg
imul
push
push
mov
mov
and
cmpsl
shlb
pushf
aam
arpl
sub
jne
rorb
pop
int
pop
jmp
cmpsl
add
xchg
dec
mov
fisttpll
xchg
fiaddl
adc
icebp
bound
push
fwait
aaa
andl
ljmp
mov
insl
jbe
cwtl
or
push
cmp
test
push
sbb
sub
xchg
and
inc
add
enter
jge
je
lret
mov
push
in
adc
mov
scas
into
cmpsb
je
test
add
int3
cli
jge
in
and
test
dec
inc
sarb
add
in
mov
xor
mov
dec
sub
cmpsb
mov
sti
imul
xchg
sbb
inc
adc
adc
fisubrl
icebp
pop
fisttpll
mov
xor
dec
fwait
aaa
loope
imul
ljmp
or
ja
mov
mov
bound
cs
ja
test
mov
mov
xor
rcr
sub
sbb
das
or
ret
mov
push
pop
aam
aaa
je
jmp
int
outsl
or
jp
jle
inc
push
mull
scas
jl
xor
mov
pop
or
pop
xchg
sbb
into
mov
shll
cmp
imul
xor
pop
adc
cmp
aaa
jno
jmp
dec
cmp
add
jmp
push
fimull
jae
xchg
jge
cld
xor
xchg
movsb
in
es
dec
pushf
and
adc
rorb
ret
add
xor
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
add
jmp
mov
push
pop
or
in
push
or
push
clc
adc
cmp
cmpsb
std
es
fsub
clc
push
cmp
icebp
push
push
hlt
popf
adc
add
pop
mov
cmp
push
sub
mov
mov
or
pop
adc
repnz
ss
lods
cltd
cmp
std
dec
dec
sub
jb
cwtl
fcmove
stos
mov
arpl
sahf
push
outsb
sbb
push
xor
cmp
outsb
xorl
pop
lea
xchg
out
mov
hlt
lock
push
jbe
xchg
mov
push
ret
outsl
cwtl
sub
mov
mov
shrl
pusha
fdivs
jmp
pushf
or
mov
out
ds
popa
jecxz
je
into
xchg
mov
jmp
or
push
xor
cmc
ljmp
fdivl
sahf
add
outsb
bound
jl
rclb
ljmp
xchg
stos
and
aaa
add
loopne
add
sub
pop
mov
int
aam
sbb
push
mov
inc
xchg
jle
add
sub
xchg
jae
mov
pop
xor
mov
out
add
jno
push
mov
fldenv
push
sbb
push
sub
sbb
jno
movsb
or
rcrl
cld
icebp
fiadds
shll
xchg
notb
sbb
add
lahf
cmc
repnz
pop
jmp
fnsave
idivl
fisttpl
insb
mov
mov
stc
xchg
jmp
xlat
ss
je
cmp
out
out
gs
mov
lods
dec
push
mov
mov
fsubs
scas
jecxz
push
mov
out
mov
sbb
or
pop
mov
orb
xchg
mov
push
in
daa
push
xchg
in
mov
clc
cs
jnp
imul
xchg
push
loopne
data16
mov
add
and
xchg
shrl
outsb
add
xor
adc
mov
les
xchg
inc
cmpsb
cs
xchg
add
out
movsl
in
out
cs
addr16
and
repnz
lods
imul
xchg
fidivrs
mov
jge
xorl
repnz
stos
mov
leave
jb
dec
enter
adc
cmpsb
scas
jo
ljmp
aaa
and
rcrl
stos
pop
rorb
sbb
jae
movsb
clc
test
push
jno
add
mov
fwait
add
loope
mov
or
add
shl
sub
aad
inc
call
mov
and
rcrl
push
xor
push
movsb
popl
aad
and
cmp
mov
mov
and
fdivr
or
mov
out
add
lods
add
add
pop
roll
sub
cmp
or
shll
or
xchg
or
nop
lret
movsl
ret
aam
imul
hlt
test
nop
popf
outsb
pop
and
push
jbe
push
cmp
xchg
mov
jne
jae
push
pusha
dec
and
mov
cmp
add
mov
sahf
xor
in
dec
push
inc
mov
dec
dec
jge
sub
es
add
and
xor
outsb
fcoml
rclb
int3
sub
hlt
add
ficoms
enter
cmc
push
pop
inc
and
push
shll
ret
mov
cwtl
xor
push
lret
inc
test
push
mov
icebp
jbe
jg
push
ja
sbb
mov
lahf
mov
mov
or
push
mov
jb
popf
out
out
daa
fnsave
pop
bound
repnz
jge
fs
mov
call
rcrl
test
inc
xor
xor
rcl
pop
and
add
out
adc
pmulhuw
lea
pop
push
inc
mov
clc
inc
xor
int3
xor
aam
loop
mov
cld
mov
js
lahf
dec
push
es
in
sahf
inc
push
loope
mov
into
ds
sub
sub
sub
pop
mov
mov
pop
mov
sahf
scas
push
pop
push
repz
bound
pop
out
aaa
jg
pop
mov
popa
imul
out
rcr
pop
sbb
pop
int3
ljmp
mov
lock
jae
cmpsb
push
jl
xchg
inc
xchg
jnp
xor
scas
js
shl
rcrb
xor
pop
aas
int
jge
lods
inc
add
orb
bnd
je
adc
xchg
pusha
scas
ficompl
pop
mov
or
arpl
pop
das
out
cmc
push
loopne
fbstp
xor
cmp
sub
jo
mov
adc
push
cli
and
bnd
dec
outsl
jbe
stos
pop
ja
mov
loop
add
mov
xor
in
pop
cwtl
addl
lods
int3
cmp
push
shlb
cmc
cmp
push
jl
jle
mov
sub
popa
imul
dec
mov
loopne
push
mov
adc
out
rclb
data16
insl
pop
mov
jnp
scas
lcall
pusha
int3
mov
fsubrl
mov
and
cmp
push
ss
ds
push
lea
lahf
std
mov
adc
xchg
pushf
lret
das
ljmp
sbb
dec
insl
enter
xchg
test
mov
scas
sbb
roll
push
scas
neg
sbb
aam
shlb
outsb
mov
mov
xor
xor
push
mov
lahf
xor
push
rcrl
mov
mov
push
les
push
adc
movsl
mov
mov
or
aam
add
adc
movsl
imul
pop
inc
in
lock
in
pop
xlat
xchg
aam
adc
push
xor
fcmovu
sub
push
or
cmc
jp
cmpsl
jnp
lahf
sub
into
pushf
enter
sti
pop
mov
jne
aam
rolb
cld
stos
push
sub
jle
hlt
int3
fwait
mov
mov
lea
sbb
push
mov
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
mov
jmp
loopne
rcl
mov
mov
pushf
repnz
hlt
xchg
cli
adc
clc
adc
dec
test
mov
xchg
fdivs
outsl
pop
mov
scas
shr
mov
ficomps
fcomps
mov
sub
std
mov
gs
stos
xchg
jmp
xchg
xchg
xor
mov
cmp
divb
jbe
jmp
push
xchg
lds
cld
push
icebp
pop
dec
adc
test
sbbb
test
rorl
xchg
push
mov
in
cmc
aam
jnp
cmp
dec
inc
or
add
test
popf
loopne
xchg
cs
mov
cmp
shrl
jle
fsubrp
adc
hlt
stos
or
sbb
repz
fstl
mov
pushf
lret
push
pop
es
test
inc
in
and
sbb
pop
sub
mov
mov
sub
daa
lahf
and
jmp
push
adc
aad
xor
rclb
inc
test
pop
lds
sti
mov
test
je
inc
fdivr
push
xlat
rorl
cli
jns
xor
sahf
cs
mov
outsb
sbb
cmp
dec
divl
test
xorb
xchg
mov
cmp
mov
inc
push
nop
int3
and
xchg
fxam
cmp
mov
inc
sub
icebp
loop
pop
sbb
repnz
add
out
dec
lahf
jp
jno
stos
pop
cwtl
mov
adc
movsl
stos
mov
clc
mov
xorl
inc
xor
jns
ret
jns
aam
rcrl
iret
sbb
mov
notl
repz
mov
xchg
sbb
jl
loope
ds
dec
nop
add
aad
xor
xchg
in
mov
dec
xlat
jb
xchg
movsl
outsb
outsb
mov
mov
xchg
sub
sarb
imul
fucomip
js
mov
or
xor
mov
jo
rep
ret
dec
jnp
push
push
pop
sbb
pop
or
and
fbstp
or
fsubrs
das
icebp
push
call
inc
and
scas
arpl
add
test
ds
sqrtsd
inc
add
test
push
into
cltd
cld
push
stos
ret
mov
cmp
xchg
sub
lds
inc
push
push
mov
fisubl
ds
and
jp
adc
bts
jge
decb
xchg
movsb
scas
insl
sub
jb
mov
loope
cmpsl
outsl
sti
jp
mov
test
xor
jle
rclb
xor
jge
stos
fldcw
outsl
xchg
outsb
mov
mov
push
mov
mov
cmp
popa
adc
mov
pop
dec
loop
dec
lods
sub
sbb
push
outsb
cld
mov
into
ret
nop
cmp
pusha
popa
int3
jl
push
jmp
ss
mov
jns
pushf
movsl
cmpsl
jmp
jecxz
add
add
adc
mov
imul
ljmp
xor
aas
fsts
lock
mov
popa
dec
shll
pushf
add
fldl
fidivs
fnstsw
jb
jbe
in
js
add
inc
xchg
adc
es
xor
notl
sbb
mov
push
iret
movsl
ret
mov
pop
clc
sbb
inc
je
cmpsl
mov
sbb
leave
mov
icebp
sub
lcall
cmpsl
inc
mov
and
xor
mov
mov
int3
mov
xor
test
fwait
cld
jge
push
lret
pop
xor
js
fsubr
inc
dec
lcall
sbb
call
shll
xchg
test
mov
xchg
test
xor
mov
test
int3
loop
cld
mov
test
add
stos
sbb
mov
mov
test
mulb
inc
inc
not
and
sbb
mov
inc
xchg
cli
or
in
pop
cmp
test
std
stc
mov
dec
mov
ds
lods
push
jmp
in
push
mov
add
test
je
add
mov
mov
xchg
call
adc
pop
cs
sbb
and
and
mov
lret
scas
jecxz
and
mov
mov
xorb
pop
in
imul
out
test
jae
cwtl
notb
cli
int3
jl
mov
fstpl
jg
adc
sub
mov
jo
scas
in
call
lods
mov
jns
add
jecxz
xchg
mov
push
popf
pop
adc
cwtl
inc
loope
lcall
cmc
or
arpl
cmpsl
insb
jp
xor
notb
inc
lahf
push
pushf
push
push
inc
fisubl
int
and
js
xorl
jmp
hlt
fs
dec
mov
int
cwtl
stc
sbb
or
push
mov
push
pop
xlat
mov
mov
dec
movl
addr16
mov
ret
jne
jnp
insb
add
mov
push
jnp
aaa
add
mov
mov
adc
and
xchg
pop
and
jbe
sbb
rcr
inc
dec
jecxz
negl
dec
xlat
test
lods
and
out
in
hlt
push
hlt
mov
adc
stos
std
mov
js
inc
or
in
xchg
dec
mov
sub
into
frndint
cwtl
bts
pop
jle
pushf
mov
jp
add
stos
xchg
data16
test
mov
pushf
ret
and
mov
daa
jg
sub
mov
lock
sti
xor
out
jmp
xchg
jg
mov
insb
aaa
push
stos
rcrb
cld
out
mov
stc
sbb
test
sub
in
cld
xor
xchg
jns
lock
cmpsl
or
in
pop
inc
adc
sti
mov
lods
stos
std
push
fldl2e
cmpb
nop
jbe
jae
pop
xchg
lret
ret
xchg
lock
jp
lcall
fnstenv
imul
or
iret
sub
mull
push
dec
sarb
cwtl
inc
mov
adc
insl
iret
std
int
inc
adc
or
mov
shr
mov
mov
xor
xor
jmp
xchg
hlt
rol
xor
mov
hlt
aad
adc
clc
adc
sub
clc
addr16
clc
adc
stos
xchg
sbb
mov
test
mov
sbbl
mov
sbb
inc
push
push
int3
jp
repz
nop
and
xorl
or
sbb
fstpt
jp
jl
sbb
inc
sub
decb
or
add
lods
adc
rep
jne
rcrl
mov
dec
pop
mov
cmp
mov
inc
sub
fucomp
push
lahf
hlt
sti
out
call
cwtl
mov
pop
xlat
test
inc
repz
test
aas
mov
fldenv
push
out
mov
inc
jns
push
cmp
cli
shll
mov
bound
inc
mov
mov
cwtl
cwtl
fimull
int3
inc
push
inc
lret
std
cmp
fcmovbe
cmp
ret
lock
into
cltd
addr16
inc
outsb
stos
mov
dec
jge
mov
pop
jae
gs
arpl
fcoml
cltd
pop
icebp
cltd
test
mov
jae
jno
clc
sub
sub
aas
imul
push
or
cltd
mov
in
mov
add
lcall
loopne,pn
lock
jnp
mov
dec
scas
ret
iret
inc
xor
sbb
push
aam
xchg
in
aaa
mov
movsl
sub
out
sbb
xor
mov
mov
push
rcrl
inc
adc
sbb
mov
mov
out
and
ret
out
out
and
fs
xchg
lret
adcb
in
sub
mov
in
fistps
int3
jp
pop
mov
add
stos
mov
movsb
xchg
mov
fistpl
popa
sti
test
js
out
jne
mov
jl
sbb
mov
inc
xchg
ret
add
push
mov
std
mov
cli
xor
push
lods
test
pop
adc
imul
push
pop
add
sahf
mov
sbb
cmp
mov
lret
movsl
loope
xor
and
lds
cs
leave
leave
add
mov
fldenv
adcb
lods
or
pop
inc
notl
push
test
or
sbb
popf
pop
fcoms
pop
imul
push
in
movsl
les
mov
jge
decb
scas
testl
add
push
ja
fisubs
lock
pushf
and
pusha
ds
sub
or
lods
jp
pusha
insb
cmp
hlt
je
dec
jge
cmp
scas
pop
lret
inc
hlt
scas
jmp
push
iret
pop
jl
mov
in
repz
dec
loope
dec
pop
lahf
jp
and
push
jecxz
mov
cld
pop
call
out
inc
mov
inc
pop
jnp
add
repnz
adc
test
in
sub
cmp
pop
xchg
rcll
mov
jbe
fwait
mov
popa
and
dec
repnz
sar
addr16
mov
imul
call
dec
loope
jmp
sti
cld
push
jg
ds
pop
test
and
fisubs
mov
roll
xor
push
shll
mov
addr16
cmp
cli
roll
mov
aad
into
shrb
push
lods
mov
pop
icebp
lds
das
fisubrl
adc
and
imul
ja
mov
fcoms
push
jb
adc
adcl
mov
jmp
inc
mov
push
das
out
mov
in
and
fstps
pop
xor
inc
pushf
stos
xchg
push
jbe
sbb
and
push
or
inc
enter
pusha
nop
jb
push
mov
les
or
loopne
add
mov
add
int
lods
lock
pushf
insl
aam
mov
add
inc
ret
xor
mov
clc
lods
inc
mov
mov
adcl
cmp
lahf
jno
dec
pop
lods
sarb
shlb
adc
lea
sbb
imul
jbe
cmpsb
and
mov
nop
inc
adc
stos
fsubs
dec
lock
gs
inc
jg
call
dec
mov
sbb
jbe
aam
insl
push
pop
mov
addr16
test
push
xchg
int3
or
bound
xor
jle
dec
push
and
in
jae
pushf
mov
adc
out
ret
orb
jnp
pop
sahf
jecxz
pop
sub
mov
and
sbb
sub
rcl
pop
aaa
repz
in
negb
scas
ror
jg
fdivs
xor
pop
mov
scas
pusha
sub
stos
push
mov
pusha
pop
movsl
mov
mov
aas
inc
inc
scas
ret
push
nop
push
pop
lds
addr16
xchg
adc
mov
inc
mov
sbb
or
jne
int3
adcl
cmp
sti
xchg
inc
scas
imul
stc
stos
les
imul
leave
add
fsubs
sbb
stos
xchg
lods
rolb
movsb
ficomps
cmp
mov
sti
in
xchg
and
mov
xchg
cmp
lahf
or
jae
rolb
out
cltd
bound
sub
push
aaa
imul
xchg
sub
je
les
sbb
push
inc
and
pushf
das
cmp
jno
sbb
dec
call
out
xor
mov
daa
mov
rolb
in
mov
cmpl
in
inc
int3
push
xor
dec
sbb
pop
inc
push
ljmp
idivl
cmp
jg
pop
push
push
cmp
jae
test
loopne
mov
lods
fdivrl
pushf
jle
out
push
sbb
out
add
std
leave
push
pusha
dec
pusha
out
pop
lods
and
je
imul
mov
call
aam
pusha
and
aaa
negl
cmpsl
pop
shll
mov
fiaddl
daa
inc
pop
sub
jno
mov
pop
aas
cld
cmp
xchg
cwtl
icebp
std
adc
pop
mov
add
repnz
mov
mov
xlat
in
sbb
mov
mull
idivl
mov
add
shl
mov
mov
mov
shrd
shr
mov
mov
jmp
jecxz
fstl
inc
xor
sti
pop
adc
adc
clc
adc
and
add
jmp
mov
pop
mov
int
arpl
inc
sbb
stc
add
dec
mov
aam
or
push
add
xchg
pop
xchg
inc
cmpsb
lea
add
push
rolb
mov
pop
ret
dec
test
and
adc
in
lea
xlat
jae
lcall
xor
mov
sbb
insl
or
xchg
std
addr16
xchg
pop
divb
and
jmp
sbb
popf
sti
sbb
es
add
jnp
mov
arpl
or
add
inc
ficomps
lahf
pop
inc
xchg
mov
push
add
pop
mov
xchg
dec
jb
out
aam
imul
xor
jnp
scas
imul
int3
pop
adc
ja
jge
loopne
jge
leave
insb
stc
js
out
rclb
shrb
sub
sub
mov
adc
push
xchg
jl
aam
mov
mov
cmp
and
sbb
cld
cwtl
jae
pusha
jmp
sub
or
pop
sub
jmp
lret
addr16
shrl
shr
fnstsw
push
movsl
aam
ja
nop
sub
fimull
aas
dec
push
mov
add
sub
out
push
fildll
xchg
notl
jno
dec
mov
cmpsl
int
loop
rorl
fbld
stos
sbb
loope
pop
sarl
inc
fs
pop
lock
repnz
sub
jo
lret
dec
xchg
adc
add
sub
jl
sbb
jg
out
movsl
mov
sub
inc
gs
popf
or
xor
xor
and
sbb
mov
jmp
dec
pusha
add
xchg
test
in
imul
and
and
stos
jo
les
cmp
pop
or
mov
out
and
mov
ja
push
xchg
inc
ljmp
addr16
sbb
xor
mov
stos
inc
sub
bound
fldt
inc
les
cmpsl
lock
scas
pop
mov
rol
sbb
inc
push
notl
ret
stos
std
xchg
inc
aad
bound
xor
clc
sbb
xor
stos
out
dec
pop
push
mov
lcall
inc
cmp
dec
lahf
repz
mov
or
and
xchg
lea
dec
cwtl
fsubl
into
push
cwtl
mov
ret
mov
push
add
lea
jo
xor
inc
xchg
push
lcall
int3
push
fdivs
dec
mov
or
lcall
or
dec
sbb
sbb
or
aam
ret
add
scas
push
filds
pop
adcl
popf
mov
jns
fcoml
popa
adc
rcrb
sbb
mov
test
mov
fstl
push
pop
divl
data16
inc
fistps
adc
lock
pop
fs
or
pop
push
fdiv
in
jmp
cltd
inc
and
or
in
or
sbb
inc
fldenv
jbe
shlb
inc
fsts
jne
aad
stos
pop
pusha
data16
cmc
popa
pop
stos
dec
flds
leave
ljmp
fwait
mov
push
inc
and
sub
ljmp
push
dec
add
aaa
sub
imul
lods
das
inc
sub
leave
fwait
adc
sahf
aam
dec
xchg
fmull
mov
popa
pop
jl
and
mov
in
fimull
rolb
js
xor
ret
xchg
adc
sub
add
push
pop
je
dec
imul
cmpl
adc
cmp
test
push
mov
push
cmp
lea
cmp
sub
jge
repnz
inc
fs
xchg
mov
jno
std
pcmpgtd
push
fistpl
mov
out
xchg
dec
stc
pop
popa
pop
test
enter
rcl
clc
in
fdivp
cmpb
scas
mov
adc
nop
jo
adc
data16
roll
jns
lods
mov
sub
xchg
pop
out
xchg
outsb
or
jne
fdivp
push
adc
pop
aas
inc
mov
dec
lods
out
inc
sub
or
repz
imul
into
jle
nop
insb
fidivl
adc
xor
mov
and
lods
sub
pop
add
je
imul
or
stos
push
sbb
stos
jge
cwtl
xor
and
xchg
xchg
stc
aad
xchg
cmpl
addl
pop
dec
xorb
bound
shl
hlt
cmp
rcrl
push
inc
fldl2t
add
push
ja,pt
lret
pop
jbe
and
and
cmc
add
jg
jp
jnp
jg
out
es
and
push
enter
add
in
lock
adcb
movsb
dec
out
pop
lock
xchg
aad
and
inc
cs
inc
mov
push
xchg
mov
movsl
inc
icebp
jns
inc
stos
mov
aad
lahf
ljmp
jae
fwait
pop
push
imul
mov
push
mov
movsb
push
mov
pop
fsts
dec
dec
cmp
inc
cmpsb
loopne
jecxz
mov
ret
ljmp
and
arpl
test
hlt
sbb
aas
insb
mov
stos
mov
adc
dec
xor
pushf
movsl
aad
add
pusha
fimuls
stos
add
add
and
mov
sbb
int
inc
sub
sbb
add
cmp
nop
mov
ja
lcall
inc
loop
mov
cld
xchg
arpl
mov
xor
cmpsb
jns
insb
xor
lret
fstpt
pop
sahf
clc
cmp
add
pop
add
inc
pop
and
bound
je
insl
xor
jle
xor
cmp
movsb
adc
mov
lods
insl
sbb
cmp
imul
dec
jnp
and
out
pop
movsb
dec
xchg
rcrl
insb
mov
inc
mov
mov
xor
pushl
jl
lcall
cs
mov
lds
repz
sub
xchg
mov
inc
mov
jne
cmc
jno
into
jne
dec
and
cmp
cmp
repz
xor
shl
xor
or
mov
mov
add
mov
mov
shrd
xor
shr
mov
mov
shl
jmp
pop
mov
push
or
pop
in
fistps
mov
push
jecxz
adc
clc
adc
pop
dec
inc
add
mov
test
iret
push
jecxz
fwait
in
in
inc
int
mov
retw
sbb
push
add
lock
insl
jp
jmp
push
push
xor
fwait
loopne
fnstsw
out
mov
sbb
ffree
pushf
mov
dec
mov
insb
mov
sub
cmovge
pop
xor
fstpl
test
or
inc
mov
hlt
pop
mov
xor
out
mov
sub
gs
in
ds
ds
icebp
rcl
push
mov
jmp
in
aaa
out
jecxz
push
and
scas
mov
xchg
stc
data16
mov
pushf
lea
test
push
sahf
mov
dec
mov
sub
mov
enter
push
fstpl
adc
add
inc
xchg
das
and
mov
mov
loope
pop
push
add
cltd
adc
and
pushf
repnz
stos
stos
movsb
sbb
xchg
xchg
shlb
lods
jae
les
sub
clc
push
in
pop
jmp
lret
je,pt
popa
sarb
pop
arpl
stos
cmp
push
fbld
call
inc
pop
lds
cmpsl
mov
mov
lods
testb
cwtl
mov
inc
sub
in
lds
sahf
cli
cmp
sbb
xchg
xor
int3
cwtl
xlat
popa
push
cmc
loope
addr16
or
push
xchg
cmp
push
int3
dec
aas
mov
fs
fldt
inc
shl
inc
out
xchg
lea
cmp
sbb
mov
adc
mov
jmp
mov
sbb
int
push
fisubrs
dec
pop
aam
repz
and
shrl
push
pop
dec
sub
lcall
into
cltd
cmp
dec
aas
jae
outsb
inc
orb
cmp
mov
jno
pop
out
add
shrl
mov
test
pop
jae
enter
jl
and
adc
inc
inc
fs
or
rep
cs
lcall
sahf
data16
std
test
push
dec
aas
fcoms
fs
pop
int3
jne
test
sbb
dec
push
mov
jno
lods
int3
lods
fmuls
in
mov
jmp
enter
fstpt
pop
adc
test
ret
aas
ljmp
jl
or
pusha
adc
insl
mov
sub
and
mov
sbb
icebp
sbb
xorb
push
das
sub
and
popa
xchg
iret
or
mov
pop
loope
pop
in
addb
cmp
push
lds
dec
cmpsl
outsb
incb
mov
das
es
fcompl
cli
aad
cmp
cmp
or
jmp
xchg
jg
scas
cltd
loop
pop
popf
adc
xchg
and
inc
or
sub
out
es
or
lock
xchg
sbbb
mov
pop
inc
add
cmp
incl
popf
sbb
movsb
dec
fcomi
fisttps
pop
je
mov
fistpl
dec
dec
add
mov
aaa
lods
mov
push
movsb
jle
sub
push
add
add
out
popf
rcr
add
xchg
jle
add
cmp
mov
movsl
dec
leave
sahf
xchg
push
xchg
cmpsl
das
and
es
mov
pop
mov
dec
adc
cmpl
cltd
jo
in
xor
add
sub
cmpsb
lods
cmp
dec
scas
mov
dec
mov
fwait
xor
cwtl
mov
hlt
movsb
or
jb
imul
pop
mov
add
inc
pop
std
addl
lea
mov
mov
aas
adc
cmp
jae
push
jle
dec
mov
bound
movb
xor
sbb
inc
rolb
xchg
dec
xor
pop
jp
outsl
cmpsb
add
rcr
popa
inc
sahf
sbb
inc
jno
arpl
jecxz
dec
push
loop
push
pop
outsl
push
fidivl
fildll
cmpsl
pop
dec
pop
and
mov
popa
movl
dec
out
ret
out
mov
test
ret
outsb
ljmp
pop
mov
pop
mov
scas
mov
ss
xor
dec
jno
lock
pop
mov
imul
cmp
iret
lret
push
in
sbb
lahf
fnstenv
test
xchg
dec
outsl
mov
dec
mov
jns
jmp
int3
movsb
cmp
fnstenv
xchg
nop
pop
loopne
xor
xor
pop
das
ret
faddl
aaa
hlt
sbb
xchg
insl
cs
call
cmp
push
arpl
inc
enter
mov
ss
fcoml
cmp
pusha
cmp
sub
or
xchg
cmp
das
inc
adc
xchg
int3
fs
pop
or
dec
and
dec
aad
push
mov
aas
and
mov
and
add
and
pushf
sbbb
stc
pop
jno
cwtl
cltd
cmc
std
mov
sub
nop
mov
add
sub
les
fwait
jb
jmp
insl
inc
sbb
sar
stos
inc
stc
jbe
fldenv
inc
push
xlat
dec
xchg
adc
int
lret
cmc
enter
cld
stos
mov
cwtl
fs
jl
dec
or
cmpsl
xor
in
js
mov
loop
xor
xor
popa
cmp
insl
pop
jl
fldt
or
enter
shlb
lea
mov
repnz
cmc
dec
stc
xchg
outsl
add
negl
dec
and
insl
and
mov
mov
cmc
stc
lcall
imul
dec
shll
es
call
movsb
shl
outsb
lcall
sbbl
pop
fadd
push
lods
cld
in
shrb
repz
pop
iret
insl
imull
push
inc
test
xchg
pushl
test
mov
dec
xor
mov
cmp
aas
fiadds
add
sub
fldl
mov
scas
mov
jecxz
fisttpl
sbb
in
mov
and
inc
push
out
cli
mov
or
mov
in
dec
push
mov
icebp
lret
cmp
and
pop
test
pusha
jne
insb
pop
cmc
lods
popf
push
mov
lea
sbbl
mov
fcmovnbe
test
mov
xor
or
mov
add
shrd
xor
shr
mov
mov
xor
or
mov
jmp
xor
mov
push
and
mov
stc
lds
fists
adc
fsubrl
frstor
or
push
mov
xor
push
in
adc
jmp
cmpsl
push
in
stc
push
mov
cmp
mov
ret
lock
test
add
add
jae
es
inc
cwtl
mov
jmp
adc
xor
push
sub
idiv
stos
xor
cmp
cld
cmp
addr16
sbb
or
mov
je
push
nop
mov
ret
sti
aam
mov
loopne
stos
mov
sbb
scas
ret
mov
test
mov
dec
imul
mov
mov
addr16
stc
jl
mov
test
mov
mov
and
das
ret
gs
sub
dec
out
fnstcw
mov
hlt
out
arpl
sbb
xlat
jmp
pop
mov
adc
idivb
nop
or
bound
cld
mov
movsb
adc
and
das
stos
dec
insb
rolb
cmpsl
mov
inc
pop
aad
xor
mov
push
adc
and
mov
adc
xchg
dec
jmp
push
sbb
mov
push
sub
mov
and
mov
jle
pop
movsb
push
cmp
sbb
sbbl
fstl
pop
and
pop
rcl
stos
sub
push
mov
imul
std
and
or
mov
add
mov
mov
rcr
sub
push
jmp
add
movb
sahf
cmp
push
add
out
mov
cmp
xchg
sbb
fsubrs
int
test
mov
test
rclb
in
ljmp
jne
push
sbb
jnp
cmp
mov
fmuls
ret
leave
mov
addr16
lods
inc
xor
scas
pop
data16
adc
inc
sbb
cmpsb
movsb
cld
outsb
mov
xchg
jnp
call
fcomps
pop
dec
sub
in
jp
xor
bound
push
xchg
inc
push
mov
push
sbb
leave
mov
sahf
xchg
lds
pop
mov
out
pop
adcb
xchg
jo
or
je
xchg
mov
ljmp
jb
xor
inc
cmp
inc
push
push
loop
sbbl
shll
aad
push
jae
xor
sarb
test
lods
fnstenv
mov
movsb
mov
pushf
btr
sub
insl
data16
repnz
iret
cmp
movsb
mov
inc
ds
cmc
mov
jle
loope
or
daa
jge
inc
sahf
sbb
xor
and
inc
adc
adcb
movsb
stos
push
fdivs
mov
fnstcw
push
lods
test
xor
add
ret
mov
cmp
adc
lcall
lea
adc
les
pop
add
rolb
lahf
cmp
and
sub
cmp
inc
or
pushf
mov
dec
jno
arpl
add
psubq
add
xchg
lock
xor
push
aam
hlt
pop
pop
jecxz
cltd
cmp
sub
pop
out
jmp
push
int
dec
and
fbld
into
add
xor
lods
cld
ficomps
and
sarl
cwtl
jae
adc
push
sub
fucomp
xadd
pop
cmp
add
xor
loop
fwait
jb
mov
cmp
and
jnp
sahf
sahf
imul
push
sub
mov
push
pop
in
test
ret
xchg
addl
mov
lock
cmp
lea
push
add
push
or
or
pop
cmp
out
cmp
popa
stc
xor
mov
aam
lret
mov
xchg
jmp
bound
ret
outsb
lds
std
push
sti
bound
add
cld
mov
xchg
mov
fwait
sub
repnz
out
pop
mov
sub
inc
xchg
shll
cs
jl
xor
nop
sahf
mov
push
aaa
or
leave
mov
pop
in
js
lcall
ds
adc
dec
movnti
fistl
pop
cmp
sbb
mov
es
es
xlat
test
in
cs
mov
movsb
mov
adc
adc
inc
cmp
call
cld
daa
movsb
int
add
jo
push
call
sbb
bound
xor
jmp
in
cmpsb
push
jl
xor
add
mov
mov
loope
mov
and
sti
mov
scas
fs
inc
add
mov
scas
outsb
xchg
test
loope
fistpll
xlat
aad
addr16
jl
sbb
inc
jb
fwait
mov
inc
adc
jl
mov
cs
adcb
mov
in
dec
jbe
shll
bound
mov
pusha
push
sbb
stos
jb
and
in
lret
dec
mov
lea
adc
sub
dec
pop
hlt
leave
or
aas
sbb
movnti
mov
movsb
pusha
ss
out
lods
in
sbb
cmp
nop
push
shr
or
push
mov
cld
sarl
mov
push
and
cmp
push
dec
pop
cs
mov
out
daa
push
movsb
ret
es
std
int
cmp
inc
pop
loop
inc
outsb
popf
cmp
insl
shrl
lods
mov
ret
cmp
sub
mov
movsb
aas
adc
stos
jge,pn
mov
nop
xor
or
xchg
dec
and
cmp
inc
mov
push
fstps
stc
and
movsb
pop
aas
iret
cmp
jl
fbld
fdivrl
inc
es
add
insl
sub
cmpb
sbb
test
sti
test
mov
in
pushf
int
enter
jbe
mov
mov
mov
sbb
ja
pushl
out
adc
xor
fwait
sbb
sub
leave
pop
jno
sub
bound
movsb
rcrl
aam
sub
aam
rorl
in
testb
nop
stos
cmp
test
inc
mov
xor
ljmp
and
ret
xor
js
std
push
mov
lret
mov
jno
sti
xchg
cmpsb
sbb
sti
fadds
or
shl
shl
mov
mov
xor
xor
mov
mov
jmp
popf
scas
add
mov
aaa
shlb
adc
clc
adc
insl
out
sub
jle
mov
out
lcall
outsl
pop
push
mov
pusha
imul
dec
cmpsl
loope
sub
pop
mov
pop
pop
sar
push
sub
stos
xor
add
mov
movsl
xchg
shrl
out
aas
shrl
lcall
outsb
jmp
xchg
xchg
mov
cwtl
adc
xor
mov
nop
pop
sub
sub
in
push
push
lret
out
pop
jae
mov
pushf
cs
push
sbb
sub
dec
stos
pop
test
or
mov
aad
aam
jle
pushl
fs
fsqrt
div
cltd
imul
sub
push
pop
cmp
cmpsb
subb
push
ljmp
repnz
sbb
scas
nop
rorl
cli
mov
subb
cmpsb
cmp
cltd
mov
jle
sub
ds
inc
jg
cmp
rcr
cmp
in
in
jne
mov
outsb
push
sbb
arpl
jne
in
jecxz
mov
push
repnz
popa
inc
xor
stos
mov
imul
cmp
push
fld1
repnz
mov
fists
cli
push
inc
ss
roll
or
dec
mov
inc
mov
adc
jg
insb
lods
gs
sub
sub
mov
xor
fstpl
sub
hlt
adc
sub
xchg
xor
lock
push
push
sbb
fcoml
aad
mov
lahf
es
test
xor
xchg
insl
mov
jo
clc
mov
bound
fstl
sbbl
dec
adc
gs
mov
sti
push
stos
jg
jnp
insl
into
into
cld
xor
inc
lds
adc
mov
sbb
loope
adc
mov
sub
daa
scas
out
xor
rcrl
out
in
enter
js
bswap
test
inc
jno
and
inc
push
scas
ret
outsl
and
push
add
push
sub
lds
ljmp
jmp
mov
mov
insb
and
lahf
push
test
mov
in
mov
add
jne
mov
lahf
jno
jg
jge
lods
dec
mov
add
js
jbe
imul
rclb
mov
add
ffree
jl
adc
cltd
and
and
pop
xchg
mov
xchg
xchg
add
cmp
js
xchg
arpl
gs
xor
cmpsl
sbb
mov
lahf
pusha
or
mov
fwait
scas
xchg
adc
inc
fnstenv
daa
gs
test
jnp
nop
mov
mov
fsubl
sahf
loop
cmp
pop
imul
jo
pop
push
push
test
fsub
lcall
mov
push
sub
adcb
fcoml
out
int
call
mov
ds
pop
cmpsl
ret
and
jo
into
cmp
pop
into
mov
and
shll
dec
jmp
push
push
shrl
shll
cli
cmp
adc
push
outsb
je
shrb
repz
inc
mov
or
cs
in
test
fildll
in
mov
jl
jle
pop
leave
fwait
cmpl
sub
imul
cmp
aas
mov
negl
cmp
dec
sbb
push
icebp
adc
or
loop
loopne
jno
cmp
ss
jg
inc
stos
mov
fldcw
subl
mov
mov
out
lret
loope
loope
fcompl
mov
pusha
cmp
cmp
xchg
sub
popf
or
in
out
icebp
inc
mov
lock
xlat
les
dec
movsb
loope
stos
test
mov
fdivl
lea
mov
sub
jbe
dec
pop
daa
mov
fisttpll
xchg
lods
je
lds
cmpsl
test
pusha
rcrl
sub
insb
nop
jno
cmp
in
add
sub
xlat
in
imul
fcmovbe
inc
outsl
mov
out
lock
or
nop
add
loope
pop
xor
mov
in
xor
jbe
je
jb
jp
rclb
inc
into
test
mov
push
mov
js
jecxz
xchg
lock
ret
dec
test
dec
pop
jg
pushf
out
cmp
lea
pop
jnp
push
sub
inc
jnp
int3
add
mov
dec
cmpsl
dec
fistps
mul
ss
out
mov
cmp
outsl
cmp
pop
enter
mov
in
adc
sub
popa
inc
fstpl
or
sub
push
cmp
in
lods
mov
mov
push
aas
outsl
xor
mov
fisubl
les
pop
add
push
outsl
ficoms
bound
dec
and
add
xor
aaa
outsb
add
lods
jge
pushf
add
adc
das
test
aad
push
js
popa
adc
pusha
sub
scas
movsl
in
pop
pushf
xor
scas
adcl
sub
aam
mov
test
xchg
add
add
test
sbb
cmp
mov
push
into
adc
out
aam
adc
jg
and
xlat
lret
inc
sahf
or
pop
shrb
inc
or
dec
fs
xchg
das
inc
jmp
lahf
jecxz
pop
imul
fcompl
lock
and
int3
aaa
mov
dec
fistpll
pop
xlat
or
xor
test
arpl
lret
loop
aaa
or
hlt
ds
sbb
cmpsl
jno
sbb
jp
cmp
aas
lock
xchg
test
adc
hlt
inc
fidivrs
pop
pushf
cwtl
xchg
popa
mov
cmp
mov
xor
xor
cmp
inc
ret
mov
and
fisttpl
mov
mov
lahf
clc
and
mov
xlat
out
repz
push
mov
iret
cmp
je
sub
cmpsb
rcll
call
cmp
push
mov
mov
ja
push
xor
jmp
mov
movsb
adc
imul
shrd
shr
or
xor
or
jmp
lea
cwtl
sbb
sbb
js
mov
adc
clc
adc
fcompl
add
pop
and
je
ret
and
icebp
mov
wrmsr
sahf
in
mov
push
push
mov
add
scas
sbb
jne
push
ja
fbld
cmp
pop
clc
int3
sub
push
push
and
sub
popf
xchg
jae
push
stos
test
or
lahf
stos
mov
lock
mov
adc
cmp
ja
and
add
adc
lcall
fcoms
stc
out
addr16
pusha
or
addb
es
mov
pop
dec
mov
std
aam
dec
out
xor
xchg
mov
outsl
aad
xor
out
subl
xchg
pop
adc
inc
jl
xchg
push
sbb
test
and
jo
dec
rolb
cmp
push
aam
test
and
sub
sbb
mov
cli
rcrb
jg
loop
fstpt
push
dec
adc
pop
jo
jne
lock
pop
push
cltd
subl
jne
mov
jns
cmp
mov
pop
cltd
out
or
push
jmp
mov
cmpsb
mov
loope
in
xor
jp
xor
mov
out
lahf
inc
jmp
nop
mov
adc
pop
mov
and
sbb
repz
cld
ljmp
addr16
test
je
jle
outsb
stos
orl
fsts
xlat
and
insb
sar
lock
cli
out
or
mul
add
mov
scas
mov
jmp
in
and
push
dec
shl
hlt
xor
into
xor
sbb
xlat
mov
repnz
fildll
push
rorl
movsb
ret
mov
adc
scas
pop
movsl
adc
loope
movsb
cmpsl
cmp
incl
mov
push
mov
xor
push
fimull
mov
les
shll
sbb
addr16
scas
loope
xor
movsb
dec
sbb
sbb
out
sbb
xchg
adc
into
and
mov
push
das
inc
pinsrw
movsl
mov
inc
jmp
xor
insl
ret
in
push
cltd
insb
pop
cmp
addr16
mov
lcall
loop
pusha
lcall
dec
sarb
in
push
roll
les
imul
cli
fdivr
mov
hlt
ss
pop
shrl
pop
inc
xor
sub
xchg
aaa
pop
int
pusha
adc
adc
ret
jns
dec
cmp
daa
inc
xchg
and
dec
mov
mov
stos
into
mov
scas
cmc
jne
xor
push
or
out
fldl
scas
xchg
cmp
fbstp
aaa
decb
push
or
push
xchg
dec
das
add
or
dec
loopne
pop
dec
push
mov
cmp
and
int3
scas
jge
cwtl
jb
jmp
adc
lods
stc
sub
xor
das
or
push
inc
pusha
push
pusha
ficoms
and
orb
hlt
or
jo
sub
lret
add
call
scas
repnz
ficoml
push
xor
sarb
dec
std
or
or
adc
stos
filds
aaa
loope
push
dec
xchg
mov
xchg
lcall
stc
mov
cmp
out
testb
fmull
adc
sub
fldt
test
dec
repz
data16
repz
add
addr16
insl
rcr
xlat
inc
aaa
sarl
push
sbb
cmp
add
pop
out
adcl
jne
cwtl
adc
and
jnp
push
cmp
cmpsl
clc
jge
cmc
arpl
sub
pop
syscall
xor
dec
jb
arpl
and
xor
in
ret
dec
dec
lds
mov
cs
jns
data16
mov
xor
lock
movsb
les
scas
jle
int3
inc
xchg
iret
push
jecxz
pushf
xor
mov
jp
out
les
in
jbe
test
mov
icebp
jmp
pop
mov
adc
pop
jne
push
jae
es
sahf
out
push
sbb
push
lret
shrl
mov
pop
add
push
pusha
ds
jno
rclb
inc
cmp
xchg
jmp
lret
inc
mov
or
pop
bound
push
out
pop
jo
loopne
aad
and
and
sub
insl
stos
das
das
aad
rorl
mov
add
cmpsl
loope
xor
imul
xor
inc
adc
les
xchg
inc
dec
sarb
xchg
mov
test
sti
cmp
or
pop
clc
mov
adc
xchg
cmp
enter
mov
test
popf
push
nop
add
repz
pop
ret
test
add
xor
inc
daa
lods
add
xchg
lea
js
mov
mov
test
clc
pop
pop
loop
inc
jecxz
xor
mov
fcomps
fdivs
adc
jl
mov
repz
and
test
out
insl
pop
out
mov
jae
dec
xor
adc
pinsrw
push
inc
cmp
pop
xor
fwait
and
pop
out
xchg
mov
sbb
push
dec
mov
mov
fnstsw
or
and
push
in
mov
add
ljmp
lea
or
adc
add
push
outsb
loope
mov
sbb
or
iret
dec
enter
cld
pop
jo
xor
mov
mov
sti
lods
daa
iret
ja
stos
pop
and
cmc
cmpsb
or
lea
sbb
push
clc
ss
in
adc
popa
lds
push
popf
xlat
insl
xchg
cmp
pop
test
int3
fmull
lds
mov
out
popa
ss
sbb
sbb
call
adc
movsb
test
pop
js
push
sub
jne
add
push
fldcw
xor
out
inc
fwait
stc
dec
cmp
jmp
jae
mov
mov
jbe
out
sbb
gs
ja
ss
sbb
lcall
into
xchg
divl
lods
stc
aas
pop
or
orb
adc
mov
or
clc
and
xor
fsubrl
in
mov
lods
sahf
dec
jno
pop
inc
cmp
pop
rolb
sub
pushf
mov
mov
xor
shl
xor
jmp
dec
fisubs
dec
dec
push
out
xchg
repz
lds
shl
push
fwait
adc
clc
adc
lods
inc
dec
push
dec
xor
out
or
dec
sbb
aaa
or
mov
fbld
movsl
adc
cmp
mov
in
lret
add
sub
cmpl
pushf
jmp
hlt
cmpsb
rorb
sti
ds
cmp
cmc
js
iretw
es
mov
imul
cld
xor
xor
data16
dec
or
int
aaa
fwait
lock
pop
stc
push
and
into
or
repz
add
leave
inc
xchg
jno
push
sbbb
aas
cmp
sub
jb
cmp
test
lods
add
repz
scas
lret
jno
or
add
out
dec
sahf
mov
pusha
rcrb
insb
cmpb
sbb
add
pop
mov
out
mov
and
dec
or
fwait
cmpsl
out
fwait
arpl
adcl
sbb
test
jge
and
outsl
jmp
push
sub
xor
test
inc
xor
decl
push
jae
xchg
or
xchg
jns
adc
std
pop
mov
js
insb
rcrl
sbb
das
mov
enter
push
repnz
pusha
mov
inc
std
mov
jmp
push
and
stc
adc
rcll
aad
mov
and
or
dec
inc
fs
in
jg
stc
mov
mov
test
das
es
cmp
jno
dec
pusha
or
pop
jo
pop
push
xchg
jmp
dec
dec
mov
clc
sub
xor
cmp
divl
in
cld
fsqrt
lahf
insb
mov
jecxz
dec
nop
mov
idivl
add
out
xchg
jg
mov
jmp
mov
add
mov
fisubrl
rcll
mov
test
push
popf
insl
cmp
mov
clc
cld
iret
cmpsl
sbb
gs
stos
sbb
scas
mov
push
push
repnz
shlb
xorl
pop
mov
add
rcll
lret
hlt
ret
xor
test
push
xchg
inc
notb
dec
dec
popf
stc
pop
xor
cli
popf
aaa
divl
loopne
imul
test
insb
xor
mov
pop
cmp
jecxz
pop
pop
inc
enter
pop
pop
stos
or
testb
push
dec
repz
out
lods
mov
sub
dec
add
sbb
fsubr
sub
arpl
mov
fs
jl
inc
repnz
pop
xchg
cld
stc
inc
push
aas
jae
cmp
fisttpll
push
pop
popa
push
jl
push
and
sbb
mov
push
jb
mov
stc
rcrl
pop
pop
popf
stc
lods
cmp
xor
lea
pop
je
sub
add
icebp
or
jmp
dec
mov
inc
and
inc
push
or
xchg
add
xchg
and
ds
inc
sub
mov
hlt
mov
mov
jecxz
ja
cmpl
ja
mov
aam
and
or
test
push
jns
pushf
pushf
mov
addb
stos
stc
push
inc
in
add
add
lock
mov
adc
jg
pop
and
sahf
pop
pop
cmp
lods
fimuls
fs
xor
popa
dec
mov
or
mov
les
sbb
movsl
loop
mov
adc
inc
sbb
xor
sub
push
inc
in
inc
xchg
or
sub
sbb
inc
push
daa
daa
mov
decl
mov
sbb
inc
bound
inc
scas
xor
mov
sti
xchg
push
ret
jnp
push
lods
cmp
popl
and
movsb
adc
mov
arpl
jle
in
push
push
xchg
stos
testl
adc
icebp
sbb
push
push
or
sub
pop
sbb
and
mov
inc
fistpl
iret
out
mov
outsb
jle
aam
jo
aaa
adc
lret
sbb
dec
and
arpl
ret
jp
and
shlb
mov
add
emms
pop
jne
fisubrs
push
and
sbb
and
jbe
mov
fs
pusha
sub
pop
xchg
mov
xlat
into
pop
adc
sub
sub
push
popa
lcall
inc
loope
pop
ret
mov
sbb
dec
lret
insb
fsts
in
pop
mov
sarb
dec
sbb
lcall
inc
sub
cwtl
test
movsb
or
adc
in
pop
sub
add
inc
push
pop
decl
sahf
jnp
loope
incl
jmp
inc
cwtl
mov
cmpsl
mov
aad
shufps
or
enter
out
mov
testb
mov
and
mov
mov
fdivs
pop
inc
push
push
scas
xchg
xchg
dec
sub
pop
inc
or
pop
mov
inc
jae
mov
mov
lea
scas
cmp
lahf
xchg
sub
mov
dec
xor
pop
xchg
imul
out
add
loop
ja
fxch
or
stc
xchg
xor
in
push
aam
cwtl
pushf
fs
arpl
xchg
icebp
fwait
xchg
cmp
cmp
fs
movsb
pushf
cmp
add
pop
movsl
xor
addr16
cmp
mov
mov
dec
pop
or
mov
cmpsl
add
icebp
fimuls
mov
or
adc
sbb
sbb
jecxz
pushf
mov
stos
test
ret
jno
xor
call
pop
sub
int
mov
add
add
lods
popf
les
daa
int3
mov
mov
mov
dec
mov
pop
rorb
or
cmp
pop
sti
mov
mov
xor
xor
xchg
les
mov
xor
mov
lret
sarl
cs
push
into
nop
repnz
in
in
aad
adc
pusha
aad
or
mov
jle
jge
les
in
clc
mov
mov
lea
int3
inc
adc
lahf
sbb
testb
out
add
pop
mov
daa
int3
fildll
in
xchg
into
pop
insl
or
nop
and
sbb
pop
shll
mov
mov
xor
xor
shrd
or
shr
mov
mov
or
mov
cmp
jne
cmp
jne
jmp
mov
mov
mov
mov
mov
xor
shl
mov
mov
xor
mov
mov
xor
xor
jmp
cmp
sub
jae
test
cmp
xchg
lea
adc
clc
adc
fwait
or
xchg
pop
inc
cmp
loop
or
fwait
outsb
dec
mov
mov
fcompl
push
mov
pushf
xchg
cltd
aas
in
xchg
movsl
mov
enter
dec
arpl
dec
and
sub
push
mov
push
sub
sub
lea
xor
mov
gs
lcall
js
push
or
or
pop
inc
jnp
data16
mov
inc
bound
pop
out
add
mov
sub
cmpsl
mov
push
sti
sbbb
pop
inc
push
imul
mov
jl
in
adc
jb
outsb
bound
fbstp
cmp
push
call
push
push
clc
stc
inc
ljmp
push
insl
adc
aas
flds
dec
mov
cmpsb
imul
clc
cmp
mov
popf
push
or
pop
cmp
sub
xor
ret
iret
enter
push
and
sbb
cli
sub
xchg
scas
cmp
sub
test
jge,pt
daa
or
push
mov
fisubs
sbb
ret
ret
xorb
xchg
add
hlt
pop
divb
lret
mov
fcompl
sub
mov
lea
aas
cmp
int
mov
sub
pushf
pop
inc
adc
or
pushf
push
lahf
roll
mov
in
icebp
in
jnp
fwait
hlt
lods
cwtl
aad
xchg
mov
cmp
mov
sar
out
jo
xchg
popa
lret
das
sub
push
stos
add
xor
pop
test
pop
int
dec
out
sub
pop
ret
out
int3
aas
push
aas
stc
sub
jae
imul
mov
aaa
xor
and
into
cmc
sti
mov
prefetch
or
jge
add
xchg
xor
sub
inc
sbb
xlat
push
fdiv
xchg
mov
dec
aad
pushf
popf
fwait
or
cmp
mov
mov
into
sub
dec
test
push
dec
rorl
push
out
jno
pop
outsb
and
sub
pop
lcall
fadds
pop
sarl
xchg
mov
inc
fdivrs
test
xchg
cmpsb
les
sbb
jno
aaa
cs
stc
movups
subb
mov
stos
outsl
sbb
pop
inc
int
rcl
mov
push
int
mov
mov
push
jbe
mov
add
je
jecxz
mov
jns
push
sub
mov
setno
pop
outsl
cmp
mov
jge
dec
pop
sbb
sarl
adc
mov
std
sahf
insl
leave
ds
out
xor
push
push
clc
sti
xor
andl
adc
out
inc
sbb
incb
xchg
mov
loop
cmpsb
xchg
sub
add
mov
xor
aam
xchg
inc
sbb
das
pop
dec
push
or
aad
mov
cmpb
adc
shlb
mov
and
fxam
out
push
xor
pop
push
fwait
rcrb
sbb
fcmovu
mov
repnz
xadd
or
shrl
rcrb
icebp
sbb
ret
scas
fs
mov
mov
lock
es
xor
leave
iret
in
cmpsl
add
dec
flds
lds
test
lret
and
sub
cmp
xchg
ret
in
mov
mov
mov
xor
icebp
sbb
pop
mov
mov
push
push
jmp
mov
pop
leave
outsb
xchg
sbb
pop
mov
adc
jnp
sbb
movsb
mov
lds
call
cmp
push
xor
cmp
push
lock
cmpl
ljmp
cltd
cltd
sbb
ds
flds
int3
inc
fwait
cli
std
dec
scas
test
out
sbb
dec
push
adc
push
mov
bound
xor
push
cld
outsb
mov
imul
sbb
jo
pop
out
pop
mov
mov
mov
adc
fmuls
std
adcl
mov
pcmpeqb
insb
iret
jp
or
mov
pusha
mov
mov
mov
outsb
sub
pop
sbb
and
addr16
pushf
rcr
bound
loope
inc
pusha
mov
ds
movsl
mov
in
or
dec
sbb
xor
bound
loopne
sti
ja
call
dec
fmuls
cmp
inc
jo
imul
dec
pop
lods
push
subb
adc
push
sub
dec
cli
cwtl
repnz
inc
push
cwtl
repnz
push
loop
rcrl
fcoms
in
xchg
xchg
pusha
bound
cmp
cld
inc
jp
sbb
es
adc
pop
dec
xor
pop
dec
cmp
roll
cmp
ss
push
xchg
sub
dec
shrb
aaa
mov
jp
or
aaa
mov
test
shrb
lret
dec
stos
leave
pop
cli
mov
xchg
adc
xor
fdivl
mov
das
clc
xor
cwtl
inc
push
adc
xchg
cld
push
scas
pop
mov
je
mov
pop
jno
sarl
mov
rolb
jle
in
pop
loope
lret
sarl
push
lock
jae
hlt
add
mov
in
cmp
mull
mov
aam
movzbl
stos
jbe
aam
jecxz
sub
mov
add
and
dec
lret
dec
fsts
and
push
lock
aaa
pusha
repz
les
mov
lods
xor
sahf
out
in
sub
jg
pop
rolb
dec
pop
mov
bound
es
dec
cmc
sbb
mov
js
pop
dec
dec
cmc
jecxz
cmp
int3
mov
ror
inc
ljmp
jecxz
subps
std
negb
fsubs
das
bound
mov
cmpsb
dec
jl
jno
push
insb
jmp
int
testb
xchg
add
stc
cmpsl
shrd
or
shr
mov
mov
or
mov
mov
push
pushl
push
jmp
jmp
or
aam
mov
add
jg
adc
clc
adc
xor
cmp
cmpsb
jmp
mov
jae
ret
push
lea
sbb
idiv
ret
pusha
add
pop
sub
jge
scas
jecxz
popa
ss
ficomps
add
mov
jbe
jmp
dec
stos
and
sub
in
stos
ds
lds
push
mov
ret
pop
cmp
pop
jno
ja
loope
xchg
adc
loop
loopne
sti
dec
lret
or
outsl
pop
rcrb
outsl
out
push
sub
jns
mov
cmpsl
xor
pop
xor
std
mov
mov
ja
xchg
push
out
ja
or
jecxz
mov
sbb
xor
fistps
inc
jle
rcll
lea
add
pop
movntps
aad
imul
scas
sub
fsts
je
loope,pn
add
sub
je
push
or
in
lds
or
insl
mov
or
sar
mov
ljmp
cmp
test
testb
mov
adc
ret
in
mov
fcomps
lods
sub
es
shr
out
js
jg
push
addb
scas
mov
aas
mov
sub
clc
cmpsb
jmp
push
test
stc
mov
iret
adc
inc
mov
jns
cmc
shrl
stc
in
pop
pop
mov
sub
cmp
ds
in
leave
roll
in
int
push
xchg
xchg
dec
leave
sti
pop
push
push
into
aad
add
dec
mov
or
cmp
jns
adc
pop
ljmp
das
lcall
imul
fs
subl
dec
sub
jge
mov
je
ss
xor
add
imul
jne
in
out
popa
in
cltd
cmpsl
movsl
adc
movsb
push
jo
ss
dec
xor
mov
inc
daa
sahf
sbb
add
xchg
push
xchg
das
aam
pop
in
arpl
cld
mov
std
jne
fsub
pop
outsb
push
lea
adc
cmp
jge
dec
and
out
or
mov
icebp
add
sub
sbb
mov
push
mov
loop
mul
adc
roll
repz
pop
std
mov
jno
rolw
mov
incb
push
icebp
ds
test
aad
lcall
jecxz
inc
mov
call
fsubs
sbb
les
aam
xchg
mov
aad
ja
and
icebp
mov
xlat
jecxz
adc
mov
cmp
in
adc
push
loop
sti
daa
rorb
call
cmp
iret
jb
addl
xor
pop
or
mov
pop
xchg
push
push
cli
push
call
adc
daa
fistl
pushf
pop
xorl
shll
enter
shrb
xlat
imul
dec
jmp
out
push
sar
lods
add
fwait
push
scas
xchg
mov
dec
movb
sub
fdivl
ja
sarl
sub
sub
xor
adc
push
movsb
jmp
scas
data16
test
sbb
push
loop
inc
add
pop
mov
shr
popf
dec
push
pop
cwtl
mov
sbb
repz
xor
inc
loop
bound
testl
mov
or
lock
in
jecxz
in
sbb
lock
xchg
lea
inc
or
pop
call
mov
cmpsl
xlat
mov
shrb
sub
dec
mov
test
mov
mov
pop
insl
fs
loop
jbe
pop
lods
pop
orl
cmc
rcrb
jl
addr16
push
xor
add
in
mov
mov
popa
cmp
jle
push
mov
pop
movsb
or
pop
gs
adc
cltd
arpl
ja
mov
scas
orl
or
call
shlb
aaa
jg
loope
insb
addl
clc
repz
les
cmp
ss
pushf
lock
jecxz
mov
add
xchg
push
out
mov
cmc
mov
sbbb
dec
inc
mov
stos
lret
xchg
xor
in
dec
out
sbb
mov
and
xor
add
insb
xchg
fs
mov
push
and
mov
mov
sbb
mov
out
dec
jg
and
mov
out
in
push
dec
pop
in
stos
into
cmp
cwtl
mov
cmpsb
add
xor
mov
out
rclb
xor
pop
arpl
pop
xchg
xor
jl
out
adc
sbb
dec
dec
cmp
cmp
and
dec
cld
repnz
pushf
sub
pop
jmp
inc
sahf
ret
pop
sbb
rcrl
mov
and
xchg
adc
push
jae
dec
test
jp
sbb
lods
mov
shrl
aad
push
jle
cmp
dec
cwtl
dec
shr
adc
les
and
es
leave
mov
rcr
xchg
imul
int
mov
in
inc
lods
push
sub
test
pop
pop
cmp
inc
mov
shll
outsb
or
push
mov
push
jbe
fcomps
or
scas
and
mov
ja
lods
mov
cmp
les
cmpsb
xchg
cmp
add
outsl
mov
leave
jae
xchg
sub
fiaddl
imul
movsl
mov
addr16
aam
lahf
jns
xchg
popa
pop
popa
xchg
jo
dec
loop
sub
mov
in
shl
sub
jmp
loopne
inc
push
sub
daa
sbb
mov
mov
dec
dec
or
xchg
mov
cmpsb
xor
mov
out
mov
shlb
pop
push
add
imul
fstpt
movsb
dec
sti
subl
insl
push
andl
ret
mov
call
pushf
ret
inc
sbb
je
sahf
adc
ljmp
cmc
mov
dec
and
hlt
mov
mov
test
fstpt
aam
xor
imul
in
lahf
rclb
jb
jge
push
jmp
or
in
enter
imul
pop
adc
adc
clc
adc
mov
ret
stc
cmpb
xchg
xor
fldt
imul
xor
test
push
mov
pop
xor
fld
mov
jg
xor
xor
out
movsl
jae
clc
lods
clc
mov
jae
fnstenv
out
sbb
fisubrl
test
outsb
mov
cs
push
sub
pop
shll
cmp
lret
dec
cmp
outsb
mov
push
push
popl
iret
and
repnz
mov
mov
push
and
push
jmp
push
out
xchg
lahf
mov
shll
bound
popf
repz
add
fnstsw
ret
pusha
mov
jns
inc
adc
mov
out
xchg
cli
popf
cmpsl
popa
hlt
push
mov
in
add
mul
fsubl
outsl
or
rol
adc
mov
inc
pop
loope
add
mov
cmc
jno
insl
xor
pop
jg
xchg
dec
int
or
mov
js
mov
dec
mov
jae
aad
or
sahf
add
jle
insl
push
mov
xchg
out
test
popa
clc
and
push
cvtdq2ps
fdivrs
jno
jecxz
cld
and
in
adc
mov
outsl
mov
cmpb
mov
lcall
fucomip
in
cmp
rol
int3
mov
mov
push
mov
and
shlb
inc
mov
ret
xor
mov
dec
enter
and
cmpsl
push
push
xor
sub
adc
add
mov
icebp
sti
fstl
and
push
stos
xchg
and
push
pop
or
ret
xor
pop
or
add
insl
push
pop
push
xorb
fidivrl
push
into
mov
shlb
sub
dec
mov
pop
inc
inc
in
add
clc
push
add
lods
ret
scas
mov
insb
mov
jl
push
daa
mov
sbb
mov
inc
inc
or
call
jmp
xor
inc
mov
pop
add
jge
popa
jmp
bound
mov
pop
std
or
xor
mov
cmc
pop
sub
test
mov
rorb
sbb
in
dec
pop
inc
jno
cmp
xor
das
stc
clc
inc
outsl
push
jb
enter
cld
cmp
loope
add
push
mov
rcrl
fiadds
ss
and
push
xor
mov
enter
dec
in
mov
scas
mov
repnz
repnz
push
sbbl
sub
or
cmp
stc
inc
fsubrl
sbb
xor
jb
rcrb
daa
mov
xor
pop
add
out
jmp
jo
and
leave
orb
in
sbb
enter
pop
repnz
fildl
iret
xor
pop
and
mov
scas
call
push
out
lods
xor
cmp
stos
fprem
xor
int3
sbb
inc
jb
sbb
jbe
or
out
orb
mov
mov
sbb
mov
mov
cmc
jle
push
insb
pop
sbb
pop
sub
pop
sub
pop
sbb
inc
jmp
mov
sub
out
into
or
inc
xchg
loope
push
ds
cmpsb
sbb
stc
stc
loopne
subl
cwtl
xchg
dec
pop
incl
sub
rorl
addl
ds
mov
enter
mov
jle
clc
shld
test
mov
jae
popf
xor
movsb
and
pop
movsl
mov
repnz
sbb
shl
test
mov
sbb
pop
jmp
sahf
std
add
enter
cmp
mov
jno
jnp
into
das
sub
lods
pop
jnp
sbb
mov
push
scas
mov
adc
inc
pop
testb
mov
loop
test
xchg
mov
test
adc
lock
xchg
loope
stos
es
jbe
les
push
sub
sti
xchg
bswap
repnz
sub
xchg
sbb
repz
jmp
sbb
mov
enter
sahf
dec
push
stos
add
test
out
mov
add
push
adc
push
sub
jns
mov
dec
jne
ja
out
daa
xlat
sub
mov
aad
dec
iret
mov
jmp
push
sub
and
xchg
add
int3
and
gs
stos
mov
jnp
int
into
int
add
adc
movsb
xchg
mov
add
outsb
and
or
out
ror
push
rolb
mov
xor
mov
add
mov
xchg
jne
int
test
lret
sarb
out
pushf
ss
jns
adc
or
cmpsb
sub
jnp
es
xchg
or
rclb
cmp
jnp
xor
movsl
popa
nop
inc
jg
das
push
inc
mov
cs
jp
or
dec
or
outsb
outsb
imul
aaa
sub
ficoml
cmc
mov
or
or
std
fdivs
push
or
mov
inc
sub
imul
js
mov
std
inc
and
xchg
data16
nop
mov
js
push
jne
fisttpll
cmpsl
loopne
or
jmp
jno
xchg
hlt
cmp
mov
loope
pop
idivb
mov
xchg
push
lret
sub
mov
and
pop
cmp
adc
mov
jb
push
adc
rcl
lcall
push
mov
mov
mov
push
jp
lea
icebp
dec
mov
js
loope
test
fisubrl
mov
pushf
xchg
sub
adc
inc
out
lret
mov
push
cmp
mov
mov
push
out
lret
mov
mov
nop
int
sub
icebp
sub
xchg
mov
loopne
push
sti
adc
jecxz
outsb
dec
jns
gs
call
jmp
in
cmc
dec
stos
dec
sub
add
jne
adc
clc
adc
repz
sub
and
fpatan
push
pop
lock
movsb
mov
cmpb
fwait
push
loope
jnp
push
in
lock
orb
jno
out
cwtl
cmpsl
dec
cmp
mov
je
enter
jno
arpl
idivb
into
xchg
stos
in
inc
push
sub
outsb
in
adc
out
bnd
inc
sub
fdiv
lret
lret
repz
scas
outsb
jne
or
jo
in
mov
xlat
sub
add
add
aaa
lret
mov
loope
fdiv
lods
movsl
outsb
xchg
sbb
out
inc
adc
imul
dec
adc
push
addr16
fs
fs
scas
jb
shrl
xor
xor
xchg
pushf
cs
ror
scas
jb
pop
dec
inc
push
mov
ret
insl
fucom
and
jne
cli
mov
lahf
push
adc
or
mov
xchg
mov
sbb
mov
pop
push
test
popf
cmc
loope
movsb
idivl
adc
push
inc
jno
mov
push
add
push
stc
cmp
push
or
mov
lret
add
nop
addr16
popa
in
mov
adc
in
cmp
mov
sub
imul
sbb
cmp
stc
scas
and
mov
bound
cmp
stc
jbe
mov
lea
ffreep
sbb
sbb
scas
adc
or
xchg
mov
xchg
aaa
sarl
loope
mov
in
in
pop
push
push
jns
sub
imul
mov
cmp
cmpsb
je
dec
jge
pop
jmp
insl
jns
mov
mov
addl
jmp
add
dec
add
jl
mov
leave
push
into
das
sbb
pop
push
xchg
imul
cmp
and
add
outsb
aad
inc
aas
cmpsb
push
pop
enter
loopne
pusha
in
sbb
mov
inc
iret
jl
push
jb
push
jns
mov
sub
jecxz
rol
std
lds
bound
ficompl
pop
lock
push
sbb
jmp
adc
mov
in
or
xchg
pop
jnp
jb
ret
sub
out
push
add
dec
xor
push
xchg
mov
lods
pop
mov
adc
iret
arpl
mov
adc
scas
arpl
in
xchg
iret
xchg
adc
scas
mov
sbb
mov
das
hlt
nop
jns
mov
fcomi
loopne
cwtl
jns
mov
mov
sub
push
add
inc
add
ret
jb
daa
dec
cmp
and
sbb
mov
xchg
push
leave
repz
das
or
cmp
fld
insb
shrb
lcall
jnp
mov
inc
xchg
es
xchg
aaa
pop
xor
add
lcall
divl
divb
cmc
jb
ja
adc
mov
cmp
les
and
adc
pop
lods
int3
ss
orb
push
xlat
call
fs
lock
insl
mov
dec
cmp
adc
lea
push
xchg
dec
and
adc
cwtl
sbb
mov
or
loop
lea
test
mov
jg
mov
int3
adc
fimull
fs
jns
in
out
ret
je
cmpsl
mov
lret
aaa
mov
aaa
mov
pop
xor
mov
push
mov
jle
mov
gs
repz
aas
and
xchg
mov
cmp
mov
test
sub
inc
stos
mov
cmp
adc
jns
jo
inc
xchg
push
xchg
push
jl
popf
cs
sbb
cmp
xor
inc
repz
jle
mov
scas
jb
scas
out
lea
imul
pop
push
push
stos
jmp
push
pop
cmp
xchg
ficompl
insb
adc
dec
and
ljmp
xor
lods
sbb
and
leave
adc
or
add
adcb
jns
roll
hlt
sbb
seto
dec
mov
outsb
and
jns
rcrb
mov
stos
punpckldq
cmp
cmc
mov
lahf
insl
pop
push
adc
int3
lock
cwtl
daa
movsl
insb
sarb
stos
push
insb
ss
ljmp
push
cmpsb
mov
xchg
cmp
ljmp
xor
push
sub
or
stc
ja
test
lahf
nop
sbb
sbb
insb
fistps
in
fstps
pop
test
pop
sbb
dec
gs
outsb
shlb
mov
mov
add
pop
je
int
sbb
shlb
and
and
push
cmc
mov
jle
jp
orl
adc
outsb
mov
test
lret
lods
xchg
mov
dec
test
sahf
ret
aam
mov
push
andb
ss
testl
xchg
pop
stc
enter
shr
addr16
push
cmp
ret
ja
inc
add
lret
pop
fstl
rclb
mov
dec
mov
ljmp
mov
push
jbe
fmull
mov
inc
pop
cmc
cmpsl
int
adc
and
dec
int3
sub
arpl
stos
test
sbb
add
or
cmc
hlt
lds
sub
dec
js
out
adc
xor
in
mov
ror
sub
sbb
hlt
and
addr16
push
stos
inc
sub
xchg
int
xor
jbe
jge
jl
mov
aad
aas
mov
push
aaa
lock
xchg
push
pop
jecxz
adc
or
movl
daa
pop
andb
xor
cld
add
mov
stos
xchg
mov
cwtl
mulb
lods
mov
or
enter
cmpsl
jg
or
int3
sub
or
popa
mov
mov
repnz
pop
mov
lods
fadd
out
ds
sbb
push
stc
or
and
xchg
sub
icebp
cmp
jge
sbb
adc
rcrl
xor
inc
repz
push
xchg
add
push
sub
std
sub
loopne
sbb
xor
inc
mov
push
mov
cmc
mov
scas
sarb
mov
mov
shrd
jmp
sbbb
pop
mov
pusha
push
push
out
cmp
and
xchg
adc
push
clc
adc
cmp
sub
and
jge
mov
inc
xchg
push
mov
sub
mov
or
popf
in
add
arpl
and
sub
mov
nopl
mov
dec
cwtl
sbb
outsl
mov
cvtdq2ps
sbb
iret
push
sbb
push
inc
hlt
jbe
xchg
lret
pop
pusha
out
nop
jle
lock
inc
xchg
loope
pop
dec
loope
into
call
jb
fldl
iret
jno
inc
pop
fstps
cmp
inc
idiv
mov
or
sbb
inc
ret
dec
sub
das
dec
pushf
add
pusha
xchg
jg
dec
push
mov
inc
lret
mov
repnz
out
les
push
stos
pop
adc
sbb
sbb
loopne
mov
fidivrl
mov
ret
push
sbbl
dec
push
lahf
jne
jl
pop
aam
sbb
je
sbb
inc
repz
inc
pop
mov
push
test
pushf
xchg
pop
cmp
movsl
xor
mov
repnz
jecxz
es
insl
sbb
xor
xchg
xchg
pop
dec
dec
mov
pop
cwtl
dec
dec
outsl
aaa
or
loop
push
xchg
daa
jo
fwait
dec
bound
cmpsb
shl
adc
lea
cwtl
push
adc
loop
fildll
dec
xchg
push
dec
jns
aas
xor
repz
sar
xchg
andb
fscale
mov
sti
shrl
adc
cmp
je
adc
jo
test
mov
in
pusha
ja
insb
lret
loop
adc
sub
xchg
mov
jbe
cs
jno
jmp
adc
xlat
jno
push
xchg
imul
sbb
cmpsb
fstl
mov
adc
stc
adc
sarb
idivb
cmp
iret
adc
dec
pop
in
inc
lods
icebp
cmp
pop
xchg
push
sub
adc
and
add
push
push
in
inc
jg
adc
mov
ja
mov
jb
and
dec
fcompl
fmuls
xchg
cmp
push
test
sbb
notl
xchg
mov
cmp
mov
hlt
jno
les
cmp
xor
rclb
pop
adc
dec
loop
jo
testl
call
pop
and
in
loopne
push
fwait
aas
stos
and
shl
ret
sub
std
bnd
stos
enter
pushl
sbb
repnz
repz
sti
push
out
sub
pop
jns
or
xor
xchg
stc
subb
lods
jl
lahf
mov
jb
arpl
bound
xchg
inc
lret
add
push
cmp
lcall
cli
xchg
mov
movsb
mov
rorb
sub
lods
data16
iret
xchg
lcall
push
scas
mov
xchg
pop
mov
testb
push
cld
dec
xor
or
and
into
cmp
xor
xor
jle
xorb
xchg
pop
xchg
cmovs
adc
dec
pop
dec
xor
cmovb
mov
mov
sub
mov
xchg
pop
add
push
lods
inc
aaa
rol
inc
ss
push
into
sbb
pop
fadds
mov
insl
sti
sub
je
sub
mov
xchg
lods
lods
adcl
test
fwait
je
fdivrl
mov
jmp
cmp
mov
call
movsb
aaa
les
cmp
jbe
loop
fistpl
iret
out
lods
fisubl
mov
fisubrl
push
push
adc
xor
pop
cmpsl
push
rcr
imull
push
sbb
sub
mov
pop
jecxz
int3
dec
fisttpl
jl
xchg
outsl
les
and
add
sbb
sahf
lretw
or
pop
fstp
sbb
jmp
popf
xor
test
mov
in
rcll
insl
cmc
cmp
stc
cmpsl
fidivrs
call
jmp
cmpsl
push
negb
rcr
lcall
stos
push
mov
fisttpll
mov
stos
in
inc
sahf
mov
push
nop
les
add
inc
out
cmp
mov
push
enter
cmp
call
sbb
fisubrs
adc
stc
and
dec
jl
test
dec
ret
clc
inc
push
call
jnp
outsb
push
enter
insl
in
jb
int
lds
jecxz
fildll
cs
in
std
int
shlb
int3
adc
push
pusha
mov
cmp
push
arpl
into
cwtl
mov
push
xchg
shlb
aad
add
xchg
gs
sbb
cwtl
out
enter
lds
insb
dec
pop
jp
lods
jo
test
repz
je
shrl
cmp
jmp
xchg
popf
mov
stc
rorl
daa
jecxz
jmp
jb
out
jmp
adc
insl
push
arpl
mov
adc
or
inc
sbb
movb
scas
or
cmp
push
adc
xchg
loope
aaa
mov
inc
call
push
cmp
fisttpll
imul
or
mov
or
and
or
inc
add
cwtl
aad
dec
rcll
das
popa
jb
lock
xchg
mov
es
mov
push
icebp
out
push
ficompl
scas
ret
lods
daa
sub
jae
pop
fdivrp
push
mov
xor
add
into
sbb
inc
xchg
sub
mov
incb
loopne
dec
scas
pop
sbb
xor
mov
mov
jnp
sbb
xchg
aaa
fists
add
sbb
stc
arpl
mov
add
and
pop
and
stos
jg
adc
arpl
lcall
or
pop
push
jmp
sbb
ficoms
add
insb
es
or
iret
inc
mov
sbb
mov
movsl
xchg
cmpsl
lock
pop
and
popa
push
mov
push
mov
sbb
ret
je
stos
cmc
cmp
std
cmpsl
icebp
ret
jecxz
pusha
sub
into
adc
test
rcl
dec
mov
or
pop
or
shr
shr
xor
push
xor
jmp
mov
push
push
push
mov
or
aam
adc
clc
adc
stos
psrad
jo
in
jl
or
cwtl
jge
add
stos
mov
push
imul
or
push
xchg
cld
mov
inc
cmp
jnp
xchg
xchg
fcmovnb
mov
popf
es
cmp
pop
scas
fsubl
jecxz
dec
mov
loope
gs
stc
iret
xor
mov
pop
sub
cwtl
cli
pusha
and
jne
sbb
ja
scas
fidivrl
lods
inc
jne
rclb
clc
cmpl
and
aaa
jmp
jnp
imul
add
dec
pop
inc
nop
mov
cltd
ss
imul
or
add
cli
ss
hlt
mov
and
or
lds
jmp
ja
in
add
jbe
push
sbb
adc
mov
aad
sbb
pushf
cs
mov
mov
popa
fildl
in
or
mov
xor
js
cmc
cmp
xchg
sbb
gs
inc
mov
jae
push
mov
jnp
mov
mov
add
xor
inc
clc
mov
adc
out
es
fcoms
pop
shlb
cltd
popl
mov
iret
mov
in
xor
std
paddusw
mov
xchg
mov
mov
lock
sbb
xchg
pop
xor
jns
mov
leave
arpl
mov
repnz
js
mov
inc
inc
jl
pop
lock
aas
push
sub
push
aam
icebp
inc
int
add
aas
in
jmp
jl
popf
inc
mov
repnz
inc
sbb
fdivrs
jmp
jp
xchg
lods
push
imul
sahf
fdivr
mov
test
sbb
push
mulb
outsb
xchg
dec
jo
adc
xor
cmp
sbbb
iret
cli
jg
test
add
jge
cmp
inc
lret
jae
jno
aas
test
mov
stos
das
add
fs
mov
mov
or
cmpsb
ficomps
push
xchg
mov
push
out
mov
in
test
fcmovnu
add
fldenv
mov
fdiv
sub
cmp
jns
imul
test
mov
push
lock
insb
adc
stc
xchg
fisttpl
push
shlb
dec
or
dec
lcall
enter
scas
sbb
addl
pop
inc
notb
or
pop
fnsave
cmpsl
in
cs
lock
mov
push
shrb
xor
sbb
add
push
std
jae
sbb
lret
pop
shrb
sub
es
mov
or
sti
push
cs
push
rcr
aam
arpl
call
cmp
cwtl
or
pop
push
cmp
fidivrs
aaa
inc
pop
imul
mov
int3
push
sbb
and
aaa
imul
mov
or
in
mov
push
xor
gs
fdivr
mov
pop
int
or
mov
add
xchg
aaa
mov
push
sub
pop
mov
and
stos
xor
sahf
or
mov
mov
jl
aam
cmc
pop
mov
inc
inc
outsl
dec
ss
fwait
and
movaps
mov
repz
iret
mov
or
nop
mov
test
push
pop
jne
leave
mov
call
inc
push
push
fwait
mov
and
jp
mov
jb
add
nop
dec
flds
mov
pop
sti
jp
lret
mov
int3
pop
xchg
jne,pn
push
adc
aam
pop
lret
mov
sarb
pop
jg
pop
jp
int
mov
cmp
sbb
insl
push
sub
icebp
mov
inc
mov
mov
les
pop
cmc
ret
out
lods
shrb
lret
mov
push
xchg
gs
in
sbb
outsl
inc
mov
insb
push
inc
out
jle
stos
adc
pop
cmp
testl
inc
loope
loope
push
mov
sub
pop
fisubl
loope
lods
shlb
pop
sub
pop
rep
in
mov
gs
cmp
mov
mov
mov
pop
lods
fwait
xchg
lret
test
imul
sub
pop
mov
sbb
add
jl
sbb
sbb
mov
sbbl
pop
stc
scas
mov
negb
jno
ret
cld
lods
add
xchg
fimull
mov
sub
or
fsubrs
mov
or
mov
xor
adc
rcl
push
pop
mov
test
add
jbe
fildll
or
mov
rorl
mov
xchg
mov
repnz
mov
adc
enter
std
mov
and
jne
or
lcall
fwait
aad
xor
fdivr
jo
ss
dec
pop
pop
call
mov
cmp
xchg
mov
sbb
test
lcall
sub
and
sbb
pop
lea
add
inc
dec
aad
fcmovnbe
lea
leave
mov
dec
je
or
test
shll
or
add
ret
pop
addr16
shll
and
push
xor
mov
pushl
js
xlat
hlt
dec
jge
mov
out
shr
dec
jb
pop
adc
adc
jne
into
lods
in
inc
push
sbb
jp
es
sahf
js
jae
push
pop
movsb
jge
pop
dec
loope
or
mov
mov
cs
push
sub
or
les
rcr
mov
mov
test
xchg
repz
jmp
sub
push
cs
jge
cmove
js
stc
cmp
fwait
enter
cmp
mov
testb
or
enter
aam
mov
inc
sub
jb
inc
aam
aad
sahf
cmpsb
jl
andl
les
mov
push
pop
sahf
cmpsb
movsl
cmp
sub
jmp
loope
mov
jbe
daa
push
pop
fwait
cwtl
insl
sub
aas
dec
ret
pop
icebp
shl
add
outsb
mov
imul
call
and
ret
stos
inc
adc
sub
sbb
rolb
sbb
push
cmp
test
mov
rcr
sbb
leave
push
mov
pop
mov
mov
mov
push
push
push
call
shld
shl
mov
jmp
push
hlt
jmp
push
or
movb
hlt
jns
xchg
cmp
adc
clc
adc
addb
cmpsl
std
popa
sbb
pop
sbb
rorl
fwait
aam
nop
inc
jne
int
xlat
aam
sahf
test
cmp
cmc
std
jne
dec
mov
pop
xchg
sub
push
xor
ror
sbb
sar
punpckldq
inc
push
inc
pop
lods
stos
out
cltd
imul
or
shll
mov
mov
and
or
dec
in
pop
or
push
jb
sub
push
mov
inc
jo
mov
dec
sub
iret
lret
mov
les
je
cmp
sahf
cmp
ss
or
cwtl
fs
mov
outsb
fistpll
pop
mov
mov
cmp
in
pop
sub
pop
sub
fldt
xor
dec
gs
pop
mov
int3
jns
cmpsb
pop
cs
icebp
lock
shl
sbb
in
fadd
lss
dec
add
in
inc
aam
pop
or
add
fdivp
jle
adc
lret
stc
xchg
test
jecxz
or
out
mov
mov
outsl
mov
pop
mov
hlt
mov
inc
repnz
dec
inc
jbe
movsl
and
fstpl
ror
inc
push
push
jo
ds
or
rcl
cmpsl
xor
sbb
and
cwtl
insl
xchg
js
jns
xchg
add
dec
sbbb
or
jecxz
aaa
pop
repz
xchg
out
push
or
nop
imul
pop
cmp
nop
or
cmp
out
aad
shll
out
mov
stc
xor
test
int
fwait
xor
mulb
es
je
inc
stos
clc
arpl
cmc
push
mov
js
mov
mov
ss
xchg
mov
push
je
jmp
xchg
inc
outsl
push
or
inc
sahf
dec
out
mov
sub
insb
mov
test
in
mov
ret
and
stos
pop
jbe
and
adc
notb
shrb
and
mov
dec
ja
leave
fs
call
and
cltd
addr16
pusha
js
xchg
sbb
movd
movsb
xchg
mov
insl
mov
push
xchg
outsb
js
xor
adc
lds
aas
fsubrp
aaa
stc
or
add
sahf
pop
and
cmp
outsl
insb
inc
adc
lret
jbe
pusha
push
mov
addl
adcb
jg
dec
sub
mov
fldz
mov
test
jmp
aaa
int
sahf
sub
mov
cmp
mov
inc
sub
sbb
jle
shll
pop
adc
gs
pop
je
sbb
mov
adc
scas
pop
sub
fisubrs
out
out
sub
xchg
scas
mov
stos
add
ret
add
mov
insl
mov
or
or
sbb
aaa
ds
xchg
addr16
dec
int3
inc
cmp
lods
popf
adc
sbb
pop
add
sub
sub
and
mov
in
jnp
shlb
cmpb
jmp
rol
jns
ror
popf
int3
xlat
sbb
pop
movsl
imul
mov
arpl
rclb
hlt
mov
xor
aam
push
sbb
pushf
xchg
add
dec
pop
mov
xchg
dec
dec
pop
mov
fxch
inc
aam
loop
xlat
jmp
add
aas
es
popa
xchg
mov
insl
sub
and
or
pop
lock
out
fistpll
int
push
xchg
lods
mov
jl
xor
iret
nop
sahf
or
and
sub
jl
push
in
push
pop
mov
inc
in
fcmovbe
mov
pop
int
iret
test
in
imul
cwtl
daa
pop
dec
ljmp
enter
cmp
in
jno
in
fsub
pusha
fwait
or
int3
movsl
pop
push
push
ljmp
adc
addr16
je
imul
repz
pop
mov
xchg
mov
pop
pop
out
stos
test
or
lods
dec
es
xchg
sbb
fdivs
bound
or
sbb
enter
xor
cwtl
ficomps
cmpsl
movsb
mov
mov
shl
xchg
test
pop
adc
push
mov
adc
adc
test
xchg
jbe
js
fstps
ljmp
push
fisttps
xlat
movsb
les
inc
int3
cs
xlat
cmp
adc
mov
sti
cwtl
sti
xor
std
mov
in
movsl
cmpl
pop
rcll
ror
mull
push
loop
push
xor
add
in
out
call
lcall
sub
popf
sbb
cld
out
movsb
mov
fmuls
add
and
gs
lret
dec
inc
jg
sbb
jge
shrl
pop
lds
fcmovnbe
fsts
sub
mov
xchg
stos
lods
cmp
cmpb
sbb
inc
cmc
call
push
loopne
fs
aad
ficomps
xor
bound
cmp
add
cmpsl
repz
cmpsl
ss
add
popf
mov
push
fstl
adc
mov
push
jg
unpcklps
insb
js
sub
mov
add
pop
sbb
mov
movd
xorl
stos
daa
fwait
shrl
out
adc
in
fs
add
movsl
cmpsl
jmp
and
pop
repnz
aam
call
pop
push
ja
daa
sub
push
lahf
in
add
xorb
sbb
ss
jns
js
adc
orl
aaa
aad
in
dec
loop
mov
fistpl
inc
add
cmp
xchg
mov
aas
mov
cltd
pusha
xchg
les
shl
repnz
loop
pusha
mov
fmuls
pop
int
mov
mov
or
mov
rcrb
lret
xor
lock
add
fcoml
add
inc
xchg
fisubs
into
inc
sub
cmp
insb
cmp
cmp
dec
and
repz
test
stc
in
sbb
shl
dec
xor
andb
mov
cmpsl
inc
pop
jno
or
stc
xchg
test
xor
mov
daa
fldenv
in
out
jno
mov
mov
into
les
int
adc
jecxz
ja
not
or
xor
or
xor
xor
mov
mov
mov
mov
mov
mov
shl
xor
mov
mov
mov
xor
xor
shrd
shr
or
jmp
inc
mov
cs
jmp
sub
push
sub
adc
push
outsl
sub
jmp
rcrb
loope
scas
dec
ljmp
or
adc
call
xchg
cwtl
inc
out
dec
je
mov
push
inc
ljmp
mov
or
mov
or
test
and
cmpsb
xchg
cmc
cmp
inc
insb
cld
push
push
shll
xchg
mov
lahf
mov
jmp
into
sbb
lret
sarb
inc
add
sbb
jne
sub
out
push
pop
inc
ljmp
mov
and
add
pop
mov
inc
daa
push
jnp
push
test
push
fnstsw
push
daa
pop
pop
cmpsl
out
xchg
sbb
jp
pop
sub
and
lret
pop
int3
out
mov
loop
insl
xor
dec
push
cli
fnsave
cmpb
enter
int
lret
add
movsl
xchg
mov
mov
jge
fnsave
or
and
ret
popa
mov
test
dec
icebp
and
in
subb
sub
add
out
gs
add
mov
pop
xor
push
xor
or
sub
mov
and
les
fldenv
lahf
adc
setg
and
call
lret
sahf
or
adc
lea
mov
cmp
mov
stc
in
sub
jns
fdivr
out
dec
cmp
aad
sub
cmpsb
out
in
jecxz
and
adc
or
lret
jle
loope
and
sbb
push
pop
push
jne
jge
ffreep
fadd
mov
nop
popa
cld
pusha
or
adc
les
call
push
jmp
add
mov
sub
xchg
mov
ja
add
js
xor
int
ja
jecxz
or
add
mov
cmp
ret
adc
mov
or
pop
lea
fcomps
lods
andl
mov
push
dec
jne
data16
add
pushf
std
int3
mov
or
xor
aam
bound
inc
rcrb
stc
cltd
xchg
pop
iret
mov
and
jl
ljmp
icebp
adc
xor
insb
sbb
lahf
data16
mov
mov
xorl
repnz
cmc
inc
xor
mov
mov
fwait
sbb
ret
out
jle
test
push
pop
add
repnz
sub
add
lods
js
add
xchg
popf
sub
or
sbbl
mov
mov
mov
icebp
adc
adc
stc
fiadds
inc
iret
jecxz
arpl
jo
adc
lods
and
jno
mov
or
adc
xchg
jmp
sbb
add
push
in
cmp
and
in
gs
mov
adc
in
lods
and
insl
mov
std
push
xchg
or
mov
mov
shlb
sub
sbb
mov
push
lret
push
or
test
mov
mov
or
popfw
mov
pop
or
jmp
sbb
lahf
sahf
loop
mov
cli
xchg
stos
adc
lds
sub
popa
jg
xchg
cmp
gs
aad
add
xor
into
cmp
into
roll
sbb
xor
and
pop
in
rol
shl
stos
mov
mov
adc
dec
jle
test
mov
mov
dec
aaa
ja
ljmp
mov
or
cmp
add
sub
mov
pop
sub
je
or
cmc
leave
das
xor
addr16
fs
jmp
cld
adc
xor
lock
int3
subb
cli
mov
or
cmpsb
lods
adc
pop
imul
stos
xor
cmp
jecxz
jg
inc
lods
xor
xor
mov
clc
iret
hlt
pop
inc
sahf
mov
cwtl
add
cltd
out
pop
inc
mov
cmp
mov
inc
repnz
stos
and
daa
cmp
ds
mov
sub
ret
mov
sub
int
jnp
mov
inc
inc
cmp
pusha
sub
lcall
orl
mov
push
xchg
xlat
mov
sub
mov
aas
jg
rol
fidivs
mov
or
rcr
repnz
sbb
push
cmp
int
cmp
rcll
notl
neg
loopne
aas
pop
inc
scas
dec
sbb
push
ret
mov
and
hlt
leave
es
add
cmp
dec
icebp
add
cltd
sub
test
std
and
mov
push
mov
sbbl
mov
stos
mov
inc
aam
sub
shrl
enter
cld
mov
aaa
bound
or
mov
xchg
push
les
mov
test
pushf
shll
movsb
xor
xchg
in
das
inc
cld
pushf
icebp
std
test
jg
enter
sub
cltd
and
mov
inc
fwait
mov
inc
dec
dec
fstpl
out
dec
test
shrl
add
adc
sbb
loope
stc
subl
cmc
and
ja
xchg
push
sbb
pop
outsb
xchg
les
adc
mov
push
add
xchg
dec
notl
push
pop
push
jecxz
inc
movsb
xchg
pop
mov
adcl
sub
test
lds
loopne
movsl
or
push
jb
sub
xor
cmp
mov
cmp
cmc
mov
jp
addr16
cmpsb
pop
xchg
mov
in
cmp
sub
mov
jecxz
pop
mov
imul
push
mov
pop
sub
shl
popf
sbb
enter
add
int3
in
mov
sahf
mov
push
push
imul
sub
mov
stos
xlat
lock
testl
std
aad
jl
lds
fcompl
mov
push
inc
push
imul
enter
and
xor
or
mov
mov
mov
mov
xor
shl
mov
mov
xor
mov
mov
xor
xor
mov
shrd
or
shr
or
cmp
jne
cmp
je
pushl
pushl
pushl
push
jmp
jmp
dec
int
xchg
jle
or
xor
push
clc
adc
rcr
repnz
pop
mov
xor
sahf
scas
sbb
push
pop
into
cld
cmp
lods
loope
mov
fsubs
insb
adc
into
adc
pop
js
dec
sbb
pop
dec
std
push
push
push
add
xchg
cmpsb
mov
lods
jmp
pop
mov
mov
dec
pop
lret
or
ljmp
inc
mov
sub
int3
ret
sbb
jae
mov
push
mov
fs
xchg
shrl
out
push
or
dec
jg
sbb
into
stos
adc
mov
dec
movsb
jmp
jae
stos
stos
mov
push
jg
int
fidivrs
lcall
call
sub
xchg
in
sti
scas
ficoms
mov
pop
movsl
xor
sub
pushf
sbb
sarb
out
mov
push
inc
add
push
mov
pop
inc
clc
mov
pop
mov
xchg
loopne
data16
sti
std
sub
aaa
ret
push
pop
mov
lods
mov
push
loope
lahf
rcll
mov
sub
es
fisttpll
mov
push
mov
fs
cmp
adc
jecxz
push
mov
into
insl
dec
aad
iret
mov
mov
push
shl
xor
ljmp
pop
inc
loopne
inc
test
cmp
subl
arpl
push
inc
push
dec
cmc
or
sbb
xor
inc
stos
cmp
test
popa
fldl
push
mov
in
out
cmc
in
fdivrl
repz
sub
dec
idiv
dec
into
jp
cmc
test
test
in
push
ja
pop
or
leave
add
das
push
jp
je
bound
cmp
mov
xchg
aad
iret
insb
push
pop
ficoml
sbb
adc
push
mov
adc
test
lods
int3
xor
adc
dec
in
dec
shr
sbb
mov
cmp
pop
das
lock
dec
es
pop
xchg
push
subl
lds
ret
push
cs
enter
push
popa
bound
mov
or
push
insl
xchg
test
stos
sub
add
mov
cltd
mov
mov
pusha
mov
and
and
push
lods
xchg
nop
push
sub
xchg
mov
inc
stos
lods
into
pushf
and
xor
push
sarb
adc
jne
xchg
shrb
mov
mov
out
dec
and
cmp
fmul
lods
mov
int
mov
in
mov
das
dec
adc
dec
sti
sbb
push
xor
shll
lods
nop
push
mov
jbe
dec
insl
out
cmp
cmpsb
and
push
cltd
xchg
fwait
push
aam
ret
clc
or
addr16
dec
jbe
jbe
xor
jb
or
mov
cmpsl
icebp
mov
and
sahf
jecxz
inc
les
ret
cli
jecxz
mov
mov
mov
sub
fsub
push
repnz
xor
xchg
push
jnp
push
push
sti
adc
mov
xor
insl
sub
inc
mov
out
inc
pop
pop
into
or
cli
and
inc
push
cwtl
dec
sub
test
call
mov
pop
push
push
cmpsb
mov
shl
mov
shrb
rolb
inc
jg
mov
shll
pop
aaa
adc
add
insl
mov
cld
push
and
xchg
sub
mov
push
mov
mov
mov
cltd
jnp
cli
js
fildl
popf
mov
push
adc
mov
pop
andl
push
cwtl
push
add
mov
loope
pusha
jo
testb
add
testb
sbb
inc
inc
mov
pop
mov
add
aam
lods
mov
xor
inc
call
xor
mov
inc
imul
outsl
call
ja
pop
sbb
jno
push
dec
cld
mov
fistps
lods
out
sbb
ja
or
fwait
pop
or
enter
cwtl
cmp
pop
pop
pop
dec
add
push
lea
rcll
popf
subl
xor
out
inc
inc
sub
mov
mov
cmp
adc
push
inc
mov
adc
xor
cltd
push
scas
jb
sbb
jno
sub
lods
inc
pop
cmp
aaa
pop
dec
outsl
xchg
xchg
dec
aam
add
cmc
into
xchg
inc
in
jno
out
mov
xchg
dec
pop
dec
daa
cli
orl
xchg
faddl
xchg
pop
sub
and
stc
mov
add
inc
fistps
sub
faddl
mov
cwtl
in
sbb
push
pushf
pop
dec
cmpsb
pop
mov
add
addr16
mov
xlat
mov
out
pop
sbb
gs
inc
clc
les
add
arpl
arpl
and
push
jno
and
mov
pop
aam
mov
xchg
aam
or
data16
pop
cmc
sti
sub
popf
nop
cs
sti
addr16
or
sbb
outsb
outsl
int
ret
divl
fiadds
sub
xchg
cmp
xor
dec
dec
rorb
adc
js
pushf
gs
push
push
inc
mov
ja
mov
mov
jo
lds
ja
push
cmc
push
mov
loope
bound
jge
stos
xor
xorb
and
or
inc
sub
push
adc
inc
shrd
ds
fucomp
mov
mov
jno
xor
cmp
jb
inc
daa
adc
imul
sbb
jg
nop
add
rcll
lock
add
cwtl
addr16
sub
movsb
int3
mov
sbb
les
hlt
lods
out
shll
xor
mov
addl
sti
sub
fistl
dec
pop
mov
xor
data16
in
mov
pop
mov
stos
je
call
stos
dec
mov
add
fildll
add
outsb
xchg
imul
add
and
adc
in
add
push
call
pop
leave
ret
movl
cmp
movl
jae
movl
cmp
jmp
ret
icebp
imul
scas
sbb
out
mov
aad
adc
rcr
push
shlb
daa
mov
xor
lahf
mov
push
pop
mov
andl
jmp
jnp
mov
scas
pop
cmp
jnp
pop
xorl
mov
popf
ja
ja
or
mov
dec
imul
cmp
test
or
xchg
lcall
cmp
sahf
mov
sarl
pop
add
dec
and
add
or
or
or
xchg
lahf
in
xor
lahf
repnz
pop
repnz
in
nop
dec
dec
adc
adc
aam
mov
cmp
in
and
jae
xor
sbb
incl
jle
fldl
cld
sahf
jl
fwait
add
mov
pop
adc
mov
or
cmp
jg
push
xchg
mov
es
mov
sahf
pop
call
std
sbb
imull
in
movsl
push
adc
push
mov
xchg
arpl
jp
fcmovu
daa
std
xlat
stos
pop
in
mov
ja
xor
cmpsl
neg
test
insl
lret
dec
mov
sub
add
inc
test
add
dec
jo
add
and
les
jl
push
cmc
or
pop
or
mov
outsl
adc
add
stc
or
add
xchg
sbb
push
std
pop
loop
xchg
icebp
scas
das
mov
test
scas
jbe
loop
adc
push
jmp
in
jo
sbb
mov
inc
cli
idiv
nop
adc
mov
inc
jmp
xorb
and
cmp
out
enter
ss
aas
xchg
inc
ja
fadds
sub
or
xchg
adc
mov
rolb
out
ss
xchg
mov
xchg
out
mov
dec
or
jno
int
int
loope
mov
xchg
pop
shll
cmc
jmp
or
out
imul
mov
jbe
dec
or
mov
fistps
jne
repnz
xlat
mov
mov
xchg
dec
leave
sub
pop
mov
push
bound
mov
cmp
es
sti
sti
repnz
mov
and
imul
cmp
mov
push
push
cwtl
dec
jo
dec
push
out
xor
cmp
leave
into
push
ss
or
mov
mov
dec
mov
jb
in
mov
adcb
imul
cmpsl
or
mov
lock
inc
mov
test
lret
mov
push
bound
xlat
jmp
mov
jge
xchg
pop
pop
lret
push
push
je
sbbl
jl
lods
ljmp
add
xor
push
dec
dec
cs
fildll
pushf
jo
sub
push
or
add
cli
movsl
lahf
cmp
jnp
fsubl
sub
iret
outsl
mov
lea
mov
in
sbb
in
and
xchg
xchg
divl
aam
out
cld
jle
or
int
dec
xchg
aam
xchg
pushf
dec
or
mov
or
stos
sub
adc
int3
fldt
cltd
pop
cmc
aam
pop
out
daa
enter
pop
pop
jns
push
fldenv
or
xor
push
adc
push
lods
pop
add
int3
pop
push
sub
pop
iret
or
dec
jmp
mov
lds
inc
fidivrl
add
mulb
in
and
jno
mov
cs
loopne
jae
sub
idivb
jle
adc
mov
mov
pop
or
pop
push
xchg
hlt
xchg
in
xor
mov
jp
cmpsl
add
setns
ds
in
push
sub
jne
addr16
pop
jno
mov
lds
addb
cmp
es
fs
rolb
or
std
aam
addb
popf
dec
roll
orl
gs
addr16
outsl
aaa
lods
pop
mov
iret
nop
std
sub
insl
out
add
mov
jge
dec
sbb
loopne
in
push
jb
rcrb
std
mov
dec
comiss
mov
lods
and
jg
push
xchg
dec
pop
pop
inc
mov
in
jl
lcall
lret
push
cltd
aaa
rorl
pushf
mov
and
and
add
fcmovnb
icebp
push
sub
into
nop
or
test
cmpsb
nop
cmp
dec
xchg
enter
or
out
mov
push
push
pop
rol
dec
ja
xor
hlt
repnz
sbb
lret
cmp
sub
jl
mov
cmpl
or
fsts
rorb
mov
jl
mov
xchg
sbb
mov
pop
pop
mov
sbb
jo
dec
call
pop
loop
hlt
jo
adc
ret
inc
in
orb
jae
pop
movsl
fidivs
mov
insb
cmp
stos
ss
xchg
adc
pop
aas
inc
bound
in
mov
imul
je
mov
fidivs
out
push
in
adc
fs
push
fisubs
or
jae
adc
dec
or
test
and
pop
pop
fisubs
imul
or
fistps
outsb
cmp
jp
lcall
jb
divb
xchg
xchg
inc
int3
dec
inc
mov
push
push
into
int3
jmp
push
mov
jmp
pop
mov
mov
adc
or
pop
jns
adc
fldl
jb
aas
push
or
mov
dec
adc
push
fiaddl
xchg
sub
std
add
mov
inc
inc
or
rcrl
insb
das
mov
add
pop
in
scas
orl
sti
nop
adc
and
add
cmp
cmp
pushf
je
fcmove
jbe
mov
pop
sub
ret
sti
pop
int
sub
sub
out
pop
pop
inc
adc
xor
dec
adc
cmpsl
into
mov
jb
ljmp
pop
push
or
lods
sahf
repz
push
popf
test
mov
xchg
hlt
mov
inc
add
fstpt
pop
cltd
cwtl
inc
ja
pop
ljmp
mov
rcl
stos
addr16
and
scas
shlb
pop
sbb
in
jbe
in
mov
pop
mov
mov
ja
mov
int3
sbb
or
mov
dec
lahf
adc
into
push
xor
iret
pop
aam
mulb
inc
ss
pop
pop
or
cmpsb
ret
cwtl
insb
push
push
sbb
adc
shrl
subl
cli
into
cmpb
push
jb
ds
stos
push
popf
mov
rorl
push
mov
sbbl
add
sbbl
shrd
movl
shr
ret
mov
xor
orl
and
jmp
add
ss
ss
cs
mov
cmc
inc
dec
mov
adc
clc
adc
push
das
inc
sub
mov
addr16
loopne
pop
dec
inc
test
ljmp
imul
and
xchg
fcomi
arpl
mov
bound
pusha
push
add
xor
pop
mov
enter
out
and
iret
jge
fcomps
mov
fcmovne
dec
mov
out
lcall
adc
mov
sbb
mov
js
push
jg
fildl
jne
loope
push
pop
mov
xorb
mov
pop
and
aas
mov
stos
mov
sub
pop
das
clc
dec
loope
jae
cld
cmp
das
fdivrs
mov
les
mov
inc
mov
mov
push
sbb
jp
lret
cmpsl
imul
inc
push
jg
cmp
mov
sbb
inc
mov
push
in
mov
out
and
shlb
mov
xchg
pop
jb
adc
rorl
into
dec
jno
std
pop
dec
pusha
cmc
sub
sbb
pop
rclb
or
and
and
mov
shr
and
ret
test
scas
and
f2xm1
adc
outsb
xchg
and
sub
roll
xor
mov
inc
jle
sahf
loope
stc
je
dec
xchg
fcmovne
jne
cmpsb
sub
inc
pop
lcall
sbb
xor
lods
add
sub
insb
inc
scas
lods
sbb
inc
add
mov
mov
push
xlat
mov
dec
int
xor
jmp
imul
cmp
jmp
mov
jnp
mov
push
movsb
cmp
mov
mov
fs
add
arpl
sub
push
fwait
add
mov
test
or
push
test
sub
test
jmp
pushf
pushf
mov
mov
and
inc
scas
adc
hlt
int3
clc
dec
daa
aam
mov
jns
stos
fistl
add
mov
hlt
pop
das
in
addr16
or
mov
jnp
shll
daa
pop
lcall
mov
pop
mov
mov
jo
jp
push
es
mov
fisubrl
aad
mov
js
push
jecxz
popf
mov
loope
ljmp
nop
notl
outsl
clc
scas
lds
outsb
testb
lret
ja
fcmovb
push
dec
mov
sub
es
and
push
xchg
int3
mov
mov
in
or
popa
popa
sub
mov
scas
mov
aaa
jle
les
xchg
mov
xor
icebp
rorl
mov
roll
sub
cmpsb
loopne
or
mov
and
or
stos
imul
ret
fdivrl
push
sti
movsl
ja
lods
int3
out
ret
xchg
dec
ss
sbb
in
sbb
xchg
out
adc
mov
andb
jge
xchg
inc
outsl
mov
int
sub
add
mov
stc
repz
jl
and
loopne
sbb
jge
cmpsl
out
pop
leave
and
xchg
je
fiaddl
inc
sahf
ds
ja
or
jmp
cmp
push
mov
dec
sbbb
dec
out
mov
rolb
push
sub
outsw
sub
lea
hlt
jbe
fiaddl
mov
es
fildl
in
adc
lret
sub
sbb
icebp
mov
pop
insb
or
pop
sub
or
movsb
popf
mov
shlb
data16
mov
sbb
bound
xor
cmp
sbb
cmp
pop
mov
negb
jp
into
or
sub
or
lock
daa
dec
push
lea
push
dec
test
outsb
mov
sub
and
rcll
roll
sbb
in
adc
jno
push
xlat
out
ficomps
imul
and
push
push
mov
dec
adc
repz
cmp
adc
out
push
aaa
xlat
jmp
movsb
and
psubusb
test
jmp
js
dec
mov
cmpsb
sbb
or
jge
inc
aad
leave
dec
adc
bound
lods
outsl
jo
scas
pop
cmpsb
ret
push
mov
push
add
mov
aaa
xchg
hlt
mov
mov
aaa
scas
in
sbb
add
bound
jne
pop
cmp
xchg
mov
lahf
cmpsl
push
sahf
push
repnz
negb
mov
sub
add
jp
fwait
cmp
lds
sbb
mov
xor
outsl
cli
adc
roll
jle
mov
popa
aas
sub
ret
shlb
das
jp
lcall
and
daa
loop
xor
cld
jno
mov
inc
jle
mov
add
jle
jbe
mov
outsb
mov
dec
sub
in
cmp
pop
test
push
arpl
push
mov
cmp
mov
jmp
hlt
mov
adc
aad
in
and
rcll
add
jae
push
sub
mov
movsl
mov
sbb
outsl
lcall
fs
popf
cmp
fisubl
xlat
sti
mov
and
or
les
or
mov
and
adc
dec
mov
rcl
mov
mov
movsl
jle
pop
add
call
rol
push
mov
sub
cmpl
movl
movl
jmp
movl
jbe
pushl
pushl
call
adcl
subl
sbbl
add
xorl
incl
movl
xor
xor
add
mov
mov
movl
andl
mov
movb
cmpl
movl
movl
movl
movl
jmp
mov
mov
ja
push
pushl
push
call
incl
subl
xor
xorl
orl
orl
or
orl
or
movb
subl
movb
movzbl
mov
addl
sub
addl
imul
cmpl
mov
mov
jmp
mov
jne
pushl
pushl
push
pushl
pushl
pushl
call
movzbl
xor
sbb
orl
andl
subl
orl
movzbl
subl
push
adcl
and
mov
movb
orl
movb
andl
movb
sbbl
movb
andl
mov
mov
add
adcl
imul
mov
or
mov
subl
and
mov
movl
cmp
movl
ja
mov
and
mov
sub
mov
cmpl
not
mov
jmp
mov
ja
push
push
push
pushl
pushl
push
pushl
pushl
push
push
push
pushl
push
call
movzbl
and
sbb
xor
xor
or
adc
mov
sub
mov
not
mov
mov
movzwl
movl
movzwl
shr
andl
or
xorl
sub
andl
mov
movb
xorl
movb
mov
mov
xor
add
movzbl
cltd
push
pop
idiv
mov
movb
movb
mov
mov
add
movzbl
movzbl
cltd
idiv
mov
cmp
jae
movl
movl
mov
mov
push
push
push
push
call
xor
xor
or
or
mov
mov
mov
cmp
jne
mov
mov
mov
mov
shrd
shl
mov
mov
shr
xor
mov
xor
or
mov
mov
mov
shrd
xor
shr
mov
mov
xor
or
mov
shl
push
pop
mov
mov
mov
mov
mov
sub
movzwl
mov
movzwl
cltd
idiv
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
and
mov
imul
mov
sub
mov
add
mov
cmp
jbe
mov
mov
shrd
xor
mov
shr
mov
xor
shl
or
mov
pop
leave
ret
push
mov
sub
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
sub
mov
and
xor
imul
mov
push
sub
push
movl
movl
movl
movl
movl
mov
xor
add
mov
or
sub
mov
mov
and
or
mov
or
mov
mov
sub
mov
mov
mov
mov
mov
xor
or
xor
mov
imul
lea
mov
mov
imul
mov
mov
or
xor
div
mov
and
add
cmp
jb
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
or
lea
add
movl
movl
movl
movl
movl
movl
mov
mov
sub
add
mov
imul
mov
mov
xor
mov
xor
mov
mov
add
xor
sub
mov
mov
mov
mov
mov
sub
mov
imul
mov
or
sub
mov
xor
add
mov
xor
mov
sub
add
cmp
jbe
xor
inc
mov
mov
movl
movl
movl
movl
movl
movl
mov
mov
add
xor
xor
div
mov
xor
mov
mov
div
mov
xor
div
mov
sub
mov
and
imul
and
xor
cmp
je
push
movl
movl
movl
movl
movl
mov
mov
imul
xor
add
mov
and
sub
mov
mov
add
xor
mov
mov
and
sub
mov
mov
mov
mov
mov
xor
or
imul
or
mov
imul
xor
mov
div
add
mov
and
imul
and
xor
cmp
jne
pop
pop
pop
leave
ret
push
mov
sub
push
movl
movl
movl
mov
mov
add
xor
mov
lea
mov
add
mov
movl
movl
mov
mov
add
xor
div
mov
xor
push
sub
imul
xor
lea
mov
movl
movl
movl
mov
mov
shr
sub
mov
imul
div
xor
or
xor
mov
movl
movl
movl
mov
mov
or
sub
or
mov
lea
mov
movl
movl
mov
mov
add
imul
xor
and
mov
movl
movl
mov
mov
and
sub
add
mov
movl
movl
mov
add
pop
div
mov
sub
add
imul
mov
movl
movl
movl
movl
movl
movl
mov
mov
mov
sub
mov
sbb
mov
mov
add
mov
adc
mov
or
or
add
mov
adc
mov
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
or
mov
sub
mov
imul
mov
sub
imul
xor
add
xor
push
mov
add
imul
mov
div
mov
lea
push
mov
mov
mov
mov
push
push
push
push
call
mov
mov
xor
sub
and
xor
mov
mov
lea
push
mov
push
pop
xor
div
mov
sub
add
and
lea
call
mov
mov
imul
mov
sub
add
mov
xor
sub
cmp
jne
mov
mov
sub
mov
sub
add
xor
xor
lea
mov
push
mov
and
xor
imul
mov
div
push
mov
add
push
mov
mov
imul
and
mov
imul
mov
xor
pushl
call
mov
mov
lea
mov
incl
mov
mov
xor
shld
shl
mov
mov
xor
xor
cmp
jne
cmp
jne
mov
mov
jmp
lea
mov
mov
mov
mov
mov
sub
mov
mov
mov
sub
mov
movl
movl
mov
mov
mov
mov
pushl
pushl
pushl
pushl
pushl
push
push
pushl
mov
call
mov
mov
pushl
call
mov
push
add
push
push
call
mov
jmp
mov
mov
pop
leave
ret
push
mov
sub
push
movl
movl
movl
push
movl
mov
mov
push
push
push
call
mov
mov
or
or
add
adc
push
push
push
push
call
mov
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
imul
mov
mov
xor
mov
mov
xor
mov
mov
and
xor
mov
sub
mov
sub
mov
imul
sub
mov
movl
movl
mov
mov
or
mov
imul
mov
movl
movl
movl
mov
mov
or
xor
div
mov
mov
sub
mov
xor
div
mov
xor
pop
mov
movl
movl
movl
mov
mov
sub
mov
div
mov
or
mov
sub
mov
mov
movl
movl
mov
mov
xor
lea
xor
leave
ret
push
mov
sub
push
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
add
adc
and
and
sub
mov
sbb
mov
add
adc
or
mov
mov
mov
or
add
cltd
adc
cmp
jne
cmp
je
mov
mov
mov
mov
add
adc
or
or
add
adc
xor
xor
mov
sub
mov
sbb
mov
mov
mov
xor
cmp
jne
cmp
jne
mov
add
imul
xor
mov
div
mov
xor
push
push
xor
add
xor
mov
mov
sub
mov
and
div
mov
mov
and
sub
imul
add
xor
and
mov
add
mov
add
mov
xor
or
xor
add
mov
add
mov
mov
mov
mov
xor
xor
add
adc
push
push
call
push
push
push
push
call
mov
add
adc
xor
cmp
jne
cmp
jne
mov
mov
imul
mov
or
sub
mov
lea
mov
pop
leave
ret
push
mov
sub
push
push
push
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
push
add
push
adc
push
push
call
mov
mov
sub
mov
sbb
mov
push
push
push
push
call
add
adc
shld
shl
mov
mov
mov
mov
mov
mov
push
add
push
adc
push
push
call
mov
mov
sub
mov
sbb
mov
push
push
push
push
call
add
adc
shr
xor
or
or
xor
mov
push
xor
mov
mov
mov
push
push
push
call
mov
mov
mov
add
mov
adc
mov
and
and
add
mov
adc
add
mov
adc
push
mov
mov
mov
push
push
push
call
push
mov
push
push
push
call
mov
mov
mov
or
mov
mov
shl
or
mov
xor
xor
call
add
mov
mov
push
push
adc
push
push
xor
xor
call
push
push
push
push
call
mov
mov
mov
or
mov
or
or
or
xor
xor
add
adc
xor
xor
shrd
or
mov
shr
or
mov
mov
mov
mov
mov
or
or
xor
mov
xor
mov
push
push
push
push
call
push
push
push
push
call
mov
mov
mov
add
mov
adc
add
pop
adc
pop
mov
mov
pop
leave
ret
push
mov
sub
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
mov
and
and
or
mov
sub
mov
mov
sub
add
add
mov
xor
cmp
jne
mov
mov
xor
div
push
push
push
xor
mov
mov
mov
mov
mov
imul
mov
div
mov
sub
xor
shl
imul
sub
xor
mov
mov
add
mov
add
mov
mov
mov
xor
and
mov
imul
mov
sub
or
mov
pop
xor
pop
pop
cmp
je
mov
jmp
mov
mov
sub
or
imul
add
jmp
movl
movl
movl
mov
mov
add
imul
mov
or
xor
mov
div
xor
leave
ret
push
mov
and
sub
push
push
lea
mov
mov
mov
mov
sub
sbb
mov
orl
orl
lea
push
lea
push
call
mov
mov
pushl
mov
pushl
mov
pushl
pushl
pushl
pushl
pushl
call
pop
pop
mov
pop
ret
push
mov
sub
push
push
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
xor
mov
div
mov
mov
mov
xor
mov
xor
mov
mov
or
lea
mov
xor
mov
and
xor
mov
div
mov
xor
sub
mov
sub
add
mov
mov
and
xor
div
mov
mov
imul
sub
add
cmp
ja
push
movl
movl
movl
mov
mov
add
xor
div
mov
mov
imul
imul
lea
mov
mov
mov
mov
mov
mov
mov
mov
xor
imul
lea
mov
mov
or
lea
mov
xor
mov
and
xor
mov
div
mov
mov
sub
mov
sub
add
mov
mov
and
xor
div
mov
imul
sub
add
cmp
jbe
pop
pop
pop
leave
ret
push
mov
sub
push
orl
push
add
push
xorl
mov
dec
mov
shrd
cmpl
mov
movl
jmp
movl
jg
push
push
pushl
pushl
call
or
xor
or
mov
sub
xor
adc
sub
xor
xor
adcl
neg
shr
xor
mov
not
mov
cmpl
mov
mov
mov
mov
jmp
mov
mov
ja
push
push
push
pushl
push
call
addl
movzbl
sbb
sub
xor
xor
mov
xor
or
mov
notl
mov
shl
subl
mov
xorl
shrd
add
xor
movl
shr
adc
mov
mov
xor
mov
sbb
or
mov
or
mov
sbb
mov
mov
mov
mov
add
mov
cmpl
movzwl
movl
jmp
mov
notl
jae
call
adc
sub
and
xor
sub
adc
movl
mov
mov
add
mov
addl
mov
cmpl
movl
mov
movl
jmp
movl
jne
push
call
neg
xorl
or
xor
xor
or
or
add
incl
inc
mov
add
shl
xor
shld
movzwl
or
mov
shl
mov
xor
xor
movl
movl
movl
movl
cmp
jne
cmp
movl
je
mov
and
mov
mov
cmpl
mov
mov
not
jmp
movl
je
pushl
call
adc
or
incl
subl
sub
mov
movl
xor
shld
orl
shl
sbbl
xor
decl
xor
movl
cmp
jne
cmp
movl
je
mov
mov
sub
and
mov
mov
add
mov
addl
shl
mov
addl
xor
andl
shr
addl
or
mov
cmpl
mov
movl
movl
jmp
not
jl
push
pushl
call
add
and
or
adc
and
adc
adc
sub
mov
orl
mov
adc
mov
xor
add
mov
add
mov
sub
mov
orl
push
adc
pop
orl
sub
mov
add
notl
mov
cmpl
mov
mov
movl
movl
jmp
movl
jb
push
push
push
pushl
pushl
call
orl
or
mov
adc
dec
sub
sbbl
lea
cmpl
mov
mov
mov
jmp
movl
je
pushl
push
pushl
pushl
pushl
call
movzwl
and
xor
adc
neg
subl
xor
mov
movzwl
add
mov
mov
orl
xor
adcl
shr
addl
shl
or
mov
adc
movl
cmpl
mov
movl
not
mov
jmp
not
movzbl
je
push
call
sbb
xor
or
add
and
mov
mov
movl
xor
shr
addl
shl
andl
or
push
lea
push
lea
xorl
push
adcl
call
cmpl
movl
mov
mov
jmp
mov
movl
jge
pushl
push
push
push
pushl
push
call
sub
adcl
movzwl
adc
or
movzbl
sub
mov
mov
xor
or
sub
and
mov
add
mov
xor
cmpl
mov
mov
mov
jmp
movl
jbe
pushl
call
adc
mov
mov
or
adc
and
adc
orl
notl
shr
cmpl
mov
movl
movl
jmp
movl
movl
je
pushl
pushl
pushl
call
subl
or
sub
neg
notl
adc
shl
cmpl
movl
movl
mov
jmp
notl
mov
ja
push
pushl
pushl
call
movzwl
sbb
xor
and
sub
sbbl
adc
or
push
lea
adcl
push
or
mov
mov
or
shrd
xorl
shr
sbb
mov
mov
adcl
xor
adcl
xor
xorl
or
subl
lea
adcl
push
shl
orl
call
dec
mov
and
mov
xorl
xor
mov
sbb
mov
shl
shr
movzwl
sbb
or
or
push
lea
xor
xor
sub
push
add
mov
neg
mov
and
shrd
cmpl
movl
not
mov
jmp
movl
movzbl
jge
push
push
pushl
push
pushl
pushl
call
mov
mov
or
sub
movl
movzbl
sbb
mov
or
mov
xorl
xor
xor
sbb
shr
mov
or
mov
xor
andl
shl
sbbl
xor
addl
or
xorl
lea
push
call
inc
mov
adc
mov
movzwl
or
xor
xor
shl
shr
cmpl
movl
movl
jmp
mov
mov
jg
pushl
pushl
push
pushl
pushl
pushl
call
movzwl
xor
inc
or
inc
mov
xor
add
sub
or
or
push
lea
push
mov
mov
shrd
shr
mov
mov
xor
xor
or
shl
mov
mov
shrd
shr
mov
mov
xor
xor
or
add
lea
push
shl
call
mov
mov
shl
xor
shr
or
push
lea
push
mov
mov
shrd
shr
mov
mov
xor
shl
mov
xor
or
mov
shrd
shr
mov
mov
xor
xor
or
add
mov
shl
mov
shrd
shr
mov
mov
xor
xor
or
add
lea
push
shl
call
mov
mov
xor
shr
shl
or
mov
lea
push
mov
mov
shrd
shr
mov
mov
xor
xor
or
push
mov
mov
push
pushl
shl
call
lea
push
mov
mov
shrd
shr
mov
mov
xor
xor
or
push
mov
push
pushl
shl
call
mov
mov
mov
mov
mov
mov
mov
rol
mov
xor
mov
cmp
je
movl
mov
movl
mov
mov
mov
mov
mov
mov
add
mov
mov
xor
shld
shl
xor
mov
xor
inc
xor
mov
mov
mov
movzwl
mov
cltd
idiv
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
imul
mov
and
mov
and
mov
imul
mov
sub
mov
cmp
ja
mov
mov
mov
shrd
shr
mov
xor
shl
mov
xor
or
mov
xor
xor
shrd
shr
mov
mov
mov
mov
xor
shl
or
mov
xor
or
xor
cmp
ja
jae
mov
mov
movb
movb
movb
movb
mov
movzbl
mov
xor
mov
imul
movzbl
xor
and
add
mov
movb
movb
mov
mov
and
or
imul
mov
cmp
ja
movb
movb
movb
mov
mov
and
or
add
mov
movzbl
cltd
movzbl
idiv
mov
movb
movb
movb
mov
mov
xor
sub
mov
movzbl
movzbl
cltd
idiv
mov
cmp
jb
mov
mov
shrd
shr
mov
mov
xor
xor
or
sub
shl
mov
mov
shrd
shr
mov
mov
xor
xor
shl
mov
or
ror
jmp
mov
mov
mov
mov
mov
shrd
shr
mov
mov
xor
xor
or
shl
add
mov
mov
xor
xor
shrd
shr
mov
mov
mov
mov
xor
shl
or
mov
xor
or
xor
cmp
jb
ja
cmp
jb
mov
decl
jne
mov
mov
shrd
shr
mov
mov
xor
xor
or
push
add
push
lea
push
shl
call
mov
mov
shrd
shr
mov
mov
xor
xor
or
add
push
push
mov
shl
mov
shrd
shr
mov
mov
xor
xor
or
add
push
shl
call
push
lea
push
mov
mov
shrd
shr
mov
mov
xor
xor
or
add
push
shl
call
mov
mov
shrd
shr
mov
mov
pop
xor
xor
pop
shl
or
pop
leave
ret
mov
mov
andl
or
mov
movl
jne
cmpl
movl
movl
jmp
movl
not
jl
pushl
call
and
adcl
subl
andl
movl
subl
mov
mul
ret
push
mul
mov
mov
mull
add
mov
mul
add
pop
ret
push
mov
sub
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
xor
sub
and
sub
push
movl
movl
movl
movl
mov
mov
imul
mov
imul
xor
div
mov
mov
push
shr
and
xor
mov
sub
mov
mov
mov
and
imul
mov
imul
add
mov
sub
mov
mov
add
xor
pop
div
mov
push
and
sub
xor
add
mov
mov
and
imul
mov
imul
or
xor
pop
sub
mov
mov
or
mov
or
mov
add
or
mov
or
lea
cmp
jbe
pop
leave
ret
push
mov
and
sub
push
push
push
mov
push
call
pushl
call
test
jg
movl
movl
movl
mov
adc
mov
sbbl
imul
orl
or
and
mov
xor
mov
movl
movl
mov
or
mov
subl
mov
push
subl
add
movl
push
movl
adc
orl
push
push
andl
call
add
mov
adc
mov
movl
or
movl
cmpl
mov
mov
jmp
mov
movl
jle
push
call
adc
movzwl
sub
adc
subl
adc
mov
mov
sub
mov
and
and
movl
xor
movl
cmpl
notl
movl
movl
jmp
movl
jae
pushl
pushl
push
push
call
movzwl
adc
mov
sub
andl
xor
xor
and
cmpl
mov
movl
jmp
mov
mov
jbe
push
pushl
call
addl
xorl
adc
sbb
add
add
movl
movl
and
mov
cmpl
mov
mov
movzwl
jmp
mov
mov
jne
pushl
push
call
sub
mov
adc
mov
adc
xor
add
xor
mov
xor
mov
mov
mov
movl
and
cmpl
movl
mov
movl
movl
jmp
movl
movl
ja
push
call
subl
sub
andl
adc
sub
xor
or
sbb
cmpl
movl
movl
movl
jmp
movl
jne
pushl
push
call
mov
add
neg
sbbl
or
subl
sbb
cmpl
mov
mov
mov
jmp
movl
je
pushl
call
adc
add
inc
or
and
add
mov
and
mov
movl
or
andl
or
add
adc
and
and
subl
xor
mov
orl
xor
movl
cmp
movl
ja
movl
jb
cmp
ja
cmpl
mov
mov
jmp
movl
ja
push
push
call
xor
sub
subl
xor
or
sub
add
movl
or
movl
movl
add
movl
cmpl
movl
mov
mov
jmp
notl
movl
jg
pushl
push
push
call
not
sbb
or
or
xorl
add
movzwl
sbb
mov
xor
or
mov
sub
or
movl
cmpl
movl
mov
jmp
mov
movl
jne
push
push
pushl
push
push
call
xor
movzbl
or
xorl
mov
add
or
and
adc
movl
movl
sbb
mov
mov
subl
sub
incl
and
and
or
mov
sub
adc
pushl
cmpl
movl
mov
movl
jmp
movl
not
jl
pushl
push
call
sbb
xor
sbb
or
adc
mov
and
mov
cmpl
mov
not
movzbl
jmp
movl
jae
pushl
call
xor
sbbl
mov
mov
sbb
or
mov
xorl
lea
sub
push
pop
subl
xor
div
add
mov
sub
xor
pushl
mov
movzwl
or
pushl
cmpl
mov
mov
movzbl
jmp
movl
mov
je
pushl
pushl
push
call
xor
or
add
xor
adcl
xor
or
addl
adcl
mov
sbbl
pushl
and
or
pushl
mov
addl
pushl
addl
xor
xor
pushl
adc
mov
sub
pushl
orl
call
movl
add
movl
mov
or
movl
xor
movl
mov
mov
or
mov
mov
subl
sub
xor
mov
and
mov
orl
xor
shr
imul
pushl
call
xorl
dec
cmp
jne
cmpl
movl
mov
mov
jmp
mov
jl
push
call
movzwl
sbb
movl
xor
xor
and
xor
add
add
xor
adc
neg
movl
cmpl
movzwl
movl
jmp
movl
movl
jbe
call
negl
xor
add
xor
neg
xor
adcl
cmpl
mov
mov
mov
jmp
movl
movl
jae
push
call
xorl
xor
adc
add
and
movl
adc
or
mov
movl
mov
andl
movl
mov
sbbl
call
cmpl
movl
not
movl
jmp
not
not
ja
pushl
push
push
push
call
mov
mov
sub
and
neg
adc
sub
or
add
sbb
lea
cmpl
not
mov
jmp
mov
jae
push
pushl
call
adc
mov
mov
sbb
andl
adc
adc
adc
mov
addl
lea
cmpl
mov
movl
mov
jmp
mov
movl
jge
push
pushl
push
pushl
push
call
xor
and
movzbl
and
mov
and
addl
mov
mov
sbb
mov
and
mov
sbb
mov
and
xor
cmpl
mov
movl
jmp
movl
jge
pushl
push
push
push
pushl
call
orl
addl
xor
add
xor
xor
sub
add
mov
mov
sub
or
sub
xor
cmpl
movzbl
movl
movl
mov
jmp
movl
movl
jne
push
push
push
call
or
sub
xorl
xor
or
mov
mov
or
sub
shl
cmpl
movl
movl
mov
jmp
mov
movl
jg
pushl
pushl
call
mov
xor
xor
sub
imul
mov
mov
sub
and
sub
add
not
shr
dec
or
mov
xorl
mov
sub
mov
mov
xor
add
or
mov
mov
mov
sub
shrd
shr
cmpl
mov
mov
jmp
movl
jg
push
call
adc
xor
add
adc
adc
or
adc
xor
and
mov
mov
xor
xor
or
mov
push
pushl
lea
push
shl
call
lea
push
mov
mov
lea
push
mov
lea
mov
mov
mov
push
call
push
push
pushl
call
mov
mov
mov
mov
shr
shl
or
mov
xor
mov
lea
mov
lea
mov
mov
sub
lea
xor
movl
movl
movl
movl
mov
mov
add
mov
mov
adc
xor
xor
and
mov
and
mov
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
push
push
or
or
push
push
call
mov
mov
sub
mov
sbb
mov
cmp
jne
cmp
je
movl
movl
movl
movl
mov
mov
mov
mov
add
adc
xor
xor
and
mov
and
mov
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
push
push
xor
xor
push
push
call
mov
mov
push
push
push
push
call
mov
mov
push
push
push
push
call
mov
mov
add
mov
adc
mov
cmp
jne
cmp
je
mov
mov
xor
shld
shl
mov
mov
mov
xor
xor
mov
cmp
jne
cmp
je
mov
cmp
je
mov
mov
xor
xor
shrd
shr
mov
mov
mov
shl
xor
or
xor
mov
mov
or
cltd
cmp
jne
cmp
jne
movl
movl
mov
mov
mov
xor
shld
shl
mov
mov
xor
xor
mov
cmp
jne
cmp
jne
movl
mov
mov
shrd
shr
mov
mov
mov
mov
mov
shl
mov
xor
xor
or
cmp
jne
mov
mov
mov
mov
mov
mov
movzwl
mov
and
mov
or
mov
add
or
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
or
mov
or
mov
sub
mov
sub
mov
cmp
jbe
mov
mov
mov
mov
movzwl
mov
or
mov
sub
mov
or
imul
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
sub
mov
xor
mov
imul
mov
and
mov
and
mov
cmp
ja
mov
mov
shrd
xor
mov
shr
mov
xor
or
push
push
shl
push
lea
push
lea
push
call
pushl
pushl
pushl
pushl
call
mov
mov
mov
mov
shrd
shr
shl
xor
mov
xor
or
mov
mov
mov
mov
shrd
xor
mov
shl
shr
mov
xor
or
mov
mov
mov
mov
mov
cmp
jne
mov
mov
mov
cmp
jne
movb
movb
movb
movb
mov
mov
or
sub
mov
sub
movzbl
movzbl
cltd
idiv
movzbl
or
mov
movb
movb
movb
movb
movb
mov
mov
or
and
mov
imul
mov
movzbl
movzbl
and
mov
movzbl
cltd
idiv
mov
cmp
je
lea
push
lea
call
cmp
jne
cmp
jne
xor
jmp
xor
inc
jmp
mov
mov
mov
mov
add
adc
mov
mov
jmp
mov
push
push
lea
push
call
mov
push
pushl
lea
push
call
mov
mov
mov
mov
mov
mov
mov
lea
mov
add
movl
movl
mov
and
add
and
sub
and
mov
movl
mov
mov
or
add
cmp
je
mov
mov
mov
xor
shld
shl
xor
xor
cmp
jne
cmp
je
mov
mov
mov
mov
xor
shr
shl
or
xor
shld
shl
xor
xor
cmp
jne
cmp
je
mov
cltd
mov
mov
cltd
shld
shr
xor
shl
or
or
mov
mov
xor
xor
mov
cmp
jne
cmp
je
pushl
pushl
mov
mov
pushl
mov
call
mov
mov
mov
mov
push
add
push
lea
push
call
mov
mov
pop
pop
pop
mov
pop
ret
push
mov
sub
adc
push
push
sbb
push
movzbl
sbb
movl
movl
or
movl
movl
neg
mov
mov
mov
mov
xor
and
subl
mov
cmpl
mov
mov
jmp
movl
movl
jb
pushl
call
and
adcl
mov
and
add
dec
xor
and
subl
add
mov
xor
xor
movzwl
xor
mov
orl
movl
neg
movl
adcl
mov
xor
cmpl
movl
movl
mov
jmp
movl
mov
jne
push
pushl
push
push
call
sub
add
sub
mov
mov
or
mov
mov
sub
sub
cmpl
mov
movl
movzwl
mov
jmp
movl
movl
jge
pushl
push
push
call
add
inc
movzwl
and
adc
and
sub
subl
mov
add
imul
not
xor
or
mov
div
adc
sub
mov
mov
sub
and
mov
or
movl
movl
mov
mov
and
movl
movl
add
movl
sub
movl
movl
mov
mov
imul
add
or
and
sub
sbbl
mov
sub
andl
mov
sub
mov
sub
andl
add
sub
mov
andl
xor
subl
div
mov
adcl
sub
mov
add
movzwl
sub
mov
sub
movl
xor
movl
mov
mov
sub
and
movl
add
mov
xor
cmpl
mov
mov
mov
jmp
mov
je
push
call
and
or
sbbl
mov
adc
addl
movl
adc
add
mov
xor
div
cmpl
mov
movl
mov
mov
jmp
movl
movl
jb
push
call
or
mov
sub
xor
or
adc
andl
dec
sbb
and
cmpl
movl
mov
jmp
movl
movl
jl
pushl
push
pushl
push
push
push
pushl
call
sbbl
sub
sbbl
mov
sub
mov
and
mov
or
and
sub
sub
mov
movl
and
movl
mov
mov
xor
movl
sub
movl
mov
cmpl
mov
movl
movzbl
jmp
movl
ja
pushl
push
pushl
call
mov
sub
movzbl
add
mov
orl
xor
mov
xor
mov
and
mov
xor
adc
xor
adc
push
xor
pop
movl
div
cmpl
mov
mov
movl
jmp
movl
movl
je
push
push
push
pushl
call
inc
inc
xor
sbbl
mov
xorl
xor
orl
div
movl
mov
movl
or
sub
sub
cmpl
mov
mov
movl
movl
jmp
movl
movl
jb
push
pushl
push
pushl
pushl
pushl
push
push
call
negl
xor
mov
and
mov
adcl
mov
adcl
movl
mov
cmpl
movl
movl
movl
jmp
movl
mov
jle
push
push
push
call
andl
addl
andl
sbbl
sbb
sbb
mov
andl
xor
orl
div
andl
imul
cmpl
mov
movl
mov
jmp
movl
mov
jg
pushl
push
call
or
and
adc
or
neg
xor
orl
xor
sbb
imul
add
xor
mov
sub
mov
mov
subl
movl
movl
subl
movl
sbb
mov
cmpl
movl
mov
jmp
movl
jge
pushl
call
adc
subl
xor
xor
mov
sbb
adcl
or
cmpl
mov
movl
movl
jmp
notl
movl
jg
pushl
push
pushl
call
orl
sub
sbb
xor
xor
adc
andl
add
orl
or
and
or
mov
addl
xor
sbbl
div
sub
mov
sbbl
imul
or
add
xor
mov
incl
sub
cmpl
movl
movl
movl
movl
jmp
movl
je
push
pushl
call
addl
movl
subl
or
xor
andl
mov
cmpl
mov
mov
mov
movl
jmp
mov
mov
je
pushl
pushl
pushl
push
pushl
call
xor
add
sbb
or
adcl
mov
mov
adc
sub
xor
movl
mov
and
and
cmpl
movl
mov
jmp
mov
movl
jge
push
push
pushl
push
pushl
push
call
orl
xor
xor
adc
mov
xor
add
xor
mov
not
movzwl
sbb
sbb
add
cmpl
movl
notl
mov
notl
jmp
movl
jb
push
pushl
push
push
push
call
adc
movzwl
sub
adc
add
adc
andl
mov
sbb
or
xor
cmpl
mov
mov
jmp
movl
je
pushl
call
movzbl
or
mov
andl
mov
adc
addl
mov
sub
mov
movzbl
adc
adcl
sub
mov
mov
xor
add
sub
imul
movl
cmpl
mov
movl
jmp
notl
movl
ja
push
call
sbbl
mov
sbb
sub
sub
add
xorl
movl
xorl
movl
neg
mov
adc
and
mov
adc
add
adcl
add
add
or
cmpl
not
movl
jmp
mov
mov
jl
push
push
call
mov
adc
movzbl
adc
sub
notl
sbb
add
or
xorl
sub
mov
movl
xor
movl
adc
movl
cmpl
mov
mov
jmp
mov
mov
jg
pushl
push
pushl
call
andl
orl
not
add
add
mov
shr
sub
xor
xor
mov
lea
movl
push
orl
call
mov
cmpl
not
mov
jmp
movl
movl
jbe
push
push
push
push
call
or
neg
add
sub
xorl
xor
add
cmpl
mov
mov
mov
jmp
not
jl
push
pushl
push
call
mov
xor
xor
or
xor
xor
sub
or
or
xor
or
mov
sub
and
or
mov
mov
sbb
or
xor
add
sbb
and
lea
mov
mov
mov
sub
or
movl
sbb
movl
cmpl
movl
mov
mov
jmp
mov
movzbl
ja
push
push
pushl
push
call
mov
mov
sub
imul
mov
mov
and
sbb
subl
xor
movl
movl
movzbl
adc
mov
movl
movl
movzwl
sub
movl
movl
subl
mov
add
mov
and
dec
sub
mov
sub
lea
mov
orl
mov
mov
sub
mov
imul
sbb
and
cmpl
mov
not
movl
movl
jmp
movl
movl
ja
pushl
push
push
call
add
orl
adcl
negl
andl
subl
movzwl
and
not
imul
cmpl
mov
not
jmp
movl
jl
pushl
pushl
call
adc
add
adcl
sbb
subl
mov
or
mov
lea
mov
cmpl
movl
mov
movl
jmp
mov
jbe
push
call
sbbl
and
movzwl
adc
sub
mov
mov
sbb
xor
or
and
mov
cmpl
mov
movl
not
jmp
movl
mov
jge
pushl
push
push
push
pushl
push
call
add
orl
sbb
add
neg
addl
sub
movl
adc
movl
movl
cmpl
mov
mov
mov
movl
jmp
movl
jg
pushl
push
push
call
sbb
xor
sbb
mov
sub
mov
sbb
adc
movl
cmpl
mov
movl
mov
jmp
mov
ja
pushl
push
call
mov
mov
sub
or
inc
add
sbb
or
and
add
mov
mov
mov
xor
xor
xorl
mov
addl
call
adcl
mov
orl
mov
orl
mov
cmpl
movl
mov
mov
jmp
movzwl
mov
jl
pushl
push
pushl
pushl
push
call
add
movzbl
adc
mov
xor
add
add
mov
sub
add
mov
xor
xor
mov
call
or
or
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
mov
mov
mov
mov
call
mov
or
mov
or
push
push
push
push
call
mov
cmp
jne
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
mov
mov
call
or
mov
or
push
push
push
push
call
mov
jmp
jmp
lea
mov
mov
movl
mov
xor
shr
mov
xor
shl
or
mov
mov
mov
mov
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
mov
mov
mov
mov
call
mov
or
mov
or
push
push
push
push
call
mov
cmp
je
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
imul
add
mov
mov
mov
jmp
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
mov
mov
call
or
mov
or
push
push
push
push
call
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
xor
mov
sub
mov
xor
xor
add
mov
movl
movl
movl
movl
movl
movl
movl
movl
mov
add
mov
sub
xor
push
pop
div
mov
xor
add
mov
xor
mov
xor
div
or
mov
xor
mov
sub
mov
mov
sub
mov
xor
mov
div
mov
xor
div
mov
sub
mov
mov
add
lea
mov
movl
movl
movl
movl
movl
movl
movl
mov
or
mov
xor
div
mov
xor
div
mov
lea
mov
mov
sub
mov
xor
mov
div
mov
imul
add
xor
mov
add
mov
and
xor
mov
mov
add
add
mov
movl
movl
movl
movl
movl
movl
movl
mov
mov
imul
imul
mov
imul
mov
sub
add
mov
and
mov
sub
imul
mov
mov
or
sub
xor
mov
div
xor
mov
mov
add
add
mov
andl
jmp
mov
inc
mov
mov
mov
cmp
je
mov
mov
mov
add
mov
mov
mov
mov
mov
movl
movl
movl
movl
lea
mov
mov
movzwl
xor
movzwl
sar
mov
movzwl
xor
movzwl
shl
or
movzwl
mov
mov
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
movzbl
push
lea
push
call
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
add
mov
mov
cmp
je
mov
mov
movzwl
xor
movzwl
sar
mov
mov
movzwl
xor
movzwl
shl
or
movzwl
mov
mov
mov
movzwl
xor
movzwl
sar
mov
mov
movzwl
xor
movzwl
shl
or
mov
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
mov
or
je
lea
mov
mov
xor
mov
call
mov
mov
mov
xor
mov
call
or
or
xor
xor
mov
mov
mov
mov
movsbl
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
movsbl
cmp
je
mov
movsbl
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
movsbl
cmp
je
jmp
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
movsbl
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
movsbl
cmp
jne
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
add
mov
jmp
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
mov
cmpl
je
mov
mov
movzwl
mov
mov
mov
jmp
jmp
cmpl
jne
xor
jmp
mov
add
mov
movl
cmpl
je
cmpl
je
mov
shl
mov
movl
sub
mov
movl
mov
cmp
je
mov
mov
mov
mov
mov
mov
mov
inc
mov
jmp
movl
push
jmp
mov
mov
ret
not
push
push
cmpl
mov
movl
movl
movl
jmp
mov
mov
jge
push
pushl
pushl
push
push
pushl
call
xor
add
subl
adcl
add
sbb
mov
sbb
mov
xorl
or
movl
jne
xor
xor
mov
sub
or
mov
mov
cmpl
movl
mov
movl
jmp
movl
je
push
push
pushl
push
pushl
push
push
push
push
pushl
push
push
push
call
or
decl
andl
adc
sbbl
xor
div
mov
mov
div
mov
jmp
mov
mov
mov
mov
shr
rcr
shr
rcr
or
jne
div
mov
mull
mov
mov
mul
add
jb
cmp
ja
jb
cmp
jbe
dec
xor
mov
pop
pop
ret
andl
subl
cmpl
movl
je
and
add
mov
mov
mov
pop
pop
pop
leave
ret
movl
cmp
jae
cmp
movl
jae
shld
notl
shl
ret
mov
xor
mov
decl
xor
and
shl
ret
xor
xor
ret
