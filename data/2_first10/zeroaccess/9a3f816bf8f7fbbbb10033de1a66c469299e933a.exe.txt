push
mov
sub
mov
mov
inc
mov
sbbl
sub
push
mov
movl
mov
sbb
mov
orl
orl
mov
and
mov
mov
cmpl
mov
mov
jmp
mov
jge
push
pushl
pushl
pushl
call
mov
mov
add
adc
movzwl
sub
dec
or
xor
mov
add
adc
mov
cmpl
mov
movl
jmp
movl
jle
push
call
xor
sub
and
movl
movl
mov
add
add
add
mov
add
mov
adcl
sub
mov
sbb
xorl
mov
orl
andl
orl
jmp
loop
jns
cmp
lcall
in
stos
adc
adc
int
adc
pusha
sbb
dec
mov
mov
or
lea
ret
pop
rorb
mov
hlt
test
popf
fldcw
push
rorb
scas
inc
sbb
scas
ror
arpl
icebp
dec
js
mov
adc
js
dec
cmp
mov
jns
pop
lahf
or
inc
les
call
sub
movsb
fsts
pop
mov
fidivrs
xor
inc
dec
xchg
in
xor
mov
shlb
stos
iret
mov
cltd
cmp
mov
lock
mov
xchg
out
ds
aaa
push
neg
add
enter
cltd
ret
dec
push
arpl
push
lds
jle
fs
pop
and
or
push
dec
popa
sub
jg
dec
and
dec
popa
add
aad
pushf
xor
mov
pop
mov
es
test
bound
lea
adc
xchg
mov
lods
jno
dec
pop
in
fstps
xchg
jo
inc
cs
jg
ljmp
cmp
aas
out
pushf
jl
jo
dec
aas
lahf
adc
xor
aaa
xchg
aad
lds
and
lcall
mov
add
jecxz
mov
icebp
aad
xor
and
ss
cmp
shrb
pop
sar
call
sub
outsl
push
sub
xor
or
dec
hlt
sar
out
push
cmp
cltd
hlt
movsl
sarl
shll
sbb
outsl
cmp
pop
test
xor
lock
xchg
adc
xor
aam
mov
add
xor
in
push
push
pushfw
jb
inc
inc
push
pop
test
add
fwait
ja
sbb
cmp
xchg
pop
push
adc
inc
leave
imul
jo
xorl
sbbl
jns
sub
add
lds
in
lret
shlb
cmp
pop
fmul
or
fsubrs
mov
push
sub
xor
or
jno
cmp
xor
jecxz
push
mov
roll
sub
stos
jge
mov
ret
or
cmp
sbb
pop
mov
cli
insb
mov
xlat
inc
dec
aaa
push
push
enter
push
das
push
cltd
xchg
mov
aaa
mov
adc
jmp
and
push
dec
xlat
adc
popa
pop
mov
nop
repnz
fistpll
push
test
call
cmpsl
mov
jmp
pop
xchg
icebp
mov
fdivs
mov
push
dec
test
cmp
mull
xor
mov
cmp
repnz
jmp
add
fcmovne
cltd
testl
push
lods
shll
jbe
push
add
push
imul
or
and
push
negl
lcall
or
int
daa
jns
loopne
sbb
jnp
pushf
loope
ja
test
inc
out
push
addl
and
jl
pop
call
stos
mov
scas
add
pop
push
imul
mov
pop
xchg
add
mov
xchg
sub
pop
xchg
je
roll
dec
mov
adc
jle
test
dec
sub
ret
jp
or
enter
ss
out
fs
xorl
mov
jmp
popf
push
aaa
xor
or
arpl
and
int
mov
inc
and
jns
inc
add
mov
mov
movl
mov
jmp
mov
mov
jne
pushl
push
push
call
and
adcl
andl
xor
or
mov
movzwl
and
mov
and
mov
add
movzbl
or
mov
cmpl
movl
mov
movl
mov
jmp
movl
mov
jb
pushl
call
movzbl
adc
and
sbb
movzbl
xor
mov
or
sbbl
mov
cmpl
movl
movl
jmp
mov
mov
jg
push
push
pushl
pushl
call
sbb
dec
xor
sub
or
mov
sub
mov
add
shrd
shr
and
mov
mov
sub
mov
subl
xor
orl
xor
movl
or
xor
jmp
ljmp
cltd
daa
mov
push
sub
adc
adc
adc
loop
mov
jbe
fwait
push
aad
or
jge
inc
fldenv
int
mov
mov
cltd
jg
sub
mov
push
addr16
jbe
test
jmp
testb
repnz
jle
push
lea
nop
sbb
pop
mov
ret
pop
or
mov
lcall
into
nop
popa
ret
pop
sbb
push
xchg
mov
push
xchg
cmp
sub
scas
das
pop
cmp
lret
lcall
jae
mov
lods
sbb
push
mov
repnz
loope
adc
dec
out
inc
push
decl
insb
out
ljmp
in
push
fdivr
cmp
in
mov
test
cmp
stos
cwtl
cmp
jbe
aas
aaa
ret
inc
arpl
rol
insb
divb
sub
jg
sarb
jae
xchg
adc
int
out
push
jg
xchg
xor
xor
aas
jb
mov
xchg
hlt
sti
dec
xor
cwtl
dec
mov
sarl
sahf
out
cmp
cltd
cmpsb
sub
xor
cli
out
cmpb
push
mov
inc
mov
cmc
test
mov
jle
repnz
sub
jmp
inc
pushf
xlat
jae
in
pop
sub
mov
mov
push
pop
mov
mov
xchg
cli
xor
inc
shr
sub
lahf
lahf
jg
xor
int3
outsb
xor
cmpsl
push
mov
insl
lds
out
pop
outsl
xor
cs
addb
dec
jp
dec
mov
xchg
xor
enter
dec
dec
push
jne
scas
pop
mov
or
mov
adc
mov
inc
cli
push
sub
test
cli
and
sub
shl
aaa
xor
adc
pop
cmpsb
adc
jle
pop
xor
mov
or
jo
sub
popa
rol
es
mov
popa
xchg
inc
notl
arpl
fstl
in
add
mov
xchg
sub
cmpsl
fcoml
mov
lock
sti
mov
xor
sbb
xor
in
mov
movsb
rcrl
add
dec
idivl
push
rcr
push
jg
mov
subb
push
push
outsb
sub
sbbl
stc
repnz
imul
lcall
or
cwtl
xchg
mov
sub
fistps
lcall
cmovnp
mov
aam
push
lods
dec
pop
lds
movsl
addl
xorl
push
push
jecxz
ja
ljmp
mov
pusha
es
fisubs
data16
outsb
mov
pop
push
xor
fnsave
lahf
mov
xor
ss
push
pop
imul
aaa
and
mov
mov
mov
add
xor
cld
insl
imul
lods
ja
lahf
inc
fimuls
repnz
sbb
cmc
jo
lcall
roll
stos
sbb
js
fld
nop
sub
push
pop
sti
inc
iret
inc
sbb
push
int3
push
jp
sti
sub
jbe
mov
imul
mov
xor
rcll
idiv
xchg
xchg
les
out
mov
adc
and
jno
inc
add
notl
movl
movl
movl
jmp
mov
jle
pushl
push
pushl
pushl
push
call
sbb
addl
add
xorl
add
movl
sbbl
movl
sub
movl
xor
xor
and
movl
sub
movl
sub
movl
sbb
movl
sub
movl
cmpl
movl
movl
jmp
movl
mov
jb
pushl
pushl
push
pushl
push
call
andl
notl
andl
orl
addl
sbbl
movl
sbbl
movl
xorl
movl
xor
movl
movl
cmpl
movl
movl
movl
jmp
mov
jbe
push
push
push
push
call
subl
adcl
movl
adcl
sbbl
adcl
movl
sub
movl
movl
adcl
movl
negl
movl
cmpl
movl
movl
jmp
movl
jbe
push
pushl
pushl
call
adc
addl
orl
sbbl
notl
adcl
xor
movl
movzbl
xor
movl
cmpl
movl
mov
mov
jmp
mov
je
push
push
push
push
call
xorl
negl
xorl
subl
andl
adc
sbb
movl
inc
movl
mov
xor
mov
xorl
shl
mov
or
mov
mov
subl
push
xorl
push
adcl
push
subl
push
adcl
call
and
mov
sbb
mov
adc
xor
xor
or
add
mov
mov
xor
sub
mov
adcl
jmp
into
mov
and
xchg
push
and
orb
adc
adc
adc
ljmp
test
dec
rol
or
and
mov
popa
sbb
icebp
adc
pop
into
mov
div
imul
enter
ds
inc
xchg
lock
push
fistpl
in
stos
fnstsw
jl
push
js
cmp
fcomi
mov
scas
mov
es
pop
insb
sbb
sbb
pop
dec
dec
ror
mulb
je
add
and
inc
test
inc
jae
dec
repnz
test
insb
sub
push
mulps
adcl
inc
mov
jo
mov
sub
rcl
mov
cmpsb
out
sahf
add
stos
aaa
adc
outsb
xchg
std
push
loope
cmc
popa
test
movb
jbe
nop
mov
jo
push
adc
jb
call
sub
mov
imul
dec
fidivrs
sub
or
ss
cwtl
xlat
xor
outsb
or
xchg
jmp
sub
test
loope
xor
imul
mov
stc
test
dec
push
loope
cmp
lahf
sub
pop
xchg
test
jb
mov
pop
inc
faddl
pop
lea
ss
lcall
or
cmp
sbb
scas
push
cmp
es
insl
xlat
inc
mov
rclb
pop
cmp
and
inc
lock
xchg
in
mov
lahf
addr16
or
mov
jecxz
outsb
jmp
loop
popa
adc
fdivrs
inc
loop
cmpsl
push
inc
or
outsb
mov
sbb
mov
mov
aam
inc
shrl
mov
xchg
mov
pop
mov
ret
dec
lods
push
loope
inc
inc
or
dec
cmpsl
fmuls
dec
xor
push
mov
cmp
sbb
cltd
call
mov
clc
fldenv
mov
fs
in
inc
sbb
ret
roll
test
push
pop
pop
dec
sbb
dec
mov
shll
js
out
or
adc
jmp
jae
and
repz
loope
imul
sti
js
xor
imul
mov
iret
add
out
xchg
mov
rorl
pusha
or
mov
pop
xor
out
imul
and
push
mov
lods
sbb
ja
ds
sbb
loop
ss
sub
repnz
pop
mov
xor
lret
dec
cmpsl
cmpsb
ror
outsb
cmpsl
out
negl
sbb
clc
daa
mov
aam
fwait
mov
fstl
pushf
cmp
stos
pop
mov
hlt
jmp
push
jae
std
or
les
jge
mov
and
mov
aad
pop
pop
test
push
lret
jno
mov
pushf
xchg
movsb
mov
push
cltd
xchg
ja
add
xor
bnd
inc
andb
jle
push
jb
sbb
jo
and
mov
in
jae
sub
bound
cmp
addr16
cmp
or
int3
shlb
ljmp
out
push
es
pop
add
jnp
dec
push
xlat
xchg
in
cmp
cs
decl
add
inc
add
add
mov
or
and
xor
mov
or
andl
xor
movl
cmp
jmp
xlat
test
push
xlat
popa
dec
lcall
cmp
adc
int
adc
bound
pop
insl
es
stos
int
add
inc
pop
dec
sbb
add
mov
cmpsl
fnstsw
fists
pop
push
mov
mul
dec
test
jnp
add
leave
mov
cmp
shll
xchg
jp
dec
bound
push
pop
fidivrs
mov
push
sti
or
sub
and
sub
gs
mov
jne
jmp
sbbl
sti
mov
loop
daa
xchg
aam
dec
lods
ret
mov
aas
rcr
adc
popf
add
dec
cmp
dec
lods
add
add
in
repnz
inc
jbe
fwait
int3
mov
rorb
add
or
xchg
push
jmp
pop
xchg
xchg
neg
in
in
adc
xchg
mov
std
inc
sub
push
jbe
stos
imul
inc
fisttpll
and
xor
iret
inc
andb
or
sbb
hlt
jns
xorl
jnp
sub
aad
jb
mov
pop
push
dec
mov
push
push
push
xchg
int
jns
jae
push
cmpsb
jb
dec
cld
repnz
or
pop
ljmp
js
fwait
insb
cmpsl
inc
mov
and
mov
mov
xchg
neg
lods
inc
jge
xor
inc
pop
fdivl
rorb
mov
sbb
daa
mov
flds
shlb
pop
cmpsb
test
jbe
or
aad
js
imul
arpl
add
jnp
xchg
popf
gs
cmpsl
lods
dec
repz
add
push
test
and
enter
test
cs
add
int
sbb
pop
mov
insb
add
addr16
xor
adc
sub
repz
pop
fsubs
fs
and
out
mov
lods
test
lock
mov
lahf
add
sarb
pop
inc
fsubl
movl
loope
pushf
sub
inc
sub
or
pop
add
lcall
rcl
mov
nop
shll
xor
out
mov
mov
call
les
in
sbb
adc
mov
fs
jp
add
pop
jno
out
insl
push
adc
inc
xchg
adc
lock
cwtl
mov
adc
inc
in
sbb
mov
iret
push
cmp
xor
insb
out
in
inc
jae
sub
sub
and
xchg
cmp
push
out
mov
xor
lret
sti
out
add
and
xor
and
dec
add
test
cmp
mov
es
dec
inc
popa
cli
mov
jns
mov
icebp
xchg
push
adcb
lea
rcr
nop
mov
into
mov
sub
and
lods
pop
sbb
jle
insl
ret
dec
xchg
aaa
rolb
fwait
cmc
int
hlt
or
test
fisttpl
adc
outsl
push
fiadds
jg
lret
popa
mov
iret
inc
shlb
push
sbb
jnp
mov
or
std
mov
inc
loope
rorb
jge
add
sub
dec
xlat
divb
fidivrl
sahf
ds
adc
sub
rorl
inc
imul
push
jnp
lcall
lahf
mov
lock
cmpsb
das
add
jns
jne
add
mov
mov
cmpl
mov
movl
movzbl
jmp
movl
jae
push
push
call
sub
sbb
subl
sbbl
neg
adcl
xor
xor
xor
mov
subl
shrd
shr
add
mov
mov
andl
shl
xor
addl
xor
or
mov
mov
movl
cmp
jne
mov
cmpl
not
mov
movl
jmp
movl
movl
je
push
pushl
push
push
call
adc
xor
or
mov
adc
not
decl
xorl
sub
and
mov
sub
cmpl
mov
movzwl
mov
jmp
movl
movl
jle
pushl
pushl
call
sbb
adc
add
sbb
sbb
movl
mov
xor
mov
mov
sub
mov
shrd
xorl
jmp
lcall
add
js
or
push
notl
adc
adc
adc
or
sbb
fnstsw
sub
xor
test
adc
xchg
dec
dec
das
sbb
mov
shl
ret
rcll
paddusw
mov
xchg
sbb
jmp
or
and
sub
cmpsl
out
clc
shr
test
mov
ja
cmpsl
and
cmp
inc
add
pop
cmpsl
cwtl
or
xlat
push
add
mov
inc
imul
aad
and
ss
jnp
pop
syscall
orb
add
mov
push
clc
ss
push
insb
or
jmp
fidivrl
mov
push
lds
in
mov
sub
mov
and
vpmadcsswd
leave
jae
or
adc
xor
repnz
xchg
rolb
orb
ret
push
sub
xchg
repz
mov
leave
mov
call
call
es
mov
addr16
test
iret
xor
jb
dec
aam
dec
pop
aas
mov
cmc
jp
lods
push
repz
lea
fstl
shll
sub
push
adc
mov
cmp
rcrl
pushf
insb
jecxz
mov
dec
ljmp
lea
ds
xor
enter
lret
inc
dec
push
push
xchg
sbb
and
sbb
or
iret
cmp
mov
xchg
dec
lcall
imul
cs
add
loopne
pop
mov
mov
jl
adc
adc
ret
rorl
and
push
dec
cmpsb
xchg
and
andl
xchg
imul
data16
addl
jbe
fisubrs
jmp
push
insb
push
or
push
inc
pop
test
pop
and
icebp
pop
or
fdivr
push
push
sub
mov
andb
mov
pop
cld
xchg
inc
pusha
pop
xor
sbb
pop
jg
mov
dec
enter
pop
std
cmp
mov
outsl
mov
lock
jbe
popf
pop
fimull
int
or
insl
jmp
pop
mov
inc
clc
out
pop
in
das
movsb
add
icebp
add
jl
addr16
aaa
pop
shrb
sub
insl
idivl
sub
mov
mov
mov
stc
and
scas
cmp
outsl
sbb
add
pop
int3
ljmp
cltd
call
jl
xlat
and
push
repz
mov
out
cmp
jns
fsubrp
out
dec
arpl
push
mov
daa
subl
xchg
pushf
scas
dec
inc
jb
inc
inc
enter
or
sarb
adc
lods
iret
ret
fnstsw
cmp
cmp
jno
aaa
les
icebp
jo
aad
cmp
pop
icebp
cmp
mov
push
pop
scas
divb
jmp
aad
js
addr16
mov
sub
xor
orb
xor
test
fbld
rorl
xor
dec
fldt
push
xchg
test
or
xchg
mov
cmp
sahf
cmp
mov
loop
mov
and
les
cmp
dec
in
cmpl
mov
mov
jmp
movl
jle
pushl
pushl
call
sub
add
notl
sbb
xor
dec
sub
mov
xor
orl
shr
sbbl
mov
adcl
xor
andl
or
shl
cmpl
mov
mov
movl
jmp
movl
movl
je
pushl
pushl
call
notl
and
sub
and
not
xor
sub
mov
mov
cmpl
mov
movl
mov
jmp
mov
jle
push
pushl
pushl
call
sbbl
adcl
movzbl
sbb
mov
movzbl
and
mov
movzbl
sbb
mov
add
add
mov
mov
mov
shrd
or
shr
cmpl
movl
mov
movl
mov
jmp
mov
je
pushl
call
and
and
sub
or
mov
mov
or
sub
and
mov
mov
xor
shl
adcl
xor
or
xor
mov
mov
shrd
shr
mov
sbb
mov
cmpl
movl
movl
mov
jmp
movl
not
ja
pushl
push
call
mov
xor
or
sub
add
mov
sbb
inc
mov
mov
sub
add
or
mov
sbb
mov
xor
xor
or
andl
shl
lea
subl
mov
mov
andl
shrd
subl
shr
cmpl
mov
movzwl
mov
movl
jmp
mov
movl
jb
pushl
push
push
pushl
call
xorl
neg
or
movzbl
sbb
movzbl
xor
mov
xor
xor
sub
mov
mov
cmpl
mov
movl
mov
jmp
mov
je
pushl
call
movzwl
add
mov
add
movzbl
and
or
subl
neg
mov
cmpl
mov
movl
movl
jmp
mov
jge
pushl
call
sbb
xor
inc
mov
sub
mov
adc
adc
cmpl
movzbl
mov
jmp
mov
mov
jl
push
call
movzwl
and
movl
add
sbb
movzbl
sub
sub
xor
mov
xor
subl
or
orl
shl
xor
imul
mov
and
mov
mov
andl
shrd
andl
mov
mov
xorl
xor
shr
subl
mov
mov
sub
mov
xor
adcl
or
sbbl
shl
sub
mov
cmp
mov
mov
movl
jg
or
mov
sub
mov
movl
shrd
mov
xor
mov
sbbl
xor
movl
shl
xor
adcl
or
shr
or
mov
mov
adc
mov
mov
mov
addl
mov
sbbl
shrd
shr
adcl
mov
mov
movzbl
sbb
mov
addl
xor
xor
or
shl
addl
imul
andl
sub
movl
jmp
mov
adcl
mov
notl
shrd
mov
add
mov
addl
xor
movl
shl
xor
or
xorl
shr
xorl
mov
mov
mov
cmpl
mov
mov
not
jmp
movl
mov
jg
push
pushl
push
push
call
xor
xor
xor
sbb
addl
orl
neg
xorl
and
cmpl
movl
movl
jmp
movl
jle
pushl
call
xor
xor
mov
sbb
dec
not
mov
adc
cmpl
mov
mov
mov
jmp
movl
movl
jg
pushl
push
push
push
call
xor
add
or
mov
movzbl
and
notl
adc
or
adcl
sub
mov
shrd
shr
mov
mov
jmp
xchg
icebp
mov
icebp
out
loopne
ret
insb
cmpsb
out
adc
int
adc
mov
das
push
mov
fmul
daa
xorl
or
xor
popa
es
mov
sti
xlat
mov
insb
pop
rclb
dec
leave
mov
mov
and
sbb
push
push
inc
xchg
les
loope
fwait
clc
dec
sub
stos
add
fistpl
rcll
lock
cmpsb
push
inc
inc
sti
mov
mov
xor
loop
loop
sahf
mov
add
cmpsb
inc
xor
or
xor
add
push
mov
lds
and
pop
pop
int3
push
jbe
js
stc
dec
mov
stc
and
and
jp
jmp
inc
xlat
push
call
cld
sub
stos
cs
xchg
pushf
out
stos
mov
stos
and
movsb
in
sbb
dec
mov
jl
lcall
jns
jae
add
sahf
fwait
shlb
sub
inc
lcall
mov
lcall
jno
call
mov
repz
sarb
jl
push
insb
enter
lds
sub
adc
xchg
and
add
adc
rorb
xchg
and
xchg
dec
sbb
pop
add
sbb
fdivs
mov
dec
jmp
fisttpll
sbb
xor
or
aam
out
push
mov
pop
or
pop
mov
pop
mov
lcall
ds
add
push
push
into
aas
testb
cmp
ret
mov
test
jne
rcr
inc
pop
addr16
mov
orl
pop
movl
in
cmp
ljmp
sahf
jg
lahf
sub
jne
mov
test
aaa
lea
js
shll
pop
shrb
mov
mov
mov
pop
loope
lret
inc
sub
das
sub
jo
ret
loopne
xchg
scas
lret
cs
popa
insb
push
pop
jl
outsb
les
lret
sbb
mov
mov
add
hlt
sbb
adc
xor
sub
push
pop
pop
mov
lret
mov
and
xor
mov
nop
popa
shrl
cmp
movsb
mov
jg
sub
push
fwait
dec
aad
into
lret
imul
xchg
ss
enter
mov
jb
jmp
adc
inc
lcall
into
jl
jl
nop
sub
mov
jecxz
xchg
xor
jp
bound
jb
xchg
mov
xchg
aad
leave
adc
mov
add
aaa
xlat
inc
xchg
push
cmp
cltd
push
mov
or
vmwrite
add
jbe
imul
orb
xchg
into
stos
jp
out
pop
mov
add
lock
jg
nop
jmp
adc
xor
xchg
and
sbb
cmp
mov
or
jbe
in
int
adc
cltd
cli
add
lock
fs
clc
imul
sti
imul
push
aas
xchg
mov
insb
pop
push
mov
mov
or
xlat
cmp
xchg
imul
push
mov
dec
dec
lock
aaa
xchg
mov
cmp
pop
cli
add
xchg
daa
sarb
jns
add
mov
ss
lds
test
loopne
dec
mov
xchg
cmpsl
repnz
pop
mov
lret
lsl
mov
std
ret
mov
xor
xor
or
shl
add
add
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
mov
movl
mov
mov
movl
jmp
lret
lea
push
push
and
xor
fadds
adc
adc
adc
cli
xor
pop
or
fs
rol
int
mov
mov
lods
call
ds
and
sbb
cmpb
mov
jne
add
mov
mov
and
pop
cltd
sub
lods
rcrl
ret
xchg
mov
jns
xor
push
jg
mov
push
gs
shr
inc
imul
xchg
xlat
sarb
mov
lea
mov
in
xor
cmc
roll
jns
xor
lock
sahf
adc
js
lods
aas
mov
cmpl
sub
sbb
in
xor
cwtl
cli
js
mov
fwait
cltd
push
pop
stos
mov
sbb
mov
cltd
or
iret
loope
jg
aam
xor
xor
pop
sub
mov
add
and
aad
les
xor
es
pop
mov
cltd
popf
fidivs
inc
pop
loop
push
pop
jo
sbb
pop
mov
adc
mov
mov
loop
xor
cmpl
dec
push
in
add
nop
loopne
iret
mov
cltd
and
call
add
mov
sub
pusha
jnp
push
int3
bound
cwtl
fwait
andl
jl
testl
ds
mov
jne
pop
addr16
mov
dec
fdivl
imul
jecxz
xchg
test
or
jp
xchg
and
sbb
xchg
cmp
lock
les
dec
xor
mov
mov
xlat
pop
inc
dec
jbe
jp
sarl
in
inc
jb
in
jnp
adc
xor
mov
das
test
int
enter
push
outsb
xlat
je
pop
int
push
pop
pop
stc
xchg
outsl
xor
mov
dec
stc
lock
xchg
pop
gs
mov
mov
les
xchg
xor
ljmp
inc
lcall
test
testb
inc
hlt
push
in
add
jo
fcoml
pushf
push
outsl
jmp
xlat
sbbl
inc
arpl
rolb
pop
or
jbe
icebp
lcall
mov
xchg
jg
inc
movb
incl
out
gs
sahf
es
popf
cltd
jmp
lods
sbb
ret
cmpl
out
popf
dec
enter
sar
add
push
mov
lock
push
jne
mov
std
or
adc
xchg
fcoml
xchg
adc
and
rsqrtps
repz
jno
cmp
mov
sub
outsl
hlt
sbb
fsts
push
scas
mov
popw
push
sub
lahf
pop
cmpsb
or
add
sub
in
push
inc
or
repnz
and
stos
dec
ficompl
repnz
pop
push
popa
scas
or
iret
mov
or
adc
or
adc
jb
cmpl
xor
sbb
add
addl
cwtl
fildl
test
push
dec
xchg
pop
push
xchg
jbe
addb
fists
jo
mov
cmc
cmp
js
nop
inc
fnstcw
icebp
dec
or
jmp
hlt
fmuls
and
mov
adc
test
into
lock
mov
jbe
sbbl
mov
lods
insb
mov
and
xchg
jnp
repz
out
sahf
jb
mov
movl
mov
movl
mov
mov
mov
shrd
shr
jmp
fsubrs
fldenv
pop
enter
adc
int
adc
out
xor
nop
call
jns
movsb
add
sarl
pop
sbb
test
xchg
cmpsl
andl
loope
mov
push
out
mov
push
lock
inc
adc
push
pop
adc
cli
sbb
sub
out
cwtl
cmc
loope
cmp
out
js
dec
jno
fildl
jg
cmp
scas
popa
int
xchg
mov
stos
or
clc
in
push
push
std
cmp
and
loop
xchg
lahf
test
push
lods
push
lea
fmull
sub
aaa
ja
push
mov
aam
add
ret
fdivs
pop
lea
xchg
int3
pop
mov
sahf
dec
mov
loopne
pop
pop
enter
cltd
das
pushf
adc
adc
les
push
pushf
push
sbb
dec
mov
push
lret
xor
out
int
inc
inc
push
loopne
aaa
sbb
rcl
jbe
pop
andl
mov
dec
add
movsl
insb
cmp
dec
pop
sbb
inc
cmp
in
mov
mov
andl
jo
push
shl
mov
bound
lds
push
divb
repz
push
out
fcomps
or
aaa
iret
xchg
ljmp
cld
ficoml
daa
movsb
mov
dec
cmp
lods
xchg
ja
movsb
sar
fistps
enter
mov
mov
addr16
or
cmpsl
dec
jne
pushf
sub
pop
mov
jns
sub
push
jge
popa
and
std
cmpsl
sbb
or
loope
xchg
ljmp
sti
jnp
sti
je
or
popa
cmc
inc
mov
inc
adc
call
and
mov
push
dec
adc
lods
add
imul
add
inc
jle
out
or
aas
push
test
mov
subl
shll
pop
into
cwtl
stos
push
jnp
cmpsl
add
fwait
adc
daa
mov
test
call
pushf
imul
lds
xor
mov
dec
xor
popf
add
shll
jbe
into
mov
ja
fsubrl
loopne
add
icebp
inc
int
fdiv
inc
jne
jg
lret
mov
lods
int
dec
fists
outsl
in
cmp
jbe
aam
repnz
stos
incb
mov
inc
out
pop
scas
orl
push
iret
sahf
stos
jg
cs
pop
and
mov
clc
adc
xchg
or
sbb
imul
or
rcrl
shrb
popf
pop
mov
mov
cmp
daa
mov
je
fldt
or
or
push
incl
es
sbb
mov
jl
out
cltd
jmp
inc
adc
push
mov
call
jbe
jae
sub
mov
jb
les
inc
fcompl
fcoms
lock
xchg
xchg
stos
sti
push
and
and
fisubrs
lods
push
cli
outsl
loopne
cwtl
mov
mov
mov
pusha
pusha
icebp
adc
enter
adc
addr16
add
mov
cmp
mov
or
sub
icebp
jg
or
add
push
pop
psllw
jae
in
stos
push
mov
xor
sbb
stos
cmp
lea
cmp
imul
push
cmp
fstl
nop
push
pavgw
les
aam
mov
or
lea
mov
mov
mov
shrd
shr
mov
mov
shl
mov
xor
xor
or
mov
mov
xor
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
lea
mov
mov
mov
shrd
jmp
orb
mov
mov
ficoms
adc
adc
adc
fldenv
ljmp
pop
lock
lret
cmc
or
sbb
dec
and
sub
adc
jg
xor
push
or
out
add
mov
andl
rorl
fsubrp
pop
in
sete
cld
xchg
push
push
add
push
insl
daa
and
cmp
sti
pop
repz
loope
xchg
xlat
cli
pop
mov
arpl
adc
xor
or
cs
stos
js
xchg
pop
push
adc
shlb
fstps
push
lret
pusha
sahf
loope
outsl
jo
jg
int3
jl
sarl
mov
and
mov
add
dec
lods
push
add
inc
shll
xchg
push
mov
cmpsb
andl
mov
pop
or
ret
rcrl
lods
in
js
mov
mov
aas
dec
les
jb
ja
inc
aam
and
jle
cmpsl
ss
lea
lea
test
add
idiv
xchg
adc
addl
or
stc
imul
adc
sub
mov
mov
iret
aam
push
mov
or
add
ds
lahf
repnz
mov
and
add
sti
bound
lcall
ja
or
icebp
ffree
in
sbb
repz
and
sbb
sbb
mov
in
mov
clc
repz
adc
sub
mov
in
push
shll
clc
push
mov
inc
fidivrs
test
xor
sbbb
xorl
test
call
shlb
jmp
rolb
add
push
push
jmp
sarb
arpl
or
cmc
adc
insb
adc
jge
scas
sti
sti
nop
outsl
movsb
mov
mov
scas
pushl
pop
xlat
data16
shrb
mov
jns
loop
or
js
lahf
xchg
sbb
sbb
dec
add
lock
aad
loopne
add
loope
and
jl
jnp
inc
push
movsl
notl
inc
das
pop
test
mov
sub
popa
mov
sbbb
fwait
stos
imul
movsb
mov
dec
nop
add
add
or
data16
jle
pop
mov
test
ja
mov
adc
leave
in
stc
xchg
lea
inc
and
push
push
mov
sbb
fistpl
cwtl
scas
mov
jmp
pop
inc
gs
adc
fsubr
mov
insb
loop
sbb
orl
fwait
mov
and
mov
push
stos
mov
sbb
lods
pop
mov
xor
inc
cld
cwtl
insl
mov
outsb
cmpb
inc
xchg
add
xor
mov
adc
test
jl
xor
cltd
and
or
cmp
xchg
pushf
cli
shr
cwtl
sbb
cmp
pop
fs
cs
icebp
int
lds
mov
out
jg
popw
loop
add
in
sahf
and
sahf
and
sub
in
aad
cmpsl
bound
ffree
mov
lcall
clc
inc
rolb
insl
fcoml
push
push
inc
or
ficoms
mov
or
inc
push
push
xor
sbb
dec
dec
jbe
dec
mov
mov
mov
add
cs
and
out
mov
aam
hlt
clc
insl
pop
in
jmp
nopl
xchg
shr
mov
mov
shl
jmp
fmuls
sbb
notb
adc
int
adc
popa
in
jp
xlat
lock
xor
repz
pop
repnz
orb
mov
addr16
push
out
pop
int
cmc
mov
pop
and
dec
pop
shrb
mov
add
jo
pop
fdivrs
mov
pop
roll
cs
or
mov
push
mov
out
adc
fmuls
fisubrl
mov
dec
popf
out
and
out
dec
or
xchg
test
sbb
jno
mov
jo
stos
pop
cwtl
jmp
fidivl
outsl
jae
cltd
insl
imul
ficompl
lea
push
dec
mov
jecxz
repz
test
lret
adc
jno
out
lods
cld
cmpsl
lcall
add
in
pusha
cltd
je
push
or
push
divb
add
repnz
fiaddl
and
jne
mov
mov
dec
in
cld
icebp
jne,pt
fdivl
xor
dec
lods
jbe
push
in
fistl
dec
cmp
jns
test
xlat
fsts
adc
adc
xor
adc
adc
movzwl
and
shl
inc
xor
adc
movsb
rcrb
dec
xor
push
int3
mov
jg
lahf
xor
fwait
sbb
push
mov
push
push
imul
cmp
arpl
add
jne
cmp
ret
loope
das
ja
pusha
dec
mov
pop
cmc
push
icebp
xchg
sub
arpl
loop
xchg
adc
pop
test
das
fdivl
popf
push
pop
icebp
test
test
or
sbb
pop
mov
aad
dec
pop
cltd
or
jbe
jae
jg
orb
adc
sti
adc
cmp
mov
pop
jmp
dec
mov
jp
lds
daa
cmp
dec
or
daa
rorb
test
shl
std
push
jo
pop
ret
inc
clc
xlat
test
lcall
shll
push
jne
fisubrs
fisttps
addr16
pop
imul
cmpsb
mov
pop
xor
jnp
push
lea
jne
xchg
push
es
pop
scas
jg
outsb
xor
push
hlt
jnp
lods
in
pushf
adcb
inc
out
andl
pop
lcall
adc
adc
jns
js
add
orb
dec
shrl
and
out
push
cs
sub
pop
ret
lret
loope
and
scas
or
pusha
int3
dec
shll
stos
fimull
add
jo
stos
imul
lock
in
lods
leave
loop
in
rsm
out
enter
cltd
daa
jl
js
mov
mov
test
out
cmpsl
adc
push
cmp
sub
scas
fdivs
rorl
cwtl
ficoml
leave
cmp
dec
movsb
je
push
fildl
cs
jbe
cmpsl
and
sbb
fwait
pop
pop
mov
jg
imul
adc
push
inc
mov
xor
and
cli
xchg
push
mov
jnp
push
fsubs
xor
into
inc
inc
addr16
xchg
lcall
in
push
popa
fldcw
lods
mov
gs
pop
xchg
and
loope
xor
mov
xor
xor
or
mov
mov
or
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
lea
mov
mov
mov
shrd
shr
mov
mov
xor
shl
mov
xor
or
mov
mov
add
mov
mov
shrd
shr
mov
mov
xor
xor
or
lea
mov
mov
shl
mov
shrd
shr
mov
mov
xor
xor
or
mov
shl
mov
mov
mov
or
mov
mov
shrd
jmp
dec
or
push
sub
loopne
sbb
int3
adc
int
adc
inc
lods
add
or
adc
push
ds
insl
loope
xor
les
or
imul
mov
cli
cwtl
loope
nop
sub
xchg
cli
jle
enter
xchg
pop
pop
push
cmp
pop
xorb
shlb
ror
inc
mov
and
sub
and
call
push
outsl
stos
cmp
mov
out
testb
clc
out
cmp
in
dec
sub
stos
pop
add
xor
pop
push
mov
dec
cmp
fisttpll
jns
test
pop
xor
dec
push
mov
scas
lret
jg
jbe
into
lock
push
in
lahf
sub
shl
mov
pop
and
lret
jl
sub
pushf
les
xchg
or
imul
movsb
mov
out
les
movsb
int
push
int
cmp
std
mov
jl
outsl
xchg
in
or
push
mov
adcb
or
cli
or
loope
jmp
scas
js
fsubr
out
nop
jge
mov
pop
pop
lods
and
insl
xor
mov
inc
in
cmc
pop
pushf
fmuls
or
inc
icebp
push
inc
insb
fdivs
push
rcrb
adcb
mov
lock
dec
inc
iret
mov
cmc
xor
and
and
out
xorl
sti
jb
adc
pushf
je
mov
pop
xchg
xlat
adc
pop
pushf
in
xchg
sbb
movsb
mov
in
sub
scas
push
js
inc
enter
sahf
pop
or
sti
xchg
add
sub
sahf
inc
sbb
xchg
scas
call
xchg
sti
fildl
xchg
repnz
or
stos
in
ja
stc
cmp
cli
push
pop
sbb
inc
mov
das
jbe
fists
in
mov
mov
dec
lds
xorl
mov
xor
pop
divl
je
inc
jae
jno
decl
pop
pop
or
cltd
sub
cli
nop
dec
ds
cld
mov
faddp
rcrb
xchg
mov
sub
repnz
popf
jbe
lret
mov
mov
cmp
mov
sbb
pop
mov
shrb
jg
fdivl
dec
jns
sub
mov
pop
jnp
xchg
das
pushf
mov
in
jmp
xor
pop
mov
mov
push
dec
sub
push
xchg
cmp
cli
push
enter
ljmp
and
outsb
rcrb
sub
in
push
aas
lcall
xlat
sub
xor
into
dec
dec
inc
and
jns
jge
xor
dec
mov
lods
sub
mov
cld
jae
and
push
and
loopne
dec
jge
loopne
sbb
sub
pop
cmc
test
mov
leave
into
shrl
frndint
or
mov
push
jecxz
imul
ljmp
pushf
shlb
inc
adcb
add
or
pop
or
test
mov
sub
insb
xlat
stos
lret
pop
arpl
xchg
pop
inc
mov
cmpsb
mov
or
or
mov
push
mov
jne
loop
outsb
insl
ss
inc
cmpsl
fnstsw
incb
cmp
mov
aas
xchg
cmp
xchg
mov
mov
cmc
cli
movsb
sar
aad
and
mov
outsb
jg
shl
shr
mov
mov
xor
mov
xor
or
mov
dec
not
jmp
adc
push
inc
daa
sbb
lods
insb
push
les
adc
adc
adc
xor
imul
or
sti
gs
js
call
push
scas
popf
das
push
jb
lahf
xor
cmpsl
dec
ret
sbb
sbb
ret
mov
mov
lds
and
pop
dec
add
sub
popw
jb
mov
pop
cli
mov
orb
sub
shlb
aaa
lcall
xchg
scas
addr16
test
testb
fwait
insl
push
pop
mov
nop
ja
sub
rcrb
cmp
test
jbe
std
inc
das
cmpsb
lret
test
xor
addl
xchg
leave
lock
ret
das
jbe
pusha
cmp
jns
sub
imul
lret
lds
popa
mov
mov
out
scas
mov
sbbl
mov
mov
outsb
int
cli
imul
dec
loop
aaa
shlb
ret
in
mov
push
inc
test
pop
and
pop
adcb
je
movsb
sub
dec
xchg
aam
sub
pop
lds
lods
push
push
xor
inc
ja
loopne
loope
or
mov
loope
push
push
dec
insb
sub
inc
and
stc
lods
jp
add
fmuls
lcall
mov
cli
adc
ret
ss
imul
mov
or
mov
idiv
cmp
fmulp
je
das
pop
mov
xor
insb
jl
sbb
push
adc
mov
or
jae
add
stos
mov
movsb
mov
or
pushf
jb
pop
call
in
iret
push
pop
sbb
fwait
adcb
adc
inc
xchg
dec
mov
or
scas
mov
mov
cld
push
cld
lea
shl
popa
into
aam
push
push
sbb
iret
cmp
inc
fldl
aam
iret
and
mov
sbb
push
mov
or
xchg
add
push
sahf
sbb
inc
cmp
xchg
movsb
imull
lahf
dec
int3
fldl
cmp
lods
int
scas
ss
scas
pop
stos
pop
jb
int
nop
add
mov
adc
ret
call
scas
sub
lret
xchg
dec
scas
fisubs
jmp
movsb
mov
sub
fwait
div
mov
lcall
dec
outsw
mov
push
jo
aad
dec
in
loop
js
and
push
mov
js
push
xor
xchg
and
push
jne
popa
call
pop
adc
lods
aaa
in
popf
mov
or
xor
in
insl
faddl
dec
pusha
fxch
dec
scas
fiaddl
sarb
je
ficomps
std
sbb
nop
and
pop
js
xorb
and
pop
push
cmpsl
dec
jecxz
pop
ret
lds
jl
pop
cmp
push
or
lds
lods
das
jmp
je
orl
adc
sahf
insl
into
push
lret
and
arpl
xor
mov
inc
sbb
daa
pop
pusha
popa
cmp
lock
push
loope
cli
jmp
sub
push
lods
sub
dec
daa
push
pop
shlb
mov
ss
xlat
adc
push
jne
or
and
int3
xchg
cmc
sbb
std
cmpb
and
add
and
and
xor
mov
mov
xor
or
mov
mov
shrd
shr
mov
mov
mov
xor
mov
xor
shl
mov
or
mov
cmp
je
mov
sub
mov
mov
xor
xor
shrd
shr
mov
jmp
jp
lds
sub
mov
lods
fwait
ret
int
adc
or
add
arpl
cmp
or
subl
int3
push
mov
leave
mov
xor
mov
lds
int3
mov
or
xor
ss
test
sub
or
popa
or
cmp
pop
jb
popl
in
push
aam
repnz
adcb
in
mov
push
mov
pop
add
fsub
inc
lcall
xor
repnz
in
mov
jns
mov
mov
insb
ja
daa
mov
fidivs
imulb
lods
out
xchg
pop
mov
xchg
mov
js
xor
ljmp
inc
pop
outsl
jle
add
xchg
stc
adcl
push
xchg
jns
push
nop
rolb
add
aaa
inc
and
xchg
mov
add
push
or
jge
mov
lds
mov
inc
jns
ret
mov
or
xchg
push
shll
jb
pop
adc
sbb
mov
push
lret
into
out
adc
ret
jecxz
jg
and
icebp
negb
xor
and
into
call
in
mov
cmp
xchg
jecxz
xchg
mov
cs
dec
fadd
es
dec
jg
or
cwtl
shlb
or
jns
stos
mov
adc
lock
hlt
cmp
loop
add
out
xorb
mov
movsl
inc
dec
mov
mov
xchg
icebp
cmp
stos
out
adc
outsb
enter
or
sbb
mov
sbb
sub
and
jg
sahf
adc
lret
and
pop
loope
pop
idivl
push
or
or
add
mov
cmp
adc
cld
cmp
adc
sahf
sti
xchg
fstl
shll
enter
or
lret
int3
sbb
mov
sub
loope
fmull
sbb
mov
aad
xchg
icebp
jp
ja
jae
sub
jne
cwtl
or
ja
js
push
data16
loopne
rolb
out
adc
and
cwtl
push
insb
imulb
addr16
js
cmp
imul
loop
stos
cmp
rclb
or
xchg
jge
orl
jne
hlt
ljmp
xor
inc
les
aas
outsl
out
pop
inc
push
cmc
mov
pop
arpl
mov
lahf
mov
mov
js
call
xor
or
xchg
nop
cmp
adc
mov
cmpsb
data16
mov
push
pop
push
call
mov
loopne
pop
arpl
hlt
mov
sub
push
sbb
jae
addr16
ret
fcoms
xor
cs
addr16
xchg
in
loop
mov
mov
sar
rcrl
jle
or
lcall
adc
mov
dec
push
jne
sahf
pop
fdivs
sub
popa
inc
pop
cs
insl
cmpl
bound
lret
icebp
aam
adc
sub
fiadds
sbb
aaa
lahf
mov
daa
cwtl
mov
and
loopne
sahf
fldenv
std
jmp
mov
cltd
imul
mov
repz
and
pop
das
xchg
bound
jmp
push
loope
mov
mov
mov
xor
or
mov
mov
mov
xor
xor
mov
mov
mov
shrd
shl
or
mov
mov
mov
shll
mov
mov
mov
xor
or
shr
or
cmp
jne
cmp
je
jmp
mov
mov
xor
xor
shrd
shr
mov
mov
mov
mov
xor
or
shl
or
mov
mov
xor
mov
mov
jmp
imul
sbb
push
push
mov
int
adc
shlb
lret
lods
cwtl
rorl
pop
mov
rcl
mov
cmp
lods
xor
sbb
push
repz
inc
sub
xchg
aaa
xchg
or
cltd
clc
inc
popa
stc
add
dec
inc
and
testb
xchg
push
and
sbb
cmpsl
repnz
pop
sarb
jae
leave
insl
leave
pop
in
add
testl
outsl
cmp
push
nop
push
out
add
mov
sbb
roll
loopne
ds
cmpsb
mov
mov
mov
ljmp
push
inc
xchg
adc
xchg
mov
jmp
inc
push
movsb
cmp
or
pop
mov
pop
pop
lret
lea
cmp
movsb
and
mov
ja
lods
cmc
stc
or
mov
dec
jo
shl
cmc
jl
loope
jle
in
sahf
adc
mov
arpl
sbb
decb
iret
rorl
out
neg
or
lret
scas
cwtl
addl
push
test
mov
push
flds
xor
pop
adc
cmp
xchg
shr
pop
dec
repnz
pop
arpl
pop
ljmp
mov
inc
push
in
push
psubsw
xchg
adc
pop
push
enter
arpl
imul
mov
pop
sub
cmp
add
in
repnz
pusha
cmp
cwtl
xor
pop
xor
sub
cmp
loop
jnp
in
xor
dec
in
xlat
xchg
test
add
add
xor
mov
sub
mov
fcomps
pop
push
dec
mov
mov
popa
stos
and
sbbl
sbb
xchg
mov
sub
test
enter
pushf
dec
ficomps
pop
aas
into
jae
inc
push
jl
fsubl
xchg
push
lcall
test
mov
jl
aam
mov
mov
push
bound
sbb
hlt
loop
pop
fnstsw
xor
sub
mov
ficoms
loop
cmpsb
fiadds
jge
and
push
adc
scas
mov
aam
dec
hlt
mov
push
imul
mov
ficoml
cld
lret
mov
push
xchg
dec
mov
cmp
int3
adc
call
std
lds
or
leave
pop
adc
push
dec
pushf
pushf
dec
in
das
or
mov
dec
xchg
roll
inc
shll
inc
add
cmpsb
fnstenv
int3
sbb
or
mov
jb
mov
mov
insb
out
fildll
fucomip
hlt
mov
inc
imul
mov
les
or
or
incb
jns
cld
push
dec
lods
sub
scas
cmpsb
mov
pop
push
xor
aad
inc
push
into
roll
pop
inc
in
jnp
addl
lds
inc
mov
sar
shll
mov
shlb
xchg
test
sub
xchg
lods
loopne
jne
xchg
cmp
icebp
sub
ret
pop
into
clc
push
add
into
mov
and
pop
push
xor
push
inc
or
xchg
jge
fcmovnb
sbb
add
jbe
ja
js
jno
push
sbb
and
mov
mov
xor
mov
mov
shrd
shr
mov
mov
mov
shll
xor
mov
or
mov
mov
mov
or
jmp
repz
mov
pop
pop
lods
xor
into
lods
pop
mov
adc
adc
adc
push
xor
sbb
lock
js
inc
or
fucom
fwait
xor
cmpsl
out
cltd
test
neg
lods
or
cmp
adc
sbb
and
cwtl
sbb
xor
xor
sahf
popa
add
popf
add
pop
inc
adc
and
in
call
or
lods
subl
adc
cltd
fnstcw
jbe
das
lcall
lods
fnstsw
ret
xor
sub
mov
pusha
ja
insl
movsb
scas
jl
inc
or
addl
mov
movsl
pop
subl
inc
xor
inc
out
ja
push
pop
lea
std
data16
cmc
mov
push
ja
arpl
outsb
rorb
cmp
scas
lahf
data16
arpl
mov
ss
mov
sti
aas
adcl
test
ljmp
pushf
inc
xchg
jne
repz
dec
or
iret
add
sub
mov
push
dec
in
dec
mov
add
pop
repnz
ss
sbb
shr
cmp
daa
inc
ss
xchg
mov
push
sbb
mov
popa
imul
mov
push
clc
out
push
sbb
test
jp
sbb
xchg
ret
dec
add
jl
or
and
push
lods
mov
mov
lock
jo
adc
arpl
jmp
xchg
stos
pop
mov
js
cmpsl
push
add
nop
rcr
add
int3
int3
adc
xlat
icebp
jg,pt
xor
mov
and
cmp
xor
daa
pop
int
dec
fcoms
fcoml
movsb
movsb
push
add
sbb
orb
dec
ja
adc
jno
ret
cwtl
mov
pop
pushf
test
push
mov
mov
jp
and
xchg
and
scas
or
ljmp
cmp
in
inc
pop
and
iret
negl
mov
roll
mov
or
repz
lods
fs
leave
leave
jns
lods
orl
jns
jae
dec
mov
lea
mov
in
dec
mov
jb
dec
nop
lahf
jb
xor
dec
insb
xchg
rcrb
and
push
hlt
and
mov
test
add
ficompl
lods
xchg
dec
xor
and
rcrb
mov
es
jb
mov
jns
pushf
xchg
mov
rolb
fidivrl
fildl
jl
fimuls
shrl
out
aad
jo
mov
dec
int
sub
ficompl
pop
cmp
iret
pop
lock
fsubrp
pop
xor
insb
pop
pop
mov
push
inc
push
lcall
cmp
pop
aam
dec
shrb
out
add
push
fisubs
adc
jae
jo
lret
mov
mulb
repz
scas
out
arpl
test
pop
in
je
imul
pop
lods
add
pop
lcall
add
es
lret
and
aad
mulb
ret
xchg
push
popf
inc
mov
xchg
add
ss
xor
cmc
test
mov
lcall
lret
pop
insl
sbb
cmp
dec
into
add
pop
pop
xlat
fs
lahf
imul
gs
jbe
xchg
cmp
inc
cwtl
cmp
jne
mov
cmp
je
mov
mov
mov
mov
lea
mov
mov
mov
mov
mov
shrd
mov
mov
xor
shr
jmp
mov
push
jle,pt
imul
shrl
adc
jge
xor
add
xchg
cwtl
cs
icebp
dec
insl
cmp
inc
dec
mov
push
scas
mov
in
ds
jmp
je
xor
pop
popf
enter
push
xchg
mov
mov
orl
rcrb
roll
sbb
pop
xchg
and
shl
mov
pop
mov
or
lea
xchg
and
xchg
std
mov
mov
xorb
sub
ja
adc
inc
jge
call
dec
add
xor
movsb
dec
add
jl
jne
push
mov
mov
or
into
mov
fcoms
rolb
lock
ja
lret
fdivr
inc
cmp
push
xor
shlb
and
cmp
stc
dec
add
popa
jp
or
xchg
pushf
add
mov
imul
jl
imul
or
in
push
lret
xchg
cmp
stos
sbb
cli
cmpsl
js
fiaddl
add
shll
pop
lds
int
lahf
sub
neg
jmp
inc
es
repz
sahf
int
out
push
mov
imul
nop
add
fcoml
fdivrl
dec
lock
mov
adc
andl
outsl
cmp
pop
call
jae
test
pop
icebp
xchg
fdivs
cmp
xor
push
dec
mov
inc
xor
inc
movsl
bound
or
pop
and
int
push
pop
xchg
aaa
xor
leave
cmpsb
bound
inc
mov
ret
sub
in
pop
add
pop
andl
test
outsb
push
int
pop
ljmp
out
aam
mov
sub
sub
test
ds
and
scas
push
mov
mov
loope
xchg
push
cmpsw
jo
push
and
inc
push
xchg
loope
and
stos
mov
fwait
push
cltd
pusha
jl
xorb
sarl
std
rorl
mov
push
jl
dec
rcll
xor
xchg
dec
data16
jl
inc
inc
popa
cmpsb
jmp
dec
mov
nop
sbb
stos
adc
and
sar
dec
cmp
mov
dec
insb
stos
push
stos
out
push
mov
and
icebp
aad
mov
fwait
pop
add
or
sub
xchg
sub
stos
cli
cmp
fmuls
mov
or
fldenv
mov
imul
pop
cmp
jg
mull
push
sbb
mov
and
rorb
daa
cmp
xchg
lods
aas
outsl
rcrb
xor
movl
lahf
xchg
xorb
and
or
aam
pop
push
push
icebp
fcoml
or
mov
iret
or
sub
mov
das
cmovle
clc
cmp
dec
movups
pop
cwtl
andl
dec
push
lods
loope
je
jo
sbb
pusha
test
hlt
rclb
push
push
lea
sarb
mov
push
clc
mov
rol
stc
sar
lcall
mov
jecxz
and
test
jbe
stc
adc
nop
outsl
jge
lods
mov
xor
fs
mov
jae
push
add
mov
pop
imul
or
cmp
subb
jns
popf
movsl
add
rol
loopne
or
mov
mov
mov
xor
xor
xor
shld
mov
mov
mov
mov
shl
mov
cmp
jne
mov
cmp
jne
mov
mov
mov
jmp
mov
sbb
sbb
out
stos
pop
enter
mov
adc
dec
or
call
cltd
lods
and
jne
outsb
fwait
and
cmpsb
lcall
mov
adc
rol
add
sbb
dec
scas
out
cmp
sub
add
fwait
sub
add
add
sub
movsl
ficoml
fnstenv
xchg
je
mov
mov
in
sbbb
inc
ss
xchg
add
push
test
lahf
fdivrp
mov
lahf
mov
push
add
push
mov
ror
xor
jp
leave
int
push
call
sarb
inc
fcoms
cmpsl
decb
xchg
iret
dec
xor
or
das
jmp
and
mov
addl
and
filds
inc
mov
add
scas
dec
pop
jmp
adc
test
cmp
or
xchg
cmp
sbb
das
cs
jno
repz
push
mov
popf
adc
xor
inc
stos
and
loop
sub
pop
fcomps
js
inc
mov
dec
xlat
inc
in
and
mov
sbb
pop
mov
inc
mov
adc
lock
nop
fimuls
cmp
and
adc
xchg
test
add
lock
subb
mull
dec
pop
cmp
mov
push
jne
jb
cmp
call
pop
sbb
mov
into
mov
out
xchg
pop
stos
jno
cmpl
mov
xor
out
test
fcmovnu
pop
loop
mov
add
in
push
vandnps
bound
xchg
push
mov
loopne
repnz
lods
lahf
xchg
xchg
sbb
stos
imul
pop
adc
out
inc
xor
ljmp
cmp
js
and
xor
mov
inc
mov
and
das
or
dec
adc
dec
jns
jge
jo
lods
sbb
xor
cmp
fbld
fsubrs
ljmp
pop
outsb
movsl
repz
cmp
out
mov
cmc
mov
and
out
mov
imul
pop
in
clc
sti
pop
adc
fisttpl
push
nop
aam
lods
rclb
outsl
sub
inc
lahf
test
jg
jb
adcb
shll
bound
xchg
xor
cld
sahf
xchg
das
ljmp
jmp
pushw
inc
iret
mov
xchg
stos
je
jmp
addr16
xor
pop
pop
xchg
shlb
pop
scas
ret
inc
in
das
add
adc
mov
call
ljmp
aad
mov
xor
jecxz
std
pop
aam
mov
ror
lcall
inc
sbb
cli
stos
inc
pop
cltd
pop
xor
mov
xor
std
mov
push
and
sbb
pop
xor
mov
mov
mov
fsts
mov
sub
xor
mov
orl
push
mov
adc
popl
in
cltd
insl
push
xor
imul
jg
aaa
outsb
cmp
sahf
ss
subl
sub
mov
xlat
into
adc
icebp
arpl
mov
jne
push
out
cwtl
push
sub
inc
mov
dec
adc
xchg
push
push
test
push
add
ja
imul
mov
shrd
shr
mov
mov
mov
mov
xor
or
mov
shl
mov
mov
or
mov
push
pushl
push
push
call
mov
mov
andl
shrd
shr
shr
xor
push
xor
mov
mov
mov
push
push
push
call
shld
mov
mov
or
mov
shl
or
jmp
adc
jmp
repnz
ret
push
cmp
mov
int
adc
mov
std
call
fwait
test
rcrb
mov
pop
mov
lods
push
movsb
sub
out
and
jb
jns
cs
leave
jmp
fsubrl
sbb
mov
or
mov
fisubs
xchg
dec
insb
inc
mov
mov
test
pop
pop
mov
call
fs
jo
imul
push
mov
jl
mov
inc
les
sub
push
xor
mov
pop
mov
arpl
ret
cwtl
jmp
xchg
xor
dec
pop
test
pop
xor
mov
mov
dec
inc
push
cmp
mov
xor
dec
out
lahf
jbe
fdivl
dec
mov
pop
and
ret
mov
lret
inc
fisubs
pop
clc
push
movsl
mov
and
std
fwait
adc
dec
jg
out
add
xchg
cmpsb
stc
mov
lods
sti
or
add
call
xchg
lods
jge
idiv
xor
pushf
mov
push
sahf
lea
arpl
cltd
jbe
lret
nop
xor
xchg
xchg
push
inc
jbe
lds
pop
push
jmp
cli
cwtl
cld
mov
inc
mov
pusha
fwait
jb
and
in
push
subl
push
xchg
jmp
push
sub
int
jns
cwtl
push
out
lock
mov
adc
fstp
pop
js
inc
ja
mov
pushf
mov
mov
push
cmp
sub
lcall
xchg
in
adc
hlt
sarl
mov
mov
sbb
mov
cmp
ljmp
push
aaa
push
push
pop
and
or
loopne
imul
call
roll
sahf
dec
int
mov
fcmovnb
out
int3
shlb
sub
xchg
das
insl
mov
xor
outsl
enter
xor
movsb
cmp
mov
fsubl
rorl
lret
pop
xchg
loop
filds
inc
mov
in
push
inc
adc
push
out
ljmp
pop
inc
sahf
xlat
jnp
es
cs
lea
sarb
jle
mov
addr16
addl
ljmp
sub
jne
das
lcall
jp
dec
ss
inc
mov
jb
pushf
cld
out
cwtl
ja
sub
test
roll
dec
jecxz
inc
inc
stc
jo
popf
push
cmp
jl
in
out
fildll
xor
out
mov
jnp
call
mov
mov
int3
pop
cmpsb
fidivs
xor
xchg
insb
mov
sbb
add
loopne
mov
cwtl
jge
mov
sarb
cmp
test
jecxz
lock
stos
in
push
loope
imul
pop
mov
push
cmpsl
mov
sbb
cs
cmpsb
pop
in
adc
mov
out
sub
cmpsl
xchg
outsl
or
lds
fnstcw
shlb
cmpsl
movb
mov
mov
sub
push
add
aad
dec
std
mov
in
cmp
dec
dec
mov
or
ror
push
cltd
lcall
aam
rorb
hlt
ret
lret
daa
cmpsb
xchg
mov
xor
xor
xor
xor
mov
mov
jmp
mov
jmp
or
jge
pop
push
dec
cltd
cmc
leave
lcall
xchg
adc
int
adc
enter
cli
add
or
idivl
scas
aaa
sub
ucomiss
jne
lods
jbe
adc
mov
hlt
in
lds
and
sahf
pushf
push
cmpsb
rolb
mov
cmpsl
pop
pushf
outsb
lds
int
mov
xor
lock
lock
clc
sbb
push
inc
wrmsr
and
mov
and
scas
jnp
mov
jl
repnz
push
stos
mov
add
fistl
addr16
inc
cli
pushf
add
push
aad
lds
rorb
movsb
out
sbb
dec
jle
add
sub
xor
cmp
or
sbb
dec
cs
bound
filds
add
mov
fisttpll
xlat
push
inc
in
repnz
lret
pop
fwait
lods
lret
xchg
adc
xor
or
sbb
ficoms
aaa
or
xchg
cmc
dec
imull
sbb
sub
loopne
xchg
movsb
dec
cmc
aam
pop
add
adc
jns
int3
dec
mov
iret
mov
mov
and
dec
mov
cli
add
test
enter
xor
imul
or
mov
pop
repnz
add
js
pushf
mov
dec
test
cwtl
lahf
rep
sbb
and
mov
ret
jecxz
pop
xchg
test
movsb
mov
push
test
pop
mov
scas
fwait
ret
sub
pop
das
mov
popf
xchg
dec
mov
clc
addr16
push
int3
inc
cli
xor
je
lods
jbe
icebp
int
ss
sahf
ds
out
mov
sti
mov
xchg
lock
out
add
or
jle
cmp
lock
add
push
dec
test
add
cmp
loopne
shrl
ljmp
sti
jp
sarl
inc
xchg
rorl
sbb
xchg
js
inc
xchg
pop
fisttps
test
hlt
dec
out
aaa
sbb
subb
outsb
mov
addl
and
cmpl
sbb
cmp
sbb
in
cmp
add
ret
mov
into
lahf
add
inc
fisubrl
sub
pop
xor
shlb
hlt
jno
sarl
popf
dec
dec
stos
cmp
jns
jp
push
sub
add
pop
lds
hlt
or
or
jecxz
in
pop
shll
out
cwtl
cmpsl
jnp
fcmovbe
sub
pop
push
cmp
imul
ret
std
push
fistpl
sbbb
dec
lods
mov
pop
mov
mov
sbbl
mov
add
jmp
sbb
stc
not
lods
pop
mov
fmull
jnp
negl
nop
fxch
pop
jbe
xor
jecxz
pop
clc
inc
mov
mov
pop
pusha
movsb
inc
mov
lods
int3
and
xor
xor
mov
gs
xchg
mov
xlat
sbb
xor
je
stos
lock
sbb
les
cmp
ret
xchg
mov
or
inc
ljmp
out
cmp
mov
paddb
in
or
mov
xchg
adc
cmp
mov
ficompl
adc
ljmp
mov
loopne
mov
fbld
inc
cld
mov
mov
mov
mov
mov
mov
movzwl
cltd
xor
xor
shld
mov
mov
mov
mov
shl
mov
cmp
jne
mov
cmp
jne
movl
mov
movl
mov
movl
mov
movl
mov
jmp
stc
sub
xor
mov
lcall
adc
movsb
loop
or
les
or
movb
aas
add
sahf
inc
lods
mov
push
xlat
fsubrs
jae
cmp
xchg
add
mov
xchg
push
adc
mov
insb
mov
pop
jg
xor
out
lds
add
inc
pop
jae
push
rol
sub
xor
fxch
frstor
movsb
sub
jmp
orl
aaa
xchg
jns
test
dec
and
lea
icebp
cmpsb
mov
jnp
int
or
xor
jo
jnp
pop
insl
sbb
xor
out
gs
les
add
scas
inc
jne
adc
push
or
xor
ja
pop
aam
js
xchg
sbb
ret
xorb
push
cltd
gs
imul
pushf
movsb
jne
dec
ljmp
imul
icebp
movsl
push
and
dec
and
fcompl
jmp
shrb
or
hlt
or
sbbb
or
insb
mov
fnstenv
fdivrs
mov
sbb
and
or
stos
cmp
loope
xor
es
pop
das
push
cltd
jae
jnp
fsubrl
bound
dec
dec
leave
mov
dec
daa
stos
mov
xchg
xchg
dec
push
aas
movq
and
pop
inc
mov
mov
sbb
movsb
or
aam
inc
in
cld
inc
mov
mov
or
add
xor
cmp
loop
xchg
je
mul
dec
nop
es
andl
leave
fdivrp
pop
xchg
cmp
sbb
or
popa
imul
add
enter
jae
xor
outsb
roll
pavgb
pop
xchg
pop
repnz
test
pop
sub
je
daa
ds
mov
inc
and
or
inc
xor
or
out
or
ret
inc
test
iret
rclb
xor
or
lock
test
xor
jle
or
inc
fwait
xorl
fisubl
outsb
in
in
pop
mov
fwait
xchg
in
fst
mov
push
and
loope
fnstcw
sbbl
mov
in
sbb
outsb
lret
or
out
hlt
mov
jp
or
into
cmp
adc
inc
jp
in
jno
push
loop
pop
lret
xor
sbbb
outsl
cmpsl
lods
inc
addr16
xchg
test
fistpll
jne
mov
lret
inc
ret
mov
sbb
sub
xchg
cltd
lods
iret
nop
pop
loop
ja
lea
scas
sub
xchg
add
pop
imul
leave
push
dec
outsl
lods
inc
pop
js
sub
cld
pop
fwait
dec
sbb
pop
outsb
fnstcw
cmp
or
pop
ret
stos
mov
jno
mov
cmpb
arpl
inc
je
out
xor
hlt
pcmpeqd
lahf
sub
xor
out
jne
aad
popf
cmc
or
or
push
lock
adc
xchg
cmc
mov
insl
ret
mov
jle
lock
xor
ret
lret
enter
lcall
repnz
aad
mov
shlb
or
sti
pop
mov
adc
popf
mov
fadds
lock
push
imul
lret
jae
pop
mov
in
xor
dec
pop
sub
mov
xchg
sbb
sub
pop
jmp
jnp
es
xor
mov
shrd
shr
mov
mov
xor
shl
xor
or
add
mov
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
mov
jmp
dec
popf
shll
pop
das
popf
ffreep
mov
cmp
adc
int
adc
rorb
fsubp
stos
mov
cmp
inc
push
cwtl
adc
mov
push
jno
or
or
aas
push
fldenv
div
repnz
xchg
push
jecxz
cmp
or
push
cld
xchg
fs
push
adc
xor
pop
sti
mov
jbe
xor
data16
in
pop
data16
arpl
test
shll
rcll
sbb
js
jl
and
sub
mov
outsl
xchg
sti
jle
mov
cmp
enter
mov
pusha
push
xor
xchg
sub
aaa
pushf
loopne
xchg
cmp
test
ja
xchg
incl
std
sub
loope
loop
xor
and
xchg
push
add
mov
jmp
cmp
testb
mov
stos
sahf
mov
add
mov
int3
jecxz
bound
mov
xchg
pushf
mov
adc
cltd
out
ds
daa
lret
inc
call
out
jle
pop
sbb
ret
hlt
push
fiadds
fmul
lods
aas
insl
filds
or
outsl
xchg
aam
cmp
push
mov
adc
orb
push
sbb
cwtl
cltd
cwtl
add
push
into
pop
icebp
int3
push
cld
and
pop
add
in
ljmp
mov
dec
cmpsb
test
aas
xor
fcomip
pop
jne
into
sbb
push
push
lret
jmp
mov
data16
jb
pop
idivl
shlb
cmp
ja
add
mov
ljmp
push
xchg
daa
mov
cmc
rcrl
ror
push
test
pop
add
pop
repnz
dec
inc
mov
jge
mov
les
xchg
jg
dec
dec
rol
xchg
shlb
mov
pop
rcrb
pop
in
or
xor
scas
cmc
xor
pop
push
mov
sahf
mov
and
mov
mov
add
mov
dec
lea
rolb
aas
jl
adc
cmp
sahf
pop
pop
loopne
sub
shlb
xor
lcall
ret
icebp
jg
inc
lock
pop
or
mov
push
push
nop
adc
int
pop
adc
xchg
adc
pop
lds
mov
jb
push
mov
in
insl
es
push
add
push
xchg
not
adc
lods
faddl
stos
ja
fs
orl
gs
push
mov
jecxz
aaa
push
or
xor
push
daa
mov
mov
mov
xchg
ret
insl
test
sbb
jp
fists
dec
fiaddl
mov
xchg
mov
mov
jp
xchg
sbb
out
stc
mov
repz
sub
in
std
pop
outsl
dec
leave
shlb
add
jp
into
cmp
and
jae
mov
fdivrs
dec
inc
repnz
push
lahf
test
enter
cmp
or
mov
icebp
in
adc
sarl
cld
dec
test
fistpll
push
push
and
dec
mov
pop
xchg
or
inc
jbe
sahf
ret
stc
cs
fs
jno
cmp
iret
das
dec
jp
inc
pop
xor
mov
push
and
cmp
push
inc
push
mov
rcrb
dec
out
dec
xchg
or
dec
mov
xlat
adc
pusha
insb
arpl
and
mov
xor
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
add
mov
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
mov
mov
or
mov
mov
shrd
shr
mov
mov
xor
xor
or
add
shl
mov
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
mov
mov
add
mov
mov
shrd
shr
mov
mov
xor
shl
mov
xor
or
mov
shrd
add
xor
shr
mov
mov
xor
or
mov
or
shl
mov
mov
xor
mov
xor
shrd
shr
mov
mov
mov
mov
xor
or
mov
mov
mov
xor
xor
mov
mov
mov
shrd
shl
or
mov
mov
mov
shll
mov
mov
mov
xor
or
shr
or
cmp
jne
cmp
jne
jmp
mov
mov
mov
mov
xor
xor
mov
mov
shrd
shr
mov
mov
mov
mov
xor
or
mov
shl
mov
mov
or
jmp
imul
imul
cmp
js
jl
adc
adc
adc
xor
out
sub
jo
inc
push
inc
mov
jge
sbb
in
xchg
jno
stos
in
icebp
inc
push
cmc
jo
sub
add
pushf
call
mov
rcrl
push
fistpl
xchg
out
adc
and
outsb
idiv
jnp
repz
enter
dec
fnstenv
js
lret
out
jle
xor
or
or
mov
pop
pop
std
lock
or
out
mov
fwait
scas
or
inc
bound
pusha
test
jmp
jle
in
pushl
pop
mov
fiadds
mov
xchg
pop
in
scas
icebp
dec
add
dec
loopne
push
dec
sahf
andb
mov
or
jnp
adc
and
mov
xchg
scas
aas
mov
pop
jmp
dec
test
sub
andb
mov
inc
pop
outsb
add
movntps
xchg
add
sub
btr
fs
jmpw
mov
mov
repz
sahf
jp
pop
mov
sub
roll
fildl
jnp
cmp
into
push
pop
insl
rolb
jbe
push
mov
ja
xor
push
inc
pushf
loopne
or
xchg
js
jle
es
lret
stc
mov
andl
pop
and
stos
sub
dec
lret
mov
and
add
inc
icebp
add
mov
fdivs
xchg
cmp
mov
pop
sahf
sub
gs
je
fmul
xchg
aam
xor
adc
jns
mov
jl
movl
ss
push
dec
or
js
mov
ja
aam
xor
mov
add
mov
sbb
inc
jbe
xor
outsl
push
inc
nop
cltd
arpl
mov
pop
xchg
movsb
mov
cmp
out
scas
dec
fwait
daa
inc
pop
push
rorl
cmp
shrl
dec
mov
cmp
popa
in
jns
call
scas
roll
mov
in
lahf
dec
xchg
test
insb
mov
out
in
sbb
sub
in
in
xlat
add
fcmove
xchg
scas
and
pop
mov
push
mov
mov
lock
clc
xchg
mov
dec
pop
je
sbb
pop
movb
sahf
jb
fldenv
arpl
out
sbb
xchg
or
jbe
xchg
cmp
inc
cmp
pop
push
jle
das
ja
jmp
sub
mov
xor
shll
andl
das
inc
xor
adc
movsb
lret
imul
lea
movsl
fiadds
sub
fcmovbe
cmp
sbb
dec
mov
xchg
sbb
ficomps
mov
mov
shrl
sarl
push
cmp
into
int
repz
inc
out
cmp
sbb
repz
les
ljmp
sub
push
sub
into
inc
pop
fists
add
mov
cmp
ficoml
cmc
mov
pop
int
or
mov
jle
xchg
fsubrs
lret
add
inc
test
jl
pop
sub
mov
mov
jmp
data16
ret
xor
sub
cmp
rcl
movups
lock
jo
arpl
adc
add
mov
push
add
pushl
push
push
call
mov
jmp
xor
sbb
stos
gs
sub
je
adc
adc
adc
jle
out
jae
pop
in
cmp
cmp
ficomps
mov
popf
cmp
lret
push
adc
roll
sbb
pop
mov
fdivr
call
mov
lret
inc
arpl
test
sbb
subps
mov
push
negl
sahf
push
and
or
xchg
imul
jl
int3
stc
in
inc
icebp
xor
sbb
insl
jns
dec
lret
incl
pop
lret
push
sub
cld
mov
mov
dec
mov
cmp
and
and
pop
push
arpl
dec
add
add
pop
mov
mov
stos
sbb
inc
dec
xlat
aam
pop
sbb
test
jo
add
push
stos
jb
mov
out
lods
mov
int3
jl
xchg
pop
mov
adc
mov
xchg
and
gs
stos
jo
pop
jo
sbb
in
pop
clc
sbb
inc
das
inc
mov
fisubrl
cld
std
or
lahf
in
leave
lret
mov
lea
mov
popa
pop
xchg
lds
fwait
mov
dec
inc
mov
movsl
repz
fcmove
lods
cmpsb
aam
mov
sub
cmp
inc
or
nop
mov
pop
bound
movsb
aaa
mov
insb
sub
mov
pop
xor
and
pushf
divl
hlt
mov
popa
jge
sbb
mov
mov
inc
xlat
fwait
and
inc
jmp
lea
lret
rcll
sub
adc
clc
inc
dec
sbb
mov
push
mov
sub
scas
push
add
imul
adc
movsb
icebp
pop
fidivs
ret
bswap
ret
pop
xor
insb
mov
out
jbe
mov
mov
nop
pop
stc
mov
movsb
push
ficoms
icebp
sar
adc
shl
sub
or
adc
insl
addr16
adc
movsb
xchg
xchg
out
dec
fcmovne
daa
mov
mov
xchg
or
inc
mov
add
movb
or
dec
jbe
cmp
movsl
xchg
popa
je
aad
pop
lock
out
out
fisubs
xchg
inc
pop
pusha
pop
test
adc
pop
cmp
push
mov
faddl
add
vminsd
and
js
pop
lret
dec
xor
inc
imul
pop
mov
int
arpl
call
gs
jmp
mov
jo
fcoms
mov
sub
mull
int
and
aaa
pop
mov
jne
outsb
adc
xor
lret
gs
mul
or
shrb
roll
and
inc
int3
or
sbb
or
fdiv
bound
lock
stc
adc
push
mov
jns
pusha
cs
dec
out
push
stc
add
mov
sub
out
sbb
mov
out
fwait
sub
push
std
xchg
aaa
pop
cli
fucomip
and
cmp
push
jp
mov
pushf
jl
fst
idivl
cld
in
cmc
push
ss
jge
and
in
add
push
push
inc
push
inc
cs
jae
leave
cmp
inc
repz
dec
push
pop
lds
sub
es
data16
jo
stc
add
dec
fs
cmp
mov
push
mov
andl
shrd
jmp
ja
jle
sub
xchg
mov
sbb
jno
adc
int
adc
cmp
jno
ss
mov
mov
fwait
cmpsl
adc
sub
jb
mov
sbbb
scas
inc
cs
pop
repnz
repz
and
gs
push
cmpsb
mov
sub
sti
mov
hlt
or
cmpsb
or
mov
adc
test
movsb
dec
mov
push
cmp
lret
test
idivb
das
mov
inc
jg
or
pop
mov
fmul
sahf
jbe
jecxz
push
sub
cmp
mov
lret
in
add
adc
add
stc
mov
adc
jbe
xchg
push
adc
rorl
aaa
xchg
icebp
push
test
sub
cmp
lods
inc
push
fwait
outsl
rcll
fdivp
stc
sbb
data16
je
lea
shrb
jno
pop
dec
jns
jmp
popa
aas
iret
out
mov
push
lcall
add
icebp
pop
fisubrs
adc
jne
add
hlt
fs
pop
sbb
add
adc
inc
daa
add
mov
mov
mov
ljmp
shrb
movsl
negb
push
inc
cmp
test
hlt
rclb
lret
aaa
shlb
scas
pop
enter
jp
js
outsl
test
cmp
xchg
lock
adc
ljmp
sub
or
fcoms
pop
or
daa
insb
hlt
lret
inc
cmp
movsl
in
movsb
adc
lods
mov
add
test
loopne
xor
sub
insb
mov
xchg
pop
jns
push
leave
lds
fisttpl
inc
sbb
mov
cmpsl
inc
sahf
lahf
jae
loopne
int3
sbb
rcrb
jle
xchg
push
or
xor
sbb
jmp
cwtl
stos
push
std
mov
sbb
sarb
aam
and
push
xchg
test
push
add
push
push
nop
jp
addr16
xchg
inc
jl
or
jl
push
xor
fldl
test
js
aam
les
adc
pop
push
jbe
sub
sub
or
mov
add
jb
loop
fcmovb
and
arpl
pop
cmp
sub
mov
fwait
cmp
popf
ja
jge
jmp
lods
dec
imul
js
iret
xchg
ja
in
imul
test
add
sbb
fs
adc
jmp
mov
push
stos
rclb
jecxz
imul
jb
inc
imul
xor
in
cmpsl
and
popf
arpl
inc
jnp
mov
inc
ret
sbb
or
jle
aas
cmpsb
inc
inc
inc
das
jle
clc
adc
or
xchg
xor
adc
jne
sub
ror
jne
sbb
call
cmp
rolb
sub
mov
lds
cmp
scas
pop
jge
push
pop
js
and
cmc
jle
inc
stos
mov
lea
outsb
jle
repnz
xor
xchg
inc
insl
ja
pushf
pushf
pop
insb
cmp
fcoml
das
jns
adc
ss
lds
pop
daa
outsl
and
xchg
cmp
shl
xchg
adc
cmc
nop
cmp
aad
jecxz
mov
dec
xor
adc
ret
push
mov
gs
ret
inc
jns
fistpl
sbb
sbb
dec
je
js
xlat
xor
dec
mov
fwait
and
dec
mov
jmp
xor
push
xor
mov
mov
mov
push
jmp
bnd
test
fcompl
lods
and
adc
int
adc
aaa
cmp
xor
pop
movsl
shlb
add
flds
dec
enter
inc
xchg
adc
push
mov
js
fdiv
inc
in
mov
or
cli
fistl
cmc
dec
pop
stos
push
shl
in
pop
push
pop
or
adc
and
pop
jne
mov
scas
int3
hlt
xor
jnp
push
out
or
mov
sbb
cmpsb
stos
mov
dec
aam
movsl
ss
test
mov
iret
in
mov
push
xchg
jne
mov
roll
push
dec
mov
movsl
lea
arpl
fisubl
and
jl
sub
pop
cmp
pop
lcall
fmuls
ljmp
out
and
jp
jp
push
mov
lahf
jns
pop
int
add
mov
push
lds
int3
dec
pop
inc
dec
jmp
test
push
pop
sahf
sbbb
mov
sub
xchg
jns
adc
dec
pop
jg
jmp
cmpl
mov
es
jg
and
add
sub
das
lret
xchg
lret
add
adc
xlat
arpl
cmp
push
cmc
xchg
movsl
pop
pop
pop
lds
popf
repz
pusha
outsb
or
sarl
dec
imul
or
cmp
dec
xor
push
shlb
repz
repnz
clc
call
movsl
cmpsb
lret
add
xlat
mov
sub
orl
rcrb
and
dec
stos
adc
pop
sbb
push
push
pusha
int3
dec
bound
leave
adc
mov
jmp
sbb
test
pop
pop
push
in
test
js
inc
add
mov
pop
adc
fld
mov
inc
xchg
stc
xchg
add
xchg
push
pop
push
jae
inc
sti
fsubrl
sub
cwtl
repz
or
fs
push
mov
lock
pop
inc
repnz
cs
repz
or
in
testb
jg
addl
or
and
movntq
mov
cld
cwtl
into
arpl
iret
push
inc
out
into
adcl
or
cmp
dec
cld
jmp
or
repz
int
in
xchg
int
jns
mov
sarb
push
adc
stos
jne
outsl
int
in
or
lods
xchg
rclb
push
jns
push
sbb
dec
popf
mov
enter
or
adc
out
fistl
jnp
insl
cmpsb
cmp
outsl
sbb
inc
div
cmpsl
cmp
movsb
inc
inc
and
daa
out
add
jo
in
sbb
lds
rclb
fnstsw
pop
fstpt
inc
nop
cs
in
push
push
dec
adc
pop
notl
and
adc
or
js
xlat
loop
ss
je
cmp
stc
ja
rolb
fnstenv
adc
lahf
fwait
and
dec
icebp
pushaw
pop
mov
push
movsb
dec
cmp
push
addl
cli
scas
lret
rcrl
je
pop
imul
into
inc
xor
mov
jge
unpcklps
lret
outsl
inc
push
xchg
loopne
jae
mov
and
or
into
sub
adc
push
out
enter
movb
dec
push
mov
movsl
push
inc
jg
das
aas
pop
loop
filds
out
nop
push
push
call
shld
or
shl
or
xor
xor
mov
mov
mov
mov
mov
xor
xor
shrd
shr
mov
mov
mov
mov
shl
or
xor
or
mov
mov
mov
mov
xor
xor
mov
mov
mov
shrd
xor
shr
shl
or
or
cmp
jne
cmp
je
pushl
pushl
pushl
push
push
call
pop
leave
ret
movl
cmp
movl
jae
cmp
movl
jae
sbbl
jmp
test
sub
sub
test
cmp
fisubs
adc
adc
mov
out
mov
mov
leave
call
into
sbbb
in
lcall
enter
cmpsb
push
or
inc
pusha
mov
lcall
add
int
cld
sbb
xchg
cmp
inc
cli
mov
fs
dec
push
cmp
inc
xchg
jns
insb
lret
cmp
addr16
test
std
fnstcw
and
daa
xlat
test
cmp
push
loope
and
in
pop
in
loop
add
cmpsb
mov
or
adc
xchg
dec
shlb
lds
dec
pusha
fnstenv
mov
jo
mov
cmp
sub
push
in
jmp
add
leave
add
lret
jo
adc
mov
mov
enter
loopne
std
ja
mov
xchg
and
cmp
add
out
push
xor
ljmp
sarl
lcall
adc
outsb
loop
jl
fnsave
push
call
addb
dec
enter
push
lahf
stos
inc
cwtl
nop
dec
dec
lret
sbb
adc
cld
sbb
mov
ret
adc
jne
sub
pusha
and
and
add
arpl
pop
xchg
push
inc
call
fiadds
dec
insb
pop
xchg
cmpsl
jae
add
mov
xchg
cs
leave
imul
cmp
add
pop
int3
pop
aad
leave
dec
loop
ljmp
imul
loopne
mov
test
xor
lods
bswap
mov
pop
repz
push
xchg
push
mov
adc
add
sarb
push
mov
xor
popa
mov
rolb
sbb
into
push
sbb
jae
pop
adc
inc
in
mov
std
inc
in
orb
movsb
lcall
mov
pop
push
popl
xor
inc
xlat
imul
xor
and
test
mov
in
adc
xchg
dec
sbb
notb
push
and
pop
cmp
test
js,pn
mov
call
fisubrs
fld
dec
xadd
insl
out
jecxz
jmp
inc
aas
aam
mov
ret
push
mov
call
sarb
dec
mov
into
cmpb
lret
lcall
cmpsl
sbb
sub
mov
xor
inc
adc
outsb
dec
mov
and
mov
loope
shrb
push
mov
push
repz
std
leave
jnp
adc
movsl
out
aas
scas
mov
pop
xchg
in
shrb
push
aam
push
push
sub
shrl
xchg
or
fnsave
daa
mov
in
test
pop
arpl
xor
stos
jno
icebp
jns
mov
fisttps
mov
add
gs
hlt
in
and
mov
lcall
es
add
mov
sahf
sahf
sbb
repz
cmp
jg
fwait
sbb
and
mov
and
inc
add
andb
int
aaa
repz
lahf
xor
sahf
or
test
fs
and
jb
stos
adcb
xor
pop
push
popf
add
outsl
push
dec
stos
movsb
xchg
lahf
push
pop
push
subl
add
int3
or
popf
pop
dec
push
enter
lret
lds
pop
mov
sbb
in
push
inc
jmp
dec
gs
jne
sbb
lds
lret
mov
das
shrd
movl
shr
ret
movzwl
sub
mov
xor
and
shr
ret
xor
xor
ret
push
mov
sub
add
movl
or
mov
mov
cmpl
mov
mov
mov
movl
jmp
movl
movl
ja
pushl
push
push
pushl
push
pushl
pushl
call
xor
adc
andl
adc
sub
add
addl
movl
cmpl
mov
mov
movl
jmp
movl
mov
jne
call
or
movzbl
sub
mov
and
or
mov
or
xor
mov
or
movl
adc
movl
sub
movl
push
movl
xorl
movl
and
push
sub
movl
sbb
mov
andl
mov
push
push
addl
push
call
xor
mov
mov
movl
push
movl
or
adcl
push
or
xor
xor
push
andl
push
call
or
mov
cmpl
movl
mov
movl
mov
jmp
movl
not
je
push
pushl
push
pushl
push
pushl
pushl
pushl
push
pushl
push
push
pushl
call
orl
notl
adc
mov
sbb
add
and
inc
mov
addl
push
orl
push
addl
push
push
decl
call
cmpl
movl
mov
mov
jmp
movl
jne
pushl
push
call
add
add
adc
mov
xor
add
sub
or
mov
and
mov
mov
or
cmpl
movzwl
movl
movl
jmp
movl
movl
jae
pushl
call
adc
xor
xor
adc
orl
add
mov
add
mov
subl
movl
mov
xor
movl
mov
xor
add
sub
and
movl
adcl
movl
jmp
fcmovne
mov
test
xor
adc
xor
adc
jb
out
sub
push
push
sbb
cwtl
shrb
mov
adc
pop
and
mov
add
imul
aas
mov
inc
scas
cmc
push
cs
push
push
lret
jo
test
push
pop
imul
push
xor
lcall
xor
xchg
pop
out
lods
cmp
sbb
push
mov
xorl
pop
jo
cmp
outsb
push
js
jae
xchg
sahf
jns
sub
cmp
fsubs
inc
push
cmc
jae
aaa
xchg
sti
and
add
std
cmp
mov
adc
mov
jae
mov
cli
adc
movl
xchg
cs
lods
dec
aam
cmp
jl
imul
push
or
pusha
xlat
fcoml
jl
jbe
jb
mov
push
shlb
jge
mov
scas
int
push
and
pop
sbb
adc
or
addb
aaa
jo
fnstcw
cmp
insb
dec
inc
adc
lret
jo
mov
int
and
jb
xor
sbb
pop
add
out
scas
mov
mov
cld
push
adc
and
lock
mov
loop
aam
test
test
sbb
sbb
xchg
dec
cmp
dec
mov
bound
push
sbb
stc
xor
xchg
adc
pop
adc
mov
fidivrs
inc
loop
lcall
popf
loope
adc
and
adc
jae
je
pop
push
push
jnp
xchg
pop
pop
dec
int
shlb
fs
out
fcmove
cs
std
testl
inc
lcall
sbbl
lds
test
lret
xchg
testb
loope
cmp
nop
cld
ljmp
push
sub
shrb
cmc
lock
call
cli
out
sub
push
js
ficoml
cmp
and
lea
pop
scas
cli
or
jg
lock
cli
push
subb
ss
dec
stc
push
pop
push
int3
inc
cltd
cmp
loop
scas
mov
adc
fsubrs
lahf
push
sarb
in
test
mov
insl
mov
add
nop
arpl
sub
enter
enter
scas
sahf
int3
xor
ljmp
adc
xchg
jmp
in
fwait
inc
stos
mov
adc
push
cmp
add
xor
sub
mov
and
fcom
push
test
pop
inc
sbb
and
movsb
cmp
sbb
and
outsb
dec
or
add
xorl
mov
lea
pop
rorl
mov
and
je
inc
in
mov
mov
in
dec
or
pop
sbb
pop
lret
add
mov
mov
jge
ja
movsl
in
jae
sbb
mov
leave
mov
push
mov
in
inc
xchg
dec
jecxz
outsl
mov
fcmovbe
lds
cmpsl
pop
push
mov
mov
cli
repnz
xor
movsb
imul
insb
testb
push
les
mov
call
push
out
push
insb
stos
adc
pop
xchg
in
sub
clc
push
data16
jbe
sub
dec
outsb
add
vcvtsd2si
inc
jb
mov
and
inc
pop
in
xchg
into
mov
sti
mov
dec
mov
popa
int3
mul
cmp
xchg
in
push
and
inc
mov
xchg
push
in
mov
inc
clc
negl
loop
dec
push
inc
movl
cmpl
not
mov
mov
movl
jmp
movl
mov
jg
pushl
pushl
call
add
orl
sub
adc
movzwl
add
mov
mov
sbb
movl
mov
mov
mov
mov
add
adc
or
mov
or
mov
or
mov
or
mov
or
or
cmp
jne
cmp
je
movl
movl
mov
mov
xor
xor
and
and
mov
mov
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
add
mov
adc
mov
add
adc
xor
xor
add
mov
adc
mov
cmp
jne
cmp
je
movl
movl
movl
push
movl
mov
mov
push
push
push
call
mov
mov
push
jmp
in
mov
sbb
sub
jle
bound
xor
adc
fdivs
stos
loop
jmp
loop
les
in
sub
adc
addr16
xor
adc
cwtl
jp
scas
jae
pop
xchg
dec
inc
ret
add
imul
sbb
cmp
inc
sar
cs
xchg
jbe
incb
mov
mov
xor
in
xlat
dec
pop
mov
jmp
sbb
xchg
or
fiadds
inc
lds
mov
test
mov
stos
adc
ss
add
jecxz
jb
aad
rclb
sub
movsl
sub
iret
inc
mov
aas
pop
in
icebp
push
loope
int3
adc
data16
push
sub
aas
lahf
xchg
mov
int
cmpsb
dec
mov
pop
enter
cltd
xor
mov
xchg
in
xchg
cmpsb
mov
xchg
sarb
lahf
xor
aad
sbb
sarb
jnp
pop
fldl
faddl
jmp
dec
lcall
or
jno
sub
dec
xor
cltd
mov
hlt
adc
xor
insl
dec
sub
addr16
and
ljmp
mov
xchg
jle
out
inc
scas
cmpsl
aam
mov
lds
fnsaves
mov
lods
push
mov
xor
xlat
sbb
sahf
stos
inc
adc
mov
mov
adc
fimuls
leave
inc
inc
pop
sbb
dec
add
loope
call
cmpsl
iret
inc
out
mov
jb
sub
nop
lcall
jbe
int3
adc
out
xor
mov
out
push
inc
pop
sahf
xchg
lahf
addr16
push
mov
cmp
push
xor
js
mov
shll
mov
push
push
adc
cwtl
inc
scas
inc
addr16
lcall
mov
jnp
divb
jbe
xor
clc
ret
dec
jo
jecxz
mov
cltd
mov
mov
cmc
sbb
out
std
or
inc
mov
mov
or
and
pop
and
cmp
xchg
lret
ljmp
rcrl
mov
adc
mov
adc
adc
out
ds
mov
and
or
sbb
mov
jecxz
sahf
into
and
shl
fcomps
xchg
rolb
out
test
add
pop
push
or
int3
test
addl
les
jne
cld
inc
inc
call
call
xchg
popf
sbb
jnp
sub
loope
jg
loopne
frstor
xlat
xchg
mov
jl
mov
mov
aaa
jae
adc
test
adc
shlb
inc
mov
fidivl
dec
xor
add
mov
nop
inc
mov
pop
mov
inc
sahf
push
popf
popa
push
xchg
inc
adc
imul
repz
inc
mov
mov
push
enter
dec
mov
and
dec
inc
js
iret
xlat
es
ja
fcompl
iretw
pop
mov
mov
push
mov
sbb
sub
push
sti
cmc
jmp
pop
sbb
fcoms
jnp
push
subl
xchg
fistpll
out
lret
out
aam
push
lcall
ret
mov
jle
adc
mov
js
jecxz
xchg
mull
inc
pop
dec
iret
in
xchg
add
fwait
jo
int3
outsb
clc
mov
mov
xlat
jae
fdivrp
push
xor
sub
iret
lock
adc
imul
jno
mov
int
adc
std
xor
test
shrl
cmp
and
mov
js
or
xchg
xchg
adc
loop
mov
sub
and
pop
mov
addl
and
push
push
call
xor
xor
mov
mov
mov
cmp
jne
mov
jmp
enter
pop
xor
push
push
sub
jle
dec
adc
xor
adc
sub
xor
mov
lods
push
xchg
jmp
out
adc
mov
push
ret
arpl
jle
sub
push
sub
nop
and
jno
outsb
xchg
or
popf
insb
jns
aas
or
jbe
push
jo
jg
mov
pop
nop
push
int
xchg
inc
das
or
repz
into
mov
mov
pop
loope
imul
icebp
pop
iret
movsl
add
call
add
mov
mov
out
and
movsl
andl
movsb
les
cmp
mov
lock
xlat
out
dec
out
jbe
shlb
pop
aad
gs
mov
in
push
outsb
popa
mov
pop
dec
stc
loopne
mov
stos
rcrb
xchg
push
int
aam
sub
lea
arpl
and
std
cmpl
sub
fxch
push
mov
loop
aam
jg
and
outsb
cltd
and
sbb
test
fwait
xor
push
testb
lcall
inc
xchg
test
lds
or
xor
sbbb
xor
push
js
xchg
mov
mov
decb
jae
cmp
mov
bound
das
and
bound
fstl
ficompl
jb
subl
out
lea
mov
in
mov
aad
mov
das
mov
or
jle
inc
mov
pop
hlt
xchg
bound
or
sub
mov
repnz
inc
mov
clc
out
loopne
or
mov
jl
sbb
fiadds
clc
hlt
mov
in
sbb
mov
push
enter
pop
pop
int
insl
hlt
cmp
lret
imul
xorb
mov
xor
cmp
ja
inc
les
cmp
fistpll
arpl
ss
mov
push
inc
cwtl
into
sahf
not
and
jmp
je
stos
ds
in
mov
dec
xchg
sub
sbb
sbb
lods
sub
dec
cs
negl
mov
pop
and
or
dec
dec
sarb
in
test
and
pop
in
mov
adc
jecxz
mov
ret
in
mov
jg
sbbl
shll
orb
cmp
ret
cmp
push
arpl
pcmpgtd
dec
cmpsb
arpl
mov
or
or
push
xor
xor
pop
sarl
insb
mov
pushl
sbb
icebp
add
push
push
jmp
sahf
je
addr16
shr
or
jecxz,pn
enter
mov
das
push
or
xlat
pop
out
lods
pop
shr
shrb
arpl
xor
loope
pop
ja
cmp
xchg
insb
mov
pop
add
lock
mov
inc
cmp
in
outsl
add
js
mov
inc
out
fsts
stos
lahf
sarl
push
fcoml
int3
xchg
int
or
pop
sub
je
ds
int
mov
mov
and
push
scas
cmp
imul
mov
in
fcompl
jns
nop
sub
ret
xor
test
cmc
aas
out
mov
cmp
out
jmp
pop
lret
in
jbe
mov
or
test
mov
push
push
sbb
xchg
fnstsw
js
stos
xacquire
call
lods
enter
push
mov
mov
shr
xor
mov
xor
or
mov
mov
mov
shrd
jmp
pushl
and
push
mov
gs
adc
xor
adc
pop
hlt
pushf
loop
lret
xchg
rolb
repnz
int3
cli
lret
mov
jmp
pop
loope
rorl
loop
sbb
ficoms
pusha
daa
rclb
insb
pop
and
jne
fmul
in
fisubl
in
adc
or
scas
mov
push
mov
sub
or
clc
lea
popf
addr16
adc
fisttpl
rclb
adc
fstl
or
lea
jge
xor
push
mov
je
jo
jp
in
lods
out
pushf
jp
test
out
icebp
jp
add
negl
lock
pop
test
cmpb
and
sbb
xor
add
aas
jno
mov
clc
ljmp
cmp
stos
scas
into
jge
fbld
push
movsl
add
fldt
fstps
and
jb
mov
sbb
fldl
mov
jp
sbb
nop
aas
stos
pop
cmp
rcll
lret
lea
jle
xchg
loop
cmp
or
xor
ret
cmc
xor
fldcw
fdivr
inc
push
pushf
fwait
cltd
sub
xchg
out
mov
clc
xor
enter
mov
call
xor
adc
stos
ret
adc
aas
pop
or
insb
pop
inc
adc
xor
add
sbb
pop
out
stos
subb
imul
mov
int3
inc
inc
cmp
arpl
push
inc
cmp
lahf
daa
enter
jb
outsl
push
mov
sbb
shll
fsubs
mov
mov
jle
test
lret
mov
mov
cmpl
pop
jb
sbb
cmp
pop
ja
add
lcall
mov
sub
rorl
adc
cltd
add
cmp
ret
into
out
sarl
mov
ficoml
shll
aad
sub
jbe
mov
imul
mov
int
rcll
xor
in
test
sbb
fwait
clc
out
test
xchg
bound
push
stos
outsb
pop
add
rcrb
nop
push
int
jbe
pop
jnp
sbb
loope
sub
mov
jne
mov
sbb
push
dec
xchg
add
and
xchg
push
mov
sbb
insb
pop
jmp
loopne
jnp
dec
mov
lret
pop
aam
mov
pop
aad
push
fdivr
mov
jne
addr16
xor
mov
mov
xchg
sbb
xchg
sbb
test
mov
mov
mov
sti
iret
mov
xchg
xchg
mov
mov
in
adc
dec
sbb
js
mov
imul
daa
lock
arpl
test
inc
imul
js
ds
xor
xor
loope
fsubs
mov
imul
inc
sub
pop
lcall
or
jl
add
xor
dec
xor
fwait
push
cmc
cmp
mov
cmp
xchg
add
or
in
sbb
rcr
pop
xor
dec
jl
xchg
and
add
mov
cwtl
xchg
test
push
add
jb
int
mov
cltd
sub
aam
adc
cmp
sub
sbb
adc
inc
les
repnz
shrl
xor
dec
cmpsb
sub
lret
popa
in
shr
mov
mov
xor
xor
or
mov
movb
movb
movzbl
shl
mov
xor
add
push
add
mov
movb
pop
mov
movb
mov
movzbl
cltd
jmp
adcl
dec
in
enter
pushf
lods
jnp
adc
xor
adc
mov
or
fwait
les
outsb
inc
jae
rol
dec
mov
or
inc
arpl
dec
jno
adc
cmc
lret
push
dec
cli
mov
ficompl
ret
push
or
lock
ljmp
in
loopne
js
mov
push
dec
or
in
sahf
cli
xchg
fistl
push
adc
aad
adc
enter
imul
fsubrs
std
xchg
push
stos
inc
xchg
fwait
jp
or
inc
popf
push
cmp
cld
in
ljmp
push
adc
imul
filds
pop
and
pusha
push
pusha
mov
xchg
ja
xor
sub
fbstp
fidivs
decw
pop
mov
or
jbe
sub
aam
cmp
xchg
cmp
jne
and
pop
sbb
popa
shrl
test
or
sbbl
fisttpll
faddp
adc
and
in
sbb
sbbl
mov
adcb
or
adc
or
sub
shll
gs
aam
sbb
icebp
mov
mov
lock
jne
outsb
hlt
push
mov
lods
pop
iret
sbb
inc
mov
outsb
or
pop
xor
scas
mov
and
stc
or
pop
imul
out
inc
out
jo
jns
fldcw
out
and
dec
repz
cli
nop
jne
and
lods
inc
push
pop
push
cld
iret
fistpll
int3
int3
fstpt
int
leave
je
xchg
jg
xor
arpl
push
imul
jo
jo
cmp
pop
fwait
rorb
and
mov
fcmovnbe
jnp
mov
xchg
mov
mov
dec
mov
aad
leave
pop
push
mov
mov
xchg
cwtl
sbb
jg
adc
cmp
pop
xor
aad
cmpsb
loope
add
dec
xchg
mov
out
xchg
bound
xor
test
loope
mull
pusha
into
mov
cmpsl
pop
stc
stc
fwait
mov
inc
repnz
cmp
pop
dec
stc
or
inc
sar
mov
xor
imul
mov
ljmp
pop
lods
push
mov
jge
lcall
sar
bound
outsl
stos
dec
andl
call
addr16
or
pop
cmp
xorb
mov
sti
ljmp
jg
push
insl
frndint
sub
addps
jnp
sahf
push
push
inc
push
ss
sbb
jbe
push
xchg
cwtl
xchg
loope
mov
jo
fsub
pop
cmpsb
sbb
xchg
popa
mov
sbb
lods
push
insl
insb
xor
hlt
mov
dec
test
dec
sbb
ficompl
test
enter
sbb
xor
dec
call
outsb
mov
in
popa
orl
stos
ds
lcall
push
outsb
xor
in
mov
fnstsw
lea
lcall
addb
cmc
or
push
mov
jns
jmp
cmp
das
pop
cmpsb
xlat
mov
adc
mov
sub
lods
lods
mov
pop
fsub
adc
sbbb
clc
clc
mov
in
mov
movsb
mov
ja
lcall
xor
repnz
subl
inc
xor
push
cmp
inc
cmp
jmp
adc
cmp
mov
adc
pop
or
cmpsb
pop
pop
push
mov
add
decb
mov
or
mov
add
cmp
jae
mov
jmp
js
jb
sub
cmp
mov
mov
xor
adc
adc
adc
arpl
lods
fisubl
sub
out
in
sahf
insl
sbb
lahf
icebp
sbb
pop
xchg
and
mov
sub
and
in
sti
sbb
cld
lods
sbb
insl
mov
and
pop
icebp
and
jae
cli
lret
gs
cli
fwait
cmp
in
loop
mov
cmp
mov
sub
mov
jnp
repnz
enter
mov
adc
orb
adc
pop
xor
xchg
loopne
fidivrl
jo
and
mov
dec
dec
cmp
sub
sbb
aad
jmp
jae
decl
pop
mov
mov
xorb
push
jo
fs
jnp
mov
jecxz
mov
push
cmc
push
adc
fadds
gs
mov
mov
bound
je
cmpb
in
mov
orb
ss
ret
aas
sub
xor
adcl
out
push
cmp
push
gs
loopne
cmp
sbb
shr
pop
adc
sbb
jnp
push
aam
sti
fwait
clc
fistpl
mov
cld
enter
iret
cltd
in
jle
test
into
mov
xchg
mov
inc
push
mov
inc
ret
xorb
adc
in
xchg
jmp
fistps
rcr
int3
sub
cmp
dec
bound
mov
pop
sbb
enter
cwtl
enter
mov
test
mov
imul
mov
jmp
pop
mov
mov
lret
lods
adc
mov
lds
and
xchg
jb
fsubrl
jmp
pop
push
mov
mov
adc
cmc
arpl
lods
xchg
cs
inc
sarb
or
js
push
in
mov
int3
cli
clc
dec
cmp
dec
dec
sahf
cmpsb
xchg
sbb
dec
bound
push
daa
test
orl
push
jmp
sub
push
lretw
push
lret
enter
push
xchg
lods
subl
scas
xchg
adc
sub
enter
repz
sbb
xlat
mov
dec
and
scas
add
push
aam
mov
fnstcw
dec
add
xlat
ja
push
sbb
outsl
outsb
sbb
icebp
mov
in
xchg
lea
movbe
fucom
outsl
jg
inc
push
push
leave
or
cmp
jnp
dec
push
mov
and
fists
and
fdivr
movsb
push
or
sbb
inc
insb
std
movsb
les
into
cmpsb
and
pop
negb
pushf
stc
inc
repz
fmuls
adc
inc
jmp
pop
aas
push
shl
jecxz
mov
push
cltd
fdivr
subb
in
dec
jecxz
mov
jno
ds
inc
in
or
cmpsb
sbb
push
pop
sbb
sbbl
cwtl
insl
sbb
xchg
adc
xchg
dec
lea
test
or
fnsave
rcrb
data16
push
fistpll
insb
add
fisubrl
inc
rcr
repnz
test
push
sbb
sub
mov
inc
inc
rcl
mov
stos
or
sub
or
jmp
mov
cmpsb
adc
mov
pop
xchg
je
xor
lods
es
jns
arpl
cmp
cmpsl
dec
or
mov
rorb
fcom
mov
pop
daa
in
pusha
sub
jl
popf
inc
pop
pop
jl
inc
ja
cmp
jnp
test
sbb
mov
shrd
xor
jmp
mov
popa
lcall
push
push
sub
adc
adc
adc
and
inc
xchg
jb
pop
push
in
divl
in
xor
xlat
add
movsl
adc
mov
std
ljmp
lods
cmc
and
int3
dec
arpl
xor
cltd
mov
push
mov
xlat
sbb
sub
jmp
jecxz
mov
stc
adc
mov
loope
icebp
sbb
inc
cltd
lahf
popf
add
sbb
dec
pop
or
outsl
pop
xchg
adc
adc
xchg
pop
andl
lret
pop
outsb
cli
cwtl
lds
lcall
imul
mov
insb
add
popa
ljmp
push
mov
jo
mov
shrb
push
add
xor
std
mov
cmp
sbb
cmp
adc
lods
lret
dec
add
pushf
stc
sbb
jno
imul
aam
lret
push
adc
mov
test
mov
push
push
subb
outsb
fsubs
js
ret
pop
or
mov
mov
cld
cwtl
jnp
ja
movb
add
test
lea
xor
mov
jne
enter
int
add
xor
les
and
and
shl
aam
pop
push
data16
cmc
push
add
dec
lock
pushf
inc
add
pop
inc
add
in
xchg
fcompl
aaa
inc
push
dec
push
ficoml
ficoms
adc
jnp
out
xorl
fstpl
cmp
mov
sahf
stos
mov
xchg
cmp
test
jno
adc
int
mov
mov
stos
mov
mov
scas
push
test
inc
jmp
lods
dec
int3
mov
xlat
xor
xchg
insb
push
add
jb
sub
repz
sbb
push
sbb
inc
popf
ss
fisubl
lret
cmp
sub
pop
mov
pop
popf
adc
fnstenv
clc
pop
mov
gs
decl
rol
stos
dec
stos
xor
or
stc
outsl
jge
adc
clc
and
movsl
call
cltd
lret
mov
xor
int
xlat
sbb
scas
in
popa
sbb
cmp
jg
xchg
cmpsb
cmpsb
shrb
add
ja
dec
aaa
mov
push
jg
mov
cs
lods
ja
sub
jecxz
push
lock
outsl
mov
adc
or
ficoms
mov
pop
or
faddl
jecxz
scas
add
jnp
test
push
lds
xlat
adc
daa
add
scas
jmp
and
jno
ret
inc
inc
dec
push
leave
repnz
mov
aam
mov
cwtl
push
lea
arpl
dec
adc
movsl
jae
dec
call
lea
leave
push
mov
sub
add
aaa
adc
adc
loopne
adc
enter
out
cmpsl
rsm
dec
aaa
scas
mov
scas
pop
pop
pop
add
sub
cli
aam
repnz
adc
mov
test
sbb
movl
sub
fildl
push
dec
lock
loopne
stos
popaw
scas
pop
aaa
mov
mov
stos
pushf
imul
mov
rep
imul
out
pop
in
fbld
sbb
mov
pop
test
and
addb
add
jp
pop
jae
xor
mov
mov
pop
lods
gs
sbb
xchg
jb
sbb
hlt
shl
adc
in
iret
lret
dec
xchg
loopne
cmp
xchg
shrb
and
fcoms
call
push
in
xor
shl
or
mov
pop
leave
ret
push
mov
sub
push
push
push
movl
jmp
test
sbbl
pop
sbb
jle
clc
push
adc
movlps
cmp
mov
aam
push
cmp
dec
popa
cli
sbb
fildll
mov
mov
mov
cwtl
loope
adc
cmc
jnp
add
test
imulb
mov
xchg
push
inc
jp
sbb
dec
out
in
or
mov
mov
jl
pop
sbb
push
jg
or
adc
pop
pop
sbb
xchg
cltd
shlb
mov
in
paddusb
pop
in
mov
sbb
jmp
lret
mov
aas
cmp
mov
jo
cmp
sarb
clc
pusha
sbb
test
imul
dec
xchg
movsl
or
outsl
push
xchg
ljmp
cmp
xchg
mov
or
lret
sbb
pop
and
mov
sub
jnp
mov
cmp
xchg
aam
sahf
mov
aad
or
popa
jmp
cmpsl
ror
fidivs
lahf
mov
aam
xor
xchg
faddl
fucomp
inc
xchg
adc
jge
fdivrs
xor
mov
gs
aad
pop
imulb
cmpsb
push
pusha
dec
vmovapd
mov
lods
pop
sbb
aam
mov
rcl
je
bound
ds
jbe
subb
mov
jo
xchg
lea
sub
outsl
cmp
add
int
mov
xor
out
sbb
mov
mull
mov
popf
mov
push
push
xlat
xchg
loopne
xor
rorl
jp
into
sahf
jle
sbb
cmp
ret
rcll
movl
std
push
xchg
pop
jns
push
es
inc
xor
pop
inc
inc
cmp
dec
sbb
lcall
push
adc
cmp
mov
loopne
jl
or
or
aas
mov
aad
scas
jmp
adc
mulb
sbbl
jne
insb
mov
cmp
inc
cmp
filds
call
mov
inc
cld
es
add
movl
movl
movl
movl
movl
movl
xor
inc
mov
movl
mov
mov
sub
add
add
imul
add
xor
jmp
xchg
add
cmp
scas
insb
xor
js
sbb
adc
movlps
pop
inc
and
fcomps
stos
adc
shl
sub
inc
divl
divl
sbb
inc
mov
jbe
fs
andl
mov
mov
cmp
aad
hlt
cmc
mov
enter
add
ret
int
out
in
test
out
mov
insl
push
mov
ss
es
push
ror
sub
ljmp
mov
pop
push
lret
js
sarb
jl
imul
out
cld
xchg
or
add
movsb
repz
rorl
addr16
and
dec
dec
mov
scas
pop
push
push
fimuls
shll
pop
aas
pop
sub
in
push
iret
mov
mov
ret
lock
repnz
movsl
and
js
push
lods
jl
or
out
adc
aam
xchg
pusha
and
jg
sahf
js
pop
test
mov
adc
test
pushf
aad
bound
xchg
jmp
imull
or
aad
sbb
lret
insb
rcll
or
dec
ret
sahf
daa
in
push
sbb
lea
call
in
jg
xchg
xchg
dec
fisttpll
cmpsl
aam
repnz
dec
jns
mov
sbb
fstpt
mov
and
jecxz
ljmp
outsb
mov
adc
pop
sub
cs
flds
push
ljmp
loop
mov
jne
xor
push
mov
testl
pushf
pop
and
int3
inc
repz
aas
dec
dec
dec
in
fisubl
push
pushf
push
cmp
repnz
pushf
aas
lcall
jmp
cltd
test
pop
mov
shll
and
test
fwait
ss
out
inc
jle
push
pop
cmp
fs
js
clc
dec
and
popf
getsec
std
out
sti
lcall
mov
push
outsb
in
pop
inc
into
push
ss
ja
shrb
cmp
cmp
add
movl
movl
movl
mov
jmp
outsl
or
or
popa
imul
nop
js
nop
lret
sbb
adc
movlps
or
inc
xor
pop
dec
mov
pushf
xchg
ret
nop
insb
mov
popa
xchg
mov
pop
lcall
pop
xor
movsb
pop
mov
xchg
ds
mov
xor
out
pop
hlt
mov
inc
adc
fistl
jne
scas
xor
shrl
and
mov
cmp
mov
adc
stc
bnd
nop
dec
repz
imul
mov
data16
mov
xchg
jp
outsb
jnp
pop
inc
push
fidivrl
nop
shlb
nop
cmc
sti
xlat
stos
mov
out
stc
sub
mov
fidivs
subb
pop
jle
sbb
or
call
xchg
iret
fcmovne
dec
lea
push
push
xor
pop
jl
fsub
adc
jmp
ret
aas
fistpl
sub
popa
sub
in
das
jecxz
pop
cmpsb
dec
and
in
mov
punpckhbw
sbb
add
repz
jl
stos
mov
movsb
cs
inc
addr16
push
add
cmpsl
lahf
mov
enter
cltd
sub
xor
jp
xchg
dec
inc
repnz
hlt
inc
cwtl
into
cmp
fbstp
or
inc
sbb
pop
dec
inc
int
jo
pusha
push
leave
rcrl
out
dec
pop
xlat
pop
sub
mov
mov
pop
xor
push
popa
cwtl
dec
aam
movl
push
clc
push
cmp
inc
dec
popa
add
fcoms
aaa
les
dec
sub
enter
jle
and
xchg
push
clc
mov
add
popf
fadd
push
mov
push
es
in
dec
fucomp
xor
mov
shll
shl
popa
dec
and
push
sti
lahf
sub
int
jo
iret
int
outsb
add
flds
push
and
pop
scas
ljmp
lods
loope
inc
jno
in
call
or
add
mov
and
mov
sub
mov
mov
mov
add
or
sub
xor
sub
mov
mov
mov
mov
mov
and
xor
xor
div
lea
mov
add
mov
and
mov
imul
mov
sub
cmp
jbe
push
pop
mov
mov
movl
movl
movl
mov
movl
jmp
and
cmp
aaa
sbb
bound
sarb
mov
fmull
adc
cwtl
add
fbstp
xchg
mull
call
inc
xor
aad
das
push
mov
rolb
pop
out
jmp
inc
stos
adc
ficomps
lods
hlt
pop
and
mov
aam
aas
nop
or
xor
enter
int
shrl
pop
or
ds
push
out
insl
stos
add
imull
cmc
pop
out
pop
mov
push
jne
push
fdivrl
lret
push
imul
push
aam
pushf
inc
mov
fs
mov
lea
insb
ja
lret
cmp
adc
fnsave
aad
data16
jl
push
push
sbb
clc
int3
je
xchg
stos
sahf
sub
sub
push
xchg
movsb
movsb
sub
repz
clc
xchg
hlt
xchg
or
push
adc
adc
imul
push
pop
push
xor
dec
lods
mov
and
cmp
clc
sbb
cmp
and
test
test
or
or
iret
cmp
or
dec
rcrb
popa
loopne
clc
jne
stos
out
enter
fisttps
or
inc
into
mov
or
out
or
cmpsb
loopne
cmp
push
mov
xor
movsl
or
dec
dec
lds
pop
fs
jno
inc
and
cmp
xchg
rcrb
test
es
cmp
cmc
ss
decl
or
scas
pop
sbb
cmpsl
hlt
xchg
fnstcw
pop
pop
cmc
cmp
mov
or
xchg
lods
adc
mov
aam
ret
mov
add
or
loopne
mov
pop
mov
pop
ja
int
pusha
insl
and
mov
lret
testb
mov
fidivl
or
cltd
addr16
sub
jge
cmpsl
idivb
cmp
pop
mov
cmpsb
subl
js
dec
movsl
popf
movl
xor
movl
mov
mov
sub
div
mov
xor
mov
div
jmp
mov
xor
jns
fldln2
jle
push
icebp
stos
in
adc
adc
movlps
loopne
mov
cwtl
sub
clc
add
inc
lods
mov
stos
cmc
mov
mov
aam
lcall
xchg
stos
fistpl
fists
sub
sub
stos
daa
sti
imul
bound
pop
pop
subl
fcompl
sbb
outsl
popf
sarb
mov
fimull
xor
cld
cmp
loope
sbb
or
les
sti
enter
cltd
push
dec
imul
cld
mov
xor
rcrb
movsb
mov
adc
in
sahf
pop
inc
cmp
jp
jnp
push
inc
and
adc
cmpb
std
loop
adc
push
stc
jnp
dec
cld
std
rcl
and
outsl
add
jbe
addb
xor
push
out
fsubs
mov
ja,pn
negl
jg
mov
fnstcw
out
jecxz
cld
dec
ljmp
mov
jg
inc
ficoml
jl
push
pushf
loop
add
push
pop
xchg
movsb
fbstp
fsubrs
movsb
xchg
lcall
pop
ja
mov
stos
xor
pop
iret
jmp
push
dec
cmp
cmp
inc
dec
sbb
push
jg
jb
lcall
ret
int
jg
out
ficoml
or
inc
cltd
add
rorl
es
lods
xchg
inc
and
test
insl
pop
push
pop
jmp
xchg
and
ss
test
jbe
fwait
inc
int3
push
cli
and
sahf
fst
ja
xchg
setle
daa
mul
aas
xchg
rorb
jge
inc
sbb
push
xor
xchg
adc
fsubr
adc
into
and
cmp
jl
lahf
stos
int
ljmp
test
mov
mov
out
ror
aas
inc
sub
mov
jbe
int3
xor
dec
inc
insb
xchg
xor
cld
test
pop
sub
cli
test
inc
dec
pop
pop
jge
pop
jns
cmpl
fmuls
add
add
push
sbb
loope
jae
mov
mov
adc
fmull
adc
cmpsl
into
mov
and
or
shl
jns
sbb
fxam
js
cmp
test
mov
push
mov
aas
lret
jb
mov
jns
mov
bound
xchg
scas
mov
pop
cmp
gs
movsb
cld
dec
pusha
aad
cld
in
and
or
loopne
pop
bound
lcall
xor
lcall
xchg
popf
loopne
push
inc
outsl
pop
mov
pop
daa
dec
std
ror
dec
cmp
daa
popf
test
add
dec
aam
es
loopne
sbb
pandn
jmp
adc
stc
jg
push
lcall
cwtl
jg
push
push
call
jp
addb
sti
sub
push
xor
pop
or
sub
push
ds
add
insl
rcll
je
jo
push
xor
dec
mov
insb
adc
push
jbe
ret
lret
mov
mov
push
enter
cwtl
lods
sti
mov
jo
lret
loop
into
aaa
jge
pop
pop
xchg
pop
int
jge
jb
sbb
vmovaps
ret
leave
rclb
adc
loop
ja
arpl
cmp
out
aad
jmp
add
test
imul
data16
inc
dec
xor
pop
lret
pop
jo
shr
test
jne
mov
jmp
pop
mov
sbb
sub
aad
jge
fimuls
inc
jo
lods
cwtl
inc
lcall
dec
popf
popa
scas
cmp
inc
jge
adc
mov
or
insb
bound
gs
jp
dec
xor
cmp
jle
lock
imul
ljmp
mov
dec
mov
bound
xchg
push
popa
lahf
icebp
xchg
outsb
test
mov
pop
shr
enter
cwtl
lret
push
sbb
enter
pop
and
shl
icebp
xor
mov
mov
imul
mov
add
div
mov
mov
sub
sub
xor
div
mov
add
cmp
jmp
mov
aaa
cmpsl
sbb
test
cld
sarb
movlps
xor
mov
call
adc
cmc
jmp
sahf
into
cld
out
lea
ds
push
mov
or
mov
inc
js
cmp
jle
cmp
lahf
jmp
aas
jmp
push
roll
push
mov
mov
cmp
fldcw
sub
jge
movsb
cmp
push
mov
dec
imul
sbb
pop
jecxz
in
mov
out
sub
sahf
cli
ds
xchg
cmc
rorl
and
mov
inc
pop
jecxz
dec
or
ds
sarl
dec
pushf
arpl
ljmp
and
push
stos
adc
pop
ss
inc
imul
push
aam
adc
cmp
in
lret
imul
mov
cmp
stos
pop
pusha
lods
adc
lds
stos
push
pop
das
shrb
pop
jmp
cmp
insb
js
in
popf
stos
daa
cmp
pop
lock
push
mov
iret
gs
xor
pop
stc
cmp
jns
cmp
inc
xor
lds
mov
fdiv
sub
loopnew
subb
js
xorb
insl
mov
lds
lret
shrb
xorl
xchg
dec
xor
mov
mov
loope
aaa
stos
xor
add
pushf
insb
cli
and
xor
push
dec
pop
fidivl
xchg
imul
mov
stos
loopne
loope
mov
js
mov
xchg
mov
jne
mov
jno
ss
mov
leave
xchg
jg
sbb
pop
ljmp
fstps
jmp
rcrl
xor
imul
cli
mov
jl
mov
push
sub
push
xor
jl
dec
pop
ss
cli
in
idiv
push
mov
xor
inc
lds
xorl
in
sub
loopne
cmp
add
inc
fdivrl
cmp
add
inc
in
int
add
xor
movl
movl
mov
push
pop
div
mov
mov
mov
sub
mov
mov
imul
mov
xor
sub
add
and
mov
sub
mov
sub
mov
sub
mov
mov
mov
mov
xor
add
xor
and
lea
mov
mov
add
div
mov
mov
sub
xor
jmp
popa
pop
fimull
dec
sbb
dec
neg
mov
inc
push
adc
fmull
adc
cltd
dec
shr
leave
mov
dec
ss
jns
mov
inc
lds
adc
aaa
inc
add
xlat
subl
lcall
dec
test
dec
shll
pushf
inc
and
loope
jo
sbb
jg
ja
mov
mov
push
out
pop
cmp
and
loopne
divb
mov
mul
inc
fidivrl
std
enter
rcll
jle
mov
mov
insl
lret
stos
movsb
in
and
adc
sbb
mov
addl
insb
sub
jns
inc
ficomps
inc
push
mov
dec
aas
aad
add
das
insb
mov
mov
fwait
test
scas
sbb
or
sbb
jb
mov
sbb
loope
add
lret
into
or
push
sbb
fsub
mov
xor
inc
fists
ljmp
adc
mov
outsl
cmp
adc
mov
out
out
jle
aam
movsl
jne
mov
fsubl
adc
sub
xor
mov
stos
inc
and
jno
push
or
xchg
lcall
mov
lret
mov
nop
adc
sub
push
loop
pop
jae
bnd
and
lods
sbb
xlat
arpl
cmovo
sbb
adc
fs
or
fidivrs
mov
enter
int
jb
push
mov
sbb
lods
cwtl
and
dec
adc
into
rorb
cli
xor
dec
cmp
mov
xor
jle
lret
repz
int
in
push
pusha
push
fisubl
fistl
cmp
cmp
test
lea
push
xchg
sub
ffreep
push
les
push
xor
mov
out
int3
mov
rcrb
ficompl
mov
mov
pop
movsb
lea
push
aam
maskmovq
testl
xor
xchg
jg
pop
lea
jbe
adc
jns
div
add
cmp
jb
jmp
add
cmpsb
pop
sahf
aaa
xor
mov
mov
push
add
adc
movlps
jae
cmp
inc
mov
lcall
add
movsb
addr16
lods
or
and
sbb
xchg
sbb
adc
sarl
push
xchg
push
int3
add
test
lock
mov
stos
imul
sub
clc
dec
mov
push
call
movsl
out
imul
call
sahf
dec
decl
push
xchg
fbstp
mov
push
andb
or
loop
out
pop
push
and
leave
test
mov
lods
aam
sarl
cmp
gs
inc
adc
inc
scas
or
cld
dec
dec
lock
ss
jo
cs
xor
jge
push
enter
popf
sbb
pop
xor
int3
mov
stos
push
jmp
pop
pop
pusha
mov
or
stos
icebp
xor
bound
sbbb
mov
ss
mov
imul
cmp
das
outsb
xchg
adc
pop
popa
scas
icebp
pop
xchg
les
mov
xor
xor
jns
aaa
imul
xchg
xor
sub
outsl
out
in
push
ja
jb
sub
out
pop
sub
pop
iret
scas
jl
or
push
fisttps
mov
ret
repnz
pop
int
mov
lods
jp
shlb
pop
adc
adc
xchg
ja
inc
xor
mov
cld
adc
mov
in
ret
je
add
lret
fwait
lret
mov
or
xchg
or
add
mov
icebp
out
js
loopne
adc
push
fnsave
pop
push
imul
and
imul
jns
into
cmc
js
inc
jae
xorl
mov
cld
clc
fwait
loop
in
sbb
test
mov
cmp
test
fsubs
xor
sub
cld
jns
gs
mov
mov
mov
fcoms
sub
mov
xor
inc
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
add
and
xor
jmp
ja
fistps
pop
ja
outsl
popa
ss
xor
cmp
adc
fmull
adc
jb
test
push
cld
fs
inc
clc
iret
shll
adc
pop
daa
pushf
add
int3
or
pop
imul
mov
xchg
lods
add
and
js
inc
lret
push
dec
lock
mov
test
xchg
cmp
ljmp
pop
or
pop
in
test
gs
orl
inc
xchg
mov
xor
sub
fucomp
popf
and
nop
enter
sub
test
or
inc
jle
dec
out
or
rolb
addr16
movsl
pop
sbbl
stos
gs
mov
scas
lcall
test
movsb
mov
push
dec
jp
mov
cltd
cld
mov
je
mov
xchg
dec
adc
lahf
loope
xchg
fildl
popf
ss
andb
arpl
test
negb
or
fdivl
push
pop
mov
pop
add
test
mov
cmpsl
aam
aad
ja
mov
mov
stos
cmp
ss
sub
hlt
add
pushf
mov
cli
cmpsl
lods
sub
mov
cmp
fcmovbe
xchg
dec
adc
cmpsl
hlt
xchg
in
adc
push
dec
push
data16
sub
mov
enter
xor
int
inc
stos
cld
mov
lcall
lods
lods
jp
ja
cmp
jge
jle
lret
andb
rol
xor
xchg
xchg
cmp
frstor
fadds
sbb
loopne
in
inc
pop
ret
or
xchg
push
mov
push
decb
xchg
icebp
xchg
xor
mov
cmp
orl
sub
fiadds
fwait
pop
aad
pop
cld
pop
sub
test
in
sbb
sbb
mov
outsb
in
inc
xchg
push
jl
sub
sbb
movntq
cmc
xchg
dec
fildll
outsb
jnp
pop
sbb
mov
jecxz
pop
mov
cmpsb
ss
ret
ds
lock
fsubs
add
sub
movl
movl
mov
movl
movl
mov
mov
imul
xor
or
xor
mov
sub
mov
mov
jmp
lock
clc
test
inc
imul
addr16
jle
cli
adc
fmull
adc
mov
jmp
lret
insl
pop
sub
or
pop
inc
mov
and
adc
cmp
out
daa
fnstcw
xchg
mov
popf
cmp
loop
mov
xchg
xor
aaa
stc
mov
and
and
scas
add
push
int
dec
outsl
mov
loopne
or
in
mov
xor
xor
popa
xor
inc
dec
flds
inc
lret
cmpsb
lcall
ljmp
push
in
leave
mov
scas
dec
repnz
xor
fwait
push
test
mov
ret
push
aaa
mov
cmp
pop
lods
inc
push
lret
inc
loope
sub
out
rolb
push
out
mov
cs
or
lret
movsl
scas
mov
bound
sub
or
and
icebp
sar
lahf
or
cwtl
sbb
jnp
je
cli
inc
adc
ret
pop
jge
lds
filds
popf
mov
call
sbb
sbb
push
aam
pop
or
movsl
dec
fdivs
adc
fisubrl
sahf
dec
mov
push
jg
sbb
bound
fucomip
sub
lcall
pusha
sbb
cmp
xchg
inc
fld
aas
cwtl
sub
ljmp
into
mov
lods
sbb
add
jns
add
fnsave
dec
int3
jle
call
mov
add
add
movsl
shll
shrb
pop
inc
mov
jns
jnp
add
mov
push
fnstenv
stc
rcrl
mov
test
mov
ss
mov
adc
jbe
cli
add
notl
cmpsl
dec
xlat
cmpsb
add
dec
jnp
jo
out
pop
int
mov
push
fbstp
inc
sub
rcrb
dec
mov
pause
out
pop
jns
dec
sti
sbb
push
sbb
in
and
arpl
call
sbb
jae
jge
or
sub
xor
div
mov
mov
sub
mov
mov
mov
mov
mov
imul
mov
imul
or
mov
or
xor
lea
mov
and
jmp
mov
pop
mov
insb
shr
test
notb
adc
movlps
icebp
jg
xor
mov
ja
std
sbb
lcall
pop
scas
out
shrl
pop
inc
mov
scas
nop
and
jae
push
mov
shlb
ret
int
bound
fwait
dec
sbb
scas
repz
std
loopne
lds
push
into
bnd
push
add
pop
jns
add
cmp
insl
sbb
sub
mov
les
jg
out
mov
daa
add
pop
cmpl
xchg
push
mov
fistl
arpl
jbe
jmp
push
sbb
leave
xlat
cmp
mov
icebp
fnstsw
and
push
insb
lock
in
cmp
in
aam
movsl
insb
cmp
jp
cmp
hlt
cs
inc
jbe
stos
loop
and
add
cmc
iret
dec
lods
jb
mov
cmp
sahf
pop
push
jae
lahf
mov
lahf
mov
mov
loop
adc
push
pop
es
stos
push
jl
push
bound
inc
jmp
mov
dec
test
rcrl
jo
imul
mov
mov
mov
cmp
into
sbb
push
dec
lret
je
icebp
lock
cli
pop
xor
das
mov
int3
xchg
xor
mov
in
adc
add
xor
loop
lcall
and
xor
in
push
bound
aam
mov
pop
js
scas
add
or
mov
pop
push
xchg
paddq
cmpsb
std
into
jle
out
loope
repz
xorl
dec
in
test
fmul
xor
mov
pop
jae
outsb
out
mov
push
outsl
lahf
shl
cld
hlt
cmp
pop
clc
loopne
sahf
lods
mov
or
pushl
and
sub
stc
mov
xor
pop
or
pop
and
es
lods
and
jecxz
mov
mov
mov
incl
inc
clc
xor
add
cmp
jne
pop
pop
pop
leave
ret
push
mov
sub
push
push
movl
movl
mov
mov
add
or
mov
lea
mov
movl
movl
mov
mov
and
xor
mov
imul
xor
lea
mov
movl
movl
mov
xor
push
pop
div
mov
xor
push
jmp
push
jb
adc
mov
xor
cmpsb
dec
mov
sub
adc
adc
adc
in
inc
addr16
lods
setle
int3
out
sarb
push
insb
std
iret
ror
and
inc
lahf
out
movsb
and
and
ss
xor
decb
lret
pusha
aaa
cld
and
cld
and
cs
pop
dec
int3
lds
cwtl
pusha
cmc
mov
ljmp
xor
faddp
push
xor
inc
and
pop
xchg
mov
cmp
stos
lea
add
inc
in
mov
ss
jo
lahf
sbb
mov
add
push
pop
shrl
fstpt
xor
mov
pop
cmp
push
and
sahf
cmpsb
mov
pop
push
mov
addb
sub
sub
out
fisubl
loopne
cmp
inc
dec
int3
les
int
sub
out
mov
insl
push
outsl
jl
pop
outsb
xchg
mov
push
mov
in
out
sbb
nop
add
in
rorl
jno
cmpb
adc
jns
test
in
out
pop
outsb
shll
xlat
pop
jns
pop
mov
mov
jo
es
sub
push
and
clc
xchg
pop
cmp
ds
imul
add
push
mov
daa
mov
iret
or
inc
pushf
sub
ja
push
xor
fsubrs
xchg
out
add
nop
mov
fwait
call
lods
mov
rcrb
int3
dec
pop
fs
outsl
push
pop
test
loop
add
test
loop
adc
pop
jne
clc
pop
and
or
push
popf
mov
mov
int3
ljmp
lcall
out
inc
sub
push
sbb
mov
mov
jno
sub
dec
jo
adc
xor
mov
sbb
xchg
push
iret
dec
aad
pop
cmp
dec
mov
mov
fsubrs
ljmp
cmp
xor
mulps
jle
popf
and
xchg
ss
fstp
mov
inc
js
adc
pusha
popa
stc
add
in
push
adc
enter
popa
add
mov
add
add
pusha
mov
fs
adc
mov
adc
fstl
push
mov
inc
roll
daa
popf
mov
lods
jl
sbb
scas
int3
sbb
add
lock
insb
mov
fildl
push
loope
inc
sbb
lret
mov
cs
scas
xchg
insl
and
inc
or
jl
lock
pop
mov
cmp
mov
pop
xor
jns
test
push
pop
cltd
les
push
insl
xchg
adc
mov
sub
push
sub
lock
es
inc
push
sub
movsb
mov
inc
fnstsw
clc
xlat
inc
jbe
stc
dec
test
in
push
inc
into
movsb
xchg
addr16
pop
test
sbb
rcrl
mov
movsb
adc
enter
rcll
add
sarl
enter
movl
movl
movl
mov
mov
lea
mov
div
mov
lea
mov
movl
jmp
imul
in
push
pop
loop
xchg
js
hlt
mov
mov
adc
jo
adc
adc
loop
sub
mov
mov
iret
out
lcall
adc
sarl
dec
and
inc
push
nop
mov
ror
mov
add
fdivs
cwtl
pop
xor
arpl
jo
push
push
fdivr
ja
and
pop
dec
andb
jne
js
shlb
inc
es
negl
or
mov
inc
jne
mov
data16
push
dec
jl
xor
imul
and
adc
insb
jmp
rcrb
hlt
lock
jns
cwtl
sub
mov
repz
adc
mov
adc
inc
lds
pop
xor
push
bound
cmp
gs
test
data16
dec
mov
in
lahf
loopne
movsb
adc
xor
xchg
loop
mov
lret
push
data16
sti
arpl
xor
andl
lahf
push
adc
lret
pushl
aaa
cltd
lock
or
jns
sbb
call
andl
addr16
push
imul
add
push
aas
into
jle
mov
xor
xchg
in
repnz
mov
into
in
mov
stos
imul
mov
lods
dec
mov
jl
gs
inc
insb
in
mov
test
or
jle
js
imul
bound
sbb
xchg
cmp
sbb
scas
xchg
jno
or
jbe
inc
sbb
cmp
sub
pop
pop
out
repz
add
xor
es
xor
xchg
mov
xchg
fldl
add
lods
pop
push
pop
mov
stos
jbe
xchg
ret
shlb
stos
dec
shl
cmc
pop
xchg
imul
add
int3
loope
mov
add
enter
jp
pop
lods
lock
pop
or
push
lret
scas
xor
jge
mov
leave
push
imul
dec
sbb
out
sti
mov
mov
mov
cli
or
insb
and
xor
xchg
cmp
out
and
rcr
or
arpl
fstps
xchg
loope
ljmp
mov
outsb
add
loop
dec
inc
cs
rsqrtps
push
out
and
mov
mov
aad
cmc
push
insb
xchg
pop
and
ja
jg
jge
jne
fwait
mov
sti
and
rorb
js
loopne
int
sbb
das
stc
jno
adc
push
add
into
or
ljmp
mov
fld
dec
es
lock
leave
out
insb
jge
sbb
cltd
xchg
xchg
jae
fwait
fwait
js
leave
std
idiv
inc
dec
mov
inc
arpl
adc
push
xor
aaa
mov
sbb
push
std
inc
and
xchg
jle
push
loopne
repz
cltd
push
pop
or
or
roll
lret
daa
inc
call
jge
popf
mov
jne
sbb
sbb
icebp
mov
sub
add
push
dec
sbb
aas
xor
mov
mov
out
mov
adc
andb
shl
inc
lret
xor
movl
movl
mov
mov
xor
sub
mov
sub
xor
mov
movl
pop
mov
movl
movl
mov
mov
mov
xor
xor
div
mov
and
sub
mov
movl
jmp
mov
jo
pusha
popf
sbb
mov
dec
mov
in
adc
jo
adc
fucomip
sahf
loop
lret
xlat
mov
cmp
adc
les
lahf
and
jae
les
lock
mov
cmp
mov
js
lret
cmpsb
testb
test
adc
in
xor
xor
inc
cmp
and
mov
jecxz
and
xchg
jne
addl
aam
jne
lcall
jno
int3
inc
jb
inc
jg
dec
cmpsl
stc
push
lahf
mov
popf
fistps
pop
cwtl
nop
inc
movsb
idiv
or
mov
dec
jp
popa
or
jnp
fcmovnbe
mov
cmc
push
xadd
lods
cmp
add
inc
call
jb
pop
rclb
jge
inc
mov
pushf
adc
dec
sti
adc
cmc
xor
xchg
sub
fdivp
sub
loop
add
test
dec
inc
fisubs
lds
xchg
sbb
sbb
jo
rcll
cli
fildll
test
mov
fildll
or
mov
mov
push
repnz
jmp
push
test
mov
adc
add
jnp
sbb
adc
push
jg
push
rol
cmp
and
pop
sbb
or
enter
rclb
fisubs
mov
add
jecxz
pop
loop
hlt
mov
xor
lds
mov
mov
and
push
and
jae
xor
push
cwtl
xchg
shlb
cmp
adc
test
or
dec
jnp
jp
pop
mov
mov
xchg
fs
mov
bound
sbb
in
push
sub
imul
sbb
rorl
out
dec
test
mov
dec
sub
sbb
jbe
xchg
fsub
iret
outsb
loopne
les
cmpsl
stc
aas
out
sub
aam
lock
inc
lea
inc
xor
cmpsb
mov
fidivrs
leave
add
jbe
inc
mov
pop
pop
fldenv
cmpsl
stc
fistpll
sbb
out
mov
add
aad
mov
clc
lcall
xchg
jae
fisubl
daa
sub
test
mov
in
inc
sbb
mov
and
loope
jns
push
fisubl
add
out
addr16
sub
dec
aas
subb
mov
pop
les
call
fmuls
mov
cs
jmp
in
mov
xchg
gs
test
inc
pop
adc
adc
lcall
js
mov
adc
fcmovbe
out
dec
mov
pop
fwait
in
subb
int
xchg
or
test
dec
loope
cmpsl
cmp
xchg
int
out
clc
xchg
dec
sbb
inc
mov
out
or
out
out
mulb
cmpsb
jns
dec
scas
jp
add
jne
rsqrtps
imul
push
mov
enter
jl
add
mov
scas
push
dec
mov
lds
jecxz
lea
mov
shlb
xlat
es
inc
aam
cmp
add
inc
cld
xor
add
movl
movl
movl
mov
add
mov
xor
mov
or
mov
or
mov
and
mov
sub
mov
movl
movl
movl
movl
movl
movl
movl
movl
movl
jmp
sbb
or
jmp
bnd
arpl
mov
jo
adc
or
add
mov
scas
mov
mov
jnp
or
arpl
mov
or
movsl
xor
jecxz
dec
push
movsl
rolb
xchg
popf
xchg
fildl
pushl
ret
movsl
or
notl
imul
jno
push
ja
les
add
mov
lret
fs
lods
push
sti
push
imul
cmpsb
fistps
aad
or
iret
gs
jl
push
xlat
xor
inc
cmp
mov
clc
dec
lcall
clc
xor
or
aas
cmp
xor
fildl
pop
aad
mov
mov
jmp
jnp,pn
pop
mov
lret
add
dec
mov
dec
outsb
es
mov
aas
js
dec
das
xor
adc
adc
pop
inc
rcr
dec
divl
add
push
add
roll
lods
stos
adc
xchg
out
incb
inc
fsubrs
aam
jle
push
jp
jno
je
jecxz
push
roll
hlt
add
sti
bound
rcll
ret
mov
xchg
or
push
stc
xchg
xchg
je
fsin
pop
xor
pusha
push
sub
shll
xor
xchg
or
jle
cmp
push
sti
xor
cmpsb
in
rcrl
dec
cmp
dec
mov
mov
and
xor
pop
sahf
rolb
xor
jp
jmp
cmp
int
xchg
mov
nop
es
xor
in
adc
test
xchg
out
jae
cmpsl
dec
cmpsl
sub
xor
lret
inc
shll
aas
data16
or
push
xchg
xchg
or
ja
pusha
adc
jbe
sbbb
jg
dec
inc
pop
and
xchg
enter
inc
push
cmp
dec
or
or
dec
cld
xorb
data16
das
dec
loopne
pushf
mov
std
xchg
dec
hlt
das
and
out
clc
push
adc
jb
push
into
cmp
fmull
add
push
mov
and
cmp
arpl
lock
xor
ljmp
stc
popa
push
mov
mov
mov
lcall
icebp
outsl
push
and
mov
stc
lret
decl
pop
insl
cwtl
pop
retw
dec
xor
dec
lret
outsb
cltd
add
jne
loopne
je
mov
and
mov
lret
fcoml
inc
sbb
and
jge
jnp
push
cmovg
cwtl
add
cltd
out
cmp
xlat
mov
push
scas
fs
cmp
rcll
push
lea
cmp
sbb
mov
add
ja
nop
and
jnp
cmp
out
data16
lcall
add
addb
pop
je
lods
push
insl
outsb
lods
jge
enter
cmpsl
enter
xchg
inc
imul
cmp
popa
mov
daa
mov
jge
push
loopne
xchg
push
pop
repnz
cmp
aam
dec
jg
stc
movl
mov
mov
jmp
jg
inc
dec
and
cwtl
lods
cld
insb
push
push
aad
adc
adc
mov
pop
bound
xchg
mov
fdivl
mov
out
mov
sbb
test
test
pop
xchg
jl
mov
sub
xor
ljmp
jmp
dec
xchg
or
dec
pop
les
out
cltd
dec
mov
in
das
bound
loopne
pusha
push
pop
push
dec
aam
mov
or
or
jnp
or
jg
in
clc
call
mov
mov
rcll
push
imul
sub
jecxz
fnsave
inc
and
aaa
test
mov
cmp
dec
icebp
lahf
shll
stos
stos
and
imul
lahf
sbb
mov
mov
xchg
pop
xchg
ss
icebp
sbbb
pop
mov
lea
andl
out
ret
mov
xor
pusha
out
push
fstps
cmpsl
mov
ficoml
mov
mov
mov
add
insl
stos
loopne
mov
imul
test
xchg
imul
das
jmp
test
insl
stos
cmp
std
clc
shlb
mov
lods
inc
jge
sub
mov
dec
add
js
cmpsl
fnstcw
jp
cmc
movsl
mov
mov
out
lret
push
aad
mov
sbb
stc
inc
mov
aam
push
inc
ds
cmpb
mov
das
dec
sub
sub
dec
inc
and
hlt
sahf
js
hlt
jb
test
andb
std
pop
cmpsb
xchg
mov
and
push
cmp
xor
add
xor
jmp
mov
pop
xor
addr16
sbb
and
dec
jb
xchg
pushf
push
xchg
lock
lods
cmc
mov
jnp
sub
clc
adc
mov
push
push
or
lahf
and
gs
push
hlt
es
stc
fldenv
inc
inc
push
or
push
and
cmpsb
add
adc
sub
pop
sub
idivl
int
add
xchg
mov
add
xchg
sbb
pop
fwait
push
pop
cmp
mov
xchg
dec
call
cmp
or
jp
cmp
jecxz
gs
fwait
cmc
rclb
mov
and
ds
rclb
xchg
aad
dec
xchg
mov
adcb
das
ror
mov
les
insb
jmp
cmpl
xor
stos
inc
test
fdivl
cld
lds
mov
ljmp
imul
stos
dec
fdivs
int3
test
or
mov
mov
pop
mov
loop
or
cmc
push
mov
dec
cli
cmp
pop
repnz
imul
outsb
cmpsb
jl,pt
test
outsl
adc
ret
xor
aam
mov
int3
pop
and
dec
xlat
popa
lcall
gs
push
or
ficoms
push
sbb
rcl
hlt
fidivl
or
insb
pushf
inc
aaa
jb
ja
out
ljmp
faddl
adc
or
mov
or
jmp
xchg
decl
cmp
adc
stos
lds
mov
jo
adc
mov
enter
ret
sbb
fildll
ds
xchg
testb
popa
or
mov
push
mov
and
jo
enter
mov
sti
sbb
popa
xlat
popa
pop
inc
aad
push
pop
xchg
inc
pop
fcomip
pop
mov
shlb
fldl
sbb
fsubrp
ja
andb
clc
ret
cltd
lahf
push
inc
xchg
lds
or
and
out
aas
mov
fnsave
dec
add
rcrl
inc
mov
inc
jne
and
loope
jne
in
xor
add
jle
clc
jge
xlat
or
call
movsl
mov
fmuls
fldl
dec
addr16
pop
and
rol
adc
rorb
xchg
jmp
sarl
sti
dec
addl
sbb
lcall
mov
sar
insb
dec
lret
outsb
int
fptan
lret
mov
dec
inc
xor
lods
xchg
xor
adc
adc
inc
inc
xchg
mov
hlt
enter
in
ljmp
imul
push
pop
shll
sbb
cld
or
test
sbb
xor
cmp
cmpsl
push
out
mov
rorb
js
xor
icebp
xchg
fstps
pop
das
cmpsb
test
test
rcl
cld
out
sub
nop
inc
mov
orl
xor
push
and
push
lock
mov
aaa
pop
stc
imul
jmp
xchg
in
mov
mov
lds
mov
sub
stc
inc
mov
inc
or
mov
mov
or
pop
test
int3
sub
nop
push
sub
and
mov
andb
popf
push
add
shll
nop
or
sub
in
add
sahf
les
das
cmc
xchg
cmp
cmpsb
and
dec
in
add
inc
push
int3
clc
and
lea
xchg
mov
lds
xchg
jge
jns
jo
repnz
pop
inc
xchg
je
push
in
fsubp
mov
jecxz
leave
mov
out
adc
cwtl
sbb
add
das
sbb
push
xchg
inc
and
pop
rcrl
sbb
cmpsl
jns
pop
clc
jecxz
push
in
inc
lods
and
xchg
daa
push
pushf
mov
imul
cmp
inc
in
mov
lret
inc
sbb
add
data16
adc
push
jle
movsb
xchg
hlt
frstor
jge
mov
adc
lea
inc
xchg
inc
popf
dec
das
lcall
adc
stos
mulb
sub
xor
and
out
add
lcall
sbb
jl
pushf
jns
push
jns
xchg
out
in
mov
mov
xor
mov
adc
movsl
out
and
repz
pushf
jle
mov
sbb
mov
or
mov
cmc
js
or
jne
or
xor
xchg
or
inc
adc
xor
std
push
daa
inc
cmp
aaa
or
mov
mov
or
mov
sub
mov
sbb
mov
or
or
add
mov
adc
mov
movl
movl
movl
movl
movl
jmp
sub
cmp
mov
push
leave
adc
jo
adc
fidivrl
pop
mov
cmp
hlt
cmc
xchg
mov
fnstenv
pop
cmp
add
xchg
es
or
pop
mov
dec
sbb
jnp
cli
inc
pop
pop
pop
xor
cmp
pushf
mov
std
mov
sbb
in
jnp
aaa
mov
sahf
dec
iret
adc
roll
mov
xor
outsl
fidivs
jecxz
les
sti
rcrb
mov
out
inc
mov
ja
cs
adc
and
jmp
dec
jge
aam
jne
inc
lret
adcl
outsb
add
sub
leave
shlb
insb
sbb
test
sbb
sbbl
loope
fstl
and
shll
movsb
mov
and
sub
into
dec
xor
hlt
mov
push
sbb
adc
mov
or
add
popf
push
clc
mov
pusha
mov
lock
ret
mov
lahf
xlat
inc
test
imul
pushf
sub
pop
sub
fidivs
jge
jne
jg
push
xchg
data16
mov
jge
jmp
and
mov
cli
add
jae
int3
push
ljmp
repnz
imulb
inc
popf
in
lcall
adc
aad
cmp
jno
cmpsl
pop
push
rcl
cmpsb
pusha
fnstsw
insb
loop
aaa
iret
adc
imull
int
lock
gs
add
add
imul
arpl
xchg
test
push
jle
sahf
adc
sti
xlat
jno
hlt
js
adc
cmp
sub
sbb
lea
jp
and
clc
in
mov
int
imul
popf
inc
add
fwait
out
mov
daa
add
cmp
aas
mov
test
sub
jecxz
movsb
adc
ds
mov
dec
je
jp
mov
add
lods
push
shl
mov
stos
cmp
push
xchg
insb
rcrl
cmpsb
cmp
sbb
clc
dec
loope
fwait
xlat
into
pop
dec
sbb
call
mov
cmp
adc
xor
mov
mov
add
pop
inc
pop
cmp
iret
fistpl
stos
outsb
outsb
dec
add
mov
jns
iret
insb
ljmp
movsb
daa
sahf
push
fs
in
pusha
mov
pop
ljmp
inc
push
hlt
mov
gs
mov
jo
arpl
sbb
xlat
rcll
loope
xor
mov
cwtl
xor
cltd
and
lret
sub
xchg
mov
mov
insb
adc
je
test
mov
out
mov
mov
pop
sub
jmp
stos
test
xor
mov
cmp
repz
xchg
xor
xchg
mov
lret
mov
cmpsl
ror
dec
mov
cld
sbb
mov
adc
or
inc
push
lods
jp
lret
stc
lret
movb
xor
or
les
inc
movl
movl
xor
inc
mov
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
movl
mov
movl
movl
mov
or
add
mov
or
mov
sub
mov
sub
imul
add
mov
push
mov
lea
mov
xor
div
mov
lea
push
mov
mov
push
push
push
push
call
mov
mov
push
push
or
or
push
push
call
mov
mov
xor
mov
mov
mov
and
add
lea
xor
push
lea
call
mov
mov
mov
sub
xor
imul
add
xor
xor
mov
div
cmp
jne
mov
xor
mov
div
mov
mov
xor
sub
mov
xor
sub
or
lea
push
mov
push
pop
div
mov
xor
div
mov
mov
xor
xor
div
imul
sub
push
mov
add
push
mov
sub
mov
pushl
call
mov
mov
lea
mov
incl
mov
mov
xor
mov
xor
xor
and
cmp
jne
cmp
jne
mov
jmp
lea
mov
mov
mov
mov
mov
sub
mov
mov
mov
sub
mov
movl
jmp
xchg
xorb
daa
cltd
sbb
jmp
rcll
jo
adc
xchg
ret
xor
adc
mov
add
inc
and
cmp
shl
xor
pusha
mov
add
cli
ret
xchg
add
mov
rcll
int
hlt
enter
addr16
inc
sub
sub
addr16
stc
aad
sbb
iret
pop
call
ja
mov
pop
or
push
cmpb
push
jecxz
inc
sarl
lds
outsb
jnp
and
cmp
scas
out
loope
test
int3
add
inc
mov
cmp
rorb
dec
pop
pop
divl
sub
dec
test
aaa
scas
push
sbb
sub
popa
xchg
ffreep
mov
ss
jecxz
addr16
xor
mov
sub
adc
cmp
test
inc
mov
test
rorb
cli
scas
dec
or
shrb
clc
icebp
clc
out
add
popf
mov
popa
inc
adc
push
add
mov
mov
push
sbb
cltd
lret
or
stc
leave
adc
out
lock
ljmp
adc
cmpsb
push
daa
jnp
imul
cld
jge
cmp
or
xor
mov
sub
jg
rcrb
jns,pn
lret
sti
les
cmpsl
insl
xor
add
movsl
les
fs
and
jg
push
aas
add
push
jmp
push
aaa
les
test
adc
fs
push
mov
push
mov
sub
sbb
mov
jp
push
cld
mov
shrb
stc
leave
arpl
add
jmp
sub
add
mov
xchg
and
add
loope
mov
sub
in
jns
sarl
add
data16
inc
into
cwtl
hlt
pop
add
lahf
lahf
ret
dec
mov
xchg
ret
in
arpl
loopne
or
or
scas
or
cmpsb
dec
ljmp
outsb
jne
into
mov
and
sti
pop
mov
inc
stos
sbb
sub
pusha
fisttpll
mov
enter
xor
mov
mov
jge
push
cs
pop
repnz
xlat
and
out
and
mov
fisubl
mov
sub
ror
xchg
dec
pop
sub
mov
ljmp
push
mov
cmp
xchg
dec
sbb
sbb
cld
push
push
jae
mov
inc
adc
test
push
inc
pop
or
cwtl
in
add
ds
movsl
fcmovb
cltd
adc
das
lret
mov
or
inc
or
repz
or
or
ljmp
dec
sti
sbb
inc
cmc
and
push
push
stos
push
sahf
push
cwtl
cmc
adc
sbb
adc
int3
lods
and
imul
push
add
cmp
mov
stos
popf
adc
xchg
pushf
sub
add
jp
lret
cmpsl
ja
fidivs
hlt
imul
mov
inc
gs
mov
mov
mov
mov
pushl
pushl
pushl
pushl
pushl
push
push
pushl
mov
call
jmp
jmp
dec
test
lods
hlt
mov
lods
push
mov
adc
adc
push
fs
xor
push
test
in
inc
push
mov
dec
popf
shlb
adc
sub
fs
pop
loope
and
outsb
mov
push
rcrb
pushf
pcmpgtd
sbb
mov
out
or
cwtd
jle
dec
inc
mov
pusha
loope
jle
cmp
js
jnp
jl
or
cld
pop
out
test
adc
mov
adc
inc
hlt
outsb
inc
es
out
sub
inc
sub
std
ret
cmp
out
fnstenv
shr
mov
cmp
push
sub
std
inc
adc
scas
in
fcomps
jo
cmpsb
xchg
inc
lahf
adc
push
aaa
mov
jg
sbb
jno
cltd
das
std
pop
or
cwtl
popf
mov
xchg
pop
sub
test
sbb
xchg
inc
push
lods
ret
add
call
stc
lods
lret
jmp
cwtl
je
push
dec
push
daa
or
idivl
leave
mov
dec
das
dec
add
mov
mov
adc
mov
adc
xor
fwait
aad
and
pop
movsl
or
int
jg
add
lods
dec
or
add
push
leave
jbe
mov
sub
imul
cmp
jae
pop
test
push
sbb
rep
push
dec
mov
ss
lods
push
dec
fildl
push
cmp
in
repnz
add
iret
inc
mov
xor
add
mov
xchg
or
add
sbb
ret
adc
mov
arpl
shr
cmp
mov
inc
shll
jg
xor
addr16
stos
dec
or
sub
and
int
xor
mov
jg
daa
ds
push
out
dec
rcrl
stos
mov
add
repz
sbb
rcrl
lea
in
sbb
fwait
jl,pt
adc
mov
je
push
xlat
ret
pop
sbbb
pop
das
mov
arpl
ja
dec
inc
sbb
sub
or
or
sub
cld
sbb
or
sub
xchg
ret
movsb
pop
imul
mov
push
call
lods
out
lahf
sub
inc
pop
daa
js
je
ljmp
cld
imulb
lahf
int
out
add
out
jl
jge
xor
arpl
cs
fbstp
es
mov
dec
int3
pop
cmp
sbb
cmpsb
sbb
decb
lahf
or
jl
ja,pn
imul
xchg
fdivs
add
les
outsl
xchg
popa
addr16
pop
jmp
mov
mov
inc
jmp
xchg
mov
ja
cs
adc
adc
pop
xor
xchg
cli
mov
out
insl
lock
repz
sub
push
aam
sub
push
scas
ljmp
lods
call
shlb
xchg
setle
push
enter
adc
fs
int3
bound
shll
loope
xor
repz
inc
rclb
fldenv
xchg
scas
mov
in
in
xor
adc
or
xor
sub
mov
inc
add
add
push
push
call
mov
jmp
mov
pop
mov
pop
leave
ret
push
mov
sub
push
push
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
push
push
push
push
call
mov
mov
add
adc
and
push
and
or
push
or
xor
xor
push
push
call
mov
movl
movl
movl
movl
xor
movl
push
inc
mov
mov
mov
push
jmp
dec
pop
divb
inc
and
mov
imul
sub
bound
add
mov
int3
push
push
fstps
imul
pop
fdivrl
inc
mov
dec
rorl
lds
pushf
mov
sbb
push
dec
xchg
lcall
mov
pop
add
pop
lds
adc
test
pop
pusha
movsl
lret
js
sbb
jle
sbb
jns
mov
pop
and
cs
cmp
cmpsb
dec
daa
inc
pop
mov
test
jmp
xor
clc
jns
dec
lods
pop
jo
pushf
out
cs
frstor
mov
sbb
fisubrs
data16
repz
in
push
jge
lea
xchg
mov
lds
xchg
pop
subl
lret
push
dec
pop
xor
jle
cli
push
mov
lea
cmp
popf
aad
lods
mov
pushf
ret
std
dec
pop
mov
ljmp
out
and
cmpsl
mov
mov
mov
loopne
or
cs
ficomps
pop
ja
mov
mov
adc
adc
pop
sbb
leave
je
mov
out
jl
fsubr
ficomps
mov
out
popa
mov
pop
inc
jmp
popf
loopne
push
sbb
mov
and
cs
cs
xchg
mov
bound
xor
psllw
sti
pusha
xor
in
cwtl
dec
xchg
iret
js
cmp
xchg
outsb
scas
das
jge
sub
pop
or
mov
xor
test
leave
sbb
das
adc
fstpl
push
and
loopne
cltd
movsb
push
and
cli
fisubrl
mov
mov
push
xor
cmp
mov
add
aam
inc
push
data16
out
jb
in
mov
sbb
mov
add
dec
xor
into
dec
push
arpl
in
fldt
insb
mov
das
xchg
mov
pop
sbb
es
adc
jg
pop
jecxz
in
repz
add
test
add
les
add
in
rorl
push
add
push
jmp
push
pop
push
js
sbb
adc
dec
and
fstpt
insl
cmpsl
xchg
xor
lahf
sbb
imul
js
jmp
mov
xor
inc
mov
mov
loopne
js
add
sub
jbe
mov
stos
popa
add
sub
cmpsl
loope
ja
outsl
aad
mov
pop
pop
std
push
daa
push
mov
sub
xchg
dec
sbb
bound
mov
push
call
or
idivl
leave
mov
push
cmp
mov
imul
sbb
xor
movsb
sbb
clc
and
hlt
rorl
lods
or
and
imul
ror
push
mov
xchg
xchg
cmpsb
mov
ss
mov
jge
mov
and
mov
icebp
xchg
out
dec
push
xor
bound
xchg
mov
jp
pop
ss
addr16
popa
cmp
out
dec
imul
push
cmp
imul
mov
das
clc
arpl
mov
and
imul
or
repnz
lahf
fisubl
sbb
ret
enter
mov
push
scas
out
and
icebp
cmp
adc
add
shll
pusha
mov
ss
outsl
mov
mov
mov
dec
dec
or
lods
jo
sbb
push
sbb
lcall
sub
std
cmp
jecxz
lods
loopne
dec
test
adc
mov
jnp
lret
imul
aaa
shl
movsl
popa
lods
cmp
inc
jl
aam
and
xor
es
jmp
popf
mov
shll
jmp
add
std
inc
jnp
add
mov
ja
orb
mov
sti
mov
cltd
movsl
je
out
add
inc
scas
cmpsl
inc
testl
xor
pop
enter
pop
into
or
pop
push
outsl
popa
movsb
xchg
and
push
rorb
or
pop
lret
pop
sbb
jle
pop
jns
fcomip
jne
pop
xchg
fld
adc
push
push
call
mov
lea
xor
mov
div
mov
sub
mov
movl
mov
movl
mov
mov
sub
mov
xor
div
mov
xor
or
or
mov
mov
movl
jmp
cltd
sbb
sbb
cltd
sbb
xchg
bound
aaa
es
cmpsl
adc
stos
movlps
repnz
popa
adc
jne
mov
rolb
arpl
lods
jne
mov
shlb
add
insb
movsb
imul
hlt
xor
dec
push
in
aam
adc
mov
lahf
xor
mov
outsb
cmp
rclb
inc
negl
jg
jg
add
adcb
fmuls
cmp
out
adcb
sub
mov
imulb
add
add
sub
cmp
addb
js
clc
shl
in
loope
mov
inc
push
lcall
mov
adc
scas
lods
cli
xor
aaa
mov
add
scas
aam
adc
mov
xchg
push
xchg
mov
inc
aas
pop
adc
xchg
mov
hlt
xchg
pusha
xchg
push
ljmp
ret
cmp
dec
jecxz
sub
lock
add
and
add
ret
loop
pop
mov
xor
inc
out
inc
imul
push
cmc
mov
aaa
in
ret
xchg
movsl
add
and
ss
inc
jge
into
inc
aaa
jbe
mov
cmp
sub
data16
adc
cmp
addr16
xor
cmp
jg
dec
enter
or
xor
insl
push
add
clc
sbb
sub
popa
cwtl
mov
or
fwait
add
idivl
test
xchg
jmp
addr16
push
adc
cmp
cmp
sarb
daa
jp
push
popf
in
test
mov
int
inc
add
jg
pop
inc
insl
iret
fs
xchg
repnz
xchg
mov
mov
jo
iret
sub
mov
dec
mov
sti
aam
or
or
mov
sub
xchg
push
ss
sub
sbb
xchg
sub
scas
cli
and
or
xchg
cmp
lret
loopne
xor
jns
pusha
addr16
in
das
js
cltd
dec
lock
je
call
xchg
aaa
imul
popf
scas
pop
in
adc
inc
or
and
or
inc
in
mov
and
lea
mov
mov
mov
movl
jmp
pop
mov
pop
mov
cmpsb
js
stos
sbb
adc
stos
movlps
and
jb
jno
mov
fistpll
movb
inc
loop
push
sarl
clc
mov
sti
ja
add
dec
pop
jae
cltd
in
mov
imul
mov
push
pop
dec
int
mov
xor
mov
iret
enter
xor
xchg
lea
adc
mov
sub
scas
rorl
adc
or
fistpl
stc
or
push
sub
jp
mov
inc
arpl
lods
mov
adc
pusha
insl
inc
xchg
dec
xchg
adc
es
mov
mov
or
xor
inc
adc
xchg
je
enter
loopne
push
outsb
dec
xchg
ljmp
jo
lcall
mov
sub
sbb
adc
scas
jl
push
push
jb
jne
ja
js
or
rdmsr
mov
cld
mov
dec
push
stc
ss
xor
xlat
and
sbb
std
xlat
repz
inc
mov
call
repz
cmpsl
xchg
adc
dec
shll
jnp
xchg
sub
jbe
inc
loopne
and
mov
cmc
shll
outsl
mov
stc
inc
or
mov
pop
enter
dec
xchg
add
mov
dec
lret
jge
rorl
je
mov
jne
dec
stos
mov
adc
push
fwait
sbb
out
cli
sbb
lret
rcll
fsubrs
je
je
es
cli
mov
fnsave
andl
adc
sub
xlat
in
add
dec
sbb
sahf
rorb
push
int
rep
adc
jp
dec
jns
jg
imul
dec
push
int3
jp
sbb
sbb
adc
out
sbb
dec
and
mov
xor
or
fildl
sub
and
push
mov
add
push
pushf
xchg
jne
mov
test
and
outsb
dec
mov
fbld
inc
dec
xchg
adc
xchg
out
add
sub
inc
in
movsb
imul
movl
mov
mov
sub
add
xor
add
mov
div
mov
xor
pop
pop
or
mov
movl
movl
jmp
xchg
sub
subl
mov
and
lahf
adc
stos
movlps
push
out
cmp
shrl
and
icebp
pusha
stos
jecxz
xor
cmc
xchg
mov
out
sbb
in
adc
popa
pop
gs
aam
cmp
xor
fcoml
data16
subl
or
in
adc
jmp
push
or
ds
ret
dec
dec
daa
in
jecxz
sarl
test
jge
pop
mov
jl
inc
adc
push
mov
int
push
xchg
fnstenv
bound
push
aas
enter
arpl
sti
inc
push
shl
movsb
adc
inc
test
test
inc
adc
nop
dec
mov
and
pop
inc
mov
lds
mov
push
ftst
pop
es
mov
pop
ljmp
test
lds
xchg
sti
jmp
ljmp
jmp
sbb
in
xlat
adc
jp
icebp
addr16
dec
dec
push
mov
mov
xchg
dec
xchg
xchg
idiv
add
daa
std
imul
test
mov
xchg
shrl
push
jmp
mov
aas
adc
add
cmp
or
aaa
pop
xchg
testl
jbe
in
ret
decl
jns
inc
out
lods
xor
sbb
lahf
ljmp
js
sub
mov
push
mov
inc
jb
push
mov
in
and
aas
cmp
arpl
imul
or
dec
shll
bnd
and
cmc
int
xchg
mov
mov
flds
addl
int
mov
or
sbb
addb
aaa
add
sub
mov
dec
push
or
and
aam
insb
dec
jl
mov
cld
jmp
das
ss
mov
lcall
sbb
adc
dec
jno
pop
ror
jle
clc
add
xchg
ror
xlat
sti
pop
arpl
or
and
xchg
mov
cmp
repz
movl
mov
mov
and
sub
or
mov
imul
mov
jmp
loope
mov
and
les
aas
fwait
adc
stos
movlps
pop
mov
xor
aad
xor
cwtl
jmp
jg
pop
mov
sbb
jl
pop
int
inc
hlt
xor
jno
jno
popa
sub
pushf
pop
add
mov
cmp
push
fucomi
dec
inc
ljmp
dec
cmpsb
or
ret
sahf
ret
xor
lds
xchg
pop
js
cmp
adc
rcrl
jmp
pop
stos
cmp
dec
mov
jle
add
cmpsb
shr
xor
and
mov
test
add
insb
in
mov
mov
and
jne
push
aad
mov
cltd
mov
mov
negl
adc
insl
cwtl
dec
cmp
lahf
pop
xchg
lods
int3
add
mov
and
mov
fisubrl
adc
or
inc
push
inc
ret
jg
loopne
dec
jmp
pop
cmp
xor
xchg
std
out
aas
jnp
lods
push
mov
mov
dec
test
cmpsl
lea
call
xchg
dec
mov
out
push
cli
int
mov
xchg
push
outsl
test
mov
and
xor
jno
push
jg
sti
xchg
mov
mov
bnd
sbb
pop
push
xor
inc
mov
sub
xchg
lret
inc
clc
ret
push
fs
dec
jmp
push
pop
clc
test
sbb
or
scas
cmc
xor
jb
jno
mov
je
outsb
addr16
cmp
cwtl
gs
shrl
insb
lods
clc
ss
inc
pop
or
into
inc
cld
pop
addr16
mov
mov
jae
cmp
xchg
dec
addr16
nop
pop
shrb
jmp
icebp
jae
mov
cmp
dec
adc
jecxz
jns
loop
xchg
mov
fdivl
bnd
aad
int3
mov
loope
repnz
sub
dec
cltd
xchg
in
in
test
outsl
js
std
inc
les
leave
mov
repnz
ret
in
push
inc
mov
das
insl
sbb
sub
mov
cli
push
pusha
jge
stos
sti
les
add
and
pop
add
pop
loopne
adc
das
cld
aaa
xor
icebp
leave
ret
push
mov
sub
push
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
push
movl
mov
mov
push
push
push
call
mov
mov
xor
mov
mov
mov
xor
mov
xor
or
mov
mov
mov
xor
or
add
cltd
adc
cmp
jne
cmp
je
mov
mov
mov
mov
add
adc
or
mov
or
mov
push
push
push
push
call
mov
mov
and
mov
mov
mov
and
xor
xor
xor
cmp
jne
cmp
jne
mov
mov
add
or
mov
or
xor
lea
xor
mov
and
add
mov
xor
xor
div
mov
mov
xor
imul
mov
push
push
xor
mov
lea
mov
mov
lea
mov
mov
or
xor
div
mov
add
xor
add
mov
add
mov
mov
jmp
inc
or
pushf
ds
fdivrs
cltd
adc
pop
adc
adc
mov
cltd
ret
mov
jp
cmpsb
nop
sub
sbb
enter
clc
daa
or
sbb
inc
inc
test
daa
ljmp
adc
push
push
lcall
or
in
inc
inc
jo
cmp
mov
cld
shll
cmp
pop
sbb
sbb
xor
mov
pop
sub
std
inc
ja
sahf
adc
jp
xchg
sub
xchg
call
in
mov
mov
inc
push
mov
in
inc
movsb
xchg
sub
movb
jmp
bound
pop
jg
fimuls
jo
cmp
adc
jno
pop
dec
sahf
add
dec
sti
ss
arpl
bound
push
xlat
stos
sub
push
cmp
out
pop
clc
in
test
or
mull
adc
lcall
jg
daa
mov
popf
aad
sub
jle
sbb
movsb
mov
insb
icebp
jno
jmp
popf
xchg
push
mov
mov
mov
jle
mov
mov
sbb
adc
sub
dec
fidivrl
hlt
add
jno
jl
inc
push
enter
dec
shll
pop
push
icebp
add
jp
mov
sub
dec
mov
push
jmp
outsb
and
insl
int3
les
arpl
inc
inc
sti
test
mov
ds
or
push
insl
push
imul
xor
xchg
in
cmp
imul
mov
jb
les
enter
mov
scas
push
pop
mov
or
addl
scas
mov
mov
cli
roll
popf
fcoml
test
aaa
or
pop
xchg
dec
dec
xor
cltd
repnz
or
jmp
cmp
outsl
xchg
pushf
mov
sub
lcall
fiaddl
out
mov
ret
lahf
std
and
push
pushf
mov
mov
popf
lcall
xchg
xor
fwait
mul
jge
ja
add
cmp
bound
xor
add
mov
cmpsl
push
mov
jb
imul
and
loop
fists
repnz
movsb
mov
add
adc
dec
das
sbbl
call
xchg
cmp
xlat
push
adc
mov
push
mov
scas
loop
cmp
jle
iret
and
push
fsubp
sarb
loope
fsubrp
test
cld
sbb
pop
aaa
popf
xor
sub
and
xor
dec
and
fmuls
bound
mov
dec
jg
fiaddl
sub
jmp
vphaddsw
lcall
fsubr
shlb
fs
xchg
adc
mov
add
cmpsb
mov
mov
mov
inc
enter
mov
pop
push
add
addr16
cwtl
mov
bound
test
jo
ljmp
daa
push
pop
mov
push
leave
das
jo
sbbl
xor
sub
pop
loop
xchg
dec
pushf
pop
pop
pop
push
cmpsb
test
clc
or
mov
add
adc
stos
dec
fbld
fucomi
and
dec
mov
pop
aaa
into
js
pop
xchg
push
adc
ljmp
pop
mov
les
pop
sub
ss
cld
ret
aas
pusha
mov
or
inc
adc
and
lret
rcll
xor
bound
outsl
orb
mov
inc
xchg
mov
testl
mov
mov
xchg
push
mov
mov
sub
mov
sbb
mov
xor
mov
xor
mov
add
jmp
pop
pop
scas
outsb
scas
pop
sbb
cmp
push
push
test
adc
pop
adc
adc
nop
pushf
sbb
inc
mov
out
pusha
dec
xchg
gs
mov
xor
inc
xchg
fadd
or
mov
and
stos
mov
inc
aas
or
mov
fcomps
sbb
pop
stos
xor
mov
or
jmp
mov
out
sub
jno
pushf
lea
jns
ds
sbbl
pop
cmp
adc
dec
mov
jle
jb
pop
pop
mov
insl
pushl
mov
loope
cs
adc
cmp
jle
insl
ds
xor
mov
mov
add
call
test
adcl
adc
mov
into
incb
adc
rclw
lcall
test
jbe
or
xchg
or
xorb
pop
clc
and
sub
cmp
repz
xlat
movsl
fdivrl
dec
ja
pusha
pop
fdivl
mov
and
addr16
dec
ret
dec
stc
mov
movsl
xchg
sub
sbb
push
pop
jmp
insl
jb
inc
pop
push
in
pop
push
aaa
pop
push
lret
addr16
xchg
and
ret
mov
insl
mov
sarb
stc
sub
push
xchg
mov
xor
call
cmpsl
adc
mov
jo
push
loop
mov
push
pop
pop
sub
mov
negb
push
ror
and
scas
and
jp
dec
inc
out
dec
dec
mov
push
lock
cli
imul
inc
adc
je
push
push
jl
mov
inc
or
and
je
xchg
jo
pop
fcomps
outsl
leave
jmp
jb,pt
xchg
jo
push
aaa
mov
push
cs
sub
jne
push
stos
nop
mov
pmulhuw
out
out
ret
mov
jns
test
mov
xor
mov
out
inc
jge
xor
push
inc
cltd
sub
test
loope
outsb
test
arpl
scas
xchg
jno
lret
jl
cmp
push
loopne
dec
stos
dec
sbb
enter
ret
cmp
cmp
loop
fsubr
stos
mov
sub
cmp
sub
roll
cltd
adc
mov
es
cmp
jmp
cmp
adc
iret
jbe
iret
lret
shll
faddl
repnz
push
pop
std
adc
sbb
adc
xchg
ljmp
jp
mov
out
cs
mov
lods
push
xlat
ljmp
jb
aaa
and
outsl
test
inc
les
adcl
cmpsl
push
adc
popa
adc
fcmovnu
outsl
sbb
hlt
jg
jge
iret
icebp
dec
call
sbb
pop
arpl
popf
mov
mov
dec
mov
icebp
push
loope
out
cmp
sahf
aas
or
or
mov
sub
stos
jne
lea
mov
imul
ss
out
push
sbb
loopne
popa
in
dec
push
repz
pusha
sahf
dec
lock
das
cmp
adc
jge
xor
out
add
aam
out
dec
popf
inc
out
xchg
fsubr
negl
mov
les
mov
mov
test
setb
fbstp
ds
lcall
popf
addb
sbb
testb
lea
fs
mov
notl
lahf
into
inc
test
jne
lret
or
lds
fildl
and
rcl
jmp
in
jle
mov
les
cmc
sti
test
ljmp
movsl
lods
aaa
ret
push
push
arpl
addr16
cmp
ret
add
adc
push
push
call
mov
sub
push
pop
sbb
mov
xor
cmp
jne
cmp
jne
mov
mov
add
shr
or
mov
xor
xor
add
mov
pop
leave
ret
push
mov
sub
push
push
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
jmp
ret
loopne
icebp
xchg
stos
mov
stos
fsubs
adc
and
adc
dec
xor
adc
xor
shr
std
and
les
adc
adc
xor
mov
aam
cmp
int
or
pop
imul
xchg
js
jno
clc
mov
daa
xchg
ret
mov
jne
iret
inc
cmp
jp
test
adc
ficompl
in
lds
push
xchg
ret
and
mov
mov
outsl
insb
push
mov
cmp
xchg
pusha
dec
pop
jle
adcb
bound
shrb
dec
rol
ret
shrl
inc
dec
inc
pop
sbb
lahf
je
sub
outsb
fdivs
outsb
fdivp
inc
or
inc
adc
ljmp
addr16
jp
adc
push
aam
or
inc
sub
mov
in
outsb
out
rorb
jl
pop
jnp
mov
add
and
test
jo
jmp
in
stos
add
cmp
pop
aaa
mov
shlb
mov
in
in
repz
repnz
lds
mov
lahf
and
lahf
das
add
int
into
push
sub
in
jno
sbb
shl
filds
sbb
push
mov
inc
fsubl
add
and
gs
inc
jp
pusha
push
repnz
xor
xchg
inc
sbb
in
insb
jae
cwtl
sub
pop
mov
push
cmp
mov
gs
inc
imul
and
test
into
pop
pop
js
shl
call
dec
add
add
cmovbe
jmp
add
jmp
sbb
cs
mov
inc
cmp
inc
hlt
jge
nop
test
mov
pop
aas
movsb
xchg
test
ss
mov
mov
sqrtps
or
mov
and
xor
dec
out
lods
dec
and
xor
insl
fadds
ljmp
shrl
stos
pop
pop
xchg
sti
test
cmpsl
lahf
and
inc
cmp
rclb
in
cmp
inc
pusha
jge
movsl
dec
testl
lods
aad
xor
sahf
inc
arpl
mov
fcomip
outsl
cmpsb
into
xor
inc
and
fcomi
aas
mov
pop
xchg
in
inc
xchg
and
aad
mov
add
pop
push
test
sbb
sbb
sarb
popa
push
hlt
and
pop
jg
pop
adc
icebp
xchg
das
repnz
mov
and
and
shrd
mov
mov
push
daa
stos
pushf
push
aad
out
pop
ja
mov
inc
inc
xor
nop
mov
sahf
cmp
ret
test
mov
xchg
fstl
cmp
clc
mov
mulb
scas
push
ss
test
push
push
mov
imul
dec
fsts
inc
les
add
inc
enter
add
inc
int3
cmp
movl
mov
mov
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
adc
mov
push
push
or
or
push
push
call
mov
mov
and
or
mov
mov
and
or
xor
xor
shld
shl
shr
xor
or
or
xor
mov
mov
xor
mov
mov
mov
mov
mov
jmp
cmp
iret
sbb
pop
push
lret
test
repz
adc
movlps
lret
xor
jmp
mov
stos
popf
mov
roll
lahf
subl
sbb
repz
js
mov
pop
cs
out
ljmp
cmp
mov
ja
repz
hlt
jbe
fnstcw
mov
sbb
mov
xchg
pop
ljmp
sub
cltd
test
fldt
or
jmp
out
stos
xchg
movsl
push
test
mov
out
sub
shl
icebp
sub
roll
add
mov
mov
pop
dec
fldl
idivl
cmc
lea
or
xor
lret
and
dec
push
sub
inc
dec
pop
jecxz
xchg
outsb
in
into
add
jmp
jl
pop
xor
pop
testl
add
fs
mov
xchg
mov
int3
jmp
and
lock
js
push
sub
or
xor
xor
dec
pop
cwtl
cwtl
out
pop
adc
scas
repnz
movsl
and
mov
inc
lods
fsubs
push
jp
jle
cmpsl
outsl
push
fnsave
fcomi
ds
fstpt
or
mov
mov
lock
xchg
into
test
push
cwtl
add
sub
inc
shlb
inc
push
adc
js
mov
xchg
push
les
rcrb
pop
xor
jae
jge
ja
ljmp
xchg
push
loopne
or
dec
inc
les
fnstsw
icebp
data16
cmpsb
xor
xor
pop
lret
fsubrs
sub
and
popa
bound
sbb
pop
loopne
mov
mov
rorb
adc
xchg
movsl
adc
lret
or
pop
mov
aam
pop
mov
scas
out
mov
repz
dec
inc
adc
or
mov
add
sar
cld
jo
lret
pop
xchg
stos
cwtl
hlt
and
lcall
mov
mov
jae
cld
jno
test
pop
pop
dec
jns
mov
sbb
xor
cmp
push
sub
push
fadd
sbb
repz
xor
dec
push
adc
adcl
neg
lret
and
inc
push
int3
incb
dec
test
or
les
loope
xchg
xor
add
int3
xchg
cmc
jg
xor
ljmp
mov
push
push
or
jmp
or
xor
stos
xor
nop
cmp
lods
andnps
insl
xchg
cmpsb
ficoml
jnp
add
lods
aaa
jp
push
and
mov
orl
add
add
push
adc
push
push
push
call
mov
mov
mov
xor
jmp
inc
in
sbb
sbb
fisttpl
cmpb
movlps
xchg
rcrl
jmp
or
pusha
add
les
and
fimull
sbb
mov
mov
jbe
or
lock
in
pop
lods
or
jb
call
xor
cmpsl
out
add
mov
arpl
or
cmc
stos
mov
out
sub
jmp
mov
fldenv
sbb
jg
movsb
fcomps
pmullw
pop
movsl
in
test
jmp
mov
cmp
sahf
in
je
hlt
cmp
bound
jnp
out
push
mov
shll
jge
pop
jp
imul
add
into
lods
je
or
cmpsb
lret
fstps
in
loopne
pop
pop
je
repz
jno
stos
lcall
addr16
mov
aaa
into
mov
ja
or
sub
scas
rcrl
pop
mov
jno
aaa
bnd
xchg
jge
push
pop
lret
xor
imul
mov
mov
cld
push
jecxz
push
dec
mov
and
dec
test
inc
mov
cmpsl
in
lds
cmp
decb
out
int
sbb
lds
out
ret
xchg
aas
add
sbb
inc
stos
push
adc
mov
test
and
mov
ja
bound
idivb
sbb
mov
xchg
inc
repz
inc
xchg
mov
jne
scas
xlat
push
shlb
aaa
inc
pop
xchg
or
or
icebp
push
and
mov
push
loopne
cmpsb
adc
mov
sub
mov
adc
xlat
negl
mov
insb
je
and
mov
arpl
sub
cmp
push
in
and
cli
xorb
das
insl
stos
jnp
and
adc
test
push
xor
xchg
popf
pushf
fwait
xchg
dec
in
sub
leave
mov
or
stc
loop
repz
cmpsl
mov
lock
inc
aad
sub
push
xor
or
sahf
enter
imul
stos
shlb
stos
mov
ss
lods
pop
nop
dec
leave
fstps
mov
in
in
in
aas
mov
sahf
repz
inc
mov
scas
fdivs
sub
push
orb
movsb
add
aam
sbb
jl
add
imul
cmpsb
inc
lahf
inc
pushf
sar
cmpl
and
daa
dec
loope
cld
imul
jmp
inc
mov
das
call
icebp
mov
in
lock
inc
leave
les
rol
icebp
cwtl
sbb
xor
adc
paddusb
sub
shl
adc
enter
out
popa
rcr
call
add
imul
xlat
mov
mov
mov
mov
mov
sub
mov
mov
sbb
mov
sub
mov
sbb
add
mov
adc
push
xor
mov
pop
sub
mov
sub
mov
mov
mov
add
xor
shrd
xor
shr
or
shl
or
mov
push
mov
mov
mov
push
push
push
call
mov
mov
mov
or
mov
or
mov
add
mov
adc
mov
add
mov
adc
add
adc
pop
mov
mov
pop
leave
ret
push
mov
sub
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
and
add
mov
and
mov
sub
and
mov
mov
imul
jmp
and
sbb
loope
stos
push
mov
stos
pop
jae
adc
bound
daa
fisubrl
jae
sub
faddl
pop
jp
push
notb
mov
push
xor
nop
iret
and
sbb
sti
mov
mov
pop
aas
js
repz
ss
add
sbb
or
sbb
sbb
ss
pop
and
add
int3
cmc
cmp
iret
or
cs
push
in
push
cmp
ljmp
das
cld
pusha
or
xchg
aam
sub
mov
mov
pop
vmovntps
xor
popa
loope
out
dec
sbb
inc
lods
push
loopne
sub
mov
popf
pop
cs
mov
pop
aam
sub
xchg
cmp
push
aas
xor
xchg
rolb
outsl
mov
push
adc
fwait
pop
sahf
jno
mov
fstp
jb
adc
stos
mov
jl
push
push
push
lea
rorl
cmpsl
ljmp
push
pop
fcoml
jl
out
adc
cmp
pop
push
sbb
fdivr
leave
rol
je
xchg
push
gs
jl
xorb
imul
push
add
inc
jl
mov
xchg
mov
adc
cmp
incb
jae
sub
or
loopne
daa
mov
adc
in
inc
mov
lds
xor
mov
lret
cmp
mov
push
orl
lods
cmp
xor
adc
jp
and
cmpsb
xorb
cld
dec
dec
xchg
or
in
int3
adc
mov
test
sbbl
loope
or
jge
lds
in
adc
clc
arpl
dec
add
and
pusha
pop
mov
addr16
in
mov
xor
add
adc
scas
mov
stc
jp
scas
inc
data16
lcall
daa
jge
scas
dec
push
push
lcall
inc
push
por
xchg
add
add
call
or
jns
or
sub
inc
mov
mov
mov
shll
mov
xchg
or
movswl
ja
shl
ss
jle
xchg
mov
fimuls
hlt
dec
mov
jns
imul
outsb
mov
push
cmp
cltd
subb
loope
repz
sahf
lods
stc
xor
xchg
sub
lock
movsb
sub
or
pop
jg
sbb
push
sub
xchg
adc
xchg
pop
lcall
insl
lods
iret
push
add
pop
cwtl
comiss
test
sbb
sub
cmpsb
cmpsl
stos
test
xor
push
mov
dec
and
mov
xchg
movsb
clc
sub
dec
rclb
adc
ret
mov
jo
iret
fimull
xchg
addb
cmp
pop
aam
punpcklbw
sbb
add
mov
icebp
ljmp
outsb
fstpl
add
xor
cmp
jne
mov
mov
mov
sub
add
mov
or
mov
imul
sub
add
mov
or
mov
jmp
push
daa
sahf
xchg
sbb
add
lahf
mov
mov
add
adc
mov
xor
xchg
jle
pmuludq
push
fsubl
xchg
ds
mov
pop
push
sbb
mov
mov
lea
jae
dec
mov
mov
push
fistps
or
cmp
adcb
and
fsub
inc
cs
push
push
xchg
jge
jg
rolb
bnd
xor
pop
fdivs
pop
pop
pcmpeqw
add
cmp
add
jnp
mov
fdiv
sub
push
inc
loopne
mov
jnp
js
lret
mov
subb
add
shrb
xchg
aam
jae
insb
stos
lcall
pop
fstpl
cmp
pop
mov
inc
fldt
push
arpl
push
icebp
dec
push
inc
push
popa
in
clc
mov
scas
adc
and
add
mov
xor
js
cltd
popa
fadds
xchg
dec
inc
or
ds
out
dec
test
pop
mov
aaa
dec
mov
test
pop
stos
pop
aaa
insb
in
mov
sarb
ja
jne
pop
mov
jg
pop
movsl
cmp
mov
sahf
inc
dec
imul
mov
xchg
cmp
push
jbe
je
mov
popf
jecxz
test
nop
mov
or
int
lret
pop
lods
sub
cmp
sub
sbbl
push
ja
repz
push
clc
sub
mov
popf
mov
xchg
add
aam
loop
popf
mov
ror
sbb
dec
xor
adc
lret
nop
daa
scas
aad
xchg
mov
int
test
pushf
shrb
into
into
pop
add
add
inc
lret
dec
pusha
test
add
pop
aam
in
adc
or
mov
ja
bnd
ss
dec
popf
and
ret
inc
rorb
mov
stc
out
insb
shl
stc
out
mov
sbbl
sbb
je
out
push
pop
ficoms
mov
testl
cmp
dec
insl
out
pop
inc
outsl
test
in
adc
test
mov
sub
xor
call
pusha
inc
stos
mov
jmp
inc
fildl
sbb
sbb
xchg
test
cmp
roll
mov
in
das
xchg
iret
lret
jge
push
stos
mov
or
add
and
mov
int
dec
cmpsl
lret
fsubs
add
push
lock
ss
xchg
into
xchg
lock
pop
xchg
cmp
les
int3
ljmp
test
adc
inc
adc
out
ss
scas
outsb
inc
mov
out
and
push
and
fs
test
xchg
arpl
arpl
xor
imul
add
mov
add
mov
mov
mov
and
mov
and
mov
imul
mov
or
mov
imul
mov
sub
cmp
jmp
pop
mov
sbb
sbb
mov
hlt
jl
hlt
xchg
in
jle
adc
or
dec
shr
sti
pop
xor
scas
les
push
mov
jns
or
mov
inc
inc
bound
cmp
push
clc
add
push
stc
push
sti
push
add
popa
dec
sub
mov
rcrl
aaa
push
mov
nop
sbb
add
mov
sti
dec
sbb
je
insl
add
xchg
mov
push
mov
xchg
sub
adc
xor
imul
xor
dec
into
dec
xlat
sbb
clc
cmpsl
xlat
mov
out
mov
inc
mov
aam
xchg
fnsave
add
sub
add
loope
xor
push
dec
jo
int
cs
pushf
jg
pop
in
push
or
icebp
rep
shrb
and
mov
mov
mov
call
insb
test
pop
aad
shlb
scas
aam
stos
cmpsb
fistps
lds
pop
adc
sub
cwtl
clc
pushf
imul
or
mov
mov
repnz
fdivrs
jo
das
in
pop
inc
mov
rcl
push
in
cmp
xchg
add
fcomps
cmp
ret
lret
shlb
es
xor
jo
shlb
mov
ds
gs
rclb
addb
dec
inc
daa
enter
mov
cs
pop
and
ficompl
cmp
or
js
or
dec
decb
lahf
sbb
push
jbe
mov
pop
cmpsb
jg
pop
out
icebp
fildl
mov
or
mov
pop
jns
lods
mov
jl
loop
mov
out
push
stc
mov
aam
sbb
mul
fwait
push
jge
popf
inc
insb
cmc
int3
mov
outsb
adc
fcmovnb
cmp
inc
jle
and
dec
lahf
mov
and
ret
leave
mov
aam
mov
fdivr
faddl
cmp
and
int3
arpl
stc
insl
jb
and
or
push
shl
sub
fbld
clc
dec
dec
push
sub
jp
lea
fsubrl
cmpsl
jp
out
cmpsb
push
gs
outsb
filds
mov
or
mov
iret
cmpsb
pushf
pop
ret
sbb
jl
mov
xor
pop
mov
xchg
sub
inc
mov
clc
xchg
mov
push
stos
nop
sbb
lods
sti
xchg
cltd
jmp
cltd
mull
add
jecxz
scas
lret
xchg
js
arpl
mov
jae
test
dec
jb
out
cmc
out
adc
or
imul
int3
outsl
pop
movsb
imul
inc
or
mov
push
pop
mov
test
fisttpl
rcl
or
out
lahf
and
fistpl
add
xor
scas
mov
fisubs
or
mov
es
out
add
test
add
add
add
add
push
add
xor
add
jmp
movl
movl
mov
mov
imul
add
and
add
or
sub
leave
ret
push
mov
and
jmp
xchg
mov
ret
sub
lcall
adc
jb
adc
mov
ret
mov
jo
in
mov
ret
jg
xchg
xchg
popf
and
scas
pop
pop
stos
ror
std
push
pop
adcl
loope,pt
xchg
cmp
pop
and
push
mov
lret
clc
cmpsl
sahf
add
orl
lahf
sbb
push
loop
pop
pop
mov
and
stos
mov
mov
mov
add
mov
js
and
or
cmpsb
sbb
fadds
and
shrb
rorb
cmp
and
rolb
loope
adc
jg
inc
inc
jmp
xchg
iret
inc
out
lret
sbb
negb
in
in
lea
jge
and
jnp
pop
subl
outsb
pop
xchg
adc
mov
mov
mov
jle
xchg
enter
inc
mov
mov
and
or
int3
mov
cli
or
scas
push
mov
mov
sub
jno
out
enter
popa
call
sub
pushf
push
mov
dec
xchg
push
add
jno
inc
mov
lea
mov
inc
lods
in
xchg
sub
out
mov
ret
in
xor
xor
pusha
or
es
mov
pop
mov
int
loope
or
out
jb
stos
mov
lock
cmp
in
add
lahf
push
xor
jns
or
and
push
jg
or
in
mov
ja
inc
stos
pop
outsb
dec
imul
es
push
add
cltd
mov
mov
cmpsl
test
imul
mov
imul
add
push
jle
dec
lock
xor
xor
repz
pusha
jnp
push
imul
iret
cmp
cli
dec
outsl
sbb
popf
adc
and
sti
mov
dec
aaa
jae
mov
or
in
cmp
add
outsb
es
subl
mov
push
or
add
call
insl
mov
iret
shll
cmp
adc
and
bound
pop
call
cltd
jmp
dec
mov
push
or
ss
aad
pop
jns
enter
pop
push
faddl
into
mov
mov
push
gs
fnstcw
push
aaa
mov
mov
addr16
out
pop
in
rorb
inc
clc
fidivrl
js
jbe
sub
inc
bound
addr16
fidivrs
gs
and
daa
call
loopne
out
daa
aam
jmp
js
mov
jge
mov
repz
in
adc
cli
in
call
dec
data16
push
in
pop
lods
jg
shll
je
mov
mov
test
rcr
sahf
add
sub
js
in
cwtl
sbb
add
jnp
mov
mov
or
xor
mov
mov
adc
fdiv
and
mov
xor
in
mov
ds
push
lea
mov
mov
mov
mov
sub
sbb
mov
orl
orl
lea
push
lea
push
call
mov
mov
pushl
mov
pushl
mov
pushl
pushl
pushl
pushl
pushl
call
pop
pop
mov
pop
ret
push
mov
sub
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
add
xor
mov
and
imul
xor
jmp
movsb
pop
rclb
push
cmpb
jnp
ljmp
jp
adc
mov
pop
sbb
iret
or
adc
fnstcw
push
push
in
jg
and
stos
ret
clc
cmp
mov
ss
pusha
loope
jge
out
add
cmp
sti
ljmp
pop
push
mov
lods
das
int3
xchg
out
addr16
and
sbb
jl
sbb
test
push
hlt
mov
aas
movsl
or
stos
shll
jae
adc
lahf
icebp
andl
jg
pop
jge
add
inc
ss
push
inc
or
pop
mov
dec
fsubs
inc
inc
mov
gs
mov
cmp
lds
xor
pop
pop
adc
push
cs
outsl
jg
xchg
pop
inc
mov
and
dec
dec
inc
sub
fistl
test
add
les
cmc
inc
mov
aad
adc
fs
jl
sarl
and
cmp
jecxz
mov
icebp
mov
dec
movsb
js
mov
pop
or
popf
adc
out
insl
out
pop
stos
pop
jb
or
hlt
loopne
inc
sbb
mov
movl
cmc
mov
push
insb
pop
stos
and
jae
pop
pop
inc
xchg
jne
jns
jp
or
push
inc
mov
cmp
aaa
pop
ljmp
loope
inc
shlb
jnp
mov
jmp
test
js
sbb
jbe
fsub
jns
icebp
mov
adc
dec
cli
mov
pushf
fwait
xchg
jp
in
lahf
inc
lock
push
pop
ljmp
mov
jl
test
pop
jae
dec
pop
movsl
stc
mov
lods
std
clc
das
mov
fdivrl
jecxz
push
mov
mov
jb
leave
pushfw
mov
push
sarl
in
aam
cwtl
scas
lret
sbb
jb
lcall
mov
pop
xor
xor
dec
out
add
mov
mov
adc
xchg
ficoml
mov
dec
jnp
inc
loop
sti
adc
lea
dec
xchg
xchg
jle
out
mov
mov
xchg
xchg
int
and
cmpb
pminub
xchg
jecxz
cmp
insb
xor
das
jl
add
or
pop
and
sti
clc
cld
or
xchg
mov
mov
mov
xor
xor
pop
dec
adc
jb
or
jno
or
jnp
sbb
les
pop
jmp
adc
sub
ror
push
sbb
fists
mov
idiv
xchg
cmp
xor
adc
inc
roll
adc
rcrb
aam
sbb
or
mov
adc
subl
shlb
addr16
test
cmp
loop
dec
jne
sbb
xor
add
xorb
leave
ficompl
push
mov
mov
test
sub
push
rolb
inc
out
mov
inc
mov
loope
icebp
shll
sbb
outsb
fwait
dec
pop
out
roll
inc
cld
mov
add
inc
clc
roll
add
inc
hlt
adc
add
mov
mov
xor
sub
div
mov
mov
or
xor
mov
sub
mov
mov
mov
mov
mov
mov
mov
mov
imul
and
or
xor
add
mov
mov
sub
add
mov
xor
mov
and
mov
xor
sub
jmp
jecxz
in
bound
pop
jne
inc
stos
sbb
adc
jp
adc
dec
ret
mov
adc
or
jne
sbb
lcall
push
xchg
rolb
add
dec
gs
inc
inc
xor
mov
outsl
ljmp
or
es
cs
pop
movb
push
pop
jmp
inc
andl
movsl
push
sbb
aaa
mov
pop
jp
add
jno
jno
inc
gs
xchg
and
cmpb
dec
dec
sbb
fstl
call
mov
div
insb
leave
pextrw
mov
xchg
adc
leave
xchg
mov
test
sbb
or
mov
and
repz
cld
mov
fwait
adc
push
mov
test
cmpsb
cmc
scas
dec
cmp
repz
add
out
je
idivb
sbb
jb
scas
or
push
dec
xchg
daa
roll
imul
push
mov
jns
orb
incl
aas
loope
mov
push
vpcomuw
aam
cmc
inc
jae
lods
int
shr
dec
xor
mov
loopne
nop
mov
cmpsb
xlat
mov
pop
xor
cmp
lret
pop
jbe
call
pop
in
popf
mov
jbe
xchg
femms
ljmp
mov
fbstp
int
psubusw
inc
pop
imul
cld
outsb
push
and
out
xchg
mov
push
aaa
adc
loope
inc
pop
dec
mov
xchg
or
aam
sbb
dec
jecxz
inc
add
sub
and
fildll
mov
idivl
out
fstpl
aaa
fstps
bound
mov
dec
lods
in
outsb
dec
mov
stc
lahf
lret
int3
loope
sahf
rclb
pop
pushf
xchg
sbb
pop
out
inc
jecxz
bound
push
pop
bound
add
cmp
jge
and
sub
push
roll
mov
cmp
pusha
das
in
fstl
xor
dec
push
fisubl
out
test
mov
push
push
and
or
mov
shl
rclb
mov
adcb
pop
mov
mov
or
out
jo
sub
and
loop
das
sub
xchg
out
in
jg
sbb
or
rclb
add
jne
mov
inc
clc
cmp
stc
mov
std
sub
repz
loope
outsb
mov
aaa
adc
repz
sbb
int3
das
dec
sbb
push
inc
mov
jg
sbb
int
mov
outsl
rcrl
or
mov
xorb
andl
loope
jmp
fs
fstpl
stos
xchg
adc
jge
andl
mov
pop
mov
lcall
mov
xor
mov
sub
arpl
rorl
xor
mov
jmp
jg
data16
outsb
and
loopne
rcrb
adc
push
fmuls
jnp
add
lea
mov
shr
or
mov
jmp
pop
pop
mov
push
fisttpll
lods
insb
pop
push
adc
jp
adc
xor
sarb
push
xor
cmpsb
cmpsb
xor
xor
sbb
push
sub
xor
mov
cmp
fsubr
or
fiadds
xor
adc
xchg
in
and
add
pushl
int
or
xor
lret
lock
inc
xchg
cmpsb
call
cli
push
loope
fistpll
lds
cli
or
lds
jg
aas
push
stos
mov
mov
movsb
cli
push
ret
bound
mov
cmp
cli
clc
negl
rcrb
ja
popf
xorl
fidivrs
xchg
je
aam
movsb
xchg
jb
mov
mov
shr
sub
into
dec
mov
jle
ja
je
lods
popa
cld
and
sbb
repnz
pop
pushf
inc
repnz
imul
pop
inc
xchg
insl
testl
push
js
icebp
popf
add
adc
aas
jmp
mov
daa
testb
fstpl
cmp
scas
aaa
mov
rcr
cltd
pop
lods
xchg
es
push
pop
inc
add
jge
inc
loop
jne
push
out
dec
push
add
push
dec
es
icebp
rorl
outsl
ficomps
jno
and
push
nop
ljmp
jno
das
push
push
loop
pusha
add
or
mov
aam
xchg
iret
inc
pop
push
push
es
les
fisttps
mov
dec
in
lea
and
aaa
xchg
dec
pop
es
pop
lret
and
add
mov
punpcklwd
ret
sbb
mov
sub
and
inc
mov
arpl
xor
push
lods
cs
push
jne
mov
sti
mov
fstps
iret
xchg
fwait
lret
mov
push
ret
loopne
or
lock
jb
and
test
mov
clc
lret
aas
inc
sub
test
mov
iret
fcompl
je
add
jae
add
js
cs
adc
sbb
and
fwait
xchg
out
jle
cli
inc
sti
add
and
aad
xchg
movsl
test
movsl
mov
enter
cmp
int3
jl
popa
cwtl
and
lds
lret
add
dec
xchg
mov
fldt
fldenv
inc
enter
jge
sbb
in
repz
xchg
rcll
xor
xor
out
enter
cs
sbb
and
stos
and
add
rcrb
daa
push
lahf
lock
push
rcll
dec
dec
sbb
jecxz
push
mov
dec
and
sahf
mov
xchg
ljmp
pop
mov
sbb
insb
sub
sbb
bound
test
mov
int3
mov
adc
fwait
repz
adc
mulb
imul
xchg
fmulp
mov
add
bound
cld
pop
mov
sub
hlt
in
cmp
cwtl
stos
loope
fldcw
repnz
cmp
jbe
pop
leave
ret
push
mov
sub
mov
add
push
push
add
push
or
mov
sbb
mov
shrd
cmpl
movzbl
movl
mov
jmp
mov
mov
jne
push
push
push
pushl
push
pushl
call
orl
and
mov
mov
sbb
sub
negl
shr
cmpl
movl
mov
jmp
movzwl
jg
push
push
pushl
call
add
movzbl
adc
mov
adc
movzbl
sbb
xor
xor
xor
mov
sub
sub
mov
adc
mov
movzwl
or
mov
mov
movzbl
xor
xor
xor
mov
xor
mov
or
neg
mov
mov
sbb
shl
mov
sbb
shrd
sub
xor
adc
shr
xor
or
add
mov
jmp
jnp
add
mov
ficoms
push
in
fdivrs
lea
adc
sarb
xchg
out
pushf
arpl
sete
fnstcw
cmp
shr
pop
pop
xor
subl
mov
les
jecxz
in
xchg
add
mov
stc
sbb
cmpsl
jnp
or
daa
shll
bound
adc
mov
in
std
adc
cmp
gs
mov
push
js
mov
leave
lds
cmp
jg
mov
cmc
icebp
jmp
aam
ss
push
mov
gs
dec
popa
jge
inc
pop
repz
bound
xchg
pop
jg
in
fdivr
repz
ss
push
sub
fwait
insl
and
gs
adc
ja
lea
inc
pop
aas
sub
jo
test
xor
in
cmp
mov
inc
enter
fistpl
icebp
shrl
xchg
adc
mov
inc
lods
lea
cwtl
xor
dec
out
outsl
rcl
mov
push
cmp
dec
sub
popa
jg
iret
in
sarb
mov
call
mov
pusha
push
fbstp
mov
ret
or
lahf
mov
into
mov
cs
push
xchg
daa
push
rcrl
filds
push
ss
xchg
inc
sub
stc
xor
push
cmp
xlat
cmc
jb
ljmp
push
pop
sbb
mov
mov
aas
fidivl
cmpsb
int3
or
cmp
stc
ljmp
popa
cmp
not
cwtl
inc
and
pop
outsb
shl
xor
mov
dec
movsb
shl
inc
xchg
xor
or
scas
jbe
lods
ret
int
mov
lret
xchg
push
adc
xor
popa
bound
sbb
mov
in
mov
rol
test
clc
imul
test
mov
sbb
std
dec
scas
sbb
mov
iret
or
xor
mov
in
and
ss
in
xor
rorb
dec
sbbb
jb
push
pusha
inc
and
cld
pop
sbb
jne
pop
out
xchg
orl
pop
inc
adc
xchg
into
mov
or
mov
sub
add
and
mov
mov
xor
aam
ror
or
pop
fsubrl
mov
xchg
daa
leave
or
leave
sarb
push
adc
dec
mov
dec
or
add
loope
add
xchg
mov
sub
les
loopne
adc
lea
adc
or
mov
add
cli
dec
setno
xchg
je
stc
ret
add
add
fsubs
ja
jle
scas
adc
gs
in
gs
mov
or
loop
ja
xchg
mov
sbb
repnz
jle
jbe
sbb
mov
cmp
sahf
push
mov
rcll
xor
adc
nop
xchg
add
addr16
pop
out
add
jne
aaa
xor
mov
adc
xor
mov
inc
dec
and
sub
cmp
fs
inc
cmp
andb
mov
mov
addr16
sub
and
mov
add
inc
cwtl
pop
xorb
adc
subb
xor
into
cmpsb
sbbb
jno
fldenv
mov
sbb
dec
adc
clc
mov
jo
mov
lret
xor
loopne
mov
out
inc
xchg
push
data16
scas
adc
dec
mov
or
inc
das
push
in
mov
mov
outsl
add
mov
mov
sbb
pop
xor
fiadds
dec
bound
shr
test
cwtl
xlat
mov
push
icebp
mov
and
sbb
sub
arpl
lea
inc
pushf
lcall
pop
mov
and
adc
mov
or
xor
mov
repnz
inc
clc
movsb
icebp
fs
jg
test
add
push
lea
pushf
pop
pop
pop
mov
and
andl
hlt
adc
int3
pop
xchg
lock
mov
clc
xchg
jnp
add
fmull
data16
sbb
pusha
pop
sbb
ljmp
loop
inc
aam
subb
mov
sub
jb
pop
ja
bnd
mov
aas
jno
test
cmp
or
sub
mov
xor
mov
sahf
or
xor
lea
les
sbb
out
ljmp
cmp
mov
fldenv
add
mov
aaa
out
sub
fsubrs
jp
and
adc
sbb
lods
scas
pop
add
ljmp
dec
daa
movl
inc
xor
push
xor
mov
mov
adc
push
popf
mov
mov
ret
pop
nop
and
repnz
cmp
sbb
ljmp
jp
out
loopne
clc
fdivl
lea
aas
aam
subb
jge
ja
or
xchg
xor
lods
adc
cmp
sbb
pop
cmp
jne
inc
add
movl
not
mov
jmp
mov
jg
push
push
push
call
sbbl
adc
andl
mov
mov
xor
xor
or
mov
adc
adcl
neg
xor
or
mov
mov
sub
or
mov
mov
xor
or
mov
sub
sub
mov
xorl
mov
or
mov
xor
mov
movzwl
sub
mov
cmpl
mov
mov
mov
jmp
mov
jle
push
call
sub
and
subl
or
or
adc
mov
mov
cmpl
movzbl
mov
jmp
mov
jb
push
push
call
mov
xor
xor
sub
or
xorl
adc
sub
sbb
mov
shl
mov
sub
xor
or
xor
sbb
mov
xor
adcl
shld
shl
mov
mov
movl
movl
movl
cmp
movl
jne
movl
cmp
movl
je
xor
mov
xor
mov
xor
xor
add
sbb
xor
xor
mov
cmpl
mov
mov
mov
mov
jmp
movl
movl
jg
push
call
movl
and
sub
subl
movl
mov
shld
movl
shl
cmp
movl
jne
movl
cmp
je
and
mov
xor
or
and
mov
push
movl
pop
or
xor
shl
mov
addl
xor
adcl
shr
addl
or
mov
or
mov
mov
mov
mov
cmpl
movzbl
mov
jmp
mov
mov
jl
pushl
push
pushl
push
call
mov
add
inc
mov
and
sub
mov
jmp
add
int3
sub
inc
les
pop
inc
adc
lea
adc
pop
push
addb
xchg
cmp
mov
jne
call
icebp
jle
ljmp
cmp
ljmp
in
repnz
fnstcw
xor
sub
jle
xchg
int3
cmp
sbb
pushf
hlt
sbbl
mov
mov
movsl
int
pop
fmull
ljmp
pop
setb
fsubrs
cmp
pop
inc
sub
or
jecxz
and
les
leave
dec
mov
pop
or
sbb
movsl
insl
mov
xchg
sub
out
pop
sbb
inc
test
outsb
ret
xor
shl
mov
or
mov
push
int
inc
adcb
xor
jno
mov
repz
cmp
push
out
mov
dec
ja
sbb
call
out
and
in
test
jo
dec
mov
push
xchg
pushf
jecxz
shl
stos
lahf
pop
xchg
push
add
stc
repz
push
shlb
sub
hlt
push
adc
cmp
xchg
mov
push
scas
cmp
pop
dec
jp
outsb
xchg
push
pop
xor
aaa
aas
mov
add
leave
fists
stos
pop
pop
dec
jecxz
mov
xchg
fcomip
xor
add
sti
cmp
ret
iret
les
in
data16
add
sub
push
andl
jecxz
pop
aas
jge
insb
sbb
or
test
add
les
dec
jo
push
mov
mov
pushf
lea
sbb
or
jge
sbb
jbe
repz
xchg
fsub
ljmp
xor
popa
inc
data16
lahf
mov
jle
out
lahf
xchg
push
push
and
popa
in
stos
jmp
stos
push
fstpt
lret
cmpsl
mov
jle
and
repnz
loop
pop
fsubs
faddl
js
and
sub
and
insb
xchg
mov
pushl
mov
nop
mov
adc
jg
push
jnp
pop
jbe
inc
xlat
push
nop
jmp
xchg
cmp
xor
pop
pop
and
push
sbb
repnz
dec
cmp
orl
js
lahf
adc
mov
dec
lock
sbb
adc
lahf
push
xor
enter
loop
sahf
xor
cli
dec
jo
lret
add
jb
xchg
lahf
inc
sbb
sub
xchg
xchg
cs
sbb
jns
add
jmp
or
jl
iret
mov
popa
mov
jns
arpl
fnstenv
push
pop
sub
mov
subl
add
mov
cmpl
movzwl
movzbl
mov
mov
jmp
movl
movl
ja
pushl
call
or
and
or
xor
mov
adc
adc
mov
xor
mov
lea
andl
mov
addl
mov
xor
mov
xor
xorl
xor
addl
shr
subl
shl
or
mov
movl
add
mov
mov
xor
xor
andl
shr
addl
shl
sbbl
or
subl
push
lea
push
subl
lea
push
call
cmpl
mov
mov
jmp
mov
movzwl
ja
pushl
push
push
call
adc
movzbl
sub
and
mov
xor
adc
or
sub
xor
xor
mov
and
mov
cmpl
movl
mov
mov
jmp
movl
movl
jae
push
pushl
pushl
pushl
call
sbb
sub
adcl
or
sbb
xor
add
mov
sub
and
mov
xor
xor
shr
shl
or
push
lea
push
mov
mov
shrd
shr
mov
mov
xor
xor
or
lea
push
shl
call
mov
mov
xor
xor
shr
shl
or
push
lea
push
mov
mov
shrd
shr
mov
mov
xor
xor
or
lea
push
shl
call
mov
mov
xor
xor
shl
shr
or
push
lea
push
mov
mov
shrd
shr
mov
mov
xor
xor
or
shl
mov
mov
shrd
shr
mov
mov
xor
xor
or
add
lea
push
shl
call
mov
mov
xor
shl
xor
shr
or
push
lea
push
mov
mov
shrd
shr
jmp
mov
pop
cmp
shlb
push
dec
mov
lea
adc
out
add
rcll
lcall
in
pop
jmp
std
sbb
jmp
inc
mov
adc
ror
loope
sub
out
aad
fildl
add
and
xor
pop
mov
push
inc
push
sbb
rcr
xchg
je,pt
cs
jle
sbb
fstps
repnz
stc
pusha
mov
out
stos
lcall
jnp
jp
in
sahf
imul
dec
outsb
or
xchg
aad
sbb
mov
into
add
jl
sub
mov
insb
cmp
sub
idivb
sub
ffree
dec
pop
add
dec
xchg
sub
jns
or
lea
inc
fmull
ljmp
mov
sahf
dec
test
dec
fldt
enter
int
cmpsl
rcrb
ljmp
xchg
les
je
scas
fstpt
lcall
cmp
cltd
test
push
fistpl
adcl
mov
lods
adc
sub
cli
stos
lahf
fwait
sbb
pusha
xchg
pop
lahf
xchg
leave
iret
mov
cli
dec
pop
enter
cld
pop
cmc
xchg
xchg
or
outsb
popf
cs
dec
jle
fmul
jb
sbb
inc
cmpb
jnp
pop
adcb
lret
into
imul
les
std
les
sbb
test
fisubs
cmc
lods
cli
and
pusha
inc
inc
insb
cmc
mov
mov
mov
pushf
lret
mov
icebp
xchg
repnz
push
mov
and
mov
xchg
mov
pop
mov
fnstsw
xchg
pop
aas
adc
and
cmp
xor
loope
mov
scas
adc
negl
out
mov
sub
inc
je
ljmp
jbe
enter
rcl
sbb
aad
jp
mov
or
xchg
dec
xor
outsl
pop
cmp
stc
jge
mov
pop
loope
mov
adc
inc
pop
imul
fidivrl
popa
or
sbb
ffree
daa
and
out
push
popa
dec
ljmp
jbe
pop
push
dec
mov
jbe
in
xor
xor
adc
jmp
jmp
aas
sar
mov
cld
pop
cltd
sub
repnz
imul
cltd
push
out
mov
fisubrs
loopne
pop
out
mov
add
cmp
xchg
adc
sub
cmp
icebp
mov
adc
sub
in
shll
subl
mov
enter
pop
xor
arpl
enter
repz
xchg
leave
jnp
mov
mov
mov
xor
shl
mov
xor
or
mov
shrd
shr
mov
mov
xor
xor
or
shl
add
mov
mov
shrd
shr
xor
mov
mov
xor
or
add
lea
push
shl
call
mov
mov
xor
xor
shr
shl
or
mov
lea
jmp
xchg
sbb
sbb
jbe
insb
inc
xor
adc
inc
popa
ret
stos
addr16
fldcw
add
xchg
sub
int
adc
xchg
sub
inc
jbe
mov
mov
ret
cmpsb
out
ja
out
fwait
xchg
aaa
fldl
loop
xchg
es
fidivrl
je
push
mov
cmp
jmp
sarb
xor
call
sub
mov
mov
mov
sbb
xchg
sahf
movsb
mov
dec
dec
pop
jno
pop
mov
pop
adc
mov
mov
pushf
insb
cmpsl
xchg
pop
push
dec
cs
pop
jle
loope
mov
pop
mov
repz
es
mov
jmp
inc
ljmp
arpl
cmpsl
and
out
and
jo
addr16
sub
outsl
pop
sbb
call
jecxz
xlat
xchg
imul
mov
xor
in
shrl
cmp
lret
dec
ret
inc
adc
imul
mov
and
loopne
sbb
add
fadd
pop
adcb
pop
and
cmpsl
out
or
clc
jge
cld
cmc
lret
repz
adc
add
xchg
push
pop
je
nop
and
roll
repnz
pop
jg
mov
cwtl
and
in
pushf
adc
pop
pusha
add
xor
test
pop
mov
lock
lret
push
adc
dec
mov
out
rcll
cmp
dec
pop
in
andl
sahf
idivl
pop
pusha
clc
adc
pop
aaa
das
ficomps
xchg
push
cmpb
fisubs
jne
rcrb
push
pusha
add
aam
scas
sub
adc
jns
xchg
mov
pusha
lret
aas
inc
cli
aam
mov
add
das
mov
add
loope
or
push
adcl
call
arpl
xor
rol
adc
jbe
les
jl
test
ljmp
sahf
sbb
aaa
sar
je
mov
stc
cmp
pop
jns
jecxz
pop
in
xor
xchg
inc
outsl
xor
sbb
jno
adc
movsb
lods
ret
mov
nop
orb
pushf
jmp
lds
push
mov
mov
xlat
and
adc
loop
popf
add
popa
rol
lahf
add
loopne
loop
jle
dec
dec
rcrl
push
mov
jne
mov
mov
jp
pop
dec
test
pop
lret
das
in
in
dec
fwait
mov
adc
enter
add
adc
xor
or
push
mov
mov
push
pushl
shl
call
lea
push
mov
mov
shrd
shr
mov
mov
xor
xor
or
push
mov
push
pushl
shl
call
mov
mov
mov
mov
mov
mov
rol
mov
xor
cmp
je
mov
mov
xor
test
je
mov
mov
movzbl
sub
mov
rorb
mov
mov
inc
cmp
jb
dec
jne
mov
mov
shrd
shr
jmp
mov
add
sub
jle
sub
jo
push
sub
adc
imul
daa
push
out
sub
rcr
ds
push
mov
jle
jns
loope,pn
jmp
sar
jp
xor
lahf
mov
mov
sbb
jp
sub
sub
hlt
aam
cmp
mov
xor
inc
ja
fistps
push
inc
mulb
push
or
xor
lahf
mov
cmc
iret
pusha
loopne
mov
push
xchg
repnz
loopne
fisubl
fsubrs
subl
pop
adc
push
rorl
ret
sbb
add
out
add
cltd
mov
xor
push
aad
sbb
popf
adc
iret
rcrl
inc
jge
fst
cwtl
sub
jnp
ds
add
and
loopne
pop
test
push
inc
mov
xor
in
or
testb
popa
jmp
pushf
sbb
xchg
xchg
test
pop
cmpsl
jmp
movsl
out
rcr
cs
add
mov
stc
fsubrl
leave
cmpsb
xlat
rclb
outsb
pop
out
fstps
xchg
stos
enter
stos
pop
mov
cld
mov
pop
inc
xchg
aam
cs
or
lock
push
sbb
or
pop
call
jnp
add
xorb
addb
fcmovne
jg
pop
jno
imul
mov
jae
cmp
pusha
dec
sahf
sub
pop
out
mov
in
js
shrb
jecxz
addl
lods
sub
sub
loope
cltd
inc
out
xor
jno
pop
js
dec
jo
out
cmp
aas
pop
push
pusha
ret
dec
std
sub
xchg
rclb
sub
mov
dec
mov
jp
icebp
lcall
out
test
push
mov
or
jmp
add
dec
lods
mov
push
ss
in
xor
jb
jns
mov
add
xor
lods
mov
cmp
idiv
fstpt
cmp
inc
inc
insl
fsubrs
fnstenv
int3
dec
cmp
ja
cmp
fwait
push
pop
mov
sti
mov
cmc
mov
stos
iret
add
mov
jg
rcrb
push
mov
or
int3
and
add
push
es
pop
pop
add
or
sub
testl
mov
push
scas
or
mov
shrb
cwtl
mov
insl
scas
out
hlt
aam
stos
inc
mov
test
cli
xor
repz
ret
add
sub
mov
mov
xor
xor
or
push
add
jmp
and
lods
and
js
mov
adc
lea
adc
inc
cmp
and
iret
andb
movsl
sbb
data16
loopne
xchg
ror
mov
push
shrb
pop
push
jp
in
inc
sub
xchg
sub
sbb
clc
ficoml
daa
out
mov
cmp
fstps
cmp
stc
popf
repnz
ja
xchg
mov
mov
loop
add
cmp
cltd
enter
fiaddl
and
pop
leave
fs
adc
cmpsl
mov
pop
fcoms
inc
inc
lods
mov
clc
aam
in
pop
push
ja
je
push
test
movsl
aam
xchg
stos
pop
add
sbb
lock
pushf
mov
nop
cs
pop
lea
aas
arpl
sbb
cmp
and
jle
xor
mov
pop
mov
inc
mov
shll
inc
sbbb
jns
sbb
jbe
dec
aas
test
sbb
push
movsl
popa
nop
int3
inc
jl
stc
pushl
inc
or
and
imul
sub
fists
loop
enter
push
icebp
rcrb
clc
adc
cmp
inc
aas
pop
jae
or
add
sbb
jb
test
cmpb
xor
mov
inc
mov
fwait
fwait
xor
stos
sub
outsb
in
fdivr
fildl
fwait
dec
sbb
aas
adc
mov
jmp
or
and
cmc
inc
into
inc
sahf
add
enter
push
pop
jb
jl,pn
aad
push
or
into
iret
jg
incb
imul
xlat
ret
inc
or
stc
lods
dec
stc
loope
mov
out
cmp
negb
mov
or
int
dec
pop
and
sub
leave
cmp
int
mov
add
repz
test
hlt
inc
mov
xchg
mov
sbb
fstpt
sbb
fistps
into
push
cmpb
push
xchg
loopne
add
aad
imull
int3
push
andl
fistl
mov
push
xchg
mov
call
test
fisttps
nop
test
mov
cs
push
mov
inc
iret
xchg
lret
fdivrl
ja
cmp
mov
je
push
pop
scas
jae
daa
cmp
arpl
stos
push
sbb
ret
loope
insl
iret
add
lahf
mov
pop
dec
jno
outsl
filds
data16
cmp
and
jle
cmp
xor
mov
adc
or
rcll
insb
sarl
push
shl
call
jmp
outsl
xchg
pop
test
add
mov
movlps
ficoml
das
xor
push
xlat
daa
mov
js
daa
push
out
xor
xchg
mov
mov
dec
fisttpll
lock
loopne
dec
inc
cmp
jmp
ljmp
test
jne
dec
cmpsb
cmp
sub
xchg
or
sub
jmp
dec
cmp
movsl
or
or
xchg
out
inc
add
scas
jo
lods
lahf
mov
sti
dec
popa
fisubrs
jp
sub
mov
mov
or
negl
inc
mov
ret
outsb
pop
lea
push
or
inc
mov
jle
sbb
rclb
call
xor
enter
xorl
cltd
mov
test
jp
jmp
sbb
and
xor
jnp
push
dec
data16
and
sti
out
imul
fsts
pop
cmc
sbb
mov
cmp
pop
movsb
inc
imul
jns
cli
push
push
jnp
push
lock
dec
push
mov
xchg
lcall
mov
lret
cmpsl
movl
cmp
scas
push
pop
cltd
pop
sub
jle
add
jmp
pop
in
xlat
jg
in
popl
fcmovu
mov
sbb
dec
nop
jge
xchg
fsub
fisttpl
loopne
jecxz
stos
xchg
lahf
fidivrs
inc
pusha
mov
jne
mov
add
shl
push
je
cmp
cmp
mov
inc
mov
or
mov
inc
adc
and
movsl
jne
sbb
ja
aad
nop
xor
fdivs
popa
in
pop
add
or
mov
das
das
shlb
enter
out
pushf
stos
push
jl
mov
inc
push
xor
test
imul
test
mov
ficoms
popf
rorl
je
lahf
decl
orb
jb
fdivl
jp
and
cmp
sbb
sbb
or
leave
cld
or
mov
das
ja
repz
push
dec
mov
lret
mov
out
loop
stos
pop
out
cmp
mov
hlt
orl
pushf
push
jb
inc
mov
cmpsb
sti
or
mov
jae
dec
pop
fs
xor
ret
adc
repz
xor
xchg
xchg
arpl
icebp
fsubr
dec
aam
xor
icebp
jns
xchg
pusha
and
or
scas
in
repz
aaa
push
std
aam
int
cmp
xchg
inc
pop
loope
inc
mov
dec
xchg
pop
xor
sbb
cmp
mull
sahf
lahf
push
pop
je
jb
scas
or
scas
insb
mov
mov
shrd
shr
mov
mov
xor
xor
or
add
push
push
mov
shl
mov
shrd
shr
mov
mov
xor
xor
or
add
jmp
jge
jbe
jne
jge
das
adc
pop
lods
push
sbb
adc
mov
sbb
sub
jge
mov
pop
and
fwait
imul
lods
push
and
mov
notb
pop
pop
imul
push
sarl
nop
cmpsb
sub
movsl
arpl
hlt
jecxz
add
xchg
and
enter
pop
and
pop
sub
pop
pop
inc
xchg
push
push
fnstcw
out
mov
shrl
and
sub
lret
push
pop
inc
push
daa
sbb
xchg
or
adc
fisttps
scas
and
mov
add
xchg
testl
imull
adc
imul
or
cmpsl
and
fs
sub
out
mov
rolb
sbb
test
inc
adc
adc
imul
pop
xchg
pop
cltd
push
push
arpl
scas
and
mov
jns
loopne
aad
sbb
xchg
adc
icebp
jns
pop
push
xlat
push
stos
xchg
pop
imul
dec
adc
mov
push
jmp
clc
and
adc
enter
nop
cmp
pusha
test
or
sbb
adc
push
std
ljmp
lcall
lahf
mov
mov
cmp
shll
addr16
bound
sub
mov
ffreep
out
test
lds
jp
pop
xor
push
mulb
xor
in
xor
mov
lods
mov
movsb
sub
outsb
rcll
mov
jmp
idiv
add
inc
out
dec
into
mov
pop
mov
hlt
lds
xchg
in
aam
jno
sbb
in
jae
int3
and
aam
bswap
adc
cmpsb
mov
fwait
push
std
je
fisubrl
cli
jg
mov
and
dec
mov
jae
sarl
les
pop
mov
push
adc
lret
or
adc
dec
aaa
jne
bound
pop
and
pushf
cld
inc
mov
das
push
fwait
xchg
or
xor
push
outsb
dec
xchg
pop
and
ja
sub
insb
out
pop
and
pop
icebp
ret
cmp
push
or
push
ret
jl
push
imul
push
imul
pusha
mov
scas
shll
aas
push
dec
xchg
dec
inc
dec
add
mov
sub
test
fldl
inc
lret
pop
xchg
sub
xor
int
cmp
jecxz
int
or
and
or
cmp
ss
movsl
dec
daa
mov
dec
cmpsl
mov
sub
cli
sub
mov
ds
xchg
xor
es
shl
call
push
lea
push
mov
mov
shrd
shr
mov
mov
xor
xor
or
add
push
shl
call
mov
mov
shrd
shr
mov
mov
pop
xor
xor
pop
shl
or
pop
leave
ret
mov
mov
adcl
or
mov
mov
jne
cmpl
movl
movl
movl
jmp
mov
mov
jne
push
pushl
pushl
push
call
adcl
sbbl
add
orl
xorl
subl
mov
mul
ret
push
mul
mov
mov
mull
add
mov
mul
add
pop
ret
push
mov
sub
push
push
push
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
jmp
mov
fs
push
stos
sbb
dec
loop
fs
fidivrs
mov
icebp
adc
add
js
pextrw
cmpsb
and
lods
test
mov
fisubrs
and
mov
cmp
test
pop
imul
sbb
out
repz
cs
mov
jno
shrl
add
pop
daa
jo
sahf
push
enter
in
jbe
cli
jae
rol
and
push
xor
outsl
lahf
cs
sub
insl
sub
hlt
xchg
xlat
adc
std
and
testb
in
sub
dec
sub
cwtl
into
or
dec
and
dec
fs
insl
out
xor
movsb
test
xor
jmp
iret
xchg
adc
dec
aad
aaa
pop
ljmp
xlat
pop
and
rep
fucomip
std
icebp
pop
ds
js
xorb
popl
aam
add
mov
mov
inc
jno
jmp
pop
dec
cmp
sub
movsb
push
add
jl
daa
sti
ds
das
pop
jl
ss
clc
pop
movsl
push
and
jp
flds
push
pop
mov
fldcw
push
cmp
stos
test
mov
push
outsb
aam
or
cmpsl
out
loope
insb
lea
jno
sub
cmp
xor
mov
dec
cmpb
mov
movsl
stos
movsl
mov
jno
mov
cmp
sub
adc
xor
pop
mov
jmp
das
pop
cmpsb
jns
cmpsl
and
frstor
pop
fmull
movsb
jns
pop
adc
jbe
fistps
inc
fisttpl
adc
fsubl
mov
iret
xor
mov
shll
and
inc
xchg
arpl
cmp
mov
xchg
push
imul
mov
iret
outsl
xchg
into
add
or
jno
ljmp
mov
shl
in
sarb
add
push
xlat
leave
lcall
addb
stos
lahf
jns
sub
aam
add
pop
pop
arpl
and
scas
mov
popa
inc
push
inc
xchg
sub
test
cli
scas
fldenv
jns
stos
mov
call
adc
nop
jp
push
movsb
sbb
hlt
sbb
push
adc
push
sub
in
das
mov
mov
ficomps
jb
nop
out
fidivs
dec
adc
lds
xchg
or
ss
iret
jl
ds
cli
or
cs
mov
cmpb
sub
aam
movsl
pop
inc
arpl
icebp
xchg
mov
or
in
aaa
lea
lret
push
ja
ret
cmp
xchg
mov
lods
jno
jmp
subl
je
pop
out
enter
add
sbbb
or
xor
ret
scas
cs
push
mov
xor
icebp
outsl
pop
das
mov
xchg
mov
movsb
pop
adc
jno,pn
aaa
sub
jno
daa
imul
fldt
dec
mov
push
jle
mov
jbe
stos
pop
cmpsl
xor
idivb
inc
inc
in
cs
lock
sbb
jle
inc
mov
cmpsb
and
es
sub
push
pop
addr16
dec
sbb
test
mov
loopne
mov
cld
lret
divb
popa
out
pop
add
xchg
mov
out
xchg
dec
ficomps
jecxz
jbe
mov
xchg
push
lds
add
popa
xchg
xchg
cltd
pop
ret
or
movl
movl
movl
movl
movl
movl
movl
mov
mov
xor
div
mov
xor
mov
push
div
mov
xor
xor
sub
mov
lea
mov
mov
sub
xor
mov
xor
jmp
imul
scas
std
dec
and
data16
aaa
unpckhps
mov
and
push
test
into
in
addl
iret
mov
xchg
cli
test
gs
mov
and
scas
jp
sub
mov
lahf
mov
xlat
rolb
add
popf
and
xor
ss
in
scas
pop
sub
xchg
movsl
les
xor
test
dec
ss
push
pop
pop
js
mov
cmp
add
mov
and
adc
idiv
jg
mov
jno
pop
pop
aad
inc
mov
clc
mov
shl
icebp
and
fbstp
aam
xor
lret
cmp
pop
loop
xchg
in
inc
jp
addr16
xchg
gs
out
movsb
in
lcall
jne
pop
xchg
out
cltd
addr16
out
sbb
sub
and
mov
out
sub
popf
jmp
dec
loop
movsb
divl
xchg
lods
int
cmp
mov
jg
je
dec
lods
xor
xor
aaa
sbb
je
push
xor
rcl
pop
setnp
stos
xchg
push
adc
aas
out
loop
mulb
inc
pop
repz
jle
and
xchg
xor
subl
push
pusha
sbb
int3
lret
jbe
cmc
cmpb
stos
jb
fwait
pop
jne
lods
icebp
jl
push
or
pop
cmp
and
es
mov
mov
jne
inc
cmp
adc
in
cli
mov
bnd
push
fldenv
jb
and
int
data16
into
icebp
dec
xlat
rcl
popf
dec
dec
and
pop
jge
mov
pusha
std
js
inc
mov
mov
or
fmuls
sti
push
fdivs
movsb
outsb
sub
std
and
stos
cmp
adc
jle
xlat
xor
and
mov
add
imul
cmp
dec
xor
je
idivb
mov
pop
xor
cmp
or
jnp
pop
lds
lods
xor
leave
test
inc
leave
and
adc
pop
xchg
into
jae
mov
sub
pushf
jl
fildll
stc
inc
nop
cwtl
rcrb
pop
jl
mov
fistpll
jl
xor
sbb
or
stos
nop
in
xor
jmp
mov
mov
call
fidivs
or
pop
or
xor
imul
lahf
cmpsl
lock
lret
xor
adc
aaa
shl
dec
mov
mov
mov
jg
sub
in
cmp
fiadds
int
nop
int
sub
hlt
movsl
fistpl
iret
cmc
shrb
stos
jmp
sbb
cmpsb
cld
xchg
sub
repnz
jo
cmpl
dec
sarb
xchg
imul
jns
stos
xchg
lods
dec
push
fisttpll
mov
outsl
cmp
aam
lock
roll
iret
addr16
cmpsb
pop
stos
mov
divl
cs
dec
aam
rclb
add
enter
and
pop
out
adc
lret
push
cwtl
sbb
pop
mov
pop
std
pop
in
nop
xor
push
mov
es
pop
in
jne
sbb
out
test
mov
les
mov
out
xchg
and
rol
mov
fwait
lods
or
xor
mov
sub
mov
mov
xor
mov
sub
div
mov
pop
xor
sub
cmp
ja
jmp
mov
movl
movl
movl
movl
mov
mov
mov
sub
imul
xor
xor
div
mov
mov
push
and
mov
sub
sub
mov
mov
mov
xor
mov
xor
and
add
add
mov
mov
add
mov
xor
mov
xor
mov
sub
mov
add
mov
sub
xor
mov
xor
or
xor
mov
sub
mov
mov
mov
xor
jmp
lret
lahf
push
pop
sbb
leave
pop
jmp
call
mov
mov
mov
sti
les
cmpsb
cmp
sti
jo
dec
push
cmp
in
dec
lods
mov
les
lret
pop
iret
lea
xchg
xorb
dec
movsl
fnstenv
sub
inc
aam
mov
aaa
xchg
out
inc
or
jmp
out
scas
mov
dec
mov
fwait
mov
inc
xchg
or
addl
pop
jae
adcl
push
outsb
iret
cmp
sub
jge
outsl
xor
int
add
mov
out
dec
lret
adc
pop
lods
and
pop
push
mov
leave
adc
daa
pop
dec
outsb
xchg
jge
dec
hlt
negb
and
dec
xchg
aas
pushf
push
jg
push
scas
gs
sbb
movsb
jb
sti
movsl
cmp
sub
loopne
mov
fcompl
xchg
lods
ret
icebp
sti
mov
ret
add
sbb
cmpsb
or
pop
lret
push
xchg
mov
in
cmpsl
stc
das
imul
push
jecxz
scas
jle
pusha
push
lds
mov
popf
push
add
mov
lret
out
mov
sub
mov
adc
pop
cli
ror
in
ret
test
push
adc
or
ficompl
imul
arpl
fucomp
pusha
adc
sbb
mov
add
cs
adc
addb
push
mov
ret
out
in
sbb
pop
cmp
shlb
gs
xor
push
addr16
mov
ret
mov
cli
lods
and
cmp
mov
mov
pusha
hlt
hlt
sarl
and
enter
push
lret
sarl
inc
add
mov
hlt
aad
push
mov
sahf
xor
xor
jmp
mov
enter
jp
in
cmpsl
jg
dec
adc
mov
cmpsl
xchg
jnp
jmp
inc
xchg
sbb
mov
stos
adc
test
fsubl
xchg
test
jno
lea
jl
push
pop
cwtd
xchg
add
in
mov
loop
cmp
fcmovnb
sub
pop
gs
dec
and
icebp
iret
cmp
cmp
ja
aam
xlat
jne
push
and
je
out
pop
push
mov
es
and
fmull
cwtl
pop
je
imul
cmpsb
popa
cmpsb
and
mul
jne
cld
adc
clc
pop
js
dec
repz
movsb
call
test
add
pop
cmp
test
pop
or
and
sub
xor
or
stc
test
orl
cmpsb
hlt
rcrl
mov
jbe
or
daa
xchg
enter
dec
bound
mov
xlat
adc
pop
mov
out
gs
xor
stos
push
int
dec
mov
aaa
mov
ja
jno
setle
cmovae
mov
sbb
push
leave
push
jge
decb
inc
inc
dec
mov
fsubr
mov
loope
lahf
push
loopne
ret
adc
or
ss
and
jle
push
pop
push
icebp
lret
inc
jno
in
push
iret
mov
xchg
jle
adc
xor
addl
xchg
testb
mov
xor
or
or
pop
cltd
roll
xor
sub
div
pop
xor
sub
cmp
jbe
pop
pop
pop
leave
ret
push
mov
and
sub
push
push
push
push
call
mov
movzbl
push
call
test
jne
xor
jmp
adc
mov
cmpl
movl
movl
movl
jmp
movzbl
jbe
pushl
call
orl
addl
adc
sbbl
andl
mov
xor
mov
jmp
xor
push
or
cli
sbb
idivl
adc
adc
shr
inc
push
fcoml
jne
cmpsl
inc
popf
mov
mov
arpl
or
out
scas
test
push
and
xchg
adc
enter
cmp
mov
sub
arpl
mov
mov
or
fwait
aas
inc
fs
icebp
fiaddl
enter
and
lret
aam
xchg
cltd
out
loop
stos
jecxz
hlt
adc
dec
push
fbld
sarl
ret
and
sbb
pop
in
stos
out
stos
adcl
imul
repz
xchg
adc
jmp
cmpsl
jns
inc
and
cmp
movl
and
jle
fsubrs
je
enter
dec
imulb
jmp
lcall
test
cwtl
cli
ret
aad
jns
mov
push
dec
cmp
adc
dec
push
push
sub
imul
jno
inc
jp
jnp
std
xor
xchg
lods
movsl
cli
repz
scas
inc
sub
imul
or
and
scas
xchg
decl
jmp
xor
adc
les
sub
xchg
inc
sbb
das
sub
xchg
xor
negl
scas
sbb
push
dec
dec
incl
mov
sub
mov
fdivrl
roll
push
mov
lret
jns
xchg
dec
jns
sbb
adc
push
imul
imul
cmp
xchg
inc
mov
lods
jg
push
das
outsb
ljmp
inc
cli
out
sub
pop
inc
insb
aam
pop
idivb
test
lods
aas
cmpsb
mov
cmp
pop
mov
ja
lahf
push
mov
cmp
iret
add
aam
popa
test
dec
inc
xor
and
outsl
ljmp
pop
adc
dec
shlb
push
jo
mov
cmp
pop
cmpsl
cld
in
leave
test
mov
daa
adc
xor
fistl
int3
inc
out
cmp
lock
movsl
dec
inc
aam
mov
stc
xor
cmp
shll
mov
dec
fnstenv
xchg
out
sbb
mov
arpl
pop
add
cmp
frstor
mov
cmp
ret
mov
aas
jl
loop
mov
pop
xor
sub
rcrb
in
push
outsl
and
push
xchg
add
leave
setne
outsb
adc
outsl
lret
xchg
push
cld
xchg
pop
in
pop
insl
repz
les
mov
movsl
jmp
add
xor
mov
fwait
push
sbbl
mov
ljmp
fidivrs
mov
cmpl
movl
movl
jmp
movl
mov
je
push
call
addl
subl
and
andl
movl
orl
movl
adcl
push
mov
add
pop
mov
cmpl
movl
movl
movl
movl
jmp
not
movl
jl
pushl
push
push
push
push
push
push
push
call
subl
subl
addl
adcl
andl
neg
mov
xorl
mov
movl
mov
movl
mov
andl
movzwl
or
cltd
movzwl
xorl
idiv
cmpl
mov
movl
mov
mov
jmp
movl
movl
jne
pushl
push
push
call
xor
xor
mov
and
or
mov
mov
sbb
movzwl
sub
sbbl
movzbl
sub
mov
sub
mov
movzwl
addl
or
mov
or
mov
cmpl
movl
mov
mov
mov
jmp
movl
movl
jae
push
pushl
push
pushl
call
sub
sub
adcl
mov
or
addl
mov
mov
mov
movl
mov
mov
adc
mov
sbbl
sub
sbbl
mov
andl
xor
sbb
jmp
mov
sbb
push
cmpl
movlps
xchg
fwait
mov
test
sub
push
rclb
aad
sti
or
loopne
int3
push
adc
ljmp
jae
add
push
or
dec
xchg
pusha
sbb
popa
enter
idivb
rcll
xchg
imul
pop
dec
ljmp
sbb
push
xor
fidivrs
or
ficoms
sub
inc
popf
clc
outsl
inc
imul
aad
in
std
pop
xchg
xorl
pop
adc
mov
sub
adc
xor
in
add
and
in
mov
xlat
faddl
xor
pop
inc
adc
push
or
dec
push
xchg
jnp
and
test
test
popa
inc
or
jne
cs
int
mov
mov
jge
dec
mov
add
movsb
jne
push
in
out
push
jmp
add
rorb
mov
push
movl
lahf
sahf
and
mov
xor
pop
xchg
inc
xchg
cmp
das
push
jno
dec
scas
push
les
mov
fstpl
mov
stc
subb
cs
inc
sub
jg
mov
adc
call
dec
jb
clc
cmp
cmp
jmp
sbbb
lock
mov
ret
mov
enter
dec
imul
push
jg
sub
mov
add
adc
out
stc
xor
testb
jno
inc
add
adc
add
jae
and
inc
mov
filds
cmpsl
xchg
lds
push
pop
xor
imul
gs
xor
sti
je
pop
or
mov
inc
aam
sbb
lret
cld
outsl
mov
imull
mov
bound
push
js
push
orl
jl
cmpsl
fsubr
aaa
adcl
insl
xchg
jle
cmp
popf
xor
loopne
adc
jmp
pop
scas
ja
and
testl
mov
pop
dec
xor
addr16
test
arpl
in
sbb
mov
xchg
movsb
sahf
mov
nop
xchg
mov
cmpsb
cmp
mov
insb
mov
add
shl
or
pop
and
dec
mov
xchg
mov
xchg
cmp
xchg
mov
inc
sbb
enter
ret
jecxz
jg
adc
lret
push
jnp
fs
sbb
sub
mov
mov
lret
inc
sub
popf
and
rcll
mov
mov
pop
and
adc
sbb
add
rol
jne
inc
add
add
mov
movl
cmp
movl
jb
sbb
movl
movl
movl
cmpl
movzbl
mov
jmp
movl
mov
jbe
pushl
call
sbb
mov
sub
mov
and
inc
movl
and
mov
cmpl
mov
movl
movl
mov
jmp
mov
jb
pushl
pushl
push
push
call
andl
sbbl
mov
sbb
movzbl
or
xor
xor
xor
xor
orl
add
mov
orl
xor
sbbl
div
mov
add
sbbl
and
pushl
pushl
call
movl
movl
mov
adc
movl
cmpl
movl
mov
mov
jmp
movl
movl
je
push
push
call
adc
xor
xor
mov
sbb
xorl
or
mov
xorl
mov
adcl
and
addl
or
mov
subl
and
xor
adcl
pushl
pushl
addl
call
not
pushl
dec
movl
movl
xor
movl
subl
movl
or
movl
cmpl
mov
mov
not
mov
jmp
movl
mov
jl
pushl
push
push
push
push
call
xor
and
sbb
adcl
movzwl
or
movl
movl
xor
movl
mov
dec
mov
andl
sub
sbb
mov
or
orl
and
xor
jmp
or
ja
mov
jle
and
mov
xchg
movlps
cs
cmp
orb
push
stos
jae
adc
xchg
sbb
pushl
fstp
or
mov
lods
jne
or
icebp
jmp
fwait
push
jno
mov
push
scas
sbb
jp
inc
cmp
daa
aam
xor
dec
inc
dec
add
iret
xchg
cltd
xor
into
test
imul
pop
xlat
stos
ret
outsl
sbb
test
ret
enter
xchg
inc
sub
imul
xchg
pusha
dec
sbbl
and
test
xor
sub
jb
and
jae
andb
sub
add
loop
sub
jmp
xchg
pop
sarb
xchg
repz
jl
lea
repnz
and
jns
jl
js
mov
cmpsl
and
ja
hlt
into
out
pop
xchg
and
jmp
mov
imul
scas
push
clc
mov
cmp
ret
mov
mov
in
into
call
aam
lock
aad
mov
fs
imul
xchg
imul
in
addr16
lods
mov
mov
mov
js
sbb
adc
popf
cmpsb
mov
jl
aam
sbb
jno
test
sub
sub
repnz
mov
cmp
lds
jns
or
outsb
js
lds
adc
test
or
lahf
fs
cmc
fs
sub
xchg
loop
adc
lock
stos
mov
das
push
mov
mov
out
push
cmp
jge
daa
sbb
dec
xor
aaa
mov
jnp
sbb
jp
stos
lcall
and
orb
adc
and
test
cmpsb
incl
or
xorl
inc
pop
dec
imull
pop
addr16
insl
icebp
mov
push
cmp
inc
divb
inc
movsl
sbb
cmp
cmp
loop
xorb
test
ss
add
movsl
in
xor
pop
push
adcb
inc
mov
loop
sbb
ljmp
add
xor
pop
sub
mov
xlat
xchg
and
lahf
mov
push
or
pop
in
push
dec
push
ror
popa
ffreep
shll
mov
adc
mov
popa
inc
mov
push
sbb
mov
xor
fs
push
pop
mov
mov
addl
sub
movl
pushl
xor
mov
mov
andl
add
xorl
and
cmpl
mov
movl
jmp
movl
je
call
or
or
not
or
mov
sub
mov
xor
and
pushl
sub
mov
mov
andl
imul
xor
or
mov
movl
sub
pushl
sbbl
call
adcl
dec
movl
jne
movl
cmpl
mov
movl
mov
mov
jmp
movl
movl
je
pushl
push
call
or
xor
mov
and
mov
sbb
mov
add
movl
mov
mov
movl
mov
xorl
call
lea
mov
cmpl
movzwl
mov
mov
movzbl
jmp
movl
not
jb
call
and
xor
or
sbb
neg
orl
mov
mov
sub
and
neg
lea
mov
mov
mov
sub
mov
mov
cmpl
movl
mov
movl
jmp
movl
jge
push
call
add
xor
neg
xor
add
mov
adc
xor
xor
xor
add
sub
sub
xor
xor
mov
sub
xor
sub
cmpl
mov
mov
jmp
movzwl
movl
jbe
push
push
call
sbb
sub
mov
mov
add
adc
addl
xorl
xor
sbb
xor
add
shl
shr
or
and
mov
dec
mov
orl
mov
mov
sub
mov
xor
mov
mov
shrd
shr
cmpl
movl
mov
mov
jmp
movl
movl
jae
pushl
push
push
call
adc
sbb
sub
adc
movl
mov
adc
mov
mov
xor
orl
xor
or
and
mov
addl
push
xorl
pushl
addl
lea
adcl
push
subl
shl
call
addl
lea
andl
push
mov
subl
mov
lea
push
andl
mov
movl
lea
sbbl
mov
xorl
mov
mov
adcl
push
call
orl
push
sbbl
push
pushl
sbbl
call
and
mov
xor
mov
inc
mov
mov
add
shr
cmpl
not
movl
movl
movl
jmp
movl
jg
push
call
inc
sbb
adc
add
sbb
cmpl
mov
mov
jmp
mov
ja
push
call
and
adc
sbb
sbb
mov
xor
add
sub
or
shl
cmpl
mov
mov
mov
mov
jmp
movl
jne
push
call
add
mov
sbb
adc
sbbl
sbbl
adcl
or
mov
cmpl
mov
movl
movl
jmp
movl
jle
pushl
push
pushl
pushl
pushl
call
adc
xor
xor
add
xor
or
sub
xor
mov
sub
xor
add
adc
and
or
xor
mov
sub
mov
lea
mov
lea
mov
mov
sub
lea
xor
movl
movl
movl
movl
mov
mov
mov
mov
add
adc
xor
xor
and
mov
and
mov
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
push
push
or
or
push
push
call
mov
mov
sub
mov
sbb
mov
cmp
jne
cmp
je
movl
movl
jmp
incb
dec
dec
cmp
or
dec
idivl
out
adc
adc
jns
repz
xchg
loop
pop
repnz
call
lcall
test
popa
mov
dec
cmp
jae
movsl
lahf
cmp
mov
subl
ljmp
push
jae
inc
pop
inc
jle
and
inc
sbb
jge
hlt
fisttpl
push
push
pop
jo
or
mov
das
mov
mov
xchg
fnstsw
aam
pop
pop
jecxz
leave
inc
inc
xlat
call
test
jmp
aam
jl
jb
ljmp
add
lcall
popf
cmp
sbb
dec
lahf
add
and
mov
fmul
or
stos
leave
jo
add
in
jbe
mov
test
sbb
jno
pop
mov
xlat
mov
movb
ret
add
aaa
cs
xor
cmp
jno
in
sub
scas
xor
es
or
fnstenv
adc
out
loop
sub
push
inc
test
in
arpl
inc
and
mov
fbstp
dec
lret
fs
fcoml
arpl
jne
in
pop
test
mov
adc
jbe
xor
icebp
sbb
adc
stos
ss
sbb
pop
in
test
mov
pop
adcb
jbe
or
or
xchg
mov
inc
cs
iret
sarb
fsubrs
fidivrl
ss
jl,pt
mov
adc
mov
mov
in
xor
xchg
fcomp
mov
sbbb
fwait
pop
jmp
mov
clc
iret
ja
cli
insl
adcb
mov
mov
cmp
test
push
inc
lahf
bound
into
into
lods
and
leave
cmp
jmp
sarb
repz
mov
movsl
mov
or
cli
lret
cmp
jl
or
pop
pop
adc
daa
test
sub
addr16
insl
pop
pop
push
std
inc
push
ljmp
js
lcall
insb
sbb
sub
in
mov
mov
out
pop
mov
cli
ret
sar
dec
xor
cmp
inc
mov
in
jge
push
dec
jno
fstps
or
sbb
cmp
or
jb
jle
stc
push
pop
add
xchg
lcall
inc
cmp
push
rolb
jmp
aaa
sbb
push
lock
aam
dec
lds
push
jnp
ja
push
sub
sbb
int
rclb
movl
movl
mov
mov
mov
mov
add
adc
xor
xor
and
mov
and
mov
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
push
push
xor
xor
push
push
call
mov
mov
push
push
push
push
call
mov
mov
push
push
push
push
call
mov
mov
add
mov
adc
mov
cmp
jne
cmp
je
mov
mov
mov
xor
xor
xor
shld
shl
cmp
jne
cmp
je
mov
cmp
je
mov
mov
mov
mov
xor
xor
shrd
mov
shr
shl
or
mov
xor
or
cltd
cmp
jne
cmp
jne
movl
movl
mov
mov
mov
mov
xor
xor
xor
shld
shl
cmp
jne
cmp
jne
movl
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
mov
mov
cmp
jne
mov
mov
mov
mov
mov
mov
movzwl
mov
and
mov
or
mov
add
or
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
or
mov
jmp
ss
adc
sub
xchg
mov
into
mov
adc
adc
sub
xor
lock
rcrl
dec
lods
dec
mov
xor
mov
sub
sbb
xchg
lahf
divl
jae
push
or
stos
sbb
lea
push
int
mov
xchg
and
and
leave
out
pop
fadds
adc
inc
pop
adc
add
mov
mov
push
xor
mov
push
inc
sub
xor
inc
sub
jbe
adc
push
movsl
jecxz
and
fcomi
cmp
sbb
mov
xchg
fdivrs
insl
lods
adc
dec
lds
mov
out
xchg
rolb
imul
mov
fistps
fsubrl
add
or
lods
je
xor
xor
and
cmp
out
adc
jg
push
into
add
adc
add
pop
xchg
pusha
ret
dec
pop
jge
out
push
jo
jg
lea
push
int3
lock
sub
xchg
xchg
mov
movsb
sbb
clc
ss
adc
mov
aaa
ret
into
sti
mov
xchg
xchg
test
je
xlat
notb
dec
lock
push
out
rcrl
xor
fnstenv
jnp
stos
xchg
dec
cltd
fwait
dec
shlb
dec
imul
jnp
adc
inc
mov
jecxz
fldcw
pop
pop
sub
sub
sub
cmpsb
lret
lock
cmpsl
and
push
or
xor
adc
shrb
inc
imul
in
inc
xor
jge
cld
push
inc
in
cwtl
aad
mov
scas
and
outsl
stos
mov
movsl
roll
scas
dec
hlt
xchg
in
or
and
into
jo
movsb
mov
je
fsts
jne
popaw
mov
rorl
loop
sub
mov
cmp
ds
popf
push
jne
push
inc
int
ret
push
and
or
push
inc
mov
inc
fisttpl
xchg
push
pusha
or
mov
ljmp
lds
xchg
push
subb
mov
jle
clc
in
js
xlat
insl
data16
pop
pop
out
adc
adc
fstpl
shl
cmc
cmp
lea
inc
lods
mov
inc
push
xchg
add
mov
xchg
mov
xor
leave
test
mov
sub
mov
aaa
jo
inc
adc
xor
neg
leave
dec
xchg
aaa
jl
lret
repz
inc
sbb
xor
test
pop
arpl
push
add
lret
inc
addb
or
push
adc
pusha
mov
or
mov
sub
mov
sub
mov
cmp
jbe
mov
mov
mov
mov
movzwl
mov
or
mov
sub
mov
or
imul
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
sub
mov
xor
mov
imul
mov
and
mov
and
mov
cmp
ja
mov
mov
shrd
shr
mov
mov
xor
xor
or
push
push
push
lea
push
lea
push
shl
call
pushl
pushl
pushl
pushl
call
mov
mov
shrd
shr
mov
mov
shl
xor
xor
or
mov
mov
mov
mov
shrd
shr
mov
mov
shl
xor
xor
or
mov
mov
mov
mov
mov
cmp
jne
mov
mov
mov
cmp
jne
movb
movb
movb
movb
mov
mov
or
sub
mov
sub
movzbl
movzbl
cltd
idiv
movzbl
or
mov
movb
movb
movb
movb
movb
mov
mov
or
and
mov
imul
mov
movzbl
movzbl
and
mov
movzbl
cltd
idiv
mov
cmp
je
lea
push
lea
call
cmp
jne
cmp
jne
jmp
mov
mov
mov
mov
add
adc
mov
mov
push
push
lea
push
call
mov
push
pushl
lea
push
call
mov
mov
mov
mov
mov
mov
mov
lea
mov
add
movl
movl
mov
and
add
and
sub
and
mov
movl
jmp
cmpsb
xchg
mov
jns,pt
sahf
lods
test
in
adc
mov
pop
mov
push
aam
cmp
aad
lret
mov
loop
stos
outsl
and
cmp
stc
jmp
smsw
sub
sub
dec
subl
hlt
or
mov
sbb
mov
lcall
sbb
push
dec
shl
outsb
mov
lcall
sbb
mov
out
xchg
scas
call
sub
and
fistl
push
aaa
fcompl
fwait
mov
aaa
jle
out
push
mov
ja
push
in
push
sub
daa
dec
xchg
sub
cld
adc
stos
adc
add
and
movsl
sar
push
lods
cld
dec
sub
jg
and
sbb
mov
roll
sub
in
pop
xchg
or
mov
mov
fmull
in
xchg
jge
enter
jns
aad
mov
or
or
mov
es
pop
jge
dec
mov
in
jno,pn
jle
repnz
test
jl
loope
inc
inc
sti
xor
dec
lds
cmp
push
ret
mov
dec
or
inc
cvtps2pd
mov
or
fldcw
cli
pop
fsubrl
in
pop
popa
adc
imul
mov
and
outsl
mov
int3
out
pop
ljmp
adc
dec
nop
sbb
push
imul
pop
movsl
add
xor
sub
mov
and
inc
xchg
stos
mov
mov
or
xchg
roll
inc
dec
fmul
popa
cmpsb
mov
and
fs
icebp
add
sahf
shrl
aaa
jo
adc
pop
push
push
cli
cmp
daa
test
jmp
in
push
out
add
push
jb
mov
and
and
push
mov
cmc
push
sbb
ss
mov
mov
adc
jecxz
push
cli
ret
xor
push
pminsw
add
sbb
in
sub
jbe
ljmp
sub
fcmovbe
lcall
rolb
mov
aad
cmpsb
into
inc
out
pop
inc
pop
repnz
add
cmpsb
jmp
pop
dec
adc
mov
sbb
iret
andl
or
insw
leave
js
clc
iret
xorl
aaa
es
xor
subl
add
inc
and
mov
or
add
cmp
je
mov
mov
mov
xor
xor
xor
jmp
cltd
add
cltd
fstp
jmp
lods
mov
loopne
adc
les
rclb
xor
pop
mov
pop
mov
popa
insb
pop
and
dec
xor
in
push
in
fisttpl
mov
das
lods
sub
js
mov
fsubrl
jecxz
in
pop
xchg
jg
sub
mov
dec
jmp
mov
sbb
jo
addr16
out
cmp
mov
pop
push
jae
in
sub
stos
mov
fstpt
fmuls
ds
pop
and
aam
pop
sahf
xorl
pushf
imul
cmpsl
shrl
aas
gs
fmul
sbb
cmc
pop
pop
cwtl
les
repnz
rcll
jnp
dec
rcrl
jl
lea
lea
sbb
mov
push
cld
xchg
adc
cmp
fstpl
adc
mov
aad
and
in
jle
add
lea
adc
sub
pop
aaa
leave
pusha
adc
and
mov
loopne
pop
push
in
les
icebp
cmp
mov
loopne
cli
add
pop
mov
das
mov
or
pusha
add
loop
stc
add
iret
lret
xchg
pop
loope
jae
lcall
mov
sbb
sarb
mov
ja
adc
or
pushf
xchg
and
cmp
into
mov
mov
xchg
in
sbb
sbb
and
int
sti
iret
or
sub
out
inc
in
pop
xchg
xor
movsb
repnz
adc
cwtl
cmc
clc
outsb
ficoml
push
pop
dec
push
cli
ss
repz
inc
and
cmc
jmp
xor
cmp
insl
insb
dec
in
sub
or
lods
push
xchg
inc
out
push
inc
popa
sub
mov
ret
inc
test
pop
lock
loopne
outsb
ljmp
in
lret
sub
lret
push
or
test
cmpsb
test
mov
stos
fnstenv
adc
dec
add
mov
pusha
icebp
xchg
sub
add
jno
fmuls
sbb
rcr
inc
inc
dec
jnp
jg
fcmovu
out
in
or
stos
xchg
ja
call
mov
sbb
aas
push
add
xchg
pushf
mov
fstpl
fnsave
add
sti
push
xlat
test
js
aaa
repz
mov
js
dec
out
or
movsl
ret
or
dec
rcll
jl
pop
ljmp
hlt
dec
int3
sti
loop
dec
and
adc
mov
add
idiv
nop
inc
bound
and
cmp
cmp
adc
cltd
pop
das
lods
inc
icebp
cld
push
ret
adc
and
push
cmp
mov
fistl
shl
cmp
jne
cmp
je
mov
mov
mov
mov
xor
xor
shl
shr
jmp
cmp
cltd
fistps
sbb
jle
ficoms
adc
fadds
outsb
dec
inc
pusha
pop
je
sub
mov
jp
sbb
sahf
xchg
andl
je
xlat
push
jb
jle
loope
mov
xor
sub
sbb
bound
dec
jne
andl
mov
and
push
mov
and
je
jl
cmp
push
push
fdivl
cmp
ljmp
repz
and
add
or
out
xchg
out
dec
or
xchg
adc
mov
fld
in
mov
push
pushf
add
out
push
sti
mov
jge
mov
mov
pushf
sbb
repnz
mov
stc
mov
push
mov
imul
add
adc
sahf
fs
nop
cltd
push
push
enter
jl
daa
lds
shlb
cmp
or
aaa
mov
ret
enter
lods
data16
shl
xchg
jno
mov
xchg
iret
cld
stc
popa
insb
dec
ds
arpl
lds
ss
sub
dec
scas
sub
pop
insl
push
push
cld
jge
lahf
or
gs
into
cmp
mov
push
popf
mov
adc
in
cmp
cmp
or
cmp
inc
jbe
sub
in
cmp
pop
imul
jb
cld
loope
popa
stc
sub
imul
nop
shll
cs
jns
stc
xor
fistps
or
pop
and
sahf
push
xor
les
cwtl
les
pop
mov
add
mov
subl
fs
xchg
leave
xchg
lea
not
inc
arpl
mov
inc
dec
cmc
stos
mov
mov
fcmovnu
sbb
sbb
or
fldt
data16
cmc
jns
sub
add
add
mov
outsl
sahf
repz
imul
mov
jl
push
stos
pop
xor
rclb
inc
pop
icebp
mov
test
and
adc
add
xor
nop
inc
imul
mov
sub
or
jle
in
jb
mov
outsb
pop
dec
mov
ss
scas
mov
adc
jg
jle
call
adc
iret
pushf
shl
sbb
add
jns
sub
and
orl
pop
xchg
aaa
push
fisubs
dec
mov
addb
sbb
or
cmp
and
pop
ret
inc
ret
mov
cltd
js
cmp
cld
lods
mov
mov
subb
or
xor
xor
xor
and
cmp
jne
cmp
je
mov
cltd
mov
mov
cltd
shld
shr
xor
shl
or
or
mov
mov
xor
xor
mov
cmp
jne
cmp
je
pushl
jmp
pop
xor
jge
cmp
loopne
cli
outsb
mov
adc
sbb
nop
jl
rol
push
cltd
daa
out
andb
dec
lcall
inc
arpl
fadd
cs
test
inc
test
sbb
std
cmp
jnp
cmp
dec
pop
mov
jecxz
cmpb
push
push
arpl
fimuls
in
rorb
xchg
mov
jne
push
add
mov
mov
add
xchg
adc
cmp
adc
cli
pop
inc
mov
nop
push
push
lret
inc
jecxz
pop
push
dec
ret
xlat
test
push
dec
adc
out
enter
in
lea
int3
lcall
lahf
jbe
push
bound
popf
shr
sbbb
mov
adc
arpl
inc
pop
lahf
js
daa
stc
mov
inc
jmp
xchg
and
scas
shlb
mov
mov
loop
or
mov
push
mov
adc
nop
inc
mov
ret
sbb
sbb
data16
mov
sbb
inc
je
and
das
xchg
dec
mov
add
lods
cmp
inc
enter
xchg
sbb
pop
mov
lret
int
aaa
test
xchg
inc
filds
pop
mov
pop
hlt
sbb
mov
adc
fsubrs
push
and
mov
jb
or
pop
sti
push
lahf
push
jns
and
into
adc
ljmp
adc
fisttpl
push
inc
push
cmpsl
in
and
fmull
fstl
or
popf
add
lock
movsl
loope
ja
cmpsl
test
inc
insb
xchg
das
and
shlb
mov
mov
ret
sub
mov
jmp
push
push
lret
mov
pop
mov
inc
jle
jno
push
call
ds
dec
dec
cwtl
mov
icebp
sbb
pop
mov
mulb
cli
sbb
jl
inc
std
ret
xchg
add
sub
je
ret
loopne
test
dec
out
pop
hlt
pop
bound
std
push
sbb
std
pop
mov
jg
and
cmp
jp
mov
outsb
or
mov
cs
stos
mov
xor
mov
mov
push
popf
cmc
out
sub
pop
fsubp
bound
or
cmp
ret
in
nop
rcrb
xchg
imul
stos
inc
xor
mov
fdivs
xchg
xor
dec
scas
or
push
in
or
fsubl
xchg
xchg
dec
mov
rorb
xor
mov
mov
pushl
mov
call
mov
mov
mov
mov
push
add
push
lea
push
call
mov
mov
pop
pop
pop
mov
pop
ret
push
mov
sub
movl
push
mov
mov
and
push
sbb
push
movl
movl
sub
movl
or
mov
movl
mov
xor
andl
div
imul
sbbl
mov
xorl
xor
and
mov
mov
sbb
mov
xor
orl
div
add
sub
mov
movl
cmpl
movl
not
mov
mov
jmp
mov
mov
jbe
push
call
adc
movzbl
sbb
mov
mov
or
and
mov
mov
sub
or
inc
sub
movl
cmpl
mov
mov
mov
jmp
movzwl
ja
call
adc
sub
sbb
inc
xor
movl
mov
orl
add
xor
cmpl
mov
movl
movzwl
jmp
movl
notl
jae
pushl
pushl
pushl
push
push
push
call
or
and
or
incl
mov
mov
and
and
xor
sbb
imul
addl
mov
and
sub
mov
mov
mov
and
movl
orl
movl
adcl
movl
movl
mov
sub
imul
mov
andl
imul
cmpl
mov
movl
mov
jmp
movl
movl
je
push
push
call
orl
xorl
xor
or
mov
or
mov
xor
xor
sbb
mov
jmp
pop
sahf
and
out
scas
sarb
rclb
adc
dec
and
cmp
jl
inc
pop
and
aaa
pop
pop
and
repnz
and
cltd
mov
ficoml
xor
cmpsb
mov
dec
xchg
xor
int
je
xor
sbb
xchg
lahf
into
and
lahf
adc
or
adc
lcall
sti
ss
dec
test
mov
add
out
mov
fnsave
xchg
push
push
scas
hlt
mov
cld
orl
fs
xor
push
add
pop
sbb
cmpsb
daa
mov
insb
jecxz
adc
cmp
in
mov
mov
dec
cmpsl
mov
std
mov
adc
dec
mov
mov
mov
xor
adc
cltd
push
popa
dec
mov
stos
pop
sbb
loop
sub
push
cltd
test
subb
dec
popl
lret
mov
sar
rcll
arpl
clc
xchg
cmpb
rorl
pop
pushf
je
sti
dec
mov
cmp
mov
je
ja
mov
ss
daa
arpl
lcall
fldl
cmp
lret
jp
pusha
add
movsl
cmp
out
dec
mov
out
mov
pop
popa
mov
mov
test
std
dec
movb
aad
call
out
and
ret
push
cs
or
loop
loope
gs
lock
pop
mov
and
xlat
jns
cwtl
mov
pop
push
pop
inc
enter
pop
lods
add
push
cmp
popf
xor
sbb
jb
mov
sub
inc
cwtl
add
clc
push
lahf
test
cmpsb
push
inc
jmp
mov
mov
fsubs
push
xchg
sbb
es
add
cmp
in
stos
fcmovu
pop
pushf
jge
bound
dec
mov
or
jo
fbld
xchg
lds
fwait
or
std
ret
mov
and
aam
add
xorb
leave
inc
je
add
incl
add
inc
add
lret
leave
and
add
xor
mov
subl
xor
cmpl
movzwl
mov
mov
jmp
mov
mov
jg
push
pushl
call
add
adcl
adcl
add
and
mov
add
orl
mov
mov
sbbl
lea
mov
or
movl
movl
sbb
movl
mov
or
xor
cmpl
notl
movl
not
jmp
movl
movl
jbe
pushl
call
or
xor
andl
movl
add
adc
mov
orl
or
and
add
cmpl
movl
mov
mov
jmp
movl
mov
jbe
push
call
and
add
xor
subl
and
add
xor
cmpl
mov
mov
mov
jmp
movl
jb
push
call
add
xor
add
sub
sub
xor
add
mov
add
subl
or
xor
mov
or
add
cmpl
movl
mov
movl
mov
jmp
mov
mov
jge
pushl
pushl
call
andl
sbbl
andl
movzbl
sub
add
adcl
xor
mov
movl
orl
movl
adc
movl
mov
and
add
cmpl
movl
mov
mov
mov
jmp
movl
movl
jle
push
call
xorl
xor
and
orl
orl
inc
mov
sub
mov
subl
lea
movzbl
sbb
mov
or
sub
xor
or
or
mov
mov
movl
movl
mov
or
add
xorl
imul
mov
imul
xor
movl
mov
div
sub
movzbl
or
mov
xorl
movl
sbbl
movl
movl
mov
mov
addl
xor
movl
div
sub
imul
adc
add
mov
orl
xor
xor
sbb
mov
div
xor
mov
movl
cmpl
movzwl
movl
jmp
mov
jge
pushl
call
not
or
adcl
adc
dec
add
movl
and
movl
cmpl
movzwl
mov
jmp
mov
movzwl
ja
push
push
push
push
call
adcl
adc
and
and
addl
mov
mov
sub
movzbl
xor
shr
and
sub
and
mov
imul
mov
subl
and
mov
adcl
jmp
cltd
adc
xor
sbb
js
sar
scas
into
adc
adc
pusha
insl
das
jle
fistl
add
pop
lahf
and
adc
mov
and
loop
mov
lret
test
in
or
pop
mov
fisubrs
fisttpll
popa
movsl
jp
dec
adc
int
push
xlat
fdivl
fbld
sti
les
mov
rolb
or
repz
xlat
xor
and
test
test
xor
mov
inc
in
inc
cmp
lret
cmp
mov
shl
push
sub
mov
sti
cmp
jl
pop
paddusb
lds
cmpsb
pop
insb
mov
adc
fists
daa
ss
divb
popf
xchg
data16
stos
and
push
add
sti
ficoml
ljmp
sahf
popa
shl
scas
test
es
cli
testb
jb
daa
aas
scas
icebp
push
sbb
sub
adc
aam
repnz
ds
sbb
lods
mov
std
lcall
cmp
cmc
push
movsl
inc
cmpb
pop
xor
cwtl
clc
mov
cmovle
je
js
mov
mov
xor
fldt
out
test
out
inc
icebp
mov
test
test
insb
idivl
es
movsb
int3
rorl
xchg
sbb
cmp
pop
cld
adc
inc
subb
imull
into
js
mov
pusha
nop
xor
or
add
inc
jecxz
fxch
xchg
iret
push
loop
add
adc
jl
add
inc
outsb
cwtl
int3
dec
sub
push
jo
pop
pusha
loope
int
insb
popa
call
or
fwait
dec
rorb
push
pop
xchg
mov
adc
xchg
nop
dec
adc
bound
xchg
aam
adc
stos
pop
popa
int3
mov
addl
push
dec
lods
outsb
lret
and
or
pop
jmp
aad
pop
inc
adc
dec
dec
frstor
pop
pop
sub
scas
inc
lods
or
push
cli
mov
sub
and
mov
or
movl
cmpl
mov
mov
mov
mov
jmp
mov
jne
pushl
call
notl
addl
orl
andl
and
movl
mov
sbb
or
mov
or
sub
adcl
mov
cmpl
mov
movl
movzwl
jmp
movl
mov
jg
pushl
pushl
push
push
call
add
sub
adc
movzbl
sbb
adcl
and
or
movl
mov
sbb
movl
addl
movl
cmpl
movl
movl
jmp
notl
jne
push
push
call
sub
xor
xor
mov
adc
or
orl
adc
andl
adc
mov
adc
movl
adc
movl
xor
xor
add
movl
movl
mov
add
or
mov
movl
sub
xor
mov
addl
imul
add
imul
or
mov
or
cmpl
mov
mov
mov
jmp
movl
jbe
pushl
push
push
pushl
push
call
or
or
xorl
sbb
xor
xor
subl
mov
lea
addl
push
call
and
mov
mov
jmp
test
mov
jbe
and
js
lret
enter
sbb
push
clc
jbe
mov
xchg
push
jnp
cwtl
adc
addr16
push
fsqrt
lcall
sti
pop
mov
test
or
icebp
rolb
ud1
pop
mov
call
push
call
sub
jno
icebp
mov
ja
sbb
xlat
scas
data16
push
les
jns
inc
add
loope
mov
mov
adc
fidivrs
pusha
nop
push
hlt
xor
pop
add
mov
mov
pop
in
arpl
push
mov
add
test
mov
add
add
aad
pop
xchg
push
adc
lret
xchg
daa
test
imul
cltd
dec
jmp
outsl
addr16
dec
pop
out
jnp
je
lock
sbb
in
push
xchg
jno
or
fsubs
jecxz
xchg
outsl
sbb
shrl
xor
repz
sbb
mov
push
sub
mov
ljmp
mov
insb
mov
stc
adc
arpl
jmp
xchg
nop
xchg
mov
test
jbe
xchg
sbb
and
fidivs
popf
ret
pop
mov
mov
add
push
repnz
xlat
shll
mov
cmp
lcall
or
jne
cld
test
loopne
push
push
in
ficoml
sarl
cmp
push
cmp
cwtl
cmp
jl
cs
and
sti
mull
dec
test
mov
int
rclb
hlt
andl
in
adc
add
add
and
xlat
cmp
or
or
orl
jnp
adc
push
scas
cmp
sub
ds
jo
fdivrs
pop
ret
inc
icebp
cmp
jge
xcrypt-cfb
cmpsl
popa
addr16
pusha
ss
pop
into
lcall
aam
mov
sbb
outsl
insb
inc
lds
mov
cmp
popf
fldl
lahf
mov
mov
add
add
cmpl
mov
mov
jmp
movl
movl
ja
push
call
add
add
dec
orl
addl
adc
and
cmpl
notl
mov
movl
jmp
movl
je
push
call
sub
xor
adc
mov
mov
sub
sbb
sbb
sub
xor
xor
mov
xorl
div
cmpl
movzwl
movl
jmp
mov
jbe
push
push
push
pushl
call
adc
movl
orl
sbb
adcl
xor
mov
mov
sbb
add
xorl
jmp
pop
and
and
cmpsb
js
rclb
push
adc
adc
jbe
or
xor
aad
adc
stos
mov
jp
idivb
inc
adc
jbe
pushf
notl
fmull
scas
jl
pop
int
pop
popa
xor
mov
xchg
xchg
push
and
std
sbb
push
cmpsb
inc
dec
lock
mov
jecxz
aaa
bound
or
add
ret
loopne
mov
inc
popa
divl
xchg
cmp
dec
mov
mov
cmpsb
dec
mov
lahf
test
adc
call
and
cltd
sbb
shlb
add
cwtl
adcb
test
sub
cs
mov
scas
enter
sub
jne
adc
mov
sbb
and
into
add
cmpsl
or
dec
and
lods
xchg
xchg
push
pop
cmp
add
push
or
pop
lock
jmp
pop
or
adcb
test
scas
lea
jmp
add
add
cmp
cwtl
jb
dec
out
push
jmp
fistl
add
add
lahf
jns
mov
loope
push
adc
mov
dec
lcall
in
rolb
push
or
dec
test
inc
std
jno
add
dec
mov
adc
jo
dec
cmc
xor
lret
or
bound
mov
jge
adc
push
outsb
icebp
insl
xchg
in
jno
stos
sti
jl
mov
mov
daa
insl
cmpsl
xor
cwtl
int
mov
push
push
fsubrp
je
mov
lods
inc
leave
pop
jae
sub
orl
inc
jp
and
pushf
sbb
mov
clc
movsl
imul
fdivrl
loop
aas
pushf
or
add
sbb
sti
ret
mov
mulb
clc
lods
push
cwtl
divb
flds
imul
test
aas
add
imull
sub
or
pop
mov
test
cmp
es
bound
push
fadd
test
pushl
jp
add
inc
mov
movl
movl
adc
movl
or
movl
xor
movl
movl
xor
add
sbb
mov
movl
cmpl
movl
not
jmp
not
jbe
push
push
call
xorl
or
subl
add
adc
sub
addl
movl
movl
cmpl
mov
movl
mov
jmp
mov
mov
jae
push
push
call
mov
or
xor
sbbl
neg
mov
or
movl
movl
add
mov
cmpl
movl
mov
jmp
movl
mov
jae
push
call
or
movzwl
or
mov
sbbl
sub
inc
xor
add
sub
xor
mov
add
mov
movzbl
or
and
movzbl
sub
mov
sub
sub
jmp
xor
es
and
jmp
js
mov
leave
ret
enter
mov
scas
sbb
jmp
xchg
les
cld
sbb
xchg
mov
mov
mov
or
add
sar
sbb
cmp
fnstenv
roll
ljmp
lahf
fidivs
movsl
pusha
mov
sub
repz
xchg
shlb
mov
test
jnp
mov
jo
sbb
mov
rclb
mov
mov
xchg
mov
jge
jno
jecxz
mov
mov
imul
inc
movsb
pop
in
out
push
and
adc
adc
rolb
ja
repnz
push
jb
and
cmpb
cmpsl
push
clc
inc
nop
sarb
push
aas
jae
and
mov
lret
fiaddl
pop
xchg
cmpsb
push
push
enter
mov
sar
pop
inc
mov
jp
dec
mov
shr
insl
nop
mov
into
call
mov
sbb
fwait
push
jo
pop
outsb
mov
mov
adc
ja
mov
sub
push
mov
lds
cmp
mov
push
incb
push
lock
int
dec
sbb
aad
sub
mov
cs
push
xor
lds
ret
int3
mov
enter
mov
lea
mov
pop
icebp
add
ja
adc
ja
out
aam
xchg
iret
outsb
int
jmp
and
dec
and
pop
cld
imul
movsb
and
inc
mul
pop
ljmp
dec
imul
jmp
pop
lahf
imul
ret
or
pop
jne
dec
mov
mov
sub
pop
popf
jb
or
rcrb
loope
arpl
das
mov
andb
call
fadds
push
dec
pop
push
jne
bound
xchg
mov
xor
jb
or
cwtl
daa
dec
dec
adc
in
push
cmp
movsl
loope
pop
xor
jg
sahf
repz
and
negb
or
jge
add
adc
xlat
sbb
sub
cmpl
mov
mov
movl
jmp
movl
jle
push
call
and
subl
adcl
movzwl
adc
xor
sub
cmpl
movl
mov
mov
movl
jmp
movl
jb
pushl
push
push
call
sub
and
adc
adc
imul
xor
jmp
nop
push
push
sub
sbb
jle
dec
sarb
mov
adc
add
and
and
push
jp
aad
mov
std
dec
rorb
mov
jns
outsb
xchg
jo
pushf
sub
dec
sub
ljmp
leave
and
push
jae
cmpsb
fcomi
pop
xor
addb
xor
cmp
add
fs
xchg
or
stos
mov
push
push
out
xchg
ficomps
dec
fisttpll
pop
jb
clc
add
mov
pop
fimull
inc
test
cmp
mov
scas
jbe
andb
push
pop
cmp
mov
dec
mov
stc
add
mov
fadds
xchg
ljmp
and
int3
jbe
dec
jmp
pushf
data16
cs
or
jmp
dec
adc
or
cltd
mov
insb
shrl
mov
pushf
add
test
jb
mov
shrb
in
dec
or
jg
xchg
test
pop
mov
std
xchg
cs
mov
jle
dec
cmp
popf
psubw
add
js
sub
dec
iret
bound
mov
adcl
sbb
jmp
push
shl
loopne
mov
cmp
inc
inc
or
cmc
sbb
xchg
sbb
and
pop
mov
pop
dec
jne
in
cmp
out
arpl
sbb
cmp
xchg
mov
push
pop
test
int
rcl
add
pusha
ds
out
in
or
pop
cmp
and
or
les
shr
cs
das
mov
icebp
push
or
cwtl
lcall
jg
pushf
jnp
xchg
mov
sub
iret
xchg
cmpsb
sub
aaa
outsl
push
fcomi
andl
pop
ja,pn
push
add
lods
mov
mov
aaa
pop
jnp
loope
ss
or
nop
mov
fiaddl
fwait
test
dec
xor
test
sbb
test
incl
testb
adc
test
sub
inc
add
xor
inc
add
notl
not
jmp
movl
je
push
call
movzbl
adc
mov
sbb
sbb
xor
subl
mov
mov
sub
or
or
mov
jmp
loop
out
cmpsl
inc
sbb
inc
mov
add
enter
aaa
cmp
loope
bswap
cmp
out
loope
pop
aam
xchg
in
dec
jno
xchg
fucomip
bound
int3
pop
cltd
es
out
cltd
mov
cmc
jp
adc
jo
sbb
rol
test
jns
xorb
cmp
popf
mov
cmpsl
rclb
cmp
adc
sbb
in
int3
jae
test
sub
shlb
add
add
bnd
pop
cli
sub
js
insl
inc
cmp
pop
pop
pop
lret
mov
mov
jp
push
jmp
lret
fs
and
push
fs
insl
pop
xor
or
xor
clc
sbb
enter
push
cmp
fstps
outsb
shlb
cmp
shrl
cwtl
push
jp
fwait
ja
mov
pop
testl
jae
push
dec
movl
dec
adc
repnz
push
fs
mov
clc
mov
jo
icebp
aas
cmpsl
in
iret
out
and
jno
add
iret
push
mov
xchg
mov
popa
xchg
call
inc
push
mov
sahf
fnstsw
call
mov
lret
fwait
mov
jnp
dec
xchg
bound
imul
and
mov
xor
xlat
ljmp
std
and
int3
sbb
sub
imul
push
or
mov
cli
fcoml
je
sub
cmpsb
xchg
shlb
test
in
adc
adc
add
cld
xor
inc
jp
ja
add
pop
arpl
out
insb
sbb
ret
lahf
ret
cmpsl
lds
outsl
or
js
popa
push
mov
test
fsubl
gs
sbb
lods
mov
cltd
jmp
stos
pop
aaa
cmpsl
hlt
adc
and
mov
push
int
push
pop
mov
jp
mov
push
mov
call
loope
mov
outsl
sub
and
je
pop
lock
std
dec
adc
cmp
xor
xor
or
add
xor
or
mov
sub
sub
mov
adc
lea
andl
and
movzbl
add
mov
mov
sub
add
mov
movl
adc
movl
cmpl
mov
notl
jmp
mov
jg
push
push
call
sbb
or
or
add
inc
sub
subl
movl
andl
movl
mov
cmpl
movl
movzwl
mov
jmp
mov
jge
pushl
pushl
call
add
xor
xor
and
and
movl
sbb
mov
mov
adcl
xor
andl
xor
xorl
mov
call
mov
mov
decl
mov
addl
mov
addl
xor
xor
adcl
mov
subl
call
decl
or
dec
or
add
mov
sbb
mov
xorl
xor
xor
mov
call
cmpl
mov
movl
mov
mov
jmp
mov
ja
pushl
push
push
push
push
call
subl
mov
or
or
and
mov
xor
or
mov
mov
decl
mov
add
mov
xor
andl
xor
subl
mov
cmpl
movl
movl
mov
jmp
mov
movzwl
jne
push
push
pushl
push
pushl
push
call
andl
subl
addl
subl
sbbl
subl
movl
mov
sbb
mov
notl
mov
mov
addl
call
adc
mov
adcl
or
sbb
mov
addl
or
incl
push
sbbl
push
sbbl
push
andl
push
call
mov
cmp
jne
sub
mov
mov
subl
xor
andl
xor
andl
mov
movl
call
sbb
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
jmp
inc
adc
cmp
pop
pusha
js
jg
jle
mov
adc
movlps
mov
and
push
mov
js
or
xchg
adc
push
pop
rcr
inc
sub
test
mov
fimull
jbe
out
mov
adc
pop
fwait
adc
lahf
cmp
jno
roll
fsubrl
addr16
fildl
loop
lret
xor
ss
hlt
inc
jo
std
pop
add
mov
xchg
cmp
pop
cmp
shlb
das
jp
pop
xchg
dec
xor
std
mov
sub
pop
scas
or
pop
scas
or
ja
jno
fdivp
adc
shrl
jmp
shl
pop
jns
insl
pop
mov
mov
int
adc
mov
xchg
data16
ret
inc
sti
push
test
mov
pop
movsl
hlt
lock
aad
mov
cmp
and
pop
andl
adc
cmp
adc
cmp
cmp
insl
and
not
and
xchg
mov
mov
addr16
jg
pop
repz
xor
and
popa
fidivrl
xchg
scas
lods
push
mov
aad
call
out
xchg
jmp
mov
ss
nop
push
call
ret
and
dec
rolb
mov
push
cltd
leave
xor
mov
sub
les
iret
xchg
pop
sbb
call
sub
push
fldl
xlat
adc
movsl
repz
out
test
in
push
xor
testl
xlat
or
fcoms
in
jecxz
enter
sub
aad
sbb
mov
ret
mov
mov
adc
test
stos
add
divb
cmp
je
scas
xor
jmp
mov
outsl
pop
cmc
mov
or
notl
aas
push
mov
sahf
push
repnz
aaa
inc
xchg
mov
dec
xchg
push
add
xchg
and
dec
inc
test
cs
cmpsl
pop
daa
or
dec
in
pop
js
repnz
fdivr
decl
pushf
inc
add
or
mov
or
push
push
push
push
call
mov
jmp
jmp
lea
mov
mov
movl
mov
xor
shr
mov
jmp
leave
out
loope
pop
sub
rcll
jle
lods
adc
adc
in
out
scas
pop
rcl
xchg
iret
mov
imul
inc
sahf
stc
or
out
and
sbb
adc
mov
mov
rolb
outsb
sub
jae
sbb
js
ret
rcrl
loop
xchg
jp
add
mov
outsb
divb
push
and
jne
adc
or
aas
out
cmovp
jle
inc
xchg
mov
sahf
rorb
inc
sub
dec
dec
enter
nop
in
test
inc
cmp
in
imul
xchg
imul
add
mov
mov
inc
push
out
jmp
insl
sub
stc
dec
js
call
add
lret
cs
xchg
sbb
jmp
sarl
lret
les
in
int
xor
push
movsl
shll
sub
push
loop
popf
xlat
xchg
mov
mov
push
int
pushf
lret
out
add
jl
jp
mov
bound
adc
push
cmpsb
mov
pop
repnz
push
jge
outsl
dec
sbb
aaa
xlat
cmp
sub
cmp
xor
sbb
push
inc
cli
mov
hlt
push
cmp
mov
lea
mov
int3
std
mov
jg
lea
sub
and
sub
dec
fisubs
sub
sarl
repnz
cwtl
jge
rcl
add
arpl
int
push
sti
repnz
xor
int
sbb
inc
mov
das
loope
test
sbb
pop
testl
jbe
sub
cli
or
sbb
clc
mov
xchg
into
ret
adc
ds
lret
jb
and
sub
mov
mov
fadds
push
dec
roll
adc
push
enter
pushf
xlat
repz
popf
xor
imul
cmp
pop
mov
mov
xor
shl
or
mov
mov
mov
mov
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
xor
xor
mov
jmp
mov
popa
sahf
sbb
lods
insb
dec
fildl
stos
dec
test
adc
movlps
cmp
stc
sub
sbb
mov
push
repz
add
daa
lahf
jl
orb
iret
jns
cmp
lods
bound
and
insb
xor
dec
push
push
rcr
out
push
cmp
rorb
and
lret
jge
int3
rorl
int3
pop
loopne
jg
jge
hlt
xor
adc
dec
les
int3
loop
data16
mov
ret
daa
sub
cwtl
imull
or
lea
cltd
cmp
iret
lret
dec
sub
jmp
in
mov
sbb
or
cwtl
mov
test
adcl
or
fdivrl
jbe
or
mov
shl
outsb
push
add
push
push
leave
clc
test
pop
and
jno
pop
aas
leave
push
pushf
cmp
scas
in
les
aam
push
clc
movsb
les
or
idivb
add
loope
prefetch
mov
shlb
xor
in
cmp
lods
dec
dec
scas
cmp
pop
int
imul
inc
mov
pushf
cmc
mov
inc
or
std
add
xor
loop
and
mov
xor
adc
cmpsl
pop
in
jl
inc
fsubrs
sub
rclb
jp
ljmp
inc
sahf
inc
pop
xor
ss
or
loopne
inc
jecxz
add
mov
push
cmp
sbb
data16
cld
mov
sbb
out
cmp
jae
jmp
or
jmp
sub
jmp
sti
xor
mov
fmull
je
scas
or
inc
and
addr16
pop
or
xor
push
push
sub
inc
add
xor
push
mov
je
fnstsw
xchg
ds
xor
call
lods
sbb
das
out
xor
cs
push
xor
out
sub
decl
decl
decl
incl
lret
fmuls
aam
decl
sar
pushl
add
mov
or
mov
or
push
push
push
push
call
mov
cmp
je
mov
mov
xor
jmp
add
xor
and
aas
loope
xor
js
aas
ljmp
enter
loopne
pop
sbb
test
aad
pop
mov
cmp
mov
stc
jmp
mov
push
push
inc
cld
add
aam
int3
inc
addl
call
pusha
or
sub
lahf
ja
stos
je
repnz
xlat
cmp
test
shrl
xor
push
std
cwtl
pop
lret
add
stc
insl
out
inc
sbb
inc
pop
xchg
mov
jmp
out
aaa
iret
xchg
lds
sbb
jg
mov
push
out
or
xlat
mov
jge
outsb
lcall
mov
loope
aam
je
inc
adc
aam
mov
std
data16
shll
add
pusha
aam
xlat
adc
mov
inc
mov
rclb
imul
jecxz
jbe
pop
cld
mov
dec
hlt
cwtl
loop
jo
adc
pop
outsl
test
xor
jno
testb
loopne
push
cwtl
cmpsb
mov
inc
mov
and
pop
hlt
cli
pop
xchg
xor
cmp
push
insb
shlb
cs
add
adc
pop
cwtl
inc
dec
cmp
mov
jl
pop
push
push
ja
mov
sbb
push
testl
xchg
cs
mov
inc
xor
jl
add
xchg
call
mov
vpcmpeqd
add
inc
dec
xor
cmpsl
jnp
test
testl
data16
iret
mov
xor
xchg
mov
xor
jle
push
insb
adc
jne
push
outsb
cmp
int3
sahf
es
addb
pop
push
clc
cwtl
cwtl
loope
sub
cltd
mov
pop
ror
mov
lret
jnp
out
add
or
arpl
data16
push
lods
rorl
cmp
data16
in
fstpt
imul
jp
adc
data16
jecxz
push
mov
gs
jecxz
inc
jne
and
lret
sub
movsl
icebp
lea
in
mov
mov
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
imul
add
mov
mov
mov
jmp
jmp
mov
mov
xor
xor
mov
jmp
insl
xor
jb
push
sub
loope
mov
enter
mov
add
aad
cmp
cmp
xchg
xchg
inc
stos
into
inc
int
lret
gs
lcall
call
cs
arpl
or
lds
dec
inc
outsl
lcall
inc
fwait
int
xchg
les
cwtl
adc
xchg
mov
imul
aam
pop
out
pop
sub
pop
push
stos
sub
std
out
imul
testb
fdivs
enter
bnd
popl
into
faddl
pop
mov
mov
in
push
pop
stos
lock
jae
cmp
inc
lcall
pop
iret
pop
sar
push
sub
int3
jmp
sub
mov
lds
lret
jg
mov
js
dec
loop
jle
lods
lret
inc
rolb
xchg
mov
sbb
out
je
popf
lcall
iret
mov
xchg
add
out
or
adc
rcrl
jns
sbbl
fistps
dec
orb
in
dec
and
or
daa
adc
lret
sbb
add
js
dec
repz
pop
push
lcall
andl
xchg
pushl
pushf
inc
icebp
cmp
cld
cmp
push
xor
inc
lcall
leave
outsl
mov
movsb
push
mov
cmp
nop
es
adc
out
push
sti
mov
jl
cmc
pop
stos
inc
jne
dec
mov
fcoml
xchg
mov
repz
in
adcl
inc
and
lahf
or
arpl
aad
out
xor
popa
addr16
subb
lock
inc
imul
in
ds
lcall
add
push
xchg
sbb
jp
jmp
mov
mov
push
loope
int
inc
fldl
fnstcw
push
or
sarl
int3
or
mov
xchg
inc
xlat
pusha
mov
jne
jmp
fdivrs
lea
sbb
jle
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
mov
mov
call
or
mov
or
push
push
push
push
jmp
pop
cli
xchg
ret
xchg
stos
imul
sbb
mov
jmp
scas
lds
dec
push
or
fldl2e
dec
faddl
cs
sti
push
dec
sbb
push
idivb
and
sub
xor
fsub
cli
adc
js
ret
adc
sbb
rorb
dec
scas
jns
rcrl
call
outsb
jmp
hlt
notb
push
jg
lahf
sub
test
fwait
cwtl
adcb
xor
cli
loope
pop
pop
xchg
inc
std
mov
hlt
pop
pushf
inc
mov
shld
ret
aam
ja
and
mov
and
dec
pop
popf
sub
inc
xchg
push
rolb
lods
int
mov
fcoml
mov
ss
adc
cmp
outsl
rcrb
mov
inc
pop
pop
pop
jo
adcl
jo
sbb
cli
or
push
aaa
dec
mov
mov
pop
aam
sub
jp
call
xor
cmp
mov
icebp
sbb
faddl
mov
fcompl
cmpb
cmp
test
push
sbb
push
out
call
ret
fbstp
fisttps
xor
std
es
outsb
ret
inc
data16
xchg
movsb
push
out
pop
add
pop
xadd
adc
lods
mov
ja
mov
jo
fimuls
and
jmp
sbb
jg
push
sub
sbbb
rcrb
mov
dec
daa
add
sbb
je
roll
and
push
cmp
sub
dec
inc
in
cmp
xchg
in
bound
sub
icebp
ljmp
mov
in
pop
adc
fbld
xlat
popf
ret
in
dec
aaa
xor
or
cld
dec
sbb
mov
add
add
mov
testl
outsb
mov
mov
pop
sbb
dec
pop
lcall
push
pop
out
xor
mov
sub
pop
mov
loope
fcoms
and
shr
mov
decl
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
mov
xor
div
mov
and
add
mov
lea
xor
add
mov
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
xor
div
add
mov
and
xor
add
mov
mov
sub
mov
or
mov
and
mov
xor
mov
mov
sub
mov
imul
xor
xor
mov
mov
add
add
mov
movl
movl
movl
movl
movl
movl
mov
xor
mov
imul
mov
lea
mov
and
and
xor
push
pop
div
imul
jmp
stos
cmpl
and
sahf
sarb
clc
jp
sbb
movlps
mov
inc
push
and
add
insl
dec
adc
repz
aaa
shll
cmpb
pop
aad
pop
test
or
cmp
aaa
jge
stc
mov
lds
and
mov
add
imul
les
adc
in
hlt
in
aad
fs
test
sarl
or
jo
xchg
or
lret
sbb
leave
push
in
pop
je
sbb
xor
dec
xchg
sbb
aam
inc
add
sbb
loop
dec
xor
jno
adc
sub
sub
push
popa
scas
or
lret
fwait
imul
clc
orb
mov
pop
add
loopew
push
mov
cmp
mov
ljmp
xadd
out
iret
add
pop
xchg
adc
push
xor
cld
stos
and
mov
jp
stos
cmp
sub
jb
mov
call
adc
dec
pop
push
pop
cmp
in
repnz
imul
xor
rcrb
fnsave
xchg
call
lods
add
xchg
ds
jp
jg
cmp
and
pop
aam
stos
sub
divl
jge
xor
mov
sub
and
mov
ss
test
xor
aas
mov
adc
cmp
lcall
and
mov
xchg
mov
imul
pushf
mov
sbb
jmp
xor
xor
sub
stos
pop
jae
mov
fsubs
clc
dec
negb
push
outsb
call
gs
enter
xchg
nop
or
cli
or
mov
jns
pop
dec
sub
cltd
adc
int
push
xlat
jno,pt
js
mov
mov
or
pop
xor
repz
lea
ja
dec
mov
and
mov
or
add
imul
mov
xor
xor
mov
mov
add
add
mov
movl
movl
movl
movl
movl
movl
mov
xor
push
pop
div
mov
or
mov
xor
div
imul
mov
lea
mov
and
and
sub
xor
mov
xor
mov
and
and
or
mov
mov
add
lea
mov
andl
jmp
mov
inc
mov
mov
mov
cmp
je
mov
mov
mov
add
mov
mov
mov
mov
mov
jmp
and
lret
sbbl
js
and
mov
enter
addr16
ljmp
jle
es
sbb
pop
mov
out
aam
mov
pop
imul
jnp
cmpsl
sub
xchg
arpl
idivb
notb
mov
jns
cmp
dec
shll
sub
adc
sbb
push
nop
sarl
scas
pushf
add
pop
sub
jae
cs
fwait
jne
fcomi
shll
fwait
or
push
adc
ret
addr16
inc
cmp
insl
and
dec
lcall
lahf
int3
mov
mov
std
push
lcall
arpl
dec
mov
cwtl
push
mov
ret
scas
cwtl
test
push
pop
mov
fs
movsl
mov
xor
jbe
pop
shll
or
and
jle
pop
fists
das
mov
fcmovb
test
icebp
rolb
test
mov
cmc
xchg
call
popf
pop
aam
pop
pop
and
inc
cmp
mov
shlb
or
in
dec
sti
and
jno
icebp
push
mov
fldl
cmpsb
xchg
decb
call
int3
scas
dec
dec
daa
out
ffreep
repz
jb
pusha
mov
stos
push
push
xchg
pushf
inc
in
aad
cmp
addr16
and
aaa
push
mov
cmp
xchg
sub
in
mov
fisttpll
xchg
movsl
loope
repnz
cmp
cli
hlt
jmp
dec
data16
cmp
xor
enter
or
add
and
lret
and
adc
cmpsl
or
das
sti
jp
fyl2xp1
mov
push
or
lret
pop
push
inc
sub
xchg
cmp
ret
xor
cmp
pop
mov
add
subl
out
pop
pop
call
adc
rorb
mov
inc
fstpl
mov
int3
gs
and
or
mov
sahf
lahf
imul
dec
inc
jle
fistpll
jle
mov
xor
movsl
sarl
push
and
movsl
mov
push
cwtl
cmp
lods
fwait
ret
in
movsb
out
jge
out
inc
rol
test
pushl
lret
adc
fmuls
and
pushl
imul
fmuls
sbb
decl
decl
decl
mov
and
inc
add
add
pop
lods
mov
and
pop
mov
mov
adc
adc
lahf
jns
les
xlat
sbb
dec
call
xchg
push
outsl
mov
repnz
icebp
sub
pop
sub
mov
or
push
and
cmp
stc
jb
jo
pop
in
inc
pushf
in
aas
je
push
shlb
and
or
test
mov
dec
xchg
push
fmull
fsts
add
div
outsl
dec
jmp
loopne
xchg
pop
push
aad
push
loop
and
xchg
mov
ja
mov
add
add
shlb
sbb
fidivs
cltd
pause
xchg
dec
hlt
int
sbbl
stos
inc
sahf
rcrb
stos
or
add
outsb
mov
dec
inc
or
lret
movsl
shlb
xchg
notl
inc
cmp
xchg
push
arpl
sub
jp
xchg
jne
aam
add
mov
lock
xor
mov
add
jno
mov
sbb
inc
pop
cmp
sahf
xchg
pop
cs
test
xchg
sbb
mov
sti
bound
and
repz
xchg
in
dec
cmp
adc
mov
sbb
push
fiaddl
loopne
dec
data16
das
cli
sub
es
cmpsb
sub
scas
and
mov
ret
dec
in
sub
push
arpl
sub
or
in
in
aaa
rolb
xor
mov
jmp
repz
pop
repnz
add
test
cmp
dec
cmpsl
fidivl
sub
nop
xchg
add
mov
clc
sub
lods
ljmp
mov
lea
jge
xchg
scas
sub
test
aas
dec
insb
mov
jo
ljmp
call
xchg
xor
mov
push
jg
fstl
subb
xlat
mov
test
mov
in
or
aad
int3
pop
dec
enter
mov
cmpb
mov
or
xchg
dec
into
rcl
inc
pop
mov
lcall
fwait
mov
rcl
mov
movzwl
xor
movzwl
shl
or
movzwl
mov
mov
mov
mov
jmp
dec
sbb
sbb
sbb
sbb
scas
sbb
jae
call
adc
movlps
pop
sahf
mov
mov
loope
jne
shlb
or
jp
dec
ret
out
push
sbb
popf
add
adc
add
pop
cwtl
push
mov
aas
lods
clc
add
aam
stc
or
cmp
pop
das
pop
inc
dec
dec
rcrb
and
dec
pop
mov
ljmp
sub
sbb
sbb
or
insb
movb
inc
call
push
das
iret
cmp
pop
push
jns
mov
and
mov
inc
mov
adc
inc
jne
loop
xchg
push
out
jmp
mov
cmp
aaa
decb
sub
fisubrs
xlat
cltd
or
leave
stos
mov
jno
andl
cmp
sbb
adc
mov
lods
lea
js
push
mov
or
jecxz
push
in
mov
icebp
jg
jg
jne
cli
arpl
fwait
inc
adcb
aad
aam
gs
add
aaa
in
punpcklwd
shl
fcomip
imul
add
lret
cmpsb
mov
test
xlat
adc
push
pop
cld
lret
add
loopne
xchg
or
xor
and
clc
pop
iret
gs
cs
mov
fmul
cmc
sti
scas
jno
add
sbb
mov
cld
mov
dec
hlt
xchg
push
mov
icebp
sub
jge
les
pop
lods
pop
push
sarb
test
mov
repnz
leave
inc
mov
or
les
test
add
movsl
xlat
out
xchg
fidivrs
dec
leave
jg
cwtl
xchg
in
nop
xor
cmp
cmc
mov
mov
cmp
push
pop
fmuls
outsl
inc
and
gs
inc
loopne
or
jmp
jl
mov
fstp
bound
in
imul
cltd
xchg
push
ret
scas
mov
pop
sbb
movsl
imul
or
decl
test
decl
pushl
xor
mov
call
or
or
movzbl
push
lea
push
call
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
jmp
push
pop
inc
ficomps
clc
les
out
mov
adc
jp
sbb
int3
xchg
push
leave
hlt
int
mov
sbb
int
fldenv
es
lcall
iret
inc
data16
popf
adc
push
mov
jecxz
fdivs
lcall
bound
cmpsl
cmp
pop
push
sub
rolb
addr16
dec
sub
or
pop
inc
imull
and
dec
int
jmp
add
mov
and
xchg
push
inc
pop
rolb
or
popa
sarl
loopne
xor
or
push
mov
in
dec
xor
stos
add
dec
dec
pop
cs
add
fmuls
scas
nop
les
dec
imul
sub
jne
stos
fs
or
add
js
cmp
or
out
ljmp
pop
aam
mov
mov
stos
pop
sbb
imul
push
cmpsl
addr16
out
data16
pop
push
and
dec
push
xchg
bound
js
roll
xor
mov
int3
cld
adc
pop
icebp
in
push
lret
fmulp
pusha
call
fdivrl
dec
daa
les
fisttpl
sub
in
inc
mov
out
or
inc
mov
mov
sbb
repnz
pop
or
lods
call
cmp
enter
movsl
mov
adc
out
inc
mov
popa
dec
testb
or
mov
test
cmp
mov
jbe
lahf
mov
popa
out
rcr
push
fcmovbe
add
push
inc
adcb
ret
cmpsb
stos
jmp
mov
mov
mov
outsb
mov
adc
adc
jbe
adc
mov
aas
mov
fwait
sub
mov
pop
push
ret
mov
pop
mov
adc
scas
dec
loopne
pop
adc
cmpsb
push
addr16
das
rcl
insl
nop
out
test
lock
pop
pusha
std
or
imul
jecxz
or
fs
pushl
xor
mov
call
or
or
mov
jmp
mov
mov
xor
xor
mov
call
mov
jmp
out
add
popa
cmpsl
aad
stos
adc
xchg
adc
iret
ljmp
pop
adc
test
sub
pop
out
in
mov
sub
lcall
jmp
aas
in
int
jns
jl
in
pop
repz
stos
and
cwtl
mov
adc
push
call
outsl
or
jp
div
xchg
js
dec
or
cmp
push
xchg
mov
cmpsb
outsb
leave
fwait
xchg
xchg
pop
rorl
rorl
jae
mov
xor
in
jp
xlat
insb
add
and
sbb
pushf
shrb
pop
xchg
sbb
xorb
jne
xchg
jmp
roll
lret
lea
xchg
cmova
notl
push
xor
cmp
loop
iret
flds
add
sarb
inc
cmp
push
xor
hlt
pop
stos
dec
sub
int3
xor
adcl
sub
jp
lret
xchg
sahf
jns
in
jecxz,pt
mov
cld
les
jge
ja
mov
push
add
test
popl
or
out
mov
sub
xchg
loopne
mov
scas
stos
daa
or
imul
jmp
sti
sbb
scas
aam
bswap
dec
loopne
mov
and
fiaddl
or
fimuls
jne
xchg
push
mov
cli
lret
movb
xor
mov
xor
jb
test
cli
mov
jl
lea
and
leave
jg
lea
aad
gs
idivl
add
pushf
push
cmc
pop
lcall
xchg
fldpi
mov
scas
sbb
push
cmp
pop
out
int3
test
push
int3
leave
sub
add
fsts
popf
sbb
subps
sbb
sti
into
shll
cmpsb
mov
pop
and
pushf
xchg
leave
push
lahf
pop
sub
repnz
je
repnz
add
sbb
xor
test
into
inc
cwtl
dec
das
faddl
inc
loop
lahf
movsb
mov
orl
jb
or
mov
mov
xor
xor
mov
call
or
jmp
mov
or
mov
push
push
stos
push
adc
movlps
bnd
das
mov
dec
in
pop
sub
aam
mov
mov
jle
clc
pop
mov
xchg
push
add
imul
nop
popf
mov
pop
cmc
fidivs
cmp
jbe
out
add
push
xor
xchg
aam
push
scas
addl
xor
jg
adc
push
nop
ret
test
loope
je
imul
mov
mov
xor
adc
cltd
lcall
lea
addr16
test
push
out
mov
mov
mov
sbb
out
mov
or
in
sbb
and
mov
pop
aam
pop
inc
push
out
and
xor
jns
mov
lds
stos
or
shl
or
sahf
push
xchg
sti
call
xor
jl
xchg
es
mov
add
pusha
popa
add
xchg
pop
fisubs
mov
andb
pop
mov
jmp
and
pop
cmpsl
sub
jecxz
mov
decb
sahf
xor
push
cmp
or
sbb
push
popf
and
inc
pop
insl
cmp
dec
ja
test
cmp
jne
pusha
repz
mov
mov
jmp
push
and
inc
and
push
pusha
cmpsb
addr16
call
dec
dec
cmp
mov
or
xchg
test
xchg
rorb
adcb
lret
stc
out
xlat
dec
jbe
mov
shr
mov
cmp
mov
mov
add
inc
aam
mov
and
rorb
xor
mov
and
dec
rcll
dec
bound
ficompl
xor
fnstenv
add
inc
pop
cmp
mov
push
popf
mov
dec
sub
cmp
fdivrp
jl
mov
cmc
jmp
insl
cld
test
inc
jecxz
jbe
pop
fmulp
loope
pop
popa
or
add
mov
mov
cmp
jmp
stos
js
pop
and
mov
imul
adc
adc
cld
inc
fcomps
push
mov
xchg
jno
rclb
sbb
mov
mov
shll
lcall
outsl
mov
rcll
pop
pop
test
sub
pop
cwtl
adc
out
repnz
dec
gs
imul
cmp
stos
sbb
xchg
push
add
jns
push
sarb
fmuls
push
mov
testb
shlb
ret
jnp
jno
aas
sub
push
lret
jge
pop
test
mov
pop
cmpsl
mov
push
icebp
loop
icebp
daa
int3
mov
fwait
adc
imul
outsl
cwtl
add
in
mov
gs
push
call
xor
lea
arpl
ds
pop
and
js
mov
and
movsb
jo
sub
pop
aaa
add
rcrl
out
cmp
add
or
mov
lret
adc
cmp
lods
mov
insb
cld
jns
shll
pusha
arpl
mov
mov
jno
pop
fidivrl
dec
mov
sub
xor
mov
std
jle
xlat
imulb
fisubrs
fstpl
push
adc
add
ss
push
mov
push
inc
adc
mov
inc
xchg
push
stc
fistpl
inc
fcompl
loope
sbb
insl
jp
push
xor
ljmp
push
sbb
mov
sbb
mov
test
in
xchg
mov
insb
or
push
jbe
in
lret
jae
icebp
dec
and
sti
imul
or
jecxz
iret
lods
xchg
daa
js
push
cmp
xchg
cld
jg
jl
imul
in
out
cmp
pop
loopne
mov
stos
pop
insb
fwait
test
and
lret
mov
push
inc
test
push
stc
fdiv
leave
pop
pop
shrb
mov
jecxz
ret
add
sbb
sbb
cmp
jge
in
mov
xchg
test
add
add
decl
decl
mov
addl
add
mov
sar
jmp
ds
in
mov
xchg
js
add
insb
mov
movlps
icebp
cltd
shrl
push
call
lahf
pop
push
stos
mul
cli
lahf
and
roll
and
pop
test
xchg
dec
add
mov
sbb
cltd
xchg
out
jmp
pop
aaa
iret
mov
mov
xchg
ret
push
int3
inc
enter
inc
inc
xchg
and
lahf
cmp
mov
loopne
xor
dec
vfrczss
in
and
push
mov
rclb
xrelease
sub
push
add
cwtl
popf
lcall
cmp
fwait
imul
cmp
sbb
sti
dec
sahf
mov
mov
mov
inc
sahf
and
in
dec
dec
lret
push
stos
mov
int3
movsb
xor
cli
pop
and
sub
mov
outsb
lods
add
cmpsb
enter
jo
ja
cmpsb
xor
push
xchg
pop
pop
ja
aam
daa
push
repz
mov
mov
xor
icebp
jp
in
jg
test
test
adc
push
mov
sub
push
fdivl
mov
popl
add
and
loope
cmc
push
pop
test
jmp
pop
cltd
adc
adc
cltd
or
ja
xor
push
mov
repz
rolb
push
stc
cltd
bound
sbb
xor
movsb
mov
clc
add
or
rolb
xor
jge
jne
jmp
pop
jge
sub
in
add
lds
mov
lahf
jecxz
fcompp
push
push
aas
cld
cld
in
mov
mov
mov
aaa
roll
jbe
data16
mov
mov
mov
icebp
mov
and
je
push
xchg
call
push
jecxz
lcall
test
mov
jns
ficoms
movsl
pop
shrl
cmp
gs
mov
dec
mov
mov
leave
add
loope
pusha
pop
mov
mov
movzwl
xor
movzwl
shl
or
movzwl
mov
mov
mov
movzwl
xor
movzwl
sar
mov
mov
movzwl
xor
movzwl
shl
or
mov
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
mov
xor
xor
jmp
jns,pn
xchg
pop
subl
js
mov
mov
enter
sub
ljmp
mov
mov
cmp
push
jle
popa
js
jmp
lods
sahf
es
mov
insb
in
or
popf
arpl
ret
xor
daa
testl
pushf
lock
es
jl,pt
mov
shrl
sbb
decl
fsub
in
dec
dec
cs
mov
lock
inc
inc
pop
test
sub
sbb
push
es
push
add
adc
add
test
aam
ja
mov
mov
mov
and
and
dec
aas
push
push
and
pushf
in
jo
into
adc
inc
inc
xchg
pusha
dec
sbb
ds
insl
aaa
push
sub
jmp
mov
or
push
call
aam
es
inc
adc
mul
jmp
xor
icebp
mov
jl
dec
cld
in
mov
jl
je
test
push
mov
xchg
daa
data16
std
fldt
xchg
mov
cwtl
and
sar
les
and
or
loopne
fisttpl
inc
or
mov
ret
inc
jbe
loopne
mov
imul
mov
jl
dec
imul
and
cs
lret
sub
mov
adc
cmp
cltd
mov
adc
std
loope
test
inc
jne
mov
dec
jno
shlb
stos
ficoml
fwait
call
cld
nop
or
cld
inc
popf
push
jge
push
cmp
cmc
gs
push
iret
push
ja
out
in
in
cmp
pop
or
sub
inc
insl
push
aam
gs
mov
jle
pop
pop
sub
outsb
outsb
test
push
movsl
mov
and
lds
dec
jl
cmpsb
inc
inc
dec
mov
mov
cmp
cmp
lea
data16
insb
adc
fsubl
daa
xor
ret
xor
jmp
sbb
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
mov
or
je
lea
mov
mov
xor
mov
call
mov
mov
mov
xor
mov
call
or
or
xor
xor
mov
mov
mov
mov
movsbl
mov
mov
xor
xor
mov
call
jmp
arpl
or
push
clc
andl
enter
leave
fwait
cmc
loope
adc
hlt
insb
in
addb
sti
inc
cmovle
pop
cmp
outsb
mov
fsubl
inc
adc
fstps
add
xorl
mov
and
inc
addb
out
sub
xor
xor
cmp
add
cli
mov
dec
psubd
call
jl
test
sub
cld
arpl
adc
xor
push
xor
xor
xchg
inc
pop
mov
addb
and
enter
pop
xchg
adc
repz
shl
ja
rcr
dec
sbb
scas
inc
or
aam
lea
mov
insl
cmc
ja
mov
and
sahf
xchg
mov
lahf
jne
sarb
jmp
jae
push
dec
pop
lock
shlb
push
cmpsb
adc
aam
pusha
cmp
add
mov
test
stos
adc
clc
sahf
scas
dec
cmp
add
dec
ljmp
das
mov
pop
cmc
stc
mov
push
sahf
or
test
jo
mov
pop
mov
adc
in
xorb
or
pop
mov
stos
sbb
jg
mov
and
rcrb
push
mov
jp
lock
insl
or
push
pop
jl
js
push
arpl
jge
xor
or
lods
push
add
movsl
insl
fildll
sahf
xor
and
movsb
jge
mov
jecxz
push
pusha
push
add
sub
mov
in
fsubs
inc
fwait
adc
cli
inc
mov
pop
cmp
cmp
in
push
sub
inc
nop
fxch
loopne
lds
js
int
pop
adc
sbb
push
stos
jmp
mov
sbb
stc
and
sub
and
mov
mov
cmp
mov
outsl
test
lahf
adc
sahf
icebp
in
mov
and
adc
cwtl
xchg
xlat
clc
jecxz
nop
pusha
fcmovne
repz
or
jle
fmuls
decl
pushl
xor
mov
call
or
or
movsbl
cmp
je
jmp
xorl
jns
sbb
pop
lods
cmp
adc
adc
ret
rorl
cmp
fistps
xchg
int
cmp
sti
scas
sbb
ret
sub
pusha
call
aad
push
jmp
sbb
repnz
xchg
xor
lret
dec
cltd
in
in
add
xor
rcrl
mov
or
test
loop
push
push
movsl
mov
movsb
mov
aam
push
fsubs
aad
ss
nop
sub
add
xchg
test
sar
dec
push
rcll
es
bnd
out
test
int
add
adc
data16
movsb
fs
pop
xor
cmp
jge
test
or
push
sbb
cmpsl
cmp
inc
cmp
mov
jp
xlat
jle
stos
pop
push
dec
inc
mov
mov
xchg
dec
roll
and
sub
or
fimull
jmp
xchg
push
sub
inc
dec
inc
sbb
adc
xchg
sub
repnz
jge
jmp
xor
sub
sahf
sub
and
clc
fcomi
lods
xorl
pushf
xchg
lods
inc
scas
dec
hlt
sbb
or
jno
fucomi
xchg
mov
aad
es
jbe
call
push
aas
fistl
mov
es
and
push
cwtl
push
das
inc
mov
scas
ds
adc
inc
nop
adcb
nop
in
adc
cmpsb
nop
leave
jbe
xor
push
xor
out
mov
add
lods
out
gs
pushf
jae
xor
adc
insb
repz
in
shlb
cltd
pop
mov
push
or
mov
xor
enter
mov
pop
int3
ret
push
flds
mov
xchg
mov
push
loope
cmc
sub
repz
sbb
mov
pop
rorl
push
inc
mov
aad
sbb
push
pop
push
sub
pusha
dec
imul
inc
mov
stos
jo
into
sahf
pop
cmc
fiadds
stc
insl
mov
mov
rcr
cltd
lret
inc
ds
mov
movsbl
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
movsbl
cmp
je
jmp
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
movsbl
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
movsbl
cmp
jne
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
add
mov
jmp
jmp
mov
mov
xor
xor
jmp
adc
fldl
out
cli
pop
push
into
lods
lea
enter
fildll
notb
addb
test
outsl
mov
sbb
inc
cmp
mov
ja
fwait
xchg
sub
enter
adc
mov
mov
sub
hlt
inc
or
ljmp
mov
xchg
fisubl
loopne
inc
mov
adc
xchg
push
dec
vpcmpgtd
add
adc
jg
stc
push
pop
in
in
jb
cmp
movsb
mov
lods
pop
mov
jecxz
pop
cmc
fmuls
and
out
push
pop
mul
out
adc
subl
push
xchg
aas
ljmp
cltd
xchg
sbbb
push
rol
pop
pop
imul
movsb
and
mov
mov
jle
cmp
dec
icebp
sub
sbb
sub
movsb
jne
mov
dec
push
jns
jp
pop
dec
pop
lods
test
cs
xchg
rcrl
jbe
dec
inc
sub
add
sbb
fdivr
adc
lcall
push
out
inc
pop
test
xor
iret
in
inc
push
subb
mov
clc
test
das
jg
cmpsl
in
scas
lea
jbe
fbld
aam
and
or
out
leave
lret
jae
std
andl
imul
mov
mov
das
jbe
jl
inc
imul
sub
push
and
rep
sahf
push
loop
lcall
mov
and
movsl
shl
xchg
sbb
jbe
sahf
fsubrl
out
xchg
fcmovu
inc
and
cltd
dec
es
sbb
lods
pop
xlat
mov
sar
cmp
mov
movsb
dec
test
int
lret
aas
fstpt
inc
adc
stos
mov
push
lcall
pop
popl
pushf
addl
mov
stc
ficomps
inc
mov
lahf
lcall
lods
xlat
cltd
mov
push
stos
add
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
mov
cmpl
je
mov
mov
movzwl
mov
mov
mov
jmp
jmp
cmpl
jne
xor
jmp
mov
add
mov
movl
cmpl
je
cmpl
je
mov
shl
mov
jmp
out
in
in
mov
mov
inc
pusha
adc
adc
xor
call
jl
fmull
add
andl
dec
xchg
lret
lods
or
xchg
jno
sbb
ret
xlat
inc
popa
jo
ret
stos
dec
mov
lods
xchg
fisubrs
lret
adc
push
adc
addb
push
or
mov
xor
xchg
add
fdivl
adc
pop
out
xor
into
test
and
clc
mov
xchg
jl
sub
into
sub
cli
cmp
shlb
iret
mov
pop
insb
iret
into
and
push
repz
mov
dec
imul
lea
aad
xor
dec
push
dec
jg
adc
mov
sub
iret
daa
icebp
mov
pop
jno
int3
jae
sub
cmpsb
lods
pop
stos
daa
inc
pop
dec
dec
jp
pop
mov
test
adc
outsl
fdivrl
inc
ret
mov
adc
lds
mov
inc
pop
add
and
jno
dec
inc
adc
sbb
mov
cmp
mov
jge
leave
or
mov
cld
fsubrs
mov
sti
cmp
jne
pop
in
insb
xchg
mov
jle
loope
aad
pop
push
testb
xchg
mov
call
xchg
ds
ljmp
add
ret
cld
mov
jle
rorl
jbe
fsubrp
test
das
daa
popa
repz
xchg
or
xor
imul
push
loopne
pop
jge
pop
enter
jl
jge
es
data16
mov
in
cmpsl
inc
mov
sub
xor
add
fwait
test
faddl
or
mov
push
inc
xchg
cmp
pop
inc
cli
test
mov
int3
repz
add
outsl
in
jmp
lea
gs
psubq
mov
aad
ret
ds
dec
pop
mov
xorb
dec
sub
nop
rcpps
lcall
mov
incl
add
add
mov
inc
test
add
add
inc
add
add
jbe
add
jnp
bound
ss
mov
push
push
pop
adc
adc
mov
pop
cwtl
or
mov
test
add
mov
xor
cltd
and
xor
mov
xchg
and
or
or
mov
lods
jmp
push
mov
mov
push
pop
add
call
ss
stc
int3
movaps
or
cmp
jg
movsl
jb
mov
pop
fidivrl
jp
insl
sub
sbb
mov
frstor
push
jp
lret
mov
imul
sub
lods
lret
movsl
jmp
fnstsw
loop
fwait
outsb
add
data16
pusha
loop
aad
imul
or
movl
cld
outsb
rcrl
dec
jnp
mov
out
cmpsb
lods
or
out
inc
cmp
jp
xor
mov
insb
xor
repz
test
adc
loop
jp
insb
js
or
cmp
mov
cmpsb
sbb
jno
add
mov
dec
push
hlt
adc
ret
cld
dec
dec
in
pop
and
movsl
dec
icebp
test
cmp
roll
movsl
stc
or
fdivr
repz
sbb
push
cmp
or
push
test
dec
pop
and
mov
xchg
and
sbb
es
push
and
scas
add
mov
add
push
gs
mov
mov
mov
out
sub
scas
add
dec
jne
mov
outsl
enter
sub
mov
jns
in
mov
addr16
xor
mov
outsb
sti
xor
aam
lcall
inc
dec
xchg
pushf
sbb
pop
xor
xor
xor
mov
test
xchg
jo
inc
adc
xor
add
fwait
push
out
imul
xchg
movsl
popf
mov
sti
jbe
in
rcrb
adc
sbb
mov
pop
dec
shrl
jecxz
add
mov
sub
fdivrs
cmp
shrl
jno
sbb
cmp
je
mov
mov
mov
mov
mov
mov
mov
inc
mov
jmp
movl
push
jmp
mov
mov
ret
push
jmp
or
addl
leave
pop
pop
cwtl
cmp
jl
mov
adc
adc
insb
jecxz
xchg
in
push
movsl
or
lret
repnz
pop
adc
sub
pushf
daa
cltd
jb
and
xchg
push
nop
arpl
test
add
sbb
jno
js
idivl
mov
std
loop
or
movsl
icebp
or
in
mov
sub
lret
xor
mov
xchg
dec
test
pop
sti
out
arpl
inc
cwtl
ljmp
in
addr16
sbb
scas
scas
adc
mov
jg
pop
push
xor
xor
inc
cmp
scas
lahf
test
push
fisubrs
loop
mov
test
and
jbe
adc
sbb
divl
test
sub
hlt
ljmpw
add
lret
in
js
loope
incl
inc
pop
je
mov
push
and
lcall
push
cmp
cli
pop
lods
lret
push
mov
insb
iret
sbb
pshufw
pop
test
icebp
ret
fisubrs
xchg
dec
dec
out
aad
cmc
rol
stc
adc
aas
xchg
out
add
or
rorl
pop
jmp
imul
pop
addr16
sbb
push
loope
ja
inc
pop
std
add
repz
mov
sub
and
loope
lock
and
cwtl
js
jg
push
pushf
jno
mov
and
adc
cmpsb
push
inc
cmp
mov
pop
mov
loopne
mov
xchg
adc
jnp
popa
pop
sub
sub
sti
sbb
out
ficompl
jno
jecxz
xorb
xchg
loopne
clc
adc
jle
rol
std
push
data16
mov
push
inc
jle
adc
in
mov
pop
mov
cltd
daa
mov
mov
mov
fsubrl
or
data16
int3
mov
fnstsw
adc
push
cli
vmaskmovdqu
fincstp
or
and
sub
aam
xor
notl
cmp
repnz
bswap
cmpsl
dec
jnp
ret
add
daa
jmp
adc
sub
test
rorl
xor
stos
ficoms
sbb
jecxz
leave
xchg
into
and
scas
inc
dec
sbb
cmp
aad
sbb
into
lock
rcrl
add
in
loope
jg
mov
add
test
imul
mov
add
pusha
loopne
aad
sti
cwtl
dec
push
mov
arpl
sub
mov
cmp
fidivrs
xchg
loope
mov
mov
mov
sbb
std
pop
mov
inc
icebp
inc
aaa
aaa
jmp
lds
mov
xchg
push
mov
fsts
add
testb
ror
or
fstpl
cli
pop
push
pop
aad
xchg
repnz
pop
lds
jbe
pop
inc
adcl
pop
jle
fnstenv
pushf
sarl
push
inc
xor
mov
scas
jbe
push
pushf
popa
jne
out
jle
cli
shr
push
aam
lods
push
or
xchg
jns
incb
cld
pushf
and
pushf
cs
test
push
mov
or
movl
jne
mov
xor
mov
sbb
xor
movzbl
adc
div
xor
xor
sub
mov
mov
movzwl
sub
mov
xorl
div
mov
mov
movl
jmp
sbb
mov
xor
mov
mov
add
mov
adcl
shr
movl
rcr
shr
movl
rcr
or
jne
div
mov
mull
mov
mov
mul
add
jb
cmp
ja
jb
cmp
jbe
dec
xor
mov
pop
pop
ret
adcl
subl
movl
cmpl
je
add
jmp
fwait
mov
xchg
sbb
push
jle
push
adc
adc
xchg
out
imul
les
jge
sbb
jnp
xchg
loopne
sub
jnp
mov
enter
inc
pop
jmp
jae
dec
sub
icebp
in
pop
cmpsl
sahf
pop
xor
add
jae
pop
dec
out
ja
out
xor
jge
fstl
mov
rcl
and
jae
xor
int3
xchg
outsl
aam
mov
sub
mov
loop
cmp
sbb
pop
outsb
xor
movsb
mov
mov
push
dec
int3
push
sbb
cmp
add
inc
jp
je
sub
jbe
jno
mov
rorb
xlat
test
mov
movsb
xchg
insl
jno
lods
dec
xor
sub
pop
mov
and
xor
test
fs
movsb
clc
insb
int3
or
cmp
adc
cld
icebp
inc
mov
mov
outsl
xor
fsubr
jmp
nop
mov
std
test
or
outsl
aas
insl
jo
out
fwait
sub
adc
adc
lods
mov
sbb
sbb
loop
sbb
subl
imul
push
mov
jno
gs
inc
jb
aaa
test
inc
cltd
addr16
xchg
syscall
fwait
add
xchg
push
xor
scas
and
and
cs
cmpsb
gs
mov
jbe
shl
jecxz
push
pusha
xchg
out
fldenv
pop
push
adc
mov
and
aad
pop
jns
pop
in
dec
mov
fsubs
lock
movsl
mov
xchg
lcall
sub
add
inc
fisubs
mov
pop
mov
ffreep
flds
pop
fsubs
jl
fstps
sub
pop
js
leave
cmp
iret
sbb
mov
rcr
mov
nop
and
inc
dec
ja
xchg
subl
adcl
out
xchg
xchg
insl
sub
cmp
daa
or
jbe
pusha
in
fidivrl
je
push
dec
push
cmp
popa
inc
sub
or
sbb
aas
paddusb
inc
mov
pop
inc
cs
push
in
shll
addr16
enter
inc
mov
mov
js
add
popf
jmp
or
sar
dec
push
in
or
sbb
daa
pushf
gs
dec
xlat
std
jg
scas
pop
jo
mull
jbe
into
add
mov
dec
fisttpl
scas
pop
xchg
mov
add
clc
jecxz
int
pushf
jns
lds
sar
fsubrl
test
xchg
and
rcrl
lods
cs
aas
popf
out
jne
out
test
cld
lods
mov
les
aad
imul
lock
jge
sbb
loopne
dec
or
sahf
mov
inc
addr16
scas
rcrb
mov
sbb
mov
jge
xchg
out
xchg
daa
dec
imul
das
add
or
jecxz
clc
add
xor
and
repnz
adc
hlt
mov
xor
fcmovne
sub
arpl
and
sbb
jne
push
mov
and
cmp
sarl
sbb
das
mov
push
je,pn
dec
fisttps
ficomps
or
jp
imul
mov
not
mov
pop
movl
pop
pop
leave
ret
movl
cmp
jae
movl
cmp
jae
sbbl
shld
shl
ret
mov
orl
xor
adcl
and
shl
ret
xor
xor
ret
