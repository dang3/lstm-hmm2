push
mov
sub
and
mov
xor
mov
mov
sub
inc
push
mov
movl
mov
sbb
sbbl
mov
and
orl
orl
mov
or
mov
neg
mov
cmpl
mov
movl
mov
movl
jmp
mov
mov
jle
pushl
call
add
mov
or
or
or
sbb
add
cmpl
movzbl
mov
movzwl
jmp
movl
movl
jne
push
push
push
push
call
adcl
sbb
inc
adc
and
mov
addl
sub
mov
mov
sbb
mov
orl
orl
lea
xorl
mov
add
mov
and
mov
cmpl
not
movl
jmp
movl
movl
jle
push
call
andl
addl
add
sub
or
xor
xor
mov
sub
or
mov
add
mov
sbb
mov
mov
mov
shrd
cmpl
mov
mov
mov
mov
jmp
movl
movl
jge
pushl
push
pushl
push
call
addl
subl
movl
sub
dec
shr
mov
mov
xor
xor
subl
or
movzwl
or
mov
mov
movl
cmpl
movl
movl
movl
jmp
movl
mov
jbe
pushl
pushl
push
push
push
call
addl
adcl
movl
movl
cmpl
mov
movl
jmp
mov
jl
pushl
push
push
call
sbbl
xorl
notl
xorl
decl
cmpl
movl
movl
jmp
movzwl
jb
push
pushl
pushl
push
call
add
subl
andl
decl
andl
cmpl
movl
movl
jmp
movl
movl
jl
pushl
pushl
pushl
push
push
pushl
call
and
movl
subl
addl
orl
cmpl
movl
movl
movl
jmp
mov
jne
pushl
push
push
push
call
sbbl
xorl
adcl
addl
andl
sbbl
sbbl
sbb
jmp
push
lods
and
cmp
sub
pushf
jmp
jl
sbb
sbb
adc
sbb
xchg
loopne
mov
mov
cmp
cs
jo
adc
stc
pop
jno
sbb
mov
and
inc
mov
cld
clc
sub
dec
pop
push
and
fcompl
dec
inc
jp
clc
xchg
xorb
jle
sti
xchg
mov
arpl
jmp
adc
mov
sub
mov
push
mov
inc
add
inc
add
xor
repnz
mov
dec
insl
stos
lahf
lret
add
lock
sbb
into
pop
pop
cmp
push
inc
inc
and
mov
xlat
jl
pushf
movsl
movsb
or
xor
imul
push
rol
sahf
stos
mov
fs
fcoml
xor
rorb
out
in
movsb
dec
shlb
shrb
adc
dec
scas
add
popa
sahf
push
popa
in
sub
push
push
push
xchg
xor
dec
push
test
stc
andb
jo
pop
jnp
not
mov
lea
cmp
xor
insb
ljmp
aas
rcll
outsb
fcompl
mov
mov
xchg
imul
jne
test
lret
cmp
mov
pusha
sbb
xchg
mov
sub
fadds
or
scas
mov
xor
add
arpl
lea
jp
movaps
iret
out
adc
or
mov
mov
jne
lock
cwtl
dec
stos
mov
pop
jecxz
test
bound
sub
mov
adc
xchg
lds
outsb
ss
mov
movsl
sub
mov
outsl
lcall
test
add
out
add
mov
das
les
in
mov
xchg
lds
xor
jl
fbld
push
cmc
movsl
scas
adc
fwait
inc
in
mov
js
je
out
popl
flds
icebp
jae
mov
mov
test
or
sbb
test
cmpsb
jge
cmovo
mov
jae
or
outsl
jb
out
std
push
pop
test
out
mov
in
icebp
push
mov
push
jo
push
lods
rorl
sti
sbb
push
movsb
cs
mov
sub
pop
mulb
cmp
or
or
sub
jno
fstpl
jle
pop
repz
jle
mov
dec
xlat
push
inc
stc
repz
movl
and
inc
mov
xlat
and
xchg
xor
insb
cmpsb
out
push
out
push
pop
pushf
cmp
and
fnsave
mov
in
imul
mov
insl
clc
pop
or
adc
int3
popa
add
add
jecxz
xchg
mov
aad
mov
cmp
add
add
neg
movl
movl
movl
mov
add
movl
mov
add
movl
cmpl
movl
notl
jmp
movl
mov
jle
push
push
call
adcl
addl
subl
orl
mov
xor
movl
xor
movl
movzwl
adc
movl
adc
movl
cmpl
movl
mov
movl
jmp
mov
mov
je
push
pushl
pushl
pushl
call
sbbl
adcl
subl
andl
addl
movl
sub
movl
movl
addl
movl
movl
cmpl
mov
mov
mov
movl
jmp
mov
mov
ja
push
push
push
call
addl
subl
xorl
decl
and
or
mov
and
movl
movzwl
sbb
movl
or
movl
adcl
movl
movl
sub
movl
not
mov
shl
andl
mov
xorl
push
push
push
push
orl
call
cmpl
movzbl
movl
mov
movl
jmp
movl
jge
pushl
call
adc
orl
or
mov
mov
or
and
mov
mov
dec
xor
or
mov
mov
sub
cmpl
movzbl
mov
mov
jmp
movl
je
pushl
push
push
push
push
push
call
addl
sbb
or
or
not
mov
mov
sub
xor
sub
mov
lea
or
mov
mov
xorl
or
orl
and
mov
or
sbbl
xor
movl
cmp
jne
sub
mov
mov
orl
shrd
add
shr
mov
cmpl
mov
mov
jmp
notl
movl
jl
pushl
push
call
movzbl
sub
mov
mov
add
xor
add
mov
or
xor
or
adc
mov
dec
mov
adc
mov
addl
shl
xor
andl
xor
notl
or
mov
mov
cmp
movl
jne
mov
mov
xor
mov
xor
or
xor
xor
sub
or
mov
sbbl
mov
shrd
mov
xor
mov
andl
xor
shr
mov
xorl
xor
orl
or
shl
movl
sub
andl
mov
mov
mov
and
add
or
mov
sbb
mov
or
mov
shrd
shr
movzbl
sbb
mov
mov
mov
jmp
stc
dec
popa
test
mov
sbb
and
sbb
adc
sbb
mov
jo
jno
jnp
mov
inc
jb
lret
add
xchg
fnop
dec
stos
call
mov
popa
lds
xlat
je
sti
sti
shll
cmpsl
int
add
aad
icebp
sub
subl
shl
mov
jg
rcrb
cwtl
pusha
testb
aaa
in
xchg
lds
fsts
dec
int3
ja
outsb
mov
pushf
nop
cli
jne
cmpsb
mov
jb
mov
test
or
lods
jb
js
jbe
xchg
cmc
lods
mov
fs
sbb
nop
imul
int3
ja
mov
jge
and
ret
xchg
fcompl
movsb
adc
push
xchg
inc
js
sbb
lods
and
outsb
hlt
fisttpll
test
orl
push
and
push
dec
fcmovbe
hlt
sub
add
xor
cltd
into
xchg
xor
cli
push
pop
sbb
imul
add
mov
pop
fsts
inc
cld
leave
popf
jecxz
ret
mov
test
mov
int
cs
push
ljmp
sub
xor
mov
mov
sub
cmp
aam
insl
xchg
cmp
jne
add
cs
inc
xchg
rol
push
clc
lods
lahf
dec
add
ret
enter
data16
stos
push
imul
xor
sbb
or
sub
in
push
pop
out
inc
xlat
or
add
faddl
pop
xor
push
jns
xchg
jmp
daa
popa
nop
jne
fwait
push
mov
in
or
adc
mov
pop
dec
jmp
mov
dec
jns
shrb
xor
push
mov
repz
xorl
xchg
ds
out
loopne
cmpb
scas
repz
jae
or
test
loope
push
mov
jle
fs
push
ret
sub
mov
nop
cwtl
mov
or
mov
push
dec
jbe
inc
xchg
inc
int
xlat
mov
sub
cs
gs
mov
scas
aam
lea
js
xor
es
inc
in
sahf
or
mov
dec
sahf
adc
mov
imul
cs
das
sub
dec
jne
call
loopne
pop
dec
fidivrl
out
pop
xchg
test
jbe
adc
and
inc
mov
js
pop
or
aas
sti
xor
mov
call
jno
push
sbbb
mov
out
stc
mov
ljmp
cld
in
add
iret
aam
movsl
divl
je
dec
cmp
into
div
sub
mulb
xor
mov
aam
jnp
pop
pop
movsb
or
fsubrl
push
testb
test
dec
jp
dec
and
iret
sub
shl
xor
mov
adc
or
add
mov
sub
mov
sbbl
shrd
xorl
shr
mov
sub
mov
addl
mov
xor
adcl
xor
or
shl
jmp
pop
sahf
pop
add
cmp
inc
inc
mov
sub
sbb
and
sbb
mov
int3
pop
es
jl
mov
xchg
sub
mov
lds
mov
stc
sbb
cmp
leave
shll
mov
inc
and
xchg
cmp
mov
mov
loop
xor
rcll
ds
lahf
adcb
mov
loope
enter
aad
jmp
sahf
leave
add
or
adc
mov
or
cmpsb
data16
adc
shrl
stos
out
fcoms
or
subl
xchg
orb
push
mov
mov
sbb
mov
cli
out
lret
mov
dec
or
stc
sub
sbb
mov
and
xchg
mov
fldt
daa
lret
out
mov
xchg
sbb
jbe
push
ficompl
test
fldt
push
jb
int
ficoml
inc
xchg
pop
xorb
in
cmp
jne
ret
cmpb
in
mov
scas
loope
stc
cmp
jge
stc
push
enter
xorb
aad
mov
minps
bound
iret
xchg
popl
sbb
into
insb
xchg
fildl
push
mov
popfw
xlat
push
push
std
addl
ret
dec
pop
mov
mov
mov
lahf
inc
bswap
push
int3
jae
mov
lahf
push
dec
scas
stos
sbb
adc
jns
jp
into
xor
dec
in
movsl
les
jno
in
movsl
xor
popf
pop
push
mov
sub
stc
push
pop
and
mov
ret
mov
mov
out
popa
insb
add
mov
cmpsl
pop
sbb
mov
mov
test
jge
jp
aaa
test
pushf
jbe
cmpsl
popa
cmp
nop
mov
xor
imul
cld
cmpsl
lahf
mov
movsl
pop
lahf
jp
je
pop
lahf
fnsave
pop
das
test
push
les
jg
add
lds
lret
ja
gs
out
mov
inc
jg
xchg
pop
out
ss
jne
loope
push
ret
nop
pushf
aam
xor
push
ds
push
repnz
fidivrl
jl
fmull
mov
push
insb
jmp
lcall
test
pop
xor
addr16
inc
cmpl
out
xor
aad
popf
test
jle
cltd
loope
pop
fwait
mulb
push
pop
xchg
ret
shlb
xor
push
pop
mov
cmp
into
mov
pushf
data16
or
adc
in
andb
sbb
mov
sar
movsl
test
inc
dec
cs
add
repnz
gs
jb
mov
dec
jnp
shrl
repnz
xchg
adcl
add
out
inc
add
lods
rolb
subl
shr
cmpl
mov
movzwl
jmp
movl
jae
push
call
xor
not
movzbl
adc
xor
or
or
addl
adcl
mov
mov
mov
sbb
xor
sbbl
mov
xor
or
sbbl
shl
andl
imul
mov
orl
mov
shrd
mov
orl
mov
xor
shr
movzwl
sub
mov
mov
mov
adcl
xor
addl
or
shl
addl
sub
jmp
inc
ds
cmp
pop
mov
sbb
and
sbb
loope
fisubs
add
ret
dec
loopne
mov
ljmp
int
inc
mov
out
lret
xchg
pop
divb
fnstenv
xchg
push
push
arpl
push
hlt
push
or
mov
call
or
movl
add
xchg
and
dec
mov
out
inc
adc
hlt
push
push
cwtl
xchg
fidivl
sbb
mov
aam
jb
mov
cs
cmpsb
int3
lret
push
push
cld
mov
dec
inc
decl
mov
shrl
roll
aam
aaa
cltd
imul
jae
or
sbb
xchg
cmp
in
adc
arpl
cwtl
iret
leave
ret
and
mov
orb
ss
mov
ret
lea
cmp
adc
ror
lods
fwait
mov
aaa
rcrb
stc
pop
outsb
cmp
push
lods
adc
sub
clc
test
push
imul
jge
movsb
cmp
mov
mov
loop
das
cmc
idivb
cmp
cmp
inc
shll
mov
out
out
adc
sub
addr16
out
xchg
cmp
lahf
mov
jns
lahf
mov
fs
mov
inc
imul
push
ret
aam
repnz
hlt
xor
sub
clc
sbb
inc
dec
pop
loopne
shlb
push
or
xor
pop
shll
add
sbb
xchg
inc
iret
push
and
rorl
sbb
lret
sub
cmp
xchg
sbb
mov
mov
xchg
add
xchg
push
fld
inc
inc
sbb
xor
xchg
incl
mov
adc
stos
add
or
add
jns
lret
mov
jecxz
push
mov
mov
push
mov
insb
addr16
shll
xchg
addb
mov
decl
mov
pusha
mov
dec
adc
add
xchg
and
push
mov
sub
das
gs
pop
stos
jmp
or
adc
je
push
jnp
pop
movsl
lea
lods
ret
clc
xchg
ja
or
or
test
ret
inc
insl
sbb
lret
cmpsl
jp
scas
enter
lods
nop
cmp
shlb
jb
mov
cmp
inc
xchg
fistpl
mov
dec
sub
sub
shll
xchg
in
sub
cmp
push
dec
imull
push
sarb
jle
arpl
test
xor
pop
pop
cmpsl
mov
xchg
and
das
call
cmp
adc
cmp
cs
sub
xchg
sub
xchg
out
dec
jmp
dec
pop
push
in
jle
mov
divb
gs
js
mov
jecxz
add
inc
hlt
movl
cmp
movzbl
mov
jg
cmpl
mov
movl
mov
jmp
mov
movl
jae
push
push
pushl
push
push
pushl
call
and
and
sbb
negl
or
xor
xor
add
mov
inc
mov
subl
shrd
andl
mov
mov
xor
addl
shl
decl
xor
andl
or
shr
cmpl
notl
movl
jmp
movl
mov
jge
push
push
push
call
mov
mov
add
xor
xor
xor
not
and
adcl
mov
addl
mov
subl
mov
and
mov
shrd
jmp
dec
lods
adc
pop
movsl
cmp
stos
sub
jae
cmp
sbb
and
sbb
mov
mov
cmp
dec
add
jbe
aaa
mov
jmp
push
frstor
cld
imul
shl
jo
sub
sti
adc
mov
adc
add
fwait
jmp
out
ja
movsb
and
aam
xchg
data16
mov
mov
int
pop
cmpsl
cwtl
lahf
je
adc
andb
sbb
push
cmp
mov
loopne
jno
jmp
mov
nop
mov
xchg
cmp
xor
jg
sub
imul
jbe
cmp
insl
mov
pop
jb
repz
adc
pop
inc
push
inc
dec
pop
lcall
mov
dec
shll
cwtl
cmc
js
xchg
fwait
add
negb
std
inc
sbb
push
add
xchg
loop
xchg
add
repnz
sbb
mov
jb
and
xor
sahf
lock
pop
adc
pusha
sbb
jge
mov
add
insl
pop
pextrw
add
pusha
sub
ficompl
pop
push
mov
je
ret
xor
ss
adc
cmpsl
mov
lret
leave
xchg
clc
fildl
xlat
cmc
xchg
int3
sub
mov
andb
xor
sbb
mov
mov
cmpsb
sahf
sbb
pop
push
push
mov
mov
cmp
xor
mov
stc
pop
and
push
cmp
pop
out
inc
lods
adc
dec
cmp
fcoms
inc
lock
jmp
loop
pop
fsubl
adc
in
sbb
repz
mov
sub
push
push
dec
test
rolb
inc
push
pushf
pop
add
mov
aas
addb
jns
repnz
scas
leave
jecxz
sub
nop
xor
mov
mov
sub
iret
sbb
cmpsl
pop
pop
push
shll
cmp
xor
cltd
hlt
xchg
xchg
cmp
add
ja
cmp
addr16
lea
movsb
mov
mov
push
sub
and
jecxz
cmpsb
add
add
loopne
mov
jmp
call
pop
pop
inc
loope
adc
out
bound
gs
cmp
rcrb
cmp
and
mov
mov
sub
push
rorl
pop
xor
jmp
clc
lds
pushf
xlat
xchg
and
data16
dec
adc
out
xchg
add
dec
lcall
sbb
xchg
adc
ficompl
xor
in
xchg
pusha
add
mov
dec
cmp
pop
or
mov
push
adc
stos
fnstenv
pop
xlat
sub
ljmp
sub
add
sbb
add
add
ret
xor
sub
out
fnstsw
sbb
mov
and
sbb
pop
sti
loope
or
adc
sbb
and
xchg
sbb
std
dec
pop
jecxz
sub
mov
push
mov
mov
sbb
pop
sub
in
sti
mov
movsl
jns
add
pop
enter
mov
mov
xlat
in
shl
orb
or
icebp
jno
pop
lock
jbe
lds
dec
or
sti
mov
jnp
repnz
rep
lahf
add
das
adc
xor
repnz
mov
add
xchg
add
cmc
lods
in
ljmp
jge
xchg
and
mov
iret
pop
lods
xor
rcrl
add
cmpsl
jge
fs
gs
add
and
fbstp
sub
mov
jnp
inc
mov
popa
imul
lea
cmovae
das
stos
outsb
adc
pop
in
int
mov
inc
pop
orl
lods
mov
jmp
out
in
or
sbb
stos
test
ret
fsubrs
repz
das
adc
mov
gs
rcll
arpl
dec
dec
or
xchg
jmp
sbb
cmp
lods
and
mov
mov
popa
sahf
dec
test
or
jl
dec
sarb
xchg
into
ljmp
dec
xchg
adc
add
xchg
lret
mov
mov
icebp
and
outsb
pop
cmp
clc
insl
mov
sub
ret
je
push
mov
xor
sub
pop
dec
push
ret
ja
daa
sub
mov
in
lcall
ja
ss
xchg
ljmp
ret
jns
pop
pop
and
jb
xchg
clc
loopne
jl
sbb
cmpsb
leavew
adc
arpl
mov
lods
add
mov
out
fcmove
cmp
iret
mov
and
sarl
mov
lret
mov
add
pop
loop
mov
lock
or
fsubrl
jg
mov
push
push
sbbb
xchg
sub
inc
inc
dec
loop
push
push
fsubs
into
sub
test
test
aam
ljmp
lods
ficoml
sarl
jbe
push
lcall
inc
add
movsl
mov
mov
mov
imul
daa
ja
xchg
fwait
jl
push
mov
lds
mov
fildll
std
cltd
mov
xor
or
outsb
das
add
mov
bound
jno
sbb
xor
inc
or
xor
mov
lods
sub
adcl
push
inc
loope
repz
cmp
adcl
mov
xor
sbbl
xor
adcl
or
shl
adcl
imul
sub
jmp
cmpl
movl
mov
mov
jmp
movl
jge
push
pushl
call
movzwl
and
adc
or
sub
xor
mov
mov
sbb
mov
cmpl
movl
movl
jmp
mov
jge
push
call
add
inc
xor
add
mov
adc
xor
cmpl
movl
mov
mov
jmp
movl
jle
push
pushl
push
push
call
mov
xor
andl
sbb
subl
mov
mov
and
mov
shrd
mov
mov
subl
xor
subl
shl
subl
xor
or
adcl
shr
mov
cmpl
movl
mov
mov
jmp
movl
jle
push
pushl
pushl
pushl
push
pushl
call
or
adc
or
inc
subl
mov
and
sbb
sub
mov
cmpl
movl
mov
mov
jmp
mov
jbe
pushl
pushl
pushl
push
pushl
call
adc
or
mov
xor
or
sub
xor
xor
or
mov
subl
mov
sbbl
shrd
shr
cmpl
movl
mov
mov
jmp
movl
movl
jb
push
pushl
call
xor
addl
inc
xor
neg
notl
cmpl
mov
mov
jmp
mov
jge
pushl
push
call
mov
add
mov
not
subl
mov
mov
xor
adcl
mov
sub
mov
addl
mov
cmpl
mov
movl
mov
jmp
movl
movl
jl
push
push
call
orl
sub
sub
movl
or
jmp
subl
cmp
leave
jl
mov
jl
negb
sbb
adc
sbb
jg
ficoms
out
lea
out
or
jns
ss
mov
mov
iret
subb
loope
scas
ljmp
inc
jmp
es
les
inc
stos
push
test
dec
test
push
pop
xor
xor
inc
dec
out
aas
sub
or
jge
sarl
popf
data16
xor
push
nop
je
leave
scas
add
or
mov
xchg
push
outsb
int
mov
std
add
push
lock
jle
pushl
lret
test
stos
push
hlt
fstpl
adc
and
xor
mov
mov
ljmp
pop
push
es
aas
fwait
push
lods
test
aam
fcompl
pop
pop
cmpsb
xor
mov
fldl
cmp
lret
mov
and
xchg
scas
dec
mov
sbbb
mov
faddl
js
dec
jbe
js
inc
add
iret
xchg
inc
pop
clc
pop
mov
aad
mov
jnp
push
inc
ja
js
outsl
push
ljmp
sbb
das
mov
shll
push
sub
dec
cwtl
push
jnp
jp
mov
jo
lds
outsb
mov
sarl
enter
shll
ds
push
dec
xor
jnp
pusha
inc
sub
jbe
jb
jb
cmp
daa
mov
ret
dec
mov
insl
push
jb
ret
xchg
pop
push
and
out
cmp
mov
inc
out
decl
test
addr16
or
sti
outsb
push
jmp
adc
add
push
xor
lods
xchg
mov
lret
dec
dec
jne
fsubr
and
insb
loopw
cld
inc
add
repnz
add
mov
and
fstpt
lea
int3
out
sub
or
inc
and
enter
cmp
sub
pop
in
out
into
ss
adc
imul
mov
jge
nop
lds
orb
and
xchg
out
iret
ss
in
stos
psubq
sbb
imull
stc
xchg
scas
aas
sahf
mov
int
sub
mov
movsb
pop
imul
fwait
lods
ss
add
popa
or
imul
cmp
xor
std
gs
adc
punpcklwd
test
movsl
nop
scas
enter
mov
lock
or
outsl
and
cmpl
shrb
or
sub
lock
jb
loop
xchg
subl
sbb
shlb
loop
jmp
mov
xchg
dec
sbb
rolb
adc
xor
mov
mov
xor
adcl
xor
or
shl
add
add
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
mov
movl
mov
mov
movl
mov
movl
mov
movl
mov
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
lea
mov
mov
mov
shrd
shr
mov
mov
shl
mov
xor
xor
or
mov
mov
xor
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
lea
mov
mov
jmp
inc
mov
mov
and
lds
sbb
and
sbb
jbe
loopne
mov
mov
bswap
mov
jae
jae
sbb
mov
inc
adc
jmp
cltd
mov
in
jecxz,pt
andb
xchg
jnp
lods
dec
lods
lret
scas
jmp
andb
aam
mov
and
bound
repz
inc
xor
xlat
bound
push
push
aaa
data16
out
movsb
xchg
sbb
sub
lock
sarl
and
test
pop
sbb
shrb
inc
push
into
pushf
mov
push
outsl
ja
mov
pop
dec
in
mov
jmp
fs
and
xlat
pop
sbb
cmp
add
scas
pushf
push
jmp
xchg
aas
nop
dec
lcall
or
xchg
xchg
test
jb
les
fnstsw
test
inc
sbb
cmp
fisubrs
jle
xor
pop
cmp
fsts
es
js
sbb
cmp
mov
add
lcall
pushf
jle
push
dec
leave
sbb
and
or
pop
mov
and
cmp
js
mov
lret
pop
cmp
jo
mov
xchg
add
xchg
or
xchg
inc
popf
movsl
out
stc
inc
das
stos
push
jecxz
fistps
mov
les
incl
outsl
test
and
pop
lcall
clc
rcr
mov
jmp
or
call
clc
xchg
sub
mov
or
in
ljmp
xchg
sub
mov
sub
imul
scas
out
outsl
pop
aas
int3
mov
xor
icebp
bound
repnz
scas
jne
and
test
pop
cmp
jae
aas
sahf
cmp
and
cli
out
add
and
pop
push
adc
stos
push
insl
js
into
scas
pop
or
aas
sbb
sbb
in
jb
movsb
pushf
arpl
in
and
push
and
add
xchg
mov
lods
std
mov
dec
imul
pop
sahf
ja
out
mov
int
xor
push
xchg
pop
push
cs
mov
pushf
pushw
test
leave
xchg
lret
jp
mov
mov
pop
lret
add
std
sub
mov
mov
aaa
mov
int3
loop
sbb
sti
or
add
or
sub
adc
push
xchg
mov
cmpsb
cld
loop
jge
mov
iret
xor
mov
push
stos
cmp
sbb
add
shrb
fidivs
pop
jo
mov
jnp
int
cwtl
dec
xor
xchg
xchg
rcrb
cli
scas
mull
mov
sti
adc
scas
scas
cmp
mov
shrd
jmp
out
push
push
push
mov
fwait
dec
push
jmp
sbb
adc
sbb
int3
es
aaa
dec
pop
xlat
fdivrs
pop
pop
push
mov
jo
aas
loop
repz
lods
mov
xor
hlt
insl
es
sarb
inc
xor
xor
pop
xchg
jnp
or
add
inc
pusha
pop
sub
cmp
cmpl
mov
adc
xlat
nop
mov
add
mov
rolb
inc
jbe
add
cltd
lods
dec
mov
add
ret
add
add
gs
cmp
test
lret
in
inc
roll
jb
cmc
stc
adc
lea
scas
roll
mov
pop
mov
mov
cmp
sub
sub
mov
sub
lds
and
jmp
lods
test
dec
roll
push
in
or
lock
xchg
pop
sub
xor
repnz
mull
out
mov
add
icebp
icebp
inc
jnp
sbbl
out
shl
jge
dec
ret
daa
jo
icebp
mov
push
stc
addl
inc
arpl
loop
adcb
sbb
fcomps
sub
mov
lret
fisttpl
adcb
add
fisttpll
sbb
mov
jmp
mov
int3
and
das
call
jo
sahf
ja
sub
and
xchg
shll
sub
mov
add
jbe
fwait
cld
repz
imul
push
pop
pop
lret
pushf
mov
jns
or
xchg
push
dec
fstl
les
dec
adc
adc
cmp
in
mov
in
addl
add
mov
jnp
ret
popa
mov
mov
and
xchg
or
cmp
fistps
jecxz
lret
sub
nop
push
pop
adcl
dec
icebp
and
dec
or
pop
pop
adc
movsl
cltd
inc
pop
push
sub
mov
cmc
cmp
stc
imul
lods
jp
test
pop
xchg
adc
adc
inc
xor
jae
pushf
jg
setae
and
sbb
cmp
add
nop
dec
lahf
and
and
sub
add
dec
xchg
rclb
mov
xchg
outsb
out
aad
mov
lret
fsubr
fs
data16
cltd
inc
sbbl
jmp
cmpsb
lahf
repz
insl
popf
xchg
sarl
xchg
jge
cmpsb
pop
and
test
int
out
mov
cmp
xchg
and
test
fwait
jb
sbb
jns
jmp
mov
lret
push
jno
ljmp
xchg
inc
jb
lahf
sbb
jmp
mov
shl
mov
xor
xor
or
mov
mov
or
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
lea
mov
mov
mov
shrd
shr
mov
mov
xor
shl
mov
xor
jmp
loopne
cwtl
xchg
mov
pop
add
outsl
mov
push
push
stos
pusha
in
sbb
adc
sbb
pop
daa
stos
inc
sbb
js
jecxz
adc
popa
inc
inc
test
jl
orl
xlat
push
rcr
aam
jne
mov
leave
pusha
test
ss
jg
add
or
lea
mov
rolb
jmp
mov
cmp
rorb
das
ljmp
cmp
test
mov
sahf
popf
xchg
stos
add
aas
jne
add
jo
ret
cmpsl
push
xor
in
ret
jo
cmc
fdivrs
inc
imul
xchg
jl
in
cmp
mov
scas
lods
or
ljmp
adc
mov
cltd
sub
and
xchg
hlt
mov
push
push
cmpsb
jl
test
xor
popf
testb
inc
mov
or
orl
cmpsl
dec
mov
out
sbbb
aas
jle
lret
int3
sbb
mov
sti
pop
adc
mov
sbb
inc
mov
add
dec
mov
sub
or
pop
jmp
lods
or
mov
and
cld
mov
push
rcl
push
jae
jmp
or
cli
jnp
sub
dec
mov
out
sub
adc
adc
xchg
jno
lock
shlb
jl
mulb
xlat
lds
fimuls
inc
cs
or
push
fs
inc
cmp
daa
insl
or
add
imul
push
xor
shll
xor
or
dec
pop
jbe
cmp
jno
mov
adc
mov
mull
cmp
push
les
mov
or
and
int3
subb
addb
icebp
sub
or
ljmp
inc
insb
sbb
pop
fbstp
nop
xor
nop
adc
ret
mov
adc
jbe
cltd
mov
sub
fwait
out
jecxz
shl
jns
or
pop
cmp
sar
pop
and
xchg
stos
loope
ret
test
pusha
push
subl
repz
insb
mov
aad
dec
mov
mov
cwtl
rcrb
andb
icebp
mov
pop
and
jae
mov
mov
hlt
add
mov
gs
mov
xor
mov
add
andl
inc
inc
and
in
aas
add
pop
rclb
mov
mov
hlt
imul
mov
mov
imul
pushf
pushf
push
push
sbb
jne
arpl
int
mov
xchg
loop
mov
jl
in
scas
push
dec
decl
jg
out
add
imul
daa
pop
jmp
or
add
add
les
or
cmpsb
cltd
movsl
mov
and
sbb
and
in
frstor
cwtl
pushf
push
movsb
lret
cwtl
pop
xor
sti
fs
cltd
out
and
les
sbb
pop
dec
rol
mov
or
xchg
out
cli
in
loop
aas
push
je
sub
add
sub
icebp
div
xchg
or
jbe
pop
outsb
js
ret
sub
popa
ja
iret
sbb
ret
xor
push
das
cld
and
xchg
les
add
shr
lea
aad
and
out
loope
and
rclb
push
in
dec
out
fs
mov
push
negl
cltd
pop
or
sarb
mov
cmc
pop
pop
inc
fbld
cmp
cmpsl
sbb
sbb
lret
xchg
cmp
pop
xchg
xor
dec
cltd
add
push
jmp
shlb
cmp
xor
push
ret
mov
mov
xchg
pop
mov
dec
sub
orl
push
ja
mov
jae
jmp
out
push
mov
int3
fdivrp
leave
mov
jecxz
cmpsl
movsb
mov
mov
xlat
jl
shrb
jp
fimull
cmc
push
es
mov
cwtl
movsb
jmp
sbb
popa
adc
add
cmp
sbb
cmp
shrb
pusha
push
jmp
add
sbb
xchg
cmpsb
sbb
lret
push
mov
mov
adc
adc
cld
jno
adc
jge
rdmsr
aad
jecxz
fwait
mov
test
mull
jge
pop
sahf
push
cmpsl
add
pop
loope
ljmp
mov
xchg
std
push
mov
insl
mov
cmpsl
jno
push
add
fstl
ljmp
adc
cmp
inc
aas
in
mov
mov
jg
dec
repz
mov
lret
shll
and
push
jo
loope
mov
stc
das
repnz
mov
xchg
shlb
int
mov
mov
loopne
dec
sub
das
loope
mov
inc
pop
orb
std
inc
shlb
mov
xchg
ror
aam
leave
dec
fcmovbe
jl
add
sub
pop
dec
add
inc
mov
inc
pop
adc
pop
and
sub
xchg
divb
mov
mov
push
pop
mov
or
movsb
jne
dec
jb
pop
mov
cmpps
push
je
mov
and
stos
cmp
xchg
les
xor
loopne
mov
aad
or
lret
jecxz
sbb
cmp
pop
xor
dec
divl
adc
lret
cld
and
aaa
stc
add
add
mov
sbb
in
pushf
sub
mov
test
and
sub
fcoml
inc
mov
sub
or
movsb
shrd
shr
mov
mov
xor
xor
jmp
and
xor
ficomps
mov
jo
sbb
and
sbb
aas
fbstp
fcmovu
xor
dec
xor
mov
in
cwtl
dec
sub
xor
mov
and
push
dec
mov
pushf
push
lods
movl
xchg
dec
push
test
mov
mov
push
ret
xor
popa
shrb
pop
cli
icebp
xchg
sbb
xorl
jnp
pushl
jnp
hlt
ret
jg
call
cwtl
idivl
out
jmp
scas
sub
adc
sbb
fsts
iret
pop
ret
movsb
mov
push
inc
data16
pop
mov
xchg
rorb
jno
shrl
out
xchg
mov
lock
xor
mov
push
sub
out
imul
repz
rcr
in
mov
nop
sub
out
fisttpll
jns
xor
mov
cmp
sti
mov
jbe
bound
jb
add
xor
jno
lret
imul
movsb
and
outsl
pandn
inc
cwtl
pop
xor
ss
cmp
lret
andl
add
mov
sbb
je
repnz
out
loop
iret
in
out
int3
pop
dec
mov
rcll
bound
lods
add
pop
outsl
clc
pop
add
hlt
dec
int
or
or
mull
stos
lods
je
pop
xchg
sub
mov
mov
dec
xor
xor
loope
es
ljmp
inc
jno
jae
and
sub
pusha
push
push
lods
and
orb
mov
mov
jmp
inc
mov
xchg
lea
insl
push
or
sub
lds
lahf
cwtl
jecxz
sbb
cmp
sub
jnp
mov
test
mov
mov
ljmp
cld
fs
fildl
imul
xchg
lods
inc
mov
out
stos
adc
out
mov
adc
xchg
adc
nop
imul
out
push
mov
mov
paddsb
and
mov
das
and
decb
sarb
insb
mov
aaa
inc
push
mov
cld
mov
cmp
inc
and
shll
mov
sbb
out
fistl
mov
dec
xor
cli
test
daa
adc
push
fdivs
mov
idiv
rorb
int
scas
pop
xor
adc
xor
xchg
lret
mov
mov
pop
inc
cmp
mov
mov
inc
xor
enter
or
dec
fnstsw
aas
mov
push
stc
dec
mov
cmp
test
xorl
or
jns
sbb
les
leave
std
add
ret
add
mov
shl
mov
shrd
shr
mov
mov
xor
xor
or
mov
shl
mov
mov
mov
or
mov
mov
shrd
shl
shr
mov
mov
xor
mov
xor
or
mov
dec
not
and
xor
mov
mov
xor
or
mov
mov
shrd
jmp
fdiv
sub
mov
int3
clc
jae
js
sbb
and
sbb
cwtl
or
ret
loop
ss
lahf
xor
nop
popf
cwtl
js
adc
xchg
xor
outsl
jp
mov
jp
sbbl
adc
cmpsl
dec
jl
push
mov
dec
lahf
repnz
cmpsb
inc
cli
lods
mov
mov
sub
and
jb
and
xorl
iret
enter
sub
push
adc
xchg
add
jge
ret
xchg
imull
stc
inc
push
jp
out
or
lea
sbb
and
pop
scas
lret
lds
daa
sbb
not
mov
int
push
pop
jecxz
dec
mov
sub
xchg
movsl
cmpsb
sub
mulb
out
aaa
rcrb
in
stos
repz
aaa
mov
fisubs
out
fldt
in
jne
dec
out
inc
push
adcb
enter
jns
test
aaa
aam
pusha
sub
loopne
dec
ficomps
bound
jb
mov
cmp
pusha
cmpsl
gs
iret
inc
mov
push
pop
fs
and
mov
movsb
iret
pop
lock
cmp
xchg
mov
cmpb
xchg
jecxz
inc
dec
rol
aad
sub
xor
ja
jp
lock
jmp
mov
std
sbb
enter
loope
cli
in
sub
lahf
mov
push
faddl
xor
lret
mov
xor
jmp
or
push
movb
mov
mov
cmpsb
lock
jg
aas
int3
fcoml
loop
test
scas
mov
push
xchg
xor
push
and
jmp
sahf
sbb
fcompl
mov
xchg
or
cmp
test
fsubrl
movsl
test
pop
insb
ret
shrb
test
jg
les
mov
cmp
jle
je
jae
fstpl
ret
loop
gs
mov
loopne
rorl
cmp
xchg
xor
inc
xchg
insl
mov
stos
sbb
xor
mov
or
cli
lahf
clc
adc
push
inc
scas
dec
imul
cmp
cmp
sub
imul
lahf
mov
fbld
mov
mov
mov
aam
popa
addl
xchg
jbe
cmc
mov
dec
push
mov
sahf
pop
jg
push
pop
sub
sub
rcrl
fisubrl
loopne
std
sbb
inc
push
out
outsb
inc
ffree
cmc
or
fmull
mov
cmp
cmp
sub
inc
cmpsb
cs
aaa
xchg
mov
add
mov
cmp
stos
mov
cli
leave
loope
and
in
ror
xlat
add
jmp
mov
mov
xor
mov
xor
shl
mov
or
jmp
out
mov
stos
mov
fs
out
or
sbb
adc
sbb
jb
push
sbb
lods
aas
push
out
movsl
rcrb
rcll
adc
push
sti
jne
out
add
xor
push
int3
pusha
mov
sub
gs
jle
inc
loope
movsb
sbb
clc
addb
xchg
das
and
jge
cmpsl
push
sbb
push
outsb
jecxz
mov
inc
jmp
jle
pmuludq
das
add
sbb
xor
in
jle
fs
xchg
divl
sub
push
loope
cld
sub
and
pop
cltd
sub
xor
pop
js
cmc
sbb
and
or
or
sub
xor
pcmpgtd
ss
call
or
push
push
or
mov
and
dec
dec
gs
pop
ja
push
imul
ljmp
mov
cmp
jbe
clc
rclb
add
push
mov
lea
rcll
ljmp
fistpll
xchg
jne
or
dec
push
inc
test
mov
movsb
aaa
sti
jmp
lea
add
in
push
mov
fnsave
lret
test
or
add
and
push
sub
inc
or
fisubl
add
clc
int3
sbb
jno
xor
cmp
lock
lret
sub
push
jp
loopne
add
aad
xor
dec
lret
adc
adc
idivb
ret
daa
outsl
xor
dec
iret
cwtl
sub
jae
test
rcrl
mov
ja
lahf
addr16
out
stos
add
add
add
icebp
out
xchg
mov
jo
into
std
sub
cmp
jl
dec
or
out
pop
inc
add
gs
add
movsb
dec
fsts
add
sub
pop
lods
inc
inc
and
push
pop
sub
and
js
dec
inc
test
xchg
cmp
cwtl
mov
out
out
sub
or
xchg
stos
add
lds
inc
lds
movsl
xor
and
adc
jecxz
pop
mov
addr16
aam
push
cltd
aad
sbb
adc
int
add
xor
pop
add
dec
lret
mov
or
xor
sub
aas
adc
push
int
jnp
jmp
push
in
xor
add
hlt
add
scas
lea
dec
xlat
in
loope
dec
sbbl
dec
sub
outsl
dec
fcoml
sub
icebp
mov
fwait
cmp
xchg
popa
enter
inc
push
pop
mov
dec
popa
pusha
sub
mov
movsb
psrlq
inc
adc
int
mov
jne
mov
cmp
je
mov
sub
mov
mov
jmp
dec
lret
repz
cmp
fildl
mov
sbb
and
sbb
pop
in
add
inc
cld
dec
test
or
sub
add
jne
mov
test
popa
out
cs
mov
fimull
xor
push
sbb
pop
adc
jno
js
sub
sahf
xchg
scas
arpl
out
adc
leave
lds
rcl
dec
inc
int3
xor
or
xlat
js
out
adc
sub
cli
xor
out
stos
push
or
push
or
sbb
mov
and
lods
xchg
xor
addr16
ja
mov
roll
fwait
pop
xlat
mov
xchg
xor
mov
jmp
fwait
orb
mov
jnp
sbb
inc
mov
lods
mov
mov
rcr
inc
sti
mov
sub
out
aam
mov
lods
cli
int3
icebp
iret
or
insl
cmp
sahf
pop
arpl
loopne
push
sub
les
scas
mov
fdivs
adc
loope
lods
push
cmp
mov
xor
outsl
jb
sbb
test
mov
or
rorl
stos
pop
in
cwtl
inc
pushf
in
fstl
pop
inc
std
int3
mov
std
inc
cmpsb
je
dec
out
cmpsl
lock
dec
cltd
mov
cmp
push
xor
mov
iret
loopne
loopne
movsb
push
xlat
xor
cmp
adcl
xlat
test
inc
jp
loopne
inc
mov
push
dec
enter
pop
xor
dec
jecxz
das
aas
rep
or
inc
or
nop
add
rcll
lret
jmp
push
shlb
mov
fcmovnb
nop
pushf
sbb
jno
inc
xor
mov
sub
cmp
pushf
sbb
xchg
test
jle
lea
xchg
sbb
xchg
sbb
pop
jge
imul
aam
cltd
mov
mov
mov
add
hlt
loope
mov
xchg
cmp
jae
rcl
add
addr16
popa
xchg
movsb
hlt
and
cld
ficoms
xchg
inc
fnstenv
jo
in
xchg
mov
fidivs
cwtl
cmp
jns
mov
inc
push
out
adc
cmc
mov
nop
cmpsl
xor
ret
inc
insb
out
jb
mov
loop
sub
aas
pop
ret
out
sahf
jbe
je
jo
clc
ds
push
sbb
inc
mov
sbb
cwtl
fdiv
out
mov
imul
cmp
mov
add
mov
xchg
push
mov
or
pop
pop
jne
pop
push
popa
sub
mov
jge
or
or
push
lea
add
cmpsb
cld
outsb
loope
insl
add
push
and
mov
test
popa
mov
out
jle
sbbl
jecxz
popf
lock
popf
adc
xor
shrd
shr
mov
mov
mov
mov
xor
or
mov
mov
mov
xor
xor
mov
mov
mov
shrd
shl
xor
or
mov
mov
mov
shll
xorl
mov
mov
mov
xor
or
shr
or
cmp
jne
cmp
je
jmp
mov
mov
xor
xor
shrd
shr
mov
mov
mov
mov
xor
or
jmp
iret
xchg
ret
or
cmp
jo
fxtract
push
rcrl
and
sbb
jge
pop
mov
xchg
inc
add
mov
jno
jae
adc
inc
das
fs
popf
fnstenv
imul
outsl
scas
leave
les
push
stos
ficoml
xchg
sbb
mov
xor
cltd
cmpsl
xchg
xchg
outsb
out
pop
add
mov
sbb
hlt
mov
adc
jb
fiaddl
adc
pop
cmpsl
lods
and
testl
xchg
jle
lret
lods
pop
mov
inc
int
xor
sbb
and
sub
testb
insb
mov
out
pop
xor
add
and
test
mov
pop
xor
hlt
mov
lods
cmp
gs
add
fstps
xlat
lock
in
adc
pop
movsl
jb
leave
inc
addr16
xchg
push
add
outsb
stc
xchg
or
sub
sbb
xchg
inc
data16
aam
push
inc
aaa
jno
cmp
sbb
xchg
fwait
dec
lcall
xchg
out
jo
in
bound
bound
sarl
sbb
imul
sbb
mov
mov
test
cmc
ret
fistl
shll
push
dec
or
pop
sub
mov
push
mov
mov
sub
rcll
mov
adc
sub
clc
aad
dec
inc
sbb
shll
sbb
xor
mov
adc
cli
mov
mov
inc
nop
jo
popf
scas
out
lds
insl
movsb
sbb
dec
adc
cmp
je
dec
das
sbb
out
xor
cmp
in
icebp
xchg
int3
out
sub
push
mov
cmpsl
mov
cmp
cmovp
popa
roll
pop
xchg
outsb
loop
pop
pop
js
mov
pushl
lret
cli
inc
jo
das
scas
mov
jno
sub
test
sub
sub
cs
movsl
jmp
push
lds
pop
push
lcall
cs
addr16
and
dec
xchg
push
sub
sub
push
rclb
jbe
mov
mov
jnp
mov
push
mov
push
push
xchg
add
movsl
jo
xchg
add
inc
addl
rcll
xchg
jp
or
jbe
mov
aas
ljmp
notl
pop
cmp
xor
mov
xor
fisubrl
aam
xchg
jl
sbb
ret
out
inc
shrb
fwait
jns
adc
lea
mov
fcmovu
fst
notb
lret
enter
repz
lea
outsb
fisttps
cmp
sub
fwait
ljmp
inc
scas
out
data16
jb
ljmp
pop
loope
mov
aas
add
pop
xchg
movsb
push
shl
xor
or
mov
mov
xor
jmp
fstps
cmp
and
pop
xchg
rcrb
mov
and
sbb
cld
fildll
inc
jecxz
or
ljmp
pop
scas
ret
adc
scas
mov
push
push
fnstenv
and
fldt
lret
push
adc
push
in
sub
lahf
ds
or
dec
push
mov
in
push
movsb
inc
je
and
out
movsl
cmpb
shll
dec
xor
dec
push
lods
je
and
fistpl
mov
jecxz
aaa
movsl
rorl
push
arpl
lock
xlat
ret
mov
jmp
cmp
mov
add
dec
sbb
popa
pop
outsb
in
cld
cmp
arpl
or
add
inc
push
push
test
icebp
lods
std
jg
pop
fwait
push
movsb
cmp
mov
inc
nop/reserved
xor
push
or
and
stc
add
mov
cmp
cmpsl
inc
aad
clc
mov
imul
mov
pmaxub
test
scas
mov
sbb
test
xor
mov
adc
inc
mov
fs
xor
pop
mov
into
ss
xchg
ret
in
test
cmp
lods
aas
adc
pop
pusha
xor
dec
fisttpl
ds
cvttps2pi
jecxz
ds
sub
test
and
or
jae
cli
cmc
jne
nop
push
push
and
fimuls
dec
jb
imul
jno
mov
shrb
out
sub
mov
nop
xlat
out
dec
xchg
jecxz
sub
dec
pop
aam
push
popa
mov
dec
in
pusha
out
lahf
mov
fs
movsb
jae
lret
xor
inc
out
sbb
ret
mov
mov
mov
add
pop
add
ficompl
mov
or
mov
fstpt
mov
pop
or
mov
ja
divl
mov
adc
movsl
decb
out
movsb
xlat
pop
jo
push
mov
cmp
loope
jle
sub
pop
jbe
pop
filds
xchg
dec
es
loope
mov
pop
pop
adc
sub
sbb
add
dec
lea
jb
mov
sub
pushf
out
cs
and
push
sahf
xchg
fisttps
mov
fucomip
adc
push
in
movsb
sub
repz
out
je
pop
hlt
mov
jge
imul
sbb
stos
sbb
push
jmp
sbb
adc
adc
sbb
xchg
inc
shlb
ret
flds
push
push
mov
jbe
dec
icebp
sbb
fs
adc
jge
lods
xor
inc
adc
push
pushf
mov
mov
xor
mov
mov
shrd
shr
mov
mov
mov
shll
xorl
xor
mov
or
mov
mov
mov
or
mov
mov
cmp
jne
mov
cmp
je
mov
mov
mov
mov
lea
mov
mov
mov
mov
mov
shrd
mov
mov
xor
jmp
daa
into
dec
cli
sbb
sub
dec
fstpt
mov
sbb
adc
sbb
xor
push
add
mov
lret
insb
cmpsl
lods
shlb
imulb
xor
hlt
xchg
insl
jbe
xchg
mov
mov
int3
jno
jnp
inc
aas
cltd
xor
fisttpl
pop
push
mov
addr16
popa
jns
xchg
adc
out
mov
gs
mov
into
push
aam
sbbl
inc
mov
mov
dec
sub
pop
icebp
mov
inc
aad
stos
mov
mov
xchg
js
imull
xchg
fdivr
xchg
xchg
pusha
popf
mov
jnp
mov
add
push
clc
repnz
xor
mov
cli
cmc
js
cmpsb
icebp
jno
mov
pop
and
fwait
or
mov
iret
jae
imul
lods
cmp
or
mov
cld
inc
int3
aam
into
pop
or
sahf
scas
jno
aam
dec
in
push
pop
mov
mov
dec
insb
sti
mov
pop
out
jno
mov
xchg
pop
dec
dec
or
dec
mov
sbbb
in
add
mov
fwait
scas
mov
jp
pop
test
scas
lahf
sti
mov
pushf
push
push
fsts
fmuls
push
ret
lea
icebp
adc
in
or
and
pop
stc
sub
in
fistpll
jnp
sub
and
inc
popa
mov
popa
test
xlat
ljmp
mov
out
jmp
and
sub
pop
cltd
dec
push
mov
data16
aam
leave
xchg
push
cli
dec
push
roll
rcll
ja
repz
into
xchg
test
pop
jle
xor
aam
aad
add
int
stc
push
mov
mov
vxorpd
push
test
cmpsl
add
sbb
push
sbbl
xchg
add
xchg
mov
cli
test
mov
or
mov
popa
push
push
ds
dec
pop
out
sbb
sub
dec
cmp
lock
add
mov
sahf
push
jp
lods
les
or
jmp
mov
cmc
jne
dec
xor
popa
mov
sub
movsl
shrl
jae
cld
adc
loope
jl
lcall
rcrb
jae
jg
jp
sbb
pop
ljmp
sbb
pop
push
xchg
or
pop
xchg
mov
push
and
fists
push
xchg
aaa
jp
sahf
adc
inc
sub
cmp
test
xchg
dec
push
push
jb
repnz
xchg
sub
dec
mov
pop
xorb
das
lock
shl
rclb
or
movsb
adc
sub
or
add
sbb
add
inc
inc
lret
dec
lret
inc
dec
and
mov
test
sbb
and
sbb
adc
sub
push
inc
push
hlt
and
cmpsb
push
repz
lret
jne
jecxz
push
xchg
in
fincstp
or
repnz
dec
mov
sbb
jmp
dec
dec
lcall
and
shll
addr16
ds
xchg
jecxz
xchg
cs
lods
pop
test
aam
shll
sti
mov
inc
add
in
pop
dec
lret
insl
test
dec
mov
pop
sub
add
pop
test
das
nop
fmull
jl
and
mov
mov
in
pop
jp
xchg
movsb
lea
xchg
stos
popl
adc
fimuls
push
shrl
imul
mov
mov
push
and
daa
lcall
popf
rcrb
gs
les
sbb
loopne
je
jmp
out
mov
dec
cmp
lods
inc
and
divb
iret
jg
xchg
xchg
test
or
cmp
iret
push
movsl
outsb
jo
add
scas
and
mov
sbb
in
inc
jl
add
or
rdmsr
ds
mov
pop
test
fbstp
cld
repnz
or
fmul
jle
pop
repz
xchg
push
dec
cmpsl
lea
xor
sub
lea
adc
add
xchg
pop
cltd
mov
mov
or
xor
xchg
push
das
mov
lahf
outsl
dec
aas
xchg
jp
pop
xor
jae
loop
mov
out
daa
jns
lods
inc
mov
mov
daa
mov
cmp
mov
arpl
arpl
out
repz
and
sti
cmp
rorb
fcoms
and
adc
xchg
mov
outsl
pop
rcl
mov
out
and
inc
mov
loopne
ficomps
ja
fnstenv
shlb
pop
push
add
inc
push
jle
mov
mov
out
add
fbld
cmpsl
add
repnz
lcall
xchg
xor
loope
and
mov
jge
and
mov
pushf
shl
sbb
outsl
loop
xchg
inc
sbb
fdivr
negl
fstpt
aas
cmp
movl
xchg
icebp
lret
inc
scas
addr16
pushf
aas
mov
shl
into
stc
or
jnp
sub
mov
rcrb
push
pop
fs
into
mov
mov
adc
pop
xor
lods
xor
jmp
test
imul
mov
sbb
sbbl
dec
jo
or
ljmp
sti
repnz
inc
sub
sti
bound
jne
inc
movsb
xchg
aas
lds
cmp
dec
push
dec
jno
add
inc
in
pop
aad
cld
or
pop
mov
mov
xor
shl
or
mov
mov
mov
xor
shld
xor
mov
mov
shl
mov
mov
xor
mov
cmp
jne
mov
jmp
mov
int3
xchg
sbb
dec
fstpt
and
stos
mov
sbb
and
sbb
aas
push
sub
ret
push
or
push
scas
cld
adc
or
jp
imul
xor
xlat
inc
mov
pusha
dec
test
mov
call
xor
or
jg
xchg
xor
loopne
cmp
cmpsl
fmull
popa
leave
sbb
dec
sub
push
insb
in
lret
mov
mov
ret
jl
test
pop
out
mov
jno
clc
pop
cli
into
inc
push
push
pop
mov
xchg
sahf
or
cmp
xor
dec
neg
test
xor
mov
sub
pop
dec
xor
icebp
pusha
nop
inc
in
jmp
mov
gs
pop
add
push
cmc
outsw
fdivp
jge
inc
and
or
outsb
sbb
xlat
stc
mov
insl
and
ds
lods
ds
aam
hlt
adc
sub
pop
adc
pop
movsl
cmp
xor
mov
out
pop
cmpsl
mov
enter
push
xor
rorb
in
jnp
pushf
ret
push
in
rcrb
adc
jo
imul
sub
aad
in
int
xchg
inc
push
popa
fcomp
push
add
or
mov
ss
push
ret
inc
push
mov
adc
lahf
sub
test
pop
pusha
xor
fcmove
push
shll
ret
into
mov
shll
mov
icebp
sub
sbb
xchg
fistpll
clc
cmp
push
inc
pusha
and
mov
ficoms
shld
xchg
fdivrs
call
js
fldt
leave
fs
pop
adc
outsb
push
lea
and
push
mov
mov
push
clc
stos
cltd
aam
xor
fstl
imulb
ret
jns
mov
cmpsl
inc
mov
sub
sbb
loopne
in
push
jmp
mov
jecxz
mov
cwtl
mov
cmp
aam
sbb
subb
mov
movsl
jg
fimuls
jle
lods
add
mov
out
in
add
xor
addl
xor
push
inc
fdivrp
and
add
call
cmp
gs
nop
mov
and
in
lret
push
dec
cmp
insl
sub
pop
inc
xchg
push
stos
jbe
int
aas
or
imul
not
in
into
jl
mov
test
xchg
fidivrs
jmp
sub
jmp
leave
xor
popl
nop
mov
inc
fs
add
and
mov
addr16
sbb
setnp
addl
orl
scas
mov
cmp
daa
mov
add
pop
and
aam
mov
addr16
aas
fisubs
jo
fstpt
or
test
push
mov
mov
mov
xor
xor
mov
mov
shrd
shr
mov
mov
mov
mov
xor
or
mov
shl
xor
mov
mov
or
mov
push
pushl
push
push
call
mov
mov
shrd
shr
shr
xor
push
xor
mov
mov
mov
push
push
push
call
shld
mov
xor
or
mov
mov
shl
jmp
subl
pop
rclb
mov
sbb
adc
sbb
nop
and
js
sbb
mov
xchg
mov
les
mov
xor
data16
pusha
push
xchg
or
mov
xor
pop
aas
push
dec
push
iret
push
je
sbb
push
or
jno
adcl
sti
mov
shll
inc
xor
mov
repnz
add
into
pop
push
mov
cs
adc
sti
test
sub
xchg
pop
repnz
cmpsb
mov
add
fs
leave
lds
push
repz
fcmovb
or
insb
cmp
or
enter
and
repnz
movsl
negb
cwtl
pop
xchg
jle
mov
pop
add
pop
sub
xor
xor
adc
push
dec
sub
xchg
cmp
pushw
pop
xorl
xchg
inc
pusha
mov
scas
stos
mov
mov
mov
mov
pop
push
push
mov
push
mov
lds
icebp
lret
ljmp
es
aas
mov
sbb
pop
out
dec
fiadds
leave
mov
fldt
cmpb
and
repnz
adc
hlt
stc
push
xor
imul
sbb
in
mov
pop
xchg
and
in
nop
popa
insb
mov
add
lock
sub
jae
cmp
test
imul
or
jbe
dec
fwait
orb
outsl
cmp
jo
inc
cs
pop
jb
ss
sub
pop
test
dec
movsl
add
into
xchg
mov
lahf
pop
call
and
push
and
mov
mov
inc
mov
xchg
dec
adc
add
int3
loopne
sbb
dec
out
dec
insl
popf
jecxz
jecxz
push
sarl
mov
loop
stos
add
jmp
xchg
mov
xchg
push
ljmp
bound
lods
out
in
sar
xchg
mov
dec
push
mov
inc
rolb
jmp
add
cmp
mov
aam
subl
pop
dec
enter
shlb
mov
xchg
mov
or
imul
icebp
push
les
lds
dec
xchg
cwtl
repz
adc
out
sub
add
fdivrs
addl
sub
push
iret
push
jle
mov
bound
cs
jne
sbb
es
into
mov
add
mov
in
inc
xor
or
inc
sub
loope
jbe
hlt
sbb
mov
cmpb
push
cmp
stc
xor
in
imul
inc
test
dec
pop
or
xor
xor
xor
xor
mov
mov
jmp
mov
add
mov
mov
mov
mov
mov
mov
movzwl
cltd
shld
xor
mov
mov
shl
mov
mov
xor
mov
cmp
jmp
lock
or
dec
loopne
pop
ret
int
add
and
sbb
dec
push
sbb
in
mov
fwait
or
addr16
es
cmp
push
sub
xchg
push
jae
test
cld
call
push
je
outsl
dec
rolb
mov
int3
mov
sarl
mov
clc
shlb
test
ss
and
sub
or
mov
or
push
scas
dec
mov
mov
inc
aaa
lret
mov
sbb
mov
add
cmc
xchg
add
scas
ss
sub
inc
sbb
xor
cs
movsl
dec
mov
xchg
inc
inc
imul
inc
pop
xlat
jl
cli
mov
cmpsl
pop
mov
out
filds
sahf
xchg
roll
enter
mov
clc
in
stos
pop
push
lret
insb
andb
mov
push
mov
sarb
cmpsl
cli
aaa
sbb
xor
and
sub
stc
and
xor
pop
sbbl
pop
dec
sahf
fidivs
iret
loope
pop
adc
sar
sub
fcoml
and
and
pushf
add
jb
jne
shlb
add
dec
xchg
in
jge
push
rclb
jnp
adc
dec
aaa
call
mov
jb
stc
mov
sahf
in
out
scas
mov
lods
inc
sub
pop
in
adc
cmp
lea
gs
mov
cmp
mov
fisubl
lods
leave
int3
fs
push
push
lods
xchg
jg
pop
pop
mov
imul
bound
fs
sbb
aad
add
add
daa
jl
sbb
mov
sahf
insl
cmp
xchg
adcl
pop
sbb
sbb
std
push
add
lock
das
and
pop
fistpl
mov
ja
int3
ret
setbe
fdivrs
push
cmpsb
lods
mov
xchg
dec
lods
add
movsb
pop
pushf
jmp
inc
sbb
fwait
ja
sub
das
inc
pusha
rcrb
adcb
iret
je
js
in
push
dec
add
scas
xchg
and
test
and
fldt
in
mov
rclb
fcoml
push
xor
std
xor
xchg
add
push
xchg
outsb
movsb
add
shrl
iret
lret
cltd
jnp
push
mov
aaa
and
pop
mov
mov
xor
xchg
pop
or
or
push
xchg
cltd
leave
mov
iret
xchg
jmp
fdivs
lret
into
jmp
sub
inc
jnp
popf
leave
mov
std
adc
pop
insb
icebp
cmp
in
and
les
fsubp
and
jecxz
mov
push
sbb
test
add
or
sub
sbb
mov
add
jne
movl
mov
movl
mov
movl
mov
movl
mov
mov
mov
shrd
shr
mov
jmp
fdivr
fists
ss
shlb
mov
and
sbb
les
mov
lret
and
mov
sub
in
scas
inc
inc
adc
push
lret
test
je
sti
out
lds
or
sub
rorb
int
adc
adc
cmpsl
push
pop
aam
mov
clc
test
dec
dec
hlt
test
les
push
mov
pop
decb
add
arpl
cli
stos
push
or
repnz
or
mov
push
sub
repnz
inc
repz
add
sbb
rorb
cmc
outsl
jmp
in
jns
js
add
daa
cmp
fistpll
cmp
mov
outsl
mov
ja
push
imul
xchg
and
add
pop
mov
aas
jmp
jmp
push
jge
mov
lds
add
dec
movsb
xor
and
in
xchg
xor
xchg
mov
stc
ja
inc
jge
jl
xchg
sbb
aaa
mov
insb
sahf
cmpsl
mov
sbb
stos
cmp
xchg
sbb
mov
popa
outsb
rcll
cmp
shll
pop
ret
inc
or
lods
shrb
sbb
fnsave
in
mov
lahf
push
adc
insl
sub
lock
rorl
aad
push
dec
cmp
cmp
arpl
sarb
insb
mov
shll
in
out
or
xchg
rolb
jbe
addr16
int
arpl
insb
outsl
mov
shr
sbb
mov
lea
ljmp
jne
out
popf
ss
sbbl
jb
lcall
aad
inc
gs
sbb
dec
int3
inc
push
jbe
int
sbb
push
xorb
popf
sub
stos
scas
adc
jbe
imulb
mov
shll
pop
inc
cmp
push
aam
das
call
jl
xor
ds
repz
inc
scas
sbb
loop
mov
ja
mov
sbb
jecxz
cltd
mov
add
dec
xchg
jo
sbb
ss
roll
out
push
stos
shl
imul
mov
push
push
jecxz
adc
icebp
cmp
test
xorl
lods
sub
xor
mov
shll
iret
push
sbb
mov
dec
sub
mov
outsl
adc
lods
sti
push
test
and
xor
loop
mov
aam
das
xor
xlat
iret
dec
mov
mov
dec
fadd
mov
jae
mul
nop
sbb
dec
hlt
add
xor
sbb
repz
fimull
cmpsb
push
inc
push
xchg
or
out
mov
mov
aad
test
les
jno
mov
arpl
dec
mov
mov
xor
shl
jmp
cmp
sbb
push
push
out
push
hlt
int
rclb
sbb
outsb
fdivl
ljmp
and
addr16
divl
js
mov
lods
fwait
sbb
shrl
sub
in
popl
inc
fcoms
shlb
add
pop
lods
inc
cmpl
icebp
std
roll
adc
mov
cmpsb
lahf
sub
std
insb
and
imul
mov
das
lcall
shlb
imul
mov
pop
dec
stos
int3
push
imul
pop
movsl
adc
mov
jecxz
push
lock
lahf
xor
xchg
xor
or
js
mov
stos
sbb
and
cmp
out
push
mov
sti
jg
jnp
mov
add
and
lds
out
inc
mov
ja
lods
ficoml
cwtl
ficoms
xchg
mov
out
das
and
push
mov
adc
loope
cmpb
inc
stos
ret
adc
inc
lret
inc
les
sbb
test
mulb
cmp
sbb
xchg
call
outsl
leave
and
imul
mov
loopne
jecxz
loopne
push
shl
cmp
shrb
fnstenv
packssdw
mov
fidivl
mov
or
mov
pop
dec
imull
bound
nop
xchg
jns
fistl
adc
mov
rcrb
jb
scas
cmc
test
jbe
mov
test
fmul
dec
clc
or
cli
lcall
push
in
aam
cmp
ret
out
pop
xchg
repnz
jnp
fmul
hlt
xor
mov
in
call
cmp
pop
inc
testl
add
sub
mov
fisttpll
sbb
out
mov
or
xlat
jle
cmp
stos
loopne
sub
dec
sbb
mov
repz
iret
adc
jle
adc
inc
add
xchg
stc
or
test
or
pop
jl
adc
sbb
insl
adc
push
xor
jno
in
outsl
or
sub
test
icebp
xchg
sbb
dec
stc
push
aaa
mov
loope
das
scas
sub
xchg
movl
adc
out
or
xor
movsb
int
push
mov
xchg
add
loope
sti
and
lret
mov
jbe
add
int
jmp
or
das
mov
xchg
inc
push
shrb
mov
and
inc
xchg
fdivr
sarb
popa
mov
cld
lret
ror
pop
popf
mov
push
jge
and
push
ds
pusha
fidivrl
psllw
pop
xor
or
add
mov
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
mov
mov
xor
mov
jmp
push
sub
fldt
mov
mov
fmuls
sbb
sub
push
loope
ficoms
fnstcw
hlt
hlt
xor
xchg
add
pop
dec
or
and
sbb
cmp
cwtl
jne
jecxz
lods
jle
adc
lock
mov
cwtl
jbe
sbb
or
ljmp
mull
and
je
adc
hlt
mov
jnp
rorb
testb
pop
lret
dec
or
out
sarb
sbb
shlb
mov
cwtl
int
pop
pop
push
lods
cmc
mov
mov
shrb
cmp
dec
jmp
adcb
test
jne
ljmp
and
jmp
xor
cli
push
fdivp
dec
cmp
inc
stos
push
shl
shlb
xchg
inc
sbb
decl
and
and
or
mov
int3
scas
mov
or
push
xchg
inc
push
int3
outsl
xchg
mov
and
xor
sbb
add
sub
mov
mov
add
in
std
dec
fwait
pop
clc
enter
stos
pop
sahf
xchg
ljmp
jb
mov
packuswb
rcll
adc
es
xchg
adc
inc
fdivrl
mov
nop
icebp
mov
cwtl
daa
push
jmp
or
lahf
inc
fbstp
pusha
adc
lds
mov
lods
jmp
int
or
add
fsub
add
xor
ljmp
ds
dec
inc
mov
adc
mov
pop
or
daa
or
data16
jne
or
popf
xchg
pop
mov
pop
ljmp
mov
mov
add
inc
and
in
push
lea
xchg
add
clc
push
adc
ret
jns
push
int
xchg
push
mov
icebp
pop
xor
jae
lcall
push
outsb
test
jge
out
lock
andl
iret
icebp
jae
movsb
mov
insl
js
mov
xor
sbb
mov
stos
adc
js
cmp
mov
ds
aas
fcompl
jmp
test
repz
orl
mov
test
lds
das
dec
dec
cltd
lods
bound
out
push
xchg
subl
pop
jecxz
pop
push
scas
adc
outsb
aaa
adc
jne
xor
es
pop
or
pop
dec
inc
or
sbb
ret
push
xorl
or
and
aam
in
movsb
xor
aas
fsts
fcoms
push
xchg
add
mov
sub
xchg
pop
insb
pop
push
in
fwait
cld
cwtl
xchg
aad
das
das
dec
mov
push
lcall
out
mov
push
lcall
adc
out
out
stos
and
jae
add
mov
cmp
test
movsb
shrd
shr
mov
mov
xor
shl
xor
or
add
mov
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
mov
mov
jmp
imul
fs
leave
leave
jl
fwait
inc
push
test
sbb
adc
sbb
pop
mov
scas
inc
adc
cli
cmp
jp
xor
ret
fiadds
scas
or
adc
sbb
push
sub
shlb
push
mov
ret
scas
xchg
pop
rcl
cmp
fucom
int
cmp
mov
adc
fs
js
mov
cmp
jae
repnz
scas
loop
jae
lea
dec
adc
fs
cltd
xchg
lds
sub
or
and
les
mov
rolb
mov
sub
mov
int3
out
add
scas
xlat
mov
nop
mov
jmp
xchg
push
imul
scas
mov
jb
add
push
cmp
popl
addl
or
push
es
mov
xchg
mov
sub
inc
dec
mov
jne
mov
insl
sub
repz
sub
sbb
mov
das
mov
std
in
or
dec
cli
rcr
mov
xor
cwtl
ffreep
xchg
sti
fstpl
push
out
add
lock
jne
or
xchg
inc
xchg
xorl
arpl
mov
out
mov
addr16
dec
pop
cmpsl
pop
or
cld
insl
cli
adcl
shlb
and
imul
pop
push
rolb
add
dec
pop
scas
insb
int
fcmovb
les
out
iret
pop
enter
sub
pusha
fldt
cmp
movsb
mov
add
sub
xchg
adc
flds
jnp
push
mov
or
sub
bound
frstor
push
fiaddl
and
dec
push
daa
fwait
pusha
sub
inc
cmp
pop
pop
imul
rcrb
push
sbb
mov
andb
push
jmp
adc
out
sub
ficomps
push
fdivrs
mov
iret
xchg
pop
push
push
xor
fstl
fsubrp
pop
mov
jg
in
les
ss
pop
adc
dec
fcompl
fs
pop
cmpsb
fmull
xorb
cmp
pop
inc
mull
lahf
jp
mov
mov
mov
pop
cmp
cli
mov
and
sbb
mov
mov
push
sub
sub
jle
dec
scas
pop
leave
sbb
bound
fldt
jle
mov
lock
push
pop
push
sub
xchg
or
cld
cmp
mov
test
loope
cmpsl
shll
loope
out
ret
iret
ja
stc
jl
lea
mov
mov
pusha
sub
pop
pop
rorl
cwtl
stos
gs
mov
mov
scas
lahf
inc
sub
dec
lret
jg
mov
sbb
add
or
dec
cmpl
mov
shrd
shr
mov
mov
xor
xor
or
add
shl
mov
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
mov
mov
add
mov
mov
shrd
shr
mov
mov
xor
xor
or
add
shl
mov
mov
shrd
xor
shr
mov
mov
xor
or
mov
or
shl
jmp
dec
sbb
jmp
dec
mov
jl
jg
sbb
adc
sbb
js
ficoms
scas
adc
mov
mov
xor
scas
outsb
inc
icebp
ficoms
push
movsl
scas
jnp
daa
orl
adc
or
subb
lret
mov
pop
xor
mov
pop
lea
sub
in
xchg
mov
jb
cwtl
mov
lret
xchg
out
lods
cs
push
aas
sub
pushf
ss
fsts
jecxz
push
sbb
outsl
mov
iret
inc
xchg
lahf
lock
aad
outsl
push
push
dec
mov
mov
jbe
repnz
rcr
popa
mov
cmpl
rorb
scas
jmp
into
push
mov
cmp
fcomp
ror
shrl
aam
loop
mov
xor
lods
aad
and
mov
in
movsb
insl
push
cmp
mov
rep
add
call
add
rcrb
mov
or
and
xor
push
push
xor
cmpsl
xor
lods
out
inc
cltd
stc
insl
icebp
mov
rcr
jle
lea
clc
lea
ljmp
ss
lret
push
sbb
push
shll
fs
leave
push
lret
xor
sub
stos
int3
lock
sub
dec
bound
lods
inc
ret
ror
fistl
or
and
mov
aad
imul
inc
xchg
aaa
scas
add
int
inc
mov
push
lea
mov
je
cs
adc
cmp
add
mov
xchg
scas
cmp
lea
outsl
jmp
addr16
sbb
sbb
aas
dec
jo
fwait
out
adc
je
jns
xor
lock
in
sti
and
loope
mov
jg
jecxz
into
xchg
mov
into
inc
lret
inc
je
jns
cmp
and
and
loop
int
or
je
sub
sbb
fst
adc
addr16
and
push
scas
xchg
gs
mov
aad
sbb
aam
add
scas
loop
jae
sbb
cmc
push
repnz
insb
fistps
movsl
push
or
cwtl
adc
cs
das
sub
cli
aaa
inc
gs
or
add
sbb
mov
sbb
pop
mov
ffree
notb
in
or
cmp
sub
mov
and
push
in
jge
ret
int3
movq
xchg
in
lret
dec
push
push
fiadds
mov
mov
push
imul
clc
lahf
mov
xor
jnp
clc
mov
ret
or
xor
popa
test
push
inc
sahf
mov
xor
adc
dec
xchg
ret
pop
lret
in
mov
in
out
imul
adc
mov
xor
xor
shrd
xor
or
mov
mov
mov
xor
xor
mov
mov
mov
shrd
shr
shl
jmp
mov
mov
sub
jle
and
jle
jns
sbb
adc
sbb
xor
stc
xchg
pop
ds
pop
mov
aad
popa
xlat
ret
clc
pushf
sbb
adc
lret
aas
jnp
out
fsub
push
xchg
fmul
mov
dec
xor
inc
movsl
mov
dec
fldenv
push
mov
mov
roll
jns
mov
add
clc
testl
ds
aas
gs
xchg
popf
or
nop
shlb
lock
mov
adc
jmp
in
or
push
mov
cmp
sub
jns
xchg
stos
xchg
dec
pop
and
inc
xor
mov
clc
inc
fmuls
push
mov
lret
push
outsb
orl
fbstp
push
jnp
jnp
xlat
push
add
std
xorl
mov
incb
pop
into
adc
xorl
fmull
jnp
or
push
insl
movsb
in
lcall
push
iret
js
xor
push
andb
fwait
jge
inc
adc
mov
cwtl
and
mov
out
std
pop
fld1
and
dec
cmpl
pop
std
pop
pop
or
add
mov
push
cs
cs
leave
pop
pop
aad
jae
mov
sub
lods
cmpsb
dec
xchg
in
dec
sarl
lds
inc
pop
mov
jge
testl
add
sub
jle
dec
iret
fldt
sti
outsb
cmp
push
icebp
mov
bound
xchg
test
mov
inc
imul
ds
mov
enter
es
jg,pn
ret
scas
mov
pop
outsl
lret
mov
loop
xchg
jg
fs
dec
lahf
push
xchg
jl
inc
push
inc
aas
push
jle
push
cmp
fistps
mov
add
sbb
adc
daa
lods
insb
inc
sub
cmpsl
push
mov
pop
add
imul
xor
out
and
mov
pop
dec
cmpb
stos
nop
test
mov
jmp
dec
sbb
mov
hlt
xor
jns
push
push
jno
test
imul
jle
popf
fwait
push
fisubrl
mov
sbb
jg
enter
xchg
aaa
je
xchg
xchg
cmp
ds
mov
mov
test
dec
aam
push
cmp
push
cwtl
or
popa
fnstsw
gs
ljmp
push
sub
mov
jmp
push
call
stc
bound
divb
mov
pop
rcll
jo
loopne
int
movsb
arpl
aad
xchg
mov
dec
cs
mov
cmp
outsb
adc
fcomps
inc
mov
fs
add
lahf
xchg
mov
std
xchg
mov
int
mov
or
stc
or
pop
ljmp
imul
xchg
mov
mov
mov
xor
or
mov
shll
xor
mov
mov
mov
xor
or
shr
or
cmp
jne
cmp
jne
jmp
mov
jmp
loope
fidivs
insb
pop
pop
dec
xlat
mov
stc
jae
sbb
adc
sbb
sbb
jg
and
jp
rcrl
imul
jb
and
pop
adc
les
or
push
fmulp
pop
popf
ds
aam
mov
ret
sbb
shll
das
rclb
outsl
aam
pop
outsb
test
mov
sub
mov
push
mov
jecxz
loop
or
rorl
les
pop
daa
loop
push
or
std
mov
inc
push
mov
cmc
xlat
addl
push
xchg
adc
call
jne
mov
enter
fimuls
fisubs
ja
push
gs
push
jle
ret
cltd
enter
es
imul
pop
jg
xchg
push
icebp
cld
fwait
xchg
mov
aas
push
notb
cwtl
mov
in
lods
sbb
push
pop
andl
data16
mov
cltd
or
loope
xor
jae
push
inc
fnstsw
fiaddl
fnstenv
sub
andl
mov
push
add
xor
lods
xor
insb
sbb
adcb
js
scas
aaa
mov
test
imul
pop
sub
push
xchg
mov
inc
pop
or
push
dec
sub
std
sub
sti
shrl
lock
adc
fisubl
adc
lahf
lahf
sub
nopl
icebp
lods
mov
test
jmp
addr16
push
shlb
call
xchg
push
mov
lret
hlt
mov
xor
mov
test
cld
iret
pop
scas
imul
adc
imul
push
xchg
pop
mov
push
jnp
in
sub
mov
fsub
push
je
mov
stos
das
mov
fldl
pushf
push
lods
jo
hlt
add
push
test
jmp
inc
add
das
jns
sub
push
jo
mov
and
lods
arpl
push
mov
xchg
js
sbb
mov
push
or
adc
inc
fs
je
imul
dec
or
fisubs
repz
push
mov
inc
sti
ret
lret
push
push
lea
sbb
loop
pop
mov
sar
mov
std
movsb
mov
nop
or
out
das
adc
decb
pop
cld
push
out
dec
sub
inc
push
hlt
cwtl
adc
pop
sub
mov
push
push
push
je
cmp
cmpsl
fiaddl
clc
pushf
mov
sub
xchg
xor
mov
xor
test
sbb
xchg
cmpsb
push
aam
rcrl
dec
clc
mov
dec
imul
xchg
sub
inc
dec
lret
shrl
pop
aad
sub
jnp
movsl
pop
sub
jne
je
mov
ljmp
cmp
faddp
scas
fldcw
jge
push
add
push
mov
xor
xor
mov
mov
shrd
shr
mov
mov
mov
mov
xor
or
mov
shl
xor
mov
mov
or
mov
push
pushl
push
push
call
mov
mov
jmp
mov
pop
lcall
adc
add
sbb
adc
sbb
push
jb
rcr
ljmp
mov
jae
sbbl
add
dec
cmp
xor
sti
or
daa
mov
subb
mov
pop
or
adc
pop
mov
jecxz
add
adc
scas
movsb
sbb
out
outsl
cmp
test
fwait
push
inc
cmp
lcall
cli
lahf
aas
sbb
iret
sbb
push
cmpsb
cwtl
xchg
aam
imul
pop
sbb
push
fbstp
test
mov
mov
lea
push
dec
mov
test
mov
jo
outsl
roll
sbb
je
dec
lds
mov
dec
push
mov
xchg
cmpsl
mov
mov
push
inc
fs
add
and
xchg
stc
rcrb
or
les
movsl
sti
loope
xchg
pushf
jns
add
das
aam
rcr
ficomps
ja
movsb
mov
xor
leave
sti
lahf
jp
sbb
sub
sub
xor
mov
cwtl
adcl
mov
or
sbb
xchg
sahf
lods
nop
imul
cmp
popa
daa
jne
cmp
dec
mov
pop
pop
rcpps
inc
outsl
or
mov
cmpsb
in
lock
cmp
lahf
call
add
movsl
push
mov
ret
lods
jl
mov
movsb
mov
xor
aas
cli
push
sbb
xchg
test
jmp
pop
cmp
aad
out
push
int
daa
sbb
pop
vpsrad
or
hlt
rorb
pop
and
loopne
aas
int
pop
push
jmp
and
cmp
in
jge
sub
pop
fdivrs
ficoml
adc
outsb
cmpsb
scas
mov
fbld
loop
outsl
push
mov
push
jb
pop
sbb
push
test
pop
in
nop
lods
aaa
pusha
xor
ss
sbb
das
shlb
or
repnz
rolb
loop
jne
mov
add
dec
or
sub
fiaddl
xor
cwtl
fcmovbe
movsl
mov
in
dec
dec
popf
jae
jns
pop
and
je
js
inc
and
mov
pop
mov
or
test
mov
nop
push
outsb
loopne
mov
lock
sahf
xchg
orb
xor
push
sbb
add
out
dec
jo
sti
lahf
enter
fsubl
mov
pop
dec
rorl
rcll
and
ljmp
pushf
lret
cmp
cltd
add
test
xchg
cwtl
dec
adcl
loop
scas
jns
push
loope
xor
sub
scas
jbe
sub
lods
inc
dec
es
pop
pusha
rorl
enter
add
ljmp
and
push
sbb
push
and
sbb
adc
sbb
lcall
sub
xchg
push
lods
adc
stos
fcomps
pop
ret
stos
nop
mov
pop
mov
add
jbe
popf
shll
inc
push
cmp
sahf
aam
sbb
push
add
ror
adc
fidivrl
add
cmp
movsb
push
fidivrs
xchg
cmp
jmp
xchg
enter
sbb
imul
sub
aad
xchg
or
cmp
insl
push
sub
movsb
and
mov
into
xchg
out
jle
call
cmp
std
out
dec
mov
subl
das
movsl
pop
xchg
jb
fisubl
scas
imul
jae
mov
or
mov
xor
repnz
and
arpl
dec
pop
sbb
jns
sti
js
cmp
xchg
loop
clc
test
sub
stos
mov
sahf
mov
or
or
les
out
mov
xor
dec
test
jp
gs
sbb
pop
mov
pushf
fimull
stc
inc
add
cltd
bound
lea
popa
fldt
sahf
insb
add
shrb
sbb
xchg
sahf
mov
jns
dec
arpl
js
inc
fisubs
into
and
mov
les
data16
out
sahf
dec
in
xchg
xor
push
ljmp
lahf
lret
loope
scas
cmpsb
adc
aas
clc
sbb
data16
repz
mov
xchg
xchg
sbb
imul
insl
in
cmpsl
adc
and
shlb
fistps
xor
mov
roll
out
xor
adcb
add
sbb
scas
mov
loop
lods
testl
mov
pop
inc
sub
sahf
dec
mov
insb
mov
sbb
cmp
faddp
fsubrs
add
xchg
scas
lret
fldcw
mov
in
fisttps
jb
cld
sti
int
jecxz
dec
inc
push
or
cli
std
aam
std
iret
xchg
lret
push
fcoms
adc
test
cld
xchg
push
cmpsb
pop
imul
imul
xchg
push
xor
hlt
push
iret
sahf
add
sub
xchg
andb
insl
mov
inc
or
inc
mov
decl
aaa
push
pop
jo
mov
aas
mov
push
push
jp
fadds
pushf
add
les
subl
imul
ds
out
adc
aad
popf
mov
xor
jmp
ret
test
jnp
cmp
je
mov
push
mov
sbb
arpl
cmp
jp
call
xor
push
xor
mov
mov
mov
push
push
push
call
shld
shl
jmp
popf
xchg
dec
mulb
sbb
fdivs
out
adc
sbb
adc
sbb
sbb
out
int
or
out
aas
ss
sub
pop
xchg
cmp
cmp
or
push
es
aaa
xchg
sahf
inc
xchg
xchg
int
lods
loop
ret
mov
ss
popa
and
push
push
adc
das
dec
push
mov
scas
data16
cmpsb
xchg
adc
jl
adcl
xor
sbb
mov
xchg
pop
lret
pop
mov
dec
lock
fmul
and
sbb
dec
cld
or
mov
xlat
xor
scas
add
shll
test
mov
cmp
mov
loopne
popf
inc
jp
inc
mov
mov
pop
test
cwtl
inc
les
adc
lods
and
or
jp
loopne
fwait
out
push
arpl
dec
stos
sbb
pop
adc
xchg
push
push
arpl
orl
bound
sub
aaa
add
jne
sar
xchg
adc
es
scas
mov
sub
fstps
test
push
push
xchg
pushf
jecxz
daa
and
pop
out
adc
daa
stos
ja
into
pop
fwait
mulb
cmc
jae
xchg
shlb
dec
cwtl
pop
sbb
mov
and
sub
es
sub
and
popa
push
imul
jo
bound
subl
xchg
pop
xchg
jbe
mov
orl
pop
sbbb
lods
mov
int
inc
push
dec
mov
divl
inc
nop
imul
int3
mov
dec
adc
pusha
dec
cmp
push
sbb
mov
shl
out
sub
xlat
repnz
adc
push
add
das
mov
cmp
inc
ss
cmpsb
jae
pop
mov
and
mov
cli
xchg
mov
jecxz
js
in
mov
push
insl
pop
idivl
jo
rorb
movsb
cmc
push
xor
dec
xor
imull
cmpsl
sub
lods
cmp
enter
and
or
or
sub
cmpsb
pop
test
or
sbb
les
sbb
push
and
push
xchg
in
movsl
pop
cmp
lock
imull
pop
jbe
std
mov
in
fstp
mov
add
sti
dec
mov
jp
addr16
sti
in
mov
push
pop
popa
sub
sarb
jne
dec
pop
imul
out
hlt
int
pop
mov
shlb
stc
cmp
loope
xchg
mov
out
cmp
xor
sbb
mov
or
sub
inc
adc
sbb
mov
test
jle
fldt
sbb
push
sbb
aam
add
cmpsl
mov
adc
fsubs
stos
rorb
rorb
xor
xor
mov
mov
jmp
xlat
cmp
jge
jle
pop
add
sbb
sbb
adc
sbb
push
mov
push
das
imul
repnz
sbb
xchg
add
jg
xchg
adc
ljmp
dec
jecxz
pusha
sbb
addr16
scas
int
shrb
dec
aad
leave
sbbb
maxps
inc
repnz
mov
shlb
and
dec
pop
popf
jae
xchg
push
into
pop
lcall
ds
dec
inc
and
or
shrb
mov
sti
or
bound
cmp
lds
cmp
dec
adcb
add
outsb
int3
inc
jge
pop
inc
or
adc
das
ljmp
mov
loop
push
clc
push
cltd
aad
xchg
lea
xor
sbbb
add
lret
fwait
adc
mov
xorl
outsb
sub
adc
scas
jp
lret
loopne
repz
pop
push
sub
lahf
mov
push
xor
cltd
jne
inc
mov
add
stc
and
cmp
or
adc
daa
xor
mov
testl
mov
enter
leave
loopne
fnsave
sub
adc
repz
test
jns
fcmovu
xchg
jl
daa
push
sbb
ficomps
cmp
mov
cltd
in
mov
pop
and
pop
lcall
pop
ret
test
inc
mov
jno
stos
mov
popa
sbb
mov
mov
inc
pop
in
pop
or
pop
iret
out
inc
out
daa
ss
cmp
testb
xor
rolb
ret
loope
iret
out
lret
mov
xor
cmp
or
xchg
inc
test
or
enter
jl
pop
stos
xchg
inc
shr
dec
lock
cli
lock
push
adc
pop
mov
imul
cmp
pop
arpl
push
push
jmp
ljmp
jmp
jg
push
jo
shl
xchg
add
cltd
lea
jae
pop
xchg
sub
dec
pushf
or
cmp
int
cmp
and
jp
icebp
cmp
adc
aam
nop
frstor
mov
jnp
cwtl
dec
outsb
pop
push
iret
push
mov
pop
inc
xchg
rorl
mov
inc
cmpl
iret
int
pop
xchg
inc
sub
sbb
lcall
pushf
icebp
ja
add
lret
inc
bound
jae
movsl
ret
jg
and
jo
cmpsl
psrld
bound
stos
test
lds
lock
pop
daa
mov
mov
sub
mov
bound
ret
addr16
inc
mov
or
inc
add
and
dec
ss
aaa
push
mov
and
or
insb
inc
inc
push
inc
fisubrs
pop
mov
xor
or
add
es
pop
or
das
aaa
aad
pop
inc
iret
and
mov
mov
mov
xor
xor
shrd
shr
mov
mov
mov
mov
xor
or
mov
mov
mov
xor
xor
shl
mov
mov
mov
shrd
xor
or
mov
mov
mov
mov
shl
xor
or
shr
xor
or
cmp
jne
cmp
je
pushl
pushl
jmp
fwait
ror
dec
mov
scas
in
mov
and
sbb
adc
sbb
cltd
sub
pop
ja
jo
xchg
sub
stos
fmuls
neg
test
xchg
hlt
or
mov
cmpsb
jge
jmp
popa
filds
mov
fistpl
add
arpl
mov
iret
ja
lahf
cmpb
cmp
pop
dec
aas
dec
mov
mov
fildll
fnstcw
mov
cltd
fsubrl
repz
jb
xchg
or
out
dec
in
fisttpll
loop
in
dec
outsb
dec
insb
lahf
add
mov
arpl
sti
daa
jge
push
inc
ljmp
arpl
loopne
inc
mov
adc
inc
sub
movsb
sbb
inc
movsl
dec
stos
popf
call
popf
xorl
push
stos
mov
fdivs
xor
xor
and
test
pop
decl
sbb
mov
dec
mov
and
mov
iret
push
mov
setbe
jl
test
idiv
and
push
cmc
xor
add
xor
imulb
and
sbb
fcomps
and
inc
cmp
mov
stos
jecxz
shlb
ret
shrl
pop
and
or
cli
sub
out
cmp
jae
daa
pop
imul
mov
jmp
sbb
xor
cli
xchg
std
sbb
push
xchg
sbb
push
pop
lods
xor
dec
cmc
aaa
fnstcw
imul
jecxz
aad
test
mov
rclb
or
arpl
pop
js
cmp
sbb
sarb
test
jg
mov
push
sarb
shrb
jg
pop
add
push
ret
pusha
mov
xor
outsl
sarb
lods
mov
out
add
inc
call
mov
push
popa
es
jmp
faddl
jle
or
mov
cmpsb
cmp
cwtl
sbb
shr
jo
mov
and
push
pop
sbb
sub
jb
add
pop
mov
mov
mov
lods
mov
cmp
mov
xchg
push
mov
push
mov
sbb
sub
stos
jl
repnz
movsb
sbb
js
inc
mov
push
int
add
adc
lret
rorb
xchg
push
xor
insb
pop
stc
int
and
cmc
lcall
test
pop
add
pop
sub
cmpb
xchg
pop
ficoml
repz
adc
or
ret
int3
ror
insl
inc
mov
jo
xchg
pop
jl
adc
pop
mov
imul
and
sahf
lods
jp
test
out
mov
xor
dec
ret
mov
cltd
xor
add
mov
inc
dec
test
xor
jle
and
pop
jbe
or
add
and
pushl
push
push
call
jmp
mov
dec
jb
insl
fnstcw
dec
sbb
and
sbb
fistpl
mov
test
xor
div
inc
cmp
xchg
mov
dec
push
push
test
lahf
mov
adc
into
push
sbbb
test
mov
mov
jb
push
adc
and
repz
pop
cmpsl
or
and
ret
sarl
dec
mov
mov
cmp
mov
push
mov
aas
les
pop
inc
mov
mov
inc
std
loopne
insb
mov
mov
lock
add
mov
xchg
inc
mov
fsubrs
mov
mov
sub
xchg
mov
lea
fcompl
orb
jge
in
jmp
lret
or
and
jno
pop
enter
in
jno
out
jb
jp
xlat
repnz
sub
add
std
push
xchg
movsl
in
cmp
enter
dec
jbe
imul
rorb
lahf
mov
loop
fiadds
adcl
test
ljmp
mov
pop
push
mov
jle
js
push
sahf
sub
mov
jge
out
iret
lcall
mov
repz
push
dec
stos
shlb
pop
lock
cld
mov
pop
int3
push
shll
cmc
pop
push
sub
sbb
pop
jle
jbe
je
jge
xor
je
jb
and
nop
or
insl
xchg
cmp
cs
xor
mov
sbb
cmc
adc
ret
sbb
loopne
aad
imul
dec
jo
or
outsl
xor
jns
and
pop
cmp
test
popa
mov
pusha
cld
out
icebp
in
gs
xchg
push
mov
inc
cmp
dec
in
out
outsb
in
xor
xor
pusha
push
iret
add
scas
xor
mov
mov
jecxz
test
cld
mov
xchg
bswap
repnz
mov
sub
push
pop
fs
lds
fisttpl
sarb
and
dec
dec
pop
inc
mov
lods
xchg
cmc
cmpsl
insb
mov
adc
aam
or
loop
push
push
cmpsb
mov
or
das
sub
aas
sub
imul
or
fdivl
jge
enter
cmc
stos
push
cltd
fcompl
mov
push
lahf
cwtl
sub
add
xchg
sbb
nop
or
pop
int3
stos
fisubs
movsl
dec
aad
cmp
imul
jo
sbb
mov
sbb
sbb
mov
fldenv
outsl
mov
fbld
sbb
enter
fadds
add
inc
fistl
jge
stos
dec
or
insl
xchg
mov
es
mov
insb
sbb
cs
sbbb
push
lock
leave
ret
movl
cmp
movl
jae
movl
cmp
movl
jae
sbbl
shrd
movl
shr
ret
mov
xorl
xor
and
shr
ret
xor
xor
ret
push
mov
sub
sub
movl
mov
cmpl
movzbl
mov
movzbl
mov
jmp
mov
mov
jne
pushl
pushl
pushl
push
call
mov
and
xorl
add
not
sbb
adc
mov
movl
mov
movl
cmpl
mov
notl
mov
jmp
mov
mov
jbe
pushl
pushl
push
push
push
pushl
push
call
and
movzwl
add
not
mov
adc
andl
add
mov
sbb
movl
movl
push
movzwl
and
movl
cmpl
movl
mov
movzbl
jmp
movl
movl
jge
push
push
pushl
push
push
call
sbb
incl
xorl
add
movzwl
add
add
movl
xor
add
and
push
or
movl
cmpl
not
mov
jmp
movl
mov
jle
pushl
call
mov
mov
adc
not
sub
sbb
or
incl
mov
cmpl
not
mov
mov
not
jmp
movl
movl
jae
push
push
push
call
add
sub
mov
xor
sbb
neg
mov
push
push
sbbl
push
orl
call
jmp
inc
dec
cmpsb
movsb
lcall
mov
pop
inc
push
dec
sbb
add
sbb
out
mov
dec
shlb
subl
xchg
jbe
lret
sub
and
xchg
dec
mov
stos
mov
mov
in
inc
jl
out
jns
pop
add
test
pop
lods
mov
adc
xchg
fnstenv
mov
insb
loopne
xchg
sahf
mov
jecxz
mov
fdivr
jp
popa
adc
mov
jmp
icebp
and
inc
dec
sub
cmp
and
inc
mov
mov
aaa
xlat
repnz
mov
inc
insb
mov
mov
loopne
loop
lea
fs
lods
push
sbb
jmp
sbb
dec
mov
or
loopne
lcall
dec
scas
lea
xor
test
test
and
push
sar
fnsave
add
xor
mov
or
push
sub
mov
inc
jns
adc
sub
fcmove
stc
adc
xor
imul
loopne
pop
out
shrb
or
xlat
iret
mov
pop
mov
lods
test
mov
outsl
mov
push
scas
xchg
push
jge
pop
ret
dec
pop
insb
jae
int
leave
stc
mov
mov
fsubrs
rcll
mov
fisttps
outsb
lahf
mov
mov
int3
cmp
loopne
and
pushf
inc
adc
cmpb
and
mov
in
jo
out
pop
xor
inc
pop
xlat
hlt
test
fwait
inc
mov
outsb
xchg
mov
fbstp
sti
xchg
roll
jnp
xorb
fldenv
hlt
mov
je
cmp
jg
pop
jg
dec
xchg
push
jmp
mov
into
pushl
xchg
push
adc
test
cmp
in
mov
popf
xchg
jnp
int
pop
add
jl
ficoms
lods
inc
daa
push
rclb
mov
jle
imul
cli
mov
insb
add
fcoml
cmp
xchg
fnsave
jp
dec
add
cli
lret
push
or
cli
jo
cmc
push
sub
push
adc
enter
mov
cmp
cld
sub
je
ret
sbb
loope
jmp
or
cmpsl
fistpl
mov
rclb
cli
jg
inc
sbb
out
mov
loopne
movsb
mov
and
fcmovnbe
std
and
pop
push
xchg
arpl
das
lods
jp
mov
repnz
xchg
insl
add
test
fadds
inc
stos
ds
inc
pop
mov
shl
jns
sbb
stc
and
xor
call
mov
mov
movsl
mov
or
fsubs
sbb
adc
jb
aas
cltd
lcall
jne
sbb
in
mov
mov
push
orl
or
push
addl
or
sbbl
xor
xor
push
push
negl
call
mov
cmpl
not
movzwl
notl
jmp
movl
jb
push
pushl
pushl
call
adc
movzwl
or
xor
add
sbb
xor
mov
or
xor
neg
sbbl
mov
adcl
push
adcl
push
movl
push
push
decl
call
cmpl
mov
mov
jmp
movl
jae
pushl
call
sub
subl
xor
sbbl
sub
or
xorl
jmp
mov
sbb
sbb
sub
lret
loope
mov
inc
sbb
add
sbb
mov
push
sub
lret
aad
es
int3
xchg
out
pop
lret
mov
iret
push
jmp
orl
testl
gs
faddl
dec
icebp
push
and
sub
push
jmp
add
mov
xchg
cltd
ja
mov
add
addl
inc
icebp
jne
lahf
push
lcall
sbb
push
cmp
sti
inc
xchg
pop
or
outsb
add
mov
fdivs
xor
adc
ja
fsubrp
jno
add
js
sbb
add
sub
ja
sub
push
pop
pushf
pop
sti
dec
movsl
jmp
cli
ret
enter
push
repz
pop
sub
das
xor
dec
inc
cs
imul
push
jle
lahf
dec
cmc
sbb
test
xchg
mov
xchg
sti
lret
orb
pop
das
add
loop
sti
and
notb
je
inc
push
or
call
jmp
imul
lds
movsb
inc
out
mov
xor
mov
jb
push
sbb
or
mov
inc
or
pop
cli
mov
les
adc
fsubrl
dec
adcl
int3
mov
xchg
xchg
fiaddl
insb
sbb
lods
jecxz
fcoml
mov
int3
xchg
fildl
fadds
sub
mov
nop
or
pop
arpl
pushf
mov
push
outsb
mov
jmp
jb
loop
aam
cmpb
pop
push
lret
bound
out
sub
daa
xor
mov
orl
call
mov
inc
mov
ret
jb
xchg
mov
push
not
pop
dec
int
paddsb
aam
mov
cwtl
mov
fwait
cmp
jge
cmp
clc
push
mov
sbb
aad
jecxz
fucomi
lods
jae
in
int
xor
jl
sub
dec
lahf
sbb
pop
inc
outsb
jmp
dec
adc
dec
pop
dec
hlt
cmpsl
testl
jno
mov
loop
and
out
xchg
shrl
add
lcall
sub
dec
int
cmp
xchg
and
add
dec
dec
repnz
mov
ljmp
scas
lret
pop
movl
push
and
je
adc
adc
jne
xor
mov
or
addr16
dec
mov
cltd
pusha
test
lea
pop
aam
aad
jno
aam
and
mov
jp
in
mov
data16
ret
fisubl
fstpl
add
inc
or
xchg
fistpl
sbb
loop
dec
movsl
lods
push
push
sbb
xchg
add
inc
and
ret
push
cmpsl
dec
in
iret
test
mov
mov
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
add
adc
or
mov
or
mov
or
mov
or
mov
or
or
jmp
add
pop
mov
inc
add
sbb
adc
push
mov
sbb
cli
enter
filds
aam
cmp
sti
push
xor
mov
cmpsl
in
or
popf
mov
cltd
in
xchg
adc
mov
clc
xor
outsb
inc
rol
ffreep
ret
dec
push
in
fsubrs
sahf
out
mov
xchg
sub
call
mov
inc
lock
cld
aam
pop
lods
in
push
push
cmp
mov
mov
or
test
cmp
pop
xchg
rorb
aas
dec
push
mov
test
neg
sub
adc
and
clc
int
addb
cmc
clc
aas
cld
adc
add
insl
outsb
inc
cs
rcll
dec
sbbl
or
jne
xor
out
and
sbb
jnp
jns
in
and
iret
xchg
call
mov
std
adc
push
adc
in
pop
mov
test
and
lahf
movsl
jo
jg
jnp
cli
lds
jo
ss
repnz
out
mov
mov
fbstp
xchg
into
arpl
and
sbb
pop
leave
loope
push
scas
pushf
inc
lret
seta
xor
jnp
scas
fcomp
fstp
mov
jnp
pushl
cwtl
sub
pop
es
jmp
jns
mov
xchg
xchg
or
inc
cltd
out
stc
jmp
jnp
mov
jno
mov
or
or
scas
rcrb
int
cld
jno
mov
inc
inc
and
jno
loopne
in
mov
outsb
xchg
add
xor
subb
les
and
outsb
inc
sbb
mov
cmpsl
das
adc
xchg
add
xchg
pusha
push
sub
push
sbb
aas
rorb
dec
lea
test
imul
or
and
lret
push
test
movsb
mov
hlt
loopne
add
push
loope
cmp
fs
icebp
xor
nop
mov
inc
inc
mov
push
and
push
shlb
rclb
clc
push
cmp
fs
jns
test
cld
xchg
adc
xchg
cmc
insb
mov
nop
xor
inc
cmp
iret
push
xor
mov
lods
mov
mov
stc
dec
mov
bound
aas
pop
cwtl
or
xchg
rol
sbb
dec
or
adc
lret
ret
andl
xchg
fwait
push
leave
js
outsb
sub
adc
inc
dec
pop
jmp
mov
imul
add
adc
arpl
mov
rol
scas
enter
inc
leave
cmp
rorb
test
add
add
icebp
je
movl
movl
mov
mov
xor
xor
and
jmp
xor
jne
insb
sbb
push
out
int3
or
or
stos
call
adc
sbb
dec
sub
jmp
mov
addr16
and
js
adc
test
adc
cmpsl
push
mov
sbb
in
aaa
sar
cmpsb
lcall
mov
dec
cs
es
enter
mov
out
push
mov
nop
iret
inc
push
push
fxch
lods
scas
xchg
jg
xor
js
fucomi
xchg
ljmp
jbe
les
mov
out
sbb
push
push
andl
sub
in
out
dec
cmp
iret
test
sub
xchg
das
fistpll
andb
xchg
bound
js
pushf
lds
ja
lock
push
shll
add
cmp
inc
mov
pop
xor
enter
je
push
ljmp
cmp
ds
add
inc
xor
cmp
fidivl
add
mov
sub
leave
sbbb
inc
mov
in
ljmp
dec
and
fnstsw
mov
mov
fcoms
mov
dec
mov
cli
inc
std
adc
gs
pop
ja
fsubrs
jge
lret
adc
add
pop
fnstcw
push
lret
outsb
and
xchg
iret
pop
jl
jo
adc
adc
push
pop
and
scas
into
jne
out
pop
test
mov
pop
pop
into
push
test
mov
jnp
sub
inc
adcl
pop
cmc
sub
idiv
lret
mov
hlt
jecxz
xchg
call
push
sub
sbb
push
cmp
dec
xor
lods
cmp
jo
dec
push
dec
xor
testl
daa
stos
ljmp
mov
add
jle
mov
loopne
fwait
sub
mov
fnstcw
cmp
pop
jecxz
es
inc
repz
aad
cli
data16
xchg
pushf
sbb
stos
and
and
pop
loope
cwtl
xchg
cmp
push
dec
sbb
or
popf
xor
or
lods
sbb
mov
pop
ret
in
std
or
xor
inc
pop
imul
fbstp
ret
jns
fbstp
inc
movsl
scas
or
pop
ffree
stos
jmp
call
xor
test
into
fwait
iret
xchg
pushw
insb
dec
rol
add
or
insl
pop
add
daa
sbb
repnz
stc
mov
stos
mov
lret
jbe
in
loopne
fcmovb
mov
cmp
inc
pop
out
cmp
xor
lods
add
shll
pusha
inc
xor
hlt
loop
call
and
lock
add
aas
out
adc
jno
inc
das
les
mov
sti
enter
sub
fcmove
pop
sarb
or
adcl
jno
pushf
loope
hlt
ffree
push
arpl
adc
jae
xchg
xchg
add
fs
sub
pop
ds
test
add
hlt
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
add
mov
adc
mov
add
adc
xor
xor
add
mov
adc
mov
cmp
jne
cmp
je
movl
movl
movl
push
movl
mov
mov
jmp
in
mov
sub
push
jecxz
shlb
sbb
add
sbb
test
push
scas
jae
and
jae
mov
ljmp
sti
popa
test
loop
js
in
mov
ficoml
dec
or
loop
adc
mov
cmp
fcomps
fwait
inc
mov
imul
sbb
xor
cmp
cmpl
scas
push
dec
sarl
sbb
lods
sub
cmp
out
mov
xchg
adc
stos
cld
es
xchg
mov
int
cld
mov
adc
movsb
add
ds
leave
popf
out
test
xor
rcrl
cmp
icebp
loopne
call
lods
mov
jo
cmp
push
lock
sti
xlat
push
int3
xor
push
mov
pop
jg
pop
sub
ljmp
popa
es
pop
mov
int
scas
outsb
and
fldt
dec
fbld
dec
fildll
call
test
sbb
xchg
stos
pop
ret
mov
jl
inc
in
adc
inc
out
mov
rcll
sbb
adc
jg
in
lret
adc
mov
or
or
sub
sbb
loop
jl
rcr
pop
mov
lock
cmp
sub
lret
cmpsl
std
iret
jmp
pop
mov
movsl
cmp
pop
pop
jns
cmp
lret
jmp
xor
push
xor
stos
push
jge
xchg
outsl
pop
ljmp
inc
push
inc
mov
shrb
ret
stos
mov
add
sub
add
jbe
mov
ret
sub
jge
xchg
sahf
nop
and
clc
addr16
in
ret
mov
rcrl
neg
call
ret
je
pop
clc
inc
arpl
int
inc
das
or
jne
push
xchg
hlt
movsl
lock
pop
push
out
cmovo
loopne
mov
insl
das
je
lods
xor
jl
inc
xor
push
cmp
dec
mov
notl
aam
lcall
fadds
aaa
ret
push
stos
fsubrs
ss
dec
jne
pushf
inc
lds
add
mov
cmp
jne
out
mov
loopne
aad
fisttpll
mov
sbb
cld
mov
push
std
or
mov
iret
and
out
dec
sbb
cmpsb
mov
pop
sbb
cmpsl
mov
stos
ret
bound
mov
add
sahf
repz
mov
imul
inc
pushf
pushf
xchg
and
sbb
cmpsl
mov
inc
mov
dec
jbe
xor
daa
sbb
sbb
sub
cmp
es
and
mov
pop
jae
sub
cmpsb
dec
xor
dec
std
fdivrl
pushf
out
add
repnz
push
inc
jge
inc
push
jmp
add
push
sbb
ja
es
sbb
add
sbb
mov
ret
pop
add
int3
push
imull
rcl
jne
in
add
dec
roll
fs
or
sub
mov
out
popa
jl
iret
xchg
xchg
into
mov
out
xorl
sub
test
xor
popa
sar
add
jns
loope
stc
xor
inc
cmpsl
clc
icebp
cld
shr
cmpsb
lret
in
dec
mov
mov
xor
adc
pusha
lret
addb
cli
adc
stc
fildll
xor
adc
or
and
aaa
repnz
jb
cs
leave
std
xlat
scas
mov
sub
fdiv
jbe
lcall
lods
mov
sub
sbb
push
pop
mov
lock
mov
aas
dec
jb
js
inc
sub
dec
jnp
test
and
lock
push
pop
add
fs
push
inc
icebp
loopne
lret
push
rcrl
dec
sahf
and
mov
lahf
mov
call
xor
jb
cmp
popf
xor
imul
adc
pushf
push
jno
in
lea
jne
sub
fucom
sbb
leave
mov
fdivrs
jmp
test
sub
jl
adc
sbb
push
andb
jle
xor
lods
aas
inc
add
mov
mov
ret
fidivs
ror
dec
ss
pop
jmp
mov
push
mov
lock
mov
cs
pop
dec
jecxz
push
sbb
jp
aaa
call
fcomps
in
jecxz
inc
xchg
test
adc
mov
pop
std
jbe
jg
insl
jnp
mov
lock
add
and
sbb
insb
cli
and
sti
inc
int
les
xchg
mov
pop
out
pop
cli
insl
mov
dec
enter
iret
mov
rcr
je
cmc
cltd
fucom
shl
aam
push
dec
mov
loope
mov
sbb
fs
cltd
sbb
sbb
aam
imul
sub
or
test
ret
inc
or
push
cmpsb
sarb
push
mov
sbb
lea
shlb
cld
cmp
pushf
adc
pop
movsl
bnd
fsubrs
je
add
adc
sub
jmp
les
sub
or
inc
or
loope
sub
or
jnp
icebp
mov
mov
leave
jo
std
aad
out
push
jp
lret
outsl
lea
daa
mov
mov
shll
xor
in
out
mov
jo
adc
ja,pt
and
inc
or
int3
lods
in
or
outsb
dec
pop
in
fisubs
xor
sbb
mov
rcr
pop
cs
scas
fwait
das
fidivrs
movl
add
fsubrl
mov
int
add
and
push
jmp
addr16
bound
mov
adc
jo
and
sbb
pop
std
cmc
xor
aad
out
mov
and
subl
mov
jge
cmovnp
loop
push
ret
aam
jl
in
mov
jle
movsl
int
sub
test
or
adc
ret
dec
xlat
cs
data16
inc
movsl
scas
leave
and
pop
js
fcomps
xor
lcall
call
imul
ret
xchg
xchg
or
sbb
scas
inc
test
push
adc
lods
xchg
inc
cmp
mov
and
add
pusha
pushf
fmulp
iret
adc
cmpsb
ret
decb
cltd
mov
xor
inc
call
mov
jo
add
pop
mov
jns
cmp
xor
sbb
dec
adc
xor
mov
adc
sbb
loop
adc
xor
nop
xor
pop
call
push
push
repz
sti
jae
mov
add
cld
mov
enter
sbb
cmp
hlt
stc
or
std
mov
sbb
aad
lea
ljmp
daa
stos
adc
xchg
or
cmp
rcll
xchg
popf
xor
dec
mov
fsubrp
pop
fisubl
lods
popf
sub
ret
lods
push
lds
or
mov
addr16
fists
inc
nop
xorb
inc
ljmp
xlat
xchg
lds
fwait
and
push
mov
mov
push
dec
fidivs
mov
adc
in
imul
or
and
cmp
pop
cltd
sub
mov
stc
movsl
adc
jb
mov
sbb
xchg
pop
mov
ds
ss
pop
daa
inc
adc
stc
subl
push
inc
cmpsl
inc
mov
mov
in
es
aam
rorb
daa
and
sub
sub
xchg
mov
push
test
inc
and
jecxz
xchg
scas
cmpsl
ljmp
inc
jmp
fdivs
xchg
jecxz
or
inc
enter
mov
sbb
jno
fists
push
mov
or
mov
jge
jp
outsb
jg
xchg
loopne
sub
adc
mov
xor
out
or
lahf
int3
out
decb
jno
jmp
in
test
dec
push
in
aaa
push
lds
push
in
jl
aam
dec
add
cmp
fcompl
popf
inc
fldcw
idiv
into
in
cmc
out
and
dec
or
cmpsb
sbb
icebp
sub
sbb
movsl
add
xor
pusha
neg
push
enter
es
ss
int
jl
js
lret
mov
icebp
cltd
xor
cmp
xor
jno
xchg
add
mov
lods
xlat
dec
jno
js
jge
popa
inc
or
push
call
xor
xor
mov
mov
mov
cmp
jne
mov
mov
mov
mov
shrd
shl
mov
mov
shr
xor
mov
xor
or
mov
mov
jmp
rcr
sub
sbb
loope
scas
mov
test
sbb
add
sbb
negl
in
or
shrl
subb
out
icebp
mov
xchg
cmpsb
mov
ja
mov
mov
push
ret
fstpl
fs
rcrl
shrb
mull
jecxz
sbb
mov
stos
or
push
dec
std
fcoml
mov
stos
xor
sbb
jp
in
stos
xchg
or
mov
and
lcall
sti
mov
add
mov
ljmp
mov
cld
fnsave
xor
sbb
js
cltd
mov
shll
and
pop
mov
test
or
push
and
and
mov
shlb
mov
xor
adc
shr
div
loop
cmp
inc
cld
and
aas
adc
mov
daa
aaa
mov
and
push
adc
jecxz
data16
mov
adc
insb
lock
push
nop
push
pop
ret
shrl
cmpsl
paddsb
out
mov
sti
ficoml
mov
outsb
jb
mov
fsincos
inc
pop
xchg
cwtl
add
inc
lcall
push
in
mov
bound
xchg
or
ss
add
dec
shrb
and
enter
lock
sub
test
mov
cs
dec
mov
add
sbb
xchg
gs
nop
inc
sarl
inc
cmpsl
cmp
xchg
ss
push
sub
sbb
dec
xchg
pushf
in
pop
sub
rcl
xchg
ret
add
in
or
pusha
shll
lretw
int3
add
into
mov
rclb
and
icebp
pop
scas
mov
jne
cmp
pop
cmc
pushf
call
fisubrs
or
subl
mov
cmp
mov
fisubl
cmp
or
ret
out
sar
xorb
and
push
mov
xchg
push
shll
xchg
jp
loope
xchg
cmpsb
sbb
pop
stos
inc
inc
outsl
test
lock
aad
notb
movsl
inc
add
out
sub
jnp
dec
sbb
and
sbb
fwait
jecxz
inc
fimull
mov
flds
jno
inc
in
popa
cmp
popf
mov
lret
loopne
cmpl
movsb
lret
add
xchg
mov
mov
lods
sub
push
jmp
in
sbb
addl
aaa
xchg
mov
hlt
push
mov
add
mov
mov
lock
data16
mov
mov
in
dec
arpl
lahf
popa
mov
lock
push
pop
jno
lods
outsb
cmpsl
stos
sub
ljmp
or
adc
cmp
int
xchg
push
lods
out
sub
jo
mov
gs
lret
dec
push
cmp
lods
rolb
shr
mov
mov
xor
xor
or
mov
movb
movb
movzbl
jmp
adc
nop
dec
mov
jle
sbb
sbb
adc
sbb
inc
xor
in
sarl
mov
push
fcmovne
xor
pop
inc
and
and
push
mov
je
in
mov
adc
scas
cmp
push
xchg
outsl
sbb
and
mov
push
imul
lret
push
mov
rorl
dec
mov
mov
rolb
das
mov
or
inc
je
cmpsl
xor
fisubrl
out
ret
shll
xchg
lods
mov
outsl
adc
xor
stos
jle
xchg
or
hlt
icebp
ja
mov
into
das
or
or
mov
jmp
adc
fucom
imul
or
bound
adc
add
fists
ss
add
jge
or
mov
ret
shlb
or
rcrl
pop
sti
xchg
cmp
jae
adc
and
push
cli
inc
arpl
daa
lret
inc
mov
dec
cs
mov
mov
dec
dec
test
les
adc
add
mov
notl
in
ficoml
sbb
cmp
dec
mov
push
in
lret
mov
xchg
aaa
xchg
fcmovnu
cltd
pop
or
sub
xchg
adc
add
push
sub
aaa
sbbb
ret
adc
or
pushf
in
jb
pop
push
out
sub
mov
cmp
mov
shl
test
daa
cmpsb
or
repz
in
and
popa
inc
mov
cli
add
and
jo
pop
xchg
test
push
lahf
inc
or
rolb
mov
hlt
mov
cmc
daa
ljmp
das
stc
pop
sbb
mov
mov
outsl
or
sub
mov
out
push
leave
aam
cltd
dec
inc
cwtl
std
lods
dec
jp
mov
dec
lret
pop
lret
shll
and
and
mov
add
inc
cmp
lret
ret
setl
jg
daa
shll
dec
add
adc
mov
idivb
int
lcall
sti
cmp
leave
cwtl
push
mov
xchg
mov
aas
and
and
or
cmp
div
stc
mov
sub
js
lods
xchg
sbb
cmp
mov
roll
stos
icebp
ds
sbb
stos
inc
cmp
outsl
dec
mov
and
sbb
scas
fwait
mov
addb
addb
push
xor
mov
outsl
stos
lods
jecxz
jmp
xchg
loop
aas
push
dec
ljmp
clc
jl
in
adc
js
mov
xor
out
mov
int
jbe
aaa
test
xor
into
adc
loopne
mov
ret
vpsrad
mov
xor
add
push
add
mov
movb
pop
mov
movb
mov
movzbl
cltd
idiv
mov
add
mov
or
mov
add
cmp
jae
mov
mov
shrd
xor
mov
shr
mov
xor
shl
or
jmp
push
test
and
lret
stos
pop
adc
sbb
adc
sbb
ja
jg
out
mov
fmuls
jp
dec
mov
stos
dec
movsb
pop
ficomps
pushf
aaa
cs
lahf
rorb
xor
xchg
rolb
jl
mov
adc
jns
pushf
jne
mov
mov
aam
cs
jl
push
fucom
jle
data16
jnp
loop
scas
movsl
or
mov
ja
enter
mov
test
cmpsl
sbb
jle
lcall
cmp
pop
bound
jno
lret
adc
aad
inc
ret
xor
jge
out
push
arpl
inc
nop
xorl
das
pushf
jb
mov
mov
pushl
mov
stos
mov
leave
lret
mov
and
pop
sub
add
sub
dec
push
lods
fdivrl
in
jle
stos
jb
or
adc
aam
push
cwtl
inc
or
int3
in
mov
movsb
sarl
loopne
popa
xchg
sbb
je
imul
sbb
jmp
ficoms
xchg
lock
push
jnp
repnz
out
cltd
fnstsw
dec
sarb
imul
shll
pop
sub
push
xchg
and
cmpsb
mov
aas
jno
imul
addb
shl
jg
jp
dec
insb
pop
xlat
mov
imul
sbb
xchg
cmp
jnp
in
cld
pushf
das
dec
out
dec
mov
mov
xchg
xchg
out
rcr
dec
or
xlat
and
pop
dec
repz
insb
sub
lock
pop
sub
mov
mov
inc
cmp
movsb
mov
int
mov
dec
add
inc
rcll
push
test
outsb
aad
das
stc
mov
subl
xor
ret
xor
movsl
insl
insb
ret
in
in
push
loopne
sub
test
xor
adc
aas
test
xchg
int3
testl
pop
loop
add
ss
out
lcall
jae
nop
mov
push
data16
fucomi
xor
decb
out
ds
lea
push
ds
stos
mov
not
inc
inc
nop
sbb
lret
xor
push
xor
add
scas
add
cwtl
xchg
xchg
leave
cmp
fidivrl
mov
mov
add
out
ljmp
int3
or
inc
sti
mov
add
pminsw
stos
jno
mov
scas
mov
xchg
mov
addr16
sub
rcrb
lock
or
cld
mov
cwtl
sub
popa
push
fsub
push
lods
popf
andl
gs
test
aaa
fildl
cli
mov
or
movsb
cld
lcall
sub
in
cld
add
scas
scas
cmpsb
lahf
ret
cld
es
add
ret
push
mov
sub
push
push
push
movl
jmp
push
lods
pop
inc
lret
jo
es
inc
or
sbb
pop
and
aaa
xchg
sti
mov
xor
push
adc
add
mov
xor
and
sti
scas
mov
scas
or
dec
jle
and
lcall
xchg
xor
cmpsb
dec
enter
scas
sbb
xor
ljmp
mov
xor
and
push
mov
mov
out
jmp
les
dec
jno
pop
adc
fstps
aaa
aaa
or
xor
mov
xor
push
pop
in
xchg
insl
cld
or
out
xchg
imul
cld
cmp
jmp
movsl
ret
jmp
test
cwtl
ror
sub
test
xor
scas
mov
lea
sbb
gs
daa
adc
mov
add
add
icebp
mov
fsubrp
ds
pop
hlt
lock
mov
ds
push
pushl
daa
adc
push
daa
lods
ljmp
arpl
adc
dec
lods
cmpsb
pop
clc
xor
es
mov
jne
push
fstps
dec
mov
pop
inc
bound
push
mov
fwait
xchg
mov
adc
sbb
ja
jae
pop
into
jp
cmp
addl
lret
mov
movsl
mov
fwait
jl
shrb
movsl
stc
vminpd
xchg
testl
sub
cmp
jmp
inc
js
jge
into
mov
dec
es
xchg
and
inc
aam
dec
in
lahf
adc
sub
lods
in
scas
arpl
pushaw
arpl
stos
mov
movsb
mov
cltd
dec
jge
pop
xchg
push
add
jo
insl
mov
mov
pop
jne
je
and
pop
and
inc
sbb
sti
fwait
out
add
roll
mov
cltd
repnz
cmp
xchg
or
test
nop
cltd
stos
dec
or
js
add
add
push
fnsave
cmp
jo
sti
insl
sub
pop
in
mov
cli
andl
xchg
pop
xchg
les
xlat
and
jno
or
fucomi
mov
and
sbb
and
mov
in
mov
jbe
shr
cs
divl
mov
aas
cmp
cmp
loop
daa
loope
xor
icebp
popa
add
and
xor
push
push
repz
dec
mulb
and
xchg
stos
push
dec
in
ficomps
mov
inc
rcrl
sti
push
cmc
shll
stc
and
shll
movl
movl
movl
movl
movl
movl
movl
xor
inc
mov
movl
mov
mov
sub
add
add
imul
add
xor
movl
movl
movl
movl
mov
or
add
mov
and
mov
sub
mov
mov
mov
add
or
jmp
xchg
jne
je
es
je
mov
inc
test
sbb
mov
adc
pop
xchg
add
mov
or
and
ret
jno
jno
adc
mov
cmp
jp
add
sbb
fists
sub
dec
mov
stc
int3
scas
insl
sbb
mov
sbb
in
mov
adc
add
inc
sub
pop
test
out
ret
movsb
lcall
inc
shll
cltd
jnp
jecxz
pop
js
sub
xlat
pusha
dec
dec
pop
out
aaa
addl
fstl
mov
jmp
testl
repz
and
test
lcall
pop
inc
gs
push
dec
fidivs
popa
insb
fcmovne
sbb
stos
fidivl
xor
and
fldl
mov
mov
mov
and
fiaddl
fsubrs
psrld
stc
mov
enter
pop
dec
lods
push
call
sbb
xor
sub
xchg
or
xchg
pop
enter
adc
xchg
outsl
push
adc
vunpckhpd
shrl
test
push
data16
mov
jmp
xchg
aad
rorb
dec
scas
cmpsb
xchg
test
je
aas
lock
cmp
add
rcrb
hlt
xlat
sub
xchg
fwait
mov
cmp
xor
test
mov
mov
test
mov
and
mov
mov
xchg
dec
xchg
adc
insl
push
add
div
mov
aas
or
stos
xchg
sahf
enter
mov
and
inc
inc
and
call
pushf
rcrl
mov
addb
xor
lods
push
xchg
jne
out
dec
shr
cmc
rep
add
push
jnp
test
in
xlat
mov
push
cs
mov
dec
daa
adc
mov
mov
fidivs
inc
scas
jmp
mov
mov
add
xor
dec
cmp
xchg
and
push
add
cmc
inc
sbb
punpckldq
xlat
lods
movl
pop
adc
inc
mov
xchg
mov
xchg
mov
xchg
loope
cmpsb
mov
jle
pusha
cltd
push
jne
xchg
jecxz
or
insl
cmp
cwtl
sbb
jno
xor
xor
int
pop
hlt
or
jge
mov
call
xchg
and
js
in
dec
cld
icebp
pop
jl
push
xchg
rol
outsl
mov
fistpll
cmpsb
jg
push
clc
arpl
sbb
jbe
cwtl
sub
xor
sub
mov
mov
mov
mov
mov
and
xor
xor
div
lea
mov
add
mov
jmp
pop
dec
ficoms
daa
ss
push
nop
sub
sbb
lcall
mov
mov
or
push
lock
into
add
sbb
cs
push
aas
mov
sbb
fnsave
push
in
push
mov
or
out
xlat
jno
sbb
sbb
into
daa
mov
clc
fcmovnu
into
out
push
das
adc
ret
xchg
cmp
outsb
mov
jmp
std
sahf
fs
aam
pop
mov
ficompl
xchg
daa
mov
out
movsb
aas
xchg
je
mov
mov
dec
adc
jo
sti
scas
and
and
sbb
scas
pop
mov
cltd
mov
push
faddp
sbb
out
inc
sbb
mov
mov
mov
xchg
cmpsl
or
add
sbb
mov
push
imul
aas
cld
dec
rclb
push
pop
icebp
pusha
dec
cld
mov
inc
jecxz
xchg
rorl
mov
inc
daa
loopne
es
pop
sub
ret
cli
mov
daa
aad
scas
divb
iret
sub
jge
aaa
jns
out
sbb
dec
aam
sar
adc
dec
pusha
jo
das
in
xor
dec
flds
adc
test
xor
in
jmp
fists
and
mov
push
inc
clc
and
arpl
push
out
xchg
xchg
pop
pop
inc
mov
aad
xor
jne
push
scas
and
mov
mov
inc
adc
shll
sub
or
repz
xor
stos
bndstx
push
enter
test
std
addr16
icebp
jl
orl
xchg
les
and
mov
bound
aam
rolb
std
pop
aad
inc
mov
sbb
cmp
sub
xchg
mov
lock
pop
or
mov
jb
int3
pop
adc
lea
popf
jo
or
inc
int3
sub
rol
mov
in
pop
push
sub
xor
ja
je
push
push
test
xor
push
inc
int3
inc
jae
mov
test
sbb
inc
rorl
pop
hlt
add
testb
pop
pop
ljmp
inc
addb
orl
mov
in
mov
inc
in
fmull
iret
or
adc
fs
dec
mov
repnz
push
pop
test
mov
and
sub
bound
jmp
test
int3
pop
scas
icebp
fmulp
psrad
pop
add
shll
lea
add
xlat
arpl
mov
jecxz
or
lds
mov
imull
sub
ret
fmuls
scas
ret
or
add
sarb
lret
mov
ljmp
pop
mov
mov
movl
movl
movl
mov
movl
movl
xor
movl
mov
mov
sub
div
mov
xor
mov
div
mov
xor
div
xor
mov
mov
imul
mov
add
div
mov
mov
sub
sub
xor
div
mov
add
cmp
jae
jmp
sbb
dec
push
dec
and
and
jns
jo
sti
sbb
test
sbb
out
fidivl
dec
lret
pop
pop
adcl
mov
orb
js
fisubs
mov
ret
push
push
ljmp
stos
outsb
adcb
mov
jge
pop
nop
out
push
and
pushf
cld
mov
sbb
xor
fisubl
mov
xor
adc
cmp
mov
sbb
jae
xor
sbb
dec
mov
incb
mov
push
cmp
lret
fisubrl
out
icebp
dec
pop
scas
cmp
jns
pop
in
popf
xor
jno
std
adc
subb
xchg
pop
jb
cmpsb
pop
xor
fisubrl
int3
pop
enter
sbb
dec
push
xor
mov
aad
cmc
ret
cmp
mov
pop
pop
push
mov
add
pop
ret
adc
and
sbb
dec
pop
push
mov
jbe
mov
push
dec
mov
gs
paddusb
into
add
jge
add
in
insb
mov
add
pop
jg
mov
fwait
push
scas
mov
outsl
mov
jb
jae
mov
ss
lahf
fildll
adc
sahf
pop
pop
xorb
repz
pop
stos
ficoml
adc
aas
mov
xlat
inc
jp
mov
pop
std
jecxz
push
call
and
adc
cli
fildl
je
loopne
push
ret
cmp
or
cs
popl
xchg
pop
enter
mov
lahf
lods
xchg
je
ds
sub
and
outsl
mov
sub
scas
adc
adc
or
dec
jmp
int3
int3
aam
mov
sbb
xchg
rcr
test
cmpsb
sti
outsl
shl
push
aam
sub
lods
sub
xor
cmpb
xor
insb
shll
jne
nop
aaa
fsubrs
cmp
cmp
jne
call
pop
pop
movsl
sbb
lods
fs
out
movsl
jne
cmp
lret
dec
mov
lock
push
mov
dec
sbb
pushf
in
data16
into
jge
pop
fistpl
jmp
xor
popa
stc
lock
pop
cld
mov
test
hlt
cld
lea
pop
add
xchg
in
or
mov
cmc
stos
sub
js
jecxz
mov
ret
add
and
cmp
adc
xor
nop
mov
sub
sbb
pop
jnp
inc
in
sub
loopne
cmp
add
inc
fdivrl
cmp
add
inc
in
int
add
jmp
push
mov
fistpl
xlat
mov
sbb
test
sbb
leave
lds
daa
xchg
cld
cmpsl
flds
add
cmp
stos
xor
pop
mov
jbe
lea
inc
movsb
push
loopne
bound
mov
or
fnsave
popf
lock
outsb
sbb
push
out
xchg
test
int3
test
jg
test
mov
push
push
jecxz
add
mov
imul
leave
cli
test
pop
pop
mov
testl
in
ljmp
xlat
repnz
loopne
jae
push
mov
push
mov
ret
lret
mov
fimull
mov
mov
fs
vmovhps
xchg
stos
lods
push
fadd
jmp
out
cld
out
movsb
push
xor
nop
xchg
mov
jb
xchg
sub
push
jne
sbbb
mov
xor
jno
jle
out
mov
das
cmp
sub
repz
das
push
inc
repnz
outsb
xor
xor
adc
fstpt
int3
cmpsl
xor
adcl
sbb
leave
call
inc
arpl
mov
scas
repz
dec
add
or
pop
ljmp
push
push
mov
xchg
dec
xor
xchg
sub
cmpsb
sub
jno
sbb
movsb
mov
and
adc
inc
fdivrl
xor
call
je
std
push
mov
and
outsl
and
mov
mov
cmp
daa
imul
imul
repnz
clc
push
inc
adc
sbb
lret
lock
sti
mov
mov
fldl
fsts
pop
movd
ret
mov
cmp
inc
shrb
sbbb
jg
out
test
mov
adc
movsb
or
insb
and
xor
mov
hlt
push
loopne
outsb
std
enter
cmp
pop
in
cwtl
inc
dec
lret
sub
int
stos
leave
mull
call
ss
test
add
in
fsubr
sbb
push
xor
outsl
dec
scas
lods
test
daa
hlt
test
adc
out
fidivl
andb
sbb
pop
lret
cltd
int
ljmp
sbb
sti
push
push
xchg
testb
sub
scas
in
addr16
jbe
daa
sbb
xchg
mov
and
xchg
jp
stc
xchg
ljmp
mov
in
add
mov
xchg
jp
dec
xrelease
push
inc
call
movl
jmp
aas
mov
mov
dec
mov
sbb
sbb
bound
testl
push
push
sub
xchg
push
mull
mov
inc
cmpsl
mov
mov
gs
inc
test
inc
pusha
jmp
dec
pusha
jae
push
jl
sub
popa
push
repz
jb
xor
arpl
lds
out
cmpsl
or
imul
cmp
sub
pop
jb
jle
xor
mov
enter
aaa
and
roll
in
xlat
outsb
xor
cmp
daa
xchg
push
sarb
adc
jae
xorl
jae
add
ja
mov
inc
cmp
mov
inc
subb
test
movsl
xor
xchg
push
inc
dec
pushf
jb
pusha
imul
adc
push
cmp
inc
add
cmp
int3
lods
xchg
xor
aad
js
sarb
mov
lret
out
imul
pushl
jg
data16
out
repz
orb
and
sub
daa
and
push
mov
push
mov
push
out
mov
jnp
mov
adc
je
cmpl
add
je
jns
jne
lret
sbb
dec
or
cmpsl
jns
gs
push
pop
or
in
pop
subl
addb
arpl
idivl
in
movsl
mov
in
xor
mov
loope
xor
inc
jo
sbb
pop
es
popa
enter
sahf
jmp
mov
inc
sti
fst
in
out
inc
sub
mov
lret
lahf
fwait
clc
jle
cs
shl
inc
cmp
jo
add
mov
sti
dec
push
imul
les
jge
push
mov
lea
mov
adc
cld
dec
into
cmp
repz
adc
sub
aaa
fisubrs
repnz
ljmp
mov
jecxz
dec
and
jae
cmc
jne
out
mov
push
sub
test
dec
das
repz
lods
mov
lret
ficoml
jnp
int3
movsl
je
cmp
adc
or
pop
pop
dec
addps
cld
add
int3
nop
sub
or
jno
pop
mov
lods
mov
pop
cmpsl
imul
jg
aaa
mov
push
push
lret
inc
jmp
xlat
sbb
lods
shrb
in
sbb
out
fldcw
lret
inc
fsubrs
pop
div
mov
jmp
lahf
ds
xor
lcall
outsl
or
mov
adc
sbb
outsb
adc
mov
sahf
jp
mov
mov
or
pop
inc
jle
sbb
sub
fistl
mov
in
jl
mov
rolb
repz
cwtl
iret
and
or
addr16
xlat
stos
jno
ljmp
xor
lcall
fwait
shlb
mov
mov
push
mov
mov
mov
sub
sbb
pop
pop
hlt
stos
out
outsb
stc
xchg
lock
std
mov
sub
push
xchg
inc
cmp
cmc
call
cmp
jl
clc
inc
setne
jmp
cltd
mov
sub
sti
arpl
sub
jb
cmpsb
sbb
fsubs
xlat
aaa
pop
cltd
fisttpl
mov
lahf
das
hlt
fldt
add
and
loopne
inc
mov
jns
add
xchg
cltd
shll
ret
mov
and
sbb
ja
push
js
jne
shl
pop
stos
out
inc
mov
repz
rolb
mov
mov
dec
cwtl
aas
jne
xor
xchg
hlt
enter
ja
rorl
mov
enter
mov
enter
cmpsb
cs
repz
cmp
push
sbbl
jp
add
loope
add
je
ret
faddl
jmp
cltd
jg
outsb
lret
and
ds
sbb
int3
sbbb
or
push
xchg
push
xor
mov
jecxz
mov
add
ss
sbb
lret
fisubrs
shll
bnd
orl
ds
in
enter
rclb
dec
ss
or
popa
push
aad
mov
mov
and
push
sti
arpl
sbb
jmp
and
aas
pushf
jle
xchg
add
mov
ds
imul
pop
push
xor
dec
inc
jle
rcr
xor
popf
sti
xchg
mov
insl
cmp
xor
jge
fsub
out
movsl
in
pop
pop
sarl
popf
outsb
mov
pushf
lock
lods
and
popa
mov
lds
pop
ljmp
xor
fcoms
sar
call
dec
insl
cmc
ljmp
mov
pop
cmpsb
sub
pop
add
leave
insl
or
loopne
shlb
imul
lret
fdivrl
xor
xchg
aad
mov
ffreep
dec
push
mov
and
rolb
add
sub
mov
mov
imul
mov
xor
sub
add
and
mov
sub
mov
sub
mov
sub
mov
mov
mov
mov
xor
add
xor
and
lea
mov
mov
add
div
mov
mov
sub
xor
div
add
cmp
jb
xor
inc
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
add
and
xor
mov
sub
movl
movl
mov
movl
movl
mov
mov
imul
xor
or
xor
mov
sub
mov
mov
mov
jmp
push
push
push
scas
sbb
inc
pop
jns
jo
pop
jmp
xor
sbb
test
sbb
push
call
out
js
std
or
jg
fstpt
out
hlt
mov
sub
cltd
mov
jo
pop
fistl
ror
jbe
or
xchg
sbb
stc
jns
mov
out
jns
jno
imul
movsl
ljmp
xchg
lret
mov
sbb
ss
cltd
mov
aad
movsb
fiaddl
adc
ror
les
js
jnp
fsubs
cs
sub
mov
mov
mov
xchg
mov
mov
pop
dec
xchg
or
out
lret
jbe
mov
movsb
out
lods
cmpsb
bound
xchg
adc
jmp
ds
leave
fs
adc
xor
mov
jge
ja
dec
in
rorb
fwait
fsub
sub
and
lcall
cs
out
lret
jnp
mull
fldcw
lcall
cmp
dec
push
jbe
push
cmp
ss
sahf
and
aas
mov
aaa
std
pop
push
mov
es
lods
and
mov
aas
push
xchg
inc
push
cmp
push
xor
cltd
popa
sahf
pop
sarl
mov
mov
dec
xchg
rclb
lret
pop
push
pop
inc
xlat
ret
rorl
xor
xchg
loop
insl
fsts
pop
stc
dec
lret
data16
loopne
mov
in
dec
inc
pop
stc
cmp
cmc
jle
in
pop
inc
aaa
sbb
mov
imul
fidivrs
or
push
add
pop
xchg
push
sbb
retw
sub
and
test
in
and
inc
lods
icebp
sub
mov
jp
sbb
adc
dec
pop
fstl
push
lret
lret
bsr
pop
sti
addr16
test
dec
xor
and
scas
test
flds
xchg
jge
or
hlt
inc
cs
adc
or
mov
mov
xor
aam
pop
xor
mov
xchg
call
addr16
add
cmp
ja
je
jl
mov
cli
adc
mov
outsb
xchg
jmp
jecxz
fisttps
mov
scas
iret
in
pop
dec
xchg
inc
xlat
in
daa
int
push
popf
rorl
movsl
jno
push
sti
add
adc
dec
enter
cmp
jb
stos
mov
cwtl
aas
pop
out
and
test
lcall
ret
jecxz
cmc
and
outsb
mov
xchg
xchg
loop
arpl
stos
adc
faddl
jnp
js
int3
dec
add
add
sub
xor
div
mov
mov
sub
mov
mov
mov
jmp
jmp
push
and
cmp
stos
shl
sbb
mov
pusha
or
clc
jg
std
mov
jae
mov
lret
pushf
mov
out
sbb
add
cmc
fiaddl
add
sar
adc
js
push
iret
iret
pushf
rcl
adc
fwait
mov
jmp
mov
cld
sub
dec
cld
cld
pop
pop
es
or
out
lods
push
mov
pop
rorl
fwait
jp
xor
mov
jo
adc
cld
cmp
inc
mov
pop
mov
add
stos
fdivl
hlt
jmp
xchg
dec
mov
mov
and
popa
sbb
mov
stos
aas
push
fidivrs
jecxz
cmp
fs
cmp
mov
and
push
pushf
add
push
dec
in
dec
inc
shr
inc
cmp
jmp
xchg
lret
or
cmpl
mov
mov
js
jbe
out
mov
fstpl
add
rcl
dec
clc
ret
lods
inc
sbb
call
movsl
cld
ds
aam
stos
aad
das
pop
ljmp
leave
push
aaa
adc
mov
jnp
loop
aaa
popf
xor
jb
add
push
ud2
lods
jae
add
or
sbb
jne
dec
in
mov
mov
in
cmp
aaa
jp
test
arpl
mov
cmp
add
out
mov
jno
in
jmp
adc
adc
int3
movsl
mov
sub
pop
lahf
or
sbb
pop
xor
loop
leave
insl
filds
add
enter
loopne
sarl
addl
xchg
push
imul
dec
xchg
movsb
in
repnz
insb
pop
lock
xchg
add
fwait
cmpsb
push
and
adc
adc
adc
jle
pop
dec
or
neg
cli
scas
icebp
or
in
mov
mov
das
icebp
in
sar
out
pop
pusha
push
push
xor
pop
sub
je
repnz
xchg
repz
jp
xchg
mov
mov
jo
icebp
adc
cwtl
mov
out
cmp
pop
and
aam
inc
hlt
fs
stc
cld
push
cmp
mov
adc
sbb
jnp
les
pop
scas
and
jae
jae
stc
push
gs
clc
jmp
ss
pop
jbe
cmpsb
decl
stc
std
pop
repnz
aaa
push
xorb
test
mov
insl
or
push
fcoms
mov
ds
sub
es
mov
mov
imul
mov
imul
or
mov
or
xor
lea
mov
and
add
xor
add
cmp
jne
pop
pop
pop
leave
ret
push
mov
sub
push
push
movl
jmp
hlt
aam
adc
pop
and
cmp
pop
lds
sbb
xor
sbb
xchg
shl
mov
jecxz
insl
mov
sbb
xlat
push
jecxz
cwtl
popf
mov
test
pop
jne
pop
ficoml
cmp
xchg
adc
dec
adc
jno
ret
cmp
inc
inc
rcrb
and
jnp
movsl
wrmsr
cwtl
mull
or
fnstcw
cli
leave
daa
lahf
or
cmp
xchg
mov
rorl
in
test
gs
sub
jmp
enter
fcmovne
dec
stc
lds
shlb
mov
imulb
inc
pop
pop
and
cmc
aam
pop
mov
cmpsb
xchg
adc
inc
or
mov
neg
sub
sbb
sbb
in
js
jg
jl
mov
add
sub
outsl
in
jle
add
sbb
sarb
test
out
cmp
daa
inc
xor
les
push
lea
inc
jo
xor
or
je
sbbb
add
cmp
adc
cmp
sub
xchg
adc
xor
mov
push
out
inc
stos
push
push
mov
lds
cmp
repz
or
incl
cmp
fucom
xchg
cli
cli
or
adc
es
jns
test
adc
js
loope
push
fldenv
xchg
add
test
pushf
mov
jg
jae
repz
jp
fldcw
lea
cmp
call
pop
test
xchg
imul
adc
mov
mov
xor
sbb
push
mov
dec
and
arpl
cmp
js
mov
mov
mov
cmp
addr16
sbb
les
inc
cmp
jno
js
jnp
lret
outsl
hlt
push
dec
popa
or
hlt
inc
les
jl
jns
mov
add
push
dec
lods
mov
push
jecxz
xlat
rol
adc
push
push
ljmp
jmp
mov
adc
test
add
xchg
mov
or
aas
and
mov
loope
das
out
sub
sub
xchg
outsb
sub
sahf
sub
jae
aad
sub
adc
loop
mov
and
shl
mov
xor
mov
xchg
lcall
call
push
cmp
test
xchg
ljmp
xchg
daa
cmp
mov
add
jbe
cmp
mov
mov
dec
int
fistpll
pop
bound
fdiv
jae
add
or
pop
and
inc
neg
leave
dec
xchg
icebp
pop
hlt
sub
lret
lds
inc
lret
aam
jo
mov
pop
aam
xor
mov
negl
cmpb
adc
loope
je
adcb
cmp
aam
mov
lcall
push
pop
mov
fucom
pop
scas
cmp
sub
dec
es
shrb
js
mov
push
in
adc
int3
les
mov
mov
js
test
ja
dec
test
cltd
or
movl
mov
mov
add
or
mov
lea
jmp
lcall
ficomps
inc
dec
pop
jle
inc
sub
xor
sbb
jo
data16
lahf
lcall
adc
cmp
add
sub
imul
leave
arpl
cs
xchg
and
cli
jmp
push
ret
ds
inc
lahf
mov
psrlw
loope
repnz
inc
push
or
xor
mov
or
fidivrs
mov
jecxz
int
pusha
out
insl
fsubrl
ret
arpl
jmp
or
stc
out
sub
push
clc
push
adc
xorb
jb
popf
lods
int3
xchg
out
leave
xor
aaa
outsl
mov
or
add
call
jl
dec
push
mov
pop
into
xchg
aaa
in
or
xchg
xchg
in
push
std
cli
movsb
scas
mov
negl
mov
std
jno
push
daa
shrb
cld
mov
push
cmp
or
movl
sub
shll
mov
or
pop
mulb
or
jo
push
outsl
dec
popa
shl
xor
out
test
fsubrs
lock
mov
inc
pop
sbb
mov
int3
xchg
inc
cmp
push
ja
mov
and
shrb
cmp
pop
mov
into
jmp
pushf
sub
and
mov
stc
stos
inc
or
push
inc
movsb
dec
add
mov
ret
xchg
add
cli
xchg
pushf
sti
shl
mov
repnz
pushf
xor
pop
push
mov
rcrb
pop
push
divl
mov
insb
es
aad
ss
ljmp
push
or
dec
pop
repz
pop
daa
jb,pt
ljmp
lods
lods
lds
jbe
push
test
jl
inc
jp
cltd
adc
sbb
xchg
jmp
data16
rcrb
arpl
clc
mov
loopne
gs
xchg
push
fwait
mov
mov
mov
pushf
inc
ljmp
pop
jnp
scas
adc
movsb
aas
pop
mov
sarb
lret
ret
sub
fdivs
fnstsw
shll
jbe
mov
insl
ret
aam
lret
pop
loopne
scas
push
out
ss
push
pop
decl
fildl
test
lea
nop
sbb
loop
mov
pop
scas
sub
pusha
pusha
jno
fsts
rcl
scas
in
test
dec
xchg
xor
mov
ret
jb
cmp
mov
in
shll
pusha
imul
sub
les
jmp
mov
pop
repnz
int3
pop
in
jbe
xchg
divl
xorl
shll
inc
scas
mov
or
pop
ljmp
loope
icebp
fmuls
xrelease
dec
negl
int
ffreep
sub
inc
in
into
xchg
arpl
or
test
fmuls
in
in
test
pop
pop
cmp
adc
mov
jp
rorl
dec
mov
sti
xor
mov
sbb
cmp
xchg
dec
push
sti
stos
dec
int3
lret
jo
ljmp
pop
jg
sbb
mov
movl
movl
mov
mov
and
xor
jmp
out
icebp
aaa
insb
aaa
sub
mov
or
sbb
jbe
clc
stc
in
jg
dec
sub
push
cmp
adc
out
add
test
dec
pop
cmp
rorb
dec
lret
or
mov
shlb
push
mov
cmpsb
jge
cmp
dec
aad
int
je
push
aaa
push
fisubs
mov
scas
aas
ds
ja
gs
mov
xchg
xor
or
out
adcb
adc
fwait
dec
push
cmp
cli
out
xor
mov
mov
jg
dec
mov
cwtd
xor
outsl
jle
mov
mov
adc
xchg
adc
loop
lahf
sub
xor
mov
jnp
lret
rorl
cmp
icebp
or
cmpsb
or
adc
sahf
inc
insb
loopne
sbb
pop
loope
add
mov
enter
test
push
cld
rcrb
dec
add
push
mov
jo
jne
fstpl
fsubs
xor
gs
fucomip
adc
std
std
shlb
insb
int3
mov
inc
mov
mov
fcom
out
inc
out
fdivrl
dec
mov
jbe
call
mov
movsl
dec
sbb
inc
imul
jno
xor
or
ds
aaa
push
fs
cmc
push
inc
add
xor
testl
mov
mov
push
inc
push
je
cmp
dec
xor
into
mov
mov
jl
insb
xor
push
xlat
stos
cmpb
or
inc
ret
ss
loope
pop
xchg
sbb
sub
int
cli
cmp
or
mov
xchg
mov
call
sar
sbbl
adc
lcall
je
xchg
sub
shrb
aad
mov
mov
cmp
xorl
mov
sub
nop
sarb
cmp
inc
pop
dec
cmp
jg
and
or
mov
push
negl
fisttps
scas
jae
jbe
movsb
jmp
sub
ret
mov
mov
push
mov
fists
test
int
and
push
cmp
sbb
mov
sub
ja
jge
pop
mov
lock
out
jle
and
sub
iret
jp
je
scas
jae
push
push
sub
aad
add
insb
dec
fldcw
aas
daa
xorl
pop
scas
nop
mov
ret
scas
mov
or
xor
sub
and
fs
hlt
mov
outsl
repnz
mov
mov
mov
add
aad
enter
push
nop
mov
xor
or
hlt
repnz
pop
nop
mov
sbb
mov
xchg
jmp
daa
lods
push
loope
cs
popa
aaa
scas
stos
ss
xchg
pop
xchg
daa
or
xor
outsb
fidivl
movsl
mov
mov
add
inc
scas
mov
lahf
mov
pop
out
pop
xchg
data16
gs
shll
lahf
mov
add
mov
jmp
sbbb
repnz
imul
xor
lea
mov
movl
movl
mov
xor
push
pop
div
jmp
jb
pop
in
sbb
push
lret
rcrb
or
cwtl
sbb
xor
sbb
call
es
or
ds
fwait
push
and
ret
call
stc
mov
xchg
sub
inc
mov
out
int
add
sub
fstl
rorb
mov
fdivp
mov
inc
das
nop
mov
sti
mov
stos
pop
fnstsw
xchg
je
cwtl
jmp
shr
sbb
mov
xor
dec
sbb
aad
clc
rorb
add
or
xor
pop
sbb
and
mov
or
daa
jmp
push
out
inc
sub
add
jb
leave
cmp
and
lcall
cli
loopne
push
gs
xchg
lret
push
insl
outsl
push
sbb
dec
cli
inc
mov
int3
and
adcl
jmp
push
sbb
ret
xor
mov
mov
arpl
aas
dec
daa
mov
nop
loope
xor
or
lock
mov
rcrl
jle
push
cmp
out
jecxz
pop
mov
int
addr16
lods
lock
pop
fcompl
xchg
mov
push
push
gs
cld
and
hlt
push
xchg
fdivrl
or
xchg
imul
jno
push
jno
sub
pop
mov
sub
popf
inc
frstor
ss
xchg
mov
insl
sbb
adc
pop
out
pop
in
sbb
xor
push
or
jecxz
out
stos
cmpsl
pop
enter
xorl
xchg
ds
sbb
and
cmp
sarb
mov
xchg
or
inc
mov
ss
push
popf
call
push
mov
add
out
xchg
xor
cld
xor
cwtd
and
inc
aad
and
dec
jle
xor
insb
outsb
lods
mul
movsb
jle
dec
jle
dec
movsb
jmp
out
out
and
in
sarb
pop
iret
add
xchg
fwait
leave
sub
into
jecxz
ja
lods
mov
dec
push
xchg
xchg
push
bound
push
pop
xchg
mov
int
mov
dec
ja
dec
xor
jmp
sbbb
jp
pop
cmp
jg
or
orl
jmp
push
add
aaa
int3
push
lret
mov
scas
mov
and
fmull
push
adc
inc
mov
sahf
fs
imul
pop
lret
data16
stc
hlt
pop
or
fs
sub
push
push
mov
push
and
jne
rolb
xor
sbb
sbb
pop
into
mov
rol
test
data16
jns
cmp
into
inc
adc
ficoms
mov
out
cmp
jnp
and
ret
inc
push
jg
dec
lea
cmp
jo
jle
inc
das
xchg
fs
dec
adcl
cmpsl
insb
adc
xor
fdivl
outsl
xchg
lods
xchg
int
cld
movsb
push
mov
mov
scas
push
push
mov
jb
insb
cmp
mov
push
xor
jge
lods
je
inc
cli
jns
xor
mov
fwait
mov
jge
out
gs
shll
shrl
out
xor
and
and
aaa
pop
inc
xchg
pushf
ja
xchg
in
xchg
js
mov
aam
cmp
rcr
cmpb
pop
inc
pop
jno
sbb
mov
xor
push
add
and
mov
sub
mov
movl
movl
movl
mov
mov
lea
mov
div
mov
lea
mov
movl
movl
movl
mov
mov
xor
sub
mov
sub
xor
mov
movl
pop
mov
movl
movl
mov
mov
mov
xor
xor
div
mov
and
sub
mov
movl
movl
movl
movl
movl
movl
mov
add
mov
xor
mov
or
mov
or
mov
and
mov
sub
mov
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
add
adc
or
mov
or
or
mov
mov
or
mov
sub
mov
sbb
mov
or
or
add
mov
adc
mov
movl
movl
movl
movl
movl
movl
movl
xor
inc
mov
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
movl
mov
movl
movl
mov
or
add
mov
or
mov
sub
mov
sub
imul
add
mov
push
mov
lea
mov
xor
div
mov
lea
push
mov
mov
push
push
jmp
fmull
fiaddl
clc
push
cmp
mov
xor
sbb
rcr
clc
shrl
xor
mov
cmp
cmp
push
out
xchg
cmp
pop
stos
adc
ljmp
das
xchg
push
pop
test
dec
sbbl
lods
pop
cmp
jne
adc
cmp
sbb
test
shrl
xlat
cmc
xchg
test
hlt
in
mov
sub
mov
orb
loop
add
add
mov
mov
mov
or
popf
pop
iret
and
and
inc
adc
arpl
or
jb
ret
pop
insb
or
rcrl
sbb
cwtl
mov
jo
pop
ds
aad
ds
xor
lds
sub
jnp
fwait
xchg
imul
jnp
aas
loopne
add
insb
std
je
out
es
and
mov
in
or
out
xor
rcrl
data16
into
cmp
lock
mov
mov
outsl
or
adc
jns
testl
cli
xchg
out
jbe
pop
inc
fnstenv
out
xchg
xor
dec
aad
xor
in
and
mov
pop
daa
inc
fldt
xchg
push
inc
jb
cs
cmp
sub
jnp
stos
cwtl
cltd
mov
mov
subb
adc
mov
sub
pop
scas
das
cmp
jb
loop
mov
mov
xchg
jmp
fldcw
jecxz
or
jecxz
and
and
xchg
dec
arpl
sbb
test
mov
or
test
bound
pop
inc
iret
out
sub
cli
aaa
fisubs
fs
pop
pop
sbb
pop
mov
ret
push
add
sbb
pop
cli
lea
jge
cmp
test
lret
push
sub
adc
cmp
std
jmp
push
stos
pop
lea
xchg
iret
or
mov
cmp
orl
fcoms
bswap
ja
mov
adc
sub
sub
in
mov
and
pop
out
xchg
fldl
fld
fildl
pop
addr16
popa
push
adc
outsl
mov
aaa
push
loop
daa
fiadds
aad
add
mov
mov
cmp
dec
cmp
fs
insb
xchg
jle
cmpsl
jl
inc
in
sub
mov
mov
sbb
lods
pop
in
inc
or
dec
das
cs
rclb
push
push
xchg
push
adc
mov
mov
int3
xor
dec
mov
out
scas
or
mov
adc
ret
test
jg
stos
mov
addr16
aaa
sbb
pop
push
cmpl
pop
push
movsl
jne
les
ret
in
lret
in
std
stos
sti
imul
fmuls
ljmp
je
jp
xor
loop
lcall
or
out
push
inc
mov
add
out
cmc
in
popf
es
or
jo
or
sahf
imul
jno
xchg
sti
mov
into
jp
or
or
mov
es
mov
dec
out
adc
inc
dec
leave
pop
jbe
pop
ja
in
mov
and
push
call
mov
mov
push
push
or
or
push
push
call
mov
mov
xor
mov
mov
mov
and
jmp
xchg
fistl
sbb
sbbb
mov
mov
mov
sbb
xorb
pop
scas
addb
daa
mov
test
mov
dec
add
cli
js
dec
divb
aas
dec
movsb
xchg
dec
lret
adc
fisubrs
ljmp
cs
adc
addr16
mov
paddw
cltd
or
inc
paddw
mov
add
lahf
cmp
and
aad
jmp
push
sub
sbb
idivl
mov
test
test
shlb
dec
fdivl
mov
mov
gs
add
cli
pop
movsl
pop
sbb
push
push
shll
repz
pop
dec
scas
roll
out
popl
pushf
mov
int3
push
lcall
mov
xchg
lea
aas
push
lods
fistps
mov
pop
sub
xchg
loopne
fistpl
cmp
scas
insl
imul
pop
cmp
scas
sub
sbb
ficompl
mov
ss
addb
mov
jnp
lods
and
aam
push
adc
pop
cmp
cmpsb
pop
xor
mov
pop
rclb
sbb
add
iret
enter
mov
xchg
jb,pn
loopne
mov
adc
and
cmp
insb
xlat
xchg
sbb
enter
sub
repnz
push
push
icebp
mov
inc
movsb
stos
or
mov
sub
and
in
test
and
ficoml
xor
stos
cld
ljmp
sbb
movsl
mov
pop
js
cmpb
xchg
inc
xchg
nop
dec
divl
or
and
rcll
cli
nop
or
pop
std
or
add
in
inc
int3
add
loopne
add
out
insl
mov
cli
sti
arpl
loope
pop
add
mov
xchg
popa
lea
jge
inc
mov
ret
xchg
pushw
out
inc
jo
dec
jnp
cmp
xlat
mov
insb
pop
and
fistpll
jmp
cs
pop
pop
negl
adc
hlt
inc
mov
out
xchg
pop
pop
pop
testl
test
pop
jns
loope
push
push
stos
cmpb
cs
stc
inc
std
ret
int
xchg
pop
loope
pop
mov
mov
mov
mov
jb
or
adc
ljmp
shrb
xor
fwait
dec
ret
mov
inc
jp
cltd
jne
cmp
pop
popf
push
xchg
test
jno
jae
insl
jmp
push
pop
cwtl
xchg
shrl
dec
lods
test
fwait
or
mov
dec
lods
and
iret
adc
sbbl
cmp
scas
push
push
das
mov
push
aaa
jge
and
jmp
mov
cmp
inc
lret
pop
jo
lods
insb
push
adc
lods
frstor
aam
lds
inc
push
and
dec
das
out
imul
xorb
shll
fistpll
movsl
jle
dec
decb
jg
jge
mov
cld
jne
xor
mov
js
mov
jmp
inc
xor
mov
pop
ljmp
fsubr
movsb
repnz
fwait
bound
add
incl
add
mov
insl
ret
call
mov
mov
mov
sub
xor
imul
add
xor
xor
mov
div
cmp
jne
mov
xor
mov
div
mov
mov
xor
sub
mov
xor
sub
or
lea
push
mov
push
pop
div
mov
xor
div
mov
mov
xor
xor
div
imul
sub
push
mov
add
push
mov
sub
mov
pushl
call
mov
mov
lea
mov
incl
mov
mov
xor
shld
shl
mov
mov
xor
xor
cmp
jne
cmp
jne
mov
mov
jmp
lea
mov
mov
mov
mov
mov
sub
mov
mov
mov
sub
mov
movl
movl
mov
mov
mov
mov
pushl
pushl
pushl
pushl
pushl
push
push
pushl
mov
call
mov
mov
pushl
call
mov
push
add
push
push
jmp
mov
push
sbb
sbb
cmc
cmp
push
mov
sbb
adc
sbb
loop
xor
cmpsl
loopne
loopne
pop
push
fisubrs
in
leave
fwait
jg
inc
leave
jecxz
aas
dec
xchg
inc
xor
cmp
mov
pop
jnp
jge
int
dec
pop
data16
jb
imul
jb
xor
xchg
mov
pop
iret
push
fisttpll
cld
jp
adc
icebp
adc
or
jmp
inc
jae
xor
sub
testl
test
xchg
popa
cli
cmp
cmc
mov
cmp
lock
jo
jecxz
jmp
icebp
imul
mov
xor
out
inc
sub
std
loopne
loope
mov
mov
scas
or
mov
imul
insl
cltd
cmpb
mov
add
pushf
dec
shl
call
adc
mov
inc
nop
push
shlb
add
sti
pusha
test
adc
mov
popf
add
adc
xchg
outsl
pop
shlb
roll
pop
lret
in
loopne
push
imul
notb
mov
inc
sub
lods
je
fs
xchg
lahf
subl
in
dec
cmpb
insl
mov
xchg
sbb
jecxz
clc
push
loop
test
ja
adc
jbe
push
data16
adc
int
in
push
fucomip
fsubs
out
xchg
jno
fdivs
mov
mov
xchg
movb
push
mov
xchg
std
mov
pop
and
mov
pusha
pop
imul
testl
adc
nop
adc
aas
loopne
dec
inc
fidivl
pop
cltd
int
lock
mov
out
push
dec
loop
xlat
popa
cmp
jo
sahf
iret
pop
ljmp
js
cld
not
pop
xor
push
lods
push
jno
dec
sahf
lock
test
push
ret
rol
cmpsl
add
gs
loope
or
xchg
int
lret
loopew
mov
subl
cmp
shrl
jns
xor
int3
mov
fimuls
mov
loope
popf
xchg
call
inc
or
mov
mov
ret
stc
xor
sbbl
and
push
int
xlat
jns
addb
jb
dec
ret
dec
add
xor
fnstcw
xchg
mov
mov
insl
arpl
insl
inc
fstps
in
push
push
xor
cmp
add
adc
dec
dec
mov
lahf
fnsave
jp
pop
leave
pushf
and
push
sub
jge
sub
dec
mov
sub
jbe
fucompp
in
adc
adc
shll
cmp
xchg
sub
icebp
xor
fsubs
xchg
call
outsb
imul
mov
or
dec
filds
mov
ljmp
fwait
fwait
arpl
sub
fwait
inc
inc
sbb
inc
or
inc
sbb
mov
sbb
sub
fimuls
lds
pop
xchg
add
add
push
ja
inc
stc
mov
push
adc
setns
or
es
or
int
cltd
std
int3
or
cmpsb
mov
sahf
lods
mov
test
ss
mov
jmp
mov
mov
pop
pop
leave
ret
push
mov
jmp
cmp
mov
xor
add
sbb
test
add
sbb
scas
pushf
mov
pop
inc
je
adcl
mov
lcall
loope
or
xor
xchg
xchg
shrl
jns
sub
cmp
mov
xchg
inc
jae
lock
inc
dec
cmp
push
mov
pusha
xchg
mov
cli
les
xchg
xchg
sti
aad
mov
adc
pop
fimull
pop
or
mov
test
xchg
fistpll
test
push
push
adc
and
mov
jmp
inc
lcall
lods
mov
out
xchg
xor
repnz
mov
push
imul
push
dec
inc
mov
xchg
fisttpll
jmp
xchg
pop
in
in
movsb
xor
ja
mov
loop
lds
sbb
or
mov
xchg
adc
inc
popa
movsl
pop
sbb
ss
jbe
data16
fdivrl
rorb
mov
std
mov
ror
test
scas
in
jg
arpl
int
stc
lds
add
in
shrl
cmp
adc
aas
iret
push
je
push
xlat
jle
jge
repnz
or
aas
inc
mov
dec
mov
mov
lret
pop
incl
rcr
fsts
dec
mov
mov
out
xchg
insb
ret
icebp
aas
and
mov
xchg
jb
daa
pop
notl
mov
cltd
fidivrl
push
sub
dec
xchg
jbe
decb
cmpsb
dec
cli
mov
xor
mov
add
mov
in
rolb
sti
into
cmp
inc
sub
adc
cmpsl
cmpb
add
leave
sbb
mov
out
and
fwait
repz
dec
fdivrl
sbb
jnp
mov
add
mov
shrl
insl
push
xchg
nop
ss
inc
dec
popa
test
add
fdivrp
xlat
ljmp
rcll
adc
push
iret
sub
push
push
movl
movl
movl
movl
movl
movl
jmp
mov
xor
movsl
mov
mov
sbb
mov
pop
daa
mov
mov
cmpl
stc
les
cwtl
or
mov
mov
popf
sahf
sbb
ss
add
cmp
movsb
out
nop
jge
jp
lods
and
and
push
les
push
or
sub
cmpsb
inc
jl
cwtl
inc
or
and
mov
inc
pop
jmp
in
fsub
add
xchg
mov
fcom
and
pop
cmp
and
sbb
nop
pop
adc
out
lret
andb
dec
rolb
sbb
cmp
cmp
mov
insb
or
push
std
imul
in
das
fwait
in
je
xor
xor
xchg
repz
cmp
out
stos
push
in
cmp
xor
sub
stos
jmp
lret
and
loop
call
out
pop
and
loope
push
jnp
pop
arpl
sub
mov
imul
jg
jmp
rclb
movsb
nop
cmp
enter
jno
cmpsl
les
out
mov
ljmp
sbb
sbb
ljmp
out
pop
adc
fs
outsb
addr16
pop
or
roll
xchg
dec
fcomps
adc
and
mov
orb
or
or
xchg
dec
sub
mov
popf
cs
addr16
or
lahf
and
sahf
pop
pop
dec
outsl
xor
mov
mov
in
imul
inc
movsb
cli
lahf
xor
aad
adc
xlat
pop
mov
xor
jle
jmp
jnp
sub
mov
lods
mov
sbb
dec
popf
xchg
or
ret
fists
loopne
push
clc
inc
xchg
lahf
aad
dec
mov
jl
mov
cwtl
sub
or
and
adc
and
mov
xchg
jae
add
notb
cmpsl
icebp
outsl
fadds
ss
jbe
xchg
and
fcomps
mov
jmp
dec
icebp
imul
jp
loop
loope
pop
mov
sbb
jle
inc
movsl
jg
pop
sub
inc
call
push
lock
push
jmp
sub
and
jb
push
stos
push
jg
jo
mov
sbb
cmpsb
repz
dec
xchg
push
test
incb
ret
pop
push
in
mov
sahf
sbb
outsb
mov
mov
push
fdivrs
iret
and
subl
bound
cmp
jmp
xor
in
jb
add
shl
fcoml
inc
jge
orl
fmuls
out
inc
fwait
dec
les
jb
push
inc
iret
pop
jecxz
mov
cmp
not
mov
int
popf
pop
cwtl
insl
mov
cmp
mov
repz
cwtl
stos
push
cmp
lods
push
adc
jne
fldt
push
inc
cli
psllw
mov
push
cwtl
pop
xchg
xor
sbb
mov
aam
push
lods
iret
fidivl
das
push
out
dec
repz
xchg
xchg
push
sub
iret
js
mov
mov
mov
dec
cmp
jbe
aam
cli
hlt
dec
pand
das
xor
aas
scas
in
mov
ret
pop
adc
adc
adc
sarb
sbb
xchg
or
inc
jo
and
stc
out
push
cwtl
sub
cmpb
out
iret
sbb
push
popa
lock
pop
mov
sub
ds
jnp
sti
cmp
fistps
push
jmp
jl
repnz
pop
inc
or
out
mov
xchg
hlt
sub
dec
lahf
and
mov
sub
idivb
inc
mov
pushf
or
or
popf
fmull
ss
lcall
xchg
jb
arpl
mov
and
push
pusha
negl
cli
aam
movb
out
add
dec
pop
mov
out
addr16
int
and
pusha
push
jmp
call
mov
test
int3
ds
mov
jo
mov
les
repnz
sub
fdivl
or
mov
mov
imul
idivl
insb
sbb
or
adc
jle
pop
mov
lahf
mov
mov
sbb
out
in
jno
push
push
call
mov
mov
add
adc
and
push
and
or
push
or
xor
xor
push
push
call
mov
movl
movl
movl
movl
xor
jmp
leave
xchg
dec
sub
sub
mov
outsl
add
test
adc
sbb
xchg
pop
push
dec
test
clc
aas
jecxz
ja
scas
std
jb
adc
hlt
sbb
inc
xchg
mov
sti
dec
xor
inc
mov
test
ret
testb
bound
sub
fidivs
andb
decl
lcall
rcl
push
dec
sbb
mov
fistpl
in
pusha
ror
mov
not
dec
inc
mov
dec
ljmp
adc
dec
inc
mov
jns
jns
cmpsb
dec
sbb
sub
add
imul
add
nop
dec
stos
inc
bound
stos
or
or
loop
mov
jp
mov
push
pop
pop
mov
mov
fistpll
mov
daa
daa
std
mov
shl
int
xor
add
mov
mov
adc
loope
dec
aas
fwait
cmp
xor
ficoms
fcomps
lret
xchg
out
push
cmp
add
jp
idivb
orb
rolb
je
push
sbb
add
lods
cmc
jecxz
adcl
cltd
fwait
jo
sub
cmp
mov
cmp
and
aas
aad
xor
push
jnp
pop
icebp
shr
cltd
roll
mov
dec
inc
or
mov
add
into
test
push
mov
jae
mov
xchg
adc
adc
in
data16
subb
mov
rep
and
movsb
jg
iret
mov
or
xchg
shlb
in
push
imul
inc
aas
in
mov
icebp
imul
jmp
mov
add
lds
in
adcb
sub
sbb
jne
inc
ljmpw
loop
sbb
je
dec
in
mov
mov
xor
pop
test
xchg
push
cli
jp
outsl
adc
pop
stos
ds
test
add
ds
mov
cmc
add
call
and
xchg
inc
in
mov
pusha
mov
cmp
and
repz
inc
hlt
pop
xor
add
or
add
jge
mov
mov
push
push
push
call
mov
mov
or
or
push
add
push
adc
push
push
call
mov
lea
xor
mov
jmp
insl
jmp
cwtl
xchg
popf
pusha
outsl
mov
push
popa
jo
cwtl
sbb
test
inc
das
sub
mov
jl
clc
out
aad
add
cmp
sbb
test
mov
repnz
pop
arpl
rep
repz
pop
mov
and
and
cld
lock
mov
std
leave
mov
mov
je
push
inc
pop
and
mov
mov
xchg
push
imul
inc
imul
movnti
and
aam
loope
shlb
ds
or
xchg
sub
mov
mov
outsb
cltd
test
xchg
sub
push
shrb
test
sbb
out
mov
mov
push
sbb
sub
fs
hlt
popf
mov
repnz
aam
imul
xchg
push
sbb
mov
insb
es
push
arpl
mov
inc
out
inc
jnp
add
stos
mov
push
add
mov
sub
sub
rcrl
pop
inc
pop
dec
cltd
xchg
dec
adc
mov
push
push
decl
cmc
sbb
jmp
inc
out
xchg
sbb
cwtl
cs
fsubs
mov
xor
or
cmp
adc
add
jb
pop
mov
mov
mov
std
mov
addl
lods
shl
xchg
adc
sbb
add
in
mov
aad
cmp
push
ret
or
sub
ds
inc
roll
ds
dec
push
lret
mov
push
inc
mov
mov
inc
lods
rclb
dec
outsl
mov
cltd
pop
stos
jmp
sub
pop
cmp
push
fimull
pop
cmp
scas
inc
dec
icebp
bound
testl
fmull
lret
test
fildll
mov
dec
and
mov
mov
imul
sahf
rcrl
mov
mov
bound
scas
fwait
mov
sub
outsl
pop
mov
mov
out
cmp
jle
dec
icebp
jnp
icebp
test
inc
das
pushf
push
and
div
mov
sub
mov
movl
mov
movl
mov
mov
sub
mov
xor
jmp
push
xchg
mov
and
int
mov
enter
test
jbe
xor
les
and
fcoms
cwtl
xchg
enter
mov
dec
cmp
sti
cmpsb
adc
cmp
lea
into
mov
dec
lret
sbb
lea
mov
xchg
xor
lods
add
mov
cmpb
cmp
popf
mov
jno
add
push
out
xor
out
test
jl
out
nop
jge
cli
jmp
jae
fdivp
push
fdivl
or
mov
out
punpckldq
xchg
mov
inc
mov
and
pop
xchg
bound
in
xchg
push
test
subb
outsb
in
andl
mov
push
addb
mov
jbe
pop
or
mov
pusha
clc
and
jmp
mov
jmp
dec
cmp
std
ds
lods
pop
cmp
push
mov
mov
in
push
mov
jl
xor
mov
cmc
aas
and
jae
loopne
mov
adc
dec
or
mov
push
icebp
mov
push
out
mov
sub
test
mov
mov
jle
jbe
lea
into
push
stc
fucom
mov
pop
loop
out
push
push
lock
mov
push
hlt
test
loop
ret
pop
ljmp
pusha
fsubl
lea
cmp
loopne
mov
sbb
xor
cmp
in
pop
testb
push
add
imul
jle
aad
add
arpl
push
or
push
mov
call
in
pop
in
push
orb
add
push
mov
pop
mov
movsb
or
test
or
or
lret
popa
data16
jecxz
inc
loope
mov
mov
mov
in
pop
and
cmp
insl
add
rorb
sub
scas
ja
add
leave
xchg
in
pop
or
nop
pop
inc
push
aam
pop
xor
mov
adc
xchg
test
ret
xchg
cmp
dec
sbb
icebp
mov
xor
or
jmp
push
and
mov
mov
test
xchg
psraw
sbb
sbb
push
shl
sbbb
fnstsw
add
pop
test
jnp
out
data16
push
das
jmp
sbb
mov
cmc
in
and
bound
mov
push
icebp
inc
mov
cmpsb
inc
ja
and
fwait
dec
xchg
mov
je
add
leave
push
icebp
scas
jo
lret
dec
xor
jno
clc
adc
lods
lret
lock
sti
loop
dec
adc
rol
adc
lahf
adc
cli
lock
fidivrs
testl
inc
sbb
scas
cli
mov
cs
jbe
in
dec
lock
jo
pop
sarl
cltd
dec
cmovge
push
xor
mov
push
sahf
lock
mov
dec
push
mov
xchg
nop
pushf
clc
out
sbb
fmull
push
mov
fdivs
loope
mov
or
mov
pushf
push
jb
enter
mov
mov
mov
cld
jnp
popa
pop
sub
movsb
xchg
ljmp
inc
lods
fbld
or
mov
rcr
enter
cmpsl
iret
inc
aaa
inc
and
mov
jae
mov
adc
movb
stos
pop
push
pop
xor
test
cmp
jae
cmpsb
pusha
andl
imul
pop
scas
mov
jne
aas
xchg
fst
movsl
xchg
push
test
mov
out
cmc
cmpsb
in
fstl
sub
adc
mov
cmpsl
aad
pop
add
into
ffreep
xchg
lahf
xor
jl
icebp
mov
pop
sbb
ja
in
push
cld
mov
movsb
cmc
stc
pusha
adc
insb
cld
push
mov
sub
pop
xor
push
data16
aas
inc
lods
and
cmp
mov
subb
scas
jge
imul
lods
fists
jo
add
mov
popa
in
xchg
xchg
ja
and
ficoms
das
pop
jle
pop
stos
aam
mov
xchg
test
and
nop
lea
lods
fsubs
or
or
inc
inc
hlt
jg
add
movl
movl
mov
add
mov
and
lea
mov
mov
mov
movl
movl
movl
mov
mov
sub
add
xor
add
mov
div
mov
xor
pop
pop
or
mov
movl
movl
jmp
bound
and
lds
add
mov
sbb
sahf
leave
sub
shrl
xchg
scas
pop
inc
inc
inc
repz
sbb
iret
jp
movsb
sub
insb
scas
mov
icebp
mov
stos
clc
mov
jmp
das
cltd
xchg
bound
lods
xor
fwait
and
cwtl
pop
cs
or
sahf
negl
jl
mov
jne
jb
test
mov
mov
ror
out
jae
ud1
or
cmpxchg
outsb
insl
adcb
rorl
imul
push
aad
mov
fs
inc
mov
fildl
mov
xchg
mov
xor
jne
xchg
orb
pop
fists
add
movsl
or
and
sbb
inc
shr
out
add
xchg
rcrb
lcall
push
das
dec
cwtl
sbb
push
add
test
js
push
jb
scas
mov
push
xchg
pop
lret
mov
jle
inc
ljmp
call
cld
test
out
pop
jge
jb
push
roll
into
movb
das
das
xor
addr16
std
incb
rep
imul
add
outsb
inc
adc
push
outsl
fisubl
or
stos
in
fsubs
testb
mov
jno
push
cmpsb
in
or
outsb
das
jmp
mov
call
pop
cs
inc
jne
and
jl
push
add
add
jno
aaa
inc
ja
cltd
lods
dec
mov
je
out
xchg
adc
pop
jno
mov
out
lea
sbb
dec
sub
push
fcom
lods
sbb
pop
or
xor
xor
pusha
or
lahf
movsl
int3
gs
push
adc
cmp
or
push
mov
xchg
ds
std
outsb
dec
jnp
inc
and
adc
fists
sbb
mov
adc
add
stc
je
xor
and
cmpl
mov
les
sbb
packssdw
mov
enter
lea
faddl
mov
add
mov
mov
and
sub
or
mov
imul
mov
div
leave
ret
push
mov
sub
push
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
jmp
dec
mov
aam
movsb
sub
bound
jle
xchg
sbb
sbb
mov
adc
jo
lods
cld
stc
sbb
lcall
cmp
jge
ss
cmpsb
mov
xchg
jbe
push
ss
jb
mov
outsl
jbe
out
inc
push
fdivl
popa
sbb
sbb
loope
dec
mov
jmp
xchg
sub
xlat
fidivrl
movb
lods
pop
cld
mov
mov
jne
out
in
push
or
jns
enter
lods
loope
daa
dec
mov
inc
xorl
mov
push
and
sti
shll
test
jmp
mov
fs
sub
and
out
and
pop
sarl
or
add
pop
icebp
jmp
jae
mulb
mov
adc
mov
hlt
jg
icebp
mov
addl
xchg
cmp
ss
sbb
cwtl
lahf
cmp
es
jmp
sub
and
testl
pop
mov
popa
mov
push
andb
jno
scas
test
pop
sub
sar
loopne
movsb
outsl
fcoms
jns
cmp
jbe
sarl
cmp
rcrl
loop
stc
dec
push
or
xchg
or
adcb
xorl
pushf
dec
decl
fdivl
inc
push
scas
dec
mov
adc
lret
loope
aam
das
test
lods
movsb
mov
jg
imul
in
inc
bound
push
fstpl
adc
jl
in
aad
cmp
inc
hlt
mov
rclb
pop
dec
xchg
xchg
jb
push
aad
mul
inc
add
or
mov
mov
stos
push
pusha
sbb
imul
dec
adc
int3
mov
insb
test
adc
cmpsl
xchg
cmc
lcall
movsb
or
jp
pop
jns
mov
sarb
out
push
sahf
jbe
dec
inc
pop
orl
sub
mov
or
adc
push
jo
sbb
pop
inc
mov
mov
jnp
push
adc
mov
ja
inc
xor
jbe
jbe
push
sbb
sar
add
cmp
or
out
pop
sbbl
add
lods
repnz
mov
and
cmpsl
out
cmp
add
notl
add
lahf
jbe
rcrl
sbb
dec
test
loopne
xchg
mov
ljmp
adc
clc
iret
pop
jnp
inc
in
nop
push
push
jae
inc
add
adc
push
push
xchg
sar
inc
jb
in
jb
mov
push
into
xorb
outsl
pop
into
lret
dec
fucom
xchg
dec
data16
outsb
repnz
outsl
jb
inc
ds
bound
pop
scas
imul
inc
ljmp
fwait
mov
or
mov
mov
js
nop
dec
dec
pop
mov
das
test
cld
in
movsb
enter
movl
jmp
into
jne
inc
sbb
pop
clc
push
mov
fadds
sbb
inc
sub
ss
fldenv
iret
jp
mulb
pusha
cli
fisttpll
stos
jmp
dec
mov
nop
dec
jno
outsb
inc
add
je
fnstsw
daa
add
mov
or
lret
lods
loopne
pop
or
fmull
mov
and
pop
stos
repnz
orb
push
xchg
cmpsl
fcoml
mov
jecxz
data16
outsb
pop
adc
inc
mov
mov
insl
or
mov
fsubl
pop
aad
arpl
sub
xchg
mov
les
ss
out
mov
push
fsubrs
adc
aaa
sub
lahf
daa
sub
inc
repz
jb
mov
out
popa
sahf
fs
cwtl
shrl
movswl
pop
mov
js
jmp
leave
jne
sub
inc
mov
inc
movsl
sbb
lcall
cmpsb
data16
stos
cs
shl
fldenv
in
fdivrl
rolb
aam
jecxz
sbb
fistl
jecxz
cli
xor
pop
and
cmp
punpcklwd
idivb
testb
stos
inc
cmpsb
mov
push
vpsrad
dec
inc
pusha
push
je
lcall
push
icebp
xchg
leave
enter
pop
movb
xor
xchg
rorb
mov
pop
sbb
sub
repnz
lea
out
dec
inc
arpl
rcrb
fs
daa
mov
cli
xor
or
ja
inc
pop
or
loopne
mov
sbb
call
ljmp
andl
lods
cvttps2pi
cli
xor
or
or
mov
cmpsl
pop
imul
ret
push
lret
jp
test
sbb
mov
adc
sub
scas
sub
daa
xchg
fstl
mov
mov
jmp
jno
ja
mov
fwait
movsl
lret
xor
js
jp
rorb
push
out
das
add
mov
inc
xor
rclb
jbe
sub
stos
push
addl
sub
mov
sub
fsubs
lods
push
sbb
inc
gs
out
jae
hlt
rcll
arpl
push
das
fisubrl
pop
rcl
dec
sub
xor
sbb
jmp
sub
sub
pop
mov
sub
sub
push
mov
adc
mov
push
inc
sbb
adc
fs
dec
mov
shr
xchg
pop
out
hlt
in
clc
pop
pushf
mov
out
jecxz
inc
repnz
push
inc
dec
rolb
sub
cltd
fstl
ret
in
add
mov
jge
sbb
hlt
sbb
adc
adc
mov
aam
jl
lahf
xchg
xchg
mov
lcall
mov
ljmp
int
jb
test
daa
rorb
shl
aad
cmp
mov
xchg
dec
and
or
movl
movl
movl
movl
movl
movl
movl
movl
movl
push
movl
mov
mov
push
push
push
call
mov
mov
xor
mov
mov
mov
jmp
das
ret
pop
sub
ret
xchg
mov
cmp
sbb
sbb
mov
fcoms
mov
xor
jb
inc
adc
and
aas
push
add
aaa
in
inc
loopne
dec
sbb
sub
cltd
or
mov
xchg
xchg
mov
push
pop
sub
sbb
push
cmp
movsl
dec
fmull
nop
je
xchg
pop
out
in
lods
ss
gs
loop
mov
inc
das
cld
push
jno
fs
xor
xor
mov
aas
imul
inc
movsl
mov
mov
xor
cmpsl
inc
cmp
enter
mov
push
sbb
adc
and
dec
mov
mov
fwait
lods
add
cmovnp
or
pop
adc
mov
mov
and
pop
pusha
ljmp
lcall
stos
pop
adcb
or
ss
jmp
jo
daa
in
pop
mov
dec
and
mov
out
iret
and
pop
insb
mov
das
mov
push
xchg
dec
mov
add
cmp
push
outsb
test
mov
push
fistpll
add
int3
rcrb
fwait
test
adc
inc
nop
cld
jbe
push
loop
stos
xchg
sbb
or
adc
in
jmp
pop
pop
das
dec
xchg
dec
and
aaa
lret
ret
sbb
sub
push
aaa
int3
jmp
ds
push
xor
mov
sti
mov
inc
add
int3
sbb
mov
lods
scas
sbb
lods
je
pop
sbb
cmc
rcr
je
out
insb
xor
aam
jl
es
fistpll
incb
push
in
mov
loop
add
arpl
stc
fmull
jb
clc
mov
aas
push
ret
clc
out
arpl
test
sbb
mov
ljmp
push
cmp
push
jbe
and
mov
add
sub
mov
andb
jl
movsl
mov
mov
pop
pushf
xchg
pop
decl
int
pop
out
pop
pop
push
mov
bnd
cmp
and
push
mov
sub
aad
enter
and
cltd
and
mov
in
xor
and
jmp
scas
mov
sub
jnp
jg
jmp
jle
cltd
sbb
fistps
cltd
scas
or
ret
xchg
mov
lods
cmpsl
sbb
fwait
cmp
dec
lret
inc
outsb
pop
cmp
bnd
mov
rorl
js
jp
inc
push
incb
sbb
cmp
sub
fs
jl
stos
mov
dec
das
and
xchg
inc
or
js
xorb
and
stos
repz
cmp
outsl
lods
pop
ret
mov
outsb
ret
outsb
jp
fcmovbe
xchg
and
mov
insl
roll
xor
cld
rclb
xor
sar
std
jg
imull
test
xor
sub
leave
ret
imul
xchg
pop
cltd
movb
pop
cld
pop
xlat
andb
arpl
ficoml
into
dec
push
jecxz
loope
pop
fisttpll
loop
and
add
and
je
inc
push
scas
ja
xchg
dec
adc
xorb
mov
xor
or
mov
mov
mov
xor
or
add
cltd
adc
cmp
jne
cmp
je
mov
mov
mov
mov
add
adc
or
mov
or
mov
push
push
push
push
call
mov
mov
and
mov
mov
jmp
fs
cmp
cmpsb
dec
adc
cltd
jb
sbb
sbb
aaa
call
add
rclb
mov
push
xchg
mov
jmp
xor
or
adc
es
stos
aad
out
xchg
imulb
loopne
test
dec
iret
stos
pop
in
ficomps
fnstcw
mov
pop
dec
out
dec
dec
adc
and
cmpsb
jne
cmp
jl
jg
cltd
push
arpl
lret
mov
xchg
mov
mov
xchg
push
test
inc
addr16
sbb
int
mov
lods
stos
outsb
pop
cmp
pop
add
repz
daa
std
adc
loopne
push
pop
jp
jb
push
pop
popf
rorl
arpl
cwtl
ds
dec
mov
push
mov
repz
mov
lock
into
xchg
repz
shl
sbb
jns
dec
ret
sub
test
adc
xchg
mov
in
xchg
dec
cli
mov
mov
cltd
aam
jp
xor
lret
pusha
pop
sbb
es
sbb
push
mov
fists
mov
test
jb
hlt
popf
aaa
into
mov
push
push
jmp
in
inc
pop
add
fistpl
out
ret
pushf
jno
xchg
out
test
dec
xchg
nop
pop
jg
and
dec
inc
pop
xor
mov
push
cmp
xchg
movsl
inc
je
sbbl
xlat
insb
jmp
stc
inc
fwait
add
dec
jns
incb
cmp
hlt
cld
in
daa
xor
data16
gs
jecxz
pop
mov
xchg
popa
movq
push
into
sbb
push
mov
cmp
sbb
nop
cmp
loope
call
int3
lods
testb
repz
lods
pop
mov
cmc
lret
push
mov
lcall
stc
dec
fwait
lret
bnd
lea
incb
repz
mov
aad
mov
bound
dec
repz
scas
insb
sarb
push
arpl
insb
mov
or
hlt
repnz
cmc
dec
hlt
xchg
negb
or
dec
rorl
cmp
xor
aad
and
imul
test
int3
mov
loopne
xorb
lods
sti
ret
mov
push
fldt
push
mov
fwait
sub
aaa
sbb
fs
mov
hlt
in
push
push
xchg
mov
cmp
mov
and
pop
dec
arpl
ffreep
xor
stos
sub
in
mov
rcrb
insb
and
fcmovb
jnp
sbb
fwait
into
movsl
in
push
add
sbb
push
mov
or
jp
sbb
pop
pop
movsb
es
adc
je
dec
push
bound
mov
xorl
mov
and
push
push
rorb
push
push
ljmp
or
cmp
scas
and
jne
repnz
stos
mov
xor
mov
add
add
jno
sub
lahf
xchg
cltd
imul
scas
mov
or
mov
mov
push
movsl
xor
stos
ret
sbb
push
cmp
add
add
xor
xor
cmp
jne
cmp
jne
mov
mov
add
or
mov
or
xor
lea
xor
mov
and
add
mov
xor
xor
div
mov
mov
xor
imul
mov
push
push
jmp
sbb
sbb
jo
push
ret
jl
insb
sbb
jns
sbb
mov
ret
bound
push
test
aad
leave
cmp
lock
jbe
pop
ljmp
cmp
cmp
add
push
fistpl
insl
mov
inc
jmp
fldenv
sahf
pop
lcall
cwtl
or
loop
jle
jmp
cltd
aad
xchg
pop
fcmovu
mov
dec
inc
movsb
pusha
dec
test
jbe
jbe
push
xchg
mov
inc
mov
pushf
insl
cmc
dec
jg
sbbl
scas
add
inc
and
stos
les
imul
add
mov
test
iret
push
insb
pop
sar
je
jno
mov
jno
mov
cmpsl
xor
cs
sub
and
mov
mov
sbb
je
xor
xor
je
sbb
in
and
pop
push
jbe
bound
push
pop
and
repnz
fldln2
les
mov
shl
xor
movsb
out
jnp
movsl
dec
shlb
pop
in
sub
inc
stos
xchg
jge
int
mov
cwtl
rorb
repnz
aad
add
fiaddl
adc
add
iret
mov
mov
mov
sar
sar
sbb
std
mov
mov
push
mov
or
push
xchg
push
cltd
imul
ja
in
or
iret
std
dec
xor
je
jns
mov
lcall
add
dec
push
jmp
sub
sarl
orl
movsb
jb
mov
adc
into
push
scas
outsl
push
sbb
push
xchg
push
push
and
leave
mov
sbb
mov
mov
inc
dec
pop
ljmp
cmp
xor
scas
mov
lcall
hlt
test
test
adcb
cmpsb
adc
push
ret
pop
insb
dec
and
adc
gs
cmp
ss
push
xor
pop
ljmp
jae
adc
aad
mov
ss
add
cmp
repz
fdivs
adc
xlat
lods
pop
jb
add
inc
stc
cmp
outsl
lea
ret
xor
jno
cwtl
lods
push
inc
cmp
mov
jmp
and
lret
fxch
aad
sbb
ljmp
sti
sub
cli
pop
mov
aaa
sub
outsb
rcl
out
xor
clc
sbb
or
xor
cmc
dec
ret
cmp
inc
push
pop
aad
sub
lcall
sbb
cmpsb
add
dec
pop
cmp
cmpsb
or
cli
imul
push
xchg
sub
mov
fstl
sbb
xchg
mov
push
popa
or
push
cwtl
out
stos
inc
inc
in
mov
dec
xor
in
pop
fsubrs
xor
mov
sbb
pop
scas
xor
popf
adc
sbb
in
cmp
bound
inc
sub
jo
inc
mov
sbb
mov
shlb
pop
out
xchg
lcall
push
mov
lods
mov
push
out
in
fsubs
jecxz
sti
cwtl
sti
jmp
mov
mov
add
or
cmp
mov
mov
lea
mov
mov
or
xor
div
mov
add
xor
add
mov
add
mov
mov
mov
mov
sub
mov
sbb
mov
xor
mov
xor
jmp
adc
xor
fdiv
push
stos
pop
data16
jns
sbb
shll
xlat
or
xor
mov
imul
ds
fs
std
lock
pushf
dec
subl
sarl
testl
sub
pop
cmp
fisubrs
sti
adc
fistps
add
mov
push
icebp
inc
gs
push
not
add
xchg
xchg
add
and
test
cs
scas
out
jae
gs
lret
ss
in
leave
inc
jg
inc
mov
outsb
cmp
jne
in
lods
ds
push
xchg
dec
jle
inc
leave
lods
dec
cmp
shlb
or
jne
add
xchg
fldl
xchg
jmp
cs
cltd
xchg
imul
and
dec
mov
push
mov
or
aam
cwtl
call
flds
pushf
test
or
adc
pop
pop
mov
cmpsl
push
in
dec
pop
dec
xlat
nop
imul
push
mov
add
mov
fstpt
mov
scas
sbb
rcr
aas
data16
xor
cmpsl
jl
and
dec
in
ja
mov
int3
inc
dec
inc
dec
inc
into
shrl
loopw
js
add
pop
or
jb
cmpsb
shlb
imul
out
test
push
mov
jmp
mov
lods
rolb
push
mov
dec
inc
cltd
push
rcrb
mov
in
push
into
sahf
push
daa
inc
pop
cld
or
ds
lods
jno
and
cmp
jns
or
aaa
pop
sub
sbb
rolb
push
and
xor
inc
cmp
out
cmp
pop
sub
mov
aas
call
and
dec
push
sub
outsl
mov
call
stos
loopne
sbb
call
sub
into
rcr
aad
jne
in
pushf
mov
sbb
lock
mov
mul
adc
mov
aam
push
pop
vcomiss
into
xchg
mov
insl
lods
scas
cli
inc
dec
pop
loopne
clc
mov
insb
xor
popa
loope
call
int
imul
cmp
aas
xor
loop
dec
stc
movsb
loopne
test
add
fcoml
mov
sar
stos
sbb
out
cmp
lds
mov
jbe
cmpsb
pop
adc
rorl
mov
inc
adc
cmp
shll
add
dec
sarb
les
gs
sub
sbb
int3
sub
lahf
xchg
sub
data16
xchg
fwait
pop
loope
push
shrl
cld
fnsetpm(287
test
cwtl
jnp
or
mov
and
popf
ds
jbe
arpl
push
lcall
jbe
dec
mov
call
adcb
addr16
out
pop
out
push
pop
jge
lahf
hlt
rcrl
push
lods
dec
dec
in
insb
ljmp
leave
roll
dec
aas
mov
in
mov
jns
push
int3
std
and
dec
std
cwtl
out
adc
mov
jge
mov
and
xor
incl
rclb
icebp
add
adc
push
push
call
mov
sub
push
pop
sbb
mov
xor
cmp
jne
cmp
jne
mov
mov
add
shr
or
mov
xor
xor
add
mov
jmp
or
hlt
add
fistpl
mov
stos
mov
pop
sbb
jns
sbb
pop
mov
rcrb
dec
add
dec
lock
stos
clc
pop
xchg
jg
push
xchg
clc
in
xor
xchg
mov
xchg
mov
mov
sbb
mov
xchg
pop
fcmovnu
xchg
das
mov
adc
loope
inc
nop
int
es
cmpsb
pushf
sbb
popa
push
ds
adc
popa
lds
les
dec
jnp
mov
and
mov
add
std
mov
addr16
ret
mov
push
mov
jecxz
mov
mov
jp
xor
dec
adc
jle
das
das
ds
pop
dec
fwait
or
ja
dec
inc
mov
xchg
jo
imul
add
and
mov
ds
xchg
push
pop
fs
or
inc
int
inc
ftst
add
mov
nop
aas
push
test
enter
roll
mov
and
sbb
xchg
ret
xchg
arpl
lods
dec
mov
lods
adc
popf
mov
ret
dec
fisttpl
cs
dec
adc
es
jp
ret
and
shrl
push
add
divl
mov
insl
push
lods
push
inc
sub
sbb
push
enter
sbb
iret
or
sub
sahf
cmp
iret
jl
fs
mov
add
or
enter
xchg
fs
call
test
jns
sub
sub
xchg
dec
sbb
cmpsb
adc
cmp
dec
fisubrs
aaa
sahf
scas
pop
sbb
or
and
sub
ret
lahf
sbb
xor
jmp
jo
cmp
outsl
xchg
sub
icebp
cmp
cli
ret
mov
xchg
addb
xchg
push
sarb
int
adc
fstps
push
dec
ret
lret
pop
cmp
cmp
add
xchg
rol
mov
ja
ret
fsubrl
divb
in
jmp
cmp
pop
jns
sbb
dec
int3
xchg
jne
jmp
jg
or
stos
xchg
and
and
dec
xor
cmp
ret
cmp
imul
or
in
or
imul
jmp
insb
xchg
pop
inc
out
loope
add
outsb
inc
pop
mov
mov
mov
jg
mov
cmp
dec
in
imul
cmc
filds
out
pop
xchg
fnstsw
mov
mov
add
pop
stos
sub
push
mov
test
dec
sahf
sub
mov
sar
push
enter
or
mov
stos
sahf
jnp
dec
fcmovb
push
imul
testl
dec
decl
sbb
mov
lods
adc
sub
cmpsb
push
push
and
and
test
sbb
cmp
mov
stc
icebp
sub
inc
test
or
cmp
dec
jnp
xchg
das
ss
jp
add
call
mov
out
adc
xchg
ret
dec
pop
jmp
loop
adc
pop
leave
ret
push
mov
sub
push
push
push
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
adc
mov
push
push
or
or
push
push
call
mov
mov
and
or
mov
mov
and
or
xor
xor
shld
shl
shr
xor
or
or
xor
mov
mov
xor
mov
jmp
aas
cmpl
mov
jb
mov
je
sbb
pusha
js
fistpll
mov
xchg
mov
js
jns
in
leave
mov
fwait
inc
jp
nop
jae
call
inc
lods
call
or
leave
cld
adc
fcmove
imul
scas
ror
sbb
adc
inc
pop
subl
loopne
or
ljmp
push
cmpsb
cmpsb
mov
cltd
jbe
xchg
sub
cwtl
adc
shll
or
or
xor
sahf
jb
popa
loop
and
jne
add
mov
dec
push
scas
xchg
mov
push
rorb
shll
dec
jbe
test
imul
jbe
xor
shll
fs
inc
fidivrs
adc
leave
test
xor
and
scas
daa
xor
cmpsl
mov
pushf
movsb
sub
pop
cmp
xchg
and
mov
std
mov
bound
popf
mov
push
xchg
mov
push
jae
ja
jbe
dec
mov
cmp
push
sbb
pop
jne
push
paddsb
xor
fldenv
out
xor
adc
cmp
pop
inc
ficoms
push
ja
repnz
lahf
icebp
adc
pusha
push
in
inc
aaa
cmp
mov
icebp
jns
sub
scas
imul
push
inc
aaa
cmpsb
mov
mov
iret
and
jmp
scas
test
leave
cld
xchg
push
add
int
add
or
fimull
mov
xor
xchg
push
in
push
mov
fildl
pop
xchg
jbe
mov
pop
jle
lret
es
scas
negb
jns
xchg
sub
push
and
sbb
sbb
enter
pop
mov
jmp
popf
or
pusha
and
sub
and
call
pop
insl
sti
mov
out
lock
xor
data16
out
add
sub
leave
inc
pop
popa
sbb
dec
mov
push
push
add
xchg
mov
mov
test
push
mov
ja
or
pop
mov
subb
aaa
stos
cmp
pop
in
aam
sub
int3
push
push
inc
mov
sti
stos
push
stos
into
or
clc
shrl
sbb
fidivrs
int
fisttps
inc
dec
bound
pop
sub
mov
inc
sbb
or
frndint
aam
cs
pop
jb
inc
clc
and
test
lret
ret
xchg
scas
adc
jl
dec
and
add
cmp
jnp
push
dec
cmc
rol
jb
andb
shrb
dec
cmpl
mov
into
dec
js
push
out
mov
mov
mov
mov
push
push
push
push
call
add
adc
push
push
push
push
call
mov
mov
mov
xor
xor
xor
add
mov
adc
mov
mov
mov
mov
mov
sub
mov
mov
sbb
mov
sub
mov
sbb
add
mov
adc
push
xor
mov
pop
sub
mov
sub
mov
mov
mov
add
xor
shrd
xor
shl
xor
shr
or
xor
or
mov
push
mov
mov
mov
push
push
push
call
mov
mov
mov
or
mov
or
mov
add
mov
adc
mov
add
mov
adc
add
pop
adc
pop
mov
mov
pop
leave
ret
push
mov
sub
movl
jmp
imul
pop
jbe
mov
iret
jo
push
sbb
and
sbb
repz
add
es
mov
pop
xor
out
sarl
js
loopne
sbb
add
andl
pop
adc
stos
dec
fnstsw
and
lret
mov
outsb
and
repz
xchg
mov
insb
lock
cmp
daa
mov
test
inc
add
inc
dec
dec
test
cmpl
or
mov
movsb
push
int
call
xchg
push
sub
mov
jle
jg
mov
aam
fsts
pushf
enter
rcll
pop
sbb
repz
std
and
push
popf
or
idivb
xlat
mov
lahf
call
lahf
push
jne
daa
jne
fistps
cmpsl
repnz
and
movsb
sbb
js
popf
jecxz
sahf
clc
sti
orb
ficomps
iret
inc
push
sbbl
fcoms
sti
sbb
cmp
and
repz
lds
and
test
aad
addr16
pop
adc
hlt
rol
into
jmp
jo
lea
mov
sahf
mov
sbb
and
aas
in
fdiv
adc
inc
rcr
pop
adc
loope
scas
loope
adc
push
xchg
sbb
adc
outsl
jp
and
pop
push
jmp
or
push
cmp
loope
xchg
lret
inc
sub
mov
dec
cs
lret
sbb
mov
inc
jno
dec
xchg
push
cwtl
out
ljmp
mov
mov
xor
shll
jb
test
mov
mov
hlt
insb
add
movsb
js
icebp
in
shrl
fs
daa
mov
js
pop
ficompl
scas
pop
add
jns
insl
mov
jle
mov
loop,pt
repnz
add
push
test
decl
or
mov
mov
out
leave
mov
outsb
push
daa
jmp
pop
xor
mov
jb
mov
cmp
icebp
xor
jo
xlat
inc
pop
push
mov
push
das
or
pop
jp
pop
and
or
inc
mov
sbb
fdivs
cwtl
loop
test
xor
pop
mov
push
inc
push
movsb
dec
int3
daa
xor
test
jecxz
xor
in
and
add
inc
call
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
and
add
mov
and
mov
sub
and
mov
mov
imul
add
add
xor
cmp
jne
mov
mov
mov
sub
add
mov
or
mov
imul
sub
add
mov
or
mov
mov
add
imul
add
mov
add
mov
mov
mov
and
mov
and
mov
imul
mov
or
mov
imul
mov
sub
cmp
je
mov
jmp
mov
sub
xor
add
jmp
movl
movl
mov
mov
imul
add
and
add
or
sub
leave
ret
push
mov
and
sub
push
push
lea
mov
mov
mov
mov
sub
sbb
mov
orl
orl
lea
push
lea
push
jmp
pushf
cmp
jl
fistpll
dec
sbb
scas
adc
sbb
lds
stc
in
mov
imul
or
imul
dec
fstpt
adc
mov
mov
into
fldlg2
sub
stos
shrb
loop
dec
mov
add
sti
mov
std
aam
cltd
mov
cli
jg
push
pop
dec
loop
and
int
and
pop
ret
mov
call
int3
jb
dec
inc
push
xrelease
ret
ds
xor
or
mov
or
movsl
fwait
stos
out
add
gs
call
sarb
fnsave
or
cld
add
dec
shlb
mov
imul
xorb
mov
sub
or
enter
andb
fsubs
xor
call
push
in
xor
jmp
cmc
icebp
aas
sahf
in
xor
cmp
jge
clc
rorl
mov
inc
mov
xchg
cmp
lods
push
rorl
inc
mov
or
push
cmp
fsubs
scas
in
lret
leave
rcrl
push
sti
jmp
pop
add
js
ficoml
shlb
clc
loop
adc
cmpsl
pop
dec
test
je
enter
insb
pop
fstps
cmp
add
xlat
mov
icebp
js
imul
mov
mov
dec
mov
or
or
sub
cmpsl
icebp
test
dec
into
ret
js
sbb
jno
std
add
add
aaa
cmpsl
adc
xchg
or
adc
and
mov
adc
sub
pop
es
xchg
enter
icebp
lea
sarl
xchg
stos
mov
cmp
xchg
mov
repnz
fdivs
inc
aaa
add
aad
jg
pop
xchg
mulb
mov
arpl
push
test
mov
add
stos
fsubrs
gs
xchg
lahf
mov
jp
mov
adc
xor
fnstcw
mov
and
daa
aad
cmp
xchg
imul
jne
jb
jl
pop
push
lods
and
mov
fildl
inc
sub
enter
jmp
mov
mov
lahf
sbb
cwtl
jl
xchg
pop
pop
stos
lret
lret
stos
jl
repz
mov
popf
test
imul
shrl
scas
mov
dec
jb
or
pop
imul
mov
lret
mov
pop
xchg
mov
xor
movsb
push
push
daa
fstps
mov
xor
add
subb
dec
fdiv
fstps
mov
cmc
xchg
fldenv
rcrl
fisubl
xor
orb
cmp
push
adc
enter
or
or
int3
das
cmp
mov
repz
mov
call
fistpll
inc
lcall
xchg
push
inc
stos
jae
mov
mov
xchg
mov
cmc
xor
popa
out
xchg
popf
lahf
adc
out
jp
or
les
mov
or
add
imul
pusha
sbb
jl
cmp
loop
inc
inc
es
into
daa
ret
movsb
push
xor
stc
cmpsl
es
or
add
scas
and
insb
xchg
popl
sahf
add
adc
call
mov
mov
pushl
mov
pushl
mov
pushl
pushl
pushl
pushl
pushl
call
pop
jmp
roll
andb
sbb
loop
jl
out
sub
sbb
sbbb
call
push
inc
adc
pushf
adc
lods
lcall
pop
stc
cld
inc
fdiv
fsts
imul
lret
jmp
inc
jp
jle
lds
inc
adc
mov
push
push
add
adc
inc
es
aam
sbb
cmp
inc
les
loop
mov
sbb
sarb
add
mov
in
sbb
jecxz
arpl
xor
jbe
rcrb
out
ret
xchg
ret
jge
jo
cmp
leave
sbb
push
fmul
mul
mov
push
pushf
inc
adc
xchg
fs
and
insl
xlat
out
inc
or
xchg
push
sub
shlb
jg
outsb
lea
mov
adc
movb
mov
push
sub
aam
into
lahf
cmpsb
data16
xorb
inc
pop
adc
adc
dec
inc
and
or
inc
cwtl
test
gs
and
xor
sbb
test
repnz
mov
mov
mov
fcomps
call
jmp
mov
add
lret
jne
pop
mov
jb
dec
and
mov
in
cli
fwait
lock
and
pop
push
jne
dec
lret
mov
in
jne
aam
add
xor
sub
pop
xchg
in
jae
insl
hlt
stos
mov
push
pop
cmp
ja
daa
mov
mov
jge
pop
dec
push
popf
and
jge
dec
movsb
and
repnz
imul
adcb
andl
and
jmp
mov
addr16
mov
sbbb
insb
fcmovu
push
dec
push
dec
rorb
jmp
dec
fisttpll
sub
cmc
gs
cmp
pop
in
adc
in
es
add
loop
mov
std
cltd
out
sub
cmpsl
orb
ds
or
mov
and
stos
adc
jle
cltd
sbb
loopne
add
mov
bound
sub
xchg
jg
in
jle
push
xchg
dec
sbb
mov
inc
lret
xchg
xchg
js
jne
xchg
xchg
loope
adc
mov
imul
jp
mov
clc
cmpsb
or
popa
mov
fwait
mov
out
fdivr
xlat
push
testb
and
fnstcw
fwait
mov
ret
or
inc
mov
pop
add
add
stc
and
and
push
out
or
cld
shll
xchg
mov
sbbl
jge
mov
imul
cmovns
ja
in
jns
mov
es
xor
fstpt
std
xor
insb
jne
stc
lds
push
dec
sub
das
je
rolb
sub
sub
push
mov
xchg
popf
mov
data16
cmp
cmc
outsb
xchg
test
and
iret
jp
adc
pop
jecxz
inc
sub
adcl
adc
sbb
xchg
jmp
inc
popa
push
mov
std
or
cmp
fldt
or
xchg
lds
out
xchg
repz
enter
stos
jnp
loopne
into
xchg
lods
mov
xchg
add
data16
test
loope
push
rolb
jge
jg
into
aaa
int3
mov
mov
jnp
xor
jo
mov
or
cmp
and
lods
pop
mov
lahf
mov
pop
ret
jnp,pn
cmp
mov
ret
push
mov
sub
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
add
xor
mov
and
imul
xor
push
movl
movl
movl
mov
mov
xor
sub
div
mov
mov
or
xor
mov
sub
mov
mov
mov
mov
mov
mov
mov
mov
imul
and
or
xor
add
mov
mov
sub
add
mov
xor
mov
and
mov
xor
sub
mov
mov
and
lea
mov
shr
or
mov
sub
add
cmp
jbe
pop
leave
ret
push
mov
sub
sub
push
push
push
adc
mov
cmpl
mov
mov
mov
mov
jmp
mov
jne
push
pushl
call
mov
mov
sub
and
and
xor
sbb
add
or
mov
or
shrd
shr
mov
and
mov
xor
mov
add
mov
sbbl
xor
xor
or
mov
add
or
mov
mov
adcl
shl
mov
and
shrd
add
xor
xorl
shr
adcl
mov
mov
xor
or
orl
mov
mov
xorl
mov
sbbl
mov
mov
cmpl
movl
notl
mov
movl
jmp
movl
jl
push
call
sbb
and
xor
xor
sbb
or
sbbl
xor
and
mov
sub
mov
mov
and
mov
dec
mov
cmpl
movl
movl
movl
jmp
movl
movl
jl
push
pushl
pushl
call
and
neg
and
adc
not
sbbl
shl
xor
shld
add
shl
mov
mov
mov
mov
addl
xor
xor
movl
movl
movl
mov
cmp
movl
jne
cmp
movl
je
sbb
mov
movzwl
xor
mov
mov
xor
xorl
shld
addl
shl
xorl
xor
mov
mov
adc
mov
xor
mov
mov
cmp
jne
cmp
jmp
push
inc
shlb
cmp
jo
pop
or
test
adc
sbb
dec
ret
lahf
cmp
or
inc
stc
push
jmp
movsb
add
adc
scas
push
aad
adc
sti
call
xorb
push
cmp
inc
jge
fs
mov
jno
ss
pop
xor
jle
mov
in
je
aam
xor
imul
or
xchg
jecxz
rolb
ljmp
cs
ret
mov
cmc
cmpsl
mov
scas
stos
sbb
cmpsl
inc
push
jns
and
das
mov
data16
xchg
mov
mov
add
sarl
push
out
dec
imul
arpl
inc
mov
fs
push
test
sarb
mov
call
xorl
xor
fwait
stos
push
xchg
aam
cmpsl
adc
push
or
test
aam
lods
xor
lret
pushf
insl
inc
jle
dec
lret
inc
inc
movsl
sahf
lahf
les
in
jmp
andb
fdivp
bound
mov
lds
add
sub
ljmp
xchg
sarl
mov
pop
push
jge
add
popf
test
stos
lods
jmp
add
das
add
negl
adc
xor
pop
lret
mov
or
pop
jno
cwtl
lcall
push
pusha
xchg
push
sbb
cmpsb
mov
addr16
jmp
mov
das
cld
arpl
aad
enter
int3
fndisi(8087
mov
add
in
iret
push
gs
xchg
sub
ret
push
adc
aad
mov
dec
pushf
sbb
ret
sbb
ret
push
xor
xchg
int3
dec
cmpsb
test
mov
pop
sti
addb
pop
jns
mov
fucomi
add
add
push
mov
call
js
cmp
rcll
sub
xor
imul
je
orl
mov
cmpl
movl
mov
mov
movzwl
jmp
movl
jle
push
call
mov
mov
sub
add
xor
xor
xor
sub
mov
sbbl
adcl
orl
or
mov
push
cmpl
mov
mov
jmp
mov
mov
jge
push
call
mov
sbb
inc
and
and
orl
and
pop
xor
mov
add
shl
neg
mov
xor
notl
shr
or
mov
or
mov
cmpl
notl
mov
jmp
movl
jge
push
push
call
movzbl
add
mov
andl
andl
mov
sub
sub
inc
mov
adcl
mov
mov
cmpl
mov
movzwl
movl
movl
jmp
mov
movl
jle
pushl
call
or
addl
sub
xor
mov
adc
or
mov
push
cmpl
movl
movl
movl
jmp
movzbl
jle
push
call
orl
and
adc
orl
adc
subl
add
sub
pop
sub
adcl
mov
andl
add
subl
mov
sbbl
lea
addl
mov
xor
add
mov
adc
mov
mov
xor
mov
xor
xorl
xor
shr
orl
shl
incl
or
addl
mov
movzwl
adc
movl
mov
dec
mov
xor
subl
xor
xorl
shr
shl
or
adcl
push
lea
xorl
push
lea
adcl
push
andl
call
mov
mov
mov
xor
mov
xor
cmpl
mov
mov
not
jmp
mov
jne
pushl
push
push
pushl
call
sbb
mov
or
mov
or
inc
xorl
inc
xor
cmpl
mov
mov
movl
jmp
movl
movl
jbe
push
call
adc
add
sub
sbb
orl
sub
shr
movzwl
add
mov
shl
or
subl
push
andl
lea
push
mov
mov
shrd
shr
mov
mov
xor
jmp
rorl
lret
jb
jns
dec
pop
jge
xchg
sbb
notb
sbb
inc
fwait
das
mov
dec
push
mov
push
imul
lret
loopne
inc
xor
add
sbb
mov
push
popa
cmp
movsb
repz
imull
and
faddp
xchg
push
dec
in
pop
and
mov
in
add
into
or
cmpsl
pop
pop
mov
das
popa
adc
push
pop
ja
jbe
mov
push
push
pushf
dec
and
roll
mov
lret
push
ljmp
aas
outsl
scas
flds
aaa
cs
jg
xchg
xchg
cld
mov
or
push
pop
mov
sub
arpl
mov
insl
jge
mull
inc
repz
loopne
lret
pop
frstor
xorl
shll
dec
push
leave
loope
add
test
push
mov
sahf
outsl
xor
jno
fldt
cltd
repnz
jno
shll
dec
scas
insb
and
mov
push
push
sbb
std
subb
inc
dec
push
xchg
lods
cmp
xor
xchg
add
jge
inc
mov
lret
inc
xor
or
mov
lds
aaa
imul
arpl
movsl
mov
lahf
mov
xor
cltd
dec
fldpi
cmpsl
jl
test
xchg
in
mov
push
je
mov
inc
out
push
inc
sub
adc
mov
mov
lds
xchg
mov
xchg
cwtl
adc
in
lea
subl
enter
pop
or
cwtl
cmp
push
pop
push
bound
pop
xor
xchg
imul
sub
hlt
push
add
sti
pop
es
mov
insb
das
or
repnz
pop
insb
cli
imul
jo
add
pop
mov
and
push
ss
xchg
and
push
fucom
cmp
je
clc
movsb
and
jno
rcrb
ret
rorb
ret
test
call
mov
mov
xor
xor
shr
shl
or
push
lea
push
mov
mov
shrd
shr
mov
mov
xor
xor
or
lea
push
shl
call
mov
mov
xor
xor
shl
shr
or
push
lea
push
mov
mov
shrd
shr
mov
mov
jmp
dec
shlb
sbb
ds
jns
and
sbb
notb
sbb
aam
dec
stos
xchg
jle
jle
les
call
loope
stos
cmp
jg
or
mov
orb
hlt
dec
add
jl
arpl
fsubrs
add
mov
outsl
mov
adc
cs
sub
fildll
sbb
iret
cmp
inc
xor
sbb
stc
lret
xor
inc
xchg
nop
fcomp
rorb
js
mov
sbb
fisubrl
mul
mov
mov
or
aad
mov
push
sbb
jmp
adc
xor
xor
xchg
imul
cmpsl
mov
test
inc
rcl
pop
lcall
stos
sbb
push
addr16
push
add
hlt
mov
jbe
xchg
or
daa
lcall
out
inc
mov
mov
sub
dec
fwait
std
push
rcll
xchg
stos
jae
lods
dec
cmpsb
push
pop
push
or
xor
push
xor
or
mov
mov
xlat
incb
popa
pop
lret
scas
and
cwtl
push
mov
sbb
push
or
sub
lea
mov
add
push
sub
xor
mov
loope
mov
xor
aas
js
sub
pop
aam
ficoml
add
repz
fisubrs
lods
or
xor
add
inc
pop
mov
addl
lret
xchg
hlt
fs
shrl
mov
sbb
push
std
test
or
pop
xchg
mov
mov
cmpsl
ds
xchg
or
stc
mov
mov
push
jb
popl
mov
mov
addr16
inc
cwtl
push
jnp
test
sub
mov
inc
jmp
jno
inc
xchg
out
push
call
pop
adc
mov
mov
cmp
inc
bound
insb
jnp
xor
cwtl
aam
adc
xor
xor
or
shl
mov
jmp
in
je
push
fimull
movsl
mov
inc
xor
sbb
adc
sbb
std
loope
dec
xor
loop
push
loope
or
dec
outsl
in
and
jne
fcompl
xchg
or
mov
cvttps2pi
das
int
popl
mov
out
js
push
xchg
add
packssdw
pop
jle
adc
aaa
mov
mov
sahf
stc
pusha
xchg
lahf
leave
ds
bound
stc
arpl
notl
adcl
sub
ds
push
pop
in
sub
sbb
xchg
jae
mov
daa
push
mov
sub
adc
fs
fwait
cmp
test
cli
pop
nop
popf
leave
clc
mov
sub
mov
inc
xlat
std
negl
push
lcall
and
cmp
inc
and
nop
pop
cmp
pop
dec
mov
mov
or
fcomp
ficompl
dec
push
int
cmp
lret
cmp
jne
aad
dec
repnz
dec
mov
popf
push
out
jmp
movsb
push
add
pop
in
adc
lds
nop
inc
sub
scas
or
test
push
fisubrs
pushf
movsb
fwait
and
mov
mov
clc
jbe
mov
nop
sub
inc
movsl
adc
sub
push
adc
imul
sbb
das
mov
cmp
jb
adcl
ret
mov
xlat
enter
outsl
scas
cmp
mov
mov
inc
adc
adc
inc
jae
mov
xchg
aas
mov
shlw
call
push
cli
sub
stc
pop
addr16
jb
rol
aad
out
fcompl
mov
mov
sub
mov
fnsave
xor
aad
outsl
mov
push
out
je
in
insb
outsl
mov
inc
xchg
dec
adc
mov
adc
or
cmp
sbb
test
shrd
shr
mov
mov
xor
xor
or
add
lea
push
shl
call
mov
mov
xor
shl
xor
shr
or
push
lea
push
mov
mov
shrd
shr
mov
mov
xor
shl
mov
xor
or
mov
shrd
shr
mov
mov
xor
xor
or
shl
add
mov
mov
shrd
shr
xor
mov
mov
xor
or
add
lea
push
shl
call
mov
mov
xor
xor
shr
shl
or
mov
lea
push
mov
mov
shrd
shr
mov
mov
xor
xor
or
push
mov
mov
push
pushl
shl
call
lea
push
mov
mov
shrd
shr
mov
mov
xor
xor
or
push
mov
push
pushl
shl
call
mov
mov
mov
mov
mov
mov
rol
mov
xor
cmp
je
mov
mov
xor
test
je
mov
mov
movzbl
sub
mov
rorb
mov
mov
inc
cmp
jb
dec
jne
mov
mov
shrd
shr
mov
mov
xor
xor
or
push
add
push
lea
push
shl
call
mov
mov
shrd
shr
mov
mov
xor
xor
or
add
push
push
mov
shl
mov
shrd
shr
mov
mov
xor
xor
or
add
push
shl
call
push
jmp
fdivrl
sbb
mov
mov
and
sbb
notb
sbb
adc
les
mov
jmp
pop
ja
dec
mov
mov
cmpsb
stos
adcb
popa
or
icebp
jo
stos
cli
sub
enter
jle
loope
jbe
pop
dec
mov
mov
imul
sub
inc
call
shrb
call
jo
pusha
push
add
jae
add
shlb
sub
mov
mov
out
adc
mov
adc
outsb
pop
mov
maskmovq
imull
mov
push
sahf
pop
shlb
and
mov
xchg
aam
jl
loop
dec
insl
imul
cwtl
cwtl
xchg
inc
into
ja
cli
sub
sub
nop
aam
or
and
loope
pop
pop
mov
clc
sbb
pop
sub
pop
push
lea
cwtl
and
adc
ja
sbb
sarb
arpl
cmc
inc
sub
stc
repnz
inc
jg
outsl
mov
adc
xor
cmpsl
jge
gs
pop
imul
xor
cmc
sbb
insb
aam
addr16
fs
cmpsb
inc
push
imul
lret
xor
ja
sub
dec
pop
fadds
neg
imul
pop
stc
pop
in
mov
dec
jle
add
and
xor
test
sub
push
mov
negb
push
cmp
lods
mov
sbb
add
aam
in
addb
mov
out
leave
mov
add
aaa
mov
rclb
mov
ret
dec
scas
xchg
lea
loope
cmpsb
leave
sbb
ja
add
mov
mov
and
push
xchg
lahf
lea
nop
test
or
popa
nop
loopne
test
je
xchg
fsubl
in
jne
sti
jl
adc
imul
sub
pop
lea
push
mov
mov
jmp
aaa
and
dec
mov
push
out
sub
sub
sbb
adc
sbb
fwait
shl
mov
call
adc
dec
in
dec
clc
xor
test
in
mov
les
adc
mov
mov
or
int3
xchg
xchg
mov
push
inc
sbbl
lret
loopne
sti
sub
xchg
sub
jno
xor
rolb
pop
or
insl
xchg
mov
fistps
sbb
adc
jge
lret
mov
fcomps
leave
repz
repnz
cltd
repnz
sbb
adc
mov
cmc
fs
jne
push
ljmp
mov
or
cli
adc
xor
pop
and
stos
cmc
mov
dec
pushf
sub
sarl
out
scas
sbb
daa
or
sub
shrb
inc
das
bound
dec
xor
sub
movsl
fidivrl
xchg
ret
jle
out
pop
lds
cs
ficompl
push
lea
sahf
shlb
cmp
dec
lds
loope
jno
and
add
jb
and
adc
sbb
pop
sub
inc
jecxz
mov
iret
add
int
mov
adc
rcl
sbb
and
scas
leave
sbb
repnz
xchg
outsb
es
pop
insb
test
addr16
sub
outsl
notb
pusha
rcrb
sub
imul
or
repnz
int
xchg
iret
push
dec
in
repz
adc
cmc
mov
push
inc
and
pushf
movsb
outsl
pop
inc
test
mov
push
add
cmpsb
inc
push
test
hlt
sbb
in
inc
push
mov
inc
sub
nop
push
jne
push
repz
sub
pop
inc
andb
or
data16
mov
jo
movsb
lea
mov
or
aad
nop
pushf
ficompl
mov
popa
mov
cmpsl
xlat
xlat
in
dec
sarb
inc
pop
inc
insb
cmp
pusha
dec
cmpsl
nop
dec
adc
lods
enter
add
adc
xor
or
add
push
shl
call
mov
mov
shrd
shr
jmp
add
bound
cmp
push
fsub
xchg
mov
fsubl
sbb
notb
sbb
jecxz
aas
cmp
sbb
add
mov
imul
push
enter
sub
and
jb
adc
cmp
jmp
icebp
cmp
cwtl
fnsave
dec
pop
movsb
sub
loop
dec
mov
inc
out
and
dec
mov
push
jbe
cmp
mov
je
pop
ja
enter
es
sbb
ret
inc
stos
popa
dec
insl
xlat
xchg
into
add
fistpll
add
mov
xor
cmpsb
stos
sub
adc
sbb
fstpt
mov
or
in
xor
pushf
daa
jb
ret
inc
pmuludq
sbbl
gs
xor
mov
jmp
lods
int
stos
jno
adc
inc
rorl
mov
and
orl
jmp
cmc
lods
mov
push
and
adc
mov
out
in
push
cli
xor
jbe
lcall
sbb
jne
xchg
dec
adcl
add
add
inc
xor
adc
outsl
and
mov
xor
xor
xchg
mov
xchg
push
jne
ret
pop
enter
aaa
mov
and
fidivrl
pop
scas
pushf
fimull
data16
loop
pop
xchg
bound
loope
jno
sahf
popf
xor
shll
cmpsl
in
push
jp
push
jae
inc
jp
and
mov
push
mov
roll
mov
lea
pop
sub
cld
arpl
stc
sahf
nop
dec
cmp
fidivrs
mov
out
cmpb
dec
sub
dec
inc
cld
stos
push
xor
shl
ljmp
lods
dec
dec
jb
jp
mov
movsb
int
jno
daa
int3
inc
iret
cmp
addr16
sbb
sahf
out
push
fstpt
aam
orl
dec
push
hlt
rolb
popf
sbb
cmp
leave
lret
mov
sub
outsl
popf
fnstenv
push
jo
mov
mov
pop
xor
xor
pop
shl
or
pop
leave
ret
mov
mov
xorl
or
mov
jne
mov
andl
mul
ret
push
orl
mul
cmpl
movl
movl
mov
jmp
mov
jbe
call
mov
sub
mov
sub
movzwl
or
add
adc
movzbl
or
add
mov
mov
mull
add
mov
mul
add
pop
ret
push
mov
sub
push
push
push
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
xor
div
mov
xor
mov
push
div
mov
xor
xor
sub
mov
lea
mov
mov
sub
xor
mov
xor
or
xor
mov
sub
mov
mov
xor
mov
sub
div
mov
pop
xor
sub
cmp
ja
jmp
mov
movl
movl
movl
movl
mov
mov
mov
sub
imul
xor
xor
div
mov
mov
push
and
mov
sub
sub
mov
jmp
ss
mov
in
movsl
mov
mov
adc
sbb
xor
es
mov
add
inc
loop
mov
movsl
sbb
jae
mov
cmp
push
push
mov
and
sub
cmp
mov
in
daa
mov
dec
jle
lea
add
fisubs
xchg
ja
xchg
movsl
sub
ss
mov
xchg
iret
jp
movb
mov
jne
mov
lret
cmpsl
icebp
inc
pop
mov
or
call
stc
push
xchg
int
lds
push
test
jg
inc
sti
pop
or
add
push
sub
mov
cmpsb
sbbb
or
fistl
into
mov
notb
push
pop
xchg
dec
in
xchg
or
out
xchg
inc
push
int3
add
je
repz
cmp
stos
pop
movsl
pop
xchg
inc
outsb
cmp
pop
jg
sub
adc
push
shll
daa
dec
xor
bound
rorb
mov
leave
cltd
add
ljmp
jo
and
out
movsl
std
subl
daa
sub
les
test
adc
cmp
mov
insb
push
out
xchg
xchg
dec
and
sbb
imul
insl
xchg
jge
ror
leave
sbb
fwait
inc
out
test
fwait
in
hlt
mov
jno
icebp
lods
mov
mov
dec
cmp
xchg
push
xor
and
mov
lock
mov
inc
mov
pop
push
sarl
loopne
sahf
cmp
dec
repz
mov
xor
es
mov
loopne
inc
fimull
pop
pop
iret
pop
iret
cmpsl
iret
cmpsl
push
sub
cmp
inc
rcrb
in
sbbb
mov
lret
mov
or
sub
lock
mov
push
xchg
leave
xchg
jb
aam
xor
lret
daa
mov
in
lea
cltd
mov
jb
cmc
imul
mov
fcmovnbe
mov
je
mov
cmpsb
add
jl
lret
fldt
popa
or
push
mov
stos
lods
into
xchg
sti
mov
and
rcll
mov
xor
mov
xor
and
add
add
mov
mov
add
mov
xor
jmp
cli
push
test
adc
cs
jo
sbb
sbb
sbb
inc
mov
cs
test
orl
inc
adc
arpl
push
inc
xchg
cmpsl
pop
popa
mov
int
repnz
jns
jns
jecxz
into
xchg
or
sbb
loopne
outsl
dec
leave
add
cmpsl
and
mov
pop
mov
orb
ds
fldcw
arpl
pop
mov
pushf
jl
jno
add
and
push
aas
fwait
or
movsb
xchg
es
mov
jle
sub
iret
mov
data16
mov
das
adc
and
lret
outsl
pushf
push
test
sub
daa
bound
pushf
inc
outsb
mov
cmpsl
pop
lahf
imulb
jmp
lods
fisubs
xorb
and
cwtl
pop
cmpsb
add
xchg
aam
lds
pop
divb
push
adc
push
clc
sbb
ret
inc
out
and
jns
and
loopne
inc
loop
je
pop
loopne
ficompl
sbbl
xchg
dec
test
loop
jb
jge,pt
sub
xchg
and
test
pusha
stos
push
add
jmp
fcmovnbe
int
rol
push
mov
stos
inc
xchg
mov
add
jo
test
adc
cmp
mov
ss
mov
fidivs
cwtl
pusha
add
pusha
sbb
sahf
xchg
adc
lea
popa
lods
push
sub
pop
add
fldl
dec
stos
int3
lret
xchg
cs
inc
movsb
paddsb
fidivrs
ja
and
clc
cmp
cmp
test
aas
out
xorb
adc
fistpl
imul
stos
les
divl
xor
mov
mov
into
ret
sub
dec
pop
stos
in
pop
popf
inc
pop
xchg
repnz
stos
jnp
add
scas
and
adc
xor
push
in
mov
insb
dec
clc
js
xchg
and
test
lock
test
fcoml
jge
add
xorb
stos
leave
inc
int
and
push
mov
mov
lock
push
push
lea
xchg
test
bound
jne
out
inc
pop
movsl
mov
jp
and
lds
mov
imul
mov
xor
mov
sub
mov
add
mov
sub
xor
mov
xor
or
xor
mov
sub
mov
mov
mov
xor
xor
sub
div
pop
xor
sub
cmp
jbe
pop
pop
pop
leave
ret
push
mov
and
mov
sub
push
push
push
push
pushl
call
mov
movzwl
push
call
test
jne
movl
xor
movl
jmp
subl
mov
cmpl
not
mov
jmp
not
mov
je
push
push
push
push
push
call
mov
add
movzwl
xor
adc
or
or
xor
cmpl
mov
mov
mov
mov
jmp
mov
movl
ja
push
push
call
add
or
or
mov
mov
sub
add
add
movl
movl
xor
or
sbb
mov
xor
or
adc
mov
orl
xor
xorl
imul
adcl
and
subl
sub
cmpl
movl
movl
movl
jmp
movl
jge
pushl
pushl
push
push
call
andl
add
mov
sbb
sub
and
xor
add
xor
movzbl
adc
xor
mov
add
movl
xor
add
mov
sub
and
movl
movl
sbb
movl
mov
movzwl
sbb
mov
sub
movzbl
or
mov
xorl
and
sbb
jmp
dec
test
and
ljmp
jo
sbb
sbb
adc
sbb
fs
xor
out
popf
dec
dec
aad
jl
inc
outsl
test
or
insl
outsl
idivl
sub
lret
mov
xchg
xor
adc
add
inc
push
adc
push
dec
mov
leave
fcoms
lcall
stos
popa
push
pop
stos
sahf
filds
inc
xchg
aad
mov
fisubs
data16
xchg
dec
test
xor
push
pop
cmp
xor
adc
frstor
jp
mulb
mov
xchg
aam
add
inc
rclb
out
mov
pushl
fucomi
push
sahf
ret
pop
xor
in
or
bound
and
xlat
inc
pushf
jecxz
jl
pusha
and
push
test
movsl
sbb
cwtl
and
sbb
int3
int3
sub
push
hlt
stos
ja
adc
inc
cltd
stc
inc
aad
repnz
xor
adc
imul
mov
jmp
enter
push
pop
mov
adc
mov
push
pop
insl
push
cmp
sbbl
fisttps
xchg
jle
push
mov
or
and
add
cmc
inc
cltd
js
mov
pop
mov
mov
cmp
int
out
and
cmpsb
pop
mov
inc
push
add
pop
xchg
bound
fs
fwait
popa
push
mov
xchg
mov
lea
pop
lds
push
xor
or
xchg
inc
mov
jl
push
xchg
in
sti
inc
push
xor
mov
arpl
mov
inc
in
imul
icebp
or
and
xchg
push
pushf
test
daa
dec
bound
pop
fwait
jmp
and
dec
dec
loop
lods
in
arpl
inc
mov
rcl
imul
mov
xchg
aaa
sbb
mov
aas
cmc
inc
pop
xchg
mov
gs
aam
sub
lcall
sbb
jnp
add
call
in
int3
adc
cmp
cmp
shrl
test
add
fwait
xor
daa
mov
lret
inc
add
lret
xor
cmpsb
inc
cli
adc
xor
sbb
xchg
xchg
test
sub
cwtl
bound
sbbb
mov
push
fnstsw
xchg
daa
shl
or
scas
lret
add
push
cmp
jp
cld
pop
fisubrs
stos
test
sbb
cmp
sub
adc
loopne
std
inc
xchg
mov
or
inc
add
xchg
loop
or
cmpsb
fsubr
popa
dec
jmp
push
push
mov
test
sbb
in
inc
dec
jne
loopne
and
xchg
and
mov
ja
sbb
dec
jg
stos
enter
bound
int
popa
push
test
mov
cmp
popa
outsl
mov
dec
add
mov
subl
jmp
or
leave
dec
addr16
mov
sbb
movsl
xor
xchg
xchg
dec
adc
in
or
ret
aam
pop
mov
sbb
cmpsb
cmp
std
pushf
imul
lods
mov
cmc
fldl
dec
or
mov
pop
stc
into
shlb
lret
mov
adcl
xor
sub
imul
movl
mov
movl
cmp
jne
movl
xor
xor
sbb
movl
movl
movl
pushl
mov
or
movl
cmpl
mov
notl
movl
movzwl
jmp
movl
jne
pushl
call
xor
add
mov
sub
orl
mov
mov
adc
movl
movl
movl
sbb
movl
mov
xor
xor
sub
sub
movl
sbb
movl
or
mov
cmpl
movl
mov
jmp
movl
jb
push
call
sbb
add
sbbl
addl
sub
xor
subl
add
mov
notl
imul
movl
or
xor
xor
adcl
pushl
cmpl
movl
mov
mov
jmp
mov
movl
jl
push
push
pushl
call
add
mov
xor
andl
sbb
and
xor
mov
add
push
pop
xor
subl
div
andl
mov
xorl
xor
or
xor
mov
or
sbb
mov
adcl
div
xor
xor
xor
adcl
pushl
sbb
mov
xorl
mov
orl
pushl
movl
add
pushl
imul
pushl
add
mov
adcl
mov
addl
xor
mov
div
and
subl
or
movl
pushl
orl
call
andl
dec
movl
jne
movl
mov
mov
and
mov
mov
andl
movl
adcl
mov
call
mov
mov
sub
xor
lea
subl
mov
add
lea
mov
or
mov
mov
cmpl
mov
mov
jmp
movl
jbe
pushl
push
push
call
sub
or
add
xor
dec
incl
cmpl
movl
movl
movl
jmp
movl
mov
ja
push
pushl
push
pushl
push
push
pushl
push
call
mov
xor
mov
adc
sub
add
adc
mov
sbb
mov
and
mov
cmpl
movl
movl
movl
movl
jmp
mov
mov
ja
push
push
push
push
call
sbb
sub
mov
mov
sub
add
xor
or
add
xor
and
mov
xor
cmpl
not
mov
movl
movl
jmp
mov
movl
je
pushl
pushl
pushl
push
call
neg
add
sbb
xor
movl
and
xor
add
shl
shr
or
mov
cmpl
movzwl
mov
movl
jmp
movl
movl
jae
pushl
push
push
call
movzwl
sub
mov
adc
mov
adc
mov
mov
sub
imul
inc
xorl
and
andl
mov
mov
mov
and
mov
movl
mov
mov
xor
mov
shrd
neg
shr
addl
mov
mov
jmp
push
lcall
pop
dec
iret
jo
adc
sbb
adc
sbb
adc
xor
out
outsb
int
jne
cs
in
adc
ds
jo
inc
dec
mov
dec
xchg
sar
fcmove
fbld
xchg
cmp
xchg
mov
mov
scas
movlps
dec
mov
xor
mov
push
test
jmp
inc
adc
pop
mov
movsl
faddp
arpl
daa
out
cld
cmp
arpl
cmpsl
mov
in
mov
mov
nop
repnz
push
loope
push
les
cs
and
mov
push
inc
pop
shrb
sub
loopne
and
ret
pop
pushf
push
scas
rcrl
gs
not
outsb
inc
loope
shll
inc
lea
andl
adc
enter
push
jb
loope
js
inc
add
or
mov
outsb
dec
inc
push
fldenv
cltd
mov
outsb
cmp
popa
aad
xlat
pop
shl
sub
add
and
enter
jb
sbb
js
stc
pop
lods
out
inc
mov
cmp
test
xchg
dec
nop
pop
jno
xor
xchg
cwtl
add
test
lret
popa
idivb
hlt
cltd
jp
ss
test
xchg
xor
cmp
sbb
shl
ret
mov
daa
sub
dec
adc
sbb
sbb
xchg
jno
adc
popa
mull
push
jo
mov
int3
imul
dec
push
fiadds
jmp
inc
bound
jns
scas
push
push
mov
mov
std
mov
mov
ret
push
pop
xor
dec
mov
ret
cs
mov
sub
add
pop
pop
int
je
outsl
fcomi
stos
push
cwtl
andb
pop
test
add
mov
sbb
leave
pusha
dec
ds
xchg
gs
jg
stos
data16
or
add
pop
in
sbb
xchg
add
mov
aaa
pop
aam
pushf
cmp
adc
inc
mov
daa
roll
mov
adc
fisubrl
ja
scas
sbb
and
pushf
jns
fwait
pusha
sbb
lcall
xchg
cwtl
les
add
push
cmpsl
xchg
cmp
mov
test
cmpsl
push
mov
sbb
int3
or
outsb
pop
mov
cs
orl
mov
scas
xchg
sub
fimuls
mov
pusha
adc
push
popf
dec
inc
adc
into
xchg
sbb
mov
pop
jae
cmp
rolb
out
sahf
jmp
addr16
push
stos
push
mov
sbb
dec
jae
andb
xor
mov
jle
push
jmp
lods
sbb
push
xchg
cmp
inc
cmp
test
mov
inc
int3
aas
hlt
add
ret
popf
cld
sub
jp
dec
jle
jge
jo
inc
and
mov
jmp
mov
call
in
out
fsubl
loop
mov
cmp
out
fwait
dec
xchg
scas
mov
mov
test
roll
int3
jle
mov
pushf
sbb
cmp
add
sahf
cld
aas
push
in
or
sub
push
test
daa
push
mov
mov
pushf
stos
jae
sbb
jno
mov
test
pop
imul
rorb
shlb
push
pushl
lea
negl
push
andl
shl
call
subl
lea
orl
push
subl
mov
mov
subl
lea
push
mov
orl
lea
mov
xorl
mov
adcl
jmp
imul
inc
push
out
push
or
sbb
adc
sbb
fldcw
js
or
jecxz
bound
xchg
repz
test
fdivrs
push
pusha
mov
add
stos
aaa
cmpsl
inc
adc
xchg
lock
lahf
shrl
cmc
jae
int3
xchg
mov
jge
sbb
and
mov
les
jae
mov
pop
sub
sar
pushf
outsb
popa
mov
push
dec
sbb
ljmp
int
mov
jno
cld
mov
jge
into
add
insb
jge
and
popf
mov
sti
or
arpl
xor
roll
imul
and
scas
popf
je
xor
sub
sbb
cmp
fcompl
and
xor
repz
jp
xchg
dec
scas
stc
adc
out
pop
mov
sub
cmp
out
jbe
fwait
fwait
mov
shrl
rcll
mov
xchg
in
cmpsl
or
sub
pop
push
cli
dec
inc
jbe
add
push
push
inc
icebp
jg
sbb
loop
fwait
cmp
cmpsl
insb
icebp
push
fisubrs
inc
repnz
inc
sbb
sub
sbbb
pop
push
fs
or
adc
frstor
and
mov
adc
fcoms
pop
lock
notb
subl
aam
jne
addr16
cmpsb
fidivrs
iret
pop
xchg
pop
mov
mov
inc
jno
sahf
inc
sbb
mov
stc
pushf
inc
mov
xchg
fdivrp
cld
test
stos
nop
cld
fstpt
xchg
leave
xor
icebp
scas
lock
mov
gs
xor
ds
sub
or
ja
lret
aad
and
mov
insb
pop
dec
jno
shlb
loop
sbb
push
cmpsb
sahf
lret
ss
aam
and
and
add
jge
inc
or
adc
xchg
pop
sti
lods
in
in
jo
popa
inc
fs
mov
insb
comiss
add
lcall
and
mov
jae
test
outsl
add
clc
dec
stos
or
mov
andl
subl
inc
jne
cwtl
insb
insl
push
fmuls
pushf
mov
into
add
adc
lock
cli
and
cmp
mov
adc
push
sbb
mov
ret
adc
int
push
movsb
pop
mov
fwait
mov
dec
bound
add
or
mov
pop
add
cld
je
xor
flds
adcb
add
arpl
adc
popf
iret
pop
sbb
push
ret
adc
jle
cmp
cltd
adc
insb
mov
jmp
cli
xchg
loope
xchg
add
lock
push
sub
out
into
pop
addr16
icebp
movsl
dec
jb
pop
scas
les
mov
xor
dec
in
rcrl
push
jle
arpl
aaa
inc
loopne
idivb
std
mov
out
rol
out
push
imul
and
adc
fsubl
sbb
ja
int
jnp
lcall
push
test
ljmp
arpl
pop
fcomps
ljmp
je
sbb
sub
addb
pushf
add
add
mov
push
in
xor
cs
stos
inc
add
sbb
adc
sbb
inc
xchg
cmpsb
cltd
movlps
cmc
push
popa
lret
lea
into
xchg
pushf
dec
sbb
cmp
dec
mov
mov
pop
xchg
cmpsb
mov
xor
and
ds
mov
inc
cld
fmuls
adc
mov
push
daa
or
dec
jmp
push
and
je
xor
or
sbb
xor
xchg
movsl
or
jno
fstpl
subl
lahf
into
adc
push
dec
xchg
xchg
shl
out
lock
shll
cld
and
aas
sbb
jle
mov
in
mov
sub
jbe
mov
cld
test
push
lock
xchg
push
push
xchg
mov
mov
xor
xchg
sahf
arpl
scas
add
in
test
pop
jbe
arpl
out
xor
popa
mov
push
and
inc
jae
jecxz
sub
pop
inc
lret
aam
lock
std
xchg
cwtl
ja
or
inc
pop
aad
adc
ljmp
cmc
test
xor
cmp
inc
dec
mov
flds
fdivrs
and
push
lock
xchg
lds
lds
arpl
add
push
in
fnstenv
lret
adc
push
icebp
jno
mov
dec
mov
test
xor
insb
adc
test
dec
xchg
sti
or
adc
add
and
and
dec
pop
push
xor
imul
testl
in
jno
or
jns
mov
pop
add
out
outsb
inc
enter
push
add
jnp
rcll
enter
out
test
push
cmp
push
inc
leave
cmp
dec
rcrl
dec
je
jnp
aas
fstl
data16
mov
cmp
imul
sti
cli
addr16
fucomip
sub
test
imul
imul
adc
int
flds
cmc
cmp
and
jle
inc
cmp
pushf
subb
push
loope
cmp
xchg
iret
pop
repz
arpl
pop
sbb
or
mov
xchg
mul
mov
sbb
test
xlat
out
lea
imul
shrl
inc
jl
daa
sub
into
cmpb
cli
inc
jge
cli
ljmp
mov
pop
icebp
divl
sub
scas
mov
adc
or
dec
pop
ror
sub
in
pop
adc
push
xchg
fnstcw
add
or
sbb
ficoml
and
jmp
in
cmp
std
pop
push
jns
add
push
dec
cs
sbb
xchg
lds
mov
loope
xor
sbb
cmp
test
rcrb
pop
jl
xor
arpl
mov
dec
addb
mov
push
push
dec
push
dec
fistl
xor
aaa
pop
test
push
xor
and
pop
cmpsl
pop
mov
inc
fwait
repnz
mov
dec
dec
js
push
xor
stos
add
fwait
popa
cs
aas
std
sub
shl
mov
adcb
inc
incl
add
add
xor
addb
js
inc
add
add
je
adc
in
decl
dec
and
and
mov
neg
mov
shr
shl
or
mov
xor
add
sub
or
mov
xor
mov
sbb
lea
mov
xor
lea
sub
mov
mov
sub
mov
sub
mov
mov
xor
lea
movzbl
and
xor
cmpl
movl
not
jmp
mov
movl
jbe
push
call
sbb
add
sbbl
subl
movzbl
sub
mov
movl
sub
movl
movl
subl
movl
cmpl
mov
mov
movl
jmp
mov
jbe
pushl
call
sub
mov
sbb
adc
and
adcl
sbb
xor
mov
mov
xor
mov
movzbl
and
mov
xor
mov
add
movl
adc
subl
xor
cmpl
mov
mov
mov
jmp
movl
je
push
push
push
push
call
inc
and
orl
orl
xor
and
mov
mov
xor
mov
adc
and
mov
adc
movl
adc
movl
cmpl
mov
mov
movl
jmp
mov
jne
pushl
push
call
xor
sbb
sbb
movzwl
or
movl
movl
add
movl
movl
movl
notl
mov
movl
mov
cmpl
notl
movl
jmp
not
jg
pushl
push
pushl
push
push
pushl
call
xor
mov
or
sub
adcl
subl
mov
mov
push
push
or
or
push
push
call
mov
mov
sub
mov
jmp
je
or
pop
pop
mov
cmp
inc
cld
push
sbb
adc
sbb
cmp
push
cmp
adc
dec
mov
mov
addr16
ljmp
ljmp
add
rcrb
stc
test
in
scas
add
dec
pop
pop
sbb
shll
xor
xor
add
adc
jae
lds
nop
lods
imul
dec
repnz
jmp
icebp
adc
inc
dec
gs
sbb
fmulp
lahf
jno
rcl
out
sub
jae
into
mov
add
xor
mov
sbb
dec
push
addl
mov
xchg
push
xchg
fs
xchg
enter
push
ret
fwait
mov
dec
jg
push
test
xor
pusha
ror
ja
aas
lcall
sbbb
iret
das
enter
xchg
mov
test
xchg
dec
push
mul
pushf
sbb
lock
cmpsl
ljmp
es
and
in
test
or
adc
mov
pop
jae
andl
sbbb
mov
rcrl
movhps
movb
es
push
adc
lahf
xchg
cmpsb
dec
push
cmp
insl
stc
cmp
add
inc
mov
fsubl
xor
sub
inc
jle
sarl
nop
cld
fbstp
enter
xchg
pop
dec
icebp
fstpl
inc
jmp
lds
ret
pop
xor
and
jle
cmp
test
std
inc
adc
push
or
fcoms
arpl
lds
xchg
adc
lods
push
roll
shlb
int3
or
pop
lret
sub
lret
fdivrs
jno
js
test
push
lcall
aam
scas
stos
xchg
imul
imul
mov
in
je
lock
cmp
push
out
cld
jno
pavgb
and
sbb
mov
lods
push
xchg
xchg
pop
add
push
cmp
js
imul
dec
push
in
or
daa
sahf
inc
subl
xchg
push
cmp
or
pop
jle
jnp
dec
loope
bound
jo
dec
ja
adc
call
fsubrl
lcall
push
cmp
ss
cmp
loopne
pop
jno
aaa
jg
inc
negb
int3
aaa
mov
repnz
enter
ja
imul
scas
push
push
mov
pop
jecxz
jns
rolb
mov
adc
push
pop
sub
jg
cmp
jge
orl
jnp,pn
lea
cmc
data16
mov
cmp
in
lods
movsl
inc
add
icebp
pmaxsw
jne
cmp
dec
rcr
rcll
daa
cld
scas
cmp
lods
cmp
dec
popf
cmpsl
sbb
cmp
arpl
jno
fs
es
xchg
repnz
fnstenv
mov
push
xchg
inc
adc
mov
xlat
inc
mov
stos
inc
lcall
fwait
int3
cltd
out
xchg
lret
mov
or
jmp
addl
inc
xchg
adc
repz
pop
or
faddl
or
or
outsl
fwait
dec
lods
push
mov
sub
adc
lods
push
xlat
loop
xor
sbb
mov
cmp
jne
cmp
je
movl
movl
movl
movl
mov
mov
mov
mov
add
adc
xor
xor
and
mov
and
mov
jmp
and
and
fisttpl
push
sbb
adc
sbb
pop
testb
out
xor
fsubl
inc
cli
cmp
dec
xor
jge
hlt
mov
jecxz
jp
insl
add
xchg
aam
call
push
movl
xchg
mov
nop
int
mov
cltd
fcmovnu
sbb
mov
imul
leave
iret
mov
lret
divb
sub
popf
lds
sub
lods
xor
flds
clc
ficoml
iret
imul
ret
stos
in
jmp
cmpsl
insl
test
test
mov
int3
xor
in
int3
add
pop
sbb
add
cmpsb
ds
add
sbb
mov
in
or
test
push
arpl
les
sbb
pop
pop
imul
fsqrt
cmp
sti
xor
into
in
mulb
inc
lds
iret
loop
lods
lahf
adc
insl
xor
dec
cmp
jp
mov
jne
imull
sarb
les
push
add
clc
and
aad
mov
adc
mov
idivb
push
push
out
sbb
sbb
dec
rcr
shrl
mov
test
es
mov
ror
std
in
adc
test
setno
or
cmp
sbb
add
lret
add
jae
cld
mov
test
push
daa
sub
pusha
nop
mov
xor
dec
jbe
xchg
pop
jl
les
adc
lret
fwait
mov
shlb
stc
shll
jmp
or
pop
xchg
xchg
pop
lods
cmp
or
add
jbe
movsb
les
pop
movl
test
cmp
mov
iret
ds
sbb
ljmp
add
scas
pandn
std
pop
mov
and
cmp
cltd
xor
push
cmp
test
stos
test
out
add
stos
and
shrb
setnp
inc
mov
lds
hlt
sbb
int
mov
clc
popa
loope
mov
scas
fstpl
ljmp
fbld
test
jo
fcmovne
insl
xchg
and
pushf
or
pop
repz
enter
ds
jmp
mov
sarb
mov
daa
xchg
mov
fsubr
inc
fsubs
pushf
insl
adc
fsubrl
pop
dec
pop
push
jecxz
aas
out
test
in
test
orb
jecxz
lds
sbb
add
into
xchg
dec
in
lret
insb
inc
aas
dec
lgs
mov
jg
xlat
fnstsw
sbb
lret
sbb
sub
js
adc
inc
xor
mov
or
jle
xor
pusha
lret
fstl
ja
leave
inc
inc
jne
push
pop
scas
inc
cwtl
fcom
cmp
sbb
xchg
jno
sarl
cld
test
mov
pop
in
sbb
mov
xchg
pop
pop
jmp
push
aaa
insb
idivb
imul
push
insb
xorl
sbb
pop
jae
sbb
jb
xchg
mov
loopne
daa
out
sub
sbb
andl
jae
mov
shl
mov
movl
movl
movl
movl
movl
movl
movl
movl
mov
jmp
push
pop
xlat
jns
cmp
mov
std
adc
inc
out
push
sbb
adc
sbb
cli
fistpll
and
out
loope
arpl
iret
sbb
lret
dec
shll
fildl
jmp
in
jmp
push
adc
inc
inc
adcl
jmp
sbb
stos
std
pop
sub
dec
dec
pop
call
jmp
cli
test
sub
mov
test
or
js
lcall
cmp
push
jae
cltd
fistps
jno
and
inc
int
inc
cld
sarl
test
jno
das
sub
fstl
test
mov
pop
test
cmpsl
dec
inc
inc
jnp
mov
pop
mov
mov
out
sbb
adc
dec
mov
push
arpl
mov
push
or
lds
push
or
cmp
lret
fwait
xchg
ljmp
dec
in
sbb
mov
cld
xor
rcrl
push
inc
push
fdivs
xchg
sbb
jne
ret
popf
scas
cs
loop
xor
mov
lds
stos
push
loopne
add
sbb
movl
add
push
enter
daa
cmpsb
sub
inc
lods
popf
inc
push
gs
xchg
dec
cmp
rdmsr
adc
adc
int3
inc
fcomps
push
push
and
cmp
xor
clc
mov
xchg
data16
lret
cltd
shll
je
pop
pop
shll
sub
lcall
push
cmc
imul
lret
frstor
repz
cli
fnstcw
mov
pop
sub
lahf
std
pop
fs
inc
ficompl
push
sub
scas
pop
push
pusha
out
cmp
sbb
ljmp
adc
movsl
mov
lret
push
inc
xor
sbb
add
sub
and
and
aad
iret
arpl
dec
push
inc
sbb
push
push
pop
lret
jl
xor
popa
inc
jae
pop
daa
and
mov
jge
subb
shll
adc
cltd
sbb
sub
cmc
sbb
push
jns
insb
mov
andb
xor
jl
ja
jmp
add
push
xchg
subb
aaa
les
sub
popa
add
push
push
xor
and
pop
jl
push
jmp
mov
out
pop
inc
xorb
and
std
pushf
adc
cmp
xchg
mov
imulb
dec
add
mov
adc
sahf
aam
addr16
add
lods
daa
adc
inc
push
adc
adc
ficompl
push
aaa
push
sub
scas
shrl
lahf
push
test
jne
mov
push
pop
jno
push
mov
sbb
daa
sub
lret
xor
dec
mov
loope
or
or
outsb
and
push
jmp
pop
in
jno
pop
adc
into
out
lret
ss
mov
sub
dec
aad
add
nop
mov
inc
xor
cwtl
xchg
xor
sarb
inc
xor
scas
ret
mov
pusha
xchg
movsl
pop
lock
sbb
fadds
pop
call
mov
hlt
arpl
fcmovnu
in
push
sub
repnz
cmp
and
pop
pop
lea
lret
push
cltd
aaa
mov
xchg
inc
mov
mov
push
push
xor
xor
push
push
call
mov
mov
push
push
push
push
call
mov
mov
push
push
push
push
call
mov
mov
add
mov
adc
mov
cmp
jne
cmp
je
mov
mov
xor
shld
shl
jmp
sub
lds
and
ds
jno
stos
jbe
imul
adc
sbb
imul
dec
cmp
push
insl
jmp
mov
push
jno
pop
cmp
sti
xchg
out
testl
or
xchg
adc
xchg
xlat
sbb
dec
fistl
popf
inc
cmp
mov
ret
sbb
mov
je
sbb
cmp
mov
in
imul
iret
or
add
sub
add
dec
stos
popa
lret
inc
dec
clc
test
rolb
imul
dec
jae
mov
adc
les
cld
adc
cmpsb
cmc
clc
ljmp
sti
jb
push
dec
jnp
dec
fisttps
dec
mov
ja
movsl
mov
in
mov
pusha
dec
lret
lock
jge
pop
sub
mov
mov
adc
fstps
cltd
dec
add
cmp
sbb
adc
outsl
add
sbb
in
pushf
fildll
ljmp
dec
xor
mov
and
dec
std
pop
int3
pushf
inc
mov
or
cmc
rclb
adc
jmp
mov
add
push
mov
xchg
dec
popa
jmp
cmp
xchg
cwtl
jle
push
and
bound
dec
aas
pop
test
pop
and
loop
icebp
add
mov
adc
bound
clc
or
mov
sbb
and
jne
in
insb
fisubrl
adc
cmp
movsl
mov
fisubrl
and
imul
mov
js
ja
xor
hlt
cmp
cmp
fmulp
and
and
xor
inc
lods
int
mov
stc
js
cmp
scas
mov
dec
adc
cmc
and
jl
cmp
jmp
push
xchg
or
test
into
dec
pop
sub
lods
arpl
add
adc
and
imul
lds
fcmovb
lds
and
and
pop
orb
jp
mov
aad
or
push
cmp
cmp
lea
jb
jno
push
mov
mov
sub
movsl
mov
jne
sub
add
push
cmpsb
mov
sbb
mov
je
cmp
testb
pop
xor
pop
inc
dec
cmp
xor
sti
mov
test
pusha
xor
lret
shrb
jnp
lret
mov
pop
mov
and
adc
push
xor
push
fucom
mov
lock
sti
cmc
mov
push
aaa
pushf
repz
sbbl
jecxz
mov
jbe
sbb
dec
dec
sbbb
cmpsl
aam
jne
xor
xor
out
cmpsb
je
ss
xor
cmp
jae
mov
enter
xlat
mov
adc
decl
testl
xor
pushf
cli
outsb
scas
cmp
sti
mov
gs
cmp
repz
mov
test
adc
es
push
and
jnp
and
outsb
mov
sbb
push
rclb
scas
and
stc
inc
add
aaa
rolb
mov
sub
and
shrb
fstps
pop
inc
negb
es
push
push
insl
mov
sub
mov
or
pop
stos
sbb
xlat
fwait
sub
sti
outsb
insl
lods
pop
dec
cmp
mov
mov
mov
xor
xor
mov
cmp
jne
cmp
je
mov
cmp
je
mov
mov
xor
xor
shrd
shr
mov
mov
mov
shl
xor
or
xor
mov
mov
or
cltd
cmp
jne
cmp
jne
movl
movl
mov
mov
mov
xor
shld
shl
mov
mov
xor
xor
mov
cmp
jne
cmp
jne
movl
mov
mov
shrd
shr
mov
mov
mov
mov
mov
shl
mov
xor
xor
or
cmp
jne
mov
mov
mov
mov
mov
mov
movzwl
mov
and
mov
or
mov
add
or
mov
mov
mov
jmp
cs
and
push
mov
mov
inc
loope
sbb
adc
sbb
incb
jb
js
cmc
cwtl
faddl
cmc
lahf
icebp
pop
cmpsb
dec
mov
mov
outsl
inc
icebp
aam
sbb
ret
xchg
jnp
cmp
cmp
movl
mul
ret
add
sahf
mov
push
int
jge
push
leave
push
push
fistps
mov
push
lea
xchg
mull
add
data16
cmp
sahf
cs
or
stc
sbb
stos
data16
loope
lea
scas
movsb
arpl
es
loop
lods
push
aaa
mov
arpl
lret
mov
xor
scas
jnp
lret
and
dec
sub
inc
mov
movsl
mov
xchg
pop
incl
incl
adc
xchg
lea
or
xorb
push
test
out
xchg
mov
inc
or
add
iret
and
loopne
mov
unpckhps
aad
fs
inc
insl
dec
mov
jno
int
test
outsb
data16
push
mov
dec
pop
mov
in
dec
or
pop
mov
mov
flds
jbe
pop
addr16
inc
pusha
mov
in
jnp
add
adc
or
cwtl
repz
cmp
pop
add
xor
mov
cld
ja
outsl
lcall
pop
xchg
jnp
ljmp
movsl
sub
lods
pop
data16
test
or
fisubrl
arpl
test
adc
fcmovu
lods
push
cmp
push
adc
rcl
outsl
aaa
repnz
aam
lcall
lods
adc
push
aas
jbe
pop
inc
sbb
cmp
int3
clc
cmp
daa
shlb
push
push
in
sarb
bound
jmp
adc
scas
mov
stos
cmp
out
adc
js
loope
cmp
mov
cmp
ret
sbb
cmp
popl
das
movb
fidivrl
cmpsb
xor
cwtl
sub
cmp
imulb
stc
xchg
outsb
outsl
add
mov
aaa
movsl
dec
sti
xchg
jno
out
loopne
lock
imul
sarb
adc
inc
out
pushf
cmp
or
add
fisubrs
mov
inc
adc
pop
out
repz
aas
cmp
cmp
cmpsb
xchg
repnz
stc
pop
mov
add
cwtl
cwtl
xchg
jl
xor
dec
shll
mov
jp
enter
loope
mov
cmp
inc
cli
aaa
xchg
in
aas
shrb
hlt
lcall
push
sub
in
in
jne
fldlg2
in
out
push
adc
outsl
mov
or
cmp
aas
push
loope
arpl
and
out
dec
sbb
rolb
and
aas
roll
outsl
push
mov
mov
pop
aad
ljmp
fsts
xchg
jge
test
jmp
enter
push
std
dec
sub
dec
aam
and
clc
and
rorl
inc
aam
inc
jmp
push
push
mov
mov
mov
mov
mov
mov
mov
mov
or
mov
or
mov
sub
mov
sub
mov
cmp
jbe
mov
mov
mov
mov
movzwl
mov
or
mov
sub
mov
or
imul
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
sub
mov
xor
mov
imul
mov
and
mov
and
jmp
cmp
cmp
or
inc
fistl
sbb
adc
sbb
fcmovnb
outsb
mov
fdivrp
cli
les
loopne
pop
shll
cli
mov
push
push
sahf
mov
mov
ja
jecxz
nop
out
mov
jb
jno
mov
ret
es
in
pop
mov
sti
loopne
enter
imul
add
and
insl
fldcw
cmpsl
or
jbe
iret
dec
pop
pusha
stc
inc
xor
mov
mov
test
aad
repnz
js
out
bnd
or
pop
xchg
stos
xlat
and
popw
jl
addl
stos
mov
jp
jnp
push
inc
mov
push
in
push
and
pop
out
aam
xchg
mov
test
lods
mov
sub
popa
mov
je
shlb
test
add
imul
ss
cs
out
out
popa
add
xor
jle
pop
pushf
int
xchg
mov
add
jno
rclb
inc
mov
lods
sahf
dec
scas
jb
movsl
jns
rcrl
pushf
leave
js
dec
cmp
mov
addr16
jmp
pop
cmp
sub
or
aas
and
ds
les
neg
push
aas
sbb
je
mov
jle
dec
cltd
dec
jo
popa
jmp
ret
sahf
cld
xor
in
and
and
mov
cmpsb
repnz
sub
std
xor
jo
sub
jmp
insb
and
out
pop
sbb
test
jo
lock
xchg
adc
cmp
out
test
call
add
es
jns
fldl
fs
arpl
and
out
push
test
xchg
pop
push
fstl
add
cmc
aam
in
test
test
cmp
mov
jno
stos
popa
adc
pusha
dec
sbb
sahf
test
mov
divb
cli
psubusb
or
jnp
sbbb
push
push
mov
dec
or
leave
mov
shrb
pop
das
je
sahf
jno
dec
jb
jno
out
xchg
mov
inc
push
sub
mov
xor
and
fadd
cltd
fidivrl
sbb
cmp
push
aas
push
fwait
pop
popa
roll
mov
xchg
mov
cltd
je
xchg
adc
enter
movsb
lods
lock
popa
jb
mov
xor
insl
mov
fsubp
test
xchg
jmp
test
adcb
mov
iret
je
sub
inc
fsub
mov
cmc
mov
mov
loop
or
xlat
inc
stos
in
add
and
pop
jl
sbb
icebp
jp
jmp
sub
inc
sbb
jb
cmc
mov
in
pop
repz
jnp
xor
push
push
das
int
cltd
inc
clc
and
cltd
lods
xchg
xchg
test
jo
pop
loopne
pop
sub
loopne
mov
mov
add
addr16
jae
dec
mov
jmp
test
cs
loope
mov
sahf
sub
add
ret
hlt
lret
inc
lea
fistl
and
sub
push
pop
sbb
loope
pusha
jbe
outsl
fistpll
mov
arpl
adc
jp
rol
movsl
or
rorl
mov
add
push
and
cmp
ja
mov
mov
shrd
xor
mov
shr
jmp
inc
inc
in
loop
cmp
pop
pop
or
int
jle
rcll
sbb
adc
sbb
adc
stc
push
and
xchg
jae
test
inc
int3
ljmp
lods
push
pop
pop
lock
test
clc
and
imul
int
mov
xchg
out
les
cmpsb
or
ljmp
xchg
movsl
sbb
rcrb
adc
xor
je
xor
fdivl
pop
ror
arpl
stos
icebp
jae
jo
ja
mov
in
cmp
sub
das
mov
lret
into
mov
xchg
cmpsl
mov
mov
out
or
sbb
pop
xor
scas
filds
mov
out
je
inc
lds
out
mov
sbb
arpl
sbb
cmp
pop
scas
push
add
pop
cmpsl
mov
mov
mov
cmp
mov
xchg
into
into
call
stc
xor
cmovnp
sbb
mov
mov
fwait
std
ss
mov
or
mov
mov
loope
cli
fistpll
xor
and
add
hlt
xchg
sub
xchg
rorl
push
mov
push
or
mov
and
pop
mov
stc
fistl
mov
sbb
push
xor
ljmp
setle
lock
ss
data16
mov
sub
in
les
test
dec
sti
adc
pop
subb
insl
aaa
fldcw
leave
inc
pop
test
dec
addr16
add
cmpsl
xor
je
clc
add
push
out
enter
xchg
divl
aas
imul
std
inc
loope
stos
pusha
xchg
fidivrs
push
or
call
call
jg
repz
sub
arpl
rcrl
fs
jne
negl
fs
icebp
adc
movsl
sub
xchg
push
cs
dec
push
cwtl
cmp
call
in
pop
jnp
inc
cmpsb
orl
pop
pop
stos
or
mov
ljmp
lcall
int
nop
sub
and
in
ja
sbb
pop
mov
or
mov
xchg
push
and
daa
inc
xor
test
fdivrs
inc
test
xchg
sub
mov
bnd
aas
fdivs
push
mov
jg
mov
rcrl
xchg
jne
andb
pop
insb
and
scas
jne
cmp
add
adc
stos
mov
jge
js
cld
arpl
jle
xor
jmp
pushf
insb
gs
lods
int3
dec
push
fcmovnu
xchg
push
adc
or
pusha
xchg
mov
xchg
sub
das
in
inc
adc
xor
and
stos
aas
call
adc
inc
inc
pop
mov
xchg
cmp
mov
ja
or
fwait
pop
push
jle
repnz
dec
test
popf
cld
stc
nop
mov
lcall
bound
mov
outsl
push
sbb
jmp
push
mov
adc
scas
ret
add
data16
pop
add
lods
push
mov
call
das
mov
mov
hlt
lret
dec
stos
orl
add
add
xor
jb
cmpsb
xchg
sbb
push
addr16
sbb
sbb
mov
jge
dec
test
divl
fbstp
data16
jae
mov
sbb
lcall
push
icebp
inc
mov
ja
mov
cmp
mov
call
push
push
hlt
xor
jge
fidivrs
sbb
mov
lds
push
dec
enter
icebp
lret
int
out
mov
mov
imul
inc
lret
movsb
mov
dec
fists
subb
out
ja
test
iretw
sti
inc
sub
cld
pop
data16
xor
dec
push
jecxz
cmpsl
mov
push
ljmp
rorb
add
or
gs
push
fnsave
push
mov
mov
xor
mov
mov
dec
cmp
add
data16
inc
into
inc
jne
fs
lds
sbb
leave
inc
sub
mov
add
cmp
movsb
xchg
jno
and
mov
cmp
push
mov
or
or
jbe
add
lcall
jbe
rep
movd
sub
mov
and
mov
adc
aas
mov
test
popa
push
cmp
sbb
lcall
mov
adc
stc
into
xchg
jp
cmp
xchg
jecxz
jno
mov
je
xchg
mulb
insb
cmpsb
sub
cmp
fstps
imul
stos
mov
lret
xor
adc
shlb
sub
mov
lea
out
fisubrl
clc
mov
mov
outsb
repnz
cmpsl
and
sbb
aad
sbb
xor
push
jne
push
cmp
imul
xor
xchg
push
mov
or
mov
iret
adc
loopne
sbb
inc
xchg
pop
cwtl
shlb
scas
ds
and
mov
int3
les
out
sbb
jmp
sub
dec
xchg
cmpl
jg
imul
cli
mov
pop
in
loope
cltd
add
and
inc
pop
das
iret
hlt
add
or
cwtl
push
outsb
test
sarl
inc
into
jg
inc
add
fidivl
xlat
xchg
adc
or
das
jge
xchg
out
cmp
rorb
jae
xchg
or
stc
push
jg
andb
lret
imul
stos
gs
inc
fcomip
in
jg
add
inc
repz
jecxz
int
je
dec
add
int
pop
les
jae
push
ljmp
in
pop
mov
mov
adc
pop
lahf
or
sbb
jb
mov
push
dec
lahf
and
mov
int3
inc
push
stos
out
jmp
push
add
scas
push
hlt
out
inc
dec
negl
xor
push
xor
jecxz
notb
es
or
stc
outsb
and
sub
les
jb
lods
xchg
scas
incb
xor
sub
xchg
sub
outsl
lds
sti
je
test
sub
dec
fucomi
sub
loopne
push
ja
aam
aas
cld
loope
loopne
cli
sbb
icebp
push
into
adc
sbb
or
shll
mov
xchg
insb
or
adc
push
mov
rorb
rcll
shl
push
lea
push
lea
push
call
pushl
pushl
jmp
xor
fistpll
popf
jo
pop
imul
fisttps
aam
mov
movsl
adcb
sub
test
mov
jg
xchg
jge
daa
fiaddl
aas
dec
mov
iret
jns
aad
or
inc
mov
mov
sbb
repz
fdivrl
popf
add
test
xchg
mov
push
shrb
mov
pop
xchg
fsub
dec
sbb
fistpl
and
jnp
or
mov
adcb
push
hlt
or
and
cmp
sahf
push
ret
cld
mov
add
stc
and
xorl
sbb
fmull
xor
movsl
das
movsl
cmpsl
nop
dec
lods
xlat
mov
push
push
fld
inc
and
fwait
pop
scas
push
push
push
in
movsb
fldt
adc
outsl
daa
std
in
inc
xchg
pop
sbb
shrl
test
daa
dec
call
adc
rcr
stc
xchg
pop
sub
or
sub
jle
jnp
jle
in
push
mov
and
rcrb
mov
outsb
push
pop
popl
jns
cmp
add
xchg
jno
jo
jecxz
jmp
pop
jmp
inc
pusha
stos
pop
lods
dec
jmp
and
cmpsb
movsb
jl
mov
nop
push
pop
mov
add
cmc
adc
pusha
arpl
jae
in
outsl
out
clc
push
aam
cmpsb
mov
outsl
mov
outsl
and
mov
shll
fcmovb
fdivrp
cmp
jle
cmp
andl
lcall
push
jae
les
shll
lcall
mov
push
mov
pop
aad
sbb
sub
out
lret
adc
in
sub
roll
jae
mov
std
adc
fdivr
es
div
dec
add
cmc
rcrb
je
aas
gs
dec
cmc
sqrtps
lahf
sbb
push
mov
jge
es
cmpsb
test
fistps
pop
ret
jno
mov
jb
push
and
fnstsw
mov
inc
pop
jb
add
xor
aas
xorl
stos
lods
mov
cmp
pop
mov
repz
insl
fstp
sahf
xor
mov
lock
pop
stos
add
fstps
xor
aas
mov
add
ja
jae
jbe
fbld
jl
sub
daa
and
jnp
fwait
dec
mov
adc
sub
bound
es
test
xor
aad
ds
cwtl
fwait
pop
cmc
in
ss
mov
movsl
xor
cmp
push
decb
pop
push
shrb
inc
out
mov
test
push
mov
idivb
adc
notl
mov
enter
push
ret
iret
mov
xchg
pushf
lods
fiadds
xor
xor
test
inc
add
pop
cs
mov
adc
pop
orl
cmp
punpckhdq
push
std
aam
cmc
test
mov
aad
xor
cltd
mov
hlt
lea
xor
mov
pusha
pop
fldcw
sahf
push
popf
xor
data16
mov
outsb
push
shll
dec
jae
cmp
sbb
inc
jns
dec
hlt
mov
lcall
push
mov
je
and
je
and
out
pushf
decl
inc
and
mov
mov
shrd
shr
shl
xor
mov
xor
or
mov
mov
mov
mov
shrd
xor
mov
shl
shr
mov
xor
or
mov
mov
mov
mov
mov
cmp
jne
mov
mov
mov
cmp
jne
movb
movb
movb
movb
mov
mov
or
sub
mov
sub
jmp
jns
imul
pop
notl
jle
mov
sbb
xchg
push
in
fidivrs
adc
xor
mov
pusha
je
xchg
and
icebp
cld
enter
push
test
cs
push
adc
scas
cli
ja
xchg
mov
popa
xor
dec
xlat
pushf
lea
std
jg
lret
push
adc
lret
in
ror
cmpsl
jo
scas
push
in
dec
xchg
bound
xor
mov
pop
dec
sbb
or
or
cmpsb
push
cld
dec
xor
jmp
mov
icebp
fcmovu
sti
stc
sub
cmp
sar
scas
into
sbb
cmp
bound
loop
and
jbe
mov
xlat
orl
pop
inc
and
push
cli
push
clc
push
out
jecxz
add
mov
cs
inc
imul
cmpsb
add
or
sbb
jp
pop
mov
pop
idiv
in
shrl
dec
lret
pop
nop
sub
mov
sub
test
dec
add
mov
test
call
cmp
jmp
cmpsb
mov
lahf
in
repz
sbb
push
and
pop
es
scas
mov
es
mov
push
xorb
pop
aam
xchg
push
stc
or
cmp
pop
loope
inc
cwtl
cmp
dec
inc
cltd
xchg
stos
inc
mov
jo
add
xor
xchg
ds
adc
pusha
out
cmp
pop
xchg
es
xchg
lret
imul
dec
clc
mov
ret
cmp
sarl
adc
test
inc
add
outsb
roll
stc
or
adc
fs
mov
sub
push
jbe
icebp
bound
outsl
push
pop
mulb
push
icebp
shlb
jecxz
push
fwait
imul
in
cmp
xor
xor
fsubl
or
pop
jne
std
xchg
loope
add
stc
clc
mov
push
pop
mov
lahf
loopne
outsb
fcom
shl
loop
push
mov
xor
jnp
jns
cli
or
mov
fsts
loop
and
inc
repnz
jg
xchg
sub
adc
out
xchg
cltd
inc
nop
xchg
scas
sahf
in
sbb
push
bound
loop
iret
push
shrl
in
and
add
cmc
fdivrs
cmc
imul
jbe
sbb
and
mov
adc
or
ret
subl
adc
xchg
and
cmp
addb
mov
pop
xchg
movsb
sub
jmp
or
in
cmp
jae
in
xor
nop
mov
jg
scas
mov
add
loope
inc
test
ss
lret
sbb
pop
inc
pop
adc
adc
or
mov
push
int
fisttpll
jae
mov
jb
into
addr16
inc
mov
test
es
pop
mov
in
xchg
pop
lret
cwtl
loop
mov
out
rolb
cld
add
pop
leave
push
aaa
scas
imul
dec
xchg
pop
mov
icebp
sub
imul
sub
roll
inc
das
or
dec
xlat
das
fcomi
pop
movsb
jno
bound
das
push
movzbl
movzbl
cltd
idiv
movzbl
or
mov
movb
movb
movb
movb
movb
mov
mov
or
and
mov
imul
mov
movzbl
movzbl
and
mov
movzbl
cltd
idiv
mov
cmp
je
lea
push
lea
call
cmp
jne
cmp
jne
jmp
mov
mov
mov
mov
add
adc
mov
mov
jmp
mov
push
push
lea
push
call
mov
push
pushl
lea
push
call
mov
mov
jmp
ss
cs
push
sub
loop
adc
inc
mov
sbb
adc
sbb
aas
gs
cwtl
daa
out
fsubrs
dec
popaw
in
xchg
xchg
jbe
inc
std
out
add
sti
rorl
sub
dec
sti
or
sub
pop
ljmp
not
jns
mov
scas
mov
jge
cmp
pop
test
scas
out
rorl
outsb
push
out
add
arpl
loop
cmpsb
push
sti
les
add
fnstsw
cmpsl
ror
inc
inc
adc
rclb
rol
push
les
fidivrs
gs
aad
jmp
incb
test
dec
scas
mov
add
cld
sbb
inc
add
data16
xchg
inc
rcll
push
inc
pop
pop
fcomps
mov
lahf
sub
xor
mov
xchg
fwait
mov
sbb
call
and
ljmp
in
sbbl
jb
jmp
push
mov
mov
scas
je
and
shlb
adc
sbb
scas
jle
les
dec
ret
push
cwtl
ljmp
pop
loope
es
adc
decb
inc
dec
jnp
movsl
pop
mov
icebp
xchg
sbb
inc
jae
cmp
sbb
pop
ret
xchg
or
scas
dec
cmp
push
adc
push
add
rorl
push
fstpt
add
cwtl
aad
mov
adc
pop
loope
xor
sti
xchg
je
dec
sub
daa
xchg
mov
inc
test
daa
loope
js
shr
loopne
dec
dec
cld
cli
aas
xor
notb
roll
enter
imul
mov
or
sbb
enter
cmp
repnz
push
cmp
mov
xchg
pop
jg
fnsave
lahf
xor
jl
es
xchg
out
mov
cltd
jbe
std
mov
cmpsb
popa
mov
scas
cli
xchg
and
iret
in
lock
das
ret
in
into
hlt
out
nop
pop
dec
jmp
push
or
js
dec
or
sti
xor
add
repz
xchg
pushf
push
xor
sub
push
add
push
bound
repnz
mov
loopne
adc
jmp
pop
mov
aam
push
jae
es
mov
sar
insb
jp
lret
enter
in
rol
lock
loope
cmp
xor
scas
in
dec
gs
in
lret
jecxz
rclb
nop
or
cmp
mov
scas
lods
rcr
imul
ds
mov
into
jg
es
add
in
mov
or
inc
sbb
imul
push
inc
push
mov
loop
adc
icebp
fdivrs
sub
sbb
cmpsl
push
lret
lods
loope
lods
loope
movsl
int
je
cmp
mov
mov
ljmp
sbb
jnp
jp
or
jnp
lods
mov
mov
dec
mov
xchg
int
lret
push
ja
js
mov
adc
cs
rcrb
enter
sbb
mov
bnd
or
cld
imul
jle
push
add
dec
mov
dec
mov
mov
mov
mov
mov
mov
lea
mov
add
movl
movl
mov
and
add
and
jmp
fistpll
jne
sbb
sarl
mov
sbb
adc
sbb
out
jns
inc
rclb
or
cmp
jae
pushf
jecxz
cld
push
jns
push
mov
inc
lock
hlt
insb
adc
mov
mov
insl
cmc
and
add
and
push
mov
inc
cwtl
popa
cmp
je
xchg
cmp
call
mov
inc
adc
out
addb
and
mov
inc
negl
pop
push
lds
dec
xchg
and
sbb
pop
and
sahf
daa
pop
aad
cmp
push
rorl
lea
xchg
sbb
aad
and
jbe
cld
pusha
mov
push
sbb
adc
adc
neg
jno
push
and
test
mov
add
or
mov
cmp
repz
in
mov
mov
mov
mov
shll
adc
jg
mov
leave
aad
test
add
inc
sbb
mov
in
jno
inc
nop
fucomp
lcall
mov
in
inc
loopne
xchg
jl
mov
pop
lock
outsl
cld
xchg
sub
movsl
fsubrs
mov
cltd
jns
pop
jg
mov
cwtl
fdivs
xchg
push
cmc
sub
add
les
or
js
xchg
clc
add
xor
cs
jl
jl
mov
jge
cmp
hlt
xchg
pop
das
cmpb
pop
cmp
cwtl
into
scas
imul
push
test
xor
lods
shrb
jecxz
mov
and
mov
mov
push
and
ss
sub
lret
into
push
cltd
mov
jae
dec
sub
xor
mov
repz
stc
add
add
push
stc
out
push
pop
lret
lea
movsb
stos
popf
fcoms
pushf
cmc
pop
push
dec
test
out
adc
cli
cltd
pop
push
cld
mov
sub
mov
cmp
addr16
mov
ds
fadds
xlat
sub
cmp
lods
and
popa
mov
sub
or
cs
je
adc
xchg
out
inc
pushf
xchg
loop
cmpsb
xor
cmp
fisubrs
mov
add
inc
push
push
es
lods
or
mov
ret
sub
sub
push
mov
xchg
inc
ss
pop
pop
mov
lods
cmp
hlt
jge
ljmp
outsl
push
cmp
and
fstpt
mov
xchg
dec
xchg
mov
jne
movsl
xchg
xor
sbb
pop
out
mov
add
into
out
add
ffreep
imul
add
ret
push
and
dec
add
data16
mov
test
xor
sbb
pop
data16
push
out
sub
inc
and
sub
pop
roll
mov
lea
int3
sub
test
divl
out
iret
mov
pop
lcall
ret
lods
ja
xor
mov
movsl
lahf
int
add
mov
jno
call
and
int3
popf
popa
pop
xchg
mov
gs
inc
gs
ja
mov
xor
cmpsb
lods
mov
loope
add
and
mov
movl
mov
mov
or
add
cmp
je
mov
mov
mov
xor
shld
shl
xor
xor
cmp
jne
cmp
je
mov
mov
mov
mov
xor
xor
shr
shl
or
xor
shld
shl
xor
xor
cmp
jne
cmp
je
mov
cltd
mov
mov
cltd
shld
shr
xor
shl
or
or
mov
mov
xor
xor
mov
cmp
jne
cmp
je
pushl
pushl
mov
mov
pushl
mov
call
mov
mov
mov
mov
push
add
push
lea
push
call
mov
mov
pop
pop
pop
mov
pop
ret
push
mov
sub
and
jmp
sub
push
test
sbb
lahf
dec
or
test
sbb
addr16
sub
jb
jge
push
lret
mov
std
imul
into
push
adc
xchg
lods
ljmp
popa
mov
ss
dec
fs
inc
mov
stos
std
jnp
jp
scas
pusha
pusha
sbb
mov
fwait
rcr
xchg
fisttpll
xlat
ja
jmp
stos
xchg
daa
fistl
mov
adc
xchg
cs
movsb
push
test
sbb
mov
and
in
fwait
inc
out
cmp
push
cmpsl
jmp
cmc
sub
gs
fs
outsl
sub
sti
inc
sahf
or
pop
xchg
inc
shr
stos
pop
stos
and
adc
cld
aas
sub
fucomi
movsb
and
negb
lods
orl
push
or
aaa
jne
adc
sti
sbb
stos
cld
cmp
and
nop
pop
mov
jo
or
and
aaa
outsb
or
push
push
pop
sbb
push
mov
shrl
xor
fsub
inc
add
cmp
loop
arpl
xlat
jg,pn
pushf
ds
and
stos
lahf
dec
in
lret
out
jne
fs
imul
push
fxch
leave
orb
push
orl
rorb
push
les
out
push
icebp
int3
push
ljmp
fsubl
ds
iret
pop
inc
test
std
lahf
popaw
aaa
cmp
rclb
fdivs
and
fimull
xor
dec
shlb
dec
movsb
or
int
outsl
ss
push
popl
xchg
scas
out
lahf
push
adc
and
outsl
sub
dec
push
inc
pop
jp
jne
punpckhwd
stos
pusha
push
sti
lahf
push
xchg
inc
scas
scas
push
sub
out
fldenv
bound
push
xor
or
xchg
xor
lods
popl
clc
stc
jo
repz
and
dec
imul
add
cmpsb
jno
rol
pop
xchg
inc
jo
daa
fwait
mov
jns
ljmp
clc
xchg
loopne
pop
loope
and
cmp
xor
or
cmp
leave
inc
adc
rolb
xchg
out
and
dec
sbb
jae
inc
les
stos
int
jp
movaps
ds
pop
rcrl
jo
xchg
pushf
mov
ret
or
popaw
pop
imul
test
cmp
fiaddl
pop
rcrl
into
test
iret
mov
mov
push
sbb
mov
push
add
inc
shr
jg
jmp
dec
mulb
es
sbb
lret
dec
xor
repz
mov
idivl
sub
and
xor
insb
inc
ror
mov
add
icebp
or
sbb
xor
xor
test
sbb
cmp
or
sbb
bound
nop
jmp
mov
test
push
hlt
adc
xor
hlt
add
sbb
aas
sbb
cltd
rclb
jle
sbb
sbb
popa
ds
pop
inc
adc
ret
push
das
scas
loopne
xor
push
xchg
mov
nop
insl
testl
fidivs
or
jl
imul
clc
lahf
add
pop
pop
outsl
adc
mov
orb
in
push
popa
mov
mov
xor
push
inc
ficompl
jle
xor
dec
push
neg
push
xor
add
mov
sub
or
movl
or
movl
sbbl
movl
add
mov
mov
movl
xor
div
imul
cmpl
mov
mov
movl
jmp
movl
je
pushl
push
push
push
push
pushl
pushl
call
negl
and
andl
not
sbb
adcl
mov
xor
movzbl
add
and
mov
subl
xor
sbbl
div
cmpl
mov
notl
mov
jmp
movl
jle
pushl
push
pushl
push
push
call
add
movl
xor
add
and
subl
add
sub
cmpl
mov
mov
mov
jmp
movl
je
pushl
push
call
adc
xor
sub
add
mov
mov
and
sub
mov
add
movl
movl
neg
movl
cmpl
not
mov
movl
mov
jmp
movl
jge
push
push
call
negl
mov
mov
sub
and
add
sbb
movzwl
adc
mov
and
add
xor
inc
xor
and
imul
mov
xor
add
adc
and
add
sub
incl
mov
movl
movl
movl
movl
cmpl
mov
movl
mov
jmp
mov
mov
jb
push
pushl
push
pushl
pushl
call
sub
orl
mov
mov
add
mov
mov
sub
or
mov
mov
adc
mov
mov
sub
sub
or
mov
imul
mov
cmpl
notl
mov
notl
mov
jmp
movl
ja
push
push
push
pushl
push
pushl
pushl
call
add
add
negl
mov
sbb
mov
sbb
xor
mov
sub
mov
movzbl
sub
imul
cmpl
not
notl
jmp
movl
not
jne
pushl
call
mov
mov
or
orl
subl
sbb
add
mov
and
mov
xor
imul
cmpl
movl
movl
jmp
movl
movl
jge
call
or
negl
mov
mov
sbb
orl
add
or
mov
and
or
movl
mov
addl
xor
andl
jmp
pop
push
testl
push
data16
and
sbb
leave
es
sub
dec
xor
mov
je
cmp
je
ret
jmp
dec
push
add
aam
stc
xchg
push
popf
pushf
push
jcxz
adcb
dec
mov
iret
xor
or
clc
mov
sbb
jecxz
mov
and
sti
shrl
dec
pop
loope
loopne
lds
push
pop
xchg
repnz
inc
test
outsb
es
push
faddp
xchg
push
jns
fidivrs
sarb
mov
in
push
cmp
mov
pop
pop
loop
cwtl
inc
out
jne
fisttps
xchg
pop
and
mov
outsb
shrl
sub
mov
insb
sarb
xchg
cmp
dec
stos
mov
popa
cwtl
mov
xchg
jp
insl
and
fldt
xchg
imul
xchg
xchg
add
loop
jbe
imul
dec
ja
adc
push
sbb
inc
std
ja
iret
js
adc
xor
daa
adc
inc
xchg
lret
stc
add
ss
cwtl
pop
mov
inc
cli
outsl
in
push
clc
loop
sbb
stos
icebp
test
pop
les
popf
or
ret
push
in
add
rorl
or
mov
movsb
cltd
and
out
rolb
cltd
bound
mov
jecxz
icebp
jg
mov
inc
dec
xor
insl
insl
lcall
fists
or
ret
arpl
push
push
out
xor
xor
mov
mov
lret
scas
add
push
push
mov
mov
nop
mov
sbb
xor
pop
ds
enter
sbb
adc
push
ficompl
std
sbb
clc
popa
mov
inc
addr16
inc
mov
aam
xor
mov
xor
sub
fldenv
fwait
outsl
adc
les
inc
mov
int3
in
icebp
stos
lock
daa
pusha
pushf
insb
dec
rolb
nop
aas
sbb
add
push
xor
sti
movsl
shr
aas
cmp
loop
inc
aad
repz
add
cmp
insl
cmpsb
mov
rcll
pop
pop
shll
inc
jg
stos
mov
inc
cmp
push
cmp
scas
sub
cmp
sub
cmp
pusha
orl
cmp
mov
int3
je
fwait
ret
dec
cld
push
cltd
pop
lret
aad
mov
adc
or
or
inc
add
cmp
mov
mov
movsb
bound
fwait
mov
inc
and
test
in
stc
adc
bound
mov
roll
popa
pop
and
mov
repnz
xor
pop
jp
cmp
inc
mov
lds
lahf
cmp
testl
add
mov
sarb
je
popa
mov
pop
push
xchg
xchg
cwtl
test
jnp
sub
mov
mov
inc
ret
xchg
jl
mov
shr
xor
push
scas
cmpsl
mov
rolb
rorl
sub
pop
icebp
jp
adc
loope
mov
and
adc
lret
shll
test
f2xm1
rclb
shrl
rorl
adc
lret
stos
xor
dec
fsubrs
adc
repnz
pop
loop
add
lods
inc
adc
pop
mov
dec
mov
test
push
cltd
test
andl
lea
mov
add
mov
mov
and
movl
subl
movl
movl
andl
mov
cmpl
mov
mov
jmp
movl
je
push
pushl
push
pushl
call
not
dec
sub
inc
adc
and
movzwl
sub
mov
xor
mov
or
xor
add
subl
mov
or
add
xor
xor
or
adc
mov
mov
mov
sub
sub
movl
movl
adc
movl
mov
cmpl
movl
mov
mov
movl
jmp
mov
jae
pushl
pushl
push
push
push
call
mov
add
add
adcl
decl
addl
sbb
orl
mov
or
add
cmpl
movl
movl
jmp
movl
jl
pushl
call
adcl
xor
xor
add
mov
adcl
sbb
movzwl
or
adc
xor
cmpl
movl
mov
jmp
movl
jae
push
pushl
call
xor
or
adc
mov
sub
movzwl
sub
mov
sbbl
addl
adc
mov
sub
xor
mov
lea
cmpl
mov
mov
jmp
movl
jg
pushl
push
pushl
call
xor
mov
or
mov
add
xor
add
add
and
or
dec
sub
not
mov
movl
movl
cmpl
mov
mov
jmp
mov
jl
pushl
pushl
push
call
add
or
or
and
mov
sbb
and
add
mov
and
add
sub
imul
mov
sbb
mov
imul
xor
mov
xor
mov
mov
div
andl
sub
movzbl
sub
mov
xor
movl
cmpl
movl
movl
mov
mov
jmp
movl
jne
pushl
push
push
push
push
call
xor
dec
add
xorl
add
subl
sub
movl
movl
cmpl
mov
mov
movl
movl
jmp
mov
movl
jle
pushl
push
push
call
add
xorl
or
movl
or
mov
cmpl
mov
mov
jmp
movl
movl
jbe
push
call
dec
add
movl
sbb
and
subl
mov
xor
sbbl
div
orl
imul
sub
add
or
mov
addl
xor
xor
mov
div
xor
movzbl
and
mov
cmpl
mov
mov
mov
jmp
movl
jne
push
call
orl
or
adc
andl
subl
subl
add
mov
mov
sub
and
movl
sbbl
movl
neg
movl
subl
mov
mov
sub
add
shr
sbb
sub
cmpl
movl
movl
movl
jmp
mov
jl
push
push
push
call
orl
xor
sub
addl
adcl
sbbl
mov
subl
imul
or
mov
and
adc
mov
subl
sub
movl
mov
cmpl
mov
movl
movzwl
jmp
movl
jle
pushl
push
push
call
and
or
mov
add
and
adc
movl
cmpl
movl
mov
jmp
mov
mov
jbe
pushl
pushl
push
call
mov
adc
sub
mov
and
mov
and
sub
movzbl
adc
movl
mov
sbb
or
mov
or
sub
sub
mov
movzwl
sbb
movl
movl
mov
mov
sub
or
movl
movl
inc
movl
movl
adc
movl
mov
and
mov
and
add
cmpl
movl
movl
mov
mov
jmp
movl
jbe
push
push
pushl
call
andl
mov
or
xorl
subl
add
dec
mov
add
movzwl
xor
mov
subl
sub
cmpl
mov
movl
mov
jmp
mov
mov
jae
push
push
push
pushl
call
movzbl
or
sbb
or
xor
sbb
or
xorl
movzwl
xor
mov
mov
imul
imul
and
mov
or
cmpl
mov
mov
not
jmp
movl
jl
push
push
pushl
push
call
or
mov
xor
mov
andl
or
mov
mov
and
mov
or
mov
add
xor
add
add
mov
mov
movl
lea
orl
push
xorl
call
adc
mov
adc
mov
sub
jmp
scas
dec
jb
pop
and
push
sbb
sbb
adc
sbb
push
scas
das
popf
in
add
lods
data16
dec
or
idiv
cmp
fsts
xchg
in
in
movq
pop
xor
inc
mov
outsb
outsb
stos
cmp
out
push
sbb
adc
cli
andb
jo
into
inc
roll
xchg
cli
lret
jle
add
jl
pushf
fnstcw
push
pop
loopne
imul
shrl
cmpsb
sbb
lahf
je
mov
out
notb
dec
bound
adc
pop
pop
mov
sbb
out
push
fmull
fadds
sbb
add
jae
aad
inc
cmc
xor
xchg
dec
xchg
add
pop
sub
testl
ljmp
or
jo
popf
xor
mov
fdivs
lock
std
ror
imul
test
call
push
in
out
mov
scas
shr
sbb
jl
pop
push
xor
dec
lock
cmpsl
shl
lahf
ja
lahf
lods
xchg
insb
adc
insb
jecxz
adc
mov
call
adc
pop
and
add
fistps
sub
ds
repnz
xchg
and
shrb
mov
in
test
pop
ret
push
popa
cltd
xchg
hlt
pop
jge
push
pop
test
adc
xor
push
orb
cwtl
sub
cmp
je
int3
outsl
jge
xchg
test
dec
jno
dec
push
bound
xchg
xorb
bound
push
push
dec
int3
cli
ja
in
lahf
mov
cmp
lahf
lret
repnz
adc
dec
icebp
imul
push
mov
adc
mov
xchg
jp
cmp
test
push
cmp
cmp
shr
lret
mov
inc
mov
xchg
out
mov
xchg
and
sti
pop
dec
inc
sbb
outsb
scas
daa
pop
inc
imul
or
mov
pushf
xlat
insb
pop
jo
andl
and
mov
cmpsb
inc
das
fidivrl
xlat
orl
sub
add
lret
mov
scas
scas
and
into
in
push
leave
scas
jecxz
mov
add
pusha
add
shl
adc
incb
cli
bnd
outsl
pushf
jge
dec
jb
repz
daa
sbb
dec
xchg
loop
mov
inc
aad
loop
pop
pop
fcomi
aad
sbb
mov
jnp
movsb
fcoms
inc
iret
add
in
jecxz
pop
sub
pushf
scas
or
xchg
movsl
cmp
movsb
ror
enter
andb
mov
dec
pushf
add
mov
dec
loopne
fs
jmp
leave
xchg
addr16
aam
pushf
in
dec
inc
adc
add
mov
adc
jle
add
jbe
mov
cmp
pushf
ja
in
sbb
adcl
fimuls
rcll
fwait
mov
inc
ja
and
pop
mov
out
rorl
outsb
lods
push
aaa
dec
add
ret
cmp
sub
movsl
imul
lahf
and
negl
xchg
sbb
mov
xor
cmp
lret
add
fisttpll
or
aas
jle
shll
push
xor
das
mov
inc
xchg
nop
xchg
mov
cmp
les
imul
cmpl
movl
not
movl
jmp
movl
movl
jg
push
push
call
sub
add
xor
mov
and
or
add
sub
add
sbb
and
sub
xor
mov
andl
div
not
xor
add
mov
movl
dec
movl
movl
and
movl
cmpl
not
mov
jmp
movl
jae
push
call
not
orl
dec
sub
xor
movl
movl
mov
mov
sub
xor
movl
sbbl
movl
sub
movl
xorl
movl
movl
movl
mov
mov
cmpl
mov
not
not
jmp
movl
movl
jge
push
call
or
sub
xor
xor
add
add
add
and
mov
or
cmpl
mov
mov
jmp
movl
ja
pushl
push
pushl
pushl
pushl
push
push
call
mov
adc
mov
movzbl
xor
and
xor
or
xor
add
sub
xor
mov
mov
adc
mov
and
sbb
sub
sub
cmpl
movzwl
mov
jmp
mov
jg
push
call
mov
mov
sbb
adc
dec
sbbl
imul
mov
cmpl
movl
mov
mov
jmp
movl
jle
pushl
call
adc
mov
add
sub
addl
xor
add
sbb
mov
adc
lea
addl
mov
and
mov
adc
mov
mov
mov
xor
mov
xor
add
andl
mov
xor
lea
add
and
cmpl
movl
mov
movl
mov
jmp
movl
jge
push
push
call
and
or
xorl
add
mov
orl
sub
add
mov
movl
jmp
fidivrs
cli
sbb
dec
push
lahf
mov
fs
push
sbb
adc
sbb
jl
and
ret
movsl
stc
cld
or
and
rcrb
std
xor
push
sub
loope
insl
xchg
mov
add
aad
in
xchg
mov
cmp
sahf
sbb
fsubp
aam
pushf
mov
out
jle
imul
push
xorb
popf
mov
jbe
jp
or
sarb
inc
popf
lea
je
enter
jmp
sub
adc
xchg
loop
xchg
jb
movsl
jge
in
jo
aas
inc
leavew
jmp
outsb
mov
pop
jae
pop
mov
adc
iret
imul
sbb
insb
je
inc
mov
ret
out
loop
inc
cmp
or
push
or
or
sub
loope
mov
xor
pop
into
push
xchg
insb
fildl
jle
adcl
pop
push
xchg
scas
push
outsl
add
outsb
imul
cli
mov
fimull
imul
fnstsw
movd
pusha
inc
xchg
mov
insb
or
push
mov
shlb
mov
inc
jp
or
pusha
loope
jmp
call
sbb
and
cmpsl
notb
and
ret
add
sub
call
jp
loope
shll
and
jmp
lret
mov
fwait
out
nop
add
dec
xchg
aam
dec
sarl
push
lock
repnz
lcall
inc
or
lcall
pushf
notl
lds
mov
movsb
mov
dec
inc
sarl
pop
dec
jp
pop
cmp
mov
mov
iret
push
jns
jnp
mov
shll
pop
mov
and
xor
and
les
mov
out
or
adc
adc
test
std
mov
stc
popf
imul
ja
and
mov
mull
es
roll
loope
icebp
cld
jne
dec
sub
aam
xor
push
mov
pop
rcl
dec
cmp
mov
or
mulb
adc
push
mov
scas
pushf
sbb
mov
mov
push
xchg
into
out
je
cmc
int
add
jecxz
es
sub
cmp
fs
xchg
mov
xor
hlt
jmp
pusha
mov
and
dec
xorb
in
ret
daa
fdiv
into
mov
popa
sbb
je
fcomip
lea
dec
hlt
push
pushf
orb
leave
or
andb
fists
adc
incb
lea
hlt
clc
fnsave
fdivrl
int
cmp
popa
aas
shr
jle
mov
push
or
dec
sub
pop
in
enter
jge
lret
sti
or
jmp
cwtl
fstl
push
cs
push
and
dec
mov
and
adc
je
outsb
add
cmp
lds
add
sub
cmc
mov
rcrl
jo
test
mov
pushf
movl
movl
mov
mov
mov
xor
xor
mov
call
mov
mov
mov
jmp
movsb
add
sub
movsb
jp
int3
push
stos
xlat
push
movsl
mov
and
sbb
leave
hlt
loope,pt
xchg
dec
andb
xchg
lret
scas
arpl
mov
xor
push
dec
sub
push
push
enter
fadds
pushf
pushf
adc
mov
ret
xor
iret
push
inc
cmp
shrl
std
mov
test
push
lahf
jmp
jmp
xchg
add
cmpsb
xor
jl
gs
lods
dec
loopne
out
int3
pop
dec
and
mov
dec
inc
js
jl
push
and
push
mov
lea
lds
push
lods
outsl
sbb
fiaddl
pop
enter
jnp
repz
push
call
and
lcall
xor
mov
les
add
sbb
addr16
dec
ljmp
lds
sarb
cs
stos
mov
or
sti
popl
pop
out
adc
shlb
mov
popa
insl
cwtl
xchg
inc
movsl
int3
ljmp
jge
rorb
leave
bound
movsl
inc
add
sub
dec
or
ljmp
stos
ret
mov
and
outsl
lods
xor
xor
cld
add
test
dec
lods
out
pop
out
cmpsb
cli
lret
je
and
fcoml
cli
cmc
repz
scas
inc
pop
lods
repnz
push
pop
xor
pop
cmp
pushf
ljmp
inc
ss
std
je
sbb
test
les
mov
xchg
mov
inc
pop
push
sti
cmpsl
aas
xor
push
sub
lods
fdivl
jle
std
rorb
nop
sub
and
jbe
mov
jge
jae
sahf
scas
cmp
inc
pop
and
jle
fs
std
sbb
fdivs
mov
addr16
inc
loopew
xchg
sub
lahf
push
sub
jae
hlt
movsb
addr16
decb
hlt
or
inc
jb
out
cld
inc
mov
cwtl
je
imul
mov
or
adcb
icebp
mov
fisubl
nop
inc
add
jle
scas
inc
dec
leave
loopne
inc
adc
sti
das
mov
fnstenv
imul
std
ret
and
shll
imul
mov
js
jo
and
sub
sub
lds
dec
adc
xor
xchg
sub
inc
fs
imul
pop
lahf
dec
inc
inc
ret
loope
repz
pusha
jo
mov
xchg
fisubl
movsb
cmp
mov
sbb
jne
and
or
dec
loopne
sub
fisttps
das
and
rclb
sbb
add
add
loope
jp
mov
jmp
jmp
adc
mov
fldt
or
out
pop
or
gs
sbb
jl
cld
jno
cli
mov
or
in
fnstcw
mov
mov
xchg
lahf
sbb
ret
adc
jl
mov
or
imul
jmp
jbe
in
mov
ds
xor
mov
mov
sub
popf
js
ljmp
movsl
fisttpll
icebp
dec
mov
xor
mov
pushl
xor
mov
call
or
or
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
mov
mov
mov
mov
call
mov
or
mov
or
push
push
push
push
jmp
loopne
add
sbb
fcomps
lcall
sbb
adc
sbb
adc
mov
out
sub
xor
icebp
and
fcoml
inc
js
adc
cmp
fcmovb
mov
xchg
sub
fs
inc
cmp
movsl
xorb
cmpsb
inc
cmp
sub
lahf
push
daa
cmpsl
push
or
fdivs
jb
push
pop
mov
rcrl
or
pop
arpl
int
jno
or
add
cmpl
fistps
daa
lds
xchg
mov
pushfw
loop
mul
xor
ret
cmp
add
outsl
loope
js
adc
aam
aaa
jl
mov
stos
sbbl
lea
mov
or
push
jae
jmp
gs
sti
aad
imul
push
dec
fwait
aam
je
pop
ret
in
jne
stos
pop
stos
into
jbe
and
sbb
shrl
push
add
jle
inc
inc
rcrl
cmpsb
cli
and
jl
test
nop
sub
or
mov
xchg
push
adc
popa
popf
fmulp
adcl
cmp
vmovdqa
add
lock
xor
mov
pop
jo
mov
xor
rcr
addr16
ja
mov
xor
inc
push
fnsave
sahf
add
div
push
dec
lods
sbb
mov
mov
mov
mov
xor
jecxz,pn
xchg
mov
mov
xchg
sahf
push
jecxz
sbb
cmp
add
js
ret
dec
xchg
jl
xchg
lock
pop
mov
pop
out
pop
adc
insb
movsb
out
pop
adc
shl
dec
push
jge
out
mov
hlt
pop
fnstcw
int3
cmpsb
inc
out
jo
pop
aam
dec
es
scas
scas
xchg
out
mov
into
daa
add
sub
out
cmpsb
push
js
or
jno
inc
in
scas
es
clc
inc
sub
scas
pop
stc
xlat
imul
dec
insb
inc
push
sub
mov
dec
leave
xor
mov
ja
movsl
and
test
popf
mov
cs
cmpsb
cmp
xlat
or
mov
ljmp
add
or
and
mov
mov
pop
mov
fisttpll
enter
lock
cmp
fisubl
stc
dec
and
imul
xor
mov
xor
mov
cmp
notl
int3
addl
pop
andb
out
loope
jns
andb
jbe
pop
xor
lcall
push
pop
icebp
xchg
test
fisubl
lcall
push
add
mov
xor
xchg
cwtl
aaa
mov
inc
sti
or
xor
and
sub
aas
stos
mov
lods
test
into
xchg
popa
adc
push
sbb
sarb
jne
leave
push
cmp
leave
out
jp
je
sarb
pop
lret
push
xor
repnz
dec
pop
ret
test
and
call
out
popf
movsl
cwtl
ret
dec
cmovge
inc
sub
mov
mov
lea
pop
fs
out
dec
sbb
in
mov
insl
fmul
popf
out
into
adc
negl
xor
insl
xchg
inc
cwtl
push
in
insl
push
fsts
lock
sbb
mov
js
and
sub
shrl
xchg
push
mov
addr16
inc
repz
js
sbb
aas
push
call
decl
cmp
jne
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
mov
mov
jmp
adc
pop
out
loop
loope
add
mov
sbb
adc
sbb
mov
or
mov
insl
sbb
dec
and
xchg
stc
mov
push
nop
inc
cwtl
and
inc
xor
lods
mov
lock
enter
adc
add
pop
ret
std
sbb
in
and
and
dec
ret
aas
mov
cltd
stos
bnd
mov
mov
xchg
pop
lods
es
fisubl
imul
add
ret
mov
vphadduwq
xchg
xchg
inc
dec
fildl
dec
repz
clc
jmp
enter
popf
shrl
popa
sub
xchg
xchg
scas
ss
scas
pop
push
shlb
pop
and
gs
inc
jmp
sbb
inc
inc
lret
adc
and
sbb
movsb
adc
cmc
xchg
cmpsb
in
cwtl
mov
in
imul
imul
frstor
hlt
add
insb
mov
hlt
mov
scas
lahf
in
divb
mov
inc
xor
loop
push
jp
sbb
ret
xchg
adc
mov
mov
movsb
mov
add
xchg
dec
add
stos
fidivl
jne
fisubrl
jns
ret
mov
jo
mov
rcll
in
push
test
negb
lcall
mov
lods
push
or
sahf
mov
pop
inc
cmpsl
sbb
mov
push
stos
jae
pop
pushf
in
adc
adc
cmp
imul
arpl
mov
fisubl
lret
mov
rcll
push
cli
aad
pop
jns
inc
mov
addl
in
sahf
inc
fldt
popa
pop
jae
sub
xchg
ret
mov
jg
nop
pop
adcl
pushf
mov
lcall
jno,pt
cmp
jp
sahf
movsl
lods
stos
ja
add
xchg
add
mov
inc
mov
sub
xchg
pop
fidivrs
adc
movsbl
sub
and
cmp
scas
sub
stc
enter
std
xchg
stos
adc
fidivrs
popf
enter
inc
push
pushf
pop
push
mov
lcall
aam
dec
test
sub
cmp
add
mull
push
mov
je
adc
pop
jne
adc
mov
xor
add
popf
xchg
test
fstl
sbb
pop
cmp
xor
xor
add
loopne
int3
lcall
mov
int
stc
jns
stos
pop
cld
cmp
movsl
cmc
push
hlt
inc
inc
pop
lret
clc
pop
cltd
std
into
ja
pop
push
loop
sbb
mov
clc
mov
popa
xor
jg
out
pop
mov
lahf
mov
mov
pop
sti
movsl
sahf
adc
arpl
adc
in
push
xchg
pop
lods
jb
cli
mov
subl
js
aam
jl
shrl
fucomi
xchg
leave
jae
shl
xchg
push
fdivr
repnz
movl
inc
iret
insb
inc
aas
test
pop
sti
or
adc
call
pusha
ror
and
lock
ljmp
inc
jp
daa
outsl
aaa
jecxz
lods
fucomi
xchg
sbb
mov
jo
mov
sub
sbb
and
aaa
inc
add
or
mov
or
push
push
push
push
call
mov
jmp
jmp
lea
mov
mov
movl
mov
xor
shr
mov
xor
shl
or
mov
mov
mov
jmp
mov
xor
sub
jmp
or
xorl
mov
lods
das
scas
lret
xor
xchg
xor
cmpsl
arpl
mov
push
jge
pavgb
fs
hlt
repnz
adc
xor
dec
popf
push
dec
aam
ret
cld
sub
pusha
ds
inc
mov
push
jg
dec
mov
fldl
adc
lcall
sti
adc
fnstcw
pop
or
xor
xchg
xchg
sbb
lahf
xchg
es
mov
push
movl
mov
add
xor
cmp
test
jle
ret
xchg
rcl
sub
mov
mov
push
add
adcl
add
aaa
jecxz
push
inc
addr16
push
jnp
mov
insl
aas
cmp
jno
add
arpl
int
push
xor
hlt
leave
add
or
repz
lcall
or
test
into
mov
push
xchg
and
mov
xchg
sbb
cmp
mov
jns
inc
jg
js
dec
push
dec
andl
sbb
sub
je
xor
shll
fisubl
push
sub
test
sub
adc
int3
inc
loop
data16
cld
pop
std
dec
enter
into
inc
mov
ljmp
sub
fcompl
xor
sbb
pop
sbb
js
mov
sub
mov
andl
mull
mov
fcomps
xchg
test
and
dec
dec
dec
int3
scas
add
mov
xchg
or
sbb
mov
call
pop
push
pusha
mov
sbb
jecxz
adc
lock
and
adc
or
scas
xchg
test
sbb
mov
xchg
cltd
jge
lods
jecxz
dec
sub
push
cld
test
pop
adc
or
test
jbe
cmp
loop
inc
add
pop
daa
es
push
pop
adc
ds
lods
insl
or
rclb
shl
aad
inc
iret
std
stos
pop
and
jae
mov
add
cli
stos
xor
pusha
mov
imul
push
xor
pop
xor
stos
adc
and
je
stc
add
sub
cmc
int3
jecxz
mov
xor
in
fcoms
xchg
and
mov
call
hlt
push
in
ljmp
mov
pop
pop
push
in
xchg
ret
cli
xchg
ja
lcall
xor
scas
mov
push
out
bound
pop
int
jg
sbbl
mov
shll
rcll
scas
mov
inc
pop
lret
mov
lds
push
leave
dec
push
pop
fisubl
pop
jge
or
dec
xchg
jo
xchg
mov
mov
pop
pop
js
scas
ja
pop
insl
in
xor
test
jmp
pushf
jecxz
xor
shlb
pop
loopne
pop
ret
mov
pop
iret
cmovnp
adc
xchg
movsl
jo
imul
sub
xor
test
xorb
jae
mov
xor
cmp
or
rcll
js
in
into
cwtl
mov
imul
in
mov
movsl
loopne
mov
decl
decl
pushl
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
jmp
jb
adc
or
xor
shll
push
aaa
push
jno
sbb
adc
sbb
cld
xchg
es
and
fwait
jo
sbb
cvtpi2ps
cmc
in
mov
add
pop
push
pop
cmpsl
les
mov
push
lods
xchg
push
dec
fistl
fdivs
mov
ret
lock
rorl
xor
mov
inc
and
fs
mov
inc
fs
lods
sub
xchg
test
or
stos
es
sbb
or
int3
xor
inc
cmp
add
dec
xor
xor
jmp
mov
pop
mov
add
push
lock
xchg
cmp
mov
rol
and
xchg
sub
sti
dec
loop
clc
fstpt
cmpsb
xchg
insl
roll
add
stc
daa
mov
sub
mov
xchg
cltd
mov
sub
bswap
ret
jge
cmp
push
xchg
inc
imul
loop
cmpsl
lds
dec
jne
mov
or
push
mov
sub
in
out
or
mov
mov
pop
out
xlat
add
or
insb
mov
sbb
jnp
in
adc
call
or
lea
push
daa
sbb
xor
test
xchg
inc
outsb
data16
push
pop
dec
push
lock
jl
add
add
cli
jbe
lock
flds
or
sbb
cmpsl
fcmovnb
push
add
adc
mov
dec
mov
mov
sub
sub
insl
fbstp
loop
cltd
pusha
hlt
sub
push
adc
pop
stos
outsb
cmp
jecxz
lret
fcomps
sbb
pop
lahf
jmp
pop
xchg
mov
data16
mov
cmp
cmp
mov
sub
jmp
enter
inc
aam
sti
push
sti
sub
js
hlt
test
xor
mov
inc
pop
ret
mov
ret
sbb
push
push
sbb
mov
mov
scas
inc
fisubrl
inc
je
lds
out
xor
xchg
dec
in
cmp
lods
leave
mov
out
mov
push
or
ss
dec
into
xor
rorb
out
je
jns
mov
xchg
cmp
test
mov
push
loopne
sbb
mov
sbb
jns
pushf
jle
mov
and
inc
push
ljmp
ljmp
insb
shll
mov
popf
mov
xor
scas
xchg
nop
neg
push
test
mov
mov
xchg
pop
mov
adc
filds
imulb
enter
push
adc
fdivs
mov
fnstcw
js
add
cmp
jg
or
mov
inc
add
add
adc
pop
cmp
mov
mov
mov
adc
adc
bound
ficoms
cmp
inc
or
insl
add
jbe
push
pushf
cld
lock
or
cmp
insb
mov
mov
jg
mov
shll
mov
cltd
mov
fwait
adc
loope
xchg
xchg
pusha
mov
out
adc
push
insb
xchg
push
push
or
mov
call
mov
mov
call
mov
or
mov
or
push
push
push
push
call
mov
cmp
je
jmp
add
jp
add
outsl
mov
imul
and
sbb
rorl
push
dec
inc
pushw
mov
fistps
jb
lcall
sbb
and
jle
dec
sbb
rorl
mov
cmp
arpl
jle,pn
xchg
andl
mov
ret
addr16
loop
pop
dec
xchg
cmpsl
pop
dec
aaa
shrl
jle
fs
jbe
xchg
lock
mov
sub
sub
inc
nop
cld
push
stos
rorl
cmp
pushf
nop
jecxz
lret
fadds
stc
jnp
mov
into
add
mov
pushf
jae
jbe
inc
js
sbb
sub
mov
ja
add
mov
xchg
xlat
mov
sub
adc
mov
in
xchg
cmpsl
mov
push
mov
test
bound
nop
add
mov
pop
lahf
jno
test
stos
inc
mov
shl
les
sbb
pop
dec
sahf
or
aam
cmp
sbb
xlat
and
adc
and
push
jmp
les
cs
dec
mov
xchg
mov
or
fdivr
addb
cs
ds
and
test
lods
fnstsw
in
adc
insb
mov
movsl
adc
lret
mov
test
add
mov
or
push
adc
push
pop
notl
leavew
js
jecxz
movsl
pop
jnp
jbe
inc
add
push
rclb
pop
fwait
xor
mov
xchg
lock
cmp
repz
lahf
sbb
dec
cld
insb
push
and
fldenv
mov
out
add
mov
mov
ror
pusha
and
ja
ficoml
cmpsb
dec
push
mov
sub
pop
mov
ljmp
push
iret
pop
call
xlat
xor
push
nop
sub
movb
shl
jne
push
dec
mov
repz
cmp
clc
xchg
pop
pop
xor
out
dec
mov
loopne
shl
popa
pop
mov
xor
cwtl
in
push
inc
pop
out
push
int3
and
mov
mov
lods
fstpt
mov
fstpt
and
pop
ss
ljmp
pop
leave
test
stc
push
fnstcw
cmp
ret
push
cmp
jl
adc
mov
jmp
add
inc
gs
stos
mov
test
clc
sbb
pop
sbb
sbb
and
rcll
popa
imul
xor
cwtl
aad
flds
push
and
jecxz
ret
pop
mov
and
and
adc
adc
xchg
fwait
repnz
rcrb
call
and
sbb
fmuls
sub
out
cli
pop
jne
int
fadds
dec
push
fildll
stos
and
call
mov
mov
push
filds
bound
cli
pop
std
lods
mov
mov
push
cs
mov
adc
pushf
xlat
jecxz
mov
movsl
dec
test
popa
pop
jl
mov
cli
scas
dec
adc
mov
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
jmp
loopne
xchg
es
addr16
jle
arpl
sbb
adc
sbb
ja
shl
push
cltd
adc
or
adc
xor
in
mov
push
pop
addl
andb
rol
nop
pop
inc
cmpsb
or
pop
sahf
pop
dec
sub
sahf
mov
jecxz
push
xchg
test
jno
jae
shrb
xchg
outsb
inc
mov
inc
pop
sbb
adc
cmp
jnp
push
gs
ja
rcl
mov
addr16
fisttpll
jbe
cli
mul
xchg
inc
sti
pushf
sbb
pop
push
int
das
xchg
and
add
add
and
loopne
push
int
push
std
inc
lea
test
and
add
sub
shlb
iret
sub
les
fildl
int3
or
pop
rolb
xchg
or
sub
jbe
lea
xor
pop
dec
fisubs
icebp
inc
inc
and
inc
dec
xchg
ja
jp
xor
stc
pop
jmp
cltd
or
pusha
add
fidivl
xchg
iret
mov
lds
mov
push
jb
jmp
mov
xchg
push
mov
mov
xchg
xor
out
jns
mov
shl
sbb
inc
enter
out
mov
sar
jge
and
mov
sbb
mov
add
xchg
int
sbb
mov
mov
cmc
jge
push
dec
push
xchg
pushl
mov
ss
push
daa
sahf
jp
inc
inc
add
push
or
pusha
push
ficoms
or
dec
mov
lds
psadbw
insb
ljmp
addb
inc
pushf
sbb
aaa
ljmp
stos
aas
fucomip
mov
pop
xchg
sahf
pshufw
stos
or
push
cmp
sbb
nop
xchg
add
pop
push
out
int
ja
loopne
shl
jg
inc
dec
sahf
lods
mov
xlat
outsl
lret
xchg
rcr
push
imul
xchg
add
stos
outsb
jb
push
jl
xor
lahf
sub
dec
aad
push
sbb
jne
cld
pusha
mov
mov
rcll
jmp
decl
stos
out
xlat
sahf
repz
push
jno
daa
ss
xchg
mov
dec
outsl
push
clc
lods
push
insl
fldenv
fbstp
dec
pop
mov
adc
xlat
jae
enter
jle
fwait
repnz
jg
cmp
adc
dec
mov
gs
sub
fs
jmp
jecxz
mov
out
shr
pop
fisubs
jnp
xor
cmp
fistps
and
je
mov
std
mov
xor
aad
aad
pop
jecxz
push
inc
and
xchg
jl
ja
mov
je
gs
mov
add
int
lds
cmp
inc
mov
and
xchg
es
sbb
ss
mov
icebp
lret
push
adc
pop
fsub
mov
mov
pop
addr16
xchg
and
ret
sbb
adc
clc
fld
gs
sahf
lret
imul
rclb
mov
mov
mov
std
data16
dec
or
adc
leave
lret
mov
std
cmp
inc
jb
loope
fisubrs
loope
sub
and
pop
repnz
aad
cmpsl
call
imul
lock
mov
imul
add
mov
mov
mov
jmp
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
xor
jmp
pop
scas
push
sub
push
ja
fstpt
jb
mov
and
sbb
adc
jne
mov
pop
popa
daa
add
cmpsl
adc
in
lret
and
cmc
add
mov
dec
iret
loop
and
sub
cmp
inc
sub
pop
pop
shlb
addl
xchg
fiadds
jp
movsl
xor
mov
or
fsub
stos
push
arpl
mov
dec
orl
and
push
xor
xor
leave
lcall
scas
push
dec
loop
mov
xor
ss
mov
into
cmp
das
out
xor
maskmovq
testl
xor
mov
fbld
push
xchg
test
mov
dec
pop
mov
jne
or
lds
and
jp
popf
fisttpll
mov
jle
addr16
inc
jge
sub
das
lock
out
sbb
and
arpl
repnz
jns
sub
jmp
mov
test
mov
pop
xor
int
mov
je
sbbl
ljmp
inc
cld
pushf
icebp
push
cmc
xchg
stos
mov
cmp
dec
gs
adc
sub
pop
test
cmpsl
add
popa
inc
mov
into
adc
mov
mov
adc
sub
leave
adcb
jnp
rorl
loope
rol
in
cmp
rorl
dec
js
inc
mov
mov
testl
mov
inc
push
pop
adc
pop
sub
or
mov
icebp
push
mov
xor
iret
dec
popf
jg
xchg
enter
cmc
data16
mov
inc
mov
stos
mov
lret
xchg
cli
clc
imul
stos
inc
xchg
nop
mov
stc
cli
sub
mov
jb
and
sbb
pop
mov
fisubs
dec
gs
add
push
movsb
je
fabs
iret
add
in
push
mov
in
ret
out
jmp
mov
test
jp
ret
imul
js
mov
xorb
fnsave
cmp
and
and
and
or
jo
into
inc
test
bound
xchg
or
push
or
pop
adc
pushf
stos
fsubr
adc
inc
clc
jb
in
loope
add
pop
cltd
stc
je
or
cmpsl
and
loopne
sbb
outsl
rorl
lahf
xorl
cli
sbb
mov
xor
mov
push
xor
scas
std
pop
adc
iret
push
daa
fwait
lds
nop
dec
mov
pop
in
mov
rcrl
cld
xor
in
and
mov
lock
scas
lea
pop
lea
adcb
push
mov
pop
push
js
int3
popf
test
xchg
call
cmp
test
sub
dec
loopne
sbb
ret
mov
push
icebp
test
leave
push
mov
bound
xchg
pop
push
inc
neg
aaa
lds
nop
icebp
inc
int3
andl
mov
out
and
sub
cltd
mov
pop
roll
pushf
mov
call
mov
mov
mov
mov
xor
xor
mov
mov
mov
call
or
mov
or
push
push
push
push
call
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
mov
xor
div
mov
and
add
mov
lea
xor
add
mov
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
jmp
shrl
into
and
fwait
outsb
mov
int
mov
adc
sbb
adc
arpl
in
out
sub
out
xchg
xchg
mov
inc
cmp
outsl
mov
jns
jg
dec
aaa
xchg
cltd
scas
sbb
inc
outsb
test
inc
jmp
repnz
add
adc
mov
mov
lods
stos
mov
sti
sub
push
in
mov
and
pusha
pop
fwait
cmp
inc
jns
fwait
sbb
jnp
push
xor
lea
inc
dec
push
push
movsb
add
popa
mov
orl
cwtl
mov
int3
or
fimull
pop
nop
iret
pop
mov
xchg
add
sub
xchg
adc
mov
inc
add
or
mov
xor
addb
push
adc
or
clc
sti
jge
inc
push
sub
das
nop
sub
ss
addr16
mov
add
in
ret
in
push
in
cmp
mov
mov
sub
in
int3
fstl
mov
inc
movsb
jl
outsl
out
add
fs
sbb
imul
jno
mov
and
cmp
xchg
jae
xor
jmp
mov
ja
lods
mov
cmp
shl
push
rorl
fbstp
jae
sbb
cmp
ror
cmpsl
jmp
cmp
jecxz
xorl
int
sub
push
jne
hlt
mov
inc
pop
adc
mov
aaa
mov
push
gs
or
and
pop
adc
adc
mov
in
cmpl
lock
call
add
pop
fs
and
rorb
jnp
call
insl
inc
cmp
mov
mov
outsl
vmovaps
movsl
std
fbld
jmp
shlb
mov
out
or
addr16
push
and
in
adc
mov
in
push
mov
inc
sbb
cmp
pusha
mov
test
pop
jne
push
adc
arpl
shrl
fisubl
cld
and
aam
mov
addb
sub
movsl
cmpsl
push
or
mov
daa
mov
test
hlt
mov
push
sub
mov
push
ret
xchg
in
inc
inc
push
sub
lods
dec
mov
mov
cmp
arpl
aaa
and
mov
and
mov
insl
xor
pop
fiadds
jns
sahf
insb
jl
sub
xchg
cmpsb
mov
lds
clc
das
mov
das
mov
fnstenv
adc
sti
lods
mov
pop
or
mov
aas
adc
arpl
xchg
popf
lock
push
inc
sbb
pop
cld
or
inc
push
imul
jbe
dec
idiv
xchg
mov
rcrl
mov
mov
xor
push
insb
icebp
push
in
lea
and
pushf
test
xchg
enter
add
inc
xlat
out
fwait
dec
mov
mov
dec
je
mov
ljmp
sub
ja
mov
in
in
negl
lea
mov
xchg
push
inc
js
cmp
movsl
xor
div
add
mov
and
xor
add
mov
mov
sub
mov
or
mov
and
mov
xor
mov
mov
sub
mov
imul
xor
xor
mov
mov
add
add
mov
movl
movl
movl
movl
movl
movl
mov
xor
mov
imul
mov
lea
mov
and
and
xor
push
pop
div
imul
mov
and
mov
or
add
imul
mov
xor
xor
mov
mov
add
add
jmp
arpl
bound
aam
push
jle
adc
push
dec
push
sbb
adc
sbb
icebp
les
jp
pop
mov
pop
lock
mov
sti
ret
dec
nop
inc
dec
or
or
sub
adc
test
lret
addb
push
dec
fisubrl
shlb
sub
xlat
sti
cmpsb
mov
xchg
inc
xor
loope
xor
subl
xchg
test
cwtl
test
jp
and
cmc
bound
movsb
dec
xchg
insl
fidivrl
dec
xor
mov
js
or
sbbl
jns
cmp
lret
inc
pop
push
inc
inc
sbb
pop
das
mov
xchg
cmp
fimuls
lcall
in
cld
repz
mov
dec
ja
pop
popf
test
inc
inc
pop
dec
mov
popf
jb
cs
or
push
or
cltd
scas
jae
xlat
movq
pop
test
mov
gs
sbb
pop
orl
outsl
xchg
jl
add
xor
popa
stos
mov
jne
adc
push
jbe
fwait
clc
add
inc
nop
popa
rol
adc
pop
sbb
movsb
push
cmp
aad
test
mov
xchg
repz
mov
sbb
leave
sub
sbb
cmp
aaa
inc
es
inc
or
xchg
and
int3
flds
mov
xor
call
icebp
lret
jmp
pop
inc
movsw
fcomip
stos
mov
adc
mov
jmp
push
mov
sahf
inc
movl
ret
jno
add
jg
scas
in
scas
cld
popa
in
adc
stos
push
repz
and
hlt
dec
cmp
push
add
movsl
out
and
xchg
psubw
inc
lock
mov
inc
cld
jecxz
movsl
outsb
cs
and
lods
xchg
xchg
xchg
pop
dec
insl
rolb
add
mov
jae
inc
or
fsubrl
mov
inc
pop
iret
bound
sets
ds
sbb
sbb
sub
push
sti
pop
stos
jns
fsubs
adc
js
push
int
mov
nop
mov
leave
mov
adc
movsb
loope
aaa
aas
cmp
pop
mov
int3
jne
mov
xor
stos
pop
or
mov
scas
aas
aam
nop
aaa
dec
add
cmovns
inc
mov
sbb
and
je
loopne
xchg
lcall
shrl
fmull
mov
dec
cmc
loopne
inc
dec
push
out
cmp
xor
lods
loop
push
xchg
bts
lea
or
mov
lods
or
daa
push
nop
cmp
insl
loope
cmpsl
repz
fildll
aad
lretw
sub
roll
sub
add
jl
and
gs
sbb
icebp
or
xchg
pop
sbb
sbb
jmp
adc
xlat
jns
lcall
or
std
mulb
inc
insw
cmp
fdivs
adc
movl
stos
pop
dec
cmpsb
pop
xor
pop
gs
add
lret
add
imul
insl
sbb
test
jle
xchg
mov
mov
int3
fdivrs
out
dec
sti
jae
loopne,pt
bound
sbb
cmpsl
inc
sbb
inc
inc
lods
add
add
jmp
int3
insb
fwait
jo
push
cmp
ret
lahf
jo
push
addr16
and
sbb
clc
add
adc
lock
dec
nop
mov
inc
out
gs
in
pop
sbb
pop
js
mov
mov
mov
or
mov
pusha
mov
xor
jge
cmp
lcall
jmp
xchg
dec
cltd
ljmp
mov
xor
stos
outsb
dec
adcl
insb
sub
outsb
cmc
inc
xor
fcompl
bound
or
mov
inc
fdiv
mov
add
loop
ja
mov
cltd
adc
dec
mov
clc
mov
addr16
sbb
outsb
roll
push
adc
lea
mov
gs
fistpll
jo
xchg
and
pop
pusha
das
rorb
push
jo
out
cmp
xchg
fsubrs
dec
sub
int
lret
pop
js
scas
dec
sarb
jnp
je
mov
out
pop
into
add
ja
scas
xor
or
outsl
jecxz
sub
enter
aas
xchg
xchg
pop
stc
dec
lea
aam
fisttpl
and
mov
pop
and
orb
mov
daa
int3
sbb
and
jmp
cmpsb
sbb
pop
xor
stc
in
adc
jle
movsl
add
push
push
adc
jbe
das
xor
or
mov
ds
std
sti
adc
xor
pop
mov
popa
aaa
push
loop
xchg
movsl
adc
das
jno
cmp
inc
sub
pop
int
xlat
mov
outsb
dec
mov
pusha
mov
mov
mov
loopne
sbb
iret
ret
hlt
sbb
add
nop
je
cmp
xchg
xorl
sub
sti
push
repz
loopne
xchg
push
ret
movsb
or
mov
repnz
ja
shlb
jno
mov
mov
mov
loope
in
cmc
nop
push
test
pop
sbb
xchg
sub
inc
mov
mov
ja
dec
dec
fidivs
lcall
xchg
fwait
xchg
cmpsb
mov
dec
pusha
push
outsb
inc
movsl
adcl
int3
sbb
fcomi
jb
popf
inc
inc
cmpsb
jo
sbb
mov
mov
cmpsl
mov
mov
pop
fxch
popl
and
stos
dec
xor
gs
pop
dec
adc
out
xchg
dec
xchg
gs
ljmp
add
add
cmp
xchg
mov
xchg
pop
xchg
push
inc
sub
sahf
and
ja
aad
and
mov
aad
in
xchg
mov
roll
test
xchg
lds
xchg
mov
rcrl
mov
in
pop
mov
movsl
xchg
js
or
mov
daa
mov
test
insl
dec
movl
adc
jmp
jp
lcall
or
movsb
xrelease
arpl
lock
out
mov
mov
stc
fwait
pusha
pop
add
insb
stos
jnp
rcll
xchg
call
negb
xchg
mov
jne
sbb
insl
popl
das
in
psubq
loop
loop
push
xor
rol
shr
add
movl
movl
movl
jmp
jecxz
xchg
sbb
sbb
ret
movsl
mov
faddl
sbb
adc
sbb
popf
mov
and
push
xor
cmp
pop
mov
rorl
and
fstpl
mov
xchg
int3
stos
xchg
filds
insb
pusha
push
mov
xor
into
mov
test
dec
pop
cmp
mov
dec
divl
sub
enter
or
fildl
ds
jno
mov
scas
inc
jae
cmp
xor
cmp
xor
cmc
flds
mov
fs
fwait
bnd
in
push
jb
and
and
enter
mov
aaa
shr
or
sbbb
jno
lcall
push
call
test
lods
add
lock
ret
sub
lods
pusha
test
xor
push
nop
xor
dec
inc
cltd
or
mov
test
or
mov
adc
orb
cld
cmpsl
adc
pop
cld
dec
xchg
jle
dec
mov
sub
cmc
xor
xchg
jae
out
aad
push
out
test
push
or
jbe
mov
iret
pop
inc
mov
rclb
loopne
std
mov
xlat
mov
sub
stos
jle
mov
mov
cwtl
xor
add
push
ret
les
inc
test
out
stc
add
or
popf
jecxz
js
pop
gs
roll
incb
inc
shl
push
mov
stos
xchg
les
and
cmp
mov
pop
aaa
mov
push
mov
aas
adcb
dec
lret
jg
xchg
mov
xor
mov
push
sub
cmp
testb
push
adc
dec
inc
push
mov
mov
rcrl
sub
lret
arpl
int
inc
jb
lods
cmp
lock
add
aas
and
les
pop
sub
pop
mov
inc
nop
mov
sub
xchg
pop
int3
mov
cwtl
xor
daa
addr16
mov
movsl
mov
inc
je
xorl
das
mov
xchg
ljmp
popa
xorb
inc
test
dec
std
insb
into
lods
movsl
out
sbb
sbb
daa
aaa
decl
inc
arpl
push
jae
clc
fucomip
fdiv
clc
mov
jge
push
xor
xor
dec
mov
scas
push
dec
test
mov
into
pop
shr
mov
and
sahf
icebp
jp
js
lea
sub
add
xchg
xor
and
pop
pop
jecxz
imul
and
inc
cs
outsl
jno
in
in
pop
aad
and
mov
push
sbb
jg
pop
mov
int3
clc
out
test
in
stos
cwtl
add
or
lcall
cmp
aas
fmull
pop
add
sub
ja
adc
loope
mov
sahf
xchg
pop
lret
dec
sub
testb
add
ss
sub
neg
subb
xchg
mov
add
in
movsb
sub
cmp
pop
xor
subb
jmp
jb
cmp
pop
pop
lret
cld
decl
and
add
push
pop
div
mov
or
mov
xor
div
jmp
and
popa
into
pop
dec
and
mov
push
cmp
sbb
adc
sbb
xorl
pop
lahf
imul
pop
leave
sbb
rorl
mov
scas
push
mov
push
sbb
or
mov
sub
dec
in
ljmp
out
data16
xchg
xor
pop
xchg
cmpsb
pop
and
sbb
cmp
adcb
mov
jmp
jge
enter
jecxz
jnp
jnp
sti
ds
ds
jge
dec
inc
cld
ss
jo
cmpsl
mov
and
movsl
iret
add
and
cmp
lret
mov
hlt
repz
dec
mov
xor
dec
lods
loope
les
movsl
fstp
lret
mov
dec
movsb
andl
lods
fdivrp
cwtl
mov
je
dec
mov
ds
ljmp
inc
dec
and
inc
lea
jge
push
inc
xor
cmp
pop
jle
add
rcrb
pushf
incb
mov
mov
jnp
pop
aas
fsubl
dec
and
cmp
imul
insl
xchg
ficomps
das
lret
imul
outsb
outsb
mov
scas
repnz
orl
outsb
xchg
cmp
movsb
xchg
pop
cwtl
mov
xor
xchg
jmp
mov
xor
aas
add
inc
push
inc
adc
mov
adc
rorb
insb
int
or
jp
dec
pop
mov
ret
dec
lods
mov
ja
mov
dec
sbb
mov
ja
mov
jecxz
jae
aas
jno
mov
push
rolb
sbb
cmpsl
cwtl
imul
daa
pop
dec
fdivrs
add
and
push
jo
subb
pop
inc
aad
lock
outsb
out
stos
jl
daa
repz
jecxz
add
test
mov
push
jno
andl
repz
dec
and
inc
orl
lock
bound
shll
mov
cmp
or
test
ret
push
and
jp
lcall
scas
inc
icebp
and
sbb
lret
insb
add
rolb
cld
pinsrw
push
sti
scas
mov
das
lds
shl
cmp
jbe
repnz
xchg
andl
inc
into
xlat
and
fbld
and
aad
jg
mov
test
pop
cld
lock
or
sbb
cli
loop
dec
lods
mov
hlt
fcoms
hlt
inc
jp
push
in
stos
inc
mov
mov
mov
dec
inc
daa
fildll
cli
push
popa
movsl
mov
jmp
rcl
sbb
jecxz
sbb
xchg
fadd
push
sbb
test
test
scas
dec
lds
stc
cmp
insl
fwait
jle
loop
cmp
dec
sbb
mov
push
int3
sbb
mov
jg
push
insl
jg
fsubl
mov
imulb
jbe
push
fistpll
movsl
sbb
jo
push
sub
inc
pop
insb
sti
ja
in
jmp
fdivl
loop
mov
imul
adc
arpl
mov
mov
icebp
out
or
cmp
xchg
movsb
cwtl
mov
repz
pushf
inc
sub
ds
sub
test
or
rclb
add
add
mov
loopne
lea
incl
add
add
add
add
incl
add
jmp
and
or
mov
mov
add
lea
mov
andl
jmp
mov
inc
mov
mov
mov
cmp
je
mov
mov
mov
add
mov
jmp
add
mov
mov
out
mov
and
sbb
or
je
movsl
test
test
cmovo
adc
repnz
jge
and
mov
imul
repnz
pusha
push
sbb
pusha
push
repnz
and
lock
jmp
psrad
daa
mov
or
cmp
sahf
mov
pop
sub
test
xchg
mov
call
movsb
imul
outsl
sbb
out
outsb
sub
pop
std
fidivl
xor
ret
mov
jg
xlat
fwait
test
jp
xor
push
cld
leave
xor
xchg
leave
push
and
out
out
fnstcw
scas
and
inc
mov
or
and
gs
aad
cltd
arpl
jmp
pop
lea
lahf
mov
mov
pop
sahf
pushf
aad
and
es
call
push
cmc
pop
mov
cmp
push
add
test
dec
leave
loop
mov
rcr
sbb
adc
decl
mov
cld
add
dec
stos
fmuls
loopne
jecxz
xorl
mov
jl
not
adc
ss
cli
ret
and
mov
mov
jns
sub
inc
adc
push
adc
jns
xchg
fs
pop
adc
and
xchg
aam
jmp
xchg
push
jl
out
outsl
fwait
dec
adc
jmp
fcoml
lahf
in
loop
sbb
sahf
push
sti
into
lret
mov
pop
aad
add
lea
leave
jge
mov
daa
dec
sub
push
aad
call
sti
leave
or
mov
xchg
out
pop
lea
repz
dec
mov
and
repnz
xor
push
sarl
cmp
mov
mov
inc
mov
fimuls
les
call
xchg
mov
aam
ljmp
xor
sbb
inc
outsl
bnd
fdivrl
sbb
or
jp
mov
out
fcmovbe
inc
or
adc
lret
xlat
call
test
mov
push
inc
faddp
add
sbb
xor
pop
pop
cmp
dec
or
add
ljmp
sub
cmpsb
lods
int
iret
fwait
bound
in
cwtl
fdivrs
test
cmc
je
andl
lods
xlat
jg
or
cmc
sub
mov
lret
test
xchg
insb
mov
push
push
inc
mov
call
xor
enter
inc
aaa
fldl
repz
daa
jne
jo
push
and
sbb
in
sbb
rclb
lea
jp
xchg
popa
xor
inc
dec
pop
dec
dec
fnstcw
pop
fildl
mov
bound
adc
int
cld
sub
lcall
and
shrl
out
rclb
cmp
push
cld
xorb
sarb
popf
sub
jns
inc
pop
push
cmc
cwtl
cmp
xor
mov
es
mov
cmp
js
xchg
push
scas
stos
pop
mov
and
dec
mov
and
adc
push
jp
stc
fwait
adc
inc
pop
fwait
dec
addr16
and
cmpsl
adcl
push
adc
jl
push
mov
mov
mov
mov
movl
movl
movl
movl
lea
mov
mov
movzwl
xor
movzwl
sar
mov
movzwl
xor
movzwl
shl
or
movzwl
mov
mov
mov
mov
xor
jmp
imull
mov
mov
dec
fistpll
sub
sbb
adc
sbb
stos
pop
movsb
cmpb
and
pushf
adc
sub
jecxz
sbb
stc
ja
jnp
dec
pusha
lahf
jns
push
int3
xchg
mov
stc
lret
gs
imul
lods
fisubl
xlat
iret
push
cmp
pushf
aaa
mov
inc
push
cmc
loop
cmp
jbe
test
xchg
jne
int3
flds
das
cmpsb
mov
loope
aas
out
and
sbb
cmpl
sub
inc
adc
lahf
mov
mov
or
add
outsb
scas
sbb
pop
adc
pop
in
daa
lods
stos
cmc
inc
dec
add
lods
bound
sub
xchg
pop
cmpsl
in
je
and
clc
mov
adc
hlt
scas
pop
xchg
mov
pop
sbb
cmp
out
nop
xor
adc
pop
inc
sbb
fwait
popa
movsb
sub
ss
adc
ldmxcsr
jecxz
jb
test
add
dec
or
dec
jmp
mov
in
or
les
les
arpl
dec
nop
lret
ds
sbb
add
push
pop
adc
xlat
xor
xchg
cmp
dec
fcompl
mov
cmp
cmp
stos
cmp
and
inc
cmpsb
pop
out
adc
add
rorl
movsb
xchg
out
mov
mov
pushf
jge
push
pusha
jno
movsl
pop
clc
rcr
cmp
fs
cmp
inc
push
sub
push
xchg
mov
pusha
cmp
outsb
addl
lahf
mov
xor
es
sbb
fldt
arpl
xchg
push
int3
jmp
lret
jecxz
insl
push
sub
xor
mov
and
mov
insl
dec
in
dec
in
inc
daa
jb
leave
outsb
rcll
jne
dec
flds
mov
std
mov
and
sub
clc
mov
out
mov
aaa
packssdw
sub
rolb
mov
aam
in
xor
mov
call
fiadds
mov
cmp
out
adc
pop
je
mov
lret
pop
pop
ret
in
or
shr
sti
lds
aas
insl
mov
mov
mov
mov
cmp
or
fidivs
jl
xchg
xchg
sbb
xor
xor
pushf
scas
fstps
in
inc
dec
dec
in
int3
push
xor
push
cmc
out
pop
push
xlat
mov
enter
cmp
loope
stos
mov
cmp
mov
add
shl
lahf
adc
rcrl
fdivl
nop
loopne
xchg
sbb
ret
shl
dec
push
cmpl
cmp
or
lds
jp
popfw
aaa
dec
add
pop
movsl
and
cmp
dec
in
inc
jecxz
jle
rol
ds
mov
mov
out
dec
clc
jbe
mov
sub
xor
std
rcll
sbb
rorb
cmp
scas
adc
adc
enter
insl
lds
cmc
inc
cmp
clc
fsub
aam
fnstenv
mov
cld
je
in
fstps
outsb
xchg
jo
rorl
adc
cmpsl
in
das
add
fdivl
in
bnd
add
dec
mov
decl
test
decl
pushl
xor
mov
call
or
or
movzbl
push
lea
push
call
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
add
mov
mov
cmp
je
mov
mov
movzwl
xor
movzwl
sar
mov
mov
movzwl
xor
movzwl
shl
or
movzwl
mov
mov
mov
movzwl
xor
movzwl
sar
mov
mov
movzwl
xor
movzwl
shl
or
mov
mov
jmp
mov
mov
xor
xor
mov
call
mov
jmp
jecxz
enter
sbb
cltd
mov
sarl
adc
sbb
pusha
or
jbe
mov
mov
imul
cwtl
repz
xchg
sbb
mov
push
insb
ds
xchg
dec
cmp
lcall
dec
imul
xchg
sub
pop
mov
ds
jge
and
shl
dec
nop
insb
call
popa
lcall
sbb
movsl
pop
cmp
testb
out
dec
xor
ffreep
mov
inc
hlt
cmp
push
add
ja
loopne
pop
adc
jp
pop
add
fbstp
push
xor
aad
outsl
sub
jae
insl
in
flds
add
push
js
fsubs
test
inc
jg
cld
dec
insl
pop
gs
shl
and
pop
cmp
push
fs
inc
xchg
cmp
cmp
idivb
insl
add
dec
cmpsb
pop
adc
sbb
cmp
mov
mov
jmp
lds
icebp
mov
sbb
pop
negl
call
mov
inc
xor
loope
mov
sub
in
xor
adc
push
js
je
cld
sub
pop
jecxz
inc
in
ljmp
adc
and
fdivr
aad
pop
cmp
mov
jl
or
mov
pop
mov
daa
in
xorl
dec
dec
aas
in
add
dec
sub
sbb
scas
lods
sbb
in
aaa
flds
fisttps
adc
mov
cmpsb
and
lahf
aam
pushf
test
out
rolb
sub
push
mov
les
fs
fs
or
sbb
inc
dec
fisubrs
adc
xchg
mov
enter
sbb
xlat
adc
enter
adc
shl
ljmp
fimull
cmp
mull
xor
mov
mov
jge
push
or
fwait
add
cmp
push
mov
aad
js
sbb
in
jae
lods
stos
iret
lret
adc
fildll
icebp
stc
mov
jb
pop
jecxz
push
stc
incl
mov
out
mov
inc
pop
xor
pop
xchg
xchg
mov
sbb
adc
jmp
xor
repnz
adc
shlb
sahf
aaa
test
xchg
cli
mov
dec
notb
fucom
push
flds
lods
dec
xchg
sbb
lea
xchg
shl
add
int
dec
test
jo
xor
popa
mov
popf
sbb
daa
push
pop
mov
cltd
je
popa
xor
imul
icebp
xchg
addl
roll
mov
clc
scas
fdiv
xor
cmp
sbb
scas
aas
fldcw
test
add
rcrb
pop
sbb
lea
dec
add
cmp
cmp
and
mov
loope
std
movsl
and
add
lock
inc
test
clc
movsl
aad
mov
cmp
mov
popa
push
cli
into
jnp
cwtl
js
mov
xchg
dec
imul
hlt
lahf
mov
test
jmp
xchg
lods
mov
stc
xor
dec
loop
adc
les
inc
jne
push
and
out
cmp
decl
pushl
xor
mov
call
or
or
mov
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
mov
or
je
lea
mov
mov
xor
mov
call
mov
mov
mov
xor
mov
call
or
or
xor
xor
mov
jmp
push
mov
and
push
cmp
sbb
sbb
lahf
mov
lret
add
mov
jl
out
add
and
adcl
xchg
mov
adc
mov
inc
jnp
lds
inc
xorl
aam
adcl
cwtl
pusha
mov
ret
rcll
enter
adc
and
lcall
jmp
cmp
in
mov
mov
jae
movb
mov
fidivl
add
cmpsl
mov
stos
mov
mov
dec
or
ficomps
loopne
int3
data16
adc
inc
push
xor
nop
adc
mov
adc
mov
lods
test
scas
movsb
dec
outsb
lret
in
adc
mov
or
xchg
lods
clc
aad
cmpsb
out
repnz
in
dec
push
and
xor
xchg
fstp
push
test
nop
push
jl
in
sbb
inc
cmpsl
xor
mov
dec
jg
xor
cmp
jmp
jmp
inc
rcrb
int3
jb
xchg
jp
add
test
jno
stos
lods
cmp
push
std
jp
daa
cmc
mov
pop
mov
movsl
lahf
mov
loop
xor
scas
sbb
das
cmp
xchg
mov
push
xorb
lret
fmul
push
push
and
push
mov
jl
out
xchg
sahf
sbb
sbb
fdivrs
push
sbb
lret
sbb
aaa
add
cmpsb
cmp
xchg
jne
pushl
jge
mov
and
push
out
pusha
mov
xor
lock
cli
lret
cmpb
addl
adc
jle
loop
sub
lcall
jle
mov
hlt
inc
mov
les
and
xlat
mov
or
dec
ss
mov
mov
aaa
pop
sub
inc
cmp
in
jae
mov
out
cli
push
mov
imul
mov
mov
pop
int
jo
lods
adc
and
sub
lods
and
fstpt
incb
cltd
jbe
add
sub
aam
aaa
cmp
sub
je
dec
push
pop
and
ret
bound
xorb
xor
jno
sub
aad
mov
clc
fsubs
push
cmp
fdivr
shll
ret
sub
clc
shld
insl
xor
call
ret
mov
fs
js
inc
das
xor
and
insl
mov
cltd
out
add
subl
cmp
add
leave
aas
push
cli
int3
adc
fwait
mov
add
shll
cli
cli
clc
divl
pop
in
mov
je
adc
inc
xchg
xchg
or
sbb
xor
into
dec
ret
push
inc
and
inc
into
pop
mov
pop
ret
cmp
mov
mov
pop
mov
ja
repz
imul
fistl
jmp
and
cmc
mov
stos
data16
dec
aam
std
and
cmp
addr16
daa
cld
push
push
lret
pop
mov
sub
pop
rcll
leave
in
push
test
xchg
push
cmp
sbb
out
lods
iret
xchg
inc
int
fs
mov
mov
movsbl
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
movsbl
cmp
je
mov
movsbl
jmp
cmp
sub
pop
rcrl
mov
and
sbb
loope
mov
notb
loopne
sub
scas
ret
jp
shlb
jb
stc
adcb
mov
mov
xchg
or
fisttps
shl
ljmp
inc
pop
dec
and
ljmp
mov
inc
push
dec
xor
sbb
sub
out
loopne
das
push
callw
add
cmp
dec
decl
pusha
test
adc
sub
testb
xchg
cwtl
lahf
sbb
and
pop
fimuls
cmp
jp
rorb
call
jmp
xor
in
dec
mov
sub
push
mov
pop
lsl
loopne
sub
or
fxch
sti
lea
into
in
mov
xchg
cs
mov
or
adc
dec
push
xchg
add
dec
mov
inc
ret
fnstenv
neg
inc
xchg
fidivrs
mov
add
jl
mov
sub
mov
cmp
or
xor
sub
fdivs
xor
jle
fwait
pop
sti
test
pop
aaa
es
rcr
sub
xor
mov
jns,pn
popa
loope
rclb
enter
mov
cmpsb
sub
das
dec
sbb
lods
leave
das
loopne
lods
or
fcmove
mov
jmp
nop
pop
push
xor
aam
inc
int3
mov
jo
stos
push
lock
cmp
lret
push
lea
fsubrs
adc
xchg
xlat
adc
add
das
sbb
out
aaa
inc
dec
rcrb
inc
jge
lahf
and
inc
pop
sbb
jae
clc
stc
ss
adcl
add
test
aad
mov
scas
or
mov
xchg
and
xchg
adcl
or
lods
scas
aam
push
xor
mov
ja
in
pop
imul
jb
out
pop
pushf
sub
add
minps
xchg
push
mov
push
insl
cmc
xchg
movsl
inc
fwait
mov
or
jae
pop
stc
push
orb
popf
jp
mov
adc
test
loopne
mov
ja
scas
cwtl
dec
dec
out
out
xchg
popf
dec
mov
push
dec
std
addb
xchg
cmp
mov
dec
pop
rcl
cmpb
jo
in
add
andb
mov
pop
fnsave
mov
bound
mov
fisttpll
stos
outsb
stos
dec
je
sub
jno
cmp
jnp
bsr
lds
mov
aas
jge
adc
mulb
movsl
mov
jno
arpl
mov
dec
xor
mov
mov
pop
aam
mov
mov
cmc
sbb
and
aad
movb
push
jnp
xor
sub
xor
add
cmp
jno
push
std
mov
out
popa
xor
cmc
or
out
mov
nop
iret
fildl
xchg
divl
xor
andl
and
test
std
decl
pushl
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
movsbl
cmp
je
jmp
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
movsbl
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
movsbl
cmp
jne
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
jmp
jp
inc
mov
mov
pop
push
popf
jo
xor
mov
notl
sbb
subl
adc
mov
mov
pop
inc
xchg
arpl
xchg
leave
std
add
fwait
xchg
cltd
pop
data16
lds
pop
dec
inc
xor
pop
mov
mov
es
mov
mov
cmp
or
iret
cmpb
adc
add
lret
add
mov
mov
aam
xor
movsl
clc
adc
fldcw
shl
stos
sbb
cmpsl
scas
and
pop
arpl
in
sub
aas
or
or
mov
incb
xor
xchg
imul
mov
push
fcoms
adc
sub
and
push
inc
pop
xlat
sub
mov
into
icebp
sbb
xchg
sbb
lahf
out
xchg
lock
cwtl
std
push
pop
push
lods
pop
pusha
stos
hlt
xor
fists
mov
loop
push
out
jmp
mov
or
stos
add
and
hlt
aam
ljmp
adc
push
xlat
lret
push
rorl
add
xchg
out
jo
fs
xor
and
lds
push
ret
lret
sub
ljmp
les
fwait
mov
jg
lret
and
sbb
mov
cmp
pop
popa
pop
and
filds
adc
xorb
mov
outsb
aaa
mov
rcrl
and
in
or
lahf
pop
pushf
andb
stc
and
sahf
cmp
inc
dec
pop
std
cmp
jg
inc
pop
enter
jge
lret
movsl
cwtl
pop
sbbb
cmc
cmp
in
pushf
out
mov
jp
mov
sbb
adc
cmp
inc
adcl
dec
xor
ja
xchg
mov
dec
jp
push
call
scas
cmc
pop
push
xor
adc
adc
sti
add
mov
mov
mov
pop
in
push
sti
test
jno
je
adc
jl
sub
pop
jle
mov
adc
mov
adc
sub
sbb
outsl
or
rolb
into
push
test
or
or
insl
and
andl
inc
sbb
call
push
mov
out
outsl
aaa
lret
mov
mov
das
imul
scas
jg
jg
movsl
or
jns
xchg
popf
xchg
hlt
mulb
into
pop
out
leave
or
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
add
mov
jmp
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
mov
cmpl
je
mov
mov
movzwl
mov
mov
mov
jmp
jmp
cmpl
jne
xor
jmp
mov
add
mov
movl
cmpl
je
cmpl
je
mov
shl
mov
movl
sub
mov
movl
mov
cmp
je
mov
mov
mov
mov
mov
mov
mov
inc
mov
jmp
movl
push
jmp
mov
mov
ret
dec
push
mov
sub
push
mov
or
jne
sub
mov
mov
mov
mov
sbb
xor
cmpl
mov
mov
jmp
movl
jl
push
pushl
push
push
call
addl
xor
mov
add
sub
mov
adc
mov
mov
mov
sbb
div
dec
mov
not
mov
div
mov
jmp
mov
mov
mov
mov
shr
rcr
shr
rcr
or
jne
div
mov
mull
mov
mov
mul
add
jb
cmp
ja
jb
cmp
jbe
dec
xor
mov
pop
pop
ret
sbbl
subl
movl
cmpl
movl
je
mov
mov
adc
add
mov
mov
pop
pop
pop
leave
ret
cmp
movl
jae
movl
cmp
movl
jae
subl
shld
movl
shl
ret
addl
mov
xorl
xor
and
shl
ret
xor
xor
ret
add
addl
mov
nop
add
adc
add
les
add
sbb
add
xor
add
in
test
add
add
or
add
add
add
mov
xchg
add
or
add
pusha
mov
add
popa
je
outsl
outsl
add
add
addr16
popa
je
jb
popa
je
jb
popa
je
jb
popa
je
jb
popa
je
jb
popa
je
jb
popa
je
jb
popa
je
jb
popa
je
jb
popa
je
add
insb
insb
push
gs
insb
push
gs
insb
push
gs
insb
push
gs
insb
push
gs
insb
push
gs
insb
add
add
hlt
and
push
add
add
push
add
add
push
add
add
push
add
add
push
add
add
push
add
add
push
add
add
push
add
add
push
add
add
or
inc
add
inc
add
es
add
inc
push
mov
movsb
popf
movsb
jno
xchg
movsb
or
movsb
sbb
movsb
roll
adc
movsb
popf
movsb
jno
xchg
movsb
or
movsb
xor
movsb
mov
in
xchg
movsb
adc
movsb
popf
movsb
sbb
movsb
fwait
movsb
xchg
sub
cs
push
adc
movsb
fwait
movsb
add
movsb
sbb
movsb
shll
shrl
or
push
pop
outsb
adc
movsb
fwait
movsb
add
movsb
xor
movsb
andl
imull
dec
adc
movsb
fwait
movsb
jae
popf
movsb
sbb
movsb
fwait
movsb
andl
testl
movsb
aaa
movsb
fwait
movsb
jae
popf
movsb
pop
movsb
xchg
movsb
push
movsb
mov
inc
rorl
imulb
xchg
movsb
aaa
movsb
fwait
movsb
jae
popf
movsb
cmp
movsb
fwait
movsb
xchg
mov
mov
out
adc
xchg
movsb
aaa
movsb
fwait
movsb
jae
popf
movsb
cmp
movsb
fwait
movsb
andl
imul
push
into
adc
xchg
movsb
cmp
movsb
popf
movsb
jnp
xchg
movsb
fwait
movsb
xchg
movsb
shl
shr
lock
test
cs
push
push
adc
xchg
movsb
adc
movsb
cmp
movsb
fwait
movsb
lea
or
push
push
outsb
adc
xchg
movsb
add
jl
inc
add
es
add
sub
je
inc
add
inc
add
inc
add
inc
add
inc
add
add
inc
add
es
add
push
movsb
scas
or
movsb
mov
inc
add
inc
add
inc
add
add
add
es
add
inc
add
es
add
es
add
inc
add
inc
out
hlt
es
add
es
add
xchg
mov
add
inc
add
rcl
pop
inc
jg
add
add
jno
cvtdq2ps
jbe
cmpsl
mov
xchg
test
es
add
fiadds
movsb
cmpsb
fiaddl
movsb
mov
fiaddl
movsb
mov
fiaddl
movsb
mov
push
movsb
mov
push
movsb
mov
push
movsb
out
fiaddl
movsb
decl
adc
jo
inc
add
sub
add
add
scas
lcall
das
dec
add
insb
and
add
inc
sbb
hlt
clc
sarb
sub
jle
add
add
jl
add
lods
inc
add
push
movsb
jg
inc
movsb
push
movsb
inc
movsb
std
movsb
jmp
movsb
push
movsb
dec
movsb
std
movsb
jmp
movsb
push
movsb
jg
std
movsb
jmp
movsb
dec
movsb
inc
movsb
jne
pop
movsb
jnp
dec
movsb
fwait
movsb
xor
xor
xor
xor
inc
xor
xor
xor
xor
xor
inc
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
push
shlb
rcll
into
xchg
dec
xor
sbb
push
je,pn
mov
imul
leave
daa
dec
out
pushf
mov
dec
xchg
lock
inc
or
js
popa
pop
jecxz
movb
cs
aas
inc
leave
testb
jl
xchg
inc
add
add
add
inc
add
es
add
fbld
add
add
je
gs
jo
jo
outsl
insb
je
jae
outsl
popa
add
add
add
add
inc
insl
jns
outsl
js
jns
jb
popa
je
jne
gs
jae
gs
add
add
add
add
inc
jne
jp
outsb
add
add
imul
insb
outsl
add
push
popa
arpl
imul
add
outsb
imul
add
add
add
add
insb
insb
gs
add
add
add
gs
data16
jae
outsb
fs
popa
insb
imul
js
imul
add
add
addr16
insl
ja
jns
popa
jns
outsb
popa
bound
insl
outsl
jb
add
add
je
dec
add
add
add
add
addl
add
loopne
add
mov
add
xchg
in
jno
iret
jbe
or
cwtl
int
std
pop
fsubrs
dec
xor
stc
inc
adc
dec
sbb
mov
jns
dec
sbb
xchg
cmp
in
jno
iret
jbe
or
int
std
pop
jns
pop
xor
stc
inc
icebp
das
int
mov
mov
jns
xchg
lret
rolb
jno
jbe
or
int
std
pop
fdivs
int
stc
inc
icebp
test
mov
int
mov
addl
rolb
jno
jbe
or
cwtl
int
std
pop
ret
cmp
xchg
stc
inc
adc
test
ret
xchg
aad
lds
iret
jbe
or
int
std
pop
pop
insb
cmp
stc
inc
icebp
push
int
mov
mov
jns
test
lcall
jbe
xorl
sbb
and
int
adc
mov
add
add
lods
clc
icebp
jo
jge
aad
clc
icebp
jo
adc
incl
jo
jo
jo
xor
cwtl
add
add
xchg
or
addb
jecxz
hlt
scas
rolb
sub
iret
pop
iret
push
out
int
adc
out
sub
or
rolb
subb
sub
cmc
sub
in
aad
add
mov
fcmovnbe
out
pushf
xchg
test
fs
mov
iret
int3
call
jno
imul
int
std
xor
movsl
das
pop
push
or
sub
xchg
iret
les
addb
add
addl
adc
inc
jns
fldlg2
es
or
add
mov
add
addl
jns
insl
and
push
add
test
push
add
push
mov
test
lret
addb
in
outsl
rcl
jge
outsl
xchg
addb
sahf
mov
jno
popa
mov
addb
push
jge
push
xchg
addb
jge
push
xchg
addb
rorb
jo
std
xor
movsl
inc
xor
or
addl
addl
int
popf
aam
shlb
or
xchg
aam
int
icebp
int
xchg
or
or
or
pushf
stos
sahf
popa
mov
mov
mov
roll
int
or
adc
int
mov
lods
xchg
lret
rorb
in
push
int
or
daa
addl
or
mov
gs
addl
xchg
or
addb
xor
int
mov
int
xor
xor
lea
das
add
addb
int
mov
cli
test
int
jge
xacquire
insl
insb
shrb
outsl
lods
xchg
inc
addl
lea
cli
test
mov
and
xchg
mov
dec
ja
pop
rcll
int
fidivl
jecxz
xchg
or
in
inc
add
test
jecxz
jecxz
movsl
pop
cmpsb
lods
addb
lods
mov
mov
addb
shll
test
add
leave
int
or
cmpb
movsl
jecxz
mov
in
in
addb
movsl
int
mov
rcll
leave
xor
pop
jbe
jnp
int
xor
movsl
int
cmp
inc
inc
add
jle
clc
or
std
das
pop
adc
cmp
or
add
mov
xor
les
int
sub
stc
xor
sbb
inc
int
inc
int
std
xor
xor
pusha
lret
arpl
test
xor
in
popf
adc
addb
shl
mov
and
mov
jbe
shrl
lods
or
stc
test
int
jne
pop
insl
shl
test
in
xchg
pop
insl
xchg
int
jge
les
xor
les
adc
addb
mov
shll
xor
ja
lret
je
pop
shl
mov
xchg
xor
int
das
mov
push
das
rcll
pop
mov
ja
int
pop
orb
jmp
mov
insl
iret
les
test
mov
xor
mov
insl
add
or
cwtl
int
mov
int
int
jns
mov
sub
add
cwtl
int
jns
test
add
mov
jns
xchg
cmp
add
add
inc
addl
leave
jbe
inc
and
or
int
stc
int
stc
pop
cwtl
lcall
ljmp
cmp
sarl
jbe
int
stc
int
stc
cmp
sarl
ljmp
int
stc
int
stc
cmp
sarl
ljmp
int
stc
int
stc
cmp
sarl
ljmp
leave
jbe
dec
and
mov
and
sarb
jbe
or
sarb
ror
jbe
jo
addb
addb
stc
cmp
cmp
sarl
push
rorb
jbe
int
stc
int
stc
cmp
cmp
sarl
push
rorb
jbe
leave
jbe
arpl
lods
pop
addb
addb
add
iret
push
xchg
incl
add
add
lea
xchg
fcmove
jbe
dec
insb
addb
stc
cmp
sarl
cmp
shl
sub
or
int
stc
int
stc
add
cmc
cmpb
sarl
repnz
or
mov
sbb
addb
push
or
int
dec
or
int
mov
cmc
or
rolb
mov
in
or
push
addl
lea
or
pop
addl
stc
int
stc
cmp
cltd
shr
xchg
shr
sub
inc
jge
add
int
mov
add
mov
jbe
int
xor
addb
int
adc
adc
add
int
mov
mov
int
xchg
rolb
bound
jno
cmp
push
push
add
add
cmpsl
aad
leave
push
pop
add
add
adc
add
mov
push
insb
add
add
iret
outsb
add
add
insl
leave
push
sub
add
push
cmpsl
aad
leave
push
xor
add
push
xor
cmp
add
mov
push
inc
add
add
iret
addr16
add
add
jbe
int
adc
mov
int
mov
add
addb
mov
leave
jbe
mov
cmp
leave
jbe
xlat
sbb
push
les
add
push
cmpsl
aad
leave
push
nop
add
add
xlat
inc
leave
push
aam
add
cmp
jge
push
faddl
add
mov
shll
add
xlat
sbb
push
pushf
add
add
cmpsl
aad
leave
push
movsb
add
add
xlat
inc
leave
push
lods
add
add
dec
push
jge
push
mov
add
mov
shll
add
ret
sbb
jo
jbe
add
int
stc
int
stc
cmp
cmp
shl
sub
mov
lea
testb
int
mov
lds
psrlq
sub
mov
lea
insl
inc
shrl
or
addl
int
mov
rclb
addl
add
addb
jo
cwtl
xor
lea
addb
int
adc
mov
insl
iret
pop
pushf
add
add
jo
jbe
int
inc
addl
adc
pop
adc
mov
insl
iret
pop
les
add
mov
jo
jbe
int
inc
addl
mov
pop
adc
mov
insl
iret
pop
push
add
add
jo
jbe
int
inc
addl
pop
orb
xor
push
cmp
sahf
clc
add
shrb
pop
shlb
xchg
xor
int
pop
add
mov
adc
int
mov
pop
adc
mov
insl
iret
xchg
add
jo
jbe
int
cmp
push
add
in
test
or
add
pop
sub
sub
lea
ljmp
sarl
push
ror
pop
cmc
incl
add
jo
jbe
int
stc
int
mov
lds
lock
push
ror
pop
xchg
incl
add
jo
xchg
or
xchg
stc
cmp
jmp
shr
sub
inc
jge
mov
jbe
addl
cmp
sarl
repnz
xchg
or
int
cmp
int
mov
lea
sarl
push
roll
xchg
int
mov
lea
shl
sub
mov
lea
insl
inc
shrl
pop
push
incl
add
ljmp
lea
jge
xor
mov
jbe
jo
stc
jl
orb
jne
sbb
jbe
int
mov
xchg
mov
or
cltd
shr
xchg
shr
sub
push
mov
jbe
int
stc
cmp
cmp
shl
sub
mov
lea
shrl
add
int
stc
int
stc
cmp
cmp
shl
sub
mov
std
inc
shrl
add
int
stc
int
stc
cmp
cmp
sarl
push
shr
adc
lea
or
cltd
shr
xchg
shr
sub
xchg
int
std
inc
roll
or
int
jne
jbe
ret
dec
and
leave
jbe
inc
and
int
inc
cmp
cmp
sarl
push
rorl
jbe
int
inc
int
inc
cmp
cmp
sarl
push
rorl
jbe
leave
jbe
dec
and
ret
xor
lea
lds
psrlq
sub
mov
lea
push
xchg
addb
cmp
jns
or
lods
sub
jmp
push
jge
jbe
xor
cmp
clc
add
jbe
int
sbb
lds
psrlq
sub
mov
lea
int
sbb
lds
psrlq
push
rorl
jbe
int
cmp
lds
psrlq
push
ror
lea
jbe
int
inc
int
inc
cmp
cmp
shl
sub
mov
lea
pusha
xchg
addb
or
jbe
or
xchg
or
pop
inc
and
leave
jbe
cmp
xchg
and
int
xchg
int
xchg
cmp
cmp
sarl
push
rorl
jbe
int
jmp
addl
add
and
push
xchg
add
add
and
insl
int
icebp
int
icebp
cmp
cmp
sarl
push
ror
lea
rcl
int
insl
lret
or
int
int
icebp
int
icebp
cmp
cmp
shl
sub
mov
lea
rcl
int
adc
or
cltd
shr
xchg
shr
sub
xchg
int
insl
das
pop
dec
mov
push
jo
add
int
jo
add
cmp
cmp
ljmp
pop
lea
test
test
xchg
icebp
cmp
cltd
shr
sub
jmp
push
adc
xchg
jge
rcll
int
insl
or
icebp
int
icebp
cmp
cmp
sarl
push
ror
lea
rcl
int
insl
lret
or
int
int
icebp
int
icebp
cmp
sarl
repnz
int
jge
rcl
int
pop
int
pop
cmp
cltd
shr
xchg
shr
sub
xchg
int
insl
das
pop
dec
mov
push
xchg
add
add
pop
xchg
add
add
lds
cltd
sarl
push
rolb
test
test
test
xchg
icebp
cmp
cltd
shr
sub
jmp
push
adc
xchg
jge
rcll
int
insl
or
xor
sub
mov
lea
xchg
pop
cmp
cltd
shr
xchg
shr
sub
das
rcl
xchg
or
int
jge
lea
incl
add
jbe
int
pop
cmp
shl
sub
xchg
push
ror
lea
lea
xchg
push
ror
lea
sub
or
int
popf
int
popf
cmp
shl
sub
xchg
push
ror
lea
or
jmp
cmp
adc
xchg
in
sbb
jbe
int
popf
cmp
cmp
sarl
push
roll
push
int
popf
int
popf
cmp
sarl
repnz
int
lods
xor
jbe
int
popf
cmp
cmp
mov
xchg
push
das
rcl
inc
shrl
pop
adc
add
int
stc
int
stc
int
std
or
int
mov
lea
or
jmp
cmp
addb
jno
lea
xchg
cmp
cltd
shr
xchg
shr
sub
jno
stc
int
stc
add
xor
shr
xchg
shr
sub
jno
jo
int
stc
int
stc
cmp
cltd
shr
xchg
shr
sub
or
inc
jge
add
int
stc
in
int
or
push
cmpsb
lods
int
lods
shr
xchg
cmp
lods
sub
int
jne
dec
orl
mov
lea
or
cltd
shr
sub
jmp
push
adc
xchg
mov
jge
jbe
cmp
add
std
add
std
shr
sub
leave
int
std
int
std
shr
xchg
shr
sub
cmp
inc
rcl
mov
lea
add
addl
shr
sub
jno
stc
int
stc
cmp
cltd
shr
xchg
shr
sub
jno
jne
jo
int
or
int
xor
jbe
cmp
add
test
xor
jbe
int
mov
jbe
int
mov
jns
aad
lods
sub
repz
push
ror
xchg
jne
test
jbe
add
test
xlat
int
std
cmp
add
test
xor
jbe
int
mov
jbe
int
mov
jns
aad
lods
sub
repz
push
ror
xchg
jne
test
jbe
add
test
xlat
int
jne
jbe
int
mov
lea
shl
sub
mov
stc
or
leave
jbe
imul
imul
gs
into
and
addb
sarl
lds
jbe
rol
lods
xchg
or
int
cmp
lods
sub
lods
lret
int3
das
imul
lret
inc
rcl
jle
jbe
int
mov
jbe
int
mov
jns
or
lods
sub
jmp
push
jge
jbe
cmp
lods
sub
lods
cmp
xchg
jbe
add
std
add
std
shr
sub
lock
and
jbe
in
and
jbe
int
stc
cmp
cmp
sarl
push
ror
stc
int
stc
cmp
cltd
shr
xchg
shr
sub
inc
jge
add
int
or
out
leave
jbe
mov
xchg
and
dec
mov
lods
imul
and
xor
jbe
int
lods
int
lods
cmp
jmp
cmp
adc
lea
or
jmp
cmp
addb
jno
lea
xchg
cmp
cltd
shr
xchg
shr
sub
jno
lea
or
cltd
shr
xchg
shr
sub
jno
jo
or
int
mov
lea
or
jmp
cmp
addb
jno
lea
or
cltd
shr
xchg
shr
sub
jno
lea
cmp
shr
xchg
shr
sub
jno
jo
int
mov
jbe
int
mov
or
jns
jmp
shrl
jbe
inc
jge
add
int
mov
xchg
mov
or
cltd
shr
xchg
shr
sub
inc
lea
addb
and
add
mov
lea
add
lea
jmp
add
scas
or
aaa
sbb
add
addb
add
add
add
jno
cmp
add
add
lods
jno
lea
lea
shll
jno
mov
or
int
mov
lea
add
addl
shr
sub
jno
lea
or
cltd
shr
xchg
shr
sub
jno
add
int
rcl
insl
xchg
cmp
inc
leave
int
mov
lea
addb
cmp
cltd
shr
xchg
shr
sub
jno
lea
or
cltd
shr
xchg
shr
sub
jno
jne
jo
int
lods
or
int
cmp
cmp
or
cltd
shr
xchg
shr
sub
jno
lea
or
cltd
shr
xchg
shr
sub
jno
lods
add
int
std
or
int
jne
out
or
leave
jbe
inc
and
int
push
cmp
or
lods
sub
jmp
push
rorl
jbe
int
push
int
push
cmp
or
lods
sub
jmp
push
rorl
jbe
leave
jbe
dec
and
ret
xor
lea
jns
or
jmp
shrl
lea
push
xchg
addb
xchg
int
inc
cmp
cmp
sarl
push
jge
jbe
xor
cmp
clc
add
jbe
int
lods
int
lods
cmp
or
jmp
shrl
lea
int
lods
int
lods
cmp
or
lods
sub
jmp
push
rorl
jbe
int
xchg
int
xchg
cmp
or
lods
sub
jmp
push
ror
lea
jbe
int
push
int
push
cmp
or
jmp
shrl
lea
pusha
xchg
addb
or
jbe
or
cmp
inc
and
leave
jbe
cmp
xchg
and
int
cmp
jns
or
lods
sub
jmp
push
rorl
jbe
int
jmp
addl
add
and
push
jl
add
mull
xchg
int
icebp
int
icebp
cmp
or
lods
sub
jmp
push
ror
lea
rcl
int
pop
lret
or
int
int
icebp
int
icebp
cmp
jns
jmp
shrl
lea
rcl
int
gs
cmp
cmp
shl
sub
repz
push
adc
das
pop
dec
mov
push
mov
add
int
mov
add
cmp
aad
lods
sub
repz
push
rolb
loope
jge
loope
insl
lret
int
icebp
int
icebp
cmp
cmp
shl
xchg
shl
sub
int
jge
rcll
int
pop
or
icebp
int
icebp
cmp
or
lods
sub
jmp
push
ror
lea
rcl
int
pop
lret
or
int
int
icebp
int
icebp
cmp
lods
sub
or
jmp
push
ror
lea
rcl
int
insl
int
insl
cmp
cmp
shl
sub
repz
push
adc
das
pop
dec
mov
push
jl
add
int
jl
add
cmp
aad
lods
sub
repz
push
rolb
loope
jge
loope
insl
lret
int
icebp
int
icebp
cmp
cmp
shl
xchg
shl
sub
int
jge
rcll
int
pop
or
and
or
jns
jmp
shrl
lea
xchg
insl
cmp
cmp
shl
sub
repz
push
adc
rcl
xchg
or
int
jge
lea
incl
add
jbe
int
insl
cmp
jmp
cmp
lods
sub
int
or
lea
sub
int
cmp
xchg
push
rorl
jbe
int
popf
int
popf
cmp
jmp
cmp
lods
sub
int
popf
int
popf
cmp
shl
sub
aad
repz
push
adc
xchg
in
sbb
jbe
int
popf
cmp
or
lods
sub
jmp
push
roll
inc
int
popf
int
popf
cmp
lods
sub
or
jmp
push
ror
lea
popf
int
popf
cmp
aad
repz
shrl
xchg
inc
das
rcl
inc
shrl
pop
adc
add
int
mov
dec
iret
jbe
add
mov
jbe
int
xchg
addl
icebp
addl
jne
test
addb
stc
int
stc
cmp
cmp
shl
sub
mov
lea
rcl
push
int
mov
lea
add
addl
shr
sub
jno
stc
int
stc
cmp
cltd
shr
xchg
shr
sub
jno
jne
jo
stos
test
lret
rorb
add
and
int
int
sub
pop
subb
dec
addl
addb
das
add
int
or
das
add
add
int3
addb
addb
add
int
and
mov
or
xor
shrb
mov
mov
mov
das
add
iret
jl
pop
or
add
or
add
cmc
subb
xchg
das
mov
mov
mov
in
push
push
aam
int
add
stc
subb
xchg
mov
sahf
dec
xchg
aam
iret
ficoms
out
int
std
int
push
add
xchg
cmpsb
mov
and
das
mov
sahf
dec
add
add
std
mov
sbb
mov
mov
add
add
mov
pop
out
subb
jo
das
mov
adc
mov
pop
xchg
adc
or
arpl
insl
insb
in
xchg
cmp
lret
lds
sub
jbe
add
xor
fstpl
add
inc
pop
pushf
test
insl
insb
in
fmul
insb
faddl
and
jo
int
adc
fcompl
lea
std
inc
clc
jnp
or
std
or
fsub
inc
pushf
adc
xchg
mov
int
iret
push
ror
push
add
ds
mov
out
inc
stc
fdivs
int
dec
int
in
popf
inc
cld
ja
int
in
mov
out
or
adc
not
dec
int
stc
dec
or
sbbb
cmp
test
lret
rorb
add
push
pop
cwtl
pop
dec
and
leave
jbe
inc
and
int
std
lcall
psrlq
xchg
stos
cmp
shl
sub
or
int
std
int
std
int
std
int
std
int
std
int
std
int
std
int
std
int
std
leave
jbe
fadd
loope
int
std
int
std
cmp
cmp
shl
sub
jmp
push
or
cmpsb
dec
int
sub
push
das
add
int
std
int
std
cmp
cmp
shr
xchg
shl
sub
inc
adc
add
int
add
std
int
std
cmp
xchg
shl
sub
inc
adc
add
xchg
int
cmp
shl
xchg
shl
sub
or
inc
icebp
aam
int
std
int
std
cmp
cmp
ljmp
int
adc
adc
test
xor
jbe
int
std
cmp
cmp
ljmp
int
adc
adc
je
xor
add
int
std
int
std
int
std
int
std
cmp
cmp
in
xchg
push
popf
int
adc
adc
ror
jl
xchg
int
std
int
std
cmp
cmp
shr
xchg
shr
sub
int
std
or
lea
cltd
cmp
shl
sub
repz
push
jecxz
lea
xchg
int
std
int
std
cmp
cmp
shr
xchg
shr
sub
xchg
jbe
popa
and
or
in
int
dec
int
adc
xor
jbe
add
in
int
adc
dec
leave
jbe
popl
dec
pop
xchg
xchg
std
cmp
cmp
shr
xchg
shr
sub
or
inc
jge
pop
int
stc
int
stc
cmp
lock
sub
mov
lea
fnstcw
psrlq
sub
int
adc
xchg
push
jecxz
rcl
bound
jo
int
std
int
std
cmp
lock
push
roll
mov
and
jbe
int
popf
cmp
cmp
mov
push
jge
fldt
pop
xchg
add
add
jbe
int
std
cmp
lock
push
roll
mov
and
jbe
int
stc
cmp
lock
push
roll
addl
leave
jbe
fdivr
sbb
int
std
int
std
cmp
xchg
shrl
sbb
std
int
std
cmp
lock
push
rorl
jbe
int
std
int
std
cmp
lock
push
rorl
jbe
int
std
int
std
cmp
cmp
shrl
push
jge
jbe
inc
jge
xchg
test
jbe
int
sbb
jbe
int
std
cmp
lock
sub
mov
in
inc
rcl
push
int
std
int
std
cmp
cmp
repnz
mov
in
shr
sub
aam
int
in
int
dec
int
adc
lret
jno
mov
jo
in
push
int
cmc
xchg
int
dec
int
adc
xchg
jo
mov
jno
or
int
std
int
std
cmp
lock
sub
mov
cmc
inc
ror
jbe
int
stc
xor
jns
lock
push
roll
cmp
cmp
repnz
mov
cmc
das
rcl
int
lods
or
stc
cmp
lock
push
roll
int
std
cmp
cmp
repnz
mov
lea
push
or
add
int
adc
lea
insb
sarl
test
int
icebp
push
dec
and
add
int
std
int
std
cmp
lock
push
rcrl
mov
stc
int
stc
in
xchg
jbe
int
std
cmp
cmp
shl
sub
mov
arpl
rorb
add
xor
jbe
dec
and
inc
and
or
cwtl
int
int
std
int
std
sar
shll
xchg
cltd
shr
sub
mov
xchg
mov
das
add
int
mov
xchg
mov
xchg
cmc
leave
jbe
popa
and
int
stc
cmp
rcl
mov
xchg
std
int
std
cmp
cmp
shr
sub
repz
push
fxch
out
pop
xchg
leave
fsubrl
add
int
cmc
int
mov
or
mov
out
xor
pop
int
std
cmp
cmp
in
push
cld
or
add
int
std
int
std
cmp
cmp
shl
xchg
shr
sub
or
mov
xchg
out
cmp
cmp
shl
xchg
shr
sub
jmp
addb
std
add
cmp
sarl
push
cltd
iret
ja
jecxz
inc
cltd
das
add
addb
jo
or
mov
mov
das
addb
in
xchg
int
in
xchg
repz
mov
mov
adc
dec
and
or
int
in
cmp
add
call
repz
sarl
xchg
mov
xchg
in
int
dec
int
dec
cmp
add
call
mov
push
cltd
int
mov
int
dec
int
dec
cmp
add
call
mov
push
cltd
int
mov
int
in
int
movsl
addl
mov
push
xchg
add
add
stc
int
stc
cmp
add
call
mov
push
cltd
int
adc
out
inc
aam
in
sub
xchg
std
int
std
cmp
add
call
repz
sarl
cltd
int
test
das
push
test
add
arpl
jbe
cmp
int
lods
add
ljmp
std
cmp
int
std
cmp
shl
sub
mov
lret
rorb
adc
xchg
addb
and
inc
and
int
std
cwtl
lcall
xor
xchg
mov
sub
or
int
std
int
std
cmp
mov
repnz
or
int
and
jbe
int
in
cmp
or
adc
dec
mov
cmc
int
cmc
cmp
or
adc
dec
lahf
xchg
lea
cmp
or
adc
imul
mov
lea
mov
jbe
dec
and
hlt
mov
insl
das
add
int
dec
push
insl
das
add
int
sbb
insl
das
add
int
and
jbe
int
mov
mov
addb
addl
cmp
mov
repnz
or
int
std
int
std
int
mov
lea
outsb
jo
lea
insl
das
add
leave
jbe
dec
and
int
xchg
pop
int
xchg
cmp
loop
mov
push
popf
or
int
std
int
sub
xor
bound
int
std
int
std
int
and
sbb
xchg
dec
inc
fst
push
cmc
int
adc
lods
int
cmc
cmp
add
call
jmp
shr
sub
int
dec
bound
xchg
jo
add
int
dec
int
xchg
int
jo
jge
xchg
jo
dec
xchg
int
xor
sbb
xchg
xchg
add
mov
or
pop
fs
das
mov
xor
jbe
int
std
int
std
cmp
add
shl
sub
mov
mov
and
jge
add
int
std
int
std
cmp
add
shl
sub
mov
jbe
int
stc
int
stc
add
cmp
repnz
mov
mov
pop
lea
addb
mov
lea
xchg
lea
or
jl
icebp
aam
clc
icebp
sub
xchg
in
xchg
int
jo
outsb
test
test
int
mov
lea
xchg
std
cmp
add
call
jmp
shr
sub
pop
lea
mov
popf
int
test
lds
add
sbb
stc
int
stc
cmp
shr
xchg
add
incl
push
adc
and
jbe
int
stc
int
stc
add
cmp
repnz
mov
lea
mov
pop
lea
add
int
and
sbb
cmp
lea
int
adc
lods
int
adc
sti
call
jmp
shr
sub
int
dec
bound
xchg
xchg
pop
add
push
insl
das
add
int
and
or
or
cmp
add
call
jmp
shrl
add
int
std
int
std
cmp
add
sarl
push
rorl
jbe
pop
push
jl
or
leave
jbe
sbb
shr
lahf
xchg
jbe
dec
and
xchg
iret
inc
shl
xchg
adc
scas
cmp
lea
add
cli
xchg
xchg
add
or
mov
jbe
or
iret
outsb
std
iret
jno
or
or
leave
push
jo
add
sub
pushf
add
add
pop
movsb
add
add
push
lods
add
add
xchg
add
sbb
les
add
popa
lahf
xchg
add
sbb
aam
add
call
iret
faddl
add
leave
push
in
add
mov
add
jbe
and
or
jbe
inc
lahf
xchg
jbe
pusha
lahf
xchg
and
int3
push
jo
add
shr
xchg
add
scas
or
test
add
sbb
addl
add
int
adc
inc
add
add
add
or
iret
jbe
jo
or
push
int
jge
icebp
int
std
int
std
cmp
add
sarl
push
rorl
jbe
int
std
int
std
cmp
add
call
lods
sub
jmp
push
jge
jbe
inc
rcl
xchg
or
in
das
int
int
jne
jbe
int
mov
int
sbb
mov
addl
addl
int
sub
xchg
dec
int
cmp
xor
jo
int
stc
int
stc
cmp
add
sarl
push
rorl
jbe
int
and
pop
mov
push
insl
das
add
add
and
lock
mov
push
insl
das
add
int
and
lock
mov
push
insl
das
add
lcall
push
insl
das
add
int
and
sbb
sbb
or
addl
int
dec
add
and
or
or
cmp
add
call
jmp
shrl
dec
and
int
mov
jbe
shr
xchg
adc
scas
cmp
sbb
insb
cmp
lea
lds
outsb
adc
jbe
leave
addb
sub
pushf
test
jbe
int
sub
outsb
mov
jbe
int
sub
outsb
dec
in
adc
jbe
int
cmp
lea
lds
outsb
adc
jbe
add
or
icebp
addl
cmp
int
arpl
xchg
cmp
test
shlb
xchg
int
jno
das
mov
mov
mov
leave
jbe
dec
and
push
lret
aam
popa
shll
xchg
out
xchg
pop
out
orb
mov
pop
out
cmpb
std
int
std
cmp
add
call
jmp
in
xchg
push
cld
add
std
add
test
sub
adc
dec
and
int
std
int
std
cmp
add
call
jmp
shr
sub
inc
stc
xorb
rorb
add
push
leave
jbe
mov
jbe
xchg
addb
addb
test
lods
addb
addb
addb
addb
addb
addb
addb
mov
stc
cmp
clc
add
repnz
and
movb
addb
or
cmc
icebp
lea
jnp
addb
addb
std
ss
pushf
addb
int
push
jp
addb
int
std
xchg
int
std
xchg
xor
jbe
int
in
sbb
cmpb
int
mov
fadds
jbe
xchg
popa
fists
xor
xchg
int
xor
out
adc
mov
subb
int
xchg
adc
mov
addb
clc
int
icebp
push
out
addb
icebp
adc
pop
push
addb
add
add
adcb
pop
cwtl
lcall
or
adc
addb
addb
addb
addb
addb
addb
addb
addb
addb
addb
addb
addb
addb
addb
movsl
dec
bound
addb
dec
pop
and
pop
xchg
mov
stc
xor
jbe
int
stc
sub
int
cmc
dec
inc
outsl
addb
xor
int
in
push
sarb
fisubrl
ret
add
clc
test
push
addb
int
mov
leave
das
sarl
fisttpl
xchg
mov
popa
addb
push
addb
addb
addb
addb
pop
lcall
xchg
lods
int
mov
int
popf
xor
int
xchg
cmpsb
push
addb
mov
ret
jbe
int
icebp
int
or
int
xchg
xor
inc
test
inc
or
rol
addb
cmp
clc
hlt
int
gs
ss
push
addb
add
xchg
jbe
int
stc
sub
int
cmc
dec
inc
outsl
addb
xor
int
in
push
sarb
hlt
int
dec
xor
int
mov
leave
das
rol
int
xor
das
pop
pop
add
add
mov
in
jo
jbe
xchg
aaa
ficoms
pop
mov
jbe
leave
jbe
mov
jbe
leave
jbe
fidivs
ficoms
or
pop
leave
jbe
scas
aaa
ficoms
or
cwtl
lcall
adc
jbe
cmp
cmp
pop
dec
and
out
ficoms
jp
jbe
int
or
iret
xchg
addl
push
ror
je
ror
xor
pushf
test
inc
loop
shr
xchg
int
int
test
insl
adc
cmpsb
mov
or
xchg
in
inc
jbe
das
or
jbe
add
mov
int
stc
push
insl
aam
cmp
out
int
mov
fs
xchg
mov
lret
xchg
add
xchg
stc
xchg
lret
int
lods
or
lret
int
stc
xchg
int
mov
adc
int
cmc
insb
add
std
sarl
push
sarb
rorl
jbe
push
cmc
int
cmc
add
call
repz
shrl
xchg
stc
inc
rolb
int
adc
xchg
stc
int
mov
test
int
stc
iret
adc
int
dec
shl
sub
cmp
or
push
adc
xchg
adc
call
repz
shrl
xchg
stc
xchg
xor
or
inc
lds
pop
outsl
add
add
jbe
int
mov
ljmp
mov
ror
popf
int
cmp
in
or
or
add
in
xchg
or
test
lret
rorb
add
adc
jbe
leave
jbe
dec
and
inc
and
cwtl
or
leave
jbe
into
and
in
inc
sbb
int
std
sar
shll
xchg
repnz
adc
out
xchg
push
add
lea
int
adc
jge
jmp
shr
sub
das
roll
jmp
addb
xchg
stc
cmp
shr
sub
jge
jmp
push
adc
xchg
std
int
std
cmp
cmp
shl
xchg
shl
sub
push
adc
xchg
stc
int
stc
aam
cmp
shl
sub
icebp
shl
xchg
push
jecxz
std
int
std
cmp
loope
jmp
shl
sub
aad
int
in
int
in
cmp
loope
jmp
shl
sub
cmp
in
sub
lock
sub
icebp
shl
xchg
push
jecxz
std
int
std
cmp
loope
jmp
shl
sub
aad
or
int
std
cmp
jmp
shr
sub
xchg
int
cmc
int
cmc
cmp
cmp
ljmp
int
std
int
std
cmp
cmp
shl
sub
repz
push
aad
adc
das
pop
pop
add
add
jbe
int
mov
jbe
arpl
rolb
insl
pop
jbe
aam
pop
jbe
fdivs
lret
or
das
adc
in
addb
lea
lret
or
insb
inc
jbe
subb
stc
std
add
cmpsb
rorb
adc
cmp
addb
xchg
jbe
inc
and
dec
sub
jno
cli
arpl
jbe
int
adc
subl
repnz
or
leave
jbe
into
and
inc
sbb
mov
int
std
int
std
cmp
shl
sub
jns
mov
lea
int
adc
jmp
shr
sub
das
rcl
in
outsb
int
cmc
int
cmc
sarl
push
sarl
lds
jbe
iret
jbe
jo
mov
jbe
int
stc
int
cmc
or
add
jbe
int
std
cmp
lock
push
roll
cmc
int
in
int
in
cmp
shl
sub
jns
mov
std
int
std
cmp
cmp
shr
xchg
shr
sub
xor
int
cmc
inc
jge
mov
jbe
int
mov
jns
lock
push
rorl
jbe
leave
jbe
bound
xchg
addb
jbe
cmp
shrl
jmp
push
jge
jbe
aad
or
int
mov
orb
in
lret
int
stc
das
pop
insl
cmp
or
int
in
int
in
cmp
mov
repnz
int
cmc
sub
int
push
popf
cld
add
int
popf
cmp
or
int
std
int
std
cmp
lock
push
roll
std
int
std
cmp
lock
push
sarl
jbe
int
adc
lea
cmp
cmp
repnz
mov
lea
imul
add
jbe
int
mov
jns
lock
sub
mov
int
stc
test
shll
rolb
in
xor
lret
pop
lcall
addb
roll
cwtl
sub
lahf
xor
std
or
stc
mov
lret
cmp
leave
jbe
adc
addb
mov
jecxz
mov
stc
iret
dec
into
mov
pop
das
mov
mov
das
mov
mov
fs
adc
das
mov
mov
mov
jge
pop
cmc
aam
leave
jbe
sbb
stc
int
mov
jecxz
mov
inc
in
dec
add
leave
jbe
push
addb
int
mov
lret
pop
dec
sub
push
add
add
cmc
sbb
push
jb
add
cmp
arpl
rolb
jecxz
mov
mov
adc
int
add
mov
inc
add
mov
adc
iret
js
or
iret
js
or
iret
js
or
iret
pop
or
cmp
addb
or
jbe
iret
pop
out
addb
pop
xor
pop
iret
pop
inc
addl
pop
xchg
addl
addb
xchg
icebp
or
or
mov
adc
or
and
lea
out
cmp
adc
jnp
ficoms
das
inc
cli
xchg
rcll
xchg
or
mov
out
int
or
cmp
shl
sub
int
mov
addb
cld
push
lock
stc
das
add
adc
mov
or
and
jbe
mov
movsl
int
jge
or
cmpsb
or
jnp
ficoms
das
inc
add
out
xchg
cmp
cmp
push
or
clc
add
add
add
lea
or
lea
icebp
mov
dec
stc
pop
sbb
mov
xor
std
xor
icebp
mov
xchg
adc
add
mov
jmp
and
lea
cmpsb
or
shr
sub
notl
shr
xchg
push
lock
aaa
ficoms
or
or
or
cmpsb
or
jnp
ficoms
das
inc
add
out
xchg
cmp
cmp
push
or
clc
push
comiss
xor
add
int
stc
push
imull
add
int
fs
push
faddl
int
and
jp
int
sbb
cltd
or
xchg
xchg
in
or
or
xchg
cmpsb
cmc
cmp
or
fcom
in
xchg
jbe
int
or
inc
lcall
ja
int
mov
xchg
mov
and
or
xchg
sbb
mov
jbe
or
push
addb
pusha
adc
jo
jbe
int
xor
int
stc
int
in
push
insl
aam
int
std
or
std
test
lea
movsl
push
or
or
int
test
lret
rolb
int
mov
pop
adc
mov
int
cmp
lret
pop
mov
shll
fwait
sbb
cwtl
int
pop
lahf
xor
cmp
jecxz
mov
xchg
add
xchg
das
mov
repz
mov
sbb
lds
sbb
jmp
dec
add
addl
mov
lret
cli
sbb
adc
or
sbb
leave
stos
lds
mov
addb
and
cmc
xchg
aaa
ficoms
or
aaa
ficoms
or
jbe
dec
and
inc
and
out
ficoms
or
fidivs
ficoms
or
int
adc
inc
icebp
xchg
shl
xchg
int
in
int
adc
ljmp
cmp
cmp
push
jns
jbe
iret
jbe
or
int
or
xor
ficoms
or
std
int
std
cmp
shr
xchg
sar
cmp
shr
sub
int
std
int
std
cmp
popf
shl
sub
xchg
int
std
int
std
cmp
popf
shl
sub
xchg
int
std
int
std
cmp
popf
shl
sub
xchg
or
nop
add
add
lea
icebp
cmp
shr
sub
jmp
push
adc
xchg
mov
cltd
cmp
in
push
aad
int3
pop
aam
add
int
dec
int
int
std
int
std
int
jo
popf
cmp
in
push
aad
int3
pop
aam
add
int
xor
xchg
xor
icebp
cmp
shr
sub
jmp
push
adc
xchg
std
int
std
cmp
cltd
shl
xchg
shl
sub
int
std
cmp
mov
shl
sub
xchg
int
adc
int3
pop
aam
add
int
adc
add
shl
sub
jns
mov
std
int
std
add
cmp
shr
sub
jmp
push
adc
xchg
std
int
std
cmp
repz
shl
sub
xchg
int
std
int
std
cmp
in
shl
xchg
push
aad
adc
add
add
push
nop
add
add
jbe
int
std
sar
cmp
or
mov
push
shll
jbe
iret
or
addb
addb
int
push
or
lea
shr
xchg
int
lods
int
mov
leave
cmp
push
icebp
bound
xor
repnz
inc
mov
int
lods
int
mov
inc
jge
shr
xchg
int
lods
int
mov
leave
cmp
push
icebp
bound
push
shl
sub
cmp
inc
sti
add
int
std
int
std
cmp
repnz
jns
mov
std
int
std
cmp
shr
xchg
cmp
shr
sub
xchg
int
std
int
std
cmp
shr
xchg
cmp
shr
sub
xchg
int
std
int
std
cmp
shr
xchg
cmp
shr
sub
xchg
or
nop
add
add
jbe
int
int
mov
aad
jmp
shr
sub
or
add
jbe
int
int
std
int
std
cmp
shr
xchg
int
jo
aad
ljmp
aam
add
int
sbb
lea
or
repnz
jns
mov
std
int
std
cmp
cmp
shr
sub
jmp
push
adc
xchg
std
int
std
cmp
hlt
call
in
push
aad
adc
add
add
jbe
int
std
add
call
repnz
jns
mov
std
int
std
add
cmp
shr
sub
jmp
push
adc
int
std
add
cmp
shr
sub
jmp
push
adc
pop
nop
add
add
xchg
std
int
std
xchg
cmp
int3
push
aam
add
int
sub
hlt
call
repz
shl
sub
iret
or
addb
addb
xchg
and
insl
aam
int
in
int
adc
inc
jge
shr
xchg
int
int
int
in
int
adc
fidivrl
lock
push
adc
xor
jo
xchg
push
in
push
int
int
push
lret
or
int
cmc
int
stc
das
inc
jge
shr
xchg
int
cmc
int
stc
cmp
cmp
shl
sub
lea
push
lds
int
inc
jo
lea
or
xchg
xchg
push
int
dec
int
int
xchg
sbb
dec
xchg
sub
lea
int
int
push
xor
int
int
xchg
jbe
or
das
inc
jge
shr
xchg
int
in
int
adc
leave
cmp
shl
sub
or
int
xor
les
in
int
adc
inc
jge
shr
xchg
int
in
int
adc
repnz
lea
leave
cmp
add
stc
push
inc
shrl
add
addb
movsb
dec
mov
jge
cmpsb
xor
lea
xchg
das
inc
rcll
jbe
int
xchg
shrl
cmp
cmp
push
or
cmpsb
stc
das
inc
popf
xchg
or
int
cmc
push
out
add
dec
shr
xchg
int
stc
cmp
mov
int
cmc
int
stc
das
inc
or
shrl
shr
xchg
int
stc
cmp
shrl
cmp
push
fcmovne
lea
mov
ror
icebp
or
int
xchg
das
inc
rcll
jbe
int
xchg
shrl
das
mov
cmp
dec
or
rorl
mov
or
and
shrl
ficoms
cmp
fidivs
ficoms
ss
or
cs
int
xor
add
mov
int
xor
xchg
int
orl
push
and
add
in
test
int
adc
jbe
leave
jbe
scas
aaa
ficoms
or
int
jne
inc
jge
shr
xchg
int
insl
int
jne
repnz
lea
cmp
cmp
push
shl
int
inc
inc
mov
int
xor
xor
insb
test
jbe
int
in
int
adc
inc
jge
shr
xchg
int
in
int
adc
fnstsw
leave
push
sub
adc
push
mov
std
int
std
cmp
shr
xchg
sar
cmp
shr
sub
int
std
int
std
cmp
popf
shl
sub
xchg
int
std
int
std
cmp
popf
shl
sub
xchg
int
std
int
std
cmp
xchg
shl
sub
xchg
or
nop
add
add
lea
xchg
mov
cltd
cmp
in
push
aad
int3
pop
aam
add
int
dec
int
int
std
int
std
int
jo
cltd
cmp
in
push
aad
int3
pop
aam
add
int
sbb
xchg
sbb
icebp
shr
sub
psrlq
xchg
push
adc
xchg
std
int
std
cmp
cltd
shl
sub
repz
push
aad
cmpsb
std
cmp
hlt
call
mov
push
lds
aam
add
int
std
int
std
cmp
shr
xchg
sar
cmp
shr
sub
int
std
int
std
cmp
popf
shl
sub
xchg
int
std
int
std
cmp
popf
shl
sub
xchg
iret
xchg
movsl
or
add
iret
nop
add
add
std
int
std
cmp
int
sub
icebp
shr
xchg
shr
sub
jno
pop
out
addb
addl
add
dec
int
mov
mov
dec
int
cmc
int
stc
das
inc
jecxz
shl
xchg
int
cmc
int
stc
cmp
shr
sub
xchg
cmc
cmp
push
bswap
stc
das
inc
sti
xchg
shr
xchg
int
cmc
int
stc
cmp
cmp
push
aad
adc
xchg
cmc
sarl
das
inc
sti
xchg
shr
xchg
int
cmc
int
stc
cmp
cmp
push
aad
adc
xchg
cmc
sarl
das
inc
sti
xchg
shr
xchg
int
cmc
cmp
int
stc
cmp
push
flds
dec
sarl
add
int
or
rclb
xchg
int
add
inc
pop
cwtl
lcall
popf
aaa
ficoms
pop
mov
jbe
leave
jbe
xchg
aaa
ficoms
or
leave
jbe
dec
mov
cmc
dec
lahf
xchg
and
cmp
xchg
and
jbe
int
sbb
shlb
jbe
int
sbb
add
xor
pop
xchg
fs
popf
int
and
out
int
movsl
das
inc
add
out
int
movsl
adc
cmpsb
mov
shr
sub
pop
push
aad
nop
int
or
int
xor
xchg
dec
iret
xchg
lods
bound
stc
jno
cwtl
add
sbb
jbe
add
mov
cmc
add
adc
in
jo
jbe
jo
stos
clc
add
or
int
sbb
lea
outsb
adc
jbe
leave
addb
lods
int
and
outsb
test
jbe
int
and
outsb
mov
jbe
int
and
outsb
dec
int
and
insb
and
addb
sbb
lea
or
and
xorb
or
int
std
stos
test
lret
rcrb
xchg
int
int
dec
adc
cmp
cwtl
lcall
push
mov
jbe
inc
and
dec
addb
ficoms
pop
mov
jbe
leave
jbe
xchg
aaa
ficoms
or
int
mov
jbe
int
cmc
int
mov
or
or
pop
jle
addb
mov
insl
mov
sarl
xor
mov
nop
xchg
iret
sahf
int
mov
aad
or
mov
jno
int
mov
leave
xchg
mov
ficomps
or
pop
mov
or
lret
mov
or
insb
add
add
push
add
add
outsb
add
add
add
inc
mov
add
iret
outsb
xor
add
add
xor
add
mov
add
int
mov
add
int
in
int
adc
inc
jge
shr
xchg
int
in
int
adc
cmpsb
mov
cmp
shl
sub
in
outsb
iret
aam
mov
int
das
mov
cmp
sti
and
shl
das
push
adc
int3
test
lea
inc
jecxz
shl
xchg
int
mov
mov
push
psrlq
sub
popa
int
in
int
adc
inc
jge
shr
xchg
int
in
int
adc
leave
cmp
shl
sub
in
outsb
iret
aam
add
sbb
mov
sti
and
shl
das
push
adc
int3
test
incl
add
lea
inc
jecxz
shl
xchg
int
mov
mov
push
psrlq
sub
popa
int
in
int
adc
inc
jge
shr
xchg
int
in
int
adc
leave
cmp
shl
sub
in
je
push
jbe
add
add
sbb
mov
sti
and
shl
das
push
adc
int3
test
lea
inc
jecxz
shl
xchg
int
mov
mov
push
psrlq
sub
mov
add
or
int
stc
pop
inc
pop
inc
xchg
or
daa
or
int
mov
add
int
mov
mov
xor
pusha
addl
addb
mov
add
int
mov
add
pop
es
push
std
incl
add
xor
push
incl
add
xor
push
addb
add
or
xchg
add
add
jbe
pop
dec
xor
iret
test
add
add
bound
add
pop
push
xor
iret
mov
add
add
pushf
mov
add
int
mov
add
pop
add
addb
add
cmp
adc
cmpb
add
mov
addb
add
pop
lcall
adc
add
int
xor
call
repnz
or
adc
jbe
int
dec
cmp
mov
shl
sub
leave
add
add
add
incl
add
jbe
int
xor
jns
mov
shl
sub
jo
push
stc
incl
add
jbe
int
cmp
push
sbb
add
inc
lret
fwait
xor
adc
icebp
or
int
stc
push
insl
aam
adc
or
fmull
int
dec
int
dec
sar
setl
icebp
shr
sub
jmp
push
adc
xchg
cmc
int
and
dec
das
push
popa
test
int
dec
cmp
shr
xchg
cmp
shr
sub
int
cmc
int
in
addb
int
dec
cmp
shr
xchg
cmp
shr
sub
int
cmc
int
add
pop
xor
mov
add
int
mov
add
pop
es
iret
sub
add
pop
daa
xor
iret
xor
add
add
test
add
add
xor
iret
cmp
add
add
mov
or
cmp
add
pop
fwait
xor
iret
inc
add
add
or
or
inc
add
add
xor
iret
dec
add
add
pop
addb
add
pop
cmp
addb
add
jns
movsl
cmpsl
pop
pop
adc
iret
push
add
add
pop
mov
add
jns
fisttps
jbe
inc
jns
loope
pop
fcom
addb
add
jns
lods
push
pop
jnp
addb
add
jns
repnz
ljmp
mov
add
jns
in
int
xor
xchg
xor
icebp
shr
xchg
shr
sub
in
xchg
int
xor
out
cmp
stc
shr
sub
xor
das
pop
mov
int
xor
out
cmp
stc
shr
sub
int
stc
add
adcl
fwait
addb
movsw
int
xor
lea
cmp
sub
repz
push
jecxz
stc
xchg
int
xor
out
cmp
xchg
shr
sub
add
mov
stc
inc
adc
int
xor
icebp
shr
xchg
shr
sub
or
adc
lea
dec
cmp
cmp
shr
sub
jmp
push
adc
xchg
movsl
or
add
xor
mov
rcl
int
mov
loopne
mov
leave
test
loopne
mov
leave
loop
or
cmp
cli
mov
add
cld
mov
add
cli
mov
loopne
mov
leave
test
loopne
mov
leave
loop
or
popa
mov
or
or
int
dec
cmp
cmp
shr
sub
jmp
push
adc
xchg
dec
int
dec
cmp
mov
jmp
mov
or
int
dec
int
dec
cmp
cmp
shr
xchg
shr
sub
int
dec
iret
mov
out
shl
xchg
cmp
shr
sub
das
mov
or
int
dec
int
dec
cmp
shr
sub
psrlq
xchg
push
adc
xchg
dec
int
dec
cmp
stc
shr
sub
mov
incl
add
lea
dec
cmp
shr
sub
psrlq
xchg
push
adc
xchg
dec
int
dec
cmp
stc
shr
sub
mov
incl
add
lea
int
xor
icebp
cmp
shr
sub
jmp
push
adc
xchg
xor
out
cmp
xchg
shr
sub
xchg
or
adc
lea
dec
int
mov
icebp
cmp
shr
xchg
shr
sub
iret
push
nop
incl
add
add
add
jbe
mov
int
xor
xchg
xor
cmp
stos
cmp
shr
xchg
shr
sub
or
add
jbe
int
dec
cmp
mov
repnz
aam
iret
push
adc
int
xor
lea
cmp
mov
repnz
jo
push
and
add
jo
jbe
rolb
int
dec
cmp
lock
mov
mov
push
ror
iret
movsb
incl
add
int3
push
sbb
jbe
mov
int
xor
xchg
xor
psrlq
xchg
add
call
ljmp
sbb
sub
xor
push
jo
add
iret
mov
mov
add
pop
adc
push
bound
add
int
mov
add
int
mov
add
add
sub
jge
or
mov
mov
mov
add
add
pusha
mov
add
iret
mov
or
les
add
int
mov
add
iret
loopne
pop
add
iret
enter
iret
mov
mov
add
mov
add
add
stc
mov
add
int
pop
leave
xor
iret
addb
add
jge
or
aam
add
int
mov
add
cmp
or
add
add
addr16
add
leave
push
lods
add
add
xor
fadds
add
jae
jno
mov
int
xor
xchg
xor
call
repnz
jns
mov
lea
add
cmp
repz
push
jecxz
lret
add
sbb
lret
cmp
inc
cli
das
or
addb
das
add
addb
xchg
xor
psrlq
xchg
add
call
ljmp
aad
cmp
add
lea
int
xor
psrlq
xchg
add
call
jmp
jge
int
lea
add
mov
repnz
mov
jecxz
lea
int
xor
psrlq
xchg
add
call
jmp
jge
or
add
lea
int
xor
sti
call
jmp
shr
sub
int
xor
add
cmp
repz
push
jecxz
lret
add
sbb
lret
cmp
inc
cli
das
or
pop
pop
add
add
cmpsb
mov
jne
jbe
int
mov
or
insb
test
jbe
int
jge
inc
jge
shr
xchg
int
jne
xchg
jge
leave
cmp
push
icebp
int
cmc
bound
jo
push
cmc
incl
add
repnz
int
in
int
adc
inc
jge
shr
xchg
int
in
int
adc
repnz
iret
cmc
incl
add
mov
leave
cmp
push
rolb
das
push
push
addb
jbe
ficoms
pop
mov
jbe
or
int
xchg
int
popf
das
inc
jge
shr
xchg
int
xchg
int
popf
cmp
cmp
push
icebp
bound
xor
repnz
pop
xor
push
repnz
int
xchg
int
popf
das
inc
jge
shr
xchg
int
xchg
int
popf
cmp
cmp
push
icebp
bound
pop
xor
repnz
pop
sub
xchg
repnz
int
xor
mov
jle
xchg
lea
inc
rcll
jbe
int
icebp
cmp
shrl
ror
lea
push
jge
dec
int
popf
addl
jbe
int
xor
cmp
cmc
add
sub
and
sbb
adc
test
add
or
adc
add
int
cmp
fcoml
aam
int
cmp
fsubl
aam
int
adc
add
int
cmp
outsb
sbb
push
add
cmp
cmc
mov
stos
test
lret
shlb
xchg
int
jno
cwtl
leave
jbe
dec
and
inc
and
int
std
sar
shll
xchg
sti
sarl
push
jns
mov
int
std
aam
int
std
cmp
cmp
sarl
push
jns
dec
inc
adc
pop
int
xor
jbe
cmp
push
add
push
pop
lret
or
das
push
fcmovbe
dec
add
adcl
fwait
addb
dec
adc
in
addb
lea
lret
or
js
clc
orb
int
stc
cmp
int
stc
add
ljmp
std
cmp
int
std
cmp
shl
sub
mov
lret
rorb
int
add
leave
jbe
dec
and
xchg
jbe
or
int
adc
add
lea
addl
lea
std
cwtl
lcall
jns
mov
shl
sub
or
int
std
int
std
cmp
mov
repnz
or
int
mov
insb
jo
mov
int
mov
insb
pop
int
mov
push
outsb
xchg
int
mov
sbb
insb
pop
int
mov
jle
jl
icebp
sub
jbe
int
pop
xchg
in
xchg
insb
xchg
or
int
std
int
std
cmp
lock
push
rorl
jbe
int
std
int
std
cmp
lock
sub
mov
jbe
int
std
int
std
cmp
cmp
repnz
mov
lea
or
jbe
cmp
xchg
and
imul
xchg
int
std
cmp
lock
push
rorl
jbe
int
mov
jbe
add
popf
add
dec
int
mov
neg
add
or
int
adc
insl
aam
int
popf
or
int
movsl
int
dec
xor
or
int
adc
lea
dec
int
movsl
inc
jge
sbb
jbe
int
dec
int
adc
outsb
mov
lea
test
xchg
jbe
inc
and
cmp
xchg
and
or
iret
jbe
or
iret
jbe
or
iret
jbe
or
int
std
int
std
cmp
lock
push
rorl
jbe
jmp
xchg
and
xchg
popf
iret
jbe
jo
xlat
filds
add
jbe
int
stc
cmp
lock
sub
mov
jbe
or
int
xchg
sarl
in
push
popf
or
int
stc
cmp
shl
sub
jns
mov
stc
int
stc
cmp
cmp
shr
xchg
shr
sub
xchg
int
movsl
or
sub
jbe
int
stc
cmp
lock
push
shll
dec
iret
jbe
jo
sti
std
add
int
std
int
std
cmp
lock
sub
mov
lea
int
std
int
std
cmp
lock
push
shll
dec
iret
jbe
jo
mov
jbe
int
cmc
int
int
cmp
cmp
repnz
mov
je
ror
std
int
std
cmp
cmp
shr
xchg
shr
sub
pop
insl
push
adc
das
add
int
adc
lea
int
int
cmp
cmp
repnz
mov
je
ror
std
int
std
cmp
cmp
shr
xchg
shr
sub
pop
insl
push
adc
das
add
int
adc
lea
lock
repnz
mov
je
ror
std
int
std
cmp
cmp
shr
xchg
shr
sub
pop
insl
push
adc
das
add
int
in
int
in
int
int
cmp
cmp
repnz
mov
je
ror
std
int
std
cmp
cmp
shr
xchg
shr
sub
pop
insl
push
adc
das
add
int
adc
lea
int
int
cmp
shl
sub
jns
mov
je
ror
cmc
int
int
cmc
int
cmp
shr
xchg
cmp
shr
sub
lret
rolb
int
adc
mov
xchg
adc
and
psrlq
xchg
cmp
shr
sub
lret
rorb
int
cmc
int
int
cmc
int
cmp
cmp
shr
xchg
shr
sub
lret
push
pusha
jge
push
mov
jbe
int
adc
mov
cmpb
shl
sub
jns
mov
je
ror
lea
int
int
adc
and
psrlq
xchg
cmp
shr
sub
lret
rolb
int
in
int
int
in
int
cmp
shr
xchg
cmp
shr
sub
lret
rorb
int
adc
mov
xchg
adc
and
jmp
shr
sub
lret
push
pusha
jge
push
cmc
addb
in
int
int
cmp
shl
sub
jns
mov
je
ror
lea
int
cmp
shr
xchg
cmp
shr
sub
lret
rolb
int
cmc
int
int
cmc
int
cmp
shr
xchg
cmp
shr
sub
lret
rorb
int
adc
mov
xchg
adc
and
jmp
shr
sub
lret
push
pusha
jge
push
add
in
int
in
int
int
cmp
shl
sub
jns
mov
je
ror
cmc
int
int
cmc
int
cmp
shr
xchg
cmp
shr
sub
lret
rolb
int
adc
mov
xchg
adc
and
psrlq
xchg
cmp
shr
sub
lret
rorb
int
in
int
int
in
int
cmp
cmp
shr
xchg
shr
sub
lret
push
pusha
jge
xor
jbe
jo
outsl
lods
add
int
pop
inc
rcl
push
int
std
int
std
cmp
cmp
repnz
mov
jbe
int
stc
int
stc
int
stc
int
stc
cmp
xchg
shrl
cmpsb
gs
xchg
cmp
add
std
add
std
shr
sub
hlt
dec
and
int
std
cmp
cmp
repnz
mov
lea
push
std
add
int
std
int
std
cmp
lock
sub
mov
lea
int
stc
int
stc
cmp
lock
push
shr
jle
addb
popf
iret
jbe
jo
jge
add
int
std
int
std
cmp
lock
sub
mov
lea
int
stc
int
stc
cmp
lock
sub
mov
lea
int
stc
int
stc
cmp
lock
push
shll
iret
jbe
jo
das
cli
add
int
std
int
std
cmp
lock
push
shll
iret
jbe
jo
sti
stc
add
int
popf
xchg
or
add
cmp
jbe
xchg
jo
push
fildl
add
jbe
int
std
cmp
lock
sub
mov
lea
int
stc
int
stc
cmp
lock
sub
mov
lea
int
stc
int
stc
cmp
mov
repnz
jo
cmp
jbe
jo
add
jbe
int
std
cmp
mov
repnz
jo
cmp
jbe
jo
jb
add
int
inc
int
inc
cmp
cmp
shr
xchg
shrl
lea
addl
jo
cmp
lea
add
jbe
int
cmp
cmp
jbe
int
stc
int
stc
cmp
shl
sub
jns
mov
lea
std
int
std
cmp
cmp
shr
xchg
shr
sub
xchg
or
cli
add
int
mov
xor
in
adc
cwtl
lcall
add
xchg
mov
or
dec
int
mov
cmpsb
dec
or
pop
jnp
ficoms
cmp
pop
mov
adc
inc
sti
xchg
shr
sub
clc
addb
cmp
push
clc
int
sbb
aad
sbb
das
adc
je
push
ja
xchg
shr
addl
xchg
mov
dec
int
mov
dec
int
mov
cmpsb
dec
cmp
cmp
das
inc
sti
xchg
shr
sub
clc
addb
aad
out
xchg
push
clc
int
xor
cmpsb
adc
popf
int
xor
cli
int
adc
inc
loope
shrl
cli
push
addb
push
popf
int
mov
bswap
dec
int
xor
cmpsb
adc
lods
std
add
std
shr
sub
ficoml
aaa
ficoms
adc
mov
clc
aam
ficoms
adc
mov
leave
sbb
push
jge
cltd
pop
mov
add
aaa
ficoms
cmp
adc
out
ficoms
sbb
das
adc
das
stos
push
in
xchg
imul
and
addb
dec
int
mov
out
cmp
pop
jnp
ficoms
cmp
das
inc
sti
xchg
shr
xchg
cmp
shl
sub
cmc
push
fxch
out
imul
cmpsb
and
and
cmpsb
adc
xchg
fiaddl
aam
add
xor
and
sub
std
add
sub
add
or
or
mov
out
cmp
cmp
das
inc
add
out
int
mov
cmpsb
dec
shr
sub
dec
cmc
cmp
push
clc
int
xor
cli
push
aad
cmpsb
adc
popf
int
int
xor
or
cmpsb
adc
inc
jge
shr
sub
fst
jmp
adc
addb
lock
icebp
sbb
and
mov
cmpsl
cmp
sbb
jbe
int
dec
int
mov
dec
adc
mov
jnp
ficoms
das
inc
jge
int
cmp
cmp
sarl
jmp
adc
addb
divps
test
aam
adc
gs
jo
mov
ss
das
sbb
mov
test
lret
shrb
xchg
int
add
dec
int
mov
lea
jge
shr
xchg
int
mov
xchg
dec
cwtl
shl
sub
lea
cmpsb
mov
cmp
push
rorb
or
xor
mov
jbe
int
xor
addb
int
adc
adc
test
nop
jo
add
or
lea
jge
shr
xchg
int
mov
xchg
dec
add
and
jns
ficoml
or
iret
jbe
jo
add
sbb
repnz
adc
xor
dec
add
mov
int
mov
lea
jge
shr
xchg
int
mov
xchg
dec
cmp
fcmovbe
repnz
das
push
rolb
aam
int
xor
lea
inc
jge
shr
xchg
int
xor
xchg
adc
jns
fcmovbe
repnz
lea
shrb
shll
or
adcb
lcall
xchg
inc
int
and
mov
jnp
ficoms
inc
icebp
das
or
addb
test
jnp
inc
hlt
mov
das
add
adc
jno
ficoms
mov
das
add
adc
xchg
aaa
ficoms
mov
das
add
adc
cmpsb
aaa
ficoms
test
aam
adc
scas
aaa
ficoms
mov
das
add
adc
mov
ficoms
das
push
into
addl
sub
addl
adc
xor
dec
add
mov
jmp
addl
mov
das
add
adc
xchg
aaa
ficoms
mov
das
add
adc
aaa
ficoms
test
aam
adc
fidivs
ficoms
mov
das
add
adc
out
ficoms
in
iret
int
mov
dec
int
mov
cmpsb
dec
cmp
cmp
das
inc
sti
xchg
shr
sub
clc
addb
cmp
push
clc
int
mov
int
dec
xchg
sbb
or
int
mov
dec
int
mov
cmpsb
dec
cmp
cmp
das
inc
sti
xchg
shr
sub
fst
out
xchg
adc
addb
clc
ds
xor
adc
xchg
cmp
inc
int
xor
adc
xchg
xor
adc
out
int
adc
adc
jecxz
inc
sti
xchg
shr
sub
fstl
clc
addb
push
clc
int
cmp
aad
cmpsb
inc
cmp
cmp
lea
loope
cmp
shrl
subb
lea
shr
xchg
push
popf
xchg
int
adc
hlt
add
std
shr
sub
insl
adc
aam
ficoms
adc
mov
out
int
inc
add
std
adc
aam
ficoms
adc
mov
lock
and
aad
rclb
or
and
not
aaa
ficoms
cwtl
add
xor
sub
add
sbb
adc
xor
dec
add
mov
or
arpl
sarb
int
mov
dec
int
mov
cmpsb
dec
cmp
cmp
das
inc
sti
xchg
shr
sub
clc
addb
cmp
push
aad
clc
int
xor
cmpsb
adc
fsts
or
int
cmp
inc
int
xor
adc
xchg
mov
dec
int
mov
dec
int
mov
cmpsb
dec
cmp
cmp
das
inc
sti
xchg
shr
sub
clc
addb
aad
out
xchg
push
clc
int
xor
cmpsb
adc
cli
cmp
lea
inc
loope
cmp
push
cli
shrl
subb
push
popf
int
cmp
lea
int
cmp
hlt
int
inc
adc
mov
jnp
ficoms
das
inc
jge
shr
sub
jmp
cmp
adc
addb
lds
lea
out
int
adc
repnz
add
std
adc
aam
ficoms
adc
aam
ficoms
shr
sub
insl
adc
mov
hlt
mov
lock
jmp
incl
add
sbb
pop
aaa
ficoms
or
and
jbe
xchg
aaa
ficoms
or
int
adc
cmc
lcall
xchg
int
adc
out
jo
sti
cmpsb
mov
jno
xchg
std
int
dec
or
iret
jbe
add
mov
mov
dec
add
in
add
mov
adc
stos
or
int
std
test
rorb
add
stc
add
inc
cwtl
leave
je
xor
addb
addb
xor
xor
sub
and
sbb
adc
xor
dec
add
mov
int
mov
je
test
je
xor
insl
das
add
int
xor
push
insl
das
add
add
xor
add
xor
add
xor
int
xor
add
int
xor
int
xor
int
xor
iret
jbe
or
int
xor
xchg
or
int
xor
int
xor
int
xor
int
and
xor
aam
mov
add
sbb
or
xor
push
int
fs
xchg
sbb
push
int
xchg
pop
sbb
add
addl
dec
int
xor
xchg
or
or
xor
push
insl
das
push
cwtl
addl
addl
je
test
add
orb
xor
int
xor
int
or
int
or
int
xor
int
int3
addl
dec
int
xor
int
xor
int
popf
addl
or
imul
jns
add
sarl
push
jge
mov
leave
je
mov
je
xor
insl
aam
int
xor
add
adc
jl
cmp
and
add
xor
add
xor
add
xor
add
xor
int
xor
add
in
cmp
aam
and
aam
and
aam
and
je
push
add
in
and
aam
adc
je
cmp
icebp
in
xchg
je
xor
icebp
or
int
xor
push
insl
aam
int
xor
leave
add
and
mov
mov
int
movsl
addl
and
mov
mov
cmp
add
shl
sub
mov
mov
inc
rcl
and
je
test
mov
int
movsl
addl
addb
cmp
push
iret
jbe
or
int
xor
int
xor
int
in
addb
je
test
add
addl
or
or
adc
mov
int
in
addb
mov
sub
lds
gs
popa
ja
jne
outsl
insl
jne
add
jno
jb
bound
dec
popa
addr16
addr16
js
bound
insb
outsl
add
je
jo
outsl
outsl
push
gs
outsl
jae
jne
imul
jae
dec
jne
imul
gs
outsl
jbe
jae
insb
push
gs
push
outsl
data16
popa
jns
gs
jo
outsl
insb
insb
jo
imul
gs
jne
jae
addr16
jo
gs
outsl
ja
add
outsb
je
gs
popa
je
outsl
jo
insb
fs
arpl
dec
outsl
imul
push
imul
add
je
gs
insb
jne
add
imul
insl
jo
outsb
outsl
add
jae
outsb
add
push
add
add
arpl
push
add
add
push
add
js
jns
push
add
jb
arpl
add
outsl
add
dec
add
outsb
add
je
outsl
add
outsl
add
popa
add
add
dec
add
outsb
add
add
outsb
add
popa
add
add
inc
add
jne
jae
je
add
push
add
jb
jns
add
push
add
popa
add
push
add
insb
add
je
imul
add
add
jo
add
jns
je
push
add
outsl
add
push
add
jo
jns
add
bound
outsl
add
inc
add
popa
add
add
jae
add
add
or
add
xor
add
push
adc
xchg
adc
mov
and
adc
add
adc
add
adc
lcall
add
or
add
add
adc
or
pop
adc
out
adc
out
addb
addb
addb
addb
addb
addl
or
inc
add
addl
sbb
inc
add
addl
sub
inc
add
addl
movb
add
addl
addl
fiadds
inc
add
addl
out
addl
testb
add
addl
mov
adc
pop
cmp
add
adc
jbe
adc
or
add
sbb
add
sub
add
adc
movsb
inc
adc
jecxz
adc
shlb
push
push
adc
pop
inc
adc
xchg
rcrl
add
je
add
adc
fldcw
add
pop
adc
nop
push
adc
scas
push
adc
hlt
jbe
add
pop
adc
mov
data16
pop
dec
adc
mov
adc
sub
adc
xchg
cmp
add
addb
addb
addb
addb
addb
addb
addb
addb
addb
addb
addb
addb
addb
addb
addb
addb
and
add
adc
and
inc
adc
ss
adc
leave
jno
add
cmp
add
inc
adc
mov
pop
adc
dec
sub
add
xor
add
adc
jl
adc
xchg
jle
add
data16
xchg
inc
add
addb
addb
addb
addb
addb
addb
addb
addb
addb
addb
addb
addb
addb
imul
mov
adc
addr16
add
add
cmp
add
adc
jecxz
adc
push
or
add
adc
push
dec
adc
mov
adc
sarl
add
add
adc
test
addl
addl
addl
addl
addl
addl
addl
addl
addl
addl
addl
addl
addl
addl
addl
addl
add
je
dec
add
add
add
add
add
add
add
add
add
add
add
add
add
add
jo
add
addb
add
test
add
test
add
test
add
test
add
test
add
xchg
add
xchg
add
add
inc
xchg
add
add
pop
xchg
add
add
js
add
mov
add
scas
xchg
add
add
add
add
add
xchg
add
xchg
add
xchg
add
add
push
xchg
add
xchg
add
xchg
add
add
pop
xchg
add
add
add
mov
add
stos
xchg
add
xchg
add
xchg
add
xchg
add
xchg
add
mov
add
mov
add
mov
add
mov
add
add
pop
mov
add
add
test
add
mov
add
rorb
add
mov
add
mov
add
mov
add
mov
add
add
mov
add
add
push
mov
add
add
add
add
stos
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
add
add
add
dec
mov
add
add
jb
add
test
add
ret
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
add
bound
add
mov
add
mov
add
lret
add
mov
add
mov
add
mov
add
add
sub
add
add
insb
imul
je
add
inc
add
je
dec
inc
inc
outsl
insb
outsl
jb
popa
bound
add
add
jb
popa
insb
imul
arpl
add
je
jb
arpl
imul
xchg
add
gs
je
inc
dec
inc
push
arpl
outsb
add
popl
inc
jb
popa
je
inc
inc
push
add
add
je
imul
je
js
add
add
je
arpl
outsb
add
fadds
push
gs
imul
add
inc
gs
bound
arpl
add
popa
je
inc
outsl
outsb
je
outsb
imul
xchg
inc
gs
gs
inc
js
outsb
je
outsl
imul
mov
popa
je
dec
inc
push
add
add
popa
jb
inc
outsl
arpl
add
push
gs
imul
addr16
js
add
outsl
dec
push
add
std
add
je
gs
inc
outsl
insb
outsl
jb
add
add
je
push
fs
xor
push
add
add
jne
inc
outsl
outsb
je
popa
insl
imul
add
je
dec
inc
imul
xor
fs
insb
add
inc
inc
push
push
xor
cs
insb
add
xchg
inc
gs
insb
addr16
jb
arpl
add
je
outsb
jne
je
insl
push
arpl
add
imul
je
gs
add
add
arpl
insb
addr16
jne
je
outsb
add
addb
push
outsb
outsl
ja
jae
outsb
arpl
add
imul
popa
jae
push
add
xchg
add
outsb
jae
popa
je
inc
arpl
insb
gs
je
jb
add
add
fs
imul
add
je
popa
jb
je
outsl
jae
scas
add
ja
fs
pop
add
gs
je
inc
imul
jb
insl
inc
add
out
inc
jb
insl
gs
arpl
add
je
jo
popa
je
push
arpl
add
je
inc
add
push
imul
outsl
arpl
add
add
imul
push
add
je
outsl
jb
outsb
jo
je
fs
add
hlt
add
jae
push
push
dec
gs
popa
addr16
add
xchg
add
outsb
jae
popa
je
dec
gs
popa
add
test
dec
outsb
jae
jb
dec
outsb
jne
je
insl
push
add
add
outsb
fs
imul
push
add
ja
gs
inc
add
add
je
insb
popa
jae
dec
outsl
outsb
addr16
add
imul
add
cmp
inc
gs
outsb
jne
je
imul
add
outsb
fs
gs
popa
addr16
imul
add
push
jo
popa
dec
jne
gs
arpl
or
inc
imul
jae
push
outsb
imul
outsb
fs
gs
popa
addr16
add
popf
add
insb
outsl
addr16
outsl
js
popa
jb
insl
push
add
push
gs
outsl
arpl
add
stos
add
fs
imul
add
je
insb
popa
jae
dec
outsb
outsw
inc
js
add
popa
insb
imul
add
inc
jb
popa
je
inc
imul
jb
insl
push
add
or
inc
gs
inc
inc
js
repz
je
popa
jb
je
outsl
jae
xchg
add
je
outsl
jns
arpl
insb
gs
je
jb
popa
bound
ret
jbe
jo
imul
lds
dec
jae
push
jo
popa
push
add
sti
add
je
insb
popa
jae
dec
popa
insl
gs
add
push
gs
outsb
jne
gs
jne
je
je
insl
add
pop
add
je
jns
inc
outsl
insb
outsl
jb
add
add
push
gs
ja
imul
cmp
arpl
popa
imul
outsb
add
xor
jb
outsl
dec
gs
push
add
jnp
push
push
jb
outsl
jb
add
add
je
arpl
gs
imul
add
arpl
outsl
jo
jo
outsb
jne
add
add
je
jae
outsb
arpl
jns
je
je
add
xchg
add
je
outsl
jns
arpl
add
inc
push
xor
cs
insb
add
add
addr16
gs
gs
push
popa
insb
jne
inc
add
push
gs
popa
insb
jne
inc
js
add
pop
add
jns
je
gs
jb
jns
gs
popl
push
gs
gs
popa
insb
jne
inc
js
add
das
add
je
data16
outsl
outsl
je
outsl
outsb
imul
je
jae
add
push
gs
insb
outsl
jae
dec
gs
inc
fs
jo
xor
cs
insb
add
arpl
cs
add
bound
push
gs
insb
insb
outsl
arpl
sbb
inc
jb
outsl
jb
outsl
fs
mov
inc
outsl
insl
jo
jb
push
je
imul
add
jae
jb
jo
inc
add
adc
inc
jne
insb
imul
outsb
fs
add
push
gs
push
inc
data16
dec
popa
jae
add
add
fs
imul
add
sub
dec
outsl
arpl
push
imul
push
jns
je
insl
push
imul
insb
gs
imul
inc
gs
gs
inc
jb
je
arpl
push
arpl
outsb
add
add
gs
popa
outsb
fs
gs
outsl
jne
je
add
push
jne
jb
push
gs
outsl
jb
popa
outsb
arpl
outsl
jne
je
jb
testl
imul
and
insl
push
gs
jne
arpl
jns
gs
add
lcall
insb
inc
gs
je
insl
dec
popa
insl
gs
add
loop
inc
jb
popa
je
dec
popa
insl
gs
imul
add
je
outsl
arpl
gs
outsb
outsw
inc
add
lar
je
outsl
fs
gs
imul
add
pop
add
popa
insb
push
imul
insb
gs
jb
outsl
insl
insl
inc
jb
popa
imul
pusha
add
outsb
fs
imul
gs
add
push
add
je
jne
bound
inc
outsl
jb
popa
je
add
dec
inc
push
dec
inc
dec
xor
cs
insb
