add
add
adc
add
add
add
cmp
add
add
add
add
in
sub
movl
mov
adc
mov
movl
xor
mov
push
andl
xor
add
inc
mov
cmpl
jne
pushl
pushl
pushl
push
pushl
pushl
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
add
mov
xor
xorl
mov
notl
jmp
dec
dec
xor
fcoms
jp
testl
jl
jl
mov
xor
xor
ja
or
fimull
bswap
adc
sbb
mov
or
rol
or
sbb
out
outsl
add
mov
mov
je
fisttpl
jecxz
and
aam
dec
incl
mov
loope
pop
sub
jae
lret
cwtl
sub
mov
loopne
cmp
sub
or
sbb
outsl
insl
jb
cmp
jns
cmp
add
movsb
add
rol
add
jge
mov
daa
sbb
addr16
loop
xchg
aad
cli
call
rclb
add
adcl
mov
xorl
mov
adcl
jmp
inc
in
xor
inc
in
xchg
jno
mov
jl
jl
test
popf
lahf
add
inc
movsl
in
sbb
in
pop
inc
mov
sbb
sbb
mov
dec
jmp
sbb
stc
mov
dec
and
jno
testb
dec
add
andb
mov
dec
scas
sar
ret
or
out
leave
and
mov
mov
and
sub
shr
lock
xchg
out
dec
insl
jl
out
ffree
rcrl
out
pop
es
ja
jne
jge
dec
es
sub
into
popf
push
idiv
movsl
and
repz
xchg
aas
add
mov
and
pushf
divl
mov
and
leave
movl
je
and
mov
and
jmp
xchg
or
mov
dec
popa
enter
in
call
jl
jl
pop
daa
enter
jmp
nop
adc
cmp
cwtl
pop
rcll
cli
mov
sbb
and
repnz
push
pop
mov
sbb
add
dec
scas
nop
sbbb
lahf
cmp
inc
addl
jnp
ljmp
cltd
push
mov
jo
inc
and
push
mov
dec
jne
pop
repz
ja
movsl
mov
add
mov
adc
clc
insl
cld
jmp
sub
jecxz
or
test
or
movsl
int
sub
cltd
out
pop
pop
int3
aas
lcall
mov
mov
sub
mov
sbb
imul
andl
mov
movl
cmpl
je
cmpl
jne
pushl
call
xor
or
dec
mov
jmp
xor
add
inc
mov
add
mov
subl
xchg
xor
sub
or
xor
mov
movzwl
xor
mov
or
mov
mov
xor
jmp
ficoms
loop
sbb
movsb
out
add
push
jle
jl
jl
jl
inc
add
in
jnp
jns
insl
loop
sub
push
in
and
into
sub
test
in
and
imul
repnz
cmp
lds
push
or
and
push
fisubrs
ss
nop
inc
push
jmp
inc
lcall
les
aad
mov
mov
clc
pop
mov
jb
push
test
int3
inc
sub
cmp
aaa
inc
sbb
inc
decb
xchg
mov
push
push
mov
orl
dec
popa
sub
sbb
xchg
sub
lea
adc
stc
aas
sub
or
add
add
cmp
push
lods
addr16
jge
stc
icebp
sahf
clc
jmp
jl
mov
lea
fcom
add
call
or
cmpsb
jbe
sahf
ja
cmpsl
jno
xchg
lock
dec
aaa
pop
cmp
mov
sub
mov
cld
cmp
mov
cmp
dec
pushf
nop
dec
lcall
popf
mov
repz
push
jo
mov
xchg
rcrl
fists
pop
loope
outsl
repz
lock
scas
adc
rclb
in
into
add
loop
mov
xchg
stos
div
push
nop
lea
pop
add
push
xchg
ds
push
stos
add
cltd
rorl
fcmovu
cltd
ds
clc
cmp
cmp
xor
mov
sbbl
xor
movl
cmpl
je
cmpl
jne
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
xor
add
mov
mov
mov
movl
je
mov
xorl
xor
jmp
in
iret
lcall
mov
out
jno
jl
jl
jl
xchg
outsb
or
dec
push
into
mov
scas
mov
testl
adc
or
dec
fwait
push
and
sti
lcall
out
xor
cmpsb
test
pusha
rcrl
mov
pop
add
popa
pop
fnstsw
fisubl
push
jns
push
lods
mov
pushf
ljmp
pop
cld
add
sbb
xchg
aas
mov
dec
pop
mov
int3
ja
inc
inc
sarb
mov
adc
mov
loopne
push
xor
cmc
push
icebp
movsb
push
in
out
cmpb
cmp
cmp
jne
push
test
dec
and
inc
cmp
das
in
add
movl
cmp
movl
jne
pushl
addl
call
movl
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
call
jmp
jmp
fdivr
ljmp
into
outsl
inc
adc
mov
jo
jl
jl
jl
pop
and
aam
mov
mov
negl
fidivrl
gs
int
fnsave
rorb
xchg
out
into
cmc
pop
mov
inc
jmp
lods
inc
test
mov
inc
sub
push
scas
xchg
stc
loope
inc
fmull
pop
or
jle
pop
sahf
insb
fs
inc
les
mov
jl
jbe
xchg
enter
pop
cltd
or
pop
mov
and
or
enter
sbb
cltd
xor
jo
and
jbe
push
xchg
add
xchg
fisubl
arpl
js
and
inc
cld
xor
mov
adc
mov
xor
adcl
add
movl
cmp
movl
je
subl
pushl
jmp
js
dec
mov
jnp
hlt
push
cmpsb
imul
pop
data16
jl
jl
jl
mov
mov
xchg
int3
inc
sbb
insl
pop
or
and
mov
es
jl
xor
xchg
sahf
jnp
xor
loopne
addb
repz
and
mov
scas
mov
dec
jo
adc
rorb
shlb
and
icebp
adcb
and
or
jne
xor
scas
movsb
and
xchg
icebp
lds
cs
mov
mov
rclb
loope
mov
dec
faddl
mov
test
jle
movl
add
mov
lret
in
jo
fmull
mov
mov
into
add
add
mov
mov
dec
mov
aad
repnz
lods
jae
jl
jl
jl
repz
add
icebp
xchg
cmp
inc
mov
push
xchg
push
pop
dec
cmp
xor
mov
rorb
test
in
fsts
push
daa
push
sarl
pop
lret
jle
mov
test
add
test
pop
xchg
roll
ret
imul
mov
sti
jl
xchg
cltd
dec
imul
mov
cltd
mov
mov
cli
mov
sub
loopne
mov
and
loope
out
cld
mov
mov
add
xchg
adc
push
push
cmp
jnp
jne
inc
jbe
shrl
mov
sub
sub
mov
mov
add
mov
xor
add
movl
cmp
movl
je
mov
mov
andl
xor
add
inc
mov
cmpl
jne
push
push
pushl
call
cmpl
jne
xor
xor
inc
mov
cmpl
jb
subl
jmp
inc
adc
jns
lret
push
insb
jno
add
jl
jl
jl
idivb
arpl
mov
fldl
cmpsb
cmp
inc
js
dec
ret
ret
jns
leave
dec
jecxz
push
clc
movsb
jle
add
pop
pop
popl
iret
popf
jmp
inc
sub
xchg
in
ret
sub
inc
mov
xor
dec
push
sahf
xor
insl
mov
sub
das
lods
orl
fs
sub
push
cmp
xchg
test
mov
jne
movsb
popf
ret
dec
jp
sbb
ljmp
addr16
mov
push
test
hlt
ss
popf
push
xor
out
ss
out
insl
xor
inc
loopne
loope
push
in
mov
andl
add
movzbl
and
mov
mov
sub
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
push
push
push
pushl
call
cmpl
jne
mov
inc
mov
jmp
mov
notl
add
xorl
mov
jmp
cmp
mov
cmp
pop
mov
jl
mov
in
xorb
cli
jg
mov
pop
call
repz
movsb
mov
jl
or
test
jae
xor
sub
repnz
push
and
arpl
mov
adc
in
aaa
int3
ljmp
pop
lahf
adc
sbb
aaa
inc
lods
xor
sbb
lds
adc
popa
inc
jb
out
stos
pop
aas
mov
rol
sub
xor
sub
pop
cmp
add
dec
sub
loop
mov
sub
dec
mov
push
jbe
test
iret
inc
sbb
fisubrs
xchg
mov
lret
outsb
gs
lds
mov
movl
cmpl
je
cmpl
jne
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
add
xor
mov
jmp
xor
mov
sub
aas
mov
jl
mov
and
shlb
push
cs
adc
jl
sub
inc
mov
add
lods
pop
ljmp
mov
jecxz
cvtps2pi
jns
fsts
sub
cs
adc
je
jmp
cmc
movsb
loop
or
mov
jbe
dec
cltd
shrb
inc
jecxz
stc
sub
sahf
cmp
sub
orb
cwtl
sub
loopne
popa
jb
mov
scas
rorl
xor
sbb
jge
jne
stos
mov
lds
jl
mov
xchg
mov
scas
or
pop
add
daa
dec
call
add
xchg
jo
jb
inc
fmuls
mov
dec
rclb
jne
jmp
pop
jecxz
xchg
mov
jb
daa
and
insb
xchg
hlt
je
jl
jl
jl
loope
pop
push
cmp
mov
movsl
xchg
and
test
cld
dec
push
mov
into
es
pop
into
push
popf
fists
lcall
inc
pop
popa
jb
push
inc
xchg
inc
ret
bound
lods
mov
popf
jmp
or
sti
add
inc
mov
popa
aaa
fwait
jnp
cmp
push
xor
loop
dec
cld
jl
loope
fs
sub
pop
mov
mov
xor
jb
lock
cmp
cmp
fwait
pop
outsl
les
mov
es
sbb
mov
inc
xlat
inc
pop
test
ror
and
std
cmp
into
add
add
adc
mov
mov
push
int3
xchg
xchg
int
pop
adc
cmp
jl
jl
jl
pop
jmp
xchg
je
cmp
pop
and
mov
pop
inc
cltd
xor
aas
ljmp
cmp
inc
push
push
mov
stos
push
mov
lock
lcall
repz
cmpsb
gs
gs
rorl
or
cwtl
pop
adc
fadds
ret
movsl
repnz
into
mov
inc
xor
or
sahf
hlt
mov
daa
adcl
ss
add
or
imul
mov
mov
pop
sahf
mov
stc
xlat
lods
mov
out
fcomps
pop
std
dec
insb
int
mov
jp
lcall
jg
pop
call
mov
mov
xor
add
cmp
jne
jmp
dec
xchg
pop
add
arpl
adc
cmp
jl
mov
and
mov
dec
out
sub
mov
mov
xchg
cmpsl
ds
subl
cli
inc
das
test
bnd
jbe
inc
jecxz
jnp
mov
mov
aad
inc
pop
cld
in
dec
cmp
call
dec
mov
dec
fimull
mov
ret
test
inc
pop
es
cld
dec
xchg
pop
cmp
roll
push
in
insb
push
subb
movsl
nop
push
sbb
mov
jecxz
fdivrl
outsl
fldenv
hlt
cmpl
jge
cmp
pop
sbb
xor
out
mov
inc
loopne
cmp
jb
jmp
mov
xor
add
jmp
mov
movzwl
mov
mov
jmp
lods
adc
ljmp
scas
pushf
xchg
jbe
jl
jl
jl
xchg
pop
xchg
scas
jnp
ret
movsb
ja
mov
push
add
pop
sub
je
scas
jl
push
out
adc
cmc
jl
sbb
fbstp
xchg
pushf
cltd
mov
xor
xor
rcll
or
stos
mov
inc
in
xchg
data16
lcall
cmpsb
pop
xor
push
or
xor
jo
loope
xlat
and
inc
mov
adc
f2xm1
xlat
addr16
ds
mov
orl
push
mov
adc
sub
rcrl
dec
call
dec
subl
adc
cmpl
cmp
cld
mov
jmp
xchg
sub
cltd
cmp
mov
xchg
lds
mov
cmpsl
jno
mov
push
pusha
cmp
cld
and
cmp
popa
js
scas
inc
push
sahf
mov
cmp
pop
movsl
ret
fs
cmp
cmp
sbb
mov
adc
mov
popa
out
scas
sub
shrb
out
add
mov
jp
mov
dec
repnz
mov
push
dec
mov
sbbb
xor
inc
lods
and
movsl
mov
push
jno
insl
js
ja
sbb
rcpps
and
add
jge
jmp
mov
clc
data16
dec
push
rcll
mov
sbb
lcall
jbe
iret
jg
xor
push
or
add
cmp
jne
mov
xor
jmp
mov
add
mov
mov
test
je
mov
push
pop
push
dec
pop
xchg
sub
xchg
dec
mov
imul
sub
mov
mov
mov
xor
mov
add
mov
jmp
cmp
cli
test
or
js
or
jl
jl
add
insl
dec
andl
xchg
xchg
fdivrs
and
adc
mov
shll
mov
es
jmp
xchg
dec
rorb
stos
jo
sub
out
push
adc
sahf
adc
imul
aam
mov
push
loopne
ja
shlb
popa
push
or
or
xchg
fs
push
clc
xchg
in
sbb
dec
sahf
outsb
and
insb
loopne
jl
cmp
xor
pop
repz
sub
cmp
or
rorb
test
fstps
sahf
inc
xsavec
in
push
jecxz
daa
fdivrl
roll
mov
jmp
and
rep
lods
sti
pop
xorl
and
dec
or
jl
jl
jmp
jmp
add
fldcw
jmp
iret
adc
lret
and
jnp
scas
addb
shlb
mov
or
int3
mov
mov
fiadds
mov
mov
push
sbb
aam
dec
jne
negb
sub
add
clc
pop
jbe
test
mov
inc
int3
ret
cmpsl
xchg
and
data16
cmp
add
push
inc
jmp
fcomp
ret
out
xchg
adc
scas
jg
inc
icebp
xchg
lods
and
insb
stos
inc
mov
push
jle
pop
sbb
clc
pop
sub
fisubs
mov
xchg
dec
lea
imul
mov
xor
mov
lea
cmp
je
mov
mov
mov
mov
mov
xor
xor
mov
add
div
mov
xor
lea
mov
mov
mov
mov
mov
xor
lea
mov
mov
mov
xor
add
imul
mov
xor
mov
lea
cmp
jne
jmp
xlat
pop
cmp
pop
insl
jnp
sbb
mov
lods
decb
jl
mov
lret
mov
jns
loopne
pushf
jne
cs
add
fimull
mov
push
test
jmp
lcall
or
jge
xor
xchg
adc
out
or
sub
xchg
push
in
mov
or
mov
fistpl
mov
jb
fwait
imul
repnz
add
std
push
xchg
sbb
dec
lahf
jno
fdivl
push
cli
pop
out
imul
adc
cmp
loopne
jns
icebp
fnsave
fs
clc
pop
xchg
pusha
add
xchg
cmp
je
cmp
mov
lods
dec
pop
mov
jge
jne
es
cltd
and
dec
lcall
mov
jmp
mov
mov
xor
jmp
fsub
mov
clc
mov
out
pop
and
jl
mov
pusha
add
or
scas
pop
jl
cmp
inc
push
loop
xchg
call
outsb
pop
xchg
stos
in
mov
ret
pushf
cmpsb
shll
add
mov
hlt
or
ffreep
insl
test
mov
scas
and
pop
rcl
data16
jbe
sbb
adc
cmpsl
rclb
and
jl
add
jge
adc
fwait
xchg
ja
loop
adc
sbb
push
or
mov
cmp
mov
imul
and
imul
push
push
rorl
in
adc
orl
mov
jmp
pop
fimuls
cltd
push
mov
jae
push
jl
mov
pop
mov
ret
out
cmc
xchg
inc
jb
and
into
xor
frstor
jle
sbb
loop
pop
inc
adc
mov
lods
std
ret
mov
aad
jle
testl
lret
aam
add
movsb
shlb
jno
mov
lds
movb
shrl
mov
mov
jo
test
inc
mov
das
in
cs
adc
jecxz
data16
xor
loope
push
fadd
lods
xor
cs
sub
cltd
pop
mov
dec
dec
xor
jecxz
push
mov
dec
fsubrs
and
xor
lea
add
call
xor
inc
cmp
jmp
jmp
inc
insb
jns
jmp
loope
pushf
orb
dec
les
jl
jl
dec
lcall
gs
mov
xchg
pop
repz
xor
xchg
rcll
int3
jno
fstps
rcl
inc
mov
jmp
jno
pop
test
or
ds
pushf
jmp
aaa
lahf
and
dec
xor
jo
adc
pop
mov
mov
mov
das
mov
add
cmpb
push
inc
repz
sbb
mov
pop
cli
repnz
lahf
mov
int
jo
or
pop
jg
mov
dec
add
push
mov
popf
push
xor
add
push
les
aas
inc
cmpsb
sbb
add
xchg
push
pop
push
pop
inc
xchg
sub
xchg
dec
mov
imul
add
xchg
push
xor
mov
jmp
jns
inc
ds
mov
in
and
or
jl
jl
jl
jge
insb
mov
mov
xor
mov
inc
adc
in
inc
popf
mov
cli
xchg
mov
push
les
icebp
stos
mov
popf
sub
mov
pop
fstpl
sbb
test
lret
cmp
cmp
add
cmpsl
ret
jbe
inc
std
and
mov
jl
fcomps
das
fwait
xchg
ret
insl
and
aas
adc
pop
inc
lea
dec
sbb
call
push
out
mov
dec
pop
inc
dec
add
pushf
cltd
fists
dec
fistl
jmp
out
pop
cmpsb
dec
pushf
inc
popa
xchg
int
popf
cli
addr16
addr16
sbb
into
add
add
test
sti
mov
or
jns
jl
jl
jl
xor
je
imul
xchg
insl
dec
addb
or
sub
adc
adc
jnp
mov
mov
adc
pop
lock
popf
ljmp
ret
ja
icebp
iret
in
imull
push
inc
ss
repz
sub
bound
jno
test
loopne
daa
hlt
or
and
rorb
inc
mov
loopne
popa
push
enter
leave
dec
mov
rolb
outsl
mov
out
sub
xchg
pop
inc
ffreep
lea
xchg
xchg
push
and
cmp
sub
or
std
ljmp
add
movsb
push
hlt
jns
jo
dec
xor
add
jmp
dec
jge
cmpb
jge
push
loope
fimull
jl
jl
jl
mov
in
push
mov
andb
stos
jecxz
ficoml
es
mov
test
or
imul
mov
test
sub
add
cmpl
mov
or
mov
test
arpl
inc
fisttpll
adc
xor
sub
cmp
mov
lcall
mov
mov
and
loope
es
sbb
std
jbe
dec
jge
push
mov
jmp
and
in
movsb
push
jbe
fmulp
fcompl
lcall
add
cmp
sti
mov
sbb
inc
hlt
pop
pop
pop
leave
ret
push
mov
sub
leave
ret
push
mov
push
andl
jmp
xor
xor
inc
mov
cmpl
jae
cmpl
jne
push
push
pushl
pushl
call
cmpl
jne
xor
add
inc
mov
jmp
andl
mov
inc
mov
cmpl
jne
push
pushl
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
push
mov
movl
cmpl
je
cmpl
jne
push
push
push
push
push
push
call
mov
dec
mov
jmp
mov
movl
mov
push
mov
xor
mov
push
mov
add
cmp
je
mov
mov
xor
mov
sub
add
xor
add
cmp
ja
jmp
sbb
insl
std
pop
mov
stc
add
clc
push
jl
into
jg
jl
addr16
cmp
repnz
popf
push
aam
in
push
mov
jne
movsb
xor
sub
push
jae
notb
in
jecxz
adc
mov
int3
adc
mov
xchg
adc
inc
push
add
push
push
mov
dec
pushf
adc
inc
clc
fwait
sahf
jmp
dec
imul
repnz
adc
push
pop
movsb
cmp
popa
cmp
pop
mov
lret
xchg
cwtl
es
imul
jae
mov
dec
mov
into
out
mov
repnz
xchg
test
jno
aam
cmp
ljmp
sti
repz
ja
xlat
popa
out
imul
vmaxsd
mov
and
pop
mov
mov
cmpsl
ds
repz
mov
vpunpckhdq
test
or
jp
fmull
cs
mov
mov
and
xor
mov
cld
outsb
das
xchg
jmp
cmpsb
lret
jge
stos
or
gs
mov
sbb
sahf
data16
iret
ret
cld
jmp
sahf
call
cwtl
or
mov
and
and
sahf
enter
jmp
pop
in
mov
add
sahf
jb
add
cld
xor
add
mov
imul
mov
xor
add
mov
mov
mov
xor
lea
mov
xor
mov
sub
add
jmp
jp
pop
cmp
jge
mov
push
cmp
mov
jl
jg
jl
cmp
jbe
adc
or
test
out
cmp
jbe
xchg
ret
ljmp
add
repnz
fcmove
mov
pop
scas
mov
xchg
mov
xadd
mov
das
adc
dec
test
dec
ja
pop
out
add
mov
jne
sbb
xchg
nop
and
and
sarl
test
jmp
cmp
cmp
punpckhbw
push
sub
out
push
test
push
and
dec
adc
xchg
cmc
inc
lahf
sbb
cmpsb
pusha
andb
popa
push
out
xor
mov
dec
stc
push
cltd
cmp
sbb
sahf
in
lcall
lock
push
stc
push
lret
movsb
sub
pusha
sub
jnp
mov
adc
lds
inc
gs
fistpl
call
in
lcall
xchg
jp
test
pop
jns
out
adc
push
cmp
xor
sub
lods
dec
dec
add
xor
cmp
jge
push
mov
mov
enter
cmpsb
fwait
pusha
test
push
sbb
nop
and
cmc
aad
xchg
xor
dec
sti
jl
push
adcb
jbe
pop
mov
jmp
jno
in
cli
insl
cmpl
inc
int
sbb
jl
into
jg
jl
mov
adc
adc
xchg
jl
call
call
and
bound
push
sub
push
iret
pop
js
mov
pop
loop
shrl
scas
cmpsl
ds
inc
insl
fadds
xchg
lods
fisubs
loope
cmp
mov
push
leave
insb
inc
sub
sub
push
repnz
fcmove
and
mov
dec
icebp
jle
adc
mov
mov
xor
popa
in
insb
and
iret
pop
push
inc
jae
out
outsl
lret
and
or
les
xor
repnz
push
pop
adc
les
jnp
cmpsl
dec
sub
jmp
mov
leave
inc
mov
arpl
cli
jg
jle
fs
ja
mov
fwait
push
loopne
cmp
leave
sub
cmp
je
cmp
push
xor
inc
sarb
dec
cmpsb
dec
pop
jecxz
lret
nop
or
fstpt
leave
xchg
sbb
nop
and
mov
pusha
imul
xchg
xchg
lcall
mov
cmpsb
cmc
mov
punpcklwd
in
dec
jg
xchg
mov
inc
pop
cmpsb
sbb
push
pop
movsb
sahf
test
pop
pop
leave
ret
push
mov
mov
add
mov
movzwl
or
sub
mov
or
mov
andl
push
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
pushl
pushl
pushl
call
jmp
mov
addl
xor
cmp
je
mov
xorl
jmp
rolb
loopne
dec
push
mov
dec
hlt
sbb
add
jl
jl
sbb
out
repnz
dec
std
and
pop
loopne
fs
aas
jp
nop
push
lcall
push
jmp
fistpl
sub
addb
out
popf
ss
dec
call
sub
nop
lock
test
int3
pop
lcall
pushf
or
imul
mov
bound
fisubrl
mov
pop
or
xchg
aam
xchg
lret
int
pop
mov
sub
push
sub
adc
or
mov
sub
jmp
sahf
and
cwtl
inc
js
cmp
fucomp
adc
stos
sub
jl
hlt
jl
jl
inc
in
adc
pop
test
xchg
les
cmc
push
scas
jae
out
dec
fists
fimuls
pushf
cmovb
in
jne
add
add
xchg
pop
jnp
mov
adc
push
sub
fs
jae
movsb
into
shll
or
jns
jle
out
push
mov
or
test
jecxz
adc
mov
pusha
inc
jno,pt
mov
mov
rcrl
jne
mov
add
jmp
mov
xor
jmp
ficomps
mov
adc
sbbb
add
jl
int3
sub
cmpsb
pop
mov
inc
cmp
mov
jo
add
rcrl
ds
add
sbb
shrb
insl
xlat
pop
sahf
pop
stc
arpl
push
push
sahf
adc
js
dec
jle
icebp
iret
das
dec
sub
xchg
loopne
lret
les
mov
clts
je
inc
popf
pushf
cltd
icebp
cmp
add
in
jo
int
in
das
loopne
insb
scas
aam
cmp
jl
mov
leave
lods
adc
inc
add
mov
mov
xor
add
mov
jmp
mov
mov
mov
mov
mov
add
pop
pop
ret
push
mov
sub
push
mov
and
mov
movl
cmpl
je
cmpl
jne
push
push
call
mov
dec
mov
jmp
xorl
mov
movl
mov
xor
movl
xor
mov
and
jmp
loopne
enter
sti
in
cmp
jg
inc
add
xor
jl
and
inc
pushf
jb
cmp
inc
rcrl
xor
sub
xor
andb
jg
sbb
dec
mov
mov
ljmp
ret
in
adc
jecxz
xchg
scas
pop
fsubrp
mov
andb
cs
shl
push
cmpb
sub
jbe
or
inc
repnz
sbb
aaa
adc
jbe
fwait
adc
sub
dec
stos
add
testl
lods
inc
xchg
sar
mov
mov
std
repz
xor
mov
pop
xchg
ljmp
mov
mov
ljmp
sub
pop
aas
cmp
fsubrl
xor
push
test
jle
cmp
jo
mov
add
dec
mov
xchg
lcall
jp
das
call
mov
pop
and
adc
daa
push
mov
sub
jl
inc
jns
inc
cmpsl
int
lea
jae
out
inc
sbb
pop
add
dec
dec
lret
push
into
imul
and
test
xchg
lahf
inc
imul
gs
push
or
xor
mov
add
adc
mov
mov
mov
sub
xor
mov
xor
not
add
add
mov
andl
mov
inc
mov
cmpl
jne
push
pushl
push
call
cmpl
jne
xor
xor
inc
mov
cmpl
jb
adc
movl
adc
movl
movl
movl
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
call
cmpl
jne
mov
inc
mov
jmp
or
movl
movl
movl
or
mov
movl
xor
or
mov
add
cmp
movl
je
movl
push
movl
jmp
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
call
jmp
movl
mov
orl
jmp
std
xor
mov
add
test
popf
dec
pop
push
into
pop
jl
xor
jl
out
mov
divb
ret
loopne
cmc
in
and
mov
adc
mov
xchg
adc
enter
mov
arpl
aaa
mov
or
enter
inc
in
out
push
movb
pop
aaa
cmp
and
imul
push
insb
xlat
xor
xchg
or
sbb
out
out
push
shll
fidivrs
loop
movl
aas
icebp
and
pop
cmpsb
push
test
mov
xchg
cwtl
cwtl
lods
xor
jbe
or
hlt
sub
inc
out
jae
pop
icebp
inc
adc
cmp
push
and
sub
jns,pt
repnz
dec
cli
addl
test
pop
rcrl
bound
das
xchg
sbb
push
push
sub
cltd
pop
pop
mov
mov
das
or
push
gs
repnz
leave
jbe
mov
in
and
xchg
mov
pop
ffreep
movsl
fsubs
dec
push
xor
sbb
mov
fsubs
inc
dec
movsb
cmp
mov
dec
data16
andl
pop
push
out
pop
or
jns
popf
int
push
stos
xor
cli
adcl
mov
xorl
xor
xorl
add
movl
cmp
movl
jb
xor
mov
mov
xor
andl
jmp
xor
xor
inc
mov
cmpl
jae
cmpl
jne
pushl
call
cmpl
jne
xor
xor
inc
mov
jmp
andl
jmp
xor
add
inc
mov
cmpl
jae
cmpl
jne
pushl
push
push
push
call
jmp
xor
mov
mov
sbb
add
jmp
jno
movsl
imul
pop
clc
dec
sub
xchg
jl
xor
jl
sbb
sub
cmp
cwtl
sbb
pop
adc
aas
dec
decb
mov
lcall
push
scas
dec
popa
push
lock
int
sti
test
sarl
ds
ret
jo
xor
adc
dec
movsb
mov
aas
pop
ret
xor
dec
add
out
pop
sti
xchg
je
pop
into
int
jbe
jo
mov
pop
sub
sbb
cmpps
orb
xor
sub
stos
ds
inc
and
dec
movsb
mov
iret
mov
imul
dec
out
incl
jl
or
pusha
cmp
push
cmp
add
add
jb
cmpsb
xchg
in
sub
mov
stos
in
je
test
push
fadds
out
sti
mov
mov
mov
stos
lcall
sbb
je
data16
inc
pop
add
mov
xor
out
imul
inc
sbb
xor
fucomp
jo
inc
mov
out
in
sub
adc
movsb
out
lret
mov
jge
pop
shll
lock
pop
dec
jb
lods
hlt
cmp
jnp
test
push
in
mov
mov
flds
fimull
rcr
xchg
jbe
inc
lret
roll
add
add
add
add
sbb
cmpl
jne
pushl
call
cmpl
jb
add
imul
mov
mov
sbbl
sub
cmp
ja
add
mov
xor
notl
add
movl
jmp
movzwl
or
mov
movl
cmpl
je
cmpl
jne
pushl
push
call
mov
dec
mov
jmp
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
push
pushl
push
push
push
push
pushl
push
push
call
cmpl
jne
mov
inc
mov
jmp
mov
xor
xor
add
add
imul
mov
mov
sub
cmp
ja
mov
jmp
mov
mov
jmp
dec
xchg
call
sub
adc
adc
cli
scas
pop
sbb
jg
jl
cmp
jg
xchg
out
insl
ret
aas
push
rcll
sbb
filds
iret
adc
adc
sbb
mov
bound
or
push
fidivs
aam
inc
mov
jbe
xchg
mov
shlb
xchg
pop
sbb
xchg
in
dec
mov
dec
push
mov
aad
push
repnz
pop
jo
pop
pop
movsb
mov
cld
cmp
cwtl
movsb
scas
divb
sbb
lods
mov
test
jle
outsb
lret
cltd
lds
in
scas
aas
mov
test
pop
cmp
and
bound
cmp
shrb
jbe
pop
lock
mov
lea
pop
or
mov
lds
ret
test
sarl
mov
dec
lret
mov
jg,pn
lods
dec
mov
adc
rcll
and
rcrl
xchg
sub
mov
dec
lahf
loopne
stos
movsl
jle
xor
inc
dec
and
outsb
adc
push
in
test
cmp
pop
sbb
clc
inc
das
fwait
and
mov
pop
notl
fnclex
clc
add
add
shlb
clc
add
add
imul
mov
mov
sub
cmp
ja
mov
jmp
mov
mov
xor
xor
add
add
imul
mov
mov
sub
cmp
jmp
sbb
cs
mov
cmovae
loopne
push
sbb
jg
jl
mov
sbb
imul
jbe
adc
repnz
add
test
mov
push
fwait
xor
outsw
cmp
and
xchg
incb
push
sbb
ret
mov
inc
jae
push
push
xchg
or
push
fimuls
lret
cli
mov
mov
or
xchg
jnp
and
add
cmp
pusha
cmpsb
stc
mov
pop
sub
xor
jnp
xor
xchg
adc
xchg
out
pop
popa
int
and
mov
movb
lret
jae
xchg
sub
cmpsl
scas
sahf
lcall
adc
out
sub
mov
xorl
inc
push
or
cmp
push
fstpt
dec
imul
imul
jl
rcll
or
sub
jne
into
mov
inc
lahf
mov
dec
inc
jae
pop
and
mov
pop
and
fmul
nop
xor
mov
mov
loope
loop
je
popa
stos
mov
add
insb
repnz
dec
fwait
xchg
lods
std
xor
pop
lahf
mov
call
sub
call
mov
mov
or
add
mov
jmp
mov
mov
xor
xor
jmp
dec
inc
fdivr
fidivrl
gs
shr
scas
mov
jl
xor
jl
out
cli
shll
mov
dec
pop
fucomip
into
sub
inc
adc
mov
pop
lret
cs
jle
scas
out
add
aad
xor
jae
mov
adcl
sub
outsb
xor
pop
add
jae
or
arpl
js
cmp
lcall
cmp
push
fldt
stc
push
jl,pt
shlb
cltd
push
mov
xor
lds
pop
addl
cli
add
fsubs
out
adc
lcall
movb
push
pop
xor
or
xchg
movsl
mov
shlb
adc
sub
mov
nop
and
stos
and
in
in
ret
andl
mull
mov
dec
popa
rorb
loop
das
push
daa
and
aad
stc
adc
mov
push
repnz
push
jns
mov
and
ror
movsl
cwtl
sbb
js
jmp
fcompl
lcall
mov
sti
sar
jmp
mov
mov
outsb
test
dec
mov
pop
mov
push
jnp
stc
add
imul
mov
jmp
fwait
bound
pushf
stc
insl
fwait
jge
les
dec
inc
cmp
jl
xor
jl
adcl
test
sbb
and
add
into
dec
das
fistpll
das
aam
cmpsl
movsb
push
xlat
ret
cmpsl
push
cmp
scas
inc
out
xchg
mov
xchg
imul
fisubrl
mov
cwtl
pop
xor
addl
ret
mov
sti
xor
sti
inc
cmp
mov
cs
scas
jb
or
es
cli
out
mov
cmp
cltd
add
lcall
push
pop
adc
stc
cmpsl
popf
mov
mov
push
push
fdivs
sub
push
cwtl
orb
jnp
jle
call
mov
and
mov
dec
jnp
adc
dec
push
mov
xchg
or
jne
negl
sbb
cmp
ja
sub
push
div
or
inc
jge
or
xor
push
in
push
sti
imul
outsb
xchg
dec
insl
and
mov
fsubs
ret
and
mov
add
jle
and
lahf
lods
arpl
mov
and
clc
lahf
or
out
add
or
add
lcall
gs
arpl
addb
add
psraw
out
frstor
xchg
mov
xor
jl
sbb
inc
in
mov
add
and
inc
sub
pop
xchg
in
push
jae,pn
push
mov
jp
inc
or
push
popf
out
push
xchg
imul
jns
ret
das
xchg
je
mov
test
test
sbb
mov
mov
and
cmp
outsl
or
xchg
mov
pop
adc
xor
loopne
jmp
xchg
pop
lret
sub
mov
iret
cmpsb
or
or
inc
ja
inc
enter
cmpsb
or
push
pop
push
sub
add
lcall
shlb
xor
cwtl
arpl
push
jns
mov
or
mov
xchg
mov
sti
mov
xor
movsb
xor
mov
scas
test
add
mov
aas
mov
cmp
lret
adc
aas
ds
fwait
mov
jl
dec
cwtl
in
mov
mov
outsb
or
sbb
or
ss
in
mov
push
arpl
sbb
pop
lods
fnstsw
inc
mov
mov
dec
pop
xchg
icebp
add
aas
out
loopne
movsb
xor
pop
xor
bswap
inc
mov
notl
jnp
xor
mov
ja
mov
jmp
mov
mov
xor
xor
add
add
imul
mov
mov
sub
cmp
mov
jbe
mov
mov
xor
xor
add
add
jmp
mov
dec
stos
lcall
ss
jl
xor
jl
dec
test
fcomps
inc
insl
or
mov
ja
test
jmp
xchg
dec
popa
sahf
cmp
xchg
sti
movhps
jp
or
ja
int
in
das
lret
icebp
dec
push
xor
insl
pop
jns
mov
mov
inc
adcl
sbb
mov
jecxz
add
lds
or
xorb
or
inc
cltd
push
mov
cld
movsb
and
pop
repnz
ljmp
pop
adc
push
aas
lods
pop
roll
adc
lahf
repnz
inc
add
pop
bound
jl
ss
cmpb
add
lea
popf
out
dec
mov
xchg
orl
adc
lahf
push
cld
fstpt
arpl
xor
dec
pop
push
adc
test
mov
lods
stc
ror
mov
imul
scas
movsb
fsubrs
cs
cmp
mov
mov
ret
dec
and
add
es
fsts
aaa
sbb
mov
test
jb
out
xchg
fsubl
pushf
jo
inc
and
into
dec
mov
pop
add
jae
nop
xor
xlat
mov
mov
mov
mov
add
movl
mov
movl
movl
mov
xor
add
jmp
mov
xor
add
mov
mov
mov
jmp
int
mov
mov
mov
fisubrl
jg
jl
jae
mov
mov
inc
rorl
push
lea
jno
ret
lods
shrb
mov
lds
mov
fidivs
jge
xchg
leave
lea
jb
adc
dec
iret
pusha
adc
pop
lret
xor
ror
cld
into
test
gs
sub
cmp
jmp
jg
movsl
test
jecxz
pop
cmpsb
into
out
fstpt
std
pop
push
imul
lcall
aam
push
xchg
cbtw
jae
aad
pop
xchg
xchg
cmp
xor
ds
in
cmpsb
subl
mov
or
inc
cli
outsb
enter
jb
mov
mov
fmul
mov
or
adc
xchg
mov
loopne
leave
ja
and
fnstenv
movsl
adc
sub
loope
or
lods
xchg
mov
push
adc
mov
add
jno
mov
jnp
mov
stc
stos
and
adc
data16
js
lret
fldt
rcrl
sarb
sbb
orl
shrl
mov
jo
leave
insb
pop
mov
mov
decl
idiv
cmp
cmp
ja
pop
add
in
push
mov
xor
add
mov
mov
mov
mov
mov
xor
add
mov
mov
jmp
adc
iret
sbb
and
inc
adc
jg
jl
xor
lods
adcb
test
xor
rolb
sub
dec
mov
sbb
jb
pop
insl
sbb
clc
insl
ja
push
cli
ss
cld
adcb
mov
nop
rolb
push
imul
add
jg
add
push
popa
inc
xchg
xchg
cmp
daa
push
push
pop
sti
add
pop
xchg
or
jnp
xor
pop
and
xchg
add
xchg
xchg
push
aas
pop
in
vrcpps
push
xchg
ljmp
adc
gs
addb
pcmpgtw
mov
dec
call
inc
jp
mov
inc
sbb
cmp
divb
flds
sti
movsb
adc
cli
push
movsb
pop
xor
mov
push
mov
mov
cmp
call
inc
ret
je
test
test
testb
adc
sti
inc
lcall
mov
pop
add
repnz
aaa
loope
loopne
out
cld
xor
iret
outsb
pop
inc
enter
pop
int3
rol
dec
into
leave
pop
je
xor
and
inc
loop
mov
aas
ljmp
call
in
mov
mov
mov
mov
xor
xor
add
add
imul
add
jmp
stos
outsb
cmp
fnstsw
lods
sbb
push
adc
jg
jl
lock
in
es
inc
je
push
adc
pop
push
pop
add
push
mov
fsubs
es
inc
in
dec
lds
push
mov
fmull
xchg
loope
pop
push
daa
movsb
in
mov
das
sbb
xor
pop
sbb
mov
dec
repnz
fwait
lds
xor
mov
rcl
add
inc
subl
mov
inc
and
cmp
mov
and
sti
dec
pop
aam
shrb
pushf
sbb
push
mov
insb
mov
sbb
rcll
adc
pop
push
sbb
add
or
pop
call
xor
dec
sahf
adc
outsl
add
dec
pop
xchg
jo
jne
out
fmuls
fdivrl
sub
sub
pop
inc
xor
daa
scas
sahf
lret
shrb
shll
xorl
and
cmp
icebp
mov
out
push
sub
mov
fcomps
popf
in
mov
lds
addr16
negl
fdivr
mov
push
jo
ds
xchg
call
cmpsb
call
sbb
inc
push
hlt
mov
jmp
or
push
cmp
dec
rcll
mov
xor
jl
mov
inc
rcr
jg
dec
dec
and
jle
mov
lods
cli
sbb
push
call
fwait
sub
ja
add
xor
jg,pt
adc
fstpl
out
jge
push
ss
sub
adc
dec
imul
jg
out
pop
test
ror
loop
inc
cmc
sub
rorb
out
sahf
jo
lock
sbb
mov
ret
xchg
lahf
out
rcll
push
fldenv
enter
out
test
rcrb
gs
fucomip
fwait
pop
sub
jbe
pop
out
add
pop
xchg
xlat
jl
cmpb
dec
es
mov
js
mov
xchg
cs
xlat
push
insl
popf
mov
inc
jns
add
je
pop
cli
jb
xchg
dec
or
xchg
jb
hlt
lods
xchg
pop
inc
dec
pop
and
iret
inc
std
sti
xchg
les
mov
lds
adc
enter
mov
mov
in
movsl
jo
or
adc
sub
jns
enter
or
xor
xor
push
cmpsl
imul
dec
sub
mov
push
popf
or
dec
xchg
cmp
rolb
rorl
scas
xlat
mov
xor
sub
mov
mov
jmp
push
pop
inc
cmpl
jb
mov
cli
mov
xor
jl
push
punpcklbw
dec
sub
pushf
lret
cmp
ja
cmp
and
arpl
iret
inc
dec
or
add
sbb
jae
std
pusha
xchg
mov
sub
loop
push
call
pop
lock
mov
sbb
dec
sub
sbb
jmp
cs
adc
xor
imul
aad
cmc
or
in
fs
cli
xchg
jg
inc
mov
dec
cltd
int
mov
lret
arpl
jbe
mov
mov
mov
enter
mov
arpl
pusha
cltd
dec
xor
nop
mov
cmp
cmp
mov
iret
cltd
mov
pop
stos
rcrl
fists
mov
mov
mov
idivb
mov
mov
jmp
adc
cmp
dec
and
filds
cmp
out
inc
js
js
mov
mov
mov
stos
push
and
and
fdivrp
test
push
loopne
cli
cli
inc
mov
or
sub
pop
inc
call
sbbl
cmp
pop
inc
xor
add
imul
mov
xor
sub
lea
cmp
jbe
mov
mov
xor
add
imul
mov
xor
add
mov
lea
mov
jmp
jecxz
out
jge
sti
mov
pop
cmp
popw
jl
xor
jl
iret
mov
jmp
call
sahf
aam
fadd
pushf
dec
leave
leave
pop
inc
mov
cmp
jnp
pop
movsb
adc
add
rcrl
or
mov
ret
lret
pop
inc
jbe
ret
adc
aad
fimull
out
and
pop
gs
mov
and
cmp
xor
and
into
dec
xor
std
movb
test
loop
mov
fistpll
insb
out
jmp
dec
rep
addb
pop
sbb
mov
and
sub
cmp
push
add
call
mov
mov
jo
mov
mov
pop
cld
ret
loopne
fs
ret
out
and
pop
sub
cmpsb
pop
movsl
pop
std
xor
fsubl
lock
out
pop
bound
enter
in
ljmp
xor
mov
lretw
mov
mov
pop
dec
xchg
out
ja
jno
add
test
fwait
xchg
adc
sbb
push
add
push
inc
ss
insb
pop
mov
or
cld
test
mov
sbb
push
xor
fistl
push
loopne
sarb
sub
add
mov
mov
xor
add
imul
cmp
jbe
pop
pop
leave
ret
push
mov
push
adc
movl
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
pushl
push
pushl
call
jmp
movzbl
adc
mov
adc
jmp
shrl
sti
insl
fs
push
bound
bound
or
xor
xor
push
pop
jne
cmpsl
pusha
dec
and
dec
and
sbb
add
xchg
mov
pop
ret
or
mov
inc
loope
sahf
xchg
fldenv
jb
lcall
pop
sub
stos
into
les
push
and
test
cmp
fs
call
sbbb
popa
nop
gs
sub
mov
ljmp
cs
fldenv
jbe
dec
mov
dec
mov
lods
and
popf
ja
sbb
mov
mov
mov
jne
movsl
cwtl
nop
frstor
mov
cwtl
rorb
xchg
out
into
xchg
jb
xor
push
lret
cmp
or
addl
int
xchg
adc
jbe
enter
in
lds
subl
mov
jmp
shl
xchg
fs
jns
adc
jne
into
cmpsb
or
jl
bound
repnz
xor
push
push
jno
jbe
push
mov
jl
xor
rorl
sub
ret
or
jmp
movsl
inc
lds
push
ret
popa
idiv
mov
sbb
adc
and
sbb
movsl
pop
incl
repz
dec
or
loop
sub
int
inc
inc
ficoms
aad
xchg
adc
cwtl
leave
mov
mov
inc
push
sti
xchg
sbb
sbb
mov
cwtl
outsl
xchg
jae
test
jo
pop
ds
or
or
mov
push
jg
add
fiaddl
pop
xor
aaa
test
in
push
nop
hlt
push
int3
nop
sbb
mov
ljmp
jo
lcall
mov
shlb
lret
lret
sub
push
push
and
ljmp
add
aaa
jbe
add
jns
cmp
pop
insb
mov
fildl
aam
push
or
xorl
xor
add
subl
mov
mov
xor
push
addl
mov
mov
subl
add
xorl
mov
movl
cmpl
je
cmpl
jne
push
push
call
mov
dec
mov
jmp
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
pop
leave
ret
push
mov
mov
xor
mov
jmp
enter
inc
lea
mov
sub
lret
pop
mov
jl
jl
jl
pop
sub
shlb
lret
lahf
movsl
nop
jg
lcall
pop
cmp
aad
dec
add
sarb
dec
mov
jnp
add
mov
dec
out
inc
mov
jne
clc
cmc
inc
mov
mov
mov
jg
out
loope
js
fs
ja
test
or
mov
dec
jle
fsubr
ret
xchg
inc
fwait
pop
cmp
je
xor
mov
dec
sbb
lret
pop
cmpsl
lds
faddp
adc
lock
jno
xor
fsts
adc
movb
stc
or
outsb
push
jnp
push
shlb
enter
test
cli
cld
mov
pop
test
outsb
sbb
rcr
clc
repnz
es
sahf
movsl
out
nop
cmc
cmp
in
dec
addr16
jg
insl
jno
into
cmpsb
clc
mov
dec
adc
enter
sbb
pop
ret
push
mov
push
xor
xor
xor
or
sub
sub
movl
movzwl
adc
jmp
insl
je
xchg
jge
fs
mov
pop
adc
jl
sbb
jl
out
cmpsl
mov
cltd
push
adc
dec
push
pop
adc
push
orb
pop
int
xchg
lea
ja
stos
in
pop
adcl
cmp
pop
call
dec
fsubrl
xchg
adc
cmp
inc
dec
xchg
mov
or
outsl
popf
cmp
outsl
pusha
ret
mov
xchg
xlat
lret
mov
xchg
xor
mov
mov
add
mov
in
mov
daa
in
inc
jb
in
idivb
sbb
popa
lret
sbb
cmp
jno
xchg
jge
out
and
mov
int
sbbb
arpl
pop
add
js
cmp
movb
mov
add
jns
cltd
xor
arpl
scas
mov
dec
test
loope
and
cltd
or
jno
mov
dec
or
outsl
test
jnp
cmp
xor
or
push
popa
adc
mov
push
pop
fs
inc
jmp
push
cmpsb
mov
mov
or
mov
notl
jmp
xor
push
jp
fnstsw
mov
xor
sub
jl
dec
mov
inc
outsb
xchg
hlt
insb
push
push
jo
mov
aad
out
dec
push
fiaddl
jne
mov
jp
jo
jmp
push
fsubrl
std
or
inc
mov
xor
fldcw
jb
mov
dec
sub
insb
sub
arpl
push
xor
inc
jecxz
push
lock
and
rolb
out
mov
cld
jecxz
jmp
pop
data16
or
cvttps2pi
std
dec
or
cmovae
push
enter
xchg
aad
cmp
sbb
cli
and
mov
jmp
xor
xor
or
outsl
out
push
cmp
ret
imull
adc
cmc
pop
daa
sub
push
loopne
adc
pusha
loope
push
rcrl
push
push
sbb
mov
xor
mov
inc
mov
mov
cmp
and
cld
or
out
shll
mov
scas
lcall
or
outsb
js
push
subb
xor
add
orl
mov
neg
mov
andl
xor
add
inc
mov
cmpl
jne
pushl
push
call
cmpl
jb
mov
mov
mov
mov
mov
mov
mov
jmp
in
insl
push
jge
imul
mov
std
fsubrs
jl
jg
jl
and
outsl
idivl
fs
fdivs
pop
das
sub
jg
mov
sub
loop
loope
xchg
xorb
add
in
pop
repnz
push
inc
cmc
out
testl
sub
nop
mov
mov
mov
es
inc
xchg
popf
dec
mov
mov
dec
xor
test
mov
xchg
jecxz
lods
and
jo
hlt
sarl
jb
outsb
pop
jge
aad
mov
and
xchg
sub
in
out
add
ret
xor
pop
out
repnz
ret
add
adc
mov
mov
sub
sbb
and
mov
ffreep
std
jecxz,pn
lea
lret
dec
lock
xchg
push
jnp
inc
int3
jnp
pushf
movsb
clc
and
sbb
adc
mov
in
mov
xchg
push
shl
mov
cli
shl
ffree
mov
mov
mov
mov
mov
mov
test
jmp
pop
loope
sbb
lret
mov
enter
in
jl
sbb
jl
adc
mov
or
fadd
xchg
jo
rolb
js
or
jl
bound
das
int3
mov
aam
cmpsb
mov
dec
ja
mov
sarb
pop
pushf
add
push
sti
ja
loopne
jmp
mov
mov
cs
cmp
fnop
and
jle
shll
mov
outsb
pop
jnp
and
sti
out
xor
inc
sar
shrb
xchg
ds
stc
cmpl
mov
mov
imul
cli
push
out
jp
les
pop
stos
push
push
mov
jno
mov
jbe
add
cmc
adc
repnz
ret
leave
add
or
movb
or
frstor
add
or
dec
repnz
xchg
mov
fisttpll
dec
fmul
loope
cwtl
std
fcoml
dec
leave
fs
and
daa
ja
dec
adcb
scas
ds
mov
mov
jne
mov
xor
add
leave
ret
push
mov
sub
adcl
jmp
or
dec
or
dec
aad
aas
adc
cmpsl
nop
lods
faddl
jg
jl
xchg
sub
add
push
repz
lret
dec
inc
mov
addb
pushf
sbb
dec
sti
mov
pop
sub
cwtl
sbb
in
outsb
in
je
pushf
cmp
movsb
inc
xor
sahf
into
leave
subb
cli
ja
lods
adc
dec
push
jg
frstor
clc
adc
shl
into
mov
test
xchg
popf
inc
dec
ja
xor
mov
mov
cld
xchg
popa
xchg
ja
xchg
or
mov
pop
add
jnp
xchg
add
movsb
jmp
pop
xor
and
jl
inc
ret
mov
mov
mov
inc
leave
arpl
push
inc
out
ret
imull
in
jmp
xlat
xchg
push
loop
popa
jecxz
fistpll
xor
sahf
aad
imul
pusha
jl
pop
shll
imulb
push
pop
ror
push
sub
in
push
popa
jnp
fdivp
fsubs
bound
push
and
ficoms
lock
jmp
pusha
std
jne
add
mov
mov
subl
mov
neg
movl
adc
movl
mov
xorl
push
orl
push
adc
push
movl
cmpl
je
cmpl
jne
push
push
pushl
call
cmpl
jne
xor
xor
dec
mov
mov
dec
mov
jmp
andl
jmp
out
sub
sub
jmp
hlt
enter
and
jg
jl
outsb
add
aad
loop
pop
dec
popa
adc
addr16
and
xchg
push
jo
cmpsb
pushf
and
js
sub
add
mov
inc
mov
test
nop
pop
aaa
stos
lea
cmp
push
xchg
cmc
jbe
pop
fisttps
loop
fsubs
dec
lea
rol
stos
xor
mov
mov
pop
inc
mov
dec
mov
pop
push
rcrl
aad
add
xchg
cwtl
in
test
mov
inc
and
int3
out
adc
mov
subb
jnp
pop
or
cs
pusha
xor
loope
xchg
negb
cmp
jle
inc
or
mov
sub
dec
cmc
fwait
or
cld
stc
ljmp
jp
sub
shrb
cld
in
cmpsl
test
leave
imul
lret
pop
inc
fcomip
pop
aad
xchg
rcll
xchg
mov
xor
movzwl
xor
mov
jmp
icebp
popa
jno
loope
mov
add
stos
inc
fs
scas
and
jg
jl
dec
out
xchg
mov
subb
std
arpl
jnp
pop
ds
mov
enter
loop
and
test
xchg
xchg
scas
push
mov
in
dec
dec
mov
pop
fsubrs
mov
mov
fcmovne
daa
gs
jg
xchg
leave
cltd
sbb
mov
dec
loopne
inc
mov
mov
popf
jg
push
push
mov
or
mov
adc
cmp
lret
jge
xor
fisttpl
xor
dec
and
mov
mov
mov
ljmp
lcall
xchg
cmp
rcll
fdivl
mov
ljmp
repz
xor
out
push
pop
cmp
mov
push
add
cwtl
jb
jb
loope
or
cmp
xorb
mov
call
test
iret
and
xchg
loopne
xchg
call
dec
pop
scas
add
mov
movl
cmpl
je
cmpl
jne
push
call
xor
or
dec
mov
jmp
movl
movl
movl
movl
or
movl
andl
jmp
xor
xor
inc
mov
cmpl
jae
cmpl
jne
push
push
push
push
push
call
jmp
xor
mov
addl
xor
sbbl
add
mov
orl
movl
movb
or
mov
xor
add
sbbl
mov
decl
mov
xor
adcl
add
xorl
push
mov
xor
sbbl
add
xorl
push
andl
mov
inc
mov
cmpl
jne
push
push
pushl
pushl
call
cmpl
jne
xor
add
inc
mov
cmpl
jb
movzbl
xor
mov
negl
xor
add
orl
jmp
sarl
sarl
sub
mov
mov
jg
jl
pop
push
shrl
push
xor
addr16
pushf
ds
fsubl
repz
mov
xchg
test
lcall
mov
movsb
xchg
movsl
popa
push
push
outsl
sbb
or
pop
dec
fiaddl
inc
pop
bound
repnz
popf
sbb
add
dec
xchg
mov
jmp
ljmp
push
mov
imul
jge
orl
mov
push
aas
sbb
adc
lods
mulb
add
mov
sbb
leave
test
nop
mov
mov
xchg
mov
and
cmp
repz
rorl
adc
dec
imul
jne
mov
pop
mov
loop
jecxz
mov
xchg
aaa
push
push
mov
sub
jl
cmc
add
jp
xor
cmp
mov
pop
mov
rcll
lds
outsl
fisubrl
dec
cmp
jae
adc
in
xchg
push
sbb
sub
addl
push
orl
pushl
addl
jmp
push
repz
adc
cltd
pop
dec
and
jg
jl
sahf
inc
loop
stos
bound
pop
je
push
arpl
std
xchg
mov
repz
and
jecxz
sub
xchg
cmp
in
sub
adc
les
fdivrp
sub
pop
adc
push
mov
xor
out
fstps
inc
push
push
loopne
nop
scas
xchg
xchg
gs
daa
pop
lods
fsubrs
fdivrs
dec
and
test
lahf
or
out
mov
push
pop
popf
inc
and
mov
push
rcr
aam
scas
mov
outsb
xor
jne
sbb
data16
mov
xchg
sbb
fcoms
pop
cmp
mov
add
or
sub
inc
mov
dec
xchg
pusha
test
push
sti
push
dec
lds
mov
rorl
mov
push
and
mov
xchg
and
loope
adc
gs
xchg
jno
mov
jae
fwait
int
jne
jmp
xchg
pop
cmpsl
inc
adc
sub
addr16
jl
or
test
fisubl
andl
es
stos
or
aam
ds
pop
sarl
test
adc
into
xchg
or
and
pop
stos
fnsave
xor
orl
lahf
fidivl
jp
mov
fucomp
xor
jl
or
andb
xorb
loopne
xor
add
jnp
push
mov
inc
scas
shlb
into
fisubrl
insb
hlt
inc
aaa
ss
mov
or
and
cmp
orl
icebp
pop
mov
or
cs
cmpsl
and
mov
xchg
mov
mov
or
inc
sbb
lea
cld
cmp
pushf
add
mov
inc
call
rclb
mov
lds
jne
inc
xchg
stos
cld
xchg
int
ds
aas
fwait
mov
mov
sbb
jge
sti
adc
mov
push
imul
jmp
mov
loope
loopne
outsb
test
push
call
test
je
sbbl
lea
push
mov
xor
add
push
mov
jmp
dec
add
cmpl
fnsave
xchg
mov
into
pop
sub
push
jl
or
mov
scas
sar
insl
cmp
xchg
or
jg
adcl
and
out
shlb
shlb
shlb
cld
xchg
pop
cli
sbb
push
push
pop
push
sbb
cmp
js
jnp
dec
dec
push
push
divb
lods
sub
cs
add
cmp
sbb
adc
loope
nop
cmp
les
mov
scas
cmpsl
sbb
mov
xchg
mov
lret
dec
mov
cmc
ja
mov
bound
popa
icebp
jo
in
xchg
loope
mov
div
cli
jnp
and
decl
pop
mov
adc
lods
lock
push
xor
and
mov
test
mov
xorl
and
or
push
push
cmpb
sbb
mov
pushf
adc
lret
jae
clc
dec
cmp
into
mov
aad
in
mov
sbb
xor
pop
es
push
jmp
sub
jge
jge
fnstenv
loopne
jnp
jl
or
je
pop
sahf
dec
mov
sub
sub
and
xchg
adc
iret
data16
shlb
and
testl
ficoms
lock
test
push
lret
lret
pop
pop
loop
add
lods
aad
jmp
inc
adc
and
or
lea
mov
cmpsb
xor
daa
jno
std
fistl
push
pop
cmp
out
outsl
push
and
mov
mov
rorl
pop
fdivrp
xchg
push
ljmp
fs
pop
adc
dec
scas
adc
test
adc
push
dec
xor
in
mov
shlb
xor
mov
mov
mov
ss
js
mov
mov
push
clc
stc
aas
mov
les
int
cltd
pop
mov
lea
mov
adc
mov
lret
idiv
loop
sbb
mov
mov
jmp
shr
dec
pop
pop
jns
insl
adc
popf
pop
or
jl
or
or
fidivrs
xchg
push
call
sbb
cld
dec
mov
mov
nop
shlb
std
xor
add
loope
push
lret
mov
rolb
mov
sbb
jle
lds
push
fldl
push
shll
jb
add
mov
sub
xchg
rorl
sbb
lret
mov
repnz
test
shll
mov
cmp
push
gs
xchg
mov
mov
or
aam
adc
cmp
mov
or
adc
fistl
cmp
mov
fimuls
jae
and
test
inc
jmp
mov
xchg
outsb
pusha
and
jecxz
movsb
push
roll
stc
pop
sbb
sbb
mov
enter
fnstsw
sbb
jnp
popa
adc
cld
lock
incb
repz
xchg
adc
cmpsb
decl
clc
add
loopne
test
inc
call
xor
add
push
mov
xor
add
push
pushl
lea
push
pushl
pushl
call
test
je
lea
push
mov
xor
add
push
mov
add
push
mov
mov
pushl
jmp
xor
mov
and
shll
jl
or
mov
out
loopne
push
dec
fwait
mov
js
xor
add
push
sub
out
pop
jg
pusha
jne
in
mov
mov
xchg
or
xor
scas
into
sbb
idiv
mov
aaa
push
test
shrb
jns
xor
xchg
gs
adc
test
leave
pop
push
cmp
aaa
mov
push
or
jle
sub
mov
adc
and
mov
mov
push
xorb
mov
or
movsl
jne
negb
add
dec
dec
sub
jg
sahf
das
mov
je
ror
cli
decl
iret
pushf
pop
jnp
or
jge
sub
rolb
dec
pop
and
cmp
or
pop
gs
jge
test
rorl
mov
jo
neg
repz
fs
mov
xchg
mov
adc
aad
fxch
xor
xlat
jo
enter
push
mov
out
popa
movsl
decl
mov
sub
jmp
or
and
jnp
jnp
gs
push
and
push
mov
jl
jg
jl
rcrb
andl
paddusb
adc
inc
in
popf
inc
jl
mov
arpl
mov
push
fwait
aas
mov
sub
scas
scas
adc
or
out
leave
push
insb
lea
sub
call
daa
jne
xchg
or
aam
fmul
psrad
mov
jle
jae
or
inc
mov
movsl
and
cmpl
data16
adc
out
xlat
leave
xlat
mov
sub
ljmp
shlb
jb
int3
loope
daa
fistps
cli
sub
mov
ret
jg
pop
or
test
jns
rcll
fbstp
popa
cmp
hlt
xlat
out
or
jb
sbb
sbb
jo
test
aaa
sbb
shll
pusha
or
jmp
repnz
jle
mov
or
push
mov
inc
dec
loope
cli
add
std
cmp
dec
rolb
enter
add
xchg
out
std
push
gs
repz
ja
daa
cmp
jg
jl
repz
fcomi
add
daa
mov
sbb
mov
xor
and
and
cwtl
in
test
mov
lret
hlt
ds
call
pop
stos
adc
fldt
xor
cmpsb
aad
pop
rcll
push
call
sub
mov
sti
mov
mov
xchg
push
mov
jnp
les
lods
push
mul
or
scas
fstpt
sub
sbb
addr16
adc
and
daa
fsubs
pop
dec
jo
cld
mov
pusha
jge
cmp
test
ret
mov
je
daa
mov
fdivr
sbb
mov
inc
xor
cmp
sarl
fisubrl
jns
es
jmp
adc
xlat
int3
mov
nop
cmpsl
cmp
mov
lret
pop
subl
sbb
xchg
lea
mov
push
incb
std
into
fs
jle
call
iret
jmp
or
ret
hlt
mov
mov
mov
mov
xor
sub
mov
lea
incb
inc
push
pop
dec
xchg
decb
pushl
mov
mov
pushl
lea
jmp
scas
stos
fs
js
addr16
sub
dec
stc
xor
jl
or
inc
xor
jg
dec
xchg
icebp
dec
negl
inc
sbb
into
cs
dec
mov
out
loop
xlat
inc
std
dec
imul
roll
and
mov
mov
add
inc
fistl
cmc
pop
cmp
xchg
jnp
insb
enter
sub
enter
shr
addb
cmp
icebp
mov
mov
and
test
std
mov
and
fs
in
cmpsb
push
mov
xor
shlb
aaa
call
dec
dec
pop
jle
aaa
icebp
leave
insb
push
dec
fwait
jg
mov
sub
icebp
xchg
jg
std
adc
lock
sub
mov
or
aas
jo
nop
inc
sub
or
sub
insb
incl
or
cli
or
cwtl
daa
lock
in
dec
sbb
inc
and
lret
shll
mov
inc
add
scas
mov
movsb
pushl
lea
pushl
lea
pushl
lea
pushl
xchg
inc
inc
jmp
sbb
mov
insl
lods
test
cmp
cmp
jl
jg
jl
or
jmp
sbb
push
das
pop
push
popf
mov
rol
mov
leave
sbb
mov
test
jns
add
push
push
add
dec
shll
sbb
ficoms
xchg
cmp
flds
mov
lret
xchg
pop
in
cld
push
mov
push
inc
pop
mov
cmp
lods
flds
mov
cli
jo
sub
cltd
mov
sbb
cmp
rolb
nop
push
jp
daa
pop
das
cmpsl
pop
popl
push
mov
pushf
ficompl
sub
push
or
aas
loopne
mov
mov
lds
loop
imul
sar
sub
push
mov
push
aad
mov
pop
sub
sahf
pushf
notrack
push
test
sti
ja
scas
adc
mov
adc
jmp
test
test
dec
mov
in
sub
push
pop
call
mov
mov
jmp
gs
add
jge
jecxz
stos
insb
fsubrl
and
sarb
jl
or
gs
stc
inc
imul
out
xor
sbb
pop
lods
sbb
fmulp
cld
and
adc
push
popf
nop
ja
jle
dec
gs
pop
dec
lcall
cwtl
jo
lea
dec
adc
dec
enter
push
subl
mov
test
std
or
inc
add
cs
addb
cmpsb
or
sbb
mov
adc
or
sbb
out
mov
stos
mov
and
fisttpl
and
dec
out
addr16
push
jl
into
pop
fidivs
fildl
inc
aaa
jmp
popf
lret
ja
adc
nop
sub
mov
enter
scas
pop
pop
int
outsl
lcall
mov
xchg
popa
jmp
mov
adc
push
ja
pop
stos
jl
sub
sti
scas
xlat
arpl
andb
push
sti
subl
dec
mov
add
pop
pop
pop
leave
ret
push
mov
sub
xor
movl
movl
orl
jmp
push
repz
pop
stos
lea
nop
push
loope
xor
jecxz
jl
push
jg
jl
test
jge
in
scas
arpl
or
bound
add
roll
inc
push
and
xchg
es
or
sahf
push
cmp
stos
sub
out
adc
ljmp
es
enter
pop
pop
fwait
ja
fbld
imul
and
mov
cwtl
test
cmp
cmp
mov
mov
movsl
adc
addl
xchg
scas
subl
rcll
mov
xor
lods
aad
outsl
pop
fwait
and
or
scas
and
sub
inc
xor
add
push
gs
jno
int
imul
adc
adc
dec
lods
sub
push
pushf
lret
cmp
rorl
sub
pusha
repz
and
mov
orb
mov
sub
xor
mov
fadd
lods
bound
dec
sbb
xor
xchg
inc
mov
mov
sub
aad
aas
inc
mov
andl
mov
inc
mov
cmpl
jne
push
call
cmpl
jb
orl
mov
xorl
lea
and
jmp
divl
test
pop
jnp
js
ds
mov
lea
jl
push
jg
jl
aas
dec
loopne
sbb
xlat
mov
jecxz
xchg
lods
push
call
ljmp
cmpsb
adc
mov
jnp
xchg
loopne
jg
pop
daa
and
mulb
add
jmp
sub
int
jo
in
divl
cld
scas
pop
mov
adc
push
cmc
adc
adc
sub
outsl
loopne
sbb
iret
xchg
push
scas
clc
xchg
notl
mov
dec
imul
adc
jmp
inc
xchg
out
sub
xchg
pop
dec
pusha
inc
int3
mov
or
imul
mov
mov
lahf
sub
mov
jmp
mov
sub
mov
subl
push
dec
scas
adc
nop
mov
cmp
inc
insl
imul
mov
ljmp
mov
mov
mov
movsb
pop
test
sti
aaa
test
cmp
aad
lcall
pop
movsl
movb
pop
inc
popf
pop
fildll
sub
xorl
and
pop
rorl
add
add
flds
xor
into
adc
jg
jl
xchg
cmp
popf
enter
cmp
gs
mov
mov
cs
mov
inc
mov
xchg
xchg
std
jbe
stc
mov
xchg
pop
aad
or
or
mov
fbld
out
sub
stos
or
dec
mov
sub
push
orl
jge
test
hlt
mov
inc
or
in
mov
es
les
pop
scas
fadd
dec
mov
pusha
push
fwait
test
jae
aam
mov
xchg
or
mov
neg
xchg
add
mov
repz
jns
jb
and
pop
pop
dec
adc
sub
div
dec
jge
mov
icebp
push
sub
sub
out
xchg
xchg
push
shrb
xchg
cwtl
flds
call
movsl
call
mov
subb
test
movsl
data16
add
hlt
lea
cmpsl
pop
add
xchg
lahf
ret
inc
and
stos
imul
or
or
mov
sbb
push
lea
mov
mov
adc
push
push
mov
orl
mov
mov
mov
and
mov
xor
andl
xor
or
inc
mov
cmpl
jne
push
call
cmpl
jb
mov
adcl
jmp
adc
in
data16
mov
xchg
cmpsl
sub
jg
jl
out
xchg
xlat
mov
in
push
xchg
sbb
arpl
jmp
fbstp
jge
fwait
xor
or
pusha
bound
dec
shlb
adc
pop
add
lods
fistpll
outsl
add
jle
gs
loop
fwait
test
sbb
repz
pop
aad
xor
adc
popf
lcall
mov
addl
ret
and
jbe
mov
ljmp
xchg
xor
xchg
dec
cmp
lds
cmp
push
mov
pop
clc
lods
andb
insb
mov
mov
test
jns
xchg
or
inc
cld
pop
sub
and
lcall
xor
jge
insl
push
gs
fcomi
cmp
or
daa
xchg
lret
fbstp
ja
int
push
mov
sub
add
mov
mov
mov
dec
loop
or
ret
cwtl
ret
jmp
cwtl
js
fld
add
sbb
rolb
add
push
add
add
andl
add
movl
jmp
ss
call
pop
fcom
xor
xor
jl
jg
jl
add
pop
sbb
cmp
pmullw
jae
cli
mov
movsl
sahf
pop
or
lcall
fmuls
in
ja
nop
xchg
in
pop
pop
pop
lea
rorb
in
mov
mov
or
daa
mov
fsubrp
pushf
nop
shrb
cmp
push
add
cmp
and
subl
cmp
pop
inc
xchg
rcr
sbb
test
mov
pop
out
sub
inc
dec
adc
nop
cmp
imul
int3
jnp
out
psllq
and
dec
fstps
sbb
xchg
push
inc
pushf
and
clc
aad
scas
push
pop
aas
or
add
std
mov
pushf
push
cmp
loop
call
pusha
popa
scas
cltd
mov
inc
fst
push
mov
xchg
cltd
sub
push
add
inc
add
jl
jmp
mov
je
test
test
ljmp
icebp
jge
test
mov
inc
add
aam
repz
mov
movl
movl
cmp
je
mov
and
movl
andl
mov
inc
mov
cmpl
jne
pushl
push
push
pushl
push
push
pushl
call
cmpl
jb
lea
mov
xor
xor
mov
sub
xor
jmp
lea
mov
std
inc
nop
fildl
xlat
gs
jl
pop
or
out
cmpsb
push
xchg
xchg
jge
mov
inc
inc
test
ficompl
inc
pop
jbe
int3
or
add
push
or
sbb
sub
cmp
xchg
mov
xchg
out
outsb
popf
lahf
fldt
ret
mov
xchg
int3
outsl
or
mov
leave
aaa
pop
cli
mov
fnstcw
adc
icebp
lods
aad
inc
xor
nop
fsubp
xorb
jp
mov
nop
ljmp
cmpsb
pop
lahf
cmp
xor
icebp
or
ret
mov
lds
or
xchg
rcll
pushf
or
xchg
out
sub
je
pop
sahf
ret
inc
mov
push
cmp
push
mov
test
mov
aaa
sar
imul
xor
push
jg
xor
pop
test
xor
cmp
sbb
jne
pop
jmp
adc
ret
fisubrs
adc
and
jbe
loope
xchg
push
xchg
sub
xchg
jns
add
add
add
add
je
cmpl
jne
pushl
pushl
call
cmpl
jne
mov
dec
mov
xor
add
dec
mov
jmp
mov
imul
mov
mov
cmp
je
mov
jmp
fsubs
jp
jp
mov
xchg
fcomip
push
shrl
getsec
jl
push
jg
jl
ret
daa
xlat
scas
ret
enter
sbb
mov
lahf
pushl
fists
pushf
hlt
ror
add
addl
call
mov
adc
mov
sahf
aam
push
pop
xlat
push
imulb
jo
mov
sbb
out
push
push
adc
xchg
popf
sbb
stos
cmpsl
sub
adc
test
sub
dec
add
js
aas
bound
sub
fs
cmpl
outsb
je
mov
ja
loopne
sarb
jle
mov
mov
loopne
ret
popf
fsubs
jnp
xchg
shlb
mov
js
roll
nop
or
or
pop
xor
inc
adc
fistpl
or
mov
cmp
jo
out
mull
push
push
add
ficoms
shll
ret
cmc
aam
jae
inc
dec
or
mov
bound
xor
pop
pop
push
inc
into
mov
or
orl
mov
xor
add
pop
pop
pop
leave
ret
mov
add
cmp
je
mov
andl
jmp
jmp
jnp
lds
cmp
adc
sub
jl
push
jg
jl
stos
je
pusha
inc
cmp
mov
cmc
clc
pop
dec
sbb
push
adc
xchg
aas
fsubs
sbb
icebp
jbe
mov
pop
inc
dec
iret
jbe
mov
cmp
orl
xlat
mov
inc
xlat
cmp
movsb
sbb
cli
xorl
pusha
test
scas
pop
dec
mov
addl
pushf
pop
ds
xchg
into
repnz
ljmp
cltd
loop
jp
daa
xchg
xchg
aam
inc
inc
cmp
stos
cmpsb
fstl
icebp
push
imul
push
cwtl
xor
push
mov
cli
shrd
fsts
push
fisttps
jb
mov
imul
imul
mov
mov
int
xchg
in
xchg
and
jno
ss
test
push
cmp
pop
pushf
test
fistps
aam
mov
scas
fnclex
mov
aas
adc
mov
popa
cld
jg
xorl
xor
inc
and
loopne
popf
sar
pop
cmp
sarb
inc
hlt
mov
or
cmp
je
mov
jmp
push
add
jge
jnp
and
movsb
xor
jl
push
jg
jl
fwait
cmp
nop
popf
jne
sub
das
mov
ss
jecxz
pop
cmp
mov
mov
push
dec
out
daa
pop
and
dec
push
repnz
dec
ljmp
add
cmp
enter
or
cmp
test
adc
shrl
jae
aas
fwait
out
fstps
sub
add
popl
push
cmp
sub
movsl
cmp
add
xchg
test
js
stc
cmp
lods
dec
out
scas
shll
inc
push
ss
xchg
stos
inc
or
push
and
pop
and
push
mov
sbb
mov
aas
hlt
or
adc
pop
push
xchg
sbb
popl
xchg
in
inc
and
xchg
mov
adc
mov
sti
mov
dec
loopne
xchg
dec
pop
in
cwtl
push
pop
fimuls
popf
and
push
dec
fwait
add
lcall
cmp
test
repz
jbe
cltd
xchg
fbstp
sbb
push
es
mov
mov
mov
mov
xor
mov
add
cmp
je
mov
xor
jmp
pop
fst
jge
out
jnp
inc
sub
enter
jg
jl
xchg
notl
shr
mov
mov
scas
insl
insl
mov
adc
mov
sti
repnz
leave
scas
ds
push
pop
sbb
mov
jne
xchg
pusha
add
xor
cli
push
lret
outsl
sub
movsl
pop
addb
aad
cmp
cwtl
xchg
jp
or
jno
dec
sbb
in
jge
push
int3
outsl
xor
jb
lea
das
mov
xchg
call
push
aad
int
cld
sti
scas
xor
and
lret
mov
into
jmp
shll
sub
jp
ror
cmpsl
mov
mov
push
inc
call
jbe
cmp
xor
adc
imul
xchg
push
and
paddd
xor
sub
adc
mov
in
xor
xor
cmc
and
jno
scas
repz
lea
jae
daa
cmp
xor
push
test
test
lcall
sbb
sbb
add
mov
mov
mov
mov
xor
add
movzwl
mov
xor
lea
add
mov
mov
mov
xor
add
imul
sub
mov
jmp
mov
mov
xor
cmp
je
mov
addl
jmp
mov
cmp
je
mov
jmp
push
mov
push
xor
push
movl
sub
movl
xor
or
sbb
mov
mov
decl
push
addl
mov
xor
mov
xor
adcl
xor
andl
mov
inc
mov
cmpl
jne
push
call
cmpl
jb
mov
add
jmp
xchg
and
and
out
mov
jno
cld
push
lret
jl
mov
pop
sub
cmp
mov
jg
cmpsl
and
loop
sub
pop
clc
test
jnp
cmp
sub
jmp
mov
lret
sbb
or
jl
enter
jae
cmp
add
jle
adc
jbe
or
mov
mov
out
mov
jp
out
add
lods
sub
jl
rcll
pop
pusha
in
ds
adc
adc
js
jge
sbb
dec
test
sub
dec
out
lea
rorl
mov
movl
cmp
jne
movl
cmpl
je
cmpl
jne
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
mov
xor
xor
add
add
imul
jmp
mov
mov
mov
mov
mov
xor
xor
jmp
mov
jns
std
ficomps
jo
cmp
jae
jl
mov
stos
int
mov
xchg
and
and
xor
mov
std
cmp
imul
xor
or
and
in
cmpsb
jp
mov
add
push
stos
into
shr
jle
add
ret
mov
pop
push
fdivrl
sbb
negl
inc
cmp
push
cmp
arpl
cs
pop
cltd
mov
or
mov
sbb
or
sub
dec
pop
fmulp
insb
aam
stos
xchg
gs
push
push
pop
shrl
jne
addb
add
imul
mov
cmp
mov
je
xor
add
mov
imul
add
mov
mov
pop
leave
ret
push
mov
sub
push
xorl
call
adcl
test
movl
je
orl
xor
jmp
subl
push
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
jmp
orl
mov
movl
push
push
push
call
movl
cmp
je
orl
push
addl
push
adcl
push
adcl
push
sbbl
push
push
call
jmp
or
mov
and
mov
sub
movl
lea
adc
mov
add
lea
mov
movl
cmpl
je
cmpl
jne
push
call
cmpl
jne
mov
dec
mov
xor
xor
dec
mov
jmp
sbb
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
push
call
jmp
movzwl
sbb
mov
mov
xor
mov
movl
mov
andl
xor
add
inc
mov
cmpl
jne
push
push
push
call
cmpl
jb
andl
xor
add
inc
mov
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
orl
push
movzbl
sub
mov
mov
movl
xor
subl
push
movl
cmpl
je
cmpl
jne
push
push
pushl
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
andl
mov
inc
mov
cmpl
jne
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
sbbl
add
mov
movzbl
mov
cmp
movl
mov
movl
je
neg
mov
xor
add
imul
mov
jmp
xor
xor
add
andl
mov
inc
mov
cmpl
jne
push
push
pushl
push
call
cmpl
jb
mov
mov
xor
inc
add
movzbl
sub
mov
mov
mov
orl
mov
sbbl
xor
sbbl
add
movl
cmp
jne
mov
sbb
mov
xor
add
mov
sub
add
mov
mov
mov
andl
mov
inc
mov
cmpl
jne
push
pushl
pushl
call
cmpl
jb
movl
cmpl
je
cmpl
jne
pushl
call
cmpl
jne
xor
xor
dec
mov
mov
dec
mov
jmp
andl
jmp
xor
xor
inc
mov
cmpl
jae
cmpl
jne
pushl
call
cmpl
jne
xor
or
inc
mov
jmp
xor
mov
mov
orl
mov
mov
xor
xor
dec
add
sbb
mov
add
lea
dec
mov
andl
jmp
xor
or
inc
mov
cmpl
jae
cmpl
jne
push
push
pushl
push
call
cmpl
jne
mov
inc
mov
jmp
mov
and
mov
adc
mov
sub
xor
movl
cmpl
je
cmpl
jne
pushl
pushl
pushl
pushl
pushl
call
cmpl
jne
xor
xor
dec
mov
xor
add
dec
mov
jmp
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
jmp
movzwl
and
add
adcl
mov
mov
lea
or
mov
add
mov
sub
mov
xor
adc
add
andl
mov
inc
mov
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
adc
mov
subl
mov
sbb
movl
xor
mov
xor
mov
movzwl
xor
add
movl
mov
sub
mov
xor
mov
andl
mov
inc
mov
cmpl
jne
push
push
push
push
pushl
pushl
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
mov
xor
add
movl
cmp
movl
jne
movzbl
adc
mov
mov
mov
orl
xor
orl
add
movl
cmp
jne
dec
mov
sbbl
mov
adc
xor
xorl
add
movzwl
sbb
mov
dec
mov
mov
sbb
xor
adc
mov
sbbl
sub
add
movl
cmpl
je
cmpl
jne
pushl
push
pushl
pushl
push
push
call
cmpl
jne
mov
dec
mov
xor
or
dec
mov
jmp
mov
mov
mov
movzwl
add
mov
mov
mov
xor
lea
xor
sub
mov
movzwl
cmp
mov
movzwl
jg
xor
sub
sub
mov
jmp
xor
lea
mov
mov
mov
cmp
je
mov
movl
jmp
mov
cmp
jne
mov
movl
mov
mov
mov
mov
mov
mov
movl
cmp
jne
mov
mov
xor
mov
add
mov
movzwl
not
and
mov
mov
jmp
xorl
mov
pushl
call
test
je
jmp
mov
cmp
jne
mov
movl
jmp
mov
cmp
jne
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
lea
add
mov
mov
mov
mov
mov
xor
add
mov
mov
mov
xor
add
cmp
je
mov
mov
add
mov
mov
mov
mov
mov
mov
add
xor
cmp
je
mov
mov
xor
add
mov
jmp
xorl
jmp
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
movl
cmp
jne
mov
mov
xor
mov
add
mov
movzwl
not
and
mov
mov
jmp
xorl
mov
pushl
call
test
je
jmp
mov
cmp
jne
mov
movl
mov
mov
mov
mov
mov
mov
movl
cmp
jne
mov
mov
xor
mov
add
mov
movzwl
not
and
mov
mov
jmp
xorl
mov
pushl
call
test
je
mov
cmp
je
mov
mov
mov
mov
mov
mov
mov
mov
mov
movl
mov
movl
mov
xor
add
jmp
mov
xor
lea
push
mov
xor
lea
push
mov
pushl
call
mov
xor
lea
mov
mov
xor
xor
add
mov
xor
lea
cmp
jbe
mov
mov
mov
mov
mov
mov
sub
xor
mov
mov
cmp
je
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
pushl
mov
pushl
add
mov
mov
pushl
call
mov
mov
mov
jmp
mov
mov
xor
add
cmp
jne
mov
xor
add
mov
mov
xor
add
mov
mov
mov
mov
mov
mov
xor
add
mov
mov
mov
mov
mov
mov
mov
movl
mov
xor
add
mov
mov
mov
mov
mov
mov
push
pop
sub
add
movl
mov
movl
mov
mov
mov
mov
mov
xor
add
mov
lea
mov
mov
xor
add
mov
lea
push
mov
xor
add
push
mov
push
pushl
call
xor
mov
sub
push
mov
add
push
call
inc
cmp
jb
mov
call
lea
mov
mov
mov
pushl
lea
push
call
mov
push
add
push
lea
push
call
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
add
mov
sub
mov
addl
xor
andl
mov
inc
mov
cmpl
jne
pushl
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
add
movzwl
sub
mov
movb
lea
mov
and
jmp
mov
icebp
test
stos
mov
cmp
daa
jg
jl
jno
sub
cwtl
repnz
call
cwtl
mov
and
xor
pusha
dec
pop
xor
in
jo
inc
sti
cs
mov
into
mov
ret
adc
pushf
int3
aaa
outsl
mov
pop
enter
mov
mov
adc
ja
daa
adc
pop
movsl
jne
idivl
dec
cld
in
sbb
test
inc
xor
add
sbb
xchg
in
fcmovnu
cmpsl
xor
scas
movsl
mov
xchg
jecxz
push
mov
jnp
pop
inc
fcoms
fs
add
dec
sub
jecxz
ds
adc
jae
or
dec
adc
cwtl
repnz
cli
xor
aas
cmc
test
sbb
xchg
inc
pop
rolb
lea
cwtl
icebp
mov
insb
imul
jo,pt
lods
roll
inc
jl
int
rorl
sbb
mov
mov
mov
fisubrs
inc
cs
fs
iret
mov
and
nop
imul
cmp
lock
popa
fwait
push
dec
cmp
push
mov
xor
push
mov
mov
cmp
inc
incl
add
or
add
in
inc
add
jnp
add
sub
movl
mov
sbbl
movl
movl
or
mov
andl
mov
inc
mov
cmpl
jne
pushl
push
push
push
call
cmpl
jb
xor
mov
push
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
pushl
push
call
jmp
xor
mov
add
jmp
movl
mov
movl
mov
inc
movl
cmp
jb
mov
xorl
mov
addl
jmp
cmp
bound
push
pop
jmp
adc
lds
dec
mov
jl
daa
jg
jl
mov
leave
or
or
xor
mov
jle
or
adc
pop
cwtl
lods
fstps
jae
lods
pop
loope
dec
andb
testb
fistpl
adc
sbb
andl
ljmp
out
jne
das
test
out
cmp
push
push
xchg
shlb
imul
mov
sbb
pop
cmp
push
cmc
stos
mov
adc
js
pop
mov
or
rcrl
inc
mov
in
sti
xchg
mov
bound
insl
xor
inc
jge
imul
xchg
addr16
test
imulb
or
xchg
outsl
cwtl
jnp
adc
and
loop
xchg
loop
push
or
jns
mov
scas
out
popf
jne
mov
mov
lea
cmp
js
in
sub
jle
dec
mov
fstl
jmp
outsl
mov
fdivl
gs
insl
cmc
mov
fs
mov
cwtl
inc
jge
push
xchg
sub
js
roll
movl
cmp
movl
je
addl
push
andl
mov
inc
mov
cmpl
jne
call
cmpl
jne
mov
inc
mov
cmpl
jb
push
jmp
push
ss
std
push
jge
pop
add
or
iret
jl
daa
jg
jl
sbb
repz
loop
push
pop
cmpsb
hlt
cmp
imul
sbb
jmpw
cmp
addb
fcmovbe
sub
push
push
or
push
into
push
sub
scas
cmpsl
imul
repnz
pushl
mov
xor
clc
neg
jmp
stc
call
hlt
mov
pop
mov
sbb
adc
cmp
aas
mov
loop
rorb
rorl
in
cmp
les
adc
icebp
mov
test
testb
jno
push
and
mov
mov
stos
jae
aad
pop
imul
mov
std
push
scas
rorl
pop
es
int
pop
negb
das
cld
add
xor
xchg
das
pop
imul
imul
insl
push
mov
and
repz
fcmovnbe
ret
daa
ficoms
lret
fldcw
pop
mov
in
xchg
repnz
sub
lods
push
pop
lcall
add
mov
adc
jmp
mov
xor
mov
add
movzwl
mov
mov
movzwl
xor
add
mov
mov
mov
inc
cmp
jne
pop
pop
mov
mov
xor
add
mov
mov
xor
add
mov
mov
mov
mov
cmp
je
mov
mov
mov
cmp
jne
mov
mov
movsbl
xor
add
cmp
je
jmp
add
clc
pop
clc
sbb
sti
insl
sbb
loope
adc
jl
jg
jl
push
sarb
sbb
jns
pushf
xchg
fisttpll
push
fsubs
lret
mov
pop
pop
fisttpl
in
mov
mov
pop
push
or
mov
mov
lret
in
fnstcw
jo
pop
outsb
mov
pusha
cmp
push
mov
scas
xchg
pop
pop
aas
aad
mov
xor
lods
test
rcll
sub
movsl
xlat
fcmovnu
fdivs
or
hlt
xchg
fstl
out
xchg
stos
ficoms
int3
mov
inc
lock
cmpsl
aas
sub
push
adc
jns
movsb
into
sub
fidivl
or
cmpsl
js
xchg
xchg
fsubrl
cmp
sarb
xchg
jecxz
nop
cmc
cwtl
or
negl
cltd
xor
aad
jecxz
push
push
mov
dec
dec
outsl
in
shl
bound
dec
sbb
mov
lcall
adc
jle
repnz
lds
sbb
push
in
pop
imull
lock
push
pop
imul
adc
mov
xlat
movl
lea
mov
mov
addl
mov
mov
xor
lea
mov
incl
jmp
mov
xor
mov
add
mov
pop
leave
ret
push
mov
push
movl
sub
mov
jmp
push
xchg
fs
fs
data16
pop
inc
add
sarl
jl
mov
mov
rcll
adc
inc
pop
mov
xor
shl
lret
ret
lods
in
adc
and
ret
jp
cmp
inc
loop
mov
ret
jns
lcall
repnz
shl
dec
mov
stc
add
out
fcomp
add
ret
bound
nop
je
sti
in
fistpll
xor
adc
scas
jb
ljmp
movsl
mov
mov
stos
adc
enter
ret
mov
push
pop
movsb
push
mov
popf
sbb
movsl
push
fcomp
sub
sbb
addb
push
cmp
mov
push
cmp
mov
sbb
pop
gs
jge
mov
aam
adc
outsb
jae
cmp
pop
cmp
push
xchg
mov
stos
jo
adc
rclb
pop
sbb
rcr
push
xchg
push
push
pop
popa
clc
insl
popa
rcrl
cmp
xchg
cmp
mov
dec
test
fwait
cmp
mov
sub
lret
repnz
out
or
sti
xor
loope
in
mov
cmc
push
push
aas
mov
mull
add
add
cmpsb
inc
add
add
add
bound
arpl
cltd
jp
fldenv
mov
jl
lret
jl
xchg
jmp
mov
push
in
add
int3
mov
loop
rcll
fcoml
pushf
jae
fidivrs
or
sub
push
inc
sbb
sbb
pop
scas
mov
scas
jo
pop
xchg
xlat
pushl
loope
xchg
pop
in
int
fwait
cmp
or
js
inc
rcll
les
call
leave
jo
lds
fs
jle
sub
scas
jp
scas
jb
mov
sbb
sbb
push
inc
sub
in
dec
push
mov
lods
pop
rcll
and
test
push
and
cmc
pop
push
adc
lret
sbb
addr16
pop
push
and
repnz
sarb
aam
mov
test
repz
clc
pop
fildll
fisubrl
dec
sahf
jmp
fdivr
push
xor
and
xor
and
lea
sub
ss
push
hlt
and
dec
mov
imul
shrl
shll
lock
ja
xchg
xchg
xchg
dec
mov
aad
or
mov
loope
out
pushf
dec
mov
cmc
aam
or
lea
adc
sbb
add
sbb
lahf
cmp
movl
jne
or
mov
mov
adcl
add
mov
xor
or
sub
and
mov
movl
cmpl
je
cmpl
jne
pushl
pushl
pushl
push
push
pushl
call
mov
dec
mov
jmp
mov
mov
xor
push
mov
mov
add
cmp
jmp
mov
mov
test
cmpps
jl
inc
subl
push
xorl
mov
imul
jno
adc
push
and
cmc
cmpsl
daa
xchg
xchg
sbb
adc
fs
sahf
lret
outsb
aas
in
sar
push
cmp
das
mov
imul
aas
push
idivl
dec
test
mov
enter
or
scas
sbb
lret
shll
cmp
push
dec
mov
nop
out
jae
push
ss
xor
pop
mov
jbe
mov
ret
xchg
mov
pop
mov
incl
cwtl
pop
aaa
mov
inc
lret
sub
mov
movsb
xor
leave
or
fists
cwtl
stos
jnp
in
inc
in
sbb
pop
popfw
pusha
popa
fimuls
adc
pop
cmp
lcall
cltd
lahf
test
imull
push
mov
ret
in
iret
sub
xor
or
mov
sbb
aad
inc
push
fistps
push
xor
outsb
add
push
inc
jno
mov
mov
adc
inc
mov
inc
mov
je
test
hlt
dec
xor
xchg
inc
and
mov
add
push
das
pusha
gs
pop
je
mov
jmp
jmp
xchg
test
loopne
bound
add
push
fs
lds
jg
jl
fninit
ror
js
mov
std
jae
jne
shr
or
xchg
ja
je
notl
bound
jbe
or
jp
add
dec
xchg
adc
jns
pop
das
aam
notb
pop
sahf
cmpsl
js
mov
mulb
push
pop
dec
loop
and
inc
loopne
pop
or
dec
or
xor
sub
int
jg
insb
pop
fiadds
sub
jle
xor
push
int
cmp
outsb
lcall
mov
fcomps
sbb
xchg
cmp
lock
jns
mov
data16
in
mov
insb
insb
rol
push
int
int3
jnp
or
push
lret
mov
and
sub
out
ret
xchg
lret
pop
inc
mov
cmp
pop
push
hlt
adc
jle
sbb
cmpsl
push
xor
lret
insb
call
in
in
rcrl
jne
in
fsubrs
lret
aaa
mov
cmp
out
or
outsl
pop
dec
lds
rcll
mov
xchg
ret
xor
xchg
loop
lret
outsb
fcoml
pop
push
mov
loopne
add
ds
mov
jmp
aam
rolb
pop
fs
jge
ficomps
sti
xchg
stos
les
jg
jl
ret
movsb
push
mov
pusha
xorl
fnstenv
imul
dec
dec
shll
mov
pop
mov
cmpb
inc
cld
sub
xchg
pop
mov
testl
jo
stc
call
hlt
daa
stc
push
das
xchg
decb
pop
daa
adc
movsl
cmp
and
test
fwait
arpl
push
out
push
adc
jne
mov
adc
movsb
xchg
in
inc
jmp
in
into
push
cli
adc
fwait
daa
notb
test
mov
or
mov
dec
xchg
cmpsb
ja
mov
scas
cltd
or
leave
xchg
std
testl
or
ja
sbb
sbb
xor
stos
inc
jne
and
ret
in
push
push
pop
cmpb
subb
sbb
jle
cmpsb
mov
push
ret
leave
jns
cmp
les
ret
shl
push
es
mov
inc
out
lock
push
adc
fists
cmp
and
sbb
jno
or
mov
out
xor
fiaddl
pop
mov
mov
add
jmp
mov
xor
add
leave
ret
dec
push
mov
mov
or
dec
add
add
add
movl
xor
hlt
clc
lret
enter
mov
test
pushf
enter
movl
inc
inc
cld
xor
or
mov
call
pop
mov
dec
mov
pushl
or
ljmp
dec
loopne
rorb
add
mov
hlt
add
enter
dec
add
mov
orl
xor
lret
enter
mov
lea
push
mov
fs
decl
push
and
pop
inc
mov
push
pop
cld
dec
lea
mov
add
movl
decl
xor
cld
dec
jne
lea
push
mov
or
add
sub
add
rolb
inc
add
add
mov
incl
lea
call
add
jne
decl
dec
add
xchg
loopne
inc
incl
mov
xor
add
enter
mov
hlt
add
mov
add
add
incl
sbb
jne
mov
mov
movl
incl
rorl
test
inc
aas
inc
lea
pushl
mov
mov
out
cld
call
fisttps
jmp
out
incl
xlat
lea
inc
ljmp
incl
aaa
add
pop
movl
ffreep
aas
add
mov
incl
or
mov
xchg
roll
mov
cmp
dec
lds
add
adcb
add
add
mov
cld
push
decl
push
mov
call
mov
add
test
call
jge
mov
fcom
add
mov
add
add
imul
push
fisttps
test
aam
lret
add
rcl
movl
jl
test
jmp
incl
loope
aam
test
out
mov
mov
add
call
lret
cld
incl
out
xor
mov
cld
jl
mov
add
mov
decl
add
inc
xor
inc
add
mov
mov
inc
sub
add
rolb
jne
xor
incl
call
mov
call
xor
push
adc
loopne
ret
loopne
xorl
cmp
bswap
rolb
jmp
mov
add
cld
jne
xor
movl
inc
add
mov
test
add
incl
jmp
faddl
jge
adc
mov
sahf
mov
lea
xor
call
call
jne
xor
add
pushl
call
int3
incl
mov
xor
add
xchg
in
add
add
inc
add
mov
mov
or
inc
test
je
mov
xor
push
or
inc
in
mov
mov
fmul
add
mov
cld
loopne
inc
push
cmp
movaps
cld
fadds
jne
push
in
jne
lea
xor
jmp
mov
xor
adcl
rclb
inc
lock
inc
xchg
ud0
incl
jl
add
mov
inc
lret
inc
iret
jb
mov
enter
xor
mov
pushf
lea
add
inc
mov
xor
add
mov
fmuls
xor
mov
aad
pushf
xor
mov
clc
enter
mov
test
clc
incl
xor
test
test
ds
pushf
inc
mov
outsl
push
add
mov
sarb
adc
dec
adc
add
jmp
jb
add
xor
xor
add
clc
enter
pop
mov
push
push
xor
xor
add
add
lret
repnz
cli
fdivr
test
dec
inc
xor
add
mov
mov
clc
jne
mov
into
into
scas
dec
mov
sub
cmp
mov
mov
mov
add
xor
xor
rdtsc
lret
mov
inc
add
mov
lods
test
xor
mov
lock
bswap
lret
test
jmp
add
push
mov
test
push
clc
xor
xor
add
add
push
dec
mov
stc
roll
scas
mov
xor
xor
add
mov
clc
lret
into
mov
mov
mov
int3
add
xor
xor
add
mov
lock
stc
mov
or
jmp
dec
dec
mov
clc
test
clc
rorl
mov
call
les
lret
ja
mov
dec
xor
mov
clc
push
lret
mov
adc
jb
add
call
cmp
movsb
sahf
inc
xor
mov
clc
dec
lret
mov
call
scas
mov
sahf
sub
cmp
lods
xor
add
mov
mov
cmp
jb
add
dec
scas
mov
shrl
into
cmp
mov
dec
dec
mov
lret
xor
add
imul
mov
xor
mov
add
mov
inc
sysexit
xlat
pushf
jge
xor
sub
cmp
jb
add
rorl
xor
add
jmp
mov
dec
into
mov
sahf
shll
lret
or
add
in
push
mov
bound
int
sub
dec
xor
jge
mov
add
dec
decl
adcb
add
jge
push
push
shlb
xor
xor
inc
add
dec
or
jbe
mov
ror
enter
decl
push
lret
push
mov
mov
cld
subb
sti
add
push
lcall
mov
int3
pop
inc
decl
push
xor
movl
aas
push
inc
xor
add
mov
jmp
mov
rol
mov
mov
mov
cmp
mov
add
xor
sahf
lret
cmp
call
inc
inc
mov
mov
add
add
clc
enter
push
pushf
mov
int3
or
test
clc
gs
add
push
xor
sub
dec
add
mov
or
cmp
dec
out
xor
mov
dec
add
push
push
add
sbb
mov
xor
dec
inc
xor
add
push
dec
mov
lret
into
sub
dec
adc
inc
push
test
unpcklps
jmp
add
movl
xor
rolb
clc
bound
mov
xor
sub
mov
add
sub
mov
mov
clc
addl
lcall
inc
decl
test
decl
push
add
dec
or
rorb
into
add
mov
sar
adc
clc
fadds
mov
push
adcb
add
lret
mov
cld
mov
into
add
jne
incl
rclb
push
mov
mov
sar
or
push
add
pushf
xor
test
clc
inc
inc
mov
sub
mov
dec
bound
inc
add
dec
bound
inc
add
inc
add
movsl
pushf
inc
dec
lea
push
xor
pop
lods
incl
mov
rcrb
test
inc
inc
add
push
in
inc
push
mov
cld
add
adc
add
jmp
add
mov
dec
push
cmp
unpcklps
jne
decl
mov
shlb
inc
add
lret
decl
stc
in
or
dec
clc
xor
mov
rolb
inc
add
clc
inc
lret
mov
in
lret
into
into
scas
dec
mov
sub
cmp
mov
int3
test
xor
xor
rdtsc
lret
mov
inc
add
mov
xor
mov
call
lret
test
jmp
add
push
mov
mov
lret
xor
add
add
push
dec
mov
stc
roll
scas
mov
xor
xor
add
mov
clc
lret
into
mov
test
push
jbe
mov
mov
push
add
rdpmc
lret
add
dec
stc
mov
or
jmp
dec
dec
mov
clc
test
clc
rorl
mov
lock
inc
mov
hlt
pushf
jge
sub
cmp
ja
mov
dec
xor
mov
clc
push
lret
mov
adc
jb
add
lock
sub
mov
mov
mov
mov
lock
ror
push
scas
mov
sahf
sub
cmp
movsb
xor
add
mov
mov
cmp
jb
add
dec
scas
mov
shrl
into
cmp
mov
dec
dec
mov
lret
xor
add
imul
mov
xor
mov
add
rolb
sysexit
xlat
pushf
jge
xor
sub
cmp
dec
xchg
incl
jmp
mov
dec
into
mov
sahf
shll
lret
or
add
in
push
mov
bound
int
sub
dec
xor
jge
mov
add
dec
decl
inc
push
decl
lea
push
mov
push
mov
les
add
incl
mov
cld
lret
add
jne
in
ror
pop
into
add
not
adc
inc
push
mov
push
mov
fdivr
sti
sbb
pop
xchg
leave
sahf
add
push
cmp
sqrtps
decl
push
cld
xor
lret
clc
xor
add
hlt
or
mov
hlt
dec
add
leave
mov
push
roll
mov
mov
lar
push
lret
jne
mov
or
mov
cld
inc
mov
add
loope
inc
call
inc
mov
cld
mov
clc
xor
mov
loopne
mov
mov
clc
jne
call
sub
test
je
mov
cld
or
push
add
add
inc
push
mov
pop
mov
ret
push
mov
clc
lock
jne
jne
mov
rolb
jne
cmp
pop
mov
push
inc
lea
inc
rorl
xchg
mov
mov
or
inc
inc
mov
cld
jmp
mov
mov
rclb
iret
inc
leave
decl
mov
mov
mov
push
nop
incl
push
leave
iret
add
push
in
push
push
incl
mov
loope
sbb
add
mov
cmp
jne
push
pop
push
mov
or
add
sub
shlb
add
mov
lea
push
enter
testl
enter
negl
or
inc
in
in
sub
inc
in
push
add
push
push
imul
adcl
add
lea
mov
cmp
jne
mov
loope
inc
stc
xlat
ss
aas
in
ret
lock
and
mov
call
push
add
ud0
hlt
add
cmp
flds
out
call
cmp
shr
pop
fisttpll
push
add
add
push
add
sub
jne
lods
mov
dec
out
into
push
loopne
shrb
xorl
roll
mov
cmpl
mov
push
push
push
sub
push
adc
insl
mov
add
inc
mov
pop
addl
add
add
roll
cli
push
pop
lret
add
decb
sub
and
dec
inc
shll
add
pop
add
pop
dec
jmp
and
push
out
jmp
jmp
mov
decb
add
pop
icebp
mov
insb
adc
mov
or
mov
cld
jge
aas
and
adc
mov
and
dec
add
add
fadds
stc
enter
sbb
sbb
in
in
add
jne
cmp
jb
jmp
mov
add
add
jb
pop
faddl
or
inc
or
xlat
dec
push
add
leave
roll
add
mov
int3
jmp
mov
jne
mov
call
pop
add
pop
or
push
mov
int3
add
jae
int
enter
add
mov
push
pop
add
push
lea
mov
jb
mov
push
add
add
add
int3
jne
movsbl
add
add
mov
add
add
mov
sub
jb
add
jge
add
addl
jne
je
mov
rorb
orl
mov
mov
fadds
inc
pop
lea
push
out
add
add
mov
jb
add
push
call
add
jae
icebp
inc
mov
int3
out
loopne
sub
push
pop
push
jl
add
xor
mov
rcrb
rorl
inc
shr
orl
push
pop
add
jmp
mov
fdivrl
push
pop
call
mov
in
rolb
call
pop
enter
repz
xorl
je
or
jne
jmp
pushl
push
pop
cmpl
jge
mov
sub
pop
inc
mov
sub
lods
add
enter
repz
stc
jge
jnp
call
fadd
dec
insb
stc
cmp
push
mov
jne
mov
mov
add
sub
and
cmp
sbb
pop
call
fsubr
sti
add
add
add
roll
mov
clc
jne
mov
loopne
loopne
lods
int3
inc
mov
add
sub
shrb
add
call
add
dec
insl
in
lea
inc
inc
sub
orl
and
rorl
or
mov
stos
adc
inc
add
jne
mov
cmp
sub
sar
ljmp
sub
mov
mov
and
jne
sub
sbb
dec
push
add
ret
mov
leave
sub
ret
pop
push
rolb
addl
jb
ret
in
jecxz
push
xchg
jne
cmp
jne
mov
rorl
mov
pop
nop
mov
les
add
inc
mov
mov
cmp
or
inc
inc
xor
insb
cld
add
add
add
sbb
dec
je
mov
add
and
jae
mov
incl
push
shr
in
push
andl
lret
mov
add
lret
pushf
and
pop
rcr
test
clc
add
xor
pushf
add
add
inc
push
rcrl
inc
fsts
mov
nop
rolb
mov
add
pop
add
or
mov
add
call
add
add
push
inc
orb
leave
dec
dec
add
call
clc
inc
inc
mov
enter
mov
xor
xor
or
sbbb
int3
test
clc
inc
mov
fmuls
sub
add
leave
xor
jl
add
add
or
test
clc
or
xor
inc
sbb
mov
xchg
pop
add
mov
add
mov
mov
mov
xor
add
inc
jge
mov
xor
add
push
jne
mov
decl
add
cmp
push
inc
inc
add
add
mov
mov
mov
sbb
inc
add
push
clc
add
mov
jne
mov
add
add
lea
lea
xor
ret
mov
add
push
inc
inc
add
test
jne
mov
mov
push
pop
inc
decl
rclb
xor
addl
mov
push
jbe
mov
ret
dec
inc
jmp
mov
cld
push
mov
add
push
push
inc
jmp
add
add
inc
ret
mov
mov
sub
mov
mov
rolb
inc
add
inc
add
clc
inc
ljmp
xor
add
mov
mov
inc
fdivs
loop
add
add
ljmp
add
add
add
mov
dec
incl
test
sbb
add
mov
add
and
dec
mov
dec
call
inc
add
cmp
inc
add
jb
mov
cmp
lret
mov
test
andnps
decl
inc
add
mov
inc
hlt
mov
xchg
add
xor
add
mov
mov
mov
push
push
inc
mov
call
inc
adc
decl
aam
push
add
xor
lcall
cmp
test
clc
inc
and
mov
cmp
je
mov
add
sbb
dec
dec
mov
mov
add
add
jne
mov
cmp
jb
mov
mov
mov
inc
je
push
add
push
mov
in
shlb
test
call
inc
inc
rorb
jmp
mov
mov
loopne
sbb
inc
inc
push
lea
lea
or
js
mov
incl
call
inc
add
decl
test
mov
add
add
incl
add
data16
push
call
mov
cld
inc
test
inc
mov
sbb
inc
test
rorb
add
add
add
popw
test
cmp
jbe
lea
add
mov
sub
mov
mov
in
mov
jb
incl
mov
sbb
push
mov
movl
add
mov
mov
pushf
mov
lea
decl
movb
pusha
jmp
mov
xor
xor
add
in
mov
addl
mov
data16
addl
push
loope
inc
add
mov
out
incl
and
test
incl
jl
leave
add
test
outsl
fiadds
mov
test
in
incl
loope
inc
data16
inc
call
add
filds
inc
inc
xlat
xor
pushf
jl
leave
icebp
inc
add
mov
fdivp
mov
in
test
inc
inc
mov
cld
inc
out
rclb
inc
mov
mov
and
inc
cmp
jne
movl
lret
inc
add
lea
xor
add
inc
adc
test
add
movb
jl
add
mov
mov
sbb
add
loopne
adc
or
inc
loop
xor
or
jl
inc
add
adc
repnz
xorb
adc
dec
repnz
mov
adc
call
adc
inc
push
flds
mov
fcmovnb
xor
sbb
addl
inc
mov
sbb
xorb
add
decl
add
incl
mov
lret
enter
inc
jne
mov
mov
mov
mov
ud2
xchg
xor
dec
mov
sbb
cmp
push
pop
adc
andb
mov
push
mov
adc
in
inc
inc
fildll
mov
inc
subb
ljmp
lea
xor
mov
stos
mov
push
test
mov
push
ret
mov
sbb
rcl
inc
inc
into
mov
cwtl
movl
call
add
jmp
inc
or
rol
dec
adc
incl
add
push
push
add
test
or
out
pushl
add
push
out
xor
jmp
andl
mov
sbb
addb
mov
incl
push
pop
clc
mov
orb
mov
lea
inc
ljmp
pop
inc
mov
mov
rclb
incw
lea
stos
add
mov
adc
pushl
decl
dec
push
loopne
adc
call
mov
sbb
loop
ds
dec
mov
sub
inc
mov
xor
decl
add
push
add
mov
jbe
test
inc
push
addl
pop
add
ret
decl
mov
mov
cwtl
mov
test
rorb
lea
mov
push
decl
pushl
call
lea
mov
mov
mov
inc
dec
mov
xor
decl
call
lea
incw
cmp
decl
jmp
inc
jmp
dec
lea
jge
mov
lock
mov
mov
roll
push
str
xor
add
add
inc
rdpmc
mov
dec
inc
add
mov
data16
jne
push
adc
jne
ljmp
call
or
mov
mov
addl
mov
add
push
xor
dec
mov
mov
jl
push
mov
rcl
mov
mov
push
ret
push
pop
leavew
inc
sbb
in
xchg
push
shl
addl
mov
cwtl
or
setl
inc
add
test
xor
add
xor
mov
test
movb
adc
add
roll
mov
incl
ljmp
adc
jne
call
mov
pushl
inc
test
dec
add
dec
inc
mov
add
add
adc
and
jp
sysret
pop
add
cmp
sub
dec
mov
ret
clc
mov
addl
jnp
pop
add
xorl
adc
jge
mov
cld
test
add
add
negb
add
pop
add
add
inc
test
mov
fisttpl
mov
push
add
test
add
add
mov
add
add
mov
call
or
dec
or
inc
dec
addl
scas
dec
add
lock
mov
call
rclb
xor
adc
mov
mov
nop
rolb
mov
push
or
xor
sti
cmp
dec
test
or
ret
or
pop
add
xor
inc
mov
push
inc
mov
or
sti
dec
sub
cld
mov
mov
add
jne
cmp
jns
pop
jge
cmp
cld
inc
iret
or
jae
xor
jmp
mov
lea
mov
in
testb
jge
add
mov
cmp
hlt
adc
jl
clc
js
pushl
mov
clc
add
mov
call
inc
popa
jge
cmp
xor
rcrb
push
or
push
sub
in
add
fistl
sbb
test
inc
mov
cld
je
cmp
rorb
adc
mov
sbb
push
inc
mov
add
or
cld
mov
jge
xor
mov
hlt
iret
pop
inc
jbe
cmp
adc
push
add
dec
divl
sbb
mov
test
je
mov
or
cmp
jbe
mov
or
jg
add
dec
add
je
mov
mov
mov
adc
jmp
xor
pop
rcrb
ret
cmp
push
xor
sar
xor
xor
pushf
or
add
pop
mov
push
add
push
adc
push
xor
mov
in
dec
add
nop
iret
add
push
dec
sahf
mov
add
add
cmp
je
add
mov
pop
mov
sahf
fbstp
add
pop
pushf
mov
xor
ud0
add
add
or
dec
inc
mov
xor
mov
mov
fdivs
push
or
inc
imul
loopne
sbb
jg
inc
jne
mov
adc
fiadds
jne
mov
clc
test
xor
xor
mov
cld
jb
add
adc
rcr
add
add
pmaxub
dec
decl
xor
add
cmp
hlt
mov
faddl
xor
add
cmp
clts
jp
decl
xor
add
jne
mov
xor
lea
jb
add
add
add
add
adc
pop
mov
hlt
add
jmp
incl
xor
in
push
inc
mov
hlt
add
mov
dec
mov
fcompl
enter
add
mov
in
and
mov
mov
cld
pushf
dec
sahf
xor
add
mov
cld
add
xor
pop
mov
cld
sbb
dec
mov
jne
mov
fadds
mov
push
fdivs
decl
lcall
inc
inc
xor
add
cmp
mov
fadds
mov
test
sahf
push
xor
out
mov
or
in
sbb
add
jne
mov
mov
cld
test
sahf
fbstp
ret
call
xor
add
mov
cld
dec
mov
cltd
inc
inc
mov
cld
lea
xor
add
inc
je
mov
cwtl
movb
add
sub
lock
mov
aam
ljmp
mov
in
inc
mov
cld
jmp
rorl
mov
fadds
add
xor
add
pop
hlt
pop
push
ret
mov
mov
xor
add
rolb
mov
or
inc
mov
xor
add
clc
jne
add
xor
lea
add
jb
add
inc
jne
add
or
inc
scas
xor
in
jne
mov
or
icebp
sahf
shll
mov
lsl
cmp
cltd
mov
add
mov
call
jge
sub
xor
jge
xor
add
mov
xor
add
jne
xor
jmp
mov
cld
mov
clc
leave
xchg
or
push
mov
cld
in
icebp
jnp
add
jae
sub
inc
call
push
call
xor
add
ret
xor
inc
loopne
jne
mov
push
jge
xor
in
test
add
mov
xor
xor
add
cmp
mov
xor
add
cmp
mov
add
add
or
ja
mov
cld
pop
stc
mov
in
jge
mov
or
icebp
add
jae
add
push
jne
mov
add
icebp
jmp
cmp
xor
clc
pop
repnz
out
pop
testl
pop
add
pop
jge
xor
add
xor
xor
repnz
clc
mov
rcll
stc
or
mov
in
sahf
jne
mov
or
sahf
xor
add
mov
mov
lock
push
inc
jne
mov
in
mov
clc
repnz
decb
mov
cmpl
clc
call
hlt
add
clc
inc
jne
mov
clc
test
xor
mov
in
xchg
roll
sbb
cld
clc
pop
pop
xor
add
inc
hlt
mov
or
add
test
add
mov
sbb
rclb
add
add
mov
and
data16
pushf
or
rcll
xor
mov
add
inc
inc
mov
add
cmp
inc
push
mov
mov
lock
xor
mov
xor
pushf
aam
xabort
dec
inc
xor
inc
add
add
dec
mov
cld
mov
xor
pushf
dec
mov
xor
mov
xor
push
xchg
xor
add
incl
mov
in
inc
or
rclb
add
push
inc
call
leave
push
add
mov
or
jo
cmp
add
add
mov
or
mov
cmp
roll
mov
dec
dec
sbb
cld
mov
test
cmovne
test
add
into
xor
add
mov
faddl
mov
nop
into
add
mov
mov
invd
mov
mov
mov
push
push
cmp
fmuls
call
rcl
rcl
call
inc
jne
jmp
sbb
dec
or
mov
sbb
dec
and
push
add
cmp
je
push
and
add
or
inc
adc
inc
and
push
push
sub
push
mov
sbb
dec
mov
add
jge
add
mov
mov
cmovne
xor
xor
or
roll
dec
add
dec
jbe
mov
cld
mov
bswap
push
lret
xor
mov
and
or
daa
xchg
push
push
adcl
push
xor
add
decl
sbb
rolb
and
mov
enter
mov
push
add
add
addl
mov
rorl
mov
inc
dec
mov
inc
mov
call
or
mov
inc
push
mov
into
mov
mov
lea
mov
push
xor
mov
sub
mov
loopne
lret
push
dec
mov
lods
xor
add
mov
xlat
dec
sarb
jne
mov
fsub
add
xor
out
mov
hlt
mov
mov
in
jb
push
inc
push
jl
leave
cmove
lods
add
mov
or
xor
or
into
in
lret
xchg
gs
add
mov
fsubs
inc
lea
push
lea
fadds
mov
inc
add
mov
fmul
rorb
add
inc
inc
je
mov
sbb
add
add
jmpw
or
lret
jne
mov
in
add
enter
sbb
inc
ljmp
and
inc
test
add
rorb
data16
call
ret
test
inc
orb
sub
stc
test
mov
lea
call
pop
add
xchg
add
add
push
cmp
fdivs
add
lea
test
je
mov
decl
push
add
inc
sbb
push
or
mov
cmp
mov
inc
pop
add
add
push
decl
or
adcl
push
jno
add
push
clc
sar
xchg
add
jne
mov
mov
sub
rolb
loopne
dec
mov
mov
call
add
add
add
add
jmp
xor
pop
lcall
ret
mov
mov
add
push
and
adc
add
dec
or
sbb
cmp
pop
push
add
mov
and
xchg
add
add
cli
loope
shlb
dec
ret
sub
pushf
inc
mov
and
incl
xor
pushf
jb
add
add
mov
hlt
inc
data16
mov
jmp
mov
or
inc
add
mov
mov
mov
add
sbb
jne
sub
sahf
mov
and
add
lock
test
add
push
inc
in
mov
ret
push
test
add
inc
shlb
pop
add
loopne
inc
pop
xor
mov
fdivrp
pop
mov
hlt
addl
cmp
lock
add
add
push
or
add
data16
lock
jge
mov
test
sbb
mov
inc
jge
pushaw
xor
data16
jne
mov
inc
or
lock
mov
mov
in
or
mov
call
sbb
push
mov
lock
pop
jne
mov
retw
minpd
str
jne
xor
mov
cld
add
add
sar
mov
mov
lock
es
mov
clc
jne
jge
mov
or
add
push
xor
add
add
mov
or
mov
add
mov
mov
or
fisttps
clc
ja
mov
or
sahf
sti
add
add
fbld
pop
mov
or
mov
hlt
add
mov
or
mov
or
mov
mov
adc
stc
mov
mov
or
mov
or
add
cmp
mov
xor
mov
add
jge
mov
pop
clc
cmp
data16
mov
xor
pop
jge
mov
lock
jge
ltr
add
hsubpd
data16
jge
mov
dec
xor
minpd
data16
jmp
mov
sarw
mov
jb
add
pop
mov
clc
jne
data16
jnp
pop
inc
add
data16
mov
data16
icebp
sbb
jne
mov
call
mov
in
data16
repnz
xor
inc
mov
call
add
ret
jge
mov
mov
add
data16
mov
add
mov
data16
pop
test
pushf
add
into
fistps
push
mov
mov
mov
push
repnz
lock
jne
mov
cld
mov
xor
mov
mov
push
sub
mov
mov
add
dec
cmp
jne
mov
mov
stc
jge
data16
xor
data16
lock
ds
pop
add
rorb
inc
mov
in
sarl
pop
or
push
mov
mov
or
cmp
je
mov
mov
add
push
mov
mov
pushf
sub
add
xor
dec
str
cmp
int
mov
xor
mov
xor
lret
push
add
push
add
cmp
sti
mov
mov
cld
add
data16
roll
mov
lret
in
add
pop
lret
ret
enter
pop
movl
pushf
call
add
in
add
mov
clc
xor
add
cmp
je
push
pop
sysexit
leave
dec
bound
mov
int
mov
lret
add
jne
lea
add
ret
inc
xlat
add
add
or
ret
add
jne
lea
add
lret
mov
cmp
fs
ss
je
xor
inc
inc
add
ss
pushf
push
je
xor
mov
andl
add
in
push
mov
pushf
cld
mov
mov
or
ret
or
or
lret
add
mov
adc
iret
mov
dec
push
mov
mov
rclb
add
ret
jne
mov
xor
callw
cmp
fs
mov
pop
sub
add
xor
cmp
cmp
jne
cmp
clc
pushf
pop
mov
push
xor
mov
psubsb
icebp
lea
clc
pop
inc
mov
push
xor
mov
adcl
add
inc
sub
mov
addl
orl
cmp
mov
decl
dec
mov
mov
mov
xor
mov
push
leave
mov
push
test
sahf
in
xor
mov
clc
test
xor
pushf
dec
mov
in
mov
push
icebp
add
roll
add
roll
xor
pushf
dec
movl
clc
or
xor
pop
dec
dec
lea
add
dec
inc
sub
orl
cld
adc
scas
or
pop
xadd
jb
add
inc
sub
mov
lock
icebp
add
clc
pop
mov
data16
add
xor
add
lea
add
add
inc
adc
dec
mov
mov
mov
lea
add
inc
in
incl
leave
add
push
roll
sbbl
sarb
jbe
mov
or
push
mov
mov
jne
jmp
mov
push
push
mov
add
xor
sub
mov
inc
inc
mov
dec
sahf
xorl
orl
leave
jbe
mov
in
inc
in
mov
or
dec
inc
xor
mov
mov
cld
test
push
inc
mov
sahf
pop
xor
mov
inc
or
sar
dec
lea
in
decl
mov
cld
inc
inc
inc
mov
jmp
mov
mov
push
sahf
xor
add
inc
xor
pushf
std
xor
inc
fadds
inc
mov
inc
sahf
xorl
cmp
mov
clc
sub
inc
call
pop
inc
sahf
pushl
adc
std
dec
decl
inc
push
call
add
xor
add
add
inc
cld
add
mov
orl
test
clc
inc
inc
mov
pushf
or
inc
adc
jne
xor
xor
pop
add
ret
je
push
mov
mov
mov
in
inc
orl
push
test
xor
mov
add
add
mov
or
add
xor
inc
inc
add
xor
add
mov
sub
lret
mov
jae
lea
xor
jne
or
or
pushw
jne
cmpxchg8b
mov
jne
call
cmovge
xor
add
sub
or
add
inc
cmp
mov
subl
enterw
shlb
pop
or
mov
dec
inc
data16
push
jb
jmp
incl
mov
or
jo
test
jmp
incl
mov
pop
lock
push
dec
mov
dec
ror
rolb
dec
lock
pop
in
cmp
clc
xchg
cmp
jne
xor
jmp
mov
jne
call
mov
add
inc
jne
mov
mov
mov
add
stos
add
mov
les
xchg
iret
add
inc
jl
out
cld
add
xchg
add
push
pop
add
paddq
xchg
add
adc
test
incl
incl
rorb
decl
inc
inc
incl
data16
rclb
mov
lock
jle
mov
mov
jge
mov
adc
enter
dec
or
mov
lods
ja
mov
pop
lea
inc
clc
inc
outsb
lea
push
inc
mov
pop
mov
jae
cmp
adc
pop
inc
sbb
mov
or
cmp
mov
cld
xchg
add
add
lea
adc
or
faddl
push
add
push
inc
add
push
adc
mov
fdivr
cli
dec
add
add
add
xor
cmp
mov
lock
rcl
pop
add
pop
dec
cmp
mov
add
push
dec
in
mov
push
pop
mov
add
add
add
inc
mov
hlt
push
decl
push
add
pop
or
jns
ret
jmp
mov
in
jge
sysexit
cmp
cmp
sbb
pop
add
jae
mov
lcall
mov
mov
fdivs
xor
movl
add
push
ret
mov
jne
mov
faddl
xor
push
or
icebp
incl
rolb
inc
stc
mov
lock
add
dec
add
mov
call
sbb
mov
pop
jge
lea
decl
or
leave
fadds
dec
add
xchg
add
mov
mov
or
dec
pop
mov
in
pushf
mov
push
call
add
cmp
add
add
mov
mov
mov
sub
add
clc
mov
add
dec
push
xor
xor
in
add
inc
jmp
xor
mov
adc
xor
jne
mov
mov
hlt
pop
add
in
push
in
dec
push
xor
mov
mov
in
dec
addb
add
mov
test
dec
push
mov
mov
clc
into
dec
lret
lock
test
push
jge
push
enter
dec
cld
jmp
pushf
inc
mov
sub
int
mov
mov
adc
enter
jmp
xor
mov
or
call
cmp
fs
add
leave
rorb
push
inc
in
mov
or
lock
test
clc
rolb
xor
pushf
add
mov
cmp
sub
jmp
mov
lock
mov
push
icebp
xor
mov
enter
add
cld
scas
add
dec
mov
xor
xor
add
add
test
mov
adc
je
xor
xor
add
add
rorl
enter
icebp
or
lock
enter
lret
or
mov
cld
bswap
pop
mov
in
hlt
pop
jne
xor
xor
jbe
mov
clc
pop
mov
mov
clc
mov
adcl
inc
in
xor
inc
cld
xor
add
inc
test
clc
hlt
inc
test
inc
inc
aad
xlat
pushf
mov
mov
xor
mov
xor
add
pavgb
test
dec
inc
mov
cld
xlat
enter
lret
add
leave
jne
mov
enter
lret
scas
out
jmp
mov
cld
add
xor
jmp
xor
add
rorl
dec
mov
cld
lea
mov
mov
xor
enter
stc
add
call
pop
xor
sub
enter
inc
in
xor
clc
xor
pushf
ss
pushf
call
mov
loopne
inc
test
clc
add
push
mov
push
inc
push
mov
mov
mov
xor
dec
cld
mov
or
into
inc
iret
or
add
mov
xor
xor
mov
hlt
bswap
roll
xor
mov
xor
call
enter
mov
lock
inc
mov
inc
inc
enter
inc
mov
mov
roll
add
push
into
in
movb
dec
or
xorb
add
add
in
push
inc
mov
adc
push
xchg
popa
iret
dec
sahf
mov
clc
add
cmp
jne
addl
or
or
push
dec
jnp
dec
xlat
mov
call
lsl
cld
sti
lahf
mov
mov
clc
iret
dec
lret
xor
lea
dec
inc
mov
mov
int
sub
lock
mov
in
xor
pushf
xor
jne
mov
in
dec
mov
nop
add
pop
mov
mov
ret
mov
mov
mov
dec
add
jo
push
inc
jne
mov
push
push
ret
push
inc
xor
add
jnp
jg
ljmp
inc
mov
push
cmp
dec
xor
cmp
jne
orl
jmp
mov
push
add
add
add
cmp
mov
sbb
mov
xor
mov
xor
pushf
test
clc
adc
test
xor
lock
xor
add
mov
sbb
mov
rolb
iret
or
cmp
xor
or
xor
add
mov
inc
inc
mov
mov
mov
cmp
dec
decl
inc
mov
or
sbb
inc
inc
mov
or
dec
push
dec
inc
rclb
push
inc
decl
rolb
inc
inc
mov
sbb
inc
push
xor
lea
cmc
xor
add
mov
inc
inc
mov
ret
inc
add
adc
test
clc
inc
inc
mov
loopne
enter
inc
test
mov
sbb
dec
ret
sub
add
xor
lea
lods
jb
add
sar
xor
inc
int3
xor
xor
pushf
adc
inc
les
test
clc
inc
inc
pushl
hlt
pushf
jne
mov
or
bound
clc
lea
cmp
shl
mov
or
dec
imul
incl
inc
add
pavgb
movl
clc
iret
inc
lock
lret
fmull
mov
test
mov
loopne
inc
loopne
inc
loopne
xbegin
adc
jb
mov
inc
inc
push
mov
incl
mov
loopne
rol
test
dec
push
decl
push
mov
add
cmp
add
call
clc
test
xor
pushf
mov
or
iret
test
mov
in
pop
dec
add
add
dec
mov
in
dec
or
iret
add
testl
test
add
add
mov
or
add
cmp
add
mov
mov
lock
dec
test
dec
add
cmp
or
mov
dec
push
lea
lods
mov
clc
cli
or
iret
inc
mov
or
or
xor
cmp
je
mov
mov
xor
mov
mov
xor
bswap
rorb
add
mov
xor
or
mov
xor
bswap
rorb
add
add
xor
mov
add
dec
dec
xor
mov
clc
rorb
iret
rorl
inc
mov
iret
add
xor
mov
or
dec
shll
cmp
in
add
add
mov
in
mov
or
dec
enter
add
mov
xor
or
mov
mov
xor
mov
cmp
jne
lea
cli
or
cmp
je
mov
ret
or
lock
add
mov
add
cmp
mov
xor
mov
add
roll
cmp
lock
rorl
jb
add
ja
sbb
xchg
enter
inc
decl
loopne
jb
add
dec
adc
add
inc
rcll
mov
xor
jb
add
jne
decl
add
repnz
inc
mov
mov
shll
mov
movsb
add
push
adc
inc
pushl
mov
add
mov
test
inc
mov
lret
mov
sbb
inc
mov
xor
enter
inc
add
cld
test
sahf
jne
mov
fsubrs
decl
hlt
xor
sbb
call
pop
or
dec
adc
push
add
cmp
je
mov
or
push
lea
clc
or
push
inc
or
pop
call
test
jne
mov
movsb
xlat
inc
push
push
or
push
decl
dec
adc
roll
sbb
dec
je
push
call
test
inc
iret
add
clc
jmp
mov
test
or
add
inc
mov
mov
and
push
mov
rolb
iret
orl
push
clc
jmp
add
mov
jmp
addl
pop
inc
pop
sbb
inc
add
clc
and
mov
and
mov
and
mov
and
xor
push
mov
xor
mov
mov
mov
push
add
mov
cmp
mov
dec
add
push
adc
push
cmp
and
mov
and
xor
jb
add
inc
and
lea
and
push
jmp
cli
and
clc
and
call
jmp
dec
aas
or
cmp
bswap
mov
add
and
mov
mov
or
inc
jmp
addl
push
inc
sbb
dec
test
movb
xor
pushf
inc
jmp
addl
jne
or
or
jne
call
mov
add
adc
add
add
add
incl
push
cli
add
shll
inc
jmp
xor
test
cli
incl
incl
and
mov
or
and
and
add
push
and
and
add
ss
incl
xor
mov
and
pushf
pushf
clc
decl
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
in
jp
jp
jnp
adc
sbb
sbbl
add
adc
daa
imul
mov
cmpsl
or
int
cmpsb
pushf
clc
pop
jae
addb
gs
neg
add
fisubs
cltd
mov
sbb
sbb
inc
sub
addr16
mov
jl
cmpsl
and
add
adc
and
ret
popf
aam
ljmp
dec
add
fwait
pop
testl
pop
sub
xchg
push
in
pop
adc
add
jno
ds
pop
call
push
std
xchg
jne
xchg
jns
cmp
jmp
dec
ret
push
punpckhdq
adc
inc
cld
dec
lock
loopne
popf
icebp
lret
mov
popl
rcrb
enter
sbb
jno
movsb
inc
negb
sbb
dec
inc
cmc
jl
std
and
jne
sbb
mov
mov
fs
shlb
inc
pusha
sub
lret
xchg
test
adc
add
ret
xchg
ja
dec
in
in
sub
mov
imul
push
cmp
aam
cltd
pop
popa
mov
popl
call
int
dec
xor
popf
adc
xor
es
xor
int
push
out
sub
enter
insl
mov
push
and
cmp
push
leave
xchg
mov
xchg
aad
lods
std
pop
push
inc
jne
adc
fdivs
dec
push
mov
push
push
inc
jge
aad
pop
fmuls
lcall
fcoml
cs
or
inc
les
arpl
dec
testb
sbb
imul
or
in
mov
push
sub
cmp
and
call
into
mov
out
popf
and
or
ret
adc
mov
inc
fisttps
scas
popa
pop
stos
pop
fidivrl
ret
fabs
mov
pop
cmp
fidivrs
push
out
inc
mov
inc
rolb
xlat
shlb
scas
cmpsb
je
xor
inc
push
pop
jle
fstps
ss
adc
cwtl
push
jle
sub
fildll
imul
and
stc
inc
inc
and
shll
cmp
pop
in
rcrl
cmp
test
adc
jbe
inc
popl
jl
add
int
out
sub
xchg
into
or
add
jae
cmpsb
pmulhuw
test
stos
lods
or
jg
enter
dec
and
lods
std
dec
and
and
cmp
loopne
stos
fcoml
das
inc
ret
and
lods
mov
jl
xchg
inc
inc
inc
rcll
inc
test
mov
enter
aad
incl
jecxz
sahf
sti
cmp
xchg
push
push
cmp
xchg
xchg
movsl
fistpll
in
mov
jle
adc
mulb
shrb
xor
pop
int3
push
pusha
iret
sbb
adc
mov
jns
pop
mov
xor
sub
outsb
xchg
scas
xor
lret
mov
aaa
cmp
push
sub
jmp
adc
cltd
sub
push
lock
or
das
imul
in
stc
push
cs
push
xor
pop
test
or
mov
add
lock
fcmovu
popl
fnstsw
add
xor
in
and
cmpsl
mov
roll
and
xchg
jmp
xorl
add
pop
lds
pop
add
xchg
cmp
mov
lods
or
pop
enter
xchg
js
fsubl
lods
adc
jl
dec
adcb
imul
ljmp
add
cmp
out
sbb
mov
stc
xor
xor
sahf
xlat
pop
xchg
outsb
push
or
jne
popa
jbe
shlb
mov
test
pop
jbe
cmc
cmp
mov
pop
imul
xlat
and
out
pop
icebp
dec
and
pop
sub
lret
xor
orb
dec
scas
popa
adc
xor
aad
jmp
xor
xchg
xchg
hlt
inc
cmp
xlat
nop
mov
divb
cli
jle
aaa
dec
lea
arpl
inc
outsb
cmp
fs
pop
or
pop
adc
adc
ds
jno
add
out
push
or
test
in
mov
inc
lods
push
outsl
jo
sahf
cmp
inc
push
leave
xor
cmp
fwait
in
xor
add
sbb
clc
cltd
ss
cmpsb
pop
insb
sbb
clc
dec
push
std
cmc
popf
ret
gs
addr16
fadd
lea
addb
movsb
sub
rcrl
fcoml
inc
daa
pop
ds
int3
das
mov
mov
xchg
mov
addr16
mov
pop
push
xor
adc
sbb
add
jmp
arpl
jle
das
pop
dec
cld
xor
add
xchg
mov
inc
pushf
insb
xchg
imul
mov
loope
mov
jmp
rcll
out
jnp
jbe
or
pusha
rcrl
cmp
inc
sub
push
mov
test
out
jle
les
int3
mov
mov
in
mov
js
cmp
int3
xor
xlat
xchg
cs
xchg
pop
rcll
push
cmpl
or
add
jmp
or
and
scas
clc
adc
adc
xor
or
xchg
sbb
fsub
les
sub
mov
cmpsl
mov
push
gs
push
int
inc
sahf
or
adcb
dec
mov
cltd
mov
sbb
cmp
sub
and
push
jp
fisubl
lahf
dec
push
ret
xlat
int
jne
push
inc
loopne
adc
mov
lret
sub
cli
aas
arpl
out
ss
jge
pushf
sbb
xchg
adc
int3
aad
mov
mov
xor
and
iret
cmpsl
xor
icebp
in
stos
ret
push
pop
sub
push
fwait
lahf
pop
popa
push
mov
mov
in
cmp
in
cld
cmp
mov
and
cmp
and
sti
cmpsb
jmp
pop
loopne
fsubrs
popf
shlb
stos
fdivrl
xchg
shrl
push
add
jecxz
fdivs
push
repnz
std
repnz
repz
xchg
cmpsl
and
movsl
loope
cltd
pusha
mov
adc
movsb
xor
add
popa
and
test
lds
cmp
add
sub
insb
sub
mov
das
adc
xchg
sbb
pop
jle
mov
in
out
and
call
cmp
add
add
xchg
mov
sbb
jae
add
add
and
add
xchg
or
inc
push
mov
fsubrs
ljmp
hlt
int
inc
xor
ss
jecxz
mov
nop
xchg
in
and
test
mov
repz
faddp
lahf
cmp
je
mov
sub
mov
fisubs
cld
mov
daa
mov
mov
xchg
mov
cmpsl
dec
cwtl
stc
int3
test
adc
jmp
adc
outsl
push
cli
mov
cs
adc
cmp
mov
ds
and
enter
xchg
int3
cmp
lret
cmp
test
xor
xorl
and
mov
fcmovnb
push
cmpsb
iret
lret
jmp
mov
pop
adc
clc
in
in
dec
test
cmc
insl
jle
adcb
xchg
loopne
je
adc
hlt
inc
jns
imul
mov
sub
mov
dec
loopne
and
jg
mov
xchg
enter
add
inc
stos
in
out
jle
in
ds
clc
sti
adc
mov
xchg
lock
pop
test
adc
jns
addl
xor
cltd
fdiv
data16
push
int
roll
mov
lret
xchg
or
jne
mov
out
dec
pushf
inc
sbb
call
xchg
mov
lahf
mov
xlat
lret
jo
mov
or
jmp
rcrb
clc
lea
and
fnsave
neg
setns
pop
out
mov
sahf
push
cwtl
sub
xchg
clc
jecxz
sbb
test
sub
pop
popa
daa
jl
call
andl
roll
mov
inc
sbb
sti
push
cmp
shlb
sahf
stos
cmpsb
jl
outsl
adc
jge
notb
rcll
inc
ds
es
inc
or
adc
mov
sar
push
jno
std
cmpsb
adc
xchg
push
flds
sub
cltd
in
ja
lahf
fcoms
sub
push
clc
adc
loop
sbb
jne
cld
in
andb
jnp
repnz
push
and
shll
leave
xchg
outsl
lock
jns
fcmove
push
sbb
int3
ds
shlb
sbb
mov
jno
adc
das
stc
std
sbb
repz
arpl
xorb
ret
sbb
neg
cmp
bound
jne
js
mov
ds
cmpsb
pslld
lea
sarl
loopne
jnp
std
repnz
or
out
add
dec
cmp
mov
mov
xchg
fs
xor
dec
add
jecxz
and
mov
fxch
mov
sbb
pop
mov
sahf
jmp
mov
sub
dec
push
mov
lods
jmp
sub
cltd
mov
xchg
stc
mov
cmpsl
cmp
rcll
push
or
jae
int3
sbb
int
sub
sbb
lahf
jmp
inc
ds
mov
in
scas
pop
shlb
sub
aad
pop
push
fisttps
adc
addr16
push
movsl
stos
or
inc
lods
mov
fwait
in
jp
lret
mov
mov
sub
lahf
push
cmpsb
aam
xchg
mov
aaa
mov
gs
arpl
mov
aad
mov
mov
jo
add
sbb
cli
adc
inc
aad
xor
jno
inc
xor
es
xchg
movsb
xor
lcall
sbbl
push
out
cmp
inc
cmp
mov
lcall
and
lea
addr16
lea
popa
pop
movsl
sbbb
cmpsb
notb
icebp
aaa
mov
shlb
loop
push
data16
jb
adc
fwait
lds
push
mov
stos
scas
iret
call
xor
cmp
testl
movl
pop
cmp
xchg
pop
push
and
nop
lret
pop
mov
sbb
mov
leave
js
inc
mov
add
xchg
shll
cmp
jle
sbb
movsb
jno
fwait
cmp
cmp
jge
enter
or
inc
imul
xchg
jo
pop
mov
push
out
int3
push
cmp
and
inc
add
jne
xchg
cmpsb
loopne
out
fildll
sbb
add
movb
or
stos
dec
ror
add
mov
mov
cmp
fistps
pop
adcb
xor
xorl
scas
mov
pop
sub
pop
add
add
and
in
stos
scas
bnd
rcr
pop
pop
pop
sarl
jge
dec
popa
nop
or
dec
jg
add
aam
cmp
or
mov
aad
mov
pop
inc
fcompp
not
into
outsb
xchg
scas
lret
and
lods
push
xchg
aad
pushf
int3
mov
cli
sbb
test
jb
add
ds
add
jo,pn
movb
jle
arpl
push
inc
jmp
xchg
adc
mov
jge
sub
out
cltd
jns
jl
push
or
sbb
lcall
add
icebp
mov
test
or
addr16
scas
cltd
add
scas
mov
leave
ljmp
lea
lea
in
inc
push
inc
mov
push
ja
xlat
addr16
movsb
sti
dec
mov
inc
std
ljmp
xchg
mov
push
jnp
addr16
gs
xchg
iret
pop
xchg
sar
sub
call
push
push
je
roll
mov
jmp
lret
insb
mov
mov
mov
enter
pop
scas
xchg
scas
test
mov
outsl
stos
pop
push
push
ds
pop
xchg
adc
dec
adc
cmpsl
in
iret
mov
push
dec
in
pop
dec
cmp
xor
div
outsb
and
ret
out
xor
jbe
mov
mov
iret
pop
ret
aaa
test
or
outsb
jb
in
test
mov
pop
jne
test
mov
add
push
sub
sarb
movsb
inc
ss
out
xchg
rcll
inc
push
ss
fsts
xor
dec
push
daa
mov
rol
loopne
dec
adc
js
and
inc
enter
inc
jne
or
sarl
push
cli
divb
cli
mov
add
pop
add
dec
adc
or
fdivl
push
or
pop
int
inc
jmp
xchg
stos
jl
mov
test
popaw
pop
dec
push
xchg
test
xchg
xor
push
mov
jne
jmp
fmull
out
sub
dec
ja
pop
sbb
and
lds
xchg
mov
shll
or
ret
add
mov
jae
xchg
cmp
jb
cmpsl
mov
push
or
out
sti
dec
lods
jp
cmpsl
jle
mov
js
sub
in
pop
jp
insb
pop
scas
in
lea
or
data16
je
cmp
stos
adc
rcrl
or
cmc
fwait
inc
cmp
std
aas
aad
pop
clc
stc
test
push
jl
and
test
add
mov
add
and
adc
adc
jge
cli
mov
gs
sub
icebp
bound
cmp
sub
inc
ret
imull
xor
pusha
inc
adc
or
icebp
dec
fs
sbb
repz
into
out
aas
lea
pop
jns
outsb
adc
jns
and
cli
jno
sub
inc
xor
push
jge
xchg
ret
add
arpl
call
loope
mov
push
mov
xlat
pushf
mov
loope
imul
or
xchg
jecxz
jmp
jle
and
add
ljmp
push
jle
push
cmp
push
push
ja
jo
adc
subl
rcr
lea
das
mov
adc
shl
lcall
cmpl
popf
cmp
loop
rcrl
scas
out
dec
dec
rcll
inc
adc
sbb
dec
mov
imul
mov
daa
adc
jne
cmp
add
adc
jle
mov
adc
pushf
xchg
mov
fldcw
or
inc
popf
or
mov
stc
int3
mov
rolb
fldcw
or
or
or
cltd
loop
push
in
ret
andb
je
cmp
stos
inc
sbb
xor
aas
rcll
ljmp
lock
xchg
scas
mov
aas
push
sbb
movsb
jl
test
fwait
sbb
pop
imul
ret
xchg
in
jns
or
xor
mov
data16
ss
sbb
mov
clc
push
cld
call
ljmp
ljmp
idivl
and
pusha
jg
push
jl
std
xor
andl
lret
ret
fcoms
aas
out
mov
xchg
in
push
inc
out
jle
and
sar
aaa
adc
sti
movsb
shll
loop
repz
int3
lds
repnz
jl
dec
jnp
aaa
cmp
ret
push
sub
xchg
mov
lret
test
dec
out
sbb
sub
jp
pop
push
repnz
push
fs
mov
lahf
out
dec
jnp
lahf
fldcw
push
ja
xchg
push
scas
lret
mov
jae
fs
ss
xchg
stos
and
push
or
out
mov
jle
cmp
xchg
adc
imul
loope
fstpt
outsl
dec
inc
stos
stos
xor
mov
cmp
or
int
movsl
fildll
add
pop
cltd
shrb
xchg
lock
sub
int
loopne
push
pop
rolb
jecxz
xchg
sub
mov
addr16
or
mov
cmpsb
mov
sub
mov
push
orl
inc
jl
pusha
xor
xor
cmp
sub
jmp
xor
sti
ljmp
lret
sbb
rcl
sbb
dec
xchg
movsb
cs
mov
les
cmp
into
xchg
outsb
lea
mov
mov
inc
dec
lds
inc
push
test
pop
adc
shrb
cwtl
xor
sub
aaa
insb
filds
or
adc
mov
push
xor
inc
inc
mov
mov
inc
out
daa
sub
xchg
and
cmpsl
test
pop
in
popa
imul
jbe
add
dec
add
loopne
idivl
lcall
xor
xor
lock
ss
ds
out
or
cltd
clc
sbb
in
jmp
das
adc
push
imul
inc
or
and
pop
or
pcmpeqb
mov
jo
and
lahf
iret
mov
jo
imul
push
dec
jmp
jne
nop
and
shl
psubsw
in
and
ret
adc
out
pop
dec
add
push
in
mov
cmp
pop
mov
mov
lret
push
and
jb
jge
popf
xorb
lods
sbbb
inc
outsl
imul
fisttpl
or
fisubs
cmc
ficoms
lahf
scas
lods
sbb
cli
lods
jl
pop
add
lea
mov
aam
sbb
mov
in
sbb
xchg
mov
cld
xlat
pusha
xchg
and
jecxz
in
subl
mov
cmp
pop
add
jno
sub
mov
inc
stc
push
push
cmp
add
cltd
loope
bound
adcb
jne
or
inc
pop
xchg
fnstsw
test
jns
push
cmpsb
stos
cmpb
jmp
daa
dec
ret
mov
ja
sbb
sti
inc
or
fstpt
and
mov
cmpsl
xor
test
adc
and
add
mov
gs
cmp
aam
jp
mov
or
adc
ret
inc
shl
jo
test
adc
xchg
bound
xor
repz
popa
adc
xor
aad
jl
int
jle
push
adc
pop
popf
lock
adc
jnp
clc
cmp
in
jge
je
push
mov
adc
jmp
out
jns
icebp
mov
vpextrw
lds
loop
jns
js
xlat
stc
call
xchg
test
jbe
adc
mov
or
loopne
aad
or
or
lds
dec
jge
sbb
jle,pt
xor
mov
es
inc
or
loopne
add
jno
mov
lock
add
add
push
addl
pop
mov
jne
test
jle
mov
mov
shl
add
add
add
ss
or
pop
in
testl
add
testb
and
add
pushl
mov
pop
movsb
sbbl
sub
popf
mov
sbb
subb
into
sub
lret
adc
lods
pop
sub
jle
out
or
xor
nop
aam
push
pusha
push
inc
dec
in
jmp
bound
lods
push
cmpsl
mov
xchg
push
jmp
mov
xchg
xor
hlt
dec
lock
test
stos
sbb
adc
fucom
pop
push
lock
aaa
jno
push
shlb
sahf
cli
std
pop
push
cmp
leave
mov
mov
push
lret
clc
in
je
addb
mov
test
jge
or
daa
dec
or
sub
xchg
pop
imul
push
jge
hlt
pushf
pop
or
jno
mov
sahf
insl
adc
sub
push
pop
dec
jmp
push
push
xor
sbb
push
lret
cmc
or
fimuls
lods
notb
in
jb
fs
outsb
sbb
in
ret
xor
add
xor
jnp
inc
dec
xor
cmp
dec
jmp
inc
mov
push
repz
movsl
sbb
pop
sub
mov
shr
imul
aam
xor
mov
icebp
xchg
mov
sbb
ljmp
ja
xchg
and
and
ja
xor
sub
cmpsl
fidivs
jle
mov
stos
lea
sub
xchg
out
decl
xchg
adc
insb
mov
sahf
mov
outsl
sarb
outsl
xchg
adc
sbb
fdiv
out
dec
mov
add
sbb
push
sub
ss
cs
mov
mov
or
std
movsl
rcrl
out
push
inc
pop
sbb
cwtl
jb
fstpt
outsb
data16
js
dec
sub
sar
or
pop
or
cmp
dec
dec
popf
mov
inc
enter
add
arpl
cmp
ficomps
pop
dec
fildl
addr16
adc
pop
add
pop
lret
push
xchg
jo
js
push
mov
sbb
mov
or
stos
mov
mov
push
scas
mov
pop
lds
mov
fidivl
push
jnp
sub
and
push
jno
out
and
les
fldt
ljmp
mov
fcoms
xor
push
xor
xchg
xor
jno
push
sub
adc
pop
lods
fidivl
hlt
fwait
jae
mov
subb
sbb
cmp
mov
std
imul
insb
mov
lahf
sbb
add
push
and
out
mov
lret
xchg
ds
mov
pop
call
stos
enter
add
mov
mov
xor
or
or
mov
jo
pop
cmpsl
in
adc
and
scas
and
sub
fdivl
imul
in
stos
mov
push
jae
loopne
fcom
data16
in
mov
test
mov
das
notb
mov
and
fnstcw
jne
incl
test
jns
lds
idivb
call
icebp
imul
push
push
sub
mov
xor
mov
test
dec
xchg
inc
fcompl
cltd
sub
mov
jg
out
ret
push
movsb
subb
ljmp
push
jmp
adc
arpl
cmc
cmp
mov
std
sbb
gs
arpl
cmp
pop
call
mov
int3
mov
cmp
filds
push
or
mov
adc
or
mov
movsl
fisttpl
in
ds
mov
xor
xchg
and
and
scas
outsb
cmp
mov
mov
dec
daa
mov
cmc
xchg
movsb
addr16
xchg
push
fidivrl
roll
or
push
ljmp
xor
xor
dec
xchg
subl
push
test
mov
inc
out
mov
stos
mov
inc
lock
mov
sub
push
cmp
daa
and
mov
fcmovbe
cltd
sbb
mov
jb
addl
push
movsb
push
stos
pop
adc
or
shrb
test
sbb
pop
xor
scas
mov
jg
in
jnp
or
add
xchg
nop
cs
inc
xchg
aam
mov
xchg
ss
imul
or
and
es
mov
mov
andl
loopne
push
out
out
dec
mov
in
sbb
int
xchg
lret
mov
push
aam
jae
or
imul
mov
cmpb
cmp
add
lds
cmp
ss
jae
jb
ficompl
mov
pop
sub
mov
or
adc
insb
insb
add
inc
lds
jg
dec
daa
pop
scas
popa
data16
mov
cli
rolb
xchg
jle
rol
ret
inc
jo
adc
xchg
push
sbb
sbbl
fs
js
ljmp
sbb
repnz
pop
cmp
mov
pop
mov
test
xor
stc
hlt
sbb
jns
sti
xchg
jo
mov
fldenv
cmpsl
xchg
xchg
std
mov
cmpsl
mov
fwait
push
cmp
std
jmp
xchg
repz
xor
insl
mov
stc
sub
test
mov
cli
gs
movsb
fmull
adc
pop
mov
imul
xor
sbb
lcall
pop
pop
pop
movsl
xlat
pop
dec
ret
lahf
add
mov
dec
adc
pop
stc
push
pusha
lahf
in
pop
repz
arpl
xchg
pop
fldenv
xchg
mov
sbb
test
jb
jl
mov
enter
lds
adc
ja
test
push
xor
cmp
and
outsb
add
js
and
ds
push
sub
mov
hlt
movsb
das
or
xchg
roll
lahf
ds
dec
aad
hlt
lock
icebp
int
sub
mov
inc
jo
xchg
test
aas
popl
dec
pushf
addl
pop
sbb
mov
push
adc
mov
sti
dec
cld
aad
in
push
adc
fldcw
xor
sbb
xchg
xor
or
mov
add
fsts
fdivl
inc
lret
aaa
adc
mov
mov
das
adc
mov
add
adc
jnp
int
ficoms
jg
add
and
add
push
pop
jbe
xchg
adc
mov
pop
ja
mov
push
fwait
mov
mov
pop
mov
sbb
sbb
hlt
test
mov
push
pop
adc
test
dec
jo
or
dec
mov
pop
jbe
repz
mov
mov
mov
mov
inc
in
dec
push
jb
mov
ret
lock
push
dec
cwtl
mov
fwait
testl
mov
dec
shlb
push
pop
cmp
cld
push
pop
mov
test
cs
xchg
sbb
in
js
push
and
pop
jl
pop
popa
xchg
or
fwait
es
adc
je
dec
je
ds
imul
push
dec
jl
out
mov
out
fists
decl
addr16
fldenv
cmpsb
cmp
mov
mov
mov
pop
mov
das
jecxz
adc
div
add
sub
push
imul
lock
frstor
fdivl
fst
shll
push
xchg
out
roll
pushf
xchg
mov
adc
sub
pusha
mov
xchg
gs
les
mov
pusha
xor
mov
adc
mov
push
out
or
adc
js
ds
jae
adc
stos
cmp
call
scas
mov
dec
dec
fstpl
pop
jle
mull
jb
mov
mov
js
sbb
je
mov
jmp
mov
fistpl
cmp
jl
stos
jae
jno
jp
mov
fucomp
sarb
xchg
movsl
ret
cmp
sub
jbe,pt
out
shl
push
leave
jge
fstps
in
push
ret
pop
add
mov
jp
add
mov
xchg
dec
and
xlat
add
mov
es
ljmp
inc
sub
cwtl
lret
addr16
or
sub
or
insb
shrb
or
and
sbb
mov
pop
popa
mov
bound
icebp
add
push
idivl
fstl
out
movb
mov
outsb
xor
mov
push
mov
push
je
outsb
push
mov
pop
fbstp
cmp
jp
in
mov
jb
shll
xchg
movsl
pop
adc
repz
mov
xchg
mov
sub
call
outsb
or
pop
adc
cmp
mov
test
sti
mov
mov
lds
shrl
xchg
cltd
call
scas
mov
jge
push
cli
and
and
or
mov
loope
sub
mov
mov
test
bt
dec
mov
adc
pop
hlt
cs
jno
fmull
xor
xchg
xchg
les
xchg
out
jle
je
jg
stos
andl
aaa
std
std
js
mov
cmpl
ja
xchg
pop
inc
or
insl
loop
dec
cs
mov
scas
inc
aas
xor
daa
cmc
leave
jns
fildll
cmpsl
mov
or
stc
lret
lods
jbe
pop
movsb
xor
xor
leave
or
shlb
adc
cmc
pop
ret
xchg
movsb
lock
test
mov
push
inc
dec
fxch
dec
pop
cmp
dec
push
sar
inc
sbb
adc
enter
fsts
mov
push
mov
dec
rolb
xor
xchg
cwtl
scas
popa
aas
inc
jae
int
pop
addr16
movsb
clc
icebp
bound
stos
and
push
ret
out
mov
leave
aad
jns
insb
lcall
mov
adc
sbb
mov
add
jne
ret
fs
mov
and
mov
sub
xchg
push
sbb
std
int
or
outsb
xchg
rorb
mov
or
icebp
test
aam
pop
adc
insb
sbb
jbe
lods
mov
es
jg
jecxz
inc
inc
or
adc
adc
mov
je
cwtl
sbb
cmp
jl
scas
mov
test
repnz
subl
testb
xchg
xor
push
sbb
add
mov
mov
mov
jo
add
sarb
adcb
rorl
aad
insl
test
add
xor
test
sarl
hlt
mov
sbbl
mov
dec
push
mov
xor
add
jle
or
scas
repz
testb
pusha
stos
jb
insl
jne
cmp
mov
sub
push
ficompl
rolb
int3
fildl
mov
adc
fidivs
outsl
mov
jg
jle
loope
inc
mov
mov
testl
ret
dec
sbb
in
mov
pop
pop
popf
loop
mov
stc
xor
out
int
dec
add
pusha
mov
and
push
lea
fnstcw
rolb
repz
xor
and
clc
jl
fcomps
and
fisubs
test
xchg
movsl
sbb
jno
push
jmp
idivl
loop
pop
out
cwtl
or
push
ret
fcom
notl
cs
xorb
imul
pop
lock
call
push
jae
in
mov
out
push
shlb
aam
jge
xor
jbe
jle
outsb
enter
and
mov
loopne
daa
jo
xor
adc
pop
call
or
fs
xor
jo
mov
mov
cmc
xchg
sti
out
mov
cmpsb
inc
insl
add
or
int
sbb
sub
adc
xchg
sub
jecxz
and
lret
xchg
lret
jmp
pusha
push
dec
xchg
mov
inc
dec
popf
enter
cld
gs
and
test
xchg
lret
fs
sub
cmp
sti
jge
aad
out
out
push
std
outsl
mov
add
iret
aad
add
test
inc
mov
adc
in
inc
scas
push
mov
imul
fbld
cld
mov
stos
pop
fildl
das
jle
imul
rolb
xlat
push
sub
rcl
outsb
je
dec
cmp
fisttpl
enter
jle
dec
mov
fs
mov
and
xor
sub
out
inc
je
repz
add
outsl
movsb
daa
jbe
idivl
mov
scas
inc
or
and
add
xchg
add
mov
xor
je
sbb
call
movsl
cs
mov
or
adc
adc
and
add
sbb
in
pop
xor
xor
xor
mov
jbe
mov
xor
arpl
fldt
and
pop
add
bound
mov
shll
push
bndstx
je
mov
daa
push
insl
data16
movsl
ret
jle
pusha
icebp
dec
inc
mov
push
stos
insb
cmpb
rcrl
sbb
mov
mov
xor
mov
mov
je
or
fdivs
sbb
js
adc
push
int
sub
ja
in
test
out
cmp
nop
xlat
dec
pop
fnstenv
nop
pop
pusha
sbb
add
mov
pop
shlb
push
push
add
cmp
sti
mov
rorl
inc
mov
mov
test
cmpsl
mov
push
dec
rclb
stc
lods
mov
es
cmp
jo
xchg
cmp
or
shr
movsl
in
out
je
cmpsl
xchg
nop
subl
lret
mov
in
movlps
mov
cmp
push
ds
jbe
cli
cmp
fidivrl
mov
int
add
int
iret
sti
jb
cwtl
pop
jp
jns
sub
inc
decl
xchg
rorl
add
cmp
mov
iret
inc
cld
jnp
lret
and
push
scas
pop
mov
pop
add
push
sarl
sbb
stos
adc
and
or
cmp
inc
sbb
xor
stos
push
lds
out
test
xchg
and
pop
push
cmp
hlt
xor
loopne
inc
xor
push
pop
aam
stc
sahf
movsl
int
mov
cs
jo
push
jno
dec
adc
xlat
or
jp
daa
es
xchg
push
mov
inc
outsl
insw
in
jmp
mov
shll
ljmp
push
adc
lock
xchg
lods
sub
mov
cmp
sbb
cmp
push
xchg
adc
jg
fstpt
insl
fadds
xchg
out
test
fsubrp
jg
dec
mov
dec
fdivrp
sbb
xchg
xor
jecxz
sti
xor
mov
clc
aam
xor
out
xchg
ljmp
leave
mov
xor
bnd
clc
notl
push
lahf
sub
push
fisubl
inc
xlat
or
nopl
sub
sub
test
cmp
imul
add
fldt
jo
jge
ds
mov
adc
adc
daa
cmpsl
jle
gs
popf
out
movsl
sti
mov
cvtpi2ps
sub
inc
sbb
jl
push
fstpt
into
test
pusha
rclb
rcrl
pop
and
jl
ds
and
mov
mov
lret
out
je
loopne
aam
movl
and
in
icebp
cli
sti
jg
cmp
jnp
ljmp
call
push
inc
scas
scas
fstpt
pop
and
out
punpcklwd
inc
outsl
inc
push
insl
lds
adc
movsb
pushf
pop
xchg
sbb
xchg
dec
fwait
push
dec
inc
enter
pop
pop
or
aaa
inc
sub
cmp
loope
mov
push
xor
inc
ror
dec
pop
mov
sbb
in
mov
push
cmpsl
loop
cmpsb
push
rcll
xchg
mov
sbb
js
cmp
push
push
jae
in
add
fnstenv
jge
jg
sub
and
mov
out
lahf
pusha
xor
inc
sub
ljmp
sub
lcall
push
mov
out
pop
jp
mov
rcl
fs
fcomp
shll
mov
mov
rcrl
bound
sbb
dec
in
sbb
call
repz
dec
je
mov
dec
neg
lcall
enter
out
bound
push
push
lock
loopne
cmp
pop
push
dec
push
inc
into
je
sbb
add
mov
pop
movsb
or
in
mov
xlat
movsb
inc
pop
mov
or
push
out
adcb
fs
fcoms
pushf
cltd
add
rorb
sbb
or
mov
lds
stos
sbb
mov
or
stos
lds
mov
mov
push
push
jmp
into
pop
cmp
and
pop
pop
movsb
push
sbb
daa
or
jg
sbb
popf
jbe
lock
leave
popf
add
popfw
iret
leave
aam
push
xor
sbb
xchg
lods
pop
repnz
jnp
jecxz
into
cli
mov
fldt
sbb
ficoml
stos
inc
and
push
xchg
pop
adc
sbb
ret
pop
aam
xor
push
rorl
adc
out
movsl
test
sub
pop
mov
cld
push
daa
dec
iret
das
loope
ret
shlb
pop
aas
or
imul
stos
sbb
int
sbb
aas
mov
mov
xor
lret
jp
inc
gs
sub
xchg
jmp
cmp
pop
jnp
fwait
sbb
or
sbb
out
adc
aaa
ss
xchg
add
dec
xor
add
jns
cs
pusha
call
insl
int
lds
xor
pop
stos
incl
jb
adc
in
and
ss
jge
icebp
rcr
pop
loopne
out
call
push
push
lods
cld
movsb
push
cli
stc
cmp
outsl
jge
cmp
mov
mov
adc
dec
fisubrs
sti
arpl
sbb
mov
xchg
scas
movsb
cmp
xchg
xor
jp
sub
mov
mov
out
push
add
or
lahf
cwtl
notl
pop
dec
shll
pushf
adc
dec
fcmovbe
shll
pop
push
jge
pop
les
mov
jne
sub
ficomps
sub
hlt
push
adc
and
stc
cmp
ret
jbe
and
mov
dec
js
mov
data16
shll
bound
ss
push
repnz
push
pop
hlt
push
lods
clc
sbb
push
inc
nop
mov
mov
pop
and
lock
add
jnp
adc
lods
push
adc
punpcklwd
add
adc
shlb
add
js
add
xor
aaa
add
push
pop
inc
dec
xor
inc
ss
xor
pop
dec
inc
add
pop
xor
dec
inc
pop
xor
push
pop
xor
push
cmp
add
push
xor
dec
inc
pop
xor
dec
inc
aaa
add
push
xor
pop
inc
inc
push
pop
inc
pop
push
add
xor
xor
inc
add
xor
xor
xor
push
pop
inc
add
push
pop
inc
pop
push
xor
add
xor
inc
cmp
push
cmp
push
xor
cmp
pop
push
dec
dec
add
pop
pop
dec
cmp
cmp
add
xor
dec
inc
xor
pop
cmp
add
xor
push
push
inc
pop
push
xor
push
inc
push
pop
dec
xor
cmp
inc
inc
pop
push
pop
push
dec
pop
push
xor
pop
push
push
cmp
dec
push
push
dec
xor
dec
dec
xor
push
dec
cmp
pop
inc
dec
pop
inc
push
push
pop
inc
add
xor
dec
cmp
push
push
add
dec
xor
xor
inc
dec
xor
ss
dec
cmp
push
push
aaa
xor
xor
pop
push
push
push
dec
pop
inc
add
pop
xor
pop
xor
inc
xor
xor
xor
push
xor
dec
xor
push
add
pop
add
push
add
xor
pop
add
add
push
add
add
dec
add
xor
pop
add
push
add
add
xor
pop
add
add
add
xor
inc
add
inc
add
xor
add
inc
add
add
inc
add
pop
add
add
push
add
pop
add
dec
add
add
inc
add
xor
add
inc
add
add
add
pop
add
xor
pop
add
add
push
add
add
pop
add
dec
add
xor
add
dec
add
add
aaa
add
inc
add
add
inc
add
xor
add
inc
add
dec
add
push
add
inc
add
add
add
pop
add
add
dec
add
add
cmp
xor
pop
add
add
pop
add
pop
add
add
add
push
add
add
xor
pop
add
inc
add
push
add
dec
add
cmp
aaa
add
add
dec
add
pop
add
inc
add
xor
dec
add
push
add
add
dec
add
dec
add
xor
add
add
or
add
rolb
add
or
add
xor
add
pusha
pop
add
loopne
add
adc
add
sub
add
pop
or
adcb
cmpb
add
mov
or
adc
add
lock
addb
add
add
add
add
add
add
add
in
push
add
in
push
add
add
addb
add
add
add
add
add
add
add
sbb
add
add
add
add
add
dec
pop
add
add
add
add
pop
add
test
add
lcall
xorb
add
loopne
add
add
add
add
add
add
add
incb
add
insb
adc
add
add
subb
add
add
add
add
add
add
add
mov
add
addb
add
add
add
add
add
add
add
inc
or
sbbb
addb
add
add
add
add
add
add
add
outsb
or
xorb
addb
sbbb
cmpb
add
mov
add
add
add
add
add
add
add
rorb
add
jae
add
call
add
add
add
add
add
add
add
jmp
add
add
add
add
sbb
subb
add
dec
add
addb
add
add
add
add
add
add
add
repz
add
add
js
add
add
add
add
add
add
add
or
adcb
add
test
add
rolb
bound
add
fadds
addb
add
add
add
add
add
add
add
or
add
add
add
add
add
add
or
add
add
add
add
add
add
add
add
add
or
add
add
add
add
add
add
add
add
add
or
add
add
add
add
add
add
add
add
add
or
add
add
add
add
add
add
add
add
add
or
add
add
add
add
add
add
or
add
add
add
add
add
add
or
add
add
add
add
add
add
or
add
add
add
add
add
add
or
add
add
add
add
add
add
add
add
or
add
add
add
add
add
add
add
add
or
add
add
add
add
add
add
add
add
or
add
add
add
add
add
add
add
add
or
add
add
add
add
add
add
add
add
add
or
add
add
add
add
add
add
add
add
add
or
add
add
add
add
add
add
add
add
add
or
add
add
add
add
add
add
add
add
add
or
add
push
add
add
add
add
add
or
add
push
add
add
add
add
add
or
add
push
add
add
add
add
add
or
add
push
add
add
add
add
add
or
add
add
add
add
add
add
or
add
add
add
add
add
add
or
add
add
add
add
add
add
or
add
add
add
add
add
add
or
add
add
add
add
add
add
add
add
or
add
add
add
add
add
add
add
add
or
add
add
add
add
add
add
add
add
or
add
add
add
add
add
add
add
add
or
add
push
add
xor
add
adc
add
in
add
add
add
inc
sbb
add
add
in
add
add
add
inc
and
add
in
add
add
add
pop
add
out
add
in
add
add
add
inc
aaa
add
or
add
in
add
add
add
dec
inc
add
adc
add
in
add
add
add
pusha
dec
add
or
add
in
add
add
add
insb
push
add
or
add
in
add
add
add
js
add
or
add
in
add
add
add
test
or
add
in
add
add
add
mov
add
or
add
add
add
add
add
add
in
add
add
add
movsb
jg
add
or
add
add
add
add
add
add
in
add
add
add
les
add
in
add
add
add
int3
lcall
in
add
add
add
fsubs
add
in
add
add
add
in
add
or
add
in
add
add
add
in
mov
add
add
in
add
add
add
add
add
in
add
add
add
or
add
adc
add
in
add
add
add
sbb
add
or
add
in
add
add
add
sub
add
or
add
in
add
add
add
xor
add
adc
add
in
add
add
add
inc
in
add
adc
add
in
add
add
add
push
cmc
add
or
add
in
add
add
add
pop
incb
add
or
add
add
add
add
add
add
add
in
add
add
add
js
add
or
add
in
add
add
add
sbbb
add
add
in
add
add
add
or
add
pop
add
inc
add
xor
pop
add
pop
add
aaa
add
add
xor
dec
add
cmp
push
add
add
dec
add
add
add
push
add
or
inc
add
add
add
dec
add
push
add
add
add
aaa
add
add
add
cmp
cmp
inc
add
xor
dec
add
inc
add
dec
add
add
add
push
add
pop
add
add
or
dec
add
push
add
push
add
add
xor
or
inc
add
push
add
xor
add
add
add
push
add
add
add
inc
add
add
add
xor
push
add
dec
add
add
inc
add
add
xor
pop
add
inc
add
add
pop
add
add
or
push
add
push
add
add
add
dec
add
push
add
push
add
or
pop
add
dec
add
xor
aaa
add
inc
add
add
add
cmp
dec
add
xor
inc
add
add
cmp
pop
add
dec
add
add
add
dec
add
pop
add
add
xor
dec
add
add
dec
add
pop
add
dec
add
push
add
xor
inc
add
add
pop
add
add
add
cmp
cmp
push
add
add
add
push
add
pop
add
xor
add
add
add
push
add
add
dec
add
xor
xor
pop
add
add
pop
add
aaa
add
add
add
add
add
add
inc
add
add
inc
add
pop
add
add
cmp
cmp
push
add
xor
add
pop
add
push
add
add
add
push
add
push
add
add
add
add
add
push
add
inc
add
pop
add
push
add
pop
add
add
xor
inc
add
pop
add
pop
add
add
push
add
xor
inc
add
inc
add
add
push
add
xor
pop
add
or
push
add
add
xor
pop
add
push
add
inc
add
pop
add
add
add
dec
add
pop
add
push
add
push
add
add
xor
pop
add
push
add
dec
add
inc
add
dec
add
add
jmp
jle
js
aam
jae
sbb
add
pop
add
or
and
ficomps
test
and
loop
lea
addr16
push
sti
pop
sti
mov
lds
dec
jne
lret
xchg
je
es
jp
das
mov
mov
mov
in
dec
cmp
mov
inc
mov
inc
mov
or
sbb
mov
lcall
and
mov
bound
inc
dec
or
pop
aas
int
lods
mov
pop
pop
ds
pushl
sbb
les
fwait
pop
call
push
mov
in
push
jmp
xchg
mov
cmp
stc
cltd
jne
mov
adc
push
dec
enter
insb
idivl
adc
addl
inc
mov
ret
and
mov
push
mov
jecxz
incl
int3
aam
mov
sahf
xor
mov
add
sub
sub
mov
jb
fcomp
dec
es
mov
adc
or
mov
ljmp
bound
out
enter
out
jns
xchg
cmp
into
outsb
lods
push
fadd
pushf
lret
js
cli
js
int
pop
test
push
fcompl
or
xor
decb
call
push
mov
imul
xchg
inc
mov
test
pop
call
cmp
xor
push
psubsw
loop
in
iret
sbb
lret
jmp
push
fcom
jo
push
xchg
fldcw
std
bound
jecxz
cmpsl
mov
int3
or
push
cmp
scas
arpl
and
push
orl
fidivl
xor
cmp
inc
inc
jae
clc
inc
test
mov
sar
jle
sub
gs
mov
jns
es
push
shrl
mov
lds
jl
inc
test
movsb
inc
mov
add
sbb
mov
loop
jns
rol
pop
dec
adc
out
lahf
adc
bound
imul
fsubr
scas
sub
jnp
gs
jp
testb
sbb
push
imul
bound
cmpsl
mov
xor
inc
imul
mov
xchg
loopne
adc
je
shlb
mov
jmp
push
or
cmp
aas
movsb
xor
sbb
lret
lods
stc
push
push
jg
adc
aaa
enter
fdivs
lods
test
mov
je
add
fdiv
dec
pop
xor
push
jge
mov
sub
cwtl
xor
pushf
ja
jle
repz
jbe
fucomip
pop
push
mov
push
add
push
sahf
fisubrs
into
iret
push
repnz
sub
scas
mov
cmp
in
ds
and
push
popa
ds
bound
cmpsl
sub
mov
cmpsl
add
lahf
xor
push
dec
fdivl
adc
push
inc
int3
and
push
jo
lret
mov
mov
jae
in
inc
leave
into
jecxz
aaa
inc
mov
pop
cmc
xchg
orl
or
in
push
loop
adc
xchg
push
push
push
out
xchg
mov
cmp
rcrl
xchg
mov
sahf
adc
outsb
stos
xor
sub
mov
bound
mov
push
insb
cmp
mulb
fists
push
xchg
stc
inc
call
mov
dec
rorl
adc
cmp
mov
into
roll
mov
jmp
repnz
cmp
pop
mov
out
jno
mov
inc
cld
inc
xchg
mov
in
mov
sub
out
nop
mov
out
jns
push
pop
shl
dec
je
jg
sub
jbe
les
push
cltd
pusha
mov
fnclex
cmp
mov
in
cmp
sub
push
add
not
dec
jo
xchg
dec
imul
dec
mov
dec
fwait
mov
rol
lcall
xchg
xchg
push
imul
dec
jl
xlat
dec
adc
push
pop
fdivrl
mov
xchg
out
aam
jne
xor
xchg
push
pop
lahf
mov
jbe
test
add
xor
stc
aam
cmc
pop
and
fdivrl
add
jbe
xchg
inc
add
inc
fs
test
add
dec
push
push
mov
les
or
addr16
pop
sub
or
fst
xchg
inc
cmp
sbb
dec
pop
mov
stos
mov
outsb
test
sub
ljmp
int
and
dec
inc
insb
fistl
jb
mov
xor
ja
mov
popf
mov
mov
sbb
dec
cld
rol
or
add
add
fimuls
pop
sbb
jno
push
jno
inc
mov
mov
and
sub
ljmp
pop
jns
xchg
mov
aaa
cmp
fildl
pushl
cmp
dec
popf
popf
jne
cmpsl
push
out
lahf
movsb
cs
or
adc
cli
inc
mov
ret
fcmovne
fs
rcrb
mov
or
out
fwait
roll
movsb
pop
pop
add
sub
js
mov
push
sbb
mov
loope
insb
scas
push
jp
push
outsb
rcrb
dec
inc
push
push
jnp
adc
jge,pt
mov
xor
lods
movsl
pop
dec
push
daa
outsl
repnz
add
dec
xchg
outsl
out
pushf
in
mov
jmp
and
add
in
lahf
cmp
test
cmp
inc
push
push
jno
ljmp
loopne
insb
test
daa
and
jp
inc
icebp
mov
inc
inc
aas
iret
jge
and
and
push
mov
cli
mov
aad
mov
lea
inc
pop
test
pop
stos
mov
and
adc
orw
lret
pop
pop
out
mov
add
hlt
adc
xchg
aaa
lcall
push
insl
sbb
push
xor
pcmpeqd
xchg
movsl
xchg
pop
mov
dec
vpunpckhbw
test
rcrb
dec
cmp
jp
jle
cmp
xchg
xchg
mov
jge
or
lock
dec
adc
leave
jbe
aam
pop
sub
fwait
ja
mov
dec
xchg
stos
inc
adc
jge
jecxz
mov
mov
clc
or
das
es
fldenv
imul
in
mov
mov
pop
xor
shlb
and
push
pop
mov
pushf
inc
out
pop
or
pop
loop
in
ret
xchg
push
pusha
jmp
lret
add
and
mov
pusha
add
add
and
add
ret
xor
enter
mov
mov
push
pop
sub
xchg
mov
mov
sub
pusha
jb
xor
frstor
mov
ret
add
xlat
lods
xchg
or
cmp
dec
sub
or
lret
lret
test
sub
loop
lock
ljmp
add
ret
or
push
fdivl
pop
sbb
adc
jo
xor
mov
dec
dec
aam
mov
push
pop
lahf
pop
in
adcb
cli
cmpsl
arpl
shll
push
mov
push
stos
jp
or
pop
lahf
and
cs
sub
rcrl
popf
sbb
add
in
dec
push
xlat
add
clc
pop
and
xchg
leave
cmpl
mov
pop
in
sahf
add
sbb
xchg
iret
push
je
roll
aad
mov
inc
stos
xchg
pop
jecxz
jnp
in
sahf
lea
push
ljmp
bound
mov
lock
or
jmp
clc
mov
or
sbb
inc
dec
push
or
out
inc
fcmovnb
cld
pushl
out
pushf
in
mov
pop
lods
add
call
sahf
mov
jne
outsb
dec
sti
mov
sti
fldl
fwait
lahf
dec
cmp
loop
jmp
clc
inc
jo
lock
dec
and
jecxz
clc
jmp
dec
xchg
jge
or
dec
scas
test
adc
dec
xlat
xor
aas
cmp
mov
je
push
mov
dec
sbb
or
test
xchg
mov
test
adc
sarl
xchg
mov
xor
aas
js
and
icebp
popf
rcll
aaa
add
loop
pop
das
out
mov
popf
sbb
insb
lea
insl
fistl
xlat
push
scas
mov
mov
xchg
out
insl
sarb
pop
jo
cli
pusha
outsl
std
shr
xchg
in
add
xchg
sub
mov
pop
addl
mov
mov
adc
and
stos
adc
call
cmp
imul
mov
lock
ficoms
sbb
mov
js
ja
inc
xchg
test
scas
sbb
cmp
enter
out
std
mov
pop
popa
sti
xchg
les
mov
je
pusha
adc
dec
push
push
ss
or
jo
pop
shlb
xchg
mov
aas
push
inc
mov
icebp
add
or
fnstcw
push
pop
inc
push
adc
pop
push
mov
pop
xchg
enter
shlb
je
or
xchg
repz
xchg
call
insb
xor
ret
outsl
ja
pop
jecxz
hlt
cli
insb
mov
xor
mov
ss
jo
idivl
xchg
xor
insl
or
les
pop
es
xchg
out
mov
aam
xlat
adc
jl
daa
push
cmp
in
decl
push
rorb
clc
loop
addr16
pop
dec
dec
add
push
dec
fcompl
xchg
mov
dec
jmp
aaa
xor
adc
cmp
loopne
dec
and
out
xchg
clc
mov
mov
scas
add
mov
cmpsb
pop
jg
inc
mov
and
sbb
clc
sbb
jb
test
aas
outsl
or
xlat
or
and
mov
arpl
call
rolb
imul
push
lock
xor
ja
das
ljmp
bound
push
mov
popa
push
sbb
inc
or
jae
negl
lds
sub
xchg
mov
sahf
shl
adc
adc
push
je
mov
and
push
lds
inc
push
sbb
or
lea
outsl
gs
sub
jae
test
jae
cmp
mov
inc
dec
cs
mov
test
gs
pop
sarl
cli
cld
into
pop
dec
lods
cmp
or
sub
imul
es
sub
jno
std
sbbb
in
pop
stos
fxam
lahf
hlt
jo
push
and
je
sbb
pop
pushf
adc
icebp
jo
imul
sbbb
ror
cs
dec
out
roll
aaa
xor
sub
repz
jno
out
cmp
dec
scas
add
inc
dec
dec
jmp
add
mov
int3
xchg
std
sub
mov
sub
pop
hlt
rcll
lahf
test
jb
lret
sbb
cmp
and
lds
imul
insl
sub
lock
lea
add
sbb
pop
xor
cmp
adc
xor
inc
jae
ret
sbb
cmp
sbb
or
in
rorb
enter
lea
xchg
stos
dec
fidivs
ja
jge
lret
pop
mov
shrb
cmp
pop
cs
notl
stc
ret
mov
sub
mov
xor
fwait
in
imul
xor
loop
loope
sbb
or
jb
push
mov
or
lock
xor
push
sub
push
mov
mov
js
loope
mov
js
data16
inc
sbb
repz
xor
push
in
es
dec
mov
jns
addr16
dec
pop
dec
fbld
jecxz
decl
adc
xor
mov
and
push
xchg
xchg
test
les
dec
in
jp
adcl
inc
xchg
enter
repnz
test
xchg
mov
sbb
scas
dec
jb
loop
xchg
xchg
jmp
push
xor
lahf
jbe
enter
xor
fsubs
cmp
fcompl
xchg
out
mov
add
dec
mov
jp
lcall
xchg
pusha
add
inc
cmpsb
lea
pop
push
jo
cmp
movsl
dec
repnz
f2xm1
mov
push
loopne
in
into
popf
cmp
pusha
dec
sbb
clc
xchg
inc
in
pop
cli
cli
xor
jns
int3
jg
pushf
adc
mov
lods
lcall
dec
hlt
les
dec
xlat
pop
lret
jne
xlat
mov
lods
or
dec
out
insb
sbb
xchg
pushf
andl
testb
sbb
jb
scas
ror
push
pop
mov
cmp
push
dec
stc
fndisi(8087
add
and
add
jno
daa
arpl
push
pop
dec
cmpsl
pop
mov
inc
fsubr
jae
or
mov
mov
pop
cmpsl
call
pop
xor
test
pop
mov
stc
pop
add
dec
imul
mov
int
scas
aam
incl
jp
lods
inc
push
int3
std
rcrl
pop
push
stos
xchg
xor
sub
js
dec
sbb
cmp
out
insl
scas
leave
test
idivl
stc
daa
aam
mov
leave
mov
and
or
adc
jno
xchg
xchg
ljmp
push
mov
das
fs
idivl
testb
and
sbb
ret
lock
les
icebp
arpl
insl
mov
sub
pusha
xchg
imul
xchg
add
push
mov
xchg
clc
int3
arpl
dec
scas
add
sbb
and
out
mov
daa
mov
or
ds
or
lods
hlt
adc
rcr
imul
repz
mov
mov
push
xlat
xor
mov
inc
fcmovnb
aaa
es
push
lret
adc
mov
sub
inc
lea
lea
sbb
cmp
ss
ret
not
mov
adc
pop
outsb
test
nop
sar
inc
int
cmp
fistpl
sub
rcll
dec
xchg
shrl
pop
popf
sbb
lret
popf
fldpi
mov
test
not
add
fistpll
fidivrl
ds
outsl
out
mov
sub
inc
cmpsl
mov
out
cmpsb
sbbb
pop
andl
aaa
cmp
sub
ss
add
ja
rcll
test
push
adcl
add
js
das
or
repnz
ret
push
test
je
stos
lret
dec
mov
ja
jnp
pop
test
inc
gs
push
dec
cmp
or
adc
push
add
fndisi(8087
movl
gs
dec
movsb
adc
sbb
fadds
mov
jmp
jl
les
push
outsb
fstpl
ret
int
push
adc
insl
push
dec
pushf
push
je
stc
test
push
mov
sahf
mov
stc
outsl
add
pop
mov
pop
push
pop
lahf
mov
cmpsl
hlt
loopne
inc
enter
in
das
jg
pop
mov
out
dec
and
divl
fstps
pop
bound
out
pop
fwait
lods
insb
addb
xor
dec
add
mov
mov
outsl
mov
cmp
cs
les
jns
out
ja
ss
mov
lods
adc
movsb
es
push
inc
pop
jnp
out
push
adc
sbb
shll
xor
gs
and
push
xor
std
test
enter
pop
or
les
sahf
cli
scas
sahf
out
lods
cmp
or
ja
outsb
or
ret
cmp
sub
ficoml
mov
cmp
arpl
test
adcl
dec
rcrb
inc
test
jg
test
pop
cs
jl
mov
mov
fistl
aas
lret
mov
in
push
jmp
sub
jbe
ljmp
dec
je
inc
sub
movsb
in
in
mov
cmp
sbb
mov
fst
xor
fwait
xchg
sbb
inc
or
jl
push
xor
data16
lret
pop
es
fidivs
mov
sub
loopne
adcl
roll
das
out
call
inc
lea
sub
popa
sbb
jmp
js
push
mov
dec
sub
aaa
insl
into
test
push
add
mov
mov
subl
jg
shlb
rcrl
cli
mov
pop
mov
mov
pop
test
outsl
jg
jmp
ja
scas
shr
test
outsb
sub
mov
pop
lret
in
in
add
sub
repz
and
rorl
add
sub
adc
fmull
add
insl
into
mov
mov
push
or
jno
adc
lods
sbb
out
ret
cmp
jbe
nop
data16
mov
dec
repz
or
add
mov
xchg
fwait
push
dec
test
dec
sub
lods
pop
mov
adc
fistl
ret
dec
dec
inc
fwait
jle
popf
mov
xchg
add
xchg
sarl
mov
addr16
outsl
lahf
mov
xchg
xor
inc
adc
sti
sarl
out
and
cmp
sti
mov
sub
jo
inc
ja
adc
dec
pop
arpl
push
lods
xchg
fmuls
stos
rol
jbe
pop
xlat
movsb
les
jo
cmp
int3
scas
dec
sarl
lods
adc
or
out
je
mov
push
xor
cmpb
mov
iret
ljmp
cmc
mov
test
adc
cmp
negl
cmc
rcrb
jbe
pushf
sub
cmp
jmp
pop
cs
xchg
mov
pop
push
inc
xor
add
adc
xchg
push
pop
pushf
rcrl
arpl
cmpsb
ror
fimull
pop
sahf
mov
push
mov
test
dec
test
in
sbb
pop
call
sub
sub
inc
sahf
stos
rorb
sbb
gs
jo
adc
cs
fs
sbb
mov
cmp
sahf
fisttpl
pop
inc
pop
loop
stc
dec
jl
and
or
lods
sbb
je
sbb
and
lods
push
mov
mov
push
mov
or
iret
sub
jno
mov
pop
dec
dec
mov
into
and
jns
pop
jnp
aad
inc
test
aad
push
mov
stos
int
js
mov
jne
bound
mov
fsubl
repz
adc
push
aam
cld
fisubrl
ja
inc
out
sbb
and
fmulp
rcrl
sub
jle
sbb
or
dec
jmp
add
dec
or
mov
iret
repnz
jmp
out
xor
push
add
lcall
jge
imulb
aam
xor
jecxz
mov
fistpl
mov
cld
xchg
stos
sbb
stc
mov
es
dec
jae
outsb
adc
les
or
aam
add
add
repz
movsb
adc
movsb
jo
jae
incb
add
pop
add
mov
xchg
add
xchg
push
cmc
cld
fldt
das
sub
out
inc
pop
repz
ja
shlb
cwtl
movsl
adc
add
insl
notl
loop
div
add
mov
dec
xor
mov
jge
mov
xchg
sub
dec
pop
cs
sbb
and
ficompl
mov
stos
jge
popf
xchg
ljmp
cs
aas
js
loopne
inc
insl
ds
ficoml
pop
daa
cmp
mov
sub
xchg
faddl
mov
sbb
sub
stos
or
mov
push
insb
insb
cmpsb
mov
mov
cmp
pop
es
cmpsb
jl
scas
xchg
sbb
out
scas
das
inc
jo
inc
pop
ret
and
imul
inc
dec
lret
jbe
xor
inc
xchg
leave
lret
xchg
cmpsl
bound
fdivl
test
jge
xor
jge
add
popf
push
aas
cwtl
icebp
rolb
push
cmp
mov
icebp
pop
lret
sub
and
addr16
adc
push
pop
mov
xlat
or
dec
cmp
mov
in
xchg
in
popf
xchg
cltd
inc
add
xor
shll
mov
inc
pop
ja
loop
imul
or
lea
and
in
xor
inc
xchg
mov
mov
inc
fldt
mov
sub
mov
mov
das
adc
repz
inc
sub
sahf
mov
jo
insl
insb
repz
aam
mov
decl
imul
jb
dec
jecxz
cli
add
das
in
enter
jmp
add
adc
stos
cmp
orl
cld
adc
push
lods
loope
jb
fs
push
inc
or
xlat
test
dec
and
rcr
shr
ds
lahf
stc
inc
fiadds
mov
pushf
andb
fcomp
add
lret
or
mov
nop
pop
jl
call
mov
push
ljmp
push
lret
test
cs
cmp
adc
sahf
xchg
in
fsubrs
xor
adc
sbb
addl
push
xchg
les
dec
sbb
adcb
pop
in
or
xor
adc
incl
inc
mov
add
rcrb
pop
pop
adc
ds
inc
sub
fs
jge
jmp
sbb
jge
or
repz
sbb
loope
cmpsl
mov
push
shrl
add
stos
jg
in
aad
xor
movsl
js
and
sub
mov
and
adc
push
jo
fucom
jb
outsb
sarl
in
dec
xchg
lods
scas
sti
mov
flds
push
pop
inc
decb
push
cmp
cs
mov
push
xor
adc
addb
cmp
popa
cmp
add
inc
rol
sbb
sbb
std
adc
xchg
jge
jge
add
fxch
push
jbe
mov
pop
mov
jb
nop
ret
int3
in
xchg
lea
jne
out
xchg
movsl
lahf
popf
mov
and
sub
je
cld
or
lahf
fstpt
mov
push
stos
imul
sub
sbb
pop
divb
in
loopne
cmp
mov
add
xor
sti
jno
imul
add
dec
lods
jg
or
out
scas
pop
out
cmpsl
scas
sub
pop
js
nop
push
int3
in
inc
cwtl
push
faddl
outsb
jle
js
cmp
push
xor
mov
jp
fsubs
jmp
fdivrl
mov
xchg
push
rep
pop
stos
cs
pop
rcrl
sbb
loop
js
dec
shrd
shlb
sbb
jge
cmp
mov
dec
lock
mov
je
ror
adc
sbb
in
push
test
lock
stos
icebp
push
adc
in
dec
dec
jmp
bound
nop
mov
lret
pfcmpgt
fldt
popa
mov
popf
jmp
jle
dec
add
hlt
sarb
daa
sub
cli
adc
xlat
rcrl
cmp
repnz
sub
ss
add
cmc
daa
aaa
push
js
lret
popf
mov
sub
inc
adc
or
int3
push
jbe
sub
jno
xchg
mov
cmp
icebp
or
fs
xchg
xor
push
mov
jle
add
pusha
ret
adc
popa
xor
mov
hlt
or
scas
mov
mov
add
jnp
stos
mov
jns
and
fsubrs
ret
mov
fnsave
fsubl
or
pop
pushf
out
xor
add
push
lcall
stos
ss
sbb
les
cmpl
xor
jae
sbb
jp
bound
add
push
cwtl
dec
mov
in
cmp
gs
or
add
outsb
xchg
or
out
dec
xchg
mov
dec
stos
repnz
cmp
jnp
pushf
lahf
aas
mov
inc
and
jb
mov
int
test
or
mov
insl
ja
cmp
cs
cli
movsl
dec
pop
add
mov
push
xor
rcrl
sub
cmp
jmp
xor
push
mov
mov
in
ss
shr
mov
bound
pusha
loopew
loopne
lahf
or
fisttpll
push
mov
rorb
mov
popf
mov
mov
scas
stc
sbb
mov
sbb
jno
test
movb
js
lret
xchg
std
cmc
adc
pop
adc
dec
mov
jle
jno
fnstsw
andl
fidivs
push
ja
nop
daa
popa
mov
je
and
iret
fwait
cs
push
movsb
in
jmp
sub
push
or
test
test
xchg
aad
jnp
inc
cmpsb
and
mov
or
movsl
iret
and
je
and
daa
fnsave
pop
sti
ss
adc
cwtl
xchg
sub
xchg
xor
add
or
xor
ja
sti
std
sub
je
add
pop
daa
cmp
aaa
pop
xor
out
les
adc
cli
pop
insb
xchg
adc
mov
loope
push
or
ret
mov
add
shlb
jg
stc
ficoms
inc
and
adc
adc
outsl
add
and
add
xor
dec
ljmp
enter
cmp
add
adc
jecxz
adc
ret
mov
or
notl
mov
fwait
xor
jns
call
dec
dec
xor
xchg
es
lret
scas
pop
les
sbb
dec
xchg
mov
data16
jmp
adcb
or
jne
stos
xchg
rcrb
aas
imul
mov
jno
fimuls
mov
cli
mov
ja
leave
push
ret
xchg
aad
pop
shr
mov
lds
mov
mov
sti
add
or
sub
rcrb
mov
scas
jae
mov
and
jb
repz
or
pop
fcompl
repz
ljmp
xor
pop
sub
ja
sbb
jg
pop
ficoml
pop
stos
fstps
mov
or
push
outsl
inc
imul
shl
inc
mov
repz
mov
fdivs
les
cmp
sub
and
gs
loop
xchg
dec
jb
xchg
and
sti
adc
add
addb
adc
fwait
push
lcall
out
test
out
sbb
addr16
ret
xorl
fsts
or
xor
adc
ror
sub
mov
nop
mov
hlt
movsl
test
insb
inc
push
adc
push
lock
shll
enter
mov
pushf
fwait
push
test
pop
mov
aad
shr
icebp
adc
pop
pop
add
lods
test
movsb
mov
push
andb
or
cmp
mov
push
lret
sub
push
lret
rcrl
dec
mov
mov
insl
mov
ficoms
push
cmc
push
mov
mov
aas
shll
pop
scas
scas
cmpsl
jnp
mov
inc
fdivs
cmp
push
mov
sub
and
aam
push
jg
out
sub
adcl
das
ficoms
xor
cmc
lret
out
ss
movsb
pop
stos
sub
into
dec
push
leave
pusha
jb
inc
mov
pushf
repz
sbb
jmp
scas
jg
testl
xbegin
inc
andl
or
popf
aas
ret
addr16
xchg
scas
xchg
lret
imul
movsb
aad
int3
cmc
xchg
or
notl
sbbl
cmpsl
inc
aaa
ja
aaa
mov
mov
in
xor
xor
out
xchg
and
push
inc
add
pop
and
clc
push
dec
inc
mov
andl
stos
scas
jmp
sub
movsb
cmpsb
ficoms
pop
insb
mov
mov
and
clc
mov
dec
daa
mov
mov
add
mov
cmc
es
jg
dec
cmpsl
call
jae
add
call
popa
insb
fsts
xorb
mov
or
cmc
cld
pop
inc
mov
enter
mov
cmp
jp
pop
cmp
fwait
inc
sub
pop
pusha
insb
icebp
push
dec
addr16
jle
addl
mov
sub
fs
notb
scas
jns
imul
cmp
je
jo
pop
push
outsb
inc
sbb
and
nop
in
pusha
movsl
mov
push
into
out
xor
sbb
jae
xor
push
lea
cmp
jg
mov
inc
mull
mov
jp
mov
loopne
sbb
push
popa
cmp
push
test
push
ljmp
mov
adcl
lock
nop
insl
and
pop
mov
mov
rcr
cmpl
or
lahf
add
dec
xchg
ss
test
stc
stos
push
lret
push
jle
sub
dec
sbb
bound
push
lahf
or
sarb
lahf
sub
or
xchg
mov
inc
mov
jns
dec
cmp
cmpsb
fs
dec
daa
and
bnd
pop
loop
inc
and
mov
and
jp
lods
add
out
out
ja
bound
lock
mov
out
lcall
repz
lods
int
push
jo
movsb
jbe
push
in
pop
push
push
sub
lahf
mov
gs
dec
push
adc
loope
mov
xchg
add
sbb
test
mov
or
pop
pop
add
dec
call
push
jp
icebp
push
dec
loopne
sub
push
lea
das
adc
inc
mov
iret
loop
or
hlt
scas
jb
sub
test
repnz
jle
inc
test
ret
imul
add
cltd
jmp
sub
pop
out
sbb
and
jp
mov
je
repnz
adc
clc
repnz
pop
pop
fidivrl
mov
dec
xorl
dec
fnstcw
out
outsl
dec
insl
xchg
cmp
lods
in
lods
aas
pop
mov
push
roll
std
or
dec
mov
out
xchg
sbb
cs
in
add
mov
aad
xchg
sbb
in
or
testb
push
movsl
iret
xor
stos
aaa
mov
sub
jge
out
and
repnz
clc
xchg
test
jecxz
mov
cli
loopne
imul
add
mov
fwait
cli
dec
stos
mov
cmp
iret
mov
mov
movsb
cmpsl
cmpsb
push
cmp
pushf
out
adc
js
cmp
push
test
ret
ret
mov
loop
cli
or
dec
xchg
ss
xchg
push
sub
mov
mov
jnp
aaa
in
fs
cli
ljmp
xchg
lret
mov
iret
mov
inc
pop
lret
sub
sub
jbe
aaa
arpl
mov
test
push
rorl
bound
stos
mov
and
sahf
clc
or
int
ja
xchg
rcrl
lret
jg
lcall
ljmp
adc
popf
xor
xor
sbb
pop
insl
orl
call
ds
mov
pop
aam
adc
dec
leave
lods
in
movsl
push
push
jbe
insl
in
mov
xchg
outsl
cmp
cwtl
cltd
push
int3
ja
outsb
push
push
fcoml
into
rcl
fsub
mov
cli
mov
dec
and
arpl
sub
pop
dec
test
jo
ljmp
mov
aaa
es
repz
loopne
push
xchg
popa
push
or
push
inc
or
pop
cltd
rol
lea
push
add
and
add
adc
ja
mov
and
or
outsl
or
push
mov
and
sub
popf
mov
or
shr
cmpsl
dec
pop
cmc
dec
cmp
inc
lcall
push
clc
xchg
jecxz
sbb
mov
jns
xchg
call
dec
clc
cmp
pop
and
mov
pop
sub
jnp
fs
jnp
dec
cmp
mov
cwtl
fisttpll
and
out
push
jmp
cmc
cmp
pop
mov
pop
mov
pop
mov
fcoml
xchg
jecxz
ds
cmp
cltd
pop
das
dec
jecxz
das
pop
dec
sarl
jne
add
insl
sbb
sbb
cltd
xor
dec
lahf
cmpsl
push
dec
push
loope
jmp
js
in
or
push
gs
push
xor
mov
xor
sub
mov
xchg
fs
rorl
mov
std
xchg
jl
mov
jmp
lods
test
fbld
jbe
push
ret
dec
sub
test
jnp
or
mov
xor
sbb
inc
imul
fwait
jo
fsubl
es
mov
rclb
dec
add
xlat
in
mov
nop
pop
lock
fs
add
rcr
xchg
push
cmp
adc
mov
out
pushl
lret
jl
outsl
int
lret
and
je
push
decl
and
xchg
hlt
loopne
test
cmp
movsb
or
xchg
push
pushf
mov
sbb
sbb
sbb
xor
xor
adc
mov
imul
mov
addr16
adc
icebp
sbb
in
jne
jmp
and
fistl
call
inc
cmp
mov
jno
cwtl
in
jl
cli
lahf
xchg
push
rcr
lea
pop
sbbl
push
and
out
sbb
cld
scas
jecxz,pn
out
jns
vmovsd
cmp
and
les
mov
jge
inc
mov
cmp
cmpsb
inc
push
jg
cmp
add
cmpsl
dec
dec
dec
pushf
scas
xor
cwtl
push
lahf
sub
dec
pop
mov
xor
lcall
aas
mov
dec
adc
cmp
cmp
int
iret
outsl
push
mov
lret
xchg
mov
jle
jno
std
mov
push
stc
cmp
mov
mul
mov
mov
aam
xor
mov
aas
xor
gs
cmp
pop
dec
ret
sub
sar
add
and
mov
push
cmp
mov
fs
rcll
fistl
sub
shlb
into
sbb
scas
or
cltd
cmpsb
movsl
fstps
lcall
xchg
out
int
xchg
mov
daa
xor
xchg
dec
xor
mov
pop
sbb
push
mov
push
xchg
enter
cmp
es
or
push
pop
xchg
fcompl
inc
push
jle
repnz
cmp
cmpl
xchg
jne
pop
ret
fsqrt
push
imul
mov
xor
adc
testb
fstpt
adc
lret
fcmovu
fcmovbe
nop
dec
imul
push
adc
std
sub
xchg
test
push
and
insb
outsb
divb
jp
out
aad
pushf
call
mov
in
mov
mov
je
aaa
lock
and
jb
outsl
mov
mov
data16
cmp
add
dec
pushf
mov
sub
andb
add
fisttpll
stos
outsb
daa
fildl
inc
shll
stos
or
or
ret
sub
fildl
push
std
and
push
push
push
xchg
sub
sbb
sbb
dec
pop
jp
andb
movsl
sti
and
cmp
xor
stos
jae
adc
cmp
jl
cmpsb
leave
xchg
sbb
ss
lea
ja
pop
icebp
mov
xor
push
fs
mov
mov
xchg
sub
cmc
and
pop
jb
inc
cs
xor
or
jmp
insb
mov
xor
test
mov
adc
enter
pop
in
pop
xchg
mov
mov
sub
stos
mov
mov
xor
sbb
sub
mov
shrb
test
sbb
stos
es
mov
insb
xlat
pop
out
fldt
push
call
mov
movsb
inc
adcb
sbb
push
and
dec
test
mov
mov
gs
cmp
mulb
test
loope
fisubl
mov
dec
mov
movsb
shlb
frstor
aad
shl
insb
mov
pop
popa
push
in
dec
lcall
repz
mov
and
push
roll
cmp
pop
jb
cmpsb
cmp
out
enter
pop
sbb
in
xchg
loope
mov
lcall
mov
pop
add
sti
inc
xor
rcr
sbb
int
dec
popf
in
or
xor
pop
das
push
dec
mov
inc
sti
test
pushf
and
lods
mov
inc
inc
in
sub
cmpsb
and
cmc
leave
mov
lcall
rcr
repz
lahf
repz
pushf
inc
mov
or
or
jae
fdivrl
ja
push
dec
pop
sbb
out
test
adc
es
rorb
mov
movsb
push
pop
xchg
cmpsl
stc
jl
xor
fucomi
add
mov
add
scas
jg
adc
jg
out
jl
imull
cmp
or
call
sbb
repnz
repz
pop
mov
shlb
int
insl
dec
lds
lea
add
mov
enter
movsb
out
jmp
int
test
sbbl
or
pop
pop
pop
pop
push
and
xchg
into
addb
in
mov
test
xchg
pop
insb
and
add
push
and
jp
loopne
jge
mov
sti
inc
cmpsl
dec
sbb
stos
sarb
rcrl
and
ljmp
sbb
pop
gs
jno
arpl
cltd
dec
jne
mov
pop
enter
popa
cmpsl
out
fadd
xlat
adc
movsb
xor
jp
outsb
lret
or
sub
adc
jp
xchg
add
mov
imul
mov
xchg
lods
xchg
or
imul
sub
pop
scas
mov
roll
add
in
jle
ret
repz
std
jle
loope
mov
push
mov
fwait
popa
add
and
add
xchg
and
or
mov
xor
pop
jmp
shrb
or
es
pop
jmp
iret
add
and
mov
push
popa
outsl
test
rcl
sub
push
mov
test
pop
jne
shr
repnz
jno
cltd
in
dec
into
jno
lahf
repz
cwtl
repnz
xchg
imul
mov
and
xchg
test
jbe
mov
movsl
ret
inc
clc
pop
cwtl
jge
mov
mov
fistps
in
sbbb
fdivrp
iret
dec
iret
pop
inc
out
ficompl
stos
aas
sub
cmpsb
mov
in
icebp
aas
jbe
aad
out
dec
sahf
jo
out
test
sub
outsl
xor
lcall
xlat
jo
add
or
sbb
inc
xchg
xchg
call
daa
xchg
pop
rol
cs
rclb
movsl
repz
insl
in
sub
insb
into
nop
lret
pop
in
popa
and
mov
mov
aaa
loopne
je
stc
nop
jo
sub
or
or
sub
test
xchg
cs
push
mov
fwait
adc
cltd
pop
cmp
mov
xorl
jo
mov
jl
cli
adc
pop
nop
loop
jmp
inc
jb
test
test
popf
aad
pusha
jecxz
inc
mov
loope
xor
mov
adc
mov
jnp
imul
sahf
paddq
jnp
mov
ret
push
mov
xchg
pop
arpl
mov
dec
mov
or
lret
pop
fsubrl
cltd
push
inc
push
out
mov
add
clc
pusha
jne
pop
adc
lods
dec
and
pop
bound
push
pop
dec
dec
je
ret
add
pop
mov
lcall
jecxz
shrl
sub
mov
aaa
nop
xor
call
enter
mov
jmp
and
or
and
or
loope
and
inc
push
stos
iret
fs
leave
into
jne
xchg
ret
mov
lret
mov
mov
mov
clc
int
and
repz
push
repnz
repz
std
inc
jmp
daa
std
adc
aaa
imul
stos
lds
xchg
mov
add
mov
fcoms
add
repz
and
sbbb
dec
repnz
lahf
lahf
inc
out
add
push
clc
mov
sub
push
inc
mov
scas
cwtl
xlat
aam
push
je
aaa
mov
leave
add
push
leave
call
stc
repz
pop
inc
adc
xlat
mov
shll
add
rcr
push
in
data16
sub
pop
and
nop
fs
jb
hlt
imul
shlb
lcall
dec
rcrl
imul
out
mov
push
enter
std
pop
mov
xorb
cli
cs
decb
push
pop
add
in
lods
mov
shlb
fld
and
leave
jne
jno
inc
jae
push
pushf
gs
aam
fsts
sub
mov
mov
cmp
ljmp
push
int3
mov
inc
adc
cld
lcall
inc
paddd
xor
rolb
push
loope
popa
int3
mov
scas
test
lahf
sbb
mov
mov
mov
sbb
jno
dec
jmp
imul
fsubrs
sbb
mov
pusha
nop
mov
inc
movsl
jmp
dec
pushf
dec
lods
dec
mov
xchg
inc
add
and
push
inc
insl
fwait
das
int
out
xchg
and
sbb
mov
inc
xchg
pop
xor
xor
movsl
mov
movsl
js
cmp
std
xchg
lcall
inc
fwait
int
push
sbbb
push
insl
addr16
jnp
ds
insb
lds
cmp
clc
test
dec
push
dec
dec
xchg
ficoms
and
test
pop
ljmp
xor
sbb
jmp
pop
mov
jbe
addr16
arpl
shr
sbbl
scas
xorb
xlat
int
mov
imul
cmpsb
test
add
sbb
popa
ljmp
add
fsub
repz
cwtl
clc
jnp
clc
jmp
add
repnz
outsb
loope
sub
push
push
or
pushf
push
lahf
mull
lods
push
neg
stos
jne
jp
mov
sub
and
sbb
ds
mov
cmp
es
fistpl
push
mov
dec
xor
aaa
and
sbb
addr16
out
sbb
js
pop
mov
push
ja
adc
std
dec
push
cli
dec
pop
ljmp
push
shll
adc
or
cmpsl
jp
imul
pop
and
jnp
mov
push
adc
or
xchg
pop
int
pop
les
icebp
addr16
aad
push
fists
movsb
adc
test
cmp
cld
adcb
fwait
pusha
and
jge
mov
and
mov
repnz
add
scas
pushf
mov
aaa
int3
fidivrs
sbb
mov
mov
cmc
sbb
nop
xchg
aaa
mov
xchg
fs
cmp
data16
ljmp
mov
mov
loopne
lret
scas
cltd
mov
inc
outsl
shrb
or
push
jle
cld
outsb
jnp
inc
shlb
xor
jb
add
sub
in
cli
ret
out
insl
clc
in
xchg
xor
outsb
mov
push
int3
je
aas
les
cld
adc
lock
cld
mov
rcrb
cmp
dec
stos
int3
inc
mov
movsb
cmpl
xor
test
push
lea
arpl
mov
aaa
adc
ja
mov
push
sbb
popa
ss
cltd
xor
cmp
hlt
shll
movsb
dec
sbb
movsb
add
loopne
jae
fcoms
mov
jmp
in
lods
mov
das
or
scas
jne
push
and
nop
mov
sub
push
mov
and
test
xchg
test
xchg
mov
jne
aad
push
mov
mov
int3
std
push
push
mov
push
sbb
orb
clc
jg
push
inc
add
mov
jno
adc
cmp
das
sbb
and
cmp
sar
aaa
testl
add
pop
addl
rcrb
push
inc
jnp
add
and
add
int
pop
mov
xor
rolb
or
out
mov
dec
add
das
fsubl
lea
cmc
sbb
adc
pushf
sahf
popa
xchg
sub
jno
xchg
xor
inc
loopne
popa
insb
inc
pop
mov
mov
daa
mov
in
out
mov
jae
inc
jbe
test
loopne
cld
pop
int3
shlb
mov
repz
mov
data16
addb
mov
or
cmc
cmpsl
pop
in
in
xor
or
mov
sub
lahf
into
sahf
ja
loope
jp
fcmove
addr16
mov
inc
pop
jge
outsl
adc
push
jbe
mov
push
mov
jecxz
xor
push
or
std
repnz
mov
mov
add
cmp
jecxz
aad
inc
ja
cmp
dec
movsb
loope
stos
pushf
mov
aad
sbb
xchg
jno
subl
rcrl
orb
pop
cmpsl
out
int3
je
lcall
cmc
dec
imul
jb
into
push
jae
mov
push
dec
jno
push
add
fimuls
std
sbb
dec
xor
jo
cmpsb
pushf
orl
dec
aam
sub
in
mov
loope
add
negl
mov
mov
mov
out
or
sub
addb
dec
int3
mov
je
imul
cmpsl
aad
inc
insl
imull
mov
call
add
test
sbb
xor
mov
mov
faddl
push
out
pop
push
ret
ja
sbb
aam
push
ljmp
stos
mov
inc
sub
inc
dec
mov
out
sbb
pop
cs
mov
out
inc
aaa
lcall
xchg
pop
sub
das
loop
mov
sbb
popf
push
jb
popl
or
xchg
aaa
dec
xor
jle
movsb
pushf
jnp
gs
push
or
and
xor
xlat
mov
pop
insb
jb
cli
fldenv
dec
das
js
mov
pop
sbb
sbb
ret
out
dec
or
pushf
fwait
xchg
or
adc
cmp
call
insl
shrl
inc
push
pushf
mov
mov
gs
lods
cmpsl
jno
loope
into
mov
out
xchg
mov
test
cs
notb
loopne
mov
push
mov
pusha
pop
cmp
lea
scas
clc
dec
imul
std
addb
enter
pop
sbb
or
in
lds
cmc
in
insb
xchg
sbb
imul
push
mov
pop
inc
aaa
lret
cmp
es
movsl
lock
sarl
in
pop
xchg
and
les
outsl
mov
repnz
cli
shl
enter
cmp
rcll
adc
xchg
cld
and
repz
ficomps
cmpsl
inc
push
mov
lret
sahf
mov
adc
mov
jo
cltd
insb
callw
std
hlt
cltd
nop
dec
call
test
jge
aas
sbb
mov
fdivr
inc
test
sahf
inc
and
inc
add
inc
insb
ds
sub
cmp
cmp
and
flds
cli
cltd
pusha
cs
insl
into
cmovno
bound
xchg
dec
inc
mov
les
ret
dec
inc
int
cmpsl
gs
mov
push
clc
sbb
and
mov
shrl
inc
cmp
and
add
jbe
add
inc
add
dec
jecxz
leave
insb
jle
cld
clc
dec
cwtl
mov
push
push
xchg
pop
arpl
xor
sahf
jne
cltd
mov
cmp
add
jo
bound
pop
and
mov
out
xchg
jno
xor
jno
or
int3
push
std
clc
cmpsb
fistpl
adc
cwtl
sub
jnp
insl
notl
inc
movsl
mov
gs
movsl
or
adc
cld
sub
mov
imul
inc
lahf
lret
xor
dec
and
fldcw
je
sbb
add
roll
xor
inc
insl
push
leave
out
insb
in
xor
adc
hlt
repz
add
push
insb
sub
lock
xor
in
test
or
bound
mov
dec
nop
dec
fnstcw
scas
daa
jo
fwait
icebp
mov
lock
mov
sub
les
sub
add
sti
lods
xchg
cld
sbb
mov
mov
and
sub
pushf
test
push
lret
push
push
cmp
mov
imulb
sti
aam
push
jb
rorl
lock
sub
in
xchg
adc
xchg
clc
lcall
mov
mov
jns,pt
sbbl
xor
daa
adc
or
pop
jmp
rcll
cmp
adc
outsb
out
push
sbb
pop
mov
pop
in
push
mov
stos
adc
shl
cmpsb
sub
mov
jp
out
dec
in
sbb
rolb
or
adc
out
movsl
insb
int3
jmp
lcall
cmp
cmp
xor
shll
stos
arpl
fisubl
or
loop
cmp
stc
loopne
pop
arpl
sub
clc
push
fdivl
sbb
popl
imul
fmuls
mov
push
add
dec
sarl
lods
mov
dec
aam
loop
and
mov
adc
push
pushf
dec
insb
icebp
xchg
xchg
add
in
dec
adc
fs
xor
pop
shlb
mov
ficompl
cmp
push
lock
cmp
scas
cld
mov
out
mov
pop
mov
enter
lods
enter
cltd
pop
icebp
adcb
pop
sti
xchg
out
jmp
mov
mov
dec
jecxz
mov
das
inc
jb
lods
dec
inc
das
loopne
mov
in
out
adc
xchg
pop
insl
dec
pop
jg
insb
in
scas
popa
mov
in
adc
mov
out
mov
and
aad
dec
dec
xor
cmc
push
pop
inc
sbb
push
loopne
push
push
dec
iret
xor
jns
data16
inc
dec
xor
stos
cmc
ss
cmp
add
add
clc
sahf
out
or
sbb
mov
pop
add
push
jns
and
je
jge
ja
mov
or
std
sbb
sahf
mov
sbb
or
sub
aam
iret
push
ret
pop
cmp
loopne
cmpsl
mov
mov
cmovne
enter
xchg
loope
mov
jge
rcll
xchg
mov
aad
sbb
imul
repnz
or
adc
push
cmp
jo
sarl
adc
push
cmc
push
shlb
dec
cmp
test
dec
mov
dec
mov
jno
cmc
inc
addb
mov
std
mov
sub
repz
mov
lret
dec
in
es
test
push
or
popa
cltd
into
cmp
fldcw
pop
cltd
push
fcoms
push
or
xor
inc
test
push
lods
cmpb
stos
ret
shrb
outsl
pusha
repnz
jne,pn
or
repz
pop
push
cmp
and
out
sbb
cltd
into
ljmp
dec
push
xlat
sbb
sbb
pop
into
fnstsw
mov
loopne
adc
push
cmc
repnz
data16
lahf
lods
push
xchg
or
or
jno
sti
call
cmpxchg
subb
add
out
jnp
jb
or
xchg
aam
push
aad
les
cmp
jno
inc
cmp
cmp
pop
cmpsl
xor
lret
clc
mov
mov
hlt
fnstsw
repnz
leave
and
adc
call
pushl
cs
push
test
and
mov
and
sti
sar
mov
roll
pop
dec
outsb
cmpl
fildl
sub
pop
dec
cmp
addl
mov
fists
scas
fwait
add
dec
lahf
out
test
sub
jno
sub
daa
lods
mov
dec
cmp
cltd
mov
shr
out
iret
rorl
push
jp
xchg
jg
jge
sub
and
jecxz
inc
push
jns
adc
cmpsl
jo
inc
inc
sub
sti
mov
sbb
fucomi
pop
sub
mov
out
loop
in
pop
add
jp
loope
mov
lcall
sub
stos
push
jmp
inc
shrl
repnz
or
fidivrl
hlt
imul
inc
push
call
lods
clc
or
jb
mov
ss
stc
dec
mov
pop
mov
std
in
push
fisubrs
mov
inc
add
sbb
pop
mov
lods
mov
push
scas
imul
add
lea
hlt
mov
in
in
dec
dec
xchg
and
repnz
daa
xchg
lahf
sub
cmpb
pushf
cli
add
cmp
cmpsb
in
adc
lret
jl
fidivl
adc
jp
shl
addl
shlb
mov
jnp
inc
out
xchg
leave
or
mov
andl
add
pop
ljmp
loop
leave
lods
push
mov
and
xchg
push
ds
fidivl
jl
dec
test
gs
adc
rcr
sbb
and
mov
lock
stc
shr
mov
xchg
pop
lods
xor
lock
push
lcall
sbb
mov
add
sbb
jnp
enter
in
movsb
xlat
jmp
fisubrs
push
outsl
int
es
push
out
cmp
mov
push
imul
pop
lret
rolb
sbbb
and
push
jo
adc
inc
adc
das
sbb
jns
test
push
push
stos
sti
repnz
xchg
and
fdivrl
pop
pop
inc
inc
mov
popf
or
mov
scas
mov
scas
pusha
inc
and
pop
cmp
shlb
adc
bnd
clc
jmp
lahf
inc
and
and
stos
pop
jmp
push
push
lods
or
sti
or
mov
addr16
dec
rclb
lods
cwtl
cmp
pop
mov
xchg
sub
push
xor
into
out
out
mov
inc
js
cltd
mov
mov
sbb
sub
clc
inc
cmpsl
inc
fsubl
dec
jmp
stos
shll
jne
mov
shll
or
mov
inc
test
dec
dec
sub
push
sbb
cli
xchg
popa
fisubs
shrb
or
mov
movsb
sti
cltd
popf
hlt
mov
xchg
insl
movsl
pop
xor
pop
xor
and
add
add
pop
jp
iret
cmc
xchg
shlb
outsl
mov
lret
mov
mov
sarb
add
jnp
dec
inc
xor
sub
pop
sub
fnstenv
sar
jmp
adc
pop
cmp
inc
dec
shlb
lock
pop
sbbl
pop
pop
fs
mov
mov
and
js
or
ror
add
pop
cmp
mov
or
fisttps
sbb
xchg
dec
mov
sub
pop
dec
popf
fcoms
repnz
adc
popf
adc
add
out
add
cwtl
or
mov
shr
mov
cmp
mov
mov
push
inc
jg
jb
iret
scas
loope
fldenv
stos
aas
out
lret
repnz
mov
cmpsl
xor
sbb
stc
sti
add
pop
dec
jmp
addr16
out
cs
jge
or
pop
pop
mov
out
xchg
call
in
jb
push
into
data16
sti
call
push
bnd
stos
stos
sbb
dec
fdivp
bound
push
inc
add
ja
adc
daa
jbe
loop
rcll
push
push
xor
inc
pop
daa
cmp
push
xadd
lcall
fnsave
add
jo
jmp
xor
data16
jle
imul
xor
pop
enter
loop
ret
aas
movb
cmp
or
pop
push
jg
xor
hlt
in
aas
push
inc
jg
pusha
jg
aaa
and
xchg
push
in
aad
gs
ja
and
inc
jno
sub
xor
dec
and
cltd
mov
jge
clc
mov
mov
lods
mov
xchg
mov
xor
ret
mov
test
inc
repz
dec
jns
iret
or
cld
pop
inc
sub
xchg
rolb
stos
repnz
mov
gs
cltd
xlat
dec
imul
xor
add
out
xchg
icebp
mov
out
aad
adc
in
scas
inc
sbb
add
and
add
fildl
push
test
mov
add
push
add
sub
fadds
lods
mov
pop
dec
mov
sub
fiaddl
dec
rclb
es
sub
dec
frstor
addr16
fistl
xchg
add
icebp
adc
pushf
mov
xor
dec
test
out
mov
pusha
or
xchg
in
ss
or
mov
test
lret
ja
test
das
rcl
std
mov
adc
js
mov
cmp
idivb
xchg
or
push
mov
mov
pop
mov
cmp
cmc
lea
std
fcomps
loopne
xchg
cli
notb
mov
jmp
pop
xor
testl
pxor
ljmp
pop
pop
xchg
filds
jns
daa
mov
pop
xchg
sbb
arpl
test
xchg
pop
ret
mov
push
push
mov
xchg
mov
shll
add
mov
pop
adc
loope
inc
xor
out
insb
inc
loope
dec
fadd
sbb
adc
sub
movsl
je
clc
arpl
mov
fwait
ja
cwtl
adc
punpckhwd
mov
sbb
je
pop
out
sbb
sub
push
ljmp
mov
cmpsb
lods
jb
fstps
add
xchg
fs
add
xor
and
inc
pop
jb
xor
and
ds
popfw
into
cmp
xchg
pushf
ljmp
lds
sub
rorl
sbb
rcl
nop
dec
pop
mov
add
gs
jo
jno
adc
sbb
mov
mov
dec
or
movsl
push
popf
inc
adc
stos
lods
xor
and
idiv
outsl
icebp
sbb
or
push
cwtl
lret
es
push
xor
loopne
push
add
cltd
mov
jge
and
mov
aam
icebp
inc
mov
jne
or
arpl
sub
mov
jbe
sarb
mov
in
mov
scas
hlt
lods
cmpb
ss
andl
loop
dec
sub
enter
insb
fimull
push
jae
sub
mov
scas
cli
and
repz
inc
popa
mov
push
int
xor
add
or
or
fucom
into
rcrb
cwtl
push
or
hlt
scas
insb
lods
adc
jb
dec
into
push
ljmp
xchg
cwtl
ss
fbld
js
out
loope
rolb
in
mov
sahf
ja,pn
push
mov
or
in
mov
pop
out
loop
sbb
ret
add
nop
loop
pusha
cli
lret
imul
push
into
lcall
pop
dec
in
mov
std
mov
fwait
jo
dec
inc
mov
xor
fistpll
pop
xor
inc
and
jmp
cli
sbb
xor
sti
repnz
out
add
pop
xor
cmpsb
add
pop
sbb
fs
scas
and
inc
jmp
fisttpl
sar
cmc
dec
xchg
xor
sub
clc
sub
mov
jle
adc
or
pop
imul
shlb
insl
into
inc
int3
cmp
gs
add
inc
or
mov
daa
mov
lret
mov
addr16
add
aam
loop
sbb
sub
icebp
mov
rclb
dec
in
movsl
adc
push
test
and
jle
call
push
and
push
push
iret
xchg
cli
mov
sbb
pop
inc
push
jae
push
into
es
fs
test
aas
or
jp
pop
je
xor
mov
shrb
xor
dec
cmc
mov
imul
ret
iret
and
stc
mov
icebp
jb
ret
push
decl
dec
sahf
add
lea
pop
stc
into
cmc
pusha
test
bound
jecxz
rcrb
aaa
loope
cmp
std
cmpsl
jnp
into
sbb
mov
adc
dec
fstl
pop
xchg
cld
dec
scas
mov
insb
push
scas
gs
sbb
push
inc
pop
pusha
pushf
adc
mov
int3
imul
pop
shl
sub
mov
popa
ja
in
push
negl
push
roll
enter
cmpsb
push
mov
cmpsl
sub
bound
adc
jg
cmp
pusha
or
or
adc
cs
stos
xlat
dec
push
add
xor
addr16
lods
mov
inc
cltd
inc
xor
mov
jmp
jne,pt
mov
sub
sbb
cmp
fldt
adc
loop
cld
mov
popf
fwait
push
out
std
push
orb
and
int
lods
push
lahf
and
loopne
in
fmulp
pop
mov
in
mov
js
data16
or
add
mov
ret
lods
sbb
jmp
cmp
jp,pn
icebp
ja
xchg
sub
xor
in
xor
xor
cmp
movsl
out
subl
xor
in
enter
cmpsl
push
inc
and
and
dec
mov
ja
shll
adc
fdivl
fidivrs
out
fwait
adc
mov
add
test
sbb
add
loope
push
add
sub
and
neg
push
cmp
pop
jecxz
rcll
or
insb
int3
ja
push
in
inc
dec
jne
popf
cli
sub
and
cltd
dec
lea
loop
divl
jp
aas
aam
xor
xlat
mov
or
sub
xchg
inc
push
stos
xchg
lcall
test
xchg
mov
cmp
jg
sti
xchg
faddl
xchg
add
dec
push
aas
out
dec
or
enter
pop
shll
aaa
sub
mov
jecxz
adc
push
jo
jge
xlat
push
outsb
jl
lods
rclb
clc
adc
xchg
mov
shrl
mov
and
mov
sarb
add
jmp
adc
push
fdivrl
repz
jae
jo
add
sbb
into
lret
inc
dec
lods
aad
pop
sub
movb
das
sbb
and
sbb
pop
pop
jecxz
es
lret
push
pushf
outsb
imul
adcl
scas
and
mov
push
mov
add
mov
xchg
push
pop
scas
and
dec
aaa
arpl
movsb
mov
lea
and
xor
popa
jl
add
add
loopne
mov
aas
stos
in
pushf
in
sti
call
add
cmp
sbb
hlt
inc
outsl
and
nop
iret
in
div
mov
movb
mov
push
or
xchg
sbb
mov
data16
mov
inc
stos
fwait
pop
cmp
push
scas
addb
dec
lods
xchg
out
and
mov
push
jb
incb
and
cmp
inc
movsl
out
adc
outsl
inc
out
add
rorb
rcrb
mov
add
and
inc
fldl
lret
sub
adc
pop
out
ljmp
lret
mov
add
add
cld
je
push
fistl
lods
inc
sbbl
pop
push
push
xchg
pop
data16
mov
sbb
adc
mov
jmp
add
add
sbb
divl
fwait
maxps
xchg
push
fsub
or
rorb
dec
push
sub
add
push
push
dec
aam
jbe
sbb
in
push
lcall
cmpsl
test
stos
mov
mov
sahf
out
mov
outsb
sbb
cmpsl
mov
mov
mov
shrl
jbe
cli
dec
xchg
sub
xor
mov
jge
push
pop
hlt
insb
punpckhwd
insl
xor
int
xor
jo
jo
popf
stos
repnz
and
push
xchg
test
daa
repnz
and
mov
testb
cmp
pop
xchg
cmp
inc
cmp
xchg
movsb
mov
mov
mov
and
les
or
or
rcl
mov
pop
stos
add
or
in
mov
xor
push
aad
pop
repz
sub
mov
sarb
inc
sbb
mov
testb
fdiv
cmp
ss
xchg
jbe
adc
test
je
or
cmp
and
add
shl
jb
mov
stos
lret
lock
xchg
in
fldcw
xor
bswap
popa
cmp
repnz
rcr
adc
lcall
inc
sub
mov
outsl
jae
leave
imulb
sub
sbb
jp
xchg
jmp
loopne
ret
add
test
rcll
mov
push
mov
or
or
jne
insl
jl
lret
xchg
and
cmc
adc
jl
ds
jbe
fsubl
push
bound
iret
mov
addr16
jmp
sub
stos
into
out
pop
mov
mov
sarl
cmc
fisubs
pop
xchg
movsb
and
inc
inc
stc
cltd
decb
icebp
mov
fcoms
out
scas
push
cmp
add
stos
cwtl
insl
jmp
stc
out
pusha
pop
jae
faddl
xor
push
mov
xlat
sub
int3
mov
scas
pop
cmpsl
mov
sbb
incb
mov
inc
lock
loop
xchg
mov
xchg
xchg
xor
sti
mov
inc
sbbb
inc
mov
pop
aaa
test
daa
fisubrl
xchg
push
push
inc
xchg
jecxz
loop
cmp
stos
rorl
jp
test
jb
mov
lock
fistpll
sub
adc
adc
xchg
mov
bound
mov
mov
int
sahf
jl
ret
insb
push
jo
movsl
or
pop
icebp
jne
bound
push
mov
adc
pop
adc
movsl
gs
in
out
flds
pusha
sti
mov
mov
add
cs
jo
inc
test
out
loope
fcomps
sbbb
push
rol
jae
les
push
pop
out
sbb
outsl
xchg
scas
push
test
mov
ja
xor
pop
push
in
add
jl
adc
shlb
in
enter
and
lods
jg
dec
and
cli
in
inc
sub
push
inc
inc
arpl
sbbb
xor
fwait
jmp
outsb
push
xchg
push
ljmp
jl
out
lock
imul
sub
aaa
add
inc
mov
cmp
cld
in
inc
pusha
stos
pop
fsubl
pop
pop
idivb
jmp
addr16
add
subl
fisttps
and
ljmp
mov
adc
lahf
test
pop
sarl
out
xlat
xchg
jecxz
lret
add
fnstcw
add
mov
andb
mov
insl
cmc
in
cmp
sbb
aad
fwait
aas
and
xor
test
adc
dec
push
cmp
cmc
and
add
andb
insb
lods
inc
push
mov
call
add
push
pop
sbb
xor
mov
jge
sarb
inc
imul
sbb
add
mov
inc
and
fs
jbe
xor
fsubl
cmpsb
mov
dec
or
xor
int3
cmpsb
push
sbb
cld
push
jl
and
sbb
xchg
outsb
pop
lret
int3
insl
xchg
and
daa
idivl
rorb
in
out
cmp
and
mov
and
std
dec
sub
icebp
lahf
loopne
sub
repnz
out
repnz
test
xchg
les
or
jl
jg
inc
xor
sbb
arpl
push
push
lds
sti
popa
cli
pop
lods
sbb
repz
daa
jecxz
lahf
sti
or
icebp
ja
ja
shlb
lret
and
andb
jp
xchg
movsl
pusha
mov
dec
arpl
inc
add
fwait
testb
aaa
mov
adc
loopne
mov
std
roll
dec
addr16
fdivrl
cs
ds
xlat
clc
xchg
loopne
jno
jo
sbb
sbb
inc
insl
jge
xor
cwtl
jae
sub
jo
jns
and
push
cmp
imul
dec
jcxz
push
cmc
xor
mov
mov
fistl
call
into
jae
jns
mov
loopne
clc
xchg
adcb
jbe
and
dec
sarb
push
pop
test
popa
inc
mov
dec
adc
ljmp
mov
lods
in
mov
xchg
inc
data16
mov
jmp
adc
or
xlat
nop
sub
jp
mov
mov
push
sub
xor
sbb
sbb
jmp
ss
add
mov
negb
add
enter
sub
icebp
xchg
aad
or
mov
xchg
je
sub
sbb
fimuls
or
sbbb
mov
mov
xlat
mov
shl
add
cmp
add
and
add
fld
mov
stos
inc
and
xchg
xor
xchg
push
sbb
lods
mov
popa
adc
push
cmc
mov
pop
movl
mov
inc
aam
mov
jae
sub
rcll
cmp
sub
es
push
push
mov
jle
push
rol
fs
out
movsl
jb
mov
jbe
adcb
mov
cmp
sub
lahf
push
movsl
mov
or
mov
cmpsl
push
pop
dec
stos
mov
cmp
and
fists
add
mov
lcall
sbb
pop
js
outsb
jnp
pushl
cs
mov
mov
mov
aad
cmpsb
cmp
inc
popa
int
das
sarb
sbb
mull
shll
lock
push
iret
repz
mov
jbe
push
mov
push
adc
ljmp
cld
adcb
stos
outsb
sub
or
jns
dec
test
or
sbb
std
push
movsb
lcall
pusha
in
push
cmp
mov
scas
test
push
ds
mov
mov
dec
adc
sahf
loopne
cmp
in
push
xchg
testl
mov
cmp
push
popf
cmp
xchg
jb
sbb
int3
dec
push
push
pop
test
shlb
xlat
mov
int3
orb
mov
sbb
cmpl
cld
rcl
movsl
ja
sbbl
arpl
out
or
jmp
fimull
sbb
push
ret
test
sbb
cli
cmp
and
mov
loop
lds
shrb
push
mov
and
aad
stos
sbb
mov
lods
xchg
or
sbb
stc
mov
into
iret
xchg
or
cld
das
ljmp
aad
sub
orb
push
std
orl
int
mov
repz
push
fisttps
sbb
or
cmp
and
push
inc
jg
insb
cwtl
bnd
stos
jb
or
mov
rcll
mov
int3
cmp
aad
sbb
jnp
fmul
adc
push
ss
pop
push
mov
test
lret
mov
int
loopne
pushf
inc
icebp
adc
xchg
fnsave
mov
ret
add
sub
cld
out
sbb
test
xchg
add
sub
adcb
jge
orb
out
push
mov
sub
pop
jmp
mov
jne
aaa
mov
pop
mov
jl
xchg
cmp
inc
jo
aas
outsb
idiv
jge
mov
inc
daa
sub
loope
in
ret
jmp
xchg
mov
push
in
jecxz
fisttps
sub
in
popa
ret
fsubl
ror
inc
lods
xor
mov
arpl
scas
fcmovnu
sub
jbe
dec
add
pop
pop
sbb
ja
inc
push
mov
push
adc
or
sbb
sbb
icebp
adc
rclb
ja
xchg
xlat
stos
jp
dec
je
inc
add
sarb
xor
adc
mov
clc
mov
add
lods
mov
es
mov
fsubrs
jae
lret
adc
push
jnp
and
push
inc
mov
adc
data16
or
add
in
gs
imul
sbbl
inc
out
mov
movsl
pop
data16
push
jmp
dec
add
imul
sbb
mov
mov
test
pop
cmp
xorl
rclb
dec
jno
push
dec
dec
leave
pop
sub
lock
lcall
pop
out
pushf
fsubrs
mov
lret
cld
in
xchg
mov
mov
and
and
lock
mov
mov
mov
cmpsb
mov
push
popf
dec
negl
mov
cwtl
call
ljmp
cwtl
lret
mov
iret
xor
je
dec
and
xchg
pop
sub
stos
xor
dec
add
mov
mov
xor
fnstcw
maxps
mov
movsb
dec
sahf
xchg
dec
pushf
xor
pop
into
ret
pusha
inc
lret
dec
fdivr
icebp
push
and
mov
push
inc
pop
setbe
dec
sub
add
ljmp
mov
dec
pop
loope
insl
or
jo
punpckhdq
jae
and
scas
stc
lret
mov
es
ss
mov
mov
mov
popa
arpl
enter
inc
mov
mov
push
or
mov
mov
pop
out
push
mov
repz
or
cmpb
push
jb
comiss
inc
ja,pn
aaa
out
add
pop
and
mov
inc
in
jne
mov
push
pop
xor
mov
push
add
mov
addb
hlt
fldl
xor
divb
ss
pop
add
lods
inc
in
repz
and
out
cmp
mov
ds
xlat
out
test
repnz
icebp
cmp
cmp
cmpsb
mov
sbb
sub
xchg
inc
push
scas
test
mov
sbbb
xchg
lea
add
leave
test
popa
gs
add
scas
mov
shrl
cli
push
xlat
mov
adc
mov
movsl
xchg
dec
cmpsl
pop
lret
arpl
sbb
popf
mov
out
imul
fidivl
subl
mov
push
test
mov
cmp
outsl
and
adc
pop
adc
imul
stos
sub
scas
cltd
add
mov
sbb
inc
adc
xchg
dec
movsl
aaa
lahf
sub
sbbb
nop
in
pop
mov
shll
daa
add
ret
mov
test
imul
xor
sub
arpl
xchg
fildll
loope
daa
outsb
lea
xchg
mov
inc
pop
popa
negb
pop
cwtl
bnd
lea
cmp
iret
fiadds
adc
push
call
push
inc
xlat
dec
mov
or
sbb
inc
xorb
gs
test
test
push
aaa
arpl
out
jecxz
add
mov
xor
and
push
movsb
xor
dec
sbb
cmp
pop
push
clc
inc
sti
out
mov
push
xchg
add
mov
mov
cmc
sub
add
add
pop
mov
pop
es
test
add
pop
add
rorb
pop
fcmovbe
or
push
push
ds
fs
movsb
jne
sub
xor
jns
or
scas
xchg
sahf
nop
mov
pop
faddl
mov
imul
repz
sbb
ljmp
add
test
ficompl
insb
stos
push
sbb
fldcw
testb
loop
int3
ja
add
ljmp
idivl
aad
adc
gs
mov
push
rcrb
cmc
movsl
cmpsl
sub
ror
movsl
mov
adc
pop
mov
xchg
cmp
sbb
jp
lcall
mov
xchg
das
pop
xchg
pop
dec
test
ret
je
sbb
cmp
and
aas
sbb
push
mov
lock
insl
push
es
jmp
sbb
dec
mov
push
push
lock
mov
and
mov
mov
xchg
add
leave
mov
pop
fcomps
xchg
arpl
incb
iret
jb
popa
mov
mov
mov
or
data16
push
jp
add
fildll
cmpb
mul
jle
ds
inc
subl
xchg
sub
push
dec
jae
pop
jmp
movb
shrl
dec
scas
outsl
push
or
das
nop
cmp
xchg
jbe
cs
or
push
test
insl
mov
bound
jne
mov
in
fwait
repz
add
std
ret
mov
sbb
dec
nop
pusha
push
xchg
popa
mov
pop
push
pop
dec
aam
mov
lock
mov
cltd
pop
inc
add
gs
shrb
hlt
lret
dec
cmp
loopne
lahf
cld
cli
pop
outsb
mov
mov
xor
movsb
jge
lahf
push
loopne
aam
mov
pop
test
pop
push
mov
in
movsl
icebp
pop
mov
pop
repnz
inc
enter
pop
movsb
cwtl
nop
fbld
mov
je
sub
sbb
mov
mov
sub
out
xlat
fimull
lock
xchg
mov
aam
cli
mov
fistpl
pop
out
in
dec
mov
pusha
jae
repnz
stc
pop
dec
jle
aad
les
sbb
push
test
and
xchg
fucom
enter
aad
mov
pushf
inc
leave
xchg
dec
lds
lods
int
popf
in
or
push
xchg
mov
cmp
xor
ret
les
inc
add
push
imul
add
add
lret
cli
scas
sub
jae
xor
push
scas
mov
and
les
lea
jp
jmp
or
mov
std
or
icebp
mov
or
ret
push
jge
pushf
xchg
shrb
nop
pop
mov
push
insb
push
jmp
xlat
inc
es
fiadds
lret
cmp
mov
mov
in
xor
xchg
cli
mov
idivb
aad
subb
movsl
jl
arpl
pop
ror
push
mov
movsl
outsb
jecxz
in
pop
test
lret
xchg
cwtl
mov
add
out
or
and
mov
lret
imul
out
or
sbb
loope
xchg
fwait
lret
shlb
pop
or
inc
rclb
mov
rorb
add
push
cld
gs
imul
push
in
xchg
xchg
dec
jo
in
daa
jmp
mov
lds
jae
int3
cmp
int
mov
cltd
aam
dec
xor
push
fimull
lahf
int
cli
inc
pop
mov
xchg
push
fnstsw
sbb
cmp
pushf
lock
pop
dec
mov
adc
fidivrs
arpl
sbb
das
repz
insb
popf
lea
stc
iret
arpl
addr16
sub
pop
in
xchg
jnp
xchg
call
pushl
ss
dec
and
pop
lahf
xor
adc
mov
pop
das
js
inc
lahf
xor
mov
mov
imul
out
pusha
dec
iret
test
inc
mov
inc
lcall
aaa
cmp
js
add
lcall
sub
pop
sbb
shll
push
push
push
jge
inc
pop
stc
scas
es
inc
lods
mov
mov
or
mulb
sub
push
ss
sub
mov
stos
andps
cmp
jmp
int
xlat
ffreep
mov
test
test
fsts
xor
xchg
adcb
adc
andb
cmp
mov
pop
and
or
dec
lahf
mov
cmp
in
xchg
push
dec
mov
and
mov
popa
ret
rol
cwtl
in
inc
fstl
lods
repz
adc
pop
or
pusha
jae
push
sub
lods
jmp
cltd
and
cmc
adc
addr16
jg
pop
cmc
fidivrs
cmc
int
mov
das
ud2
je
jmp
dec
int3
bound
mov
mov
mov
in
shlb
adc
sub
jno
inc
sbb
sbb
or
pop
dec
lcall
jp
mov
cmpsl
fisttpl
jp
jl
dec
cmp
add
leave
xchg
clc
xchg
push
dec
sub
je
dec
clc
cmp
out
push
maxps
inc
popa
pop
add
pop
push
jl
icebp
cmp
mov
je
pop
jo
pop
imul
stc
and
push
rcrl
imul
and
mov
lods
mov
cmp
jecxz
push
mov
adc
mov
adc
sub
xor
je
sub
cld
ss
pop
inc
stos
sbb
not
out
popf
sub
sub
cmp
adc
adc
fcompl
sub
cmp
test
jne
movsl
or
arpl
xor
rcrb
cmp
adc
cwtl
xchg
sbb
cmpb
jnp
test
lea
jp
xlat
cmp
adc
push
push
in
ror
das
mov
ds
gs
mov
xlat
lcall
or
dec
mov
push
or
arpl
out
jmp
int3
jns
and
enter
xor
js
leave
into
cli
push
int3
bound
ret
pop
or
fwait
ret
mov
sub
jecxz
repz
add
mov
push
lods
imul
mov
add
nop
cld
rcrb
mov
jg
add
pop
pop
mov
xor
xor
das
jb
call
daa
addr16
mov
xor
and
mov
add
add
add
mov
mov
dec
add
and
add
cwtl
mov
inc
in
xchg
pusha
setle
repnz
hlt
cmp
push
pushf
inc
sbb
sbb
nop
lea
push
fimuls
jbe
aaa
scas
push
dec
notl
dec
add
xchg
mov
mov
jmp
or
movsl
jnp
sbb
idivl
pop
jae
shll
fadds
stos
xor
mov
cmpsb
das
push
inc
outsb
sbb
daa
fsubr
and
popa
outsl
xchg
test
outsl
xor
imul
andb
test
jbe
push
inc
adc
fstpl
out
test
int
jle
xlat
bound
pop
in
or
dec
adc
mov
mov
push
pop
pusha
icebp
jp
subl
mov
fcmovnbe
push
xchg
pop
cmpsb
gs
in
mov
or
cli
and
ret
addl
sbb
fwait
cmpsl
sbb
subl
rolb
and
repz
sub
or
and
fisttpll
rcl
jne
cmp
sub
mov
sub
mov
mov
mov
in
insl
xor
sub
shrl
pop
and
and
lret
cmp
icebp
cld
or
rcr
les
sbb
pusha
rol
dec
mov
out
nop
out
lods
pmullw
ret
jns
dec
inc
lea
pop
jl
hlt
cmp
aas
sbb
into
dec
clc
mov
add
xor
jbe
call
push
repz
push
stos
pop
add
ret
cwtl
dec
jecxz
std
in
test
sbb
cmp
fcoms
xchg
jle
mov
movsb
outsl
push
adc
ja
mov
ja
pop
jge
add
cmc
cmpsb
lahf
popf
mov
notb
pop
fwait
sub
shrl
out
dec
push
mov
mov
cwtl
push
int
out
sbb
mov
in
dec
mov
insl
jp
mov
clc
push
gs
cmc
mov
mov
push
cli
in
loope
add
xlat
mov
inc
jns
test
cmpsb
and
cmpsb
sub
xor
add
cmpsl
xor
into
lret
je
mov
jg
jle
xor
dec
lret
lds
add
pop
xchg
outsb
rcll
daa
dec
push
xchg
cli
shrb
testb
je
je
mov
mov
lods
dec
cmp
daa
and
lret
popa
imul
test
insl
lds
nop
insl
xor
jo
xchg
add
jae
cmp
pusha
push
stos
faddl
pop
pop
faddl
sub
lret
test
divb
pop
sbb
insl
adc
shlb
int3
dec
test
inc
enter
out
test
leave
sub
out
stc
outsb
mov
lods
adc
mov
movsb
mov
aam
xor
test
or
push
scas
aam
arpl
push
push
sbb
std
nop
push
pop
or
jbe
rcll
pusha
lock
sbb
inc
cwtl
lods
cmc
lds
stc
call
and
mov
push
icebp
or
sbb
bsr
jnp
cmp
adc
aam
xor
sahf
and
fucomip
mov
into
sahf
sub
andb
cmc
xchg
dec
pop
sbb
aam
mov
jecxz
into
jo
or
xorl
clc
mov
jb
mov
out
adc
xor
or
clts
add
xor
push
int3
pop
sub
mov
addl
dec
push
movsl
dec
in
dec
in
adc
and
mov
or
rcrb
inc
jnp
stos
shl
xor
leave
pop
cwtl
inc
sbb
cmp
xchg
jbe
sub
sbb
leave
setl
jmp
in
mov
mov
inc
cmp
xchg
rcrl
dec
pushf
cli
push
mov
sti
pop
mov
ret
sbb
xchg
dec
and
es
and
xor
adc
sbb
movsb
or
addr16
inc
push
and
jb
jecxz
sahf
pop
out
pop
mov
mov
pop
lret
mov
dec
mov
fisubrs
dec
pop
rcll
int
mov
or
orl
add
in
push
pop
je
xchg
push
dec
cmc
jne
mov
and
loop
mov
insl
fisubl
fildl
add
call
jecxz,pn
jno,pn
loope
adc
nop
push
dec
dec
mov
mov
repnz
pop
mov
jp
jns
rcrb
mov
sub
outsl
call
add
lock
jne
addr16
and
xchg
pop
xchg
lods
lea
or
out
and
divb
sbb
stos
jl
daa
sbb
adc
test
test
pop
and
add
or
dec
leave
pop
and
std
add
sub
es
add
pop
xor
fcmovnb
dec
ss
fcompl
pop
cmp
jbe
push
jp
and
pop
jne
enter
ret
arpl
dec
mov
xchg
in
inc
xchg
aad
and
loopne
push
adc
fcompl
cmpsl
fs
loope
rcll
ret
adc
jl
lahf
jnp
mov
pop
pop
in
fwait
movd
sub
das
and
repnz
mov
andb
push
incb
xchg
or
mov
jae
bound
lock
ret
movsb
repnz
ljmp
loope
loope
pushf
loop
bound
sbb
fsubrs
ret
in
arpl
lcall
cmp
insb
lret
dec
or
mov
stos
mov
std
mov
aam
xchg
ss
xor
fdivrl
cld
push
mov
test
mov
test
test
mov
jmp
rcll
or
ret
add
shrb
test
cmc
jb
add
xor
mov
out
mov
adc
ret
adc
outsb
gs
jge
xchg
pop
push
iret
ljmp
xor
clc
mov
popf
scas
adc
jge
ja
inc
xchg
mov
test
fists
adc
cmp
sarb
es
ret
adc
lock
or
or
mov
cmpsb
mov
mov
pop
fsubrs
or
cli
inc
or
sbb
dec
sbb
add
push
jnp
outsl
jle
cmp
lods
into
adc
dec
repnz
sahf
test
outsb
std
popf
sbb
stos
in
jge
jns
add
add
aas
pop
push
jb
stc
dec
mov
add
pop
add
out
push
inc
adc
cltd
mov
adc
fdiv
adc
fstl
lret
and
clc
data16
lock
dec
movsb
sbb
movsl
call
dec
repz
mov
xchg
push
out
xor
in
int3
test
pop
pop
ret
dec
shll
jb
xor
test
sahf
add
repz
add
ficomps
push
push
jb
sub
xor
divb
fdivrl
xchg
cld
call
push
xor
mov
fiaddl
cmpsb
loopne
or
mov
cltd
and
lcall
idivl
jb
cld
in
mov
cwtl
jae
popf
add
cmp
fisttpll
jno
jb
dec
cmpb
xchg
lds
mov
sbb
xchg
xor
sbb
adc
pop
aas
enter
pusha
jl
nop
je
or
pushf
push
push
cmpb
inc
icebp
icebp
add
adc
shlb
in
dec
jo
pop
add
aam
or
or
scas
dec
mov
cs
dec
repnz
sub
and
lahf
sub
cmp
rorb
inc
addr16
fwait
movsb
int
int
lock
clc
bound
xchg
sbb
in
nop
nop
sub
or
mov
cmp
xor
popl
jmp
aas
jg
xchg
sti
pop
leave
int3
or
mov
cld
cmpl
adc
popf
inc
ret
ret
or
lret
pop
dec
push
pusha
out
mov
out
mov
sbb
mov
sub
inc
and
shlb
fcmovb
aam
xchg
and
pushf
repnz
sub
adc
loope
nop
sbb
les
adc
pop
rcll
fs
subl
scas
lds
mov
pusha
pusha
jp
cmp
sbb
cwtl
repnz
in
stc
push
inc
dec
and
xchg
int
jge
cmc
ja
jo
gs
mov
mov
or
inc
stc
fisttpll
je
xchg
inc
mov
jle
hlt
dec
adc
pop
and
jg
repnz
scas
pop
and
sbb
sahf
hlt
xchg
sahf
in
int
pop
cwtl
jg
sub
rorb
mov
cwtl
repz
das
mov
cmpsl
sub
dec
jbe
cmp
push
sub
and
inc
adc
cmpsb
sbb
iret
inc
xchg
dec
pop
sbb
ljmp
sbb
test
test
adc
cmpsl
pop
mov
pop
jns
cmp
mov
nop
hlt
stos
cli
aad
arpl
xor
dec
cmp
sub
pop
sahf
scas
cwtl
rorl
and
in
or
je
pushl
mov
dec
mov
sbb
in
mov
cmp
and
testl
fnstcw
mov
mov
negl
ds
mov
imul
adc
ret
add
movsb
aaa
xchg
jle
adc
push
cmpsb
in
lods
adc
pusha
orb
sub
mov
es
sti
and
jp
sarb
cmp
jne
flds
pop
repnz
stos
cld
inc
movsb
jmp
add
ja
ds
dec
xor
scas
pop
clc
cmpsl
push
push
and
fsubs
andl
aad
test
xchg
imul
dec
movsb
out
test
popa
xchg
jo
add
jmp
notb
outsl
cmp
xor
xor
jl
mov
call
lret
shr
sub
push
push
push
inc
inc
aas
mov
sbb
jmp
pop
push
xchg
imul
add
jae
sub
cmc
pop
out
sbb
sub
or
pop
mov
mov
int3
daa
loop
sub
data16
cmp
lods
pusha
sti
lods
jns
int
xor
aad
icebp
inc
sbbb
jae
test
out
add
cmpb
loop
mov
into
lcall
imul
or
push
pop
sub
movsb
xlat
jbe
loopne
lret
dec
movsl
xor
push
sub
ja
cmc
and
aam
ret
dec
push
insb
mov
adc
test
bound
or
add
hlt
rcll
xor
pop
add
sub
hlt
cmpsb
addr16
inc
xor
mov
lds
sub
js
lret
pop
scas
fdivrs
mov
adc
sbb
sbb
mov
in
mov
ret
add
cmpsb
xchg
mov
aaa
xlat
dec
pop
mov
popf
mov
jo
in
mov
cli
add
sbb
mov
cmp
das
loopne
daa
bound
pop
fmull
lock
mov
jo
adc
pop
inc
mov
cwtl
outsb
sbb
xor
lcall
cs
lahf
mov
xorl
jnp
mov
jmp
push
or
jle
mov
dec
mov
outsl
unpckhps
xchg
sahf
inc
or
inc
cmc
push
sbb
mov
movsb
inc
les
lock
fistps
lds
add
push
dec
movsb
lahf
aaa
movsb
into
movl
insl
mov
popa
jne
push
push
pcmpeqd
fwait
test
xchg
out
in
fisubs
and
jp
push
ljmp
in
push
in
test
cld
inc
rolb
xchg
mov
jg
push
fcompl
fisubrs
sub
mov
jecxz
leave
outsl
jmp
out
gs
mov
xchg
inc
push
cmp
lods
aam
xchg
hlt
ja
std
pop
test
loope
rorl
adc
leave
jg
push
test
xchg
test
dec
test
adc
push
cli
popa
dec
insl
add
in
push
in
popl
adc
mov
rolb
cmc
outsl
dec
or
jns
outsb
inc
sbb
popf
add
incl
cmp
xor
pop
fwait
xchg
addl
fcoms
clc
sahf
adc
pop
cmp
push
sahf
mov
xor
mov
rolb
les
pop
mov
cmpsl
jb
sub
and
inc
lea
test
cmp
nop
pop
sub
push
popf
mov
call
ja
hlt
movsb
out
pop
xchg
loopne
sti
lret
ds
and
cltd
popa
stc
hlt
push
cmp
add
sbb
lods
adc
jae
cs
pop
push
add
add
pop
mov
mov
shll
xchg
pop
add
add
add
lea
into
out
popf
adc
stos
movsb
jnp
add
and
add
pusha
pop
shlb
js
imull
stos
lock
jo
clc
xor
scas
bound
mov
call
shlb
dec
jmp
cmp
sbb
imulb
push
repnz
es
and
rolb
xchg
sbb
mov
shlb
jns
pop
gs
push
push
dec
fdivs
pop
and
arpl
sub
shr
cmpsl
add
shr
dec
aaa
lret
cmp
les
daa
andb
xor
arpl
pop
ret
jp
data16
fildl
lret
push
push
lods
cwtl
out
cs
cmp
in
xchg
bound
jp
jecxz
mov
adc
xchg
sub
pusha
lahf
cmpsb
or
mov
ss
dec
mov
sub
add
les
lcall
aas
jnp
inc
cmpsb
pusha
cmp
sahf
cmc
lods
and
rolb
dec
out
lock
mov
jle
mov
int
lds
xor
push
pusha
jle
imul
negb
cwtl
or
andl
xor
je
mov
fcomps
ss
lea
cmp
pop
nop
rcrb
or
and
mov
mov
lahf
jnp
push
enter
lock
gs
in
or
pop
lock
loopw
or
out
add
inc
pop
jl
jg
ljmp
push
push
gs
imul
dec
pop
frstor
adc
popa
sbb
aam
and
or
xchg
mov
outsb
out
leave
filds
add
movsb
dec
out
mov
in
jae
push
imul
and
mov
adc
mov
sub
mov
cmp
cld
sbb
out
fmuls
mov
movl
sub
adc
cmp
shrl
andb
leave
sbb
movl
popf
sub
mov
xchg
ret
fcmovnu
sub
enter
mov
icebp
xchg
xchg
pushf
push
jge
sbb
sbb
or
inc
xor
int3
mull
lock
add
aaa
push
leave
mov
int3
loopne
call
xchg
clc
in
lahf
mov
mov
ja
out
call
dec
les
and
cwtl
push
sbb
push
aad
cmp
and
shrl
sar
enter
es
add
pop
adc
cmp
or
inc
into
ret
inc
cmp
jmp
sub
cmp
lcall
loop
shlb
dec
push
ljmp
out
aad
stos
sarl
out
loopne
in
popa
fcmovb
incl
mov
fcompl
push
dec
stc
jb
push
out
test
dec
push
gs
jmp
pushf
add
insb
push
scas
mov
shrb
jge
xchg
cmp
fwait
pop
sbb
addl
sarb
fistl
mov
mov
or
add
sbb
in
mov
cmp
rep
push
scas
and
inc
inc
cmp
push
jne
jnp
cltd
mov
outsb
pusha
add
out
mov
mov
and
xor
and
sti
subl
xlat
jl
inc
addr16
fnstenv
jbe
and
jmp
xor
shll
jnp
test
hlt
mov
movsb
call
pop
lds
cmp
push
nop
cltd
dec
jnp,pt
sub
mov
jl
push
push
sahf
pop
ret
lahf
add
mov
mov
repnz
call
fisubrs
push
inc
mov
int
inc
mov
add
enter
mulb
inc
or
mov
fsubp
dec
lahf
fcoml
mov
shlb
push
pop
push
pushf
rolb
mov
fnsave
ds
iret
mov
fisttpl
and
rorb
sbb
in
push
push
jb
cmp
cwtl
xor
push
repnz
adc
ja
arpl
testl
iret
xchg
sub
mov
ljmp
cli
xor
popa
or
lods
push
call
mov
push
sub
sbb
xlat
xor
int
fistpl
mov
push
xor
mov
scas
xchg
xchg
push
mov
or
in
jae
data16
outsb
ja
lods
xor
cld
shrb
cmc
xor
pop
imul
pop
pop
out
loopne
mov
xor
fsubr
pop
stc
in
jnp
pop
mov
mov
imul
cmp
sbb
mov
les
je
dec
sbb
pusha
xorb
or
jge
xchg
sahf
xchg
pop
in
and
xchg
or
push
adc
ror
and
mov
es
jne
sbb
mov
push
fcoms
add
add
xor
movsl
cmp
xor
popa
xchg
andb
icebp
xlat
adc
call
cmp
stos
fcmovnb
mov
inc
pop
fldenv
mov
in
and
movb
leave
rcll
adc
mov
push
daa
adc
fildll
push
jnp
push
adc
insl
pusha
xor
out
push
loopne
in
and
and
shrl
in
fdivrl
jle
sbb
add
insl
fsubrl
pop
nop
jl
mov
fisttps
cmp
aaa
outsb
add
sub
xor
out
enter
lds
mov
movsl
ret
in
arpl
dec
jge
popa
inc
packsswb
push
xchg
loopne
dec
sarb
iret
ja
cmp
jg
sub
and
mov
jle
mov
int
test
push
inc
lret
push
icebp
inc
mov
imul
or
leave
fadds
addb
sub
fstpt
std
add
dec
mov
inc
ljmp
loope
sub
out
or
scas
sti
push
dec
push
sbb
sub
daa
std
pushf
pusha
rol
hlt
sti
cmp
mov
jbe
sub
ficomps
jp
iret
lods
cltd
shrb
mov
jo
xchg
jnp
sti
cli
and
sahf
adc
lock
sbb
xor
lods
inc
dec
push
sub
mov
push
icebp
aam
pop
in
or
subb
jns
out
or
fnstsw
pop
fstps
and
clc
pop
pop
push
rolb
sbb
add
add
add
sti
mov
ds
ret
sub
lcall
test
lods
cmp
test
or
pop
sbb
dec
aaa
push
xchg
stc
out
dec
pop
push
and
std
xchg
movsl
jae
lods
xlat
pop
or
push
dec
dec
dec
addr16
mov
ljmp
adc
cwtl
adc
dec
out
mov
scas
pop
loop
ds
xor
fnstenv
popa
jecxz
sbb
insb
mov
push
xlat
and
and
fyl2xp1
cs
nop
call
daa
imul
cmp
out
xchg
cmc
sbb
and
fiaddl
shlb
insl
test
pop
push
out
jne
push
rolb
and
int
and
in
pop
adc
repz
push
pop
jmp
sbb
cmp
int
and
dec
mov
sarl
shrl
sbb
popf
jl
pushf
sbb
xchg
mov
stos
and
mov
jns
test
imul
mov
mov
movsb
push
xchg
jmp
in
in
and
push
je
add
sbb
dec
insb
ljmp
aas
enter
push
xchg
cmpsl
push
mov
jp
mov
lahf
adc
mov
subb
ret
fidivrs
sbb
push
scas
inc
ljmp
and
outsb
mov
xchg
mov
pop
sbb
pop
outsb
nop
or
pop
test
inc
push
dec
and
mov
inc
sbb
inc
lret
mov
push
mov
gs
xor
sbb
sub
mov
notl
mov
xor
push
fcomps
xor
std
push
in
add
pop
mov
stc
test
cld
rcll
lds
dec
pop
mov
stos
dec
lds
and
cmp
push
push
imul
aas
pushf
mov
jbe
and
mov
ds
out
call
sub
or
iret
pop
or
inc
flds
push
stos
mov
add
adc
mov
aad
loope
fs
fnstsw
iret
push
das
bound
inc
or
xor
and
stos
sub
mov
sbb
mov
push
inc
das
cmp
stc
fcmovb
aam
outsb
scas
jmp
xchg
xor
test
mov
mov
out
push
xor
xchg
scas
xchg
outsb
mov
xor
jge
pmullw
cmp
push
xchg
or
mov
sub
cmp
ss
scas
xchg
cli
mov
mov
sbbb
sub
sub
dec
loop
outsb
lret
in
repnz
xor
push
pusha
add
push
sub
sbb
mov
pusha
push
inc
ljmp
xchg
mov
mov
xchg
xchg
leave
iret
in
js
sub
fadds
jno
xchg
arpl
leave
pushf
dec
push
sbb
push
mov
push
push
sbb
stc
cmpl
hlt
je
lret
adc
aas
push
fwait
cli
int
inc
jnp
cli
add
jne
lahf
mov
sti
loope
popa
test
sbbb
adc
jecxz
and
shr
test
push
mov
in
lea
outsb
out
mov
inc
je
repnz
sbb
lret
adc
add
and
fnstsw
pop
mov
imul
xor
add
jns
out
in
out
adc
xor
inc
subps
imul
jb
or
mov
cmp
icebp
ficoms
dec
inc
xlat
addr16
mov
add
add
lds
xor
roll
jmp
mov
call
pop
or
add
scas
add
adc
xor
xchg
jg
pop
adc
clc
mov
adc
lock
subl
jne
jne
outsl
icebp
lahf
and
mov
inc
sub
dec
xchg
stos
lock
das
fists
gs
sub
imul
pusha
sbb
cmp
hlt
mov
js
scas
popf
adc
xchg
pushf
ficompl
add
jb
adc
stos
hlt
jecxz
mov
mov
out
sub
and
cmp
pop
sub
ret
sub
or
push
outsb
js
ds
fsubr
cmp
lds
dec
ret
mov
or
mov
ja
pop
cmc
clc
jno
daa
fldenv
int3
arpl
fcomip
sub
sbb
or
neg
mov
jl
fidivrs
outsl
pop
jmp
pop
sub
push
dec
addr16
mov
and
jle
push
shll
fistpll
jae
or
jp
push
rolb
xchg
jl
jecxz
insl
mov
xor
push
cmp
mov
cltd
out
arpl
mov
dec
outsb
loope
leave
add
and
mov
mov
stos
cmp
test
pop
mov
push
dec
sub
inc
clc
push
rcr
push
sub
loopne
mov
lahf
testb
scas
mov
cmc
pop
jl
loop
jae
enter
popf
mov
dec
mov
push
sbb
aaa
jecxz
jne
pop
or
pop
sub
push
adc
sub
jle
push
xor
push
rcrb
mov
shrb
scas
mov
push
sti
notb
fstps
repz
ss
out
lods
and
aad
mov
fdivr
fsubs
popf
jp
out
ret
into
pop
les
mov
sub
mov
cmp
sub
xchg
mov
xchg
jno
pop
and
test
and
sub
push
sub
fidivl
xchg
mov
and
int
cmp
dec
pop
sub
push
cmp
push
xchg
and
mov
xor
xchg
and
in
jns
mov
lcall
jp
adc
fcmovu
cmc
js
and
cmp
inc
mov
and
sarl
pop
or
inc
jae
call
test
cli
repnz
pop
xchg
push
dec
jns
movsb
mov
xor
test
pushf
mov
push
mov
xor
popa
or
add
repz
adc
hlt
add
and
inc
pop
mov
push
add
jmp
cmpsl
jns
cld
popa
mov
rclb
mov
inc
and
popf
mov
shl
fidivrl
rcr
sbb
mov
fnstsw
mov
pop
out
cmc
out
and
add
or
xor
sbb
add
add
test
mov
jecxz
arpl
mov
add
pop
add
outsl
push
mov
lds
cmp
mov
mov
in
jno
mov
data16
cltd
xlat
fcmovnbe
les
mov
push
push
xchg
mov
or
repz
sbb
mov
mov
dec
xlat
jg
add
add
jne
in
sbb
mov
pop
mov
popa
xor
fildll
or
and
in
out
adc
cs
inc
gs
ljmp
cltd
push
imul
gs
mov
loop
adc
pause
psrlq
sbb
clc
pop
mov
inc
stos
mov
pushf
in
daa
aam
and
mov
movsb
sbb
mov
add
push
ret
mov
jmp
pop
pushf
shl
add
fldt
enter
push
pop
push
fcomip
push
jl
dec
sbb
and
jbe
sbb
sub
push
jb
dec
ljmp
test
stos
dec
in
jmp
inc
lods
ss
dec
and
dec
or
xchg
rol
mov
mov
push
push
hlt
cmp
outsl
and
or
enter
sub
pop
dec
clc
cmpsl
jmp
push
xor
push
mov
dec
mov
test
mov
imull
decb
mov
lret
sbb
pop
push
rcr
cld
mov
not
pop
test
mov
cli
jge
jp
ret
mov
xchg
jo
aam
push
dec
es
push
lods
pushf
lret
lcall
pop
sub
inc
or
mov
adc
cmp
cmp
je
inc
int
stos
ja
cld
xchg
enter
insb
push
dec
mov
xor
jecxz
pop
push
jno
jne
cltd
mov
pushf
sub
clc
movsb
xchg
pop
insl
rorb
jp
add
add
mov
imul
pop
cwtl
cltd
adc
push
cmp
mov
insb
hlt
pop
sub
pop
femms
notl
inc
mov
ffreep
xor
in
xchg
lods
mov
push
loopne
shl
mov
loopne
push
push
jecxz
push
inc
sbbl
cmp
xchg
int
cmp
arpl
push
std
xchg
xchg
fwait
jp
dec
sbbb
jmp
insl
in
sbb
xor
mov
jb
jge
incl
arpl
jbe
adc
das
and
out
push
cmp
mov
push
xchg
push
ffree
test
lods
orl
sub
mov
movb
repnz
fcmovbe
sub
xlat
arpl
dec
lds
xor
scas
cmp
jne
add
bound
ja
inc
movsb
push
jne
fwait
push
mov
out
jb
mov
lahf
out
sbb
les
mov
and
and
inc
das
cmp
test
or
dec
in
xchg
jno
dec
repnz
arpl
jae
subl
cmp
inc
push
jl
inc
movsb
loop
movsl
mov
ret
xor
inc
xchg
jb,pn
and
sbb
fildl
rcr
lret
and
dec
pop
adc
cmp
mov
inc
les
sbb
mov
outsl
mov
rcll
and
sub
pop
ret
testb
ficoms
jbe
dec
mov
or
sub
jge
mov
mov
sbb
xchg
rolb
sbb
inc
sub
mov
jbe
sarb
cs
mov
lods
xchg
std
shlb
fs
sbb
mov
sti
mov
je
jnp
mov
mov
mov
sbb
dec
aam
sub
pop
mov
or
push
das
cltd
inc
nop
aam
ss
add
aaa
mov
into
add
enter
push
inc
cmp
cmp
in
lods
pop
aam
vpmulhuw
sbb
xchg
inc
fistps
jae
lods
dec
push
loope,pn
sub
cld
ficoms
pop
and
das
lods
sub
xor
in
dec
addb
xchg
lret
xchg
pop
outsl
roll
cmp
cwtl
dec
jg
cltd
push
xlat
scas
negb
mov
mov
push
xchg
pop
mov
loopne
jmp
push
sub
pop
sahf
mov
push
sbb
aam
icebp
sub
and
mov
sub
cs
xor
dec
insl
push
push
adc
inc
shrl
push
rolb
cmp
dec
popf
and
push
xchg
leave
cmp
bound
and
pop
scas
ret
rorb
fcoms
daa
jle
push
add
mull
das
loop
xor
test
mov
loopne
and
sbb
pushf
sub
sti
xchg
push
repnz
sub
addr16
push
jnp
push
aas
xor
cltd
aas
or
je
int3
xchg
inc
ljmp
adc
xor
mov
xor
ficomps
insb
rep
inc
popf
push
xor
mov
lods
cs
jno
mov
mov
arpl
lods
leave
mov
cmpsb
sahf
shlb
lcall
push
inc
fistpl
inc
sbb
enter
push
lret
add
cltd
mov
lea
or
clc
incb
scas
stos
cwtl
rolb
mov
mull
mov
les
lods
push
popa
stos
ret
xchg
iret
and
add
inc
dec
std
adc
add
cwtl
push
bound
mov
fnsave
pop
cmp
xchg
decb
jp
push
push
push
frstor
mov
pop
mov
gs
pop
fistps
cltd
lods
popa
lret
fcmovnb
sub
xor
pop
jmp
and
dec
mov
adc
mov
push
mov
push
data16
add
mov
into
ss
aas
cmp
pop
adc
pop
out
repz
test
pop
and
xchg
or
rcrb
das
pop
aaa
xor
ds
out
out
out
adc
filds
jecxz
adc
sbb
orb
inc
mov
and
mov
stos
sbb
add
or
nop
mov
or
lcall
pop
xchg
rcrb
rcr
inc
lret
push
pusha
push
aaa
call
sub
rcrl
xor
repz
dec
hlt
test
fiaddl
lcall
test
fcoml
mov
arpl
inc
stc
pop
mov
sub
push
cmp
movsb
push
or
ret
mov
xchg
pushf
loopne
lock
movsb
cmc
inc
xchg
xchg
inc
and
xchg
aad
stos
nop
movsb
mov
adc
inc
stc
inc
and
jecxz
cmpsb
adc
mov
test
sub
add
and
add
out
imul
insb
xor
hlt
jg
pop
push
or
cld
lods
xor
dec
pop
add
lods
lcall
add
in
pop
sbb
adc
dec
fldt
inc
inc
fs
ja
daa
cmpsl
loop
push
js
into
js
pop
jnp
leave
idivl
add
or
xor
inc
cmpsl
test
dec
leave
cmp
or
cmp
insb
stc
leave
fwait
pop
lods
int
cmp
arpl
jl
or
xor
lret
inc
cld
pop
adcl
cmp
lods
mov
fldenv
cwtl
dec
ja
nop
jp
sbb
loop
inc
push
inc
and
cld
jo
fsubs
push
jae
xor
test
out
adc
je
sbb
jbe
cli
test
or
sbb
insl
jmp
sub
xchg
adc
addr16
jae
add
andnps
jb
jne
sbb
pop
in
aam
dec
jno
in
sbb
hlt
jo
popf
xlat
mov
ror
iret
or
adc
test
push
inc
inc
or
pop
xor
filds
pop
dec
aad
adc
mov
jp
sbb
sbb
in
shl
push
mov
cmp
xor
push
enter
pop
loop
test
dec
push
outsl
lahf
adc
and
cld
in
xchg
and
sub
jge
repnz
in
mov
insl
add
pusha
call
and
aaa
sbb
cmc
es
icebp
push
rcrl
std
movsl
push
int
or
outsb
dec
ljmp
adc
inc
dec
jns
aad
cmp
je
sub
or
imul
inc
push
das
cmc
xchg
test
test
xor
idivl
mov
shlb
or
xlat
pop
push
xchg
int3
js
ss
jle
push
adc
adcb
roll
bound
xor
xchg
cwtl
push
cmp
mov
popf
pop
sub
cmpl
or
mov
jae
inc
les
cmp
ret
xor
addr16
jne
sahf
fsubs
sahf
jg
insl
loop
xchg
fucomp
stc
pop
lds
hlt
mov
push
cmp
push
fiadds
pop
mov
dec
jp
adc
add
mov
js
adc
xor
push
xchg
inc
add
pop
sub
xchg
adc
clc
scas
fwait
push
pop
inc
push
ds
add
aas
std
push
int
sbb
ljmp
in
mov
outsl
cltd
cmc
aas
sbb
xchg
jae
test
cmpsl
mov
nop
cld
lret
jmp
lock
push
cwtl
loop
push
jbe
mov
mov
dec
das
jne
adc
movsl
xchg
jle
shlb
cmpsb
or
imul
fildll
clc
lods
fwait
xchg
and
sti
scas
mov
std
test
cmp
repz
orb
push
imul
lock
xchg
pop
inc
dec
mov
cmp
sbb
das
std
sub
jnp
adc
cmp
inc
loope
hlt
in
test
mov
popa
test
loop
fdivl
mov
and
rcrl
sub
ret
aam
ljmp
lods
pusha
sub
addl
mov
inc
loop
loopne
mov
xor
lods
fsts
inc
mov
rolb
inc
aaa
iret
and
rcrl
and
sub
jno
in
inc
nop
and
int3
xor
mov
lcall
int
mov
push
scas
stc
int
xor
adcb
add
mov
push
cwtl
cmp
leave
xor
bound
sahf
pop
daa
lods
mov
dec
sbb
cmpb
jo
outsb
push
ja
imul
push
mov
adc
sub
mov
out
mov
jmp
lods
mov
idivl
pusha
aam
fdivs
cmp
lods
jecxz
push
inc
aas
and
push
dec
pop
and
push
sbb
sbb
pop
and
or
dec
push
add
jno
or
and
sbb
and
xor
lret
inc
scas
xchg
adc
js
push
mov
fs
mov
adc
sti
xor
push
mov
stc
bound
aaa
dec
lods
push
and
mov
es
push
cld
and
or
inc
dec
cmp
push
int
xchg
jae
mov
add
inc
xchg
cmpsl
add
or
insb
pop
cmc
imul
mov
lds
xchg
repz
pop
and
sarl
and
aas
and
mov
fsubrs
mov
dec
jl
rcrb
mov
sahf
stc
xor
pushf
cli
pop
jl
pop
adc
inc
bound
shlb
jge
aam
popa
pop
sti
ds
pop
ret
out
shll
loope
enter
mov
insb
jno
imul
scas
outsl
mov
push
xor
test
jns
pop
in
push
xor
outsb
fs
ja
fsubr
xchg
test
xor
lahf
rclb
jnp
cmp
je
pop
fs
mov
push
popa
lret
outsl
push
cmpsb
insb
inc
pop
popa
std
popf
stc
scas
jbe
mov
jns
repnz
push
push
imul
movsl
sub
test
pop
push
es
cmp
sub
jno
in
jae
xchg
cld
jo
inc
rcrb
and
aas
mov
fs
lds
test
bound
adc
add
inc
repnz
fwait
mov
push
gs
sbb
push
jns
outsl
jmp
xchg
andb
mov
pop
mov
push
mov
movsb
pop
jnp
push
pop
jb
add
adc
mov
and
test
pushf
mov
xchg
adc
adc
mov
mov
stc
jp
xor
jne
js
ret
cwtl
and
fidivs
ret
ja
test
in
xchg
dec
lret
inc
fisttpl
and
int
jle
imul
pop
push
pop
cmc
xor
xchg
dec
repz
xchg
and
or
lea
orl
inc
enter
push
mov
lds
or
sbb
pop
cltd
in
je
mov
cs
mov
mov
popa
xor
mov
push
icebp
push
icebp
dec
pop
adc
add
add
popa
jle
pop
lods
into
fisttpl
sbb
das
add
and
add
pop
enter
or
loop
mov
mov
mov
call
mov
ljmp
cwtl
inc
stos
jbe
adc
pop
in
aad
lods
pop
mov
dec
xor
mov
stos
test
sbb
push
push
jno
lea
or
pop
mov
jo
push
xor
push
fsubrs
xchg
adc
outsb
pop
mov
mov
in
jnp
rol
clc
jecxz
cld
or
inc
push
jmp
out
imul
inc
mov
imul
push
add
subb
fsub
fstps
sti
cmp
testb
mov
or
fistpl
repz
stc
cli
adc
loop
mov
mov
std
mov
adc
out
add
lret
push
fistl
mov
sbb
leave
imul
out
cltd
mov
rclb
adc
push
jmp
sub
jecxz
xor
mov
cmpsb
into
popa
cmpsl
sbb
sub
ss
ljmp
inc
jo
aas
xchg
test
sbb
hlt
adc
stos
je
adc
pop
mov
pop
ds
and
inc
xchg
int
adc
cmp
fidivl
jecxz
pop
cmp
jne
lock
scas
fidivrs
in
cmpsl
mov
shlb
xchg
gs
xor
push
sahf
mov
mov
ss
xor
mov
add
rclb
sbb
into
ljmp
in
mov
sub
jg
icebp
loopne
jns
sbb
jle
push
xchg
xchg
jl
repz
imul
push
xor
jl
ljmp
or
je
fs
dec
shlb
mov
add
hlt
ja
pushf
dec
cmp
sbb
dec
or
mov
gs
ljmp
mov
std
jb
inc
cltd
jb
out
out
and
popa
inc
cmpb
dec
popf
ja
xchg
cmp
sub
testb
mov
scas
cmp
or
sbb
out
sahf
push
imul
xchg
decb
ss
test
sti
or
jecxz
ljmp
lahf
loopne
push
orb
repz
sub
xlat
outsl
jmp
cmp
jae
dec
mov
xor
int3
mov
shl
sub
add
jle
cwtl
test
call
sub
cmp
loopne
mov
ret
es
dec
or
js
lea
out
call
fs
aas
cmp
jecxz
xor
std
jg
push
mov
iret
outsl
fdivrl
xchg
lea
movsl
dec
inc
mov
lret
jg
aad
mov
jge
inc
pop
mov
add
loope
dec
lret
xor
push
insl
xchg
into
lock
leave
sbb
mov
pop
std
jge
pop
mov
jecxz
cmpsb
jge
pop
insb
mov
out
mov
adc
sti
lods
xchg
pop
iret
iret
xchg
xchg
out
xchg
jge
or
setns
js
inc
loop
add
stos
lock
cld
dec
fs
repz
sahf
push
outsb
or
cs
daa
and
or
push
stos
inc
adc
jmp
mov
jmp
movsb
imul
lcall
icebp
pusha
push
ljmp
mov
and
push
in
or
adcb
fidivl
shrl
mov
xor
dec
xor
pushf
push
sbb
insb
mov
leave
and
pop
cmp
mov
cmp
cmp
aaa
mov
inc
or
sbb
mov
bound
pop
inc
mov
es
push
mov
shll
or
mov
mov
outsw
cmc
cmp
ljmp
into
lds
in
mov
pop
addr16
add
arpl
dec
sbb
pushf
xor
and
int3
xchg
flds
inc
jmp
shll
dec
out
dec
xor
mov
iret
pop
jns
addl
mov
andb
stos
xchg
pop
jg
fucom
movsb
nop
xchg
xchg
aaa
pop
popf
repz
nop
loope
and
adc
sbb
cmp
mov
pop
aaa
cmpsl
adcb
decb
push
dec
mov
popa
xor
cmpsl
cmp
lds
andb
enter
sub
in
dec
push
add
add
stos
push
xchg
cmpsl
xor
mov
and
out
aas
add
lea
cmp
inc
adc
push
das
movl
fmulp
xchg
enter
sti
mov
mov
jns
cmp
cmpsl
mov
push
inc
and
shrl
xlat
jo
rcr
or
adc
xchg
aam
test
cltd
cmpsb
add
out
enter
outsb
pop
lea
push
shrb
testl
jno
sub
jge
es
xchg
push
addl
rolb
adc
adc
push
pushf
and
or
lahf
push
stos
inc
sbb
lcall
loope
push
addr16
add
int
sub
imul
push
or
inc
add
and
jb
push
dec
data16
and
scas
sub
xchg
inc
jle
push
arpl
scas
movsl
add
test
pop
sahf
outsl
aas
mov
fisubl
adc
dec
lods
inc
adc
mov
jne
xchg
adcl
test
sbb
xor
cmp
js
xchg
inc
enter
inc
imul
lods
out
hlt
push
push
cmp
push
and
aaa
and
icebp
lahf
inc
je
fsts
sbb
pop
negl
es
jb
loope
call
mov
adc
mov
mov
es
adc
jo
xor
pop
out
mov
or
repz
adc
lret
inc
pop
roll
test
pop
sub
stos
cli
aad
pop
pop
mov
mov
mov
mov
jmp
jae
push
pop
dec
out
inc
dec
jo
push
pop
sbb
xchg
fcoms
fimuls
pop
out
fiadds
lods
imul
mov
add
loope
inc
jmp
add
sub
sahf
xor
and
clc
inc
sub
mov
xor
aad
lahf
mov
dec
test
dec
mov
adc
inc
insl
mov
and
jae
mov
push
xchg
mov
pop
into
lahf
mov
add
pushf
sbb
push
sahf
fidivrl
add
in
adc
scas
add
and
add
mov
cmp
icebp
mov
adc
fwait
iret
cmp
pop
cld
adc
das
ret
fwait
jno
mov
adc
push
ljmp
xor
das
sahf
inc
lret
out
or
cmp
add
jb
mov
mov
pop
icebp
jle
lock
pop
mov
ljmp
sbb
ljmp
enter
jne
inc
jne
fcoms
stos
mov
lds
adc
mov
or
cmp
lds
pop
loop
ss
xchg
xor
jle
in
in
mov
fsubr
add
sbb
dec
cmp
push
stos
jb
sahf
sub
adc
pop
jae
out
push
sbb
dec
iret
aad
nop
sub
popf
mov
cmp
aad
push
mov
dec
xchg
jno
mul
ds
adc
xchg
hlt
add
adc
push
or
loope
scas
cmp
cmp
jmp
and
popa
aas
inc
add
arpl
add
fistl
rcll
lahf
adc
rcrl
jb
jmp
cmp
nop
xchg
shlb
iret
clc
inc
and
scas
add
xchg
pushf
fdivrs
addr16
xlat
sti
out
mov
mov
nop
and
mov
frstor
mov
cs
gs
cmpb
cmp
in
push
xor
push
das
cmp
orl
ljmp
iret
jmp
das
daa
cs
pop
in
loopne
mov
xor
push
pop
push
cmp
and
cmc
xor
pusha
cmpsl
bound
jle
out
fcmovb
lcall
pop
test
sbb
xor
ror
scas
les
inc
push
pop
test
push
mov
aam
jne
xor
mov
lret
repnz
mov
pop
pop
sbb
stc
jecxz
add
hlt
mov
mov
push
outsl
jno
mov
cmp
addr16
rcrl
adc
cs
imul
push
inc
int3
cmp
mov
xchg
test
mov
sub
inc
jle
addl
hlt
mov
and
shll
jne
and
ja
cmp
dec
add
dec
nop
mov
or
ljmp
mov
out
sbb
dec
rcrb
lahf
jp
push
pop
cmp
push
mov
fwait
and
or
repnz
jae
dec
bound
xor
dec
stos
ja
test
ret
dec
int3
sub
dec
in
es
jl
das
loopne
leave
jae
cmp
dec
mov
fwait
addb
pop
fsubs
dec
sbb
popa
ucomiss
pop
hlt
inc
sti
mov
pop
stos
cld
int3
jae
push
lret
and
sbb
xor
adc
sbb
insl
xchg
xchg
dec
lcall
jo
mov
push
fld
and
stos
xchg
xchg
pop
jle
xchg
fsubp
arpl
jae
aam
inc
les
mov
rcrl
mov
sbb
loope
insb
inc
xchg
push
and
fsubs
inc
mov
mov
add
pop
nop
or
and
sbb
gs
mov
cli
cs
inc
mov
mov
test
push
mov
fcomip
shll
and
in
xchg
pop
fstpt
lcall
dec
xchg
dec
add
les
ret
jecxz
dec
ficompl
scas
outsl
lods
call
fnstenv
mov
mov
orl
insl
mov
cmp
ret
in
cmp
mov
sbb
stos
jno
xchg
aas
push
pop
repz
decl
stos
mov
stos
push
push
imul
cmpsb
pop
aam
mov
xor
mov
rcr
ret
arpl
hlt
ds
mov
in
aad
jg
push
pop
and
clc
jb
mov
jge
enter
sbb
or
push
sub
jg
repz
mov
jg
push
fsubr
rcrl
xor
pop
mov
xchg
and
stc
es
aaa
cmp
fbld
fcomip
enter
rol
stc
pop
add
lret
cld
fcomi
movsb
in
mov
sub
popf
xlat
arpl
mov
dec
into
cwtl
lds
or
jne
jg
cmp
lcall
imul
lods
stos
and
sbb
lret
adc
xchg
adc
loope
leave
mov
adc
jns
pop
push
and
cwtl
push
outsl
enter
sbb
rcll
out
jp
sub
bound
jns
jo
inc
mov
or
push
push
out
and
xchg
dec
das
add
mov
or
ds
inc
aas
dec
int3
std
mov
sti
jmp
jb
mov
pop
cwtl
lcall
mov
aam
shl
mov
insb
push
lcall
repnz
xorb
xor
jecxz
mov
jnp
das
ljmp
xchg
jno
push
fimuls
pop
loopne
or
mov
call
dec
jns
cmpsb
adcl
leave
push
xor
rol
mov
lret
xchg
cli
mov
add
xchg
in
mov
cmc
xor
inc
mov
out
aas
mov
test
enter
pop
repz
into
push
inc
mov
or
scas
sbb
xchg
mov
xchg
dec
imul
pusha
and
mov
or
testl
jmp
adc
push
loope
pop
sub
xorl
pop
adc
mov
dec
push
push
loopne
adc
loopne
lahf
sbb
add
mov
jae
lock
std
lock
ja
cmp
bound
inc
and
inc
add
mov
inc
sbb
aas
sub
add
mov
mov
inc
and
stos
cmp
test
adc
sbb
fldt
stos
pop
leave
push
insl
sahf
push
out
sub
mov
xor
lods
inc
outsl
push
mov
fsubl
add
stos
fs
out
roll
sar
mov
mov
pushf
ljmp
nop
xchg
or
pop
dec
cmp
jns
pop
clc
scas
ret
pusha
and
loop
shrl
jbe
xlat
ret
pop
insb
and
int3
aam
sub
je
push
cmp
pop
fcompl
lcall
add
add
push
add
ja
xchg
popf
mov
xlat
test
add
pop
add
sbb
lods
inc
fsubr
mov
push
hlt
mov
add
ljmp
shrl
leave
jg
mov
repnz
jl
int3
int
or
lret
sbbb
jge
jmp
movsb
add
xor
sbb
add
push
or
xchg
movsl
xlat
addr16
add
and
scas
cli
mov
xchg
mov
or
sbb
push
lods
lret
jecxz
adc
leave
inc
push
mov
sbbb
ds
in
inc
add
test
jge
call
cmp
shrb
test
xchg
cmp
jnp
lret
mov
cmp
push
in
fisubs
out
notb
fisubrs
push
mov
iret
xchg
and
inc
xchg
enter
outsl
xor
jae
sub
cmp
add
hlt
push
or
cs
aaa
push
jp
testl
pop
ret
fisttps
or
xchg
jns
aaa
mov
jg
gs
shr
ss
mov
and
les
dec
xor
push
repnz
test
or
jge
cmc
push
in
add
fisubl
into
push
in
inc
icebp
les
addr16
je
mov
add
and
jo
lret
lcall
cmpsb
or
mov
iret
or
pop
add
out
push
popf
test
add
repnz
jp
cld
test
pop
js
movsl
rclb
inc
aaa
enter
push
push
enter
mov
hlt
call
jb
js
in
and
sahf
cmpsb
insl
jg
sub
inc
ljmp
iretw
sbb
pop
insb
fistl
cmp
out
add
add
ds
iret
loop
jo
jns
inc
cli
shll
call
nop
aam
testb
mov
in
nop
sbb
cmp
push
dec
mov
dec
xor
mov
xchg
cs
das
jmp
into
push
faddl
outsl
imul
jl
pop
call
push
lds
xchg
jmp
push
clc
mov
insl
test
xchg
xchg
lret
movsl
add
cli
push
sti
int
add
insl
stos
das
dec
adc
sub
sbb
inc
ljmp
test
xchg
or
push
mov
xorl
ljmp
flds
imull
das
push
xchg
cmp
mov
pop
jl
and
dec
dec
and
dec
pusha
cli
ss
cmp
cmp
or
aad
mov
jne
or
test
pop
ret
leave
mov
sbb
ljmp
movsl
xorb
rol
and
aad
ss
jge
stos
mov
aas
xchg
xor
xchg
je
jmp
loopne
lods
mov
cwtl
xchg
pop
cwtl
mov
adc
loopne
xchg
aaa
jp
jno
dec
xchg
mov
pop
shlb
sub
ljmp
rclb
js
enter
pop
or
inc
sbb
out
and
sub
push
sbb
jo
jne
xchg
xor
pop
mov
pop
pushf
mov
xchg
pusha
pop
and
ss
cmpb
pop
mov
and
pop
mov
fmuls
xlat
mov
pop
sahf
mov
fisubrs
dec
mov
mov
sub
jge
rolb
and
aaa
scas
pop
sbb
out
jl
mov
in
js
daa
leave
jecxz
mov
sub
lods
sbbl
out
dec
cs
push
ljmp
sbb
mov
test
shlb
push
ret
push
lods
popf
sbb
dec
add
insl
aas
sub
sub
add
sahf
inc
into
xor
mov
imul
rcll
jg
dec
xor
jb
mov
push
ja
in
shll
je
jo
and
scas
jnp
or
or
mov
mov
cmp
imul
push
cmp
loop
inc
sbb
mulb
mov
insl
std
fbstp
sbb
xchg
push
mov
jae
sahf
ret
cmpsl
dec
inc
sub
movsb
pop
fsubs
out
push
lds
sbb
mov
mov
je
aaa
arpl
mov
popl
sub
cwtl
sub
mov
mov
pop
pop
stc
push
jge
imul
mov
mov
adc
out
ss
mov
xor
push
sbb
je
andl
cmp
in
aaa
and
icebp
jmp
cmpb
mov
add
mov
xor
push
xor
xor
in
inc
sub
add
jo
aam
popf
decb
cmp
imul
repz
ss
pop
adc
lcallw
sub
jnp
outsl
pusha
inc
arpl
scas
popa
out
sahf
dec
add
fwait
inc
out
dec
repz
rcrl
lds
push
add
sub
adc
daa
inc
test
mov
jae
jmp
in
adc
inc
arpl
cltd
cmp
ja
jl
mov
aam
inc
inc
jbe
or
shll
loop
push
adc
jbe
imul
adc
or
lds
sub
lock
sti
mov
push
adc
repz
popf
push
shrb
mov
xchg
xchg
rol
out
push
sahf
add
cmp
ret
imul
add
add
fisubs
loop
repz
ja
push
add
sbb
lds
xchg
mov
imul
or
or
std
out
adc
in
inc
xchg
adc
imul
repnz
in
xor
adc
push
inc
xchg
mov
cmp
mov
out
lock
add
insl
sbb
inc
test
imul
arpl
ret
sub
imul
sbb
mov
dec
lret
dec
jo
stos
jmp
test
or
jae
test
inc
call
pop
dec
test
add
push
mov
gs
out
sahf
push
gs
and
dec
pushf
stos
ja
pop
ficoml
sti
cmp
push
push
pop
filds
mov
clc
pop
cmc
std
loop
mov
lret
mov
add
insl
fdivrs
js
push
lret
fldz
sbb
lret
adc
pop
cmpsl
stos
xor
push
push
push
insb
and
les
fstpl
sbb
cmpl
arpl
lcall
or
add
and
add
inc
cli
lcall
iret
sbb
or
test
xor
popf
xchg
xchg
mov
in
sub
mov
mov
ss
addb
cld
cmpsl
mov
popl
xchg
push
in
fs
insl
std
lea
arpl
out
sbb
or
xchg
repz
mov
mov
sub
lcall
pop
mov
cmp
ret
inc
push
or
push
adc
rcrb
pop
cs
push
push
lret
mov
pop
xor
repnz
cmp
lahf
jnp
jbe
test
std
sbb
inc
loop
jne
inc
mov
insl
cmp
clc
mov
push
out
or
shlb
int
push
negl
lahf
mov
fs
mov
sbb
cld
rclb
sbb
jecxz
pop
sbb
mov
repz
stos
mov
scas
xlat
xchg
cmp
repnz
cmpsb
gs
push
std
add
cmp
xchg
insl
test
stc
popf
sbb
jecxz
leave
and
adc
xor
inc
fdivrl
jl
mov
test
lods
shll
or
lea
lret
cli
sti
in
in
pop
in
inc
pop
ja
outsl
xchg
aaa
and
mov
movsl
pop
shlb
inc
ret
add
outsl
lock
mov
insb
into
sbb
in
stos
add
or
push
adc
add
repnz
pop
ja
jno
push
icebp
xchg
lcall
xor
push
inc
mov
pop
mov
sbbb
rcrl
js
mov
mov
xchg
jg
sub
pop
xchg
out
js
addr16
fldl
mov
outsb
push
sub
test
mov
jnp
push
std
movsb
mov
clc
inc
das
xor
in
call
sti
push
inc
mov
or
sarb
or
dec
bound
inc
cs
fimull
iret
push
in
int
decb
ja
jns
pop
call
lea
xchg
dec
cld
push
and
add
mov
adc
out
sub
mov
bound
aad
mov
lock
enter
adc
push
xor
xor
lret
or
mov
or
pop
adc
sub
push
xchg
ds
mov
test
xor
xchg
push
fwait
cli
push
inc
sub
add
cmp
adcb
insb
pop
out
leave
dec
xor
ljmp
mov
cmp
cmp
jnp
adc
xlat
movsl
inc
scas
stos
mov
mov
bndldx
cmpsl
in
imul
lret
int3
stos
lods
fistl
mov
ret
dec
loope
mov
mov
clc
out
adc
jmp
insl
push
loope
xlat
mov
lock
xchg
pop
int3
pop
lods
shlb
jp
fucomp
or
or
pop
cmc
jnp
je
dec
and
sti
and
test
clc
loope
push
ds
sbb
mov
and
adc
mov
sbb
xlat
cmp
cmp
pop
xchg
and
and
test
pop
mov
ret
lods
xor
xor
fildl
push
mov
ret
aas
cmp
enter
outsl
fimuls
rorb
fidivl
js
jb
bound
cmp
clc
aam
push
xchg
cmpsb
mov
inc
repz
or
jge
push
sbb
xchg
aaa
sbb
stc
add
jle
pop
or
xor
and
pop
inc
lods
and
mov
mov
lcall
add
ret
jns
mov
sbb
cli
inc
dec
lret
pop
cmp
mov
jo
mov
mov
stc
faddl
jb,pn
popa
push
call
sbb
leave
push
sbb
test
pop
roll
andl
mov
pop
test
sbb
in
push
adcb
stc
pop
add
dec
sub
push
out
orps
pop
movsl
dec
test
xchg
scas
loopne
xor
mov
mov
pop
and
cltd
scas
or
imul
sbb
xchg
movb
rolb
out
lods
mov
es
test
lahf
jp
iret
lods
jge
int3
mov
test
xor
mov
js
std
dec
inc
or
sbbb
inc
cwtl
scas
outsl
shr
stos
stos
movsl
setg
push
pop
cmp
push
and
lods
xor
pop
mov
xor
test
rol
dec
inc
mov
or
lret
xor
js
inc
sub
sbb
jno
push
clc
mov
lret
ret
test
iret
push
out
xor
lock
aam
outsb
mov
mov
push
fsubrp
add
jbe
cmpsb
cmc
stos
in
roll
outsl
jle
scas
addr16
mov
xor
inc
stos
mov
push
xchg
loope
dec
clc
daa
imul
sub
andb
shl
testl
mov
jae
dec
sub
sti
lret
daa
fs
push
arpl
sahf
lock
mov
testb
lds
scas
inc
xor
int3
push
sarb
sbb
fisubs
shrl
mov
pop
sbb
cld
shll
xchg
cltd
dec
sub
orb
push
cmpsb
aas
mov
dec
or
and
dec
mov
pop
dec
fimuls
sbb
pop
push
inc
pop
pop
sub
push
jns
xchg
arpl
test
inc
aaa
mov
fistpll
movsl
mov
lret
dec
mov
jecxz
ret
sbb
movsb
mov
movntq
out
cwtl
ljmp
push
fwait
cmp
das
push
mov
adcb
push
pop
xlat
or
and
lea
aad
movsb
in
push
dec
or
enter
pop
xchg
jp
pushf
cmc
divb
fs
fidivs
dec
sub
mov
or
push
push
cmp
xor
into
pusha
lods
sub
mov
aas
cwtl
adc
ss
fcmovnu
test
mov
clc
xchg
cmp
dec
sahf
testb
jnp
mov
mov
insb
jbe
clc
push
mov
stos
pop
xor
mov
in
sbb
mov
add
adc
mov
cli
cmp
mov
mov
add
and
test
sub
pop
xchg
pop
mov
xchg
cmp
and
rcl
xchg
xor
xor
sahf
mov
mov
mov
das
je
adc
imul
sbb
leave
pop
cli
mov
movsl
sub
daa
mov
or
and
into
aam
fdivr
ss
fs
sbb
cwtl
adc
xchg
pop
inc
mov
mov
cwtl
out
jb
nop
pop
in
loope
lret
cmpsw
sbbb
cld
pop
ficoml
push
mov
push
jno
das
pop
inc
int3
rcll
dec
jns
xbegin
inc
js
cs
jno
xchg
jae
das
push
inc
pop
andl
shll
push
repnz
lret
in
aaa
pop
mov
mov
push
adc
push
or
cmp
mov
imul
sub
cltd
pop
nop
lock
mov
xor
xchg
jns
cmc
add
fildl
lret
push
loopne
xor
fidivrl
in
push
and
push
sarl
inc
cmp
cmp
in
jle
mov
mov
and
cmpsb
lock
xchg
sbb
adc
movsl
cmpsb
mov
mov
cmpl
dec
hlt
enter
dec
out
lods
aam
inc
stc
sbb
inc
sahf
jo
or
cmp
andb
daa
data16
test
push
xor
pop
inc
jo
push
and
mov
adc
out
pop
clc
inc
lret
push
sti
pop
add
push
xor
cld
inc
ret
push
loope
or
insl
or
add
and
xchg
fldenv
mov
out
fstpl
ret
mov
sbb
sub
cmpsl
cmpsb
popa
xchg
movsl
xchg
sub
insl
jnp
scas
mov
inc
add
push
int3
loop
mov
in
xor
dec
adc
cmp
jecxz
repz
ljmp
stc
push
aas
cmp
or
popf
outsb
shrl
int
insl
in
inc
push
and
mov
popl
js
daa
pop
or
dec
jno
xchg
mov
test
push
subb
hlt
or
and
sbb
lock
mov
jnp
dec
hlt
mov
cmp
adc
or
arpl
pop
or
xlat
in
jo
fstl
xor
pushl
push
call
in
push
jmp
ret
jecxz
pop
mov
mov
pop
repz
xor
das
pop
pusha
add
sarb
ss
popa
fldt
fs
adc
divl
push
push
inc
in
cmc
mov
int3
pop
dec
dec
dec
hlt
stos
lods
fsts
jmp
movsb
xchg
cmpsl
sub
dec
mov
fmul
jmp
pop
xchg
pusha
enter
pop
ficoml
jge
jmp
mov
andl
lds
in
mov
imul
mov
ficoms
pop
jns
in
out
cmp
ds
push
insl
mov
sub
inc
or
clc
mov
cmc
ret
jo
push
push
jbe
das
sub
rolb
cmpsl
fwait
jnp
jb
outsl
sarl
mov
fmull
aas
pusha
xchg
xchg
roll
lahf
pop
or
out
out
pushf
cmp
mov
lods
shl
lods
sti
xlat
inc
stos
mov
cwtl
js
add
jmp
les
gs
jo
push
call
mov
cmpsl
mov
pop
enter
or
xchg
or
fadds
fs
repz
xlat
xchg
cmp
idivb
inc
xchg
and
fsub
jne
push
xchg
scas
clc
mov
inc
xor
jge
fisttpl
xchg
orb
out
in
nop
repnz
jo
adc
je
mov
rorl
push
inc
cmp
cmp
pop
push
inc
xchg
es
jno
xchg
mov
stos
push
in
push
lahf
lock
addb
stc
enter
adc
mov
test
and
pusha
sub
push
inc
lods
xor
test
test
push
adc
inc
cmp
xchg
scas
ja
jl
and
push
adc
hlt
inc
mov
cmpsb
out
outsl
pop
jns
jl
jle
test
scas
cmp
sub
and
adc
fwait
mov
cmp
jns
scas
les
lods
stos
xor
in
xor
mov
lds
inc
negl
scas
dec
aaa
adc
andb
lret
xchg
jb
or
lods
jg
stos
shrl
push
sbb
pop
pop
push
sub
pusha
es
test
push
mov
iret
aad
adc
or
pop
fcomip
inc
fbld
enter
push
aad
stos
cmpsl
dec
xlat
aam
mov
pop
xchg
push
jp
jge
jl
add
push
sarb
xchg
pop
push
mov
ds
fs
mov
pop
jecxz
mov
cmp
test
ret
mov
fbstp
push
sbb
inc
adc
or
icebp
inc
mov
daa
pop
inc
mov
jnp
add
mov
jns
cwtl
pop
add
vpsadbw
out
dec
mov
xor
and
pop
out
xor
cmpl
or
xchg
mov
inc
shrb
mov
mov
or
outsb
xchg
ret
xorb
mov
jbe
dec
add
xor
mov
push
iret
test
notb
jp
xor
movsl
pusha
nop
jno
and
hlt
imul
repz
aam
or
hlt
xor
mov
add
fwait
daa
or
mov
test
xchg
dec
cmpsl
xor
dec
scas
and
mov
dec
sbb
push
rol
add
and
push
icebp
pop
pop
or
xchg
mov
cmc
lock
xchg
adcl
jo
cwtl
xor
xchg
adc
into
inc
insb
das
fsubrl
mov
dec
mov
adc
pop
push
adc
xchg
mov
pushf
movsb
adc
mov
xchg
and
clc
pop
notl
jp
inc
outsb
imul
xchg
and
aam
shll
add
jmp
mov
sub
movsb
shlb
loop
sahf
mov
push
and
or
in
imul
inc
loope
pop
js
add
je
sbb
dec
xchg
jle
rorb
and
mov
ds
out
push
not
mov
and
out
mov
sub
sbb
add
pop
add
shr
xchg
mov
sub
pop
fimull
jae
clc
fcmovnu
int
jnp
add
mov
pushf
xor
pusha
mov
pop
and
lea
fsubs
push
xor
cmp
mov
mov
sbb
fidivrl
negb
jne
mov
lahf
xor
inc
clc
scas
mov
adc
es
ja
or
adc
sti
dec
push
rcrl
xor
or
loope
add
and
dec
xor
pop
aad
sbb
dec
es
lock
sbb
pop
out
or
dec
mov
add
push
mov
and
movsl
mov
ret
cmp
adc
mov
loop
mov
xchg
dec
idivb
out
or
iret
mov
cli
dec
mov
roll
movsl
sub
lcall
xor
sub
sbb
aam
xor
or
and
xor
out
or
sub
mov
xor
sbb
xor
xchg
pop
movsl
xor
mov
inc
sub
jge
outsb
popa
jno
mov
test
push
jmp
sbb
clc
sub
sbb
leave
mov
push
mov
popa
inc
xchg
fbld
mov
incb
negb
sbb
dec
xchg
pop
mov
sbb
fwait
cmp
pop
mov
jb
les
out
je
andb
in
out
cmpsb
leave
mov
pop
xchg
cmp
cmp
jmp
mov
mov
xchg
pop
or
das
adc
hlt
addr16
rcr
jae
out
sub
mov
mov
mov
xchg
push
pop
push
jp
sub
js
fnstenv
orl
pop
xchg
add
sbb
push
test
out
jl
scas
sbb
aas
rcr
lods
jp
mov
insb
mov
pop
repnz
sbb
das
in
push
jecxz
inc
cmp
xor
pop
js
insb
ss
add
enter
push
pop
imull
es
into
out
sbb
xchg
decb
pop
addr16
mov
sti
mov
and
loopne
cltd
xor
xor
xor
out
mov
popfw
ss
xchg
or
rolb
push
and
mov
fisttpl
rcr
cmpsb
icebp
shr
outsl
ret
dec
pushf
xchg
dec
lahf
mov
jg
cmp
mov
dec
push
jbe
dec
dec
sub
cwtl
aad
xchg
scas
rolb
jns
nop
jmp
in
test
cmp
stos
push
and
test
and
jns
roll
dec
mov
pop
add
arpl
rcll
out
loopne
push
xor
leave
std
cmp
push
xchg
jne
sub
js
push
jne
ret
push
ljmp
add
and
test
ljmp
and
xor
testl
icebp
inc
mov
mov
mov
mov
lret
dec
stc
and
lret
push
xlat
push
fiaddl
mov
dec
ffree
mov
out
pusha
jnp
mov
es
push
sbb
and
dec
xlat
mov
mov
imul
push
push
test
mov
xchg
in
es
adc
out
fwait
scas
add
jns
push
sarb
or
rcl
add
inc
lods
xchg
add
sub
cld
xchg
dec
dec
out
push
sub
xchg
mov
mov
lods
push
inc
sbb
and
sbbb
inc
cmp
mov
mov
cmp
sub
out
push
lcall
mov
push
aaa
test
jecxz
cmpsl
outsb
jle
push
in
mov
jae
scas
cld
test
jae
cmp
hlt
jno
in
push
add
fucomp
inc
add
push
negl
das
jle
jns
mov
dec
repz
pushf
repz
and
cli
insl
jae
in
dec
cmp
into
xchg
stos
xorb
jnp
pusha
stos
mov
jle
lahf
xchg
pop
fsubs
push
mov
push
andb
aas
pop
pop
loopne
pop
lcall
mov
mov
pushf
cmp
repnz
sbb
in
cmp
cmpsb
shll
pop
faddp
pop
xchg
lock
incb
ror
jae
lahf
mov
cs
dec
in
popa
dec
dec
bound
hlt
mov
cs
imul
inc
ljmp
shr
in
inc
inc
jbe
mov
and
scas
mov
mov
mov
and
int3
addr16
xchg
ret
mov
testb
or
mov
cli
pop
fmull
adc
dec
shrb
cmp
jb
lock
inc
into
repnz
jl
sbb
filds
sub
fimull
outsl
mov
sbb
push
fcoml
pusha
adc
dec
imul
icebp
cld
mov
jnp
pop
sarl
mov
xor
inc
out
leave
mov
filds
mov
inc
inc
pop
mov
outsl
add
roll
shll
add
cmpsb
mov
mov
jg
pushl
orl
ffreep
enter
mov
inc
lods
ss
testb
gs
das
add
pusha
pop
add
cmc
pop
sbb
jbe
inc
lahf
fistpl
das
popf
scas
aas
add
ds
push
stos
jge
pusha
xor
push
ret
into
adc
mov
repnz
or
mov
jne
pop
add
mul
xchg
insl
sub
sti
push
out
xor
sbb
or
out
arpl
popa
fildl
cli
adc
movsl
cmp
lock
addr16
lret
faddl
dec
sbb
ljmp
iret
mov
lds
shrb
inc
mov
insb
jle
xchg
dec
lea
xor
out
fstps
mov
aaa
mov
jno
inc
cmp
mov
push
repnz
mov
movb
movsb
xchg
adc
push
mov
mov
ret
bound
into
or
add
in
pop
scas
movsl
test
inc
ficoms
xchg
push
scas
clc
sub
jbe
inc
scas
push
aad
stos
daa
add
jno
neg
ljmp
xchg
mov
push
add
adc
mov
sub
sahf
rcpps
cmpsl
mov
test
inc
out
add
xor
pushf
leave
mov
add
insl
les
mov
jae
jo
sub
cmp
add
adc
addl
gs
lock
xchg
xor
loopne
jmp
mov
xor
test
adc
push
addr16
sbb
into
fbld
cmp
sub
push
je
dec
mov
or
push
sti
pop
dec
xchg
adc
loopne
mov
cmp
pop
and
fwait
dec
pop
in
das
push
arpl
push
call
jle
xchg
ret
sti
and
mov
sbb
or
mov
pop
ret
jno
push
or
or
xchg
clc
xchg
push
into
inc
push
imul
test
xchg
pop
addr16
mov
fmul
xchg
push
push
xchg
xor
pop
inc
lcall
add
pop
mov
cmp
aam
adc
dec
cmp
popf
lret
add
popa
divl
in
push
fdivp
filds
aaa
outsb
out
cmp
jmp
push
mov
fwait
xchg
lods
enter
shl
into
fimuls
mov
xchg
push
and
or
sti
adc
enter
mov
jb
dec
sti
mov
and
ss
jb
icebp
jg
pop
fwait
clc
sub
mov
dec
adcb
pop
push
or
or
push
cmpsl
sti
sarb
lea
aaa
insb
jg
lock
out
and
cmpsb
and
pop
push
dec
ja
push
inc
mov
insl
xor
sbbb
adc
sub
sub
or
jecxz
cmpsb
add
add
lret
fnstenv
test
jmp
mov
rcr
inc
test
mov
nop
pop
xchg
bound
adc
cmp
xchg
nop
xor
enter
lds
repnz
inc
lods
pop
das
mov
aad
fisttpl
adc
dec
mov
lods
mov
adc
adc
xchg
in
adc
jmp
fdivl
lods
and
test
mov
push
int3
pop
dec
and
pop
inc
mov
pop
sub
shlb
xchg
mov
not
lret
push
inc
xor
js
mov
shll
xor
pushf
and
inc
add
js,pn
mov
push
or
sub
loope
sbb
cmp
mov
jns
cmp
mov
mov
mov
pop
jge
dec
lods
je
and
push
cmpsl
fs
stos
pop
daa
lods
mov
dec
jbe
outsl
push
xchg
or
or
aad
imul
xor
das
mov
int
pop
adc
pop
xor
sbb
loope
inc
lods
out
pop
pop
sarl
aad
mov
jns
out
cmpb
in
sub
pop
outsb
jmp
mov
aam
mov
pop
js
pusha
and
xchg
push
jne
inc
pop
test
jl
pop
cmp
or
aas
movsl
and
test
subl
test
movsl
ja
mov
mov
lcall
push
jl
add
pop
movsb
lods
pop
outsl
call
sbb
mov
stc
jge
cmp
mov
hlt
mov
test
push
xchg
hlt
and
xchg
out
jp
sub
pop
int3
shr
out
inc
jbe
clc
arpl
pop
pop
mov
or
scas
fcompl
push
sbb
outsb
in
push
pop
push
cmp
mov
mov
adc
jne
pop
rcrl
inc
and
out
cld
xor
icebp
add
mov
cs
mov
lea
mov
fildl
out
repnz
push
mov
push
xor
xor
inc
pushf
daa
or
movsb
or
sbb
lods
fucomip
rorb
or
inc
ret
mov
jg
or
xor
lret
push
inc
lahf
pop
stc
jl
mov
daa
loop
sbb
adc
in
pusha
inc
rol
inc
stos
push
xor
cmp
clc
jnp
mov
adc
fiaddl
adc
xor
or
pushf
popa
leave
lds
call
imul
xchg
insb
push
sbb
adc
in
repnz
adc
test
and
xchg
insl
mov
outsl
addr16
scas
sahf
pop
mov
addr16
inc
push
repz
jne,pn
xor
xor
arpl
mov
mov
fidivs
inc
push
mov
mov
cmp
mov
push
add
sub
aad
fwait
pop
jbe
fwait
inc
pop
dec
cmp
in
or
insb
shll
mov
sub
cmp
lods
mov
xchg
fs
dec
cltd
fidivs
mov
push
pop
ret
adc
push
dec
addb
filds
mov
jo
lods
and
add
popa
test
roll
rcll
jnp
push
adc
xor
les
mov
test
xchg
and
fdivl
cmp
in
ljmp
mov
jp
insb
cmp
dec
pop
ja
movsl
push
or
imul
jne
jmp
shll
nop
mov
push
loop
icebp
jmp
fsubl
mov
xchg
mov
js
mov
test
ds
push
push
cmpl
shrb
dec
cld
fistps
nop
xor
push
mov
xor
xchg
xor
call
rorl
pop
sub
jno
sbb
dec
mov
jmp
adc
das
mov
cmp
or
sarb
adc
jne
or
jne
cld
or
ret
mov
pop
cmp
mov
sub
fidivl
inc
sbb
loope
pop
out
out
loop
mov
push
mov
xchg
inc
loopne
sub
lahf
sub
inc
lods
mov
scas
repz
or
rol
sbb
push
lds
in
xchg
arpl
and
xor
xchg
lcall
cmp
mov
lret
fwait
sub
bnd
pop
or
cmpsb
lcall
rcrl
shl
shll
test
aam
je
xchg
roll
adc
pop
dec
sbb
mov
push
rolb
loop
cwtl
dec
dec
pop
dec
sub
aas
gs
les
cmc
lcall
stc
jmp
push
aas
jp
jg
inc
jecxz
adc
or
add
dec
cmp
xor
cmp
aaa
sbb
mov
jbe
mov
mov
pop
jb
push
gs
ret
test
xor
stos
jmp
xor
mov
in
idiv
jg
and
mov
pop
lds
add
pop
add
cmpsl
and
gs
adc
dec
push
dec
fmull
jmp
sub
adc
add
loopne
cmp
sahf
mov
scas
adc
ljmp
sub
addl
roll
loope
xchg
lock
pop
push
out
cmp
popf
mov
push
sub
mov
sahf
push
xor
fdivs
daa
out
enter
xchg
aaa
mov
ficompl
arpl
jae
mov
jnp
fstpt
loopne
into
mov
cmp
mov
std
and
arpl
lret
outsb
xor
adc
jl
cmpsb
cwtl
sub
daa
mov
xchg
outsb
sub
outsb
pop
xor
pop
sbb
es
int
scas
mov
pop
das
push
les
setbe
daa
inc
repz
mov
jl
xor
sbb
jns
sarb
fdivp
or
xor
xchg
icebp
out
xor
stos
incl
cld
jecxz
or
and
xchg
cmp
push
testl
cmp
sbb
add
mov
inc
fisubs
inc
jae
dec
sbb
sbb
ja
push
imul
mov
dec
or
das
loope
inc
fdivrs
inc
enter
sub
cmpsb
xchg
es
shld
stos
cld
jnp
xchg
dec
clc
mov
xlat
inc
dec
push
loope
inc
nop
push
stc
js
add
stos
js
adcb
and
pushf
insl
push
ret
movsb
ja
pop
std
out
inc
cmc
and
lds
sbb
inc
xor
cmp
sbb
lods
push
rcr
clc
daa
mov
pop
xchg
add
nop
les
es
push
and
movaps
xchg
repz
xor
mov
jge
and
add
pusha
aaa
mov
pop
cwtl
repz
daa
adc
shrb
imul
inc
xor
int
and
imul
cmp
ret
imul
popa
nop
or
scas
add
inc
lods
add
nop
int
ret
add
pushf
push
add
adc
push
int3
mov
add
add
repz
std
cli
mov
test
loopne
test
push
pushf
jmp
outsb
cltd
out
rcrl
add
clc
ret
mov
gs
int
push
sbb
dec
and
push
push
pop
cmp
into
pusha
push
xor
or
adc
lea
mov
stos
push
stos
mov
jl
stos
mov
dec
lret
xchg
ljmp
jns
gs
ret
lret
lret
test
push
movsb
or
xor
jae
push
or
inc
leave
stos
movsl
iret
in
cmpsb
xor
test
jmp
dec
arpl
or
pop
fwait
mov
xor
std
nop
fwait
dec
mov
je
inc
clc
shl
fdivrp
mov
stos
dec
dec
testb
mov
adc
movsl
sbb
call
or
sub
mov
cmp
cld
push
jbe
outsl
aas
das
hlt
sbb
sbb
fldt
cmpsl
mov
xor
shlb
sub
aam
addb
or
repz
adc
ja
jae
les
inc
pop
push
cmp
fs
es
out
pop
push
push
sbb
xchg
and
adc
cltd
ss
pop
push
imul
loope
xor
shrl
push
pop
leave
addr16
and
es
mov
xor
aas
xlat
pop
pop
enter
cmpsl
pop
cmp
dec
cwtl
inc
xchg
cmp
incl
cltd
es
mov
dec
mov
pop
jo
sarb
hlt
repnz
in
roll
sub
fidivs
loopne
inc
arpl
jo
loop
xor
loop
insl
nop
jns
cld
outsl
dec
leave
dec
es
or
addr16
dec
les
cmp
ds
loop
popa
mov
lods
push
rol
adc
out
jne
sub
xor
daa
test
pop
test
xchg
test
test
nop
dec
pop
stc
xor
stos
shlb
dec
sarb
xor
and
shlb
and
jecxz
lcall
rolb
faddp
xor
lods
daa
adc
jp
daa
mov
and
sbb
mov
in
mov
sbb
mov
pushf
and
cmpsb
and
in
fistpll
jno
xchg
testl
out
sar
and
sbb
and
fsub
inc
sub
push
adc
rep
fs
sbb
or
vpmovusdw
mov
call
aad
fiaddl
pop
add
cmp
scas
ds
push
aas
movsl
iret
leave
stc
mov
imul
outsb
fcoml
pop
or
mov
test
mov
inc
jecxz
jp
mov
mov
push
in
xor
flds
shlb
leave
xor
dec
into
ficoml
test
cmpsb
jo
sbb
inc
pop
ficoms
push
jp
loop
pushf
popf
loopne
jecxz
in
xor
xor
or
xor
xchg
lock
dec
mov
sbb
rolb
jl
in
jge
cmp
mov
jbe
xchg
pop
sbb
push
ja
jbe
mov
mov
ficomps
inc
xchg
inc
ret
mov
arpl
pop
mov
mov
jp
sub
jg
pop
xchg
dec
adc
xor
call
xor
arpl
inc
movsl
push
or
clc
mov
imul
xorb
cmp
les
sub
fisubl
push
jbe
add
adc
xchg
mov
out
xlat
cs
test
mov
int3
stc
jmp
pusha
repz
dec
xchg
jle
pop
call
repnz
mov
jg
mov
xchg
cmp
cmp
js
shrb
inc
xchg
sti
inc
fisttps
xchg
shlb
sub
repz
pop
push
lds
mov
mov
shl
out
jp
push
test
cltd
stos
push
movsl
lock
jg
es
xchg
sti
push
shll
cwtl
xchg
shr
inc
jecxz
lahf
sarb
int
sub
inc
jno
and
scas
aas
jbe
inc
adc
mov
cmpb
sbb
mov
pop
push
test
push
cmp
and
add
stc
out
inc
std
fidivrs
movsb
dec
imul
add
and
add
leave
or
jl
jge
and
or
xchg
xchg
add
sbb
pop
lds
or
dec
fistl
lock
mov
add
mov
jle
and
vmovd
xor
dec
jb
pop
and
das
test
leave
mov
jp
and
add
movsl
sbbb
mov
mov
push
sbb
negb
push
mov
inc
into
ds
push
daa
cmc
es
adc
add
popa
dec
out
dec
gs
int3
repnz
pusha
iret
sbb
inc
xchg
sbbb
clc
fsubs
dec
inc
cli
pop
mov
jg
cwtl
cmp
shrl
mov
pop
fdivrs
push
push
cmpsl
sbb
push
lcall
sub
or
aaa
in
push
pop
arpl
outsl
loope
leave
cmp
iret
cmp
sarb
inc
outsb
or
call
scas
xchg
in
cmp
sub
shld
and
int3
jle
jb
pop
lds
mov
movsb
add
int
popa
mov
xchg
add
dec
loopne
js
dec
call
mov
jns
test
pop
xor
mov
repz
or
inc
xchg
mov
jnp
roll
pop
cmp
or
add
inc
fisubrl
stos
lods
arpl
mov
fdiv
shr
das
nop
popf
or
aam
shll
scas
mov
ja
sbb
adcb
cmp
add
xor
imul
nop
mov
das
cmpsb
jge
jne
sbb
lret
and
add
mov
cmpl
pop
out
jle
adc
push
and
mov
mov
ret
lahf
xlat
sbb
inc
add
mov
scas
je
push
and
aam
testl
gs
cmpb
adc
xchg
fisubl
fnsave
or
adc
mov
lods
push
mov
cli
leave
mov
clc
jp
sbb
cli
jg
xchg
pop
mov
iretw
cmpsb
cli
cld
fs
loope
in
mov
or
jge
lahf
xchg
mov
leave
in
into
mov
push
xor
ja
pop
clc
ror
ds
cld
jmp
out
in
cmp
cwtl
push
or
mov
and
enter
inc
mov
int3
les
pop
adc
sahf
fldcw
jecxz
dec
loop
lea
jp
aas
inc
inc
mov
and
sbb
dec
fstp
pop
icebp
pop
cmp
mov
adc
xchg
aas
in
rorb
mov
and
mov
lea
inc
sub
mov
iret
add
pop
jbe
jb
mov
enter
sub
add
int3
vcvtsi2ssl
insl
xchg
out
inc
xor
mov
lock
enter
fsubs
xlat
pop
pop
and
addr16
xor
std
addr16
mov
xchg
shlb
and
push
sbbl
fildll
hlt
cs
push
jae
xchg
movsl
mov
popl
jae
jae
sahf
fcmovbe
mov
inc
cmpsb
cltd
jle
and
jbe
leave
push
sub
shlb
ss
jae
js
sahf
movsl
mov
jp
scas
inc
ljmp
daa
mov
stos
dec
in
mov
in
in
in
andl
fimuls
ds
stc
lahf
sub
outsl
mov
scas
shll
xor
jbe
int
dec
xor
insb
fdivl
mov
cmp
jbe
ret
and
push
shrb
add
les
in
jle
xorb
pop
mov
mov
mov
out
pop
mov
daa
mov
mov
cld
sbb
cltd
sub
gs
fistpll
fwait
lahf
lcall
xchg
lcall
leave
mov
jle
inc
inc
insl
ret
jg
and
pop
cmc
sbb
sbbl
mov
int
fwait
dec
call
pusha
notl
sbb
loopne
sub
adc
clc
imul
or
sbb
in
jmp
lret
sbb
mov
std
gs
cmc
mov
dec
jbe
ror
mov
cltd
jno
es
jle
out
aas
inc
xlat
outsb
cmp
cwtl
inc
mov
in
push
mov
ljmp
and
lods
sbb
mov
add
adc
adc
mov
dec
cmp
adc
movsl
aam
ffreep
lock
test
lret
sbb
lods
movsl
jnp
cmp
rclb
add
push
xor
jle
in
push
call
jle
loope
push
and
jnp
add
pop
push
pop
movsb
or
xchg
addr16
mov
lods
sub
jnp
fmuls
cmc
mov
jp
int3
dec
push
ja
movsb
jmp
scas
pop
loope
aad
pop
lods
inc
lret
loopne
into
leave
inc
sub
aaa
push
lcall
sub
xchg
xor
xchg
jge
pop
sahf
adc
jg
mov
pop
imul
daa
xchg
jne
inc
out
es
add
mov
jne
push
scas
imul
nop
scas
int
or
mov
and
dec
cs
and
sbb
mov
sbb
fxtract
sbb
jecxz
pop
inc
push
daa
or
pop
imul
sub
and
popf
mov
mov
shlb
cltd
mov
xchg
sbb
loopne
and
stos
sub
aas
sub
mov
push
inc
cmp
dec
flds
push
loope
push
mov
pop
das
in
movsb
sub
sahf
dec
add
add
sti
icebp
imul
sbb
rcll
movsl
jg
bound
jmp
mov
dec
das
fistpll
cmpxchg
sarb
fistl
pop
hlt
js
rcrl
push
xor
inc
jmp
std
push
jecxz
outsl
dec
push
pop
sub
jl
xchg
ret
imul
sarb
insl
dec
movsl
lods
fcoms
insb
jo
out
mov
cli
adcl
aaa
xchg
fs
dec
cmp
and
fimull
out
cmp
in
ret
pop
add
insb
xor
and
mov
inc
into
push
js
sub
mov
js
xor
mul
loop
lret
ja
daa
inc
call
out
fwait
roll
add
pop
add
daa
mov
mov
mov
mov
sub
jl
inc
repz
fstl
into
sub
sbb
test
pop
add
jmp
out
or
xchg
shrl
loop
in
cltd
jp
jmp
pop
cmpsl
cmp
xchg
pop
push
mov
test
push
into
xchg
in
sbb
cmp
pop
add
or
sbb
cmpsl
out
out
outsb
fxch
aam
mov
sbb
xorl
push
mov
jns
xor
cmp
xchg
xor
data16
filds
jb
mov
xor
sarb
popa
aas
adc
sub
popf
sbb
daa
bound
mov
int3
push
rcll
pop
fwait
das
loopne
mov
add
cmp
xorl
and
clc
cs
repnz
sub
ret
jmp
jle
lods
insb
push
in
jp
or
sbb
adc
cmp
jecxz
push
adc
jb
sahf
mov
ret
addl
fdivrl
jg
fwait
push
jge
outsb
js
shr
loop
mov
cmp
ret
loopne
jo
pop
push
lea
dec
gs
insl
push
inc
nop
push
pop
pushf
pop
push
aam
xor
aas
mov
adc
data16
jnp
xor
clc
inc
imul
sahf
aad
xor
mov
adcb
dec
cmp
sub
subl
insb
jmp
jecxz
xchg
ret
adc
adc
fadds
inc
les
iret
inc
push
leave
mov
jnp
jle
inc
lods
loopne
call
ds
jne
sub
cli
shll
fistps
int3
hlt
outsl
jl
loopne
sti
mov
cs
jnp
mov
cmp
mov
pop
loop
cmpsl
clc
inc
jecxz
pop
mov
add
inc
mov
addl
add
sub
pusha
xor
jae
mov
aam
scas
pop
pop
add
call
pop
std
out
out
sub
mov
mov
out
mov
gs
jecxz
jmp
or
scas
pop
popf
js
push
push
fs
cmpsb
pop
imul
push
cmp
outsb
out
sbb
insl
cmp
enter
mov
mov
les
out
sub
scas
std
fisubl
sub
ljmp
inc
and
stos
mov
js
or
sub
sub
cld
xchg
mov
orb
xchg
pop
std
aam
jle
shlb
mov
lcall
scas
je
std
sub
dec
jo
iret
xor
lret
xchg
insb
cld
push
fdivs
sub
cmpsl
test
jne
lret
adc
fstps
mov
pop
jbe
fdivl
imul
jmp
push
jecxz
jb
lds
or
xor
fwait
mov
add
out
jo
mov
mov
xchg
int3
pop
or
mov
lcall
mov
sub
out
out
mov
and
push
jg
aaa
cli
frndint
aaa
and
repz
sbb
jne
call
push
filds
sbb
mov
hlt
sub
and
ret
dec
mov
out
test
cli
mov
scas
and
mov
ds
repnz
in
cmp
inc
jge,pt
mov
jo
hlt
js
lret
mov
cltd
xor
rcll
js
pop
mov
mov
gs
pop
xchg
xor
cmp
or
cltd
pop
stc
lcall
popa
in
sti
div
pop
mov
pop
mov
dec
jo
jb
test
fstps
in
lods
push
fadds
cld
cmp
push
mov
xchg
or
insb
adcl
sbb
mov
pusha
cmp
adc
lcall
mov
adc
js
test
xor
add
pop
pop
cmp
clc
outsb
adc
lock
xchg
mov
push
loop
mov
out
in
add
repz
dec
icebp
xchg
shlb
shll
sbb
cmp
imul
out
mov
sarl
test
imul
mov
ficoms
or
fsubs
xor
aaa
push
roll
pushf
lock
pop
mov
sub
in
jmp
or
cmp
cltd
test
cld
mov
ficoml
jg
fwait
or
and
mov
scas
xchg
movsb
pop
jne
ret
jbe
xor
mov
insb
shl
out
fsts
sub
mov
and
mov
pop
popa
push
xlat
xlat
repnz
loop
movsb
dec
ss
sarl
push
adc
or
jno
xor
cmp
enter
jbe
jnp
mov
mov
sub
xchg
sub
pushf
in
pop
dec
jae
jg
mov
cmpb
in
popa
dec
inc
scas
add
add
pop
test
lds
jecxz
int3
loope
mov
aam
decl
and
cmp
bound
xor
cmp
add
cmc
fldenv
dec
sub
jecxz
cmp
and
xor
mov
xchg
cmp
xor
je
in
movsl
cld
es
adc
cli
lret
leave
inc
shr
add
mov
mov
add
dec
pop
push
dec
cmp
aam
mov
push
int3
imul
mov
addr16
xchg
pop
stos
sub
aam
xor
jnp
das
imul
jo
vpxor
mov
jae
ljmp
inc
pushl
mov
movsb
in
ret
aaa
adc
add
inc
mov
les
cs
in
xor
push
imul
mov
adc
fs
push
nop
cmp
in
cmp
sbb
lock
sbb
rcr
inc
sti
popl
pop
shlb
mov
push
mov
scas
popf
mov
stc
lea
jle
sahf
movsb
insl
clc
mov
sub
dec
and
inc
clc
xlat
jge
push
sbb
clc
leave
repz
sub
pushf
sbb
enter
or
iret
inc
and
ret
repz
enter
pusha
sbb
std
ja
aam
and
inc
testl
repz
das
mov
cmc
xchg
mov
out
or
jcxz
dec
xor
xor
sub
fsubrs
dec
repnz
jno
sub
inc
cmp
add
add
in
and
aas
fcomip
out
or
cmp
int3
add
and
add
loopne
shl
push
xchg
xor
dec
mov
sahf
mov
ret
xchg
cmpsl
iret
xchg
lret
xor
dec
arpl
adc
cmp
adc
cmc
mov
dec
out
inc
mov
daa
inc
sub
mov
mov
insb
xor
popl
or
sbb
push
lods
push
rolb
leave
pop
jbe
movsl
dec
dec
lret
cmpsl
das
xor
mov
add
xor
int3
jecxz
mov
fistpl
xlat
shl
int
jnp
movaps
or
outsb
push
adc
inc
dec
and
cmp
cmp
ret
mov
mov
mov
sub
cmp
stos
or
movsl
and
sbb
test
stos
mov
mov
pop
pop
mov
rclb
nop
or
bound
push
fwait
xchg
negb
iret
loopne
testl
and
mov
mov
and
ret
jbe
daa
pop
lods
lock
xor
js
rclb
sub
int3
or
mov
and
loope
hlt
ficompl
push
pop
shll
hlt
leave
stos
aaa
xchg
xchg
mov
call
fs
fsubs
pop
in
fdivs
divb
mov
lods
or
hlt
xchg
mov
inc
or
fiaddl
popa
mov
lahf
repnz
lock
je
movsl
frstor
dec
into
push
sub
push
xchg
aad
imul
push
int
out
xchg
das
sahf
cmp
xchg
call
fnstenv
fistps
inc
int
les
inc
mov
data16
ss
outsb
mov
loope
push
movb
mov
inc
in
dec
sahf
fmuls
ret
push
loopne
dec
mov
insb
int
adc
fdivs
pop
mov
or
push
adc
sbb
popa
cmp
mov
xor
adc
loop
pop
gs
push
cltd
push
sub
cmpsl
and
adcb
push
jle
ret
or
sbb
mov
xchg
into
push
les
aam
jmp
xchg
int
popf
sub
push
cmp
test
xchg
jae
lods
fimull
scas
loopne
mov
arpl
movsl
sub
stos
cmc
cltd
out
mov
fsubr
in
pop
cmp
scas
inc
add
mov
dec
dec
js
xor
xchg
mov
and
and
shl
test
xchg
rolb
shl
inc
or
les
dec
cmpsl
repz
cld
lret
adc
cmp
pop
push
sbb
or
cmp
and
loopne
repnz
fistpll
mov
cmpl
pop
aaa
jl
dec
inc
bound
sub
mov
jo
xchg
aaa
add
mov
dec
gs
test
es
push
sub
cwtl
or
jns
sbb
xor
std
mov
dec
or
and
jle
dec
pop
dec
loope
jb
xchg
roll
pop
int
jmp
cli
adcb
lods
fidivs
loop
fiaddl
sub
ja
push
jnp
daa
xor
fmulp
or
in
testl
pop
icebp
int
repz
sti
out
cmpsb
xchg
and
cmp
fnstsw
mov
dec
xor
cmp
movsb
mov
lcall
js
cmp
sub
cmp
cmpl
push
pop
lahf
xchg
bound
dec
jp
adc
xchg
imul
outsb
xchg
les
icebp
in
jbe
xor
add
push
fcmovbe
mov
mov
xor
cwtl
pop
and
mov
mov
mov
inc
int
lock
iret
ljmp
shrb
jnp
call
push
cmc
add
loopne
in
xlat
pop
clc
hlt
dec
out
cmpsl
cmp
push
or
stos
inc
pop
shrl
jno
fisubrl
in
int
jmp
jle
xchg
data16
mov
or
xchg
loopne
mov
sbb
jae
cmc
jmp
or
aas
xchg
sbb
icebp
mov
stos
fidivl
orl
mov
imul
loop
icebp
jne
cltd
in
arpl
mov
adc
xchg
add
inc
mov
mov
notl
cmp
pop
clc
in
in
js
hlt
push
mov
out
nop
outsb
das
mov
pop
popf
fdivrs
or
sbb
xchg
inc
or
lea
add
enter
jp
jle
xor
jmp
jo
cmpsb
int3
ret
adc
push
jecxz
je
iret
int
jecxz
inc
jno
in
mov
mov
sub
xchg
shlb
fbstp
jbe
mov
scas
pop
arpl
sbb
sbb
mov
lock
push
mov
stos
sbb
mov
adc
ljmp
sbb
fisttps
sbb
xchg
jl
mov
ja
mov
test
inc
cmp
adc
jbe
test
xor
nop
push
inc
adc
mov
mov
loop
orl
ret
std
mov
fcmovu
xchg
mov
mov
or
jo
cmp
cli
fbstp
push
push
iret
ljmp
daa
push
arpl
sub
cmpsl
ja
negb
push
sbb
sbb
lds
push
hlt
push
ds
out
shrl
test
rorb
and
cmp
xor
clc
in
or
bound
mov
loopne
pop
loope
icebp
add
outsl
mov
daa
xor
hlt
mov
enter
mov
xchg
jae
lret
fld
mov
xchg
sti
flds
inc
xchg
int3
xor
pop
jcxz
movsb
cmp
pop
ss
lea
xor
into
mov
les
lock
repz
or
subl
sbb
xchg
jne
push
sti
push
dec
scas
mov
popf
adc
jmp
call
hlt
inc
pushf
sti
into
rclb
arpl
pop
popa
pop
inc
cmp
push
lock
jl
imull
and
push
aam
sbb
dec
and
xorb
jle
movsl
sbb
pop
mov
xchg
pop
mov
je
or
nop
xchg
or
jecxz
scas
stgi
xchg
adc
hlt
jnp
xlat
or
xlat
test
xchg
mov
inc
in
in
mov
adc
pop
addr16
pop
popa
mov
sub
inc
add
dec
inc
add
inc
add
dec
inc
add
inc
add
inc
add
add
inc
add
mov
xlat
lea
daa
cltd
in
cmp
or
add
pop
add
rcrl
js
or
xor
clc
enter
cwtl
fcomps
xlat
popa
cltd
outsl
dec
popa
daa
sub
push
pop
dec
adc
sar
add
cmc
add
xchg
mov
jle
js
sbb
jmp
jne
aas
repz
sbb
std
inc
inc
lea
pop
dec
xchg
js
fstpl
cli
lret
adc
add
pop
xor
xor
iret
jns
test
sbb
sub
cmp
mov
lea
push
fstps
outsl
pop
add
jno
int3
dec
insl
pop
push
pop
mov
mov
ja
sub
idivl
repz
push
ret
sub
mov
adc
xor
push
pop
lret
sbbb
adc
mov
movsb
dec
push
ss
rep
inc
mulb
add
push
insl
pop
ficompl
mov
push
sbb
outsl
jo
dec
xchg
add
shrl
cmc
push
add
out
imul
pop
dec
dec
shrl
push
jnp
push
pop
pop
xor
jae
jge
scas
rolb
pop
cmpsl
inc
xor
insl
arpl
pop
mov
lods
bound
aaa
lds
pop
ja
into
fcmovnu
call
scas
mov
inc
in
mov
or
lret
mov
inc
mov
or
jb
adc
xchg
xor
cmp
sbb
jecxz
es
mov
sbb
jle
aas
clc
inc
sahf
xchg
add
std
adc
sub
filds
shl
pop
jl
repnz
popf
data16
mov
mov
and
xor
mov
inc
push
mov
imul
sub
jns
xor
out
jle
jno
or
add
cltd
and
jp
mov
xchg
repz
add
jle
inc
jb
sub
adc
push
loop
add
push
mov
inc
daa
push
sbb
mov
pop
pop
sbb
mov
cmp
mov
add
ss
leave
lret
js
mull
out
fisttpll
addl
arpl
aam
movsb
pop
jp
sub
cld
pop
xor
inc
sbb
mov
sub
mov
out
nop
in
filds
adcl
mov
mov
enter
cmp
or
enter
and
inc
pop
mov
and
into
and
mov
sbb
lcall
add
ds
xchg
pop
adc
add
jns
outsl
divl
adc
push
and
sarb
and
jnp
movsb
xor
outsl
loope
mov
iret
in
mov
add
shll
into
sbb
loopne
or
in
ds
pop
mov
loop
add
mov
xor
jb
and
mov
mov
insl
stos
add
mov
mov
sub
push
fs
arpl
mov
rcll
pop
cmpsl
notb
pop
add
mov
pop
push
xor
stc
stos
mov
outsl
dec
andb
cwtl
aad
cld
xor
sub
fwait
pop
pop
xchg
aas
ds
pusha
sti
mov
and
cmc
push
add
loop
xchg
xlat
lahf
lds
fdivrl
shl
lea
cmp
das
jno
shl
test
or
pop
clc
push
push
jns
sub
fidivrl
add
roll
mov
cmp
icebp
out
pushf
or
cmc
add
push
adc
arpl
call
or
leave
fistpll
dec
aas
xchg
sub
lahf
add
mov
dec
push
ret
add
movsb
fwait
lods
push
test
mov
aad
lods
jnp
dec
fstps
sbb
cmpsl
int3
xor
sahf
cli
ret
lahf
test
or
inc
lea
shr
cmc
add
push
ret
das
push
jge
fisubrl
inc
jnp
cltd
mov
mov
jmp
pop
testl
jecxz
xor
push
push
add
xchg
lcall
fcomp
les
stc
mov
push
test
popf
add
pop
mov
lea
mov
jns
fildl
arpl
mov
imul
je
push
sqrtps
push
inc
mov
mov
mov
andb
nop
jo
insb
mov
mov
shll
mov
mov
mov
xor
out
mov
mov
xchg
loop
jle
adc
jno
mov
loop
xchg
cld
aam
inc
orl
sub
je
pusha
adc
xchg
mov
stos
les
add
push
loopne
push
ret
sub
push
fcompl
stc
xlat
pop
mov
jns
movsl
sbbb
pop
mov
mov
in
call
fs
xchg
and
aaa
push
cmpsl
into
loop
pop
and
repnz
jecxz
cmp
fisubl
dec
jns
out
mov
fwait
and
xor
inc
addl
lcall
dec
cltd
xchg
mov
cmp
add
inc
mov
out
out
sbb
add
pop
sbb
cmp
xchg
shll
xlat
dec
pop
ret
push
mov
push
push
cmp
pop
xor
pop
int
and
stos
xor
adc
mov
cltd
cs
mov
arpl
xor
sbb
stos
subb
ds
pop
push
sub
sub
sbb
leave
lods
xchg
aaa
cltd
xchg
and
bound
shl
pop
push
mov
nop
mov
shl
xlat
fcmove
sub
das
sub
in
sbb
or
into
lcall
cmpb
into
popa
inc
sbb
and
fsubrl
in
mulb
ret
xor
sbb
mov
mov
cli
imul
add
shrl
mov
pushf
inc
mov
pushf
dec
mov
mov
sub
ret
xchg
imul
js
sbbl
mov
les
ljmp
cltd
lahf
mov
lds
insl
movsl
imul
sbb
sbb
xchg
jp
popa
rcrl
ds
jae
sbb
shrb
fsts
mov
mov
pop
push
adc
mov
test
inc
test
ds
sbb
pusha
int3
dec
cli
push
jecxz
inc
cld
mov
out
hlt
sub
inc
jmp
incb
xchg
insl
jne
pop
loope
or
pop
push
add
sbb
and
clc
or
sub
out
call
aam
jae
push
xor
push
cmpsl
push
mov
dec
xor
jbe
dec
pop
pop
cmp
or
add
add
jg
stos
mov
jmp
cmp
add
and
add
iret
frstor
pop
pop
jle
lahf
and
mov
jle
add
mov
imul
cmpsb
mov
shll
test
push
lahf
sbb
insb
sub
cltd
enter
sbb
mov
inc
daa
add
sub
pop
xor
addl
mov
arpl
sub
insb
repz
into
stc
cmpsb
sub
fiadds
sbb
enter
pop
es
rcrl
out
xchg
in
shr
and
int
mov
fimull
sbb
xor
dec
and
xor
bound
rcr
js
push
fmull
inc
sub
lret
in
sbb
cmp
xor
or
stos
ja
add
jae
mov
mov
and
mov
icebp
lret
repnz
xchg
jge
aaa
cwtl
in
out
lea
std
xlat
repz
and
or
cmpsl
xchg
mov
pop
fwait
push
scas
ss
test
test
movsl
mov
insb
bound
ja
es
hlt
mov
insb
or
fwait
int
in
fstpl
test
push
mov
push
and
int3
jecxz
pop
sub
cli
aad
inc
movsl
dec
adc
pop
adc
ss
repnz
and
dec
jge
inc
jl
aaa
push
jge
lret
mov
clc
loop
and
test
fcomp
rcr
out
dec
xor
sbb
push
repnz
les
push
int
mov
xchg
add
fisttpl
push
ds
dec
test
sub
pop
and
adc
sar
pusha
pop
fcomps
add
push
dec
push
addr16
in
into
push
pop
js
cmp
sti
cmp
jmp
adc
and
add
xchg
pop
es
cmp
insb
fbstp
cmp
dec
cli
cmp
movsb
nop
mov
cwtl
fldenv
push
int3
or
xor
data16
adc
in
mov
mov
xor
inc
jecxz
aad
mov
inc
std
adc
iret
mov
xchg
std
gs
sub
sbb
mov
cmp
jnp
cmp
or
mov
jecxz
and
adc
ss
dec
loopne
lret
xor
cld
xchg
stos
push
scas
rol
cmp
lods
lds
sti
or
dec
loop
adc
dec
cmc
movsb
or
rcrl
inc
rep
shrb
arpl
mov
push
push
and
jno
xor
cmp
push
test
inc
adc
scas
mov
ljmp
pop
das
jb
lods
into
or
imul
insb
fdivr
hlt
xor
ret
stc
adc
bound
incb
test
mov
dec
rcll
imul
cmpl
push
cmpsl
enter
movsl
repz
add
daa
dec
testb
fcompl
scas
sbb
cwtl
xlat
cs
scas
punpcklwd
xchg
inc
add
add
push
sbb
and
fstl
cmp
gs
cltd
mov
mulb
and
out
inc
push
and
jg
mov
test
sbb
inc
insl
test
aas
jge
gs
js
cwtl
inc
daa
gs
pop
repnz
mov
jmp
mov
out
les
lods
cmp
test
fcompl
std
push
rorb
mov
xchg
mov
dec
out
addr16
push
in
sub
int3
adc
cmp
mov
mov
lret
dec
lahf
icebp
mov
ret
test
lds
push
in
sub
daa
cmp
jae
push
cs
inc
mov
rorl
shr
orb
mov
out
fcompl
dec
xchg
xchg
in
jae
adc
xchg
cmp
inc
adc
xor
dec
adc
out
xchg
cmp
jmp
add
sbb
push
les
dec
pushf
aad
pop
jge
xor
mov
xchg
jb
inc
mov
pop
mov
push
push
pop
jo
icebp
fwait
cltd
pop
xor
push
movsl
cmp
aam
sbb
jae
mov
sub
xor
je
add
add
das
cmp
mov
dec
pusha
ror
and
and
aam
js
mov
sbb
int
int3
push
push
sbb
push
mov
and
add
or
sub
movsl
dec
sbb
or
bound
ret
sub
inc
mov
cmc
or
dec
sub
and
leave
mov
push
popf
pop
pop
sub
mov
repz
mov
lea
cltd
ret
out
gs
xor
sub
arpl
mov
sar
mov
and
push
xor
sbb
shlb
test
nop
inc
rcrb
push
adc
jmp
mov
jge
mov
xor
mov
inc
fs
inc
rclb
pop
pushf
movsb
ljmp
sub
gs
movsl
pop
inc
loop
mov
push
arpl
out
mov
icebp
aaa
inc
in
mov
pop
cld
adc
sbb
add
lea
scas
popl
dec
cltd
pop
jns
jnp
flds
mov
pop
jg
lret
inc
xor
mov
sbb
dec
in
inc
ja
dec
pop
mov
mov
lock
dec
cmp
subb
and
arpl
dec
inc
sub
push
jae
adc
in
cld
jge
jo
adc
rorl
jmp
ds
call
mov
inc
loope
xchg
fiadds
lcall
pop
cmc
test
mov
lods
push
dec
mov
loopne
push
push
and
mov
js
std
je
sbb
xor
loopne
xor
jge
cwtl
add
fs
dec
add
adc
stc
mov
std
dec
js
fs
pop
stc
jmp
add
jecxz
outsb
sbb
adc
stos
mov
out
mov
imul
repnz
ret
cltd
cmpsb
fdivr
test
mov
and
jle
fnstcw
out
and
xchg
fdivs
inc
roll
mov
pop
mov
lcall
cmp
push
scas
lods
dec
sub
loope
jbe
or
out
xchg
insb
cmp
jno
das
mov
sbb
loope
loop
mov
ss
out
inc
repz
pop
test
push
or
jp
pushf
or
stc
add
inc
jae
out
std
mov
les
jmp
dec
xlat
dec
xor
movsb
repz
rorl
adc
add
add
je
out
cmp
repnz
mov
insb
pop
sbb
add
pop
add
cld
fs
ja
adc
daa
movsb
jp
pop
int3
fsub
push
and
xchg
addr16
sbb
or
jae
xchg
pop
stos
test
inc
les
das
lahf
test
call
hlt
add
out
sub
icebp
stos
pop
mov
mov
mov
iret
or
pop
data16
pop
xor
jle
pop
ret
push
jnp
adc
add
stos
into
push
mov
pop
daa
aad
inc
gs
mov
arpl
pop
or
sbb
outsb
fiaddl
fdivrs
xchg
test
xchg
adc
cmc
fisttps
idiv
jb
movsl
and
decl
out
pop
cmp
mov
adc
sub
inc
pop
les
adc
lds
cld
mov
jecxz
push
test
push
push
sub
decl
mov
push
dec
leave
pusha
xor
ficoml
test
fs
icebp
jns
xor
push
ret
lock
stos
out
dec
xchg
mov
or
cli
jle
ss
xchg
aas
sbb
int
xorb
cli
incl
iret
test
cli
jmp
push
movsb
jge
out
sub
sub
mov
xchg
and
mov
mov
inc
jecxz
adc
imul
dec
or
insl
outsl
fldt
scas
push
std
mov
pop
inc
mov
inc
fnstcw
cli
cmc
push
dec
cld
mov
dec
enter
js
ljmp
dec
in
xlat
repz
cmp
or
rcr
pop
lcall
mov
inc
fxch
hlt
loop
iret
adc
jle
or
arpl
add
and
xchg
and
add
sbb
mov
sti
dec
dec
hlt
stc
push
lods
fidivrs
cmp
mov
push
out
aad
jne
sti
jmp
jae
pop
int
xor
in
insl
push
mov
shl
sub
aad
sar
xor
stc
iret
insb
sbb
scas
jl
add
cmc
fiaddl
inc
xchg
pop
jg
sbb
stos
cmpsl
rolb
cwtl
inc
xchg
aaa
lods
scas
lret
in
les
jle
int
jle
dec
arpl
insb
mov
pop
lcall
mov
icebp
in
stc
adc
je
cld
adc
mov
jbe
sbb
jecxz
in
mov
shrl
cwtl
cmpsb
push
movsb
add
ret
cmp
mov
loopne
lret
jg
mov
orl
push
mov
add
push
dec
sbb
inc
dec
push
push
iretw
test
jne
lahf
pushf
leave
or
mov
dec
jae
mov
bound
xor
ret
ror
mov
int3
mov
adc
and
out
push
jnp
shl
or
mov
sub
aam
push
mov
fists
cwtl
inc
popa
and
out
test
xchg
add
pop
push
and
mov
in
scas
lret
xchg
clc
dec
mov
decl
jno
jnp
and
or
dec
sbb
mov
xchg
decl
dec
sub
jmp
push
push
imul
and
jns
xchg
scas
push
jmp
add
repnz
or
and
and
dec
add
dec
jg
jns
mov
mov
adc
or
movsl
in
pop
or
dec
xchg
jmp
stc
dec
das
in
fistl
push
sbb
mov
and
loopne
dec
call
mov
xchg
daa
push
xchg
lods
mov
push
cltd
fwait
xor
sub
xchg
pop
ljmp
dec
cli
ret
popf
sub
mov
mov
inc
push
cmp
add
out
cs
loopne
movsb
nop
mov
mov
cmpsl
pop
fisubrs
xchg
outsl
pop
outsb
push
jbe
cmp
shrl
and
mulb
iret
fstpl
mov
sbb
fists
leave
xor
jnp
xchg
imul
jnp
stos
stos
ljmp
push
pop
je
and
and
jmp
mov
mov
xchg
xorb
mov
jl
add
int
pop
xlat
sbb
xor
cmp
or
sbbb
cmp
mov
sti
adc
gs
scas
int
sbb
incl
fwait
xor
cmp
mov
lock
rcll
mov
push
int
mov
ficomps
cmp
xor
lds
mov
lret
cmp
das
sub
cwtl
mov
outsl
sbb
or
test
push
fs
or
lret
lea
mov
icebp
bound
mov
rcrl
pusha
pop
mov
sahf
lods
sbb
lahf
jle
cld
pop
aam
repz
jge
aad
cwtl
push
or
hlt
into
dec
xor
mov
lahf
pop
dec
dec
add
test
push
loop
loope
pushf
fwait
mov
dec
inc
test
mov
xlat
mov
lods
sub
cmp
sbb
dec
mov
push
movsl
popf
gs
loopne
aam
sub
sub
mov
es
mov
enter
lock
mov
adc
sub
fwait
cmp
rorb
test
fdivl
inc
push
ret
inc
or
shlb
shl
shll
frstor
xchg
mov
push
mov
cmc
mov
cmp
insb
cmpsl
or
test
jg
in
std
loop
adc
mov
and
sub
ja
mov
add
ret
mov
mov
lcall
fcmovu
jne
inc
pop
inc
cmp
lret
jne
sbb
xchg
jb
dec
cmc
mov
fdivs
inc
int3
adc
movsb
imul
dec
pop
into
dec
sbbb
les
mov
lar
movb
cmp
ds
cmp
push
scas
jne
push
fninit
das
jnp
mov
lods
add
sti
clc
push
sbb
inc
push
aad
sub
sbb
pop
pop
cmp
dec
jne
mov
outsl
mov
dec
pop
mov
inc
insl
mov
sbb
sahf
mov
punpcklwd
scas
or
mov
cmpsl
push
stos
aad
jg
call
clc
or
sbbl
jnp
imul
add
pop
pop
fdivl
pop
pop
addr16
cltd
xchg
and
shll
push
clc
int
and
lahf
pop
jns
sbb
or
test
push
flds
imul
out
rolb
orl
stos
sbb
aad
dec
sub
sub
jb
movsb
add
aad
pusha
cld
jne
repz
add
and
add
mov
into
ds
addb
cli
jns
data16
arpl
clc
xchg
pushf
sbb
jnp
sbb
pop
cmp
xchg
and
insb
mov
pop
ljmp
pop
mov
sbb
pop
repnz
add
fcoml
or
ror
daa
stos
jl
adc
push
dec
pop
mov
data16
test
movsb
es
xchg
cmp
push
in
xor
inc
xor
sub
mov
addr16
test
mov
sub
lcall
jl
mov
hlt
lods
fmull
ja
cmpsl
mov
stc
adc
aaa
dec
mov
out
arpl
dec
popl
nop
int3
dec
xor
std
lds
mov
popf
or
aam
lahf
test
pop
orl
inc
add
fisttpl
in
sub
mov
mov
jge
xchg
push
mov
fnstcw
mov
jo
cmp
push
xchg
mov
mov
repz
jmp
inc
dec
or
sub
les
push
xor
pop
jb
cs
jp
cld
lahf
push
lahf
inc
mov
xchg
mov
lret
int3
movsb
cmp
mov
pop
cmpsb
cs
mov
mov
xor
adc
jecxz
rcrl
push
ret
cwtl
aad
insl
or
mov
sarl
or
mov
ret
out
popa
cmp
mov
in
jp
je
fsts
gs
cmp
and
dec
mov
xchg
dec
xchg
dec
sub
sbb
and
jb
ja
enter
in
jecxz
and
jle
addl
mov
test
cmpsb
push
int
dec
push
dec
sbb
cmp
loope
movsb
outsb
arpl
mov
sub
mov
lahf
mov
mov
ret
cmc
jns
out
mov
cmp
add
inc
aad
cmpb
cmpsl
dec
xor
arpl
jnp
sahf
ret
jecxz
stc
movsb
pop
and
jnp
inc
test
out
add
cltd
jo
inc
xchg
or
test
clc
icebp
ja
js
imul
cltd
pop
sbb
push
cmp
cmp
sarl
jle
lds
stos
xor
adc
scas
stos
rcll
xor
mov
or
mov
test
mov
je
repnz
mov
rclb
test
cltd
adc
mov
daa
sbb
push
push
leave
pushf
adc
es
stos
pop
ret
cli
and
mov
in
das
shll
pop
inc
xlat
add
jp
fcomi
lea
push
cwtl
movsl
mov
clc
dec
push
aad
in
popa
add
dec
stos
sub
aaa
and
sub
ret
mov
xchg
inc
cld
mov
incb
ss
std
js
inc
js
mov
loopne
cmp
xchg
aam
scas
int
aad
dec
rcrl
mov
xchg
xchg
or
push
jns
outsb
test
adc
pop
cmpsb
test
stos
lahf
cmp
xlat
lock
jne
repz
dec
xor
arpl
inc
mov
test
movsb
daa
or
sbb
mov
sbb
orb
sbb
xchg
dec
gs
add
lock
scas
xchg
dec
jg
mov
movl
popf
or
rcll
cli
sbb
lcall
mov
mov
test
lods
mov
cwtl
mov
jmp
jne
cmc
mov
mov
js
popl
add
mov
mov
cmc
enter
mov
lret
ja
and
mov
jae
mov
lret
imull
jg
loope
andl
inc
xor
xor
xor
sub
sbb
cmpsb
movsl
pop
xor
push
pusha
cmpsl
into
pop
or
xorl
push
ja
ficoml
add
out
cmc
mov
pop
aam
xchg
stc
push
mov
fbld
mov
mov
mov
lods
in
mov
and
rcr
push
repz
repnz
imul
ss
mov
inc
in
add
shrb
mov
pop
mov
or
mov
push
cmpsl
int
xchg
jl
jg
push
cld
push
rcrl
or
jecxz
lcall
enter
mov
or
push
aaa
jno
push
cmp
in
sbbl
pop
in
in
jbe
mov
xchg
jnp
inc
adc
rcll
js
ds
pop
fsubl
test
jp
ds
int
aas
sbb
push
rolb
scas
les
add
push
pusha
stos
test
hlt
fildll
lcall
in
pushf
dec
inc
jae
xchg
shlb
adcl
lods
mov
cwtl
insl
and
test
xor
mov
les
mov
ja
lea
sbb
push
push
jno
mov
or
and
rcll
pop
sub
repz
sti
ficoms
dec
jmp
push
out
jns
ret
sbb
dec
pop
ret
int
jnp
pop
not
call
pop
inc
push
les
cmpsl
loop
fdivrs
pop
repz
sbb
js
push
ret
je
scas
pop
imul
mov
push
add
cmc
dec
xlat
cli
adc
ds
aad
loope
sub
mov
jne
dec
loope
push
push
mov
lret
in
cltd
in
cwtl
push
in
fsubrp
xchg
imul
push
xchg
aad
in
mov
fidivl
clc
jne
and
sbb
lds
in
lret
cmpsb
orb
xchg
inc
js
xorb
into
add
nop
lods
sbb
inc
xchg
mov
xchg
or
imul
xchg
dec
fucomp
test
dec
inc
cmp
int
inc
mov
cmp
je
push
pop
fucomip
loope
add
sub
outsb
outsb
rorb
add
pusha
rclb
leave
cmpsl
mov
lcall
pusha
movsl
xchg
ja
lahf
adc
cmp
ljmp
aas
jae
aad
and
or
mov
xor
xlat
jns
iret
dec
cmpl
std
ss
nop
cmpsb
dec
repnz
lahf
js
mov
adc
daa
into
jmp
add
mov
sbb
jne
bound
or
cmpsb
sub
les
xchg
cmp
push
jle
xchg
xor
mov
add
add
mov
mov
fwait
sub
add
pop
add
ja
pop
cmp
adc
aam
in
lds
pop
fucomp
icebp
and
pop
inc
arpl
sbb
and
sub
sar
cmp
sbb
fs
and
movsl
mov
fwait
stos
das
movsb
sbb
sub
inc
sub
je
cmc
out
inc
adc
ds
pop
jmp
or
and
cmpsl
jle
xchg
scas
mov
into
lods
push
repz
add
pop
scas
or
loop
xchg
cld
push
mov
stos
and
js
aas
cmp
pop
stos
jbe
loop
aaa
jb
cmp
dec
xor
jmp
xor
adc
add
out
fwait
in
dec
push
popf
inc
xor
lock
mov
dec
sbb
sbb
mov
mov
movsl
cmc
sbb
cli
add
imul
adc
add
shlb
insb
cwtl
and
and
aaa
mov
aad
xchg
outsb
xchg
jle
mov
in
scas
fnstcw
push
push
fcmovnb
mov
roll
xchg
test
and
push
inc
mov
out
push
cwtl
adc
push
mov
in
sbb
lahf
lods
test
mov
lods
sbb
mov
cwtl
sbb
push
aam
and
sub
xchg
jb
sub
dec
ret
cmp
js
push
pop
cmpl
push
lock
gs
fs
mov
loop
psllw
lret
ljmp
cmpsb
push
push
or
jnp
stc
cs
xchg
push
add
call
inc
repz
push
xor
push
sti
xchg
in
test
dec
mov
lock
loopne
jno
mov
cmc
test
cmc
pop
xchg
xchg
jnp
fwait
xor
ret
dec
adc
pop
scas
aad
js
shlb
cmp
das
mov
fbld
jmp
loop
cmc
push
jne
out
negb
dec
cmpb
mov
movsb
lret
pop
jbe
xor
test
bound
dec
movsb
pop
add
mov
stos
sbb
in
sbb
sar
gs
adc
push
xor
lret
cmp
add
dec
pop
rcrl
sarb
xlat
push
mov
push
pop
sbb
clc
fisttpl
sub
or
and
sub
lock
dec
mov
rcll
and
dec
mov
dec
cmc
xchg
iret
fs
mov
push
mov
leave
sbb
mov
mov
repz
mov
lret
sbb
sbb
xor
cmpsb
out
and
mov
push
push
lret
push
cmp
daa
xor
cmp
je
ds
mov
hlt
xchg
pop
mov
movsb
lock
mov
pop
ficoms
or
lret
jae
xor
jmp
sub
cmpl
fidivrs
shll
mov
inc
movsl
sub
in
stos
je
iret
shll
xor
xor
insb
iret
mov
jns
pop
sub
fstp
scas
push
push
mov
dec
movsb
xor
popf
mov
mov
insl
je
or
aad
aad
lret
fstpt
xchg
dec
int3
mov
mov
jns
dec
jp
sarl
push
ljmp
aad
inc
cmp
push
testl
sahf
jbe
data16
les
sub
es
inc
outsl
outsb
aam
mov
pop
cmp
adc
dec
add
rorl
and
push
pop
into
dec
cmpsl
push
scas
jb
push
or
cmp
mov
shll
addr16
pop
lods
push
fisubrs
clc
icebp
pop
ss
jae
cmpsl
fs
push
leave
es
push
push
adc
cmp
inc
sbb
lcall
and
fs
dec
aad
lret
cmc
popa
add
pop
mov
dec
leave
mov
push
fwait
dec
jbe
cmpsb
xchg
call
leave
mov
or
xchg
pop
scas
jbe
fsubrl
jge
push
pusha
and
addl
test
cmp
js
cmp
cs
mov
xlat
fistps
cmp
dec
flds
lcall
mov
and
scas
hlt
sahf
push
pusha
jge
jae
xchg
aas
fistpll
test
imul
jg
mov
cs
mov
add
ret
popf
xchg
fistpll
cmpsl
inc
inc
adc
xor
mulb
dec
test
fsubrp
push
jg
fisubs
dec
jne
mov
out
or
fs
push
mov
fistl
mov
push
loop
ret
loope
pop
add
dec
dec
push
xor
je
pusha
pusha
stos
test
inc
lret
arpl
iret
mov
insb
xchg
sbb
imul
int3
cmpsb
or
cmp
testl
jge
mov
test
leave
ficoml
orl
loop
mov
lcall
add
dec
sbb
mov
outsl
mov
in
fs
mov
ret
and
pop
mov
divb
sahf
adc
int
test
pop
mov
or
cmc
mov
lret
rcr
subl
mov
pushf
mov
xlat
mov
rep
enter
in
add
data16
inc
std
sbb
add
add
cld
dec
aad
jmp
xchg
out
jmp
ret
cmpsb
mov
std
mov
and
ret
js
add
or
leave
cmpsb
mov
in
push
fnstsw
inc
jne
fisubl
rcrb
push
daa
clc
js
xor
pop
mov
jno
negb
cwtl
leave
clc
insb
mov
repz
and
mov
outsb
push
popa
es
mov
cli
es
or
dec
fnstenv
inc
mov
bound
jl
rorb
push
mov
daa
xor
fldt
jo
fcmovu
push
cmpsl
js
jg
arpl
jb
push
or
lcall
dec
fwait
cltd
inc
add
cmp
mov
or
sub
cmpsl
inc
mov
cmp
fldenv
sbbb
adc
add
es
mov
jno
jno
popa
mov
or
icebp
fisttps
pop
pop
jmp
or
mov
mov
push
mov
stc
cmp
das
rol
test
and
mov
cwtl
and
add
adc
mov
push
adc
and
cmp
add
adc
add
add
in
add
add
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
push
sbb
sub
xor
cmp
ss
ss
ss
ss
aaa
imul
aaa
xorb
aaa
lcall
aaa
ret
aaa
shll
mov
mov
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
adc
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
loope
out
hlt
cmp
or
add
add
dec
add
add
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
sub
xor
inc
cmp
pop
cmp
add
or
add
push
xor
xor
jae
jns
test
mov
xor
xor
xor
xor
xor
xor
xor
addr16
xor
cmp
arpl
xchg
xchg
xor
mov
xor
pop
aaa
jb
jnp
test
mov
xchg
aaa
sahf
aaa
lods
aaa
mov
shll
aaa
into
aaa
call
cmp
cmp
cmp
cmp
cmp
pop
cmp
mov
xchg
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
idivl
cmp
adc
and
daa
cmp
cmp
cmp
cmp
xchg
cmp
cmp
sub
cmp
jae
jle
xchg
movsl
cmp
lret
cmp
fidivrs
cmp
dec
ds
ds
ds
add
xor
xor
dec
xor
pop
xor
ja
xorl
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xlat
xor
jno
jle
mov
xchg
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
xor
dec
cmp
lahf
movsl
loope,pt
jmp
clc
aas
add
add
add
add
or
adc
sbb
xor
inc
xor
pusha
xor
insb
xor
mov
lahf
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
dec
xor
pusha
xor
xor
xor
xor
repnz
xor
xor
xor
xor
jl
dec
cmp
nop
ds
fstpt
add
add
add
add
xor
pushf
xor
xor
xor
xor
xchg
xor
scas
xor
int3
xor
sbb
daa
aaa
sub
xor
jbe
xchg
cwtl
cmp
cmp
in
cmp
cmp
cmp
push
cmp
push
cmp
cmp
sbb
add
mov
mov
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
dec
xor
xor
je
js
xorb
xor
lods
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
sbb
xor
inc
xor
pop
xor
xchg
xor
scas
xor
into
xor
in
xor
or
adc
sbb
sub
xor
ds
ss
ss
ss
jo
jnp
xchg
mov
xchg
ss
ss
fdivs
fbstp
in
in
divl
add
or
push
aaa
and
aaa
aas
aaa
inc
aaa
push
aaa
pop
aaa
data16
imul
aaa
xorl
aaa
mov
mov
aaa
aam
out
in
aaa
stc
aaa
or
push
cmp
sbb
and
sub
xor
cmp
cmp
data16
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
outsl
cmp
cmpl
mov
sarb
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
dec
cmp
bound
jle
test
xchg
cmp
cmp
sarb
fnstsw
out
cmp
cmp
cmp
cmp
cmp
dec
cmp
pop
cmp
cmp
jle
test
xchg
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
sbb
cmp
jno
ja
jg
test
add
add
cmp
xchg
xor
xor
xor
xor
xor
xor
xor
xor
jne
nop
xor
xor
xor
movsl
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
pop
xor
ss
push
xor
jl
xchg
xor
xor
cmp
inc
aaa
push
aaa
pop
aaa
push
aaa
xorl
cltd
aaa
lahf
aaa
xor
test
lods
cmp
xor
aas
ds
ds
ds
jnp,pt
sahf
mov
rolb
add
add
add
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
and
add
add
add
cwtl
xor
test
add
add
add
sbb
sbb
and
mov
xor
mov
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
adc
sub
pop
xor
je
lods
xor
sbb
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
add
jo
add
add
add
mov
cmp
cmp
cmp
mov
add
in
ss
ss
ss
add
add
or
