push
mov
sub
mov
push
movzwl
or
push
add
push
mov
xor
mov
add
mov
xor
mov
mov
sbb
mov
andl
mov
inc
mov
cmpl
jbe
jmp
call
cmpl
jb
mov
dec
mov
dec
mov
movl
subl
mov
xor
add
mov
movzwl
sbb
mov
mov
orl
mov
adcl
mov
sub
mov
push
adc
pop
orl
sub
add
sbb
movl
mov
mov
or
movl
andl
xor
xor
inc
mov
cmpl
jg
jmp
pushl
push
pushl
pushl
pushl
push
push
pushl
push
call
cmpl
jb
mov
adcl
mov
mov
add
mov
mov
mov
incl
xor
sbbl
add
mov
lea
mov
sub
mov
xor
andl
add
mov
subl
lea
movl
push
and
mov
adcl
xor
add
movl
push
mov
xor
mov
mov
adcl
push
addl
pushl
adcl
call
movl
cmpl
je
cmpl
ja
jmp
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
dec
mov
sub
mov
andl
mov
inc
mov
cmpl
ja
jmp
pushl
call
cmpl
jb
movl
xor
mov
inc
mov
lea
sub
mov
movl
cmpl
je
cmpl
jbe
jmp
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
movl
mov
mov
andl
mov
inc
mov
cmpl
jle
jmp
push
call
cmpl
jb
xor
inc
mov
adcl
sub
mov
movl
mov
mov
cmp
movl
je
movl
cmpl
je
cmpl
jge
jmp
push
push
pushl
push
pushl
pushl
call
mov
dec
mov
jmp
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jle
jmp
push
push
pushl
pushl
pushl
pushl
pushl
pushl
call
cmpl
jne
xor
or
inc
mov
jmp
mov
xor
xor
xorl
lea
or
mov
xor
sbbl
div
mov
andl
mov
inc
mov
cmpl
jg
jmp
call
cmpl
jne
mov
inc
mov
cmpl
jb
jmp
sub
mov
pop
and
cld
aam
jnp
jnp
pushf
jnp
ror
aam
ret
add
xchg
mov
xchg
test
orl
ja
stos
jl
jno
jl
inc
mov
sti
nop
jl
or
rcrb
push
imul
out
sti
fldcw
ss
rcrb
cmpsb
enter
cwtl
neg
sti
jns
sbbb
pushf
push
scas
lock
mov
lret
mov
xchg
add
xor
xchg
lods
in
mov
test
inc
mov
in
cli
xchg
xchg
inc
testb
cltd
inc
xchg
pop
fcmovb
sbb
out
ret
out
dec
mov
xchg
pop
pop
mov
mov
or
dec
push
push
adc
out
jp
sbb
daa
sbb
push
hlt
jns
lret
pop
lds
or
xor
sub
out
cs
lret
push
dec
aam
jo
test
imul
popf
jbe
repz
cwtl
andb
in
daa
clc
pop
add
repnz
mov
and
cmp
inc
cmc
aad
xchg
cmc
das
push
outsl
push
add
pop
inc
fidivrs
in
imull
mov
adc
and
push
stos
xor
xor
sbb
loopne
push
push
dec
and
fstp
lret
int
cmovg
into
mov
and
pushf
sbb
aad
lret
cmp
into
cmp
xor
and
sbb
add
xor
scas
ja
repz
pushf
mov
or
sub
cmp
push
ret
xor
xchg
mov
mov
test
cmp
add
stc
xlat
shll
pop
xor
push
sahf
ss
hlt
mov
add
xchg
push
xlat
out
cmp
fsubrl
or
imul
outsl
cmc
jp
hlt
xor
sbb
jo
xlat
jns
push
adc
repz
dec
int
imul
mov
stos
mov
add
sbbb
fs
addr16
pop
cmp
cli
ljmp
loopne
test
ret
or
xor
out
aaa
roll
shrb
sbb
pop
jl
int
dec
imul
or
loopne
jp
cmp
aam
pop
mov
jle
jae
jb
imul
cld
ret
sbb
push
lea
addl
out
leave
sbb
xor
daa
mov
or
push
cmp
sbb
push
in
lds
aad
std
out
lock
ja
cmpsl
jecxz
test
push
add
inc
hlt
cmp
add
adc
xorb
cmp
cmp
push
jecxz
dec
push
aas
mov
insl
cltd
cs
data16
xlat
pop
dec
xor
jmp
lahf
shlb
stos
jl
insl
hlt
add
ljmp
or
stos
mov
push
ret
add
data16
cmp
ret
lods
mov
cmp
in
inc
popa
and
cmp
lcall
or
lahf
ds
int3
shrl
mov
add
push
jmp
aad
sbb
dec
inc
pop
movb
dec
pop
sbb
mov
lahf
inc
lcall
aas
mov
mov
mov
ss
ss
xchg
repz
dec
mov
push
xor
cmc
jbe
mov
cs
jae
lock
lds
sbb
cmp
xor
and
mov
cmp
filds
mov
xchg
out
lock
inc
add
pop
into
les
in
scas
push
push
in
aam
xorb
inc
add
pop
loopne
js
inc
add
add
dec
cmp
push
inc
cwtl
sub
inc
cmp
mov
neg
fsubrs
cltd
xchg
cmp
mov
dec
xchg
test
jnp
imulb
mov
mov
rolb
pop
push
sub
or
inc
and
cmp
dec
push
cmc
and
je
imul
mov
test
lock
jg
fbld
out
movsb
xor
push
adc
fstps
add
push
aas
loop,pn
mov
popf
test
xchg
xchg
stc
pop
adc
sub
or
mov
lods
mov
adc
imul
aam
ja
and
pop
jbe
dec
xchg
jb
mov
dec
das
dec
cmp
jge
mov
xchg
and
popf
inc
fcom
and
xor
popf
cs
lds
lcall
mov
out
adc
decl
jo
inc
arpl
aas
dec
bound
shlb
mov
adc
gs
sbb
jae,pn
lret
imul
adc
dec
xor
push
mov
imul
mov
sarb
cwtl
mov
push
mov
enter
repnz
ficoms
mov
inc
adc
addr16
push
mov
shl
inc
enter
pop
idiv
ja
mov
push
sbb
mov
sub
cli
faddl
into
jecxz
stc
xor
iret
mov
ja
cpuid
xor
lcall
leave
add
mov
mov
mov
or
add
push
rorl
mov
push
adc
or
sahf
add
cli
dec
jge
inc
jg
fstpl
inc
xchg
aad
mov
push
jb
cmp
and
and
xchg
dec
mov
pusha
lea
add
lcall
mov
inc
or
push
dec
aaa
je
sbb
inc
cmpsb
dec
cmp
jge
lret
ja
aam
push
cmpsb
sti
mov
adc
scas
jp
sahf
cmp
jae
push
ror
ret
lret
test
call
fcompl
sbb
push
push
rorb
mov
pop
rcl
xchg
pop
cmp
imul
outsl
in
jno
cmpsl
inc
xchg
les
bound
mov
fnstcw
add
or
cmpsl
lea
mov
xchg
and
cli
mov
push
cmp
sub
adc
add
adc
xor
and
jg
int3
sub
push
xlat
jle
lret
cmp
mov
pop
leavew
inc
scas
xchg
jl
mov
insb
hlt
xlat
imul
movsl
add
cmp
in
dec
pop
xchg
jb
pop
icebp
xchg
roll
xor
stc
and
mov
xor
sbbb
insl
inc
xor
sub
mov
mov
and
mov
jne
dec
fnstenv
ret
add
fucomp
pop
mov
mov
outsb
sub
das
lea
mov
push
mov
ljmp
sahf
push
push
fists
call
addl
jge
outsb
pop
mov
in
xchg
sbb
mov
jns
add
jecxz
push
mov
push
cmp
and
mov
inc
adc
jmp
testb
into
in
cmpsl
or
movsb
cmp
jns
das
push
mov
jle
mov
sub
adc
adc
mov
js
inc
fwait
xchg
dec
mov
sarl
stos
les
ja
mov
cltd
ljmp
jb
xchg
loop
xor
aam
mov
pop
out
int
push
dec
arpl
mov
cmp
scas
mov
xor
lcall
or
sti
loopne
xchg
stos
and
jb
lods
xlat
inc
loop
pop
inc
xchg
iret
push
dec
lds
inc
xor
movsl
gs
loop
nop
outsb
ret
das
jbe
popa
xchg
xor
dec
dec
scas
out
cmp
gs
and
xor
xor
repnz
pop
xchg
lret
xor
repnz
xchg
xchg
inc
test
div
mov
push
les
popf
insb
data16
xchg
and
jg
sub
push
xchg
inc
shrb
adc
fildl
lea
xchg
addr16
gs
in
or
mov
in
and
movsl
dec
sub
xchg
or
push
push
pop
jecxz
adc
imul
pop
xchg
sbb
and
lcall
jae
arpl
in
fsts
sbb
call
mov
setne
xchg
jae
push
aaa
loope
push
arpl
popa
xchg
jl
push
inc
adc
les
or
dec
mov
cs
sbb
inc
in
jno
mov
sub
sub
ffreep
adc
inc
inc
sahf
and
jl
shl
mov
call
pop
lods
jbe
call
mov
inc
pusha
xlat
cld
popa
mov
inc
sub
or
or
pusha
mov
and
dec
sub
movlps
mov
scas
pop
xchg
push
hlt
test
inc
sbb
lods
push
je
loope
dec
test
test
mov
inc
or
jp
and
pop
in
inc
xchg
loopne
out
jg
test
stc
out
xlat
daa
aaa
inc
dec
out
loope
mov
aaa
inc
pushf
push
inc
jecxz
lea
mov
pusha
cmp
pop
xchg
lea
sub
ljmp
orl
pusha
xchg
push
mov
ficoms
push
pop
lret
lea
cwtl
jns
add
xchg
add
sbb
mov
pop
push
cmp
ss
mov
int3
cmp
dec
xchg
and
fstps
rclb
pop
add
adc
mov
jmp
hlt
insb
xor
mov
test
or
dec
cmp
test
mov
inc
fisubs
mov
pop
arpl
clc
shrl
pushf
pop
fdiv
sbb
adc
cmp
inc
movb
aas
cld
mov
cs
out
lea
push
xchg
loopne
outsb
inc
mov
xorb
xchg
loope
dec
lods
mov
test
mov
pop
ficoml
mov
movl
mov
fwait
jmp
lret
bnd
cmp
sbb
movb
and
mov
jne
test
fbld
int
in
test
lods
push
dec
push
outsb
test
outsl
shr
xlat
xchg
and
push
les
test
jmp
idiv
icebp
cmp
adc
and
sbb
hlt
mov
rcl
outsl
icebp
adc
pop
mov
add
call
xor
mov
mov
sub
cli
or
shr
sub
sbb
test
jmp
mull
testl
cmp
pusha
xchg
hlt
xchg
out
and
movsl
mov
popf
lock
rorb
or
xchg
jl
add
hlt
mov
outsl
ret
sub
xchg
cli
xor
jl
mov
ds
sub
cmp
outsb
fildl
inc
cld
mov
call
or
call
mov
jp
add
push
int
in
hlt
dec
mov
mov
pop
push
daa
or
sub
shl
xchg
ficomps
test
mov
jb
push
movsb
push
loop
stos
cmp
add
inc
ja
outsb
and
pushf
adc
add
aas
fisubl
shll
rorb
mov
or
push
cld
cmpsl
add
dec
mov
leave
jne
push
mov
jle
mov
jmp
xor
das
jno
and
inc
shl
xor
mov
movsl
mov
sahf
fdivl
jle
mov
xlat
xchg
addr16
mov
icebp
ss
out
in
aaa
xlat
fldenv
fsin
lds
test
mov
dec
gs
mov
or
je
xchg
inc
lret
or
jnp
imul
int3
fucomi
and
inc
xchg
jmp
loop
inc
lahf
sbbl
das
inc
mov
push
add
push
or
and
and
mov
cmpsb
and
and
in
sub
fwait
test
dec
push
and
mov
sub
pop
add
inc
mov
fs
mov
add
popa
aas
mov
dec
loop
push
daa
push
jns
pop
cmp
inc
pop
or
xchg
and
adc
cmp
inc
cmc
in
outsb
call
xchg
lea
clc
push
out
pop
mov
testl
lret
cmp
out
adc
add
movl
repz
movsl
rcrb
xor
das
fsubr
cmp
push
pusha
xchg
cmp
cmc
ret
test
lret
aad
pop
aas
mov
sarb
xor
xchg
xlat
pusha
mov
jg
mov
testb
or
lret
xchg
cld
and
cmp
mov
pop
add
cmpsl
adc
clc
scas
scas
shll
gs
lock
add
dec
lahf
in
xor
jle
jo
aas
fstpt
mov
aas
les
add
pop
jb
lahf
fldcw
icebp
testl
pop
fwait
gs
sarb
jno
jnp
mov
push
inc
mov
mov
addr16
rclb
ret
cmp
movsb
sbb
daa
pand
test
fisubrl
lods
mov
mov
pop
stos
inc
or
ret
lret
mov
nop
jge
mov
pop
push
arpl
outsb
idivb
jo
adc
lea
test
ficoms
fwait
cs
std
icebp
test
fistl
loopne
adc
lcall
xchg
and
adc
inc
mov
mov
dec
mov
fs
jns
iret
aad
pushf
roll
sub
lods
pop
mov
in
sbb
or
inc
mov
sub
movsb
inc
sahf
push
push
jbe
fchs
and
cwtl
mov
cmp
mov
push
pop
push
dec
jp
aad
call
cmp
jmp
insl
mov
les
xchg
mov
call
js
push
sub
das
pushf
or
pop
mov
sbb
les
jge
mov
push
popa
rcr
fwait
mov
pop
ljmp
test
loop
sub
arpl
lods
sahf
cld
inc
into
push
push
pop
or
outsl
jmp
jbe
std
je
orb
cltd
div
adc
mov
shrl
mov
lods
pop
xor
clc
rep
loop
subb
test
loop
xor
xchg
cmp
sub
dec
xlat
lcall
mull
fbstp
xor
rcll
test
inc
in
sub
sti
xor
pop
sbb
sub
jno
mov
loope
and
cli
jg
xchg
test
es
ret
fistps
ljmp
dec
push
jle
sbb
push
faddl
test
es
sub
es
sbb
mov
xor
call
cld
aas
inc
inc
movsl
mov
imul
inc
mov
das
dec
jg
in
inc
dec
cmp
out
je
mov
xchg
sub
push
decb
scas
lahf
ret
xor
leave
lods
push
cmp
dec
xchg
subb
sub
enter
cmp
or
cld
insb
repz
pusha
mov
add
insb
sub
xchg
cmpsb
and
pop
push
push
sbb
aaa
in
aas
jge
mov
in
push
fdivrl
push
es
add
adc
xchg
subb
dec
cld
repnz
mov
xchg
sbb
cmpsl
sbb
or
mov
test
sbb
inc
test
cmc
data16
and
push
jo
adc
popa
and
scas
xchg
mov
cmp
pop
mov
pusha
pop
ja
jle
movb
in
jo
sbb
ret
inc
add
lods
sub
push
jnp
fwait
aam
jae
inc
xchg
or
pop
xor
iret
push
shl
adc
pop
cltd
sbb
dec
jge
xchg
mov
rcll
sti
mov
mov
sbb
arpl
mov
xor
sbb
push
sarb
cltd
data16
pop
int3
xorl
adc
outsl
ss
mov
out
and
jmp
push
xlat
cmp
mov
insb
sub
into
inc
sbb
cmp
xchg
cmpsl
xchg
insl
mov
jae
in
mov
push
test
mov
iret
rcrb
out
sub
in
sbb
adc
cmp
movsb
sbb
insl
test
sti
sahf
adc
jo
push
jp
sbb
and
and
cmp
lcall
push
fidivl
push
adc
lea
sbb
and
cmp
sbb
cmp
push
jp
arpl
adc
sbb
jle
sbbl
jge
aas
cmp
adc
mov
ret
aaa
addr16
lods
aas
scas
mov
mov
iret
ret
leave
imul
insb
jne
and
jnp
sbbl
test
inc
jbe
lea
loopne
cmpsb
dec
add
cwtl
push
ret
cltd
jb
pop
ficoml
sbb
jae
dec
and
lcall
mov
insb
inc
leave
inc
mov
jp
xchg
repnz
or
call
jns
push
xor
jnp
sbb
pop
push
rclb
or
and
push
jbe
out
lcall
xorb
mov
flds
push
and
push
or
sbb
int3
outsb
push
stos
jecxz
inc
test
sub
stos
push
mov
andl
mov
daa
dec
add
shll
lahf
out
cmp
aam
jecxz
in
je
xchg
jge
cmp
jp
sub
outsl
imul
push
mov
ss
leave
in
in
dec
pusha
repz
jmp
push
mov
lea
rcrb
push
loope
jg
mov
sbb
movsb
jae
fldl
imul
pop
and
cmp
sbb
pop
sbb
pop
mov
mov
xchg
push
out
clc
mov
testb
mov
cmp
fcom
imul
adc
fbld
jns
cld
add
movsb
push
cmc
or
adc
pop
pop
movsb
push
xor
stc
mov
clc
lret
pop
mov
pusha
out
push
sub
cwtl
fdiv
out
insb
lret
or
sub
ja
stos
movsl
mov
js
inc
inc
xchg
pop
pop
push
test
dec
dec
lret
cmp
adc
xchg
mov
in
hlt
rolb
scas
mov
sbb
xor
sub
sub
add
sub
fstl
xchg
movsl
mov
pop
cli
or
cmc
mov
mov
dec
lods
lahf
ficomps
push
outsb
lock
cmc
push
arpl
in
ret
out
ds
int3
pop
dec
adc
cmp
push
jb
xchg
pop
add
movsl
inc
iret
repnz
in
jbe
inc
test
bound
xchg
loope
sub
cmp
arpl
pop
fimuls
movsl
out
rorb
insl
mov
dec
add
iret
pop
mov
orl
mov
leave
movsb
loope
out
and
lahf
fcomi
subl
je
push
sub
and
iret
mov
aas
pusha
and
push
fadds
icebp
lods
xchg
jb
stos
pushf
mov
and
sub
push
adc
jnp
insl
jle
popa
xchg
lret
popf
dec
push
sbb
loope
into
inc
pop
pop
jmp
out
scas
pop
jle
mov
xchg
pop
in
sbb
or
int3
fimuls
xchg
dec
popl
fwait
xchg
mov
movsb
jge
pop
xchg
mov
jmp
cmpsl
jb
push
shlb
mov
ret
nop
test
xor
inc
mov
fmull
jmp
mov
dec
cld
xor
rcll
ss
xor
adc
cmp
xor
cmpsl
and
pop
or
stos
nop
sbb
dec
mov
mov
cmp
add
add
rcrl
sbb
sbb
addr16
fisttpll
add
adc
roll
cmc
mov
aaa
jb
in
and
xorb
lods
and
xchg
xchg
enter
cmp
setnp
jg
dec
xor
fildll
sbb
jbe
push
repnz
add
shrb
ss
sbb
cld
test
test
pop
sbb
push
sbb
lcall
push
cmp
push
sub
lock
addr16
cmp
xchg
mov
sbb
mov
loop
mov
aad
mov
data16
loop
sub
dec
imul
in
int
fst
inc
imul
fisttpll
lods
mov
icebp
rolb
imull
xor
repz
cmpsl
mov
aad
stos
iret
push
sbb
pop
pop
ja
pop
lcall
cmpb
mov
pop
and
mov
adc
push
mov
int3
outsl
inc
arpl
mov
mov
mov
lahf
ret
xlat
mov
push
dec
bound
gs
notl
andb
mov
shrl
pop
test
pop
imul
xchg
ret
adc
fists
xor
pop
pusha
push
mov
sbb
adc
xchg
xor
addl
leave
out
flds
ret
movsb
inc
sbb
aas
add
bound
cmc
scas
lret
push
sar
movsb
pop
jae
fnstcw
iret
xchg
adc
pop
pushf
xor
sbb
mov
xor
movsl
imul
fisttps
adcl
or
fwait
cmp
cmp
jl
lret
mul
pop
pop
mov
rorb
jo
adcl
jl
popa
ja
and
cmp
loopne
jecxz
pop
mov
outsb
and
fidivs
lea
movsl
in
lret
jo
fstp
out
pop
bound
mov
rcll
xchg
or
int3
or
xchg
jbe
mov
push
push
aas
pop
scas
inc
sbb
adc
dec
iret
clc
and
xchg
jb
ret
test
sub
scas
sbb
pop
sub
push
hlt
in
stos
mov
test
popa
mov
inc
jne
sbbl
scas
mov
push
or
cli
movsl
adc
pop
fs
xchg
out
icebp
jno
out
and
sub
shrl
lahf
inc
lods
aam
lods
mov
xor
fwait
fmul
sbb
sub
cwtl
enter
cmp
popa
test
xchg
fucom
mov
inc
add
add
xor
pop
es
mov
mov
cmp
out
loopne
pop
jnp
divl
xor
lds
adc
subl
je
jle
adc
addl
je
mov
lret
les
sbb
mov
mov
cmp
xlat
and
jg
dec
push
fs
jp
dec
ja
ljmp
adc
push
push
int
imul
or
cmpsb
mov
fcmovnu
and
lret
rorl
mov
movb
cmc
xor
and
inc
xor
mov
fwait
push
popa
cmp
mov
idivl
fbld
pop
movsb
shll
and
sub
addb
fdivs
test
insl
push
xor
pop
jecxz
das
push
jbe
lods
mov
and
lcall
adc
movsb
aas
xchg
cmpsl
add
mov
pop
adc
xchg
fwait
cmpl
jecxz
jo
lods
mov
sarb
dec
jnp
fucompp
jge
pop
sbb
push
insb
jmp
shl
addb
out
loope
push
fnstcw
sbb
cmpsb
test
or
call
inc
std
jecxz
fs
loope
hlt
add
or
mov
or
sbb
dec
cwtl
push
cmpsl
repnz
xchg
jl
fnstcw
jbe
mov
or
ficompl
xchg
out
xchg
mov
fcompl
mov
mov
xchg
ret
arpl
adc
pop
in
fsubrs
nop
fs
shl
test
sub
or
push
inc
jmp
cmc
xlat
addr16
pop
mov
mov
sub
pop
out
loop
lret
sbb
out
pop
jne
jo
and
mov
inc
inc
xchg
and
jne
stc
xchg
ret
jmp
push
lock
xchg
fadds
nop
das
movsb
out
popa
mov
dec
xchg
mov
cmp
ret
or
sbb
bound
jne
lcall
adc
inc
sahf
dec
stos
sbbl
push
push
leave
mov
xor
xlat
mov
add
or
adc
xchg
fdivrl
adc
mov
cmpsb
push
add
js
pop
adcl
cmp
pop
scas
insb
add
lcall
test
and
aas
mov
add
call
inc
insl
jb
adc
pop
xlat
inc
or
clc
pushf
mov
push
idivb
mov
mov
add
nop
push
test
mov
cmp
lea
sbb
mov
out
push
mov
adc
or
test
fiadds
cmc
scas
or
pop
out
aad
cmp
mov
in
rcrb
mov
pop
fwait
fwait
xchg
in
mov
rclb
xchg
xor
add
ljmp
lods
jns
int
outsl
mov
jecxz
fcomi
xor
repz
test
dec
xchg
repnz
mov
add
test
mov
popa
jl
ja
mov
stos
icebp
sbb
sbb
les
outsb
dec
gs
test
aas
cmp
sbb
sub
int
pop
stos
adc
dec
lret
std
or
cmc
push
jae
nop
fsubl
dec
movsl
inc
outsl
xchg
pop
pop
mov
adc
fld
xlat
pop
out
stc
loope
jo
lret
and
add
pop
lock
icebp
mov
push
add
ljmp
dec
jne
jp
loope
nop
ja
xor
clc
psubw
repnz
jbe
fidivrs
mov
fimuls
mov
pop
inc
xor
test
pop
outsl
test
lret
stos
int3
insl
push
mov
dec
out
out
xlat
sbb
outsl
mov
sti
in
std
lods
inc
imul
mov
repnz
test
mov
les
inc
sbb
icebp
mov
fidivs
push
clc
xor
sbb
fldenv
xor
adc
mov
pop
push
xor
cli
xchg
xchg
cld
push
and
rorb
sub
or
vmovups
imul
inc
lea
repz
call
sub
clc
pop
cmc
addb
into
in
aad
mov
inc
push
iret
mov
inc
mov
arpl
test
insb
iret
push
jg
mov
stc
icebp
xchg
gs
cltd
cmpsl
scas
pusha
cs
test
mov
fdivrl
bound
aas
ficoml
push
sbb
mov
neg
fisttpl
cmp
negb
adc
mov
outsl
xchg
sub
sti
mov
lods
adc
pop
xchg
push
clc
rorb
push
xor
pop
cmpsl
shrl
loopne
push
addr16
pop
pop
mov
test
js
int
fdivrs
test
xchg
fcompl
movsl
call
mov
push
repz
mov
mov
arpl
mov
push
push
fcompl
sub
pop
cwtl
gs
arpl
mov
mov
out
cmp
jecxz
mov
xchg
ss
xchg
lock
push
test
jns
sbb
mov
adc
inc
std
mov
jle
imul
jnp
filds
xor
arpl
xor
cmpsb
cmp
mov
imul
mov
xor
pop
mov
sub
adcb
orb
xor
dec
mov
cwtl
iret
dec
jle
rep
dec
movsl
fadd
in
sbb
rcrl
cmpsb
inc
andb
mov
in
sub
and
add
cmp
in
fs
lods
loopne
pop
std
aaa
clc
adc
out
add
in
sub
adc
nop
xor
mov
mov
sbb
mov
pop
sahf
call
cld
orb
pop
mov
lods
clc
popa
sub
aas
fwait
cmp
jmp
xor
xchg
flds
xchg
fcmovne
mov
ficomps
fs
cmp
dec
adc
push
mov
mov
pushf
stc
cltd
push
inc
in
pop
sbb
in
push
mov
inc
loope
xchg
mov
icebp
stos
repz
sbbl
push
out
jmp
jns
outsl
dec
cld
push
dec
and
adc
jle
dec
loop
sub
mov
jne
popf
inc
lret
push
adc
cli
and
dec
ficomps
push
icebp
add
call
push
sub
jns
dec
pop
mov
pop
ret
jge
mov
push
cmp
lahf
jbe
nop
jl
and
lea
fidivrl
mov
mov
in
mov
cld
mov
jo
mov
fidivs
add
mov
sub
inc
ret
int3
in
ja
push
leave
mov
xor
push
push
mov
and
jno
inc
mov
cmovs
sbb
adc
out
push
stc
ljmp
jge
cld
push
jmp
hlt
jns
mov
jns
jbe
into
pushf
data16
leave
xor
fcoms
fwait
test
xor
and
bound
jg
xchg
and
mov
cli
sarl
cmp
push
pusha
dec
mov
aad
insb
dec
xor
incl
mov
addr16
fists
cmpl
xchg
cmp
int3
pop
push
add
or
sbb
jecxz
mov
pop
loop
data16
orl
cli
sub
mov
add
gs
mov
push
je
bound
sub
scas
out
insl
fisubrl
icebp
stos
cmpsb
outsl
in
repz
mov
nop
popa
rep
mov
outsb
mov
aam
scas
dec
leave
dec
in
push
add
stos
push
gs
pop
add
jmp
sbb
xchg
clc
ja
iret
shlb
sbb
add
mov
nop
push
cmp
add
sub
or
mov
cmp
xchg
push
cld
xorb
cmc
xlat
test
push
cmp
pop
or
jle
jns
fldenv
lods
in
stos
xchg
stc
jp
mov
push
subb
sbb
loopne
fdivs
jo
xor
add
out
adc
daa
jae
inc
jmp
repz
sbb
jo
inc
xor
add
pop
mov
sahf
dec
dec
push
loope
sbb
jb
ret
lret
js
mov
inc
loope
addr16
add
mov
cli
mov
pop
sbb
mov
lcall
mov
unpcklps
outsl
mov
sbb
sbb
adc
ss
dec
xchg
adc
xchg
push
in
notl
cld
loope
idiv
sbb
add
mov
inc
pop
jg
cli
sbb
mov
jmp
xchg
jecxz
repnz
xchg
shll
repz
jmp
insb
ja
dec
cmpsb
sar
cli
insl
lret
insb
pop
sbb
fiaddl
and
fldenv
repz
adc
sysenter
lock
push
or
fcompl
cmp
add
dec
icebp
das
nop
arpl
and
pop
add
stc
imul
lret
add
out
fwait
pushf
or
and
sbb
rcrb
inc
mov
insb
fdivl
scas
out
fidivrl
xchg
popf
and
je
or
mov
push
lods
test
in
ljmp
outsb
xchg
js
sbb
push
jmp
sbb
mov
lods
leave
mov
hlt
cltd
cmp
and
mov
arpl
daa
mov
mov
add
adc
xchg
repnz
sbb
push
and
push
loope
and
dec
lock
xor
adcl
xor
sub
movl
cmp
jne
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jge
jmp
push
push
call
cmpl
jne
mov
inc
mov
jmp
mov
mov
mov
xor
andl
xor
adcl
add
sbbl
add
movl
mov
cmp
movl
jae
lea
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jle
jmp
pushl
pushl
push
call
jmp
mov
decl
mov
orl
xor
xorl
add
lea
movl
mov
movl
mov
cmp
jbe
addl
addl
jmp
addl
mov
xor
sbbl
inc
incl
sbbl
add
movl
cmp
jb
mov
xor
mov
add
mov
xor
notl
mov
sub
add
subl
mov
xor
sub
ror
xor
or
mov
mov
mov
mov
xorl
sub
xorl
xor
cmp
jne
mov
mov
xor
xor
sub
sub
xor
mov
mov
xor
mov
sub
jmp
mov
xor
mov
sub
add
mov
mov
cmp
jne
movl
mov
xor
add
jmp
lea
jmp
lock
pop
pop
insb
js
mov
shlb
jnp
pushf
jnp
cmp
jmp
push
cwtl
sbb
xor
xchg
outsb
cs
les
scas
arpl
xchg
and
or
daa
in
fcompl
outsb
push
push
loope
add
push
iret
adc
fwait
xor
das
inc
push
xchg
repz
pushl
sub
jae
in
mov
test
jb
inc
jp
loopne
mov
jp
mov
jb
mov
pop
pop
fcmove
pop
lds
push
movsl
or
sbb
mov
push
ret
and
mov
call
into
jg
rcll
pop
pusha
xchg
mov
aas
mov
xlat
int
jge
stos
lock
les
mov
insb
cmpsl
adc
int3
lock
sbb
ss
popa
or
mov
mov
inc
mov
arpl
movsb
int
sub
cmp
cmp
mov
lock
cmp
aad
jle
jl
sbb
pop
and
pop
jbe
push
mov
arpl
jo
fbstp
mov
dec
jg
sub
sub
lds
or
xor
dec
xchg
add
lock
push
pmaxub
pop
ret
adc
xor
sbb
movsb
popa
push
loope
or
adc
test
mov
xchg
sub
jl
rolb
adc
test
xchg
les
mov
mul
daa
lret
xchg
sub
jbe
test
jae
adc
das
pop
aaa
sbb
mov
daa
cld
add
adc
int3
stos
je
add
sub
sub
loope
or
lret
mov
inc
out
mov
rclb
mov
enter
pop
pop
mov
lods
lock
popf
mov
idivl
push
sub
adc
sbb
mov
jmp
push
mov
mov
pop
iret
adc
dec
call
or
xor
add
mov
das
pop
andl
mov
aam
cmc
and
sbbb
iret
mov
mov
ljmp
mov
movsl
cltd
xor
es
mov
mov
in
or
clc
dec
mov
xchg
add
xor
push
sbb
cld
push
push
push
mov
jmp
das
lock
dec
push
cmp
aad
mov
push
push
dec
cs
hlt
inc
cmp
gs
xchg
lret
adc
push
jg
jmp
insl
loopne
jns
repz
fadds
fucom
mov
mov
loopne
inc
mov
fildll
xchg
inc
imul
push
xchg
pusha
mulb
rcl
mov
xchg
repnz
repz
dec
insb
mov
sbb
inc
in
sub
dec
mov
jae
push
iret
inc
cwtl
sbb
stc
fistpl
ja
ret
mov
in
cmp
nop
clc
cmp
jge
pop
cmpsb
stos
fs
out
test
adc
or
or
or
pop
jl
cmpsl
push
mov
shrb
lods
inc
jl
icebp
mov
sub
add
dec
repnz
shrl
arpl
adc
push
into
mov
fadds
ja
pop
ds
jle
jo
insb
shll
int3
cmpsl
jno
js
lods
dec
cmp
cld
std
and
lret
add
pop
ss
cltd
nop
push
lret
aad
addr16
movl
das
xchg
add
sbb
cmpb
cmp
xchg
and
ss
jne
hlt
push
jmp
mov
pop
sahf
iret
in
inc
cli
sbb
mov
xchg
or
or
or
cmp
jecxz
mov
push
pushf
dec
and
or
rcll
lods
decb
in
lock
scas
in
hlt
push
adc
sub
subb
cmp
xchg
cs
add
repz
out
dec
int3
scas
jmp
sbb
outsl
loope
xchg
je
adc
push
in
mov
xor
push
cwtl
push
inc
jecxz
or
mov
pmulhw
leave
push
das
test
leave
loopne
xchg
mov
clc
test
aad
test
or
pop
inc
mov
xor
push
push
popa
fists
hlt
hlt
sub
lock
movsl
scas
adc
cmp
mov
inc
xchg
outsb
xor
pop
xchg
in
cmp
aaa
rclb
repnz
pusha
stos
push
lock
mov
bound
jns
fistl
jae
mov
les
and
xor
mov
jmp
lea
cwtl
out
subb
cli
or
jb
mov
jns
lret
lret
lretw
jmp
sti
ja
rolb
outsl
xchg
xor
lock
js
inc
divl
in
int
dec
mov
add
pop
push
out
orb
jbe
mov
enter
je
add
test
lret
fimull
addb
xchg
cltd
orb
add
mov
sbb
mov
sub
fdivp
fdivrl
sti
add
ret
add
mov
fdivl
adc
data16
faddl
std
sub
sbb
lret
mov
shlb
mov
mov
mov
sbb
cmp
sub
out
mov
jmp
mov
mov
out
jns
and
pop
push
test
pusha
jmp
cli
pop
jno
adc
ss
mov
out
lcall
fcomps
aas
mov
fcomps
push
pushf
repnz
cmpsl
hlt
lcall
mov
cltd
clc
or
cmp
pop
out
push
rorl
push
xor
adc
and
cltd
and
aam
sbb
mov
lods
popf
lcall
mov
fisttpl
fbstp
in
mov
pop
or
insb
aad
out
sahf
mov
pop
sbb
cltd
add
xchg
jne
mov
loope
mov
mov
push
xchg
xor
rolb
cmc
lods
cmp
dec
into
push
fidivs
lcall
dec
add
fucom
gs
call
mov
xor
xor
mov
cmpsl
popa
movsb
mov
ljmp
or
xor
push
xor
test
jb
pop
insb
popa
jb
mov
movsl
jns
xchg
and
xchg
decb
pop
mov
adcl
lret
cmp
sub
loop
roll
sub
push
or
andl
je
mov
mov
cmp
aaa
sbb
mov
adc
pushf
add
aad
push
outsl
push
cwtl
or
sar
pop
xlat
sbb
testl
push
cpuid
cmc
repz
and
push
fwait
mov
dec
mov
mov
xchg
mov
sti
loop
sahf
jb
push
leave
push
sbb
xchg
adc
outsb
inc
pop
shll
imul
popf
sti
and
xchg
addr16
stos
add
lods
mov
cmp
in
daa
ret
arpl
bound
fwait
mov
sti
outsl
das
lret
mov
add
mov
cs
push
stos
pushl
cli
sub
movsl
cmp
insl
rcrb
dec
add
mov
push
xor
adc
xchg
pop
or
cmp
jecxz
pusha
dec
xor
cmp
loopne
xor
in
mov
xor
pop
sub
in
sahf
jle
pop
pop
pusha
cmp
cli
mov
mov
inc
adc
push
jbe
mov
je
mov
sub
fdivrl
mov
fs
push
test
dec
andb
adc
inc
inc
call
fs
out
mov
imul
mov
testl
jo
xchg
scas
dec
cmp
aas
pop
jp
pusha
or
adc
rep
mov
ljmp
mov
sub
out
jns
dec
clc
int
loop
fnstcw
pop
inc
jnp
mov
mov
cmp
lahf
sub
loope
sub
insl
subl
and
loope
jl
jecxz
mov
mov
and
dec
mov
stos
imul
insb
xor
std
outsl
ds
jmp
push
inc
out
mov
pop
pushf
adc
add
pusha
and
testl
cmp
out
sbb
lds
push
and
addr16
leave
fcmovb
jo
jo
insb
fmull
add
dec
cs
pusha
and
enter
pop
pminsw
shll
jp
pop
enter
mov
movsl
inc
mov
add
fwait
cs
int
mov
cmp
ss
cli
and
or
adc
cmp
jno
or
scas
xor
mov
orl
add
out
mov
cmc
lods
mov
dec
addr16
cmp
ret
dec
jmp
and
sbb
sbb
cmp
test
sti
cli
mov
jmp
cmp
dec
movsb
cli
loop
nop
dec
or
imul
rolb
ret
jno
adc
pop
jnp
popf
inc
int
ja
mov
fistps
in
inc
dec
pop
push
pop
pushf
pop
add
rcrl
pop
clc
mov
or
decb
cmpsl
dec
int
mov
dec
out
adc
clc
pushw
mov
cltd
stos
das
push
sbb
pop
loope
xor
add
jae
adc
int3
out
push
test
ficoml
hlt
push
xor
addr16
pop
xor
jge
pushf
xor
popa
pusha
lea
and
and
aas
adc
adc
xor
inc
das
loop
lods
lods
js
fwait
movl
sub
xor
mov
and
hlt
movsl
ljmp
fistpl
lock
fldt
mov
adcl
mov
xchg
bound
imul
add
sub
call
pop
mov
fbstp
dec
test
sbb
shrb
xchg
lds
inc
cmp
push
mov
push
outsl
cmp
mov
inc
and
lock
fmul
xchg
mov
mov
inc
jbe
mov
mov
mov
jo
scas
hlt
test
in
mov
fldl
lds
mov
push
test
or
sbbl
pop
or
pop
cmp
push
enter
imul
xor
lcall
pop
and
mov
out
aas
pop
fwait
aad
cwtl
int3
or
std
mov
ret
test
xchg
push
test
push
test
push
jnp
fs
subb
lods
fcoms
mov
push
and
sbb
ffree
sbb
imul
dec
sbb
or
out
fcmovnu
gs
in
xchg
jns
fidivrs
insl
mov
push
adc
scas
adc
mov
lods
lods
sbb
or
iret
xor
lretw
idiv
repz
mov
outsl
jge
pusha
push
test
or
xlat
cmpl
and
pop
push
push
out
int3
pop
subb
push
leave
rcrb
pop
sub
stos
jno
xchg
cli
fstps
mov
fidivs
dec
inc
cltd
pop
jecxz
lcall
mov
imul
mov
mov
je
std
divl
pop
lods
jl
aas
fucomp
xchg
sbb
sbb
xchg
and
pop
fidivrs
push
out
popa
jbe
outsl
fsubs
push
rol
push
popa
pop
test
xor
leave
adc
cld
scas
in
or
cmp
mov
mov
daa
cwtl
data16
mov
sub
cmp
push
insb
mov
sbb
mov
sub
add
add
mov
mov
dec
stos
sbbb
cmp
lahf
sub
hlt
pop
imul
aaa
mov
push
add
out
or
jo
add
push
shrl
dec
stos
add
and
xor
add
stos
pop
add
rorb
pop
fwait
daa
push
test
insl
pop
inc
or
cmp
pop
ja
out
inc
sbb
in
jno
shl
stos
adc
pop
lret
cli
dec
sbb
push
aam
nop
out
stos
sub
xlat
in
rorl
and
cmp
ja
add
pop
pop
fsubs
adc
cmp
xor
pop
pop
mov
inc
mov
jo
das
or
insb
ficompl
add
orl
fisubs
mov
push
int3
jge
repnz
lods
int3
movsl
insb
sbb
inc
rolb
jl
lods
adc
repnz
jl
mov
xchg
cmp
cli
xchg
scas
add
or
rolb
outsb
xchg
movsb
mov
rclb
sub
into
or
scas
add
lea
addl
jp
cld
cmp
js
push
push
out
jne
mov
fwait
mov
or
add
push
std
fisttps
lret
mov
enter
cld
lods
jnp
pop
in
repnz
xor
xchg
cmp
popf
fcomp
lahf
daa
xchg
sar
mov
cs
xchg
out
mov
les
mov
and
cmp
jns
rorb
movsl
mov
and
lcall
repnz
in
sub
pop
stos
add
adc
push
mov
rorl
cmpsb
aad
push
pop
je
mov
xor
xchg
push
scas
vfmadd213ss
dec
mov
pop
jp
mov
paddd
mov
movl
popf
gs
xor
mov
pop
rorb
cmpsb
cmp
xchg
pop
push
sbb
lret
add
clc
dec
dec
and
jecxz
popf
add
clc
rorl
jmp
jg
test
cmc
dec
cmp
fcompl
jl
stos
jmp
mov
in
mov
clc
call
inc
inc
in
mov
les
jb
inc
mov
test
ret
xor
call
enter
add
mov
jge
jle
ret
jg
mov
xchg
lock
mov
in
push
push
loope
ja
mov
aaa
aam
push
and
imul
jl
pop
push
enter
adc
sub
xchg
ds
test
and
enter
les
scas
popf
adc
js
jae
adc
test
mov
inc
sbb
sub
or
xchg
jo
cmp
hlt
add
jmp
hlt
push
rcrl
push
pop
add
insb
cmp
ljmp
inc
add
outsb
test
xor
sub
cs
cwtl
in
scas
test
fiadds
pop
jbe
aam
jnp
sti
rcr
ss
or
jae
sbb
dec
dec
addr16
cmpsb
mov
and
inc
bswap
push
test
test
pop
bound
jle
stc
iret
jbe
and
pop
cld
lods
mov
out
fdivrl
jae
mov
jecxz
sub
ss
push
std
inc
pop
mov
add
mov
lret
aam
sbb
dec
mov
mov
pop
xchg
fidivl
and
test
mov
xchg
push
lret
push
inc
fistps
and
test
arpl
cmpl
nop
out
pop
add
aas
call
dec
pop
xchg
je
sbb
push
xor
and
ret
jg
cmp
inc
and
mul
sbb
test
aaa
dec
test
cld
fcoml
jmp
jae
ret
iret
cmp
add
xor
pop
adc
and
fs
xor
jmp
add
xchg
push
jecxz
add
pushf
dec
mov
or
subl
outsb
nop
fwait
inc
mov
out
in
xchg
into
jns
xchg
push
data16
cmpsb
add
mov
es
iret
dec
push
sub
xor
fldcw
dec
sbb
sbb
les
add
jbe
addr16
mov
mov
pop
sti
das
push
jp
int3
sub
jns
pop
sub
aad
ljmp
aam
add
mov
inc
dec
inc
clc
ficoml
out
cwtl
xchg
bound
mov
popa
adc
push
je
outsb
insb
and
dec
push
lcall
ss
ljmp
in
sahf
mov
pusha
ret
fs
rcr
loopne
test
test
movsl
adcl
xor
loop
loop
mov
dec
cld
jp
das
in
add
test
arpl
cmpsl
insl
scas
pop
fs
pop
inc
jns
mov
orb
cltd
outsb
or
jo
sbb
sbb
std
daa
sub
outsb
ds
push
xchg
pop
mov
movsl
test
sbb
mov
std
cwtl
insl
clc
mov
jae
adc
pop
dec
cwtl
jne
in
insb
xchg
stos
and
lea
into
ss
push
push
sbb
mov
leave
xchg
movsl
mov
jge
fwait
pop
call
shlb
xchg
cs
push
and
jno
pushl
mov
inc
add
fwait
retw
pop
inc
pusha
inc
dec
in
xor
xchg
fsubl
inc
xchg
xchg
xlat
sti
xorb
movsl
test
ds
ja
jg
out
or
jl
xor
fstl
movsl
jmp
insb
in
enter
cmpsl
pop
scas
test
mov
call
aaa
add
bound
and
ss
pop
fbstp
testb
std
loope
es
mov
subb
mov
inc
outsb
pop
push
std
enter
sahf
hlt
jp
hlt
pop
sub
xchg
pop
popf
xor
dec
data16
mov
push
mov
mov
inc
push
enter
push
mov
or
lret
push
imul
dec
clc
inc
pop
jl
mov
arpl
mov
or
mov
fdivrs
mov
fwait
test
lds
in
in
je
push
pop
add
lret
jne
push
or
dec
insb
shll
lret
xchg
inc
pop
insb
test
push
mov
add
jns
xchg
mov
dec
aad
pop
mov
stos
mov
rclb
stos
scas
jmp
sbb
dec
lods
dec
jnp
mov
xchg
std
stc
pop
shlb
out
mov
xor
add
dec
xor
dec
mul
aam
loopne
cs
jno
jne
movsl
inc
daa
xchg
ja
dec
bound
repz
sti
repz
lret
cmp
outsb
dec
pop
sub
cmp
mov
add
mov
pop
scas
push
mov
shrl
mov
loopne
xchg
fisubs
cs
mov
sbb
cmp
leave
ret
mov
int
lcall
cmp
xchg
sub
push
or
dec
jno
lods
xchg
add
stos
data16
dec
jb
ret
cli
imul
into
add
fnsave
push
out
mov
ds
outsl
cltd
jno
inc
ljmp
dec
jecxz
loop
stos
dec
stc
cltd
cs
push
imul
in
fstl
push
pop
xchg
jp
cld
je
test
sbbb
pop
les
mov
mov
icebp
clc
test
sbb
insl
je
lcall
movsb
adc
popf
xor
sti
xchg
aam
jmp
lods
adc
aaa
movsl
icebp
pop
jae
daa
scas
loopne
sahf
les
cmova
push
mov
sub
das
ljmp
and
and
shlb
aad
xchg
in
int
adc
dec
push
test
cmpsb
fs
das
jne
mov
addr16
decb
xor
dec
iret
pop
dec
xchg
push
in
imul
pop
sbb
sbb
sbb
imul
adc
idivb
addb
mov
ss
test
xchg
cmp
movsb
xor
push
data16
cmp
mov
sub
cmp
sbb
xor
jecxz
and
add
fs
cmp
sbb
les
cmpsl
mov
ret
cmp
sbb
lock
pop
imul
movsl
jp
pop
xchg
push
adc
ds
iret
sub
inc
sub
mov
adc
push
cwtl
mov
inc
and
inc
loopne
xor
aaa
jl
jnp
ds
lock
xor
push
cmc
push
mov
inc
jno
xchg
repnz
aas
or
jns
lods
nop
and
inc
lret
cmp
dec
subb
and
dec
inc
adc
pusha
nop
lret
lock
jo
repz
leave
out
imul
movsl
and
bound
jle
dec
in
arpl
shll
movsl
nop
loope
xchg
cli
xlat
scas
xchg
hlt
pop
add
mov
mov
inc
fcmovb
test
out
stc
hlt
loopne
xchg
pop
push
out
in
or
mov
inc
fstps
pop
xor
addr16
jg
sub
movsb
fs
stc
xor
ror
and
jmp
sbb
adcb
xchg
sbb
imul
push
testl
out
inc
rcrb
arpl
rcl
loopne
cmpb
jns
aad
adc
push
cmp
popa
in
sbb
fnstcw
cmp
jo
mov
mov
add
insl
xchg
int3
cs
cmpsb
in
movlps
out
nop
mov
adc
imul
icebp
pusha
popa
dec
adc
lret
pushf
repnz
call
xchg
cmp
inc
push
jg
xchg
iret
aaa
pop
in
pop
data16
push
sub
gs
mov
pop
inc
jno
mov
mov
lds
push
jbe
jg
test
and
pop
cli
insb
sbb
and
jno
push
fstpl
push
jno
inc
lahf
int3
sar
daa
mov
stos
add
xchg
lods
mov
repz
push
add
xchg
sub
lods
jge
mov
mov
loopne
dec
or
or
cli
push
adc
lds
inc
cmpsl
int3
das
ret
or
push
fildl
or
jbe
inc
sub
xchg
or
outsb
fisubs
fbstp
aad
out
cmp
sub
sub
cmp
xor
sarb
ds
in
stc
jecxz
mov
mov
lods
jbe
jle
std
mov
in
roll
and
xchg
jno
les
fistps
shlb
rcl
aad
cmp
jb
in
cmpsb
test
insb
xor
inc
scas
negl
cmpb
mov
add
mov
nop
or
pop
pop
pop
imul
addl
dec
rclb
pop
rorb
sub
fcoml
in
sbb
mov
out
clc
add
sbb
out
shl
mov
out
lahf
pop
and
jno
sub
rcrl
dec
lret
dec
data16
mov
subl
jno
jns
gs
or
pop
sub
xorb
sub
jle
or
rcrl
xchg
dec
loop
adc
cmp
mov
insb
in
aam
es
fnstenv
icebp
jmp
adc
popa
pushf
sub
add
mov
xchg
pop
int
adc
in
lcall
inc
mov
arpl
ds
cmp
fcomp
xchg
cmpsl
sarb
push
inc
das
cmpsl
and
pop
push
pop
fnstsw
je
push
mov
subl
in
or
ret
fnstcw
sub
lock
mov
fsubl
inc
ret
or
adc
mov
pop
outsl
aad
pop
pushf
dec
pop
imull
popa
or
sub
xor
repz
xor
adc
mov
rcrb
out
mov
inc
cmp
bound
repz
andl
mov
jb
adc
sub
push
neg
ret
and
cmp
in
jnp
pop
nop
lret
cmc
rorb
mov
addr16
jbe
mov
dec
mov
sub
inc
rcrl
divb
scas
in
inc
pop
ret
sbb
mov
xor
scas
sbb
and
mov
mov
add
sbb
sbb
mov
xor
mov
push
stc
sub
es
js
in
jmp
jo
sbb
test
adc
dec
xlat
fs
sbb
sbb
test
mov
les
aam
jne
call
mov
xchg
xchg
sub
clc
or
add
dec
dec
dec
xor
bswap
fisttps
scas
jp
inc
rep
test
into
pop
xchg
cwtl
xor
sbb
sub
xor
mov
int
gs
sbb
mul
ret
es
imull
sub
adc
adc
push
mov
enter
stc
cmp
fs
jp
jae
sbb
and
stc
push
dec
icebp
push
push
mov
xor
push
aad
aad
and
call
lret
test
fwait
mov
hlt
fs
cmc
push
push
arpl
nop
adc
addl
sbbb
idiv
lret
inc
dec
sahf
mov
mov
xchg
ljmp
arpl
or
add
sbb
fs
pop
test
pop
jmp
pop
movsb
mov
add
push
and
insl
dec
sbb
sarl
jbe
xchg
inc
mov
movsl
sub
add
jbe
mov
iret
xor
push
xchg
ret
adc
mov
jecxz
out
push
dec
xchg
and
pop
mov
sub
mov
aam
mov
push
adc
out
cmp
jge
outsb
mov
xchg
divl
test
les
rcr
add
dec
sub
push
jo
xchg
movb
push
dec
lea
add
mov
insl
lds
pop
sub
push
push
lret
cmpsb
pushf
lea
mov
jmp
mov
mov
addr16
jecxz
mov
test
xor
sbb
enter
mov
xchg
dec
pop
outsl
inc
loopne
jmp
dec
xchg
push
push
test
add
and
call
push
cmpsl
test
jne
sbb
movd
hlt
imul
clc
movsb
cmc
test
cmpl
jp
fdivr
mov
pushf
mov
jno
cmp
sbb
andb
xchg
mov
movb
cmp
mull
mov
int3
and
jnp
lret
and
sti
ja
out
lret
push
pusha
lods
jb
mov
sub
punpckldq
in
push
loope
movsl
add
ret
ret
cmp
repnz
push
lret
imul
and
push
mov
mov
sub
jp
sbb
out
mov
out
mov
ljmp
adc
ficomps
dec
jbe
push
jge
push
stos
decl
idivb
popf
pop
add
sub
mov
pop
scas
or
fsts
sahf
mov
dec
pop
push
insb
xchg
ja
mov
aaa
jne
fwait
into
das
pop
movb
adc
add
adc
sub
cmpl
dec
pop
imulb
test
repnz
jle
pop
xchg
aad
ret
jns
mov
and
sbb
repz
adc
and
dec
mov
les
mov
and
and
adc
out
cmpsl
fwait
shll
jne
fabs
mov
xor
xor
icebp
and
mov
jmp
mov
adc
sbb
inc
vprotw
call
cmp
jbe
pop
es
pop
stos
sahf
fnstsw
add
into
adc
fwait
xor
mov
and
mov
lret
jno
aaa
sti
push
mov
ficomps
inc
lea
adc
aad
loop
mov
icebp
out
stc
mov
xchg
sbbl
repz
fnstenv
mov
xchg
int
adc
call
push
loopne
jecxz
repz
or
fdiv
insb
fdivrs
push
gs
inc
or
jl
fwait
sub
icebp
fsubrl
sub
xchg
lods
push
jge
loopne
sarb
insb
nop
mov
je
push
push
imul
ja
xorl
cwtl
mov
pop
jb
nop
sahf
ja
jecxz
sub
mov
sub
xchg
sti
xchg
add
leave
sbb
rcrb
divl
cmp
cwtl
mov
jnp
inc
fcoms
lds
mov
mov
jl
es
int3
dec
stos
movsl
jae
add
cli
ja
ficoml
stc
loopne
ljmp
aad
sbb
std
pop
pop
subl
push
ja
enter
leave
push
ffreep
call
or
xchg
cmp
push
test
in
cmp
sub
mov
cmp
scas
push
lahf
out
aaa
pop
mov
sub
out
je
aas
jecxz
xor
inc
jge
cmp
xor
subb
or
insl
fs
xor
mov
xlat
pop
or
mov
dec
ret
xchg
xchg
sub
out
push
daa
inc
sbb
das
jb
and
push
out
sub
xlat
int3
add
fsts
cmp
lds
cmp
inc
out
cmc
mov
jae
push
jnp
dec
xchg
ret
insl
inc
jno
movsb
hlt
xor
in
xor
fmull
dec
test
xchg
les
xchg
mov
cmp
lods
sub
rorb
jb
in
adc
or
loopne
jmp
mov
push
xchg
lcall
jo
jp
jo
mov
inc
outsb
out
adc
fmull
adc
cmc
xor
stos
add
or
fmul
aam
or
aas
cmpsb
add
cmp
outsb
lods
xchg
mov
xchg
test
mov
lcall
int
cmp
inc
mov
mov
mov
test
jbe
mov
repz
fadds
std
jnp
adc
in
loop
repnz
xor
ja
divl
sub
push
push
push
movsl
loop
stc
add
notb
out
push
jb
push
movl
or
movsb
in
jle
fadd
sbb
jne
sbb
add
xor
js
pushf
adc
pop
or
mov
xchg
jecxz
dec
pop
jo
jb
loop
xchg
imull
xchg
out
jo
push
mov
mov
jle
xor
add
push
call
test
mov
int
cmpl
and
addb
and
outsl
mov
and
push
das
repz
xor
sub
sbb
pop
inc
int3
xchg
js
stos
loope
mov
xor
imulb
cmpsl
in
jns
neg
fiaddl
fwait
xchg
pop
ja
adc
push
and
inc
scas
jbe
push
movsl
nop
hlt
and
mov
out
jecxz
in
dec
repz
movsl
into
push
subb
push
cltd
pop
adc
pop
add
mov
sar
pop
xchg
mov
pop
mov
outsb
push
divl
inc
int
aam
jmp
mov
jne
aaa
jbe
js
sbb
and
das
dec
or
fidivrs
sbb
rcr
mov
sub
sub
add
fsts
adc
xchg
dec
mov
enter
pop
shlb
pop
sti
push
repz
and
out
sti
sub
adc
ss
movsl
fwait
xchg
mov
pushf
arpl
fwait
cmp
cmp
daa
mov
dec
xor
inc
xlat
int3
andl
pop
filds
rcrb
mov
and
lock
call
cld
and
xchg
rorb
inc
mov
movsb
sbb
mov
push
ds
adc
bound
mov
std
in
add
outsl
loope
and
xchg
add
call
xchg
xchg
stc
call
jns
loop
in
xchg
outsl
sbb
and
es
add
flds
xor
mov
and
inc
loop
rclw
dec
lea
aam
inc
test
rorl
mov
mov
movl
mov
movl
mov
xor
add
mov
mov
xor
add
mov
movl
movl
mov
mov
xor
add
cmp
je
mov
xor
mov
sub
add
mov
mov
xor
add
imul
cmp
ja
mov
mov
mov
sub
xor
xor
add
div
mov
mov
mov
xor
add
cmp
jbe
mov
xor
add
mov
mov
mov
xor
add
imul
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
add
movl
mov
mov
mov
movl
movl
mov
mov
xor
add
jmp
movl
movl
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
add
imul
mov
jmp
leave
pop
xchg
movsl
or
and
jno
jnp
hlt
pushf
jnp
and
jbe
inc
fiaddl
gs
cld
push
rorl
repnz
test
inc
add
or
insl
xchg
mov
and
push
gs
dec
lea
cmp
imul
sub
sub
gs
dec
sub
cmp
imul
inc
mulb
je
outsl
pop
inc
sti
loop
add
inc
push
push
clc
fcmovnb
push
test
sbb
sbb
or
aas
jmp
int3
out
fisttps
loope
xchg
bound
lcall
mov
bound
adc
aam
fnstsw
pusha
push
xor
inc
inc
inc
sub
adc
pop
leave
inc
popa
add
cli
repz
cmp
test
jp
cs
in
lds
cwtl
inc
cli
nop
or
dec
out
cmpsb
leave
enter
loope
pop
jp
cltd
mov
or
fucomp
sub
xor
in
inc
and
fidivrl
mov
std
roll
mov
jo
outsb
add
xor
stos
or
and
cmp
ljmp
stc
mov
movsb
add
cld
xor
scas
xor
mov
sub
stos
cld
mov
mov
cmc
fldl
jecxz
push
pop
pop
inc
enter
hlt
stc
cmp
mov
das
neg
fcmovnu
mov
aaa
aaa
mov
mov
sbb
push
loope
push
sahf
cli
mov
addr16
jle
xchg
jmp
lcall
mov
popa
jo
fstpl
ret
add
push
ret
push
lds
push
or
cmp
and
repz
inc
pop
out
xchg
push
pop
aaa
dec
push
mov
lea
xchg
xchg
add
inc
hlt
sub
fwait
pop
push
sub
sbb
icebp
repnz
pop
mov
mov
mov
in
xchg
ja
push
subb
or
mov
int3
or
mov
push
lahf
jg
cmp
addb
out
mov
add
pop
data16
xor
mov
cmpsb
xchg
or
xchg
inc
add
es
js
mov
into
mov
push
repnz
jne
popa
jge
pop
int3
mov
mov
add
xchg
mov
dec
cli
pop
lahf
push
jmp
iret
dec
jg
xchg
xor
mov
or
cmp
sub
insb
loope
xor
xor
pusha
lcall
out
pop
push
xlat
mov
fdivrp
lea
repz
and
leave
pop
add
scas
jno
pop
ss
das
mov
mov
call
leave
loop
cmp
mov
push
adc
les
xor
icebp
out
fsubs
cmp
jae
cmp
mov
jp
rclb
scas
and
sbb
and
push
sub
and
stos
mov
lds
pop
hlt
mov
sbb
into
das
in
fwait
shrb
aas
mov
or
sarb
mov
pop
mov
push
xchg
mov
dec
mov
mov
imul
mov
add
bound
jmp
popf
mov
sbb
faddp
xchg
subl
and
lret
jecxz
cmpsb
or
sbb
sub
and
out
sub
aad
pop
iret
nop
lahf
mov
pop
test
fs
daa
mov
iret
sbb
loopne
sub
popf
enter
mov
cmc
mov
inc
sub
xchg
mov
fistl
out
nop
aas
addl
bound
xor
cmp
xor
call
popa
mov
mov
pop
icebp
leave
xor
push
xchg
mov
xchg
jl
out
xchg
and
sbb
test
add
rolb
xchg
xchg
add
inc
add
aam
scas
ret
mov
fidivrs
sub
inc
cmp
orb
in
pop
dec
fisubl
clc
ret
xor
adc
lret
push
lock
push
and
pop
sub
cli
push
xchg
sub
ja
cmp
mov
andl
cli
xor
or
inc
push
adcb
cmp
rcrb
stc
scas
js
mov
mov
rol
mov
fidivl
jecxz
xor
dec
sub
add
xchg
movsb
adc
fs
fidivs
icebp
movsl
push
jmp
ljmp
icebp
jb
xor
push
xchg
stos
jecxz
mov
addr16
or
pop
adcl
iret
ds
testb
xchg
push
jl
adc
cmp
jp
push
jp
pop
push
rorl
fadds
jp
in
int3
add
lcall
adc
leave
jo
xor
gs
fsubrp
xchg
xchg
lret
iret
das
test
aam
pop
loopne
mov
lods
xchg
push
orl
mov
aam
in
insl
sub
repz
call
nop
aam
iret
inc
xor
pop
sbb
pop
in
cmpsb
lods
pop
cmpsl
idivb
mov
loopne
test
js
add
cmpsb
hlt
popf
inc
fmuls
mov
pop
push
mov
lea
jg
add
pop
sti
into
insl
cs
push
mov
add
mov
sub
pusha
cwtl
aas
inc
ljmp
movsb
movsl
icebp
and
mov
ret
lea
decl
pop
test
inc
cwtl
mov
push
arpl
scas
mov
clc
jae
ret
push
sub
dec
ljmp
inc
push
mov
clc
out
pusha
aam
sub
out
sbb
int3
jp
push
insb
data16
mov
add
or
into
pop
mov
mov
movsb
mov
sbb
sub
jle
sub
mov
out
mov
mov
add
es
cmp
add
sbb
dec
dec
iret
out
shrb
cmp
mov
cmp
test
jb
jmp
jo
jp
mov
cs
mov
movsl
push
push
cmc
sbb
xlat
cmp
sahf
pop
push
lcall
mov
add
and
popa
int3
xchg
loope
cmp
repnz
xchg
ror
mov
sbb
std
repz
and
scas
std
in
adc
jns
add
mov
pop
addl
jmp
jp
mov
pop
jb
insl
mov
pop
je
jns
sub
or
jbe
rorl
test
jmp
inc
ss
mov
adc
add
mov
pop
test
mov
test
add
les
jae
jbe
sub
mov
imul
or
das
push
xchg
and
aaa
and
and
je
repnz
testl
mov
dec
call
xorb
lods
mov
fdivrs
lods
testb
jnp
xchg
call
inc
adc
dec
pop
add
popf
aad
mov
scas
aad
into
in
mov
das
push
je
sahf
mov
rcrl
outsl
std
ret
icebp
push
add
outsb
jmp
mov
pop
sbb
jecxz
mov
dec
push
jbe
sbb
pop
gs
popf
hlt
pop
cmp
xchg
mov
rorl
dec
imul
lret
jnp
sar
sbb
and
push
les
out
clc
cmp
xor
sbb
je
xchg
icebp
jge
add
xchg
sbb
jnp
sub
daa
mov
mov
rol
jmp
lret
sub
arpl
mov
cmpsl
dec
shll
ret
cmc
xor
aam
insl
push
pop
loopne
dec
adc
outsl
es
mov
dec
cs
pop
aad
sbb
push
cmp
mov
out
add
xlat
xchg
pushf
adc
rclb
dec
push
mov
and
je
push
cmc
jp
push
mov
fmull
pop
inc
les
and
subl
fcmovnb
xchg
cwtl
sub
xchg
scas
fnsave
loope
inc
add
adc
or
xchg
dec
sahf
insb
cmp
sub
mov
addb
jl
xor
mov
sbb
sti
add
inc
div
cwtl
into
mov
enter
mov
bound
dec
cmpl
sub
lcall
div
mov
inc
or
add
cmpsl
in
xchg
jb
int3
xor
push
ficoms
arpl
add
mov
sbb
adcb
out
mov
in
gs
sub
lods
jnp
xchg
or
lcall
cwtl
jp
sbb
add
repz
add
addl
pop
jae
and
and
ds
scas
out
push
jnp
cmp
push
divb
mov
roll
fisubl
push
fstl
mov
gs
sbb
fistl
insb
or
push
jb
popa
into
rorb
lds
sbb
xorb
and
in
mov
lcall
rep
cwtl
loope
dec
scas
and
sub
push
imul
mov
fisttpll
inc
xor
inc
jmp
mov
fisubl
adc
inc
or
mov
cltd
xchg
pop
cmp
dec
pusha
cmc
fistpl
icebp
adc
leave
popf
dec
lods
xchg
push
cmpsb
mov
stc
mov
repz
xlat
int
outsl
cmpl
pop
and
fmull
clc
push
push
cld
inc
jmp
jb
xchg
push
fucom
sti
rorb
inc
sbb
pop
dec
in
shlb
adcb
xchg
or
xchg
push
andl
movsl
in
sbb
sbb
dec
push
adc
jnp
jae
call
push
cmp
adc
push
sbbb
push
pop
aaa
jl
push
mov
cmpl
push
jne
into
das
push
cmpsl
mov
and
jmp
xchg
out
sub
roll
dec
jb
cmpsl
push
jbe
mov
jge
outsl
sti
xor
jae
mov
jg
daa
lds
les
scas
int3
pop
dec
repz
adc
ja
aas
and
les
mov
jnp
popf
mov
lock
push
xlat
iret
outsl
loopne
mov
xor
add
sbb
pop
adc
cltd
pusha
xchg
sbb
mov
ljmp
daa
sbb
dec
push
lock
dec
cmp
movsb
sub
pop
pop
push
push
movsl
divl
mov
mov
call
jno
sbb
test
mov
cs
test
mov
fldt
xchg
inc
fstl
arpl
add
dec
daa
mov
adc
addr16
aaa
push
shrl
xor
leave
inc
jecxz
lret
std
fcoml
sbb
iret
cltd
push
out
sbbb
arpl
stos
sub
fidivrs
cli
loopne
mov
or
insb
scas
xchg
push
das
jbe
pop
pop
pop
andb
xor
dec
pop
inc
lret
hlt
mov
test
inc
xchg
push
mov
subl
enter
jmp
in
adc
adc
dec
es
aas
andl
or
pop
repnz
mov
dec
pushf
xchg
movsb
inc
ds
adc
sbb
test
cmpb
repnz
pop
xchg
pop
je
pop
jg
addl
mov
sub
xor
add
sbb
lds
ret
scas
dec
inc
fnstsw
fcoms
cmpsb
ret
test
jne
jno
iret
or
and
cmpsl
inc
inc
mov
mov
addl
jb
mov
mov
loop
add
stos
and
push
lock
hlt
addr16
jnp
xchg
test
ret
mov
inc
outsl
divb
insl
out
xor
shl
popa
or
add
inc
mov
int3
cld
sahf
mov
dec
cltd
out
ljmp
and
adc
scas
jecxz
and
and
mov
cmp
push
roll
cmp
mov
xchg
loop
pop
jnp
ljmp
pop
lds
jge
and
jae
gs
stc
sbb
insb
jg
hlt
notb
addr16
cmp
inc
movsl
ret
cmpsl
jge
sti
mov
and
and
int
daa
aaa
pop
cld
pop
flds
sbb
aas
subl
or
mov
popa
or
sub
flds
inc
sub
stos
enter
push
outsb
mov
hlt
addr16
ds
or
dec
mov
mov
sbb
repz
arpl
int3
insl
adc
out
jnp
subb
fs
bswap
adc
arpl
mov
cmp
stos
loope
pop
outsl
mov
jo
sahf
sbbl
loopne
cmp
jo
xchg
sbb
jp
add
push
or
cmpb
cltd
and
mov
clc
sub
fisubrl
aas
jne
sbb
lea
mov
jp
dec
je
cmp
push
push
pop
mov
ja
pop
call
lcall
xchg
xchg
inc
add
push
clc
mov
ja
mov
jnp
mov
out
sbb
jne
or
orb
pop
pop
sahf
ja
sar
insb
cmpsl
les
test
ficompl
subl
in
and
out
jmp
or
movsb
xor
mov
jnp
sub
xchg
pop
stc
fwait
dec
and
pop
stc
xchg
mov
jbe
mov
into
sub
pop
in
popf
sbb
subb
fisubl
push
mov
mov
mov
jl
add
nop
aas
call
in
push
mov
arpl
and
out
lahf
inc
push
scas
test
cmp
aaa
mov
ret
and
lods
sarl
fsubp
js
scas
inc
xor
leave
pop
cmc
adc
push
xchg
mov
lds
pusha
addr16
dec
and
cmp
dec
add
stc
cld
movsb
push
pushf
xchg
push
sbb
je
js
repz
mov
and
sti
sbb
js
jne
scas
cwtl
outsl
mov
ja
jecxz
or
adc
imul
loop
popa
jne
dec
xchg
test
jns
xor
cmp
dec
jge
mov
stos
out
jno
pusha
mov
adc
nop
jae
mov
or
cmp
add
jl
call
shrb
lea
rorb
jne
nop
pop
lcall
inc
lcall
jns
inc
movsb
sbb
mov
std
aam
pop
mov
jb
xor
xchg
lock
cmp
rcrl
leave
aad
das
xor
mov
fidivs
and
adc
adc
xchg
mov
mov
hlt
loopne
out
scas
push
cmp
faddl
sbb
xchg
pop
jp
cmp
das
cmp
cmpsb
insl
pop
mov
fbstp
cmpl
fldt
stos
xchg
sbbl
les
clc
outsb
es
scas
sahf
mov
movsl
mov
rorb
gs
out
sahf
dec
loope
dec
in
fists
push
aas
clc
out
pop
mov
test
je
into
dec
ret
sub
push
sbb
push
mov
inc
cmp
xor
add
mov
inc
stos
popa
cmpl
and
je
iret
mov
push
divl
push
or
cmp
sbb
jecxz
loop
pop
mov
dec
and
lods
sbb
rorb
xchg
roll
inc
stos
nop
xchg
js
notb
nop
popl
fldenv
cmp
push
icebp
dec
shrl
ds
inc
inc
mov
pop
push
cmpsb
cmp
push
cmpsb
jp
lea
in
push
iret
sub
loopne
xchg
cmp
xchg
inc
cwtl
fs
jecxz
push
scas
adc
ljmp
mov
sahf
clc
jmp
mov
in
mov
xor
filds
dec
aam
in
pop
and
mov
mov
mov
ret
mov
aas
jge
mov
ret
mov
push
and
lds
jns
cmp
int
jmp
mov
pop
add
add
jo
mov
lods
aaa
mov
jmp
xchg
out
jmp
fcomps
cmpsb
jl
call
hlt
into
push
sbb
pop
xchg
repnz
movsb
mov
scas
into
push
and
inc
js
mov
add
jo
adc
out
sbb
int
sbb
adc
aas
in
dec
aad
mov
icebp
and
jecxz
mov
mov
cmpsb
push
push
in
inc
xchg
push
or
ret
pushl
mov
js
and
fcomps
ljmp
dec
aaa
sub
mov
dec
js
mov
out
aad
out
jl
dec
mov
jns
sub
lods
add
fsubrl
insb
outsb
dec
cs
mov
scas
dec
or
test
scas
push
adc
ret
push
sub
mov
push
lods
xchg
loope
add
xor
cmp
negb
xor
mov
push
mov
lds
and
ds
out
xchg
or
ret
push
push
cld
mov
mov
mov
shll
out
andb
sub
aas
sbb
sbb
loop
or
xchg
inc
mov
enter
loope
cmpsb
or
sub
xor
or
ret
mov
or
and
pop
mov
fucom
pop
loope
sub
mul
add
call
ja
iret
out
bound
pop
pop
lock
inc
xor
rclb
lods
fadd
jmp
rclb
push
mov
fcmove
sub
xorb
hlt
ficoms
shl
int3
aaa
les
jecxz
lret
nop
fs
mov
xchg
cmp
pop
bound
jge
push
xchg
add
les
sub
sub
insl
jae
fcomps
adc
imul
pop
fcmovne
lret
dec
or
mov
xchg
and
fiadds
or
shll
sti
outsl
xchg
aam
ss
daa
xchg
imul
pop
je
jae
outsl
fidivs
lea
push
notl
inc
call
and
enter
sbb
scas
and
jo
jbe
inc
xor
xlat
es
add
fwait
sbb
int
pop
subl
pushl
add
pop
xor
push
mov
mov
stos
dec
push
rorb
push
int
sbb
mov
dec
cmp
mov
lock
fwait
pop
out
mov
or
xchg
sbb
jecxz
out
loopne
fdiv
xchg
sub
jo
rcll
xor
lods
ret
push
inc
push
enter
inc
adc
je
cmp
mov
or
mov
mull
sahf
fsubrs
xor
adc
and
sub
pop
push
fadds
jno
hlt
inc
push
xor
jg
sbb
mov
xlat
or
adc
cld
dec
pop
fistps
xor
sub
cltd
pop
add
push
xchg
jne
xor
jbe
jnp
inc
ret
outsb
clc
std
cmp
pop
mov
addr16
inc
call
add
out
sbb
add
hlt
sbb
push
sti
mov
push
js
fimuls
pop
mov
xorb
sbb
push
pop
jecxz
sbb
aam
cmp
mov
scas
in
sti
cld
jg
adcb
inc
cmpsb
mov
xor
repz
xchg
adc
shlb
pop
cmp
push
pop
xor
jbe
out
push
dec
mov
lods
lods
insb
adc
add
mul
pusha
scas
sbb
sbb
out
rorb
add
push
andb
pop
scas
cltd
aas
repz
ja
outsb
add
dec
lea
cmp
and
cmpsl
andl
mov
in
subb
je
in
pusha
add
adc
push
fcmovnu
int
rclb
push
cs
pushf
pop
add
push
or
rcrl
jmp
sbb
fcoms
add
adc
add
xchg
pop
xchg
arpl
pop
ss
push
pop
stos
or
dec
les
jg
dec
pop
lahf
lods
xchg
imul
xor
xchg
pop
pop
jl
add
icebp
cmp
add
cmp
ds
daa
into
loope
push
mov
fwait
push
and
lds
sub
adcl
stos
pusha
cmc
fwait
out
ret
adc
stos
jecxz
add
cmp
xchg
sbb
popa
scas
fcom
lods
sub
dec
xchg
jecxz
jo
negl
movsl
cwtl
jp
mov
cmp
out
imul
cmp
cwtl
xchg
in
xchg
adc
enter
sti
pushl
ds
sahf
outsb
inc
rclb
pop
lret
adc
les
dec
pushw
inc
pop
loopne
push
inc
cmp
cmp
arpl
das
cmpsl
cmp
add
js
clc
inc
loop
test
fwait
xchg
sbb
cwtl
leave
scas
pop
out
or
mov
adc
add
mov
jecxz
mov
sub
mov
out
das
mul
lcall
adc
cltd
mov
add
sbb
rclb
pop
fists
cs
cmp
les
icebp
lret
daa
je
jae
push
fs
sub
outsb
and
or
add
movsb
or
notl
daa
loope
jb
push
sbb
mov
lock
cwtl
and
roll
mov
sbb
push
out
mov
out
std
jns
xor
mov
pop
call
and
sahf
pusha
lods
add
stos
jp
dec
or
rol
push
mov
pop
jns
shrl
into
mov
incb
push
orl
add
xchg
cltd
outsb
mov
daa
jno
mov
shrb
popf
icebp
rclb
xor
movsl
lret
aad
dec
jle
jo
mov
outsl
jl
sub
pop
lret
jmp
mov
aaa
scas
cmc
loopne
xor
mov
stos
int
sub
inc
popa
fwait
je,pn
aas
les
clc
in
sbb
dec
jge
push
adc
pop
mov
outsb
xchg
cmp
repnz
and
dec
push
pop
xor
cltd
jae
pop
dec
subb
daa
nop
imul
fcmovnbe
stos
das
arpl
stc
frstor
mov
push
inc
jle
mov
mov
xchg
into
and
cmp
jmp
fcmove
clc
inc
pop
or
push
mov
pop
push
pop
mulb
adc
shl
hlt
and
inc
scas
lods
f2xm1
je
jne
jecxz
push
xchg
lods
lds
xor
mov
jg
xor
iret
sub
ret
in
call
movsb
dec
popf
push
and
repz
sbb
mov
sub
push
ficompl
jnp
sub
fucomi
sbb
and
xor
push
push
jnp
jge
jae
lock
stos
cmp
aas
inc
jb
and
das
adc
shlb
sub
xor
xlat
shrl
adc
pusha
and
push
mov
pusha
xchg
loopne
adc
mov
xlat
lods
pusha
jae
sar
add
add
ljmp
jg
add
mov
cmpsl
adc
jg
jge
ja
xchg
enter
jg
hlt
test
subb
mov
xchg
mov
mov
sub
jbe
xorb
dec
pop
jae
push
sub
adc
mov
les
imul
imul
inc
aam
xchg
or
jno
push
lret
push
inc
xlat
fs
jns
test
std
xor
dec
divb
aad
popf
neg
call
mov
pusha
sub
add
std
jb
push
hlt
xchg
mull
xchg
sub
mov
xor
imulb
adc
cmp
scas
jle
and
jg
std
ror
pop
rcrb
adc
add
lea
popa
xchg
loop
xor
push
popa
subl
sbb
and
mov
in
cli
inc
mov
scas
pop
iret
add
jno
lea
clc
pop
inc
push
cmpsl
lds
cld
pop
xor
adc
shrl
add
es
mov
inc
loopne
cmpsb
dec
andb
push
fldcw
or
loop
cmp
and
jbe
dec
jo
adcl
mov
bound
sbb
sbb
adcl
mov
pop
push
xchg
push
adc
ret
mov
push
mov
scas
in
inc
cmpsl
cmpsb
ret
mov
inc
jns
cmp
mov
pushf
jae
pop
inc
or
and
fistpll
mov
inc
xor
nop
and
mov
fiaddl
sbb
out
fnsave
push
dec
add
inc
cwtl
sbb
mov
push
fdivr
pop
into
stos
add
rolb
aas
mov
int
sub
sbb
sbbb
jge
in
rorl
insl
lret
movsb
inc
movsl
adc
leave
sbb
mov
sub
ljmp
lret
in
cwtl
mov
add
leave
mov
xchg
add
push
push
mov
dec
pop
cld
cld
loop
mov
add
xchg
fistpll
fs
mov
and
testb
ret
adc
xlat
mov
mov
repnz
ficomps
cltd
jbe
dec
je
aaa
out
fadds
clc
or
das
pop
mov
sahf
inc
or
fs
js
jbe
movsb
std
jno
insl
fnstsw
repnz
jp
xchg
sbb
loope
adc
jo
sbb
jo
lret
cmpsb
adc
shlb
jl
inc
xchg
push
iret
push
adc
mov
add
mov
adc
and
lea
adc
gs
sub
cld
into
inc
loop
into
mov
pop
insl
or
sub
cmpl
add
das
dec
mov
imul
sbb
inc
or
fsubrl
in
and
rcll
jns
push
pop
jo
in
iret
jae
sbb
cmp
ret
in
mov
cltd
mov
cmpsb
pop
or
test
add
filds
cmp
or
cmpsb
add
sub
aas
insb
insb
cmp
nop
bound
adc
jle
fmulp
imul
repz
jb
scas
pop
sarb
imul
jno
sub
mov
je
sbb
cmc
aas
mov
inc
mov
out
xchg
cmp
les
pusha
add
repz
jmp
loope
xor
loop
insb
xor
pusha
icebp
cmp
xchg
xor
out
dec
mov
dec
inc
xchg
hlt
cmp
movsl
jle
sbb
add
movsl
xchg
test
std
jbe
push
and
mov
out
push
sbb
mov
jl
fcoms
aas
pop
dec
cwtl
fcmovne
push
test
xor
dec
fucomp
jp
and
inc
aad
test
into
push
cwtl
pop
add
pushf
adc
pop
stos
inc
lcall
cmpsl
sbb
or
repz
std
sarb
shlb
dec
xchg
enter
mov
push
jns
ror
pop
jg
push
sbb
loope
outsb
shrl
jecxz
mov
cmp
cmp
or
lret
lds
or
pop
lds
xchg
test
inc
ja
mov
cmc
jne
mov
call
movsb
fsubrl
xcrypt-ofb
cmpsl
in
mov
mov
pop
push
sbbl
mov
dec
pop
lock
test
add
mov
add
dec
mov
test
pop
push
ds
sahf
add
cmpsb
in
icebp
mov
jl
shrb
adc
dec
loope
xchg
or
call
ds
testl
adc
jle
repnz
dec
nop
dec
mov
and
add
xor
add
mov
push
cmpl
stos
cmp
push
cmp
pop
adc
ljmp
or
insl
dec
sbb
icebp
sahf
and
mov
adc
lods
je
lret
mov
stc
dec
rolb
fwait
inc
shr
inc
negb
mov
outsb
add
jp
mov
mov
or
mov
sbb
mov
inc
lret
fnstenv
mov
cli
push
xchg
xchg
addb
ds
xor
xchg
jmp
shr
cs
xor
fnstenv
xchg
push
or
or
loope
cmpsl
pop
pop
out
fidivl
and
sub
cwtl
out
das
mov
bound
shrl
pop
jae
fsubrl
mov
xchg
push
pop
ljmp
movb
mov
imul
das
test
jae
pushw
in
je
dec
adc
inc
inc
fldcw
out
in
pop
mov
outsb
push
scas
popf
ret
cmpsb
cmp
adc
and
and
mov
rclb
shlb
imul
adc
stc
movsl
mov
lret
jb
iret
cmp
repnz
dec
jecxz
pop
mov
and
pop
sbb
mov
push
xor
push
cmp
fisubs
jne
and
sti
loopne
movaps
stos
ljmp
push
mov
clc
push
mov
sub
xchg
addr16
adc
out
lods
mov
mov
jne
jecxz
jo
inc
fiadds
mov
adc
xor
xor
stc
dec
mov
sub
enter
dec
divl
or
shlb
dec
inc
inc
testb
mov
pop
push
or
jns
push
mov
jne
cmp
repz
jge
lahf
xchg
and
cmp
jmp
dec
xor
and
nop
mov
inc
out
bound
outsl
xchg
dec
imul
pop
bound
inc
clc
movsb
cmp
test
push
daa
leave
rcrl
sbb
clc
pop
pop
push
or
mov
lcall
stos
jno
aas
aas
mov
jo
fstl
push
adc
aas
push
jns
push
mov
out
xchg
xchg
out
dec
mov
mov
mov
lahf
ljmp
xor
inc
xchg
sbb
sub
dec
jne
xor
popa
cmp
mov
movsb
add
add
mov
sbb
bound
sub
je
cmp
or
xor
cmpsl
pop
jne
fsubrp
xor
sbb
out
popf
sbb
cltd
loopne
sub
sbb
inc
mov
xchg
sub
and
fstl
ret
pop
lods
jo
fcoml
out
jecxz
xlat
cmp
xchg
push
outsl
mov
xchg
jo
imul
test
les
adc
leave
adc
mov
cltd
xchg
adc
icebp
aas
dec
call
imul
jl
mov
test
shlb
adc
icebp
test
clc
icebp
stos
inc
mov
ljmp
mov
gs
movnti
xchg
push
and
outsl
lcall
xchg
sub
push
jg
jp
ror
sbb
jp
jnp
pop
sub
jns
aas
push
ret
adc
bound
fstpl
iret
negl
jno
pop
push
rorl
push
dec
imul
xchg
test
lahf
inc
dec
add
mov
cmp
xor
nop
push
nop
pop
and
inc
xchg
loopne
mov
or
ljmp
cli
mov
addr16
sub
daa
das
inc
movsl
insl
mov
and
in
push
sahf
test
pop
js
insl
inc
xchg
cs
push
push
pop
adc
shlb
or
and
jge
sahf
xor
jecxz
add
lds
mov
inc
pop
ret
int
aas
mov
sbbl
stos
testb
jmp
fs
popl
jno
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
xor
add
add
imul
add
mov
mov
mov
cmp
jb
mov
mov
xor
add
imul
mov
xor
add
or
mov
xor
add
mov
xor
add
mov
lea
jmp
mov
mov
xor
lea
mov
jmp
mov
mov
xor
lea
lea
xor
cmp
jne
decl
jne
mov
mov
mov
xor
mov
xor
mov
xor
mov
mov
xor
mov
mov
xor
add
pop
pop
pop
leave
ret
xor
ret
push
mov
sub
andl
mov
inc
mov
cmpl
jg
jmp
pushl
push
pushl
pushl
call
cmpl
jb
movl
sbb
push
add
movl
xorl
mov
xorl
push
sbb
mov
orl
xor
adcl
push
mov
orl
add
andl
mov
mov
test
movl
je
mov
and
mov
mov
adc
mov
mov
mov
andl
mov
inc
mov
cmpl
ja
jmp
push
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
xor
sbb
add
mov
mov
sub
mov
xor
and
add
mov
mov
xor
andl
jmp
xor
or
inc
mov
cmpl
jae
cmpl
ja
jmp
push
push
pushl
push
call
cmpl
jne
mov
inc
mov
jmp
add
movzbl
sub
mov
sub
mov
not
xor
add
sbb
mov
decl
sub
lea
sbbl
xor
addl
xor
cmp
movl
je
addl
mov
subl
xor
add
movl
cmp
movl
jne
pushl
subl
call
mov
sub
mov
and
mov
xor
subl
add
cmp
je
adcl
pushl
andl
pushl
andl
call
and
mov
movl
cmpl
je
cmpl
ja
jmp
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
mov
addl
xor
subl
add
movl
cmp
movl
je
mov
mov
xorl
mov
adc
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jbe
jmp
push
pushl
pushl
pushl
call
cmpl
jne
mov
inc
mov
jmp
mov
add
andl
mov
mov
decl
mov
andl
add
andl
mov
movl
cmpl
je
cmpl
jle
jmp
pushl
call
cmpl
jne
xor
xor
dec
mov
mov
dec
mov
jmp
mov
or
mov
sbbl
add
movl
mov
jmp
mov
or
mov
mov
add
add
mov
mov
mov
xor
add
movl
cmp
je
movl
jmp
mov
mov
xor
add
cmp
mov
je
mov
xor
add
cmp
je
lea
push
pushl
pushl
call
mov
mov
xor
add
cmp
je
mov
jmp
cwtl
mov
cmp
mov
adc
ljmp
jnp
insl
popf
pop
push
fbstp
fwait
scas
jmp
adc
je
adc
jmp
add
dec
ret
cmc
es
insl
add
cmpsb
adc
aad
pop
lods
mov
lods
push
lahf
cmp
inc
insb
jns
lret
jb
mov
loopne
inc
je
scas
rcr
xor
jmp
inc
jmp
push
int3
push
sub
test
fistpll
scas
dec
adc
and
in
xchg
pusha
js
mov
cmp
fmul
iret
enter
jo
lret
mov
add
addb
insl
dec
inc
adc
push
hlt
or
mov
inc
dec
fwait
mov
bound
loopne
enter
int
jbe
mov
les
dec
push
mov
mov
inc
mov
in
sub
ds
cld
test
in
imul
daa
fnstsw
xor
inc
inc
sub
mov
cmp
flds
jmp
imul
inc
inc
mov
lret
inc
cli
adc
jp
shl
adc
mov
jno
adc
loope
test
mov
or
gs
xlat
mov
out
sub
cmp
push
and
mov
xchg
fnstsw
jno
lret
mov
loop
jne
jbe
pushf
fs
mov
lret
xor
pop
test
adc
cli
lret
jle
cmp
in
dec
push
mov
insl
adc
pop
imul
ds
or
mov
gs
xorps
push
push
daa
test
lret
es
sarb
mov
push
jl
idiv
xchg
outsb
and
out
inc
scas
mov
sub
out
lcall
add
cs
loop
rorb
jae
and
es
and
call
test
fldl
mov
ja
add
dec
fwait
jp
aaa
add
jecxz
ss
test
inc
test
lock
sbb
cs
adc
push
mov
out
xor
sbb
lock
mov
xchg
jno
dec
push
inc
mov
ljmp
cmp
pop
shrl
roll
dec
inc
rcr
push
dec
add
sub
ss
push
xchg
lret
sub
mov
mov
insb
jno
dec
add
in
pop
xchg
add
dec
push
jl
fisubrs
push
lods
add
add
cmp
mov
insb
inc
mov
lds
jnp,pt
daa
lret
push
mov
cwtl
lcall
jle
cmp
addr16
rcrl
xorb
push
inc
out
ret
mov
mov
shrb
lret
out
sub
cmp
adc
fmuls
xor
mov
push
xchg
testl
sarb
pop
push
mov
mov
mov
push
daa
int
and
jnp
cmpsb
lds
movsb
loop
sbb
daa
push
fstpl
mov
shrd
js
popf
je
and
xchg
pop
xchg
lahf
js
or
fidivrs
mov
mov
and
push
and
xchg
add
out
adc
adc
jo
cmp
cld
mov
mov
js
inc
aad
sbb
push
call
dec
cmpsl
push
call
mov
stc
xrstor
std
js
insb
insl
mov
inc
movsb
pop
inc
sbb
cmp
das
pop
lret
ficomps
aaa
sahf
add
test
inc
pop
aaa
insb
add
xor
insl
jle
decl
push
mov
std
inc
cwtl
aam
and
push
push
sub
roll
cmp
xchg
movsb
inc
pop
push
sarl
ds
xchg
mov
call
in
into
cli
jnp
jmp
dec
xor
and
out
imul
sbb
sub
mov
add
pop
sbb
divl
iret
lds
in
jle
ds
fidivrl
ret
rclb
pop
popl
outsb
nop
lahf
mov
enter
mov
mov
stc
fistpll
mov
into
sub
or
bnd
adc
inc
or
repnz
arpl
idivb
in
in
je
or
call
call
sub
lods
and
clc
adc
mov
call
pop
and
add
rcr
fsubl
sub
sti
add
cld
xor
jl
add
into
cmp
pop
cld
mov
mov
aam
push
jb
dec
aaa
lea
mov
push
cld
shrb
movsb
loopne
push
add
flds
pop
in
pop
xchg
xchg
cli
test
stc
xor
push
out
or
xchg
out
addr16
adc
test
xchg
int3
js
push
gs
es
inc
inc
add
ficoms
sbb
daa
mov
imul
and
mov
sbb
cs
mov
xor
mov
ficoml
inc
arpl
add
mov
jecxz
sbb
pop
mov
mov
xchg
adc
xor
mov
stc
rclb
sahf
in
mov
popf
imul
ljmp
xor
push
add
adc
out
shlb
repnz
hlt
nop
xor
add
hlt
imul
mov
insl
lcall
pop
loopne
sarb
sbb
pop
push
jae
movsb
lods
loop
cs
mov
mov
in
sub
adc
insl
jbe
cs
scas
jmp
aaa
fldenv
out
xchg
lock
cwtl
nop
xor
sbb
loop
jae
lcall
sbb
hlt
pop
shl
mov
push
aaa
mov
or
lcall
or
pop
je
jo
dec
jl
subl
stos
data16
lcall
dec
adc
fmulp
mov
hlt
stc
scas
out
inc
pushf
xchg
loop
xchg
sub
push
movsb
and
jg
sbb
adc
inc
mov
das
mov
and
outsl
mov
cmp
push
push
outsl
mov
lock
dec
call
mov
cltd
dec
mov
pop
inc
push
pop
outsb
mov
jns
mov
mov
sbb
fld
jbe
scas
push
fnstsw
sbb
cmp
aaa
loope
imul
jnp
repz
xchg
jmp
jne
iret
jle
in
mov
pop
push
fldl
ljmp
mov
loop
lods
fdivs
int
ret
ret
sub
pop
ret
dec
scas
mov
lods
push
push
lahf
cmc
in
out
cltd
xchg
lods
pop
int3
xchg
subl
mov
dec
xor
imul
sti
add
inc
je
xchg
out
out
cli
mov
lret
pop
loope
js
fiadds
xor
sbb
sub
and
out
xorb
jmp
mov
add
test
fldt
mov
cwtl
out
std
fildl
inc
cmp
mov
mov
movsb
sbb
out
bound
cld
adc
dec
repnz
cmp
mov
dec
testb
loopne
enter
mov
mov
mov
add
and
jo
cmp
mov
ss
sub
loopne
jo
call
pop
out
sub
sbb
cmpsl
mov
lcall
jno
mov
scas
inc
dec
dec
cmp
jae
xchg
push
xlat
ss
push
lret
aad
es
dec
aas
xchg
sbb
inc
jns
xchg
ljmp
out
push
aaa
shll
sub
out
into
test
cmpsl
xor
sti
in
out
cmp
sbbb
mov
adc
adc
dec
push
aaa
outsb
jae
les
and
hlt
dec
cltd
xchg
xchg
xlat
in
adc
push
mov
in
repnz
inc
xchg
fwait
outsb
pushf
in
hlt
imul
out
into
pop
fidivrl
fcom
sub
sbb
leave
in
ret
repnz
shlb
dec
mov
add
sub
shr
mov
sub
cltd
cmp
jg
test
iret
cmp
cmp
mov
cmp
in
push
les
in
pop
mov
lds
add
jo
lret
fdivrp
xor
sbb
push
idivb
inc
cmp
push
data16
in
jne
fcomip
test
ds
pop
cli
cmp
mov
popa
and
xchg
xchg
cmpsb
mov
inc
std
mov
jb
lods
rclb
out
inc
cmp
or
cltd
lea
sbb
mov
xchg
in
leave
in
adc
pop
aam
adc
icebp
outsl
lds
mov
push
aaa
rcr
push
push
ret
sbb
std
add
cmp
cmp
fsubl
add
mov
push
test
loopne
xor
nop
mov
or
jo
pop
ljmp
cmpsl
imul
shl
enter
pop
inc
inc
jbe
daa
fimull
je
inc
test
sub
aaa
mulb
cmp
aad
in
pop
and
pop
push
inc
mov
stos
mov
dec
hlt
xchg
rcrl
xor
dec
sub
mov
cmp
in
test
popa
insl
int3
test
je
cltd
mov
add
aas
pop
sti
jnp
sbb
jle
cwtl
push
insl
imul
sarl
sbb
fcompl
and
mov
bnd
push
mov
push
imul
addr16
loope
sahf
mov
add
sub
or
pop
add
fdivrl
inc
push
aaa
pusha
lds
dec
fildl
xor
cmc
cmp
mov
repz
jo
add
jle
xchg
xchg
sbb
int
jecxz
je
push
aad
or
cmp
out
push
inc
fndisi(8087
and
dec
dec
cs
cmp
pop
out
call
js
nop
jbe
lock
dec
repz
outsl
mov
xchg
sahf
ja
in
shrb
negl
clc
jae,pn
mov
xchg
sub
jo,pt
cmp
pop
icebp
and
lods
idiv
add
test
data16
or
pop
add
outsb
lret
je
sti
idivb
sub
insl
cmp
es
jp
negl
mov
push
xor
mov
push
and
jecxz
jle
push
sbb
fildll
xor
xchg
mov
in
push
jo
add
or
clc
sahf
pop
ja
into
shl
in
adc
test
jns
cli
sbb
enter
and
lods
fwait
add
js
gs
jmp
xor
pop
gs
push
jg
xchg
add
test
lods
xor
popf
enter
jbe
sahf
mov
or
sub
dec
leave
jle
shrb
pop
jmp
sbb
sub
and
cld
jp
mov
mov
into
add
mov
insl
ret
or
sarl
lods
cmc
in
mov
ror
xor
mov
aad
xchg
out
sub
dec
pushf
lret
fistpl
jne
sahf
or
gs
or
and
outsb
jle
jge,pt
fiadds
imul
stos
clc
mov
aad
xchg
sbb
jp
dec
add
and
hlt
addr16
mov
pusha
jmp
iret
in
insb
sub
inc
sbb
loop
inc
andl
repz
fcmovbe
or
test
sti
ficoms
xchg
push
fwait
into
leave
adc
sub
inc
mov
inc
ret
mov
sub
pop
aas
inc
xor
mov
sbb
push
mov
loop
popf
mov
and
add
rolb
xchg
pop
aad
outsb
add
int
xchg
sub
insl
dec
popf
lods
loope
hlt
adc
pop
in
cmp
sti
jle
in
dec
pop
lahf
sbb
xor
mov
pop
add
pmulhw
popa
out
ss
js
pushf
push
movsb
cmp
stc
out
mov
dec
lock
mov
fs
test
fmull
out
mov
rcl
cmp
fwait
sub
jne
inc
push
sub
cmp
jge
mov
nop
je
pusha
pop
in
push
cmpsl
in
out
cmp
add
adc
out
sbb
jb
cltd
sti
jp
mov
lret
mov
adc
sahf
jne
or
inc
imul
aaa
inc
add
push
shll
cmp
repz
xchg
mov
scas
xchg
test
push
sub
sub
popf
pop
fmuls
inc
and
cmp
lcall
mov
jl
inc
decb
add
jae
xor
adc
jae
gs
aad
xchg
shll
inc
add
xchg
cmp
mov
mov
xchg
pop
inc
imul
add
cltd
push
lods
push
jbe
mov
jecxz
mov
push
mov
push
mov
fs
add
int
in
dec
xchg
jp
adc
ljmp
xchg
adc
lea
xchg
cmp
jae
cmp
or
sarb
mov
jno
and
fs
xor
jns
lret
inc
push
lldt
add
push
nop
data16
cmp
xchg
inc
lret
sbb
addr16
inc
push
stc
test
mov
lcall
fs
xor
jno
mov
xor
jmp
fistpl
cmp
out
push
shlb
and
cmp
cmp
cmovnp
nop
pop
and
loop
cmp
dec
jmp
xor
ja
clc
mov
push
mulb
lock
mov
lea
insb
jne
push
imul
int
xor
xor
adc
repz
sbb
clc
sbb
add
push
cmp
test
push
pop
add
sub
fwait
lods
js
dec
jno
and
mov
jp
jmp
pop
push
xor
mov
xchg
mov
js
jle
xor
insb
add
mov
fs
iret
xchg
push
add
jno
dec
lods
adc
inc
push
lcall
adc
mov
dec
dec
loope
push
out
adc
fsubr
aad
mov
or
jae
jle
mov
nop
nop
mov
add
xor
push
mov
stos
push
push
pop
arpl
sbbb
mov
inc
movsl
aad
scas
rcrb
inc
inc
movsl
icebp
adc
xchg
ret
int
loope
jge
cmp
aad
fimull
fisubrs
jge
push
jmp
pop
dec
loopne
ja
sbb
mov
aaa
push
add
and
mov
add
rcrl
jmp
mov
ja
outsl
add
fnsave
push
xor
subb
adc
mov
and
and
mov
es
add
loop
and
mov
jno
addr16
mov
mov
fwait
iretw
push
loope
xchg
in
iret
xor
fildl
push
arpl
pusha
sub
ret
pop
cmp
sbb
mov
test
shl
mov
push
mov
rcl
std
arpl
fwait
popa
enter
ror
jnp
dec
dec
bound
sbb
cs
cmp
pop
decb
arpl
pop
fdivp
inc
subl
fcmove
push
xor
inc
rcrl
call
imul
dec
gs
xchg
dec
push
mov
dec
jl
fnstenv
pop
mov
ret
fistl
push
pop
jae
imul
jne
mov
fwait
shlb
int
in
add
out
push
les
add
inc
add
add
imul
or
xchg
mov
push
mov
xor
jae
in
mov
testl
cli
xchg
aad
ret
push
push
popf
fcom
xchg
xor
test
cwtl
rol
icebp
sub
push
lods
push
subl
inc
add
mov
loopne
call
stos
add
aam
sahf
or
addr16
mov
lds
mov
mov
cli
fiadds
inc
mov
or
push
cli
pop
ja
loope
xchg
lea
xor
js
out
lcall
pop
jg
enter
ror
faddl
xor
xor
add
inc
icebp
mov
jae
lea
test
ret
dec
cld
movsl
mov
xchg
inc
cmp
inc
mov
add
mov
aad
mov
sbb
lret
jo
ret
xor
xor
jo
lds
mov
sbb
les
lods
shl
or
pop
leave
mov
dec
mov
jae
mov
insb
xchg
bound
push
push
adc
mov
push
repz
pusha
and
cwtl
and
in
out
test
jg
cmpsb
loopne
adc
jne
out
add
fs
pop
cmpsb
push
jg
mov
aad
adc
cmc
mov
pop
outsl
arpl
pop
jb
sub
scas
xchg
add
les
testb
pushf
jg
mov
into
test
arpl
sbb
mov
add
test
xorb
xchg
dec
jg
push
xor
movsl
mov
cmp
out
fnsave
cmc
fs
loope
insb
out
jge
nop
shrb
push
popa
faddp
test
mov
sbb
jle
cmp
inc
jl
adc
out
jae
sahf
js
sbb
adc
in
pusha
jg
inc
pushf
lret
ljmp
loop
cmpsb
cmp
mov
insl
popl
dec
jle
fdivrp
out
fldenv
rolb
add
faddl
cmc
and
jecxz
push
inc
cmp
sbb
int3
daa
outsb
push
add
sub
iret
mov
mov
mov
dec
and
std
jns
jb
jb
neg
push
aad
cmp
sbbl
incl
dec
pusha
sbb
sbb
movsl
fisttpl
les
and
sub
insl
jecxz
lea
fnstcw
cld
dec
push
pop
inc
shlb
or
imul
imul
dec
shr
cs
add
add
xor
and
mov
fistpll
in
cmp
sahf
jle
jmp
test
iret
jle
mov
outsb
push
sub
sub
mov
insl
lds
jns
daa
jecxz
movsl
jae
mov
lret
rolb
outsb
stos
aaa
int3
jo
lea
add
and
pop
inc
cwtl
idivb
cmp
inc
stc
add
xor
mov
jl
xchg
daa
mov
lds
int
jnp
fiadds
add
inc
mov
out
int3
cs
dec
cmp
shlb
pop
pusha
loope
in
mov
test
aad
shlb
movsb
icebp
pusha
test
and
pop
cmc
and
std
mov
pop
test
movb
jl
fwait
and
mov
sahf
leave
mov
loop
ss
hlt
xor
sbb
out
push
into
fistl
mov
js
lcall
xor
mov
mov
push
mov
ret
test
mov
stos
insb
push
fdivrs
xorb
lcall
mov
mov
push
stos
daa
pop
and
std
mov
pop
mov
jle
sahf
dec
or
xchg
lods
dec
test
push
sbb
repnz
sub
aam
out
imul
pop
sub
addr16
daa
xchg
stos
stos
rcrl
aam
mov
push
outsl
or
fsubs
insl
mov
iret
sar
or
insb
fdivr
mov
aam
popf
mov
jl
jecxz
loope
push
arpl
jecxz
shrl
add
in
sbb
popa
jp
xor
push
out
fsubrs
loope
sarb
insb
lcall
cwtl
arpl
mov
lods
push
and
sbb
ret
dec
outsb
out
mov
in
inc
cmp
std
out
mov
fptan
in
in
repz
cmp
pop
loope
mov
nop
cmp
ss
scas
and
data16
inc
push
rcrb
scas
data16
jne
xchg
cmp
cmc
pusha
cmp
fldcw
jb
adc
mov
lahf
imul
lods
mov
gs
add
xchg
subl
jecxz
mov
dec
mov
xchg
xchg
mov
cmc
pop
gs
movsb
stc
popa
sarb
xchg
mov
int
mov
jmp
jl
rolb
stos
nop
mov
aad
mov
sbb
fs
xor
aam
sbbl
imul
outsl
mov
mov
mov
lds
inc
xchg
jno
mov
mov
lock
outsl
pop
sub
xlat
dec
mov
mov
mov
inc
bound
dec
sub
mov
adc
and
adc
lcall
or
daa
mov
adc
stos
cmp
push
loop
jmp
dec
pop
jmp
test
sub
inc
and
aas
pop
lods
xchg
or
ja
dec
cmpsb
sbb
stos
sarl
add
movl
enter
mov
test
push
pop
jbe
cmp
xor
jo
pop
push
scas
fadd
add
nop
jbe
test
inc
addr16
sbb
arpl
adc
mov
or
loopne
popf
mov
xor
shl
daa
xchg
mov
je
addl
hlt
mov
mov
jbe
js
add
ret
add
fidivrl
xchg
repz
lods
inc
and
lret
out
cltd
mov
in
insl
jecxz
pop
popa
insl
ljmp
lds
xchg
jne
dec
pop
vpunpckldq
add
jbe
imul
cmc
mov
mov
sar
inc
cli
mov
mov
jnp
shrl
add
mov
add
cmpsb
nop
push
lock
ja
fnstsw
ret
nop
pop
pop
ljmp
frndint
mov
loope
push
pop
push
sbb
mov
cli
std
rolb
outsb
sub
faddp
add
push
sbb
mov
sbbl
push
dec
adc
call
loopne
adc
popf
mov
pop
sbb
popf
jns
test
push
arpl
shlb
movsl
or
push
icebp
movsb
lret
mov
fldt
jle
in
or
jg
add
ror
and
pop
xchg
mov
xor
sarl
aad
push
dec
insb
and
jnp
add
fmull
test
cld
xlat
sbb
dec
cmp
xor
add
mov
mov
int3
jmp
inc
push
shr
inc
or
sub
xor
aaa
pop
jecxz
sub
js
and
pop
addr16
xchg
out
lock
sub
mov
adc
subl
icebp
mov
lds
notl
cs
jne
test
loope
lret
out
mov
rclb
hlt
movsl
in
pop
adc
jae
sbb
push
push
adc
sub
or
add
fmul
pop
sbb
sbb
mov
jo
cmc
incb
cmp
push
mov
fstp
loop
aas
pop
into
push
sbb
nop
mov
mov
out
lea
push
sbb
push
out
sbb
add
or
mov
mov
jns
imul
cli
jbe
inc
mov
lods
mov
out
mov
stos
test
imul
and
test
in
inc
cmpsb
push
adc
inc
adc
inc
mov
fmuls
data16
jmp
push
fldl
pop
mov
xor
adc
sub
xor
test
xchg
jnp
sbb
hlt
idivl
jmp
jne
rolb
mov
stos
lret
das
mov
repnz
adc
enter
dec
inc
mov
sti
dec
int
xchg
aaa
sub
or
ds
das
add
xlat
out
jbe
add
stc
out
cmp
outsb
or
insb
test
xchg
into
scas
pop
adc
movsb
cmpsl
rcll
mov
ds
stc
sbb
int3
or
dec
stc
add
sbb
sbb
inc
sub
mov
iret
mov
inc
or
jo
push
ret
push
and
dec
js
ret
or
pop
xchg
shl
dec
and
fwait
rcll
xchg
add
cmp
jae
leave
pop
hlt
jp
push
xor
lds
daa
mov
daa
mov
and
inc
sbb
les
add
sahf
test
aaa
sbb
imul
hlt
nop
mov
testl
lea
adc
adc
in
pop
add
sbb
xor
sub
cs
mov
cmp
rcrl
movsl
mov
sar
inc
sub
jp
jns
ret
mov
insb
lcall
shl
lods
and
sbb
scas
inc
cmp
cwtl
aaa
popf
imul
or
dec
push
in
pop
mov
inc
ljmp
test
cmp
test
fmull
in
xor
sub
in
fmull
jo
popaw
xchg
pop
imul
pop
je
leave
ljmp
mov
lods
jae
cmpsl
cmovle
test
imull
fisttps
aaa
jne
mov
add
jecxz
out
lods
sub
stc
xor
dec
add
ss
jae
mov
loop
inc
lds
cmp
jbe
int3
mov
and
subb
sbb
xlat
adc
movhps
std
pop
ret
fisubrs
cltd
add
test
pushl
int
jns
push
bound
stc
pushf
outsl
cmp
mov
pop
jmp
adc
cmpsb
cmp
mov
mov
lahf
in
pusha
icebp
lret
loope
xor
rclb
ljmp
mov
popa
add
or
int3
inc
sub
mov
cltd
js
or
push
sahf
adc
mov
mov
std
pop
pop
push
xchg
sub
scas
leave
das
fistl
popf
mov
lahf
fndisi(8087
and
jb
sub
sbb
scas
xchg
pop
imul
xchg
cmp
jmp
jge
xor
mov
xor
sub
and
pop
add
mov
jns
push
hlt
mov
xchg
adcb
jb
xor
sbb
test
outsl
mov
mov
mov
fiadds
out
xchg
mov
mov
js
xor
or
pop
sub
and
pushf
in
out
inc
and
or
sti
xchg
cs
aam
adc
sbb
jae
lods
je
negb
movsl
dec
cmp
insl
ss
ljmp
xor
xlat
push
loop
inc
and
inc
icebp
loop
push
push
mov
jp
test
push
ss
dec
popa
adc
setbe
or
add
xlat
mov
iret
pop
mov
mov
jne
cmc
push
repz
xchg
dec
mov
push
jmp
push
loope
mov
pusha
dec
or
pop
call
xchg
push
push
hlt
pop
imul
pop
scas
ror
pop
dec
in
sbb
mov
js
xlat
addl
inc
cmp
addr16
aad
push
nop
fsub
dec
movsb
shll
cmp
andl
cmp
call
bound
mov
aam
sub
movsl
lea
dec
loop
inc
jmp
out
cmp
add
push
push
ret
cmpsb
nop
pop
jge
pop
push
js
jno
mov
movsl
ljmp
push
stc
std
shll
dec
call
add
lea
les
bnd
data16
movsb
pop
cmpsb
xor
or
lock
xor
cltd
mov
in
insl
cmc
and
les
inc
pop
ss
or
pop
jmp
jg
push
out
add
sbb
push
add
push
xchg
cwtl
jne
push
push
xchg
popa
jbe
out
cmp
add
cmp
fs
aad
ss
pop
mulb
mov
jle
jg,pn
mov
sbb
mov
repz
je
or
push
sub
fisubrl
fs
sbb
dec
mov
lahf
pushf
sub
lcall
mul
xchg
cld
addr16
fwait
arpl
arpl
pop
adc
pop
fldcw
adc
push
fs
push
inc
lea
pop
push
aaa
sti
cld
in
outsl
mov
fwait
sbb
cmp
lods
or
outsl
gs
aaa
cmp
add
testl
mov
inc
xor
test
cmp
xchg
jmp
inc
lods
xor
sub
dec
mov
popf
scas
aad
xchg
jg
fisubl
ror
adc
and
pop
mov
and
filds
jp
push
mov
add
push
xor
mov
adc
push
cwtl
xlat
cmpsl
mov
or
in
sub
pop
and
inc
jne
and
push
pop
mov
cmp
repz
lret
inc
aas
and
call
sahf
xchg
stos
jg
mov
stc
jae
sbb
stgi
scas
push
cmp
inc
cmp
sbb
testb
lods
pop
lock
aam
mov
aad
das
jno
movsb
jl
pop
inc
mov
rcrl
mov
leave
push
pusha
loopne
xchg
pop
fstl
enter
adc
cmp
mov
xor
sbb
add
sub
in
daa
dec
jl
fnsave
mov
dec
pop
into
fcmovne
sbb
fxam
imul
repz
sti
jle
cmpsb
es
pop
xchg
mov
and
outsl
lahf
pop
xor
leave
rorb
push
pop
imul
xchg
mov
xor
jnp
mov
pop
inc
mov
ja
adc
nop
bound
mov
adc
fstl
add
cmp
fnsave
mov
inc
lds
push
int3
push
sub
repz
push
add
mov
ljmp
arpl
ror
das
inc
outsb
enter
bound
int3
pushf
and
enter
scas
adc
ret
lcall
sub
jecxz
lahf
or
sub
mov
out
lret
icebp
popa
stos
mov
or
leave
sub
ss
shrb
inc
and
lods
add
and
inc
xor
push
and
pushf
sub
ja
mov
data16
xchg
ljmp
pop
mov
sbb
daa
sbb
mov
sbb
mov
test
sub
outsb
ret
sub
mov
pop
roll
cli
mov
arpl
sbb
xor
pand
cmp
jno
lret
ret
loopne
xor
ja
dec
mov
lea
mov
insb
iret
js
jmp
hlt
call
movsl
push
mov
mov
mov
fldcw
cmp
lock
inc
inc
mov
sbb
dec
imul
inc
outsl
mov
pop
sbb
insb
push
mov
test
repnz
mov
pop
xlat
scas
push
lret
cmp
dec
lcall
jno
mov
stos
cmp
dec
ss
inc
sahf
and
cmp
int3
pop
fs
stos
insb
scas
adc
les
popa
mov
rorb
in
repnz
sbb
dec
and
shrb
cmp
cwtl
mov
sub
jecxz
test
push
enter
mov
cld
cli
lea
movsl
add
out
pop
or
clc
clc
sbb
xchg
add
flds
push
inc
test
xchg
and
mov
jle
stos
outsb
add
cmpsb
and
xor
aam
iret
int3
aad
scas
movzwl
mov
mov
mov
jmp
mov
xor
lea
jmp
mov
xor
add
jmp
mov
add
mov
jmp
cmpsl
fisubrs
jbe
jbe
outsb
xchg
adc
orb
jnp
pushf
jnp
iret
mov
pop
cmp
int
hlt
sub
aas
adc
mov
mulb
in
enter
sbb
int3
fcom
add
adc
mov
clc
std
sub
fcmovnbe
dec
xor
add
popf
repz
xchg
sub
inc
mov
in
outsb
int3
xchg
imul
cmp
fstl
pop
mov
sub
sbb
icebp
mov
fidivl
jmp
fstps
jns
and
mov
loope
daa
inc
xchg
or
jecxz
mov
push
ljmp
fcomi
dec
mov
pop
aaa
hlt
and
add
divb
mov
xchg
jmp
orl
loope
mov
push
pop
xchg
cmc
addl
sbb
mov
sbb
and
call
cmp
sbb
push
lahf
stos
outsl
cwtl
and
ss
int3
fucom
cwtl
or
pop
in
adc
mov
adc
int
cmpsb
mov
imul
ja
divb
sbb
push
sbb
aas
lock
add
ror
fstl
bound
pushf
orl
mov
push
sarl
rcl
mov
xchg
adc
cmpsl
or
ret
pop
ret
xor
cmpb
lret
loopne
sub
adc
cmp
or
cmp
mov
mov
aad
cli
bound
xor
cmpsl
cld
mov
loopne
lea
ds
hlt
mov
sarl
xchg
fstpt
and
pop
daa
lods
or
push
sbb
sub
jnp
pop
out
adc
ss
and
pop
hlt
sub
xchg
jae
lock
ror
outsl
inc
add
xor
lahf
push
pop
rcll
or
ljmp
mov
scas
inc
inc
outsl
jecxz
or
iret
mov
jecxz
cmp
add
cmpsl
inc
xchg
aam
cmp
sti
jle
fcmovbe
push
mov
hlt
push
imul
jge
out
loope
bound
out
dec
into
add
mov
push
rcr
iret
fwait
add
pop
bnd
cwtl
push
sbb
xor
sub
pop
pop
jo
mov
ds
add
xor
fldenv
push
mov
ficomps
mov
pop
cmpl
lds
mov
loope
xor
xchg
data16
int3
xor
addr16
ljmp
sub
mov
jb
xchg
ud2
push
mov
mov
sbb
mov
adc
pusha
and
push
mov
sub
sub
mov
imul
sbb
dec
lds
outsb
mov
out
mov
int
xor
hlt
jp
lret
push
sub
mov
cwtl
lods
stos
mov
push
bound
xchg
cmp
xor
xchg
fbld
jbe
add
xchg
loopne
pusha
xor
push
or
xchg
insb
jns
push
sub
rcl
mov
cmp
push
rcrl
fisubs
push
aas
fmuls
push
sbb
jno
leave
dec
aas
jb
push
mov
je
sub
or
sbb
dec
mov
loopne
fcoml
test
add
ja
inc
aas
jle
mov
jne
jae
add
sbb
push
push
mov
outsb
pusha
push
sbb
jge
notb
jb
xchg
push
shlb
adc
push
or
dec
and
mov
jp,pt
xchg
mov
mov
outsl
inc
push
mov
push
pushf
popf
jo
jg
pop
mov
std
in
or
pop
pop
push
hlt
cmp
pop
ja
push
out
je
push
and
jp
nop
mov
xor
and
push
je
es
roll
add
pop
rorl
scas
popa
xor
xlat
cmp
pop
dec
fisttpl
imul
adc
lods
mov
mov
or
push
fcomp
inc
xor
dec
cld
mov
push
push
lcall
int3
xchg
es
jae
decl
leave
iret
ret
enter
gs
cmpsb
lods
data16
or
outsl
shlb
jmp
mov
add
outsb
mov
jo
imul
mov
dec
addr16
loop
push
add
inc
inc
ret
add
xchg
daa
add
mov
cmp
jmp
inc
mov
pop
bound
fsubs
xor
out
addr16
roll
rcrl
xchg
popa
adc
add
pop
inc
ret
cmp
ljmp
fcompl
and
testl
adc
sub
aas
leave
xchg
xchg
xchg
adc
daa
bound
out
mov
inc
test
fdivp
mov
or
push
jno
mov
sahf
jp
xchg
fwait
rcll
stos
mov
lds
loopne
negb
test
sbb
pop
hlt
xchg
adc
cmp
cmp
or
ret
lret
js
out
fsubr
push
push
orl
xchg
push
push
fstl
in
dec
jb
mov
pusha
sub
movd
cmp
xor
xchg
call
fstpt
mov
adc
dec
into
in
dec
push
ja
das
not
test
fisubrl
jne
pop
ret
and
push
arpl
inc
and
jge
xlat
mov
out
movsl
jmp
fstl
std
adc
daa
cld
adc
mov
repz
and
xchg
jg
cmp
sbb
iret
idivl
mov
mov
pop
cwtl
ret
or
iret
add
or
aaa
xchg
mov
dec
adc
js
sbb
std
add
fnstsw
enter
push
xchg
lret
sbb
mov
or
jle
push
aam
adc
adc
mov
dec
push
imull
adc
fcmovb
cwtl
xchg
cmp
xchg
adc
mov
push
push
out
mov
mov
mov
mov
in
dec
sub
sbb
aas
lods
repnz
mov
mov
mov
inc
cs
or
add
inc
mov
push
dec
xchg
jnp
mov
push
cltd
or
lods
jecxz
pop
xlat
loop
inc
out
pop
cs
push
stos
imul
push
insb
jbe
pop
test
test
std
imul
or
sarb
mov
fwait
xor
leave
sbb
sbbb
ret
inc
push
pop
ljmp
icebp
enter
push
sbb
inc
jmp
mov
cmp
jg
fiadds
adc
test
mov
fnstcw
sub
andb
test
or
pusha
sub
or
mov
js
sbb
stc
and
out
mov
and
test
add
push
pop
mov
dec
mov
mov
push
mov
dec
mov
xchg
lods
cmpsb
aam
call
test
add
cmp
dec
ror
fdivrl
sbb
ret
nopl
les
dec
inc
cmp
xlat
add
pop
mov
jmp
cmp
jecxz
pop
cmc
push
std
int3
mov
cmp
mov
inc
adc
jge
test
push
icebp
jns
jg
adc
xchg
mov
sbb
in
dec
sbb
adc
jl
into
pop
dec
jge
movsb
dec
sub
sub
loop
dec
in
mov
dec
mov
mov
iret
ret
bound
aam
mov
xor
push
ficompl
out
insl
int
xchg
push
popa
test
jmp
cmpsl
sub
and
cmpsb
or
and
loope
sahf
test
es
popf
mov
adc
inc
pop
mov
call
pushf
dec
xor
and
xchg
push
jp
fwait
xor
cmp
lahf
inc
addr16
inc
mov
aam
rcr
outsb
mov
pop
or
test
mov
jl
inc
mov
cmp
push
ret
push
fdivs
in
ret
cmpsl
mov
push
pop
addr16
jbe
pushf
cmp
push
xor
or
sbb
xchg
push
ljmp
popa
xacquire
mov
mov
into
cmpsb
xchg
test
push
mov
pop
fistpl
outsl
inc
jp
cmp
and
inc
clc
out
push
xlat
add
push
mov
mov
jecxz
mov
data16
insl
aaa
mov
sar
jp
sbb
cmpsb
mov
cmp
mov
xchg
mov
aad
jns
fmull
cli
mov
xchg
xor
cmpsb
inc
xchg
rolb
mov
jle
cmp
jae
push
ja
fs
cmpsl
scas
xorl
lock
and
ljmp
push
inc
push
aaa
lods
dec
xor
ret
test
pop
dec
push
cmp
daa
or
push
das
into
iret
jp
lods
scas
stc
push
cld
ret
cltd
cmp
dec
lds
mov
mov
and
cmp
xor
jle
movsb
or
hlt
inc
mov
arpl
repz
fyl2x
dec
out
scas
push
push
gs
dec
ficoml
lea
movb
jp
lahf
es
push
xchg
stc
fwait
sub
pusha
mov
adc
lea
into
addr16
jg
jmp
adc
outsl
std
scas
mov
and
sub
aad
push
pusha
jnp
addr16
pavgw
imul
push
mov
lods
dec
add
or
icebp
jb
sub
repz
xchg
sub
scas
xchg
cli
mov
gs
mov
ljmp
add
jmp
fadds
call
mov
sarb
inc
dec
sti
sahf
cwtl
es
jb
out
push
inc
mov
repz
daa
shrb
lods
pop
add
mov
xor
addr16
les
sbb
pop
cmpsb
ja
fwait
out
mov
enter
je
mov
pop
mov
sbb
or
pop
lcall
push
insb
std
loope
mov
dec
add
adc
test
lock
jbe
inc
in
mov
lock
movsl
or
mov
decl
movsl
out
jno
mov
fldt
and
bound
cmp
clc
mov
in
mov
mov
adc
sahf
je
hlt
repnz
mov
and
lret
sub
nop
jae
pop
jbe
outsb
fsubs
push
lret
jb
iret
xchg
xor
test
fiaddl
aad
pop
mov
test
fimuls
cmp
jecxz
lods
inc
and
xchg
mov
jb
movsb
xchg
fsubs
adc
sbb
into
sbb
sbb
je
mov
out
ljmp
xor
loope
out
push
push
not
cmpsl
cmp
lock
cmp
not
dec
push
mov
and
mov
mov
cmp
jns
sub
arpl
sbb
xchg
ljmp
pop
test
jmp
lahf
push
lods
scas
xchg
jne
lcall
into
out
jae
mov
inc
mov
mov
cld
sub
mov
into
xor
xor
jnp
adc
jno
add
aam
arpl
in
mov
xchg
inc
mov
je
subb
pop
xchg
pop
jg
daa
rcll
lret
ss
in
aam
out
ja
lds
xchg
out
inc
mov
dec
popa
push
jp
cmp
cmp
fmull
stc
std
xlat
add
lahf
xor
ret
ljmp
out
notl
cmc
pop
test
jae
loop
cmp
pop
sub
push
xchg
sub
jmp
popa
push
cmp
mov
subb
enter
xchg
repz
dec
ret
shrl
frstor
push
and
pusha
fsub
mov
test
insb
mov
cmp
aas
addr16
dec
mov
xor
hlt
int3
ja
mov
sahf
pop
and
gs
jl
jne
enter
test
mov
ljmp
push
pop
jg
mov
mov
out
sbb
lret
jg
les
rcll
dec
test
aaa
jge
mov
xchg
dec
frstor
fwait
mov
and
and
fimuls
inc
repnz
mov
pop
push
aam
imul
and
mov
or
mov
xchg
leave
lock
mov
xchg
aaa
stos
mov
jb
mov
clc
xchg
jb
test
in
fs
fnstcw
clc
jne
cli
dec
inc
xchg
fwait
mov
outsb
xchg
ds
push
movsb
movsb
cmp
iret
fiaddl
pop
aas
pop
rolb
adc
insb
mull
pop
scas
pop
jae
sbb
xchg
dec
xor
adcl
mov
xchg
dec
testl
ret
sbb
repz
add
sarb
test
in
cld
test
fs
inc
in
adc
int3
jmp
subb
mov
fisubrl
test
adc
mov
sbb
sbb
repz
pop
leave
mov
xchg
stc
cpuid
mov
sti
pop
xor
test
icebp
or
add
dec
xchg
shlb
push
sbb
cwtl
cmp
iret
cmp
cmp
xchg
sbb
mov
xchg
insb
add
bound
sti
int
repnz
fdivrl
xor
mov
loope
xchg
mov
ja
mov
and
and
ja
hlt
push
mov
mov
push
xor
sub
sbb
jg
pop
sbb
mov
xchg
repnz
pusha
jae
mov
lods
adc
in
push
and
inc
xchg
add
nop
xor
ret
xchg
cmp
cmpsl
jle
js
into
push
inc
sbb
pop
fnstsw
loop
arpl
pop
or
addr16
mov
lods
in
mov
inc
jnp
aad
mov
add
pop
loopne
and
inc
inc
imul
adc
dec
lods
cmpsl
pusha
dec
and
dec
or
lds
imul
mov
sub
jno
mov
pusha
mov
insl
push
adc
addr16
jl
pop
bnd
cmpsl
insb
mov
sbb
mov
dec
enter
fsubrs
and
repnz
test
inc
je
push
js
mov
out
cmp
fst
or
adc
pop
xor
cwtl
in
decl
adc
push
dec
das
in
xor
mov
cmp
jmp
movsl
mov
test
mov
test
out
inc
inc
add
lret
ja
add
xchg
scas
cmp
out
push
pop
lods
push
inc
out
data16
cltd
xor
mov
out
scas
gs
ljmp
negb
lea
pop
sbb
cmc
scas
aam
mov
fcmovu
scas
jb
jae
ja
aaa
cmp
out
enter
std
sbb
fcmovnbe
lods
mov
rcl
ret
ret
jl
cwtl
add
filds
jmp
sahf
je
xor
test
imul
int3
xchg
imul
popa
cltd
pop
out
mov
mov
mov
popf
out
sub
lock
loop
cmp
mov
fmull
adc
inc
int
nop
mov
adc
test
xchg
cmpsb
mov
lds
cmpb
imul
jo
cmp
mov
in
dec
push
leave
outsl
add
xchg
outsb
push
shlb
test
out
mov
outsl
or
ljmp
pop
movsl
or
into
std
add
fiadds
xchg
cli
repz
sahf
push
and
adc
fwait
mov
imul
dec
adc
dec
or
and
hlt
dec
and
int
cmc
roll
add
sarb
push
jge
dec
xchg
test
inc
inc
outsl
inc
and
jecxz
jp
iret
push
popf
xor
rcrb
push
cltd
jge
rorl
les
cwtl
js
dec
xor
mov
cmp
push
jg
and
dec
mov
mov
xchg
inc
pop
hlt
cmp
sahf
jg
repnz
pop
pop
out
push
xor
dec
jae
dec
in
mov
mov
add
out
xor
out
mov
cs
lahf
cli
in
inc
sub
lahf
inc
sub
iret
or
div
mov
sbb
adc
push
xlat
dec
xor
mov
xchg
jge
xor
outsl
jno
xor
out
pop
shl
adc
pop
cmp
and
mov
pop
std
xor
adc
inc
cmp
shlb
aad
inc
dec
imul
mov
icebp
sbb
scas
mov
scas
ds
call
mov
ljmp
cwtl
jbe
outsl
fcmovnb
push
pop
lcall
push
sub
sbb
adc
mov
mov
or
ror
pusha
dec
in
mov
jo
cmpsb
xchg
cmc
pop
xchg
push
mov
cmpsb
mov
icebp
dec
xorl
cltd
inc
dec
out
inc
std
pop
in
cmp
xlat
inc
jnp
js
xchg
push
inc
pop
dec
sbb
mov
pop
jmp
int3
jmp
inc
jl
mulb
cmp
jno
cmp
inc
pop
push
popa
fs
out
xchg
andb
mov
sbb
jns
cmp
xor
loop
xchg
sub
out
shll
mov
lods
adc
xchg
mov
adc
out
adc
pushf
fwait
and
push
mov
cs
fwait
dec
adc
roll
pop
addb
das
sarb
pop
jnp
push
adc
loope
shl
ja
sahf
notl
mov
sti
xchg
in
mov
and
pop
sub
fwait
adc
and
add
or
ficomps
adc
xchg
or
repnz
mov
adc
ficomps
fstpt
pop
ffree
fisubrs
pop
dec
jl
xor
out
ret
test
mov
xlat
fcoms
aam
push
imul
mov
stc
out
icebp
or
cmp
popa
inc
and
cmp
sub
fsubr
mov
insb
ds
js
sub
dec
lock
pop
js
sahf
xchg
hlt
mov
sar
cmpsb
jl
dec
test
je
and
in
outsb
mov
jge
repz
adc
cmp
add
cmpsl
xchg
ret
cltd
aad
adc
fwait
bound
cwtl
inc
hlt
pop
jge
andl
loop
iret
mulb
sbb
cmpsb
inc
jl
cli
add
leave
sbb
dec
ljmp
mov
or
daa
je
clc
lods
jmp
jp
pop
mov
mov
jb
cmp
int3
cli
xor
add
xor
sub
push
push
mov
xlat
xchg
ret
sti
xlat
aas
inc
and
movl
mov
push
cmpl
aam
push
jo
xor
adc
mov
sbb
mov
sbb
mov
xor
ss
jne
std
dec
adc
out
int
fwait
insl
inc
add
adc
sub
cmp
pop
cmc
xchg
push
out
out
inc
mov
jnp
pushf
pop
outsb
data16
fisubl
lcall
fidivrs
imul
pop
rol
inc
outsb
mov
mov
cmp
mov
add
pop
push
cld
movsb
ret
push
stos
pop
push
mov
fidivl
sbbb
xchg
movsb
fisttpll
popf
nop
dec
repnz
gs
scas
fsub
adc
adc
lret
xchg
xchg
int3
insl
movsl
push
jecxz
hlt
and
out
sbb
mov
or
repz
insl
into
jo
push
movsb
and
jp
and
push
pushl
je
and
neg
or
hlt
push
xchg
out
mov
sub
mov
repnz
int
mov
shlb
add
mov
inc
mov
pop
inc
adc
pop
clc
jmp
lods
jle
pop
push
jb
jp
jg
das
pop
mov
lods
sti
shrb
clc
dec
add
out
add
jmp
test
jnp
scas
push
imul
iret
jmp
out
cmp
es
outsb
mov
jb
or
add
repz
sub
gs
lods
xchg
and
popf
mov
data16
es
sbb
stos
inc
test
jo
les
push
mov
fwait
or
pop
out
xor
sub
loop
pop
ja
popa
xchg
mov
int3
dec
jno
mov
test
xor
xlat
inc
nop
push
cmp
jg
sbb
insl
roll
nop
push
ljmp
sub
mov
mov
nop
or
mov
pop
cmp
sub
outsl
imul
jecxz
loope
mov
jg
push
jmp
rcrl
pop
xchg
push
rorl
inc
jo
out
jmp
mov
adc
aaa
xor
inc
stos
lods
adc
mov
inc
mov
outsl
inc
fsubs
xor
test
push
adc
cmpsl
popf
inc
fistps
sub
mov
xlat
jnp
roll
add
add
scas
adc
pop
fs
loopne
sbb
iret
jne
or
repz
adc
cwtl
push
divl
arpl
sbb
mov
mov
into
add
push
lret
cmpsb
xor
clc
fsubrp
sub
mov
lods
inc
fcmove
rolb
xchg
add
add
add
jb
add
push
aas
sbb
cmpsl
inc
inc
mov
xor
add
cmp
jne
frstor
adc
pop
aaa
xchg
imulb
or
push
or
ds
ja
sar
nop
mov
jae
push
pop
fwait
push
and
pop
add
and
xchg
inc
pop
daa
add
fnstenv
xchg
cmp
xchg
push
es
pop
xchg
add
mov
arpl
cmpxchg
push
mov
movl
pop
jb
mov
aam
adcb
cmp
lcall
cwtl
rorl
jl
push
sbb
and
into
xchg
push
and
addb
push
out
mov
fstl
push
mov
jne
or
dec
xor
in
ss
xor
loope
adc
jge
mov
and
sbb
mov
jne
and
enter
fsubrl
sbb
cmp
aaa
sti
jle
push
cmp
mov
test
xlat
out
sub
lds
int
addr16
js
sub
mov
adc
push
dec
xchg
clc
inc
inc
sbb
es
push
imul
sbb
imul
aad
ja
popa
sbb
inc
mov
shll
xor
loop
and
movsb
jbe
in
mov
jge
nop
add
out
popf
dec
popf
jnp
xchg
subb
push
or
test
dec
dec
jg
lcall
fcoml
shll
add
sti
icebp
push
push
pushf
mov
xchg
ja
hlt
icebp
enter
fwait
and
or
inc
das
and
mov
xchg
aam
dec
fiadds
das
adc
or
adc
shlb
jecxz
mov
mov
mov
testl
lret
sbb
inc
inc
inc
lret
add
out
jecxz
dec
enter
xchg
rcrb
popa
jp
call
stos
mov
and
in
out
cwtl
sbb
jge
push
sub
mov
mov
scas
jns
bound
dec
ficomps
addl
xchg
fistpl
mov
loopne
incb
push
xor
mov
add
lods
cmpsb
fsubs
xor
dec
cmp
out
repnz
or
sbb
mov
mov
sahf
and
inc
push
mov
xchg
xchg
bound
mov
dec
bound
fnsave
cs
mov
push
pushf
push
dec
jecxz
mov
mov
xchg
mov
dec
pop
ret
shlb
cmp
insl
call
adc
mov
jl
xor
push
fidivl
cmp
mov
cmc
jnp
jno
sub
mov
out
mov
jno
loopne
bound
cmp
pop
dec
cmp
xor
sbb
jbe
jnp
mov
jbe
mov
push
and
aaa
out
mov
cltd
push
leave
cmp
jmp
pop
pop
call
orl
lock
sbb
push
mov
lcall
pop
mov
sub
jle
jns
jmp
int
jp
lods
pop
and
das
adc
pmaxsw
shll
lahf
and
lret
jns
xlat
mov
sub
enter
add
int3
pop
rolb
sbb
cmp
xor
push
call
pop
mov
mov
in
cmp
scas
pusha
jl
push
xor
push
push
cmp
popf
rep
dec
inc
jl
test
push
xor
insb
cmp
sub
fs
scas
mov
mov
lods
adc
int
insb
addr16
addb
or
cmp
inc
dec
fwait
movsl
out
jbe
movsl
dec
out
dec
jbe
and
out
fimuls
sbb
sub
popf
out
hlt
ljmp
nop
lock
pop
lcall
mov
cli
cwtl
in
sub
pop
sub
sub
mov
ds
adc
dec
xchg
sbb
dec
xor
jnp
lods
flds
rorb
jno
and
scas
mov
mov
pop
rolb
dec
nop
lods
es
mov
ss
mov
std
aad
in
mov
pop
pop
hlt
bound
mov
xchg
jne
loopne
xchg
xchg
dec
lahf
xchg
into
xchg
xchg
mov
outsb
inc
and
shlb
cmp
xchg
das
aam
xor
mov
dec
dec
icebp
icebp
mov
rorl
ljmp
cmc
xchg
movsl
adc
mov
fldt
sarl
push
pop
lret
xchg
daa
adc
rcrb
test
or
pop
xor
insl
add
daa
adc
clc
adc
mov
repz
and
and
aam
or
orl
punpckldq
imulb
push
call
adc
dec
bound
cli
mov
jmp
adc
test
outsb
fmuls
and
add
jae
inc
mov
push
enter
jge
xchg
mov
dec
pop
push
mov
push
mov
into
xlat
dec
out
in
sbb
mov
mov
das
xchg
or
out
pop
adc
mov
jo
xor
popf
cmpsb
fimull
fists
sbb
loopne
or
rcll
mov
jns
dec
sti
out
jp
xchg
lods
xchg
cmc
pop
dec
testb
int3
jo
or
clc
xlat
push
xchg
pop
jb
or
mov
loop
mov
pop
ljmp
rol
sub
inc
lret
mov
stc
fisubs
lock
inc
bound
lret
sub
jne
jg
mov
cmp
mov
pop
test
or
lret
hlt
jp
mov
adc
repz
sahf
repz
xor
loope
xor
push
mov
mov
add
rcll
lods
mov
cmpsb
int3
aad
xchg
xchg
cli
ret
xchg
dec
lods
mov
push
push
into
loop
rol
jb
xchg
xchg
adc
mov
push
or
mov
popf
addl
inc
pop
pop
xchg
sub
jb
clc
ljmp
fsubl
loopne
clc
adc
inc
xor
mov
hlt
pop
mov
outsl
fistpll
iret
dec
incl
mov
pusha
sbb
fisttpll
mov
push
lds
rcll
add
mov
mov
pop
popa
or
pop
jnp
lock
jp
inc
cmpsb
dec
test
insb
xchg
mov
jmp
mov
ja
and
repz
mov
mov
dec
fbstp
pusha
cmp
sub
push
sbb
xchg
icebp
inc
icebp
add
pop
mov
iret
lahf
daa
and
nop
and
out
adc
mov
or
mov
dec
dec
in
and
dec
or
push
mov
dec
je
mov
sbb
call
outsl
out
sub
dec
xor
add
dec
mov
jmp
mov
insb
cltd
mov
aas
add
sarl
fmul
lret
add
inc
xchg
pushf
sbb
pop
fiadds
pop
out
lret
xchg
cld
cli
dec
enter
inc
ja
mov
pop
hlt
rcrl
jl
das
xor
popa
insl
mov
push
push
gs
sbb
lea
pop
or
cwtl
pop
adc
and
mov
jl
movsl
push
adc
xchg
jnp
sti
sub
sti
add
dec
jns
sbb
push
nop
movsl
out
imul
dec
lods
les
inc
push
mov
pop
sbb
idivb
pop
mov
jp
dec
into
jp
lret
pop
jne
and
lahf
mov
stos
jl
out
mov
gs
dec
push
push
aas
scas
jl
mov
stc
or
and
mov
push
lock
mov
jecxz
mov
mov
inc
jmp
adc
jno
mov
cmp
fdivrl
dec
mov
dec
dec
ds
pop
cld
or
imul
cmp
ja
mov
dec
jnp
pop
mov
arpl
icebp
pop
dec
jl
clc
cmp
mov
inc
push
sbb
adc
int
ss
xchg
daa
cmpsb
mov
mov
and
mov
add
lret
push
jbe
xchg
dec
pop
xor
dec
sti
sub
inc
dec
lahf
cmovo
cmpsb
cmpsl
in
dec
sbb
sbb
push
rclb
imul
fucomp
mov
jb
pop
lods
mov
pushf
clc
stos
inc
add
xchg
sbb
test
xor
mov
loope
sub
nop
xchg
mov
push
jle
mov
xchg
sti
popf
cmp
cmpsb
xor
test
xor
loope
sub
push
aad
mov
jmp
and
xchg
push
hlt
mov
dec
pop
jmp
sub
jo
mov
fwait
je
call
outsl
rcrb
mov
sbb
inc
loope
or
pop
jl
adc
jecxz
jle
cmp
inc
xor
nop
movsb
rorb
sbb
mov
lahf
jle
lret
imul
addb
ja
xlat
arpl
add
aam
loop
in
mov
repz
jge
cmp
orl
and
stos
mov
mov
or
jl
push
dec
mov
rclb
addr16
clc
in
lea
jl
mov
jns
adc
sbb
jns
jle
mov
add
push
adc
push
ss
sub
adc
mov
je
fisubrl
add
mov
cmpsb
mov
lret
mov
in
pop
sbb
repnz
daa
ja
pop
roll
jnp
and
mov
xchg
or
push
ja
imul
stos
dec
minps
xor
insb
into
cmp
sbb
jb
leave
loopne
icebp
pop
cmp
dec
jge
divb
stos
push
mov
pextrw
dec
loopne
mov
jo
bound
pop
cmp
stc
lret
lea
iret
aas
jecxz
scas
je
xchg
xlat
mov
incl
nop
adc
pop
sbb
mov
roll
pop
and
movsb
xor
xchg
fcmovnbe
ret
sbb
jmp
jecxz
add
add
popa
mov
jge
cli
iret
xchg
inc
int3
fmuls
xlat
push
repnz
dec
pop
adc
mov
pop
fisttpll
aas
push
stos
xchg
lcall
adc
stc
ret
jle
mov
mov
mov
test
je
movl
push
pop
push
sub
pop
add
push
pop
push
dec
pop
dec
xchg
sub
xchg
dec
mov
imul
sub
mov
mov
xor
add
jmp
mov
mov
mov
mov
xor
add
xor
div
mov
xor
lea
mov
mov
mov
mov
mov
xor
lea
mov
mov
mov
xor
add
imul
mov
mov
xor
lea
cmp
jne
mov
xor
add
mov
and
xor
xchg
xor
push
mov
pop
mov
add
lea
add
add
push
inc
pop
dec
xchg
dec
xchg
dec
xchg
dec
push
mov
pop
dec
call
cmp
je
xchg
push
pop
dec
push
pop
inc
xchg
inc
sub
xchg
dec
dec
mov
imul
add
xchg
push
xor
mov
dec
inc
add
dec
xor
add
pop
mov
pop
pop
pop
leave
ret
push
mov
push
orl
movl
movzbl
sub
mov
movl
cmpl
je
cmpl
jl
jmp
pushl
call
mov
dec
mov
jmp
mov
xor
jmp
mov
hlt
mov
ja
out
je
fnsave
sbb
jnp
clc
pushf
jnp
mov
das
sar
push
and
mov
gs
jnp
inc
cmc
mov
lods
in
sub
and
jns
jmp
scas
hlt
cmp
insl
jp
jecxz
incl
dec
cmc
mov
fbld
shll
popf
pusha
test
push
js
icebp
push
shlb
sar
test
mov
inc
movsl
pop
mov
aam
ret
mov
popf
fcomi
pop
inc
push
out
push
inc
mov
fisubrs
ss
js
out
inc
push
ljmp
mov
das
mov
decl
bound
adc
adc
dec
add
add
out
mov
sbb
in
in
ljmp
out
push
pop
addl
mov
leave
xchg
std
stos
pusha
mov
stc
cmp
sti
inc
ret
mov
sbb
lret
sbb
xor
das
push
push
in
aaa
subb
xchg
orb
enter
push
jecxz
leave
xchg
sahf
sbb
sub
and
add
push
mov
sarl
cltd
adc
arpl
sub
cli
addr16
cmp
push
mov
mov
xorb
mov
fstps
dec
xor
or
shrb
cmpsl
or
out
cmp
lds
jo
cmp
jbe
stos
and
push
test
pushf
or
jne
in
jne
sar
dec
sub
push
mov
push
pushf
add
adc
mov
das
jo
outsb
push
push
sahf
subl
push
pop
push
wrmsr
mov
std
mov
sub
cmp
mov
je
sbb
sahf
pop
xor
or
mov
mov
js
shll
inc
mov
sbbb
pop
sub
fildl
sub
mov
les
and
inc
gs
inc
adc
lea
sti
add
es
or
ds
pop
mov
jg
dec
sbbb
mov
clc
lret
leave
outsb
xchg
js
xchg
aas
xorb
mov
in
mov
adc
mov
int3
dec
inc
mov
dec
mov
adc
std
cmpsb
pushf
scas
pushf
mov
movsl
add
inc
adc
loope
cmpsl
and
mov
mov
pop
mov
pusha
inc
lea
mov
fistpl
dec
jne
mov
jns
add
fst
cld
pusha
and
fadds
mov
push
fnstenv
push
cmc
mov
sub
add
cld
loope
push
dec
les
fstpl
jne
fmull
bound
fisubl
lock
pusha
and
mov
int3
xchg
push
cmc
push
xchg
fstl
out
mov
test
mov
in
repnz
xor
mov
leave
push
adc
sub
adc
das
xchg
jle
cmp
xchg
lea
push
int3
ds
adc
andb
lods
xchg
dec
loope
jp
sbb
fimull
lds
loop
mov
sub
call
sbb
jne
frstor
leave
pop
mov
les
and
shr
mov
lods
ret
fcmovbe
or
mov
push
mov
cli
in
fisubl
mov
test
ljmp
pop
mov
lea
xchg
sbb
adc
cmp
adc
cltd
cmp
pop
add
rcll
call
cmpsl
cli
repz
pop
pop
cmpsl
cmp
out
sub
lcall
mov
adc
jnp
push
pop
jo
pusha
addr16
mov
stos
movsl
mov
mov
lret
bound
movsb
out
pusha
push
pop
popf
mov
les
cmp
or
lock
mov
jb
out
roll
cld
cmpl
orb
inc
outsl
lds
and
cmp
inc
mov
lods
sti
xor
mov
add
mov
aaa
push
loopne
cltd
mov
lcall
pop
hlt
cmp
xchg
es
push
popf
xchg
dec
pop
add
sub
cmpb
shlb
lods
add
je
repz
sbb
ret
in
ficoml
cmpsb
adcb
jmp
ljmp
rcrb
jns
mov
push
or
repnz
aam
and
lock
sbb
movsl
cmpsl
xchg
jecxz
pushf
hlt
mov
repnz
jbe
fimull
test
jge
pop
dec
jg
mov
adc
sub
xchg
aam
adcl
ss
and
xchg
nop
imul
adc
notb
pop
add
jmp
scas
hlt
jbe
pushf
imulb
test
data16
add
jae
pop
repnz
adc
jmp
call
movsl
mov
test
mov
arpl
and
pop
mov
adc
and
dec
jmp
mov
fisubrl
lahf
jae
jo
dec
pop
ror
and
xchg
add
adc
sbb
lock
insb
push
mov
mov
ret
jecxz
imul
mov
add
and
sti
stos
inc
push
enter
sbb
mov
adc
pop
js
xor
or
mov
aad
pop
aad
mov
or
insl
es
pushf
sub
inc
leave
pop
mov
ss
inc
scas
inc
gs
lods
jno
iret
cmpsb
int
adc
subb
lods
test
test
dec
mov
pop
pand
add
xchg
pop
pop
lea
mov
adc
clc
cmp
out
daa
pop
push
add
add
test
ss
xchg
or
mov
mov
mov
add
test
int
sahf
pushf
dec
js
add
mov
in
pop
inc
mov
cmp
mov
stos
fistl
test
pop
mov
aad
dec
adc
jmp
cmpsl
xchg
xchg
jno
jns
mov
jl
add
push
sbb
push
adc
stc
inc
sbb
xor
test
xor
gs
cmp
push
add
sbb
or
sbb
ljmp
fs
fdivr
mov
mov
data16
movsl
mov
out
jae
repnz
jns
test
call
pop
int
add
push
gs
xor
movsb
popf
scas
and
xor
pop
sbb
fsubr
lcall
scas
inc
jnp
dec
outsb
bound
push
jecxz
lcall
shl
jbe
mov
arpl
dec
pop
jno
fsts
jmp
scas
or
jmp
repnz
imul
clc
dec
fwait
aas
int
clc
test
mov
push
mov
and
xlat
pop
mov
fiadds
dec
gs
in
or
adc
leave
dec
sbb
adc
jne
xor
movsl
or
mov
sub
out
mov
mov
xchg
leave
adc
sarb
dec
fldcw
inc
mov
imul
outsl
imul
sahf
xor
adc
jae
loopne
sub
in
fistpll
mov
outsl
lret
and
inc
inc
into
inc
cmp
int3
stc
leave
cmpsb
ret
lock
ljmp
pusha
int3
cmp
adc
mov
mov
sub
daa
add
or
dec
mov
push
test
fs
mov
mov
dec
cmp
sbb
cmpsb
push
inc
shl
arpl
ror
cmp
cltd
idivl
and
out
addr16
push
mov
loop
pop
mov
xor
arpl
das
sbb
cmp
scas
push
sub
push
insb
testb
push
test
pop
inc
pop
loop
or
jno
adc
pusha
in
icebp
clc
nop
sahf
push
mov
or
xor
adc
sbb
pop
fwait
xor
or
rcrl
lret
mov
fldenv
sarl
repz
int3
dec
in
imul
sub
inc
push
xchg
aaa
sbb
into
push
push
lret
cmpsl
cmp
jp
out
cld
outsl
out
scas
mov
or
iret
add
std
mov
loope
sub
mov
cltd
insb
mov
int
test
ret
rorl
jg
jmp
je
rorl
scas
xchg
or
jns
cwtl
popf
and
or
jno
mov
xor
dec
inc
jle
inc
jg
aam
ja
jae
lahf
jg
lea
push
mov
gs
andl
test
mov
sbb
insl
aad
jo
test
ror
ljmp
jg
sub
adc
or
mov
cmpsb
fwait
rorb
mov
mov
dec
adc
cmpsb
fistpll
movl
sbb
movsl
imul
adc
popa
loope
ficoml
or
ret
std
mov
outsl
cmp
jmp
call
pop
mov
and
out
pop
mov
call
popf
pusha
rclb
inc
xor
or
cli
mov
and
xchg
jnp
cs
and
lar
scas
or
mov
push
imul
sbb
ret
sti
jmp
ja
mov
xchg
rclb
mov
aaa
call
mov
rcrl
hlt
mov
add
sub
mov
ret
adc
add
ret
jmp
or
outsl
xchg
and
aaa
or
inc
add
je
push
pop
pop
xorl
jnp
lea
mov
xchg
adc
pop
xchg
aad
pop
pop
mov
aam
test
ss
lcall
push
lea
fwait
lahf
nop
mov
xlat
sub
xchg
sbb
xor
mov
push
out
test
into
enter
ret
fidivs
lea
cmc
xchg
cld
lds
int
test
or
mov
hlt
loopne
sbb
mov
pop
and
int
sub
xor
adc
add
adcb
dec
test
xlat
push
call
or
xor
mov
fisubrl
lods
leave
push
mov
sbb
shufps
dec
dec
add
mov
notb
sub
fisttpl
test
notl
lods
std
inc
pop
jbe
sti
out
rorb
mov
xchg
insb
pop
xchg
fwait
jle
lock
push
adc
shl
cmpsl
ficoms
sarl
scas
out
sbb
sub
lret
mov
inc
mov
push
ficompl
aam
sbb
int
rcrb
or
cld
adc
xor
das
cmpsl
cwtl
xor
pusha
imul
pop
fwait
popa
shr
adc
addb
jmp
push
xchg
push
loope
lock
imul
inc
sub
lds
int3
mov
cmp
inc
push
sarb
insl
lahf
xor
int
pop
cmp
and
jg
mov
in
dec
push
cmp
movsl
out
xor
push
test
mov
jo
stos
outsl
fxch
dec
adc
aad
add
lds
mov
dec
inc
mov
jg
mov
sbb
shlb
out
cltd
cs
shlb
repnz
fadd
sbb
sbb
lds
and
imul
rorl
adc
lods
lahf
mov
les
outsb
adc
pop
test
into
dec
sbb
jae
sub
push
les
es
sbb
cmp
add
popf
dec
sbb
mov
sub
lahf
and
mov
into
push
divl
xchg
int3
imul
mov
daa
repnz
pop
jmp
daa
mov
ret
pop
push
sbb
push
das
add
ror
gs
arpl
outsl
ret
sbb
pop
lahf
mov
xchg
jecxz
xor
xchg
pop
enter
mov
popa
jae
xchg
andl
into
push
push
push
dec
hlt
jo
dec
scas
call
js
ds
cmpsl
dec
push
mov
fs
jg
or
fwait
jae
and
push
dec
mov
jne
cmpsb
cmp
jns
in
sbb
pop
push
lds
dec
jb
testb
or
mov
push
lock
ljmp
pop
jae
xlat
pop
pop
aad
into
enter
jl
cwtl
cmpsb
jmp
xor
sbb
push
test
shrl
jns
inc
daa
lcall
mov
push
xchg
enter
fwait
xchg
jecxz
pop
mov
loop
clc
xchg
int3
incb
icebp
sbb
idivl
popf
loopne
mov
out
pop
sarl
mov
sub
lea
adc
daa
lret
push
mov
pop
xorl
mov
mov
sbb
ret
xor
ljmp
cld
or
imul
fld
fisubrl
lret
mov
cmp
xor
mov
pop
mov
mov
outsb
or
mov
mov
mov
or
rorb
loope
js
cmp
int
cmp
enter
sub
mov
mov
in
hlt
mov
xor
sbb
dec
aas
cmp
inc
jo
push
sub
data16
or
subl
push
xorb
movsl
inc
out
jecxz
cmpsb
sub
inc
into
xor
xchg
or
push
into
test
cmp
mov
or
adc
mov
jne
xor
dec
jl
dec
nop
pop
inc
inc
mov
in
lret
mov
lret
test
sbb
mov
scas
pop
sub
mov
aas
lahf
jne
xchg
jne
sub
inc
pop
shll
and
pop
sbb
dec
inc
or
add
shlb
xchg
js
cmp
mov
into
adc
repz
inc
mov
jnp
cmp
adc
in
rorb
rep
adc
cs
pop
xchg
inc
fstpt
mov
or
jno
int3
adc
pushf
cmp
movsb
lcall
les
sub
inc
push
or
and
dec
scas
sbbl
imull
or
aaa
jnp
inc
js
fisttps
in
cmpl
lcall
dec
inc
out
or
pop
jge
fists
sub
xor
test
cmp
clc
lahf
test
adc
dec
sub
scas
ja
xor
jmp
nop
lods
lahf
icebp
cli
push
inc
jle
shrl
xor
outsb
xor
mov
jg
xor
aaa
in
xchg
in
ret
xchg
sbb
mov
push
stos
and
lret
mov
call
sarl
movsl
outsb
pop
hlt
inc
dec
gs
out
inc
dec
jb
mov
insl
mov
dec
shl
xor
flds
fdivrl
stos
sub
add
cmp
mov
lods
or
mov
xchg
sub
lret
dec
frstpm(287
pop
cltd
mov
pop
ss
imul
lds
or
cmp
out
out
push
imul
into
pop
mov
aam
jne
daa
nop
das
push
es
dec
jnp
lahf
rolb
insb
addl
push
xchg
scas
mov
fwait
iret
sar
mov
xor
leave
push
dec
add
mov
pop
xchg
movsb
or
sbb
pop
stos
jge
mov
jbe
or
scas
mov
xor
push
push
or
cs
mov
mov
mov
add
cmp
outsl
pop
repz
xchg
dec
iret
adcb
ret
pop
jl
inc
push
je
sbb
and
mov
cmc
sbb
incb
jmp
mov
or
or
or
lods
fistpl
imul
out
jnp
test
iret
ja
outsl
pop
mov
jae
and
cmovnp
push
imul
mov
inc
movsl
insl
aam
fmul
push
call
pop
loopne
outsb
sti
lods
dec
pop
out
xor
pop
xor
stos
pop
pop
inc
cmp
notb
add
jg
jmp
mov
fbld
stos
mov
lret
lret
adc
movsb
scas
loopne
adc
mov
push
lret
mov
xor
lahf
dec
test
imul
and
xor
jmp
mov
cs
scas
adc
cmp
divb
in
jb
sbb
lret
icebp
mov
test
pop
pop
bound
xchg
testb
ljmp
jmp
jns
cmp
test
inc
lods
repz
jae
push
loopne
pushf
mov
movsb
xchg
jmp
lcall
ror
enter
adc
xlat
mov
xor
dec
jb
pop
add
push
xchg
sahf
mov
mov
cmp
es
test
lahf
xchg
push
outsb
scas
lret
mov
lods
cltd
push
sub
push
and
xchg
loopne
mov
jge
loop
scas
xchg
inc
mov
ficompl
xchg
outsl
inc
adc
dec
pop
ljmp
pop
repnz
subb
adc
xor
cmp
repnz
loopne
in
cltd
test
mov
ljmp
pop
je
fld
jnp
push
pop
std
aas
pop
sub
xchg
scas
mov
dec
in
repnz
and
int
fstl
pop
fiadds
stc
or
jl
aam
into
nop
lock
sbb
adc
add
dec
daa
mov
ficomps
jne
ss
test
and
jnp
gs
fsubs
mov
stos
pop
dec
gs
nop
lds
sbb
shl
dec
dec
shlb
dec
nop
jno
movsb
xchg
fildll
rcrl
or
adc
lcall
xchg
add
or
prefetch
or
xor
or
rol
rcr
pmullw
mov
jne
xor
fists
or
xor
and
pop
out
mov
mov
cmp
mov
ret
push
bound
mov
xchg
dec
add
aaa
cmp
cmp
pop
dec
adc
pop
dec
xchg
stc
xchg
push
jbe
xchg
pop
clc
cld
mov
out
pop
and
jmp
mov
ljmp
push
or
imul
outsl
mov
xor
repz
adc
xor
sarb
stos
fdiv
mov
xor
scas
in
repz
jns
jnp
mov
stos
push
mov
fwait
push
cmp
daa
inc
cs
dec
sub
int3
cli
fadd
mov
aas
jb
pop
cld
and
or
divb
bound
sub
dec
dec
pop
and
mov
dec
or
xlat
lock
mov
sub
push
ja
sbb
add
mov
dec
xor
pop
xor
out
jne
in
sbb
jne
adc
mov
pop
imul
movsl
and
int
mov
lock
movsb
idiv
aam
xor
das
xchg
lret
ret
mov
push
xlat
mov
bound
sahf
insl
insb
enter
es
ret
cmpsl
inc
int
push
test
sahf
xlat
sahf
int
pop
jle
and
in
testl
jnp
lods
fnstenv
mov
cli
test
shr
and
repz
sbbb
faddl
pop
js
adc
shl
stos
fiadds
int
mov
mov
lods
es
mov
pop
mov
popa
sbb
dec
mov
fists
sub
push
and
adc
sbb
imul
xchg
sti
mov
mov
jp
cmp
subl
or
dec
sbbl
jae
jnp
jecxz
mov
add
dec
sbb
and
dec
mov
mov
push
inc
sub
jo
pop
mov
mov
xor
iret
loop
jp
push
mov
push
outsl
and
push
mov
lcall
lcall
mov
pop
aaa
push
mov
dec
lret
in
stos
popa
mov
xchg
push
enter
roll
mov
xor
out
mov
xchg
push
cmp
das
push
ss
xor
movsb
inc
ja
sahf
iret
pop
adc
inc
cltd
cmc
inc
dec
or
dec
adc
lock
out
ds
sbb
xchg
and
in
inc
mov
fwait
lds
ret
xchg
pop
add
ret
jle
mov
jne
sub
inc
pop
jecxz
mov
jp
imul
or
mov
push
rcrb
iret
hlt
decb
and
mov
pop
subl
lahf
add
mov
out
xor
mov
test
sbb
cwtl
jnp
mov
out
leave
shrl
pop
pushf
aas
mov
sub
les
ja
lret
xchg
negl
xchg
rcrl
lret
sbb
jge
cmc
fidivrs
sti
adc
mov
testb
mov
xchg
ret
push
insb
sbb
ljmp
les
lock
cmpsb
cmp
repnz
add
and
push
in
pop
popf
leave
or
adc
cmp
mov
pushf
in
scas
fwait
pop
fdivrl
cs
inc
mov
es
out
stos
inc
repnz
rcll
imul
loop
pop
mov
and
cmp
out
je
push
mull
in
cmp
das
push
xchg
jp
aad
test
stos
jecxz
scas
arpl
and
daa
add
push
jne
mov
mov
mov
adc
lret
push
push
xor
or
mov
cltd
inc
dec
lahf
fstps
scas
mov
jnp
adc
inc
test
adc
outsl
mov
pop
xor
dec
add
pop
divl
jle
xor
xchg
std
int
add
sbb
andb
xorb
test
and
gs
lahf
xchg
cmp
je
sub
pusha
pop
xlat
loopne
jmp
andb
or
and
inc
mov
push
mov
mov
xor
fwait
jb
dec
or
outsl
xchg
pop
mov
mov
inc
jmp
or
frstor
cmpsb
rcl
mov
add
mov
test
stos
dec
xchg
out
mov
push
dec
push
mov
shrl
lret
out
sbb
cmp
or
cmp
addr16
inc
movl
and
xor
mov
sbb
imul
icebp
in
cmp
dec
cmp
dec
loop
std
xor
add
fsubp
mov
mov
push
inc
pop
fs
sub
hlt
push
xchg
or
jns
int
mov
imul
ja
add
mov
pop
out
mov
sbb
ljmp
fdivrs
aaa
cmp
add
cwtl
xlat
and
push
pop
in
xor
into
xlat
les
loopne
push
push
xor
xchg
repnz
hlt
lods
push
mov
in
shll
loope,pn
arpl
and
mov
pop
adc
xor
aam
ret
mov
mov
xchg
cmp
mull
sbb
call
mov
xchg
outsl
fs
stos
push
dec
pop
sbb
imul
in
cltd
and
outsb
and
cmpsb
push
inc
xor
pop
cmp
cltd
adc
inc
in
dec
push
pop
mov
add
adc
daa
in
imul
jbe
inc
ss
or
into
leave
sub
sbb
mov
jne
pusha
and
dec
mov
pop
mov
lahf
xchg
or
mov
je
popa
stos
xchg
cmp
inc
add
dec
clc
push
dec
repz
ja
outsl
in
push
int3
fsubl
cmp
mov
and
test
repz
xchg
lods
int
mov
push
push
and
push
sub
out
fsubrs
or
xchg
aaa
fdivr
cmp
mov
jno
cli
leave
cmpb
xchg
ficoms
mov
int
jb
cmp
fdivrl
cli
cli
out
daa
sbb
fsubr
and
adc
cmp
bound
hlt
cmp
pop
jo
mov
aaa
mov
pop
jecxz
jecxz
cmp
cmp
lahf
pop
sub
movsb
inc
addl
cmp
clc
stc
xchg
mov
push
cmp
sti
add
inc
mov
add
jo
mov
mov
jns
dec
or
mov
sub
lods
call
sbb
push
xchg
in
movsl
pusha
stc
mov
fldenv
mov
xchg
dec
leave
sbb
pop
shrl
and
sti
js
and
mov
mov
mov
fdivs
movsl
jnp
mov
inc
cmp
and
je
xor
lea
xchg
sbb
fsubrp
jp
cmp
cmp
add
pop
fistps
mov
repnz
lods
cmp
clc
sub
sahf
data16
out
and
pop
push
sub
orl
jp
cltd
lods
or
nop
jg
mov
leave
lods
sti
mov
mov
hlt
sbb
rorb
cmpsb
dec
outsl
jne
xor
adc
push
xchg
mov
ljmp
jae
xor
mov
iret
dec
rcrl
push
mov
mov
dec
ljmp
gs
pop
insb
and
adc
stos
dec
xchg
cwtl
ret
fcmovu
and
es
dec
add
xchg
lods
mov
orl
cmpsb
push
int
jle
fwait
push
outsb
mov
dec
mov
sub
jp
stc
adc
cli
or
cmp
test
cmp
xchg
jge
mov
xchg
jge
or
mov
add
call
ja
adc
dec
mov
fwait
test
outsb
outsl
dec
xor
or
mov
cmp
and
je
test
out
fildl
dec
and
cltd
sbb
mov
leave
or
push
shlb
lret
rorl
dec
or
fisubl
aam
mov
out
inc
jle
cmpsl
lea
insb
cmp
or
out
mov
jp
fstps
ret
and
loope
std
fidivrs
add
sbb
xchg
mov
jle
mov
ret
push
inc
dec
xlat
mov
sarl
push
pop
lods
mov
cmp
xlat
or
mov
adc
cs
leave
mov
insb
cmp
xor
add
sbb
cli
fiaddl
cmpsb
out
insb
pop
push
ret
jp
cld
xor
cs
dec
xor
jp
pop
mov
jae
push
xchg
aad
stc
fmull
scas
cli
std
inc
pop
or
fnstcw
lods
add
repnz
inc
jl
or
mov
add
mov
dec
ss
mov
mov
xchg
fistl
imul
sub
test
sbb
jbe
dec
sub
fcom
mov
icebp
out
lods
es
out
sbb
lcall
jmp
ds
push
mov
aas
cmp
aad
cmc
daa
outsl
xorl
loop
and
pushf
cmp
out
cmp
push
sub
into
bound
and
cli
push
orl
xchg
aas
push
mov
nop
nop
mov
inc
jg
pop
mov
pusha
mov
xchg
inc
fistpll
inc
mov
jo
jg
adc
jg
insl
xor
insb
enter
jmp
add
arpl
iret
pop
scas
lds
movsl
and
xchg
adc
outsl
xchg
cmpsl
dec
std
mov
cmpl
mov
lods
imul
test
les
rcrb
and
lds
iret
mov
les
and
in
dec
movsl
mov
sub
xor
cld
xor
aam
or
jle
cmpsl
pusha
jae
xor
arpl
xchg
cmp
icebp
sahf
int3
pusha
fistps
mov
mov
push
movsl
fs
xor
pop
adc
adc
jl
sub
daa
add
mov
aas
arpl
sbb
cltd
ss
pop
inc
repz
outsb
jae
dec
outsl
lods
popf
push
sub
sub
mov
xchg
cmc
jl
xor
and
adc
sahf
hlt
sbb
scas
ds
mov
pop
inc
ds
testl
stos
lea
shll
aam
cmpsb
jl
xor
insb
mov
jbe
jb
call
negb
into
jns
add
mov
adc
lret
sar
mov
les
addb
push
sub
ss
stos
pop
sbb
inc
pop
cld
std
xor
push
iret
xchg
sub
aad
cs
pushf
fdivr
mov
paddw
das
xor
mov
cmpsl
and
pop
fdivs
sarl
test
insb
cld
rclb
adc
xor
push
sbb
push
shl
cmp
and
mov
ret
sub
adc
add
call
ret
push
dec
fisttpl
push
adc
and
or
ljmp
in
cmpsb
or
enter
and
pop
pop
in
rcrl
outsl
iret
out
mov
cli
clc
repz
push
bound
mov
lahf
jmp
lahf
pop
data16
daa
and
adc
mov
test
cmp
jo
jge
jecxz
ljmp
sub
cli
testl
aas
jl
mov
hlt
dec
push
jns
mov
out
add
es
xor
stc
xchg
cmpsb
enter
fstpl
gs
imul
sbb
jnp
jne
pop
push
cli
in
data16
dec
out
xchg
xor
sub
dec
movl
jmp
test
mov
mov
stos
lods
movsl
push
or
cmp
dec
mov
mov
ror
popa
push
jecxz
movsl
ss
pop
pushf
inc
pop
je
add
push
out
jns
cmpsb
pop
lea
pop
adc
fidivl
pushf
lods
ret
xchg
adc
cmp
adc
test
fiadds
sub
inc
dec
test
pop
cmpb
insl
pop
sub
jle
lock
cmpsl
cmp
push
test
les
addr16
int
out
and
pusha
shrl
mov
and
dec
mov
arpl
lahf
or
jo
sub
fiadds
dec
push
pop
and
mov
rclb
pop
sti
in
push
test
stc
and
inc
sbb
clc
xorb
int
sti
and
adc
xor
xor
jno
sbb
push
or
xor
sub
sbb
inc
mov
out
or
inc
cwtl
orl
pop
ds
cmp
hlt
cwtl
lock
jb
push
xchg
sahf
lret
lds
jge
fisttps
repnz
sub
ljmp
cmp
repnz
es
out
mov
mov
pusha
lahf
jbe
adc
mov
xchg
mov
ficoms
lcall
push
rorl
add
ds
xorb
daa
or
ret
dec
cs
sub
push
shlb
pop
xor
gs
xchg
aas
add
inc
push
hlt
fs
sub
shld
lahf
sbb
mov
sti
jns
ror
mov
sti
xor
cmpsb
mov
cmpsb
inc
popa
adc
out
test
push
jno
mov
cs
iret
ss
add
mov
repnz
pushf
mov
ss
lcall
jnp
mov
inc
jo
andl
out
sub
pop
scas
xorb
call
cld
mov
lods
pop
aam
pop
inc
sahf
icebp
ljmp
popa
daa
movsl
jg
mov
loop
xor
movsb
hlt
fwait
jns
pop
call
jmp
adc
in
gs
xlat
push
dec
pop
sti
jmp
xchg
clc
xor
inc
jae
repz
jns
mov
jb
push
repz
mov
xor
orl
add
mov
andl
jmp
xor
or
inc
mov
cmpl
jae
cmpl
jb
jmp
call
cmpl
jne
mov
inc
mov
jmp
mov
xor
push
mov
mov
add
mov
mov
jmp
or
mov
xor
mov
fwait
dec
jnp
clc
pushf
jnp
pop
jg
lret
adc
and
jle
outsb
fidivrs
mov
stos
enter
frstor
xor
fisttpl
sub
push
inc
popf
jns
pop
ss
sbbl
stos
ljmp
scas
xchg
cmp
push
scas
jge
call
fs
into
fucomi
jle
incb
leave
pop
mov
mov
jns
push
xor
aaa
sbb
call
jecxz
xchg
lahf
hlt
mov
das
arpl
gs
aaa
and
mov
fwait
ret
dec
inc
leave
or
or
pop
add
sahf
dec
leave
ret
pop
leave
lret
cwtl
hlt
xchg
loope
aaa
sbb
push
sub
sbb
bound
cmpb
sbbl
push
jp
scas
adc
pop
sub
clc
push
js
popa
adcl
cmp
adc
nop
push
jge
jno
sbb
pop
test
mov
das
dec
clc
mov
data16
inc
inc
hlt
dec
push
gs
mov
mov
cld
out
xchg
inc
mov
pop
dec
xchg
cmp
stc
push
lds
xor
scas
test
fidivl
fistl
fstp
dec
mov
mov
sbb
mov
jne
sbb
or
cmpsl
and
inc
xor
dec
jecxz
jle
pop
mov
xor
cmp
movsl
pop
gs
int
jg
push
loopne
jmp
mov
push
movsb
cmp
fwait
add
mov
push
addr16
sbb
rcrl
icebp
mov
sub
testb
stc
aas
xchg
test
daa
sbb
jno
out
fnstcw
cmp
jbe
push
sti
std
sub
xchg
mov
rcrl
inc
in
sub
xor
cmp
push
mov
mov
sub
fsubs
pop
dec
orb
jp
push
jae
test
jne
fisttpl
repnz
adc
fsubrs
jl
mov
es
lret
leave
push
push
or
xchg
dec
push
testb
cli
cs
repz
xchg
sub
in
or
adc
add
sub
fisubrs
cld
xor
mov
inc
leave
enter
aaa
movsl
or
sahf
add
sub
lods
js
push
xor
jmp
mov
in
mul
sub
aas
xor
std
and
xchg
aad
mov
test
pop
or
lds
movsb
outsb
jg
pushf
aaa
imul
rorb
fcompl
insl
test
adcb
leave
pop
cltd
add
ficoml
aas
pop
orl
inc
mov
test
add
rcrb
push
fsts
mov
dec
jae
scas
sbb
sub
xor
mov
push
mov
mov
adcb
sub
es
sahf
dec
pop
adc
and
imul
or
int3
or
movsl
daa
jno
mov
ret
jae
lock
in
js
pop
adc
or
enter
test
inc
lods
add
mov
or
int3
stc
inc
mov
cs
sub
mov
ja
dec
pop
lods
mov
or
psllq
enter
aas
negb
mov
jnp
jns
test
loop
xor
aas
icebp
mov
scas
insl
mov
lock
imul
fsubr
adc
jnp
bound
xchg
fwait
js
mov
pushf
mov
mov
adc
loope
or
cmp
imul
cmp
mov
sub
lret
sbb
int3
ret
loop
lret
popf
scas
jnp
sub
fbld
cs
in
pusha
negb
xor
push
and
jg
inc
or
jae
enter
fwait
das
test
test
or
mov
add
addr16
fstps
out
mov
push
adcl
inc
add
je
fidivl
in
sbb
push
xor
ret
fdivrl
pushf
dec
das
ds
fbld
add
inc
pusha
sbb
dec
pop
mov
roll
lds
inc
cmp
mov
int
xlat
adc
gs
dec
inc
or
fisubl
pop
div
pop
and
mov
cwtl
pushl
dec
mov
pop
jle
or
sub
add
jae
sub
sub
test
xchg
movsl
ja
es
js
lods
mov
dec
int
insl
imul
pusha
mov
mov
popa
jns
sbb
push
dec
rorl
xchg
adc
jb
dec
xchg
fisubs
repz
ss
filds
cld
push
std
dec
mov
xchg
sti
dec
ljmp
sbb
imul
jno
push
test
push
fiadds
sahf
fdivrs
dec
inc
mov
push
fisubl
dec
les
mov
jg
xchg
or
cmp
sub
fnstcw
hlt
add
dec
dec
imul
cltd
sub
xlat
xor
inc
inc
mov
or
inc
lfs
aad
mov
movsb
js
sahf
lock
push
adc
add
mov
adc
cmpsb
mov
jp
mov
je
pusha
test
repz
popf
sahf
sub
mov
sub
adc
int
mov
bnd
loope
jg
pop
dec
test
pop
dec
push
xor
loopne
clc
arpl
mov
add
add
mov
lods
adc
daa
mov
push
daa
or
add
dec
loope
xchg
rclb
mov
jp
push
xor
les
mov
jne,pt
test
test
sub
iret
jp
movsb
sahf
ja
outsl
and
push
jno
jae
push
xor
or
sahf
and
rolb
xchg
xchg
push
jmp
add
fnstcw
out
icebp
mov
add
rolb
sub
xchg
jge
jae
adc
adcl
jg
mov
das
xchg
mov
sahf
pop
mov
dec
fidivs
lock
adc
aas
fs
sbbl
xor
and
or
movsb
fsub
lods
sti
fwait
shll
lock
outsl
lret
fcomi
jne
pop
xchg
orl
int
mov
sbb
in
arpl
in
and
pop
sti
jae
mov
add
in
nop
dec
packssdw
fs
pushf
popf
dec
adc
pop
int3
mov
inc
test
mov
rcrl
dec
sti
test
flds
test
loopne
rep
mov
lret
lds
xor
orl
pop
call
xor
popa
ss
push
mov
add
sbb
mov
fwait
add
orb
and
inc
movsl
pop
mov
cmp
and
rclb
negl
mov
jge
dec
mov
sbb
push
jae
scas
aaa
jno
in
jp
jnp
fs
xchg
in
push
lock
les
das
xchg
pop
sub
adc
xchg
lea
mov
mov
sub
inc
shrb
adc
mov
dec
or
les
sbb
inc
testl
dec
jo
push
pop
mov
cmc
out
out
hlt
and
inc
nop
jmp
scas
push
and
push
les
fucomi
inc
sub
inc
ret
push
ljmp
fisubl
cwtl
pop
stos
jmp
out
test
pop
out
and
outsb
jne
inc
pop
stos
jo
xor
dec
lods
movsb
int3
pop
lds
jg
iret
lcall
pushf
pop
xor
lret
enter
xchg
mov
dec
test
jmp
aaa
movsl
clc
mov
push
lock
fs
mov
outsb
aas
pop
xor
mov
ss
gs
cmp
mov
mov
mov
lock
xchg
sub
stos
add
test
adc
or
push
sbb
push
aaa
into
pop
in
ss
xchg
stos
xchg
jne
sbb
add
jo
jae
ds
addr16
sub
and
xor
mov
mov
cmpsl
loop
jnp
pop
imul
push
mov
andl
pop
cmp
lods
mov
cmp
fidivrl
dec
pop
insb
dec
shlb
jecxz
jo
sub
push
mov
and
mov
xchg
mov
mov
dec
jg
inc
pop
mov
sbb
shlb
mov
push
and
inc
and
cmpsb
shl
inc
outsl
and
mov
popa
shr
out
pop
hlt
fistps
lods
aad
sub
nop
into
mov
pop
push
xor
data16
sbb
add
scas
mov
jmp
xor
adc
push
rorb
sbb
mov
push
jle
outsb
mov
xchg
xlat
jp
aas
and
cmc
test
bnd
cmpsb
arpl
and
pop
mov
add
mov
mov
xor
mov
mov
jl
cmp
aas
xchg
mov
adc
push
dec
cmp
mov
sbb
add
jmp
and
xor
and
jo
mov
out
and
xchg
fldt
sub
mov
std
test
mov
lds
mov
testb
add
jp
jb
orl
ficoms
ds
or
adc
cltd
jbe
mov
mov
orl
pop
mov
push
sbb
add
xchg
imul
jecxz
pop
fucompp
sbb
mov
add
in
aad
loop
shlb
adc
cwtl
cli
dec
ja
inc
scas
test
movsb
xchg
stc
or
ret
cwtl
cmpsb
arpl
dec
push
cli
push
mov
mov
cmp
lahf
jle
mov
mov
xchg
add
pop
cmpsb
add
mov
xchg
inc
popa
cmc
jl
dec
pop
xchg
cmp
push
movsb
movsb
mov
cmp
add
xor
sbb
subps
pop
scas
jne
and
icebp
mov
xor
inc
mov
cmpsb
mov
mov
inc
int3
test
mov
movsl
xchg
mov
imul
jnp
pop
or
jnp
cld
push
dec
js
hlt
loopne
mov
fstpt
jne
cmp
push
mov
imul
lods
mov
outsl
fwait
jmp
cli
ljmp
sar
in
sbb
out
jmp
cmpsb
sbb
lret
adc
inc
sbb
pop
sbb
arpl
mov
mov
rcrl
es
sbb
repz
xchg
cmp
inc
mov
mov
inc
and
and
das
clc
xor
sbbb
inc
inc
lahf
cmpl
std
loope
stos
inc
adc
sbb
scas
mov
addl
mov
sub
xor
lret
sub
fistpl
sub
adc
jp
arpl
aas
test
inc
call
repnz
mov
push
and
int3
inc
jg
fisubrl
mov
pop
sbb
idivb
dec
mov
push
sub
jb
pop
int3
cmpsl
push
scas
sub
jg
dec
push
and
andl
je
dec
aas
mov
xchg
insb
sub
sahf
dec
mov
adc
nop
nop
lock
filds
cmp
lock
cltd
dec
pop
in
mov
lods
jo
inc
insl
adc
ja
lea
mov
or
movsb
cmp
rcll
cli
jns
lds
imul
dec
or
dec
jecxz
sub
adc
int3
cs
mov
rcrl
jns
fwait
adc
jle
scas
pop
test
scas
call
repz
dec
in
andb
loop
mov
add
test
lods
rolb
mov
aas
inc
cli
std
leave
adc
jae
cmp
fwait
arpl
lds
fisttpll
add
cmp
jno
push
stos
or
mov
push
ss
inc
adc
mov
push
jge
mov
pop
inc
hlt
dec
loopne
aad
push
aad
inc
push
xor
imul
fisubrl
and
xchg
or
ds
mov
dec
mov
mov
in
mov
push
daa
push
cmp
into
repz
sbbl
imul
jge
in
nop
inc
or
dec
mov
pop
jnp
or
fimull
ret
addr16
mov
sahf
jno
jmp
test
or
xor
sbb
sub
call
and
into
aad
inc
cmpsb
int3
test
roll
aas
les
xor
dec
mov
mov
push
repz
push
pop
inc
movsl
outsb
das
ja
imul
cltd
jbe
xchg
dec
mov
fldl
push
shll
pop
mov
ljmp
adc
add
popf
inc
fcoml
jg
and
dec
jb
imul
mov
jl
sub
out
fisubl
jl
dec
lahf
jne
out
sbb
fs
imul
xor
mov
add
xor
mov
stos
sti
inc
push
rorb
pop
adc
loope
mov
or
or
mov
lahf
loop
in
sbb
push
xor
mov
fwait
add
mov
sbb
adc
decl
mov
jle
cmp
out
pushf
imul
je
fwait
out
mov
and
fldenv
pop
jg
and
loop
mov
shll
icebp
cmp
jmp
dec
adcb
mov
cld
mov
mov
rorb
cmp
in
in
fistps
leave
or
cmpsb
mov
adc
and
inc
stc
or
jbe
mov
push
cmp
jae
sahf
lods
jbe
mov
out
mulb
in
mov
sbb
out
and
popf
mov
cmp
loope
xor
ficompl
xchg
sbb
pop
test
sbb
les
adc
pop
push
nop
mov
repnz
test
lahf
lret
and
frstor
mov
aaa
lock
dec
insb
int3
and
sbb
fisubl
xor
popf
pop
push
or
push
cld
fs
push
inc
popw
dec
into
and
test
and
out
xlat
push
xchg
sub
fwait
gs
cmp
shll
fistps
addr16
jge
sub
pop
xor
add
in
mov
lods
icebp
icebp
xor
adc
lds
mov
mov
arpl
add
lods
cmp
jns
xchg
fisubl
pop
mov
jg
popf
es
imul
sub
call
pop
jnp
inc
mov
push
jl
push
imul
test
xchg
leave
mov
daa
clc
dec
push
mov
and
xchg
inc
cwtl
ret
sti
add
aam
mov
mov
addr16
push
mov
stos
out
push
mov
xor
push
jle
in
sbb
rolb
int3
fadds
push
sub
xor
mov
fcomps
test
rcrb
sahf
lds
outsb
outsl
add
pushf
dec
or
pusha
mov
into
inc
push
jbe
push
sahf
mov
je
and
rclb
insl
mov
and
mov
popa
fisubs
insb
mov
xor
xor
clc
or
enter
sub
jp
repz
jle
cld
mov
jecxz
push
pop
notb
int
cs
nop
xlat
ja
dec
movsl
bound
clc
jne
mov
push
jbe
xchg
dec
lret
push
sti
ds
sub
sahf
dec
xor
sbb
fistpl
jp
out
notb
cltd
pusha
into
jo
jl
or
hlt
fisubrl
mov
push
gs
iret
xor
inc
mov
mov
push
js
lcall
aam
inc
inc
shll
push
pop
cmp
stc
xchg
adc
pop
push
adc
in
inc
sbb
dec
fadds
xchg
ret
ljmp
xchg
cmp
mov
addb
cltd
mov
push
mov
mov
pop
movsl
aaa
jg
pusha
fnsave
add
inc
into
push
pop
outsb
or
call
test
testl
or
dec
xorl
push
in
jp
inc
cld
orb
xchg
les
push
cmp
inc
push
jns
dec
pushf
pop
popa
sti
push
das
inc
les
cmpl
jno
push
jmp
in
add
sbbl
in
lods
push
add
mov
data16
push
incl
inc
stos
flds
jmp
aad
mov
xchg
cmp
xchg
sbb
enter
adc
cmpsl
fs
ffreep
push
xchg
js
inc
loope
pop
xchg
pop
jp
jbe
insb
mov
iret
std
mov
es
rclb
pop
std
sub
sbb
jle
enter
mov
and
pop
jp
repz
mov
or
xchg
inc
adc
hlt
mov
flds
push
or
mov
movsl
pushf
ret
test
bound
pop
in
fmull
push
dec
dec
and
jmp
xor
xor
mov
lods
fbstp
jns
imulb
aam
ror
sub
xchg
mov
pop
and
int3
mov
iret
adc
mov
pop
mov
mov
dec
lods
into
sbb
repnz
rcrb
test
sub
test
cmp
bound
nop
fnstsw
and
adc
test
out
jbe
es
fadds
leave
inc
and
pop
and
mov
ljmp
jge
mov
fiadds
mov
xchg
add
scas
dec
xor
dec
cmp
ja
jae
mov
and
or
popf
jbe
jmp
cmpsb
mov
jno
scas
call
jo
xor
iret
inc
ja
sbb
outsl
sti
cli
jno
sahf
aad
inc
jecxz
mov
pop
jp
test
push
aad
pop
mov
lods
sub
nop
arpl
dec
fcomi
stos
jecxz
pop
dec
lcall
mov
out
fldcw
aad
scas
sbb
and
jmp
sbb
mov
xor
adc
cs
mov
mov
dec
sarb
or
clc
push
test
movsl
sub
inc
xor
fnstsw
aam
jns
aas
sarl
aam
push
pop
aad
adc
add
leave
gs
scas
aas
scas
inc
gs
outsb
sub
xchg
adc
dec
icebp
rcrb
addr16
sbb
dec
dec
imul
sarb
sub
push
lds
test
repz
ja
push
aam
rclb
sbb
add
lea
testb
das
adc
fistl
outsl
add
pop
imul
inc
push
jg
jl
out
push
jg
sahf
sub
adc
int
les
lods
int
js
jecxz
jle
call
mov
arpl
push
dec
stos
cmp
push
nop
or
shrb
xchg
jmp
push
add
mov
popf
mov
daa
das
insl
push
dec
repz
fmuls
jp
fstl
mov
in
mov
cld
fmull
inc
jecxz
pop
add
dec
hlt
mov
flds
pop
pop
imul
int
pushf
into
xchg
icebp
mov
inc
dec
adc
jle
dec
pop
push
mov
or
jg
cmpsl
das
jb
sbb
mov
sti
sti
aas
into
pusha
arpl
mov
push
xchg
repz
mov
cmp
xlat
mov
adc
loopne
add
push
ss
insl
ss
fmuls
cmp
in
dec
fwait
lcall
dec
cld
inc
mov
add
xchg
push
mov
mov
lret
iret
aad
and
pop
pop
int3
out
popf
pop
fwait
aam
mov
test
push
push
enter
mov
mov
lods
mov
pop
xor
and
xor
pop
and
movsb
rorb
push
mov
into
in
imul
aam
adc
adc
loope
sub
pop
jl
xchg
mov
push
inc
xchg
mov
aam
pop
scas
dec
lods
test
in
xor
mov
enter
sar
ret
pop
push
lret
mov
adc
shlb
addr16
out
outsb
das
ja
popf
push
jo
adc
aad
jbe
mov
iret
mov
std
cmp
sbb
lcall
loopne
push
pop
jp
add
cli
loopne
fldt
fildl
mov
mov
clc
pop
call
fistl
dec
mov
push
movsb
jg
inc
jmp
pop
aam
cs
sarb
dec
and
jmp
lahf
xchg
jae
scas
mov
test
data16
pop
mov
shll
adc
push
mov
loopne
hlt
dec
jne
push
jae
lret
cmc
inc
and
lcall
push
icebp
aas
cmp
cmp
cs
clc
xor
es
push
push
jg
pop
test
shl
push
ljmp
xchg
add
push
loopne
out
cs
lahf
mov
dec
jle
push
push
fsubl
mov
xchg
jl
inc
imul
fcomp
shl
outsb
std
in
loop
dec
stos
andb
inc
in
inc
jno
inc
sub
fwait
sbb
cmp
inc
pop
lea
ljmp
fsubl
ds
sbbl
imul
xlat
and
xlat
lock
into
movsb
jmp
xchg
sub
scas
push
mov
add
pop
std
popa
pop
xchg
mov
dec
mov
out
pop
arpl
pop
inc
xor
push
jp
xor
push
sub
cli
jae
shrb
jecxz
cs
mov
push
stos
adc
mov
cmp
mov
and
stos
imul
dec
imul
mov
push
dec
pop
sub
popa
jno
in
push
popa
jo
inc
aas
bound
and
rolb
jle
shlb
pushf
jno
int
dec
insl
imul
xor
xor
sbb
lahf
gs
bound
pushf
stc
lds
cmpl
sub
jno
cmp
adc
push
xchg
and
push
js
xchg
xor
pusha
das
ljmp
mov
push
add
dec
movsb
xor
cmp
out
mov
inc
pop
inc
pop
dec
pop
dec
adc
wbinvd
repz
xchg
sbbl
mov
hlt
iret
xor
mov
sarb
lds
jmp
sbb
into
hlt
cmp
mov
xor
and
dec
xchg
pop
push
dec
sbb
outsl
dec
jle
xor
orb
fildll
push
mov
test
sbb
sub
sbb
mov
sub
dec
jecxz
out
cld
push
xchg
adc
fs
cwtl
sahf
mov
pop
into
in
jbe
cltd
xchg
fld
lods
nop
je
fbld
dec
and
enter
lea
lds
mov
jne
cli
xor
mov
rol
leave
sti
sbb
pop
sub
add
xchg
xchg
enter
fidivs
lea
mov
cltd
clc
cld
sbb
fldenv
popa
jle
pop
add
rorb
fsts
sub
out
outsl
inc
adc
shr
cmc
daa
adc
popf
sub
notl
outsl
push
xor
xchg
sti
out
adc
cmp
or
xchg
and
mov
pop
stos
mov
shll
and
inc
cli
jecxz
mov
je
fildll
aas
sub
inc
xor
xchg
xchg
popf
jg
inc
popa
jle
jg
push
mov
sbb
aad
sbb
or
stos
std
nop
cmp
push
mov
ds
iret
test
and
jge
xlat
sbb
aam
shl
xor
jo
cmpsb
xchg
push
mov
cwtl
mov
xchg
ret
adc
and
cmp
mov
popa
repnz
pop
imul
mov
xchg
xchg
lret
dec
movsb
or
hlt
xchg
xor
je
jae
outsb
shr
push
std
cmp
xor
dec
insl
sub
negb
out
dec
or
sub
out
and
sbb
xchg
mov
cli
mov
mov
xlat
mov
lock
inc
mov
aaa
out
xlat
jp
add
shl
mov
add
add
xchg
bound
and
add
pop
inc
imul
das
fcmovb
and
decb
sub
and
decl
fldl
lahf
ds
stc
push
inc
outsl
xor
and
lods
add
mov
cltd
inc
jbe
mov
out
les
or
cmp
mov
cmc
test
int3
jo
cmove
lods
sti
add
addr16
inc
cmp
adc
push
adc
daa
inc
movsl
ss
cmp
sub
scas
jae
sarl
mov
arpl
lds
icebp
or
jns
repnz
inc
clc
sbb
in
mul
ds
xchg
inc
adc
jbe
pusha
repz
outsl
pop
dec
xchg
jo
shlb
sbb
cmpsl
add
ret
outsl
xor
jp
mov
cmpsl
adc
je
inc
repnz
lock
mov
xchg
in
push
sahf
inc
aad
pop
pop
xor
aas
leave
mov
test
das
dec
imul
add
insl
xchg
loopne
movsl
rolb
add
mov
mov
jns
jp
lods
or
mov
jno
nop
movsb
lds
jle
lods
shl
push
jne
mov
dec
adcb
in
xor
lret
inc
daa
sbb
push
pop
aaa
jl
fxch
xor
ljmp
call
push
pop
sbb
ja
jbe
outsb
xchg
inc
sahf
xchg
mov
fistps
ja
mov
fs
mov
mov
bound
add
insl
xchg
sti
push
xor
or
mov
shll
lods
sbb
push
mov
jg
pusha
adcb
push
jg
xor
aad
lock
or
mov
xchg
int3
pop
or
mov
and
lods
mov
mov
testl
push
mov
cmp
enter
cs
bnd
jbe
sbb
push
loop
stos
popf
lahf
jns
scas
jo
add
shrl
pop
dec
shlb
xor
inc
in
jl
lds
lods
out
fcompl
aas
mov
loope
push
fwait
outsb
push
mov
dec
fiadds
clc
insl
adc
ret
insb
lret
imul
bound
sti
call
sti
test
sbb
scas
das
mov
stos
pop
fildll
andb
sbb
inc
test
or
iret
lods
sbb
nop
add
leave
fidivs
dec
pop
addr16
xor
loopne
gs
rclb
out
push
jg
xor
ljmp
cs
cmpl
xchg
cmp
ljmp
hlt
add
sub
xchg
add
adc
xor
pushf
cwtl
and
xchg
std
cmpsb
flds
mov
cmc
adc
jo
dec
pop
mov
fidivrl
and
les
repz
test
ret
gs
in
notb
fnstenv
faddp
sbb
inc
push
mov
dec
in
mov
into
cmp
xor
jecxz
sbb
pop
sbb
in
test
xor
test
xchg
test
sahf
jns
imul
je
insb
inc
push
pop
icebp
hlt
sbb
stos
mov
out
imul
or
dec
orl
mov
or
dec
mov
jle
add
subl
and
aas
sbb
clts
jo
push
push
xor
and
adc
ret
adc
sub
cwtl
fs
and
adc
pop
xchg
jno
imul
and
sub
mov
fisubl
add
jo
mov
pop
decl
jae
loop
cmpsl
push
mov
pop
xor
xchg
adc
cmp
and
sahf
out
lods
xor
inc
mov
and
mov
jmp
push
movsl
sbb
jne
pop
inc
test
arpl
es
and
dec
lcall
push
je
es
push
ret
inc
mov
mov
jns
popf
lret
or
test
insl
sbb
xchg
outsb
mov
stos
mov
push
xchg
aaa
stos
inc
push
dec
sbb
jl
mov
adc
xor
stc
sbb
inc
andl
arpl
fucomp
out
or
or
fstpt
gs
negl
add
pop
mov
mulb
cmpb
or
rcrl
outsl
xchg
loopne
pop
inc
stc
add
gs
push
std
repnz
int3
imul
sub
imull
lods
rcll
test
inc
xor
jg
jmp
mov
je
daa
xchg
dec
pop
iret
pop
or
fsubrp
scas
outsb
aad
test
push
outsl
mov
mov
mov
mov
push
pop
push
mov
or
aas
mov
jbe
add
push
cltd
fisubs
cmp
js
mov
out
fnstcw
cwtl
lret
mov
jp,pn
adc
pushf
jecxz
movd
popa
xlat
mov
push
leave
sub
fdivrl
ret
xlat
mov
in
sub
stos
out
push
mov
imul
notl
sub
lds
in
xor
add
rcll
mov
pop
outsb
cld
mov
stc
add
into
das
icebp
pop
ja
xor
xor
cmp
mov
leave
std
or
jne
mov
inc
hlt
enter
cld
jno
push
xor
out
clc
inc
cmc
divb
xchg
pop
mov
enter
push
mov
push
mov
inc
push
inc
add
jg
in
test
sub
test
je
aam
and
mov
fcoms
int
push
imul
mov
lock
mov
inc
xchg
inc
sub
data16
mov
xchg
cmpsl
and
movsb
push
cmp
mov
pop
jg
fimuls
fcmovne
je
jb
out
call
push
mov
push
dec
aaa
jae
aas
jge
scas
xchg
xchg
cmpsl
loope
cmpsb
push
xchg
into
popa
xchg
daa
iret
or
sahf
dec
push
int3
out
dec
jae
lret
jp
push
lock
xor
popa
jno
mov
imul
pushf
pop
add
roll
pop
dec
movsb
daa
aad
arpl
jne
lret
loopne
xchg
loopne
cs
pop
jae
js
and
mov
xchg
jns
bound
mov
xchg
cmp
dec
mov
cld
mov
in
push
sub
cmc
sub
je
sbb
cmc
add
nop
dec
test
mov
mov
cmpl
adc
mov
pop
mov
ror
jo
incb
int
mov
mov
into
imul
push
fwait
push
loop
cmpsb
jmp
out
push
add
mov
pop
mov
call
jecxz
xchg
adc
int3
iret
leave
and
add
mov
inc
mov
fiaddl
sub
and
adc
pop
jg
inc
iret
lret
out
lcall
push
inc
mov
xchg
repnz
mov
mov
movsl
mov
imul
leave
aam
add
xchg
pop
cld
xor
fbstp
mov
mov
inc
fwait
in
xchg
fidivl
cli
mov
inc
fcoml
fmuls
testb
mov
mov
mov
mov
mov
mov
mov
xor
add
pop
leave
ret
push
mov
sub
mov
sbb
mov
adcl
xor
movl
cmpl
je
cmpl
jge
jmp
call
mov
dec
mov
jmp
mov
add
movl
cmpl
je
cmpl
jg
jmp
pushl
call
cmpl
jne
xor
or
dec
mov
mov
dec
mov
jmp
movzwl
mov
sub
mov
movb
lea
mov
mov
mov
xor
subl
add
subl
mov
and
movl
push
andl
mov
inc
mov
cmpl
jg
jmp
push
push
push
push
push
push
push
pushl
push
call
cmpl
jb
movl
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jb
jmp
push
push
pushl
pushl
push
push
call
cmpl
jne
mov
inc
mov
jmp
mov
push
mov
xor
mov
push
add
jmp
notl
mov
movl
mov
inc
movl
cmp
movl
jb
subl
mov
xor
add
movl
jmp
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jg
jmp
call
jmp
mov
addl
xor
mov
orl
add
movzwl
mov
mov
sub
mov
mov
orl
movzwl
adcl
xor
xorl
add
mov
movl
mov
inc
mov
mov
cmp
jne
sub
mov
xor
mov
movl
cmpl
je
cmpl
jl
jmp
push
push
call
cmpl
jne
xor
xor
dec
mov
xor
add
dec
mov
jmp
xor
movl
cmpl
je
cmpl
jg
jmp
push
push
call
mov
dec
mov
jmp
add
xor
mov
mov
xor
add
and
mov
movl
cmpl
je
cmpl
jge
jmp
pushl
call
mov
dec
mov
jmp
movl
movl
cmpl
je
cmpl
ja
jmp
pushl
push
pushl
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
movl
adc
movl
mov
adc
mov
movzbl
add
mov
mov
mov
movl
cmpl
je
cmpl
jl
jmp
pushl
push
push
pushl
pushl
push
push
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
xor
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jle
jmp
call
jmp
add
mov
mov
mov
movl
je
andl
jmp
xor
xor
inc
mov
cmpl
jae
cmpl
jl
jmp
pushl
pushl
pushl
call
jmp
mov
mov
add
mov
mov
xor
sbbl
xor
addl
sub
sub
sbb
xor
mov
add
mov
mov
lea
mov
mov
xor
mov
andl
add
adcl
imul
orl
mov
andl
mov
inc
mov
cmpl
ja
jmp
pushl
push
pushl
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
movzwl
sub
mov
add
sbbl
and
mov
xor
or
adc
mov
andl
mov
andl
add
movl
or
andl
mov
and
mov
movl
cmpl
je
cmpl
jl
jmp
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
sub
sbb
add
subl
mov
movl
cmpl
je
cmpl
jbe
jmp
push
pushl
pushl
push
call
cmpl
jne
xor
or
dec
mov
mov
dec
mov
jmp
mov
mov
add
addl
xor
xorl
mov
andl
mov
inc
mov
cmpl
jg
jmp
pushl
call
cmpl
jb
mov
xor
add
jne
jmp
mov
sub
xor
mov
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
lea
mov
mov
mov
add
imul
mov
mov
mov
add
and
mov
mov
mov
add
or
mov
mov
mov
sub
add
mov
mov
mov
add
xor
mov
mov
xor
add
jne
jmp
push
pop
push
js
pop
imul
cmp
jnp
mov
jnp
cltd
loope
sbb
imul
lret
or
popf
jae
out
je
outsl
push
mov
out
cmp
mov
les
cli
insl
imul
les
and
and
cmc
cs
adc
inc
test
pop
push
jmp
imul
jmp
inc
les
test
xorb
fmull
fisubl
mov
pop
sarb
int
loop
cs
test
ret
leave
shl
or
test
mov
rorl
daa
adc
cltd
aad
dec
jne
stc
cmp
movsl
std
mov
testl
jg
fsts
mov
sbb
shld
cmp
aas
cmpsl
out
push
inc
test
icebp
rcll
push
inc
daa
mov
inc
daa
rcrb
mov
out
push
xchg
lahf
into
cmp
cmc
fidivrs
pusha
push
std
loopne
outsb
jle
or
jmp
push
adc
js
xchg
divb
mov
jp
xlat
dec
cmp
xchg
add
xor
test
jno
aas
bound
xchg
sub
mov
leave
jle
inc
dec
scas
push
push
or
movsb
cmc
mov
jne
cs
je
or
sbb
pusha
adc
rorb
int3
add
nop
and
lea
ret
aam
push
pop
push
out
mov
inc
mov
sbb
and
lcall
ret
sbb
ficoms
leave
imul
or
pop
fwait
outsb
push
scas
adc
or
je
add
inc
stos
and
push
loopne
mov
sbb
arpl
ror
mov
pop
sbb
inc
push
sbb
jno
jmp
inc
out
add
jbe
jg
xchg
adc
jbe
lcall
dec
mov
add
ljmp
mov
push
dec
jecxz
rcll
imul
lret
jbe
mov
lods
cmc
loope
lods
mov
cltd
add
jo
cld
pop
clc
lea
sbb
push
fldt
cltd
mov
cmc
popa
mov
mov
mov
int3
pop
repnz
cld
lea
fwait
sarl
bound
mov
arpl
bound
and
push
icebp
adc
xor
fmuls
jl
inc
add
sbb
fs
pop
loope
movl
insb
lret
rol
mov
data16
into
sub
inc
push
cmp
icebp
lods
icebp
push
call
cmp
ds
push
nop
mov
jne
xchg
push
nop
cli
mov
xor
lods
dec
mov
sub
dec
mov
shll
or
jb
loop
lods
outsl
add
cmp
mov
movsl
cmp
repz
sbb
arpl
pushf
jp
mov
sbb
das
xor
lahf
inc
mov
jae
jl
pop
cmp
or
pop
in
insb
adc
mov
add
add
lock
cmp
and
jae
adc
iret
cwtl
imul
pop
test
ds
pop
mov
lock
adc
jge
mov
cmp
add
stc
xchg
push
mov
in
cmp
addr16
mov
pop
add
mov
pop
les
add
push
ret
xchg
dec
fadd
inc
xorl
or
xchg
subl
lea
out
mov
jge
aas
add
sti
push
add
push
je
jecxz
pop
rcrb
xor
mov
aad
pop
cli
pop
arpl
jo
shll
and
jno
cwtl
inc
cmp
fmuls
xchg
push
push
pop
hlt
push
loopne
add
and
not
mov
xor
adc
adc
out
ljmp
mov
mov
nop
adc
sbb
mov
pop
inc
pop
enter
pusha
add
cmc
xchg
or
xchg
jnp
push
pushl
test
pop
dec
adcb
or
jne
add
adc
call
push
fildl
jb
sub
int3
out
jns
in
and
pop
loopne
cmp
xorb
xchg
xchg
lret
imul
pop
addb
fistpl
in
loop
aas
lret
mov
pop
adc
fs
je
push
int
lea
in
rclb
adc
inc
mov
jl
sbb
lods
mov
out
mov
mov
cmp
xchg
jb
pop
mov
enter
xchg
daa
cltd
xchg
and
add
jmp
into
repz
mov
aam
jb
mov
dec
lods
mov
jmp
ss
add
bound
cwtl
cmp
out
cld
int3
enter
xchg
mov
push
pop
sbb
xchg
test
outsb
sub
in
mov
ss
jmp
dec
xchg
sbb
xchg
enter
jbe
dec
inc
orl
sti
int3
adc
adc
repnz
xchg
and
scas
subl
out
hlt
or
das
pop
push
das
in
int
into
ljmp
dec
mov
lods
push
push
or
mov
lods
divl
dec
addr16
mov
shl
scas
dec
lret
popa
add
sbb
push
mov
aaa
pop
repnz
sbb
xor
ret
call
mov
es
cltd
lahf
test
dec
mov
dec
adc
sarb
das
repz
dec
xchg
daa
into
fists
cmp
pusha
cmc
mov
testb
filds
movl
mov
imul
test
sub
sbbl
ja
popf
pushf
dec
push
imul
sbbb
lods
cld
clc
leave
js
inc
sbb
std
cs
cmp
xchg
mov
mov
sbb
dec
cmova
dec
dec
push
jl
mov
jp
dec
adc
clc
aad
cmp
pop
lcall
mov
cmp
and
idiv
fildll
adc
and
and
mov
cmp
ret
jmp
scas
aad
push
pop
aas
jmp
scas
xlat
dec
xor
adc
dec
or
inc
cs
cltd
imul
imul
jb
cs
and
movsl
xor
mov
jne
add
in
mov
inc
or
repz
cmpb
xor
outsb
hlt
push
movsl
and
das
push
je
sarb
fdivrs
push
pushl
jbe
jne
sub
cld
fimuls
cmp
cld
mov
inc
sub
inc
js
insl
test
nop
inc
push
loope
cmpl
xchg
mov
ret
into
lret
xchg
inc
clc
hlt
fwait
sbb
movb
ja
or
pop
and
popl
inc
jbe
in
xor
scas
adcl
mov
lcall
fcompl
add
xchg
shl
jae
jmp
popa
add
stc
icebp
and
mov
cmp
mov
lods
sbb
movsl
mov
loopne
mov
or
push
nop
sbb
mov
arpl
cmp
aad
addl
rorl
lods
mov
dec
fcomp
int3
or
mov
mov
dec
ficompl
addr16
stc
adc
sbb
add
mov
cld
out
lods
jbe,pt
cs
ja
sti
jp
pop
cmc
jp
xchg
sarb
and
inc
lcall
adc
cmpsl
into
cmpb
testl
mov
insl
xchg
and
and
nop
testl
insb
xlat
xchg
mov
loope
push
xorl
pop
jnp
loop
stos
add
dec
pop
das
fcompl
lock
enter
push
pop
sub
outsl
add
daa
fs
nop
addr16
jns
adc
lods
jbe
adc
xor
movsl
pop
add
add
or
inc
sub
pushl
repz
movsb
or
stos
mov
inc
add
inc
daa
andl
aas
ljmp
pusha
into
pop
mov
out
xor
jge
adc
inc
mov
pop
outsl
push
adc
lds
or
pop
mov
push
xchg
mov
fs
popf
stos
sub
outsb
rorl
xor
mov
push
inc
push
out
or
xchg
pusha
lock
add
inc
hlt
or
ret
dec
shll
xchg
sbb
mov
jp
adc
inc
xor
xchg
sti
mov
arpl
inc
sub
mov
lds
dec
lret
jne
cmp
xorb
aaa
mov
dec
add
sahf
inc
pop
inc
inc
or
lahf
sub
push
push
fdivs
in
cmp
sahf
dec
out
dec
les
or
cmpsl
xorl
jo
sub
mov
cmp
jmp
lods
cmpsl
push
sti
pop
cli
ret
in
aad
mov
aas
cmpsl
aaa
mov
clc
loopne
sbb
outsb
pop
outsb
rorb
xchg
rcrl
test
jle
xchg
call
lock
nop
popf
aas
sbb
lods
xchg
jle
xlat
mov
sub
sysenter
out
mov
add
jbe
xor
aaa
into
cmpsb
mov
clc
testl
addr16
fsubrs
adc
pop
addr16
leave
mov
push
lods
imul
repz
sahf
xchg
lods
aam
or
fmull
mov
cmp
adc
insb
or
leave
gs
sbb
popa
insb
subb
or
xor
test
cli
xchg
into
decb
fcomp
pop
mov
int3
or
or
sub
repz
cmp
sbb
ficoms
sbb
cwtl
inc
insl
push
xor
mov
ljmp
popf
mov
xchg
fbstp
popf
test
xchg
loop
lcall
dec
add
push
pop
adc
mov
test
pusha
pusha
jne
cmpsl
pop
cmp
into
stos
jl
xor
ror
push
pop
sarl
shrb
aam
xchg
das
les
push
mov
mov
add
pop
xor
mov
pop
push
movsb
jno
bound
test
pop
or
jo
shlb
mov
rcrb
aam
push
or
xchg
cld
cli
xor
lds
cmpsl
pop
jge
js
sub
arpl
and
jg
pop
sahf
xchg
int3
lods
cmpsl
out
mov
jg
pop
icebp
mov
aam
inc
fcoml
mov
adcb
stos
lock
sub
scas
jbe
push
out
out
sar
xchg
insb
add
xchg
jne
xor
cmp
sbb
jno
push
das
test
xchg
mov
or
mov
sbb
negl
cmovge
aas
sbb
aam
push
sub
xchg
dec
add
xchg
inc
movsl
xlat
clc
mull
cmc
into
in
test
and
jae
adc
sub
cmp
add
xchg
and
frstor
push
aas
lahf
or
cltd
sbb
and
cmp
sbb
ds
jle
push
leave
stos
loopne
fcom
imul
bound
jle
dec
xor
lods
sti
jg
xor
pop
push
fistl
test
adc
and
dec
ss
pop
cmc
mov
cmc
out
int
ljmp
mov
and
iret
inc
cmpsl
iret
push
lods
push
mov
inc
aas
jp
jae
lods
add
or
test
inc
push
insl
pop
inc
inc
and
jbe
dec
mov
cmp
mov
or
push
outsl
dec
decb
mov
jmp
mov
dec
decl
or
sbb
fisttpl
cwtl
pop
mov
ja
sbb
mov
push
aam
sbb
inc
push
or
popf
or
jbe
outsl
mov
sub
pop
add
jl
sti
add
sub
or
mov
sbb
jns
iret
sub
gs
int
enter
push
xor
ljmp
or
lock
or
adc
int3
add
sahf
scas
add
fistl
pop
add
int3
loope
add
push
dec
xchg
jne
mov
int
jo
inc
cld
mov
mov
mov
sbb
push
ds
nop
push
push
jg
lahf
fwait
lret
mov
rcll
jo
xchg
sti
mov
repz
cs
gs
cmp
das
in
mov
cmp
test
push
or
out
lret
data16
push
in
jle
pop
lods
out
or
or
jle
and
daa
adc
jb
cltd
sbb
das
cmpsl
jne
cmp
sub
out
mov
aad
imul
xchg
jecxz
xchg
popf
loope
mov
mov
adc
iret
testb
dec
xor
cmp
xor
xor
dec
lret
inc
lahf
mov
or
fisubs
cli
mov
dec
inc
test
push
adc
aad
pop
inc
push
fnstsw
pop
jecxz
mov
dec
sbb
add
ret
add
mov
gs
movsl
and
mov
inc
lahf
add
jbe
nop
aad
in
cmp
loop
dec
cmp
lea
sti
shrl
rcrl
int3
add
sti
js
jae
out
loope
int3
fcomps
ljmp
push
imul
jle,pn
imul
or
xchg
jl
sub
mov
push
mov
xor
dec
push
jo
pop
dec
xchg
in
dec
ret
push
or
in
or
adc
jmp
mov
and
decb
std
jmp
or
pop
bound
test
add
imul
movsw
bound
sbb
fldenv
or
dec
xchg
shr
dec
pop
push
dec
mov
mov
dec
repz
jmp
shlb
out
jne
stc
cwtl
out
iret
push
mov
in
push
cltd
push
dec
mov
sub
out
jbe
andb
fcompl
push
cwtl
push
dec
pop
mov
iret
bound
aam
cmp
jb
jecxz
adc
or
jns
test
and
cmp
testl
and
rcrb
arpl
sub
sub
rorb
or
dec
mov
sub
cmp
lahf
or
outsb
mov
repnz
push
inc
leave
push
jns
xchg
jmp
mov
packuswb
cmp
push
jns
mov
pop
cmc
imul
fists
out
or
pushf
lds
sub
jg
or
jae
mov
ret
sbb
ret
mov
mov
mov
cmp
sub
dec
jbe
jl
fsubrl
enter
or
or
shrb
shlb
lods
inc
inc
jge
out
les
mov
bound
stc
rorl
dec
sbb
mov
adc
add
idivb
fyl2xp1
shl
inc
lcall
cmc
ret
xchg
push
jl
aaa
dec
data16
stos
aad
inc
fildll
push
test
xchg
push
sub
imul
lods
push
pusha
inc
push
stos
push
add
outsl
ror
gs
push
testl
mov
andb
inc
inc
inc
jmp
popf
es
mov
jl
into
icebp
loope
or
scas
enter
cmpsb
test
popa
sbb
sub
pusha
das
movsb
mov
jbe
and
cld
sbb
inc
dec
push
mov
xor
fxch
add
mov
cld
dec
cmp
jg
mov
pop
stos
cmp
push
fucomp
sub
or
test
addr16
mov
inc
mov
neg
mov
or
fwait
push
dec
push
mov
rcrl
mov
lds
imul
lea
int
insb
repz
xchg
inc
push
fbstp
pop
ja
inc
mov
jg
jecxz
mov
popl
fisubl
jne
test
stc
and
stos
std
out
sarb
or
mov
popa
bound
dec
jmp
cmp
loop
jns
pop
in
fs
lods
lds
jge
sub
cli
out
mov
ljmp
fisttps
sbb
das
add
mov
or
push
inc
dec
lods
sbb
mov
popf
test
push
pop
cmpsl
jmp
xchg
aam
pusha
mov
test
rorl
subl
jb
shll
int
jo
mov
test
negl
out
cmpsb
je
cwtl
decb
adc
sub
das
xchg
roll
add
push
fsubrl
ret
sub
push
lds
push
mov
sbb
sbb
pushf
inc
mov
daa
jnp
je
add
dec
inc
ss
sub
xchg
lods
sub
jno
add
push
loope
or
test
jle
pop
cmp
aam
and
mov
rcl
loopne
out
aaa
aam
mulb
adc
je
insb
adcb
or
dec
mov
jnp
popf
lock
or
push
iret
push
gs
mov
mov
push
adc
aam
adc
rorb
or
mov
or
aaa
jl
push
movsb
cmpsb
out
xchg
arpl
jbe
jl
lcall
dec
mov
stc
push
cmp
or
dec
add
loopne
push
faddl
aaa
and
mov
pop
adc
mov
pop
das
dec
and
hlt
mov
mov
or
mov
xchg
in
hlt
push
es
lods
hlt
push
or
inc
iret
push
push
ljmp
mov
and
dec
mov
in
addr16
sbb
sbb
mov
mov
or
or
mov
xor
jo
int
cmpsb
scas
out
jne
xor
in
or
pop
ljmp
xchg
mov
scas
ds
sub
dec
dec
mov
out
dec
and
sbb
int
lret
insl
mov
jae
lods
out
add
lret
and
adc
inc
dec
mov
cltd
xchg
adc
mov
mov
cmpsl
roll
mov
lea
cmp
int
pop
pusha
sub
mov
call
lock
scas
push
int3
jo
inc
and
and
dec
and
jmp
cmpsl
ret
push
mov
in
ficoms
mov
inc
pop
rcrl
testb
or
xchg
hlt
ss
les
mov
sub
mov
xor
mov
fadds
out
jg
jnp
mov
jge
enter
jecxz
or
lock
jge
bswap
jnp
push
sub
sbb
mov
sbb
cmp
popf
negb
sbb
add
inc
dec
inc
fbstp
dec
fstps
push
stos
adc
clc
add
pusha
inc
outsb
aaa
aas
sbb
subl
arpl
out
mov
cmp
xchg
push
lds
pusha
push
add
hlt
or
int
jnp
jne
or
jg
mov
rcrl
xchg
imul
out
popf
mov
cld
sahf
add
in
outsl
sbbl
cld
xchg
pop
jae
popa
ja
les
push
mov
cmp
inc
jl
lcall
lea
push
xor
dec
out
xchg
insl
mov
bound
mov
pop
outsb
xor
and
out
in
push
mov
stc
neg
mov
jge
out
cs
or
mov
int
xchg
stc
cli
lods
arpl
stos
popf
inc
mov
fwait
into
lret
mov
push
and
xor
arpl
inc
scas
sub
push
scas
dec
leave
dec
aaa
popa
test
pop
rcl
enter
pop
subb
in
imul
and
aaa
jl
dec
xchg
inc
jecxz
movsl
adc
fdivrl
jnp
mov
call
mov
dec
xor
jl
imul
std
fadds
gs
pop
adc
xlat
sbb
xchg
ljmp
stc
adc
sbb
add
mov
adc
std
cmp
cmpsl
loop
xchg
je
ret
jge
xchg
ljmp
mov
nop
mov
pushf
xchg
mov
add
rorb
xor
shll
and
pop
sarb
imulb
jns
push
adc
pop
sub
xor
sti
iret
adc
dec
adc
aas
xor
ds
arpl
ret
mov
hlt
sub
add
or
cmpsb
addl
popf
add
lods
add
push
push
cwtl
dec
cmp
sbb
je
mov
hlt
mov
sub
xor
in
idiv
pop
mov
dec
adc
mov
movsb
imul
push
loop
fcoml
dec
jae
ror
or
daa
stos
clc
sbb
xchg
das
cld
pop
leave
adc
clc
push
daa
clc
ret
lea
in
jne
adc
mov
dec
add
mov
xor
push
je
mov
scas
xlat
jg
out
jnp
es
push
dec
xor
es
add
pop
cld
pop
rclb
cmpsl
cmp
jnp
enter
cmp
fisttpl
repnz
xchg
iret
mov
inc
and
cmpxchg
test
add
jle
jb
sub
mov
sbb
fildll
scas
xor
incb
or
fldcw
loop
stos
js
test
aam
out
ss
cmc
pop
jge
std
and
ja
inc
mov
or
sbb
or
insl
cs
and
cmp
xchg
and
add
cmc
push
jl
cmp
shll
pusha
mov
in
adc
fldl
xchg
cltd
push
mov
lods
lahf
sbb
into
xorl
push
adc
xchg
idivb
or
dec
jne
jge
mov
jno
scas
cwtl
cmpsb
loop
push
sub
lods
and
pop
pushl
bound
pop
lret
out
out
mov
cmc
pop
pop
sbbl
push
shr
jnp
idivl
cmp
cmp
cmp
enter
mov
insl
mov
mov
fsubrl
aas
mull
ds
mov
pop
addr16
push
push
jne
push
cmp
and
pusha
and
out
in
sti
stos
je
aas
sub
ret
inc
push
lods
sub
pop
mov
jmp
cmpsb
into
mov
orb
xor
aas
lods
sbb
pop
movsb
int3
cmp
insb
lea
jg
sbb
ret
shll
subl
pop
mov
inc
jl
xor
adc
sub
sbb
push
pop
push
push
pop
movsl
int
push
xor
out
mov
loop
pop
add
repz
or
sbb
popf
mov
cmc
add
mov
adcb
out
or
mov
les
xchg
andl
inc
in
lds
fstl
xchg
or
lds
jg
adc
mov
cld
push
pop
inc
add
out
dec
lea
dec
mov
in
insb
mov
pop
ja
imul
xchg
lds
and
mov
push
mov
lahf
sarl
and
push
or
addr16
sbb
cmp
imul
popf
ficomps
jne
pop
pop
mov
dec
shrl
and
into
sbb
add
lret
loope
stos
std
cmc
int
mov
pop
ds
lcall
pop
cmp
dec
test
lahf
loopne
xor
push
xlat
push
call
call
xlat
aad
test
mov
pop
stc
lock
int
cmp
mov
mov
inc
and
jo
roll
leave
mov
sub
inc
bound
mov
jns
loope
lret
adcl
test
std
sub
and
push
pusha
mov
pop
imul
movsl
test
out
fidivrs
jae
pop
add
mov
mov
jae
and
ljmp
loope
scas
loopne
xorl
cli
push
and
loop
sub
pop
stos
or
push
popa
cwtl
loop
inc
outsl
adc
sub
cmp
call
jno
jmp
popa
sub
enter
push
cmpsl
lods
dec
fnstenv
cwtl
xchg
dec
repz
mov
push
and
mov
mov
add
icebp
xor
pop
data16
scas
lods
inc
and
mov
cmc
repnz
xorl
mov
idivl
in
pushl
xchg
push
imul
leave
test
mov
dec
jg
mov
iret
mov
ret
push
xor
mov
xlat
rcr
ror
mov
and
or
and
js
and
mov
mov
pop
aaa
mov
test
mov
lret
rcrl
push
push
mov
jbe
add
or
dec
fldl
mov
pop
push
add
movsl
fwait
inc
js
and
es
repz
xor
dec
mov
xchg
jb
rorb
jo
out
sub
pop
fadd
and
jb
rcrl
xchg
mov
push
pop
fimull
xor
xlat
fucom
push
and
fiaddl
das
jnp
inc
cmc
push
into
mov
out
fldl
fisubrl
rorl
mov
add
or
out
ss
adc
mov
add
push
imul
loop
mov
sahf
xchg
pop
jnp
jl
cmp
adc
cld
sbb
es
cmp
scas
mov
pushf
jae
pop
adc
imul
loopne
pop
or
sbb
sbb
fcomps
movsl
inc
aad
subl
mov
push
jl
inc
gs
sub
push
addr16
ret
in
mov
or
adc
xchg
inc
push
mov
pand
nop
push
into
stc
lcall
push
jno
mov
xchg
pop
mov
add
or
mov
imul
inc
mov
cmpl
sub
mov
add
jne
lods
scas
not
xor
int
adc
or
push
outsl
jl
iret
sar
adc
jne
sbb
jne
mov
mull
imul
dec
or
xchg
fwait
test
push
ds
dec
rcrb
in
and
clc
loop
addr16
int
hlt
fsubs
int
mov
mov
insl
lock
pushl
cltd
addr16
test
jg
ds
mov
sub
and
test
push
mov
xor
adc
xchg
sbb
or
lea
mov
call
push
mov
sbb
ss
in
xlat
subl
ss
or
or
sahf
jb
sub
icebp
push
testl
cwtl
dec
aad
adc
inc
insl
mov
leave
idivb
lret
test
adc
inc
aam
mov
xchg
outsl
push
sub
stos
mov
rcll
mov
sub
mov
test
mov
sti
insb
dec
cwtl
lret
fbstp
enter
adc
test
pushf
mov
rcr
mov
out
in
pop
mov
mov
sbb
ficoml
inc
xor
jg
pop
pop
sbb
sbb
cmpsl
pop
jp
pop
xchg
xor
or
adc
xchg
sbb
popf
mov
fwait
sub
je
orb
push
dec
inc
adc
rorb
adc
sahf
imul
push
scas
and
int
ljmp
ja
popf
jmp
xor
ret
ja
data16
inc
adc
mov
in
scas
dec
shll
dec
sbb
mov
ja
xchg
cmp
push
add
xchg
push
fndisi(8087
pop
adc
sbb
dec
or
pop
sub
push
cmp
cmp
gs
flds
mov
fwait
jns
mov
push
cmp
in
cld
fnstsw
sub
adc
inc
mov
jmp
adc
dec
loope
pop
push
or
aad
ja
cmp
mov
push
test
fdivrs
xor
inc
insl
addl
into
mov
push
xor
push
push
int3
dec
adc
lret
aaa
sbb
sub
pop
test
adc
push
and
dec
xchg
jb
xchg
test
jmp
clc
int3
ret
mov
add
iret
lcall
push
add
jnp
pop
sahf
xchg
pushf
call
or
mov
mov
adc
test
data16
sbb
add
sbbl
fmul
mov
inc
push
sub
mov
mov
ljmp
mov
loop
mov
enter
mov
mov
aad
insl
call
mov
add
aas
jmp
in
xchg
outsb
in
stc
popf
jg
xchg
xchg
pushf
repz
arpl
cltd
je
push
mov
lret
add
xlat
daa
xchg
or
stos
sbb
testb
or
dec
jmp
iret
push
cli
cs
jns
pop
jb
xor
shl
adc
movsl
stos
shl
lds
out
les
adc
and
stos
sbb
xchg
into
lret
pushf
sbb
adc
sbb
pusha
ss
xchg
cld
push
aam
addr16
imul
mov
mov
mov
pop
adc
pop
cmp
dec
inc
fsubrl
cmp
test
inc
adc
pop
and
mov
cld
shrd
adc
cmp
outsb
roll
enter
les
aaa
cmp
js
lods
ds
xlat
jge
jp
dec
outsl
rcl
pop
cmc
push
push
xchg
dec
cmp
jne
leave
js
inc
test
cmp
pop
jae
pop
rorl
xor
push
sbb
stc
out
mov
dec
push
fnsave
out
call
test
cmp
dec
pop
or
or
dec
adc
lret
test
in
out
cmpl
sti
lahf
mov
cmpsb
lods
leave
and
outsl
adc
pop
xchg
mov
stc
out
pop
repnz
pusha
mov
and
mov
test
stos
mov
dec
ds
aas
fldt
sti
mov
fldcw
xchg
loop
lret
sbb
ror
pop
mov
pop
cmp
cmc
fsubrs
pop
lret
mov
dec
jne
xchg
lret
jl
or
enter
repz
mov
add
ss
mov
xchg
add
imul
jl
pop
int3
cmp
outsb
or
push
inc
inc
mov
popf
lret
jle
lret
call
stos
cmp
push
fidivl
cmpsb
mov
sti
mov
fbld
aad
push
dec
bound
push
das
sub
cmc
pop
or
jecxz
sbb
aam
mov
jmp
push
xor
pop
jae
xor
sbb
in
jp,pn
ffreep
fdivrs
dec
test
sbb
popl
leave
xor
cmc
and
test
or
popf
inc
xchg
and
sbb
and
cmp
mov
jg
test
out
dec
popf
cli
int3
lret
rol
push
adc
incl
fisttpl
pop
push
pop
mov
call
imul
and
jo
xchg
arpl
test
out
lcall
mov
mov
cmp
je
mov
mov
mov
mov
xor
cmp
jne
mov
mov
xor
movsbl
mov
xor
add
cmp
mov
mov
mov
je
xor
add
mov
je
mov
jmp
outsl
sub
xchg
divb
daa
mov
mov
adc
push
dec
xchg
jp
mov
jnp
jp
flds
xchg
pop
inc
add
push
imul
jb
pop
imul
jmp
fsubrs
push
add
mov
clc
mov
rcrl
popf
cmp
xchg
add
andb
push
in
ffreep
movsl
lock
mov
push
test
add
mov
or
jae
pop
xchg
add
shr
pusha
negl
jge
stos
sarb
jl
jne
or
ss
jmp
scas
mov
outsb
ljmp
bound
fwait
jo
mov
imul
mov
sub
inc
xlat
imul
int
out
mov
mov
shrb
fdivr
pop
pop
repnz
mov
dec
shr
paddd
xchg
mov
xchg
fisttpll
lret
sbb
cmpsl
lods
mov
xchg
dec
xor
mov
test
xchg
xchg
adc
mov
mov
daa
push
rcll
fbld
in
mov
movsb
cld
das
inc
cmc
cmp
call
jg
sub
ljmp
dec
and
mov
pop
iret
mov
mov
daa
arpl
jnp
movsb
cwtl
sub
dec
jnp
jno
mov
cmp
adc
cmovge
lods
mov
xchg
pusha
sbb
mov
incb
fidivl
cmpsb
mov
xchg
cwtl
icebp
fidivrl
inc
ja
xlat
jle
push
dec
cmp
xchg
add
and
cwtl
cmp
or
pop
mov
repz
mov
or
cmp
push
gs
xchg
shlb
pop
mov
gs
sub
add
pop
mov
xor
jl
mov
sbb
movsl
ljmp
dec
in
fstl
push
movsl
cmp
xchg
sarb
pop
mov
xor
dec
mov
sub
mov
mov
cs
clc
je
in
popa
lret
jae
bound
dec
dec
add
pop
loopne
mov
fisubs
out
xor
shlb
pop
das
aam
dec
mov
shrl
adc
inc
xor
popa
add
fisubl
inc
adcl
dec
inc
xor
and
pop
cmc
outsb
fildll
pop
movb
out
dec
adc
inc
mov
mov
popa
xorl
add
arpl
lret
movsb
push
ljmp
push
adc
mov
xor
add
dec
ljmp
pop
jecxz
addb
cmpsl
mov
mov
incl
popf
mov
adcb
push
arpl
mov
xor
and
mov
sahf
push
push
jae
je
clc
lahf
popa
in
pop
jnp
test
jnp
ljmp
dec
mov
ss
jg
fs
icebp
mov
repz
popf
movsl
out
push
adc
add
ror
lcall
xchg
pushf
das
jbe
jno
push
stos
push
mov
push
insb
adc
xchg
add
adc
mov
cltd
dec
insb
sbb
inc
stc
add
loop
xchg
inc
pop
aas
lret
fcoms
sub
add
repnz
xchg
pop
mov
roll
das
addr16
push
mov
adc
pop
adc
sbb
fsts
inc
test
sarb
lcall
fisttpll
leave
nop
cmpb
xchg
imul
out
jecxz
xchg
mov
je
mov
pop
out
xchg
in
clc
dec
or
xchg
jmp
xlat
mov
lcall
jle
jp
adc
add
jo
xchg
mov
adc
test
cltd
add
scas
and
sbb
push
mov
test
aaa
popa
mov
in
movzwl
sub
aaa
pop
push
mov
inc
shlb
je
ljmp
cmp
mov
hlt
imul
fcmove
call
sarl
mov
daa
out
int3
jne
frstor
das
pop
js
dec
sarb
std
loop
out
jns
rcl
test
in
sbb
pop
jge
inc
lahf
daa
pop
push
pop
int3
dec
and
mov
and
cmpsl
lret
jl
sbb
adcb
mov
sbb
add
mov
adc
fmull
dec
cmpb
adc
adc
dec
mov
adc
cmc
aad
sub
loop,pn
mov
je
sbb
push
std
mov
fisttps
stos
ja
lock
dec
iret
std
mov
loopne
dec
data16
movsb
out
sub
aaa
ljmp
mov
test
hlt
xchg
push
adc
addr16
lretw
push
jno
and
sbb
push
xchg
lea
mov
hlt
or
mov
lods
jl
xchg
pop
sbb
int
push
cld
gs
imul
movsl
xor
mov
insl
xor
scas
sub
std
out
push
cltd
dec
insb
inc
dec
dec
fs
imul
in
cmp
cmp
jecxz
fidivrl
cmp
xchg
mov
dec
push
stos
arpl
enter
pop
cmpsl
cmpl
mov
mov
test
sbb
cmpsl
scas
enter
sahf
fmull
sub
inc
push
fldl
fistpll
sub
int3
inc
mov
adc
mov
nop
and
in
scas
lahf
enter
bound
jl
in
outsl
push
popf
push
aas
les
push
loop
inc
repz
or
mov
lods
cmp
pop
lret
push
daa
jne
lret
add
pop
addr16
inc
ret
inc
sahf
sub
lods
jp
insb
fisubrs
cmpsl
adc
incl
fiaddl
sbb
cmp
rclb
xor
jecxz
xor
insb
rorl
aas
xchg
mov
push
imul
mov
sub
repz
mov
and
push
pop
mul
repnz
jle
mov
pop
inc
lret
dec
sbb
stos
mov
jb
sarb
lods
mov
je
jmp
add
push
jg
push
xchg
fcmovnu
sbb
stc
jp
mov
mov
xchg
js
subb
sub
sub
rcr
fwait
dec
mov
cli
hlt
adc
xorl
repz
lret
push
push
xchg
sbbb
daa
stos
sbb
mov
jno
pop
lds
xor
test
mov
pushf
mov
mov
add
dec
movsb
enter
fdivl
mov
into
stc
lods
imul
jns
sub
in
std
test
inc
xor
loope
mov
pop
test
mov
popf
jmp
or
mov
rolb
fsubrl
std
in
jnp
push
fisubrs
sub
nop
mov
xor
ret
mov
dec
lea
mov
stos
xor
out
cltd
or
lods
out
mov
ret
insl
push
loope
mov
xor
fisubrs
and
dec
lret
lcall
jo
dec
sub
pcmpgtw
cmp
icebp
nop
xchg
cltd
out
inc
push
cmpb
sbb
pusha
int
pop
ljmp
xchg
loop
pop
mov
sub
jle
xchg
pop
fstps
iret
push
adcl
adc
je
cld
pop
jmp
lods
loope
jp
fdiv
loope
dec
ret
sbb
movsb
lcall
fisttpl
pop
and
push
push
mov
jo
pop
pushf
mov
sti
xlat
mov
fcoms
in
insb
mov
loop
repnz
and
mov
movsl
outsl
outsb
out
shrl
es
fistl
add
or
addr16
mov
push
repnz
iret
aam
adc
popa
inc
sub
movsl
inc
pop
pop
pusha
ljmp
int3
inc
jbe
mov
mov
gs
test
jle
mov
pop
out
es
repz
in
mov
sub
push
ret
inc
int
mov
or
dec
xor
and
sbb
jno
std
inc
sub
jae
imul
inc
cmp
lahf
cmp
aam
jge
mov
cltd
fcomps
sub
jp
mov
stc
xchg
nop
notb
cmp
cmp
mov
out
dec
xor
inc
jmp
dec
xchg
call
sbb
cli
dec
lea
jl
test
lock
loop
test
dec
js
mov
sti
out
hlt
iret
pop
push
sahf
sbb
jl
cld
adc
rorb
mov
inc
jns
lret
or
je
insb
lds
repnz
aam
cmp
mov
or
adc
cmp
jns
cmp
es
cli
int
stos
dec
pop
or
mov
mov
aad
cli
mov
bound
add
jae
xor
rcr
pushf
scas
enter
out
jae
inc
jecxz
daa
test
sub
bound
test
hlt
dec
mov
mov
je
fnsave
jge
stos
enter
cmp
pop
lock
dec
int
fcompl
inc
stc
addb
lock
mov
loope
fwait
orl
hlt
or
add
sbb
mov
mov
stos
test
adc
mov
mov
mov
inc
data16
iret
mov
and
fiadds
jge
fisubl
arpl
and
inc
mov
or
setg
mov
or
fimuls
out
iret
xor
push
addr16
push
sub
call
repz
mov
xchg
test
test
add
mov
adc
inc
add
sti
dec
push
je
cltd
dec
movl
int
cmc
jo
jne
addr16
sub
ss
aad
into
cli
enter
cltd
sbb
lret
out
sub
jo
push
push
sbb
and
jl
ss
sub
adc
fisttpll
fdivrl
mov
add
idivb
pop
sub
gs
dec
add
push
pop
mov
xchg
ret
es
adc
inc
sbb
lcall
cmp
xchg
xchg
fistps
mov
cmp
push
jae
push
cwtl
clc
mov
loopne
jge
inc
in
mov
cmpsb
mov
ljmp
add
iret
sti
mov
les
sub
sbb
in
mov
in
addr16
out
mov
jmp
jp
mov
push
lahf
scas
xchg
xchg
rcll
arpl
lea
add
mov
pushf
insb
es
out
imul
xor
dec
mov
inc
cwtl
sub
stos
sbb
xchg
xor
std
push
sbb
das
cs
sti
test
in
adc
jns
faddl
add
mov
push
call
jb
dec
ret
inc
lcall
push
mov
loope
rorb
adc
sbb
mov
sarl
xchg
lock
xor
adc
xor
popf
xchg
and
call
pop
sar
mov
ss
sarb
out
xchg
aam
push
lea
or
daa
out
sub
ds
lret
pop
pop
stos
push
jecxz
movsb
add
icebp
aad
inc
popa
jae
pop
lods
mov
iret
ret
or
rorl
cmp
mov
fbstp
cmp
push
sti
pushf
aaa
cltd
mov
adc
movsl
cmc
jle
mov
int
mov
push
in
scas
pusha
stos
scas
movsl
inc
jmp
sbb
dec
pop
inc
jb
sub
dec
push
clc
aam
fiadds
mov
pop
test
out
and
xor
jmp
lret
inc
fwait
cmp
cmp
sub
sbb
sti
lahf
pop
outsl
or
sar
fdivl
fisubrl
sub
imul
clc
dec
dec
inc
insl
dec
loope
push
dec
push
mov
mov
pop
aaa
pop
xchg
or
fwait
jnp
xchg
ds
fdivrs
sub
fisubl
movsl
in
push
insl
test
std
mov
dec
out
fwait
push
mov
cmc
dec
std
hlt
lods
fsubs
ret
movsl
mov
das
mov
xchg
push
jl
mov
enter
sbb
jmp
xchg
stos
mov
mov
cmp
mov
jle
pop
inc
cmc
or
pop
cmp
and
pusha
pop
addr16
pop
hlt
insl
aad
mov
xchg
mov
xchg
in
jae
cltd
inc
adc
dec
cmp
das
dec
xor
adc
jns
nop
adc
das
cmovg
data16
test
sub
push
aam
stos
pop
sub
sub
add
inc
and
jle
pop
lcall
fidivrs
add
mov
and
int3
inc
pop
imul
fwait
xor
xchg
mov
inc
pop
mov
push
aaa
mov
pop
enter
icebp
xor
cltd
or
dec
xchg
pop
sub
jg
mov
mov
adcl
loopne
cwtl
lret
aaa
push
mov
and
mov
inc
jmp
mov
cmp
cmpsb
lcall
cmp
in
inc
pop
dec
lods
pop
mov
dec
ja
sahf
push
lock
sub
mov
lods
inc
mov
ret
push
sarb
aam
jbe
sti
mov
fisttps
and
add
nop
push
adc
pop
aad
fwait
adc
jb
push
or
cmp
jo
push
scas
fbstp
stc
cltd
sbb
popf
pop
rolb
dec
mov
pop
movsl
ss
arpl
xchg
cmp
repz
bound
push
pop
jne
jg
cwtl
jo
mov
dec
ja
movsb
lock
mov
adc
or
fmull
mov
into
or
rorl
add
jl
xor
lret
orl
fimull
cltd
sarl
jne
xchg
or
xor
jp
pop
and
mov
sub
xor
mov
mov
dec
dec
bound
dec
pop
push
test
rorb
mov
cmp
aaa
push
shll
sbb
lock
inc
pop
jae
ficoms
or
fimuls
je,pt
movsl
sub
insb
std
pop
xchg
push
sub
xor
mov
inc
push
push
cmp
sbb
test
xchg
setp
out
mov
leave
in
xchg
xcrypt-ofb
cmpsl
outsb
aas
popf
mov
fcompl
addb
push
lcall
dec
pop
les
mov
push
pop
out
stc
adc
cwtl
adc
repz
cmp
xor
into
aam
mov
cltd
sarb
pop
mov
sbb
and
push
mov
xor
das
xor
imul
mov
push
bound
sbb
lods
xchg
mov
cs
or
dec
push
add
add
hlt
movsb
adc
mov
out
sub
jl
das
sbb
pop
aad
addr16
xchg
jnp
scas
data16
popf
sbb
sbb
mov
xor
jb
xchg
jmp
cmpsb
cltd
xor
mov
adc
pop
dec
lock
hlt
pop
pop
lea
in
mov
in
mov
lods
out
sarb
dec
aad
pushf
push
lock
popf
fiadds
pushw
cld
and
pop
jmp
sub
jmp
insl
dec
or
ja
dec
pop
pop
cs
mov
xchg
pop
xchg
jno
cmpsl
cmp
aad
inc
adc
lahf
mov
inc
std
or
and
pop
inc
fwait
clc
dec
xor
aam
scas
fimull
cwtl
cmp
lahf
and
lea
inc
mov
insl
jns
stos
pop
jg
push
xchg
push
call
jae
in
imul
decl
cmp
adc
jge
andb
jnp
and
adc
xchg
scas
pushf
ffreep
dec
push
scas
insl
in
xchg
jo
sub
push
stc
aad
cltd
repnz
repnz
mov
xchg
xchg
dec
sahf
subl
ret
cmp
nop
imul
test
stc
adc
push
mov
pop
imul
fists
mov
or
stc
dec
cmc
cmp
mov
cmpsb
and
pop
jne
or
mov
ret
les
push
adc
xchg
lcall
loop
cli
push
addb
aaa
stos
adc
jnp
call
sbb
lock
dec
mov
push
loopne
mov
insb
pop
cmpsl
mov
adc
in
lret
imul
sbb
mov
subl
int
movsl
xlat
inc
testl
stos
dec
cltd
daa
fnstcw
cs
lock
xor
sub
mov
jmp
push
push
iret
sub
xchg
js
hlt
and
test
xchg
jl
mov
fwait
push
or
inc
fs
or
shlb
cmp
iret
cmpsb
aam
fisubl
jne
sti
mov
sbb
mov
add
mov
loop
lds
out
in
imul
and
in
push
aad
and
xchg
bound
test
adc
cs
dec
xchg
dec
and
sbb
popf
popa
and
sub
ss
movsl
and
sbb
subl
mov
cmp
stc
sahf
sub
dec
ja
pop
sahf
ss
mov
mov
cmp
mov
inc
addr16
outsb
aaa
mov
ret
push
mov
and
push
lcall
mov
jge
adc
orb
movsl
xlat
mov
es
adc
or
lret
mov
xchg
push
pusha
les
sbb
stos
fldl
mov
rcr
cs
sub
push
mov
push
dec
adc
add
and
cmp
mov
add
loop
movsb
mov
add
daa
fidivs
jno
xchg
pop
sbb
loopne
scas
xchg
or
int
movsb
mov
idiv
adc
mov
jae
loopne
sub
pop
stos
cmp
ds
outsb
xchg
popf
mov
daa
test
push
mov
in
mov
cmp
add
mov
aad
pop
or
mov
sahf
ret
in
pop
clc
and
push
sti
dec
in
dec
test
and
cwtl
cli
pop
sahf
jo
out
jnp
inc
hlt
icebp
mov
or
adc
xchg
mov
jecxz
arpl
adc
mov
lcall
cmp
enter
xor
sbb
sub
loop
popf
mov
and
push
lods
mov
lahf
jl
xchg
ja
or
adc
inc
sub
outsb
imul
shrb
out
or
je
xchg
outsb
loop
jp
push
or
imul
adc
or
sub
bound
ret
cwtl
outsl
mov
out
testb
xchg
jl
cli
jnp
adc
mov
push
fildll
xchg
push
ja
add
leave
call
nop
mov
dec
stos
dec
mov
xor
jl
push
ret
shrl
cmpsb
test
cmp
lods
cmp
imul
jecxz
jmp
jle
jbe
adc
xor
lea
xchg
jbe
imul
dec
shll
dec
dec
int3
pop
inc
mov
dec
mov
sub
clc
jb
and
inc
emms
cmp
ret
sbb
pushf
test
pop
mov
push
test
push
lods
xor
dec
rcrb
or
clc
jecxz
jmp
mov
pop
adc
jnp
js
sub
ficoms
mov
dec
cwtl
fadd
imul
push
mov
and
mov
add
fdivl
mov
fldt
mov
hlt
imul
cld
sub
inc
inc
mov
fwait
dec
xchg
loopne
xchg
cmp
std
push
sbb
fwait
mov
or
cmpsb
arpl
or
out
gs
or
sub
cmpsb
cwtl
sub
shrl
adc
ret
cmpsl
inc
test
add
and
out
popf
stos
aad
and
ljmp
orl
adc
adc
push
movsl
jecxz
ss
pop
xor
subl
outsb
mov
lahf
rorb
jecxz
out
jl
fistl
cmp
pop
and
mov
mov
rorb
jns
sub
lret
dec
xor
scas
jl
clc
fstpt
xor
stos
sbb
inc
cmpsb
scas
push
arpl
mov
cmp
ficomps
pop
mov
mov
and
pop
cld
testl
leave
or
adc
push
or
imul
inc
mov
addr16
pop
rorb
add
push
mov
loope
mov
push
les
jbe
movsl
daa
xchg
std
ja
jl
mov
xchg
jno
jns
imul
test
dec
xor
das
ljmp
or
adc
sbb
mov
inc
add
lods
sub
add
int3
adc
pop
cmc
or
mov
xchg
push
inc
cmovno
arpl
fcoms
fstp
decb
aas
push
ss
push
or
pop
das
ficompl
pop
leave
push
cli
push
es
sbb
dec
aam
cltd
outsb
jmp
out
iret
jp
xor
jo
stc
push
enter
hlt
xchg
in
sti
std
je
hlt
scas
mov
and
hlt
popf
outsb
add
sub
leave
cld
insl
dec
cmp
push
cmp
rol
movsb
loope
movsb
adc
jno
bound
mov
dec
mov
jnp
jmp
sub
mov
jp
fmuls
push
mov
inc
sbb
jno
dec
mov
jae
mov
repnz
es
leave
cld
ret
mov
fsub
out
data16
xor
mov
fnsave
jle
pop
dec
not
jns
push
inc
popf
mov
sbb
lods
nop
jg
in
shlb
sbb
nop
dec
push
sbb
js
negb
je
mov
dec
dec
jb
call
test
insl
repz
adc
out
inc
jnp
mov
mov
or
inc
and
pop
cmpl
imul
pop
dec
es
or
cmpsb
pushf
cmp
insb
les
jne
insb
insl
cli
in
mov
pop
jno
sbb
push
dec
bound
aad
or
dec
add
sub
jb
icebp
ds
mull
xchg
inc
arpl
xchg
ja
or
in
push
bound
popa
int
cmp
mov
add
jb
jo
test
sbb
fwait
mov
jmp
ret
fwait
loopne
push
and
popf
xchg
jg
push
stos
sub
ret
cmp
xor
pusha
xor
jmp
pop
aad
adcb
nop
jmp
dec
push
subb
mov
out
pop
fildl
outsl
lock
lahf
mov
mov
popa
mov
js
mov
daa
jg
xchg
and
mov
dec
pop
inc
loop
out
xor
jecxz,pt
mov
push
inc
lds
jo
add
xor
daa
es
pop
lock
push
push
cltd
pop
inc
js
push
repnz
mov
xorb
mov
sub
into
shrl
mov
inc
jl
sbb
jg
rclb
cmp
rorb
sub
jae
xor
push
adc
int3
mov
pop
pop
dec
mov
lods
and
fsub
pop
sti
mov
xlat
std
mov
jp
or
cwtl
in
xchg
dec
in
push
push
rclb
xchg
mov
out
daa
fcmovne
fstpl
call
sub
test
popf
xor
mov
test
mov
push
leave
cmp
es
repnz
or
pushf
mov
test
mov
and
inc
pop
cmp
cmp
out
cli
hlt
jecxz
popa
lahf
or
in
ficompl
jne
sti
test
dec
outsb
add
mov
cli
xorb
inc
add
and
scas
mov
pop
imul
or
enter
mov
cs
les
mov
pop
sub
mov
jecxz
inc
jnp
jp
cmp
mov
mov
jmp
xor
push
mov
mov
and
xchg
in
mov
add
popf
jl,pn
pop
jae
sbb
imul
push
popf
pop
xor
inc
cs
les
push
push
jns
fsubs
xchg
sbb
das
xor
les
or
mov
testl
mov
sti
aaa
mov
fdivrl
pop
into
xchg
or
fnsave
adc
push
mov
inc
decl
xchg
or
mov
sub
inc
adc
inc
and
popf
mov
sbb
cmp
mov
pop
lea
les
lret
inc
movsb
cmpsl
loopne
jecxz
rcl
lods
scas
or
scas
inc
dec
and
add
pop
loopne
push
or
js
into
lock
sbb
inc
pop
cmp
adc
mov
icebp
ret
jno
int3
dec
outsb
cmp
sbb
xchg
maskmovq
mull
or
pop
je
xlat
pop
dec
popf
fs
push
fwait
push
mov
and
pop
pop
in
sub
lret
in
jl
add
mov
xchg
sbb
fidivrl
fadds
lods
sbb
and
nop
pop
and
lea
testb
outsl
stc
jo
jg
adcl
xor
into
push
mov
out
adc
mov
jbe,pn
cs
data16
lock
lret
jno
and
cmc
jecxz
add
andl
fs
in
jne
lds
fwait
mov
jo
push
mov
mov
stc
aam
lods
in
insl
adc
out
sti
in
xchg
mov
sahf
and
mov
hlt
mov
out
insb
push
mov
dec
arpl
mov
or
es
xor
and
out
add
out
push
push
push
sub
jle
xor
push
jnp
or
push
push
add
test
mov
dec
lcall
or
leave
cwtl
mov
ficoms
xor
aad
push
mov
gs
xchg
push
xor
and
imul
and
pop
adc
aaa
mov
ffree
data16
inc
fnstcw
aas
pop
dec
pop
sahf
movsl
dec
addl
sub
push
pop
mov
or
lahf
les
addr16
mov
mov
jle
add
fidivs
jmp
movsl
mov
and
mov
stc
pop
mov
stos
xchg
das
imul
jge
decl
loopne
push
flds
or
shrb
and
das
cmpsb
pop
jecxz
sub
ret
out
push
dec
fcomi
or
sbb
add
ret
sarb
cmc
push
cmp
add
lcall
imul
lds
pop
pop
mov
push
adc
sub
push
outsl
jbe
repz
testb
outsb
or
cwtl
fst
mov
je
jmp
push
push
lods
out
jne
jns
out
out
push
fcoml
movsl
pop
cltd
inc
mov
into
fcomp
mov
aad
and
inc
jmp
or
insl
or
loope
pop
pop
cmpsb
mov
dec
decl
cs
out
lea
aaa
mov
cmc
nop
lret
shrl
push
or
xlat
rorb
inc
out
mov
pushaw
ret
out
fwait
pop
pop
loope
lods
loope
dec
pop
or
ficoml
dec
popa
ja
jo
sbb
fbstp
pop
push
sti
sbb
lock
xor
int
lahf
lcall
lods
xor
lods
popa
test
mov
adc
push
mov
and
pop
mov
je
xchg
xchg
adc
ljmp
xor
jno
je
xchg
dec
js
pop
adc
cmc
cs
fsts
mov
mov
pop
arpl
icebp
mov
je
add
stos
hlt
clc
icebp
push
add
pop
imul
add
xchg
aaa
dec
dec
movl
sbb
aam
adc
and
xor
lods
ljmp
movsl
mov
pop
roll
in
arpl
in
repz
mov
pop
xlat
adc
mov
stc
popf
mov
cmc
cmp
js
out
out
xchg
mov
add
push
inc
fdivs
or
leave
sub
js
data16
in
mov
add
adc
cmp
pusha
aas
jbe
inc
lret
jne
xchg
enter
and
dec
out
insb
outsb
push
xorl
mov
pop
iret
mov
mov
lahf
sbb
mov
scas
xchg
imul
repnz
mov
jns
jne
cmp
and
ret
push
je
mov
ret
mov
pop
aas
lret
pop
ret
cmp
ds
sub
mov
rcrb
ljmp
test
addl
dec
jl
fstpl
cmp
inc
cmpsl
test
movsl
das
out
or
inc
orl
mov
mov
orb
mov
push
ds
push
cmp
cmpsb
mov
shll
popa
call
push
idivl
testb
push
ds
inc
leave
push
iret
adc
mov
inc
or
cld
stc
sbb
cmp
inc
adc
bound
fwait
and
inc
and
mov
add
call
pop
mov
mov
mov
jmp
dec
push
test
ficompl
adc
add
dec
xchg
rcr
stos
loope
cwtl
and
pusha
cmc
test
outsl
push
and
rclb
push
lods
mov
fwait
rcrl
and
pop
xchg
push
into
aaa
and
cmp
push
rcll
repnz
fdivp
inc
pop
add
xchg
popf
mov
pop
inc
jb
into
loop
add
fstpt
je
cmp
mov
clts
and
rclb
scas
and
xchg
ss
mov
rol
xchg
adc
fildll
pop
movsb
aaa
fdivl
xor
es
adc
popa
add
and
flds
loopne
push
jae
jnp
sarl
adc
adc
insl
sbb
pusha
dec
pop
incl
cmpsl
cmp
xchg
pop
popf
add
sahf
cmpsb
cmpsl
inc
adc
popa
bound
dec
cli
inc
cli
xlat
jns
mov
popa
popf
hlt
or
int3
aaa
rcl
movsl
mov
inc
adc
out
scas
out
mov
cmpsl
out
popa
adc
idivb
push
loopne
push
sub
xchg
add
xor
cmpsl
fcoms
loope
pop
rclb
jbe
das
divb
stos
sub
dec
daa
inc
or
fs
sbb
sbb
ret
mov
test
stc
adc
push
movsb
mov
lret
push
ljmp
cmc
jmp
mov
stos
lea
in
mov
jecxz
inc
jbe
dec
out
dec
and
icebp
xchg
insl
dec
addr16
jmp
and
das
jnp
lret
movsl
ficompl
and
inc
iret
or
sub
cmp
les
dec
aad
sub
mov
fldt
out
lea
sbb
movsl
mov
inc
jnp
clc
cld
sub
mov
pop
ficompl
js
adc
repnz
es
notb
sub
shrd
or
adc
mov
shlb
fsubrs
shrl
xor
mov
mov
mov
lea
mov
mov
mov
add
imul
mov
mov
mov
add
and
mov
mov
mov
add
or
mov
mov
mov
sub
add
mov
mov
mov
add
xor
mov
mov
xor
add
jne
jmp
mov
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
lea
mov
mov
mov
add
imul
mov
mov
mov
add
and
mov
mov
mov
add
or
mov
mov
mov
sub
add
mov
mov
mov
add
xor
mov
mov
xor
add
jne
mov
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
lea
mov
mov
mov
add
imul
mov
mov
mov
add
and
mov
mov
mov
add
or
mov
mov
mov
sub
add
mov
mov
mov
add
xor
mov
mov
xor
add
jne
mov
mov
xor
lea
mov
mov
xor
add
jne
jmp
mov
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
lea
mov
mov
mov
add
imul
mov
mov
mov
add
and
mov
mov
mov
add
or
mov
mov
mov
sub
add
mov
mov
mov
add
xor
mov
mov
xor
add
jne
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
lea
mov
mov
mov
add
imul
mov
mov
mov
add
and
mov
mov
mov
add
or
mov
mov
mov
sub
add
mov
mov
mov
add
xor
mov
mov
xor
add
jne
mov
xor
mov
add
mov
pop
pop
pop
leave
ret
push
mov
sub
addl
push
mov
mov
sub
imul
push
xor
or
mov
sbb
mov
mov
andl
mov
inc
mov
cmpl
jbe
jmp
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
mov
sub
movl
movl
andl
jmp
xor
add
inc
mov
cmpl
jae
cmpl
jg
jmp
call
cmpl
jne
xor
xor
inc
mov
jmp
mov
mov
sub
mov
mov
and
mov
andl
xor
or
inc
mov
cmpl
ja
jmp
push
pushl
push
push
pushl
push
push
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
xorl
mov
xor
mov
movl
cmpl
je
cmpl
jg
jmp
call
mov
dec
mov
jmp
mov
sbb
sub
mov
sbb
orl
mov
mov
adcl
sub
mov
orl
movl
cmpl
je
cmpl
jb
jmp
call
mov
dec
mov
jmp
mov
mov
sub
mov
orl
mov
mov
sub
mov
mov
mov
mov
xor
mov
add
or
mov
mov
mov
sub
mov
orl
mov
xor
add
push
mov
xor
add
push
mov
xor
add
push
lea
push
pushl
pushl
call
test
je
lea
push
mov
xor
add
push
mov
add
push
mov
mov
pushl
call
mov
mov
lea
mov
incl
mov
test
je
lea
mov
mov
mov
mov
mov
sub
mov
mov
xor
mov
sub
add
mov
movl
movl
mov
mov
pushl
mov
mov
pushl
pushl
pushl
pushl
pushl
pushl
pushl
mov
call
pop
pop
leave
ret
push
mov
sub
neg
push
adc
push
push
xor
movl
mov
xor
xor
sub
add
lea
sub
mov
subl
movl
xor
lea
add
mov
xor
mov
or
mov
mov
mov
sub
imul
mov
andl
xor
add
inc
mov
cmpl
jle
jmp
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
xor
mov
xor
mov
add
xor
mov
mov
mov
mov
add
and
mov
andl
mov
inc
mov
cmpl
ja
jmp
push
push
push
push
pushl
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
andl
mov
inc
mov
cmpl
ja
jmp
pushl
call
cmpl
jne
xor
xor
inc
mov
cmpl
jb
mov
andl
mov
inc
mov
cmpl
jbe
jmp
pushl
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
xorl
xor
mov
sbb
mov
mov
add
cmp
movl
je
mov
jmp
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jge
jmp
pushl
push
pushl
push
pushl
pushl
pushl
pushl
call
cmpl
jne
xor
xor
inc
mov
jmp
mov
andl
jmp
xor
or
inc
mov
cmpl
jae
cmpl
jl
jmp
call
jmp
mov
or
movl
cmp
movl
jne
movl
cmp
jne
movl
push
movl
push
movl
jmp
not
mov
mov
cmp
jne
movl
cmp
jne
movl
push
push
jmp
mov
mov
mov
movl
cmp
movl
jne
movl
cmp
movl
jne
push
movl
push
jmp
mov
mov
cmp
movl
jne
movl
cmp
movl
jne
push
push
movl
jmp
movzbl
mov
mov
mov
movl
cmp
movl
jne
movl
cmp
jne
sub
mov
movl
cmpl
je
cmpl
jle
jmp
push
push
call
cmpl
jne
xor
or
dec
mov
mov
dec
mov
jmp
xor
add
mov
mov
mov
xor
add
imul
mov
xor
add
cmp
mov
mov
je
mov
add
mov
mov
xor
add
imul
mov
jmp
mov
xor
mov
mov
xor
sub
add
mov
mov
add
mov
mov
mov
xor
xor
lea
mov
xor
add
imul
mov
xor
sub
mov
add
cmp
mov
mov
jg
xor
mov
sub
add
jmp
xor
add
add
mov
mov
mov
xor
add
movl
mov
not
movl
mov
jmp
mov
jae
jbe
cmp
add
sti
or
jle
mov
mov
jnp
lods
bnd
push
jp
stos
mov
fnstenv
fiaddl
sub
inc
add
pop
add
ds
mov
inc
fildl
rclb
cli
addl
push
lds
pop
xchg
jle
add
pop
stc
fidivl
dec
sub
hlt
sub
mov
jg
ret
pushf
sbb
add
ret
andb
divl
enter
mov
add
ror
jbe
pop
push
dec
mov
push
mov
mull
in
mov
mov
dec
xchg
stos
mov
xchg
adc
push
clc
scas
jno
or
and
mov
push
cmpsb
out
in
push
pop
pop
adc
push
gs
aad
rorb
movsb
mov
mov
xchg
mov
xchg
xor
sub
jmp
or
test
add
mov
addl
pop
ret
mov
popa
push
mov
cltd
jns
or
adc
outsb
cmovg
add
repz
inc
dec
jno
mov
jb
shll
dec
fidivrs
int3
arpl
aas
mov
int3
arpl
nop
push
inc
notl
cld
push
sbb
pop
cltd
sub
push
aaa
repnz
inc
jne
es
les
inc
xchg
in
lock
sbb
pop
jb
das
and
jp
lock
xlat
xchg
jno
push
xor
xor
es
cli
retw
clc
fidivrs
loopne
out
sti
addr16
dec
fucomip
popa
je
push
sbb
bound
jnp
xchg
inc
cli
dec
and
mov
shl
in
pusha
psrlq
loop
mov
push
and
xlat
imul
sub
addr16
out
push
std
sbb
sbb
lret
shlb
jg
mov
rcr
mov
add
inc
ret
lret
roll
imul
xor
out
pushf
subl
imul
push
mov
das
leave
lods
adc
and
into
pop
mov
stc
int
dec
into
push
push
sub
in
sub
not
mov
or
jle
push
xor
jb
adc
xchg
mov
adc
call
push
cltd
call
push
bound
fucomip
stc
and
push
mov
push
fiadds
imul
mov
xor
mov
or
test
loop
adc
rcrl
adc
sahf
jmp
push
sub
adc
daa
negl
sbb
icebp
ret
xchg
pop
cli
mov
and
test
imul
cmc
leave
jecxz
out
ret
test
push
scas
jnp
cwtl
fbld
into
mov
aam
push
dec
xchg
mov
psubb
add
jle
sbb
xor
inc
incl
in
pop
push
cmp
jle
push
mov
test
and
mov
das
xchg
lret
jbe
pusha
add
loop
inc
and
xchg
lods
mov
outsb
sarl
sub
jb
test
pop
add
adc
hlt
jbe
mov
out
pop
jl
mov
cmpb
dec
xor
cwtl
push
outsb
arpl
fnstenv
ja
icebp
jns
push
jmp
sbb
out
push
lea
stos
jb
jl
xchg
mov
fbld
loope
shl
xchg
xchg
test
faddl
js
out
mov
popf
aaa
lcall
mov
mov
add
mov
cmp
mov
stos
add
testb
dec
stos
mov
movsl
mov
or
push
int
xor
or
out
push
scas
imul
cmc
jbe
outsl
je
out
sbb
mov
inc
mov
arpl
insl
jns
fwait
js
scas
imul
fsts
pop
cs
fstpt
push
mov
xchg
aam
jnp
fstpt
pop
dec
push
sub
ret
ficoml
mov
mov
mov
mov
es
jae
jae
inc
enter
loopne
cmpsb
lret
fstl
xor
adc
push
adc
add
arpl
sti
xchg
out
sub
in
adc
cmpsl
mov
mov
adc
jmp
inc
sbb
or
dec
out
scas
mov
dec
fmuls
dec
daa
or
mov
sbb
mov
je
mov
dec
stos
xchg
inc
cs
inc
mov
cwtl
inc
stos
dec
fistps
rcrb
sub
rcrl
outsl
mov
or
xor
lahf
cmc
xchg
ds
xor
sbb
add
pop
popa
cmp
jge
pop
mov
push
sti
adc
mov
and
push
popa
pop
jb
scas
or
enter
movlhps
pop
pop
outsl
and
std
or
and
rorb
lret
push
jle
inc
std
aaa
or
outsl
jb
lcall
or
push
sahf
fprem
cltd
rclb
cmpsl
lods
or
adc
push
lods
ret
mov
rcrb
ffreep
sub
int
pop
dec
aad
rcr
repnz
jnp
mov
cmp
push
lea
mov
pop
mov
pop
scas
inc
lret
add
fbstp
xor
push
insb
mulb
aad
icebp
pop
in
or
sub
mov
fwait
int3
inc
imul
in
fdivs
xlat
add
test
inc
pop
imul
xchg
adc
xchg
data16
mov
iret
dec
fistpll
fwait
push
fldcw
cmp
sbb
movsl
jns
mov
mov
sahf
sbb
jmp
ja
push
jno
fmull
push
and
stos
pop
add
jnp
addr16
loopne
mov
cmc
dec
call
pop
leave
sbbl
add
pusha
data16
call
xor
mov
hlt
add
fs
inc
fsub
call
rcl
add
cmp
sti
mov
adc
or
int3
push
outsb
repnz
ret
leave
xchg
dec
les
decb
arpl
xor
ds
rcl
sahf
xchg
lock
ljmp
popf
mov
pop
fstps
dec
jmp
test
push
push
int
shrb
sub
sbb
xchg
arpl
imul
jecxz
xchg
push
jbe
and
dec
mov
mov
push
cmp
dec
push
imul
sbb
test
mov
sub
xorl
iret
dec
xor
mov
mov
pop
lods
out
pop
push
mov
loop
push
pushf
popf
fiaddl
mov
cmp
lea
sbb
out
xlat
lods
mov
shll
jne
xor
sbb
aaa
rclb
xchg
das
aas
sbb
inc
sub
lods
or
insl
imul
inc
mov
mov
popf
pop
xchg
pop
jmp
sbb
nop
andl
inc
add
adc
push
cwtl
mov
cmp
enter
insl
pop
and
jp
cmpsl
ja
push
insl
jb
inc
in
mov
mov
ds
xchg
jmp
mov
jo
or
push
sub
pop
jb
pop
fistps
jmp
pusha
out
negb
xchg
push
std
sarl
shlb
lahf
icebp
imul
xor
fistpl
out
fcoms
in
inc
das
mov
jns
and
adc
test
call
mov
push
and
out
and
xor
and
cmp
lock
cmp
imul
add
shll
mov
mov
inc
jg
dec
loope
cmc
in
cs
or
sbb
fs
push
outsl
outsb
cmp
iret
jl
inc
aas
movsl
movsb
jmp
fists
and
sbb
jns
mov
leave
xchg
or
cli
xchg
mov
or
ja
add
mov
push
and
sub
mov
xchg
mov
pop
mov
inc
sarb
jns
push
sbb
lcall
cltd
divb
xchg
sbb
and
stos
pop
mov
cli
push
add
and
or
add
jl
mov
push
imul
je
idiv
call
outsl
push
xchg
dec
je
xor
jb
sbb
out
int3
mov
fstps
aas
shrl
fldenv
aam
xchg
test
jl
mov
pop
jge
pop
jp
push
movsb
in
dec
inc
mov
addr16
add
xlat
jno
mov
ljmp
xchg
pusha
js
cmc
push
add
jmp
test
movsl
sbbl
fiaddl
pop
xchg
or
sbb
inc
dec
hlt
popl
inc
push
mov
mov
addr16
idiv
sbb
mov
leave
mov
dec
and
cmp
dec
jp
pop
decb
jbe
enter
or
comiss
push
mov
cmc
push
xor
int
dec
lods
negl
pop
jne
xlat
xchg
mov
cmpsl
das
stos
mov
inc
pop
cmp
movsl
sbbb
mov
aas
imul
or
add
push
in
or
jo
or
cmp
test
jnp
push
repnz
pop
rcrl
incb
shll
push
cmc
movsb
jne
cwtl
lret
push
push
xchg
sbb
mov
aaa
sub
outsb
xchg
mov
xchg
xchg
cmc
adc
jno
push
pop
fidivs
mov
mov
xorl
sub
push
in
xlat
xor
mov
adc
adc
xchg
mov
sbb
in
movsb
stos
push
and
int
sbb
or
jg
popf
mov
cltd
out
and
outsb
test
enter
mov
sbb
nop
mov
movl
push
jmp
inc
test
inc
je
jno
stos
stos
rcl
cwtl
sbb
pop
inc
das
scas
daa
icebp
jb
push
lds
cmp
and
decl
mov
fcoml
in
cltd
push
popa
cmp
inc
rorl
rol
push
xchg
lret
mov
cmp
rclb
icebp
inc
lea
xchg
sub
mov
pop
movsb
pop
loop
ds
bound
mov
xchg
jns
push
hlt
stc
pusha
int3
mov
sbb
mov
xchg
sbbl
ja
mov
inc
or
jl
lods
pop
aad
cmp
xchg
cs
dec
test
adc
add
xor
loopne
loop,pn
mov
sbb
call
add
jmp
loop
jno
loop
movb
ret
pop
pushf
adc
cli
inc
test
pop
cltd
loop
ret
movsl
fdivl
mov
dec
jmp
or
ja
sbb
adc
jo
psubw
xchg
xchg
daa
push
daa
push
scas
mov
and
dec
iret
insl
aas
subl
inc
cmp
lods
pusha
mov
lods
les
popf
sti
out
pop
and
sub
jae
jge
mov
lret
fmuls
mov
pop
jecxz
mov
cltd
cmp
add
popa
arpl
and
roll
nop
cmp
push
jns
shl
mov
mov
mov
insl
xchg
mov
daa
ss
stos
mov
sub
mov
cmp
mov
mov
stos
jp
mov
insl
aad
mov
sbb
mov
test
pop
cmp
rorl
mov
mov
lcall
shll
or
pop
subl
orl
fwait
pop
call
ja
or
pop
clc
xchg
cmp
js
mov
jg
ljmp
and
jecxz
mov
jge
mov
ds
in
repnz
into
pop
lret
inc
xchg
je
repnz
out
popl
pop
add
push
xor
aad
sarl
xor
repz
push
fs
cltd
push
and
sbb
aas
jecxz
into
cltd
mov
daa
and
cli
lods
mov
sbb
out
mov
orb
xchg
inc
loope
test
lods
scas
and
scas
ror
sbb
icebp
add
in
dec
push
fistl
xchg
data16
fwait
push
aad
data16
cwtl
mov
pop
pop
jle
cli
xor
jge
addr16
dec
jne
or
or
jl
std
lods
inc
mov
pop
imul
insl
out
mov
mov
jbe
mov
andl
inc
mov
xor
xchg
lcall
pop
xor
rcrl
int
dec
mov
xor
rcrb
out
jae
cs
test
popa
ss
js
movsl
cmp
push
push
cmp
pop
jmp
sub
push
dec
push
adc
push
sub
cwtl
adc
bound
test
fsubs
scas
fwait
pusha
ds
je
pop
sbb
sbb
fbstp
arpl
cltd
mov
insb
fcoms
fs
shl
sahf
and
cwtl
ficompl
cmp
xlat
scas
movsb
jno
jmp
mov
in
push
and
lods
or
jl
enter
jl
out
icebp
insb
jb
ret
mov
cmp
and
lret
loopne
fwait
test
imul
jge
add
pusha
lods
lea
mov
mov
lret
jge
xor
in
mov
imul
sbb
sti
lods
es
jle
bound
loop
inc
out
mov
dec
push
int
mov
fwait
roll
test
out
movsb
ss
ret
sti
stos
dec
les
cld
js
add
test
iret
mov
push
ljmp
add
insb
ja
add
int3
popf
mov
push
rcrl
ss
xor
xchg
xchg
inc
pop
cmpsb
sbb
insb
notl
and
leave
pop
inc
outsb
test
mov
inc
scas
stos
ret
jne
jns
in
push
push
sbb
daa
stos
dec
rcr
popa
outsl
xchg
inc
sub
popl
inc
xchg
loopne
add
out
push
xlat
int3
test
rolb
shll
dec
addr16
pop
scas
sbb
push
fsubp
mov
cld
xchg
inc
ja
sar
cmp
rcll
adcl
gs
sbbb
mov
outsl
cmp
xchg
and
fsub
push
push
loop
inc
fld
jne
ss
xchg
xorl
outsb
adcb
data16
es
nop
gs
adc
sahf
cwtl
push
pop
add
xchg
xchg
mov
fists
pop
scas
jne
ret
push
cmpsl
mov
mov
mov
icebp
fisubrs
xor
xchg
jbe
out
or
jnp
pop
fcompl
inc
gs
ss
scas
outsb
inc
jns
insl
dec
sti
leave
adc
es
aam
shll
pop
sub
js
dec
dec
pop
div
mov
add
mov
ret
dec
dec
sub
pop
iret
cltd
int
add
xor
and
cli
imul
outsb
jp
or
insb
push
pop
jbe
jae
mov
loope
out
addr16
push
in
xor
and
in
cmpsb
push
lods
mov
and
push
not
inc
call
mov
ret
jo
daa
cmp
stc
fsubl
inc
push
popa
repnz
cli
cmp
aam
adc
mov
jge
incb
aad
movaps
call
dec
shr
mov
lea
fcompl
inc
pop
dec
xchg
hlt
enter
inc
lds
mov
leave
pop
mov
sti
in
ret
or
cmpsl
roll
int3
aam
xor
addr16
lret
mov
movsb
mov
into
xchg
cmp
in
aad
imul
rcrb
jo
push
adc
sub
movl
out
in
pop
fs
jns
arpl
nop
mov
mov
cmp
cmp
fsts
add
mov
push
clc
mov
mov
lods
xchg
fwait
push
inc
test
movsb
cmpsb
out
iret
jg
pop
sbb
pushf
rcll
inc
cmp
push
lock
fldcw
je
dec
adc
or
inc
int
inc
ljmp
cltd
inc
movsb
push
in
sti
fsts
xor
jle
int3
out
or
add
arpl
push
ficoms
mov
mov
mul
test
sbb
leave
mov
ret
fldl
bound
mov
fisttpl
sarb
in
popf
pop
mov
add
jge
adc
inc
mov
jbe
shlb
jno
andb
int3
movsb
mov
push
push
mov
pop
dec
sahf
sub
adc
rcl
add
mov
mov
pop
or
and
push
cmp
lahf
mov
add
sbb
out
fsubr
add
dec
sbb
jg
addr16
mov
in
jl
test
mov
pusha
push
daa
outsl
inc
pop
mov
xorb
mov
cmpsl
dec
hlt
and
or
xchg
xchg
shl
out
sbb
adc
push
cltd
shlb
xor
fdivrl
out
adc
jmp
lret
out
les
cmp
sub
sub
and
lock
mov
or
or
xchg
mov
sbbb
xchg
sub
mov
pop
mov
cmpsl
icebp
mov
je
hlt
or
stos
inc
inc
repz
cmp
pop
test
mov
xchg
mov
mov
je
adc
insb
sub
jne
pop
loop
and
push
cmp
pop
leave
xor
mov
xchg
mov
jnp
xor
or
push
icebp
sub
aad
cmp
cmp
cmp
mov
xor
mov
jecxz
fstpl
sbb
pushf
pop
dec
push
fisubl
iret
cmp
aam
xlat
arpl
mov
jns
sub
jmp
and
in
addr16
sbbb
repnz
and
push
out
sub
and
dec
push
dec
movsb
iret
mov
xorb
jle
inc
out
decl
dec
add
fcomps
push
mov
push
inc
cmc
adc
mov
cmp
push
lods
addr16
lock
add
ret
and
jb
xchg
mov
movl
push
in
sub
cwtl
xchg
jmp
jle
jp
push
insl
add
js
adc
int
jmp
mov
rol
jle
jne
cmpsb
xor
pop
scas
int3
sahf
ffree
xchg
fstpt
lret
sbb
cwtl
jbe
or
popa
xchg
xchg
and
pop
or
in
sbb
fsts
sbb
mov
push
jmp
movsb
jp
or
dec
mov
and
xor
testb
movhps
js
imul
push
ljmp
roll
inc
lahf
mov
mov
jg
mov
mov
add
push
out
push
stos
jl
push
ret
popf
pop
in
int3
or
cltd
dec
ret
mov
in
xor
stos
lods
push
xor
cmp
stos
inc
add
xchg
or
mov
test
inc
adc
and
sub
push
insl
lock
leave
adc
xchg
xchg
mov
fwait
mov
mulb
fs
pop
mov
push
pop
add
sahf
loopew
pop
test
iret
lods
andl
jmp
fdivr
add
sub
mov
inc
pop
mov
xchg
lcall
imulb
imul
sbb
mov
fsub
shll
sub
push
push
mov
pop
imull
and
mov
xchg
pop
mov
cmp
mov
lcall
pop
iret
sbb
insl
fidivrs
mov
jb
or
pop
dec
push
push
hlt
mov
mov
xchg
testb
ds
in
adcl
xchg
mov
jne
adc
shlb
loopne
push
jg
lock
add
pop
les
and
mov
pop
dec
jecxz
inc
daa
mov
out
repnz
lock
das
jb
leave
aad
add
jmp
mov
test
sbb
aam
js
fidivl
std
mov
and
icebp
sbb
cmp
cltd
push
push
mov
addr16
mov
pop
adc
sbb
adc
pop
lea
cmp
das
xor
xchg
int
outsb
mov
sbb
mov
or
aam
push
insl
push
sti
and
xor
jb
add
loop
lret
sbb
orb
dec
int3
jb
lock
not
mov
adc
shr
dec
loopne
add
mov
les
jmp
ret
sub
insb
mov
data16
sbb
jecxz
sub
js
jmp
fldenv
div
pop
and
lods
pop
xchg
xor
mov
fimull
fwait
inc
xor
jno
or
daa
add
stos
cli
fsubrl
xchg
test
stc
cmovle
push
data16
out
shlb
std
cld
xlat
pop
cmpsl
sub
es
loopne
out
lret
in
cs
out
dec
mov
test
or
lcall
adc
xor
xchg
push
inc
sub
ret
fwait
xchg
adc
inc
mov
imul
jb
inc
inc
xor
aaa
mov
or
jge
adc
xor
popa
loopne
popa
fcmovnu
out
xor
int
mov
fistpll
ljmp
fsubrs
mov
dec
jl
xor
push
outsl
psubd
fnstsw
pusha
mov
jle
clc
cmpsb
inc
int3
adc
cmp
xlat
add
test
jle
xchg
mov
add
jno
test
cmpsl
jb
xchg
pop
orb
hlt
in
je
pop
adc
mov
dec
into
push
sbb
imul
mov
mov
add
adc
test
stos
jo
inc
push
lds
xor
push
repnz
nop
cmp
mov
inc
and
mov
xchg
rclb
xor
sahf
mov
stc
mov
add
cmc
cltd
mov
lahf
jne
lahf
je
cmp
test
and
sti
cmpsb
sbb
cmp
movsb
mov
imul
lea
cltd
add
xchg
jecxz
ja
lea
rorl
cmp
movsl
aam
jg
aam
mov
jmp
adc
imul
xchg
jnp
jle
fs
mov
je
cmc
jle
movsb
push
dec
push
mov
sbb
adc
dec
jg
sbb
or
xor
dec
add
aas
sbb
jle
stos
or
std
sub
loopne
xchg
popf
jecxz
imul
aam
jmp
mov
pushw
movsl
cmpsb
adc
pushf
out
mov
movb
inc
stc
jmp
sahf
mov
xchg
jecxz
xor
imul
or
subb
jp
sbb
mov
test
or
and
and
push
les
vcmppd
push
xor
mov
and
push
ss
cmpsl
push
subb
int
jg
sarl
jmp
sahf
in
aad
lds
adcb
and
cmpsb
push
into
inc
push
in
add
mov
add
out
cmp
stos
stos
sbb
sub
cli
xor
out
fnstsw
pop
je
add
ss
mov
pop
dec
mov
adc
jmp
jns
repz
and
aam
movsl
mov
and
idivl
repnz
mov
pop
cmpsb
outsb
incl
in
pop
icebp
out
jecxz
shrb
lds
push
dec
hlt
pusha
mov
xor
jl
in
fisubrl
adcb
ret
jp
dec
and
jmp
xor
dec
jb
les
or
lods
iret
sub
in
aas
popa
aam
aam
push
mov
inc
mov
mov
add
add
mov
push
aam
mov
nop
rep
mov
inc
ja
xchg
rcrb
and
notb
and
pop
daa
sbb
scas
popf
sbb
gs
ret
push
sbb
push
addl
lcall
xor
movsb
mov
das
mov
fucompp
or
dec
gs
mov
add
out
ljmp
pusha
repnz
adc
pop
cwtl
mov
xchg
dec
pop
aaa
mov
aaa
iret
xchg
sbb
loope
jmp
orb
pop
add
xor
dec
pop
sub
shrl
cld
arpl
jbe
les
bound
adc
dec
and
and
pop
fcomip
ds
sbb
xor
arpl
jae
gs
int
xlat
stos
out
dec
mov
orb
mov
addr16
rorl
pop
push
das
pop
inc
inc
add
fcomps
fldl
xor
xchg
lcall
push
mov
sbb
jle
aad
popf
sub
testl
sub
mov
fistps
xchg
mov
sub
dec
das
cmp
js
dec
inc
fdivl
in
xchg
or
xchg
sbb
jp
ss
add
stc
andb
mull
pop
ret
ffree
xor
scas
push
push
icebp
mov
addr16
cmp
lods
stos
lds
lcall
fsubp
pop
pop
movsb
faddl
je
pop
jbe
fistps
add
xor
insb
inc
cmp
ljmp
test
and
enter
outsb
mov
xchg
add
sti
orl
dec
addb
sti
and
js
and
jg
out
nop
dec
mov
lea
mov
cmp
mov
sbb
sbbl
aaa
add
cmpsl
sbb
fnstsw
fsubrs
pop
xor
jae
repz
stos
fcoms
aaa
in
flds
lret
andl
fcomps
sbb
nop
scas
inc
lods
movsb
push
adc
insb
pop
jmp
push
mov
or
push
rorl
and
rcrl
popf
or
push
sub
into
movsb
notb
jno
inc
fs
push
push
int
or
jecxz
mov
fiadds
inc
push
add
jg
jne
stos
mov
pop
outsl
jecxz
sub
adc
cltd
or
dec
push
sbb
mov
jmp
jo
push
cmp
test
out
or
pop
std
xor
mov
inc
mov
sahf
mov
lods
and
jecxz
popf
cmc
mov
add
cmc
stc
jo
movsl
sub
test
mov
push
ficomps
popa
cmpsb
xchg
pop
jbe
das
push
ja
jle
outsl
pusha
fwait
mov
push
pop
dec
bound
out
xchg
mov
ss
fcoml
lock
stos
ret
lret
ret
js
jl
and
movsl
push
pop
jecxz
and
dec
xbegin
rcrb
out
fldt
cltd
imul
and
sbb
push
mov
and
dec
inc
loope
mov
jae
push
in
mov
nop
leave
push
push
leave
pop
xchg
cmp
pop
sub
xchg
outsb
movsl
ret
stc
in
xchg
sbb
or
add
xor
addr16
outsb
cmpsl
pop
push
xor
inc
outsl
std
jb
and
xor
mov
push
insl
and
or
sub
mov
mov
jle
mov
jo
inc
mov
sbb
mov
xchg
mov
add
mov
movsl
inc
andb
ja
fucom
add
sub
jo
pop
inc
sub
clc
mov
or
stc
les
stos
add
pop
ja
mov
aad
inc
iret
out
sbb
out
mov
test
pop
dec
inc
cltd
mov
and
ret
shlb
cmp
or
sbb
iret
mov
mov
sbb
out
pop
fsubrs
mov
fisubrl
lahf
mov
lea
push
inc
rolb
mov
push
int
ret
dec
into
shlb
lods
popa
mov
mulb
and
xchg
in
push
test
adc
mov
scas
jb
insl
test
adc
jp
mov
pop
out
cmovo
jns
jne
or
adc
cmp
adc
incb
pop
jmp
lods
pop
adc
cmpsb
das
or
loope
inc
pop
aad
xor
sub
gs
mov
mov
fmull
insl
in
or
loope
push
leave
sahf
ret
jg
push
lock
aad
xchg
decb
adcl
orb
andl
pop
jge
dec
movsl
mov
add
out
jae
pop
rolb
add
stos
clc
pop
or
push
je
sbb
sbb
icebp
nop
push
sub
in
cmpsb
dec
stc
or
ljmp
outsb
fwait
add
dec
fucom
out
rorb
jp
aad
fwait
movsl
pop
out
ljmp
inc
jge
xor
xor
out
cmpsb
xchg
jg
cmpsb
fmuls
and
repz
or
enter
es
jl
js
push
cmp
ret
jno
xchg
ret
outsl
xor
insl
xor
mov
mov
xlat
into
mov
xlat
push
jns
or
xchg
inc
dec
or
lds
push
jl
adcb
iret
lods
out
stos
push
mov
pushf
adc
clc
mov
push
xor
stos
mov
ds
scas
aam
mov
add
push
dec
dec
mov
subb
fs
xchg
ss
push
filds
loop
cwtl
xchg
push
xor
insl
mull
enter
rcrl
rorl
subb
sub
addr16
hlt
cmp
or
dec
aad
add
ret
stos
leave
or
sub
and
outsb
test
std
pop
sub
mov
pusha
or
test
fmuls
gs
xor
inc
leave
and
dec
dec
sahf
arpl
xchg
xchg
ret
sbb
fnsave
scas
cmp
xchg
in
roll
mov
xlat
xchg
xlat
mov
mov
jne
jne
daa
loope
in
lcall
cmpsb
jp
adc
push
xor
test
mov
insl
inc
loopne
lds
std
stos
fstpl
sub
cmp
adc
push
dec
sub
or
mov
or
fmul
dec
push
jmp
mov
fiaddl
andb
cmp
push
pop
sbb
jb
repz
inc
in
add
xor
or
push
out
mov
les
add
push
and
lods
xchg
add
repz
and
mov
lock
cmpsb
ficoms
into
frstor
fsubs
pop
jle
into
js
cmp
out
and
mov
mov
cs
je
pop
add
lret
inc
clc
cmp
inc
or
imul
cs
cmc
xor
pop
repnz
lods
jp
mov
pop
fmuls
mov
xor
mov
add
cmp
je
mov
xor
movl
movl
mov
sub
movl
add
movl
mov
mov
mov
xor
add
cmp
jne
mov
mov
mov
lea
mov
mov
mov
xor
add
mov
mov
xor
jmp
dec
mov
imul
insb
rcr
sub
fnstsw
call
xor
or
addr16
sub
jnp
pushfw
mov
sbb
jle
cmp
out
xor
jno
scas
dec
pop
test
gs
icebp
ficoml
sub
aad
cmp
fwait
outsl
ljmp
cld
sarl
xchg
mov
inc
loop
xchg
ret
call
lods
xlat
cltd
xor
orb
jbe
cmp
testb
mov
shlb
mov
or
sub
adc
lods
jne
mov
or
daa
xor
adc
les
int3
xchg
subl
fwait
std
mov
jle
jo
cli
inc
call
mov
mov
cltd
mov
nop
sub
mov
jmp
mov
dec
rcrl
iret
push
cwtl
mov
cmpsb
pop
jg
mov
int3
shlb
aad
nop
fildll
sbb
subl
add
or
jp
mov
push
inc
adc
stos
or
loopne
sub
lds
or
daa
pop
fdivrl
fisttpll
add
fisubl
mov
out
test
push
rorl
dec
aad
fldl
and
loop
jae
clc
shll
xor
out
in
inc
mov
xchg
test
mov
mov
push
repnz
pop
jnp
add
pusha
xchg
and
and
fidivs
xchg
sub
or
mov
push
inc
sti
sub
clc
gs
xchg
dec
out
push
push
into
push
jnp
pop
aad
pop
or
jb
call
inc
int
test
cmpb
xchg
mov
mov
xchg
fcmove
pop
fnstcw
jne
sbb
iret
pop
jo
rorl
mov
sub
adc
loop
mov
dec
fwait
das
rcrb
and
mov
xchg
and
cmpl
cld
pop
clc
mov
sub
ja
int
cli
or
xlat
in
mov
mov
or
and
call
int
sub
pcmpeqd
sbb
xchg
loopne
xchg
pop
aad
les
pop
ret
mov
lock
ret
pop
popl
cmp
add
call
in
mul
sahf
push
jb
arpl
in
sub
mov
mov
or
xchg
or
arpl
add
xchg
popa
test
pusha
add
jb
and
jae
fbstp
clc
mov
subl
xor
pop
pushf
mov
xlat
or
dec
xchg
adc
or
jo
push
jl
mov
popf
cmp
into
jle
gs
jg
lret
mov
sti
orl
jge
cli
push
pop
push
cmp
mov
rep
mov
aad
repnz
jnp
mov
hlt
lret
jno
addl
jnp
xor
pop
xchg
imul
test
in
and
jg
mov
negl
add
jb
pop
fdivrl
cltd
fucomip
sbb
adc
or
xor
sub
notl
mov
add
lahf
jmp
dec
dec
mov
jle
scas
inc
pushf
filds
out
mov
mov
enter
outsl
and
in
pop
inc
leave
mov
in
sbb
sub
sbb
or
aaa
xor
pop
clc
xchg
xor
xor
je
and
xchg
dec
jle
int
out
lea
dec
sbb
out
and
in
cli
sbb
mov
loope
ljmp
jle
and
xchg
xchg
mov
xorl
iret
ss
or
xchg
das
push
stc
je
pop
or
push
hlt
scas
and
adc
popf
fdivl
xor
xchg
stc
push
sbb
sub
xor
cli
sbb
add
lret
push
cmp
cmp
and
sbb
aas
leave
mov
and
sub
nop
sbb
stos
sbb
mov
cltd
sub
bsr
xchg
jle
add
hlt
pop
sti
sbb
enter
pop
mov
add
enter
notl
sub
pusha
stos
jnp
jo
cmc
outsl
push
inc
loop
pop
hlt
cmp
pushf
and
test
leave
mov
lea
dec
lcall
lcall
inc
mov
and
aad
mov
data16
pop
in
push
sub
mov
add
pushf
mov
push
jns
test
das
sbb
neg
dec
pop
jp
push
mov
mov
mov
cld
jg
movq
jl
xchg
xchg
scas
pop
out
nop
mov
push
jo
lret
xor
push
je
out
cmp
push
sbb
ret
pop
imul
mov
fistl
jmp
mov
jl
push
cltd
dec
adc
xchg
addr16
leave
mov
and
mov
mov
fstpt
fidivrs
xchg
jecxz
and
xor
pop
jl
mov
loop
adc
push
inc
or
imul
push
mov
pop
mov
dec
cs
sbb
push
add
mov
inc
in
int3
adc
sub
sub
es
in
push
pop
xchg
nop
or
pop
scas
push
sbb
pop
bound
or
jmp
repnz
jmp
mov
and
jle
pop
jle
or
push
mov
and
mov
mov
and
jmp
ret
dec
bound
popl
dec
or
cli
adc
pop
scas
shl
es
pop
sub
fmull
add
xlat
sbb
xchg
cmp
dec
push
inc
xor
adc
pop
jno
in
dec
leave
enter
dec
mov
pop
mov
mov
push
pop
fs
inc
mov
icebp
cs
or
fdivp
leave
aaa
orl
push
sbbb
xor
adc
pop
or
jns
nop
lds
clc
inc
outsl
cltd
and
jne
add
push
or
shrl
sbb
andb
rorb
xor
sbb
popf
outsb
sub
add
fmul
sbb
mov
pop
outsl
addr16
dec
sub
mov
daa
roll
divb
sbb
adc
hlt
xor
arpl
mov
xchg
inc
mov
stc
lret
jo
movb
data16
lahf
sub
pop
push
sbb
sbb
test
dec
and
push
mov
iret
xchg
ja
outsl
xorb
adc
les
ret
rcrb
jmp
adcb
sbb
xorb
bound
mov
test
in
jge
test
test
dec
mov
push
data16
sbb
popf
dec
addr16
in
ljmp
xchg
mov
mov
pop
jge
add
sbb
jmp
push
xor
out
adc
jno
adc
pop
dec
cmp
mov
mov
jge
cmc
adc
stos
cwtl
xorl
mov
int
rcrb
xor
or
xchg
data16
cmp
add
fsubs
mov
scas
fnstenv
and
arpl
xor
int
mov
insb
inc
repnz
stc
data16
cmc
mov
loopew
or
lock
popa
adc
inc
negb
dec
call
mov
lret
mov
jo
xor
add
jns
pop
nop
xchg
les
push
das
mov
mov
mov
inc
inc
inc
and
out
sarw
scas
or
dec
dec
cld
dec
fld
jns
inc
jmp
push
sbb
pop
insl
aas
into
inc
mov
push
push
outsb
jmp
cli
lods
jno
sub
loop
jnp
scas
mov
ds
add
sub
cmp
mov
faddp
sbb
xchg
out
ret
cmpsl
cmpsl
dec
stos
push
or
mov
add
or
shlb
stc
das
movsl
sarb
jne
mov
sbb
and
pop
adc
inc
pop
enter
ss
mov
mov
mov
leave
add
pop
dec
mov
enter
cwtl
xor
in
mov
out
jb
mov
dec
mov
in
mov
jle
imul
and
xor
fimuls
lret
mov
add
jbe
lock
movsl
lds
addr16
in
sbb
repz
leave
addr16
dec
sbbb
in
jno
stos
popa
ljmp
inc
data16
cwtl
mov
cmc
jno
sbb
xor
and
pop
mov
aas
lahf
out
inc
sub
dec
xor
fs
or
mov
pop
lock
icebp
outsl
fwait
add
dec
adc
fcoml
ljmp
mov
mov
divl
nop
stos
fxtract
scas
leave
and
fistpll
and
mov
dec
mov
dec
arpl
cwtl
sbb
out
sub
jecxz
cmpsl
shll
mov
pop
xchg
movswl
pop
sbb
ja
xchg
add
and
and
pusha
fs
and
pusha
sar
sti
movsb
xlat
add
int3
data16
mov
enter
das
fidivrs
mov
dec
mov
jb
mov
lods
in
lock
loope
sbb
out
outsl
mov
jb
in
mov
mov
xchg
mov
mov
enter
cwtl
fildll
insb
or
or
pop
lcall
add
jmp
mov
out
cwtl
jge
mov
add
jmp
daa
mov
xor
pop
sub
inc
inc
sub
outsb
jecxz
ss
stos
xor
push
jge
clc
jae
mov
subb
xchg
insl
adc
cld
lea
xor
pop
cld
aaa
or
dec
inc
sbb
mov
clc
addr16
vmovaps
mov
gs
cmp
mov
push
add
addr16
xor
insl
aas
mov
mov
jmp
aam
cmp
gs
push
lock
loope
pushf
sarl
push
or
notl
clc
lock
xchg
jbe
inc
xlat
jl
cmp
push
out
in
cmp
xchg
jge
je
and
push
or
out
cmp
in
iret
leave
out
dec
sub
sbb
jbe
add
insl
push
out
stos
inc
add
push
cli
cmp
mov
lret
sub
cmp
adc
out
mov
loopne
pop
mov
mov
jp
sub
cmp
pop
push
inc
mov
fstl
push
popf
call
jecxz
in
repnz
flds
loop
dec
jecxz
lds
mov
xor
pop
mov
leave
xchg
in
imul
push
dec
inc
sub
add
push
outsl
testl
stos
lods
inc
dec
dec
sbb
in
ljmp
mov
mov
lcall
inc
mov
enter
pop
roll
sub
loope
inc
pop
mov
cli
inc
fnstsw
cmc
call
sbb
xor
fs
pop
dec
xchg
into
sbb
push
inc
pop
or
mov
test
xchg
ljmp
adc
xor
xor
add
and
cmpl
xor
mov
mov
jmp
mov
in
arpl
movl
inc
pop
jo
push
mov
and
shl
int3
imul
shl
inc
clc
cmp
adc
testl
xor
jecxz
xchg
and
cmpsb
push
ja
inc
cmp
sahf
dec
dec
out
lock
popf
in
gs
rorl
je
push
shlb
lcall
pop
fildll
dec
xor
sbbl
cmp
or
lods
cld
and
jle
sub
and
xlat
mov
cmp
aas
cmp
jne
icebp
clc
testb
mov
inc
pop
jb
push
clc
scas
movsb
popa
xchg
stc
cmc
sub
push
pop
lret
push
push
xor
xor
loop
xor
stc
cmp
fimuls
lcall
xorb
clc
sub
jmp
dec
loopne
rcll
cltd
or
fs
ljmp
roll
stos
mov
ja
repz
test
out
ss
dec
inc
jl
add
jmp
insl
inc
mov
mov
cmp
mov
clc
mov
mov
stos
std
arpl
mov
jp
add
fsubrp
lahf
xchg
and
xor
gs
clc
outsb
repz
jnp
xor
punpckhbw
mov
mov
lods
lret
fnstenv
ret
jp
xchg
ror
jnp
lea
pop
stos
in
aaa
inc
add
pop
mov
lcall
cmp
out
ret
pop
arpl
add
push
icebp
xchg
cmp
aam
sub
mov
dec
aad
and
in
addb
stc
inc
jae
ss
inc
sub
pop
loop
mov
jg
aam
xchg
in
idivb
sti
xor
xlat
xor
frstor
mov
xchg
and
cwtl
in
fsubr
fs
es
test
xor
lods
addr16
cmp
test
mov
incb
push
dec
or
push
out
lds
push
pop
xor
rcrl
imul
jne
cmp
cmp
cmp
mov
adc
ss
out
mov
orl
hlt
int3
ret
xchg
and
jmp
pop
inc
fs
push
adc
push
or
out
xchg
and
push
popf
xchg
cmp
lret
add
dec
scas
test
movsb
pop
xor
pushf
bound
jbe
repnz
pop
mov
aas
xchg
jp
pop
mov
and
inc
sahf
repz
in
popf
outsb
mov
cmp
sub
adc
testl
outsb
fcmovb
mov
pop
push
outsb
mov
andb
mov
out
aam
dec
inc
imul
and
mov
es
imul
orl
xor
xor
mov
cmpsl
mov
test
mov
xor
push
lahf
mov
or
lods
lret
mov
rcrl
mov
push
push
jp
sub
ja
lcall
lret
and
es
push
push
in
imull
lods
bnd
adc
push
dec
and
mov
push
std
pop
jl
lahf
mov
lret
dec
dec
shll
lock
mov
imul
or
push
notb
cmp
sbb
jmp
xor
scas
inc
mov
gs
push
in
push
xchg
scas
sbb
mov
aaa
outsl
add
or
ds
imul
jb
outsb
pop
lret
push
jl
popl
leave
and
rcl
dec
add
sub
sub
imul
xor
in
adc
push
pop
ljmp
pop
daa
or
cltd
mov
and
ret
jp
dec
push
imul
roll
cmpsb
and
lret
pop
out
mov
cmp
mov
push
ror
ds
sub
xlat
xchg
mov
mov
jo
test
pop
add
cwtl
pop
scas
repnz
std
or
dec
out
mov
xchg
jb
and
sbb
sbb
push
push
xor
mov
daa
pop
into
sarb
dec
test
hlt
scas
sub
jnp
test
and
xorb
pop
inc
pop
jecxz
inc
dec
dec
cmpsl
push
in
cltd
lcall
mov
lcall
or
cld
xchg
std
into
and
sub
jne
jp
dec
jb
test
xor
lret
adc
les
jb
fisubrl
imul
enter
jnp
loope
cmp
aas
imul
pop
fwait
lret
in
jecxz
fisttps
aaa
dec
adc
loop
psllw
xorps
fistl
mov
inc
jb
addl
aaa
xchg
ss
push
cli
pop
rcl
ret
fldl
test
mov
lea
add
outsb
cmp
in
loop
out
jge
lret
cli
or
mov
lock
dec
dec
dec
jne
rdmsr
loopne
and
aam
push
cmp
pop
iret
ret
xor
daa
bound
pop
lret
xchg
iret
les
lahf
jl
cmpsb
inc
pop
and
cmp
sahf
lds
repnz
fidivrs
mov
pop
push
xor
adc
adcb
mov
mov
bound
push
loope
mov
idivb
imul
fldcw
push
sub
adc
push
stc
pop
mov
pop
xchg
fucomi
out
push
shl
maxps
add
out
into
cltd
mov
fs
fs
test
sub
adc
add
lahf
xlat
fwait
test
or
push
loope
push
mov
ss
fwait
jmp
mov
sahf
pop
add
cld
xchg
jno
ja
or
fistpll
cmpl
add
nop
jne
pop
push
insb
arpl
or
push
add
popf
add
in
adc
lret
cwtl
add
push
cwtl
mov
cs
gs
cli
mull
insl
pop
dec
dec
add
fsubl
lods
xchg
out
movsb
push
xlat
push
sub
inc
xchg
dec
sbb
hlt
xor
sbb
xor
scas
lret
dec
sahf
sub
xor
mov
arpl
mov
ficoms
add
jmp
xchg
in
and
push
hlt
adc
ret
adc
push
bound
popf
ret
push
lahf
mov
iret
sti
inc
fwait
sub
pop
mov
xchg
int3
sbb
mov
fnstsw
jg
dec
sbb
and
sarb
sub
lret
sbb
movsl
sub
cmp
testl
sub
mov
sbb
cs
xor
pushf
pushf
pop
repz
add
add
addr16
mov
rcll
cli
stc
es
movsl
jb
mov
pop
cmp
xchg
and
lcall
jge,pt
add
mov
mov
cmp
mov
imul
test
sub
lahf
scas
dec
pop
inc
dec
or
fwait
mov
cmpsb
cwtl
ror
sub
xor
arpl
or
adc
loopne
and
adc
pop
mov
enter
cmp
in
lret
movmskps
negl
inc
in
nop
and
cmc
push
add
int
lret
sub
fidivrl
and
dec
cmp
mov
aam
mov
pop
dec
sbb
push
aaa
xchg
test
loop
daa
out
sub
das
lock
and
mov
hlt
out
adc
jno
out
jne
xor
xchg
clc
std
sub
stos
gs
push
mov
add
test
call
mov
cmp
shr
inc
loopne
ficomps
lret
inc
mov
pop
cmp
bound
fucomip
aaa
mov
and
sub
jbe
mov
stc
cmp
and
adc
dec
and
xchg
lock
outsl
sbb
dec
lret
add
test
insl
ret
insb
pop
sub
int3
ret
sub
mov
rorl
dec
sub
insl
mov
add
fbld
xor
aas
xchg
incl
pop
shrl
in
jmp
adc
xor
dec
sub
inc
test
shrb
push
mov
mov
cmpsb
int3
dec
mov
jbe
movsl
inc
test
xchg
mov
sub
xchg
hlt
icebp
add
jle
xchg
cld
rorb
int3
arpl
mov
popa
enter
pop
dec
push
cmp
or
sub
mov
idivb
xor
mov
sbb
js
aad
add
fmull
mov
les
cltd
fstps
or
adc
cmpsb
stc
xlat
into
jae
ja
outsl
push
pushf
mov
xchg
dec
rcrb
outsb
aad
add
jns
ss
adc
out
cld
inc
cmpsb
fsubs
test
ja
rcrb
mov
mov
xchg
sub
mov
sbb
jecxz
popf
cwtl
aaa
and
scas
rcll
test
push
pop
jbe
mov
jbe
int
ficoml
sbb
mov
mov
aad
fadd
clc
pushf
nop
sub
cmpsb
mov
xchg
mov
push
and
cmc
addl
jns,pt
out
xor
in
inc
jle
in
cmpsl
imul
js
repz
lods
fisttpll
ret
mov
pop
sbb
push
mov
add
jmp
mov
imul
daa
inc
roll
imul
dec
std
pop
cmovl
sub
fcmove
dec
xchg
jcxz
adc
addr16
dec
mov
add
mov
faddl
and
pushf
repz
sub
mov
mov
pop
faddl
jmp
imul
jnp
js
add
lea
sub
popa
in
dec
insl
lret
pop
aad
add
fcompl
mov
push
push
lret
add
out
mov
gs
pop
enter
lret
mov
mov
daa
mov
cli
mov
js
jg
xchg
pop
cli
adc
sbb
ror
aas
in
test
popa
rolb
outsb
outsb
push
pop
stc
cmp
pop
ss
ret
jb
push
cmp
adc
jne
loop
movsl
stos
sbb
sbb
mov
sbb
int
test
or
daa
int
rorb
lods
push
mov
insb
nop
in
lods
mov
out
or
add
add
dec
ss
loopne
or
mov
stos
test
pop
cmp
xchg
add
fbstp
jae
call
sbb
lds
int
lods
sbb
ret
inc
addr16
xor
or
loopne
int
orb
test
lock
stos
cmpsl
push
mov
cmpsb
mov
or
xor
inc
adc
clc
jbe
push
ds
stc
outsl
and
pushf
into
or
pop
adc
push
pop
rcrb
adc
mov
cmpsb
enter
enter
bound
push
lock
xor
pop
or
rcr
rcl
dec
mov
sti
in
and
cmp
subb
mov
add
sub
pop
inc
mov
les
xor
cmpsl
lahf
je
pop
mulb
cmp
or
cmp
aas
jg
int
jmp
out
lahf
add
pop
push
mov
iret
sbb
push
js
or
add
in
clc
ds
sbb
sbb
xor
scas
rcll
mov
jae
es
fwait
mov
add
loope
mov
outsl
push
popf
jl
mov
cmp
jl
fldl
popf
aaa
mov
mov
pop
mov
fisubs
add
movsl
cmpsb
test
inc
enter
xchg
dec
push
pop
repnz
jnp
jecxz
scas
aad
outsl
fcmovu
push
stos
inc
mov
sub
out
clc
ss
out
cmp
xchg
loopne
and
repz
int
popf
repnz
adc
ds
in
push
fmuls
shlb
cwtl
jle
xor
cmp
jp
rclb
jno
or
insl
rcr
inc
mov
add
fcmovbe
xchg
adc
dec
and
dec
push
inc
mov
es
movb
mov
sub
and
mov
mov
cmp
mov
aas
addr16
mov
fwait
cs
stos
xor
or
clc
xor
lds
roll
and
or
pop
jg
push
out
les
xchg
sbb
adcl
aaa
push
imul
pusha
fiaddl
add
adc
fnstenv
jne
fnstcw
insb
fidivs
push
mov
scas
sahf
sub
cmp
push
add
lahf
adc
adc
mov
lahf
dec
stos
in
lds
imul
outsb
jns
jae
jmp
dec
push
pop
xchg
sbb
sbb
mov
and
insl
shlb
call
int
sbbl
scas
fisubs
mov
pop
aam
aaa
pop
rorb
shlb
popf
sub
lret
lods
std
loopne
mov
mov
stos
mov
scas
sar
stos
sub
cld
outsl
jo
in
jbe
lahf
pushf
mov
xor
adc
cmp
int
pop
testb
je
mov
pop
pop
pop
sub
pop
inc
mov
shrb
scas
test
loop
popf
les
ret
stc
popa
or
rorb
movsb
pop
or
xchg
std
jp
mov
xchg
lret
or
movsl
iret
fcompl
add
xchg
out
jae
push
shll
mov
jo
jno
mov
cmp
mov
cmp
dec
bnd
sbb
scas
aas
int
lds
or
aaa
add
rcll
aad
out
cs
in
push
xlat
mov
icebp
test
shrb
mov
lods
loope
mov
repz
lock
ret
inc
sahf
test
xchg
mov
int3
pop
or
xchg
leave
arpl
jo
lods
or
fwait
stos
mov
pop
sahf
cmp
stc
sub
jbe
and
cmp
pop
inc
and
movsb
and
dec
xchg
sub
call
call
cmpsl
jns
xor
pushf
mov
pop
pop
test
lahf
xchg
pop
xchg
xor
fmull
aas
call
add
mov
pop
xchg
inc
jnp
mov
lods
loopne
mov
or
xchg
stc
mov
jnp
pop
sbb
or
push
xor
add
mov
loop
pop
loopne
ja
fidivrs
cmpl
mov
add
je
jae
xchg
dec
jp
cmpsl
add
pushf
xor
pop
jp
pop
das
jecxz
xlat
push
sub
mov
xor
mov
mov
lods
jne
insb
xor
loopne
pop
push
mov
loope
mov
fcmovnb
mov
dec
mov
and
push
inc
fidivs
mov
mov
imul
add
adc
adc
cwtl
popf
mov
xlat
mov
pop
pop
inc
fadds
fists
mov
mov
daa
push
subb
or
iret
mov
xchg
imul
mov
pusha
outsb
loopne
lock
sar
xor
sub
adc
aaa
mov
sub
cmpsb
sbb
jge
mov
gs
mov
ss
outsb
mov
fldt
jg
adc
cli
mov
cld
sbb
shl
fdivrl
or
aaa
je
sbb
outsb
jl
sub
cmp
xchg
push
sbb
sbb
sub
add
sbb
inc
pushf
push
enter
push
add
mov
mov
xor
pop
pop
mov
fwait
sbb
mov
mov
or
pop
imul
lds
enter
jo
pop
fbstp
mov
imul
test
cs
ja
mov
outsb
xchg
imul
xlat
cmpsl
cmp
cmp
push
push
mov
jge
lcall
mov
pop
cmc
dec
xor
mov
push
dec
scas
mov
mov
jo
xchg
or
fistl
scas
pop
adc
cmp
iret
mov
xchg
add
ss
mov
aad
mov
xor
aaa
mov
loop
clc
out
js
fimull
aad
jae
pop
jbe
mov
jge
add
sub
imull
mov
arpl
xchg
mov
mov
adc
cmpsb
mov
nop
and
fidivrs
int3
in
es
int
lcall
negl
lcall
sbb
jb
leave
decb
insl
imul
add
hlt
dec
mov
mov
ds
push
insl
sbb
fmull
call
fwait
jns
push
xchg
xchg
jmp
test
dec
pop
cwtl
iret
cmpsb
cltd
or
dec
fxch
cmp
mov
or
jge
cwtl
jge
xchg
cltd
cmp
jae
cmp
dec
ret
xchg
loopne
mov
or
in
cld
lahf
jo
adc
adc
cmp
enter
shlb
fldcw
call
push
push
xchg
pop
push
stos
lds
test
clc
sbb
lods
mov
mov
ljmp
or
lds
outsl
mov
sahf
int3
std
inc
pop
push
mov
repnz
ret
or
and
shrb
ss
add
cmp
icebp
loopne
clc
aas
shl
jo
adc
fiadds
stc
mov
data16
jmp
or
rolb
loope
rorb
pusha
fadds
push
xchg
stos
jns
fisttps
rcl
aas
arpl
movsl
mov
mov
arpl
mov
mov
mov
jae
fwait
je
fwait
bound
mov
lock
shl
call
popf
sti
sbb
push
aam
jecxz
les
add
or
stos
sbb
mov
pop
scas
pop
test
push
or
call
sub
out
add
add
nop
sbb
out
test
adc
inc
into
pop
int
xchg
xchg
fldenv
bound
xlat
mov
and
xor
mov
jp
jp
mov
and
cmpsb
pop
bound
movsb
in
pop
push
lret
sub
push
sbb
mov
xchg
pop
dec
mov
dec
scas
xchg
repnz
ffree
push
fs
test
mov
ret
cwtl
incb
mov
leave
faddl
daa
xlat
or
insl
inc
xchg
dec
fucomip
jg
xchg
mov
pushf
push
insl
test
sub
gs
mov
or
dec
bound
dec
addr16
mov
popa
stos
and
xchg
stos
das
xor
push
andb
mov
dec
push
xor
push
pop
xchg
jl
decl
inc
sub
jl
out
push
or
push
sahf
nop
push
xchg
jb
incb
mov
xchg
sbb
push
adc
lods
cwtl
lret
cwtl
pop
cmp
decl
aam
dec
inc
int
mov
aad
push
mov
dec
stos
mov
ret
cli
jbe
filds
mov
mov
push
in
xchg
dec
and
sbb
adc
sbb
es
scas
sbb
mov
pop
clc
outsb
in
popa
icebp
cs
xchg
shlb
pop
jae
scas
mov
jmp
test
ficompl
mov
iret
mov
cwtl
pop
jmp
mov
jp
dec
jecxz
insl
aas
dec
sub
dec
add
imul
cltd
daa
dec
ret
cmp
jp
jns
test
in
aad
xor
jo
sub
aad
shl
stos
jmp
mov
pop
fdiv
inc
test
push
scas
and
cmpsl
test
data16
icebp
stos
pop
and
or
xor
std
int3
dec
pop
notb
pop
repz
jg
jmp
call
je
mov
add
mov
mov
mov
mov
xor
mov
mov
add
cmp
jne
mov
mov
mov
jmp
pushl
pushl
jmp
mov
mov
cmp
jne
cmp
jne
push
push
jmp
mov
mov
mov
cmp
jne
cmp
jne
push
push
jmp
mov
mov
cmp
jne
cmp
jne
push
push
pushl
pushl
pushl
pushl
call
pop
pop
pop
leave
ret
push
mov
and
addl
mov
sub
movl
push
push
push
movl
cmp
movl
je
orl
xor
movl
jmp
mov
cmp
movl
jne
neg
mov
andl
push
sbbl
push
adcl
call
test
movl
je
push
andl
call
movl
mov
mov
movl
cmpl
je
cmpl
jle
jmp
pushl
push
push
call
cmpl
jne
xor
add
dec
mov
mov
dec
mov
jmp
movl
lea
mov
mov
mov
sub
sub
lea
mov
subl
mov
mov
sbb
mov
movl
mov
mov
andl
jmp
xor
xor
inc
mov
cmpl
jae
cmpl
jge
jmp
pushl
push
pushl
pushl
call
jmp
mov
andl
xor
mov
add
mov
movl
mov
movl
cmp
movl
jne
andl
mov
inc
mov
cmpl
jl
jmp
push
push
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
xor
mov
mov
addl
xor
adcl
add
andl
mov
mov
subl
xor
add
adcl
mov
mov
adcl
xor
add
subl
mov
mov
sbbl
mov
adcl
mov
sbbl
mov
adc
mov
mov
incl
mov
xorl
mov
mov
negl
mov
movzwl
sbb
mov
movl
sbbl
mov
xor
add
jmp
movl
mov
movl
cmp
movl
jne
movl
mov
cmp
movl
jne
push
orl
push
call
test
movl
je
movl
mov
cmp
jne
mov
movl
cmp
movl
jne
subl
push
push
call
sbbl
test
movl
je
andl
xor
xor
inc
mov
cmpl
ja
jmp
call
cmpl
jne
xor
add
inc
mov
cmpl
jb
mov
adc
mov
xor
lea
push
xor
mov
adcl
xor
sbbl
lea
xorl
push
xor
mov
adcl
pushl
adcl
call
mov
mov
xor
andl
mov
inc
mov
cmpl
jl
jmp
push
push
push
pushl
call
cmpl
jb
lea
mov
mov
xor
sbbl
xor
add
sbb
mov
adcl
xor
movl
lea
movl
mov
cmp
movl
jbe
mov
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jl
jmp
pushl
call
jmp
mov
mov
mov
mov
sub
xor
mov
inc
mov
sbbl
sub
subl
xor
mov
movl
lea
movl
mov
movl
lea
movl
mov
movl
mov
cmp
jne
mov
movl
cmp
movl
jne
subl
push
sbbl
push
sbbl
call
test
movl
je
mov
movl
cmp
movl
jne
mov
cmp
jne
push
addl
push
call
test
je
movl
mov
movl
cmp
movl
jne
movl
mov
movl
cmp
jne
push
adcl
push
call
adcl
test
je
movl
mov
movl
cmp
movl
jne
mov
cmp
jne
xorl
push
push
call
test
je
movl
mov
movl
cmp
jne
mov
movl
cmp
movl
jne
addl
push
movl
push
xorl
call
test
movl
je
movl
mov
movl
cmp
movl
jne
movl
mov
movl
cmp
movl
jne
adcl
push
push
call
movl
test
je
mov
movl
cmp
jne
movl
mov
movl
cmp
movl
jne
subl
push
addl
push
subl
call
adcl
test
je
mov
movl
cmp
movl
jne
mov
movl
cmp
movl
jne
sbbl
push
adcl
push
call
test
movl
je
movl
mov
movl
cmp
movl
jne
movl
mov
cmp
movl
jne
push
push
call
xorl
test
movl
je
mov
movl
cmp
movl
jne
movl
mov
movl
cmp
movl
jne
push
push
call
test
je
mov
movl
cmp
movl
jne
mov
movl
cmp
movl
jne
push
xorl
push
call
test
je
mov
movl
cmp
movl
jne
movl
mov
cmp
jne
push
subl
push
call
orl
test
je
movl
mov
cmp
jne
mov
cmp
jne
push
push
call
test
je
mov
cmp
jne
mov
cmp
jne
push
push
call
test
je
mov
cmp
jne
mov
cmp
jne
push
push
call
test
je
mov
cmp
jne
mov
cmp
jne
push
push
call
test
je
mov
cmp
jne
mov
cmp
jne
push
push
call
test
je
mov
cmp
jne
mov
cmp
jne
push
push
call
test
je
mov
cmp
jne
mov
cmp
jne
push
push
call
test
je
mov
cmp
jne
mov
cmp
jne
push
push
call
test
je
mov
cmp
jne
mov
cmp
jne
push
push
call
test
je
mov
cmp
je
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
pushl
mov
pushl
add
mov
mov
pushl
call
mov
mov
mov
jmp
mov
mov
xor
add
cmp
jne
mov
mov
mov
xor
add
cmp
jne
mov
push
push
xor
add
push
push
pushl
pushl
call
pushl
pushl
call
mov
xor
add
mov
mov
xor
add
mov
mov
test
je
movl
movl
movl
movl
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
andl
mov
add
adcl
mov
xor
mov
mov
xor
cmpl
mov
jne
cmp
je
mov
mov
cltd
add
adc
andl
xor
mov
mov
mov
xor
add
mov
adcl
xor
mov
mov
xor
mov
cmp
jne
mov
cmp
je
mov
add
mov
jmp
mov
mov
xor
mov
mov
mov
add
mov
mov
xor
add
xor
add
adc
xor
xor
xor
add
adc
xor
xor
cmp
jne
cmp
jne
mov
mov
mov
push
add
push
lea
push
call
mov
mov
pop
pop
pop
mov
pop
ret
push
mov
sub
mov
mov
sub
add
mov
and
mov
andl
mov
inc
mov
cmpl
jge
jmp
push
call
cmpl
jne
xor
add
inc
mov
cmpl
jb
movl
mov
sbb
mov
movl
cmpl
je
cmpl
jg
jmp
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
push
or
mov
mov
and
xor
xor
mov
push
xorl
mov
add
movl
cmp
je
mov
movzwl
add
mov
xor
xor
add
addl
add
movl
adc
andl
xor
mov
push
xor
xor
mov
add
adc
xor
xor
cmp
jne
cmp
je
jmp
mov
mov
mov
xor
add
mov
imul
mov
xor
add
mov
mov
mov
mov
xor
xor
add
adc
lea
xor
xor
xor
mov
add
adc
xor
xor
cmp
jne
cmp
jne
mov
pop
pop
pop
leave
ret
push
mov
push
andl
mov
inc
mov
cmpl
jge
jmp
push
call
cmpl
jb
movl
negl
mov
or
movsbl
sub
jmp
ret
addb
inc
cmc
in
sub
mov
rcrl
movsb
orb
pusha
pop
inc
int
nop
pop
mov
adc
mov
fbld
cmp
cmp
enter
jmp
adc
mul
push
sub
mov
xor
daa
mov
xor
adcl
call
xchg
lcall
add
xor
bound
add
push
cs
inc
rcrb
hlt
in
test
mov
sub
mov
pushf
pushl
jmp
jno
pop
xchg
ja
arpl
mov
push
xchg
mov
lahf
cltd
cli
ffreep
gs
sti
pushf
pop
popf
ss
xchg
pop
xorl
mov
xor
cltd
mov
pop
jp
xchg
call
mov
pop
mov
mov
imul
cmp
push
mov
arpl
orl
pop
or
and
filds
sbb
pop
mov
aam
arpl
aam
sub
push
scas
or
cli
mov
rolb
lret
xchg
dec
roll
lahf
push
icebp
frstor
cli
xor
mov
ds
sbb
mov
xor
jp
jl
dec
inc
cmp
and
cmpsb
xor
jae
dec
and
push
push
dec
les
lcall
jle
push
add
mov
dec
pushf
or
lods
jbe
cltd
lods
jb
add
inc
pop
enter
cld
outsl
dec
pop
js
in
jns
push
or
push
fldl
iret
es
inc
xor
adc
add
inc
out
pop
call
int3
or
pop
or
cmp
lods
or
call
sub
and
lods
enter
push
jmp
and
js
stos
mov
leave
pop
ds
mov
rcrl
jns
inc
daa
aaa
lcall
in
in
jecxz
clc
gs
and
sub
outsb
jae
lret
rcll
mov
cmpsb
ret
xor
nop
ret
pop
mov
cwtl
fs
sbb
push
jnp
shl
notb
add
cmp
xor
inc
mov
dec
or
pop
pop
les
repz
jnp
cmp
aam
jl
stos
shrb
xorb
arpl
sbb
pop
lret
fs
pushf
mul
add
sub
mov
arpl
or
cld
mov
stos
mov
ret
pushf
inc
jmp
mov
fldenv
xor
loop
xor
repnz
ret
out
pop
arpl
push
pop
insl
dec
mov
cltd
mov
lods
stc
movsl
insl
cs
mov
or
mov
sub
mov
jbe
mov
mull
scas
test
inc
dec
sbb
test
pop
adc
jb
push
sbb
mov
and
jae
sahf
push
inc
push
mov
or
stos
sub
repnz
mov
jb
inc
jb
push
into
aad
movl
aad
sub
int3
iret
xchg
daa
divb
add
sub
jge
xlat
jne
push
rorl
sbb
fimull
cmc
push
jmp
inc
and
loopne
jle
stos
mov
sahf
hlt
test
out
jl
sbb
stos
sub
fs
xlat
sarl
ror
aas
rorb
lods
dec
sub
jb
into
fildll
jbe
xchg
data16
pop
jmp
inc
fiaddl
push
jl
mov
fwait
add
aam
vpmaskmovd
pop
mov
add
mov
xchg
cmp
adc
mov
sub
mov
loopne
mov
es
in
add
pop
jo
add
sub
mov
dec
cwtl
or
or
imul
xchg
xchg
adc
cmpsl
xchg
jge
fbld
push
or
icebp
mov
scas
ficoml
dec
jae
movsb
in
into
xor
adc
cs
clc
jne
rcl
jmp
adcb
or
cmp
in
rol
dec
jb
xchg
mov
dec
pop
push
jns
pop
jmp
in
pop
aas
or
mov
popa
in
mov
mov
cmp
mov
pop
cmp
pop
sub
mull
ljmp
ljmp
mov
push
or
dec
mov
jecxz
inc
push
push
xchg
dec
pop
push
add
insb
arpl
mov
incl
stos
inc
mov
cmp
pop
fdiv
or
or
and
cmp
dec
test
xor
push
js
lret
fwait
xor
jbe
mov
ljmp
test
out
jge
cltd
mov
add
or
dec
in
jo
rcrb
dec
out
jnp
cmp
test
xchg
pop
aaa
inc
adc
dec
jb
flds
sub
jle
mov
push
jp
inc
push
inc
test
arpl
mov
push
push
lds
out
lea
cmova
std
push
adc
dec
fimuls
decb
iret
sbb
push
jmp
dec
popf
sub
adc
jne
rcrl
mov
inc
or
push
bound
xor
jge
aam
cmpsl
shlb
rcrb
add
add
or
sbb
mov
cmp
repz
jmp
push
repnz
push
mov
orl
out
or
cs
into
dec
inc
fs
sbb
adcl
addb
adc
sarl
or
adc
jp
addr16
mov
fwait
add
and
lret
jae
nop
enter
negb
mov
cmpsl
add
stc
xor
mov
jmp
int
mov
dec
fwait
aam
dec
mov
and
mov
incb
movsb
mov
push
popf
sbb
call
iret
jne
and
shll
cwtl
jbe
lret
lock
lods
cwtl
out
xchg
inc
dec
stc
fsubs
cmpsl
lods
jle
and
mov
test
fbld
loopne
xchg
daa
cmp
and
xchg
loope
add
shrl
sbbl
ljmp
movsb
and
push
imul
fcoml
outsl
and
mov
jmp
pop
std
sub
adc
dec
xchg
jnp
pop
xor
dec
pop
xlat
cmp
mov
inc
xchg
mov
adc
aad
fs
inc
loope
es
and
mov
popf
mov
rcrb
adc
shll
and
mov
clc
jo
mov
lods
mov
cmp
jge
mov
sbb
pusha
or
imul
cmpsl
pop
jp
dec
stos
mov
mov
cld
add
xor
jge
pop
push
cmp
lea
sub
mov
ret
jb
push
or
xorl
pushf
inc
inc
sbb
ret
fcompl
xchg
add
js
dec
sub
xlat
adc
cmp
xchg
mov
inc
sub
out
out
das
cmp
nop
xor
test
sarb
adc
add
popa
popf
test
push
cmp
sahf
or
nop
cltd
mov
adc
repz
add
sbb
ret
lock
push
lock
stos
and
lods
cmp
jge
lods
nop
mov
mov
pop
mov
pushf
insl
dec
in
inc
mov
sbb
xor
sbbb
sbb
and
mov
sub
out
mov
shl
cmp
cmp
cmp
lret
mov
fmuls
cltd
sub
mov
inc
int
neg
inc
cltd
cmp
mov
pop
lret
mov
ret
push
lret
test
jns
xor
dec
ffreep
data16
inc
jp
dec
xchg
mov
lods
dec
jmp
mov
testb
cli
leave
popa
push
mov
in
js
inc
cmp
sub
ja
cmc
fsubr
clc
lret
xor
lret
pop
sbb
jno
lea
fisttpll
add
inc
out
xchg
in
jb
leave
sub
mov
adc
or
xchg
inc
sub
lret
and
adc
adc
loop
int
imul
cmpsb
cmp
inc
sub
xor
or
repz
roll
insl
shrb
std
push
pop
mov
mov
ss
mov
ret
rcrb
stc
jl
dec
bnd
mov
dec
ja
lret
pop
cli
mov
shll
mov
xchg
int3
or
lret
mov
sbb
dec
data16
shll
cld
or
in
or
iret
into
loop
or
cwtl
sub
add
pop
loopne
repnz
js
andb
lds
out
repz
fistpll
xor
cld
stos
es
sbb
add
loop
jae
jl
and
dec
xlat
push
lea
cli
cmp
mov
in
rorl
jo
xor
push
cmc
mov
arpl
outsb
push
cmp
repz
jns
dec
adc
or
inc
ret
std
into
push
faddl
pop
push
add
out
push
xor
testb
push
mov
call
mov
sysenter
shl
lea
lret
scas
shrl
mov
outsb
xor
dec
mov
mov
mov
xchg
mov
lahf
inc
pop
shl
test
or
fisttps
movsl
sbb
push
mov
scas
add
cmc
test
xchg
fisttps
inc
enter
out
cmpsb
jp
xchg
ja
mov
xchg
icebp
xor
clc
sbb
xchg
arpl
mov
pop
subl
pop
mov
mov
sub
dec
cmp
mov
fnsave
ljmp
pop
pop
pop
adcb
imul
jbe
adc
jno
sbb
js
test
or
insb
loope
fs
stos
repnz
in
mov
push
test
outsb
jne
sub
out
fcomps
sbb
outsb
mov
sarl
stos
cmp
inc
pop
mov
jp
or
cmpsb
sbbb
loope
ljmp
cwtl
adc
push
add
mov
inc
dec
cld
or
cmp
push
test
mov
cmp
sub
sub
and
iret
xchg
ret
icebp
mov
aaa
scas
mov
push
data16
out
xlat
cmc
mov
xchg
sbb
lds
mov
xlat
icebp
fdivrs
fcompl
mov
je
dec
int
lds
leave
jns
andl
pop
stos
das
ret
or
and
mov
clc
cmp
mov
pop
push
int
es
arpl
cmc
xor
mov
push
xlat
pop
test
ret
les
outsl
insl
notb
push
pop
push
or
push
out
int
pop
jecxz
push
fisttpl
push
inc
ret
roll
insb
and
or
xor
dec
inc
pop
sahf
mov
mov
faddl
inc
adc
pop
fisttpll
in
jo
add
mov
in
pop
outsl
jbe
sbb
sti
sub
dec
roll
pop
or
mov
std
arpl
pop
jae
pop
lret
popf
sub
test
fidivrs
or
icebp
and
loope
out
out
sbb
sarl
push
ret
xchg
cmp
dec
lods
jg
pop
jbe
sbb
loopne
mov
inc
push
nop
test
push
das
inc
das
js
mov
xchg
movsb
xchg
enter
shrl
xchg
call
dec
mov
jne
adc
iret
add
sbbb
imul
fnstsw
ds
out
stc
ret
sahf
fisubrs
xor
mov
scas
fsts
mov
outsb
mov
xchg
mov
cmp
sarb
jmpw
insb
xchg
mov
mov
stos
icebp
cmp
clc
sub
pop
lods
ljmp
mov
es
roll
das
dec
js
cmp
or
xor
lret
xor
repz
jp
sbb
mov
mov
dec
mov
sahf
sbb
push
add
sbb
addb
fwait
movb
inc
push
dec
xor
mov
and
xor
mov
pushf
lods
cmp
int3
cmp
xlat
aad
cmpsl
bound
push
vpavgw
pop
push
hlt
mov
push
mov
sahf
icebp
mov
jb
sbb
sbb
lcall
bound
push
and
pop
cmc
mov
or
add
das
hlt
shll
fimuls
jae
jp
clc
in
jmp
xchg
lahf
and
ficoml
jbe
pop
lea
push
aad
inc
mov
xchg
movl
mov
pop
pop
inc
adc
sbbl
iret
dec
rcl
lret
mov
xor
popa
jb
inc
shr
pop
fwait
or
pop
jbe
add
jns
add
sbb
pop
jnp
mov
jmp
xchg
gs
mov
negl
lods
jbe
arpl
sti
test
xor
add
mov
mov
sub
inc
fnsave
dec
cmp
inc
sbb
loope
cltd
inc
pop
mov
mov
pop
sub
pusha
lahf
lcall
fwait
mov
add
scas
xor
sarl
shll
icebp
imul
lcall
test
inc
mov
sub
push
xchg
nop
add
repnz
push
cmp
lcall
push
sti
lods
xor
sub
fcomp
pop
loope
push
mov
fwait
clc
arpl
jg
das
enter
movsb
xchg
stos
fwait
sub
cmpsl
or
pop
sbb
mov
xchg
scas
lods
mov
sbb
xor
cmp
mov
dec
fsubl
adc
xor
shrb
stc
iret
mov
adc
xor
lret
sub
sbb
lahf
imul
ret
add
pop
push
jnp
fs
inc
mov
jns
jnp
roll
inc
negl
add
frstor
adc
jge
jge
rcl
mov
lahf
inc
cmpl
frstor
push
cli
mov
mov
sub
scas
mov
scas
jae
push
out
push
adc
je
in
test
test
mov
fwait
xchg
add
inc
pop
repnz
leave
mov
mov
lret
pop
notb
imul
cld
popf
arpl
imul
sbb
cmpsb
xor
aaa
data16
sub
cmp
out
mov
jle
inc
sub
mov
jmp
arpl
sti
iret
jae
adc
popf
jmp
jbe
cmp
mov
les
mov
imul
nop
mov
sahf
adc
xchg
xchg
xchg
jns
test
sbbb
dec
push
or
sub
xor
and
mov
push
sahf
fnsave
cmpsl
sbb
or
inc
pop
pop
jle
xchg
je
arpl
jge
mov
int3
dec
dec
mov
dec
mov
shl
and
push
mov
test
adcb
insb
push
inc
mov
jg
out
loope
fcoms
stos
jae
sbb
inc
lret
subl
lods
xchg
jg
sbb
pushf
nop
push
lds
xor
and
sbb
fistpll
fldcw
in
dec
adc
scas
push
mov
nop
sbb
cmp
fdivrs
mov
das
inc
repnz
int
test
mov
xchg
arpl
dec
ljmp
mov
pop
push
inc
rolb
sahf
dec
sub
loope
rolb
inc
outsb
mov
fimull
in
push
lods
mov
lds
inc
je
cmp
ds
inc
push
cmc
sbb
xor
insl
adc
jp,pn
stos
mov
inc
aaa
inc
dec
mov
push
nop
sub
fisubs
ret
jl
ret
aas
sbb
sti
mov
mov
push
jo
loop
jb
dec
jbe
dec
insb
sub
sarl
mov
xchg
xchg
add
rclb
jbe
add
lret
repz
pop
jecxz
xorl
decl
xchg
leave
inc
outsb
xor
add
je
insl
sbb
cmp
push
mov
and
pop
ret
pop
dec
dec
jmp
aas
stc
pop
inc
mov
mov
test
aas
inc
rcrb
mov
dec
mov
xor
push
ljmp
inc
lret
add
sbb
mov
lds
outsl
in
dec
and
aas
clc
or
cmp
mov
jmp
scas
push
fdivr
mov
push
loopne
pop
push
jb
mov
sbb
mov
xlat
cltd
dec
pop
test
jbe
pop
mov
xor
cmpsb
sub
xchg
pop
pop
mov
pop
gs
xor
lret
push
mov
and
fcomi
jmp
xchg
inc
mov
mov
frstor
insb
cmpsb
mov
mov
pushf
xchg
loope
shlb
cli
clc
cmc
inc
ja
or
push
xchg
sub
fisttpll
jbe
test
loop
jae
inc
cmc
mov
jg
stc
mov
incl
pop
sar
loope
and
pop
pop
push
cmp
stc
sub
out
cwtl
inc
dec
test
jae
in
scas
pusha
insl
lods
xchg
cli
stc
les
fnstsw
fwait
jnp
test
ja
sbb
or
mov
xor
inc
and
sarb
pop
pop
xlat
mov
lock
test
cmpsb
or
mov
into
out
jne
or
sbb
rcll
bound
in
jl
movsl
stc
jmp
in
out
inc
in
stos
xbegin
xchg
enter
xchg
or
das
xchg
sub
inc
mov
dec
lods
bound
loop
push
cwtl
sub
mov
xchg
push
ret
addr16
add
mov
test
mov
int
adc
cmp
mov
fldpi
ljmp
and
pop
sarl
cmp
aaa
sub
int3
mov
cmp
gs
pop
mov
sub
inc
push
icebp
add
lods
xor
stos
and
sbb
cmp
mov
aam
lds
gs
mov
push
gs
mov
xor
jge
mov
or
sbb
ret
jecxz
xchg
ret
adc
jno
decb
push
in
shll
jp
sbbb
cmp
outsb
shr
push
adc
imul
mov
push
mov
adc
nop
mov
pop
jbe
in
add
push
adc
and
push
and
rorb
add
xor
mov
das
sbb
subl
lret
icebp
scas
jmp
cmp
inc
ret
inc
mov
pusha
frstor
sbb
daa
mov
mov
push
xchg
inc
sub
data16
enter
push
sub
roll
xor
pop
pop
inc
fcom
lods
jb
mov
mov
push
lock
inc
mov
scas
dec
xchg
push
fmull
vcvtss2si
int3
lods
mov
jp
mov
ljmp
jge
push
and
mov
add
or
sub
sub
mov
add
adc
insl
push
mov
push
pop
push
inc
test
sub
imul
popa
add
addl
push
test
inc
pop
pop
out
sbbb
loop
xor
mov
xchg
mov
cmp
push
add
jae
insl
cld
mov
mov
xchg
cmp
inc
jne
clc
mov
fsts
cmpsl
sbb
leave
add
sub
clc
mull
cmpsl
jbe
ljmp
mov
jmp
pop
jecxz
push
push
xor
pop
cmp
xor
xchg
arpl
fsts
ljmp
std
sti
and
fsts
mov
push
leave
jbe
push
mov
in
push
imul
jae
sbb
xchg
lahf
adcl
dec
pop
push
neg
fldt
movb
cli
dec
loope
fdivl
outsl
mov
adc
into
cmpsb
dec
in
addl
mov
dec
sti
inc
cmp
adc
xor
or
repz
sbb
cmc
ret
jmp
les
cmp
cmp
and
adc
jge
mov
dec
sub
in
push
lods
jge
dec
cmp
sbb
sti
mov
mov
mov
fsubs
insl
enter
and
mov
pop
cmp
imulb
stos
cmp
enter
ss
ret
popf
inc
mov
xchg
fnstsw
popf
mov
dec
xchg
ljmp
mov
iret
add
fldt
or
mov
jecxz
repz
loope
mov
not
sub
pop
ds
jl
sbb
mov
adc
xchg
loope
mov
adc
inc
xlat
cmp
and
push
mov
add
mov
mov
lret
xchg
jg
lea
push
sbb
fnsave
adcb
addr16
mov
xchg
pop
stc
jecxz
dec
add
lea
sub
rol
int3
test
loop
mov
xor
clc
testl
push
addr16
fidivrl
xchg
out
mov
mov
es
cltd
push
dec
inc
sahf
outsb
mov
mov
std
add
adc
sub
or
mov
call
jge
in
sbb
cmp
adc
iret
sbb
rolb
add
mov
mov
in
xchg
mov
sub
inc
cs
das
xchg
insb
cmc
movsb
popa
in
mov
cmp
xor
dec
out
subb
out
out
sub
hlt
push
cmpsl
cmc
popf
ljmp
dec
sarl
push
vpmacsww
icebp
leave
shll
jge
and
pop
or
cmpsl
jo
lods
test
pop
stc
outsb
out
inc
mov
stc
aas
loope
fdiv
data16
adc
cmp
mov
pop
cmc
cmpsl
jp
mov
and
push
xchg
movsb
push
roll
mov
outsl
add
dec
cmp
sbb
sar
scas
orl
jmp
imul
repz
std
mov
movsl
rcll
jle
adc
add
pop
sbb
das
pop
orl
fneni(8087
jge
push
ret
mov
fidivrs
adc
ja
outsb
xchg
cld
outsl
mov
leave
es
add
mov
sub
ljmp
insb
push
not
sarb
or
push
and
dec
lock
mov
xor
pop
out
rcll
das
jae
adc
call
adc
jecxz
mov
sbb
or
shlb
xorl
or
aaa
cmp
mov
xor
dec
stc
add
xchg
ss
in
outsl
mulb
push
fnstenv
cwtl
pop
dec
pop
jg
xchg
nop
lret
cld
test
dec
sub
fcompl
xchg
sbbb
mov
test
out
mov
mov
adc
mov
pop
push
mov
push
loope
push
inc
cmpsb
popa
xchg
mov
out
repnz
insb
aad
popa
xchg
jnp
mov
out
xchg
lods
out
mov
inc
mov
and
sbb
pop
sub
clc
les
and
xchg
inc
in
ss
not
xor
pop
dec
rol
inc
mov
dec
or
pop
sbb
dec
ljmp
and
sti
jnp
lahf
fisubs
jae
jmp
fdivp
imul
mov
mov
xor
pop
jne
pusha
movsl
push
xchg
sbb
push
loope
jae
inc
xor
stos
lahf
mov
in
and
jg
mov
or
sbb
mov
cmp
test
data16
cs
leave
mov
rolb
ficomps
mov
and
in
test
scas
add
mov
outsl
xor
div
mov
jb
orl
sbb
out
xchg
outsl
inc
xchg
rcl
enter
xor
out
rcrb
sbb
mov
daa
push
lods
fcompl
mov
and
pop
push
mov
mov
out
cmp
xorb
popa
repz
popl
lods
out
scas
scas
sub
xor
pop
add
jle
in
pop
and
sub
movsl
mov
push
cli
add
pop
fs
and
fldenv
imul
push
mov
lahf
jmp
ds
movsb
jae
rcl
test
jp
xor
xlat
mov
mov
hlt
aaa
jno
jg
push
inc
mov
sub
lea
mov
sub
pusha
mov
mov
adc
outsl
sarb
pusha
sbb
adc
xchg
push
cmp
sti
xchg
aad
cmp
pop
bound
mov
mov
cmp
cmpb
sbb
shr
xchg
arpl
loope
add
in
and
push
cmp
xor
data16
stos
push
add
icebp
push
mov
push
xor
jnp
test
pop
into
pop
sti
push
mov
fldenv
jl
fsub
push
daa
shll
and
jge
call
test
lods
aaa
and
pop
sbb
or
pusha
or
outsl
mov
push
sahf
pop
xchg
pop
mov
lods
jae
xor
jno
add
mov
xor
jle
add
push
mov
out
inc
and
xchg
icebp
fcom
ror
jecxz
push
es
xchg
xor
cmp
mov
cmp
mov
out
jns
jb
jecxz
icebp
push
xor
shll
ljmp
into
scas
aaa
rcr
enter
out
rcl
popl
sarl
out
or
es
inc
addl
cmpl
and
push
mov
mov
xchg
or
adc
mov
pop
hlt
adc
xchg
sbb
arpl
fcmovnb
cmp
test
aaa
bound
fmull
std
rclb
fdivr
and
push
ret
mov
insb
in
in
leave
bound
out
inc
dec
movsb
jecxz
ffreep
arpl
push
and
mov
shll
sbb
js
sahf
shll
lret
ret
loopne
lcall
inc
insb
jg
out
inc
in
push
int
adc
dec
inc
in
push
sbb
pop
es
rorl
popf
les
or
bound
movsl
dec
fcomi
lds
and
icebp
inc
nop
push
rcl
inc
lahf
xor
stos
test
popa
js
sub
inc
inc
or
sahf
enter
or
xor
movsb
icebp
lcall
jo
arpl
fisubs
xor
sahf
cmp
imulb
inc
pop
and
mov
lock
push
push
jle
lret
inc
pop
inc
mov
fimuls
dec
sbb
call
stc
cmp
pop
fsts
mov
cmc
or
push
mov
dec
scas
lods
mov
call
lock
cmp
xchg
sub
ja
jbe
xchg
cmp
mov
jo
jle
cmp
add
in
push
les
sbb
adcb
push
fcmove
push
sub
out
insl
adc
mov
lock
dec
jmp
movsl
lock
and
inc
arpl
cmc
sub
cs
sub
xor
adc
movsb
test
scas
inc
addb
dec
pop
cmp
xor
mov
sbb
sub
cmp
push
rorl
cmp
fadd
mov
mov
popf
int3
in
dec
repz
fistl
mov
and
int3
test
xor
push
leave
fnstsw
das
mov
stos
sbb
fdivrs
sbb
or
pop
pop
test
testb
xchg
aad
mov
adc
xor
push
push
cmp
jl
dec
push
pop
sahf
push
and
adc
and
mov
or
stos
out
insb
or
cli
dec
jl
pop
leave
add
bound
loopne
adc
and
or
pop
imul
lret
adcb
aam
ljmp
shrl
out
mov
in
int3
push
enter
divb
imul
sbb
jl
movsl
jnp
push
divb
outsb
imul
mov
cmpsl
dec
xor
mov
inc
inc
push
jmp
pop
mov
mov
ret
adc
mov
stos
push
sbb
scas
outsb
out
sbb
jnp
cmp
test
add
mov
lcall
or
in
inc
add
notl
fnstenv
push
add
or
nop
push
call
add
add
pop
jle
lcall
mov
jne
jmp
int3
repnz
sub
xor
sbb
into
jl
jmp
mov
out
adc
xor
mov
call
cmp
enter
and
jmp
bound
and
cmc
stos
mov
jo
out
cs
mov
push
jl
cmp
in
andb
test
rcrl
pop
or
scas
jge
out
adc
insb
sub
les
out
mov
add
push
xchg
dec
add
xchg
cld
and
popl
cmp
fstl
loope
or
xor
sub
movsl
test
mov
jge
jb
jns
repnz
cmp
cmp
xlat
adc
jl
or
testw
fsubl
xor
cmc
lock
lahf
popa
and
fmuls
sti
sub
sbb
sub
inc
jae
or
jg
cltd
adc
xchg
mov
lahf
jmp
insb
inc
mov
movsl
mov
jl
je
push
inc
ret
in
mov
mov
mov
jg
aam
push
daa
rcrb
lods
decb
mov
and
jp
add
jno
jno
dec
scas
adc
xor
fsubr
lret
sbb
and
jne
dec
pop
lret
and
sahf
push
in
sti
testb
aas
jae
shlb
sub
ljmp
or
add
fwait
push
cmpsl
add
stos
aaa
pop
std
test
int3
hlt
lock
je
mov
cmp
add
xchg
xchg
nop
ljmp
xor
push
lds
push
cmp
or
fwait
push
xchg
sub
adc
data16
outsb
and
pushf
dec
add
cmpsl
add
cli
add
or
mov
sub
into
or
push
xchg
clc
loopne
sbb
or
mul
adc
sub
not
loop
push
movsb
fistps
les
and
fs
sarb
in
out
outsl
and
das
xchg
sti
or
idivl
out
or
inc
and
mov
mov
xchg
push
in
xchg
repnz
push
push
mov
cwtl
pop
shll
sbb
sbb
rolb
jnp
ficompl
mov
mov
inc
mov
ss
push
pop
cmpsl
orb
cli
cmpsl
scas
sub
cmp
and
cmp
push
out
jb
hlt
and
sti
dec
xor
pop
pop
dec
sti
or
out
jmp
ret
scas
dec
mov
jae
or
aad
mov
adc
popl
int
jae
dec
fiaddl
cs
popa
mov
or
inc
xor
add
push
lret
jge
pop
xor
dec
out
push
push
addr16
mov
sti
stos
jl
push
and
inc
cmp
jg
js
sub
fiadds
and
and
shl
movsb
mov
cmc
xor
sbb
sub
pop
sub
inc
inc
sub
jb
add
ret
mov
mov
push
pop
orl
xor
cmp
jne
mov
sbbl
push
mov
add
mov
mov
mov
xor
add
cmp
pop
je
mov
jmp
mov
xor
add
leave
ret
push
mov
sub
push
mov
mov
sub
or
mov
adc
mov
movl
subl
mov
addl
push
mov
or
mov
sub
xor
andl
mov
inc
mov
cmpl
jle
jmp
call
cmpl
jb
xor
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
ja
jmp
push
pushl
pushl
push
push
push
call
cmpl
jne
mov
inc
mov
jmp
mov
movl
add
add
imul
mov
cmp
je
mov
mov
mov
xor
lea
mov
mov
mov
mov
xor
xor
add
add
imul
mov
cmp
je
mov
xor
mov
add
imul
add
mov
mov
jmp
mov
mov
xor
xor
add
add
imul
pop
pop
leave
ret
add
pop
sbb
add
add
add
add
add
mov
out
add
add
add
push
push
inc
push
or
jae
sbbl
cmc
add
add
inc
cmp
insb
fs
outsl
data16
jb
imul
push
arpl
jb
push
arpl
jae
add
or
add
push
mov
xchg
mov
cmp
jne
mov
cmp
jne
mov
mov
mov
mov
mov
mov
mov
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
xor
lea
movzbl
xor
add
inc
mov
cmp
jb
xor
lea
movzbl
xor
add
inc
mov
cmp
jb
xor
lea
movzbl
xor
add
inc
mov
cmp
jb
lea
mov
mov
mov
push
mov
mov
mov
push
lea
mov
cmp
jne
lea
mov
mov
mov
add
mov
lea
mov
add
mov
mov
mov
mov
mov
lea
mov
add
mov
lea
mov
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
push
mov
xor
add
push
lea
push
mov
mov
movl
movl
pushl
mov
call
mov
mov
test
je
xorl
mov
mov
xor
cmp
jne
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
movb
mov
mov
movb
mov
movb
mov
movb
mov
movb
mov
mov
movb
push
movb
mov
movb
movl
lea
pop
movzbl
xor
add
mov
inc
dec
jne
movl
lea
mov
mov
mov
mov
add
mov
mov
mov
mov
add
mov
mov
mov
inc
mov
mov
mov
mov
mov
mov
lea
mov
mov
mov
mov
mov
mov
mov
lea
mov
inc
mov
lea
mov
mov
mov
mov
movzwl
mov
xor
add
xor
mov
mov
xor
movzwl
add
xor
xor
mov
mov
mov
mov
lea
lea
movl
mov
call
mov
mov
mov
xor
add
je
lea
push
mov
xor
add
push
lea
push
mov
push
call
mov
lea
lea
mov
call
mov
mov
pushl
pushl
pushl
pushl
pushl
pushl
pushl
call
test
je
add
pushl
lea
call
mov
mov
mov
xor
add
mov
jne
mov
mov
pushl
mov
call
jmp
mov
mov
add
mov
mov
decl
mov
mov
mov
lea
mov
mov
mov
mov
add
pop
pop
pop
leave
ret
push
push
push
push
mov
mov
add
push
cld
mov
add
push
mov
lods
xchg
push
mov
or
shl
not
push
mov
or
shl
not
push
add
mov
sub
sub
inc
push
push
push
push
push
push
sub
push
or
mov
shl
lea
mov
shr
rep
push
pop
call
loop
lea
lea
mov
mov
sub
and
mov
mov
call
jne
mov
and
shl
sub
neg
shr
pop
add
pop
lea
shl
cmp
pop
lea
push
push
mov
push
mov
jb
mov
sub
movzbl
mov
shl
mov
and
add
lea
call
mov
shr
and
cmp
mov
jne
cmp
jb
jmp
mov
call
inc
inc
sub
sub
cmp
jb
pop
inc
cmp
dec
mov
jb
inc
cmp
dec
mov
dec
jb
mov
dec
sub
push
jmp
mov
dec
call
jne
pop
pop
pop
pop
pop
pop
pushl
push
push
mov
mov
jmp
mov
dec
call
jne
mov
dec
call
jne
pop
cmp
mov
jb
mov
push
mov
sub
cmp
jb
lods
mov
stos
jmp
mov
call
mov
je
mov
call
mov
je
mov
mov
mov
mov
mov
mov
mov
mov
pop
pop
pop
mov
mov
add
push
push
cmp
mov
jb
add
push
mov
call
jne
mov
mov
shl
sub
push
pop
lea
jmp
mov
add
call
jne
mov
mov
shl
push
pop
push
pop
lea
jmp
mov
add
push
pop
mov
mov
sub
inc
mov
call
mov
sub
jb
add
cmpl
jae
addl
mov
cmp
jb
push
pop
mov
shl
sub
inc
push
pop
lea
mov
call
mov
sub
jb
mov
mov
cmp
jb
mov
andl
shr
orl
dec
cmp
jae
mov
sub
mov
shlb
add
shl
add
mov
jmp
sub
call
shr
shll
cmp
jb
incl
sub
dec
jne
mov
add
mov
shll
push
pop
sub
inc
mov
mov
call
test
je
or
shl
dec
jne
jmp
incl
mov
add
mov
mov
sub
cmp
ja
mov
sub
mov
lods
stos
cmp
jae
dec
jne
mov
movzbl
cmp
jb
call
sub
lea
mov
mov
sub
mov
mov
mov
sub
mov
leave
pop
pop
pop
ret
pop
pop
sub
inc
jmp
cmp
jb
ret
shl
push
mov
cmp
jae
mov
stos
cmp
pusha
outsb
add
mov
mov
cs
xchg
cmp
mov
sarl
aaa
mov
cmp
mov
pop
sti
mov
sbb
or
pop
std
mov
mov
lods
fcompl
or
mov
mov
mov
mov
mov
lahf
and
rorb
mov
dec
and
sub
sub
add
add
lea
ret
push
mov
sub
push
push
push
movl
movl
mov
mov
mov
mov
xor
mov
add
mov
mov
xor
add
mov
mov
xor
add
mov
mov
xor
add
mov
movl
movl
movl
push
pop
mov
mov
push
pop
mov
mov
movl
movl
mov
xor
add
mov
mov
xor
add
mov
movl
movl
movl
lea
lea
call
decl
jne
decl
jne
decl
jne
movl
mov
xor
mov
add
mov
mov
andl
xor
add
mov
mov
mov
mov
mov
mov
mov
mov
lea
mov
mov
lea
mov
mov
pushl
lea
mov
call
mov
xor
add
cmp
je
mov
mov
mov
mov
mov
mov
add
mov
mov
lea
push
mov
mov
mov
add
push
pushl
push
call
pushl
xor
movl
movl
movl
movb
lea
stos
stos
stos
xor
movl
movl
movl
movb
lea
stos
stos
stos
mov
mov
mov
movl
movl
movw
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
call
push
mov
mov
pushl
call
test
jne
mov
mov
mov
add
mov
mov
mov
call
push
mov
call
test
jne
mov
mov
mov
add
mov
mov
mov
call
push
mov
call
mov
mov
xor
add
cmp
je
mov
xor
mov
sub
add
mov
cmp
ja
movl
pushl
mov
mov
mov
call
push
mov
mov
pushl
call
mov
mov
mov
mov
mov
mov
xor
lea
call
push
mov
mov
pushl
call
mov
mov
mov
mov
xor
lea
call
push
mov
mov
pushl
call
mov
mov
mov
xor
lea
call
push
mov
mov
pushl
call
andl
mov
mov
and
add
push
call
test
je
mov
push
xor
pop
div
add
movzbl
push
call
test
jne
mov
mov
mov
xor
lea
call
push
mov
mov
pushl
call
mov
jmp
andl
incl
cmpl
jb
mov
mov
xor
mov
add
lea
call
push
mov
mov
xor
add
lea
call
push
call
mov
xor
add
cmp
jne
movl
mov
mov
xor
lea
mov
mov
test
je
mov
mov
xor
lea
mov
mov
xor
mov
sub
add
mov
cmp
jbe
mov
mov
mov
cmp
jne
pushl
lea
push
call
mov
jmp
mov
mov
xor
add
xor
mov
mov
xor
add
cmp
je
mov
mov
xor
add
cmp
je
mov
xor
add
jmp
mov
mov
and
or
sub
add
mov
xor
lea
mov
cmp
jb
mov
mov
mov
movl
mov
mov
mov
mov
xor
add
mov
mov
xor
add
mov
movl
movl
mov
mov
xor
add
cmp
je
jmp
mov
mov
sub
mov
xor
add
xor
div
mov
mov
mov
xor
add
cmp
jbe
mov
xor
add
mov
mov
mov
xor
add
imul
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
add
movl
mov
movl
mov
movl
mov
mov
xor
add
jmp
movl
movl
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
xor
add
add
imul
add
mov
mov
mov
cmp
jb
mov
mov
xor
add
imul
mov
xor
add
or
mov
xor
add
mov
xor
add
mov
lea
jmp
mov
mov
xor
lea
mov
mov
xor
mov
sub
add
mov
mov
xor
add
imul
cmp
jbe
mov
mov
mov
mov
mov
xor
add
push
mov
xor
add
push
push
mov
mov
xor
add
push
call
mov
mov
xor
add
cmp
je
mov
jmp
mov
xor
mov
mov
mov
xor
lea
xor
mov
sub
xor
cmp
jne
mov
mov
mov
xor
add
push
mov
xor
add
push
pushl
call
mov
mov
mov
mov
mov
mov
mov
xor
add
movl
movl
jmp
mov
mov
xor
mov
movsbl
xor
add
movzbl
cmp
jne
mov
xor
lea
xor
cmp
jne
jmp
mov
xor
add
mov
xor
add
cmp
je
mov
mov
movl
movl
movl
movl
mov
mov
mov
xor
add
push
mov
mov
xor
add
push
mov
xor
add
push
mov
xor
add
push
call
mov
mov
mov
mov
xor
add
push
mov
xor
add
push
mov
pushl
xor
add
push
call
mov
xor
add
mov
cmp
je
mov
xor
add
cmp
je
movl
movl
mov
xor
sub
mov
mov
xor
sub
mov
mov
xor
sub
mov
andl
andl
lea
push
pushl
push
lea
push
mov
pushl
mov
add
push
push
call
mov
mov
mov
mov
xor
add
push
mov
xor
add
push
push
call
mov
add
xor
cmp
mov
mov
mov
jne
xor
add
push
mov
xor
add
push
pushl
call
mov
mov
mov
mov
jmp
xor
add
push
mov
xor
add
push
pushl
call
mov
mov
mov
movl
mov
mov
mov
mov
xor
add
mov
mov
xor
add
mov
movl
movl
mov
mov
xor
add
cmp
je
jmp
mov
mov
sub
mov
xor
add
xor
div
mov
mov
mov
xor
add
cmp
jbe
mov
xor
add
mov
mov
mov
xor
add
imul
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
add
movl
mov
movl
mov
movl
mov
mov
xor
add
jmp
movl
movl
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
xor
add
add
imul
add
mov
mov
mov
cmp
jb
mov
mov
xor
add
imul
mov
xor
add
or
mov
xor
add
mov
xor
add
mov
lea
jmp
mov
mov
xor
lea
mov
mov
xor
mov
sub
add
mov
mov
xor
add
imul
cmp
jbe
pushl
mov
pushl
lea
push
mov
mov
pushl
mov
mov
pushl
pushl
pushl
call
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
xor
add
push
mov
xor
add
push
pushl
call
pop
pop
pop
leave
ret
push
mov
push
push
lea
mov
push
mov
mov
mov
mov
cmp
pop
jne
movb
movb
movb
movb
leave
ret
push
mov
push
push
lea
mov
mov
mov
mov
mov
cmp
jne
mov
movb
movb
movb
movb
leave
ret
push
mov
push
push
lea
mov
mov
mov
mov
mov
cmp
jne
movb
mov
movb
movb
leave
ret
push
mov
push
push
lea
mov
push
mov
mov
mov
mov
cmp
pop
jne
movb
movw
movb
leave
ret
push
mov
push
push
lea
mov
mov
mov
mov
mov
cmp
jne
mov
movb
movb
movb
leave
ret
push
mov
call
mov
mov
movb
call
push
mov
movb
call
push
movb
call
movb
mov
jmp
push
mov
push
mov
push
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
movl
mov
movzwl
xor
add
pop
test
je
mov
movl
leave
ret
push
mov
sub
andl
movl
movl
movl
movl
movl
mov
mov
mov
mov
push
push
mov
mov
mov
mov
mov
push
mov
test
jne
pushl
mov
call
mov
mov
add
mov
mov
mov
mov
xor
mov
add
cmp
jne
mov
mov
mov
mov
mov
mov
xor
add
mov
mov
andl
xor
add
mov
lea
push
mov
xor
add
push
mov
add
push
mov
mov
movl
pushl
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
mov
lea
mov
lea
push
mov
xor
add
push
mov
add
push
mov
mov
movl
pushl
mov
call
test
je
andl
cmpl
jbe
mov
mov
sub
mov
incl
mov
mov
inc
cmp
jb
mov
mov
add
mov
mov
add
sub
add
mov
mov
mov
movl
jmp
add
shr
mov
je
lea
mov
mov
mov
mov
movzwl
mov
and
mov
mov
shr
add
xor
cmp
jne
mov
add
mov
cmpl
je
mov
add
mov
mov
mov
mov
addl
decl
jne
mov
add
mov
cmp
jae
add
mov
mov
test
jne
mov
mov
movl
mov
mov
mov
xor
add
mov
lea
mov
lea
push
mov
xor
add
push
mov
add
push
mov
mov
pushl
mov
call
mov
mov
add
mov
pushl
mov
pushl
pushl
call
mov
add
lea
mov
mov
mov
mov
mov
mov
mov
cmp
jb
mov
mov
mov
lea
mov
add
cmp
jae
mov
mov
mov
sub
add
mov
mov
jmp
xor
pop
pop
pop
leave
ret
push
mov
sub
push
mov
mov
cmpl
je
test
je
test
je
mov
test
je
cmpl
je
cmp
je
mov
andl
mov
sub
add
movzwl
mov
movzwl
add
je
lea
push
mov
mov
push
test
je
mov
andl
and
add
movzwl
movzwl
add
je
lea
mov
test
je
mov
andl
and
add
movzwl
movzwl
add
je
lea
mov
mov
mov
test
je
mov
add
movzwl
movzwl
incl
addl
add
cmp
jb
movzwl
movzwl
mov
incl
add
add
mov
cmp
jb
mov
movzwl
movzwl
incl
add
add
mov
cmp
jb
pop
pop
xor
inc
jmp
xor
pop
leave
ret
push
mov
mov
mov
sub
push
xor
push
push
cmp
je
cmp
je
cmp
jne
xor
inc
jmp
mov
add
mov
mov
mov
mov
add
add
mov
cmp
ja
mov
mov
cmp
jbe
cmp
jae
movzwl
jmp
mov
lea
mov
test
je
add
mov
cmp
jbe
mov
mov
add
cmp
jae
mov
jmp
sub
mov
mov
test
je
mov
inc
mov
cmp
jb
jmp
xor
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
movl
mov
mov
mov
mov
mov
mov
push
mov
push
mov
movl
mov
mov
push
mov
xor
xor
add
add
mov
cmp
je
mov
mov
xor
add
cmp
je
mov
mov
xor
add
cmp
je
add
mov
mov
xor
add
mov
mov
cmp
je
mov
mov
imul
xor
add
cmp
jne
mov
mov
imul
xor
add
cmp
je
mov
mov
mov
imul
add
mov
add
xor
mov
mov
mov
xor
add
xor
mov
mov
add
add
cmp
je
add
mov
mov
xor
add
mov
lea
mov
movl
mov
pushl
mov
call
mov
xor
add
mov
cmp
jne
mov
pushl
mov
call
mov
movl
movl
mov
xor
add
cmp
jne
mov
mov
xor
xor
lea
mov
mov
add
imul
push
call
mov
xor
add
cmp
jne
mov
xor
add
cmp
jbe
mov
xor
add
cmp
jne
mov
mov
xor
lea
mov
jmp
movl
movl
mov
xor
add
jmp
mov
xor
add
mov
mov
xor
add
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
mov
mov
mov
xor
add
cmp
je
mov
mov
xor
add
shr
cmp
je
mov
mov
mov
movzwl
push
pushl
call
jmp
mov
add
mov
mov
add
push
pushl
call
mov
mov
mov
xor
add
cmp
mov
jne
mov
xor
lea
mov
jmp
mov
xor
add
imul
mov
mov
mov
xor
lea
mov
mov
xor
add
cmp
jne
mov
mov
mov
sub
xor
jmp
mov
xor
add
cmp
mov
jne
mov
jmp
mov
xor
add
pop
pop
pop
leave
ret
push
mov
sub
movl
movl
mov
mov
push
mov
mov
mov
mov
xor
mov
add
cmp
je
mov
mov
add
push
mov
movl
mov
mov
mov
xor
xor
add
cmp
je
mov
mov
add
mov
mov
sub
mov
xor
add
mov
cmp
je
mov
xor
add
mov
push
movl
jmp
mov
xor
lea
add
shr
cmp
jae
sub
lea
mov
movzwl
and
mov
mov
mov
sub
add
movzwl
shr
xor
mov
mov
mov
mov
xor
lea
mov
mov
mov
xor
add
cmp
jne
mov
mov
xor
add
cmp
jne
mov
mov
add
add
decl
jne
mov
add
mov
mov
mov
xor
cmp
jae
add
mov
mov
xor
add
mov
cmp
jne
pop
mov
pop
jmp
mov
xor
add
pop
leave
ret
push
mov
sub
movl
movl
mov
push
push
mov
xor
push
mov
add
mov
mov
xor
add
mov
mov
mov
mov
xor
mov
addl
mov
mov
xor
mov
addl
mov
mov
xor
mov
addl
mov
mov
xor
mov
addl
movl
mov
test
je
mov
test
je
mov
test
je
mov
mov
xor
add
cmp
jne
mov
xor
add
mov
mov
mov
mov
add
mov
mov
test
je
movl
mov
xor
add
mov
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
cmp
jne
mov
lea
push
mov
xor
add
push
pushl
pushl
call
mov
mov
mov
sub
add
push
call
mov
mov
mov
mov
pushl
pushl
push
call
mov
mov
add
movzwl
lea
mov
mov
movzwl
xor
add
mov
cmp
je
mov
xor
add
mov
mov
movzwl
xor
sub
sub
cmp
ja
mov
add
mov
jmp
mov
mov
lea
mov
mov
test
je
not
and
add
mov
add
push
call
mov
mov
mov
xor
add
cmp
je
push
mov
add
mov
add
push
push
call
mov
mov
mov
add
xor
lea
mov
mov
mov
movzwl
xor
sub
mov
sub
mov
cmp
jbe
mov
mov
cmp
jne
mov
lea
push
mov
xor
add
push
mov
pushl
push
call
test
je
mov
mov
mov
xor
add
je
mov
xor
add
andl
mov
mov
lea
movl
movl
mov
mov
mov
movl
mov
mov
xor
mov
add
mov
incl
cmpl
mov
jb
mov
mov
mov
mov
mov
lea
lea
mov
mov
movl
mov
mov
movl
movl
movl
movl
movl
mov
movl
mov
movl
mov
movl
mov
movl
movl
xor
mov
xor
sub
mov
inc
cmp
jb
mov
lea
push
call
mov
lea
push
push
call
mov
lea
push
mov
pushl
mov
call
mov
xor
add
mov
mov
mov
xor
add
cmp
je
mov
jmp
mov
mov
mov
mov
cmp
je
mov
mov
cmp
jne
mov
mov
cmp
jne
mov
mov
mov
add
mov
mov
xor
add
mov
mov
push
push
pushl
call
test
je
pushl
mov
pushl
call
test
je
mov
mov
mov
call
test
je
push
pushl
call
test
je
mov
mov
cmp
jne
mov
lea
push
pushl
mov
pushl
push
call
mov
mov
mov
xor
add
je
mov
mov
movl
mov
pushl
xor
pushl
add
or
add
push
call
movl
jmp
mov
mov
add
call
mov
mov
mov
mov
movl
cmpl
jne
andl
mov
jmp
xor
pop
pop
pop
leave
ret
push
mov
movzwl
movzwl
push
push
xor
lea
test
je
mov
lea
cmp
jb
mov
add
add
cmp
jb
add
inc
cmp
jb
xor
pop
pop
pop
ret
push
mov
sub
movl
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
push
mov
xor
push
mov
mov
add
push
cmp
je
mov
mov
xor
add
cmp
je
mov
xor
add
mov
mov
xor
add
mov
mov
mov
mov
xor
mov
xor
add
add
sub
mov
jmp
mov
mov
xor
add
cmp
je
mov
mov
xor
add
cmp
mov
mov
je
cmp
je
mov
mov
xor
add
cmp
jb
mov
mov
xor
add
cmp
ja
movzwl
movzwl
add
mov
mov
mov
xor
add
cmp
jb
mov
mov
xor
add
cmp
ja
movzwl
movzwl
add
mov
mov
mov
cmp
jne
mov
mov
xor
lea
mov
mov
mov
xor
lea
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
cmp
jne
mov
mov
xor
add
imul
mov
jmp
mov
mov
xor
lea
mov
mov
sub
xor
mov
mov
sub
xor
mov
mov
mov
xor
add
xor
add
imul
mov
movzwl
mov
mov
xor
add
xor
add
imul
mov
movzwl
sub
sub
xor
xor
cmp
jne
mov
mov
xor
add
xor
add
imul
mov
movzwl
mov
sub
xor
cmp
mov
je
mov
pop
xor
pop
add
pop
leave
ret
push
mov
push
mov
push
mov
sub
mov
xor
mov
movl
mov
cmp
je
push
push
movzwl
mov
mov
mov
cmp
jne
mov
lea
xor
mov
xor
mov
mov
sub
mov
xor
mov
cmp
jne
mov
pop
pop
cmp
je
xor
lea
pop
leave
ret
push
mov
push
push
push
movl
mov
call
mov
mov
sub
xor
cmp
je
mov
mov
mov
push
mov
mov
sub
mov
xor
mov
cmp
jne
mov
lea
xor
mov
xor
lea
mov
sub
xor
cmp
jne
mov
pop
cmp
je
xor
xor
mov
mov
pop
pop
leave
ret
push
mov
push
push
movl
mov
call
mov
mov
sub
mov
xor
mov
cmp
je
push
push
movzwl
mov
mov
mov
cmp
jne
mov
lea
xor
mov
xor
mov
mov
sub
mov
xor
mov
cmp
jne
cmpl
pop
pop
je
xor
inc
jmp
xor
pop
leave
ret
push
mov
push
mov
movzwl
push
lea
mov
push
xor
mov
mov
cmp
je
mov
sub
mov
jmp
mov
mov
add
movzwl
mov
add
xor
mov
cmp
jne
xor
pop
mov
mov
pop
leave
ret
push
mov
sub
movl
movl
mov
push
mov
xor
mov
add
mov
movl
movl
push
movl
jmp
mov
mov
sub
mov
xor
add
cmp
jbe
mov
add
mov
add
mov
mov
mov
mov
mov
jmp
mov
mov
sub
mov
xor
add
cmp
mov
jbe
add
mov
add
mov
mov
mov
jmp
mov
sub
mov
xor
add
cmp
mov
jbe
add
mov
add
mov
mov
mov
mov
xor
lea
mov
jmp
add
mov
add
mov
mov
incl
mov
mov
xor
add
imul
mov
mov
xor
lea
cmp
jb
pop
pop
leave
ret
push
mov
sub
movl
push
mov
movl
mov
mov
xor
mov
add
cmp
je
push
push
mov
mov
xor
mov
sub
add
lea
xor
mov
mov
mov
xor
sub
xor
mov
mov
xor
add
cmp
jne
pop
pop
pop
leave
ret
push
mov
sub
movl
movl
mov
mov
mov
push
push
mov
xor
mov
add
cmp
mov
jne
xor
add
jmp
mov
xor
add
cmp
jne
mov
jmp
lea
mov
mov
mov
mov
xor
add
mov
mov
push
call
mov
mov
mov
jmp
mov
sub
mov
mov
mov
call
mov
pushl
mov
call
mov
xor
add
cmp
jne
mov
call
mov
xor
add
push
pushl
mov
call
mov
xor
add
cmp
je
mov
mov
mov
mov
mov
add
cmp
jne
mov
xor
add
pop
pop
pop
leave
ret
mov
mov
jmp
push
mov
mov
sub
cmpl
push
push
push
je
test
je
movzwl
mov
mov
xor
and
mov
xor
add
mov
andl
xor
push
pop
cmp
jae
lea
xor
movzwl
mov
lea
cmp
jne
movzwl
mov
cmp
jne
mov
movzwl
cmpb
je
mov
movzwl
movsbw
mov
sub
xor
cmp
je
push
pop
incl
mov
cmp
jb
jmp
incl
push
pop
mov
movzwl
cmpb
je
inc
cmp
jne
xor
pop
pop
pop
leave
ret
mov
add
xor
xor
cmp
sete
jmp
push
mov
sub
push
mov
mov
cmpl
jne
xor
jmp
pushl
push
pop
call
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
push
mov
mov
call
push
mov
pushl
call
mov
test
je
mov
push
push
mov
add
mov
mov
mov
mov
add
mov
mov
add
add
mov
mov
mov
cmp
ja
mov
xor
mov
cmp
jbe
jmp
mov
mov
movzwl
cmp
jae
cmp
jae
mov
mov
mov
mov
lea
add
add
sub
movl
mov
mov
cmpl
jne
mov
pushl
push
call
mov
test
je
mov
mov
mov
addl
decl
jne
mov
inc
mov
cmp
jb
pop
pop
pop
leave
ret
push
mov
mov
push
pushl
lea
mov
call
mov
mov
mov
xor
cmp
pop
setne
mov
pop
ret
mov
push
jmp
xor
add
mov
add
add
movzwl
mov
cmp
jne
xor
mov
mov
pop
ret
push
mov
mov
shl
add
jmp
xor
add
mov
inc
inc
mov
cmp
jne
movb
mov
add
pop
ret
push
mov
sub
movl
movl
mov
mov
movl
push
push
movl
mov
mov
mov
xor
mov
xor
add
add
imul
jmp
mov
mov
xor
xor
add
add
test
mov
mov
je
xor
xor
add
add
shr
mov
xor
add
xor
jmp
xor
xor
add
add
shr
mov
mov
xor
lea
mov
mov
xor
xor
sub
cmp
jbe
mov
pop
mov
mov
pop
leave
ret
push
mov
sub
push
mov
mov
lea
mov
mov
mov
push
mov
xor
push
mov
add
cmp
mov
je
mov
xor
add
cmp
je
mov
mov
mov
mov
movl
mov
lea
mov
mov
mov
mov
mov
xor
mov
sub
sub
mov
movl
jmp
mov
mov
xor
xor
lea
mov
xor
div
mov
mov
xor
xor
sub
cmp
jne
mov
mov
mov
mov
mov
xor
xor
add
add
cmp
jae
lea
mov
mov
xor
add
lea
mov
mov
cmp
jbe
addl
jmp
addl
mov
xor
inc
incl
add
cmp
jb
mov
cmpl
jne
xor
add
jmp
mov
xor
mov
sub
add
mov
xor
sub
ror
xor
mov
mov
mov
mov
mov
sub
xor
cmp
jne
mov
mov
xor
xor
sub
mov
sub
xor
mov
mov
xor
sub
sub
jmp
mov
xor
mov
sub
add
mov
mov
cmp
jne
mov
jmp
mov
xor
add
pop
pop
pop
leave
ret
push
mov
sub
movl
movl
movl
push
movl
mov
push
mov
push
xor
mov
add
mov
movl
movl
movl
mov
mov
mov
xor
xor
add
add
imul
jmp
mov
sub
xor
mov
lea
call
mov
mov
mov
mov
mov
mov
xor
lea
mov
mov
mov
xor
xor
sub
mov
cmp
jbe
mov
xor
add
mov
movl
mov
jmp
mov
mov
xor
add
shr
mov
mov
mov
mov
mov
mov
movzbl
xor
mov
mov
mov
xor
add
and
mov
mov
xor
mov
mov
xor
lea
mov
mov
xor
mov
sub
add
mov
mov
mov
xor
add
cmp
jne
mov
mov
xor
add
pop
pop
xor
pop
leave
ret
push
mov
mov
mov
mov
mov
mov
sub
push
push
push
mov
xor
mov
add
cmp
jne
orl
jmp
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
mov
mov
movl
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
mov
xor
add
mov
mov
xor
add
mov
mov
mov
sub
mov
mov
mov
mov
dec
test
mov
je
mov
mov
mov
dec
not
and
mov
mov
add
jmp
mov
mov
mov
xor
add
mov
mov
xor
add
mov
mov
mov
xor
add
mov
mov
movl
movl
movl
mov
mov
xor
add
imul
mov
mov
xor
lea
cmp
jae
mov
xor
add
mov
mov
add
mov
pushl
mov
mov
call
mov
movl
mov
xor
lea
add
push
call
mov
test
je
mov
xor
add
push
pushl
lea
push
call
mov
mov
mov
mov
sub
mov
mov
mov
mov
add
mov
cmp
jb
mov
mov
mov
add
mov
sub
jmp
push
pushl
lea
push
call
mov
mov
movl
movl
movl
lea
mov
lea
mov
lea
mov
lea
mov
mov
xor
add
mov
jmp
cmp
je
mov
xor
mov
add
mov
mov
xor
lea
mov
mov
mov
xor
add
cmp
jne
mov
xor
add
push
push
lea
push
call
mov
mov
xor
mov
mov
xor
movzbl
add
cmp
je
mov
mov
xor
mov
mov
xor
movzbl
add
cmp
je
mov
mov
xor
mov
mov
xor
movzbl
add
cmp
je
mov
mov
xor
mov
mov
xor
movzbl
add
cmp
je
mov
mov
xor
mov
mov
mov
xor
mov
xor
mov
mov
xor
mov
or
mov
mov
xor
mov
cmp
jne
mov
mov
xor
mov
mov
mov
xor
mov
xor
mov
mov
xor
mov
or
mov
mov
xor
mov
cmp
jne
mov
mov
xor
mov
mov
mov
xor
mov
xor
mov
mov
xor
mov
or
mov
mov
xor
mov
cmp
jne
mov
mov
xor
mov
mov
mov
xor
mov
xor
mov
mov
xor
mov
or
mov
mov
xor
mov
cmp
jne
lea
push
call
mov
cmp
je
mov
xor
add
mov
mov
xor
lea
xor
mov
mov
xor
add
cmp
je
mov
mov
xor
add
cmp
jne
mov
mov
xor
lea
jmp
push
pushl
lea
push
call
mov
mov
xor
add
cmp
je
mov
xor
add
push
push
lea
push
call
mov
add
mov
pushl
pushl
mov
add
push
call
mov
mov
xor
add
cmp
je
push
pushl
mov
add
push
call
mov
mov
add
mov
add
mov
mov
mov
xor
add
imul
mov
mov
xor
lea
cmp
jb
mov
mov
mov
jmp
mov
mov
xor
xor
add
add
cmp
jne
mov
imul
mov
jmp
mov
xor
add
cmp
je
subl
jmp
andl
pop
pop
pop
leave
ret
push
mov
and
mov
sub
push
mov
push
push
cmp
jne
push
jmp
mov
cmp
jne
push
jmp
mov
cmp
jne
push
jmp
mov
cmp
jne
push
jmp
mov
mov
cmp
jne
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
mov
add
mov
mov
mov
mov
mov
mov
mov
add
mov
mov
mov
push
push
pushl
push
call
mov
mov
pushl
xor
add
mov
lea
push
push
pushl
pushl
pushl
call
mov
mov
xor
add
cmp
je
mov
mov
xor
add
imul
mov
jmp
mov
cmp
jne
push
jmp
mov
cmp
jne
push
jmp
mov
cmp
jne
push
pushl
pushl
push
pushl
pushl
pushl
call
mov
mov
pop
pop
pop
mov
pop
ret
push
mov
sub
mov
mov
movl
mov
xor
add
mov
mov
push
mov
pushl
lea
pushl
push
pushl
pushl
pushl
call
mov
mov
leave
ret
