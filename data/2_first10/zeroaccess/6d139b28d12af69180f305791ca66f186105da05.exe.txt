push
mov
sub
mov
mov
mov
jmp
sarl
lcall
jle
jle
add
into
xlat
cmp
ror
pop
add
vmread
rdpmc
xadd
adc
mov
push
out
mov
es
lods
fiadds
data16
outsl
or
pushf
js
inc
stos
push
sub
mov
stos
push
roll
jmp
mov
dec
out
inc
call
mov
and
jnp
ret
xchg
and
jmp
ret
lock
and
add
adc
xor
or
fisttpll
ds
or
fst
or
pop
fstps
jno
inc
dec
aaa
adc
sarl
dec
call
std
cmpl
insl
and
dec
mov
es
jmp
or
mov
enter
std
push
push
int
and
jo
imul
addl
and
inc
ss
fistps
adc
sbb
fisttpll
shll
stos
pop
into
jl
lcall
xchg
fs
xlat
ret
jp
popa
mov
rclb
dec
push
push
jmp
cmp
test
push
mov
cmc
sbb
cmp
gs
xlat
rolb
jnp
les
jle
outsw
aaa
sbb
or
in
cwtl
das
mov
repz
push
push
mov
add
mov
dec
fbld
add
stos
mov
xor
pop
xchg
xor
test
pop
sub
sahf
xchg
imul
push
push
addr16
pop
mov
in
mov
sahf
fcoml
out
rcrl
les
enter
mov
hlt
push
movsl
inc
push
xor
xchg
push
movsb
fsubl
data16
insl
push
mulb
mov
jmp
xchg
in
pop
add
jns
rorb
cmp
pushf
into
pop
push
mov
and
movsb
subb
rcll
inc
fadd
dec
add
movl
cmp
jne
or
mov
andl
push
sbb
mov
sbb
xor
movl
cmpl
je
cmpl
jne
push
push
push
push
call
xor
add
dec
mov
jmp
sub
mov
adc
jmp
or
xor
jno
inc
lds
in
jg
cli
add
add
adc
popa
sub
jae
dec
sub
sub
in
push
mov
xchg
jnp
add
inc
call
push
mov
push
add
imul
test
sub
movsb
dec
cs
xlat
out
mov
cld
cwtl
xchg
add
aaa
mov
addr16
jo
or
sbb
mov
enter
cmpsb
push
insl
lahf
mov
shll
sarb
shrl
into
mov
sbb
mov
cmpsb
mov
inc
xor
lock
add
stos
cmp
jecxz
scas
roll
stos
cmp
mov
in
push
or
cmpsb
mov
lock
cmp
xlat
mov
icebp
test
push
mov
and
adc
cmp
or
mov
sbb
mov
dec
inc
jge
push
mov
cltd
lret
vxorps
or
sbb
divl
iret
pop
jl
xchg
mov
pop
test
shl
mov
and
daa
cmpsb
iret
xchg
jno
mov
repnz
clc
and
loope
cs
in
xor
and
fsts
adcl
xor
cmpsl
or
xchg
mov
or
arpl
int3
hlt
mov
mov
dec
mov
std
cmpsl
xor
gs
lds
cmp
leave
jo
fstpl
rclb
ret
movsb
pop
punpckldq
jb
mov
xor
pusha
add
jae
and
cmp
and
inc
out
adc
cmp
mov
scas
int3
lods
mov
imul
xchg
jno
push
andb
or
mov
adc
pop
rolb
jne
call
xchg
mov
inc
xchg
jns
push
push
push
int3
test
push
mov
add
movl
cmpl
je
cmpl
jne
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
movzwl
sub
mov
movzwl
not
addl
and
xor
mov
movl
cmpl
je
cmpl
jne
push
pushl
call
mov
dec
mov
jmp
or
mov
sub
mov
mov
push
xor
or
xor
mov
orl
movzwl
orl
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
pushl
push
call
cmpl
jne
mov
inc
mov
jmp
dec
mov
or
mov
movl
andl
xor
or
inc
mov
cmpl
jne
call
cmpl
jb
movl
xor
or
sub
mov
xorl
mov
movzwl
xor
mov
lea
mov
mov
mov
lea
mov
mov
movl
mov
mov
xor
xor
xor
add
add
div
mov
cmp
je
movl
lea
mov
mov
mov
imul
mov
mov
cmp
je
mov
orl
jmp
mov
add
cmp
je
mov
andl
jmp
jmp
push
rcrb
popa
mov
xchg
and
jle
add
jecxz
jbe
arpl
jb
mov
add
cmovb
sub
xchg
mov
or
dec
test
sbb
dec
fwait
shrb
inc
imul
adc
and
cmp
pop
adc
push
mov
insb
and
mov
cmp
arpl
mov
sarb
subb
mov
clc
inc
aad
mov
lds
xor
cmc
mov
imul
xor
add
stc
addl
js
test
dec
cld
mov
pop
cli
inc
call
inc
jmp
in
divb
lea
mov
adc
int3
dec
pusha
lahf
pop
fstpt
cmp
fistps
in
jns
cld
push
add
jbe
fcomps
adc
rcrb
xchg
xchg
rorl
sub
add
out
push
cmp
lcall
cmp
push
cmp
pop
xor
outsb
fstpl
sbb
icebp
das
fsubs
popa
and
mov
inc
lcall
pop
push
pop
adc
mov
add
jecxz
mov
ja
sub
aam
or
mov
insl
fiadds
xor
xchg
imul
cld
xchg
pop
cmp
lea
xchg
addl
loope
into
je,pn
hlt
dec
mov
loope
int3
pop
inc
inc
out
lahf
lcall
pop
dec
popa
notl
or
enter
and
push
loope
int3
bound
test
mov
or
mov
in
mov
sahf
imul
dec
or
imul
arpl
dec
cmp
cmp
dec
dec
loopne
sub
xlat
xor
push
int3
js
xor
add
add
lock
ja
icebp
jo
mov
negb
jl
jle
xchg
dec
mov
mov
mov
add
es
scas
add
stc
out
add
in
xor
stos
jge
iret
or
xchg
mov
insb
shrl
lock
in
insl
mov
les
push
dec
xchg
mov
fstp
js
inc
or
sub
stos
jecxz
inc
mov
out
jle
pop
dec
sbb
lock
jl
jp
mov
setb
xchg
adc
xorb
nop
lret
dec
or
pushf
mov
add
dec
cmpb
int
mov
out
gs
testl
jae
shlb
mov
jp
pop
xor
xchg
jmp
jae
mov
gs
pop
xchg
jo
sahf
xchg
xor
pushf
inc
outsl
or
push
ss
add
sub
pop
sbb
mov
orl
mov
inc
pop
push
inc
jnp
mov
xor
outsl
fcoml
lds
popa
mov
push
xor
stc
in
pushf
divl
cmp
flds
push
clc
inc
mov
and
push
xor
xor
sub
ss
movsl
xchg
push
push
sub
sbb
xor
cwtl
mov
and
imul
lret
dec
xor
dec
lock
mov
push
ret
std
jmp
mov
jge
push
movsl
mov
out
aam
inc
mov
cltd
arpl
test
addr16
xlat
fdivr
movsb
mov
loopne
xchg
xlat
dec
loop
in
jmp
jae
shrl
adc
fldl
roll
stos
push
gs
in
push
pop
gs
clc
dec
or
mov
jg
loop
nop
mov
xchg
pop
sbb
dec
arpl
stos
testb
icebp
std
cli
xlat
push
lods
dec
mov
dec
aad
stc
mov
fsubs
and
out
lock
lret
iret
jmp
push
loope
mov
out
outsw
mov
or
cmp
jmp
js
sub
mov
jb
pop
ss
jle
add
imul
dec
fisubl
mov
push
pop
arpl
in
inc
into
push
iret
lea
mov
mov
clc
pop
cs
jle
add
sub
insb
fildl
cmp
repz
jg
arpl
rdpmc
int
cwtl
dec
outsb
es
popa
dec
test
lret
xlat
cli
push
xchg
adc
lods
inc
or
js
sbb
mov
pop
lret
jge
imul
pop
sub
adc
fnstcw
dec
mov
jno
jle
cld
xchg
hlt
mov
jo
fwait
inc
mov
jg
loopne
arpl
mov
fadd
or
add
in
push
stos
dec
jno
adcb
xor
pop
push
xor
jb
negb
bound
ret
xchg
insl
leave
rcpps
sub
fucomp
jne
sbb
adc
outsb
or
incb
jne
sub
mov
push
jmp
addr16
pop
jl
push
mov
lock
clc
rcrb
leave
leave
mov
cmp
add
movsl
push
cmpsl
xchg
push
mov
test
pop
into
dec
test
sub
cmp
cmp
jns
push
pop
mov
adcb
sbb
shlb
inc
mov
fabs
mov
add
mov
xchg
fwait
sbb
or
inc
inc
call
rorb
add
repnz
clc
repnz
fwait
iret
mov
addb
xchg
push
dec
popa
inc
sub
aam
in
cwtl
imul
hlt
push
adc
jle
ret
stos
jl
dec
mov
jne
ret
fists
pop
xor
mov
adc
inc
out
adc
orl
ja
xchg
mov
lods
mov
scas
fldenv
outsb
xor
imul
cwtl
inc
fwait
cltd
je
mov
jmp
std
jecxz
es
popa
popf
popa
push
out
inc
out
jnp
jnp
add
jle
jl
jle
sbb
mov
pop
aas
sub
sbb
sub
fstpt
cmp
scas
cmp
aas
nop
jne
test
fildl
popf
repz
popa
sbb
add
test
in
push
mov
imul
outsb
inc
mov
fdivs
stos
leave
and
jo
mov
fcomps
je
mov
fnstenv
mov
test
cmpsl
pop
das
mov
and
mov
lods
jns
and
fcmovu
sbb
sahf
fwait
pop
fnstenv
and
mov
mov
fwait
test
scas
xlat
test
mov
aas
sarb
in
mov
cmp
mov
adc
pop
lds
add
adc
scas
xor
mov
nop
imul
push
or
or
mov
and
int
popf
xchg
adc
mov
out
jge
pushf
jo
add
inc
xor
mov
mov
fidivl
pop
fidivl
insl
inc
cwtl
adc
out
sti
pushf
mov
stc
out
inc
add
fadds
mov
repnz
lock
test
int3
pop
add
add
mov
push
jns
popf
arpl
push
and
mov
mov
and
into
push
stc
scas
je
mov
sbb
xsaves
lock
loop
dec
dec
nop
lock
add
imul
repnz
sti
pop
push
push
sbb
lods
jae
mov
add
gs
les
mov
jmp
scas
xchg
jbe
xchg
jmp
mov
pop
insl
sub
adc
or
arpl
movsb
push
xchg
inc
cmp
fs
sub
dec
outsb
xorl
jmp
mov
mov
xor
mov
mov
add
cmp
je
mov
xor
add
mov
mov
mov
mov
xor
mov
add
movzwl
xor
lea
add
mov
mov
mov
xor
add
imul
sub
mov
jmp
mov
mov
xor
cmp
je
mov
addl
jmp
mov
cmpl
jne
mov
xor
add
test
jne
xorl
jmp
pop
pop
pop
leave
ret
push
mov
sub
leave
ret
push
mov
push
xor
xor
sub
push
addl
jmp
cmp
push
imul
jle
fnstsw
out
notb
or
in
test
xor
xor
xchg
cmp
push
xor
dec
pushf
subl
xor
jmp
sbb
pushf
xor
pop
clc
je
pop
inc
jns
out
cmc
scas
ret
insb
shrb
and
push
out
int3
mov
call
sbb
mov
inc
cli
jno
repnz
xchg
cs
out
out
mov
popf
pop
dec
or
fs
mov
jnp
rcr
pop
negb
xchg
rolb
add
js
inc
shlb
subl
push
jle
xor
imul
jb
data16
aam
movsb
pop
lcall
sub
mov
mov
cltd
dec
insb
lods
clc
test
and
xor
sbb
xchg
jne
out
mov
addr16
adc
mov
filds
ret
enter
aaa
or
fsubr
loop
fadd
dec
scas
outsl
push
push
lods
loope
sbb
addr16
loop
jl
inc
popf
adc
jnp
cli
add
rorb
jne
jl
retw
js
push
and
popa
insl
jbe
mov
jno,pn
out
mov
int3
jb
popa
jmp
push
test
fwait
pop
mov
push
gs
push
aaa
lock
addr16
test
loopne
nop
dec
insb
mov
js
movsb
mov
push
cltd
jmp
jl
out
and
ret
pop
enter
pop
mov
out
mov
lret
mov
loop
push
fadds
xchg
in
sub
add
adcb
dec
ret
mov
popf
outsb
inc
mov
mov
push
mov
and
pop
std
mov
mov
xor
push
ds
sub
nop
out
mov
jb
push
inc
push
je
shll
sbb
lcall
push
xor
clc
in
insl
scas
pop
icebp
aaa
popl
mov
jo
test
mov
cmp
add
jmp
shl
in
or
roll
pop
ja
xchg
lods
jo
popf
mov
ret
test
popa
shrb
adc
idiv
sbb
and
and
or
outsl
xchg
popf
aaa
push
push
jge
hlt
lods
pop
sub
cmp
push
mov
mov
pop
or
out
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
pushl
pushl
call
cmpl
jne
mov
inc
mov
jmp
movl
cmpl
je
cmpl
jne
push
pushl
pushl
push
call
mov
dec
mov
jmp
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
call
cmpl
jne
xor
xor
inc
mov
jmp
mov
movl
jmp
inc
testl
pusha
int
fsubrs
jl
jle
jb
fbstp
jnp
xchg
cmp
sbb
push
and
std
ljmp
addb
sbb
into
sarl
pop
pop
clc
lret
jle
aad
std
xor
repnz
adc
nop
pop
mov
xor
and
shll
adc
xor
mov
mov
fcoms
cmp
nop
insb
rolb
daa
popf
aas
mov
sahf
test
negb
or
and
out
inc
pusha
and
jne
cmp
or
in
scas
mov
inc
add
adc
mov
lcall
adc
sbb
mov
in
pusha
mov
nop
or
outsb
mov
adc
push
lods
sbb
rcrl
lcall
cmc
mov
sub
insb
dec
mov
iret
adc
out
adc
mov
inc
shll
lret
inc
mov
cmp
les
mov
lea
mov
mov
push
and
pop
call
cmp
pop
sbb
in
js
sbb
out
mov
in
popf
stos
mov
sbb
mov
cli
mov
out
xchg
push
ret
push
mov
mov
stc
dec
out
mov
adc
jge
mov
ret
mov
mov
subb
out
dec
hlt
sbb
or
bound
outsb
xchg
sahf
fld
shlb
pop
lods
dec
sub
dec
dec
add
mov
mov
jae
adc
xchg
gs
cwtl
ficomps
sbb
dec
lret
push
icebp
scas
lds
insl
jle
dec
repnz
les
adc
push
jne
nop
lret
dec
loope
dec
pop
push
lahf
out
pop
stos
xchg
push
ja
mov
push
or
ljmp
pop
sbb
stos
lods
aam
scas
push
xchg
sub
jo
gs
fcompl
push
xchg
test
cmp
stc
fwait
or
rcll
rcll
ja
cmp
cmp
sbb
bound
jecxz
xor
adc
int3
cli
xchg
sti
mov
je
push
out
mov
inc
add
push
push
or
xor
mov
push
mov
add
cmp
je
mov
jmp
and
push
xchg
cs
mov
insl
movsb
sahf
mov
popa
insb
adc
jle
fnstsw
sti
mov
sbb
sbb
rolb
loope
push
mov
cmc
mov
cld
mov
cmp
cmpsb
dec
adc
push
aad
dec
movsl
aaa
in
shll
insl
dec
mov
mov
pop
lods
jne
push
pop
and
lea
mov
or
jb
jno
jnp
pop
pop
jmp
outsb
xor
push
add
ss
sub
pop
push
stos
mov
xchg
xchg
jmp
loopne
incb
xchg
inc
adc
test
je
test
mov
mov
insl
out
mov
dec
mov
jle
outsl
and
fnstenv
rcll
jmp
mov
test
mov
mov
out
dec
jl
je
mov
int3
out
jge
sub
in
xchg
andl
call
adc
lods
imul
mov
mov
xchg
inc
push
dec
ja
and
mov
fwait
pop
mov
pop
ds
and
jl
inc
mov
jge
or
push
bound
adc
ror
xor
subb
mov
ret
mov
subl
int
shll
dec
pop
lcall
jg
xchg
mov
gs
ljmp
push
cmpsl
jle
inc
push
es
jo
adc
ja
daa
mov
sbb
aas
cmp
xchg
test
jp
push
test
mov
dec
lea
iret
inc
js
xchg
popf
jle
jb
insb
sub
sub
insb
xor
push
jb
mov
lods
jmp
inc
xchg
movsb
sub
adc
jle
std
mov
fucomip
inc
mov
pop
cli
mov
inc
cmp
push
xchg
mov
shr
fsubl
push
cmpsb
es
outsl
push
sub
and
pop
jno
icebp
mov
dec
mov
frstor
jb
push
clc
mov
jl
insb
sti
xlat
cld
jecxz
push
mov
mov
fldenv
lods
sbb
mov
xor
push
in
ret
dec
mov
pop
mov
movsb
pop
mov
xor
mov
sub
add
xor
add
jmp
jl
fsubl
sbb
aas
cmpsl
stos
in
fwait
repz
jle
and
dec
dec
fs
std
icebp
jns
mov
push
and
std
jl
roll
jge
inc
pop
cmp
xchg
stos
out
pop
lods
pop
out
jl
fmuls
test
inc
cmpsb
imul
inc
mov
lea
out
fisubs
inc
cmpsb
sbbb
xchg
std
xchg
or
in
and
sbb
xchg
fstl
aam
push
scas
fsubr
jmp
sarl
xchg
fstps
pop
sbb
sahf
mov
std
fisubrs
pop
imul
fstpt
and
mov
loope
les
pop
and
frstor
lods
hlt
jnp
movzbl
mov
xchg
fnstcw
roll
dec
xlat
mov
ja
cmp
cmp
notb
loop
xor
ja
xchg
add
pop
push
imul
mov
xabort
test
popaw
pop
push
dec
dec
nopl
hlt
test
ret
dec
mov
mov
xor
ljmp
add
dec
cmp
mov
bound
lock
test
sub
aad
stos
loope,pt
jb
inc
test
dec
call
rcll
adc
shll
or
test
js
lcall
clc
xchg
mov
andl
test
rcll
jno
sarb
push
sbb
xchg
fwait
movsb
call
sub
ss
jb
push
adc
test
push
jge
faddl
mov
dec
sub
push
dec
fnstcw
cs
adc
pop
push
lret
add
push
jmp
cmpsl
ljmp
sbb
jno
je
push
sbb
clc
lods
mov
fdiv
lret
dec
imul
outsb
cld
popf
xlat
adc
loop
pop
push
push
aaa
outsl
mov
mov
test
mov
fstps
in
and
dec
aam
shrb
adc
sub
xchg
and
cmp
or
cmp
cmc
lods
sbb
in
hlt
or
in
scas
fstl
add
clc
cmp
inc
mov
dec
xchg
ja
push
jmp
mov
mov
mov
xor
add
mov
imul
mov
xor
add
mov
mov
mov
xor
lea
mov
xor
mov
sub
add
cmp
jbe
pop
mov
pop
pop
leave
ret
push
mov
sub
mov
and
mov
movl
xor
mov
orl
add
not
movzwl
mov
or
movb
movzwl
adc
jmp
popa
test
mov
sub
cmpl
pop
jl
jle
notb
ss
rorb
push
or
sbb
xchg
cli
xor
xorl
and
and
arpl
push
popf
nop
xchg
add
jbe
or
popw
xchg
enter
xlat
or
ljmp
aas
daa
stos
push
jle
fwait
test
and
enter
loope
mov
pop
inc
push
aaa
or
sub
pop
mov
fwait
outsb
cmpsl
sbb
jne
inc
add
das
jle
mov
and
es
adc
adc
mov
mov
cmpsb
lret
and
push
add
inc
adc
sbb
mov
push
outsb
lea
insl
fdivs
fcomps
loope
dec
js
adcb
add
mov
or
lret
mov
fcmovnu
mov
jl
dec
test
and
adc
jno
neg
pop
or
ret
loop
std
lock
pop
jae
adc
xchg
inc
push
xchg
jo
lret
xchg
pop
and
dec
cwtl
movsb
dec
cs
aas
pop
movsl
cmp
lds
xchg
add
or
or
inc
add
adc
cltd
mov
push
xchg
mov
push
icebp
jbe
xchg
inc
and
in
sbb
push
cmp
dec
ret
inc
divl
jg
mov
imul
dec
int
insl
sbb
sub
jge
pop
scas
int
fcmovu
add
mov
xor
xchg
pop
mov
cmpsb
xchg
sub
ret
rolb
icebp
test
iret
std
lods
adc
sub
bound
lods
inc
js
mov
lret
cmp
dec
inc
mov
push
stos
jmp
xchg
out
repnz
stos
push
cmp
and
flds
lock
and
lea
imul
lahf
fistpll
xor
push
clc
lods
pop
outsl
sbb
jae
add
sbb
in
into
out
insl
fsubs
andl
add
test
addr16
enter
mov
dec
xchg
into
sub
inc
jb
adc
sar
lods
mov
cmpsl
sub
xchg
pusha
xor
outsl
jae
cltd
les
scas
inc
mov
testl
leave
mov
flds
test
andl
icebp
dec
das
je
xor
cmp
mov
stc
pop
sbb
xchg
or
push
sarb
clc
aaa
xchg
ret
push
dec
js
pop
lcall
scas
pop
and
mov
movsb
in
push
ja
mov
out
je
and
mov
loope
sub
std
xor
out
fdiv
dec
into
insb
sbb
sbb
into
add
aam
mov
xchg
les
mov
gs
xchg
loope
lea
andl
mov
inc
mov
cmpl
jne
pushl
call
cmpl
jne
xor
add
inc
mov
cmpl
jb
mov
adc
mov
negl
mov
xor
jmp
sbb
sarb
repnz
jns
insl
scas
fs
jl
jle
xor
jg
xchg
xchg
test
jae
jg
out
into
mov
pop
aad
popa
dec
es
add
dec
jmp
xor
sbb
test
pop
mov
mov
pop
and
cmp
inc
pop
sahf
lods
sbb
icebp
ja
in
adc
cmp
rolb
cs
sti
add
aam
out
fwait
inc
jmp
pushf
outsb
shll
ds
xor
fldenv
imul
cmp
lcall
pop
lcall
call
fwait
xchg
ljmp
cmp
notl
mov
test
pushf
rcr
inc
xchg
sahf
pop
cmp
xor
mov
dec
or
and
into
xchg
lods
std
repnz
cwtl
and
rclb
jmp
push
adc
insl
fisubrs
clc
cmpsb
jo
in
mov
add
mov
cli
or
ret
lahf
decl
lahf
push
loop
sti
icebp
daa
lods
lds
adc
pop
sub
xchg
cmp
mov
repz
fnstcw
mov
xchg
mov
daa
pop
cmp
push
cmc
cmpl
cmpsl
mov
push
loopne
leave
rorb
sti
in
push
icebp
sub
pop
icebp
push
or
mul
outsb
aad
add
xor
xlat
adc
outsl
lods
push
test
adc
xchg
popa
sub
js
leave
jo
cs
aas
push
or
leave
pop
mov
jge
in
es
sbb
push
loop
popf
ret
std
sbb
imul
mov
or
push
xchg
pushf
mov
fcmovbe
jns
jge
add
data16
dec
in
testl
mov
inc
aad
mov
shrb
xchg
mov
pushl
fsubrl
push
repz
mov
and
sub
aad
dec
test
cmp
xor
bnd
push
mov
pushf
mov
outsl
jnp
pop
lret
insb
pop
call
test
push
add
jle
cs
rorl
ret
ljmp
add
sbb
sbb
adc
jo
ss
inc
xorl
cld
pushf
cltd
test
pop
outsb
jge
or
or
ljmp
repnz
pop
cwtl
cmp
push
shlb
cmp
out
ret
scas
sub
jne
in
stc
adc
dec
push
add
orb
fcompl
test
iret
sbb
push
sbb
imul
xor
bound
dec
lods
mov
cli
fucom
inc
and
mov
cmp
jnp
out
mov
addr16
out
cmp
rolb
ljmp
push
test
lds
sub
mov
movl
movl
xor
or
adc
mov
not
mov
adcl
push
add
xor
mov
movl
add
movl
jmp
mov
movl
mov
inc
movl
cmp
movl
jb
and
mov
sbbl
mov
xor
addl
add
cmp
je
adcl
push
inc
push
mov
mov
sub
add
mov
andl
mov
xor
movzwl
xor
mov
mov
orl
add
addl
movzwl
sbbl
mov
and
mov
sbbl
movzwl
xor
decl
add
mov
mov
jmp
xchg
sbb
icebp
adc
mov
mov
jl
jle
jge
fadds
lcall
std
repnz
cmp
sbb
mov
sbb
lahf
fwait
mov
lea
xchg
inc
jge
lahf
and
jb
dec
flds
ret
sbb
test
mov
push
pusha
push
sarl
xchg
lret
pop
call
push
or
mul
out
push
lock
arpl
inc
ss
push
adc
dec
cmp
or
lahf
jb
xor
or
ja
lea
fldcw
xchg
cmpsb
fstpl
jb
js
mov
shlb
xor
dec
shrl
in
mov
pop
lds
cmp
pop
int3
mov
into
cmp
inc
mov
or
cmp
std
jmp
mov
imulb
xor
or
es
popf
aam
dec
or
inc
arpl
cltd
push
adc
out
stos
roll
xchg
inc
inc
stos
xor
push
in
or
mov
dec
aad
jne
push
mov
sub
int
mov
shl
lds
and
aas
pop
sahf
xchg
pop
jge
or
pmulhw
stos
inc
stc
call
leave
xor
jno
bound
lahf
and
xor
sbb
addr16
dec
data16
cmp
imul
pop
or
int
mov
sti
negb
inc
mov
pop
add
sub
repnz
cmpl
sbb
and
adc
fwait
stos
sub
insl
jl
in
in
jge
sbb
hlt
or
mov
xor
movsl
aad
out
jb
mov
ja
push
push
nop
mov
push
movsl
pop
inc
mov
xor
or
pop
mov
xchg
sub
mov
daa
popa
pop
mov
in
sub
jae
addl
add
pop
repz
cmp
pop
pop
clc
dec
jbe
pop
sbb
aaa
icebp
loopne
and
in
lret
into
push
or
gs
mov
pushf
lds
lahf
push
hlt
xchg
pop
jbe
sarl
xchg
xor
gs
cmpsb
pop
int3
call
add
popf
ljmp
fdivp
dec
jle
mov
dec
sbb
pop
insb
lods
icebp
in
ljmp
push
insl
inc
ret
sbb
ss
bound
sahf
lret
in
hlt
ljmp
jb
or
push
les
stc
in
shll
ss
and
sub
sub
mov
xor
adc
mov
jecxz
jbe
add
xor
xor
scas
push
mov
jno
not
add
push
sub
push
sahf
inc
mov
push
add
sbb
mov
dec
xchg
mov
mov
inc
cmp
jne
pop
pop
mov
mov
xor
add
mov
mov
xor
add
mov
jmp
pop
arpl
out
xchg
imul
xor
mov
jle
pop
jl
jle
push
cltd
jne
xor
adc
icebp
cmp
pop
mov
push
inc
call
stc
rcrl
out
js
mov
lods
mov
in
lods
jp
mov
inc
loope
das
add
xchg
cltd
inc
cs
loop
cmpsb
mov
inc
fidivrl
lret
adc
xchg
insb
xlat
sti
out
dec
xlat
cmp
pop
repnz
inc
or
dec
jo
fnstenv
dec
icebp
enter
gs
aas
jge
xchg
jnp
mov
cmp
cmp
adc
jbe
insb
out
call
or
scas
xchg
add
cli
lcall
jp
jo
push
loope
sub
mov
xchg
sbb
xchg
xor
out
imul
dec
or
adc
testb
lret
add
ja
loope
or
lcall
fcoml
jg
or
stos
push
ja
dec
popa
dec
sahf
jne
lahf
repnz
xor
scas
push
xchg
inc
std
cs
or
fs
outsl
add
or
fcoms
xchg
out
mov
push
jl
push
push
sbb
out
outsb
mov
ljmp
add
daa
mov
pop
mov
cmpsl
jmp
imul
mov
or
xchg
cmp
push
jp
and
mov
sub
push
test
daa
jp
pop
sbb
je
jge
imul
cmpsb
push
in
sbbl
dec
inc
inc
push
aad
loop
jnp
cli
das
and
jle
xchg
jns
push
inc
push
xor
gs
cli
jbe
mov
out
int
push
outsl
fwait
push
mov
push
pmaxsw
mov
push
rorl
mov
out
or
inc
pushf
mov
dec
call
mov
add
xchg
and
pop
insl
mov
sub
fsubrs
mov
fimuls
es
or
pop
mov
push
mov
add
stos
nop
dec
notb
sub
mov
adc
sbbl
pop
clc
int
xor
ret
fsubl
xchg
aad
and
mov
sub
notb
sbb
divb
push
fadd
outsb
sub
cmpsb
mov
cltd
rclb
xor
cwtl
pop
inc
aam
jecxz
popf
sub
cmpsl
outsl
and
or
and
jno
test
mov
fmul
out
shll
loop
sub
cmpl
movsl
fs
push
xor
in
in
orb
add
cmp
lock
pop
adc
adc
add
cmp
je
mov
mov
mov
cmp
jne
mov
mov
movsbl
xor
add
cmp
je
movl
lea
mov
mov
addl
mov
mov
jmp
addr16
movsl
insl
jne
in
shl
out
cwtl
pop
jecxz
pop
jle
pop
jl
jle
lods
outsb
or
dec
or
pop
mov
and
and
jo
pop
and
jg
arpl
xchg
fwait
pop
push
cmp
cmp
cmp
aaa
fisttps
adc
pop
inc
mov
mov
cltd
add
xchg
setb
pop
dec
outsb
xor
sbb
xor
int
int3
icebp
push
sbb
test
ficomps
or
stc
shrl
imul
flds
movsb
cld
pop
cs
jl
inc
xor
rcll
gs
stc
xor
rolb
aaa
inc
push
test
push
loopne,pt
adc
mov
call
pusha
aas
lods
cmp
push
int
pop
cmp
into
das
mov
in
xor
arpl
cli
arpl
add
cltd
das
jge
scas
dec
loope
sar
mov
daa
and
fists
std
loop
jbe
loope
mov
imul
ret
push
movntq
cmpsl
inc
mov
das
and
imul
cmpsl
mov
sbb
jl
xor
dec
inc
sbb
cmp
mov
jmp
inc
mov
cmpl
rcl
pop
mov
inc
pop
push
icebp
xor
cmp
pop
pop
out
icebp
dec
push
push
xchg
adc
je
fiadds
inc
adc
loop
xor
shll
xor
shl
dec
push
popf
adc
test
push
ror
loope
cmp
subl
data16
mov
pushl
push
adcl
std
pop
ficompl
xor
xchg
sub
mov
mov
jns
pop
add
rcrl
ficomps
xor
mov
pop
xchg
fwait
sub
sub
xchg
lret
xchg
xor
push
jns
rcl
inc
wbinvd
fwait
in
xchg
mov
testb
dec
jecxz
loope
push
pop
mov
pop
orb
out
xor
pushl
jecxz
bound
mov
movsl
inc
or
pop
pop
dec
sub
dec
fidivrl
cmp
ds
fnsave
pop
push
fnsave
std
pop
call
cmp
in
xor
mov
in
movsb
xlat
rorb
mov
leave
rorl
aas
int3
js
mov
mov
stos
inc
scas
xchg
shlb
in
fiadds
cs
and
sbb
xchg
ljmp
push
inc
int
lcall
ss
and
mov
nop
jnp
jb
xor
lea
mov
incl
jmp
mov
xor
mov
jmp
jnp
ljmp
cmp
ret
jle
pop
jl
jle
insb
mov
scas
dec
imul
repnz
pop
je
mov
jae
cli
mov
inc
insb
fsubrs
repz
cmc
aas
jl
popa
inc
lea
xor
ss
jmp
jbe
fidivrl
shl
ljmp
mov
xor
test
jle
dec
insb
rcrl
mov
call
push
fwait
push
xor
rcr
pop
push
shll
insl
ds
jp
pop
mov
lcall
add
dec
cltd
xlat
push
lcall
and
and
push
xor
shlb
push
lods
addr16
xchg
stos
xchg
cmp
inc
sti
cmc
mov
pop
push
lea
push
daa
mov
not
ss
add
sbb
adc
das
mov
ret
cmp
test
test
push
pop
cmp
pushf
sbb
push
mov
adc
call
fnstcw
cmp
cmp
lock
xorps
loopne
sub
jo
push
push
dec
cmpsl
jns
gs
xor
cltd
test
xor
imul
push
loop
sub
mov
shl
or
jno
jne
int3
xchg
add
outsl
cltd
popf
cmp
fwait
divl
cmp
cwtl
sub
fcomps
and
xor
cmc
pop
xor
icebp
cwtl
sbb
pushf
xor
xchg
mov
mov
scas
push
cmp
call
dec
in
xlat
mov
leave
mov
push
jle
fxch
mov
jge
xchg
cs
fnstcw
aad
out
jg
cmp
clc
jno,pt
and
sub
or
shlb
push
or
inc
loop
aaa
das
sub
mov
cmp
sarb
xchg
xchg
sub
push
in
js
add
adc
push
sbb
mov
fstps
aam
cmp
rcrb
in
adc
out
movsb
stos
cmp
jmp
jne
xchg
xchg
aaa
push
daa
xor
icebp
loope
cmp
data16
or
lcall
je
push
sbb
sub
sub
jo
lret
orb
repz
mov
mulb
adc
lods
and
jmp
add
aaa
out
pusha
cltd
inc
adc
les
mov
insb
jb
jle
cld
cmpsb
mov
push
push
shll
sar
adc
pusha
in
cmpsl
fisubs
ret
and
in
jmp
arpl
pop
arpl
xchg
inc
and
addl
dec
subl
daa
in
push
out
add
testl
leave
ret
push
mov
push
push
andl
mov
inc
mov
cmpl
jne
pushl
call
cmpl
jb
movl
cmpl
je
cmpl
jne
push
push
push
push
pushl
pushl
call
cmpl
jne
xor
xor
dec
mov
mov
dec
mov
jmp
and
movl
adc
movl
movzwl
xor
mov
sub
push
xor
mov
mov
mov
xor
xor
jmp
fiaddl
imul
outsl
jl
push
dec
jl
jle
cld
out
xchg
shrl
and
cmp
mov
push
xor
pop
inc
xor
inc
fnstenv
jns
jne
ds
rorb
popa
sub
std
adcb
jp
inc
ds
pop
pusha
andl
jle
icebp
dec
insb
sar
popa
and
xlat
xlat
jl
mov
add
xor
jns
xor
cmp
push
aam
adc
cs
add
inc
test
xor
adc
movsl
dec
out
sbb
ljmp
push
or
add
inc
cli
jnp
or
rcrl
cmc
cmc
jle
movsb
jp
push
test
outsl
inc
sbb
dec
mov
push
cmp
in
in
add
insl
xor
and
out
inc
cmp
dec
out
adc
pop
xlat
xor
adc
call
outsb
les
clc
imul
mov
lock
mov
adc
hlt
fwait
cmp
cmp
cwtl
push
fdivrl
out
daa
out
mov
xchg
fidivrs
add
sbb
or
shlb
xor
std
push
rolb
jns
in
xor
mov
dec
fs
mov
int
sbb
jae
inc
mov
shlb
mov
les
loop
mov
je
ja
add
je
mov
and
sbb
in
stc
push
mov
fcoml
dec
xor
add
cmp
imul
push
jbe
mov
js
sub
jne
pusha
insl
popa
fcompl
test
out
ret
in
movsb
jbe
mov
inc
or
mov
cmp
inc
inc
adc
lret
push
aaa
lret
mov
mov
inc
adc
add
repz
pusha
and
adc
jae
dec
mov
aas
test
ss
aad
push
inc
pushf
jge
pop
add
xchg
pusha
pushf
sbb
push
bswap
sti
inc
add
movups
push
and
mov
divl
cmp
inc
stos
out
int3
mov
pop
or
adc
jge
fcmovu
aas
in
mov
jae
xchg
pop
jl
jb
js
cmpsl
cwtl
rcll
je
js
mov
mov
xchg
dec
jne
mov
sub
pop
aas
shll
jp
push
hlt
mov
arpl
add
fstl
push
lds
out
xchg
int
or
or
push
mov
sti
dec
pop
add
loop
jb,pt
sbb
call
lock
mov
daa
xor
mov
add
add
imul
mov
cmp
jne
mov
mov
xor
xor
add
add
imul
jmp
mov
jmp
rclb
mov
mov
cli
pop
adc
adc
adc
jle
jl
jle
pop
cmp
stc
gs
push
push
mov
lds
int3
lods
pop
bound
stos
push
mov
sbb
cmp
lahf
pop
movsl
lahf
je
shr
adc
inc
dec
or
pop
std
cmp
push
cmp
mov
fcompl
imul
push
enter
lcall
cmpsb
inc
or
outsb
adc
mov
int
mov
pop
out
scas
xchg
sub
pusha
popf
inc
mov
je
xor
xorb
jbe
xchg
leave
dec
loopne
adc
stc
cld
and
push
jno
cmp
dec
sbb
std
adc
jge
jle,pn
and
ljmp
fbstp
cmp
orl
cs
lea
sbb
mov
or
mov
fidivrs
lcall
data16
sub
xchg
pop
add
mov
dec
adc
xor
negl
push
adc
in
fidivrs
fnstenv
ret
dec
mov
cld
insl
in
mov
sub
sbbb
mov
or
pushf
mov
das
jp
mov
mov
mov
pop
adc
out
outsl
add
xor
inc
dec
imul
loope
push
imul
jne
int
cmp
inc
cmpl
pop
hlt
jmp
sub
outsb
loopne
inc
insb
je
dec
dec
test
shll
and
ljmp
arpl
sti
mov
out
add
mov
mov
test
jg
jbe
mov
or
fwait
jns
lret
or
out
dec
dec
push
cld
js
or
popa
jecxz
addr16
into
cwtl
aaa
xchg
ds
xchg
xchg
adc
xor
repz
mov
and
lcall
fwait
add
mov
std
xchg
in
sub
adc
jmp
loope
cmp
inc
mov
add
adc
mov
mov
inc
icebp
push
addl
xchg
mov
xor
add
mov
shll
adc
gs
lods
inc
fwait
js
jno
mov
loop
push
dec
cmpsb
das
cwtl
and
xchg
pop
push
add
icebp
mov
pop
add
stos
inc
lods
call
push
cmp
arpl
loop
mov
into
leave
and
jo
dec
cld
in
int
mov
in
pushf
arpl
ror
xor
sbb
dec
push
nop
lds
fwait
xor
inc
les
adc
mov
push
mov
popf
mov
jae
cmc
mov
mov
mov
mov
xor
xor
add
add
imul
mov
cmp
mov
je
xor
add
mov
imul
add
mov
mov
pop
leave
ret
push
mov
jmp
test
insl
mov
ret
into
cld
jp
inc
insb
and
lahf
jl
jle
lret
ljmp
sbb
cltd
jle
add
sub
cmp
bnd
mov
cmovs
xor
add
pop
arpl
mov
push
push
frstor
jl
fs
int3
adc
repnz
inc
leave
adc
repz
pop
mov
and
sbb
pusha
mov
inc
out
mov
pop
jb
rorl
jb
jbe
xlat
scas
mov
mov
mov
cmp
or
push
subl
push
pop
cmp
xchg
imul
jmp
adc
pusha
into
sbbb
ret
push
in
icebp
and
and
xchg
scas
stc
cli
mov
mov
mov
xor
mov
pop
mov
sbb
mov
bound
adc
fdivr
adc
stos
sub
mov
popa
xchg
xor
mov
add
aam
xchg
movsl
arpl
call
mov
lods
mov
pop
scas
icebp
rol
dec
in
inc
in
fidivs
repnz
shlb
sbb
lock
xor
out
sahf
lret
je
mov
sbb
into
loope
nop
negl
fiadds
jns
icebp
push
nop
pop
cmp
clc
loopne
repnz
out
push
mov
or
sub
mov
jns
xor
mov
bound
std
cltd
pop
ljmp
push
aaa
lock
lcall
pop
mov
and
cmp
mov
subb
xchg
sbb
scas
sbb
int3
push
lods
ja
mov
lods
rcrb
data16
mov
pop
pop
pushf
js
xchg
ljmp
cmp
rolb
mov
pop
cltd
sub
fsubl
out
mov
or
lea
adc
mov
mov
cmp
bound
adc
lret
inc
dec
aaa
cmpsl
pop
in
scas
xchg
adc
outsl
adc
xchg
cmp
jg
into
orb
dec
xchg
shl
sbbb
pop
repz
sarl
arpl
pop
add
nop
mov
mov
jne
repz
addb
mov
sbb
adcl
xchg
mov
fwait
les
sub
cmc
mov
les
cmp
fyl2xp1
add
xchg
cs
leave
mov
xchg
jae
and
movl
and
mov
sbb
mov
mov
orl
xor
add
decl
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
call
cmpl
jne
xor
or
inc
mov
jmp
mov
sub
mov
xor
andl
mov
inc
mov
cmpl
jne
push
call
cmpl
jb
push
mov
mov
add
mov
jmp
fs
in
lret
popa
jno
mov
mov
lea
jle
lahf
jl
jle
ret
push
outsl
fs
mov
mov
sub
arpl
jp
fcmovb
sub
jmp
xchg
jg
xchg
jb
push
jl
xchg
insl
adc
cmp
ja
jp
inc
mov
or
notb
pop
xchg
jmp
mov
jns
push
inc
jg
pop
jle
jb
outsl
icebp
fcomp
add
out
loop
sbb
push
clc
mov
pop
and
shll
adc
mov
imull
jge
push
addr16
mov
call
xchg
or
mov
fstl
fldl
xchg
lret
les
add
mov
sti
mov
pop
adc
cmpsl
jae
push
add
lret
adc
xor
fcoms
into
sbb
out
out
lcall
add
pusha
ds
popf
xor
sub
lods
fnsave
rolb
xlat
ja
out
das
push
sub
data16
mov
js
pop
ds
or
mov
lds
add
cmpl
xchg
mov
pop
cmp
dec
mov
fisubrs
xor
mov
or
addr16
and
sahf
jmp
subl
xchg
test
and
or
aaa
push
jae
adc
cmp
mov
xchg
xchg
dec
jecxz
adc
push
test
push
andb
inc
out
js
jmp
imul
push
cmp
mov
pop
inc
and
add
lock
mov
xor
pop
adcl
mov
mov
jo
and
sub
xchg
lret
cwtl
push
loope
inc
pop
adc
cmp
jle
fbstp
or
clc
cli
dec
push
pop
dec
mov
fdivrs
mov
pop
xor
adc
sbb
push
mov
dec
xor
and
or
cmp
jo
push
jecxz
mov
lahf
inc
jnp
lods
negl
outsb
mov
mov
mov
lret
shll
loope
out
lret
mov
lret
loope
ret
std
or
or
sub
int
ror
xlat
pop
popa
lods
pop
cmp
lock
add
mov
gs
inc
out
jge
sub
fistpl
outsb
sub
test
adc
scas
or
repz
add
movl
inc
adc
jne
mov
mov
jmp
jl
mov
xchg
rcll
int
sub
jle
jl
jle
or
mov
push
sub
mov
pusha
and
cmpsb
pusha
mov
mov
jmp
fcomps
sub
cwtl
sti
mov
jp
mov
adc
dec
pop
inc
aad
mov
xor
cmp
jle
push
daa
repnz
pop
cmp
cmp
das
pop
mov
and
xchg
mov
out
xchg
inc
mov
shll
fnstsw
insl
xchg
mov
scas
decb
in
add
push
loop
push
test
add
cmp
insb
sbb
ds
pop
dec
cmc
lcall
or
mov
sbbb
cmp
movsb
push
inc
shll
mov
xorl
nop
imul
sub
cs
xchg
adc
mov
std
loope
or
pop
test
stos
aad
jo
fistpll
push
mov
pop
cmp
inc
in
jecxz
gs
int3
aaa
movb
js
jg
outsb
dec
mov
fldcw
scas
xor
xchg
xor
push
cmp
and
cmc
mov
mov
add
pop
jmp
jns
mov
xchg
sbb
ja
loopne
stc
xchg
inc
push
push
inc
mov
int
mov
scas
add
xchg
mov
sub
mov
insb
fisubl
mov
lods
stos
mov
fwait
test
js
add
jg
push
inc
sbb
aad
fbld
cmp
fistl
leave
int
sub
ds
sahf
cmp
ret
scas
int3
jge
lds
jle
inc
ja
cmp
xor
mov
fisttps
sub
jno
rcl
or
mov
incb
sub
hlt
sarl
jl
lea
stos
outsb
jbe
push
int3
cmp
roll
sub
aas
push
orl
inc
sbb
popf
and
mov
int3
repz
push
push
jne
movsb
add
push
push
push
and
mov
les
mov
scas
ljmp
jp
mov
xlat
loop
movsb
test
aam
out
leave
sub
pop
adc
push
stc
insl
pop
out
fnsave
mov
stos
push
in
enter
stc
scas
scas
bnd
adc
pop
mov
lock
in
adc
push
jno
cltd
pop
and
push
sahf
fwait
mov
outsb
sbb
jmp
jge
push
xchg
xchg
mov
mov
mov
mov
mov
mov
mov
xor
add
pop
leave
ret
push
mov
mov
xor
mov
div
mov
and
or
mov
pop
ret
push
mov
push
sbb
movl
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
push
pushl
pushl
push
call
jmp
andl
mov
inc
mov
cmpl
jne
pushl
call
cmpl
jb
mov
mov
xor
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
jmp
and
pop
icebp
jae
push
lret
jmp
dec
sub
sbb
pop
arpl
mov
test
cli
aad
in
mov
and
pop
mov
push
fidivrl
stc
cmp
sub
mov
add
insl
loop
or
popf
test
ljmp
cmp
test
insl
js
push
in
mov
mov
jne
inc
mov
inc
dec
jne
aam
out
iret
add
out
lods
stc
test
testl
inc
jl
mov
jbe
inc
push
mov
mov
shrl
in
cmpsb
dec
pusha
mov
mov
push
jp
add
jg
ljmp
je
xchg
cwtl
xor
ret
push
mov
jns
fsubs
fmull
and
nop
adc
jnp
inc
aad
mov
fs
cmpsl
sti
scas
jecxz
mov
cmp
cmp
cmp
mov
adc
nop
aas
mov
aam
in
mov
js
ret
in
repz
pop
mov
add
movsl
mov
push
outsl
rcr
adc
xchg
mov
push
push
fld1
ret
jmp
call
sbb
sbb
ffreep
add
push
je
daa
pop
jb
roll
lret
mov
sti
lock
sbb
pop
int3
xor
decb
mov
mov
jle
scas
ss
push
mov
sub
mov
jecxz
idivl
ss
mov
add
xor
shrl
adc
sub
sar
mov
ds
outsb
iret
add
push
or
sbb
cltd
rcrb
mov
movsl
movsl
pop
test
pop
data16
out
into
xacquire
pop
lcall
push
pop
sub
popa
rclb
mov
inc
cmp
stc
fidivl
divl
mov
xor
mov
sbbb
cmc
sbb
shlb
scas
jo
sbb
mov
notb
mov
cli
pop
aad
push
cmp
or
dec
cwtl
ret
sub
negl
sti
or
or
sub
sub
xchg
arpl
and
adc
test
mov
jne
jmp
sbb
sbb
pusha
push
shll
jle
sbb
add
and
dec
xor
jge
dec
mov
dec
int3
cld
dec
push
dec
jae
mov
faddl
clc
in
push
xchg
dec
xor
cld
cmp
and
pop
cmpb
adc
fs
adc
sbb
stos
inc
cmpsb
mov
loop
dec
lret
pop
xorb
xchg
mov
out
popf
jnp
cwtl
ret
jp
xchg
add
inc
stc
xchg
inc
add
dec
and
cld
push
test
mov
adc
outsl
gs
cmp
push
xchg
add
daa
fmul
dec
and
mov
arpl
pop
movsl
fnstcw
aad
xor
inc
mov
popa
sarl
pop
das
and
leave
cmp
dec
sub
sub
add
mov
fcmovnb
rolb
and
and
mov
scas
imul
ret
xchg
ds
xor
push
pop
push
adc
push
loopne
lods
in
add
cmp
imul
gs
rcr
loope
sti
inc
stos
dec
lods
push
pop
fisubrl
push
lret
cltd
ljmp
out
ss
dec
pop
cmpsb
call
rorl
add
iret
jmp
xor
or
sub
insl
xchg
cmp
shl
pop
das
loopne
push
cmpsl
or
into
out
orb
xor
and
cli
das
adc
test
fsubrl
mov
test
mov
aas
dec
adc
dec
aaa
and
push
test
lds
pop
pop
lahf
push
push
xchg
testl
pop
pop
pop
cltd
dec
lods
cmp
adc
loop
lcall
cli
inc
mov
outsl
push
pop
ss
mov
cmp
out
jge
pushf
dec
cli
repnz
sub
cli
mov
dec
cltd
popf
enter
jbe
adc
iret
mov
sub
add
clc
xchg
shr
xor
push
xlat
push
lret
and
insl
mov
xor
add
leave
ret
push
mov
sub
mov
subl
mov
xor
mov
mov
orl
movl
movl
mov
jmp
sbb
leave
in
icebp
xor
out
in
push
xchg
vunpckhps
jle
sub
jle
add
je
gs
aaa
xchg
pop
cmp
roll
mov
pusha
and
in
sbb
sub
out
lods
pop
sti
mov
dec
jp
adc
jl
dec
add
insb
cmpsb
dec
test
mov
in
bound
aad
shl
jo
aas
jbe
inc
sbb
pop
jb
xor
repnz
add
xlat
push
js
sub
mov
lea
scas
jo
xchg
xchg
mov
xchg
and
mov
xor
pop
sbb
push
bound
add
cmp
andl
popf
das
jg
jle
and
mov
sub
cli
popa
lcall
ljmp
push
push
or
imul
stos
mov
mov
imul
mov
adc
xchg
in
addr16
mov
mov
fwait
and
js
in
scas
subl
js
push
inc
sbb
fisttpl
lods
jne
mov
jbe
xchg
ret
adcb
or
js
jmp
stos
xchg
fcomps
fsubr
les
punpckldq
testb
leave
test
das
scas
insb
movl
pop
jle
mov
push
pop
rclb
mov
sbb
jo
xchg
fistpl
sub
mov
mov
loopne
adc
bound
push
adc
decl
sub
aas
je
arpl
ret
and
inc
maxps
mov
push
das
xor
push
ret
lahf
mov
inc
push
divl
ljmp
pop
jp
and
repnz
imull
jl
ror
push
lahf
ljmp
sbb
pop
loope
pop
stc
pop
cmp
jle
cmp
cmpsb
mov
sbb
les
out
xchg
cmp
cmc
shll
add
lcall
jne
inc
inc
or
jmp
mov
sub
add
je
cmp
pushf
pop
aas
inc
pop
jns
xchg
lods
push
movl
in
icebp
sbb
inc
les
jne
orb
or
inc
cltd
pop
adc
xchg
faddl
pop
mov
sbbl
rolb
add
pop
sub
add
jmp
test
mov
xchg
xor
fucomip
mov
in
cmp
js
or
pop
cmp
shll
icebp
call
adc
hlt
or
add
andl
ret
add
es
lret
fcomi
mov
mov
in
xchg
popf
aas
rolb
rclb
mov
xorl
popa
ret
stos
or
ja
test
pavgb
fnstenv
mov
repz
mov
not
int3
adc
jge
adc
lcall
inc
add
inc
add
mov
xor
movzbl
sub
mov
sbbl
add
incl
mov
xor
xor
xor
movl
mov
adc
movl
movl
cmpl
je
cmpl
jne
pushl
push
pushl
push
call
xor
add
dec
mov
jmp
xor
movl
addl
jmp
movsb
fsubrs
jmp
mov
xor
sub
jle
cld
jne
movsb
cmpsl
cmp
mov
mov
xchg
mov
addr16
ja
xchg
sbb
loop
sub
push
sbb
pop
fidivrl
adcl
or
enter
lcall
lods
xchg
mov
ret
xchg
dec
inc
cmp
in
stos
hlt
insl
repnz
mov
inc
jle
push
cwtl
push
mov
sub
mov
loopne
mov
ret
cmp
lods
or
insb
out
xchg
int3
out
call
stos
sbb
or
popf
test
or
js
dec
jmp
dec
test
orb
xchg
push
lock
jecxz
lret
inc
sub
repnz
xchg
fmulp
pop
pop
pop
xor
loopne
sub
ja
lock
ja
rcl
jne
mov
ret
aas
lcall
jp
pop
lahf
dec
xchg
sysexit
jb,pn
sub
jge
das
cltd
movsl
cs
aas
inc
testl
adc
inc
sahf
adc
cmp
cmp
mov
pop
bound
ret
xor
cmp
mov
in
iret
mov
pushf
mov
mov
ja
arpl
movsl
dec
ja
push
lret
test
mov
add
push
std
pmuludq
imul
leave
inc
dec
push
out
mov
test
adc
or
and
insb
scas
les
or
push
sbb
xchg
scas
lods
shrb
imul
mov
pop
popw
mov
lcall
int3
lock
cmc
push
or
mov
add
lock
push
aam
adc
in
stos
lods
ret
xor
inc
outsl
mov
fmuls
aas
adcl
xor
outsl
xchg
enter
fdivs
fdivl
sbb
std
sbb
mov
xchg
xor
orl
xchg
mov
outsl
adc
mov
mov
shlb
daa
insb
inc
loope
ss
mov
out
clc
mov
fnstcw
push
and
addr16
imul
adc
iret
fildl
adc
fwait
out
mov
jnp
push
scas
inc
mov
and
jg
jge
adcb
dec
cmp
cmpsb
js
int3
adcl
filds
rorb
clc
subl
pop
jo
xchg
nopl
jle
stos
cmpl
xchg
push
loope
inc
sub
add
ja
ds
mov
mov
cmp
dec
inc
icebp
adc
or
pop
sub
jl
push
jns
xor
xchg
repnz
fimuls
inc
ss
repnz
int3
jb
lea
mov
pop
sub
enter
cs
movsl
cs
mov
cmp
pop
icebp
gs
dec
sub
and
jg
sub
push
push
repnz
es
xor
pop
dec
fdivs
nop
sbb
cwtl
xchg
mov
icebp
adc
adc
stos
xor
add
mov
movl
sub
mov
xor
jmp
aaa
insl
pop
lret
repz
psrlq
cmp
jle
sub
jle
adc
dec
aad
inc
mov
add
push
xlat
insb
shlb
jnp
push
push
mov
mov
mov
inc
cltd
jns
rolb
jecxz
dec
cmpsb
push
stc
ja
and
pop
pop
pop
iret
insb
sbb
cmp
hlt
jg
pop
cwtl
mov
pop
fcoml
push
pop
push
mov
push
aaa
mov
lods
outsl
int
pop
sbb
std
mov
scas
push
dec
jl
jp
mov
mov
loope
stc
lcall
outsl
xor
hlt
fs
sub
cwtl
sbb
xchg
popf
jp
fwait
jnp
xor
jo
pushf
aad
push
sub
mov
stos
adc
fimull
das
dec
mov
sbb
sub
outsl
sub
ret
int
fdivrl
sub
loope
jg
jne
adc
arpl
pop
push
jns
and
mov
es
neg
inc
mov
jns
test
mov
xor
arpl
adc
xor
jge
mov
mov
add
mov
std
cmp
sbb
sbb
pushf
jae
data16
mov
loopne
lea
jg
mov
add
in
cmp
cmpsl
stos
sbbb
arpl
aam
cmc
lods
xchg
or
cmpsl
xchg
jp
adc
loopne
inc
out
loop
repz
sub
adc
dec
enter
pop
ds
out
cmp
fldcw
cltd
fistl
test
movsb
dec
nop
stc
mov
xchg
mov
nop
inc
jo
das
jno
rcr
roll
sbb
mul
jp
or
and
stos
aas
mov
iret
inc
and
jb
or
jge
push
adc
pushf
into
sub
dec
fisttpl
add
in
mov
lods
cmpps
add
je
lahf
add
mov
and
fst
sbb
xor
cwtl
xor
dec
and
movsl
or
xor
mov
push
cmpsb
xchg
mov
and
lock
decl
mov
out
mov
add
sbb
mov
aas
sub
stc
sub
pop
dec
notl
and
jmp
lock
pushf
popl
inc
jns
fstps
xchg
pop
sarl
push
and
mov
daa
out
neg
lahf
sbb
xchg
fisttps
pop
insb
or
dec
mov
mov
lock
insl
xor
in
outsl
mov
call
loopne
cld
pop
sbb
jnp
sbb
jecxz
push
mov
scas
sbb
xor
or
out
push
out
loopne
push
push
inc
fmul
jge
add
inc
mov
in
xchg
pop
shlb
dec
rcrl
xor
in
dec
xlat
cmp
ljmp
sbb
jg
in
cmp
addr16
iret
dec
ret
out
fs
lret
cmp
decl
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
push
push
call
cmpl
jne
mov
inc
mov
jmp
xorl
movl
mov
mov
adc
movb
mov
decl
xor
subl
jmp
adcb
mulb
test
jge
jle
out
pushf
out
data16
sub
push
xor
inc
jle
xor
xchg
pop
inc
mov
and
add
sub
pop
popf
add
std
hlt
test
js
add
sbb
mov
and
and
sbb
popf
push
mov
push
lods
imul
cmp
jo
ljmp
xor
popf
pushf
mov
cmpsb
cli
arpl
and
xor
mov
or
sub
lret
push
pop
adc
adc
inc
int3
dec
in
aaa
pusha
push
mov
mov
push
out
jmp
loope
lahf
pop
jg
mov
aam
xor
std
pop
adc
mov
test
add
mov
dec
push
arpl
notb
push
lcall
mov
or
add
xor
movsl
aad
sub
inc
test
adc
mov
dec
adc
mov
cmp
test
test
es
xchg
negl
pop
nop
sbb
sbb
and
das
mov
push
adc
test
lcall
pop
xor
outsl
mov
adc
or
sub
sarl
out
gs
dec
iret
dec
je
or
insb
dec
lret
popa
jns
shll
dec
or
cmp
xchg
jg
or
xor
lahf
popf
inc
imul
cmp
lds
mov
dec
xor
sbb
les
add
jns
inc
lret
add
lahf
xchg
movsl
xor
sub
inc
js
movsb
push
arpl
test
aam
jo
dec
xlat
mov
pushf
outsl
mov
inc
jp
mov
jl
cmp
out
pop
fdivs
and
fildl
pop
lcall
mov
lret
popa
stos
fdivrl
clc
adc
xchg
or
in
nop
popa
inc
insl
mov
test
sub
in
in
mov
and
dec
pop
adc
mov
mov
pop
das
test
jb
aas
aas
xchg
jp
sbb
jg
jl
leave
ljmp
sub
and
cld
arpl
cmp
stos
aam
push
jnp
xlat
jb
sbb
inc
js
fstpl
imul
fcmovnbe
pop
add
js
arpl
xchg
ja
add
pop
repz
lret
inc
outsl
ss
stc
sub
adc
popf
jns
adc
into
adc
sahf
jb
lea
lods
cmpsb
adc
fcomip
outsb
scas
sahf
int3
mov
insl
subb
out
xchg
mov
dec
or
inc
push
or
jp
dec
repnz
mov
fiadds
stos
sarl
addb
mov
xchg
push
in
daa
imul
push
in
ja
sysret
cmp
xor
addr16
mov
shll
loope
sub
insb
sub
fldt
pop
mov
int
jmp
fcmovbe
dec
cmp
pop
cmp
or
pop
inc
cmpsb
dec
dec
jp
or
xchg
popf
mov
inc
ret
add
andl
mov
mov
xor
add
sbbl
push
movzbl
sbb
mov
mov
xor
xorl
jmp
lods
or
repz
repz
dec
lahf
leave
gs
sub
jle
call
mov
lcall
pop
fsubs
sahf
jl
insl
sub
es
jne
lahf
fwait
lahf
testb
stos
xchg
pusha
aas
adc
sub
and
addl
aas
and
sub
mov
je
pop
xchg
maxps
cltd
xor
mov
andb
out
jp
push
lock
sti
repnz
sahf
push
xchg
arpl
das
testb
inc
fdivrs
lock
cmp
or
daa
mov
pop
and
xor
push
out
add
sbb
cli
mov
sahf
test
push
jge
jae
cli
fdivs
mov
sarl
mov
or
je
popf
testb
pop
ss
mov
mov
jge
fcomps
xchg
test
sbb
jmp
insb
or
dec
xor
xor
xorl
inc
roll
jmp
and
inc
ja
nop
adc
sbb
je
mov
fisttpll
pop
mov
push
test
cmp
ds
cli
repnz
adc
mov
mov
je
gs
fildll
scas
mov
sub
popf
inc
and
jb
xchg
sbb
push
mov
cmp
xchg
sarb
test
int
pusha
mov
mov
cmp
out
test
icebp
and
cld
jle
imul
dec
test
or
int
icebp
cld
stc
push
mov
lds
in
fs
cmc
pop
push
mov
dec
imul
es
mov
mov
js
push
cs
sub
add
es
mov
jge
rcr
push
or
pop
sbb
cltd
adc
pop
sbb
cmp
lods
push
dec
mov
mov
cmp
and
js
sub
mov
inc
push
lods
dec
cwtl
cmp
mov
popa
mov
mov
sub
shlb
pop
add
pop
pop
mov
mov
or
jbe
fwait
mov
mov
pop
test
test
inc
fs
movsb
xlat
int
movsl
and
scas
iret
jcxz
dec
jmp
fistpl
pop
call
int3
leave
mov
push
jo
add
mov
inc
push
scas
fsub
rcrl
pop
pushf
and
sbb
dec
and
cmp
adc
fiaddl
push
std
popf
dec
shll
cmc
movsb
leave
and
popa
cmp
adc
mov
add
dec
jp
and
sub
sub
aam
inc
fucomi
inc
jle
push
jne
dec
jge
test
or
or
cli
rorl
jnp
mov
jno
jb
les
sub
je
insb
and
mov
lock
lods
push
aad
mov
mov
cmpl
add
and
mov
sarb
push
push
nop
cltd
sbb
insb
incb
movl
add
inc
in
jmp
dec
push
test
xor
xor
idiv
jns
jle
sub
jle
and
aad
xor
int3
xor
imul
sbb
stos
aam
mov
add
mov
outsl
or
pop
cmp
mov
rcll
or
fwait
lahf
and
and
aad
testb
mov
leave
sbb
sub
je
mov
push
rcrl
jb
out
add
mov
mov
jnp
lcall
sarb
xchg
sbb
jmp
mov
lret
negl
add
push
repz
and
inc
lahf
rcll
frstor
jno
sbb
rol
addr16
stos
mov
and
mov
data16
repnz
jne
sahf
push
sub
ja
mov
adc
mov
xor
adc
call
pushw
aas
jl
cs
test
sbb
js
add
push
fadd
dec
jnp
xchg
shrl
push
mov
aas
mov
test
or
pushl
cmp
mov
xor
sbb
subb
sbb
sub
fisttps
mov
xor
push
mov
popf
in
sub
sbb
ficomps
jo
lea
icebp
mov
fwait
inc
outsb
imul
and
lret
std
neg
xchg
or
xor
pop
push
xchg
dec
pusha
mov
fdivs
mov
scas
push
imul
iret
cmp
ljmp
and
js
xchg
test
ja
jmp
cmpsb
in
mov
sti
mov
inc
jo
pushf
ja
cmpsl
loope
in
push
dec
push
hlt
js
in
add
rdpmc
ja
push
divl
movsl
xchg
fistpl
testl
inc
add
push
in
cmp
dec
dec
fildll
movsb
cmp
xchg
stos
xchg
xchg
add
scas
iret
mov
mov
jl
cltd
das
cmpsl
and
and
je
sbb
pop
hlt
movsb
push
add
adc
jg
or
xor
fcmovb
aam
xor
adc
xlat
push
out
gs
loop
inc
mov
and
jns
pop
out
enter
cmc
and
call
pop
mov
nop
lret
inc
mov
jmp
mov
fstps
jmp
movsl
aam
jbe
xchg
jge
push
jno
movsl
cwtl
cltd
jecxz
add
jg
adc
push
pop
std
and
ss
add
jno
xchg
int
leave
ss
pop
jmp
mov
mov
mov
xchg
mov
mov
inc
in
adc
ja
push
inc
lahf
pop
inc
inc
pop
aad
mov
stos
push
pop
xchg
out
mov
aas
clc
cli
push
outsb
pop
pop
clc
sub
es
sbb
adc
pop
pop
dec
jb,pn
and
mov
nop
mov
testb
cmp
fmuls
in
push
dec
fisubs
mov
bound
movl
add
xor
inc
insl
add
lea
incl
push
subl
pushl
jmp
mov
gs
push
sbb
mov
ret
sub
jle
repz
lcall
adc
insl
lea
or
stos
ds
mov
aam
mov
inc
andb
jle
push
out
mov
popa
or
or
insb
cmp
push
xor
int
mov
jl
mov
insl
or
pusha
sbb
fildl
and
dec
push
mov
std
sbb
or
jno
enter
cltd
aaa
aam
rcrb
or
cmpsl
cmpsb
mov
jmp
cwtl
sub
out
test
push
insl
mov
inc
popl
cmp
incb
subl
jno
inc
lds
loope
pop
loope
add
repnz
repz
les
mov
cmp
popf
xor
sti
das
push
dec
mov
popa
cmp
repz
xchg
and
mov
cli
add
lret
aaa
adc
xchg
sbb
xchg
movsb
daa
push
in
and
ss
ret
mov
cmp
popf
imul
mov
cmp
sti
mov
or
inc
rolb
jp
pop
mov
jl
jnp
ret
add
jp
hlt
test
nop
and
cmpsl
xchg
cmpsl
inc
cpuid
mov
rorb
out
push
ss
jmp
jbe
shlb
dec
fistpl
fldenv
fisttpl
jb
jmp
xor
inc
in
outsl
cmpsb
scas
inc
push
xor
movl
lea
iret
lret
jnp
adc
jno
sub
inc
out
fildl
push
imul
jns
adc
push
pop
and
push
fwait
aaa
cmp
fwait
insb
insl
dec
inc
xlat
faddl
insb
mov
pop
es
in
xor
popf
xlat
mov
movsl
sub
xor
ret
sub
xor
cmp
adc
add
mov
iret
js
xchg
cmpsb
imul
inc
cmpsb
cwtl
mov
xchg
fimuls
mov
sbb
in
popa
add
das
sub
push
mov
push
jecxz
sub
inc
js
inc
mov
fs
mov
sub
sub
xchg
jnp
lods
cltd
test
fdivs
test
xchg
shr
cltd
lods
xchg
icebp
ja
sarb
ja
test
loope
sti
jle
mov
adc
shrb
loop
sbb
lret
adc
pop
xor
jne
mov
int3
dec
sbb
jecxz
iret
push
inc
ficompl
outsb
xchg
or
js
fucomip
out
outsl
out
jno
sub
pusha
les
imul
sbb
xor
xor
inc
xchg
xor
cmc
adc
idivb
adc
push
mov
and
fimuls
inc
xchg
aad
iret
mov
pop
rcll
cmpsw
aaa
pop
and
mov
movsb
call
xchg
movsl
mov
test
mov
sbb
pop
push
sbb
fcoms
pushf
adc
sbb
xchg
pop
inc
je
stc
pushl
call
jmp
aaa
dec
rcrl
jno
repz
push
and
int
sarl
jge
jle
adc
adcb
xchg
std
shrl
xor
dec
add
push
xor
inc
pop
jo
dec
mov
add
sub
push
jp
cmp
cmc
daa
cli
adc
mov
pop
test
xchg
adc
add
aad
xor
push
jle
inc
cmp
cmpsb
aam
fcomps
sbb
push
int3
pop
sbb
sub
and
dec
out
in
pop
xchg
pop
jb
ja
cmp
fbld
cwtl
add
pushf
jmp
or
lds
cmpsb
or
int3
push
dec
lds
mov
sti
call
xchg
shrb
add
enter
sbb
out
in
sti
pop
mov
lds
cmpsb
in
mov
mov
dec
subl
jo
fwait
push
in
andl
sti
push
or
push
cmc
cmp
bound
outsl
cmp
cmp
pop
arpl
xchg
test
mov
sbb
roll
insl
or
aaa
ret
xor
movsb
lret
jbe
int3
cmp
jo
ljmp
xchg
gs
push
stos
rcrb
and
mov
sub
jo
mov
stc
xorb
mov
cli
mov
insb
in
mulsd
mov
aam
jno
in
inc
xchg
jae
push
and
jnp
lock
adc
add
pushf
sbb
in
stc
push
xchg
aam
and
clc
lods
mov
xchg
or
icebp
jns
cmp
arpl
add
cltd
jg
xor
xchg
ret
nop
push
mov
outsl
test
xchg
andnps
mov
aad
les
arpl
int
mov
mov
repz
outsl
xor
push
xchg
fmuls
mov
sbb
add
pop
addr16
test
cld
ja
xchg
outsb
cld
sar
ja
sub
or
cmp
inc
aam
movsb
cltd
int3
inc
push
das
or
sub
mov
lret
addl
push
mov
flds
mov
fsubl
mov
imul
xchg
push
sbb
adc
mov
scas
filds
aad
push
cmp
lret
cmpsl
push
jg
jge
inc
aad
push
mov
jecxz
cld
test
xchg
jl
jp
nop
test
iret
andb
lods
bound
cmp
push
jmp
or
mov
jp
sbb
and
jnp
or
shl
lcall
cmpsb
imul
ret
add
out
jg
add
popf
test
cmp
mov
mov
mov
notl
mov
mov
pop
or
or
gs
test
cmp
lret
lods
in
iret
int3
jno
push
inc
push
dec
add
outsb
test
les
jp
jbe
sub
or
mov
lret
dec
pop
and
push
inc
add
add
je
lea
subl
push
mov
xorl
xor
sbbl
add
xorl
push
mov
jmp
mov
orl
inc
shrb
sbb
out
int3
jle
sub
jle
xchg
clc
sahf
xchg
sub
xlat
movsl
in
add
test
in
sub
mov
or
xchg
outsl
test
sub
inc
cmp
sub
rolb
adc
ss
push
ficoml
out
stos
arpl
loope
dec
adc
xchg
test
leave
test
push
sarl
popf
imul
or
mov
or
shlb
xchg
xchg
or
cmpsl
xor
fistpl
xchg
mov
in
mov
int3
lods
dec
push
xor
mov
adc
xor
lret
jnp
int
sbb
mov
test
out
test
outsl
and
enter
bound
dec
inc
dec
outsl
cmp
jo
pop
pop
lea
pop
out
mov
shrl
movsl
rorl
and
cmp
dec
out
imul
fwait
mov
inc
dec
insl
sbb
xor
xchg
pop
gs
aaa
fldenv
push
xchg
dec
mov
pop
nop
sar
or
mov
out
cld
sub
add
jne
lock
pusha
mov
cmp
fbld
cmp
dec
je
lea
adc
cmpsl
sbb
sub
lahf
aas
or
push
dec
xor
andl
mov
call
je
inc
pop
pop
xchg
mov
mov
pop
jg
jge
cmp
fisubl
jp
or
fadds
int
inc
xchg
outsb
and
pusha
sti
aaa
xorl
xor
decl
pop
cli
mov
imul
xor
mov
push
ret
mov
pop
dec
rclb
dec
mov
xor
out
inc
mov
es
fs
dec
adc
out
and
pop
dec
pop
jmp
mov
addr16
jnp
int
insb
jge
dec
stos
das
jecxz
insb
push
sahf
mov
fisubrl
loope
mov
test
lcall
scas
xlat
cwtl
stos
pop
dec
loopne
xchg
sbb
hlt
outsb
cli
daa
xchg
stos
mov
in
jae
or
sbb
xor
cmp
sbb
aam
nop
int
pop
in
sahf
sub
imul
jmp
fidivrl
call
cli
ss
and
inc
dec
mov
jecxz
xor
pop
ret
and
rorl
adc
sub
stos
stc
popa
adc
push
mov
test
xlat
xchg
cs
pop
xor
imul
and
adc
xor
movsl
fldt
sbb
mov
shll
and
adc
popf
fisttpll
movsb
idivl
fnsave
xor
lock
int3
push
popa
xchg
jns
sbb
cmp
jg
int
adc
mov
ss
xor
les
imul
add
jge
cli
cmp
fdivrp
sahf
pop
out
adc
jne
cld
dec
in
loopne
or
pop
mov
popa
cld
cmpsb
test
addr16
sahf
incl
cmp
add
subl
push
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
call
cmpl
jne
mov
inc
mov
jmp
jmp
cmp
xor
rcl
lods
push
mov
or
sub
jle
stos
mov
outsb
in
aas
mov
fsts
dec
out
mov
and
cs
mov
lret
mov
adc
je
ret
xchg
mov
push
or
jo
pop
add
pop
jb
jmp
mov
divb
sarb
divb
dec
insb
sbb
dec
ja
test
addr16
adc
dec
cs
jno
or
and
sbb
inc
fsubrl
fmull
aad
cmp
popf
and
daa
jnp
outsb
mov
sub
mov
jmp
in
cmp
xchg
push
jbe
les
push
lds
xor
adc
mov
movl
es
jge
int3
push
adc
scas
lret
push
insb
mov
pop
sahf
inc
test
jecxz
movsl
sub
push
rorb
dec
pop
pop
xchg
and
and
pop
int3
and
pop
cs
push
jae
push
xchg
push
lahf
insb
pop
inc
imul
ret
fadd
xchg
and
repnz
loope
stos
sub
inc
popa
fwait
iret
outsl
cmp
ret
mov
cld
aaa
jnp
or
loope
shl
cmp
xchg
cs
lods
push
pop
push
mov
inc
fwait
dec
rcrl
jns
or
jge
shll
loope
mov
in
jns
data16
das
jo
pop
inc
leave
lret
icebp
lods
cmp
mov
cmpsl
and
or
ficoms
cwtl
xchg
movsl
mov
inc
xorl
mov
loopne
push
iret
cld
daa
js
inc
push
cmp
jmp
js
pusha
xor
nop
and
ljmp
mov
idivl
inc
scas
xchg
imul
pop
xchg
outsb
jp
fisttpll
aaa
mov
insl
stos
rcrb
sbb
cmpsb
fsub
cmp
mov
xor
es
jnp
fbstp
sub
pop
mov
fstpl
xchg
cmpsb
stos
pusha
es
fsts
in
or
ja
mov
adc
cltd
xchg
aas
movsb
xchg
mov
dec
jge
aam
mov
stc
cmp
repnz
push
jecxz
pushf
or
jo
xlat
xchg
sbb
in
mov
and
pop
in
add
arpl
pop
adc
test
addr16
mov
xchg
push
mov
sbb
test
mov
and
and
sub
punpckldq
sahf
movsb
add
repz
das
mov
aam
cltd
aaa
aaa
icebp
inc
push
repz
dec
mov
hlt
and
loope
dec
cs
es
ficoms
lret
jl
cmpl
fidivrs
pop
jns
and
roll
imul
adc
sbbl
leave
ret
subb
ficomps
mov
xor
mov
test
pop
js
xchg
add
add
imulb
mov
mov
pushl
call
jmp
pop
push
jl
mov
sub
adc
aas
xlat
jle
sub
jle
or
or
aam
pop
daa
neg
lahf
pop
push
outsb
and
push
sub
push
pop
shlb
stos
pop
lods
mov
cmc
imul
orb
lret
out
mov
inc
dec
mov
stc
repz
add
adc
faddl
f2xm1
filds
or
scas
dec
mov
and
jno
jnp
cmp
lods
dec
pop
jb
push
add
je
sbb
mov
xchg
jbe
ljmp
or
mov
or
sbb
add
int3
les
iret
mov
imul
add
xchg
repz
cmp
xchg
stos
push
add
inc
or
jae
lock
test
mov
mov
cs
push
sub
daa
adc
ja
cmc
cmc
sbb
sahf
call
lods
ficoms
jb
hlt
mov
cwtl
rcrl
pop
loopne
add
inc
jb
add
mov
sbb
shlb
dec
mov
sbb
arpl
xlat
bound
fs
in
sahf
cmpsl
testl
shl
les
dec
imul
sbb
adc
out
out
aad
aad
shlb
test
push
mov
mov
inc
and
pop
popa
sbb
stc
les
in
jns
cltd
mov
or
outsb
add
mov
rorl
stc
mov
mov
out
sbb
mov
jne
orl
sbb
fs
ds
fisttpll
push
std
rsm
xor
jmp
jno
inc
xor
fbstp
xchg
idivl
in
sbb
pop
ja
mov
rcl
arpl
mov
rorl
jecxz
js
adc
add
sbb
stos
and
jae
jne
xchg
pushf
jbe
adc
adc
outsl
inc
cmc
push
cmp
in
jl
add
imul
dec
jo
in
inc
stc
addb
addr16
aam
dec
sbb
or
jmp
call
cmp
mov
jge
mov
xor
ss
jmp
pusha
xchg
jb
lret
into
or
xchg
mov
mov
lret
push
leave
imul
or
xor
xchg
out
je
test
add
xor
nop
or
icebp
sub
ret
push
xlat
fadds
xchg
out
jle
mov
or
sarb
js
std
movsl
notl
sbb
lret
adc
inc
sub
outsb
mov
xchg
enter
outsb
dec
aad
loop
fwait
mov
jns
lods
cmpsb
sbb
cmp
xor
cmpsl
mov
and
add
repnz
adc
inc
andl
dec
sbb
jns
or
cmp
mov
hlt
bound
mov
in
jnp
dec
add
mov
add
lock
pushf
popf
testb
mov
dec
jl
cltd
jg
cmp
pop
insb
fdivs
clc
cmpl
lea
mov
je
lea
push
mov
xor
add
push
mov
xor
add
push
pushl
lea
push
jmp
popa
pushf
cmpsl
mov
jno
inc
xchg
popa
jb
movsl
xor
not
jle
sub
jle
xchg
pop
sbbb
js
imull
insl
lods
cmpsl
clc
xchg
out
ljmp
data16
shrb
push
cmp
or
mov
aad
mov
push
xchg
or
mov
sbb
test
mov
shlb
enter
ljmp
outsb
xor
inc
pop
aad
xor
jno
pushf
mov
mov
jns
scas
test
je
mov
mov
insb
xchg
xor
mov
insl
ss
xlat
pop
push
inc
out
je
jae
stc
xor
mov
pop
push
jle
add
lock
xchg
aaa
call
pop
add
imul
inc
and
xchg
lcall
repnz
mov
cmc
sub
sub
lret
fs
and
mov
cwtl
inc
or
push
xor
or
lea
pop
xchg
dec
nop
pop
lret
push
loop
push
test
xchg
sbb
push
lret
adc
lods
loop
cmp
jl
rcl
xlat
and
movsb
repnz
orl
and
push
mov
hlt
sbb
cmpsb
fisubrs
push
cmp
fmuls
shll
mov
xor
fisubl
insb
mov
add
mov
jge,pn
sbb
outsl
or
cld
sbb
mov
test
or
jnp
mov
push
int3
jp
in
in
icebp
cmp
fwait
xor
cmp
sbbb
clc
xchg
sub
mov
int3
call
outsl
lock
dec
icebp
add
cli
lock
imul
dec
fldt
pusha
pop
mov
inc
sbb
and
imul
clc
sbb
bound
ljmp
fdivs
lock
adc
leave
add
push
loopne
xchg
pop
hlt
jb
fcomp
or
push
adc
ret
mov
add
imul
cmp
inc
test
mov
xor
mov
adc
xorb
mov
add
out
leave
sub
add
xor
jle
daa
mov
cltd
lock
pop
std
das
pop
aad
mov
test
ret
fisubl
add
orl
push
call
sub
mov
xor
scas
ja
push
sub
and
fldl
inc
sbb
sbbb
mov
and
push
cwtl
xor
sub
rorl
mov
mov
stos
lea
push
test
mov
insb
pop
pop
inc
imul
stos
add
movsl
pop
ret
mov
testb
in
and
in
dec
adc
outsl
cmp
pushf
inc
mov
and
pop
mov
imulb
ffree
loop,pn
test
lret
fwait
pop
push
in
testl
sub
mov
push
push
popa
aad
push
sti
adc
fistl
pushl
pushl
call
test
je
lea
push
mov
xor
jmp
test
cmp
push
mov
pop
mov
jge
jle
push
or
add
adc
dec
cmp
jp
ljmp
push
adc
ja
pop
jo
cltd
lods
fwait
add
cmp
pop
dec
pop
sub
lock
push
or
push
mov
mov
enter
lcall
sbb
jge
fwait
stos
xchg
push
data16
cmp
gs
mov
xlat
inc
insl
pop
sahf
mov
mov
mov
push
shl
jbe
xor
pop
push
xor
sub
aas
push
movsb
xchg
mov
cwtl
push
insb
fsubrl
popf
cltd
imul
or
xorl
jbe
pop
and
fnsave
inc
and
jecxz
mov
popa
push
cmp
xor
lret
pop
ss
mov
or
outsb
mov
sbb
jecxz
ds
add
sub
pop
inc
int3
rorl
ret
adc
aaa
test
ret
xchg
add
lcall
test
jmp
cltd
mov
rclb
mov
gs
jbe
jns
push
push
and
xchg
dec
rcr
stc
mov
sub
mov
cmp
repz
push
mov
jmp
and
mov
call
das
push
out
push
xor
out
das
imul
add
xchg
jg
push
rol
stos
hlt
add
mov
add
sub
cs
xchg
filds
fcmovbe
add
jle
xchg
lds
lcall
and
push
in
in
adc
cwtl
or
mov
cmp
lcall
jl
dec
xchg
sti
mov
xor
cmp
xchg
xchg
cmc
pop
push
jecxz
icebp
gs
and
lods
aad
cwtl
sbb
xchg
add
clc
je
xor
sahf
pop
mov
movsl
mov
fildl
enter
in
jecxz
aad
jne
scas
mov
gs
dec
and
push
adc
fsubrs
mov
xchg
adc
cs
jne
and
inc
cmp
sarl
in
dec
sub
iret
js
mov
clc
mov
pop
pop
fwait
sub
xchg
push
sahf
xor
daa
and
subl
push
rorl
and
ja
lock
adc
roll
add
jl
enter
out
cmp
mov
xor
adc
divb
ss
xlat
push
out
outsl
push
jmp
pop
insl
ret
fidivl
sti
loopne
insb
sbb
xor
std
rcrl
push
sbb
repnz
shrb
scas
psubsb
pop
mov
pop
dec
into
fadds
scas
push
cmpsl
mov
mov
inc
jl
adc
mov
lret
imul
je
sti
add
int3
xchg
xchg
mov
bound
add
push
mov
add
push
mov
mov
pushl
call
mov
xor
mov
sub
jmp
shll
add
ret
loope
inc
rcl
jmp
pop
fdivrl
sub
jle
jnp
jb
fildl
ljmp
jno
popa
add
arpl
xor
pop
and
sahf
xor
add
jo
push
pop
mov
or
sbb
dec
inc
jb
arpl
xchg
jg
inc
inc
add
and
sbb
bound
dec
adc
dec
jmp
ja
xor
outsb
shrl
add
pop
mov
cmp
sbb
roll
push
dec
testl
mov
mov
daa
mov
dec
nop
dec
popf
sbbl
mov
nop
xchg
push
shll
icebp
ja
and
icebp
and
insb
adc
dec
dec
pop
sarl
cmpsl
ja
adc
xlat
sbb
int3
cmpsl
bound
jbe
and
pop
jae
inc
sub
test
dec
push
cld
addr16
pusha
jns
push
dec
mov
popf
xor
andl
icebp
fstpt
es
lret
push
clc
or
ljmp
pop
or
push
in
pop
or
inc
in
push
mov
and
enter
xchg
sbb
leave
aaa
add
push
test
test
addr16
push
and
mov
lret
push
or
dec
bound
fmull
pmulhw
filds
lock
dec
iret
mull
lahf
call
data16
or
or
cmp
sbb
lret
and
mov
stc
mov
fimull
pop
inc
std
repz
adc
insb
push
jecxz
into
push
bound
and
cltd
test
add
jbe
adc
lahf
pop
xchg
push
std
push
inc
loop
iret
xchg
sbb
add
sbb
jne
mov
loopne
les
ds
repnz
cwtl
rcrl
sbb
scas
pop
outsl
test
jbe
bnd
iret
add
roll
pop
cmp
and
imul
push
ss
lfs
lock
sbb
push
xor
in
or
push
mov
bound
add
pshufw
cmpsb
push
loop
mov
adc
jp
sub
inc
jb
out
mov
test
push
js
mov
out
ja
nop
push
adcb
xor
sbb
adc
dec
inc
ljmp
ljmp
ficomps
sub
jbe
insl
jbe
jl
bound
ljmp
mov
pop
fnstcw
mov
inc
je
xchg
xor
scas
sbb
adc
jne
mov
xor
pusha
push
mov
mov
dec
jns
jne,pt
push
mov
dec
je
add
pop
and
popa
cmp
mov
imul
jg
mov
sbb
in
ljmp
fisttps
and
call
mov
sti
mov
xor
xchg
lret
stos
cli
addps
loop
xor
frstor
das
sar
and
lret
inc
or
sub
mov
add
mov
mov
mov
mov
xor
sub
mov
lea
incb
inc
push
jmp
lcall
insl
sub
cld
fldt
adc
jle
sub
jle
mov
xchg
sub
ret
push
jle
push
ret
inc
cmp
movsl
push
fcmovne
cli
add
loope
sbb
jle
test
pusha
pop
aas
repnz
mov
dec
stos
sti
sahf
cmp
dec
mov
dec
fstps
jge
mov
adc
mov
push
jp
ret
loop
out
loop
cmc
imul
xchg
pop
in
fdivs
dec
push
call
inc
sbb
pop
daa
mov
mov
xlat
jmp
jo
mov
jge
popa
fildll
insl
dec
xchg
out
jo
adc
stc
ret
fcmovne
dec
jbe
jmp
enter
or
pop
push
ds
sbb
xchg
lcall
xchg
xchg
jecxz
sub
push
loop
jecxz
fwait
lahf
xor
add
cli
sbb
and
or
fcom
push
jmp
mov
sub
sub
mov
cmp
les
inc
stc
adc
add
imul
popa
add
lret
pop
and
gs
mov
test
jg
jbe
cwtl
fidivl
push
sbbl
imul
mov
repz
rcll
inc
push
push
stos
aaa
insb
pop
js
and
popa
xchg
repz
fmuls
fnsave
lods
mov
mov
pop
enter
fisubrs
push
in
in
cwtl
repz
fnsave
mov
and
nop
paddb
push
xchg
imul
add
mov
inc
push
lods
stos
fidivl
pcmpgtw
aad
sub
xchg
or
adc
cld
aaa
xor
fs
or
jecxz
jo
sbb
fsub
cmp
and
shl
dec
insb
xchg
inc
lea
add
ror
ficompl
stos
loope
and
mov
jns
sub
test
das
test
or
cmp
jbe
cmp
xchg
add
popa
cmp
adc
mov
mov
add
outsb
hlt
mov
ror
jne
mov
cmp
cmc
push
out
lea
data16
lahf
sbb
and
idiv
mov
pop
fucomi
call
jb
and
loopne
psubusw
call
pop
pop
fldt
scas
push
cmpl
xchg
sub
add
mov
xchg
dec
and
xchg
xchg
sub
loopne
push
in
pop
jle
xchg
mov
inc
pop
in
sub
cs
aas
jne
testb
pop
scas
xor
movsb
lret
orb
shll
mov
fistpl
addr16
sub
sahf
outsl
mov
repnz
sbb
lods
inc
popa
mov
stos
push
mov
add
bound
mov
adc
repnz
aaa
lods
jmp
lahf
xchg
imul
xchg
decb
pushl
mov
mov
pushl
lea
pushl
jmp
cli
add
ret
popa
arpl
fsubr
lret
jle
jge
jle
test
jno
or
test
pop
sbbl
xlat
xchg
inc
pusha
das
cmc
mov
inc
jp
mov
loopne
mov
jae
mov
mov
popf
out
out
iret
bound
aam
out
aas
loopne
cmpb
shrb
in
dec
jo
pop
sub
fldcw
sbbl
push
and
aaa
pop
adc
or
jb
or
out
or
mov
popa
xor
push
in
cmp
cltd
cmp
cld
cmpsb
arpl
testb
sbb
aad
fisttps
stos
add
inc
int
popa
adc
int3
push
fsubrl
mov
dec
pop
adc
test
cmp
jp
and
call
adc
push
xchg
bound
data16
jmp
pop
xchg
push
jnp
mov
sahf
xchg
cli
xchg
mov
cltd
lcall
sahf
in
flds
or
jo
es
rorb
sbb
inc
xchg
adc
ja
bound
in
cmc
lahf
fidivrl
cs
sub
mov
enter
pop
pusha
mov
orl
or
out
popf
in
inc
xor
incb
dec
sbb
movsl
xor
inc
je
sahf
bound
dec
xlat
fimull
lea
sub
scas
sbb
push
dec
cli
imul
cmp
jle,pt
repz
or
in
and
sub
shrb
sub
and
lea
fcom
mov
decb
loopne
mov
and
pop
repz
xlat
xchg
fsubrl
rclb
arpl
xchg
imul
jb
cmc
dec
shrb
hlt
das
sub
add
mov
dec
dec
jno
jo
scas
or
loop
xlat
es
add
pop
or
ljmp
mov
stc
xchg
data16
faddl
cwtl
aam
mov
pop
add
sbb
xor
fstl
pop
and
push
mov
inc
xchg
mov
mov
icebp
ret
xchg
sbb
mov
ss
fildl
fadds
int
push
jo
rclb
clc
bound
enter
xlat
jo
adc
xor
jp
and
xor
popf
arpl
inc
test
xor
mov
mov
rcrl
outsb
and
pop
jbe
xchg
pop
mov
pop
mov
and
int3
push
sub
insb
jae
push
sub
dec
loopne
stos
jge
mov
inc
jle
or
jmp
aad
adc
out
sub
jno
adcb
int3
or
jnp
incb
inc
mov
lret
and
sub
mov
xlat
push
out
popa
sbb
cmpsb
mov
xchg
sub
data16
call
push
cli
sub
out
xchg
lea
pushl
lea
pushl
lea
pushl
xchg
inc
inc
sub
push
pop
call
mov
mov
add
jmp
outsl
adc
insl
popa
insl
jno
std
inc
add
jns
fnsave
test
jle
sub
jle
sbb
xchg
andb
bound
mov
xor
jmp
mov
push
mov
inc
mov
orl
cld
pop
popf
arpl
je
and
fisubl
pop
icebp
pop
pop
push
dec
jmp
out
daa
out
cmp
inc
mov
push
sub
test
sti
lock
mov
ja
adc
jno
aam
mov
ljmp
lods
mov
shll
pop
cli
jle
shl
rorl
xchg
xchg
lcall
fisubl
sub
js
pop
sub
pop
mov
data16
and
aaa
mov
fdivrl
mov
in
push
inc
or
adc
mov
shr
jne
push
add
xor
jg
or
or
jge
mov
or
hlt
idivl
mov
jmp
ret
dec
icebp
js
fnstcw
lods
iret
lods
jbe
orb
sahf
testb
lods
push
cltd
pop
fbstp
mov
shrl
test
fidivs
iret
sbb
xorl
sbb
movsl
cmp
jbe
outsl
cli
stc
aam
loop
xorl
and
pusha
add
inc
daa
jnp
cmp
jbe
lds
shll
xchg
push
repnz
mov
data16
call
mov
xchg
lock
push
jp
mov
movsb
cmp
or
xchg
adc
xor
add
dec
or
inc
and
pushf
mov
lods
add
mov
xchg
shl
shlb
or
repnz
xchg
lds
mov
sub
or
sbb
adc
leave
loop
xchg
dec
idivl
shll
jp
mov
test
jae
sbb
jo
sahf
clc
cmp
mov
sbb
push
mov
int
in
adc
pop
mov
sub
push
cld
int
push
in
sub
mov
inc
dec
out
testl
pop
push
sub
pop
sarl
adc
pop
jne
cld
fsubl
sub
out
mov
sbb
xchg
adc
cmp
xchg
addr16
pusha
mov
ret
jle
ret
lods
xchg
push
cmp
mov
sub
mov
mov
daa
cld
lock
out
jns
lcall
mov
dec
xchg
rorl
aad
sbb
repnz
enter
mov
ret
mov
testl
pop
test
in
xchg
je
and
and
test
sub
lcall
daa
in
leave
add
pushf
cs
sahf
lea
test
cmpsl
aad
jo
lahf
sti
push
cmp
mov
popa
scas
notl
pop
stos
push
scas
cmpb
insl
adc
int
mov
in
nop
pop
inc
repnz
ja
cmp
mov
or
mov
sarl
mov
pop
pop
pop
leave
ret
push
mov
sub
and
push
or
mov
and
mov
mov
sbb
mov
mov
xor
movl
andl
mov
inc
mov
cmpl
jne
push
push
pushl
call
cmpl
jb
or
movl
mov
xor
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
push
call
cmpl
jne
xor
or
inc
mov
jmp
movl
cmpl
je
cmpl
jne
pushl
push
push
pushl
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
and
mov
add
xor
mov
add
mov
or
mov
andl
jmp
xor
xor
inc
mov
cmpl
jae
cmpl
jne
push
pushl
pushl
pushl
pushl
pushl
push
pushl
push
push
push
push
pushl
pushl
call
cmpl
jne
xor
xor
inc
mov
jmp
mov
jmp
push
jp
in
jne
stos
push
nop
inc
inc
mov
pop
mov
jl
jle
or
sbb
or
mov
in
fwait
enter
add
daa
or
add
add
mov
test
xchg
dec
and
mov
adc
stos
xor
xor
mov
push
mov
outsb
push
scas
inc
mov
add
add
pusha
loopne
popa
mov
adc
stos
jle
scas
fsubr
loop
mov
icebp
dec
jmp
adc
shl
dec
lret
sub
mov
inc
mov
fisubrs
xor
fxam
out
sub
int3
push
ret
outsl
out
outsb
jae
push
and
cmpsb
scas
xchg
mov
xor
rcll
add
push
pop
sbb
jecxz
lcall
ljmp
and
adc
lea
xchg
fcompl
pop
mov
loope
xlat
dec
repnz
ljmp
mov
jg
jmp
dec
pop
ror
pop
inc
push
mov
je
bound
mov
mov
xchg
lret
xchg
insl
push
cli
jmp
sahf
add
int3
mov
rorb
sbb
out
lea
jmp
ficoml
add
pop
pop
fs
sub
mov
cld
lret
mov
repz
js
je
adc
sti
sbb
insl
gs
mov
inc
adc
shll
mov
jae
inc
mov
mov
or
movzbl
adc
mov
test
mov
aaa
rolb
or
add
mov
inc
mov
aad
je
pop
test
mov
test
subb
cmp
xchg
adc
inc
jnp
add
sbb
orb
aad
inc
and
pop
adc
inc
lahf
mov
mov
jp
lret
dec
jl
loop
mov
xchg
sub
add
mov
lahf
gs
popf
cmp
or
rorl
adc
data16
aad
js
pop
xchg
aam
push
xor
iret
mov
dec
push
xchg
int3
and
mov
cmpb
dec
sbb
cli
sub
jne
ret
push
mov
jl
or
inc
inc
decb
in
shl
mov
out
adc
cmp
or
pop
jo
stc
popa
shr
mov
aas
mov
pop
inc
notb
lea
push
rorl
shll
out
popa
in
aaa
adc
jo
push
or
push
andl
in
pop
xchg
out
cmp
js
xchg
dec
jle
lahf
jle
adc
in
outsb
loop
pop
push
dec
lret
xor
mov
fistps
stos
repz
xor
add
dec
mov
sub
movl
movl
add
movl
movl
cmpl
je
cmpl
jne
push
push
pushl
push
call
cmpl
jne
xor
or
dec
mov
mov
dec
mov
jmp
not
movl
movl
or
movl
and
movl
mov
andl
jmp
xor
xor
inc
mov
cmpl
jae
cmpl
jne
push
call
jmp
xor
xor
mov
add
cmp
movl
je
movl
push
movl
jmp
mov
or
jmp
incl
mov
push
cmp
jmp
in
jle
data16
jle
xor
xor
scas
std
sub
leave
mov
hlt
jne
sub
movsb
push
jns
and
push
pop
lcall
cmp
mulb
addb
cmc
xchg
xchg
sbb
dec
cwtl
or
insb
sbb
mov
cs
xchg
ja
xor
sub
clc
dec
xchg
jmp
adc
test
push
aam
mov
inc
mov
jecxz
jbe
mulb
add
sbb
sub
pop
jb
adcb
out
xchg
cmp
mov
movsl
cmp
mov
mov
sub
fwait
cmp
push
outsl
cmp
add
xor
fwait
mov
out
xchg
or
int3
dec
jnp
std
add
mov
add
test
bound
movsl
outsb
push
mov
mov
fstpl
pop
mov
mov
adc
jne
sahf
outsl
pop
pop
or
adc
cmp
addl
mov
aas
inc
inc
and
push
insl
mov
aaa
shrl
dec
jb
push
mov
push
pop
add
outsb
loope
pop
pushf
cmp
adc
pop
mov
js
sar
lret
dec
push
stos
lea
insl
dec
jo
adcb
add
or
loop
jae
cld
inc
mov
mov
push
mov
fidivrs
and
fdivrl
rolb
mov
lea
xor
or
mov
xchg
bswap
mov
inc
mov
and
mov
pop
lods
jle
lds
lret
js
or
lahf
push
lods
xor
push
inc
js
call
enter
mov
jbe
iret
cmp
add
dec
repnz
xor
push
mov
or
out
stos
push
je
or
inc
jge
js
sub
mov
iret
int
jmp
mov
push
xchg
test
pop
out
jne
or
je
xchg
insb
jns
outsb
stos
dec
jecxz
les
cmp
xchg
call
push
or
sahf
fcomi
push
xchg
xchg
dec
gs
orl
test
cmpsb
xchg
xor
adc
mov
jno
in
aam
or
pop
bound
loope
cmp
or
imul
inc
inc
bound
fadd
cmpsb
imul
lret
mov
ljmp
push
sysret
inc
ret
jns
in
inc
pop
sbb
popa
and
xchg
loopne
int
fidivrl
ret
mov
fmuls
jp
jnp
jge
loopne
ret
outsb
inc
fcmove
fwait
aad
sub
lock
sbb
mov
cmp
adc
fistpll
mov
sbbl
sub
andl
mov
xor
add
movl
cmp
jb
mov
mov
sub
sub
mov
or
mov
xor
xor
sbb
xor
andl
jmp
xor
add
inc
mov
cmpl
jae
cmpl
jne
push
push
push
push
call
jmp
xor
add
xor
or
sbb
mov
jmp
inc
int
popa
jae
push
in
mov
aaa
mov
mov
jle
data16
jle
nop
scas
lods
mov
jge
inc
xchg
mov
sub
lret
test
sbb
add
fsubrs
sahf
imul
in
movl
sbb
xchg
in
enter
imul
or
arpl
xlat
or
mov
stc
push
cmp
aas
testl
aas
andl
pushl
in
mov
adc
ret
jne
enter
adc
jo
jbe
mov
sub
xor
dec
aaa
sub
das
jmp
in
outsb
dec
mov
scas
sahf
out
fcompp
push
inc
push
push
inc
nop
imulb
das
mov
add
pop
cmp
mov
sbb
xlat
inc
dec
dec
cmpsl
repnz
jge
push
mov
and
mov
icebp
adc
lock
push
cli
cmpsl
int
jo
test
mov
idiv
push
cmc
fsubrl
fcomi
sti
shrb
jae
cmp
nop
and
or
push
or
in
jmp
add
sub
outsl
in
cld
lds
mov
push
mov
fcomip
or
add
add
and
dec
cmp
dec
fildl
jle
fcoms
xor
mov
js
inc
add
add
loope
cmpsb
jp
inc
xor
les
test
ljmp
rcl
repz
xchg
push
mov
call
lods
adc
mov
std
pop
jmp
inc
vrcpss
in
inc
cmp
out
xchg
out
mov
addl
call
mov
inc
mov
xor
sbb
mov
aad
add
jb
ljmp
dec
push
stc
mov
sub
sbb
popf
pushf
lods
jae
incl
sub
fldl
inc
pushf
or
test
sub
push
ljmp
xlat
jle
jnp
pushf
andb
bound
loope
cmp
xchg
rol
mov
xor
mov
xor
push
xchg
mov
adc
dec
jmp
adc
inc
test
jno
mov
loopne
dec
sbb
mov
mov
adc
in
stc
cmp
adc
push
jno
push
xchg
lods
lcall
mov
pop
mov
leave
ret
jle
pusha
sahf
mov
scas
gs
sbb
xchg
mov
addr16
loop
mov
xchg
cmpsl
push
ljmp
addb
push
in
iret
add
les
mov
or
leave
sbbl
cld
mov
roll
add
scas
xlat
mov
sbb
mov
orl
sub
cmp
ja
mov
xor
add
jmp
mov
mov
xor
xor
add
add
imul
mov
jmp
sar
sub
stos
cmp
leave
mov
jle
jl
jle
inc
in
dec
cld
jne
mov
mov
sti
jg
ja
jb
pop
inc
inc
ret
aam
mov
ret
jne
mov
push
inc
sbb
subl
push
pop
push
nop
xchg
mov
mov
push
insb
pop
push
test
add
pop
lcall
sub
shlb
cwtl
loope
pusha
sbb
push
subl
xor
cs
mov
pop
mov
gs
pop
pushw
ret
minsd
in
lock
push
sarl
inc
xchg
daa
in
sbb
jmp
in
mov
xchg
add
jp
xchg
leave
push
pop
push
js
mov
xor
add
xchg
movsb
into
jp
cld
mov
pop
test
cmp
xchg
pop
or
pop
xchg
push
xlat
sbb
xlat
pop
loopne
cmp
arpl
stc
leave
gs
xor
jnp
and
mov
iret
push
xchg
int3
mov
mov
xchg
lds
mov
in
push
xchg
ret
sbb
loopne
sbb
stc
int
sbb
inc
jae
out
mov
lret
rcrb
and
sub
push
fsub
push
sub
inc
cmpsl
insb
add
xchg
data16
xchg
icebp
leave
xor
enter
iret
std
xchg
test
mov
nop
mov
int
in
or
mov
test
pop
jno
mov
roll
jbe
mov
xchg
or
push
insb
xchg
addb
and
sub
in
or
daa
pusha
push
lods
sbbb
test
inc
or
xor
imul
ss
ja
adc
shlb
rorb
loop
adc
add
adc
pop
jno
arpl
ss
imulb
mov
mov
cmp
mov
adc
mov
push
inc
adc
loop
sbb
jecxz
mov
mov
and
pop
xchg
in
mov
sbb
cld
pop
xchg
pop
jge
jnp
xor
das
mov
xor
les
lret
imul
adc
xchg
ljmp
pusha
sbb
jae
jle
dec
sub
mov
mov
loopne
jo
cmpsl
aas
aam
pop
push
scas
xor
dec
imul
mov
out
adc
push
pop
dec
cmp
sbb
pop
js
imulb
test
cli
jle
mov
pop
jg
ficomps
call
mov
or
fidivl
sarb
mov
pop
and
in
mov
ljmp
cli
mov
lret
cmp
mov
sub
cmp
ja
mov
jmp
mov
mov
xor
xor
add
add
imul
jmp
mov
push
jl
mov
ret
push
and
cmc
jle
data16
jle
or
jb
jae
mov
jne
push
stos
sbb
mov
inc
ss
and
dec
xor
in
repz
imul
subb
fiaddl
or
int
es
test
xchg
leave
or
adc
cmp
cwtl
clc
test
fstps
cmp
jbe
add
in
loopne
mov
fs
jbe
clc
sarl
xchg
or
mov
imul
xchg
pusha
icebp
xchg
pop
jno
inc
cmp
mov
stos
imul
xorl
dec
into
outsl
pop
push
lret
mov
jno
enter
or
test
mov
jnp
cli
popa
insl
into
stos
jle
dec
push
shll
adc
jp
gs
xor
clc
jle
clc
dec
ret
xor
fistpll
dec
xchg
xchg
mov
mov
cs
xchg
push
iret
ss
fisubs
pop
mov
and
cmpb
and
ja
push
sbb
mov
ficoms
mov
or
xor
push
add
js
cmpsb
aad
in
pop
repnz
in
addr16
ds
mov
cmpsl
pop
xchg
mov
popa
mov
jle
push
rclb
adc
int3
gs
xor
test
mov
hlt
lods
push
aaa
adc
out
push
in
mov
push
ficoms
adc
addr16
stos
xchg
test
js
pop
ss
sub
jbe
cmc
jne
inc
test
aaa
mov
dec
jle
mov
fs
inc
cmp
xchg
push
push
es
rcr
cwtl
rol
dec
xor
mov
rcll
ret
jb
mov
in
sub
test
out
jge
xor
fs
pop
cmp
adc
and
test
add
xchg
adc
mov
xchg
inc
fbstp
mov
pop
std
push
push
xchg
push
cmpsb
or
movsb
mov
sub
bound
outsl
jg
and
pop
jmp
mov
in
shl
dec
jo
dec
pop
cmpsb
dec
cmp
mov
xor
or
mov
insl
mov
xor
xor
stos
cmpl
stos
sbb
sahf
out
aam
jbe
lods
cli
test
sub
clc
inc
cmp
rorl
jo
enter
xchg
sub
mov
push
push
int3
xor
stos
mov
jl
movsl
movb
adc
shrl
outsl
pop
nop
call
jae
jp
mov
cmp
jp
cmp
pop
lret
mov
imul
imul
iret
out
enter
clc
mov
sub
cmp
ja
mov
jmp
mov
mov
xor
xor
add
add
imul
mov
mov
sub
jmp
in
aaa
mov
jo
jno
scas
nop
xchg
push
push
xchg
lock
data16
jle
mov
add
nop
mov
push
int
repz
dec
js
xchg
sub
fwait
into
cmp
shrb
fs
xchg
push
fmull
add
pop
mov
clc
outsl
loopne
or
lret
mov
rcll
add
mov
cltd
push
adc
jl
mov
icebp
clc
xchg
into
jge
addr16
mov
mov
int3
lods
rolb
or
adc
cmp
pop
and
sti
inc
iret
jp
xchg
clc
mov
push
pushf
cwtl
negb
xchg
jne
jp
xor
repz
adcl
push
and
iret
xchg
push
xor
imul
jne
and
inc
add
gs
xchg
inc
push
inc
xchg
and
push
ret
cmp
ljmp
xor
adc
cmp
jle
and
pop
xchg
cmp
push
fstpt
dec
cmc
loopne
or
stc
aaa
add
das
ret
in
not
inc
mov
xor
adc
cld
pushf
mov
je
or
rorl
jno
push
inc
xchg
addr16
xchg
cld
lods
ret
fisubrl
push
sbb
clc
xlat
pcmpgtd
cmc
in
xchg
scas
out
ss
pop
cli
into
sbb
cmp
stos
push
mov
cltd
enter
xor
aaa
adc
stos
dec
loop
data16
pop
xchg
xor
mov
mov
mov
sbb
jl
pop
and
mov
jg
push
outsl
ja
popa
dec
ss
sub
ds
scas
stos
jle
ret
sbb
mov
cmp
psrad
sbb
ljmp
push
inc
test
push
andb
add
push
fstl
jmp
inc
sti
aaa
int
in
insb
mov
decl
sgdtl
inc
into
call
enter
jle
or
dec
or
fildl
mov
or
bound
inc
popf
loop
dec
imul
lds
mov
fwait
in
pop
pop
rcr
push
mov
lock
icebp
repz
sbb
and
rcr
sbb
ret
adc
fldenvs
adc
mov
rclb
adc
mov
mov
test
mov
and
cmp
repnz
xchg
clc
jno
pop
addr16
mov
xchg
loope
mov
hlt
cmp
cwtl
ds
push
mov
js
nop
cmpl
cwtl
add
stos
lahf
jge
cmpb
sbb
test
out
sbb
movsl
push
cmp
mov
jnp
cmp
add
adc
and
sbbl
inc
insl
adc
push
cli
ja
fwait
mov
insb
sbb
cmp
add
cmp
ja
mov
jmp
mov
mov
xor
xor
add
add
jmp
push
dec
fcmovne
jecxz
jae
loope
add
sbb
jbe
jle
data16
jle
cmp
xor
stc
pusha
xor
bound
cmc
das
mov
or
fs
lcall
outsb
pushf
js
inc
xor
push
mov
xchg
cmc
es
lds
xor
lcall
shll
push
xor
and
pop
sbb
fnstcw
aad
lahf
ds
adc
lcall
filds
push
icebp
js
inc
sub
push
loop
xchg
jno
in
mov
rol
std
ret
jle
xchg
cmpsb
cmpsb
xorb
jmp
or
or
das
jl
and
cld
lods
repnz
cwtl
ljmp
pusha
push
inc
movsb
pop
pop
push
not
leave
xchg
xchg
jns
lods
pop
call
test
jp
jecxz
std
pushf
mov
testl
arpl
icebp
fs
ja
cwtl
add
dec
dec
mov
mov
pop
lods
xchg
adc
lahf
into
mov
test
jl
out
lods
sbb
sbb
and
loopne
les
call
imull
sub
mov
adc
dec
das
pusha
scas
test
dec
lock
int
lcall
ss
in
fisttpll
negl
test
mov
cmp
fs
jl
and
in
popa
jb
or
mov
lea
js
sbb
mov
popa
dec
xchg
push
jno
sub
jle
mov
push
jle
or
xacquire
and
std
std
pusha
pop
sub
mov
or
insl
stos
xchg
mov
and
sbb
cld
xchg
jg
mov
xchg
mov
sub
mov
jecxz
ret
rol
or
int
test
mov
ja
add
xlat
cmp
sbb
lods
test
pop
test
jp
sub
xchg
mov
jbe
and
pop
jp
sbb
dec
sub
movsl
add
jmp
ret
xchg
add
sti
mov
adc
ljmp
inc
xchg
sub
addb
ja
gs
arpl
xlat
pop
mov
lds
jnp
or
adcb
fistps
xor
push
popf
pop
sbb
pop
jl
mov
or
cmp
hlt
and
dec
in
cmp
popa
dec
dec
push
xorl
lahf
xor
gs
lcall
adc
out
in
push
or
incl
das
push
mov
ss
ret
stc
scas
inc
aam
cli
sub
jp
xor
mov
pop
pop
jns
clc
adc
sbb
rcl
in
sahf
mov
push
adc
lock
lods
stos
js
mov
scas
xlat
mov
mov
sub
cmp
ja
mov
jmp
mov
mov
xor
xor
jmp
ss
cltd
sub
mov
icebp
sub
xchg
pop
adc
jle
data16
jle
shrb
xchg
push
sarl
jne
mov
loope
cmp
dec
sbb
fmull
mov
mov
fldl2t
shlb
or
pop
imulb
inc
fsubl
add
adc
xorb
les
sbb
je
xchg
mov
pusha
push
ja
jl
leave
enter
aam
pop
mov
or
sbb
dec
rol
mov
stos
es
fucomip
pop
mov
push
push
out
mov
mov
loope
cmp
dec
add
mov
and
jns
lods
pop
mov
jge
adc
in
xchg
sub
inc
pop
pop
cmp
sub
adc
cli
sahf
add
addl
cli
adc
xor
cmpsl
sti
sub
mov
push
add
jge
add
xor
sahf
sti
loope
inc
je
pop
inc
nopl
nop
iret
fwait
adc
adc
xor
or
inc
jmp
add
cmp
mov
adc
shrb
notl
gs
jmp
xor
add
dec
sti
pushf
push
xchg
aaa
movsb
enter
pop
movsb
mov
and
arpl
jnp
pop
pop
cmp
fstp
sub
into
xor
mov
mov
es
leave
and
sbb
fisttps
aad
rcrl
lahf
emms
push
push
or
sbb
jbe
mov
fstl
add
jno
adc
into
fwait
adc
xchg
sub
adc
jnp
out
and
xchg
sbb
jb
cmp
lods
aam
lock
adcl
lahf
mov
fwait
push
fxtract
jns
lods
gs
hlt
out
add
popf
leave
pop
gs
ror
pushl
mov
insb
dec
cmpsl
mov
std
inc
lret
push
mov
in
jg
outsb
xlat
and
sbb
sub
negb
mov
pop
test
push
mov
push
pusha
cli
fucomi
mov
lods
mov
jg
mov
pushf
cli
mov
dec
in
daa
jbe
sub
std
inc
jecxz
popa
sub
lds
sarb
mov
or
int3
dec
xor
dec
push
idiv
daa
jl
jge
dec
xchg
cwtl
xchg
sbb
and
sahf
insl
rclb
clc
ds
insb
pop
jne
cmp
shrd
jmp
rorl
fs
jbe
dec
cmp
aas
js
mov
jae
not
lds
call
jl
pushf
and
out
fbstp
dec
shrb
rclb
xor
jge
enter
nop
jnp
push
adc
jnp
int3
outsb
out
pusha
jnp
fnstenv
push
fs
push
orb
roll
stc
imul
mov
mov
sub
cmp
mov
jbe
mov
mov
xor
xor
add
add
imul
mov
mov
mov
mov
add
movl
mov
movl
movl
mov
xor
add
jmp
mov
xor
add
mov
mov
mov
mov
xor
add
mov
mov
mov
mov
mov
xor
add
mov
mov
mov
mov
xor
jmp
fnstenv
sub
mov
jae
jns
xor
jl
jle
data16
jle
scas
shlb
es
cmpsb
outsl
iret
or
add
push
insl
loopne
mov
notl
dec
icebp
addr16
outsl
lods
adc
das
mov
xchg
outsl
mov
es
pop
mov
mov
loop
xor
sbb
push
orb
out
and
test
fs
adc
inc
cmpsb
stc
push
pop
cwtl
das
xor
inc
inc
cmp
mov
mov
mov
dec
popa
add
out
repnz
or
test
inc
cwtl
aad
xchg
stos
test
sub
in
push
dec
js
fisttpl
mov
xor
insb
daa
inc
mov
add
lret
popf
outsb
cli
mov
mov
sub
adc
mov
push
jmp
into
out
cmp
cmp
out
movsl
pop
inc
xchg
bound
or
add
repz
fucomp
jns
inc
jne
push
outsl
add
mov
jmp
xchg
mov
mov
mov
cmp
sti
adc
push
adc
aam
xchg
nop
outsb
xor
mov
pop
mov
xor
adc
adc
scas
inc
std
pushf
lret
or
pop
mov
xchg
out
aad
das
rol
ret
pop
aaa
mov
mov
repz
adc
arpl
pop
and
pop
shlb
jle
sbb
stos
xor
aam
inc
sti
cmp
outsl
sub
push
push
icebp
daa
dec
adc
adc
sbb
adc
add
mov
mov
pop
push
cmc
sbb
inc
outsb
jae
stos
shl
push
pop
daa
data16
inc
and
and
lahf
btc
dec
xor
rorl
mov
or
stos
jecxz
dec
call
nop
add
mov
pop
hlt
cmp
data16
sub
cltd
insb
in
and
jae
shlb
or
push
jl
push
leave
cwtl
and
xlat
ja
repnz
mov
shl
xor
inc
pop
push
inc
std
ja
push
mov
sti
mov
jbe
jp
push
xchg
out
mov
lods
adc
dec
mov
inc
outsb
idivb
push
sub
int
imul
push
mov
add
into
push
testb
lock
sbb
dec
lret
pop
fwait
sbb
dec
repnz
scas
xor
sbbb
dec
jle
lcall
pop
pop
xor
mov
add
fwait
inc
mov
hlt
sbb
test
jae
adc
dec
outsb
sub
lret
mov
mov
daa
push
repnz
fsub
and
mov
mov
in
mov
mov
mov
mov
jmp
lods
mov
jno
mov
stos
jb
arpl
jnp
xchg
data16
jle
inc
in
jnp
inc
pop
jmp
outsl
jbe
repnz
int3
fmull
adc
fadds
and
pop
fstps
ds
daa
lcall
lods
in
jl
loopne
adc
xor
jno
adc
cltd
test
aam
iret
jmp
sti
dec
in
mov
in
push
clc
stos
imul
mov
add
xor
loop
mov
std
arpl
cld
lret
pop
xchg
push
shll
or
xor
xchg
push
cli
sbb
daa
xchg
xchg
sub
dec
aam
mov
cmp
inc
lods
cmp
or
or
xchg
or
mov
int3
add
cmpb
dec
out
or
rclb
mov
adc
test
test
xchg
outsb
sbb
xchg
push
stos
inc
mov
pop
stc
jle
push
xor
cmovge
xor
out
pusha
test
fsubrl
repz
pop
stc
cmp
js
add
clc
scas
or
xchg
pop
mov
or
cmpl
xchg
in
push
call
aaa
and
imul
lods
add
sub
insl
rcl
fnstsw
in
fadd
dec
add
push
es
mov
and
sarb
mov
pushf
fwait
push
inc
inc
ror
mov
adc
or
cmpsl
leave
adc
jns
pop
jmp
stos
sub
xchg
nop
jo
ja
mov
stos
cmpsl
dec
pusha
cli
dec
mov
push
xor
fs
hlt
hlt
test
jl
dec
mov
fs
sbb
out
inc
in
loope
push
mov
sbb
movsb
inc
je
xchg
inc
xchg
pop
mov
fwait
jno
scas
jp,pt
arpl
pop
repnz
fwait
mov
fisubs
rorl
xor
test
add
pop
mov
jno
js
mov
movsb
dec
iretw
pop
insl
sbb
xchg
sub
mov
lret
pop
xor
dec
aas
int
push
jb
negl
mov
or
sbb
mov
test
jg
imul
cmp
aas
test
jae
xorl
jge
pop
cmp
or
mov
dec
sub
pop
mov
jnp
dec
mov
rolb
jl
negb
out
adc
cltd
push
iret
test
ss
cwtl
mov
xor
jbe
add
and
jno
jg
cmc
mov
fisubrl
jnp
jno
cmp
unpckhps
pusha
dec
jle
movsb
mov
gs
stos
and
mov
xchg
mov
fnstenv
in
push
add
pop
adc
mov
clc
add
add
imul
add
jmp
xchg
lods
mov
mov
jae
bound
xchg
popa
jne
dec
cmpb
jl
jle
popa
icebp
movsb
arpl
mov
pop
mov
ror
mov
int
stos
pop
xlat
pop
je
daa
cmp
push
out
inc
in
adc
dec
jb
dec
mov
sbb
mov
mov
adc
fistps
mov
imul
or
ja
sbb
mov
in
dec
daa
jmp
in
rol
xchg
pop
adc
mov
push
aas
jecxz
dec
shll
and
pop
adc
and
add
xor
rcr
jecxz
sti
mov
mov
inc
cs
jo
lret
xlat
or
js
and
dec
loop
das
push
pushf
mov
push
push
push
mov
out
mov
jns
lcall
cmpsl
imul
xchg
mov
ljmp
decb
add
push
jo
push
movsl
mov
insl
popf
or
out
add
mov
xchg
in
in
jae
lret
shll
cwtl
iret
mov
mov
and
dec
aas
inc
mov
mov
sbb
and
or
xchg
or
dec
cvtpi2ps
bound
les
stos
mov
mov
shll
inc
fs
jge
fidivrl
cmp
push
mov
daa
pop
push
sbb
mov
ret
dec
or
inc
mov
pop
loope
dec
shll
inc
and
ret
mov
je
and
and
stc
xchg
out
dec
dec
dec
dec
mov
scas
adc
fldl
pushl
pop
fxch
lods
popa
mov
lock
pop
xchg
dec
stos
xor
imul
jo
ret
stc
jl
jnp
pushf
cmc
mov
outsb
dec
pushf
lea
add
scas
repnz
pop
nop
push
xchg
ljmp
cwtl
or
dec
sbb
mov
pushf
sti
cmpsl
scas
cmp
jbe
mov
sub
mov
jecxz
ret
clc
sub
sbb
pushf
sar
add
or
popf
lods
mov
filds
leave
cld
push
cmpsb
xchg
cmp
xchg
push
mov
jecxz
add
mov
out
push
add
cs
xchg
lret
ss
cmp
ss
mov
push
sahf
dec
jnp
xor
xor
scas
sti
movsl
es
and
movsl
adc
ljmp
test
push
pop
mov
push
pop
int
fcoms
ds
sub
insl
cmpsl
aaa
mov
jnp
clc
jp
pop
scas
ret
std
mov
push
add
addl
enter
xor
into
lods
gs
inc
test
hlt
mov
xor
add
jmp
cld
jmp
adc
inc
jno
faddl
mov
jle
je
scas
lret
sahf
test
clc
repnz
push
cmp
pop
sub
aad
mov
and
iret
inc
in
sub
mov
xor
or
push
fwait
aaa
pushf
pusha
mov
sbb
fwait
cwtl
int
dec
or
inc
mov
std
mov
sarl
movl
pushf
xchg
dec
out
push
push
out
lds
cmp
push
mov
in
jo
xchg
mov
in
fwait
sbb
or
mov
scas
stos
cs
mov
lret
pop
fwait
sbb
jo
cmp
mov
pop
leave
faddp
aaa
push
clc
jl
sbb
mov
out
xchg
out
mov
jns
lds
mov
pop
adcb
stc
insb
imull
or
int3
leave
mov
sbb
xor
cmc
add
pcmpgtd
inc
jae
or
inc
sbb
push
dec
adc
sbb
stos
push
mov
out
push
repz
cmp
mov
les
lret
out
jno
pusha
mov
js
pop
dec
pop
mov
aam
lock
push
test
sarb
pop
xchg
mov
testb
int3
pop
jae
mov
jle
enter
xor
mov
add
in
aas
jo
mov
jp
inc
xor
repz
push
stos
inc
fstps
rcl
pop
aas
add
pop
imul
ret
insb
adc
push
mov
xor
mov
inc
mov
or
adc
shr
fstl
cld
adc
cmpsl
in
fisubl
in
dec
js
in
or
fsubrs
nop
or
ficoms
out
test
movsb
jmp
adc
jbe
icebp
and
xchg
push
mov
adc
fstl
xchg
jge
sahf
test
jno
push
popf
cmpsl
lret
or
sub
cmpsb
pushf
inc
stos
sbb
int
xchg
push
movsb
loop
lret
jb
es
lock
inc
mov
push
into
jl
sub
xlat
push
jp
sub
cwtl
adc
inc
add
dec
push
and
or
adc
fwait
dec
pop
xchg
data16
ja
xchg
xchg
stos
cs
xchg
adc
add
cwtl
fnstsw
xchg
aaa
or
dec
cmp
push
scas
les
lret
out
lds
sub
aam
sarb
pusha
pop
ret
rcl
movsl
pop
xor
jo
mov
ret
mov
push
pushf
loope
mov
cmc
cmp
xor
cmpsl
pop
inc
mov
inc
scas
gs
fnstenv
movsb
jno,pt
insl
popf
repz
hlt
xor
sub
mov
jmp
sbb
cmpsl
pop
mov
loope
xchg
or
cli
pushf
mov
data16
jle
push
sbb
push
divb
dec
push
fnsave
sti
div
cmc
stos
jnp
inc
add
dec
cmpsl
in
adc
iret
xchg
lahf
cld
daa
and
std
int3
fists
cli
test
stos
mov
mov
cs
or
pusha
add
adc
stos
or
adc
xor
lds
xor
rolb
xchg
inc
test
loope
inc
sbb
loop
push
adc
pop
sub
xlat
sbb
push
adc
into
pop
pop
shlb
scas
iret
cmpsb
sahf
les
dec
outsl
ja
dec
cltd
outsl
dec
mov
pcmpgtb
push
outsb
inc
push
mov
inc
lea
bound
jp
gs
hlt
scas
add
jg
mov
cltd
ror
movsl
xor
mov
sbb
les
xchg
les
dec
pop
add
leave
add
add
popf
add
dec
outsl
ja
int
mov
popa
mov
in
xchg
daa
xchg
lahf
jl
idivl
xor
loope
mov
sub
jmp
push
adc
dec
roll
mov
pop
imul
mov
pop
push
xchg
in
xlat
sub
push
xor
mov
sub
pusha
adc
cmp
dec
xchg
add
push
popa
xor
cs
dec
mov
lds
test
fwait
lock
cli
or
add
out
or
xor
push
sub
cwtl
les
inc
pop
nopl
xchg
sbb
loop
or
iret
xchg
imul
insb
es
and
insb
push
rorl
mov
cltd
push
sub
pop
mov
push
scas
nop
out
xchg
lods
mov
cmp
cltd
ja
push
stos
pusha
movsl
mov
mov
ret
jmp
sti
jnp
xor
xchg
pop
mov
jl,pt
push
mov
dec
stc
stc
jo
shr
aad
fwait
pop
jno
shl
mov
mov
sarb
and
xor
inc
in
add
dec
dec
fiaddl
mov
pop
sub
cmp
mov
push
push
pop
adcl
xor
push
popf
dec
std
insb
mov
data16
mov
loop
stos
fsub
mov
lods
or
sub
push
insl
dec
fistps
or
jle
mov
dec
jnp
inc
and
pushf
pop
mull
out
arpl
out
xchg
es
or
fwait
cmp
mov
data16
xchg
outsl
out
dec
xor
ret
push
fs
in
xor
add
imul
mov
xor
sub
lea
cmp
jbe
mov
mov
xor
jmp
rcrl
popf
and
scas
cwtl
mov
jle
data16
jle
jnp
scas
mov
xchg
sahf
rorb
popf
fs
inc
std
fsts
adc
insb
xchg
ja
imul
repz
sub
js
jg
bnd
lret
jmp
jg
sbb
push
push
popf
mov
bound
and
addr16
xlat
lock
inc
bound
fmul
rep
loopne
mov
xchg
not
ds
aad
sti
cli
and
mov
jl
adcl
testb
enter
sbb
nop
in
jb
push
or
in
enter
sbb
cmp
movsl
iret
divb
add
mov
ret
and
paddq
out
pop
cltd
mov
jo
add
in
jne
ljmp
sarl
rcrb
clc
mov
sbb
lcall
pop
dec
mov
jge
rcrl
jne
xchg
add
or
xchg
sub
stos
mov
or
js
cmpsl
ljmp
addl
fmull
mov
lock
ret
jae
push
sbb
imul
add
inc
aam
inc
dec
pop
inc
js
repz
jno
loope
or
out
add
aad
shl
pusha
pop
sub
shrl
jae
mov
and
jns
cmp
sbbb
mov
or
pop
mov
push
sbb
aam
cmp
shll
pop
push
inc
add
dec
dec
adc
test
aam
mov
push
data16
sarb
loop
jecxz
and
pop
mov
pusha
pop
fisttps
sbb
mov
imul
dec
stos
sub
shll
repnz
lods
jno
jno
pop
fcoms
push
es
jnp
out
shlb
or
lcall
jne
add
repz
dec
notb
jno
sbb
arpl
arpl
imul
popa
jne
mov
cmp
push
shlb
and
cmpsb
jmp
jge
pop
mov
jecxz
roll
cmp
adc
sbb
mov
sbb
call
or
ja
adc
pop
mov
dec
xchg
xor
or
and
jge
insl
cmp
jg
cmpsl
mov
adc
cwtl
mov
bound
mov
mov
cld
push
pop
inc
mov
xor
jnp
cmp
or
push
sub
aad
or
xchg
cli
mov
and
sub
adc
loopne
sbb
mov
xchg
sbb
imul
call
add
sub
mov
loopne
cli
pushf
xchg
adc
jle
jl
jle
bnd
jae
arpl
and
mov
ficomps
ds
mov
shlb
ucomiss
notl
jecxz
push
adc
pop
inc
lods
xor
int3
push
pop
int
jo
push
cmpsb
imul
mov
adc
mov
and
outsb
dec
cmc
cmpsb
mov
mov
mov
jle
jl
push
jle
iret
ja
sar
jbe
into
jge
dec
jbe
out
pop
adc
inc
adc
mov
jecxz
push
hlt
sbb
sub
pop
sbb
divb
push
push
inc
sbb
leave
sarl
dec
popf
mov
loopne
and
and
jne
stc
test
sti
iret
cmpsl
sub
je
movsb
mov
mov
push
int
lock
push
leave
pushf
mov
or
adc
mov
xor
sub
jecxz
lods
add
pop
rcll
sbb
icebp
mov
shll
out
iret
cmpsl
cmp
js
dec
pop
mov
or
ret
jmp
mov
xchg
mov
int
push
cmp
in
xchg
stos
arpl
xlat
push
into
sahf
out
loop
or
pusha
out
loop
js
sbb
sub
xor
rol
ds
iret
cmp
ss
clc
lock
out
inc
sbb
mov
push
jmp
inc
or
ja
mov
test
dec
insb
mov
std
je
and
test
lret
testl
jno
out
mov
ret
imulb
lods
insb
int
xor
cli
pop
pop
aas
and
cmpsb
xchg
xor
pop
dec
jle
lret
and
adc
mov
push
scas
imul
pop
and
test
push
adc
mov
das
mov
fistps
inc
incb
mov
loope
out
fstpt
jge
or
xchg
std
fbstp
mov
add
sbb
cmp
fstpl
mov
loop
sub
sub
jae
sbb
xchg
movsb
loope
mov
xor
and
pop
xchg
lock
mov
mov
push
sbb
fisubrl
fimull
aam
dec
push
xchg
mov
xor
cld
pop
stos
lock
sbb
ret
mov
in
sbb
imul
or
xchg
lds
xchg
mov
pop
aaa
ret
in
pushf
sub
jl
inc
xchg
incl
pop
add
jbe
sti
jecxz
inc
gs
mov
mov
jle
es
mov
cmp
inc
sbb
lahf
pop
xchg
or
out
fsubl
in
pop
int3
lret
add
sbb
xchg
mov
clc
add
mov
lea
mov
mov
xor
mov
sub
add
mov
mov
xor
add
imul
cmp
jbe
pop
pop
leave
ret
push
mov
sub
call
andl
xor
movl
cmp
jne
movl
cmp
movl
jne
orl
push
addl
call
push
movl
push
andl
push
call
test
movl
je
sbbl
lea
orl
push
movl
movl
subl
movl
subl
movl
orl
call
orl
test
je
decl
xor
jmp
sbbl
push
andl
push
push
call
movl
jmp
adcl
push
call
sbbl
test
movl
jne
push
mov
add
mov
movl
adc
lea
mov
xor
lea
dec
mov
xor
mov
notl
mov
add
mov
mov
adcl
push
sbb
mov
movl
xor
push
xor
mov
adcl
add
mov
mov
cmp
mov
mov
je
andl
mov
xorl
xor
add
imul
mov
movl
jmp
addl
xor
add
mov
adcl
mov
xor
movl
cmpl
je
cmpl
jne
pushl
call
xor
add
dec
mov
jmp
movl
cmpl
je
cmpl
jne
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
addl
add
sub
mov
movzwl
and
mov
addl
mov
xor
add
movl
cmp
movl
jne
subl
pushl
subl
pushl
subl
call
negl
mov
mov
orl
mov
mov
or
mov
andl
xor
xor
inc
mov
cmpl
jne
pushl
push
call
cmpl
jb
mov
addl
mov
mov
mov
sbb
mov
mov
andl
jmp
xor
or
inc
mov
cmpl
jae
cmpl
jne
pushl
call
cmpl
jne
mov
inc
mov
jmp
mov
xor
movl
movl
cmpl
je
cmpl
jne
pushl
call
cmpl
jne
xor
add
dec
mov
mov
dec
mov
jmp
adc
mov
sub
mov
addl
mov
subl
xor
addl
xor
add
mov
andl
xor
andl
xor
add
movl
lea
cmp
movl
ja
mov
orl
xor
lea
orl
push
movzbl
xor
mov
mov
addl
xor
lea
adcl
push
xor
xor
sbb
mov
addl
pushl
call
mov
xor
lea
mov
mov
xor
xor
add
mov
xor
lea
cmp
jbe
mov
mov
mov
mov
mov
mov
mov
sub
xor
mov
mov
cmp
je
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
pushl
mov
pushl
add
mov
mov
pushl
call
mov
mov
mov
jmp
mov
mov
xor
add
cmp
jne
mov
xor
add
mov
mov
xor
add
mov
mov
mov
mov
mov
mov
xor
add
mov
mov
mov
mov
mov
mov
mov
movl
mov
xor
add
mov
mov
mov
mov
mov
mov
push
pop
sub
add
movl
mov
mov
mov
mov
mov
mov
mov
xor
add
mov
lea
mov
mov
xor
add
mov
lea
push
mov
xor
add
push
mov
push
pushl
call
xor
mov
sub
push
mov
add
push
call
inc
cmp
jb
mov
call
lea
mov
mov
mov
pushl
lea
push
call
mov
push
add
push
lea
push
call
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
dec
jmp
pop
lods
xchg
je
jo
mov
mov
mov
xchg
jle
push
jl
jle
in
and
sub
ret
inc
xchg
aas
xchg
push
jle
push
jmp
cltd
insl
xchg
test
lret
push
jle
movsb
sub
rcl
fldenv
jb
sti
push
or
mov
daa
movsb
sbb
pop
jb
dec
mov
rolb
mov
leave
fwait
or
dec
mov
inc
adc
rol
movsl
and
dec
popf
call
loope
movsb
xlat
ljmp
out
ss
mov
jmp
addr16
pop
shll
aad
faddl
stos
pop
dec
or
pusha
mov
pusha
add
sbb
mov
mov
pop
sub
adc
fdivrp
mov
xor
mov
rcl
add
mov
sub
inc
loop
out
test
or
jge
jle
test
cmc
and
add
into
sar
mov
xlat
sub
pop
inc
andl
ret
xor
push
lahf
xchg
jnp
gs
fstp
scas
inc
pop
loope
lret
loope
gs
or
push
test
push
sahf
xchg
sub
mov
mov
shl
xor
adcl
adc
enter
loopne
loope
push
loop
movsb
sub
jno
cmp
icebp
ret
sahf
ss
sbb
xchg
testl
add
mov
dec
adc
out
fcomp
mov
fmulp
pop
cmp
push
sbb
imul
xlat
out
rcll
std
push
cltd
js
and
cwtl
lock
mov
push
push
out
movsb
pop
scas
pop
mov
stos
test
jge
or
rolb
mov
push
mov
in
icebp
push
push
movsl
sub
aam
pop
aaa
and
cld
xchg
push
fadd
push
mov
mov
lahf
pushf
call
pop
movsb
sub
lret
xchg
jns
add
push
mov
test
shlb
incl
mov
movl
cmpl
je
cmpl
jne
push
push
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
push
pushl
call
jmp
movl
cmpl
je
cmpl
jne
pushl
pushl
pushl
push
push
pushl
push
push
pushl
pushl
pushl
call
xor
add
dec
mov
jmp
mov
movl
cmpl
je
cmpl
jne
push
pushl
call
xor
or
dec
mov
jmp
and
mov
sbb
mov
subl
push
adc
push
mov
andl
mov
inc
mov
cmpl
jne
pushl
pushl
call
cmpl
jb
xor
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
call
jmp
push
mov
adc
add
sbb
mov
notl
lea
xor
mov
mov
add
mov
xor
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
push
push
push
call
cmpl
jne
mov
inc
mov
jmp
jmp
arpl
jae
jno
lret
ret
in
jle
push
jl
jle
pop
hlt
jl
inc
mov
mov
push
push
lods
xlat
fstpl
xor
add
roll
add
movsl
inc
ss
jecxz
stos
shlb
push
mov
mov
push
ret
mov
jge
mov
lea
or
scas
sbb
sbb
cmc
in
lea
gs
push
pusha
cltd
rcrb
inc
leave
das
imul
jne
vrcpss
xlat
adc
cmp
add
jmp
push
jns
push
mov
cmp
mov
gs
inc
pop
ljmp
and
pop
and
sahf
cmp
ss
mov
xchg
pop
scas
push
insl
mov
push
pop
jae
sub
cltd
or
gs
aad
add
mov
mov
dec
jno
out
out
jmp
mov
hlt
cwtl
pushl
mov
and
dec
cmp
addb
les
push
out
pop
test
sti
adc
jge
fnstenv
pop
adc
sbbb
cli
jo
pop
jbe
add
add
cmpsl
lret
cld
repz
mov
inc
jb
int
mov
test
pop
sub
lahf
stos
movsl
arpl
shll
dec
ds
sbb
fiadds
jg
pop
jae
jae
call
cmp
xchg
in
lock
lods
in
mov
outsl
or
xor
adc
lret
sub
and
push
xor
lret
lret
lret
mov
psubsw
test
lret
xor
mov
imul
and
push
sub
xor
push
repz
mov
push
or
dec
xor
jno
mov
icebp
dec
iret
pop
mov
lret
out
mov
jns
lock
mov
mov
das
or
aaa
jp
sbb
mov
movl
lea
andl
mov
inc
mov
cmpl
jne
push
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
mov
jmp
pusha
imul
cmc
mov
stos
insl
mov
ret
hlt
xchg
jle
push
jl
jle
xor
movsl
test
mov
sub
jne
sbbb
lods
cmp
add
mov
out
push
mov
xlat
popa
maxps
inc
ret
jbe
data16
sub
pop
and
lock
dec
sbbl
js
inc
xor
insl
sbbl
orb
push
fsubrs
mov
hlt
xor
pushf
and
push
jecxz
stc
mov
cltd
lcall
jp
leave
loopne
insb
notb
push
jmp
dec
shlw
inc
insl
push
cmp
xchg
sub
or
jnp
cltd
dec
inc
aam
and
rolb
adc
xor
je
or
popa
adcb
in
cmp
add
insb
jb
mov
push
fbld
mov
lods
fs
mov
xchg
mov
sbb
mov
xlat
jne
jae
sbb
in
inc
add
shrb
sub
or
xchg
adc
decb
mov
mov
enter
mov
loop
lods
xchg
or
int
icebp
xchg
mulb
push
adc
call
inc
idivl
inc
in
fdivr
notb
lods
pop
xchg
adc
jno
pop
rorl
mov
or
add
icebp
and
pop
jl
dec
data16
test
lahf
adcl
xchg
nop
loopne
popl
adc
cmp
sub
push
xchg
and
das
or
cmp
sti
dec
nop
jmp
sub
mov
shlb
xchg
cmp
sbb
loope
jmp
dec
inc
enter
aaa
insl
lods
dec
push
xlat
repz
dec
lahf
add
pop
mov
lods
ja
imul
outsb
xchg
sbb
pop
ja
pop
dec
sbb
leave
cli
lar
fcomi
je
mov
xchg
mov
cmc
jnp
mov
push
in
out
xor
or
mov
mov
inc
xchg
loop
mov
xor
add
mov
mov
mov
mov
mov
mov
movzwl
add
movl
mov
mov
mov
xor
add
jmp
or
das
mov
push
test
sarl
dec
test
jle
fcoms
mov
or
adc
loopne
pop
jnp
lods
dec
mov
bound
mov
xchg
adc
sub
jns
loop
or
xchg
mov
xchg
inc
jecxz
idivb
mov
add
decb
push
lret
xchg
lds
enter
lods
aam
bound
daa
cmp
mov
rcrb
cmc
adc
dec
movsb
mov
cmp
dec
lds
mov
insb
clc
mov
xchg
outsb
sbb
xor
cmp
das
sbb
and
jge
call
add
fisttpl
test
fidivrs
cmc
sub
idivl
push
push
inc
lret
inc
aas
aam
lcall
jmp
inc
cmpsl
ja
push
and
je
mov
sbb
or
sbbb
movsl
sub
test
adc
insl
daa
sbb
nop
dec
sahf
dec
outsl
and
leave
in
mov
pop
pusha
mov
mov
cmp
pop
pop
je
add
jnp
mov
push
jo
xor
int3
fstpt
inc
pop
cwtl
and
pop
mov
push
jecxz
je
test
stos
mov
ss
movsl
sbb
lea
xchg
sub
xchg
mov
sbb
push
out
pushw
sbb
mov
lods
xor
sahf
out
movsl
hlt
daa
enter
fwait
xchg
mov
add
mov
xor
bound
mov
stos
xor
sbb
ret
mov
xchg
add
adc
mov
mov
shrl
inc
aad
lds
and
dec
inc
hlt
call
sbb
outsb
iret
es
xchg
repz
clc
syscall
test
inc
cmp
loope
movb
jl
dec
in
or
popa
jge
mov
ds
mov
or
or
mov
daa
cmp
jmp
sbbb
cltd
jno
jo
fiadds
jle
push
jl
jle
cwtl
js
push
movsl
cs
leave
pop
lods
scas
incl
lret
mov
lds
xchg
pop
or
and
ficompl
adc
pop
clc
dec
das
jmp
push
inc
push
loop
pop
mov
cmp
test
jp
shrd
jle
adc
add
shl
loop
mov
movsb
je
xchg
fs
cltd
arpl
or
negl
jg
addr16
inc
sahf
or
rorb
or
mov
repnz
ficoml
cmp
aam
imul
lea
ret
sub
pop
repz
cwtl
ljmp
push
arpl
mov
push
sbb
loop
mov
pop
cmc
mov
add
sub
in
dec
fs
xor
add
adc
negl
jbe
in
and
in
fistps
mov
xchg
dec
sbb
jno
icebp
cmp
sbb
roll
cmpsb
add
mov
push
mov
mov
or
loopne
mov
push
mov
fidivl
lock
and
jecxz
pop
sahf
inc
push
imul
inc
inc
into
sbb
pop
fwait
pop
imul
call
mov
imul
or
mov
mov
sub
pop
add
imul
sti
hlt
cmp
in
pop
xchg
pop
jg
jnp
mov
outsl
adc
add
cmp
int3
test
sbb
sbb
cmpl
inc
mov
pop
lods
lods
leave
jbe
mov
loop
xchg
out
push
popa
ljmp
sub
pop
pushf
lds
mov
inc
pop
addr16
mov
ret
pop
cmp
and
dec
loopne
cltd
sub
jp
into
lret
pop
mov
mov
int3
xchg
xlat
adc
lds
inc
icebp
and
push
and
jne
jmp
xchg
mov
icebp
inc
cs
pop
cvtps2pd
insb
movsb
fwait
jle
push
jl
jle
mov
mov
sahf
push
sub
jecxz
adc
dec
das
sahf
xchg
enter
mov
push
add
imul
dec
cmp
and
push
outsl
rorb
bound
xor
lcall
xor
xor
pop
mov
sub
addb
out
cwtl
push
and
test
clc
pop
push
mov
sbb
out
add
mov
push
pop
sub
xor
in
push
xchg
sbb
jmp
lods
in
mov
mov
insl
xlat
adc
addr16
jmp
xchg
jle
sbb
cwtl
pop
mov
mov
popf
mov
test
ret
hlt
divb
pop
adc
cltd
xor
mov
enter
imul
gs
ds
int
sbb
data16
mov
xchg
sbb
pop
mov
push
cmovle
das
inc
mov
lods
cmp
gs
outsl
fmuls
mov
mov
das
xchg
jmp
lods
sbbb
inc
xchg
fwait
or
call
int
sub
sbb
add
stos
lods
xor
mov
dec
mov
out
bnd
lods
addr16
mov
cltd
in
aad
mov
das
cmp
aaa
xor
lods
sub
mov
push
adc
es
sar
push
cmp
cmp
mov
pop
cmpsl
jno
or
imul
rcrb
aad
popa
ds
push
or
pop
fiaddl
adc
mov
pop
jo
pop
pop
push
addb
mov
gs
add
in
idiv
nop
in
mov
mov
neg
lods
andb
repnz
xor
sti
ret
mov
js
pop
push
cli
adc
lahf
sub
mov
mov
xor
add
cmp
jmp
dec
iret
lods
dec
lods
imul
pop
and
mov
jle
push
jl
jle
mov
mov
inc
repz
sub
sti
cld
xchg
push
stc
add
cltd
ret
rclb
pop
ss
dec
loope
test
lds
push
mov
sbb
mov
add
ret
mov
jl
orl
mov
out
dec
int3
xchg
adc
adc
and
pushf
dec
mov
mull
enter
xor
xor
into
or
xchg
into
xor
and
dec
in
sbb
andl
mov
push
divb
mov
push
sbb
into
xor
push
pushf
mov
and
inc
mov
loop
sub
push
ds
or
pop
jae
out
jl
jbe
fwait
out
js
dec
push
jmp
fldl
das
jns
xor
test
jbe
out
fsubr
dec
add
mov
xor
add
xchg
scas
jnp
insl
loopne
push
arpl
out
aad
cmp
shufps
xchg
rclb
inc
jmp
sbb
mov
cwtl
dec
mov
ja
outsb
movsb
pusha
mov
gs
sub
mov
cmpsb
icebp
inc
xor
jge
push
subl
jbe
pushf
fwait
call
mov
cwtl
push
fadd
loop
sbb
mov
loop
js
repz
mov
movsb
sub
sti
cmp
in
loope
ja
push
or
ljmp
add
sbb
xchg
stc
sbb
rolb
sbbl
dec
pop
push
xchg
cltd
xor
inc
lret
ljmp
pop
mov
inc
push
mov
and
loopne
pop
xchg
jo
or
lock
ret
bndstx
popf
mov
sub
test
inc
or
add
mov
mov
mov
xor
mov
sub
add
mov
mov
mov
movzwl
add
jmp
lret
mov
or
and
pusha
dec
je
inc
cmpsl
jle
push
jl
jle
loopne
mov
jmp
jno
mov
inc
push
icebp
dec
shll
fwait
jg
and
or
cmp
and
mov
into
cmp
jae
mov
in
pop
xchg
loop
sbb
fxch
mov
rorl
ja
aam
dec
xchg
pop
es
mov
inc
push
push
xchg
add
scas
push
mov
out
lods
inc
sub
nop
mov
imul
nop
jle
jmp
dec
pop
xchg
push
loopne
push
imul
in
pop
xchg
out
sbb
fisttps
iret
das
iret
rol
sbb
lods
xchg
addr16
jecxz
cmp
daa
xor
xor
loope
out
es
jge
imulb
sbb
repz
mov
cmp
dec
xchg
mov
imul
or
andb
jae
jge
push
scas
mov
shrl
mov
push
xchg
inc
pop
add
adc
jl
rcl
push
push
pop
mov
stos
or
sbb
out
push
adc
or
scas
push
or
xor
push
loop
jmp
scas
and
cmp
ret
imul
jmp
stos
push
hlt
jp
mov
stos
push
fistl
cwtl
fsubs
out
lock
mov
movsl
pop
sub
cmp
mov
nop
out
or
testl
inc
scas
pushf
aam
or
shll
add
imul
rcll
mov
call
inc
out
std
rcrl
rcll
gs
add
cmpsl
xchg
inc
sbb
in
xchg
mov
roll
pop
xor
fisubrs
adc
cmp
out
xlat
movsb
pop
or
in
inc
or
dec
or
movb
xor
sub
mov
movzwl
sub
cmp
jmp
popa
ja
add
xorl
inc
mov
xchg
push
movsl
jle
push
jl
jle
divb
test
lret
imul
lea
insb
jns
xor
dec
mov
ja
data16
fildll
xchg
and
xlat
cmp
cmpsb
lods
or
mov
sti
and
or
fwait
test
push
repnz
pop
add
pusha
pop
add
or
inc
call
pop
sub
movsl
mov
mov
xchg
scas
mov
cmp
popa
inc
mov
cmc
gs
sar
dec
mov
push
in
ja
loop
fbstp
lret
or
fninit
pusha
into
push
xchg
stc
mov
mov
mov
mov
cld
pop
in
xchg
lret
pop
into
adc
add
mov
pop
xchg
push
and
inc
jl
inc
lcall
cmpb
daa
sbb
xchg
insl
pop
jnp
cmp
and
inc
lret
add
jo
xor
and
movsl
mov
sub
push
add
cmp
jbe
pop
sbb
mov
leave
ja
lahf
cmpl
jns
cmc
dec
loopne
ja
xchg
jo
rorb
jnp
sub
sar
scas
pop
add
inc
jbe
inc
xchg
mov
mov
xor
dec
je
dec
mov
add
js
int3
and
ss
fistps
sub
call
aaa
fsubrs
cmpl
into
jnp
in
je
addr16
pop
popa
or
xorb
xchg
pushf
or
xchg
scas
inc
fldt
orb
and
jo
sbb
cld
cmp
mov
std
pop
lock
lods
int
stos
mov
dec
gs
pushf
leave
aam
cltd
stos
hlt
add
aas
sbb
pop
repnz
add
sbb
mov
sbb
je
popf
sub
gs
cmp
push
pop
fstpt
jo
xor
sbb
loope
or
push
scas
push
dec
fsubs
and
pop
push
sub
std
js
sbb
mov
out
mov
movzwl
jg
xor
sub
sub
mov
jmp
xor
lea
mov
mov
cmp
je
mov
movl
jmp
jmp
cli
subb
cmc
stos
inc
push
jo
inc
cmp
loop
mov
jle
jp
inc
pop
aad
cli
mov
jno
inc
add
pop
mov
sbb
xor
dec
sbb
fildl
sbb
jp
into
insl
or
test
push
lods
fisubrs
cmp
pushf
in
or
aaa
lock
mov
sub
fistps
sahf
add
dec
pop
sbb
adc
cld
push
mov
adc
mov
and
leave
rclb
cli
adc
lcall
ljmp
push
aas
lea
jno
stc
jbe
mov
rorl
lods
mov
add
outsl
cmpsl
mov
pushf
push
int3
cld
xor
cmp
push
pop
pusha
pop
pop
push
inc
mov
imul
test
shrb
pop
out
xor
mov
loop
test
sbbb
cli
repz
hlt
pop
adc
in
push
aad
adc
nop
mov
xlat
arpl
ret
je
xchg
subl
movsbl
mov
jno
mov
xlat
lods
leave
sub
sbbb
jae
inc
scas
push
xor
xorb
icebp
xchg
mov
dec
into
and
push
mov
pop
jb
addr16
push
fcompl
fsubrl
mov
add
shll
insb
mov
gs
iret
movsb
nop
adc
cli
insb
mov
push
aas
inc
xchg
call
insl
lds
mov
jbe
insb
dec
inc
test
bound
adc
leave
cs
test
leave
adc
pop
loopne
jle
outsl
mov
insb
adc
gs
push
loope
push
jecxz
xor
popa
cwtl
adc
sbb
push
or
mov
mov
ds
sub
cmpsb
scas
jns
jecxz
inc
pop
mov
movsl
mov
es
push
das
xchg
negl
xchg
add
cmpl
xchg
sub
and
popa
mov
mov
xor
add
jmp
rcrb
gs
icebp
cltd
mov
and
pop
fwait
lock
jle
jl
jle
decl
push
mov
mov
lret
pop
sub
lea
mov
push
aaa
inc
mov
or
lahf
mov
outsb
and
scas
imul
repz
arpl
push
add
aam
cmp
jb
xchg
dec
insl
cmpsb
push
sub
xchg
fmul
sbb
xchg
int
mov
and
mov
int
mov
inc
arpl
aad
fs
scas
dec
adc
cmc
bound
pop
aad
xchg
cli
iret
jmp
mov
pusha
sub
xchg
push
inc
mov
or
daa
cmpsl
sub
jnp
mov
inc
xchg
cmp
xchg
fstpl
out
or
xchg
aaa
sbb
pop
test
pop
imul
lret
push
ret
movsl
aam
inc
adc
xor
je
inc
inc
pop
aas
int3
cmp
mov
movsl
cmpsb
and
pop
shrb
xor
add
je
sbb
jnp
stos
jae
ret
add
lret
and
nop
and
xchg
fdivs
leave
mov
xchg
mov
outsl
sbbb
fdivrs
jbe
mov
cmc
push
pop
push
inc
push
mov
fnstenv
cmp
add
push
adc
cmp
loope
inc
pop
dec
cmp
adc
inc
pusha
mov
ja
pop
push
xchg
adc
shrl
jmp
mov
dec
sub
push
aas
mov
fistps
ljmp
cmpb
lods
pop
test
mov
addr16
xchg
test
mov
mov
nop
lea
outsl
adc
xor
add
adc
xor
out
cwtl
test
test
mov
mov
mov
cmp
icebp
cmp
xchg
sbb
les
mov
movsl
hlt
rcrl
mov
jns
push
out
mov
fwait
decl
mov
test
add
add
clc
mov
mov
jmp
js
sbb
cltd
ja
jno
cli
xor
pop
mov
jle
push
jl
jle
and
mov
pop
pop
push
or
push
dec
es
mov
std
cmpsb
or
cmpsb
push
cmp
enter
bound
mov
or
cmp
dec
mov
push
lret
dec
shrl
and
push
fnclex
mov
stc
in
jp
icebp
lcall
arpl
mov
aad
and
in
arpl
insl
mov
push
inc
xchg
fidivrl
xchg
mov
fwait
enter
in
mov
xchg
out
xchg
movsb
inc
jl
mov
cmp
inc
inc
shll
cld
test
pop
dec
inc
ja
dec
aas
rcrb
imul
cld
push
inc
xchg
fidivs
or
add
lahf
popa
push
cmp
clc
xchg
out
insb
mov
pop
jg
jecxz
stos
nop
dec
test
aam
les
in
out
sahf
pop
mov
xlat
jle
jno
enter
dec
fimuls
push
cmp
sub
xchg
adc
cmp
mov
push
sub
lock
lock
test
cmp
outsl
fstps
or
cmp
dec
aam
mov
xchg
dec
int3
sbb
inc
sbb
popf
dec
jle
and
dec
cltd
jns
pop
jb
outsl
lods
or
and
aam
test
mov
mov
and
or
push
mov
sbb
out
pushf
fbstp
push
xor
push
xlat
sub
and
xchg
cmp
push
mov
push
push
inc
shll
out
sub
popf
mov
test
inc
jmp
cmp
daa
clc
pop
je
mov
addl
xor
xchg
push
xchg
lods
dec
add
mov
mov
fistl
add
jle
push
mov
mov
pop
mov
stc
adc
lahf
std
jno
dec
cmp
leave
imul
outsl
scas
aad
and
cmp
add
add
rorl
add
mov
mov
xor
add
mov
mov
mov
xor
add
cmp
je
mov
mov
jmp
and
xor
adc
push
mov
enter
jle
jl
jle
cmp
ja
jo
jnp
and
add
out
cmp
cmc
cmp
sub
imul
jnp
mov
loop
push
pop
pop
int3
xchg
adc
test
fcomp
mov
loopne
aam
arpl
mov
add
cmp
push
push
push
or
push
xchg
cmp
bound
cmp
loopne
ds
loope
frstor
pushf
test
cwtl
or
lods
sbb
ret
lcall
cmpsl
sti
fldcw
dec
outsb
fnstcw
fucomp
mov
cmp
out
jp
sub
jl
enter
cwtl
ds
les
cs
xchg
cld
adc
jno
jnp
adc
pusha
lock
cltd
xchg
sub
sub
xor
add
jbe
cwtl
mov
sbb
xor
dec
daa
outsb
inc
ds
fwait
lcall
push
sub
fwait
aad
sar
jmp
and
test
mov
movsb
sti
dec
daa
iret
xor
int
pop
mov
push
imul
aam
dec
pop
mov
push
in
or
rolb
cmp
adc
push
lret
jo
lds
inc
scas
sarb
ret
cmp
ret
push
xchg
call
and
or
inc
mov
aam
xchg
call
insb
fwait
pop
sub
or
mov
adc
sub
movsl
inc
mov
sbb
cmp
je
mov
lcall
popf
jge
jl
hlt
imul
sbb
push
xchg
in
aam
and
shlb
jns
fs
or
and
dec
stc
cltd
cli
bound
rol
sub
sarb
cmp
sti
leave
push
cmp
jbe
push
sahf
sbb
das
push
and
push
popa
aaa
xor
pop
push
add
mov
mov
mov
mov
mov
mov
add
xor
cmp
je
mov
mov
xor
add
mov
jmp
xorl
jmp
mov
jmp
sub
add
popa
push
in
jno
mov
jmp
test
jle
jl
jle
call
inc
cmp
lea
push
jl
call
movsl
xchg
shlb
cmp
cli
mov
mov
cmp
jge
mov
jecxz
leave
divb
push
sbb
push
mov
jne
dec
and
sti
xchg
fsubr
cmpsb
sbbl
iret
jle
mov
pop
inc
dec
lcall
jo
lods
inc
ret
fisttps
or
call
xor
dec
dec
xchg
iret
dec
mov
test
aad
ss
and
aas
stos
leave
fs
pusha
cli
dec
mov
test
cmc
cli
add
xchg
dec
orb
ds
shrl
push
iret
test
into
aas
leave
jnp
inc
cld
enter
mov
push
xchg
xchg
and
sbb
cmpsl
push
ret
aas
inc
call
dec
cwtl
push
loop
add
inc
ljmp
xchg
or
fimull
lahf
insb
xor
js
sbb
insb
sub
clc
mov
fcompl
cwtl
jecxz
xor
jo
and
and
out
pop
sub
mov
lea
add
xorl
shrl
mov
insl
dec
xchg
insl
fbstp
cmp
pushf
loope
outsl
sub
pop
jb
jmp
pushf
jle
cmp
cld
pop
mov
shll
inc
testb
test
mov
test
repz
sarb
or
negl
inc
fs
es
dec
mov
mov
loopne
jae
sub
iret
jl
std
fdiv
stc
loope
and
xor
daa
js
push
out
mov
std
loopne
sub
int3
dec
lret
pop
je
rorb
sub
int
adc
sarl
subl
data16
cltd
insl
daa
dec
fstp
int3
mov
jle
lods
sbb
cmp
xchg
mov
jmp
icebp
in
popf
push
mov
cmp
push
sub
jle
push
jl
jle
movb
shrl
jl
or
sbbl
cs
cmp
cli
idivb
jns
push
out
lret
adc
mov
fcoml
icebp
xor
jbe
out
stos
call
push
gs
mov
xchg
jge
lea
dec
xor
std
pushf
nop
das
lods
in
pop
inc
xchg
js
fidivrl
pop
addr16
enter
rcrl
sub
jae
bound
ds
lods
incb
mov
sahf
or
stc
dec
fisttpll
clc
or
pop
xchg
mov
dec
filds
rcrb
cmpsl
cmp
shl
cmc
pop
mov
mov
mov
les
rorl
cmc
xchg
xchg
sbb
xchg
and
and
jno
movsb
sbb
xchg
movsb
repz
pop
ret
cwtl
pop
cmp
jae
pushf
xor
xor
dec
insb
outsb
sub
jle
das
mov
add
call
fs
out
into
mov
or
ds
or
mov
mov
jno
adc
popf
mov
push
fisubs
mov
divb
mov
adc
cmp
and
into
jb
fiaddl
pusha
pop
ljmp
dec
mov
fimuls
and
add
fcoml
into
sbb
push
cwtl
and
cmp
add
adc
sbb
in
ficoms
test
lcall
push
or
pop
jae,pn
sub
or
dec
and
and
cmc
and
fildll
adc
mov
cmc
push
jmp
or
ds
xchg
icebp
sbb
out
sub
jge
popf
outsl
sbb
pop
mov
mov
mov
lret
in
or
fisttpl
stos
arpl
mov
or
jecxz
mov
dec
mov
push
pusha
sub
int3
popa
dec
arpl
sub
mov
mov
mov
mov
pushl
call
mov
cmp
je
mov
mov
pop
pop
jmp
iret
dec
mov
mov
icebp
dec
fadds
push
lcall
jle
jne
test
mov
insb
fistps
repz
xchg
addr16
xchg
dec
mov
repz
sbb
adc
mov
pop
imul
jne
daa
and
mov
ja
adc
dec
pop
sti
sub
dec
repnz
adc
orb
test
mov
pop
sbb
flds
push
or
bound
inc
or
stos
xor
pop
js
pushf
orl
add
stos
scas
sub
ret
jecxz
roll
cmp
jmp
mov
and
xor
or
mov
lcall
mov
xchg
xchg
xchg
test
lods
push
je
jbe
cmp
cmp
push
movsl
lcall
or
movsb
imul
xchg
inc
or
cli
int3
add
aam
pop
xor
push
movsb
mov
jmp
cmp
and
xchg
jnp
push
jb
inc
lret
pop
dec
testb
xchg
cmp
xor
dec
adc
adc
cltd
fiadds
xor
inc
ja
and
adc
movsb
sbb
jb
or
daa
imul
iret
mov
call
imul
test
cli
insb
jg
leave
cmp
insl
sub
xchg
stos
xlat
or
jbe
mov
pop
cmp
arpl
and
xchg
mov
mov
insl
adc
add
inc
fdivrl
ret
aad
mov
and
cmc
mov
xchg
jnp
test
xor
add
pop
dec
in
stos
pop
clc
pop
cmp
dec
inc
or
add
sbb
push
frstor
incb
dec
add
jecxz
jg
xchg
xor
jae
and
sub
out
into
fbld
or
or
push
mov
push
andl
mov
inc
mov
cmpl
jne
push
pushl
pushl
push
call
cmpl
jb
movl
mov
andl
mov
add
jmp
out
xchg
aaa
jne
gs
xor
sub
ljmp
jle
jge
jle
test
pop
mov
push
mov
leave
int
dec
icebp
call
mov
dec
sub
pop
das
push
lds
cli
mov
jnp
lret
out
xor
addr16
outsb
cmp
dec
leave
lods
mov
mov
lret
leave
adc
sbb
sub
mov
or
add
or
inc
cltd
and
mov
push
cmc
or
add
loope
fisttps
stos
adc
ret
lea
or
cwtl
es
sbb
xchg
fdivs
or
out
and
push
add
scas
or
push
inc
jmp
lea
and
xor
sbb
pop
popf
dec
shlb
mov
and
jecxz
es
shll
inc
in
mov
cmpsl
faddl
ds
ja
aas
xchg
jp
mov
and
lahf
xor
cwtl
cmpsb
push
in
pop
out
mov
mov
or
stos
loope
cmp
jecxz
pop
insb
mov
inc
repz
push
sub
ja
xchg
mov
xchg
mov
pop
add
insl
out
or
inc
jo
gs
ja
or
popw
out
in
xor
cmp
stc
mov
add
test
push
imul
daa
sarl
lcall
sbb
scas
subl
cmpb
pop
or
or
or
sub
mov
stos
mov
js
adc
adc
xchg
das
es
les
or
inc
push
jno
mov
dec
dec
outsl
imul
mov
lahf
push
stos
cmp
or
adc
lcall
xchg
or
pop
pop
mov
fiadds
sbb
scas
cmp
add
sbb
mov
cmp
out
mov
cli
pop
xchg
idiv
pop
cli
mov
in
sarb
pop
and
lcall
cmpsb
push
add
in
stc
fisttpl
lret
sbb
xor
cmp
pop
fidivl
movsl
iret
mov
ret
xor
xchg
xlat
sbb
inc
push
add
sub
add
popa
clc
je
sub
add
movaps
jg
jl
test
inc
jns
xchg
mov
loop
xchg
ret
push
icebp
sub
mov
pop
jge
int
addr16
mov
mov
jle
jb
push
mov
int
cwtl
and
aaa
sbb
push
mov
jmp
shrl
inc
jb
test
je
call
jmp
cmpsl
and
adc
jno
cmp
jg
ret
addl
pop
pop
push
fsubrl
cmp
mov
push
xchg
jmp
adc
stos
mov
push
mov
jae
push
mov
cmp
movl
jmp
dec
adc
sub
imul
cmp
hlt
mov
jle
jge
jle
and
mov
cmc
aad
fldt
nop
push
xchg
rolb
outsb
hlt
xor
adc
test
testb
aas
clc
xor
mov
and
jae
xor
cmc
push
test
adc
add
and
iret
sbb
pop
xchg
sub
test
and
jne,pn
insb
sbb
and
push
movsl
cmc
out
sbb
mov
push
adc
jo
jne
test
dec
popf
lds
movsb
pop
scas
sbb
mov
call
daa
imul
fnstcw
xchg
jmp
mov
fsubrs
mov
sbb
iret
outsb
sahf
push
sahf
mov
mov
cmp
lods
xor
shlb
adc
mov
xchg
xor
xor
xchg
push
test
lods
cmp
dec
cmc
jo
lret
insl
bnd
int
adc
xchg
mov
sti
sbb
sahf
xchg
cmp
mov
out
jns
mov
fcmovnu
cmp
pop
mov
loopne
es
mov
lods
adc
adc
subl
inc
mov
lahf
pushf
pop
push
inc
loopne
xor
add
shrl
sahf
inc
jge
jns
inc
in
adc
mov
dec
sub
lcall
imul
mov
jns
mov
dec
jo
movl
ss
dec
xchg
and
shlb
adc
pop
gs
into
jp
adc
sbb
adc
out
incl
or
icebp
pop
or
stos
mov
xchg
test
push
add
cmpsb
sti
mov
jbe
dec
add
lods
add
lret
jp
enter
add
aad
jge
outsb
push
dec
call
mov
and
cwtl
push
pop
repnz
dec
sti
ljmp
mov
jns
test
xor
inc
or
cmpsb
dec
stos
push
cmp
mov
jecxz
out
push
bound
pop
push
dec
add
andl
mov
movsl
int
cmpsb
fwait
cli
push
sub
dec
in
and
dec
jmp
in
addr16
inc
out
inc
mov
add
mov
rolb
inc
mov
push
ret
mov
cwtl
adc
out
decb
lret
out
mov
inc
clc
mov
pop
cld
cmp
xor
jns
lock
mov
das
sub
cmp
nopl
mov
pop
lahf
add
xor
ss
mov
mov
or
dec
in
xchg
add
out
dec
sub
insb
aam
popa
or
leave
in
cld
xor
dec
cmpsb
jb
iret
loope
notb
cli
dec
cld
ds
gs
mov
mov
or
sbb
push
dec
popa
sub
push
rolb
sahf
bnd
fdivr
xor
jb
fmulp
dec
cmp
nop
or
test
add
mov
movl
cmpl
je
cmpl
jne
push
pushl
call
cmpl
jne
xor
add
dec
mov
mov
dec
mov
jmp
jmp
fsqrt
std
imul
mov
jo
and
mov
jle
xchg
bound
mov
mov
cld
mov
out
cmp
lcall
jp
cmp
add
int3
and
dec
in
pushl
out
or
sub
daa
mov
pop
cltd
ds
movsl
jnp
divb
xchg
les
push
push
mov
test
sbb
stos
divb
movsb
fmull
bound
addr16
xchg
sub
repz
fldcw
dec
inc
adc
out
mov
arpl
and
push
and
repz
mov
ja
jae
outsb
xor
cmp
xor
cmpsl
sarl
das
or
sbb
aad
aas
push
sbb
cli
jge
jnp
popf
pop
xchg
push
mov
fdivp
inc
xchg
ljmp
repz
xchg
or
mov
loope
test
aas
out
mov
ds
gs
mov
pop
or
sbb
leave
stc
cld
jl
add
les
in
das
ffreep
pushf
push
and
mov
les
enter
mov
nop
jns
dec
daa
mov
in
and
mov
movb
jo
adc
xchg
insb
cmc
test
inc
loopne
mov
movl
mov
scas
or
std
or
push
mov
dec
imul
fildll
in
stos
mov
push
dec
scas
ret
loope
movsb
cltd
inc
inc
insb
lret
lock
mov
mov
aaa
pop
or
inc
jle
cmp
outsb
inc
std
push
loop
adc
jmp
jg
mov
add
mov
or
xlat
dec
inc
add
pop
and
xchg
loope
pushf
mov
sub
es
insb
jmp
imul
fwait
ret
bound
test
stc
imul
xchg
add
mov
fwait
inc
and
cltd
adc
xchg
pop
lcall
dec
xchg
jae
lahf
jns
mov
in
sbb
out
mov
addb
mov
jbe
jp
fldcw
test
mov
mov
fmull
or
dec
iret
add
rcr
adc
or
imul
push
cs
lds
ljmp
cmc
popf
sbb
push
jmp
test
xchg
mov
xor
xchg
and
jne,pn
das
jmp
ret
shll
xorb
insl
mov
lods
cmpsl
pop
rclb
add
mov
xchg
or
adc
sub
mov
inc
sbb
fucom
in
ljmp
cmp
ja
rcl
add
sub
adc
ror
jno
push
cld
or
mov
push
arpl
adc
dec
inc
inc
add
xchg
mov
push
ret
sub
in
inc
jb
sub
xor
mov
add
jmp
repnz
rep
cmpsl
xchg
or
cli
mov
mov
jle
push
jge
jle
xchg
adc
adcl
mov
daa
mov
lcall
or
pop
push
call
mov
cmc
mov
jno
inc
push
ss
mov
popa
sbb
add
sub
and
test
cmp
iret
add
insb
imul
lcall
popa
bound
lds
pushf
pop
adc
jl
add
cmp
jns
push
shl
jbe
add
sbb
sbb
out
mov
jmp
cmp
dec
jnp
push
jae
xchg
in
inc
adc
add
loopne
mov
jp
pop
or
push
add
sbb
pop
leave
movsb
test
pop
mov
imul
lods
mov
test
loop
pop
cmpsb
fiaddl
scas
sub
push
cltd
xor
or
and
paddusw
add
jge
and
sub
and
mov
ficomps
jg
es
cli
add
fdivrp
sbb
mov
in
fsubrs
mov
xchg
adc
mov
sub
stc
jl
jecxz
jb
or
push
addb
imul
aam
jmp
aas
cmpsb
ja
adc
dec
cmpb
jl
xor
fs
add
add
jmp
rclb
aad
jno
aas
aaa
mov
dec
mov
ret
out
dec
xchg
stos
repnz
jl
mov
je,pt
or
fisttpl
dec
jno
loopne
inc
pop
clc
push
cld
lret
adc
inc
xor
fidivs
pop
cli
sbb
or
in
jg
pop
or
push
and
fsub
bound
into
and
mov
jmp
xor
mov
iret
js
roll
js
mov
xchg
xor
sti
insl
inc
xchg
push
and
addl
popa
lcall
sbbb
cmc
fdivrs
mov
and
lods
push
inc
in
pop
xchg
rorl
mov
movsl
xorb
loopne
xor
lret
and
sub
enter
mov
jo
fsubr
or
into
cmc
into
or
adc
sub
imul
mov
dec
fdivrl
add
fisttpl
gs
movsl
inc
fwait
in
and
inc
cmp
push
sbb
inc
popa
adc
ret
fisubrs
push
subb
daa
push
sbb
mov
shr
ja
mov
aaa
and
icebp
sahf
repnz
icebp
jo
ja
cmp
outsb
in
xchg
inc
mov
cltd
mov
outsl
push
sti
sbb
sti
outsl
sub
imul
ret
stos
or
and
push
mov
mov
cmp
aad
cmp
dec
or
mov
fwait
or
jne
push
rcr
notb
imul
xor
and
mov
mov
mov
xor
push
mov
mov
add
cmp
pop
jmp
int
mov
jno
imul
push
mov
inc
jle
push
jge
jle
mov
ret
or
xor
sbb
fwait
test
shll
xlat
mov
and
fucom
and
into
lds
xchg
lret
shlb
xchg
xchg
dec
mov
subb
and
mov
fidivs
mov
add
clc
lret
mov
cli
outsb
gs
out
aad
add
mov
out
xor
sub
stos
mov
out
int
pop
or
adc
add
mov
sub
sub
xchg
dec
cmp
add
sbb
popf
pop
inc
and
lret
push
cmp
in
mov
les
inc
insl
daa
imul
pop
insb
mov
pop
add
sbb
inc
in
clc
sbb
xor
cwtl
push
fstpl
mov
xchg
adc
adc
xor
cmp
pusha
lock
gs
test
inc
outsl
jg
hlt
mov
mov
jbe
dec
push
loop
cmpsb
bound
jmp
pusha
mov
push
mov
add
cltd
xorl
or
in
imul
xor
cld
dec
stc
add
pop
dec
std
mov
sti
fs
push
xor
pusha
hlt
sub
jecxz
jp
test
cmpsl
aad
add
dec
daa
test
addr16
dec
pop
call
sub
sbb
divl
stos
jg
push
adc
jecxz
or
loop
jmp
loope
aad
fcompl
jo
dec
popa
rcrb
roll
sub
aam
and
test
lahf
adc
je
sbbl
dec
movsl
in
into
and
out
aad
mov
aaa
jae
bound
pushf
loope
inc
inc
pushf
insl
or
shlb
mov
sti
adc
xchg
ds
mov
ret
xor
popa
push
fbld
jmp
lds
sbb
add
xchg
mov
fcoml
push
or
sub
and
mov
cmp
outsl
xchg
jb
or
les
stc
inc
add
push
bound
imul
cmc
shlb
cmp
and
stos
inc
sbb
jge
dec
cmp
jle
jae
repnz
les
adc
ret
xchg
js
fsubl
push
popa
faddl
adc
or
movsl
jle
gs
mov
cmp
les
decl
cmp
mov
jmp
addl
mov
pop
jl
movsb
jnp
bound
testl
stos
fildll
in
call
mov
pop
cmp
shlb
add
push
sbb
lds
dec
je
fdivl
mov
cs
fadd
lock
dec
neg
or
sbb
lret
lret
mov
mov
je
mov
jmp
mov
xor
add
jmp
mov
xor
add
leave
ret
push
mov
mov
xor
xor
mov
sub
add
mov
orl
jmp
iret
ret
rcll
push
popa
mov
inc
jne
je
jle
or
jle
push
jp
jae
pop
jb
adc
add
dec
imul
repnz
push
fimuls
xor
add
data16
mov
pop
xchg
sbb
arpl
test
data16
xlat
sub
fs
jno
pop
mov
out
loope
xchg
hlt
mov
adc
xchg
mov
aaa
cmp
xchg
dec
or
lret
std
inc
pop
adc
ds
cmpsl
data16
inc
popa
lods
pop
mov
mov
mov
ljmp
imulb
mov
loope
fidivrl
faddl
or
ss
adc
pop
jbe
add
push
cmp
fcmovbe
or
icebp
push
adc
icebp
arpl
sbb
xor
leave
stc
pop
ret
or
ror
insl
sbb
jbe
push
inc
icebp
cwtl
push
lods
inc
incb
das
xor
loop
xchg
arpl
sti
rorb
lds
lods
xchg
lock
nop
mov
insb
push
pop
std
int
gs
popl
scas
sub
addl
mov
movl
push
jmp
rolb
out
fs
test
pop
add
or
jle
test
dec
ror
mov
mov
dec
hlt
pop
movsl
test
jns
or
sub
sti
sbb
jno
or
cltd
mov
mov
outsb
mov
jp
ja
mov
fisttpll
imul
imul
cli
fsubl
mov
mov
or
mov
xor
popf
pop
xchg
sbb
xchg
adc
out
xor
cld
mov
out
cmp
lock
xchg
icebp
fnsave
aad
mov
ljmp
dec
push
and
cs
push
push
cwtl
jl
clc
fsubrl
int
jbe
int3
in
jge
insl
push
xor
add
pop
or
add
lds
xorl
xor
lock
movsb
xchg
int
cmpsb
or
andb
sub
dec
mov
enter
dec
shl
pusha
mov
sbbl
xor
movl
jmp
mov
push
mov
mov
lahf
out
adc
jle
jg
jle
xchg
inc
test
jmp
mov
inc
jle
add
or
xor
xchg
ret
jb
add
mov
in
insl
es
mov
xchg
jno
mov
repz
loope
push
push
xchg
jne
xor
scas
lea
cmp
push
in
xchg
push
jmp
imul
mov
push
into
ds
jmp
mov
inc
test
lahf
mov
andl
stos
xchg
testb
add
pop
sbb
jp
or
lret
adc
loop
insl
push
or
rcl
nop
fiadds
mov
and
fwait
sub
bound
out
rclb
and
aas
addb
jl
add
add
cmpsl
bound
in
cmp
gs
out
or
push
push
lds
sti
dec
push
in
fndisi(8087
addl
jmp
dec
in
and
cmp
pushf
add
imul
and
dec
std
push
sbb
loope
cmp
je
andl
mov
inc
mov
cmpl
jne
push
pushl
pushl
call
cmpl
jb
movzbl
add
mov
andl
mov
sub
xor
cmp
jne
mov
add
jmp
mov
xor
add
mov
mov
jmp
ficoml
addr16
loop
inc
push
insl
mov
cs
jle
or
jle
cmpsb
call
bound
and
xchg
out
imul
out
pop
lcall
insl
pop
jmp
jbe
int3
mov
pop
cmp
aas
add
sbb
pop
call
mov
push
inc
shlb
stc
push
inc
js
call
jl
inc
xchg
popf
xchg
push
std
and
dec
push
fldt
iret
fisttpl
lea
call
je
xchg
out
jae
test
sarl
pop
mov
fistl
adc
test
fidivs
pop
scas
or
jmp
or
pop
out
jle
jno
cmpl
sahf
cmpsb
mov
inc
loop
outsl
add
stc
ljmp
jl
cld
fbstp
xchg
cmp
int3
test
mov
loopne
inc
pop
or
addr16
pop
pop
xor
movsb
mov
jle
mov
xchg
pushf
mov
sub
aas
mov
pop
inc
movsb
cmp
sub
cmp
aaa
aas
xor
outsb
cmpsl
dec
mov
call
jae
push
push
xor
add
mov
jmp
mov
mov
mov
mov
mov
add
pop
pop
ret
push
mov
sub
movl
movl
and
mov
push
mov
add
xor
movl
mov
add
mov
mov
jmp
xchg
push
lret
adc
push
xchg
stos
dec
xlat
push
xchg
inc
pop
cmp
jle
xchg
jg
jle
lret
fucomi
bound
push
rcl
iret
stos
pushf
faddl
out
bound
mov
testb
push
and
or
inc
adc
dec
xchg
mov
xor
sbb
push
jae
aaa
xchg
out
lock
icebp
stc
bound
cmpsl
aad
loop
pop
inc
inc
cwtl
iret
addl
push
in
xor
or
mov
cld
jno
insb
xchg
sbbb
push
mov
and
mov
or
aad
cli
insb
and
dec
mov
imul
stos
pop
sbb
cmp
pusha
mov
popf
bound
icebp
mulb
insb
es
insl
push
cli
arpl
fadd
or
sarl
sub
xchg
adc
icebp
pop
mov
add
test
add
jns
pop
nop
and
testl
mov
xchg
pop
pop
pop
mov
nop
xchg
xor
shrb
or
mov
fdiv
aam
mov
xor
test
mov
jne
cld
pop
sub
push
inc
mov
and
dec
mov
cld
sbb
or
les
aas
pop
jmp
mov
jge
dec
add
jae
nop
lods
movsb
xchg
je
cmc
mov
into
lcall
cmp
pop
imulb
dec
ror
sti
push
push
mov
es
dec
jo
lret
mov
fnsave
jge
pusha
push
push
andl
test
movl
je
mov
sbb
mov
mov
mov
adc
jmp
xchg
roll
icebp
mov
test
adcb
xchg
jg
jle
xchg
cwtl
jle
je
inc
scas
jge
push
int3
fidivs
xchg
ret
xor
loopne
mov
fcomp
mov
mov
pop
mov
call
test
into
jbe
and
enter
add
inc
sub
jl
mov
dec
sub
sbb
pushf
mov
rolb
mov
in
mov
xor
jb
pop
ret
xor
sarl
out
icebp
scas
gs
shll
or
mov
stos
insl
nop
pop
test
adcl
iret
out
dec
jl
fmull
cmpsb
jo
ret
xchg
adcl
adcl
test
mov
push
lods
out
bound
mov
pop
mov
popl
push
sbb
int
inc
iret
jecxz
or
inc
out
out
push
gs
mov
addr16
out
test
mov
and
sub
inc
push
stos
pop
inc
lret
out
movsb
xor
dec
add
icebp
xor
jo
mov
pop
movsb
into
jbe
mov
inc
pop
jp
sti
out
sbb
xchg
pop
pop
loope
in
rorb
in
jnp
mov
adc
sbb
negb
insb
insl
je
aam
jbe
and
bound
push
in
shll
dec
lcall
inc
adc
push
mov
or
xchg
xor
dec
or
cmp
cld
ret
arpl
sbb
sbb
imul
mov
and
add
sbb
mov
addl
mov
xchg
sbb
jmp
pop
lods
es
repz
pop
mov
mov
loop
in
dec
jle
xchg
jg
jle
dec
inc
inc
cmp
dec
adc
stc
sahf
jle
je
jecxz
xor
sbb
jp
push
jge
jnp
pop
dec
cmpsb
cmp
push
dec
rclb
in
add
inc
not
adc
sahf
outsl
push
dec
aaa
or
xchg
push
iret
mov
or
cmp
inc
mov
incl
jb
dec
rcl
push
sub
cmc
ret
stos
jbe
arpl
popf
adcl
sub
inc
push
call
pop
xor
jne
cmpsb
xor
setge
ret
add
ja
xor
rcll
inc
loopne
shlb
vhaddps
pop
fisttpll
jbe
add
jb
rorl
cmc
loopne
add
pop
stos
inc
mov
lock
sbb
jb
enter
mov
or
lahf
out
mov
dec
jl
xor
orb
mov
adc
lcall
ljmp
icebp
imul
jmp
pop
xchg
in
inc
or
in
arpl
dec
or
dec
jmp
push
mov
mov
jle
mov
lock
adc
loope
sti
fwait
dec
mov
inc
jb
mov
cmp
sbb
dec
dec
jno
xchg
in
pusha
loope
push
cmp
xchg
fimuls
lahf
adc
sbb
aaa
jno
mov
pushl
fisttpl
daa
lret
push
shll
dec
aad
pop
sub
repz
shlb
xlat
sbb
jmp
ja
and
dec
pop
hlt
pusha
icebp
cmp
mov
jle
jg
jle
pop
cmpsl
cmpb
mov
xor
stos
pushw
adcl
ficoms
test
xchg
sub
fdivrl
mov
adc
jle
bound
xchg
jg
daa
add
mov
push
xorb
popf
cmp
jp
ss
cmp
push
add
jo
sbb
lret
daa
jnp
lock
sbb
popa
push
jb
cmc
jae
fistpll
and
cmpsb
fsubrl
imul
lahf
out
rol
out
and
icebp
imul
rolb
cmp
jnp
lea
std
cmpsb
sub
xlat
add
mov
cmp
xchg
xor
testl
mov
push
jne
jge
pop
lret
push
mov
jecxz
mov
lahf
dec
jge
sbb
ror
loopne
ljmp
lods
jl
sbb
nop
xchg
test
das
lea
lahf
sub
pop
xchg
mov
repz
loope
test
orl
pop
fadds
roll
inc
mov
mov
xor
mov
sub
jns
push
cmp
lock
out
nop
and
scas
scas
in
mov
hlt
inc
lcall
jl
testb
pop
lahf
inc
mov
jecxz
lods
cs
int
or
xor
pushf
xchg
xchg
scas
jmp
xchg
je
insl
mov
aam
sub
mov
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
push
pushl
push
push
push
call
cmpl
jne
mov
inc
mov
jmp
mov
movl
cmpl
je
cmpl
jne
pushl
pushl
pushl
pushl
push
push
push
call
cmpl
jne
xor
xor
dec
mov
mov
dec
mov
jmp
movzwl
or
mov
mov
mov
and
mov
mov
andl
xor
sub
xor
add
mov
mov
movl
je
mov
xor
xorl
add
movl
cmp
movl
jne
pushl
call
mov
xor
mov
xor
mov
mov
subl
xor
andl
add
movl
cmp
je
pushl
xorl
pushl
call
mov
andl
xor
add
inc
mov
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
andl
mov
inc
mov
cmpl
jne
push
push
push
call
cmpl
jne
xor
xor
inc
mov
cmpl
jb
movl
mov
mov
adc
mov
subl
xor
addl
add
movl
cmp
je
xor
jmp
xchg
imul
dec
jle
xchg
jg
jle
movhps
in
cmp
stos
mov
mov
sub
clc
out
shlb
inc
and
push
mov
push
push
sar
sbb
enter
in
mov
xchg
adc
stos
movsl
outsl
cmp
pop
mov
jne
testb
push
xchg
jle,pt
fildl
pop
bswap
jl
movsb
inc
leave
ja
jl
movsb
or
in
scas
daa
andb
in
mov
mov
mov
imul
mov
mov
movsb
sbb
sbb
sbb
jbe
or
es
shrl
inc
mov
mull
mov
bound
ds
sbb
push
sbb
and
cmpsl
xchg
sahf
shr
outsl
mov
test
jmp
xchg
gs
das
add
inc
filds
lods
ficoml
or
cmp
sub
stos
outsb
pop
imul
stos
and
stos
push
shrb
addr16
loopne
lret
dec
mov
xlat
mov
xor
mov
fstpl
js
stos
jb
popf
lods
xchg
dec
movsb
call
push
outsl
cmp
gs
shr
orb
mov
pop
dec
push
xor
dec
xchg
das
aas
mov
ret
clc
pushf
and
icebp
enter
mov
jl
fbstp
mov
dec
psadbw
jno
cld
xor
xor
xchg
sbb
sbb
mov
and
mov
mov
movl
cmpl
je
cmpl
jne
push
call
mov
dec
mov
jmp
mov
sub
mov
adcl
add
mov
mov
andl
mov
inc
mov
cmpl
jne
push
push
push
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
sbb
mov
xorl
add
jmp
addr16
mov
ja
adc
add
jle
jg
jle
or
xchg
mov
push
or
test
jmp
orb
mov
insl
pop
sub
jbe
mov
mov
outsb
inc
jl
cmovno
out
mov
and
les
mov
ja
les
in
iret
jae
out
sarl
inc
imul
jp
or
cmp
in
sbb
jns
cmp
fsubl
ret
xchg
pop
repz
nop
and
ljmp
lock
cmp
push
jne
cmpsl
mov
lock
cmp
mov
or
push
push
xor
clc
cmp
mov
arpl
in
enter
mov
sub
fstpl
pop
icebp
clc
testl
pop
ja
aaa
and
loopne
in
xorb
mov
out
xor
cmp
aas
jno
add
cs
cmp
mulb
scas
add
jno
movb
inc
adc
xlat
jge
cmp
cmp
pop
fildll
jmp
fildll
loop
addr16
out
insb
sub
cltd
dec
push
sahf
adc
jp
xor
imul
cs
sarl
popa
mov
mov
push
rcr
xchg
lods
lret
cs
sub
lods
or
adc
cmp
ret
xchg
jne
das
push
pop
adc
mov
mov
aam
and
add
add
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
push
call
jmp
mov
mov
jmp
mov
iret
mov
test
fstp
jecxz
add
dec
push
jle
xchg
jg
jle
dec
mov
hlt
push
mov
lret
subb
cmp
mov
fisttpll
push
fistl
fldcw
imul
or
fs
popf
fdivrl
jge
loope
push
mov
xor
mov
das
xor
rcll
sub
lds
in
cmp
dec
pop
popa
adc
push
jb
lea
xor
dec
push
jno
xchg
inc
arpl
icebp
pop
cmpsl
mov
lahf
fnsave
ljmp
test
mov
arpl
lret
or
arpl
push
bound
inc
dec
mov
outsl
jl
dec
aaa
pop
es
inc
es
jl
iret
cltd
loopne
aam
int
pop
fisubs
dec
xor
outsl
mov
add
push
popf
push
in
arpl
dec
les
cmc
lcall
cmp
mov
cmp
inc
loope
rclb
mov
ja
inc
mov
js
lds
insb
mov
cmc
gs
les
xchg
jg
sahf
out
movsl
out
inc
and
sti
rcrb
cmp
sbb
mov
mov
data16
inc
dec
into
adc
bnd
add
cltd
nop
add
pop
lds
xchg
xchg
sub
cld
adc
jo
sub
lods
xlat
add
stos
pop
test
mov
mov
pop
inc
movsl
cli
inc
mov
sub
mov
ds
push
jnp
dec
test
scas
loopne
cmpsb
stc
mov
mov
insb
cmp
les
sbb
sbb
testb
jmp
xlat
frstor
jg
cld
lea
lret
in
jle
xchg
jg
jle
pushf
ret
or
call
push
and
repz
inc
cmp
adc
rcll
ficomps
cs
repz
sub
inc
mov
push
sub
mov
dec
push
push
adc
xor
or
out
lret
push
hlt
gs
std
mov
dec
ljmp
adc
pop
xchg
adc
aas
movsb
pop
xor
cmp
test
pusha
sbb
or
inc
push
pop
les
sub
dec
jb
in
pop
push
les
fistps
lds
jge
fadds
daa
cltd
jo
out
xadd
ljmp
pop
stos
jno
outsb
and
imul
std
popa
insb
lds
and
push
pop
fsts
or
mov
mov
push
les
jb
imul
fwait
dec
iret
xchg
push
loopne
mov
ljmp
fstpt
cld
jns
int3
xchg
mov
fs
add
mov
dec
leave
rcrb
insb
or
jae
xchg
je
pop
imull
mov
rol
inc
pop
push
mov
jne
xor
xor
fistpl
cmpsl
lock
ret
sti
sub
imul
imul
mov
insb
lret
loopne
xlat
rclb
add
fidivrl
inc
lcall
jecxz
pop
cmp
xor
xchg
idivl
mov
add
lea
mov
push
pushl
pushl
call
mov
mov
jmp
bound
movsl
es
popa
push
call
js
sub
jle
jg
jle
pop
imul
mov
jp
fwait
xlat
inc
cmp
jmp
fmull
out
pop
pop
dec
mov
fs
add
push
fimull
jo
cmp
aad
push
leave
gs
sti
add
outsl
cmpsb
and
and
lock
or
test
lea
test
xchg
in
in
xor
iret
dec
inc
pop
ret
jge
or
jecxz
add
cmp
sarb
aam
mov
jne
pop
pop
test
push
xlat
lea
pop
lock
or
cwtl
sub
xor
push
out
icebp
sub
sub
out
popa
mov
and
xchg
sti
pop
jmp
inc
push
pop
xchg
lret
int
or
jne
lcall
fisubrl
icebp
mov
movsl
lock
lahf
loope
or
iret
lret
adc
call
das
int
sbb
adc
mov
or
pop
jmp
out
bound
mov
js
ljmp
decb
xchg
sub
es
fadds
int3
inc
out
les
cmp
je
test
xor
xchg
daa
fcoml
es
and
push
xorb
lea
les
xchg
mov
test
in
and
insl
in
stos
repz
push
pop
repz
clc
xchg
aas
dec
push
dec
dec
mov
dec
jbe
imul
add
cmp
jne
mov
inc
cmp
jb
jmp
jmp
ret
ficomps
popa
cltd
ret
fs
outsb
push
pop
fwait
xchg
pop
xchg
push
jle
xchg
jg
jle
pop
mov
cmpl
cltd
stos
hlt
and
mov
push
mov
outsb
sub
std
inc
out
sbb
and
jo
mov
int3
dec
test
hlt
mov
or
test
add
test
mov
fmuls
lods
les
popf
out
adc
jbe
xor
mov
pop
das
mov
test
loopne
mov
clc
xchg
jnp
cmp
out
imul
pop
inc
sbb
clc
cmp
sbb
pop
lret
stos
dec
loop
and
push
mov
xchg
lret
push
pop
jno
in
lods
inc
push
push
mov
mov
shl
nop
and
and
scas
mov
dec
sub
arpl
test
movsb
out
inc
test
repnz
pusha
xlat
dec
add
mull
push
inc
fldenv
sbbb
pushf
int3
out
or
pop
xor
mov
add
add
clc
mov
mov
sub
repz
cmp
mov
mov
and
pop
ja
push
jb
pop
or
and
test
scas
lret
sub
dec
xor
subb
divb
repnz
int
dec
loope
xchg
inc
arpl
arpl
xchg
fcoms
jb
std
add
push
xor
lahf
les
dec
nop
in
scas
into
fisubrl
test
mov
mov
imul
rcll
push
jmp
mov
push
inc
cmp
mov
xor
add
jmp
mov
movzwl
mov
mov
mov
mov
mov
xor
add
cmp
jne
mov
jmp
out
or
xor
in
rcrb
mov
test
adcb
jle
cli
bound
sbb
inc
es
xor
dec
test
in
mov
xchg
fwait
dec
pop
jmp
sahf
popf
pop
scas
lret
xor
sbb
aad
shll
out
xor
xor
push
ror
mov
xchg
jo
and
dec
flds
adc
imul
addl
xor
pop
push
ficoms
out
fcomi
or
jno
das
ret
scas
andb
push
lcall
or
testl
xor
pop
cli
xchg
pop
xchg
incb
enter
push
fidivrs
sbb
sbb
cmp
xor
insl
push
cs
add
ss
shlb
call
xlat
xor
jl
push
hlt
ret
andl
fiaddl
mov
dec
addr16
push
repnz
mov
cmp
bound
leave
repz
cmp
add
orb
bound
out
mov
sbb
jo
lret
mov
int3
stc
in
adc
mov
sbb
out
mov
rolb
out
sub
mov
out
and
mov
jmp
and
pusha
push
ret
and
out
mov
hlt
stos
adc
and
into
sub
dec
es
cld
stc
sbb
mov
adc
loop
ret
neg
xor
jmp
mov
add
mov
jmp
inc
jae
pop
sub
jae
repz
jp
dec
cld
inc
pop
jle
xchg
jg
jle
push
sub
stos
inc
mov
add
add
cmp
xor
in
jo
dec
xchg
js
mov
fwait
daa
out
push
dec
xchg
daa
or
mov
mov
lret
imul
in
xor
and
lcall
inc
int
enter
mov
or
mov
mov
mov
jmp
mov
enter
cmp
les
cmp
das
loope
push
mov
jbe
stos
mov
push
ss
or
arpl
movsl
mov
xor
data16
out
mov
insl
mov
cli
jg
xchg
jle
dec
in
or
xchg
add
adc
sub
lret
or
and
icebp
adc
into
adc
pusha
imul
test
decl
jno
outsl
xchg
out
fists
cltd
or
and
icebp
scas
stos
repnz
mov
sub
pop
std
repz
push
jmp
inc
sub
je
andb
ljmp
test
jbe
loop
in
out
imul
repnz
enter
adc
mov
lea
jns
sub
push
jns
push
neg
pop
xor
insb
imul
jmp
mov
das
out
xor
add
mov
jne
popa
mov
ss
cmc
xchg
jbe
sbb
add
lds
arpl
mov
test
je
jmp
sbb
mov
xlat
fsubrl
in
ret
pop
jle
xchg
jg
jle
repnz
in
mov
nop
add
or
push
mov
cltd
or
sbb
pusha
data16
arpl
pop
mov
mov
scas
test
into
cmp
movsb
lods
or
mov
cli
and
xchg
and
sar
int
inc
and
addr16
sahf
adc
push
in
dec
outsb
pop
mov
inc
leave
inc
or
cmp
jno
roll
push
jg
and
sbb
cmpsb
adc
mov
loope
dec
iret
js
leave
xchg
or
rolb
inc
pusha
push
dec
inc
les
stos
rcr
and
arpl
push
xchg
add
xchg
ret
and
aad
lea
dec
mov
sahf
sub
movsb
pop
sbb
cmc
rcl
mov
add
cli
dec
inc
mov
lret
add
lcall
mov
pop
xchg
pop
and
mulb
insb
addl
sbb
xchg
enter
or
rolb
out
adc
imul
pusha
fwait
adc
jle
inc
jg
inc
xchg
mov
pop
sub
daa
stc
or
mov
or
inc
test
sub
xor
fucomi
mov
inc
gs
shlb
pop
popf
in
sbb
loopne
int3
cmp
lock
and
mov
xchg
hlt
call
mov
fiaddl
roll
push
pop
push
dec
pop
xchg
sub
xchg
dec
jmp
cmp
pop
ret
cmp
sub
iret
push
dec
fwait
scas
stos
je
jle
xchg
jg
jle
jmp
sub
aam
jb
addl
cmpsb
loop
pushf
fcompl
push
push
xchg
in
sarl
out
pop
adc
push
sbb
mov
xchg
sbbb
xchg
jp
mov
aaa
repnz
xchg
mov
and
xchg
or
or
xlat
push
cmp
fscale
int
in
adc
mov
in
xchg
push
dec
in
cmp
js
iret
int
add
std
shrl
jecxz
mov
sbb
cltd
pop
mov
mov
js
inc
sbb
sbb
cmp
jge
and
mov
xchg
jnp
or
rolb
xor
sti
pop
insl
adc
sbb
loop
adc
sub
push
shlb
outsl
xor
fbld
cli
cmp
fcmovne
je
adc
cmpsb
add
adc
sahf
pop
ja
scas
xor
jb
sbb
push
fs
cmc
es
aas
inc
lcall
adc
push
sahf
sub
and
xchg
popf
pop
dec
into
jno
inc
jp
cmp
pop
aad
test
insb
mov
leave
lock
enter
jmp
push
pop
adc
int3
fistpl
add
imul
andl
push
adc
cmpsl
sub
and
outsl
adc
mov
ret
mov
lret
mov
fistps
xor
mov
pop
inc
out
pop
int3
into
cwtl
and
outsb
insl
lods
jmp
int3
test
xchg
jo
mov
push
jp
inc
jmp
scas
shrl
mov
mov
mov
xor
mov
add
mov
mov
xor
add
mov
imul
mov
xor
mov
lea
cmp
je
mov
jmp
xlat
cs
jae
push
aaa
adc
inc
notl
pop
jle
xchg
jg
jle
div
sub
jmp
inc
popf
fs
scas
jne
repnz
dec
push
mov
and
mov
call
stc
gs
ljmp
fucomip
icebp
ja
inc
dec
jnp
sahf
negl
adc
pop
popa
adc
mov
adc
lods
cmpb
xor
je
data16
push
sub
pop
mov
dec
lcall
ret
movsb
push
or
add
jnp
sub
adc
xor
jnp
lcall
dec
mov
inc
insl
scas
sti
std
lods
or
lea
daa
jmp
cltd
adc
insb
sbb
and
xchg
fldcw
adc
sbb
mov
aaa
sbbb
xchg
sub
js
pop
shrl
pop
pop
int
mov
sub
adc
sbb
cmp
ret
push
mov
jnp
push
outsb
sub
mov
or
fadds
repnz
cltd
das
xlat
aam
stos
dec
xchg
inc
das
pusha
scas
push
arpl
hlt
dec
frstpm(287
movsl
push
adc
xchg
dec
in
ret
lods
ja
mov
lea
add
pop
in
push
pop
pushl
fs
lds
mov
fs
loop
dec
xor
gs
loope
cmp
nop
and
mov
pop
xor
push
lods
push
cs
hlt
inc
xor
and
lahf
sbb
cmc
iret
stos
push
xchg
arpl
xor
gs
mov
mov
mov
mov
mov
mov
xor
xor
mov
add
div
jmp
pushf
das
or
mov
mov
push
cmp
push
and
jle
xchg
jg
jle
push
lock
mov
xchg
in
stos
nop
and
das
mov
mov
nop
inc
dec
js
and
stos
or
ja
loop
stos
mov
add
out
sbb
rolb
dec
push
lods
hlt
movb
addr16
daa
push
adc
push
adc
or
xor
shrb
or
jl
movsl
loope
in
hlt
inc
les
jo
jno
int
out
fs
sbb
rcrl
sub
pusha
pop
add
mov
inc
rcr
pop
inc
dec
jne
and
pop
pop
shlb
inc
ds
xchg
ja
out
jle
lcall
daa
and
iret
movb
into
add
daa
mov
mov
sti
iret
sahf
xlat
inc
adc
xchg
leave
es
test
jno
mov
iret
dec
cltd
jmp
pop
dec
arpl
shrb
cmpsb
jmp
int3
bound
cs
push
out
inc
dec
test
ret
push
ss
mov
sahf
pop
inc
cwtl
das
lcall
inc
ret
test
stc
dec
xchg
mov
mov
dec
cmpsl
out
ret
push
pop
jp
xchg
shlb
in
je
jo
test
sbb
cwtl
stos
test
push
in
in
andl
add
jge
mov
pusha
mov
es
dec
pop
imul
or
pop
in
mov
cli
cmp
clc
cli
cmpxchg
jg
fbstp
out
leave
popf
outsl
dec
hlt
enter
mov
in
push
cld
xor
lea
jmp
in
outsl
pop
outsl
jne
fs
adc
jle
lods
mov
das
shrb
mov
pop
negl
enter
int
jl
push
hlt
inc
and
cmc
test
mov
test
sub
or
pop
mov
stc
jo
repz
pop
sbb
push
in
pop
mov
cmpsl
push
jns
movlhps
xchg
xchg
std
or
push
and
test
js
add
push
pop
adc
lea
int3
add
fld
lret
mov
lret
jns
adc
push
loope
test
vcvttss2si
mov
cmp
xor
lahf
imul
in
add
lods
inc
mov
pusha
je
dec
adc
shll
sbbb
cmp
stos
mov
jo
je
ret
fstpl
pop
popa
xchg
ds
stc
push
dec
pop
adc
sahf
or
jle
aaa
pop
lret
outsl
ror
dec
sub
mov
mov
ss
dec
inc
js
push
scas
and
addr16
or
pop
daa
and
insb
xchg
cmp
or
mov
dec
cmpl
lock
nop
adc
mov
pop
xchg
jge
das
jle
cltd
dec
int3
mov
jb
or
push
orb
mov
mov
nop
repnz
mov
mov
mov
fdivrl
mov
loope
out
lods
lret
jbe
jno
jnp
sub
cmpb
lock
and
mov
stc
xlat
mov
push
or
xchg
mov
mov
xor
lea
mov
mov
mov
xor
add
imul
mov
xor
mov
lea
cmp
jne
mov
jmp
mov
mov
xor
add
mov
xor
lea
add
call
xor
inc
cmp
je
xchg
push
pop
push
pop
inc
xchg
sub
xchg
dec
mov
imul
add
jmp
ja
mov
mov
pop
stc
cs
aam
jle
xchg
jg
jle
mov
xchg
xor
ljmp
jp
rcrb
mov
adcb
push
cs
and
push
adc
pop
cmpsl
sti
inc
rcrl
in
nop
adc
stos
adc
mov
jne
repz
iret
sub
push
andb
adc
add
sub
cmp
dec
mov
mov
cmp
mov
push
data16
cmpsb
jnp
in
add
outsl
push
sbb
dec
outsb
sub
hlt
inc
inc
loop
xor
mov
or
loopne
leave
xor
xchg
shll
mov
loop
xchg
test
pop
or
pop
sbb
aam
and
jp
jns
xchg
dec
movl
xlat
xor
add
fdiv
arpl
out
sbb
lret
jo
cld
pop
xor
xchg
imul
adc
mov
xlat
mov
jp
xor
movsl
add
imul
mov
and
adc
fisubrs
sar
loop
xor
stc
add
and
aad
and
xor
imul
or
xchg
call
dec
add
popa
mov
in
repz
and
pusha
aaa
and
xor
or
lahf
inc
jae
lods
insb
sti
ja
push
mov
ljmp
aas
fs
add
add
fisttpl
call
dec
ret
push
insb
bound
xchg
jg
jle
add
inc
je
testb
mov
add
imul
inc
dec
inc
adc
cmp
mov
cli
jns
out
or
mov
inc
sub
orb
loopne
ds
and
xor
lcall
rcrl
cltd
jl,pn
out
test
aaa
xor
cmc
adc
int3
orl
aad
aaa
sub
std
cs
and
lcall
ret
push
ret
rcl
jns
in
or
sub
orb
repz
lea
mov
jno
mov
pop
movsl
scas
add
test
popa
ljmp
pop
push
in
lret
dec
xchg
sub
in
ret
int3
pop
aas
std
insb
sub
and
fists
sub
mov
in
rcl
les
push
jnp
icebp
jl
or
ret
inc
mov
ret
leave
aam
jecxz
pop
out
xchg
jno
xchg
or
xchg
mov
repnz
cli
fisttpl
add
fstpl
fldcw
imul
xor
aas
out
lds
fwait
push
pop
leave
adc
jp
cmp
pusha
fildl
enter
ljmp
and
orb
mov
pop
repz
bound
mov
push
out
mov
je
push
mov
jle
jmp
fwait
cmp
fisubrl
sbb
call
and
std
lea
iret
mov
mov
dec
jmp
mov
jae
roll
adc
test
jle
jg
jle
mov
fcomps
sbb
inc
ja
sarl
ljmp
aas
pop
push
loope
jle
popf
xchg
jbe
scas
push
push
fcomps
dec
mov
aaa
dec
fwait
mov
dec
xor
sbb
mov
inc
mov
pop
insl
scas
and
divl
clc
push
adc
add
push
cltd
int3
das
aam
mov
push
or
outsl
or
or
ret
cmp
cli
movsl
dec
aam
popa
es
inc
xchg
outsb
testl
mov
setg
lea
das
jg
mov
fsubrp
pop
and
dec
mov
sub
inc
loope
push
dec
sub
sarb
inc
push
cmp
mov
adc
pusha
adc
fstpt
arpl
into
pusha
aas
lret
sub
push
mov
and
dec
push
out
add
pop
or
and
lret
adc
adc
mov
push
leave
mov
inc
xchg
fistl
xor
jg
and
xadd
leave
cmp
fnsave
repz
mov
loop
mov
jmp
lock
mov
adc
mov
inc
stos
push
jge
mov
dec
cld
je
test
cmp
mov
and
pop
xlat
mov
xlat
ss
sarb
cmp
bound
jno
lret
lcall
sub
lcall
aaa
jns
push
into
out
nop
les
jge
pop
jmp
inc
add
dec
xor
add
pop
mov
pop
pop
jmp
mov
push
mov
pop
mov
outsb
jle
xchg
jg
jle
mov
sub
scas
leave
and
mov
xor
cmc
roll
dec
in
sbb
idivl
push
repz
adc
cmpsb
lret
ret
addr16
adc
sbb
popf
int
movsb
pop
fisubs
ret
adc
dec
xchg
push
aam
ljmp
ficomps
test
push
mov
jl
adc
popa
cmc
mov
mov
rcrl
mov
push
xchg
ja
sub
mov
idivl
mov
ror
mov
daa
cmpsb
xor
leave
enter
sbb
inc
cmpsl
aad
pop
lods
push
pop
loope
jno
sub
shlb
in
repz
pop
sub
jbe
sbb
and
cmp
outsl
test
icebp
push
xchg
mov
pop
jnp
cmpsl
xchg
dec
inc
push
fisttps
sub
adc
pushf
movsl
xchg
pop
add
inc
sysret
or
inc
or
inc
adc
dec
out
add
pop
fcmovne
fdivrl
adc
pop
cmp
push
int
push
or
and
test
push
in
or
pop
shrb
fldcw
cld
sub
lds
icebp
enter
push
lock
mov
test
cmp
shl
add
test
cmc
sti
cmp
clc
dec
int
adc
sbb
mov
ret
es
cmp
sub
mov
frstor
out
mov
adc
dec
push
mov
mov
or
dec
add
add
add
movl
xor
test
enter
mov
hlt
test
pushf
enter
movl
inc
inc
cld
xor
or
mov
call
pop
mov
dec
mov
pushl
or
ljmp
dec
loopne
rorb
add
mov
hlt
add
enter
dec
add
mov
orl
xor
lret
enter
mov
lea
push
mov
fs
decl
push
and
pop
inc
mov
push
pop
cld
dec
lea
mov
add
movl
decl
xor
cld
dec
jne
lea
push
mov
or
add
sub
add
rolb
inc
add
add
mov
incl
lea
call
add
jne
decl
dec
add
xchg
loopne
inc
incl
mov
xor
add
enter
mov
hlt
add
mov
add
add
incl
sbb
jne
mov
mov
movl
incl
fisttpll
test
inc
aas
inc
lea
inc
mov
mov
cld
loop
inc
out
fisttps
jecxz
in
incl
out
aas
inc
ljmp
incl
movl
insb
test
pandn
aas
add
mov
incl
or
mov
xchg
fildl
mov
cmp
dec
leave
mov
fsubrs
add
lea
push
add
mov
mov
add
mov
add
push
decl
push
mov
call
mov
add
test
loop
ljmp
fsub
add
mov
add
add
cmp
add
push
inc
push
fisttps
test
out
shlb
jmp
fildl
inc
jle
test
jmp
incl
in
add
jne
mov
cld
incl
mov
mov
add
call
rorb
add
add
xor
mov
cld
jle
lea
add
push
add
mov
decl
add
inc
add
add
push
mov
add
mov
mov
inc
sub
add
rolb
jne
xor
incl
call
mov
call
xor
push
adc
loopne
ret
loopne
xorl
cmp
bswap
rolb
jmp
mov
add
cld
jne
xor
lcall
add
mov
test
add
incl
jmp
adc
mov
fwait
mov
lea
xor
call
call
jne
xor
add
pushl
call
int3
incl
mov
xor
add
xchg
in
add
add
inc
add
mov
mov
or
inc
test
je
mov
xor
push
or
inc
in
mov
mov
fmul
add
mov
cld
loopne
inc
push
cmp
movaps
cld
fadds
jne
push
in
jne
lea
xor
jmp
mov
xor
adcl
rclb
inc
lock
inc
xchg
ud0
incl
dec
jbe
mov
push
pop
mov
inc
lret
inc
iret
jb
mov
enter
xor
pushf
mov
xor
dec
add
inc
mov
xor
add
mov
fmuls
xor
mov
roll
xor
mov
clc
enter
mov
test
clc
incl
mov
test
clc
pushf
inc
cmp
pushf
inc
mov
je
add
mov
sarb
adc
dec
adc
add
jmp
jb
add
xor
xor
add
clc
enter
pop
mov
push
push
xor
xor
add
add
lret
repnz
cli
fdivr
test
dec
inc
xor
add
mov
mov
clc
jne
mov
into
into
scas
dec
mov
sub
cmp
mov
mov
mov
add
xor
xor
lret
mov
inc
add
mov
lods
test
xor
mov
lock
bswap
lret
test
jmp
add
push
mov
test
push
clc
xor
xor
add
add
push
dec
mov
stc
roll
scas
mov
xor
xor
add
mov
clc
lret
into
mov
mov
mov
int3
add
xor
xor
add
mov
lock
stc
mov
or
jmp
dec
dec
mov
clc
test
clc
rorl
mov
call
les
lret
ja
mov
dec
xor
mov
clc
push
lret
mov
adc
jb
add
call
cmp
movsb
fwait
inc
xor
mov
clc
dec
lret
mov
call
scas
mov
fwait
sub
cmp
lods
xor
add
mov
mov
cmp
jb
add
dec
scas
mov
shrl
into
cmp
mov
dec
dec
mov
lret
xor
add
imul
mov
xor
mov
add
mov
inc
rdtsc
xlat
pushf
jge
xor
sub
cmp
jb
add
rorl
xor
add
jmp
mov
dec
into
mov
fwait
shll
lret
or
add
in
push
mov
gs
dec
sub
dec
xor
jge
mov
add
dec
decl
adcb
add
jge
push
push
shlb
xor
xor
inc
add
dec
or
jbe
mov
ror
enter
decl
push
lret
push
mov
mov
cld
subb
sti
add
push
lcall
mov
int3
pop
inc
decl
push
xor
movl
aas
push
inc
xor
add
mov
jmp
mov
rol
mov
mov
mov
cmp
mov
add
xor
fwait
lret
cmp
call
inc
inc
mov
mov
enter
add
add
clc
enter
push
pushf
mov
int3
or
test
clc
gs
add
push
xor
sub
dec
add
mov
or
cmp
dec
out
xor
mov
dec
add
push
push
add
sbb
mov
xor
dec
inc
xor
add
push
dec
mov
lret
into
sub
dec
adc
inc
push
test
unpcklps
jmp
add
movl
xor
rolb
clc
gs
mov
xor
sub
mov
add
sub
mov
mov
clc
addl
lcall
inc
decl
test
decl
push
add
dec
or
rorb
into
add
mov
sar
adc
clc
fadds
mov
push
adcb
add
lret
mov
cld
mov
into
add
jne
incl
rclb
push
mov
mov
sar
or
push
add
pushf
xor
pushf
mov
test
clc
inc
inc
mov
sub
mov
dec
xor
mov
xor
orl
shll
int3
lea
push
cmp
pushf
pop
lods
incl
mov
rcrb
test
inc
inc
add
push
in
inc
push
mov
cld
add
adc
add
jmp
add
mov
dec
push
cmp
unpcklps
jne
decl
mov
shlb
inc
add
lret
decl
stc
in
or
dec
clc
xor
mov
rolb
inc
add
clc
inc
lret
mov
in
lret
into
into
scas
dec
mov
sub
cmp
mov
int3
test
xor
xor
lret
mov
inc
add
mov
xor
mov
call
lret
test
jmp
add
push
mov
mov
lret
xor
add
add
push
dec
mov
stc
roll
scas
mov
xor
xor
add
mov
clc
lret
into
mov
test
push
jbe
mov
mov
push
add
rdpmc
lret
add
dec
stc
mov
or
jmp
dec
dec
mov
clc
test
clc
rorl
mov
lock
inc
mov
hlt
pushf
jge
sub
cmp
ja
mov
dec
xor
mov
clc
push
lret
mov
adc
jb
add
lock
sub
mov
mov
mov
mov
lock
ror
push
scas
mov
fwait
sub
cmp
movsb
xor
add
mov
mov
cmp
jb
add
dec
scas
mov
shrl
into
cmp
mov
dec
dec
mov
lret
xor
add
imul
mov
xor
mov
add
rolb
rdtsc
xlat
pushf
jge
xor
sub
cmp
dec
xchg
incl
jmp
mov
dec
into
mov
fwait
shll
lret
or
add
in
push
mov
gs
dec
sub
dec
xor
jge
mov
add
dec
decl
inc
push
decl
lea
push
mov
push
mov
les
add
incl
mov
cld
lret
add
jne
in
ror
xor
add
not
adc
inc
push
mov
push
mov
fdivr
sti
sbb
pop
xchg
leave
fwait
add
push
cmp
sqrtps
decl
push
cld
xor
lret
clc
xor
add
hlt
or
mov
hlt
dec
add
leave
mov
push
roll
mov
mov
lar
push
lret
jne
mov
or
mov
cld
inc
mov
add
in
test
ret
cld
mov
clc
xor
mov
loopne
mov
mov
clc
jne
call
and
je
mov
cld
or
push
add
add
inc
push
mov
pop
mov
ret
push
mov
clc
lock
jne
jne
mov
fiaddl
jne
cmp
pop
mov
push
inc
lea
inc
inc
int
inc
cld
jle
inc
xchg
mov
mov
or
inc
inc
mov
cld
jmp
mov
mov
rclb
iret
inc
leave
decl
mov
mov
mov
push
nop
incl
push
leave
iret
add
push
jmp
inc
push
mov
in
push
sbb
add
mov
cmp
jne
push
pop
push
mov
or
add
sub
lret
add
sbb
mov
lea
push
enter
testl
enter
negl
or
inc
loope
sub
inc
loope
add
push
push
imul
adcl
add
lea
mov
cmp
jne
mov
in
add
out
inc
aas
jmp
lock
and
mov
call
push
add
ud0
hlt
add
cmp
flds
out
call
cmp
shl
pop
fisttpll
push
add
add
push
add
sub
jne
lods
mov
dec
out
into
push
loopne
shrb
xorl
roll
mov
cmpl
mov
push
push
push
sub
push
adc
insl
mov
add
inc
mov
pop
addl
add
add
roll
cli
push
pop
lret
add
decb
sub
and
dec
inc
shll
add
pop
add
pop
dec
jmp
and
push
out
jmp
jmp
mov
decb
add
pop
icebp
mov
insb
adc
mov
or
mov
cld
jge
aas
and
adc
mov
and
dec
add
add
fadds
stc
enter
sbb
sbb
in
in
add
jne
cmp
jb
jmp
mov
add
add
jb
pop
faddl
or
inc
or
xlat
dec
push
add
leave
roll
add
mov
int3
jmp
mov
jne
mov
call
pop
add
pop
or
push
mov
int3
add
jae
int
enter
add
mov
push
pop
add
push
lea
mov
jb
mov
push
add
add
add
int3
jne
movsbl
add
add
mov
add
add
mov
sub
jb
add
jge
add
addl
jne
je
mov
rorb
orl
mov
mov
fadds
inc
pop
lea
push
out
add
add
mov
jb
add
push
call
add
jae
icebp
inc
mov
int3
out
loopne
sub
push
pop
push
jl
add
xor
mov
rcrb
rorl
inc
shr
orl
push
pop
add
jmp
mov
fdivrl
push
pop
call
mov
in
rolb
call
pop
enter
repz
xorl
je
or
jne
jmp
pushl
push
pop
cmpl
jge
mov
sub
pop
inc
mov
sub
lods
add
enter
repz
stc
jge
jnp
call
fadd
dec
insb
stc
cmp
push
mov
jne
mov
mov
add
sub
and
cmp
sbb
pop
call
fsubr
sti
add
add
add
roll
mov
clc
jne
mov
loopne
loopne
lods
int3
inc
mov
add
sub
shrb
add
call
add
dec
insl
in
lea
inc
inc
sub
orl
and
rorl
or
mov
stos
adc
inc
add
jne
mov
cmp
sub
sar
ljmp
sub
mov
mov
and
jne
sub
sbb
dec
push
add
ret
mov
leave
sub
ret
pop
push
rolb
addl
jb
ret
in
jecxz
push
xchg
jne
cmp
jne
mov
rorl
mov
pop
nop
mov
les
add
inc
mov
mov
cmp
or
inc
inc
xor
cld
add
add
add
sbb
dec
je
mov
add
and
jae
mov
incl
push
shr
in
push
add
add
inc
mov
add
jmp
test
push
pop
xor
pushf
add
rcr
inc
add
add
out
inc
inc
sub
dec
shlb
inc
fnstcw
testb
rolb
lea
sbb
inc
add
add
mov
les
mov
add
add
or
mov
add
add
push
movb
or
dec
lea
xor
movsl
repz
add
prefetcht0
xor
mov
pop
mov
or
cmpb
movb
add
mov
xorl
mov
sbb
inc
repz
add
xor
pushf
push
jb
lea
mov
loopne
dec
mov
into
add
iret
inc
call
enter
jge
xor
inc
inc
mov
mov
or
pop
mov
in
cmovne
add
in
cld
inc
sbb
inc
add
adc
sub
add
jle
testb
les
add
decl
mov
inc
in
mov
inc
mov
push
inc
rcr
inc
push
incl
out
inc
add
imulb
mov
mov
fcos
mov
in
jo
incl
mov
out
mov
mov
inc
cmp
test
std
in
add
cmp
outsb
add
push
push
test
jae
add
incl
mov
jl
add
cld
dec
addb
data16
mov
mov
inc
mov
incw
data16
inc
jge
add
lea
add
ljmpw
pushl
lea
fsubs
test
incl
test
inc
ret
mov
push
rolb
test
aam
pushl
add
or
incl
add
pushl
mov
mov
jp
decl
add
push
jl
push
orl
callw
lea
out
mov
data16
lea
lea
mov
in
cwtl
loop
mov
data16
push
jle
inc
pop
push
adc
cmp
repnz
inc
mov
cmp
lea
push
inc
inc
xor
dec
push
inc
jge
mov
mov
add
add
test
incw
mov
hlt
xor
clc
ret
rol
mov
mov
rolb
push
add
inc
test
push
mov
mov
push
jmp
push
add
decl
add
cmp
decl
jmp
push
call
mov
lea
jne
decl
decb
mov
push
jmp
inc
pop
lea
daa
test
test
inc
decl
test
mov
lods
push
inc
jne
decl
mov
add
inc
ret
xor
pushf
mov
pushf
loopne
test
clc
dec
inc
xor
data16
inc
test
clc
inc
test
lahf
decl
incl
lea
rolb
cld
pushf
dec
test
add
incb
decl
mov
lea
aam
call
xor
mov
test
cmp
ud0
test
ljmp
mov
incl
xchg
add
add
inc
lea
mov
cld
push
mov
xor
add
push
addb
jmp
addl
or
jmp
nop
test
xor
mov
mov
add
decl
add
decl
movsl
add
add
rdpmc
addb
mov
sub
mov
push
push
jne
mov
cld
add
push
incl
add
add
mov
sbb
leave
test
jne
call
xor
mov
enter
mov
mov
cld
add
inc
dec
mov
inc
decl
add
xchg
ret
add
add
mov
lea
add
mov
inc
rdpmc
jne
add
inc
clc
add
mov
mov
in
movb
add
add
cmp
pushl
add
test
je
mov
sbb
test
js
add
sub
mov
add
dec
push
mov
mov
mov
sbb
or
dec
incl
push
add
mov
orl
add
push
cmp
inc
mov
push
incl
inc
add
addb
mov
lea
je
decl
call
mov
in
call
mov
mov
mov
out
addl
mov
inc
lcall
ljmp
mov
sbb
cmp
pushf
pushl
mov
add
aam
cmp
add
adc
add
mov
cmp
jmp
mov
inc
or
decl
jne
mov
mov
lock
xchg
jmp
adc
inc
mov
push
sub
push
test
inc
dec
mov
movl
add
add
mov
push
roll
bound
xor
and
in
lea
jne
incl
jnp
mov
pusha
mov
cld
shr
add
push
lea
mov
cwtl
cli
add
or
inc
dec
incl
add
call
add
push
adc
mov
mov
addl
incl
inc
stos
mov
add
mov
cmp
movsb
mov
cld
jae
add
clc
add
mov
clc
pop
inc
xor
pushl
mov
pushl
mov
sub
add
mov
mov
ret
mov
ret
mov
add
mov
sub
sar
test
inc
add
testb
push
add
add
add
add
add
mov
mov
cld
fidivl
mov
xorb
add
sbb
jne
mov
sbb
mov
add
cld
mov
or
dec
cld
cmovne
add
seto
inc
adc
mov
cmp
xor
gs
je
push
sarb
mov
push
cmp
add
dec
mov
in
adc
pop
inc
leave
or
gs
add
into
in
enter
push
xorl
or
jnp
test
add
mov
ltr
decl
clc
out
add
cmp
jge
jb
je
pop
push
mov
in
roll
orl
cmpl
hlt
mov
push
jns
lock
ror
test
dec
rcpps
mov
inc
test
je
mov
adcl
and
jp
rcpps
add
sbb
add
je
cmp
js
add
jns
vmread
add
adc
jge
mov
add
or
push
push
mov
add
pop
add
mov
inc
pop
xorl
add
push
clc
mov
jp
add
divl
test
je
mov
or
decb
jbe
mov
add
cmp
add
je
mov
mov
hlt
orb
jb
jmp
xor
pop
pop
pop
ret
ret
mov
xorl
pushf
xor
rdmsr
test
dec
ret
mov
pop
dec
jne
xor
inc
dec
jbe
inc
pop
add
push
dec
push
mov
and
jo
mov
sbb
mov
nop
or
jne
cmp
cld
xor
add
cmp
js
jae
xor
jmp
mov
fdecstp
test
add
add
mov
cmp
adc
jge
mov
jl
clc
dec
jge
mov
jb
mov
mov
xor
add
mov
inc
pop
jge
cmp
mov
imul
fimuls
fists
in
jne
mov
imul
fdivrp
filds
test
inc
mov
mov
adc
rcll
mov
fiadds
mov
mov
xor
mov
xlat
into
ffreep
lret
iret
dec
inc
mov
fmull
dec
jnp
add
mov
inc
dec
lea
add
jb
add
inc
imul
cld
clc
mov
incl
or
sbb
lret
add
dec
add
enter
inc
pop
decl
add
add
mov
xor
or
pop
cltd
push
clc
mov
xor
add
cmp
hlt
cmp
or
mov
loopne
mov
cld
pushf
pop
fwait
mov
lock
adc
orb
xor
dec
mov
iret
inc
jne
mov
cmp
je
add
or
dec
inc
mov
cld
add
cmp
mov
or
mov
test
inc
xor
mov
jne
mov
fcomps
add
incl
cld
add
mov
cld
inc
fidivrs
fbstp
mov
adc
fadd
add
mov
inc
mov
loopne
sbb
sbb
pushf
add
mov
cwtl
inc
inc
jne
mov
clc
add
mov
or
inc
lea
add
inc
rorl
add
shufps
jmp
xor
hlt
mov
fadds
xor
add
cmp
pmuludq
jmp
mov
or
inc
mov
jne
mov
clc
add
xor
jne
pushl
add
mov
cld
add
xor
mov
adc
sub
lea
add
jb
add
inc
add
inc
mov
or
mov
in
scas
inc
mov
in
add
mov
dec
mov
mov
cld
push
dec
add
mov
in
cmp
mov
mov
mov
xor
cmpl
xor
jmp
add
xor
add
cmp
mov
mov
adc
jmp
mov
cld
mov
push
jne
dec
or
push
inc
in
add
or
dec
cld
mov
xorl
pushf
decl
mov
mov
xor
mov
inc
mov
mov
call
add
mov
or
jo
push
xor
pmulhuw
test
mov
mov
xor
xor
xor
add
inc
mov
movl
sub
lock
mov
mov
or
ja
mov
cld
cli
mov
cmp
bswap
mov
mov
clc
repnz
push
xor
cmp
pushf
pop
jmp
mov
xor
lea
xor
pushf
out
neg
insl
test
clc
pop
inc
or
xor
add
jne
mov
in
push
xor
add
cmp
add
mov
mov
add
mov
mov
fwait
pushf
xor
jne
mov
icebp
icebp
shl
mov
push
jne
mov
in
jmp
add
mov
or
inc
jne
mov
ret
or
jge
sub
xor
add
mov
clc
negl
xor
cmp
repz
xor
add
mov
mov
cld
lock
test
clc
add
fdivrp
test
jnp
add
jae
sub
shll
leave
call
in
in
add
mov
in
test
mov
xor
pushf
jnp
xor
loopne
jne
mov
add
xor
mov
cld
jb
add
jne
mov
jge
mov
lock
xor
mov
lock
jge
xor
dec
mov
loopne
jge
add
icebp
add
dec
hlt
xor
mov
in
jge
mov
dec
push
xor
inc
hlt
xor
mov
repnz
cmp
test
fistps
inc
mov
add
inc
test
add
add
ret
jnp
inc
inc
xor
fdivl
test
push
add
cmp
setnp
mov
call
or
inc
mov
and
lock
movl
mov
clc
xor
mov
inc
mov
mov
mov
mov
hlt
inc
rorl
mov
push
mov
in
jne
mov
addl
clc
mov
add
rolw
mov
jne
incl
inc
push
test
sub
add
and
add
mov
and
cmp
add
inc
push
add
push
enterw
mov
add
add
str
lea
sbb
dec
cmp
inc
push
mov
push
add
mov
inc
add
add
mov
loopne
dec
mov
cld
push
xchg
add
add
or
dec
loopne
xchg
push
add
dec
jmp
mov
sbb
inc
xor
add
push
divl
and
add
jno
incl
inc
push
push
mov
mov
push
inc
enter
push
call
pop
push
mov
mov
push
jo
incl
or
call
fmull
mov
mov
adc
dec
xor
mov
mov
mov
push
lret
movb
inc
movntps
lret
into
dec
lret
mov
mov
fdivl
mov
push
mov
sbb
dec
sarl
push
jne
mov
lea
call
sbb
add
push
mov
push
mov
test
xadd
pop
add
mov
or
push
add
add
and
call
add
mov
add
xor
add
inc
je
push
decb
add
or
inc
add
data16
subl
add
add
enter
int3
loopne
rolb
lea
data16
add
sbb
inc
cmp
add
xor
sub
mov
or
ror
dec
inc
cmp
cld
or
ret
lret
dec
mov
loopne
cmp
inc
daa
loopne
in
add
add
push
inc
xor
add
push
push
inc
in
push
inc
sbb
rorb
addb
ljmp
xor
mov
fmuls
add
lea
add
popl
add
push
incw
mov
add
xor
test
inc
mov
add
or
or
inc
mov
jne
mov
add
add
adc
adc
push
mov
mov
inc
mov
or
push
jne
call
inc
sarb
in
add
add
and
fs
incl
jle
leave
scas
inc
add
orb
call
shr
xchg
add
add
dec
and
push
decl
mov
mov
lea
mov
add
mov
push
shlb
inc
in
jno
push
mov
mov
je
mov
sbb
popl
add
add
adc
jmp
sub
jne
mov
in
popl
push
incl
adc
add
call
and
and
inc
test
sldt
xor
pushf
jmp
mov
or
inc
call
mov
loopne
inc
add
mov
add
add
cmp
test
sbbl
jne
call
leave
rcrb
add
add
add
inc
mov
fcom
add
lea
pushl
call
mov
fstps
push
pop
mov
addl
mov
xor
xor
pop
or
inc
push
in
or
movsl
xbegin
clc
adc
divb
or
test
add
add
adc
xchg
test
clc
data16
orl
rolb
mov
mov
push
add
jge
add
jne
mov
jmp
xor
pop
cvtdq2ps
ret
mov
xor
add
push
rdpmc
out
add
mov
ret
sbb
cmp
or
or
pop
inc
add
add
invd
jge
mov
cli
xor
mov
ret
mov
sub
inc
xor
pushf
inc
mov
hlt
test
mov
xor
dec
or
jne
mov
call
inc
mov
add
add
inc
mov
addl
inc
mov
lock
jge
mov
cli
xor
add
test
add
cmp
xadd
test
mov
xor
add
pop
loopne
inc
clc
xor
add
data16
mov
hlt
xor
add
data16
cmp
add
psubq
ltr
add
add
data16
mov
jge
data16
data16
mov
fdivl
data16
mov
mov
pop
or
clc
mov
lock
jge
invd
pop
add
cmp
data16
mov
pop
fbstp
test
add
add
jge
data16
pop
stc
bsf
mov
in
test
mov
call
cmp
add
mov
call
add
mov
jnp
mov
mov
call
mov
data16
xorl
fisttps
cld
jne
xor
mov
sti
repnz
data16
push
xor
mov
fwait
data16
mov
mov
fisttps
or
mov
hlt
mov
add
dec
or
mov
or
mov
fdivrl
xor
pop
lock
lea
icebp
jb
add
jge
mov
fsubr
pop
mov
in
rcrl
jb
add
jge
mov
in
pop
data16
cmp
mov
fdivrl
cmp
mov
mov
lock
mov
or
clc
cmp
je
push
loopne
dec
mov
int
mov
pcmpgtd
add
jmp
mov
lock
rorl
or
jb
add
loopne
jne
data16
mov
data16
add
add
retw
ret
lret
enterw
pop
jne
mov
call
xor
lea
repnz
add
xor
in
xor
movl
clc
add
pop
pushf
pop
call
mov
push
pop
mov
push
inc
add
popa
data16
into
gs
add
ret
add
add
add
cmp
add
into
ret
pop
adc
mov
mov
jne
lea
mov
sarl
test
mov
push
xorb
mov
xor
ss
fs
mov
je
xor
mov
ss
pop
cmp
jne
mov
cld
push
pop
inc
stc
xor
test
clc
test
cmp
fs
or
add
lret
xor
pushf
mov
ret
pop
dec
mov
push
add
xor
cmp
je
mov
lea
push
cmp
mov
add
sub
add
mov
jne
mov
xor
mov
push
cmp
jne
sbbl
clc
inc
pop
sti
add
cld
xor
mov
roll
mov
inc
in
add
mov
mov
push
mov
test
xor
pushf
sub
inc
sub
mov
inc
add
or
cmp
mov
cmp
je
push
dec
str
cmp
int
mov
mov
cld
add
data16
push
add
jne
movl
clc
xlat
inc
mov
push
pushf
in
add
add
add
cmp
add
lret
lock
clc
inc
lret
cmp
xor
pushf
test
je
xor
rorb
push
add
jb
add
dec
mov
push
push
adcl
xor
mov
scas
ret
jns
mov
dec
or
ret
lock
mov
or
mov
xorl
mov
adc
iret
inc
movl
incb
ret
adc
clc
dec
fisttps
add
ret
lea
add
xor
pushf
add
add
inc
test
xor
push
fwait
push
xor
inc
cmp
jbe
mov
or
inc
test
xor
in
hlt
push
push
push
push
mov
fwait
fwait
xor
mov
or
mov
clc
jb
add
orl
addl
mov
or
inc
dec
mov
orw
xor
mov
mov
mov
mov
inc
dec
add
add
mov
clc
or
mov
clc
popf
incl
ret
adc
mov
hlt
test
clc
or
xor
pushf
jb
add
inc
daa
inc
inc
xor
dec
fwait
add
clc
cmp
or
add
xor
or
lea
add
mov
cld
dec
push
sub
add
or
add
or
add
mov
inc
mov
cmp
xbegin
clc
or
xor
adc
lea
add
inc
add
add
je
push
or
dec
std
mov
mov
mov
or
inc
clc
mov
hlt
call
push
or
push
xor
mov
xor
pushf
inc
mov
or
add
inc
mov
or
inc
push
jmp
mov
mov
jne
jmp
mov
clc
lret
push
mov
mov
sub
decl
or
pop
ds
pushl
mov
mov
jmp
leave
jne
call
in
dec
add
add
inc
cmp
je
mov
or
add
or
adc
enter
rolb
mov
or
rorb
jmp
push
mov
cld
inc
inc
orl
push
push
mov
add
test
add
mov
mov
lock
fcoms
mov
push
enter
cmp
add
mov
call
cmp
jmp
push
call
mov
cld
or
call
add
xor
jne
cmp
jne
mov
or
pop
into
je
mov
or
mov
mov
mov
or
sar
xor
xor
pop
adc
ret
cld
inc
mov
cld
mov
push
pop
or
xorps
test
add
adc
addl
jmp
ror
inc
leave
xor
and
add
xor
xorl
mov
pcmpgtw
add
leave
mov
push
dec
mov
lea
xor
sysret
dec
rorb
pushw
jne
ud0
mov
lods
add
data16
iret
and
cli
inc
cmp
add
inc
pop
lea
mov
add
mov
mov
add
inc
data16
clc
int3
cmp
je
push
pop
xchg
data16
lea
jb
jmp
call
clc
xchg
mov
or
lea
push
inc
jge
mov
fdivs
incl
xor
xchg
ret
xor
cmp
data16
rolb
add
dec
xchg
push
jmp
push
add
add
mov
clc
dec
xchg
cmp
jne
xor
jmp
add
jne
call
clc
xchg
sti
add
add
xor
pop
mov
jmp
mov
cmp
cmp
lea
jle
jae
mov
lcall
inc
push
lea
mov
int3
push
xchg
add
add
inc
add
cld
mov
aam
xchg
mov
testb
mov
hlt
add
mov
decl
incl
mov
call
je
js
lock
mov
mov
sbb
clc
add
mov
rorb
dec
xchg
mov
in
jge
cmp
clc
pop
fistl
clc
add
mov
mov
mov
adc
add
adc
pop
sbbl
ret
cmp
mov
cld
add
add
add
sub
or
add
mov
push
push
clc
addl
out
add
jmp
cmp
jmp
je
mov
inc
add
add
add
pop
pop
push
inc
in
pop
in
cmp
xor
add
push
mov
in
dec
push
test
add
leave
inc
test
add
add
dec
push
mov
hlt
push
dec
leave
mov
clc
cmovge
mov
clc
popl
push
add
push
xor
cld
add
xor
add
add
int
mov
add
cmp
jne
xor
jmp
add
mov
or
mov
mov
mov
or
shl
icebp
addb
or
or
stc
shll
xor
inc
xchg
add
add
mov
test
sub
jmp
mov
lock
lea
mov
or
leave
add
dec
dec
test
paddb
add
dec
mov
mov
or
dec
xor
mov
adc
mov
call
mov
push
clc
or
push
lret
mov
mov
xor
cmp
lsl
call
or
dec
or
inc
xor
in
add
inc
pop
xor
testl
dec
adc
inc
xor
sub
test
clc
inc
add
hlt
leave
test
clc
inc
push
cmp
rorl
orb
mov
push
clc
ret
xor
xor
js
dec
push
mov
lock
lret
jne
mov
enter
lret
into
out
dec
dec
jmp
xor
xor
mov
sub
add
or
dec
mov
xor
jb
add
dec
pop
mov
cld
mov
call
stc
add
pop
leave
add
in
mov
xor
movl
mov
xor
pushf
inc
cmp
pushf
xchg
mov
ljmp
push
push
push
push
push
xor
mov
add
mov
clc
lret
cmp
pushf
mov
clc
cld
jne
xor
xor
or
add
hlt
dec
dec
je
xor
xor
add
add
rol
mov
in
inc
enter
icebp
mov
clc
lock
enter
lret
inc
jne
mov
cld
dec
enter
fwait
sti
xor
mov
mov
xor
xor
mov
mov
push
shr
in
cmp
add
pushf
mov
call
xor
pushf
popa
push
dec
inc
mov
clc
pushf
into
mov
in
call
pop
or
or
or
push
inc
cmpxchg8b
leave
loopne
test
mov
rcll
xor
add
and
mov
leave
sti
inc
decl
mov
clc
dec
iret
xor
jb
add
inc
mov
xabort
loopne
ljmp
mov
clc
lock
dec
mov
loopne
incl
mov
hlt
jne
mov
in
dec
or
jb
add
xor
add
mov
subl
mov
xor
pushf
mov
clc
add
mov
adc
inc
xor
jmp
mov
loopne
inc
mov
mov
nop
roll
mov
mov
dec
push
mov
xor
mov
mov
iret
xor
add
mov
dec
mov
mov
mov
mov
xor
mov
clc
enter
mov
lock
mov
cmp
rol
enter
inc
adc
inc
clc
xor
add
mov
roll
add
push
mov
fsubr
inc
mov
adc
add
inc
test
cmp
pushf
nop
movl
clc
add
add
or
dec
ret
push
inc
dec
mov
mov
jne
mov
call
mov
mov
clc
mov
xor
adcl
inc
push
mov
clc
incl
mov
clc
rolb
je
mov
jne
lea
mulb
decl
fadds
inc
jmp
mov
roll
mov
lock
dec
ret
mov
mov
mov
fadd
enter
inc
cld
mov
xor
add
sub
xor
pushf
add
or
jne
clc
mov
call
jmp
mov
xor
xor
enter
clc
inc
inc
cmp
pushf
jne
mov
clc
dec
out
dec
mov
lea
cmp
lea
mov
cld
iret
mov
jmp
test
je
mov
fdivr
movl
lock
inc
lock
lret
imul
testl
dec
mov
fmuls
fmuls
enter
inc
dec
xor
add
mov
inc
inc
push
mov
lock
mov
fadds
rol
test
dec
push
decl
push
mov
add
cmp
add
loopne
add
dec
xor
pushf
mov
cld
iret
test
mov
in
dec
add
add
dec
mov
fmull
add
testl
test
add
add
mov
cld
mov
hlt
mov
add
cmp
add
mov
mov
call
dec
add
cmp
cld
iret
mov
dec
push
lea
mov
call
iret
inc
mov
or
or
xor
cmp
je
mov
mov
xor
mov
mov
xor
bswap
rorb
add
mov
xor
or
mov
xor
bswap
rorb
add
add
xor
mov
add
dec
dec
xor
mov
lock
iret
rorl
inc
mov
iret
add
xor
mov
or
dec
shll
cmp
fmull
test
dec
dec
xor
or
dec
enter
add
mov
xor
or
mov
mov
xor
mov
cmp
jne
lea
sti
or
cmp
je
mov
ret
or
call
add
mov
add
cmp
mov
xor
mov
add
roll
cmp
call
add
mov
xor
sbb
cwtl
enter
inc
decl
fadds
rorl
inc
xor
mov
or
inc
rcll
mov
xor
jb
add
shll
mov
xor
add
repz
inc
mov
xor
inc
mov
mov
jne
mov
test
inc
mov
mov
lea
xor
add
mov
lods
dec
inc
mov
lret
mov
adc
std
ret
ljmp
hlt
push
xor
enter
inc
add
cld
test
fwait
inc
xor
pop
push
incl
in
mov
push
inc
cmpsl
mov
or
add
add
add
icebp
je
mov
cld
rol
ret
add
lea
cwtl
jne
clc
or
incl
cmp
incl
lcall
or
push
mov
test
inc
mov
imul
dec
mov
push
dec
push
xor
add
push
incl
lods
inc
inc
mov
xchg
or
call
adc
orb
inc
inc
add
mov
call
push
push
dec
jo
push
dec
mov
cmp
cmovne
call
mov
lcall
leave
inc
adc
jne
call
dec
inc
mov
add
mov
push
or
dec
xorl
cmp
mov
pop
adc
ret
mov
clc
mov
pop
mov
mov
push
push
lock
mov
adc
or
ret
xor
add
or
jge
mov
and
cmp
mov
xchg
dec
add
mov
add
dec
into
mov
mov
das
add
add
mov
and
mov
and
xor
lea
xor
add
xor
orl
cmp
pushf
mov
or
jne
call
adc
mov
adc
movl
pop
and
call
and
call
addl
pop
pushf
in
ret
push
test
mov
and
mov
mov
je
je
mov
mov
add
test
dec
and
test
push
add
or
adc
and
or
cmp
sbb
dec
ret
push
je
and
.byte
.byte
