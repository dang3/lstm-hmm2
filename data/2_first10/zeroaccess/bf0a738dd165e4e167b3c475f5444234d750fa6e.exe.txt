push
mov
sub
sbb
mov
push
mov
adc
push
push
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
ja
jmp
call
jmp
mov
movl
cmpl
je
cmpl
ja
jmp
pushl
push
push
push
call
mov
dec
mov
jmp
xor
sbbl
mov
andl
add
mov
sbb
mov
mov
movl
cmpl
je
cmpl
jb
jmp
call
cmpl
jne
xor
add
dec
mov
mov
dec
mov
jmp
mov
mov
xor
or
mov
sbb
mov
sub
mov
and
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jg
jmp
pushl
push
push
push
call
jmp
mov
sub
movl
movl
mov
dec
xor
xorl
add
addl
mov
andl
jmp
xor
or
inc
mov
cmpl
jae
cmpl
jle
jmp
call
jmp
mov
mov
mov
movl
cmpl
je
cmpl
jg
jmp
pushl
push
pushl
call
mov
dec
mov
jmp
mov
sub
mov
push
xor
xor
xor
pop
orl
sub
addl
add
movzbl
xor
movl
mov
movl
addl
mov
mov
andl
jmp
xor
xor
inc
mov
cmpl
jae
cmpl
jb
jmp
push
push
pushl
pushl
call
jmp
mov
xorl
mov
mov
sbbl
xor
add
mov
orl
lea
mov
mov
incl
xor
sbbl
add
orl
mov
subl
lea
push
neg
mov
subl
xor
add
push
mov
push
movl
pushl
call
xor
add
and
mov
mov
mov
mov
mov
sub
sub
movl
mov
mov
xorl
lea
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jge
jmp
pushl
pushl
push
push
call
cmpl
jne
mov
inc
mov
jmp
mov
movzwl
sbb
movl
mov
mov
xor
andl
jmp
xor
or
inc
mov
cmpl
jae
cmpl
jb
jmp
push
pushl
push
push
call
cmpl
jne
mov
inc
mov
jmp
mov
orl
sub
not
mov
movl
movl
mov
mov
movl
mov
movl
cmp
movl
je
and
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jbe
jmp
push
call
cmpl
jne
mov
inc
mov
jmp
mov
sbbl
xor
xor
orl
lea
xor
mov
xor
div
sub
mov
mov
sbbl
xor
xor
sub
cmp
movl
jne
add
mov
add
mov
mov
xorl
mov
addl
xor
xor
add
xorl
add
mov
cmp
jae
lea
movl
cmpl
je
cmpl
jg
jmp
pushl
push
call
mov
dec
mov
jmp
mov
xor
mov
xor
add
movl
lea
movl
mov
not
mov
movl
cmp
movl
jbe
addl
addl
movl
jmp
addl
addl
sub
mov
xorl
xor
decl
inc
sbbl
incl
addl
add
cmp
movl
jb
notl
mov
xor
mov
xor
mov
sub
add
mov
xor
sub
ror
xor
mov
mov
mov
mov
sub
xor
cmp
jne
mov
mov
xor
xor
sub
sub
xor
mov
mov
xor
mov
sub
jmp
mov
xor
mov
sub
add
mov
mov
cmp
jne
movl
mov
xor
add
jmp
lea
mov
mov
sub
mov
mov
mov
mov
movl
mov
movl
mov
xor
add
mov
mov
xor
add
mov
movl
movl
mov
mov
xor
add
cmp
je
mov
xor
mov
sub
add
mov
mov
xor
add
imul
cmp
ja
mov
mov
mov
sub
xor
xor
add
div
mov
mov
mov
xor
add
cmp
jbe
mov
xor
add
mov
mov
mov
xor
add
imul
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
add
movl
mov
mov
mov
movl
movl
mov
mov
xor
add
jmp
movl
movl
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
jmp
and
daa
lea
repz
mul
jp
jp
das
pop
jp
and
daa
cmp
jno
jne
dec
ja
push
inc
rcr
std
insb
push
imul
jl
gs
pop
dec
cmp
cli
xchg
xchg
jg
mov
sub
jbe
cli
arpl
jmp
xchg
and
mov
rolb
imul
ss
or
imul
pop
adc
addb
add
jae
movsb
pop
mov
add
fisubrl
bound
iret
mov
xchg
insl
lock
bound
add
test
fcoml
data16
bound
add
and
mov
adc
sahf
cmp
pop
mov
push
mov
xor
clc
ss
and
jecxz
sbb
stc
movsl
mov
add
stc
push
pushf
cmpsl
jbe
jg
mov
and
mov
jns
or
leave
mov
adc
jmp
ret
out
ss
std
fdivrp
add
mov
adc
lods
inc
inc
filds
leave
push
pop
jle
add
xchg
mov
je
mov
cmp
jno
add
call
xchg
movsb
sbb
test
stos
and
into
dec
xchg
pop
xchg
sahf
sbb
mov
or
pop
add
xchg
push
dec
out
inc
sahf
inc
jp
xor
push
push
outsb
mov
jmp
dec
pop
jecxz
jmp
mov
scas
inc
shlb
dec
mov
adc
mov
jge
icebp
mov
pop
xchg
repnz
jnp
repnz
mov
or
cmc
cmp
mov
adc
test
daa
sbb
movsb
jmp
and
pop
lahf
mov
mov
push
or
add
mov
inc
mov
mov
mov
jb
push
icebp
jo
xor
ret
cwtl
lea
rclb
lock
push
mov
insl
outsl
fstps
pushf
rcrl
or
test
dec
xchg
add
aad
push
mov
mov
paddq
mov
and
cmp
cs
inc
fsubr
inc
jle
nop
cmp
mov
pop
rclb
add
dec
dec
and
and
sbb
repz
push
sti
push
jecxz
out
sub
decl
xchg
shl
bound
ret
jg
pop
jecxz
cltd
test
cmp
scas
push
movsb
scas
lahf
pop
cmp
or
adc
inc
xchg
daa
or
cmp
in
test
roll
and
add
push
ss
push
ficomps
shr
leave
or
outsb
xchg
pop
mov
lahf
or
add
das
mov
and
std
arpl
xor
inc
sub
gs
sbb
xchg
cmp
xchg
xor
and
in
insl
outsl
dec
mov
mov
inc
mov
imulb
jns
pushl
data16
mov
adcl
dec
iret
idiv
cmpsb
hlt
popa
aam
jl
stc
mov
sub
jno
xchg
xchg
pop
shrl
inc
add
arpl
sub
out
int3
mov
xor
insb
in
stos
pusha
jnp
xor
shl
dec
cmc
or
jmp
jnp
enter
test
mov
stos
pop
sbb
sub
lock
push
cmp
stos
mov
adc
pusha
cmp
pop
cmp
adc
out
es
push
nop
idivl
xor
dec
mov
mov
jecxz
out
and
mov
mov
pop
xor
cli
jae
sbb
and
sub
fwait
xchg
ja
pop
popf
push
and
xor
imul
lds
leave
mov
push
in
scas
out
inc
push
mov
push
sub
mov
pop
das
sub
rol
cmpsb
sarl
mov
enter
adc
sbb
decb
add
es
dec
mov
jne
sbb
ja
and
or
jl
call
push
cmc
inc
cmc
cmp
scas
adc
mov
aam
int
push
push
out
inc
sahf
mov
mov
mov
pop
pop
cmp
std
add
sarb
or
xchg
and
mov
jecxz
je
lcall
ja
movsl
scas
fnstcw
movsb
mov
cmp
cs
jge
mov
push
movsb
outsb
push
test
lds
push
mov
cmp
int3
icebp
mov
js
js
mov
dec
sbb
mov
jno
in
and
xorl
ja
mov
arpl
cwtl
inc
mov
outsb
xor
ja
sub
or
mov
pop
pop
xor
out
lods
mov
repnz
push
xor
shll
mov
iret
and
and
inc
enter
sbb
ds
pop
xor
dec
jmp
icebp
sbb
pop
cmp
stos
pop
jge
xlat
out
jmp
out
aas
ljmp
cli
sbb
inc
cmc
nop
jmp
or
call
popa
cmpsb
test
xor
push
or
mull
mov
inc
pushf
dec
int
sub
int
insl
std
stc
nop
or
ss
pop
cmp
sbb
mov
cmp
cmp
inc
add
sbb
cmc
mov
lcall
icebp
mov
mov
loope
lret
sub
mov
jl
stc
mov
fisubs
sbb
adcb
xor
xchg
or
dec
aas
inc
adc
or
dec
shr
in
cld
iret
mov
adc
addb
mov
fldenv
push
adc
addr16
in
into
movaps
add
push
lock
dec
cmp
or
and
mov
sub
icebp
and
jne
jne
mov
scas
or
loope
sub
cmp
aas
mov
mov
inc
aaa
test
pop
cmp
and
mov
test
sub
test
gs
xchg
and
xor
mov
lahf
mov
cmc
lret
dec
push
lahf
mov
mov
outsb
cs
sbb
cmp
pop
jecxz
out
mov
das
push
data16
jae
dec
lds
roll
sub
mov
jbe
cmp
mov
pop
sub
adc
add
inc
add
jo
cwtl
or
mov
pop
mov
in
jno
das
adc
repz
bound
sbb
sbb
scas
pop
jmp
jle
xor
mov
push
loope
xor
xor
xchg
dec
pop
adcb
lods
pop
pop
push
dec
pop
imul
add
jnp
stos
and
sbb
mov
xor
loopne
js
push
loop
mov
cmpsb
and
daa
pop
jl
stos
gs
jno
lahf
test
dec
push
mov
and
not
or
loope
sbb
test
and
sarb
data16
adc
mov
or
sbb
jae
cmp
movsb
jbe
arpl
push
into
mov
xchg
pop
je
xchg
aas
int
mov
cmp
mov
xorl
adc
adc
fdivl
xor
movsl
sub
inc
ret
out
fsubrp
jae
subl
les
dec
push
mov
sti
lcall
mov
jno
push
dec
out
ret
jmp
push
xor
ficompl
push
lret
lret
mov
xor
jo
cmp
je
call
icebp
shrl
cmc
push
lods
cmp
loope
jne
adc
roll
loopne
or
outsl
arpl
test
pusha
pop
lcall
aaa
or
adc
negl
mov
sbb
shr
dec
test
push
jl
mov
inc
aaa
fcmovnbe
loop
xchg
xchg
pop
adc
sub
and
enter
in
xlat
mov
addb
and
pop
xchg
mov
lret
sub
and
mov
or
lds
inc
sbb
jle
cltd
mov
mov
lock
or
rorb
jp
lret
pusha
mov
pop
jg
mov
cmp
and
ljmp
icebp
aad
and
in
jmp
sub
xchg
imul
loop
pop
jg
lcall
and
pop
mov
imul
mov
jl
xchg
daa
inc
scas
jo
cmpsl
sbb
push
mov
scas
dec
push
imulb
xchg
dec
lret
pop
cmp
hlt
in
xchg
dec
or
stos
divl
pop
and
lods
in
fidivrl
fildll
out
icebp
dec
call
jnp
sbb
sbbl
dec
clc
movsl
adcb
cmpsl
jge
in
rcl
xchg
scas
jbe
incb
xchg
xchg
xchg
dec
inc
xor
sbb
mov
sub
cltd
insb
pop
jae
ljmp
loop
pop
sti
pop
mov
jns
xchg
and
stc
sub
jmp
pop
loope
push
sub
and
adc
or
mov
cmpl
mov
ds
jp
je
cwtl
paddq
jno
dec
lahf
sub
test
xor
push
lret
cmpl
adc
add
xchg
jmp
push
jno
loopne
dec
xchg
inc
arpl
inc
mov
or
adc
adc
and
push
inc
pop
fs
adc
mov
adc
pop
sub
add
jg
aaa
bound
lock
sub
pop
or
cld
je
pushf
dec
add
push
mov
push
adc
leave
imul
fmuls
test
push
fwait
mov
mov
sti
xor
leave
add
inc
iret
push
outsb
push
mov
xchg
mov
sub
xor
mov
push
aas
jnp
jnp
notb
imul
and
ret
gs
jne
inc
fistps
dec
sahf
jae
sarb
hlt
jne
mov
fwait
or
rcrl
ljmp
jbe
lret
mov
fdivs
int3
test
mov
into
lret
xchg
es
inc
mov
faddl
outsb
test
pop
cld
addr16
mov
aas
int
sub
andb
sub
sub
aaa
loopne
xor
je
popf
inc
mov
cli
xor
sbb
and
and
ja
mov
jmp
rorb
push
inc
shlb
subl
mov
out
and
mov
xor
or
xchg
iret
xchg
push
ja
int3
rdpmc
scas
or
or
sub
cmpb
dec
push
fiaddl
sub
cmp
outsb
mov
leave
aam
dec
fdivrs
add
vmread
ja
push
sub
jg
add
add
hlt
add
pop
cli
test
les
out
stc
pop
enter
ja
mov
test
push
sub
jno
add
jge
popa
sbb
push
sti
faddl
pop
fwait
rcl
mov
aas
icebp
adc
popa
or
jp
leave
cmpsl
sub
call
jg
dec
pop
cmc
shlb
adc
inc
int
mov
or
shl
xchg
xor
lds
xchg
jnp
mov
nop
gs
mov
ret
mov
jnp
lods
fs
leave
pop
lret
int
push
pop
lods
jge
lock
inc
cmp
std
mov
xor
popf
mov
shlb
add
icebp
int
nop
in
arpl
sarb
out
vmovdqu
lcall
outsl
adc
icebp
adc
or
in
cmp
dec
mov
or
in
fiaddl
xor
das
xchg
push
cli
mov
cmp
sub
test
ds
inc
jmp
data16
lods
lret
or
repnz
stos
out
sbb
rorl
sub
xchg
insb
lahf
repnz
sub
ret
je
or
jecxz
ffree
popa
pop
insb
and
push
or
sti
js
stc
adc
xchg
xchg
xchg
xor
mov
arpl
js
shrl
loop
sub
daa
adc
adc
js
sbb
aas
test
pushf
xor
in
and
dec
adc
repnz
ja
push
mov
nop
outsl
sbb
daa
push
mov
add
sbb
adc
push
jp
and
xchg
scas
hlt
dec
js
pop
push
jne
sbbl
je
mov
add
add
iret
outsb
mov
fs
mov
xchg
push
cld
adcl
insl
das
adc
lods
leave
adc
pusha
xchg
mov
insl
sbb
cmp
and
repz
pop
adc
repnz
dec
in
je
adcb
pop
dec
jnp
stos
jle
push
fwait
dec
ljmp
aas
sti
sub
xchg
push
fwait
mov
aam
cld
insl
sbb
adc
in
lret
sub
mov
ds
push
xchg
ficoml
dec
mov
add
scas
call
xor
cmpsl
lcall
clc
add
loop
adc
std
mov
outsb
jnp
mov
leave
testl
and
rorb
inc
std
pop
ret
mov
mov
mov
mov
out
dec
adc
xor
xchg
les
sar
jle
mov
insb
inc
leave
pmaxsw
icebp
dec
outsb
call
mov
mov
stos
stos
jns
loopne
in
fwait
arpl
shl
adc
push
fwait
repz
sub
add
ret
xchg
ljmp
sbb
rorb
mov
and
adc
push
mov
shl
or
pop
push
xchg
lea
add
jp
scas
mov
xchg
imul
or
inc
cmp
push
les
push
push
jnp
mov
push
jae
mov
xor
cmp
out
add
in
lods
jge
fdivr
push
mov
xchg
and
xor
popf
mov
cltd
inc
adc
sub
adc
mov
rcl
add
adc
xor
mov
filds
mov
arpl
sahf
inc
es
sti
fldenv
imul
dec
mov
in
add
sbb
push
jo
lahf
xor
pop
cmp
das
jge
decl
adc
xor
and
in
lods
fmul
and
xchg
pop
and
divb
push
or
mov
loopne
int
or
mov
ja
mov
inc
inc
rcr
xor
add
aas
sub
or
jmp
in
adc
adc
inc
inc
jbe
lcall
imul
in
mov
jbe
outsl
cwtl
mov
std
ljmp
test
sarl
es
mov
aas
std
xor
add
and
adc
add
pop
dec
mov
pushf
stos
or
add
and
sahf
ret
push
mov
jne
mov
adc
inc
int
movsl
cwtl
jle
add
das
jnp
adc
lods
adc
xchg
iret
call
cld
xchg
cmp
fidivrs
mov
jo
mov
jp
daa
or
fildl
xchg
adc
lcall
mov
out
jbe
xor
mov
mov
cmp
adc
out
push
test
jns
iret
or
xor
ficoms
mov
inc
and
es
lea
and
push
dec
fidivs
loop
movsb
fwait
mov
rcrb
aad
lods
xor
jle
jle
add
sub
add
inc
fs
jnp
adc
adc
imul
sub
add
xchg
in
jae
add
subl
gs
fld
insl
mov
or
or
jle
adc
mov
sbb
jnp
mov
jno
jns
cmc
pop
fdivrp
cmc
mov
jmp
add
out
cmp
jmp
test
cld
cmp
xor
call
sub
sbb
js
cmp
sub
push
testl
imul
adc
push
jbe
dec
lcall
sbb
repnz
pusha
popa
push
mov
sub
xlat
push
pop
jbe
sysexit
sbb
in
mov
mov
jmp
lret
dec
or
mov
dec
lods
ficoml
push
iret
test
sub
add
adc
push
lcall
adcl
test
shl
inc
inc
pop
jnp
mov
jno
out
or
popa
fcmove
sbbb
scas
jle
fidivrs
test
cwtl
adc
xchg
mov
and
aas
int3
mov
outsl
push
lock
adc
andb
in
add
pop
loopne
push
pop
mov
andb
add
fsubl
cmp
ja
mov
xchg
sbb
pop
sub
xorl
gs
lcall
sbb
lcall
add
loop
push
and
pop
add
stos
mov
ficoml
into
cwtl
sub
test
daa
rol
sbb
xchg
into
lret
push
dec
xor
in
movsl
and
stos
iret
pop
mov
mov
hlt
jle
cmp
jne
mov
xchg
pop
mov
pusha
mov
fs
jl
icebp
jne
jns
mov
cld
addr16
outsb
adc
cmp
insb
ret
sti
mull
aaa
jecxz
lock
stos
jae
pop
adc
in
mov
or
mov
mov
imul
inc
pop
jns
xchg
push
mov
xor
out
xor
push
dec
gs
xor
repz
inc
mov
jp
pop
arpl
pop
sbb
aas
nop
xor
add
gs
add
sub
xchg
mov
add
pop
xchg
xchg
cmp
fnstsw
fsubrp
imul
cmp
pop
mov
call
mov
mov
lods
or
hlt
leave
nop
xchg
out
or
dec
pop
pop
jmp
test
jp
mov
imul
jnp
mov
sahf
ss
loope
cmpsl
lock
in
jnp
xchg
inc
dec
aam
cltd
and
out
ss
lret
mov
xchg
mov
ret
shll
call
push
paddsb
xchg
pop
xor
pop
arpl
or
and
ljmp
mov
test
xor
jmp
arpl
ret
xchg
or
je
dec
and
das
movl
sahf
addr16
inc
sbb
adc
jbe
sbb
cmp
dec
inc
lods
sub
adc
fcmovnb
movl
in
add
ret
xchg
stos
out
and
mov
mov
and
inc
mov
jecxz
xor
jne
or
inc
in
aad
loop
leave
inc
fisttpl
lahf
clc
enter
inc
mov
adc
pushf
dec
cmp
cmp
imul
ljmp
cmpsb
out
mov
add
or
xorb
dec
aam
sub
jns
popa
not
fwait
xchg
mov
cld
loop
adc
xchg
mov
mov
repnz
cmp
lcall
cmp
fs
lret
xchg
insb
push
xorb
xchg
les
ss
sub
mov
add
lret
into
cwtl
das
pop
lret
arpl
or
fisttpll
sahf
pop
in
repnz
imul
outsl
and
mov
cmp
cmp
test
pop
pusha
xchg
call
addl
sub
stos
hlt
sub
mov
add
xor
inc
mov
sub
push
jae
sub
scas
mov
cmp
mov
pusha
popa
inc
je
sbb
mov
cmp
or
cmp
dec
adc
fsubrs
out
adc
mov
adc
dec
dec
fs
ret
pop
enter
test
les
insb
adc
cld
lret
or
stos
push
mov
leave
mov
outsl
rcll
mov
stos
jl
xchg
jg
cmp
outsl
mov
iret
jg
cmp
pop
mov
xchg
test
mov
fcoml
hlt
fdivl
pop
dec
test
mov
shll
pop
movb
leave
std
movsl
inc
int3
int
jmp
pop
in
aaa
lret
inc
xor
fdivs
loop
test
sahf
fwait
mov
in
cli
ret
sub
leave
dec
cmp
int
mov
add
popf
sub
jle
call
xor
sahf
adc
test
pmaddwd
ss
xor
popa
jg
jnp
insb
sbb
add
add
ret
add
xchg
or
sub
or
fpatan
jae
mov
roll
stc
xchg
sub
mov
push
pop
arpl
or
dec
adc
dec
mov
js
adc
in
cmp
sub
fs
pop
lock
les
aam
lahf
lret
lea
add
xlat
inc
xor
popl
xchg
sbbb
pop
das
andb
pop
les
sbb
sbb
shl
xchg
jle
out
inc
movsb
std
lods
inc
pop
mov
ljmp
daa
mov
mov
mov
xor
jle
and
add
sarb
imul
pop
cwtl
xchg
and
inc
out
hlt
xchg
das
inc
cmp
xorl
and
outsl
fists
movsl
icebp
shrb
fmul
shlb
jge
xchg
notb
lods
test
iret
adc
test
data16
sub
adc
rdmsr
mov
mov
je
sbb
inc
jecxz
xlat
mov
das
repnz
arpl
pop
and
xchg
repz
jg
push
sub
jmp
or
jp
std
into
outsb
adc
dec
pushf
pusha
xlat
and
mov
mov
das
ret
testb
mov
enter
pop
sbb
lock
inc
jl
aad
mov
or
xor
call
jge
adc
hlt
mov
inc
addb
pop
inc
jg
add
std
lods
fcmovnu
cld
bnd
js
or
arpl
shl
jo
jmp
sar
bound
inc
sbbb
lock
push
out
cmpb
mov
mov
cmc
jge
fiadds
jp
push
and
cmpsl
and
loopne
inc
lock
sarb
mov
out
jae
out
mov
test
jge
sbb
enter
cmc
ljmp
lahf
cmp
inc
decb
lods
pop
jo
mov
mov
inc
fs
xor
or
pop
dec
test
test
mov
pop
xor
int3
mov
dec
jl
cmpb
sti
pop
movb
cmc
scas
pop
neg
test
repnz
pop
out
rcrb
mov
pcmpgtb
aaa
shlb
jecxz
into
lcall
mov
js
mov
mov
mov
mov
dec
rorb
push
popf
insb
dec
add
add
insl
psrad
sbb
imul
ret
int
stc
push
es
cmpsb
data16
icebp
mov
clc
pop
loope
shll
inc
shrb
xchg
cwtl
add
cmp
fwait
inc
rorb
dec
mov
push
pushf
push
lahf
mov
cmp
outsb
int
int
pop
loopne
jno
cwtl
xorb
stc
nop
adc
out
mov
inc
add
mov
cltd
mov
lea
inc
fildll
pop
fwait
mov
sahf
icebp
enter
fistpll
je
jb
imul
pop
ss
push
jne
mov
cli
ja
gs
mov
mull
repz
mov
test
sub
repz
mov
rclb
jbe
jb
mov
icebp
enter
andl
cltd
insl
ja
ss
cmp
pop
dec
nop
mov
sub
push
cmp
jp
jmp
aaa
insb
or
iret
inc
jne
xchg
push
sbb
push
leave
fsubr
aad
pop
fisubl
out
xor
push
inc
in
or
pop
or
push
mov
push
mov
xorb
bound
cmp
push
shll
pop
aaa
outsb
aad
adc
int3
lock
inc
dec
fistpll
or
insl
xor
dec
popa
test
fcompp
sti
out
in
pop
shll
lahf
idivb
sub
lds
inc
xor
fdivrs
jno
push
pushf
fstl
inc
push
fwait
mov
pusha
aaa
out
shll
dec
fs
sbb
xor
mov
mov
dec
cmp
aas
je
xchg
xor
push
fmull
push
ss
cld
inc
adc
cmc
mov
dec
repz
sbb
mov
js
cwtl
mov
inc
jno
or
xchg
xchg
or
mov
push
push
stc
jo
mov
cli
sbb
stos
mov
test
pop
sahf
int
test
sub
and
cli
popa
in
jnp
jle
hlt
arpl
mov
inc
cmp
add
xchg
stos
xor
pop
dec
int3
movsb
xchg
out
jb
or
cmpsb
es
push
mov
js
lret
das
jle
mov
in
adc
ss
jmp
mov
push
das
rcrl
cld
add
add
mov
xorb
decl
sub
loopne
push
cmp
xchg
xchg
lock
call
mov
jp
jecxz
in
fld
icebp
out
adc
sub
scas
push
pop
cmc
jo
insl
pop
pop
addl
iret
mov
cmc
push
inc
or
fidivs
and
sub
mov
pop
push
andb
mov
leave
push
mov
js
and
pusha
jg
insl
pop
push
mov
mov
into
add
push
jp
cmp
insl
aas
fcoms
cs
ja
fiaddl
mov
rorl
rcrb
je
out
xchg
sub
outsl
movsb
jne
push
adc
or
insb
in
and
pop
aam
imul
cmp
adc
cmp
sbb
fadds
and
out
sub
mov
dec
and
jmp
ljmp
loop
jns
push
popf
xor
stos
dec
and
notl
out
or
fs
sub
xchg
test
leave
jnp
popf
cmp
mov
stos
push
shll
and
je
out
ret
sub
add
sub
psraw
out
pop
les
ficompl
sub
add
dec
subb
ret
jns
insb
iret
imul
int3
stos
jbe
and
popa
pop
outsl
or
xchg
outsb
add
xchg
test
fwait
and
lods
cmpsl
jb
les
nop
popf
cmp
sahf
test
jmp
mov
add
xlat
movsl
es
jmp
jle
push
push
dec
mov
mov
xor
xor
xor
sub
mov
inc
movb
mov
jmp
fsubrl
clc
pop
arpl
pop
into
inc
ret
sbb
and
lcall
ljmp
andl
pop
lea
stc
push
into
insl
xchg
or
daa
fidivrs
adc
jmp
je
mov
daa
push
jle
xor
sub
cmc
sub
jl
mov
fisubrs
ja
in
test
add
icebp
shrl
sub
loopne
and
push
xor
or
sub
adc
in
les
outsl
jae
sbb
cld
jp
fsub
imul
mov
mov
cmp
in
and
adc
push
sub
mov
sub
sbb
loopne
les
mov
jmp
or
ja
xchg
cmpsl
hlt
sahf
pop
mov
iret
xchg
test
ds
push
sub
orl
mov
inc
sub
pop
negb
add
pop
or
in
mov
repz
loop
arpl
sbb
daa
xchg
mov
repz
sub
sub
jle
test
cmc
mov
push
or
insb
jmp
push
sub
ss
jg
out
jnp
leave
jmp
mov
popa
cltd
scas
into
adc
pop
mov
mov
lds
ljmp
test
add
clc
shll
xchg
dec
mov
inc
insb
fstp
in
scas
std
pushf
dec
push
into
loope
xorb
out
stc
sbb
and
ja
ljmp
xor
hlt
mov
cmpsl
bound
punpcklbw
add
loopne
fcomps
mov
ret
push
push
icebp
xor
mov
dec
jge
mov
test
xchg
pop
addl
mov
mov
pop
mov
push
fcmovnu
ja
mov
out
mov
or
sub
fimull
xchg
je
push
notl
mov
adcb
ljmp
iret
sub
int
dec
jg
xlat
mov
outsb
push
lcall
mov
lods
inc
cmp
add
sub
mul
div
hlt
or
movl
lcall
movsl
inc
popa
leave
idivl
jg
xchg
fcomp
in
ret
mov
mov
mov
pop
jecxz
and
cmp
aas
add
mov
cmp
popa
shl
movsl
fcomps
gs
push
mov
pop
xor
in
loopne
ja
and
inc
or
cli
bound
out
or
mov
cmp
pop
adc
pusha
fdivrp
mov
jb
mov
lock
loopne
std
add
and
cs
mov
rcrb
cli
jo
cld
popa
sub
sub
int
sub
rclb
push
lret
pushf
ret
mov
push
xchg
cli
lock
or
inc
cmp
push
pop
in
jns
xor
inc
inc
or
cli
cmpsl
and
not
std
daa
fldt
dec
adc
jl
add
mov
ljmp
fbstp
sti
mov
loopne
add
ljmp
pop
stos
sahf
test
adc
addr16
push
insl
pop
or
push
add
sar
mov
add
and
sar
push
xchg
shl
mov
or
mov
pop
pop
in
inc
cltd
aaa
sub
les
xor
lock
loope
shl
xchg
cmpsl
jns
jne
sub
test
mov
std
mov
rcl
cmp
or
stc
or
pushl
xor
sub
pop
insb
das
dec
dec
jne
cmp
or
jb
lods
lea
xor
cld
xor
clc
mov
xchg
inc
movsl
stc
and
xor
inc
xchg
lcall
cmp
mov
loope
xchg
insl
enter
push
or
loopne
jecxz
fldl
or
push
sysret
mov
scas
fwait
incl
jo
stos
jnp
cwtl
or
stc
jb
jo
sbb
dec
je
js
mov
sbb
movsl
inc
nop
mov
orl
pop
pop
repnz
pop
push
and
out
mov
sti
fs
iret
out
sbb
scas
sub
push
jbe
or
xlat
lods
push
lods
pusha
and
mov
andb
or
jns
sbb
not
imul
mov
mov
mov
mov
xor
add
jmp
scas
pushf
and
add
test
inc
mov
das
pop
jp
das
pop
jp
mov
ds
mov
adc
into
sub
loop
cmpsb
jnp
mov
pop
push
andb
mov
insb
cwtl
mov
scas
popf
cmc
jecxz
dec
adc
mov
std
sub
cld
push
mov
mov
add
xor
repz
mov
and
ret
inc
cmp
in
loope
cmp
and
leave
es
sub
mov
in
mov
or
xor
call
add
iret
cs
jns
jp
jo
and
pop
push
lods
inc
mov
andl
ja
pop
sub
mov
cld
cmc
cmp
cli
mov
stc
gs
mov
sub
dec
push
and
addr16
jmp
std
sub
sub
xchg
pop
sbb
pop
mov
je
push
mov
push
jns
xor
lcall
lds
imul
push
dec
sbb
into
icebp
cmp
jl
out
rcll
es
jp
testl
mov
push
and
add
add
xor
push
gs
sbb
adc
sub
sub
cmp
adc
pop
ds
xchg
cmc
lods
lret
iret
cmpps
mov
sbbl
loopne
scas
js
sti
and
stc
jno
xchg
aad
adc
popa
les
cmpsl
repz
sub
inc
pop
mov
sub
int
sbb
xor
mov
mov
ja
outsl
push
ret
xchg
dec
push
fldl
icebp
adc
xchg
popf
out
and
xchg
jo
jnp
stos
outsl
sets
pop
xchg
push
pop
mov
pusha
stos
cmp
sbb
je
jmp
ja
mov
ja
jns
mov
mov
add
mov
call
pop
dec
movsl
adc
gs
outsl
cli
es
test
icebp
js
lods
fcoml
inc
add
cltd
ficoms
repz
mov
shll
sbb
or
out
and
mov
lock
in
aad
and
pop
cmc
sbb
push
jb
mov
lcall
in
shll
and
or
jns
imul
and
add
sbb
dec
inc
jo
fwait
inc
mov
pop
sbb
xor
out
mov
and
sbb
mov
stos
scas
ds
sbb
push
xor
in
pop
sub
xchg
cmp
stc
cmp
inc
mov
aas
shll
sub
fbstp
roll
and
jns
imul
jne
movsl
mov
push
mov
leave
jo
arpl
shll
leave
push
xor
aaa
mov
mov
mov
aaa
adc
leave
jnp
or
jns
lahf
arpl
pusha
ljmp
hlt
jne
dec
and
mov
xchg
adc
pop
pusha
adc
out
fcomps
dec
mov
push
sbb
ret
ficomps
xor
icebp
jg
data16
out
fsubs
int3
push
test
cs
adcb
inc
daa
or
lret
in
xchg
inc
sti
adc
xchg
test
pop
aam
push
aaa
mov
mov
or
out
fbld
pop
xchg
dec
mov
mov
rcl
xor
add
dec
loop
and
pop
jg
push
fistpl
add
movsb
xchg
xor
pop
mov
lea
and
and
ret
dec
sbb
test
ja
jp
les
loopne
pop
jmp
pop
mov
out
adc
cmpsb
mov
adcb
inc
divb
rcrl
test
dec
mov
pop
je
or
cmp
sub
inc
test
stos
xchg
popa
in
jp
push
cmpsb
push
jae
adc
rcl
sub
cmp
cs
or
jmp
xchg
dec
xchg
dec
pusha
and
ffree
negl
ret
je
int
jbe
sub
mov
jmp
js
shl
mov
jl
std
mov
es
mov
popf
out
sbb
xchg
sahf
dec
add
movb
js
out
decl
dec
shll
ret
pusha
lock
arpl
rorl
call
jnp
sub
mov
xchg
sbb
bnd
add
fsts
test
dec
inc
sbb
push
add
cmp
pop
pop
xchg
inc
test
jne
xor
or
push
mov
cmp
fcmovnu
jp
fistpl
cmc
pusha
mov
pop
into
xchg
outsl
mov
clc
mov
bound
mov
push
rolb
mov
pusha
xor
xchg
or
add
mov
cmp
testl
clc
int
inc
dec
loop
jne
adc
push
mov
ud0
push
scas
mov
sub
scas
das
or
inc
repnz
hlt
out
jbe
pushf
inc
mov
sub
pop
aas
pop
fcomi
mov
dec
pop
cmc
jne
sti
cld
push
xchg
jp
push
pop
aam
sbb
hlt
data16
pushf
push
xor
jle
xor
fildll
shll
popa
inc
in
mov
add
sbb
add
inc
sahf
adc
mov
inc
xchg
or
xor
stos
test
push
scas
adc
adc
dec
incl
pop
ret
push
lods
test
repz
inc
scas
stc
mov
mov
test
or
cltd
mov
cmp
add
ss
cmp
xchg
outsb
out
ss
outsl
pusha
mov
push
inc
push
sbb
subl
jo
std
scas
or
out
aam
shrl
xchg
jno
test
xlat
mov
rcrl
sub
ret
pusha
add
sub
jmp
push
lahf
int3
dec
or
icebp
in
lret
mov
cmc
or
dec
fwait
sbb
sahf
push
hlt
xchg
xchg
push
hlt
xchg
dec
in
xor
shlb
xor
inc
gs
fsubr
adc
mov
cwtl
or
xchg
add
js
test
fidivl
addr16
mov
sbb
xor
mov
mov
pop
insl
push
iret
sub
cmp
movsb
xchg
stc
dec
in
outsb
hlt
xchg
mov
or
sahf
xchg
push
daa
cmp
push
cmp
add
aad
cmp
sbb
cmp
ja
or
in
test
mov
or
add
mov
cmp
ljmp
aaa
mov
dec
jnp
frndint
and
or
enter
jbe
push
cmp
push
and
sub
in
sub
adc
jb
mov
repz
sbb
ds
dec
cwtl
js
adc
cli
std
pop
popa
mov
xchg
xchg
je
cmp
push
jbe
decl
in
mov
jnp
jno
fadds
mov
aam
sbb
dec
jo
sbb
fnstsw
insb
mov
mov
out
jae
mov
fistpl
out
or
lods
push
insl
loope
xchg
adc
pop
mov
sbb
cmp
jne
jp
mov
pop
adc
sbb
int
jns
and
movsl
xor
fwait
xor
test
pop
and
add
jmp
inc
pop
sub
inc
test
xor
push
xchg
add
mov
or
pushf
mov
push
push
popa
shrl
inc
fildl
loopne
mov
or
pop
scas
fstp
gs
decl
data16
and
cltd
les
movl
jbe
mov
push
ret
fdivrl
cmpsl
or
cli
mov
mov
sub
cs
pop
aam
pop
lcall
add
mov
lods
sbb
push
aam
dec
jnp
mov
lds
pop
or
sbb
sub
add
in
iret
xlat
or
or
insw
jge
mov
rclb
jmp
jb
or
add
lret
imul
xchg
xchg
cli
dec
push
and
xlat
cmp
scas
iret
fnstcw
movsl
mov
mov
cmp
imul
push
dec
jns
inc
mov
jbe
in
ja
cs
test
pop
ret
jmp
cld
mov
popf
mov
flds
push
lods
sub
push
or
enter
jns
xchg
sbb
shll
inc
dec
out
xchg
in
lea
sub
xor
pop
jp
xor
dec
lods
cmp
xchg
cmp
jns
dec
pop
pop
movsl
dec
and
mov
scas
lock
mov
cwtl
jmp
fildl
pushf
push
lock
sti
movsl
fldcw
or
imul
pop
sub
je
sbb
xor
jb
fadds
xor
mov
lret
jge
push
lret
shlb
or
iret
sbb
sub
pop
and
mov
ret
jge
pop
iret
push
mov
lock
xor
in
mov
mov
dec
fnstsw
sub
or
xchg
negb
aam
mov
mov
roll
or
push
sbb
notb
mov
sbb
shl
push
test
jne
xchg
xor
mov
dec
and
imul
je
sti
xor
mov
mov
lahf
loopne
aas
push
pop
push
adc
gs
jle
je
aam
das
outsb
insb
popa
adc
aas
or
dec
sub
sti
sbb
mov
les
lods
add
xor
inc
sub
je
cwtl
sub
repnz
mov
add
sbb
push
or
or
xchg
pop
mov
jle
imul
ss
pop
mov
cli
cld
push
sbb
or
enter
dec
shll
mov
sbb
mov
push
fcmovu
jnp
test
ljmp
fsub
das
add
mov
cltd
test
sub
into
jge
cmpsl
insl
mov
lcall
jecxz
adc
aad
inc
jne
jl
mov
out
jge
fimuls
shlb
ficoml
stos
gs
push
mov
inc
cmp
fs
sbb
pop
stos
lcall
loop
jp
push
adc
ret
mov
dec
xchg
xlat
push
sub
jne
hlt
into
lock
test
sub
scas
psrad
jl
rorb
mov
pop
pop
add
xchg
notb
dec
mov
inc
jnp
mov
pop
cmpsl
jnp
sbb
out
test
ss
inc
xor
aam
cld
mov
pushf
enter
bound
mov
iret
mov
mov
or
sbb
mov
test
sbb
test
out
mov
push
mov
jg
mov
fsubr
jo
mov
sbb
pop
push
inc
scas
inc
add
add
jo
jbe
das
pop
push
xor
push
dec
mov
mov
xchg
dec
mov
push
test
inc
fnstcw
iret
out
ret
shll
push
mov
shlb
jo
shlb
in
inc
push
lret
sbb
loope
xchg
fnstsw
push
jnp
mov
xor
mov
or
push
lods
pop
repz
mov
sub
cltd
jo
mov
scas
mov
movsl
dec
ret
or
adc
cmp
pop
jo
xor
mov
sbb
jbe
rcr
jl
sbb
out
shrb
cmpsl
scas
xor
mov
nop
bound
incb
imul
insl
cmp
jge
or
call
pop
jecxz
xor
jle
jae
sub
xor
adc
add
mov
xchg
mov
dec
rolb
jb
cmp
gs
or
jnp
stos
outsb
mov
inc
test
or
xchg
push
and
jns
movsl
cli
push
pop
sub
stos
dec
xor
inc
imul
jbe
adc
jg
jb
adc
add
lea
mov
sti
add
xor
mov
pop
mov
push
bound
dec
test
add
fs
jbe
sbb
jg
jmp
jle
xor
mov
and
xchg
fsubrl
pop
fcoml
cs
add
xchg
shr
xchg
lods
scas
nop
inc
sub
cmpsb
dec
adc
jbe
repz
aas
pushw
adc
sbb
mov
jns
mov
aam
orb
push
mov
test
rorb
adc
jno
add
divl
idivb
jecxz
inc
xor
icebp
outsl
jecxz
fstps
ret
insb
or
inc
cmp
push
int
cmp
xchg
dec
sub
ds
mov
mov
lret
pop
add
pop
xchg
pushf
int
loop
xchg
cmp
scas
inc
add
stos
add
or
loop
xor
or
dec
sub
fisttps
leave
xchg
jl
sbb
leave
mov
loope
inc
pop
adc
mov
cmpsl
pop
imul
stc
nop
pop
pop
out
cmpsb
mov
icebp
mov
push
mov
stos
jmp
icebp
jno
cltd
pop
push
es
push
out
lcall
jae
call
out
stos
outsl
out
and
insl
movsl
dec
jg
mov
xor
mov
cmpsb
call
and
es
mov
call
fldenv
stos
push
cwtl
pop
add
sbb
xor
mov
mov
cmc
sub
mov
std
sbb
sbb
shlb
mov
ja
mov
fcomps
call
mov
xchg
mov
repnz
sbb
jo
jp
lods
cmp
insb
push
out
push
insl
aas
test
cmp
movsl
xor
aaa
adc
push
les
dec
movsl
divl
cmp
rorb
mov
in
fcmovu
fsubr
dec
cmp
outsb
ret
iret
and
push
test
cmpsb
push
ficomps
or
adc
mov
and
cmp
adc
fdiv
stc
shrl
es
sbb
xchg
xlat
jle
pop
scas
xor
mov
dec
jmp
lock
jbe
xchg
es
out
adc
test
cmpsb
pop
xchg
sbb
jbe
cmc
orl
clc
in
pop
inc
inc
jmp
xchg
outsl
cs
stos
fwait
repnz
subl
push
cmp
faddl
aaa
jmp
xor
cmpsl
rol
outsb
mov
xor
xchg
das
insb
jae
add
insl
sub
addl
push
sbb
jbe
jl
dec
mov
popa
or
in
add
xor
inc
mov
vmwrite
insb
mov
popf
andl
add
repnz
cwtl
mov
cltd
test
xchg
add
cmpsl
xor
jge
xchg
stos
or
imul
sbb
movsb
or
sub
lods
or
push
sbb
lock
pop
aam
out
mov
mov
xchg
dec
inc
arpl
jge
push
fwait
ja
mov
jg
jb,pn
xor
or
or
jns
sbb
out
out
dec
adc
mov
int
aaa
mov
inc
pop
mov
jno
sbbb
or
aam
or
adc
lea
xchg
pop
pop
jb
das
ret
or
clc
mov
jo
shl
mov
rclb
movsb
sbb
ss
inc
les
sub
and
push
repnz
or
xchg
ds
cmp
add
pop
mov
mov
js
cli
ss
dec
add
mov
inc
mov
mulb
xchg
pop
dec
test
or
add
movsb
enter
leave
fldcw
adc
lea
jmp
xor
mov
cmp
in
sub
fs
fildll
inc
lcall
into
leave
jl
sbb
mov
fs
lret
daa
dec
cs
inc
xchg
mov
loope
pop
or
mov
insb
push
test
int3
stc
hlt
jecxz
cmp
popl
mov
push
lods
pop
xchg
sbb
jmp
dec
xor
idivb
fwait
push
fwait
mov
mulb
xchg
adc
loope
push
lret
jae
mov
gs
push
pop
push
js
mov
sub
pop
addl
mov
fbld
les
mov
adc
push
or
mov
in
stc
ud0
xchg
sbb
movsb
dec
sub
sbb
cmp
leave
mov
add
xchg
inc
pop
or
ja
aaa
mov
adcl
mov
cwtl
lret
or
adc
jae
inc
xchg
and
pop
ljmp
ss
and
mov
sbb
dec
and
mov
loope
sbb
or
pop
data16
sbb
sbb
inc
dec
ja
xchg
sbb
sbb
xchg
adc
dec
lret
into
mov
orb
jb
and
inc
inc
or
lea
xchg
aas
mov
rcrb
dec
jp
xchg
lods
inc
neg
shl
cmpsl
imul
test
mov
aad
lock
int3
lcall
cltd
mov
xor
mov
cld
push
lds
sub
xlat
lret
inc
arpl
adc
jl
cltd
shlb
adc
aad
aaa
mov
lahf
xor
add
fwait
mov
inc
pop
push
push
mov
mov
ret
adc
jns
xchg
js
popf
popf
lret
pop
fsubrs
call
dec
lock
data16
inc
mov
clc
adc
cmp
imul
in
cmp
xor
arpl
fwait
mulb
mov
outsl
daa
int
jl
lea
xchg
sbb
mov
cmc
inc
xor
cli
push
cmpsl
movd
into
lock
nop
cwtl
sbbl
outsl
ret
push
xorb
pop
outsb
add
jno
gs
or
jns
push
jmp
and
cmp
mov
xor
ss
movsb
out
mov
mov
cmc
pcmpeqb
sub
call
std
push
dec
out
xorl
lods
popf
push
lock
test
and
mov
jae
inc
pop
js
leave
push
adc
out
dec
jecxz
mov
or
in
popa
xor
and
loop
adc
add
adc
out
shrl
pushl
xorl
fmuls
faddl
or
lea
andb
dec
inc
adc
repnz
out
and
adc
in
into
aas
pop
pop
mov
stc
int3
add
movsl
and
xchg
dec
push
fcmovbe
loop
gs
aas
insb
inc
mov
xor
negl
mov
mov
adc
xchg
jge
shll
rcl
movsl
jns
mov
and
cld
icebp
push
adc
int
cwtl
inc
push
add
es
fcom
sub
push
orb
ret
ja
sub
cltd
pop
jb
sub
push
lret
cltd
insb
adc
sbb
adc
iret
cli
add
jl
daa
jne
inc
lea
lahf
fcoml
loopne
aaa
cmpsl
xchg
sarl
push
mov
fisttpl
jle
dec
xchg
mov
pop
mov
cli
push
mov
jl
cld
or
lds
in
xlat
mov
pushf
add
xchg
add
jp
push
xchg
insl
xchg
xchg
adc
loope
mov
sbb
outsl
xchg
mov
add
xor
mov
stos
mov
xchg
cmp
xchg
adc
imul
int3
xchg
ja
add
test
int
fdivrs
and
and
lock
iret
pop
add
lahf
xchg
dec
pushf
add
mov
mov
sbb
int3
push
lock
clc
pop
test
cli
aaa
xlat
sub
push
sub
xchg
rcll
push
lcall
pop
imul
dec
sub
in
das
sub
aam
fsubs
xor
fsub
dec
add
ffreep
jmp
loop
call
jne
xchg
pop
decl
cmpsb
sbb
cli
adc
insb
fnstenv
loop
jns
pusha
pushf
push
rcrb
jg
jecxz
jnp
lea
xchg
sub
out
dec
imul
lret
sub
mov
aas
push
jbe
cmp
or
arpl
lret
cwtl
jbe
mov
jns
dec
aaa
xchg
or
out
loop
rcrl
mov
ret
popf
inc
out
into
xchg
cld
lods
jmp
jo
orb
lret
jns
cltd
add
stos
pop
movsb
push
mov
shll
push
outsl
pop
add
in
sub
lds
cmp
adc
into
imul
sbb
orb
adc
add
pusha
push
xor
ret
cmp
popf
push
xor
xlat
daa
mov
lret
repnz
movsl
adc
jge
dec
ret
aad
sbb
xor
sbb
loopne
pop
js
xlat
sub
icebp
popa
push
ljmp
mov
adc
adc
mov
sub
jb
or
in
sarl
popf
sbb
mov
testl
push
mov
movsb
rorl
das
add
mov
jnp
pop
dec
mov
fadds
scas
or
jns
sbb
and
xchg
mov
in
pop
or
push
insb
mov
sbb
adc
movsl
std
call
mov
adcb
dec
pop
ds
mov
jb
cmp
xchg
mov
ret
call
cli
lea
cwtl
lods
dec
cwtl
xchg
pushf
mov
ds
xchg
and
or
sub
js
sti
out
call
jnp
xor
mov
push
in
aam
sub
int3
mov
xor
xchg
sub
jno
cltd
adc
mov
cmp
mov
out
adc
push
in
mov
in
mov
adc
mov
cmp
and
mov
sbb
mov
js
std
sbb
loop
cmc
xlat
pop
lret
xchg
fsubs
jge
xchg
pop
lea
mov
nop
xchg
pop
mov
cmpsb
xor
shrl
pusha
in
sahf
mov
jmp
shll
clc
dec
test
nop
add
std
xorl
dec
push
push
icebp
in
dec
xorl
ds
jns
xchg
loopne
cmp
xchg
nop
and
xchg
outsl
out
stos
xchg
roll
xchg
mov
pop
fnstsw
sub
sti
call
pop
xor
ss
mov
xchg
pop
rol
xor
jmp
cmp
cmp
mov
push
xor
dec
add
jmp
push
and
js
inc
aad
aam
lret
call
ljmp
data16
and
repnz
jnp
jnp
or
pushf
arpl
inc
ja
ljmp
into
inc
dec
pop
mov
call
ja
pop
push
shlb
jge
jecxz
xchg
dec
inc
jg
loope
rol
dec
int
jge
inc
leave
sub
inc
inc
dec
cmc
xchg
imul
dec
fsubrl
push
add
int3
addb
cmpb
imul
mov
lds
cwtl
fsubrs
mov
cmp
sbb
cmc
dec
and
dec
aam
inc
call
test
pusha
add
hlt
fwait
add
xchg
mov
int
adc
mov
add
sub
sbb
fisttpl
xor
mov
nop
xor
push
inc
scas
jnp
in
mov
cmp
add
mov
mov
mov
adc
and
push
rorb
cmp
shlb
jne
mov
mov
js
test
stos
inc
adc
mov
mov
sub
jmp
es
mov
xchg
das
shr
mov
jl
xchg
das
repnz
push
les
inc
icebp
leave
sub
mov
push
cwtl
or
fadds
sub
and
push
lcall
out
xchg
ss
add
xchg
mov
lret
cmp
push
cmpsb
jno
popa
xchg
mov
addr16
sub
sbb
or
xorb
mov
dec
ljmp
lea
push
orl
fcoms
push
jmp
dec
fistpl
inc
fnsave
int3
lret
scas
dec
scas
divb
fistl
in
jecxz
loope
cmc
jecxz
jns
shlb
pop
gs
xorl
pushf
adc
loop
inc
push
nop
mov
or
mov
inc
mov
and
fwait
sbb
out
ljmp
ja
sbb
aam
cmp
xchg
aad
divb
pop
les
ss
aad
fnstcw
std
out
inc
mov
int3
repnz
add
aas
mov
mov
mov
mov
movsl
jns
sbb
cmp
in
pushf
mov
cmc
lea
mov
mov
repnz
stc
and
shl
mov
orl
pop
std
test
int
data16
xchg
scas
push
jne
enter
jb
jns
jns
sbb
les
test
jg
fwait
sub
pusha
push
cli
cmpl
jo
sbb
jo
addr16
add
aas
testl
jmp
sub
movsb
scas
hlt
imul
pop
test
insb
jg
jmp
pop
out
movsb
jmp
test
lods
mov
lcall
scas
mov
imul
sbbl
mov
mov
dec
jle
in
inc
mov
movsb
xchg
push
jmp
push
push
aad
mov
filds
dec
xchg
adcb
jmp
jmp
xor
jbe
add
lret
into
jbe
popa
into
or
push
xor
lcall
int3
sbb
in
cld
dec
and
mov
jg
dec
aaa
xchg
rorb
xchg
xchg
jns
and
xor
cwtl
sahf
push
adc
push
push
or
xchg
push
rcrl
clc
xchg
aaa
jns
loop
aaa
pop
xlat
sub
pop
jl
jle
cli
mov
pop
lea
rorl
push
clc
xor
xorl
pushf
cmp
fst
rcrl
xchg
inc
mov
fiadds
pop
icebp
rorb
mov
icebp
icebp
or
test
cmp
jae
and
mov
lret
mov
add
jo
add
and
imul
pushf
mov
out
and
inc
mov
xchg
jo
dec
pop
and
mov
sub
hlt
and
addl
std
lahf
sbb
mov
push
cwtl
ss
ficompl
jmp
out
outsl
jmp
call
jl
jb
adc
adc
arpl
jbe
mov
sub
dec
scas
rol
xlat
fsubr
inc
lods
rolb
aam
lods
dec
or
jnp
mov
mov
cmp
sub
les
mov
sub
push
add
xor
clc
test
in
popa
xor
sub
mov
sub
dec
orl
repnz
pop
lock
dec
addl
mov
inc
pusha
xlat
mov
and
orl
push
insb
sub
adc
xchg
pop
xchg
ret
mov
xchg
sbb
pop
fiadds
enter
rolb
stc
xor
lret
lret
jnp,pt
mov
or
pushf
movswl
iret
neg
iret
push
mov
sbbb
or
dec
add
scas
out
and
rolb
bnd
das
loope
fs
jle
cmpsb
cld
jecxz
inc
es
sahf
pop
xchg
pop
repz
xchg
mov
es
inc
xlat
or
fists
sub
jl
lds
pop
mov
inc
dec
jle
loop
push
rcl
and
aam
lcall
sbb
dec
fstps
xchg
es
outsl
jmp
jmp
call
and
orl
hlt
arpl
out
fwait
adc
aam
imul
mov
mov
fmul
xor
dec
xchg
lret
leave
ljmp
dec
das
xor
adc
outsl
jne
sbb
out
mov
inc
scas
mov
fs
clc
lahf
iret
mov
mov
and
push
bound
sub
jp
shrb
push
cld
stc
outsb
nop
jle
popf
rcll
out
in
loope
mov
movsl
xchg
sub
or
dec
cmp
fs
mov
insb
adc
movsl
pop
fsubs
scas
inc
pop
jmp
ja
xchg
scas
jp
jle
ja
xchg
orl
pop
dec
les
ffree
insb
les
mov
cltd
ja
push
inc
gs
daa
daa
ficompl
fcmovnb
int3
jbe
jae
popf
inc
test
out
pusha
push
addl
pop
imul
adc
and
mov
movsl
mov
xorl
int3
lcall
cmc
cmpsb
in
negb
sub
shl
cmp
mov
mov
or
aad
pop
mov
aaa
xchg
mov
jno
sub
stos
adc
adc
xor
dec
outsl
sbb
lahf
or
jno
sahf
mov
leave
stos
outsl
push
xor
sahf
outsb
adc
jle
ljmp
mov
in
push
jb
mov
push
push
dec
inc
cmp
ljmp
xorl
icebp
ret
add
cli
movsb
xchg
repnz
add
orl
mov
push
ds
pop
insl
pop
mov
inc
mov
jbe
addb
mov
cmp
pop
push
cmpsl
flds
mov
push
sbb
mov
in
mov
ljmp
ja
imul
mov
mov
mov
movsb
jnp
popf
push
inc
or
loope
and
mov
in
dec
push
data16
rcrl
fstp
dec
js
or
pop
nop
cmpsb
gs
sub
rclb
enter
xor
push
sbb
insl
repnz
jmp
jle
adc
mov
add
scas
es
arpl
mov
jno
cmp
sub
push
dec
call
jns
sti
testb
scas
sbb
dec
jnp
adc
sbb
push
mull
cmp
sar
addb
fwait
and
adcl
and
mov
inc
test
mov
add
mov
addr16
mov
lret
add
movsb
dec
jg
push
cmc
mov
push
jle
inc
xchg
out
icebp
mov
aas
dec
jp
jne
leave
shl
add
or
push
push
xorb
into
inc
fsubl
test
xchg
int
out
mov
ljmp
or
divb
scas
mov
mov
and
imul
mov
cmc
and
sub
cltd
outsb
mov
adc
adc
in
test
mov
test
or
xchg
cmc
scas
repz
insl
shll
and
pushf
ljmp
cmc
hlt
cmp
sub
mov
mov
and
xchg
out
repnz
push
clc
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
xor
add
add
imul
add
mov
mov
mov
cmp
jb
mov
mov
xor
add
imul
jmp
daa
add
in
cmp
push
xchg
adc
cmp
jp
pop
jp
mov
repz
jl
ja
shrl
stos
stos
jbe
shlb
cmp
cmp
mov
mov
xchg
roll
lds
pushf
shlb
sbb
sub
mov
push
sahf
pop
inc
or
insl
ja
lcall
xchg
cmpsb
stos
xchg
and
fisubs
lahf
aam
iret
loop
mov
rcr
and
jmp
cmp
out
pusha
mov
sbb
xchg
test
xchg
pop
out
dec
iret
pop
sahf
incb
dec
fistpll
outsl
mov
pusha
mov
xchg
push
imul
mov
cmpsb
mov
jno
push
jmp
jg
lock
mov
jp
scas
pushf
aam
add
or
cmp
out
leave
push
clc
aam
mov
or
mov
jp
shlb
dec
push
inc
popf
enter
or
xchg
mov
lret
shrl
in
in
int
add
and
adc
xchg
sbb
inc
aas
inc
push
mov
ljmp
add
lock
je
inc
push
xor
inc
scas
add
fldenv
lods
mov
xor
dec
xlat
jnp
sbb
imul
mov
cmpsl
aad
popf
and
fstpl
into
cmp
pop
cmp
aaa
mov
in
hlt
mov
push
xchg
mov
cmp
jne
mov
sbb
push
in
dec
loop
inc
ret
sbb
mov
add
mov
push
xchg
movsb
inc
js
mov
mov
xorb
nop
xchg
push
cmc
sub
xchg
getsec
les
mov
icebp
fcompl
cmp
inc
xor
int
dec
jbe
xchg
mov
inc
out
in
mov
sub
sbb
mov
sub
ret
and
dec
imul
popa
lods
je
bound
call
inc
fwait
dec
mov
mov
and
leave
cmp
mov
push
adc
cmp
sti
repnz
daa
cltd
nop
lods
js
clc
adc
jmp
sub
jl
enter
adc
mov
jmp
xchg
and
sub
push
movsb
shrb
push
cwtl
rorb
sbb
mov
adc
inc
adc
jb
fcomps
xor
or
aam
mov
adc
int3
inc
scas
xchg
push
mov
push
test
rolb
jb
mov
cld
mov
mov
into
push
pop
or
sbb
push
xchg
imul
jg
adc
jnp
mov
rsm
out
leave
inc
repz
es
jp
cmp
jnp
sti
xor
adc
xchg
ds
in
dec
sbb
inc
jae
insb
jne
es
or
dec
std
push
mov
inc
shll
fsubs
rol
int
xorps
sbb
jbe
sub
add
cmpsb
cmp
sbb
test
sub
jns
movsl
inc
or
mov
push
jae
lock
outsl
in
out
jae
adc
rorb
lret
adc
lahf
rclb
std
dec
ret
mov
xchg
call
enter
pop
dec
mov
dec
les
inc
in
aam
daa
mov
outsl
stc
enter
test
sbb
data16
cmp
test
jp
pusha
mov
jae
cmp
arpl
gs
enter
sbb
sub
pushf
addr16
stos
and
cmp
add
push
adc
repnz
push
ja
rclb
decb
or
cmp
mov
push
xor
stos
sub
push
adc
cmp
jmp
mov
repnz
xor
out
daa
popf
sub
sti
js
fcmovu
dec
pop
mov
add
fstpl
dec
dec
movsb
push
or
mov
dec
adc
into
pop
xlat
cmp
xor
mov
fidivl
ss
jno
pop
test
arpl
push
mov
divb
rorb
dec
insb
add
mov
test
add
test
jg
xchg
dec
pop
pushl
sbb
and
ror
repz
loope
or
fcmovne
call
adc
test
clc
aam
fwait
dec
out
inc
jae
dec
mov
sub
jae
mov
lods
fisttpl
cmp
add
fsubl
jecxz
mov
push
rcrl
movsl
pushw
xor
insb
mov
dec
icebp
push
mov
outsb
xor
fldl
les
mov
mov
loope
fstp
adc
and
xchg
inc
add
mov
sbb
addr16
jge
adc
xlat
inc
pusha
ds
jle
push
xchg
sub
out
jb
lret
or
aad
mov
fsubp
push
mov
lea
cmc
push
xchg
aaa
cmpsl
scas
dec
push
cld
pop
rclb
out
dec
repz
jl
aam
lretw
stc
bound
aad
stos
aam
in
aas
mov
push
dec
pop
xor
inc
mov
ss
scas
mov
jo
mov
outsl
pushf
rcrb
stos
sub
scas
divl
add
insl
sub
pop
fisttps
adc
out
icebp
sti
adc
lret
inc
xor
roll
in
xor
xor
in
sbb
inc
outsl
jg
into
mov
shl
nop
hlt
cmp
and
or
fwait
dec
and
jbe
pop
das
sbb
pop
loop
push
sub
mov
in
jge
ljmp
xchg
popf
daa
outsl
ret
jmp
or
xor
add
mov
test
fistps
movl
rolb
and
fsubrs
test
pop
stos
jg
cmpsl
lock
sub
inc
imul
jnp
push
push
xchg
leave
inc
test
adc
xchg
lret
xchg
insb
pop
xor
inc
xchg
in
sbb
andb
lahf
ret
cmp
shl
daa
and
and
repz
ficoms
out
add
mov
sub
and
pop
movsb
not
xorb
iret
jle
lds
mov
jge
push
fmull
popa
shr
sub
cwtl
idivb
and
out
imul
mov
inc
sbb
test
sub
int3
mov
cmp
sbb
arpl
aaa
je
pop
cmp
mov
icebp
xor
cwtl
fisttpl
adc
sti
jl
ss
jb
mov
fs
movsl
xchg
hlt
addr16
mov
xor
pop
aad
xlat
pop
pushf
fnstcw
cmpsb
cmp
icebp
lret
xor
mov
or
xchg
enter
andl
in
xor
dec
movsl
clc
push
imul
in
es
into
dec
xchg
xchg
mov
and
adc
mov
mov
and
mov
and
ljmp
lcall
lret
add
sub
push
aas
fsts
cmp
es
addb
dec
mov
or
ss
inc
icebp
mov
insl
out
xor
frstor
inc
sbb
sbb
sbbb
outsl
cwtl
push
pop
mov
mov
adc
lods
jno
hlt
inc
dec
xchg
out
add
lcall
scas
mov
mov
aad
shrb
mov
dec
sbb
mov
inc
jns
not
mov
lret
adc
movsl
mov
sub
sbb
pop
xchg
mov
xchg
xchg
xchg
movsb
sarb
dec
aas
js
dec
ret
inc
cmp
mov
pop
xchg
out
iret
inc
sub
cmp
mov
mov
lcall
xchg
fistps
add
ljmp
cmpsl
mov
enter
push
ja
mov
and
add
push
or
xor
mov
xor
pop
repnz
mov
lods
lcall
mov
dec
inc
pop
in
test
pop
add
into
adc
xor
inc
cltd
loopne
jne
push
mov
mov
scas
ds
inc
push
int3
inc
push
mov
jg
cmp
inc
jae
sbbb
out
jge
enter
sbb
mov
loopne
sbb
xchg
popf
mov
add
fnsave
sbb
and
or
cs
adc
jmp
cmp
xlat
adc
mov
push
test
mov
loopne
and
out
xor
xlat
inc
aaa
pop
adc
inc
cmp
fdivl
jle
pop
rcrb
daa
sub
lahf
test
out
test
cmp
stos
fistl
pusha
dec
ret
mov
jmp
cld
clc
jp
ljmp
ficoml
and
xor
mov
adc
clc
pop
push
arpl
xor
dec
adc
inc
mov
iret
mov
and
mov
in
xchg
dec
cwtl
or
mov
stos
pushf
mov
leave
das
push
dec
sub
mov
sbb
sub
rorb
xchg
pop
cmpsb
sahf
call
push
das
dec
cmp
fdivs
jge
lret
pop
fbld
jge
mov
cltd
cmp
dec
test
lcall
mov
mov
lret
outsb
icebp
pop
pop
idiv
cmp
int
stc
rolb
arpl
adcl
popf
pop
imul
and
shlb
xchg
outsb
xchg
ret
mov
sub
test
pushf
repnz
cmp
jl
out
rcrl
and
pop
xor
cmc
repz
mov
int3
mov
pop
repnz
sub
mov
std
mov
add
push
push
mov
mov
xchg
stc
adc
bnd
das
call
ret
jns
pop
mov
stc
xor
push
pop
add
imul
insl
and
xor
cs
push
lods
cmc
lods
xor
adc
xchg
push
jg
test
lret
jnp
test
in
jo
jns
mov
pusha
imul
inc
adc
andl
sbb
leave
inc
lods
cmpsl
mov
adc
ffree
jns
stc
ss
rcl
push
dec
push
and
and
pushf
addr16
dec
loopne
push
cld
mov
xor
std
adcb
out
cmp
je
imul
leave
cld
mov
sbb
leave
in
dec
testl
fbstp
inc
andb
mov
adc
in
fisttps
insb
or
sub
pop
push
adc
cmp
jmp
outsl
jne
test
mov
clc
inc
xor
lock
jb
fnstenv
xlat
fidivs
pop
inc
ljmp
xchg
jg
js
arpl
lcall
hlt
cmp
movsb
pop
cld
std
dec
dec
outsl
push
fwait
add
cmp
imul
jecxz
pop
xor
mov
push
xchg
inc
pop
xchg
and
imul
sbb
je
inc
sub
cmc
jmp
orl
and
sbb
dec
add
xor
out
rol
repnz
imul
lret
or
xchg
stc
std
lret
out
adc
negb
outsb
cltd
pop
cs
mov
and
idivb
xchg
add
mov
dec
pop
movsb
insb
adc
dec
jl
mov
fwait
or
mov
xor
rcrl
jo
sbb
aam
data16
pop
rolb
add
xchg
loope
and
inc
add
adc
sub
xchg
ja
mov
ror
test
push
push
dec
cmp
jne
push
testl
insl
rcrl
mov
cmpsb
jne
lea
fsubrp
push
jp
add
cli
cmpsb
imul
jno
xor
vpand
xchg
push
ljmp
cltd
mov
inc
pop
inc
sub
push
push
mov
jbe
jo
push
jl
xchg
stos
jmp
subb
pop
mov
mov
call
lds
push
push
ja
stos
adc
imul
js
sbb
test
mov
fsubrs
sub
or
jmp
add
in
and
mov
add
mov
jp
arpl
sub
aad
bound
sub
mov
xor
mov
push
lock
lods
mov
in
xor
rorl
sub
rcrl
scas
push
aaa
inc
pop
cmc
sub
popf
in
add
dec
scas
daa
add
mov
lret
adc
imul
nop
lret
stc
out
push
or
sbb
sarl
rclb
gs
iret
inc
jmp
or
pop
pop
inc
repz
out
inc
das
pop
out
sub
popf
cmpsb
jbe
jge
stc
sbb
cmp
icebp
mov
iret
fstps
xor
imul
push
and
cwtl
lds
mov
xchg
mov
sbb
jp
ljmp
and
mov
outsl
daa
bound
jne
cmp
inc
jne
mov
in
dec
shlb
fwait
sub
mov
add
nop
les
sbb
xchg
jne
lahf
jg
jmp
sar
jo
jb
call
sbb
lret
cs
fcoml
xchg
push
push
lods
into
pop
aas
std
subb
insb
pop
cwtl
loope
stos
pop
pusha
arpl
adc
add
mov
divb
test
adc
das
std
ret
int3
fistpl
dec
iret
mov
bound
sbb
adc
call
jae
or
out
xchg
test
lds
mov
jg
push
shlb
lret
fwait
push
and
push
sbb
fistpl
jp
fstpl
lods
sub
movsb
outsl
cld
jge
cmpsb
roll
bound
add
sarl
rclb
inc
fwait
rorl
in
lret
add
xchg
mov
push
stc
add
push
and
scas
fwait
mov
push
das
adc
ljmp
out
cmp
inc
mov
push
mov
int3
cmp
jb
cmp
pop
jnp
add
cwtl
call
mov
iret
adc
clc
jmp
loope
enter
dec
inc
cltd
push
mov
pop
and
mov
or
cmpsl
or
stc
jg
cmp
shll
pop
push
sub
push
std
in
pusha
nop
pop
call
stc
ja
sub
mov
popa
daa
lods
mov
addr16
gs
ja
ljmp
jmp
push
mov
adc
mov
rorb
or
inc
sbb
insl
popf
dec
sub
or
mov
int3
add
jne
addb
or
pop
xchg
xor
mov
pop
pop
jno
dec
je
xor
jo
xor
or
dec
lock
xchg
in
enter
and
cmp
jb
ds
neg
sahf
sbb
push
mov
arpl
sahf
sti
xor
fidivl
in
sahf
mov
rolb
jp
idiv
sub
das
inc
test
inc
mov
outsl
dec
enter
sbb
mov
shll
mov
jns
inc
xchg
sbb
lea
std
hlt
adc
sub
movsb
out
jl
lock
arpl
in
add
push
js
lods
imul
adc
iret
adcl
mov
mov
mov
lcall
mov
dec
xor
inc
mov
call
nop
sub
fiadds
pop
dec
divps
mov
jo
mov
inc
xor
add
mov
jmp
fistl
jbe
mov
push
inc
pusha
inc
inc
dec
mov
mov
mov
xchg
rorl
iret
jnp
and
fsubrl
lret
mov
out
es
daa
repz
cmpsb
mov
mov
or
pop
test
or
xor
adc
pop
ja
jmp
fistpl
roll
and
pop
cmp
xor
sbb
mov
int3
pop
lods
outsb
add
sub
add
xor
sbb
test
jge
andl
mov
and
ljmp
add
out
push
cmp
dec
out
or
call
out
xor
xor
mov
subb
adc
adc
sbb
in
xchg
loopne
ficoms
sub
push
lds
mov
inc
cwtl
pop
xchg
pop
out
pushf
aad
fnsetpm(287
push
movsl
data16
cmp
das
movsb
out
xchg
lcall
aad
rorl
testl
scas
addr16
stos
xchg
fs
jno
or
aas
jne
push
bound
or
add
xor
sub
push
xchg
xor
popw
inc
das
and
in
mov
fidivl
jns
fwait
jl
daa
adc
rcrl
and
adcl
add
insl
call
or
ss
ljmp
cltd
adc
push
mov
js
dec
lods
dec
dec
sub
notb
iret
dec
in
adc
sbb
inc
sbb
ss
push
lret
mov
pop
jb
fcmovne
mov
and
sub
jae
lret
mov
out
add
sarb
sub
dec
add
pop
test
adc
ret
jl
mov
and
in
or
stos
inc
out
movsl
adc
cmp
shrl
in
push
fldl
pop
outsl
in
and
xor
add
inc
das
in
cmp
lea
mov
cli
aaa
mov
pusha
and
jns
sub
ds
jno
inc
ficompl
fnstenv
ja
lret
ret
mov
int3
pop
fwait
sub
call
lea
push
pop
stos
lods
push
pop
inc
mov
ljmp
dec
xor
out
inc
in
adc
dec
adc
inc
daa
lds
daa
and
scas
shlb
daa
xchg
and
jge
fs
popa
xor
int3
out
push
push
adc
xchg
mov
xorl
arpl
add
xor
push
lods
mov
bound
inc
iret
jmp
insl
and
and
adc
jbe
mov
mov
imul
pop
pop
mov
in
lods
fidivl
imul
pop
mov
dec
das
mov
mov
hlt
push
cmp
out
outsl
sti
or
dec
add
mov
arpl
das
mov
push
data16
inc
mov
das
jp
pop
dec
fiaddl
mov
scas
xlat
bnd
adc
lods
mov
mov
sbb
mov
mov
das
aad
mov
push
rol
and
cli
imul
pop
jnp
xchg
add
mov
mov
or
fistl
sahf
andl
mov
fwait
stos
insb
xlat
stc
clc
push
sub
test
int
stc
inc
pop
enterw
sub
sub
std
or
dec
mov
xchg
ds
mov
es
cmp
into
cmp
push
nop
dec
jl
mov
inc
adc
inc
cmc
clc
pushf
mov
repz
sbb
pop
or
push
aad
xchg
arpl
push
cmp
in
cld
push
xchg
push
adc
inc
mov
push
and
add
ret
out
int3
add
cmp
push
cmc
push
mov
in
int3
icebp
imul
ret
xchg
dec
mov
int3
test
insb
in
cli
icebp
xor
mov
mov
test
or
dec
stos
test
xor
pop
scas
pop
and
test
fsubrl
pushf
xchg
test
clc
mov
mov
daa
sti
push
flds
pushf
sub
clc
movsb
pop
je
mov
dec
aad
aaa
adc
jnp
cmc
int
xor
mov
dec
mov
fstpl
or
ret
add
in
adc
push
int3
cmpsl
cmpsl
pushf
jl
pop
add
pushf
popa
push
jecxz
psllq
les
xor
rcrb
push
mov
dec
push
jo
ja
in
repz
sbb
out
fisubs
gs
sahf
enter
inc
stc
sub
mov
push
mov
aad
mov
loop
outsb
mov
xor
sbb
push
push
jge
pop
adc
lods
inc
ja
in
mov
inc
fdivrl
in
xchg
pop
mov
and
stos
iret
jae
call
add
shll
lahf
ds
shll
add
pusha
sbb
lock
or
xor
test
jno
pusha
xor
mov
lds
cmpb
inc
or
or
dec
mov
filds
or
xchg
dec
mov
fwait
xchg
lea
nop
popa
sub
call
stos
pop
cmpsb
test
or
mov
hlt
loop
or
fmull
rorb
fcomip
stos
mov
sbb
pop
push
mov
push
add
test
out
pushf
xor
jbe
out
xor
cltd
int3
ret
fwait
popf
into
fistpll
or
dec
xor
lahf
outsl
jge
xor
repz
push
or
mov
lahf
enter
fld
psubd
insl
sub
pop
mov
adc
imulb
sub
mov
pop
mov
iret
mull
or
out
sub
adc
dec
mov
ret
mov
negl
cli
and
mov
sbb
sub
and
in
lods
sbb
mov
into
xchg
cmp
repz
sbb
addr16
clc
popa
rorl
or
fcmovu
mov
mov
jbe
lds
inc
sub
mov
or
push
ffree
mov
mov
inc
jmp
mov
pop
push
mov
lods
loopne
mov
xor
or
fimull
or
mov
mov
inc
or
movsl
sbb
repnz
inc
push
mov
xchg
xor
push
sbb
pop
pop
mov
ret
imul
cmp
jno
sahf
ss
and
adc
out
scas
andps
and
push
lret
cmp
inc
in
pop
int
fstps
dec
xor
outsb
inc
imul
or
xorb
das
clc
inc
push
sarl
and
scas
and
cld
adc
or
cli
adc
lods
fdivs
push
dec
sub
les
or
sahf
push
push
push
add
pmaddwd
and
push
sbb
js
mov
xchg
pop
pusha
pop
add
inc
push
aas
push
lock
movsl
pop
loop
iret
cwtl
mov
xor
mov
inc
push
jo
pop
add
sbb
adc
arpl
clc
test
pop
movsl
cmc
popa
adc
fucomp
push
mov
and
or
jo
dec
push
sub
dec
imul
mov
xor
cmpb
mov
jae
push
fwait
or
call
sbb
decb
xor
daa
das
pop
scas
push
rorb
subb
cmp
jb
mov
into
inc
jbe
addr16
clc
and
fnsave
xchg
daa
out
gs
xor
lret
fists
push
sub
jbe
jns
aaa
pop
negl
jle
lds
fcompl
sti
fidivs
shlb
cmp
sub
push
cmp
sbb
dec
rclb
les
xor
addr16
loop
adc
fs
adc
sti
lock
or
andl
mov
mov
jg
movl
lret
xor
xchg
es
call
aaa
movsl
pop
push
adc
jp
mov
mov
jl
push
repnz
jp
push
push
fsubrl
cmp
jmp
xchg
das
notb
jnp
push
lods
mov
xchg
pop
fsubs
js
pusha
jbe
call
push
scas
and
sahf
mov
insb
leave
inc
mov
fnstenv
add
lahf
pop
jecxz
lcall
mov
mov
aad
fsubr
mov
aas
stos
sbb
mov
push
jb
xchg
adc
xor
cmp
imul
hlt
cli
notl
mov
cwtl
mov
pop
test
dec
jns
inc
scas
cmp
or
ret
and
mov
fidivrl
stos
test
and
xchg
jl
add
or
cmp
dec
mov
mov
xchg
xchg
mov
jo
add
mov
sbb
sub
arpl
dec
je
and
test
rcrl
test
bound
call
mov
push
sbb
xor
xor
or
push
stos
and
daa
shlb
in
sbb
inc
adc
loope
or
inc
arpl
adc
and
in
add
dec
or
mov
mov
adc
xchg
dec
fwait
shll
sub
rcrl
pop
std
mov
sub
mov
sbbb
aas
in
popf
or
push
in
mov
hlt
stos
int3
xor
out
dec
mov
cmc
push
cltd
xchg
pop
cmp
mov
adc
movsb
imul
punpcklwd
sub
push
xchg
jg
into
dec
mov
mov
shll
scas
push
scas
int3
xchg
dec
push
dec
sbb
sbb
ret
insb
xchg
sti
dec
arpl
lret
adc
pop
dec
jg
push
jmp
xor
andl
xchg
les
push
movsl
aam
jp
std
outsl
jg
inc
nop
mov
jae
flds
xchg
imul
push
sbb
clc
jg
pop
dec
dec
sbb
and
jg
jle
pop
mov
out
mov
test
jae
pop
ja
mov
adcl
and
xchg
and
and
daa
dec
jle
pop
scas
out
push
popf
rorb
in
sbb
loop
cmp
cmpb
sbb
adc
inc
xor
es
push
jmp
mov
mov
ljmp
dec
xchg
adc
mov
add
and
or
into
cmp
pop
inc
xchg
xchg
inc
popf
jnp
pop
mov
pop
cli
mov
jae
pop
mov
lock
sbb
jp
lock
jge
inc
leave
sbb
pop
mov
sbb
jmp
rcrb
shll
sub
jns
dec
mov
lods
push
adc
dec
addr16
pop
mov
push
push
ret
xor
xchg
pop
jmp
incl
lret
call
aaa
std
add
mov
jne
movsb
and
mov
add
bound
sti
xlat
popa
dec
es
mov
add
jmp
fadd
addr16
jecxz
mov
mov
mov
js
out
sub
or
out
push
pop
idivb
dec
stos
scas
lods
into
push
cmp
xchg
cmp
xchg
and
xor
mov
in
dec
roll
jns
xor
out
movsl
sub
mov
sbb
inc
mov
mov
sub
js
addr16
lcall
mov
dec
jle
dec
mov
inc
divb
sbb
and
imul
jg
leave
push
push
lret
out
fsubrs
imul
add
scas
hlt
sti
mov
cmpsb
xchg
aaa
testl
cmpsl
into
jge
popa
popf
xor
or
fwait
movsb
add
je
push
imul
adc
out
push
adc
clc
add
dec
pop
gs
pop
sub
addr16
lret
sub
adc
cmp
sub
sbb
fdivrl
lcall
ror
push
fcoml
push
dec
pop
movsb
icebp
sahf
inc
push
cmp
sub
dec
jmp
or
lock
sbb
repz
xchg
cmp
out
mov
push
jb
xor
bound
jge
int
push
stc
arpl
movl
jo
fcoms
inc
mov
jnp
popf
ret
out
mov
inc
clc
dec
add
lret
std
pop
push
jns
in
inc
in
lahf
inc
addr16
lods
dec
sarb
inc
mov
jg
sbb
out
test
shl
sbb
push
test
or
clc
out
xor
dec
imul
bnd
or
out
and
xchg
push
adc
loop
gs
xlat
sbb
mov
mov
mov
xchg
mov
xchg
jbe
cld
push
mov
sbb
and
pushf
jmp
sbb
and
int
push
aam
stos
or
push
lods
ss
xchg
clc
adc
cld
xchg
pop
and
shr
and
mov
cmc
mov
dec
jp
sbb
dec
ds
dec
repz
xor
jno
pop
cmp
sbb
sbb
std
cmc
into
pop
or
les
push
pop
push
sbb
imul
shlb
push
into
adc
jo
xchg
dec
push
pushf
sub
adc
fnstenv
iret
sub
inc
push
xchg
and
das
movsl
stc
test
or
adc
into
ljmp
dec
hlt
mov
dec
add
in
or
jbe
adc
push
je
mov
arpl
xchg
adc
push
add
or
and
out
stos
or
jmp
dec
or
and
add
inc
cmp
pop
add
in
enter
enter
adc
sbb
in
mov
inc
enter
pop
dec
push
jge
pop
sbb
fs
sub
rcl
sahf
lock
int
sub
push
mov
pushf
sub
mov
lods
les
sub
push
loope
xlat
pop
or
into
cwtl
test
test
inc
adc
sbb
jmp
sbb
outsb
or
fistl
and
popf
fiadds
mov
arpl
xlat
popa
out
xor
test
scas
cld
lds
sahf
adc
test
mov
in
dec
cs
mov
adcl
sub
sbb
fidivl
subl
ss
mov
mov
push
sahf
hlt
cmpsb
mov
cmp
mov
lret
out
sub
bound
jp
lahf
sub
out
dec
mov
and
inc
push
sub
pop
or
xor
xor
call
fidivrs
aaa
push
push
push
inc
imul
test
pop
out
mov
in
mov
repz
mov
je
lret
xchg
jno
fists
pop
or
ret
je
mov
out
ficomps
xchg
xchg
cmc
jb
out
inc
jno
xchg
in
sbb
inc
pop
mov
cmp
or
push
sbb
mov
sarl
fisttps
in
hlt
or
sbb
dec
lods
xchg
test
sti
push
dec
sub
xor
dec
push
cmp
jb
sub
mov
pop
pop
dec
xor
je
mov
outsb
stos
cmpsl
scas
pop
test
or
lahf
mov
sbb
imul
cs
xor
addr16
or
dec
mov
cwtl
jmp
add
test
aaa
sbb
or
adc
cmp
add
jg
jp
push
xor
lods
dec
cmp
inc
jmp
add
xor
or
fstpt
mov
shl
sbb
leave
fmulp
add
dec
bswap
adcl
daa
sub
jmp
sub
mov
loopw
dec
scas
sbbb
iret
sub
push
or
xchg
or
or
mov
or
jle
lret
push
jb
inc
lcall
int
sub
sub
sub
lds
push
in
add
or
mov
xor
add
mov
xor
add
mov
lea
jmp
jmp
mov
in
jnp
mov
pop
inc
jae
jbe
adc
das
pop
jp
xor
sub
fistps
sub
cltd
arpl
lea
or
cmp
cli
pushl
push
pop
and
sub
jb
or
andb
xor
cmp
mov
mov
adc
inc
cwtl
ret
mov
jmp
lret
lret
sbb
mov
add
mov
pop
mov
in
and
call
iret
inc
sub
sub
lret
into
cmp
cmp
stos
jnp
cltd
das
jge
mov
ja
or
cmp
dec
and
or
test
jle
les
into
jp
cmp
js
jbe
movsl
mov
addr16
imul
cmp
cli
xor
loopne
mov
or
repz
hlt
subb
push
js
std
sub
xchg
and
xchg
mov
fdivr
jmp
jecxz
lods
sbb
notl
jnp
jno
sbb
adc
cmpsb
inc
repz
cli
arpl
mov
pop
jbe
cmp
out
scas
sub
fimull
fdivrl
xor
pushf
lods
shlb
movsl
inc
fimull
lahf
xchg
jecxz
scas
fsubr
stos
mov
gs
mov
cli
push
xor
sbb
lock
jge
jge
js
jg
pop
sub
sbb
adc
enter
sub
adc
orl
jne
inc
mov
and
jo,pt
xorl
jecxz
xor
xchg
in
xchg
xchg
inc
ljmp
clc
mov
in
xor
jge
fisttps
das
inc
add
or
imul
dec
popl
adc
xchg
lds
aaa
call
push
mov
and
sub
fcomi
cmpsl
decl
fstpt
cltd
test
sti
sti
mov
andb
adc
lcall
push
sti
imul
xchg
jno
add
pop
scas
jae
ret
pop
ljmp
sahf
sbb
mov
fmuls
leave
ficompl
pop
add
xchg
lahf
test
call
ss
fisttps
and
das
push
mov
sti
out
fisttpll
adc
inc
push
push
adc
push
cltd
dec
imul
cld
add
sbb
or
and
push
xor
cltd
stos
jmp
add
push
icebp
addr16
scas
shrb
mov
cmp
xchg
inc
popf
movsl
mov
or
sbb
jb
shlb
je
mov
sti
mov
inc
imul
cld
fsub
fidivl
xor
je
add
idiv
or
pushf
mov
int3
jmp
inc
jae
repz
ja
into
subl
loop
adc
dec
fildll
pop
mov
fsts
jo
ret
pop
jecxz
mov
xchg
cmpsb
push
stos
imul
push
lods
xor
xor
pop
adc
add
inc
shl
pop
ret
rcl
sub
imul
push
pop
jne
pop
aam
test
stos
adc
inc
subl
jg
lods
lock
clc
rorl
je
pop
mov
jno
pop
mov
push
mov
addb
out
jb
pop
mov
into
ljmp
js
in
mov
xchg
and
adc
inc
into
pop
data16
cmc
out
lods
stos
pushl
mov
mov
pusha
clc
adc
repz
dec
mov
fucomp
pop
jecxz
push
mov
dec
xchg
add
lds
jl
push
into
fdivs
lock
ss
pop
xor
mov
test
sub
add
add
xchg
imul
add
lret
or
or
gs
fbstp
mov
fstl
shll
imul
les
add
cmp
das
adc
mov
popa
sub
scas
dec
inc
cmp
adc
clc
pop
jmp
push
adc
and
jnp
stc
cwtl
into
shlb
cs
fadd
xor
sub
nop
aam
pop
xor
cmp
subl
lds
loopne
add
push
sbb
adc
out
int3
xchg
pop
adc
insb
xchg
mov
repz
out
add
jle
mov
fistps
push
sbb
sub
addl
stos
mov
push
rolb
mov
mov
pop
add
jmp
stc
push
jmp
daa
jl
jae
cmp
les
aam
rclb
cmp
popf
and
xlat
pop
push
cmp
cmpsl
and
push
xor
xchg
and
xchg
sub
lds
xor
ja
sub
xchg
and
lcall
shll
pop
mov
pushf
or
int3
out
testl
mov
stos
push
cmp
test
gs
pop
inc
incb
inc
mov
adc
dec
leave
lcall
int
movsb
xchg
mov
cmp
pop
xchg
in
scas
out
pop
int3
xor
sbb
cmpsb
daa
ret
cwtl
dec
xchg
mov
mov
push
mov
ja
cmp
stc
jno
in
jbe
push
and
sbb
subl
ret
adc
out
and
pop
adc
insl
jb
and
push
sbb
popa
adc
xorl
jne
sbb
shlb
push
pop
pop
push
xor
or
bound
fldcw
js
cmc
push
les
test
push
and
xor
pop
mov
mov
adc
xor
inc
adc
out
icebp
mov
push
jo
xchg
jne
popa
dec
jmp
mov
negl
lock
inc
dec
les
cltd
scas
mov
add
push
cs
in
mov
xchg
loope
dec
out
mov
addb
popa
pushf
xchg
jl
out
push
mov
mov
mov
mov
xchg
iret
push
sub
pop
test
rorl
sbb
dec
dec
mov
add
test
push
out
fistl
inc
sub
xchg
jae
imul
jae
sbb
fdivl
dec
pop
notl
mov
mov
mov
cmpsl
inc
scas
rcll
out
in
dec
hlt
inc
fdivs
or
mov
scas
in
andb
jb
jecxz
add
mov
aam
pop
inc
add
subb
enter
pop
jp
push
push
into
sbb
sub
je
cmpsl
xor
cmp
out
xchg
cmc
outsl
dec
gs
ljmp
mov
push
push
bound
and
and
ss
lods
inc
mov
and
aam
xor
test
or
out
and
pop
mov
aas
enter
add
ret
mov
pop
mov
cmc
aad
ljmp
cmp
mov
inc
loope
imul
aaa
or
inc
cwtl
daa
sahf
push
mov
push
dec
repnz
and
inc
stc
addl
dec
xor
pop
test
inc
lret
xor
divb
and
add
mov
lret
pop
sti
mov
arpl
in
out
scas
or
mov
sarb
sbb
push
jp
mov
in
in
insl
dec
gs
stos
sti
mov
jbe
inc
jnp
aad
fisttps
and
or
rcrl
mov
pop
cld
xchg
xor
pushf
daa
and
lret
adc
iret
mov
dec
jo
cld
inc
aam
mov
leave
dec
mov
ret
jns
push
mov
popa
lret
cli
mov
fidivs
sbb
jno
aad
stos
mov
xor
test
pusha
inc
add
insl
in
push
dec
gs
jae
sbb
and
xor
std
cmp
cmp
mulb
or
outsb
push
sti
dec
in
fcompl
mov
call
fidivs
bound
pop
mov
daa
ret
pop
scas
decl
repz
push
add
out
es
cmc
notb
icebp
filds
sti
inc
clc
xchg
lcall
mov
repnz
fisubrs
mov
add
rorl
dec
je
dec
mov
aad
daa
int
mov
imulb
pushf
jno
mov
jnp
or
in
push
aad
daa
mov
ss
popa
xlat
cmp
adc
test
xor
mov
test
lahf
mov
aam
cmc
sbb
int3
sbb
adc
mov
or
jo
ljmp
mov
jle
push
dec
clc
lods
pop
push
das
dec
cmp
mov
sub
ja
aaa
pop
push
push
rclb
and
xor
in
inc
in
data16
mov
movsl
pop
in
out
mov
mov
sbb
fsubrl
mov
lahf
cmp
fs
cmpsl
or
mov
pop
inc
fsts
jnp
fmul
gs
adc
pop
dec
stc
dec
shrb
xor
loope
popa
aaa
mov
push
or
dec
push
loopne
mov
ficoml
and
hlt
repnz
jnp
mov
aad
and
xor
das
jae
pop
pshufw
scas
icebp
mov
fmulp
hlt
cwtl
xlat
test
rol
cltd
adc
mov
test
icebp
fdivl
nop
mov
lcall
mov
outsl
inc
arpl
xor
mov
inc
jl
addl
mov
hlt
xor
ja
pop
stos
mov
pop
mov
inc
out
ret
ja
data16
sahf
xor
pop
add
stc
or
int
ffree
mov
cmpl
stc
jno
stc
or
adc
and
scas
in
xchg
in
xor
xchg
xchg
in
popf
and
jle
loopne
pushf
mov
xlat
into
lahf
xorb
or
lahf
push
adc
inc
cli
mov
int3
xor
out
in
dec
cs
push
sahf
xor
add
mov
shll
lcall
adc
jp
pop
adc
adc
jl
movsb
pusha
imul
inc
out
ret
ret
js
aas
inc
clc
in
ficompl
jge
and
xchg
push
mov
rcrl
dec
inc
ljmp
iret
jns
pop
nop
add
cmc
jge
js
dec
aaa
imul
int3
leave
mov
add
jo
sub
mov
cmpb
outsl
cld
push
push
bound
sti
sbb
mov
insl
scas
sbb
lret
insl
mov
repnz
xchg
and
bound
cwtl
pop
je
in
mov
jno
in
jle
jne
ret
aam
cmc
or
adc
or
add
fldl
mov
xor
or
sub
jne
daa
mov
mov
add
cmp
pop
push
cwtl
in
cmp
dec
test
aad
sbb
ret
inc
mov
push
ret
mov
sub
pop
sti
popf
jae
test
adc
in
out
mov
mov
add
mov
lock
pop
dec
sub
je
stc
lcall
jne
mov
jae
decl
lahf
adc
pop
insl
std
movsb
mov
xor
stc
push
cmp
inc
popf
or
div
dec
popl
jo
gs
and
jno
jb
stos
or
dec
add
int3
jnp
insb
cmp
mov
sub
loopne
jge
adc
push
movsl
mov
jp
xor
scas
add
mov
jp
inc
fmuls
daa
xor
dec
lret
jns
pop
notb
test
add
hlt
mov
mov
dec
nop
cli
mov
or
das
adc
sti
sti
les
push
cmc
js
pop
sar
push
sub
or
jecxz
adc
das
lahf
xor
pop
xorl
pop
mov
scas
adc
nop
dec
xchg
andl
push
loop
adcl
mov
push
push
pop
outsl
rol
jb
sahf
ret
xlat
add
mov
and
add
sbb
cmp
adc
rolb
xchg
jecxz
xlat
and
push
jg
xchg
shl
dec
adc
cmp
mov
cs
cmp
test
test
jns
pop
xor
pushf
fstp
push
dec
dec
adc
pop
mov
mulb
lods
ror
das
aas
mov
or
and
jnp
sub
js
or
movsb
xchg
dec
in
fimuls
mov
mov
in
shll
repz
jge
outsb
aas
in
imul
pop
pop
mov
std
pop
ret
ficoms
mov
xchg
jno
push
adc
icebp
pop
push
push
outsl
fdivrl
push
ljmp
push
dec
dec
sbb
sub
push
ss
fldt
mov
fs
pop
arpl
fbld
push
mov
enter
jecxz
cli
add
test
insb
sti
pop
xor
mov
lds
ret
stos
push
sub
mov
jnp
fcoml
pop
mov
in
mov
dec
ja
les
loop
or
jp
cmpsb
incb
mov
out
inc
dec
xchg
jg
xor
fwait
js
pushf
int
sub
test
mov
push
mov
inc
loope
push
out
mov
inc
mov
mov
faddl
jbe
addr16
mov
and
inc
cmp
mov
sub
clc
xchg
cs
add
or
out
lcall
mov
add
into
sub
sub
enter
out
jb
sbb
clc
test
adc
loopne
mov
cmp
dec
movsl
adc
pop
mov
mov
test
es
ret
inc
mov
arpl
les
cmp
fldt
jae
std
pop
notb
into
push
xlat
lret
scas
and
leave
mov
jbe
xor
into
je
pop
pop
fnstenv
clc
ret
pusha
iret
pop
sbb
mov
mov
daa
xchg
jge
es
fmuls
test
dec
out
and
js
daa
mov
push
in
ljmp
mov
dec
nop
mov
add
int3
adc
aaa
xor
jmp
nop
inc
adc
xchg
cvtpi2ps
xor
xchg
scas
cwtl
aad
mov
sarb
les
int3
outsl
push
jp
testl
lret
mov
fcoml
and
mov
call
test
test
in
add
dec
add
shll
bound
xchg
imul
or
shl
mov
jl
mov
push
fs
jge
in
cmp
int
jmp
mov
push
jge
pop
mov
lea
or
adc
inc
mov
adc
fdivr
pop
cwtl
push
lcall
loopne
in
sub
aad
xor
lods
ficoml
insb
fwait
cs
cmpsb
cmp
mov
test
jne
ljmp
fucomi
fld
outsl
outsb
imul
inc
sub
dec
test
outsb
sub
je
cmpsl
and
in
fistl
inc
push
pandn
inc
test
popf
jbe
jno
dec
jne
xchg
pop
outsl
push
push
add
int
pop
fs
sbb
lret
sahf
mov
adc
lret
outsb
xchg
pop
add
mov
loop
jmp
test
rcrb
shrl
jae
inc
sarl
push
pop
rcrb
fiadds
add
popf
shr
push
add
imul
iretw
shrl
cltd
cmc
push
sub
xchg
lods
lock
mov
jmp
cmp
sub
popa
fistps
jmp
push
lock
int3
dec
xchg
fistl
sbb
and
push
mov
popf
imul
sahf
mov
fdivp
pop
add
imul
jmp
mov
sub
jae
out
jp
aad
lea
fmuls
clc
sub
push
xlat
mov
in
and
mov
xlat
mov
movsl
xor
ja
push
fwait
xchg
loopne
jno
lods
mov
push
or
push
popf
push
dec
stos
cmpsb
cwtl
inc
call
mov
or
sti
neg
pop
push
fdivr
imul
test
out
sbb
ja
mov
fldenv
popa
js
jmp
add
ljmp
sbb
mov
jl
xchg
jbe
xchg
ret
jmp
aam
shrb
bound
xchg
in
jo
inc
cmp
test
pop
adc
dec
repnz
add
sbb
xchg
out
xor
mov
mov
cmpsl
jp
mov
pusha
adcl
push
pop
sbb
jbe
sti
cmp
cmpsl
mov
in
push
test
repnz
xor
negb
pop
jg
mov
out
xor
test
push
or
aaa
xlat
xchg
aad
sub
mov
outsb
jbe
out
bound
or
push
dec
mov
loopne
xchg
jmp
push
or
in
dec
loopne
cmpsb
jecxz
add
push
xor
aam
cmpsb
jle
test
inc
fdivrl
add
movsb
xorl
fnsave
mov
in
pushf
sbb
lods
mov
cs
cmp
cltd
pop
lods
adc
movsl
mov
xor
add
mov
xor
xor
cmpsl
repnz
adc
fucom
decl
pop
sbbl
je
outsl
fidivrs
dec
add
in
outsl
fmul
lea
push
addb
push
inc
testl
popf
jge
add
into
call
xchg
add
stc
mov
xchg
out
mull
sbb
add
sbb
inc
outsl
mov
push
xor
lock
adc
xchg
pop
mov
cld
mov
cld
lret
sbb
inc
ja
ds
inc
jge
sub
sbb
fnstsw
fnstenv
sub
ljmp
lea
fistl
ret
outsb
xor
pop
movsl
rcrl
loopne
mov
dec
mov
movsb
and
imul
out
sbb
push
cmp
or
arpl
and
fistl
pop
sub
sbb
sub
add
fistpll
xor
mov
push
jle
std
inc
push
push
dec
test
xor
mov
add
in
adc
movb
xchg
loop
mov
ret
sahf
jp
int
dec
cmpsl
insl
cmp
xchg
xlat
cmp
stos
sub
leave
mov
addl
fstpt
lcall
cmp
test
fldcw
jg
xchg
inc
lods
pop
outsl
sub
out
das
loope
push
adc
mov
nop
adc
popf
out
fmull
stos
out
mov
xor
outsb
cmp
js
mov
das
xchg
popf
ss
xor
push
cmp
lret
pop
leave
les
mov
adc
sarl
push
sbb
xor
jmp
sbb
sub
mov
in
pop
push
loopne
xchg
adc
sbbb
adc
mov
jg
shrl
sbbl
jne
sbb
hlt
mov
push
or
mov
push
jl
xor
ret
xor
lret
shrb
repnz
rcl
adc
movsl
movsb
push
and
fistps
add
repnz
mov
jle
les
loopne
mov
std
adc
lods
jge
ficompl
and
sbb
in
lret
addb
stos
shll
out
cltd
shlb
ret
fldenv
shrb
scas
xor
push
js
fdivp
lcall
popa
cli
ficompl
jb
enter
cwtl
push
add
nop
aad
cmp
jb
mov
fistl
loopne
mov
data16
jb
outsb
dec
lds
or
ret
jo
call
fisttps
adc
xchg
push
jl
stc
jnp
fcoms
popf
dec
addr16
mov
fistpll
lcall
or
dec
push
les
incl
add
iretw
into
xor
add
xor
dec
or
dec
push
sbb
mov
clc
imul
and
lds
push
sbb
sbb
es
iret
mov
subl
xchg
adc
cmp
or
sub
cmc
mov
or
adc
pop
cld
fisubs
mov
lods
or
fcmovnbe
mov
lret
push
mov
mov
test
nop
push
notb
jb
cmp
ds
pop
testl
mov
pop
out
push
push
fnstcw
cli
ljmp
popa
aam
and
lea
fldl
movsb
test
or
and
jp
jbe
hlt
and
mov
adc
mov
repz
jbe
fs
dec
mov
lret
mov
inc
pop
jo
adc
ret
adc
into
sti
arpl
adcl
pushf
mov
mov
adc
int
stos
push
adc
aam
sbb
pop
mov
cmpsb
icebp
sahf
out
push
fcomip
pop
outsb
leave
or
mov
add
gs
add
xchg
sbb
ljmp
out
orl
push
in
jmp
jp
loop
cli
jae
xor
insl
cmp
js
outsl
xor
push
mov
xorl
jg
jg
adc
lods
fucom
pop
mov
jbe
cmp
popa
pop
adc
mov
mov
add
sub
shlb
adc
mov
push
stos
sbb
jecxz
stos
ret
neg
shll
cli
scas
pop
les
fsubrl
and
cmp
test
iret
xor
insb
jno
mov
pushl
push
sbb
dec
mulb
rorb
add
es
add
sbb
push
add
rorl
int3
pop
imul
or
cmpsb
frstor
dec
rcrb
scas
notl
or
dec
dec
xchg
leave
fcmovnbe
push
call
lret
pop
xchg
add
cs
inc
xchg
xchg
cld
int3
sbb
push
addb
fiadds
and
jns
add
inc
mov
xchg
push
push
sbb
fwait
add
fsts
mov
daa
mov
jl
std
mov
jae
sub
int
ss
push
mov
fsubp
in
and
shlb
das
enter
and
inc
xchg
lret
xor
loopne
dec
adc
inc
inc
push
sub
addl
and
or
imul
cmpsb
jle
or
outsb
push
into
into
jge
push
test
push
pop
cmp
outsl
arpl
sbbb
stos
inc
sub
rcrl
and
jp
outsl
dec
xor
fiadds
push
jp
lahf
fdivl
pop
cmp
pop
rcr
sub
fldenv
lock
pop
mov
sub
jmp
push
pop
lret
dec
cmp
jnp
jmp
jbe
fbld
inc
pop
movq
jp
ds
shlb
sbb
sbb
mov
xchg
xchg
inc
xchg
add
insb
cmp
cmp
iret
inc
xor
in
sub
push
iret
mov
pop
or
out
pop
insl
mov
lock
cmc
add
pop
dec
scas
int3
outsl
rcll
scas
or
and
stos
insl
test
mov
in
data16
repz
cld
clc
imul
scas
push
inc
mov
mov
push
mov
repz
xchg
dec
mov
fs
jbe
inc
loop
sbb
mov
fidivrl
loope
stos
loopne
add
pop
jecxz
adc
sbb
or
mov
inc
sbb
lret
js
out
lods
mov
jns
hlt
mov
cmp
inc
insb
hlt
sub
mov
sub
cmp
sbb
mov
in
pause
dec
pop
add
orb
mov
enter
ret
orl
ror
xchg
mov
sbb
adc
int
dec
sub
add
addr16
int
jbe
xchg
pop
adc
and
mov
push
lea
adc
syscall
in
mov
pop
inc
cli
inc
add
outsl
in
or
mov
sbb
adc
push
cmp
rcrl
scas
mov
mov
filds
stos
nop
inc
mov
jle
mov
mov
scas
sbb
and
jl
pop
pmuludq
gs
dec
andl
out
adc
push
jge
jecxz
setnp
xchg
or
jne
jae
adc
icebp
out
xchg
iret
pop
or
sti
or
cmp
je
std
mov
add
jp
jmp
xor
inc
icebp
cmp
lea
scas
das
or
sub
divl
ss
test
xorl
fneni(8087
inc
dec
sbbb
mov
adc
sub
and
add
rcrb
xchg
out
ret
dec
and
mov
mov
jnp
bound
jns
jl
arpl
cmpsl
mov
xor
pop
loop
push
push
mov
mov
mov
sahf
popa
dec
out
pop
jl
sbb
pop
add
and
subl
aam
scas
or
push
jecxz
or
jbe
fdivl
cld
pop
cmp
xor
mov
or
cmp
call
dec
ret
jnp
or
ret
mov
imul
sub
sbb
hlt
loop
aad
xchg
jae
sbb
pop
call
dec
jp
paddq
or
orb
pop
jnp
pop
dec
dec
loope
inc
cmpb
pop
icebp
sub
jl
add
rolb
mov
psadbw
std
push
ret
or
sub
inc
stos
xchg
inc
jb
jns
jmp
pop
cmpsb
cmp
mov
cmpsb
rcrl
mov
add
stos
fwait
inc
xchg
loope
test
push
repz
test
sub
stc
das
sbb
sub
lcall
push
cmp
dec
jne
insb
stc
add
leave
lods
jle
xor
mov
dec
sbb
sub
sub
xchg
sub
jae
enter
push
imul
cmp
add
movsl
push
sarl
in
sbb
xlat
cld
fidivrs
cmc
test
outsl
mulb
cmpsl
loop
sub
cli
sahf
leave
scas
jae
insb
and
das
mov
xor
lods
ss
cmpsb
cmp
mov
gs
stos
push
mov
sub
pusha
jns
jl
fsin
scas
mov
xor
mov
dec
into
lock
add
in
movsl
add
jne
leave
cmpl
shrl
mov
test
call
mov
adc
hlt
adc
adc
and
inc
fistl
mov
pop
jne
adc
in
out
cmc
popf
sub
movsb
leave
and
dec
bound
mov
stos
xchg
jle
fisubs
xor
push
xchg
pop
ret
add
xlat
outsb
pop
push
cmp
xchg
pushf
sarb
loope
xchg
leave
and
add
inc
and
or
push
test
pushf
push
and
cwtl
sti
rcll
mov
xchg
xor
adc
jo
inc
sbb
out
mov
fsubs
mov
pop
stc
push
inc
jp
in
js
jb
popa
xchg
rorb
cmp
push
repz
sbb
sub
sbb
loop
and
js
or
repz
aas
cs
addr16
out
sbb
loopne
lcall
cmp
jb
and
xor
sub
xor
and
sbb
negl
mov
gs
cmp
mov
adc
and
fcoms
rclb
ljmp
enter
ror
mov
push
add
push
ret
lcall
push
clc
test
fisubs
loopne
das
ret
jl
inc
repz
xchg
enter
push
pushf
mov
jns
jo
enter
and
xchg
lods
pop
mov
loop
lock
jnp
ret
or
add
mov
daa
outsb
push
add
mov
adc
xor
or
xor
push
jecxz
adc
pop
xchg
adc
sbb
sub
and
outsb
popa
sti
scas
inc
mov
ss
mov
xor
cmp
and
xor
and
mov
cld
mov
insb
in
mov
les
gs
cmp
sub
jns
in
mov
adc
cmp
inc
ja
add
lret
cmpb
mov
xor
sbb
pop
mov
mov
mov
movsl
insl
xlat
bound
sub
adc
dec
or
inc
sbb
pop
imul
sahf
dec
adc
sub
rcll
arpl
or
cltd
jp
dec
xchg
shrb
enter
stos
pop
sbb
stos
out
out
xor
jnp
dec
cmp
adc
push
push
cmp
lods
cmpsl
pop
pop
movzbl
xchg
add
sbb
mov
es
popa
sbb
cmpsl
arpl
jecxz
sbb
and
hlt
jbe
ret
inc
xor
jg
in
cmp
aaa
and
movsb
je
ss
pop
popf
dec
lock
fld
inc
push
xchg
scas
xchg
insl
or
mov
bswap
adcb
cmp
jb
push
enter
xchg
stos
jmp
pop
movsb
jge
sub
stc
or
jo
add
pop
push
lret
outsb
imul
push
getsec
and
enter
adc
mov
jmp
stc
adc
mov
adc
cmpsb
imul
popf
push
fcmovnb
adc
dec
test
repnz
daa
shrb
in
ljmp
xor
fnsave
mov
or
jne
mov
add
push
and
cs
cmp
mov
stos
mov
or
jne
mov
out
lods
jne
mov
jno
inc
push
jmp
mov
testl
lock
inc
jp
cli
sub
les
sub
add
mov
fcmovnb
jmp
ja
pop
dec
lcall
ficoms
xchg
aas
or
and
dec
mov
mov
aas
jmp
or
mov
jmp
dec
imul
adc
mov
mov
mull
cmp
test
shrb
mov
jmp
mov
filds
test
rcrl
in
fucomi
cmp
xor
outsl
arpl
jae
ss
ja
es
dec
sbb
or
rolb
rorb
ja
jno
nop
inc
push
ja
pushf
xor
dec
neg
or
test
push
lahf
mov
arpl
push
sahf
movsb
push
adc
icebp
push
in
dec
dec
adc
in
sar
popf
les
inc
js
inc
sub
add
divb
cmpsl
daa
xchg
lock
pop
hlt
push
mov
sbb
data16
loopne
push
lock
lea
mov
jmp
mov
mov
xor
lea
lea
xor
cmp
jne
decl
jne
mov
mov
mov
xor
mov
xor
mov
xor
mov
mov
xor
mov
mov
xor
add
pop
pop
pop
leave
ret
movl
xor
xorl
inc
ret
push
mov
sub
movl
push
movl
add
mov
push
adcl
mov
xor
andl
push
mov
or
mov
add
subl
mov
movl
cmpl
je
cmpl
jle
jmp
push
push
call
mov
dec
mov
jmp
mov
test
movl
je
movl
cmpl
je
cmpl
jb
jmp
pushl
push
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
or
mov
xorl
mov
mov
decl
xor
add
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jb
jmp
push
push
call
cmpl
jne
mov
inc
mov
jmp
mov
mov
mov
xor
mov
movl
cmpl
je
cmpl
jbe
jmp
call
mov
dec
mov
jmp
xor
movzbl
adc
mov
add
movl
cmpl
je
cmpl
jbe
jmp
pushl
push
push
push
call
xor
add
dec
mov
jmp
mov
subl
mov
xor
negl
add
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jb
jmp
call
cmpl
jne
mov
inc
mov
jmp
mov
mov
and
xor
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jb
jmp
push
push
push
pushl
call
cmpl
jne
mov
inc
mov
jmp
add
movl
cmpl
je
cmpl
jg
jmp
call
mov
dec
mov
jmp
mov
orl
sub
subl
lea
xor
xor
movl
cmp
je
orl
mov
xor
addl
add
cmp
movl
jne
xorl
pushl
notl
call
mov
andl
mov
inc
mov
cmpl
jle
jmp
push
push
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
sub
mov
xorl
xor
subl
add
movl
cmp
movl
je
subl
pushl
addl
pushl
call
mov
andl
mov
inc
mov
cmpl
ja
jmp
push
pushl
pushl
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
mov
add
mov
mov
mov
add
mov
mov
mov
add
mov
jmp
mov
mov
add
mov
mov
mov
xor
add
cmp
je
jmp
mov
mov
xor
add
cmp
mov
je
mov
xor
add
cmp
je
lea
push
pushl
pushl
call
mov
mov
xor
add
cmp
je
mov
movzwl
mov
mov
mov
jmp
mov
xor
lea
jmp
mov
xor
add
jmp
mov
add
mov
mov
test
je
movl
push
xor
pop
add
push
pop
push
dec
pop
dec
xchg
sub
xchg
dec
mov
imul
sub
mov
mov
xor
add
jmp
mov
mov
mov
mov
xor
add
xor
div
mov
xor
lea
mov
mov
mov
mov
mov
xor
lea
mov
mov
mov
xor
add
imul
mov
mov
xor
lea
cmp
jne
mov
xor
add
mov
mov
add
xchg
xor
push
mov
pop
mov
add
lea
add
add
push
inc
pop
dec
xchg
dec
xchg
dec
xchg
dec
push
mov
pop
dec
call
cmp
je
xchg
push
pop
dec
push
pop
inc
xchg
inc
sub
xchg
dec
dec
mov
imul
add
xchg
push
xor
mov
dec
inc
add
dec
xor
add
pop
mov
pop
pop
pop
leave
ret
push
mov
push
andl
mov
inc
mov
cmpl
jl
jmp
push
pushl
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
movl
mov
mov
and
mov
orl
xor
add
mov
mov
xor
push
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
pop
leave
ret
push
mov
sub
mov
andl
mov
inc
mov
cmpl
jbe
jmp
push
push
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
xor
add
mov
adcl
add
movzwl
movl
cmpl
je
cmpl
ja
jmp
pushl
call
mov
dec
mov
jmp
mov
jmp
inc
pop
cmp
and
dec
pop
jnp
or
adc
jp
std
in
sub
push
ret
rcrl
nop
frstor
xor
hlt
movsl
cs
mov
and
and
pusha
aad
outsb
add
es
ret
ret
add
aam
cmpsl
ficoms
pop
test
mov
sub
rolb
ljmpw
stc
dec
jle
aam
loop
jbe
inc
xlat
push
push
sbb
scas
aam
aas
pop
in
xchg
int
aad
cmp
sbb
fisubrs
fstps
dec
push
jl
out
inc
pusha
movsl
ja
fwait
test
add
cmp
lock
int
add
xor
call
add
nop
std
mov
je
sub
sarb
mov
in
pop
aaa
dec
and
dec
or
adc
xchg
in
mul
xlat
push
icebp
dec
imul
jae
mov
insb
cmpsb
adc
movsb
or
xchg
and
pop
inc
data16
cmp
cs
push
ja
cmp
pusha
xchg
arpl
inc
cmp
out
inc
sbb
les
sahf
jecxz
pop
aam
out
insl
gs
jb
ret
hlt
adc
ficomps
xor
aaa
push
pop
inc
mov
es
repz
cmpsl
stc
xor
adc
pop
movsl
adc
sub
push
call
clc
pop
insl
insb
sub
xchg
sub
rorb
jmp
repz
adc
push
rorb
adc
cmp
push
push
je
pop
int3
daa
roll
fisttps
mov
xchg
insl
out
rcl
lock
test
mov
idivb
in
aam
push
xor
inc
or
mov
add
mov
pop
mov
je
adc
push
sub
sub
dec
pause
nop
pop
xorb
jnp
jo
mov
mov
adc
out
ret
xor
xor
mov
fnstsw
push
push
pop
jbe
mov
push
push
sub
lods
daa
outsl
lret
mov
popf
bound
fsubr
stos
pushf
test
dec
mov
icebp
dec
xor
cmc
cmpsb
xchg
cmp
or
ret
add
sbb
stos
push
in
repnz
xor
mov
push
pushl
adcl
sbb
pop
les
pop
add
mov
add
adc
xor
cmp
pop
jnp
rol
push
mov
sub
imul
jae
mov
or
add
ljmp
sbb
jno
or
cmp
jae
rclb
jl
mov
sub
dec
loopne
dec
xchg
notl
add
cmp
sub
cmp
cmp
mov
gs
gs
fwait
or
arpl
hlt
repz
das
add
mov
push
frstor
fisubrl
cmp
dec
popa
mov
fldt
mov
call
js
lret
shlb
xchg
bound
out
mov
inc
bnd
jmp
scas
push
and
sahf
jg
cmp
cltd
adc
jl
es
js
repnz
pop
jge
inc
jno
push
xorb
mov
movsb
outsl
mov
nop
lret
mov
mov
nop
xor
inc
iret
enter
jne
sbbb
push
xor
adc
push
fsubrs
call
jb
cmpsb
lahf
mov
shrb
popa
sub
insl
adc
add
repz
test
mov
mov
bound
fcom
loopne
les
push
loope
les
incl
xlat
jno
mov
cli
mov
cli
xor
dec
xor
sub
xor
mov
les
pop
int3
dec
xlat
repnz
mov
push
aad
jno
xchg
sbb
mov
adc
adc
subl
mov
cli
mov
popa
iret
cmp
clc
imul
mov
xchg
lea
sti
test
jb
ja
cwtl
sub
scas
jae
jmp
sarl
lret
jp
xchg
clc
jne
push
lret
and
enter
inc
inc
int
loopne
jno
jo
je
imul
sbb
inc
fwait
stos
js
pop
add
xchg
into
pop
roll
xchg
ret
mov
and
icebp
out
popf
sbb
pop
cmp
adc
inc
jno
outsb
stc
cmc
cmp
jp
cs
outsb
rolb
scas
jb
jns
push
lahf
jb
in
lret
cmp
xchg
clc
mov
mov
cli
jae
inc
jmp
mov
pop
out
repz
or
lods
mov
fbld
inc
adc
pop
aam
fwait
icebp
cmovl
outsb
mov
or
dec
mov
insl
pop
dec
pop
mov
into
sbb
or
and
mov
jp
in
lods
aas
outsb
outsl
dec
and
cmp
test
push
ud2
and
cmp
add
andl
mov
push
add
dec
pop
sbb
xor
sbb
pop
xchg
in
arpl
iret
mov
jae
push
mov
fsubrs
sbb
dec
mov
lds
mov
push
xchg
jb
xor
jge,pn
mov
scas
fs
cmp
fadds
js
mov
cli
movsl
xchg
sbb
add
or
filds
cmpsl
insl
xor
mov
fwait
jecxz
sbb
xchg
mov
loop
movsl
or
sbb
lcall
cli
fistpll
mov
andl
sbb
scas
dec
jmp
sub
divl
hlt
and
push
mov
sti
inc
jmp
fnstcw
sbb
sub
jno
mov
xchg
sbb
loop
lcall
fwait
pop
bound
push
mov
or
ret
cwtl
pop
imul
pop
out
sbb
mov
xor
mov
mov
aaa
dec
mov
lock
jg
or
fsts
imul
jmp
push
xor
sub
cmc
fisttpll
cli
cltd
mov
roll
addr16
mov
push
lahf
lods
push
mov
lods
dec
enter
cmc
xchg
ljmp
sbb
mov
pop
bound
js
fnstenv
shl
addr16
mov
jg
data16
cs
sbb
aaa
mov
inc
cli
cmp
rep
aaa
dec
sbb
or
in
push
jb
mov
das
xor
je
loopne
mov
inc
lods
incb
cmp
inc
out
sub
ficomps
mov
insl
xchg
inc
loop
jle
movb
fadd
popf
jb
scas
int
jbe
mov
dec
cmp
dec
leave
sbb
popa
sahf
sub
or
shlb
jecxz
cltd
mov
push
int
jb
and
xchg
push
lods
call
mov
jns
add
loop
lods
loopne
popf
loopne
xor
add
push
nop
ror
jecxz
sub
xchg
test
popf
jecxz
mov
mov
mov
repz
int
xchg
mov
fildl
sahf
cmc
jmp
arpl
mov
test
pushf
mov
mov
add
and
ss
mov
sbbl
inc
imul
pushf
in
and
icebp
leave
js
lock
adc
sahf
add
mov
rcll
out
dec
dec
cmp
orb
aaa
push
cmp
es
jno
roll
adc
lret
incb
dec
nop
hlt
pop
sbb
xchg
sbb
enter
aas
dec
jb
rcrl
js
insl
stos
lds
jg
test
int
pop
aaa
or
fiadds
lods
ret
imul
lahf
jbe
xor
push
sub
sub
mov
dec
add
pushf
out
xor
add
mov
cmpsb
lahf
or
jecxz
pop
ret
sbb
mov
adc
add
stos
cmp
ret
xchg
xchg
aaa
loope
push
or
cs
mov
adc
cmpl
addr16
add
mov
mov
and
stc
je
cmp
xchg
fnsave
scas
test
mov
add
sahf
mov
nop
inc
dec
data16
dec
pop
push
jecxz
mov
push
fwait
in
mov
in
cmc
test
inc
movsl
imul
in
mov
mov
lea
mov
mov
adc
lods
fcompl
outsl
dec
inc
xlat
ss
mov
jo
nop
xchg
fcomp
xor
icebp
mov
fadds
jge
iret
lahf
adc
loopne
les
daa
jl
or
insb
mov
ljmp
and
push
jge
xchg
jae
mov
cmp
mov
fadd
call
and
sti
mov
insb
sti
dec
sub
shl
adc
subb
or
dec
cmp
loop
inc
or
or
lahf
adc
cmpsl
inc
ljmp
xor
dec
sti
idivl
ss
xchg
jle
pop
rclb
push
xchg
js
shll
fsubrl
mov
mov
leave
dec
js
in
jns
lds
cmc
pop
jle
adc
mov
daa
xchg
ret
jo
hlt
loope
sti
mov
jp
jo
pop
lahf
ljmp
and
int3
outsl
jb
hlt
lret
sub
push
enter
jp
das
or
mov
lods
mov
out
cmpsb
mov
sti
aad
pop
inc
sbb
inc
into
fisttpll
or
je
pop
mov
jg
and
xchg
jge
mov
inc
jae
sbb
aaa
or
js
mov
cltd
es
jecxz
jg
push
xchg
inc
mov
push
mov
add
stc
enter
sahf
cmp
cmpsl
dec
jo
loopne
aad
jae
adc
sub
inc
or
scas
in
jl
jg
pop
or
rcl
mov
sub
stos
fucompp
mov
lahf
mov
or
ds
in
cs
orb
aad
dec
adc
mov
out
data16
dec
int3
mov
and
inc
mov
cmpsb
push
cmpsl
or
or
or
daa
cwtl
jl
add
push
cmp
lds
out
sbb
repz
mov
dec
fstl
pushf
mov
inc
mov
xchg
xor
mov
xchg
test
dec
mov
push
jmp
xchg
push
push
push
outsb
in
jae
and
clc
in
push
iret
dec
and
outsl
push
sub
xchg
dec
bound
das
push
shll
mov
push
pop
push
xor
cmp
mov
jecxz
insl
vphaddubw
out
mov
add
sub
or
jbe
out
iret
dec
cmp
inc
orb
sbb
adc
push
mov
jecxz
jae
dec
mov
xchg
add
out
sbb
int
inc
lds
sti
xor
in
lea
das
push
cmp
mov
arpl
sahf
aaa
push
pop
inc
inc
mov
out
push
test
cld
js
hlt
lods
xlat
mov
cwtl
cltd
insb
sbb
clc
loope
fldenv
jle
inc
inc
sbb
cmp
add
adc
mov
loope
in
mov
push
sub
popf
imul
call
in
pop
aad
add
mov
loopne
sbb
cmpsl
xchg
dec
mov
enter
inc
mov
insl
mov
loopne
dec
lret
test
lods
insl
pop
ret
fsubs
sbb
int
cmc
xor
loopne
imul
enter
pop
dec
xchg
fidivrl
or
mov
inc
cmp
fnstsw
xor
std
imul
mov
jbe
pushf
mov
dec
mov
jmp
test
jne
outsb
pop
fdivp
xchg
or
sbb
mov
stos
mov
mov
shll
mov
icebp
cmpsb
movsl
les
push
cltd
mov
inc
inc
loopne
and
xor
inc
push
arpl
or
sbb
nop
leave
cmpb
inc
sub
cwtl
loopne
pop
nop
mov
inc
push
test
loop
int3
scas
test
clc
jno
mov
lock
xor
arpl
inc
dec
adc
push
sub
lods
xchg
out
pop
or
dec
jne
mov
sbb
jne
adc
test
adc
inc
xor
jecxz
inc
fstpt
test
sub
adc
shlb
fdivrl
fcompl
cld
repnz
adc
xchg
push
fisttps
jp,pt
push
sbb
scas
call
add
push
dec
adc
mov
outsl
popa
or
jecxz
mov
cltd
int
dec
adc
repnz
xor
xor
adc
xchg
sbb
cmp
pusha
aaa
jb
into
jne
pushf
or
outsl
pop
andb
mov
xor
push
test
jae
pop
stos
ficomps
and
xor
lahf
dec
scas
lods
mov
gs
pushf
pop
idivl
arpl
push
das
js
in
lock
sbb
mov
int
xchg
sbb
dec
push
push
mov
addr16
psrld
inc
or
out
sahf
fwait
and
fwait
test
divl
repz
dec
out
scas
xor
imul
jns
stos
pop
mov
or
sbb
push
push
sub
into
push
lods
repnz
jne
std
inc
imul
enter
xchg
pop
pop
test
jg
or
adc
xlat
pop
int
push
shr
mov
inc
cs
push
subl
into
sbb
mov
jne
xchg
xor
sub
ret
mov
fstpt
mov
data16
popf
pusha
fcoms
sti
xchg
outsb
adc
nop
xor
dec
sub
rcrl
jge
sbb
aam
nop
sbb
cmp
xchg
ljmp
mov
jne
xchg
mov
lcall
std
push
jp
cwtl
jns
sbb
shll
fwait
and
fucomi
pop
jae
pusha
cmp
in
xor
xchg
mov
popa
pusha
mov
mov
ret
add
lahf
lods
stos
fdiv
scas
sbb
dec
sbb
jae
inc
pop
pop
cmpsb
ja
inc
popa
push
fcompl
test
push
ds
movsb
idivb
or
mov
push
mov
xchg
movsl
insl
outsl
inc
in
push
dec
cs
int
jb
xor
enter
xchg
insb
fldt
xchg
fsts
cmpsl
lret
cld
xor
xchg
ds
adc
mov
jmp
loopne
loope
mov
push
pusha
mov
xchg
jnp
push
inc
adc
push
iret
or
xor
jne
cld
daa
xor
jp
xor
fisubrl
testb
into
dec
mov
lds
xchg
dec
mov
scas
pusha
add
xchg
push
das
push
dec
jnp
gs
call
xchg
xchg
add
xor
enter
pop
push
adc
cmc
jnp
sbb
jae
out
js
scas
hlt
dec
mov
jno
pop
out
mov
mov
sub
out
fildl
mov
es
inc
aam
sub
test
popf
dec
nop
mov
jg
adc
out
and
pop
ret
add
xchg
lret
cmp
leave
daa
icebp
mov
mov
gs
mov
inc
mov
loop
adc
cld
test
lods
xor
ret
push
adc
nop
iret
sub
xor
jo
icebp
add
xchg
fisubs
stc
pop
stos
pop
lock
inc
mov
test
add
lea
jo
mov
lock
xchg
lahf
jbe
aaa
rcrb
mov
enter
aas
and
in
cmp
imul
add
and
mov
lret
pop
push
roll
in
in
sbb
cmp
jg
in
mov
jo
rcrb
push
sbbb
inc
lahf
and
jg
insb
out
pop
insb
adc
cmc
ja,pn
sbb
cmp
scas
cmp
in
movsl
movsb
inc
xchg
mov
or
adcb
mov
pop
and
jne
das
js
dec
lods
rcll
xchg
jno
push
out
test
xlat
int
addr16
mov
cmp
xchg
mov
rolb
mov
sub
mov
push
mov
in
mov
xor
push
imul
add
inc
push
jmp
jecxz
lret
xchg
xchg
sub
addr16
popf
mov
out
mov
or
push
sbb
or
mov
or
outsl
cmp
test
mov
nop
insl
data16
xrelease
xchg
cmp
mov
xchg
lret
out
mov
push
jg
fsub
imul
shll
jp
sbb
dec
stos
add
lods
inc
mov
jns
mov
and
test
sub
decb
cld
push
mov
lret
mov
imul
xchg
push
lods
test
popa
or
fwait
es
bound
dec
cmp
ja
daa
mov
pop
cmpsl
aas
sub
cmp
iret
movsb
pop
mov
jbe
push
aaa
rorl
or
mov
sbb
lds
aas
mov
jbe
sbb
jnp
cmpsb
xchg
rcr
mov
or
clc
pop
mov
into
and
in
and
mov
dec
jmp
ljmp
test
xchg
xor
arpl
pop
out
out
adc
pop
test
nop
sub
jmp
and
add
ss
or
pop
mov
pop
xorl
mov
fidivs
adc
sti
popa
call
mov
inc
xchg
repz
inc
mov
xor
xor
in
mov
scas
repz
inc
mov
mov
and
mov
xchg
daa
imul
lds
push
test
push
lock
je
push
fdivrl
data16
xor
push
call
ss
mov
xor
jl
pop
push
clc
sbb
push
pop
testl
push
xor
xlat
inc
add
sub
insl
or
push
inc
xor
cmp
mov
das
loop
aad
mov
adc
dec
clc
out
cmpl
jmp
xor
lea
test
mov
fldt
hlt
adcl
shlb
leave
xchg
inc
test
or
scas
adc
xchg
jno
cmp
xor
stos
mov
aaa
push
mov
pusha
test
mov
pop
mov
lcall
mov
sbb
inc
jp
or
int
mov
dec
dec
sbb
loope
push
mov
cltd
std
mov
inc
mov
cld
leave
mov
push
mov
fimull
sub
or
sbb
mov
popf
adc
lods
adcl
dec
ret
jle
sub
xlat
aaa
dec
sub
jno
xbegin
insl
loop
sbb
aam
jmp
test
testl
mov
mov
lahf
shl
faddl
pop
mov
sbb
inc
pop
mov
sahf
test
jmp
sub
push
adc
stos
push
popa
aam
mov
pop
mov
mov
enter
xchg
push
pop
stos
cwtl
ret
test
xorl
cmp
fstl
loop
mov
push
inc
out
sarb
push
push
int
loop
xchg
loope
jnp
xor
adc
inc
loopne
daa
pop
adc
sub
add
das
aaa
fisttps
mov
jne
dec
js
and
adc
jno
ret
mov
std
or
jmp
fcoml
pop
mov
cmp
mov
dec
jl
lret
adc
cmc
inc
cltd
pusha
ds
and
xor
or
jno
into
pop
pop
addl
fstl
std
movsb
xchg
in
sahf
xchg
sub
cmp
mov
pop
dec
out
dec
jo
scas
inc
mov
into
jne
cwtl
mov
das
mov
sub
mov
lds
data16
or
pop
or
arpl
cmp
aaa
adc
fiaddl
es
sbb
stos
mov
push
mov
inc
test
nop
jle
jecxz
jle
inc
mov
lret
mov
xchg
mov
mov
out
fdivs
loop
jecxz
mov
add
fnstcw
sub
cwtl
repz
cwtl
into
xchg
sub
sbb
jg
mov
sub
test
add
enter
orl
cmp
jb
in
mov
out
movsl
arpl
sti
lcall
mov
jecxz
xor
outsb
sub
fistpll
xor
into
pop
cmpb
insb
fwait
loop
dec
popf
xorl
call
inc
lcall
pop
jle
aaa
xor
std
movsb
nop
inc
sub
inc
jb
adc
push
or
dec
loop
cmp
andb
leave
into
rcrl
push
fldcw
and
xor
popf
xor
jne
xor
arpl
leave
jecxz
test
les
xchg
mov
xor
mov
sub
out
jg
sbb
sti
sbb
xchg
pop
mov
ret
lret
mov
mov
cwtl
cld
dec
loopne
mov
xchg
xchg
xchg
imul
inc
mov
mov
test
nop
and
cwtl
icebp
ret
fs
lock
add
xlat
cmpsb
mov
js
shll
inc
add
lods
iret
mov
pop
lret
or
sub
gs
mov
push
xchg
mov
sub
and
jg
arpl
scas
jmp
sbb
mov
pop
sub
adc
push
fisubrl
jno
xor
cli
xchg
cmp
dec
pop
dec
out
js
int3
pop
cltd
fwait
jns
or
cmc
loope
sbb
scas
lods
jl
loopne
adcl
adc
scas
sub
push
orl
pop
mov
mov
jae
pusha
fildll
jecxz
loope
test
shll
cmp
out
shrb
adc
lea
xchg
std
jne
and
add
mov
add
xchg
jge
cmpb
je
inc
cmp
iret
xchg
and
mov
xchg
stos
data16
movsb
xchg
mov
mov
cmpsb
push
movsb
push
jp
stos
repz
aas
test
out
adc
and
jne
flds
out
cltd
mov
insl
iret
rcrl
jne
mov
in
pop
xchg
stos
or
push
je
cmp
ret
lods
jmp
ljmp
xchg
push
or
jmp
imul
mov
clc
mov
aaa
dec
pop
inc
out
push
inc
add
adc
and
mov
pop
stos
or
mov
sti
mov
jecxz
out
orb
cli
imul
and
and
js
jno
adc
sbb
fcmovu
inc
dec
mul
xor
mov
jp
pop
int3
add
mov
sarb
sbb
or
in
cs
cmpb
xchg
movsb
xchg
cmp
mov
cmp
adc
push
push
es
movsl
scas
pop
aas
jns
ret
xor
jns
roll
sub
loope
push
adc
jbe
adcl
flds
add
test
xchg
or
and
push
std
lea
push
xchg
push
mov
adc
pop
cmpb
mull
ja
bound
adc
jnp
sbb
add
inc
jae
xchg
pop
in
addr16
test
icebp
mov
sbb
push
imul
stos
jns
sub
add
lret
mov
adc
mov
cwtl
pop
or
add
cmp
imulb
rorl
pop
dec
cmp
pop
ret
add
loopne
dec
cmp
dec
cmp
test
dec
mov
in
rcrl
pop
bound
push
iret
xor
mov
out
jns
mov
mov
test
aas
xor
imul
mov
gs
sbb
and
lods
cmp
cmp
xor
mov
enter
cmpsl
lret
cmpsb
mov
push
cltd
sbb
lea
adc
popaw
js
int3
faddl
mov
cli
nop
gs
sahf
icebp
pushf
xor
or
dec
movsb
imul
dec
loopne,pn
xor
sub
sti
mov
aad
mov
mov
movsl
cltd
mov
int3
dec
lods
mov
movsb
jl
and
icebp
lcall
jp
ret
and
mov
push
push
pop
gs
in
push
mov
push
or
aam
ja
pop
jb
pusha
xchg
lea
xchg
das
ja
and
xor
or
scas
in
iret
mov
xor
pop
cmc
imul
xor
outsl
sbb
sbb
aam
xor
and
or
subl
andb
aam
sub
andb
dec
filds
adc
add
push
sbb
in
rolb
pop
jo
cmp
mov
sub
rcrb
adc
jbe
cmpsl
adc
dec
inc
std
pop
ss
pop
xchg
fidivrs
dec
xchg
aaa
fwait
mov
in
fwait
sbb
shlb
notb
int
insl
add
sub
fadds
mov
repnz
cmp
daa
jmp
lods
add
and
aam
pmaxub
mov
scas
lret
mov
outsb
cmp
and
add
mov
pop
in
pop
sbb
ja
sti
jecxz
mov
ljmp
iret
jno
mov
mov
cmp
roll
dec
rcrl
divb
add
inc
fisubs
addr16
mov
xchg
xchg
in
inc
lds
push
div
mov
mov
bound
mov
mov
inc
or
lock
lock
clc
add
sbb
add
arpl
or
ss
repnz
outsl
fcompl
cmp
orb
mov
out
hlt
mov
or
sub
push
aaa
and
jne
xchg
ja
in
adc
mov
lods
mov
xchg
scas
dec
xchg
dec
pop
orb
js
mov
out
bound
push
ffree
xchg
push
xor
add
sub
sahf
push
rcll
dec
sbb
or
js
aas
add
inc
into
mov
sbb
ffreep
xor
je
icebp
cwtl
dec
je
xor
ret
int
pop
sbb
lret
int3
and
lcall
adc
fdivs
jge
cmpsb
dec
sbb
inc
das
mov
scas
in
fimull
in
sub
xor
add
mull
xchg
jo
ret
stc
mov
pusha
aam
mov
push
out
dec
je
into
ljmp
sbb
dec
xchg
adc
lods
and
into
cmp
aam
std
aaa
in
jge
in
insb
jge
inc
inc
popf
cmp
inc
cltd
and
cmpsl
outsl
es
jmp
push
xchg
push
mov
ja
push
push
xchg
pop
push
fstpt
fdivrl
fstp
push
lret
jecxz
jno
push
or
sahf
orl
sti
dec
movsb
add
cmpsb
mov
mov
dec
aaa
psrlw
in
mov
xor
xchg
imull
xor
xchg
mov
or
pop
xchg
cmp
jp
ret
cmp
outsl
sti
hlt
in
mov
cltd
mov
mov
sub
jne
subl
mov
std
outsl
or
xor
add
add
jecxz
mov
lea
or
mov
shll
cmpsb
std
inc
adcb
fs
int
roll
xor
mov
test
push
mov
push
rclb
cmpb
dec
add
cmp
cmp
inc
gs
add
andl
jmp
jp
insb
mov
or
add
lods
xchg
loopne
arpl
or
in
out
into
adc
cmc
stos
pop
loop
int
jl
sti
rcr
pusha
dec
loope
push
idivb
xor
adc
and
leave
scas
xor
jmp
xchg
rcrb
mov
inc
mov
mov
push
sub
outsl
push
sbb
and
xor
mov
dec
dec
negl
movsb
aaa
cmp
cmp
fistpll
dec
dec
ljmp
xor
add
adcl
jp
dec
scas
pop
xor
stc
mov
repz
fistl
cltd
jno
movsl
push
push
lahf
xor
std
test
adc
in
bound
mov
push
int
xor
sub
test
jns
hlt
mov
loope
pop
enter
add
fwait
jecxz
loope
and
jg
mov
mov
push
add
aam
test
lcall
mov
fdivl
lret
js
into
xchg
pop
in
mov
scas
jmp
or
xor
test
aaa
mov
mov
add
push
mov
into
jecxz
insl
fwait
loope
stos
push
and
pop
sbb
xchg
insl
outsb
subb
pop
es
das
scas
mov
xchg
lods
addps
pop
fcomps
inc
orl
fsts
mov
mov
cmp
sarl
cmp
js
rolb
xor
adc
mov
dec
inc
pop
and
outsl
ljmp
inc
cld
cli
ret
loopne
js
add
mov
sub
pushf
lcall
aad
sti
imul
imul
fnstcw
add
das
insl
sub
into
cmp
fxch
push
mov
cmp
dec
or
pop
or
aad
mov
or
sahf
cmp
sbb
adc
outsb
imul
fcomi
mov
xlat
bound
sarl
mov
dec
jecxz
repz
xchg
andb
call
xchg
sub
fsubrl
enter
iret
push
and
addb
inc
sti
push
hlt
cvtdq2ps
mov
mov
imul
sbbl
daa
pop
fs
sub
xchg
mov
sub
test
imul
fimull
sarl
inc
pop
aaa
mov
pop
arpl
data16
fisubrs
xor
call
xor
push
pushf
ffreep
in
and
adc
mov
adc
fildll
inc
sti
or
jno
mov
xchg
xchg
jno
xor
xchg
lock
orl
sub
lcall
sbbb
rcrl
or
sbb
push
sub
negl
push
push
aaa
ret
cmp
pop
stos
mov
rcll
push
pop
insl
add
fcmove
jb
dec
push
and
sbb
ds
or
leave
in
push
cwtl
in
ret
dec
pop
sub
push
aad
subb
inc
jle
ret
mov
jns
mov
in
shlb
aam
xchg
scas
xor
popa
std
lea
stc
inc
dec
fs
int
push
jecxz,pt
jne
es
repz
test
push
push
sub
xor
jb
xor
mov
or
sbb
push
int
movsl
insb
pop
mov
add
pop
push
les
jo
dec
in
out
out
shll
or
pop
adc
cmp
sub
popa
xchg
out
dec
xchg
popa
dec
and
dec
mov
loop
outsb
shrl
enter
mov
sbb
push
cmp
pop
and
adc
pop
loope
test
and
inc
jns
shll
jne
add
fwait
mov
hlt
mov
sbb
mov
xor
dec
addl
mov
dec
movl
push
mov
xor
xor
sub
sub
movl
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
ja
jmp
push
push
call
jmp
mov
xor
push
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jbe
jmp
push
pushl
call
jmp
mov
sub
xor
mov
push
sbbl
add
movl
jmp
mov
mov
inc
movl
cmp
jb
movl
cmpl
je
cmpl
jb
jmp
push
push
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
movl
xor
adcl
add
movl
jmp
mov
xorl
mov
andl
xor
sbbl
mov
xorl
add
movzwl
sbbl
mov
xor
jmp
popa
sbbl
test
push
pop
dec
cld
iret
dec
into
lret
adc
jp
inc
adc
add
movsl
mov
sti
nop
or
jno
cmp
pop
or
jle
sbb
test
push
mov
push
popf
mov
jnp
int
inc
imul
pushf
data16
cmp
mov
push
cmpsl
or
ljmp
stc
daa
sbb
jnp
test
loop,pt
lahf
ss
pop
xchg
jp
adc
cmp
sub
cltd
int3
cmp
repnz
inc
cmp
repz
pop
cmpsb
cmp
aas
adcb
push
pop
lods
mov
jmp
or
outsb
jns
je
push
loopne
or
jmp
sub
mov
add
fstpt
nop
cli
mov
dec
lods
push
mov
mov
push
push
jmp
or
push
xor
jmp
dec
sub
into
jo
mov
lea
jns
sub
mov
addr16
push
mov
inc
cmpsb
add
loop
lods
fwait
jae
mov
pop
lcall
nop
pop
xchg
dec
aas
mov
aam
jns
add
dec
ja
test
pop
int
fs
push
outsb
jmp
sbb
dec
add
or
jecxz
call
outsl
xor
mov
dec
call
sbb
pop
or
jno
push
push
loopne
fldl
ds
aaa
ficomps
gs
data16
test
cmp
out
push
cmp
int
sub
inc
sbb
dec
stos
in
loopne
imul
cmp
lods
addb
add
or
jnp
aad
pop
cmp
cmpl
lcall
dec
pop
inc
loopne
out
pop
int3
mov
xor
loop
insb
inc
or
enter
fs
push
test
cmc
lods
fldt
jns
mov
ret
add
pop
cmp
mov
sub
ret
xor
cmc
mov
mov
test
mov
or
sarl
dec
xchg
stos
divl
mov
or
inc
pop
xor
dec
in
mov
mov
popf
or
pusha
mov
dec
jg
sbb
add
mov
movsb
repnz
int
int
ret
pop
push
lahf
pushl
int3
ja
popa
jnp
or
push
adc
add
in
orl
ret
shlb
mov
aad
popa
and
cli
dec
push
or
pop
mov
xor
xchg
lods
pop
outsb
push
insb
pop
mov
mov
data16
mov
fwait
jmp
adc
xor
push
xchg
out
push
add
jne
addr16
bound
mov
jmp
adc
xor
xchg
fdivrs
pop
cli
arpl
xchg
dec
jbe
and
fnstcw
xchg
js
movsl
test
xor
inc
dec
lock
in
xor
stc
shlb
add
call
decb
stc
cs
scas
ret
mov
adc
sahf
mov
cmp
aam
int
xlat
jmp
mov
lret
das
cmp
xchg
mov
lea
adc
mov
pop
or
xor
imul
sarl
aas
lret
dec
mov
cmp
mov
jns
add
loop
scas
pushf
push
out
aas
sub
jle
push
mov
jnp
cmp
ljmp
aad
or
sbb
jo
jp
mov
pop
add
mov
andb
inc
arpl
shrl
push
arpl
adcl
adc
or
arpl
movsb
xchg
pop
push
adc
jmp
mov
cmp
arpl
std
or
rcrl
push
adc
adc
scas
popa
mov
or
xor
push
call
and
xor
pop
lock
imul
mov
mov
in
in
pop
ret
and
cmpsl
aad
mov
xchg
xor
mov
jne
push
orb
addr16
sub
mov
bound
sub
lods
in
push
lods
mov
jp
in
jns
jl
inc
stc
addl
rol
pushf
lds
stos
ret
mov
jg
sti
cmpsb
mov
inc
sub
or
lods
mov
lods
or
mov
aaa
and
mov
in
cld
jns
test
fwait
mov
push
rorb
call
rcl
ja
mov
dec
stc
adc
dec
std
push
push
int3
mov
sbb
mov
sub
lods
out
push
inc
add
loop
add
cld
bound
loop
mov
adc
lahf
in
sub
mov
mov
icebp
movsl
push
cli
add
into
cmovs
in
fs
mov
jle
mov
fnstenv
adc
add
mov
xlat
sub
int3
arpl
dec
test
jne
add
jno
jae
xchg
pop
popf
ret
xchg
cmp
dec
sahf
adc
pop
scas
push
loop
mov
repz
xor
xor
push
inc
push
push
rolb
sbb
xor
sti
mov
push
mov
aam
js
dec
xor
and
inc
arpl
into
andl
lods
push
int
mov
push
outsb
mov
imul
xor
lods
cmp
xchg
popa
sub
stos
pop
sbb
mov
sub
das
out
cmp
and
push
inc
fidivrl
sbb
in
jecxz
sbb
add
push
fstpt
push
lcall
stos
in
jb
inc
stos
sub
cwtl
cmp
inc
stos
fwait
jmp
push
dec
sti
cmp
and
dec
xor
jg
shlb
sbb
daa
fists
out
outsb
shll
pop
inc
mov
inc
cmp
jg
mov
add
jne
aad
loopne
loop
dec
fsubrl
push
popl
mov
xlat
fs
lcall
xlat
mov
jns
jbe
dec
or
shrl
and
ret
push
pop
mov
jge
mov
push
loope
into
jle
in
arpl
fs
sahf
test
movsl
fidivrs
jno
pushf
aad
repz
adc
inc
test
fs
lock
and
lahf
testb
pushf
nop
in
mov
pop
cmpsb
add
stos
mov
ds
sub
int
insb
rorl
data16
repz
xchg
gs
dec
int
out
movsb
sbb
or
xchg
adc
loop
xchg
ror
inc
inc
adc
js
xor
shrb
push
xchg
mov
xchg
clc
push
xchg
sbb
dec
popf
xor
pusha
jnp
push
ja
mov
nop
mov
sub
test
or
add
rolb
push
mov
mov
sub
push
and
pop
clc
xor
pop
test
or
push
or
xchg
mov
sbbb
jno
hlt
shlb
inc
and
fwait
outsb
popf
lods
dec
push
xchg
or
inc
sti
mov
adc
rol
xchg
sbb
loopne
sbb
pop
scas
in
inc
push
ljmp
xor
mov
call
push
imul
out
xor
xor
xchg
and
lock
cmc
xor
mov
dec
cmp
adc
pop
cwtl
aaa
outsl
cmc
movsl
cld
loopne
in
ret
jp
dec
jg
in
adc
call
inc
cmp
cli
push
pushf
stos
test
push
aam
lahf
cwtl
int
insb
jns
pop
mov
add
sub
aam
mov
jl
mov
sahf
and
out
xchg
push
orl
lahf
push
xchg
mov
mov
inc
int3
jmp
mov
mov
mov
cmpsl
repz
jb
mov
into
xchg
xor
idivl
add
mov
xlat
aas
sbb
dec
xor
xchg
dec
xchg
ja
lret
add
dec
popa
xor
imull
xor
xlat
cmp
add
dec
imul
pop
stos
adc
div
and
mov
lahf
fs
mov
xchg
cwtl
cmp
jl
add
and
adc
lds
ds
orb
adc
dec
imul
inc
cmp
lret
inc
cmp
pop
fcompl
mov
fs
push
into
fimuls
sbb
adc
je
sub
mov
jl
outsl
fnsave
mov
pop
cld
mov
call
incb
cmp
xor
push
ljmp
xchg
pop
jl
xchg
shl
leave
scas
outsl
adc
mov
in
xchg
push
rcrl
dec
xchg
scas
pusha
adc
arpl
push
cmp
sarb
mov
out
fisubrs
mov
sbb
pushf
sbb
aad
popa
xor
arpl
cltd
jg
pop
dec
jl
mov
dec
test
icebp
adc
test
iret
fisubl
enter
insl
fistps
jne
add
dec
add
jmp
leave
pop
dec
clc
mov
jg
cmp
add
or
lods
xchg
cmpsl
add
fiaddl
cmp
jge
scas
ror
dec
mov
cwtl
add
mov
and
clc
ss
push
push
xor
stc
cmpsb
aas
cmc
mov
jbe
icebp
push
cltd
int3
inc
pushf
mov
xchg
mov
mov
imul
mov
bound
das
push
mov
pop
cmpsl
dec
fcomip
rorb
xor
movsb
int3
mulb
lret
xchg
ds
jb
insb
dec
movsl
or
imul
shlb
cs
xchg
pusha
and
sti
fcomip
cmp
cmp
mov
testl
mov
mov
xchg
hlt
mov
mov
sbb
push
adc
jb
mov
mov
pop
cmp
sbb
xchg
test
push
mulb
ret
fistpl
nop
cmpsl
mov
scas
or
jno
insb
pop
adc
in
fwait
int3
shll
lret
sbb
dec
mov
out
mov
lods
fisttpl
lea
cmp
dec
jmp
mov
shll
rol
xor
nop
les
mov
inc
jae
push
or
lret
test
in
clc
fldt
nop
jp
adc
dec
xchg
icebp
sbb
mov
xchg
xor
in
out
push
je
clc
inc
je
js
sbb
adc
add
mov
push
dec
movsl
pop
sbb
dec
pop
hlt
mov
cmp
popa
test
inc
mov
stc
cmpb
cwtl
je
xchg
mov
push
dec
testb
ja
loop
fmul
call
lds
and
aaa
pop
stos
xchg
sbb
xchg
movsb
repnz
fcoml
outsb
stc
sbb
mov
or
insb
fimull
pop
xor
sbb
jb
xchg
loopne
cld
pop
aam
add
leave
repz
loope
popf
fistpll
iret
lods
or
test
ficoml
shr
jmp
add
pop
out
daa
int
sbb
jbe
xchg
in
in
lods
clc
sbb
sarb
loop
push
inc
cmp
mov
sbb
sub
pop
out
test
mov
adc
mov
cmp
xchg
jns
es
jp
jb
into
lock
adc
inc
add
mov
lods
imul
or
loope
stos
shll
push
adc
or
lea
or
xchg
push
pop
fiaddl
jae
addr16
add
jns
dec
into
stos
movsl
mov
push
lods
pop
std
add
mov
jo
add
addr16
push
cltd
shlb
rorl
cmpsl
or
dec
stos
or
sbb
in
out
and
sub
rclb
xor
aaa
push
aad
lahf
dec
mov
xchg
notl
inc
add
ficoml
and
xchg
mov
gs
pop
aas
cmp
cmpsb
cmpsl
test
and
xor
xchg
in
sub
out
pop
clc
call
sub
insb
out
mov
pop
aad
int3
push
cmp
dec
decl
inc
mov
imul
subb
pop
das
jo
sbb
das
jb
call
cmp
clc
or
loope
sbb
sbb
jne
stos
movsb
mov
jne
fsubrl
jo
cmp
lcall
into
imul
stc
push
add
jnp
mov
inc
aas
decb
adc
inc
and
repnz
fcmovbe
sti
push
js
loope
test
outsl
push
pop
cs
int3
sub
xchg
cmp
push
pop
xchg
or
arpl
xchg
insb
adc
push
and
dec
sub
ljmp
xor
sbb
inc
lret
xor
test
add
mov
mov
out
dec
lea
ljmp
inc
mov
movsb
dec
aad
cltd
adc
or
or
sar
loope
jb
data16
dec
stc
in
rcrb
in
jp
hlt
imul
mov
out
test
lock
ss
stos
in
sub
jnp
mov
sub
mov
ss
mov
popf
mov
sub
jge
xchg
and
aad
dec
pop
mov
mov
int
jae
mov
shll
dec
add
jmp
jg
sub
fs
pop
cmp
mov
ficompl
in
arpl
test
adc
sub
dec
mov
add
iret
pop
addr16
rcl
xchg
pop
js
sub
pop
pop
push
pop
ror
mov
gs
je
or
insb
jb
jle
mov
sbb
test
clc
fbstp
subb
push
pop
pop
xor
jl
pusha
push
es
out
insl
fwait
notb
das
xchg
mov
sub
cmp
xacquire
and
js
adc
aaa
imul
movsl
outsb
jecxz
stos
in
pop
repnz
push
mov
dec
mov
repnz
xlat
aas
jl
or
stos
mov
test
mov
mov
stc
xlat
or
adc
and
fwait
adc
cmp
jae
out
mov
test
jmp
das
es
adc
mov
in
xchg
cmp
push
push
fsubr
data16
les
pusha
jne,pt
jb
adc
push
mov
xchg
xchg
test
inc
test
rcrl
inc
add
xor
sub
sub
pop
icebp
lea
push
pop
pushf
sbb
int3
testl
pop
das
xchg
push
fistpl
imul
push
pop
and
int3
aam
hlt
stos
outsl
stos
ret
or
icebp
rcll
jno
clc
bound
pop
pop
vpsadbw
adc
js
xorl
insb
cmp
int3
xor
inc
fistl
sub
cltd
mov
cld
mov
shlb
ret
mov
inc
test
insl
sbb
sbb
stos
xchg
push
mov
je
test
rcl
mov
rorl
loopne
enter
mov
and
lods
jle
jae
inc
xor
pop
pop
mov
mov
shlb
and
arpl
mov
cltd
push
sbb
ficoms
push
mov
mov
hlt
std
sub
cmpsb
mov
fdivrl
daa
imul
push
stc
incl
fdivs
push
xchg
enter
popf
adc
jle
mov
add
xor
mov
dec
stos
jns
dec
add
mov
cld
xchg
enter
popf
mov
out
or
subb
push
sub
popw
subl
mov
test
mov
adc
sbb
fcomps
repnz
xchg
pop
adc
aaa
cmpsb
mov
insb
ss
pop
test
mov
jo
call
jbe
xor
pop
mov
scas
xchg
mov
lret
jne
clc
adc
adc
inc
xchg
das
rcll
adc
jp
mov
xor
xor
add
rorb
imull
lahf
sbb
je
loopne
pop
addr16
dec
add
mov
adcb
xchg
roll
sub
aaa
adc
in
xor
and
scas
and
and
sbbl
mov
and
pop
inc
jnp
ds
mov
push
stos
in
hlt
xchg
xchg
sbb
loop
jo
test
add
adc
jle
sbb
pop
mov
sbb
inc
adc
jl
pop
adc
cmpsb
pushw
imul
or
cld
aad
mov
adc
xchg
adc
js
stos
lret
mov
and
jo
dec
loop
mov
icebp
sub
repnz
imul
mull
bound
hlt
stos
ss
mov
ds
pop
out
mov
add
dec
mov
sub
add
andb
int3
fwait
insl
and
fs
mov
movsl
mov
insl
std
adc
cmpb
movl
dec
mov
jle
pop
shll
xchg
clc
out
cmpsb
and
inc
pop
jg
xorl
dec
xor
out
gs
jae
xor
fisttpl
push
xchg
lmsw
lds
fwait
or
push
inc
and
cmc
jbe
inc
push
push
xchg
in
mov
sti
xor
pop
fxch
hlt
xchg
sbb
enter
xlat
adc
std
insl
fwait
cwtl
fidivrl
shll
dec
subb
rolb
js
cmp
pop
xchg
aaa
mov
enter
movsl
popf
ljmp
in
sbb
push
pop
sub
sbb
addb
loope
push
mov
pusha
mov
nop
jae
ljmp
mov
or
stc
sub
imul
js
cmpsb
jb
xor
xchg
push
dec
rorb
xchg
aad
cli
or
stos
adc
cmp
dec
out
dec
roll
jb
push
push
aam
mov
call
mov
pushf
stos
mov
sbb
jmp
or
ffree
pop
vpunpckhdq
jnp
shll
adc
sbb
enter
xchg
ficoml
xchg
js
or
pop
subl
out
sahf
xchg
jle
xchg
and
or
orl
jo
cld
out
in
xchg
lods
dec
mov
nop
adc
ret
cmpsb
in
pusha
adc
ds
dec
dec
xchg
cmp
sub
pushf
rcrb
cld
sbb
xor
inc
je
mov
mov
and
xlat
stc
leave
fsubrs
adc
xor
insb
cmp
int
push
sbb
pop
pop
mov
sbb
inc
movsb
in
jmp
or
pop
push
cmp
or
sbb
pop
aad
out
ja
hlt
adc
cmovs
ds
cmp
es
cmp
call
xchg
sti
push
push
leave
cmp
sub
rcll
aaa
rcrb
loop
pop
gs
inc
mov
jns
outsb
sbb
mov
jnp
push
iret
cmp
xor
pop
cli
test
fnstsw
or
cmp
incb
pop
jg
xchg
cmp
fnclex
dec
decl
mov
cwtl
loope
imul
add
pusha
lcall
mov
sub
mov
in
lcall
dec
subl
pcmpgtd
cmp
fcmovnb
jle
stos
sbb
fmuls
lret
cltd
mov
scas
push
xor
hlt
inc
inc
mov
sahf
mov
pop
rolb
dec
jmp
mov
push
xchg
push
mov
dec
push
arpl
push
dec
jmp
xchg
test
cmp
sbb
mov
jge
pusha
mov
out
mov
jg
xchg
popf
jmp
cmp
ja
rcrl
fstpt
lret
cmp
mov
iret
jb
or
mov
fsubl
jno
sbb
sbb
mov
push
fbstp
dec
push
addr16
pop
inc
sbb
jo
dec
jo,pt
les
sub
fisubl
jb
pusha
jge
xchg
jns
cld
xchg
mov
jne
jl
cld
scas
jb
pop
pop
bound
into
adc
inc
mov
in
aam
movsb
hlt
ret
out
and
sbb
out
mov
fiadds
sbb
mov
mov
sbb
in
call
mov
ljmp
xchg
jecxz
rcrb
cld
xchg
mov
lods
and
and
cmp
movsb
pop
in
add
es
into
lock
cltd
outsb
lods
ja
dec
pop
add
push
mov
xor
in
sbb
movsb
andl
shl
lcall
mov
fisubrl
inc
cmp
xchg
insl
hlt
das
inc
adc
popa
aas
jb
pop
sbb
aad
sub
mov
adc
out
lret
outsl
jb
or
push
and
push
mov
sbb
addr16
fcoms
dec
in
inc
lcall
and
adc
outsl
in
jecxz
jmp
or
sti
cld
shl
adc
mov
in
pop
jge
jne
popl
jecxz
xchg
stos
or
cmpl
and
enter
gs
sub
push
jo
into
daa
sbb
pop
stc
mov
sbb
pop
or
cmp
clc
je
btcl
data16
add
stc
xor
adc
jle
pop
es
mov
out
sbb
push
sti
jbe
inc
clc
add
mov
push
div
jns
mov
repz
pop
adcb
sbb
fs
sbb
cmp
lea
mov
loope
dec
sbb
inc
pop
lcall
dec
xor
jg
sbb
gs
or
fld1
iret
mov
insb
dec
pop
mov
dec
mov
clc
dec
jle
in
adc
jbe
loope
stos
gs
and
and
xorb
sbb
rcl
mov
ror
movsl
insl
ret
xor
dec
jge
test
mov
jmp
pusha
mov
lahf
loopne
xchg
stos
add
sbb
jae
mov
lret
sbb
out
pop
mov
xchg
lods
jg
cmp
jge
jg
fdivrl
sub
fmul
ja
shr
xor
aam
loope
int
movsl
xchg
cmpsl
leave
push
out
or
fcmovnbe
xorl
xor
jg
rclb
or
fnsave
popa
push
jbe
test
test
addr16
dec
xchg
movsl
mov
and
inc
push
scas
pop
jno
es
push
sbb
xchg
xchg
lret
mov
cmp
mov
aam
add
jnp
push
aas
cmp
les
xchg
xchg
and
push
fwait
mov
int
sbb
cld
mov
enter
lcall
xchg
andb
loopne
in
sbb
fcmovnb
repnz
pop
out
or
lcallw
test
dec
push
pop
adc
int
push
in
pop
in
or
ds
sbb
sub
sahf
jecxz
adc
scas
aam
imul
jmp
in
imul
adc
sbb
pop
lahf
push
mov
iret
pushf
fsubl
jns
icebp
xchg
xchg
lds
fsubr
addl
push
in
jns
push
sub
xchg
pop
and
fwait
jb
lods
aam
shll
ret
xchg
fstl
lss
sbb
sarb
insl
push
sbb
das
sti
pop
sub
sub
mov
adc
and
daa
cmp
mov
scas
cmpb
movl
add
mov
sub
jp
xor
nop
cmp
stc
fildl
xor
or
mov
mov
cmp
or
js
or
xor
mov
scas
cmpsl
jl
hlt
and
fstps
mov
mov
dec
jmp
inc
xor
mov
in
and
popa
xchg
dec
push
mov
adcb
mov
pop
mov
xchg
inc
ja
pushw
out
lcall
popf
int3
push
lea
mov
push
and
lret
push
mov
stc
and
out
jle
sahf
int3
cmpl
andb
xor
fwait
neg
lds
sbb
cmp
pop
out
mov
lods
test
push
loop
dec
insl
pop
mov
popl
pop
jl
int
pushf
mov
fistl
push
lcall
pop
rorl
add
sbb
fstpt
cmpsb
bound
cld
cs
sub
pop
fisubrl
inc
xor
xchg
jne
cwtl
mov
jecxz
jo
js
pop
mov
dec
adc
mov
addl
leave
dec
cwtl
and
sbb
jae
dec
push
pushf
or
out
rcll
les
lret
mov
and
test
jnp
cmp
push
loop
cld
in
mov
xlat
mov
mov
dec
popl
mov
dec
inc
cwtl
in
pop
dec
xchg
rcrb
jne
and
paddw
jg
enter
aas
push
sub
mov
outsb
shll
stc
push
fnstcw
lds
xorb
dec
xchg
fwait
and
xchg
jno
fmull
sti
xchg
jle
in
mov
mov
jne
scas
xlat
scas
imul
fstpt
jae
fisubl
pushf
pop
add
js
jecxz
jecxz
ret
frndint
mov
dec
nop
ljmp
shll
enter
cwtl
jp
shlb
ret
addl
xlat
clc
iret
adc
fcoms
loope
fistpl
shlb
jg
es
test
jmp
in
lock
xor
mov
pusha
lcall
inc
rorl
lods
sti
sub
addr16
cmp
push
pop
mov
fistpl
shll
xchg
sub
dec
cs
hlt
xor
sbb
pusha
jnp
push
nop
jmp
pop
inc
xor
dec
adc
inc
mov
mov
iret
jo
fwait
push
or
stos
pusha
jno
dec
in
push
adc
sub
cld
or
or
jno
loope
andl
jb
or
sub
popa
sub
xor
aam
jecxz
loopne
out
inc
pop
and
push
jmp
insb
clc
cmp
iret
or
dec
xchg
mov
xchg
push
lea
jnp
daa
pop
rcll
aaa
mov
jp
xchg
mov
ret
cmp
push
scas
mov
or
dec
jmp
add
mov
es
push
ret
adc
imul
sbb
out
push
jo
mov
or
xor
insb
data16
cld
aad
test
adc
add
das
mov
mov
adc
mov
push
pusha
inc
insl
mov
fwait
packssdw
xor
jae
inc
mov
sub
dec
inc
push
sbbb
loope
lods
xchg
push
ljmp
popa
and
es
sarl
sub
out
stos
add
jle
jnp
cmp
xor
mov
popf
mov
sbb
adc
gs
mov
xchg
jb
xchg
cmp
push
push
pop
mov
testl
cmpsb
mov
jl
enter
jo
test
popa
shlb
movlps
mov
ret
mov
mov
cmp
sbbl
jno
cmp
inc
insl
in
xchg
in
fldcw
push
iret
cltd
jns
inc
fistl
cmp
sbb
fildl
jp
aam
fadds
inc
add
sbb
pop
or
add
popf
out
cmp
imul
inc
out
mov
rcrb
into
sub
insl
nopl
cs
dec
dec
jecxz
ss
jno
aam
das
cmp
xchg
push
test
lret
jp
stos
push
xor
mov
aas
or
outsb
sub
xor
sbb
xchg
xchg
imul
or
mov
pop
and
leave
push
xor
adc
mov
cmp
adc
adc
jl
inc
add
aam
cltd
add
popa
jbe
cmp
scas
jecxz
lea
cmpsb
pop
or
sub
stos
js
add
add
lcall
aam
mov
and
jns
push
inc
in
dec
push
adc
push
and
popf
adc
into
dec
shl
jbe
jl
stc
jnp
adc
rol
shlb
sbb
push
dec
incl
push
imul
mov
test
lret
dec
mov
lahf
pop
fs
jns
das
cmp
shl
xor
push
int3
pushl
mov
test
test
mov
add
jle
pop
or
dec
in
sbb
in
pop
unpcklps
jbe
std
das
lods
mov
jns
test
out
in
test
jl
jne
in
cmp
push
push
clc
pop
inc
rorb
push
mov
mov
sbb
loop
cld
jno
push
lcall
enter
xchg
arpl
div
fldcw
add
loope
into
mov
fstpl
cltd
xlat
dec
cmpl
jns
rcll
or
pop
sub
fidivl
pushf
mov
and
xchg
cmp
inc
mov
leave
aaa
outsl
lea
mov
fsubrs
xlat
mov
notb
fdivrp
xchg
sarb
pop
loop
test
loop
and
pop
or
pushf
jmp
mov
call
stos
adc
mov
sbb
les
das
lahf
shll
cmp
mov
or
inc
mov
sub
pop
mov
sbb
and
jg
pop
sub
outsl
xchg
push
lahf
movsl
xchg
jbe
xor
repz
outsl
fwait
xor
ret
xor
aam
sub
mov
sti
push
mov
jb
pop
adc
sahf
hlt
mov
xor
xchg
or
inc
and
mov
imul
and
sub
inc
repz
xor
into
test
inc
rolb
int
dec
pop
xlat
cmc
cmp
mov
cmp
mulb
dec
hlt
xchg
jmp
orl
mov
lods
adc
push
jmp
mov
mov
cmp
fimuls
jg
add
mov
js
mov
stos
stos
cwtl
mov
sbb
sbb
out
fwait
lcall
pop
adc
fucom
xchg
ret
test
xor
pop
mov
xor
loopne
into
xlat
mov
aam
add
loopne
insl
test
ljmp
mov
mov
dec
movsb
in
adc
shrl
jle
cmp
fs
out
sub
sub
cmpsl
dec
mov
stc
and
mov
or
push
sub
ljmp
icebp
stos
in
or
push
fmuls
sub
icebp
fisubl
pop
inc
lds
mov
insl
mov
cltd
xchg
addr16
nop
imul
sbb
dec
aaa
sub
fisttpl
test
pop
and
or
jns
push
mov
adc
je
cmc
jae
mov
stc
andl
pop
out
clc
fimuls
leave
je
ja
sbb
movb
dec
inc
js
pushf
mov
pop
mov
xchg
inc
push
ja
sub
mov
movzwl
xorl
xor
subl
add
mov
mov
incl
mov
inc
mov
movl
cmp
jne
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jg
jmp
push
pushl
call
jmp
mov
or
xor
add
mov
adcl
mov
and
xor
add
mov
movl
mov
xor
mov
movl
and
movl
andl
mov
inc
mov
cmpl
jbe
jmp
call
cmpl
jb
mov
sbb
mov
and
mov
adc
xor
xor
add
mov
mov
mov
movl
je
movzwl
or
mov
or
mov
adcl
xor
movl
xor
sub
neg
sub
adc
xor
xor
or
sub
mov
mov
and
mov
subl
add
subl
imul
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jbe
jmp
push
pushl
push
push
call
cmpl
jne
xor
or
inc
mov
jmp
mov
movl
cmpl
je
cmpl
jb
jmp
call
mov
dec
mov
jmp
mov
xorl
mov
sbbl
add
or
movzwl
sbb
mov
mov
andl
xor
xor
inc
mov
cmpl
jge
jmp
push
pushl
push
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
add
adcl
xor
andl
mov
andl
mov
mov
sbbl
add
and
xor
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jge
jmp
call
jmp
mov
mov
notl
lea
add
mov
movl
mov
mov
sub
movl
cmpl
je
cmpl
jge
jmp
push
push
push
call
xor
or
dec
mov
jmp
add
mov
mov
adcl
xor
adcl
add
jne
movl
jmp
mov
adc
sub
xor
or
or
mov
xor
mov
mov
sbbl
mov
subl
xor
xor
movl
sub
andl
sub
xor
movl
mov
mov
mov
jmp
mov
mov
xorl
xor
adcl
xor
sbbl
sub
or
sub
andl
xor
xor
inc
mov
cmpl
jbe
jmp
pushl
pushl
push
pushl
call
cmpl
jne
xor
or
inc
mov
cmpl
jb
xor
andl
xor
or
inc
mov
cmpl
jbe
jmp
push
push
push
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
jmp
or
jns
mov
test
xchg
movntpd
jp
adc
jp
jnp
mov
idivb
pop
lods
dec
lea
inc
ja
bound
out
mov
mov
xchg
lret
loope
rcl
jns
or
in
xchg
int3
in
push
pusha
push
fdivl
imul
loopne
jo
fisubl
jp
sbb
add
add
mov
arpl
das
testl
sahf
addr16
mov
lock
fdivs
nop
lods
loop
pop
jbe
jbe
out
mov
aaa
movsb
and
sub
dec
stc
jbe
and
sub
enter
jo
xor
scas
popa
xchg
test
ret
jle
mov
leave
test
test
fsubr
mov
and
jns
sbbl
or
shll
xchg
mov
dec
mov
push
mov
lods
jb
dec
sbb
push
out
movsb
jnp
or
xlat
fists
pop
insb
orb
out
pop
jne,pn
imul
xchg
ret
jns
cmc
imul
add
fcomps
in
add
jecxz
test
adc
movsl
xchg
je
push
fsubs
scas
inc
jno
stos
rol
dec
ret
push
adc
js
lea
dec
negl
push
negl
dec
push
jo
and
les
call
mov
push
inc
xchg
aad
mov
imul
add
mov
lcall
inc
call
cwtl
repz
or
bound
rcll
inc
inc
jnp
jl
pop
jb
mov
lcall
push
inc
push
in
sbb
out
jno
cli
dec
bound
pushl
mov
push
ret
jae
xchg
jg
dec
and
xchg
pop
fldenv
add
add
push
sbb
fmulp
es
pop
sti
ss
jae
imul
mov
pop
addr16
push
arpl
adc
cmp
xchg
sub
les
lcall
dec
ljmp
fidivrl
mov
stos
sbb
adc
outsl
mov
addl
push
jb
push
mov
ja
push
test
insl
or
cmpsb
xchg
adcb
mov
and
adc
enter
test
shll
mov
inc
pop
iret
and
inc
popf
imul
pop
pushl
mov
out
add
lods
mov
in
popf
xor
setne
push
xchg
cltd
lock
jg
mov
cmpsl
aam
sub
and
inc
jle
sti
sahf
pusha
inc
aad
xchg
pop
sbb
dec
dec
jno
in
fcompl
mov
daa
ret
loopne
push
mov
mov
push
lret
imul
xorb
ljmp
sub
pandn
insl
cmp
sbb
xor
lahf
or
push
cld
pop
cmp
pop
out
ljmp
imul
lods
xor
in
testl
xchg
mov
xchg
dec
or
jp
aam
cs
sub
sbb
enter
lea
leave
lods
fsub
sti
inc
sbb
pop
imul
test
push
pop
sbb
sbb
push
dec
fwait
mov
shll
mov
stos
ret
xor
scas
jo
inc
ret
cld
sbb
sub
jmp
push
adc
sub
dec
loopne
xchg
test
jge
out
int
ja
lock
pop
daa
jo
divl
jge
push
inc
lcall
adc
fs
mov
repnz
jae
xchg
mov
inc
std
or
and
test
adc
jns
jno
inc
inc
jmp
test
popf
xchg
mov
xchg
lods
out
lock
gs
int3
mov
sub
in
lods
xchg
dec
ud0
or
xchg
ds
mov
sarb
and
pop
adc
sti
sahf
imul
or
in
jb
stos
loop
mov
inc
mov
aad
mov
xor
inc
jmp
clc
fdivrs
sub
cwtl
or
mov
sbb
inc
or
je
aad
jnp
sbb
mov
pop
clc
inc
dec
cmpsl
push
inc
pop
push
mov
mov
pop
repz
test
push
inc
cld
and
repnz
fstpl
push
cld
adc
pop
mov
push
lods
shrl
ljmp
or
jp
push
adc
xchg
mov
push
mov
aaa
cmc
into
std
popf
out
out
fincstp
lea
test
push
aas
xchg
mov
iret
iret
push
call
jnp
pop
xor
mov
and
fnstenv
xchg
inc
add
mov
jge
test
enter
call
pop
sub
cmc
pop
jp
dec
fcompl
ja
ds
pop
or
add
add
inc
neg
insl
negl
daa
lea
xorb
dec
adc
jmp
push
jo
mov
push
sbb
add
enter
mov
out
jle
pop
sub
mov
sti
push
sub
addl
push
push
jp
std
addr16
dec
mov
and
fdivl
cmp
out
dec
dec
data16
mov
xchg
lock
adc
lock
pushf
pop
dec
fldl
mov
xor
xor
sbb
daa
add
mov
in
adc
stos
cmp
dec
cltd
fs
cmp
addr16
cmpsb
add
daa
sub
cltd
in
push
into
shrl
addr16
lret
lods
int
xor
call
and
cmp
add
adc
mov
cmp
inc
xchg
fld1
popa
xchg
jno
loop
cmp
out
mov
and
or
into
sbb
mov
and
xor
mov
cs
add
pop
push
inc
rorb
pop
sbb
aad
ror
iret
ret
call
cmp
lods
xlat
adc
dec
mov
mov
push
ds
mov
and
dec
test
mov
lock
pop
xchg
push
insb
dec
or
push
sar
dec
mov
inc
enter
fs
push
cld
shl
test
xchg
pop
aad
imul
jmp
sub
cmp
add
fsubrl
sarb
jns
mov
xor
ss
fstl
sti
stos
inc
and
fwait
rorb
mov
dec
jl
outsl
mov
aas
lahf
jbe
call
push
mov
xlat
rcl
dec
sub
lcall
ja
mov
push
mov
daa
sub
les
push
jns
aam
enter
dec
imul
addr16
cmpsb
hlt
ss
cmp
notb
in
inc
cwtl
xor
sub
push
add
xor
xor
push
push
xor
pop
cs
nop
jae
aam
les
idivb
lcall
sub
xor
test
mov
add
pop
xor
aaa
jge
call
pop
in
sar
xor
pop
dec
mov
xor
xor
ja
jns
das
outsl
pop
cmp
sbb
adc
iret
dec
pop
lods
int3
rclb
mov
in
pop
sub
xchg
sub
inc
or
and
or
mov
push
inc
and
movsl
fcmovnbe
and
dec
cwtl
xchg
in
ja
bound
ja
call
pop
in
outsl
lar
arpl
add
lea
ljmp
jmp
insb
dec
std
dec
and
cltd
and
sub
lcall
cwtl
ljmp
data16
dec
sub
sbb
push
xorl
dec
mov
lret
xchg
mov
mov
push
mov
push
loop
enter
pop
mov
fsubrl
aad
sbb
sbb
xchg
repnz
mov
data16
shll
and
cmp
or
sub
xchg
push
aam
jnp
pop
shll
lock
jle
mov
mov
fs
out
dec
addb
inc
mov
pop
push
xchg
xor
shr
lcall
mov
hlt
inc
in
mov
ret
cmpsb
gs
push
lret
jecxz
loopne
fs
mov
mov
ret
lahf
mov
xor
adc
push
jo
repz
or
or
lock
add
or
pusha
sbb
mov
mov
xchg
fiadds
je
xchg
mov
mov
mov
nop
sub
lahf
imul
int
sub
daa
xchg
or
cmp
frstor
jmp
mov
ret
leave
aad
rorb
sub
ljmp
jne
jg
sub
xchg
xchg
lret
pop
sbb
jae
dec
dec
mov
dec
lock
cwtl
dec
dec
sbb
cmpsl
loopne
mov
add
loop
test
inc
sub
stos
mov
inc
dec
sbb
jmp
sarl
dec
pusha
lods
sbb
mov
das
icebp
and
xor
lcall
jbe
imul
ret
jne
cmc
jecxz
cltd
or
push
dec
pop
adc
rorl
lds
xor
xchg
adc
mov
imul
mov
add
mov
dec
mov
in
sti
mov
out
das
fadds
ret
and
inc
or
push
cmp
lea
dec
in
enter
xchg
pop
pop
pop
adc
adc
out
out
cld
cmc
cld
ljmp
out
add
mov
pop
lods
add
pop
sbb
lcall
mov
xor
ja
nop
ret
shll
xchg
sub
and
fs
aaa
int3
xor
jne
das
cwtl
push
dec
sti
mov
jnp
insl
xor
add
divb
jp
push
test
xor
lret
pop
adc
popf
mov
das
outsb
push
sbb
and
inc
loope
cmpsl
lcall
adc
jae
dec
add
ss
or
in
push
cmc
cmovo
pushl
xorl
icebp
sbb
push
movsb
fneni(8087
push
push
adc
cli
ret
add
sahf
movl
push
push
in
jle
pop
or
frstor
push
sbb
shll
xchg
or
mov
push
and
cmp
lahf
pop
loop
rorb
mov
push
bound
aas
outsb
xchg
xor
rorb
jl
cs
mov
addr16
mov
xchg
outsb
cmp
pop
cmpsb
push
js
lds
xchg
mov
clc
insb
pop
testb
push
cs
mov
inc
adc
sub
sbb
cltd
push
jo
leave
je
ss
hlt
iret
jl
mov
test
push
lods
cltd
mov
push
add
outsb
and
mov
les
aam
sar
xchg
arpl
lcall
int
out
mov
icebp
jbe
adc
mov
data16
shlb
push
xchg
scas
dec
and
push
xchg
rclb
jl
dec
cmp
jecxz
inc
fbstp
shl
xor
sbb
push
inc
xlat
xchg
shrl
and
add
pop
xchg
ljmp
cmp
cs
scas
mov
ljmp
push
or
popf
out
mov
pop
insb
mov
stos
push
lds
pop
mov
insb
push
add
icebp
aad
inc
pushf
push
fidivs
lods
stc
cmp
push
add
movsb
lret
mov
jo
pushf
lods
xor
test
xchg
dec
repz
pop
mov
or
adc
jg
pop
mov
mov
cmp
and
int3
addr16
scas
js
leave
mov
outsl
xchg
mov
mov
pop
mov
jle
inc
dec
and
dec
inc
push
mov
rcrl
dec
mov
fstpl
lcall
mov
cmp
mov
cwtl
cmpsl
pop
push
psubsb
rcl
scas
sbb
mov
incl
sbb
mov
push
jle
xchg
cli
ss
pop
xor
dec
sbb
push
loope
fisttpl
cld
call
or
rcll
pop
sub
cmpsl
mov
mov
or
enter
rcrl
addb
icebp
adc
xchg
or
push
loopne
popf
jns
xchg
in
and
dec
imul
int
ja
cmp
xor
pop
jg
add
daa
xchg
insl
imul
ja
cmp
shl
xlat
pop
decb
push
sarb
or
push
and
cmp
mov
xor
divb
cmpb
xchg
push
sbb
roll
ficompl
mulb
enter
xchg
push
xlat
or
rclb
rcrb
xchg
popa
popf
xchg
popa
jo
call
filds
roll
push
dec
scas
pushl
cmpsl
inc
jbe
ja
and
push
cmp
xchg
mov
and
cwtl
pop
fs
fidivrs
inc
mov
push
xor
ret
ror
dec
daa
mov
cmp
cmpb
sbb
ss
popf
out
stc
lret
add
scas
bound
adc
in
xchg
cmp
ret
repz
icebp
add
jmp
nop
repnz
sbb
fidivrl
aaa
lea
push
loop
repz
mov
mov
cmp
aas
sbb
xchg
fmull
push
adc
mov
icebp
lahf
insb
dec
inc
dec
int3
nop
mov
adc
xor
pop
pushf
push
insb
fninit
sub
movsb
mov
fs
mov
scas
jae
jne
xor
lods
cwtl
and
leave
adc
popf
lahf
jo
insb
sahf
push
mov
loope
icebp
add
idivb
js
jo
add
in
mov
mov
adc
mov
movsb
fsubs
aaa
mov
jno
inc
decb
iret
dec
dec
sbb
ljmp
lock
jnp
inc
jb
xchg
out
cmp
pop
mov
rolb
xor
adc
test
repz
ficompl
stc
aam
jne
lahf
ds
sub
stos
dec
lods
mov
loopne
inc
or
add
push
cmp
lock
int3
jg
inc
scas
jp
xchg
and
fs
fsubrs
aad
jno
ficompl
stc
int
inc
es
jnp
and
mov
inc
sahf
adc
adc
out
cmpl
fmuls
mov
sbb
jge
add
into
add
filds
dec
aas
add
fs
ret
inc
jmp
je
dec
mov
push
push
jnp
pop
cmp
push
and
test
ljmp
outsl
add
pop
cmp
sub
ja
sub
add
xchg
xchg
pop
sub
outsl
lods
add
cmp
cmpl
mov
xchg
push
xchg
imul
dec
and
subb
mov
imul
insl
cmc
xchg
imul
into
jnp
cmp
adc
mov
mov
adc
cltd
shll
cli
adc
sub
mov
xchg
dec
push
mov
fdivrl
lods
mov
ficoml
xor
dec
in
es
pop
push
jg
pop
mov
jbe
popa
sbb
mov
fdivrl
into
jl
je
clc
sub
or
sbbl
push
lcall
ja
lods
dec
jne
sbb
aad
imul
sub
xchg
or
cltd
gs
xchg
cwtl
mov
out
lret
jle
js
imulb
pop
icebp
fstpl
je
mov
mov
mov
jge
push
xlat
sti
cwtl
mov
xchg
and
add
andw
mov
stos
test
inc
cmp
loop
cmp
aam
sbb
adc
cmp
jle
fnstenv
pop
fstl
mov
aaa
dec
push
stc
mov
insb
push
insl
bound
dec
add
sub
lcall
cmp
jae
imul
mov
lods
adc
movsb
or
pop
mov
aas
lock
lods
sbb
cmp
cpuid
imul
js
xchg
cmp
int3
lret
dec
fmuls
or
sub
ja
lcall
inc
bound
iret
jge
out
daa
aam
arpl
mov
test
xor
rcll
in
or
xchg
pop
das
mov
push
out
mov
icebp
push
pushf
mov
popa
jl
or
repz
ljmp
rorl
mov
pop
pop
push
cld
dec
fadds
jecxz
xchg
lock
cmp
dec
dec
fadds
adc
and
xlat
or
nop
mov
push
and
sbb
leave
add
pop
inc
xchg
shrb
shrb
lds
loopne
push
jno
cmp
adc
xor
and
mov
or
jns
fwait
mov
das
repnz
je
pop
mov
mov
lock
roll
jg
fstl
xchg
outsb
iret
je
xor
pushf
sub
jle
sub
cmc
daa
and
cwtl
sub
mov
push
or
sbb
test
call
pop
xchg
leave
add
pop
push
adc
data16
pusha
pop
fisubs
xor
or
dec
hlt
push
sbb
int
lahf
hlt
mov
mov
sub
xchg
out
xor
mov
jnp
push
ljmp
ljmp
outsb
mov
mov
outsl
mov
mulb
ss
and
inc
jge
jbe
movsb
mov
dec
mov
and
popf
aam
dec
fs
iret
sbb
movsb
cmp
arpl
cmp
inc
mov
push
fildl
mov
aas
xchg
sti
out
test
inc
nop
or
loop
xchg
xor
or
stos
jns
loope
lcall
dec
inc
cmpsl
pop
add
popa
pop
add
sbb
mov
addr16
aad
into
xchg
js
sub
or
cli
push
mov
mov
arpl
ss
sbb
xor
or
add
loope
ds
insb
mov
mov
xor
pop
jl
ss
sbb
iret
aas
mov
and
mov
fcoml
cmpsl
dec
inc
xor
inc
jmp
mov
lds
pop
out
mov
xor
dec
mov
sub
mov
push
pop
cmp
sti
jae
pop
data16
insl
xchg
fcomip
sarb
insl
dec
mov
and
and
mov
sub
mov
insb
mov
inc
daa
or
or
cmp
dec
jg
outsb
dec
cmc
data16
cmp
nop
mov
in
cmp
add
mov
add
xor
xchg
cli
and
xchg
aad
roll
enter
insb
jne
ret
or
ret
imul
xchg
cmp
les
pop
adc
push
test
icebp
inc
xchg
sbb
std
sub
inc
mov
jge
xchg
xchg
pop
lret
pusha
nop
test
nop
fwait
mov
jno
es
rorl
mov
jo
jecxz
or
dec
or
mov
ljmp
inc
faddl
lods
test
push
mov
xchg
mov
push
jo
dec
dec
mov
push
pop
pop
add
jmp
xchg
jbe
mov
jne
add
addr16
rep
and
mov
shl
mov
aaa
cmpsl
sbb
mov
cld
and
cwtl
pop
fld
fstps
shll
fildll
inc
repz
jle
dec
inc
cs
mov
xchg
negb
sub
mov
lret
pop
nop
and
add
fnstenv
xor
sbbl
or
cmpxchg
repnz
sbb
adc
xlat
dec
testb
pop
pop
out
inc
add
adc
jge
cs
mov
xchg
lock
adc
adc
lcall
xor
test
das
rcrb
mov
xchg
rorl
jecxz
and
sub
push
mov
inc
mov
mov
sbb
push
sar
jle
cmp
out
lahf
lahf
xchg
jns
sbb
mov
aam
insb
ss
enter
push
aas
and
push
dec
push
dec
sub
sbb
testb
in
pushw
mov
insb
pushl
mov
jns
leave
xor
sahf
sahf
ficomps
enter
lods
push
pop
scas
leave
flds
push
iret
push
fs
xchg
inc
pop
mov
int
dec
in
mov
ja
mov
and
stos
shlb
nop
les
pop
xchg
push
cmp
dec
imul
popa
and
shrb
sub
lcall
pop
into
data16
xorl
mov
jnp
adc
jge
icebp
mov
xchg
sbb
arpl
test
add
mov
or
push
mull
mov
pop
and
or
fildl
aad
mov
fsubrs
or
pop
stos
out
in
jl
hlt
sbb
inc
rclb
lods
rorb
jnp
xchg
adc
into
push
mov
jg
mov
xor
sbb
mov
mov
fstp
jno
mov
adc
loop
and
fwait
jg
lods
outsl
shrb
xor
fcoms
pusha
jp
les
cwtl
mov
xchg
pusha
adcb
sbb
push
mov
and
hlt
es
ret
ret
mov
push
call
add
cmpsl
sub
cli
sub
mov
xchg
pop
ds
sahf
mov
add
adc
or
dec
addr16
lcall
aam
fmuls
mov
out
fiaddl
jae
fisttpll
bound
mov
clc
pop
pop
bnd
dec
js
test
xorl
push
sbb
pop
cltd
ret
cli
cmp
aaa
ss
sbb
ss
pop
iret
add
sbb
dec
mov
sub
push
call
xor
mov
inc
and
cltd
das
out
in
xlat
add
add
movzbl
mov
xor
test
pop
loop
xor
pop
addb
push
mov
icebp
push
dec
mov
addb
jp
ja
loopne
gs
mov
sbb
sahf
mov
test
clc
jns
aad
adc
scas
pop
aad
iret
aaa
cmc
lret
cmp
sub
cmp
mov
leave
fistps
mov
sahf
int
dec
xor
addb
pop
dec
fwait
loopne
cmp
in
iret
mov
fstp
mul
lods
ja
inc
dec
push
add
loopne
loope
enter
sub
fildll
cs
sub
repnz
ret
movsb
ds
cwtl
cmp
add
mov
imulb
mov
sahf
and
xchg
mov
jp
fistpl
mov
pop
in
pop
gs
js
mov
sti
lahf
or
shrl
push
adc
sahf
mull
fdivrl
sub
pop
push
and
insl
ljmp
adc
test
pop
lahf
leave
pop
jnp
fcoml
add
pop
imul
jnp
jnp
cmpsb
outsl
pop
cmp
push
mov
xor
jb
pop
js
mov
jnp
xor
outsb
jae
inc
cli
mov
cli
leave
lea
xchg
sbb
fildl
mov
mov
xchg
push
ja
test
ja
imul
mov
mov
adc
push
repz
pop
jns
sti
das
idivb
cs
or
hlt
das
mov
pop
mov
jecxz
xlat
push
add
pop
out
xor
pusha
popa
clc
xchg
addl
fdivs
testl
outsb
inc
fstl
loop
push
mov
shlb
mov
mov
gs
adc
outsl
add
mov
stos
and
jle
dec
loopne
aad
xor
mov
pop
xor
sub
adc
dec
das
int
ss
jl
aaa
dec
mov
mov
mov
mov
sbb
add
mov
loop
push
push
popa
or
insb
adc
lds
stos
mov
inc
xchg
xchg
jl
rclb
adc
adc
jl
pushf
shr
and
or
cmpsl
nop
add
cmp
loopne
rcr
mov
lcall
xchg
int
xchg
in
ja
xor
push
push
lods
movsl
sbb
lock
jns
xchg
mov
enter
stc
push
jl
mov
pop
xchg
push
xchg
sub
mov
mov
scas
xchg
mov
daa
cmp
xchg
pushf
pop
xor
nop
outsb
das
addr16
pop
add
arpl
je
in
adc
dec
xchg
in
pusha
ret
jb
fadds
call
jecxz
jg
rcrl
jp
pop
adc
mov
mov
mov
sti
cmp
mull
imul
inc
push
int3
push
das
test
dec
repnz
test
add
test
pop
jbe
subl
imul
fldl
pop
test
pop
dec
in
xchg
cmp
dec
mov
test
xor
int3
fdivl
inc
pop
xor
xchg
xchg
arpl
cmp
loop
cmp
pop
add
adc
xor
mov
or
mov
and
in
jmp
dec
bndldx
cmp
pop
or
cmpl
cmp
jmp
fs
arpl
sub
addr16
inc
enter
and
fwait
inc
lcall
xchg
inc
push
push
or
dec
icebp
negl
cmp
inc
pop
add
xchg
rcr
aaa
imul
jecxz
pop
pop
jnp
mov
jno
push
mov
add
out
mov
test
ret
insl
ret
std
xor
shlb
imulb
scas
push
rol
repz
into
add
cmpsb
mov
cmc
cmpsb
cmp
cltd
incl
mov
mov
sub
xor
jge
and
loope
pop
lcall
lcall
outsb
jl
jne
shl
sti
or
lahf
or
lds
inc
mov
xor
js
sbb
push
inc
push
movsb
aam
pop
daa
loope
jecxz
cli
pop
and
mov
std
jge
adc
push
loopne
cmp
pop
jge
cmovne
imul
push
in
xchg
fcmovu
push
sub
loope
jmp
sub
into
stos
data16
xor
add
jl
jge
dec
push
das
jg
jno
xchg
in
jle
mov
xchg
and
clc
daa
xor
push
push
out
call
mov
repnz
cmc
jae
cli
andl
xchg
mov
mov
in
push
and
jmp
pop
inc
inc
lods
into
cld
dec
mov
lock
add
ljmp
cmp
in
push
leave
push
push
gs
out
cwtl
or
test
adc
push
jmp
icebp
xor
enter
push
cmp
mov
fldenv
out
aam
cs
mov
jbe
aas
xor
mov
dec
daa
hlt
or
xchg
cmp
test
jge
movsl
cld
dec
jns
jb
movsb
clc
cmp
addl
jge
xor
pop
push
in
mov
dec
mov
fsubrl
scas
cmp
out
scas
ret
or
inc
sbb
jnp
insb
pop
stc
cltd
push
cmp
lock
les
cmp
mov
mov
xlat
daa
cmp
test
sub
push
cltd
jmp
dec
pop
fld
mov
rorb
ficomps
aaa
icebp
mov
in
jle
pushf
aam
insl
pop
aam
mov
add
leave
cld
ret
mov
cltd
addl
and
int3
mov
push
int3
push
xchg
out
lcall
divb
test
les
mov
decb
arpl
pop
pusha
mov
mov
xchg
push
lods
sub
test
inc
test
inc
push
shlb
mov
mov
bound
mov
test
pushf
xor
cmp
dec
jb
ret
sub
shrb
jb
mov
mov
xchg
andl
lret
dec
shlb
fisubrs
outsl
das
add
pop
push
cmp
hlt
lret
sbb
jmp
sar
or
pop
aas
push
and
pop
es
sbb
pusha
cli
ret
xor
out
cmp
testl
rcr
jnp
xor
xchg
mov
jae
xor
pop
and
add
movsb
nop
dec
lds
std
inc
dec
adc
pusha
jbe
test
and
cmp
fldt
inc
pop
jp
push
push
sub
jg
fdivrp
mov
mov
adc
pop
xchg
xchg
xchg
add
in
scas
adc
orl
mov
ret
push
aaa
inc
in
sub
and
test
shll
lret
or
cmp
out
rol
jbe
incb
hlt
imul
call
mov
adc
or
cmc
jecxz
jge
cltd
dec
cmp
jmp
lea
and
stc
movsb
pop
gs
pop
mov
xchg
in
xor
jbe
lahf
mov
lds
jmp
or
andl
lods
das
pop
sbb
push
push
push
jne
sbb
lds
pop
loop
inc
inc
jnp
push
or
hlt
shlb
scas
mov
fiaddl
adc
xchg
push
shlb
or
mov
out
stc
mov
lcall
jmp
mov
add
push
int
test
xor
iret
xor
and
jecxz
add
pop
fwait
and
sub
dec
mov
test
mov
rorb
cmc
loopne
sti
adc
fmul
or
rclb
push
add
orl
mov
movsb
xor
adc
jae
fdivrs
inc
jbe
xchg
jae
mov
push
jno
xchg
in
out
gs
clc
lret
lcall
mov
daa
jno
stos
adc
mov
push
cmp
movl
fldcw
push
stos
fwait
pop
cltd
ss
fadds
nop
lods
stos
repz
adc
mov
loope
cwtl
jbe
mov
xorl
jecxz
inc
xchg
xchg
cmp
lods
sub
sarl
cmpsl
aam
fdivs
les
rolb
lea
sbb
cwtl
scas
jle
out
in
ror
inc
das
mov
jecxz
scas
jnp
adc
jl
sbb
cltd
aas
jbe
xor
out
xchg
in
push
xchg
adc
nop
jle
mov
xorl
mov
daa
adc
add
out
fnstcw
xor
sub
js
xor
les
push
inc
mov
push
pop
fidivl
push
out
sub
into
int
xorb
vsubpd
push
sub
in
cmp
stos
inc
dec
push
sbb
xchg
fcmovb
push
cmp
lahf
push
lods
inc
outsl
sbb
mov
push
pop
fists
sub
mov
out
ja
lahf
mov
movsb
adc
fadd
jmp
mov
lcall
or
add
adc
dec
test
or
test
ret
push
add
scas
rorl
or
pushf
clc
add
rorl
or
xor
mov
mov
mov
add
and
mov
mov
mov
lea
mov
mov
mov
sub
add
mov
mov
xor
add
jne
mov
mov
mov
cmp
je
mov
mov
mov
mov
xor
cmp
jne
mov
mov
xor
movsbl
mov
xor
add
cmp
mov
mov
mov
je
jmp
lods
xor
out
fwait
fwait
sub
dec
cmp
jp
pop
jp
inc
dec
loop
dec
sarb
xor
dec
scas
imul
test
fldenv
sub
adc
les
fadds
pop
dec
sbbl
pop
out
sub
rcrb
jge
mov
addr16
sbb
mov
xor
test
xor
out
mov
lahf
sbb
les
sti
dec
sbb
mov
mov
or
stos
jo
jmp
hlt
pop
sbb
fwait
or
imul
insl
jbe
pop
jno
in
das
les
mov
clc
enter
sbb
mov
mov
mov
add
jae
mov
bnd
cmp
cwtl
dec
fdivs
push
gs
lock
adc
lcall
add
hlt
jl
jp
in
arpl
dec
xchg
mov
imulb
push
ja
inc
push
nop
cmp
nop
pushf
or
sbb
mov
pop
xchg
fs
mov
mov
scas
ret
pop
xlat
push
dec
add
adc
pop
ret
insb
out
push
call
in
xor
ret
cli
in
fdivs
nop
das
jg
sub
jo
fs
fs
lds
loope
push
sub
cmc
stos
jne
out
lea
jmp
mov
lret
sub
push
jno
dec
cmp
sbb
jp
out
mov
push
mov
mov
in
jns
xor
adc
push
pushf
pop
mov
daa
mov
test
dec
fwait
inc
jnp
jne
push
fmuls
xchg
push
dec
out
mov
mov
pop
out
or
iret
pushf
push
enter
dec
pop
je
pop
rcll
mov
push
dec
lods
or
rclb
hlt
pop
xor
mov
mov
scas
dec
ljmp
jne
movsb
pop
addr16
aas
or
xchg
in
pop
push
sbb
mov
outsb
mov
repnz
aad
out
jo
cmp
fdivl
xchg
add
lcall
push
pop
push
in
stos
rorl
nop
loop
iret
iret
popa
je
out
and
sahf
test
xor
push
cmp
cmp
adc
aaa
sub
push
sub
shrb
cld
mov
lcall
push
scas
push
dec
leave
mov
xchg
sub
cli
xchg
sbb
mov
repnz
out
pop
adc
jmp
popa
mov
jp
push
mov
and
iret
mov
test
xchg
adc
jno
xor
or
lds
into
push
xorb
pop
inc
ss
shl
pop
xor
cmp
jl
out
jnp
cmp
insl
icebp
in
jbe
cmp
mov
push
popf
orb
outsb
stos
mul
and
aaa
or
cwtl
ljmp
call
out
sbb
pop
or
cld
push
fwait
sbb
popa
fcmove
push
dec
mov
sub
test
movl
out
mov
pcmpeqb
fidivrl
into
mov
roll
inc
cld
lahf
clc
sbb
jns
xchg
push
movaps
mov
add
adc
cmovs
xor
mov
je
fstps
aaa
cmp
jns
and
je
jae
pop
mov
stos
pop
push
rclb
jb
test
lea
pop
and
in
sarl
test
xor
jno
push
outsl
xor
in
outsb
push
dec
dec
stos
sbb
pop
adc
pop
xchg
dec
xlat
call
add
mov
aaa
dec
mov
dec
xor
lds
shll
loope
xor
or
rcr
imul
lret
out
add
aam
xchg
lret
imul
adc
jl
addl
int3
adc
mov
push
nop
jmp
jp
movsl
xor
sub
xchg
fdivrs
int3
fmull
sub
cli
cmp
cmpsb
stos
add
dec
icebp
stc
mov
cmpsl
inc
out
in
jmp
inc
mov
mov
push
ss
mov
rcll
dec
add
mov
int
mov
ss
movsb
divb
mov
popf
jge
mov
ret
stos
rol
scas
nop
add
das
and
lods
dec
outsb
stc
fisubl
lcall
sub
nop
xchg
fstps
or
mov
in
fs
dec
gs
mov
mov
stos
rcrl
cmp
subl
and
popf
sub
gs
jmp
lret
cmpl
shl
pop
sbb
inc
in
mov
scas
loop
jge
pushf
cmp
cli
push
mov
sub
cmpsl
inc
push
jle
int
mov
test
enter
mul
ret
call
imul
sbb
fwait
lcall
dec
inc
dec
divb
lods
lock
std
icebp
sbb
mov
in
scas
fimull
fisubrl
xchg
jle
fcmovb
mov
jge
cwtl
dec
in
fsubrs
call
pop
cmp
jae
addr16
push
xchg
jno
jo
insb
mov
add
sbb
mov
inc
leave
out
xchg
rorl
sbb
scas
sbb
into
mov
mov
stos
push
outsb
cmp
sbb
push
jmp
dec
jno
or
clc
fildll
nop
icebp
jl
cs
cmpsb
hlt
sub
xchg
pop
dec
fwait
ljmp
lock
sbb
fidivrs
sti
jb
jle
dec
jmp
inc
jns
xchg
xchg
dec
sbb
dec
loopne
jle
xor
push
add
jp
stos
insl
sbb
add
jp
lahf
out
sub
or
cltd
popf
mov
out
mov
pushf
mov
xor
pop
lcall
mov
int3
cmpsl
fildll
sbb
push
lahf
shl
pop
int3
dec
sbbl
mov
stos
push
ds
mov
insl
ljmp
ja
cld
pop
cmp
lea
fbstp
push
lret
or
sbb
insl
in
mov
pusha
notl
test
sarb
pushf
out
cmp
cmp
in
popf
mov
adc
push
das
fistl
into
jb
xchg
ljmp
mov
mov
or
push
mov
mov
data16
jbe
dec
bound
mov
push
mov
imul
add
out
pop
push
popl
leave
and
int
jle
rcrb
sahf
push
jmp
cld
push
push
add
push
fcmovb
or
pop
inc
fimuls
jp
sbb
fbld
fisttpl
test
fisttpll
gs
sti
cs
push
stc
imul
pop
add
pop
clc
sub
add
pop
and
xchg
ds
sbb
sub
das
cmp
int3
mov
cmp
or
mov
fildll
jne
xchg
rcrl
loop
fcompl
das
leave
pusha
inc
fucomi
stc
adc
xchg
jne
jl
js
xor
inc
cmc
fldt
pop
cmp
push
rcr
inc
fiadds
call
test
cli
sbb
lods
ret
pushf
dec
sar
movsb
or
push
pop
adc
stos
sbbb
adc
gs
xchg
mov
sbb
insb
sbb
outsb
pop
xor
dec
stos
loop
add
ja
in
dec
or
test
adc
lret
iret
scas
push
xor
jge
sarl
jae
or
test
and
flds
sbb
push
mov
and
fs
into
mov
mov
fsubr
imul
pop
shll
and
xchg
jbe
rcl
push
stos
mov
out
cmp
and
dec
mov
scas
pusha
in
int
imul
rorb
ret
xchg
das
pop
push
xchg
les
mov
dec
ds
dec
inc
or
pop
nop
jnp
into
and
add
cmp
repnz
test
mov
movsb
lcall
jbe
adc
xchg
jnp
jg
dec
lock
rclb
ljmp
mov
mov
repnz
mov
mov
adc
daa
andb
inc
outsb
xor
push
test
aaa
and
notb
les
xor
jle
mov
or
pop
in
sub
push
push
fiadds
xchg
jge
sub
pop
movsb
mov
les
cmp
sbb
jo
lret
or
mov
fsts
std
mov
ret
xor
xchg
aam
add
and
push
jge
jg
sbb
cmpsb
push
popf
popf
add
or
cmp
addl
pushf
rcrl
cmp
clc
mov
loop
pop
inc
imul
lret
dec
adc
lret
jnp
or
stos
mov
sbb
cmp
push
insb
mov
clc
lret
mov
rcl
inc
lcall
xor
jmp
mov
xor
mov
dec
aas
xor
inc
inc
aas
add
xor
jno
adc
xchg
jnp
mov
add
cmpb
xchg
idivl
or
cmp
push
in
je
push
pop
imul
call
mov
imul
test
mov
jnp,pt
sbb
iret
insb
jo
nop
sub
jne
das
jecxz
out
in
inc
mov
pop
and
fwait
sub
mov
add
add
cmp
and
aam
mov
inc
data16
aam
mov
inc
test
jge
aam
xor
push
cmp
ja
jno
and
sti
dec
add
jp
or
cs
loope
scas
in
scas
cmp
lcall
xor
mov
inc
jle
sub
or
sti
pushf
sbb
ja
inc
add
jno
daa
jecxz
xchg
xchg
stos
sub
mov
adc
cwtl
into
mov
xlat
es
dec
push
xchg
inc
xchg
out
enter
scas
fisttpll
aad
xchg
enter
push
dec
cmp
push
cmp
mov
out
push
in
adc
mov
out
dec
lcall
and
jecxz
hlt
and
xor
ss
sub
repz
pop
mov
jle
push
mov
dec
xchg
cmpb
insb
inc
jmp
cltd
lea
loop
inc
cltd
xchg
filds
mov
lods
movl
mov
movaps
lcall
sbbl
inc
mov
call
jae
cli
cld
int
add
push
mov
mov
cli
and
lock
lods
sbb
hlt
test
fisubrl
js
add
js
cwtl
arpl
scas
iret
mov
push
sub
mov
cmpsb
lods
clc
ss
sbb
inc
or
rcrb
jns
movsb
call
mov
in
ss
pop
cltd
mov
dec
in
pop
fimuls
popa
ret
mov
and
fisttps
out
mov
adc
mov
cmpsb
dec
aad
xor
mov
fcoml
sub
test
lret
lds
pop
lret
inc
push
or
xchg
push
cltd
stc
push
mov
push
dec
add
rcrl
out
gs
test
fisttps
pop
mov
jmp
mov
stos
xor
negl
bound
je
out
cwtl
jp
jne
dec
adc
sub
pop
loopne
adc
inc
testb
lret
jbe
enter
les
mov
outsl
stc
fldl
and
mov
cmpb
rolb
adc
jo
sbb
mov
addr16
sbbl
dec
mov
inc
jmp
push
cld
pop
add
push
nop
dec
pop
inc
stos
imul
add
std
ret
sub
fstl
pusha
rcr
aas
into
or
jg
sub
and
dec
jecxz
int3
loopne
jg
dec
rolb
cli
and
mov
adc
movsb
clc
push
adc
push
xchg
cs
mov
fisubl
lock
aaa
cli
sahf
jl
cmp
mov
adc
jno
loope
push
jmp
push
dec
jns
les
test
jl
in
insb
sub
dec
inc
outsl
in
cld
hlt
repnz
inc
stos
out
into
push
mov
cmp
lret
mov
outsb
cmp
sub
outsb
or
clc
fildl
outsb
nop
adc
sahf
and
ja
jae
push
les
popf
mov
cmpsl
stos
xor
xchg
loop
dec
and
repz
inc
fidivrs
xor
jecxz
push
pop
mov
jns
xchg
jno
mov
iret
fimuls
sub
pop
lea
lahf
ja
mov
pop
jae
jge
push
cli
sub
add
rcl
lock
das
pop
and
sub
mov
dec
mov
mov
xorb
push
ret
xchg
push
or
mov
idivl
scas
scas
cli
cmpsb
add
pusha
in
or
pop
push
ret
rolb
inc
add
repnz
mov
pop
das
cwtl
or
in
out
and
or
lcall
adcb
mov
cmp
mov
ffree
mov
fsubl
pushw
dec
adc
mov
jg
mov
mov
mov
into
mov
mov
or
movsl
adc
dec
pop
ja
or
pop
ds
out
cmp
jle
inc
xor
or
and
pop
push
xor
js
dec
mov
mov
pop
into
push
mov
frstor
xchg
arpl
mov
lret
xor
test
movsl
fs
mov
cmpsb
jl
xor
mov
sti
inc
xor
in
lret
xchg
push
inc
in
add
sub
cltd
les
sub
jmp
leave
sbb
in
xchg
divl
std
outsl
stos
inc
and
push
popf
sbb
repnz
jmp
cmp
lods
xor
sbbl
dec
mov
xchg
mov
imul
or
mov
in
mov
stc
add
sbb
xor
sbb
pop
pushf
cmpsb
or
sbbb
add
inc
mov
mov
fwait
xlat
sti
inc
loope
pop
xchg
sbb
xlat
and
inc
rclb
and
push
pop
lds
add
lds
or
ljmp
mov
shlb
cmpsl
out
ret
cmp
stc
shlb
ret
lods
jb
push
xor
cmpsb
call
add
xchg
fisttpl
mov
lret
cmpsb
jg
icebp
dec
jle
dec
lret
push
or
das
mov
mov
xchg
aam
insb
sahf
dec
pusha
fistps
repnz
add
xchg
push
pop
mov
imul
inc
sbb
lods
ret
adc
hlt
rorl
lods
hlt
cmpsb
mov
sub
mov
push
scas
or
adc
dec
xor
mov
fidivs
push
aaa
stc
cmp
outsl
cmp
std
sub
and
cmpsb
in
cmp
in
adc
add
fbstp
stos
leave
jg
xchg
jne
push
and
lcall
push
xor
psrlq
sbb
shll
nop
fimuls
cmc
call
shl
test
aam
negl
fistps
fmuls
pop
pop
sbb
or
xchg
xchg
cmpsb
aam
mov
mov
dec
fsubr
sbb
fwait
rcl
dec
icebp
hlt
push
in
ret
or
adc
push
dec
repnz
mov
int
ljmp
xor
and
mov
push
icebp
add
loop
out
insb
mov
lods
add
stos
xlat
jne
ret
das
leave
stos
mov
sbb
test
xchg
jae
add
inc
mov
repz
jae
bound
or
icebp
subb
movsb
adc
ljmp
xor
jae
mov
and
add
imul
roll
inc
stos
xchg
cs
lcall
aaa
xor
loopne
lods
rorl
dec
ficoml
jge
jae
fnstsw
push
sbb
stos
pop
jmp
fisttps
sub
or
sbb
notb
push
xchg
divl
add
and
pop
fwait
insl
xlat
das
fdivl
sbbb
jne
xchg
cmp
jns
add
outsl
into
adc
adc
invd
cmp
es
mov
xchg
mov
inc
ds
ud2
jecxz
jmp
ljmp
addb
xor
push
shrb
cmc
aas
rcrb
hlt
xchg
and
adc
dec
xchg
cmp
or
mov
adc
xlat
pushf
and
dec
aam
movl
push
mov
les
add
iret
dec
xor
imul
sbb
roll
out
addr16
push
outsb
mov
or
mov
insl
mov
jo
mov
xchg
xorl
cmp
es
xchg
lds
loop
sbb
jle
jns
xchg
pop
ja
ss
push
sub
inc
cwtl
lea
sub
cmp
mov
ret
stos
or
fcom
fs
sbb
insb
shlb
test
mov
test
ret
ljmp
xchg
andb
int
xchg
sub
fs
cmp
push
pop
push
int3
shrl
jle
pusha
xor
push
pop
lods
mov
pop
or
addl
dec
mov
dec
pusha
pop
fnsave
ss
add
and
sbb
out
push
push
pop
out
adc
data16
sbb
cltd
adc
cwtl
pop
sar
addr16
repz
lahf
sbbb
test
mov
sbb
sub
mov
push
pop
das
cmc
ss
inc
dec
psllw
out
mov
push
xor
stos
fwait
pop
testb
ret
and
sub
sbbl
xlat
sbb
jnp
adc
js
outsl
pop
call
outsb
orl
mov
sub
ja
jbe
inc
in
or
or
push
mov
movsb
jno
das
fs
addr16
mov
add
sub
add
inc
pop
scas
xlat
dec
arpl
fsts
lock
insb
popf
cmpsl
adcl
mov
mov
mov
xor
cmp
or
push
add
cmpsb
xor
or
lcall
push
and
mov
inc
push
arpl
lock
jno
bound
push
pushf
mov
adc
pop
rcrb
mov
pusha
sub
int
pop
xor
in
pop
call
push
insb
in
sbb
repnz
int
shll
inc
loopne
jb
xchg
inc
jg
in
pop
sub
enter
loopne
int
clc
mov
jmp
xor
xchg
dec
arpl
cmpsb
push
xor
and
sub
inc
sbb
xrelease
jne
pusha
es
leave
mov
pop
in
add
int3
lods
sbb
cmp
xchg
repz
adc
mov
nop
mov
lods
inc
push
clc
sub
push
rorl
mov
shll
mov
xchg
cmp
into
dec
in
dec
shrb
pusha
sbbl
movsb
stc
add
popf
mov
aad
jle
scas
xchg
mov
nop
push
je
pop
push
das
mov
jbe
sahf
icebp
ret
cmp
inc
cmc
fcomps
cmp
ja
pop
sbb
into
ret
stos
in
mov
cmpsb
xchg
pop
leave
enter
mov
stos
scas
push
nop
inc
sub
inc
dec
inc
dec
adc
cmpsl
jne
outsb
mov
out
fs
xor
mov
sar
dec
cmc
inc
sub
push
loopne
mov
pop
repnz
lret
in
call
pop
inc
mov
daa
jnp
push
sbbb
xor
cmp
xor
and
inc
fldl2t
popf
ret
mov
mov
loopne
out
ds
cmp
xchg
add
sbb
push
lret
mov
push
call
in
pop
push
push
sub
pop
pop
rcr
pop
loop
push
popl
outsb
cmc
sbb
pop
cli
into
dec
sub
mov
sahf
dec
pop
loope
addr16
imul
bound
aad
test
mov
sub
cs
xchg
xor
dec
lods
cltd
dec
aaa
mov
xor
cli
test
fwait
ret
and
js
sbb
shlb
ds
movsl
or
push
cmp
jge
jne
out
outsb
and
push
pop
jmp
dec
cltd
inc
addr16
push
pop
push
mov
inc
sarb
pop
mov
mov
sbb
mov
mov
andl
in
jmp
mov
inc
int3
sbb
popl
adc
lret
gs
repz
pop
sbb
push
or
pop
push
dec
push
mov
test
cmp
adc
call
jne
in
dec
xor
into
adc
jle
int3
pushf
pop
xor
fwait
xor
nop
data16
push
xchg
xchg
mov
mull
cmp
cs
in
out
clc
sub
push
ret
mov
enter
icebp
push
out
xor
fwait
pushf
inc
divl
fldenv
sbb
addr16
xchg
rcll
and
adc
and
xchg
jmp
into
mov
daa
or
in
loop
adc
into
mov
or
mov
shlb
and
jo
popf
jnp
xlat
nop
test
mov
sti
adc
jmp
sub
xchg
sbb
jae
cmp
repnz
xchg
dec
arpl
cmpsb
dec
ret
sbb
pop
orl
sbb
test
mov
arpl
add
out
add
cmpsb
sahf
mov
jo
mov
out
enter
lea
test
ss
add
repnz
jle
cmp
jmp
jp
adc
out
in
cltd
add
out
shrb
mov
mov
and
in
rcr
lret
sbb
mov
mov
cmp
aaa
and
fxch
add
movsl
jge
out
xor
jno
ds
push
in
fmuls
jae
ss
xchg
push
dec
mov
push
loopne
int
xchg
mov
cwtl
jno
mov
imul
lock
imul
cwtl
mov
jo
mov
cmp
sbb
pop
dec
adc
dec
emms
mov
add
insl
loopne
popl
stos
dec
xchg
jno
sbb
sti
sbb
pop
jge
pusha
lods
sub
pusha
adc
loope
mov
cmc
loopne
shlb
mov
xor
push
xchg
push
xchg
dec
dec
mov
push
jle
or
mov
nop
pop
push
loopne
popa
mov
mov
mov
xchg
mov
les
cli
sbb
out
push
push
push
jp
push
push
out
in
push
lods
inc
cld
popf
mov
mov
dec
lret
sarl
jle
add
mov
pop
sahf
nop
sub
fbld
cmp
xchg
sbb
icebp
ror
inc
leave
xchg
loop
adc
cmp
cli
cmp
jge
xor
mov
add
or
aas
xor
cmpsl
jg
lret
pusha
adc
mov
and
jl
mov
mov
mov
lea
aam
mov
mov
xchg
out
mov
jp
mov
mov
pop
sub
ret
loopne
je
add
mov
outsb
fists
pop
ljmp
push
adc
push
cmc
leave
in
push
sbb
jmp
or
mov
jg
push
int3
jp
cmp
or
inc
enter
jmp
shl
pop
cmpb
enter
rcrb
sti
adc
clc
sbb
sbb
inc
adc
dec
add
sbb
pusha
dec
sarb
dec
lret
in
in
add
dec
and
push
loop
push
imull
sbb
add
inc
pop
lahf
loopne
aam
add
inc
cltd
adc
xor
arpl
xchg
lcall
mov
cmp
ljmp
inc
lret
mov
dec
dec
or
scas
pop
ja
mov
dec
cld
dec
inc
mov
scas
loop
ds
test
sub
out
jb
mov
popf
push
scas
negl
pop
xchg
mov
mov
xchg
jmp
das
pop
and
arpl
ret
jecxz
adc
xchg
fs
popf
std
lea
repz
or
subl
mov
imul
jp
out
sti
mov
sbb
push
pop
cwtl
xor
loop
cmpsl
push
insb
call
das
jns
push
cmc
adc
lods
mov
sub
mov
and
nop
shll
and
clc
pop
ret
pop
insb
cmp
mov
f2xm1
out
mov
and
ja
call
clc
scas
aas
jo
js
xchg
xchg
adc
push
leave
sbb
xchg
push
pop
push
das
sbb
xor
fs
repnz
inc
xchg
scas
pop
insl
mov
jg
out
push
mov
stos
mov
push
ljmp
jb
cwtl
sbb
sbb
inc
pop
jp
push
lahf
cltd
pop
xor
xchg
lods
mov
cmpsl
or
outsl
stc
bound
push
leave
dec
dec
adc
das
rorl
jnp
call
cmp
popa
sbb
insb
fxch
loop
pop
add
shlb
lea
sbb
fstpl
jb
lea
lods
addr16
shrb
ss
xchg
test
addr16
loop
nop
cmc
jle
jns
insl
dec
cltd
and
enter
and
jle
xchg
outsb
sbb
push
push
mov
iret
outsl
popf
fbld
cmpsl
testl
mov
loope
mov
aam
or
cltd
in
popf
mov
js
and
push
push
fistpl
jns
out
fdivrs
inc
imul
xchg
pop
and
jg
xrelease
cmp
je
jae
mov
dec
pushf
xchg
js
popf
out
ficompl
mul
into
mull
dec
sub
xchg
mov
lods
xchg
xchg
data16
push
popa
shll
lods
das
or
loop
xchg
or
pop
imul
dec
push
push
or
test
pop
push
mov
push
dec
fnstenv
rol
movb
mov
mov
sub
outsl
and
add
iret
mov
into
mov
cli
push
pushf
pop
and
out
and
cmp
les
jl
or
adc
jb
fidivrs
fprem1
aam
inc
das
adc
xchg
dec
dec
ss
cld
daa
out
stos
add
lcall
scas
mov
pop
test
jmp
inc
pop
rcll
lahf
andl
cld
dec
inc
sti
stos
hlt
inc
push
mov
sbb
xchg
cmp
les
cmp
pop
rolb
xchg
jnp
movsb
fbld
mov
adc
xchg
lret
vpavgb
cmp
dec
repz
in
inc
insl
dec
popa
hlt
enter
lods
and
fisttpl
mov
jno
push
sbb
or
add
pop
and
leave
mov
mov
ror
and
jne
or
pop
in
loop
jmp
add
sub
jle
jae
fistps
aas
fisubs
xor
pop
aam
push
ljmp
add
iret
shl
xor
dec
int
lods
movsl
jmp
rorl
push
mov
xor
lea
loopne
orb
adc
fs
lock
jl
int
lret
stos
ret
bound
or
mull
test
gs
imul
pop
aad
ret
adc
std
test
insl
lods
lahf
dec
data16
sub
jge
repnz
add
mov
pusha
adc
sub
fisttps
pop
jmp
loopne
inc
mov
in
mov
daa
mov
sbb
imul
dec
sbb
push
stos
lds
pushf
gs
mov
mov
push
out
fimuls
outsb
xchg
push
pop
loopne
push
add
inc
adc
cmp
or
or
mov
dec
ss
jb
push
fidivs
dec
rorl
xchg
cmpsl
call
std
gs
push
dec
arpl
dec
xor
mov
in
faddl
out
xor
out
sub
cmpsb
outsb
push
cmp
mov
sbb
sub
lock
xchg
jmp
and
lret
lds
push
xchg
inc
mov
fsts
and
sub
inc
xchg
stos
inc
rcl
cld
sbbl
cmpsl
xchg
rol
js
adc
mov
pop
repz
mov
fs
gs
fldenv
sti
push
dec
xchg
sub
inc
movsl
push
cmp
inc
dec
sbb
mov
flds
xchg
push
jae
mov
aad
scas
sub
rcrb
lret
jg
adc
lds
scas
and
xor
push
movsl
mov
cli
add
shll
rep
mov
push
sbb
sbb
xlat
push
scas
adc
jnp
jp
popf
dec
pop
sti
and
js
lret
test
mov
cs
pop
inc
jno
inc
aas
test
mov
test
inc
adc
outsb
aaa
pop
lock
push
js
sub
mov
xchg
xchg
into
mov
stos
sub
divl
mov
xchg
jp
mov
add
lret
pop
add
lods
pop
loope
insl
test
mov
test
int
push
fwait
loop
pop
xchg
movsl
fidivrl
add
aam
icebp
insl
fsub
fldl
jle
jl
rcrl
scas
data16
add
jbe
mov
lods
mov
nop
adc
add
stos
xlat
out
mov
dec
pop
cmp
mov
adcb
sub
dec
xor
push
xchg
and
in
fisubl
loopne
xchg
and
jne
cmp
ds
fbstp
ficoml
divl
cmp
xor
jno
add
or
fildl
fsubl
stos
jbe
or
add
lahf
test
xor
ror
insb
mov
and
lods
imul
and
arpl
cmpsb
dec
mov
inc
xchg
lds
dec
mov
stos
jge
mov
shr
int3
out
loopne
xchg
dec
xchg
cmpsl
outsl
mov
add
fdivrl
mov
shr
mov
popf
dec
xor
jge
mov
imul
pusha
mov
xchg
sti
lahf
push
cmp
jb
push
sbbb
stos
sbb
and
inc
fnstsw
and
iret
arpl
xchg
inc
adc
push
push
test
and
leave
scas
xor
push
pop
push
jmp
pop
int3
and
jns
daa
jb
les
lea
out
dec
push
xchg
out
ljmp
jecxz
mov
add
jle
pop
mov
adc
xchg
mov
and
cpuid
mov
loopne
jg
dec
sub
dec
shrb
push
add
lock
stos
mov
mov
mov
aam
mov
add
pop
mov
or
xchg
in
mov
mov
add
dec
je
mov
fs
sar
sbb
mov
je
jmp
cwtl
add
or
test
pusha
mov
inc
test
xchg
pusha
jns
adc
jp
das
push
push
mov
pop
push
cli
les
mov
jae
dec
je
dec
test
pop
dec
adc
rcr
xchg
xor
xchg
sbb
fcmovbe
xor
les
loope
and
mov
or
aas
sarl
adc
push
dec
xor
pop
test
jo
loop
repz
ljmp
push
insl
nop
outsb
pushf
jbe
mov
negb
js
mov
pop
clc
pop
int
fidivrs
fistpll
add
add
js
push
xorl
or
je
add
pop
lret
push
push
aam
shrb
mov
sahf
pop
xlat
pop
pop
push
into
out
lret
adc
lea
lahf
sub
pop
je
ja
pop
mov
push
das
lret
leave
fcoml
lods
fs
sbbl
mov
fidivrs
sbb
push
lret
push
xchg
clc
dec
mov
pop
in
scas
pop
push
das
int3
into
push
or
dec
shll
dec
ljmp
aaa
jecxz
jle
mov
aaa
data16
dec
pop
lock
inc
mov
mov
sbb
or
sub
faddl
into
cmp
nop
push
fsubs
dec
ljmp
lods
jmp
pushf
rcrb
cmp
cmpsb
sub
dec
jge
scas
xchg
xor
insb
cwtl
inc
add
fcmovnu
test
xchg
dec
cmp
or
lods
test
jmp
int
push
ret
sub
cmp
ds
cmp
xchg
sub
ret
xchg
stos
adc
scas
lea
cmp
hlt
push
int3
rcl
lock
pop
js
faddl
cmp
hlt
stc
into
adc
jae,pn
or
imull
push
jp
nop
xor
dec
loope
adc
cmpsl
jg
sti
mov
stc
mov
xchg
dec
cmp
aas
repz
inc
aaa
push
pop
jne
rorb
pop
sbb
aam
sbb
push
scas
push
es
xchg
data16
imul
dec
jmp
mov
inc
lods
sbb
clc
sbb
loop
ljmp
sbb
mov
dec
pop
cmp
ds
in
jecxz
adc
cmp
fisubl
adc
dec
imul
xchg
fstps
add
fcom
mov
cld
ss
sub
jbe
inc
stos
in
imull
fildl
cmp
cmc
inc
dec
and
cwtl
pop
push
push
sarb
inc
sub
sub
jnp
cmpsl
int3
enter
xlat
in
outsb
out
sbb
scas
fsubrl
cmc
add
mov
in
adc
lahf
cmc
adc
cmpl
nop
or
popa
xchg
sti
jno
mov
cmp
mov
push
pushf
cwtl
out
push
popf
dec
imul
push
enter
pop
outsl
mov
mov
in
stos
or
xchg
and
bound
push
pusha
jns
or
mov
xlat
inc
lock
lret
sbb
in
and
lahf
push
dec
int
negl
out
addr16
push
dec
push
insl
fnstsw
dec
out
or
pop
in
inc
mov
xchg
inc
mov
cmp
cmpsb
push
mov
adcl
fsubrl
mov
leave
pop
xlat
insl
lret
xor
test
sub
xor
out
mov
sbb
out
ja
mov
fstp
mov
imul
pop
add
add
jecxz
out
ret
shlb
fsubs
cmp
mov
add
in
adc
fnstenv
fcompp
xor
lea
dec
jns
or
push
sbb
shl
push
mov
sub
jmp
lods
xchg
in
andb
sahf
inc
or
daa
push
or
push
pop
movsl
and
outsl
popa
insl
push
cmp
loope
aam
lods
fcoml
mov
outsb
jb
pop
jl
lods
push
repz
lods
mov
sti
add
push
mov
xchg
push
outsb
mov
fists
push
mov
push
js
inc
adc
je
adc
nop
int
ljmp
arpl
iret
sbb
xlat
jp
sbb
hlt
imul
xchg
dec
xchg
mov
int3
outsb
jae
lea
jne
insb
fists
das
jmp
cs
inc
pop
roll
push
xchg
mov
adcb
xor
jo
movsb
es
loop
ja
fimull
or
push
cmpsb
gs
leave
lret
jns
into
xchg
pop
jne
mov
adc
dec
push
hlt
dec
jle
add
rolb
xor
dec
fadds
clc
nop
andb
adc
push
dec
sbb
mov
imul
mov
mov
jl
pop
lock
rcll
ficomps
sarb
in
cmc
xchg
push
test
pop
int3
std
sbb
out
mov
push
xor
add
repz
add
mov
loop
insb
inc
loop
jae
jmp
cwtl
xor
inc
nop
jno
nop
fwait
mov
cmp
test
or
mov
xchg
out
fsubrs
cmp
inc
clc
das
mov
dec
in
push
mov
mov
mov
loope
cmp
push
incl
add
xor
or
mov
mov
adc
jg
sub
test
jb
jmp
sbbb
pop
xchg
shr
ja
inc
cmp
aaa
jo
sbb
daa
push
add
mov
imul
mov
sub
mov
pop
mov
sbb
xor
fadds
sub
mov
mov
adc
push
and
jge
xor
rcr
imul
mov
mov
mov
iret
vpandd
sub
dec
ja
jne
mov
cld
pop
inc
xchg
lea
dec
mov
dec
and
out
scas
dec
mov
insl
cltd
pop
test
hlt
pop
nop
or
bound
mulb
adcl
sbb
and
add
fsts
ret
dec
and
jnp
xor
add
call
stos
jae
pop
push
jbe
cltd
popf
cwtl
pop
add
insb
loop
in
xor
push
inc
lret
xor
mov
or
push
push
push
insl
pop
push
add
out
scas
loopne
and
je
xchg
vorps
inc
addr16
mov
jle
into
fstl
jmp
scas
aaa
into
imul
flds
pop
or
mov
and
call
fisttps
push
data16
xor
and
jb
inc
repnz
sti
xchg
icebp
dec
inc
fmulp
gs
outsl
or
or
scas
sbb
sbb
scas
int3
aam
scas
sub
das
ds
xor
dec
cmp
pcmpgtb
fdivrl
mov
test
add
arpl
xor
push
sub
movsb
cmpsl
and
inc
pop
or
ficompl
popa
or
scas
movsl
insl
pop
jo
add
and
add
xor
push
xchg
stos
sbb
sub
movsl
je
jle
mov
in
mov
lods
or
add
imul
movsl
or
int3
jae
fst
xor
push
and
sub
arpl
dec
xor
sti
pop
mov
repnz
mov
movsl
inc
push
aad
pop
cltd
ss
sub
mov
mov
mov
lds
fs
outsl
cld
ret
xor
jbe
out
push
adc
pop
adc
lcall
ljmp
fbstp
mov
mov
sub
mov
ds
fcom
mov
cmpsb
dec
jno
push
mov
mov
xchg
lret
lock
ret
ret
pop
insl
mov
aad
sub
into
out
jo
enter
cmp
xchg
lock
push
sbb
and
mov
xor
shl
es
sti
and
push
ss
loopne
out
sub
add
insb
lock
lock
xchg
sti
iret
test
pop
mov
ret
inc
ret
leave
cwtl
in
repz
add
repnz
cwtl
mov
push
and
repz
fdivl
in
aas
ret
or
pop
jecxz
aas
ret
out
pop
cltd
add
sub
pop
push
je
dec
pop
ds
mov
shr
lea
daa
xor
mov
xchg
jecxz
pop
ret
and
lea
sti
test
fdiv
in
loope
enter
and
jecxz
decl
aaa
icebp
mov
popf
sub
fwait
mov
and
mov
cli
mov
scas
jg
rcrl
and
cmp
data16
out
fcoml
imul
xchg
mov
fcomp
mov
fs
xchg
xor
ljmp
inc
pop
lcall
mov
cmp
mov
test
jae
addb
jmp
mov
push
or
cmp
mov
cmp
icebp
cmc
mov
and
iret
filds
leave
and
xor
mov
idivl
sub
cld
push
cli
mov
ret
sbb
cmp
push
ljmp
sbb
movsl
int
mov
push
pop
icebp
push
test
loop
sti
imul
push
mov
cmp
dec
adc
inc
inc
ret
push
jmp
in
mov
lret
hlt
bnd
les
xchg
xor
or
dec
sub
mov
xrelease
push
daa
lcall
es
xchg
mov
iret
rorb
movsb
mov
cmp
sbb
pop
mov
in
sub
push
mov
dec
add
inc
rcll
xor
and
leave
add
sbb
mov
cmp
and
in
sbb
movsl
sub
sbb
rcl
dec
cmp
js
xchg
add
nop
test
ficoml
mov
jbe
loop
aad
push
test
jge
sbb
je
or
sub
test
and
loopne
mov
push
add
mov
das
sti
cwtl
cmp
sbbl
xor
add
xchg
mov
push
loope
scas
ljmp
sbb
xchg
pop
cmp
inc
popa
sahf
leave
or
adc
lods
jmp
jb
pop
out
sub
jb
pop
ret
fistl
inc
xchg
sbb
flds
ljmp
int3
xor
lret
ds
mov
lret
andb
sbb
adc
and
mov
jl
cmp
in
fwait
scas
cltd
jb,pn
out
das
push
shll
rorl
movsb
ret
mov
daa
push
enter
imulb
jl
in
mov
adc
adc
sbbb
adcb
lods
mov
mov
call
in
cltd
repz
adc
call
nop
stos
mov
dec
sub
dec
cmp
adc
cmc
inc
xchg
mov
aad
and
clc
lcall
inc
xchg
gs
xchg
jmp
cmpsb
dec
in
daa
cmc
inc
add
cmp
pop
es
push
aaa
or
sbb
lods
xor
add
dec
cmpsb
sti
lret
dec
flds
mov
lcall
lds
xchg
test
jl
xchg
mov
imul
sar
jp
jge
cmp
sahf
xchg
mov
lock
test
dec
push
jno
mov
jge
push
dec
jg
mov
push
lock
jae
pop
push
mov
pushf
and
popa
repz
subb
jge
lcall
dec
pushl
sub
lahf
movsb
inc
lcall
jecxz
xchg
push
xchg
add
mov
daa
aam
xchg
scas
dec
mov
inc
testb
jnp
dec
sub
add
aam
aas
aaa
pop
lock
dec
ja
and
mov
iret
mov
ljmp
loope
cs
add
sub
xor
xchg
jg
or
xlat
test
jecxz
cmpsb
sbb
cld
scas
insb
and
pusha
aad
dec
pop
repnz
in
pushl
mov
adc
iret
push
into
iret
jle
adc
jbe
sub
pop
jmp
aas
push
pop
xor
mov
je
test
add
icebp
or
insb
and
or
add
js
loope
icebp
mov
iret
dec
out
movsb
or
scas
push
push
ds
push
push
sti
leave
or
flds
stc
inc
jae
pop
or
dec
push
out
cmp
cmp
inc
adc
cmp
jmp
xchg
xor
and
add
movsl
jp
xor
lds
jns
out
mov
rcr
and
cmp
in
sahf
repnz
lahf
jbe
mov
stos
nop
push
mov
iret
pop
mov
adc
add
data16
xor
sub
mov
pop
cwtl
and
xchg
adc
rcl
mov
fstpl
jnp
pusha
mov
cmp
adc
mov
loop
push
push
mov
jnp
sbb
ja
icebp
or
xlat
sub
insl
inc
and
mov
aas
dec
pop
push
pusha
cmpsl
lods
in
mov
aas
popf
cmpsl
pop
in
pop
ret
and
jl
adc
fistps
fldcw
inc
dec
lcall
cmp
xor
push
pop
mov
or
xchg
jnp
xchg
imul
add
stos
shrb
js
mov
out
pushf
and
stc
add
jno
nop
imulb
mov
add
xchg
ds
add
loop
rcr
rcrl
fiaddl
mov
aas
mov
stc
idivb
pop
inc
iret
jne
xorl
xchg
outsb
mov
and
in
orb
mov
sbb
cld
cmc
cmp
add
stc
hlt
pushf
rorl
jecxz
push
and
or
push
stos
shrb
nop/reserved
decl
int3
xlat
fwait
stc
push
push
loopne
mov
mov
hlt
adc
test
pop
mov
or
out
popa
xchg
fsubp
loopne
add
outsl
mov
scas
push
in
pop
push
leave
mov
cmpsl
inc
pop
sti
pushf
cld
xchg
fnstenv
imul
shlb
addl
gs
xchg
lret
das
sbb
test
inc
aad
sub
rclb
insb
or
lock
inc
mov
shl
mov
mov
xchg
push
scas
jmp
cs
cli
insb
lea
lret
lea
jecxz
pusha
add
lgs
rolb
ret
popa
dec
xorb
insl
jl
test
or
and
bound
dec
mov
iret
push
sbb
mov
mov
push
adc
mov
pop
imul
out
adc
sub
negl
dec
push
arpl
or
pop
dec
or
push
fyl2x
cmc
ret
divb
push
imull
scas
call
jae
bound
sub
cmp
ret
fisubl
jnp
shl
movsl
in
cwtl
insl
push
xor
test
test
fisttpll
inc
lea
and
adc
stos
movsb
push
mov
mov
mov
and
fdivs
or
scas
inc
and
cmp
pop
add
fimuls
sbb
and
jbe
mov
push
or
xchg
xor
push
push
lcall
adc
fadds
int3
mov
insb
fwait
js
jmp
jg
mov
cmpb
stos
inc
push
jp
lahf
fnstenv
sahf
jnp
mov
cmp
mov
mov
mov
data16
or
mov
movsb
dec
ficompl
fistpll
movb
dec
or
jno
das
movsl
push
cwtl
xor
xchg
loope
cmp
lahf
adc
jno
xor
fwait
aam
das
imul
icebp
stc
fdivs
out
imul
aad
scas
sub
mov
popf
sub
inc
add
jne
lds
xchg
adc
sub
std
mov
mov
push
testb
stc
lgdtl
mov
sbb
jl
shll
in
adc
mov
outsb
stos
xor
insb
clc
jecxz
hlt
xchg
mov
gs
push
pop
add
popf
jecxz
in
adc
inc
xchg
pop
fstpl
push
mov
outsb
cltd
insl
sbb
cmp
or
std
pop
sarb
out
mov
cmp
movsb
popa
sub
push
mov
pop
enter
mov
fs
cmc
adc
ss
aaa
ficomps
xchg
rolb
lock
adc
mov
sub
dec
lahf
jae
xor
jno
jle
pop
jo
cmp
repnz
mov
sub
nop
adc
iret
jno
aas
push
addr16
push
mov
cmp
push
cmpsl
loope
test
xorl
stc
or
unpcklps
cmp
sub
dec
sahf
dec
sbb
stos
dec
int
vorpd
dec
jno
lret
push
cwtl
inc
stos
or
pop
pop
mov
dec
inc
xchg
jb
imul
jns
sub
movsl
fsubs
lds
imul
es
xlat
out
add
aas
lds
mov
sbb
xlat
fistps
stc
pop
dec
nop
mov
push
out
push
and
lret
cs
sub
out
push
inc
and
mov
pushf
imul
cmp
js
aad
or
stos
fists
xchg
and
add
add
stos
add
js
daa
cltd
jbe
add
adc
pop
stos
mov
lret
test
push
sbb
cli
pop
lcall
fstps
roll
adc
mov
xor
sub
push
or
aas
adc
dec
sbb
inc
jp
push
pop
rol
jmp
aam
fdivrs
aam
mov
or
pop
cmp
mov
and
push
and
jg
adc
xchg
aad
mov
mov
movsl
xchg
mov
mov
jge
cmp
push
imul
and
ds
mov
pop
repz
icebp
xchg
lods
jecxz
push
add
fwait
notl
cmp
rorl
fildll
cmc
aas
cmp
add
jb
or
and
ja
in
lock
int
int
inc
xchg
leave
ljmp
xor
and
lcall
ret
or
call
dec
into
lret
cmp
iret
pushf
push
push
adc
aas
shrb
fiaddl
inc
inc
rorl
lahf
add
rolb
clc
daa
sarb
cmp
imul
cmp
ljmp
xor
xor
shl
xor
mov
pop
daa
sbb
cltd
subb
mov
add
add
inc
jo
popf
shrl
adc
push
iret
cli
cmpsb
jo
insb
movsb
pop
cltd
clc
adc
addr16
mov
sar
mov
mov
inc
mov
sbb
pop
sbb
pop
mov
inc
jo
or
adc
sub
xor
das
mov
cmp
mov
push
aas
hlt
fists
bound
mov
ret
sub
repz
ds
xor
jns
push
in
sub
pop
add
and
sub
xlat
fisttpll
in
out
xchg
bts
mov
mov
pop
dec
aaa
and
mov
sub
loop
adc
ljmp
scas
add
bnd
fisubrl
sub
push
js
cli
loopne
sahf
cmp
adc
lods
jge
cmc
cwtl
pop
iret
icebp
imul
push
call
push
scas
sub
in
jno
push
and
add
jl
xchg
mov
loop
mov
mov
fwait
add
jne
inc
movl
inc
addr16
ljmp
imul
jp
xor
inc
jno
imul
add
and
add
xor
fwait
or
push
or
movsb
xchg
xchg
adc
inc
rcll
xlat
jle
call
mov
mov
sub
int
fbstp
shrl
mov
push
pop
leave
loop
outsb
outsb
mov
loop,pt
xor
inc
les
push
mov
daa
mov
xor
cmpsl
xchg
in
js
stos
xchg
xor
in
lret
call
sqrtps
pop
pop
or
pop
adc
jb
insl
loop
xor
cwtl
sub
mov
mov
je
mov
add
adc
add
inc
sbb
xor
cwtl
cmp
test
cmpl
je
inc
scas
rcr
push
fnstsw
xor
rcrb
sbb
jmp
int3
adc
mov
and
sub
mov
adc
push
sub
mov
sbb
std
imul
push
push
mov
jl
pop
adc
add
ja
inc
xor
sbb
fcmove
inc
xchg
xchg
faddl
jns
lock
mov
arpl
bound
cmp
cwtl
jmp
mov
call
jmp
das
rep
in
aad
pop
inc
hlt
daa
xor
cmpsl
push
popf
jle
lcall
jae
imul
imul
sub
fwait
cmp
fsubrs
sbb
out
cmp
mov
mov
push
sbb
jo
imul
add
inc
jge
fcoms
movsl
mov
xor
aad
jns
add
adc
mov
inc
sbb
lock
jg
test
lret
inc
push
fs
mov
or
mov
xchg
outsb
int
rcrb
mov
int
or
in
ss
mov
xchg
lea
mov
fstl
sbb
sbb
push
sarb
rorb
loop
push
push
aad
mov
cmpsb
dec
les
jae
sub
xchg
addl
nop
fwait
sbb
mov
cltd
sub
xor
jg
out
pop
loopne
dec
push
adc
clc
xor
dec
lret
xchg
xchg
jp
stos
jne
pop
out
ljmp
mov
pop
outsl
jge
into
dec
xor
cmp
out
test
dec
and
cmp
movsb
test
mov
repnz
rcrb
aad
lahf
das
fdivl
sbb
jnp
fnstcw
aam
outsl
mov
stc
lcall
je
pop
sbb
xchg
inc
add
push
fimuls
movsl
push
sti
lcall
push
icebp
mov
cmp
push
pop
add
dec
xorb
jne
sub
sub
inc
fiadds
in
les
cld
ret
js
or
fstl
call
shl
fisttps
fisubs
mov
dec
push
mov
cmc
cmp
sti
mov
stos
aad
pop
mov
cmp
testl
pop
mov
mov
rclb
sbb
add
lds
jno
shll
lcall
pop
enter
cmp
push
repnz
jle
cmpsb
mov
xor
stos
aam
cltd
cmp
dec
aam
mull
push
lret
loop
ret
gs
popa
pop
and
fistl
push
pop
push
test
out
xor
sub
cmp
xchg
sub
mov
pop
icebp
xorb
lods
loope
lods
or
lds
xchg
outsb
scas
mov
sbb
dec
clc
sbb
inc
insb
mov
sub
mov
iret
jns
fidivrs
ret
imul
xchg
pushf
pop
out
in
add
xchg
mov
popa
dec
in
cmp
cmp
ljmp
mov
mov
sarl
xchg
adc
mov
lcall
cmp
sarb
out
lahf
fsubrl
cmp
xor
insl
test
or
push
sub
xchg
in
jl
jns
xor
data16
notl
fisubrl
aas
enter
jb
cwtl
adc
fs
mov
dec
xchg
stos
mov
push
popf
xlat
loopne
adc
icebp
sub
dec
fs
fwait
pop
leave
push
repnz
jo
imul
sub
fstpt
mov
int3
call
and
sbb
lea
mov
dec
mov
repnz
or
clc
test
push
scas
pop
mov
cmp
fimull
bound
faddl
jp
shlb
sbb
sbb
jg
jae
in
jae
xchg
sbb
popf
mov
adc
out
nop
add
cmp
mov
nop
dec
push
adc
sbb
iret
jo
loope
enter
and
jl
rorb
int
or
inc
loopne
sahf
dec
repz
dec
rcll
push
stc
out
sbb
fxch
jb
pop
mov
ret
xor
repz
ljmp
add
xor
or
hlt
and
adc
pop
leave
pop
cmp
lret
int3
adc
mov
fildll
push
aaa
test
sub
sbb
lret
out
fs
dec
cmp
shr
mov
daa
repz
jecxz
mov
mov
mov
lds
or
inc
adc
xchg
sti
push
mov
sarb
test
mov
mov
xorl
fs
fsts
adc
xlat
inc
push
xchg
daa
xor
sbb
mov
sbb
push
cwtl
jne
mov
and
aaa
adc
push
rcrb
mov
xchg
jle
inc
out
mov
sbb
push
lods
ljmp
dec
xchg
sbb
mov
or
sbb
ljmp
clc
dec
int
jae
adc
mov
and
in
sbb
das
subl
mov
mov
xchg
pop
push
or
cmp
dec
sbb
es
imul
stc
jmp
sub
stos
lods
jb
push
push
in
cmp
clc
mov
loope
or
enter
xchg
sbbb
mov
out
insl
add
cmpsb
and
mov
lea
adc
popl
enter
out
in
addr16
pop
pop
cs
testb
pop
pop
rorb
dec
aad
bound
mov
repz
mov
orl
pushf
ds
stos
xor
jge
std
mov
mov
ret
pop
sbb
adc
xlat
add
or
push
leave
imul
insb
fwait
mov
decb
repz
pop
stos
imul
cmp
pushf
ja
sbb
or
mov
jge
mov
sub
sbb
mov
lds
repnz
inc
shlb
fwait
jmp
push
sub
jmp
mov
cld
pop
stos
or
cli
insb
ja
add
scas
mov
sub
sbb
aam
jp
jno
mov
inc
pop
push
mov
push
arpl
cmp
repnz
decb
rorl
repz
push
mov
stc
push
xor
push
and
or
movsl
test
inc
out
mov
dec
lahf
fisubs
imul
sti
pop
vxorps
mov
js
cmp
sub
cmpsl
insb
sarl
or
mov
and
inc
std
test
and
js
cmpsb
add
lods
cld
movsb
xchg
insb
mov
mov
pop
mov
and
xchg
pop
es
pop
ss
adc
and
mov
sub
imul
out
mov
sbb
or
popa
jns
xor
sbb
fstps
mov
add
imul
daa
nop
pop
push
dec
cmpsl
pop
shrl
push
lea
adc
lahf
jne
push
or
dec
push
mov
cltd
mov
aas
cmp
cmpsb
mov
in
add
inc
mov
enter
mov
cmpsl
call
xor
repz
jmp
repz
inc
xor
push
pop
into
popa
mov
rol
mov
add
mov
mov
xor
jge
cmpl
fisttpll
outsb
xor
xchg
sbb
adc
or
push
imul
test
and
ja
in
xchg
roll
jg
pop
lret
lock
and
push
mov
lds
dec
xchg
mov
cmp
xchg
lcall
popf
in
inc
shl
jae
push
out
push
pop
sub
sub
xchg
pop
xor
pop
push
or
add
pop
ja
inc
enter
push
hlt
add
repz
rorb
decl
cld
jmp
mov
ds
add
mov
cltd
jg
push
test
iret
cmp
adc
in
xor
imul
testb
mov
mov
mov
jle
jl
stos
cli
sub
jge
cli
add
or
push
push
call
pop
jmp
xchg
xchg
test
xlat
pushf
mov
insl
bound
sbb
movsb
jg
cmp
dec
scas
test
std
mov
cmpsb
push
push
xlat
loope
sti
addr16
sbb
pop
packuswb
xchg
filds
sub
addl
lods
les
sub
mov
andb
jl
xchg
fbld
stc
daa
push
lods
lods
mov
daa
shl
test
stos
subl
cltd
mov
xor
lea
pop
jmp
xor
cltd
jbe
mov
push
and
or
jg,pn
movsl
or
test
push
mov
ds
int
cmp
xchg
xchg
fadds
dec
subl
outsb
mov
mov
insl
or
push
push
jo
add
jge
arpl
mov
pop
mov
mov
xor
jl
ret
bound
mov
out
dec
push
sbb
cmpsb
pushf
leave
rcrl
jp
daa
lods
jb
sarl
out
push
pusha
lock
cli
jnp
iret
jl
sub
in
fcomi
fidivrs
mov
insl
sbb
sub
sbb
loop
mov
ja
outsl
mov
orl
fucomip
push
shlb
xlat
jbe
insl
iret
mov
movsb
xchg
ficoml
les
stos
mov
and
add
loope
fwait
dec
fwait
jmp
xor
xchg
sbb
mov
cld
out
xchg
pop
lds
test
les
insl
xor
cmp
ss
das
push
jnp
in
lret
fldt
adc
push
add
jg
sub
popa
push
mov
cmpb
lds
out
xor
mov
inc
mov
dec
cmpsb
xchg
jp
jo
jmp
adc
sbb
sbb
push
das
fcomi
nop
add
mov
adc
xchg
int3
pop
iret
lcall
ret
ret
cmp
xor
or
sbb
xchg
fs
and
xor
xor
fs
jge,pn
cmpsb
orb
sub
mov
mov
pop
arpl
jno
clc
pop
dec
pop
mov
shrl
stos
sub
frstor
ror
aas
xchg
int
shll
mov
mov
outsb
in
sbb
xchg
xchg
inc
stos
mov
mov
adc
mov
xor
arpl
pop
pop
dec
and
push
movsl
dec
mov
lahf
insl
adc
cmpsb
mov
pop
xchg
adc
add
jbe
xchg
cltd
lock
nop
sub
hlt
in
rcrb
iret
test
les
repz
insb
bound
push
or
or
scas
mov
cltd
repnz
orl
mov
xor
jmp
mov
xor
xor
sub
sub
xor
mov
mov
mov
add
imul
mov
mov
mov
add
or
mov
mov
mov
add
xor
mov
mov
mov
add
jmp
fidivrs
call
xchg
ljmp
cs
jns
adc
jp
cltd
push
mov
adc
mov
repnz
ss
mov
repnz
jp
aad
pop
icebp
out
fucomp
jmp
and
xchg
push
mov
mov
jge
xor
fiaddl
pop
pop
ja
gs
loop
ret
or
shll
and
push
adc
out
jbe
stc
and
dec
jge
xlat
sbb
mov
in
cmp
adc
out
jecxz
cmp
jbe
pop
xchg
and
mov
jae
pop
outsl
jae
cld
pop
or
xor
fs
push
test
cmpsb
aam
leave
idivl
ror
cltd
sbb
popa
mov
push
inc
cmp
repnz
sbbb
imul
inc
icebp
sbb
cs
jbe
sub
in
shr
inc
and
inc
mov
pop
push
lock
xor
add
sub
xchg
mov
scas
icebp
jmp
sbb
xchg
jmp
arpl
mov
cmp
repz
movsl
inc
in
mov
orb
cmp
dec
mov
mov
or
push
enter
aas
insl
cmp
adc
xor
sbbl
in
or
cmp
xor
imul
sbb
mov
lahf
jbe
mov
mov
or
push
mov
xor
adc
mov
adc
cmp
stc
sbb
insb
adc
mov
loope
pop
fmuls
pop
repnz
and
jbe
push
lds
push
test
cmpl
in
mov
loop
fisubrl
xor
adc
push
inc
or
in
stos
mov
and
sub
xor
xchg
jle
lcall
pop
flds
fiadds
shll
mov
stc
lcall
test
mov
cld
xchg
sub
adc
jo
dec
sbbl
ficoml
imul
push
add
sub
jne
xchg
ret
xchg
lock
mov
cmpsb
je
fwait
leave
rcl
das
ss
call
cmpsl
push
mov
adc
mov
mov
jmp
push
fadds
xor
mov
pushf
out
mov
lock
fcmovnu
sbb
dec
outsb
cmc
int
add
cmp
cmpsl
mov
push
or
push
nop
subl
push
xor
or
stos
jne
in
lahf
andl
out
inc
adc
add
inc
repnz
and
cmp
scas
adc
or
mov
loopne
add
movsl
in
in
pop
add
mov
push
repnz
jb
push
repnz
dec
rorb
scas
xor
fs
jmp
mov
cmpsl
outsb
mov
or
mov
stos
jno
sub
pop
cmp
ja
xchg
mov
xchg
jnp
cwtl
sarb
outsl
ret
lret
and
adc
jb
mov
push
hlt
lods
outsb
pop
mov
dec
aam
lahf
or
xchg
movsl
and
incb
mov
sub
stos
leave
rcll
cmp
mov
lahf
mov
imul
in
ss
jp
dec
arpl
jmp
adc
xchg
pop
cmpsb
adc
inc
jge
lahf
pop
push
pop
imul
cmpsb
lret
iret
in
dec
in
jl
adcb
shr
cmpsb
jnp
sub
lahf
add
pop
cltd
out
pop
fistps
push
int
add
push
pop
pop
xor
stc
leave
repnz
or
fiaddl
push
insb
and
movsl
dec
int3
ss
leave
xor
test
pop
mov
mov
scas
sub
call
xchg
mov
jbe
das
cltd
dec
mov
rorb
popf
std
pop
lods
or
fisubrl
cmp
loop
cmp
shl
mov
les
jae
jmp
sbb
add
or
inc
lahf
mov
push
jg
cltd
dec
xor
dec
enter
mov
lea
pop
in
popf
aam
jmp
pop
xchg
addr16
mov
or
lods
rcrl
cmp
dec
dec
roll
xchg
icebp
insl
mov
pop
cmpsb
das
test
ja
outsb
xor
xlat
mov
xor
inc
mov
add
dec
scas
mov
sti
fcompl
insb
call
sbb
rol
cmc
daa
push
mov
fidivrs
jle
mov
out
in
rol
loopne
mov
shll
push
mov
pop
jecxz
inc
adc
ja
int3
pop
or
pushf
insb
or
fwait
adc
add
cmc
dec
gs
jle
fwait
xchg
sahf
jo
lods
sarl
fs
jmp
sub
stos
sub
in
lret
mov
aad
lods
inc
sbb
ljmp
shl
adc
fisttps
imul
sti
out
enter
insl
and
loopne
mov
mov
mov
jno
sbb
std
sarl
shlb
xchg
sahf
or
pop
push
into
test
mov
inc
pop
imul
inc
fisttpl
pushf
lahf
inc
loop
stos
cwtl
sub
inc
mov
add
jge
push
cld
xor
stos
xor
fisubl
inc
popf
xchg
nop
out
repz
sbb
loop
mov
into
xor
sub
sub
jecxz
out
fdiv
pop
mov
test
jae
adc
xchg
mov
scas
cmp
and
push
mov
push
jae
popaw
flds
movsl
dec
std
lock
xchg
jbe
sti
push
sbb
pop
adc
jmp
jne
movsl
mov
adc
jp
int
repz
loope
pop
mov
pop
cmp
sub
std
dec
cmp
repnz
call
mov
adc
rorl
mov
inc
imul
adc
ret
mov
out
push
fcoml
jmp
addr16
xchg
popa
mov
xchg
nop
data16
mov
rclb
fs
hlt
incl
nop
sbb
dec
adc
sahf
adc
xchg
in
jle
mov
movsb
push
or
push
outsb
fiaddl
xchg
popa
jg
fdivs
gs
ja
rorb
mov
outsl
imul
push
pusha
adcl
mov
in
das
cltd
repz
ljmp
mov
push
pusha
loop
jge
seta
or
push
mov
jno
enter
fwait
mov
jno
and
fiaddl
add
or
popa
and
lea
unpckhps
cmpsb
imul
loopne
stos
pop
aam
lock
sbb
adc
adc
jne
pushf
mov
xor
ficomps
mov
inc
stc
jp
lds
int
js
cmp
dec
scas
out
mov
idivl
cmp
scas
repnz
mov
and
mov
in
out
cmp
or
or
int3
sub
icebp
test
or
mov
add
insb
cmp
aas
pushf
das
sbb
insl
pop
call
pushf
bound
insl
mov
inc
jmp
std
inc
imul
iret
jle
add
movsl
enter
hlt
jbe
test
or
pop
ret
push
aam
loopne
push
push
jl
add
jmp
out
clc
out
pop
cltd
mov
or
scas
adc
insl
aas
enter
test
popf
rol
adc
and
mov
mov
cmp
mov
je
sub
pop
jno
pop
pop
icebp
push
fcmovu
lahf
push
pop
cmp
lods
stc
aad
lea
mov
popf
imul
push
mov
clc
push
repnz
imul
notb
add
cld
mov
clc
add
scas
adcb
mov
inc
push
and
dec
pop
mov
js
mov
sbb
and
cmp
mov
push
movsl
std
xchg
cld
pop
add
imul
jb
mov
cmp
sub
cmc
in
cmc
out
jg
rolb
push
test
cltd
out
outsl
imul
pushf
movsl
pop
lea
push
and
dec
js
or
pushf
mov
add
mov
push
cmp
mov
mov
jge
pop
lret
dec
addr16
jae
mov
jbe
xor
fstl
sbb
outsb
cmpsl
xchg
dec
mov
adc
adc
and
mov
inc
mov
cmp
push
pop
je
ljmp
xchg
mov
cmp
movsl
test
cmpsl
xchg
add
movsl
in
inc
lods
cltd
cmc
jb
sub
rcr
push
or
es
sahf
fwait
addr16
and
out
xchg
fidivrl
das
icebp
sbb
mov
dec
or
mov
dec
cmp
push
jne
jecxz
into
insb
insl
mov
pop
fcompl
or
mov
sbb
pop
push
xor
in
dec
cmpsb
jg
mov
es
jge
fwait
jb
cwtl
cmp
sahf
sahf
ds
mov
jne
dec
sbb
std
fsts
add
mov
add
les
mov
js
test
cmpsl
mov
mov
sub
iret
jns
aas
mov
test
ljmp
xor
mov
jnp
lret
xor
fwait
mov
lods
adc
jns
cmp
xchg
mov
mov
add
fucomi
pop
xchg
add
andl
out
dec
sbb
popf
test
inc
das
xchg
inc
pop
mov
xacquire
mov
call
clc
adc
ds
fildl
ret
out
gs
add
data16
lret
cli
ficompl
sub
mov
das
inc
and
shll
fistpl
mov
inc
pop
cmp
fst
push
and
add
sbb
jge
pushf
dec
or
icebp
mov
jle
push
pop
mov
jbe
xchg
pop
pop
mov
lret
inc
pop
jb
push
inc
inc
inc
inc
push
cltd
outsb
lds
scas
stos
pop
incl
cmpsb
scas
dec
cmp
cmp
jecxz
or
jmp
dec
and
loope
je
cltd
xor
roll
adc
leave
xchg
adc
mov
in
popa
xlat
jl
ret
xchg
pop
movsb
add
pop
leave
aaa
arpl
push
adc
cmpsb
ret
lahf
ret
adc
add
pop
nop
les
roll
pop
std
call
cmp
stc
lea
sti
jmp
mov
jno
js
adc
jle
repnz
mov
xchg
jl
test
xchg
inc
sub
in
adc
mov
out
or
xchg
popf
popa
cmp
sarb
or
mov
jle
das
xor
jl
fistps
jnp
loope
sbb
cmp
roll
mov
bound
mov
cwtl
lds
jle
pop
jl
inc
mov
jnp
jbe
in
xchg
psubusw
pop
inc
data16
sbb
jecxz
lock
mov
mov
dec
mov
int
pop
sub
lock
mov
push
jae
inc
lea
cmpsl
scas
repnz
pop
sbb
push
imulb
popf
sub
lret
pop
mov
mov
lods
stos
dec
fwait
cmc
or
push
jae
int3
fwait
xchg
out
hlt
cli
fsubrl
lods
rolb
mov
xor
xchg
mov
popa
decl
testl
jmp
lds
add
sub
add
xchg
sbbb
xchg
jmp
insl
stos
dec
loopne
std
mov
imul
in
pop
stos
sbb
popa
mov
xor
gs
adc
stos
test
in
lret
or
cmp
dec
mov
mov
lods
out
loope
mov
add
cmp
sbb
in
or
shl
or
inc
arpl
mov
push
inc
sub
fimull
mov
push
and
cmp
sub
fwait
rorb
pop
xchg
call
fisubs
sarl
inc
js
jae
inc
pop
je
int3
sbb
movsl
cmpl
jno
jg
sub
mov
cmp
push
pop
int
ret
pop
fwait
mov
js
cs
mov
mov
inc
sub
jb
cld
ret
outsl
cli
push
lret
xor
add
cltd
xchg
lcall
mov
mov
int3
push
in
mov
adc
jb
insl
mull
icebp
inc
mov
sbb
lock
pop
sbb
jns
cmc
in
lods
inc
or
cmp
repz
and
test
pop
bound
push
pop
shlb
pushf
dec
test
mov
in
jno
adc
leave
dec
push
sub
fldenv
lret
and
je
xchg
in
cmp
inc
cltd
jb
out
mov
dec
and
in
jne,pn
test
js
xchg
fistpll
push
pop
sbb
mov
fldcw
xchg
cmp
cmpsb
int3
jge
mov
push
inc
rcl
sub
dec
dec
xchg
in
dec
jnp
dec
into
dec
adc
mov
mov
jp
int3
cmpsl
nop
ret
shrl
add
mov
cmp
adc
mov
out
stos
icebp
call
xchg
scas
fcomps
xchg
call
mov
mov
loope
hlt
jbe
cmp
mov
cmp
aaa
aas
cmp
xchg
aaa
out
mov
mov
adc
in
inc
loope
ljmp
imul
lret
mov
jo
out
scas
add
ret
add
cmp
pop
faddl
int
insl
imull
jge
outsl
in
jecxz
cmpsl
mov
test
jmp
jns
cwtl
enter
ds
cs
push
insl
pop
icebp
out
loope
mov
xchg
mov
pop
mov
dec
mov
cmpb
stc
mov
mov
cmp
pop
insb
clc
adc
adc
pinsrw
dec
bound
sub
adc
cmp
jl
loope
inc
add
pop
icebp
cltd
dec
lahf
pop
mov
popa
out
rcrb
xor
lds
jnp
into
adc
js
xor
add
jo
les
jb
popa
adc
dec
scas
shll
xchg
test
je
mov
push
repz
xor
cli
stos
push
inc
mov
lret
ljmp
xor
push
scas
in
xchg
clc
cltd
and
push
inc
dec
sbb
imul
popl
push
shl
pop
pop
ret
das
movsb
or
cltd
jecxz
dec
jo
jns
pop
mov
xor
cmc
add
into
xorb
xor
and
pop
int
ja
shlb
pop
clc
push
in
repnz
call
icebp
rolb
mov
add
lcall
int
jp
std
bound
jne
mov
mov
and
pusha
mov
dec
ss
shl
push
jae
mov
jae
push
shrb
mov
ret
cmp
adc
outsl
inc
pop
mov
repz
cwtl
xor
or
xchg
inc
push
pop
rep
cmp
loop
dec
xchg
mov
int
filds
inc
pop
loopne
mov
ror
loopne
pop
or
cld
inc
subb
sub
and
fwait
xor
xchg
lret
stos
loope
testl
std
pop
roll
mov
sub
jae
adc
jne
mov
ljmp
scas
pop
idivb
ljmp
dec
lret
xlat
les
jecxz
jno
dec
mov
pop
and
jg
sbb
and
scas
xlat
inc
sarb
out
mov
jb
mov
or
cmpb
sub
add
les
fistps
stos
sub
pop
mov
subl
and
xchg
sub
add
jns
inc
sbb
in
pop
mov
stos
hlt
mov
cltd
xor
test
insb
sbb
aas
in
arpl
subl
push
jo
sbb
xchg
fbld
cmp
mov
sbb
cmpsb
lods
pop
xor
mov
fwait
loop
stc
sarb
rclb
insl
cmpsb
mov
jmp
test
sbb
sub
pusha
dec
daa
cmpsb
lea
mov
rorl
jnp
hlt
ds
add
add
adc
pushf
jnp
mov
int3
pop
hlt
mov
xor
lods
mov
jl
clc
fistpl
ljmp
movsl
aam
dec
test
test
jmp
movl
dec
mov
mov
push
flds
mov
inc
cmp
bound
dec
psubusb
cmp
idivl
inc
mov
inc
cmp
xchg
out
pop
push
mov
jmp
lahf
xor
gs
inc
mov
adc
dec
mov
and
add
inc
mov
lods
fiadds
dec
fisubrs
pop
lcall
in
cltd
int
in
aad
loop
fisttpll
mov
and
addr16
iret
aam
cmp
ret
clc
cmpsl
adc
or
aas
ds
lea
in
data16
fisubs
cmp
icebp
lods
movb
sub
call
stos
cmc
sub
inc
int
dec
inc
dec
xchg
bound
sbb
add
xchg
sbb
daa
int3
outsb
decl
in
sti
pop
mov
cmp
testl
pop
int3
dec
add
cmpsl
sbbb
addl
in
jl
xchg
inc
inc
mov
mov
insl
add
jl
xor
adc
and
shll
and
xchg
mov
sahf
add
or
mov
jno
or
push
ljmp
mov
xor
add
pop
mov
lcall
insl
mov
aas
mov
cmp
mov
mov
pop
sti
fwait
xchg
idivl
movsb
jmp
lods
push
mov
or
les
das
out
fdivrs
cmp
pop
test
add
pop
enter
in
pop
adcb
sub
cmpb
xchg
mov
test
imul
cmp
stos
scas
testb
xor
adc
sbb
lods
jge
jl
daa
out
aas
shlb
jge
pushf
lret
movsl
aaa
or
dec
in
jg
cmp
push
xchg
add
xchg
sbb
dec
xor
mov
mov
xor
lods
xchg
xchg
in
repnz
cmp
test
mov
pop
movl
xchg
rol
push
clc
push
fsts
push
ret
cmp
hlt
int
imul
cmp
lret
cmp
shll
fcompl
loop
into
pop
pop
jmp
pop
mov
adc
test
pop
jmp
insl
mov
pushf
addl
scas
nop
mov
jle
sub
fdivs
sbb
jmp
popa
paddusw
or
xor
mov
mov
pop
mov
outsl
inc
mov
test
push
sbb
fdivr
cmpsl
leave
and
movsl
int
popa
mov
stos
pop
pop
aam
stos
outsb
xlat
loop
movsb
xchg
jb
xchg
pusha
aas
pop
add
push
adc
xor
mov
fisubl
inc
out
loopne
pop
push
shlb
test
adc
imul
iret
lcall
clc
out
movsbl
fidivs
fcompl
ret
add
add
out
mov
jg
or
cmpsb
adc
sub
nop
mov
sbb
test
loop
and
xor
sbb
mov
mov
jg
loope
dec
leave
mov
mov
cmp
mov
sarl
jo
mulb
xor
ljmp
jns
into
ret
xchg
shll
pop
jno
dec
stos
imul
xchg
dec
test
ss
ja,pn
sbb
sub
mov
mov
lds
jge
jns
dec
orl
and
and
pop
pop
jnp
lods
jno
jo
jne
out
pop
test
sub
int3
fldenv
sti
adc
jg
out
xor
jmp
imul
inc
pop
sbb
or
insl
sub
mov
subl
cmpb
and
mov
mov
push
or
enter
arpl
test
adc
ret
dec
pop
adc
sahf
sbb
jnp
jmp
test
popa
pop
pop
cmp
inc
les
pop
jmp
inc
push
lahf
cmp
inc
std
xorl
xor
add
jno
leave
push
push
lahf
push
aaa
xchg
inc
fistpll
loope
shll
in
stc
adc
aam
notb
xor
xor
or
xor
sub
push
test
enter
sub
sub
mov
cmpsb
sahf
mov
shll
popf
repnz
ret
out
push
push
lock
in
jo
movsb
sub
push
mov
dec
test
ret
push
ffreep
enter
and
popa
lret
xor
inc
jno
clc
mov
cmp
cmpb
mov
xchg
int3
nop
dec
in
sbb
sbb
mov
cli
mov
lods
mov
cmp
sbb
sbb
pusha
pop
movl
daa
clc
jns
aaa
in
cmp
fcoms
pusha
pop
pop
cmp
jbe
cmpl
stos
mov
mov
push
xchg
push
mov
addr16
out
inc
vmovhps
scas
sub
popf
mov
jnp
test
repnz
pop
cmpsl
pusha
dec
aaa
scas
and
lods
push
inc
call
icebp
pushf
jg
sub
lds
and
mov
out
sbbb
cld
push
xchg
sbb
mov
movl
std
mov
inc
enter
js
or
dec
das
cmpb
gs
mov
adc
divb
jo
jg
push
sbb
data16
or
push
dec
pusha
or
add
xor
pop
arpl
xchg
pop
test
or
sbbl
push
ljmp
sar
xor
fisubs
ljmp
rclb
pusha
xor
mov
or
xor
outsb
mov
inc
and
mov
imul
pop
mov
loop
mov
int3
imul
dec
movsb
rcll
jo
sbb
cmc
stos
push
mov
inc
das
mov
inc
sti
jg
dec
mov
or
mov
in
mov
je
pop
push
or
mov
int
adc
outsb
call
xchg
push
inc
lock
pop
loope
jns
data16
mov
xor
int3
push
jle
loope
sbb
rcrb
hlt
addr16
jmp
js
push
adc
mov
xchg
add
mov
mov
mov
js
outsl
enter
lds
fldenv
xchg
jo
rolb
mov
fbstp
mov
in
push
fwait
cmpsl
mov
scas
mov
subb
mov
xor
or
xchg
add
fmuls
add
ja
pop
inc
dec
xchg
cmc
pop
xor
std
mov
xor
adc
loop
sarb
or
mov
add
push
pop
mov
jg
pop
and
mov
cmpsb
repz
das
andl
fwait
lcall
mov
jl
or
sub
pop
inc
mov
jp
js
sub
jns
insl
xchg
fnsave
test
inc
inc
sbb
sub
cli
call
dec
insl
out
sub
adc
jge
sbb
jns
add
adc
adc
add
std
ret
cwtl
jge
adc
icebp
popf
adc
push
xchg
out
and
outsb
ficompl
jge
ljmp
in
xchg
xchg
xchg
cltd
ja
dec
ljmp
push
sti
push
mov
push
dec
popl
test
in
je
pop
je
jb
sbb
sti
pop
dec
cmp
loope
push
mov
bound
mov
call
mov
lret
mov
jge
push
mov
dec
les
mov
bound
fdivs
jo
stos
adc
and
pushl
out
nop
or
mov
stos
decl
popf
push
insl
xchg
pop
movsb
test
inc
ret
dec
fiaddl
add
mov
stos
pusha
mov
pop
sti
mov
inc
dec
sbb
jge
push
or
negb
lret
dec
fstl
pop
repnz
mov
xlat
outsb
pop
inc
or
incl
cmp
lret
mov
cwtl
jge
stos
cmp
sbbl
leave
inc
and
xchg
cmp
lock
rorl
aas
cmpsl
out
jl
mov
xchg
add
or
lahf
test
aam
mov
jl
loop
nop
and
sub
jmp
mov
pop
int3
sahf
jmp
arpl
imul
sbb
idivb
push
push
fsubrl
imul
test
js
hlt
shl
pop
imul
jmp
xchg
lea
in
adc
sbb
mov
push
aam
lds
xchg
mov
fwait
ret
and
mov
adc
push
mov
int3
cltd
pop
or
xor
sbbl
inc
mov
mov
inc
cmpsb
mov
fstl
inc
sbb
add
and
dec
adc
mov
movsb
test
adc
pop
imul
mov
dec
sti
pop
popf
sbb
push
xchg
mov
sbb
test
test
xchg
pusha
mov
and
mov
int
fcompl
pop
in
xor
cmpsb
mov
dec
aaa
imul
cwtl
inc
ljmp
clc
mov
cmp
pop
test
adcl
xor
vpunpckhwd
nop
loop
cld
mov
les
fisttpll
scas
cmpsl
call
sbb
cwtl
mov
test
dec
inc
fwait
in
pop
dec
pop
sbb
mov
fwait
adc
lahf
in
adc
push
add
lods
sub
mov
imul
and
ljmp
movb
int
add
mov
pop
pop
in
jmp
subl
mov
pop
push
arpl
adc
imul
xor
push
cld
push
sub
dec
repnz
xor
loop
sbb
mov
jmp
into
jbe
leave
xor
mov
mov
cmc
push
stc
cmp
fmull
mov
mov
cltd
pushf
inc
neg
adc
clc
mov
sbb
push
push
jb
mov
jle
sub
xchg
push
shll
inc
ds
stos
jg
xchg
aas
jno
insb
cwtl
jb
add
mov
mov
fwait
cmpsl
ds
sub
sbb
int3
add
fucomi
lcall
pop
jae
mov
pop
push
cli
dec
add
loope
mov
sbb
mov
pop
adc
mov
push
outsl
sbb
pop
pushf
sub
stc
cmp
out
xchg
lods
iret
add
sbb
fdivr
nop
push
jl
mov
xorb
and
mov
fildl
xacquire
mov
arpl
or
inc
mov
xchg
sbb
dec
mov
repnz
rclb
mov
jne
jl
incl
popf
sub
inc
in
rcl
cli
aad
xchg
int3
jl
xchg
cld
mov
push
xchg
fadd
and
jmp
adc
inc
sahf
lea
inc
mov
test
push
xor
xor
stos
nop
bnd
adc
ja
in
cli
sub
fdiv
int
xchg
jbe
out
jae
dec
aas
inc
xor
or
push
push
jne
push
cs
loopne
pop
push
addr16
adc
iret
inc
lods
addb
aad
in
jge
mov
js
mov
cmp
sbb
mov
xchg
sbb
popf
add
jo
xchg
mov
cmp
push
pop
and
movsl
fidivrl
leave
add
jbe
aam
xchg
cld
les
lret
sarb
pop
mov
je
mov
xchg
fdivrs
cmp
fadd
daa
lods
xchg
add
and
mov
shr
mov
daa
imul
les
int3
je
nop
xor
addr16
dec
cmpsl
jg
xchg
gs
ret
sarb
xchg
add
xor
cmp
dec
repz
jp
stos
cltd
sti
cmp
jno
jns
outsl
jge
daa
movl
jne
push
ret
leave
push
dec
mov
add
dec
push
cmp
pushf
jbe
rol
dec
dec
scas
jno
add
adc
lahf
imul
adc
mov
lods
ret
pop
dec
addb
jl
mov
pop
mov
pop
mov
dec
cmp
call
xchg
in
mov
xchg
inc
out
stc
mov
cmovp
inc
rcr
out
mov
pop
or
dec
pop
nop
pop
push
lahf
mov
es
push
sbb
in
fmul
or
sbb
fildl
pop
dec
dec
xor
pop
sub
cmc
shlb
pushf
rcrb
mov
daa
jae
test
pushf
stos
hlt
aas
sub
mov
cmp
push
push
mov
shlb
lods
inc
xchg
in
sub
loop
ficompl
cmpsb
push
aam
jae
lret
mov
orb
pop
jae
cmpsb
je
lea
stos
rolb
push
push
mov
mul
mov
xchg
mov
loope
sbb
insb
jg
insl
ja
ljmp
jle
push
push
fistl
lods
mov
xchg
or
add
xchg
xchg
push
mov
fdivs
clc
cmp
sbb
bnd
push
adc
xchg
push
out
fidivl
icebp
cmp
adc
mov
faddl
jl
mov
ret
pushf
cwtl
pop
dec
inc
pop
cmp
ljmp
or
addb
in
jno
add
mov
inc
cltd
or
dec
idivb
jmp
int3
push
xor
scas
dec
cmp
out
jbe
mov
pop
fwait
inc
mov
orl
mov
cmpl
jecxz
xchg
and
std
xchg
imul
test
sbb
jbe
cld
shl
lea
shrl
mov
shll
fdivr
pusha
push
hlt
xchg
adc
cmp
ja
je
push
adc
iret
lret
or
add
cmp
push
lcall
cmpsb
andb
sbb
adc
iret
xor
inc
xchg
movsb
ds
push
testl
lods
jns
pop
cmpsb
jmp
pop
testb
repnz
adc
stos
mov
fprem
fisttps
into
aam
pop
add
pushf
adc
cmpsl
in
int3
das
push
and
test
cmp
into
scas
mov
movsl
adc
xchg
add
dec
fidivl
xchg
dec
push
push
dec
jo
gs
xchg
test
ss
push
outsb
fwait
jno
sbb
add
push
inc
jno
adc
enter
adc
test
sub
mov
ljmp
clc
add
sub
popf
ja
cwtl
or
aaa
cmc
and
mov
in
jne
mov
add
shr
xchg
sbb
outsb
fimull
dec
pop
fldl
sbb
push
inc
rol
sbb
fistpll
mov
popa
push
jge
ds
das
xchg
or
adc
or
imul
ficomps
and
shlb
cmpsl
int
cmpl
xchg
jnp
sbb
std
adc
xchg
mov
lret
fs
sub
push
aaa
dec
mov
push
mov
mov
mov
lea
mov
mov
mov
sub
add
mov
mov
xor
add
jne
jmp
mov
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
add
imul
mov
mov
mov
add
or
mov
mov
mov
add
xor
mov
mov
mov
add
and
mov
mov
mov
lea
mov
mov
mov
sub
add
mov
mov
xor
add
jne
mov
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
add
imul
mov
mov
mov
add
or
mov
mov
mov
add
xor
mov
mov
mov
add
and
mov
mov
mov
lea
jmp
stos
push
and
movsb
jnp
jge
xor
push
sbb
adc
jp
out
xchg
push
cmc
aaa
pop
popa
fwait
jle
in
sti
jp
and
mov
pop
add
sbb
call
push
add
jmp
push
xor
int
jmp
sub
sub
cmp
pop
in
pushf
dec
outsb
out
stos
std
andl
inc
in
push
cld
stos
jp
push
dec
cmp
xorb
pop
ja
fnstsw
rclb
lock
loope
sbb
cli
lock
aaa
xor
mov
mov
mov
jecxz
scas
and
inc
js
pop
cmp
ret
mov
mov
out
sbb
jge
andl
mov
push
cwtl
sub
in
xchg
pusha
mov
addb
rclb
dec
out
lds
lret
fcoms
or
and
loop
iret
out
cmpsb
push
lock
push
out
xor
xchg
jp
xor
pusha
lds
jnp
pop
xchg
outsl
xchg
out
inc
cs
hlt
fs
dec
lret
jns
in
xchg
pop
jo
outsb
pop
imul
push
clc
ficompl
mov
mov
inc
cld
out
adc
lock
aaa
xor
clc
stc
dec
push
jp
pop
add
pop
fstpl
xor
das
and
mov
test
fimull
inc
movsb
mov
or
inc
adc
inc
repnz
out
xor
push
cmp
insl
mov
or
inc
mov
push
push
cmpb
mov
and
add
and
push
js
pop
leave
cwtl
mov
mov
or
or
mov
mov
scas
lret
add
push
imul
push
cwtl
in
in
sbb
movsl
xchg
jbe
les
imul
in
imul
je
push
cmpsl
jne
test
or
jle
loop
mov
pop
mov
fwait
sbb
sti
icebp
mov
cmp
adcb
cltd
jmp
xchg
jne
inc
pop
jl
repnz
aaa
xor
sbb
push
cmp
push
test
add
jecxz
std
jo
xchg
jle
and
test
xor
enter
les
inc
push
shr
subb
inc
push
rcrl
xchg
ja
sbb
cmovle
outsb
push
or
out
mov
repz
adc
icebp
jecxz
sbb
fs
and
in
cmp
adc
scas
int
cmpsl
add
xor
mov
lret
aam
pop
xlat
in
lods
xor
cltd
adc
inc
lods
or
mov
inc
jge
fnsetpm(287
dec
mov
pop
cmc
jnp
pop
mov
xchg
jae
cmp
cmc
int3
ljmp
mov
mov
push
mov
into
lock
xor
mov
inc
pop
mov
aad
mov
jnp
jbe
int3
movsb
repnz
add
fs
arpl
pop
sbb
popa
pushf
adc
mov
rcl
dec
icebp
pop
dec
test
mov
add
pop
push
cmpsb
cmc
or
les
inc
aam
mov
jle
mov
movsl
loopne
data16
add
imul
call
mov
or
pop
imul
cmp
inc
sub
fs
adc
mov
repnz
add
jl
arpl
aad
dec
and
push
and
dec
es
rorb
es
in
mov
ljmp
xor
pop
mov
out
pop
xchg
inc
xchg
icebp
sub
in
inc
aad
ret
pop
push
sub
testl
jo
test
arpl
and
js
mov
add
movsl
push
push
hlt
pop
pop
aam
cltd
pop
xchg
push
not
push
cli
mov
xchg
push
ss
adcl
cwtl
fsubrl
gs
jb
xchg
sub
and
pop
cs
mov
fcmovnu
ret
ljmp
aaa
jle
mov
sbb
addb
in
sahf
insb
fisubl
adc
push
sub
xor
pushf
jmp
arpl
mov
mov
out
sub
jns
mov
inc
test
jo
aam
mov
and
mov
imul
push
fwait
sbb
out
push
push
mov
xchg
aam
fwait
jmp
in
js
fimuls
popa
sub
test
push
shl
jne
sbb
pusha
mov
push
sbb
das
addr16
xchg
push
mov
push
adc
sub
repz
sub
mov
mov
std
daa
add
call
das
scas
dec
xor
sbb
or
jbe
pop
movsb
mov
repnz
div
sbb
or
and
in
loopne
aaa
fisubrs
bnd
call
clc
fidivl
popa
xchg
repz
push
inc
repnz
cmc
jns
fsubl
cltd
jne
mov
sub
or
pop
loope
push
fisubl
push
cmp
push
sbbb
test
jp
faddl
lock
jnp
mov
inc
dec
ret
cli
ss
mov
out
test
fucomip
cmp
mov
fistpl
ficompl
mov
adc
cld
sbb
and
add
mov
movsl
int
pop
adc
add
sbb
sub
jg
xor
pop
mov
outsl
inc
jbe
sub
sbb
push
mov
mov
cwtl
xchg
lret
daa
sbb
loopne
into
mov
push
in
xorb
adc
push
mov
ja
xchg
xchg
cmp
iret
and
inc
jl
xor
add
lcall
dec
mov
jo
sti
sub
insb
mov
rclb
push
fcmovne
inc
adc
inc
xor
pushf
nop
pop
pop
pop
adc
xchg
adc
mov
lds
aam
sub
inc
and
xchg
test
scas
lock
das
out
ret
mov
rorb
pop
dec
les
out
jbe
push
test
sarl
out
fwait
cmpsb
insl
adc
cltd
inc
aad
ja
shll
ja
out
inc
push
push
insl
xchg
xlat
out
mov
test
add
xor
push
clc
xchg
shl
outsl
inc
or
divl
mov
dec
pop
inc
sbb
add
loop
xchg
push
repz
psubusb
cmp
push
mov
pop
je
cwtl
mov
xor
pop
jg
sub
pop
data16
mov
push
aam
jb
adc
dec
outsl
sub
mov
aad
mov
addr16
cmc
adc
fisubs
push
outsb
aad
xchg
imul
ror
fidivrs
jp
mov
test
lock
adc
pop
jne
pushf
lret
jmp
sbb
pop
cmp
sub
mov
enter
sbb
in
pop
pop
dec
fmull
psubusw
xchg
pusha
lret
cmp
es
adc
dec
push
push
sub
lahf
mov
cs
shrb
sarb
adc
xor
fisttps
sahf
out
pop
hlt
aaa
inc
ja
in
add
aad
jge
or
popf
les
and
xchg
in
lea
enter
mov
fcoml
sub
adc
pop
inc
mov
in
pushf
test
sahf
or
push
imul
and
pop
inc
sub
inc
push
mov
in
xchg
bound
mov
pushf
fs
jle
mov
hlt
iret
jp
insb
mov
lds
jb
cli
cmc
jle
mov
cli
cld
mov
addl
mov
and
iret
shl
xor
jae
jns
out
lock
loopne
xor
add
pop
jmp
jns
int
aaa
aaa
jle
add
pop
aam
pop
dec
test
incl
rorl
pusha
push
lcall
sub
xor
psubsb
push
or
fwait
pop
imul
lahf
mov
and
jno
mov
or
xchg
xor
das
and
shll
push
enter
xor
sahf
lods
aad
insl
inc
cltd
jnp
xchg
sub
movsl
loope
aam
and
daa
dec
sarl
int3
dec
out
stos
add
dec
xchg
sbb
repnz
push
jmp
stc
adc
repz
and
dec
jne
inc
in
jmp
stc
xchg
dec
mov
push
popa
jb
jle
bound
jno
sub
nop
pop
loop
push
inc
sub
iret
fisubrl
mov
and
or
aas
andnps
roll
rolb
jbe
pusha
les
lods
inc
cmp
mov
ret
das
inc
jecxz
lods
dec
sub
ja
and
mov
cmc
je
add
rcll
loope
test
loopne
mov
push
test
or
and
adc
lods
xchg
loop
xor
shlb
mov
les
and
pop
cmpsb
jb
push
scas
ficomps
jno
sbb
cs
fwait
sbb
ja
xchg
mov
sub
aad
mov
sub
xchg
inc
mov
mov
out
push
ja
in
sbb
negl
fidivrl
std
dec
sub
daa
cwtl
jb
inc
std
jecxz
ljmp
fadds
test
in
mov
dec
sub
int
jnp
pop
sbb
mov
test
pop
rcrb
jno
inc
mov
sbbb
sbb
arpl
lret
loop
adc
inc
pavgb
lret
pop
sub
int3
in
out
jne
bound
push
inc
mov
sub
movb
mov
loope
bound
aas
ljmp
pop
mov
das
int
jnp
xchg
mov
inc
lahf
xchg
in
pop
cmc
lock
scas
lods
sub
sbb
or
shll
scas
cmp
fmull
jmp
sub
cmpsb
or
dec
add
lcall
inc
sbb
test
add
xchg
sub
pop
add
or
lods
pop
cmp
jle
std
arpl
mov
loope
popa
jmp
popf
fdivl
icebp
sub
mov
prefetch
mov
imul
data16
and
pushf
sub
push
sub
jno
arpl
inc
cmpsb
dec
mov
aam
add
sub
arpl
lret
xor
inc
sub
lock
aad
scas
std
roll
adcl
divb
loope
xor
or
push
sbbl
cwtl
aaa
pop
rcll
dec
mov
nop
and
mov
and
std
ds
movsl
jl
fwait
dec
aad
cmc
jl
sbb
out
in
and
inc
pop
pop
sbb
ficoml
jg
push
sbb
nop
sub
iret
mov
dec
ret
push
incb
xchg
dec
loopne
shrb
sub
inc
dec
fstpt
xor
sbb
fsubl
shll
jl
int
stc
mov
push
call
or
mov
adc
lret
bound
cmp
cmc
and
xor
push
mov
in
mov
aaa
addr16
fbld
cmp
test
ret
fimull
mov
out
ret
cltd
aas
sub
xchg
loope
cwtl
xchg
and
dec
push
jb
jge
sar
mov
rorb
push
daa
xchg
test
stos
or
fsubs
add
ja
lds
push
adc
or
mov
fwait
popa
out
cltd
mov
call
mov
inc
outsl
test
xchg
hlt
ret
xchg
dec
xor
adc
in
push
xor
cmp
jb
dec
inc
testb
and
lock
mov
fadd
or
pop
sti
data16
scas
fwait
es
clc
and
movsl
pop
inc
movsb
inc
sub
jl
scas
or
pop
mov
push
push
loope
jl
cmp
pusha
in
cmp
pop
insl
stos
repz
sub
adc
or
cwtl
cmp
push
cli
imul
lahf
adc
shll
dec
sbb
ja
jne
dec
mov
sub
addr16
lret
xlat
mov
sti
cld
ret
mov
mov
and
xchg
test
dec
sbb
fbld
push
xchg
dec
sahf
mov
xor
leave
push
pop
clc
sub
xchg
cltd
cwtl
es
stos
gs
ja
dec
jne
lods
jg
jge
sub
jae
and
add
lds
stc
mov
add
xchg
cmp
adc
testl
fidivrl
and
jb
push
imulb
mov
jmp
mov
addl
imul
sahf
adc
test
mov
mov
shll
lds
jb
inc
lods
cmpl
shl
mov
mov
je
lods
fdivrp
aam
cmp
inc
pop
push
shlb
jns
inc
sub
sub
sbb
mov
loopne
add
repz
push
push
xorl
push
lret
in
push
dec
or
in
push
cmp
cltd
cmp
xlat
fwait
jb
out
mov
movsl
xor
js
push
adc
mov
loop
loopne
aas
sbb
push
xchg
cmp
repnz
lcallw
dec
cmpsl
in
mov
arpl
pop
mov
sub
inc
cli
imul
movl
js
push
in
mov
shl
add
sahf
fdivrp
pop
hlt
inc
xor
mov
lea
outsb
or
jmp
or
mov
mov
push
xor
popa
clc
and
xor
inc
insb
ficoms
inc
insb
test
dec
inc
or
push
dec
cmp
pop
xchg
jg
jmp
out
js
add
fists
cmp
inc
mov
lcall
push
mov
xchg
cmp
add
stos
fstl
mov
mov
mov
sub
push
gs
cld
inc
jg
aaa
shll
outsl
dec
subb
mov
adc
jns
push
pop
sbb
jnp
adc
pop
lods
add
stc
icebp
sub
cli
out
xchg
insl
mov
inc
cmp
adc
pop
push
ss
mov
lret
mov
adc
clc
dec
mov
repz
xchg
mov
nop
inc
shll
push
add
jns
xchg
xor
pop
jnp
fs
push
fcmovne
or
mov
jbe
sbb
aaa
xchg
jns
shl
lret
pop
mov
push
or
adc
ret
dec
cmp
stos
fisubs
cmp
mov
xor
and
mov
in
push
cmp
fcmovu
jb
je
add
sub
loope
lea
sub
add
sti
stos
sbb
les
sbb
std
pop
pop
push
mov
add
js
inc
loope
repnz
enter
stos
xchg
push
or
cmp
repnz
push
test
pop
repnz
jle
das
jecxz
call
jge
sti
add
das
popa
je
pop
mov
and
pop
decl
push
out
inc
and
mov
movsl
jl
test
mov
xor
mov
sbb
std
cmpsb
add
sub
xchg
xor
ds
push
sub
pop
cmp
jne
xor
xchg
mov
idivb
lret
lock
add
jns
cld
sbb
mov
roll
cli
hlt
in
es
das
ret
sub
insl
mov
leave
jns
add
and
add
sbb
outsl
xchg
add
push
std
fstpl
pop
dec
outsb
ja
sbb
mov
pushf
rclb
push
scas
and
sbb
xlat
aad
inc
hlt
mov
popa
rol
pushf
lock
pop
pop
cli
push
std
stos
push
loop
insl
and
adc
push
sti
xlat
sbb
inc
mov
outsb
add
sub
mov
xchg
scas
xchg
pop
ja
mov
push
pop
cmpsl
mov
aas
pop
add
sbb
insb
sub
daa
mov
sub
or
pop
imull
bnd
cmp
or
pop
and
xchg
push
dec
mov
push
movsl
mov
addr16
stos
push
add
xchg
add
sub
add
sbb
inc
dec
add
add
in
and
dec
push
repz
jmp
jmp
mov
cmp
fcmovne
mov
enter
add
es
and
sbb
sub
loopne
pop
mov
sti
arpl
mov
fmull
call
les
arpl
repnz
cwtl
call
sbbl
xchg
leave
icebp
std
xchg
mov
pop
mov
add
mov
and
test
outsl
mov
scas
mov
mov
loop
jbe,pn
ret
mov
push
lret
ja
scas
inc
sub
int3
rolb
bound
mov
add
cs
test
out
movsl
ds
jl
pop
movsl
and
sbb
icebp
rclb
fsubl
mov
jecxz
and
jne
xchg
push
xor
insb
or
cmp
sti
ds
inc
mov
fabs
enter
insb
add
fistpl
fsubrs
sub
pop
je
add
sarl
cs
lods
aaa
and
pop
pushf
fwait
push
orb
imul
outsb
mov
mov
rcll
pop
es
lahf
mov
daa
sbb
dec
add
fistpl
xchg
jne
fs
rcrb
cmc
sbb
push
xor
std
or
lea
test
xchg
dec
mov
fidivl
pop
xor
push
andb
sbb
or
sub
aad
mov
pop
fcompl
fwait
mov
mov
adc
sub
sub
adc
pop
adc
and
push
loop
adc
mov
clc
in
int
mov
or
fwait
mov
xchg
sbb
adc
jae
xor
arpl
cmp
addr16
int3
pushf
sarl
stos
sbbb
nop
in
add
loope
mov
dec
test
mov
negl
mov
ja
pop
orb
xlat
fs
jecxz
sub
jae
ljmp
repnz
jmp
mov
ficoml
dec
fucomi
sub
add
insl
scas
sbb
dec
jp
mov
jnp
out
mov
and
movsb
enter
mov
lock
push
mov
inc
sahf
mov
testl
into
fst
testl
sti
jns
sti
xor
xor
mov
test
pop
push
or
iret
movl
inc
dec
stos
js
adc
icebp
mov
lret
cmc
jnp
data16
mov
enter
jecxz
sbb
and
jno
fcomps
pop
push
jp
jmp
mov
cmpl
mov
push
mov
mov
sbb
dec
cmp
dec
enter
cltd
mov
dec
and
sbb
fwait
and
xchg
jl
mov
jecxz
scas
mov
das
out
xchg
jmp
mov
cmpsl
add
and
cli
std
scas
dec
pop
ljmp
outsl
jp
int
mov
pop
sbb
repz
mov
cltd
xchg
outsl
stos
adc
or
jo
dec
sbb
arpl
addl
push
add
jg
nop
push
push
es
or
push
sub
add
pop
jns
bound
pop
cs
mov
cmp
in
pop
pop
push
shlb
aam
fwait
test
jnp
xor
mov
hlt
rolb
call
mov
shl
push
repz
cwtl
cli
fmull
cmp
sbb
push
cli
dec
shrb
lret
daa
loopne
add
push
les
pop
xchg
cmp
roll
push
js
fs
insb
std
lea
loop
xchg
lahf
cmpl
inc
add
and
cmp
movsb
push
ret
adc
fidivl
sbb
in
cltd
xchg
and
inc
jl
pop
insb
fstpl
ja
fdivrs
add
in
lahf
xlat
jecxz
push
imull
mov
pushf
or
mov
xchg
jg
popf
test
push
leave
fwait
pop
adcb
insl
lea
lahf
sub
pop
mov
jnp
push
loopne
popf
add
subl
in
pop
pushf
out
fisubrs
nop
xor
mov
sub
in
icebp
sarl
push
jge
jg
movsb
xchg
jno
and
mov
cmp
sub
mov
mov
aas
negb
mov
or
repnz
xor
pop
sbb
mov
cmp
cld
sar
pop
mov
sbb
xlat
inc
arpl
jmp
xor
test
std
icebp
pop
push
leave
mov
fs
std
lock
mov
shlb
ja
enter
push
out
xchg
jmp
aam
data16
into
out
call
cmp
pop
jmp
out
sti
shll
mov
out
dec
adc
es
add
mov
test
mov
test
imul
jne
dec
add
xor
xor
xchg
push
add
cmp
sub
mov
xchg
in
aad
adc
lcall
pop
cmp
leave
loopne
orb
xchg
cmpsb
jmp
fxch
leave
cmpsl
in
insb
test
into
pop
sub
adc
cmp
stos
mov
imul
inc
call
and
xor
xchg
push
jecxz
push
xchg
pushf
xchg
sbb
fiadds
sbb
call
pop
fistpll
insl
jp
mov
cmpsb
cmp
pop
or
data16
mov
fs
test
xchg
arpl
in
jb
ljmp
sbb
data16
add
jno
sbb
shrl
pop
lea
and
repz
or
out
cmp
hlt
test
add
mov
int3
xchg
addr16
cld
mov
mov
jmp
into
pop
xchg
andl
pop
pop
push
mov
mov
push
lods
xchg
loope
adc
and
mov
cmp
mov
jge
mov
mov
push
sbb
aaa
int
sti
movsl
jp
jae
jp
test
xchg
leave
xor
mov
pop
inc
jecxz
stos
add
out
add
add
scas
pop
imul
fiadds
xchg
pop
cwtl
mov
or
xor
xchg
and
test
inc
inc
js
or
pop
pop
and
daa
insl
insl
jmp
int3
test
push
push
xor
lret
mov
jne
xor
mov
shl
les
outsl
mov
xchg
std
in
int3
and
and
int3
xor
pop
lea
dec
sti
push
pop
pop
in
push
hlt
stos
mov
adc
jmp
clc
mov
dec
xlat
out
test
gs
ror
jge
out
loopne
or
ficoms
pushf
lcall
aas
pop
rcrb
mov
stos
mov
stos
cmp
cmc
cmc
cmpsb
xor
arpl
dec
inc
fxch
out
inc
data16
jg
data16
push
cld
in
shll
inc
mov
rcll
pop
arpl
jb
fucomip
cmp
and
lret
xchg
cmc
sub
out
pushf
push
loope
dec
hlt
int
ret
ret
cmc
imul
loopne
pusha
mov
inc
mov
lret
inc
sbb
sbb
adc
cmpsb
repz
xchg
xchg
cmp
out
sub
sbb
add
cld
ja
push
imul
loop
xchg
pusha
fsubs
xor
lcall
dec
aaa
jnp
es
in
adc
stos
shll
sti
inc
stos
sti
ret
mov
xchg
fmuls
push
pusha
mov
ror
pushf
dec
lret
jle
idivb
mov
or
out
jns
les
loopne
into
push
push
sarl
int
jo
xor
es
mov
xchg
sbb
xchg
jbe
fcom
push
and
repnz
lret
jle
rcll
imul
popfw
jecxz
xlat
popa
insl
andl
ds
sbb
je
push
repz
scas
roll
outsb
std
call
jb
ret
pop
mov
pop
push
xchg
mov
nop
mov
adc
lret
ror
int
cmpsl
add
sub
mov
jge
mov
dec
push
scas
dec
jecxz
pop
cmp
push
jbe
test
mov
outsl
imul
mov
dec
xchg
dec
les
jae
pop
fdivrs
dec
push
cmp
jnp
in
clc
aaa
pslld
mov
jno,pn
rcrb
out
push
in
outsl
imul
lea
fsubp
lret
cmp
xor
mov
or
invlpg
push
sti
jnp
sub
jge
shr
jno
pop
xor
aad
sti
ljmp
push
mov
rolb
or
cmp
fcompl
pop
jns
mov
cli
pop
inc
faddl
xor
cli
pop
aad
lods
mov
dec
or
pop
push
fs
sbb
push
fcompl
addl
pcmpgtd
push
shrl
je
or
cmp
pop
movsb
mov
int
mov
cltd
mov
dec
movsl
inc
sbb
sub
lods
xor
pop
cmpb
push
jns
repz
dec
add
mov
cmpsl
ja
sbbl
in
dec
stc
mov
dec
or
repnz
lret
das
cmp
pop
pusha
push
or
cmp
scas
dec
or
mov
pop
addb
xlat
adc
cmpsb
xchg
mov
adc
mov
roll
mov
cmp
adc
jp
stos
movsb
xchg
mov
sub
jo
fcomps
add
xchg
pop
imul
fsubrs
xchg
imul
outsl
jbe
aaa
scas
add
push
lcall
fbstp
mov
cwtl
out
lret
mov
cmp
inc
aaa
mov
fs
scas
sub
cs
pop
or
and
icebp
stc
add
and
xlat
stc
cltd
xor
sbb
and
decl
insl
popf
pop
and
nop
pushf
pop
fiaddl
test
stos
ret
pop
push
repz
jb
sbb
stc
stos
xchg
out
xchg
cli
xchg
add
mov
adc
cmp
xchg
pop
dec
jg
in
aam
test
push
test
arpl
ret
insb
mov
push
push
cld
inc
rol
hlt
jae
call
cmp
cmp
in
pusha
seto
addl
aas
pop
xchg
test
adcl
inc
or
push
jge
sti
dec
xor
pop
shlb
xchg
imul
adc
rorl
pop
fistl
inc
jo
mov
add
or
mov
rclb
data16
cwtl
sbb
js
dec
fcoms
sub
dec
cmp
and
cmp
jl
jnp
outsl
xchg
fwait
scas
and
sbb
enter
stos
mov
popf
vpavgw
push
out
pop
test
sbb
ja
adc
out
cmp
lcall
into
js
adc
pop
sbb
aad
dec
mov
in
jg
fwait
stc
test
push
sub
sbb
fidivrl
push
icebp
mov
inc
xchg
lahf
loope
xchg
sbb
add
xor
filds
lods
dec
ret
xchg
push
ds
xchg
sub
adc
jb
fdivl
movsb
mov
aad
jge
xchg
jnp
mov
repz
stos
push
dec
mov
mov
sbb
cli
cs
aas
mov
test
arpl
xchg
call
jns
xor
push
jns
push
aad
dec
les
sub
out
mov
lret
lods
flds
or
push
test
lcall
or
xchg
cmpl
inc
cmpsb
and
repz
pop
xchg
pop
sbb
test
inc
std
das
scas
adc
iret
lods
fstpt
mov
nop
or
in
outsl
xor
clc
adc
jne
or
and
mov
mov
xchg
movsl
test
sbb
inc
inc
mov
xchg
fidivrs
or
addr16
add
dec
dec
stos
jns
aas
mov
sbb
jle
clc
lret
jge
xchg
fmull
lock
inc
hlt
cs
nop
ds
or
stos
loope
int
test
call
jmp
mov
or
and
push
shlb
jb
jl
addr16
cmp
sub
dec
push
push
jae
int
jecxz
mov
out
stos
cwtl
bound
mov
push
mov
mov
sti
clc
jns
aas
mov
popl
mov
jmp
sbb
ret
fcomps
je
xor
add
addl
fidivl
cmp
bound
mov
mov
push
mov
insl
push
jbe
cmp
or
and
pop
cmp
idiv
inc
iret
lret
adc
mov
push
das
outsl
mov
sbb
lea
add
ljmp
xchg
mov
insl
inc
sub
fcompl
cmpsb
pushf
pop
scas
cltd
rcl
insl
xor
arpl
inc
test
add
hlt
or
inc
pop
cwtl
dec
mov
push
aaa
cmp
mov
sbb
inc
push
in
jo
xchg
rep
scas
jae
movsb
add
adc
jno
nop
jp
xchg
aaa
push
stos
nop
movsl
hlt
clc
jge
fwait
inc
out
add
jns
sti
in
jge
push
xchg
mov
ja
or
push
mov
daa
or
jl
stos
xor
fxam
bnd
iret
ds
addb
ljmp
push
mov
fsubp
fidivl
scas
xor
lods
lods
or
mov
insb
ret
and
push
ret
scas
mov
pop
sbb
inc
jnp
mov
mov
add
aas
sbb
imul
in
leave
pop
xchg
push
mov
cmpsb
add
leave
push
nop
ret
std
adcb
mov
cmp
je
xlat
cmpl
outsb
pop
cmp
subl
mov
je
fadds
mov
dec
sbb
mov
sbb
fistl
adc
or
push
lahf
or
sbb
dec
or
inc
pusha
cltd
sbb
inc
repnz
dec
int3
push
mov
xchg
popa
xchg
mov
imul
or
cmp
lods
xchg
push
pushf
mov
or
sub
test
jne
movsl
mov
inc
repnz
std
mov
dec
mov
sub
data16
push
jns
push
mov
push
pop
icebp
es
out
ljmp
fdivrs
jb
ss
push
jl
addr16
pushf
mov
mov
push
scas
push
enter
insb
jo
adc
andl
add
or
out
sbb
sbb
inc
imul
or
dec
pop
mov
jno
dec
cmp
aas
pop
rorb
add
dec
loopne
pop
hlt
xchg
mov
icebp
rcrb
das
mov
pop
xlat
das
sub
mov
and
test
jnp
test
les
and
push
movsb
dec
inc
shr
jl
sti
int3
das
adc
sbbl
xchg
mov
fistps
pop
mov
mov
and
jg
ret
pop
das
mov
mov
mov
mov
sub
add
mov
mov
xor
add
jne
mov
mov
xor
lea
mov
mov
xor
add
jne
jmp
mov
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
add
imul
mov
mov
mov
add
or
mov
mov
mov
add
xor
mov
mov
mov
add
and
mov
mov
mov
lea
mov
mov
mov
sub
add
mov
mov
xor
add
jne
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
add
imul
mov
mov
mov
add
or
mov
mov
mov
add
xor
mov
mov
mov
add
jmp
mov
cmp
sbb
test
inc
pusha
dec
pop
std
jns
adc
jp
bound
jmp
imul
mov
pushf
add
pop
mov
push
fidivl
jl
or
push
test
outsb
push
jne
negl
and
mov
and
fsubs
and
dec
fldl
or
shll
cld
xchg
pop
stos
in
popa
push
pop
sbb
mov
fcoml
movsl
and
test
pop
stos
cld
inc
lea
add
cmc
mov
xlat
stos
add
jle
and
jno
rcrl
mov
add
jg
mov
addl
or
addb
push
stos
inc
nop
mov
clc
es
ffreep
adc
xor
imul
jnp
and
mov
mov
adc
gs
sbb
and
xlat
cmp
or
add
mov
test
jmp
push
ss
mov
imul
insb
xchg
jbe
lahf
sub
inc
cwtl
imul
cmpb
mov
scas
ss
jp
or
vandnps
mov
sub
and
adc
scas
sub
cli
push
push
movsb
inc
cmp
pusha
adc
fldl
and
add
lahf
subb
ja
pop
dec
fcmovbe
mov
mov
jmp
xchg
ret
mov
ret
movsl
cmp
mov
into
add
sub
push
stc
mov
into
xorb
les
add
mov
ret
ret
pop
arpl
inc
add
jg
lock
test
popa
push
or
xor
cld
and
pop
xchg
xor
or
andps
loop
lds
adc
dec
mov
pop
stos
dec
xor
hlt
push
sbb
icebp
sub
popf
lret
jb
leave
mov
in
scas
push
mov
sbb
fbld
mov
sbb
aad
or
cmp
inc
mov
adc
repnz
js
test
mov
in
outsb
int
cmp
pushf
loop
sbb
jne
lahf
aas
mov
sub
jns
dec
mov
mov
imul
or
jg
xor
shl
nop
lcall
mov
jp
clc
scas
dec
sbb
mov
add
mov
jmp
jo
ds
push
pop
scas
or
mov
movsb
andl
in
sub
jmp
inc
jo
je
aaa
jb
add
jb
jge
loopne
jne
sub
repnz
int3
jb
xchg
test
dec
cmpsb
and
repnz
fsubl
les
sub
pop
mov
js
int3
lds
ficomps
dec
cmp
iret
sub
imul
pop
pusha
sub
int
js
repnz
add
fcoml
push
pop
pop
repnz
das
xlat
sbb
loop
loop
adc
stos
sahf
ja
pop
sbb
std
imul
mov
mov
mov
ficoms
fadd
ja
inc
push
inc
cld
movd
add
add
ljmp
fildl
lahf
je
dec
cmp
pop
lret
dec
inc
push
cmpsl
stos
mov
pshufw
inc
rol
or
sbb
js
cltd
push
sbb
cmp
fidivl
pop
xchg
or
jle
dec
pop
lock
sub
daa
mov
lahf
push
in
sbb
lea
cmp
add
mull
imul
aad
cmp
cmp
test
sbb
sub
mov
cmp
and
mov
lods
js
jg
xchg
cmp
fs
out
or
jg
pushf
sub
or
nop
sub
mov
cli
dec
into
sahf
sbb
xchg
sbb
loope
jmp
mov
pop
in
stos
aas
adc
ljmp
jae
sarb
nop
sbb
sub
pop
sbb
movsl
aas
push
cmc
cltd
jo
ficoms
inc
mov
bound
pop
xor
icebp
pop
xor
or
repz
data16
dec
push
xor
or
and
pop
outsl
adcb
data16
hlt
jl
sub
push
mov
sub
fmull
ret
dec
es
pop
popa
mov
and
cmp
imul
mov
adc
dec
add
dec
insl
push
sbb
jbe
aaa
lods
jbe
add
jbe
lar
and
pushf
pop
xor
insb
lret
push
popa
cmp
inc
add
xor
or
pop
push
push
dec
dec
jnp
pop
xchg
mov
pop
or
jle
mov
js
mov
mov
clc
mov
inc
sub
dec
mov
jge
inc
cwtl
aaa
ds
cmp
sbb
mov
movsl
rcrb
sub
call
js
inc
rorl
lahf
or
and
and
in
push
test
call
pop
sbb
pop
jbe
mov
sub
pop
out
aad
leave
mov
or
cmp
mov
add
pop
push
test
xchg
fdivrl
adcl
loopne
xor
ret
xor
adc
sub
jno
mov
andl
out
pop
in
lahf
data16
test
fs
xchg
mov
inc
dec
push
in
aad
sbb
scas
xchg
cmc
pusha
cmp
mov
and
lahf
dec
push
adc
pusha
sub
out
pop
sbb
ret
jno
jae
mov
dec
add
pop
outsl
dec
les
mov
ss
jnp
push
repz
out
push
lret
adc
pop
and
pushf
sbb
push
insl
fwait
rorl
das
dec
pop
insb
pop
rorl
or
movntps
push
adc
jae
mov
repnz
pop
loop
adc
leave
movsl
std
mov
sub
scas
sarl
ds
mov
pop
imul
int
and
jecxz
dec
stos
cmp
mov
jl
dec
xchg
ret
inc
lock
xchg
lock
and
cmc
lds
std
xchg
das
jno
mov
mov
stc
loope
aaa
dec
mov
xchg
outsb
popa
jno
inc
adc
cld
fstpt
std
iret
jns
sub
addb
ja
fs
or
jbe
shl
pusha
daa
fistpll
iret
sbb
shlb
notb
xchg
jg
xor
or
pop
push
sub
or
xchg
or
inc
xor
rorl
fstpt
cwtl
popf
lahf
or
sbb
ds
add
pop
xchg
mov
aas
pop
pop
nop
cs
sub
add
cmc
push
sub
and
in
test
xchg
inc
xchg
and
xchg
dec
xorl
je
sub
mov
mov
push
cmpsb
andb
mov
cmp
scas
push
push
cmp
jl,pt
xor
in
and
data16
fs
leave
shll
test
adc
adc
divl
cmp
dec
lret
pop
cmp
sbb
mov
negb
jb
lods
xor
movb
in
xor
cmpl
and
fdivl
cwtl
scas
jge
mov
inc
jbe
lds
xchg
jmp
inc
fisttps
pop
lret
shll
xchg
cltd
inc
xor
push
jno
cmc
repnz
ja
bound
push
faddl
add
xlat
roll
mov
cmp
insb
leave
mov
jle
insb
adc
sub
fadds
addb
mov
cmc
fcomps
sub
and
cmp
adc
push
test
es
mov
jnp
xor
sbb
push
push
inc
mov
fisubrs
rclb
push
sub
pop
xor
imul
fdivs
mov
rorb
cmp
iret
xchg
jo
fsubrs
cmpsl
and
aam
jecxz
dec
mov
cld
xchg
lock
lahf
mov
cwtl
xor
push
or
ja
mov
das
andb
mov
jne
push
sbbb
inc
mov
or
in
push
sbb
stos
call
dec
push
lahf
rcll
xchg
adc
pop
cmpsb
lock
fnstsw
jmp
mov
sarb
xor
push
loopne
xor
xchg
movsb
mov
in
xchg
sbb
in
cs
mov
loopne
adc
pusha
push
sub
cmc
jb
jb
test
not
xor
ljmp
pop
pop
stc
dec
in
sub
push
xor
dec
into
mov
fists
jge
int3
jle
fidivl
or
xor
ret
sub
pushf
jns
lret
mov
push
imul
iret
js
fisubl
iret
pushl
dec
sub
into
mov
cmpsl
xchg
ret
dec
xchg
mov
or
lods
std
sti
sbb
sub
cmp
loope
js
sub
dec
pop
xchg
mov
scas
clc
push
insb
pop
sub
cwtl
pusha
int3
sarl
cmp
sbb
das
pop
ljmp
test
mov
xchg
adc
fdivrp
cmp
xor
pop
mov
bound
mov
out
jl
adc
pop
stos
pushf
jo
sub
jl
sub
mov
ds
and
icebp
xchg
inc
sub
jecxz
shrb
jmp
or
cmp
pusha
ficomps
fidivrs
xchg
outsb
inc
daa
cwtl
shlb
cmpsl
in
aas
push
jle
cmpsl
andl
loopne
aas
outsl
xchg
loop
imul
mov
adc
pop
push
cmpb
xchg
imull
call
mov
mull
inc
ds
dec
stos
out
sbbl
sub
push
ret
push
push
and
out
add
jne
and
insb
data16
or
or
and
cwtl
sbb
mov
scas
inc
fcoms
jno
cs
sbb
sbb
lds
imul
push
es
arpl
shll
aaa
pop
mov
sub
pop
ss
mov
rol
lcall
daa
icebp
fsubrl
lahf
lods
push
cmp
xchg
sub
repz
or
lcall
pop
nop
dec
adc
push
mov
mov
cmp
mov
mov
bound
sbbl
adc
add
push
mov
lods
jg
mov
cmc
jmp
sub
xorl
xchg
fwait
push
adc
std
pop
add
inc
dec
mov
fs
xchg
cmp
jp
push
push
xchg
nop
in
das
add
lock
xchg
out
hlt
sub
mov
sub
pop
clc
ljmp
push
in
push
cmpl
movsb
pop
mov
jno
out
jl
daa
adc
sub
xchg
xchg
jbe
mov
sub
jb
hlt
mov
fs
xchg
aas
mov
ds
push
outsb
push
fidivrl
shrl
sbb
sub
mov
sbb
cmpsb
push
das
xchg
mov
insl
call
pop
inc
lahf
dec
dec
stc
and
adc
sbb
and
fwait
xlat
testb
ja
aaa
das
push
pop
out
daa
mov
sub
inc
shlb
xchg
fcmovbe
rcll
pop
adc
clc
cmp
test
test
lds
mov
fwait
jo
add
test
scas
loopne
addl
xchg
xlat
dec
fldcw
clc
popf
or
stos
dec
mov
test
rcl
shlb
test
dec
mov
cmp
daa
lret
xchg
fcmovnu
aas
push
fcomip
cmp
xchg
add
xchg
lock
enter
mov
pop
mov
cmp
movsl
cmp
and
sbb
add
ljmp
inc
mov
addl
fwait
push
lods
and
xchg
insl
sub
nop
mov
lcall
or
cmp
mov
aaa
data16
or
mull
ret
shll
loop
hlt
movsb
xlat
push
shlb
aad
jbe
mov
mov
sbb
add
mov
adcb
fcompl
lods
mov
rcrb
sub
lock
push
xorb
sahf
sbb
rcr
movsb
xor
insb
out
mov
jae
jo
push
add
push
test
dec
push
xchg
testb
mov
data16
or
int3
movsl
jnp
jl
mov
cmp
subb
adc
dec
movsb
push
sub
jle
push
cmp
jnp
lret
imull
enter
xchg
mov
push
fldl
rorl
es
push
jno
xchg
popa
lcall
cmp
ljmp
test
mov
daa
repz
or
sub
xchg
not
dec
and
int3
mov
and
xor
rcr
push
shll
inc
push
mov
mov
cld
inc
nop
jb
les
shlb
inc
or
and
add
mov
dec
mov
or
pop
and
js
testb
inc
loop
pop
lahf
jae
push
or
sbb
imul
aad
xchg
add
neg
add
ljmp
mov
es
loop
out
rorl
sbb
js
cmp
sbb
xchg
jge
test
mov
addr16
sbb
add
adc
xlat
push
push
sbb
int3
jae
mov
dec
lock
mov
les
jnp
inc
ret
or
add
mov
popa
sarl
and
sahf
or
dec
cld
jns
xor
and
push
std
push
mov
jl
jne
adc
out
cmc
leave
and
push
mov
adcl
ret
cli
push
or
rorb
push
iret
cmpsl
insb
sub
sbb
lret
inc
in
cmp
mov
or
daa
lods
inc
sbbb
fcomps
or
mov
xor
test
jg
stc
add
cmp
in
adc
in
arpl
dec
lcall
fistpl
mov
or
es
dec
dec
outsl
xorb
stc
mov
cmpsl
int
out
mulb
pop
insl
ret
adc
and
sub
dec
mov
push
cmc
dec
insb
fs
in
rol
scas
in
fcmovne
pop
mov
push
aaa
xor
sbb
mov
in
jle
mov
lods
adc
mov
das
mov
mov
pusha
mov
imull
or
push
sub
loope
sarb
xchg
imul
sbb
rcll
mov
js
hlt
testb
adc
xor
xor
in
jnp
inc
xor
out
dec
sbb
imul
hlt
sub
sub
add
or
sub
lcall
repnz
mov
push
movsb
cmp
sahf
stos
pusha
lcall
mov
sub
cmp
push
arpl
test
fnstenv
pop
xchg
mov
cmc
push
sahf
fsubp
punpcklbw
stc
lods
cld
lret
pop
cmp
jmp
jl
divb
loop
mov
mov
movsb
sbb
cs
imul
jbe
xchg
mov
mov
mov
adc
add
js
mov
out
sub
pop
std
sar
cmpsb
xchg
mov
mov
pop
add
inc
pushf
dec
adc
subb
push
popf
gs
in
and
push
rolb
out
push
aad
cld
fmull
jb
pop
dec
aas
mov
int3
movsl
or
xchg
icebp
mov
data16
cmp
pusha
sub
mov
or
dec
and
sbbb
xor
dec
stos
cmp
mov
arpl
mov
jnp
cmc
and
mov
lcall
dec
inc
xor
pusha
shlb
inc
push
nop
orl
ljmp
dec
or
push
jmp
and
aam
xchg
dec
subb
jns
mov
mov
dec
and
fsubs
jnp
in
and
jp
outsl
mov
in
lock
jmp
hlt
sbb
test
or
je
mov
inc
add
or
xchg
jo
push
mov
sub
and
mov
jae
test
pusha
adc
xchg
xor
jle
xchg
cmpsl
sub
aas
add
stos
xor
jnp
and
adc
subb
push
jl
stos
cmp
cmp
cltd
or
jle
pop
icebp
into
inc
test
mov
sbb
sahf
icebp
jl
lret
aas
xor
pop
mov
les
sbb
cwtl
repnz
add
nopl
das
popa
sub
dec
push
cmp
inc
jbe
loopne
sub
lock
scas
sbb
sahf
out
adc
cmc
je
es
lods
pop
inc
cltd
inc
dec
pop
push
stos
clc
in
loope
add
add
fdivr
cmc
pop
rcrl
lahf
mov
mov
add
push
xlat
sub
xor
jmp
mov
inc
mov
xchg
mov
insb
xchg
dec
aad
fnstenv
les
fcoms
rolb
out
inc
nop
inc
mov
fistps
cmp
jmp
scas
sbb
mov
add
lcall
lcall
mov
cmp
insb
dec
add
ja
imul
mov
push
enter
mov
fwait
mov
sbbl
das
fcmovnb
pushl
fisttpl
xor
cmpsl
jmp
push
popa
in
fcompl
cwtl
loope
pmullw
push
inc
jns
mov
sbb
jne
push
xor
sbb
test
mov
lea
out
and
pusha
mov
push
in
xlat
xor
dec
dec
in
cmp
mov
enter
dec
jbe
rcrl
pop
les
stc
popa
and
negb
loop
inc
lock
stc
or
dec
repnz
adc
pop
movsb
adc
testl
js
clc
mov
popf
stos
lds
push
jno
push
bound
imul
or
jp
adc
aaa
inc
inc
jecxz
insb
dec
popa
sbb
movsb
sub
mov
jo
pop
mov
sub
es
imul
int3
inc
jae
mov
movsl
xchg
sbb
lret
xchg
and
xor
inc
adc
and
push
subl
jo
aas
jl
mov
std
xor
xchg
cmc
ljmp
inc
xchg
adc
jne
mov
test
stos
das
inc
repnz
mov
pop
xchg
lcall
jge
sahf
int
scas
enter
mov
xchg
and
iret
andb
popf
rorb
or
aaa
std
fldt
or
cmpl
push
push
mov
adc
pop
movsb
push
je
stos
add
jns
push
cmp
xor
sbb
push
mov
xchg
xor
pusha
int3
pop
loope
mov
inc
fbld
dec
xsavec
sahf
imul
adc
sub
dec
mov
loope
pop
adc
aaa
insl
popa
test
mov
xchg
shr
int3
mov
cmc
jge
faddl
subb
outsb
movsl
aad
add
stos
or
xchg
pop
in
push
inc
jbe
add
ljmp
mov
into
sbb
int3
les
cmpsl
sub
aaa
sub
sub
dec
test
xor
dec
jmp
adc
loop
je
test
cltd
out
insb
aad
jp
popa
and
shl
inc
pop
jns
ds
and
cmp
jge
jmp
leave
jae
movsb
jno
int
or
cmp
insb
mov
push
add
inc
out
aam
dec
mov
ss
in
cmp
pushf
pop
test
xchg
inc
inc
cmp
cmpsl
sub
adc
mov
dec
insl
and
jno
gs
std
fwait
mov
ret
ss
xchg
cmp
sbb
jo
jecxz
inc
addb
sbb
sahf
nop
cmp
mov
or
and
push
adc
xor
inc
pushf
callw
je
in
cmpb
xchg
mov
pop
insl
cmpsb
lods
jne
cld
push
mov
dec
inc
femms
pop
dec
outsl
mov
cld
adc
fidivs
mov
shll
mov
call
pop
add
pushf
loope
in
clc
add
mov
mov
enter
lret
xchg
cmpsb
mov
fidivl
xchg
add
cpuid
mov
insb
lods
lods
jbe
cld
add
push
out
aad
adc
and
jb
xor
das
dec
mov
sbb
add
fnsave
add
stos
mov
mov
cmp
stos
aaa
xor
loop
push
cmp
inc
mov
mov
sti
cmpl
jbe
fsub
mov
adc
pop
add
xchg
fs
push
es
fisttpl
cmp
out
or
jp
lret
sub
push
addr16
mov
and
pop
jb
jnp
mov
jp
negl
pop
roll
sbb
cwtl
adc
pusha
pop
pop
sbb
inc
pushf
lcall
sub
ja
insl
test
subl
push
cmp
push
adc
inc
xchg
out
bound
loopne
pop
rol
add
or
aad
sahf
es
inc
outsl
scas
or
pop
or
int
cmpsb
icebp
insl
popa
push
adc
push
mov
sub
test
sahf
es
jns
dec
std
lds
xchg
add
dec
arpl
inc
or
iret
in
push
popf
pop
cmp
jg
cmc
add
gs
repz
xchg
movsb
or
shlb
add
push
ja
xor
in
xor
adc
pop
sbb
fidivs
xchg
sub
outsb
jl
sub
sub
add
cmpsl
out
cmp
clc
inc
push
jg
push
repz
mov
xchg
leave
sbb
sbb
push
in
in
es
pop
ljmp
mov
and
add
sahf
aad
stc
test
sub
mov
rorl
in
dec
jmp
pop
push
push
std
push
xchg
shrd
jg
jle
dec
fnstsw
in
ljmp
in
cmp
mov
push
out
out
testl
ret
iret
sub
dec
adc
cmpsb
xor
and
insl
jnp
js
and
sahf
in
mov
ret
lret
iret
daa
sub
pop
sahf
adcl
out
push
cmpsl
ds
stos
xchg
pop
jae
cli
lahf
loopne
or
or
insl
fldenv
jmp
sbb
sti
test
mov
push
mov
jg
out
outsb
pop
mov
mov
into
xchg
cld
popf
cmp
test
xchg
mov
sub
pop
adc
js
add
loopne
xchg
sub
and
xchg
test
xchg
cmp
xlat
sbb
loopne
jmp
add
call
jb
xor
daa
pop
repz
js
xchg
addr16
add
addb
test
or
inc
push
ja
cld
icebp
inc
mov
push
out
mov
jg
cmpsb
sbb
pushf
movsb
add
lock
lahf
scas
inc
pop
adc
adc
dec
add
shll
outsl
in
lds
mov
or
cmpsl
mov
fs
shll
bnd
cwtl
jge
not
inc
dec
data16
or
fwait
xchg
je
daa
testl
xor
icebp
mov
or
mov
movsb
fstps
subl
cli
pop
jae
or
inc
gs
cs
pop
or
test
imul
dec
andl
fstpt
lods
or
push
rcrl
mov
xor
and
sbb
fisttpll
nop
and
in
pushf
dec
mov
inc
adc
aaa
or
xchg
inc
lea
call
cmp
rolb
mov
xor
imul
sbb
insl
lcall
sbb
mov
cwtl
xchg
mov
push
lods
inc
cmp
mov
mov
sub
ja
nop
loope
loope
addr16
jbe
or
lds
xchg
push
inc
idivl
xchg
mov
mov
aaa
pop
jge
sub
ljmp
ja
pusha
incl
jno
ja
push
loop
insb
std
inc
test
pop
mov
sti
lds
xchg
nop
scas
lock
sub
cmp
sbb
xchg
sbb
jno
icebp
pusha
bound
jns
loopne
cmp
pop
inc
test
or
pop
test
mov
pushf
add
fwait
repnz
add
imulb
in
mov
sar
mov
jb
daa
ljmp
sbb
ficomps
fs
popa
inc
dec
dec
jns
shlb
adc
inc
mov
mov
fdivp
pop
mov
jae
shll
out
clc
std
pushf
xlat
mov
repz
pop
lds
clc
and
jo
lea
dec
push
fwait
lods
cltd
in
add
push
and
mov
jne
sub
fld
xchg
mov
jge
popf
scas
lds
or
inc
fdivs
inc
pop
cli
ja
addl
scas
jle
popf
mov
jns
das
out
daa
mov
xor
lret
cmp
cmp
notb
out
sbb
jl
add
aam
or
push
jl
sbb
add
pushl
jge
mov
addr16
adc
mov
mov
hlt
sbb
fnop
mov
subl
nop
jnp
push
icebp
mov
inc
lret
mov
inc
int3
sbb
stos
mov
scas
pop
cltd
cmp
data16
out
inc
inc
iret
iret
pop
jb
ret
mov
jge
jae
in
mov
inc
fs
lock
dec
inc
add
pop
or
sub
push
jbe
inc
test
cmpsb
lret
neg
das
pop
or
in
repnz
or
imul
sub
inc
test
mov
scas
jg
mov
pop
adc
addl
ljmp
push
sbb
sbb
mov
sti
xor
pop
lea
pop
std
ljmp
sbb
les
push
push
jbe
add
pop
loop
cmpsb
sbb
movb
or
and
add
jle
mov
aam
sub
in
jle
and
ret
add
cmp
cmp
testb
ret
lods
cmp
mov
or
call
lods
clc
push
dec
mov
mov
movsb
jns
pusha
push
or
push
ljmp
int3
add
popa
mov
gs
sbbl
pop
xchg
cmpsl
outsb
mov
mov
iret
test
test
jb
in
mov
jno
mov
stos
das
addl
push
inc
loop
or
je
pop
pusha
fiadds
out
mov
jp
adc
cmp
jecxz
dec
add
xor
mov
mov
inc
xchg
sbb
jmp
mov
popa
and
jmp
sub
sbb
std
mov
push
xor
addr16
leave
push
fwait
or
jge
push
out
jb
add
add
lret
shll
daa
sar
adc
add
push
sahf
add
sbb
jo
lcall
mov
loopne
ret
fldl
lods
jle
cli
addr16
psubd
pop
sub
dec
pop
pusha
pusha
jo
mov
sub
movsb
sub
sbb
fnstcw
ret
adc
not
push
in
or
stc
mov
movsl
mov
dec
pop
dec
inc
popf
and
pop
sar
gs
xor
xchg
mov
cs
cld
sarb
hlt
mov
movsb
adc
jb
lret
adc
adc
addl
cmp
loop
inc
mov
adc
adc
xchg
cmpsl
and
lods
mov
out
inc
sub
addr16
imul
cmpsb
and
cmc
js
and
xor
xchg
stc
inc
jnp
shll
xchg
loop
mov
test
jb
pushf
gs
jecxz
lret
inc
hlt
lods
addr16
dec
add
in
div
dec
jmp
mov
lcall
mov
push
jle
xchg
cwtl
aam
xchg
rorb
jg
insl
push
jp
xchg
sub
in
dec
fcoml
sub
fs
mov
mov
dec
inc
ret
jnp
out
aaa
sbb
ljmp
data16
stos
add
add
in
push
loopne
mov
jge
mov
das
jno
arpl
mov
rorb
int
sbb
icebp
xchg
jle
in
daa
incb
aam
jmp
mov
pop
hlt
iret
and
lcall
fs
sub
cmp
xor
loope
cs
jno
jnp
cwtl
sbb
or
shlb
movl
sarb
in
push
fisubrl
xchg
add
dec
mov
call
push
adc
aad
mov
push
mov
jno
enter
cmpsb
or
push
mov
cmovp
and
push
xchg
aaa
flds
jne
jmp
insb
test
insb
adc
pop
jmp
addr16
inc
cmc
gs
lcall
add
dec
mov
imul
xchg
cltd
mull
push
idivl
dec
mov
popa
sbb
push
inc
cmp
jne
pop
scas
lods
xor
out
sbb
js
out
jg
js
dec
mov
fmull
orb
cs
std
cmp
out
cli
mov
pop
jae
push
loopne
fsubrl
in
pop
pop
imull
dec
into
fisttps
icebp
sub
mov
adc
pushf
je
loopne
sbb
fwait
or
jge
xor
sbb
xchg
dec
xchg
pop
cmp
shrb
and
jl
jle
loopne
push
std
aam
movsl
sbb
mov
stos
jb
cmpsl
ds
shll
shr
xor
shl
lret
ds
inc
or
test
icebp
push
add
sbb
nop
daa
push
popa
xchg
adc
lods
cli
push
and
out
pusha
add
push
xor
xchg
das
sub
sbb
inc
jecxz
mov
ds
jno
mov
mov
pop
clc
int3
xor
ja
imul
inc
jecxz
sbb
das
fmuls
jg
call
aas
xor
int3
es
sbb
aaa
hlt
pop
mov
imul
ja
jle
lcall
xchg
clc
daa
inc
in
popf
lcall
out
mov
or
inc
adc
dec
jmp
ljmp
data16
jmp
popf
sub
lods
test
sbb
in
jbe
lds
mov
and
adc
add
inc
clc
cmp
sub
ds
or
jnp
push
aad
or
test
jo
addb
shl
dec
divb
jmp
mov
mov
and
fmuls
int
push
enter
sub
icebp
sub
pop
adc
xor
and
sbb
loop
xchg
loop
jle
dec
pushw
mov
lahf
outsb
pop
sbb
jge
shll
out
sbb
cs
and
cltd
mov
clc
dec
rolb
aas
inc
add
cmp
and
pop
dec
cmpsl
mov
mov
nop
mov
insb
cmp
aas
pop
out
lds
push
inc
cwtl
popf
xor
scas
dec
xchg
mov
shlb
ret
iret
pop
inc
loope
jmp
ficoms
cmp
add
ss
stc
and
mov
mov
mov
lea
mov
mov
mov
sub
add
mov
mov
xor
add
jne
mov
xor
mov
add
mov
pop
pop
pop
leave
ret
push
mov
sub
add
push
movl
cmpl
je
cmpl
jle
jmp
push
pushl
push
push
call
mov
dec
mov
jmp
push
mov
sub
mov
and
mov
movzwl
adc
mov
mov
movl
and
movl
mov
subl
mov
and
sub
mov
sbbl
xorl
andl
xor
or
inc
mov
cmpl
jle
jmp
pushl
call
cmpl
jb
mov
mov
mov
mov
sbb
sub
andl
jmp
xor
xor
inc
mov
cmpl
jae
cmpl
jle
jmp
push
pushl
call
jmp
mov
xor
orl
mov
xor
mov
sub
jmp
loope
loope
xchg
iret
shrl
not
jns
loope
jp
cwtl
cli
or
aas
jl
dec
cld
loope
out
addl
cmp
sahf
lea
arpl
sub
pop
popf
or
xor
push
test
mov
repnz
jo
or
pop
and
cmp
mov
int
or
data16
aaa
stos
push
fcmovnbe
mov
pop
leave
sub
fsubrl
mov
cmp
sbb
into
aaa
xchg
outsb
jb
test
cmp
lahf
int3
ds
xchg
push
bnd
shrb
fnstsw
loope
add
jne
dec
mov
loop
mov
inc
sarb
push
add
repz
adc
cld
sub
adc
bound
adc
scas
push
or
pop
lods
incb
pop
pop
sub
and
shlb
or
out
fadds
dec
bound
jns
fprem
jge
das
dec
cmp
loope
test
or
aaa
outsb
lds
and
adc
mov
mov
inc
fiadds
cmp
sub
shlb
xor
cwtl
xor
sahf
push
faddl
into
jb
pop
inc
add
push
rcrl
fnstsw
adc
xor
int
mov
push
push
jo
out
push
xor
scas
daa
repnz
add
outsb
pop
pop
and
gs
ja
into
out
es
enter
jp
or
pop
mov
pop
pop
outsb
sbb
xchg
pop
cmp
imul
cmc
jp
pop
addl
scas
inc
lods
cmp
call
push
mov
or
jbe
std
cmpsl
out
adc
and
and
cmc
mov
dec
iret
mov
pop
pop
mov
pop
pop
jle
loope
xor
or
sbb
mov
adc
insb
adc
or
xchg
aam
shlb
xchg
ss
movsb
cmp
imul
dec
out
nop
divb
call
push
in
lahf
loop
iret
out
pushf
xchg
adc
fs
cmp
jne
xor
lea
fs
jb
ror
cmpsb
push
sub
inc
sbb
frstor
inc
add
shll
out
mov
lods
test
mov
push
roll
pop
repz
sub
sub
mov
sub
add
popf
cmpl
insl
in
les
cmc
das
js
stos
or
shrl
jbe
les
push
cli
dec
pop
test
pop
sbb
fidivrl
adc
fsubrs
cli
mov
push
sub
popf
mov
mov
popl
xchg
sbb
pop
inc
in
or
arpl
sub
mov
jnp
inc
lods
in
pop
rol
in
mov
cmp
xor
scas
add
pop
adc
ljmp
mov
ret
and
fisttpll
into
lcall
add
mov
mov
sahf
negl
out
xor
pushf
mov
test
stos
ja
inc
pop
push
inc
fmull
add
push
lds
ja
mov
push
mov
outsb
loopne
test
movsl
xor
xor
out
fstpt
push
pop
adc
and
sbb
mov
les
pop
push
mov
pop
adc
pop
mov
and
int3
call
pusha
stos
jae
dec
leave
push
and
dec
mov
movsb
xchg
push
xrelease
je
loopne
call
mov
cmpsl
inc
call
aad
jnp
test
notb
push
sub
pop
dec
cmpsl
stos
sbb
inc
mov
and
mov
and
xchg
arpl
out
addl
sbb
sub
pop
test
jae
out
mov
aas
sti
pop
clc
aas
pusha
xchg
dec
dec
xor
es
add
push
dec
mov
pop
sub
repz
cltd
mov
int
lods
sub
lods
addr16
adc
shll
in
push
or
incl
cmp
daa
repz
add
mov
pop
aas
adc
inc
mov
rcrb
xor
ss
mov
pop
pop
int
xchg
dec
inc
cmp
mov
and
xor
iret
add
mov
cwtl
shl
lret
jne
in
mov
pusha
mov
sbb
leave
cwtl
insl
and
pop
sub
xor
out
test
adc
sbb
cmc
cmp
mov
stos
in
pop
lock
cmp
mov
lods
fwait
sbb
stc
test
cmc
aas
fisttps
sbb
enter
mov
add
mov
and
or
cwtl
mov
jno
adc
fs
pusha
lahf
sub
pop
jp
cli
jbe
cmp
fsts
adc
lret
mov
loop
pop
inc
das
ja
push
cmc
iret
sbb
cmpsl
sbb
rcr
daa
xchg
add
dec
out
testb
mov
dec
lea
push
jl
arpl
sub
mov
and
pusha
xchg
mov
jbe
mov
sub
pop
mov
inc
inc
es
ss
and
bound
jl
lods
sbb
inc
sbb
imul
mov
inc
dec
dec
out
mov
mov
xor
bound
mov
mov
xchg
push
fisubrs
outsl
lret
dec
lahf
add
in
mov
add
xchg
clc
jns
fisubrs
push
and
or
inc
inc
sub
sub
sahf
xor
xlat
into
sbb
mov
dec
pop
lock
lds
lds
pop
inc
push
mov
cmc
dec
lret
ret
lds
gs
cli
xchg
outsl
xor
fwait
or
xchg
add
and
dec
sbb
popf
jge
fstpl
stc
scas
pop
popa
mov
dec
xchg
cmc
push
arpl
xchg
dec
cld
add
mov
stos
adc
mov
pusha
mov
mov
cmpsl
jecxz
inc
call
cmp
lret
add
test
mov
jb
cwtl
cmp
cmc
test
sbb
push
gs
and
pop
addb
push
das
loopne
stc
pop
nop
push
pop
xor
or
and
jle
sbb
aaa
andl
xor
sub
jle
ret
and
repz
lahf
mov
pop
sub
lock
mov
scas
lea
cmc
movsl
test
aaa
icebp
test
pop
dec
xchg
xor
dec
stc
and
mov
mov
dec
rolb
dec
rorb
jg
pop
adcb
aam
jno
fcomp
lret
sbb
cmpsb
sub
mov
and
stos
xchg
ds
rorl
jnp
andb
xor
xchg
movsb
in
xor
pop
mov
jp
sub
adc
pop
or
push
fimuls
jmp
or
jns
in
add
shll
pop
jae
xchg
scas
push
mov
jno
jnp
push
and
jmp
jne
sbb
lds
and
sar
scas
pushf
dec
cmp
xchg
push
aas
xor
fsubrp
ja
mov
das
movsl
aas
movsb
jmp
loope
xor
stc
xchg
xor
dec
into
xor
cmp
cmp
andb
cltd
add
jns
sbb
in
xor
pop
mov
xor
and
mulb
jno
lret
xor
adc
cmp
jmp
rcrb
ja
lock
cmp
out
inc
cli
cmpsb
rorb
mov
mov
lock
sub
pop
stos
push
out
pushf
inc
lcall
and
xorl
pop
pop
xchg
dec
pusha
lcall
orl
movsl
xchg
icebp
dec
mov
push
int
rorb
adc
pusha
adcl
mov
fidivl
stos
mov
xlat
shll
dec
sbbl
leave
in
repz
shll
push
nop
sub
fs
add
daa
cmp
mov
add
loopne
jge
mov
sub
and
stc
mov
int
jmp
sbb
jmp
leave
mov
ret
sbb
lcall
jmp
popl
inc
push
jnp
sbb
fnstcw
or
call
lods
sbb
movsl
adc
aad
lret
loopne
or
mov
sbb
lret
mov
arpl
repnz
jp
push
jne
lods
jl
mov
movsb
bound
inc
and
lods
in
adc
xchg
cmp
adc
popa
test
das
jbe
mov
xor
and
clc
arpl
pushf
push
push
data16
jmp
lcall
nop
insb
push
sbb
push
test
cli
les
and
sbb
cmpl
jb
stc
or
cmpsl
sbb
mov
mov
fiaddl
or
inc
clc
das
call
lock
mov
adc
inc
inc
cmp
sub
push
pushf
cwtl
iret
jecxz
and
jbe
ds
pushf
and
das
dec
into
cs
and
out
jae
popf
sbb
fidivrs
jle
jmp
rclb
popf
jle,pn
mov
mov
sarl
je
adcl
mov
add
or
fbstp
fstpt
push
mov
add
dec
icebp
andl
int3
add
lods
cltd
and
xlat
add
lods
adc
or
xor
daa
imul
addr16
neg
jbe
test
inc
adc
andb
push
ret
dec
inc
dec
ljmp
push
and
and
add
into
push
enter
in
adc
ror
mov
sarl
iret
pop
fisubl
stc
sbb
mov
mov
xchg
fstpt
push
addr16
fcomps
add
mov
inc
add
jno
insb
sub
xor
dec
leave
insb
cld
sub
push
jo
mov
mov
subl
mov
lock
imul
xlat
inc
pop
ja
push
in
call
sub
and
push
test
popf
and
loopne
sbbb
idiv
or
inc
cmp
and
sub
ror
push
inc
ret
sbb
jbe
inc
movl
iret
arpl
ljmp
sub
sub
cmp
push
imul
adc
icebp
hlt
aaa
sub
cltd
jo
in
add
sahf
jmp
loope
push
and
xchg
inc
in
or
jno
and
inc
mov
pop
or
ret
lret
cmpsb
mov
sbb
into
xchg
pop
mov
leave
js
js
jmp
adcb
cmpsl
xor
or
stc
into
sbb
xor
into
sbb
int3
iret
loopne
pop
dec
mov
int
push
repnz
dec
out
inc
pushf
outsb
repnz
divl
sub
mov
loop
add
mov
jge
je
jae
push
popa
jne
mov
paddb
sahf
adc
aad
xchg
loopne
repz
jecxz
iret
pop
fsubrl
call
mov
shrl
out
mov
arpl
xor
in
push
outsl
ljmp
stos
fbstp
adc
sub
push
mov
sbb
out
or
sbb
bound
mov
test
ret
xchg
cmp
xchg
xchg
jp
pop
xchg
popf
cwtl
cmovle
add
scas
sti
mov
icebp
dec
cmp
into
in
scas
inc
fs
repnz
fists
aaa
jp
push
into
add
mov
mov
adc
xchg
fstpl
mov
cmpsl
icebp
mov
cli
push
mov
std
or
sub
sahf
dec
inc
insl
insl
lret
orb
sub
mov
das
sahf
xchg
jle
push
sub
icebp
xor
std
aaa
js
inc
icebp
or
xchg
int
inc
ret
fwait
xor
sub
ficomps
jle
enter
popf
daa
adc
mov
cmp
jecxz
fiaddl
push
mov
jp
xor
mov
jnp
and
lret
add
orb
dec
dec
push
out
sub
lods
cs
pusha
lods
add
push
inc
dec
loope
inc
lret
test
jge
data16
adc
cmp
rclb
enter
scas
mov
sbb
aas
adc
xor
cmp
std
mov
lret
mov
sub
dec
jns
pusha
scas
cli
mov
fisttps
pop
add
cwtl
gs
imul
iret
push
es
stos
in
cwtl
lret
xor
movb
mov
scas
xor
mov
and
sbb
xchg
fwait
xor
jp
xor
aas
add
insb
xlat
mov
push
int
or
inc
sbb
cmc
ljmp
mov
push
insb
orb
mov
adc
mov
jb
jne
in
int
popf
bound
mov
aas
mov
ss
sub
cmpsl
xchg
inc
mov
mov
clc
pop
push
fnsave
dec
inc
jnp
bound
fistl
mov
in
pop
call
cli
fists
ja
xlat
lret
test
lods
in
xchg
scas
sarl
cmp
jo
mov
cmc
and
mov
cmp
cmpsl
test
push
or
fcomp
mov
rcrb
mov
popa
dec
jbe
push
jne
add
dec
cmp
jle
arpl
sbb
fsts
dec
xchg
jmp
push
ret
xor
imul
aas
dec
or
fisubrl
insl
sbb
add
std
dec
scas
pop
mov
adc
pop
scas
out
and
aam
push
lret
inc
out
jo
das
push
inc
lods
pop
push
out
cmp
pop
decl
lea
shrb
sbb
outsb
lock
jne
popf
adc
cmp
xorl
leave
cmpb
adc
shll
mov
pop
pop
mov
stc
dec
or
test
iret
sahf
add
in
fstp
lret
push
push
mov
pop
pop
imul
test
cwtl
int3
add
xchg
xor
sti
adc
je
push
mov
std
pushf
mov
lods
add
xor
hlt
iret
cmc
test
mov
fldt
addr16
hlt
mov
cmp
xchg
ljmp
subb
inc
xchg
mov
jae
cmp
or
cmpsb
dec
sahf
dec
push
jb
into
and
fcoms
xchg
and
test
cmp
dec
mov
dec
clc
cltd
call
cmp
ficoml
mov
shl
inc
inc
push
aaa
add
imul
pop
mov
rcrl
mov
xchg
mov
mov
adc
fwait
rcr
insl
cmp
mov
shl
sbb
fidivl
out
cmp
and
cld
dec
xor
jns
cmp
jno
sub
mull
pop
inc
or
iret
mov
mov
adcb
sub
test
out
mov
scas
push
add
out
mov
xchg
fnsave
out
push
sbb
lock
jb
push
movsl
fistpl
out
rcrb
fildll
stos
fcmovnu
xchg
inc
aam
xchg
or
repnz
xchg
jmp
lea
inc
or
movsl
rorl
clc
add
cmc
es
pushl
mov
sbb
outsb
mov
fsub
add
mov
js
je
and
clc
jle
fistpl
ret
addr16
sahf
mov
jle
or
mov
cmp
fisttpll
pop
mov
add
fcoms
call
sub
je
hlt
iret
or
sub
add
or
mov
bound
das
sbb
in
cltd
popa
inc
jmp
rorl
mov
xchg
xchg
out
ds
or
xor
push
pop
push
xor
out
xchg
xor
pushf
jo
sbb
pop
mov
dec
and
lret
push
lods
jns
and
sub
lds
adc
inc
add
and
sti
cmp
imul
xchg
aaa
dec
pushf
sbb
lahf
cmp
or
or
cmp
pop
cmp
mov
punpckhbw
les
dec
mov
push
adc
jno
pop
cmp
stos
mov
xchg
enter
mov
sbb
std
addb
arpl
dec
push
fsubrl
jmp
mov
daa
loopne
int3
mov
cmp
nop
js
test
cwtl
cli
mov
xchg
push
in
into
out
mov
push
sub
inc
cmp
cli
xchg
adc
add
out
push
push
xorl
jae
call
jmp
push
jg
xchg
cs
jbe
clc
ja
inc
loopne
pop
das
mov
adc
stos
cmp
or
fs
dec
ret
xchg
out
jb
fsubrl
mov
roll
arpl
push
xchg
fcoml
lock
mov
aas
es
ja
jbe
dec
cwtl
fwait
pop
daa
aad
or
xchg
ljmp
cmpsl
aaa
inc
test
xor
push
pop
xchg
inc
movsb
sarb
jle
pop
jle
in
sti
stos
fmulp
jge
stos
stc
outsb
inc
jne
inc
sub
out
hlt
pop
nop
xchg
lock
das
movsl
lods
or
mov
jle
add
std
sub
inc
mov
call
xchg
and
pop
mov
ljmp
dec
push
add
mov
and
xlat
outsl
push
mov
cmp
pop
js
jecxz
lods
dec
les
dec
push
and
in
sbb
and
add
dec
test
aaa
mov
fldl
xchg
fninit
or
stc
xchg
mov
xchg
xchg
adc
push
fdivr
mov
lea
mov
repnz
push
outsl
idivb
mov
xor
jnp
ja
int3
or
cmp
add
ret
and
adcb
addr16
js
fs
insb
movsl
mov
fwait
push
lahf
and
clc
xchg
sbb
push
push
popf
scas
cmp
and
mov
pop
and
push
mov
push
pop
ret
imul
daa
test
jmp
nop
call
sbb
and
dec
mov
and
or
cmpsb
sbb
inc
inc
push
scas
xchg
cltd
cmpb
in
fstpl
pop
push
mov
stc
cli
cmp
ret
sub
add
test
mov
adc
mov
cli
rclb
insb
jle
mov
or
jge
mov
loope
and
std
push
cwtl
aad
jbe
xchg
pop
cmpsl
movsb
sbb
xor
jmp
jg
out
int3
ds
movsl
aaa
test
inc
std
sub
mov
sbb
push
dec
sub
cmp
push
mov
mov
fimuls
gs
data16
sbb
jle
aam
in
jo
sbb
pop
mov
mov
mov
cmp
jno
dec
sbb
mov
testb
icebp
jmp
movsl
lea
ficompl
sbb
sbb
mov
cwtl
jnp
adc
push
cmp
dec
repz
dec
xchg
mov
jecxz
push
push
sub
sbb
loope
scas
jns
mov
mov
push
inc
inc
pop
xor
mov
fs
mov
fdivrs
inc
push
push
sub
sahf
add
and
int
jnp
fs
xchg
mov
sub
jle
bound
aad
dec
addr16
push
nop
xchg
out
jmp
pop
faddl
dec
icebp
repz
lcall
sarl
test
in
jnp
loope
sub
mov
fcoml
roll
jmp
push
ljmp
fwait
fwait
jmp
xor
pop
icebp
cltd
sar
mov
shrb
pop
sub
pop
leave
ljmp
test
cmpsl
cwtl
stc
xor
in
mov
adcb
mov
into
mov
sbb
pop
mov
push
mov
sub
scas
jns
push
cmpsl
fnstsw
sub
jge
fwait
mov
clc
int
xchg
scas
dec
int
xlat
cmp
push
and
cmc
inc
or
add
xor
cmp
pop
push
fcom
mov
icebp
inc
sub
push
dec
push
fsubs
push
cli
xchg
jno
adc
movsb
jecxz
push
jp
dec
push
push
and
mov
sarl
leave
mov
dec
sbb
sarl
dec
test
outsl
pop
fistps
xchg
add
adc
pop
sbb
movsl
or
cmp
cmc
jae
mov
outsb
jmp
cs
cmp
shl
stos
xchg
pop
inc
movsb
cwtl
nop
pop
sbb
dec
das
jecxz
xor
push
imulb
fsubp
call
xchg
mov
shl
pusha
xchg
sbb
push
xor
out
mov
mov
cmc
xchg
and
mov
dec
ret
cmp
dec
imul
jl
inc
mov
sar
out
popa
pop
and
icebp
leave
std
push
daa
outsl
xor
insb
xor
gs
inc
jnp
jmp
or
sub
dec
xor
mov
sbb
mov
fldl
cmpsl
inc
scas
mov
aas
inc
jo
mov
rcrb
xchg
loopne
out
or
xor
sub
mov
xor
js
cmp
add
fistl
xor
mov
cwtl
loop
pop
adc
je
jg
push
int
into
popa
inc
pop
mov
scas
cmpsb
ljmp
push
in
cmpsl
or
push
inc
ret
xor
repz
std
pop
cmpb
push
xor
cmpsb
subb
test
in
sbb
xchg
xchg
xchg
mov
pop
scas
je
push
in
and
icebp
xchg
aam
pop
popa
xchg
add
pop
sti
cli
movsl
add
lahf
and
xor
or
imul
mov
xor
mov
push
adc
pop
or
fistpl
mov
push
rolb
nop
lahf
jp
jae
ds
jb
scas
push
jmp
xor
pop
xor
les
popf
push
mov
flds
add
xchg
add
gs
cld
jmp
fiaddl
push
cmp
cltd
and
nop
pop
in
outsl
cs
test
movsl
in
mov
cmp
dec
fildll
adc
jnp
mov
fldt
insb
std
fdivrl
xchg
xchg
inc
xchg
je
jne
push
aam
pusha
sti
andl
cmp
call
pop
lds
add
out
fstps
jae
add
lret
mov
int
push
out
sub
lea
add
gs
xchg
push
push
mov
add
push
jmp
push
leave
xlat
cs
sub
test
xor
jno
mov
cmp
mov
lret
xchg
jecxz
fcomps
cmp
lock
xchg
andl
xchg
cmp
push
pusha
jno
outsb
pushf
popf
into
clc
ljmp
fwait
es
loopne
scas
js
mov
fisubrs
dec
out
xlat
loop
repnz
mov
sarb
repz
sub
cmpsb
into
jnp
adc
xchg
stc
jge
imulw
repz
dec
lcall
lods
pop
push
dec
xchg
add
sub
daa
xchg
cmc
inc
aaa
or
inc
insb
aas
adc
jmp
pop
mov
mov
add
push
push
cmp
lods
jge
movsb
arpl
jae
data16
aas
mov
cmp
sbb
and
outsl
scas
and
jnp
dec
cmp
leave
add
hlt
pop
jl
push
js
pusha
cmp
mov
adc
aaa
mulb
in
push
or
mov
lea
adc
cmp
ja
std
mov
cmp
jg
mov
lock
xor
push
bound
mov
jle
mov
sbb
js
cld
add
pop
push
outsl
mov
sbb
mov
inc
out
sti
fbld
sbb
push
out
fnstenv
insl
dec
adc
mov
test
xor
lods
jge
movsl
addb
jnp
or
xchg
in
cwtl
jb
jb
push
cmp
or
scas
add
mov
lcall
loop
mov
mov
xchg
lods
dec
mov
mov
andl
and
adc
cmp
iret
cmp
mov
or
mov
xchg
push
scas
lds
xchg
outsl
jae
xchg
adc
bound
adc
jle
mov
movsl
out
push
leave
mov
sub
mov
push
out
pop
push
insb
bound
xchg
scas
les
ret
jmp
rclw
mov
push
fcmovbe
mov
lret
pop
adc
inc
call
push
dec
fmull
rcll
aas
scas
ficoml
push
mov
inc
rcrl
insb
mov
mov
and
pop
and
mov
into
into
push
mov
and
test
or
adc
loope
mov
lods
jo
cmp
add
call
pop
inc
jb
sbb
clc
and
xor
sbb
mov
and
sbb
push
loope
enter
mov
rcrb
xchg
jmp
in
cmp
aam
push
scas
xor
sub
frstor
pop
dec
sbb
mov
or
dec
jb
ror
lcall
xor
jae
int
js
mov
iret
adc
fimuls
and
pop
rclb
jecxz
and
mov
ds
div
or
mull
lds
cmp
testb
arpl
idivl
push
dec
in
in
dec
out
jno
outsl
test
adc
mov
sbb
add
idiv
mov
je
pop
adc
pop
jo
mov
ljmp
or
push
repnz
and
pusha
xchg
in
jp
cmpsb
inc
and
std
mov
ss
lock
xlat
inc
and
adc
js
loop
js
pusha
or
pop
xchg
mov
jg
cwtl
repz
inc
enter
and
add
xchg
es
pop
mov
jae
push
mov
xchg
iret
jbe
mov
xchg
cld
sub
cmpsl
scas
mov
sub
sub
cld
sahf
iret
pop
call
das
jno
inc
fldt
fld1
mov
mov
xchg
and
in
mov
mov
mov
vorps
fistpl
pop
mov
push
inc
lret
lahf
add
mov
lds
inc
leave
and
xor
testl
adc
mov
test
fst
pop
xlat
pop
sub
lret
xor
movsl
data16
cmc
cli
xchg
sub
cltd
enter
mov
dec
jb
cmp
stc
xor
daa
adc
push
test
dec
or
add
aaa
das
daa
pop
xchg
xchg
jnp
pusha
jno
out
ljmp
push
pop
push
clc
mov
dec
dec
pusha
jecxz
push
mov
cli
mov
pop
popa
cli
clc
mov
sbb
fwait
jnp
repnz
les
cld
mov
movsl
ds
mov
lods
js
push
inc
sub
add
xor
adc
mov
cmpsl
sar
jo
test
aas
sbb
imull
sti
imul
scas
in
insb
lods
subps
arpl
negl
jmp
lods
adc
adc
xor
xor
inc
movsl
stc
int
repz
cmp
and
imull
sbb
xor
jl
or
scas
jg
adc
fs
aam
add
or
daa
mov
jo
loopne
imul
and
popa
ret
cmp
xchg
add
sbb
mov
loopne
add
mov
divl
inc
cltd
pop
scas
int
fsubr
xchg
daa
fcomps
test
call
ljmp
mov
cmp
movsb
add
fbld
mov
imull
pop
cmp
push
cmp
xor
inc
jmp
jecxz
adc
or
sub
add
sbb
nop
jno
int3
push
and
arpl
clc
pop
lods
repnz
pop
lods
fwait
pop
pushf
aam
into
movsl
andb
fwait
out
lock
inc
jno
mov
xchg
andl
sub
dec
daa
outsb
lcall
inc
jmp
or
sbb
sarl
push
mov
hlt
cmpsb
lock
ud2
sbb
scas
call
push
cld
jnp
pop
jle
aaa
xchg
and
jmp
shll
or
cli
jno
adc
lods
jae
std
mov
inc
in
xor
xchg
xor
cmpsb
mov
dec
cli
or
jnp
roll
setnp
sbb
out
lds
cmp
cltd
inc
hlt
jg
icebp
out
adc
jne
aaa
cltd
call
jbe
pop
cmp
mov
sbb
cmc
mov
lock
dec
xor
adc
add
xchg
aam
fs
sub
cmp
and
or
fistpll
in
ret
adc
rcr
mov
je
xchg
test
addr16
rcr
shl
adc
push
mov
inc
cld
loop
jns
cmp
add
in
or
mov
and
sub
fwait
push
sbb
jge
ret
imul
adc
jae
adc
icebp
js
xchg
sub
and
mov
push
in
outsl
mov
xchg
daa
jne
cmpsb
negl
lcall
and
jne
outsb
sbb
loopne
daa
lret
jbe
sbb
push
mov
xchg
stc
fwait
test
sub
scas
repz
lret
cmp
push
shlb
in
sbb
call
dec
adcl
mov
jecxz
add
mov
mov
sbbl
and
std
aam
sbb
cmp
push
subb
hlt
pop
outsb
iret
out
xchg
and
fistl
jb
adc
cmp
les
push
mov
movsb
sub
movsb
jns
out
pop
jg
sahf
fmulp
sar
mulb
add
es
andl
ja
xlat
mov
loope
xchg
mov
imulb
push
mov
inc
mov
in
sbb
adc
movsb
popa
in
in
mov
and
xor
mov
pop
adc
mov
sbb
stos
rcll
xor
int
sarb
xlat
call
xchg
js
cmpsl
inc
rcrb
xchg
jge
add
arpl
xchg
cmp
push
nop
xchg
mov
sub
ret
jge
inc
dec
xor
cmp
nop
les
lds
xchg
adc
leave
idivl
xchg
cmp
ljmp
dec
xchg
mov
aam
jp
push
ds
adc
out
cmp
push
dec
lds
in
mov
lods
xor
inc
jp
add
test
jae
dec
push
jmp
inc
mov
shrb
movsl
xlat
test
stos
pushf
adc
dec
xlat
dec
out
fnstcw
lret
test
adcb
aas
push
cmp
les
mov
cld
sub
mov
jne
sbb
jb
push
inc
addl
sbb
pop
xchg
shll
mov
stos
mov
sahf
test
mov
out
xor
lds
dec
nop
pop
mov
out
sub
xchg
lods
out
ficomps
mov
lcall
mov
add
orl
decl
mov
mov
mov
xor
mov
andl
mov
inc
mov
cmpl
jb
jmp
push
push
call
cmpl
jb
sub
mov
xor
orl
sub
mov
mov
andl
jmp
xor
add
inc
mov
cmpl
jae
cmpl
ja
jmp
push
push
pushl
call
cmpl
jne
mov
inc
mov
jmp
sub
mov
mov
mov
mov
xor
mov
add
or
mov
mov
mov
sub
mov
orl
mov
xor
add
push
mov
xor
add
push
mov
xor
add
push
lea
push
pushl
pushl
call
test
je
lea
push
mov
xor
add
push
mov
add
push
mov
mov
pushl
call
mov
mov
lea
mov
incl
mov
test
je
lea
mov
mov
mov
mov
mov
sub
mov
mov
xor
mov
sub
add
mov
mov
mov
mov
pushl
movb
mov
pushl
pushl
pushl
pushl
pushl
pushl
pushl
mov
call
pop
pop
leave
ret
push
mov
sub
add
movl
lea
mov
movl
lea
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jge
jmp
push
pushl
call
jmp
mov
xor
or
and
mov
mov
sbb
mov
mov
addl
xor
sbbl
add
mov
movl
cmpl
je
cmpl
jge
jmp
call
mov
dec
mov
jmp
mov
mov
mov
movl
add
or
push
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jge
jmp
pushl
push
push
push
call
jmp
mov
xor
mov
mov
sub
xor
add
mov
add
movl
cmp
je
movl
mov
movl
jmp
mov
xor
andl
push
andl
jmp
xor
xor
inc
mov
cmpl
jae
cmpl
jg
jmp
call
jmp
add
movzwl
sub
xor
mov
xorl
add
movl
push
mov
adc
mov
xor
xor
cmp
movl
jne
movl
cmp
movl
jne
push
movl
jmp
sbb
mov
xor
adcl
add
xor
decl
add
movl
adc
adcl
xor
xor
movl
cmp
movl
jne
movl
cmp
jne
and
mov
inc
xor
movzbl
and
add
subl
mov
xor
mov
mov
and
mov
orl
xor
xorl
add
addl
imul
mov
xor
add
movl
cmp
mov
movl
je
xor
mov
andl
add
mov
sbb
mov
orl
xor
andl
add
imul
movl
mov
mov
andl
mov
inc
mov
cmpl
jge
jmp
push
pushl
push
push
call
cmpl
jne
xor
or
inc
mov
cmpl
jb
mov
notl
mov
jmp
and
les
imul
mov
jp
pop
jp
cmp
insl
dec
cmpsl
mov
xchg
ja
sbb
and
sub
sahf
fisubrs
mov
popa
out
sbb
in
popf
sti
pop
pop
insl
sbb
and
sbb
test
sti
adc
in
xor
es
scas
inc
mov
aad
out
jne
lock
add
push
scas
pop
out
das
arpl
mov
push
cmp
push
sbb
rcl
insb
pop
jo
pop
add
push
mov
jno
pop
inc
adc
jmp
mov
mov
cli
leave
sahf
popf
cwtl
pop
sbb
cmp
jno
xchg
out
repz
popf
or
data16
push
aaa
fimull
pop
out
mov
popf
mov
dec
imul
inc
xchg
repz
cltd
test
hlt
sub
addr16
dec
pusha
sbb
jecxz
sbb
addr16
into
stos
pop
mov
xchg
imul
push
orb
push
cld
sub
enter
or
adc
xor
ret
jp
es
in
jb
cwtl
filds
cmp
jmp
cld
cli
sbb
pop
test
pop
loopne
inc
nop
lods
xchg
push
xor
pushl
pop
mov
mov
add
mov
test
or
mov
pop
sbb
mov
cmp
adc
jbe
lret
or
xchg
jae
outsb
mov
dec
lcallw
sub
pop
fxch
mov
arpl
ljmp
adc
add
orl
push
jbe
sub
mov
lret
mov
fwait
dec
hlt
leave
jbe
fdivp
jne
les
mov
sub
jbe
xchg
adc
dec
mov
dec
push
cmp
popa
jp
sarb
ja
in
cltd
rcrb
inc
rorl
xor
aad
or
int3
test
xchg
icebp
jb
fdivrs
cli
dec
mov
mov
mov
mov
fld
xorb
test
enter
in
push
adc
push
push
outsb
popa
dec
int
mov
fldt
sub
enter
inc
outsb
mov
bound
sub
pop
push
mov
jns
dec
scas
sub
sar
out
xor
and
mov
addb
xor
xor
test
cmp
mov
lock
mov
cmpsl
dec
cmp
lcall
aas
fsubrp
dec
mov
dec
fcmovb
inc
inc
cld
pop
push
mov
fidivrs
xchg
sub
insb
sub
xor
rorl
fistps
pusha
lret
cmp
inc
int3
mov
push
movsb
xchg
xor
sub
lret
insl
ret
sti
fwait
mov
loopne
leave
mov
inc
fs
add
and
xchg
dec
jno
popa
jbe
lock
jmp
push
mov
and
aaa
xchg
in
cli
lret
or
nop
xchg
out
mov
pop
or
ds
nop
jns
push
stos
jle
popf
stos
icebp
fsub
mov
outsb
scas
mulb
aas
ret
test
xorb
mov
stc
mov
jp
jg
sub
jge
nop
insb
jno
outsl
test
mov
push
ffreep
lahf
in
in
dec
xlat
push
xor
cmc
sahf
cmp
fstpl
inc
aad
jg
jge
imul
in
pop
cmp
test
mov
xchg
jle
dec
shlb
outsb
or
mov
int3
sbb
adc
inc
test
aam
fdivl
jnp
push
sbb
pushl
sbb
loop
imul
scas
leave
out
je
gs
les
adc
push
int3
shlb
insb
je
dec
sti
xchg
imul
xchg
hlt
rol
pop
dec
mov
popa
sub
popf
adc
sub
push
dec
insl
jecxz
xor
out
jns
fs
dec
jp
addr16
sbb
loop
inc
add
add
call
mov
push
cmpsl
mov
out
xor
cwtl
jnp
or
insb
cmp
fimuls
paddb
inc
jg
jge
fnsave
movsb
push
ror
inc
pop
movsl
cmpsb
mov
dec
aam
cmp
popa
mov
jo
std
data16
pushf
fisttpl
nop
imul
in
scas
inc
shl
rorl
js
sti
sub
movsl
pushf
je
and
sbb
sahf
push
pop
adc
pop
push
fsubs
add
sti
cmp
lea
jg
add
push
fistps
xlat
mov
imul
and
push
xchg
pop
lock
sbb
fldl
cmpsl
test
jns
clc
push
jmp
addr16
pop
test
mov
stc
iret
cs
scas
xorl
cld
sub
sbb
iret
loop
pop
jb
xor
mov
repz
es
push
mov
push
jle
repz
xlat
xchg
popf
push
push
mov
push
cmp
xor
add
outsl
dec
sub
sub
inc
fmuls
std
clc
add
lods
cld
add
xchg
jb
mov
push
cwtl
sub
add
push
mov
dec
mov
imul
push
sub
push
sbb
xchg
rcl
in
sahf
and
pop
mov
call
xlat
fwait
mov
popf
pop
mov
xchg
push
cmc
cmp
jbe
sbb
dec
rcll
leave
sub
dec
ljmp
sbb
out
or
xor
push
sahf
scas
jmp
pushf
imul
sbb
mov
mov
push
xchg
jle
and
cmp
sbb
test
sub
loope
sub
inc
js
mov
sbb
pop
mov
movsl
sub
jnp
test
fcom
jmp
leave
cvtps2pi
pop
stos
scas
addr16
inc
mull
jo
xor
movsl
pop
aam
push
cmpsl
or
pop
adc
int3
cmpsl
rcrb
jae
bound
pop
mov
scas
cmp
test
xchg
imul
dec
push
sarl
adc
nopl
pop
cmp
js
test
lahf
outsl
xchg
loope
mov
popf
cmc
pop
scas
jecxz
imul
lret
cwtl
pop
or
loopne
mov
add
adc
push
arpl
lret
and
loope
jns
leave
scas
and
loopne
mov
ficoms
jno
inc
andb
inc
imul
sbb
test
lea
insb
orb
scas
fs
daa
pop
cmp
pop
in
xor
notl
cmp
stos
xor
sti
inc
xchg
idivl
leave
dec
dec
dec
xchg
adc
shlb
add
cld
shl
or
pusha
js
adc
out
push
xorl
pop
into
dec
xor
ja
xor
iret
pop
mov
out
outsl
inc
xchg
sbb
mov
xor
xor
mov
out
gs
cmovae
add
fimull
mov
nop
fisubs
ret
sahf
pop
jbe
fldt
int
xchg
jbe
stos
pop
mov
or
dec
out
inc
or
jmp
gs
loop
in
jne
and
push
rolb
fs
mov
out
xor
icebp
jae
adc
push
aad
out
ljmp
pop
lret
and
inc
je
mov
mov
sarl
pop
xor
pop
sbb
bnd
in
xor
mov
cmp
imul
jg
sbb
add
test
js
inc
sub
mov
lods
and
pop
fnstcw
lea
push
popf
mov
mov
sbb
push
dec
les
ljmp
stc
pop
pop
fimuls
cmc
into
add
into
xchg
adc
push
or
xchg
add
sub
sbb
stos
cltd
dec
mov
push
push
cmc
iret
pop
jb
pop
dec
pop
add
mov
cli
push
loop
iret
daa
sub
xor
xlat
shlb
jecxz
stc
sarl
or
out
cmp
test
or
cmp
xchg
mov
stc
mov
and
cmp
mov
inc
mov
fwait
mov
sbb
mov
repz
sahf
aad
jmp
fwait
sbb
adc
mov
mov
pusha
xor
in
mov
loop
cld
insb
jns
les
lock
jne
pusha
push
imul
lcall
pop
xchg
jg
sbb
cs
pop
add
and
aam
jns
pop
cmp
xchg
arpl
cs
loope
jmp
jge
push
jbe
xor
sbb
sbb
std
and
sub
rorl
mov
stc
lret
cmp
push
test
addr16
orb
mov
repnz
ss
popa
aad
cmp
shlb
inc
scas
pop
jmp
test
clc
insb
shll
rolb
mov
lock
shll
mov
mov
pushf
in
sbb
insb
push
cltd
jbe
dec
cmpsl
fdivs
mov
mov
adc
scas
jbe
mov
test
jl
test
mov
call
mov
jle
add
cmpsb
or
pmuludq
or
in
ret
add
fisubs
scas
mov
dec
cmp
pop
sti
insb
or
popa
jg
dec
mov
mov
lods
cmp
fnsave
das
shll
and
jle
ret
addr16
or
test
filds
inc
sbb
push
jle
mov
lock
std
add
fcmovbe
mov
xchg
dec
jne
ljmp
call
clc
adc
ljmp
inc
sub
push
mov
push
xchg
mov
inc
xchg
in
fcoml
ja
push
sbb
out
adc
icebp
ds
out
movsb
xor
adcb
pop
sarb
in
jle
es
sub
mov
sbb
mov
ret
mov
xlat
popa
les
xor
testl
add
mov
xchg
scas
mov
mov
xchg
fcmovnb
mov
jg
aaa
push
inc
es
xchg
addl
adc
jno
lahf
jmp
addr16
not
scas
inc
mov
and
je
xor
pop
fidivrs
icebp
and
or
in
cmp
jnp
orl
test
pop
add
out
movb
loop
sbb
out
or
test
call
push
dec
lea
adc
inc
daa
dec
pusha
dec
shlb
mov
inc
fdivs
xchg
mov
aaa
cli
sbb
std
sbb
mov
or
inc
fwait
shlb
out
test
std
inc
lahf
mov
and
xchg
mov
mov
dec
pop
adc
movsl
pop
scas
mov
jmp
aaa
adc
sbb
pop
xchg
mov
xlat
in
push
and
or
out
lods
call
adc
dec
addr16
ret
or
stc
fs
jbe
cmpsl
clc
mov
jg
lds
xorl
insl
mov
or
fcomps
jg
or
sti
sub
pop
xchg
mov
push
mov
sti
adc
add
pop
addb
and
leave
outsb
push
stc
aam
add
out
mov
into
xchg
add
test
mov
dec
lahf
cmc
and
aaa
js
cmpl
mov
jg
mov
lcall
lods
mov
mov
aas
in
cmpsl
pop
addr16
push
mov
dec
push
pop
push
sahf
mov
fstp
inc
sub
addb
mov
popa
and
insb
xchg
ljmp
stos
add
loopne
and
jp
dec
stos
or
sbb
jle
stc
xchg
sar
lahf
neg
fimull
ljmp
lcall
mov
imull
mov
jns
xlat
outsl
js
js
pop
js
dec
jb
sub
scas
gs
mov
pusha
iret
mov
das
mov
insl
in
and
sarl
jns
ret
iret
mov
inc
shrl
fmull
fwait
jl
insl
push
cmpsl
lds
insb
pop
addr16
push
movsl
insl
or
ret
cltd
lret
sahf
xchg
push
movsl
imul
cmp
mov
jecxz
mov
out
sub
ss
shl
pop
xchg
mov
mov
xchg
dec
fsubr
or
lock
insl
clc
rol
or
pushf
add
sub
ret
mov
das
mov
add
clc
cmp
push
mov
stos
dec
mov
mov
ret
cmpsb
or
scas
outsl
jns
arpl
jmp
ret
hlt
mov
sub
in
xchg
cli
xchg
mov
sbb
in
sarb
fadd
loopne
mov
cmp
sarb
pop
adc
xor
in
jp
sub
das
js
inc
and
mov
xchg
lahf
movsl
jbe
fcoml
out
mov
imul
pusha
hlt
jmp
dec
je
sub
xchg
xchg
xchg
scas
and
pop
int
rcrb
call
cmp
mov
xor
xlat
mov
or
outsl
cmp
adc
outsl
cltd
sub
dec
aam
or
in
inc
popf
icebp
js
cmp
clc
out
inc
push
mov
cmpsl
loop
and
mov
das
mov
int
fcomip
mov
pop
pop
lahf
mov
cmp
and
cmp
jmp
cli
clc
repnz
xlat
xchg
mov
cmpsl
es
mov
int3
aas
imul
shrl
lcall
out
mov
pop
daa
cmp
cwtl
jle
ss
scas
fwait
or
sub
mov
and
add
dec
fiadds
fists
aaa
dec
adc
adc
test
add
pop
mov
ss
sub
andb
pop
inc
mov
xor
xchg
push
jae
mov
mov
cwtl
call
arpl
cwtl
sub
insl
or
in
sahf
lds
dec
insl
mov
popa
and
adc
in
cmp
jae
jb
adc
and
jp
icebp
clc
ja
movsl
aas
or
ja
test
inc
lahf
mov
movsl
dec
aaa
filds
mov
xor
negl
shlb
jmp
test
sbb
xchg
out
or
lret
std
mov
or
cmp
pop
dec
shll
fldcw
jb
mov
cmpsb
ficompl
xor
pop
test
out
mov
fadds
add
test
push
sub
fisubrl
fnsave
cmp
std
mov
xchg
fstpt
outsb
fs
fldt
push
push
mov
push
stos
sbb
push
inc
cmp
sbb
mov
movsl
insb
mov
mov
push
test
xlat
je
sub
dec
xor
add
mov
dec
mov
sti
push
sbb
mov
add
mov
fiaddl
bound
outsl
push
mov
stos
xor
lret
loope
pop
sbb
pop
data16
mov
mov
mov
mov
jne
xlat
or
fwait
cmc
sahf
std
rol
imul
add
jle
adc
mov
xchg
ja
and
adcb
in
imul
xchg
repnz
test
dec
and
push
or
fimuls
jle
fwait
or
sub
mov
or
dec
dec
gs
test
clc
arpl
sub
mov
jnp
jno
push
ljmp
adc
jl
cmp
daa
xor
sbb
ja
mov
fstl
sub
aam
lock
repnz
fucomi
cmp
outsl
ja
ficoml
lea
int
ror
fsubs
fwait
in
repnz
loop
into
mov
test
sub
test
addr16
pop
inc
clc
out
imul
icebp
pop
cld
pop
cmpsb
jmp
sub
cmp
cmp
adc
xchg
adc
fucomi
cmpsb
imul
adc
sub
xchg
xor
dec
adc
in
jl
xor
jmp
fstpt
cmp
pop
dec
pusha
out
incb
jmp
inc
fs
cmp
je
test
test
in
mov
test
or
push
push
gs
push
rcr
push
or
xlat
inc
movsb
mov
in
or
jmp
sti
pushf
cmp
mov
jnp
aam
mov
clc
decl
sarb
mov
popa
movsb
xchg
insl
push
or
movsl
push
cmc
push
mov
mov
inc
out
mov
loope,pn
jnp
in
or
inc
push
enter
imul
lret
and
stos
adc
cmc
nop
ds
mov
dec
lcall
push
cmp
xchg
fnstsw
imul
jne
mov
das
adc
cmp
pop
lahf
out
hlt
xchg
pop
pop
nop
jge
popf
aaa
addr16
or
jne
or
mov
add
jp
add
dec
or
adc
mov
mov
fs
testb
es
mov
test
out
pop
fisubl
dec
cltd
dec
mov
add
mov
rcll
xchg
mov
cmp
nop
dec
push
push
add
out
mov
aas
ljmp
jb
add
pop
insb
cld
fstps
pop
push
cmp
adc
ss
jnp
test
sub
mov
aad
enter
dec
mov
arpl
jmp
xchg
scas
adc
fistpl
mov
xchg
and
push
movsb
mov
jno
ffree
mov
xor
ds
imul
dec
push
push
jp
dec
ror
jbe
mov
out
or
add
xor
out
mov
in
mov
mov
test
shlb
jg
insl
mov
insl
test
ds
xor
ss
lret
mov
or
xchg
jbe
lods
aam
mov
hlt
pop
mov
cld
in
add
lahf
jmp
sub
sub
mov
test
mov
add
xorb
scas
mov
ror
jno,pn
sbbl
cmp
push
stc
pop
stc
push
or
aas
cmpsb
out
cltd
xchg
je
jo
add
fs
mov
out
mov
ret
xchg
jne
and
in
and
sbb
add
inc
mov
and
js
shlb
repz
test
lds
adc
inc
cwtl
mov
dec
aad
jnp
pop
sarl
in
ljmp
mov
push
rclb
mov
dec
sbb
lahf
inc
adc
in
lds
xchg
aam
cld
out
xor
nop
sub
mov
into
les
add
addb
cmp
and
or
fidivrs
pop
xchg
addr16
add
and
imul
hlt
push
xorl
pop
sbb
xchg
sub
cmc
nop
mov
vprotw
mov
and
add
add
adc
ja
mov
rcr
mov
jg
pusha
data16
test
adc
pop
mov
enter
ss
sbb
es
je
pop
xchg
sahf
mov
mov
ficoms
imul
jmp
xchg
cmp
sti
sbb
push
mov
idivb
pop
sbb
mov
mov
in
ret
dec
mov
outsb
dec
mov
fisubs
pop
jb
jns
and
adc
pop
cmp
lahf
cmpsl
lret
out
pop
repnz
jmp
dec
xor
inc
es
add
mov
xor
sub
sbb
push
je
xchg
cmp
out
sub
fbstp
ret
pop
stos
xchg
outsl
inc
add
scas
cmp
pop
ja
jmp
inc
lret
add
or
in
lods
adc
xor
mov
jne
sahf
dec
fstpl
shll
aaa
iret
hlt
sub
adc
mov
inc
hlt
sahf
jnp
sub
jns
lret
inc
out
push
cmp
lahf
or
xor
pop
inc
inc
push
cwtl
cld
icebp
and
jnp
lret
repz
pushf
lock
into
arpl
xchg
push
pop
jns
aad
mov
dec
testb
in
mov
and
sub
mov
push
cwtl
jne
pop
xchg
cmp
xchg
jmp
setge
lahf
lods
daa
int
jae
daa
or
jb
mov
and
pop
cmp
movsb
sub
sub
sbb
test
xchg
jno
adc
outsb
mov
ficoms
pop
push
jmp
mov
clc
imul
pop
sahf
out
add
ficomps
aas
push
out
xchg
lcall
fldt
shrb
jge
sub
ret
push
pop
movsb
add
js
and
sbb
stos
mov
in
std
fiadds
mov
ja
jne
pushf
push
adc
jne
add
aad
pop
dec
aas
insl
add
sub
xchg
add
in
pop
lock
outsl
mov
lds
imul
fidivrl
out
int3
icebp
loope
jb
xor
jae
cld
loopne
adc
adcb
dec
fidivrl
ficoml
cmp
int3
in
rcr
xchg
push
jns
enter
dec
ljmp
pop
mov
fsubs
jns
sbb
icebp
mov
jns
push
cli
into
filds
pop
lret
divb
fmuls
repz
dec
sbb
aas
add
int
aam
adc
fs
ja
cmp
lcall
sbb
fidivrs
das
inc
push
sbb
jb
or
fdivp
dec
imul
push
push
stos
idivb
dec
movl
push
lret
cmc
imul
mov
and
xorl
std
add
pop
mov
inc
adc
icebp
movsb
xor
stos
cmc
aam
inc
mov
pop
decb
cli
cli
lods
nop
adc
mov
or
xlat
adcl
fnstcw
xchg
sbb
xor
push
fcmove
mov
dec
dec
dec
cmc
into
sub
pshufw
mov
pop
loope
adc
scas
shlb
inc
bound
inc
mov
imul
xor
outsb
daa
sbb
xor
mov
sahf
loop
add
push
mov
mov
test
adc
pushaw
jl
pop
aam
rorb
repnz
sub
flds
cmp
cmpsb
push
ja
dec
pushf
rclb
push
sbb
test
pop
push
sti
lret
cmp
dec
cmpsb
mov
clc
pop
push
imul
popf
sub
dec
pop
icebp
mov
push
or
daa
sub
pop
mov
bndstx
icebp
stos
xor
xchg
push
rolb
aas
int3
push
adc
ja
cs
aam
sbb
mov
cmp
dec
cs
or
or
xchg
jnp
jle
add
xchg
mov
mov
jae
mov
rcpps
mov
xchg
pusha
sbb
lret
lods
in
cld
das
lods
fmuls
add
pop
add
popa
fdivs
push
cmp
les
xchg
mov
pop
jle
jo
dec
xchg
mov
mov
stos
mov
xchg
in
pop
ds
lahf
mov
push
add
adc
pop
lods
mov
push
faddl
ss
add
cmp
xor
adc
hlt
jbe
mov
popa
test
mov
pop
mov
sbb
fisttps
jmp
mov
je
jmp
adc
jecxz
sbb
int3
inc
xchg
sub
popa
cld
out
in
test
rcrl
stos
inc
aaa
jmp
es
lahf
or
aas
call
mov
push
ljmp
or
insb
pushf
xlat
in
js
jg
add
mov
xor
int
or
mov
inc
push
stos
or
lahf
test
mov
rolb
xchg
xor
mov
cmp
fwait
xor
pusha
outsl
mov
xchg
pop
dec
scas
mov
add
lcall
pushf
adc
into
mov
movsb
adc
rcrl
sbb
int
lods
and
xor
cmc
xor
sbb
ds
inc
jle
mov
cmc
mov
xchg
dec
pusha
in
inc
mov
pop
into
inc
imull
lods
sbb
jns
xor
or
push
out
rcl
inc
lods
xchg
lock
xchg
push
clc
out
cli
test
add
test
cli
jl
mov
and
enter
nop
fcomps
add
jnp
and
sti
ret
scas
mov
aaa
jne
cmpl
add
pop
cmpsl
mov
sbb
pushf
in
mov
xchg
in
jl
and
sub
push
sub
daa
stos
mov
shl
pmullw
or
cmp
ss
cmp
cmc
aad
lock
clc
inc
mov
add
hlt
jno
rclb
xor
dec
add
pop
sti
outsl
mov
xor
sub
xor
push
and
xchg
lods
dec
lret
test
scas
insl
mov
xchg
addb
loope
sbb
loopne
or
fwait
adcb
imul
out
je
out
mov
jns
dec
out
insl
mov
xor
push
or
into
addr16
int
push
xchg
movsbl
outsb
pop
inc
lcall
fdivrl
adc
mov
lahf
push
aam
push
je
hlt
es
dec
cmpsl
outsb
and
jnp
mov
add
aad
cmp
inc
in
push
imul
add
test
push
insb
sub
mov
insb
xchg
pop
dec
jae
js
sub
mov
pop
dec
stos
or
inc
and
adc
mov
inc
xchg
xor
mov
stc
adc
push
sbb
sti
xlat
xor
cwtl
jp
mov
sub
push
dec
cmp
adc
push
icebp
cmp
dec
in
aad
mov
mov
lcall
inc
fsubl
jno
or
xor
cli
lock
dec
int
mov
lahf
dec
push
adc
hlt
pop
pop
jno
mov
rorl
icebp
cs
lret
or
cmpsb
jbe
push
mov
inc
rcrb
push
add
jmp
ja
dec
std
jbe
sub
sub
xchg
inc
sub
cmpsl
xchg
movsb
cmp
cmp
lcall
lahf
andb
aam
sahf
lret
ds
arpl
scas
push
idivb
dec
mov
sbb
jecxz
jb
mov
js
adc
mov
cli
and
push
push
fists
dec
add
mov
test
fdiv
shll
iret
sbb
cltd
dec
dec
xor
fcomps
mov
dec
popf
cwtl
and
or
xchg
ljmp
adc
enter
insl
scas
cmc
push
leave
js
rcrb
or
pop
pop
pop
adc
jnp
loopne
data16
push
xor
dec
fmull
stos
push
pushf
push
outsb
pop
dec
inc
sbbl
movsb
popf
aas
daa
aam
or
xor
lock
sub
je
mov
and
stos
adc
mov
jo
roll
arpl
popf
lret
test
cmpsl
and
xor
adcb
loopne
or
inc
mov
and
fisubrl
xchg
loop
jl
cmpsb
shrl
rol
dec
xchg
sti
scas
rcrl
cmp
es
jge
fidivrl
dec
nop
cli
mov
xor
mov
pop
xchg
cmp
fld
xchg
arpl
adc
jle
icebp
int
xor
cmpsb
xchg
sbb
neg
jp
cs
jbe
pushf
push
mov
jmp
xchg
cmp
xchg
and
enter
push
or
dec
cmp
mov
aad
js
ret
lcall
out
cld
mov
cmp
cmpsb
push
xchg
sub
xchg
dec
rorb
adc
push
sbb
outsl
loop
jecxz
or
mov
mov
cmc
push
popl
out
sub
test
adc
mov
add
push
fmull
dec
jge
sub
dec
adc
daa
jbe
insb
adc
xchg
jnp
push
test
sti
adc
pop
add
jecxz
pop
jle
push
and
inc
lahf
mov
xlat
dec
mov
lods
enter
push
and
mov
orl
cmp
shll
mov
in
jbe
dec
and
adc
pop
push
int3
std
mov
adc
sbb
popa
popl
int
mov
mov
sarb
fxch
jmp
aaa
sbb
outsb
cmp
add
and
mov
add
xor
mov
test
out
xchg
mov
cltd
xor
andl
daa
cld
pop
mov
and
mov
fs
mov
mov
mov
andl
push
mov
into
push
mov
xchg
std
xor
lret
arpl
lods
repnz
test
gs
jl
and
xor
push
pop
and
jns
xor
aad
sub
ror
outsb
cmp
loopne
lods
or
fs
cmp
jecxz
mov
mov
loope
inc
xchg
jb
xchg
jp
int
jno
or
vucomisd
push
cwtl
and
int
mov
sbb
js
sub
data16
addr16
fidivrs
adc
call
stos
push
lock
sbb
jb
pop
mov
adc
test
jns
sub
loop
dec
push
cmp
push
dec
push
xor
gs
insl
sub
push
fidivl
loopne
sahf
mov
stc
xor
adc
test
test
lea
xchg
in
push
sbb
sbb
shr
sub
sbb
add
rorl
xchg
loope
and
loopne
mov
leave
push
jbe
sbb
and
lcall
popf
out
loop
js
jge,pn
loop
icebp
dec
mov
mov
xor
dec
aas
cmp
mov
cwtl
sbb
sarl
pop
push
jns
mov
mov
push
in
clc
insl
xchg
out
cmpsl
out
loopne
mov
aas
sbb
daa
imul
push
add
cli
rcl
xor
pop
popa
mov
dec
std
popf
cltd
dec
outsl
fisttpl
mov
jo
xor
lahf
dec
call
nop
cs
mov
adc
lret
std
mov
mov
lods
pushl
fcompl
stc
out
mov
inc
ror
and
jae
lret
jno
push
loop
xor
call
sub
int3
jo
mov
es
insb
xchg
lret
adc
mov
cwtl
push
lret
xchg
dec
inc
sbb
sub
pop
adc
sbb
bound
or
jbe
in
aad
les
inc
add
jge
cltd
repz
int3
repz
adc
add
aaa
mov
ljmp
xor
leave
xchg
inc
inc
orb
unpckhps
push
xchg
enter
mov
mov
sbbl
sub
xchg
cmpsl
mul
push
pop
orl
jp
out
sbb
sbb
nop
mov
mov
test
xchg
xor
std
popf
push
xchg
add
mov
test
pop
lods
in
mov
mov
aaa
push
xor
mov
sub
mov
jmp
mov
xor
movl
cmpl
je
cmpl
jbe
jmp
call
mov
dec
mov
jmp
mov
mov
mov
xor
mov
sub
mov
add
mov
mov
add
mov
mov
mov
xor
xor
lea
mov
xor
add
imul
mov
xor
sub
mov
add
cmp
mov
jg
mov
mov
xor
mov
sub
mov
jmp
mov
xor
add
add
mov
mov
mov
xor
add
not
and
mov
movsbl
cltd
add
adc
xor
xor
cmp
jne
cmp
jne
mov
movsbl
cltd
add
adc
xor
xor
cmp
jne
cmp
je
jmp
sbb
pop
rcll
jae
mov
insl
lods
call
lds
jp
out
fadd
pop
in
lahf
sbb
iret
fldenv
cmp
out
fsubrs
jbe
sub
xchg
adc
push
sbb
cmc
test
pop
fnstenv
xor
xor
std
mov
jno
sub
push
icebp
pop
mov
je
and
push
push
lcall
mov
test
insb
sub
adc
push
ret
lods
mov
jle
mov
push
or
sub
xchg
sub
js
clc
js
jle
bound
notb
sahf
test
and
cmp
sti
cs
bound
mov
je
out
xchg
rol
xchg
push
rolb
push
sbb
jno
sub
or
mov
or
cmp
divps
outsl
push
xorl
ret
in
iret
mov
daa
mov
leave
addr16
jnp
inc
inc
sbb
stc
jg
xchg
iret
dec
sub
nop
mov
mov
pop
scas
ret
xor
dec
adcb
push
lock
sbb
test
pop
pop
push
inc
lret
cmp
movsb
pop
jae
movsl
ja
xchg
xchg
mov
push
inc
out
jne
popa
int
pop
sbb
out
lods
mov
fistl
mov
in
fstpl
add
int3
out
and
jb
lret
cmp
test
out
ja
sbb
or
enter
push
ret
insl
shrl
cltd
and
testl
sbb
cmc
mov
pop
cmp
sbb
in
icebp
pop
mov
cmp
xchg
in
cmp
aam
jmp
out
jb
test
pop
xor
ss
jg
cmp
mov
mov
mov
dec
and
ret
push
imul
cmpsb
rol
lock
sbb
sub
cmp
dec
je
mov
dec
mov
mov
aaa
mov
rorl
jp
setae
adc
push
cli
fidivl
mov
sbb
cs
aad
cmp
scas
jl
push
fildl
sbb
shrb
imul
xor
int
clc
mov
sbb
xorb
mov
inc
mov
stos
jb
mov
out
shlb
ja
mov
add
scas
cmp
in
jmp
pop
sbb
lods
push
cmp
lret
in
push
pop
cmpsb
lea
xor
xor
or
mov
push
sbb
mov
fcomp
rcll
lret
sub
in
loope
pop
lods
stos
jb
push
in
add
xchg
lahf
je
sub
xchg
cmp
rolb
fsubl
mov
out
pusha
xlat
xor
into
and
shrb
pop
pop
imul
sarb
outsl
aas
ljmp
adc
cmp
push
mov
leave
mov
mov
pop
or
xchg
xchg
scas
pop
cmp
mov
xor
mov
sub
sub
add
push
xor
insb
push
mov
fdiv
mov
test
cmpsb
push
rorl
repz
cli
ficoms
cmp
mov
inc
mov
mov
clc
dec
mov
loopne
pop
adc
test
test
sti
mov
neg
ret
mov
gs
jns
sub
jno
stos
dec
mov
lcall
mov
inc
enter
sub
mov
divb
rclb
cmp
push
push
inc
mov
add
stos
insl
inc
mov
ret
into
scas
addr16
cltd
stos
es
cltd
in
ljmp
arpl
or
pushf
ficomps
mov
mov
mov
jecxz
pop
or
lock
bsf
xor
stc
push
pop
xchg
pop
loopne
mov
leave
push
push
xchg
out
pop
dec
pop
sub
mov
call
sbb
inc
jle
mov
xchg
rcl
repnz
xchg
dec
insb
pop
jge
test
sbb
popa
push
fldl
lods
lcall
loop
hlt
jae
test
mov
jno
adc
lcall
sub
add
push
cmpsb
ljmp
xor
repnz
mov
lods
lock
add
sub
mov
adc
int
xlat
cmp
in
cmc
and
xlat
rcrb
popa
shrb
in
cmp
jb
lods
mov
int
imul
mov
dec
pop
cmp
into
jns
push
mov
in
ljmp
sbb
sub
sti
jbe
jl,pn
data16
out
sbbl
sbb
out
dec
mov
sti
and
fmulp
push
mov
divl
jle
push
jnp
fbstp
rcl
sti
out
insl
je
sub
jmp
vpunpcklwd
pop
push
cmpsl
rclb
lcall
fistl
push
int3
and
mov
fnsave
lret
add
mov
adc
mov
orl
pop
xor
sub
dec
jmp
ficomps
xchg
lahf
test
add
outsl
fwait
pushl
add
fsubrs
sub
mov
lcall
ret
pusha
jae
sbbb
jnp
fnstenv
test
clc
loop
sub
lcall
mov
xchg
or
adc
xor
adc
add
dec
lret
push
movb
sub
cmp
pop
add
std
sub
push
mov
ds
xchg
aam
mov
adcb
mov
pop
xor
in
push
sub
inc
ss
push
stos
xlat
out
cmp
loope
pop
lods
mov
push
sub
add
outsl
mov
xor
sahf
xchg
fnstsw
pop
pop
movsb
mov
test
lea
and
push
adc
push
dec
jecxz
stc
roll
stc
adc
pop
mov
int
mov
jne
jl
dec
or
pop
loop
aaa
gs
inc
adc
cmp
mov
sbb
std
cs
sub
mov
adc
sti
fwait
adc
xchg
stc
xchg
rcll
es
mov
add
fisubl
aam
jp
adc
mov
jecxz
popf
sub
test
pop
daa
hlt
dec
jmp
js
push
cmpb
shrb
lcall
fldenv
xor
push
jno
shr
into
mov
ror
pop
jl
icebp
inc
dec
pushf
push
or
pop
push
fs
bound
sbb
mov
pop
fdivs
hlt
inc
ret
addr16
sub
aaa
imul
sbb
adc
sub
adc
xchg
adc
or
sbb
pop
iret
aaa
in
cmp
shrl
inc
icebp
jmp
or
add
rcrb
mov
bound
cltd
test
mov
mov
sub
ja
dec
test
je
imull
ja
cmp
loopne
call
xor
mov
jbe
cmp
add
lods
mov
push
mov
aas
inc
dec
push
into
and
add
cmp
ss
and
mov
mov
xlat
mov
popa
adc
sub
cmp
dec
cmpl
addr16
xchg
xor
and
js
data16
dec
out
sarb
inc
nop
mov
rorl
rol
mov
push
inc
cmp
pop
jl
fisubl
or
aad
aad
addb
ljmp
psrad
jae
mov
mov
pop
in
lret
lds
test
jae
fwait
in
daa
bound
cmp
sub
jne
sub
jle
js
inc
xchg
cwtl
jge
and
mov
and
sub
and
addr16
cmpsl
sub
push
negl
push
das
pop
add
fiaddl
xchg
mov
addl
xchg
cmpsb
lahf
sbb
lods
cmp
scas
test
scas
dec
mov
ret
sbb
ss
clc
mov
cmp
gs
mov
cmpsb
push
icebp
outsl
dec
xor
outsl
aas
inc
je
fwait
push
mov
scas
dec
inc
out
imul
pop
xchg
stc
movsb
sbb
xchg
das
mov
fs
adc
mov
divl
mov
test
xchg
cmpsl
insl
lods
push
repnz
push
jecxz
lea
pop
adc
stc
dec
sub
mov
lcall
movsl
ljmp
dec
addr16
fcompl
int
mov
push
add
or
inc
jmp
dec
sub
pop
adc
dec
mov
stos
pop
loop
out
iret
pop
xchg
sbb
rcrb
loope
call
out
add
mov
jb
xchg
push
add
sub
mov
cmp
loopne
lcall
dec
xor
sbb
repnz
idivl
insb
adc
fsub
imulb
pusha
in
pop
out
mov
pop
mov
sti
jl
mov
in
pushf
pop
mov
add
arpl
inc
sarb
dec
cwtl
scas
sahf
push
mov
adc
divl
push
lret
aam
push
es
addr16
push
stc
add
xor
add
dec
loop
mov
adc
cs
xor
pushl
jle
fstpl
xchg
divl
jp
sub
cmpsl
push
fst
sub
xchg
push
jg
fsubr
ror
pop
push
out
push
jg
mov
movsl
cli
push
les
or
cmp
jmp
xlat
jne
mov
and
mov
test
roll
bound
adc
or
and
in
es
lds
jo
push
loop
pushf
xchg
mov
pop
jae
jno
addr16
call
pop
jp
dec
mov
aaa
je
jmp
je
fwait
aad
push
andl
sbbb
pop
out
jecxz
inc
fcomps
in
cmp
push
int3
xlat
ja,pn
adc
inc
sub
inc
mov
in
sbb
and
ret
push
int
xor
aad
negl
and
xor
mov
push
xchg
adc
xor
ljmp
js
adc
and
xchg
outsl
mov
test
jae
jb
sub
std
adc
sahf
cmp
mov
movsb
jmp
mov
mov
outsl
xchg
sub
push
aas
imul
arpl
inc
je
jbe
divb
pop
lret
and
cmp
add
in
pop
mov
xchg
popf
pop
rorl
adc
add
jg
addr16
xchg
pop
lds
imul
rcrl
mov
stos
inc
aad
movsl
faddl
fwait
pop
cmpsl
dec
lahf
dec
mov
lcall
sub
pop
lods
add
test
out
hlt
iret
orl
outsl
js
pop
fs
ds
sarl
les
clc
xchg
adc
outsl
mov
fwait
cmp
sbb
hlt
jo
je
outsb
jmp
mov
cmp
lds
add
pop
addr16
scas
mov
ret
push
cmpsb
jge
push
sub
insb
pop
sti
pop
repz
and
dec
cmp
cmp
enter
sub
cmp
lods
sarl
jge
mov
push
lcall
ljmp
std
push
aad
dec
or
mov
adc
sti
orb
scas
nop
push
subl
movl
add
inc
xor
les
mov
cltd
xorb
and
lcall
sbb
pop
iret
mov
es
or
jge
mov
inc
inc
push
pop
or
dec
popa
in
rorl
mov
iret
cwtl
mov
lea
push
lds
in
cli
inc
shrb
adc
outsb
jae
movsb
xor
sub
dec
insb
cli
inc
aas
xchg
dec
xchg
push
push
loopne
int
jnp
adc
mov
das
test
sub
ret
stc
stos
mov
or
push
into
xchg
scas
lret
lret
pop
fimull
insb
popa
jle
adc
test
les
aad
rorb
mov
in
mov
rcl
icebp
or
insl
push
pushf
mov
add
ds
mov
loopne
pop
xor
pusha
xchg
leave
popf
int
mov
aad
dec
loopne
sub
inc
sbb
mov
and
sahf
into
ret
mov
sarb
cmp
and
xchg
int
cmp
cwtl
push
out
aam
lret
rorb
xchg
jnp
bound
mov
sub
add
mov
jmp
mov
mov
mov
mov
lea
mov
mov
mov
mov
xor
add
mov
mov
mov
xor
add
cmp
jne
mov
xor
mov
add
imul
mov
pushl
jmp
mov
mov
add
mov
mov
mov
movsbl
cltd
add
adc
xor
xor
cmp
jne
cmp
jne
mov
mov
mov
mov
jmp
mov
cmp
jne
push
pushl
pushl
pushl
pushl
call
pop
pop
pop
leave
ret
push
mov
and
addl
sub
push
push
movl
push
xor
push
notl
call
mov
addl
push
andl
mov
lea
subl
push
push
sbbl
push
adcl
push
adcl
call
shl
movl
cmp
je
xor
movl
jmp
orl
push
call
xorl
test
movl
jne
lea
xorl
push
push
sbbl
call
cmp
movl
jne
movl
pushl
addl
push
sbbl
call
mov
mov
sub
sub
mov
orl
movl
movl
movl
or
lea
mov
add
lea
mov
mov
sub
and
mov
andl
mov
xor
xor
sbb
mov
sbb
mov
andl
mov
inc
mov
cmpl
jl
jmp
pushl
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
and
mov
xor
xor
mov
or
mov
add
movl
mov
mov
mov
cmp
jne
sbb
mov
sub
mov
mov
adcl
xor
add
mov
xor
mov
subl
xor
add
mov
decl
mov
xorl
xor
sbbl
add
sbbl
mov
sub
mov
notl
mov
subl
mov
notl
mov
adcl
mov
mov
sbbl
mov
subl
mov
movl
sbbl
mov
movl
movl
mov
addl
xor
orl
add
jmp
decl
lea
adcl
push
xorl
push
push
push
subl
call
movl
shl
cmp
jne
decl
push
adcl
call
addl
test
jne
orl
lea
push
push
xorl
call
cmp
movl
jne
andl
mov
inc
mov
cmpl
jl
jmp
push
pushl
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
mov
decl
xor
subl
lea
sbbl
push
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jb
jmp
pushl
pushl
push
pushl
call
jmp
mov
addl
xor
adcl
lea
andl
push
mov
xor
mov
xorl
pushl
incl
call
add
mov
andl
mov
inc
mov
cmpl
jg
jmp
push
push
push
push
call
cmpl
jb
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jl
jmp
push
call
jmp
xor
addl
lea
addl
mov
and
mov
xor
xor
add
mov
xor
movl
lea
movl
mov
push
movl
cmp
movl
jbe
mov
add
mov
mov
xor
xor
sbb
mov
mov
mov
or
mov
mov
adcl
sub
xor
orl
mov
subl
lea
andl
mov
lea
mov
lea
xorl
push
subl
push
push
subl
push
addl
call
shl
movl
cmp
movl
jne
push
call
xorl
test
jne
adcl
lea
push
push
call
cmp
jne
push
lea
push
subl
push
sbbl
push
push
addl
call
shl
movl
cmp
movl
jne
sbbl
push
call
test
jne
lea
adcl
push
push
andl
call
cmp
jne
addl
push
adcl
lea
adcl
push
subl
push
push
push
sbbl
call
shl
cmp
movl
jne
andl
push
negl
call
test
movl
jne
orl
lea
push
adcl
push
call
movl
cmp
movl
jne
xorl
push
lea
push
push
sbbl
push
push
call
movl
shl
cmp
jne
subl
push
adcl
call
test
jne
xorl
lea
addl
push
push
call
movl
cmp
jne
notl
push
movl
lea
push
push
push
push
addl
call
movl
shl
cmp
jne
subl
push
xorl
call
test
movl
jne
andl
lea
adcl
push
orl
push
sbbl
call
movl
cmp
movl
jne
xorl
push
lea
orl
push
push
push
subl
push
call
shl
movl
cmp
movl
jne
addl
push
orl
call
andl
test
movl
jne
xorl
lea
addl
push
orl
push
sbbl
call
cmp
movl
jne
push
lea
incl
push
push
push
subl
push
xorl
call
movl
shl
movl
cmp
movl
jne
push
andl
call
test
jne
lea
push
push
call
movl
cmp
movl
jne
orl
push
lea
push
push
push
addl
push
orl
call
shl
movl
cmp
movl
jne
xorl
push
orl
call
xorl
test
movl
jne
lea
incl
push
push
xorl
call
movl
cmp
jne
sbbl
push
lea
orl
push
subl
push
addl
push
push
sbbl
call
shl
cmp
jne
push
call
test
jne
lea
push
push
call
cmp
jne
push
lea
push
push
push
push
call
shl
cmp
jne
push
call
test
jne
lea
push
push
call
cmp
jne
push
lea
push
push
push
push
call
shl
cmp
jne
push
call
test
jne
lea
push
push
call
cmp
jne
push
lea
push
push
push
push
call
shl
cmp
jne
push
call
test
jne
lea
push
push
call
cmp
jne
mov
cmp
je
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
pushl
mov
pushl
add
mov
mov
pushl
call
mov
mov
mov
jmp
mov
mov
xor
add
cmp
jne
mov
mov
mov
xor
add
cmp
jne
mov
push
xor
add
push
push
pushl
pushl
call
pushl
pushl
call
mov
xor
add
mov
mov
xor
add
mov
mov
test
je
push
lea
push
push
movl
push
movl
movl
push
movl
call
shl
cmp
jne
push
call
test
jne
lea
push
push
call
cmp
jne
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
andl
mov
add
adcl
mov
xor
mov
mov
xor
cmpl
mov
jne
cmp
je
mov
mov
cltd
add
adc
andl
xor
mov
mov
mov
xor
add
mov
adcl
xor
mov
mov
xor
mov
cmp
jne
mov
cmp
je
mov
add
mov
jmp
mov
mov
xor
mov
mov
mov
add
mov
mov
xor
add
xor
add
adc
xor
xor
xor
add
adc
xor
xor
cmp
jne
cmp
jne
mov
mov
push
lea
push
push
push
push
call
shl
cmp
jne
push
call
test
jne
lea
push
push
call
cmp
jne
mov
push
add
push
lea
push
call
mov
mov
pop
pop
pop
mov
pop
ret
push
mov
sub
andl
xor
add
inc
mov
cmpl
jb
jmp
pushl
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
mov
sbb
movl
mov
movl
cmpl
je
cmpl
jbe
jmp
push
push
call
mov
dec
mov
jmp
push
sub
mov
add
xor
neg
mov
adcl
push
mov
add
movl
cmp
movl
je
movl
cmpl
je
cmpl
jle
jmp
push
push
push
call
cmpl
jne
mov
dec
mov
xor
add
dec
mov
jmp
mov
mov
xor
xor
add
add
adc
xor
mov
push
xor
xor
mov
add
adc
xor
xor
cmp
jne
cmp
je
jmp
mov
mov
mov
xor
add
mov
imul
mov
xor
add
mov
mov
mov
mov
xor
xor
add
adc
lea
xor
xor
xor
mov
add
adc
xor
xor
cmp
jne
cmp
jne
mov
pop
pop
pop
leave
ret
push
mov
push
and
movl
movl
cmpl
je
cmpl
ja
jmp
push
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
andl
mov
inc
mov
cmpl
jbe
jmp
call
cmpl
jb
movsbl
mov
sub
mov
xor
cmp
jne
mov
push
mov
add
mov
mov
mov
xor
add
cmp
pop
je
mov
jmp
mov
xor
add
leave
ret
push
mov
sub
sub
push
movl
mov
andl
mov
movl
adc
push
mov
neg
mov
andl
jmp
xor
add
inc
mov
cmpl
jae
cmpl
jle
jmp
pushl
pushl
push
push
call
cmpl
jne
mov
inc
mov
jmp
mov
mov
xor
adcl
xor
mov
subl
add
add
imul
not
mov
movl
cmp
je
and
mov
mov
inc
mov
xor
lea
mov
mov
mov
mov
xor
xor
add
add
imul
mov
cmp
je
mov
xor
mov
add
imul
add
mov
mov
jmp
mov
mov
xor
xor
add
add
imul
pop
pop
leave
ret
add
add
add
add
add
add
add
add
add
dec
add
adc
add
add
add
inc
push
mov
mov
inc
xchg
cmpsl
popf
pop
mov
add
add
pop
push
imul
inc
imul
inc
js
arpl
mov
sub
push
mov
xchg
mov
cmp
jne
mov
cmp
jne
mov
mov
mov
mov
mov
mov
mov
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
push
movb
movb
push
movb
xor
mov
lea
movzbl
xor
add
inc
mov
cmp
jb
xor
lea
movzbl
xor
add
inc
mov
cmp
jb
xor
lea
movzbl
xor
add
inc
mov
cmp
jb
lea
mov
mov
mov
mov
mov
mov
mov
cmp
jne
lea
mov
mov
mov
add
mov
lea
mov
add
mov
lea
mov
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
lea
push
mov
mov
xor
add
push
mov
lea
mov
lea
push
mov
mov
mov
mov
mov
movl
movl
movl
movl
pushl
mov
call
mov
mov
test
je
xorl
jmp
mov
mov
mov
xor
cmp
jne
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
mov
movl
movl
lea
pop
mov
xor
dec
mov
inc
dec
jne
lea
mov
lea
push
mov
xor
add
push
mov
add
push
mov
mov
movl
pushl
mov
call
mov
xor
add
mov
cmp
jne
mov
or
mov
add
mov
mov
mov
mov
add
mov
mov
mov
mov
add
mov
mov
mov
add
mov
mov
mov
mov
mov
mov
lea
mov
mov
mov
mov
mov
mov
mov
lea
mov
add
mov
lea
mov
mov
mov
mov
movzwl
xor
add
xor
mov
mov
movzwl
xor
add
xor
mov
xor
mov
mov
mov
lea
lea
movl
mov
call
mov
lea
push
mov
xor
add
push
lea
push
pushl
mov
call
mov
lea
lea
mov
call
mov
mov
mov
pushl
pushl
pushl
pushl
pushl
pushl
pushl
call
test
je
add
pushl
lea
call
mov
mov
mov
xor
add
mov
jne
mov
mov
pushl
mov
call
jmp
mov
mov
add
mov
mov
decl
mov
mov
mov
lea
mov
mov
mov
mov
add
pop
pop
pop
leave
ret
push
push
push
push
mov
mov
add
push
cld
mov
add
push
mov
lods
xchg
push
mov
or
shl
not
push
mov
or
shl
not
push
add
mov
sub
sub
inc
push
push
push
push
push
push
sub
push
or
mov
shl
lea
mov
shr
rep
push
pop
call
loop
lea
lea
mov
mov
sub
and
mov
mov
call
jne
mov
and
shl
sub
neg
shr
pop
add
pop
lea
shl
cmp
pop
lea
push
push
mov
push
mov
jb
mov
sub
movzbl
mov
shl
mov
and
add
lea
call
mov
shr
and
cmp
mov
jne
cmp
jb
jmp
mov
call
inc
inc
sub
sub
cmp
jb
pop
inc
cmp
dec
mov
jb
inc
cmp
dec
mov
dec
jb
mov
dec
sub
push
jmp
mov
dec
call
jne
pop
pop
pop
pop
pop
pop
pushl
push
push
mov
mov
jmp
mov
dec
call
jne
mov
dec
call
jne
pop
cmp
mov
jb
mov
push
mov
sub
cmp
jb
lods
mov
stos
jmp
mov
call
mov
je
mov
call
mov
je
mov
mov
mov
mov
mov
mov
mov
mov
pop
pop
pop
mov
mov
add
push
push
cmp
mov
jb
add
push
mov
call
jne
mov
mov
shl
sub
push
pop
lea
jmp
mov
add
call
jne
mov
mov
shl
push
pop
push
pop
lea
jmp
mov
add
push
pop
mov
mov
sub
inc
mov
call
mov
sub
jb
add
cmpl
jae
addl
mov
cmp
jb
push
pop
mov
shl
sub
inc
push
pop
lea
mov
call
mov
sub
jb
mov
mov
cmp
jb
mov
andl
shr
orl
dec
cmp
jae
mov
sub
mov
shlb
add
shl
add
mov
jmp
sub
call
shr
shll
cmp
jb
incl
sub
dec
jne
mov
add
mov
shll
push
pop
sub
inc
mov
mov
call
test
je
or
shl
dec
jne
jmp
incl
mov
add
mov
mov
sub
cmp
ja
mov
sub
mov
lods
stos
cmp
jae
dec
jne
mov
movzbl
cmp
jb
call
sub
lea
mov
mov
sub
mov
fidivl
jp
stos
insl
lods
repnz
nop
cmc
test
out
mov
test
xchg
mov
jno
cmc
push
sbb
movsl
aaa
stos
lcall
mov
cwtl
rcrl
or
xchg
lcall
pop
mov
test
ss
test
mov
mov
adc
add
notb
scas
leave
test
or
lret
movzwl
shr
imul
cmp
jae
mov
mov
sub
shr
add
add
lea
ret
shr
sub
sub
sub
add
add
lea
ret
push
mov
sub
push
push
push
movl
movl
mov
mov
mov
mov
xor
mov
add
mov
mov
xor
add
mov
mov
xor
add
mov
mov
xor
add
mov
movl
movl
movl
push
pop
mov
mov
push
pop
mov
mov
movl
movl
mov
xor
add
mov
mov
xor
add
mov
movl
movl
movl
lea
lea
call
decl
jne
decl
jne
decl
jne
movl
mov
xor
mov
add
mov
mov
andl
xor
add
mov
mov
mov
mov
mov
mov
mov
mov
lea
mov
mov
lea
mov
mov
pushl
lea
mov
call
mov
xor
add
cmp
je
mov
mov
mov
mov
mov
mov
add
mov
mov
lea
push
mov
mov
mov
add
push
pushl
push
call
pushl
xor
movl
movl
movl
movb
lea
stos
stos
stos
xor
movl
movl
movl
movb
lea
stos
stos
stos
mov
mov
mov
movl
movl
movw
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
call
push
mov
mov
pushl
call
test
jne
mov
mov
mov
add
mov
mov
mov
call
push
mov
call
test
jne
mov
mov
mov
add
mov
mov
mov
call
push
mov
call
mov
mov
xor
add
cmp
je
mov
xor
mov
sub
add
mov
cmp
ja
movl
pushl
mov
mov
mov
call
push
mov
mov
pushl
call
mov
mov
mov
mov
mov
mov
xor
lea
call
push
mov
mov
pushl
call
mov
mov
mov
mov
xor
lea
call
push
mov
mov
pushl
call
mov
mov
mov
xor
lea
call
push
mov
mov
pushl
call
andl
mov
mov
and
add
push
call
test
je
mov
push
xor
pop
div
add
movzbl
push
call
test
jne
mov
mov
mov
xor
lea
call
push
mov
mov
pushl
call
mov
jmp
andl
incl
cmpl
jb
mov
mov
xor
mov
add
lea
call
push
mov
mov
xor
add
lea
call
push
call
mov
xor
add
cmp
jne
movl
mov
mov
xor
lea
mov
mov
test
je
mov
mov
xor
lea
mov
mov
xor
mov
sub
add
mov
cmp
jbe
mov
mov
mov
cmp
jne
pushl
lea
push
call
mov
jmp
mov
mov
xor
add
xor
mov
mov
xor
add
cmp
je
mov
mov
xor
add
cmp
je
mov
xor
add
jmp
mov
mov
and
or
sub
add
mov
xor
lea
mov
cmp
jb
mov
mov
mov
movl
mov
mov
mov
mov
xor
add
mov
mov
xor
add
mov
movl
movl
mov
mov
xor
add
cmp
je
jmp
mov
mov
sub
mov
xor
add
xor
div
mov
mov
mov
xor
add
cmp
jbe
mov
xor
add
mov
mov
mov
xor
add
imul
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
add
movl
mov
movl
mov
movl
mov
mov
xor
add
jmp
movl
movl
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
xor
add
add
imul
add
mov
mov
mov
cmp
jb
mov
mov
xor
add
imul
mov
xor
add
or
mov
xor
add
mov
xor
add
mov
lea
jmp
mov
mov
xor
lea
mov
mov
xor
mov
sub
add
mov
mov
xor
add
imul
cmp
jbe
mov
mov
mov
mov
mov
xor
add
push
mov
xor
add
push
push
mov
mov
xor
add
push
call
mov
mov
xor
add
cmp
je
mov
jmp
mov
xor
mov
mov
mov
xor
lea
xor
mov
sub
xor
cmp
jne
mov
mov
mov
xor
add
push
mov
xor
add
push
pushl
call
mov
mov
mov
mov
mov
mov
xor
mov
add
movl
movl
jmp
xor
mov
xor
dec
mov
movsbl
movzbl
cmp
jne
mov
mov
xor
lea
xor
cmp
jne
jmp
mov
xor
add
mov
xor
add
cmp
je
mov
movl
movl
movl
movl
mov
mov
mov
xor
add
push
mov
mov
xor
add
push
mov
xor
add
push
mov
xor
add
push
call
mov
mov
mov
mov
xor
add
push
mov
xor
add
push
mov
pushl
xor
add
push
call
mov
xor
add
mov
cmp
je
mov
xor
add
cmp
je
movl
movl
mov
xor
sub
mov
mov
xor
sub
mov
mov
xor
sub
mov
andl
andl
lea
push
pushl
push
lea
push
mov
pushl
mov
add
push
push
call
mov
mov
mov
mov
xor
add
push
mov
xor
add
push
push
call
mov
add
xor
cmp
mov
mov
mov
jne
xor
add
push
mov
xor
add
push
pushl
call
mov
mov
mov
mov
jmp
xor
add
push
mov
xor
add
push
pushl
call
mov
mov
mov
movl
mov
mov
mov
mov
xor
add
mov
mov
xor
add
mov
movl
movl
mov
mov
xor
add
cmp
je
jmp
mov
mov
sub
mov
xor
add
xor
div
mov
mov
mov
xor
add
cmp
jbe
mov
xor
add
mov
mov
mov
xor
add
imul
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
add
movl
mov
movl
mov
movl
mov
mov
xor
add
jmp
movl
movl
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
xor
add
add
imul
add
mov
mov
mov
cmp
jb
mov
mov
xor
add
imul
mov
xor
add
or
mov
xor
add
mov
xor
add
mov
lea
jmp
mov
mov
xor
lea
mov
mov
xor
mov
sub
add
mov
mov
xor
add
imul
cmp
jbe
pushl
mov
pushl
lea
push
mov
mov
pushl
mov
mov
pushl
pushl
pushl
call
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
xor
add
push
mov
xor
add
push
pushl
call
pop
pop
pop
leave
ret
push
mov
push
push
lea
mov
push
mov
mov
mov
mov
cmp
pop
jne
movb
movb
movb
movb
leave
ret
push
mov
push
push
lea
mov
mov
mov
mov
mov
cmp
jne
mov
movb
movb
movb
movb
leave
ret
push
mov
push
push
lea
mov
mov
mov
mov
mov
cmp
jne
movb
mov
movb
movb
leave
ret
push
mov
push
push
lea
mov
push
mov
mov
mov
mov
cmp
pop
jne
movb
movw
movb
leave
ret
push
mov
push
push
lea
mov
mov
mov
mov
mov
cmp
jne
mov
movb
movb
movb
leave
ret
push
mov
call
mov
mov
movb
call
push
mov
movb
call
push
movb
call
movb
mov
jmp
push
mov
push
mov
push
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
movl
mov
movzwl
xor
add
pop
test
je
mov
movl
leave
ret
push
mov
sub
andl
movl
movl
movl
movl
movl
mov
mov
mov
mov
push
push
mov
mov
mov
mov
mov
push
mov
test
jne
pushl
mov
call
mov
mov
add
mov
mov
mov
mov
xor
mov
add
cmp
jne
mov
mov
mov
mov
mov
mov
xor
add
mov
mov
andl
xor
add
mov
lea
push
mov
xor
add
push
mov
add
push
mov
mov
movl
pushl
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
mov
lea
mov
lea
push
mov
xor
add
push
mov
add
push
mov
mov
movl
pushl
mov
call
test
je
andl
cmpl
jbe
mov
mov
sub
mov
incl
mov
mov
inc
cmp
jb
mov
mov
add
mov
mov
add
sub
add
mov
mov
mov
movl
jmp
add
shr
mov
je
lea
mov
mov
mov
mov
movzwl
mov
and
mov
mov
shr
add
xor
cmp
jne
mov
add
mov
cmpl
je
mov
add
mov
mov
mov
mov
addl
decl
jne
mov
add
mov
cmp
jae
add
mov
mov
test
jne
mov
mov
movl
mov
mov
mov
xor
add
mov
lea
mov
lea
push
mov
xor
add
push
mov
add
push
mov
mov
pushl
mov
call
mov
mov
add
mov
pushl
mov
pushl
pushl
call
mov
add
lea
mov
mov
mov
mov
mov
mov
mov
cmp
jb
mov
mov
mov
lea
mov
add
cmp
jae
mov
mov
mov
sub
add
mov
mov
jmp
xor
pop
pop
pop
leave
ret
push
mov
sub
push
mov
mov
cmpl
je
test
je
test
je
mov
test
je
cmpl
je
cmp
je
mov
andl
mov
sub
add
movzwl
mov
movzwl
add
je
lea
push
mov
mov
push
test
je
mov
andl
and
add
movzwl
movzwl
add
je
lea
mov
test
je
mov
andl
and
add
movzwl
movzwl
add
je
lea
mov
mov
mov
test
je
mov
add
movzwl
movzwl
incl
addl
add
cmp
jb
movzwl
movzwl
mov
incl
add
add
mov
cmp
jb
mov
movzwl
movzwl
incl
add
add
mov
cmp
jb
pop
pop
xor
inc
jmp
xor
pop
leave
ret
push
mov
mov
mov
sub
push
xor
push
push
cmp
je
cmp
je
cmp
jne
xor
inc
jmp
mov
add
mov
mov
mov
mov
add
add
mov
cmp
ja
mov
mov
cmp
jbe
cmp
jae
movzwl
jmp
mov
lea
mov
test
je
add
mov
cmp
jbe
mov
mov
add
cmp
jae
mov
jmp
sub
mov
mov
test
je
mov
inc
mov
cmp
jb
jmp
xor
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
movl
mov
mov
mov
mov
mov
mov
push
mov
push
mov
movl
mov
mov
push
mov
xor
xor
add
add
mov
cmp
je
mov
mov
xor
add
cmp
je
mov
mov
xor
add
cmp
je
add
mov
mov
xor
add
mov
mov
cmp
je
mov
mov
imul
xor
add
cmp
jne
mov
mov
imul
xor
add
cmp
je
mov
mov
mov
imul
add
mov
add
xor
mov
mov
mov
xor
add
xor
mov
mov
add
add
cmp
je
add
mov
mov
xor
add
mov
lea
mov
movl
mov
pushl
mov
call
mov
xor
add
mov
cmp
jne
mov
pushl
mov
call
mov
movl
movl
mov
xor
add
cmp
jne
mov
mov
xor
xor
lea
mov
mov
add
imul
push
call
mov
xor
add
cmp
jne
mov
xor
add
cmp
jbe
mov
xor
add
cmp
jne
mov
mov
xor
lea
mov
jmp
movl
movl
mov
xor
add
jmp
mov
xor
add
mov
mov
xor
add
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
mov
mov
mov
xor
add
cmp
je
mov
mov
xor
add
shr
cmp
je
mov
mov
mov
movzwl
push
pushl
call
jmp
mov
add
mov
mov
add
push
pushl
call
mov
mov
mov
xor
add
cmp
mov
jne
mov
xor
lea
mov
jmp
mov
xor
add
imul
mov
mov
mov
xor
lea
mov
mov
xor
add
cmp
jne
mov
mov
mov
sub
xor
jmp
mov
xor
add
cmp
mov
jne
mov
jmp
mov
xor
add
pop
pop
pop
leave
ret
push
mov
sub
movl
movl
mov
mov
push
mov
mov
mov
mov
xor
mov
add
cmp
je
mov
mov
add
push
mov
movl
mov
mov
mov
xor
xor
add
cmp
je
mov
mov
add
mov
mov
sub
mov
xor
add
mov
cmp
je
mov
xor
add
mov
push
movl
jmp
mov
xor
lea
add
shr
cmp
jae
sub
lea
mov
movzwl
and
mov
mov
mov
sub
add
movzwl
shr
xor
mov
mov
mov
mov
xor
lea
mov
mov
mov
xor
add
cmp
jne
mov
mov
xor
add
cmp
jne
mov
mov
add
add
decl
jne
mov
add
mov
mov
mov
xor
cmp
jae
add
mov
mov
xor
add
mov
cmp
jne
pop
mov
pop
jmp
mov
xor
add
pop
leave
ret
push
mov
sub
movl
movl
mov
push
push
mov
xor
push
mov
add
mov
mov
xor
add
mov
mov
mov
mov
xor
mov
addl
mov
mov
xor
mov
addl
mov
mov
xor
mov
addl
mov
mov
xor
mov
addl
movl
mov
test
je
mov
test
je
mov
test
je
mov
mov
xor
add
cmp
jne
mov
xor
add
mov
mov
mov
mov
add
mov
mov
test
je
movl
mov
xor
add
mov
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
cmp
jne
mov
lea
push
mov
xor
add
push
pushl
pushl
call
mov
mov
mov
sub
add
push
call
mov
mov
mov
mov
pushl
pushl
push
call
mov
mov
add
movzwl
lea
mov
mov
movzwl
xor
add
mov
cmp
je
mov
xor
add
mov
mov
movzwl
xor
sub
sub
cmp
ja
mov
add
mov
jmp
mov
mov
lea
mov
mov
test
je
not
and
add
mov
add
push
call
mov
mov
mov
xor
add
cmp
je
push
mov
add
mov
add
push
push
call
mov
mov
mov
add
xor
lea
mov
mov
mov
movzwl
xor
sub
mov
sub
mov
cmp
jbe
mov
mov
cmp
jne
mov
lea
push
mov
xor
add
push
mov
pushl
push
call
test
je
mov
mov
mov
xor
add
je
mov
xor
add
andl
mov
mov
lea
movl
movl
mov
mov
mov
movl
mov
mov
xor
mov
add
mov
incl
cmpl
mov
jb
mov
mov
mov
mov
mov
lea
mov
mov
mov
movl
mov
mov
movl
movl
movl
movl
movl
mov
movl
mov
movl
mov
movl
mov
movl
movl
xor
mov
xor
sub
mov
inc
cmp
jb
mov
lea
push
call
mov
lea
push
push
call
mov
lea
push
mov
pushl
mov
call
mov
xor
add
mov
mov
mov
xor
add
cmp
je
mov
jmp
mov
mov
mov
mov
cmp
je
mov
mov
cmp
jne
mov
mov
cmp
jne
mov
mov
mov
add
mov
mov
xor
add
mov
mov
push
push
pushl
call
test
je
pushl
mov
pushl
call
test
je
mov
mov
mov
call
test
je
push
pushl
call
test
je
mov
mov
cmp
jne
mov
lea
push
pushl
mov
pushl
push
call
mov
mov
mov
xor
add
je
mov
mov
movl
mov
pushl
xor
pushl
add
or
add
push
call
movl
jmp
mov
mov
add
call
mov
mov
mov
mov
movl
cmpl
jne
andl
mov
jmp
xor
pop
pop
pop
leave
ret
push
mov
movzwl
movzwl
push
push
xor
lea
test
je
mov
lea
cmp
jb
mov
add
add
cmp
jb
add
inc
cmp
jb
xor
pop
pop
pop
ret
push
mov
sub
movl
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
push
mov
xor
push
mov
mov
add
push
cmp
je
mov
mov
xor
add
cmp
je
mov
xor
add
mov
mov
xor
add
mov
mov
mov
mov
xor
mov
xor
add
add
sub
mov
jmp
mov
mov
xor
add
cmp
je
mov
mov
xor
add
cmp
mov
mov
je
cmp
je
mov
mov
xor
add
cmp
jb
mov
mov
xor
add
cmp
ja
movzwl
movzwl
add
mov
mov
mov
xor
add
cmp
jb
mov
mov
xor
add
cmp
ja
movzwl
movzwl
add
mov
mov
mov
cmp
jne
mov
mov
xor
lea
mov
mov
mov
xor
lea
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
cmp
jne
mov
mov
xor
add
imul
mov
jmp
mov
mov
xor
lea
mov
mov
sub
xor
mov
mov
sub
xor
mov
mov
mov
xor
add
xor
add
imul
mov
movzwl
mov
mov
xor
add
xor
add
imul
mov
movzwl
sub
sub
xor
xor
cmp
jne
mov
mov
xor
add
xor
add
imul
mov
movzwl
mov
sub
xor
cmp
mov
je
mov
pop
xor
pop
add
pop
leave
ret
push
mov
push
mov
push
mov
sub
mov
xor
mov
movl
mov
cmp
je
push
push
movzwl
mov
mov
mov
cmp
jne
mov
lea
xor
mov
xor
mov
mov
sub
mov
xor
mov
cmp
jne
mov
pop
pop
cmp
je
xor
lea
pop
leave
ret
push
mov
push
push
movl
mov
call
mov
inc
xor
cmp
je
push
push
mov
mov
mov
mov
mov
sub
mov
xor
mov
cmp
jne
mov
lea
xor
mov
xor
lea
mov
inc
xor
cmp
jne
mov
pop
pop
cmp
je
xor
xor
mov
pop
leave
ret
push
mov
push
push
movl
mov
call
mov
mov
sub
mov
xor
mov
cmp
je
push
push
movzwl
mov
mov
mov
cmp
jne
mov
lea
xor
mov
xor
mov
mov
sub
mov
xor
mov
cmp
jne
cmpl
pop
pop
je
xor
inc
jmp
xor
pop
leave
ret
push
mov
push
mov
movzwl
push
lea
mov
push
xor
mov
mov
cmp
je
mov
sub
mov
jmp
mov
mov
add
movzwl
mov
add
xor
mov
cmp
jne
xor
pop
mov
mov
pop
leave
ret
push
mov
sub
movl
movl
mov
push
mov
xor
mov
add
mov
movl
movl
push
movl
jmp
mov
mov
sub
mov
xor
add
cmp
jbe
mov
add
mov
add
mov
mov
mov
mov
mov
jmp
mov
mov
sub
mov
xor
add
cmp
mov
jbe
add
mov
add
mov
mov
mov
jmp
mov
sub
mov
xor
add
cmp
mov
jbe
add
mov
add
mov
mov
mov
mov
xor
lea
mov
jmp
add
mov
add
mov
mov
incl
mov
mov
xor
add
imul
mov
mov
xor
lea
cmp
jb
pop
pop
leave
ret
push
mov
sub
movl
push
mov
movl
mov
mov
xor
mov
add
cmp
je
push
push
mov
mov
xor
mov
sub
add
lea
xor
mov
mov
mov
xor
sub
xor
mov
mov
xor
add
cmp
jne
pop
pop
pop
leave
ret
push
mov
sub
movl
movl
mov
mov
mov
push
push
mov
xor
mov
add
cmp
mov
jne
xor
add
jmp
mov
xor
add
cmp
jne
mov
jmp
lea
mov
mov
mov
mov
xor
add
mov
mov
push
call
mov
mov
mov
jmp
mov
sub
mov
mov
mov
call
mov
pushl
mov
call
mov
xor
add
cmp
jne
mov
call
mov
xor
add
push
pushl
mov
call
mov
xor
add
cmp
je
mov
mov
mov
mov
mov
add
cmp
jne
mov
xor
add
pop
pop
pop
leave
ret
mov
mov
jmp
push
mov
mov
sub
cmpl
push
push
push
je
test
je
movzwl
mov
mov
xor
and
mov
xor
add
mov
andl
xor
push
pop
cmp
jae
lea
xor
movzwl
mov
lea
cmp
jne
movzwl
mov
cmp
jne
mov
movzwl
cmpb
je
mov
movzwl
movsbw
mov
sub
xor
cmp
je
push
pop
incl
mov
cmp
jb
jmp
incl
push
pop
mov
movzwl
cmpb
je
inc
cmp
jne
xor
pop
pop
pop
leave
ret
mov
add
xor
xor
cmp
sete
jmp
push
mov
sub
push
mov
mov
cmpl
jne
xor
jmp
pushl
push
pop
call
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
push
mov
mov
call
push
mov
pushl
call
mov
test
je
mov
push
push
mov
add
mov
mov
mov
mov
add
mov
mov
add
add
mov
mov
mov
cmp
ja
mov
xor
mov
cmp
jbe
jmp
mov
mov
movzwl
cmp
jae
cmp
jae
mov
mov
mov
mov
lea
add
add
sub
movl
mov
mov
cmpl
jne
mov
pushl
push
call
mov
test
je
mov
mov
mov
addl
decl
jne
mov
inc
mov
cmp
jb
pop
pop
pop
leave
ret
push
mov
mov
push
pushl
lea
mov
call
mov
mov
mov
xor
cmp
pop
setne
mov
pop
ret
mov
push
jmp
xor
add
mov
add
add
movzwl
mov
cmp
jne
xor
mov
mov
pop
ret
push
mov
mov
shl
add
jmp
xor
dec
mov
inc
inc
mov
cmp
jne
movb
mov
add
pop
ret
push
mov
sub
movl
movl
mov
mov
movl
push
push
movl
mov
mov
mov
xor
mov
xor
add
add
imul
jmp
mov
mov
xor
xor
add
add
test
mov
mov
je
xor
xor
add
add
shr
mov
xor
add
xor
jmp
xor
xor
add
add
shr
mov
mov
xor
lea
mov
mov
xor
xor
sub
cmp
jbe
mov
pop
mov
mov
pop
leave
ret
push
mov
sub
push
mov
mov
lea
mov
mov
mov
push
mov
xor
push
mov
add
cmp
mov
je
mov
xor
add
cmp
je
mov
mov
mov
mov
movl
mov
lea
mov
mov
mov
mov
mov
xor
mov
sub
sub
mov
movl
jmp
mov
mov
xor
xor
lea
mov
xor
div
mov
mov
xor
xor
sub
cmp
jne
mov
mov
mov
mov
mov
xor
xor
add
add
cmp
jae
lea
mov
mov
xor
add
lea
mov
mov
cmp
jbe
addl
jmp
addl
mov
xor
inc
incl
add
cmp
jb
mov
cmpl
jne
xor
dec
jmp
mov
xor
mov
sub
add
mov
xor
sub
ror
xor
mov
mov
mov
mov
mov
sub
xor
cmp
jne
mov
mov
xor
xor
sub
mov
sub
xor
mov
mov
xor
sub
sub
jmp
mov
xor
mov
sub
add
mov
mov
cmp
jne
mov
jmp
mov
xor
add
pop
pop
pop
leave
ret
push
mov
sub
movl
movl
movl
push
movl
mov
push
mov
push
xor
mov
add
mov
movl
movl
movl
mov
mov
mov
xor
xor
add
add
imul
jmp
mov
sub
xor
mov
lea
call
mov
mov
mov
mov
mov
mov
xor
lea
mov
mov
mov
xor
xor
sub
mov
cmp
jbe
mov
xor
add
mov
movl
mov
jmp
mov
mov
xor
add
shr
mov
mov
mov
mov
mov
mov
movzbl
xor
mov
mov
mov
xor
add
and
mov
mov
xor
mov
mov
xor
lea
mov
mov
xor
mov
sub
add
mov
mov
mov
xor
add
cmp
jne
mov
mov
xor
add
pop
pop
xor
pop
leave
ret
push
mov
mov
mov
mov
mov
mov
sub
push
push
push
mov
xor
mov
add
cmp
jne
orl
jmp
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
mov
mov
movl
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
mov
xor
add
mov
mov
xor
add
mov
mov
mov
sub
mov
mov
mov
mov
dec
test
mov
je
mov
mov
mov
dec
not
and
mov
mov
add
jmp
mov
mov
mov
xor
add
mov
mov
xor
add
mov
mov
mov
xor
add
mov
mov
movl
movl
movl
mov
mov
xor
add
imul
mov
mov
xor
lea
cmp
jae
mov
xor
add
mov
mov
add
mov
pushl
mov
mov
call
mov
movl
mov
xor
lea
add
push
call
mov
test
je
mov
xor
add
push
pushl
lea
push
call
mov
mov
mov
mov
sub
mov
mov
mov
mov
add
mov
cmp
jb
mov
mov
mov
add
mov
sub
jmp
push
pushl
lea
push
call
mov
mov
movl
movl
movl
lea
mov
lea
mov
lea
mov
lea
mov
mov
xor
add
mov
jmp
cmp
je
mov
xor
mov
add
mov
mov
xor
lea
mov
mov
mov
xor
add
cmp
jne
mov
xor
add
push
push
lea
push
call
mov
mov
xor
mov
mov
xor
movzbl
add
cmp
je
mov
mov
xor
mov
mov
xor
movzbl
add
cmp
je
mov
mov
xor
mov
mov
xor
movzbl
add
cmp
je
mov
mov
xor
mov
mov
xor
movzbl
add
cmp
je
mov
mov
xor
mov
mov
mov
xor
mov
xor
mov
mov
xor
mov
or
mov
mov
xor
mov
cmp
jne
mov
mov
xor
mov
mov
mov
xor
mov
xor
mov
mov
xor
mov
or
mov
mov
xor
mov
cmp
jne
mov
mov
xor
mov
mov
mov
xor
mov
xor
mov
mov
xor
mov
or
mov
mov
xor
mov
cmp
jne
mov
mov
xor
mov
mov
mov
xor
mov
xor
mov
mov
xor
mov
or
mov
mov
xor
mov
cmp
jne
lea
push
call
mov
cmp
je
mov
xor
add
mov
mov
xor
lea
xor
mov
mov
xor
add
cmp
je
mov
mov
xor
add
cmp
jne
mov
mov
xor
lea
jmp
push
pushl
lea
push
call
mov
mov
xor
add
cmp
je
mov
xor
add
push
push
lea
push
call
mov
add
mov
pushl
pushl
mov
add
push
call
mov
mov
xor
add
cmp
je
push
pushl
mov
add
push
call
mov
mov
add
mov
add
mov
mov
mov
xor
add
imul
mov
mov
xor
lea
cmp
jb
mov
mov
mov
jmp
mov
mov
xor
xor
add
add
cmp
jne
mov
imul
mov
jmp
mov
xor
add
cmp
je
subl
jmp
andl
pop
pop
pop
leave
ret
push
mov
and
mov
sub
push
mov
push
push
cmp
jne
push
jmp
mov
cmp
jne
push
jmp
mov
cmp
jne
push
jmp
mov
cmp
jne
push
jmp
mov
mov
cmp
jne
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
mov
add
mov
mov
mov
mov
mov
mov
mov
add
mov
mov
mov
push
push
pushl
push
call
mov
mov
pushl
xor
add
mov
lea
push
push
pushl
pushl
pushl
call
mov
mov
xor
add
cmp
je
mov
mov
xor
add
imul
mov
jmp
mov
cmp
jne
push
jmp
mov
cmp
jne
push
jmp
mov
cmp
jne
push
pushl
pushl
push
pushl
pushl
pushl
call
mov
mov
pop
pop
pop
mov
pop
ret
push
mov
sub
mov
mov
movl
mov
xor
add
mov
mov
push
mov
pushl
lea
pushl
push
pushl
pushl
pushl
call
mov
mov
leave
ret
