push
mov
sub
movl
cmpl
je
cmpl
jb
jmp
push
push
pushl
push
pushl
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
mov
add
push
andl
xor
or
inc
mov
cmpl
ja
jmp
push
push
pushl
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
push
push
mov
movl
cmpl
je
cmpl
jb
jmp
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
xor
mov
decl
add
add
mov
mov
xorl
mov
mov
sbb
mov
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jg
jmp
push
call
cmpl
jne
mov
inc
mov
jmp
mov
xorl
mov
mov
movl
cmpl
je
cmpl
jl
jmp
push
push
push
push
call
cmpl
jne
xor
or
dec
mov
mov
dec
mov
jmp
movl
mov
xor
xor
add
or
mov
adc
mov
xorl
mov
mov
mov
adc
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jg
jmp
push
push
call
cmpl
jne
mov
inc
mov
jmp
push
orl
pop
andl
sub
dec
add
movl
adcl
mov
movl
orl
mov
xorl
mov
adc
mov
andl
mov
xor
mov
adcl
xor
add
addl
mov
andl
lea
mov
add
mov
xor
subl
add
mov
incl
lea
addl
push
sub
mov
andl
xor
add
push
and
mov
subl
push
andl
pushl
call
mov
add
mov
mov
adc
mov
andl
mov
inc
mov
cmpl
ja
jmp
pushl
pushl
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
or
movl
subl
mov
sbbl
mov
sub
lea
adc
mov
inc
movl
or
mov
mov
xor
xor
sub
sub
mov
xor
xor
sub
mov
sbbl
sub
mov
movl
mov
movl
mov
movl
cmp
movl
je
or
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jb
jmp
push
pushl
pushl
call
jmp
mov
adcl
xor
xor
orl
lea
mov
xor
mov
xor
xorl
div
mov
sub
mov
xor
addl
xor
sub
movl
cmp
movl
jne
mov
xor
mov
mov
addl
mov
orl
xor
addl
xor
orl
add
adcl
add
mov
cmp
jae
andl
mov
inc
mov
cmpl
ja
jmp
push
call
cmpl
jb
lea
adcl
mov
mov
xor
addl
add
lea
movl
mov
mov
cmp
movl
jbe
addl
movl
jmp
addl
sbbl
mov
xorl
xor
xorl
inc
incl
adcl
add
cmp
jb
movl
cmpl
je
cmpl
jl
jmp
push
push
call
mov
dec
mov
jmp
mov
mov
sub
mov
mov
xor
mov
sub
add
mov
xor
sub
ror
xor
mov
mov
mov
mov
sub
xor
cmp
jne
mov
mov
xor
xor
sub
sub
xor
mov
mov
xor
mov
sub
jmp
mov
xor
mov
sub
add
mov
mov
cmp
jne
movl
mov
xor
add
jmp
lea
mov
mov
sub
mov
mov
mov
mov
movl
mov
movl
mov
xor
add
mov
mov
xor
add
mov
movl
jmp
mov
dec
and
adc
push
jne
addl
xor
cmp
cmp
js,pn
je
pop
jno
jae
dec
fsub
cld
insl
push
jb
bound
pusha
push
cmp
push
jle
lea
xor
ja
add
pop
lock
rol
lock
sub
xchg
xor
fs
flds
jo
sbb
lsl
and
jne
scas
sub
hlt
push
xor
and
test
mov
or
jecxz
imul
xchg
xor
int
rcll
push
adc
or
mov
shll
add
mov
pop
sbb
push
pop
pop
lock
insl
mov
sahf
jns
jnp
scas
int
inc
divb
inc
add
fs
pop
push
stos
jg
sub
mov
int
inc
adc
jb
pop
bndldx
push
cmc
jb
shrl
sub
inc
js
into
jbe
mov
lock
add
mov
xchg
push
dec
fndisi(8087
sub
push
inc
ljmp
xchg
cmp
xchg
jno
arpl
mov
sbb
imul
xchg
fidivrl
jg
cmp
inc
push
jmp
mov
scas
adc
jae
scas
mov
and
inc
sub
push
push
sbb
push
sub
js
xor
icebp
nop
cmp
mov
sub
stos
jecxz
sub
inc
in
mov
mov
cmp
orb
test
arpl
mov
lea
pop
dec
inc
rcr
andl
in
shl
lret
cmpb
and
or
pushf
inc
push
fmuls
ja
push
rcrb
das
aas
cli
icebp
fstl
call
adc
inc
int
fs
insl
and
mov
adc
in
out
cmpsl
fwait
aam
fdiv
leave
sub
repnz
push
add
sbb
shll
loope
pop
lock
sbb
cwtl
insl
addr16
addr16
and
ljmp
cltd
hlt
es
test
insb
imul
scas
rcr
rorb
push
mov
roll
sub
cmp
mov
popa
scas
xchg
xor
pop
dec
cmp
cmc
pop
fmul
mov
sbb
inc
mov
scas
clc
inc
xor
xlat
addr16
push
fisubrs
or
fisttpl
xor
outsl
xor
push
xchg
and
jecxz
and
int
add
pop
stos
lret
jle
stos
xor
push
les
rcr
mov
rorb
mov
jo
in
xchg
lea
in
outsb
jmp
cmp
mov
sbb
popa
jno
aam
pop
push
popf
mov
pop
subl
mov
sub
std
je
sub
xlat
push
mov
inc
add
jns
or
jg
fsubp
adcl
xor
mov
add
fcompl
xchg
add
xchg
scas
mov
sub
lock
ds
cmpsb
call
cmp
and
sbb
filds
aas
or
jb
dec
push
add
adc
xchg
or
lret
enter
mov
jne
cmpl
fwait
sub
imul
fcmovnb
lahf
inc
je
shlb
into
test
pop
pop
outsl
mov
mov
xchg
sub
dec
mov
ret
icebp
imul
imulb
rorb
loope
push
pop
cltd
xor
inc
aas
jp
or
jo
ficoml
clc
push
ja
clc
lds
aam
sahf
or
enter
dec
fs
fwait
dec
mov
dec
ret
jae
push
push
gs
cli
out
enter
cmp
lret
cmp
outsb
mov
fs
aam
js
pusha
mov
lahf
mov
loope
cmp
mov
xchg
cmpsl
xchg
cld
sbb
xor
or
jg
hlt
inc
test
movsb
cmpsb
lods
int3
iret
adc
stos
xorl
out
push
add
movsb
lret
pop
lock
sbb
jl
pop
mov
push
je
mov
adc
cltd
das
scas
xchg
ja
xor
daa
sbb
xchg
in
mov
in
pop
lea
or
push
hlt
xchg
mov
fisubrl
loope
dec
mov
sub
or
scas
lret
mov
sub
xlat
iret
rclb
mov
push
les
outsl
cmp
lds
movsb
or
push
popa
je
stos
jg
je
inc
jne
adc
divb
int
out
cmp
subl
mov
test
or
pop
in
rep
pusha
out
mov
jns
xor
pushf
mov
pop
and
add
fstpt
push
mov
dec
es
insl
xchg
mov
push
imul
xchg
fidivrs
cmpsb
je
cmp
inc
cmp
and
std
fbstp
pop
lds
in
outsb
adcb
jp
loope
movsb
fld
cmpsb
and
lods
inc
fsubrs
cmp
and
cmp
imul
loop
pop
fimuls
lods
imul
cmpsb
outsb
jg
sbb
ja
inc
jae
ret
mov
sti
and
mov
cs
mov
out
fadds
in
sub
mov
fisubrl
cltd
fs
out
push
pusha
pop
lds
outsb
dec
xor
outsl
enter
jle
mov
out
repz
int
xor
aas
mov
out
lahf
push
adc
jle
cmc
jae
or
sbb
sti
pop
inc
xor
mov
sbb
cmp
cld
sub
add
out
lods
cli
test
iret
sbb
fbld
sbb
data16
dec
pop
int3
adc
dec
mov
xchg
data16
sub
mov
sti
or
or
lock
dec
push
push
scas
mov
das
dec
and
in
sbb
inc
adc
and
cmp
push
test
xchg
mov
shrb
or
fdivr
mov
test
dec
cltd
push
inc
add
pop
jnp
inc
xor
je
and
pusha
lods
popf
sbb
jb
pop
sub
loop
sti
inc
dec
pop
sti
cltd
mov
movsl
fmull
fidivrs
mov
cmc
or
clc
mov
jg
mov
cmp
aad
in
lods
pushf
dec
xor
cmp
clc
lahf
jg
cmp
push
in
loope
jae
out
mov
pop
push
jecxz
push
jns
outsb
add
jbe
movsb
lock
es
inc
enter
sldt
mov
sahf
mov
push
xor
mov
adc
mov
fstps
cmovbe
mov
outsl
popa
cltd
mov
addr16
inc
dec
lret
int3
insb
xor
addl
fs
adc
push
sbb
mov
push
or
sbb
das
xchg
or
mov
sub
push
jae
imul
cld
pop
das
popf
and
js
cmpsb
inc
sti
mov
daa
or
scas
pop
ja
sbb
add
push
mov
dec
in
sbb
hlt
or
cmp
out
stc
and
inc
movsb
mov
fndisi(8087
outsb
sub
sub
xor
mov
cmp
or
gs
xor
addr16
imulb
cmp
mov
cmp
sbbl
mov
mov
push
cmpsl
sahf
sbb
or
adc
pop
and
ja
xor
js
cmp
add
mov
ja
sahf
add
xchg
and
out
push
mov
imul
imul
loope
or
outsb
shlb
inc
int3
pushf
push
repz
outsl
test
pop
mov
xor
or
test
cltd
lods
inc
mov
mov
xor
xchg
xor
rclb
popf
jge
int3
in
xchg
imul
aam
cmpsb
jle
decb
xchg
mov
mov
mov
and
je
mov
lds
mov
enter
mov
fsubr
fwait
out
xchg
xchg
inc
pushf
int
out
loopne
push
push
aaa
adc
jp
fstps
sarb
or
cwtl
jbe
sub
xor
push
and
aas
outsl
and
inc
push
cltd
pop
push
push
cmp
xor
pop
xor
or
or
fildl
dec
and
out
pop
dec
xchg
xchg
into
sbb
add
xchg
cwtl
dec
cmp
scas
scas
js
add
sbb
fstl
imul
jb
test
lahf
push
xlat
xchg
mov
jb
out
or
mov
cltd
lds
xor
and
stos
push
imul
pop
dec
xchg
outsl
cmpsb
lods
shlb
hlt
popa
and
adc
pop
dec
mov
inc
cltd
jb
push
push
inc
push
sub
sbb
mov
cmp
clc
test
cld
push
lret
adc
sbb
xchg
dec
sbb
insl
jecxz
sbb
aam
mov
pop
adcb
sbb
pop
aas
aam
nop
in
sub
mov
or
cmp
cli
fs
jns
fwait
pop
or
shlb
mov
xor
inc
sahf
dec
nop
movsb
sub
insl
fs
sub
stc
pop
sbb
and
sbbb
les
shll
pop
mov
mov
jg
sbb
mov
sbb
sbb
jae
daa
scas
push
cmp
fisttps
xchg
mov
cmc
add
add
sub
test
ja
std
jecxz
sbb
pop
jge
ret
mov
movsl
fidivrl
jg
lret
sbbb
fmull
pop
inc
stos
ljmp
xchg
sub
jecxz
pop
or
push
mov
inc
pop
cld
test
gs
outsl
movsb
stc
fdivrl
test
cld
sub
sti
int3
sbb
and
and
cmp
lret
in
icebp
mov
lahf
pusha
shr
jno
xchg
mov
ret
mov
push
sub
add
sbb
js
addr16
insb
and
int
int
stc
lds
jecxz
push
lods
cli
pushf
cwtl
scas
mov
add
cmc
cwtl
subl
outsb
and
mov
xor
xor
mov
fnstsw
mov
pop
dec
daa
xchg
stos
mov
cmp
inc
mov
cmp
push
cmc
adc
sub
cmpsl
ficoml
sub
cmc
movsb
xchg
xor
push
jo
xchg
imul
shll
cmp
arpl
adc
rol
enter
xchg
es
pop
enter
adc
inc
dec
mov
call
xchg
jg
or
dec
jno
je
jae
insl
imul
and
test
pop
and
fwait
cmc
leave
andl
pushf
cmc
xchg
and
mov
fisubl
out
xchg
xchg
jne
jbe
rorl
inc
out
pop
mov
inc
inc
xor
inc
aam
cmp
mov
inc
inc
sbb
push
jb
imul
bound
ret
repz
push
test
cmp
dec
loop
jnp
pop
fsubrs
lcall
fldl
pop
cmp
imul
mov
shlb
pop
xchg
push
dec
movsb
shrl
pop
and
cld
outsl
daa
pop
ljmp
fcoms
jbe
and
insb
mov
in
mov
call
or
xor
inc
sbb
mov
lret
rol
push
mov
in
sbb
dec
out
ja
mov
dec
iret
pop
mov
in
pop
dec
push
test
cwtl
js
xchg
subl
icebp
pushf
sbb
dec
popa
int3
aam
xchg
xor
in
mov
ss
int
cltd
cmp
mov
stc
std
mov
cmp
mov
idivb
inc
jae
inc
inc
sub
lock
movsl
dec
lock
or
cwtl
mov
pop
std
sbb
jp
iret
enter
clc
out
xor
jmp
lcall
xchg
pop
ds
in
inc
xchg
dec
xor
jno
stos
fistpl
xchg
jl
mov
sub
movsl
aas
mov
out
dec
mov
pushf
nop
push
dec
cmp
sahf
xchg
and
mov
mov
aaa
aam
sbb
aas
adc
stos
jns
mov
sahf
pop
xchg
shlb
por
sub
test
or
repz
sbb
stos
dec
out
shrb
sbb
mov
pusha
xorl
test
ret
das
outsl
sub
cmp
out
sbb
inc
or
mov
scas
sub
cwtl
sbb
sub
adc
fstl
pop
cmpsl
daa
fst
dec
test
dec
stos
into
push
inc
das
xor
rcrb
cmc
mov
fsts
mov
pushf
inc
leave
icebp
push
call
or
int3
fsubrs
xlat
repz
jmp
pop
mov
mull
and
cmp
sub
jns
xor
sbb
insb
rcrb
push
or
pop
mov
bound
cs
and
aaa
adc
jae
cmp
adc
jle
dec
inc
or
lret
sti
ret
daa
sub
push
dec
xchg
adc
xchg
xor
adc
push
push
mov
jb
cmp
and
fmuls
in
dec
sub
pop
push
clc
mov
or
lods
jecxz
loopne
sbb
inc
adc
repz
dec
push
mov
repnz
xor
test
mov
xor
iret
xchg
movsb
push
pop
cmp
lret
cmp
or
jmp
adc
cmp
lods
push
lahf
add
testb
xchg
mov
jne
lock
sub
xor
xor
jb
decl
int3
negl
lahf
cmpb
push
iret
lcall
imul
into
cmpsl
or
outsb
pop
rclb
pop
shll
inc
or
sbb
imul
adc
mov
push
pop
test
notb
je
popa
in
push
adc
lahf
adc
out
sub
jno
insl
ficompl
stc
pop
or
inc
or
aad
add
int3
fstpl
pop
cld
mov
arpl
mov
inc
iret
add
dec
cli
mov
inc
adc
mov
adc
repz
outsl
andl
adc
ffree
dec
dec
push
sub
cmp
inc
stos
dec
xchg
fwait
imul
out
sub
std
cltd
mov
stc
aas
adc
in
jb,pt
sbb
push
test
jmp
loopne
and
loope
pushf
stos
int3
int3
ret
sbb
gs
mov
out
or
stos
xor
pop
les
aad
xchg
xchg
popl
jl
into
or
es
aad
or
insl
inc
into
into
leave
mov
scas
inc
cmpl
dec
cmp
sti
sahf
and
leave
or
xchg
xor
xchg
nop
movhlps
fdivl
xchg
push
out
leave
push
and
cmp
das
push
inc
scas
lret
stos
mov
xchg
pop
fidivl
stc
cmp
fistpl
ds
aad
test
xor
mov
xchg
jecxz
jecxz
adc
arpl
sbb
bound
insl
sub
sub
repz
fisttpl
ret
cmp
xchg
dec
lea
mov
movw
rcrb
pop
cmp
out
and
scas
push
sub
mov
mov
mov
movsl
xchg
and
xor
push
in
ret
add
fs
aad
xchg
push
inc
add
adc
sub
bound
repz
scas
jle
shrb
popf
movsb
add
dec
push
shl
ja
sub
adc
jbe
into
and
xlat
clc
lds
fcomi
dec
mov
fwait
sbb
rcr
lcall
jecxz
in
aam
clc
popa
int
addl
sahf
dec
or
inc
inc
push
and
or
jne
jo
in
xchg
pushf
ljmp
shrl
mov
add
imul
fidivrl
cs
adc
jge
xor
aaa
lods
shll
shlb
into
mov
roll
pushf
shll
mov
daa
test
mov
xchg
or
ds
sbb
loopne
sbb
js
js
pop
xor
xor
lock
and
movsl
xor
inc
sti
cmp
nop
sub
hlt
mov
adc
jmp
adc
and
out
sbb
aaa
pop
inc
call
cmpsb
dec
insl
cltd
dec
stos
fistpl
dec
popa
iret
sub
cld
mov
les
add
pop
es
and
mov
mov
pop
lret
cld
int
ret
sarl
xor
adc
pop
int3
iret
aaa
dec
ss
sarl
movsl
ja
arpl
dec
dec
mov
sbb
enter
insb
or
xchg
test
cmpsb
sub
jb
jbe
push
pop
push
xor
push
in
aaa
lods
mov
adcl
lret
pop
int
jae
mov
mov
and
or
pop
cmp
outsb
pop
call
les
or
icebp
lret
or
pop
xchg
pop
or
sahf
cmpsl
and
clc
sub
jg
and
ds
xchg
jns
pop
gs
cld
ds
pop
ret
loopne
je
mov
dec
cmpsl
popf
addr16
or
insl
mov
cli
enter
sub
push
pop
xor
testb
lds
hlt
inc
pop
test
fs
dec
aam
popf
arpl
inc
rcrb
cmp
aam
mov
or
pop
cli
pop
je
push
jbe
mov
stos
jno
ret
or
pop
rcr
in
push
shrl
xchg
sub
xchg
jmp
popf
lret
int3
mov
cmc
out
push
pop
ja
add
push
push
dec
xchg
jb
sub
cmp
lcall
lcall
jo
push
pop
stc
fldcw
call
loop
pop
or
pop
loop
ljmp
mov
dec
push
and
shlb
adc
xor
and
fidivl
xchg
sub
sub
imul
inc
addr16
mov
fmul
sbb
cmpsl
adc
mov
movsl
adcb
movsb
add
rcrl
mov
rcll
insb
pop
xor
std
dec
std
cmc
add
lds
cmp
push
scas
ror
pushf
adc
addr16
mov
mov
lea
lods
scas
out
mov
adc
jb
cld
cmp
imul
neg
mov
cmp
mov
sub
ficompl
push
xorl
cli
sahf
outsb
into
popf
cld
mov
lods
inc
test
pop
xor
and
pop
dec
dec
test
mov
jae
sbb
push
xlat
inc
in
popf
cmp
repz
mov
fs
pusha
mov
xor
std
std
mov
fs
jne
popa
mov
lcall
inc
add
xor
outsl
mov
xchg
push
cli
jnp
repnz
pop
xchg
jne
jle
dec
stc
cmpsl
dec
js
loope
loop
xor
outsb
mov
insb
je
push
inc
shlb
mov
jbe
xchg
add
test
or
mov
xchg
xchg
jmp
dec
in
les
sbb
inc
jae
pop
sub
sarb
mov
fstl
out
leave
subl
test
cmp
popa
dec
aam
nop
pop
sarb
mov
movsl
inc
lahf
testb
lods
mov
jmp
lods
mov
mov
lret
in
add
aam
icebp
xchg
xchg
push
sbb
fcmovnu
scas
pop
popa
subb
cwtl
movsb
rcrb
mov
popl
popa
cli
sbb
stos
cmpb
and
out
aam
add
ljmp
cmc
iret
and
pop
mov
int3
xor
inc
mov
cltd
add
dec
out
pop
fsubl
sub
mov
stc
push
mov
dec
movsb
enter
insb
bound
popa
in
sub
into
pop
das
stos
arpl
fadd
iret
lock
xchg
cmp
mov
or
in
push
and
xor
stos
mov
cmp
in
xorb
in
jo
or
push
sub
in
incb
mov
sub
mov
insl
mov
xchg
cmp
and
mov
andl
inc
ret
fidivl
push
sub
fsubs
dec
dec
dec
test
imul
cmp
xchg
mov
cmp
addb
or
into
mov
xchg
lods
test
scas
push
ds
xchg
lock
cmpsb
xor
xor
filds
daa
mov
loope
test
fdivp
fistpll
xchg
and
addr16
aad
mov
int
and
mov
and
mov
addr16
fcomi
dec
xor
ljmp
cwtl
mov
out
in
sbb
mov
dec
jge
add
jmp
int3
sub
movsb
out
in
mov
mov
push
cwtl
jbe
je
hlt
fprem
jge
popa
pop
mov
and
xchg
adc
push
dec
ret
ret
cmp
sti
js
mov
dec
cmpl
adc
xchg
test
sub
jbe
insb
fiadds
testl
pop
ljmp
sub
movsl
add
jmp
ss
sub
inc
xchg
fucomp
fists
pop
nop
cltd
xor
les
adc
leave
push
xor
jnp
insb
cmc
jne
stos
pop
sbb
fadds
popa
insl
sub
icebp
cmp
aad
adc
push
pop
js
pcmpeqw
push
jmp
cmp
adc
test
loop
adc
dec
rcr
adcl
ss
push
loop
cmpsl
jb
out
adc
movsb
mov
jge
mov
dec
scas
push
xlat
xor
add
shlb
ret
xor
add
xor
inc
arpl
mov
xchg
jb
clc
cmpsb
js
fstp
push
jg
stc
sub
aas
adc
sub
sarl
rcll
idivl
adc
sbb
into
push
int
aaa
and
push
dec
das
lods
aas
push
dec
adc
insl
fs
aad
pop
out
push
push
push
ljmp
jbe
jle
push
pop
data16
or
mov
les
pop
stos
mov
imul
sbb
push
movsl
orb
push
jae
test
sahf
rcrb
daa
dec
test
leave
les
cmp
shl
pop
ja
hlt
xchg
out
lea
and
pop
movsl
nop
push
mov
sub
je
insb
mov
subl
mov
fldenv
popf
fimull
decl
and
ret
mov
sbb
popf
call
loop
lcall
xchg
mov
xlat
imul
aam
leave
out
int3
mov
fidivrs
ret
cmc
xor
lahf
imul
mov
push
or
mov
js
mov
not
and
std
call
mov
xchg
int3
scas
in
inc
aaa
loop
test
movsb
sub
int
cld
cs
jbe
mov
loop
addr16
push
push
dec
xor
inc
idiv
dec
push
pop
jae
push
mov
shr
in
je
bound
cmc
stc
js
push
imul
stc
lods
mov
add
fcmovne
adc
shrl
nop
mov
enter
sub
inc
xorb
ret
shlb
ret
cs
mov
mov
jmp
mov
movsl
incl
fsubrs
inc
dec
js
mov
out
test
mov
aaa
dec
mov
aas
cmpsl
xchg
xchg
xchg
cmp
mov
pop
ret
andl
jo
sbb
push
mov
shrl
icebp
mov
adc
in
paddusb
xor
mov
shll
mov
or
daa
pop
lods
mov
or
dec
sbb
test
xor
loopne
add
outsl
pop
insb
inc
sbb
leave
addr16
mov
adc
sahf
ds
adc
dec
and
cmp
mov
pop
mov
mov
sbb
rolb
fcmovnbe
xchg
ja
xor
pop
add
shlb
out
fwait
popa
inc
cmovle
or
push
push
pop
push
std
or
xor
loop
sahf
dec
lock
fdiv
out
loope
sbb
insl
shll
orl
pushf
fdivl
clc
cwtl
sbb
aaa
or
scas
cmp
lret
xor
push
int
mov
xor
cltd
leave
cmpsl
mov
xlat
cmp
mov
xchg
add
adc
lds
dec
jmp
lcall
mov
stc
cs
lahf
cmp
mov
es
loop
in
iret
pop
mov
sbb
mov
ret
or
push
lcall
lcall
add
shr
inc
out
xchg
adc
and
jg
jns
cmpsb
std
fidivrs
mov
push
cmpsl
pusha
loope
xor
mov
sbb
and
adcb
mov
push
mov
jnp
push
hlt
jmp
push
imul
imul
lcall
faddp
push
clc
jl
push
push
mov
cmc
in
adc
outsb
sub
jge
cmp
aam
jno
out
cmp
shlb
aam
mov
dec
adc
bound
ja
insb
mov
fidivrs
leave
or
mov
cli
jae
movsb
adc
inc
add
addr16
mov
mov
push
mov
add
popa
fcomp
xchg
add
push
cmp
nop
daa
and
adc
ja
dec
clc
xchg
mov
dec
xchg
fsubr
push
jp
mov
aas
rcrb
pop
js
aas
or
scas
push
dec
inc
xlat
inc
popa
or
dec
rcrl
cmp
pop
push
xchg
adc
mov
notb
clc
adc
cmpsl
push
subl
rol
movsl
xchg
pop
mov
xlat
sbb
cmp
mov
in
div
ret
add
out
ss
and
jnp
xchg
out
vfrczps
inc
sub
leave
xor
idiv
pop
jae
jnp
pop
push
lods
add
std
add
hlt
movsb
inc
jge
or
out
int3
pop
fisubrl
xor
xchg
mov
xlat
xchg
fistpl
pop
iret
out
cs
mov
inc
jae
and
fstpt
push
or
push
enter
dec
ss
jp
sti
arpl
sbb
cmp
div
and
push
hlt
jmp
clc
jp
das
mov
aad
jbe
inc
cmpb
clc
push
mov
sub
dec
xlat
adc
fildll
sarl
daa
ret
pop
xchg
push
mov
inc
xor
aam
imul
or
cli
inc
inc
pop
dec
mov
insl
cmp
cmp
test
push
cs
xor
dec
frstor
pop
push
pop
subl
cmpb
sahf
shll
out
js
out
mov
push
stc
lds
outsb
and
inc
movsl
pop
std
push
sbb
adc
inc
jl
xchg
mov
mov
mov
test
leave
int
mov
xor
sub
aam
lret
mov
push
shr
es
movsb
dec
fs
mov
mov
xlat
repnz
loope
adc
daa
mov
stc
loope
pop
inc
add
lods
adc
jb
inc
push
sbb
adc
lahf
xor
test
shlb
je
or
mov
aam
sbb
push
lcall
pusha
ja
xchg
cld
xchg
into
mov
sbb
mov
ja
out
cmpsb
mov
jae
mov
adc
mul
xchg
bound
ss
dec
into
es
pop
pop
bound
pop
nop
js
add
rorb
cs
inc
hlt
lock
xchg
push
push
ss
fmuls
push
mov
adc
dec
les
loope
and
mov
std
mov
mov
test
shlb
int3
sub
mov
add
fisubrs
dec
or
mov
scas
das
int
and
cmpsb
push
xor
outsl
adc
jecxz
test
lods
jo
pop
ret
jo
lea
fcmove
in
mov
scas
and
inc
lods
sub
sahf
or
mov
add
jg
outsb
mov
sbb
clc
into
pushf
cmp
xor
bsf
mov
push
stc
xor
pop
lret
push
dec
sub
stc
xor
mov
and
pop
mov
mov
and
mov
push
sub
cmovne
insb
lock
lcall
sahf
pop
out
xchg
dec
sub
arpl
push
mov
dec
mov
jge
sbb
mov
cmp
fistpl
pop
insl
out
lret
ss
inc
and
and
and
sti
mov
pop
push
mov
insb
and
mov
cmp
or
addr16
clc
pusha
xchg
dec
outsb
jbe
icebp
pop
in
call
sarl
pop
subl
and
mov
inc
push
adc
mov
xlat
jb
enter
les
push
add
pop
add
stos
stos
cmp
ret
dec
jecxz
shlb
inc
std
fld
stos
pop
out
pop
fwait
ret
imul
sbb
push
dec
xchg
xchg
and
xor
xchg
mov
mov
in
mov
aas
xor
scas
mov
sub
sub
adc
fcompl
or
out
pop
or
push
in
add
dec
mov
aad
aam
sub
push
shll
mov
sti
xor
js
cld
stos
stos
cmpsb
pop
aam
imul
push
push
jmp
dec
jo
xor
mov
push
in
leave
xor
cmp
adc
pop
out
cmp
jp
sub
testl
inc
call
scas
xchg
lods
fnsave
std
rolb
mov
pop
testl
insl
cmp
sar
nop
das
icebp
cmp
mov
jle
push
pusha
stos
push
jmp
sub
xchg
ret
testb
nop
add
push
shrl
sub
loope
movsb
ret
add
cmp
jle
push
lea
stos
aad
adc
lds
lods
cmpsb
outsb
or
rcll
es
inc
outsb
jo
mov
sti
mov
xchg
das
icebp
out
int
negb
xchg
pop
mov
or
inc
imul
jno
rorl
sbb
ds
push
scas
mov
call
lcall
lea
gs
repnz
loopne
stc
out
cs
mov
push
lea
and
mov
fdivs
cld
jmp
mov
lcall
xchg
bnd
mov
inc
ljmp
sbb
xchg
cmp
ret
xor
mov
dec
and
test
adc
es
xchg
lret
out
std
lret
dec
inc
frstor
push
ret
xchg
js
xor
jae
loopne
es
dec
push
popa
mov
out
sub
enter
inc
and
push
push
dec
fs
xchg
ljmp
pop
enter
ret
cwtl
movsl
lods
insb
ja
sbb
dec
add
dec
xchg
mov
aam
cmc
fldt
andl
add
iret
mov
stos
jbe
test
pusha
scas
dec
test
sti
aam
pop
xchg
pop
jp
repz
mov
add
popf
dec
mov
arpl
das
xor
xchg
add
mov
inc
cmp
arpl
push
adc
inc
dec
and
or
lods
inc
roll
sub
xchg
flds
xchg
dec
adc
fdivrs
jbe
je
ljmp
clc
mov
mov
xor
add
cmp
je
mov
xor
mov
sub
add
mov
mov
xor
add
imul
cmp
ja
mov
mov
mov
sub
xor
xor
add
div
mov
mov
mov
xor
add
cmp
jbe
mov
xor
add
mov
mov
mov
xor
add
imul
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
add
movl
mov
mov
mov
movl
movl
mov
mov
xor
add
jmp
movl
movl
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
jmp
dec
inc
sub
scas
push
or
aas
dec
pop
addl
mov
cltd
xor
leave
in
hlt
das
dec
inc
lea
cmp
adc
mov
pushf
xor
pop
or
stc
adcb
dec
or
lods
js
in
mov
filds
negb
mov
sub
in
jo
enter
mov
and
pop
sub
ljmp
aas
mov
ds
xchg
stos
ficompl
jbe
cmp
rolb
xchg
xchg
roll
notb
js
sar
shll
stc
test
popf
stos
xchg
lods
dec
mov
xchg
inc
test
scas
leave
dec
dec
clc
or
loope
cmpsl
jecxz
les
mov
aam
movl
les
jl
test
xor
xor
push
cmpsb
xor
push
cwtl
pop
pop
lea
popf
sub
jo
fdivrl
roll
leave
jbe
test
push
dec
or
fs
test
inc
mov
rol
adc
movsb
xchg
xor
orb
movsb
outsl
mov
lods
shlb
rorb
xchg
xchg
push
fisubs
mov
mov
rcr
fisttps
jle
pop
jnp
jbe
sarb
push
cld
pop
push
push
punpckldq
pop
add
push
jae
popf
lcall
cmc
lods
push
lds
push
or
sbb
cmp
mov
insl
sbb
es
das
das
pop
seta
mov
push
pop
adc
dec
mov
cmp
mov
in
xchg
subl
jnp
pusha
je
int3
pop
or
stos
pop
jns
pusha
and
aad
mov
roll
dec
and
jmp
push
add
lahf
xlat
in
add
sbb
gs
shrl
pop
or
sub
sub
ret
pop
dec
xchg
lods
push
loopne
xor
outsl
data16
xchg
jg
adc
insl
mov
aad
pop
jp
movl
mov
ret
cwtl
out
and
jbe
and
stos
cmp
loop
lret
push
cmpsb
pop
xor
add
jb
mov
mov
pop
or
notb
xor
mov
repnz
sub
scas
cltd
pusha
rorb
fwait
inc
outsl
xchg
daa
movsl
lea
stc
xchg
loope
sahf
xchg
dec
push
sub
dec
push
fdiv
xchg
mov
sti
jmp
pop
outsb
push
scas
fisubrl
dec
xchg
add
pushf
cli
push
push
out
jo
lcall
js
xor
movsl
dec
insb
add
pop
arpl
andl
int
push
adc
scas
ror
or
xor
cmp
jg
es
cmp
pop
pop
jp
and
xchg
mov
add
sbb
test
xchg
jge
sub
jg
pusha
lret
sbb
push
jb
and
jg
jne
dec
push
sbb
push
fwait
xchg
pop
aaa
out
int
xor
adc
sbb
dec
xor
mov
pop
adc
sub
movsb
cmp
shlb
jo
in
rcrl
lret
dec
bound
jle
adc
aas
aaa
cmc
mov
es
and
adc
and
inc
or
into
pop
stos
cmp
fstp
into
add
adc
xchg
ja
mov
mov
pop
jb
push
lret
nop
inc
imul
mov
fdivrs
mov
inc
dec
or
xor
loopne
xchg
add
mov
adc
in
mov
dec
jmp
mov
mov
xchg
sarb
jle
int
movsl
not
sub
jmp
ja
push
mov
popf
jb
shlb
stos
inc
mov
jl
in
mov
test
outsb
popa
xor
jno
jle
xor
push
cmc
xchg
cmpsl
mov
inc
lret
insb
mov
xorb
sbb
lahf
test
rcrl
testb
test
mov
repz
inc
fcoms
loop
jmp
shll
shl
cwtl
lods
inc
dec
xor
add
and
sub
lret
aam
xor
enter
rorl
mov
adc
xorl
sub
shll
sub
cld
cmp
rcl
aaa
push
push
dec
insl
repz
cmp
pusha
pop
inc
aaa
jmp
sahf
and
repz
sub
test
mov
mov
testl
push
push
cmpsb
pushf
aam
mov
pop
push
out
xor
nop
outsl
outsb
das
xchg
stos
repz
insl
jmp
mov
dec
cmp
outsl
jecxz
or
popa
jne
in
jb
rcr
test
mov
mov
push
int
aaa
std
push
sub
push
and
jnp
scas
lods
mov
adc
and
ja
sbb
leave
pop
cmp
xchg
test
pop
mov
aad
mov
rcr
repnz
sbb
xor
cmpsl
mov
sbb
and
test
jno
lret
and
sub
loop
push
pop
jmp
mov
xor
std
cmp
push
pusha
aam
test
es
hlt
adc
lds
test
jge
and
mov
fs
xor
cmp
divb
dec
inc
xchg
cmp
mov
outsl
lds
in
lods
lock
mov
sti
mov
jg
pop
dec
sub
clc
pusha
out
xor
or
push
pop
scas
hlt
xchg
mov
xor
mov
or
jne
cltd
lods
shr
call
mov
adc
subl
dec
jp
outsb
push
add
sahf
filds
fimuls
iret
orb
aad
pusha
cld
fistpll
adcb
cmpsb
jbe
sbb
aas
rcr
xor
scas
add
sbb
sbb
divb
aaa
test
mov
add
lret
bound
iret
jmp
mov
lea
xlat
mov
mov
mov
adc
jmp
pop
inc
icebp
add
jmp
cmp
xchg
sahf
cmpsl
in
cmp
cmpsb
xchg
fstpl
imul
lea
or
mov
xchg
jbe
cmp
aam
xchg
dec
aad
and
inc
movsb
ud0
ljmp
jmp
fldl
lds
dec
cmp
mov
sahf
out
leave
adc
iret
mov
leave
gs
rorl
mov
out
sbb
int
cld
ja,pt
test
dec
fmul
cs
lcall
mull
pushf
xchg
or
pop
cmp
cli
hlt
mov
outsl
and
lahf
loopne
add
stos
add
sub
out
repnz
push
dec
neg
leave
sub
popa
pop
cmp
fwait
and
pop
outsb
repnz
stc
test
mov
dec
sbb
xor
or
sahf
pusha
ljmp
test
repz
jmp
mov
mov
lahf
rdpmc
in
repnz
pop
jbe
push
daa
jmp
mov
hlt
cmpsb
ret
push
les
push
push
cs
lea
mov
out
mov
inc
pop
xchg
adc
cmp
pop
xchg
jno
or
mov
push
pop
mov
cld
or
cmp
jge
shr
cmpsl
lcall
add
xchg
lret
repnz
and
push
mov
bound
cltd
jp
leave
xor
imul
es
sar
jg
pop
inc
xchg
dec
xor
mov
cmp
stos
cld
int3
pop
adcb
aam
out
jge
in
push
notl
pop
jg
movsb
movsl
xor
inc
xor
stos
sbb
fisttpl
cmpl
out
mov
sbb
jbe
rolb
stos
sahf
mov
xchg
mov
and
fmul
pop
or
enterw
mov
mov
js
cli
sbb
rorl
push
mov
adc
movsb
into
sbbb
test
cli
jmp
push
lock
test
std
mov
ja
pushf
test
mov
mov
les
icebp
test
rolb
xor
sbb
dec
or
stos
and
dec
jns
mov
lcall
cwtl
pop
or
sub
gs
sub
inc
das
sarl
fnstsw
lret
mov
or
jne
jno
insb
push
and
mov
test
mov
mov
int
inc
mov
jle
xchg
outsl
mov
jae
insl
sbb
nopl
mov
inc
fstpt
fstps
jle
push
push
sub
mov
repz
sti
pop
xchg
xchg
mull
lret
fists
test
aaa
icebp
jb
test
push
bound
push
push
sub
or
sahf
mov
bound
inc
lods
add
or
pop
cmp
xor
cmp
push
fcoms
lods
imulb
jecxz
out
jp
sbb
insb
inc
out
call
cmp
add
fcmove
or
mov
pop
mov
cmp
mov
push
sub
pop
es
addr16
mov
sub
cmp
mov
int
and
cltd
and
add
ja
lods
test
xlat
pop
ljmp
and
or
push
dec
mov
dec
je
pop
sub
fisttpl
mov
xchg
into
sub
lods
cmp
or
fnstsw
adc
xchg
popf
pushf
pushf
dec
or
ja
or
fidivrl
pop
push
bound
pop
dec
les
mov
fs
fmull
dec
adc
adc
mov
sbb
clc
and
mov
mov
push
pop
cmp
and
aad
test
fdivl
mov
scas
jecxz
rol
imul
mov
and
mov
fdivr
sahf
cmp
jno
jne
jb
jp
sbb
mov
xor
jge
lods
enter
movsl
mov
or
ja
dec
rcl
push
repnz
sub
jl
xor
xor
inc
ror
pop
mov
das
nop
adcl
mov
ss
push
mov
jne
mov
jns
cmp
repz
add
cs
mov
insl
icebp
cmpsl
cli
mov
mov
andb
inc
dec
cmp
out
stos
mov
mov
jae
fwait
push
fiaddl
xor
hlt
loop
in
sub
dec
lcall
pop
loop
icebp
scas
mov
mov
addr16
push
cmp
test
sahf
dec
out
jge
or
mov
aaa
xchg
mov
sbb
inc
ret
inc
jmp
or
and
inc
lret
cmp
test
xor
das
cmp
bound
test
sbb
push
xchg
rol
pop
aad
add
mov
lret
mov
ds
xlat
xchg
mov
mov
pop
in
sbb
arpl
mov
pop
stos
lods
ljmp
js
inc
push
xchg
ds
repnz
jnp
add
jp
out
cmp
xor
adc
xchg
cmpsl
jle
popa
lds
jg
jp
cmp
ds
in
shl
push
push
cmc
cmp
dec
leave
movsl
cmc
pushf
out
scas
cmpsl
xor
loope
jo
cltd
inc
repz
out
mov
pop
out
call
add
pop
outsb
mov
mov
inc
mov
cmp
test
push
loop
sub
lret
sub
xchg
fbld
ljmp
pusha
xor
stos
adc
pop
stos
icebp
mov
outsl
xor
xchg
mov
jge
xchg
cmp
loopne
add
rcrl
js
dec
push
mov
sub
push
ja
and
test
shlb
pop
add
insb
fidivl
and
cs
add
insl
jmp
negb
stos
xor
insb
mov
mov
mov
mov
dec
jnp
dec
add
int
fists
ds
in
xchg
fldl
cmp
movl
sub
imul
fisttps
out
fwait
xchg
xor
test
xor
popa
ja
pcmpeqd
scas
mov
and
or
inc
push
jne
cld
xchg
mov
sbb
sbb
out
xchg
mov
lea
das
aam
mov
mov
add
pop
insl
sbb
add
sub
insb
and
lods
js
in
push
push
sbb
fldt
add
adc
insb
shl
adc
xor
xchg
repz
in
mov
fidivl
sub
outsb
loope
call
add
pop
add
jl
lret
aas
xchg
pop
mov
divb
sub
out
xchg
and
sub
cmp
mov
cmp
xor
cmpsb
and
fldcw
push
jl
in
daa
dec
rol
iret
inc
lea
jle
divl
bound
ret
or
inc
cld
popl
inc
push
clc
pop
subb
mov
into
add
adc
enter
mov
mov
push
sbb
xor
sbb
decb
and
add
adc
pusha
or
stos
clc
mov
jmp
loope
jne
pop
push
in
popf
pop
addb
fcoms
lret
lahf
xchg
sbb
jns
pop
icebp
pop
pop
imul
mov
movsb
xchg
in
lahf
je
stc
fldenv
arpl
fistl
push
and
scas
lret
sub
out
xor
popa
mov
fdivrs
in
add
repnz
arpl
inc
sub
fcoms
or
clc
cmpsb
push
inc
add
insb
jns
shrw
cmp
dec
jns
and
out
lods
in
fmuls
xor
jno
jecxz
and
and
push
bound
cld
mov
dec
push
je
mov
aam
jnp
stos
sub
fwait
lds
mov
mov
or
out
mov
xchg
leave
push
jb
mov
movsl
push
push
gs
fildl
add
daa
mov
in
push
mov
adc
clc
shrl
sbb
je
mov
cli
and
mov
jo
dec
xchg
pusha
push
jp
push
sti
mov
aam
push
cli
rcr
adc
push
mov
insb
setno
std
scas
xchg
sti
xor
repz
mov
cmp
aas
lret
mov
cmp
out
in
jno
mov
ss
negl
subb
sbb
inc
ds
push
mov
aad
mov
hlt
outsl
jno
adc
imul
mov
mov
cmp
imul
jmp
call
xchg
lret
or
mov
loopne
cmp
ret
pushf
adc
jge
repz
gs
cmc
mov
xchg
or
cmp
mov
addr16
jmp
dec
add
js
and
push
outsb
xchg
pushf
ja
jno
lods
adc
mov
ja
xor
sti
fbstp
pop
loope
pop
sti
std
cltd
mov
sar
sub
loop
add
fldl
or
add
mov
pop
or
rorl
pop
add
pushf
push
mov
jo
adc
mov
pop
and
test
sbb
loopne
pop
xchg
mov
xchg
adc
cli
rclb
mov
arpl
aad
aam
test
cmpsl
mov
xchg
mov
xchg
adc
inc
test
jge
add
xor
push
cs
dec
cmpsb
stos
in
dec
cmp
push
andb
pop
mov
pop
stos
inc
fwait
or
into
pop
outsl
imulb
movsb
push
mov
cmpl
mov
push
lock
aam
cmpsl
mov
add
call
outsl
and
xor
adc
iret
mov
sub
in
dec
pop
lea
in
xchg
arpl
in
hlt
cmp
lea
add
out
adc
arpl
movl
and
mov
push
lret
lods
fiaddl
mov
iret
or
cltd
jl
and
cs
jo
jmp
das
lea
mov
pop
nop
mov
outsb
js
rcrl
insl
cmp
pop
js
xchg
push
icebp
cltd
sbb
int3
lgdtl
fs
insl
jae
and
jb
pop
mov
mov
movsb
inc
xchg
cld
pop
xchg
lcall
lea
fcoms
and
xor
add
imul
hlt
movsl
push
mov
pop
sbb
mov
fld
lods
outsl
fsubs
in
mov
mov
lret
mov
sbb
cmpsb
outsb
inc
repz
inc
pop
scas
cs
addr16
pusha
int3
imul
mov
cmp
iret
pushf
dec
cmp
sbbl
sahf
cli
pusha
addr16
or
cltd
push
sarl
movsl
out
loopne
cmp
and
pushf
mov
cwtl
rcrb
adc
insl
xchg
mov
loop
out
xchg
cs
fistps
je
rorl
xchg
pop
sub
sub
rcrl
js
cmp
sbb
out
adc
sub
je
pop
daa
lods
enter
shlb
push
cltd
push
jp
je
stos
sbb
pop
sbb
or
negl
xorl
mov
cli
or
insl
inc
loope
sub
lods
and
inc
pushf
sbb
pop
fsubs
jns
push
mov
ja
movsl
jle
repnz
xchg
xchg
rolb
out
add
cltd
cmp
fsubl
movsl
mov
inc
xor
loope
lret
cmp
iret
mov
lret
ds
iret
fisubs
fidivs
xlat
iret
daa
lcall
jno
xchg
inc
shrl
xchg
jmp
jae
xchg
jbe
push
jmp
orl
adc
out
shlb
cs
bound
cmp
inc
cs
xchg
subl
sbb
dec
cmp
bound
add
sarb
add
icebp
add
shlb
out
aaa
push
jnp
out
icebp
dec
pop
sub
push
xor
jb
push
negl
mov
stos
aas
outsb
test
insl
stos
inc
into
es
std
cs
lret
cld
ret
stos
out
pop
dec
repz
mov
lock
int
fsubs
outsl
enter
push
jmp
fnstsw
jg
lods
sbb
inc
les
xlat
and
dec
jno
movsb
movsb
xor
sub
jo
mov
mov
test
and
and
mov
notb
sbb
stos
adc
xor
sbb
inc
jmp
cmpsl
cmp
mov
int3
sbb
cmc
pop
mov
call
sub
neg
push
jne
mov
pop
dec
in
out
data16
sbb
xor
das
gs
dec
or
jmp
shrb
fstps
and
xor
popa
or
pushf
clc
mov
adc
arpl
jbe
xchg
push
pop
mov
imul
fiaddl
stos
fwait
xlat
lcall
add
out
and
lods
daa
mov
loop
mov
bound
mov
or
push
in
pop
je
cmpsl
inc
cmp
sbb
jo
imul
pop
addr16
lret
insb
sbb
cwtl
jae
and
sti
xchg
int3
pop
idivb
inc
movsb
or
aaa
push
cmp
push
rcr
mov
cmp
fldt
movsl
fcmovu
mov
daa
add
ret
mov
mov
mov
xchg
xchg
mov
or
xchg
movsl
andl
xchg
jmp
add
push
movsl
xchg
mov
fwait
pusha
nop
push
out
cltd
fsubl
insl
stos
sbb
mov
sub
cmp
adc
ret
dec
pop
or
inc
into
cmp
in
cmpsb
sbb
sbb
sbb
xchg
dec
movsb
es
stos
pop
fcmovnb
xor
mov
nop
pop
call
bound
insl
and
add
inc
jno
adc
mov
push
sbbl
lret
sub
out
and
xchg
inc
out
xchg
jl
repnz
push
inc
lods
push
sbb
arpl
or
cmpl
lret
xchg
jo
push
jle
push
sahf
outsb
lods
mov
lea
jg
inc
jge
pop
pop
hlt
test
cmc
jb
inc
dec
inc
dec
xor
pusha
dec
mov
cmc
ret
in
cmp
dec
mov
cmp
pop
or
fnstsw
fcoms
dec
imul
cmpsb
out
xor
xor
stc
xchg
mov
ror
xchg
cmp
mov
cmp
aas
int3
in
or
push
pop
clc
int3
shlb
xchg
addr16
push
xchg
test
scas
and
cli
and
mov
push
jg
shlb
in
sbb
inc
jle
ss
int3
stc
sbb
movl
mov
jmp
push
push
cmp
outsl
xlat
adc
mov
jns
pop
jl
jecxz
adc
iret
sarb
inc
je
imul
or
and
push
xor
dec
mov
sub
out
mov
ficoms
cs
adc
leave
xchg
or
and
fdivl
sbb
mov
movsb
sbb
testb
hlt
xchg
sub
cmp
dec
or
push
aas
push
daa
or
cli
dec
cld
push
lea
pop
cld
inc
jno
sarb
pushf
frstor
xor
inc
int3
ret
aaa
mov
test
out
aam
sub
int3
lea
push
adc
lods
adcl
xor
jp
push
mov
jge
add
idivl
mov
jnp
mov
mov
daa
bound
rcrl
stos
xor
dec
loope
sbb
inc
jnp
sub
pop
xchg
mov
jnp
and
mov
xor
faddl
push
stos
cmp
or
xchg
push
or
cmp
mov
sbb
lret
adc
cmp
push
mov
pop
jl
push
loope
pop
xor
mov
sti
inc
stos
push
inc
jmp
sarl
xor
fcmovbe
shlb
cld
mov
add
in
add
jp
xchg
cltd
out
xchg
push
cmp
mov
insb
sbb
outsl
fisttpll
aaa
mov
aaa
lahf
jp
push
test
iret
jnp
cmpsb
mov
cmpb
lcall
and
movsl
clc
add
iret
movsb
cmp
enter
scas
popa
lods
fistpll
mov
in
test
ja
adc
daa
add
xchg
sub
and
cmp
stc
inc
adc
int3
aas
lret
pop
outsl
xchg
cmp
or
js
out
jp
insl
scas
fnsave
fldl
cmpl
sahf
sub
lret
sbb
sub
les
push
stos
ss
pop
into
pop
pop
lret
repz
adc
fsubl
push
fsts
and
mov
mov
pop
das
inc
clc
or
push
test
clc
and
arpl
jns
lret
movsb
leave
movsl
inc
and
cmp
movsb
cmp
and
pop
insl
mov
or
and
and
ja
imul
xchg
icebp
ret
es
ss
les
add
xchg
lods
loop
inc
pop
nop
pop
int
in
and
fildl
incb
rcr
iret
jb
psubusb
loop
out
xchg
into
ror
nop
repz
ja
sbb
mov
xchg
and
lea
clc
insl
ss
dec
test
insb
dec
mov
dec
or
inc
in
rcrb
mov
xchg
and
outsb
lds
cmp
rcr
mov
dec
add
xrelease
fsubl
mov
test
lea
adc
mov
xor
mov
pop
adc
jmp
mov
imul
jmp
cmpsl
pusha
sti
or
dec
push
mov
les
fsubrs
into
fisttps
in
push
sahf
rolb
stos
pop
pop
stos
out
sub
cmp
pop
aam
push
repz
mov
jge
mov
lahf
push
mov
shrb
sub
adc
fidivrs
and
jns
gs
lcall
loop
loopne
push
or
dec
aad
sarl
aad
shlb
out
loopne
jns
pop
jg
stos
shlb
push
aad
imul
lret
mov
cmp
stos
and
iret
clc
imul
pop
push
pop
sbb
cli
mov
pop
mulb
xlat
cmp
and
test
movsl
sbb
lret
sbb
int
jnp
call
into
mov
enter
adcl
pop
dec
cmp
inc
cmpsl
mov
dec
push
mov
mov
repnz
pop
jo
imul
xchg
mov
mov
iret
adc
std
sbb
mov
dec
sbb
ljmp
je
jb
pop
sbb
cmpl
dec
sahf
inc
pop
push
fs
mov
outsb
es
lea
and
fwait
popa
in
jecxz
mov
xlat
arpl
dec
pop
jnp
jecxz
les
shrb
jne
imulb
mov
xchg
aas
xor
inc
lret
int3
mov
loope
in
ja
xchg
stos
fucom
movsb
stos
dec
mov
mov
je
mov
pop
aaa
xchg
scas
popf
inc
subb
xchg
xchg
mov
je
sahf
lea
add
and
out
setb
das
and
dec
xchg
mov
loope
cli
aaa
push
mov
sub
cwtl
cmp
pop
inc
and
dec
das
in
or
xchg
ds
ret
test
jge
and
mov
and
xchg
int
mov
mov
movsl
xlat
call
or
xchg
nop
or
lret
aad
pop
iret
data16
test
cmp
fwait
lods
movsl
pop
add
mov
sahf
loopne
outsb
and
xor
aam
add
sub
addr16
jno
cmp
frstor
aas
and
in
int3
sub
mov
shr
adc
sbb
cli
dec
xor
jae
pushf
fdivl
mov
pop
sahf
arpl
mov
dec
push
sbb
lahf
mull
jle
pusha
stos
mov
rcrb
jae
mov
in
adc
lcall
mov
sbb
add
les
mov
add
cmpsb
int3
fldenv
mov
stc
xor
rcr
ret
test
and
enter
test
shlb
std
cmpsb
inc
pop
aam
cmp
fwait
cmp
or
dec
insl
lret
stos
adc
mov
mov
and
out
scas
movsb
imul
add
jle
and
outsl
sahf
jo
jl
imul
daa
jle
adc
mov
int
into
dec
or
or
pop
incl
mov
push
inc
mov
or
inc
loopne
test
xchg
dec
mov
mov
data16
xorl
in
dec
outsl
sub
and
or
cmpb
inc
fwait
inc
xlat
dec
or
lret
cmp
stos
repnz
btc
xchg
mov
mov
shl
iret
cs
xchg
sti
mov
sti
mov
inc
xchg
mov
jmp
cli
mov
jecxz
mov
scas
int
out
neg
mov
mov
cmp
xchg
stc
test
inc
mov
fwait
rcrb
add
mov
int3
mov
jge
dec
mov
in
jo
sub
pop
pop
fcoms
insb
mov
xchg
dec
enter
sti
jl
out
dec
loopne
jbe
jno
jns
pop
cmp
repz
sbb
orb
test
test
outsb
sbb
imul
add
xor
mov
ret
jg
adc
xbegin
es
ficompl
test
pop
arpl
add
push
xor
push
push
enter
xchg
imul
cli
inc
xor
out
jo
pop
jns
jmp
fsubrs
mov
test
adc
out
sbb
das
lcall
sbb
xorl
jnp
fnstsw
push
ja
jnp
and
sub
jns
sub
sbb
shlb
xor
add
aad
sub
dec
xlat
inc
lret
and
mov
loope
ja
pushf
imul
dec
rolb
jg
push
scas
aad
xor
mov
sub
addb
and
mov
and
in
push
dec
fnstsw
xchg
mov
insb
inc
mov
popl
push
aad
and
pop
push
jmp
outsl
aas
movb
lock
aam
aas
sub
jmp
aad
push
adc
in
ja
mov
mov
je
es
fistps
pop
cmpsl
hlt
call
xchg
add
cmp
or
cwtl
adc
stos
jp
sub
ficompl
pop
pop
lret
xchg
cmpsl
mov
sahf
add
sti
pushf
pusha
sbb
mov
jo
mov
adc
pop
cmc
push
cmp
es
mov
cmp
out
xor
push
sbb
or
lret
sbb
jo
outsb
mov
test
push
add
or
jg
cmp
pop
xchg
jecxz
jbe
stos
jne
jnp
in
outsb
and
fcompl
outsl
push
adc
jmp
and
jecxz
dec
out
daa
cmpsl
mov
xor
sub
cmpsl
das
outsb
clc
push
push
js
jge
rolb
lcall
jecxz
loope
xor
xchg
inc
adc
pop
or
repz
sahf
stc
add
mov
jns
negl
jecxz
or
adc
mul
sbb
xchg
lret
inc
fwait
decb
inc
jecxz
add
mov
sti
stos
outsl
stos
aam
hlt
ss
movsb
aam
and
hlt
jmp
pushf
fistl
pop
in
and
mov
or
mov
stos
and
outsl
cmp
push
mov
test
mov
cmpsl
jecxz
ja
xchg
movl
or
adcl
mov
inc
xor
fs
fdiv
mov
cmc
pusha
mov
inc
fstl
jns
int
mov
add
adc
aas
sub
in
jecxz
idivl
dec
xor
std
sub
movsl
icebp
ret
test
cmp
jbe
cmp
mov
enter
cli
lods
loope
adc
mov
out
cwtl
pop
mov
sbb
add
lret
push
cmpsb
adc
mov
xchg
pop
mov
icebp
insb
and
gs
mov
icebp
jecxz
rcrl
fildl
ljmp
push
std
insl
cmp
std
add
je
les
and
xlat
pop
das
dec
outsb
sbb
je
mov
into
jns
fnstenv
dec
dec
sbb
cmp
insl
push
rcl
jb
fcomp
stos
mov
add
pop
jns
outsl
shl
xchg
pop
std
inc
cld
testb
and
mov
ficomps
les
lret
sub
leave
sbb
fistl
push
shlb
ret
pop
jmp
inc
addl
add
mov
sbb
mov
imul
push
cmp
pop
cwtl
inc
shll
add
push
stc
imul
or
or
fstps
int
push
cmpsb
xor
stos
mov
mov
pop
enter
in
out
mov
mulb
xor
stos
ja
aam
aaa
inc
je
mov
dec
aas
int
gs
dec
cmp
jg
jp
push
sbb
or
fadds
pop
rcrb
jno
push
fisubl
popf
fistpll
call
int
sahf
pop
movsl
mov
adc
idivl
rcr
add
add
nopl
jp
andl
xor
adc
rorl
mov
pop
mov
jmp
dec
add
cld
adc
inc
mov
clc
ret
icebp
cmp
or
or
jb
mov
mov
mov
xor
xor
add
add
imul
add
mov
mov
mov
cmp
jb
mov
mov
xor
add
imul
mov
xor
add
or
mov
xor
add
mov
xor
add
mov
lea
jmp
mov
mov
xor
lea
mov
jmp
mov
mov
xor
lea
lea
xor
cmp
jne
decl
jne
mov
mov
mov
xor
mov
xor
mov
xor
mov
mov
xor
mov
mov
xor
add
pop
pop
pop
leave
ret
sbbl
xor
sbbl
inc
ret
push
mov
sub
andl
mov
inc
mov
cmpl
jbe
jmp
push
push
push
push
call
cmpl
jb
movl
push
movl
mov
push
andl
mov
inc
mov
cmpl
jbe
jmp
pushl
call
cmpl
jb
mov
orl
xor
subl
push
addl
mov
andl
add
mov
mov
addl
test
je
movl
cmpl
je
cmpl
jle
jmp
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
sbb
mov
mov
and
mov
xor
movl
cmpl
je
cmpl
jg
jmp
push
push
pushl
pushl
pushl
push
call
mov
dec
mov
jmp
add
mov
sub
mov
add
xor
adc
add
add
mov
mov
add
xor
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
ja
jmp
push
pushl
push
push
call
jmp
add
mov
movzbl
add
mov
mov
xor
mov
or
add
andl
mov
inc
mov
cmpl
jg
jmp
pushl
call
cmpl
jb
mov
andl
sub
subl
lea
xorl
xor
adcl
xor
cmp
je
mov
sbb
mov
mov
xor
add
movl
cmp
movl
jne
xorl
pushl
call
xor
mov
mov
mov
sbb
mov
sbb
mov
xor
add
movl
cmp
je
pushl
pushl
movl
call
mov
adc
mov
adc
mov
subl
xor
adcl
add
cmp
movl
je
xor
add
and
mov
mov
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jb
jmp
push
call
cmpl
jne
mov
inc
mov
jmp
mov
mov
mov
adc
mov
mov
orl
add
and
mov
mov
andl
jmp
xor
or
inc
mov
cmpl
jae
cmpl
jbe
jmp
push
push
push
push
call
cmpl
jne
mov
inc
mov
jmp
mov
add
mov
adcl
mov
andl
mov
inc
mov
cmpl
jbe
jmp
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
add
mov
jmp
mov
mov
add
mov
mov
mov
xor
add
cmp
je
jmp
mov
mov
xor
add
cmp
mov
je
mov
xor
add
cmp
je
lea
push
pushl
pushl
call
mov
mov
xor
add
cmp
je
mov
movzwl
mov
mov
mov
jmp
mov
xor
lea
jmp
mov
xor
add
jmp
mov
add
mov
mov
test
je
movl
push
xor
pop
add
push
pop
push
dec
pop
dec
xchg
sub
xchg
dec
mov
imul
sub
mov
mov
xor
add
jmp
mov
mov
mov
mov
xor
add
xor
div
mov
xor
lea
mov
mov
mov
mov
mov
xor
jmp
mov
mov
pop
loop
dec
fstl
cmp
addl
inc
es
mov
pop
addb
scas
cmc
xchg
push
lds
xchg
xor
jmp
xor
xor
or
dec
cmp
int
inc
or
cmpsb
mov
push
and
push
jle
loope
inc
mov
data16
add
outsb
cmp
inc
jle
das
imul
inc
xor
divl
xor
and
sbbb
cs
mulb
push
sub
mov
dec
scas
adc
in
xor
in
ret
pop
xchg
das
dec
mov
es
sub
das
vcvtsd2si
in
test
aam
pop
push
dec
cli
add
or
neg
mov
in
sub
cmp
pop
orb
pop
sbb
es
pop
or
xor
inc
push
and
in
push
pushf
inc
sub
setl
inc
addl
and
xchg
pushf
outsb
pop
movsl
pushf
cmc
xor
or
addb
cmpl
sub
cmc
xchg
xchg
testb
and
dec
jg
inc
jle
loope
mov
mov
mov
add
lahf
jae
lret
adc
mov
stc
scas
inc
xchg
inc
inc
push
dec
add
add
mov
cmp
push
pop
mov
test
movsl
cmp
inc
jecxz
mov
jno
xor
xchg
xor
add
in
outsl
inc
mov
inc
jmp
push
xor
ror
jnp
xchg
shl
pop
mov
adc
mov
push
imulb
xor
mov
mov
xchg
dec
pop
int3
pop
hlt
mov
inc
mov
mov
nop
ds
enter
jno
inc
leave
push
adc
sub
orl
xor
sbb
scas
xchg
outsl
cltd
dec
xchg
fldenv
movsb
loope
adc
fwait
or
xchg
in
mov
fs
in
in
or
jnp
lret
dec
jo
shl
mov
cmpsb
es
fsubrl
xlat
mov
jno
cmpsb
pop
stos
into
test
push
cmpsb
inc
sbb
and
enter
sbb
push
mov
insb
mov
mov
popa
pop
out
jg
xor
sbbl
scas
icebp
mov
movsb
mov
cmpl
lock
pop
push
dec
and
dec
mov
ss
stc
mov
dec
adc
jo
xor
jg
shll
xorb
pop
mov
mov
test
fstpl
sbb
cltd
sti
movsb
sub
mov
cmc
cmc
jbe
push
fcompl
scas
pushf
mov
in
notb
cmpsb
dec
dec
test
mov
mov
jo
jb
jmp
jecxz
lods
xor
dec
outsb
leave
sbb
fstpl
mov
xchg
aas
xor
lret
outsl
shlb
xor
mov
cmc
mov
mov
xchg
sti
inc
aam
stos
fmulp
xchg
nop
pop
in
shrl
iret
into
addr16
add
adc
fwait
dec
insl
out
pop
pusha
out
idiv
jns
cs
lret
and
ficoml
sub
lea
and
jno
and
data16
lock
mov
sbb
dec
ja
mov
out
mov
lods
sbb
xchg
inc
dec
or
push
adc
inc
jae
nop
mov
mov
outsl
cmp
fsubr
repnz
dec
xchg
mov
pusha
and
cltd
addl
sub
add
sub
pop
loope
or
cmpb
sti
dec
outsb
lea
pop
mov
pop
adc
adc
popa
pop
lods
fnstsw
addl
push
dec
push
xor
jle
sbb
loope
shrl
dec
punpckhbw
mov
outsb
add
jne
mov
and
int3
xchg
mov
jbe,pn
outsl
xor
xchg
out
adc
mov
popa
cmpsb
outsb
and
cmp
or
inc
cmp
stos
rorb
mov
out
pop
testb
xchg
cmpsb
rcr
push
jp
jo
in
std
pusha
mov
xchg
into
jl
test
rolb
push
jge
orb
pop
xchg
fmuls
sub
mov
and
cltd
aas
adc
loope
xchg
xchg
pop
pop
add
gs
inc
adc
mov
inc
or
aad
imul
cmp
lahf
xchg
fisubs
cmc
inc
sbb
mov
test
bt
mov
or
push
in
nop
xchg
jnp
mov
mov
jb
adc
mov
jbe
cwtl
test
push
adc
lcall
mov
decb
shr
insl
push
insb
push
push
pushf
mov
mov
data16
sub
or
pop
ds
adc
and
mov
cmp
jnp
clc
sti
in
jns
xor
adc
mov
pop
push
pop
stc
outsb
test
gs
mov
jae
arpl
inc
aam
xchg
ljmp
loopne
jno
sarb
mov
pop
inc
loop
push
xchg
inc
test
roll
xchg
out
dec
adc
sub
dec
dec
mov
iret
jae
std
gs
adc
push
mov
std
ret
iret
clc
cltd
inc
sub
mov
cmpsb
aas
jmp
sub
mov
mov
dec
popa
ja
add
or
adc
push
test
shll
push
xchg
pop
adc
fs
add
jbe
das
sahf
inc
andl
cmp
arpl
xlat
roll
divb
lock
push
jmp
inc
inc
mov
pop
xlat
xchg
and
enter
push
or
xchg
mov
pop
pop
fidivl
daa
mov
jge
fldcw
sub
adc
scas
mov
clc
scas
lods
cmpsb
adc
subl
inc
jmp
repnz
fsts
mov
decl
cmpsb
xchg
hlt
insb
lret
push
jo
shl
cmp
push
cmpsb
stos
imul
fsubs
cmp
mov
or
add
mov
jmp
das
jl
aam
and
ja
pop
dec
out
int
xchg
into
push
add
int
xchg
rcrl
adc
xor
xchg
pop
xor
clc
sti
mov
scas
out
push
fisubl
cmp
test
inc
sbb
and
sub
mov
jge
sbb
jns
test
dec
jne
jae
jae
adc
cmp
pop
and
sub
xor
xchg
in
ja
and
mov
cmp
pop
mov
lcall
push
jl
sbb
ss
into
xchg
jmp
dec
cs
jg
js
jae
test
lahf
or
mov
pop
pushf
lcall
imul
mov
and
or
daa
sbb
ss
mov
out
test
cmp
xchg
cmpsb
movd
adc
mov
sbb
sbb
xchg
aam
std
ds
pop
mov
pop
loop
rep
mov
and
aaa
xor
fstps
rdseed
jle
out
pop
sbb
pop
sub
cld
mov
or
loopne
in
jae
scas
fstpl
test
adc
mov
cmp
mov
aaa
mov
mov
or
sub
push
outsb
ja
add
pop
cmp
mov
icebp
mov
daa
adc
cmp
fimull
into
cs
scas
sub
inc
fcomps
pop
rcr
ss
cmpsb
fcoms
arpl
dec
loopne
shrl
xor
mov
add
push
mov
jno
outsl
mov
xor
in
xchg
pop
adc
leave
pop
rcll
push
pop
fiaddl
add
leave
mov
adc
pop
imul
loopne
adc
cmp
pop
xchg
stos
lret
cmp
lods
mov
inc
and
pop
and
adc
inc
movb
ficoms
std
das
das
or
inc
cmp
cmp
pushf
imul
add
pop
stc
xchg
js
lahf
mov
loope
lock
mov
jbe
jmp
dec
nop
xor
out
imul
or
in
xlat
lret
inc
out
sub
js
js
and
cwtl
in
dec
cmpsb
jns
jbe
pop
inc
data16
pop
loope
jbe
mov
pop
adc
cmp
xor
fildll
cwtl
inc
cmp
clc
mov
dec
repz
mov
insb
push
pop
jl
imul
les
jp
jae
loop
inc
inc
sub
pusha
loopne
roll
in
test
fdivrs
and
jecxz
outsl
adc
pop
sub
inc
pop
test
add
sub
sub
filds
rclb
mov
call
dec
sarb
stos
test
cmp
xchg
cmp
addb
mov
les
shlb
out
popa
int3
imul
std
scas
pop
lds
arpl
int3
dec
stos
ret
push
xchg
gs
and
je
das
cmpsl
xchg
adc
or
cltd
fsubrs
xchg
std
out
lea
jae
fmull
test
cmpsl
jmp
lcall
sahf
shll
or
in
fmulp
in
sarb
jnp
mov
xorl
lods
sbb
jecxz
pop
in
push
xchg
fisubl
pop
adc
xchg
lret
and
add
ja
xchg
adc
je
mov
mov
jmp
sbb
loopne
call
push
out
adc
sbb
cmp
rcll
gs
bound
cmpl
in
jne
outsb
inc
popa
insb
mov
fsubs
jle
sbb
mov
cmpsl
jmp
aaa
outsb
and
hlt
ljmp
jg
loopne
ret
jae
fidivl
push
std
lds
dec
inc
xor
daa
push
je
adc
xchg
ret
push
sbb
roll
or
cs
lods
ret
outsl
lahf
aad
xchg
in
rcr
loope
cmp
sbb
push
roll
jo
cmpsb
test
adc
leave
nop
inc
fldt
cs
mov
and
mov
movsl
or
popf
or
mov
push
sub
pushl
lea
scas
add
xchg
mov
xor
subb
dec
idivb
xor
pop
xor
imul
mov
aam
test
sbb
jns
jo
jnp
or
inc
paddd
xlat
sub
pop
je
cmp
shrl
repz
mov
int3
jp
xchg
mov
clc
inc
mov
rcl
dec
cmp
call
pop
mov
xchg
mov
ljmp
mov
xor
mov
jg
lea
icebp
and
mov
mov
sbb
ficompl
push
and
into
mov
push
icebp
fsubs
fdivs
mov
lahf
bound
dec
sbb
repz
push
js
add
jo
sub
push
sub
aad
xor
dec
fwait
sbb
sahf
mov
es
sti
hlt
lret
jge
mov
sub
imul
pushw
sbb
xor
scas
sarb
cli
fsubrs
and
xorl
test
lods
mov
adc
push
loop
lock
rorl
mov
loopne
std
xor
inc
insb
and
out
shlb
adc
mov
xor
popf
rclb
jl
push
sub
hlt
xchg
in
rcrb
mov
xor
out
add
cmp
or
xchg
adc
addb
popa
loopne
push
push
out
mov
int
loope
xchg
pop
xchg
rorb
push
inc
lods
sub
ds
iret
inc
loope
push
in
add
and
adc
jbe
push
xor
lret
adc
test
shrb
addr16
sub
cli
daa
mov
jl
mov
imul
xchg
mov
in
std
js
pop
test
addr16
shll
daa
jae
pop
sbb
fs
out
cltd
xor
fimull
cmpsl
js
xchg
xor
pop
in
dec
in
and
mov
in
test
xchg
movsl
push
test
aaa
leave
sub
fidivrl
xor
inc
cli
mov
test
add
push
lret
leave
sahf
sbb
push
stc
sbb
popf
aad
adc
xor
sub
bound
or
mov
enter
push
fisubrl
cs
aas
jo
xchg
arpl
mov
sbb
sbb
push
xchg
in
int3
dec
push
leave
fdivrl
or
ja
lods
ja
push
pushf
ljmp
mov
cltd
xchg
loop
inc
xchg
cmp
out
mov
push
imul
test
pusha
bound
mov
sbb
fstp
jl
mov
jmp
jmp
lods
aam
std
or
rorl
in
adc
sti
cmp
lea
pop
ret
repnz
test
lret
iret
jl
pop
pop
fidivrl
push
inc
or
sbbb
mov
xchg
sbb
sbb
into
cmp
cld
testb
sbb
cmpsl
xrelease
and
or
sub
insl
insb
enter
aad
shlb
mov
and
push
adc
sbb
or
mov
push
lock
dec
fwait
mov
rcll
in
repz
outsl
pop
scas
fldcw
ja
je
insb
nop
push
and
std
dec
sub
out
out
lods
push
mov
jmp
xchg
push
jbe
push
sbb
lods
les
roll
jnp
push
ss
sub
in
inc
push
ret
push
lahf
sbb
decb
push
sub
push
sub
mov
add
inc
out
xchg
das
fwait
sbb
inc
inc
dec
xchg
enter
dec
inc
jmp
mov
adcb
add
push
push
lret
ja
mov
fistpll
xor
push
fmuls
xchg
cmp
imul
xchg
inc
adc
repnz
sub
push
lcall
xchg
cltd
jno
cmp
jne
or
addr16
xchg
pop
je
or
pop
push
xlat
mov
jp
dec
mov
and
fldt
test
jnp
in
inc
or
cmc
aam
das
xchg
rcll
mov
xchg
in
lret
pop
cltd
xchg
push
and
inc
fsubl
push
sub
rep
xchg
outsb
outsb
jae
mov
iret
sub
cmc
popa
loope
lcall
in
cmp
test
sahf
add
imulb
ljmp
fstl
insb
repz
mov
les
dec
mov
mov
fmul
clc
repz
add
fnstcw
jns
cmpb
xor
mov
push
pop
cmpsl
pop
das
mov
enter
das
jp
and
cmp
adc
imul
inc
sub
filds
or
pop
or
repnz
icebp
push
xor
jb
sbb
push
lock
nop
repz
add
dec
inc
bound
sahf
sub
jne
adc
in
in
scas
cmp
mov
outsl
mov
and
inc
daa
lea
cwtl
shlb
or
push
ffree
push
test
lret
ret
push
pop
adc
mov
jmp
ficompl
sub
xor
mov
popa
add
mov
popf
fidivl
and
dec
cmp
adc
ja
test
repz
dec
jnp
cmp
in
imul
cmp
andl
add
and
stos
arpl
xchg
or
idivl
sub
cmpb
in
aaa
sbb
dec
sti
es
out
xchg
fbstp
ds
mov
cmc
ret
add
les
addr16
cmc
call
xor
pusha
jecxz
test
fmull
fsubp
out
ljmp
fistps
mov
xchg
sbb
mov
jb
add
cmp
cwtl
repnz
scas
outsl
gs
scas
sub
add
ss
dec
cwtl
add
andb
jno
jge
mov
jns
cmp
clc
and
insl
icebp
push
sbb
sbb
test
mov
rcll
mov
dec
lds
gs
inc
cmc
and
cltd
addb
and
std
push
dec
fisttpl
scas
leave
sar
and
cld
dec
out
mov
xor
int
mov
sti
insl
scas
jne
or
js
xor
push
test
dec
push
push
in
or
ss
inc
mov
jns
xor
add
cmp
in
push
dec
pop
push
adc
into
ss
addr16
inc
insl
pop
nop
push
adc
adc
arpl
pushf
pop
mov
daa
and
popf
lret
outsb
lret
shrb
adc
jmp
dec
mov
inc
arpl
xchg
pop
cwtl
cmp
sbb
or
aas
inc
and
sti
arpl
adcb
mov
xor
cmpsb
insb
outsl
jnp
xor
and
sub
ds
jp
ret
dec
push
jne
sbb
cmp
and
loopne
out
pop
and
mov
xor
jge
pop
lods
cld
outsl
mov
loopne
ret
pusha
mov
cltd
ss
call
dec
ds
loopne
cmpb
push
mov
cmpsl
outsl
jmp
push
hlt
test
js
cmp
sub
push
shll
jno
inc
mov
ds
ror
mov
push
enter
fsts
test
rcrl
outsl
fwait
and
popa
clc
ja
cwtl
sbb
ds
mov
ret
data16
div
adc
out
aas
jmp
sub
push
imul
ret
mov
pop
aam
stc
lahf
mov
mov
or
stos
xchg
add
setp
pop
pop
mov
sub
outsl
cmp
cmp
mov
sub
sub
sbb
mov
pop
jp
idivl
out
mov
repz
nop
cmc
inc
call
pop
adc
rolb
dec
fsubs
int
stos
lcall
inc
out
pop
sub
dec
or
dec
push
adc
inc
test
fistps
xor
sub
test
shll
pop
lds
scas
out
aas
dec
imul
movsl
adcb
iret
fcmovb
pushf
sub
cmp
dec
jmp
inc
sbb
fwait
in
mov
adc
push
mov
and
jp
out
mov
adc
dec
inc
jno
xchg
out
xchg
mov
mov
push
jno
lods
or
mov
lsl
cmc
ficomps
add
mov
inc
push
sub
jbe
push
aad
scas
lcall
jbe
jne
je
cmpsl
or
ret
iret
mov
jle
cmp
mov
xlat
hlt
test
fisubrl
outsb
cmp
mov
movsb
rorb
push
imul
pop
ljmp
cmpsl
xlat
push
pop
test
mov
stc
stc
fdivs
aad
jnp
sbb
mov
insb
fwait
in
sbb
int
test
mov
push
loop
insb
cld
or
mov
out
and
adc
push
imul
insl
inc
mov
loop
xlat
dec
loope
cmpl
pop
ja
data16
mov
jns
fabs
scas
and
dec
ja
les
fs
pop
add
cld
sbb
cmpsl
sbb
stos
adc
mov
pushf
pop
adc
enter
xlat
dec
mov
imul
ret
movsb
cvtdq2ps
push
jnp
sbb
mov
bound
cmpsb
mov
movsb
inc
mov
inc
pop
nop
out
sub
mov
sbb
mov
adc
mov
sbb
out
aad
addb
mov
pop
push
mov
and
pop
lret
pop
aam
and
cmp
mov
out
ret
imul
aam
xchg
fdivr
dec
mov
shlb
jno
and
xor
repnz
mov
inc
ljmp
xchg
frstor
inc
inc
sbb
fnsave
dec
dec
adc
into
insb
jp
adc
push
lods
pop
sub
add
add
cltd
les
pop
addr16
dec
ja
icebp
cmp
cltd
loop
loope
and
xchg
aas
xchg
pop
dec
jp
lods
mov
stc
shrl
push
cmpsl
cmc
cs
fistpl
punpcklwd
stc
cmp
mul
jl
pop
inc
sahf
sarb
jae
sub
sub
mov
shrl
jmp
cmc
mov
mov
sub
add
je
dec
push
mov
pop
stos
push
mov
pop
out
push
dec
or
sbb
fidivrs
ss
jmp
sar
cs
scas
or
add
xor
push
or
mov
iret
mov
mov
cltd
pop
clc
in
dec
sbb
jbe
dec
jb
pop
mov
pop
mov
inc
nop
push
jo
mov
sti
cwtl
loope
mov
push
enter
mov
in
xor
popf
sbb
movsl
arpl
dec
jb
xor
xlat
mov
jge
xchg
jbe
xchg
fsub
out
cmp
or
ja
sbb
sti
or
mov
sbb
popa
daa
add
xchg
push
and
pop
jl
in
jbe
mov
nop
mov
adc
daa
jecxz
jge
jno
fs
mov
or
repz
xchg
subl
xorb
shlb
mov
ret
sti
push
cld
mov
in
lods
out
mov
adcb
mov
jp
repnz
xor
inc
outsl
push
incb
jp
pop
mov
inc
inc
cmp
fmuls
adc
fistps
scas
dec
ret
dec
adcb
sahf
cmpsb
adc
xchg
inc
icebp
aaa
push
aad
xchg
push
daa
mov
jae
lods
mov
or
loop
xchg
mov
cmp
ljmp
or
loopne
imul
lahf
mov
mov
adcl
dec
mulb
pushf
call
mov
pop
mov
les
inc
and
jecxz
push
inc
sar
jge
pop
imul
loope
fldcw
and
pop
popf
lods
push
popf
shrb
sub
mov
add
mov
movsl
out
sub
cltd
lret
inc
inc
mov
adc
and
ljmp
jl
cmpsb
out
subb
fisttpll
xchg
mov
sub
iret
push
adc
mov
int
or
mov
icebp
pop
add
sub
sub
push
mov
clc
loop
inc
xchg
or
xor
xchg
mov
push
cmc
insl
setnp
scas
out
jle
test
mov
int3
inc
out
jnp
cmp
stc
jecxz
outsl
jae
std
mov
adc
mull
ds
inc
cmp
loop
cld
sub
cmp
push
lea
adc
fwait
dec
cmpsb
mov
jmp
cs
sub
popf
or
jmp
lea
mov
inc
enter
testb
push
mov
jo
ret
mov
insl
imul
lods
inc
adc
lea
shlb
xchg
xchg
mov
mov
push
cs
jmp
xor
mov
int
mov
adc
lahf
cmpsb
addb
mov
insl
mov
mov
xor
cltd
dec
and
push
sbb
cwtl
test
mov
roll
stc
fnstsw
jge
pop
jae
aam
jle
in
or
mov
fiadds
popa
out
mov
inc
imulb
and
dec
xchg
mov
incl
xchg
cld
scas
push
and
sahf
lret
mov
cmp
sbb
test
pop
push
mov
xchg
scas
inc
mov
scas
cmpsl
inc
neg
or
pop
ss
stos
pop
and
jge
in
mov
daa
mov
in
stc
mov
out
test
stos
push
es
sbb
adc
shlb
sbbb
adc
cld
lock
jecxz
stos
loop
ror
add
push
adc
mov
mov
add
and
mov
es
std
scas
pop
or
push
pop
inc
and
cwtl
pop
sbb
mov
popf
add
sub
cmpb
call
push
push
dec
loopne
push
scas
je
aas
jge
mov
arpl
mov
xchg
stos
into
jmp
jno
push
push
scas
mov
cmc
pop
jbe
add
mov
or
xlat
aad
rcl
pop
shrl
enter
or
add
movsb
cs
das
imul
std
mov
mov
aam
mov
lret
enter
fldcw
or
orb
mov
cmp
leave
cmpsl
xchg
loop
mov
push
fnstsw
cltd
fdivrs
dec
loope
add
and
fsubr
shll
div
lret
pop
pop
fdivrl
loop
push
les
cmp
and
imul
loop
mov
sbb
insb
lea
sti
or
mov
dec
mov
and
rorl
enter
lcall
clc
jmp
inc
lahf
adc
mov
xchg
mov
inc
lret
rorb
andb
xor
fdivrl
cmpl
mov
icebp
repnz
fisubs
addb
jno
popf
lret
call
inc
jnp
inc
xchg
fcmovnu
ror
mov
xor
testb
test
push
mov
hlt
imul
movsl
sub
sbb
clc
enter
lock
jne
add
dec
or
dec
fstps
mov
std
mov
jo
add
mov
pop
jb
cmc
pop
cwtl
pop
je
push
pop
arpl
jp
dec
add
xchg
adc
push
push
test
les
movsb
cwtl
cs
fdivrl
inc
sub
adc
dec
ret
xchg
inc
pop
loop
mov
bound
pop
stc
mov
or
xchg
pop
add
dec
ljmp
imul
xchg
pushf
mov
fadds
test
jne
clc
ret
in
mov
lret
cwtl
fwait
jb
sbb
xchg
lds
sti
dec
aam
push
jge
push
in
mov
cli
sub
sti
sti
mov
mov
xor
jbe
sub
cmp
out
stos
xlat
mov
push
cmp
aad
push
pop
push
and
nop
xor
pop
and
bound
js
sbb
and
push
pop
cmp
xchg
lahf
xchg
aaa
popa
dec
sub
mov
push
rorl
add
push
add
fmuls
mov
sub
sbbb
push
js
in
lods
test
jne
dec
jno
sarl
jmp
in
dec
insb
and
sub
fldenv
mov
push
add
out
sbb
dec
pop
adc
cmp
xchg
or
push
fcomp
add
lds
push
inc
sub
imul
out
popa
in
imul
in
add
popf
jg
jmp
push
xchg
jnp
rcrb
push
dec
inc
aas
call
rorl
mov
or
mov
adc
fistps
pop
inc
fs
es
addr16
add
and
out
cmp
nop
dec
scas
pop
and
test
rcll
and
sbbl
push
call
imul
ret
in
clc
xchg
push
enter
fdivl
les
dec
cltd
test
adc
push
je
and
cmp
lds
xlat
out
push
imull
push
ret
or
in
sti
lret
push
or
orl
and
decb
pop
mov
loope
ret
lods
aas
pop
out
in
adc
fmull
sbb
test
scas
lcall
mov
cmp
adc
dec
mov
mov
inc
pusha
jno
loope
mov
pusha
push
sub
mov
jmp
sub
cmp
aad
fisttps
int
in
pop
repz
mov
pop
iret
test
jb
lea
sub
inc
or
pushf
test
cld
jae
xlat
ja
std
jmp
aas
ss
pop
xchg
sarl
das
push
push
pop
xor
xchg
mov
jae
repnz
lods
notl
push
jmp
inc
sbb
ret
out
jl
dec
pop
fdivrl
outsl
es
ss
push
repnz
sbb
xchg
pop
out
bound
idivb
mov
movsl
lret
shll
xor
shrl
adc
jmp
and
cmp
dec
pop
sub
out
dec
jno
fcomp
shl
test
and
and
pop
leave
sub
push
sub
cwtl
sub
pushf
test
lds
push
nop
fbstp
jge
popa
xchg
xor
add
out
int3
cmp
sub
scas
add
jns
or
andb
xorl
mov
shlb
cmp
insl
imul
mov
repnz
loope
jb
scas
lods
in
mov
pop
lcall
mov
out
mov
ds
inc
inc
out
out
adc
jne
icebp
cmovns
cmp
mov
in
xchg
shrb
bound
xchg
in
xchg
enter
test
mov
jnp
movsl
loope
xchg
or
xor
push
sub
pop
adc
outsl
arpl
jns
jle
or
jne
jecxz
shlb
gs
into
fistpl
out
jbe
gs
popf
fdivs
mov
in
js
inc
and
xchg
dec
push
pop
in
xorb
sbb
je
sbb
test
jbe
mov
lret
and
lcall
out
push
dec
cmp
gs
outsb
jecxz
andl
dec
testb
les
push
mov
mov
sbb
sbb
jecxz
add
adc
dec
inc
fsubrl
test
cmp
dec
in
shlb
rorl
pop
fildl
nop
rolb
sub
sub
xor
dec
into
clc
insb
dec
mov
jmp
fcoms
mov
jns
push
iret
out
pop
jne
in
cmpsb
xchg
push
movsb
mov
sub
inc
mov
dec
cld
daa
jg
or
and
mov
push
jp
push
xchg
adc
sbb
movsb
jle
or
lods
test
into
xor
add
js
push
mov
sar
loopne
std
pop
mov
out
mov
cmp
pop
push
pop
pop
and
jmp
xchg
or
dec
lock
adc
dec
aam
js
adc
loope
sbb
repz
stc
push
imul
call
repz
sub
shl
ficoml
sbb
mov
mov
push
daa
ret
sub
xchg
xchg
lea
sbb
sti
adc
lock
lods
les
loop
ret
cwtl
dec
inc
into
clc
or
mov
lds
push
push
imul
nop
ret
dec
push
add
in
jmp
xchg
push
adc
cs
or
out
stos
clc
jno
popl
add
test
jle
mov
iret
mov
js
lret
dec
xchg
pusha
mov
shrl
adc
xor
sbbb
add
jnp
sbb
dec
lea
mov
mov
mov
xor
add
imul
mov
mov
xor
lea
cmp
jne
jmp
or
mov
into
and
and
cmc
pushf
sbb
sbbl
test
dec
dec
lret
addr16
or
cmpl
lea
test
lea
loop
cmpsb
inc
mov
movzwl
jae
mov
sbb
fwait
cwtl
data16
jl
sub
xor
pusha
mov
in
repz
pop
pop
xor
rorb
push
xchg
dec
stc
or
sbb
and
sbb
ret
sub
mov
sub
dec
out
ja
jmp
xor
xor
icebp
gs
xor
cmc
cmp
cmpsb
pop
dec
mov
lods
in
stc
test
mov
push
push
in
lods
sahf
sahf
push
mov
mov
push
and
inc
stc
push
scas
pop
js
xchg
mulb
mov
xlat
push
scas
sahf
mov
sub
jns
addb
jne
xchg
mov
or
dec
sbb
dec
jb
sbb
jb
pop
mov
cs
int
jmp
xor
push
xchg
aad
mov
pop
pop
push
pop
paddd
inc
test
aam
mov
int
out
in
repz
add
mov
nop
mov
scas
jge
cmp
push
sub
mov
sub
lods
xor
and
jl
inc
lock
das
jae
test
or
mov
fimull
push
push
or
sbb
mov
addr16
scas
lret
mov
iret
aaa
sbb
mov
rcl
stos
mov
push
lods
insb
push
sbb
inc
int
cmpsl
sbb
rcrb
imul
sub
sahf
sbb
cmp
scas
xchg
mov
lcall
popl
lods
rorb
dec
inc
ret
xor
pop
ljmp
inc
pop
adc
lock
pop
xchg
jmp
incl
ret
sbb
sbb
arpl
xchg
inc
mov
movsb
sahf
stc
jmp
sub
jae
ret
mov
not
lock
fiaddl
pop
test
dec
mov
daa
pop
int
adc
xchg
aad
hlt
repz
fmul
gs
cmpsl
mov
leave
and
rorb
mov
push
or
test
addr16
shl
ret
mov
cmp
subb
pop
mov
dec
js
test
add
xor
inc
jae
lret
popf
out
push
sbb
xor
xchg
sbb
sbb
shrb
out
or
movsl
aad
fnstcw
outsl
aas
ja
cmp
movsl
ficoms
rcll
repnz
bound
jmp
push
es
mov
mov
ja
add
aad
cwtl
pop
jnp
enter
sub
dec
or
sub
js
popf
adc
fldl
lods
sbb
imul
loopne
dec
addb
insl
scas
outsl
xchg
jle
or
stos
fisttps
stos
pusha
nop
aaa
scas
add
inc
pop
mov
test
jge
push
or
xlat
sbb
mov
add
dec
test
and
dec
addr16
sbb
shr
test
mov
sbb
mov
jo
push
push
sbb
jns
cmp
mov
cmp
xchg
xor
add
stos
add
adc
dec
xor
push
xchg
int3
mov
enter
nop
popa
jge
data16
rclb
filds
mov
into
gs
cmp
sub
sarl
adc
or
pop
aaa
cmp
mov
pop
and
rorb
or
and
mov
mov
pop
pop
enter
and
in
pop
pop
enter
xchg
out
lret
fnstenv
add
dec
js
pop
sti
inc
out
mov
add
jl
adc
loope
int3
pop
add
push
imul
or
push
jae
jno
push
or
add
pop
cltd
clc
mov
and
dec
movsl
roll
jne
inc
testl
xchg
xchg
nop
adc
mov
filds
cmc
loop
mov
push
lret
fwait
jns
inc
xchg
xchg
push
popa
mov
clc
jb
push
xchg
cli
mov
mov
out
pop
lahf
lret
mov
imul
je
outsl
test
popf
out
out
fnstenv
push
mov
outsb
mov
dec
mov
lahf
aad
repnz
mov
push
xchg
das
pop
pop
neg
adc
es
push
aam
aam
mov
pop
out
mov
lds
lods
idivl
in
sbb
cmp
cwtl
mov
aad
pusha
popa
xorb
or
insl
jo
ds
pop
dec
adc
cmc
rol
cmpsl
mov
add
in
popa
xchg
bnd
jmp
and
and
stc
push
loop
sbb
inc
or
xchg
dec
loopne
loop
push
push
or
or
gs
pop
xchg
sub
mov
repz
add
les
or
adc
je
xor
mov
adc
int
dec
or
or
lods
test
rcr
pop
loope
sbb
xchg
xchg
mov
mov
xor
mov
pop
repz
ds
and
mov
sbb
dec
lret
push
inc
cltd
pop
cltd
mov
fdivp
lds
mov
sub
jae
inc
push
les
rclb
cld
mov
leave
and
jo
imul
xchg
shrl
xor
or
inc
jge
daa
mov
xchg
sahf
xchg
ja
stos
repnz
or
outsl
mov
cli
and
leave
dec
ret
aad
pop
lret
movl
push
fwait
std
fcomps
xchg
popa
xchg
sub
sbb
and
mov
ja
mov
outsl
xor
inc
xor
stos
out
outsl
xor
push
shll
lock
movzwl
out
testb
test
cmc
roll
das
out
aad
insl
jns
leave
push
sub
push
icebp
xchg
push
inc
push
imul
add
sarl
mov
mov
mov
je
push
sub
stc
fidivrl
flds
sbb
add
pop
add
jg
jbe
stos
xchg
mov
xchg
jae
repz
mov
sub
mov
xor
xor
sbb
xchg
imul
dec
xchg
fistpl
pushf
pop
or
out
scas
insb
mov
mov
fsincos
add
and
xchg
popf
in
jp
repnz
mov
sbb
cs
or
test
mov
je
sub
jbe
add
mov
xchg
mov
loopne
jle
jbe
ds
or
jno
imul
stos
pop
adc
mov
lods
pusha
std
push
sbbb
inc
sbbb
push
iret
mov
inc
and
jae
mov
insb
xchg
adc
push
es
arpl
cli
push
pop
or
cmpsb
dec
insl
xchg
cld
in
ret
xor
imul
mov
lea
insb
cmp
hlt
sub
inc
mov
subb
rcl
pop
xchg
and
jae
sub
mov
dec
sub
pop
inc
cmp
inc
test
fwait
xor
mov
sub
inc
mov
cmp
loop
dec
sti
and
cmc
cmpsl
mov
pop
out
sbb
loope
mov
adc
add
cli
mov
and
insb
mov
push
inc
push
inc
push
and
notb
je
mov
dec
loopne
push
sahf
mov
mov
in
fcompl
lret
jmp
outsb
das
jmp
js
jl
aad
bound
push
pop
add
sbb
push
in
or
pop
mov
and
jmp
cs
jl
pop
mov
aad
aad
xor
repz
mov
repnz
sub
mov
cmp
ret
andb
xor
in
push
jnp
out
xchg
clc
cs
add
sub
cs
out
pusha
aad
sbb
fcmovu
sbb
es
inc
xchg
fdivs
inc
shrl
in
and
xor
lea
xchg
hlt
mov
dec
mov
sub
xchg
xchg
sbb
data16
adc
ficoml
popa
sbb
jle
lahf
xor
mov
popf
dec
sub
lds
int
das
lock
or
and
ljmp
lahf
imul
and
or
push
dec
repnz
lds
out
cwtl
pop
loope
push
out
push
and
div
ds
sbb
cmpl
xchg
mov
cld
inc
fiaddl
lcall
shll
push
sbb
shll
xchg
mov
lods
mov
ficoms
xchg
adc
mov
xchg
out
aad
pop
and
lods
in
cltd
pusha
aam
xchg
fisubrl
push
sub
movsb
pop
shlb
hlt
mov
ret
test
int3
inc
xlat
mov
dec
std
and
je
cmpsb
and
push
mov
jmp
shr
cmp
xchg
in
pop
or
cli
enter
jnp
mov
cmp
xlat
or
sbb
adc
lods
xor
jb
mov
xchg
mov
mov
inc
and
or
xor
pop
ds
outsl
jb
lret
pop
notl
jecxz
pop
stc
adc
loop
frstor
pop
mov
dec
out
call
mov
call
dec
pop
mov
sbb
jnp
add
bound
or
lahf
mov
sbb
ljmp
mov
or
push
and
fiaddl
sahf
pop
enter
dec
aad
xor
cmp
in
and
mov
push
loopne
loop
sbb
mov
dec
fcmove
lds
addr16
add
dec
push
add
pop
xor
das
loop
inc
lret
int
inc
or
in
inc
sbb
mov
dec
adc
cltd
pushf
dec
push
push
lcall
sbb
lods
movlps
or
ss
sarb
in
into
mov
cmp
xchg
inc
add
xlat
std
inc
shlb
int
aad
jns
pop
hlt
mov
add
pop
add
fldcw
rol
pop
add
fmuls
std
add
push
test
cmpl
cmpsl
int3
repz
jae
icebp
lahf
push
ljmp
shl
xchg
mov
loop
mov
xor
shlb
daa
scas
in
sbb
mov
jl
xchg
xor
rclb
xor
adc
jbe
rorb
xlat
lods
inc
insb
cltd
rorb
sub
sub
dec
or
ja
cwtl
sub
jae
cmc
and
xchg
andl
cmp
pop
outsl
sub
sbb
dec
pusha
insl
add
mov
and
xor
mov
mov
fwait
gs
adc
dec
movsl
inc
mov
inc
jp
push
mov
mov
fcompl
js
xchg
addr16
aam
push
mov
pop
movsb
loop
jbe
cmp
cmpl
add
mov
mov
mov
ret
dec
sbb
mov
and
repnz
cmp
sub
loop
mov
notl
xor
ret
lcall
cld
loop
lcall
sbb
subb
in
inc
addl
out
es
and
rcr
jmp
cmp
ficoml
jnp
sbb
sti
in
call
aaa
mov
and
dec
shrl
pop
add
cmpl
or
jo
adc
push
aad
cltd
sub
pushf
jmp
and
mov
sub
aaa
icebp
les
cmc
mov
subl
es
mov
push
sbb
fisubrs
push
lds
push
mov
mov
xchg
sub
jge
mov
pop
leave
icebp
or
sahf
lods
imul
dec
inc
or
scas
pop
sub
cwtl
fdivrl
inc
xchg
cwtl
jp
push
lds
test
inc
xchg
repz
insb
dec
popf
mov
dec
ss
fwait
push
loope
aad
and
stc
jae
add
jnp
pshufw
or
pop
out
jp
lcall
mov
jl
lock
jg
mov
loope
aam
sub
mov
addr16
popf
je
in
insl
mov
mov
bound
xchg
dec
fldenv
mov
sub
ds
adc
mov
push
mov
out
or
add
movsl
mov
lret
into
push
or
inc
repz
call
and
sub
cli
movsl
or
je
xchg
inc
mov
mov
mov
adc
add
iret
test
daa
divl
pop
jg
cld
fcmovnb
mov
in
jp
and
outsb
jp
push
nop
jp
pop
lods
pushf
mov
pop
out
cli
xchg
loopne
cld
or
push
or
jne
push
push
imul
jmp
push
pop
mov
xchg
jle
sbb
mov
add
inc
jmp
inc
das
loopne
mov
pushf
in
es
add
sub
dec
sbb
add
jl
fstpt
mov
aad
mov
sub
xor
int
mov
mov
mov
xlat
jns
scas
jno
mov
jns
or
in
mov
push
push
cmpsb
cmp
and
or
lcall
movsl
addr16
pop
sahf
xor
repz
lea
popl
inc
xchg
addr16
cltd
fdivr
xchg
adc
fistl
jecxz
mov
or
rcrb
ret
ds
insb
dec
out
mov
sub
das
mov
pop
add
ss
daa
or
loop
mov
sub
clc
xchg
loopne
andb
lods
push
in
stos
rcr
mov
sbb
imul
fsubrs
rcpps
inc
sti
sbb
sbb
les
in
jp
insb
ljmp
and
cltd
adc
jno
test
jmp
pop
mov
mov
add
and
adc
loope
jo
daa
xchg
push
xchg
imul
stos
xor
arpl
sbb
push
aaa
fs
iret
in
xchg
fmull
rcrb
push
push
popa
lcall
or
jle
xchg
pop
fistl
fisubrs
repnz
sub
or
out
inc
out
es
stos
lahf
push
xchg
pop
cmp
and
nop
inc
adc
mov
add
add
sub
loopne
in
movl
addr16
xchg
jne
xor
hlt
enter
shl
imul
popa
jne
inc
adc
out
add
rcll
xchg
dec
repnz
out
iret
adc
imul
cmpsb
sarb
lret
add
icebp
sarb
and
out
shrb
dec
mov
fincstp
shlb
or
lea
movsb
mov
sbb
sbb
repz
fldcw
sub
enter
mov
sub
mov
xchg
and
mov
sub
sbb
ret
cs
je
pop
scas
inc
xlat
loope
notl
outsl
push
mov
push
xchg
out
std
aam
ret
cmpsl
lret
add
js
outsb
dec
in
lret
data16
fdivp
mov
adc
sub
add
inc
push
int3
cmp
jg
loopne
sbb
sbbl
fimuls
mov
cs
inc
sub
dec
loop
mov
add
aad
mov
push
push
inc
arpl
and
sub
or
push
jnp
ror
xor
mov
cs
into
insl
pop
inc
inc
or
ds
icebp
aad
mov
mov
sub
in
inc
scas
lahf
stos
sti
fsubl
inc
jp
fnstenv
cltd
icebp
stc
or
jnp
xchg
cmp
pop
inc
pop
jbe
xchg
test
or
sub
jl
dec
in
cmp
mov
adc
in
nop
sub
inc
jmp
or
xlat
mov
mov
xlat
les
scas
insl
stos
scas
add
xchg
and
lods
cltd
mov
js
lock
inc
mov
adc
push
adc
lcall
or
mov
push
pop
ret
fidivs
inc
sarb
push
ss
sahf
and
mov
out
push
testb
dec
cmp
nop
xchg
inc
nop
push
xchg
sbb
add
in
notl
dec
jmp
cmc
mov
adc
xchg
pusha
test
jp
push
adc
lret
adc
adc
xor
jmp
cs
mov
mov
mov
add
xlat
lds
mov
cmpsl
fimull
or
fcompl
add
scas
iret
lret
insl
movsl
ss
xor
mov
test
jp
xchg
sbb
xlat
mov
fnstsw
pop
dec
test
cmp
cmpsl
popf
sub
xlat
sahf
arpl
dec
pop
lods
nop
and
cmc
arpl
cltd
mov
or
lcall
pop
jmp
out
call
lock
in
jno
dec
pop
and
push
dec
scas
cmp
push
shrl
push
xor
add
add
ret
jle
rcr
inc
add
into
jg
push
push
push
fs
xlat
scas
arpl
mov
inc
push
or
insl
push
arpl
jns
push
pop
inc
pop
push
or
pop
and
mov
sbb
sub
lds
out
insb
out
insb
mov
inc
lock
push
jle
outsb
or
mov
std
enter
fidivrs
xor
mov
add
lahf
sub
ljmp
sub
pop
movsb
jne
xor
dec
xchg
outsl
add
loopne
mov
jo
pop
test
prefetch
dec
es
push
lds
mov
icebp
lcall
xor
ret
fdivr
sbb
pop
in
pop
scas
adc
sub
fwait
stos
xchg
mov
cmp
orl
mov
mov
xlat
adc
mov
je
cld
outsb
aad
mov
pop
incb
rclb
das
xchg
jp
sub
lret
cmc
add
jmp
pop
jbe
lcall
imul
rorl
and
lahf
sub
cmp
jo
psrlq
insl
lods
and
mov
lcall
cmp
int3
pop
jno
sub
or
ss
and
xlat
int
inc
cmpsb
adc
and
xchg
nop
pop
leave
pushf
adc
dec
jbe
mov
ret
dec
lods
adc
push
cmc
fdivr
hlt
icebp
mov
mov
xchg
aas
loope
shl
movsb
in
sub
push
imul
jb
xor
xor
sbb
adc
xchg
mov
cmpsl
fsubrs
scas
mov
movsb
xor
xchg
mov
sbb
inc
mov
cltd
mov
inc
fildll
mov
mov
xor
andl
jo
mov
hlt
aas
insb
negl
mov
aas
jno
add
insl
aas
lret
cmc
add
ret
adc
or
insb
iret
and
test
mov
ds
iret
pop
lods
ds
xor
cmp
sub
mov
jle
jo
dec
lcall
add
xor
ja
xchg
mov
adc
in
lret
dec
xor
nop/reserved
push
or
adc
inc
push
cmp
pop
fld
cmp
sub
and
fsub
or
xchg
rorb
mov
fwait
adc
pop
jo
sub
mov
into
mov
lcall
fwait
bound
and
sbb
icebp
popa
mov
test
mov
pop
sbb
aad
mov
cmpsl
push
enter
cs
pushf
sub
ds
stc
sbb
cld
sbb
fistps
xchg
sbb
mov
shlb
mov
pop
and
enter
andb
pop
add
nop
shrb
lcall
cli
inc
jb
xor
sub
arpl
lahf
dec
test
cli
inc
gs
xor
cs
pop
mov
and
stos
adc
sub
sbb
mov
das
cmp
dec
dec
aas
xlat
out
jae
arpl
inc
jae
subl
icebp
sahf
sbb
int3
insl
iret
push
xchg
lret
sti
inc
inc
and
sahf
add
sti
cmp
lea
test
push
mov
stos
mov
jno
mov
test
xchg
js
scas
cmp
push
jbe
push
xlat
out
cld
xor
stos
mov
xchg
cltd
cmp
ja
jmp
pop
bound
ja
gs
dec
lea
insb
inc
cmp
int
test
clc
inc
jne
fimuls
in
in
loop
les
push
mov
xor
ljmp
xchg
loopne
inc
sub
cmp
adc
pop
enter
jne
ss
adc
inc
loopne
add
idivl
data16
pop
jmp
setge
dec
and
mov
movsl
xchg
xchg
pop
jnp
sbb
jbe
arpl
cmp
cwtl
into
stc
push
imul
mov
or
fwait
lods
pusha
dec
int
xchg
cmp
rcll
pop
and
mov
int3
sub
iret
scas
rcrb
mov
mov
and
jmp
ljmp
pop
cmp
loop
ret
sbb
lods
in
add
loopne
sub
cmp
mov
ja
push
dec
pop
jl
lods
mov
pushf
and
inc
sub
mov
cmpsl
dec
jne
bnd
loope
imul
and
push
dec
loopne
imul
in
xchg
jp
dec
push
pop
outsl
dec
pushf
rcll
mov
and
clc
cld
pop
cmpsl
fmull
ljmp
or
test
ret
test
cwtl
mov
js
mov
lock
and
push
loop
fidivl
adc
lods
stos
pop
jle
mov
xor
shll
mov
lcall
push
out
popf
mov
scas
scas
dec
jno
push
jo
jb
push
sbb
pop
jns
jno
pushf
push
mov
mov
rol
xchg
ljmp
pop
nop
push
clc
rcll
bound
dec
xor
in
lods
sub
xor
enter
or
out
rorb
aaa
sub
mov
aas
sti
fidivs
dec
das
and
cmpsb
lods
pop
push
mov
inc
pop
nop
pop
lea
jnp
ret
cmpsl
cs
daa
scas
sub
aas
sti
lcall
clc
add
sub
popa
or
adc
ffreep
cltd
xor
and
mov
and
sarb
insb
cltd
adc
mov
push
enter
dec
in
cs
aas
xchg
ss
jbe
fcomps
sbb
mov
in
sarb
bswap
sub
mov
adc
adc
pop
sub
inc
iret
lds
shl
aam
pop
pop
jecxz
daa
xlat
in
enter
mov
sbb
sbb
jecxz
xor
mov
mov
jmp
pop
jecxz
mov
pusha
imull
mov
pusha
push
aas
rcrl
sbb
aad
mov
or
cltd
fdivr
fs
movsl
cmp
or
sbb
repz
xor
call
mov
rcll
push
scas
adc
adc
daa
lods
xor
clc
fs
pop
xor
cmpsl
dec
dec
out
cmc
inc
jmp
addr16
sub
mov
test
xor
std
incl
fmuls
jmp
not
pushf
sub
cmp
aaa
dec
rclb
stc
push
xor
push
xor
in
mov
sub
mov
aam
lret
popa
inc
mov
fwait
push
add
jp
and
cmp
test
xor
sbb
jno
in
or
mov
mov
repnz
icebp
mov
fnsave
xchg
or
jne
outsb
xchg
out
adc
pop
mov
iret
or
std
ja
fldl
pop
out
mov
pop
sbb
nop
add
lock
aad
in
imul
jge
stc
popf
dec
nop
cmpsb
xchg
xor
and
ds
jp
fmuls
or
jg
insl
mov
jp
dec
insb
out
leave
xor
bound
fbstp
xchg
out
push
ss
pop
ret
ja
adc
rol
ds
and
adc
push
arpl
or
stos
or
mov
int
pusha
nop
stc
mov
mov
mov
sub
lcall
shlb
repz
inc
lcall
lret
push
ja
dec
call
or
sbb
mov
dec
repz
add
sbb
jmp
in
sub
in
loopne
mov
pop
push
outsl
push
adcl
cld
push
out
les
dec
and
shrb
sub
push
icebp
shlb
push
xchg
mov
cmp
leave
lcall
fmuls
hlt
aam
push
and
insl
push
dec
cld
mov
fmuls
xor
aaa
ja
mov
fimull
jle
ja
sbb
mov
scas
arpl
jnp
fldl2e
ja
jl
dec
xor
inc
leave
lret
or
les
repnz
je
jecxz
mov
out
lahf
ss
aaa
out
aaa
stos
and
adc
mov
test
dec
in
ja
mov
stc
mov
andb
mov
sti
mov
aam
lret
stos
and
ffreep
fdivl
inc
jo
sbb
mov
or
je
pop
imulb
fstp
movsb
xchg
test
repnz
out
jns
repz
push
fbld
push
scas
and
cmp
lock
jecxz
add
insb
mov
sub
and
xchg
shrb
ss
cmp
add
sub
push
test
rcrl
sub
mov
adc
cld
ja
dec
dec
mov
andb
push
add
pop
out
imul
add
mov
loop
inc
in
jne,pt
pop
jl
pop
mov
cmp
inc
xor
shrb
add
mulb
jne
jle
push
xchg
inc
dec
jae
pop
mov
lea
jo
sub
ljmp
cltd
mov
push
movsb
sub
fstps
pop
mov
push
cltd
cmp
andb
pop
jg
pop
jns
cmp
push
lock
mov
xchg
or
repnz
pop
scas
gs
cmpsb
pop
lahf
cmp
out
out
or
in
dec
or
push
lret
mov
enter
stc
cltd
cmp
ds
mov
filds
pop
out
adc
mov
adc
dec
notb
aam
push
dec
fst
add
cmp
fisttps
stos
add
sub
mov
aam
dec
sbb
mov
sub
pop
inc
in
outsl
int3
fdivr
test
roll
jbe
call
xchg
adc
pop
fisttpll
sbb
inc
aas
icebp
test
pop
enter
cmp
lds
enter
cmp
pop
and
xor
jge
cwtl
fnsave
clc
sahf
sbbl
lods
mov
lret
sbb
lods
sti
mov
jge
outsb
pop
sarl
add
pop
cltd
int3
out
stos
pusha
mov
ficomps
jno
out
movsl
les
xchg
scas
int
movsb
lds
mov
movsl
dec
andl
xchg
cli
pushf
mov
fistpll
loop
jb
jl
pop
cli
hlt
adc
sahf
mov
sarb
mov
xchg
dec
pop
into
add
shrl
push
out
inc
clc
cli
inc
aaa
mov
add
repz
aam
dec
jge
dec
inc
cmp
add
push
sub
mov
shl
stos
arpl
cmp
adc
aaa
xchg
pop
imul
dec
sub
mov
aad
lea
lods
aas
inc
push
fcoml
repz
xchg
and
adcl
hlt
and
out
stc
in
dec
mov
push
in
pop
hlt
mov
mov
enter
mov
out
and
jo
push
movsl
mov
pop
and
cli
aad
sub
fcmovnu
sbb
mov
insb
pop
dec
iret
add
or
sub
cs
jae
ss
fstps
rcrl
fstps
lcall
ja
stc
test
or
jmp
cmc
mov
imul
jp
jle
mov
push
cwtl
cmpsl
mov
arpl
cwtl
rcll
push
cmpb
inc
sbb
lock
cmp
movswl
push
or
inc
mov
setbe
adc
jae
sub
lahf
add
sahf
movsl
pop
sbb
push
mov
dec
mov
xlat
jle
mov
cmp
dec
es
outsb
jae
dec
in
lods
shl
fcmovb
sub
pop
xor
push
jae
in
cmpsl
adc
cmc
lret
push
and
jecxz
test
fsubrl
sub
fistpl
mov
cmp
xchg
jl
xchg
jns
jne
sub
ret
sar
add
jnp
outsb
and
push
push
shrb
loope
shl
xchg
inc
ret
add
jne
xchg
xchg
test
fldt
gs
stos
cwtl
outsb
gs
xor
inc
fildll
je
xor
dec
cs
xchg
negl
fcomps
jae
insl
out
pusha
jo
outsl
cwtl
xor
mov
push
jo
adc
decb
push
push
pop
insl
repnz
adc
dec
jo
sahf
sub
je
sbb
mov
push
and
sbb
sub
mov
and
inc
sub
insl
dec
fldcw
mov
mov
cmp
xor
xor
xor
or
loope
inc
arpl
rcrl
push
push
ss
pop
mov
cmp
mov
shr
ljmp
mov
mov
std
or
mov
sub
jb
xchg
push
sub
fwait
scas
xchg
mov
pop
imul
pop
popa
repz
ss
jmp
dec
scas
insb
dec
int
leave
and
popf
roll
das
mov
cli
out
stos
imulb
xchg
loope
out
addr16
or
xlat
cmp
mov
test
inc
lods
sub
ret
sub
dec
aaa
into
cld
fdivrs
imul
lcall
aad
popa
mov
cmpb
xchg
cwtl
xor
jl
mov
or
ffree
or
gs
outsl
gs
jnp
fnstsw
dec
int
jb
stos
adc
sbb
cmp
loopne
pop
xor
xchg
inc
pop
sbb
out
ret
nop
movnti
mov
pop
mov
das
sub
lds
test
mov
jb
push
and
addr16
push
cvtps2pd
sub
icebp
aas
popa
daa
xor
outsb
loopne
lods
push
pop
jp
adc
data16
inc
add
push
xor
adc
mov
or
add
sub
dec
xchg
enter
outsl
and
mov
out
mov
mov
pop
dec
or
into
dec
add
cmp
imul
ss
dec
cli
jae
jecxz
addr16
sbb
cmp
aaa
mov
mov
cmpsb
mov
sub
std
xchg
jg
push
jecxz
adc
jae
fdivr
jb
mov
xor
add
mov
mov
add
xchg
xor
push
mov
pop
mov
jmp
cli
mov
addb
in
and
hlt
addl
repz
mov
sub
out
add
ds
or
mov
jno
mov
ds
decb
lods
daa
lahf
push
add
pop
dec
lock
mov
into
js
push
jae
jmp
bound
xchg
cld
jb
mov
rcrl
jp
sub
hlt
int
in
mov
xor
xadd
mov
test
jl
mov
fisttps
push
mov
sub
js
add
loopne
pop
ds
js
sbb
movsb
popf
mov
out
ret
mov
mov
sahf
jp
xchg
sub
imul
repnz
add
dec
jae
loop
inc
or
push
push
jg
mov
add
mov
or
mov
jb
and
inc
push
xor
xor
push
xor
and
outsb
mov
adc
out
sub
fists
paddb
in
pop
mov
sbb
inc
xchg
inc
hlt
es
push
or
or
testl
das
push
std
add
mov
mov
xor
or
ret
mov
inc
push
xchg
int3
xor
push
mov
lea
pushf
ret
mov
add
out
shlb
adc
imulb
add
inc
jl
or
into
fcoms
or
mov
fsubl
addr16
jge
stos
test
jae
dec
stos
aaa
lods
inc
jne
rclb
dec
xor
mov
gs
outsb
sub
clc
cmp
jns
aaa
int
daa
cwtl
xor
repnz
xchg
jbe
and
fiaddl
testb
jb
push
add
fldt
cmp
jbe
je
cmp
into
subl
outsl
push
xchg
jb
addr16
shlb
ja
es
insb
jg
mov
mov
push
mov
jl
xor
xor
mov
stc
out
das
cmp
mov
jl
cmpsl
add
fnstenv
clc
clc
sbbl
cmp
xchg
add
roll
out
mov
sub
mov
adc
xchg
cltd
push
xchg
xor
mov
cmp
fnstsw
cmp
and
pop
or
push
jae
iret
inc
xor
repnz
lods
pop
cmc
ljmp
pop
pop
jge
inc
cmpsb
jo
lods
das
lea
icebp
cld
mov
cmp
cltd
shl
stos
in
cmpsb
pop
mov
xor
cmp
fimull
lret
mov
movsb
loope
sbb
pop
out
mov
notl
inc
mov
stos
scas
cmp
enter
sbb
adc
sbb
iret
and
leave
clc
pop
lods
cmp
push
and
dec
xor
rorb
cli
push
inc
int
pop
jo
pop
js
je
xchg
adc
outsb
fstl
cmp
lret
mov
cmpsb
push
sbb
addr16
adc
daa
test
push
cmp
addr16
dec
adc
xchg
sub
jg
push
cltd
test
loop
lret
outsl
cmpsl
int
jae
inc
xor
xor
xchg
mov
mov
jl
pop
lock
sbb
push
in
dec
cmp
int
pusha
jmp
popf
sub
jbe
rorl
rcl
imul
pop
and
cmc
dec
test
lds
or
mov
repz
mov
push
shrb
std
cs
jno
jl
sahf
std
shll
pop
xchg
push
and
push
pop
insb
lock
fcos
imul
mov
decb
xchg
aam
or
cli
int
dec
sub
cmpsl
imulb
pushf
inc
sub
in
into
lods
add
or
mov
rol
lods
loopne
jp
dec
mov
fists
loope
fiaddl
mov
div
negl
xchg
pop
mov
int
cmp
push
mov
mov
inc
adc
add
repz
lods
stos
inc
mov
xchg
pop
test
mov
dec
dec
fadds
clc
lcall
jp
sub
out
xchg
fstl
lret
mov
ret
pusha
mov
das
mov
ljmp
inc
sub
call
clc
imul
aas
xlat
add
loope
aam
mov
mov
leave
pop
mov
fsubl
in
or
adc
mov
in
dec
shrl
stc
xor
fwait
dec
or
xor
and
push
pop
aad
push
cltd
in
mov
ljmp
call
xor
js
jp
addr16
dec
jnp
std
push
lahf
mov
sub
mov
inc
lock
es
jae
in
add
mov
in
lods
mov
aas
bound
or
mov
push
jne
ja
ljmp
cmp
mov
push
jo
inc
pop
xchg
inc
out
repz
push
divb
xor
iret
add
int
jb
jg
cmp
dec
jecxz
scas
add
xor
cmp
and
mov
pop
notb
rcrl
mov
test
mov
leave
arpl
inc
test
pusha
add
and
xor
shl
add
lea
fld
lods
scas
addr16
jnp
pop
jl
pop
lcall
push
lods
sub
je
adc
pop
addl
rolb
scas
sti
push
mov
mov
scas
lods
or
popa
decb
xor
dec
int3
test
clc
xchg
bound
dec
cmp
xchg
and
repz
sub
cmpl
jmp
xchg
rol
imul
xor
ss
rclb
jmp
push
daa
dec
inc
into
xchg
cmp
jne,pn
repz
mov
xchg
ss
outsl
inc
mov
aam
and
aam
iret
hlt
shlb
mov
enter
mov
jae
lcall
push
sub
mov
and
mov
xor
shl
mov
jmp
cmp
or
orb
ret
scas
fnstenv
icebp
lcall
ja
mov
pop
sbb
in
push
lret
test
int3
lods
pop
inc
ja
or
cmp
push
sbb
and
ss
jb
lret
cs
cwtl
cmp
mov
adc
sbb
ds
dec
jb
mov
add
mov
add
sub
mov
insb
pop
dec
out
or
sbb
push
js
loopne
adc
cli
push
inc
adc
daa
cmpsb
rcrl
mov
jno
dec
jecxz
and
or
lds
push
dec
mov
jl
or
jge
fidivs
xchg
mov
and
lods
fwait
testb
lods
leave
cmc
aaa
dec
lea
adc
pop
push
inc
stos
mov
in
sti
sub
arpl
sti
scas
sub
jb
xor
bound
cli
xlat
and
pop
loope
lret
stos
dec
push
dec
cmpsb
push
push
inc
add
lods
daa
shl
popf
out
push
mov
out
mov
mov
stc
adc
shrl
or
and
pop
jg
sbb
push
mov
loopne
cmpsl
inc
lret
gs
mov
addr16
xchg
mov
xchg
int
test
mov
mov
aam
call
inc
push
sub
mov
jp,pt
iret
or
loopne
jmp
mov
repz
mov
xchg
pop
adc
mov
dec
inc
mov
mov
lahf
lds
in
pop
aas
push
push
lea
test
mov
push
shrl
dec
lcall
cld
mov
jns
mov
mov
jae
add
inc
and
mov
jp
leave
scas
sub
adc
jmp
enter
jo
xchg
mov
dec
cmpsb
adc
cli
sub
add
xchg
into
cmp
int3
cwtl
jnp
aam
sbb
xor
or
xor
fcomps
outsl
adc
jbe
lods
test
mov
mov
mov
pop
inc
or
lea
sbb
or
pop
lods
xchg
pushf
mov
daa
mov
stos
cs
mulb
pop
lods
mov
dec
addl
mov
insb
sbb
loopne
sbb
aas
pop
pop
in
cmp
push
subl
fsts
aam
or
mov
pusha
pop
mov
lea
incl
orl
mov
push
add
scas
mov
pop
xor
or
out
push
std
mov
inc
lcall
adc
sbb
les
cwtl
cld
stc
add
or
test
adc
cli
ljmp
hlt
test
add
addr16
int
repnz
xchg
xlat
addb
loope
cmp
inc
call
push
subb
mov
mov
icebp
push
enter
adc
insb
in
cmc
cwtl
ja
push
mov
scas
shrl
mov
nopl
lahf
inc
sub
hlt
and
les
xor
shlb
in
mov
adc
fldl
std
sub
int3
add
orb
insl
imul
adc
lea
mov
fimuls
mov
mov
xor
mov
mov
and
xchg
inc
inc
add
fists
das
scas
in
subl
sbb
push
jge
cmp
lds
fwait
pop
and
sarl
push
sub
sub
js
out
xchg
sbb
mov
in
inc
fs
sub
pushf
ds
cmp
outsl
test
inc
mov
loopne
xor
sub
jmp
cmpb
loope
decl
push
negb
movsl
je
daa
sub
xchg
cmpsl
movq
dec
int
pop
mov
imul
jae
scas
add
mov
mov
ret
xchg
scas
in
jmp
js
lods
or
ljmp
fisttpl
lods
push
cli
xchg
ficomps
test
cmp
int3
stos
inc
pop
jne
and
std
hlt
shll
insl
push
test
xchg
jp
repnz
adc
pop
cs
jb
xor
ss
push
fs
sbb
adc
and
shll
dec
stos
cmpsl
xorb
sbb
imul
lret
cld
loopne
push
fucomp
out
mov
aas
inc
push
imul
and
inc
xchg
dec
roll
fnstsw
inc
mov
movsl
and
push
scas
sbb
ss
shl
xchg
pop
pop
ja
push
in
ret
push
cmp
push
scas
xorb
lods
icebp
inc
sbb
mov
fwait
xor
bound
ds
in
nop
or
fnstenv
xchg
in
jecxz
call
lods
inc
psubq
or
sbb
enter
leave
fldl
add
ret
movsb
in
pushf
mov
or
mov
or
xchg
shr
mov
lock
mov
xchg
xchg
xchg
dec
sbb
out
xchg
mov
adc
aas
in
sbb
mov
and
insb
mov
ret
inc
and
das
add
es
dec
xchg
ss
scas
shrb
xchg
dec
xchg
mov
sub
sti
sub
popa
fisttps
cli
lret
in
sbb
push
cld
out
xchg
mov
xor
jb
adc
adc
mov
les
mov
lea
adc
adc
xchg
cmp
shr
cmp
std
jns
pop
cmp
mov
mov
add
mov
ss
outsb
push
add
mov
mov
arpl
adc
bound
xor
push
sbb
ror
add
jp
cmp
pop
xor
fcomip
out
sbb
add
stos
hlt
jge
iret
or
add
cmp
adc
xchg
lock
xchg
iret
aas
punpckhdq
cmp
cmp
or
inc
push
lea
and
lret
movzbl
xchg
in
jns
cld
fildl
fistps
leave
out
rcrb
cmp
les
mov
jno
push
subl
push
pop
inc
hlt
sbb
mov
add
test
jae
push
shlb
lods
pop
mov
mov
adc
push
mov
icebp
insb
jne
jns
and
xchg
pusha
rcl
cwtl
ds
adc
out
pop
xchg
dec
das
lcall
loop
xor
sar
les
pop
ret
mov
mov
and
sti
dec
lods
sbb
push
jno
test
rclb
add
insb
mov
stc
mov
out
call
lods
pop
add
mov
pop
mov
lock
push
test
xchg
pop
aad
inc
pop
xchg
addr16
imul
out
cmp
ret
mov
loopne
mov
cmp
inc
lret
pop
mov
jmp
and
sti
jb
xlat
sub
scas
arpl
dec
addr16
shlb
pop
scas
ja
and
sub
cltd
push
jo
decb
cmpsb
iret
sub
xchg
popf
and
or
ss
gs
in
and
outsl
outsl
pop
sbb
xchg
popa
or
add
outsl
adc
scas
sub
sbb
jbe
leave
push
jbe
sub
idivb
pop
sbb
jecxz
btr
push
gs
lahf
mov
xor
xor
and
xchg
push
jnp
sub
lahf
push
data16
adc
fsub
cmp
adcl
or
adc
jle
fsubl
shll
in
stc
lret
mov
call
mov
sub
add
and
mov
in
push
mov
cli
es
outsb
ret
xor
lret
scas
mov
mov
stc
dec
mov
rorb
jle
test
push
push
inc
pushf
mov
mov
add
sbb
xchg
jecxz
cli
je
insb
push
repnz
rcl
cs
xor
testb
xlat
mov
lret
jmp
sarb
dec
sti
jl
loopne
inc
scas
mov
dec
and
cmpsl
data16
sub
xchg
je
out
mov
repnz
loope
push
outsl
cmp
test
inc
test
xchg
imul
jg
add
add
jg
add
ficoms
es
inc
pop
fidivrs
iret
and
aad
add
xchg
mov
jns
data16
xchg
in
rcl
dec
enter
inc
xchg
mov
mov
testl
int3
xor
popf
jno
leave
test
loop
mov
test
cwtl
xchg
jmp
fidivl
xchg
xchg
mov
out
cli
and
scas
mov
xchg
mov
push
push
fstps
push
xlat
cvtpi2ps
enter
xchg
lcall
leave
push
icebp
jnp
rolb
and
dec
jae
movb
xor
add
cmc
inc
pop
mov
xor
in
xchg
dec
dec
mov
fnstenv
aaa
mov
pusha
loope
std
xchg
and
cmp
call
pop
jmp
xchg
fsubl
test
xchg
xchg
push
mov
test
adc
aam
jp
mov
jnp
ret
dec
nop
ret
outsb
xchg
test
adc
aam
or
stos
push
sbb
xor
rcl
mov
rclb
jb
mov
into
rcr
and
cmp
imul
dec
stc
stos
movsl
xor
jae
sbb
or
js
pop
inc
mov
pop
fs
dec
repz
push
add
mov
loope
xor
or
xchg
jnp
sbb
push
mov
sarl
sar
ret
push
xchg
popa
fldenv
jl
iret
mov
das
fwait
push
orb
jg
int3
mov
inc
imul
int
inc
mov
pop
imul
dec
insl
inc
sub
in
std
iret
push
pop
bswap
sub
sbb
sahf
sub
mov
xchg
ljmp
jle
rcrl
fisubrl
les
hlt
cmp
popa
mov
int
loopne
mov
add
rorl
mov
daa
mov
lods
mov
inc
inc
jle
cmp
lret
test
sub
add
xchg
clc
notl
loop
pop
cmp
xchg
pop
fisubs
ss
inc
lahf
jnp
mov
add
repz
cwtl
lods
je
stos
inc
push
mov
inc
cmp
lcall
sbb
sbb
daa
mov
jno
cmp
inc
sti
fnsave
adc
loope
data16
xchg
leave
bound
add
and
cmp
push
icebp
mulb
ret
xchg
outsl
aam
je
mov
lret
mov
call
jmp
shll
addr16
fsubr
in
pushf
enter
pop
bound
xchg
jge
mov
mov
sub
outsl
hlt
cmp
mov
mov
inc
popf
jle
push
fdivrl
mov
cmpl
jne
push
lahf
push
cmp
arpl
das
cmp
pop
jmp
loopne
out
sub
divl
mov
add
push
sub
ds
mov
push
loop,pn
push
pop
movsl
inc
daa
inc
pushf
lods
jl
mov
call
outsb
lods
or
dec
pop
push
mov
inc
pop
adc
cmpsb
lahf
out
jbe,pt
jno
test
shr
scas
test
int
mov
push
pop
out
pop
cmp
subl
xchg
lret
or
iret
repz
adc
push
inc
dec
fidivs
data16
dec
movsb
adc
lods
fldl
icebp
or
jns
sbb
js
push
fs
lcall
inc
es
xchg
xchg
cmp
in
shl
or
inc
mov
out
xor
pop
ret
push
adc
inc
mov
mov
xor
xchg
jg
popl
xchg
inc
jecxz
cli
jp
out
mov
jo
or
out
sub
pop
dec
adc
mov
jbe
pop
pop
fcoms
mov
out
push
push
testl
mov
sbb
cmp
add
jnp
aad
jnp
into
pop
mov
aad
scas
mov
push
push
imul
sub
jle
aad
loopne
mov
pop
mov
jnp
movsb
jge
lcall
pop
mov
repz
cmp
dec
test
sbbl
pop
repnz
adc
test
outsl
jecxz
hlt
cwtl
xchg
test
ss
xchg
lret
int
jl
push
imul
loope
fldenv
xchg
mov
into
das
push
or
xchg
fs
repz
mov
icebp
push
sbb
dec
sub
xchg
loop
push
pushf
jae
fisttps
mov
adc
hlt
insl
ficoms
fidivrs
orb
ja
xchg
inc
frstor
push
stc
out
mov
andl
jmp
loop
cltd
cld
jb
lcall
sub
jmp
push
sub
pusha
loope
rolb
push
add
cmp
data16
cwtl
jg
fcomip
jne
add
popa
popa
movb
out
ljmp
lcall
insb
pop
dec
ds
cmc
mov
xor
dec
outsl
cmpsb
dec
loopne
iret
js
pop
gs
dec
push
fs
leave
jnp
cmp
jne
orl
mov
adc
jmp
enter
mov
das
loopne
inc
mov
and
subb
lds
mov
inc
push
xchg
shl
mov
femms
cld
xor
loope
setbe
and
cmc
sbb
sbb
dec
ret
pop
mov
loop
scas
cltd
mov
push
outsl
mov
cli
lret
scas
outsb
loop
xor
dec
daa
xchg
pop
mov
and
adc
mov
fsubl
shr
pop
or
sub
lods
push
push
inc
sub
jne
sbb
lahf
pushf
dec
scas
fwait
push
rcrb
adc
pop
adc
sahf
out
push
xchg
rorb
mov
clc
push
fs
jbe
cmp
scas
rolb
popa
loope
negb
push
ljmp
ss
dec
mov
pop
ret
ret
out
lret
xor
add
mov
and
sbb
adc
mov
mov
stc
loope
ja
mov
pop
rolb
cmp
test
add
test
and
roll
mov
ds
xor
dec
nop
scas
arpl
ficoms
stos
imul
cbtw
rcrb
push
inc
mov
imull
jne
xor
mov
inc
mov
push
test
clc
jo
test
xchg
shlb
xchg
in
xchg
push
in
add
pushf
sub
cmp
gs
dec
lcall
push
in
xchg
pop
pop
dec
imul
nop
adc
push
leave
push
stos
inc
test
negl
dec
je
jbe
les
les
mov
gs
les
mov
jae
lods
je
fsub
inc
add
repz
fisubs
xchg
out
xchg
mov
push
roll
push
and
sbb
jo
fisttps
mulb
ja
out
fldcw
imul
out
stc
dec
push
cld
stos
ds
mov
in
mov
mov
mov
jmp
push
sub
jge
xchg
or
hlt
insb
push
sbb
xchg
filds
lret
mov
mov
outsl
jns
aam
lods
xor
push
mov
push
cmp
pop
mov
push
xchg
mov
cmp
xor
es
add
ss
lret
lock
xor
xchg
add
jno
outsb
loop
mov
mov
repnz
out
pop
cmp
movsb
outsb
mov
addr16
sahf
push
movsb
out
test
add
fwait
and
mov
int
push
jns
in
jae
dec
adc
sub
loope
imul
adc
data16
cmp
inc
sub
insb
push
xor
jmp
xchg
inc
jp
ret
aaa
mov
mov
orl
rolb
sbb
fst
fcomps
cmp
fiaddl
inc
dec
sbb
jns
dec
cmpb
pop
stos
sbb
dec
dec
or
inc
push
jne
setbe
jbe
cmp
cmp
out
lea
mov
das
ret
cmpsb
push
ss
push
sub
jne
xchg
out
mov
mov
into
test
dec
and
sub
push
mov
in
insb
aad
sub
lock
mov
stos
scas
test
jge
jl
and
shrl
divl
rol
sbb
push
push
jle,pt
pop
aad
pop
push
push
inc
in
sti
adc
insb
dec
xor
xor
inc
out
ret
insl
test
inc
xchg
lds
adc
cs
sub
iret
xchg
in
xor
cmc
pop
sbb
adc
push
push
mov
xor
lcall
inc
fdivs
outsb
stos
or
lds
and
mov
stos
hlt
clc
cltd
in
push
mov
imul
imul
lret
mov
repnz
mov
outsb
xchg
repz
pop
xor
incl
xlat
mov
lods
std
fsts
int3
adcl
push
in
push
inc
jae
subl
inc
adc
mov
mov
mov
je
jbe
into
sub
std
ja
add
jge
inc
mov
mov
or
in
scas
mov
addr16
mov
xchg
lcall
jbe
or
lret
xchg
push
or
adc
mov
add
push
jmp
xchg
and
iret
mov
mov
jecxz
adc
stc
mov
cli
fisubrl
mov
ficoms
negl
push
xchg
mov
insl
xor
hlt
dec
mov
mov
sbb
mov
push
es
int3
sub
gs
mov
shll
jb
push
mov
pop
pusha
lret
test
sbb
pop
cmc
and
loopne
mov
idivl
pop
and
lods
mov
imull
shl
cmc
jle
jle
imul
popf
jno
dec
ljmp
out
pusha
xor
shlb
in
aad
idivb
xchg
pop
cli
adc
cmp
cmp
pop
fisubl
dec
ds
lret
mov
sahf
ds
mov
cmp
push
jmp
shll
outsb
inc
add
daa
jp
adc
out
adc
sub
dec
xchg
ret
cmp
adc
movsl
into
ds
cli
inc
imul
xchg
jmp
mov
xchg
insb
ja
add
pushf
mulb
aad
xchg
int
mov
cmp
jp
arpl
das
dec
bound
lods
xchg
aam
xor
add
adc
xchg
rcrb
pop
iret
cmc
leave
push
jne
push
jne
push
add
mov
in
xlat
cmpsl
call
adcb
inc
ficompl
jnp
push
leave
out
dec
push
dec
fbld
das
test
xor
test
rorb
inc
cld
mov
aaa
and
xchg
push
and
icebp
jp
mov
add
ljmp
inc
and
pop
cmp
scas
or
cmp
xchg
pop
loope
mov
stos
es
add
sub
add
push
mov
push
movsb
pop
lret
inc
mov
xchg
leave
mov
jl
adc
into
sub
xchg
idivb
lret
jns
push
add
into
sbb
es
mov
lock
outsl
decb
out
fdivl
int
sahf
stos
jbe
aam
sub
je
push
int
ja
mov
pop
sbb
mov
lret
xchg
int3
xor
push
daa
sbb
dec
in
add
rolb
dec
fcmovu
insl
pushf
and
xor
rclb
test
sbb
imul
cmp
lock
cmp
cmc
idivl
adc
call
jbe
fsubs
popa
xor
jge
fisubrl
dec
mov
daa
mov
mov
loope
stos
mov
mov
mov
mov
cmp
fadd
ss
leave
mov
out
sbb
inc
stc
inc
and
inc
in
inc
jo
or
sbb
mov
jns
push
xchg
jecxz
ljmp
inc
push
push
repz
outsl
lahf
cli
sbb
es
jb
cmp
int3
insl
and
orl
jmp
inc
push
inc
inc
dec
pusha
mov
pop
inc
xor
pop
out
inc
out
mov
enter
imul
insb
lods
dec
dec
inc
mov
lods
pop
in
jp
jnp
jecxz
fildl
xchg
sahf
pop
sub
outsb
pushf
scas
or
pop
inc
sbb
push
xchg
hlt
scas
ficomps
call
xor
jmp
jg
cld
out
jne
das
ret
pop
mov
xchg
shrb
ss
in
adc
sti
adc
in
dec
lods
cmp
or
cld
mov
cwtl
shll
lret
ds
ljmp
and
and
out
jne
adc
dec
fucom
cmp
and
push
adc
imul
xchg
mov
cmp
or
push
mov
or
add
int3
inc
push
pop
je
and
sbb
push
out
push
jge
and
mov
dec
add
xor
cld
mov
daa
or
sar
adc
fs
xchg
fadds
push
sub
stc
das
and
shll
cmp
cmp
je
sbb
push
stos
push
mov
movsb
adc
stos
pop
adc
pop
lcall
dec
pushf
inc
pop
xor
test
or
sub
rorb
xchg
sub
mov
adc
adc
mov
dec
loope
std
jae
dec
adc
pushl
clc
jmp
pop
out
sub
mov
xchg
lahf
xor
js
jg
mov
mov
rorb
xor
ret
pop
test
test
jl
mov
out
xor
xchg
and
dec
push
loopne
dec
push
insb
shlb
imul
pop
out
jne
mov
jle
pusha
cmp
xchg
dec
jo
sub
xchg
loopne,pt
add
cmp
js
cmp
push
hlt
idivb
cli
test
dec
pop
cmp
cli
mov
subl
daa
add
out
and
loopne
imul
jmp
adcl
call
sbb
cld
mov
push
out
and
jbe
jnp
test
push
dec
fdivp
sbb
imul
gs
sbb
notl
imul
xchg
cltd
adc
push
push
push
lock
mov
loop
mov
xchg
notb
jecxz
cmp
mov
insb
add
aas
call
add
dec
push
inc
in
sbb
inc
inc
xor
pop
dec
decb
leave
mov
sbbl
cs
loop
lret
push
dec
cmpsb
xor
jecxz
pop
outsl
sahf
bound
jo
cmp
sti
out
jno
int
lods
adc
or
int
loope
jl
outsb
push
sub
xor
fwait
pop
mov
das
bound
jne
xchg
pop
in
sbb
ret
lock
jo
bound
loope
cmp
mov
nop
fisttps
fistpll
dec
push
mov
imul
push
cmpl
add
cmp
dec
shrl
adc
js
daa
sahf
sbb
jg
xor
movsb
sub
ficoms
push
sub
in
mov
cli
leave
dec
jmp
and
mov
jno
or
adc
insb
shll
popf
mov
add
mov
dec
cmp
dec
inc
inc
arpl
mov
dec
mov
push
call
fistps
jecxz
aad
pop
xchg
and
out
loopne
add
fsubl
fcoml
jae
pop
inc
pop
or
dec
fisubs
xchg
jnp
mov
dec
ja
sbb
icebp
jmp
mov
shlb
test
gs
aas
xchg
scas
je
push
test
neg
sbb
jmp
push
fdiv
mov
movsl
mov
in
ljmp
or
fwait
dec
aas
in
push
inc
out
and
dec
add
mov
jo
mov
fwait
addr16
or
lock
sbb
pop
xor
adc
pop
xor
subb
adc
jbe
je
ret
dec
pushl
sub
jp
and
loopne
arpl
inc
mov
cmpsb
xchg
jns
pushf
dec
push
push
mov
add
sub
arpl
cmc
inc
leave
test
xchg
stos
data16
repz
out
pop
and
std
xor
addr16
js
mov
es
loope
imul
ficoms
daa
push
jge
dec
out
mov
inc
aaa
push
adc
rcrb
sarb
clc
dec
mov
xchg
xor
insl
nop
sar
arpl
push
inc
in
adc
xchg
pushf
repz
jecxz
scas
pop
adc
sub
push
aaa
out
xchg
push
xor
ret
or
dec
pop
and
xor
cld
dec
pop
test
add
sbb
push
dec
mov
std
mov
test
shl
jge
xchg
lret
push
mov
lods
lret
push
adc
lahf
adc
nop
add
shl
pop
sub
adc
fwait
out
lock
pop
jmp
in
pop
clc
inc
sbb
sbb
or
push
mov
inc
ror
mov
dec
sub
into
lods
pop
mov
adc
add
lea
add
add
push
inc
pop
dec
xchg
dec
xchg
dec
xchg
dec
push
mov
pop
dec
call
cmp
je
xchg
push
pop
dec
push
pop
inc
xchg
inc
sub
xchg
dec
dec
mov
imul
jmp
inc
sbb
push
mov
aad
out
pop
inc
mov
or
addl
into
dec
xchg
sbb
mov
test
sbb
loopne
js
out
hlt
jmp
mov
dec
dec
jmp
add
notb
or
cld
jl
aam
shr
xor
mov
repz
push
test
movsl
push
lret
fwait
insb
loopne
pop
cmc
insb
sub
adc
in
js
sbb
add
sub
mov
or
roll
mov
enter
cwtl
into
add
cmc
dec
sub
hlt
aas
sbb
lods
int
clc
inc
out
dec
sbbl
int3
sub
or
enter
loope
call
in
xchg
fsub
and
out
mov
aam
pop
scas
push
dec
mov
inc
push
jae
and
or
int
rorl
outsl
sub
test
mov
push
out
cmp
add
in
cmp
jge
mov
fs
jecxz
mov
and
cwtl
nop
pop
add
in
out
fdivrl
test
jnp
loop
and
mov
lds
mov
dec
and
inc
cltd
stos
mov
iret
js
push
push
gs
mov
and
and
pop
jno
lret
lret
les
outsb
out
pop
lods
ret
out
mov
repz
mov
pop
dec
scas
and
pop
jp
stos
clc
lods
nop
inc
mov
jg
adc
xor
adc
inc
push
lods
xchg
mov
sbb
ds
into
sbb
in
mov
pop
xor
sub
popa
jge
faddp
push
rolb
dec
test
in
adc
in
ss
sbb
icebp
idivb
aas
and
mov
outsb
jno
adc
fnstsw
les
mov
sbb
arpl
fidivl
cs
call
out
adc
push
sub
loope
loopne
add
sub
add
cmc
jge
nop
pop
loopne
pop
xor
jb
mov
mov
icebp
xor
repnz
lret
shlb
loope
and
cmc
and
mov
inc
xor
movsb
lock
fbld
push
push
or
dec
out
and
and
xor
inc
sbb
adc
and
cmc
add
xlat
into
xchg
mov
jecxz
jge
mov
rcl
jge
push
mov
hlt
call
lds
mov
jle
les
push
jnp
shr
jnp
xor
test
shl
sti
lret
inc
xchg
mov
aas
inc
lret
ss
add
and
xchg
mov
xor
testb
and
insl
push
ret
clc
jb
mov
adc
push
je
out
xor
data16
icebp
and
into
xchg
fmull
sbb
sbb
cmp
test
cli
loop
adc
out
or
mov
sub
mov
test
jo
inc
mov
mov
jae
add
enter
cli
lahf
dec
pushf
pop
out
je
sub
js
into
into
hlt
add
cld
xchg
test
pop
xor
test
das
out
fdivrl
imul
lret
jbe
lods
or
xor
xchg
fsubr
pop
out
cld
dec
mov
mov
mov
in
xlat
mov
gs
sbb
or
xchg
dec
and
push
jmp
jns
mov
mov
stos
inc
ss
icebp
popa
sub
adc
push
mov
mov
out
dec
pop
ret
ja
int3
jno
jae
fldenv
cwtl
mov
bnd
hlt
daa
mov
loop
add
test
add
clc
dec
push
mov
jae
pop
and
insl
push
jp
ret
ss
repz
ja
mov
insb
shl
scas
and
xchg
fwait
jne
xchg
inc
std
icebp
cmpsb
adcl
push
fbld
cmpsl
mov
xor
cmp
xchg
and
andl
dec
andb
cmpsl
fbld
dec
jns
imull
push
pop
sub
mov
mov
andb
push
cmc
popa
mov
lea
iret
fcoms
xchg
cmp
mov
cld
stc
lret
test
shrb
pop
and
xor
cmp
xor
std
or
jnp
or
sub
ja
add
mov
sbb
mov
sub
jns
cli
push
lock
pop
nop
loope
xchg
pop
sub
add
shrb
test
xchg
jecxz
les
sbb
mov
mov
dec
out
out
sub
in
pop
xor
xchg
or
xchg
xchg
lret
cmp
pop
and
ja
fwait
xchg
dec
insb
push
mov
mov
jg
xor
sub
pusha
mov
mov
movl
sbb
add
add
loop
cmp
xor
xor
ror
in
jo
inc
lret
divb
cmpsb
int
daa
notb
inc
push
std
insl
mov
daa
inc
int
mov
push
lret
dec
and
fbld
scas
rcrl
adc
add
in
rorl
into
shl
lahf
push
addr16
shlb
jae
xchg
lcall
std
cmpsb
sbb
mov
inc
and
mov
scas
jecxz
repnz
pusha
add
shl
xlat
imul
iret
jb
jno
xchg
test
fsub
cmp
dec
sbb
and
inc
inc
nop
repz
adc
add
cmp
ja
repnz
mov
ss
inc
and
xor
push
jns
int
xor
dec
dec
lods
xchg
pop
mov
mov
dec
test
mov
xchg
add
push
inc
xchg
aaa
loopne
test
and
sub
aaa
addr16
push
sub
roll
cmp
xchg
dec
lcall
push
dec
loopne
jns
stc
pop
xchg
adc
cs
xchg
fidivrs
fldt
mov
addr16
aad
sub
int3
lahf
js
add
mov
icebp
into
xor
xchg
sbb
insl
and
lds
aas
cli
xor
pop
in
add
test
ja
and
ja
in
decl
out
call
pop
push
enter
gs
imul
mov
xor
add
inc
rorl
sub
push
lret
or
sarb
lods
fs
sub
add
jae
jmp
mov
xor
sub
sub
rcl
call
xlat
repz
cmp
pop
stc
push
daa
adc
add
lock
fistpll
popa
cmp
adc
dec
scas
mov
iret
call
jbe
out
cmpsl
inc
pop
pop
in
xor
lcall
dec
cmp
ja
add
xchg
sbb
shrb
scas
scas
xchg
test
sahf
inc
add
popf
jl
inc
mov
dec
imul
jo
pusha
pop
sbb
fs
gs
xchg
or
cmpsb
out
andb
stos
cs
sbb
aaa
lcall
shl
fidivrs
and
inc
sbb
test
jno
popf
aam
lods
pusha
aad
push
mov
pop
jnp
iret
pop
or
adc
inc
jle
mov
push
iret
std
add
dec
cmpsl
push
adc
mov
add
add
arpl
lods
imul
mov
ljmp
orb
push
adc
je
enter
mov
sbb
fistpl
testl
and
push
sbb
sbb
xor
lret
push
pop
pop
push
dec
inc
push
sbb
mov
add
enter
in
jae
frstor
in
and
mov
sbb
popa
in
test
adc
aam
clc
jl
dec
push
fwait
push
ret
xchg
push
gs
xor
mov
aas
jo
or
mov
pop
ds
int3
and
xchg
pop
out
subb
mov
dec
fsincos
mov
cmp
ljmp
bound
fistpll
mov
adc
xchg
fmuls
pop
hlt
mov
xchg
sbb
jb
adc
cmpsb
ret
xchg
mov
enter
jnp
lahf
sub
aaa
push
in
and
jmp
adc
inc
inc
mov
sti
aaa
pop
sbbb
enter
push
sub
sbb
jmp
rsqrtps
in
shrl
leave
lret
insl
xchg
test
out
pop
je
ret
jae
stc
jne
dec
mov
xor
ret
ret
mov
pusha
repnz
pop
imul
push
add
dec
xor
fwait
pop
cmpxchg
push
ja
adc
xor
sub
and
adc
fisttps
nop
mov
adc
inc
mov
repz
xchg
dec
into
or
or
jl
push
push
popf
inc
mov
rcll
xlat
shl
xor
cld
test
sub
jge
stos
push
aad
cmp
div
xor
int3
jo
aam
repz
jle
mov
gs
orb
adc
in
mov
popa
mov
in
jne
inc
xchg
mov
or
pusha
inc
push
and
xor
testl
int3
arpl
stos
fidivl
inc
int3
out
les
mov
pushf
mov
lahf
cmc
pop
into
cltd
test
gs
mov
adcl
out
sbb
movl
xchg
test
je
ljmp
out
lret
add
xchg
cmc
jle
jb
add
cmp
sbb
loope
add
test
sub
outsl
fsubl
add
sbb
jnp
inc
movl
sbb
mov
cld
sub
xor
inc
mov
rorl
stc
mov
imul
ret
lods
mov
ljmp
push
mov
jnp
xorb
test
pushf
push
or
adc
leave
pop
mov
test
dec
add
cmp
enter
inc
ss
pop
jecxz
dec
mov
test
int
incb
add
dec
bound
cmpsb
mov
movsl
loopne
jb
not
xchg
adc
cld
stos
fdivrp
stc
mov
mov
sbb
xchg
subl
xchg
sub
addl
or
std
mov
je
sub
xchg
adc
aaa
pop
ficomps
stos
add
inc
into
in
push
pop
pop
pop
inc
hlt
dec
loopne
aam
adc
je
xchg
mov
cmp
pop
cmpsl
mov
popa
sub
in
xchg
imul
mov
xor
jb
jecxz
cmp
push
std
or
clc
in
adc
movq
loope
mov
nop
xlat
testl
mov
ja
cmpsl
scas
cmp
ret
gs
push
push
jle
push
and
test
mov
repz
mov
adc
pop
cmp
insl
xchg
mov
rolb
fsubrl
cmp
xchg
fmuls
ficompl
mov
pushf
dec
push
sbb
pop
subl
cmp
pop
cmp
jl
jbe
add
mov
testb
sub
loope
mov
pop
sbb
mov
mov
adcb
mov
loope
dec
icebp
pushf
pushf
test
pop
ss
dec
loop
xchg
fsubl
aas
ss
das
jae
sub
sbb
lret
out
inc
insb
xor
sbb
sub
jne
daa
icebp
mov
sti
loop
scas
xor
arpl
cmp
jno
sub
aad
ja
sti
int3
sbb
icebp
xchg
push
imul
inc
jno
pushf
outsb
out
mov
push
mov
push
mov
push
add
push
in
jl
cmc
push
in
enter
out
xor
xor
mov
add
pop
push
cs
nop
js
jl
pop
and
and
sbb
ret
mov
stos
xchg
fidivrl
xchg
pop
xchg
int3
jb
dec
sahf
push
lret
lds
mov
mov
data16
std
fistl
arpl
cmpb
cltd
lock
jnp
cmpsl
dec
ret
outsb
jns
pop
cwtl
loope
jb
jb
xor
push
je
enter
sub
ds
movsl
or
jp
fidivs
and
jae
insl
cmp
push
add
cltd
mov
sahf
inc
stos
movsl
repz
scas
repz
add
loopne
inc
inc
loope
xchg
push
cmp
fwait
xor
xchg
push
js
xchg
xchg
xchg
lret
pusha
mov
adc
sbb
int
popa
adc
call
imul
cmp
or
out
push
and
mov
dec
inc
adc
cmp
jnp
fiadds
cmp
imul
idivb
sbb
mov
sub
jae
jecxz
mov
dec
jg
inc
xlat
dec
scas
cmpsl
inc
gs
fs
sbb
pop
add
push
fwait
cmpsb
into
ljmp
nop
pop
adc
cmpl
dec
int3
mov
rcr
mov
sub
mov
das
and
cmp
arpl
gs
mov
push
aaa
jb
aad
adc
fwait
mov
push
test
loop,pn
pop
pop
mov
add
cmp
push
xchg
fs
push
push
xchg
and
push
xchg
imul
cld
mov
js
inc
and
cmp
sbb
icebp
dec
mov
or
mov
insl
popa
and
xchg
in
lret
sbb
movsb
xchg
decb
mov
in
pop
cli
push
and
jle
int3
stc
aaa
jp
fcmovb
test
icebp
leave
adcl
shll
es
in
repnz
cmpsb
mov
push
in
and
aaa
cli
mov
popa
hlt
out
psrad
imul
mov
cld
or
test
dec
cmp
and
out
jle
pushf
mov
testb
xor
xchg
js
xor
rcrl
imul
lcall
std
fstl
lcall
jmp
je
pushf
iret
push
xor
mov
ljmp
jae
filds
mov
into
sub
int3
outsb
loope
outsb
mov
call
scas
xor
mov
movsl
adc
out
add
mov
cld
mov
mov
out
jae
mov
pop
push
xchg
outsb
push
xchg
out
inc
pusha
add
mov
pop
test
or
stos
daa
lods
adc
push
inc
cmc
pushf
pop
rolb
sbb
orb
or
movsbl
rorl
sub
into
bound
mov
push
sbb
push
in
push
leave
adc
sahf
adc
addr16
test
push
cmp
adc
mov
sub
jl
adc
out
sahf
sbb
push
inc
mov
stos
jae
dec
mov
icebp
dec
mov
xchg
and
jns
add
cmpsl
mov
fwait
jnp
aad
mov
jno
push
mov
fsub
or
pusha
lret
hlt
xor
int
sub
movsl
sub
cld
ss
adcl
add
push
rclb
cli
mov
push
mov
rolb
lea
add
repnz
lret
aad
pop
push
clc
mov
jg
js
adc
push
psubb
mov
jp
in
push
push
mov
aad
jns
jg
or
leave
mov
lret
mov
xchg
ds
int
inc
mov
adc
jno
lods
testb
ret
add
repnz
xor
jmp
lcall
or
cmp
push
enter
loop
lahf
pusha
mov
xor
mov
inc
pushf
jno
pop
xchg
push
mov
cli
jno
push
fldl
mov
sbb
cmpsl
push
ja
cltd
and
dec
and
outsb
and
pop
cwtl
stos
fabs
in
inc
fstl
mov
lods
les
push
add
addr16
loopne
mov
mov
inc
test
sbb
mov
push
in
stos
dec
out
int
iret
xor
movsb
xchg
popl
cmpsb
mov
mov
jo
inc
mov
popl
inc
pushf
decb
stos
ffreep
movsl
adc
jg
int
lods
xchg
push
stos
out
mov
sbb
mov
mov
popa
mov
in
addr16
sbb
add
pop
adc
loope
dec
test
sub
lahf
push
scas
push
mov
into
sahf
test
cmc
testb
neg
stos
mulb
or
xchg
int3
xor
cwtl
jmp
hlt
addr16
pop
sahf
int3
pop
ljmp
out
inc
push
cmp
inc
sbb
test
insb
cli
out
xchg
test
xchg
add
gs
loop
aad
das
aam
and
nop
addr16
xchg
aas
cmp
mov
fadds
clc
xor
outsl
dec
xorb
cmc
sti
jae
cmpsb
xchg
arpl
pop
repnz
push
push
inc
or
push
dec
mov
roll
and
out
adc
push
enter
sub
loop
xor
leave
imul
dec
cmp
mov
sbb
aaa
sahf
inc
ret
shl
je
sbb
rorl
sub
inc
push
dec
mov
repnz
ss
sub
repnz
sarb
cltd
in
or
push
xchg
lea
xor
pusha
pushf
cs
add
jae
jmp
add
imul
xlat
sub
jg
cli
ja
sbb
sbb
sbb
pop
dec
imul
adc
enter
mov
test
adc
ss
and
lods
pop
loop
dec
dec
sub
cld
dec
and
mov
test
inc
xchg
push
test
iret
fstl
sbb
adc
mov
inc
push
mov
cld
jno
or
ret
bndstx
sbb
es
clc
jae
add
xchg
in
ljmp
inc
mov
and
pop
cwtl
pop
loopne
push
popf
xchg
jnp
jbe
inc
jg
fbstp
iret
insb
jge
scas
fucomi
je
lcall
mov
add
mov
data16
fldl
mov
push
cmp
or
lahf
xchg
andl
pop
popf
sbb
das
jl
adc
sar
dec
xor
or
imul
ret
hlt
mov
div
xor
add
push
adc
out
sbb
inc
mov
movb
adc
out
xlat
add
dec
or
xchg
movsb
test
enter
aaa
push
xor
inc
add
call
das
call
push
jno
int
sbb
addr16
sub
mov
xchg
pushf
jmp
lcall
push
imul
test
ja
dec
jecxz
enter
sbb
fwait
lods
in
stos
or
pop
mov
mov
dec
aaa
xchg
cmp
push
das
lds
jno
outsl
les
iret
and
lret
mov
add
xchg
xchg
mov
cmp
cmp
hlt
movsb
dec
mov
insl
jp
mov
xor
and
mov
jnp
divb
mov
add
nop
or
inc
xlat
jg
jle
push
push
cmc
sbb
mov
in
rcrb
pop
pop
pop
inc
xchg
xchg
mov
cmpsb
pushf
mul
popa
shll
shlb
scas
sti
cld
inc
jnp
mov
stos
fmull
xchg
bound
das
in
sbb
rorb
lods
mov
mov
jb
xor
in
and
cmp
lds
dec
mov
lea
fdivs
mov
inc
aas
pop
jp
or
cli
lcall
xchg
add
and
jne
out
xchg
jns
repnz
jle
loop
int3
inc
push
dec
xchg
and
or
pushf
js
xchg
pusha
jle
inc
adc
nop
pop
jp
out
sub
add
sbb
push
jne
aas
or
mov
mov
insl
enter
lea
jnp
and
stos
movsb
lcall
and
test
sti
cmp
loopne
inc
and
clc
jl
test
pop
pmullw
sub
adc
mov
test
pushf
or
xchg
fnstenv
push
in
or
fimull
icebp
nop
cmc
adc
inc
sbb
in
nop
pop
pop
ljmp
fwait
add
adcb
sahf
mov
sub
cld
and
mov
repz
call
out
pop
sub
xchg
shrb
test
sarb
cmp
imul
fdivl
jg
sar
and
cmpl
scas
jns
xor
pop
inc
sbb
mov
mov
int3
add
cmpsb
popa
sub
loope
cld
mov
push
inc
icebp
fisubs
loop
jge
push
pop
pushw
jne
sub
aas
adc
sub
icebp
mov
shr
rorb
jo
adc
rcll
pop
sarl
mov
adc
test
mov
ds
dec
les
les
stc
andb
lahf
negb
fistpll
orb
xor
lret
pop
push
call
push
repnz
lret
pop
shlb
xchg
repz
out
adc
jp
aam
loope
notl
inc
xchg
jmp
sahf
and
into
addr16
push
inc
jae
lret
xchg
cmp
sbb
inc
xor
xor
mov
xchg
mov
pop
push
in
xor
dec
fnstcw
ja
imull
int
pop
and
iret
cmp
arpl
dec
xchg
mov
xor
jmp
jmp
mov
cmp
and
push
clc
stos
push
inc
mov
adc
jnp
pop
test
mov
mov
push
int
in
out
imul
or
pop
insb
adc
jno
pop
ret
mov
ss
stc
push
dec
sub
loope
jge
xor
enter
mov
mov
clc
cmp
aam
pop
rcrl
sub
xchg
sbb
je
jbe
je
jb
dec
mul
push
in
mov
popa
insl
inc
and
or
int
add
xor
push
imul
lret
cmp
pop
cmp
mov
rolb
or
imul
mov
outsb
sbb
jae
shlb
push
iret
aam
xor
js
out
adc
cmp
inc
pop
dec
sub
out
jno
call
xchg
push
mov
pop
pop
inc
sti
sub
pop
or
xchg
data16
mov
add
mov
sub
dec
stos
mov
out
add
into
cmpsb
mov
ja
std
aad
adcl
pop
iret
and
mov
push
pop
rcll
xlat
inc
dec
mov
in
mov
aad
bound
jae
repz
push
jle
out
mov
xchg
push
pop
inc
lret
push
xchg
mov
cmp
mov
loop
add
sbb
std
jne
lcall
movsb
popl
std
popl
xchg
jecxz
ffree
les
insl
mov
icebp
or
loopne
out
inc
aas
mov
dec
stos
ret
xor
pop
adcb
mov
lret
mov
leave
fisubrl
mov
sbb
shr
fsubrs
push
into
arpl
jns
push
sbb
sarb
sbb
rcrb
insb
std
xchg
mov
cltd
inc
jp
push
dec
pusha
or
or
sub
and
cmp
scas
pusha
fwait
insl
push
sarb
pop
call
imul
mov
xor
mov
fistpll
push
and
sarb
and
mov
push
mov
popa
faddl
pop
int3
add
pop
rolb
and
in
pop
ljmp
jle
scas
cmp
enter
cmp
in
jg
ror
cmp
xor
sbb
lods
fisubrl
xchg
mov
and
in
ret
ficoml
jne
add
cmpsb
dec
sbb
and
ss
fs
daa
jb
or
xor
jae
test
lahf
std
ret
ffreep
lods
jge
and
push
into
cmpsb
out
adc
jns
je
jns
jle
mov
out
xor
stc
xchg
mov
int3
jmp
scas
mov
push
das
xor
pushf
shlb
mov
test
fildll
push
jnp
inc
push
scas
mov
imul
aad
push
fdivrl
xor
mov
and
jne
int3
fwait
push
add
xor
mov
mov
inc
add
daa
fdivs
stc
movsl
cmc
in
dec
cli
stos
jle
add
jo
rcrl
shll
cmp
cmp
sar
lods
leave
push
cmp
insb
cmp
out
cmp
shll
imul
add
shrb
sarl
out
sbb
cli
repz
es
insl
xchg
mov
lock
push
adc
jno
in
cmp
shll
lcall
xlat
jns
jg
mov
adc
mov
inc
xchg
pop
enter
or
xchg
push
popa
das
fisttpll
stos
out
cld
push
sbb
sub
aaa
sbb
xor
fwait
jp
ss
in
lahf
daa
bound
sbb
clc
loopne
daa
out
es
push
xor
in
sbb
hlt
out
cmp
mov
or
mov
shl
add
pop
sub
pop
sahf
mov
adc
xchg
push
movsb
mov
and
jne
enter
roll
aaa
lock
lret
inc
xchg
mov
scas
in
inc
sbb
push
add
mov
lods
sub
sub
lock
inc
das
aas
mov
arpl
xor
dec
movsb
aas
jle
mov
jns
jae
dec
cmp
and
mov
shrl
jns
js
dec
jbe
movsl
add
cmp
cmp
cmp
xchg
jo
adcb
mov
lret
movsb
loop
push
sbb
in
jmp
push
add
cmpsb
or
icebp
incl
aam
xchg
pop
jg
or
sub
adc
stc
pop
mov
iret
sub
cmpsl
dec
jae
sarb
ja
scas
add
mov
jge
push
ja
testb
mov
repnz
xchg
fcomp
and
fwait
in
push
mov
cmp
push
aas
jle
fistl
fidivrl
test
and
data16
ret
test
das
enter
shl
sbb
test
mov
pop
dec
loope
cwtl
push
xor
ss
cltd
jns
and
test
cld
loope
sub
popa
jbe
mov
repnz
jmp
cmpsb
gs
lahf
test
loop
inc
ja
and
jne
mov
add
pop
ret
arpl
out
xchg
sbb
xorl
pop
add
popa
push
ror
fcmovnbe
mov
es
sub
rsqrtps
or
rcll
sbb
inc
push
xchg
rclb
clc
cli
mov
sub
push
xchg
push
add
daa
jge
sub
icebp
leave
cmp
dec
imul
sub
ds
ret
outsb
jo
inc
jp
jne
cmc
test
push
xchg
mov
jp
dec
mov
dec
sar
dec
add
ja
pop
outsb
mov
mov
outsb
jne
imull
cmp
jmp
mov
sahf
repz
aam
loopne
mov
adc
mov
in
pop
cld
or
int
bound
scas
addl
pusha
call
jg
cld
inc
jle
aam
jle
cli
std
mov
inc
loop
movsl
mov
xor
aaa
popa
cltd
add
out
jmp
lea
dec
cmc
icebp
cmp
mov
xor
jae
jge
and
jb
das
dec
dec
mov
mov
into
sahf
ret
shrb
cltd
stc
push
loope
xor
adc
lahf
arpl
xor
xor
mov
push
and
push
fwait
inc
ss
lcall
and
fwait
mov
in
push
je
iret
in
shrb
xor
xor
sub
lea
clc
xlat
pop
lods
aaa
cld
jo
xchg
inc
jmp
outsl
jl
pop
testb
inc
sti
push
fdiv
lcall
mov
loop
sub
jecxz
sbb
cmp
jae
mov
and
in
out
adc
xchg
mov
imul
sub
or
cs
jb
scas
shlb
jl
mov
inc
pop
outsl
push
xchg
sbb
sub
cmpsl
xchg
ds
jle,pt
xor
sub
pop
pop
sub
jp
jb
xlat
cmpsb
or
in
xor
mov
fs
cld
cmp
lods
or
jmp
gs
test
ficomps
lahf
cltd
aas
lea
out
mov
call
pop
addb
jbe
push
mov
loope
sti
mov
jne
lret
lret
loopne
notl
dec
lret
mov
and
add
test
outsl
sub
int3
and
jge
movsl
int
mov
rcrl
movsb
repnz
push
xor
mov
or
adc
cld
xchg
imul
cmpsl
popa
adc
lret
and
lret
jg
mov
push
cwtl
cmp
adc
mov
data16
sbb
fcoms
or
cmp
dec
mov
lods
xlat
or
push
test
ja
mov
test
shll
mov
jb
cmp
add
mov
hlt
inc
sub
pop
dec
cwtl
push
mov
cmpsl
pop
cmp
out
cltd
stos
xor
xchg
add
dec
jns
addr16
out
movsl
movsl
cmp
push
or
xchg
test
add
test
lcall
in
and
jmp
lahf
stc
iret
sbb
pop
out
or
outsb
rcr
out
lcall
repnz
dec
ds
adcl
sub
pop
mov
cmpsb
and
add
cli
add
rol
adc
pop
es
or
hlt
cmp
fcomp
test
cld
jns
and
ficomps
mov
cmp
outsl
roll
xchg
sar
clc
dec
jmp
pop
and
sbb
nop
mov
subb
push
or
lahf
mov
shl
imul
xor
sub
cli
dec
addr16
mov
dec
lahf
bound
jecxz
push
scas
outsb
inc
out
jb
fldcw
lret
push
imul
mov
lds
push
mov
ja
dec
in
cmp
or
mov
rcrb
sahf
insb
addr16
outsl
addr16
pop
sub
mov
rcl
int
dec
jno
pop
xlat
mov
popf
loop
test
lods
push
lds
add
pop
or
pop
xchg
aad
jmp
adc
dec
sub
xor
xchg
xlat
jge
jl
loopne
mov
inc
sahf
sub
shl
xor
push
cmp
xchg
loopne
out
fadds
fucomp
sub
xchg
ljmp
mov
add
fldenv
jmp
dec
cmpsl
xor
insb
jne
fstl
cmp
ss
daa
xchg
cmpsl
sti
mov
fcoml
xchg
mov
sub
cmc
mov
dec
into
int3
cmp
jmp
sbb
cmp
out
scas
rorl
and
divb
pop
mov
push
inc
add
test
lods
push
jg
pop
sub
aaa
add
add
xchg
cmp
sub
movsl
aad
push
cmp
outsb
sbb
xchg
push
or
xlat
test
mov
ret
or
add
or
adc
int3
sbb
fst
insb
sub
movl
enter
mov
test
pop
and
loopne
push
xor
mov
dec
inc
add
dec
xor
add
pop
mov
pop
pop
pop
leave
ret
push
mov
push
movl
mov
mov
sub
xor
mov
andl
mov
inc
mov
cmpl
jb
jmp
pushl
pushl
push
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
mov
addl
xor
add
mov
mov
xor
push
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
pop
leave
ret
push
mov
sub
andl
mov
inc
mov
cmpl
ja
jmp
push
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
xor
mov
xor
xor
mov
adcl
add
andl
mov
inc
mov
cmpl
jge
jmp
pushl
call
cmpl
jb
movzwl
or
mov
andl
movb
mov
sub
lea
movl
cmpl
je
cmpl
ja
jmp
push
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
or
mov
xorl
mov
xor
add
andl
mov
sbb
movl
push
movl
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jbe
jmp
push
pushl
push
push
call
cmpl
jne
xor
xor
inc
mov
jmp
mov
subl
push
dec
mov
andl
xor
or
mov
adcl
push
andl
add
movl
jmp
movl
mov
movl
mov
movl
inc
movl
cmp
jb
sbb
mov
adcl
xor
subl
add
jmp
mov
mov
sbbl
xor
adc
mov
xorl
add
adcl
movzwl
andl
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jge
jmp
push
call
jmp
mov
addl
movzwl
xor
add
mov
mov
inc
mov
mov
cmp
jne
movl
cmpl
je
cmpl
jle
jmp
push
call
xor
add
dec
mov
jmp
mov
and
mov
andl
mov
inc
mov
cmpl
jge
jmp
push
push
push
pushl
push
pushl
call
cmpl
jb
xor
inc
add
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jl
jmp
push
pushl
push
pushl
call
cmpl
jne
xor
xor
inc
mov
jmp
mov
xor
mov
andl
xor
xor
inc
mov
cmpl
ja
jmp
pushl
call
cmpl
jb
xor
and
add
orl
mov
adc
movl
or
movl
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jle
jmp
push
call
cmpl
jne
xor
xor
inc
mov
jmp
movl
mov
mov
mov
xor
xor
or
add
mov
mov
je
addl
mov
mov
and
mov
mov
xor
xor
xorl
sub
sub
movl
cmpl
je
cmpl
jb
jmp
push
push
pushl
push
call
mov
dec
mov
jmp
xor
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jb
jmp
push
push
call
cmpl
jne
xor
add
inc
mov
jmp
mov
andl
jmp
xor
xor
inc
mov
cmpl
jae
cmpl
jb
jmp
pushl
pushl
push
pushl
call
cmpl
jne
mov
inc
mov
jmp
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jb
jmp
push
pushl
pushl
call
cmpl
jne
mov
inc
mov
jmp
mov
addl
add
imul
orl
mov
sub
jmp
add
cld
shl
mov
xchg
lret
out
aas
scas
addl
jge
mov
push
icebp
add
shll
jbe
mov
lcall
outsb
dec
pop
into
pop
roll
inc
xchg
pop
push
or
imul
dec
stc
sbb
filds
enter
cmp
outsb
sbb
sub
daa
fdivr
ja
icebp
mov
jg
jo
pop
dec
cli
mov
dec
inc
std
movsb
inc
jp
lods
jns
cmp
xchg
imul
push
ds
jno
sub
loop
mov
and
mov
mov
dec
push
mov
addr16
imul
or
add
cmp
movsl
sbb
outsl
mov
icebp
cmp
fdivrl
dec
add
lods
push
ds
fcomi
pop
stos
sbb
mov
dec
cli
sub
dec
pop
xor
scas
push
js
xor
xchg
jle
test
sbb
repz
mov
ja
cld
xor
scas
int3
loopne
dec
mov
icebp
xchg
aaa
jae
sub
insb
jecxz
ja
fnstsw
push
mov
push
movsb
pop
test
movsl
adc
dec
jmp
add
fiaddl
loop
pop
ret
or
addr16
xor
mov
mov
mov
mov
sbb
stos
in
cmp
pop
sbb
mov
ds
jp
jp
adc
rolb
inc
push
dec
gs
not
mov
push
sub
pop
mov
jae
dec
jp
addr16
sub
jnp
sbb
push
or
adc
les
jle
jne
leave
test
inc
in
shlb
les
dec
cmp
gs
add
mov
aaa
xor
scas
or
xchg
or
xor
xchg
mov
xor
jnp
popf
cmp
push
lcall
mov
add
adc
loopne
xlat
out
mov
loopne
xor
fisubl
jp
insb
scas
das
in
mov
addr16
imul
orl
ret
sub
rcrl
inc
dec
mov
pop
pop
int3
and
nop
adc
enter
jle
jmp
cmp
and
cmp
sahf
icebp
add
cmp
sbbb
xor
mov
push
jl
or
xor
pop
or
mov
xchg
mov
neg
jecxz
test
xor
add
dec
rcpps
pop
repz
shll
cmpsl
push
ljmp
inc
xchg
xchg
mov
mov
mov
test
push
enter
in
adcb
or
sbbb
mov
sub
jb
mov
repnz
jg
jbe
adc
repz
cltd
ret
popf
loope
and
sbb
cmpsb
xchg
lcall
mov
jo
xchg
rolb
stos
scas
enter
je
jl
in
sarb
inc
faddl
mov
rcll
mov
jnp
lock
ret
out
jg
jb
jmp
xchg
adc
adc
in
shrb
bswap
fwait
adcb
lahf
jnp
mov
insl
push
xchg
jle
ret
fdivrs
fstpl
call
aaa
movsb
loope
test
mov
loop
pushf
loopne
add
stos
inc
adc
scas
dec
outsb
repnz
daa
std
cmp
inc
mov
cwtl
insb
or
js
hlt
bound
in
push
adc
inc
jge
jecxz
inc
lds
adc
insl
mov
cmpsl
jb
ja
push
dec
mov
mov
push
pop
int
dec
sbb
adc
jne
insb
adcb
xchg
mov
pop
iret
clc
and
mov
jb
cwtl
push
mov
ds
test
mov
jnp
lcall
mov
mov
push
mov
or
pop
inc
cwtl
pop
dec
add
mov
inc
sub
movsb
aad
loopne
xchg
jo
dec
jb
cltd
and
jle
mov
or
cltd
pop
ja
adc
jge
dec
mov
and
orb
lods
and
push
or
sbb
ja
and
jecxz
mov
or
xlat
jge,pt
psrlq
cmp
add
lret
in
inc
dec
xchg
inc
or
push
jnp
jecxz
lock
aad
cld
and
test
loope
xchg
shrl
cmp
add
bound
loope
add
mov
pop
cmp
mov
sub
stos
sbb
fwait
sti
mov
nop
sarl
and
xchg
sti
repnz
cmp
mov
mov
or
daa
nop
mov
push
xchg
and
xchg
and
int
mov
inc
inc
inc
xor
mov
or
in
shll
ja
faddl
jns
scas
push
dec
pop
stos
test
inc
imul
icebp
pop
leave
add
fidivl
push
js
les
push
ss
xor
mov
iret
mov
xchg
pop
lods
mov
das
in
sahf
add
lcall
pop
fcompl
push
ja
imul
jae
xor
cltd
fcomi
cld
push
mov
fldt
xlat
insb
es
sbb
rclb
push
std
dec
or
loope
stos
loopne
jmp
xor
fnstsw
sub
lret
sbb
out
jecxz
ss
mov
mov
dec
jg
mov
fwait
mov
out
xor
cltd
cwtl
mov
xor
mov
lods
test
mov
xchg
cmpsl
stos
push
mov
sbb
ret
cwtl
stc
sub
inc
dec
aad
enter
xchg
pop
mov
sub
rorb
cmpxchg
or
scas
sti
xchg
shlb
iret
dec
sub
sub
test
out
andb
aas
dec
fsubs
ror
stos
nop
lock
mov
into
push
cmp
fists
pusha
mov
jo
xor
into
xchg
mov
jne
in
mov
adc
aas
fucomi
adc
mov
imul
movsb
jbe
pop
ss
and
mov
and
mov
or
cmp
daa
clc
fildll
icebp
and
sub
shl
push
jge
cmp
push
arpl
or
adcb
gs
test
push
test
or
das
imul
inc
xchg
fdivrl
push
and
mov
sub
dec
mov
in
xchg
cmp
and
sti
add
xchg
mov
xor
xchg
mov
pop
push
pusha
ds
imul
ftst
mov
pop
or
or
or
jmp
pushf
inc
leave
inc
loope
xchg
aas
pusha
dec
iret
push
cmp
push
mov
icebp
sub
lahf
ljmp
dec
sub
push
popa
icebp
jecxz
das
mov
mov
cmp
push
aad
fisubs
mov
dec
xchg
cmp
lods
test
and
fidivs
jp
stos
lds
notb
add
mov
sarb
adc
push
pop
sub
test
fsubrs
xor
cmc
and
test
lret
and
xor
pop
aas
sbb
fwait
je
mov
xchg
stc
sub
orl
lods
loop
push
hlt
or
mov
lods
xor
clc
movsl
lea
test
insb
inc
insl
daa
sbb
sbb
sub
pop
jbe
scas
andl
cld
aad
pop
sbb
lods
test
push
jne
sti
adc
pop
lods
mov
mov
out
movsl
mov
jge
bswap
loope
std
adc
les
jne
or
arpl
popf
insl
jno
sub
data16
int
xlat
bound
mov
addr16
dec
fmulp
daa
dec
sbb
sbb
aad
rcrl
inc
fidivs
loop
clc
icebp
std
mov
out
mov
sti
lahf
fadds
xor
shll
fwait
inc
cmp
pop
push
dec
xchg
mov
iret
jp
mov
clc
lahf
in
js
pop
or
movsl
fnsave
stos
test
testb
mov
testl
xor
pop
and
lret
jns
xor
decl
int3
dec
lea
sub
pop
popf
lret
lret
mov
int
fisttpl
clc
sbb
inc
inc
imul
jb
mov
pop
lcall
xor
or
loope
out
mov
into
out
aaa
mov
es
inc
cmp
and
movsl
insl
dec
inc
mov
stc
ljmp
mov
dec
mov
pop
fildl
cmpsb
pop
ja
push
stc
fs
fnstcw
pop
or
mov
outsb
mov
aad
addr16
pop
repz
js
mov
loop
ret
add
mov
outsl
xor
not
mov
dec
rcrb
sahf
xor
mov
imull
pop
inc
sub
mov
clc
add
xchg
jno
adc
mov
jmp
rclb
sarb
and
add
xor
and
push
cld
xor
roll
adc
add
ds
sub
push
mov
loope
dec
je
loopne
push
dec
cmp
mov
leave
sti
sbb
sub
ret
pop
arpl
nop
mov
push
scas
test
jp
mov
xchg
in
sbb
mov
test
cltd
mov
sub
mov
lock
decl
push
in
in
mov
loopne
in
and
jb
aas
out
mov
mov
mov
sahf
roll
adcl
push
pop
imul
adc
cmp
rcrl
adc
push
mov
pop
lret
dec
hlt
shll
mov
sub
add
out
repnz
xchg
pop
sbb
or
pop
das
xlat
cs
adc
adc
test
mov
cmpsb
xchg
and
inc
xchg
js
xchg
imul
shrb
fwait
shll
popa
dec
xchg
aad
stos
sbb
das
pop
outsb
pop
sbb
xor
add
bound
mov
mov
mov
sbb
xchg
mov
push
inc
mov
mov
mov
ss
mov
imul
sub
xchg
jl
xchg
je
mov
lret
loope
adc
or
inc
pinsrw
dec
fcmovne
cmp
add
push
jge
pushf
or
adc
sarl
inc
add
xchg
jle
mov
into
sbb
lret
addr16
push
push
lret
cmp
mov
int3
insb
sbb
scas
dec
dec
xchg
sub
jne
test
test
fstps
inc
out
sub
pop
lods
pop
jecxz
mov
jo
push
xchg
scas
mov
sub
mov
mov
cmovl
lahf
xchg
jp
mov
aam
inc
std
and
jae
jle
call
repnz
fs
popf
enter
pop
cwtl
sub
jno
aad
jno
xor
push
cmp
rolb
movsb
in
adc
test
jb
iret
rorb
xor
and
jmp
daa
mov
sbb
pop
pushf
sub
data16
scas
mov
mov
leave
into
lret
cmp
sbb
pusha
daa
stc
bound
dec
int3
out
mov
xchg
push
jne
rcr
jnp
jge
bnd
or
adc
rol
cwtl
fiaddl
arpl
push
or
scas
mov
fwait
push
sbb
or
sub
push
sbb
sbb
daa
sti
adc
jmp
or
das
or
xchg
ss
adc
inc
cltd
lcall
fcomps
adc
mov
imul
mov
imul
xchg
push
insl
fisubrl
add
hlt
adc
inc
xor
test
scas
jmp
add
popf
icebp
enter
shll
mov
mov
dec
or
or
rcll
icebp
mov
sbb
loopne
or
dec
icebp
mov
pop
call
int3
mov
stos
in
psubusb
sbb
adc
sub
inc
aas
fisttpll
fldenv
inc
imul
sub
lods
push
ss
fs
xchg
inc
push
inc
adc
aam
mov
enter
and
popf
mov
popf
or
lds
sbb
pop
sub
or
xchg
sbb
jnp
lock
sbb
push
mov
ljmp
dec
arpl
adc
icebp
xor
sbb
nop
jmp
sub
sub
fcmovbe
call
stos
inc
and
sub
sub
in
push
int3
loope
push
adc
and
stos
mov
push
add
gs
mov
gs
fstps
push
outsl
andl
testl
xor
mov
aaa
inc
fcomps
inc
jo
stos
cli
jp
js
xlat
ja
jp
imul
in
aas
test
push
add
push
push
cltd
fbstp
pop
sbb
sbb
les
test
inc
mov
je
jno
push
fadds
push
ret
adc
push
xchg
out
movsl
dec
adc
dec
movsl
loope
mov
mov
jbe
inc
ljmp
sbb
adc
push
outsl
pusha
popf
insb
inc
jmp
lock
fcos
push
subb
rorl
dec
push
std
loop
jecxz
scas
mov
jns
les
cltd
orb
cli
jne
jg
fcoms
sbb
pop
sub
popf
cmp
add
jle
dec
push
add
mov
mov
fisubl
mov
sub
mov
mov
scas
sub
ljmp
jno
clc
add
out
cmpsl
xchg
or
sub
enter
xchg
push
add
inc
movsl
lahf
sti
xchg
xchg
and
inc
add
jo
js
sub
mov
push
test
addb
nop
into
and
mov
jmp
data16
or
push
stos
and
fnstcw
adc
sbb
dec
rolb
xorl
ret
mov
mov
scas
out
cmc
push
mov
mov
cs
sbb
icebp
imul
adc
sub
out
mov
rcrb
arpl
or
out
lcall
daa
loopne
out
push
xor
hlt
shlb
add
scas
aas
sbb
xchg
or
ds
inc
lea
insb
mov
adc
into
nop
mov
mov
stc
dec
mov
sbb
sbb
test
mov
lods
jnp
rclb
pusha
cli
lcall
cs
mov
call
pop
pushf
mov
aas
mov
mov
jne
push
mov
fsubs
pop
sbb
mov
lret
jl
cld
xchg
popl
ret
subl
pop
daa
gs
push
and
fcoml
mov
int
cmc
xor
pop
push
outsl
adc
fchs
subl
push
nop
dec
push
sub
cli
add
filds
in
xor
repnz
in
add
adc
xor
and
mov
adc
loope
mov
inc
lret
push
add
inc
je
int3
mov
jne
xchg
jecxz
adc
inc
popf
iret
movsl
mov
pushf
call
mov
lods
in
mov
jb
sub
mov
mov
outsb
std
lods
jl
add
aaa
cmpsl
pop
jle
insb
cmp
mulps
dec
pop
sbb
loop
dec
xor
mov
dec
scas
sti
mov
dec
xlat
jg
lds
pop
mov
mov
data16
mov
push
ss
dec
pop
lods
mov
inc
and
sub
xor
push
int
xchg
jmp
sbb
aaa
sahf
fisttps
jnp
xchg
mov
rol
cmc
jecxz
adc
out
not
add
xor
adc
and
or
aad
rcrl
test
lret
dec
mov
sahf
aaa
std
xchg
stc
rolb
dec
and
rcrl
mov
ljmp
outsl
xchg
stos
pop
push
testb
pop
cwtl
loope
in
mov
xlat
shll
dec
inc
mov
nop
and
mov
ljmp
in
cwtl
imul
cmp
inc
in
push
out
jae
lods
and
push
arpl
pop
pop
sub
and
rorl
inc
inc
inc
movsb
cmp
in
in
mov
call
pop
cld
testb
test
jne
or
repnz
pop
popa
icebp
int3
cmp
fdiv
imull
enter
pop
fsubrl
xchg
jle
pop
movsb
out
sub
push
or
adc
xor
xor
imul
fs
cld
lea
push
insl
hlt
in
pop
jg
sbb
and
sub
push
mov
mov
mov
lods
test
push
mov
repnz
mov
sub
test
or
je
xchg
sub
xor
or
stos
or
sti
fsubs
xchg
aaa
adc
mov
mov
test
notl
or
pop
mov
pop
incl
lds
xchg
xorb
or
or
mov
popf
push
sti
repnz
xor
push
cmpb
insl
or
xchg
rol
daa
idivl
mov
cld
imul
jg
cmp
in
hlt
nop
dec
stc
insl
sbb
jecxz
out
adcl
inc
int3
lods
mov
insl
fsubrs
mov
xor
cmp
push
add
jns
divb
or
xchg
xchg
push
cmp
aas
or
fadds
xchg
cs
cmp
stc
fsts
pop
out
rorb
or
cmp
pushf
add
jp
pop
sub
and
adc
mov
mov
jg
test
stos
sahf
and
sub
xchg
jbe
mov
sarb
push
xchg
add
sarl
aas
scas
repnz
dec
xchg
outsb
frstor
jl
xor
loopne
dec
into
push
mov
lods
xchg
jnp
mov
xchg
loopne
notb
imul
xchg
pop
notb
or
gs
add
or
sub
mov
inc
mov
dec
incl
inc
stos
in
dec
lock
dec
cwtl
or
and
cmpsl
xchg
or
sbb
hlt
or
pop
adc
lods
fnstcw
adc
in
fldt
jg
int
sub
pushf
mov
mov
inc
insb
dec
jmp
mov
jbe
push
push
lods
pusha
xlat
xchg
xlat
pop
loope
pop
test
popa
jae
mov
movsb
jns
hlt
lahf
push
ret
mov
movsl
int3
adc
fwait
cmp
out
les
jno
xchg
dec
xchg
dec
add
shr
scas
push
add
push
out
dec
shlb
xor
and
xor
gs
adc
out
int
jmp
and
nop
cmp
jbe
xor
pop
push
sub
fdivr
dec
insl
xchg
stc
aad
xchg
cmp
pop
xor
repz
movsb
sub
fs
pop
lods
dec
mov
js
mov
repz
rcll
ljmp
sahf
orps
xchg
imul
lods
add
xchg
adc
xlat
mov
dec
xchg
jg
xor
aas
xor
jmp
enter
adc
cmpsl
loop
es
jns
cmp
inc
sarb
dec
xchg
xor
xor
rcll
addl
lret
outsb
out
jecxz
in
scas
outsb
movsl
test
movsl
xor
std
decl
xchg
decl
sub
bound
fsub
dec
sahf
push
gs
setae
fwait
aas
mov
in
xor
es
loope
in
js
cltd
bound
xor
mov
xlat
icebp
notl
in
dec
jns
aas
stos
adc
js
inc
push
bound
xchg
mov
jmp
cmp
sarl
or
test
jp
inc
cmp
arpl
stos
aaa
dec
addr16
repz
xorb
test
mov
and
xchg
xor
outsl
mov
mov
out
sti
mov
jl
dec
jle
dec
shll
and
or
xlat
fisubrl
lock
lahf
adc
fcomp
pop
shl
inc
test
xlat
movsb
inc
lods
mov
jns
push
in
in
xchg
jbe
jmp
sti
mov
cltd
scas
or
and
jo
pop
std
mov
and
dec
inc
or
test
mov
test
mov
and
fadd
adc
pop
in
or
mov
sub
and
shrb
sub
inc
push
push
xchg
dec
inc
pop
adc
xchg
push
fisubs
js
in
lods
mov
repnz
mov
dec
mov
xor
mov
jl
call
jecxz
or
nop
das
popf
push
lahf
xor
jmp
pusha
fucomi
xor
fldt
int
sbb
dec
jnp
pop
negb
sahf
in
dec
jp
mov
push
pop
dec
outsb
pusha
xlat
mov
and
mov
jp
xor
dec
scas
or
xchg
fwait
push
push
cli
call
aaa
or
test
mov
jns
nop
sub
or
add
out
or
xchg
ja
iret
cmp
sub
or
movsb
int3
test
dec
or
dec
cmc
loop
inc
mov
stc
xor
fldcw
or
add
lods
ficompl
dec
fnstsw
jle
pop
mov
rolb
mov
gs
cmc
jmp
add
stos
ss
mov
push
push
pop
and
adc
imul
out
imull
sub
jle
mov
sub
ret
and
fisubrl
clc
int
lcall
cmp
xchg
xchg
lds
pop
sbb
enter
dec
jmp
in
pop
mov
std
push
xchg
xorw
rorl
push
pusha
aam
aad
lods
jmp
mov
clc
cld
inc
sbb
adc
xor
out
pushf
mov
mov
sub
add
adc
sub
mov
mov
pusha
and
push
sti
inc
inc
dec
mov
rcll
jb
je
fisttpll
rolb
fdiv
popa
inc
dec
cmp
xor
movsl
dec
inc
and
lea
jne
scas
push
cmpsb
out
mov
inc
jge
lock
add
addl
repnz
pop
out
out
adc
add
mov
jge
sbb
shll
out
or
lds
and
adc
sub
lcall
cltd
sub
or
xchg
into
test
ljmp
into
lods
xor
fsubs
jmp
sbb
or
nop
idiv
cmp
pshufw
dec
sub
lahf
push
les
stc
es
jmp
push
jno
pop
push
in
xchg
sub
pop
mov
mov
insl
sbb
mov
push
cmp
ficompl
inc
push
stos
insb
sub
and
popa
mov
mov
mov
sbb
inc
pop
sub
movsl
push
jae
push
stos
ret
aas
jne
stc
inc
sub
insb
out
mov
jo
in
push
jb
jl
lret
dec
push
cli
jnp
xchg
push
jo
lret
push
sbb
adc
adc
jns
jp
outsl
cmp
pushaw
push
das
pusha
or
shlb
push
insl
bound
or
push
dec
stos
or
pop
jle
push
loopne
inc
fisubl
cld
pop
lea
push
sahf
or
popf
fmull
push
in
lds
pop
inc
gs
aaa
xor
in
aam
jns
inc
jae
cs
and
aad
adc
mov
mov
dec
sbb
sarb
sbb
lcall
jl
nop
xchg
ss
push
sub
jns
daa
mov
adc
adcb
mov
push
out
xchg
adc
push
and
fwait
xchg
push
enter
stos
ljmp
cwtl
jne
lret
or
mov
pop
testl
xchg
popa
jle
lds
inc
mov
pop
mov
push
inc
jl
cs
imul
out
test
mov
inc
sub
dec
inc
push
lods
cmpsl
add
pusha
xor
clc
sbb
mov
fisubrl
and
adc
mov
jns
stos
jo
pop
repz
arpl
popa
pop
cwtl
aas
fbld
les
adc
andb
xor
popf
lret
mov
mov
push
imul
ljmp
adc
mov
xchg
icebp
mov
test
es
jle
mov
jne
test
jns
and
enter
lret
rorl
sub
pop
jge
mov
xor
push
xchg
out
mov
ljmp
ror
pop
outsl
mov
sub
cmpsb
inc
cmp
lds
xchg
aam
mov
dec
pop
aaa
cltd
bndstx
cmpb
mov
cmc
cmp
cmp
pop
push
jmp
std
mov
jns
cltd
add
fs
pop
xchg
dec
xorb
int
sub
addr16
and
aad
in
sbb
mov
cld
pop
xorb
or
push
mov
xor
xchg
and
lret
or
jl
mov
fimuls
fildll
xchg
or
iret
shll
cmp
sbbb
and
dec
fsubs
sar
mov
out
mov
jnp
repnz
aas
pop
mov
outsl
jb
jb
jae
cld
fbld
mov
std
outsb
sub
pop
xchg
sbb
cmp
dec
push
pop
daa
jo
sarb
inc
lea
jne
dec
lret
adc
stc
jle
xchg
scas
out
dec
lcall
das
adc
sbb
stos
dec
cmpsb
cmp
stos
and
jne
or
adc
inc
lahf
jno
test
iret
xchg
cmpsb
jge
inc
sub
xchg
jmp
movsb
cmpb
jb
dec
push
mov
mov
pusha
test
mov
xchg
add
in
jle
pop
bnd
mov
mov
add
fwait
std
fisubl
je
push
mov
js
or
mov
fsubs
das
stos
inc
sti
or
mov
es
int3
loopne
add
xchg
jb
and
dec
jmp
inc
push
push
hlt
mov
ficomps
mull
outsb
ja
push
fcmovb
mov
add
fadd
insl
mov
xor
les
daa
bound
cltd
stc
cwtl
push
gs
pop
jmp
mov
and
adc
aam
fsubl
pop
jp
loop
imul
sbb
jns
fs
sarb
mov
cmpl
pusha
inc
add
jmp
rorl
idivl
push
pop
or
ljmp
repnz
inc
ficompl
adc
in
push
aas
pop
daa
sub
or
dec
cs
cmp
repz
mov
in
xchg
pop
mov
jno
jp
hlt
adc
shl
xchg
jae
inc
insb
rcr
mov
inc
dec
movsb
mov
xor
lea
popa
testb
ficompl
xlat
push
pop
add
or
mov
xchg
mov
dec
add
push
mov
sarb
xchg
or
jne
cmp
lds
cmpsl
cwtl
mov
aaa
rcrl
and
jge
or
cmpl
xchg
inc
aam
into
lods
rol
pop
mov
in
jmp
fistpl
loopne
fstpt
pop
sahf
push
inc
shll
in
push
mov
xor
jbe
adc
sub
test
lods
insl
cmp
jg
sbb
inc
add
mov
ja
inc
add
popf
inc
push
aad
mov
add
add
imul
mov
jo
inc
cli
jl
aad
stos
add
aas
popa
cmpsb
outsl
xor
vpcomud
mov
cmpsl
ljmp
xor
jmp
pop
imul
fbstp
jo
sbb
dec
insl
mov
in
add
and
dec
add
pop
push
jmp
mov
dec
int3
call
fistps
std
ret
jmp
stos
scas
push
pop
or
aaa
pop
cs
inc
mov
aaa
pop
cmp
sahf
xorl
pop
fs
sbb
push
test
jecxz
ret
sub
push
mov
sbb
jae
or
pop
cmpsl
fildll
push
xor
pop
push
mov
jnp
ret
inc
add
jmp
cwtl
repnz
lods
push
mov
jmp
les
sbbb
lret
dec
push
xchg
out
and
sbb
sub
sti
pop
cli
fcmovbe
add
repz
inc
jne
push
jnp
xchg
push
fs
std
leave
mov
inc
insb
pusha
push
out
fs
and
ret
repz
jecxz
push
mov
mov
mov
jmp
ds
push
test
mov
dec
ljmp
mov
fstpl
xchg
fistps
fwait
subl
scas
cld
sbb
jae
mov
pop
imul
call
xchg
popa
dec
shll
mov
inc
push
cltd
in
or
push
idivb
pop
jnp
lret
movsl
mov
jno
jnp
popa
push
popf
or
mov
xchg
pop
dec
and
mov
push
test
icebp
and
pop
stos
lahf
fimull
in
enter
arpl
mov
jae
in
or
sbb
aas
addr16
out
jp
fisubrl
jmp
pop
cltd
jg
ffree
jle
jle
or
sbb
movsl
ds
mov
add
cli
js
scas
push
or
das
out
push
cmp
fcoms
icebp
mulb
rorb
int
mov
xchg
pop
sub
fs
and
dec
lock
sbb
repz
inc
or
push
or
outsl
roll
repnz
loopne
mov
jns
hlt
test
pop
fcmovu
sti
mov
hlt
cmp
in
jp
les
pop
repz
aas
jmp
aad
pop
inc
mov
add
inc
addr16
or
inc
icebp
pop
add
mov
adc
mov
gs
cmc
orb
push
adc
jo
dec
push
movsl
orl
cmp
adc
pusha
aad
mov
fidivs
dec
loopne
sub
in
jno
movsb
mov
aad
daa
fwait
sbb
pop
jns
out
push
adc
or
xlat
jmp
and
xchg
cmp
add
jle
mov
lods
aam
ljmp
lock
arpl
adc
pop
int
push
imul
push
cld
imul
xor
sub
stos
je
sbb
push
and
ret
fs
popf
lret
sub
and
pop
inc
xchg
imul
into
push
xor
push
ss
imul
pop
add
cmp
sbb
int3
adcb
pop
sti
xchg
movsl
xchg
rcrb
add
lock
into
push
jne
insl
mov
roll
jle
stos
sbb
push
mov
mov
loope
jae
mov
or
call
inc
sbb
fiadds
cmc
daa
imul
mov
arpl
std
xor
mov
inc
push
inc
pop
stc
mov
or
adcb
in
jb
mov
jnp
inc
mov
inc
and
mov
mov
andl
jmp
xor
xor
inc
mov
cmpl
jae
cmpl
jg
jmp
pushl
call
cmpl
jne
mov
inc
mov
jmp
mov
movl
add
or
mov
mov
xor
mov
andl
add
sbbl
xor
mov
movl
mov
andl
mov
inc
mov
cmpl
ja
jmp
pushl
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
add
and
mov
add
mov
addl
mov
mov
lea
mov
mov
mov
sub
add
mov
mov
xor
add
jne
jmp
mov
sub
xor
mov
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
add
imul
mov
mov
mov
add
or
mov
mov
mov
add
xor
mov
mov
mov
add
and
mov
mov
mov
lea
mov
mov
mov
sub
add
mov
jmp
xlat
push
xchg
repz
addb
idivb
mov
cli
mov
xorl
outsb
subl
xor
lds
jo
in
es
xor
lcall
jg
fnstcw
out
add
jmp
dec
push
je
ds
out
ja
in
lcall
dec
lahf
adc
add
loop
push
dec
rcrb
insb
sbb
or
cmp
flds
fst
pop
add
fstl
popa
icebp
adc
sub
xor
xchg
cmp
xchg
cmp
xor
push
inc
cli
inc
xor
mov
mov
movsl
cltd
pusha
daa
loopne
jge
add
lret
mov
fsub
inc
push
cmpsl
aad
stc
mov
filds
outsb
sti
into
arpl
jnp
adc
rolb
mov
mov
dec
xchg
jbe
pop
jge
sbb
xchg
dec
and
repnz
mov
jns
push
mov
pop
imul
pop
dec
std
scas
jnp
sti
cltd
outsb
xor
jl
xchg
in
pop
nop
and
jnp
pushf
sub
sbb
repz
push
icebp
nop
cwtl
sahf
inc
das
aad
inc
xor
lods
cmpsb
jne
dec
jp
sbb
data16
push
xchg
cmp
stos
cld
or
lods
nop
adc
cltd
sub
sub
adc
jo
mov
rorb
add
push
push
inc
mov
pop
bound
and
popl
mov
jl
fwait
xchg
mov
and
stos
inc
inc
shlb
fdivrl
cmp
inc
sahf
mov
mov
das
xchg
les
loopne
sub
test
das
aaa
jb
cmp
test
xor
stc
inc
inc
js
cs
popf
faddp
push
xchg
push
add
movsb
sub
imul
scas
sbb
out
aam
repz
out
and
jle
insl
icebp
into
mov
jns
pop
cs
mov
cmpsb
xchg
mov
xor
das
push
std
stc
mov
xchg
bound
cmpsl
mov
xchg
pop
cmp
std
inc
jns
rorb
fisubrs
and
xchg
rcrl
test
jae
mov
loop
mov
fs
and
push
mov
xor
mov
push
or
pop
sbb
inc
dec
mov
loopne
in
in
sarl
fs
int
pop
pop
xor
test
leave
outsb
push
outsl
pop
arpl
dec
stos
or
sbb
fucomi
insl
xor
push
cmp
pop
out
sub
iret
lret
lret
shl
fisubrs
pusha
lahf
and
js
xorl
xor
pop
or
push
cwtl
int
inc
insl
cmp
insb
test
clc
je
mov
or
dec
mov
sbb
pop
xor
imul
cpuid
jbe
sarl
shrl
and
clc
jmp
and
or
into
shrb
nop
and
test
xchg
je
out
mov
pop
jae
jae
in
fmull
jecxz
in
xchg
rep
sti
scas
xchg
dec
sub
pop
aam
jo
adcl
dec
nop
int3
sarb
mov
adc
mov
mov
addb
sti
loop
push
outsl
mov
mov
add
xchg
sub
imul
std
mov
jge
adc
xor
sarl
int3
lahf
int
jmp
out
push
cmp
ja
cmp
popa
addr16
icebp
mov
jae
roll
adc
insb
push
pop
mov
add
outsb
sbb
into
shrl
call
sub
gs
sub
push
jo
or
jg
xor
sbb
inc
xlat
dec
jne
lahf
jmp
mov
insb
ret
scas
stos
mov
lods
push
dec
xchg
cmp
mov
stos
lods
sbb
insl
dec
sti
cltd
inc
inc
add
inc
ljmp
sarb
or
mov
fmulp
stos
xor
mov
sbb
fsts
jp
mov
outsl
mov
add
hlt
inc
stos
jecxz
and
data16
push
inc
cmp
xchg
jno
dec
subb
xchg
imul
rorl
cmp
sub
hlt
mov
mov
jg
jb
xchg
xchg
jl
fdivp
rorb
pop
cmpb
push
sub
push
sub
jo
movsl
fwait
jo
mov
subb
dec
popa
mov
xchg
and
test
clc
jle
sub
out
js
cmp
xor
or
xchg
and
ja
and
icebp
sbb
and
aam
jmp
dec
daa
or
cmpsb
sbb
hlt
lock
sub
ja
sbb
cld
test
push
wrmsr
sbb
out
imul
call
push
insb
aas
inc
rol
push
aad
mov
cmp
mov
in
inc
hlt
lds
imul
pop
jno
test
mov
scas
aas
cmp
daa
or
xor
leave
pop
loop
inc
fcompl
xchg
out
test
pop
mov
in
fisubrl
push
inc
xchg
nop
adc
cmp
fldcw
aam
outsl
arpl
dec
push
pop
das
mov
xor
cs
lock
xchg
or
jp
gs
pextrw
and
push
cmp
testb
push
ljmp
clc
js
in
cmp
and
arpl
xor
insl
cli
bound
pop
test
cmp
cwtl
sub
cmp
xor
rcrl
ret
jge
mov
and
mov
inc
mov
data16
fmuls
push
inc
jo
jg
jecxz
pop
cli
aaa
push
aad
into
push
add
movsl
scas
lahf
mov
dec
sub
fisubs
mov
lcall
jns
ffreep
mov
adc
jge
iret
std
ljmp
aam
arpl
shll
add
hlt
pushf
cmp
call
lret
gs
sbb
movaps
xor
jmp
sahf
lahf
imul
pop
imul
xor
pop
jge
jb
leave
xchg
in
fwait
push
pop
mov
jns
sbb
pop
std
out
xchg
mov
xchg
and
call
jae
cld
lds
adc
xor
cld
lret
adc
int3
shlb
xchg
stc
mov
rclb
enter
jae
hlt
add
subb
or
adc
mov
popf
and
ljmp
mov
repz
inc
jno
and
add
adc
dec
je
xor
setae
dec
mov
sub
dec
mov
cmpl
shlb
mov
imul
mov
and
add
es
cmp
sbb
sub
mov
mov
xor
out
divl
mov
in
inc
jl
mov
insb
je
xlat
mov
js
scas
mov
mov
lods
xchg
and
push
cld
dec
mov
dec
push
jge
lahf
cltd
inc
and
sub
lcall
sub
push
pop
push
sub
ffreep
lea
xlat
mov
mov
push
pop
mov
pop
jne
jmp
imul
sbbl
lods
sbb
xorl
mov
pop
cmp
jb
ret
xor
mov
adc
ret
lret
gs
jp
sub
push
cld
push
nopl
dec
rorl
insl
fisubrl
outsb
mov
sbb
cmpsl
aaa
jb
sub
sub
add
lds
insb
lds
mov
cmp
add
mov
mov
decb
push
adc
mov
cmp
filds
fildl
jnp
cmp
xchg
cmpb
lods
cmp
adc
xchg
mov
insb
mov
sbb
test
cmp
push
mov
inc
fildll
and
leave
mov
ficompl
das
push
and
aad
inc
pop
or
and
in
test
xor
mov
push
push
add
mov
add
addl
sti
push
xchg
mov
inc
push
lret
inc
and
or
mov
dec
imul
shlb
jb
adc
stos
iret
mov
push
sbb
xchg
xor
mov
loope
pop
pusha
adc
call
pop
xor
lahf
mov
xchg
push
and
lahf
mov
shll
and
cltd
jmp
bsf
aad
movl
out
or
push
mov
push
jp
dec
lcall
jo
scas
divl
cmpsl
rcr
lahf
rcl
xor
fldt
pop
scas
jg
iret
and
sbb
mov
push
movsb
cltd
push
push
lock
rclb
out
stc
jmp
adc
inc
mov
xor
xlat
push
cld
push
mov
lret
test
push
add
mov
mov
mov
xchg
sub
mov
arpl
mov
inc
insl
mov
andl
mov
repz
or
push
out
add
lea
leave
xchg
leave
and
mov
xchg
sahf
cltd
sahf
mov
gs
jg
adc
into
jo
xchg
movsb
xchg
xchg
cltd
imul
rolb
sbb
inc
lret
push
aam
dec
shrb
in
in
dec
outsl
sub
std
mov
sub
imul
xchg
mov
mov
mov
pop
rcr
push
rcrb
pop
bound
xor
push
mov
nop
push
js
cmpsb
mov
pop
cltd
xor
xor
or
out
add
mov
mov
std
add
fisttpl
push
lahf
fdivrs
or
test
mov
scas
adc
dec
mov
cmp
mov
sbb
dec
xchg
lds
jo
repz
mov
mov
lods
lods
mov
and
sub
cmc
mov
xor
mov
movsl
cmp
repnz
sahf
mov
insl
mov
or
xor
sbb
xchg
pop
jl
shlb
outsl
clc
sub
fists
into
arpl
shr
pop
xlat
and
sbb
and
push
mov
xorl
sub
xchg
rcr
xchg
adc
in
out
adc
enter
sub
mov
cmp
dec
mov
fstp
fbstp
adc
jbe
pop
mov
xlat
cmc
pop
mov
pop
std
cmp
rorb
inc
sbb
sbb
or
mov
stos
insb
pop
dec
repz
fdivs
sahf
cltd
adc
xchg
jo
pop
jns
pusha
sub
jge
or
xor
jne
xchg
and
aam
test
jmp
cltd
loopne
jge
imul
fdivrs
mov
rolb
inc
xor
mov
xchg
adc
fidivrs
sbb
push
or
pushf
lahf
int3
pop
rcl
lahf
push
mov
pushf
ret
mov
add
jle
dec
insl
js
arpl
in
dec
pushf
lods
pushf
mov
cmp
sub
xchg
pop
mov
push
insl
das
loope
adc
addr16
adc
xor
push
enter
pop
dec
test
adc
nop
cmp
xchg
insb
inc
stos
xchg
sub
loop
jmp
ficompl
ja
cmpsb
call
imul
mov
loope
call
mov
loope
add
jp
sahf
cmp
adc
les
inc
pop
fisubrs
cs
cmp
lods
test
pop
cld
xchg
sub
push
jecxz
aaa
dec
and
cmp
mov
sub
in
jns
fimuls
mov
sub
or
sub
xchg
outsb
les
mov
out
jns
xchg
push
mov
jb
mov
jo
fs
aam
push
out
xchg
xor
and
imul
loop
sub
orb
pop
jl
xchg
and
pop
and
push
xor
gs
sub
aaa
into
cmp
testl
fisubrs
sbb
jl
bound
and
sarb
xchg
les
ret
icebp
dec
xchg
mov
dec
push
lds
inc
daa
push
adc
fistl
popf
jmp
or
xchg
cltd
jb
jne
mov
ja
js
jno
cmp
or
inc
cmp
adc
cmp
mov
lock
aam
cmp
or
movsl
pusha
dec
jmp
jge
inc
repnz
enter
sub
pop
push
xchg
sub
lret
adc
mov
lcall
sub
fcmovu
inc
push
imul
popf
or
push
and
mov
outsl
insl
repz
mov
int
mov
or
fdivrs
push
daa
pop
ror
shlb
ljmp
push
dec
mov
in
pop
adc
sub
lcall
push
mov
stc
scas
stc
dec
jo
adc
das
mov
inc
xor
stos
mov
xor
cmp
or
rcrb
fs
jmp
sahf
aam
cmp
imul
and
push
stos
sub
and
sti
int3
dec
mov
inc
jge
js
xchg
push
add
cmpsl
dec
popf
or
lret
rclb
and
add
or
sti
xor
jp
or
jb
fildl
jnp
lahf
cmp
out
sbbl
sti
jnp
in
popa
jge
xor
fildll
mov
and
or
rol
and
mov
js
fs
sub
testb
jl
shll
pop
test
mov
cwtl
sbb
jae
sub
add
jmp
insl
lcall
dec
jle
jmp
jg
sbb
dec
aam
mov
push
push
pop
sub
sbb
pop
adc
jbe
and
faddl
rcl
inc
sub
jb
pop
push
mov
push
mov
sbb
or
bound
imul
sbb
mov
pop
xor
fsubr
push
jnp
in
and
divl
pop
and
xchg
cwtl
xchg
cld
test
pop
js
and
push
clc
mov
sbb
cltd
stos
xchg
popl
aaa
cmp
jb
adc
xorl
dec
add
call
xor
hlt
test
mov
sub
and
jne
notl
andl
inc
in
addl
add
fmuls
jbe
lahf
movsb
inc
pusha
or
mov
xchg
fcoms
push
fcoml
cmp
in
xor
mov
xor
jp
sub
lods
loopne
pop
xchg
scas
mov
test
sub
clc
orl
pop
jnp
sbb
ret
mov
mov
dec
jge
sbb
push
inc
bound
xchg
and
mov
mov
push
popf
inc
aad
jb
adc
xchg
sbb
sub
daa
add
gs
int3
cli
inc
jl
negl
cmp
pusha
nop
dec
xchg
bound
mov
adc
ret
lahf
push
loope
jl
push
orl
ds
mov
rcll
inc
jb
gs
outsb
mov
scas
lahf
ret
repnz
push
dec
mov
pop
mov
push
xchg
mov
cmp
aaa
fcmovnu
movsl
push
out
push
adc
loop
add
ss
fstpl
lock
lods
jmp
orl
mov
push
testb
fcmovu
xrelease
sbb
jae
popa
out
out
adc
sub
enter
cli
xchg
lret
mov
mov
jne
pop
sahf
xchg
aas
shlb
jnp
sbb
subl
jge
xchg
or
cmp
lds
loope
enter
pop
jmp
scas
je
pusha
aam
subl
xor
addb
pop
and
add
inc
cltd
out
ljmp
and
lcall
iret
xor
xor
scas
xchg
lods
fiaddl
mov
das
and
cli
mov
xchg
scas
fists
aas
lods
adc
inc
popw
daa
adc
xchg
shll
lds
push
mov
stos
mov
inc
mov
pop
mov
lcall
adc
add
push
iret
out
insb
jmp
mov
icebp
andl
cmp
jl
xchg
or
fpatan
and
inc
test
add
aas
jns
clc
loope
fstpl
sahf
loope
daa
imul
or
popa
ljmp
je
nop
jb
pop
out
cmc
enter
push
repnz
jae
in
dec
aam
testb
in
scas
cmpsl
clc
jo
pop
shrl
or
jl
dec
in
insl
nop
pop
repnz
clc
cwtl
sub
enter
int
xchg
gs
out
rcrb
xchg
fucom
stc
andb
adc
or
sub
nop
mov
mov
sub
stc
ffree
add
dec
jecxz
stos
xlat
push
jecxz
std
mov
lcall
jge
bound
stc
ficomps
fcmovne
xchg
mov
fstpl
mov
and
hlt
pop
iret
loop
xlat
rolb
lret
adc
and
inc
lock
fs
mov
mov
sahf
mov
mov
aas
mov
jnp
jo
sub
push
jp
jbe
mov
jmp
clc
test
daa
out
insb
int3
inc
inc
lds
int3
mov
xchg
fidivrs
insb
sbb
nop
cmp
incl
dec
sub
pop
adc
fmull
push
stos
and
sarb
sbb
cmp
aas
lcall
inc
cmpsb
pop
mov
fwait
pop
orl
xor
push
sbb
movsl
mov
jns
push
push
sub
xor
push
sub
push
test
je
mov
mov
mov
dec
cld
mov
cmp
xchg
push
imul
inc
push
mov
sbb
das
sub
insb
jecxz
inc
in
les
icebp
ss
shlb
sub
cmpsl
test
ret
rclb
xchg
test
xchg
jb
iret
mov
mov
arpl
std
fsin
jne
xchg
popa
imul
mov
pop
addr16
hlt
int3
or
orb
push
mov
sbb
loope
repz
imul
jns
mov
clc
std
insl
xchg
pop
hlt
or
xchg
or
jbe
repz
ja
push
popf
aam
and
orl
loopne
test
or
aam
mov
push
popa
movsb
xor
int3
into
mov
cmc
ret
jae
sub
ja
lahf
mov
and
pop
addr16
adc
ds
push
cmp
rcrl
push
push
sahf
fdivs
inc
mov
push
sub
mov
xor
mov
add
sub
fisubs
xchg
sahf
addr16
imul
jns
into
adcl
sub
fidivs
shrb
pop
arpl
fucomi
inc
xchg
cmp
je
insl
push
jae
inc
daa
xchg
popa
xchg
pop
movb
aad
aas
cmpsb
or
les
into
call
lcall
or
pop
xchg
xor
jb
mov
push
rorl
aam
adc
push
pop
mulb
mov
nop
jmp
js
pop
sbb
mov
xchg
pop
jo
or
and
js
stc
test
inc
gs
fmull
cmp
and
outsl
in
in
pusha
test
sub
inc
icebp
add
clc
and
xchg
lret
imul
in
jae
mov
sub
out
jle
repz
add
lret
and
add
notl
out
inc
mov
aad
pop
outsb
ds
int
pop
mov
dec
inc
jecxz
cmp
sbb
daa
loope
out
add
dec
pop
push
pop
jno
jne
fbld
xor
sub
aam
push
add
push
sbb
pop
and
ds
out
xor
add
fdivrl
mov
inc
jbe
mov
out
and
pop
lcall
mov
xchg
loope
and
movsl
push
xlat
cwtl
leave
pop
mov
mov
repnz
outsl
movsl
xor
lret
sbb
lahf
imul
add
aam
lods
data16
mov
fsubl
loopne
dec
xor
mov
mov
xchg
stos
sub
movsl
lods
movsb
mov
mov
out
cmpsb
int
int3
adc
notl
daa
ljmp
outsb
cltd
fisubrs
ret
mov
pop
repz
pushf
sbbb
jg
fmul
lds
and
pop
hlt
loope
cs
cwtl
sub
push
push
and
or
insb
cmp
inc
aam
repz
mov
lds
les
xchg
lea
mov
pop
push
cmovb
aas
cmpsl
mov
adc
cmpl
sub
cli
push
and
movsl
sub
arpl
cmp
test
scas
jmp
ja
and
adc
stc
mov
cmp
into
dec
ss
ds
subb
sbb
out
rclb
cld
pop
fsts
dec
jge
adc
cmc
mov
jmp
mulb
shl
pop
repnz
lods
and
sbb
test
pop
cmc
mov
xchg
mov
scas
int3
add
rcr
sub
mov
pop
or
adc
scas
push
iret
pop
fs
adc
movsl
mov
mov
cwtl
and
and
les
add
dec
pop
dec
jg
sahf
sbb
xchg
in
jle
addb
negb
or
mov
lcall
aam
cmp
lret
xor
inc
andb
outsb
and
rcr
and
imul
mov
ljmp
cltd
fists
cmp
mov
pop
aaa
dec
or
call
orps
add
dec
outsb
pusha
rol
ds
xchg
pop
sbb
xchg
fisttpl
shll
lea
inc
mov
mov
add
out
fwait
jae
std
xchg
ror
inc
sub
ror
mov
aaa
pushl
and
pop
cli
std
lcall
pusha
xchg
mov
psrlq
push
sarl
fists
notb
int
in
gs
jmp
jp
or
mov
call
jb
push
cltd
pop
sbb
fcmovnu
and
or
sub
jns
icebp
adc
and
adc
std
hlt
je
jbe
imul
sub
in
mov
mov
call
jnp
add
inc
test
inc
pushf
popa
jb
inc
in
leave
ja
test
sub
cmp
sub
pusha
and
sbb
inc
scas
mov
es
out
push
rcr
clc
addr16
pop
mov
push
push
mov
insl
fcomps
imul
add
dec
test
dec
js
xlat
fisubrs
mov
or
sbb
cwtl
add
adcb
and
inc
cmpsb
mov
and
aad
cwtl
jl
cmc
cmp
loop
movsb
or
pop
fildll
cmp
pop
test
pop
data16
dec
cmpsl
xor
xchg
xchg
sbb
sub
xor
mov
push
pusha
jbe
and
lret
xor
imul
jmp
cmp
sub
dec
ja
mov
sub
fildll
pop
inc
xchg
jle
lret
sbb
adc
mov
out
push
sbb
mov
test
and
mov
jle
cmc
ret
outsb
mov
mov
add
mov
in
je
movsl
jge
aas
bound
jb
js
nop
les
out
fldenv
push
or
in
cmpsb
sahf
negl
dec
gs
dec
jl
adc
mov
leave
scas
subl
rcrb
adc
ds
into
nop
xchg
xor
adc
addl
xor
push
add
mov
insl
test
pop
xchg
xchg
pop
inc
les
cld
fisttps
xchg
mov
dec
gs
mov
leave
dec
sbb
push
xlat
xchg
in
pop
dec
mov
add
movsl
mov
shrl
mov
neg
fnstcw
pop
adc
push
lods
cwtl
jnp
sbbb
mov
and
leave
cmpsb
mov
push
out
xor
xor
jmp
test
lods
std
xchg
jmp
hlt
arpl
and
sbb
lret
fisubrs
inc
sub
and
imul
fbstp
inc
test
push
daa
add
lea
lods
bound
and
jo
cmp
mov
cltd
lahf
push
mov
inc
fs
in
cmc
adc
popf
test
xorl
ja
cmp
cmp
outsl
or
dec
lea
inc
cmc
push
lcall
shll
loopne
clc
push
adc
mov
pop
ja
xchg
cli
add
mov
insb
xor
jo
jae
push
jb
sub
imul
not
jo
imul
fisttpl
dec
sbb
aas
in
cmp
add
cmp
add
jle
test
out
lret
xchg
xor
and
imul
arpl
iret
or
and
xorb
inc
test
or
dec
aas
add
mov
cmc
test
ficoms
pop
mov
mov
push
mov
dec
loope
mov
addl
sub
in
repnz
int3
lret
cmp
dec
or
push
dec
sbb
push
jp
jp
mov
loop
jecxz
add
add
pop
or
jmp
fwait
into
inc
cmp
push
mov
sbb
lea
lods
jbe
mov
vphaddbq
mov
out
out
or
sub
in
arpl
dec
mulb
dec
jb
lods
sub
jle
ret
mov
fsubrl
call
push
push
dec
leave
jl
popa
adc
and
fwait
repnz
in
mov
inc
xchg
pop
pop
mov
inc
ja
mov
add
cmp
std
fcompl
icebp
pop
or
jle
pop
mov
fisubs
fsubs
outsb
scas
inc
ljmp
leave
loope
data16
xlat
lods
inc
or
mov
xchg
popf
or
lods
jmp
jmp
pop
rcll
imul
cmpl
lahf
pusha
xor
fiadds
adc
stos
add
pop
leave
mov
fwait
hlt
mov
je
lahf
subb
repz
mov
sub
mov
xchg
das
lods
push
xor
mov
cmp
test
pop
or
fwait
std
rcll
jno
jae
movsl
xor
and
push
pop
ret
pop
or
dec
mov
imul
pop
lcall
addb
imul
dec
sub
ds
das
jl
xchg
rcl
mov
sbb
mov
push
jno
fidivl
xor
aad
cltd
push
mov
stc
sub
xor
pop
or
xchg
std
mov
es
pop
icebp
test
xor
aaa
movb
sub
pop
stos
sub
add
xchg
mov
or
loop
notl
sbb
push
imul
and
mov
cld
dec
push
xchg
push
fstl
ss
xor
pop
cld
enter
mov
mov
push
mov
sbb
push
jb
sarb
shrb
jge
std
stos
in
sbb
ja
inc
xchg
push
movsb
ljmp
imul
push
ret
push
shl
mov
jg
cltd
adc
stos
in
mov
cli
or
dec
inc
jb
push
or
and
jmp
jge
mov
push
clc
or
pusha
daa
iret
sub
cli
push
mov
cmpb
leave
jle
jae
cwtl
jnp
xchg
dec
fldt
push
mov
clc
ljmp
push
xor
mov
and
fisttpll
in
jmp
fisubs
mov
and
popa
jae
shr
and
xorb
ficomps
push
cmpl
mov
cmp
scas
loope
jnp
mov
lock
xchg
add
jb
mov
sbb
shl
int3
mov
dec
cli
or
xchg
js
push
sti
inc
or
pop
mov
lcall
stos
sub
add
sub
decb
sub
into
in
adc
adc
push
mov
cmp
aad
mov
std
out
std
pop
cmp
sub
adc
pop
hlt
inc
mov
rorb
pop
jmp
aam
dec
and
sbb
aad
push
sub
lahf
arpl
jmp
and
scas
inc
fsubl
inc
imul
mov
mov
mov
sbb
lret
mov
mov
push
dec
inc
mov
rorb
mov
or
outsl
xor
pop
mov
call
leave
cmp
inc
nop
ret
dec
mov
sub
fisttpll
outsl
stos
sbb
fstpl
cmc
rolb
dec
dec
push
daa
sti
mov
xor
cmp
cld
jae
and
lods
jg
push
pop
shl
dec
jo
stc
cltd
loope
popf
mov
mov
push
push
aas
mov
sbb
divb
mov
ss
push
jns
fdivrs
andl
jo
movsb
hlt
leave
stos
test
add
mov
jb
inc
stos
pop
into
or
out
mov
sub
add
ss
orl
roll
push
sarl
pushf
aad
add
mov
jecxz
xlat
stos
mov
cmpb
pop
or
pop
jp
pusha
and
or
and
push
mov
outsb
mov
add
cli
pop
movsl
and
notb
repz
dec
jae
pushf
and
out
mov
hlt
shll
xchg
scas
shlb
dec
jo
push
sbb
cmpsb
xor
jbe
rcl
add
lret
sar
in
jnp
dec
mov
stos
lahf
sub
mov
push
test
pop
repnz
xor
cld
stc
inc
in
hlt
mov
lods
push
ret
sbb
sbb
js
xor
test
lods
jne
cmp
xchg
adc
or
sbb
xchg
pushf
or
rorb
subl
jp
cld
inc
cmpsb
jecxz
inc
fisubrl
sbb
mov
arpl
pop
xor
xor
ja
mov
pop
mov
fsubrl
cmp
ja
mov
ret
inc
sub
aaa
mov
and
aas
jno
mov
add
sbb
xchg
test
xlat
lock
cmp
int
cltd
iret
fdivr
aas
dec
push
dec
dec
fwait
outsl
push
or
gs
lods
push
or
sbb
test
sbb
mov
xchg
mov
mov
mov
push
or
sub
inc
cmc
inc
jg
jmp
push
and
je
mov
inc
jl
sub
fisttpll
notl
andb
cmp
cmpsl
dec
mov
or
cmp
or
rorl
cltd
cli
fildl
pop
sbb
push
fs
adc
pop
out
pop
jp
dec
bnd
sub
xchg
flds
xlat
popa
fwait
popa
imulb
add
or
rolb
jne
mov
mov
mov
cmp
je
mov
mov
mov
mov
xor
cmp
jne
mov
mov
xor
movsbl
mov
xor
add
cmp
mov
mov
mov
je
xor
add
mov
je
mov
jmp
jo
cmc
dec
orb
sub
mov
pop
addl
mov
mov
xchg
fisttps
icebp
or
jo
outsl
cmc
or
or
push
push
add
xchg
ss
addr16
xor
lock
push
and
xchg
movsl
mov
mov
fidivs
insb
out
shl
inc
movsl
cmp
inc
push
pushl
push
jg
rcr
pop
jl
cwtl
pop
and
fs
pop
popf
jno
xor
fldt
pusha
into
mov
addr16
mov
gs
xchg
sub
rcll
pop
lahf
decb
fisubrl
mov
ljmp
xor
movsl
mov
leave
dec
jno
pop
outsb
movl
jae
and
sbb
or
std
adc
inc
adc
xchg
popf
stos
ja
loop
cs
mov
into
fidivrs
fcomi
jae
iret
mov
mov
cs
jb
out
mov
xchg
mov
out
aas
dec
xor
iret
repnz
xchg
inc
std
adc
adc
or
dec
movsb
aam
in
je
out
add
adc
int3
inc
sbb
out
aam
lcall
filds
ss
out
cltd
xor
push
repz
bnd
or
movsb
bound
scas
xchg
add
in
xchg
adc
scas
inc
fcomps
inc
cmp
out
inc
arpl
scas
insb
xor
je
fdivs
push
faddl
push
jno
imul
push
pop
leave
mov
mov
jne
sbb
pop
fistps
xchg
sub
xor
push
xchg
dec
sti
scas
loope
push
push
and
pusha
jns
ss
and
test
icebp
xor
jle
jae
mov
inc
xchg
push
cli
leave
xchg
stc
jne
aaa
pop
xchg
xchg
sbb
sub
into
xchg
xorl
int
repz
xor
dec
arpl
and
ds
insl
cmpsb
scas
mov
cmpsb
insb
sahf
jmp
xchg
repz
std
push
lret
cs
or
cld
cmpsl
stc
je
movsl
test
jmp
pop
bound
jb
icebp
or
jns
outsb
cmp
sbb
aam
mov
dec
nop
outsb
jle
sub
dec
xor
sahf
mov
lret
jb
fwait
pop
push
pop
testl
push
stos
mov
lock
xchg
clc
inc
mov
into
pop
loope
jle
dec
lods
clc
shll
in
push
stos
fs
inc
add
mov
arpl
les
sbb
sbb
and
sub
popf
mov
in
xchg
in
adc
sbb
js
push
jg
loopne
sub
add
pop
xchg
adcl
or
mov
and
rorl
adc
test
sub
into
push
out
inc
in
add
and
pop
push
inc
jg
popa
rorb
jle
or
in
in
push
in
test
adc
testl
loope
rolb
mov
cltd
jp
mov
aad
add
mov
jge
sbb
mov
cmp
and
loope
addr16
dec
pop
mov
jne
lahf
push
sbb
push
xchg
mov
or
jo
mov
cli
cmc
xor
dec
iret
adc
xor
sub
xchg
jno
adc
fimull
adc
btr
aam
icebp
add
dec
ss
andb
out
xchg
in
pop
cmc
cmp
lret
in
jnp
mov
mov
add
pop
add
dec
movsl
or
and
mov
cmp
loop
sub
orb
jge
pop
sbb
jb
popf
pop
outsb
xchg
adc
dec
sbb
enter
pusha
cltd
push
outsl
in
inc
call
push
dec
and
pop
jl
fsubrs
sub
xor
sbb
lcall
out
sarl
cwtl
ljmp
jmp
xchg
and
pop
jb
outsb
xchg
rorl
ret
shll
outsl
cmp
adc
icebp
ja
popa
jl
rcrl
in
mov
push
lret
mov
dec
int3
loope
shl
add
pusha
add
lods
repnz
sbb
icebp
xchg
fistl
int
sbb
mov
push
xchg
mov
fadds
pop
sti
xchg
push
cltd
jns
loopne
ret
enter
decl
cwtl
aaa
in
mov
add
aaa
push
addb
mov
inc
pop
out
cmp
fisubl
ljmp
ss
cmp
pushf
pushf
aaa
iret
push
jbe
and
mov
xchg
mov
mov
js
neg
fiaddl
jp
into
cli
push
lret
hlt
xor
je
dec
jle
push
xchg
scas
jno
jb
mov
adc
sahf
cwtl
ret
add
and
mov
repnz
xor
push
repz
dec
xchg
jle
add
pop
push
jns
mov
dec
popf
stos
test
aam
inc
ret
lods
push
add
imul
decb
inc
rcrb
adc
xor
jg
inc
inc
js
mov
out
pxor
pop
xchg
lret
movb
repz
sahf
xor
sti
sbb
push
sub
pushf
cltd
cltd
clc
mov
mov
mov
repnz
xchg
jle
jne
pop
push
movsb
addr16
jl
push
enter
inc
mov
dec
cmpsl
mov
notb
out
outsl
popf
mov
or
or
cs
mov
scas
lods
bound
xchg
xchg
mov
push
movl
stos
test
scas
push
sub
int
and
jne
loop
mov
dec
movsb
rorl
xor
nop
sub
cmc
mov
adc
push
lea
inc
fmuls
mov
inc
cld
xlat
xor
addr16
push
imul
insb
or
or
stc
aaa
xor
inc
dec
scas
or
loop
add
stc
aas
lahf
insl
in
jo,pn
inc
mov
mov
cmpb
push
dec
jb
xchg
movsl
jg
es
scas
in
pop
fadds
mov
sub
push
or
mov
or
imul
sbb
mov
fcoms
sbb
jg
cli
cld
mulps
lea
out
inc
insl
push
add
fistpl
bound
sub
cmp
push
cmp
or
pop
mov
adc
into
pop
pop
xor
dec
adc
pop
jno
dec
pop
add
das
loopne
adc
xchg
outsb
mov
incl
aas
pop
data16
pop
scas
fstps
or
js
adc
or
cmpsl
xlat
sub
shrb
fwait
mov
sti
frstor
xor
and
xor
push
daa
loop
cmpsb
mov
and
mov
je
rorb
mov
mov
pushf
fcoml
scas
push
cli
adc
rcl
fsubl
cmp
sahf
scas
das
pushf
jge
xchg
add
cmp
scas
lret
in
cmp
loopne,pt
mov
dec
dec
xor
popa
lods
and
enter
frstor
mov
cmp
mov
orb
leave
test
daa
jns
inc
enter
inc
dec
pop
lea
cli
lds
cmp
xor
fsubs
movsb
xchg
mov
outsl
pop
cmc
jae
or
dec
cmp
and
data16
add
xor
pop
and
pusha
jle
sarb
xlat
xlat
bound
shll
fcoms
mov
push
test
xor
jbe
addb
sbb
lahf
jmp
inc
jecxz
adc
bound
ljmp
add
orl
mov
mov
jo
add
cmp
inc
jno
inc
cmp
mov
insb
cmc
popa
mov
jle
out
test
push
pop
cs
loop
mov
arpl
push
push
xchg
mov
or
scas
movsb
dec
mov
jnp
mov
in
sbb
add
loopne
lea
add
out
insl
pop
cli
sbb
cs
dec
xchg
in
incl
data16
subb
inc
scas
add
inc
lods
decl
out
jno
sub
jge
icebp
shlb
dec
in
hlt
in
push
xor
shl
test
or
sbb
and
test
and
xor
xchg
ljmp
fisubs
lret
cmp
mov
jp
int
push
pop
jl
mov
jae
sahf
xor
cmp
fistl
enter
fdivl
push
cs
cmp
sbbl
inc
mov
push
enter
pop
shlb
mov
add
popa
sub
mov
fidivl
cmp
sbb
inc
push
loope
adc
lods
mov
mov
push
xor
sbb
into
outsl
pop
mov
test
push
adc
dec
pop
fsin
es
jg
fldl
cwtl
add
into
add
sbbl
mov
jo
cs
dec
jne
stos
insb
xchg
push
add
stos
rcll
out
mov
or
sbb
xchg
sbb
or
sbb
and
pop
cs
repz
cltd
mov
push
or
dec
adc
xchg
pop
movb
pop
or
add
cmp
pusha
gs
xor
icebp
inc
and
xchg
test
and
pop
je
sbb
ds
dec
mov
jae
xor
push
test
xor
out
popa
movsb
push
pop
outsb
push
in
imul
push
fs
pop
xor
addb
mov
cwtl
pop
inc
int3
shll
cmp
pop
ret
fadds
nop
xorl
subb
test
push
test
add
mov
imulb
add
lock
leave
or
push
mov
stos
cmpsb
mov
addr16
push
push
push
dec
xor
dec
push
imul
inc
js
xor
out
adc
mov
xor
mov
fisttpll
ficompl
stos
mov
int
jo
jns
mov
cmpsl
out
mov
sub
fcoml
add
pop
adc
sbb
pop
std
clc
in
loop
ljmp
leave
stos
addr16
aad
jl
test
mov
mov
test
mov
ss
mov
or
pop
mov
stos
mov
dec
iret
inc
ret
daa
push
push
gs
or
push
dec
int
inc
stos
fsubrs
sbb
out
dec
call
mov
gs
mov
inc
sahf
mov
inc
xchg
push
jecxz
jne
cmpsb
rorl
inc
adc
cmp
inc
sub
xor
daa
stos
push
mov
mov
scas
nop
sub
push
xlat
imul
sub
hlt
shll
lods
loop
push
adc
clc
xchg
pop
cmp
cmp
adc
jecxz
inc
sub
mov
push
push
sub
pop
call
cmc
rcl
jno
addl
sub
cmp
cltd
repnz
scas
sahf
cmp
stos
jg
loopne
inc
ljmp
sbb
or
jl
mov
mov
adc
mulb
xor
push
xchg
decb
iret
or
mov
push
pop
push
push
push
imul
pop
cmp
and
and
mov
lahf
inc
lret
ret
inc
jp
in
jbe
idivl
int3
cmp
test
int
rorb
dec
orb
mov
insl
repz
xchg
mov
lea
leave
testb
mov
rcrb
and
out
jo
outsb
adc
push
and
jo
xchg
es
mov
xor
jb
out
xchg
inc
fucom
lcall
pop
cmp
test
imulb
jae
cmpsb
xor
mov
xor
add
jge
jns
mov
and
outsb
push
and
xor
jo
pop
jo
sbb
sbb
ret
sub
jge
jge
add
test
dec
lea
bound
arpl
cs
pushf
pop
sbb
cmp
outsl
pop
fisttpll
aas
adc
cmpsl
and
das
xor
and
jl
test
dec
xchg
mov
cmp
faddl
inc
and
mov
sbb
jecxz
jge
int
jne
dec
sbb
dec
or
js
push
xor
cmpl
clc
jne
sub
sub
inc
cwtl
shlb
sub
lods
and
pop
std
dec
fisubs
andb
xlat
hlt
mov
das
jecxz
pop
imul
ret
cmp
xor
clc
jb
pop
iret
and
pop
mov
mov
sbb
aaa
jge
scas
fxch
hlt
and
test
dec
in
fucom
outsb
push
inc
cli
add
out
movsl
ljmp
pop
push
and
xor
pop
daa
jbe
mov
addr16
scas
ficompl
aaa
cmc
or
int3
mov
add
aam
daa
inc
stc
ret
mov
mov
xor
sub
add
xlat
mov
fisttps
xchg
xchg
mov
and
roll
adc
dec
fistl
dec
out
push
subb
push
mov
in
imul
jmp
daa
or
adc
or
daa
gs
mov
data16
cwtl
sub
loopne
mov
cmp
repz
add
or
dec
inc
arpl
mov
std
sbb
adc
xchg
xor
mov
jecxz
xchg
fidivrl
rcrb
jno
fs
test
xlat
fldl
repnz
in
or
lods
in
fldcw
jnp
sbb
xor
femms
jo
cmpsl
inc
lahf
and
pop
pop
outsb
ret
test
add
lcall
mov
pop
sahf
frstor
daa
add
adc
inc
and
and
hlt
push
xor
negl
lea
lods
jns
or
insb
xchg
nop
inc
inc
xor
inc
enter
pop
nop
and
ljmp
enter
lock
dec
push
xchg
mov
cld
cltd
out
loop
or
nop
enter
xor
mov
pop
sahf
mov
sahf
gs
fisttpll
fcmovbe
out
xor
jae
iret
ss
adc
scas
cmp
inc
clc
mov
lahf
imul
imul
sub
push
sbb
inc
dec
cmpb
nop
inc
clc
adc
mov
loope
add
mov
mov
sbb
jo
repnz
add
xor
sete
mov
inc
xchg
dec
mov
sub
jecxz
mov
loop
adc
bound
mov
jmp
cltd
fnstsw
jl
add
mov
aam
aaa
rcrl
in
mov
or
out
adc
mov
xchg
push
and
outsl
cmp
sar
lret
test
jmp
mov
jle
fwait
orl
pusha
pop
and
add
mov
xchg
dec
cmp
ret
mov
je
int3
mov
jmp
fnstcw
xchg
mov
out
sbb
inc
sub
mov
loope
push
repnz
mov
sbb
scas
stos
and
mov
dec
ret
adc
loop
lahf
mov
pop
and
call
sbb
test
shrb
jbe
xchg
pop
dec
push
addr16
xorl
loopne
icebp
push
hlt
enter
mov
inc
leave
ds
cmp
mov
scas
mov
jae
jl
adc
pop
mov
xchg
or
jo
outsl
cmpsb
inc
pop
shrl
movsb
adc
or
ds
fnstsw
adc
xchg
inc
addr16
das
shrl
and
cmp
xchg
ja
out
adc
pop
jle
ds
jb
call
add
push
inc
aam
leave
cmpsb
mov
les
shlb
movsb
add
ja
in
loop
lods
lds
mov
add
dec
pop
cmpl
popf
inc
pushl
loope
jo
or
aaa
aad
push
ret
xchg
inc
rcrl
arpl
pop
test
sbb
inc
push
into
inc
int3
sub
dec
xchg
jns
or
js
adc
xchg
ret
or
cmp
sub
call
dec
and
aas
jne
repnz
adc
ds
mov
aad
sbb
test
cmp
lret
inc
in
mov
test
push
and
jb
imul
mov
mov
xchg
aaa
pop
mov
dec
test
dec
gs
cli
aaa
std
inc
or
ds
imul
dec
jmp
testb
sbb
fmul
xchg
mov
mov
pushf
mov
mov
or
and
test
adc
imul
sub
mov
pop
mov
imul
mov
lds
hlt
sub
push
xchg
or
repnz
insb
std
fdivrs
test
mov
sbb
insb
test
shlb
pop
and
in
das
shr
push
ret
adc
stos
cmp
insl
push
sbb
mov
aaa
or
outsb
inc
sub
sub
jmp
jg
jmp
out
or
cmp
lret
sti
fwait
repnz
jb
jge
dec
gs
test
jae
lods
mov
sub
clc
rorb
loope
rorb
sbb
jbe
jecxz
push
cmp
xchg
gs
push
and
shr
jmp
stos
addr16
lea
mov
imull
aas
jecxz
cmc
xor
lret
cmc
stos
mov
pop
test
testl
ret
mov
sub
cmp
lods
push
push
jbe
pop
cmpsl
jb
leave
xchg
sbb
sbb
imul
add
out
jae
sub
fldcw
cmp
push
mov
arpl
sti
ret
dec
lds
jnp
sbb
out
imul
xchg
cmp
pop
jmp
mov
mov
fiaddl
jb
lock
cs
sbb
jae
mov
punpcklbw
imul
into
addr16
nop
in
popa
repnz
mov
dec
aam
mov
push
fcmovnbe
aad
loope
push
dec
inc
push
iret
mov
or
push
dec
pop
loopne
inc
aam
aas
pop
mov
cwtl
cld
xor
neg
imul
push
jae
sub
mov
les
push
xchg
outsl
sub
fdivl
sbb
lret
mov
lahf
pusha
add
lret
iret
mov
je
xchg
pushf
inc
stos
ret
sbb
mov
mov
clc
add
jne
jle
in
dec
jnp
icebp
fists
popf
lock
inc
imull
data16
pushf
mov
pop
jnp
fs
add
ror
or
xchg
mov
and
mov
dec
push
jp
icebp
adc
dec
inc
pop
push
enter
jmp
cmp
test
or
fisubl
fdivl
pop
mov
cs
cmp
inc
sub
fchs
sbbb
es
addr16
dec
popa
dec
push
les
enter
adc
loope
gs
jne
xchg
mull
jg
xchg
dec
mov
cmp
rorb
dec
aad
lahf
add
sbb
push
fisttps
jg
xor
cmpsl
jo
sub
cmp
dec
push
sbb
icebp
inc
jg
hlt
jbe
loope
cwtl
aaa
add
push
arpl
and
mov
js
mov
jg
sti
les
outsl
xchg
arpl
and
xchg
pop
cld
cmp
dec
shrl
imul
cmp
cmp
lds
es
sbb
jle
sbb
test
inc
cmp
jns
data16
mov
bnd
cmpsb
adc
cmpb
leave
mov
jns
add
mov
jbe
add
aam
or
lds
arpl
add
inc
add
je
pop
lds
es
pop
ja
sbb
sbb
jae
mov
cmp
mov
pusha
inc
int3
or
sbb
cmpsl
adc
push
rcr
or
std
jb
cltd
clc
add
into
fcmovbe
inc
jne
mov
push
mov
pop
and
jge
icebp
cmp
pop
test
cld
lods
pop
cmc
sbb
adc
das
cld
into
dec
bound
movsl
xor
jno
daa
aad
push
push
les
jle
je
sub
outsl
push
jne,pt
adc
jl
cmp
inc
nop
sbb
fmull
ret
push
rcll
jae
sub
dec
pop
stos
sahf
jae
dec
mov
test
sbb
jecxz
fidivs
les
stc
add
dec
add
verr
cli
jp
out
test
mov
data16
cmp
jmp
mov
mov
bswap
mov
and
or
jmp
pop
inc
fmulp
mov
dec
fcomps
lods
shll
dec
pop
data16
add
cs
repnz
sbb
push
xchg
mov
xchg
push
mov
mov
repnz
loope
push
mov
pop
enter
pop
das
sub
cmp
ret
xchg
mov
sbb
xor
sbb
insb
xor
inc
ds
movsl
xor
je
stos
mov
or
repnz
jmp
shl
stos
addl
out
out
pop
les
mov
adc
lahf
mov
lds
sarl
sbb
cwtl
in
test
jmp
dec
mov
cmpb
push
mov
inc
sbb
movb
test
fs
inc
rolb
icebp
push
and
std
add
cmp
cmp
repz
insb
push
prefetch
rolb
sub
push
test
lea
popa
cmpsl
sub
mov
dec
dec
pop
adc
dec
push
fldl
mov
dec
adc
xor
mov
loop
addr16
outsb
leave
xor
shlb
popf
stos
and
imul
leave
mov
xadd
mov
aaa
and
inc
mov
out
out
adc
or
int3
mov
pop
push
cmp
push
shr
pop
jae
mov
repz
shlb
pop
fs
aad
lret
lahf
aad
rcrb
lock
jge
inc
es
ja
dec
mov
bound
pop
popa
ljmp
shll
aam
push
icebp
movsb
lods
dec
rolb
mov
jne
filds
data16
popa
add
repnz
fldenv
xchg
cmp
inc
out
js
xor
mov
jge
nop
inc
leave
add
jmp
add
rcl
xor
pusha
jne
xor
jne
sarb
test
add
adcl
sub
dec
xchg
rolb
or
lret
mov
stos
fcoml
jmp
sar
sbb
ds
xor
mov
cld
insl
scas
add
lret
or
int3
jle
add
shll
and
nop
sub
shl
leave
imul
xchg
adc
push
mov
mov
adc
sub
and
xor
mov
inc
jns
int
pop
outsb
sub
adc
xorl
call
call
in
data16
mov
cli
mov
inc
pop
mov
sub
jge
pop
cltd
into
rcll
shlb
mov
movsb
dec
inc
insb
rcrl
pop
in
ret
or
sub
push
lret
push
stc
loopne
fs
dec
cmp
dec
sbb
stc
repnz
push
adc
push
push
inc
es
add
aam
iret
jns
roll
dec
xchg
pop
sarl
or
ror
sahf
lahf
mov
sbb
pop
jl
cmp
movsl
or
add
xor
sbb
shll
jb
mov
cmp
je
sub
out
movsb
add
rorl
test
pop
or
xchg
pop
fs
aaa
aas
jge
mov
xchg
sarb
rcr
movsl
imul
sub
testb
cmp
adc
dec
adc
in
xor
out
test
imul
clc
fiaddl
pop
dec
lret
jno
or
fcmovnb
jno
jle
je
push
movsb
enter
ret
pop
in
dec
dec
or
sbb
scas
sarl
das
mov
mov
sbb
push
shll
xor
mov
sbb
jnp
sub
jno
scas
or
jb
aaa
fwait
push
sbb
lock
and
mov
add
outsl
sub
inc
les
les
add
pop
imulb
inc
into
xchg
add
ljmp
cwtl
iret
dec
fisubs
rcrb
mov
lret
cs
std
fs
fnstsw
jo
sub
push
iret
int3
notl
fs
and
or
push
ja
jle
jnp
scas
divb
sub
mov
xchg
dec
icebp
decb
test
pop
in
cwtl
popf
pop
adc
cli
inc
sbb
cmp
xchg
adc
insb
fs
pop
pop
cmp
cmpsl
fistl
push
cmp
bound
ljmp
push
lds
push
push
arpl
push
jbe
bound
inc
push
rorb
sub
or
xor
out
mov
mov
jbe
sbb
adc
add
je
xor
divl
mov
xlat
inc
sub
into
mov
mov
fidivl
jne
or
push
jp
int3
push
js
das
ds
sub
dec
pushf
insl
fwait
rolb
lods
pop
call
sbb
out
das
cli
test
xlat
or
scas
xchg
jbe
pop
lret
xor
mov
fldcw
mov
dec
icebp
jbe
insl
lret
and
mov
test
fldcw
sub
dec
arpl
xor
shlb
add
pop
add
jns
jmp
mov
lret
lret
adc
adc
jmp
mov
in
scas
loope
mov
inc
push
xlat
stos
cltd
cmp
inc
pop
adc
mov
or
adc
or
sbb
inc
cmp
pusha
and
jae
mov
mov
mov
mov
scas
inc
xor
mov
lret
and
xchg
jle
or
ficoml
test
mov
daa
clc
sbb
mov
cmp
pop
mov
inc
pushf
aaa
mov
push
je
lods
dec
push
iret
xchg
stos
push
sbb
mov
aas
mull
stos
sub
out
rcll
movsl
shll
jb
mov
mov
pop
ss
popf
loope
ljmp
cmp
lock
int3
adcl
and
inc
fidivs
jae
jae
lea
test
mov
mov
adc
cmp
lret
mov
cs
adc
add
or
repnz
mov
cli
cmpsb
int
xchg
inc
aam
fsub
std
js
arpl
mov
call
scas
lea
xchg
cmc
mov
rcrb
mov
mov
add
xor
jnp
lcall
mov
sub
xchg
imul
aas
in
sbb
lret
popa
movb
jl
inc
pop
mov
dec
bound
sub
leave
out
cs
sub
popf
dec
loopne
dec
mov
clc
cmp
fildl
mov
jne
rcr
xchg
cmp
aam
xor
or
mov
mov
lea
or
jae
inc
fsubrl
xor
dec
sbb
xor
popa
xchg
andb
jecxz
cmp
xor
jb
jo
out
push
xchg
lret
jmp
mov
pop
xchg
dec
inc
pusha
lret
mul
dec
cmpsl
push
lds
enter
pop
dec
lea
lahf
jb
inc
inc
sbb
clc
es
shrl
and
or
jae
jmp
shlb
popl
or
inc
repz
pop
cld
je
popf
mov
dec
insb
add
xchg
out
sub
cmpsl
lock
jecxz
ret
jge
std
jb
add
lcall
mov
push
xor
movsb
bound
cmp
and
imul
cli
xor
sbb
dec
arpl
push
pop
adc
pop
push
xchg
mov
or
xchg
jb
sbbl
andl
sbb
stc
jae
mov
push
jo
outsb
imul
fcompl
mov
xchg
sahf
dec
mov
mov
push
scas
into
or
aas
mov
cmpsb
pop
and
push
push
xchg
mov
lds
orb
shlb
das
lods
jo
push
pop
lahf
lods
mov
push
and
fwait
and
push
ret
je
fidivs
jno
jb
int
inc
cmc
push
inc
fs
add
xchg
scas
sbb
fwait
mov
add
insl
mov
ds
stos
ds
dec
das
or
cmpsl
mov
js
mov
lds
mov
clc
lcall
int3
das
aad
sbb
clc
sub
jmp
es
pop
clc
data16
cmpsl
pop
mov
mov
in
mov
mov
xchg
ret
stc
or
push
mov
ja
lds
das
fwait
pop
fidivs
adc
mov
push
cs
in
rcl
repz
out
pop
dec
or
iret
jae
loop
popf
outsl
mov
jb
dec
rorb
and
xchg
call
sbb
ja
push
mov
cmc
aam
aaa
push
movsl
mov
data16
dec
mov
jge
mov
push
add
shrb
cmpsb
js
fidivrl
inc
insb
in
or
addb
sub
das
arpl
stos
imul
sahf
xchg
mov
xchg
in
cmpl
cmp
xchg
mov
lods
adc
mov
loope
outsl
stos
xchg
mov
sub
or
push
inc
arpl
dec
xchg
push
xchg
sbb
inc
fisubl
cmc
jb
es
mul
scas
jbe
mov
mov
int3
sti
sub
sbb
add
adc
sahf
ret
icebp
jge
scas
cmp
xor
jmp
sub
adc
sub
and
add
into
mov
clc
or
testb
add
outsb
lret
ds
fisubrl
int
cmp
add
lahf
scas
mov
cltd
adcb
jge
cmp
mov
or
jae
movsl
scas
rclb
rclb
jae
mov
xchg
stc
push
inc
in
jmp
cmp
cmp
cmc
fstpt
fsubrl
and
mov
jmp
and
push
fistl
je
or
xchg
lcall
xor
add
or
inc
cmp
xchg
pop
xor
push
outsb
mov
leave
ret
jb
imul
sub
inc
pop
outsl
push
push
pop
and
sub
push
inc
mov
fsubr
cmp
inc
loope
jecxz
mov
mov
out
in
gs
das
pop
sbb
mov
mov
decl
jmp
adc
or
call
jge
mov
sub
dec
inc
mov
push
push
mov
inc
bound
cltd
in
pavgb
xor
xlat
sarb
xor
xor
sub
sub
xor
mov
mov
mov
add
imul
mov
mov
mov
add
or
mov
mov
mov
add
xor
mov
mov
mov
add
and
mov
mov
mov
lea
mov
mov
mov
sub
add
mov
mov
xor
add
jne
jmp
mov
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
add
imul
mov
mov
mov
add
or
mov
mov
mov
add
xor
mov
mov
mov
add
and
mov
mov
mov
lea
mov
mov
mov
sub
add
mov
mov
xor
add
jne
mov
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
add
imul
mov
mov
mov
add
or
mov
mov
mov
add
xor
jmp
adc
xchg
add
inc
addb
in
jb
xchg
popf
mov
push
push
mov
fists
fsubr
dec
push
push
dec
xorl
push
inc
ficompl
xor
inc
in
push
jge
int3
push
cmp
pushf
push
push
push
fsubl
push
push
mov
inc
lret
lahf
lcall
push
fcmove
icebp
and
mov
mov
lods
sbb
mov
out
call
jmp
movb
inc
in
sub
jle
xchg
xor
in
aas
shl
lea
push
cld
dec
test
add
lods
push
or
es
imul
add
jg
inc
or
stos
xor
adc
out
scas
xchg
lea
and
adc
pop
lret
outsl
dec
popf
jbe
inc
ss
ss
int3
lock
sahf
and
arpl
lods
mov
push
push
std
mov
cld
mov
cli
jbe
jno
mov
xchg
aad
lret
sti
inc
and
daa
pushf
shrb
lahf
out
dec
negl
lcall
jb
loopne
daa
mov
andl
pop
jl
pop
mov
loop
xlat
dec
movsb
push
test
sbb
mov
lcall
es
sbb
outsb
dec
mov
add
ljmp
sbb
or
fwait
in
cwtl
add
and
and
je
push
outsb
and
sti
xor
mov
dec
xchg
stc
xchg
jecxz
lock
mov
sub
cltd
fisttpl
mov
jno
shrb
subl
adc
xlat
int3
sbb
subb
cmp
pop
add
cld
pop
ret
sub
rolb
xchg
pop
out
in
inc
fs
mov
fldt
inc
out
xchg
test
jno
cmp
cltd
xchg
lock
xchg
in
into
lret
mov
in
dec
sti
inc
movl
ljmp
arpl
push
dec
daa
pop
dec
aad
notl
faddp
in
or
adc
add
xchg
pop
push
shrb
add
lret
test
inc
pop
sub
sar
jl
pop
aaa
aam
popa
cmp
dec
add
cmp
or
or
mov
push
mov
jl
sbb
add
popf
mov
mov
jae
mov
add
iret
pop
xor
std
addl
jnp
roll
xchg
xlat
fdivs
mov
fstps
pushf
jg
mov
in
fdivs
sbb
pop
enter
decl
lods
xchg
pop
out
subl
mov
cmc
push
adc
jge
jb
push
imul
xchg
mov
push
leave
pop
push
add
mov
add
cpuid
fimuls
cmpb
xchg
sub
cmpsl
inc
pop
popf
push
add
sti
pop
adc
popf
cmp
insl
int3
dec
xchg
dec
mov
test
mov
xchg
cmp
fcompl
mov
cmp
jle
jecxz
rclb
outsb
repnz
jl
inc
cs
sub
shll
sbb
xor
test
mov
mov
and
dec
int
pop
mov
pushf
xchg
sbb
call
movsl
xchg
jmp
lock
and
rcll
rorl
shlb
adc
pushf
mov
rcrb
mov
wrmsr
add
pop
sub
mov
mov
xchg
pop
imul
or
stos
push
cld
faddl
add
negb
cmp
adc
cmc
pushf
fwait
das
sarb
fcmovnu
xlat
xor
inc
xlat
sub
and
push
dec
mov
jl
dec
out
mov
pop
out
lods
push
sbb
jbe
adc
int
jne
dec
in
sub
cltd
ret
adcb
repnz
lret
aaa
lret
and
lods
mov
push
leave
inc
dec
adc
out
adc
orl
jp
push
iret
and
push
pusha
repz
jmp
add
je
xchg
ret
pop
mov
jnp
das
mov
lcall
testb
cmp
lret
shr
cmp
jmp
cmp
cmpsl
xchg
dec
dec
push
xlat
icebp
sbb
push
jns
jae
movsl
push
inc
jmp
sar
mov
xor
arpl
lret
xchg
jbe
leave
xchg
mov
fiadds
aad
movsl
ljmp
movsb
test
in
sbb
movsb
mov
popa
cmp
inc
and
nop
mov
dec
lds
or
mov
ja
pop
push
push
addr16
pop
xchg
jl
in
mov
imul
xor
notl
add
fcoml
nop
adc
and
cmpsb
and
data16
hlt
ds
stos
mov
out
je
arpl
ds
dec
dec
fmull
add
push
mov
lds
scas
popa
xor
pop
shlb
cmp
test
push
ljmp
push
enter
mov
sbb
xchg
in
adc
subb
cs
insb
subl
bound
add
lods
faddl
xchg
mov
xchg
arpl
cltd
adc
push
mov
xchg
fldenv
and
push
xor
enter
xor
sti
in
pop
xor
or
daa
push
xchg
in
faddl
mov
mov
sbb
xchg
and
out
sahf
outsl
dec
mov
leave
or
push
sbb
lock
cwtl
mov
int
adc
inc
out
adc
push
adc
add
lcall
in
mov
repnz
xchg
in
add
test
faddl
pop
pop
loope
mov
mov
cmpsl
clc
adc
jmp
push
pop
and
roll
in
pop
out
inc
loopne
imul
xor
push
mov
add
add
aas
cmp
jle
stc
jae
xor
pop
dec
ss
pop
ffree
and
lret
cmpsb
cmpb
add
lds
add
push
cmpsl
push
aam
daa
ss
dec
cmc
adc
pop
mov
cld
lcall
xchg
pop
adc
xor
xor
push
xor
push
add
push
push
mov
div
lds
xchg
jge
inc
add
or
sahf
insl
loope
popa
jmp
insb
in
xchg
dec
movl
cmc
cmp
repz
push
les
mov
xor
lcall
dec
daa
jle
aas
xchg
loope
test
aas
or
test
jle
or
dec
inc
adc
pop
mov
mov
andb
inc
imull
repz
cmpsl
mov
mov
mov
and
aas
imul
lods
cmpsl
mov
es
xor
leave
cld
mov
daa
push
push
inc
popf
hlt
inc
scas
leave
iret
pop
add
add
xor
popa
jmp
mov
pop
movsl
loop
scas
shrb
ret
out
push
add
sbb
pop
cmc
fmuls
sbb
aam
push
xchg
xor
mov
sub
push
sbb
sub
adc
inc
pop
dec
jae
vmread
push
repnz
insb
xchg
xchg
pop
dec
fwait
cmp
ret
out
fwait
cmp
xchg
or
repnz
dec
push
jns
jo
adc
ljmp
mov
hlt
movl
xchg
adc
cmp
inc
adc
mov
fs
rcrb
mov
fldl
sub
dec
mov
lds
xchg
push
jg
adc
jl
xchg
ja
out
fiadds
sbb
repnz
mov
xchg
pop
cmpsb
adc
xor
test
jo
mov
jge
sahf
push
int
data16
les
mov
into
dec
inc
sub
fcoms
or
mov
or
push
mov
xchg
divl
cwtl
test
dec
shl
hlt
ret
stos
push
insl
mov
mov
jns
mov
js
push
outsb
dec
pusha
and
stos
cmc
data16
inc
lahf
in
pop
ljmp
jg
popa
xchg
mov
scas
dec
clc
cmpsb
xor
mov
fldenv
outsb
xchg
mov
xchg
ja
jbe
and
jg
push
xchg
loopne
test
aaa
push
sbb
js
mov
cmp
mov
fdivs
sbb
add
std
popa
mov
cmp
and
inc
push
xor
mov
add
in
fstpl
out
ja
sub
adc
mov
adc
and
pop
add
test
gs
mov
int
bound
xor
loop
lods
and
add
fsub
cmp
sbb
push
aad
push
mov
iret
shl
xchg
daa
test
mov
xchg
outsl
mov
arpl
inc
add
sbb
mov
addr16
adc
and
aaa
or
mov
mov
call
mov
or
add
in
mov
rcl
cmpsl
cld
mov
sar
pop
jmp
ja
inc
cmp
jne
sub
sbb
insb
cmp
shlb
mov
sbb
jns
xchg
movsl
nop
xchg
div
sub
test
in
xchg
int
adc
movsb
mov
xchg
icebp
lods
ss
mov
sub
xchg
sbb
lock
js
inc
stos
or
and
jmp
pop
pcmpgtb
mov
push
inc
insb
stos
inc
mov
in
inc
inc
push
push
lahf
and
xchg
divl
sti
xchg
lahf
or
mov
lahf
inc
rclb
stos
fsubl
push
cmpsl
mov
sahf
pop
jnp
sub
cmpsb
mov
cmp
cmp
mov
mov
sub
es
test
pop
ja
call
popa
inc
fwait
test
dec
push
jb
jbe
insl
pop
xchg
jbe
in
repnz
mov
mov
push
scas
je
daa
lret
inc
jo
test
roll
jbe
test
outsl
aaa
xchg
xor
aam
and
inc
std
lds
fists
inc
sub
test
aaa
sub
test
ljmp
fstl
cmpsb
jbe
addr16
or
in
call
mov
mov
fwait
test
hlt
stc
inc
sahf
push
test
inc
lock
adc
imul
fisubl
iret
out
jno
je
ret
mov
mov
lahf
es
sbb
loop
sub
sti
and
xor
aad
int3
std
movsb
dec
test
cmpsb
jnp
rorl
or
push
adc
test
dec
es
loop
test
hlt
inc
test
adc
mov
subl
sub
test
test
jmp
adc
push
dec
jmp
dec
cltd
inc
bound
fistpl
lahf
pushf
xor
imul
repnz
push
push
repnz
mov
inc
dec
scas
sbb
mov
call
imul
adc
add
icebp
daa
jge
test
cli
in
cmp
push
xor
loopne
inc
fimuls
inc
lcall
xchg
ret
mov
xchg
sub
pop
decl
mov
fidivrs
jne
shr
xlat
sbb
int
mov
inc
add
and
mov
fimuls
popa
loop
xchg
mov
in
xchg
push
lahf
and
lds
mov
mov
imul
fwait
movsb
xchg
xor
mov
add
inc
xor
leave
lret
imul
lcall
gs
std
dec
jnp
mov
outsb
pop
popa
dec
int3
test
mov
sbb
jge
das
and
add
sti
push
in
cli
mov
leave
cli
mov
roll
mov
clc
in
xchg
lock
dec
sub
into
popa
xchg
or
stos
and
je
cmp
fdivrs
push
movsb
loopne
mov
xchg
jae
and
push
mov
and
dec
jl
mov
mov
push
lods
ret
mov
and
mov
in
clc
aaa
out
ret
insb
push
das
cmp
cli
sbb
pop
test
inc
out
adc
push
repnz
sub
mov
sahf
fadds
test
lods
cmpsl
incb
rorl
cmp
inc
and
pop
add
and
pop
xor
fs
add
lds
pop
jnp
inc
or
enter
cld
mov
stos
jg
popa
mov
sub
jg
lods
push
cmpsl
sub
cmpsl
in
push
adcl
mov
jno
pop
and
sub
add
adc
mov
test
andb
outsl
jno
out
adc
shrw
in
repz
cld
stos
inc
xor
dec
push
jl
lea
sbb
test
lahf
hlt
adc
leave
xchg
cmpb
jmp
xchg
adc
cli
lahf
aad
mov
dec
rolb
out
xlat
sub
int
loop
xchg
fstpl
inc
pop
test
std
es
jge
fdivr
mov
adc
dec
mov
enter
push
scas
jne,pn
es
out
push
mov
xchg
enter
pop
dec
loopne
fldenv
adc
jecxz
jno
inc
xor
call
jmp
in
cmp
cmp
pop
lods
stc
rcrl
push
fiaddl
test
jle
push
mov
jno
mov
out
xchg
int3
lea
repz
dec
mov
les
sub
push
mov
inc
shll
in
inc
cwtl
cmpsb
js
jp
sub
push
in
mov
xchg
lock
cld
popf
bound
dec
and
push
and
xchg
rcll
jns
lret
aam
xchg
ret
add
rcll
jle
pop
mov
fs
jle
mov
push
incb
outsb
rcll
xchg
fisttpll
jno
sub
lret
xchg
scas
mov
fidivrs
mov
mov
loope
or
cli
mov
das
aad
push
ficoml
push
lcall
cwtl
pop
push
mov
inc
and
push
jmp
pop
andl
and
iret
fnsave
mov
lds
mov
bound
xchg
dec
mov
xchg
fmull
sub
adc
mov
pushf
jnp
mov
pushf
leave
push
jg
lea
dec
ljmp
rclb
movsb
andb
test
imul
stos
loopne
dec
popf
jg
insl
xchg
cld
icebp
aad
inc
fwait
out
sahf
aam
sub
ljmp
cmp
lods
rcrl
dec
add
stos
sub
xchg
cmp
xor
xor
cmp
aaa
push
jb
cmpsb
push
in
xchg
jp
jp
push
fnstcw
bound
or
pop
out
lcall
out
or
outsb
dec
repz
rcl
mov
dec
rolb
push
rcrb
lcall
inc
ds
mov
es
jp
adc
lret
popf
lcall
or
je
jno
in
push
dec
jno
xchg
sub
sbbl
sub
jne
and
push
iret
push
jne
add
stos
sbb
loope
push
cltd
lret
sbb
jp
fwait
out
rolb
push
fcomps
jecxz
test
jle
rcrb
push
std
and
insl
pop
std
xchg
fdivrl
push
in
fcmovu
xchg
cltd
add
pop
inc
mov
mov
lods
jge
pop
or
lret
push
repz
mov
jecxz
loopne
lock
xchg
pusha
jl
rol
xor
pop
and
push
repz
and
pop
js
inc
movsl
sbb
cmc
xchg
jecxz
inc
lods
mov
outsl
jge
pop
xchg
outsl
push
adc
das
cli
sbb
ljmp
mov
push
cmp
lea
cmc
sub
into
adc
inc
xchg
sub
pop
pop
mov
mov
lret
hlt
pop
ja
xor
pop
mov
enter
sti
test
aad
sub
jns
lcall
dec
adc
jecxz
pop
cld
mov
add
or
fwait
jge
adc
je
push
and
into
mov
adc
cmp
push
notb
mov
gs
dec
adc
mov
in
in
pop
int3
sub
push
mov
lock
lock
cmp
cmc
loopne
fnstenv
stos
mov
mov
dec
movsb
aam
adc
insl
adc
sub
cmp
adcb
data16
arpl
sub
out
inc
push
insb
loop
in
test
inc
inc
push
mov
sub
xchg
sub
out
aaa
mov
aaa
fistpll
sub
push
and
sub
push
in
adc
cli
pop
cmp
dec
pop
mov
aaa
sbb
xor
inc
inc
aaa
cs
or
jb
mov
outsl
orb
mov
lret
cmp
push
pop
imul
inc
aaa
mov
mov
fsubl
insb
dec
mov
inc
mov
aam
sbb
mov
movsb
lock
test
sbb
push
cmp
inc
hlt
inc
push
fcompl
dec
inc
js
int3
enter
mov
dec
dec
xchg
xchg
or
add
jbe
mov
out
sar
andb
fcompp
pop
mov
fld
sbb
jo
lds
in
push
xor
mov
movsl
call
adc
fimull
jmp
push
pop
add
dec
dec
iret
cmp
add
movsb
pop
cltd
cli
lds
mov
jbe
xor
fs
rol
lods
jo
loop
fstp
push
fmulp
dec
popl
mov
pop
daa
jns
mov
sbb
add
iret
inc
xchg
repnz
xchg
cmp
mov
iret
in
mov
lahf
jbe
lds
mov
ret
dec
pop
sbb
scas
or
and
imul
dec
jae
adcl
mov
and
dec
shl
dec
mov
and
mul
in
test
xchg
mov
call
cmpsb
adc
add
lock
outsb
push
fists
push
into
int
mov
cmp
sbb
rclb
je
lret
mov
cmp
jae
push
push
lock
jle
scas
jnp
lret
stos
cmpsb
fwait
add
adcl
aas
adc
cmp
imul
sbb
and
scas
inc
dec
insl
mov
popa
inc
mov
inc
mov
dec
dec
pop
dec
xor
pop
inc
ret
imul
cwtl
push
cmpsb
cmp
in
imulb
pop
inc
les
mov
adc
add
ret
xor
shll
xchg
fwait
add
out
rolb
dec
lea
cmc
mov
lret
repz
mov
mov
es
xchg
mov
iret
jg
push
rcr
adc
roll
mov
jg
jnp
jo
pop
or
test
adc
xor
mov
mov
or
dec
lea
mov
fldcw
cmp
sahf
dec
mov
jg
sbb
xor
adc
out
and
jle
out
cwtl
fcoms
jg
xchg
jecxz
test
cmp
and
cmp
dec
push
mov
outsl
adc
das
rclb
push
rol
testb
fidivs
shlb
testb
push
rcl
incb
push
movsb
insl
and
call
data16
sahf
rcr
mulb
cli
lods
xor
mov
xor
adc
jmp
loope
xchg
lods
adcb
add
mov
mov
js
inc
or
mov
push
mov
popf
int
push
in
sahf
roll
jnp
jp
repz
lods
lods
and
or
lods
dec
cmpsb
pop
dec
adc
cmp
inc
mov
sbb
jg
adc
fdivrl
mov
sub
mov
in
add
repz
jns
icebp
add
cmpsl
fildll
mov
adc
stc
adc
shll
lret
xchg
dec
dec
inc
dec
pop
add
aas
cwtl
orl
add
and
cmp
mov
pop
mov
sub
bound
mov
popa
push
iret
lret
fsubrl
pop
hlt
mov
push
jbe
lret
fdecstp
pop
je
mov
push
sub
xchg
mov
dec
test
dec
sbb
cmpsl
push
popa
aam
adcl
in
fmul
cwtl
inc
negb
adc
daa
mov
pop
sbbb
cmpsb
mov
adc
dec
xchg
push
dec
adc
sarb
sti
adc
scas
das
in
adc
inc
sbb
popf
shll
mov
out
outsl
and
loopne
lods
adc
xchg
or
mov
pop
sbbb
leave
jns
cltd
xor
push
shll
or
imul
adc
xor
or
lea
pop
mov
xchg
stc
imul
lret
adc
in
pop
mov
mov
or
push
fbstp
xor
push
loop
push
bound
push
fsubl
ftst
sbb
stos
jecxz
pop
inc
adc
jl
jno
cmp
sbb
dec
fildll
sbb
xchg
ss
fwait
in
jecxz
mov
repnz
cmp
xchg
fsubrl
jno
movsl
int3
jnp
pop
jb
add
rcll
push
roll
fmuls
cmp
xchg
pop
scas
sbb
inc
movsb
adc
pcmpeqd
popf
out
scas
mov
daa
in
cmp
xlat
push
sarl
pop
adc
cld
adc
mov
push
test
sbb
in
push
xor
pop
mov
arpl
xor
lods
pop
jge
cmp
mov
sbb
lea
push
ret
push
int
ret
cmc
outsb
imul
lea
push
cmp
mov
xchg
pop
add
test
mov
rcrl
bound
lcall
mov
aaa
mov
js
sbb
loopne
and
aas
scas
daa
push
push
cmp
ljmp
mov
fucom
out
xor
sub
sbb
nop
mov
xor
xchg
daa
xor
xchg
adc
push
in
push
arpl
and
jmp
mov
cwtl
cmp
jmp
add
outsl
adc
pop
sbbb
push
adc
aaa
jg
imul
icebp
push
fdivs
lods
subb
dec
fisubrl
popf
adc
popa
adc
mov
xlat
adc
mov
ss
adc
xchg
adc
jle
test
in
push
hlt
mov
xchg
xchg
mov
std
mov
popa
or
mov
scas
shlb
mov
dec
pushf
xchg
out
daa
push
aas
dec
loope
pop
out
mov
and
es
cmp
imul
popa
dec
repz
icebp
icebp
pushf
shll
mov
mov
pop
cli
inc
mov
int3
push
xchg
and
inc
data16
add
rcll
xchg
int
xchg
test
add
mov
adc
pop
dec
pusha
push
jno
mov
loope
xchg
ret
and
in
cmp
ss
cmp
push
push
enter
dec
es
stos
push
pop
es
cltd
sub
popa
dec
outsb
add
andl
cmp
in
mov
push
test
scas
repz
cmpl
popa
cmp
aas
push
movsb
sub
mov
xor
cmpsl
jp
daa
cli
les
into
js
mov
aaa
xor
pop
es
stos
mov
int
stos
rolb
jecxz
mov
add
mov
dec
dec
out
insl
sarb
cmpsl
fwait
loop
repz
mov
inc
pop
fadd
jb
sbb
mov
push
test
mov
cmpl
mov
xor
sbb
ss
daa
push
nop
adc
xchg
or
inc
fucomp
sarl
sbb
test
lock
pop
rcr
les
data16
lods
sbb
pusha
scas
aam
xchg
cmc
sbb
fmul
pxor
xor
xor
arpl
pop
stc
sbb
adc
scas
insl
fmull
sbb
cwtl
dec
jp
pop
mov
outsb
ljmp
or
test
nop
jne
shll
jae
outsl
jmp
fsubl
adc
sbbb
push
inc
dec
out
push
cmp
cltd
gs
and
aaa
mov
inc
xchg
shrl
dec
cs
fwait
mov
movsl
xor
add
aad
and
mull
not
or
divl
icebp
cld
pinsrw
push
pop
jl
dec
cmp
cli
pop
rcll
add
pusha
insb
repnz
inc
rorl
movl
push
loope
jnp
mov
jp
jne
add
in
cs
lcall
xchg
cld
xchg
insb
jp
inc
jle
roll
sub
push
jl
jno
mov
mov
out
int
mov
mov
mov
js
jns
dec
ja
mov
sbb
dec
jge
mov
xorl
or
sbb
mov
pushl
mov
test
stos
sarl
jge
cmp
les
xor
dec
cli
mov
sub
sub
adc
fsubl
jecxz
add
jb
push
pop
push
mov
lods
jns
add
fwait
lods
pop
mov
fisttpll
mov
rolb
cmp
ss
out
mov
in
jne
dec
cs
push
arpl
mov
pop
nop
xchg
jmp
fnstsw
jecxz
mov
pop
mov
inc
aad
mov
cmp
sbb
popf
add
ret
ja
mov
ss
adc
das
ret
adc
lcall
or
xchg
imul
mov
cltd
lcall
inc
mov
add
mov
lds
mov
test
aam
outsb
adc
jmp
cmp
cmp
aas
js
test
cmp
mov
sarb
idivb
mov
into
insl
arpl
xchg
jo
scas
cmpsl
jbe
inc
lcall
mov
and
repnz
clc
enter
addb
xor
mov
pop
insl
stos
ror
mov
xchg
cmp
sub
insb
pop
les
adc
mov
adc
test
push
test
lret
mov
jge
mov
dec
sub
test
add
add
int
push
mov
rorl
gs
lret
rolb
xchg
jl
push
mov
jecxz
aad
pop
sti
add
scas
rolb
and
popa
jo
inc
test
sub
mov
inc
ja
ss
xlat
out
subl
lods
push
andl
enter
lret
xchg
jns
inc
cmp
stc
aaa
inc
movsl
bound
ret
test
gs
jno
loope
into
mov
cltd
cmpsl
and
into
movsb
cmp
loope
push
adc
popa
and
dec
or
add
push
pop
cli
mov
not
aad
leave
jecxz
cs
dec
xor
out
sbb
popf
gs
es
xchg
or
aaa
dec
push
lea
jle
insb
fcmovb
sub
in
int3
and
xor
das
fildll
popf
push
cmpsb
xor
ds
dec
push
jmp
cmp
cwtl
push
pop
xor
mov
xchg
xchg
lea
pop
or
add
pop
negb
or
es
jge
rclb
scas
vpsrld
aaa
mov
sub
push
andl
in
jne
push
adc
in
lds
shlb
lcall
test
xor
fdivr
leave
jne
adc
jns
sub
mov
outsb
fcoms
mov
sbb
jg
sub
xor
dec
inc
push
scas
popf
mov
jo
loope
xchg
dec
in
lret
decl
cmpsl
movsb
or
sbb
mov
push
int3
xchg
push
jnp
imul
adc
fcomps
out
stc
jg
test
popa
test
push
aas
aad
push
jmp
or
roll
clc
mov
cmpsl
inc
scas
js
stc
push
into
cmpb
or
jb
jp
xor
fiadds
or
xchg
mov
movsb
mov
ret
mov
xor
mov
xchg
sbbl
js
mov
mov
mov
sbb
sti
push
sub
in
adc
jg
dec
mov
cmp
cli
sub
push
xchg
mov
ret
bound
xchg
mov
mov
xor
arpl
les
jmp
pop
xchg
add
mov
rcl
les
popa
lret
inc
mov
xchg
pop
adc
pusha
sbbb
test
add
orl
dec
cs
xor
iret
clc
insb
sbb
cmp
je
mov
jg
pushf
push
imul
popa
jns
imul
sbb
stos
jmp
pop
popf
movl
cs
clc
fbstp
xchg
xchg
mov
mov
or
stc
dec
fdivrs
push
test
cmp
pushf
dec
int3
xchg
mov
mov
xchg
cs
imul
pop
fcompl
and
fwait
rcrl
outsb
movsb
xor
test
imul
out
movsb
or
push
push
sub
loopne
scas
gs
stos
and
jecxz
cmp
in
mov
and
imul
inc
hlt
gs
cmpsb
and
sbb
out
jno
jbe
sbb
dec
leave
fsubl
stos
inc
lahf
rcrl
lods
cli
stos
cmp
shl
xor
mov
mov
cmpsb
mov
push
movsl
mov
aaa
add
movsb
fdivrl
int
pop
cmp
aad
pop
stc
jb
lea
mov
cwtl
subb
mov
imul
mov
es
and
mov
fbld
imulb
lahf
fnsave
dec
mov
fcomp
push
aad
sub
in
test
in
and
mov
loope
mov
add
repnz
or
lcall
or
cltd
jg
inc
xor
inc
add
inc
mov
outsb
stc
out
or
add
sti
push
push
mov
das
xchg
pshufw
jne
jmp
push
imul
popa
sub
stos
cmp
and
shll
int3
sysexit
add
or
mov
lahf
dec
and
orl
ljmp
adc
mov
sbb
scas
and
popa
imul
mov
in
sbb
lock
cld
mov
and
or
or
shl
jmp
mov
pop
mov
jl
out
cmp
jb
mov
sub
xor
cwtl
mov
stc
popf
cmpsl
mov
pop
push
int3
das
mov
mul
lods
mov
push
call
xchg
ds
outsl
int
pop
sbb
addr16
pop
sbb
sbb
nop
sbbb
push
cmp
xlat
sbb
jmp
push
pop
hlt
jmp
jp
pop
roll
push
or
and
mov
mov
mov
lea
mov
mov
mov
sub
add
mov
mov
xor
add
jne
mov
mov
xor
lea
mov
mov
xor
add
jne
jmp
mov
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
add
imul
mov
mov
mov
add
or
mov
mov
mov
add
xor
mov
jmp
pop
cmp
inc
xchg
test
and
sub
shlb
and
adc
in
push
addb
xchg
fsubrp
aad
or
ljmp
and
mov
shrb
sub
adc
push
lret
enter
sbb
sar
jae
cltd
aad
hlt
jnp
pop
pusha
mov
adc
lahf
js
in
add
and
test
jge
mov
popa
dec
push
add
subl
es
jno
test
or
fnsave
pop
das
mov
push
out
or
cmc
ds
ljmp
stc
cmp
insb
ret
push
test
mov
fistl
pop
hlt
add
insb
loope
std
jo
fcmovne
lcall
mov
rolb
pop
cmp
mov
mov
ss
shr
test
fnstenv
jl
outsb
adc
lods
gs
xchg
out
push
cmp
xchg
imulb
mov
push
cmp
cs
sahf
jo
sub
ficompl
cmc
inc
lods
fistl
ret
stos
lahf
pop
push
leave
shlb
cwtl
jns
in
pushf
add
jl
jmp
das
mov
outsl
adc
and
xlat
mov
mov
mov
dec
pop
aaa
movsb
orl
int3
lods
loop
mov
and
lods
jp
inc
lds
inc
orb
imul
jge
rclb
mov
out
insl
fsubs
cmp
es
iret
loop
insl
fidivrl
and
dec
mov
dec
xchg
jmp
xchg
pop
dec
popa
sub
mov
dec
xor
xchg
cmpl
cmpsb
inc
and
dec
add
movsl
mov
imul
mov
loop
nop
out
loope
pushf
add
sub
shll
or
or
cmpl
outsl
xor
sub
and
pop
add
adc
mov
push
test
fdivr
dec
jecxz
adc
and
adc
cld
dec
xchg
pop
js
mov
xchg
lods
sub
or
inc
pusha
xchg
in
push
aaa
dec
xor
and
outsb
add
xchg
aad
sbb
scas
or
wbinvd
mov
mov
add
mov
sbb
adc
push
lret
sarl
aas
jb
int3
sarb
popa
fsubl
std
inc
mulb
mov
lods
hlt
dec
cltd
pop
cmp
adc
cwtl
lods
lea
call
mov
stc
lret
mov
icebp
add
into
cltd
jl
mov
insl
mov
mov
test
in
xor
arpl
xchg
mov
or
mov
adc
lea
pushf
mov
adc
rclb
add
xchg
rorb
lahf
sbb
out
ja
or
jbe,pt
xchg
cli
repz
jge
xchg
push
pusha
aas
xor
dec
jl
push
mov
xor
xor
mov
nop
lret
jp
pop
imul
sub
inc
dec
pop
pop
fs
and
test
ror
sar
xor
xchg
mov
xor
cs
repnz
adcb
xlat
addl
enter
inc
jbe
and
mov
lret
mov
add
imul
mov
and
dec
or
mov
addr16
mov
shrl
jno
jecxz
inc
movsbl
lahf
jne
pop
jmp
adc
inc
scas
or
inc
or
sbb
lahf
scas
push
nop
mov
xchg
jbe
add
jmp
dec
aam
and
jl
std
movsl
inc
into
pop
push
dec
mov
in
mov
push
rcrb
testb
jp
sub
repz
inc
daa
sahf
jg
jae
pusha
sbb
inc
lods
std
sub
xor
cwtl
call
cwtl
dec
popf
imul
cld
mov
xchg
rclb
or
dec
int
rcll
ds
mov
arpl
xorb
fimuls
mov
fisttps
dec
mov
fs
ds
lea
pop
push
mov
dec
cmpsb
std
inc
sahf
out
scas
mov
movsb
mov
adc
es
outsb
sti
xlat
imul
int3
fldenv
test
jbe
xor
xchg
xchg
jmp
and
push
imul
jno
adc
pop
cmp
outsl
inc
mov
aad
push
xor
pop
cmp
in
push
mov
push
inc
mov
pop
out
and
pop
or
out
mov
push
imul
xchg
fistl
pop
sti
loope
mov
loop
jns
dec
jne
jp
adc
mov
sub
cmp
inc
cmp
inc
pop
dec
pop
loop
inc
test
popf
pop
imul
aad
cmc
pop
and
dec
bound
xchg
movsl
int
fwait
imul
jo
sub
add
jns
pop
adc
mov
in
ljmp
push
fwait
push
shlb
fs
popa
push
xlat
and
imul
lcall
sahf
adc
dec
testl
ret
inc
nop
mov
fneni(8087
mov
pop
dec
cwtl
push
inc
adc
cld
mov
vmovhps
xor
dec
mov
sahf
repnz
fadds
dec
mov
push
int3
xchg
or
add
cmp
lcall
add
jbe
mov
cld
push
xlat
arpl
scas
or
ja,pn
sarb
hlt
add
cld
mov
inc
in
divl
cmp
inc
cwtl
jno
mov
xlat
lret
dec
test
adc
jmp
pop
shll
aad
js
scas
addl
push
js
cmc
pusha
mov
cli
mov
push
lods
cld
subb
inc
aaa
pushf
adc
sub
insl
pusha
fs
popf
inc
xchg
popa
gs
cltd
inc
and
push
mov
sbb
jno
sbb
xor
and
xor
sbb
inc
adcb
push
jo
std
loopne
jno
or
bound
sti
inc
mov
cmp
ljmp
sub
in
subb
or
jb
jo
incb
cmp
dec
jl
push
aad
adc
scas
gs
js
adc
cmc
fistpl
mov
dec
scas
mov
mov
ret
xchg
push
mov
mov
subl
and
or
fidivrs
mov
push
js
imull
fs
sub
data16
mov
data16
mov
xor
xor
fbld
popl
push
fmul
int3
ja
jnp
and
pop
lds
jmp
sti
cs
arpl
sub
mov
xchg
in
adc
add
mov
data16
stos
sbb
fldcw
into
push
adcl
add
or
mov
cmpb
out
leave
or
outsb
ds
scas
dec
das
arpl
xchg
xor
gs
stos
add
mov
dec
lret
jmp
lret
fisubs
test
and
mov
fsubrl
repz
mov
mov
and
mov
fidivrs
mov
adc
jmp
stc
sbb
sbb
cs
dec
rcll
and
mov
inc
xor
stos
pop
push
call
cmp
ds
sub
adc
add
add
mov
adc
jbe
xchg
pop
mov
mov
int
and
lret
jl
mov
iret
frstor
out
inc
aas
dec
loopne
int3
pop
dec
inc
sub
aaa
push
xor
in
inc
ficompl
je
inc
shl
test
dec
pop
mov
pcmpeqd
inc
sbb
sub
sbb
sub
mov
pop
and
les
mov
inc
lret
stos
lret
sbb
lock
cmp
jle
bound
out
sahf
xor
pop
push
pop
clc
mov
nop
pusha
pop
mov
push
pushl
sub
outsb
or
loope
cli
sub
pop
sbb
orb
addr16
test
sub
dec
ret
fwait
out
jnp
mov
aad
ret
mov
jecxz
push
add
scas
add
inc
pop
push
dec
pop
lods
and
dec
inc
mov
jle
cmpsb
push
add
sub
dec
mov
inc
push
rcl
sub
lock
and
adc
xor
add
je
test
loope
dec
fnstsw
aam
sahf
mov
int
into
ja
cmp
rclb
cli
adc
fsubs
je
out
in
pushf
sbb
adc
sub
dec
std
addr16
clc
mov
in
jge
fdivrs
inc
out
andl
jno
add
movsl
push
mov
xchg
cmp
jbe
adc
mov
mov
cli
cmp
add
pop
lahf
cmp
shll
les
fidivl
out
xchg
and
adc
js
cltd
xchg
fwait
jne
fdiv
mov
cmp
js
cmc
inc
pop
ret
movsb
pop
lea
pop
stos
jne
into
push
xchg
rclb
add
test
hlt
mov
jl
lcall
ret
dec
cmpsl
adc
mov
fimuls
sub
sbb
call
jecxz
sahf
sbb
adc
imul
aam
pop
lock
mov
adc
jl
or
fwait
sub
jns
sbb
sub
jbe
sub
mov
mov
std
xor
shrb
pop
push
incl
stos
dec
sbb
jno
fmull
mov
lahf
jnp
xor
xor
xchg
or
xchg
in
int
xchg
push
fbstp
loopne
das
sbb
xor
push
sub
es
sar
cmpb
loope
test
fdivs
xchg
pop
clc
int
outsb
push
jno
xor
aad
inc
sbb
scas
push
dec
mov
mov
and
xchg
pop
jecxz
sub
sbb
sub
int3
xor
movsb
je
js
rol
mov
incl
inc
stos
cmp
divb
mov
ret
pop
sub
stos
or
adc
add
add
fdivrl
sbb
inc
clc
pop
push
sbb
xchg
add
aaa
sbb
aam
dec
iret
addr16
outsl
cmp
fldt
sbb
aam
push
fimuls
adc
stos
mov
cli
xchg
mov
js
test
pop
out
cmp
or
es
sub
pop
push
call
mov
mov
in
xor
push
imul
in
jae
jae
out
stos
hlt
mov
adc
into
call
loopne
jle
xchg
push
mov
jb
inc
sti
mov
sbb
jno
test
mov
mov
out
fldl
pushf
movsb
js
push
cld
andl
sbb
sbb
arpl
xchg
jecxz
or
push
dec
addr16
push
dec
mov
lret
push
jb
lahf
xchg
dec
in
cmp
push
lds
aaa
fidivs
mov
shll
test
push
dec
lods
mov
or
or
pop
hlt
daa
fxtract
add
dec
inc
stos
add
xor
dec
inc
fwait
pop
scas
xorb
xchg
imul
xchg
cmp
xchg
cmp
inc
xchg
sbb
mov
lahf
xor
jg,pn
data16
stos
adc
dec
push
stc
mov
in
adc
andnps
mov
ret
data16
scas
in
in
lret
divl
hlt
pop
dec
pop
loope
out
int
jmp
jmp
cs
enter
dec
aad
or
outsb
pop
sbb
lea
pop
cmpsb
pusha
nop
mov
or
enter
ja
pusha
sub
fisttps
sti
insl
fs
adc
add
cmp
mov
sbb
bound
dec
mov
inc
sub
repz
int
icebp
jae
jb
fs
mov
cmpsl
sub
push
xchg
inc
imul
mov
inc
fcoml
ret
call
sbb
dec
mov
scas
andl
jle
or
loopne
sub
push
stc
mov
pusha
fildll
ljmp
lahf
rcl
and
enter
adc
inc
ret
mov
rcrb
mov
or
sahf
push
dec
inc
mov
xor
imul
dec
xchg
jmp
sbb
adc
mov
sub
xchg
jecxz
outsl
and
jbe
rolb
xor
adcb
mov
jg
imul
enter
or
push
mov
pop
fwait
inc
push
sbb
fwait
add
outsl
jecxz
push
pop
pop
push
push
mov
and
jnp
lea
and
xchg
mov
icebp
mov
jle
test
mov
inc
jmp
out
nop
out
fdivrs
xlat
add
adc
dec
push
loopne
inc
pop
nop
push
or
mov
dec
push
or
adc
xchg
iret
enter
popa
lcall
or
testl
out
jb
dec
and
or
inc
jmp
cmp
sub
pushf
mov
loopne
lods
test
xchg
pushf
adc
insl
jo
cltd
icebp
sahf
call
or
add
shlb
dec
add
int
adc
ficompl
mov
sbb
xchg
or
pop
mov
jge
cli
clc
jbe
fbstp
dec
xchg
mov
pop
mov
sub
ss
pusha
stc
les
scas
lock
ljmp
data16
inc
in
sbb
lcall
ljmp
mov
dec
jo
mov
in
adc
cmc
fmull
jmp
cs
inc
or
pop
movsl
mov
sbb
dec
pop
cmpsb
xor
mov
jnp
lret
cmpl
lea
fbstp
xchg
stos
subl
pop
and
sub
jmp
or
mov
mov
lahf
repnz
and
test
push
notb
idivb
adc
lcall
jno
mov
jbe
addr16
push
stos
in
mov
loopne
add
or
loop
mov
sbb
inc
push
imul
fisubrl
pop
in
add
shll
insl
cli
jbe
sub
mov
popf
cmpsb
push
xchg
dec
insl
je
mov
or
inc
sub
pop
movsl
mov
pushf
pop
lcall
mov
outsl
call
jl
adc
inc
pop
jmp
pop
insl
das
mov
mov
cmp
cmpsl
outsl
add
fnstcw
fwait
mov
cmp
add
or
fldt
and
rcr
jle
into
jns
int3
pusha
icebp
cltd
addl
sub
lcall
cmpsb
lock
cmp
sub
movsl
fwait
ror
push
or
in
rol
mov
cmp
ja
dec
jecxz
vmovsldup
scas
jg
sbb
shll
insb
ja
mov
fstpl
mov
lret
cmp
sbb
and
mov
lods
popf
inc
shll
sub
pop
cwtl
pop
incb
adc
ret
or
cmpb
mov
mov
add
ja
dec
iret
cld
mov
adcl
cmp
xchg
insl
fidivs
dec
pop
xor
sub
sbb
push
mov
sub
int
or
leave
out
outsb
gs
sti
repnz
rcr
movl
jl
sbb
aaa
pop
push
rcrb
fisubs
sahf
test
ret
dec
fbld
xchg
js
cmp
imul
incl
push
cmp
mov
pop
push
adc
push
lret
inc
dec
popa
xchg
xor
push
sti
in
aam
dec
xor
sarb
xchg
jmp
xchg
xchg
xchg
enter
mov
jp
inc
clc
js
inc
decb
jae
lret
inc
add
pop
mov
jg
jmp
mov
cmpsb
imul
sbb
jb
loope
jnp
mov
xchg
jbe
add
inc
negl
cld
popf
dec
add
shl
fisubl
iret
jge
movsb
stos
icebp
cmpsb
push
mov
fisubs
leave
lods
jge
push
popf
pushf
inc
or
dec
andb
cmp
fisttpl
inc
pop
hlt
xchg
push
cmpsl
push
lea
mov
or
fisttpl
insb
mov
lds
dec
jle
shlb
test
mov
insl
loope
xchg
mov
push
add
addl
flds
xor
aas
out
mov
pop
rcl
cs
jno
cmc
out
rcrl
leave
test
push
jns
lea
leave
sub
pop
clc
sbb
call
fidivrl
ret
ljmp
lahf
sti
imul
movsl
add
mov
dec
xchg
sub
aas
movsb
adc
hlt
fs
leave
or
cli
jbe
mov
fmul
lods
inc
je
cmp
data16
loop
adc
inc
adc
dec
daa
ljmp
aad
jb
mov
ljmp
mov
xor
sbb
addb
loopne
lods
test
je
and
bound
ds
lds
lret
loope
movsl
out
mov
mov
shll
xchg
popa
shl
dec
push
rorl
adc
xadd
push
adc
pop
arpl
fwait
ds
std
xor
mov
clc
xchg
dec
roll
ss
enter
dec
sub
push
sub
ss
dec
fadds
movsb
push
mov
nop
sahf
popf
insl
and
jae
jl
adc
push
enter
incb
mov
incb
sub
les
sbb
stos
daa
repnz
add
add
sub
jle
aad
fs
loope
enter
and
sti
sub
or
mulb
cmp
or
jbe
fstl
fsubp
xchg
cltd
cmp
inc
imul
ret
mov
loop
into
xchg
and
movsb
mov
sub
mov
leave
push
cmp
repnz
cmp
stos
jecxz
neg
andb
jle
adc
pusha
fnstenv
shrb
push
mov
mov
jp
dec
add
emms
in
orb
xchg
gs
sub
es
sub
sub
inc
test
ss
adc
push
jnp
jo
adc
jnp
mov
sub
ret
push
lods
sbb
ret
aas
mov
xchg
inc
and
pop
ja
pusha
stc
adc
imul
movsb
jmp
adc
dec
mov
mov
push
test
mov
scas
mov
int3
les
sbb
jae
xor
daa
mov
pusha
nop
lret
add
test
mov
cli
dec
pop
push
stos
push
aam
mov
dec
cmc
sbb
mov
sub
ret
push
ja
jg
mov
ljmp
scas
sbb
xor
int3
int3
ja
outsb
popl
dec
fadd
repnz
xor
sbb
rorb
jnp
fwait
inc
fs
dec
test
fdivl
daa
xchg
cmc
out
ficomps
pusha
fadd
jae
notl
mov
dec
lret
jl
int3
arpl
ret
cli
scas
push
and
cli
inc
in
test
or
das
ret
push
push
push
aaa
dec
test
mov
inc
je
dec
mov
sub
jb
or
xor
lds
in
repz
xchg
adc
mov
xchg
cmpsl
inc
inc
lods
sub
adc
cltd
out
int
push
mov
mov
sahf
cmpl
cmc
mov
sbb
xchg
jecxz
jno
dec
stos
pop
lds
inc
sbb
and
aaa
sbb
gs
sub
popa
xchg
jno
jne
cmp
incl
adcl
inc
addr16
mov
cld
ret
mov
xor
stos
pop
out
push
xor
adc
popf
or
and
push
xor
out
push
mov
int
jg
mov
out
ficoms
sub
mulb
cmpsb
adc
mov
outsb
jg
cmp
or
cmp
push
or
and
or
sbb
mov
adc
adc
leave
dec
and
pop
mov
cmpsl
mov
lret
out
leave
ds
mov
rcrl
and
mov
enter
mov
fsubrs
jl
push
pop
int
lods
mov
outsl
sarl
es
sahf
adc
in
repz
gs
movsb
enter
xchg
out
or
xor
mov
push
lcall
adc
or
hlt
pop
cltd
sbb
test
cltd
imul
xor
or
pop
add
xchg
in
push
mov
outsb
sub
add
cmp
lods
aam
rorb
pop
pop
fldcw
cmpsl
mov
push
push
std
decb
dec
fsubrl
adc
xor
test
movsb
push
fnstenv
jb
je
stc
out
xchg
pop
xchg
cwtl
leave
in
movsl
push
mov
jl
aas
jle
ss
fisttpl
xchg
out
in
scas
test
and
mov
mov
outsb
sub
xor
lds
mov
ljmp
fidivl
sbb
fcompl
icebp
aad
ja
dec
or
out
mov
inc
push
mov
lret
bound
test
insl
pushf
imul
mov
mov
adc
cmp
xor
pop
sti
cmpsb
pop
fwait
imull
std
sbb
cmp
mov
jge
popf
inc
loop
and
icebp
nop
mov
lds
test
or
lods
mov
lock
jns
inc
mov
sbb
cli
nop
outsb
fsubrl
fbld
ss
or
inc
mov
push
and
shl
mov
jnp
popf
lret
js
aas
dec
xor
mov
rcll
mov
mov
dec
std
push
scas
and
pop
imul
and
push
aaa
sbb
shrl
xchg
inc
mov
jg
std
or
cmp
mov
xchg
sbb
aas
lods
stos
mov
sub
pop
popf
fcmovb
std
aas
mov
notl
xchg
cs
push
in
inc
pop
jne
and
std
sbb
scas
add
dec
arpl
sti
out
jge
xchg
repz
call
mov
movsl
fbld
call
inc
jg
rol
leave
hlt
arpl
je
sbb
mov
lcall
mov
aas
aam
hlt
sub
jo
xchg
sti
cs
leave
dec
jo
dec
out
and
adcb
add
pop
mov
aas
enter
rolb
xor
jo
sub
into
mov
adcb
dec
lcall
pop
jo
data16
jns,pt
movsl
mov
movsb
add
mov
jmp
loope
xlat
mov
pop
daa
and
xchg
pop
test
cmpsl
push
jne,pn
ss
dec
push
or
add
cld
adc
jge
data16
cmp
repz
jle
dec
incl
cmpl
pcmpeqb
mov
cmp
mov
mov
push
mov
fisubrl
sbb
jbe
dec
xor
popf
push
mov
fwait
xchg
fidivs
cmpsl
xchg
ljmp
mov
cmpl
mov
inc
adc
pusha
insl
movsb
cmc
mov
cmp
push
xchg
std
lret
lcall
add
enter
or
mov
mov
cmp
cmp
ret
pop
hlt
pop
mov
xlat
pop
ds
mov
xchg
sub
or
out
cmp
jmp
inc
sarb
test
jmp
cmpsb
dec
outsb
pop
and
push
lds
popf
xchg
sub
or
leave
aaa
cmpsb
xor
outsl
imul
insl
jmp
and
faddp
mov
int
adc
jae
sbb
imul
pop
or
push
and
test
stos
jo
pop
xor
xchg
xchg
pop
mov
mov
lods
adcl
lock
mov
or
xor
mov
add
insl
aas
adc
push
insl
into
js
cmp
push
add
std
adcl
add
jns
mov
dec
imul
loop
pop
and
cld
and
inc
in
jb
push
scas
out
and
xor
dec
in
idivl
mov
pop
cmp
into
das
mov
lds
dec
arpl
cmp
xor
sbb
enter
or
fwait
jecxz
xchg
or
stos
and
xor
sbb
inc
ficompl
movsb
add
ret
mov
sbb
xor
sarl
stos
dec
mov
cli
push
or
xlat
xor
mov
loope
subb
scas
stc
xchg
pop
js
aas
cmpsl
jl
push
sahf
adc
mov
cmc
test
sub
cs
into
mov
jnp
int
jne
push
pop
gs
dec
add
add
cli
adcb
dec
dec
xchg
push
sbb
xor
sub
xor
dec
mov
and
subl
pop
shrb
fcmovu
mov
nop
or
data16
test
xchg
popf
into
dec
mov
lds
jp
sti
cmc
push
leave
push
and
cmp
out
jo
xor
in
shl
sahf
mov
xchg
xor
inc
pop
or
xor
loope
mov
fbld
or
int3
xor
movsb
pusha
in
ficoml
and
lahf
mov
pushf
daa
adc
sbb
xor
jb
jno
sub
fbld
out
mov
sbb
lock
inc
out
dec
js
repnz
loop
xor
sbb
add
fstl
movl
in
push
je
xlat
jae
loop
stos
xchg
ret
pop
bound
sbb
push
push
stos
dec
in
xlat
jp
cmp
hlt
xchg
xchg
iret
pop
fisttps
int3
rolb
jp
mov
fdiv
movl
cmpsb
add
iret
in
sub
leave
repz
jns
inc
cmpsl
jmp
push
xor
jo
pop
push
pop
dec
popf
cmc
and
sub
and
add
push
mov
fwait
scas
test
or
push
das
push
push
cld
ja
mov
imul
in
outsb
lds
and
and
add
andl
pop
inc
lret
cltd
mov
cli
xor
lods
cwtl
xchg
cmpsb
movl
sti
inc
ja
xor
mov
add
fnstsw
jmp
mov
add
add
cwtl
aad
pop
jb
aad
std
mov
push
pop
xlat
push
imul
ds
xchg
push
cltd
sbb
jecxz
test
dec
es
movsl
jge
adc
scas
fiaddl
jle
inc
push
and
gs
fldl
cmpsl
push
sbb
lcall
outsl
es
or
xor
movsb
cmp
popf
jg
popw
loope
repnz
xchg
cmc
int3
jge
sub
inc
cmpsl
push
or
jae
shrl
mov
pop
jae
mov
dec
daa
insb
mov
mov
paddsb
dec
xchg
dec
lods
push
mov
mov
add
mov
movups
out
ret
add
stos
in
lods
stos
int
mov
icebp
inc
cltd
push
mov
and
push
gs
mov
lcall
outsb
pop
out
xor
stos
pop
sub
jmp
mov
inc
aaa
xchg
add
repnz
lea
outsb
mov
mov
push
orb
or
cmpb
push
jle
shl
jae
int
bound
jle
jecxz
imul
inc
sbb
sub
jge
pop
pop
clc
sub
repnz
and
push
inc
xchg
inc
iret
mov
rorb
sbb
insb
fwait
pop
imul
fs
pushl
xchg
and
sahf
pop
in
sub
aas
std
mov
sbb
and
jp
and
cltd
cmp
imul
divl
mov
push
cmpsl
out
mov
std
loopne
push
insl
mov
cld
jl
mov
mov
pop
in
sub
cltd
out
sti
lea
mov
jp
adc
testl
mov
es
sarl
xchg
call
lds
inc
add
stc
and
mov
shlb
adc
adc
orb
ja
push
test
sahf
cmp
inc
sti
push
nop
sub
shll
gs
dec
stos
and
mov
ds
push
rcrb
stc
xchg
push
push
mov
icebp
mov
mov
stc
xor
adc
inc
inc
call
dec
xor
pop
xor
push
mov
xchg
ss
xor
xchg
out
dec
incl
push
push
lock
inc
andl
pop
test
rcll
jae
xchg
sub
mov
mov
and
std
daa
arpl
pop
stos
mov
sub
sub
cltd
pop
or
push
loope
mov
mov
adc
xchg
jmp
push
nop
pop
mov
jp
popf
or
dec
std
push
sbb
jo
jp
fcomip
gs
lret
lahf
testl
sub
in
dec
int3
add
jnp
push
mov
mov
cmp
add
mov
inc
xchg
sbb
inc
jle
or
jne
cmpsl
ja
movsl
mov
push
ljmp
push
fnstsw
mov
mov
push
shrb
inc
add
ss
mov
jecxz
pop
cmpsb
and
ljmp
aam
mov
std
push
dec
movsbl
inc
jb
mov
popa
sti
pop
ret
fwait
rcrl
mov
and
inc
mov
loope
sub
mov
loopne
lea
stos
push
mov
push
and
mov
push
inc
mov
sub
addr16
outsl
or
shl
push
fxch
ret
scas
pop
and
xchg
stos
mov
sub
popf
and
add
shll
xor
pop
leave
sub
mov
mov
out
mov
or
add
and
loopne
adc
xchg
addl
pop
cmp
cmpsl
lcall
or
jecxz
pop
add
and
sub
cmp
adcb
add
ds
lahf
jno
xor
xor
inc
mov
fistpll
mov
or
inc
jo
push
daa
cwtl
gs
adc
push
sub
push
test
sbb
test
dec
test
scas
outsl
cmpsb
fcmovnbe
jno
push
cmp
xchg
inc
je
add
xchg
adc
mov
jle
cs
test
or
out
int
out
aaa
or
and
push
cwtl
repnz
movl
inc
jbe
or
imul
arpl
push
xchg
enter
sbb
add
xor
movsb
adc
fsubl
mov
in
and
rcll
inc
jno
imul
jno
pop
adcl
pop
insl
and
dec
xchg
lret
pop
in
pusha
jmp
mov
ljmp
fsts
xchg
sub
and
sbb
mov
lock
xchg
jecxz
add
lds
in
enter
mov
mov
add
and
mov
mov
mov
lea
mov
mov
mov
sub
add
mov
mov
xor
add
jne
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
add
imul
mov
mov
mov
add
or
mov
mov
mov
add
xor
mov
mov
mov
add
and
mov
mov
mov
lea
mov
mov
mov
sub
add
mov
mov
xor
add
jne
mov
xor
mov
add
mov
pop
pop
pop
leave
ret
push
mov
sub
push
movl
cmpl
je
cmpl
jle
jmp
push
push
push
push
call
mov
dec
mov
jmp
push
subl
mov
xor
xor
add
mov
mov
and
mov
mov
mov
xor
mov
movl
cmpl
je
cmpl
ja
jmp
push
call
xor
xor
dec
mov
jmp
movl
andl
jmp
xor
add
inc
mov
cmpl
jae
cmpl
jl
jmp
push
call
cmpl
jne
mov
inc
mov
jmp
movl
or
mov
andl
jmp
xor
or
inc
mov
cmpl
jae
cmpl
jb
jmp
push
push
pushl
push
push
pushl
call
jmp
mov
movl
cmpl
je
cmpl
jle
jmp
push
push
pushl
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
sub
and
jmp
xchg
fdiv
test
xchg
push
out
ss
incl
sbbl
cmpb
pop
bound
out
add
iret
outsb
inc
cmp
push
jmp
test
mov
adc
adc
cmp
mov
orl
inc
testl
out
mov
push
out
mov
dec
rcrb
mov
roll
jl
bound
mov
mov
inc
push
mov
jge
fisubrl
cmp
sbb
jp
xchg
inc
cltd
mov
rcll
or
sbb
fdivrs
rcrb
movsl
lock
lea
mov
or
inc
jecxz
stos
movsl
push
and
jno
lods
jno
hlt
out
ds
inc
scas
es
cmp
pop
fidivrl
pop
lds
daa
mov
movsl
add
in
repnz
jg
cld
pushf
add
add
and
shr
scas
sbb
push
sbb
fadds
fs
jo
andl
cld
sub
call
arpl
mov
and
arpl
xor
cmp
xchg
dec
and
mov
mov
sbb
repz
xchg
xorb
sub
fldl
pushf
cmp
fistps
lods
insl
push
ss
mov
jae
pop
outsl
lds
xchg
mov
popf
repnz
test
inc
lcall
into
and
mov
mov
out
push
and
mov
mov
xchg
mov
repz
bound
ret
dec
scas
jl
dec
sbb
movsl
fnstcw
sti
daa
jle
jb
mov
xchg
cmp
or
popf
pop
add
pop
mov
cmp
dec
loopne
sub
fcmovnbe
pop
rcll
lahf
cmp
imul
add
cmp
fcoml
scas
push
xchg
mov
flds
mov
fiaddl
mov
pop
clc
xor
push
and
cli
lret
enter
and
aaa
sbb
ss
inc
add
nop
pop
cmpsl
mov
frndint
clc
cli
push
mov
insl
jae
out
loop
lret
leave
test
xchg
dec
add
mov
xor
outsb
adc
pop
pop
cmpsl
inc
add
imul
or
sbb
fwait
lock
idivl
sub
call
and
loop
xorb
sbb
xchg
loopne
inc
fs
xchg
jno
gs
jl
in
lods
pushf
cmp
int3
mov
cmp
loop
mov
xchg
dec
addb
fldl2e
dec
add
in
aam
mov
sbb
out
test
out
stos
mov
inc
xor
clc
mov
ret
lea
lahf
sub
mov
div
xchg
xchg
std
mov
loopne
ret
xchg
adc
movsb
ja
xchg
pop
push
loop
adc
dec
sub
repnz
mov
inc
filds
in
mov
pop
add
jp
xchg
aaa
and
or
gs
cltd
test
mov
push
lret
add
in
cmp
andl
cli
add
sbbl
incl
mov
loop
cwtl
push
scas
in
les
inc
and
int
push
aad
notl
xchg
rorb
enter
and
sub
sti
roll
aad
xchg
in
push
inc
mov
insb
mov
rsm
shlb
mov
in
mov
repz
xor
int
xchg
inc
mov
xor
stos
xchg
inc
mov
pop
lcall
addr16
sub
fldenv
mov
loopne
sbb
sub
outsl
in
inc
adc
jbe
fldl
cmpsb
lahf
push
iret
lret
test
je
lcall
mov
gs
mov
sbb
sbb
mov
dec
bound
les
aad
sub
push
mov
sub
mov
ljmp
sbb
mov
pop
out
sbb
sahf
testb
lcall
xor
cwtl
xorps
insl
loopne
mov
ja
mov
in
shlb
jb
testb
cmp
insb
inc
jg
outsl
stos
loope
sarb
rsm
or
lock
xor
mov
hlt
xlat
pushf
pushf
js
push
jecxz
sbb
mov
cltd
cmp
cmp
cld
repnz
lret
ljmp
test
mov
sub
or
into
cmp
mov
mov
test
jb
add
xchg
test
out
inc
lret
lret
movsb
les
icebp
push
fisttpl
pop
xor
adc
sbb
enter
dec
dec
pop
dec
popa
call
fnstcw
add
imul
mov
jno
roll
xor
into
push
or
mov
fstl
mov
out
and
shl
jno
push
sbb
inc
and
daa
dec
les
lds
jne
loope
mov
fisttps
roll
pop
jb
add
add
sbb
cmp
icebp
mov
ds
fisubrl
cmp
mov
lock
mov
fidivs
aas
adc
push
mov
mov
pop
cmp
or
or
xchg
dec
out
sti
rorb
inc
fimull
push
cmc
inc
mov
and
fistpll
xchg
stos
push
jg
lret
sub
fsubr
adc
addr16
or
aam
inc
add
sbb
or
pop
sbb
jns
shll
xor
inc
imul
lret
mov
popf
xlat
sbb
sbbb
cmp
das
jmp
fs
loopne
ret
jp
popa
in
or
mov
adc
cmp
sub
sbb
push
ss
lock
push
push
jno
pop
rorb
or
xor
jo
insb
mov
jmp
jg
sbb
push
push
sub
js
in
cld
mov
aad
fs
xchg
cld
dec
adc
sarl
stos
dec
inc
mov
fsubl
loopne
loope
inc
in
jecxz
dec
data16
insb
test
jne,pt
push
arpl
mov
daa
pop
les
or
out
or
loopne
inc
fsubrs
and
mov
add
decb
jns
inc
nop
cmp
mov
inc
mov
jl
jge
adc
shlb
mov
inc
cltd
cwtl
cmp
sbb
add
add
inc
cli
hlt
dec
xchg
mov
loopne
shlb
or
sbb
add
fldl
daa
and
nop
sub
mov
imul
push
cmp
adc
loop
stc
xchg
mov
fadds
fisttpl
clc
adc
bound
xor
lock
loope
sub
test
xchg
xchg
xor
push
adc
cmc
lds
repnz
xor
jnp
jns
xchg
mov
andb
cmp
cltd
aaa
les
pop
test
cltd
mov
test
mov
lds
mov
fnsave
cmp
mov
fstl
nop
and
add
and
rorl
mov
cmp
lret
sub
lea
test
push
or
insl
sbb
popf
out
cmp
push
adc
xchg
adc
jmp
cmp
insb
fcoml
stc
pop
mov
test
dec
xor
xchg
leave
cli
ja
pop
mov
int3
jne
jns,pt
lods
pushf
sub
jle
xlat
negb
inc
pop
mov
cmpsb
add
sub
je
clc
nop
or
ss
lods
cmp
xor
jne
imul
mov
dec
and
fcmovnu
jl,pt
imulb
addr16
lret
hlt
decl
enterw
sbb
dec
sub
fnstcw
push
cmp
test
mov
mov
push
sub
pop
or
cli
sub
or
insb
sub
in
test
pop
push
sub
xor
mov
popa
sub
enter
movsb
test
inc
xchg
add
sti
outsb
cltd
aaa
jle
jnp
daa
mov
mov
adc
inc
adc
mov
ror
icebp
xor
test
aad
add
in
popf
xor
test
loopne
mov
je
mov
mov
add
cwtl
or
test
out
jns
shll
out
adc
lret
test
push
daa
and
in
mov
mov
sub
lods
push
xor
cmp
enter
arpl
and
stc
lahf
pushf
mov
mov
xchg
adc
rorb
mov
clc
in
sbb
aam
fwait
leave
pop
in
pop
pop
pop
inc
daa
pop
popf
imul
jno
fimuls
lret
cli
popf
pop
sbb
or
out
push
mov
popa
insb
mov
xchg
int3
notb
push
mov
cli
sub
gs
loopne
xchg
xor
sub
lds
in
mov
pop
push
sbb
lret
lock
xor
aam
jae
ret
and
leave
or
push
je
adc
push
clc
or
retw
std
test
scas
insl
stc
mov
out
mov
mov
loope
fstpl
je
adc
pop
test
sti
push
movsl
cs
shl
lcall
aad
in
bound
mov
shrl
scas
insl
push
or
xchg
pop
aas
sbb
shrl
in
cmp
in
int
mov
hlt
scas
jmp
data16
out
mov
or
popa
mov
jo
xor
push
jbe
out
shrb
gs
cmp
filds
jbe
adc
pop
jmp
dec
insb
cmp
ret
movl
jno
add
rcl
mov
aas
mov
subl
xchg
cmpsl
negb
dec
fdivr
and
cs
daa
and
jge
shlb
mov
loop
push
cs
stos
lods
add
subl
pop
xor
subl
stos
data16
push
pop
stc
int
in
xchg
inc
cmp
clc
out
add
cli
mov
dec
sarb
inc
mov
jmp
rcll
adc
mov
test
lock
in
iret
outsb
dec
mov
icebp
and
negb
cld
popa
mov
or
mov
xchg
dec
inc
mov
sub
mov
and
xor
pusha
dec
or
xchg
lret
cmpsb
push
add
shrl
ss
imul
daa
jo
aad
loopne
dec
push
iret
inc
out
mov
test
ret
imul
fstpt
xchg
int3
lahf
dec
add
ret
dec
pop
push
pop
cmp
iret
xchg
sub
lahf
and
cs
dec
adc
jae
fcomps
mov
fs
ljmp
popf
mov
jbe
sub
xchg
xor
or
cmp
daa
jo
sub
test
sahf
lcall
lret
clc
movzwl
fnstenv
shrl
pop
sub
push
dec
jno
mov
jo
mov
imul
or
pop
xchg
pop
pop
cld
jbe
sbb
jp
movsl
push
jo
dec
pop
lock
daa
push
popa
sub
int
fwait
and
dec
and
xchg
jecxz
fwait
dec
ret
mov
add
cltd
pop
lea
mov
or
sbb
aam
mov
xchg
mov
imul
xor
cmpsb
cwtl
movsb
addr16
ja
in
sub
push
incb
xor
add
add
mov
shl
dec
shl
dec
fwait
dec
sbb
pop
sub
icebp
pushf
jns
dec
stc
add
jg
sbb
mov
push
or
mov
jbe
jno
jg
cmp
jecxz
pop
scas
push
lds
in
pop
xchg
xor
sbb
scas
test
xchg
out
add
insl
imul
aad
add
or
xchg
adc
out
or
jb
dec
inc
xchg
movsl
std
push
lcall
add
push
dec
or
mov
push
mov
fidivrl
xchg
in
push
mov
dec
dec
idivb
imul
mov
pop
and
inc
or
and
int3
dec
imul
call
xor
cmp
dec
int
xchg
aam
ljmp
repnz
frstor
int3
or
mov
mov
nop
fldt
cmpsb
hlt
call
dec
hlt
adc
mov
jne
scas
inc
test
lret
popf
inc
dec
push
jbe
insl
sbb
shll
lahf
adc
popf
and
push
mov
add
sbb
out
cmc
fptan
popa
push
call
ficomps
sub
and
lods
dec
nop
mov
inc
or
gs
jo
in
mov
aam
lds
dec
shl
bound
rcrb
or
inc
pop
or
fimull
push
inc
dec
inc
fwait
lea
scas
dec
jp
mov
inc
icebp
xchg
dec
inc
mov
cmp
pop
frstor
jo
inc
loope
mov
adc
int3
mov
dec
sub
sbb
mov
pop
mov
jge
movsl
stc
outsb
lods
or
cmpl
repz
into
addb
fcoms
out
mov
mov
lahf
cltd
push
xor
dec
lea
in
pop
das
fistps
out
or
adc
adc
aad
lock
popf
and
and
packuswb
mov
fst
lahf
mov
arpl
pop
pop
lods
jne
or
outsb
or
push
xor
cld
aas
xor
jnp
out
cwtl
adc
push
mov
fs
ficompl
mov
push
les
add
aad
sahf
lea
pop
mov
lods
sub
lea
pshufw
int3
and
cmp
xchg
sub
inc
mov
popf
cmp
pop
int
call
xor
sbb
pop
mov
xor
dec
fsubrl
lods
lock
mov
hlt
push
lds
dec
dec
lret
pushf
push
pusha
or
pop
adc
clc
pop
adc
lret
sti
jg
mov
xor
pop
or
adc
sbb
xlat
in
pop
dec
and
jge
mov
mov
pushf
scas
push
test
push
mov
sbb
scas
push
jle
test
dec
shll
cmpsl
out
adc
jo
add
jae
or
jmp
mov
mov
hlt
pop
dec
inc
leave
in
in
add
cwtl
or
cmpsb
pop
sbb
test
fwait
loope
pusha
fnstsw
in
ret
mov
jbe
out
mov
mov
ja
hlt
fmuls
mov
repnz
repz
test
test
or
push
imul
xchg
mov
jg
cli
mov
and
and
adc
mov
or
std
sbbb
and
inc
xchg
adc
adcl
push
jp
sarb
dec
jae
push
add
push
aaa
fimull
pop
pop
mov
pop
xor
lret
sbb
imul
lret
fadds
inc
jno
add
test
pushf
iret
bound
scas
jmp
inc
scas
shll
jnp
adc
jo
lret
gs
ss
test
mov
sbbl
stos
dec
rcrl
int3
and
lahf
imul
jg
popf
xor
mov
sahf
mov
les
and
lock
mov
dec
adc
jb
ss
popa
push
cmp
insb
enter
xchg
ljmp
push
mov
call
and
push
shll
jle
pop
repnz
dec
push
jmp
movsb
dec
addr16
aaa
inc
test
mov
mov
mov
dec
jl
sub
into
mov
add
cmpb
test
loop
or
lds
and
mov
test
scas
xchg
ret
fcoml
mov
inc
jbe
sarl
stos
fisttpl
mov
lret
pop
ljmp
fmul
adc
movsl
adc
in
xor
mov
int
inc
jno
sub
aad
mov
xor
add
ds
insl
dec
aam
mov
insb
sarb
iret
add
ret
cmp
xlat
dec
loop
mov
pop
lods
push
test
mov
inc
insl
sub
flds
movsb
pop
in
sbb
out
enter
add
jbe
loop
mov
int
add
in
cmp
sub
aas
or
movsb
cmc
mov
or
out
jg
stos
adc
push
js
into
dec
jb
pop
pusha
out
mov
adc
cmovns
add
add
lahf
cltd
les
jge
cmpsl
or
mov
dec
repz
pop
adc
jb
and
sbb
ljmp
inc
mov
orl
cltd
leave
cmp
movb
lret
stos
mov
pop
aam
xchg
push
xorl
in
fscale
fisubrs
xchg
in
in
pusha
jecxz
pop
frstor
shrd
gs
adc
lods
js
jecxz
insb
jge
in
cwtl
xchg
leave
cmp
adc
repnz
and
add
cs
dec
leave
jp
inc
or
lret
pop
push
cld
lods
inc
shrl
shlb
adc
lock
or
jae
popa
pop
sbb
aad
xor
scas
lds
xor
loope
sbb
push
arpl
test
and
lock
ljmp
jl
push
add
adc
rcl
popa
leave
clc
dec
ljmp
dec
mov
jno
cwtl
mov
sub
pop
test
clc
xlat
out
push
and
cli
or
clc
scas
mov
add
movsl
push
jns
lods
arpl
popa
jne
and
adc
cli
hlt
mov
mov
pop
neg
mov
imul
repnz
cmc
cmp
mov
clc
pop
dec
scas
jecxz
sbb
jbe
fildl
les
jge
loop
push
xchg
dec
adc
cmc
in
int3
mov
jns
pop
scas
das
stos
cmpsb
addr16
ds
out
or
outsb
inc
arpl
jbe
jp
test
adc
sbbl
inc
mov
or
push
sti
or
arpl
lock
clc
jnp
xor
cmpsl
jecxz
mov
es
pop
arpl
adc
icebp
xor
fs
aam
test
xor
jp,pt
fcmovbe
insb
cmp
xchg
adc
imul
out
fcmovbe
lods
sub
adc
stos
je
shrb
rcrl
dec
mov
aaa
scas
js
xchg
shr
push
push
je
cs
lret
or
fyl2x
testl
mov
lahf
lahf
scas
cwtl
jg
lret
jg
mov
cmc
and
and
mov
fcoml
cltd
xchg
paddq
mov
adc
ja
icebp
mov
pop
andl
pop
stos
repz
xchg
fisttpll
jne
xchg
arpl
stos
lods
jl
xor
push
xchg
adc
movsb
xchg
popf
mov
int3
movsb
roll
xchg
nop
loope
cmp
fnstsw
outsb
aaa
sbb
fbstp
mov
fbld
pop
cmp
jae
test
rcrb
and
pop
cmc
jmp
mov
cs
push
rcrb
fst
adc
mov
cli
gs
or
mov
aas
jae
jne
sub
pop
dec
shl
push
subl
inc
fadds
and
or
orl
push
scas
fbstp
daa
add
shll
imul
add
adc
lsl
sbbb
enter
xchg
cmp
mov
sub
or
mov
xor
mov
test
loopne
out
lret
inc
pusha
dec
inc
and
lahf
pop
pop
mov
mov
clc
and
test
jbe
xor
pop
pop
lret
lds
cmc
xchg
pop
js
push
jge
imul
jbe
push
fld
data16
loope
push
inc
jbe
scas
add
out
or
int
shl
inc
jno
shrb
cltd
imul
idivb
ds
mov
lods
imulb
loop
scas
testb
mov
in
test
push
or
jae
fucomi
imul
push
loopne
fnstsw
std
daa
shlb
fs
fstpl
insl
sub
insl
jp
adc
call
and
inc
outsl
mov
popf
cmp
push
xchg
inc
and
andl
arpl
lret
ret
add
xchg
arpl
clc
in
sub
jo
loope
xor
outsl
dec
lcall
sub
add
mov
fimull
mov
add
bnd
sbb
popa
sub
push
jge
jecxz
wbinvd
imul
jp
sub
mov
popa
in
mov
push
fcmovbe
sbb
xor
xchg
sbb
xchg
sbb
mov
mov
sbb
push
cwtl
mulb
ret
mov
jmp
mov
push
pop
ret
imul
stos
fimull
mov
pop
pop
xor
inc
sbbl
dec
rclb
mov
mov
or
jne
outsl
push
and
mov
in
ds
pop
movsl
mov
inc
adcb
and
stos
gs
out
cmpsb
jbe
pop
xor
testl
dec
xchg
pop
adc
gs
cmp
push
xor
and
jb
outsl
pop
call
and
xchg
jbe
jae
mov
loope
out
cld
lcall
xchg
ret
add
loopne
in
fisttpll
cmp
dec
sub
movsb
fldcw
cmpsl
push
movsb
sbb
fsubr
mov
ja
xchg
mov
pop
cmpl
or
test
inc
bound
adc
pusha
out
arpl
mov
lods
imul
mov
push
xchg
add
or
jmp
gs
xor
push
clc
dec
arpl
jnp
pop
and
ds
mov
mov
or
xchg
xchg
xchg
iret
mov
and
mov
loopne
sahf
push
pop
mov
inc
out
je
imul
jb
stos
inc
loop
test
xchg
enter
lret
imul
repz
and
in
mov
loopne
cmp
xlat
jecxz
inc
mov
sub
cmc
or
divl
cmp
adc
leave
mov
je
push
adc
pop
movsb
xor
in
iret
pop
test
inc
push
mov
xchg
hlt
xor
cs
fnstsw
je
mov
adcl
mov
pop
enter
cmp
cli
or
dec
je
movsl
mov
pop
and
vcvtsd2si
cwtl
out
testb
ret
pop
mov
xor
dec
fs
mov
ja
adc
xchg
lret
cli
movsl
daa
data16
iret
jmp
mov
aad
jl
xlat
fwait
mov
cmp
sbb
jbe
into
cltd
repnz
inc
xchg
subb
dec
shrb
add
dec
xor
lahf
fisubrs
ljmp
shr
or
aad
mov
push
cmc
xchg
add
push
loope
ds
adc
jnp
mov
cld
cmp
mov
cmp
rorb
add
adc
xchg
cli
repz
movsl
pushf
lods
fsubrs
push
cmpsb
lock
jae
xor
in
xor
add
jae
xchg
jbe
dec
and
jnp
rorb
out
mov
sub
out
push
xchg
clc
ret
pop
imul
push
jl
sub
fdiv
add
fwait
mov
cmp
adc
cmp
add
scas
mov
inc
push
push
ljmp
jno
lret
jge
shrl
cli
test
dec
or
dec
add
inc
cltd
cmpb
leave
cwtl
xchg
pop
push
test
scas
ret
pop
xor
jecxz
mov
mov
mov
test
rol
test
mov
fnstsw
mov
shlb
enter
ret
idivl
inc
jecxz
sub
add
stc
imul
ret
int
leave
cmpsl
mov
jae
bound
push
xchg
dec
lds
xchg
iret
fmuls
iret
cltd
xor
notl
inc
inc
dec
dec
add
xor
lods
push
icebp
mov
cwtl
adc
adc
pop
xchg
loopne
lods
stos
or
testl
hlt
aam
fldenv
scas
das
mov
popa
fnstsw
mov
shll
cmpsb
je
and
and
lahf
mov
dec
pushw
xlat
jae
enter
and
sbb
sub
inc
mov
mov
test
sbb
or
sbb
mov
xchg
lods
and
sub
cmp
xchg
ss
adc
push
push
nop
adc
lcall
xor
bound
jnp
and
pop
lock
xchg
ficomps
push
cmp
cmp
push
shlb
ret
iret
pop
call
cwtl
adc
popa
or
push
leave
jno
add
shrl
jne
test
test
sbbl
outsl
int3
aam
in
xrelease
cmp
mov
ret
xchg
mov
clc
sbb
add
mov
push
cltd
and
nop
negb
out
sub
add
cld
and
push
xchg
jmp
mov
ss
out
out
cmc
mov
fcompl
mov
sub
mov
sbb
pop
repz
mov
in
mov
cmp
pop
test
mov
repnz
movb
lods
jge
and
sbb
mov
inc
scas
xchg
pop
loopne
shll
scas
mov
push
rcrl
cli
outsl
bound
adc
fstpt
inc
pusha
insb
aas
pop
out
pushf
mov
mov
add
mov
adc
xor
loop
cmc
in
mov
inc
push
and
xchg
jno
lock
in
cmpsl
js
or
jle
jge
inc
mov
aad
gs
sbb
mov
or
pop
sarl
xor
scas
shrl
lret
mov
test
add
push
xor
inc
ret
push
js
jne
pop
cmp
push
in
dec
inc
xchg
lods
inc
movsl
int3
jl
out
mov
in
fld1
push
int3
dec
cmpsb
cmp
movsl
shrb
and
repz
out
negl
add
cmc
inc
pop
cmp
xorl
lods
push
in
lods
and
xchg
data16
mov
out
push
sbb
repnz
adc
pop
dec
fidivrs
mov
dec
mov
fisubrs
jmp
xchg
int3
ds
and
mov
jns
sahf
cmp
push
inc
testb
sbb
pop
or
int3
sbb
lahf
pop
xor
cs
sbb
adc
mov
push
sbbb
pop
mov
insb
ret
mov
imul
mov
sub
hlt
divb
mov
dec
mov
sti
jp
sub
mov
push
sub
cmp
xchg
pop
dec
mov
in
lods
rorb
aad
xor
jge
mov
cmp
adc
and
mov
or
in
and
dec
or
xor
loope
sysexit
cmpsb
es
into
scas
sbb
jecxz
loopne
push
dec
pop
inc
mov
xor
cmp
adc
add
sbb
mov
into
sub
loopne
adc
outsl
pop
xchg
movsl
icebp
mov
push
ljmp
es
add
push
jb
lods
xchg
push
pop
rcll
cmpsb
movl
mov
dec
jo
xorb
cmp
enter
add
mov
dec
mov
ss
ss
xor
adc
push
mov
lods
jnp
sahf
xlat
mov
dec
scas
push
inc
mov
cmp
in
loope
xchg
dec
lcall
addr16
pusha
enter
xchg
repnz
push
rcr
rorl
sub
dec
sahf
cmp
imul
dec
std
mov
cmp
push
dec
or
and
bound
mov
xchg
xlat
test
or
push
fdivs
xor
stos
inc
xchg
fwait
sahf
test
mov
jne
sub
xchg
insb
lock
scas
jo
sbb
pop
lret
jge
adc
push
mov
int
clc
mov
dec
iret
and
cmp
fs
mov
ljmp
pop
mov
inc
aam
xor
sarb
push
mov
adc
mov
jle
sbb
inc
and
or
test
inc
test
nop
inc
pusha
repz
sbb
cmpsl
pop
jg
pop
mov
enter
cmp
mov
test
add
lahf
pusha
mov
mov
cmp
lods
andb
pop
pop
push
xchg
jmp
stos
pop
dec
incl
xchg
sbb
ret
pop
outsb
adc
lods
insb
dec
fists
inc
call
mov
mov
dec
lods
pop
inc
pop
mov
xor
xor
or
fs
push
call
mov
inc
cmp
enter
jbe
lods
addl
test
jae
mov
jge
loopne
pusha
je
mov
je
loope
push
stos
sub
cltd
mov
add
mov
leave
lcall
pusha
decb
inc
and
adc
out
cs
popa
int
imul
cmp
mov
xchg
cmp
mov
jo
cmp
mov
jp
loopne
pop
jmp
jmp
mov
or
sbb
icebp
sbb
cmc
ficoml
push
pop
lock
inc
inc
mov
cmp
xchg
add
sbb
jnp
lret
or
push
sbb
lea
iret
cwtl
outsb
data16
ds
jecxz
outsb
mov
pop
cld
pop
fs
or
loope
sbb
inc
pop
call
ret
mov
inc
enter
ret
aas
cld
int
xor
xor
mov
imul
sub
out
std
adc
mov
icebp
cmp
andb
cmp
arpl
cmpsb
mov
or
mov
les
jns
loope
pop
sbb
inc
bound
jmp
fwait
mov
movsl
adc
cmpsb
sub
sub
xor
int3
push
mov
mov
dec
test
notl
clc
mov
and
sub
mov
les
xchg
push
xchg
jbe
mov
gs
ret
sahf
aam
lret
jno
cmp
arpl
in
pop
xor
push
xchg
out
enter
ljmp
das
das
adc
dec
xchg
inc
sbb
leave
jno
xor
fdivl
mov
testl
pop
fidivs
stc
sub
jp
xchg
stc
inc
dec
inc
pop
out
push
ds
imul
push
inc
push
outsb
sbb
ja
pop
push
aaa
lods
test
cltd
popf
gs
adc
in
cmc
cmp
jo
dec
and
mov
std
sbbb
loope
jl
in
jbe
push
xchg
mov
lea
in
aaa
xchg
sub
or
ss
jae
dec
icebp
shrl
rclb
sub
sahf
into
into
mov
nop
mov
out
pop
test
pop
mov
push
jl
jle
mov
pop
mov
push
and
xchg
xchg
inc
or
rcll
pop
rcr
lea
js
and
or
cmp
and
pop
mov
jg
daa
daa
jle
mov
or
sub
loopne
ss
pop
shl
lock
jle
rclb
movsl
inc
and
std
add
leave
das
adc
dec
mov
mov
mov
mov
stc
push
ret
and
loope
lods
mov
gs
iret
push
push
mov
mov
and
xorl
mov
movl
cmpl
je
cmpl
jle
jmp
pushl
call
cmpl
jne
xor
add
dec
mov
mov
dec
mov
jmp
jmp
push
movb
movsl
mov
jbe,pn
adc
jp
addb
shlb
mov
gs
dec
mov
sbb
add
xor
sub
das
test
nop
xor
cs
mov
in
cli
aas
arpl
inc
mov
jle
or
inc
fadds
rcrb
pop
imul
adc
cmp
mov
ss
imul
cmp
jne
loop
movsb
pop
mov
mov
cltd
adc
aam
setno
push
and
daa
xchg
stc
call
inc
lcall
cmp
cmpsb
clc
insl
aam
fwait
ret
ljmp
jg
lds
sub
pop
ret
mov
cmc
adc
add
scas
xchg
leave
fildl
loopne
aad
and
in
jl
inc
or
mov
pop
jle
pop
inc
jbe
inc
imul
lret
hlt
mov
popa
jmp
cmpb
mov
and
jo
aas
inc
adc
fidivl
insl
pop
hlt
or
cmc
cmp
pop
fcomp
fs
int
mov
mov
imulb
sbb
addr16
divl
enter
cmp
sbb
jmp
aaa
stc
aad
push
push
mov
div
popf
js
add
iret
xchg
mov
gs
and
jl
or
and
jnp
nop
mov
sbb
or
xor
or
mull
mov
mov
add
push
lahf
aaa
clc
cmp
cmp
sbb
out
jge
push
mov
sti
mov
test
hlt
jmp
mov
cmp
add
mov
lock
std
rolb
cmpsl
or
inc
dec
std
adc
mov
imul
inc
incl
mov
test
jle
idivl
push
mov
hlt
testl
mov
cs
xor
sahf
testb
jne
loopne
pushf
daa
sbb
jb
or
sub
sar
movsb
out
and
adc
pop
daa
pop
push
push
sbb
pop
sbb
cld
cmp
or
cmpsl
push
shlb
cli
rorb
cmp
fists
cwtl
ss
push
imull
jp
inc
xchg
ret
cmp
mov
out
iret
push
jle
add
xor
lods
ljmp
add
xor
dec
lcall
cmpsb
mov
pusha
in
ds
enter
inc
enter
iret
jl
inc
xchg
and
sbb
xchg
dec
and
push
mov
js
into
mov
and
xor
mov
hlt
add
out
imul
pop
mov
stos
jl
test
pop
ds
adc
mov
sahf
arpl
push
es
es
cs
ret
and
fildl
notb
lods
cmp
in
daa
dec
fdivrs
in
rolb
insb
das
or
push
repnz
ret
in
xchg
sub
addr16
bound
mov
add
xchg
lret
pop
sbb
ja
mov
cmp
mov
scas
dec
push
lods
pop
cs
sub
ficoms
add
mov
inc
add
int3
mov
test
jle
add
and
cmpsb
pop
test
fisubs
xchg
jb
push
adc
cmp
loopne
xchg
sub
movsb
pop
sbb
xor
and
dec
xchg
pop
adc
xor
pop
mov
push
add
test
xchg
or
stc
lea
xchg
in
int
add
xor
cwtl
fcmovnbe
in
xchg
inc
iret
mov
hlt
push
mov
cmp
ljmp
scas
cmp
and
xchg
mov
arpl
or
dec
jo
sub
mov
stos
xlat
dec
pop
decb
aad
sbb
cli
fimull
sub
sbb
sbb
xchg
pop
int
mov
push
andl
push
lea
out
pop
sub
std
push
mov
xor
call
cmp
jl
lock
push
ds
fcompl
dec
cmp
xlat
sub
inc
cmp
xchg
pushf
xor
loopne
inc
xchg
cmpsb
icebp
add
push
mov
loopne
push
ret
lods
pop
sahf
stos
popa
adc
sub
movsb
jl
arpl
jb
jbe
dec
mov
cli
movsb
out
into
xor
fs
pop
mov
test
xor
lret
mov
out
lods
notl
push
sub
sarb
lahf
int
clc
aaa
cmpsb
mov
push
xor
es
sub
loop
or
cmpl
lcall
mov
mov
aaa
in
lcall
push
dec
mov
sub
test
push
inc
es
push
int
shll
mov
jbe
jge
inc
fadds
inc
xchg
insl
mov
mov
sbb
sub
stc
addr16
test
lret
sub
xchg
out
outsl
test
push
mov
jge
movsb
mulb
ret
shll
int
cmpsb
out
sbb
in
std
sbb
icebp
testl
lods
cmp
les
cwtl
mov
pop
or
sbb
xor
jmp
mov
xchg
out
stos
out
mov
dec
and
daa
repnz
jg
ss
jg
jl
inc
push
mov
shlb
rcr
push
or
sbb
pop
sbb
bound
in
adc
mov
gs
leave
loop
mov
push
fnstcw
in
or
add
rcrb
lret
aam
fxsave
mov
lock
clc
in
xchg
gs
push
inc
mov
addl
mov
cld
loopne
mov
int3
inc
shrb
pop
or
clc
scas
xchg
rorl
mov
clc
sub
inc
jnp
mov
ret
in
insl
movsl
push
cmp
sub
movsl
je
pop
inc
xorb
inc
movsb
sub
mov
or
pop
fmuls
pop
push
lock
sbb
sub
jmp
call
aas
sbb
loope
leave
call
jmp
js
fiaddl
xchg
repnz
sbb
decb
ficoml
popa
jae
jl
ja
lods
fwait
jns
push
into
mov
xchg
cmp
jo
mov
add
xchg
sub
fisubrl
adc
dec
inc
push
clc
rcrb
inc
xor
push
mov
into
pop
aas
or
out
mov
mov
xor
xor
or
mov
xor
xchg
mov
pop
jne
cmp
pop
or
push
in
mov
das
cltd
inc
xchg
icebp
xchg
ja
cmp
aas
inc
xchg
rorb
in
aaa
rol
cltd
vmread
mov
xor
imul
dec
into
ljmp
addb
add
mov
mov
mov
xchg
xchg
repz
push
cmp
inc
xor
subb
cmpsb
sbb
test
xchg
cmp
mov
adc
jmp
jae
nop
mov
fdiv
insl
inc
gs
hlt
jecxz
test
call
xchg
rcrl
sbb
cmp
aam
cwtl
and
mov
lea
add
xchg
cltd
rclb
xchg
or
xchg
mov
inc
adc
cmp
push
jp
sbb
sarb
mov
xor
es
clc
clc
jae
pop
sub
rclb
mov
jmp
nop
or
mov
testb
insl
out
add
mov
imul
xor
xor
push
insb
insb
mov
cmp
test
hlt
aaa
bound
pop
enter
test
stc
pushf
xchg
testl
stc
andb
sarb
lcall
cmp
xchg
and
into
fnstcw
outsb
dec
mov
addr16
fs
jle
xchg
call
push
xor
push
jbe
inc
mov
sbb
cmp
test
dec
inc
lods
popa
and
mov
hlt
out
push
pop
hlt
je
add
push
push
sbb
mov
out
mov
adc
movsl
pushl
xchg
imul
mov
pop
push
sbb
push
xchg
shlb
aaa
and
stos
or
adc
rcll
pop
push
idiv
cmc
and
addb
push
mov
mov
fsubl
fcoml
inc
ret
hlt
dec
xchg
clc
sub
fucomp
out
pop
mov
sub
adc
sbb
sti
or
cmpsl
ss
inc
push
or
mov
aam
push
adc
test
mov
cmp
mov
push
or
pop
pop
jb
arpl
or
shll
push
dec
cli
pop
push
mov
popf
sbb
dec
mov
in
hlt
negl
movsl
mov
loope
stos
push
pop
push
sub
push
sbb
pop
or
sub
push
mov
movsl
sti
dec
lods
lea
aad
cmp
pop
mov
test
lds
lcall
imul
inc
mov
sarb
xor
mov
enter
aas
mov
push
js
out
daa
js
jmp
inc
push
std
fdivrl
loopne
mov
inc
cmp
xchg
jo
je
enter
jae
rcrl
cmpsb
inc
es
aaa
clc
xor
push
idivb
rcrb
sarb
mulb
and
push
insb
stos
shlb
xlat
mov
movb
pusha
and
adcb
push
lahf
jns
arpl
xor
int
mov
inc
inc
test
lret
xchg
add
jle
adc
movl
xor
scas
sti
dec
pop
dec
cmpsl
and
inc
xchg
int
xchg
mov
mov
xchg
add
dec
and
arpl
add
mov
xchg
shll
jmp
fnsave
ret
out
and
jl
das
adc
push
dec
stos
dec
dec
shl
and
pop
mov
in
or
mov
outsl
pop
sbb
push
mov
sbb
mov
lahf
or
jg
pop
lods
inc
sbb
iret
xor
lods
jno
insb
sub
mov
cmc
lods
dec
xchg
jnp
repz
lea
xchg
fwait
ret
sbb
nop
ret
add
adc
stos
push
loope
scas
inc
movsl
dec
cli
movsl
pop
push
cmpl
inc
xchg
rep
dec
mov
jns
into
jnp
add
pusha
xor
jge
jns
jecxz
inc
bound
outsb
pop
rol
icebp
cli
das
add
in
add
bound
ret
loop
ljmp
scas
sbb
or
outsl
and
fwait
bound
xor
push
xchg
sbb
loopne
lahf
push
cmp
and
daa
mov
mov
mov
xchg
gs
sbb
sub
nop
les
movsb
addr16
mov
je
dec
loope
ja
push
bound
enter
imul
lahf
std
mov
mov
es
sbb
stc
in
jp
and
cmpsl
sbb
clc
fmuls
dec
insl
cmp
pop
push
adc
mov
stos
adc
jae
insb
mov
enter
sbb
js
lea
xorb
pop
dec
dec
lcall
lahf
xchg
fdivl
out
xor
dec
add
pop
int
xchg
bound
inc
testl
or
lcall
loopne
gs
cld
aam
aaa
vpaddusb
jno
jl
aas
sbb
dec
push
jnp
push
gs
mov
fldl
fst
push
mov
cltd
mov
jg
sbb
xchg
mov
mov
outsb
pop
cmp
outsb
ffree
cwtl
push
mov
or
fcomps
ja
test
das
loopne
mov
xchg
xor
je,pn
add
pusha
jle
mov
mov
out
push
and
xor
sub
rcrb
stos
fiaddl
aaa
push
insl
out
enter
mov
andb
xchg
adc
lds
xor
adc
ljmp
inc
sbb
shlb
rclb
rcrl
xor
std
divl
jnp
pop
adc
es
fldz
fcmovnbe
push
adc
jg
push
inc
dec
inc
cwtl
inc
sub
and
lds
pusha
dec
mov
enter
test
push
xchg
cmc
cmp
mov
adc
iret
and
and
bound
testl
jbe
shr
cli
sbb
dec
stc
mov
pop
or
xchg
dec
cmp
pop
mov
inc
or
rcrl
adc
xor
icebp
or
adc
mov
adc
lcall
cmp
in
mov
ds
bound
jns
xor
jp
imulb
sbb
mov
dec
mov
les
xchg
orl
aas
inc
icebp
mov
mov
or
pop
jge
int3
xchg
arpl
push
jo
inc
and
mov
repz
mov
mov
sahf
leave
in
inc
mov
pop
outsb
stos
enter
pop
jecxz
xchg
push
cli
movsl
cmp
imul
flds
sub
push
and
or
mov
mov
into
fcom
scas
pop
xor
add
xor
in
nop
dec
pushf
xchg
mov
or
std
fnstenv
sbb
stos
push
gs
dec
or
cmp
test
and
jnp
jb
inc
movsl
loopnew
add
inc
push
and
mov
test
mov
outsb
fbstp
and
out
popa
cli
les
and
loopew
or
xchg
loope
adc
sti
push
mov
xor
push
out
outsb
pusha
sahf
clc
mov
pop
adcb
push
add
idiv
cmp
sub
lahf
adc
xor
and
or
push
push
xor
bound
mov
push
and
fwait
lea
add
add
lods
sub
fisttps
pusha
push
es
push
add
push
shll
inc
dec
dec
lds
jnp
fcoms
mov
notl
scas
jno
adc
insl
rcrb
lret
fdivr
mov
adc
into
cmpsl
dec
insl
add
sbb
imul
lret
push
xchg
mov
icebp
xchg
fbld
add
push
stc
xchg
outsl
xchg
jecxz
xor
push
mov
adc
inc
push
xchg
adc
adc
adc
ja
fisttpll
push
test
sti
sbb
inc
imulb
out
mov
stos
test
push
pop
pop
mov
jb
fwait
out
clc
sub
scas
and
pop
pop
into
jne
gs
mov
rorb
js
mov
data16
push
outsb
cmp
xchg
pop
dec
fsubs
outsb
loopne
sti
lds
int
xor
das
aad
aaa
cmp
cmpsl
stos
mov
cs
xchg
sarl
push
lods
cmp
shlb
dec
sub
lods
addr16
int
push
or
sbb
fildl
mov
imul
lods
fucomp
ja
mov
std
test
dec
or
or
stos
xchg
popf
lods
xchg
or
dec
jo
xchg
fcmovnbe
fnsave
dec
sbb
repnz
sbb
pop
push
mov
xorb
leave
mov
cmp
in
inc
push
push
imul
cmp
push
push
pushf
cli
out
mov
cmp
xor
adc
aam
shl
adc
inc
aaa
add
dec
movl
xchg
adc
inc
pslld
movb
test
adc
inc
inc
cwtl
and
aam
push
add
jb
cmp
rorl
inc
pop
sbb
cmp
sti
and
vmwrite
jbe
retw
pop
jbe
mov
cld
cld
or
leave
mov
jmp
int3
popf
in
repnz
ss
adc
fs
mov
and
enter
mov
frstor
ret
cmpsb
pop
je
cmpsb
jp
bound
xor
stos
popf
repz
rclb
push
inc
sbb
roll
jle
or
lret
inc
outsl
push
dec
dec
adc
mov
lret
pop
test
push
jo
mov
jecxz
bound
and
cmc
aad
movsb
mov
or
xor
adc
stos
jne
mov
pop
fists
sarl
push
nop
repz
lods
cmp
xchg
mov
and
cltd
mov
fcomp
sub
ret
xchg
sbb
cmp
leave
sbb
pop
shr
cs
mov
mov
xchg
imulb
dec
cwtl
sbb
loope
adc
arpl
lret
lods
cmp
add
scas
and
lods
and
les
ror
pushl
pushf
mov
cwtl
dec
cld
xor
mov
call
mov
sti
pop
hlt
insl
jle
jl
xor
push
mov
ss
mov
cmp
or
addr16
push
adc
dec
mov
daa
pop
lods
scas
test
ret
mov
stc
adc
outsb
test
xchg
add
out
dec
mov
adc
mov
inc
dec
fldpi
mov
call
in
pop
sbb
mov
xchg
cmp
lock
fstp
adc
dec
jno
pop
jmp
aaa
push
arpl
pop
das
xchg
out
dec
jp
data16
mov
jp
int
test
adc
out
lahf
jmp
sbb
lock
mov
cmp
outsl
add
and
mov
cmp
hlt
push
lret
pop
mov
scas
adc
or
add
xor
shll
sub
xchg
push
into
stc
aad
movb
inc
movb
in
sar
mov
ret
cltd
adc
loop
mov
xchg
fadd
push
nop
ds
icebp
jg
xor
add
xorl
xchg
stc
lret
mov
or
lock
and
cli
lret
pop
mov
inc
hlt
fidivrs
add
popa
fmull
mov
lods
pop
loop
daa
add
mov
mov
cmp
test
aam
push
lret
and
push
loope
aas
lret
mov
mov
adc
cmpsl
pop
dec
fisttps
mov
xor
shlb
jg
mov
add
mov
xchg
es
xor
xor
push
jb
xchg
ljmp
xor
repz
mov
fnstsw
clc
cmp
sub
jge
xchg
push
pusha
and
lcall
das
stos
lret
adc
cmc
jno
lret
or
mov
push
rclb
adc
push
popf
mov
dec
push
fistps
mov
mov
sbb
dec
sbb
andb
add
mov
idivb
jecxz
cli
cltd
pop
xor
sbb
test
lcall
mov
add
sbb
or
mov
and
xor
filds
or
cmpb
cmpsl
cmp
sub
pop
xchg
push
dec
inc
ret
int3
adc
pop
add
jge
sbb
inc
jbe
jg
mov
add
loope
sbb
ja
jo
jnp
lods
adc
mov
inc
out
dec
cmp
sbb
repz
leave
sbb
add
jo
or
roll
mov
adc
xchg
jp
mov
pop
mov
or
sbb
adc
ss
dec
jecxz
adc
push
jge
nop
int3
and
push
push
mov
xor
mov
cmp
lea
lock
in
sub
sub
pop
adc
pusha
fnstcw
sub
aam
insb
jne
push
mov
nop
mov
repz
sub
ljmp
stos
cmp
sub
or
rorl
ret
rorb
cwtl
pop
dec
mov
bound
enter
outsl
jmp
mov
sbb
xor
stos
stos
lret
cmp
icebp
xchg
out
rorl
ljmp
jge
and
inc
fcomp
scas
notb
mov
sub
adc
cmpsl
mov
xchg
push
cmp
jo
rolb
xchg
mov
pop
push
into
fstpl
stos
inc
cli
fistpll
mov
movsl
and
ret
shlb
jae
repz
adc
jmp
loope
push
es
inc
cmp
movsl
cwtl
repnz
push
xchg
imul
push
test
mov
mov
push
jg
add
mov
push
jecxz
sbb
xor
popa
cmp
add
es
and
adc
repz
inc
shr
pop
stos
fstpt
or
divps
cmp
lods
add
fisubrs
mov
or
std
xor
popa
sbb
fistl
mov
or
out
xchg
sub
xor
stos
out
insl
add
sahf
dec
rcl
fnstenv
add
or
or
jg
andl
sti
push
xor
push
fwait
sti
test
jg
xchg
inc
fnstenv
shr
cld
inc
out
or
cwtl
fildll
jns
lret
dec
adc
pusha
jmp
dec
das
push
push
mov
adc
mov
add
es
cmp
aad
clc
mov
adc
shrb
adcb
in
out
mov
lret
push
pop
popf
mov
fildl
pop
cmp
pop
fdivr
xchg
and
aas
or
ja
lods
jb
jo
push
inc
test
imulb
push
scas
in
jo
pop
std
jae
push
xor
and
add
adc
sti
mov
xlat
push
lret
inc
pop
test
addr16
aas
pop
test
xchg
pop
jmp
add
movl
mov
lds
pmulhw
push
and
push
push
jo
sub
push
inc
add
aad
in
add
repz
aas
fstps
mov
inc
dec
sub
andl
loop
jle
push
cltd
mov
sahf
mov
cs
adc
jmp
xchg
test
xchg
int
dec
mov
cltd
dec
push
xchg
push
in
pop
mov
out
xor
xchg
sub
lret
mov
sahf
int3
or
repz
xchg
test
or
mov
fcomps
fwait
out
ss
sbb
mov
cmp
xchg
pop
cmp
outsb
cmc
mov
loope
pop
push
fwait
mov
aaa
pop
jbe
fists
jg
or
rclb
int
cld
adc
rorb
aad
subl
or
mov
aam
mov
cmp
mov
xchg
push
sahf
insb
js
cmp
out
aam
cmpsb
cmp
incb
scas
or
inc
pop
loop
mov
push
movsb
sar
lret
enter
fs
fistl
or
leave
or
sbb
nop
xor
test
mov
aam
or
rclb
sbb
in
pop
pop
pop
push
idivb
jmp
mov
mov
test
lods
xor
fcoml
lahf
or
xchg
pop
push
cmp
jmp
addr16
test
jl
aam
into
repz
test
and
std
loopne
test
das
mov
fisttpl
add
sub
and
xlat
movsb
lea
mov
mov
jae
push
dec
push
xchg
and
inc
out
mov
push
xchg
insb
jae
push
hlt
call
stos
clc
stos
inc
or
sub
jbe
fcoml
es
data16
mov
jno
or
jmp
divb
rorb
pop
push
fildll
test
push
and
ljmp
push
je
rcll
movsw
pushf
test
cmp
sub
pop
shlb
sarb
in
mov
inc
or
and
mov
inc
aas
lret
fwait
ja
scas
jle
jae
xchg
cmpsb
add
scas
imul
push
push
jmp
jmp
push
dec
das
sub
mov
pop
ds
shrw
fidivrs
fwait
test
imul
cmp
sub
mov
lahf
push
popf
jmp
mov
outsb
mov
mov
fsubl
add
fldcw
subl
sbb
enter
mov
call
mov
and
push
mov
fldt
ds
insl
push
pop
jae
xchg
fstpt
sbb
loope
shll
bound
test
shlb
xchg
imul
cmp
pop
add
arpl
mov
fstpt
jmp
pop
push
pop
adc
ds
lret
loopne
popf
dec
xor
sti
inc
out
cmc
into
dec
adc
data16
mov
adc
orb
shrb
pop
pop
insb
xchg
mov
pop
sub
xchg
pop
pop
sti
inc
lret
mov
js
jmp
adc
scas
mov
ret
mov
das
inc
cli
aad
stc
movsl
adc
mov
gs
xchg
pop
cmpsb
mull
xlat
mov
les
jmp
pop
xor
sub
inc
add
push
outsb
jb
adc
lds
mov
ss
mov
imul
enter
mov
movsb
adc
push
mov
lahf
sti
push
jns
aaa
cmpsb
mov
lock
push
fisubrl
push
or
scas
inc
divb
notb
lret
ja
repz
xor
pushf
test
mov
es
mov
icebp
jmp
icebp
into
mov
fwait
xor
cmp
mov
cmp
outsb
rcll
xchg
in
push
add
or
dec
inc
inc
add
notl
arpl
xorb
fs
xor
xchg
adc
adc
cmp
lods
dec
ret
dec
lfs
add
xchg
insb
push
xchg
jp
pshufw
dec
xchg
mov
mov
jl
mov
mov
or
cmp
test
cld
dec
pop
xor
aam
int3
and
shlb
aas
and
pushf
sbb
xchg
bound
cmp
inc
fs
push
arpl
insb
cld
inc
and
xorl
xor
test
dec
jbe
mov
sbb
ret
mov
xlat
add
add
cli
sti
arpl
push
add
push
shll
loopne
aad
mov
mov
mov
orl
adc
mov
insb
arpl
stos
and
lds
mov
lods
push
pop
ficompl
iret
subb
cmp
inc
xchg
cwtl
pusha
nop
fimuls
lods
adc
lret
or
or
nop
andb
fs
jb
test
movsl
arpl
inc
popa
mov
push
stc
mov
adc
cmpl
push
xchg
xchg
shlb
sbb
mov
cmp
je
or
nop
jno
fmul
mov
lcall
pop
and
das
pop
decb
enter
outsl
cmc
std
cmc
jecxz
push
xor
sub
cmp
add
test
adc
sahf
lods
into
test
out
popf
daa
and
adc
and
mov
sti
into
jns
pop
jnp
neg
ret
dec
mov
lods
in
sbb
xor
addl
push
push
add
sub
std
adc
inc
shr
xor
add
into
mov
sub
shrl
pop
jle
mov
je
or
repnz
or
fcomip
cmpsl
popa
mov
mov
int
pop
ds
pop
jo
cli
jl
push
pop
mov
and
pushf
xor
sti
addr16
rcll
mov
pop
pop
add
jae
inc
and
and
adc
sub
pop
and
in
sbb
mov
mov
mov
cmp
shll
dec
sahf
cmpb
je
mov
bound
fwait
in
ja
pusha
mov
jmp
repnz
enter
push
ret
mov
mov
inc
lock
mov
in
adc
dec
cld
add
sbb
aaa
in
push
sti
jae
adc
negb
add
hlt
sbb
xor
dec
test
inc
and
sub
movsl
jne
or
test
add
loop
lahf
cwtl
jo
xchg
mov
sub
mov
cmp
push
push
fs
nop
fstpt
jge
es
fdivrl
cmp
dec
imul
xlat
and
enter
jae
jmp
scas
xchg
or
lods
loop
out
rolb
insb
addr16
jb
hlt
roll
testl
negl
stos
cmpsb
push
mov
ljmp
pop
add
or
fmull
fldcw
data16
mov
lret
jnp
lahf
mov
ds
inc
xlat
aaa
rcl
adc
mov
out
test
cmp
inc
iret
sub
test
out
dec
cltd
push
insl
popa
or
fdivrl
sbb
mov
xor
mov
cmp
imul
out
inc
out
cmp
enter
je
shl
sbb
test
sti
and
das
sbb
inc
je
repnz
dec
fs
mov
popf
pop
adc
stc
xchg
cmp
jnp
pop
mov
cmc
cld
rorb
movsl
test
test
add
jmp
jp
arpl
out
jl
shr
jp
adc
push
push
inc
mov
jp
mov
cmp
adc
mov
cltd
xchg
addr16
mov
push
cmp
aad
lret
sbb
sbb
in
push
cltd
pop
pop
and
pop
adc
sub
movsl
fwait
lods
pop
cmp
lods
out
in
lock
sbb
sti
push
testl
adcb
dec
icebp
mov
js
arpl
jnp
sub
aam
jge
and
addr16
dec
push
lods
mov
push
jmp
mov
xor
ljmp
or
jg
js
mov
ja
popl
xor
inc
or
xor
cmp
faddl
mov
jno
push
jo
loopne
push
push
test
std
stos
xor
xchg
xchg
es
mov
mov
out
inc
jo
adc
dec
enter
jge
add
dec
loop
mov
push
out
iret
inc
xor
sub
movsl
lods
gs
dec
push
jno
subb
ds
pusha
lods
add
pop
sbb
xchg
pusha
mov
popf
cmp
sbb
sbb
inc
fsubr
add
xchg
sarb
inc
in
jae
mov
inc
rep
out
sub
xor
dec
fildl
stos
out
mov
xor
push
pop
ficomps
mov
mov
inc
cwtl
lret
ljmp
sub
jge
sbb
sarl
shlb
dec
fisttpl
adc
repz
inc
cs
repz
les
cmp
sub
cmpl
int
or
iret
inc
xor
vphaddudq
lret
add
cli
push
sbb
iret
cmpsl
cli
add
inc
push
jl
xchg
mov
fadds
and
cli
sar
stc
sarl
cmpsl
mov
mov
push
aas
ds
push
les
pop
outsb
inc
pop
xlat
test
pop
es
fdivrl
int3
sti
mov
pop
rcll
xor
xchg
mov
sub
mov
orl
mov
mov
sub
mov
orl
mov
mov
sub
mov
orl
mov
mov
sub
mov
mov
mov
mov
xor
mov
add
or
mov
mov
mov
sub
mov
orl
mov
xor
add
push
mov
xor
add
push
mov
xor
add
push
lea
push
pushl
pushl
call
test
je
lea
push
mov
xor
add
push
mov
add
push
mov
mov
pushl
call
mov
mov
lea
mov
incl
mov
test
je
lea
mov
mov
mov
mov
mov
sub
mov
mov
xor
mov
sub
add
mov
mov
mov
mov
jmp
adc
incb
cmpsb
xchg
or
lahf
cmp
clc
push
mov
orl
addl
sbb
xor
xor
pop
aam
jnp
vunpcklps
cs
and
or
pop
mov
adc
and
imul
adc
jmp
sbb
daa
cmp
js
movsl
adc
cmp
mov
movsb
rcrb
rolb
pop
divl
dec
mov
addr16
out
inc
mov
mov
loope
shll
add
stc
xchg
and
mov
subb
ret
cmp
pushl
mov
fmull
mov
jno
inc
push
lcall
arpl
orb
loop
push
push
je
ds
out
mov
loopne
sbb
push
outsl
jb
shll
les
add
jne
inc
sub
shlb
mov
mov
pop
inc
test
loope
mov
xchg
and
cli
sbb
movsb
test
in
jns
loope
fwait
cmp
js
fwait
ja
sub
dec
mov
sbb
pop
xlat
push
and
or
fucomi
inc
fimull
push
xchg
aas
adc
aas
cmc
xchg
xchg
dec
jmp
sub
imul
add
out
pop
push
stos
push
push
pop
dec
push
out
sub
xor
out
je
fmull
scas
mov
inc
push
dec
mov
or
ret
or
call
inc
and
jp
fcmovnb
sbb
test
adc
cmp
dec
movsb
sbb
clc
test
mov
jbe
pop
mov
fdivs
push
gs
pop
push
lods
sub
or
repnz
out
cmp
aas
aad
movsl
stc
add
and
pop
sbbl
das
mulb
xchg
clc
jo
jo
adc
insl
and
mov
fcomi
in
shlb
dec
jnp
jne
and
imul
cs
push
jl
inc
sub
dec
push
add
mov
into
insb
sbb
call
mov
cs
jnp
push
pop
lds
cmp
add
dec
pusha
into
push
shll
cmovle
fcompl
dec
add
and
pop
cli
int3
jge
lcall
push
leave
test
adc
notb
sub
or
pop
xorl
push
in
daa
ret
cwtl
je
inc
aaa
sbb
ret
icebp
arpl
or
sbb
dec
aas
xor
xchg
dec
dec
fnstcw
lods
adc
test
sbb
push
adc
cli
xor
loopne
jno
mov
adc
or
sbb
rorb
js
add
nop
xor
sub
dec
std
data16
cmp
or
cmc
and
js
int
cs
jl
pop
jnp
and
sbb
lods
js
push
in
in
cltd
push
lret
jnp
pop
dec
popl
dec
sub
jp
xchg
popf
outsl
sub
dec
roll
mov
sub
inc
mov
lahf
out
push
xor
pop
je
outsl
push
out
pop
mov
jg
gs
rol
ja
hlt
out
pop
mov
gs
inc
push
and
jae
and
arpl
aas
xchg
repnz
pop
mov
orb
inc
jnp
push
pop
fmuls
bound
xchg
add
nop
dec
imul
loope
jecxz
inc
movsl
cmp
outsl
stc
aam
push
xor
xor
shl
adc
mov
test
or
sarl
inc
test
aaa
cltd
mov
jbe
and
popa
mov
mov
inc
mov
push
jg
mov
test
add
jno
or
iret
mov
movsl
mov
push
and
sbb
pop
sub
test
mov
xor
in
push
cmp
loopne
and
cwtl
outsl
inc
bound
sub
sub
std
add
sub
pusha
sub
fcmovne
daa
fcomps
jge
push
movsl
jno
sub
or
mov
notl
lods
arpl
sti
adcb
jb
add
hlt
sub
xchg
inc
imulb
push
jl
xor
lds
mov
int
cs
xchg
and
les
jecxz
push
leave
lret
hlt
cmc
rcll
adc
xchg
xor
push
shr
popa
jl
pop
push
popf
inc
fucomi
in
mov
adc
mov
mov
jl
mov
mov
mov
pop
call
mov
mov
push
call
imul
jge
inc
sbb
mov
icebp
pop
pop
fdivrl
in
test
or
fadd
cs
imul
xor
add
mov
push
stc
adc
jecxz
cmp
adc
cli
cmp
add
adcl
stos
pop
bnd
pop
insb
cli
fwait
xchg
das
mov
dec
stos
fmull
pop
cmp
jnp
xor
xchg
lcall
movsl
addr16
adc
hlt
dec
push
push
and
jne
cmp
imul
push
outsl
pop
in
in
or
pop
scas
inc
sahf
aaa
mov
adc
xorl
inc
pop
in
popf
dec
xor
push
ja
fs
popl
dec
mov
pop
inc
gs
mov
mov
push
cltd
out
or
into
mov
pop
dec
divl
stos
or
fdivl
clc
ret
jp
xor
xor
add
xchg
adc
sbb
adc
pop
lahf
lock
xor
sub
sti
nop
mov
aam
fadd
push
cmp
push
jo
iret
cld
xchg
sbb
jo
push
jg
add
ret
mov
jo
sbb
jl
pop
mov
stos
add
add
inc
inc
xlat
xchg
and
scas
mov
jge
push
test
ds
mov
aad
xor
les
nop
loopne
imul
arpl
add
dec
mov
test
nop
mov
pop
rcrl
cwtl
iret
mov
xor
xchg
arpl
aaa
sti
jo
sahf
lahf
adcb
sub
mov
test
xor
stc
popa
adc
aad
jb
xor
and
iret
int
mov
mov
sbb
in
mov
inc
lahf
mov
sub
cmpsl
cld
lods
adc
les
jmp
int
lods
push
push
daa
and
outsl
push
nop
outsl
jl
aas
rcll
add
es
xchg
fs
clc
test
mov
aam
call
inc
adc
pop
mov
dec
mov
cltd
testl
in
lds
popf
mov
shll
sub
test
test
int3
adc
cmp
repnz
cmc
test
mov
mov
repnz
leave
loopne
push
push
shll
inc
push
push
daa
pusha
into
gs
push
in
dec
push
mov
inc
cld
xor
mov
lcall
xor
cmpsb
sbb
jmp
aam
sarb
gs
gs
push
jno
jns
jmp
insl
cmp
jo
add
add
ljmp
fldcw
pop
push
pop
bound
dec
mov
mov
mov
sbb
dec
lock
adc
mov
cmpsl
inc
divl
mov
imul
xchg
xor
mov
add
imul
mov
add
ret
out
sbb
cmp
mov
adc
aaa
cmpsl
xor
pop
sahf
arpl
cwtl
adc
push
call
and
inc
dec
popa
jg
xor
out
out
std
ja
mov
ficoml
jno
xchg
aam
adc
inc
sub
fcompl
push
aad
pop
xchg
stos
dec
ljmp
mov
dec
xchg
cmpsl
add
lods
nop
xor
or
dec
sbb
inc
rclb
push
mov
pop
cli
mov
mov
shl
pop
adc
xorl
dec
dec
not
pop
ret
fs
inc
adc
cld
in
or
add
iret
xchg
mov
outsl
pop
mov
cmp
in
in
imul
pop
stos
cmp
lcall
cmc
std
jae
xor
push
aam
dec
imul
scas
shl
sbb
jb
mov
mov
sub
sahf
aad
mov
cmp
ja
add
dec
out
fs
dec
jge
notl
push
push
jno
mov
fdivrp
shrl
sub
push
add
sbb
dec
js
xchg
sub
and
mov
popa
mov
stc
cmc
mov
dec
sti
inc
push
add
movsl
xor
mov
ljmp
out
xchg
cmpsb
in
add
stos
movsl
mov
pop
cmp
fidivrl
ret
iret
cmpl
xchg
sub
jp
xor
neg
hlt
mov
xor
and
ror
pop
bound
mov
sub
insb
rorl
in
or
je
in
push
dec
dec
xchg
mov
icebp
daa
mov
xchg
pop
out
inc
mov
mov
enter
ja
push
int3
xchg
shrb
mov
dec
sbb
and
aad
xchg
movsl
mov
test
int3
imul
stos
inc
je
aam
push
sti
dec
sub
xor
movups
lret
aaa
arpl
push
or
pop
cmpsl
jle
sub
in
rcrl
push
shrl
xor
aad
cmp
dec
pop
aas
std
incl
mov
cmp
fistps
decl
call
cmp
jg
insb
rol
or
test
mov
enter
enter
jg
and
cmc
jns
sahf
test
push
insb
andb
rcr
imul
leave
mov
mov
popf
test
fldcw
pop
xchg
sub
gs
ret
pop
pop
push
cmp
sub
add
shl
sub
push
add
cmp
or
pop
xchg
xchg
fiadds
aad
pushf
jecxz
adc
mov
pop
std
cmp
sbb
stos
or
aad
ljmp
adc
loopne
cs
push
inc
les
mov
sub
xchg
mov
adc
dec
lret
cwtl
adc
ror
pop
xchg
sbb
adc
jle
add
outsl
sbbb
out
les
lods
dec
leave
iret
ss
mov
out
cmpsl
pop
sahf
aas
mov
mov
jle
into
out
sahf
jns
shlb
add
mov
out
nop
sub
shr
sub
xor
adc
aaa
jecxz
out
leave
dec
ds
fxch
mov
adc
int3
cmp
ret
aad
jmp
repz
insl
jle
jp
sbb
in
inc
adc
cs
pop
jge
push
cmpsl
mov
and
fs
pop
mov
and
gs
subl
xchg
gs
popa
repz
test
add
mov
stos
in
rorl
mov
shrl
sbb
jmp
outsb
lods
inc
cltd
mov
xor
test
xor
inc
lods
ret
lds
mov
std
fistpl
inc
xor
jg
imul
and
xor
xor
daa
arpl
lahf
and
scas
cmp
fnstsw
pop
or
lods
call
sbb
jne
mov
mov
fnstenv
sar
sarb
and
push
cmp
stos
push
mov
inc
in
jnp
repnz
jno
es
jge
jmp
icebp
cltd
mov
test
or
pop
repz
dec
jmp
and
ss
mov
pop
and
stos
and
inc
jle
pop
sbb
jmp
pusha
push
xor
mov
and
cmp
jle
inc
dec
sbb
test
mov
lahf
jmp
push
lea
mov
jg
cltd
fnstcw
jns
bound
test
jmp
out
jo
push
cmp
xor
leave
add
insl
and
pushf
sbb
mov
xchg
test
imul
js
mov
push
lds
mov
xchg
xchg
or
out
xchg
in
jg
inc
push
mov
push
fsubl
mov
arpl
add
gs
inc
mov
mov
in
js
mov
and
daa
dec
mov
and
and
ret
jmp
data16
mov
into
pop
cltd
push
outsb
movl
xchg
daa
pusha
cmp
dec
cli
ja
xlat
es
mov
push
arpl
add
and
repz
or
ljmp
out
jg
jno
stos
xchg
and
ljmp
imul
repnz
sahf
sub
sub
push
pushf
jo
test
fxch
sub
push
sub
or
mov
cld
jo
fwait
cmpsl
adc
adc
adc
repnz
jae
shlb
pop
and
pop
mov
xchg
mov
add
add
sbb
negb
mov
lods
adc
add
push
fisttpll
dec
mov
movsb
mov
jb
mov
sti
shr
mov
xorl
push
movsl
bound
icebp
inc
jg
dec
popa
aad
mov
clc
inc
dec
loope
mov
fldcw
cmp
stos
clc
xchg
into
push
xchg
cld
mov
mov
fmuls
dec
stos
and
mov
mov
fstpl
bound
pushl
fnstsw
pop
push
xor
or
sub
dec
jno
mov
xchg
cli
in
mov
scas
flds
jecxz
dec
xor
inc
loope
and
jo
mov
stos
ljmp
pop
out
sti
imul
loopne
jl
fstps
lret
lea
mov
jb
pop
cmpsl
sub
add
jae
mov
adc
pop
rclb
xchg
out
adc
inc
test
push
out
lret
and
mov
push
xor
push
mov
out
test
cmpsb
pop
shl
xor
pop
bnd
stc
fsts
shr
subl
xchg
dec
sbb
push
std
push
dec
movsb
daa
icebp
mov
add
cmp
punpckhdq
mov
or
pop
add
movsl
je
lret
cltd
jl
ds
add
ficoml
cmp
stc
ficoml
mov
js
imul
cmp
shrb
push
ret
popa
or
imul
xchg
sub
pop
mov
popf
push
add
dec
test
fisttpl
fldl2t
rcrb
jl
or
in
test
es
fdiv
insb
cs
sbbl
aaa
sub
inc
nop
popf
adc
mov
sub
sbb
mov
int
mov
wrmsr
xlat
test
ret
pop
mov
adc
mov
adc
stos
jmpw
pop
mov
stc
xor
push
jne
not
push
ret
dec
sbb
jmp
stos
loope
aad
fstpt
push
xchg
ret
leave
mov
dec
sub
or
andl
pop
xchg
mov
leave
push
lods
mov
xchg
addb
std
movsb
std
sbbb
cli
scas
mov
pop
lock
gs
inc
popf
pop
xchg
fsubr
inc
call
xchg
movsl
mov
push
adc
inc
add
lret
rolb
jae
push
sub
xchg
mov
rorb
movsb
push
arpl
out
jne
inc
stos
ljmp
imull
adc
cld
mov
iret
or
les
ds
popf
cmp
rclb
push
pop
mov
cmp
movl
mov
insl
xchg
adc
jmp
leave
sbb
inc
jecxz
xor
xor
push
sbb
addb
iret
popf
pusha
add
lock
mov
jg
das
xor
outsl
scas
in
xchg
outsb
dec
test
xor
arpl
add
sbb
jnp
pop
mov
jmp
or
aas
scas
add
imul
jp
pop
and
sahf
sub
push
jne
cli
sub
jne
das
jns
ret
popa
mov
lahf
test
leave
iret
cmpsl
rcrl
popf
dec
adc
add
cltd
aas
xor
shl
loop
mov
dec
lahf
push
leave
aaa
jmp
stc
sbb
in
gs
pop
fcomps
enter
jle
push
dec
inc
nop
pop
leave
cmpsl
xchg
or
dec
mov
jl
arpl
pop
cwtl
outsl
cli
mov
pop
cmp
sbb
lds
mov
in
xchg
in
decl
cmpsl
sbb
aaa
adc
loop
xor
loopne
call
sahf
ja
and
mov
in
andb
lcall
or
or
paddusw
sbb
xor
inc
shlb
jge
xor
rcrb
mov
mov
arpl
pop
sahf
add
popf
pop
adc
add
stc
jnp
pusha
mov
jge
clc
add
or
and
xrelease
sub
fnstcw
pop
fstp
dec
sbb
rolb
pop
imul
mov
or
inc
cld
scas
add
test
add
inc
mov
pop
add
std
push
das
dec
push
dec
daa
popa
xchg
in
adc
push
push
pop
and
mov
test
shr
pusha
mov
dec
mov
mov
sti
insl
xchg
stos
mov
mov
mov
mov
or
loop
gs
pop
inc
daa
pop
cmp
jb
and
jo
lods
fdivp
les
and
or
sbb
lods
mov
push
add
inc
xchg
xchg
out
popa
add
cmpb
cmp
adc
cmp
fiadds
aam
mov
jnp
mov
test
xchg
repnz
cld
mov
adc
cmp
cltd
mov
aam
fiadds
mov
mov
or
or
cmp
inc
and
jp
sti
inc
cmp
bound
or
sbb
insb
xor
cmp
xor
clc
arpl
shlb
sbb
push
test
repz
xorl
out
push
pop
jae
pop
adc
jg
pop
cmp
cmp
adc
imul
adc
pop
cmp
repz
test
push
inc
aad
cmc
pop
dec
insb
mov
data16
jae
aas
int
mov
adc
popf
aaa
xchg
out
lods
rorb
inc
lret
xchg
movsb
call
mov
dec
lret
aam
aad
sub
fildl
loopne
sub
outsl
hlt
dec
les
jmp
add
and
je
sub
and
in
aaa
inc
xor
lahf
dec
outsl
jmp
stos
gs
inc
mov
iret
and
pop
sub
scas
sbb
ja
mov
imul
outsb
jg
push
inc
mov
cmp
cmp
xor
mov
adc
dec
imul
roll
mov
filds
out
divl
lea
xchg
repz
sub
jb
add
mov
xorb
xchg
outsb
sbb
xchg
dec
jne
dec
bnd
xchg
ret
adc
imulb
xchg
push
dec
out
xor
push
xchg
mov
jbe
fimuls
test
scas
cs
test
dec
js
xor
mov
pop
jb
inc
push
popf
popf
mov
aam
xor
pop
iret
rclb
repnz
mov
cwtl
mov
push
adc
push
decb
dec
mov
push
cmpsl
mov
push
cmpsl
jnp
adc
jecxz
push
fildl
jno
xor
popa
and
into
in
inc
xchg
fbstp
add
call
jb
xor
dec
in
fbstp
bound
mov
add
aas
fldt
das
les
aas
dec
stos
pop
shrb
dec
mov
ret
sbb
add
or
orb
loope
add
mov
test
sub
dec
cltd
sbb
and
push
add
sub
push
cmp
lods
pop
aad
dec
or
mov
sub
jl
push
rolb
push
jp
scas
int
and
xchg
imul
jns
mov
mov
adc
mov
xor
mov
adc
cmpsl
sti
xor
sahf
and
or
push
push
lcall
rolb
xor
mov
stc
fdiv
sbb
inc
je
push
shl
rcrl
scas
ret
aaa
jl
ret
mov
pop
ret
xorb
cli
or
mov
incl
adc
xchg
incb
mov
adc
mov
xchg
or
testl
lock
out
mull
js
dec
inc
lahf
leave
jl
mov
addr16
pop
xchg
lcall
cld
pop
add
xchg
or
xor
stc
imul
stos
inc
inc
sbb
pop
out
jbe
sbb
sbb
push
out
pop
movsb
or
in
out
fmuls
les
aas
add
movsl
dec
shr
adc
push
push
repnz
sbb
push
cmp
andl
inc
cmc
jb
in
jmp
inc
add
test
iret
loop
scas
bound
xchg
mov
and
movsl
fs
mov
jp
sahf
sarb
xor
arpl
mov
inc
nop
pop
jb
in
not
cmp
loope
test
lds
leave
sub
adc
lock
mov
pop
les
add
push
xor
mov
mov
dec
mov
mov
into
sub
lock
jmp
stos
in
mov
xlat
add
repz
push
repnz
add
ja
ret
loope
gs
mov
das
xor
mov
add
sti
cmpsl
push
lret
mov
xchg
test
int
ljmp
imul
mov
hlt
push
ljmp
in
mov
loop
mov
pop
sbb
adcl
cmp
out
cmp
or
aam
lret
jns
pop
nop
stc
jg
pop
and
call
aam
inc
stos
bound
jecxz
or
repnz
mov
lret
jae
sbbl
xchg
inc
leave
cli
xchg
ja
jmp
mov
aas
popf
mov
inc
jb
loopne
add
mov
imul
push
ret
ret
je
out
aam
lahf
adc
dec
mov
pop
xor
dec
jno
or
or
mov
fstl
mov
arpl
imul
xor
iret
fldcw
pop
xchg
mov
call
cmpsb
mov
add
mov
jae
hlt
jns
sbb
xor
sbbb
xchg
inc
movsbl
mov
aas
adc
fldt
sti
out
inc
push
bound
ljmp
sbb
movsb
xor
push
rcrb
xchg
out
mov
in
ss
adc
jns
lock
rcl
mov
popf
fmull
or
jne
xor
xchg
sahf
movb
pushf
xor
imul
daa
xchg
jne
mov
xor
outsb
rcrb
in
add
lods
scas
fistpl
sbb
add
inc
sub
and
jne
sub
pop
push
mov
imul
mov
jle
cmc
dec
jmp
sub
mov
xor
fwait
nop
lcall
cs
add
adc
mov
cmp
clc
cli
push
mov
ljmp
data16
xorb
cmp
movsb
dec
jecxz
imul
gs
mov
fdivr
mov
cwtl
lock
loopne
les
es
dec
xor
ffreep
pop
cli
xchg
jb
hlt
cmpb
imul
mov
sarb
inc
or
fiaddl
je
mov
ljmp
or
xchg
dec
or
cmpsb
lcall
test
std
aaa
stos
lds
adc
sub
pop
xor
mov
mov
inc
out
shrb
sti
adcb
subl
sbb
out
out
in
and
xchg
mov
fnstcw
shrl
sarb
pop
jmp
rcll
push
pop
pop
sub
les
js
les
inc
in
jl
jge
mov
cwtl
jae
loope
add
push
js
sbb
sarb
movsb
jge
inc
divb
pop
bound
xor
mov
mov
xlat
out
xor
fistps
mov
shrb
arpl
push
das
lret
push
xchg
out
imull
lcall
xor
rol
sub
mov
push
mov
jbe
pop
jno
cmpsb
jbe
mov
push
lret
mov
or
cmpb
rolb
jmp
decl
popf
jl
adc
test
push
fstps
insl
iret
int3
sbb
test
movl
xchg
xor
or
fisubl
sbb
adc
cwtl
in
and
pusha
sahf
xchg
pop
in
add
inc
rclb
mov
sti
xor
pushf
popa
xor
pop
negl
in
cmp
ja
hlt
pop
insb
pop
lods
cmpsb
lea
mov
mov
dec
js
sbb
testl
and
sub
lret
cli
call
cltd
rcrl
jbe
cli
fwait
stos
xchg
xor
cmp
nop
leave
pop
rolb
and
pop
and
shl
mov
xchg
iret
fcoml
inc
call
mov
fst
shll
fwait
sbb
cwtl
or
cltd
in
jmp
icebp
adc
scas
pop
lcall
push
xlat
lods
cmp
daa
into
ljmp
fstpt
into
in
insb
gs
xchg
xlat
xchg
push
in
mov
lahf
mov
stc
es
hlt
imul
mov
imulb
add
and
and
push
add
in
imul
imul
mov
mov
push
push
and
ret
imul
ret
ret
nopl
mov
imul
testb
jns
mov
push
cld
jno
push
xchg
iret
dec
mov
cli
out
into
xor
std
push
xchg
popa
xor
pop
jns
filds
nop
push
and
pop
cmp
xchg
inc
arpl
sub
mov
pop
push
mov
bound
cli
push
add
loopne
or
mov
js
rclb
pop
mov
mov
sahf
mov
mov
jo
scas
std
or
hlt
lahf
mov
in
add
or
notl
cmp
stc
mov
pusha
sbb
cmp
lods
fistpl
stos
push
stos
in
lds
inc
js
jecxz
push
sbb
dec
sub
push
ljmp
mov
push
test
ret
out
fsts
pop
mov
test
int
mov
orb
xchg
outsb
mov
pop
mov
fwait
scas
cmc
sub
jnp
sahf
dec
jge
and
add
pop
dec
jno
aad
pop
outsb
jmp
std
add
mov
xor
cltd
test
xor
or
adc
dec
sbb
out
xchg
aad
test
push
pop
andl
ss
mov
mov
rcl
loopne
imul
push
adc
mov
nop
stos
aad
mov
je
dec
mov
and
scas
das
aam
mov
inc
adc
fwait
mov
sub
pop
mov
fldcw
push
dec
sti
nop
mov
cmp
clc
inc
jbe
xchg
dec
push
gs
push
loopne
icebp
add
or
pop
xor
inc
loopne
fwait
xchg
or
ja
ret
mov
fnstcw
mov
insl
push
mov
adc
pop
fs
sbb
rcrb
and
icebp
adc
jae
je
scas
xchg
mov
add
pop
stc
xchg
ja
out
pop
jg
and
cmp
in
rorb
in
das
lea
mov
sub
mov
lahf
inc
push
loope
adc
inc
pop
out
lods
popf
xorb
repnz
pushf
test
or
mov
xchg
aaa
mov
or
cltd
mov
call
mov
fistpll
outsl
cmpsb
shrl
pop
push
insl
push
das
pop
fnstenv
push
adc
dec
xchg
iret
sub
push
fnstenv
xor
push
push
iret
xor
sahf
arpl
add
push
cmp
push
sub
sub
lahf
sbb
mov
aaa
xchg
popf
jle
inc
inc
xchg
mov
pop
push
or
adc
inc
or
out
cmp
xor
inc
insl
inc
jno
sub
ffreep
dec
cmp
pop
pop
pop
ret
mov
cmc
push
stos
sbb
mov
and
std
add
dec
sub
xchg
pop
lret
inc
xchg
pusha
xchg
push
mov
sysenter
jbe
repz
and
dec
jle
ret
fucomi
insl
xchg
or
mul
lret
scas
fxch
outsl
pop
jo
dec
inc
push
shlb
out
jge
cli
leave
aad
data16
sub
imull
push
lret
push
or
testl
and
fimuls
pop
popf
dec
loopne
mov
adc
mov
jg
and
sysenter
insb
ret
jo
cmp
ljmp
dec
jno
shll
push
inc
pop
pop
xchg
jg
fwait
outsb
push
repz
push
sbb
push
std
lea
imul
loope
pop
out
lcall
xor
sarl
mov
mov
xchg
lahf
movsb
imul
push
fistpll
loop
push
xor
inc
pop
mov
xchg
fwait
addr16
mov
enter
popa
iret
out
iret
cli
push
push
divl
dec
out
sbb
xor
mov
sbb
les
inc
adc
xor
imul
or
xor
outsb
sub
xor
sahf
jno
and
push
lahf
add
jl
jecxz
inc
inc
sub
mov
push
adc
sub
jp
call
std
loop
sub
push
mov
or
icebp
pop
pop
sti
xor
mov
pop
mov
pop
stc
sbb
ret
sub
adc
push
fidivrs
cld
fincstp
adc
or
aad
cld
cmpsl
push
pop
jmp
inc
gs
jnp
lret
or
push
push
pop
add
xor
and
xor
sbb
rolb
jge
mov
cmp
fmull
insb
fisubrs
and
movsl
sub
cltd
es
pusha
imul
jbe
dec
and
mov
sbb
mov
subl
out
sbb
xor
or
popa
jmp
inc
cs
std
push
push
hlt
or
mov
push
std
xchg
dec
lcall
fucomip
cmp
lods
xorb
fcompl
int
ss
and
imul
and
ss
es
mov
cmp
ret
mov
sub
icebp
xor
outsl
inc
pusha
mov
div
jmp
or
jg
add
xor
add
mov
mov
cmp
add
into
aaa
jl
adc
loope
fucom
dec
fs
sub
mov
ret
dec
inc
ljmp
or
push
mov
push
mov
faddp
xor
mov
mov
inc
negb
jnp
adc
out
jne
movb
mov
pushl
pushl
pushl
pushl
pushl
pushl
pushl
mov
call
pop
pop
leave
ret
push
mov
sub
push
adc
push
movzbl
sbb
push
movl
andl
mov
inc
mov
cmpl
jg
jmp
push
call
cmpl
jne
xor
xor
inc
mov
cmpl
jb
lea
mov
movl
lea
movl
cmpl
je
cmpl
jge
jmp
push
push
pushl
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jle
jmp
push
push
call
jmp
mov
movl
cmpl
je
cmpl
jbe
jmp
pushl
push
push
pushl
call
cmpl
jne
mov
dec
mov
xor
add
dec
mov
jmp
mov
xor
mov
sbb
xor
add
mov
xor
or
mov
and
mov
mov
movzbl
adc
mov
add
and
mov
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jbe
jmp
push
push
pushl
call
cmpl
jne
mov
inc
mov
jmp
mov
movl
cmpl
je
cmpl
jbe
jmp
pushl
call
mov
dec
mov
jmp
mov
movzwl
xor
mov
xor
andl
mov
addl
add
movl
cmp
je
mov
movl
jmp
mov
mov
adc
mov
or
movl
cmp
movl
jne
movl
cmp
movl
jne
movl
push
push
movl
jmp
mov
mov
movl
cmp
jne
movl
cmp
movl
jne
push
push
jmp
mov
mov
cmp
jne
movl
cmp
jne
push
push
jmp
mov
movl
mov
cmp
movl
jne
cmp
jne
movl
push
movl
push
movl
jmp
mov
mov
mov
mov
mov
movl
cmp
movl
jne
cmp
movl
jne
sbbl
mov
or
xor
sbb
add
mov
mov
mov
xor
add
imul
mov
xor
add
cmp
mov
mov
je
mov
add
mov
mov
xor
add
imul
mov
jmp
mov
xor
mov
mov
xor
sub
add
mov
mov
add
mov
mov
mov
xor
xor
lea
mov
xor
add
imul
mov
xor
sub
mov
add
cmp
mov
mov
jg
xor
mov
sub
add
jmp
xor
add
add
mov
mov
mov
xor
add
movl
mov
not
movl
mov
mov
mov
and
mov
xor
mov
add
cmp
je
mov
xor
movl
movl
mov
sub
movl
add
movl
mov
mov
mov
xor
add
cmp
jne
mov
mov
mov
lea
mov
mov
mov
xor
add
mov
mov
xor
mov
add
cmp
je
mov
add
mov
mov
mov
mov
xor
mov
mov
add
cmp
jne
mov
mov
mov
jmp
pushl
pushl
jmp
mov
mov
cmp
jne
cmp
jne
push
push
pushl
pushl
pushl
pushl
call
pop
pop
pop
leave
ret
push
mov
and
sub
orl
push
xorl
push
push
orl
lea
push
subl
push
call
movl
cmp
movl
je
subl
push
adcl
push
adcl
call
movl
jmp
andl
mov
addl
push
lea
push
push
push
movl
push
addl
call
imul
cmp
movl
je
xor
movl
jmp
addl
lea
orl
push
addl
push
xorl
call
test
movl
jne
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jg
jmp
pushl
pushl
call
cmpl
jne
xor
or
inc
mov
jmp
mov
mov
andl
mov
inc
mov
cmpl
jl
jmp
push
push
push
push
call
cmpl
jb
mov
mov
mov
sub
add
movl
mov
xor
or
sub
and
lea
or
mov
adcl
lea
andl
mov
inc
mov
cmpl
jle
jmp
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
xor
add
mov
sub
add
mov
mov
mov
adc
mov
xor
mov
adc
xor
mov
sbb
mov
mov
add
movl
mov
mov
cmp
jne
andl
mov
inc
mov
cmpl
ja
jmp
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
andl
jmp
xor
add
inc
mov
cmpl
jae
cmpl
ja
jmp
push
pushl
push
push
push
push
call
cmpl
jne
mov
inc
mov
jmp
mov
addl
mov
sbbl
xor
add
subl
mov
sbb
mov
xor
addl
add
orl
mov
mov
xor
adcl
add
sbbl
mov
sub
mov
adcl
mov
adcl
mov
orl
mov
not
mov
sbbl
mov
mov
sbbl
mov
mov
subl
mov
movl
andl
mov
addl
xor
add
jmp
orl
lea
push
push
call
movl
cmp
movl
jne
xorl
push
subl
lea
push
push
push
addl
push
decl
call
imul
cmp
jne
sbbl
lea
push
orl
push
addl
call
xorl
test
movl
jne
mov
mov
orl
xor
andl
lea
push
sub
mov
xor
lea
addl
push
adc
mov
pushl
andl
call
mov
neg
mov
xor
lea
adc
mov
add
mov
andl
xor
xor
notl
add
mov
and
mov
xor
movl
lea
movl
mov
cmp
jbe
xor
mov
adc
mov
mov
adc
mov
inc
mov
mov
and
mov
sub
sbbl
xor
xorl
mov
subl
lea
mov
lea
sbbl
mov
lea
push
xorl
push
movl
call
cmp
jne
push
lea
subl
push
orl
push
push
sbbl
push
xorl
call
imul
movl
cmp
movl
jne
lea
push
push
andl
call
sbbl
test
movl
jne
subl
lea
sbbl
push
push
adcl
call
movl
cmp
jne
adcl
push
lea
orl
push
push
decl
push
push
subl
call
imul
movl
cmp
movl
jne
lea
andl
push
addl
push
andl
call
movl
test
jne
andl
lea
push
addl
push
call
movl
cmp
jne
sbbl
push
subl
lea
push
push
push
push
call
andl
imul
cmp
movl
jne
lea
push
negl
push
call
sbbl
test
movl
jne
orl
lea
push
push
sbbl
call
cmp
movl
jne
push
orl
lea
push
push
xorl
push
subl
push
addl
call
addl
imul
movl
cmp
movl
jne
adcl
lea
orl
push
push
call
andl
test
movl
jne
decl
lea
decl
push
orl
push
addl
call
cmp
movl
jne
push
addl
lea
xorl
push
push
subl
push
push
orl
call
andl
imul
movl
cmp
jne
addl
lea
subl
push
sbbl
push
adcl
call
orl
test
jne
andl
lea
xorl
push
push
call
movl
cmp
movl
jne
subl
push
adcl
lea
andl
push
push
subl
push
movl
push
call
incl
imul
cmp
movl
jne
orl
lea
movl
push
adcl
push
andl
call
sbbl
test
movl
jne
subl
lea
addl
push
andl
push
sbbl
call
movl
cmp
movl
jne
orl
push
lea
orl
push
push
push
push
addl
call
xorl
imul
movl
cmp
jne
lea
xorl
push
push
call
test
jne
addl
lea
push
adcl
push
orl
call
movl
cmp
movl
jne
addl
push
lea
xorl
push
push
addl
push
push
xorl
call
xorl
imul
movl
cmp
movl
jne
orl
lea
push
push
call
test
jne
lea
push
push
call
cmp
jne
push
lea
push
push
push
push
call
imul
cmp
jne
lea
push
push
call
test
jne
lea
push
push
call
cmp
jne
push
lea
push
push
push
push
call
imul
cmp
jne
lea
push
push
call
test
jne
lea
push
push
call
cmp
jne
push
lea
push
push
push
push
call
imul
cmp
jne
lea
push
push
call
test
jne
lea
push
push
call
cmp
jne
push
lea
push
push
push
push
call
imul
cmp
jne
lea
push
push
call
test
jne
mov
cmp
je
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
pushl
mov
pushl
add
mov
mov
pushl
call
mov
mov
mov
jmp
mov
mov
xor
add
cmp
jne
mov
mov
mov
xor
add
cmp
jne
mov
push
push
xor
add
push
push
pushl
pushl
call
pushl
pushl
call
mov
xor
add
mov
mov
xor
add
mov
mov
test
je
lea
movl
push
movl
movl
push
movl
call
cmp
jne
push
lea
push
push
push
push
call
imul
cmp
jne
lea
push
push
call
test
jne
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
andl
mov
add
adcl
mov
xor
mov
mov
xor
cmpl
mov
jne
cmp
je
mov
mov
cltd
add
adc
andl
xor
mov
mov
mov
xor
add
mov
adcl
xor
mov
mov
xor
mov
cmp
jne
mov
cmp
je
mov
add
mov
jmp
mov
mov
xor
mov
mov
mov
add
mov
mov
xor
add
xor
add
adc
xor
xor
xor
add
adc
xor
xor
cmp
jne
cmp
jne
mov
mov
lea
push
push
call
cmp
jne
push
lea
push
push
push
push
call
imul
cmp
jne
lea
push
push
call
test
jne
mov
push
add
push
lea
push
call
mov
mov
pop
pop
pop
mov
pop
ret
push
mov
sub
mov
movl
cmpl
je
cmpl
jbe
jmp
push
push
push
push
call
cmpl
jne
xor
add
dec
mov
mov
dec
mov
jmp
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jg
jmp
push
call
cmpl
jne
mov
inc
mov
jmp
movl
mov
or
mov
mov
not
push
and
mov
xor
adc
mov
andl
push
adc
mov
xorl
add
movl
cmp
movl
je
xor
mov
sbbl
mov
subl
xor
xor
xorl
add
add
adc
xor
mov
push
xor
xor
mov
add
adc
xor
xor
cmp
jne
cmp
je
jmp
mov
mov
mov
xor
add
mov
imul
mov
xor
add
mov
mov
mov
mov
xor
xor
add
adc
lea
xor
xor
xor
mov
add
adc
xor
xor
cmp
jne
cmp
jne
mov
pop
pop
pop
leave
ret
push
mov
push
andl
jmp
xor
xor
inc
mov
cmpl
jae
cmpl
jg
jmp
push
call
jmp
movl
andl
xor
xor
inc
mov
cmpl
jle
jmp
push
push
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
movsbl
mov
sub
mov
xor
cmp
jne
mov
push
mov
add
mov
mov
mov
xor
add
cmp
pop
je
mov
jmp
mov
xor
add
leave
ret
push
mov
sub
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jle
jmp
push
push
call
cmpl
jne
mov
inc
mov
jmp
push
andl
xor
or
inc
mov
cmpl
jl
jmp
pushl
pushl
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
orl
mov
andl
jmp
xor
xor
inc
mov
cmpl
jae
cmpl
jge
jmp
push
push
pushl
call
cmpl
jne
mov
inc
mov
jmp
movl
push
mov
mov
mov
mov
xor
xor
mov
add
add
imul
mov
jmp
jge
jnp
mov
mov
jmp
add
rcll
insb
addl
stc
dec
pop
xlat
or
or
inc
int3
inc
xor
dec
push
jmp
mov
xor
int
insb
clc
add
jae
xchg
fdivr
xor
inc
mov
gs
das
and
jmp
pop
sub
pop
sub
lds
jo
and
ljmp
adc
dec
mov
mov
shlb
pusha
mov
mov
xchg
cmp
mov
cld
icebp
pop
sbb
inc
fcmovu
or
mov
stc
adc
mov
in
push
mov
sahf
ret
mov
xchg
insb
aam
les
sbb
add
fwait
in
pop
mov
xchg
fs
adc
dec
push
stos
call
jg
mov
imul
orl
xor
pop
ds
lahf
cli
mov
push
icebp
adc
fisttpll
insb
mov
sbb
shr
lcall
test
stc
rol
cmp
xor
mov
xchg
fsqrt
addr16
jge
xchg
mul
shlb
inc
popa
subl
sbb
cld
addr16
test
inc
xchg
pop
icebp
lret
outsb
cmpsb
int
bsr
jb
and
les
shlb
dec
mov
out
and
call
loop
mov
dec
rcrb
aaa
fildll
and
mov
cmp
movsb
fldz
nop
test
and
mov
fstl
lods
lock
or
imul
sub
jne
jecxz
cwtl
into
sub
cmp
imul
imul
cmp
dec
rcll
sbb
negb
jecxz
mov
in
push
push
stos
aas
test
xchg
sahf
mov
inc
pop
adc
fwait
lods
testb
call
xchg
popf
bound
mov
cli
dec
jne
movsl
scas
in
test
push
mov
les
movq
roll
inc
sbb
jo
test
cmpsb
jnp
sti
xor
mov
or
sub
push
jge
cld
xor
mov
pushf
xor
popf
scas
push
dec
notb
ja
popa
or
enter
pop
pop
pop
sti
pop
sahf
ja
ljmp
lods
flds
stos
int3
push
adc
adc
mov
xlat
lret
repz
or
sub
popa
pop
xchg
add
xchg
addr16
scas
cld
xlat
pop
lret
dec
mov
loop
pop
xchg
xor
shlb
xor
sbb
loop
mov
jge
out
rol
xchg
test
clc
stos
dec
idivb
mov
sbb
aad
imul
mov
inc
mov
mov
inc
leave
pop
in
cwtl
xchg
sbb
push
daa
in
xlat
je
insb
fdivrs
int
push
jae
push
sub
imul
hlt
and
sbb
mov
sbb
sbbl
xchg
cs
inc
movb
sbb
fcom
mov
call
std
mov
test
mov
call
addr16
xchg
jo
mov
subl
gs
xchg
out
addl
xor
dec
lcall
out
push
orb
addr16
xchg
sub
mov
mov
int
mov
mov
sbb
stos
push
mov
cmp
adc
cmp
cwtl
imul
and
repz
cmp
jno
ds
stos
xor
xchg
inc
jecxz
rcl
xlat
adc
aam
jl
inc
int
pop
popf
lret
cmc
leave
daa
push
push
insb
aam
or
push
mov
inc
imulb
adc
nop
pusha
pop
jb
adc
and
inc
test
adc
sbb
test
shr
and
comiss
push
ret
rcrl
inc
ffreep
adc
adc
sar
aad
fsubrs
lahf
sbb
decb
push
dec
push
and
sub
lcall
mov
and
mov
and
add
leave
jo
test
lock
addl
xor
ficoml
out
popa
push
out
jmp
test
out
inc
pop
enter
orl
arpl
add
test
out
js
sub
jo
js
jnp
stos
rclb
hlt
jns
sbb
mov
rol
call
pop
jp
cmp
int3
xchg
pop
loope
push
fistpl
aad
pop
cmp
dec
popf
xchg
jno
sub
jnp
pop
gs
and
sub
lret
fwait
ljmp
adc
pusha
mov
or
mov
stos
and
jns
add
int
and
lahf
mov
push
rcrb
xchg
push
xchg
insl
xchg
aaa
mull
mov
cmp
sahf
subb
idiv
jnp
test
mov
push
push
sbb
test
cli
adc
test
gs
movl
dec
fldcw
test
xor
je
add
inc
aas
dec
in
or
xchg
sub
aas
jge
test
pop
sti
pop
sbb
cltd
dec
jmp
cltd
dec
push
xor
adc
stos
ret
xor
jae
jne
pop
outsb
jnp
sub
movsl
or
popa
pop
daa
pop
adc
sub
xor
mov
xor
adc
and
je
scas
mov
lahf
cmp
xor
aas
sub
lock
cli
dec
cmc
sub
or
scas
lods
fisttpll
mov
enter
scas
popa
es
xchg
cmc
or
jmp
add
xchg
lcall
cmp
daa
mov
ret
and
xchg
nop
sub
fwait
push
test
cmp
push
add
lods
push
dec
stos
loopne
and
sub
xlat
and
out
lcall
pop
sub
out
jbe
xor
mov
sbb
out
fiadds
cwtl
mov
adc
mov
test
testl
mov
xchg
out
in
cs
lds
into
icebp
xor
sub
inc
and
xor
mov
mov
rclb
out
outsl
imul
fisubrl
inc
lret
sbb
mov
and
add
add
out
cmp
fbstp
repnz
push
outsb
daa
shrb
pop
subl
jp
roll
adcl
cmp
stos
jp
imul
bound
mov
out
mov
xchg
dec
jge
mov
mov
ljmp
jecxz
xchg
dec
std
mov
xchg
ret
iret
orl
cli
jle
mov
js
sub
push
xchg
in
or
hlt
push
inc
je
jg
pop
xchg
push
mov
xchg
pushf
fldcw
aas
sbb
lahf
pop
ffreep
popf
pop
sub
ds
into
rcll
ret
int
nop
jg
mov
dec
lcall
and
or
addr16
pushf
lock
mov
sub
pop
cmc
lahf
addr16
test
push
mov
bound
jle
adc
lret
int
push
lock
mov
or
mov
lret
daa
gs
arpl
orl
popa
loopne
xor
jp
sahf
loopne
push
ljmp
xchg
push
adc
mov
mov
jp
inc
or
lea
or
loop
out
loopne
mov
mov
dec
lods
inc
sbb
dec
int
insl
xor
inc
cmp
je
rcrb
add
fists
dec
cmp
xor
stc
je
test
jmp
cmc
jge
or
clc
sub
cmp
lds
inc
xchg
scas
pop
je
jge
adc
push
popa
loope
jecxz
outsl
imul
pop
cmc
xchg
jge
pop
pop
hlt
dec
jp
sbb
inc
dec
xchg
jg
pop
xor
std
adc
in
rol
ja
lret
add
sub
mov
dec
adc
jecxz
test
mov
sbb
adc
pushf
nop
jge
dec
and
icebp
xchg
js
insb
jo
jns
jp
popa
sub
sub
stos
pop
mov
xlat
into
push
mov
xor
bound
inc
fwait
xchg
loopne
cmp
adc
mov
cs
push
inc
das
mov
int
mov
sub
pop
std
enter
pop
xchg
jno
and
icebp
adc
jle
inc
arpl
inc
inc
out
mov
lods
ds
pop
sub
orl
and
jb
idivb
arpl
rorl
outsl
js
out
sub
pop
fwait
mov
inc
fildll
add
dec
es
mov
cmp
jle
cvtps2pd
inc
shrb
je
nop
jne
sarl
jbe
sbb
in
mov
ljmp
xchg
jg
fimull
push
jl
add
pop
bound
sub
mov
dec
jecxz
pop
add
mov
arpl
jo
and
jnp
js
movsl
in
int3
sbb
adcl
pop
sbb
mov
xor
push
pop
cs
lret
and
pop
lahf
mov
insl
movsb
popf
dec
pop
dec
sahf
push
jp
mov
xchg
lods
mov
add
imul
cmp
sub
dec
fisubrs
mov
sbb
cmpsl
data16
sbb
inc
add
lcall
mov
cmp
in
xchg
in
pop
xchg
push
xor
cmp
or
push
inc
xchg
sub
and
out
push
fcoml
movsb
fucomi
gs
jo
mov
shlb
or
not
push
ljmp
inc
icebp
stos
add
xchg
and
enter
mov
scas
flds
adc
das
sti
jno
mov
lahf
or
aam
sbb
mov
stos
inc
movsl
mov
push
cwtl
test
cmp
cmp
pop
or
cmp
mov
push
repnz
loopne
pop
sti
fcmovnu
and
into
jno
push
cld
test
and
ljmp
xchg
inc
or
inc
jne
loopne
sub
js
mov
push
cmp
add
jnp
push
xchg
outsb
lahf
xor
int
cs
rcrb
cmp
xlat
shll
mov
clc
call
andb
push
jb
in
push
cld
popf
inc
jmp
inc
cmp
ror
adc
sub
subb
or
jmp
cmpb
hlt
adc
mov
mov
decl
js
insb
fidivrl
aaa
xchg
arpl
in
pop
imul
and
xchg
jo
movsl
stos
call
push
mov
mov
fstpt
rcrb
pushf
aas
into
xor
xchg
js
mov
add
xor
sbb
les
daa
push
push
arpl
in
in
mov
adc
jnp
mov
lret
push
or
cwtl
icebp
push
rclb
push
xchg
imul
scas
into
aaa
pop
or
rcll
sub
ds
and
or
gs
jno
sub
rorl
cwtl
pushw
pop
add
cmp
mov
in
jg
daa
and
and
xor
inc
adc
mov
ljmp
call
push
or
pop
icebp
xchg
add
shlb
rcll
mov
lods
mov
pop
push
js
or
sub
fisttps
add
inc
int
or
scas
jnp
dec
xchg
mov
xlat
ljmp
inc
pop
int
or
mov
pop
add
mov
cmp
roll
lock
pusha
sub
popf
out
xlat
pop
popf
loope
jbe
push
andl
inc
sti
xor
xchg
insb
nop
or
cmc
sti
xchg
cmp
in
cmc
loop
and
bound
stc
repz
pop
repz
mov
stos
pop
pop
stos
dec
pop
pop
jns
or
jp
cmp
mov
xor
push
xor
mov
sbb
out
cmp
or
and
je
test
mov
pop
mov
stos
adc
test
cmp
cmp
jb
shl
fiaddl
rcr
or
push
add
jg
push
movsl
mov
adc
adc
inc
test
inc
bound
adc
repz
pop
rorb
iret
data16
addr16
inc
adc
mov
xchg
data16
mov
xchg
adc
fdiv
test
movsl
lds
inc
arpl
mov
cmpsb
mov
adc
je
lahf
ss
ss
mov
mov
jecxz
movsl
test
xchg
pop
test
push
sub
mov
mov
pop
dec
dec
dec
cmp
mov
mov
xchg
inc
bound
fdivl
pop
jae
xchg
xchg
cmp
jle
repnz
hlt
lods
insb
mov
mov
les
stc
xor
pop
mov
jne
lods
pop
dec
inc
out
fdivp
fnstsw
xchg
test
cmp
imul
dec
push
loop
pop
mov
pop
cmp
xchg
mov
rolb
mov
rolb
scas
sub
push
les
ret
sti
push
shld
push
jne
pop
xchg
mov
inc
popf
es
mov
and
sub
fnsave
fbld
ljmp
sarl
jb
outsl
sub
mov
sbb
push
std
pop
xor
push
mov
in
inc
out
inc
mov
jmp
mov
mov
popf
lea
mov
dec
ljmp
mov
outsb
mov
xor
xchg
mov
cli
adc
loop
cmc
into
jp
std
ljmp
ss
out
arpl
sti
test
loopne
lret
lock
data16
or
jno
ljmp
push
or
add
add
cld
inc
int3
rol
mov
jmp
jne
and
stc
sahf
add
xor
ljmp
test
pop
arpl
fbstp
shll
mov
push
sahf
stc
mov
cltd
adc
jnp
faddl
int
rorl
clc
mov
inc
cmp
cmp
and
push
and
add
out
mov
call
xchg
push
push
sub
addr16
pop
jnp
push
add
and
je
mov
and
pop
stc
pop
fisubs
or
mov
add
jo
push
sub
and
inc
imul
xchg
imul
xor
ret
orb
add
mov
sub
sub
sbb
dec
dec
and
mov
lods
imul
clc
mov
or
xor
push
mov
outsb
dec
mov
clc
rcrl
cmp
psubusb
push
pushl
push
push
sbb
mov
xchg
lods
push
sti
inc
lret
sub
pop
int3
xlat
xor
aam
push
pop
imul
cmp
or
inc
lahf
or
test
push
imul
out
xor
imul
js
loop
std
neg
idivb
sub
dec
in
xor
fs
xor
enter
test
push
push
jecxz
aaa
scas
into
data16
cmp
sti
pop
cmp
and
pop
push
lret
pop
inc
loop
sbb
xchg
dec
in
das
pop
dec
cmc
testl
scas
adc
mov
mov
in
repz
mov
jne
or
adc
xor
push
mov
pop
orb
pop
dec
jo
mov
mov
add
cmpsb
jmp
lea
jmp
add
fbld
sub
xchg
xor
xchg
push
adc
mov
pushf
ret
hlt
adc
jne
add
les
sbb
les
push
and
mov
mov
popa
in
outsl
mov
inc
aam
pop
or
lahf
aas
in
in
out
mov
xor
lea
aad
call
ds
popf
fmuls
mov
pop
and
jns
popf
push
nop
xlat
in
xor
jl
pop
js
mov
cmp
xor
xchg
jnp
cmpsl
sub
cmp
push
sub
jmp
ds
in
loop
xlat
rcr
mov
out
xlat
test
iret
pop
dec
enter
hlt
in
mov
stos
or
aas
cmpsl
and
in
pop
push
push
push
lcall
xchg
les
xlat
or
inc
call
mov
add
add
sti
out
in
cmp
pusha
imul
ljmp
pop
cmpsb
fidivrl
imul
mov
idivb
sbb
int
jl
ret
outsl
sbb
jp
fstl
cltd
es
inc
jg
aaa
mov
cmp
in
scas
mov
cmp
daa
jge
addr16
or
stos
add
cmp
ss
repz
xor
lds
pop
xor
rorl
bound
mov
inc
sub
test
jo
loope
adc
sub
aaa
filds
cmpsl
dec
int
and
dec
mov
aad
mov
out
cwtl
cmpsl
outsl
outsb
movsb
mov
mov
pushf
xor
lock
push
jmp
loop
cltd
imul
mov
jg
sbb
movsl
mov
jmp
mov
xchg
aas
test
push
out
sbb
repnz
es
cmc
mov
mov
xor
add
pusha
add
dec
addr16
enter
mov
xchg
dec
fistpl
sbb
rclb
or
xchg
sar
fs
and
xchg
sbb
clc
or
dec
or
sbb
aas
mov
lret
and
out
xchg
and
and
int
jns
fistpll
or
push
sbb
pop
add
leave
adc
pop
cmp
xchg
lock
dec
jns
lock
and
pop
int
xchg
fwait
pop
leave
movsl
dec
cmp
sahf
sbb
sbb
shl
outsb
push
lcall
mov
stc
fisubrl
in
pop
mov
or
jl
sub
or
push
sub
lret
lahf
jmp
mov
out
test
fmul
xchg
ljmp
std
cli
dec
call
mov
ss
jmp
dec
adc
lret
popf
stos
pop
aaa
jmp
cmp
popf
xlat
addr16
jg
pop
push
push
incb
lods
push
mov
ficoml
sbb
nop
fmull
out
sub
sub
jg
movsb
dec
mov
mov
push
dec
out
sbb
ljmp
cltd
xchg
sbb
pop
insl
sbb
sahf
mov
xlat
or
out
lds
bound
sub
iret
jae
push
call
sbb
xchg
mov
pop
cmpl
mov
jmp
xchg
dec
idivb
scas
std
dec
cwtl
mov
popa
xor
lods
inc
ljmp
lcall
inc
sbb
push
and
xor
sub
push
sbb
aad
insl
inc
hlt
mov
leave
pop
not
fbstp
das
test
incb
xchg
mov
or
dec
and
data16
int
hlt
lds
dec
into
scas
sbb
jle
testb
clc
je
mov
mov
mov
xor
lea
mov
mov
mov
mov
xor
xor
add
add
imul
mov
cmp
je
mov
xor
mov
add
imul
add
mov
mov
jmp
mov
mov
xor
xor
add
add
imul
pop
pop
leave
ret
add
int3
cmp
dec
add
add
add
add
add
add
dec
add
add
add
push
push
inc
push
lea
imul
repnz
xchg
clc
inc
add
add
add
pop
push
jns
and
and
outsb
pop
inc
imul
outsb
jae
fs
or
add
push
mov
xchg
mov
cmp
jne
mov
cmp
jne
mov
mov
mov
mov
mov
mov
mov
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
xor
lea
movzbl
xor
add
inc
mov
cmp
jb
xor
lea
movzbl
xor
add
inc
mov
cmp
jb
xor
lea
movzbl
xor
add
inc
mov
cmp
jb
lea
mov
mov
mov
mov
mov
push
push
mov
mov
cmp
jne
lea
mov
mov
mov
add
mov
lea
mov
add
mov
lea
mov
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
lea
push
mov
mov
xor
add
push
mov
lea
mov
lea
push
mov
mov
mov
mov
mov
movl
movl
movl
movl
pushl
mov
call
mov
mov
test
je
xorl
jmp
mov
mov
mov
xor
cmp
jne
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
mov
movl
movl
lea
pop
mov
xor
add
mov
inc
dec
jne
lea
mov
lea
push
mov
xor
add
push
mov
add
push
mov
mov
movl
pushl
mov
call
mov
xor
add
mov
cmp
jne
mov
or
mov
add
mov
mov
mov
mov
add
mov
mov
mov
mov
add
mov
mov
mov
add
mov
mov
mov
mov
mov
mov
lea
mov
mov
mov
mov
mov
mov
mov
lea
mov
add
mov
lea
mov
mov
mov
mov
movzwl
xor
add
xor
mov
mov
movzwl
xor
add
xor
mov
xor
mov
mov
mov
lea
lea
movl
mov
call
mov
lea
push
mov
xor
add
push
lea
push
pushl
mov
call
mov
lea
lea
mov
call
mov
mov
mov
pushl
pushl
pushl
pushl
pushl
pushl
pushl
call
test
je
add
pushl
lea
call
mov
mov
mov
xor
add
mov
jne
mov
mov
pushl
mov
call
jmp
mov
mov
add
mov
mov
decl
mov
mov
mov
lea
mov
mov
mov
mov
add
pop
pop
pop
leave
ret
push
push
push
push
mov
mov
add
push
cld
mov
add
push
mov
lods
xchg
push
mov
or
shl
not
push
mov
or
shl
not
push
add
mov
sub
sub
inc
push
push
push
push
push
push
sub
push
or
mov
shl
lea
mov
shr
rep
push
pop
call
loop
lea
lea
mov
mov
sub
and
mov
mov
call
jne
mov
and
shl
sub
neg
shr
pop
add
pop
lea
shl
cmp
pop
lea
push
push
mov
push
mov
jb
mov
sub
movzbl
mov
shl
mov
and
add
lea
call
mov
shr
and
cmp
mov
jne
cmp
jb
jmp
mov
call
inc
inc
sub
sub
cmp
jb
pop
inc
cmp
dec
mov
jb
inc
cmp
dec
mov
dec
jb
mov
dec
sub
push
jmp
mov
dec
call
jne
pop
pop
pop
pop
pop
pop
pushl
push
push
mov
mov
jmp
mov
dec
call
jne
mov
dec
call
jne
pop
cmp
mov
jb
mov
push
mov
sub
cmp
jb
lods
mov
stos
jmp
mov
call
mov
je
mov
call
mov
je
mov
mov
mov
mov
mov
mov
mov
mov
pop
pop
pop
mov
mov
add
push
push
cmp
mov
jb
add
push
mov
call
jne
mov
mov
shl
sub
push
pop
lea
jmp
mov
add
call
jne
mov
mov
shl
push
pop
push
pop
lea
jmp
mov
add
push
pop
mov
mov
sub
inc
mov
call
mov
sub
jb
add
cmpl
jae
addl
mov
cmp
jb
push
pop
mov
shl
sub
inc
push
pop
lea
mov
call
mov
sub
jb
mov
mov
cmp
jb
mov
andl
shr
orl
dec
cmp
jae
mov
sub
mov
shlb
add
shl
add
mov
jmp
sub
call
shr
shll
cmp
jb
incl
sub
dec
jne
mov
add
mov
shll
push
pop
sub
inc
mov
mov
call
test
je
or
shl
dec
jne
jmp
incl
mov
add
mov
mov
sub
cmp
ja
mov
sub
mov
lods
stos
cmp
jae
dec
jne
mov
movzbl
cmp
jb
call
sub
lea
mov
mov
sub
mov
mov
cmp
sbb
add
jmp
jmp
ja
mov
pop
test
mov
imul
sbb
test
scas
popf
or
mov
fwait
les
sets
mov
popf
fwait
mov
stos
mov
mov
ja
mov
mov
sbb
test
mov
mov
xchg
test
push
and
mov
movzwl
shr
imul
cmp
jae
mov
mov
sub
shr
add
add
lea
ret
shr
sub
sub
sub
add
add
lea
ret
push
mov
sub
push
push
push
movl
movl
mov
mov
mov
mov
xor
mov
add
mov
mov
xor
add
mov
mov
xor
add
mov
mov
xor
add
mov
movl
movl
movl
push
pop
mov
mov
push
pop
mov
mov
movl
movl
mov
xor
add
mov
mov
xor
add
mov
movl
movl
movl
lea
lea
call
decl
jne
decl
jne
decl
jne
movl
mov
xor
mov
add
mov
mov
andl
xor
add
mov
mov
mov
mov
mov
mov
mov
mov
lea
mov
mov
lea
mov
mov
pushl
lea
mov
call
mov
xor
add
cmp
je
mov
mov
mov
mov
mov
mov
add
mov
mov
lea
push
mov
mov
mov
add
push
pushl
push
call
pushl
xor
movl
movl
movl
movb
lea
stos
stos
stos
xor
movl
movl
movl
movb
lea
stos
stos
stos
mov
mov
mov
movl
movl
movw
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
call
push
mov
mov
pushl
call
test
jne
mov
mov
mov
add
mov
mov
mov
call
push
mov
call
test
jne
mov
mov
mov
add
mov
mov
mov
call
push
mov
call
mov
mov
xor
add
cmp
je
mov
xor
mov
sub
add
mov
cmp
ja
movl
pushl
mov
mov
mov
call
push
mov
mov
pushl
call
mov
mov
mov
mov
mov
mov
xor
lea
call
push
mov
mov
pushl
call
mov
mov
mov
mov
xor
lea
call
push
mov
mov
pushl
call
mov
mov
mov
xor
lea
call
push
mov
mov
pushl
call
andl
mov
mov
and
add
push
call
test
je
mov
push
xor
pop
div
add
movzbl
push
call
test
jne
mov
mov
mov
xor
lea
call
push
mov
mov
pushl
call
mov
jmp
andl
incl
cmpl
jb
mov
mov
xor
mov
add
lea
call
push
mov
mov
xor
add
lea
call
push
call
mov
xor
add
cmp
jne
movl
mov
mov
xor
lea
mov
mov
test
je
mov
mov
xor
lea
mov
mov
xor
mov
sub
add
mov
cmp
jbe
mov
mov
mov
cmp
jne
pushl
lea
push
call
mov
jmp
mov
mov
xor
add
xor
mov
mov
xor
add
cmp
je
mov
mov
xor
add
cmp
je
mov
xor
add
jmp
mov
mov
and
or
sub
add
mov
xor
lea
mov
cmp
jb
mov
mov
mov
movl
mov
mov
mov
mov
xor
add
mov
mov
xor
add
mov
movl
movl
mov
mov
xor
add
cmp
je
jmp
mov
mov
sub
mov
xor
add
xor
div
mov
mov
mov
xor
add
cmp
jbe
mov
xor
add
mov
mov
mov
xor
add
imul
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
add
movl
mov
movl
mov
movl
mov
mov
xor
add
jmp
movl
movl
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
xor
add
add
imul
add
mov
mov
mov
cmp
jb
mov
mov
xor
add
imul
mov
xor
add
or
mov
xor
add
mov
xor
add
mov
lea
jmp
mov
mov
xor
lea
mov
mov
xor
mov
sub
add
mov
mov
xor
add
imul
cmp
jbe
mov
mov
mov
mov
mov
xor
add
push
mov
xor
add
push
push
mov
mov
xor
add
push
call
mov
mov
xor
add
cmp
je
mov
jmp
mov
xor
mov
mov
mov
xor
lea
xor
mov
sub
xor
cmp
jne
mov
mov
mov
xor
add
push
mov
xor
add
push
pushl
call
mov
mov
mov
mov
mov
mov
xor
mov
add
movl
movl
jmp
xor
mov
xor
add
mov
movsbl
movzbl
cmp
jne
mov
mov
xor
lea
xor
cmp
jne
jmp
mov
xor
add
mov
xor
add
cmp
je
mov
movl
movl
movl
movl
mov
mov
mov
xor
add
push
mov
mov
xor
add
push
mov
xor
add
push
mov
xor
add
push
call
mov
mov
mov
mov
xor
add
push
mov
xor
add
push
mov
pushl
xor
add
push
call
mov
xor
add
mov
cmp
je
mov
xor
add
cmp
je
movl
movl
mov
xor
sub
mov
mov
xor
sub
mov
mov
xor
sub
mov
andl
andl
lea
push
pushl
push
lea
push
mov
pushl
mov
add
push
push
call
mov
mov
mov
mov
xor
add
push
mov
xor
add
push
push
call
mov
add
xor
cmp
mov
mov
mov
jne
xor
add
push
mov
xor
add
push
pushl
call
mov
mov
mov
mov
jmp
xor
add
push
mov
xor
add
push
pushl
call
mov
mov
mov
movl
mov
mov
mov
mov
xor
add
mov
mov
xor
add
mov
movl
movl
mov
mov
xor
add
cmp
je
jmp
mov
mov
sub
mov
xor
add
xor
div
mov
mov
mov
xor
add
cmp
jbe
mov
xor
add
mov
mov
mov
xor
add
imul
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
add
movl
mov
movl
mov
movl
mov
mov
xor
add
jmp
movl
movl
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
xor
add
add
imul
add
mov
mov
mov
cmp
jb
mov
mov
xor
add
imul
mov
xor
add
or
mov
xor
add
mov
xor
add
mov
lea
jmp
mov
mov
xor
lea
mov
mov
xor
mov
sub
add
mov
mov
xor
add
imul
cmp
jbe
pushl
mov
pushl
lea
push
mov
mov
pushl
mov
mov
pushl
pushl
pushl
call
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
xor
add
push
mov
xor
add
push
pushl
call
pop
pop
pop
leave
ret
push
mov
push
push
lea
mov
push
mov
mov
mov
mov
cmp
pop
jne
movb
movb
movb
movb
leave
ret
push
mov
push
push
lea
mov
mov
mov
mov
mov
cmp
jne
mov
movb
movb
movb
movb
leave
ret
push
mov
push
push
lea
mov
mov
mov
mov
mov
cmp
jne
movb
mov
movb
movb
leave
ret
push
mov
push
push
lea
mov
push
mov
mov
mov
mov
cmp
pop
jne
movb
movw
movb
leave
ret
push
mov
push
push
lea
mov
mov
mov
mov
mov
cmp
jne
mov
movb
movb
movb
leave
ret
push
mov
call
mov
mov
movb
call
push
mov
movb
call
push
movb
call
movb
mov
jmp
push
mov
push
mov
push
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
movl
mov
movzwl
xor
add
pop
test
je
mov
movl
leave
ret
push
mov
sub
andl
movl
movl
movl
movl
movl
mov
mov
mov
mov
push
push
mov
mov
mov
mov
mov
push
mov
test
jne
pushl
mov
call
mov
mov
add
mov
mov
mov
mov
xor
mov
add
cmp
jne
mov
mov
mov
mov
mov
mov
xor
add
mov
mov
andl
xor
add
mov
lea
push
mov
xor
add
push
mov
add
push
mov
mov
movl
pushl
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
mov
lea
mov
lea
push
mov
xor
add
push
mov
add
push
mov
mov
movl
pushl
mov
call
test
je
andl
cmpl
jbe
mov
mov
sub
mov
incl
mov
mov
inc
cmp
jb
mov
mov
add
mov
mov
add
sub
add
mov
mov
mov
movl
jmp
add
shr
mov
je
lea
mov
mov
mov
mov
movzwl
mov
and
mov
mov
shr
add
xor
cmp
jne
mov
add
mov
cmpl
je
mov
add
mov
mov
mov
mov
addl
decl
jne
mov
add
mov
cmp
jae
add
mov
mov
test
jne
mov
mov
movl
mov
mov
mov
xor
add
mov
lea
mov
lea
push
mov
xor
add
push
mov
add
push
mov
mov
pushl
mov
call
mov
mov
add
mov
pushl
mov
pushl
pushl
call
mov
add
lea
mov
mov
mov
mov
mov
mov
mov
cmp
jb
mov
mov
mov
lea
mov
add
cmp
jae
mov
mov
mov
sub
add
mov
mov
jmp
xor
pop
pop
pop
leave
ret
push
mov
sub
push
mov
mov
cmpl
je
test
je
test
je
mov
test
je
cmpl
je
cmp
je
mov
andl
mov
sub
add
movzwl
mov
movzwl
add
je
lea
push
mov
mov
push
test
je
mov
andl
and
add
movzwl
movzwl
add
je
lea
mov
test
je
mov
andl
and
add
movzwl
movzwl
add
je
lea
mov
mov
mov
test
je
mov
add
movzwl
movzwl
incl
addl
add
cmp
jb
movzwl
movzwl
mov
incl
add
add
mov
cmp
jb
mov
movzwl
movzwl
incl
add
add
mov
cmp
jb
pop
pop
xor
inc
jmp
xor
pop
leave
ret
push
mov
mov
mov
sub
push
xor
push
push
cmp
je
cmp
je
cmp
jne
xor
inc
jmp
mov
add
mov
mov
mov
mov
add
add
mov
cmp
ja
mov
mov
cmp
jbe
cmp
jae
movzwl
jmp
mov
lea
mov
test
je
add
mov
cmp
jbe
mov
mov
add
cmp
jae
mov
jmp
sub
mov
mov
test
je
mov
inc
mov
cmp
jb
jmp
xor
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
movl
mov
mov
mov
mov
mov
mov
push
mov
push
mov
movl
mov
mov
push
mov
xor
xor
add
add
mov
cmp
je
mov
mov
xor
add
cmp
je
mov
mov
xor
add
cmp
je
add
mov
mov
xor
add
mov
mov
cmp
je
mov
mov
imul
xor
add
cmp
jne
mov
mov
imul
xor
add
cmp
je
mov
mov
mov
imul
add
mov
add
xor
mov
mov
mov
xor
add
xor
mov
mov
add
add
cmp
je
add
mov
mov
xor
add
mov
lea
mov
movl
mov
pushl
mov
call
mov
xor
add
mov
cmp
jne
mov
pushl
mov
call
mov
movl
movl
mov
xor
add
cmp
jne
mov
mov
xor
xor
lea
mov
mov
add
imul
push
call
mov
xor
add
cmp
jne
mov
xor
add
cmp
jbe
mov
xor
add
cmp
jne
mov
mov
xor
lea
mov
jmp
movl
movl
mov
xor
add
jmp
mov
xor
add
mov
mov
xor
add
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
mov
mov
mov
xor
add
cmp
je
mov
mov
xor
add
shr
cmp
je
mov
mov
mov
movzwl
push
pushl
call
jmp
mov
add
mov
mov
add
push
pushl
call
mov
mov
mov
xor
add
cmp
mov
jne
mov
xor
lea
mov
jmp
mov
xor
add
imul
mov
mov
mov
xor
lea
mov
mov
xor
add
cmp
jne
mov
mov
mov
sub
xor
jmp
mov
xor
add
cmp
mov
jne
mov
jmp
mov
xor
add
pop
pop
pop
leave
ret
push
mov
sub
movl
movl
mov
mov
push
mov
mov
mov
mov
xor
mov
add
cmp
je
mov
mov
add
push
mov
movl
mov
mov
mov
xor
xor
add
cmp
je
mov
mov
add
mov
mov
sub
mov
xor
add
mov
cmp
je
mov
xor
add
mov
push
movl
jmp
mov
xor
lea
add
shr
cmp
jae
sub
lea
mov
movzwl
and
mov
mov
mov
sub
add
movzwl
shr
xor
mov
mov
mov
mov
xor
lea
mov
mov
mov
xor
add
cmp
jne
mov
mov
xor
add
cmp
jne
mov
mov
add
add
decl
jne
mov
add
mov
mov
mov
xor
cmp
jae
add
mov
mov
xor
add
mov
cmp
jne
pop
mov
pop
jmp
mov
xor
add
pop
leave
ret
push
mov
sub
movl
movl
mov
push
push
mov
xor
push
mov
add
mov
mov
xor
add
mov
mov
mov
mov
xor
mov
addl
mov
mov
xor
mov
addl
mov
mov
xor
mov
addl
mov
mov
xor
mov
addl
movl
mov
test
je
mov
test
je
mov
test
je
mov
mov
xor
add
cmp
jne
mov
xor
add
mov
mov
mov
mov
add
mov
mov
test
je
movl
mov
xor
add
mov
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
cmp
jne
mov
lea
push
mov
xor
add
push
pushl
pushl
call
mov
mov
mov
sub
add
push
call
mov
mov
mov
mov
pushl
pushl
push
call
mov
mov
add
movzwl
lea
mov
mov
movzwl
xor
add
mov
cmp
je
mov
xor
add
mov
mov
movzwl
xor
sub
sub
cmp
ja
mov
add
mov
jmp
mov
mov
lea
mov
mov
test
je
not
and
add
mov
add
push
call
mov
mov
mov
xor
add
cmp
je
push
mov
add
mov
add
push
push
call
mov
mov
mov
add
xor
lea
mov
mov
mov
movzwl
xor
sub
mov
sub
mov
cmp
jbe
mov
mov
cmp
jne
mov
lea
push
mov
xor
add
push
mov
pushl
push
call
test
je
mov
mov
mov
xor
add
je
mov
xor
add
andl
mov
mov
lea
movl
movl
mov
mov
mov
movl
mov
mov
xor
mov
add
mov
incl
cmpl
mov
jb
mov
mov
mov
mov
mov
lea
lea
mov
mov
movl
mov
mov
movl
movl
movl
movl
movl
mov
movl
mov
movl
mov
movl
mov
movl
movl
xor
mov
xor
sub
mov
inc
cmp
jb
mov
lea
push
call
mov
lea
push
push
call
mov
lea
push
mov
pushl
mov
call
mov
xor
add
mov
mov
mov
xor
add
cmp
je
mov
jmp
mov
mov
mov
mov
cmp
je
mov
mov
cmp
jne
mov
mov
cmp
jne
mov
mov
mov
add
mov
mov
xor
add
mov
mov
push
push
pushl
call
test
je
pushl
mov
pushl
call
test
je
mov
mov
mov
call
test
je
push
pushl
call
test
je
mov
mov
cmp
jne
mov
lea
push
pushl
mov
pushl
push
call
mov
mov
mov
xor
add
je
mov
mov
movl
mov
pushl
xor
pushl
add
or
add
push
call
movl
jmp
mov
mov
add
call
mov
mov
mov
mov
movl
cmpl
jne
andl
mov
jmp
xor
pop
pop
pop
leave
ret
push
mov
movzwl
movzwl
push
push
xor
lea
test
je
mov
lea
cmp
jb
mov
add
add
cmp
jb
add
inc
cmp
jb
xor
pop
pop
pop
ret
push
mov
sub
movl
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
push
mov
xor
push
mov
mov
add
push
cmp
je
mov
mov
xor
add
cmp
je
mov
xor
add
mov
mov
xor
add
mov
mov
mov
mov
xor
mov
xor
add
add
sub
mov
jmp
mov
mov
xor
add
cmp
je
mov
mov
xor
add
cmp
mov
mov
je
cmp
je
mov
mov
xor
add
cmp
jb
mov
mov
xor
add
cmp
ja
movzwl
movzwl
add
mov
mov
mov
xor
add
cmp
jb
mov
mov
xor
add
cmp
ja
movzwl
movzwl
add
mov
mov
mov
cmp
jne
mov
mov
xor
lea
mov
mov
mov
xor
lea
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
cmp
jne
mov
mov
xor
add
imul
mov
jmp
mov
mov
xor
lea
mov
mov
sub
xor
mov
mov
sub
xor
mov
mov
mov
xor
add
xor
add
imul
mov
movzwl
mov
mov
xor
add
xor
add
imul
mov
movzwl
sub
sub
xor
xor
cmp
jne
mov
mov
xor
add
xor
add
imul
mov
movzwl
mov
sub
xor
cmp
mov
je
mov
pop
xor
pop
add
pop
leave
ret
push
mov
push
mov
push
mov
sub
mov
xor
mov
movl
mov
cmp
je
push
push
movzwl
mov
mov
mov
cmp
jne
mov
lea
xor
mov
xor
mov
mov
sub
mov
xor
mov
cmp
jne
mov
pop
pop
cmp
je
xor
lea
pop
leave
ret
push
mov
push
push
push
movl
mov
call
mov
mov
sub
xor
cmp
je
mov
mov
mov
push
mov
mov
sub
mov
xor
mov
cmp
jne
mov
lea
xor
mov
xor
lea
mov
sub
xor
cmp
jne
mov
pop
cmp
je
xor
xor
mov
mov
pop
pop
leave
ret
push
mov
push
push
movl
mov
call
mov
mov
sub
mov
xor
mov
cmp
je
push
push
movzwl
mov
mov
mov
cmp
jne
mov
lea
xor
mov
xor
mov
mov
sub
mov
xor
mov
cmp
jne
cmpl
pop
pop
je
xor
inc
jmp
xor
pop
leave
ret
push
mov
push
mov
movzwl
push
lea
mov
push
xor
mov
mov
cmp
je
mov
sub
mov
jmp
mov
mov
add
movzwl
mov
add
xor
mov
cmp
jne
xor
pop
mov
mov
pop
leave
ret
push
mov
sub
movl
movl
mov
push
mov
xor
mov
add
mov
movl
movl
push
movl
jmp
mov
mov
sub
mov
xor
add
cmp
jbe
mov
add
mov
add
mov
mov
mov
mov
mov
jmp
mov
mov
sub
mov
xor
add
cmp
mov
jbe
add
mov
add
mov
mov
mov
jmp
mov
sub
mov
xor
add
cmp
mov
jbe
add
mov
add
mov
mov
mov
mov
xor
lea
mov
jmp
add
mov
add
mov
mov
incl
mov
mov
xor
add
imul
mov
mov
xor
lea
cmp
jb
pop
pop
leave
ret
push
mov
sub
movl
push
mov
movl
mov
mov
xor
mov
add
cmp
je
push
push
mov
mov
xor
mov
sub
add
lea
xor
mov
mov
mov
xor
sub
xor
mov
mov
xor
add
cmp
jne
pop
pop
pop
leave
ret
push
mov
sub
movl
movl
mov
mov
mov
push
push
mov
xor
mov
add
cmp
mov
jne
xor
add
jmp
mov
xor
add
cmp
jne
mov
jmp
lea
mov
mov
mov
mov
xor
add
mov
mov
push
call
mov
mov
mov
jmp
mov
sub
mov
mov
mov
call
mov
pushl
mov
call
mov
xor
add
cmp
jne
mov
call
mov
xor
add
push
pushl
mov
call
mov
xor
add
cmp
je
mov
mov
mov
mov
mov
add
cmp
jne
mov
xor
add
pop
pop
pop
leave
ret
mov
mov
jmp
push
mov
mov
sub
cmpl
push
push
push
je
test
je
movzwl
mov
mov
xor
and
mov
xor
add
mov
andl
xor
push
pop
cmp
jae
lea
xor
movzwl
mov
lea
cmp
jne
movzwl
mov
cmp
jne
mov
movzwl
cmpb
je
mov
movzwl
movsbw
mov
sub
xor
cmp
je
push
pop
incl
mov
cmp
jb
jmp
incl
push
pop
mov
movzwl
cmpb
je
inc
cmp
jne
xor
pop
pop
pop
leave
ret
mov
add
xor
xor
cmp
sete
jmp
push
mov
sub
push
mov
mov
cmpl
jne
xor
jmp
pushl
push
pop
call
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
push
mov
mov
call
push
mov
pushl
call
mov
test
je
mov
push
push
mov
add
mov
mov
mov
mov
add
mov
mov
add
add
mov
mov
mov
cmp
ja
mov
xor
mov
cmp
jbe
jmp
mov
mov
movzwl
cmp
jae
cmp
jae
mov
mov
mov
mov
lea
add
add
sub
movl
mov
mov
cmpl
jne
mov
pushl
push
call
mov
test
je
mov
mov
mov
addl
decl
jne
mov
inc
mov
cmp
jb
pop
pop
pop
leave
ret
push
mov
mov
push
pushl
lea
mov
call
mov
mov
mov
xor
cmp
pop
setne
mov
pop
ret
mov
push
jmp
xor
add
mov
add
add
movzwl
mov
cmp
jne
xor
mov
mov
pop
ret
push
mov
mov
shl
add
jmp
xor
add
mov
inc
inc
mov
cmp
jne
movb
mov
add
pop
ret
push
mov
sub
movl
movl
mov
mov
movl
push
push
movl
mov
mov
mov
xor
mov
xor
add
add
imul
jmp
mov
mov
xor
xor
add
add
test
mov
mov
je
xor
xor
add
add
shr
mov
xor
add
xor
jmp
xor
xor
add
add
shr
mov
mov
xor
lea
mov
mov
xor
xor
sub
cmp
jbe
mov
pop
mov
mov
pop
leave
ret
push
mov
sub
push
mov
mov
lea
mov
mov
mov
push
mov
xor
push
mov
add
cmp
mov
je
mov
xor
add
cmp
je
mov
mov
mov
mov
movl
mov
lea
mov
mov
mov
mov
mov
xor
mov
sub
sub
mov
movl
jmp
mov
mov
xor
xor
lea
mov
xor
div
mov
mov
xor
xor
sub
cmp
jne
mov
mov
mov
mov
mov
xor
xor
add
add
cmp
jae
lea
mov
mov
xor
add
lea
mov
mov
cmp
jbe
addl
jmp
addl
mov
xor
inc
incl
add
cmp
jb
mov
cmpl
jne
xor
add
jmp
mov
xor
mov
sub
add
mov
xor
sub
ror
xor
mov
mov
mov
mov
mov
sub
xor
cmp
jne
mov
mov
xor
xor
sub
mov
sub
xor
mov
mov
xor
sub
sub
jmp
mov
xor
mov
sub
add
mov
mov
cmp
jne
mov
jmp
mov
xor
add
pop
pop
pop
leave
ret
push
mov
sub
movl
movl
movl
push
movl
mov
push
mov
push
xor
mov
add
mov
movl
movl
movl
mov
mov
mov
xor
xor
add
add
imul
jmp
mov
sub
xor
mov
lea
call
mov
mov
mov
mov
mov
mov
xor
lea
mov
mov
mov
xor
xor
sub
mov
cmp
jbe
mov
xor
add
mov
movl
mov
jmp
mov
mov
xor
add
shr
mov
mov
mov
mov
mov
mov
movzbl
xor
mov
mov
mov
xor
add
and
mov
mov
xor
mov
mov
xor
lea
mov
mov
xor
mov
sub
add
mov
mov
mov
xor
add
cmp
jne
mov
mov
xor
add
pop
pop
xor
pop
leave
ret
push
mov
mov
mov
mov
mov
mov
sub
push
push
push
mov
xor
mov
add
cmp
jne
orl
jmp
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
mov
mov
movl
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
mov
xor
add
mov
mov
xor
add
mov
mov
mov
sub
mov
mov
mov
mov
dec
test
mov
je
mov
mov
mov
dec
not
and
mov
mov
add
jmp
mov
mov
mov
xor
add
mov
mov
xor
add
mov
mov
mov
xor
add
mov
mov
movl
movl
movl
mov
mov
xor
add
imul
mov
mov
xor
lea
cmp
jae
mov
xor
add
mov
mov
add
mov
pushl
mov
mov
call
mov
movl
mov
xor
lea
add
push
call
mov
test
je
mov
xor
add
push
pushl
lea
push
call
mov
mov
mov
mov
sub
mov
mov
mov
mov
add
mov
cmp
jb
mov
mov
mov
add
mov
sub
jmp
push
pushl
lea
push
call
mov
mov
movl
movl
movl
lea
mov
lea
mov
lea
mov
lea
mov
mov
xor
add
mov
jmp
cmp
je
mov
xor
mov
add
mov
mov
xor
lea
mov
mov
mov
xor
add
cmp
jne
mov
xor
add
push
push
lea
push
call
mov
mov
xor
mov
mov
xor
movzbl
add
cmp
je
mov
mov
xor
mov
mov
xor
movzbl
add
cmp
je
mov
mov
xor
mov
mov
xor
movzbl
add
cmp
je
mov
mov
xor
mov
mov
xor
movzbl
add
cmp
je
mov
mov
xor
mov
mov
mov
xor
mov
xor
mov
mov
xor
mov
or
mov
mov
xor
mov
cmp
jne
mov
mov
xor
mov
mov
mov
xor
mov
xor
mov
mov
xor
mov
or
mov
mov
xor
mov
cmp
jne
mov
mov
xor
mov
mov
mov
xor
mov
xor
mov
mov
xor
mov
or
mov
mov
xor
mov
cmp
jne
mov
mov
xor
mov
mov
mov
xor
mov
xor
mov
mov
xor
mov
or
mov
mov
xor
mov
cmp
jne
lea
push
call
mov
cmp
je
mov
xor
add
mov
mov
xor
lea
xor
mov
mov
xor
add
cmp
je
mov
mov
xor
add
cmp
jne
mov
mov
xor
lea
jmp
push
pushl
lea
push
call
mov
mov
xor
add
cmp
je
mov
xor
add
push
push
lea
push
call
mov
add
mov
pushl
pushl
mov
add
push
call
mov
mov
xor
add
cmp
je
push
pushl
mov
add
push
call
mov
mov
add
mov
add
mov
mov
mov
xor
add
imul
mov
mov
xor
lea
cmp
jb
mov
mov
mov
jmp
mov
mov
xor
xor
add
add
cmp
jne
mov
imul
mov
jmp
mov
xor
add
cmp
je
subl
jmp
andl
pop
pop
pop
leave
ret
push
mov
and
mov
sub
push
mov
push
push
cmp
jne
push
jmp
mov
cmp
jne
push
jmp
mov
cmp
jne
push
jmp
mov
cmp
jne
push
jmp
mov
mov
cmp
jne
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
mov
add
mov
mov
mov
mov
mov
mov
mov
add
mov
mov
mov
push
push
pushl
push
call
mov
mov
pushl
xor
add
mov
lea
push
push
pushl
pushl
pushl
call
mov
mov
xor
add
cmp
je
mov
mov
xor
add
imul
mov
jmp
mov
cmp
jne
push
jmp
mov
cmp
jne
push
jmp
mov
cmp
jne
push
pushl
pushl
push
pushl
pushl
pushl
call
mov
mov
pop
pop
pop
mov
pop
ret
push
mov
sub
mov
mov
movl
mov
xor
add
mov
mov
push
mov
pushl
lea
pushl
push
pushl
pushl
pushl
call
mov
mov
leave
ret
