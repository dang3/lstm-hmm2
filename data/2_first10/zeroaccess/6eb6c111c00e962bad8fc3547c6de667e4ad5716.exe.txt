push
mov
sub
movl
cmpl
je
cmpl
jne
pushl
push
pushl
push
push
pushl
call
mov
dec
mov
jmp
or
mov
mov
jmp
rcl
fmul
rcr
add
dec
mov
jle
movsl
add
fld
fcom
enter
leave
cld
icebp
fmulp
test
sar
rcl
mov
nop
fsub
nop
cld
jmp
leave
ss
xor
neg
aad
int
fnsetpm(287
lock
in
cli
sti
jmp
xchg
in
cli
fxch
out
leave
icebp
idiv
iret
ds
lock
repz
enter
out
fildl
ret
sub
shl
xlat
fdiv
stc
aas
adc
call
fmuls
repz
mul
ret
into
jmp
loopne
iret
lock
in
repnz
into
sub
sti
ljmp
int
into
out
rorb
fimull
div
aam
hlt
cmc
aad
ss
int3
rcl
rol
idivb
icebp
les
out
sti
xchg
ljmp
sti
int
cmp
cmp
cmp
lret
xlat
enter
test
into
rorb
icebp
fsubr
ss
repz
hlt
ret
in
neg
mul
in
jmp
faddl
shr
lock
cmp
xor
clc
fcmovb
fsubp
mov
loopne
in
lret
xchg
xchg
divb
icebp
imul
cmp
cmp
fnstcw
loop
test
aad
div
xchg
out
jecxz
fcmovnb
out
out
repnz
sti
cmp
out
jmp
nop
mov
sub
fnsave
aad
in
adc
sub
into
mov
lret
ror
mov
xor
int3
icebp
cmp
repnz
loop
repz
in
cli
in
out
mov
sub
xor
loopne
fxch
xor
lret
cmp
idivb
cli
div
ret
mov
addb
jecxz
out
fnstsw
out
sti
iret
lock
adc
sbb
in
cli
int
std
lret
xor
stc
shr
int3
into
aad
out
out
shl
mov
in
int3
mov
int
xchg
mov
aad
lret
shr
aaa
clc
lret
in
in
test
shr
cld
lret
lret
lret
cld
call
ljmp
xor
cmp
call
roll
adc
cld
jmp
clc
ret
loop
std
aam
test
not
lret
iret
cld
and
loopne
jmp
fcmovnbe
rolb
loop
call
aas
rcr
loop
in
test
sarl
fneni(8087
jecxz
icebp
cld
int3
mov
ljmp
ds
call
mov
aam
fsub
in
call
fdivp
aam
call
lret
stc
jecxz
fcomp
fcomp
xchg
cmc
stc
mov
into
out
xchg
jmp
xor
fcomi
iret
into
push
cmp
sarb
sti
out
cmc
enter
loopne
mov
fst
fcomip
idivb
ret
aaa
into
sar
divl
cmp
shl
xlat
cld
in
mov
cld
std
hlt
out
aad
xor
mul
fidivl
jecxz
test
shl
xchg
std
jecxz
fimull
xchg
int
clc
sti
xor
out
cld
ss
clc
add
loop
int3
xchg
jecxz
out
ljmp
xor
fdivr
add
xchg
mov
mov
jmp
clc
aam
iret
ljmp
test
in
int
fimull
call
cmp
iret
cmp
les
mov
loop
mov
adcl
cli
xlat
clc
std
out
lock
ret
clc
out
aad
test
fmull
enter
lret
sti
leave
clc
stc
ret
neg
stc
out
fst
aas
loop
cld
in
repnz
nop
aam
int3
ret
repnz
cmc
fcos
cmp
cmc
cmc
shl
loope
jmp
xchg
ljmp
in
call
sub
rcl
add
in
stc
orl
not
xor
leave
int3
jmp
loopne
and
fisttpl
ljmp
iret
xor
fldln2
imul
jmp
adc
lock
enter
fcmove
loop
jmp
shr
icebp
aam
aaa
fidivrl
and
fdivr
fmul
test
xchg
jmp
and
sar
out
mov
sbb
mov
mov
orl
push
movl
cmpl
je
cmpl
jne
pushl
push
call
cmpl
jne
mov
dec
mov
xor
add
dec
mov
jmp
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
pushl
pushl
call
cmpl
jne
mov
inc
mov
jmp
add
push
mov
andl
mov
inc
mov
cmpl
jne
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
xor
movl
cmpl
je
cmpl
jne
pushl
pushl
push
pushl
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
movl
push
adc
mov
andl
xor
xor
inc
mov
cmpl
jne
push
pushl
pushl
push
call
cmpl
jne
xor
or
inc
mov
cmpl
jb
andl
mov
inc
mov
cmpl
jne
push
push
call
cmpl
jb
add
jmp
xlat
iret
into
fst
xor
mov
cltd
push
dec
movsl
add
movsl
add
frndint
xor
cmp
shl
mov
ljmp
jmp
loop
clc
xlat
aaa
fld
in
lret
icebp
xor
in
into
sar
fdivr
ret
out
mov
leave
addb
repz
cld
sar
icebp
stc
xlat
aad
fdivrl
jmp
call
aam
xlat
not
lock
fnop
fucomip
ljmp
mov
cmp
fldpi
lock
into
out
enter
testb
stc
lds
iret
leave
ffreep
fiadds
cmp
int3
sti
cmp
ret
stc
clc
loop
sti
fdivr
loopne
mov
imul
jmp
leave
int3
cmp
fsubr
in
clc
stc
cmp
repz
cmp
leave
enter
stc
icebp
lret
xchg
out
mov
jmp
stc
cli
ds
cmp
fildl
mov
in
lret
fsubp
xor
xor
xor
xor
fcom
repnz
in
in
clc
fadds
xchg
mov
lret
jecxz
sarl
int3
out
in
repz
into
ret
mul
movb
xchg
das
fsubr
repnz
out
repz
sti
ljmp
mov
loope
ret
push
out
iret
aam
cli
enter
xor
aas
cmp
ljmp
out
repnz
mov
shr
jmp
std
lock
ror
fstp
in
stc
call
fisttpll
ror
shr
aam
fcmovbe
xor
ret
rol
clc
ror
cmp
jecxz
in
decb
jmp
vpsrld
addb
loop
testb
in
xchg
imul
out
in
in
fdivrp
fstpt
into
cmp
aam
leave
xchg
fstp
mov
xor
sarl
loope
iret
fcmovnu
into
cld
out
ret
ret
into
nop
fxch
lock
enter
int3
not
leave
xor
in
fadds
loop
rcr
mov
clc
nop
out
rolb
jmp
loope
cld
lret
add
clc
fadds
sub
cld
xchg
test
xor
repz
xor
and
icebp
ffreep
sar
clc
incb
cli
out
lret
in
out
in
lret
hlt
fldln2
aam
repz
fldl
xlat
out
test
fbstp
out
int
xlat
cmp
testb
enter
mov
jmp
xchg
ret
xor
loop
rcr
enter
clc
rolb
xlat
out
fldln2
call
ljmp
sar
in
sar
xchg
in
jecxz
leave
nop
int
out
hlt
repz
mul
leave
aaa
sti
lret
cmc
lock
cmp
sar
cmp
mov
out
mov
fimuls
cmp
icebp
divl
out
inc
faddl
xlat
aad
jmp
addb
ss
xlat
hlt
ss
aaa
dec
jecxz
xor
test
sbb
loopne
loopne
cld
ljmp
idivb
jmp
in
iret
aad
cmp
in
mov
mov
repnz
xor
aad
flds
sar
loope
testb
out
int
int3
xchg
lock
out
int3
int
iret
ss
addl
fsincos
in
jmp
fdivr
hlt
out
xor
das
cmp
fnop
imul
cmp
xchg
fdivp
xchg
cli
enter
icebp
mov
mov
shr
xor
sti
int3
ret
fcomp
test
out
cmc
lret
in
into
cli
jmp
jecxz
enter
aam
cli
clc
addl
test
ret
fucomp
fucom
ret
in
cld
cmp
icebp
cmp
dec
out
ret
stc
in
ljmp
adcb
stc
lret
fldz
rol
cmp
out
icebp
rcr
out
lret
decb
mov
cli
aaa
imul
stc
icebp
stc
cmp
rcr
fnstsw
rcl
test
xlat
in
int3
and
xchg
rcr
lock
xor
ljmp
cmp
shl
call
ljmp
mov
aaa
stc
aaa
rcl
call
mov
jmp
fadd
leave
int
bound
inc
aad
sbb
int3
pop
jle
movsl
add
cmc
repz
cld
roll
les
aad
les
aad
cmp
enter
cmp
test
xlat
mov
mov
fdivp
int3
xchg
adc
int
ret
xlat
ss
aaa
shr
xlat
ds
clc
aam
loope
fcomip
fmull
into
ljmp
xor
clc
cld
in
iret
in
sub
xchg
and
test
fcmovnbe
nop
shr
cmc
hlt
xor
stc
das
ds
neg
hlt
cmp
jecxz
faddl
lea
repnz
out
lret
fidivrl
shr
fildl
aam
aas
inc
cli
out
fadd
fsub
nop
jmp
lret
jecxz
cmp
ljmp
aas
test
mul
aam
ffreep
repnz
cmp
das
clc
clc
xor
leave
aaa
lock
aam
loop
adc
ret
clc
dec
in
out
lret
out
mov
lret
icebp
das
lock
in
hlt
cmp
sar
fstpt
mov
loop
loope
into
int
xchg
adcb
out
cli
jmp
hlt
hlt
jmp
icebp
idiv
fucom
add
fsub
xlat
shl
out
shr
sub
sarb
fucom
loopne
cld
shl
cld
xor
int3
mov
adc
int3
into
int3
cli
fnstcw
leave
out
lock
cmc
rcr
cld
aas
sti
xchg
fucomip
loope
into
xor
repz
fdivrs
cld
icebp
sar
into
repnz
out
add
in
jmp
jmp
aad
out
aam
enter
cmp
fst
loop
ret
in
stc
jmp
in
hlt
xor
imul
cmp
xlat
clc
ret
out
shr
cld
fdivrp
out
sub
shl
in
cmc
ss
fneni(8087
rcl
rol
call
in
rcr
mov
imul
loop
jmp
xor
into
out
aam
ret
ds
testb
xchg
mov
in
in
int3
lret
ljmp
clc
into
ret
ds
xlat
inc
out
out
mov
icebp
icebp
xlat
cmp
in
ss
cld
lret
aas
cmp
in
enter
call
rcr
aaa
jmp
testl
mov
addl
xor
in
enter
clc
repnz
iret
xchg
add
aam
out
mov
std
loop
rcl
rol
ljmp
fmul
ds
in
testb
lea
jmp
call
xor
enter
xor
fyl2x
shl
addl
fsubr
loope
adcb
repnz
fcomip
fcmovnbe
cli
cmp
test
enter
lret
ror
shl
in
das
hlt
in
xor
std
into
int
shl
in
xchg
clc
sti
shr
call
xchg
int3
out
int3
fdivr
repz
int3
flds
repz
mov
repz
out
xor
std
sar
cmpl
loope
std
int3
out
in
vpminsw
clc
jecxz
idivl
cmp
out
rcl
in
fdiv
clc
cmp
cld
mov
fcmove
call
in
ret
in
stc
enter
cmp
test
icebp
cli
xlat
fisttpl
leave
incl
iret
div
cmp
sar
aam
sti
int
in
xchg
lock
xchg
sub
mov
repnz
xor
in
out
cmp
cmp
loopne
in
in
cmp
out
leave
leave
in
xchg
shl
fsub
sti
xor
in
lret
fucomip
rol
adc
cmc
enter
mul
fimuls
iret
aaa
in
jmp
aad
test
sbb
roll
jmp
in
mov
out
jecxz
aam
aam
out
std
lret
repnz
stc
fsincos
vcmpps
enter
mov
call
repnz
mov
fdivr
lret
int
out
cmc
out
ds
loope
shl
xchg
fldlg2
aas
mov
rcl
sub
leave
rcr
ljmp
roll
in
jmp
in
call
int
cld
lret
aas
loope,pt
repnz
loope
in
call
xchg
xor
cli
ljmp
cmp
jecxz
icebp
jmp
inc
cld
mov
mov
sub
and
mov
mov
and
mov
orl
xor
xor
add
mov
add
jmp
rcl
lret
fst
jmp
cwtl
jae
jle
movsl
add
fsub
lret
std
xchg
jmp
xchg
enter
lock
icebp
ss
sti
divb
clc
mov
loop
loopne
cld
cli
fcoml
repnz
xlat
fucomi
test
iret
stc
test
loop
mul
out
aas
lds
addl
icebp
stc
jmp
and
mov
fucomip
xchg
out
mov
lret
sti
repz
call
in
xchg
clc
add
fmulp
shr
xchg
ror
sub
lret
int
fcmovu
jmp
cmp
sti
xchg
jecxz
aas
lret
int3
xchg
call
std
cli
xlat
icebp
out
xlat
hlt
fcmovnb
cmpb
ror
aam
std
mov
int3
rorb
lock
leave
out
cmp
xor
ss
cmp
shr
or
clc
clc
clc
xchg
rol
ret
lret
into
rcr
aaa
cmp
xchg
repnz
jmp
or
shl
int
test
out
adc
rcl
test
fadd
sar
sub
fisttpll
cmc
icebp
cmp
shl
aaa
in
shr
cmp
in
les
test
loope
orl
jmp
ss
cmp
fst
cmp
in
out
mov
jmp
das
loope
lret
out
xor
int3
jmp
int
repz
adc
fadd
std
test
xchg
aad
div
in
lret
repnz
cmp
fdiv
shl
fcomi
fsub
call
fucomi
out
mov
xchg
aam
shl
fmul
lock
rcl
fcomip
xchg
test
fdiv
cmp
int
int3
cs
shl
xor
lock
aam
xlat
cmp
xchg
sti
in
in
clc
out
and
shrl
leave
fidivrs
cmp
fxtract
fdiv
xchg
std
out
cld
out
in
in
shl
test
das
out
xor
lret
in
testl
int3
iret
in
rolb
cmp
xlat
repnz
rcr
aas
fdivrs
fildl
test
int
out
ret
in
jecxz
cld
xor
hlt
int
fdivrs
in
loope
call
xchg
test
hlt
shl
not
repnz
lret
ror
iret
fstp
std
xchg
adc
out
loope
aam
neg
repnz
lds
rcr
fdivr
xchg
xchg
in
fimull
test
ret
ss
ror
cmp
lock
stc
enter
mov
iret
loop
loopne
test
lock
ljmp
cmp
fisttps
int3
test
xchg
xchg
in
rcr
lock
clc
xlat
repnz
jmp
stc
test
cmc
add
loope
cmp
fcmovne
test
mov
icebp
in
fucomi
out
out
repz
fdivr
aad
rol
cmc
repz
adc
leave
jecxz
ljmp
hlt
stc
call
shl
clc
movb
fxch
mov
loope
xchg
xor
enter
loope
fdivr
int3
cld
sti
cli
aad
out
sti
in
loop
loopne
hlt
fmul
inc
xor
cmc
in
rol
fucomip
std
clc
mul
icebp
loop
fsub
cmp
dec
jmp
int3
out
mov
imul
not
fdivr
sarb
aad
lret
in
shl
repnz
mov
repnz
vpsubusw
xor
fadd
cld
out
loopne,pt
hlt
loop
loopne
leave
fiadds
ror
repz
cmc
fadds
cld
cmp
in
dec
lret
xchg
fstp
shr
lret
nop
icebp
in
repnz
ror
aas
aaa
sti
repnz
cmp
mov
iret
fstl
out
lret
cmp
cmp
hlt
test
adc
call
addb
hlt
leave
rcl
sti
call
aas
sarb
cld
hlt
cmp
fnsetpm(287
test
lret
test
enter
repz
cld
add
roll
in
ljmp
fsub
shl
stc
out
ds
out
loop
cmp
rorl
fdivr
into
xchg
out
xchg
stc
stc
ss
ror
sbb
shl
call
ljmp
mov
rcl
aad
int3
call
sub
lcall
jle
xchg
in
cmc
out
xor
out
stc
int
shr
loop
fcmovne
sar
loopne
aad
int
test
std
in
in
in
sub
out
out
cmp
int
cmp
fucomp
in
ret
fcmove
xlat
sbb
xchg
shll
fdivr
fiadds
loopne
stc
jmp
test
sti
mov
xor
repnz
out
ss
into
xacquire
test
repz
out
xor
div
fucomi
stc
xor
stc
iret
and
loopne
in
out
jmp
xchg
mov
aaa
ret
in
fcmovbe
cmp
fildl
mov
xlat
cli
fsub
mov
nop
call
xlat
shl
shlb
fnsave
iret
cmp
sbb
clc
add
in
in
cli
std
out
in
iret
xchg
repnz
fdivrs
cld
rcl
xor
int
int
fsub
fucom
faddp
ffreep
fadd
ror
fucom
aam
shll
lock
ljmp
repnz
out
cmp
fcmovu
loop
ljmp
xlat
xor
clc
ss
in
fnop
addb
out
out
movb
iret
out
int3
repz
sar
fmulp
cmp
shl
enter
test
in
cld
mov
ss
int
in
clc
hlt
or
adc
fadds
int
shl
mov
out
enter
idivl
imul
fadd
call
xor
jmp
loop
xchg
test
test
idiv
sar
repz
sti
jecxz
test
out
call
mov
xchg
icebp
fucom
fbstp
jmp
aad
out
cmp
cmp
int3
rcr
cmp
filds
loopne
mov
out
out
repz
shl
call
ljmp
and
leave
adc
aad
shr
repz
out
ret
repnz
xor
fnstcw
loopne
fmull
xchg
out
mov
mov
xor
xor
bnd
out
loope
fadds
mov
lret
in
aam
lock
hlt
cmp
int
sar
cld
fcom
loopne
jmp
or
loopne
cs
lret
or
icebp
neg
std
sti
lret
out
mov
mov
mov
int
lret
shlb
call
fisttps
clc
mov
mov
mov
lret
ss
rcl
lret
aam
xlat
hlt
in
shl
out
std
stc
jmp
mov
loop
mov
loope
xchg
hlt
jmp
cmp
int3
cmp
shr
mov
xchg
mov
test
dec
icebp
loope
stc
das
xor
out
cli
fucomi
ss
xchg
orb
in
mov
out
jmp
into
shr
int
iret
cli
cmp
fmul
std
sar
aad
call
out
repnz
or
aaa
xlat
in
xor
addl
in
loop
std
loopne
shl
in
jmp
shrl
xor
cmc
int3
fsub
in
cmp
in
cmp
mov
sti
lret
leave
flds
xchg
aaa
cmp
leave
fstpt
in
cmp
xlat
rcl
out
sbb
ljmp
cmc
call
stc
sar
cld
cmp
fcmovnu
out
clc
into
mov
lock
jmp
fcmovbe
lock
lret
cmc
loopne
out
ret
loopne
sbb
jmp
in
loop
out
int3
fcmove
iret
ljmp
in
int
iret
fst
hlt
cmc
cmp
test
idiv
ret
ljmp
shrl
lock
divb
ss
idiv
div
roll
loop
flds
fists
test
aad
cmp
fldz
xlat
call
std
jecxz
xchg
iret
mov
xchg
lock
rcr
repz
div
xchg
addl
xchg
shr
call
leave
lret
fistpll
idiv
inc
xchg
or
movb
vpaddq
cli
std
in
fstpt
fprem
ds
stc
filds
sti
jecxz
test
fmull
xor
in
sarl
icebp
fdivp
testl
faddp
orb
aam
cmc
jmp
movl
jmp
int3
rcl
fstp
fldt
scas
or
jle
add
xor
xor
cmp
out
fsubp
inc
in
loope
test
xchg
int3
aaa
out
into
int3
cli
fdivrp
lret
ds
neg
mov
std
cli
dec
rcl
in
hlt
int3
xor
imul
in
aam
hlt
cld
out
fildl
out
test
xchg
stc
sti
lret
aam
repz
aad
in
sti
in
xchg
loop
in
ror
lret
jmp
aaa
clc
aas
repz
icebp
cmp
ror
sti
rorl
ljmp
in
cmc
cld
in
ljmp
fadd
repnz
cli
repz
int
fiadds
addb
ror
int
loope
lret
cmp
ds
mov
out
cli
xchg
fiadds
int
in
out
jmp
cmp
ret
fcmovnb
out
or
jmp
shll
ss
neg
fcmovbe
int3
sub
cli
sarl
repz
jmp
jmp
mov
dec
xchg
rolb
repz
out
enter
shl
cmc
xlat
clc
hlt
fdivr
aam
aad
int
cld
call
xor
out
hlt
jmp
ds
into
flds
ljmp
out
jecxz
std
loope
int
stc
xor
icebp
fcomip
cmp
int3
iret
ds
xchg
rol
leave
loopne
mov
icebp
lret
enter
cli
clc
lret
in
cmp
jecxz
fst
std
in
loop
lret
jecxz
loop
ffreep
rcl
aaa
in
repnz
sti
loop
push
icebp
cld
or
into
mov
adcl
xor
xor
aam
xor
cmp
fcmovnu
ret
out
aad
out
cmp
xor
cmc
in
shr
int3
jmp
out
fnsetpm(287
inc
fmull
int3
in
lret
out
repz
aaa
call
cld
lock
cmp
aas
fcmovnu
cld
stc
ljmp
cs
repz
in
lock
cmc
loop
into
in
addl
in
ficoms
cmp
icebp
ds
aaa
sarb
rcr
cmp
cmp
loopne
mov
loope
or
jmp
aad
iret
in
fcomip
clc
rcr
repnz
bnd
add
cld
mov
repz
out
clc
lock
in
out
iret
leave
fdiv
repz
sarb
fnstcw
loop
loope
fimull
xor
aam
out
call
sti
fcmove
aam
xchg
cmp
in
ret
clc
out
mov
repz
aad
fcmove
into
aam
cmp
cmp
ror
aad
icebp
rol
lret
in
cli
loopne
rolb
lret
aaa
in
fsubp
fcmovbe
sti
sar
into
in
stc
call
out
in
iret
sub
repz
enter
sti
out
aam
loop
cmp
in
xlat
cli
ret
in
clc
jmp
ficoms
les
jecxz
aad
int3
ss
mov
enter
loop
std
fmul
loope
shr
test
bnd
lret
cmp
lret
aam
fcomp
in
cli
sub
sbb
mov
repz
in
stc
cld
cmp
lock
lock
sar
iret
aam
sti
test
cli
call
sbb
int
repnz
aaa
cmp
int
cmp
loop
mov
ds
mov
mov
das
sub
cmp
aad
aam
loop
and
vpsrlq
fsubrp
test
shr
int3
shr
cmp
lock
out
cmp
cmp
addb
stc
jmp
std
repz
xor
xor
jmp
aad
cmp
repz
clc
hlt
ret
rcl
std
into
enter
shl
clc
das
cmp
lock
lret
cmp
loop
loope
in
lock
aam
inc
lret
filds
mov
repnz
ss
fsubp
cmpl
out
or
loope
int3
out
loopne
xchg
aad
call
in
int3
addb
loopne
ljmp
xchg
sub
clc
repz
in
cmp
fcomp
test
aas
std
les
fimull
mov
xor
sti
xor
int3
loopne
aam
jecxz
cmp
std
xchg
jmp
out
nop
xchg
into
call
xor
cmp
lea
mov
mov
mov
xor
add
mov
mov
mov
mov
mov
mov
jmp
iret
xlat
rcl
fcomp
iret
bound
pop
aas
push
xor
jle
movsl
add
jmp
fcomi
shl
loope
sti
roll
out
shr
call
aad
jmp
neg
stc
sar
std
fxam
xchg
cli
xor
ljmp
testb
aad
xor
ret
fildl
leave
cld
ljmp
mov
int3
hlt
aam
xor
out
into
cmp
xor
hlt
hlt
sar
mov
in
loopne
fucomp
xchg
out
cmp
test
cmp
in
out
xor
int3
not
aam
call
cld
mov
fmulp
cmc
xlat
xor
into
hlt
cmc
fdivrs
aad
cmp
test
movb
addl
ret
in
sub
fidivs
cmc
ds
aad
out
ljmp
fdivp
out
loop
sub
xlat
fdivrs
cmp
sti
test
mov
nop
in
in
xor
fcmovnu
in
fbstp
hlt
in
jmp
stc
sbb
rol
cmp
fldl
ret
aam
hlt
out
cmp
icebp
test
clc
loopne
rol
test
out
out
fldl
imul
jmp
xor
out
xor
fldz
sbb
mov
test
std
mov
loope
lret
loope
cs
cmp
hlt
xlat
out
xor
aas
icebp
fadd
stc
std
incb
into
jmp
shl
xor
into
cmp
icebp
sti
int3
fdivp
neg
in
jecxz
int3
enter
rorb
xor
cmc
shr
sar
fcomi
clc
sti
repz
cmp
sti
aad
mov
loopne
xchg
int
hlt
fxch
sub
fdivl
ljmp
adc
out
std
stc
addb
ljmp
cs
out
sarb
cmp
addb
xchg
loope
xor
xor
cli
lret
jecxz
rcr
cmp
in
int3
iret
out
in
int
xchg
clc
fsubr
xor
jmp
jmp
lock
ret
shl
xlat
in
test
and
ljmp
cli
jmp
out
jecxz
lock
jmp
fisttps
and
out
das
cmp
out
enter
std
rol
cmc
testb
xlat
loopne
fcmovnu
lock
test
leave
iret
test
shl
cli
in
cld
in
in
in
sub
in
mov
cmc
mov
fcom
cmp
cmp
sti
repz
cmp
test
idiv
xlat
mov
leave
fucom
in
xor
fcomp
xor
clc
addl
aad
imul
std
cli
std
shl
loopne
xorl
stc
aam
lret
fistpll
jmp
rcr
cmc
cld
std
orl
sti
ror
in
mov
shr
in
int
out
aas
in
fistpll
idiv
clc
ds
cmp
xchg
shl
in
xor
lret
enter
ror
repnz
aam
loopne
test
in
adcl
ret
ror
cmp
leave
sti
and
hlt
ss
cmp
mov
lret
enter
lock
stc
xor
clc
xor
fdivrl
loope
jmp
in
in
incl
das
jmp
xor
out
cmc
out
shl
add
sti
xlat
fdivrp
loop
fadds
mov
ret
das
lock
enter
sarb
out
idiv
out
xchg
jmp
clc
xor
repnz
ss
sar
xchg
xchg
call
int
repnz
mov
lret
ljmp
cld
leave
fucomip
ds
loope
fmull
loop
int3
ret
ret
cmp
aam
ror
cmp
xchg
incb
enter
jmp
xchg
xor
cmc
stc
clc
cmp
loopne
test
hlt
std
std
cmp
iret
icebp
in
nop
lock
cmp
aad
into
icebp
aaa
xlat
loopne
fiaddl
mov
sti
lret
in
xchg
repnz
ljmp
sar
sarb
imul
aad
repz
aad
div
loopne
repnz
lret
enter
into
test
test
cmp
stc
mov
test
jmp
mov
jmp
fsub
idiv
aam
aam
shl
fnstcw
mov
aas
ret
aad
aad
mov
out
push
jle
movsl
add
hlt
testb
nop
in
mov
incl
cmc
fucomi
cli
fidivrs
loop
ret
call
iret
fdiv
fstp
lret
enter
out
fmulp
xchg
jmp
cmc
not
aam
ljmp
cmp
cmc
cld
fcmovne
in
lret
ret
int
xchg
in
out
ss
imul
int
ret
test
fcmovnu
fcmovnbe
xchg
xchg
xchg
out
f2xm1
xor
sar
enter
out
and
fldl
leave
addl
rcl
xor
loopne
iret
cmp
rcr
loop
fistl
xlat
shlb
in
out
adc
ds
adc
in
leave
incl
cmc
repz
sub
lock
cmp
lock
cmp
rcr
repz
out
cld
or
orb
out
xor
fcomi
cmp
hlt
cmc
iret
out
rcr
jecxz
in
loope
std
mov
lock
icebp
aam
clc
enter
repz
xchg
lret
incb
fdivp
xor
aad
aam
cld
cmp
lock
out
lret
mov
addl
lret
loope
sarl
std
xor
cmc
divb
out
test
loope
mov
lea
int3
test
aam
jmp
call
sar
repnz
sti
fcmovu
mov
in
stc
incl
xor
jmp
cmc
aaa
aam
aad
loop
vpextrw
fcomp
mov
dec
out
xchg
loopne
fsub
shl
int3
int
lret
aam
cmp
cmp
out
std
sti
out
fsub
in
out
lock
nop
int3
in
out
aad
cmp
les
idivb
fidivrs
dec
rcl
in
jecxz
fimull
iret
out
inc
loope
cmc
lret
icebp
dec
loopne
ret
cmp
in
mov
mov
in
lret
clc
ret
xor
aaa
cmc
out
out
test
not
ret
xchg
clc
out
nop
incb
xchg
in
out
out
cli
cmp
cmp
aad
test
ds
hlt
mov
xchg
sti
out
rcl
out
cmc
jecxz
ret
sti
stc
jmp
sbb
sbb
in
call
int3
cld
xchg
xchg
xor
divl
in
call
cmp
into
cli
addl
mov
shll
xor
repz
repnz
fcmovu
loop
test
sbb
mov
cmc
xor
in
shl
fcmovnu
aas
lret
out
loopne
cli
loop
loop
clc
fsubr
out
mov
in
mov
out
ret
cmc
out
aaa
enter
cmp
fcmovnu
in
out
in
fcomip
lret
xchg
mov
cmc
lret
stc
out
rcr
fnstsw
cmp
int
repnz
in
in
repnz
loope
clc
ret
xor
rcl
std
cmp
cli
rol
fildl
adc
into
iret
mov
xlat
aam
aad
in
jmp
iret
repnz
cmp
icebp
out
out
hlt
xchg
out
out
loopne
loop
into
lret
ror
lret
in
shl
mov
fldlg2
jecxz
mov
xchg
xchg
jmp
aam
cmp
fcomip
iret
cmc
out
mov
fmul
ret
out
cld
mov
shl
shll
int
in
lret
adc
in
cld
add
in
leave
in
int3
repz
hlt
cmp
in
aam
leave
leave
sbb
testb
loopne
lret
icebp
ss
int3
lock
lock
jmp
fstpt
jecxz
xchg
into
xchg
repnz
out
xor
out
jecxz
aam
cmp
ror
clc
fcomp
cli
cmp
xchg
jmp
int
or
repz
enter
shr
cmp
loope
adc
and
in
loope
xchg
addb
out
fdivp
lret
cmp
les
out
ret
ljmp
fsub
loope
iret
fisttpll
ljmp
cmc
ret
out
std
mov
out
mov
lds
xor
into
lret
fprem
int3
std
cmc
loopne
cld
aas
test
sti
jecxz
stc
int
std
xor
cli
sarl
ret
fdiv
ds
sar
in
mov
add
add
rcr
fcmovnu
mov
push
or
and
movsl
add
test
xchg
ret
in
in
aam
rcl
loopne
addb
icebp
rorl
sub
cmc
in
out
cmc
shl
xor
ss
rcr
fdivr
jecxz
jmp
jecxz
loop
lea
das
lock
fstpt
lock
rol
hlt
fcmovnu
sar
fcmovne
loope
fsubrp
clc
mov
xchg
jmp
clc
sar
dec
adc
rcl
fiaddl
jmp
loope
loop
xor
aam
cli
int3
fprem1
shr
rcr
cmc
ret
cmc
mov
push
fucomip
fcmovne
xchg
loope
int3
mov
shl
out
enter
cmp
neg
in
out
mov
sti
sub
rolb
fsubr
fucomip
in
repnz
in
repnz
xchg
out
out
out
out
jmp
fdiv
int3
int3
rcr
in
std
xlat
into
ror
cld
cmp
fninit
sub
fmull
out
aaa
stc
loop
iret
repnz
icebp
lret
lret
std
addb
enter
xchg
ljmp
xor
icebp
out
cmp
cmp
xchg
mov
in
popl
out
fdivr
cmp
cmp
xor
in
fmuls
cli
leave
repz
xchg
ror
aad
int
cmp
out
enter
int
out
idiv
fucomi
test
test
aad
out
ljmp
repnz
jecxz
iret
mov
rorl
fdivr
iret
iret
icebp
lock
int
jmp
int
incl
jmp
nop
iret
xchg
aam
xchg
xlat
shll
rol
cmp
xlat
in
jecxz
repz
adcl
clc
hlt
in
fcomi
fdivp
adc
cli
stc
fxch
mov
jmp
leave
xor
ss
repnz
jmp
test
mov
fldl2t
leave
lret
lret
ror
jecxz
clc
ret
out
sti
leave
enter
int3
sbb
test
leave
in
fucom
in
nop
jmp
neg
aad
addb
mov
jmp
jmp
iret
loop
xchg
in
xlat
clc
aaa
les
leave
iret
loopne
cli
incl
mov
mov
test
repz
aam
aam
cli
loop
xor
loope
test
lock
aas
ret
call
aaa
cli
rcr
loope
cld
out
and
test
int
xlat
orb
jmp
cmp
iret
loopne
into
loope
test
out
ffree
out
loop
stc
out
sti
xor
lret
int
in
xlat
ret
sti
call
jmp
lret
xchg
icebp
icebp
shr
fldt
and
sarb
fcmovu
clc
mov
xchg
out
hlt
aaa
xlat
xor
xor
clc
fdivrl
in
loop
fcmovnbe
xchg
incl
fdivrp
std
rcr
mov
leave
ret
fldcw
div
enter
cmpl
lret
jmp
lock
into
iret
lds
fnstsw
jmp
ror
into
roll
testb
xchg
hlt
enter
iret
repz
loope
out
loope
out
fnstsw
std
icebp
mov
sub
aad
repz
xor
aam
repz
aad
aaa
test
loop
fcmovnu
loope
shl
in
xchg
jmp
sub
fnstenv
call
into
in
in
call
mov
adc
cmp
ss
loope
fildl
add
xchg
adcb
fcmove
lock
in
cmp
aaa
cmpl
mov
sti
sbb
hlt
std
xchg
int
sub
in
xor
lock
sar
icebp
clc
cmp
cli
std
lds
nop
mov
sub
rcr
cmp
iret
lret
shr
std
div
int3
sar
cld
add
cmp
cld
loopne
in
in
xlat
xor
lret
sarb
sti
sar
aad
in
in
xlat
sub
xchg
into
int
in
xor
ret
cmp
stc
out
icebp
not
repnz
std
cld
ljmp
std
lock
mov
jmp
ret
leave
aad
fcmovnu
sub
sub
cmp
jle
movsl
add
hlt
call
rcl
repz
idivb
aas
les
fmul
into
iret
fucomp
mov
mul
fmul
sti
xor
iret
out
cmp
idiv
xor
out
fnstsw
aam
out
iret
loopne
repz
jecxz
in
in
hlt
xor
fcmovu
loopne
xlat
clc
mov
jmp
repz
in
mov
rcr
cmp
jmp
sti
xlat
loope
hlt
mov
faddl
test
out
cmc
xchg
shll
int
lret
repnz
in
xlat
ret
cmp
std
sbb
addl
icebp
out
jmp
fiadds
and
repz
jmp
leave
jmp
ret
cmp
cmc
aaa
fxch
fsub
rcr
stc
rcr
hlt
aad
into
in
xchg
fsubrp
call
out
ror
clc
mul
lret
cmc
cmp
in
sti
fisttps
jecxz
stc
out
repnz
xchg
out
jmp
lret
in
out
neg
std
lret
cld
cmc
loopne
rcr
xlat
loope
jmp
int3
jmp
loope
imull
jmp
int
shl
aad
sar
in
aas
loope
fiaddl
lret
orb
jecxz
ljmp
cmp
add
loop
lret
in
in
nop
ror
in
cmp
xor
icebp
int3
fistpll
out
ds
in
std
loop
stc
mov
jmp
ljmp
loopne
test
aad
mov
icebp
cli
in
icebp
std
jmp
cmp
clc
int
aaa
fcmovbe
sbb
rcl
ljmp
lret
call
enter
out
cld
cld
add
xchg
jecxz
orl
xchg
int
jecxz
fsubr
stc
not
fcom
not
lock
repnz
cli
xchg
into
fxch
or
in
shlb
lds
out
icebp
out
out
cmc
lret
cli
loop
sar
incl
jecxz
mov
out
in
out
xor
rol
cmp
shl
repnz
out
out
xchg
shl
jecxz
loope
rol
std
sti
repnz
loope
hlt
aam
ret
movl
out
in
repz
xor
cmp
in
out
addb
sti
and
jmp
mov
jecxz
ljmp
sti
lock
cli
repz
xchg
clc
stc
repz
fmulp
into
xchg
in
in
aam
div
int
cli
stc
fdiv
cmc
flds
fadds
mov
out
fisubrs
shl
jmp
jecxz
ret
repnz
ret
decb
mov
test
aas
cli
in
aad
lret
sar
repz
cmc
in
aad
jecxz
ffree
addb
rcl
jmp
in
out
stc
fidivl
ds
testl
out
loop
xchg
jecxz
in
xchg
xchg
ret
cli
imul
repz
fdivl
xor
sar
loopne
test
loop
jmp
fsub
xor
int
rcl
repnz
aam
rcl
test
mov
mov
in
loopne
lret
fcmovne
aam
fcmovnbe
ss
lret
repnz
loopne
cmc
in
stc
jmp
ljmp
call
cmc
fsub
cmp
cmp
ffreep
test
movb
in
lock
cld
repz
shl
out
fsubrp
cmp
out
loopne
hlt
rcl
loop
in
jmp
stc
xchg
out
leave
fucom
xor
out
cmc
fpatan
cmc
cmp
lock
aad
idiv
in
in
mov
in
mov
loope
rol
repnz
ljmp
stc
fadds
testl
lret
fcom
out
ss
loop
ret
cmp
out
cld
loopne
call
call
into
int3
repz
fcomip
icebp
hlt
into
into
aad
test
faddl
fsubrp
fxch
ror
into
ss
jmp
clc
aam
in
stc
int3
call
std
xchg
jecxz
in
lock
out
lock
loop
xlat
stc
jecxz
loopne
int
cld
in
imul
cmp
cmc
cli
idivb
aas
clc
aas
lock
out
lock
in
fcmove
xchg
lea
icebp
loopne
stc
das
shl
in
mov
xor
add
cmp
jmp
vaddsubpd
rcr
pop
push
xchg
fisttpl
jnp
test
jle
add
aam
enter
aam
out
xchg
enter
out
icebp
xchg
in
int3
test
xor
fstp
in
repz
cmp
lock
loope
ljmp
test
in
call
cli
xor
out
call
icebp
cmc
lock
xchg
hlt
loop
int
lret
fcomi
adcl
int3
imul
aas
test
ljmp
addb
in
xor
ss
icebp
into
inc
lret
repz
aas
roll
in
lea
xor
out
int
sti
cmp
cmp
add
cmp
shl
jmp
stc
nop
jmp
loopne
cmp
rol
xlat
cmp
fiaddl
out
xchg
or
xchg
in
xchg
out
enter
stc
in
enter
sar
repnz
aam
out
fucomip
cmc
clc
add
in
jmp
ljmp
int3
cld
cmp
stc
fcomp
mov
fdivr
out
mov
leave
int3
xchg
mov
in
out
in
int3
out
aaa
loope
cld
sarb
rol
sti
mul
std
jmp
fdivp
nop
hlt
jecxz
das
shll
out
in
out
fildl
aas
xor
test
sti
in
mov
xchg
in
xor
repnz
lret
das
int
loope
repz
xor
frndint
cmp
lret
into
xchg
out
xchg
idivb
cli
xor
out
ss
xlat
hlt
cld
ret
cli
sub
mov
out
in
out
out
repnz
loopne
lret
out
div
in
out
into
cli
ret
jecxz
aad
xchg
repz
cld
in
sub
out
fsub
enter
fcomi
sar
icebp
fadd
jecxz
mov
clc
fimuls
mov
cmc
lret
aam
hlt
out
into
xor
addl
ret
call
test
test
out
rcr
cmp
xlat
out
xlat
iret
xlat
ss
fidivrs
in
mul
fcomp
std
jecxz
fsub
shl
test
xor
out
ror
sti
jmp
loope
in
fnstsw
loope
loope
mov
cld
int3
cld
loop
xchg
imul
stc
xor
repnz
repz
loop
clc
repz
movl
repz
filds
fld1
movl
iret
add
repnz
iret
lret
fsubp
iret
ret
cld
cmp
cmc
cld
call
loopne
out
in
xchg
rclb
cmp
aam
cmp
div
aam
loopne
in
mov
iret
rolb
div
fadd
xor
cmp
cmp
test
fisttps
loope
addb
out
out
sti
stc
shl
addb
aad
out
mov
fyl2x
shr
in
xor
xor
in
loop
lock
cld
cmc
sti
mov
call
repnz
cmp
xor
sti
lret
in
out
inc
mov
testl
iret
lret
hlt
stc
cmc
sar
loopne
and
cld
loope
push
clc
fiaddl
int
mov
les
stc
imul
fistpll
in
aam
out
incl
fxam
lret
jmp
into
loopne
sub
iret
cs
cli
cli
clc
hlt
fidivrl
fstpt
shl
rol
hlt
cmp
mov
jmp
lret
repnz
ss
aad
ss
shl
int3
div
cmp
shl
inc
aam
repz
aad
call
std
into
out
in
xchg
stc
aam
sub
int
in
lret
in
loopne
out
shl
sti
fcmovu
mov
call
shll
shl
cmp
xlat
xor
fadd
fcomp
in
clc
sbb
test
mov
cs
out
ds
in
in
dec
into
aaa
aad
cli
faddp
cmp
fsubr
xchg
loop
lock
mov
xlat
in
xor
aam
cmp
xor
stc
mov
jmp
xchg
xchg
out
out
hlt
ss
sti
lret
sti
aad
stc
repz
test
out
lret
test
mov
incb
in
out
cmp
in
iret
addb
loopne
clc
lret
enter
or
shr
xor
das
sti
enter
lock
xlat
aad
cmp
jmp
jecxz
roll
icebp
out
cmp
jne
mov
jmp
rcl
fcom
fcom
fstp
outsb
push
mov
movsb
sbbb
xor
movsl
add
fadd
cmp
call
in
xchg
lock
les
cmp
rcr
fstpt
xlat
shl
loope
orl
out
ljmp
xor
int3
cmp
cmp
shl
loope
sbb
repnz
call
int3
rcl
xor
in
enter
rolb
icebp
fisttpll
lret
flds
out
xlat
vpsrlq
repz
fadds
out
cmp
aam
out
std
shr
out
hlt
jmp
icebp
shl
in
xlat
cmp
cld
lock
neg
cmp
loop
stc
in
cli
in
jmp
mov
mov
iret
out
call
cmp
in
out
call
or
fcmovnu
in
fdivr
in
aad
enter
fsubrp
aam
std
test
std
jmp
xchg
jmp
call
repnz
ret
jmp
enter
fcom
in
out
out
leave
xlat
cmp
loopne
mov
out
in
shlb
in
xor
in
cli
int
int3
dec
jmp
faddl
fistl
xchg
test
ret
cmc
cmc
fcomp
lret
rcl
ret
sar
roll
sti
mov
ss
cmp
clc
cld
shr
cmc
hlt
jecxz
loop
mov
in
jecxz
sti
rorl
shr
aaa
cmc
leave
ljmp
lock
idiv
jecxz
imul
out
jecxz
roll
stc
shl
aaa
repz
mov
out
out
aad
enter
fsin
imul
test
into
nop
repnz
out
das
ss
cmp
adc
lea
lock
aam
lock
cli
call
shr
test
clc
repnz
addb
xlat
fstp
in
and
out
stc
das
cli
jmp
clc
sti
jmp
out
ffreep
lock
out
addl
fsubrp
aad
shlb
ret
rcl
repz
hlt
shl
in
in
into
test
xchg
fdivrp
mov
mov
nop
iret
sar
not
aaa
clc
cli
xor
not
stc
aad
test
cmc
in
mov
repnz
xchg
lock
aaa
repnz
cmp
xor
iret
in
cmp
adc
cli
ret
inc
fprem
mov
fucomp
jmp
adc
ror
into
rcr
icebp
fsubr
cmp
out
sti
shl
cmc
and
xabort
adc
ljmp
cli
cli
aas
incb
xchg
stc
repz
in
jecxz
in
in
stc
out
fdivrl
icebp
in
aad
loope
ret
loop
call
mov
sub
xor
leave
int3
cmpb
loopne
addl
iret
into
fmulp
lock
mov
jecxz
xlat
lock
int
sti
sti
adc
stc
add
call
mov
xchg
mov
fcmovne
call
stc
repnz
stc
std
ret
hlt
aad
call
xchg
jmp
ljmp
aas
call
xchg
test
mov
test
xor
sti
cld
int3
pushl
aas
cmp
jecxz
mov
filds
out
loop
test
in
vcvtdq2pd
iret
hlt
cld
aad
ret
mul
sbb
fucomip
sti
jmp
std
out
out
leave
call
clc
fidivrl
ret
test
roll
int3
xchg
out
sarb
lret
das
out
icebp
fcomip
repnz
lock
iret
out
repnz
std
ffree
and
ljmp
in
out
jmp
std
in
xlat
ret
nop
loop
jmp
aam
fnstenv
aas
stc
fdiv
fadd
aad
hlt
fldl
fsubrp
xchg
xchg
jmp
repnz
ljmp
fdiv
ds
fsub
test
fmull
out
mov
loopne
leave
aaa
idiv
cmp
fcmovnu
cld
xlat
repz
in
aam
fcmovnb
ret
xchg
xchg
test
divl
ror
leave
sti
xlat
lret
cmc
aas
int
sti
loope
iret
cli
out
test
sub
jecxz
mov
out
int3
in
jecxz
sar
repz
enter
in
test
fsubp
test
out
in
mov
ret
in
call
aad
neg
fcmovnu
and
test
mov
xor
add
cmp
jne
mov
mov
xor
add
mov
mov
mov
jmp
ret
fstp
ret
frstor
mov
push
jb
push
xor
jle
hlt
sti
mov
mov
jecxz
ret
cli
lret
loope
lock
test
ret
fadd
fsubr
mov
fsub
cli
cli
hlt
jecxz
mov
les
cmp
int3
fdivr
cmp
clc
iret
add
mov
cld
loopne
loopne
rolb
ss
xor
int
cmp
out
sbb
ffree
mov
jecxz
jmp
fimull
ljmp
cmp
lret
repz
imul
int
icebp
rcl
testl
into
loopne
out
ret
cmp
xlat
cmp
out
cmp
shl
enter
stc
clc
fsincos
jecxz
sub
lock
clc
xor
xor
cld
loope
cld
ljmp
sti
jecxz
mov
jmp
cmp
repz
xchg
aad
ds
jmp
int
lret
xor
into
xor
int3
shl
cmp
call
iret
ret
testb
ljmp
mov
lret
int
leave
clc
fistpll
jecxz
rcr
fcomp
out
into
lock
nop
repz
lret
rcr
xor
stc
fucomp
cmc
cmp
in
int
repnz
sub
sbb
lret
orb
cmp
out
xor
aam
std
loope
aad
icebp
stc
rolb
mov
call
xor
int
lret
loopne
rcr
repz
not
or
lret
test
int3
iret
rorb
in
loop
shr
icebp
stc
repz
ds
stc
mul
mov
fcmovb
or
repnz
fcmovnbe
cmp
sar
lock
sti
ret
in
imul
in
clc
ljmp
call
dec
cmc
leave
shl
fadd
loope
out
div
jmp
loope
icebp
in
sub
lock
fsub
lret
into
idivb
aad
cmc
incl
lret
out
fsubr
enter
aam
test
shr
out
xlat
ss
cmp
ds
icebp
rol
shl
mov
icebp
and
jmp
enter
std
fldpi
jmp
stc
xor
testb
in
call
fcmovnu
shlb
aam
cmp
aam
in
std
cmc
or
jmp
mov
xor
out
out
sbb
xchg
shl
enter
nop
xchg
mov
shr
mul
in
loopne
cli
out
sti
loopne
in
lock
test
xor
ljmp
cli
fiaddl
test
ret
ljmp
std
in
clc
out
cmc
jecxz
fdivrl
repz
in
xor
ds
filds
clc
fmull
in
lock
call
call
int3
stc
repz
aad
aad
in
test
jecxz
mov
lret
int
push
shl
sbb
ret
fcmove
imul
in
xchg
int
out
xchg
mov
enter
std
cld
xlat
out
ljmp
out
xor
out
mov
out
hlt
ret
sti
jmp
loope
sar
icebp
cmpb
orb
stc
in
iret
ljmp
xor
cmp
enter
cmc
repz
leave
ror
int3
fld
mov
mov
in
in
call
cli
lret
out
jmp
aas
cmp
adc
out
xchg
loopne
std
stc
out
jecxz
lret
shr
repnz
enter
std
enter
repnz
xlat
ret
shl
call
jmp
icebp
xchg
into
rolb
int
cmp
loopne
in
shl
cmp
xchg
loope
lret
sti
leave
and
xchg
xchg
aaa
fabs
ror
les
xor
in
test
fisttps
sub
in
ret
in
in
test
rcl
out
fsubrp
fistpll
enter
mov
sti
repz
cld
loope
xor
xor
enter
ljmp
sbb
leave
rcl
loope
lock
mov
in
sti
in
stc
in
out
sarb
aas
sar
fcom
xchg
mov
shl
cs
cmp
int3
out
rcr
sarl
ret
loopne
nop
xchg
xchg
shll
fsubr
in
enter
xor
in
repnz
shl
idiv
mov
cmp
xor
mov
sub
add
mov
mov
mov
movzwl
add
mov
mov
mov
xor
jmp
aam
fistl
mov
jle
movsl
add
jmp
das
xor
lret
int3
fdivr
in
in
in
fdivp
sti
jmp
lret
ret
test
repnz
sub
in
into
ss
testb
leave
ret
xchg
faddl
lret
out
lret
lret
in
icebp
test
loop
loopne
enter
cli
out
out
loopne
sar
call
fidivrl
fsubr
cmp
ret
shl
fiaddl
xlat
fucom
call
jmp
in
cmp
aad
fld
iret
roll
loop
stc
ret
repz
leave
les
iret
addb
ret
loopne
stc
mov
fisttpll
ret
cmc
hlt
ss
fucomi
roll
push
out
leave
in
sti
mov
out
in
repz
std
call
out
std
repnz
cmp
test
mov
mov
aam
hlt
aaa
clc
fsub
leave
aas
int3
icebp
cmp
std
neg
add
jecxz
in
xchg
repz
ljmp
cmc
sti
ljmp
aam
sbb
ret
aam
in
loopne
stc
out
lret
adcb
cmp
xor
out
rcl
cmp
xlat
jmp
in
fst
in
xchg
test
ret
xor
cmc
cmp
cmc
aam
addb
call
in
jmp
int3
xor
iret
loope
repnz
cmp
out
loop
cli
std
mov
sti
filds
ss
in
iret
shlb
cmp
icebp
cmc
icebp
xchg
mov
loopne
out
or
aad
rol
stc
std
cmc
repnz
loop,pt
repnz
cmp
repnz
ret
sbb
sti
repnz
xchg
sub
into
stc
xor
enter
fndisi(8087
add
aas
rcr
test
sub
iret
out
out
in
cli
xor
fdivs
sti
cmc
out
hlt
adc
fsubp
fucom
leave
lret
movl
xlat
into
idivl
cmp
repnz
cmpb
leave
stc
addb
in
shl
vpsrld
div
in
fcom
rolb
hlt
fmull
leave
in
in
jecxz
fadd
jmp
std
out
xlat
out
in
std
ret
into
repnz
loope
mov
in
rorl
ret
std
leave
cmp
lret
repnz
xchg
and
enter
fndisi(8087
int
mov
hlt
xor
xor
lret
sti
repnz
cmp
jecxz
testl
out
xor
into
enter
in
in
fcmovnbe
cmp
xlat
iret
xlat
cli
les
into
in
mov
lock
aad
imull
cmp
int
stc
enter
in
loope
sti
lret
lock
sar
idivl
clc
sti
fsubr
fnstcw
int
in
addb
fimuls
addl
jmp
loop
fcmovnbe
out
ret
fisttpll
lret
xchg
leave
out
ret
call
cld
cmc
int3
fcmovu
ror
hlt
in
int3
lret
xchg
enter
xchg
ror
call
hlt
loope
ljmp
out
lret
jmp
ret
cli
jmp
int3
ljmp
ljmp
jecxz
mov
xchg
int3
fmul
cld
lret
into
jecxz
ss
int3
repnz
enter
cld
shl
loope
mov
in
jmp
jecxz
xchg
fisttps
ss
ss
fdivl
fscale
loop
cli
leave
lret
leave
in
xchg
xor
out
xor
aad
int
cli
loope
cmp
mov
clc
mov
icebp
test
xor
ds
hlt
std
xchg
enter
cli
in
call
out
loope
rol
ret
cmc
in
xor
and
int
xor
repz
call
movl
fadd
out
rcr
or
and
repnz
cmp
xchg
shl
call
iret
xor
fdiv
clc
xlat
cld
sar
roll
loop
out
call
sub
ror
out
lock
fcmovb
into
sbb
out
mov
jecxz
out
test
enter
jmp
fstp
je
xchg
or
and
jle
movsl
add
xor
repz
cmp
sbb
mov
mov
mov
in
out
rcr
lock
call
in
mul
fsubp
shl
clc
cld
stc
mov
fsub
enter
mov
call
cmp
clc
cmp
shl
mov
clc
jecxz
mov
out
call
ror
in
rol
cmp
and
xchg
hlt
std
decb
repnz
int
jmp
xor
int3
cmp
ds
loop
out
ljmp
into
loopne
jmp
out
ret
ss
fidivrs
cmp
cli
in
fcomip
fiaddl
cld
addl
mov
call
cmp
fdiv
in
fcomip
sub
xchg
ljmp
mov
in
std
icebp
cmp
rcl
aam
loopne
out
rorb
fcoml
in
xlat
cli
sti
repz
rcl
rolb
imul
test
sub
xor
loop
out
icebp
int3
cmp
repz
movb
and
xchg
fdivp
aas
loop
hlt
sti
into
int
jmp
rcr
aam
hlt
std
hlt
leave
ffree
lret
mov
fucomp
xchg
aad
aam
fdivr
out
fsubrp
sti
ljmp
sti
idiv
in
lret
cli
decl
jmp
ss
ss
lock
icebp
fdivr
hlt
sti
clc
fcmovne
xchg
jmp
out
jmp
xor
leave
icebp
jmp
iret
cli
cmp
fsub
testb
adcl
fnstenv
cmp
out
filds
sar
icebp
std
cli
ret
call
out
icebp
mov
xlat
int
call
out
loop
cld
loopne
ret
aam
rol
cmc
cld
imul
lret
ljmp
lret
aaa
in
fdivrl
repnz
cld
mov
fcmovbe
adcb
neg
repnz
out
iret
aas
in
jmp
lock
mov
fmul
fdiv
clc
enter
lock
leave
lock
clc
cli
test
stc
xchg
cli
std
int
xchg
fst
div
loope
iret
ss
rol
fldl
jmp
out
xchg
jmp
stc
xor
test
cmp
ret
ds
fucomip
or
enter
iret
in
shl
shr
ret
xlat
cmp
repnz
mov
cmp
fld
cli
int3
ljmp
aad
lret
cmp
int3
rol
lock
test
enter
movl
fldln2
fcmovbe
rcr
aad
repz
ds
incl
cld
lock
out
shr
aam
int
cmc
hlt
or
sti
cmp
cmp
cmc
fisttpl
in
out
xchg
lret
jecxz
in
neg
xlat
ds
rcl
adc
ret
mov
in
xchg
test
lock
hlt
jecxz
in
les
cmp
cld
cli
loop
loope
enter
int3
in
clc
mov
fsubrp
rclb
hlt
sti
sarl
xlat
jmp
fidivrs
loop
cld
cli
leave
out
mov
lock
ljmp
push
into
out
ftst
cmp
rol
mul
aas
mov
icebp
jmp
test
into
xor
cmp
stc
sti
cmp
loope
sti
xchg
les
out
sub
test
loopne
call
fidivl
divb
int
fdivp
out
fucomi
clc
sti
out
rol
xchg
xchg
iret
out
loope
int
enter
hlt
repnz
neg
test
repnz
aam
leave
cld
lret
sti
xchg
decl
xor
xor
xlat
cld
fdivrp
lret
out
int3
cmp
fiaddl
lret
mov
rcll
out
lret
loop
enter
aad
divb
ret
filds
int
cld
iret
mov
hlt
fxch
cli
fcmovu
aam
and
test
in
fiadds
clc
in
adcb
cmc
jmp
call
jecxz
rcr
sti
addb
orl
fcmovnbe
neg
in
ljmp
fildl
xbegin
xchg
enter
xor
sub
mov
movzwl
sub
cmp
mov
movzwl
jg
jmp
int
rol
fst
lcall
jecxz
ret
jle
movsl
add
and
std
test
aad
cmp
test
xchg
jmp
ljmp
hlt
out
les
cmc
ret
fdivr
orb
cmc
jmp
out
xor
fmul
fst
div
les
ret
aad
add
loope
mov
rorb
leave
xor
in
fscale
fucomi
fstp
sarl
xchg
cld
sti
jecxz
mov
int3
int3
repnz
shlb
hlt
sti
lds
cmc
aaa
repnz
cld
sub
shr
jmp
loope
fcmovnbe
lock
repz
fdecstp
cld
ds
aas
out
loopne
test
stc
ret
adc
in
xchg
xchg
movl
shl
loop
icebp
lock
fst
fdivr
aad
clc
loope
mov
test
loop
xlat
aam
call
loope
addl
xchg
incb
into
ljmp
hlt
xor
cmp
vpavgb
loopne
mov
cli
test
sub
cmp
int
enter
int
loope
stc
xor
fsubp
cmc
in
fcmovnu
mov
call
in
shr
cmp
loope
hlt
loop
test
std
cmp
xchg
out
mov
out
out
sub
into
in
out
out
aas
sbb
clc
adc
fnclex
cld
decl
icebp
xchg
orb
icebp
fsubrp
repnz
in
loope
loope
ds
xlat
fcmovb
jecxz
fxch
xchg
out
fisttps
ftst
xor
shr
cli
in
fucomip
loope
addl
int3
in
ljmp
cli
lock
int
out
cmp
not
stc
xchg
sar
test
call
ljmp
enter
in
sti
cmp
clc
repnz
mov
in
std
mov
ror
adc
das
fcomi
lret
sarl
sti
cld
ret
cmp
out
out
loopne
and
xchg
mov
sub
imul
sarl
int
in
rcr
fildl
enter
rorb
leave
idiv
repnz
sti
sar
iret
repz
fucom
in
aam
fmull
repnz
fldl
aaa
lock
enter
std
faddl
in
jecxz
clc
xchg
mov
roll
xor
jmp
fucomp
ljmp
loop
clc
ror
test
sub
leave
iret
loop
int
icebp
cmp
rcl
ljmp
test
fsubr
loopne
fisttpl
int3
loopne
aad
cs
xor
imul
clc
in
enter
ss
fneni(8087
fisttps
ljmp
mov
lock
das
icebp
cld
jmp
shl
in
fsub
and
enter
jmp
xchg
repnz
in
iret
clc
sub
in
int
in
cmp
jmp
stc
out
jmp
ret
mul
loope
loope
cmc
out
test
xor
xor
call
sub
fstp
clc
out
fiaddl
mov
ror
imul
filds
filds
aad
fsubr
fcoms
jmp
iret
hlt
aaa
shl
out
jmp
aad
xor
loopne
jecxz
loope
rol
mov
test
xchg
test
xor
iret
iret
std
cmp
into
clc
aas
out
repz
cmc
sti
enter
mov
jmp
ss
xor
in
out
std
int
icebp
idivb
in
std
out
xor
loope
leave
out
icebp
ficoms
xor
repz
ss
or
stc
incb
mov
loope
rorb
loopne
ss
shr
fmul
fdiv
roll
jmp
cld
mov
icebp
std
in
lret
icebp
xchg
and
ljmp
int
cmp
cmp
fninit
loopne
test
lds
fst
aad
jmp
xor
fucomip
rcr
fcmovb
out
fadd
out
and
jmp
test
xor
xor
aam
repnz
ss
shr
int3
sti
fiadds
test
xchg
xchg
out
shl
fsub
xor
out
iret
int
xlat
incb
std
fmul
mov
xchg
repnz
aaa
loop
hlt
out
cld
lret
aaa
aas
mul
cmpl
fsubr
lret
shl
in
ljmp
icebp
xor
lret
in
div
lds
sub
sub
mov
jmp
jmp
leave
ret
int
int
mov
mov
jle
movsl
add
iret
xchg
jmp
sub
icebp
int
in
out
aas
fucomp
icebp
jmp
fst
sar
loop
cld
addb
jecxz
out
jecxz
cmc
repnz
neg
aas
sarl
cmp
rcr
fistpll
enter
leave
clc
mov
fimull
das
lock
int
int3
out
ss
xor
icebp
in
stc
filds
cli
jmp
stc
sub
xchg
lret
xor
jmp
jecxz
inc
rol
fdivp
cmc
loopne
xchg
sti
repz
rolb
div
xlat
out
ljmp
fdivp
rorl
in
mov
shl
cld
neg
sub
clc
fnstsw
aaa
jecxz
sbb
sti
in
loope
nop
mov
repnz
enter
into
xlat
ror
ret
in
std
sar
mov
jecxz
stc
mov
loope
xchg
out
call
in
xor
rcl
fpatan
iret
ret
rolb
int3
xchg
leave
in
ficoms
imul
xor
stc
fmul
cmp
loope
out
loope
cmp
mov
mov
mov
orb
aad
xor
sarl
in
shl
in
std
mov
push
fmulp
lret
xchg
enter
sarb
stc
hlt
push
vpavgw
orb
jmp
fld
enter
fdivr
ds
cmp
fdivrs
leave
ror
aad
fucomip
ret
in
hlt
cmc
ljmp
roll
testb
ljmp
cld
enter
cmp
cmp
out
roll
sti
fmull
fucomip
xor
mul
xor
fyl2xp1
cmp
aam
aas
loop
cli
fcomip
jmp
into
int
int
icebp
and
out
in
loop
hlt
ret
sar
jmp
xor
orl
jmp
in
cmp
ds
addl
std
rorb
xchg
mov
aaa
shll
cmp
jmp
cmp
test
xchg
in
leave
xchg
xchg
xor
leave
ss
cmp
xor
std
loop
jecxz
rcl
mov
loope
shl
lock
cmp
jmp
leave
cmp
fucomi
out
enter
lret
mov
xchg
cmc
xlat
cmp
cmp
shr
aad
fdiv
enter
cmp
xor
lock
sub
int
stc
stc
ror
loope
stc
sar
jmp
out
std
fcmovne
xchg
in
jmp
shl
enter
lock
shr
clc
std
cld
repz
xor
in
vpavgb
dec
out
rcl
xor
iret
lock
hlt
out
ffree
loopne
jmp
fsubrp
enter
fdivr
in
rcl
aad
jmp
fcomp
push
incb
loope
enter
leave
mov
lock
ljmp
aaa
aam
sarl
hlt
rcl
cmpb
rolb
test
nop
rcl
lret
shl
cld
aam
out
jmp
in
and
out
loopne
loope
jecxz
test
rol
xor
clc
ret
leave
xor
call
loopne
fisttps
fisttps
jecxz
mov
xor
out
icebp
xor
in
loop
repz
iret
cmp
ljmp
out
xchg
out
loope
in
out
cld
jmp
xor
loope
ret
mov
jecxz
jecxz
ret
jmp
std
repnz
aaa
rcl
stc
xlat
cli
mul
cld
mov
repz
xchg
nop
lret
int
in
aam
sarb
cmp
xlat
fdivr
enter
call
mov
std
sar
ret
int
lret
ror
fnstsw
icebp
in
fadd
ljmp
xchg
mov
xchg
mov
in
leave
cmp
cmp
cmp
fcmovb
div
hlt
icebp
clc
in
sti
mov
adc
leave
adcl
mul
stc
cmp
out
aam
add
aad
clc
sbb
loope
loop
xchg
out
sub
ljmp
repnz
aam
clc
in
cld
into
fcom
mov
mov
les
repz
not
sub
aas
ret
cmc
fildl
mov
aam
mov
sar
adc
add
jecxz
adc
xchg
xchg
test
fidivl
aad
out
cmp
lret
repnz
stc
sub
clc
jmp
into
addl
out
shll
aaa
hlt
repnz
loop
aam
aam
mov
in
jmp
test
jmp
repnz
cmc
aam
ror
not
loop
fistpll
aad
stc
std
fucom
les
out
mov
mov
out
xor
call
leave
fcmovne
fcmovnb
rcl
testb
call
jmp
ljmp
out
lock
int
hlt
aam
lea
ret
in
in
out
in
xlat
leave
lock
clc
shr
cld
test
leave
fdivr
in
sti
mov
xor
out
sti
out
aam
ljmp
xlat
ljmp
out
roll
repnz
lock
into
cmp
rcr
shl
std
xchg
jmp
rclb
xor
enter
into
hlt
test
inc
xor
cli
out
mov
out
lock
xor
rcl
ljmp
test
incl
int
lret
fdivp
das
lock
jmp
xor
roll
mul
cli
ljmp
xor
xor
jmp
shl
xlat
ljmp
test
fadd
loope
in
ret
out
sti
std
lea
lret
int3
fnstsw
fcmovbe
jecxz
test
addl
shl
ret
fdivr
ss
jmp
rcl
ret
inc
ds
stc
mov
testb
xchg
out
bnd
in
out
cmp
cmc
sbb
ds
loopne
fcmovnb
out
mov
leave
in
into
xchg
xchg
repz
jmp
out
cld
int3
rcl
lock
stc
shl
call
call
xchg
loopne
imul
stc
iret
cmp
divb
out
in
clc
repnz
out
jecxz
leave
fucomp
leave
sti
out
fsub
call
lret
jecxz
shl
out
fidivrs
cld
lock
fptan
std
les
in
fisttpll
int3
xor
cmp
out
or
xlat
fucomip
ret
ret
sar
int3
xchg
loopne
call
lret
fcomi
cmp
shl
out
out
cli
xlat
div
test
lret
lds
icebp
ror
aaa
das
lret
ljmp
rol
and
jmp
fcmove
fisttps
jecxz
xlat
std
ss
into
and
cmp
call
in
cld
in
roll
xor
into
repz
fnsave
rcl
cmp
fsubr
cmp
aam
in
xlat
cld
sar
in
jmp
loopne
cmp
cmc
lret
dec
std
fidivrl
iret
in
mov
fcomp
test
out
mov
shl
divb
test
in
fadds
ror
add
xor
cmp
lret
ds
and
enter
sti
mov
int
xor
shl
sti
aaa
enter
icebp
cmp
in
rcr
shr
cli
cld
fimuls
shl
icebp
cmc
shll
lret
ret
cmp
xor
rcr
cmp
xlat
and
mov
jecxz
call
leave
mov
shlb
into
in
cmc
aas
loopne
fucomp
cmc
roll
clc
fsubrp
icebp
out
hlt
call
xor
xlat
sarl
dec
icebp
xlat
loopne
call
roll
call
enter
int3
in
out
iret
fmul
loopne
fiaddl
addl
int
sar
aas
aad
repz
ljmp
lret
sar
test
sar
ffree
fxch
out
jmp
iret
mov
int3
neg
xor
aaa
sti
and
xlat
shl
loop
ffree
aam
lea
in
mov
shl
ljmp
xor
shl
out
vpaddd
xchg
lret
stc
imul
cmp
aaa
rcl
cli
and
stc
mov
stc
fldl
ljmp
jmp
clc
cmp
int3
lock
in
ret
test
fsub
std
sti
rclb
aad
aad
iret
iret
mov
sarb
ds
fucom
clc
cmc
test
jmp
iret
nop
lock
lea
mov
mov
cmp
je
jmp
xlat
rol
xlat
enter
push
scas
sahf
out
mov
add
fisttpll
cmp
fcomi
xor
cmp
out
fcomip
icebp
aas
mov
add
int3
mov
call
lret
ss
cmp
call
in
fstpt
icebp
shr
ljmp
out
mov
jmp
aam
xlat
out
repz
aaa
cmp
ret
aad
fldl
in
cli
repz
int3
out
bnd
in
iret
out
faddl
fnclex
fisttpl
loopne
roll
sub
ror
ds
cld
cmc
lret
div
fnop
fcmovb
ret
hlt
out
lret
or
aad
shl
int3
shl
sarb
aad
int3
xor
stc
cmp
lret
lret
xchg
int
out
xchg
iret
clc
cs
fxam
fnsave
loopne
cld
cmc
xor
mov
or
in
or
jecxz
in
repz
int3
aam
ret
les
in
loop
out
in
lret
out
loopne
shl
out
sti
ljmp
fmul
icebp
not
cli
leave
xchg
mov
loopne
xchg
mov
in
shr
out
cmp
addl
std
fdivp
jecxz
mov
shlb
lock
int3
aas
in
aam
enter
in
lea
shl
in
divl
out
cmc
sti
repnz
iret
xlat
clc
jmp
xchg
in
stc
jmp
into
loop
enter
cmp
int
cmp
rol
test
leave
mov
loopne
xor
into
in
ret
lret
leave
cli
fcmovu
cld
out
jecxz
rol
aad
mov
xchg
jmp
fisttpl
mov
hlt
into
ror
into
out
ds
into
out
loop
ret
out
sti
repz
int3
xchg
in
imul
idiv
jmp
in
jmp
ret
sbb
fucom
into
test
div
xor
int3
divb
stc
cmp
cmp
clc
out
mov
fucomp
in
lock
hlt
cld
sarl
clc
repnz
aas
sbb
cld
faddl
mov
loop
hlt
ror
sub
aam
xor
aad
fstp
ret
int3
xchg
loop
in
ret
lret
int3
jmp
shl
xor
int3
out
leave
cmp
aad
sbb
inc
cli
fcom
out
jmp
int3
hlt
out
loope
xor
lret
in
lock
rcl
int3
in
loop
icebp
loope
mov
in
out
repz
in
iret
clc
lret
iret
xlat
fnstcw
fdivrp
cmp
xchg
loopne
ret
int3
fsub
jecxz
xchg
xor
sub
ror
hlt
stc
hlt
push
aas
aas
lock
cmp
into
xchg
aad
fdiv
stc
cli
out
lea
in
rcl
neg
xlat
leave
fidivl
cmp
loopne
jmp
cli
jecxz
adc
lret
test
icebp
aaa
int
adc
hlt
lock
call
xchg
rcr
ficoms
int
out
out
aam
clc
cmp
icebp
fimuls
xchg
leave
rolb
hlt
lret
ror
cmc
sarb
repz
cmp
ror
ret
lds
test
cmp
in
ss
out
ds
sbb
enter
mov
or
cli
adcb
shlb
jecxz
in
cmp
in
cmp
out
icebp
test
roll
sti
lock
icebp
call
lret
fcmovu
int
loope
cmp
stc
aam
in
fmulp
jecxz
xchg
nop
xor
imul
aaa
jmp
adc
fcmovu
out
ljmp
stc
sti
fcmovnbe
hlt
test
int3
hlt
shll
fidivrl
cmp
cmc
cmp
out
ds
fcmovne
ret
orb
in
jmp
lret
xor
sar
cmp
and
out
int
sti
jmp
lock
int
std
ljmp
cmp
out
std
fadd
lret
in
jecxz
xorb
int3
lret
cmp
cli
ds
addb
hlt
mov
loopne
ret
int3
cld
loope
call
iret
xlat
sti
jmp
loop
repnz
cmp
out
stc
mov
mov
ljmp
aaa
xor
out
ljmp
iret
lds
testl
out
loopne
xchg
hlt
repz
in
in
inc
clc
jmp
into
ror
fxch
fst
cmc
mov
mov
jecxz
jle
movsl
add
xlat
int3
xor
addb
loop
jmp
jecxz
xchg
cmc
xor
fcmovu
std
rolb
lock
sti
fadds
and
out
aad
hlt
int
loope
fucomi
loopne
cmc
out
aad
call
xchg
fsub
aam
out
into
out
sti
leave
stc
loopne
clc
stc
xchg
std
aam
cmp
in
loope
iret
rolb
fdivl
int3
jmp
shr
xchg
test
into
and
in
mov
repnz
icebp
fmulp
sti
cmp
shl
hlt
sti
adc
not
stc
leave
ljmp
stc
in
xor
lret
xor
repz
ss
test
mov
shl
jecxz
int
out
loopne
mov
in
iret
int3
xor
hlt
fdiv
iret
cmp
loopne
testl
into
rorb
into
jecxz
cld
cld
cmp
fdivr
cmp
rolb
mov
lock
divl
int3
sar
repz
cld
cmc
fdivr
hlt
loop
icebp
rcr
in
leave
in
dec
sbb
jecxz
xchg
xor
xor
aaa
xlat
out
cld
jmp
in
cmpb
roll
mov
adcb
xor
hlt
cmp
sar
ds
std
fsubrp
cli
repz
repz
div
ret
cmp
movl
enter
fadd
cmp
sti
icebp
int3
in
out
sar
and
ffree
loopne
mov
int3
fisttpll
int3
cmc
dec
cmc
std
rcl
and
testb
out
in
loope
rolb
ss
sti
out
out
call
aam
shl
hlt
cli
testl
out
imulb
ljmp
aaa
ds
out
loopne
xor
mov
or
mov
aam
test
rol
cli
shr
in
fld
rol
loope
rol
imul
leave
out
test
cmc
ljmp
jmp
loop
fsubr
ret
fdiv
rcr
xchg
in
repnz
int
rcl
out
shlb
fcmove
cli
sar
out
rcr
int3
out
shl
fcmovbe
sar
out
idiv
sti
xchg
in
mov
rcr
cmp
in
xor
cmp
leave
fdivrp
fdivr
rcll
cmc
cmp
in
jmp
stc
ss
mul
add
mov
lock
xlat
call
leave
icebp
cmc
loope
lock
fistpll
cmc
loope
call
fisttpl
in
cmc
out
fcmovne
std
int3
icebp
sar
out
out
mov
aam
xchg
lds
jecxz
shl
out
sti
cld
lret
jmp
stc
aam
loope
test
repz
fneni(8087
sar
icebp
in
out
faddp
cmp
in
in
rcl
div
sti
shr
out
loope
ret
in
xchg
jmp
lret
lret
cmp
xlat
call
fcmovu
hlt
sti
or
stc
out
mov
shl
nop
shl
xchg
jmp
int
in
std
lret
int3
test
icebp
clc
jecxz
repz
decb
hlt
rolb
call
int3
hlt
repnz
sti
test
stc
out
xlat
call
std
out
xchg
mov
ret
ss
ffree
not
leave
cli
cmpl
sti
enter
call
mov
xor
cmp
fdivr
std
shl
rolb
test
xchg
adcb
into
cmc
hlt
ljmp
jecxz
sti
aad
repz
xchg
loop
shl
out
xchg
jmp
lock
ljmp
std
roll
mov
out
rol
call
mov
not
lret
out
ds
cmp
int3
fcmovbe
cmp
cmp
enter
xchg
xchg
repnz
fmul
leave
sar
inc
cmp
fucomip
cmp
leave
cld
fsubrp
loope
call
bnd
out
jmp
out
xor
shl
jecxz
cld
ret
fmulp
loopne
mov
mov
into
in
imul
into
iret
clc
sarb
div
int3
cld
xlat
loopne
repnz
fdiv
ljmp
cli
jecxz
loop
ror
loope
lock
xor
fdiv
int
cmp
test
add
xlat
std
lret
xchg
cmc
call
out
xor
ljmp
push
xor
jmp
mov
jmp
ret
rol
rcl
rcl
sar
and
adc
fstpt
movsl
add
cmp
jecxz
out
hlt
testl
nop
out
fmulp
out
int3
in
hlt
out
fcmovne
clc
cmp
addl
fst
jecxz
mov
out
clc
lock
aam
sti
ss
jmp
addb
in
out
loope
roll
out
ret
shl
aam
fyl2xp1
xor
aas
hlt
roll
mov
fsubrp
sti
rorb
mov
shr
lret
imul
fadds
repnz
ljmp
loop
xchg
into
mul
xor
repz
lock
clc
loopne
aas
loopne
xor
call
cld
clc
movb
mov
shr
hlt
out
std
cli
sarl
shl
idiv
mov
fisttpl
mov
and
into
xor
xor
aaa
fdiv
aad
jmp
rcl
call
fsub
popl
in
test
shll
std
cld
out
rol
stc
loop
cmp
ficoml
hlt
icebp
cs
xor
repnz
fcomp
rcr
sbb
cli
cmp
iret
repnz
in
out
rol
jmp
sti
out
fsubrp
clc
shl
icebp
fstp
loope
in
loope
jecxz
iret
in
sti
loop
adc
aaa
clc
xor
lock
xlat
cmp
mov
int
mov
sti
iret
loop
loopne
aam
xlat
lret
cld
shl
jmp
idivl
out
test
cld
mov
test
in
cld
repz
repnz
fcomi
aad
lret
cld
adc
roll
leave
xchg
loopne
icebp
mov
fldlg2
aam
fidivl
hlt
aaa
cli
cmp
testl
in
out
xchg
xchg
xchg
loop
stc
in
enter
cmp
sbb
in
aad
ret
clc
std
cld
jecxz
shl
xchg
out
iret
shl
lret
int
ds
lret
aaa
cmp
xor
in
popl
into
rol
xor
repnz
ss
repz
cmp
roll
call
mov
ss
into
cmp
fstp
cli
cmc
shl
jmp
sti
mul
nop
stc
xchg
cmc
adcl
clc
test
aad
repz
loop
loope
leave
loopne
out
xchg
in
int3
int3
and
aad
ret
in
cmp
cmp
cmp
test
test
mov
out
sti
mov
xchg
xor
into
xor
icebp
cmp
cmp
sti
not
hlt
iret
loopne
fst
lret
and
and
xchg
in
xor
cld
in
stc
cli
rcr
in
icebp
aad
test
and
popl
lret
out
jmp
cmp
hlt
loop
fst
cmp
fiaddl
std
int3
leave
enter
in
clc
lret
out
aaa
out
stc
in
lret
hlt
lret
out
add
idiv
shl
xlat
int3
clc
mov
jmp
int
clc
out
std
rcr
jmp
ljmp
rcr
out
in
xchg
test
out
out
leave
hlt
jmp
sarb
sar
cmc
cld
ds
mov
out
hlt
lret
int3
sub
shl
xlat
repz
ds
hlt
ret
cli
fpatan
call
ljmp
call
lret
cmp
in
in
aad
aas
not
xlat
idiv
loope
in
mov
ret
xchg
nop
in
jmp
sar
stc
ror
ds
test
xchg
mov
ffree
test
sti
leave
mov
repnz
idiv
in
xor
cmp
xlat
fiadds
xchg
in
in
shl
addl
out
aad
repz
cmp
cmc
rol
loopne
out
out
lret
int
leave
rcr
neg
in
sub
ss
cmp
repz
clc
sarl
loopne
clc
inc
mov
fucomip
ljmp
xor
enter
jmp
cmp
cmp
rcr
ror
cmp
filds
xchg
xchg
jmp
repnz
xor
sub
ds
lock
imul
call
sti
int3
in
loop
in
enter
cmp
xor
sarb
repnz
movl
lret
xor
hlt
cmp
aas
cmp
repz
mov
sub
iret
loop
fnstsw
test
out
ror
shl
cmc
lret
call
hlt
fiadds
clc
xor
add
cmp
jmp
rcl
rcl
fstp
rcr
cld
cmp
jmp
mov
mov
jle
movsl
add
and
out
mov
fnop
xchg
hlt
into
and
clc
lret
idiv
neg
ret
fsubrp
int3
int
xchg
cld
iret
jecxz
xor
out
cmp
dec
fcmove
mul
iret
in
iret
mul
mov
int3
enter
ret
out
out
in
lret
sti
rcl
lret
icebp
call
in
fidivrl
sbb
jecxz
fucomi
shr
aad
leave
ret
leave
fcmove
icebp
lock
std
cmpb
lret
call
jmp
in
sub
clc
stc
lret
aad
cmp
adc
mov
sti
cli
loope
mov
into
xchg
ret
iret
out
icebp
rol
leave
cmp
in
fcomip
or
int3
call
test
mov
out
fsubrp
aad
iret
int3
xor
in
fcmovbe
sti
in
jmp
roll
pop
rcl
sti
clc
shl
int3
iret
idiv
iret
fsubr
lds
std
fxch
fdiv
orl
cmp
aaa
aam
std
cld
cmp
mul
cld
test
leave
test
jmp
out
into
out
test
sarb
in
xor
cmp
lret
aaa
clc
cld
rcl
jecxz
cld
xchg
cld
decl
lret
repnz
cmp
cmp
les
neg
sbb
int3
mov
int3
std
aad
sarb
ljmp
incb
in
flds
sti
into
xchg
call
xlat
loopne
leave
sti
repnz
int3
ror
aad
and
lret
loopne
mov
fst
xchg
iret
loope
aaa
lret
out
aad
ss
cmp
in
fimull
rcl
loopne
lret
lds
fucomi
sarl
out
cli
xchg
loop
std
mov
test
loop
cmc
lock
out
faddl
cmc
in
out
sarb
rol
decb
sti
xchg
xchg
pop
jmp
test
fcmovnbe
xor
cld
cmp
cmp
shl
xchg
loop
jmp
in
xchg
xlat
iret
xor
cmp
cmp
icebp
cmp
in
rol
shl
out
leave
test
neg
filds
clc
shl
ss
iret
hlt
sti
out
cli
cmp
ds
shl
inc
imul
ret
ljmp
out
enter
imul
call
cmp
stc
out
cmp
fmul
xchg
lret
test
cmp
cmp
hlt
int3
aam
lret
ret
stc
mov
mov
xchg
loopne
rolb
sti
out
out
aad
call
cmp
shl
clc
ret
cld
hlt
call
in
fdivp
rol
call
into
jmp
cmp
fxtract
cmp
rolb
xchg
mov
fimuls
loopne
xor
xor
in
fsqrt
fdivrp
rcr
shl
hlt
filds
stc
decb
iret
lret
lret
in
repnz
std
roll
enter
cld
in
out
out
and
aas
aam
jmp
cmp
or
loopne
testb
test
int
call
hlt
hlt
cmp
cmp
test
ljmp
hlt
cmc
out
shlb
cli
in
in
push
in
repz
ror
xchg
xlat
cli
in
stc
hlt
fdivr
test
addb
out
icebp
fnstcw
flds
les
testb
rolb
lret
xor
into
sarb
cld
neg
cmp
aas
or
xchg
lock
or
das
xlat
repz
cli
sti
in
fidivrs
repz
out
ret
mov
jmp
fcomp
fucomip
into
loop
xchg
cs
lret
cmp
cmp
xor
stc
cld
loop
ret
aad
xlat
xlat
fiaddl
out
hlt
cmp
stc
sarl
ds
out
imul
cmc
in
mov
fildl
sub
fstl
xor
fst
push
dec
into
add
ffree
cld
jmp
aam
xor
das
xor
aam
fcmovnu
lock
loope
clc
call
shl
rcl
loope
iret
stc
shlb
stc
add
xchg
rol
aad
in
sub
mov
iret
fisttpll
out
xor
cmp
shll
icebp
addb
je
mov
mov
jmp
int3
enter
lret
int
stos
test
pushf
sar
and
movsl
add
call
fcomip
icebp
xor
xor
out
ds
aas
cmp
hlt
rol
ds
out
in
orl
out
jecxz
in
xlat
int3
aaa
clc
in
cli
aam
in
stc
xlat
enter
int3
lea
repnz
lret
aad
jmp
shl
cmp
fildl
into
fsubp
int3
nop
loope
xchg
out
lret
aam
out
iret
out
into
into
shl
cmp
idiv
fcmovb
sbb
or
lret
into
adc
int3
xor
icebp
lret
repnz
into
cmp
jecxz
ds
xchg
xlat
ret
loope
clc
idiv
fiaddl
iret
test
stc
out
clc
out
hlt
cmp
cmp
rcr
test
fiaddl
iret
xchg
rcr
hlt
aam
enter
hlt
int3
hlt
aam
std
rcr
iret
roll
test
std
sti
mov
mov
cld
xor
fnstenv
iret
repz
lock
lret
mov
xchg
fcos
lock
xchg
jmp
in
int3
aam
jmp
cmp
jecxz
fidivrl
std
fsub
stc
mov
rcr
fsubrp
in
out
ljmp
in
sti
fcomp
xchg
sar
jmp
repz
in
lock
out
cmp
clc
incb
testb
fmull
loope
cli
cli
xor
sar
hlt
xor
fdivrp
sar
in
in
ljmp
jmp
in
std
lock
roll
fimull
sti
addb
adc
neg
fsubr
imul
sarb
sti
in
ffreep
int
loopne
test
stc
leave
out
mov
mov
jmp
imul
in
rolb
std
fcmove
fadd
std
xlat
cli
and
lret
xchg
repz
in
ss
sar
xor
aam
out
sti
loopne
fiaddl
jmp
iret
lock
lret
stc
fcomi
ds
fmul
hlt
fcmovu
mul
loope
jmp
lret
out
repz
cmp
cld
xor
fld
repz
test
int3
testl
clc
aad
neg
iret
icebp
incl
out
test
mov
fld
lret
in
ljmp
vcvtpd2dq
xor
out
fldl
aas
or
hlt
loop
enter
in
repz
loop
loop
xor
repz
aas
cmp
faddl
test
jmp
fsubr
test
loop
fmul
ljmp
aad
fucom
roll
call
out
leave
xchg
incl
divb
imul
int3
int
rcr
aam
not
repnz
jecxz
leave
xchg
cli
sti
and
xlat
sub
cld
cli
iret
fadd
fidivrs
fcomip
test
mov
call
fstp
fists
fxch
imul
lret
cmp
cmp
sti
ret
fxch
out
les
ljmp
enter
enter
aam
stc
fsin
int
out
repnz
leave
loopne
cld
addl
in
fld1
out
call
xor
loopne
cmp
jmp
call
rcr
repnz
out
in
sub
sti
xor
into
call
in
fsub
test
out
in
hlt
sti
sar
in
out
lea
aad
fmul
aam
loope
aam
cmc
repnz
hlt
rolb
out
leave
mov
call
cmc
in
into
call
roll
out
fcmovb
or
sub
into
ljmp
lret
leave
aaa
cmp
int3
not
fcom
cli
fcmovnb
mov
mov
cli
test
addl
sar
aas
int
test
repz
in
vpxor
int3
int
jmp
fnstenv
lret
rcr
int
cmp
std
stc
xlat
mov
lret
sar
mov
ret
lock
leave
xlat
jmp
cmp
fxtract
flds
enter
shr
and
out
fcomip
sub
ss
lret
ror
sbb
fst
aam
rcl
test
shr
in
repz
into
iret
into
repz
sarl
repnz
out
fucomip
test
std
mov
in
in
into
lret
aaa
call
stc
aas
hlt
aas
aam
test
test
rorl
xchg
enter
xchg
mov
mov
lea
add
mov
mov
mov
jmp
int
rcl
fcmovu
int
xchg
daa
ljmp
jmp
jle
rcr
clc
lret
in
out
out
shl
stc
aaa
sar
leave
in
in
cli
out
into
mov
aam
in
into
aad
lret
out
frndint
rcl
clc
icebp
stc
xchg
sub
or
in
in
fmul
lret
cmp
out
cmp
vcmppd
in
in
fsubr
in
repnz
int3
divl
out
sub
shl
icebp
lret
sti
in
leave
xor
enter
iret
shl
test
repnz
rcl
in
int3
leave
cmp
fsubp
jmp
aad
call
sbb
iret
mov
iret
jecxz
test
ljmp
out
fcmovbe
iret
shl
shr
cmp
filds
fcoml
aam
cmp
cld
cs
pushl
fdecstp
fdiv
in
xlat
mov
cmp
enter
xor
lds
ljmp
rol
repnz
out
fsub
xchg
adcl
aad
out
cmc
into
cmp
clc
stc
xor
in
std
cmc
aad
loop
mov
fincstp
cld
iret
int3
into
or
repz
out
ror
into
shr
leave
cli
shr
fsubp
aas
adc
jmp
mov
in
loop
testb
rcl
xor
fst
aad
fnstsw
repnz
test
stc
ljmp
in
addb
enter
clc
rol
cli
in
test
fiadds
call
loopne
xlat
lock
in
in
hlt
sar
repnz
shl
loopne
test
fucom
clc
xor
ret
mov
test
mul
cmp
stc
and
lret
in
lea
xor
jmp
aam
fstpt
std
testb
loop
into
xchg
loope
xchg
xor
ret
cmp
stc
out
cli
ret
ss
fdivp
out
clc
int3
test
int3
lret
out
mov
in
jmp
out
aam
lds
addb
rol
and
loopne
enter
in
cmp
jmp
cli
cmp
cmp
rol
repz
cli
into
fstl
ret
sti
lock
xor
test
repnz
rol
jmp
mov
shl
leave
rorl
ret
clc
repz
cmp
call
aam
aas
repnz
xchg
test
enter
lock
xchg
into
xor
fmul
rcr
aas
int
repnz
xlat
jmp
addb
repz
shr
in
xor
ss
lret
flds
out
ret
rorl
xchg
nop
aaa
shl
cli
out
cmp
aad
and
ret
fdivr
sti
nop
lret
fmul
in
not
fdivrs
cmp
fistpll
cmp
out
test
leave
imul
addb
mov
fstpt
cmp
shr
hlt
loope
out
ret
jecxz
sti
lds
test
adc
shl
cli
jecxz
cli
test
mov
cmc
enter
cmp
hlt
cmp
lock
in
out
filds
shl
xlat
test
decb
jecxz
out
cmp
rcl
sarl
addb
enter
mov
in
loope
jmp
clc
repz
icebp
xor
ror
stc
xchg
test
jmp
lea
xlat
rol
aaa
iret
repz
iret
repz
cmp
or
cmc
sti
fsubr
std
int
fstl
test
xor
clc
rcr
incb
adc
std
into
in
test
xor
in
repnz
sar
aam
fdivr
std
cli
fsubp
test
leave
fmul
out
in
shl
ljmp
ljmp
repz
fdivp
cmc
cmp
test
filds
int3
leave
hlt
cmp
cmp
fcmovnb
ret
add
fsub
fstl
cmc
in
xor
fcmove
in
rcr
int
cmc
ret
xchg
testl
lock
shlb
xor
repz
cmp
shl
ret
leave
loope
incb
loopne
test
in
jmp
into
int3
jmp
xor
sti
loop
ss
cmp
orl
in
xchg
ljmp
mov
mov
xor
add
mov
jmp
mov
fst
fxch
jg
lods
loop
fwait
sub
movsl
add
out
ds
cmp
ret
mov
jmp
test
clc
call
loopne
jecxz
sti
clc
sar
idiv
call
enter
or
xor
icebp
cmp
cmp
fninit
cmc
sti
rcl
sti
stc
aam
cmp
mov
in
int3
in
hlt
jmp
int3
sar
repz
xchg
mov
sti
roll
icebp
ret
in
cmp
iret
out
out
shl
fdivr
bnd
hlt
xbegin
in
in
loop
icebp
xor
aaa
shl
cmp
cmp
cmp
out
rcr
repz
int3
aad
leave
clc
out
sti
out
mov
nop
icebp
ljmp
cmp
std
sti
stc
ds
ds
call
roll
repnz
sar
ret
int3
fstp
ds
idiv
test
lock
enter
in
mov
in
repnz
fcmovnb
cmc
sar
iret
std
sarb
cld
mov
inc
call
mov
xor
idiv
repz
out
in
cmp
sti
loopne
int
nop
int
out
out
xchg
clc
cmc
enter
lret
std
repnz
fsubr
std
neg
loop
int
mov
test
xor
out
cmp
cmp
into
in
idiv
and
loop
mov
int
xchg
loope
xchg
repz
out
out
out
cmc
aas
and
in
jmp
out
stc
cld
xchg
repnz
mov
loopne
cmc
xor
cmp
std
in
cld
lret
cli
lock
hlt
ds
loop
mov
xchg
cmp
shrl
enter
std
hlt
call
fdivp
lock
loop
fiadds
int3
cld
mov
mov
rol
fcmovnu
aaa
cli
icebp
ror
hlt
cmp
test
fucom
cmp
mov
loopne
popl
xor
out
leave
sti
fcomi
enter
aam
aas
hlt
sar
in
mov
mov
repnz
in
fmul
cld
rcl
ret
loope
stc
leave
jmp
les
jecxz
out
out
xor
fneni(8087
cmp
loope
clc
cmp
cld
call
xchg
leave
orb
enter
bnd
icebp
sbb
rcl
xchg
test
ljmp
xor
rcr
repnz
sti
or
cmp
ret
test
std
shl
in
lret
fsubrp
fninit
fmull
out
enter
adc
loop
cmp
sar
sar
out
in
sbb
fxch
jmp
lock
imul
lret
lret
repz
lret
lock
iret
inc
aam
leave
ljmp
in
rcr
loop
out
clc
icebp
lock
lret
in
sti
xchg
icebp
aam
sti
lret
fcmovnbe
out
loope
loop
lock
int
das
lock
loopne
xchg
cmc
xchg
fdivr
leave
mov
repnz
test
out
lret
in
xor
call
repz
jmp
stc
mov
mov
rorl
xor
idivl
neg
fdivr
cmp
sbb
sarl
xlat
fiaddl
out
cmc
hlt
rcl
cmp
int
cmp
fadd
rol
mov
jmp
hlt
cmc
loopne
repnz
stc
cmp
aas
xor
cmc
rcr
shl
stc
test
cmc
incl
rolb
shl
enter
cmp
cmp
fidivrs
out
xchg
lret
mov
fucomp
xchg
hlt
jmp
ljmp
int
idivb
cmp
jmp
std
rcl
not
cmc
xor
ljmp
div
incb
adc
out
in
rol
shl
xor
jecxz
shl
out
leave
fdivr
fchs
shl
aad
test
ljmp
xor
in
lret
clc
hlt
fyl2x
div
int
out
in
cli
faddl
mov
lret
shll
in
hlt
clc
hlt
in
repnz
in
ds
neg
std
loop
stc
in
out
in
out
in
in
fsub
enter
cld
cmp
hlt
filds
in
xchg
enter
rclb
int3
cs
leave
repz
cmp
shl
clc
in
jecxz
in
sti
in
iret
fsubrp
shr
rcl
lock
lock
in
ds
inc
loope
cmp
in
movb
cmp
je
mov
mov
add
mov
mov
mov
jmp
rol
lret
aad
mov
or
bnd
movsl
add
ds
cmp
fdivrp
test
test
xor
imul
idiv
cs
in
leave
fcom
in
cmp
mul
loopne
loope
ret
mov
mov
hlt
rol
fnstenv
out
hlt
out
cmp
out
xlat
rcr
hlt
mov
ljmp
repz
into
out
fnstenv
call
sbb
aas
xlat
incb
fneni(8087
fcmove
jmp
call
fstp
jmp
hlt
test
stc
sub
out
lret
int
test
out
call
out
cld
fdivr
into
jmp
add
fsubr
aad
fucom
call
call
ss
aaa
fcom
cmp
fiaddl
fucom
shl
cmp
xchg
loope
jecxz
xor
lret
xlat
out
fdivp
lret
aam
cmp
loopne
cli
rol
ret
test
mov
repz
enter
stc
in
imul
sbb
fidivrl
leave
mov
sti
enter
mov
aam
jmp
hlt
aam
xlat
add
stc
in
mov
in
out
loopne
xchg
xchg
lret
xor
lds
enter
lock
fnstcw
shl
in
fiaddl
in
aam
clc
out
out
repz
aad
idivb
loop
ret
lret
sti
jmp
xor
out
xchg
aaa
stc
ror
in
int3
enter
int
fadd
rolb
ret
in
cmp
cli
in
loope
ljmp
lret
in
fdivr
jmp
cmpl
fucomi
cmc
in
loop
lret
cld
xchg
in
enter
cmp
out
cmp
int3
cmp
std
out
jecxz
jecxz
xlat
enter
out
mov
in
repnz
in
rcl
int
xor
int
sar
sar
hlt
aad
jmp
in
orl
aam
shll
cld
jmp
iret
shl
shl
aad
test
fucomi
ffree
fimuls
xor
hlt
sar
xor
in
aam
sti
shl
lret
lret
incl
loop
hlt
das
rcr
cmp
loopne
loope
inc
aas
rcl
mov
loope
fucompp
enter
xchg
int
ret
cmc
ss
int
iret
faddl
jmp
fucomp
cli
jecxz
faddl
in
sarl
cmp
fcos
iret
fsubrp
in
ds
cmp
in
stc
in
int
out
mov
jmp
out
imul
in
not
jecxz
fcom
shr
cli
jmp
rorb
hlt
fucomip
fdivrs
ret
stc
cmp
stc
enter
cmc
int
out
xchg
into
xchg
sti
out
in
xchg
fnstenv
cli
out
hlt
xlat
into
loopne
jecxz
ret
out
in
out
out
fstl
into
test
clc
cmp
xor
in
fdivrs
fnsetpm(287
mul
rol
div
fsub
into
test
orb
leave
repnz
cmp
fcmovne
int
rol
shl
movb
lock
xchg
mov
ss
icebp
add
sub
in
jmp
out
mov
cmc
iret
xor
rol
in
ljmp
cld
cli
out
jmp
out
mov
nop
in
mov
icebp
cmp
hlt
shr
aaa
int
icebp
stc
repz
sub
fadd
clc
out
mov
out
jmp
jecxz
in
cmp
ss
div
ret
rol
in
in
or
loope
out
mov
xor
in
in
cld
xor
iret
sbb
fnsetpm(287
iret
test
shr
repz
xchg
xchg
ljmp
xor
rolb
call
faddl
loope
xlat
cs
repnz
in
hlt
int
iret
in
repz
aas
repz
xchg
fisttpll
xchg
xchg
xchg
jmp
xor
lock
out
icebp
sti
rolb
fmull
addb
ljmp
ljmp
les
filds
mov
int3
xchg
xchg
lret
ss
cli
shl
cmp
jmp
test
iret
xchg
hlt
int
repz
lock
cmp
ror
icebp
lock
rcr
fcompp
jmp
nop
stc
int
ljmp
cmp
aad
jmp
fcom
cmp
out
cmp
fadd
lret
ret
mov
mov
jmp
aam
int
aad
fldt
sbb
je
jle
movsl
add
mov
into
mov
lock
shl
ret
aaa
xor
cmp
repnz
in
into
aad
test
in
cli
cmc
lock
xchg
lret
loopne
int
xor
xor
enter
in
faddl
xor
sti
jmp
call
fucomi
lret
fidivs
loop
fdivr
xchg
loopne
cmc
fcomi
in
lret
out
test
xor
ret
cmp
cmc
call
cmp
icebp
lds
fimull
hlt
vcvttpd2dq
aad
iret
ss
cld
cmp
cmp
faddl
repnz
out
sub
aam
std
sti
shl
clc
in
out
xchg
xlat
mov
fcmovu
fst
repnz
loopne
ftst
in
not
iret
std
shl
aas
ffree
aam
clc
mov
orb
loopne
xor
ds
ljmp
jmp
fmul
call
out
out
xlat
lock
ror
lret
cmp
cmp
testb
mov
ret
sarl
aam
test
cmp
shl
cli
fsubrp
jmp
mov
lret
incl
repz
fxch
fxch
cmp
div
fcmovnbe
fmull
std
mov
lock
ret
stc
jmp
xor
std
push
les
sti
cmp
fimull
in
in
not
lock
xor
fldl
xchg
jecxz
test
loopne
fdivrp
fcomip
xlat
in
divb
std
clc
cmp
cmp
loope,pt
jmp
lret
lret
out
xchg
call
rcl
fmul
cmp
in
fptan
ror
rcr
icebp
loope
xchg
jmp
jmp
enter
leave
cmp
xor
cmp
sti
jmp
fsubp
xchg
call
iret
out
rcl
stc
test
fcmovu
add
sub
iret
in
and
rol
cmc
sarb
int3
fucomi
repnz
loop
inc
fsubrp
fdivp
leave
mov
orl
fiadds
fcmovne
fdivrl
in
out
repnz
ljmp
repz
das
in
aam
aaa
iret
ror
lock
ret
sti
xchg
in
enter
out
addl
cmp
in
in
adc
sbb
loopne
sti
out
imul
lret
xchg
out
loop
ljmp
cmp
call
int
icebp
stc
into
not
jecxz
ret
fdiv
in
in
call
mov
shl
cli
out
call
icebp
repnz
cli
rcr
cmpb
xlat
cmc
cld
jecxz
int
xchg
out
in
fdivs
fcmovbe
clc
aaa
out
shr
leave
fnclex
clc
adc
loope
sti
in
int3
into
sbb
int3
out
out
int
xor
stc
in
loope,pt
cmp
test
fiadds
int3
nop
sar
jmp
in
xlat
jmp
ss
icebp
repz
repz
frstpm(287
fucom
in
mov
icebp
shl
repnz
enter
cld
fcmovnbe
into
lock
fdivr
ret
in
hlt
fcmovbe
out
mov
xchg
in
das
enter
xor
sti
ds
and
hlt
enter
mov
int
iret
lock
aad
loop
xor
aaa
ds
out
xlat
lret
loopne
aas
lock
orl
xlat
aaa
das
hlt
lock
xor
fadd
addb
std
in
neg
cmp
xchg
jecxz
adcb
into
lret
cmc
call
sti
out
aad
call
rorb
out
loop
ss
cmp
leave
lret
fstp
cmp
in
sar
adc
repnz
hlt
xchg
icebp
hlt
adcl
call
fadd
cmp
idivb
shl
jecxz
ljmp
xchg
xchg
xchg
ret
ret
out
cmp
aam
icebp
idiv
div
fistpll
shr
test
stc
jmp
cs
fmulp
cld
fnstcw
rcl
rolb
out
popl
repnz
out
icebp
in
into
aad
jmp
aas
icebp
hlt
std
fildl
in
ljmp
sti
cmp
in
out
out
idivb
loopne
stc
stc
loope
in
std
fnstsw
vaddsubps
loope
mov
add
jmp
aam
iret
int3
fst
outsl
fmull
les
jle
add
in
fmulp
out
sub
xor
in
into
cmp
jecxz
rol
ret
jmp
clc
xchg
out
mov
sar
sti
ljmp
loop
jmp
fcmove
call
loop
shl
int
jmp
cmc
cmp
leave
ror
stc
dec
inc
repnz
rorl
out
fdivr
jmp
shl
stc
ret
fcmove
ss
fdivrs
cli
aam
fcmovbe
fcmovnu
in
xchg
out
jmp
sub
xor
idivb
clc
lock
cld
loopne
and
stc
fcomip
cli
int3
cli
jmp
fxch
xchg
into
lret
hlt
enter
rcr
cmp
faddp
lock
jmp
in
out
stc
fsubr
fsubr
icebp
fucom
lock
in
cli
leave
shl
ds
repz
into
sar
in
mov
out
lock
ror
int
xor
shl
call
aad
icebp
hlt
std
fcmovnu
std
sbb
ljmp
push
ss
jmp
leave
sti
xlat
fistpll
hlt
lret
fcomip
in
icebp
in
aam
aaa
hlt
xlat
std
fcmovb
aam
int3
cmc
mul
xlat
ds
sti
in
aam
leave
jmp
loopne
test
cld
xor
ror
flds
clc
mov
loopne
lret
adcb
call
aad
cmp
xor
xor
cli
mov
std
aam
lret
loopne
bnd
xchg
out
repz
cmp
rolb
fadds
sti
iret
jecxz
cmc
int
stc
neg
sar
lock
jmp
in
sub
loop
fadd
cld
hlt
ljmp
xchg
filds
xor
idiv
ss
fxch
rcr
cli
ljmp
lret
xchg
out
fucomip
fcmovnu
rcr
ret
test
shl
clc
adc
fcomi
nop
or
nop
hlt
lret
ss
in
leave
clc
in
ljmp
fcmovnb
test
out
in
ret
out
iret
int3
int
ror
out
in
fdivrs
sarl
aam
aaa
loopne
fcmovb
enter
lret
int
lea
out
out
enter
aas
std
xor
ret
mov
cld
out
jmp
mov
xchg
out
ret
xor
sti
std
jmp
sbb
fdiv
fsubrp
mov
xchg
ljmp
fadd
rol
sar
lret
in
out
lock
fcmovnu
rcr
loopne
mul
fmulp
mov
out
xchg
das
ret
das
out
jmp
fsqrt
lret
sarb
and
cmp
cmp
xlat
adc
ljmp
neg
fdiv
clc
shl
mov
fcompp
out
lret
rolb
stc
hlt
jmp
mov
jmp
xchg
out
std
repnz
in
lret
fnstsw
aam
leave
mov
out
fscale
jmp
out
mul
ret
into
out
cmc
jmp
shr
rol
div
call
mov
ror
test
das
jmp
test
jmp
out
cmp
shl
rcr
in
sbb
in
xchg
xchg
shl
sar
lock
xor
sarb
rcr
cmp
idiv
sar
lret
clc
in
in
lock
adc
fldcw
int
loope
loopne
cmc
loopne
loop
fdiv
jecxz
les
roll
out
aad
int
xlat
sub
std
aad
aas
icebp
fadd
out
fdivr
sar
mov
xchg
xchg
out
ljmp
ror
cmp
cmc
shl
icebp
loop
mov
out
out
xchg
into
cmp
xor
loopne
ljmp
aam
mov
call
ljmp
xor
enter
ds
in
shl
sti
fcom
jecxz
fcos
sbb
test
xchg
xchg
shl
cli
leave
jecxz
aad
in
out
icebp
test
clc
repz
aas
or
out
shl
loope
stc
leave
shr
leave
cmc
cli
xlat
clc
filds
testl
xchg
lock
hlt
xor
lret
or
fsubp
adc
ret
xchg
out
into
out
int
test
in
xor
call
sti
int3
into
aam
and
fdivr
clc
xchg
lret
call
xor
xor
out
cmp
int3
leave
sar
or
and
xlat
clc
sti
int3
lret
nop
repnz
lret
int
in
xor
cmp
jmp
ret
xlat
int
fstp
cltd
sbb
nop
ret
jle
add
ljmp
ljmp
mov
test
in
call
xor
lret
fdivrp
sub
fdiv
loop
call
aam
aad
fnstsw
loop
jmp
enter
aam
iret
into
iret
aam
int3
fcmovu
cmc
in
in
fcmovnb
call
mov
in
nop
repnz
cs
lret
leave
fmul
int
std
dec
clc
stc
loop
jmp
loope
int3
cli
ficoms
ret
xor
icebp
cmp
hlt
lock
std
cmp
idiv
in
sar
cmp
hlt
fimull
lock
out
int
ss
cmp
in
ss
fsub
test
stc
lret
out
out
roll
aas
clc
int3
xor
xor
roll
out
loop
in
out
mov
mov
ljmp
cmp
cli
cmp
std
aad
ret
test
sti
shl
fcmovnu
loope
lret
std
call
fdivrs
cmp
sarl
out
cmp
jmp
in
cmp
rorl
or
out
cmc
mov
call
in
shl
hlt
roll
roll
aam
cmc
ror
aam
fucomp
xor
repz
ds
ret
hlt
icebp
mov
mov
enter
in
clc
das
loope
out
call
cld
cmp
cli
xor
ret
lret
jmp
sti
out
mov
fdivs
hlt
out
in
ror
cmp
into
shl
loop
fst
in
fimull
in
hlt
sbb
in
lret
stc
xor
cmp
cld
cmp
rcr
std
mov
loope
stc
into
mov
leave
repnz
call
jecxz
leave
repz
cld
repnz
ret
fucom
incb
fmull
in
xor
repz
lret
xlat
cmp
int
sbb
loop
rcr
cli
mov
faddl
lock
cld
ds
fsubr
loope
cld
cli
in
shr
enter
jmp
adc
xchg
ljmp
ljmp
inc
xlat
loopne
neg
lea
cld
rolb
xlat
test
cmpb
std
loop
loope
fcmovu
test
test
jmp
in
in
loopne
jmp
shr
xor
jmp
int
aam
into
in
push
jecxz
loope
jmp
test
nop
roll
xor
rcr
repz
fsubp
in
mov
loope
enter
out
xchg
sti
fstl
out
icebp
icebp
std
repz
repz
lock
cld
mov
fsubr
call
mov
mov
jmp
out
enter
ds
xchg
std
mov
cmc
fmull
out
out
enter
cmp
aam
cmc
int
cmp
in
repz
call
in
in
fsubr
lock
ljmp
ret
iret
idiv
mov
enter
cmp
in
in
repz
stc
rcl
int
cmc
fcmove
test
in
in
fcoml
fmulp
jecxz
ror
aad
rcl
jmp
fcmovnu
rolb
cld
aad
mov
out
loop
in
int3
out
cmc
divl
sarb
leave
clc
int3
cmc
shl
icebp
stc
fstpt
enter
loop
sub
nop
rcr
call
clc
ss
repnz
int
in
int
aam
rolb
stc
into
mov
jmp
out
shr
ss
xor
jmp
sti
lock
sub
rcr
enter
in
in
enter
in
cmc
rcll
in
les
iret
repnz
int3
test
repnz
ds
lret
loopne
adcb
bnd
ljmp
fdivrp
sar
cmp
int
mov
stc
out
out
shrl
lock
in
cmc
std
test
loopne
cmp
out
cld
test
call
shlb
jmp
aad
in
filds
idivb
aas
div
clc
hlt
stc
not
mov
shl
lret
rcr
cmp
cmp
icebp
sti
roll
sub
fsub
icebp
out
sbb
out
loop
rol
cld
cmp
loop
in
rcr
les
into
xchg
nop
cld
mov
aad
fmulp
in
repz
mov
fldl
test
fcoml
xor
lret
je
mov
mov
xor
add
jmp
rol
xlat
int
arpl
mov
pop
imul
jle
add
loop
sbb
idivl
shl
fisttpll
decb
shlb
aam
repnz
int3
int
inc
out
xlat
out
sti
dec
mov
in
out
shr
out
into
hlt
aam
shl
rcl
xor
call
aas
loop
test
in
in
shlb
neg
int3
aad
repnz
loop
mov
cld
out
jmp
ljmp
iret
int
std
clc
not
icebp
aad
iret
jecxz
idiv
fiadds
mov
loop
ljmp
cmc
fdivrl
not
clc
loope
in
orl
clc
into
shlb
sti
sbb
loop
cmp
lret
clc
out
jmp
icebp
mov
loopne
xor
cmp
fxtract
repnz
loopne
aam
cmc
testb
mov
xor
shlb
cmp
std
fcom
clc
in
call
fmull
shr
enter
cmp
aam
div
loope
into
stc
xchg
xchg
decb
fimull
in
idiv
cmp
jmp
leave
fcmovbe
aam
loop
fstp
sar
aad
xlat
jmp
jmp
ljmp
out
sarl
lret
cmp
rcl
aaa
cmp
filds
cld
in
in
mov
fxch
in
cmp
sarb
xlat
loop
aad
decl
xchg
orl
fsqrt
fdivl
das
lret
leave
int
cmp
aad
sti
ds
lret
loopne
rclb
sub
cmp
lret
out
repnz
fcmovnb
stc
mov
out
orl
in
xor
fcmovnu
sarb
fildl
leave
les
ljmp
aad
sti
fdivs
clc
cmp
in
cmpb
into
test
repz
test
ficoms
aam
repnz
ljmp
iret
ret
faddl
in
mov
xchg
std
std
mov
lret
xor
sti
int3
cmc
shl
iret
fstp
ror
enter
ljmp
xchg
iret
rol
jecxz
call
out
ror
int
fcos
clc
hlt
mov
and
xchg
in
loop
loopne
ret
xor
jecxz
ror
addb
adc
call
repnz
clc
cli
call
sti
sar
cmp
rcl
cmp
cmc
lret
clc
sar
cli
mov
in
out
hlt
fsubr
idiv
fcomi
repnz
sar
lock
std
mov
xchg
fisttpl
ss
fscale
cmp
addb
jecxz
cmc
flds
in
lret
mov
xor
xor
out
jmp
aas
lret
sarl
hlt
faddp
loope
loope
fsub
mov
aaa
repnz
loop
idivb
out
ljmp
sub
xchg
loopne
xlat
in
clc
fcmovbe
aad
rcr
in
aas
xchg
aas
test
fucom
mov
mov
ss
fdivs
in
cmc
not
cmp
cmp
cmp
in
aam
std
iret
jmp
jecxz
ljmp
fsubr
faddl
sti
rcl
cmp
fcmovnb
clc
fisttpll
nop
mov
cmp
jecxz
int3
in
aaa
jmp
cmp
shl
aas
mov
test
test
test
aam
ljmp
ds
cmp
shl
idiv
out
test
test
fiadds
loope
into
iret
out
loope
shl
aad
fucomi
repz
repnz
loop
int
jmp
mov
out
int3
cmp
aam
fcom
xor
repnz
aad
shl
leave
leave
out
jmp
addl
hlt
xor
in
xlat
fdivs
loope
idiv
icebp
fiaddl
repz
in
incl
loopne
mov
aaa
div
out
aad
sti
call
cmp
sub
in
mov
icebp
rcl
in
cmc
aaa
cli
lret
ljmp
out
adc
out
std
cmp
cmc
call
repz
repnz
fsubr
out
test
mov
loop
mov
std
addl
cs
loop
stc
sarl
repz
rcl
hlt
in
stc
stc
mov
jmp
xorl
jmp
mov
mov
mov
mov
mov
mov
jmp
lret
ffree
fcmovu
sbb
jb
xor
mov
movsl
add
jecxz
in
cmp
clc
xchg
out
jecxz
icebp
lds
jecxz
int
cld
sti
fcmovu
ds
aad
aas
cli
lock
jmp
int3
xchg
test
out
shl
xlat
aam
out
fdivr
into
fiaddl
into
xchg
iret
call
sarl
clc
repnz
fsubrp
xorl
hlt
ffree
out
lret
in
in
xchg
leave
fldcw
lret
shl
sti
cmc
icebp
cmp
aas
in
test
in
out
out
nop
xchg
call
loop
lret
divl
icebp
stc
cli
cli
test
cmp
repz
fmulp
into
stc
decl
lock
ss
int3
out
jmp
cmp
cmp
fiadds
xor
xlat
addl
fsubr
fcmovnu
fsub
stc
ss
fcmovnbe
test
cmp
xlat
fldl
mov
not
sar
mul
cmp
fdiv
loope
leave
xor
mov
test
int
call
cli
int3
fdivr
clc
test
xchg
and
mov
xchg
loop
shr
aas
xor
aad
fnstenv
sti
into
cmp
cmc
ret
hlt
decb
faddp
fsub
into
xchg
fsubp
cmp
rol
idivl
inc
div
fcmovb
call
lret
fiadds
icebp
xor
cmp
cmp
test
aad
mov
enter
loopne
mov
loopne
idiv
enter
fdivrl
iret
fndisi(8087
int
xchg
mov
test
sbb
lds
out
sub
cmc
shr
int
cmp
fnstcw
ret
shl
adc
in
imul
lret
ljmp
call
lock
std
faddl
ret
std
hlt
test
lret
cld
out
in
adcl
sti
aaa
div
fdivrp
loopne
ret
aad
xlat
mov
int
in
loopne
aam
leave
xor
in
in
fnstenv
in
loope
xor
cmp
rcl
mov
xchg
sbb
jmp
in
jmp
nop
pop
shl
jmp
shl
cmp
filds
mov
into
incb
in
jmp
fsubr
fnsave
jmp
rcl
xchg
sti
mul
std
fsubp
clc
fsts
mov
clc
xor
xor
cmp
fcmovu
fsub
fsubp
cmp
cli
in
loop
fcmovu
lret
incl
xor
hlt
xor
int3
leave
aas
hlt
in
cmp
decl
clc
enter
mov
out
aad
rol
jmp
aaa
iret
sarl
flds
std
sar
out
out
mov
lret
out
in
jmp
int3
in
cmp
cmp
fcmovb
out
sti
mov
loop
cmp
leave
xchg
test
aaa
xor
into
lret
cld
cmp
leave
cmp
into
in
rcl
incl
jmp
in
addb
aaa
in
call
cmp
repz
cli
mov
fmulp
cld
fcoml
in
out
lret
leave
cmc
cmp
out
std
repz
loope
aam
ret
popl
int3
out
out
shrb
aaa
fdiv
imul
hlt
into
loopne
cmp
call
orb
nop
sub
out
lock
call
in
fdivr
iret
fstp
fcmovnbe
jmp
mov
lret
out
mov
xor
lret
out
rcl
stc
testb
ret
rcl
les
shl
test
fisttpll
hlt
test
ss
loope
cmp
out
fisttpl
lock
icebp
aam
in
test
fcmovu
neg
clc
loop
push
addl
lret
xchg
fisttpll
lret
hlt
lock
fcmovu
aas
repnz
repnz
ret
fisttpll
ficoms
leave
enter
cmp
cld
cmp
test
in
jecxz
enter
mov
ljmp
stc
leave
enter
ret
jmp
ljmp
xchg
aam
out
cmp
repz
cmc
in
cmp
in
lock
mul
cli
in
xchg
fsubrp
shr
out
out
cmp
xlat
into
into
fdivrp
shl
int
aam
and
fcmove
test
int3
orl
aaa
out
lret
int
cld
rcr
aas
iret
fcmovb
stc
std
rolb
rol
cld
sub
jne
jmp
int
into
fst
das
inc
aam
lods
sub
xchg
mov
movsl
add
call
hlt
lock
jmp
shl
aad
rolb
decb
xor
ljmp
hlt
iret
fidivrs
fdecstp
rcr
cmp
sar
test
mov
call
cmp
cmp
jmp
sarl
repz
int3
jmp
rorl
in
xlat
fnsave
ljmp
loop
lds
ljmp
clc
aam
enter
rol
in
rorb
aad
jmp
sti
mov
mov
mov
cs
aad
aaa
shr
out
aaa
cmp
sar
test
ffree
in
cld
xchg
stc
xchg
xchg
filds
fdivr
in
rol
lret
jmp
cmp
leave
clc
ds
test
into
xchg
in
cs
cli
dec
cmp
out
int3
aaa
out
repnz
stc
in
inc
out
out
xchg
int3
rclb
lret
out
in
repz
in
xor
fsubr
in
and
nop
call
rol
cli
shr
fxch
xor
xor
in
repnz
sti
test
int3
loope
mov
xchg
das
in
jmp
sti
cli
stc
cmp
cld
hlt
icebp
repnz
xlat
loop
xchg
jmp
shl
in
and
cmp
div
xlat
lret
faddl
clc
rol
fld
loop
out
lret
lret
sbb
loopne
das
repnz
out
lock
loopne
int3
stc
fsub
shl
aam
cli
mul
fsubrp
into
fxch
push
out
hlt
in
les
clc
xor
cmp
cmp
cmp
sti
loope
jmp
fmulp
mov
in
fnstsw
loopne
fdivr
ret
fcmovnu
aas
sbb
test
or
xor
xor
xbegin
leave
sub
jecxz
loopne
fstp
xchg
in
cli
or
loope
fbstp
out
imul
fnsave
lret
cmp
repz
out
stc
xchg
mov
in
test
mov
repz
aaa
fstpt
hlt
cld
icebp
shl
std
cmp
sbb
sti
mul
out
jmp
sub
vpsrlq
sub
in
int
aam
cmc
test
fdivrp
loopne
addl
fidivrl
shr
icebp
not
std
lock
cmc
test
std
cli
stc
mov
mov
leave
fsub
in
xor
ret
sarb
cli
shll
fdiv
sti
test
test
dec
out
fucomp
int3
xor
aam
ror
xor
fstpt
xlat
loopne
test
cld
leave
clc
std
in
std
xlat
xchg
jecxz
xchg
loopne
ror
aaa
cmp
in
out
out
fucomp
fmulp
in
cmp
fcomi
loop
fscale
lock
aam
repz
jmp
hlt
fistpll
fldl
repz
fdivp
mov
ror
ret
jmp
cmp
hlt
ret
loopne
fsub
call
mov
ret
ret
in
cld
lret
cmp
clc
icebp
roll
out
sti
and
out
xchg
repz
out
in
out
lock
fdiv
lret
sarb
cld
out
cli
fimuls
mov
ret
aad
sub
fcomip
shr
ret
in
addb
addb
roll
repz
std
lret
cmp
xchg
call
into
jmp
rolb
xor
cmp
aam
ss
fucom
fdivrs
fiaddl
clc
test
xchg
ljmp
rcl
ss
into
cld
cmp
fsubr
test
aam
clc
roll
in
roll
out
cmp
aam
ss
cld
out
out
ret
aas
shl
repnz
mov
sti
in
loope
jecxz
xlat
ljmp
in
sub
fucom
icebp
stc
addl
loopne
mov
decl
clc
repz
aad
loop
in
ret
fcos
jecxz
mov
loope
jmp
fcmovb
into
cmp
rol
jmp
ds
cld
lret
cmc
out
int
xchg
out
aam
adc
repz
aam
aaa
rcr
clc
into
out
movb
mov
out
repz
icebp
iret
jmp
fsubr
call
lock
call
faddl
sub
out
sub
jecxz
add
je
mov
mov
pop
jmp
into
lret
fcmovne
into
fistpl
adcl
pop
xchg
jle
movsl
add
rol
clc
fnsave
int
shl
adc
repz
ds
mov
lret
xchg
xor
shr
fprem
std
clc
in
xor
loop
cmp
in
fmulp
shl
out
fdiv
iret
cmp
aas
cld
lock
out
enter
loope
int
icebp
std
xchg
test
lret
not
idiv
std
clc
repz
cmp
cmp
aas
rolb
loop
in
lret
fists
jecxz
idiv
call
sarl
fucom
xchg
loope
ljmp
iret
in
loop
lret
cmp
int3
ljmp
xor
lds
enter
int
shll
jmp
in
into
cmp
loop
mov
cmc
out
in
std
ror
loop
clc
das
lret
lret
lret
xor
loop
xor
leave
rolb
or
ljmp
ror
into
jmp
lret
cmp
xlat
ds
aad
test
loopne
sti
into
lret
mov
iret
xor
sti
call
int3
std
std
cmp
loope
lret
test
int
into
out
hlt
cmp
jmp
xlat
icebp
into
cld
iret
int3
test
cli
cmc
shl
cld
fadds
in
mov
mov
ljmp
icebp
xor
aad
div
cmpb
loopne
loopne
out
aad
out
sti
fsubp
call
loopne
mov
ljmp
cld
cmp
sbb
bnd
loopne
addl
xlat
shlb
lock
rol
in
jecxz
out
cmp
into
cli
mov
xchg
ror
xchg
xor
stc
in
aam
lret
lock
loop
rcr
test
sti
test
fsub
loope
clc
icebp
call
ljmp
cmp
call
iret
sub
shl
in
fmull
rclb
iret
sub
fcom
cmp
out
clc
cmp
mov
xchg
into
in
in
sar
idivb
fsincos
into
call
add
aam
cmc
movb
in
or
not
cmp
fdivr
out
sar
shl
ret
aam
out
loop
mov
cmc
xor
repnz
rcl
fmul
in
in
fdivr
mov
xchg
loop
fimuls
xor
call
aad
out
out
mov
flds
rcl
ss
aaa
cmp
jmp
aam
loope
loopne
lds
xchg
mov
xchg
xor
in
repz
xor
sti
loopne
adc
jecxz
call
int
cld
shl
shl
aaa
out
cmp
leave
in
shr
repnz
jecxz
sar
stc
in
mov
xchg
in
ror
jmp
cld
cmp
sarl
fcmovnu
rol
cmp
test
filds
nop
jmp
das
out
shl
into
rcl
xor
hlt
fcmovb
loopne
in
jmp
in
fsubr
mov
int
jmp
cmc
fcmovnb
int
shr
into
out
cmpb
int3
cld
fsubr
stc
sub
xchg
jmp
ret
aad
aad
into
test
lret
cmp
test
jmp
orl
out
fcomi
jmp
sar
loope
ffreep
loop
in
out
cld
icebp
icebp
mov
aam
cmp
int3
lret
int
div
ret
ret
xor
mov
roll
repz
clc
loope
lock
loope
rol
loop
addb
shr
cmc
xor
cmp
iret
out
std
aam
ror
loop
std
test
cmc
jmp
leave
mov
roll
ret
enter
hlt
ss
into
xor
les
in
test
sub
fiadds
in
ljmp
inc
xchg
imul
decb
adc
cmp
hlt
cmc
inc
fldl
jecxz
mov
decl
cmc
jecxz
shlb
aad
neg
rcl
stc
cmp
testb
leave
cld
stc
int
jmp
xchg
iret
aam
out
in
sti
pop
pop
leave
ret
push
mov
sub
leave
ret
push
mov
jmp
aad
into
aad
fst
int
loopne
repnz
aas
pop
test
jle
cmp
icebp
repz
test
rcl
fiadds
std
jecxz
enter
mov
clc
enter
jmp
adc
sti
imul
sar
hlt
loop
or
faddl
nop
int
jecxz
xor
xor
cmp
xlat
in
cmp
mov
sub
rcl
hlt
fildll
in
cmp
test
loopne
addl
mov
int
push
xchg
in
ror
xor
imul
hlt
ss
sar
xchg
incb
xchg
fldl
shlb
cmc
cld
in
cmp
int3
lock
hlt
cmp
cld
aad
in
test
call
xor
in
fcomp
aam
clc
cld
cmpb
cli
incl
mov
in
loop
sbb
in
ret
out
stc
shl
cmc
ret
roll
fst
test
lret
in
mov
in
jmp
loope
aad
xlat
in
cmp
ret
hlt
shl
orb
leave
shl
and
jecxz
ljmp
aam
ds
aad
lock
loop
jmp
mov
flds
out
jecxz
fucomi
out
cmc
cmp
cmp
ret
clc
out
lret
test
in
out
fsubrp
into
jmp
loope
into
out
cmp
clc
rcr
rcr
sti
cld
in
nop
loope
nop
out
jecxz
loope
xor
aaa
shl
int
int
shr
rcl
cld
sti
repz
aad
ret
in
test
lock
aad
ror
test
into
cmp
fsub
cmc
in
fxch
loop
iret
test
lock
dec
lret
xor
shr
cs
jmp
cli
clc
test
enter
std
mov
rol
repz
bnd
stc
aad
fcmove
stc
cli
filds
fld1
in
in
stc
mov
hlt
xchg
lock
lret
ds
fcmovnb
int
test
in
call
in
repz
in
rol
cmp
xlat
lret
ss
leave
aad
cmp
cmp
fsub
in
in
fscale
out
xchg
mov
lret
jecxz
sti
enter
cmp
int3
cmp
in
out
in
enter
int3
mov
shl
fdiv
cmp
in
out
cli
out
add
mov
mov
int
call
in
out
cmc
aam
into
sti
leave
ffree
icebp
stc
repz
sbb
and
xlat
xlat
test
xchg
test
repz
jmp
aam
in
clc
loope
loopne
in
fiaddl
out
call
sbb
out
test
hlt
rcr
movb
into
std
mov
in
rcl
int3
icebp
loope
aas
fld
out
test
int
test
mov
repnz
shr
repz
cld
out
shl
add
out
cmc
int3
enter
repz
mov
enter
rcr
xor
loope
sti
roll
std
lret
xchg
int3
shl
rolb
ss
not
out
incl
loope
leave
xchg
ljmp
mov
xlat
leave
aaa
ret
out
fmulp
cli
adc
jecxz
aam
jecxz
hlt
call
mov
cld
lret
xchg
jmp
cmp
fldl2e
addb
jmp
xchg
adcl
ljmp
testl
loope
mov
popl
loop
xor
cli
sarl
aam
cmc
incb
hlt
mov
mov
loopne
test
aam
cmp
loop
lret
sar
out
stc
test
ds
leave
ljmp
in
mov
loope
aam
jecxz
jecxz
sti
cmc
shlb
aaa
lret
aas
rcl
xlat
loop
hlt
repnz
mov
mov
out
aam
lock
jmp
fucomp
ds
fcmovnu
jmp
iret
loopne
mov
lret
repz
enter
cmp
fucomp
repnz
loope
idiv
fprem
std
mov
in
cld
loopne
shr
cmc
in
in
leave
xor
idiv
xor
iret
loope
icebp
cld
loope
clc
loope
repz
rolb
in
out
in
idivb
sti
sarb
icebp
test
mov
lret
loopne
xchg
fcomip
mov
mov
and
mov
mov
sub
xorl
mov
sbbl
push
mov
xor
movl
cmp
movl
je
sbb
jmp
rcl
rcl
rcl
aad
xchg
stos
gs
jle
add
xchg
fmul
ret
aam
rcr
repz
hlt
jmp
icebp
fcmovu
out
xchg
loope
leave
in
into
lock
hlt
in
cmp
int3
ret
rolb
loopne
mov
repz
loope
out
fcomp
cmp
hlt
cmc
cli
cld
aas
shl
cmp
out
int
fneni(8087
cmc
lock
cmc
in
out
call
hlt
add
fisttpl
in
mov
test
loopne
ljmp
out
cmp
imul
addl
in
filds
mov
out
out
fcomi
das
in
loop
cmp
repz
sub
in
into
rorb
lock
lret
fptan
sti
int
cmp
adc
ret
enter
jecxz
enter
jecxz
lret
hlt
mov
cmp
roll
mov
loope
in
and
cli
rol
icebp
out
ror
int
jecxz
filds
loope
mov
loope
xchg
fsub
in
repz
iret
jmp
shr
ljmp
aaa
stc
jmp
mov
fdivrp
ljmp
mul
dec
enter
ret
repnz
ret
enter
leave
nop
xchg
xchg
xchg
lret
shr
hlt
fmul
aaa
enter
shl
rcr
cmp
lret
cli
std
xchg
out
mov
sti
lret
jmp
stc
aad
test
into
out
fadd
out
xchg
shl
into
aad
cmp
int
cli
repz
rcl
in
xlat
in
icebp
stc
out
loop
in
into
rcl
xlat
out
in
fcomp
fcompp
out
icebp
loopne
repnz
fisttpll
std
mov
into
repnz
shl
lret
ss
ss
adc
loopne
shl
cld
cli
adc
leave
f2xm1
or
std
in
int3
sar
out
xor
shr
ds
repz
mov
shl
ljmp
xor
out
out
xor
cmp
push
cli
mov
xchg
rorb
in
ss
repz
rcr
idivl
fcmovnu
mov
jecxz
ror
divb
loop
cmp
in
xlat
lret
fdivp
repnz
out
ret
ret
fiaddl
xor
in
lock
xor
jmp
cmc
rolb
cmp
aad
cli
mov
jmp
shll
cmp
loopne
loopne
into
ret
lock
rol
xchg
xchg
hlt
xchg
mov
stc
xlat
iret
stc
fdivrl
cmp
imul
orl
ljmp
jmp
loopne
fucomp
ffreep
repz
loopne
sti
fadd
addl
enter
hlt
ror
fcomip
fdivrs
fcmovu
stc
clc
ret
not
loopne
ljmp
aam
shl
fucomi
cmp
cmc
rol
lock
out
jmp
iret
in
lret
rorl
lock
int3
in
shr
fsubr
shl
shl
sbb
roll
fisttpl
das
int
cmc
out
icebp
fidivrl
repnz
mov
out
std
int3
aad
int3
lret
xor
cli
idiv
lret
ds
roll
out
in
cld
repnz
in
ss
das
fcmovu
fldlg2
rcr
sbb
cmp
loop
xchg
xchg
loope
shl
leave
ljmp
adc
imul
shl
jmp
in
loope
lock
mov
fidivl
out
repnz
xlat
sarb
rol
fmulp
out
jmp
loopne
lret
leave
in
call
not
loopne
jecxz
call
leave
ffreep
jmp
icebp
icebp
leave
loopne
lret
out
rol
enter
imul
loop
aaa
ljmp
out
test
repnz
cmp
add
loop,pt
test
xchg
into
decl
out
aad
in
in
out
mov
and
in
fcomi
sub
clc
fpatan
cld
f2xm1
xabort
in
idivl
cmp
xchg
fucom
fsubr
mov
sbbl
mov
andl
sub
addl
xor
movl
cmp
jne
adc
mov
sbbl
jmp
enter
int
int
repz
mov
jle
xchg
add
ljmp
in
rol
shr
iret
ljmp
cmc
imul
mov
sbb
addb
fmul
xor
out
aaa
repz
ljmp
fcmovnu
and
mov
mov
adc
mov
ret
fyl2x
enter
rcr
fsubr
testb
mov
mov
faddl
out
ljmp
in
or
loope
leave
test
test
leave
stc
rcl
jmp
cmp
fdivrp
adc
dec
fcmovbe
fmul
dec
test
cmp
idiv
out
jmp
in
sar
mov
orb
cmc
aam
out
cmp
cld
out
out
ds
in
into
test
loope
jmp
idiv
ret
xchg
nop
in
mov
rol
in
aaa
sarb
int
loope
repz
loop
aam
lret
test
loopne
repnz
icebp
iret
fst
repnz
icebp
fcmovb
clc
shr
mov
fmul
jmp
out
ljmp
aaa
aam
std
leave
cmp
fadds
xor
cmc
loopne
out
in
in
icebp
sub
stc
aaa
cmp
int
fnstenv
xlat
int
cld
fdivr
repz
repz
leave
test
into
ljmp
sarl
hlt
out
cld
aas
std
fdivr
sti
ret
push
mov
loopne
call
cmp
shl
fnsave
fidivrl
std
aam
ret
loop
idiv
sti
cli
faddl
xchg
test
loopne
stc
shl
clc
call
iret
incl
leave
mov
test
out
pause
xchg
in
in
cmp
cmp
aaa
cmp
ljmp
mov
loop
cld
in
cld
jmp
xchg
xchg
int3
cmp
ret
lock
idiv
aaa
cmp
cmc
fcom
fnstcw
cld
repnz
ret
ljmp
orl
into
roll
rcl
loop
jecxz
mov
in
iret
xchg
out
loop
loop
lret
shr
sti
vpsadbw
icebp
into
add
cmp
aas
xchg
loope
decl
xor
les
xor
lret
aam
ret
faddp
idivl
mov
mov
fsubp
out
loopne
sar
out
hlt
cmc
cmp
int
fcmovu
fcmovu
xlat
rol
cmp
int3
xchg
repz
into
loope
aam
shl
cmp
fcomp
jmp
cmp
ret
cmp
addl
cmp
cmp
idivb
cmp
fadd
loopne
adc
cli
clc
mov
icebp
xchg
adcl
cmp
lret
div
icebp
loop
fdiv
cmp
shl
out
in
cli
xchg
mov
loopne
in
repnz
ret
xor
icebp
xor
repz
out
lock
out
decb
xchg
xchg
repnz
aam
fcmovnu
repz
loopne
sbb
call
loopne
mov
filds
shl
in
std
jmp
sti
xorl
clc
mov
xlat
mov
clc
fcmovnbe
fsubp
shr
sub
shl
cmp
repz
sar
sti
clc
repz
mov
cli
mov
nop
xchg
out
fadd
xlat
fcom
cmp
repnz
in
fsub
into
cmp
hlt
fucom
xlat
xchg
loopne
mov
lret
shl
in
xor
clc
cli
out
call
sar
in
decb
mov
jmp
int
repz
aas
out
cmc
into
out
sti
shr
fsubp
cmp
cmp
mov
test
jmp
xor
lret
aam
test
fidivrl
icebp
fcomip
cli
aad
test
out
loop
jmp
das
fcomp
ret
enter
jmp
cmp
icebp
aam
in
fcmovu
repnz
mov
rol
les
jmp
ds
fiaddl
out
test
ljmp
cli
cli
fmul
cli
iret
xor
sar
neg
cmc
xlat
lds
xchg
test
in
in
cmc
int3
repz
loop
in
xchg
rcl
cli
mov
fdivp
test
ljmp
in
cmp
out
cmp
repz
repnz
enter
lea
int3
int
ret
ljmp
iret
clc
leave
fdivr
cmp
add
jmp
mov
xorl
xor
add
adcl
mov
sbb
mov
andl
xor
subl
jmp
rol
aad
aad
aad
leave
mov
push
int
jle
xchg
add
out
out
fadd
hlt
in
out
leave
fisttpl
in
iret
xor
cli
jecxz
cmp
jecxz
rol
aas
cli
ret
xchg
jmp
sub
cmc
in
call
sarb
iret
jmp
shl
in
faddl
mov
aad
shr
repnz
in
fabs
rolb
lret
addb
loopne
iret
int
loope
aam
in
stc
loopne
aas
test
fmulp
rcr
ret
aam
enter
ljmp
sub
fsubr
cmp
cli
ss
jmp
test
clc
lret
cmc
call
loope
mov
xor
into
cmp
call
shl
sti
rol
idivl
mov
popl
das
out
jmp
xor
roll
out
jecxz
int
in
out
orb
jmp
test
repnz
out
fildl
cli
out
cld
cld
loop
loopne
xor
cld
fxam
cmp
icebp
cmp
cmp
fucom
sti
int3
cli
loope
leave
loopne
aad
hlt
int
ss
fidivs
sar
rol
addl
mov
xchg
sbb
jecxz
out
leave
cli
sti
lret
int3
iret
inc
in
or
cld
aam
jecxz
in
lret
lret
fmulp
cmp
ret
cmp
xchg
decl
call
adcl
leave
leave
iret
jmp
filds
leave
jecxz
fildl
mov
out
fldt
fneni(8087
ljmp
fsubr
leave
in
loop
call
in
out
loopne
xor
int3
ljmp
lock
mov
jecxz
leave
in
lea
call
xlat
lret
cmp
cmp
into
fcomip
clc
sti
xchg
mov
cli
in
repz
in
jecxz
enter
leave
rcl
cmp
neg
ret
in
xchg
test
call
lret
xor
cmp
in
fistpll
sti
enter
in
into
lret
lret
in
aam
leave
mov
aam
jmp
sar
ret
aam
in
clc
stc
xchg
cmc
iret
fcomp
idivl
idiv
shl
neg
ret
idivb
ret
lret
test
out
loopne
loop
out
ss
aam
call
out
cmp
xlat
std
stc
sar
mul
mov
mov
hlt
cmc
aaa
into
test
cmp
loope
in
test
mov
jmp
in
repz
cmp
loopne
cmp
loopne
call
out
roll
cmp
out
clc
cmc
sub
in
fadd
jmp
testb
aad
les
cmp
enter
cmp
ljmp
ret
lret
hlt
enter
call
fsubr
jmp
ror
cmp
int
icebp
cli
fiaddl
cmp
jmp
fdivr
jecxz
shl
xchg
out
ror
call
cmp
rcr
fsubp
addb
out
fcmove
xchg
adcl
sub
in
in
cmp
rol
aam
std
decl
fsubr
repnz
jecxz
icebp
sti
lock
in
into
cmpl
in
cmc
in
int
adc
lea
stc
ret
out
lret
fucomip
aad
shl
test
rcr
mov
test
call
cmc
repz
cmp
sarl
rcr
lret
ffree
in
mul
fxch
stc
test
call
loopne
sub
iret
lret
jecxz
fdivrs
loop
cli
in
std
jecxz
into
xchg
out
out
xchg
cmc
ret
in
call
xchg
fucom
in
mov
in
in
loopne
loop
int
loop
fcmovnu
cmp
out
ror
shl
jmp
int
call
xchg
jecxz
std
lret
repz
xchg
jmp
out
out
ffreep
aam
cmp
out
cmc
jmp
loopne
loop
out
xchg
test
xor
in
loop
int3
hlt
iret
aam
cmp
hlt
incl
in
cli
repnz
popl
not
rcl
add
mov
jmp
and
mov
mov
mov
mov
mov
add
pop
pop
ret
push
mov
mov
xor
mov
jmp
into
int
fstp
aam
or
enter
jle
xchg
add
cmp
ds
cmp
in
sarl
cld
jecxz
hlt
flds
lea
hlt
aad
ds
out
int
jecxz
int
aam
xor
out
test
rorl
iret
xor
fdivs
hlt
faddp
jecxz
jmp
out
lea
out
imul
divl
fdivrl
in
push
cli
test
in
fisttpll
not
fdivrl
enter
aas
stc
aas
xchg
cld
icebp
fsub
incb
in
shl
aam
cmc
fcmovnu
out
out
std
cmp
test
hlt
jmp
out
mov
xchg
mov
mov
out
ret
idiv
fcmovne
ds
std
ret
lock
mov
cmc
sti
in
enter
in
repnz
ret
hlt
cmc
lret
sub
in
ds
les
fucom
aad
cmc
clc
faddl
in
into
xor
cmc
sar
cmp
in
stc
icebp
ret
add
cld
out
lock
in
loop
xchg
or
enter
iret
lds
fcmovnbe
out
rol
in
std
idiv
enter
out
fsubrp
int3
out
out
lret
aam
jmp
rol
cmp
cld
rcr
leave
fsubr
in
or
in
leave
cld
aad
xor
in
hlt
cli
mul
sti
sarb
std
aad
sarb
push
faddp
loopne
fucomi
lock
fsincos
clc
xor
lock
leave
sti
hlt
iret
hlt
cmp
lret
mov
addb
in
ljmp
hlt
in
stc
cmp
lret
jmp
fldl
lret
fdiv
ror
ds
fcmovne
ret
fcmovu
rol
add
test
call
out
lret
out
call
jmp
sbb
in
fincstp
cli
in
xlat
test
mov
hlt
aam
jecxz
call
in
in
aaa
std
xorb
fildl
in
loope
and
mov
xlat
int3
ljmp
fadd
sti
sti
fsub
loopne
jecxz
lret
ljmp
in
xlat
fsubr
fsub
out
lret
repz
cld
fcom
mov
fucomp
enter
repz
cmc
div
cli
out
test
out
test
fiaddl
adc
mov
out
int3
shl
loope
repnz
shl
int3
cmc
fadds
mov
adc
test
loopne
lea
ss
cli
hlt
out
jmp
sti
cmp
fcom
rorl
fmull
repz
ret
clc
repnz
aas
aad
sti
in
xlat
ret
ret
xchg
ljmp
in
out
xor
xor
sar
test
decl
nop
fucom
loope
decl
xlat
out
repz
fcmovu
jecxz
out
fnstsw
repnz
mov
mov
loop
iret
shl
rcl
cmp
cld
bnd
in
repnz
lock
sti
clc
flds
cmp
lock
lock
vpmaddwd
xchg
out
jmp
decb
icebp
in
xor
cmp
fnstcw
clc
cmp
stc
sar
in
cmp
test
in
out
and
lret
int3
rol
repnz
cmp
stc
ret
ds
adc
leave
imul
call
xacquire
int3
xor
repnz
sar
loop
cli
fdiv
aas
cmp
out
sti
addb
cld
cmc
ljmp
xor
cld
fmul
iret
in
fcmovnu
lock
fldl
loope
xchg
lret
lds
not
leave
iret
sti
in
ds
enter
loope
stc
fnsetpm(287
mov
sub
repnz
int3
cmp
cmp
test
ret
ljmp
in
jecxz
hlt
lock
shl
out
xor
xchg
std
add
fcmovne
in
in
repz
out
xor
repnz
in
repnz
not
in
clc
ds
fldl
sbb
fiadds
loop
divl
int
jmp
lock
aam
ret
test
iret
fimull
cmc
loope
iret
aad
in
out
loop
div
out
rol
stc
jmp
fadds
int
icebp
mov
and
jmp
leave
rol
ret
int
cwtl
stos
cltd
fs
scas
jle
xchg
add
loopne
in
in
call
ljmp
cli
mov
mul
enter
rorb
rcl
stc
clc
xlat
cmp
cli
leave
loopne
hlt
shl
sti
stc
call
lret
out
mov
ljmp
sarb
stc
shr
int3
repnz
ret
clc
mov
dec
test
loopne
shl
ret
jmp
test
aad
fcomi
or
fcmovbe
std
int3
test
in
icebp
shrb
xor
ljmp
aas
fld
cli
neg
loop
xchg
leave
sti
xor
repnz
cmp
hlt
clc
sar
cmp
cmp
rolb
ljmp
xchg
lock
xor
cmp
cmp
ror
fcomip
clc
fprem1
aam
cli
loop
cmc
in
leave
out
in
cld
or
out
neg
sarl
fsubr
cld
in
fcomip
aas
cmp
cmp
repnz
out
neg
fscale
sub
in
aad
shl
icebp
mov
out
cmp
cld
out
sar
loope
lret
sti
fstp
lret
repz
test
in
cmp
into
rcr
cmp
rcr
cld
icebp
ret
cmp
cld
mov
ss
aad
int3
jmp
ljmp
repz
cmp
lock
mov
xor
clc
in
fcom
enter
fiaddl
shl
mov
xlat
jmp
mov
call
cmc
cmp
cmpb
int3
lock
repz
mov
mov
mov
iret
int3
shll
enter
push
stc
fcmovu
in
iret
mov
test
stc
adcb
int3
shll
in
fcmove
enter
leave
jmp
shl
xlat
xlat
hlt
leave
sti
and
in
in
add
in
shl
xor
neg
ds
fistpll
add
cmc
cli
icebp
jmp
call
aaa
call
aad
out
lock
ffree
jmp
lret
lret
out
int3
std
repz
das
ljmp
xlat
out
shr
fld
in
jmp
test
orl
call
in
loope
fadds
fstpt
ret
and
fisttps
lret
test
cmp
into
int3
aad
sar
aas
shr
test
testb
jmp
mov
das
leave
rol
das
fdivr
xor
lret
or
div
xor
lret
test
out
fcmovnbe
iret
mov
sub
in
not
in
fmul
leave
lock
lds
out
mov
jecxz
mov
testb
int
sarb
lret
loopne
rcr
cmp
cmp
sub
fdivrp
rcr
xchg
xchg
out
aam
jmp
ds
fsub
jecxz
clc
clc
sti
add
out
fcmove
loope
in
into
in
xchg
xchg
loop
sarl
xlat
enter
out
adc
lret
stc
loop
fistl
xor
into
fdiv
enter
fistpll
adc
ds
jecxz
mov
sbb
in
xchg
std
mov
repz
ret
xor
stc
fdivrp
sti
cld
repnz
sti
in
flds
nop
int
int
out
lock
repnz
aas
int3
icebp
aam
ret
fnstsw
ret
or
dec
xchg
sti
cmp
jmp
xor
int
fcom
aam
icebp
sti
cld
clc
sar
enter
out
fimull
iret
call
aad
out
out
int3
cmp
shr
aam
enter
lret
out
rorb
in
test
loop
sbb
sub
and
jmp
cli
nop
lea
ljmp
ror
fdivrs
sti
rolb
cli
loope
xchg
addl
out
fcmovnbe
fcomip
out
clc
rcr
repz
mov
in
std
mov
lea
not
fxch
cld
out
aas
aas
cmpb
aad
fadd
neg
mov
icebp
enter
xchg
out
loop
in
shr
sti
div
or
fdiv
fadd
repz
loope
int3
in
out
in
divb
sti
repz
jmp
jmp
test
ret
filds
stc
int3
loop
in
out
rcl
lock
shll
std
cmp
loopne
ret
rol
ret
aam
fprem1
mov
or
mov
pop
ret
push
mov
sub
adc
jmp
rol
lret
iret
fcmovnbe
fcmovb
addr16
scas
addb
add
icebp
repnz
ret
shr
iret
cmc
xlat
cmp
shl
loop
ljmp
iret
lock
lret
jmp
out
aas
shl
aad
roll
loopne
fucomp
and
in
call
fcmovnbe
out
sti
cli
cmp
cmp
flds
fcmovu
call
jmp
int3
xor
jmp
cmp
aas
cmp
fcmovne
fmuls
xchg
fdiv
mov
not
int
divl
in
in
fincstp
sar
iret
aam
fldl
fincstp
xor
in
into
xorb
enter
cmp
cmp
rol
fdivrp
cmp
leave
loope
call
xor
stc
std
not
out
clc
rcl
rolb
fimuls
mov
jmp
imul
neg
out
out
repz
int3
in
stc
fcomp
cmp
incb
addl
repnz
lock
lret
cmp
sub
cmp
mov
cmp
loopne
out
loope
shl
aam
subl
call
out
sarl
jecxz
and
repz
fimull
fimuls
aaa
das
stc
in
aad
cmp
ds
jmp
mov
jecxz
leave
out
mov
out
xor
aaa
ljmp
hlt
sti
shl
in
jmp
sti
lret
xchg
sub
xor
ret
not
xlat
xor
clc
repz
xchg
repz
std
jmp
loopne
in
lret
in
std
mov
iret
fdivr
cmp
shl
cmp
in
in
sti
cmp
into
cld
nop
in
nop
loopne
ror
jecxz
test
sti
loopne
sar
cmp
shl
shl
test
mov
lock
in
shl
shr
test
icebp
repnz
shlb
cmp
ror
rcr
cmp
test
cli
faddl
mov
addb
out
sti
ror
cmp
cmp
dec
leave
in
test
loop
in
decl
repz
in
clc
cmp
dec
loopne
repz
adc
flds
fsubp
loopne
icebp
out
les
leave
imul
cld
sar
test
out
in
in
lock
jecxz
xchg
aam
loope
das
in
ss
aam
out
cmp
cmp
adc
rcr
ret
stc
lret
loop
out
xchg
repz
jmp
out
out
icebp
icebp
div
fcmovnu
fcomip
stc
cmp
call
faddl
xchg
in
out
rcr
out
clc
cmp
aaa
addl
std
dec
rcll
test
xor
int
aas
aad
in
sar
orl
lds
xchg
iret
repz
clc
ror
xlat
xor
test
jmp
orl
out
shr
fsub
lock
iret
cmp
rcl
in
frndint
repnz
mov
fdivr
out
addl
sti
fiaddl
cmp
idiv
sti
ret
mov
lret
xchg
cld
xor
jmp
fidivl
aad
cli
ffreep
loopne
into
in
repz
fnstsw
rolb
mov
xor
ss
filds
aam
fcmove
cmc
mov
into
cmp
mov
imul
shr
hlt
in
das
cmp
leave
repnz
cmp
lock
cmp
ret
test
std
mov
lret
jmp
in
int3
jmp
aas
out
lock
test
shl
ljmp
cli
ljmp
ret
xor
jmp
fdivr
idiv
ret
ds
hlt
fsubr
cmp
orl
out
repz
lock
enter
cli
lret
addl
fisttpl
out
fmull
rcl
fidivl
stc
fucomp
aaa
enter
bnd
fcomp
std
clc
ds
in
iret
lock
rcll
out
in
jmp
in
jmp
rcl
cli
out
lret
or
add
add
add
inc
mov
cmpl
jne
push
push
pushl
pushl
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
adcl
xor
adc
mov
add
mov
sbb
mov
jmp
int
lret
int
and
mov
aas
add
into
movb
xor
rcr
ljmp
neg
cli
int
iret
rcr
xchg
lret
out
jmp
ret
out
mov
test
ljmp
int3
loopne
repz
mov
mov
lret
rol
jmp
sti
adc
into
out
loope
fadd
in
jecxz
loop
shl
loope
enter
repz
lret
leave
ds
int3
cli
les
sti
test
xor
fld
aaa
int3
iret
enter
ret
xlat
xlat
repz
leave
flds
pop
addl
icebp
loopne
in
xlat
fnclex
iret
aas
sbb
test
jmp
out
repz
das
loope
ljmp
cld
rcl
loope
aam
cli
ftst
mov
out
in
mov
ret
jecxz
das
ds
call
cmp
loop
repnz
lret
orb
into
call
xor
das
cmp
fdivp
clc
repnz
fdiv
call
cld
mov
out
mov
int
jmp
cmp
aaa
in
aad
ljmp
aam
loop
stc
shl
xchg
nop
test
into
icebp
fldlg2
xlat
leave
rcl
cmp
in
adc
enter
ret
mov
mov
dec
test
movl
call
adc
repz
xchg
adcl
out
out
icebp
repnz
jmp
cmp
cmp
test
lret
or
in
nop
in
lret
jmp
fdivs
rol
jmp
loopne
icebp
cmp
in
idivb
test
rcl
lret
mov
xchg
xchg
out
shrl
imull
loope
in
fdecstp
cli
xchg
cli
mov
cli
mov
into
jmp
cmp
fcmovbe
cmp
cmc
iret
out
cmp
loop
mov
fildl
call
clc
in
clc
int
fxch
repz
loope
cmc
xchg
lret
mov
shr
out
hlt
cmp
aam
fldl2e
test
ret
stc
fcmovnb
std
mov
loopne
out
jmp
call
cli
in
ds
cmp
sti
ds
into
clc
out
fsubp
lea
lret
xor
leave
out
int
rcl
addb
in
faddl
sub
jmp
clc
idiv
stc
shl
shl
jecxz
neg
jmp
decb
xchg
cmc
out
out
test
fxch
ljmp
lock
cmp
fsub
xchg
ffreep
repz
lret
lret
fcomip
cmp
add
ret
in
flds
mov
lret
sub
repz
cld
stc
rolb
ret
fisttpl
out
mov
int3
in
cmc
call
fcmovne
loopne
repnz
aam
loop
clc
ret
xchg
jmp
in
dec
test
aam
shl
cmp
fmul
aas
sti
int3
jecxz
xlat
test
sti
enter
sti
fmulp
cli
loop
cmc
int
fucomip
out
cmp
aam
repz
iret
sarl
clc
cmp
ret
xlat
std
test
fsincos
shr
mov
aad
xor
clc
out
rcr
xor
cmp
fildl
test
loopne
decl
out
into
leave
out
jmp
cli
clc
fcmovb
stc
incl
out
faddl
aam
sub
das
iret
in
cmp
lock
into
sbb
ret
fsubrp
test
in
or
call
fldl
repnz
aaa
int
cmp
cmp
clc
sti
loope
in
jmp
fisttpl
icebp
loopne
repnz
xor
std
xor
xlat
cld
inc
aad
stc
mov
std
sti
fcomp
mov
iret
in
test
jmp
lret
leave
idiv
repz
shl
into
clc
mov
aad
jecxz
in
jmp
mov
out
out
repz
out
aam
test
in
fnstsw
into
aad
lds
movzwl
xor
mov
xor
xor
mov
sub
movb
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
push
push
pushl
pushl
pushl
pushl
pushl
pushl
pushl
pushl
push
push
call
cmpl
jne
mov
inc
mov
jmp
jmp
ret
ror
rcr
fnsave
xchg
sti
mov
lods
push
xchg
mov
jle
sti
mov
xchg
sar
ljmp
iret
loopne
cmp
icebp
in
aam
ret
mov
addb
xchg
in
in
fcom
fadd
cmp
std
ljmp
out
call
in
loop
mov
mov
leave
out
fsub
cmp
xor
iret
in
jecxz
fndisi(8087
xchg
mov
xor
xchg
les
into
out
xor
in
iret
loope
clc
xlat
out
fdivrs
icebp
lret
imul
into
jmp
loope
lret
loop
shl
call
cmp
cmp
test
call
cld
fucomi
out
in
xchg
jmp
out
aam
int
iret
mul
xlat
loope
fcmovu
jecxz
loope
loopne
out
not
int
stc
in
in
call
in
stc
stc
xchg
std
stc
mov
out
jecxz
repnz
hlt
mov
in
into
test
iret
test
in
mov
sbb
fdivrp
icebp
jmp
enter
xor
aam
sti
jmp
stc
std
int
xlat
rcr
fadd
lret
clc
incb
out
ljmp
stc
fdecstp
cld
repnz
xlat
push
mov
testb
fstl
ret
out
out
ljmp
in
ret
repnz
in
aad
stc
jecxz
loop
lret
xchg
cmc
ss
out
jmp
cmc
aas
rcl
sarl
cli
fabs
jecxz
mov
xchg
fsub
lret
fimuls
cmp
lock
icebp
ss
cmp
in
lret
into
out
jmp
icebp
std
in
fadd
in
xor
repz
int3
leave
jmp
inc
addl
mov
out
cmc
out
jecxz
icebp
fcmovnu
or
div
fiaddl
hlt
ds
fucomp
fisttps
xor
xor
out
ror
clc
roll
aas
ret
loope
test
enter
int3
in
mov
out
fsubrp
cli
clc
clc
cmp
int
aas
aad
fninit
mul
mov
in
mov
cmp
jmp
fdivrp
xlat
xrelease
xchg
fcmovnb
mov
xchg
test
xor
repz
cmp
out
fcmovnbe
cli
mov
sar
xchg
roll
xor
lret
fdivr
rcr
neg
sar
fadd
fcomip
sti
stc
fisttps
mov
jmp
out
call
aam
aad
cmc
faddl
call
rorl
lret
hlt
clc
into
fucomi
sti
and
shr
xlat
mov
cld
leave
test
loope
ljmp
cld
shr
aaa
xor
imul
out
hlt
out
idiv
loopne
jmp
leave
loope
loope
stc
jmp
shl
repnz
cmp
fld
mov
lret
cld
xchg
mov
in
mov
sub
imul
icebp
ror
cmp
xlat
cmc
sbb
test
or
xchg
jecxz
jmp
lock
idivb
aad
test
cli
addl
add
int3
cmp
xor
into
xor
in
push
idivb
rolb
loop
leave
lret
fdivp
dec
ljmp
cmp
out
cmp
cmc
hlt
test
std
test
in
loope
jmp
and
loopne
shl
cmp
out
jmp
aam
iret
fisttpl
out
call
in
cmp
aam
ror
cld
ljmp
adc
test
jmp
enter
in
nop
xor
clc
int
aam
lock
xlat
push
cld
repnz
filds
addl
cs
fcomi
ss
repnz
cmp
hlt
cld
shl
mov
int3
or
fsubrp
int
out
rcl
repnz
cmp
fnstcw
ljmp
test
xlat
out
cli
test
xchg
jmp
xchg
loope
xor
imul
cmc
out
cmp
icebp
cmp
in
iret
cmp
jmp
in
inc
jmp
xlat
rcl
fxch
fxch
jp
cmpsl
clc
sbb
jle
add
ljmp
ret
xor
shll
not
leave
int3
in
cmp
iret
testl
jecxz
iret
addl
fdiv
xlat
in
fcmovbe
shl
hlt
out
fprem
loopne
enter
not
loopne
int3
iret
sti
test
idiv
jecxz
shl
aas
repnz
and
test
out
nop
mov
jmp
vshufps
aas
xlat
cmp
ret
out
cld
stc
sbb
call
mov
xor
jmp
clc
aas
push
shl
cmp
cld
cli
fmuls
mov
xchg
out
ss
aaa
lock
sarl
loope
fucomi
adc
cld
idivb
cld
loop
loop
call
sub
ror
ror
iret
cmp
cmp
test
leave
xchg
rcll
out
jmp
enter
fsubp
out
fsubr
out
loopne
fmul
mov
mov
lret
leave
ror
cmp
lret
rolb
xchg
lret
rcr
mov
mov
xor
shr
idiv
enter
cli
loope
test
orl
into
out
not
fcom
fcmovne
cli
xor
push
fcomip
xor
out
jecxz
in
incb
leave
stc
out
sub
cmp
cmp
hlt
sbb
sti
call
vpmulhw
into
test
loop
clc
int3
xor
aaa
clc
stc
lret
aaa
shlb
xorb
fcmovnb
xchg
nop
rcll
stc
aaa
fidivl
rcr
in
adc
cmc
icebp
faddl
out
out
fxch
fucom
test
jmp
hlt
repnz
cli
clc
lret
iret
jecxz
out
icebp
fcmove
cmp
sti
out
jmp
loopne
xchg
cmc
aad
icebp
lret
jmp
call
cmp
shl
neg
out
loop
leave
xchg
nop
loope
iret
shr
fdiv
call
ljmp
les
xchg
in
fmulp
out
xchg
int
xor
out
imul
out
rcl
adc
loop
ftst
sub
stc
sti
out
fisttps
cmc
icebp
aam
shl
clc
cmp
std
lret
cli
in
mov
out
in
nop
test
xchg
lock
repnz
hlt
cmp
xor
inc
out
aam
aad
mov
int
loopne
in
in
idiv
fdivl
cld
aaa
int
out
aas
sbb
sbb
mov
mov
aad
aaa
out
leave
repnz
fldln2
in
testl
into
in
ficoml
sar
cmp
jmp
in
jmp
std
mov
mov
aam
mov
int3
test
ret
fcmovu
stc
fcomp
ds
jecxz
rcl
out
stc
jmp
lret
loopne
repnz
xchg
inc
fdivr
rcr
fcmovnbe
cli
xor
in
in
fnstsw
mov
mov
test
iret
call
fldlg2
int
xlat
jmp
lock
sar
mov
addl
test
out
not
stc
repnz
lret
shl
fucomip
repnz
out
aam
aas
xchg
lret
int3
int3
mov
cld
in
nop
xchg
out
int
out
aam
xbegin
test
rcl
fadds
mov
jmp
shl
ljmp
jmp
fst
iret
jecxz
rcl
stc
ret
jmp
aas
and
icebp
aad
aad
fdivrp
neg
xlat
loope
cmp
fcomi
fcomip
out
std
xchg
addl
out
repz
cmpl
out
in
rorb
dec
int
iret
xchg
int3
repnz
call
ss
div
hlt
rol
cmp
loope
enter
cld
cld
int3
icebp
cld
in
mov
in
xor
sarb
ror
lret
mov
jecxz
nop
decb
cs
iret
fsubrp
stc
xor
aas
out
adc
sub
popl
add
adc
add
cmpl
je
cmpl
jne
push
call
mov
dec
mov
jmp
xor
add
mov
add
mov
mov
xor
subl
jmp
sarb
into
rcl
ror
add
jmp
aas
addr16
sbb
aas
add
mov
into
sti
jecxz
aad
lret
enter
loope
cli
shr
lret
jmp
xchg
hlt
fsubr
lock
enter
test
sti
jmp
into
int3
rcr
aad
inc
fdivrp
leave
or
addb
rol
lret
cmp
ljmp
clc
rcl
enter
int
test
rol
jmp
cmc
in
dec
into
fstpt
lock
lock
fxch
idiv
fcmovu
xchg
xchg
into
les
ret
cmp
rcr
ffree
loop
roll
fdiv
xchg
adcl
shlb
repnz
aam
lret
dec
aam
jecxz
jmp
lds
in
decb
imul
xorb
test
fcmovb
fldl2t
int
jmp
xor
in
int3
rcl
cld
hlt
lret
std
fcomi
aaa
les
mov
loop
rcl
xchg
xor
repnz
in
aaa
int3
ss
ljmp
fcmovu
fimull
adcb
loopne
in
enter
sar
cmp
cmpb
test
stc
mov
out
loopne
mov
icebp
clc
sub
repnz
enter
roll
ljmp
and
in
icebp
cmc
xor
jmp
call
cmp
fsubp
fdivr
mov
xchg
out
sarl
call
rol
addb
fucomp
test
and
or
ljmp
repz
aam
frndint
cmp
fmuls
lea
int3
fimuls
out
cmp
cli
cmp
xor
xchg
jmp
sbb
cld
out
int
nop
icebp
loope
xor
cmp
loopne
rcl
out
fcmovb
jmp
mov
loope
xchg
shll
out
ss
aaa
rol
imul
xchg
cmc
loop
ffreep
loopne
nop
test
call
xor
clc
cmp
adc
aad
adc
cld
mov
in
fucomp
into
ljmp
leave
xor
rol
shl
in
ljmp
addl
cmc
repz
loopne
cmp
ret
shl
cli
fstp
jmp
xchg
int3
in
ljmp
repz
rcr
fsubp
loope
lret
filds
out
jmp
out
loop
test
rcr
lock
stc
repz
in
test
loop
stc
into
leave
hlt
mov
cmc
clc
xor
clc
enter
loope
aas
xor
shl
repz
fcmovu
lea
in
clc
xlat
cmc
ljmp
fcmovbe
icebp
test
fcmovnbe
jmp
popl
out
lret
fidivrl
cmp
icebp
rcr
and
stc
fmull
ret
out
out
into
loop
sar
cmp
enter
les
mov
into
xor
cli
fnstcw
bnd
shl
mov
in
orb
xchg
mov
jmp
das
out
leave
shl
stc
ds
neg
shl
std
mov
enter
xchg
xchg
aad
in
xlat
in
in
cld
out
jmp
hlt
jmp
idivl
cmp
leave
fcmovu
clc
lret
jmp
cmc
icebp
ret
icebp
cmp
xlat
in
cmp
rcr
in
rol
shl
mul
in
loopne
in
lret
loopne
xor
xlat
call
std
jmp
stc
not
loop
addl
in
out
loope
jmp
lock
ljmp
loop
orb
fxch
icebp
aam
aad
repz
xor
aaa
cld
fucom
ret
int
iret
cmp
add
int
in
jmp
mov
jecxz
jmp
rcr
sar
loope
in
test
cld
xlat
ret
sub
orl
mov
xor
movl
inc
movl
mov
sbb
jmp
iret
fcmovnb
stc
inc
sti
mov
fimull
jle
add
lret
faddp
xor
sti
ljmp
cmc
ret
rcl
aam
cld
mov
in
mul
fcom
hlt
hlt
jecxz
in
not
iret
xor
cli
ds
sar
sarl
faddp
imul
fisttpll
iret
aad
int
idiv
cmp
lret
repz
test
aad
rol
xlat
test
fdivrp
clc
cld
rclb
xor
jmp
int
iret
ror
cmc
rcr
fidivrs
sar
rcr
mov
fucom
ljmp
in
xor
div
in
leave
fstpt
cmp
incl
nop
xlat
loopne
repz
jmp
lock
sti
clc
xchg
addl
test
divb
ret
in
std
int
f2xm1
fiaddl
fyl2xp1
aam
fmull
lret
call
aaa
cmp
fcmovnbe
cld
iret
xor
ljmp
mov
out
fdivp
int
ret
xor
aad
testb
xchg
jmp
testl
jmp
in
test
rolb
clc
mov
xchg
std
xchg
mov
int3
sub
fcmove
icebp
out
cmc
stc
cmp
loop
rol
fcom
aad
fucomp
fmuls
mov
xor
f2xm1
sarl
repnz
repz
test
fiadds
popl
lret
jecxz
repnz
jmp
das
cmp
repnz
aam
test
ror
fdivrp
int
loop
icebp
rorb
cmp
xor
not
cli
fst
call
fmuls
call
iret
call
xor
test
fld
fptan
aam
in
loope
into
fninit
leave
hlt
repnz
call
leave
test
xlat
stc
in
test
into
jmp
mov
cli
xchg
icebp
repnz
into
icebp
std
lret
ret
ds
ds
sti
stc
icebp
repz
loope
cmp
cli
xor
xor
aad
jecxz
not
xchg
aad
mov
fdiv
in
mov
repz
jmp
hlt
shl
clc
lock
xlat
fcmovne
rcl
in
fdivs
out
div
jmp
out
jmp
fmulp
loopne
out
in
xor
cmc
xor
fnsave
fdivr
div
aas
idivb
jmp
mov
fnstsw
out
jecxz
ret
sar
icebp
xlat
stc
sar
stc
in
rcl
fcmovbe
in
mov
sbb
ljmp
rol
xor
std
jecxz
jecxz
cmp
filds
fsubr
icebp
sar
xchg
lock
not
xor
cmp
aam
div
sti
icebp
xlat
addb
into
int
fsubrp
fcom
loope
aam
repnz
cmp
test
cmp
xor
in
fdiv
xchg
cmc
aam
xlat
cmp
fucomp
rol
out
int
iret
rcl
jmp
in
in
shr
out
mov
icebp
in
out
out
cld
fxch
aad
lret
out
flds
ret
mov
jecxz
loope
jmp
das
int
repnz
lret
rcr
ffreep
aas
stc
out
stc
test
jmp
jmp
into
loop
cmc
and
cmp
idivb
cld
cmp
ret
jecxz
fld1
xor
out
test
in
out
aad
aad
xor
cmp
cmp
roll
out
and
ljmp
lret
cmp
in
fnstcw
ljmp
in
xchg
lret
xchg
mov
xchg
fmulp
repz
ss
cmp
fcmovnbe
loop
and
out
test
into
int
mov
xor
stc
cld
out
jmp
repnz
ret
xchg
jmp
test
xchg
xchg
shr
out
fldlg2
clc
sti
sarb
lret
out
stc
cmp
out
aam
out
fld1
jmp
mov
lock
int3
imulb
leave
sti
std
sarl
rcr
rolb
rol
stc
ret
or
out
adcb
or
orl
push
xor
mov
add
jmp
mov
mov
inc
cmp
jmp
aad
aas
ret
fcmovne
aad
mov
cwtl
jb
fwait
dec
jle
aas
add
repnz
xchg
out
enter
iret
fxch
in
clc
aas
into
stc
push
aam
aas
clc
xchg
repnz
jmp
ds
icebp
fadd
test
cld
mul
or
addl
xor
rol
call
int3
fadd
xchg
call
sti
leave
adcb
loop
loope
int
repz
ror
fdivrp
cmp
lock
out
loopne
testl
imull
xlat
jmp
xor
shl
jecxz
call
shl
mov
out
mov
push
ljmp
call
push
addl
mov
lret
les
int3
ror
jmp
out
xor
cmp
roll
loop
int3
mov
mov
shr
xlat
ror
ljmp
cmp
hlt
fcmovnb
int3
fildl
into
in
xchg
mov
in
fsub
shr
iret
xor
loope
shl
loopne
xor
mov
jmp
hlt
mov
cmp
out
in
lret
xor
fcmovnu
sar
rol
xchg
in
clc
test
jmp
cld
mov
repz
out
iret
cmc
sar
cli
flds
jecxz
aam
cmp
lret
mov
orb
xchg
rcl
mul
shl
repnz
iret
hlt
adc
ret
repnz
call
fisttpll
mov
sub
cs
repnz
fldln2
cli
fidivrl
rcl
jecxz
and
ljmp
in
icebp
loopne
int3
cli
xor
fsubrp
lret
jecxz
shlb
xor
ret
aad
ljmp
out
in
rol
xor
ss
cmp
int3
addl
or
fpatan
out
repnz
xor
clc
rcl
les
repnz
fnstsw
ret
loopne
sti
xchg
lret
mov
mov
neg
lret
lock
jmp
neg
cld
loopne
stc
sti
jecxz
decl
xchg
in
xor
out
out
in
cmp
fdivp
cli
ds
aas
hlt
rol
in
enter
xchg
lret
cmp
xlat
cmp
lock
hlt
hlt
jmp
shl
aad
int3
test
xchg
shl
xchg
ffreep
das
stc
int
xlat
hlt
sarl
div
repz
fsubp
loope
out
mov
jecxz
fcomip
test
fdiv
enter
out
jmp
fcmovnb
repnz
aad
stc
mov
out
call
loopne
iret
xor
hlt
stc
sti
icebp
out
sti
testl
mov
fdivr
fisttpll
cmc
xlat
int3
xor
not
out
in
sub
rcl
testl
lock
xchg
xchg
adc
les
ljmp
cmp
fcmovnbe
faddl
loope
f2xm1
ret
rorl
enter
jmp
xor
in
loope
jecxz
cld
aad
fmull
enter
into
out
push
ror
sti
clc
out
sti
fcomp
aam
cli
ror
roll
out
in
loopne
test
fimuls
sub
icebp
cmp
sti
cmp
fcmovne
cmp
aad
fdiv
mov
xchg
incl
lret
repnz
loopne
clc
cmp
sti
call
leave
int3
loope
ljmp
into
icebp
lret
jecxz
aas
shl
test
fcmovu
mov
out
lea
aad
into
int3
fdivr
or
stc
in
cld
in
loope
adc
idiv
int
sbb
lret
nop
iret
xchg
aam
out
cld
clc
out
fidivs
cmp
in
test
xlat
les
inc
mov
cld
xchg
ljmp
icebp
hlt
fidivs
rol
icebp
ds
addl
xchg
addb
imul
xlat
cmp
lret
and
hlt
not
std
hlt
leave
stc
ret
fadd
in
or
xchg
call
out
xor
sar
cld
in
test
loopne
jmp
mov
jb
jmp
rcl
xlat
fcmovnu
shl
cwtl
clc
xchg
or
lds
aas
add
xchg
shr
ljmp
jmp
xor
cmp
into
ret
in
aam
cld
jecxz
cld
out
nop
fucomip
sbb
xor
cli
ret
xor
and
cmp
sbb
in
mov
mov
into
cld
lret
xor
fmul
rol
cmp
cmp
cmp
loop
out
loopne
std
xchg
mov
cmc
sti
not
std
fcomi
in
cld
out
test
jmp
call
nop
cld
and
xor
int3
out
call
hlt
clc
shl
sar
mov
out
lret
loope
out
out
out
xor
call
cmp
jecxz
flds
leave
xlat
mov
in
jmp
divb
int
xor
clc
cld
flds
ds
fiaddl
add
in
call
into
fdivs
cmp
cmp
div
ffree
add
leave
lret
mov
loopne
jecxz
cmc
lret
shr
fxch
rcr
loop
jecxz
mov
xchg
ffree
incb
sti
in
out
repnz
int
int
jmp
xchg
fadd
out
in
jecxz
in
in
loop
out
fstpt
ror
into
in
addb
jecxz
in
adc
mov
in
in
std
out
nop
jecxz
aaa
xor
aad
iret
int
push
in
in
into
iret
enter
enter
cld
loopne
in
int3
xchg
in
leave
in
sub
std
xlat
mul
loopne
test
out
mov
xchg
aam
repz
cmc
fiaddl
repnz
xchg
roll
out
aas
shll
aaa
fmul
int
aas
cmc
hlt
adc
and
decb
xchg
into
xor
aam
enter
ljmp
int3
shl
lock
aad
jecxz
loop
in
aad
leave
cli
cmp
jmp
cmp
cmp
cli
ror
out
les
neg
hlt
sub
mov
lock
in
repnz
xor
fdiv
ret
ret
ret
repz
mov
int
leave
cli
sbb
jmp
xlat
out
out
icebp
loopne
cmp
loop
fimuls
testb
cs
out
sub
lock
xlat
fmul
test
shl
fldcw
lret
repz
loopne
aas
and
sarl
clc
decl
fldl
jmp
fchs
aam
lret
cmp
adc
repz
in
out
fcmove
out
loop
lret
jmp
out
stc
cmp
icebp
ret
frstpm(287
ffree
out
fstp
lret
mov
call
shrl
iret
clc
int
lret
loope
cmp
fadd
ret
fdiv
enter
out
loope
xchg
test
cli
enter
shl
xor
loop
div
out
cli
xchg
or
loope
icebp
in
faddp
shl
lret
iret
xor
xor
fdiv
in
loopne
loopne
loopne
sub
lret
out
xchg
lret
out
jmp
jecxz
fdivr
fsub
imul
aas
loope
ret
ret
addb
jmp
icebp
mov
xchg
int3
out
out
int
cmc
leave
fucompp
leave
cmp
addb
in
mov
loop
fsub
clc
in
clc
cmp
cmp
testl
sar
orl
leave
repz
ljmp
cmc
cmc
mov
decl
in
lret
hlt
and
out
ret
sar
lock
ret
fcmovb
aad
ret
dec
enter
test
cmp
cmp
into
ds
iret
out
sar
out
int
loop
leave
lock
jmp
not
not
fadd
cmp
sti
not
aam
fnsave
icebp
fsub
clc
mov
loopne
orb
jmp
out
xlat
rcr
int3
incb
in
in
loop
out
icebp
mov
mov
mov
jmp
ret
ror
ret
rcl
je
repz
sbb
add
jecxz
ljmp
int3
fstpt
xlat
stc
shl
rolb
in
ret
leave
mov
out
out
jmp
lret
out
repnz
incb
loope
fildl
or
sar
jmp
shl
aam
jecxz
mov
std
call
sti
out
fsub
aam
aam
int
ss
ror
stc
cmpb
and
call
loop
mov
mov
icebp
rol
clc
out
leave
stc
out
ds
in
mov
xchg
loope
in
xchg
mov
ror
cmp
ljmp
cmp
rol
repnz
fcmovu
sti
loopne
lock
bnd
into
xor
call
rcr
xlat
fcom
fucomp
fldl
in
out
sub
aad
test
test
stc
sar
aam
cmp
in
sti
xchg
jmp
sub
out
lock
loop
fiadds
not
leave
mov
out
lret
xchg
in
rcl
xor
ljmp
in
sti
in
test
loope
fdivr
lret
ljmp
enter
out
cmp
into
int3
sar
aas
fsubr
ret
out
fdivr
out
call
fucomp
out
hlt
lock
cmc
xchg
sti
jmp
int3
in
fcmovnu
loopne
repz
jmp
xor
sarl
sti
aam
fiadds
idiv
out
xchg
repnz
in
out
loop
ror
out
out
repz
in
icebp
aam
roll
call
cmp
leave
int3
aaa
fcom
rcr
out
loopne
aas
fcomi
iret
out
in
fcmovnu
std
sbb
xchg
test
aaa
sti
xor
std
cld
jmp
cli
div
mov
fldl
ret
xchg
adcb
leave
fmul
loopne
std
and
test
xor
cmc
std
xor
jmp
lds
aaa
aaa
jmp
aas
fdiv
cmp
hlt
loopne
aad
fndisi(8087
test
rorb
ret
xor
xor
movl
icebp
sarl
fcmovnu
in
test
xorl
in
lock
std
aad
test
hlt
jecxz
repnz
fsubr
test
xor
sti
icebp
fnstcw
clc
icebp
testl
lret
ror
into
rcl
out
rcr
jmp
loopne
out
incb
into
ror
shl
in
loope
jmp
out
rolb
addl
fisttps
ss
lret
cmp
into
aaa
xlat
cld
fcmovnu
xor
in
lea
into
popl
xor
xor
xlat
fcomp
loop
loop
test
fiadds
mov
shl
neg
div
in
ror
lret
cld
cmp
add
incb
ffreep
cmc
hlt
call
sti
out
xor
jmp
ret
and
shl
clc
cld
ljmp
icebp
ljmp
cmc
fucomi
lret
std
ror
fdivr
int
fnstcw
hlt
loopne
clc
out
addb
das
xor
ret
cmp
xor
fmul
testl
flds
hlt
repnz
xor
lock
cmp
cmp
test
fimuls
xchg
enter
out
jmp
aad
in
stc
out
aad
jmp
aad
out
shl
mov
cld
mov
test
in
mov
rcl
out
ror
iret
cmp
aas
roll
fsub
shl
mov
sti
inc
xchg
fisttpll
idiv
sar
repnz
loop
in
std
leave
ljmp
decl
out
aam
hlt
into
call
jecxz
rol
aas
ds
xlat
ret
in
out
fimull
jecxz
shr
pop
add
add
iret
vpaddusw
fstp
pop
mov
outsl
cmp
sbb
pop
jle
aas
add
out
xor
ss
repnz
rcr
hlt
test
loop
flds
mov
xor
sar
lret
out
cmp
sarb
repz
shl
xchg
shr
hlt
xchg
enter
jmp
ss
repz
inc
ds
jmp
iret
loop
int
fadd
loop
xor
out
shll
lock
and
loope
orl
xchg
xchg
loop
enter
iret
out
out
sarl
adc
loop
int
repnz
lock
cmc
xlat
xor
lock
cmp
cmp
lret
iret
aam
aam
cmp
test
rcr
shrl
loop
neg
enter
fdivr
idiv
repz
test
cld
mov
fmuls
aad
sar
icebp
icebp
lret
cmp
stc
sti
icebp
cmp
ds
sub
out
cmp
out
nop
fists
in
into
cmc
out
push
lret
fst
in
sti
mov
xchg
jmp
jmp
ret
cmp
cld
repz
fidivrs
aad
ds
ffreep
xchg
nop
loope
cld
rorl
shl
iret
cs
cmp
fcom
adc
loopne
aas
test
ljmp
mov
mov
addl
enter
into
aad
xlat
aad
repz
std
div
ljmp
das
clc
lret
div
cmp
aad
aam
fdiv
xlat
out
ret
aad
out
enter
icebp
xchg
orl
ds
jmp
cmc
loopne
test
hlt
fcomi
iret
nop
mov
xchg
call
cli
lret
sarl
repz
sarl
xlat
testb
int3
in
repnz
int
test
aas
enter
repz
cmp
shl
fadds
sti
cld
out
jecxz
xor
lret
xor
cmp
test
int3
into
iret
ret
sti
loopne
incb
sti
and
xor
in
aad
aaa
fdivs
rcl
ss
incl
jecxz
xchg
ror
loop
jmp
sub
in
out
cld
enter
rcl
idiv
shl
aad
sti
test
stc
faddl
idiv
fcomi
repnz
rol
cmp
aam
repnz
clc
cld
loope
xchg
lea
mov
into
into
aaa
out
jmp
fsubr
lret
cmc
rcr
sti
clc
orl
icebp
fsubr
call
std
cmp
cmp
in
xlat
rcl
cmp
xchg
jecxz
xor
cmc
fcomip
fadd
in
out
test
loop
lock
icebp
xchg
shl
shl
divb
fdiv
xlat
ljmp
addl
int3
orb
sub
xor
repnz
call
in
testl
iret
out
xchg
mov
xor
rcl
repz
ret
fcos
cmpl
cmc
mov
jmp
xor
jmp
jmp
fcmovne
cmc
sbb
fninit
mov
mov
rcr
xchg
ret
aam
cli
cmp
int3
int
icebp
out
aam
test
in
sub
shr
mov
out
in
ror
sarb
sti
xor
jecxz
cmc
stc
ret
fmull
mov
sub
hlt
xchg
xchg
enter
ret
ror
fsqrt
hlt
jmp
std
in
hlt
hlt
jmp
decb
repnz
rcl
fcmovu
cli
into
out
leave
dec
cmp
xlat
aam
call
mov
lret
cld
in
aad
rol
aaa
xlat
sti
cmp
shl
shl
ret
shl
repnz
loope
loope
loopne
loop
hlt
out
cmp
lret
cmp
ror
iret
fcmovbe
ret
in
lret
cmp
out
mov
aam
xor
out
enter
ds
roll
dec
test
out
repz
add
jmp
fcom
xlat
push
xlat
outsb
shrb
pop
jle
aas
add
loope
cmp
out
ljmp
fdivrl
aad
xchg
xchg
int3
xchg
jmp
lock
aam
sar
jmp
rcr
ffree
hlt
std
dec
fxch
rolb
ss
in
repnz
in
ror
lock
neg
cli
fld
rol
call
std
leave
decb
loop
fcom
ds
idivl
and
ret
jecxz
testb
jmp
int
xor
cmp
rcl
cmp
cmp
test
jecxz
hlt
call
jmp
sti
repnz
stc
out
cmp
adc
not
test
repz
ret
sbb
and
nop
hlt
shr
rcl
cmp
clc
cli
fprem
ss
addb
fcmovb
in
lea
in
int3
icebp
out
cld
xor
test
ffree
or
cli
ljmp
out
fdivr
out
hlt
int3
sbb
cmp
mul
not
loop
lret
rolb
shl
fmul
repnz
icebp
rcl
cld
int
cli
xlat
les
fdiv
fstp
icebp
out
repz
loope
icebp
out
std
cmp
cmp
lock
mov
xchg
cli
in
out
in
icebp
xchg
aam
call
clc
shl
rol
xlat
clc
cmp
addl
fcmovbe
sti
into
loop
out
out
cmc
shl
xlat
cs
jmp
fdiv
in
ret
inc
loopne
ret
hlt
aam
jmp
xchg
rolb
cmp
lock
ss
cmp
jecxz
aam
iret
sarl
test
ljmp
in
test
xor
rcr
sti
leave
push
shr
not
fcomip
ljmp
in
stc
xchg
adc
mov
fldln2
jecxz
xor
icebp
shr
cmp
fucomp
loop
ret
mul
adc
mov
clc
lock
xchg
rcl
div
jecxz
loop
rcl
sti
stc
fcomip
aas
shl
inc
cmc
mov
xchg
loop
cmc
orl
jmp
fdivp
iret
cld
lock
sbb
mov
mov
filds
in
ffreep
in
aam
in
repz
sti
ror
loopne
fiadds
std
out
std
xchg
out
shl
not
ljmp
leave
rcr
cmp
cmc
mul
cmp
fucomp
mov
aam
out
xor
jecxz
leave
fcmovne
cmc
repnz
fdivrs
in
jmp
cld
imul
cli
mov
repz
jmp
xor
fcmovnbe
fabs
sti
sti
enter
int3
fstp
xchg
int
out
leave
leave
lret
enter
loopne
lock
in
out
div
enter
mov
mov
fisttps
lret
enter
loope
loopne
ds
sti
in
in
fstp
out
mov
bnd
ret
repz
aam
into
xlat
loope
filds
out
out
xchg
mov
aam
cli
neg
ror
repz
ffree
rol
sti
sti
in
out
int
int3
int3
in
fmulp
incb
out
shlb
cld
in
into
loopne
repnz
fcmovnbe
loop
clc
fincstp
test
rcl
out
mov
lock
sti
aaa
fcom
xor
dec
aam
jecxz
jmp
call
cmc
ds
enter
lock
iret
xor
out
lret
cmp
xor
cli
fistpll
sar
ret
fnstsw
out
mov
int3
int
fdivrp
ljmp
jmp
lret
xor
shl
and
call
cld
out
int
out
lock
icebp
aaa
ljmp
ljmp
ror
xchg
enter
enter
sti
xchg
iret
cmc
lock
in
fnstsw
jmp
sti
aam
stc
loopne
out
mov
mov
ror
lret
enter
aad
cld
repnz
icebp
cmp
call
hlt
fmulp
in
aaa
out
stc
not
cmp
into
cmp
ds
mov
ljmp
sarl
rorb
test
add
push
push
mov
jmp
rcl
rol
rol
rcl
mov
or
aas
add
mov
xor
loop
xlat
call
loopne
clc
stc
filds
xchg
xor
aam
jmp
sti
fmul
hlt
ds
roll
in
xchg
xchg
ljmp
out
cmp
lret
out
aaa
repnz
jecxz
aam
fsubrp
jmp
lea
mov
lret
subb
icebp
int3
out
in
out
shr
adc
fiaddl
leave
std
xchg
iret
nop
in
mov
fldln2
shl
lret
in
cmp
jmp
int
call
movb
rorb
cli
ljmp
lret
lret
cmp
aam
fdiv
loopne
mov
xchg
lea
jmp
cmp
in
fdiv
adc
jecxz
call
mov
mov
pushl
ror
loop
in
out
lret
shl
and
aas
fcmovnu
leave
fucomp
cli
cld
out
loop
test
mov
loop
in
shl
jmp
ds
fxch
test
mov
cmp
out
lock
sti
aaa
jmp
int
ret
ljmp
hlt
in
xchg
int3
rcr
enter
cmp
shl
icebp
shl
sbb
rorb
int
divb
in
aam
cmp
int
aas
clc
cld
cld
test
enter
sub
ror
call
out
xlat
jmp
icebp
dec
cmp
mov
in
lock
nop
xchg
sub
icebp
enter
cli
aas
cli
cmc
icebp
fadd
fsincos
jecxz
and
out
mov
xchg
int
jmp
call
icebp
sti
sti
cmp
ret
ror
adc
sar
incl
shl
lret
test
jmp
cli
cld
ret
rcl
ret
xchg
int3
shr
ss
ljmp
out
in
adc
test
test
lret
in
lea
nop
dec
ret
stc
xor
out
not
fcmovbe
rcl
std
xlat
in
stc
fdivrp
in
in
loopne
jecxz
out
sti
aam
into
out
jmp
out
aaa
cmp
int
cmp
lret
sub
cld
xchg
iret
xchg
lea
int3
roll
aam
sar
rol
fucomp
call
fcomi
int
xor
out
xlat
fsubr
jecxz
cmp
shl
not
std
sti
in
mov
shr
repnz
loop
out
sub
out
shl
cli
shl
into
into
sti
loope
mov
cld
cmp
push
mov
adc
cmp
ljmp
out
ror
aas
fsub
cld
testl
in
ret
aam
ljmp
test
fmuls
and
lock
in
aam
sti
aad
cmp
shl
fiadds
cli
test
lea
in
cmp
ljmp
cmp
loopne
out
rorl
sub
xor
iret
lock
in
xchg
loope
test
loope
test
not
xor
ror
out
std
out
stc
loopne
and
jecxz
std
test
fucomp
ret
xor
fcmovu
rcr
xor
fnstcw
fdivrp
int3
and
clc
loopne
repz
call
std
xor
jecxz
lock
sarl
cmp
idivb
ds
loopne
cmc
cld
in
mul
mov
test
xchg
loop
int3
xor
out
sti
xor
into
jmp
aam
fcmovnb
aas
shl
call
in
fdivrp
out
clc
jmp
fdivl
ds
fadd
loopne
ret
neg
int3
std
xchg
out
xlat
loope
xor
jmp
ds
jmp
aas
cli
out
leave
out
mov
xor
loop
repnz
idivb
jmp
cli
hlt
aas
enter
ret
mov
fisttpl
lock
xor
inc
xchg
add
add
movzwl
mov
mov
movzwl
xor
add
jmp
into
mov
fmul
iret
fucomp
sub
inc
ficomps
xchg
and
jle
add
in
xor
sti
rcl
ds
cmpl
stc
jmp
loop
loop
shr
lret
cmc
in
leave
loop
ss
xor
testb
ret
fucom
stc
iret
int3
test
aaa
fsqrt
into
in
not
fstp
in
iret
fsub
cmp
les
sbb
test
xchg
mov
mov
into
ret
xor
icebp
jmp
shr
ds
aad
test
test
ljmp
imul
ret
int3
fidivl
int3
std
sar
fdiv
sti
not
out
rcl
jecxz
loope
clc
jecxz
xchg
loopne
out
jecxz
aam
jecxz
cmp
sti
fnstenv
cmp
cmp
fisttpll
dec
shl
icebp
std
and
repnz
cmp
in
adc
xchg
xor
sbb
repnz
in
into
ret
jmp
iret
leave
leave
sarb
jecxz
fsubr
mov
or
out
enter
fsubr
xchg
ret
cmp
stc
out
fprem1
ss
cmp
lock
ss
sti
out
call
fldl
mov
leave
sub
repz
hlt
aaa
cld
cli
ds
in
sarl
and
and
fadd
or
xor
cmc
fidivrl
leave
cmp
loope
xor
fiadds
test
mov
ljmp
leave
enter
std
out
cld
lret
clc
shl
loope
repnz
lea
shl
in
not
xor
xor
out
in
lock
std
cld
icebp
cmp
shl
lret
ret
imul
mov
lock
jmp
fcmovnbe
ss
shl
rcl
and
xlat
mov
nop
xchg
shl
shl
xor
sarl
cmp
fld
and
rcr
sub
xchg
int3
std
aam
loope
loop
enter
cmp
rcr
aaa
hlt
std
fildl
mov
sub
mov
adc
loop
out
out
ljmp
cmp
sar
xor
std
addb
jmp
out
repnz
int
hlt
loop
idiv
out
jmp
orb
nop
call
divl
div
lret
sarl
fsqrt
rcl
rcl
filds
into
lret
repz
rcr
hlt
out
xor
clc
cmp
out
aad
repz
or
loop
test
lock
icebp
les
int3
aaa
lock
stc
xor
ret
fadd
out
jmp
leave
fucomip
mov
iret
sarb
aam
fdivrp
xor
loopne
aad
ret
out
loop
repz
out
into
out
in
cmp
into
cli
xchg
filds
int3
loopne
ljmp
jmp
movl
sar
rorb
xor
jmp
hlt
in
fcmove
cmp
into
sti
aaa
repz
shl
cmc
out
xchg
enter
jmp
divb
aaa
icebp
sti
sbb
mov
lret
clc
test
lock
xor
cmc
xor
fldlg2
ret
testl
ljmp
xor
sarb
rcl
aas
clc
testl
lret
xchg
int3
ror
repz
shl
hlt
sbb
hlt
cli
mov
fisttpl
addl
out
shl
in
fucomi
cmp
ret
ret
mov
int3
bnd
aaa
lret
lret
jmp
adc
repnz
fdivr
fucompp
out
fldlg2
nop
out
mov
vpmuludq
aaa
xor
cmp
int3
ret
out
stc
enter
loope
out
test
xor
jecxz
ss
out
into
rcl
addl
fcmovnu
stc
leave
xchg
ljmp
ret
aad
ror
aad
cld
sar
ds
mov
mov
mov
sbb
in
test
rorl
cmp
inc
cmp
jne
pop
jmp
ret
xlat
rcl
lret
xchg
cmp
jle
add
jmp
cmp
shr
icebp
shl
loope
aam
roll
test
fsubrp
fsubrp
div
cmc
hlt
cmp
repz
clc
iret
stc
cli
aam
xlat
std
test
orl
repnz
in
xlat
repz
iret
shl
jmp
test
fcmovnb
addl
decb
lock
cmc
ss
fnsave
rcr
test
movb
out
mov
call
int
aad
lret
frndint
loop
rcr
loop
cli
imul
lret
stc
out
iret
call
lret
shll
sar
loopne
lret
jecxz
fsubp
fcmovbe
loope
mov
xchg
out
xchg
out
loopne
into
leave
shlb
xor
sar
cmp
lock
cli
add
xchg
rcr
jmp
out
fucomi
test
loope
fsubrp
cmp
xlat
xlat
neg
stc
adc
lock
fadd
mov
lret
jmp
rol
cmp
cli
cmc
cli
rcr
jmp
into
icebp
sti
xlat
loopne
test
mov
xchg
xchg
xchg
mul
xor
xor
out
iret
lock
not
ret
mov
repz
test
fiadds
mov
in
ljmp
aam
fldl
fcom
test
test
fxch
ljmp
lock
sti
lock
imul
out
xor
std
ljmp
orb
fptan
lret
int
fcmovne
aas
lret
cmp
sti
test
mov
test
repnz
out
loope
in
les
in
std
int3
out
lret
test
stc
int
call
cmp
repnz
ds
cmc
cmp
div
lret
loope
out
adcb
xor
shr
fmul
jmp
hlt
cmp
call
in
decb
test
std
jmp
std
cmp
fdecstp
stc
rcl
xchg
in
sub
xlat
loopne
xchg
jmp
repz
jmp
div
cmp
fucomp
iret
cmp
jecxz
jmp
int3
loope
out
iret
repnz
std
fsubrp
lret
rcl
sar
test
in
clc
mov
test
icebp
in
jmp
out
cmc
test
leave
cmp
int
idiv
test
sbb
xacquire
mul
ljmp
fninit
lock
mov
loop
fxch
loopne
mov
test
sub
not
cld
jmp
icebp
into
xor
xor
lret
cli
lock
orb
xor
loope
ret
roll
mov
int
ret
in
cld
out
xchg
out
xor
iret
cld
aaa
cld
and
adc
mov
mov
loope
loope
mov
repz
fxch
ljmp
iret
in
cli
cmp
sbb
lret
std
mov
xor
stc
fnsave
lret
ret
cmp
out
fadd
mov
cmp
repz
lock
repnz
cmp
leave
cmp
stc
ret
out
mov
xor
nop
in
mov
in
cmp
fmul
ljmp
fcmovu
aam
out
call
fstl
repnz
cmc
out
cmp
cmp
icebp
lret
mul
shr
sarb
shr
icebp
xor
loopne
sbb
jecxz
hlt
ffreep
cld
fisttpl
iret
std
fst
xor
lock
loopne
cld
ret
repz
mov
loopne
testb
mov
mov
not
out
shl
clc
hlt
out
iret
fsub
ret
cld
cmp
loope
sbb
jmp
test
aad
leave
xor
lock
ds
mul
iret
addb
mov
mov
fisttps
into
shl
in
icebp
xor
cmc
cmp
cli
mul
neg
in
test
xchg
cmp
inc
clc
jmp
aam
fadd
fstp
pusha
shl
sarl
lret
mov
add
in
aam
jmp
test
cmp
xchg
aad
int3
out
lret
xchg
out
xor
dec
ds
sti
ds
repnz
jmp
fimuls
icebp
in
into
ss
fldz
out
cmp
clc
clc
loop
rcr
fxch
in
xchg
into
mov
into
ljmp
imul
sbb
mov
hlt
ret
add
mov
stc
repnz
loope
adcb
shr
aaa
cmp
cmp
sbb
shl
or
call
test
xchg
aaa
shl
enter
into
call
shr
xor
ret
fisttps
lret
mov
jmp
cmp
cli
fidivl
sub
ret
fidivrl
cld
or
xchg
repnz
xor
out
aam
cmp
int3
cmc
rcr
mov
jmp
mov
std
fnstsw
lret
test
sarl
shl
aas
clc
sbb
mov
movb
mov
fdivrs
cmp
fsincos
iret
ss
out
cmc
test
cmp
ljmp
test
call
sub
xor
fidivrl
ret
fld
hlt
cmc
jecxz
aad
sti
mov
sub
repz
hlt
sub
loope
xor
out
ljmp
rcl
loop
in
call
lea
vpminub
ss
out
clc
aas
ror
jecxz
loope
stc
jmp
loop
flds
out
xchg
in
divb
not
stc
into
xlat
cmp
sar
iret
shl
cmc
ljmp
leave
iret
icebp
hlt
out
loop
sti
int3
cmp
sti
icebp
ds
cli
cli
sarl
mov
xlat
cld
fmuls
xchg
test
mov
fcmovu
fadds
cmc
xchg
loop
xchg
fucomp
lret
xchg
call
loope
fidivrl
cli
ds
aam
out
sti
loop
adcb
xor
std
call
idivb
loopne
loope
icebp
std
fdivr
sub
mov
cli
shr
hlt
mov
out
jmp
stc
cmp
aas
rcr
mov
std
ret
leave
xchg
xchg
iret
lds
xor
aam
cmp
iret
adc
out
cli
jmp
in
fldl
sub
lret
icebp
enter
jmp
cmp
out
jecxz
out
cmp
out
loope
into
xchg
mov
out
cs
fcomi
out
cmc
fucomp
iret
cmp
sti
ds
jecxz
add
cmp
addl
iret
aam
ljmp
in
fucom
loope
in
jmp
jmp
xchg
cs
out
stc
cmp
xor
clc
shl
test
mov
jecxz
out
cli
sti
jecxz
faddl
not
ss
clc
rcr
cmp
fnsave
loopne
clc
aad
sar
cld
xchg
lret
mov
out
ret
rcl
repz
in
fucomip
sbb
stc
fnstsw
repz
icebp
repz
cmc
test
fsub
addb
call
icebp
enter
test
std
repz
decl
out
leave
xchg
cmc
mov
in
cmp
xlat
in
loope
int
aam
aas
in
fadds
cli
out
int
repnz
fsubr
cmp
xor
repnz
aam
sarb
fsub
xlat
jmp
in
les
cmc
ljmp
or
icebp
ret
test
lock
ljmp
xor
cld
cmc
stc
out
shl
stc
in
testl
das
out
int3
rcl
into
lret
stc
cmc
rcr
testb
lret
jmp
popl
cmp
in
out
shl
stc
ret
cmp
cli
ret
cmc
cli
rorl
out
lret
loope
rcl
sti
int
aad
clc
enter
ss
aam
call
cld
int
xchg
cld
fmulp
test
cmc
cmp
sub
xor
jmp
fcomp
fistps
je
mov
jle
aas
add
fdivr
fmul
neg
cli
into
rcl
fadd
repnz
mov
xchg
fimuls
loop
lock
rcr
cmp
cld
aam
iret
clc
jecxz
aad
call
fisttpl
xor
int3
lret
in
xor
cmp
ret
in
aam
dec
loope
and
fimuls
iret
in
shlb
rcl
aam
fcomp
repz
fiaddl
out
std
jmp
out
out
lret
jmp
ss
stc
sar
hlt
aas
aad
rcl
aam
out
xchg
cli
int3
call
in
call
ljmp
fchs
fiaddl
loope
loope
add
or
icebp
in
lret
xor
shl
into
sti
ror
xlat
jecxz
in
or
in
std
xchg
lret
ss
div
call
int3
test
sar
loopne
fucomi
loope
sub
lret
ffreep
out
ret
cmp
xor
cmpb
cmp
std
out
shl
fmulp
aas
enter
test
in
iret
out
not
aam
xlat
ljmp
xchg
mov
cmp
fmul
leave
enter
mov
shr
sub
in
aam
call
ss
shr
rol
fcmovb
in
mov
ret
out
iret
sar
rol
cmc
jecxz
incl
call
fldl
sub
xlat
lret
in
ljmp
enter
fmul
fucomi
mov
icebp
mov
call
enter
xor
xor
out
shr
jmp
cli
jmp
movb
out
lret
into
cld
cmp
shl
jmp
cmp
leave
loopne
aad
fabs
enter
and
lret
icebp
jmp
repnz
ljmp
rolb
test
xchg
lock
lock
cmp
aaa
cmpl
xchg
lret
stc
dec
xchg
std
fcoml
call
lret
shl
fadd
cld
xchg
repz
std
movl
cmc
clc
xor
icebp
cmp
cmp
out
out
ds
sti
xchg
out
sbb
ret
repnz
push
in
hlt
iret
shl
lock
cli
lret
cli
out
mov
xchg
loop
xor
in
aad
ljmp
aas
xchg
jmp
rclb
in
jecxz
enter
sar
cmc
in
sar
mov
lret
ret
mov
repz
sub
iret
rcl
not
lret
shr
leave
ljmp
lock
mov
int3
repnz
hlt
sub
int
cmp
int3
sti
cld
loop
ret
aas
sbb
ret
enter
ljmp
ljmp
cmc
std
dec
fsubp
cmc
out
rorb
in
ret
loope
int3
xchg
cmp
enter
call
xlat
rcr
cmc
fdivrs
loop
in
lret
in
mov
xchg
mov
leave
in
jmp
call
loopne
jecxz
fldl
xlat
xchg
out
loop
cmc
into
out
ret
rcr
std
std
aas
bnd
sti
rcl
fcmovu
out
imul
fildl
out
fcom
xor
in
cld
out
cmp
rcr
std
jecxz
icebp
addb
mov
clc
jecxz
incl
ljmp
cmp
aad
loop
xchg
mul
std
ljmp
jecxz
aam
cmp
icebp
addb
cmp
rorb
call
nop
out
repz
ss
sti
xor
rol
fdiv
stc
out
mov
mov
ljmp
shr
ss
aad
lret
sti
shr
fiadds
test
mov
iret
lret
hlt
out
cmp
repz
int
cmp
cli
xor
in
stc
call
std
out
mov
into
xlat
xor
add
mov
mov
jmp
iret
aas
aas
ror
rcl
ret
pushf
mov
xorl
add
shr
test
mul
repnz
mov
in
lret
lea
cmc
aaa
int3
aam
cld
out
hlt
int3
xor
repnz
xlat
incl
movl
enter
enter
not
adc
cld
sti
addb
out
loope
mov
loopne
cmp
enter
clc
loope
iret
fcomp
test
lret
jmp
lret
in
loope
shlb
out
repz
shl
repnz
fld
fdivrp
fstl
call
lock
neg
xor
not
iret
faddp
sti
decl
cmp
iret
xchg
into
xchg
icebp
rol
cld
leave
jmp
lret
adc
ret
iret
neg
aad
jecxz
in
fadds
in
jmp
repz
fidivrl
xor
sar
ret
jecxz
idiv
test
xlat
enter
mov
divl
xor
out
call
in
ret
filds
faddl
call
call
fmul
fiadds
fucom
test
testb
roll
icebp
in
lock
fstp
repnz
cmp
fisttpll
shr
loop
out
cmp
cmp
int3
fcomi
repnz
in
adc
in
inc
lret
rorl
ss
repz
in
cmp
out
xlat
in
xlat
int3
fisttpl
xor
shr
shll
aaa
fcom
xor
repz
rcl
std
testb
jmp
int3
mov
loopne
lret
jmp
jmp
hlt
stc
and
vpsllq
cmp
lret
fucomp
int
jmp
xchg
hlt
in
idivb
out
into
cmp
roll
cmpb
out
fsubp
ljmp
out
jmp
rcr
enter
and
div
enter
aad
clc
movl
stc
xor
into
cli
repz
stc
ret
stc
xchg
jmp
ret
xchg
call
sub
fptan
aad
sti
std
int
fcomi
sar
in
out
orl
ljmp
iret
out
cmp
out
repz
fcmovne
inc
ret
aas
ret
leave
fimull
out
loop
xor
fstpt
lret
aam
cli
rorl
clc
fadds
fiadds
out
iret
leave
aas
hlt
adc
loopne
test
jmp
mov
xchg
shl
xlat
in
xor
adc
loop
jecxz
cmp
jmp
lds
out
leave
xor
sub
xor
test
int3
int
enter
imul
mov
sar
out
xlat
in
out
cmp
shr
icebp
xor
in
lret
test
in
test
sar
jecxz
fmuls
call
xor
xor
jmp
sarb
cmp
sar
vphsubbw
cmp
lret
sar
fsubrp
out
cmp
loop
mul
fucomp
ljmp
repnz
lret
repz
int
lock
sar
ss
loop
xchg
clc
out
enter
lret
jecxz
ror
imul
xor
xlat
fcmovnu
lret
cmp
out
inc
sti
loope
mov
idiv
call
ror
shl
lret
cld
stc
cmp
repnz
fdivrs
icebp
fprem1
jmp
enter
fucomip
ror
ror
in
xor
xlat
ljmp
sub
clc
fistpll
cld
imul
call
in
or
out
test
lret
std
ds
int3
cmp
out
icebp
xchg
jmp
cld
mov
call
icebp
out
lret
loop
cmp
and
out
xchg
in
rorl
lock
vpsubw
lock
cmp
aas
lock
mov
mov
fmul
shr
lock
lock
xor
jmp
int3
rol
aad
pop
pop
movsb
or
mov
out
jle
aas
add
ds
int3
shl
fnstsw
fimuls
int3
loopne
in
in
jmp
out
xor
cld
add
cmp
ljmp
int
in
int
out
ret
sarb
cmp
loopne
cli
ror
faddp
enter
fcmovne
jmp
rcl
vpmullw
out
aaa
ljmp
in
xchg
out
stc
in
out
in
cli
cmp
aaa
xor
test
std
mov
mov
int3
ret
test
xchg
ljmp
ss
out
cmp
neg
shl
aam
fcos
jmp
or
jmp
iret
aad
jmp
vaddsubps
leave
icebp
aad
faddp
fsubp
shl
test
fsubrp
popl
or
vpmulhw
fucomp
lret
iret
sti
sar
stc
iret
clc
ljmp
test
lock
lret
xchg
xbegin
lock
into
sar
fnstcw
cld
call
aam
imul
jecxz
out
in
push
loop
cmc
sub
hlt
sti
shll
sar
sti
fcom
fcmovnb
std
addb
out
iret
shl
lret
cli
out
in
xor
fdivr
cmp
aam
shl
roll
sbb
cmc
ljmp
icebp
ror
int3
lret
leave
fistpll
repz
loopne
out
ret
clc
into
loope
lret
fisttpll
hlt
cmp
cmpl
in
ret
neg
leave
ret
jecxz
mov
out
test
fcom
fld
int
cmp
cmc
clc
clc
out
sar
hlt
in
fmull
mov
xchg
repz
xlat
sarb
call
fdivr
into
fsubr
out
icebp
xchg
adc
ret
lret
test
in
nop
in
nop
ror
das
shl
cmp
repnz
in
cmp
clc
shl
fsub
shl
sub
aad
loopne
xchg
loope
repnz
aaa
icebp
fnstsw
ljmp
adc
ljmp
ret
iret
decb
in
sub
cmp
hlt
jecxz
std
stc
out
and
mov
orb
out
ljmp
fadd
and
test
orb
xchg
out
int
shr
shl
out
out
test
loop
aas
hlt
cli
loope
fldl
fisttpl
ss
xor
xor
sar
or
xlat
incb
loopne
loopne
sub
xor
sarl
icebp
sar
in
fbstp
stc
cld
repz
rcr
out
jmp
sti
xchg
out
jecxz
ret
lret
enter
cld
aas
sti
cld
test
mov
loop
orb
lock
hlt
out
mul
xor
leave
out
aaa
inc
out
rol
fyl2x
enter
stc
xlat
jmp
adc
mov
imul
iret
ss
shll
hlt
out
cmc
mul
int
repz
mov
out
out
test
shlb
int
fmulp
ss
into
mov
jecxz
in
cld
test
mov
stc
hlt
stc
xor
lret
loopne
rol
xlat
shl
loop
test
movl
xor
icebp
jmp
fucomip
aam
out
clc
mov
div
out
in
mov
fists
aaa
out
cld
fnstenv
test
cmp
loop
out
mul
rol
ljmp
incl
out
ror
cmp
jecxz
in
out
xchg
test
ret
call
mov
lret
int3
out
ret
icebp
out
out
cmp
adc
ret
fiadds
fldl2e
lds
jmp
ss
cmp
fscale
ret
fld
stc
sti
sub
enter
stc
nop
xchg
shr
aam
stc
cmp
cmp
aam
into
cld
addl
sub
mov
sub
leave
lock
lret
jecxz
ret
cmp
lds
sub
xchg
mov
repz
repz
icebp
hlt
icebp
xor
add
mov
mov
mov
jmp
ret
into
sarl
rol
rcl
ja
cmp
jg
aas
add
xor
fiaddl
ljmp
xchg
xchg
fsubrp
aad
ret
hlt
xor
jmp
cmp
sti
add
in
ret
inc
cld
test
test
cmp
mov
aam
not
rol
leave
cli
repnz
cmp
xchg
in
test
lock
loop
out
sub
in
fucom
sub
cld
ljmp
cld
int
fimuls
int3
out
out
fstp
icebp
repnz
in
jmp
jmp
sbb
int
int3
xor
leave
sti
cmp
cli
ljmp
hlt
div
sbb
cli
hlt
in
ljmp
repz
clc
ljmp
cmp
sti
icebp
aam
mov
addb
test
rol
shr
iret
cmp
sbb
fdivrs
cmc
jecxz
clc
xabort
ljmp
into
rcl
xlat
jecxz
stc
in
sar
leave
rcl
repnz
jmp
ret
test
fcomi
stc
int3
int
jmp
loopne
int
lret
out
inc
out
ror
cmp
sub
ljmp
mov
iret
repnz
into
cmp
cmp
cmc
fdivr
ds
clc
cmp
sti
aas
mov
mov
fsubrp
incb
out
icebp
ljmp
stc
fsubp
flds
sub
test
in
in
iret
vpsrlq
rcl
std
loopne
aam
loopne
xlat
jecxz
ds
mov
xchg
lret
call
ret
aad
into
repnz
lock
loop
cmp
aaa
shl
aam
jmp
fstp
jmp
leave
rcr
jecxz
loope
cs
xor
shl
das
int
in
jecxz
les
addb
sub
xor
cmp
cmp
in
fidivl
cmp
jecxz
jmp
add
mov
clc
shll
into
fidivrl
loopne
jmp
fnop
hlt
jmp
fucomi
int3
fst
mov
int
aad
fcmovnb
ss
iret
cmp
cmp
test
loopne
testl
test
cmp
clc
ljmp
loope
out
out
hlt
xlat
sti
out
in
sti
jecxz
std
mov
in
leave
xor
shr
out
aaa
into
cmp
ds
cmp
mov
rclb
hlt
xor
cmp
cmp
in
jmp
sbb
jmp
int3
icebp
into
rol
jmp
xlat
lret
icebp
ds
aad
leave
fildl
out
in
mov
sbb
repnz
shr
divl
cmp
int
cmp
ret
decl
fcmovu
fisttpl
cmc
test
mul
test
leave
cli
loopne
lock
ds
clc
ljmp
xchg
in
out
test
cmp
not
in
fmulp
stc
cmp
fiadds
mov
xchg
lock
out
shl
std
aaa
rcr
fdivs
in
jecxz
cmpl
xchg
lret
test
iret
in
jmp
hlt
cmp
fadds
cli
add
ret
nop
xchg
std
xchg
out
into
in
in
cmc
stc
call
cmp
cli
rolb
leave
fcmovb
leave
icebp
or
imul
jmp
std
fidivrs
neg
cmc
ret
mov
int
orl
xor
sub
in
in
imul
aad
stc
lock
test
roll
fcmovu
cld
cld
loope
and
enter
into
xlat
sbb
aas
lock
repz
loop
mov
nop
into
out
div
fsubrs
cli
jmp
xlat
loop
std
lret
test
jmp
rcl
iret
shlb
in
stc
jmp
repnz
adc
shl
idiv
test
call
clc
fcomp
loop
icebp
rcl
sub
stc
aaa
cmp
int
aaa
std
inc
roll
test
out
loop
jecxz
loop
repz
call
hlt
cmp
iret
lret
mov
cmp
je
mov
mov
jmp
leave
aad
movsb
inc
jb
inc
xchg
jle
add
leave
into
cmc
in
aad
aad
mov
xchg
hlt
fsubrp
jmp
out
in
ljmp
cmpb
fsub
aam
and
call
sti
lret
repnz
lret
shl
imul
cmp
std
in
aam
cmc
in
testl
ljmp
cmp
rcl
fucom
test
icebp
orb
cmp
xor
repnz
sti
icebp
shr
shl
jmp
jecxz
nop
test
out
rcll
sub
cmp
idivl
jmp
out
loopne
xchg
fisttpll
xchg
xchg
aam
out
cmp
xor
xor
xor
testl
mov
into
xchg
in
and
adcl
lock
into
fnsave
xor
ds
fmul
fsubr
fsub
xchg
xchg
icebp
mov
aam
out
cmc
xlat
cmc
iret
lock
shl
out
hlt
ret
fsubp
mov
mov
repz
into
mov
iret
cmp
repnz
int3
addb
and
xchg
out
iret
leave
xchg
iret
in
idivb
cld
in
cmp
push
loop
fcmovb
fiaddl
lret
loope
jmp
xchg
call
leave
out
cmp
aas
fdivl
loopne
loope
ret
cmc
cmp
stc
aad
enter
addl
in
rcr
loope
jmp
shr
std
mul
jmp
mov
std
aam
call
cmp
out
cmp
aad
xlat
into
fildl
cmc
mov
ret
fmull
stc
icebp
idivb
cmp
fcomip
cmp
not
test
leave
xchg
addb
lock
into
in
leave
ljmp
cld
sar
xchg
testb
fucomi
cld
mov
ljmp
out
icebp
idivb
hlt
or
inc
leave
ret
fucomp
clc
mov
divb
lret
cmp
jmp
xor
aam
cmp
aad
iret
test
into
hlt
loopne
in
out
ret
xor
rcl
fnstcw
not
in
testl
mov
out
in
filds
ds
fsubr
addl
mov
jmp
out
repz
test
leave
sarb
aaa
fdivp
incb
hlt
xlat
test
lret
incb
jmp
int
rcr
cmc
shl
int
stc
icebp
cmp
xchg
dec
std
fucomip
cmc
stc
leave
rol
lret
aam
imul
shl
std
cld
loopne
test
mov
clc
out
clc
into
fucom
cmp
aad
aad
lret
fsubrp
sar
rcl
fcomp
mul
fcmove
leave
stc
out
test
int
in
int3
shll
in
xor
sarl
cmp
ret
aas
fstp
repz
addb
adcl
fsub
dec
neg
aas
xchg
test
in
loopne
cli
xchg
jecxz
repz
loope
out
cmc
icebp
shr
xlat
xor
shl
fdivp
xchg
ljmp
loope
xor
int
ror
cli
repnz
cld
fcmove
mov
xchg
xchg
repnz
jecxz
repz
xor
sti
ds
rcl
mov
fsubrp
lea
hlt
xchg
leave
repnz
cli
cmp
fcmovu
aaa
cld
aas
and
std
in
out
jmp
sti
int3
repz
cmp
sti
cld
cmp
flds
in
addl
clc
cmp
aaa
xor
in
ret
aas
ret
aam
fcmovnb
ret
xlat
xchg
enter
jecxz
call
cli
xor
sti
clc
ss
repnz
and
jmp
out
and
filds
xor
jmp
cmpb
in
fabs
cli
xchg
enter
xchg
flds
leave
jecxz
ss
lret
int3
icebp
cmc
cli
mov
cmp
jne
mov
jmp
ret
into
aam
aad
fst
stc
hlt
stos
xchg
imulb
xor
or
aas
add
iret
rcr
addl
sti
cld
fdivrp
out
ljmp
cld
fdiv
lret
loopne
loope
hlt
repnz
sti
ljmp
iret
in
enter
aaa
in
fmul
leave
hlt
lret
sti
repnz
fucom
int
in
leave
jmp
in
repz
sar
ret
jecxz
aas
lret
jmp
fcmovu
ffree
ret
lret
leave
fucompp
xchg
repz
in
icebp
int3
leave
out
repnz
out
sarb
repnz
in
fucomp
lret
out
xlat
nop
fdivp
jecxz
into
leave
out
in
into
fdivr
clc
aad
int
jecxz
out
rcr
fcomi
mov
in
in
in
adcb
in
les
fdiv
shl
not
cmp
aam
sti
mov
ret
fucomp
fstp
lock
xlat
repz
cld
xlat
rol
aam
incl
enter
fsub
addb
repnz
into
cli
enter
std
xlat
loop
fsubr
and
nop
mov
lret
xlat
lret
int
fdivrp
lret
int3
sar
in
out
cmc
aad
lret
jecxz
lret
loope
int
xor
fcmovbe
lock
sti
loopne
testl
fcmove
out
cli
fucomi
mov
aaa
shr
jmp
fnstenv
lret
fcmovbe
stc
test
sbb
clc
call
loope
sar
in
in
shl
jmp
ljmp
test
call
cmp
lret
fcmovu
ret
mov
cmp
in
cld
lock
ds
repnz
fld
cmp
loop
in
iret
incl
in
ljmp
repz
loope
in
cmp
aam
std
cli
clc
out
int3
and
sub
xchg
xor
icebp
aam
hlt
cmc
std
repnz
loop
lock
inc
std
loope
jecxz
loop
mov
clc
aaa
aaa
lret
lret
cli
jmp
cmc
fst
cmc
test
fst
cld
mov
in
icebp
out
mov
ror
clc
lret
das
cmc
xor
test
fucom
test
loop
mov
xchg
mov
int
loope
xor
out
sti
rcr
lock
sti
jmp
cmp
sbb
cmc
cmp
lret
lock
int3
aad
in
icebp
out
fcmovnu
cli
rolb
faddp
sbb
into
out
iret
into
xrelease
ret
repz
ss
aas
int
clc
cmp
rcl
out
cld
jmp
lret
xchg
mul
out
cmp
cmp
addl
icebp
nop
std
lret
mov
aaa
cld
lret
shl
cmc
out
cmp
and
int
leave
jmp
dec
divl
out
xlat
hlt
ss
dec
cmc
rol
ret
cmp
not
clc
fcmovb
ret
lock
repnz
aad
sub
into
fsub
shl
cmp
ds
fst
test
test
in
mov
xor
sar
into
int
ret
sti
out
loope
clc
in
leave
enter
leave
out
nop
xchg
xor
lock
aam
call
not
cmp
test
cld
orl
xor
in
rol
aad
aad
dec
in
xchg
into
int
hlt
loopne
ss
iret
cmpb
shr
aam
xchg
shl
out
xchg
int3
int3
iret
loope
jecxz
mov
loope
sti
shr
xor
clc
jmp
mul
call
ret
shl
jmp
sti
leave
jecxz
ljmp
fsubr
out
fcmovnu
loopne
imul
adc
test
fistl
lock
aad
enter
xor
fstp
adc
fincstp
in
int
lret
filds
clc
neg
or
shl
not
cmp
ljmp
lock
clc
shl
aad
xor
filds
aas
icebp
out
test
xchg
lock
cmc
aaa
cli
leave
enter
sti
fst
mov
movsbl
jmp
aam
aad
fstp
movsb
ficomps
push
ljmp
jle
roll
loop
mov
jmp
cmc
cs
xor
icebp
dec
iret
clc
aad
fadd
ret
cmp
test
enter
adcl
xor
ljmp
out
iret
stc
rcl
ret
fimull
ljmp
repz
xlat
repnz
dec
cli
out
cmp
cli
cmp
lret
loope
test
out
ret
fcmove
hlt
xor
xor
in
out
lret
fnstsw
fdivrl
cmc
testl
iret
aaa
lret
xlat
in
imul
cmp
cmp
fcmovb
mov
movb
mov
rcll
out
enter
aam
sbb
fadd
repz
call
leave
lock
rcl
xchg
in
int3
xor
cld
hlt
fcmovnbe
stc
in
cmp
icebp
repz
loope
not
in
clc
leave
lea
ret
rcl
xlat
fdivrl
enter
shr
aas
std
idiv
enter
ljmp
xor
cmc
imul
aam
leave
cmp
sar
xlat
in
cld
loopne
call
in
xchg
iret
cmp
out
fdiv
ds
cmp
test
neg
in
xchg
loop
call
mov
call
rcr
shr
cmc
in
rcl
lret
fadd
icebp
ffreep
jmp
in
xor
xor
cmp
testb
fisttpl
mov
int3
jecxz
hlt
mul
out
xlat
repnz
lret
xlat
fmul
out
repz
icebp
inc
mov
cli
decl
iret
mov
cmp
leave
idivl
sar
test
hlt
sti
and
clc
in
fucom
test
ss
neg
into
test
cmp
shl
repz
neg
fsubr
inc
lock
xchg
in
lret
out
call
stc
repnz
addb
cmpb
jmp
in
jmp
rorb
sti
clc
out
fcmovne
cmp
out
enter
ljmp
mov
sti
lock
jmp
clc
loope
xchg
sar
out
repz
vphsubwd
fmulp
repnz
cmp
hlt
icebp
shl
icebp
cmp
aad
roll
lret
enter
in
loop
enter
repz
repz
int3
rcr
std
and
fld1
rorb
mov
loop
call
clc
sti
cmp
repnz
loopne
hlt
mov
in
out
incl
rol
repnz
idiv
shr
cmp
rcl
into
cmp
aad
mov
std
sbb
leave
out
xchg
shlb
ljmp
stc
icebp
shl
stc
div
hlt
out
cli
sub
int
int3
mov
leave
bnd
ljmp
loop
rolb
hlt
fdivp
and
xchg
loopne
ljmp
repz
out
idivb
shr
cmp
cli
aas
rcl
out
in
std
in
ffree
xchg
cmp
into
cmp
aad
idivl
shl
jmp
out
cld
leave
repz
fdivp
jmp
out
ljmp
aam
fnstsw
mov
cli
lret
in
iret
fucom
jecxz
loop
shl
fcmovne
xor
clc
in
cmp
test
xchg
stc
out
movl
fdivs
out
sarb
fnclex
fstp
out
in
out
jmp
leave
xchg
in
in
shl
loop
jmp
leave
std
rcl
repz
ret
rol
aad
mov
xchg
or
xchg
shr
xor
xor
cmp
inc
cld
in
icebp
ret
lock
aad
out
fcmovnu
add
sti
lock
iret
enter
lret
iret
int
ljmp
out
fcmovnbe
in
lret
ljmp
xchg
jmp
iret
out
cld
aad
cld
lock
stc
cmp
rcl
repz
xchg
mov
lret
out
in
xor
mul
repz
jmp
xor
jmp
ret
lret
enter
int
cltd
movsb
imul
jp
mov
stos
adc
aas
add
cmp
xchg
loopne
ret
decl
mov
in
out
lock
shl
sar
int
ds
filds
jmp
out
icebp
shl
call
stc
leave
xor
rcr
cmp
std
rolb
xchg
mov
xchg
mov
out
cmp
lret
cmp
out
hlt
xor
fmul
loopne
out
lock
vpsllw
in
icebp
jmp
out
repz
call
out
out
sti
jmp
ljmp
repnz
aas
ror
icebp
test
xchg
fld
sti
stc
mov
mov
repnz
rorb
xor
xlat
out
xor
xor
and
icebp
div
cli
clc
out
nop
out
lret
out
fst
xor
jecxz
out
jmp
repnz
sti
loopne
xor
div
fcmovb
icebp
call
sub
out
aaa
int3
rcr
fcomi
in
lret
loopne
rcl
icebp
cmc
lret
int3
cld
shl
lret
in
repz
shll
out
stc
in
cmp
hlt
cmp
cmp
cmp
xlat
filds
loope
int3
shl
sar
cmc
fcmovnu
fcomi
into
enter
ret
fiadds
jmp
cli
fisttpl
xor
jmp
cld
fcmovne
in
aaa
fcmovnb
testb
rorl
mov
mov
std
out
sarb
int3
cli
cld
cmc
clc
loopne
aas
ret
loopne
ret
test
hlt
xchg
enter
fisttps
shll
in
in
jmp
stc
call
ss
test
mov
mov
into
shr
fmulp
int
shr
cmp
xor
in
fstp
aas
cmp
call
mov
nop
mov
jecxz
fcomip
clc
ss
aad
cmp
xor
xchg
mov
fadd
xchg
repnz
int3
ss
out
cmp
cmp
loopne
clc
repnz
loopne
sti
into
cli
call
in
repz
repnz
das
fucomi
in
cli
cmp
fxch
cmp
call
stc
decb
in
icebp
in
clc
xor
loopne
cli
in
xlat
clc
jmp
out
ficoml
out
in
leave
cmc
xor
mov
iret
repz
hlt
out
ds
decb
into
in
shr
aad
sarl
ror
ljmp
repz
cmc
leave
mov
in
mov
fidivl
in
cmp
into
aad
int
and
out
flds
out
mov
addb
in
jmp
loop
loopne
hlt
fisttps
fucomp
out
xchg
rcl
xchg
xor
stc
sarb
clc
loopne
ret
mov
ret
fimull
cmc
in
sub
in
out
not
jmp
bnd
hlt
hlt
cmp
fcmovu
and
aad
mov
dec
in
in
clc
int
fcom
icebp
int3
cmc
cmp
test
cmp
fdivr
cli
filds
sti
lret
xor
lret
fdivs
icebp
jmp
les
fdiv
div
fcmovnbe
icebp
iret
in
jmp
loope
cmp
jmp
cld
add
sarb
ret
ret
cld
sti
mov
ljmp
ror
hlt
xor
test
loope
aam
rcl
std
iret
roll
fucomi
out
jmp
xlat
in
std
das
out
ror
stc
cmp
ret
shl
fadd
loop
test
xchg
fcomi
into
sub
cmc
cld
enter
aam
in
cmc
fsubp
jmp
xchg
mov
jmp
sbb
in
jecxz
lret
aaa
aad
in
into
loopne
loop
fucom
ret
movl
in
bnd
enter
lock
rcl
out
cmp
cmp
cli
clc
in
cli
fsub
clc
loope
xchg
std
out
in
out
ss
cmp
loopne
in
xlat
cmp
jecxz
fsubr
in
ret
fabs
jecxz
mov
jmp
aam
xor
fyl2x
into
icebp
aam
ss
sar
jecxz
jmp
iret
ror
fcmovnu
out
mov
insb
adc
jle
add
cld
lock
sbb
add
filds
in
out
out
in
out
sti
hlt
rcr
xchg
cld
incb
lret
ret
lock
aaa
fcomi
xor
cli
cmp
xchg
fsub
jmp
movl
sub
repz
jmp
inc
jecxz
repnz
out
testl
sub
in
out
cmc
xor
lock
in
cli
cmc
fcmovne
loope
sti
decl
out
iret
jecxz
out
jmp
lock
out
hlt
shl
aas
cmp
loop
jmp
cld
mov
lock
int
cmc
enter
cmc
rcl
cmp
jmp
shr
aas
loope
testb
and
xchg
leave
repz
jecxz
into
idiv
out
ds
cmp
jecxz
loopne
stc
fsub
xchg
out
lret
shl
out
cmp
out
repz
into
repz
adc
fsubp
clc
jmp
frstpm(287
adcl
sub
icebp
ljmp
cli
iret
test
aas
cld
xlat
ret
ret
hlt
fyl2xp1
fsts
lock
jmp
leave
fucom
in
ret
cli
in
cli
hlt
aam
xchg
call
loop
lret
aaa
ror
xor
fdiv
loopne
lock
div
ret
repz
cmc
enter
jecxz
addb
xchg
out
call
in
aam
fucom
not
in
loopne
jmp
ljmp
xchg
xchg
cmc
xor
in
jmp
loope
icebp
jmp
xlat
aas
ret
out
sti
loop
out
ror
fst
jecxz
loop
cmp
xor
into
aam
add
cmp
ret
cmp
fucomip
mov
mov
ss
cmp
repnz
cld
shr
std
in
aad
call
faddl
decl
fmulp
lret
shl
jmp
repz
test
xchg
hlt
ret
fsub
fdivrp
xchg
xchg
rclb
icebp
shl
icebp
ds
lret
ss
stc
rcl
fldl
lret
in
fcomip
testb
cld
fucomip
aas
aad
rcr
cld
vpmulhw
out
xchg
lock
and
out
cmp
aam
repz
fcmovnu
loop
jecxz
mov
test
loop
xchg
nop
sub
aam
cmc
in
cmp
cmc
inc
cmp
in
repnz
test
in
mov
jmp
les
iret
div
fcomi
loope
addb
stc
int3
int
mov
or
lock
out
cld
xor
shl
sbb
out
fcmove
test
decb
shl
sti
out
fucompp
jmp
loopne
test
movb
call
repz
ret
out
out
hlt
cld
lret
fsub
xor
rol
shl
fsubr
mov
enter
out
sub
cmc
jecxz
fdiv
das
ss
loopne
out
in
cmp
fcom
xlat
test
sub
and
sub
xor
sti
ss
cmp
cmc
mov
loop
loopne
orl
shl
in
ljmp
std
icebp
ret
cmc
lret
addl
xor
fdivs
iret
enter
out
into
and
cmc
out
out
repz
mov
cli
out
adcb
cmc
lret
in
iret
in
cld
loop
test
fucom
icebp
test
mov
dec
int
mov
loope
cmp
int
xlat
into
std
cmp
cmp
cli
out
in
std
fmuls
jmp
jmp
loopne
iret
int
repz
out
xlat
test
shl
ret
std
and
xchg
out
iret
mov
rol
call
aaa
xor
cld
stc
shl
lock
cmp
out
addb
out
out
aad
int3
lock
int
idivb
ret
fidivrl
sar
adc
out
call
xchg
int3
int
xor
ror
ss
jmp
ffree
fld
cmp
je
movl
jmp
int3
into
fmul
fsubrl
in
jecxz
jne
les
aas
add
repz
loope
fmulp
int3
into
xchg
fcoml
out
ljmp
std
ljmp
in
fcmovnu
std
xchg
ljmp
test
hlt
repz
cmp
rcl
jmp
loopne
cmc
std
leave
fsubr
jmp
fucomp
nop
and
out
div
fcmovnbe
lock
cmp
loopne
rol
fcomip
loop
xor
xchg
loop
clc
test
out
in
loop
in
aad
rorb
shr
leave
xchg
dec
into
leave
divb
icebp
out
cmp
out
lret
aas
rolb
int
sti
cli
repz
xchg
in
cmc
ret
in
into
fsubr
out
repz
fdiv
fmull
neg
into
ljmp
lds
aaa
xor
out
lock
aam
rol
cmp
xbegin
mov
into
xchg
hlt
into
ror
xor
out
lret
sti
aas
fdivrs
hlt
jecxz
fcmovb
mov
loopne
out
in
mov
mov
ljmp
cmp
sbb
rcr
shl
aam
jecxz
filds
mov
cld
xchg
lock
cmc
das
aam
jmp
lock
neg
cli
in
mov
iret
ror
repz
enter
cmp
lret
roll
stc
or
lock
int3
mov
mov
shl
in
lock
sarb
cmp
shl
out
aam
xlat
out
out
fcos
nop
repnz
xor
fprem1
lock
fidivrl
cmp
test
clc
dec
sti
jmp
enter
fucomp
ds
cmp
sti
cli
lret
stc
into
cli
addb
hlt
into
out
shr
std
fst
adc
fildl
cmp
xchg
cmc
xor
std
cmp
out
fndisi(8087
rol
fucom
cli
loope
xchg
out
mov
in
icebp
div
lock
int
and
or
ljmp
aam
mov
repz
idiv
cmp
in
ret
vpsubd
jmp
cld
out
in
lret
xor
xor
repnz
loope
sbb
cmc
std
aad
hlt
xchg
out
out
mov
xchg
rcl
sti
neg
cmp
in
in
shr
out
clc
rorb
stc
int
jecxz
out
xchg
call
in
rcl
into
shl
cmp
test
mov
std
addl
lret
leave
cmp
into
out
ljmp
hlt
mul
loope
out
lret
fistl
shr
out
sarl
repz
test
int
hlt
jmp
int
sti
movl
xchg
repz
leave
in
iret
call
enter
fldl2t
ror
in
fldl
cmp
sub
xchg
mov
cmp
cmp
jmp
ret
cmp
loopne
ret
out
out
mov
lret
xchg
shr
mov
cmp
lret
iret
clc
cmp
std
aas
cld
in
in
enter
call
int
xor
shl
divl
into
icebp
aam
hlt
inc
rcr
cmp
ljmp
clc
lock
aaa
out
sti
sar
rcl
loope
cmp
in
in
xchg
ret
fxch
enter
jecxz
rcr
xabort
shl
fldln2
neg
fmul
fdivrp
nop
addl
cli
cmpb
addl
out
fcompp
out
call
xor
aad
icebp
sti
in
ljmp
xor
test
lret
stc
in
mov
addl
lret
into
fcmovnbe
hlt
fxtract
in
aam
out
std
loop
out
icebp
shl
ret
into
cld
repz
std
lea
jmp
ret
ror
aam
mov
or
sbb
jle
repz
aam
sub
in
xchg
icebp
ror
in
in
idivb
int
rcr
fsubp
in
call
loop
imul
out
dec
in
aam
aad
fxch
shl
stc
xor
div
out
jmp
div
les
sub
push
xor
jmp
fidivl
icebp
idiv
out
cmp
add
incb
mov
roll
mov
cmp
iret
loope
aad
mov
and
mov
aaa
not
int3
hlt
cmp
jmp
loop
ror
fxam
stc
mov
mov
in
xchg
repz
stc
out
vpmaddwd
cmp
mul
bnd
leave
inc
jmp
decb
cmc
out
lock
ds
in
hlt
cld
testb
fldl
in
mov
in
ret
jecxz
into
xor
into
aam
xor
in
faddp
not
repz
mov
lock
nop
cmp
xor
out
enter
hlt
lret
aam
in
fadd
enter
test
mov
sub
xor
cli
loop
std
call
xor
fst
clc
aas
hlt
rcl
out
lret
cli
int
stc
int3
in
lret
ljmp
das
call
into
out
test
fldl
decb
out
xchg
and
repz
jmp
xor
fucomip
cmp
fcmove
fiadds
cmc
sub
frndint
fucomi
out
fdivr
clc
ss
cli
xlat
call
rol
aam
ret
dec
leave
mov
sub
fdivp
rcr
in
aaa
cmp
fnstsw
cld
fdiv
lock
adc
aam
jmp
ljmp
xor
call
cmpb
sbb
iret
loopne
aam
out
out
enter
loop
int
clc
fmul
icebp
in
aas
cmp
ret
cmp
hlt
leave
mov
sar
fimull
cs
ljmp
aad
cmp
iret
out
lock
loop
std
mov
cmp
out
xor
xor
les
xlat
cmp
out
fdivr
cmp
ret
orb
out
lock
lea
sub
cmp
into
ljmp
aam
test
rorb
aam
jmp
repnz
xlat
ljmp
cld
testb
loope
loope
repnz
ror
jmp
repz
in
cld
sti
rcr
cmc
xor
cld
cmc
incl
addb
clc
cs
cmp
sar
add
lock
shr
lret
dec
mov
out
rcl
ret
cmc
lret
std
ds
fistpll
test
fadd
enter
jecxz
cmp
out
hlt
aaa
xor
ss
lret
in
iret
and
call
fiaddl
ljmp
xor
adc
cli
shl
repnz
leave
or
icebp
call
loopne
repnz
aad
cmc
cli
jmp
rol
aas
in
loope
sar
xchg
lds
xchg
mov
iret
jecxz
fcomip
repz
clc
aam
out
leave
stc
sti
or
xlat
aam
call
cmp
test
loop
repnz
in
cmp
idiv
aas
loope
div
shl
test
lret
flds
icebp
mov
int
lret
repnz
aad
shl
cmp
sti
cmp
xchg
fucomip
int
shr
shrl
int
jmp
in
fdiv
loopne
aas
std
loopne
in
mov
sbb
nop
roll
ss
rcr
sti
iret
fdiv
rol
testl
mov
fmul
fcmovnbe
cmp
aam
loopne
repz
idiv
fimull
fstp
out
call
mov
ret
aaa
aad
jmp
xor
xchg
lret
mov
iret
mov
xor
icebp
leave
cmp
cmp
or
clc
les
mov
mov
jmp
xlat
lret
aad
aad
int
jle
and
scas
and
aas
add
fcmove
or
loop
jmp
xor
sarl
lock
out
cmp
cld
cmp
mov
test
loope
xlat
ljmp
aad
ss
xlat
ror
cmp
fcmove
loope
and
stc
in
jecxz
std
ljmp
icebp
mov
cmp
call
out
testl
faddl
decb
out
rol
fmulp
hlt
cmpl
in
fscale
ret
lret
les
in
ljmp
repnz
fcmovbe
in
lret
xchg
aas
sti
xchg
ret
int
fucomi
jmp
in
int
sub
call
fdivrp
xor
jecxz
lret
xchg
out
mov
sar
out
xlat
stc
aad
cmc
into
ds
cmpl
ret
rolb
mov
aad
fldlg2
fptan
xor
cmp
sti
repnz
cmp
xchg
fcmovnb
fucomp
in
xchg
out
aad
jmp
in
sti
fstp
jmp
iret
rcl
hlt
cmpb
test
clc
test
sub
out
xchg
xchg
ror
cmp
int
in
stc
loopne
loopne
repz
icebp
fdiv
decb
cld
push
out
in
jecxz
out
out
ror
int3
lock
aas
vcmpps
mov
stc
cld
xchg
leave
icebp
incl
int3
int3
sarl
cmp
in
ret
in
call
and
test
out
jmp
xor
clc
stc
ret
sti
mov
leave
jmp
out
ret
xchg
aam
xchg
xor
in
fcom
cmp
repnz
lock
fcom
fstp
repz
std
cld
xchg
into
loopne
out
int
fidivl
jmp
hlt
leave
ds
cmp
movl
in
xchg
jmp
in
cli
fdivp
stc
clc
loopne
rcr
xchg
idiv
inc
xchg
mov
loopne
aad
cmp
cmc
out
repnz
ret
iret
shl
cmp
mov
sub
iret
xor
std
das
rcl
icebp
into
cmc
cmp
mov
leave
repz
fdivp
mov
lret
fcomip
aad
in
into
not
fxch
cmc
in
aam
aad
xchg
bnd
sub
fmul
xor
std
faddl
out
xchg
fxch
jmp
lds
enter
cmp
int3
test
cmp
cmp
test
frndint
mov
hlt
xor
fcomi
cli
stc
cmp
xor
ret
cmp
fldl
test
stc
loopne
xchg
in
jmp
cmc
fnop
cli
fcomp
cmp
in
neg
shl
jecxz
adc
fcmovnb
call
out
leave
aaa
sti
jmp
out
out
int
out
repnz
in
iret
jecxz
addb
in
dec
xchg
iret
int3
xor
int3
hlt
aam
ror
ret
repz
testb
shr
out
in
jecxz
das
in
in
repz
into
cmp
xor
fcomi
clc
fsubr
out
sti
movl
sub
clc
leave
jmp
jmp
fsub
repz
cld
mov
mov
loope
out
jmp
test
repnz
cmp
ss
fcmovb
aad
adc
stc
ljmp
leave
fcmovnb
cmp
cmp
cmp
test
stc
clc
rolb
aad
fisttpl
xchg
out
das
lret
fidivl
int
dec
fdiv
vpinsrw
cmp
clc
fsubp
xchg
lret
rol
fidivrl
xor
rol
ret
jmp
jmp
ljmp
leave
cli
call
cmp
dec
fcom
cmp
xchg
stc
cld
out
sti
int
aam
ror
enter
ljmp
test
in
test
clc
xlat
xlat
cli
test
lock
in
call
shr
lret
cld
in
out
xor
jecxz
add
inc
lock
xor
lea
mov
jmp
lret
rcr
aad
fsubr
xor
adc
and
jle
mov
stc
mov
cld
in
out
jmp
out
cs
out
out
shr
rcl
mul
mul
out
aad
in
dec
mov
leave
out
jmp
jecxz
in
shl
repnz
fildl
shl
xor
fcmove
nop
loope
mov
hlt
lret
int
dec
sti
sti
loope
cmp
mul
fiadds
mov
clc
sbb
jecxz
nop
iret
hlt
cs
cli
cmp
in
xor
fcomip
cmp
xchg
sub
in
leave
leave
in
ss
adc
cmc
test
jmp
imul
fsub
lock
xchg
icebp
out
fld
sar
xor
fldl
sbb
add
in
stc
shl
mov
fildl
lds
xor
faddl
test
hlt
mov
jmp
or
ljmp
call
out
aas
cmp
std
cmp
cmp
fcmove
enter
mov
push
xchg
call
repz
out
xabort
clc
iret
fsubr
neg
cmp
mov
clc
fsubrp
jecxz
stc
int
fisubrs
jmp
fdivs
hlt
fidivrs
repnz
loope
ds
cmc
out
clc
sbb
incb
ljmp
clc
fucomi
shl
repnz
std
xchg
fneni(8087
mov
test
in
jecxz
fcompp
cmp
fucomip
rcl
ret
sti
rol
test
enter
iret
out
in
xchg
loope
aam
out
out
repz
cmp
into
fdivrp
iret
cmp
xlat
stc
rcr
out
in
aad
xor
xor
fcmovu
add
jecxz
shl
test
test
fsub
jmp
mov
repz
leave
repz
in
lock
loope
sti
stc
mul
aad
testl
idiv
shl
in
aaa
fmul
std
into
aam
fstp
sti
leave
decl
icebp
orl
clc
jecxz
out
lock
xlat
call
loope
cmp
fidivrs
mov
out
ljmp
out
in
out
sti
out
sti
cli
fdivrs
cmp
in
inc
xlat
fisttpl
xor
xchg
aad
leave
into
xabort
fcmove
fcmovnbe
sar
repnz
icebp
mov
mov
xlat
sbb
ljmp
xor
shl
icebp
sti
stc
fcmovnbe
sbb
out
mov
out
adcl
roll
ds
cmc
out
sbb
repz
xor
ljmp
aas
xor
cmp
loope
call
loope
jmp
in
shl
aad
into
rcl
leave
div
std
jecxz
icebp
jmp
call
mov
loop
lock
fidivrl
enter
rcl
lock
out
ds
ljmp
int3
mov
push
in
xor
aam
lret
cld
loope
rolb
clc
mov
in
loopne
into
aam
or
in
stc
out
int3
flds
cmc
icebp
idiv
call
test
xchg
int
loope
repz
lret
aaa
fldz
out
cmp
aam
in
aas
aaa
fiadds
mul
out
in
mov
repnz
mov
clc
shll
sar
std
cmp
fadd
cmp
hlt
hlt
fcomp
cmp
mov
clc
ljmp
hlt
rcl
loope
stc
in
lret
idivb
add
cmp
aam
neg
cld
jmp
std
call
into
fcmovnb
lret
fucomi
shr
ror
out
repnz
fsubp
xlat
mov
fcom
mov
repz
enter
fcmove
int
lock
iret
int3
fdiv
cmpl
orl
loopne
xor
shl
in
cmp
xlat
ds
std
std
icebp
neg
test
test
jmp
repnz
xor
jmp
fdivrl
shr
xor
repz
test
int3
and
ror
call
ss
cmp
iret
aad
xlat
jecxz
cmc
cli
test
repz
inc
or
jmp
jmp
ret
iret
enter
int
xchg
cmpsb
push
ja
popa
out
mov
sub
aas
add
ret
in
leave
fildl
xchg
hlt
xor
cmp
ss
not
repz
aad
shl
roll
fdivr
test
call
cmp
aaa
xor
cmp
ds
jecxz
stc
in
mov
enter
filds
ret
enter
repz
out
out
divl
sti
test
ret
mov
fisttpll
repz
orl
leave
neg
ror
rcr
xchg
jmp
into
test
enter
xor
fidivs
in
jmp
aam
div
ret
icebp
loope
lret
fdivrp
test
ss
cli
leave
cmp
lock
rcr
neg
ffreep
enter
in
lret
out
int
leave
jmp
enter
call
int
ret
stc
mov
or
lock
mov
out
into
ljmp
xor
fdivr
not
aam
test
fnsetpm(287
cld
leave
addl
cmp
shr
sbb
rol
incb
stc
fildl
cmc
in
ret
into
repnz
cli
xorb
fdivr
fptan
mov
neg
loopne
xchg
lret
das
fdivr
xor
fcmovnbe
out
stc
aam
in
ffreep
hlt
call
out
ljmp
out
shrl
shl
lds
repz
lock
cmp
stc
lock
loope
loopne
out
xor
cmp
shl
xlat
aad
loopne
jecxz
lock
xor
xlat
iret
out
out
fdivrp
out
stc
das
cmp
divb
leave
jmp
int3
hlt
shl
fildl
fldl
loope
shr
ror
ss
idivl
std
aam
repnz
in
mov
mov
cmc
loope
out
cli
lock
call
int
test
aad
loopne
mov
int3
into
hlt
call
out
fst
in
cli
into
sbb
in
and
test
mov
mov
orb
sub
push
cli
loope
out
sti
fsub
mov
test
ljmp
xlat
ljmp
cli
clc
iret
fdivr
cmp
and
xchg
adcb
rcl
jecxz
leave
std
enter
jmp
out
test
test
hlt
lds
into
jecxz
lea
ror
in
xor
loope
aad
addl
test
jecxz
aam
aad
out
int
lret
aad
rcr
shl
test
std
mov
addb
repz
icebp
into
sarb
fmul
int
out
cld
aas
cld
fcmovbe
in
jmp
clc
icebp
test
out
in
jmp
fsincos
fucomi
out
int3
fdiv
int
cmp
cmc
aam
adc
and
repz
xlat
ret
aad
fcmovu
lret
loope
ret
cmp
lock
ror
loop
ljmp
sti
rorl
into
enter
sub
int
in
loopne
add
clc
mov
xchg
xchg
lock
iret
jmp
cmp
ret
fiaddl
in
cli
out
call
fucomip
ror
loop
fcomp
aam
std
adc
ds
fcmovbe
cmp
in
loope
xchg
repnz
xchg
aad
clc
int
icebp
in
icebp
cmp
std
loop
rol
cld
imul
test
fcomi
xchg
test
std
in
xlat
xlat
stc
shrl
aas
icebp
xor
clc
test
fucomi
enter
hlt
mov
cs
lock
lds
clc
icebp
loop
cmc
into
sarb
fdivr
enter
leave
in
xor
loopne
xor
aam
fcmovbe
clc
repnz
cmp
cmp
mov
lret
ljmp
hlt
cmp
into
out
call
clc
fcomip
lds
fmuls
out
rcr
imul
repnz
ror
leave
int
ret
ret
stc
std
call
rorl
add
lret
fst
int
test
cmp
bnd
aas
add
mov
aas
xchg
mov
lds
fsincos
repz
fcmovu
clc
idiv
lock
stc
flds
xchg
into
call
repnz
in
out
cmp
int3
imul
loopne
jmp
out
mov
xlat
in
fcmovne
lret
hlt
faddl
lock
repz
jmp
rcl
mov
in
xor
rcr
enter
cmpl
loope
adc
call
shl
repz
out
cli
sar
enter
sti
lock
loope
loope
xchg
sti
fcmovbe
cli
fmulp
aaa
in
lock
fdivrs
loop
icebp
cmp
clc
imul
out
fimuls
hlt
icebp
clc
jmp
aas
rolb
cmp
fldl
in
icebp
cld
in
jecxz
repz
cld
cmp
rol
fsubp
and
in
decb
nop
aad
cmc
repz
repz
lock
fdivrp
enter
aad
mov
leave
int3
xchg
std
test
enter
jmp
repnz
test
mov
fsincos
xlat
mov
nop
in
out
sbb
clc
jmp
shlb
leave
lret
incb
ds
loope
mov
loop
mov
repz
cmp
xlat
sbb
shr
rcr
ret
jmp
in
loop
lret
fsub
test
shr
out
in
icebp
out
into
aas
loopne
rolb
test
sti
lret
stc
mov
int
xor
repnz
cmc
std
xor
jecxz
leave
aam
loope
fisttpll
aam
in
in
icebp
xor
fistpll
xor
cld
aas
loopne
in
out
shr
call
cmc
out
aam
in
xor
int
sti
stc
out
in
xlat
mul
enter
lret
fcomip
fisttpl
out
xor
enter
cli
stc
cmpb
in
aad
aad
fiaddl
jmp
roll
fnop
xor
int3
in
int
aad
cmp
fldl
fmull
xor
in
idiv
rcl
aas
fnstsw
iret
in
mov
fiaddl
sub
hlt
shr
das
ret
shl
lock
inc
loop
cmp
jecxz
in
lock
icebp
mov
lret
add
lock
fstpt
aad
rcr
call
xlat
lret
testb
std
xchg
jecxz
shr
xor
fcomi
aaa
cmp
ljmp
enter
xlat
in
int
icebp
fsubp
int3
shl
shll
shl
jmp
cmp
shr
or
fldl
fld
out
in
std
call
loope
mul
jecxz
shr
fcmovbe
aam
int
fcos
rcl
leave
in
mov
loop
into
lret
fisttpll
aad
out
fidivrs
f2xm1
aas
ret
rcr
enter
ret
out
test
and
out
jmp
xor
xlat
jecxz
testl
idiv
lret
lret
jecxz
int
aam
xlat
repz
cmp
xlat
hlt
ret
std
cmp
loop
jecxz
in
rolb
ljmp
aad
cli
rcr
stc
ds
stc
jecxz
hlt
leave
in
xor
fmulp
lret
mov
sub
std
lock
idivl
loope
std
testb
std
loopne
cmp
sub
lret
repz
repz
ds
fstp
lret
cli
into
fucomi
stc
lret
in
shrl
fxch
cmc
fld
aaa
xor
repnz
shl
enter
clc
std
int3
xor
jmp
icebp
int3
ss
in
fidivrl
loopne
cld
clc
push
std
ljmp
or
loopne
xor
in
cmp
shl
cld
aad
jmp
cmp
in
clc
cmp
out
mov
fildll
aaa
jmp
aam
out
aas
iret
fabs
out
test
aas
loopne
add
mov
pop
leave
ret
push
mov
push
andl
mov
inc
mov
cmpl
jne
push
push
call
cmpl
jb
push
adc
jmp
xlat
ffree
xor
pop
fisttpll
dec
cmp
scas
add
cmc
fiadds
nop
jmp
in
jmp
lret
shr
enter
ret
fdivr
repnz
testb
in
add
ljmp
icebp
addb
sbb
in
loope
mov
cmc
int
lret
sar
jmp
xlat
out
aad
fcomp
sar
lock
cmp
mov
ljmp
icebp
rcl
xlat
xor
idiv
push
shl
in
test
mov
jecxz
in
loope
les
cs
fdiv
jmp
addl
cld
cld
decb
aad
stc
int
cmp
test
loopne
vpsubsb
enter
fisttpl
aam
enter
lock
loopne
out
loope
out
into
mov
mov
repnz
jmp
ljmp
fscale
and
repz
test
sti
in
shl
xor
cli
imul
xor
jmp
xchg
orl
test
mov
xor
cld
into
cld
ss
or
loopne
loop
enter
int
xchg
adc
in
clc
lret
divl
adc
out
repz
sub
into
mov
int3
stc
out
icebp
lret
cmp
rcl
xor
test
addb
xchg
mov
int3
cmp
jmp
fsub
clc
xor
inc
mov
jmp
loop
repz
cli
ljmp
fdiv
shl
addb
nop
addb
hlt
cs
aam
fnstsw
loope
ret
iret
test
std
mov
int3
cs
sar
xlat
fsincos
sar
sarl
int
fndisi(8087
test
faddl
out
loopne
lret
int
std
fdivrp
loopne
cmp
xlat
int3
mov
jecxz
call
out
hlt
out
repz
lret
xlat
test
shr
addb
xchg
test
aad
repz
call
xlat
clc
icebp
fdivrl
stc
shl
mov
call
into
repnz
iret
xor
xor
out
rcl
sti
not
idivl
clc
ret
call
mov
clc
xchg
fdivp
sbb
lret
cmp
sarb
cmp
icebp
in
icebp
sbb
stc
fsubr
call
in
out
out
ss
in
shlb
aas
cld
repz
cli
in
leave
cli
loope
std
mov
cmc
xor
ret
ljmp
cld
test
idiv
fildl
cld
adcb
lret
cmp
cmp
shl
jmp
fldln2
decb
icebp
mov
jecxz
leave
jmp
lret
fsubr
in
fcom
fucom
call
fildl
lea
fmul
aam
fmul
jmp
test
rol
leave
loop
in
std
ljmp
in
shr
sti
cmp
sti
fst
loope
cli
cld
aad
fnstcw
enter
test
loop
loopne
in
out
das
fxch
ljmp
loopne
fcom
fadd
fprem1
out
idiv
loopne
in
out
iret
xor
out
into
int3
cs
repz
xor
xchg
filds
ret
loope
hlt
xchg
xor
ror
xor
out
std
hlt
iret
in
loop
test
fxch
loopne,pt
out
lock
shrl
leave
ror
into
call
idivl
clc
loopne
cld
cmc
lret
mul
test
rorb
in
fdivr
idiv
xor
aad
repz
sarl
cld
cmp
cli
cmp
out
int3
rorl
rcr
enter
enter
ds
idiv
hlt
cmc
fdivrp
jmp
ror
test
shr
clc
xor
sarl
repnz
xlat
fidivrs
aas
fsubp
cmc
fscale
mul
enter
fdivp
mov
jecxz
ror
out
leave
out
call
cld
aad
call
xlat
int
out
lret
icebp
ss
xor
out
sti
leave
sarb
aad
std
cmp
idiv
leave
call
mov
fiadds
shl
enter
into
sbb
clc
add
xor
sub
hlt
sub
aaa
stc
in
movl
xor
jmp
iret
rol
rol
or
push
aaa
jle
mov
jle
add
aam
cmp
iret
lret
sarb
jecxz
loope
fucomi
out
leave
out
test
repnz
xchg
clc
in
shr
in
enter
fcmove
clc
iret
cmc
stc
mov
ret
jmp
out
std
jmp
in
int3
fisubrs
ror
call
icebp
sti
filds
fiadds
xchg
loopne
aaa
aad
ret
int3
sti
clc
icebp
ljmp
fdivrs
loope
mul
mov
fmulp
or
mov
fld
lret
ss
fiadds
mov
stc
in
leave
xchg
in
lret
shr
aaa
aad
incb
jecxz
cmp
cmp
lret
fdivr
loop
out
pop
icebp
out
xor
sar
cmc
aam
clc
in
test
test
mov
cli
and
enter
mov
fdivp
ljmp
std
ljmp
aam
cli
fadd
ljmp
iret
shl
lret
xorl
hlt
lret
leave
aad
not
rcl
out
loopne
mov
fiaddl
xchg
mov
int3
fldz
aad
in
fidivrl
sbb
iret
in
fprem
testb
orb
in
xor
lret
clc
aad
sarl
cmp
test
sti
in
jecxz
mov
lock
int
lock
hlt
in
out
in
cmp
stc
int
in
aas
sarb
mov
rolb
mov
les
cmp
loopne
rcl
sbb
roll
fildl
xchg
int
xor
aam
into
stc
out
clc
ds
jmp
out
loope
cld
cli
testb
rorl
lret
shl
loopne
repnz
test
repz
enter
ret
ljmp
shl
lock
lret
ljmp
rcr
in
cmp
fucomi
int3
aaa
rol
leave
into
xor
in
xor
rcr
fldl
mov
loope
lret
out
int
std
out
or
neg
leave
enter
clc
fdivrs
fcmovnu
out
movl
out
hlt
aaa
jecxz
cmp
cli
fnstsw
roll
aam
cmp
stc
enter
out
xchg
jmp
in
sarl
test
jmp
xor
rolb
mov
or
loope
into
cli
out
xchg
aam
xor
aad
ror
int
iret
out
cmp
in
jecxz
icebp
fdiv
clc
ret
sti
std
loop
shl
lock
xor
cmp
xor
fildl
out
repnz
out
fmul
aaa
aam
lret
std
cld
int
ds
lock
repnz
addl
xchg
icebp
ror
in
fsubr
cmp
adc
adc
ror
in
in
shl
fsub
cmp
ljmp
cld
xor
std
out
faddl
lret
icebp
xchg
lret
cmp
rcl
loope
cmc
in
int3
leave
mov
out
fbstp
out
into
shl
aad
and
sbb
mov
in
into
jecxz
mov
ficoms
in
idivb
lret
into
int3
repz
ror
ds
ret
lret
loopne
xchg
out
call
sar
sti
lret
repz
repnz
loop
hlt
rol
xchg
shl
and
out
into
fmul
mov
rclb
stc
test
cli
out
addl
jmp
int3
fmull
shl
stc
in
cmp
leave
fcmove
cmp
loope
repnz
ror
aam
mov
cli
loope
incl
int3
hlt
int3
cmp
jmp
out
idiv
filds
mov
out
nop
bnd
not
call
xlat
testl
xlat
jmp
xor
sub
lret
div
leave
lret
fucomip
test
in
ds
fcmovnb
fcmove
in
out
int
std
into
int3
fistpll
stc
ror
stc
fdivr
out
shl
xlat
fucomip
out
xchg
in
test
xchg
addl
shr
fsub
rcl
lock
rcl
mov
aam
add
nop
leave
lret
test
int
jmp
in
fcmovnb
icebp
cmp
sbb
in
cli
ljmp
shl
repz
shrl
fcmovnu
hlt
ret
fiaddl
rol
test
inc
cld
daa
test
add
ror
fxch
shll
or
or
aaa
adc
add
out
fld
icebp
test
nop
out
lock
xor
out
icebp
jmp
shl
cmp
cmp
cmc
fildl
xchg
loopne
repz
cmp
cmp
sti
cmp
sarl
fld
inc
clc
loope
jecxz
test
xchg
lret
xchg
aad
ss
repnz
cmp
repz
sar
loop
clc
ror
fucomp
mov
in
mov
repz
aaa
div
cmp
out
leave
loop
shr
out
clc
loopne
imul
ret
fisttpll
sub
out
ret
cld
cli
jmp
cmp
and
call
roll
cli
ljmp
stc
out
int3
stc
ret
aad
fprem
lret
jmp
sti
mov
loopne
leave
in
sar
in
ret
aam
cmp
rcr
sub
aam
out
cld
in
fdivr
jmp
int
shl
test
fcmovu
ds
fadd
loopne
fcmovnb
fucompp
in
test
mov
test
xor
idiv
repnz
lret
ds
idivb
jmp
cmc
rol
in
mov
out
out
or
enter
in
fnstcw
shll
cmp
fst
out
aam
aad
lret
clc
fldln2
out
fsubp
cmp
in
xlat
xor
stc
aad
cmp
test
xchg
les
xchg
lock
jmp
ret
ret
in
aaa
ds
stc
xor
ds
orb
xorl
icebp
shr
ss
cmp
lret
roll
test
jecxz
xor
mov
repnz
cli
out
ret
ss
lock
loope
rcr
shl
loop
jmp
loop
fiadds
shr
xor
sti
icebp
std
std
rcr
cmc
shl
lock
mov
testb
mov
xchg
iret
rcr
rcl
in
ds
and
test
loope
imul
jmp
in
mov
hlt
out
in
aaa
lret
out
ss
lret
loopne
aas
fsin
xchg
loopne
ffree
out
ret
out
in
fsubrp
leave
repz
fadd
fdiv
clc
cmp
xchg
rcl
cmp
mov
in
xchg
aad
in
cmp
cmp
rcr
hlt
test
fdiv
call
into
out
popl
xor
in
xor
ljmp
into
test
out
aam
test
out
in
out
repz
pop
iret
rcl
in
enter
repz
dec
std
xor
loopne
cld
in
mov
out
mov
rcl
iret
xor
notrack
faddl
leave
call
xchg
mov
std
int3
xchg
clc
xor
icebp
fcomp
loopne
flds
flds
mov
hlt
mov
jecxz
lret
aaa
xor
in
repz
hlt
hlt
ret
leave
lret
leave
out
xchg
adcl
sub
xor
aaa
cmc
cmp
fyl2x
test
jmp
aas
fchs
xchg
jmp
cli
out
fdivr
roll
sti
icebp
in
hlt
aas
lret
jecxz
int
stc
loop
fldl
mov
adc
mov
rcl
leave
out
cmc
aad
rcr
aam
icebp
jecxz
cmp
mov
xchg
fmul
decl
ret
shl
cmp
cmp
into
cmc
cmp
ret
aam
fsub
mov
loopne
int
cmc
out
fdivs
fcom
bnd
out
ror
out
addb
rol
aad
jecxz
into
repnz
out
fyl2xp1
fcmovnb
in
lock
into
rol
loopne
fld
mov
in
mov
test
std
in
fcmovu
xor
in
in
fadd
out
cmp
nop
ret
les
ret
call
xlat
out
stc
in
out
ret
cmp
jmp
addb
fld1
aad
cmp
leave
imul
into
repnz
cmp
clc
xchg
fstp
jmp
fnclex
int
xchg
mov
aam
lret
int3
xor
addb
sbb
nop
jmp
jmp
cli
out
out
enter
cmc
aam
aam
test
test
flds
rol
lret
in
cld
fcmovne
fcmovu
ds
fcmovnbe
sbb
cmp
fcmove
call
shl
leave
into
fdiv
enter
aaa
cmp
repnz
filds
clc
fldl2t
out
mov
hlt
ljmp
cld
push
xor
add
mov
sub
xor
mov
sub
jmp
sarl
aam
aam
fcmovne
inc
cwtl
sbb
inc
sarb
add
std
cmp
movb
test
in
call
rcl
xor
xor
lock
int3
sar
lock
in
add
test
lret
icebp
in
xor
out
jecxz
jmp
fnstsw
cmp
hlt
not
rcr
ret
jmp
icebp
mov
test
ljmp
and
cli
fdivr
xchg
pop
loopne
orb
call
fcomip
cli
fcmovnu
fsubp
test
cmp
fcmovb
mov
nop
fmul
enter
mov
xor
cmp
jmp
fmulp
rol
flds
in
sub
loope
rcr
adcb
fprem1
repnz
out
in
push
test
stc
sar
mov
jecxz
out
fcompp
enter
in
stc
loope
fidivrl
cmp
in
ror
rol
idiv
in
loopne
in
sti
loopne
test
call
stc
xor
ret
shl
int
std
stc
fadd
int
in
lds
out
xchg
mov
repnz
fadd
xor
cmp
aad
ljmp
xchg
in
xchg
xchg
cs
lret
jmp
repnz
loopne
cmp
cld
lret
jmp
repz
aad
lret
xor
out
fcomip
cmp
loop
std
test
out
lret
decb
into
leave
repnz
fidivl
stc
lock
ret
hlt
in
fimull
in
in
mov
aam
xor
lret
in
cmpb
loope
frndint
jecxz
sti
fiadds
mov
call
test
aad
cmp
ds
ret
addb
out
out
decb
jecxz
ss
xor
rolb
fcmovbe
test
cmp
icebp
sti
in
xchg
mov
cmp
cli
fld1
aam
cmp
repz
and
fsub
fldl
test
fldpi
jmp
aaa
shrb
xor
iret
cli
aaa
sarb
iret
iret
fucom
cmp
incl
mov
jecxz
mov
iret
test
cmp
shl
out
cmp
movb
in
jmp
das
loope
cmp
incb
cld
repz
out
and
incl
in
fbstp
xor
aam
rcl
cli
sti
ds
mul
loopne
mov
mov
fucomi
mov
xchg
div
lret
cmc
leave
out
shr
sti
leave
clc
sti
icebp
fcmovu
cmp
rol
fimuls
xchg
out
test
lret
cli
in
cmp
aam
aad
shr
aas
inc
leave
shr
ljmp
rorb
into
in
movl
hlt
shl
test
or
ljmp
clc
rcl
in
jmp
out
cmp
std
loope
sbb
sti
enter
lock
xchg
aaa
lds
shr
aaa
ljmp
enter
out
fxch
out
mov
fistpll
ret
sub
jmp
xor
mul
shl
rol
fisttps
xchg
int
aam
out
int3
jmp
stc
into
aad
fcmove
roll
jmp
iret
out
out
std
aam
leave
xor
xor
cmc
imul
loope
aas
jmp
cmc
ret
in
jmp
jecxz
lock
int
xchg
ljmp
fstpt
idivl
icebp
lock
in
fcmovnu
hlt
fld
test
leave
mov
nop
into
decb
xor
imul
shr
fcmovnbe
ljmp
roll
into
loop
sar
std
out
shr
cmp
lret
out
in
stc
aam
clc
jecxz
test
orl
xchg
xlat
out
icebp
cli
in
xor
cmp
cli
fptan
xchg
int
xchg
mov
xchg
loopne
xchg
jmp
bnd
stc
cmp
cmp
jecxz
loop
jecxz
ret
fsubp
jecxz
rorb
ret
out
cmc
clc
cmc
jmp
cli
aam
test
test
movb
divb
xlat
in
clc
lock
repnz
repz
lock
xlat
jecxz
aas
ljmp
leave
call
das
cmc
repz
cli
hlt
stc
xlat
test
rol
xchg
xchg
faddl
loopne
aam
hlt
aad
out
fsub
xor
sti
hlt
repz
fcomip
lock
sar
aad
imul
stc
mov
movl
cmpl
je
cmpl
jne
push
call
mov
dec
mov
jmp
xor
xor
xor
or
jmp
int
fcmove
fstp
adc
js
mov
jle
add
lea
ljmp
out
call
ds
aas
out
in
loop
test
in
jmp
test
xor
cmp
xlat
stc
lret
cmc
cmp
loope
div
ret
jmp
mov
std
jecxz
jmp
out
iret
sar
xor
fdivl
out
std
shl
cli
call
rorb
jmp
loope
xor
lret
jmp
test
cmc
addb
aam
decb
leave
cmc
xchg
loope
iret
leave
fidivl
test
aam
ret
jecxz
add
out
incl
out
xchg
out
aam
iret
aad
shr
fdivr
int
sar
filds
cmc
xchg
fxch
loopne
enter
loopne
lock
out
xor
ljmp
loopne
mul
in
ror
in
ljmp
mov
shl
div
hlt
lret
fcmovnb
jmp
cmp
test
rcl
out
jmp
int
shl
out
xchg
xchg
sub
fdivl
icebp
lret
lock
icebp
inc
out
shl
hlt
cli
lret
int3
in
mov
int
xchg
out
lret
icebp
xor
ss
call
fxch
adc
repz
xlat
fdivrp
mov
out
std
cld
out
in
xor
loop
vpsubw
cmp
aam
in
in
loope
icebp
bnd
loopne
jecxz
loopne
out
xchg
mov
cmc
jmp
cli
fcmovu
in
fxch
rcl
and
mov
test
mov
lret
icebp
out
shlb
out
repnz
into
cmp
cmp
cmp
cli
iret
loope
incl
in
stc
int
loope
xchg
divl
mul
enter
jmp
std
lret
rol
fcmovu
idiv
and
call
out
decb
in
xlat
vmovq
aad
out
cmp
les
and
mov
xchg
mov
xor
lret
cli
out
repnz
rcr
inc
loope
enter
fiadds
mul
aad
repnz
xor
icebp
adc
hlt
enter
mov
call
ret
jecxz
shr
call
shl
sar
in
fcomp
mov
fcmovne
call
cld
into
out
lret
clc
ror
icebp
std
loopne
out
icebp
xor
aad
mov
out
sar
call
aam
xlat
xor
call
cld
testl
lret
icebp
mov
sub
out
int3
lret
rol
leave
xlat
lock
icebp
out
xchg
xchg
mov
ror
xor
mov
out
std
lret
ljmp
ret
int3
incl
inc
rcr
not
lock
in
sti
fsub
shl
out
lret
iret
mov
loop
lock
mul
clc
xor
int
aas
clc
sar
or
sbb
filds
xor
xor
aad
neg
fucomp
cmc
out
idiv
test
nop
fucomi
adc
lock
fld
jmp
repz
aas
ror
int3
testl
test
mov
out
cmp
fxch
jmp
fxch
ret
mov
mov
and
mov
cmp
cmp
int
out
rcl
fxch
shl
iret
mov
stc
jmp
xor
mov
xchg
clc
das
fidivrl
xor
cmp
shl
fmul
shl
cmc
fiaddl
mov
in
lret
rorb
xlat
out
jmp
aas
jmp
fsub
hlt
out
sti
out
ret
xchg
mov
leave
jecxz
lret
xchg
in
loop
hlt
enter
fcom
call
aas
clc
vpextrw
lret
dec
fucom
nop
aad
in
cmc
in
mul
int3
ffree
aad
jecxz
in
div
jmp
nop
ljmp
fdivr
jecxz
out
aaa
int
sar
hlt
cmp
call
in
lret
ljmp
loopne
mov
leave
leave
fld
int3
cld
out
ljmp
aas
aam
stc
sub
lret
sti
rclb
icebp
xor
leave
stc
call
int
cmpl
xchg
in
sar
les
lret
ror
xor
cld
aad
cmp
out
ret
stc
add
into
orl
and
call
hlt
clc
int3
aaa
aad
iret
fst
clc
shl
enter
loopne
cli
lret
in
iret
in
das
fidivl
test
neg
mov
add
subl
add
addl
imul
jmp
into
aam
enter
fsubl
dec
pop
pop
nop
aaa
in
sub
jg
scas
add
hlt
sti
push
sarl
hlt
aad
out
fscale
cld
xchg
ljmp
sti
cld
out
rcl
fiaddl
stc
mov
test
repnz
rcl
in
xor
ljmp
fdivp
loope
call
test
out
out
rol
loopne
imul
cld
ljmp
ret
test
sbb
fsubp
ljmp
test
xchg
hlt
lret
ret
rol
cmp
test
rcr
rcl
shr
fcmovu
test
out
lock
jmp
jmp
jmp
rcl
faddp
ftst
ljmp
ljmp
jmp
leave
lock
out
fucomip
in
loop
sti
jmp
in
loope
xchg
xlat
stc
aam
jmp
ss
cmp
hlt
cli
adc
mul
lret
in
sbb
repz
ss
std
fdiv
jecxz
icebp
in
fmul
jecxz
in
call
ljmp
stc
cmp
cli
jmp
test
loope
fdiv
in
loop
lock
out
rcl
ss
shr
fsubr
lret
loopne
in
rcr
jmp
ret
orl
xor
leave
shl
clc
hlt
xor
into
loope
clc
test
fcmovnb
fucomp
ljmp
clc
ss
xor
ret
cmp
not
loop
fdivrp
lret
and
into
out
stc
cmp
cmp
rcl
shl
out
repnz
cmp
out
and
loopne
aam
icebp
sti
int3
lock
cmc
ret
fucom
xrelease
call
in
leave
clc
decb
lock
aad
in
jmp
shl
testb
filds
fsts
out
hlt
shr
in
leave
hlt
cmp
repnz
fsubr
cmpl
stc
aad
cmp
mov
xchg
shl
out
lret
std
lret
cmp
shl
mov
into
jecxz
repz
test
shr
into
lret
cmp
fistpll
iret
rcl
out
ret
mov
in
in
jmp
add
call
int
xlat
shl
xor
ffree
cmc
xchg
cld
cli
fucomip
loop
jmp
loope
rol
out
aam
cmp
into
loope
cmp
aas
repnz
test
in
icebp
test
jecxz
cli
out
cmp
imul
lret
sti
fildl
loope
in
in
mov
in
loope
xchg
cmc
ljmp
stc
out
stc
shl
adc
repnz
mov
lea
aad
xor
aam
cmp
ljmp
enter
leave
addl
leave
fyl2x
out
call
in
neg
loopne
in
lds
xchg
icebp
call
int
cld
fdivrs
out
jmp
loope
fnstcw
in
xchg
loopne
out
testb
xchg
and
icebp
sar
xlat
cmp
loope
shl
sbb
fisttpll
fdivrp
jmp
lret
les
repz
cmp
cli
xchg
call
mov
ret
test
in
iret
mov
in
sub
xor
in
loopne
fdivr
ret
xlat
cmp
aam
cmp
mov
loope
leave
xor
aaa
idiv
int3
fdivrs
ds
mov
std
leave
enter
fdiv
xor
cmp
lret
loopne
out
out
sarl
std
mov
xchg
int3
add
xchg
das
xor
ror
xlat
leave
dec
aam
fdivrp
jecxz
lock
call
loop
ljmp
cmp
rcr
loope
fiadds
jmp
jecxz
push
shrb
hlt
stc
iret
cmp
cmp
roll
loop
test
movl
in
xor
sub
frndint
cmp
shr
hlt
fdiv
out
ds
mov
loopne
jecxz
int3
into
xchg
xchg
lret
out
xor
iret
aad
cmp
adc
xlat
sar
mov
fsub
mov
xor
in
ret
ror
neg
out
ds
fnstcw
leave
sti
idiv
mov
leave
mov
in
xor
jmp
aad
aas
fcom
clc
test
test
mov
mov
cmp
jne
mov
mov
xor
xor
add
add
imul
jmp
mov
mov
mov
mov
mov
jmp
int3
rol
xlat
fstp
fst
mov
push
inc
pop
into
jg
scas
add
in
std
sub
out
cmp
out
out
aad
stc
hlt
loop,pt
cmc
ret
cli
aas
xchg
int3
xchg
int
test
hlt
ljmp
std
fdivrl
std
icebp
loope
fucom
lret
jmp
decl
xor
leave
sti
cmp
fucomi
into
xor
cmp
in
add
mov
into
rclb
shr
cmp
int
rcr
shl
repnz
shl
out
mov
nop
in
shl
rol
repz
cli
int3
fdivr
rcl
cld
std
xchg
stc
jmp
in
call
mov
aam
aad
cmc
iret
int
cmp
loope
neg
aaa
fidivrs
ret
leave
lret
mov
int3
ljmp
xor
xor
cld
cmp
iret
cmp
loop
int
fcmovu
into
icebp
shl
int
imul
shr
in
cmp
loope
jmp
xlat
cld
test
fisttps
test
int
xor
std
cmp
cmp
fiadds
hlt
test
xchg
inc
out
fcmove
rclb
repnz
cmp
sti
loope
loopne
frndint
cli
shl
cld
ret
leave
and
nop
aam
in
test
jmp
clc
sub
int
loopne
roll
test
out
decl
jmp
hlt
fmul
aam
testl
div
call
int
xor
enter
lret
idiv
int3
cmp
cmp
fld
jmp
int
fldl2e
iret
in
in
shl
xor
stc
aad
repnz
out
fdivp
fprem
in
aad
xlat
in
cli
test
lea
sti
lock
std
iret
hlt
fcomip
adc
in
call
lret
ret
xchg
call
out
jmp
sarb
iret
idivl
fucom
in
loopne
ffree
std
dec
jmp
shl
out
xor
fxch
int
cli
adc
rol
out
test
cli
fdivr
into
addb
ret
xor
ljmp
faddl
ffree
test
shr
out
repnz
nop
xor
xor
shl
fadds
push
fadd
test
xchg
ljmp
idiv
cmp
cli
hlt
int3
fcom
rcr
loopne
call
ljmp
icebp
ret
cld
repz
ljmp
lds
fmuls
sti
mov
in
and
into
out
shr
sti
aad
cmp
fstpt
repnz
iret
iret
hlt
xor
out
mov
xor
xor
sti
jmp
fcmovnbe
cli
cmp
repz
in
addl
rcr
out
in
stc
fcmovbe
cmp
test
not
hlt
loopne
and
cli
loope
mov
shl
in
stc
out
in
cmp
fxtract
cld
xchg
out
mov
fdivrp
std
xchg
xchg
xchg
fldz
jmp
in
xor
add
aas
cli
xchg
cld
in
xchg
nop
nop
loop
repz
cmc
xor
out
repnz
lret
rcr
loope
shl
mov
loopne
mov
xor
sbb
xor
hlt
fmul
sarl
fldl
loop
fsubp
fsubrp
jmp
mov
shlb
out
repnz
lret
int3
xor
ret
out
fst
and
cli
out
std
sti
int
int
out
loop
fyl2xp1
in
jmp
iret
xor
out
fprem
in
aam
mov
cmp
sti
jmp
xchg
sar
ret
ss
rcr
fcom
loope
fsub
add
in
cli
sbb
fildl
jmp
int
xor
in
int3
out
imul
fld
std
cmc
loopne
call
test
xchg
cmc
iret
xor
call
repnz
faddp
ljmp
call
cmc
in
ror
xor
into
aam
aam
cmp
out
out
adc
jmp
xor
roll
imul
ror
cmp
shr
neg
xchg
cmp
out
mov
xor
out
xor
leave
fucomip
test
fdivrl
aad
add
in
stc
lret
ret
and
into
repnz
int
hlt
iret
sar
repz
rol
fcomi
std
fsub
in
add
or
loop
in
in
xor
xor
xor
xor
cld
divl
ret
add
add
fadd
fcom
fld
pop
into
shll
mov
jg
scas
add
sti
test
mov
xlat
lret
in
loopne
shl
cmc
iret
out
out
sti
cli
loope
stc
adc
cmc
leave
mov
jmp
test
mov
xchg
cmc
shl
aam
lret
aas
shr
sti
mul
icebp
push
xchg
fstp
in
sub
sar
jmp
lret
shl
lret
faddp
std
in
xlat
test
loopne
xchg
fdivr
out
int3
mov
repnz
test
out
idivl
xor
stc
rcl
in
loopne
icebp
ret
ror
fsub
cld
fucomi
in
shl
lret
into
ret
jecxz
shr
jmp
in
ret
stc
aad
idiv
movl
xchg
cs
fcmovbe
clc
loopne
xor
aas
in
test
cmc
test
lock
int
xor
cmp
cmc
cld
ret
stc
rol
fisttpl
out
out
int
ljmp
shr
rol
in
sti
leave
lret
fld
cmp
vpsubw
std
sbb
loope
loopne
xor
in
out
int
shr
out
repz
in
fnsetpm(287
fadds
loope
leave
test
xchg
loope
call
aaa
repz
cmp
cli
addb
test
shll
cmp
ljmp
cmc
ret
std
loop
ret
sub
shr
call
in
int
sti
xor
in
fchs
mul
rcr
lock
and
cmp
fucomp
mov
mov
aaa
loope
cmp
sti
ss
aad
rcl
iret
fdiv
out
jmp
stc
fisttpl
jmp
lock
cmp
sti
std
incb
ljmp
ror
loope
mov
repz
aam
add
ret
ret
cmp
mov
jmp
enter
cmc
out
cmc
iret
cmp
cmp
std
lock
cmp
popl
out
fildll
in
out
in
cmp
testl
stc
cli
ljmp
shl
cli
fadd
in
xlat
cld
cmp
shl
aad
test
mov
aad
repnz
shr
jmp
int3
cmc
cmp
cmc
xlat
cmc
orl
mov
rcl
loop
das
xor
test
xor
in
test
cld
ret
loop
fcomp
in
xchg
ror
shl
hlt
xor
icebp
ret
xlat
ret
fsub
testb
fisttpll
aaa
out
leave
repz
clc
int
aam
clc
sti
aam
vpmulhw
in
orl
xor
ss
out
rolb
hlt
xor
sbb
in
repz
loop
into
jmp
clc
hlt
cmp
into
int3
cmp
clc
std
sar
cmc
fldl
jmp
mov
aaa
cmp
repnz
aaa
fdivp
fcmovnbe
iret
loope
jecxz
sti
jmp
ljmp
out
out
lret
lret
cmp
aam
hlt
push
mov
aad
idiv
xchg
std
fsubp
aam
into
divb
hlt
hlt
repnz
loopne
xor
aad
out
fisttpl
repnz
icebp
ljmp
cld
lock
cmp
in
loop
shl
jmp
lret
loope
int3
jmp
into
shr
in
int
xor
xor
cmp
mov
rolb
fists
jmp
clc
sarl
int
fadd
lock
leave
loopne
and
nop
out
nop
in
rcl
xor
push
aas
inc
ret
flds
stc
clc
leave
in
fxch
into
cld
ror
loope
leave
lret
sbb
idiv
out
cmp
cmc
fiadds
clc
dec
fmulp
iret
ror
in
clc
xor
stc
jmp
fistpll
int3
clc
cmp
loope
loope
mov
loop
mov
shll
fcmovne
in
ljmp
faddl
cli
leave
std
jmp
out
mov
cmp
aam
cmp
leave
ds
into
shl
out
fcmovu
ror
mov
shl
icebp
lret
jmp
sti
ss
rol
cmp
xlat
aad
fucomip
hlt
fchs
fiaddl
call
rcl
ljmp
roll
loopne
cmp
addl
leave
add
add
aas
sarl
fcmovnbe
fcmovb
loope
add
inc
mov
jg
scas
add
out
xchg
mov
int
ror
out
aaa
fcmove
xlat
in
fstpt
hlt
in
mov
fsubrp
lret
loope
loopne
out
jecxz
ss
in
aam
adc
loope
xlat
cli
ret
in
rorl
jmp
in
fdiv
cmp
loopne
idiv
or
sub
les
decb
cli
cmp
fdivr
lock
cmp
cmc
xchg
or
sti
ljmp
stc
lock
int
out
out
xlat
in
lock
rcl
call
int3
in
in
fstp
in
mov
shr
ror
ljmp
sbb
aam
out
out
cmp
mov
in
sbb
mov
int
add
rcl
cmc
lret
leave
aam
jecxz
icebp
into
cmp
int
sbb
xchg
out
out
ror
not
repz
in
repnz
cli
loopne
sti
loopne
clc
into
f2xm1
leave
test
jmp
not
aad
hlt
loopne
rcr
cmc
sar
jmp
ljmp
nop
aas
in
sub
lret
leave
xlat
jmp
fchs
ret
icebp
cmp
loopne
xchg
testl
in
out
out
xlat
aam
icebp
cmp
aad
adc
cld
in
in
and
xchg
mov
repz
cmp
repz
neg
loop
out
test
mov
int3
ljmp
sub
test
incb
fmulp
fmul
xchg
fucomip
out
cmp
cmp
fcmovu
jmp
fcmovb
test
loopne
lret
out
xchg
iret
addl
leave
icebp
fadd
cmp
loope
ret
loope
mov
mov
out
call
aas
xor
cmc
sarb
sti
rcr
adc
iret
sar
bnd
fldl
leave
out
in
les
imul
lock
in
stc
enter
stc
xlat
cld
out
cli
addb
out
ljmp
in
fcom
cmc
cmp
rol
repz
jmp
out
add
fucomip
xor
icebp
out
xor
aad
xlat
cld
cld
aam
aam
cmp
lret
enter
mov
ss
loop
ss
leave
call
cld
in
test
xchg
out
nop
fucomip
test
cmc
enter
cmp
shl
out
frstpm(287
aad
stc
int3
ret
out
sub
jmp
jmp
cmp
ljmp
loop
cli
std
loopne
leave
leave
out
loop
int
int
loop
leave
cmc
out
lret
cmp
xchg
test
hlt
jmp
lret
lret
enter
lock
mul
shlb
cli
in
ds
stc
repz
iret
loopne
in
sbb
flds
cmc
hlt
call
lret
out
ds
fadd
loop
test
rcr
out
fsubrp
int3
lret
ljmp
iret
cmp
rolb
repz
orb
repz
mov
repz
out
aaa
cmp
std
ret
rcr
idiv
loopne
xchg
ljmp
testb
out
cmp
ror
xlat
sti
repz
out
jecxz
call
in
jmp
notb
fucomp
into
loopne
fucomip
sarb
repnz
bnd
fdivr
xchg
loop
lret
mov
xor
fcmovbe
aaa
cmp
repz
stc
fisttpl
xchg
cmp
shl
test
xor
lret
ss
xor
cmp
aam
or
cmpl
fld
rorl
in
into
jmp
clc
fdiv
shl
loopne
addl
fildl
jmp
ljmp
fabs
hlt
fdivr
cld
shl
fdiv
call
rol
iret
lock
xor
repz
leave
cmp
shr
ror
out
shl
aam
loope
aad
mov
in
xchg
out
ljmp
out
xor
into
test
jecxz
cli
inc
xchg
stc
in
mov
lock
mov
icebp
cmp
aad
jecxz
cmp
aad
in
stc
cld
ljmp
div
xor
int
clc
into
fnstsw
ds
lock
out
mov
jmp
iret
ret
jmp
aam
xlat
cmp
lock
roll
imul
jmp
into
aas
ror
rcl
sarl
xchg
lods
mov
insb
fdivrl
scas
add
cmc
cld
aas
inc
ret
mov
movb
xchg
jecxz
xor
shr
leave
out
leave
f2xm1
neg
cmp
loopne
mov
lock
cs
ret
idiv
out
xor
rcr
loop
sub
mov
fimuls
fdecstp
xor
hlt
aaa
lock
testb
xchg
out
stc
sti
int
mov
out
in
repz
aad
call
int
stc
cmp
lret
loopne
in
and
fimuls
icebp
call
int3
ds
loope
out
lock
out
jmp
fnstsw
in
jmp
lock
sar
cmp
loopne,pt
test
hlt
hlt
aam
filds
repnz
shl
lret
addb
and
xchg
int3
enter
loope
iret
in
enter
sar
std
cmp
testb
aam
sti
fadds
sti
in
loop
out
lock
shlb
lock
call
in
in
in
aad
out
xchg
clc
xchg
enter
xchg
ljmp
sarl
out
std
addb
fmull
lret
loope
int
leave
divb
fmul
ss
cmp
aad
rol
out
in
jecxz
leave
out
nop
loop
out
fisttpll
neg
xlat
int3
fst
divl
int
fdiv
ret
in
out
enter
repz
loope
lret
aad
cmp
hlt
lret
fnstsw
int
cld
in
jmp
in
fldl
lret
into
cmp
out
ljmp
rolb
mov
in
and
xchg
icebp
xor
aam
cmc
lret
lock
jecxz
sar
repz
ret
stc
icebp
out
xchg
xchg
leave
int
xlat
iret
cmp
repnz
cmp
in
xlat
sti
out
loopne
rcr
mov
neg
test
test
shr
into
cmp
fnstcw
icebp
fisttpll
addb
fisttpll
out
xor
div
repnz
stc
sar
fsub
ret
loopne
aam
test
lret
mov
icebp
int
incl
fadd
fnstsw
ds
out
cli
rcl
jmp
jmp
fcmove
xchg
aam
shlb
out
ror
fnstsw
cmp
loope
out
aad
loopne
test
repnz
ror
aad
cmp
repnz
cmp
out
clc
ret
in
xchg
test
addb
int
sub
out
aad
hlt
enter
fnop
jecxz
std
icebp
hlt
out
aad
ljmp
xchg
ljmp
enter
sar
cmc
out
fucom
aas
sti
loope
jmp
mov
mov
out
sub
ret
aam
in
cmp
and
int
cmp
out
xlat
fmulp
addl
int3
shlb
iret
fiadds
icebp
inc
cld
fiadds
clc
jmp
mov
in
stc
iret
cli
iret
ljmp
hlt
out
repnz
int3
inc
xchg
jmp
cs
jecxz
fmul
imul
ror
out
shl
cmp
cmp
or
out
in
fisttps
call
ljmp
stc
adc
call
enter
orl
ret
cmp
out
aam
stc
stc
loop
lock
sbb
fxch
fstp
mov
cmc
xor
in
out
fmulp
cmc
xlat
sarl
fadd
sti
cmc
rcr
or
ljmp
int3
test
cmc
xor
cli
test
add
jecxz
rol
movl
in
xchg
in
repz
stc
cmp
cmp
repz
in
or
roll
fsub
mov
into
lds
jecxz
cld
lret
int3
aad
fucomp
ffreep
call
sti
decl
cli
sti
in
repz
imul
int
lret
enter
into
xor
ret
in
int3
mov
call
jmp
clc
xor
sti
xor
repz
shr
lret
lret
shl
aas
xchg
aas
in
jecxz
cli
fimull
lock
loopne
icebp
xor
ljmp
lock
out
shl
cmp
std
mov
stc
jecxz
iret
rclb
sti
ror
aad
in
cmp
cmp
ljmp
rorl
add
add
rcl
aad
aad
shll
inc
mov
loope
jle
add
jecxz
shll
xor
cmp
cli
test
cmp
adc
xor
enter
loop
fists
into
bnd
in
roll
rcr
fyl2xp1
sub
out
xchg
mov
stc
idivl
int3
xor
clc
fmulp
lock
fcomi
test
loope
loopne
leave
mov
jecxz
sar
in
in
out
lock
xlat
cmp
cli
add
into
std
loopne
in
aam
mul
into
cs
iret
stc
fnstcw
fcmovu
testb
loopne
out
sti
out
out
repnz
in
in
xor
rcl
call
shl
fadd
jmp
loope
lock
in
clc
rol
jmp
icebp
icebp
ds
out
into
test
adc
loop
call
in
xchg
in
rcl
xlat
cmc
rcr
call
ffreep
fnstsw
add
cmc
xor
fcmovne
iret
mov
dec
call
cli
clc
in
fucomp
icebp
stc
flds
cld
test
into
lock
xchg
fucom
sub
shrl
sub
not
cmp
adc
loopne
out
loopne
fsqrt
mov
adcl
cmp
fcmove
int3
cmp
repnz
lock
fdivrl
cmc
mov
fsincos
mov
loop
shr
clc
xlat
xor
ss
test
cmp
test
xor
in
addl
ror
aaa
std
icebp
jmp
cmp
cmp
hlt
loopne
stc
sar
fcmovu
lds
lret
fcmovnbe
out
fcom
aad
into
ror
xlat
repz
iret
cmc
repnz
addl
iret
ror
shl
ljmp
ror
aad
rcl
clc
sti
shl
hlt
cli
cli
loope
add
nop
jmp
repnz
repnz
int
xlat
in
rcr
addl
call
repnz
cmp
int
aas
sti
ror
sti
neg
loopne
test
out
lock
in
rolb
int3
ret
repz
ljmp
aas
test
into
fisttps
call
aad
in
in
in
jmp
cmc
std
repz
aam
jmp
ljmp
loope
les
jecxz
jmp
sti
out
fcmovnb
inc
aad
enter
in
in
in
repz
xor
aaa
cmp
out
cmp
idivb
fcmovnbe
cmpl
test
fisttpll
in
ror
aaa
ror
xor
int
sar
in
in
dec
fimull
lret
in
call
cli
rcl
icebp
sbb
mov
dec
sti
rolb
into
test
cld
repnz
iret
std
fmuls
call
out
repz
out
xor
fnstsw
repz
sti
sti
cli
out
fadd
loope
jmp
decl
xchg
mov
int
ret
call
loope
sti
ret
out
cmp
test
ret
lret
test
out
loopne
call
sarb
cmp
cmp
aad
fcmovb
loop
hlt
fdivr
lret
lea
mov
loop
div
aaa
shr
xor
out
into
sarb
clc
xchg
ljmp
xchg
shr
out
call
add
fstp
cmc
in
in
out
mov
lock
cmp
into
iret
in
out
loopne
jecxz
dec
jmp
hlt
in
xor
int3
fsubr
filds
shl
fcmovb
in
cli
and
loope
dec
int
sti
cld
xor
int3
sar
std
in
ret
cli
lret
mov
out
xchg
mov
shl
call
fcmovnbe
aad
aas
sti
ret
repnz
mov
in
loop
in
int3
in
xchg
int3
cmc
fld
in
in
fadds
out
cmp
std
call
addl
ljmp
aaa
sti
in
into
in
repnz
fcmove
fimuls
lock
in
xchg
shl
out
jmp
rcl
xor
std
cli
roll
mov
fiadds
sub
sar
neg
sar
cli
test
in
loop
int3
mov
mov
int
in
stc
std
fcomp
xlat
cli
xor
fistpll
lock
je
xor
add
mov
imul
add
jmp
int3
rol
aad
aad
fpatan
int3
and
fistps
addr16
out
jle
add
sti
inc
ret
cmc
lock
in
mov
aam
clc
in
div
jmp
int3
incl
and
call
test
into
hlt
cmp
ret
shr
clc
lock
fisttpll
jecxz
jmp
aad
into
iret
fcomp
aas
fidivrl
enter
inc
sub
vpmulhuw
call
jmp
xor
xorl
aas
icebp
fnstsw
add
loopne
loope
cld
xchg
xor
jmp
fdivr
fcmovbe
testl
ret
mov
xchg
xchg
repz
ror
add
loope
fnclex
mov
mov
jecxz
mov
ljmp
xor
enter
xlat
add
aam
sti
and
jmp
out
std
in
int3
jecxz
stc
aad
in
idiv
icebp
cmp
fdivr
sarl
in
xchg
clc
hlt
xchg
ljmp
rol
xor
in
fscale
sti
rcr
jmp
loop
aam
lds
nop
jmp
in
in
iret
cmp
std
int
ret
cmc
flds
ljmp
shl
sub
out
ljmp
in
not
fdiv
out
aas
cmp
out
fdivr
call
nop
in
in
out
idiv
fcomp
call
int
xlat
stc
icebp
std
call
jmp
xchg
xor
in
in
lret
out
cmp
ds
faddp
test
clc
enter
std
xchg
int3
enter
ss
div
or
sub
idiv
loopne
ds
fcmovnb
xchg
mov
cmp
iret
into
repnz
rcl
cmc
ljmp
or
iret
test
out
fnstenv
divl
fsqrt
fnsave
not
lds
clc
sti
mov
lret
loopne
in
shl
cmp
fmul
icebp
fldlg2
xor
loope
xchg
sub
test
ljmp
mov
cmp
xlat
cmp
clc
call
xchg
hlt
jecxz
xabort
ljmp
cmp
out
testb
sub
mov
mov
int3
ljmp
fdiv
out
ret
hlt
jmp
int
xchg
bnd
aam
loopne
ss
fsubrp
sarb
lock
cli
test
aad
mov
fcmovne
int3
mov
int
ror
jmp
fucom
cmp
cmp
cli
sti
hlt
loopne
lret
mov
fucom
filds
lret
icebp
rol
ljmp
cmp
in
clc
lock
fldl
mul
in
icebp
ljmp
xor
call
cmp
cmp
iret
mul
in
out
ljmp
aam
out
enter
xor
cmc
xlat
in
lret
fcomi
sbb
std
mov
fildl
push
ret
enter
enter
in
rcl
cmc
ret
push
in
out
sub
lret
xor
lret
iret
ljmp
adc
stc
in
mov
fcmove
out
rclb
call
hlt
out
roll
cmp
fildl
call
xchg
loope
sub
out
call
fucom
sarl
in
ret
loop
fiadds
int3
roll
in
xor
xor
fdivp
neg
cmp
fcomip
out
repz
repnz
xlat
jmp
jecxz
mov
and
fidivs
xor
icebp
xor
std
aad
lret
in
iret
filds
out
in
test
sti
shl
addb
shr
stc
xor
cmp
cld
xorb
in
cld
fmulp
sub
aam
xchg
in
out
lock
fdivs
inc
std
enter
in
loope
orb
repnz
ror
stc
fcomi
aas
cmc
cld
cld
repz
cli
enter
std
fildl
out
fsqrt
ss
lret
xor
out
ds
rolb
jecxz
loopne
sti
jmp
jecxz
int3
nop
int
ret
hlt
cmp
not
ljmp
ret
lock
sar
loope
in
rorb
xor
xor
cmc
cmp
aam
mov
in
mov
xchg
in
mov
mov
mov
pop
leave
ret
push
mov
push
push
mov
mov
mov
jmp
into
rol
fcomp
fcomps
inc
adc
jg
jg
or
jle
out
stc
ret
jmp
incl
call
stc
call
in
out
ret
divb
hlt
out
lret
cld
xor
fchs
idiv
repnz
enter
fabs
sti
fisttps
int3
aad
out
aam
into
clc
repz
mul
test
xchg
fcmovne
xchg
mov
int
ror
std
sti
shl
fadd
ret
aad
fstp
shr
xchg
in
ror
loope
repnz
shr
int
xor
hlt
test
fadds
into
nop
out
xor
not
das
iret
rcl
sbb
xlat
stc
push
lret
cmp
loopne
ljmp
lret
jmp
in
aaa
cmp
lret
aam
into
add
cld
test
test
aad
xor
cmp
std
addl
add
testb
shl
lret
int3
xor
out
sar
not
out
shl
lock
xchg
int
dec
std
loopne
out
jmp
imul
cmp
pushl
cmp
sbb
ret
cmp
jmp
mov
shl
leave
xor
in
leave
rcl
cmp
jmp
int
xchg
ffreep
stc
mov
and
call
xor
aad
fdivrs
int3
fnop
div
loop
rolb
sub
dec
shl
loopne
xor
xor
clc
xor
aas
frstpm(287
out
xchg
rol
std
fadds
enter
ljmp
lock
clc
iret
test
fcmovu
xchg
in
and
out
out
loope
stc
xor
enter
jmp
loop
aam
ret
mov
roll
fsubr
xchg
lret
repz
out
in
iret
int
mul
lret
rolb
mov
aad
inc
int3
ljmp
jecxz
fnstcw
cmc
fmul
lret
rcl
clc
test
fsub
loopne
loopne
test
ljmp
iret
repz
jecxz
xor
imul
cmc
rcl
leave
stc
test
rcr
stc
into
int3
in
xchg
mov
lret
loop
ss
xlat
xor
shl
fld
fcomp
aas
out
repz
nop
adc
xor
cmp
aam
loopne
std
xchg
rorl
repnz
std
lock
das
in
call
add
cld
shr
xlat
xchg
orl
loope
fdivs
int
int3
rcl
cmp
cli
out
in
fsubrp
shl
lret
loopne
ljmp
mov
lret
out
cmp
shrb
ss
out
cld
sti
mov
test
xchg
mov
leave
orl
ret
int3
cmp
int3
cmp
flds
and
out
int
mov
rcl
in
into
ss
cmp
aad
cmp
cmp
loope
clc
in
stc
xchg
mov
roll
xor
out
out
in
and
clc
std
hlt
adc
int3
loop
int3
loopne
in
xor
leave
repz
icebp
xor
sbb
cmc
or
dec
test
test
jmp
std
int3
cmp
cmp
aas
test
sti
movl
jecxz
cmc
clc
das
hlt
int3
lock
not
xor
cld
in
sti
loop
loop
xchg
iret
in
test
ret
call
lret
into
sub
rolb
test
sti
mov
xchg
mov
fcomip
aad
aad
cmp
cli
lock
flds
in
loop
rorb
stc
xor
icebp
jecxz
cmp
hlt
cmc
cli
loope
mov
jecxz
in
das
call
repz
sti
aad
dec
cld
movl
movl
jmp
rcl
rcr
fstp
aam
cmp
lods
andl
or
jg
or
jle
ret
fxch
addb
leave
jmp
ror
sub
xlat
into
icebp
leave
int
repnz
lock
stc
test
test
mul
cld
fistl
out
mov
cmc
cmp
aas
rorb
loop
out
cli
repnz
call
iret
cmc
aaa
loopne
xlat
and
rorb
in
loop
mov
xchg
sub
cmc
ret
sti
xor
hlt
sar
aam
cmp
sub
ljmp
rol
xor
in
xlat
lret
lret
int3
int
loope
shl
out
xlat
mov
lock
out
xchg
repnz
cmp
xor
ljmp
hlt
sub
xlat
loopne
fstp
int
and
mov
ror
in
lret
lock
fdiv
enter
test
int3
loopne
xor
ror
fdiv
cmp
fnstsw
cmc
clc
ret
ds
repz
out
loope
xchg
out
mov
cmp
leave
cmp
repz
out
int
mov
mov
jmp
iret
xchg
out
in
fdiv
jmp
repz
fucomp
xorl
repz
lret
stc
jmp
lret
orl
cmp
icebp
xor
jmp
sbb
cmc
jecxz
test
lret
xchg
iret
lock
cmp
lock
out
sti
ljmp
test
out
fucomi
in
out
xchg
cmc
ret
ljmp
out
adc
out
hlt
mov
sti
cli
lret
sbb
lret
repnz
sarl
shlb
cli
in
repz
cmp
call
lret
repz
mov
in
in
xor
int
int
loope
cmp
out
clc
xchg
jmp
jecxz
clc
jmp
loope
sub
aaa
ret
jmp
ss
sub
iret
sti
sar
in
in
stc
rcr
cli
sti
ljmp
stc
clc
shl
hlt
int
loopne
in
shl
sarb
rcl
cmp
loopne
rorb
shr
jmp
int
fcmovu
std
ret
cmc
leave
fcmovnu
ljmp
sub
into
sti
sar
cmp
lret
aas
fildl
inc
neg
stc
ror
shr
sub
sub
hlt
lret
fxch
std
cld
testl
shl
into
not
loop
aaa
cmp
hlt
not
cmc
fcomip
ret
ds
jmp
fcmovb
mov
icebp
xchg
out
adc
in
rcl
in
cmp
xlat
cmp
aam
rorl
lds
sub
xor
cmp
fmul
iret
sar
test
test
out
aam
fmuls
mov
aaa
icebp
ss
jmp
clc
xor
cmc
cld
xchg
hlt
mov
std
fyl2x
faddl
leave
stc
cld
lock
iret
into
out
not
hlt
cli
aam
enter
loop
nop
adc
shl
repnz
out
xlat
aaa
shr
in
repnz
fdivs
out
cmp
cli
jecxz
adc
fninit
repnz
aaa
enter
fxch
cli
std
xor
fcmovnb
idiv
aam
popl
dec
aaa
xor
cld
fdivp
loopne
jmp
cmp
hlt
mov
mov
lret
out
cli
out
out
fcomip
std
ror
sti
clc
loope
leave
call
fcmovnbe
xchg
nop
ret
shll
fcmovne
cmp
cmp
xor
rolb
mov
sti
xchg
int
sbb
cmc
lret
lret
sti
call
repnz
clc
aad
fnstcw
jecxz
xchg
ffree
iret
mov
imulb
out
not
out
fptan
ds
int
cmpl
cmc
cmp
movl
jne
subl
mov
add
mov
xorl
xor
add
jmp
sarl
ret
ffree
in
jns
pusha
mov
repz
or
jle
loop
or
in
hlt
mov
cmc
rcl
fsubr
cmp
cmc
loope
fucom
sti
repz
in
loopne
hlt
out
mov
loope
lock
shl
cmp
test
cld
incb
fcmovne
loopne
xchg
into
in
enter
call
lret
loopne
cli
xchg
fidivrl
in
loop
add
mov
int
in
std
mov
rol
cmc
fmul
repnz
xor
addl
filds
xchg
ljmp
cmp
hlt
iret
fcmovnbe
fdivrl
xor
out
fsubrp
in
mov
aam
fmul
cli
cmc
rcr
cli
lret
test
clc
lock
repz
in
jmp
int
and
cmp
cmc
das
cmp
fdiv
xlat
loop
out
aas
leave
out
or
out
test
shll
hlt
rcl
lret
fcmovbe
hlt
aad
hlt
in
faddp
sti
test
cmp
decb
out
enter
lret
ljmp
cli
ret
ljmp
xchg
call
hlt
ljmp
ds
decl
fiadds
fld1
cmp
in
xlat
rcr
xorb
int3
ret
clc
shl
shl
call
leave
enter
cmc
xor
shl
xor
in
fmul
int3
aam
repz
stc
enter
in
cmp
int3
shl
sar
aam
stc
imul
cmp
lock
cli
loopne
out
std
cld
loope
hlt
out
divl
aam
mul
faddl
icebp
in
out
in
std
cmp
int3
filds
out
lret
lret
in
idivb
into
and
stc
hlt
leave
sbb
ret
xchg
xchg
sub
sub
int
sub
cmp
stc
idiv
aaa
loope
idiv
enter
jecxz
sbb
iret
mov
aaa
int3
cmp
fcmovbe
cmp
into
clc
loope
out
cmp
popl
mov
imulb
xor
out
aaa
into
out
fsubr
cli
flds
cld
xchg
popl
clc
loop
aad
xor
out
fsincos
fucomi
rcr
vpsrad
jmp
test
enter
sar
ljmp
in
rcl
cmp
faddl
in
roll
nop
repnz
loope
int3
lock
cli
into
lret
fdivrp
cli
loope
rcr
filds
into
sti
les
lock
repnz
cli
xor
std
leave
leave
fdiv
sub
ret
fildl
incb
in
cmc
shl
xor
clc
int3
fdivrs
ss
lock
mul
clc
fcmovnu
loopne
out
test
in
loope
clc
rcl
leave
xlat
cmp
call
fucomip
loope
rcr
aam
leave
in
jmp
xchg
in
ffreep
out
jmp
cli
rcr
std
out
adc
ds
lret
in
out
sbb
repz
imul
cmp
call
in
cld
iret
mov
ret
ret
int
sti
std
jmp
in
in
in
loopne
rol
cli
cli
aad
int3
jmp
xor
rcr
loop
in
int
fucomp
fisttps
aam
cmc
in
out
shl
ljmp
stc
aas
leave
adc
in
lock
int
shl
xor
ljmp
rcl
loopne
fcmovb
test
movl
shr
cmp
in
cld
fdiv
repz
add
out
fsub
fmulp
sub
in
xor
aad
lock
std
in
sar
ret
idivb
icebp
or
leave
mov
lret
shr
ss
aam
cld
xor
aam
fdivp
faddl
call
sbb
out
rol
mov
andl
add
adc
jmp
rcl
aad
rcrl
aad
and
jg
or
jle
jmp
ss
lock
xlat
std
in
cmp
cmpb
jmp
out
cmp
ror
xchg
lock
ret
cli
shll
in
cmp
rcr
aad
std
mov
shl
cli
mov
lret
cli
in
call
mov
loope
div
out
cli
aaa
imul
cmp
iret
loop
fldl
in
xchg
dec
lret
cs
idivb
loope
repnz
loope
jmp
fildl
jmp
out
cmp
in
repnz
hlt
in
cmp
and
out
enter
repz
in
aad
lock
rcl
into
out
enter
ret
std
fcomp
loope
decl
lock
les
cmp
sti
fdiv
fdiv
testb
fucompp
roll
iret
decl
rcl
vcvttpd2dq
aad
fdivp
rcr
fildl
enter
mov
orl
cmc
ret
jmp
into
test
test
jecxz
fcomp
mov
cmc
iret
out
out
aaa
imul
aad
lret
fdiv
cli
aas
cmp
in
in
lret
in
xchg
in
out
clc
repnz
aam
out
out
lret
aas
ds
jmp
and
loope
fadd
cli
lds
std
jmp
cmp
aam
aaa
out
fidivrs
cld
repz
ret
lret
lret
jmp
cli
xchg
nop
into
xchg
out
repnz
ss
call
clc
loop
iret
adc
cld
fiaddl
lret
in
loope
and
xor
out
rcr
std
cmp
test
fldl
jecxz
mov
loope
xchg
xchg
mov
ret
jmp
std
stc
fsubr
incl
aam
test
xchg
jmp
in
in
in
loope
xor
call
fdiv
div
adc
sti
xor
cld
mov
in
mov
cmc
clc
cmp
sti
not
in
icebp
fnstsw
in
in
xchg
sti
leave
clc
not
mov
popl
icebp
int
jmp
stc
cmp
ljmp
jmp
aad
mov
lret
jmp
ljmp
into
not
in
stc
out
xlat
mov
addl
test
loope
decb
rcl
cmp
out
call
loopne
fucomp
div
neg
loop
loop
test
fadds
xchg
jmp
fmul
fcom
sub
clc
xor
mov
decl
out
repnz
mov
jecxz
lock
cli
loop
xlat
loope
ret
shl
sti
out
icebp
mov
lret
in
enter
int3
jecxz
test
repnz
xor
test
fimuls
xlat
cmp
rcr
cmc
leave
shl
in
add
stc
int3
fadds
lret
mov
xor
out
icebp
out
fst
lock
fdivr
fsub
fmuls
xchg
rolb
into
fnsetpm(287
lret
aad
hlt
aas
in
cmp
loop
loopne
cli
out
shl
iret
shr
int
aam
fldl2e
out
not
int3
cmp
out
in
loope
stc
mov
out
aaa
imulb
out
jmp
ret
ret
adc
test
decl
std
test
jmp
div
cmc
loop
cmp
repz
fdivrp
xlat
xlat
xchg
mov
lock
int
ret
int3
divb
lret
loope
jecxz
jecxz
mov
mov
fmulp
in
fabs
jecxz
int
hlt
leave
clc
in
cmp
icebp
ljmp
ds
fcomip
out
loopne
nop
out
loopne
jmp
into
test
cmp
loope
out
ror
ror
ret
mov
xlat
jecxz
in
rcr
lret
loop
shl
fcmovbe
fnstcw
repnz
movzwl
sbbl
not
movl
and
mov
mov
jmp
xorl
mov
pushl
call
test
je
leave
ret
push
mov
sub
subl
jmp
leave
xlat
rcr
mov
cwtl
push
repz
in
dec
sub
jg
roll
jle
idiv
cmp
call
out
test
jmp
out
lret
out
clc
out
aaa
cld
cmp
icebp
repnz
clc
hlt
lock
loopne
xchg
mov
rcl
into
xlat
aam
out
fsqrt
iret
repz
cli
hlt
out
faddl
idiv
lock
into
shl
repz
divb
imul
repnz
cmp
icebp
in
loop
cld
jmp
dec
mov
call
sarb
aam
clc
xor
fldlg2
repz
fcmovnb
jecxz
mov
jmp
mov
jmp
out
stc
in
into
aad
neg
cmp
loopne
fnop
stc
mov
loopne
jmp
jmp
sub
shl
call
xor
incb
sti
rcr
cmp
xlat
addb
rcll
xor
clc
xlat
lret
ljmp
enter
ljmp
std
in
rol
cli
std
loope
stc
sti
test
addb
in
mul
lds
xlat
cmp
int3
xor
shr
std
bnd
cmp
call
jmp
sub
cmc
aam
out
in
call
cli
repz
flds
cmc
adc
fcmovne
test
aaa
fucompp
xor
ss
lock
out
in
loop,pt
call
jecxz
stc
mov
int3
repnz
repnz
jecxz
rcl
aam
roll
repz
cli
test
les
iret
iret
in
xor
sub
aaa
cmp
int
lock
repnz
fyl2xp1
loope
fcomp
ljmp
xchg
xor
icebp
ds
aad
shl
hlt
sti
repz
mov
loop
out
cmp
loopne
loop
lret
xor
test
cld
cmp
in
loopne
loopne
mov
jmp
divb
out
ss
loope
fdivr
jecxz
xor
xchg
loop
fsub
rclb
in
in
enter
int
aad
cmc
cmp
into
aad
ret
or
out
xchg
out
sub
aad
cs
cmp
fcmovnu
ds
cmc
sti
cmp
in
xchg
in
in
lret
fsubr
in
int
shl
rcr
cmc
icebp
stc
cmp
test
roll
repnz
shl
cli
fsubrp
iret
enter
xlat
repnz
aas
mov
out
cli
test
jmp
icebp
rcr
rcr
cmp
aad
aam
out
repz
fld
in
loopne
icebp
leave
sbb
loop
call
fstpt
in
out
shl
clc
hlt
neg
mov
movb
shl
fsub
fcmovb
rol
sti
idiv
jmp
mul
rcr
in
sub
xlat
xchg
lret
nop
rol
into
sub
fdiv
cmp
aaa
leave
hlt
int
jmp
into
cmp
mov
test
out
in
lea
sarl
ret
std
fsub
cmp
loop
cmp
shl
call
in
test
call
int3
lret
xor
repnz
cli
xor
repz
sarb
icebp
aaa
add
in
mov
fcomp
jmp
icebp
lret
hlt
loope
ljmp
repnz
cmp
test
rcr
ret
xlat
jmp
lock
ret
xor
repnz
out
iret
repz
ret
xlat
aas
fdivrp
xlat
fimuls
in
mov
lret
fcmovb
ret
loopne
shl
repnz
fdivrp
xchg
fmulp
sbb
call
xor
loopne
aaa
lock
stc
jmp
jmp
jmp
repnz
ret
jmp
int3
xor
ss
and
fxch
ror
fucomp
in
mov
roll
in
shr
int3
in
clc
std
cmp
jecxz
pop
and
fisttpl
leave
jmp
std
sar
cmp
fcomip
into
shl
loope
mov
call
mov
out
mov
out
xor
hlt
cmp
into
cld
ror
ljmp
filds
and
mov
add
pushf
clc
movl
mov
sub
jmp
mov
fstp
enter
imul
dec
jg
roll
jle
jmp
rcl
std
int
leave
sbb
loope
cmp
repnz
leave
lret
jecxz
add
xchg
lock
out
lret
enter
add
les
lock
fmuls
xorl
xor
ds
lret
cmp
hlt
fnsetpm(287
filds
xchg
xchg
test
shr
aam
int3
int3
int3
lock
out
out
call
in
jecxz
clc
in
jecxz
mov
mov
iret
in
ret
xor
in
cld
fsub
clc
test
icebp
adc
stc
int3
ret
loopne
adc
mov
xor
cli
clc
hlt
cmp
jecxz
rcl
test
in
cli
in
out
iret
lret
repnz
cmp
jmp
iret
rcr
aam
clc
repz
loopne
loopne
stc
in
rcr
adcb
xlat
xlat
cld
fdivrp
cmp
cli
cmc
les
cmc
clc
lret
out
loope
leave
lock
xor
mul
vpmullw
xor
faddl
rol
xor
or
icebp
loope
das
out
ljmp
fstp
cmp
jmp
jecxz
cli
out
jecxz
repnz
fucomip
cmc
xor
lret
cmp
cmp
lock
hlt
out
xlat
clc
std
xchg
cli
aad
out
fstp
decb
fdivrs
jmp
or
ret
ljmp
jmp
std
fsubp
icebp
stc
sti
iret
jmp
std
out
fdivr
fidivrs
xlat
fsubr
shr
in
out
lret
xchg
loope
fldlg2
out
fidivrl
out
cmp
ret
out
sar
out
test
jmp
enter
stc
int3
dec
aad
sti
cmp
cld
sbb
cmp
flds
fcomi
nop
testb
rcl
sarb
aam
repz
cmc
out
out
in
out
int3
nop
rorl
enter
cli
leave
out
fiaddl
fcom
faddl
mov
in
icebp
or
sub
int3
in
call
out
rcl
mov
ljmp
xchg
in
xchg
int3
cmc
int3
test
leave
fcom
lret
incl
test
cli
sbb
xchg
xchg
rorb
iret
sti
les
fmul
sar
xlat
call
fdiv
test
jmp
jecxz
cmc
aam
in
idivb
neg
div
cmp
in
cld
rcl
fsubr
jecxz
ljmp
sub
sar
jmp
cmp
jecxz
jmp
in
jecxz
iret
std
mov
lock
iret
lock
aaa
in
aam
xor
int
out
add
test
clc
icebp
test
divl
leave
fnstcw
repz
jmp
out
shl
in
cmp
out
cld
call
rcl
rcl
repnz
ljmp
cmp
int
fxch
xchg
into
out
mov
iret
loopne
jecxz
xor
xor
int
cmpl
testb
clc
into
jmp
fsubrp
xor
loop
lret
cmp
iret
shl
fildl
nop
mov
ret
in
in
ror
aad
rcl
rol
out
testl
loopne
sub
cmp
jmp
cmp
xchg
fsubrp
fiadds
stc
xchg
mov
adcl
aaa
ljmp
xlat
fdivrp
cmp
jmp
mov
fsubp
shl
hlt
in
into
stc
stc
cmp
int3
fstp
ret
ljmp
loop
lret
out
icebp
cmc
test
cmp
aam
fdiv
xorl
cmc
cmp
orl
cld
iret
in
jecxz
out
int
repnz
jmp
add
fnstsw
loope
int
enter
rcll
xor
fdivrs
jmp
stc
shr
cmp
lret
leave
lret
loope
cmc
cmp
iret
ljmp
in
fsub
hlt
xchg
inc
cld
andl
mov
inc
mov
cmpl
jne
push
push
push
call
cmpl
jb
inc
jmp
lret
aas
fst
fcmove
fidivrs
mov
push
cmpl
add
enter
rol
filds
iret
rol
leave
enter
enter
fcmovnbe
jecxz
sar
leave
cmp
out
loop
int
int
call
enter
hlt
rcl
filds
div
orl
les
xor
fld
aad
leave
loope
cmc
call
ret
aad
fimuls
nop
in
loop
std
repz
out
clc
xor
iret
sti
cmp
cmp
ds
mov
testb
out
mov
repz
out
out
xlat
enter
cld
cli
clc
ret
mov
clc
cmp
fstp
ror
xchg
xchg
cmp
fcomp
dec
in
xlat
aad
addl
mov
fstl
in
dec
faddl
out
aam
out
adc
mov
sub
int
hlt
idivb
cmp
cmp
aas
fiadds
iret
loopne
decb
das
divb
cld
sar
jmp
fucom
flds
ljmp
lret
out
repz
repnz
iret
xor
hlt
aaa
xlat
ds
imul
jmp
sbb
cld
lock
lret
lret
lret
xlat
roll
fcos
imul
cld
jecxz
enter
mov
call
cli
xor
cld
cmp
aas
addb
out
in
faddl
xchg
hlt
hlt
out
das
jmp
cs
into
hlt
cli
cmp
rol
aad
aas
ret
repnz
fsubr
incl
test
repz
sti
xor
cmp
fsubr
push
sti
loope
jecxz
cli
jmp
in
out
repnz
fnstenv
lock
dec
cmp
cmp
stc
xchg
xlat
mov
ret
mov
out
rorb
repz
cmp
cmp
aaa
iret
ds
rcl
out
ret
loope
mov
repnz
jmp
ror
shl
neg
cmp
sar
rol
out
fdivr
les
repnz
icebp
xchg
fildll
leave
in
in
icebp
fsin
fnstcw
cmp
sar
rorb
fmull
jmp
xchg
xor
rol
jmp
leave
cmp
clc
idiv
sarl
and
in
lret
loopne
out
out
iret
rcl
test
mov
cmp
loopne
cld
sti
sti
stc
decb
xchg
in
iret
xor
aad
hlt
xor
shr
cmc
cmp
hlt
sti
jecxz
test
lret
fmul
mov
fucomip
fucomp
lea
xor
leave
fidivrs
rcr
hlt
xchg
repz
cli
loopne
in
int3
ret
in
lock
in
out
out
fmul
in
int
in
cmp
ffreep
xlat
cld
ret
in
leave
mov
lret
ljmp
int
rcl
in
call
out
ret
cmc
sub
mov
xor
cli
fnstenv
aad
cli
out
ret
aad
test
decl
out
icebp
shl
shl
int
int
in
std
cmc
clc
ds
out
mov
test
lret
xchg
test
mov
jmp
test
call
clc
test
repnz
repnz
test
mov
lock
xor
sti
cmp
lret
std
std
ret
loop
xchg
stc
ljmp
out
int3
mov
jmp
loop
aad
in
fsubrp
cmp
ret
fscale
enter
cli
les
lea
shr
in
int3
loop
fstpt
cld
out
in
ljmp
xchg
lret
xor
in
test
ds
dec
ret
aad
flds
out
in
adcb
shl
cmp
xabort
call
clc
lock
test
out
idiv
in
in
ljmp
jmp
out
cmp
cmp
in
fcomi
rcl
fcmovbe
mov
lret
lret
nop
xlat
loope
repnz
divl
into
test
fcompp
aas
cld
ret
les
in
repz
mov
in
rcl
cli
leave
lea
movl
jmp
aam
aas
ret
lret
fst
fnstenv
lods
pop
inc
inc
sub
insl
and
jg
roll
jle
sarb
aas
out
sar
test
xchg
xchg
fmull
ror
xor
int
in
xlat
ret
out
clc
fsubp
cli
test
fldlg2
rclb
idiv
fucomp
aas
loope
rcl
cld
cmpb
xlat
sti
repz
in
loope
fsub
mov
jecxz
mov
les
xor
jmp
roll
xchg
std
xchg
nop
fisttps
das
das
cmp
in
jmp
iret
loop
cld
call
fsubrp
sar
cmp
repnz
into
sub
iret
sti
cmp
jmp
fiadds
xlat
mov
fucomi
fcomi
cld
hlt
cld
fdivp
out
xor
not
iret
cmp
out
sti
div
hlt
clc
shl
stc
xlat
int3
mov
loopne
xchg
popl
icebp
rcl
xor
cmp
jecxz
cmp
idiv
fimull
xchg
loop
shl
jecxz
ret
in
out
xor
out
jecxz
iret
stc
inc
neg
jmp
sti
nop
loope
repnz
ljmp
repnz
sar
jecxz
xlat
test
fcmovbe
jmp
nop
int
int3
in
adcb
xlat
cld
fmul
repnz
add
rorl
iret
adc
lock
aaa
int
rcl
cmp
aad
cmp
mov
lret
mov
rcr
xchg
shl
sub
out
sar
xor
out
fdivrs
mov
loope
enter
fsubp
out
xor
shl
into
sti
aam
xlat
xlat
int
aas
fld1
in
out
out
mov
decb
jecxz
xor
cli
stc
int
in
aas
out
test
rol
jmp
mov
roll
ss
sarb
lock
aam
or
xchg
loope
leave
lret
aam
das
iret
in
enter
xor
cld
rol
mov
mov
neg
jmp
or
in
fnstcw
fyl2x
repz
fsub
enter
rcl
sti
xchg
loopne
xchg
or
fisttpll
aad
shl
leave
out
fcom
aas
cmp
icebp
int3
int
cmc
shl
repz
hlt
testl
xor
out
int
rcl
in
out
lock
test
hlt
ljmp
mov
aaa
ret
in
cmc
aas
cmp
hlt
fdiv
enter
cld
cld
mov
in
sti
fucomip
loope
in
jmp
fscale
iret
ds
repz
cmp
sti
stc
jmp
cmp
repz
loop
icebp
cmp
lret
iret
fstp
clc
xor
fistpll
lock
hlt
test
mov
in
jmp
xor
out
rcl
lret
std
cld
sarb
fsubp
stc
stc
jecxz
ret
in
sub
int3
in
jmp
std
clc
not
loope
int
fadd
repz
mov
shr
int
jmp
cmpb
lret
dec
ret
mov
xchg
std
in
int3
out
jmp
fdivrs
vpmuludq
enter
fdiv
cld
rcl
mov
in
int3
sti
cld
clc
call
testb
int3
out
int3
ss
icebp
sti
rolb
leave
loop
fnclex
rcr
push
loopne
jmp
std
fstpt
ljmp
loop
leave
hlt
clc
out
clc
mov
xchg
in
rol
divb
into
int
lret
rol
cli
xchg
fadd
xchg
ljmp
in
in
cmc
iret
mul
jmp
ss
out
aam
xchg
or
shr
cld
aad
repnz
fsqrt
lds
cmp
lret
cmc
hlt
in
lock
aas
fcmovnu
sti
call
adcb
in
hlt
cli
lock
lock
jmp
in
aas
jmp
jmp
vcmpss
fcoml
hlt
in
out
fucom
into
fnstenv
sarb
hlt
iret
in
rcl
adc
out
mov
div
jmp
jecxz
ss
jmp
adc
stc
fucom
sbb
call
inc
or
add
add
add
add
or
cmpl
jne
push
push
push
pushl
call
cmpl
jne
xor
add
inc
mov
cmpl
jb
neg
mov
sbbl
push
and
lea
andl
mov
neg
jmp
rcl
xlat
fcom
push
outsl
bound
mov
roll
jle
addb
ret
not
lock
xor
ror
lock
ret
clc
shr
fdivp
out
stc
out
loop
adcb
fdivr
cli
fistpll
fcmovnu
adc
ret
sar
sti
cli
fsubr
movl
in
lds
rcl
into
int3
sbb
jecxz
cmpb
loopne
cli
in
out
lret
mov
leave
shl
cmp
loopne
cmp
shl
ret
fisttps
fldl
sub
lret
imulb
aas
cmp
sbb
fmulp
in
jmp
in
jmp
cld
int3
rorl
sub
xor
jmp
fcomp
into
icebp
iret
in
leave
loop
fxam
int
xchg
icebp
repz
lret
xor
in
cmp
imul
shl
aas
cld
push
enter
fisttps
test
cli
enter
int3
jmp
idivb
adc
shr
mov
cli
cli
iret
xchg
stc
in
xchg
into
xchg
mov
rcl
ss
repz
fucomi
xlat
out
aas
test
xchg
clc
test
repz
in
leave
icebp
xor
leave
jmp
rcr
lock
roll
mov
cmc
das
xor
call
enter
ror
std
aad
test
loop
mov
xchg
aam
sub
in
aad
repz
into
not
in
out
cmp
rol
ret
and
fcmovne
orb
rcl
fxam
int
cmp
into
aam
test
ds
sti
movl
test
sti
out
ss
stc
fdiv
int
shl
loope
aad
xchg
mov
in
cli
and
std
bnd
aam
sar
repnz
clc
ret
neg
mov
rol
mov
loopne
loop
xchg
out
cmp
out
jmp
ret
out
call
in
in
icebp
shrl
clc
jecxz
out
aam
clc
loopne
out
cmp
stc
inc
fmul
loope
test
cld
lret
std
out
aam
xlat
jmp
lock
int
rolb
sti
mov
lret
mov
xchg
loopne
into
loop
fcom
int
lret
adc
add
sti
fcmovu
fmul
mov
int
nop
cmp
mov
lret
shr
iret
rcr
ret
sti
shl
xlat
mov
jmp
shl
repnz
into
lret
idivl
leave
sarb
call
fdivp
decb
fdivrp
in
int3
loopne
mov
cld
clc
in
cmp
jecxz
hlt
repz
mov
mov
in
fcmovnu
xchg
in
mov
div
xor
xor
das
out
repz
lret
int3
out
test
mov
in
xchg
ss
aam
stc
rcr
iret
iret
iret
adc
fisttps
mov
lret
in
lret
xor
sti
cli
icebp
aam
loope
repz
fcomp
enter
in
test
in
int3
cmp
cmp
aas
cmp
repz
or
test
clc
mov
addb
cs
ret
std
int
xlat
out
shl
loop
in
in
fildl
mov
mov
jmp
jecxz
cmp
sarl
jecxz
out
cli
icebp
orb
adcl
fdivp
test
rcl
shr
addb
in
in
decb
xchg
repnz
test
aam
stc
fstpt
addl
out
icebp
lea
xor
cmp
in
cmc
cmc
cmp
lret
rcr
test
mov
int
lret
repnz
in
in
iret
out
aaa
inc
loopne
jecxz
lock
fcomip
call
leave
shll
fcmove
cli
out
loopne
in
xchg
cld
mov
xchg
fucom
rorb
mov
ljmp
cmp
clc
fninit
adc
cld
loop
jmp
loopne
jmp
out
lret
ss
cmp
inc
in
jmp
aam
enter
aad
cmp
and
nop
jg
roll
jle
ret
or
sbb
out
loope
xchg
xor
sti
jmp
ss
int3
icebp
cli
sub
in
incb
fsub
lret
int3
sti
fsub
xchg
adc
aaa
ret
jmp
icebp
and
int3
in
xlat
ret
ret
loopne
fld
mov
nop
mov
loopne
xchg
loop
in
shl
std
cmp
clc
ret
loop
repnz
aad
cli
aas
lret
cld
in
les
leave
rcr
fst
sti
lret
test
xlat
in
fcomp
sti
stc
nop
incb
xor
leave
xor
in
out
clc
sti
inc
loop
test
and
mov
std
lret
jecxz
in
int3
jmp
ss
aaa
aad
enter
xlat
xorb
fsub
test
ljmp
jmp
xchg
xchg
xor
div
ljmp
cmp
int3
out
fdiv
std
xlat
aam
cld
jmp
sar
mov
repnz
stc
cmp
cmp
cmc
aas
in
cmp
sti
mov
fucomp
rorb
lret
xor
call
rcr
imul
aam
call
call
std
xchg
clc
out
ljmp
icebp
testl
dec
ror
mov
lret
cli
enter
cmc
cmp
aas
stc
repz
fcmovnb
xchg
ffreep
aaa
loop
xor
shl
loopne,pt
sub
sti
cmc
loopne
out
fdivrp
faddl
xchg
leave
cmp
cmp
icebp
aad
loopne
std
aas
ret
aas
std
adc
iret
frstpm(287
int3
iret
adc
iret
lock
cmp
jmp
fiadds
std
fld
in
out
jmp
mov
repnz
ret
out
cmp
repnz
clc
in
hlt
in
std
rcl
sbb
mov
and
cld
mul
xor
fprem1
enter
stc
in
in
fstp
fcomp
out
jecxz
ret
loope
test
jmp
shl
call
enter
out
in
cmp
call
test
loop
lret
in
lock
lret
xor
out
repz
int3
ror
icebp
in
mov
std
fdivr
clc
std
rolb
out
int
icebp
cli
idivb
out
xor
lret
xlat
ret
stc
leave
sti
sti
xchg
fisttpl
xlat
sti
jecxz
div
loopne
hlt
out
out
out
in
aad
cmc
out
fmul
jmp
loopne
int3
loope
stc
sti
in
imul
cmc
int3
xor
int
loope
lds
call
vpor
in
fildl
imul
jmp
sti
aad
aas
cmc
stc
clc
sti
add
jecxz
cli
enter
mov
out
repz
rcl
hlt
icebp
aas
cmp
out
hlt
test
out
nop
xchg
mov
aad
out
xor
loop
aaa
xor
leave
sti
ljmp
call
cli
fucomp
mov
iret
sar
add
int3
faddp
fcmove
shl
sti
xchg
lock
mov
int
orl
enter
out
ds
out
lock
div
lock
xchg
inc
fstp
xchg
out
divl
fnstenv
xlat
clc
in
lret
fld
cmp
cmp
out
sbb
xchg
mov
cli
enter
cli
cli
shl
cmp
lock
fdivrp
loop
int
and
sub
test
leave
icebp
out
lret
fdiv
cmp
ds
in
aam
cmp
in
int
mov
mov
loope
lock
call
fdivr
aas
aam
std
in
std
orl
mov
into
loope
xlat
jmp
hlt
rcl
out
cmp
sti
ret
xchg
loope
mov
mov
mov
mov
aam
xor
int3
cmp
sti
jecxz
repnz
shl
cld
lret
in
into
cld
xchg
xchg
xchg
xor
test
repz
loop
aas
rolb
ret
nop
mov
into
fmull
aaa
iret
in
rcl
out
ds
loop
fcmovu
into
shr
fsubp
std
lret
shr
repz
mov
dec
cs
clc
mov
mov
movl
mov
xor
jmp
rcl
enter
fcmovne
fdivl
xchg
jg
roll
jle
mov
in
stc
aam
shlb
shl
in
cmp
cmc
fsubp
out
nop
mov
cld
out
das
out
sti
shr
cld
test
cmp
aad
stc
cld
cmc
in
enter
in
leave
iret
shr
loop
out
hlt
aam
iret
out
repz
div
in
neg
sti
cmc
rol
jecxz
call
mov
xchg
clc
stc
in
sub
aam
xor
shr
testl
mov
jmp
in
xor
lock
aam
incb
fmull
mov
test
shl
in
xor
in
cli
shl
cmp
cmc
repnz
test
filds
jecxz
in
loop
divb
aad
ss
jmp
ret
add
fisttpll
xchg
repz
loope
out
shl
cmc
sti
enter
sar
cli
sti
ds
testl
leave
faddp
lret
hlt
ret
out
jmp
cmp
lret
fincstp
and
rol
hlt
fildl
int3
nop
shr
in
xchg
sub
repnz
fidivl
cli
aad
out
rol
jmp
lea
jmp
iret
fdivs
cmp
addl
fxch
shl
jmp
mov
test
repnz
adc
rcr
in
xchg
in
in
xchg
sub
cli
aaa
in
fdiv
xlat
jmp
sti
sti
incb
in
fsub
out
mov
loope
int3
aad
int
xor
cmp
repnz
fdivr
cmp
xor
cld
rcr
lret
neg
test
xchg
in
jmp
or
out
fcomi
sar
cli
xor
incb
in
aam
std
iret
xchg
icebp
out
out
repz
in
into
cmc
ror
lock
adc
faddp
int3
addl
out
div
xor
jmp
cld
cmc
rcr
aam
testb
jmp
xchg
test
out
jmp
fmul
lret
cmp
out
les
aam
shl
loope
fadd
out
in
mov
out
cli
cmp
adc
ffree
cmp
ds
fstpt
into
faddl
in
lret
aaa
repnz
fdivrl
in
cld
leave
testb
sub
sar
ljmp
hlt
roll
fiadds
xlat
ljmp
loopne
aam
ret
int
lock
ljmp
icebp
push
fimuls
jmp
aad
ds
cmp
enter
fdivrp
clc
in
xchg
int
jmp
ret
xor
out
out
cmp
in
fcmovnbe
mov
roll
mov
xchg
xchg
aam
aas
ror
in
sti
cmp
cmpb
cld
cmc
xlat
out
hlt
xor
rorl
xchg
loope
lds
enter
rcl
icebp
out
stc
fadd
enter
shl
sti
fisttpll
xor
sar
jmp
aas
stc
cmp
aas
fcmovu
testl
mov
std
loop
xchg
in
in
ss
fnsave
out
push
xor
repnz
aad
jecxz
jmp
mov
adc
loopne
ret
lret
jmp
hlt
shr
cmp
rolb
mov
fcomi
loope
jmp
cld
out
out
rol
jmp
ljmp
sub
lret
filds
mov
test
lds
leave
cmc
cld
rcr
loope
fadds
lret
mov
xlat
test
xchg
lret
hlt
jmp
iret
cmp
out
fcmove
cli
repz
fdecstp
test
out
leave
cli
xchg
int3
lea
cld
fsubr
cmp
into
sti
loopne
aam
repnz
in
icebp
jmp
call
repz
iret
aaa
shl
loopne
in
aas
lock
lds
fcmovnu
loopne
xchg
mov
xchg
aas
in
int3
xor
aaa
sti
stc
aas
idiv
test
aam
mov
movzwl
adc
mov
xor
mov
or
mov
xorl
xor
adcl
jmp
int
rcl
int
stos
fimuls
xor
cltd
jg
roll
jle
enter
loopne
clc
int
icebp
mov
mov
shll
into
fadd
repnz
rcl
loope
ret
call
mov
sbb
addb
icebp
into
aam
cmp
sar
sti
fmulp
in
test
mov
cmp
enter
in
jmp
aad
rcl
test
xchg
loopne
cli
in
ljmp
out
out
lret
div
lock
std
sar
fucomp
xchg
fdivr
fldl
enter
lret
cmp
fdiv
shr
hlt
jecxz
in
ret
cmc
ret
stc
cmp
loopne
fiaddl
ret
sarl
fdivl
call
cmp
mov
cmc
fmul
inc
int3
jecxz
loopne
iret
mov
xchg
clc
out
lock
in
repz
out
cld
rolb
out
mov
stc
shl
loope
out
fcomip
out
fnstcw
idivb
stc
in
sar
in
in
loop
cld
hlt
loop
mov
and
repnz
aam
les
cmp
out
icebp
addl
std
std
in
cld
mov
aad
rcr
iret
out
enter
out
lock
cli
in
test
mov
rol
jecxz
xor
xor
fdivrs
std
in
xor
repz
int
xchg
mov
shll
stc
jmp
in
rcl
ss
iret
in
in
add
in
mov
call
in
in
iret
iret
out
fstp
repnz
out
lret
loope
stc
std
in
into
shr
cld
bnd
sti
ret
xchg
sti
xchg
cli
mov
rol
shl
out
cli
std
ljmp
roll
sbb
clc
ljmp
out
sub
cmp
cmp
fcom
icebp
shl
clc
sub
leave
out
stc
movl
lret
cmp
int3
aad
cmp
clc
cmp
test
test
lret
xchg
sub
fxtract
call
aad
cmp
ror
aam
in
ljmp
leave
test
mov
loopne
lock
xlat
cmc
cmc
lock
loopne
clc
rcl
xchg
ret
enter
xchg
out
ss
iret
xor
into
cmp
shl
loope
rcl
cmp
out
in
in
int
shr
fbstp
cmp
aad
in
in
adc
out
call
loopne
mov
repnz
fprem1
in
loope
ret
cmp
in
int3
cld
repnz
in
jmp
loopne
jecxz
sarl
fcmovbe
out
rorl
fucomp
mov
into
repnz
xlat
iret
in
idiv
out
aas
cmc
idiv
ret
xchg
ror
les
in
out
into
test
repz
les
hlt
cld
out
icebp
repnz
fcom
mov
sti
fcmove
out
xor
fdivr
sub
ret
in
addb
orb
cmp
shll
aad
into
sar
shl
xor
fmul
vcmpsd
int3
in
call
jmp
std
shl
add
int3
cld
stc
sub
sti
sar
shl
enter
cmp
leave
fcmovnu
fcmovu
repz
ret
fcmove
test
and
in
shlb
iret
repnz
idivb
iret
ret
test
loope
loopne
fsubp
nop
mov
lock
xor
ljmp
sbb
roll
neg
fcomp
ret
mov
loopne
loopne
shll
out
lret
xor
fstp
std
ljmp
fxam
mul
in
out
mov
jmp
lea
icebp
aam
aad
cmp
lret
cmp
fneni(8087
xlat
jmp
idiv
fldl2e
jecxz
std
xchg
loope
int
aam
repz
aas
xor
cmp
orl
stc
addl
out
clc
cmp
shr
imul
enter
fmul
fnstcw
add
inc
popf
jg
roll
jle
cld
enter
cmc
out
jmp
xor
fucomip
aam
in
cli
out
lock
lret
out
icebp
rol
icebp
out
leave
test
ds
test
shr
loope
cli
mov
stc
int
mov
sti
imul
divl
aad
loope
in
out
int3
in
lock
loopne
repz
das
clc
ds
jecxz
jecxz
sub
aam
fmull
call
into
rcl
shl
ds
sar
test
neg
jmp
loope
in
fiadds
icebp
iret
lret
cmp
stc
jecxz
jmp
out
xchg
fistl
cs
xor
aad
aam
fdivr
lret
lret
fidivrl
test
out
hlt
jmp
cli
int
in
xchg
fsubp
xchg
out
xor
jecxz
shr
in
stc
ret
roll
decb
fnsetpm(287
mov
fdivs
out
leave
aam
cmc
imul
sti
stc
jecxz
mov
leave
test
loopne
iret
sar
xchg
xlat
stc
in
aam
int3
ljmp
fcmovnbe
test
fcmove
clc
iret
call
not
xor
std
call
ds
addl
int3
mov
in
loopne
lret
out
loop
in
xor
clc
lret
xor
jecxz
mov
loop
std
mov
out
jmp
repz
aam
cmp
fldl
xlat
fstp
fdivrp
stc
cmc
frndint
test
and
out
idiv
rcr
ds
lret
cmp
clc
les
hlt
mov
in
cld
out
xchg
ljmp
fcomp
repnz
int
out
ftst
cmp
in
mov
neg
or
test
jecxz
mov
shl
aad
in
call
test
aas
faddl
fsin
in
cmp
adcb
in
leave
sti
std
aad
not
shl
aas
shl
orb
rclb
aad
xor
leave
jmp
iret
jmp
lock
cmc
hlt
aad
in
sti
cli
test
shr
ljmp
repz
cld
sti
cmp
clc
roll
out
leave
rcl
xchg
in
sub
int3
in
xor
sar
mul
hlt
clc
shl
aad
jmp
mov
cli
loop
mov
xor
cli
fdivr
fcmove
shl
hlt
sar
fadds
jecxz
jmp
in
ret
iret
not
das
out
lret
cmp
out
repnz
xlat
std
fisttpll
hlt
int
loop
out
jmp
dec
aam
aad
out
clc
mov
call
out
xor
int
icebp
enter
clc
fld
ljmp
std
lret
fscale
in
in
dec
xchg
enter
sarb
cmp
std
inc
hlt
rolb
jmp
iret
jmp
into
sti
jmp
out
xor
cmp
ret
ljmp
leave
xchg
mov
xchg
in
lret
jecxz
cmp
shr
cld
xlat
xor
jmp
jmp
hlt
mov
int
ret
in
idiv
fcmovbe
fsubp
cmp
adc
cld
sbb
into
mov
out
in
in
jmp
jmp
int3
jmp
shll
aaa
xor
in
hlt
std
vpsubusb
cli
cli
lret
xchg
out
fdiv
iret
cs
in
rol
rol
xor
fstp
int
and
lea
aaa
sti
hlt
in
fucomi
cmp
cli
cld
in
mul
fildl
or
aas
lock
ror
in
shr
clc
sarb
cli
cmp
les
shl
testl
aaa
int3
shll
fdivrs
repnz
sub
cli
cmp
cmp
filds
std
cmc
cs
lret
cmp
fidivrl
in
shl
enter
fmull
in
in
fcmovb
divl
jmp
int
cmp
sarb
fsubp
hlt
stc
sti
in
add
adcl
jmp
enter
fst
ffree
and
dec
jo
ja
inc
push
mov
jle
call
lret
loope
out
das
aaa
clc
ror
sti
cld
cmc
jmp
ret
cmp
ljmp
xchg
in
xchg
and
aaa
iret
enter
hlt
fucomip
loope
xor
lock
fucom
int3
mov
out
enter
in
cmpb
out
fsubr
test
not
mov
mov
loopne
mov
stc
lret
das
aam
xor
loopne
aad
out
loop
and
call
xor
xor
jmp
lock
cmc
rcl
cli
out
sti
mov
in
call
lret
xor
icebp
xor
ds
repnz
aad
filds
fdivr
out
mov
xor
icebp
ss
sar
ds
out
int3
icebp
shl
lock
out
lret
call
xor
int3
leave
sar
xor
in
shlb
cmp
in
cli
in
lock
lret
ret
stc
xlat
sti
fucomp
shl
test
fiaddl
jmp
xlat
call
sbb
jecxz
in
cmc
repz
aad
cmp
clc
loope
not
mov
mov
lock
int
repz
aaa
into
cmp
in
in
cmc
mul
cmp
xchg
rolb
repnz
ret
cmp
ret
enter
iret
loope
jmp
ret
in
xlat
fucomip
shl
xor
cmp
icebp
sti
add
mov
xchg
in
fsubp
xor
out
lock
std
cmp
fdivrp
in
test
lret
decl
xchg
jecxz
cld
cmp
fsub
lret
les
fadd
fsubr
jmp
out
rorb
int
fdivrl
clc
in
leave
jmp
sarl
mov
test
fmull
mov
lock
cli
jmp
aam
clc
aaa
lret
rcl
aam
call
in
in
inc
leave
fimuls
sar
cli
ror
divl
out
sbb
cld
out
fdivr
fst
enter
fstp
in
fxch
mov
shl
shlb
repnz
xor
std
sbb
xorb
ds
test
shr
mov
xchg
mov
out
clc
int
fdivrp
aas
fdivrp
xchg
mov
jecxz
test
lret
lret
in
fnstenv
xor
aas
cmp
cli
rol
in
cmc
fmull
std
icebp
xchg
ljmp
xor
out
xor
repz
and
rcr
incb
lret
enter
xchg
test
in
leave
enter
out
cmp
cmp
sti
jmp
imul
lret
mov
loop
hlt
fucomp
idivl
loopne
ss
frndint
call
in
lock
cld
jmp
leave
mov
cmp
aam
hlt
out
xor
shl
int
ljmp
ffree
and
lret
icebp
mov
stc
imul
call
rol
cmp
fcom
aam
xchg
jecxz
out
jmp
iret
int3
lret
sub
faddp
int3
sar
rol
not
aas
loop
loopne
int3
in
fdivr
loope
into
hlt
test
xor
ret
ret
out
xlat
cmp
jmp
cli
fcmovnu
int
cli
dec
stc
loopne
leave
in
xchg
lret
lret
push
int
fdiv
stc
leave
hlt
jmp
cli
fsubp
test
std
jmp
orl
out
shr
sub
shr
ret
flds
ret
cld
sbb
std
in
in
test
xor
lret
enter
fmulp
sti
or
incl
xchg
loope
jecxz
loop
fucomp
in
xor
cld
das
out
cld
aas
into
rcr
repz
jmp
mov
sar
cld
repz
rol
aaa
in
leave
jmp
fucomp
fsub
loope
les
loopne
in
fimull
cs
loop
call
xor
cmp
out
cmp
test
hlt
test
into
int
and
mov
hlt
loope
xlat
lock
hlt
add
addl
div
not
mov
movl
cmp
movl
jmp
rol
mov
xchg
or
xor
jle
add
int3
repnz
fsubp
loop
mov
jmp
fstp
loope
out
mov
imul
in
enter
sar
cld
std
cmp
sub
fxch
test
xchg
repz
enter
in
sti
lock
rcr
in
aas
cmp
cmc
xchg
mov
fsubr
vpminsw
cmc
in
in
jmp
std
cmp
sarl
out
fiadds
lret
aam
in
out
cmp
fstpt
loopne
loop
rcr
fiaddl
in
fsubr
out
xchg
rolb
in
in
iret
cmp
cmc
sarb
adc
loope
in
aam
jmp
fstl
int3
fld
int
call
out
rolb
fsubr
fucomp
iret
xchg
and
mov
ret
out
xor
std
cld
int
cld
clc
out
fdiv
xlat
xchg
in
std
cld
mov
jmp
out
fildll
into
icebp
lock
ffree
loop
cld
fadd
stc
faddl
xchg
nop
cmc
cmc
into
ljmp
aam
jecxz
fcmovbe
stc
sbb
mov
loopne
mov
xorb
sar
into
xor
aaa
mul
xor
jecxz
out
idivl
jecxz
clc
in
enter
faddl
enter
sar
cmp
xlat
lret
lock
and
mov
repz
repnz
aad
lds
fcmovb
sub
cld
shl
lret
cmc
sti
mov
out
jmp
out
aas
cmc
stc
cli
fldlg2
aaa
leave
stc
jmp
test
testl
int
call
in
lret
ffree
cld
aad
jmp
cmc
ret
out
fmuls
loopne
test
lock
ss
fstp
xlat
repz
ffree
shr
cld
loope
repz
roll
out
int3
in
lock
hlt
cmp
fsubr
not
stc
dec
cld
cli
test
jmp
lret
in
int3
cmp
call
ffreep
fcmovu
out
cmp
fmulp
jecxz
out
iret
mov
xor
call
ds
std
sti
fdiv
out
les
out
cld
loopne
nop
mov
xor
fsqrt
hlt
aam
ljmp
cmp
mov
int
inc
out
aam
sub
xor
cs
into
cli
neg
cmp
stc
cmp
xchg
jmp
aad
aam
jmp
in
int3
aas
cmp
out
xlat
ljmp
fucomp
loop
not
lock
fdivp
rcl
loop
sti
fcmovbe
mov
loopne
ljmp
xchg
in
nop
in
lret
rcl
imul
xor
shr
cmp
repnz
test
test
out
jmp
xor
xlat
cli
in
xor
iret
int3
ss
dec
repnz
fcmovb
mov
in
loopne
out
xchg
nop
adcb
rol
fdivr
jmp
fnstsw
out
roll
out
in
in
out
repnz
enter
out
aas
cmp
ds
sbb
mov
loopne
xchg
in
xchg
enter
ror
xor
cli
rcr
cmp
fstp
int
rcl
sti
ret
cmc
fiadds
enter
xchg
das
ljmp
cmp
iret
fnstcw
ret
cli
loop
mov
out
int
jmp
divb
xor
cmp
test
testb
in
lret
lret
xchg
sbb
jmp
call
fucomp
in
cmp
rorb
lds
in
icebp
icebp
sub
std
cmp
ljmp
loopne
jmp
loopne
fdiv
and
call
cli
cmp
jmp
int
ljmp
lock
call
mov
ror
cmp
repz
lret
fdivrp
iret
icebp
loop
cld
icebp
aam
clc
lds
popl
xor
out
les
ds
xor
rcr
repnz
lret
test
mov
repnz
add
movzbl
sub
movl
add
jmp
aas
aam
int3
aad
lret
fstl
sub
mov
add
icebp
shl
jecxz
cmp
cmp
test
lock
fistpll
ret
std
fcmovu
mov
shr
shr
sarl
cmc
fdivr
icebp
aaa
repnz
std
out
test
sti
testb
xchg
out
xchg
loop
das
cmp
in
int
lret
sar
fildl
repnz
xchg
add
ror
fldl
cmc
out
ror
dec
fcom
in
stc
cmc
jmp
stc
mov
int3
loope
leave
in
test
out
lret
in
fdivl
jmp
addb
repz
test
xchg
jmp
mov
out
out
aaa
div
idiv
sarb
ret
clc
faddp
or
cli
fcmovnu
addl
aam
repnz
adc
loope
cmc
enter
fucom
out
repnz
lret
into
loope
neg
lds
cld
cld
fnsave
cmp
jecxz,pt
into
add
sti
fcmovnu
int
sbb
aam
enter
ss
cmp
aaa
aaa
iret
out
cmp
ret
xor
flds
repnz
xor
icebp
xlat
enter
in
std
out
ffree
fcom
call
mov
lea
shll
iret
stc
lret
cld
xlat
int
jecxz
loope
out
clc
in
test
iret
icebp
shr
in
in
sar
xor
cmp
lock
sti
orb
cmc
in
std
fmulp
jecxz
loopne
in
aam
xlat
cli
enter
loop
ss
rcr
in
enter
int
decl
in
ljmp
cli
stc
hlt
lock
repz
fmulp
int3
test
test
out
lret
int3
aaa
ljmp
xchg
fdiv
ret
sbb
stc
cld
xchg
fdivp
in
cmp
aam
fdiv
fidivrs
ret
lret
xlat
mov
lock
lock
shlb
in
in
fucomp
aaa
fchs
shl
xlat
ret
aas
addb
sti
jmp
out
loop
xor
cmp
aad
int
ds
stc
mov
stc
sub
mov
loope
enter
xchg
jmp
icebp
in
clc
sar
cld
lock
addl
in
test
clc
leave
clc
loop
addl
iret
cmc
in
xlat
test
cmc
fcomip
orl
sti
fst
loope
xlat
aam
out
aad
shl
xor
loopne
test
loopne
out
fchs
mov
xor
loop
xchg
mov
xor
jecxz
cmc
fdivl
aad
xor
rol
fcmovb
cli
mov
lds
in
cmc
fnstsw
out
ss
jmp
in
repnz
jecxz
clc
int
repz
mov
mov
repz
repz
xor
clc
sarb
into
test
lock
cmc
sti
and
std
addl
into
fchs
iret
cmp
fldl
loope
fsubrp
into
sbb
xchg
jecxz
hlt
mov
aad
fdiv
enter
cmp
ret
inc
xchg
fst
fucomi
fcomi
out
call
out
xor
rcl
fmul
in
loopne
fadds
aad
stc
fdiv
jmp
orl
imul
aaa
xlat
aad
ds
sti
aam
sarb
dec
vpavgw
std
orb
lea
aam
cld
xor
ret
fninit
sbb
addl
shr
out
fdecstp
xor
cmc
ds
cmc
jecxz,pt
jecxz
faddp
idiv
in
out
fcmovne
lock
leave
aaa
repnz
cmp
jmp
iret
rcl
lock
std
call
ljmp
repz
xor
shl
sarb
shl
aad
loopne
shl
out
fimuls
xchg
fucomip
out
in
loopne
cmp
ret
hlt
std
adc
icebp
xchg
in
cli
adcb
rclb
cs
int3
div
neg
cmp
ret
cli
addl
mov
fdivs
xlat
out
repz
jmp
bnd
lea
andl
xor
xor
inc
mov
cmpl
jne
push
pushl
pushl
push
push
call
cmpl
jne
xor
add
inc
mov
cmpl
jb
dec
mov
mov
mov
imul
jmp
lret
ror
fstp
fnstsw
out
jo
movsb
sub
lahf
imul
roll
jle
enter
loop
sbb
lret
into
div
enter
out
int
loope
iret
vpsubusw
in
fsub
nop
faddl
loopne
icebp
lret
aad
sar
repz
cli
xor
lret
xlat
decl
repnz
fsin
cmp
repz
fucomip
rcl
roll
lret
mov
out
xor
in
xor
div
cld
out
enter
out
lock
fucom
loopne
in
orl
cmp
into
clc
rcr
cmc
div
sti
std
in
ret
fcmovbe
repz
jmp
lret
inc
xor
fcmove
idiv
shl
aad
cmp
adc
and
test
xchg
xchg
int3
int
shr
aam
cli
into
out
mul
out
loop
test
in
rolb
lret
in
repnz
xor
cmc
iret
xor
fstp
clc
sar
mov
leave
aad
faddp
jmp
shr
lock
xor
cmp
in
into
leave
fcomp
lret
test
fld1
xchg
or
leave
out
call
in
adcl
cmp
std
loopne
into
stc
jmp
sar
repnz
ljmp
call
das
loope
in
in
in
rcr
out
xor
iret
cld
iret
jecxz
fsubr
mov
fucom
out
icebp
out
mov
test
repz
in
xor
out
shr
std
ror
fcomp
cmp
ret
in
std
in
lock
roll
xor
cmc
stc
aas
xlat
sarl
cmc
aad
loop
testl
aaa
cmp
int3
call
loop
cmp
cmc
loop
std
int
or
mov
sar
ljmp
in
shl
out
ffree
lock
nop
lret
fucom
nop
jmp
cmc
xor
out
aam
in
int3
out
repnz
ret
loope
fld
mov
jmp
enter
in
aas
shr
out
icebp
fcmove
xlat
sarb
sti
repz
loope
test
xchg
jmp
mov
fsub
aad
imul
int
shl
out
ss
cmc
sub
ror
cli
cld
cld
fdivrp
aad
out
mov
mov
rol
test
ljmp
stc
iret
cmp
cmc
hlt
cld
ljmp
xlat
cmp
sti
fdivr
cmp
fyl2x
lret
xorb
aam
cmc
cmc
out
fcompp
xchg
enter
fcmovnbe
shlb
out
in
test
clc
cmp
orb
xlat
sti
ljmp
cmc
iret
aam
in
repz
shlb
iret
ret
sti
ret
mov
into
icebp
mov
vpmullw
ror
test
ds
iret
jmp
iret
in
xchg
jmp
jmp
ret
sti
repz
fidivrs
out
in
fdivr
in
fincstp
mov
jmp
xchg
mov
aam
xor
lret
out
fcmovne
rol
adc
in
jecxz
fsubp
xchg
shr
idiv
into
jmp
cli
fidivrl
addl
loopne
jmp
loope
aad
stc
shr
aad
div
cld
loopne
cmp
ljmp
loope
shr
mov
lret
aaa
aam
repnz
into
jmp
clc
aam
in
hlt
ffreep
roll
loop
fucomi
rclb
mul
test
dec
cmp
cmp
lds
test
out
shll
aam
jmp
fmul
sti
std
iret
cli
loop
rcr
enter
mov
hlt
jmp
aaa
ret
icebp
leave
cmp
cmp
clc
xlat
test
lret
fimuls
int3
icebp
clc
shl
lret
hlt
out
cli
icebp
int
sar
rol
ds
jecxz
nop
mov
jmp
nop
xor
out
loop
in
repz
cld
hlt
cmp
hlt
lds
xchg
mov
enter
shl
aam
call
loop
lock
aam
cmc
fmul
in
loop
rclb
out
aad
adc
cmc
mov
add
add
fwait
sbb
pusha
mov
xor
add
pop
pop
pop
leave
ret
mov
add
cmp
je
jmp
rcl
rcr
fst
xlat
xchg
sbb
sub
roll
jle
aad
das
std
cmp
int3
inc
aas
in
lds
lock
mov
xchg
repz
imul
ss
loope
aad
fcom
ret
fxch
into
enter
fmul
or
out
lds
in
lret
out
neg
sarb
sar
ds
rcl
rolb
shl
jmp
stc
clc
fdiv
iret
fldl
std
sub
fucom
ljmp
rclb
ss
hlt
xor
cli
cli
sarb
sarl
ljmp
in
jecxz
into
int3
xor
loop
in
cmp
out
jmp
loop
sar
ret
sti
imul
sti
cld
testl
lock
cli
out
hlt
loope
xor
aad
sti
shl
fiaddl
test
repnz
jmp
in
int
cli
cmp
fcom
test
cmc
sbb
ret
fmul
fcom
enter
in
enter
into
std
in
aas
rcl
fstp
shl
mov
cmp
mov
lret
lret
xchg
icebp
aam
out
in
sub
clc
xlat
filds
in
jmp
jmp
in
icebp
lock
fcmove
lds
fucomp
shl
addl
call
loope
fucomip
fsub
jmp
fstpt
fcomp
add
in
ret
aad
sti
in
jecxz
cld
xchg
filds
jmp
idiv
aas
rol
aas
jecxz,pt
enter
and
xchg
loop
xchg
repz
shrb
shlb
icebp
sar
int3
add
ret
out
sub
cld
fstp
cmp
icebp
xchg
test
cs
fcom
in
fnstcw
loop
lret
in
ret
faddp
jmp
in
lock
in
loope
xchg
hlt
repnz
jmp
fxtract
fcmovu
cmc
out
repnz
lds
in
mov
in
fdivrp
out
leave
xor
xor
stc
fcom
cmp
xchg
cli
ret
call
jmp
into
in
out
xor
int
sar
cmp
shll
in
jecxz
sti
fnstcw
stc
in
addb
aaa
ror
xor
fcomi
stc
cmp
out
rcr
loopne
repnz
aam
fsubr
xlat
loopne
fmul
test
ljmp
stc
cli
clc
xor
cmp
ds
rorl
inc
fmulp
out
jecxz
mov
aaa
jmp
into
cmp
fsubrp
cmp
mov
stc
in
lret
ss
out
test
out
fdivrl
test
fimull
xlat
call
lret
jecxz
hlt
into
stc
sar
ss
ss
cmp
test
lret
fdivr
out
rcr
out
repnz
xor
aaa
das
cmp
aas
lret
and
jmp
decb
test
lret
out
int3
sti
aad
lret
aad
aad
into
rcr
iret
ffreep
mov
iret
rorb
int
sti
aam
out
lock
shl
icebp
sti
sbb
ror
mov
mov
ret
in
in
icebp
shr
rcl
cmp
cmp
stc
ret
out
leave
mov
cmc
aas
rcl
lock
lock
aas
aas
out
icebp
cli
faddl
fadds
out
ret
jecxz
out
cld
shr
cmp
leave
cmp
loop
rolb
in
xchg
in
call
shl
repz
enter
fucomi
rcl
jecxz
enter
fsubrp
jmp
xchg
out
mov
testb
rcr
rcr
aam
out
repz
sar
mov
loope
int3
nop
hlt
out
lock
lret
in
in
div
rcl
repz
in
roll
cmp
test
rcll
out
hlt
sti
cmc
jmp
cmc
repnz
lock
filds
loop
loopne
jmp
out
ret
out
cmp
int
cmp
loop
test
cld
fld
repz
out
lea
out
repz
fdivrs
fucomi
std
call
sar
out
mov
inc
lock
jmp
mov
mov
or
cmp
je
mov
xorl
jmp
mov
mov
mov
jmp
rcl
mov
aad
sti
adc
mov
jg
roll
jle
mov
int
jecxz
test
test
iret
cmp
dec
lret
out
stc
aas
shl
repnz
mov
out
lea
xchg
rol
ret
call
aaa
xor
int
cmp
ret
mov
fisttps
lret
in
xbegin
fpatan
enter
cmp
ret
inc
jmp
xchg
in
jmp
loopne
out
rol
fsincos
xlat
fyl2x
dec
clc
stc
ss
hlt
cld
jmp
or
ljmp
loope
into
xor
cmp
call
add
fsub
mov
cli
fisttpll
out
rol
cs
ljmp
xlat
fdivp
ljmp
lret
fcomip
mov
ret
fdivs
fstpt
repnz
ret
iret
inc
neg
ret
fucomi
mov
mov
fcoml
shlb
jmp
icebp
rcr
rcr
repz
hlt
out
out
loopne
test
out
xchg
loopne
fdivrs
sar
aad
rcl
out
sar
cmp
mov
jecxz
mov
in
in
leave
icebp
clc
or
repnz
in
xchg
icebp
icebp
int
std
lret
fcomip
jmp
int
out
xlat
aad
ffreep
fsincos
test
lret
mov
stc
cld
xchg
repz
stc
out
out
out
cmp
in
loop
cmpl
test
mov
addl
cmc
jmp
aad
icebp
fstp
shr
push
ret
repz
aam
xchg
enter
fisttpll
xlat
out
lret
in
ror
lock
std
jecxz
fpatan
xlat
ljmp
incl
cmp
cmc
int
cmp
hlt
icebp
aas
aam
cmc
repz
clc
into
fnstsw
leave
mov
call
lret
fcmovu
lock
sar
shl
repz
jmp
repnz
hlt
repnz
lock
cmp
fdivs
aas
ret
shl
test
adc
int3
in
shl
fiadds
rcl
aad
cmp
filds
jecxz
ret
test
lret
jecxz
lock
lret
fdivr
sar
aam
clc
clc
fsub
cmp
ljmp
iret
std
ljmp
std
ror
loopne
rcr
cld
xlat
ret
sar
neg
loop
call
out
out
xor
fdivr
xor
into
aam
fadd
jecxz
out
jmp
enter
in
vpmuludq
hlt
xlat
repnz
repnz
sti
cmp
lock
xlat
test
mov
xor
not
xor
out
std
bnd
cmp
loop
jmp
loope
fstp
movl
out
lock
int3
loope
cmc
std
cmp
ret
loopne
mov
loopne
lret
out
int
int3
shlb
ret
lret
cld
sarl
ds
sti
sarl
fdivr
loop
fdivp
decb
in
xchg
loop
aaa
repnz
std
rcl
out
rolb
testl
stc
shl
cmc
aad
xor
fdivr
lock
out
icebp
int3
cmp
rolb
enter
std
int
out
fisttpl
shl
sub
cmp
fstpt
test
xchg
xchg
into
loope
into
xlat
ret
cmp
hlt
out
out
xor
cli
les
sti
call
stc
out
int
out
lret
sub
sar
in
lret
xlat
ljmp
call
dec
jmp
ljmp
ret
out
ljmp
lock
xchg
jmp
fmulp
repnz
std
out
jecxz
in
jmp
lret
rcr
idiv
repz
fxch
jmp
mov
xor
jecxz
cmp
out
loopne
lret
rcl
into
repnz
loopne
xlat
cld
cmc
test
lret
bnd
cmc
shl
in
cld
fst
rcr
out
ret
shr
repnz
fcom
stc
out
cli
sub
in
ljmp
out
cmc
hlt
mov
xor
mov
add
cmp
jmp
rol
lret
fstp
aad
dec
jns
sub
aad
mov
jle
cmp
fdiv
clc
fldl
loope
in
roll
sti
int
xlat
shl
hlt
repz
cmp
aam
mov
repz
xor
jmp
xor
jmp
xlat
test
shl
jmp
cmp
lock
hlt
roll
cmp
lock
in
not
std
neg
stc
ret
rcl
rcl
test
fcomp
std
iret
jecxz
orl
cmp
xlat
ljmp
cmp
rol
call
iret
stc
sti
int
in
shll
fbstp
ss
jecxz
cld
hlt
aas
test
lret
loope
xchg
enter
loopne
jmp
into
adc
out
stc
xchg
and
jmp
out
leave
int
imul
icebp
std
cmp
hlt
ret
xchg
loop
sarl
stc
out
hlt
fnstenv
cmp
aaa
cmp
cmp
shl
out
aas
jmp
std
out
fists
jmp
icebp
in
cmp
fdiv
repnz
repnz
adc
ficoms
cmc
nop
enter
jmp
cmp
roll
loopne
mov
loop
enter
mov
rcl
xlat
repz
lock
out
loop
fadd
in
test
out
leave
cld
loop
std
mov
jecxz
xor
hlt
xor
cmp
std
stc
roll
enter
int3
cli
lock
jmp
idiv
out
neg
repz
out
ds
call
mov
test
xor
ss
cmp
aaa
int
int
aas
fcmovbe
out
mov
mov
movl
lock
out
jmp
ror
loope
test
rolb
rcl
xchg
ljmp
out
out
shl
iret
fdivrl
aad
cmp
sarb
jmp
xlat
mov
in
int
out
out
fsincos
cmp
rolb
in
mov
int3
or
cli
mov
loope
lret
stc
shll
out
fsub
repnz
fcomp
aad
out
out
out
hlt
lret
int
aam
ror
sar
add
fmuls
mov
iret
shl
in
jecxz
call
rcl
fnstcw
cmp
out
cld
std
ljmp
lock
leave
cmc
in
cmp
cmc
cmp
fiaddl
mov
fucom
sub
in
xchg
shl
ror
aam
int
std
std
inc
aam
out
loopne
xor
jecxz
jmp
and
int
xor
xor
fcmovnbe
in
rcr
lock
cmp
fucomi
test
incb
nop
nop
mov
mov
fld
not
out
xor
fdivr
sbb
ffree
loope
fsubr
cli
fisttps
aam
adc
das
aaa
lock
in
fidivs
aaa
loopne
fdivrp
aam
fucomip
int
in
sub
out
rorb
shl
idiv
xlat
fldl
ret
out
test
cmp
cmc
repnz
lret
rcl
in
fdiv
fmul
fndisi(8087
adc
ret
ret
and
orl
ret
xlat
iret
aas
into
cmp
ds
jecxz
loope
xchg
mov
into
mov
int3
xchg
int
iret
enter
icebp
loopne
fdivrs
out
icebp
fdivrl
test
fsubrp
fcmovne
test
idiv
cmp
shl
std
in
cmp
faddp
fsubrp
lock
leave
ret
mov
out
out
xor
xor
fcomip
jecxz
test
mov
nop
xchg
xchg
out
enter
repnz
leave
cmp
cmp
int3
loopne
addb
mov
out
sti
enter
in
xor
cmc
jmp
lock
loop
icebp
aas
sti
hlt
aad
enter
stc
fmull
rclb
aaa
enter
out
xor
test
aas
stc
aad
out
loope
std
out
test
sbb
add
add
jmp
iret
aad
aad
aad
aad
push
push
mov
fildl
jle
add
out
jmp
vpsubb
shl
sarb
adc
cmp
std
aas
mov
cmc
lret
fdivr
fldl
rorb
out
loope
out
cli
hlt
out
icebp
fdivrp
std
repz
jmp
rcl
repz
xor
cmp
fcmovbe
mul
idivb
test
mov
iret
mov
out
neg
jmp
rcr
addl
mov
rcl
mov
shl
xor
lret
iret
icebp
sub
std
ffree
call
clc
test
mov
out
out
xchg
lret
in
test
hlt
cmp
cmp
addl
mov
aad
in
out
jmp
fdivr
into
in
jmp
int3
in
shl
repnz
lret
cmp
stc
xor
ret
clc
addb
fucom
in
ror
loopne
out
xor
leave
faddp
hlt
fdivr
loop
jmp
leave
in
sub
jecxz
loope
cmp
in
cli
call
add
ret
aam
mov
icebp
lret
iret
jecxz
lds
sub
xor
lock
xlat
loop
cmp
xchg
xchg
mov
ljmp
in
repnz
fldz
aad
adc
sti
fimuls
in
loope
icebp
jmp
neg
hlt
adc
cmp
fcomp
loope
fiadds
mov
mov
out
mov
ss
call
repnz
jmp
fdivrs
loop
out
sar
fcmove
fmulp
leave
ror
xchg
xchg
into
xor
sti
lock
xlat
out
shl
clc
push
call
mov
enter
addl
out
iret
fsubrp
neg
cmp
fiadds
jmp
out
out
cld
mov
xchg
in
jmp
mul
repnz
icebp
sti
fndisi(8087
icebp
repnz
jmp
out
fucomip
clc
ret
leave
cmp
xlat
icebp
ror
sti
aas
fidivrl
loopne
clc
mul
decb
out
lock
rcr
hlt
jmp
out
rolb
jmp
cld
shr
jmp
not
clc
cld
clc
cld
ds
cli
fdivr
filds
mov
ret
in
nop
in
in
mov
imul
xor
in
iret
hlt
aad
out
not
stc
out
test
loop
sbb
xor
iret
enter
nop
rol
xor
enter
neg
lock
cli
cli
xor
rolb
fdiv
in
orl
cmp
enter
loope
fcmovu
stc
enter
mov
cld
iret
cld
in
call
lret
xor
loop
repz
sti
fyl2x
adc
rcl
xchg
or
mov
jmp
ljmp
lret
div
xlat
loopne
hlt
in
out
cmp
hlt
fimull
int
in
xor
int
shll
jmp
addb
fdivrp
enter
stc
enter
loop
ror
into
icebp
cmp
cmp
in
std
cmc
test
clc
lret
std
mov
xchg
loope
hlt
iret
fcmovbe
xor
fcomi
int
repnz
ds
movl
ficoms
hlt
mul
lret
out
ds
sar
in
repnz
std
test
lea
lret
ret
cli
iret
xor
aas
cmc
fcmovu
fpatan
xlat
testl
into
mov
xor
xor
lret
shl
cmc
fisttpl
xchg
mov
roll
ret
in
in
fadd
jmp
repnz
in
in
enter
std
call
cmp
div
test
fidivrl
hlt
loop
mov
nop
in
out
cs
idiv
clc
idivl
out
rol
aas
fsubr
std
rcr
in
sti
fisttpll
out
xlat
icebp
xor
stc
out
neg
aaa
adc
xchg
jmp
cli
mov
ror
repz
shl
xlat
xlat
cmp
std
testb
mov
mov
mov
mov
xor
add
jmp
ror
rcl
mov
daa
add
orb
enter
jmp
jmp
cmp
out
in
cmp
iret
int
sti
idiv
test
lea
jecxz
ljmp
call
int
fsub
repz
inc
xchg
loopne
orl
into
jmp
ffree
icebp
hlt
cmp
icebp
inc
cmc
add
out
test
ret
in
out
xor
repnz
hlt
cli
neg
xchg
std
lret
fucomp
sti
in
shl
int3
out
aam
ljmp
lock
stc
loop
jmp
into
adc
xchg
lret
enter
ljmp
lock
xchg
int3
shr
mov
fdiv
aad
in
call
sti
aas
xor
std
aam
xchg
cld
in
loope
xchg
test
ss
fdiv
clc
f2xm1
shl
fninit
test
hlt
mov
loope
nop
test
xor
sarl
sti
fcmovne
cmc
in
loope
test
sbb
clc
incl
test
in
cmp
jmp
aaa
repz
iret
aas
fcmovu
cmc
loopne
aam
jecxz
faddl
out
rol
in
lock
std
ror
out
ljmp
test
xchg
mov
in
xchg
lock
fcom
aas
aas
int
sub
repz
fcmovnu
cli
cli
xchg
jmp
ljmp
int
aas
jmp
loop
xlat
hlt
hlt
rcr
xchg
std
jmp
in
hlt
cmp
fxam
sti
repnz
loopne
stc
sar
test
fstp
fcmovnu
ljmp
int3
sar
ljmp
out
aas
cmp
fcomp
hlt
leave
mul
in
out
shl
sub
in
ss
fdivrp
fistpll
icebp
rcr
cmp
cmp
movl
out
jmp
cld
dec
out
out
loope
loope
dec
out
clc
filds
enter
ljmp
fucomp
cmp
out
dec
iret
in
out
mov
in
aad
xlat
xor
aam
rcr
icebp
rolb
jmp
aad
ffreep
jecxz
repnz
int3
push
in
rcl
cmp
lock
sti
idivb
clc
les
fsubp
jecxz
fucomip
lret
std
or
xchg
jmp
aad
cmp
iret
add
out
out
xlat
mov
in
nop
xchg
ljmp
cli
test
sar
fdivr
out
rcr
icebp
rcr
cld
cld
lret
xchg
xchg
test
xchg
aam
cmp
cmp
int
sarl
sti
xchg
jmp
loop
xchg
xor
rol
aaa
icebp
enter
rol
fsubrp
sti
repnz
add
test
in
in
in
rol
fsubr
enter
fsub
repnz
loopne
fdivrp
mov
lret
rcr
xchg
aad
hlt
in
fstpt
shl
cmp
in
iret
out
out
fdivr
rol
in
les
out
fisttpll
xlat
aad
fidivrs
rcr
icebp
repz
neg
aam
ffree
call
out
loop
div
cmp
rolb
aad
loop
loope
std
std
fsub
cld
loop
out
xor
out
int3
jmp
std
fdivrp
loope
loop
vpand
jmp
jecxz
xchg
xlat
xor
xlat
into
dec
incl
rcr
out
out
fcmovnu
out
shl
xor
cmp
cmc
cmp
cmp
loop
rcr
fadds
into
ljmp
xor
loopne
std
int
in
fstp
ret
fprem
stc
in
out
xchg
div
ljmp
stc
xor
loop
fstp
loopne
jmp
ficoms
jmp
cmp
cs
shr
cmp
test
loopne
hlt
fcomi
stc
loopne
out
mov
into
int
movzwl
mov
xor
lea
add
jmp
rcl
aam
sarb
xchg
sbb
sbb
jg
roll
jle
fcmovb
cmp
stc
int3
icebp
in
int
ret
loop
repz
jmp
xchg
mov
xchg
out
leave
shl
in
int
lock
leave
cld
in
std
test
loope
cmp
jecxz
ljmp
out
repz
shll
xor
int3
fdivp
lds
icebp
out
mov
std
repz
test
in
mov
xor
cmp
repz
add
aam
cmp
fcoml
xchg
das
out
out
ror
xor
call
sar
clc
repnz
fsub
xchg
test
xchg
mov
out
int3
stc
enter
rcl
and
out
out
std
enter
xchg
mul
out
in
idivb
clc
neg
aaa
ss
test
icebp
cmp
mov
out
cld
int3
mov
in
sub
in
out
ljmp
les
ret
fnstsw
leave
loope
loopne
in
xchg
rcl
imul
xor
xor
fdivs
addb
out
xchg
xchg
aad
lock
cmc
out
int3
fnstsw
loope
fsub
repz
ret
ffreep
out
loopne
sti
in
fldcw
into
jmp
xlat
out
cmp
aas
rol
std
shl
aad
enter
leave
ljmp
lock
xlat
icebp
call
cmp
test
xlat
xchg
mov
mov
lds
xchg
repz
leave
shr
rcl
cmp
sub
aam
jmp
in
leave
repz
inc
rcr
rcl
ljmp
repz
mul
out
hlt
mov
std
out
and
repz
xor
fmul
out
xlat
leave
int3
shr
repz
out
fcmovnu
sti
mov
loop
fcmovu
out
mov
repz
repz
test
in
shl
aas
in
mov
idiv
mov
faddl
in
loop
out
jecxz
sti
in
xor
shl
cld
cld
repz
cmc
cld
ret
test
ljmp
leave
repnz
ds
icebp
loopne
aad
loope
repz
in
lea
test
clc
iret
xor
shl
leave
out
jmp
shl
cli
push
mov
xchg
out
loopne
out
stc
idiv
ljmp
aad
ds
sbb
ljmp
loopne
xchg
jmp
repz
icebp
aad
shlb
into
int3
rcl
cld
sti
sbb
aam
flds
lock
aas
in
lret
repz
int
sar
test
in
decb
cld
mov
xchg
icebp
cmc
out
in
in
iret
jmp
out
std
xlat
testb
nop
filds
int3
xor
enter
fucomip
cmc
fxch
fcmove
cmp
fcom
fmul
rolb
in
in
sub
call
out
in
cmp
xlat
fucomi
fcmovb
dec
jecxz
leave
lock
sub
aad
int3
aam
fildl
loopne
repz
in
loop
leave
mov
int
aam
iret
cmp
div
loope
loope
inc
test
out
mov
xchg
mov
cmc
xor
sti
fnstcw
mul
cmp
cmp
std
fsubr
call
lret
xor
jmp
rcl
cmp
jmp
repz
in
shl
clc
jecxz
sti
addb
in
test
cs
cli
in
out
jmp
icebp
cmp
rcl
xchg
fldl
fisttpll
and
aad
jmp
cmp
aad
faddp
rcl
cmc
fcomip
mov
in
mov
lea
cmc
xor
loop
lret
repnz
shll
repz
lret
nop
fisttps
icebp
xlat
jecxz
cli
cmp
ret
test
clc
enter
sti
fcomp
out
roll
icebp
cmp
icebp
aaa
cmp
aam
sar
xor
mov
fmulp
fcmovu
cld
in
lret
repnz
xor
out
aaa
cli
rol
loop
ret
sti
cmc
mov
clc
test
cld
mov
mov
mov
jmp
rcl
int
int
fstl
dec
push
aam
jg
roll
jle
or
ljmp
out
ret
lret
clc
sar
out
cmp
fstp
ret
roll
jecxz
test
notb
fprem
out
ljmp
stc
repnz
mov
bnd
xchg
out
icebp
jmp
in
cli
fstpt
clc
ljmp
lret
fsub
int3
or
shl
icebp
enter
cmp
out
neg
leave
fisttps
into
hlt
jecxz
cld
xor
repz
repz
roll
loop
fldl
lret
into
stc
shr
out
cmp
cli
cmp
inc
jmp
out
stc
ljmp
xor
test
and
int3
xlat
fcom
testb
enter
enter
xchg
in
out
aad
fcmovne
ror
icebp
loope
loop
ss
inc
jmp
movl
xor
cmp
fnstsw
cmp
cmp
std
shl
out
xrelease
fisttpl
fmul
enter
xor
lret
jmp
test
jmp
mov
out
mov
into
icebp
xor
cld
icebp
icebp
rcl
aas
xor
cmc
out
sar
cmc
in
out
cld
xchg
mov
shl
out
xor
cmp
fsubrp
aam
incb
loop
jmp
call
icebp
in
mov
imul
in
lock
fneni(8087
fidivrl
fcmovu
cmp
loop
ret
mov
mov
out
fnsetpm(287
jecxz
xor
cmp
in
leave
shr
cmc
not
fadds
out
cli
fildl
xchg
and
clc
ror
cmc
not
repz
leave
xorl
fsub
enter
fmulp
xor
mov
into
aaa
stc
shl
jmp
enter
xchg
fcoms
into
mov
jmp
out
loopne
xor
ds
ds
out
lret
ljmp
std
xor
call
iret
aas
fcmovnu
out
test
xchg
fdivr
sar
ret
or
jmp
out
les
clc
push
leave
fadd
cmpb
mov
test
enter
std
sbb
out
loop
int
lock
repnz
repz
int
out
xlat
lock
jmp
shl
iret
xor
cmc
sub
int
xlat
ss
cmp
cli
mov
faddl
out
dec
mov
loopne
das
sub
jmp
fucomi
fdiv
ror
iret
shl
fldl
icebp
fdivrp
repz
aad
ror
fsubr
int3
cmc
xor
roll
shl
lret
xchg
flds
out
xor
ror
enter
xor
jecxz
div
repnz
clc
mov
fucomip
sbb
fucomp
cmp
lret
in
iret
leave
xlat
std
loop
neg
ret
std
clc
int
fsub
xchg
in
addl
enter
repz
in
flds
jecxz
in
nop
in
fisttpll
shlb
cmp
int3
idiv
cld
int3
hlt
stc
cmpb
fadd
stc
or
rorb
iret
loope
cmp
in
std
cmp
cli
cmp
into
jecxz
cmp
not
sti
in
int
in
in
xchg
jecxz
xor
into
cmp
icebp
xor
aam
clc
cli
out
sar
leave
mov
shl
xchg
rcr
ror
vpsllq
sti
ss
fcom
out
add
lret
mov
mov
fstp
fcomip
aad
xor
in
aam
jmp
lock
les
lret
repnz
out
out
fnstcw
iret
in
xor
fdivrp
cmp
iret
fcom
aad
ret
stc
orb
loopne
xchg
shl
aad
ret
jmp
out
jmp
xor
jmp
cmp
stc
fsubr
clc
lret
mov
loop
cs
imul
cmp
icebp
xlat
aaa
aas
xchg
les
mov
loopne
dec
xor
repnz
ss
add
imul
jmp
lret
ret
enter
fcmovnu
dec
lcall
cmpsl
push
jg
roll
jle
hlt
rcr
shl
ljmp
in
out
xchg
rol
out
div
std
cmp
hlt
dec
sbb
fadd
fndisi(8087
mov
fcomip
out
fcomp
jecxz
in
test
lock
xor
call
imul
rcl
ffreep
in
out
ficoml
out
icebp
cmp
fsqrt
rcr
icebp
out
rcl
hlt
les
fsub
test
out
cmp
cli
aad
cmp
aad
cmc
into
cmp
xlat
in
aad
stc
fildl
xchg
in
xor
cmp
out
cmp
ljmp
loop
div
mov
in
xchg
out
ret
out
sarb
cmp
lock
aam
cld
mov
aad
call
out
into
jecxz
cmc
out
leave
into
cmc
aaa
fsubr
cmp
in
rol
in
in
fmul
leave
in
into
and
xchg
out
in
jmp
repz
ljmp
in
out
xlat
hlt
mov
int
rcr
test
jmp
cmp
idivl
repnz
aad
out
aam
in
out
fucomi
xchg
lock
shr
hlt
cmp
xor
out
out
idivl
ret
fstp
fprem1
inc
in
xchg
jmp
mov
out
out
icebp
out
loopne
icebp
out
aam
lds
test
ficoml
test
xlat
fnstsw
fsubrp
repz
fcomp
cmc
mov
loopne
enter
cmc
repnz
xlat
ffreep
fcmovne
jecxz
aad
and
shl
mov
sti
into
in
popl
std
clc
ss
cmp
fadds
mov
loopne
call
in
out
sub
rol
out
in
lock
sar
cmp
fstp
cmc
shl
jmp
fsubp
repnz
aam
fdiv
fmul
ljmp
loop
faddp
in
jmp
xchg
rolb
rol
fsubr
icebp
out
repnz
clc
hlt
rcr
aad
cld
loopne
xchg
iret
xor
mov
fcom
aam
rcr
inc
sti
out
clc
int3
sarb
inc
sar
int
out
mov
jmp
sti
cmc
shr
lret
cmp
xor
fimull
testb
in
xor
icebp
enter
lret
sarl
ret
std
add
dec
loopne
incl
aaa
lret
out
jmp
aad
add
clc
mov
fdivr
cli
mov
xchg
out
repnz
aad
int
xor
xor
fnstcw
iret
adc
mul
cmc
cmp
std
mov
cmc
lret
call
aad
cld
jmp
cmp
std
div
aad
xchg
stc
ljmp
sub
icebp
enter
out
repz
shl
shr
aad
fisttps
loop
testb
fxch
int3
cmp
loopne
into
shl
shl
shr
lret
xchg
xchg
shll
jmp
out
cmp
lret
xlat
repnz
cmc
rcl
fucom
call
aad
lock
xchg
orb
xor
ljmp
ret
stc
or
clc
mov
out
roll
shlb
int
cmp
rcl
loop
push
leave
call
jmp
out
loope
aad
repz
in
xor
fiaddl
sti
ror
lret
mov
lret
xchg
std
imul
in
aad
aaa
aam
xlat
stc
rcl
jmp
test
repz
std
nop
out
loop
xchg
out
ret
loop
aam
lock
aad
rol
cmp
icebp
neg
xlat
mov
out
loop
pop
xchg
aad
xor
out
shlb
shl
icebp
fld
cmp
out
mov
clc
xchg
shrl
cmp
repnz
fcom
fcmovbe
mul
ds
into
out
fcmovnu
std
jmp
xchg
xchg
xchg
xor
into
cmp
repz
addb
xlat
fxch
addl
add
add
mov
fildl
adc
jp
jg
roll
jle
leave
decl
divb
cmp
sub
repnz
rcr
mov
cli
loope
mov
leave
shll
out
fsubr
cmp
cmp
loopne
inc
out
std
out
cld
xchg
call
clc
xor
out
clc
cmp
int3
aas
aad
fldl
cmc
lret
int3
fucomip
sub
icebp
out
aaa
jmp
icebp
sti
std
int
clc
xor
in
mov
int3
sti
out
call
shl
sub
ret
xor
clc
cmp
fcmovnbe
aas
cmp
icebp
aaa
sti
incb
mov
mov
out
int3
loope
loopne
jmp
lret
xor
test
ds
mov
les
xchg
orb
jecxz
cmp
xor
sti
out
icebp
and
fucom
xchg
neg
fsubrp
nop
out
in
out
sub
rcl
cmp
hlt
rcr
xlat
xchg
mul
call
out
xchg
aad
hlt
cli
leave
ljmp
in
rcl
cmc
mov
cli
filds
cs
lret
ljmp
hlt
inc
inc
shl
sar
sub
in
mov
jecxz
divb
int
xchg
out
mov
repz
mov
out
xor
in
shl
stc
cmp
ret
rcl
flds
int3
xor
xchg
enter
in
xor
fcomp
jmp
cli
std
xchg
ror
cli
test
cli
test
iret
xchg
sub
int
ret
out
aaa
aas
repz
out
xor
clc
in
xchg
int
int
fiadds
aad
hlt
fprem1
repz
fdivrl
not
aad
jmp
out
call
adcb
in
jmp
xor
stc
incb
stc
loop
cli
out
lea
lock
icebp
mov
shr
cmp
xor
vpsubusb
xchg
lock
cmp
iret
lret
in
xlat
cmp
vpavgw
into
lret
mov
aad
cmp
xlat
clc
ljmp
cmp
fcomi
decl
mov
sub
loopne
cmc
lock
fcmove
repnz
std
clc
lea
call
leave
int3
std
enter
hlt
cmp
in
loop
in
fdiv
cmc
rcr
in
xchg
lret
test
xlat
icebp
sti
aaa
std
adc
loop,pt
shr
int
sti
loope
in
aam
xor
int
cli
fnstsw
out
cmp
cmp
leave
aad
fstp
test
out
xor
cs
aas
fidivrs
fprem
lock
xlat
mul
in
lret
cli
mov
rorl
jmp
cli
xlat
or
rcr
ret
mov
stc
std
sbb
xchg
loop
loopne
clc
out
aaa
lret
cmp
sar
stc
out
fnsave
cli
cmp
xlat
int3
lret
test
repz
sti
lret
out
cli
lret
xlat
sar
sar
aad
les
call
xor
xor
leave
cmp
jmp
into
xchg
icebp
mov
mov
jecxz
incl
hlt
ljmp
lock
fucompp
ds
std
rcr
loop
xchg
call
int
out
divl
fdivs
cmp
out
clc
xlat
repz
testl
lret
aad
div
fsubr
cli
lret
aam
aas
xor
ret
fcmovne
or
in
enter
aam
aad
leave
shl
out
xor
ror
lret
cmp
hlt
cli
flds
ret
out
sti
loope
icebp
in
int3
xchg
icebp
xor
hlt
fcomp
sti
cmc
loopne
cmpb
cmp
rcl
jmp
ljmp
out
jmp
cmp
in
fucomp
jmp
xor
out
aam
ffreep
int
xchg
loop
out
xor
shlb
cmp
iret
cmp
repnz
xlat
decl
call
add
int
fstp
fstp
mov
in
cmp
int
jg
roll
jle
repz
rorl
xchg
out
adc
ljmp
cmp
addl
leave
cmc
in
neg
in
int3
iret
in
xchg
jmp
cmp
xlat
jmp
out
out
cli
cld
cmp
ret
lret
jmp
xchg
xor
rcr
cmp
shl
into
cmp
test
aam
rol
fucom
in
mov
in
or
lret
push
ret
into
fcmovbe
cli
fnstcw
icebp
xlat
loop
test
out
rol
lea
jmp
icebp
mul
not
out
xor
int
fucomi
aad
shl
aam
shl
jmp
rcll
in
in
aad
out
xor
lret
lret
cmp
sar
rcl
loopne
notl
icebp
jmp
repz
int
ds
into
test
aad
mov
ljmp
xchg
out
ficoms
in
aaa
xor
stc
ret
adc
mov
fdiv
jecxz
repnz
in
aad
icebp
cmp
ror
shl
loop
lock
rcr
loope
repnz
std
lock
out
mov
roll
stc
into
cmp
cmp
aad
add
aas
test
cld
in
xor
out
mov
iret
cmc
xor
idivb
repz
ret
fucom
fsub
addb
ljmp
lret
xlat
out
lret
icebp
cmc
std
cmc
in
dec
xchg
out
in
ljmp
xchg
call
xlat
into
test
cmp
call
cld
in
in
or
xchg
movl
icebp
lock
cli
cmpb
leave
add
sti
leave
leave
out
loope
add
cs
aas
loope
lret
ret
add
imul
enter
leave
repz
cmc
jmp
enter
clc
hlt
cmp
repnz
std
loopne
cmp
dec
jecxz
cld
mov
fndisi(8087
in
lock
jmp
fld
jmp
cli
test
cli
addb
call
fcomip
repnz
enter
ss
aas
leave
fdivp
aad
clc
nop
fisttps
xor
fucom
aaa
fsubp
cmp
cld
rolb
lret
enter
fsubr
mov
into
lret
xor
cmp
fdecstp
out
cld
sar
icebp
xchg
cli
aad
hlt
cmp
xlat
mov
fdivrp
leave
fcoml
out
xor
lret
aas
out
int3
repz
stc
hlt
in
rol
xchg
loopne
enter
in
hlt
aas
fadds
repz
into
fcmovne
out
xchg
nop
xor
repz
loop
repz
int3
mov
xchg
movl
out
iret
cli
sti
in
aad
in
test
test
sti
mov
lret
icebp
repnz
xchg
in
ljmp
sub
fcmovnu
in
icebp
xchg
mov
std
xor
xchg
mov
hlt
sub
fdivr
jmp
rcl
xor
cli
mov
out
mov
fstl
lret
ss
stc
shr
shr
sar
icebp
cmp
icebp
hlt
aad
cld
mov
lret
nop
int
out
ret
loop
in
xlat
rcl
lret
loopne
add
out
lret
call
iret
xchg
jecxz
icebp
lock
fst
cld
aaa
aam
ds
fadd
loope
test
ror
cld
in
out
in
cld
jmp
lret
lret
ret
in
jecxz
out
cmp
in
loope
lret
in
xlat
fcmovb
cmp
iret
rcl
loopne
lret
fimuls
icebp
leave
xor
cmc
xor
call
fld
cmp
cmp
mov
out
stc
lret
ror
fisttpll
xor
jmp
out
in
iret
aam
shl
mov
vcvttpd2dq
std
xchg
ror
lock
les
stc
bnd
xor
icebp
repz
out
std
stc
fmul
nop
out
lock
fstpt
sti
je
mov
jmp
leave
rcl
ret
ffree
arpl
lea
mov
add
iret
jmp
out
aam
stc
cmp
cmp
std
cld
in
test
mov
sti
mov
enter
xor
jmp
rcr
out
ds
loope
ret
ljmp
repnz
hlt
nop
rol
rcl
cmp
into
icebp
enter
fstpt
hlt
xchg
call
lret
leave
loope
int3
xchg
xchg
fld
repnz
in
sarl
ds
shl
stc
mul
out
out
cli
int3
loop
jecxz
leave
jecxz
fdiv
into
iret
ss
lock
lock
fmuls
mov
clc
out
icebp
jecxz
xchg
sub
leave
cld
iret
lret
xor
mov
rcr
fsin
loopne
in
int
xchg
neg
jecxz
xor
loope
sbb
fcomi
repnz
and
fdiv
mov
test
cld
xor
lret
loopne
repnz
cmp
jmp
fmul
into
mov
ret
out
fidivrl
rol
shl
repz
lock
flds
fmull
test
sub
cmc
les
lock
lock
into
cmp
loope
iret
idiv
incb
into
int
mov
call
cmp
fdivr
sti
xchg
in
testb
mov
loop
jmp
xlat
enter
xlat
aad
xlat
cmp
aad
test
clc
lock
mov
cmp
mov
jmp
icebp
sarl
stc
loope
movl
jmp
ljmp
test
jmp
leave
in
dec
out
int3
mov
das
jmp
into
fdivs
inc
cmp
ret
out
cli
enter
cmc
cmc
lret
xlat
jmp
call
cmp
enter
jecxz
xchg
in
xor
out
cmp
ss
lds
repz
cmp
ds
in
loopne
icebp
faddl
clc
faddp
ret
fdiv
loope
leave
in
jmp
clc
repz
stc
fmul
fsub
test
sti
flds
loop
mov
aad
out
in
jmp
shl
clc
aam
rcr
roll
into
jecxz
hlt
jmp
rcl
aaa
ss
test
xrelease
shl
sti
sbb
test
int3
fsubr
aam
xchg
fmul
loop
fldt
rcr
aad
in
fcomp
in
cli
inc
test
mov
mov
in
cmc
repz
cmp
aad
xlat
cmp
sbb
jmp
int3
lret
mov
iret
xchg
icebp
xor
repz
std
out
cmp
clc
xlat
out
shr
repnz
aam
and
mov
popl
mov
out
ljmp
xor
clc
xlat
fsub
cmc
fmul
neg
cld
mov
into
repz
nop
hlt
cmc
aam
cmp
cmc
cmp
test
call
aas
jecxz
lret
call
icebp
cmp
cmp
clc
fiadds
sarl
mov
cli
ret
lds
addb
xor
hlt
das
aaa
hlt
roll
xchg
cld
in
lret
hlt
dec
out
out
mov
call
adc
loopne
rol
hlt
ret
clc
test
leave
mov
fdivr
loop
orl
iret
fdivr
xlat
cmp
shl
cli
clc
loope
ret
or
xchg
xchg
aad
lret
sub
ljmp
lock
cld
les
out
int
rcl
ret
int
sti
in
jmp
cmp
rcr
loopne
out
out
mov
fimuls
cmc
xlat
into
shl
cmp
ljmp
test
div
ret
dec
enter
xchg
aas
int3
xor
aaa
in
aas
xlat
cmp
cmp
jecxz
lret
roll
xor
inc
ss
into
cmp
ljmp
cmc
jmp
cmp
lret
repnz
loope
fadds
pop
jmp
mov
jmp
into
rcl
rol
fcomp
lahf
mov
xorl
jle
aad
rclb
repz
xor
clc
hlt
hlt
xor
sub
aam
sti
enter
leave
ljmp
loopne
lock
in
enter
not
adc
jecxz
repz
rcr
mov
out
out
loope
movl
fxch
cmp
int3
ss
sarb
movl
std
mov
aam
enter
enter
cmp
hlt
aad
std
jmp
mov
cli
int
enter
sub
loop
icebp
dec
jmp
repz
cmp
mov
fcmovu
fucomp
into
call
in
lock
in
in
sti
fnstsw
into
fucomp
stc
out
in
shl
test
adc
jmp
icebp
call
clc
aas
icebp
cmp
mov
fcompp
iret
sti
call
lret
cmp
aas
in
shl
ss
jmp
fcmovbe
mov
icebp
out
xor
int
into
lret
fsubrp
lret
jecxz
idiv
loope
sti
stc
in
mov
xor
aam
ror
out
cmp
cmp
cld
test
shl
out
ror
in
mov
int3
in
clc
in
leave
int3
loope
rcr
or
cld
cld
jmp
shr
fildl
clc
sub
xor
ds
sarl
roll
fcmovu
into
out
lret
lea
sti
xor
out
fsubp
ret
cmp
mov
jmp
std
xchg
fmul
call
ljmp
xor
xchg
out
lret
loopne
mov
adc
icebp
int3
icebp
xor
xor
fcmovnu
fxch
cmc
clc
fst
ljmp
icebp
cmc
mov
out
xor
xor
repz
rcr
test
fucom
cli
mov
into
faddp
in
repnz
in
sti
fdiv
out
adc
out
sbb
ljmp
sbb
into
sub
fcmove
int
stc
fcmovb
iret
xor
std
testl
xacquire
xor
repz
fistpll
int3
cmp
fnstsw
cli
lock
cmc
mov
fisttps
int3
xor
cmp
enter
lret
jecxz
cmp
ret
lret
orb
xchg
loop
xor
in
aaa
fidivl
ss
aad
int3
cmp
repz
loopne
fimull
call
aam
call
fcompp
out
iret
ret
rcl
xchg
orl
out
fidivrl
in
lock
fneni(8087
shl
ds
lret
cli
orl
nop
divl
loop
cmp
jmp
cmp
fcomp
test
aad
fmuls
in
jmp
ljmp
in
jmp
enter
std
ret
into
rcr
loopne
lret
mov
int3
call
clc
aad
lock
fmulp
xor
sti
into
ret
aam
cld
clc
hlt
test
mov
ret
rorl
xor
enter
xor
enter
ret
repz
shl
leave
stc
mov
mov
call
xchg
rol
rol
sti
rcr
aaa
in
int3
ret
loopne
ret
repz
in
in
les
rclb
clc
fdivl
int
fxch
out
into
xlat
shl
ret
loop
lret
xlat
in
cld
ljmp
out
ljmp
icebp
cld
hlt
repz
jecxz
cmp
in
test
addb
in
aaa
out
jmp
loopne
loop
cli
add
mov
clc
ror
std
fisttpl
divb
aad
repnz
hlt
loope
xlat
neg
mov
dec
lock
jecxz
rol
ret
ljmp
ret
cmp
repz
idiv
std
mov
in
loop
xchg
ret
in
call
jmp
cmc
loope
icebp
cli
faddl
in
jmp
jmp
out
idivb
cmp
cmp
cmp
test
leave
mov
jmp
push
mov
sub
mov
push
movl
cmpl
je
cmpl
jne
push
pushl
pushl
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
movl
cmpl
je
cmpl
jne
push
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
add
jmp
into
aas
rol
rcl
aam
pop
xchg
and
jnp
dec
lahf
addr16
push
add
inc
out
ror
aas
fcom
aas
add
orl
fsubp
in
mov
loop
ret
lret
lret
cmp
xchg
jecxz
vpand
xor
rcl
stc
cmp
fsubr
enter
sarb
out
roll
mov
in
ljmp
test
xor
out
loop
xor
cmp
fucomp
int3
out
xor
orl
xchg
iret
div
rcr
shlb
in
ds
cmp
xlat
inc
out
shl
inc
loope
in
rolb
xor
cmp
sti
out
cmp
into
loop
loope
out
lds
orb
in
shll
leave
cli
jmp
fdivr
out
int
roll
stc
cmp
cli
out
repz
addb
in
loop
out
mul
in
enter
out
enter
loop
xchg
sub
cmp
cld
lret
cmp
cmp
aam
test
mov
in
hlt
std
test
iret
out
out
aaa
int
ljmp
int3
shl
repz
push
lret
clc
clc
lret
mov
fimuls
ljmp
fcomp
lret
out
shr
cld
loop
jmp
in
jmp
incb
xlat
ret
aad
icebp
repz
cmc
cld
sbb
aam
mov
incl
out
aam
lock
fstpt
aad
add
out
clc
sarb
loope
fiaddl
mov
xchg
xor
aad
in
fadd
ror
cmp
xor
shl
out
roll
clc
std
ret
cld
lock
fsubrp
loopne
jmp
stc
cmp
xor
in
repz
aad
clc
in
fisttpll
in
xor
cmp
cld
in
std
ss
out
call
sub
jmp
loopne
push
fdivp
xor
fdivs
sar
into
icebp
clc
fsubr
iret
test
lret
stc
inc
loope
lock
cmpb
out
lock
cmc
sar
fcmovnbe
fdiv
cld
add
leave
fucom
ljmp
lock
in
icebp
ss
out
out
xor
cmp
rcl
aas
hlt
into
in
out
test
test
sti
fildl
cmp
xor
int3
cmp
xlat
in
out
xlat
into
shl
repz
jecxz
clc
loope
mov
icebp
repz
xlat
in
cmp
aam
incl
cld
test
in
mov
test
out
repz
hlt
in
neg
cmp
icebp
aas
int3
out
cmc
aam
out
incl
in
lret
into
nop
ljmp
call
rcl
out
loope
lds
fsubp
addl
in
fidivl
std
leave
aad
rcl
and
xchg
shr
ret
call
or
xchg
cmc
cmc
in
int
hlt
jmp
call
fcmovb
mov
fcmovnbe
std
xlat
xlat
jmp
ror
lret
xchg
cmc
shll
in
enter
sub
int3
aas
loop
aad
test
lds
int3
sti
test
cmp
out
fmul
aad
ret
xchg
fcos
call
loop
mov
fimuls
cmp
jmp
into
xor
cmp
loop
ret
loop
mul
hlt
enter
fcomi
ficoms
in
mul
cmp
cmp
test
lret
ljmp
in
xchg
out
aas
xor
repnz
lret
xlat
xor
cli
cmp
addl
xchg
shl
idivl
jmp
clc
fcmovb
jmp
fisttpll
out
int
out
in
into
loopne
in
fstpt
sti
hlt
jmp
filds
call
test
out
call
divb
rcl
loopne
clc
sub
in
clc
in
fucomi
lret
iret
sbb
repz
sarb
hlt
lret
sti
out
jecxz
stc
test
repz
or
ljmp
in
into
aaa
xlat
xlat
rcr
aam
cmp
out
loop
ret
icebp
sbb
xlat
jecxz
jmp
in
loopne
mov
shl
cmp
cmc
ffree
shr
sti
fcomi
aad
stc
in
mov
out
div
rol
out
in
fdivrp
addb
aad
leave
movl
repz
in
cli
sti
hlt
cmp
sar
test
icebp
cld
sbb
enter
cli
in
int
xchg
xchg
test
cmp
loopne
aam
icebp
add
into
ljmp
add
inc
add
add
add
add
je
cmpl
jne
push
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
mov
sub
sub
mov
or
jmp
ret
fmul
fstp
xchg
aaa
pop
adc
iret
test
jg
push
add
jmp
xor
fstp
int3
fst
not
int3
cmp
ret
xchg
idiv
stc
aad
xchg
loop
std
mov
in
out
cli
leave
cmp
lret
ds
into
hlt
aaa
cmp
out
in
leave
loopne
mov
lret
repnz
xlat
jmp
hlt
in
aad
hlt
cmc
aad
and
fldl
into
jmp
jmp
shl
out
int3
testl
cmp
lds
loope
sar
cmp
out
test
ss
loop
in
jecxz
test
mov
repz
shll
in
sar
lret
lock
adc
repz
shl
call
ljmp
ljmp
sar
loopne
std
lock
fcmovnb
xlat
lret
test
popl
mov
cmp
int3
idiv
jmp
loope
adc
rcl
orb
in
into
out
out
imul
repnz
cmp
rcl
out
cmp
out
out
fucomip
mov
int
icebp
aas
xor
cmp
ljmp
cld
repnz
clc
testb
cld
fcmovnu
lret
hlt
cmp
repz
lret
test
cmp
rol
addb
in
fcmovb
incl
ss
hlt
cmp
rcr
out
out
sarl
fucom
mov
out
ljmp
vpinsrw
into
stc
cmp
ds
shl
xlat
and
or
mov
fmul
sti
into
repnz
sub
ror
sti
icebp
std
call
in
in
fsub
cmp
mov
int3
lds
in
jecxz
cmc
shl
cmp
xor
in
rcl
testl
loop
test
cmc
ret
fcmovbe
sti
cmp
repz
div
fsub
xlat
inc
mov
fstl
mov
call
iret
iret
cmp
std
sar
mov
out
addb
int
xor
lock
cmp
lock
cmpb
and
fscale
leave
clc
jmp
xchg
std
xchg
ss
loop
fcomi
fdivs
stc
jmp
stc
in
sar
roll
mov
filds
xlat
rcl
cmc
jmp
lret
stc
add
loopne
ret
test
iret
addl
aad
fsubr
call
std
in
stc
bnd
mov
movb
jecxz
jmp
ror
in
int3
cmc
fcomi
jecxz
out
rol
aad
sub
into
fimuls
in
xor
jmp
shr
hlt
repz
jecxz
icebp
sti
in
sbb
orl
xlat
in
cmp
out
out
loopne
fcmovnu
ss
incl
div
fadd
into
std
xchg
call
int3
xor
into
std
xlat
aam
loope
jecxz
fstpt
faddp
ret
mov
repz
mov
loopne
lea
xor
cmc
in
fdivs
ds
cmpl
call
into
mov
ror
test
xor
aam
hlt
into
in
sti
cld
jecxz
into
std
cli
test
loopne
fldl
shl
into
loop
cs
in
cmp
cmp
cmpb
ss
aam
cld
jmp
in
repnz
cmc
cmp
lret
icebp
out
clc
cmp
in
icebp
hlt
fildl
call
xor
into
cmp
call
icebp
fsub
ret
ret
loop
stc
call
int
xor
aaa
jecxz
out
out
aad
cmc
fdivr
ds
xlat
loop
xchg
in
fmulp
into
out
loope
xchg
in
ret
out
sar
aad
xor
cmp
cmp
call
fadds
xchg
decl
xor
xor
rcl
into
jecxz
cmp
loope
faddl
jecxz
out
loop
sar
cmp
aaa
test
ds
sti
cmpl
fsubr
out
in
hlt
in
out
out
icebp
enter
stc
rcl
icebp
in
std
sar
jecxz
testb
jecxz
repz
sti
xor
cmp
loope
repnz
loope
fmuls
into
std
mov
shlb
fstp
cmp
icebp
rolb
clc
test
and
fucomp
loope
jmp
clc
lret
jmp
imul
xor
aad
loope
cli
fimull
mov
lret
repnz
cmp
rcr
rcr
std
mov
addb
inc
add
sbb
mov
mov
adcl
add
xorl
jmp
ror
lret
int
int
bound
movsb
jb
jg
push
add
testb
in
cld
out
aad
repz
sarb
std
stc
ror
ds
ret
sti
idiv
fdivr
loope
loop
xchg
hlt
loop
loope
cmp
ljmp
sar
aam
out
std
stc
ret
les
mov
rcr
stc
in
lock
cld
fxch
or
and
in
neg
mov
in
call
out
xchg
mov
cmp
cmp
iret
cmp
lock
sar
cmc
cmc
mov
nop
out
fcomi
xchg
ss
fucomp
int
shl
fsub
aam
loop
aad
mov
out
leave
out
int
lret
xor
imul
stc
std
in
lock
cmp
out
lret
fmul
in
mov
rcl
jmp
aad
int
int
lret
stc
fstpt
loop
call
test
aad
ret
in
call
stc
cld
cmp
out
hlt
addl
fisttpl
stc
fsubr
stc
xor
int
shl
div
ffreep
add
fmull
call
icebp
stc
lret
cli
cli
out
ljmp
fsub
fsubrp
std
rol
in
call
lret
xor
xor
cmc
push
fstp
cmp
ret
sub
std
mov
icebp
mov
iret
loope
ret
out
cmp
clc
fldl
aad
icebp
clc
in
test
stc
loope
in
decb
stc
repnz
ss
sarl
fchs
mov
cmc
testb
mov
rcl
shl
xlat
jmp
loopne,pt
sbb
mov
ret
loop
xchg
repnz
xor
ss
jmp
cmp
out
repz
mov
fadds
out
out
loopne
mov
loope
in
rol
ss
cld
in
addb
mov
call
out
int3
int3
xlat
cli
xor
into
ss
icebp
cmp
addl
int
adc
call
out
cli
fld
xlat
fmulp
aam
cmp
sarb
cmp
sti
cmp
mov
in
test
xor
shr
out
cmp
sti
jmp
test
cli
rcl
idiv
ljmp
shr
xor
xor
xor
cmp
rcr
loop
loope
lret
test
xchg
in
xor
cs
cli
in
fidivrl
aad
aam
call
sbb
xchg
mov
jmp
icebp
enter
in
in
rcr
out
clc
loop
sbb
std
cmp
fcmovnu
int
testl
shr
shr
xor
not
out
sti
cld
fcmovnu
in
addl
int
out
repnz
cld
fcomi
into
rcr
lret
roll
ret
int3
loopne
xchg
shr
aam
xorl
ret
xor
call
jecxz
in
cld
dec
in
in
int
mov
mov
aam
test
repnz
icebp
xlat
int3
rcl
dec
fcmovnb
repz
xlat
lret
loope
xchg
stc
mov
shl
out
jmp
ror
lds
ror
ds
shl
test
test
jecxz
iret
popl
das
imul
aam
in
leave
clc
call
loopne
hlt
stc
fcmovnu
int3
lret
test
mov
in
ret
into
loop
ret
out
repz
imul
int3
hlt
ret
test
lret
cmc
in
enter
loope
out
xor
cs
hlt
aaa
clc
xlat
cmp
div
in
lret
icebp
int3
jmp
out
xor
cli
test
repz
test
sar
stc
cli
fldl
icebp
or
ficoms
fyl2xp1
repnz
sarl
sbb
xchg
mov
int
loope
repnz
fdiv
iret
fldlg2
aam
repnz
inc
loope
neg
mov
mov
loope
xchg
ror
in
in
loopne
out
icebp
not
xor
rcr
repz
cli
into
fcom
and
stc
div
nop
fcmovu
out
out
add
into
icebp
fmul
icebp
sarl
fnop
lock
iret
mov
incb
mov
mul
xor
bnd
cmp
ljmp
clc
loop
leave
mov
in
enter
in
in
sar
icebp
in
lret
lret
fcmovnu
loope
rol
loope
mul
int3
in
iret
lret
lock
lret
xor
lret
sti
aad
std
fdivrs
sarl
xchg
out
shr
loope
jecxz
out
mov
loopne
int
aad
lret
hlt
adcb
cmp
sub
mov
mov
add
mov
xor
negl
movl
adcl
jmp
ror
int3
mov
cmp
jne
jle
add
lret
cmp
test
out
idiv
jmp
out
enter
jmp
out
shl
cmp
sarb
test
hlt
rcl
mov
loop
lret
adc
mov
aaa
cmc
xor
lret
cmp
cmp
sub
in
mov
loop
loope
aad
stc
rcr
icebp
enter
aad
test
dec
jecxz
std
call
jmp
loopne
shl
stc
out
into
icebp
aam
clc
fdivr
cmp
fsubr
cmp
sti
mov
rorb
cmp
shr
xlat
fsubp
ret
out
fsubrp
cli
xchg
ror
jmp
jecxz
xor
out
stc
aam
enter
cmc
out
icebp
shl
mov
sbb
jmp
out
lock
shr
aam
icebp
cli
lret
cmc
shl
cmc
rcr
jecxz
test
aad
loope
rorl
clc
jecxz
shl
xor
xlat
aas
icebp
addb
fmulp
loope
clc
in
icebp
out
jmp
jmp
out
shr
cmp
loopne
cmc
jecxz
ljmp
loopne
fists
xor
cmp
cmp
cmp
in
ds
cmc
in
ret
loop
out
mov
mov
loope
xor
cmp
roll
fiaddl
nop
or
int
hlt
mov
int3
hlt
call
lock
jmp
sti
lock
fiadds
fcmovnu
int
mov
jmp
ss
leave
int3
cmp
cmp
ffree
loop
fsub
test
fdivp
sbb
ror
xor
fdivs
cmp
aam
in
fadd
loop
ljmp
fildl
call
jmp
in
cmc
loope
ret
rol
faddp
test
in
std
xchg
xchg
loop
int3
ljmp
xor
in
rcr
clc
xlat
filds
loopne
cmc
neg
test
mov
shr
shll
cmp
xor
cmpl
ret
enter
in
cld
and
xlat
out
shlb
ss
cmp
aad
aas
in
xlat
ret
add
nop
xchg
jmp
nop
mov
ljmp
enter
icebp
fldl
div
xlat
jmp
lea
adcb
out
clc
ss
faddl
cmp
loope
in
loopne
into
rclb
xor
in
ss
in
sbb
loope
les
idiv
out
orl
out
das
aad
jmp
int
int
neg
lock
rolb
jmp
call
call
shlb
into
sti
cmp
icebp
lock
out
int3
in
cld
shr
out
enter
repz
repnz
addl
fld1
cld
test
into
out
xchg
out
loop
divl
fcmovnu
out
rol
cld
out
xlat
aad
aad
loop
loop
leave
in
adc
in
clc
in
into
cmp
shl
fsubp
xor
fprem
ret
loopne
jmp
dec
dec
jmp
xor
repz
in
cmp
repz
rcr
repnz
out
nop
incl
sar
ss
repz
stc
xchg
sar
enter
sti
mov
in
mov
cmp
divl
cmc
ss
loope
lock
ret
hlt
in
xlat
mov
sub
popl
repz
iret
fsubr
or
sarl
fiadds
mov
rcl
rcr
cmp
cmp
xlat
into
clc
rol
cmc
aam
out
jmp
jmp
leave
divb
lret
stc
ffreep
repnz
loop
icebp
enter
out
iret
in
xchg
adcl
lret
xlat
ljmp
rol
std
stc
fmull
xchg
iret
xor
aam
repnz
in
shr
jecxz
shl
cmp
cli
in
or
mov
shl
mov
loopne
fsincos
in
clc
lret
xor
hlt
decl
orb
repz
xor
stc
xor
iret
clc
std
rolb
out
ret
cmp
orb
icebp
in
aas
repnz
fcmovb
out
enter
xor
sar
sti
cld
enter
xchg
xchg
enter
jmp
aaa
fdivrs
lret
jmp
lock
movb
in
xchg
xchg
loope
movl
sbbl
add
movl
jmp
cmp
movl
jne
jmp
aam
aam
ds
adc
loop
jp
jle
add
out
loop
out
cld
call
jecxz
sbb
aam
clc
jmp
mov
int3
int3
xor
int3
stc
hlt
clc
out
fdivp
lret
xlat
hlt
iret
ror
hlt
clc
or
out
out
icebp
loope
into
ret
cmc
lret
out
ljmp
loope
jmp
loopne
mov
fcomi
addl
shll
hlt
std
aas
rcr
aam
cmp
leave
jmp
mov
ret
into
mov
xor
cli
leave
fcmovu
enter
fxch
rolb
fiadds
jecxz
nop
loope
ror
neg
xor
aaa
rcr
in
cmc
cmp
loope
aas
rcr
incb
jmp
in
mov
out
aad
cld
repnz
cmp
aam
in
cli
in
cli
cli
shl
int
std
sti
lea
sti
int3
xor
lock
and
test
out
into
lock
and
mov
shl
lock
sti
in
xlat
ds
repz
ffree
addb
stc
xchg
mov
fcomip
fnstcw
cmp
xor
stc
cmp
adc
loopne
mov
fdivrp
in
lock
loope
call
loopne
out
sar
ror
call
sub
int
loop
fucom
in
stc
les
in
int3
das
clc
xlat
jmp
repnz
rcl
lret
out
in
out
faddl
out
fsubr
rcl
ljmp
fiadds
cli
leave
sti
mov
in
hlt
divb
cli
cld
neg
into
ret
aaa
hlt
cmp
test
test
out
jmp
repnz
sub
aad
int3
enter
sub
ret
test
ret
xchg
adcb
lock
lock
cmp
loopne
shr
cld
aad
mov
ds
out
test
nop
shr
addl
loopne
cmp
jecxz,pt
xchg
jecxz
fcomp
inc
out
repnz
out
loope
into
out
int
cmp
loopne
fmul
cmp
aas
clc
xchg
test
enter
mov
jmp
cmc
iret
jmp
cmpl
aam
sti
call
mov
out
frstpm(287
loopne
loop,pn
fdivs
fdiv
cmp
shr
add
out
clc
fmuls
loope
and
loope
loop
jmp
loopne
in
xor
rcl
out
cmp
cmp
aam
out
mov
orl
in
lret
lret
repnz
stc
rcl
call
loop
xchg
repz
lret
xchg
fcmovu
lret
xchg
icebp
lret
cld
jmp
ds
cmpb
cmc
iret
rcl
stc
out
clc
mul
lock
lret
int3
cmc
in
ss
cmpl
fadds
mov
icebp
jmp
clc
sub
fcmovnu
into
enter
ds
idiv
add
lret
decb
xchg
out
rol
leave
cmc
shlb
fxch
hlt
stc
ret
cli
fdivp
frndint
adc
fcmovnb
aam
rol
ret
xlat
out
cmp
lock
xor
jmp
int
frndint
mov
lret
shl
jmp
repnz
in
fld
stc
loop
shl
stc
aad
and
xchg
loop
into
fcomi
jmp
xor
shl
cmpl
rol
int3
stc
mov
repz
rcl
loop
jmp
int
out
ds
fcmovne
aas
cmp
std
xchg
fsub
div
mov
loopne
shr
out
icebp
int
leave
leave
div
xor
fsubr
in
ret
loop
cld
ret
in
aam
sti
mov
out
call
cli
fidivl
repnz
cmp
ret
aam
fucom
ljmp
fcomip
test
loopne
loope
cmc
sar
dec
cmc
in
in
enter
in
sar
sub
rorb
jmp
enter
in
lock
mov
mov
in
orl
lret
jmp
iret
in
lock
jmp
loop
mov
repnz
loope
cmc
cli
int3
sarl
ss
cli
jecxz
std
cli
call
out
ror
cld
int
out
xorb
fxch
lret
lock
fdivrl
aas
or
clc
ret
in
lds
in
xor
hlt
xor
out
jmp
int
sar
sarl
loope
call
mov
int3
jecxz
in
out
int
xor
xor
in
fadd
cmp
rolb
lret
mov
mov
movl
mov
mov
mov
mov
jmp
int3
ret
int
mov
pusha
das
fmulp
xor
jg
jle
add
sti
int
in
out
rolb
ljmp
aaa
out
cmp
stc
cli
cld
jecxz
mov
fisttpll
inc
in
jecxz
lret
cmp
cmc
adc
jecxz
out
loope
in
fcmove
mov
jecxz
iret
or
ljmp
sar
lret
lock
cmp
hlt
test
lret
in
and
mov
mul
int
sti
stc
in
xlat
mul
sarl
ds
sub
leave
into
loope
loope
fcmovnu
test
icebp
das
hlt
cli
aad
int
aas
cld
shr
cmp
aad
jmp
leave
iret
out
int3
mov
jecxz
das
call
out
sti
rcr
in
aaa
xchg
inc
clc
xchg
leave
int
fmul
les
cli
xor
std
int3
cmp
cmp
lret
aam
rcr
rcl
xlat
cli
lret
std
xchg
call
div
jmp
into
xor
lret
cmp
in
fstp
fiadds
out
iret
out
in
repz
jmp
cmp
xor
ljmp
hlt
std
ret
clc
fcmovnbe
mov
in
or
shl
sub
ret
out
aam
fnstcw
cmp
idiv
sti
stc
stc
in
in
orl
xlat
loop
aad
xlat
xlat
out
xor
hlt
sti
ret
fstp
addl
loop
xchg
call
in
in
fdivp
fcomip
hlt
loope,pt
rol
sbb
clc
fisttps
mov
out
in
iret
icebp
neg
int
int
sar
adc
aad
out
fdivr
orl
divb
xor
cmp
clc
in
sarb
fildl
test
aad
or
cld
in
in
int3
xchg
aam
clc
aad
lret
shr
out
fucomp
clc
lret
stc
stc
fucom
aad
jecxz
in
xchg
ljmp
fnstcw
in
cmp
jmp
fcmovu
std
sbb
fsubp
and
cld
rorb
in
repz
jmp
shl
shlb
lret
rol
shl
les
lret
iret
xchg
mov
leave
xlat
xor
aam
ljmp
addb
ret
clc
in
mov
cmp
out
idiv
xor
shl
out
aam
sti
sbb
adcl
cmp
into
jmp
aam
and
test
icebp
xlat
cmc
clc
clc
test
xchg
jecxz
out
neg
cmp
fdivrp
hlt
out
std
clc
cmp
out
std
out
sar
lds
nop
mov
aaa
repz
ljmp
aam
cmp
ror
mov
lret
mov
test
into
int3
hlt
aad
jmp
xlat
hlt
cld
repnz
loope
ljmp
xchg
jecxz
iret
aam
div
icebp
xor
aad
div
ret
test
loopne
movb
xchg
sti
sarl
fdivr
icebp
fsubr
aas
cli
mov
fisttps
std
adcb
rol
xor
lret
out
shl
shl
addb
cmc
and
fucomp
loopne
push
out
in
aam
imul
fmul
fscale
fiaddl
cli
call
int
mov
orb
xor
shl
ds
out
inc
ret
fmull
addl
out
out
cmp
in
sarl
repnz
out
vpavgb
or
cli
int
call
int3
jecxz
int
sar
cli
fmul
loopne
in
aam
out
testl
out
hlt
lret
out
xor
fmul
fcomi
loopne
incb
fcmove
decl
adc
clc
in
call
out
jmp
iret
repnz
incb
vmovq
xor
in
cmp
in
in
cli
cli
shl
lock
fcmove
aad
fcmovnb
shr
jecxz
repz
fcmovu
fsubr
ljmp
icebp
call
in
xchg
shr
xor
ror
stc
ljmp
repz
aad
aas
enter
fsubr
leave
into
cld
xchg
and
in
shll
xor
xlat
lock
cmp
icebp
mov
jecxz
enter
xchg
lret
xchg
xor
fxch
cld
jmp
cli
fxtract
cmp
cmc
jecxz
call
xchg
mov
repz
ss
cmp
ret
shl
repz
in
clc
decb
enter
cli
aad
repnz
sarb
lret
call
add
add
out
add
add
rcl
aad
aad
push
push
scas
sti
and
ja
add
jle
add
sub
xlat
jmp
icebp
jmp
in
in
int3
int
cld
sar
lret
sti
fnstsw
fst
addb
in
addl
div
out
lret
in
aaa
cmp
xlat
icebp
icebp
ret
in
leave
loopne
leave
cld
sti
repnz
repnz
ror
fstpt
aad
std
enter
ljmp
hlt
in
inc
shl
repnz
cmp
lret
rcr
les
in
addb
xchg
ljmp
in
lret
std
rcr
cmp
rcl
repnz
repnz
fdiv
mov
in
mov
nop
jecxz
lock
sti
std
fstp
rcr
aas
loop
rol
aam
test
jecxz
loope
cld
fimuls
in
cmc
cld
cmp
cmp
loope
fmull
loopne
xchg
xchg
in
jmp
rcl
in
xlat
not
out
in
rcl
repnz
cld
sar
fnstsw
mov
fadds
or
in
aam
out
cmp
in
div
ds
dec
and
loopne
mov
imul
out
xor
xor
lock
into
in
cmc
shl
aam
out
xlat
rolb
std
mov
test
into
int
loopne
jmp
aaa
int3
cmp
aas
loope
hlt
sbb
cld
fdivr
loop
cld
loope
into
fcmovnu
decl
fcmove
call
cmp
fucomip
cmc
xor
aad
fadd
fdivrp
jecxz
sti
leave
out
mov
stc
out
ljmp
ret
iret
cmp
aas
cld
loopne
cli
addl
int
leave
call
fsub
xchg
repnz
rcr
test
fisttpll
loope
cmp
fdiv
aad
sarb
jecxz
jecxz
test
mov
cld
jecxz
xchg
int
out
loop
aam
xor
jmp
cmp
cli
ret
loope
sar
leave
hlt
in
fcom
out
rolb
lret
stc
jmp
loopne
in
out
mov
xchg
cmp
test
lret
rcl
hlt
in
cmp
aad
shr
ds
fstp
fcmovu
loope
xlat
xchg
in
shl
mov
in
rol
in
leave
lock
cmp
fucomi
shl
xlat
loopne
shl
fsub
testl
in
in
xor
aam
iret
clc
clc
cmpb
loope
xlat
aas
rcl
in
ljmp
sar
in
sub
cmp
ljmp
ffreep
rcl
bnd
sbb
into
fst
out
lret
hlt
lock
cli
sti
jmp
loope
repz
faddp
fcompp
ljmp
loope
cmc
shr
call
cmp
ret
fiaddl
stc
fimuls
loop
int3
rcl
in
lret
cmp
in
in
in
shl
ret
aad
out
nop
jmp
rcl
enter
fdivrl
fcomp
out
idiv
cmp
xlat
clc
cmp
test
sub
repnz
icebp
leave
aad
out
ljmp
add
sar
xlat
xchg
cmc
sub
hlt
sti
cmp
out
ss
test
sar
faddp
lret
jmp
int
xchg
aam
ret
shll
cmp
jmp
xor
xlat
cmp
out
mov
sar
in
test
repz
cmp
xor
repnz
out
cli
mov
clc
ret
xchg
in
shl
test
sub
xlat
lock
loopne
xlat
fiadds
std
xlat
icebp
out
in
test
out
in
in
stc
xlat
aas
fnstcw
loopne
in
rorl
fisttpll
int3
jmp
in
rol
ss
shr
roll
xchg
repz
ret
loope
mov
call
aad
cmc
xor
out
aam
cmp
test
testb
ret
int3
xchg
xchg
out
pause
xchg
clc
out
cmc
in
shr
enter
ss
out
aad
mov
std
mov
addb
jecxz
xor
enter
fstpt
int
int
ret
iret
call
leave
cmc
inc
int3
out
out
out
cmc
mov
loopne
int3
icebp
sti
aam
sti
aad
cmp
jmp
stc
out
cmc
ret
loope
xlat
loopne
leave
int3
in
in
mov
out
cli
jmp
out
out
aas
sti
out
mov
mov
lret
fimuls
call
shr
addb
cmp
sti
jecxz
loop
jmp
std
dec
mov
call
or
mov
jmp
aas
into
lret
leave
aam
dec
jo
mov
or
jle
add
in
fcomi
dec
aas
out
xor
aad
fcmovnu
aad
shl
xchg
test
test
jmp
mov
cmp
out
sarl
rcr
fldl
aam
stc
mov
std
or
out
aam
repz
ror
in
cmp
loopne
int3
loop
rol
xlat
xchg
xchg
idiv
cli
nop
out
rcl
decl
xor
sarb
repnz
sar
fadd
stc
addb
mov
not
repnz
enter
out
cmp
jecxz
fstp
rol
in
mov
xchg
xlat
fxch
out
out
jmp
jmp
aaa
ljmp
shr
icebp
aam
cmp
enter
call
clc
jmp
ss
fstp
out
cmc
sub
aad
mov
cli
cld
mov
xchg
sti
cld
xor
std
adc
lds
dec
and
fucomp
fucomip
repnz
div
aad
aad
aam
int3
fucomp
int
jecxz
shr
cli
sti
lret
stc
std
loop
dec
icebp
enter
std
rcr
cmp
jecxz,pt
in
out
in
std
fucom
sti
decb
ret
iret
xor
enter
jmp
xchg
repz
fiadds
leave
jmp
call
repnz
out
aam
aas
jmp
loopne
aad
ret
rcl
out
fcmovbe
xchg
out
test
mov
fxch
sub
fcmovnbe
in
fdivrs
cmp
cmpl
and
jmp
adcl
std
out
out
in
xor
mov
rcr
in
test
ror
shl
ljmp
into
aas
loopne
in
clc
cli
ror
hlt
int3
test
repnz
repnz
neg
fnstcw
loopne
cmp
roll
flds
fcmove
mov
loop
shl
aam
sti
cld
xor
fdiv
ss
vpsraw
ffreep
test
addb
fldln2
cmp
int
int
cmp
ljmp
in
nop
test
mov
in
xor
jmp
hlt
cld
fnstcw
fiadds
imul
fsub
iret
out
mov
sub
xor
imul
cmp
iret
clc
std
lock
adc
lds
lret
mov
xor
ret
aam
imul
cmp
lock
and
sbb
fucomi
xchg
enter
divb
out
shl
fidivs
lret
int3
rcl
shl
fcomi
repnz
neg
fldl
int3
fst
ror
xor
in
jmp
clc
aam
cmp
mul
addl
mov
fadd
shr
icebp
hlt
ror
div
shl
loope
fisttpl
out
xchg
icebp
add
lock
repz
xor
ljmp
cld
fcmovnu
call
out
xor
int
aam
clc
jmp
loope
fsub
aad
leave
call
mov
in
std
repnz
iret
repnz
icebp
repnz
in
aaa
stc
aad
lock
rol
cli
ljmp
lret
loopne
xor
ror
fcmovu
xlat
lret
fcmovne
xor
hlt
jecxz
call
xor
out
and
ror
fsubp
xor
vpaddusb
xor
std
fnstsw
rcl
xchg
aas
test
and
xchg
sub
out
out
repnz
stc
xor
call
hlt
in
shl
loopne
mov
repz
in
jmp
clc
fcmovu
fdivrs
stc
sarl
mov
sti
leave
std
ds
int3
cld
std
loop
into
shr
int3
ret
rol
cmp
xor
xlat
test
fninit
ds
repnz
call
mov
out
nop
rcl
jmp
int
stc
iret
xor
jecxz
loop
shl
test
mov
out
xchg
xchg
nop
mov
das
loope
out
leave
fdivrp
in
loop
out
clc
fdiv
cmc
mov
lret
ljmp
leave
into
lds
xor
into
xor
loop
aad
aad
aas
rol
aam
fucomp
out
sti
jmp
enter
leave
icebp
jmp
ret
aas
fadd
loope
in
aas
call
lret
lock
in
loop
aam
fcomp
ror
int3
cmp
in
test
in
and
rorb
loope
xor
ss
fadd
loopne
aas
test
cld
clc
cmc
adc
nop
int3
std
mov
iret
loope
fmul
test
hlt
xlat
repnz
repnz
fsub
mul
in
sub
push
mov
jmp
int3
ret
int3
int3
sahf
pushf
sets
lret
add
add
xlat
fcmovnbe
repnz
fimuls
in
call
ror
rcl
xchg
mov
addb
mov
xchg
fdivr
into
hlt
sub
sarl
xorb
sti
stc
fimull
fstp
jecxz
xchg
repz
xor
idiv
ror
loop
icebp
ret
iret
xlat
rorb
xbegin
ljmp
cli
in
icebp
cmp
sti
cmc
ror
shl
out
loopne
in
mov
fsubrp
nop
fisttpll
repz
stc
cmp
testb
out
fmul
xlat
in
fldl
test
in
in
sub
enter
ds
xor
cmc
cmp
test
in
in
sti
nop
int3
xchg
repnz
xor
xor
neg
fcomp
repz
ds
jecxz
rcl
ljmp
fiadds
ror
icebp
cmp
ss
ss
fdivp
call
or
loopne
lret
xchg
jecxz
clc
sub
std
shl
iret
stc
cmp
clc
roll
call
in
hlt
leave
lock
rcl
repnz
sar
rorl
jecxz
xchg
test
leave
ret
repnz
in
call
ret
cli
jmp
fisttpll
out
lock
shl
shlb
lock
hlt
clc
cmp
xlat
cmc
leave
in
aad
xchg
cli
lock
cmc
out
repz
cli
lock
fadd
ljmp
mov
sti
fisttpl
jmp
cmp
cmc
stc
xor
ds
xlat
repz
shl
out
xchg
mov
iret
xor
in
icebp
cld
shr
aad
sti
jmp
in
xlat
xchg
std
clc
fildl
repnz
lret
repnz
leave
cmp
addl
loopne
sub
out
repz
lock
clc
fcomp
in
aaa
stc
clc
ret
cmc
out
clc
lret
mov
std
sti
cld
in
aad
xor
icebp
neg
loope
test
loop
movl
out
shr
loop
das
enter
fcmovne
out
iret
cmp
lock
ret
hlt
ret
repz
xlat
flds
int3
les
call
rcl
in
sbb
fst
out
rcl
cli
in
loope
xchg
out
out
rcr
sar
iret
lock
int3
sub
hlt
loop
stc
addl
vcvttpd2dq
leave
stc
cmp
int3
out
in
loope
not
ret
stc
add
jecxz
loop
xchg
aad
xor
aaa
cmp
sti
cmp
aad
and
in
out
std
enter
loopne
xchg
call
in
shl
fdivrs
jmp
shl
sti
and
test
nop
xor
jecxz
nop
repnz
out
shr
repnz
sti
rcl
cmp
loopne
in
std
orb
lret
fmull
in
ss
repz
aam
repnz
ds
aam
fdivr
mov
in
repz
sub
in
in
xor
fcmovbe
cmp
loope
fcmovnb
mov
stc
cmc
int3
loopne
loopne
ljmp
out
fmul
xor
add
repz
mov
fists
shl
ror
icebp
cmp
hlt
roll
xlat
aam
in
test
xchg
lds
ret
aaa
in
das
cmc
adc
lret
stc
mov
mov
loope
out
in
das
icebp
aam
aam
cmp
aam
cmp
xor
sar
out
sti
int
jmp
or
hlt
fnstenv
jmp
cmp
div
cmp
cmc
fdivr
repnz
jmp
xor
icebp
clc
int3
sti
out
out
jmp
ret
out
fcmovbe
addb
cld
mov
lret
out
shl
aad
in
ss
addl
loopne
fldlg2
sti
jmp
in
xor
call
into
jmp
rol
repnz
inc
stc
std
out
repz
mov
in
lret
xor
fdiv
jmp
fucom
hlt
sarl
xlat
clc
incb
repnz
xchg
out
aad
in
mov
cmp
cmp
xlat
cmp
xlat
mov
test
in
xchg
lret
xchg
out
in
cmp
ffree
xor
cli
cmp
aad
mov
mov
xlat
xchg
mov
aaa
lock
hlt
rcr
clc
jmp
int
add
jmp
lret
into
fst
fstp
bound
pusha
dec
adc
jle
add
hlt
idiv
adc
inc
enter
leave
xchg
clc
in
sub
cmc
aas
clc
and
xlat
rcr
jmp
out
lret
lret
std
loopne
xor
sti
stc
std
rcl
leave
cmp
rcr
jecxz
aas
fcom
cmp
rcr
mov
std
in
in
into
ljmp
ljmp
cmp
rcr
or
out
sti
iret
repz
div
repnz
int
sti
stc
in
ror
hlt
int
test
sar
test
fxam
jmp
shl
xchg
aas
ror
cmp
cmp
jmp
clc
loope
icebp
into
in
xchg
loope
in
mov
in
xchg
in
loop
test
repnz
hlt
fdiv
in
jmp
rcl
cld
cld
in
cmc
loopne
sti
in
fdivrp
lock
call
lret
testb
inc
cld
jmp
sub
rolb
in
cmp
fdivrp
fdivs
xor
out
shr
xchg
loope
xchg
fabs
into
fsubr
cmp
xchg
enter
jmp
call
repnz
ret
sar
loope
enter
jmp
fsubrp
xchg
test
rcl
ljmp
fld
cmp
int
in
clc
fxch
out
and
cmc
out
aam
out
repnz
sti
rcl
stc
rolb
ret
jmp
addb
lock
rol
xor
lock
cli
fidivrs
hlt
repnz
repz
aam
movb
ljmp
fptan
sti
xlat
iret
cmp
std
out
out
repnz
out
in
nop
mov
das
cli
cmp
std
divl
lock
rol
shl
test
ret
out
out
jecxz
test
aad
lret
xlat
das
lock
iret
into
not
cld
lds
jmp
incb
enter
out
lret
cmp
lret
loope
std
incl
ret
jmp
jecxz
mov
mov
test
aad
lret
call
repz
rcr
fcmovb
sar
repz
rclb
cli
fcom
cmp
cli
repnz
fnstsw
rcr
testl
xchg
cmc
sub
fdiv
stc
cmp
sbb
cmp
in
repz
xlat
loopne
test
lds
test
mov
xor
out
int
jmp
loope
repnz
cmp
jmp
jmp
cmc
call
fstpt
aad
leave
add
ds
aad
rolb
xchg
in
xchg
leave
lret
fcmovnu
fistpll
cld
cmp
and
fcmovnb
stc
out
out
xchg
push
out
xchg
shl
cmc
icebp
lret
into
ss
aam
cld
cmp
div
fimull
test
icebp
das
xor
cmp
in
out
sarl
cld
cld
into
fdiv
test
cld
frndint
adc
int3
mov
adc
imul
repz
int3
xor
fcmovbe
aam
out
fdiv
add
sbb
mov
in
call
icebp
mov
fpatan
xchg
aad
jecxz
ftst
out
mov
out
fildll
clc
lock
aas
int3
cmc
out
ret
cmp
enter
mov
adcb
rol
cmp
shl
lock
leave
nop
xchg
fiaddl
icebp
lock
sarl
fdiv
out
cld
repz
xlat
neg
lock
lret
in
aam
fcmovu
ljmp
fiaddl
loopne
ret
mov
mov
icebp
lret
jecxz
in
cmc
lret
incb
iret
aas
ret
fucomp
lret
test
out
mov
lret
stc
stc
lock
fcmovu
iret
loopne
rol
cmp
lret
ljmp
leave
out
repz
aas
jmp
icebp
icebp
loop,pt
std
and
cli
jmp
test
out
in
in
fstpt
idiv
cmp
hlt
cmp
shr
test
nop
mov
xchg
xor
shl
rcl
jmp
fsubr
shl
out
fdivr
std
mov
in
in
in
out
ljmp
loop
icebp
std
out
lock
aaa
cmp
stc
loopne
rcl
enter
jmp
mov
icebp
test
out
sub
cmp
not
loop
test
enter
std
out
mov
mov
ror
into
leave
in
cmp
jmp
clc
fincstp
aas
mul
orb
std
xchg
xchg
mov
in
rol
push
jmp
int
iret
rcl
aad
inc
xor
xor
mov
mov
add
enter
neg
ss
fcmovnu
ret
loop
jecxz
fisttps
sub
out
in
fsubr
cmp
cmp
xlat
clc
out
mul
call
sub
jmp
mov
leave
ret
repz
lock
cmp
ret
dec
mov
cli
fdivrp
jmp
loope
test
xor
cmc
clc
aas
clc
fdivrp
cld
xchg
clc
aas
test
decb
test
enter
cli
cmp
in
clc
rol
test
in
sar
icebp
out
cmc
idivl
xor
aaa
cld
int
int
loope
jecxz
repz
rol
and
test
icebp
fdivr
hlt
rorb
rcr
hlt
in
hlt
rcr
fistpll
loopne
jecxz
cmc
decb
sti
in
jecxz
loopne
iret
stc
cli
jecxz
stc
ds
lret
ret
lock
lock
jmp
out
fldln2
fchs
in
shl
nop
in
out
hlt
out
xor
shl
out
cmp
incl
idiv
sti
mov
std
jmp
loopne
xor
into
iret
cmp
leave
cmp
sarb
out
ffreep
neg
mov
icebp
out
ror
call
out
iret
rcl
aam
ret
flds
test
nop
std
filds
xbegin
sti
jmp
in
repz
mov
sti
fsubr
loop
enter
call
int3
idivl
out
cli
jmp
rcl
std
jecxz
xchg
in
fldl
out
ret
cli
fcmovnu
leave
ffreep
repnz
stc
cmp
cli
decb
xchg
in
xor
int
xor
jecxz
fadd
ret
test
movb
rorl
aaa
xor
lret
int3
sti
aas
repnz
shl
call
call
rorl
cs
les
icebp
hlt
fcomip
loop
loope
xchg
adc
jmp
lds
call
leave
out
int
ss
cld
sti
aad
fiaddl
std
in
jmp
ficoms
in
shr
fcomi
xor
test
fneni(8087
icebp
loopne
xchg
jmp
out
call
icebp
leave
imul
enter
cmp
cmp
fucomp
test
rol
call
mov
lret
ror
test
incb
enter
icebp
out
and
aam
fisttps
movl
xlat
sti
out
lock
lock
fcmovu
cld
fsubr
stc
loope
neg
incb
lret
mov
aad
aam
xor
hlt
cmc
ret
repz
std
mov
lret
int3
int3
aam
leave
lret
fdiv
jmp
icebp
repnz
testb
mov
out
xchg
adc
int3
aad
iret
fsubrp
enter
sbb
jmp
testl
xor
int
into
loopne
cld
jmp
cmp
jecxz
xchg
out
std
call
ljmp
cmp
test
fdivrl
filds
fsub
mov
out
cli
out
int3
adcl
call
xor
cmp
fcmovnu
clc
mov
call
lret
lock
xchg
int
fcmovbe
cmp
std
out
into
lret
cmp
icebp
cmc
ret
mov
ror
fsubr
mov
xor
xor
cmp
int
loope
ds
in
in
nop
mov
jmp
mov
in
hlt
iret
aad
std
cmp
xlat
cmc
cmp
idivb
mov
in
xlat
rorb
mov
cmp
int3
lret
cmp
out
aam
out
test
icebp
fsub
loope
loopne
orb
into
aam
in
call
rol
fndisi(8087
les
lret
test
cld
xchg
repz
lret
ret
fdiv
fucom
cmp
jmp
loope
ds
cmp
mov
test
jmp
out
mov
lock
fsubr
fildl
loopne
ljmp
mov
aaa
stc
out
out
cli
shr
fidivrs
sar
rcr
rcr
rcl
repz
aad
fimull
test
leave
in
out
cmc
shl
lret
xor
cmc
xchg
mov
stc
in
test
icebp
iret
leave
aad
int
fdivr
cmp
in
neg
fistpll
mov
ret
loopne
xchg
in
jecxz
sub
sub
std
test
int3
ffree
stc
jmp
xchg
cmp
add
inc
or
out
add
add
aad
fisttpll
sub
psadbw
sbb
jle
add
out
cs
lret
ss
test
out
loope
rol
fmull
in
notb
fcmovnb
icebp
xor
iret
addb
ljmp
xchg
in
jmp
xlat
lret
fcmovu
xlat
fmulp
aaa
std
test
rol
mov
in
stc
jmp
in
cmc
iret
or
in
fidivl
xor
lret
cld
in
repz
aas
clc
addl
lock
mov
repz
int3
loopne
xlat
int3
into
int3
test
xor
enter
int3
clc
rorb
xor
fcmove
shl
shl
cmp
rcr
fidivrs
fdivr
clc
cld
lret
jmp
icebp
sti
out
in
repz
out
xor
fmul
aas
call
loopne
out
ret
cli
aam
in
addb
xor
into
loop
fsqrt
sti
sti
aam
lock
in
xlat
leave
cli
mov
xor
leave
lret
in
cld
jecxz
icebp
fld
out
cmp
repz
shr
out
out
shl
div
lret
ret
lea
in
xchg
shl
out
cmp
fcmovnu
not
into
sbb
clc
sub
mov
mov
test
repz
rol
shlb
sti
ds
rcr
rcr
call
loopne
fadds
jmp
cmc
shl
cmp
xor
repnz
hlt
ds
stc
rolb
mov
icebp
out
xor
rcr
cmp
cmp
adc
rol
stc
in
addl
jecxz
in
das
shr
hlt
int3
xlat
xor
fcmove
aas
in
ret
rcl
hlt
out
stc
int
fsubp
fldl
shl
lret
leave
rcr
cmp
rolb
fsub
out
testb
in
loop
cmp
enter
cmp
cmpb
ds
fiadds
clc
movl
ljmp
into
sti
fnstsw
faddp
xchg
rol
loope
in
std
mov
call
int3
xor
std
call
aam
xlat
in
inc
fadd
jmp
mov
mov
loop
shlb
aam
in
leave
div
jmp
cmp
inc
shr
in
testb
jecxz
test
jecxz
xor
inc
fstpt
mov
in
test
out
mov
shr
hlt
int3
leave
cmp
int3
sti
out
enter
sti
out
fcomp
ljmp
lret
loop
sar
xchg
cmc
iret
aam
clc
call
sti
into
cmp
and
jecxz
mov
std
push
loop
in
repz
shr
div
in
cmc
lret
xlat
icebp
test
fadds
into
in
call
repnz
loope
repz
cld
sarb
cld
cmp
clc
in
std
sti
repnz
ss
lret
lret
icebp
clc
sbb
sar
test
ret
fsincos
fcmovbe
in
in
out
xchg
xor
out
cmp
xlat
ret
in
hlt
addl
leave
out
fimuls
shr
cld
enter
fcomip
cmpl
mov
rorl
out
sub
xor
fdivrl
push
ds
jmp
stc
cmp
loop
in
icebp
fsubr
lret
xchg
cmc
aad
in
xor
fiadds
repz
mov
cld
cmp
test
into
xchg
and
ss
jmp
lret
loop
mov
ljmp
lret
mov
cmp
rol
fdiv
icebp
fdivp
shlb
div
fsubp
xchg
xor
lret
xchg
xchg
out
lret
lret
shr
ss
sti
and
vpaddusb
fucompp
lret
lret
test
lret
fidivl
jmp
lock
sti
cmp
in
test
jecxz
cmc
in
leave
mul
shlb
xor
fistpll
fcmovnu
jmp
in
mov
jecxz
shl
xor
xor
cli
aas
repnz
cli
fpatan
loopne
leave
lds
jecxz
out
and
xor
cmp
rolb
repnz
fldl
jecxz
jmp
mov
out
into
rcl
rcl
aad
aas
in
xlat
div
fdivr
jecxz
mov
lock
shr
mov
test
in
shr
xor
into
sbb
loop
jecxz
cmc
adc
and
mov
divl
in
cmp
clc
std
hlt
jmp
aas
cmpl
jb
jmp
cmp
jne
jmp
iret
lret
rcr
aad
int
jge
ja
pop
es
into
and
jle
add
in
xchg
lret
std
rorb
mov
aaa
stc
loope
ret
lret
aaa
stc
aam
repnz
out
loop
jmp
mov
mov
enter
fucom
aad
int
cmpl
cli
test
in
fcoml
xor
repz
fcmovnu
imul
fstpt
ds
loope
mov
fsubrp
call
xchg
in
xor
fidivrl
std
call
loope
test
addl
int3
nop
shl
adcl
rcr
xor
iret
ljmp
mul
fucomip
fiaddl
shl
jecxz
div
leave
rcr
fsubr
lock
cmp
sti
std
test
enter
mov
out
iret
lret
shl
cmp
out
ss
and
fiaddl
cmc
rol
fstp
xchg
iret
jmp
icebp
int3
ffree
sar
iret
fsincos
aaa
loopne
xchg
test
loop
sti
incl
cmc
faddp
ljmp
out
aam
sar
cld
icebp
cmp
sbb
fadds
fsub
nop
jecxz
int
shr
in
ljmp
jmp
repz
std
mov
lret
mov
xchg
mov
jmp
icebp
xor
int
in
out
ljmp
jmp
lock
cmp
out
sar
repnz
idivb
stc
shl
std
int
mov
incl
fsubr
jmp
in
out
jmp
fsubr
imul
mov
cld
iret
rcr
icebp
xor
lret
les
rol
cmp
loope
mov
fcmovnu
lock
sub
ss
cmp
idiv
loopne
xchg
shl
std
out
mov
int3
sti
hlt
xchg
orl
clc
aam
inc
out
xchg
fmul
in
shl
enter
out
divb
aam
iret
cmp
cmp
sar
cmc
fxch
imul
fsubr
stc
lret
sub
in
aad
sub
imul
jmp
sar
test
sub
cld
sar
loopne
addl
iret
loope
aad
out
imul
not
int
fldl
repz
fadds
hlt
aam
int
sub
sti
aam
xor
shl
ljmp
repnz
fcos
out
call
xchg
in
test
fcomi
leave
jmp
std
shl
rol
mov
lret
in
iret
repz
ret
in
int
cmc
fmul
addb
xor
enter
jmp
lea
lds
into
cmp
cld
stc
fdivl
lock
fcmovnb
ror
aas
cmp
testl
int
xor
out
neg
icebp
repz
jmp
int
aad
cld
fcomp
addb
out
sub
int
cmc
out
aaa
cmp
cli
stc
jmp
neg
sbb
test
mov
xchg
das
les
enter
sar
in
repz
fimull
std
in
in
shll
shl
fucomi
ss
cmc
stc
xor
cld
loop
out
flds
out
inc
in
and
sub
sarb
out
aad
ror
fdivrs
adc
lret
mov
mov
rorb
icebp
shr
aam
fcomip
aad
fsubr
out
and
fsts
mov
icebp
enter
into
cmp
fcom
shl
hlt
rorl
clc
cld
mov
fcmovbe
shl
jmp
in
shl
sarb
out
vpinsrw
stc
test
clc
enter
rcll
aam
int3
xlat
cli
aam
cmpb
and
jmp
imul
lock
fcomip
fcoml
aaa
sub
repnz
sar
iret
sti
les
int3
in
lret
icebp
mov
out
xor
in
fst
jecxz
stc
div
add
ret
imul
leave
fucomi
add
in
xlat
ljmp
cmp
fstp
fdivr
test
in
ljmp
aam
int3
lock
test
stc
flds
loopne
mov
and
ljmp
cld
hlt
stc
aas
rcr
test
lock
fsincos
in
test
into
std
in
test
hlt
lret
in
cmp
sbb
in
fcmovnb
cli
in
ljmp
loop
jmp
xlat
jmp
and
pushf
clc
mov
mov
jmp
enter
int
int3
lret
xlat
ja
lea
add
add
enter
ds
shl
loopne
in
jmp
idiv
fcom
into
jmp
jmp
repz
repnz
cmp
fcmovb
mov
lock
cld
loope
in
int3
iret
ret
aad
sub
stc
out
test
stc
out
fstp
cmc
les
mov
cld
lret
xchg
lret
hlt
lret
shlb
xlat
out
jmp
aad
test
aas
clc
loop
test
out
xchg
iret
xchg
loopne
lret
sub
stc
cli
ret
out
loopne
jecxz
jmp
sti
loopne
rolb
iret
jmp
lret
vpaddsw
aas
in
xlat
cmp
out
xor
shl
fcomip
xlat
sub
cli
int3
test
loop
out
ret
rcr
loopne
fcomi
icebp
aad
aas
aam
test
xchg
fmull
mov
aaa
cmp
aam
clc
call
in
ds
fsubp
leave
enter
std
orl
repnz
clc
cmp
clc
stc
std
loopne
xchg
ljmp
ret
repnz
dec
fcmovu
in
lock
out
int
std
nop
rorl
xlat
ss
idivl
cmpb
ljmp
mov
call
loope
out
out
stc
loop
test
shl
in
jmp
mov
call
repz
fdivr
repz
cmp
cmc
jecxz
int
sti
xchg
in
lock
aam
into
xor
fcomi
ljmp
repnz
jmp
call
shll
fucomi
ljmp
fdivrl
cli
in
test
clc
mov
loop
orb
ret
aaa
cmp
lret
cmp
aam
loop
rol
rol
jecxz
cli
fcmove
lret
mov
loope
fld
ljmp
fcmovbe
aad
aaa
sar
fisttps
into
div
std
in
or
cmp
into
xor
fsub
cld
cli
sar
test
hlt
test
in
ljmp
lock
out
fdivrp
cld
fnstcw
bnd
iret
hlt
in
cld
xor
lock
aam
enter
icebp
sti
in
call
out
ret
add
test
stc
enter
nop
popl
cli
leave
xlat
leave
hlt
aad
fnstsw
shl
fcomp
mul
ffree
mov
sbb
stc
in
loop
nop
int3
shl
imul
leave
repnz
cli
sarl
loope
rol
out
rolb
roll
test
das
shl
call
clc
sarb
into
in
cmp
jecxz
stc
cld
jmp
dec
out
xlat
hlt
xor
int3
cmp
cld
fsubp
lock
testl
mov
loope
mov
ret
xlat
iret
ljmp
xlat
loope
rol
stc
cmc
xchg
in
icebp
jmp
mov
iret
ljmp
repz
in
ret
xlat
adc
aad
out
fldpi
lret
iret
loop
hlt
xor
in
in
hlt
cmc
shr
cmp
lock
jecxz
cld
test
fiadds
xchg
call
cli
repnz
in
jmp
out
hlt
movb
loop
std
fsub
jmp
fsub
xor
out
stc
cmc
aad
ds
rolb
int3
enter
xlat
fxch
xor
loopne
cmpl
call
out
fidivl
std
lock
cmp
fcomip
iret
xchg
decb
adcb
stc
repz
in
cmp
loopne
fidivrs
sarb
cmp
aad
mov
xchg
mov
hlt
loop
cmp
out
sti
icebp
repz
stc
leave
fucomi
sbb
int3
xchg
nop
into
shr
shrb
out
fsubr
lret
iret
ret
sti
test
mov
vpaddusb
sti
std
mov
cld
xchg
sub
cli
or
ss
mov
in
and
iret
in
cmc
jmp
imul
fidivrl
fdiv
aad
icebp
cmp
aam
jmp
leave
rorl
hlt
enter
fldl2t
rol
clc
in
aad
loop
out
out
stc
call
cmpl
jmp
mov
clc
in
cli
xor
lock
roll
test
mul
out
loop
test
std
jmp
int
into
jmp
in
out
cmp
addl
inc
clc
mov
mov
xor
add
mov
lea
jmp
rol
lret
ffree
aam
mov
mov
cmpl
push
add
std
xchg
in
rol
loope
stc
cmp
stc
fcmovbe
shl
fiaddl
in
roll
in
xchg
rcr
in
in
repz
in
cmp
jmp
cmp
ret
shl
xchg
out
cmc
ljmp
fdivp
xor
shl
shr
enter
cld
aas
fdivr
sar
test
std
mov
mov
xchg
icebp
out
das
cmp
out
idiv
roll
in
jecxz
mov
cli
fcmovbe
call
rol
cmp
loop
in
mov
fimuls
ss
fcomi
das
cmp
out
rcl
iret
aad
fsubp
in
clc
neg
mov
addb
lock
int
out
iret
xor
sti
xchg
loopne
in
fucomi
mov
repnz
xchg
lock
shlb
jmp
cli
fcomp
std
rcl
sti
cmc
fsub
cmc
int3
mov
rcr
out
out
shl
aam
xor
ret
test
out
shl
cmpb
aam
addl
fucomp
out
in
mov
xor
lock
lock
fdivp
aam
and
xchg
mov
ljmp
hlt
xor
ss
out
hlt
cmp
shl
out
clc
mov
int3
xchg
in
aad
repz
not
repz
mov
filds
dec
loop
out
rcr
rcr
icebp
xor
jecxz
std
icebp
fcmovb
loop
cld
fsubp
filds
xor
jmp
lock
into
out
test
in
fdivr
fcom
icebp
in
in
int3
cmp
shr
cmc
out
fadds
xchg
fimull
ret
shl
hlt
rcr
cmp
fcmovb
fcmovnbe
enter
in
notb
push
hlt
clc
aad
xor
shl
lret
enter
lock
test
add
or
mov
sti
hlt
repnz
xor
leave
ss
lret
fidivrs
xlat
clc
cmc
hlt
jecxz
ret
ljmp
lock
leave
jecxz
lds
ljmp
sbb
hlt
cmc
xchg
xchg
jmp
xor
in
aad
iret
iret
fcomp
int
in
fdivrp
incb
iret
cmc
xor
div
xor
out
aam
iret
xlat
aam
loope
jmp
std
lret
shr
lret
aam
lea
cmc
xor
in
iret
das
fdivr
ror
iret
adc
lds
mov
mov
mov
shl
rol
loop
lret
iret
cmp
loope
div
not
loopne
fsub
leave
loopne
jmp
add
xor
enter
cmpb
cmc
fld
stc
ds
fucomp
mov
sbb
jecxz
xchg
jmp
enter
out
out
sti
loopne
loope
loopne
loopne
xlat
cli
sbb
mov
shl
out
jmp
sti
std
in
in
sarl
roll
mov
pop
int3
jmp
mov
jmp
in
cmp
stc
fucom
mov
jmp
call
repnz
xor
fxch
int
cld
jmp
icebp
push
addl
in
xchg
adcl
icebp
fcmovb
xor
sub
xchg
std
in
out
in
xor
shlb
shl
shl
cmc
call
fmul
rol
stc
loopne
mov
mov
call
iret
sub
in
aam
cmp
out
jecxz
lock
mov
ds
fiaddl
jecxz
xor
lock
xlat
das
aad
jmp
aad
lds
jmp
xchg
fcmovnbe
out
xchg
in
out
fcmovnb
cmp
sarl
cli
shr
xor
fsubr
in
cmc
in
test
lock
leave
leave
sti
enter
leave
rcl
cmc
and
filds
jmp
xchg
lret
xor
cmc
pushl
hlt
xchg
fcomi
test
int
mov
std
fndisi(8087
and
aas
das
xor
in
iret
iret
lock
sbb
fdiv
aas
rcr
cmp
sti
out
ljmp
ljmp
cmp
cmp
int
std
not
xlat
clc
repz
mul
jecxz
sbb
leave
mul
xor
not
fcomi
ds
mul
repnz
cli
jmp
in
loop
xlat
xor
fbstp
repnz
fdiv
cmp
ret
mov
mov
xor
jmp
into
int
xlat
popf
loopne
push
das
add
add
and
in
loop
mov
xchg
enter
fdivs
xor
stc
in
hlt
testb
mov
jecxz
cmp
out
out
out
xchg
aam
ss
int
aaa
in
out
fsub
fcmovu
fcmovu
cmp
fyl2x
out
loopne
adcb
shll
out
hlt
ret
into
ds
aas
in
cld
cmp
sar
in
lret
int
lock
out
in
rol
aas
in
cmc
testl
in
icebp
jmp
cmp
xor
lret
mul
fdiv
fiadds
leave
in
int
mov
lret
das
ret
lret
std
cmp
ffree
loop
iret
rcl
leave
ljmp
loopne
mov
fstpt
out
aas
aam
fdiv
jecxz
test
les
std
call
mov
hlt
int3
ret
ljmp
ret
out
aad
stc
repz
ret
call
xchg
xchg
sub
cmc
lret
xor
fdiv
int3
cld
int
iret
xlat
aad
testb
in
mov
mov
jecxz
ss
out
shr
std
int3
shl
rcl
xlat
ss
fnsetpm(287
jecxz
mov
fimuls
xchg
out
xchg
mov
test
sti
cmc
shl
out
fsub
loop
leave
test
lea
out
fnstenv
ss
cmp
cli
adc
ljmp
icebp
repz
call
repnz
aam
clc
ljmp
cmc
fcmovnbe
jmp
stc
fdivrp
jmp
fcomi
ljmp
fcmovnu
aaa
lock
loop
ds
xchg
loop
fmulp
into
test
imul
hlt
aam
imul
xlat
jmp
fistpll
int
rol
xchg
hlt
fucomip
test
imul
clc
cli
sbb
icebp
out
int3
aad
clc
out
rcl
fucompp
div
or
aam
xlat
enter
ljmp
in
test
in
xlat
call
ffreep
mov
and
icebp
xchg
test
icebp
in
int3
out
into
fcmovnb
fdivrs
imul
fcomip
fdivr
mov
std
sub
nop
fisttps
lds
rcl
xor
xlat
bnd
cld
cmpl
xchg
mov
fsub
xchg
cli
fucomi
out
int3
xor
shl
cmp
out
aam
stc
out
ret
xlat
sbb
clc
fdivr
lock
test
ljmp
test
fsubrp
cli
bnd
not
cmc
enter
aas
mov
or
call
xor
fadd
clc
leave
lret
xor
fld
xchg
jmp
mov
mov
xchg
int
jecxz
jmp
in
aaa
out
fildl
in
fistpll
fcmovnu
jmp
mov
out
jecxz
stc
aam
cmp
in
sar
jmp
fadds
fcmovb
testl
xor
call
out
cmp
and
fstp
stc
jmp
mov
rol
out
in
clc
idiv
cmp
icebp
fstp
cli
aad
mov
in
rolb
icebp
in
xor
cld
into
jmp
aas
loop
stc
fst
mov
in
addl
lret
imul
shl
lret
xlat
les
std
in
rcl
aas
repnz
in
xchg
out
nop
int
mov
fsubrp
stc
in
int3
in
xor
int3
out
sti
add
test
cli
xor
mov
loope
aad
xor
cmc
mov
rcr
aam
out
fsubr
cld
ret
in
mov
in
out
in
fiaddl
loopne
lret
lret
cmc
repnz
jmp
loopne
clc
xchg
fimuls
into
repz
cmp
loopne
aaa
cmp
add
inc
and
enter
loopne
xchg
out
int
fcom
icebp
sar
int
xor
add
lret
int3
lret
jmp
in
leave
xor
cmp
enter
lret
cli
cmp
repnz
and
int3
xchg
adcl
cmp
cmp
xor
std
test
loope
fsubr
cmc
ljmp
loop
in
cmc
into
out
div
out
neg
repz
ret
sbb
in
mov
aam
test
cmp
shl
in
fdiv
testb
fmul
lret
fildl
jecxz
aad
rcr
cmp
imul
hlt
cmp
out
adc
fdivrp
int
xchg
cmp
test
loope
aam
into
neg
add
mov
jmp
ret
int3
int
ret
leave
pop
cs
cmpsb
xor
jle
add
fcom
fmul
stc
test
cmp
stc
ret
call
mov
lock
int3
aad
int3
leave
fsubr
out
cmp
adc
xlat
test
lret
clc
loopne
in
xchg
jmp
loop
repnz
ljmp
jmp
shl
test
stc
shl
enter
cli
out
mov
xchg
xchg
repz
sub
into
repz
in
aam
lret
fdiv
cmp
xchg
out
test
in
iret
test
call
ds
out
mul
notrack
repnz
out
out
std
int
xor
aaa
cmp
aam
hlt
lds
testb
jmp
mov
rorl
xlat
xor
fcmovne
ss
xlat
in
cmp
shl
hlt
and
xlat
lret
in
call
xor
out
cld
shl
cmpb
test
xlat
ljmp
xchg
cs
cmp
cmp
incb
xlat
out
cli
fcmovnb
out
iret
mov
xor
out
stc
ror
test
shl
cmp
hlt
out
in
ljmp
jmp
int
fnstenv
fcmovu
cmp
cmp
sti
jmp
and
out
jecxz
aaa
xor
leave
aam
int3
not
repnz
sti
or
cmp
iret
jecxz
in
lret
rol
das
cmc
in
out
out
cmp
or
rolb
in
mov
int
or
jecxz
xor
ljmp
out
std
shr
rcl
xor
int
jecxz
fldl2e
xchg
fisttps
test
das
into
loopne
loope
fcomip
xchg
add
lret
ret
xchg
in
xchg
lret
in
hlt
jmp
leave
ljmp
cmp
fcmovbe
ret
out
std
xlat
enter
aam
ljmp
lret
xor
fsqrt
push
lock
rol
call
fdivr
in
enter
hlt
shrl
sub
stc
aam
ss
xor
out
aas
in
fildl
cmc
std
jmp
xchg
enter
shrl
in
leave
sar
shll
idiv
hlt
aad
mul
cld
xlat
in
sti
mov
xchg
mov
repnz
rcl
sarb
out
ljmp
fidivrl
jmp
jecxz
out
decb
xor
fdiv
idivb
test
ffreep
fadd
cld
cmc
fucom
incl
loope
xor
cmp
fistpll
cmp
xor
shr
aam
clc
fstp
mov
out
mov
iret
rcr
shl
jmp
cmp
loope
leave
testl
call
cs
hlt
in
cmp
loopne
jmp
movl
mov
shr
jmp
cs
lret
aam
faddl
fcomip
rol
call
loopne
lea
in
call
lock
repnz
cmc
in
xlat
loop
enter
and
mov
out
cli
in
in
icebp
ljmp
out
add
int3
lret
icebp
mov
jmp
xor
test
aas
mov
clc
repz
cli
int3
fsubr
mov
leave
xchg
out
ror
call
ljmp
std
cmc
mov
les
aam
in
out
flds
xlat
rol
loope
loopne
fcomp
jecxz
orl
int3
jmp
int
cmp
hlt
xor
in
jecxz
loop
fadd
out
addl
fistpll
shrl
repnz
aas
lock
cmpl
call
out
loope
mov
test
xlat
fdivrs
icebp
cld
fsub
adc
flds
mov
nop
xchg
jmp
ss
aaa
cmp
aas
in
testb
fisttps
repz
repz
clc
int
ror
shl
sbb
addl
ljmp
xchg
rol
out
sarb
cli
lock
in
fmul
jecxz
shl
loope
loopne
in
in
in
in
cmc
test
test
aad
xor
aad
stc
mul
sub
sbb
fsubr
cmp
leave
xchg
xchg
int3
fldl2t
fcmovnbe
int3
shl
fcmovnu
aad
aas
std
repnz
mov
fsub
in
std
leave
ret
call
in
xor
cmp
lret
fdivp
incl
xchg
mov
lea
push
mov
jmp
aam
ror
fcomp
aam
aas
idivb
jo
cmp
jle
add
xchg
out
mul
xor
int
cmp
lock
push
ds
loopne
mov
cld
out
mov
aaa
xor
cmp
rol
loopne,pt
cmp
aad
out
fmul
loop
ret
enter
cmc
into
enter
xor
out
cld
cmc
fst
cmp
std
lret
mov
loop
xchg
call
rcl
ljmp
cmp
iret
aaa
fincstp
cld
ret
sti
in
cld
clc
cli
and
xchg
jmp
xor
xor
shr
in
leave
call
rcl
fcmovbe
xlat
cli
sbb
nop
mov
loope
sub
fcmove
int3
out
jmp
fcomp
fildl
test
loope
ret
cld
sti
mov
test
test
aaa
rcl
in
xlat
rol
rolb
fadd
out
xor
mov
les
hlt
test
jmp
aas
fcmovu
out
ss
cmp
xlat
ror
in
out
leave
mov
out
out
xor
call
clc
lock
cmp
leave
add
fmulp
xchg
xor
xor
cli
mul
cmc
adc
test
and
enter
out
sub
xchg
jmp
in
ret
cli
cli
icebp
fdivrs
repz
test
fstp
loop
lret
out
hlt
sub
ret
in
in
cmp
sbb
lock
rol
frndint
mov
xor
ror
ljmp
loopne
fiaddl
neg
ret
mov
stc
xchg
xchg
sbb
in
int
loopne
ds
fdiv
test
and
cmc
cld
xor
xchg
out
roll
leave
into
repz
out
fnstcw
aam
aas
fcmovu
repnz
mov
in
test
out
xor
fidivrs
lret
shl
fsub
test
in
icebp
aas
rcl
repz
aaa
lret
repnz
ljmp
hlt
fsubp
jecxz
shl
leave
loope
xchg
hlt
nop
rcl
enter
aaa
shll
iret
in
cmc
std
cmc
loop
xchg
enter
repnz
shr
ss
cmp
aam
fst
fdecstp
cld
cmp
ret
int3
stc
fsub
mov
xor
out
out
in
lret
repz
loopne
out
ffree
test
loopne
out
out
icebp
cmc
in
sub
imull
out
iret
incb
rol
mov
xchg
mov
xor
out
xor
cmp
rolb
orl
cld
xor
xlat
leave
ds
hlt
shl
ret
clc
cmp
add
mov
sub
and
leave
ss
cmpb
jmp
cmp
aam
icebp
loop
lret
out
and
mov
out
lret
shr
push
roll
flds
cld
sti
xor
or
sub
leave
std
xor
stc
rcl
call
cld
lds
in
lds
jmp
stc
in
int3
cld
fnstsw
aam
int
iret
cmc
cmp
sub
clc
enter
xor
jmp
shlb
neg
ret
mov
loop
cld
loop
nop
in
call
out
fdivr
lock
cmp
xchg
in
lret
mov
xchg
cmc
cs
xor
fcmovnu
call
flds
ret
mov
loope
lock
fldl
shl
fdivs
sti
sar
jmp
cmp
in
add
in
in
out
int3
shr
iret
out
xor
shll
lock
idiv
shr
cmc
sti
clc
sti
test
cmc
mov
ficoms
xchg
out
rcl
call
aas
loope
lret
in
sti
fdivrp
stc
jmp
xlat
out
xchg
repnz
into
xchg
call
jmp
std
loopne
out
loopne
testb
call
int
sti
nop
orb
fdivl
div
cld
out
cmp
addb
addb
xchg
xchg
rclb
int3
in
cmp
rcl
into
stc
not
loopne
loope
int3
lret
jmp
repnz
cmp
xor
out
int3
sti
xlat
out
in
testb
jecxz
mov
mov
div
repz
shr
into
xorb
cli
fdivrp
xor
addl
out
int
ret
xor
repz
sbb
out
repz
xor
add
push
mov
push
jmp
ret
rcl
aam
ret
sarl
cltd
pop
xor
add
add
jecxz
add
stc
lret
hlt
mov
shl
enter
aad
out
jmp
rcr
aam
mov
in
std
in
cmp
ffreep
loope
icebp
in
lret
shll
cmp
repz
shr
fucom
shl
incb
mov
mov
call
aam
cli
in
repz
cmp
xlat
xlat
clc
jmp
std
cld
out
fxch
out
lock
out
jecxz
imul
leave
sar
incl
out
out
call
sti
int
iret
lret
xor
std
std
fistpll
sarl
out
hlt
ret
push
in
lret
in
loopne
aad
shl
in
hlt
sti
aam
hlt
ret
out
test
mov
fisttpl
shl
sarl
lret
fdivrp
repnz
fcomp
cli
loopne
hlt
std
repnz
lret
jmp
incb
xor
lret
out
icebp
rcr
cmp
ds
cmc
loopne
int
in
loope
in
loop
enter
std
lock
test
out
lret
into
leave
nop
fcoml
enter
test
jmp
stc
cmp
fucom
testl
int
cmc
hlt
xor
xlat
iret
int
fxch
fadds
ffree
cmc
int
mov
xchg
loop
sub
ret
in
repz
clc
leave
leave
cmp
fiaddl
cli
fcmovnu
mov
sbb
hlt
out
fcom
ljmp
lret
clc
div
xchg
jmp
leave
loop
or
mov
jecxz
in
ljmp
hlt
ret
and
decb
fiadds
lret
shll
ror
ss
stc
rcr
sbb
xlat
fstp
mov
jecxz
leave
leave
in
iret
fsubrs
call
aaa
stc
cmc
ljmp
sti
cmc
out
mov
repnz
xor
int3
cmp
stc
sar
std
out
ror
mov
xlat
orl
icebp
ret
hlt
cmp
shr
std
sar
fcmove
sbb
std
xlat
loope
out
mov
in
jecxz
xchg
not
xor
fsubr
lret
into
rcr
filds
cmc
int
test
fiaddl
sar
hlt
shl
lret
fnstcw
icebp
test
ds
cmp
flds
call
ret
cmp
cmp
cmp
cmp
shl
xchg
aam
in
cmp
out
loopne
out
in
int
xor
into
shr
int3
lret
rol
imul
test
fiaddl
int3
in
out
repnz
jmp
idiv
cli
cmp
jecxz
loopne
cmp
clc
test
cmp
jecxz
out
loopne
jecxz
xor
cmp
cmc
ds
iret
fcmovnu
lock
cmp
jecxz
lret
mov
icebp
repnz
int
sti
jecxz
cmp
cmp
test
shl
test
jecxz
cld
int3
jmp
repz
shr
leave
leave
std
cmpb
sarb
ret
cli
stc
fimuls
mov
in
ret
out
xor
fsubr
lock
loop
test
fcmovbe
loop
xchg
enter
out
int3
xor
cmc
xlat
icebp
sbb
xchg
loope
out
repz
cmp
into
fildl
ret
mov
xchg
fimuls
out
xchg
fidivs
xlat
icebp
in
out
in
aaa
into
cmp
loop
icebp
sti
cld
xlat
fcomp
fiaddl
in
xchg
sub
les
cmp
cmp
hlt
fsub
fdivr
in
faddl
xchg
xchg
aad
shr
leave
jecxz
jmp
cmc
testb
xlat
loop
loopne
jmp
jmp
xchg
into
int
xlat
sub
repnz
fcomi
hlt
adc
icebp
leave
xlat
cli
fcmovnu
and
xchg
std
xchg
in
ror
iret
das
into
call
ljmp
xlat
xlat
fadd
jmp
xchg
into
out
sub
xor
imul
in
clc
rolb
enter
and
in
mov
ljmp
fsub
in
cli
aad
out
loop
or
mov
mov
xchg
call
int3
cmp
call
fdiv
test
into
xchg
cmp
clc
mov
and
xchg
out
cld
aaa
cmp
fcmove
xlat
out
icebp
fcmovb
leave
fneni(8087
xchg
out
addl
fdiv
rcl
ljmp
mov
add
sbb
add
cmp
jne
mov
xor
add
mov
mov
mov
jmp
sarb
ret
enter
fldl
jge
cltd
mov
lock
add
add
loopne
rolb
call
enter
shr
cmc
aad
aad
sar
xor
testb
icebp
repz
xchg
div
cmc
imul
xor
sti
clc
sarb
xor
iret
cli
in
std
jmp
test
cli
jmp
fsubrp
jmp
ss
hlt
leave
jmp
loop
sbb
xchg
fmul
mov
cli
repz
aam
sarb
ret
ljmp
ret
ljmp
ret
sti
repnz
int3
leave
rcr
fcomi
into
rol
test
sar
std
loope
decl
xchg
out
jmp
shl
cmp
neg
fidivrl
aam
mov
mov
ror
ljmp
shlb
fdiv
cmp
loope
fcos
loope
out
call
addb
loope
repnz
iret
ljmp
sti
out
loop
fimull
out
std
mov
xchg
hlt
lock
leave
fmul
jmp
fcmovu
into
test
shl
shr
fld
mov
xchg
lock
das
xor
aas
lret
cmp
call
leave
in
out
enter
roll
into
in
sti
aam
jmp
iret
loop
xlat
out
in
jmp
into
mov
xchg
rcl
enter
cmp
fcmovnu
cmc
loop
cmp
ret
shl
enter
test
or
xchg
aad
aam
lret
rcl
test
xor
ret
out
nop
iret
iret
into
nop
icebp
mov
ljmp
loope
fstpt
shr
in
sti
ds
test
xchg
in
lret
xchg
xchg
ffreep
ljmp
idivb
repz
clc
stc
loopne
out
ror
test
into
leave
jmp
xlat
aam
test
out
ss
aam
aas
xchg
flds
decl
xor
ss
cld
fadd
aas
shl
out
out
testb
icebp
sub
shlb
fstpt
jmp
cmp
sarb
bnd
fsubrp
mov
call
mov
enter
jmp
enter
fdivrp
xlat
jecxz
test
cli
cli
call
out
jecxz
xor
stc
cli
loopne
fiadds
in
ffreep
mov
xchg
cld
out
in
jmp
ss
out
cmp
idiv
add
jecxz
mov
out
jecxz
icebp
fadd
shl
aaa
lock
cmp
sar
out
in
fdivr
in
mov
addl
aam
icebp
lock
sti
ljmp
rcr
mov
xchg
in
enter
rcl
cmc
aaa
hlt
loope
flds
ret
sub
lret
iret
shr
into
sar
clc
xor
loop
repnz
sti
hlt
cmp
std
into
repz
ror
xor
std
out
in
cmp
cmp
sbb
test
loopne
cmp
out
xchg
xchg
rcl
lock
imul
enter
loop
roll
leave
cmp
clc
in
icebp
rorl
rol
iret
clc
lock
aaa
cmp
leave
hlt
rcr
aas
sti
stc
jecxz
cli
loop
fimull
jecxz
mov
in
out
in
clc
fcmovb
into
fst
shl
icebp
rolb
mov
jecxz
xchg
jmp
xchg
lock
cmp
neg
aad
out
cmp
cmp
clc
sti
xlat
jecxz
out
in
nop
sti
in
jmp
sub
int
fcomp
into
fdivrl
rcl
repz
stc
test
fmul
nop
ljmp
stc
xor
cmp
test
fdivp
fucomip
stc
lock
rcl
mul
fisttpll
out
aam
rol
xor
aaa
repz
fmulp
cmc
xor
aam
lock
repz
test
ljmp
fildll
sti
cmp
sti
fucomi
xor
lock
ljmp
test
ljmp
cmp
xlat
xlat
aad
test
jmp
fucomp
xchg
lret
jmp
jmp
fsubr
xor
out
repnz
out
mov
dec
sti
dec
nop
mov
ljmp
ljmp
xlat
std
jecxz
xchg
ds
fisttps
ror
xchg
ss
sti
imul
in
not
shl
cmp
cmp
cmc
rorl
test
lret
jmp
mov
cld
mov
push
pop
sub
add
mov
jmp
ror
fmul
fcomp
fcmovnb
aad
jp
hlt
xchg
enter
add
clc
repnz
not
cmp
fidivrl
int
xlat
div
xchg
shl
ret
loop
sti
xchg
test
ljmp
xor
cmp
cld
rcl
cmp
xor
jmp
ljmp
in
repnz
ljmp
hlt
cmp
icebp
icebp
xchg
jecxz
sbb
clc
clc
ret
cld
fsubr
xchg
ret
neg
lret
into
cmp
stc
aad
cli
std
aam
cli
in
mov
sti
fiadds
enter
cmc
lret
jmp
fnstcw
ret
into
aam
jmp
xchg
aad
aam
cmp
ljmp
out
call
loop
test
loope
in
mov
xlat
idivb
in
iret
fcmovne
and
and
fisttpll
int3
in
xchg
repnz
xor
jecxz
hlt
out
icebp
lret
cli
fidivrl
roll
xlat
xchg
fidivs
fld1
in
out
cmp
lret
fdivrl
icebp
out
cmp
mov
cld
out
lret
movb
xchg
into
out
xor
aas
fneni(8087
out
dec
loope
ljmp
out
int3
int
into
lret
aad
loop
int
int3
aaa
dec
cmp
cld
shl
rcl
jmp
iret
out
jmp
out
shrb
xor
ss
hlt
int3
cmp
loop
leave
fsubp
add
std
in
mov
jmp
leave
into
clc
cli
sti
out
std
filds
rcl
mov
jmp
leave
xchg
fmulp
xrelease
ss
icebp
jmp
cmp
xor
repnz
xchg
test
cli
leave
out
out
xchg
fcom
aam
in
fucomip
idivb
out
icebp
ret
in
mov
xchg
repnz
in
lret
in
hlt
xor
xor
lret
cmp
jecxz
idiv
xchg
bnd
addb
into
mov
xor
ljmp
out
into
ds
in
loopne
cmc
jecxz
jmp
mov
mov
int3
xor
fnstenv
repz
hlt
repz
sar
cmp
xchg
rcl
filds
leave
incb
ret
fidivl
idivl
shl
sti
ret
test
faddl
int3
aaa
leave
xor
enter
repz
loop
out
clc
dec
sti
ffreep
fcmove
mov
mov
rolb
xor
xor
int3
loope
cmp
clc
in
fucomi
fstpt
fcmove
xor
mov
out
iret
in
iret
imul
aad
iret
ss
jmp
loop
testl
xchg
loope
ror
into
in
lret
fidivs
cli
push
in
sarl
cld
fstp
out
out
sub
out
ret
lds
lock
rcl
vpavgb
shl
sti
sub
shr
in
xor
cmp
in
cld
cmp
cmp
sar
out
aad
enter
mov
cli
cli
lret
mov
shr
lret
lock
repnz
fcom
icebp
out
int3
aas
int3
ljmp
hlt
clc
repnz
repz
rcr
cmp
fst
jecxz
fneni(8087
iret
lret
icebp
fcomi
xchg
repz
rol
repnz
repz
icebp
rcr
icebp
clc
and
into
out
xchg
adcl
cli
idiv
roll
fildl
cli
icebp
shl
out
xchg
aam
loope
sar
cli
cmp
ljmp
jecxz
test
ffree
std
fmull
in
jecxz
lret
cmc
jmp
iret
cmp
icebp
in
shl
faddl
and
loop
xchg
mov
mov
icebp
into
aam
fucomi
loope
int3
cmp
cli
mov
out
adc
ss
in
fcomi
sti
int3
dec
ds
icebp
stc
rcr
in
int3
leave
mov
addb
stc
ljmp
out
iret
ror
flds
mov
out
mov
loopne
xor
ret
out
shl
xor
cmp
in
int3
fsubr
xchg
out
clc
ret
xchg
xchg
cli
hlt
in
in
lock
cmp
ss
int
fucom
cmc
inc
test
sbb
rcl
hlt
int3
ss
hlt
rcl
cmp
loop
xlat
std
sbb
roll
clc
std
mov
int
aad
clc
aaa
cmc
cmp
iret
in
std
jecxz
orl
xchg
repz
idivb
cmp
lret
out
call
sbb
out
inc
or
lea
cmp
jne
jmp
int3
int
fstp
cmp
pop
pushf
jecxz
test
jle
add
loope
out
int
lret
hlt
mov
lret
lret
fld
out
cmp
sub
filds
ljmp
sti
loop
xchg
into
sar
fidivrl
out
ljmp
ret
in
sbb
jmp
in
in
ljmp
jecxz
sti
hlt
leave
std
aam
fbstp
roll
mov
in
testl
ret
rcl
int3
xor
in
fsincos
aam
aam
test
test
sar
in
in
mov
ljmp
lock
lret
cmp
aad
addl
mov
clc
mov
repz
fdivrs
out
ljmp
cmp
ret
cld
vpaddd
fimuls
xor
mul
ror
aas
ss
cmp
icebp
sub
loopne
fcom
enter
test
out
in
jmp
xor
enter
repnz
xlat
hlt
fiaddl
hlt
fidivrl
decb
decb
jecxz
lock
aam
cld
ss
ret
icebp
aad
rcr
cmp
sti
xchg
lock
out
xor
cmp
aaa
aaa
aas
icebp
aas
shl
out
fdivr
fincstp
ret
rcl
in
sbb
ljmp
idivl
out
sti
xor
div
xlat
icebp
ds
mov
ret
mov
fsubr
and
into
in
xabort
cmp
sti
into
repz
out
repz
call
loope
fisttpll
xor
into
divb
fcmovu
out
fcmovb
fidivrl
shl
shl
fcmovne
into
mov
out
int
jecxz
int3
das
out
shl
call
in
lret
int
jecxz
sbb
cmc
sti
add
mov
loope
fcmove
fnstsw
cmp
cmp
div
push
ret
lret
in
loope
xchg
jecxz
xchg
xor
loope
call
fadds
aas
aas
clc
addl
iret
xchg
in
mov
aaa
cmc
jmp
aam
iret
cmp
cmp
cli
shl
clc
roll
pop
xchg
xbegin
out
cmc
cli
hlt
sar
lock
fcmovu
xchg
sti
cli
mov
jecxz
mov
test
imul
cmc
lock
cmp
loope
rol
xor
ljmp
xchg
push
shll
lret
aaa
xlat
ljmp
test
cmc
hlt
test
loop
std
incb
in
xor
jecxz
in
push
sti
sarb
sbb
out
loope
xlat
rorl
lret
hlt
test
out
out
ret
out
fcom
lret
loop
hlt
ret
stc
fucomp
ljmp
call
clc
jmp
aaa
int
iret
aaa
shl
in
out
clc
lds
in
lret
call
in
shll
in
int
ror
out
aam
xor
rcl
addb
fstp
in
cmp
repnz
call
out
cmp
xlat
shl
ljmp
xchg
loope
mov
jmp
out
stc
std
xor
cmp
shl
shl
mov
fimuls
repz
stc
fucompp
int3
in
ret
filds
out
test
faddl
ret
into
hlt
xor
call
fadd
fcmovbe
fdivr
add
iret
loope
xchg
call
into
aad
fsubr
cmp
loop
fistpll
mov
aam
sti
lret
stc
jmp
shr
sar
ror
xor
jmp
hlt
loopne
out
fsubr
out
in
out
fldl2e
iret
ror
mov
into
ljmp
lret
repz
ret
cmc
out
int3
loopne
lock
iret
enter
rol
cli
cld
aam
std
repz
repnz
icebp
icebp
xlat
lds
in
xchg
xchg
xor
cmp
ror
icebp
sbb
cmc
orl
in
in
not
test
repz
repz
fdivr
clc
cmp
out
ret
and
mov
stc
test
fldl
out
hlt
cs
xor
stc
cmc
cmp
cmp
sar
call
test
test
int3
ret
repnz
lret
sti
std
clc
sti
les
sbb
test
or
loop
out
lret
repz
sarl
fcomp
repz
fldlg2
roll
in
inc
icebp
cld
hlt
repnz
int
hlt
cmp
in
bnd
loope
fcomi
repnz
adc
xchg
xchg
out
xor
rcr
int
cmp
mov
pop
jmp
iret
xlat
rcl
rcr
lret
push
cmp
aad
int3
mov
jle
add
int
loop
sti
xlat
fiaddl
ljmp
dec
in
in
hlt
cmp
out
fnstenv
ret
sar
mov
jmp
xchg
mov
in
shll
idiv
das
stc
out
int
hlt
shl
loopne
xlat
cmp
cmp
shr
in
iret
repnz
aam
lret
cmp
aas
out
sar
xor
xchg
into
rolb
ss
fadds
repz
jecxz
in
cmp
test
iret
jmp
stc
out
sti
fdivr
fnstsw
test
fdivrs
out
addb
nop
dec
fucomip
xor
shl
iret
hlt
rcr
repnz
iret
cld
in
cmc
ret
fmuls
addl
cmp
xlat
std
ljmp
cmpb
mov
in
out
mov
ss
clc
call
loope
cmp
out
mov
loop
cli
ret
fcmove
movb
out
std
ss
std
roll
loop
cld
in
in
out
jmp
in
loop
int3
clc
cmp
loopne
ljmp
shl
mov
lret
call
loopne
rol
fsubr
ror
call
aas
hlt
repnz
jmp
jecxz
lret
xor
leave
xor
aad
leave
fcmove
fcmovne
lock
jecxz
ret
shl
out
in
addl
jmp
aad
cmp
jmp
aas
iret
sti
cmc
ret
out
mov
ror
out
lock
xor
out
aas
cmp
ret
ds
in
test
out
int3
out
out
in
xchg
jecxz
in
cmp
fmul
rcr
cmc
ds
rcl
loopne
or
repz
call
out
cmp
cmp
in
in
fst
repnz
rcl
ljmp
xchg
mov
cmp
fdivrs
stc
into
fcmove
fscale
neg
fstp
fndisi(8087
ljmp
orb
icebp
enter
fdivr
rcl
stc
shl
fnstcw
mov
imul
mov
jmp
ljmp
fdiv
iret
loopne
cli
dec
rcr
stc
mov
mov
ficoms
clc
out
fcmovu
aam
leave
stc
loopne
xor
rol
clc
enter
out
in
iret
hlt
int
call
jmp
xlat
out
std
fdivrs
int3
out
shl
rorb
sbb
out
sub
cmp
out
fcomip
xor
repz
incb
in
fsub
stc
out
call
leave
int
int
shl
fcmove
in
cmp
fsub
clc
xlat
sti
ret
fisttps
mov
adc
rol
cli
fcmovu
fidivs
cld
aad
enter
sub
in
xchg
adc
rol
call
xor
call
sbb
not
inc
loopne
ljmp
std
rorl
cld
icebp
repnz
shl
int3
test
icebp
hlt
jecxz
clc
not
in
out
ljmp
int
hlt
into
fmul
divb
sti
aad
fldl
cmp
test
in
int3
mov
test
hlt
out
xor
ror
aad
cmp
ret
mov
loop
rorb
jecxz
int
clc
repnz
lock
int3
leave
fdivr
out
fcmovnu
clc
lock
roll
loope
mov
out
sar
in
cmp
aas
fcmovbe
int3
test
jmp
cld
in
addb
fdivr
clc
aaa
std
out
into
sarl
sar
in
xchg
in
std
int
orb
xchg
cmc
icebp
shl
aaa
cs
clc
aaa
sub
cmp
loopne
lock
fdiv
loopne
sti
std
mov
int3
jmp
fmul
cmp
sar
div
cmc
repnz
mov
out
loope
icebp
rolb
aad
icebp
cmc
int3
call
aam
std
cli
fildl
mov
mov
cli
cli
roll
xlat
lret
xor
cmp
fdiv
fmul
cld
shl
rol
xchg
or
out
xchg
mov
imul
leave
ss
aaa
hlt
int
in
loope
in
hlt
rcl
enter
mov
lret
xchg
cld
rcl
rcl
jmp
repz
cmp
test
cmp
repnz
fldl
addb
sti
shr
ror
loopne
and
aam
mov
in
clc
mov
in
loop
ljmp
leave
ret
push
mov
jmp
into
lret
rcr
xor
mov
xor
add
leave
shrb
sti
lret
ret
icebp
fninit
div
xchg
lret
jmp
loope
cmp
out
cld
sti
ds
in
aam
int
out
cmp
and
cmc
lds
out
mov
lret
loop
lock
enter
aam
sar
stc
hlt
loopne
in
fsubrp
call
xchg
xor
cld
cmp
xor
test
fsubrp
in
call
mov
shl
fcomp
out
out
cmp
cmp
xor
loopne
in
les
xchg
std
loop
shr
fcmovbe
aam
test
enter
test
add
std
in
sub
repnz
ror
out
shr
add
cmp
cmp
hlt
xlat
loope
out
sti
jmp
mov
sub
cmp
aad
fxch
cmp
test
mov
out
add
imul
loope
rcl
shr
into
enter
loop
int3
out
jmp
mov
lret
xchg
sti
rorb
jmp
out
fcmovbe
fdiv
int3
repnz
shl
test
mov
call
ljmp
jmp
div
int3
xlat
aam
repz
stc
in
loope
out
out
repnz
xor
cmc
iret
fdiv
fnstcw
loop
cmp
ds
cld
lds
cmc
fld1
xlat
fcmovnb
iret
and
xor
icebp
jmp
adc
loopne
sar
lret
inc
loope
test
jmp
out
icebp
xchg
ret
cmc
test
int3
lret
cmpl
aas
out
leave
jmp
decl
int
stc
ret
hlt
repnz
xlat
aam
cmc
fdivp
cld
fucomi
cmc
clc
fsubrp
fcomp
test
cld
hlt
mov
in
ret
xor
cmp
loopne
loop
in
fprem
xlat
cli
aad
add
mov
addb
fstpt
lret
aaa
in
test
icebp
rcr
shl
lds
xchg
mov
xchg
fnstenv
das
out
repnz
in
ss
loope
shr
ljmp
mov
rcl
hlt
lret
cld
jmp
idiv
out
int
addb
les
mov
test
std
lret
out
shl
loop
ds
stc
cld
cmp
nop
out
adc
fsubp
mul
aad
divl
int3
jecxz
repz
xchg
test
into
xchg
mov
lock
enter
cli
lret
fadds
out
cld
addl
lock
shl
int3
xor
roll
xchg
mov
addb
clc
aad
fstp
lock
cmp
out
fcmovb
in
cmc
fst
jmp
loopne
into
ret
leave
leave
xor
xor
fnstsw
cli
aam
div
shl
mov
jecxz
lock
in
xlat
fprem
cmp
cmp
repnz
out
rcr
in
xlat
enter
out
cli
mov
xchg
mov
leave
out
in
clc
lret
das
iret
xlat
ds
fdivrl
xchg
sbb
ss
icebp
mul
fsubr
cld
fnstcw
cli
fcmovnu
mov
lea
testb
repnz
cmp
repz
cmc
stc
cmp
ret
in
fsubrp
loopne
cli
loop
test
aam
jmp
in
std
fdivr
hlt
adc
cmp
testl
mov
repz
loopne
loope
cmc
lret
repz
aaa
sar
in
not
sar
cli
loope
jecxz
sbb
loopne
repnz
xor
fsubr
lock
fdivp
cmp
addb
in
in
repnz
in
out
enter
cmp
in
into
ds
cli
xlat
test
loopne
in
sti
xchg
in
std
xchg
out
mul
call
in
xor
fdiv
lret
fsub
sbb
decl
int3
fmull
fcmovnbe
cmp
idivb
jmp
loop
in
xlat
fucom
mov
int
inc
mov
aaa
out
idivl
fsub
sbb
shl
jmp
in
mov
xchg
icebp
rol
int3
call
sar
cmc
repnz
testl
jmp
out
lds
sub
neg
and
inc
sbb
push
mov
mov
movl
cmpl
je
cmpl
jne
pushl
call
cmpl
jne
mov
dec
mov
xor
add
dec
mov
jmp
sub
mov
sub
movl
adcl
jmp
mov
fcmovne
jnp
xchg
jb
adc
sub
add
div
rolb
clc
icebp
mov
sti
out
out
sub
cmp
lret
fucomi
imul
repz
lret
mov
in
sti
lock
leave
mul
jmp
lock
xlat
fxch
out
or
adc
std
cli
jmp
out
fld1
cmp
cmp
cmp
std
mul
lock
call
rorb
nop
mov
hlt
out
ss
shl
cld
shlb
loopne
adc
fadds
test
enter
call
iret
out
out
leave
in
aam
jmp
fcom
std
rcl
repz
out
in
in
jmp
in
out
in
clc
das
fdiv
xor
out
shr
ret
repnz
repnz
in
stc
int3
loop
call
in
in
lret
shlb
cmp
xchg
rolb
int3
in
or
loope
jecxz
xchg
xor
ss
int3
int
lock
adc
fstp
mov
out
ftst
out
out
push
out
repnz
ljmp
in
test
icebp
aad
std
icebp
out
fsubr
fmul
lret
out
loope
leave
xlat
jecxz
cld
out
adc
fidivrs
lock
sbb
or
clc
mov
cli
xchg
out
lock
out
in
lret
sbb
sti
out
sub
fcmovu
mov
or
stc
jmp
sar
int3
nop
ret
repz
rcl
fcomip
in
lret
cmc
fld
icebp
mov
in
mov
fucom
xchg
int3
aam
div
xor
cli
rcr
call
div
out
ret
sti
test
std
fdivrp
jmp
mov
int
addl
dec
ss
roll
loope
in
in
out
sti
mov
lock
and
cmp
cmp
fcmovnu
cmp
in
icebp
cmp
int
iret
loopne
jecxz
loope
mov
in
into
int3
xlat
jecxz
cmp
out
div
ss
fstp
xlat
jmp
and
fnop
in
in
roll
ror
sar
cmp
sarb
in
cli
cmp
loope
rcl
mov
int
leave
into
ljmp
stc
xbegin
cld
out
cmc
fstp
in
fcmovb
sub
out
in
in
xor
in
shl
fildl
sti
xor
movb
rorl
out
lret
icebp
jmp
cmp
fcmovb
testb
addl
xlat
cmp
repnz
aam
cmp
ret
sti
out
sti
mov
int3
mov
fiadds
das
cmp
icebp
ljmp
sarb
cli
in
in
fucom
xchg
out
in
cmc
test
enter
call
in
xchg
loop
ret
testb
rorb
loop
enter
in
cmp
stc
out
movl
fldl
xlat
int
call
aam
iret
aam
stc
xchg
loopne
call
stc
into
loope
xchg
hlt
icebp
into
ror
fcomi
or
test
sti
ret
shl
addb
call
leave
rol
xor
std
shr
cld
xor
adc
xlat
xchg
icebp
ret
sti
ljmp
ljmp
cmp
shl
roll
cli
adc
in
std
leave
in
std
xchg
test
mov
fmul
sar
sti
leave
icebp
sar
into
aad
ljmp
lret
into
test
mov
ror
rcr
xor
in
xor
std
out
and
cld
xlat
cld
leave
cld
in
int3
call
ljmp
ror
lock
loopne
repz
addl
out
test
lock
cmc
imul
shr
jmp
cmp
aas
ror
mov
iret
ljmp
cmp
rcl
std
cmp
lret
repz
faddp
hlt
std
call
out
in
in
addl
stc
aas
loope
shl
aam
repz
mov
call
enter
ss
xor
cmp
xchg
in
in
shr
in
jecxz
aad
test
cmc
into
aas
into
loopne
loope
cmp
cli
lret
jmp
enter
mov
in
sti
iret
out
fcmovnbe
enter
cmp
ret
test
orl
lret
movl
sub
mov
notl
mov
mov
jmp
lret
ror
rcr
lret
fistl
cmpsl
out
filds
jle
add
lret
shr
and
icebp
aam
stc
fdiv
xlat
cmp
loop
aad
out
cmp
loope
loop
into
iret
leave
addl
ss
icebp
in
sub
call
stc
lds
lret
filds
xor
fcom
into
aam
cmp
sbb
fistpll
add
fcmovnbe
decb
shr
hlt
shl
fcmovnu
rcr
sti
sbb
fildl
and
bnd
enter
loope
cmp
xlat
in
lret
out
out
shll
out
fadd
div
cmp
loopne
stc
cmp
int3
addl
mul
decb
loopne
ret
aad
int
cmp
not
and
xchg
lret
incl
rcl
aaa
fdivrl
out
cmp
lock
add
aad
stc
test
adc
loopne
in
ljmp
ret
fadd
int3
xor
incl
xchg
and
fadd
loop
loope
std
out
mov
cs
aad
xor
shr
sti
icebp
repnz
repz
call
out
stc
mov
loope
shl
sub
cmp
icebp
hlt
fcom
loopne
in
fmuls
leave
sti
loope
int3
fcmovne
fucomp
shl
rol
fcomi
icebp
out
int3
cli
cmpl
mov
hlt
xlat
in
in
ret
in
sub
cmc
cli
fxch
cmp
cmc
fdiv
jecxz
repz
xabort
mov
lock
sti
nop
sub
out
out
cmp
lock
cmpl
sub
mov
clc
nop
loop
in
aam
test
stc
leave
mul
ss
out
idivb
lret
test
addl
out
loopne
int
xchg
xchg
in
icebp
loopne
in
ljmp
incl
sbb
test
lret
in
leave
fmul
cmp
rcl
std
aad
fadds
jmp
cmc
jecxz
xor
rol
int3
xor
ds
cmp
in
call
mov
clc
out
loopne
fiadds
rcr
lret
xlat
or
out
shr
push
lret
lret
xchg
loopne
icebp
xchg
jmp
leave
fdiv
bnd
fsub
loope
aas
hlt
out
out
fmulp
out
leave
mov
xor
out
fnstcw
leave
loopne
int3
fdiv
ds
idivl
int
sti
xchg
jecxz
int
xor
jmp
fnsave
out
lret
sbb
loopne
sarl
cmp
fimuls
out
ror
in
xchg
in
cmp
jmp
not
icebp
cmpl
fcomi
xchg
sbb
fimull
ss
fsubr
cmc
iret
ror
cmp
into
ds
rcr
loop
cmc
xchg
sti
mov
in
xor
xor
ss
fxch
in
imul
lds
stc
fstp
fadd
fsubrp
xchg
xor
in
lret
xlat
aaa
stc
leave
loopne
hlt
test
in
loope
sbb
out
sti
xchg
loopne
xchg
loopne
shlb
leave
sub
fdiv
ds
cmp
vpaddb
in
int
cli
int3
mov
int3
in
fcmovbe
aaa
lret
cmc
sbb
test
stc
std
mov
stc
loope
xchg
call
notb
leave
cmp
std
roll
aas
in
fcmovu
jmp
out
ljmp
icebp
xor
xlat
cmp
hlt
hlt
cmp
addl
sti
in
lret
in
int3
out
enter
neg
cmc
std
xor
stc
fiaddl
loope
rol
and
jecxz
cmp
fdivrl
cmc
cmc
xor
mov
jmp
jmp
jmp
mov
addb
call
rol
ret
ffreep
fcmovnb
test
cmc
lds
jmp
repz
div
sti
hlt
aam
out
out
cmp
roll
in
mov
clc
mul
nop
popl
shr
cmp
into
ss
stc
stc
ret
mov
add
repnz
xor
fld
out
jmp
rcl
cmp
test
loope
clc
out
decb
in
xor
out
aaa
clc
jmp
rol
out
jecxz
std
stc
lret
call
loopne
cld
into
divl
hlt
aam
icebp
enter
shr
lds
add
enter
int
fnstenv
xchg
mov
stos
add
dec
std
testl
out
lock
cmc
sub
rcr
xlat
jmp
into
aam
loope
xor
xlat
mov
cmc
mul
ljmp
jecxz
jecxz
jmp
stc
rcr
xor
sarb
out
rolb
jmp
repnz
loopne
in
shl
cld
ss
ss
fildl
stc
in
or
sub
cli
jmp
call
ljmp
aad
addl
cli
call
in
sarb
in
fsubr
cmp
rcr
lock
clc
in
aad
fmuls
lock
icebp
in
cmc
xchg
int
ret
cli
mov
xor
cmp
xor
addl
sub
call
jecxz
xor
ljmp
in
hlt
hlt
ret
int3
mov
in
xchg
loop
leave
jmp
cmp
aad
aas
cmc
loope
roll
test
loop
nop
shr
enter
xor
iret
cmp
shl
xchg
hlt
fiaddl
into
mov
in
xor
aad
cmp
out
jmp
in
xor
xlat
test
cmp
jmp
fsub
call
xlat
cmp
or
xchg
sti
int3
out
out
mov
xchg
in
in
ljmp
cmc
into
test
icebp
fsub
enter
fndisi(8087
addl
loop
fcmovnb
jmp
ret
add
xchg
aam
in
nop
repnz
iret
aad
ret
shr
cmp
shr
icebp
cmp
and
xchg
lret
orl
aaa
call
cmp
hlt
fiaddl
ljmp
in
int
cmp
vpsrld
leave
sarl
in
fnstenv
cli
stc
stc
loope
mul
fimull
xchg
jmp
fcomi
cmp
out
out
ljmp
stc
in
testb
rcr
in
shr
cmp
into
lret
in
out
rcr
lret
in
cld
test
xlat
out
into
xlat
cld
fucomip
iret
ror
loop
icebp
xor
iret
int3
jmp
xlat
aaa
fsub
mov
rorl
test
ror
shrb
mov
into
fsubrp
leave
loop
hlt
fadds
add
mov
rcl
notb
int
fmul
aas
enter
ror
inc
stc
ret
in
in
mov
int
rolb
fucom
stc
int3
in
rolb
fistpll
rcr
sti
fsubr
fsubr
sub
into
leave
aam
in
aad
cmp
fstp
cmp
cmp
jmp
orl
sar
in
hlt
lock
incl
fcmovnbe
addb
xchg
hlt
lret
loopne
xor
cmc
test
loopne
cmp
leave
jmp
fsubr
test
shl
rcl
in
cmp
cmp
cld
fadds
in
loop
out
int3
call
out
nop
lea
shlb
in
fsin
lock
fistpll
in
icebp
loope
repnz
fiaddl
incl
in
lret
jmp
cld
shl
rcr
fistpll
or
dec
out
int
das
repnz
idivb
sti
cmp
sbb
enter
ljmp
iret
enter
ror
cmp
hlt
xor
std
ret
imul
sbb
std
mul
icebp
loopne
stc
aaa
cmp
repz
lock
cmp
movb
repnz
out
xlat
in
cmp
icebp
out
aas
aam
xchg
aad
cmp
out
lret
xor
int
enter
xlat
ret
xchg
cmp
filds
rorl
out
repz
fptan
lock
in
sti
out
xlat
cmp
iret
shl
mov
enter
in
loopne
xchg
out
test
in
shl
incb
sti
incl
out
loopne
lret
fld1
call
int
loope
xor
cmp
cmp
hlt
out
iret
loop
fcom
mov
in
loopne
xchg
popl
fmul
xlat
cmp
cmp
jmp
icebp
iret
orl
add
cmp
jmp
ret
fmul
fcom
fdiv
jne
pushf
out
fs
xor
add
add
fcomp
out
loop
in
xchg
aam
xor
in
cmc
rcl
cld
repnz
test
cmc
loope
xlat
leave
call
jecxz
cld
ljmp
sti
aam
aaa
ss
sarl
ret
shl
ljmp
out
not
out
ss
in
cmp
call
cmp
test
fcmovu
ret
sar
fadds
lret
mov
not
repnz
sub
fnop
fdivrl
loope
repnz
fsub
fisttps
fisttpl
xor
cmp
cmp
int3
cmp
repnz
out
icebp
jecxz
ret
call
mov
in
lret
fcomi
in
jmp
aas
div
frndint
cli
incl
orl
ljmp
sti
in
out
aad
test
stc
loopne
movb
in
out
iret
in
rcr
cmp
fmul
lock
cmc
loope
out
ret
in
cmc
loopne
cmp
out
lock
ljmp
enter
out
aad
test
clc
in
cmp
jecxz
fdivr
in
lock
mov
aam
hlt
aam
out
stc
ds
iret
jecxz
fadd
repnz
jecxz
in
test
fucomi
in
shl
loop
shl
cld
xor
cmp
sbb
stc
cmc
xchg
shr
lret
fxch
mov
enter
cmc
call
sub
fcomip
cmp
fdivrp
stc
out
out
clc
clc
lret
in
roll
cmp
lret
lret
out
repnz
in
shl
ljmp
in
fdivrp
in
out
lret
hlt
stc
jmp
jmp
or
cmp
sti
inc
mov
shr
out
vphaddubw
icebp
in
cmp
int
aad
xor
out
leave
xlat
fxch
loopne
fdivr
out
mov
int3
lret
aad
leave
out
aaa
fcmovbe
stc
out
xlat
jecxz
faddp
enter
flds
shrl
out
fsub
in
std
sar
int
fdivp
in
rcl
sti
roll
lock
repnz
xor
cmc
out
ds
shl
rcl
shl
int3
mov
call
into
call
cmp
hlt
ror
call
rcr
test
vshufps
or
lret
lock
lret
sub
xor
into
stc
stc
hlt
into
cmp
cmp
ret
fiadds
fucomip
orl
out
aaa
lret
div
out
cli
xor
icebp
in
sarb
call
lret
lret
xchg
loop
ror
sub
cld
repz
aad
aas
jecxz
in
rol
dec
fsubr
fimuls
add
sub
hlt
out
xor
int
ljmp
out
cmc
stc
xchg
or
fucomi
fists
ret
std
fsubr
in
cmp
loopne
iret
in
mov
test
shr
loope
jecxz
les
icebp
fstp
repnz
cmp
repz
loopne
fsub
mov
clc
fimull
in
xor
fsubr
shr
jmp
std
lock
loope
ret
cmp
fldl
ret
out
xor
out
in
cmc
sti
ret
fadd
xchg
test
rorl
lret
mov
cmc
leave
iret
enter
fcomp
fldl
rcr
fcom
fnstsw
jmp
idiv
xchg
jmp
lret
mov
shll
xor
in
sar
lret
sbb
cmp
fmulp
aam
mov
xlat
mov
nop
loope
in
cmp
repz
into
into
lret
int
icebp
repnz
xlat
out
fadd
mov
mov
rol
ror
cld
cmp
fdiv
cld
shl
rcl
cmp
ret
addb
int
in
in
hlt
out
ljmp
enter
inc
in
xchg
in
mov
mov
shr
clc
shll
in
out
fcmovnbe
sti
icebp
les
cli
xchg
xchg
repnz
movl
repnz
std
and
ret
sbb
shl
stc
mov
iret
in
iret
test
in
test
cmp
cli
call
shl
hlt
std
std
aas
fdivr
mov
xchg
cs
cmp
out
leave
fxch
shl
cmp
aam
neg
aad
jmp
test
loop
icebp
jecxz
loopne
cli
shll
out
into
fucomip
int3
fnstsw
shl
aad
filds
icebp
sbb
xor
roll
add
add
add
or
cmp
inc
mov
cmpl
jae
cmpl
jne
pushl
call
cmpl
jne
mov
inc
mov
jmp
andl
mov
inc
mov
cmpl
jne
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
sub
jmp
aas
rcl
aad
fstp
loop
pop
mov
popa
in
add
add
fcmovb
lock
cmp
clc
shl
repz
xchg
out
mov
xchg
clc
stc
cmp
cmp
fcomip
lock
xlat
ljmp
fucomip
lea
jecxz
lret
iret
call
std
repnz
jmp
out
vpsubsw
enter
stc
call
into
in
cmp
cmp
in
ret
in
sti
lret
in
shr
out
mov
cmp
rol
in
enter
fldl
loopne
lds
addb
aam
cmp
repz
in
loop
cli
loopne
shl
shl
fcomip
rcr
add
ljmp
in
aaa
jmp
call
ds
stc
mov
clc
mov
ret
mov
icebp
jmp
xor
xor
clc
xlat
clc
sti
xlat
in
aas
neg
mov
fildl
cmc
xor
aad
out
jmp
xor
repnz
aas
fdivp
shl
and
std
test
iret
leave
cmp
aam
int
in
int
stc
loopne
cli
fcmove
ret
fdivr
in
call
fidivrl
out
leave
idivl
in
ror
xlat
loop
lret
out
out
jmp
in
stc
repnz
enter
xor
aad
xchg
mov
cld
loopne
enter
nop
rolb
leave
fsin
aas
cmp
rol
test
stc
leave
ljmp
hlt
repnz
int
in
leave
aad
cli
out
shl
sarb
xor
xlat
int
mov
out
mov
repnz
icebp
xor
neg
cmp
xlat
cld
mov
ret
loop
mov
loopne
out
in
ljmp
imul
cmc
jmp
shl
neg
fincstp
in
lret
leave
fstp
jecxz
out
mov
mov
xor
ss
cs
call
loopne
jecxz
repnz
test
out
jecxz
lret
xchg
imul
repnz
fldln2
std
cmp
stc
repnz
out
xchg
xor
roll
das
shr
jmp
fnstcw
cmp
fdivrp
cmp
loop
mov
mov
jecxz
jmp
xor
out
stc
rcl
sti
aas
shl
rol
fisttpll
ljmp
jecxz
xor
call
in
ljmp
stc
aam
loop
lret
ret
xchg
lock
fsubr
jmp
cli
int3
clc
jmp
out
lock
ljmp
mov
mov
cs
cmp
cli
jmp
stc
cmp
ljmp
jmp
cmc
in
int3
lret
repz
ss
std
fdivrp
in
lret
in
fisttps
out
ljmp
sti
cli
stc
rol
cli
div
xchg
call
in
xchg
loope
out
out
fcom
int
jmp
fcomip
into
ds
fldl
in
mov
int3
test
lock
shll
in
cmp
ljmp
int
fcomip
filds
enter
icebp
call
into
int
ljmp
aas
cmp
clc
out
dec
lock
into
aam
stc
jmp
xlat
iret
test
xlat
sarl
jecxz
jecxz
adc
leave
test
std
nop
xchg
shll
ret
shl
stc
jmp
cmp
cmp
loopne
jmp
out
cmp
xor
ret
out
out
cli
in
cmp
addl
adc
lret
out
lret
shr
icebp
xor
cmp
ljmp
rcl
idiv
decb
jmp
hlt
test
ror
xor
idivb
cmp
fidivrs
xor
leave
out
faddl
out
in
cmc
icebp
lret
xlat
ljmp
loope
enter
aad
in
out
test
mov
bnd
cmp
ljmp
repz
sar
xchg
cld
and
cs
xor
clc
std
cli
ret
fsubr
faddp
mov
xchg
cld
call
fildll
xor
shr
clc
pushl
int
cmp
cmp
adc
dec
fisttpll
jmp
xchg
int3
iret
leave
iret
cmp
aad
leave
in
jmp
ret
push
or
add
lds
add
aad
xlat
fcmovnu
ret
pop
lock
adc
add
add
bnd
cli
out
sti
les
shr
jmp
fmul
clc
jmp
xlat
in
lock
ret
cld
loopne
jmp
in
orl
icebp
repz
cmp
repnz
cmc
out
roll
sti
enter
icebp
lea
int3
in
cmp
hlt
sub
clc
shr
fcmovb
mov
test
addb
in
fcmovb
lock
dec
in
aad
jecxz
clc
orb
mov
call
int3
hlt
aaa
in
shl
cli
cmp
into
fst
rcr
std
cld
out
testb
icebp
xchg
push
ljmp
into
xor
cmp
clc
jmp
fcompp
lret
test
xchg
int3
cmc
or
rcl
in
leave
imul
int
aam
and
sar
fcomi
out
int3
jmp
fdiv
sub
fidivrl
repnz
fdiv
out
xlat
test
out
mov
fmul
out
and
repnz
int3
lret
int3
not
fdivrp
cmp
filds
cmp
call
mov
icebp
lret
shl
repnz
lret
ljmp
cmp
aad
mov
and
mov
aam
xor
aad
out
aad
xlat
fdiv
ret
fdivr
in
sti
fucomi
cli
mov
out
enter
cmp
dec
fucom
sbb
jmp
and
faddp
mov
dec
leave
das
int3
xor
into
cli
sar
cmc
sti
cmp
fistpll
cmc
in
sti
clc
fmulp
jmp
lock
test
into
repnz
lock
adc
call
cli
test
sub
loop
xorl
int3
xor
in
sti
repnz
hlt
jmp
in
test
out
faddl
shl
fdivrs
ss
iret
jecxz
test
aam
sub
cmp
rcll
cmp
fcmovbe
or
out
enter
mov
out
loope
lret
iret
or
in
shll
mov
cld
into
fdecstp
rol
sbb
clc
mov
clc
out
into
int3
xchg
jecxz
mov
xor
cmp
sarl
clc
aaa
sti
xor
ret
repnz
shl
aad
ret
fisttpll
cld
lea
les
lret
loopne
cmp
jecxz,pt
xchg
xchg
std
jecxz
fsubr
int3
loop
jecxz
cmc
repz
xor
divb
stc
cmp
cld
cmp
loop
fists
call
cmp
cmp
icebp
dec
cld
fsubp
cli
cmp
hlt
fmuls
out
xchg
xchg
out
rcl
aas
cmp
mov
fsubp
xlat
out
test
iret
into
xor
out
fdivr
repz
shr
fcomi
repnz
xlat
cmp
lret
std
loope
in
test
jmp
cmp
cld
ljmp
faddp
rorb
fadds
test
rcl
in
in
int
lock
roll
stc
ret
std
fucomip
shlb
leave
shll
cs
shr
cld
cmp
ret
fadd
fmul
out
shr
xchg
mov
div
out
into
xor
ret
loop
iret
shl
idivl
mov
in
fucomi
repnz
xchg
nop
ljmp
div
shl
imul
cld
addb
enter
into
cli
xchg
int3
xchg
imulb
fcomp
hlt
iret
cmp
stc
fsubr
xor
out
xor
fdivrp
sti
mov
out
call
call
cmp
repz
rol
cld
std
ror
xchg
cli
jmp
icebp
cli
rcl
fucom
xor
lret
int3
leave
cmp
shl
cli
xorb
addl
int3
shl
shr
out
xor
rcr
sarb
enter
test
iret
xor
fucomp
int
test
loopne
jmp
mov
iret
shl
fnop
hlt
cld
fchs
loope
xlat
std
hlt
not
test
loope
fcomi
mov
test
sub
int
aam
repnz
into
out
lock
stc
ljmp
loopne
xchg
in
leave
test
ss
hlt
cmpb
rorl
int3
sub
in
mov
int
repnz
in
ljmp
fcom
fst
repnz
out
in
leave
sub
rolb
roll
add
push
or
adc
sub
movl
mov
xor
mov
jmp
ror
ret
int
movsb
inc
push
movsl
xor
jle
add
rol
cli
int
into
into
aad
fdivrp
loopne
xlat
test
aas
rolb
xchg
les
xor
xor
cld
rolb
fcomp
fisttpl
jecxz
mov
hlt
jmp
aad
cmp
out
cli
int3
fcmovnbe
cmp
aad
xchg
and
test
sti
faddp
fsubrp
int3
mov
loop
in
iret
fidivs
not
fdiv
sar
lock
call
mov
mov
xlat
out
into
out
xor
out
rol
stc
test
fsub
std
lret
nop
in
cmp
in
shr
std
fdivrp
jecxz
shr
cmp
mov
lret
stc
int
cmp
cli
stc
rcl
in
int3
xor
aad
fsub
add
std
hlt
in
test
in
out
out
cmp
cmp
cld
cmp
test
out
out
std
in
xchg
rorb
clc
stc
jmp
int
loope
test
jecxz
ljmp
mov
in
out
cmp
les
in
std
lret
cmpb
mov
into
loop
in
loopne
repnz
aad
fnstenv
std
lret
int
cmc
icebp
loope
out
sar
aad
xlat
loop
lret
jmp
in
loop
into
idiv
in
clc
fstp
lret
in
icebp
fsubr
repz
sbb
fstl
xor
ret
into
fcmovnbe
sarl
aas
rolb
mov
loop
and
shl
hlt
int
rcl
iret
ffree
cmp
int3
jmp
out
cld
enter
jmp
loopne
std
iret
xchg
into
xchg
aad
int3
xor
ljmp
repz
sbb
cld
and
mov
mov
aaa
aam
sarl
out
fidivrl
fcmovnbe
loopne
fstpt
hlt
cmc
fstl
fisttps
rcr
std
fcmovnu
in
imul
fsubr
aas
ret
mov
loop
lds
mov
icebp
iret
lock
xlat
aaa
out
rcl
cmp
int
idiv
loope
cmc
hlt
lret
mov
jmp
int
aaa
cld
aad
int
sti
or
sar
div
jmp
cld
test
into
in
out
lret
in
int3
xlat
cmp
int
into
ffreep
xor
rol
mul
in
leave
sti
loope
fimuls
jmp
jmp
out
cmc
call
out
mov
out
fmul
jmp
in
ret
cs
out
clc
shr
div
aad
addb
mov
sti
in
fstl
in
jecxz
lock
cmp
neg
in
aas
test
in
xchg
mov
addb
leave
cmp
hlt
cli
sar
loopne
leave
mov
cld
jmp
addl
lock
cmp
out
jecxz
mov
test
decb
roll
out
lock
out
cmp
stc
cmp
in
fsubr
jmp
xchg
call
xor
fsubr
ljmp
ffreep
jecxz
leave
not
fucom
out
out
std
sub
in
out
div
cmp
add
test
idiv
xchg
nop
in
mov
xchg
mov
vaddsubps
bnd
out
out
fadds
out
iret
rcr
int3
out
aad
icebp
xor
int3
fadds
jmp
std
shl
lds
rorl
leave
ljmp
fdivr
les
vpsubsb
or
cli
vpandn
rcl
ljmp
in
iret
xor
call
std
jecxz
std
incb
vshufps
fcmovnu
repnz
xlat
testl
and
out
cld
into
xchg
xlat
xor
sti
ljmp
loope
rcr
std
out
lret
nop
test
xchg
hlt
ljmp
std
lret
aam
shl
ret
fmul
loopne
cmp
test
sub
shl
xchg
rcll
lret
jmp
iret
loopne
fucom
jmp
out
ror
repz
mov
leave
icebp
lock
clc
cmp
cmp
aad
sti
in
in
ffreep
icebp
out
cld
jmp
std
call
test
xor
out
rcl
in
add
pushf
clc
jmp
ret
int3
rcl
ret
fldl
cmp
push
add
ror
ror
out
loopne
out
in
faddl
roll
ljmp
xor
sub
stc
in
loop
jmp
in
in
xchg
in
iret
test
ljmp
loope
in
sar
cmc
fcomip
lret
testb
xchg
test
jmp
lock
divl
repz
icebp
repz
ret
jmp
out
jmp
in
addb
clc
leave
xlat
aaa
xlat
repz
fsub
fcmovu
cld
lret
dec
jmp
jmp
into
lock
jmp
xor
cmp
fmul
int
ffree
rol
cmc
mov
int3
mov
test
shl
cmc
jmp
aam
stc
clc
idiv
ret
rcl
enter
in
in
in
int3
mov
cmc
repz
aam
out
aam
shr
neg
cmp
ds
movl
lret
int
cmc
repnz
lret
std
std
xor
repnz
cmc
loope
enter
in
std
xchg
jecxz
leave
cld
xchg
aaa
in
cmp
int3
out
in
loop,pt
shl
call
loop
fimuls
xchg
xlat
cs
aaa
cmp
rcl
enter
fcmovnbe
flds
ret
call
in
mov
test
loop
in
int
jmp
cmp
cmpb
call
fdivp
loope
cmp
xchg
out
shll
jmp
out
sti
iret
ljmp
loopne
cld
loopne
out
leave
test
jmp
xchg
xor
loop
iret
lret
call
call
loope
sti
stc
test
mov
leave
nop
xchg
out
clc
shl
xor
jmp
ret
roll
aam
lret
int3
incb
cmc
jecxz
iret
iret
aam
lret
fistpll
ret
cmc
aad
shl
out
enter
iret
ret
loopne
xchg
out
leave
in
rol
icebp
shr
hlt
ds
cmp
idivb
out
into
fldl
aad
stc
jecxz
in
leave
std
cmp
aad
iret
adc
lds
mov
test
mov
xchg
lret
in
int3
icebp
sub
clc
repnz
loope
lock
lret
cmc
iret
repz
stc
cmp
in
cli
enter
in
loopne
cmp
xchg
shl
shl
adcb
iret
out
cmp
lock
shl
ds
ror
lds
icebp
loope
xchg
call
lret
aaa
fcmovnu
clc
lret
ret
icebp
imul
out
fucomp
sti
fildl
lea
in
rcr
fnstsw
cmp
in
aam
repnz
fdiv
ret
test
test
out
xchg
ss
out
rcr
fmulp
leave
shr
cmp
hlt
fisttpl
mov
cmc
cli
cmp
fdivr
idivb
jmp
out
out
std
aad
neg
fptan
icebp
mov
repz
in
call
std
cmp
cmp
aas
int3
rolb
std
sbb
repnz
jmp
out
das
in
lock
int3
repz
loope
shr
shr
lret
loope
loopne
mov
in
repz
xor
xor
enter
cmp
xchg
lret
xlat
leave
adcl
cli
xor
clc
stc
leave
hlt
cmpl
out
cmp
and
xchg
repz
in
repnz
in
ret
in
enter
cmp
sub
mov
fucomi
in
into
lret
std
repz
cmc
int
int3
xor
loop
clc
cmp
faddp
fcmovbe
adc
out
loopne
sti
addb
fdiv
clc
cmp
jmp
into
fsubp
in
cld
sar
xabort
lds
jecxz
in
mov
xlat
test
repz
lret
cmp
clc
jecxz
jmp
std
shl
jmp
leave
aad
xor
cmp
fld
fprem
sar
sti
loop
sti
in
jecxz
in
out
out
jmp
fidivrs
cmp
ffree
mov
cmp
add
incb
mov
lock
cmp
lret
repz
cli
cmp
in
clc
cli
xrelease
fsubr
incb
in
out
cmp
shl
addb
int
xchg
xchg
jmp
out
fdivrl
cmp
aam
addl
inc
aam
test
shlb
jmp
fadd
aam
fst
fcoms
sbb
jg
pop
jns
xchg
addb
stos
add
mov
int
xorb
ret
call
or
int3
fst
call
jmp
mov
iret
loopne
aad
loop
out
out
das
cmc
fdiv
int
int3
adc
ret
cld
fdivr
lret
cld
loopne
rcl
xor
in
rol
idiv
out
sti
fucomp
aad
sarl
rcr
fsubrp
sub
sti
loope
mov
nop
out
out
les
int3
jmp
in
fptan
cmp
in
aam
fcom
lret
loop
call
xchg
lret
fnstcw
iret
ljmp
aad
test
icebp
repnz
sti
leave
mov
loop
xchg
ror
shl
clc
xor
shr
idivl
jecxz
rcr
fcom
incb
clc
xchg
out
out
std
nop
xor
xor
out
out
loope
rcr
lock
jecxz
out
testb
loop
out
xor
clc
repz
icebp
ss
faddp
aas
out
in
jecxz
shl
cmp
fmull
xor
lret
xlat
in
jmp
loop
fstp
ret
sti
adc
test
int3
int3
ljmp
out
shll
aam
ret
cmp
fucom
xchg
leave
fdivr
cli
std
enter
fucomip
xchg
aam
xor
icebp
ror
ljmp
xlat
push
icebp
mov
mov
test
mov
in
jmp
or
repz
lret
clc
mov
mov
in
fstp
into
hlt
ror
out
rcr
aaa
aam
lret
cmp
fcom
loopne
enter
cld
xchg
sti
mov
mov
aad
das
xor
aam
hlt
jmp
aas
cld
jmp
test
clc
cli
hlt
in
clc
orb
lret
shl
xchg
jmp
test
repnz
xor
out
aad
fistl
xchg
ret
xlat
xlat
out
out
into
cmp
stc
fildl
stc
stc
xlat
out
out
fcomp
dec
mov
int3
xor
out
out
call
fxch
fsub
rcr
fcomip
in
xor
lret
in
mov
out
loopne
xabort
ljmp
rcl
sbb
lret
out
leave
out
std
int3
shl
ss
sar
in
das
fsubr
repnz
into
ds
mov
fcmovb
incb
or
xchg
fidivrs
repz
xor
cld
enter
jmp
fcomip
ret
aam
mov
fimuls
ret
test
aaa
shl
clc
int
stc
fcmovb
jmp
out
std
int
lock
hlt
out
aam
jmp
cmp
rol
loope
aad
fimull
adc
shl
in
sti
lret
lret
loopne
repnz
add
jecxz
out
stc
out
ror
ret
icebp
out
xor
cmp
cmp
aas
fadd
in
jecxz
mov
lret
mov
int3
loopne
xor
jmp
icebp
int3
in
aaa
aad
aad
aam
jecxz
sbb
leave
mov
loop
out
int3
or
cmc
fdivs
not
fmul
repz
aad
xor
xlat
call
iret
jmp
sub
jmp
cmp
jmp
iret
cld
fstpt
xlat
out
push
mov
into
rcl
nop
aad
clc
test
in
out
not
lock
fsubr
leave
out
out
loope
in
mov
in
in
enter
fcomi
fdiv
sub
in
aad
in
leave
xlat
mov
in
repz
mov
jmp
xor
aam
enter
sub
lock
std
xchg
out
repz
in
out
call
repnz
out
jmp
fdivr
iret
into
idiv
xchg
jmp
cli
int3
call
cld
int3
shl
cmc
out
fiadds
fnstsw
stc
out
out
call
in
test
bnd
lock
cmp
in
xchg
test
mov
fsub
jmp
loop
mul
in
rol
repnz
fsubr
ds
aas
testb
cmp
mov
xchg
cld
iret
loopne
ss
out
xor
in
call
sub
fcomp
icebp
or
jmp
xchg
aam
les
ljmp
sbb
call
cld
fstp
mov
call
xor
xor
hlt
out
cld
clc
ljmp
aad
out
lds
xchg
iret
enter
movl
not
movl
sbb
movl
mov
adc
xor
mov
subl
add
jmp
int
int
leave
push
hlt
cltd
loope
jp
mov
test
jle
add
icebp
aad
enter
into
repnz
aad
in
leave
fiadds
loopne
xchg
test
aam
lock
clc
cmp
ret
xchg
mul
enter
in
cld
add
ror
adc
out
xlat
jecxz
fcmovu
fxch
iret
lret
clc
ds
call
aad
in
popl
xor
shr
leave
lock
xor
ret
loop
lock
in
out
iret
hlt
in
aam
leave
shr
not
repz
std
hlt
repnz
roll
cmp
loopne
mov
jmp
aas
cmc
loope
roll
ret
fucomip
mov
iret
xchg
lds
ror
lret
ljmp
test
xlat
in
test
xor
adcb
out
fprem
idivb
ds
aad
idivl
idiv
in
mov
int3
ret
mov
out
xchg
in
cs
shlb
in
fstpt
sti
cld
addl
shl
xacquire
into
xor
iret
cli
in
repnz
lret
in
cmc
sar
not
clc
aas
mov
icebp
xchg
rcl
rorb
xor
clc
sar
loope,pt
fnstsw
fisttps
in
mov
loope
mov
decb
out
icebp
int3
cmp
jmp
fsubp
adc
loop
ret
fmul
or
mov
ljmp
shl
cmp
ljmp
fcomip
in
test
cld
imul
out
xchg
test
fdivs
xor
sar
xor
aam
hlt
fsubp
rcl
ret
mov
rorb
aam
in
lock
xor
icebp
xorb
out
sar
cmc
sti
add
fcmovne
fadd
jmp
mov
shrb
lock
cmp
ffree
add
cld
test
std
in
fisttpl
in
mov
cli
rcl
fcomip
int
sub
jecxz
test
test
in
leave
jmp
cld
in
in
ljmp
repz
cld
sti
cmp
jecxz
jmp
ljmp
rol
sar
xor
xor
dec
out
in
out
mov
clc
lret
sub
in
jmp
aaa
jmp
into
in
aam
lock
aad
shl
call
or
out
ljmp
shl
xor
in
in
ret
std
aam
testl
popl
jmp
xor
xlat
xlat
in
hlt
sti
fiaddl
sti
inc
mov
ljmp
dec
aad
out
dec
icebp
ds
ds
jmp
test
aas
rcl
out
in
out
cmp
ss
loop
fucomi
imul
ljmp
test
xor
fldln2
call
cmp
mov
addb
std
mov
shlb
lock
int3
int3
in
cld
xor
addb
call
out
in
loop
xchg
enter
cmc
clc
icebp
clc
shlb
ror
cld
call
test
lret
out
int
xor
ljmp
sar
ror
mul
loopne
aad
jmp
lea
repnz
call
enter
aam
cmp
enter
in
sbb
in
sti
jecxz
in
out
ljmp
jmp
loop
out
cld
ds
xchg
call
adcb
xor
cmp
sar
loopne
std
ror
xlat
sbb
test
lds
xchg
in
int
fisttps
iret
aam
int3
ror
cmp
ror
repnz
mul
loope
loop
mov
loopne
jmp
jmp
fmul
cli
shl
fdivp
repz
into
rolb
out
test
in
jmp
repz
in
out
lret
ror
fyl2x
cmp
cmp
aad
call
shr
jecxz
xor
stc
ljmp
loopne
sar
vpsubw
call
out
flds
xor
xor
ror
icebp
jmp
icebp
std
neg
fcmovnb
loop
xlat
faddp
xlat
leave
jecxz
lret
mov
loope
loop
stc
enter
or
jecxz
addl
in
mov
fcmovne
addb
ret
out
incl
fcmovu
icebp
jecxz
cli
movl
je
movl
push
movl
jmp
jmp
int
ret
rol
fcmovnu
jecxz,pn
pop
push
lret
or
add
add
rol
jecxz
loopne
xlat
sti
out
sub
test
in
sub
rcl
cmp
std
leave
fildl
call
mov
ficoms
call
fsubr
repz
cmp
int3
shl
xchg
sub
mov
fmulp
lds
call
lock
out
fstp
cmp
stc
xchg
xchg
out
sti
icebp
mov
icebp
clc
mov
ljmp
ror
cmp
not
repz
fnsetpm(287
out
in
mov
xor
int
clc
iret
ljmp
cmp
out
shl
fistpll
stc
in
jmp
xor
les
icebp
call
aam
clc
xor
test
lret
sti
lret
xchg
in
lock
xor
iret
xor
rol
out
ds
aad
fcom
std
adc
enter
fisttpll
in
fucomi
int3
aaa
cli
std
in
jmp
in
stc
sti
fcomip
loope
in
mov
loopne
lock
out
out
in
iret
in
in
cmp
ds
cmp
not
fldl
fsubp
nop
addl
aam
leave
cs
cmp
loope
rol
cmp
jmp
loope
shr
in
loop
fadd
stc
lret
fidivrl
aam
ds
ds
fdiv
hlt
sub
xchg
loop
loopne
into
iret
iret
out
aad
xor
fcmovbe
iret
repz
fmull
int3
xchg
test
fucomp
repnz
aad
xor
aaa
loope
cmp
stc
test
sar
orb
jecxz
in
out
fxch
out
icebp
jecxz
loope
repnz
in
faddl
enter
fnstsw
fistpll
jmp
mul
out
loopne
fld
clc
in
mov
lea
mov
in
clc
cmp
idivb
adc
ret
call
lock
jecxz
test
mov
in
cld
fdivrs
fst
cmp
jecxz
test
cmp
lock
test
nop
int3
roll
in
neg
cmp
cld
sar
fst
fisttps
mov
xchg
xor
lret
fcom
aas
call
aas
call
in
mov
xchg
fists
ror
ss
clc
out
fcmovnu
ret
in
loopne
mov
ljmp
into
into
sar
lock
int3
loop
jecxz
xchg
and
in
xchg
in
iret
out
xchg
into
xor
iret
ljmp
aas
fiaddl
cld
cmp
nop
shr
out
int
jecxz
lret
clc
in
hlt
divb
iret
cmp
sarl
fcmovbe
xchg
loop
out
out
loop
mov
jmp
xor
in
ljmp
test
xchg
hlt
mov
cmc
idiv
mov
aam
icebp
lret
xlat
cmp
fcmovnu
int
ds
mov
test
in
nop
int3
xor
cmc
cmp
sti
int3
ds
clc
rolb
stc
clc
fldl
int
sbb
xor
fld
lret
mul
div
std
fincstp
adc
loopne
in
loop
mov
out
xchg
xchg
rol
ss
cmp
shl
roll
jecxz
ret
test
mov
repnz
repnz
in
sar
loope
imul
aas
out
lock
cli
repz
in
decb
mov
cmc
cli
out
cmp
rcl
hlt
push
fmulp
mov
loop
shl
out
jmp
aaa
xlat
lock
aad
fstp
ds
cli
repz
loopne
out
cld
clc
fucomip
mov
lock
in
xor
idivl
cli
jmp
cmp
fdivr
iret
std
loop
cmc
test
ds
int3
int3
in
out
jecxz
xchg
lret
cmp
in
lock
cmp
fdivrp
ret
filds
lret
neg
fdivr
fmull
enter
ljmp
ret
addb
ljmp
fldl
int3
cmp
jmp
into
not
repnz
mul
addl
leave
out
shr
aad
std
stc
into
cmp
loop
ret
inc
aad
fxch
cli
test
int
xchg
ss
lret
ss
in
lock
into
rcr
test
rorl
in
int
int3
lret
shl
mov
addl
mov
subl
sub
jmp
int
ret
aam
fstp
fstl
fmull
push
loope
pushf
mov
jle
add
ljmp
fdivl
fucomp
cli
hlt
ret
out
out
loope
aad
mov
leave
mov
int3
mov
int3
xchg
loop
stc
cli
hlt
enter
std
cmp
and
fcmovnb
rcl
out
mov
mov
fdiv
jmp
f2xm1
lret
lock
dec
icebp
loope
sbb
in
call
sti
lret
in
xchg
out
call
clc
enter
into
not
ds
std
out
jmp
orl
loop
cmc
int3
in
jecxz
into
aaa
fdivp
cmp
adc
fld
jecxz
mov
and
jmp
xchg
and
cmp
ljmp
sti
int
cli
cli
ret
mov
out
fucomp
fdivr
loopne
icebp
int3
jecxz
jecxz
hlt
ror
out
cmp
cmp
shl
in
adc
loopne
loopne
xchg
loop
cld
call
into
repnz
repz
shll
fadd
aad
stc
cld
cmp
repz
mov
mov
aad
shl
mov
shrb
aam
cmp
ror
hlt
icebp
cmp
cli
in
xchg
adc
sbb
jmp
ljmp
lret
int3
cmp
rol
cli
in
in
into
decb
cmp
cmp
loope
les
shl
lock
xchg
add
out
sar
in
loope
clc
out
test
int
sarl
xlat
incl
enter
repz
rol
fsubr
call
leave
enter
fcomip
idiv
in
in
in
test
sti
in
rcr
loope
nop
aam
fmul
out
aad
fcmove
jmp
icebp
hlt
sti
adc
fstp
fxch
loop
test
xchg
out
repz
cmp
aad
enter
cmp
cld
cmp
cmc
loope
jmp
int3
into
xchg
repz
call
aam
into
aad
xor
cli
ljmp
fsubrp
mov
ljmp
fucomip
jmp
fcmovnu
stc
cmp
in
sti
jecxz
cli
addb
xor
leave
lret
iret
cmp
fdivrl
icebp
test
std
call
cmp
in
loope
fcmovnb
clc
repz
loopne
std
cmp
jecxz
cmp
enter
cld
nop
mov
int3
cs
jmp
rcl
repz
int
loope
filds
addb
jmp
out
repnz
shl
jmp
fnstcw
fiaddl
test
loop
in
cld
shl
loop
adcb
in
repnz
in
cli
ds
cld
std
filds
jecxz
mov
cmc
ror
lret
cmc
sar
lds
std
jmp
fcmovnu
clc
in
call
lock
aam
int3
in
icebp
clc
into
aaa
clc
cmp
jmp
push
jecxz
mov
call
xor
ret
cmp
fst
cld
xor
aad
test
ljmp
xchg
shlb
not
cmp
in
lock
fsubp
test
fadds
ljmp
mov
xor
in
jmp
shl
aam
ret
xchg
fcmovbe
jmp
loop
in
xchg
imul
xor
std
ss
xchg
faddp
loope
leave
out
loopne
out
icebp
in
out
lret
int
rcl
lret
fdivrs
shl
test
cld
stc
int3
mov
jmp
ss
enter
cli
in
in
fdivrs
incb
movl
ljmp
clc
enter
adc
sar
xchg
sti
sbb
in
fxch
addb
out
jecxz
lret
cmc
xlat
out
cmc
int3
cmp
out
div
cld
jmp
call
iret
out
lret
mov
out
shll
aaa
cmp
fstp
cli
aad
fidivrl
out
add
loop
cmc
in
out
lret
repz
out
in
std
fdivrl
cli
lret
sar
fcomp
std
rcr
out
cmc
fndisi(8087
int
repnz
jmp
add
loop
aaa
sti
das
sti
stc
clc
icebp
sarl
clc
ret
call
out
int
filds
shr
jmp
ss
hlt
aad
std
shl
aas
addb
in
fimull
shl
fucomi
fcom
cmp
fcom
fcmovnb
cmc
fmulp
and
mov
fdivrp
fsubrp
xor
iret
jmp
shl
in
mov
xor
adcl
add
movl
cmp
movl
jb
xor
mov
mov
xorl
xor
or
xor
add
jmp
rcl
rcl
dec
mov
notb
mov
pop
leave
xchg
add
add
sar
lock
xchg
mov
fisttpl
iret
iret
jecxz
ret
repz
jmp
cmpb
xor
jmp
lret
and
ss
jmp
loopne
cmp
cmp
jmp
out
ret
les
xchg
leave
sub
sti
fcmovb
stc
cmp
clc
sti
ds
in
aam
cld
stc
fcomip
and
xor
ret
xor
out
cmp
ret
faddp
jmp
out
fdivr
mov
loope
loop
leave
cmp
xor
not
shl
ds
ret
loope
orl
iret
jmp
cmp
fsubr
adc
fadds
enter
clc
mov
mov
out
les
cli
ljmp
cld
lock
hlt
fdivr
in
mov
fcmovne
std
xchg
int3
loop
imul
aaa
sti
cli
in
test
fsub
loopne
fsub
hlt
xchg
cmp
in
mov
out
into
mov
icebp
repnz
stc
fsubr
repz
fiadds
aas
leave
test
jmp
fildl
cmc
cli
out
stc
repz
out
loopne
cmp
loop
faddl
mov
into
loopne
in
ss
fdivrp
fucomp
cmp
loop
repnz
icebp
div
in
clc
nop
lock
lea
xor
xor
sti
cmp
rcl
incb
cli
fdivr
xchg
clc
xchg
xchg
std
iret
jmp
fsubr
cld
enter
cmc
in
cmc
aas
jecxz
out
cmp
nop
loopne
icebp
div
xor
div
aam
ds
faddp
fcmovbe
loop
aam
fadds
test
shl
ss
ret
fmul
clc
ds
iret
addl
lds
nop
aaa
fyl2xp1
fcos
into
fcmove
ret
ds
cmc
hlt
cmpl
lret
loop
out
int3
mov
in
hlt
shr
fstpt
cmp
ljmp
test
add
cld
fmul
mov
jecxz
cmc
test
cmp
std
cmp
sar
xchg
in
test
rorb
shr
lock
aad
div
cmp
fcmovnbe
cld
xacquire
clc
decb
xor
in
int
leave
in
lret
xor
faddl
std
sbb
faddl
ss
neg
enter
fcmovnbe
cmp
in
cmp
sbb
in
lock
repnz
shl
adc
clc
shl
sti
loopne
xlat
std
loop
addb
shlb
xor
fldcw
icebp
into
out
jmp
addb
in
jmp
in
in
sub
xlat
aam
out
cli
cli
cld
jmp
rolb
fiaddl
std
in
shl
into
sub
cli
out
repnz
in
cmp
rcr
rcr
out
sbb
push
lret
dec
out
aaa
xor
cmp
ljmp
clc
repz
mov
in
jmp
divl
xor
sti
rolb
fdivrp
in
stc
in
std
out
xchg
mov
xchg
clc
xor
jmp
pushl
lret
loop
cmp
cld
fadd
ljmp
in
addb
out
out
jmp
stc
inc
aam
lds
sti
cld
fisttps
cmc
hlt
iret
in
sub
icebp
add
loopne
cli
in
sti
out
movb
xor
cmc
repnz
loop
in
sar
in
xchg
mov
int
loop
lock
in
fsubr
jecxz
xor
enter
loopne
fcmovbe
div
cmp
test
rol
test
xlat
in
test
mov
ror
sub
rol
repz
enter
dec
jecxz
rol
repnz
mov
call
lret
aam
ret
call
sarb
into
loope
cmp
rcl
lret
iret
fimuls
call
out
clc
xor
aaa
sub
fiaddl
adcl
xchg
mov
stc
stc
cmp
call
rcl
loop
icebp
faddp
cli
aam
mov
loop
out
mov
in
lret
cmp
sarl
aaa
shr
cmp
addl
orb
mov
add
add
add
je
cmpl
jne
pushl
push
pushl
call
mov
dec
mov
jmp
mov
adc
mov
jmp
ror
rcr
ror
js
cmp
nop
les
jbe
add
add
nop
mov
xchg
fcomp
stc
cmp
ljmp
test
std
shl
test
mov
stc
cli
lret
ljmp
xor
enter
cmc
idiv
fldl
loopne
jmp
mov
cmc
cli
lret
jmp
ret
cmc
xchg
out
adc
mov
orl
out
in
out
ljmp
cmp
orb
out
out
iret
cmp
call
clc
out
shl
rol
ret
and
test
mov
leave
leave
loope
fstpt
xor
ds
adc
fsub
in
testb
in
sub
iret
rcl
fstpt
iret
fstp
cli
aad
sar
loopne
in
cmp
in
iret
lret
shl
icebp
filds
xor
int3
clc
cmp
hlt
hlt
adc
xor
div
sti
cmp
xchg
ret
iret
cmc
sub
into
lret
ds
xor
int
and
aas
ror
mov
mov
lea
cmc
out
lret
clc
in
cmp
int
rcr
cmp
test
rcr
out
in
in
aad
clc
repnz
out
aaa
xor
fidivrl
rcr
ret
mov
rolb
fcmovu
hlt
cmp
sarb
iret
sub
add
clc
stc
xlat
fsubr
xchg
ror
hlt
shl
fnstenv
rcl
out
shl
roll
test
loop
rcll
jmp
out
rcl
dec
jmp
xor
incb
cld
in
nop
into
ficoml
shr
jmp
cmp
rolb
idiv
div
test
into
iret
lea
fsub
repnz
aad
jmp
cli
in
aad
fcmovnb
mov
xchg
xchg
jmp
out
xor
cmp
cmc
cmp
idivl
aad
jmp
leave
inc
mov
ret
icebp
iret
xchg
loope
loop
jmp
ds
loop
fdiv
hlt
ljmp
ljmp
xor
in
ss
ljmp
aam
mov
enter
repz
loope
loope
sub
leave
cmp
cld
not
out
roll
xchg
cmc
enter
loope
repz
xchg
cmc
xor
shll
hlt
icebp
test
jmp
int
in
xchg
out
int3
clc
xor
clc
ds
fcmovnbe
std
xlat
and
enter
lea
loopne
xor
ret
out
int3
call
sti
not
loope
mov
call
lret
in
lock
mov
shl
leave
fcom
cmc
xlat
flds
aad
in
fimull
rorl
loop
vpaddb
fmul
xor
in
rol
idivl
clc
mov
out
in
test
rcl
call
fdiv
hlt
into
aad
test
rcr
ret
rorb
iret
fcmovnu
xchg
xor
stc
int
ss
icebp
fxtract
cmp
aam
out
aad
mov
xchg
jmp
shll
fucomp
icebp
fucomip
aad
stc
cmp
cld
inc
loop
out
test
int3
hlt
loope
in
ss
iret
cmp
leave
sti
lock
loopne
fiadds
in
cli
cld
std
jmp
cmp
xor
faddp
ss
iret
shl
fidivrs
repnz
orb
iret
cmp
lret
cmc
cmp
repnz
cli
rol
loopne
enter
xchg
lret
jecxz
sar
xor
enter
into
fadd
fiadds
loope
mov
jmp
jecxz
mov
fdiv
out
shl
rcr
shl
and
enter
ret
rcl
in
icebp
clc
lock
xor
out
hlt
fsubr
aam
ret
lock
sar
test
loop
jecxz
in
xchg
mul
cmp
lret
in
ljmp
out
fcmovu
out
in
in
out
sar
xchg
repz
jmp
int
ds
sti
out
test
out
clc
jmp
in
lea
fcmovnb
jmp
clc
cmp
shr
cli
loopne
lock
cmp
fisttps
out
fsubr
in
das
xor
aam
imul
and
mov
sub
mov
addl
sub
movl
cmp
movl
ja
andl
mov
inc
mov
cmpl
jne
pushl
push
call
cmpl
jb
xor
or
sbb
mov
movl
xor
sbbl
add
movl
jmp
or
mov
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
call
cmpl
jne
mov
inc
mov
jmp
jmp
aad
iret
lret
fstp
push
shrl
mov
add
stc
sarl
shl
ds
repnz
out
fimuls
int
repnz
xor
repnz
cmp
and
test
fsubrp
and
call
xor
cmp
out
cmp
ror
in
out
loop
shl
mul
in
in
in
std
jmp
int3
cmp
cld
cmp
cmp
lret
idiv
aas
xchg
hlt
fisttpll
mov
filds
xor
int
ss
cmc
out
repz
mov
loopne
aas
orb
jmp
aam
lock
icebp
leave
sti
sub
out
out
cmp
stc
out
cli
call
into
ljmp
int3
xlat
xlat
hlt
rcr
hlt
icebp
cmpl
sub
loop
jmp
xchg
repz
xor
div
cmp
lock
fnstcw
clc
mov
fsubr
in
in
out
lock
ljmp
loopne
hlt
cmc
cmc
jmp
out
xor
enter
lock
sti
lret
int3
cmc
aad
sar
out
lret
in
frstpm(287
mov
into
out
nop
mul
xlat
frndint
cmp
div
rcl
int
fadd
jecxz
rcl
out
jmp
mov
repz
std
xchg
mul
loop
out
aad
into
loopne
cmp
cmc
test
sub
jecxz
std
lret
roll
ror
ljmp
fcmovbe
clc
call
lea
addb
ret
fucomp
stc
leave
lock
sar
mul
out
jecxz
lds
xor
cmc
cmp
fnstsw
lret
xor
out
cld
aad
in
xchg
loop
jecxz
loope
sub
cli
cmp
enter
int
cmc
cmc
shl
fsub
clc
fdivr
in
in
incl
ss
icebp
fsubrp
fucomi
repz
sar
hlt
jmp
xchg
repz
shl
call
repz
shl
jmp
idivl
enter
ljmp
ret
loope
shl
stc
loope
hlt
stc
cmc
loope
loop
rcl
mov
vcvtpd2dqx
nop
leave
loope
stc
loope,pt
shl
fcmovnu
clc
call
sti
icebp
call
and
rcl
xor
fcmovu
xor
cli
and
fucom
stc
fsub
or
out
lock
in
xchg
cmc
aad
iret
enter
fucomi
xlat
hlt
jecxz
test
rcl
jecxz
fcomi
out
int3
loopne
fdivrp
xchg
xor
cmp
call
ret
xchg
call
icebp
out
cmp
into
in
sar
out
cmp
add
out
xor
int3
mov
in
in
idiv
lret
int
in
enter
hlt
repz
into
lds
test
out
out
rcl
not
int3
clc
cli
int3
cmp
roll
fsubrp
sbb
int
xchg
nop
ljmp
into
ds
icebp
cmp
shl
loopne
rcr
xchg
ror
cmc
in
mov
xor
lret
shr
aam
cmp
repnz
fcmovne
in
fcomp
cld
mov
xchg
mov
leave
clc
fidivl
fsub
aad
aam
call
out
loopne
xlat
mov
lret
loop
mov
jmp
ss
out
cld
aad
incb
testl
mov
in
loop
shr
fcmovne
iret
out
leave
cmpb
ret
enter
lret
lret
sti
sub
lret
loop
cmp
jmp
cmp
cld
rolb
fsub
les
hlt
xchg
icebp
shlb
lret
xor
int
xlat
fildl
sbb
fadds
cmc
aas
ljmp
fdivrl
aad
into
aas
in
testb
in
loopne
rolb
call
std
repz
cmp
fidivrs
ds
out
int3
clc
in
lret
in
mov
cmp
lret
xor
int
cli
iret
repz
test
loop
enter
mov
out
fucom
lret
out
repnz
ror
cmp
out
jmp
std
fcomip
mov
in
jmp
orl
xlat
fdiv
fsubp
out
into
shl
lock
andl
mov
inc
mov
cmpl
jne
push
push
push
call
cmpl
jb
xor
xor
add
orl
add
imul
mov
sbb
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
call
jmp
mov
sub
jmp
rcl
lret
fcmovnbe
lods
pop
mov
dec
shlb
jle
ffreep
jecxz
test
jmp
lret
sub
clc
repnz
int3
cmp
aad
out
addl
icebp
into
fimuls
cmp
fcmove
jmp
ljmp
jecxz
test
leave
fucomip
loope
enter
lret
cmp
fdiv
stc
icebp
repz
cmc
aam
cli
cld
and
aad
into
test
idiv
hlt
out
out
hlt
std
xor
aad
addl
mov
xchg
int3
mov
fsubr
enter
loope
inc
addl
in
call
adc
xchg
enter
test
xor
ds
shll
sti
sti
sar
imul
fcmovnu
ret
out
repnz
into
sarl
iret
out
xor
in
sti
stc
ffreep
jmp
out
filds
lret
fcmovne
fsubr
xor
out
hlt
cmp
loopne
fucomi
std
call
and
aaa
call
call
ljmp
ret
loopne
xchg
out
mov
jmp
aaa
rcr
jmp
shl
loopne
repnz
test
inc
cmp
xchg
in
out
lret
stc
xbegin
cmp
std
ds
out
sti
in
mov
fimull
aad
repnz
sti
in
in
aaa
fsubr
in
rol
and
fldl
cld
repnz
clc
into
lock
divb
rol
lret
icebp
fdivr
incb
sti
lret
incl
fcmove
cmp
das
sti
iret
jmp
sarl
imul
add
in
xchg
decb
clc
leave
shrl
sti
loope
cmc
adc
mov
mov
fsubr
xchg
xchg
mov
ror
iret
in
vpsubw
ror
fdiv
cld
clc
mov
testb
adcb
xor
icebp
cli
enter
neg
out
vpsrld
mov
std
int
mov
in
in
int3
test
in
loopne
aaa
mov
in
div
sarl
xchg
xchg
mov
xchg
fsub
xchg
aaa
enter
lock
sti
ljmp
sub
mov
in
cld
fstp
enter
repz
cli
xor
cmp
lock
shl
aad
movl
rolb
sarb
lret
ss
rcr
repnz
cli
fdiv
and
addb
iret
enter
clc
shl
addl
fldl
dec
fldl
cmc
sarb
shl
loopne
aas
cmp
incb
ror
lret
iret
xchg
leave
icebp
fisttps
int3
sub
int3
cli
cmc
fistpll
faddl
out
incl
fcmovu
out
cmc
decb
repnz
iret
idiv
repz
icebp
hlt
test
aam
sar
cmp
into
mov
xchg
iret
jmp
xor
cmp
fcomi
xor
fsubp
not
test
lret
loop
int
call
div
cs
cmp
sarl
fdiv
hlt
les
call
nop
icebp
out
xchg
mov
xor
out
cmp
fsub
cld
sti
cmp
lret
neg
in
test
xchg
xchg
fcomip
in
cmp
out
cmp
lock
stc
aas
fsubp
ljmp
in
fcmovne
incl
ljmp
aad
lret
sbb
ds
jecxz
xor
test
int
int
lret
clc
xlat
lock
std
sarb
ss
rol
loop
mov
movb
aad
sti
call
jmp
test
out
flds
loopne
mov
repz
orl
int
test
cmpl
add
fadd
ftst
fimuls
or
hlt
in
ljmp
xor
ret
cmp
fimuls
fmul
shl
xchg
leave
stc
int3
xor
fidivrl
shl
loopne
xor
fdiv
mov
mov
shl
test
enter
aaa
into
aad
repnz
cmp
test
jecxz
loop
mov
cmc
int3
sar
loope
sti
icebp
rol
ret
fadd
cli
xchg
adcl
add
aam
rcr
fstp
fnstsw
fmull
dec
insb
hlt
lret
add
add
in
ror
sub
rcl
lock
test
std
loop
shr
xchg
xchg
mov
lock
ss
xor
in
addb
jmp
mov
rclb
out
repz
stc
repnz
cld
hlt
in
fsub
stc
ret
out
leave
int3
iret
jecxz
cld
hlt
xchg
ljmp
rcr
cmp
aad
out
hlt
cmc
clc
xchg
clc
loopne
xchg
repnz
in
leave
aam
aas
test
cmc
loope
clc
fsubrp
jmp
mov
xlat
sub
repnz
repz
clc
cmc
xor
rcr
aad
enter
adcl
aam
repnz
cmp
out
xor
rcr
orb
mov
imul
leave
xlat
ror
stc
cmp
sbb
in
hlt
ljmp
nop
mov
int
aad
in
int3
out
lret
aaa
enter
sar
int
rcl
neg
test
int3
popl
shl
iret
int3
fmul
hlt
aas
les
ret
ret
mov
addb
neg
cli
enter
fst
div
idiv
cmp
std
fprem
mov
mov
das
icebp
repnz
jmp
fnstsw
int
loopne
loopne
cld
rol
enter
loopne
out
jmp
call
iret
repnz
out
aas
sbb
xchg
mov
mul
cld
test
sti
mov
in
lret
xor
div
aad
jecxz
out
testb
leave
nop
mov
ljmp
std
out
fld
les
in
enter
in
icebp
xchg
rol
int3
out
repnz
cld
not
les
and
std
lock
fsub
xlat
stc
icebp
fcomi
clc
cmp
out
sti
ret
test
aad
int
lret
into
mov
nop
repnz
rol
aam
ss
fcomip
aad
int3
cmp
shr
add
loop
xchg
fildl
call
xor
fsubr
cld
rcl
std
out
fiaddl
jmp
in
cs
ss
cld
std
icebp
lret
sar
std
rcr
cli
loope
test
call
not
aaa
aaa
in
icebp
sti
cmp
fld
cmpb
fchs
hlt
ffree
lret
fmul
ficoml
enter
xor
into
loope
lret
ret
cmp
rcr
fiaddl
test
test
jmp
fcmove
sbb
shl
icebp
roll
in
in
out
test
xchg
nop
mov
sti
repnz
ror
lock
fcmovbe
hlt
xchg
shl
out
movl
cs
rcr
ljmp
out
fcmovnu
iret
xchg
shl
lret
fstp
fmulp
out
call
hlt
int
leave
cmc
in
in
ds
in
rolb
ds
lret
roll
rcl
shr
cmp
xor
in
sar
mov
sti
out
mov
fucomi
int
xchg
subl
in
int3
sub
neg
shl
cli
aad
fadd
mov
fiadds
repnz
hlt
out
int
jmp
into
fadds
in
aam
aam
cmc
out
loope
fsubrp
xchg
xchg
test
int3
ret
repnz
mov
cmp
cmp
aad
addl
lock
xchg
subb
aam
enter
aas
not
lret
sub
leave
les
rcl
out
test
repnz
in
cmp
fdivrp
lock
stc
jmp
vpmulhw
aad
xchg
lock
icebp
hlt
out
in
aad
into
shr
jmp
rcr
hlt
iret
cmc
jmp
loopne
mov
test
out
lret
in
out
in
fdivr
iret
into
iret
xor
call
rcr
cli
faddp
xlat
loopne
fldl
mov
ljmp
stc
xor
aad
fcomp
stc
sar
fsub
std
shl
cld
in
int
fdivr
mov
xchg
in
xchg
or
in
lret
jmp
aam
shl
ljmp
icebp
fldl2e
cmc
sti
call
xchg
sub
aad
ret
sti
fnstcw
stc
cmp
loope
in
repz
mov
loope
jmp
shrl
ret
repz
cld
fdivr
ja
mov
jmp
jmp
ror
aam
aad
aam
sbb
stos
stos
add
add
jmp
int
aad
icebp
loopne
ret
movl
loopne
ret
aam
cmp
cld
adc
xlat
rol
flds
enter
lock
fcomip
aam
xor
xor
std
neg
ror
and
clc
lds
int
icebp
sti
xchg
fists
sub
jmp
hlt
ret
loopne
cld
addl
mov
cmc
xchg
aas
in
into
ror
neg
xor
repz
test
loope
fimull
sti
test
aam
shlb
hlt
lock
ss
ds
aaa
lret
repz
out
aad
hlt
xchg
mov
xchg
xchg
xor
out
int
out
cmp
loopne
shl
inc
add
lret
fxch
fisttps
loope
lret
xor
out
into
std
out
out
ds
test
aam
shr
mov
in
out
xchg
and
out
lock
aad
div
aam
xlat
ds
ds
jmp
out
out
xchg
mov
fucomip
loopne
jmp
shl
fcom
jecxz
lock
test
mov
call
xchg
addl
aaa
stc
hlt
sti
iret
icebp
aad
out
aam
cmp
into
mov
out
test
xchg
out
out
or
aam
cli
into
aas
aad
xlat
test
out
cld
cli
repnz
jmp
cmp
loopne
int3
cld
shl
repz
clc
out
int3
xchg
nop
jmp
aam
ror
icebp
cmp
rcl
ret
fstpt
aad
aad
xchg
stc
int3
nop
iret
in
out
cmc
sti
sarl
lret
leave
cmp
out
cmp
ljmp
mov
out
shr
sub
into
repz
std
sti
cld
les
cmc
hlt
loope
nop
mov
divl
aad
xorb
sub
cld
cli
fcomi
fucompp
out
fildl
cmc
orl
std
loope
loop
addl
cld
fistl
out
ret
ljmp
cmp
fadds
test
or
jmp
in
rclb
cmp
fdivp
cld
loope
cmp
cmc
fnstsw
cld
in
lret
xor
rcr
shl
jmp
int
cmc
repz
rcr
aad
enter
incb
nop
nop
jmp
xchg
int3
in
xor
leave
out
xor
std
ljmp
xlat
in
leave
rcr
stc
loop
fmul
mov
out
xor
fdivr
std
fmulp
sar
repz
hlt
cmc
flds
loope
in
out
fmul
jmp
int
xlat
xor
std
mov
lret
std
out
jecxz
xchg
iret
mov
out
fdiv
rolb
aad
rol
xchg
xchg
in
roll
sarb
fucomi
out
aam
cmp
int
out
neg
leave
leave
out
test
sbb
repnz
out
jmp
in
in
aaa
lock
out
sbb
fcmovnb
cli
testb
nop
leave
int
hlt
shl
lret
repz
jmp
loope
std
hlt
mov
mov
loop
in
xchg
cld
mov
roll
idivl
shlb
ss
roll
xchg
clc
test
cli
in
out
aam
shl
cmp
leave
ds
repnz
in
jecxz
call
out
rcl
xchg
rorb
hlt
iret
fmul
int
int3
out
cmp
shl
mov
fcomp
fdivrp
in
out
ljmp
rol
aam
cmp
xor
test
in
decb
cmc
loop
out
repz
aaa
div
cmp
ds
fdivr
in
in
jmp
out
xchg
das
ror
fnstcw
cmp
int
iret
sar
fadd
aam
in
enter
in
icebp
faddl
lock
in
idiv
cmp
sarl
in
clc
cli
decb
out
jecxz
iret
loop
mov
lret
jmp
fcom
ds
rol
enter
rcl
iret
test
repnz
sarl
cmp
fsubrp
test
nop
loop
lock
out
enter
xor
rolb
iret
out
jmp
rorl
xor
xor
add
add
imul
jmp
rol
aam
aad
aad
xchg
mov
es
outsb
xlat
scas
add
add
in
iret
lock
mov
iret
leave
enter
cmp
in
sti
xchg
addl
clc
movb
in
call
jmp
sti
loope
ds
in
std
ljmp
in
jmp
xor
xor
ret
aam
lret
cmp
in
rol
hlt
ret
call
mov
int
aad
jmp
lock
cmc
ds
cmp
not
test
clc
leave
aam
loope
mov
loop
repz
xor
int3
jmp
idivl
fxch
xor
decb
mov
mov
lret
out
lret
cli
not
lret
repz
ds
cmc
xchg
loope
jmp
addl
out
hlt
fnop
cmp
imul
xlat
hlt
cmp
cmp
test
hlt
adc
loope
int3
call
out
and
iret
ret
repz
repnz
dec
cmp
loope
ret
orb
call
sub
lret
jecxz
in
and
xchg
fcomp
jmp
xchg
xchg
std
shlb
in
cmp
out
out
cmp
repz
shl
shl
lret
out
adcb
out
loope
lock
cmc
test
fiadds
sti
xchg
stc
into
mov
out
nop
mov
cmc
cmp
ss
div
repnz
fdivp
test
aad
fsub
loopne
aam
xor
das
idiv
cli
cmp
cmc
cmp
repnz
loop
xor
loop
xor
int
cmp
xor
icebp
inc
std
out
xchg
test
fadd
repz
rcr
jmp
imul
int3
fadds
stc
stc
jmp
fcmovnu
loopne
out
das
sub
in
xor
out
in
faddl
test
xlat
hlt
int
fildl
cmc
push
sti
ss
in
shl
xlat
rcl
shl
aad
fmul
fisttpll
faddl
out
in
cli
aaa
std
lret
lock
cmp
idiv
stc
stc
decb
int
int
fcomi
repnz
loopne
cli
in
sar
cmp
test
adc
fcmovb
leave
in
loop
shl
mov
aam
cs
clc
cmp
cmp
ret
rol
ret
lret
repz
xchg
aam
out
in
out
in
cmp
int
out
ret
stc
loop
ljmp
std
in
ljmp
into
ror
sar
clc
sar
loope
cld
aam
leave
fmuls
ffree
into
icebp
into
rol
stc
xor
aam
divb
fndisi(8087
lret
shl
mov
or
mov
mov
repnz
mov
mul
fdivs
into
lock
clc
loop
xlat
call
fstp
into
in
xchg
fcoml
lret
lret
call
repnz
int
cmp
std
not
or
int
ljmp
jecxz
repz
leave
cmp
aaa
fidivrs
aad
aaa
out
sarl
repz
ljmp
out
stc
rol
int3
ror
repnz
ffreep
cmp
aas
ret
in
call
stc
push
aam
xorb
ss
cmp
hlt
sar
icebp
ljmp
fstp
mov
lock
test
in
ljmp
neg
out
int
rcr
loop
loopne
sar
fmul
mov
fdiv
std
nop
xchg
ror
int
call
rcr
lock
out
fldl
ljmp
loopne
shl
shr
lret
std
shr
cld
cmp
repz
ret
mov
int
xor
mov
sub
aad
enter
leave
cmp
lock
lock
out
jmp
shl
jmp
int3
sub
shl
aad
out
divb
repz
lock
sarl
div
loopne
add
jmp
adc
loope
lret
loopne
orl
in
aad
cmp
fcomi
sarl
hlt
aad
out
xchg
mov
xchg
das
icebp
jmp
xor
cld
testl
mov
call
jmp
mul
clc
ss
std
loope,pt
imul
shl
fcomi
inc
mov
icebp
int
test
ror
repz
aad
lock
rcr
aad
loope
cmp
fisttpll
xchg
out
rcl
out
stc
cmc
mov
mov
jmp
rcl
ret
fucomp
insb
fstps
xchg
xor
push
int3
jg
jle
shr
xlat
aas
loope
loop
lock
jecxz
fucom
jecxz
xchg
mov
int3
shl
sarl
stc
repnz
xchg
out
iret
loope
aam
lock
rcr
jmp
sarl
stc
std
mov
mov
into
xchg
xchg
in
aas
xor
rol
aam
ljmp
cld
ror
cmc
fxch
and
jmp
in
sub
lret
out
shr
repz
icebp
cmp
icebp
xor
fdiv
jecxz
in
rcr
test
std
test
lock
in
jmp
std
in
out
loop
shl
jecxz
jecxz
int
mov
cli
int
in
nop
jmp
test
aam
fnstsw
icebp
aam
cld
roll
loope
ret
jmp
xchg
ss
leave
xor
in
cmp
ret
in
mov
rclb
fincstp
aad
rol
idiv
clc
rolb
div
in
lret
leave
fcmovnb
rolb
jecxz
lock
std
aam
into
cmc
ret
loope
repz
sti
out
loop
cld
fmul
out
dec
mov
out
xor
jmp
cmp
into
test
adc
mov
fistpll
fimull
xchg
add
add
add
add
cld
xor
xor
add
add
imul
mov
mov
sub
cmp
ja
mov
jmp
mov
mov
xor
xor
add
add
imul
mov
mov
sub
cmp
ja
mov
jmp
mov
mov
xor
xor
add
add
imul
mov
mov
sub
cmp
mov
jbe
mov
mov
xor
xor
add
add
imul
mov
mov
mov
mov
add
movl
mov
movl
movl
mov
xor
add
jmp
mov
xor
add
mov
mov
mov
mov
xor
add
mov
mov
mov
mov
mov
xor
add
mov
mov
mov
mov
xor
add
mov
mov
mov
mov
xor
xor
add
add
imul
add
mov
mov
mov
xor
add
imul
mov
xor
sub
mov
mov
xor
add
imul
mov
xor
sub
lea
cmp
jbe
mov
mov
xor
add
imul
mov
xor
add
mov
lea
mov
mov
xor
mov
sub
add
mov
mov
xor
add
imul
cmp
jbe
pop
pop
leave
ret
push
mov
sub
sbbl
push
push
adcl
push
xor
addl
lea
addl
xor
or
sbbl
xor
andl
add
push
lea
xorl
push
movl
push
xorl
lea
inc
xorl
xor
addl
xor
adcl
call
movl
movl
mov
mov
movl
jmp
movl
xor
sub
xor
xor
xor
xor
mov
add
xor
movl
incl
mov
mov
cmp
movl
jb
andl
xor
add
inc
mov
cmpl
jne
pushl
call
cmpl
jb
add
movl
adc
movl
mov
mov
sub
xor
lea
mov
lea
xorl
mov
mov
mov
or
mov
mov
movl
cmpl
je
cmpl
jne
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
xorl
mov
movl
cmpl
je
cmpl
jne
push
pushl
push
pushl
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
xor
mov
sbb
add
not
mov
mov
mov
mov
cmp
mov
mov
movl
je
movl
cmpl
je
cmpl
jne
push
push
push
call
xor
or
dec
mov
jmp
mov
xor
xorl
add
adcl
imul
mov
jmp
sbb
xor
xorl
add
xor
mov
movzbl
or
mov
mov
andl
mov
inc
mov
cmpl
jne
push
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
xor
or
add
sbbl
mov
mov
movl
cmpl
je
cmpl
jne
push
push
push
call
mov
dec
mov
jmp
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
push
pushl
call
cmpl
jne
mov
inc
mov
jmp
mov
adcl
xor
addl
add
movl
cmp
movl
jne
adcl
push
pushl
addl
pushl
call
mov
mov
sbbl
mov
incl
mov
mov
adc
mov
mov
mov
mov
adc
mov
mov
dec
movl
adc
mov
neg
movl
mov
orl
xor
add
jmp
mov
orl
xor
andl
mov
inc
mov
cmpl
jne
push
push
pushl
call
cmpl
jb
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
push
push
call
cmpl
jne
xor
or
inc
mov
jmp
lea
sub
mov
mov
and
xor
movzbl
and
lea
or
mov
mov
mov
movl
cmpl
je
cmpl
jne
call
mov
dec
mov
jmp
and
movl
or
mov
andl
mov
inc
mov
cmpl
jne
pushl
call
cmpl
jb
movl
cmpl
je
cmpl
jne
push
push
pushl
call
xor
or
dec
mov
jmp
adcl
movl
mov
mov
xor
mov
xor
add
movl
cmp
je
mov
andl
jmp
xor
xor
inc
mov
cmpl
jae
cmpl
jne
pushl
push
pushl
call
cmpl
jne
mov
inc
mov
jmp
inc
xor
add
sub
mov
movl
cmpl
je
cmpl
jne
pushl
call
mov
dec
mov
jmp
mov
andl
mov
inc
mov
cmpl
jne
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
orl
xor
or
mov
sub
xorl
add
mov
mov
cmp
ja
movl
cmpl
je
cmpl
jne
push
push
call
xor
or
dec
mov
jmp
mov
mov
xor
add
imul
xor
add
mov
mov
mov
mov
mov
mov
xor
lea
mov
xor
mov
sub
add
mov
cmp
jbe
mov
mov
mov
xor
lea
mov
mov
xor
xor
add
mov
xor
lea
mov
cmp
jbe
mov
mov
mov
mov
mov
mov
push
sub
push
xor
push
mov
call
pushl
pushl
pushl
call
sub
xor
mov
mov
mov
xor
add
xor
div
mov
cmp
je
mov
jmp
mov
mov
mov
mov
movl
movl
mov
xor
add
mov
movl
movl
movl
movl
mov
xor
add
mov
movl
movb
mov
xor
add
mov
mov
xor
add
mov
mov
xor
add
mov
mov
xor
add
mov
lea
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
mov
mov
mov
xor
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
je
lea
push
mov
xor
add
push
mov
add
push
mov
mov
pushl
call
mov
cmpl
je
lea
mov
mov
xor
add
mov
mov
xor
add
mov
mov
mov
lea
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
test
mov
jne
mov
xor
add
test
je
lea
push
mov
xor
add
push
mov
add
push
mov
mov
pushl
call
mov
xor
mov
sub
sub
mov
add
mov
mov
mov
mov
xor
sub
mov
lea
incb
inc
push
pop
dec
xchg
decb
pushl
mov
mov
pushl
lea
pushl
lea
pushl
lea
pushl
lea
pushl
xchg
inc
push
pop
call
lea
mov
mov
add
mov
lea
movl
mov
movl
mov
xor
movl
mov
add
cmp
je
mov
xor
add
jmp
mov
mov
xor
add
imul
xor
add
mov
mov
mov
mov
mov
mov
xor
lea
mov
xor
mov
sub
add
mov
cmp
jbe
mov
mov
pushl
lea
push
call
mov
mov
pop
pop
pop
leave
ret
push
mov
push
mov
push
mov
mov
movl
push
mov
mov
mov
push
mov
mov
mov
cmp
je
adc
mov
mov
andl
xor
sbbl
add
movl
cmp
je
mov
xor
inc
add
movl
cmpl
je
cmpl
jne
push
push
pushl
call
mov
dec
mov
jmp
sbb
push
adc
pushl
andl
jmp
xor
or
inc
mov
cmpl
jae
cmpl
jne
push
pushl
call
jmp
pushl
mov
call
mov
mov
mov
mov
jmp
mov
mov
xor
add
cmp
jne
mov
xor
add
mov
mov
xor
add
mov
pushl
pushl
call
mov
xor
pop
add
pop
leave
ret
push
mov
push
movl
mov
subl
mov
add
xor
cmp
jne
mov
neg
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
pushl
call
jmp
add
andl
mov
inc
mov
cmpl
jne
push
call
cmpl
jb
mov
mov
mov
xor
push
mov
mov
add
cmp
pop
je
mov
jmp
mov
xor
add
jmp
mov
xor
add
leave
ret
push
mov
push
xorl
mov
mov
adcl
xor
add
movl
mov
movl
movl
not
movl
movl
mov
movl
push
movl
mov
cmp
je
mov
adcl
xor
incl
xor
lea
sbbl
xor
movl
cmp
movl
jne
jmp
add
sub
mov
xor
add
mov
xor
mov
adcl
xor
movzwl
add
xor
mov
sub
mov
adc
mov
mov
add
mov
mov
mov
pop
test
je
pushl
pushl
mov
pushl
mov
call
jmp
mov
leave
ret
push
mov
sub
movl
neg
movl
mov
push
or
mov
mov
sub
xor
mov
xorl
add
orl
mov
and
mov
subl
push
push
adcl
test
movl
je
mov
movzbl
or
mov
mov
andl
mov
mov
sub
mov
imul
mov
subl
add
dec
mov
not
mov
xchg
inc
sub
subl
xor
mov
movzwl
and
mov
negl
mov
mov
sbb
mov
subl
xor
sub
xor
addl
add
mov
movl
mov
je
and
mov
xorl
xor
andl
add
movl
cmp
movl
jne
pushl
adcl
call
sbb
mov
mov
mov
sub
and
mov
mov
mov
sub
mov
mov
andl
xor
orl
add
cmp
je
pushl
incl
pushl
orl
call
xorl
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
jmp
mov
dec
mov
incl
xor
orl
add
movl
cmp
movl
je
sub
mov
xorl
mov
mov
mov
sbb
mov
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
call
jmp
mov
andl
add
mov
mov
subl
mov
add
movzwl
or
mov
mov
mov
add
mov
movzwl
or
mov
mov
addl
add
xor
mov
sbb
mov
mov
addl
add
lea
andl
mov
push
orl
pushl
pushl
call
mov
subl
mov
sbbl
xor
movl
add
movl
cmp
jne
mov
inc
cmp
movl
jb
movl
jmp
mov
xor
xorl
add
movl
jmp
subl
mov
andl
mov
inc
mov
cmpl
jne
push
pushl
push
pushl
push
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
movzwl
mov
mov
mov
mov
mov
xor
add
cmp
jne
mov
xor
jmp
mov
add
mov
mov
test
je
mov
push
pop
push
dec
pop
xchg
sub
xchg
dec
mov
imul
sub
mov
mov
mov
xor
mov
add
mov
mov
xor
add
mov
imul
mov
xor
mov
lea
cmp
je
mov
mov
mov
mov
mov
xor
xor
mov
add
div
mov
xor
lea
mov
mov
mov
mov
mov
xor
lea
mov
mov
mov
xor
add
imul
mov
xor
mov
lea
cmp
jne
mov
jmp
mov
mov
xor
add
mov
xor
lea
add
call
xor
inc
cmp
je
xchg
push
pop
push
pop
inc
xchg
sub
xchg
dec
mov
imul
add
xchg
push
xor
mov
dec
inc
add
dec
xor
add
pop
mov
pop
pop
pop
leave
ret
