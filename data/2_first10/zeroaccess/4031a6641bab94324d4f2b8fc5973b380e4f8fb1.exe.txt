push
mov
sub
push
add
push
adc
push
adc
xor
sbb
mov
adc
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
call
jmp
xor
push
mov
pop
push
call
push
andl
push
push
push
push
xorl
push
sbbl
call
push
addl
push
push
push
sbbl
push
push
push
incl
call
addl
dec
movl
jne
push
sbbl
push
push
andl
call
test
je
mov
adc
imul
mov
mov
movl
mov
movl
cmp
jne
addl
movl
pushl
subl
pushl
andl
pushl
xorl
call
mov
mov
or
mov
xor
mov
mov
sub
movl
lea
xor
mov
lea
mov
addl
mov
mov
adc
mov
mov
add
mov
mov
xor
mov
xor
mov
adcl
add
movl
mov
mov
movl
cmp
movl
jne
mov
mov
mov
xor
add
mov
xor
mov
movzbl
and
mov
mov
movl
cmpl
je
cmpl
jne
push
push
push
call
xor
xor
dec
mov
jmp
mov
or
mov
xor
add
or
mov
mov
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
push
pushl
call
jmp
mov
xor
or
adc
mov
xor
xor
mov
sbb
mov
xor
mov
mov
mov
sub
mov
orl
mov
movl
add
mov
xor
add
mov
add
mov
andl
mov
adcl
xor
xor
sbbl
add
movzbl
and
mov
xor
lea
cmp
ja
or
mov
mov
xor
mov
sbbl
xor
andl
lea
subl
push
sbb
mov
xorl
xor
lea
orl
push
movl
cmpl
je
cmpl
jne
pushl
pushl
push
call
mov
dec
mov
jmp
mov
andl
pushl
call
mov
sbb
mov
andl
mov
inc
mov
cmpl
jne
pushl
push
pushl
pushl
call
cmpl
jb
xor
lea
mov
mov
decl
xor
xor
sbbl
add
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
push
push
call
jmp
movzbl
sub
mov
mov
xorl
xor
lea
mov
cmp
movl
jbe
add
mov
add
mov
mov
mov
andl
mov
inc
mov
cmpl
jne
pushl
push
push
call
cmpl
jb
mov
adc
mov
mov
xor
mov
sub
andl
xor
mov
not
mov
movl
cmp
movl
jne
addl
lea
andl
mov
lea
addl
mov
mov
xorl
test
movl
je
adc
mov
mov
mov
sub
mov
mov
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
jmp
and
mov
andl
mov
inc
mov
cmpl
jne
push
pushl
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
movl
cmpl
je
cmpl
jne
push
push
call
cmpl
jne
xor
add
dec
mov
mov
dec
mov
jmp
adc
mov
andl
jmp
xor
add
inc
mov
cmpl
jae
cmpl
jne
pushl
push
call
jmp
sub
cltd
mov
mov
mov
or
add
mov
adc
andl
subl
xor
xor
mov
mov
movl
cmpl
je
cmpl
jne
pushl
push
push
push
pushl
push
call
mov
dec
mov
jmp
not
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
call
cmpl
jne
mov
inc
mov
jmp
mov
xor
negl
add
mov
mov
movl
adcl
xor
addl
mov
mov
xor
movl
mov
cmp
movl
jne
mov
mov
cmp
movl
je
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
jmp
mov
negl
mov
movl
mov
andl
xor
add
movl
adc
andl
xor
addl
xor
movl
cmp
movl
jne
cmp
jne
mov
addl
mov
andl
xor
movl
cmpl
je
cmpl
jne
push
push
call
mov
dec
mov
jmp
addl
mov
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
push
push
call
jmp
adc
mov
xorl
add
movl
jmp
movl
mov
movl
cmp
je
mov
mov
orl
xor
add
cmp
je
movl
cmpl
je
cmpl
jne
push
pushl
pushl
pushl
call
cmpl
jne
mov
dec
mov
xor
add
dec
mov
jmp
mov
movl
mov
mov
mov
adcl
pushl
addl
mov
pushl
addl
add
movl
cmpl
je
cmpl
jne
push
pushl
pushl
call
cmpl
jne
mov
dec
mov
xor
or
dec
mov
jmp
add
mov
mov
orl
pushl
call
mov
mov
movl
mov
movl
jmp
adc
mov
sub
mov
andl
xor
subl
add
cmp
jne
add
mov
movzwl
sbb
mov
adcl
mov
xor
sbbl
add
cmp
movl
jne
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
push
pushl
pushl
call
cmpl
jne
mov
inc
mov
jmp
xor
mov
andl
push
xor
movl
add
xorl
push
xorl
push
andl
pushl
adcl
pushl
sbbl
call
add
mov
mov
sub
mov
or
mov
sub
mov
adc
mov
xor
mov
sub
add
adc
mov
movl
cmpl
je
cmpl
jne
push
push
push
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
andl
mov
inc
mov
cmpl
jne
pushl
push
push
call
cmpl
jb
incl
mov
mov
mov
mov
mov
mov
mov
sbb
movl
mov
xor
decl
add
mov
sbb
mov
mov
or
mov
mov
and
mov
mov
push
sbb
pop
orl
sub
add
xorl
movl
mov
mov
mov
mov
mov
mov
mov
xor
add
mov
lea
mov
mov
xor
add
mov
lea
push
mov
xor
add
push
mov
push
pushl
call
mov
mov
mov
mov
xor
mov
add
jmp
lea
mov
mov
sub
mov
mov
mov
mov
mov
mov
movl
mov
xor
add
mov
mov
xor
add
mov
movl
movl
mov
mov
xor
add
cmp
je
mov
xor
mov
sub
add
mov
mov
xor
add
imul
cmp
ja
mov
mov
mov
sub
xor
xor
add
div
mov
mov
mov
xor
add
cmp
jbe
mov
xor
add
mov
mov
mov
xor
add
imul
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
add
movl
mov
mov
mov
movl
movl
mov
mov
xor
add
jmp
movl
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
xor
add
add
imul
add
mov
mov
mov
cmp
jb
mov
mov
xor
add
imul
mov
xor
add
or
mov
xor
add
mov
xor
add
mov
lea
jmp
mov
mov
xor
lea
mov
jmp
mov
mov
xor
mov
lea
lea
xor
cmp
jne
mov
xor
mov
mov
mov
mov
xor
mov
xor
mov
mov
mov
xor
mov
mov
mov
xor
add
mov
mov
xor
add
mov
lea
mov
lea
mov
mov
test
je
mov
movl
movl
movl
movl
mov
mov
mov
andl
mov
movl
mov
mov
xor
mov
orl
mov
mov
xor
mov
addl
mov
mov
xor
mov
addl
mov
mov
xor
mov
addl
mov
mov
xor
mov
mov
mov
xor
add
xor
mov
mov
mov
sub
mov
addl
mov
movzbl
movzbl
sub
mov
movzbl
xor
mov
mov
xor
add
mov
lea
mov
lea
mov
lea
mov
lea
mov
mov
xor
add
push
mov
xor
add
push
mov
xor
add
push
lea
push
pushl
pushl
call
test
je
lea
push
mov
xor
add
push
mov
add
push
mov
mov
pushl
call
mov
lea
mov
mov
mov
mov
mov
test
je
lea
mov
mov
mov
mov
mov
mov
mov
sub
mov
xor
mov
sub
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
pushl
xor
sub
mov
mov
pushl
pushl
pushl
pushl
pushl
pushl
pushl
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
cltd
mov
mov
add
adc
andl
xor
mov
mov
mov
mov
xor
add
mov
adcl
xor
mov
mov
xor
mov
cmp
jne
mov
cmp
je
mov
mov
mov
xor
add
adc
xor
xor
cmp
jne
cmp
jne
mov
mov
xor
mov
mov
mov
add
mov
mov
mov
xor
mov
add
xor
add
adc
xor
xor
xor
add
adc
xor
xor
cmp
jne
cmp
jne
mov
mov
mov
push
add
push
lea
push
call
mov
mov
pop
pop
pop
leave
ret
push
mov
movl
movl
pop
jmp
xor
inc
ret
push
mov
push
movl
movl
mov
addl
mov
add
xor
cmp
movl
jne
add
mov
andl
jmp
xor
xor
inc
mov
cmpl
jae
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
jmp
mov
add
mov
mov
mov
xor
push
mov
mov
add
cmp
pop
je
mov
jmp
mov
xor
add
jmp
mov
xor
add
leave
ret
push
mov
sub
xorl
push
adcl
push
addl
push
push
andl
lea
push
push
adcl
call
push
call
sub
movl
xorl
movl
mov
mov
xor
mov
xorl
add
mov
sbb
mov
test
je
mov
mov
orl
mov
movl
cmpl
je
cmpl
jne
push
push
push
call
mov
dec
mov
jmp
mov
sbb
imul
andl
mov
inc
mov
cmpl
jne
push
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
movl
add
movzbl
and
xchg
sbb
mov
movl
sub
mov
xor
movl
cmpl
je
cmpl
jne
push
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
mov
adc
add
mov
sub
mov
sub
xor
add
mov
sub
mov
mov
xor
xor
add
add
mov
movzbl
sbb
mov
mov
adc
xor
xor
add
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
push
push
pushl
pushl
call
cmpl
jne
mov
inc
mov
jmp
movl
cmpl
je
cmpl
jne
push
call
mov
dec
mov
jmp
andl
mov
inc
mov
cmpl
jne
push
call
cmpl
jb
or
mov
orl
sub
addl
lea
xor
andl
xor
movl
cmp
movl
je
sub
mov
xorl
xor
adcl
add
cmp
jne
orl
pushl
call
movl
cmpl
je
cmpl
jne
push
pushl
call
xor
or
dec
mov
jmp
sbb
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
push
push
call
cmpl
jne
mov
inc
mov
jmp
mov
subl
mov
inc
xor
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
pushl
pushl
pushl
call
cmpl
jne
mov
inc
mov
jmp
mov
sbbl
add
cmp
movl
je
adcl
pushl
addl
pushl
negl
call
mov
xor
mov
add
mov
subl
xor
subl
add
cmp
je
or
mov
mov
adc
mov
mov
mov
mov
and
mov
andl
mov
inc
mov
cmpl
jne
push
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
mov
add
mov
mov
mov
add
mov
mov
mov
add
mov
mov
jmp
mov
mov
add
mov
mov
mov
xor
add
cmp
je
jmp
mov
mov
xor
add
cmp
je
mov
mov
xor
add
cmp
je
lea
push
pushl
pushl
call
mov
mov
mov
xor
add
cmp
je
mov
movzwl
mov
mov
mov
jmp
mov
xor
lea
jmp
mov
xor
add
jmp
mov
jmp
or
xchg
xchg
pushf
cmp
jl
loopne
jl
adc
and
imul
xor
fsubp
push
dec
imul
bound
iret
pop
dec
and
dec
jg
jb
jg
movsb
cmp
ljmp
cld
push
jg
in
cmp
mov
mov
mulps
fldl
lock
sub
dec
push
sub
mov
test
jmp
lret
sbb
jp
arpl
lcall
xor
cmpb
jae
fsubrl
push
jecxz
mov
mov
out
push
dec
push
and
cmp
lods
dec
int3
cmpsl
xor
push
pop
std
push
pop
movsl
stc
push
cli
inc
pop
xchg
jle
xchg
fcoml
movsb
or
popa
lahf
shrb
xor
cmp
iret
mov
lret
sub
jmp
push
adc
out
pop
nop
sub
inc
xchg
test
pop
adc
loopne
out
dec
push
jge
adc
pop
sbb
imul
sbb
cmp
aas
adc
push
inc
jmp
ret
cs
or
mov
xchg
mov
leave
inc
and
outsb
stc
add
sbb
outsl
add
xor
out
repz
mov
fwait
aam
pop
sbb
xchg
rcll
aaa
jmp
or
cmp
inc
in
add
sub
out
mov
lahf
fs
mov
nop
mov
mov
cs
leave
mov
mov
movsl
les
into
decb
push
enter
out
fisttps
jmp
sbbb
pop
mov
aas
andl
lods
out
addr16
inc
out
sub
inc
insb
pushf
lods
sti
mov
out
dec
cmp
stos
add
sahf
in
scas
cmpsb
jbe
mov
or
mov
das
in
int
ja
mov
cmp
jmp
xchg
out
lods
jb
jle
lods
dec
jb
call
imull
inc
fimuls
and
sub
fwait
in
dec
cmp
mov
sub
les
dec
mov
pushl
mov
mov
push
and
aaa
pusha
dec
loopne
inc
scas
jge
pop
pusha
jbe
adc
in
addr16
loopne
stc
jl
push
add
and
fwait
sbb
fldcw
lret
imul
insl
dec
xchg
jmp
xchg
ret
add
cmp
aad
mov
ror
cmpsb
sub
xchg
sarl
lds
pop
repz
shl
cwtl
dec
lods
loope
lea
rorb
and
xchg
mov
rcrb
xor
dec
sar
jmp
jno
pop
das
les
xchg
push
das
insb
jp
jecxz
mov
shlb
nop
inc
loopne
pop
ret
je
out
lret
in
out
pop
xchg
push
in
mov
ret
cli
xor
repz
mov
mov
out
add
mov
scas
mov
into
dec
leave
lock
loope
add
scas
je
stos
or
xor
push
cmpsl
aas
push
out
cmp
fs
and
insb
mov
pusha
xchg
adc
shl
xchg
add
stc
inc
jno
jecxz
rcrl
div
and
push
push
cmp
mov
lcall
call
data16
adc
pop
dec
mov
cs
mov
jno
inc
dec
cmp
int3
das
xchg
imul
imul
ja
dec
imul
orb
jecxz
pop
js
xchg
cmp
mov
mov
ss
inc
dec
jmp
test
sbb
mov
xchg
popa
adc
mov
pushf
scas
xor
mov
das
iret
dec
dec
sbb
mov
adc
pushf
rcll
cmp
addr16
loopne
rclb
pop
loopne
outsb
sbb
iret
hlt
pop
or
sbb
insb
xor
loope
lock
cmp
pusha
or
out
sbb
push
cmp
shl
orl
imul
mov
mov
xchg
outsb
or
fistpl
sub
adc
mov
lods
jmp
pop
mov
call
ljmp
push
xor
mov
cmpsl
testl
xchg
push
les
cmp
dec
ret
xor
dec
jp
test
fsubrl
inc
jg
cmp
lods
sbb
mov
xor
mov
call
pop
xchg
jns
sub
stos
mov
jl
jge,pt
je
out
inc
dec
push
mov
mov
stc
pusha
xchg
push
push
dec
jle
push
sti
mov
pop
push
xchg
adc
cwtl
ret
or
mov
lea
int3
push
and
aas
xchg
lods
inc
pop
adc
dec
pop
mov
icebp
cmp
pop
aas
out
or
cltd
mov
mov
shlb
push
repnz
cmc
push
rclb
scas
out
xchg
and
add
mov
xchg
out
xchg
dec
push
daa
mov
scas
and
mov
cmp
enter
jle
dec
push
in
xchg
hlt
les
mov
mov
mov
shlb
jb
push
adc
cwtl
out
imul
in
xchg
mov
xor
sub
fbstp
ljmp
lcall
mov
std
loop
cld
dec
fwait
xlat
call
ret
and
mov
aaa
mov
test
cmp
xchg
rcrb
push
inc
sub
outsl
gs
pop
in
mov
or
sbb
int
pop
push
or
adc
mov
inc
inc
call
orb
test
dec
out
dec
imul
xchg
lock
divl
mov
push
pop
dec
xor
fisubs
rep
cmp
mov
jbe
lret
pop
sbb
pop
xlat
repz
leave
test
test
in
xchg
das
add
icebp
pop
or
insl
fnstcw
mov
mov
xchg
int3
dec
push
scas
fbld
xlat
xchg
out
add
xchg
rorl
cld
filds
inc
in
aaa
add
mov
push
addr16
out
pop
addr16
add
pushf
pop
xor
mov
mov
xchg
shlb
imul
jecxz
imul
je
fcompl
cmp
popa
xchg
pop
adc
adc
fwait
call
inc
adc
inc
stos
cmpsl
iret
jo
sbb
xchg
test
pop
xor
int3
ficoms
fwait
lahf
mov
inc
cmp
xchg
fsubrl
mov
filds
pop
lods
push
lds
push
or
push
clc
push
lock
andl
int
lods
stc
mov
lahf
mov
jl
stos
fwait
or
xlat
jl
xchg
loop
pop
std
jge
pop
cmc
mov
or
and
stc
outsb
nop
cmp
push
mov
or
aad
add
daa
fnsave
loope
adc
cmp
std
and
sahf
push
ss
imul
shll
inc
cmpsb
pop
inc
aaa
mov
in
ds
std
pop
push
xlat
hlt
in
bound
dec
psubusb
shlb
and
pop
sbb
add
push
call
push
sbb
push
and
ljmp
ja
les
and
lods
aas
cli
push
xorl
test
test
jge
push
mov
or
xor
push
sub
cmpb
xchg
xor
idivl
jmp
int3
mov
mov
dec
xchg
ficoms
and
out
lock
cmpsb
leave
mov
enter
sub
stos
push
iret
sbb
aam
lea
jnp
cmpl
out
stos
push
jl
popl
clc
test
sub
cmp
inc
sti
daa
push
in
jge
idiv
pop
or
je
pop
pusha
pushf
inc
stos
push
clc
inc
xchg
repnz
or
fldcw
sub
psubusb
sti
lcall
dec
mulb
int3
dec
in
mov
addr16
cli
hlt
cmp
daa
push
and
je
loope
adc
pushl
stos
cmpsl
into
jp
fsubrl
mov
jmp
xor
or
mov
je
or
iret
push
adc
push
mov
push
cmp
xchg
stos
sahf
lea
mov
sub
lods
fwait
sti
cld
int
outsl
or
jg
fldt
iret
jg
stc
add
push
sarl
clc
out
leave
mov
sti
jp
rorl
or
xchg
ret
adc
insl
jle
mov
lahf
jmp
aad
push
fdivr
jge
or
cmpsl
stos
nop
and
jno
ja,pt
xor
jle
sbb
xor
cwtl
ficoms
xchg
cmp
jbe
enter
movsl
fdivrl
aas
jo
enter
jle
inc
xlat
cmp
cmp
js
pop
shrl
adc
bound
and
das
aam
push
dec
bound
repz
mov
mov
lock
ja
nop
cmp
xlat
dec
imul
adc
jnp
ret
sub
xor
cltd
mov
mov
rclb
mov
xor
stos
iret
cmp
inc
sub
inc
mov
incb
idivb
pusha
lods
xor
ljmp
aam
js
ret
inc
outsl
inc
repz
out
push
and
and
les
mov
and
jne
mov
adc
add
push
dec
xor
pusha
mov
lcall
inc
mov
push
push
negl
daa
jge
adc
jmp
push
pop
dec
ss
sarb
rcll
add
js
int3
and
xor
sbb
lret
mov
xorl
add
cmc
insb
div
cmp
or
int
repz
rclb
adc
repz
xchg
int
movsb
repz
mov
addr16
push
bound
jecxz
xor
xor
loopne
test
into
pushf
jbe
jo
and
inc
push
cmp
rcll
jne
cmpsb
ficomps
mov
ret
rclb
push
rolb
int3
pushl
xchg
sbb
and
adc
cli
je
sub
and
test
in
scas
mov
in
mov
mov
ret
cs
out
jae
pop
push
add
xchg
out
cmp
sbb
xor
ljmp
sub
andl
sub
jp
jbe
flds
scas
push
mov
cmpsl
xchg
sbb
inc
scas
adc
out
subl
sub
xchg
cmc
scas
rolb
ret
call
pop
jecxz
jle
fdivl
bound
dec
or
jecxz
add
shrl
xchg
out
loopne
into
or
and
repnz
pop
or
inc
xchg
test
les
xchg
dec
adc
add
pop
cmp
sub
adc
mov
mov
or
cwtl
or
dec
xor
sub
push
sbb
loope
std
cmp
dec
fdivrs
in
lods
into
fxch
add
lahf
push
scas
mov
add
jb
add
addr16
popf
in
push
and
fsqrt
mov
rclb
cmc
cltd
mov
fsubr
popf
jle
dec
pop
cli
or
sbb
jbe
lea
push
add
ror
push
pop
xchg
or
outsl
dec
mov
dec
push
push
jl
ss
xor
or
negl
enter
pop
sbb
and
inc
popa
and
mov
scas
sub
into
bswap
jmp
ljmp
xchg
mov
setnp
and
neg
cwtl
pop
imul
popf
cmpsl
jns
fdiv
roll
push
inc
outsb
jo
lock
mov
and
inc
cld
lea
mov
mov
sub
pop
push
in
xor
and
jmp
cmp
xor
sub
fcmovnu
xchg
xchg
int
insl
rolb
xor
jmp
jno
into
xchg
stos
pop
ja
push
test
fcoms
xchg
push
sub
mov
xor
ja
ss
push
lcall
cmp
and
lea
mov
ljmp
lock
rclb
aaa
push
jae
jl
xlat
icebp
int3
mov
add
and
addr16
sbb
daa
mov
pop
jg
xor
xchg
cltd
in
ret
pop
imul
mov
jl
cld
insb
idivl
mov
lock
push
bound
or
fneni(8087
mov
xchg
in
hlt
cmpsb
pop
ret
out
xchg
decl
push
repz
xchg
addb
xchg
fdivs
xchg
push
pushf
xchg
mov
jmp
inc
mov
sbbb
push
mov
xlat
jecxz
add
sbb
add
sub
jl,pt
push
mov
repnz
pop
sub
test
cltd
insl
mov
adc
lods
pop
inc
push
xchg
cmp
fistpl
in
call
in
xchg
push
jb
inc
lods
stos
faddl
xchg
jae
mov
fstpt
fistps
loopne
sub
ret
push
jno
leave
and
sbb
int
pop
popf
mov
es
mov
jmp
push
outsl
mov
cmpsb
ljmp
lea
andl
stos
repnz
pop
popf
inc
sbbb
das
scas
pop
cmp
test
lods
sarb
ss
adc
dec
jns
pop
jle
pusha
cmp
andb
repz
out
lcall
ja
loope
std
sub
or
mov
add
push
jp
testb
cmp
lock
push
and
jge
ficoml
inc
divl
mov
aam
xor
mov
mul
hlt
lods
ficoml
bswap
popa
pop
xor
enter
iret
ljmp
or
clc
fcoml
adc
outsl
lods
sbb
jbe
mov
push
inc
mov
mov
mov
pushf
sahf
push
arpl
pop
push
sbb
fcomps
sub
mov
lods
iret
arpl
mov
addl
sbb
enter
mov
js
jmp
sahf
add
sti
faddp
xchg
cmp
pop
pop
add
jg
fs
ror
arpl
lcall
cmp
sbb
or
fwait
jl
and
xchg
push
sbb
inc
sub
repnz
add
cmp
jno
inc
cs
cmp
mov
sarl
sub
xor
loop
cwtl
ljmp
mov
cld
adc
dec
sbb
pop
insl
mov
mov
xlat
pop
jecxz
movsb
fbld
into
nop
pushl
movsb
fldenv
in
push
rcrb
iret
lods
xlat
arpl
xor
xchg
sarl
pop
and
out
mov
push
mov
or
les
cmp
xchg
mov
and
out
int3
inc
push
push
cld
faddl
in
cmpsl
ret
sahf
addr16
into
aad
lahf
mov
repnz
add
xor
xor
xor
push
pop
mov
xchg
int
test
mov
enter
les
push
jne
enter
lds
inc
mov
pop
les
rolb
and
and
pushf
sbb
daa
cld
arpl
out
repz
adc
push
jae
repnz
sub
jmp
jge
fnsave
in
push
movsl
addr16
iret
and
push
rorb
clc
pop
xchg
dec
sub
mov
loop
faddl
in
inc
jge
inc
dec
sbb
push
dec
lds
inc
fisttpl
mov
sbb
sbbl
mov
cmp
repz
testl
sub
xor
out
xor
clc
sarb
push
ret
repz
mov
jbe
test
das
pop
sbb
in
jno
lcall
sub
and
popa
pop
mov
adc
test
pop
mov
out
fs
jae
jle
rcr
incb
dec
or
sub
sbb
aad
mov
ja
xchg
arpl
adc
pop
fistl
sub
bound
je
lcall
les
mov
ljmp
fildl
adc
or
jb
xchg
es
add
pop
jae
popf
data16
push
insb
mov
mov
dec
aaa
movsb
scas
add
add
mov
lret
aam
xchg
xor
pop
mov
mov
and
add
push
mulb
dec
dec
ljmp
cli
jge
cmp
in
and
mov
or
push
cs
je
insb
adc
scas
pop
cld
sbb
and
outsb
ret
sarb
mov
insb
andb
aad
pop
out
add
mov
adc
push
test
sbb
pusha
hlt
pop
mov
mov
outsb
push
in
mov
add
mov
sub
sbb
js
loop
jb,pn
push
inc
sti
les
int
dec
push
js
dec
xchg
xchg
mov
dec
dec
cmpsb
inc
enter
into
lret
pop
insl
orb
stos
xor
enter
incb
int
ficompl
push
xchg
inc
dec
add
mov
xchg
jmp
in
insl
cmpsb
pop
lods
inc
mov
and
xchg
test
sub
or
xor
sbb
xchg
inc
mov
mov
xchg
in
loop
inc
ss
popf
movsb
sbb
xor
and
ret
xchg
das
adc
xchg
adc
push
jb
inc
pop
loopne
cwtl
mov
sub
sbb
das
hlt
xchg
mulb
cmpsl
test
dec
mov
lods
and
dec
test
sbb
xchg
dec
adc
aad
hlt
ljmp
jmp
mov
lahf
gs
shll
inc
fstl
out
call
mov
adc
imul
idivl
in
aaa
test
loop
mov
out
dec
cmp
dec
pop
cmp
lds
stos
lock
scas
sbb
outsb
sub
scas
mov
lock
inc
loope
jl
and
push
and
std
outsb
fcoms
test
out
lcall
jp
mov
xchg
fnstsw
data16
or
or
mov
ret
imul
pop
inc
out
add
mov
adc
inc
cmp
sbb
hlt
shr
xchg
or
test
mov
xchg
xchg
outsb
mulb
int
fiaddl
jge
out
sub
xor
dec
sub
lcall
cli
dec
sub
rclb
fnstcw
jnp
pop
enter
mov
add
repnz
xchg
sbbb
ja
mov
sub
bound
fcmovb
inc
scas
mov
dec
xchg
xchg
mov
dec
js
daa
imul
jge
mov
or
jl
push
arpl
mov
pop
xchg
scas
or
pop
adc
xchg
cmpsb
stos
and
js
push
and
xor
inc
fildll
comiss
mov
fisttpll
int
mov
xlat
cmp
sub
jmp
imul
push
outsb
hlt
pop
push
nop
lods
je
or
pop
fdivrl
pushf
pop
sbb
mov
pushf
icebp
xor
fwait
xor
in
movsb
sub
cmp
inc
lea
jl
dec
ficoms
leave
cmpsl
ja
dec
lret
xor
pop
leave
push
push
mov
dec
push
scas
pusha
push
or
loopne
lahf
sub
mov
adc
scas
pop
jo
loope
cmc
jne
lds
lock
enter
jbe
jno
imul
inc
dec
fs
leave
sbb
mov
fiaddl
mov
or
pop
inc
push
jp
cmp
push
cwtl
inc
addr16
add
push
adc
adc
clc
arpl
test
mov
push
adc
and
adc
or
fmul
dec
lret
test
pop
jg
mov
mov
jae
je
and
int
mov
xchg
cmpsl
mov
push
jns
push
fisubrs
fbstp
pop
arpl
inc
adcb
push
or
jp
mov
out
mov
mov
xchg
and
xchg
int3
gs
cmp
sti
cmpsb
adcb
out
sub
rolb
daa
xor
mov
add
sub
aam
bound
xchg
mov
push
psraw
insb
pop
in
ret
add
bound
mov
out
push
daa
mov
xchg
mov
adc
aaa
mov
fs
xchg
push
xchg
sbb
out
lods
push
gs
stc
icebp
sahf
cmp
stos
cmp
leave
out
xor
jmp
insl
pop
adc
xor
stos
fistpl
xchg
jmp
subl
mov
mov
sub
insl
loope
test
pop
push
outsl
inc
or
pop
push
inc
test
in
dec
jne
outsl
and
mov
cmp
mov
dec
push
dec
mov
fucomp
pusha
movl
outsb
cmpb
lods
in
lods
jle
mov
xchg
cwtl
cltd
sahf
xchg
out
nop
and
test
xchg
fsubrs
call
loopne
mov
imull
inc
stc
incb
cwtl
xchg
mov
adc
pop
cmpsb
ja
jecxz
dec
pop
or
test
outsb
scas
or
pushf
inc
call
dec
repnz
cmc
xchg
das
scas
iret
hlt
jae
sti
or
shr
outsb
cmpl
sbb
dec
stos
enter
xor
stos
adc
dec
cmpsl
jle
mov
and
aad
rorb
sub
pushf
push
scas
sub
cmp
inc
mov
sub
xor
lcall
jnp
std
pusha
push
xchg
xor
jb
test
data16
lods
lds
imul
and
js
xchg
sub
test
cmc
je
pushf
inc
mov
lcall
mov
cmp
mov
je
addr16
shlb
mov
out
cld
cltd
cwtl
and
cmp
sbb
mov
jns
xchg
scas
std
dec
rorl
push
insb
cmpsl
mov
or
inc
cld
jno
out
or
adc
enter
add
mov
pop
sub
mov
mov
scas
push
mov
int
xchg
sub
pop
out
cmp
ror
dec
movsl
pop
sbb
ljmp
cmp
and
adc
ljmp
lods
in
xchg
or
dec
sbb
adc
test
mov
cltd
mov
aaa
pop
ljmp
or
popf
lock
mov
and
imul
add
cmpb
outsl
fcompl
imull
dec
pop
aas
mov
jle
sub
addr16
out
dec
lret
jb
out
mulb
add
das
pop
cmp
cmp
fs
loope
icebp
enter
scas
or
xchg
loop
jg
add
push
adc
mov
pop
call
in
clc
inc
pop
das
xchg
jno
icebp
pop
dec
pusha
mov
sub
push
and
lcall
int
scas
fimuls
leave
adc
rorb
jge
fnstsw
mov
jb
jl
jae
scas
movsl
xor
dec
inc
pop
scas
loope
loop
inc
pusha
loopne
iret
xor
xchg
pusha
xchg
add
cmp
in
mov
dec
or
cltd
test
out
xchg
lds
xchg
lods
xchg
shl
add
and
mov
xchg
dec
inc
xchg
insl
cmp
mov
outsb
fistps
mov
ds
xor
pmaxsw
pop
sbb
imul
push
ss
sarl
pop
int3
loop
stos
loopne
imul
xchg
cmp
mov
mov
dec
scas
test
loope
test
push
fs
mov
mov
mov
popf
test
adc
adc
pop
cmp
popf
popa
popf
sub
xchg
ret
dec
test
pop
jge
or
cltd
fldl
scas
sbb
ror
push
lret
lock
adc
xchg
lods
ret
repnz
sub
ds
outsl
std
sub
pop
mov
mov
fcmovne
mov
std
dec
adc
jl
lahf
inc
lcall
add
int
mov
cmpsl
mov
jmp
test
cmpsl
ret
cmc
clc
mov
inc
or
jno
xor
mov
or
sub
mov
repz
xchg
jecxz
scas
xchg
movsb
imul
bound
pop
dec
mov
mov
mov
leave
int3
jmp
jg
jmp
xor
repz
das
push
adc
xor
jbe
add
mov
cmp
sub
es
ret
adc
test
ret
iret
adc
pop
ficompl
inc
jbe
insb
cmpb
pusha
push
pushf
lahf
pop
rolb
fisttpl
mov
lcall
mov
pop
add
dec
xchg
or
or
jle
gs
push
mov
and
popl
fcompl
dec
int
fldl
fmull
pop
and
loope
fiadds
sbb
push
das
cmc
pop
mov
sbb
int3
das
stos
rcrb
push
pushf
cmp
roll
mov
cmp
xor
fdivrl
aad
fxch
sub
push
pop
dec
fcmovu
adc
je
lret
sbb
sahf
pcmpgtb
add
sbb
cmp
jo
and
test
sub
push
orl
arpl
int3
out
bound
iret
jge
mov
cmp
mov
js
lahf
add
xchg
fwait
int3
xorl
in
mov
fiaddl
icebp
in
lock
inc
push
imul
pop
or
mov
and
push
dec
mov
xchg
lea
jae
sub
xchg
shlb
xchg
aad
mov
jge
pop
xchg
inc
cmpsb
ret
and
push
jae
mov
add
gs
cmc
ret
add
ss
enter
dec
add
imul
es
push
in
cmp
icebp
pop
inc
mov
aaa
cmp
in
mov
aaa
mov
fnstcw
sub
mov
sub
out
mov
mov
sbb
sar
xlat
sbb
adc
push
clc
pop
test
jae
jno
jne
push
sub
pusha
mov
xchg
adc
addr16
call
mov
push
ja
aad
negl
negb
test
ret
push
test
push
xor
adc
cld
fidivrl
movsb
push
stc
push
lahf
std
sbb
icebp
jnp
and
inc
sti
scas
jbe
xor
cmpsl
and
ljmp
hlt
xchg
adc
icebp
inc
push
imul
add
jg
int
notl
hlt
aad
sub
jecxz
mov
stos
mov
mov
pusha
gs
mov
sbb
xor
add
mov
inc
movl
imul
jnp
inc
dec
xor
sbb
cltd
push
xor
sub
pop
xchg
cli
xchg
and
cmp
dec
insb
jns
stc
das
scas
fmuls
pop
daa
je
xchg
test
call
outsl
les
in
xor
adc
mov
cmpsb
sahf
lods
pop
movsl
mov
mov
adc
dec
mov
lock
out
jp
mov
xor
jo
xor
xchg
mov
adc
push
notb
fisubrl
pop
and
data16
adc
jp
jge
je
out
lock
lahf
jnp
add
imulb
out
mov
imul
mov
adc
out
loope
loop
ffreep
outsb
cli
push
pop
add
je
push
out
and
sbb
cmp
cld
insl
pop
out
push
mov
outsb
rcrb
stc
sbb
xor
or
js
add
shl
xor
xchg
xchg
mov
icebp
mov
mov
inc
xchg
lret
and
out
popa
cmc
aas
out
lret
sti
clc
les
sbb
lcall
inc
cmp
add
ljmp
clc
test
rcrl
imul
enter
xor
dec
pushf
icebp
xchg
cmp
jnp
jg
cmp
loopne
std
je
jp
lods
push
pop
imul
jb
nop
cmp
inc
and
test
sub
sub
xchg
inc
sbb
pop
jp
xchg
push
outsw
fyl2xp1
inc
push
jmp
jl
pusha
pop
mov
pop
push
aaa
xor
mov
push
fnsave
sbb
insl
cmp
adc
ja
scas
aad
ds
pushf
inc
out
fisubrl
clc
loope
idiv
outsl
int3
mov
mov
and
pushf
xchg
jle
cmp
mov
and
andl
sub
iret
fwait
jnp
les
jmp
aam
mov
outsl
push
dec
jge
pusha
sub
shr
adc
sub
and
ljmpw
cld
orl
outsl
xor
lds
lahf
cmpsb
stc
cs
xor
fbld
pushf
adc
xlat
push
jns
ja
fs
sbb
in
adc
in
imul
sbb
cmp
inc
xor
adc
inc
mov
sub
test
in
dec
sbb
loope
cld
jae
pop
adcb
es
jecxz
arpl
pop
stos
xchg
cli
aam
or
lret
add
mov
dec
shlb
mov
inc
jnp
xchg
pop
and
push
and
xchg
xor
mov
xor
daa
popa
int
mov
pop
mov
or
data16
rolb
div
aad
lahf
in
xor
sbb
dec
inc
in
cmp
or
mov
or
sbb
cmp
scas
push
jo
mov
movsl
xlat
addr16
add
add
in
push
shlb
jmp
xor
es
xchg
std
fistpl
jl
sub
xchg
xchg
xor
subb
sub
lock
test
and
and
push
jge
cmpsl
nop
loope
stos
mov
hlt
ja
jb
xchg
pop
push
pusha
pushf
dec
jns
adc
movl
aam
lds
aam
iret
adc
xor
imul
stos
fcomp
push
into
rclb
push
inc
add
repz
ds
loop
jae
adc
mov
je
pop
pop
mov
dec
push
leave
xchg
and
cmp
pop
fs
jb
add
jo
or
add
ja
pop
xchg
mov
outsb
inc
adc
mov
aaa
adc
xchg
and
sti
sub
add
les
xor
pop
notb
push
mov
jmp
movsb
test
sti
cs
add
mov
jo
lcall
and
add
stc
mov
lret
xor
or
or
frstor
insb
nop
or
mov
mov
cld
repnz
adc
adc
ss
sub
iret
mov
scas
and
xchg
adc
neg
andl
cld
repz
mov
mov
jmp
dec
sbb
cmpsb
cmpsb
sub
jmp
clc
cmp
jecxz
push
push
xchg
testl
mov
test
push
inc
push
mov
ss
pop
xchg
xor
pop
cwtl
fstpt
mov
jp
or
movsl
jae
cli
lods
mov
ret
mov
xchg
push
jp
and
nop
pop
xor
mov
imul
in
out
push
sbb
jns
and
outsb
or
jb
cmp
popa
mov
stc
jb
insb
pop
lahf
dec
jno
pop
sub
or
sub
mov
lahf
mov
popf
push
mov
mov
push
mov
sub
xchg
xor
add
jmp
mov
add
mov
mov
test
je
movl
push
xor
pop
add
push
pop
push
dec
pop
dec
xchg
sub
xchg
dec
mov
imul
sub
mov
mov
mov
xor
mov
add
mov
mov
xor
add
mov
imul
mov
xor
mov
lea
cmp
je
mov
mov
mov
mov
mov
xor
xor
mov
add
div
mov
xor
lea
mov
mov
mov
mov
mov
xor
lea
mov
mov
mov
xor
add
imul
mov
xor
mov
lea
cmp
jne
mov
jmp
mov
mov
mov
xor
add
mov
mov
add
xchg
xor
push
mov
pop
mov
add
lea
add
add
push
inc
pop
dec
xchg
dec
xchg
dec
xchg
dec
push
mov
pop
dec
call
cmp
je
xchg
push
pop
push
pop
inc
xchg
sub
xchg
dec
dec
mov
imul
add
xchg
push
xor
mov
dec
inc
add
dec
xor
add
pop
mov
pop
pop
pop
leave
ret
push
mov
sub
andl
mov
inc
mov
cmpl
jne
pushl
push
pushl
pushl
call
cmpl
jne
xor
or
inc
mov
cmpl
jb
and
movl
xor
or
mov
and
lea
mov
push
adc
mov
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
push
push
call
cmpl
jne
xor
add
inc
mov
jmp
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
push
call
cmpl
jne
xor
or
inc
mov
jmp
movl
cmpl
je
cmpl
jne
push
call
mov
dec
mov
jmp
adc
lea
mov
or
mov
and
mov
mov
xor
add
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
push
call
cmpl
jne
mov
inc
mov
jmp
and
mov
mov
addl
mov
add
sbbl
push
xor
mov
mov
movzbl
sub
mov
mov
adc
xor
mov
addl
add
movl
cmp
je
mov
movl
jmp
mov
movl
cmp
movl
jne
push
jmp
mov
movzwl
mov
cmp
jne
mov
incl
xor
add
mov
adcl
mov
mov
xor
sbbl
add
imul
and
mov
andl
xor
add
cmp
movzbl
mov
push
movl
je
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
call
cmpl
jne
mov
inc
mov
jmp
mov
add
mov
mov
xor
add
imul
mov
jmp
mov
xor
mov
mov
xor
mov
mov
sub
add
mov
mov
add
mov
mov
mov
xor
xor
lea
mov
xor
add
imul
mov
xor
sub
mov
add
cmp
mov
mov
jg
xor
mov
sub
add
jmp
xor
add
add
mov
mov
mov
jmp
imul
stos
sbb
push
jl
pop
jl
fwait
pusha
dec
sub
lods
repnz
pushf
movsl
xchg
test
xchg
incl
in
dec
imul
outsl
mov
stos
or
lcall
inc
int
adc
daa
inc
lahf
into
mov
cmpsb
push
imul
mov
xchg
push
jnp
xchg
int3
cmp
xchg
adc
insl
fs
enter
and
in
std
pop
negl
ficoml
push
mov
repz
add
enter
js
stos
jp
pop
jb
into
mov
adc
ret
push
pop
fstpt
sbb
insl
xlat
cmp
loopne
data16
stos
pop
aam
sub
or
push
in
xor
xlat
sahf
xor
mov
xchg
icebp
sbb
push
sbb
xchg
mov
inc
ja
pop
fs
iret
xor
pop
hlt
push
je
jg
movsl
adc
ficompl
fstp
adc
arpl
mov
fwait
push
fisubrs
add
imul
je
out
push
out
stc
ja
aaa
and
jge
iret
lret
jnp
mov
loope
aas
das
or
xchg
ret
fmull
push
xor
jb
push
je
sbb
popa
jmp
lods
outsl
jns
inc
sub
out
sbb
pop
leave
in
mov
ja
sahf
jb
ss
rol
leave
mov
mov
mov
xchg
rcrb
mov
pop
push
or
cmp
sub
xchg
outsl
cltd
push
cltd
scas
js
test
leave
ljmp
test
mov
jge
ds
mov
shl
cmpsl
out
sub
js
rcrb
push
fmuls
add
xchg
stos
jb
push
jg
mov
sub
or
mov
xchg
in
es
test
int
lock
or
inc
bound
xchg
pop
sub
jg
xchg
in
mov
ds
and
jmp
sub
jo
scas
or
push
pusha
push
in
adc
jmp
mov
add
and
xlat
fildl
rolb
pop
jns
and
sbb
ljmp
aas
mov
dec
ret
in
jp
push
sub
cld
sti
bound
jae
movsl
fs
fnstcw
les
add
test
scas
outsb
dec
dec
lret
inc
push
mov
je
mov
jecxz
adcb
mov
lds
jmp
adc
sbb
movsl
clc
mov
filds
jp
hlt
ds
cwtl
mov
les
xchg
cmp
in
mov
mov
push
iret
push
cmp
sbb
and
addr16
icebp
fwait
pop
popf
push
pop
ret
aas
xor
push
int
adc
hlt
and
or
pop
lods
fs
loope
aad
pop
cli
stos
stos
jae
or
cmc
pusha
sbb
addr16
dec
cmc
mov
pop
neg
movsb
out
enter
stos
addr16
into
pop
inc
fistps
movsb
dec
je
xor
mov
fcompl
sbb
dec
loopne
xor
push
inc
mov
or
lret
andl
lcall
xchg
pop
and
lds
iret
dec
dec
add
stos
push
xor
inc
addr16
popf
mov
dec
outsb
test
fs
mov
inc
out
scas
sub
inc
fs
pop
sub
inc
mov
pushf
popf
cwtl
pop
mov
cmpsl
out
insl
or
pusha
mov
dec
aad
jmp
aad
shlb
ret
push
push
fwait
cmpb
inc
sar
sub
lods
in
push
jae
lahf
pop
jmp
ss
and
mov
add
xchg
call
sti
sbb
inc
pushf
mov
inc
mov
mov
out
aad
std
adc
add
jp
add
lret
mov
mov
sbb
arpl
leave
mov
push
mov
in
sub
fidivl
into
xor
inc
jbe
add
js
imul
mov
sub
adcb
insb
xchg
mov
mov
mov
ds
adc
lret
ret
pop
movsl
iret
test
mov
pop
inc
aad
add
mov
jp
xor
inc
inc
adc
dec
xchg
ljmp
into
jecxz
insl
cwtl
lcall
dec
mov
mov
push
adc
adc
pop
lock
add
dec
je
xchg
bnd
and
mov
imul
out
jns
idivl
enter
push
mov
arpl
dec
scas
xor
das
shll
push
and
jne
or
repz
hlt
xor
xchg
insl
mov
mov
mov
rclb
or
jl
in
push
outsb
mov
in
dec
pop
repnz
test
fsubr
aam
xorl
push
fcomps
popa
mov
push
mov
add
mov
adc
imulb
cvtps2pi
push
pop
rclb
iret
aas
push
push
add
dec
jns
sarb
sbb
mov
ret
jmp
sub
dec
xor
lret
lods
ss
fwait
js
insl
jp
and
out
ret
in
push
or
inc
pop
and
push
inc
mov
lcall
pop
mov
pop
xchg
lods
mov
lcall
scas
lcall
aaa
popa
adc
mov
jp
jge
insl
mov
nop
push
int3
dec
push
mov
gs
mov
jle
pop
push
xor
xchg
mov
movsb
adc
jbe
shll
cmp
jno
mov
test
imul
andl
leave
popa
ret
mov
sbb
lds
ja,pn
xor
rorb
xchg
mov
and
xchg
jecxz
in
je
xlat
adc
pusha
ljmp
aad
fs
mov
sahf
fisttpll
mov
mov
ja
ja
cmovns
pop
popl
cmp
add
fsubl
ljmp
iret
popa
lock
jns
mov
or
sbb
dec
jle
sbb
jg
inc
outsl
push
add
pop
lods
das
sbb
and
pop
mov
arpl
nop
xlat
xor
sub
fcmovu
pop
rcrb
je
lea
nop
push
outsl
xchg
les
pop
xchg
lds
pop
jnp
cmp
inc
sbb
xchg
jb
dec
ljmp
cmp
add
push
rorl
mov
dec
mov
dec
sbb
pop
test
or
mov
leave
pop
sahf
mov
xor
lret
push
cs
lock
push
inc
std
std
jg
sub
sbb
jno
sbb
sarb
cld
daa
cmp
pop
inc
mov
dec
sub
orb
aas
dec
sahf
mov
stos
cmc
jnp
pop
inc
sbb
pop
cmp
jno
inc
pop
stos
adc
mov
shll
leave
mov
ja
ret
push
divb
lahf
movsl
adc
lret
cmp
pop
jae,pt
add
lcall
icebp
sub
mov
repz
sub
cmp
imul
clc
sub
sbb
jo
inc
xchg
lds
fstpt
imul
es
shl
add
insl
inc
xor
enter
mov
add
ret
push
shrb
xchg
push
ret
cmpsb
cmp
cmpsl
cmp
inc
fs
insl
push
or
pop
mov
jae
mov
lcall
inc
push
popf
outsl
insl
jp
mov
data16
add
jp
or
movsb
das
std
push
imul
and
cmp
dec
pop
orl
pop
add
enter
into
gs
jb
lods
and
and
std
pop
testb
mov
mov
lahf
mov
jecxz
or
push
in
fld
jno
push
and
push
cmc
mov
cmc
adc
scas
leave
ja
fsubs
fcompl
sahf
insl
xor
ret
dec
adc
fiaddl
add
insl
adc
sbb
in
sar
jb
mov
xchg
mov
fs
ljmp
cmpsb
xchg
sub
aad
mov
movsb
fsubrl
inc
pop
dec
adc
mov
inc
jmp
in
cmp
dec
inc
shll
cmp
sub
sub
add
push
js
test
inc
je
ret
push
sbb
push
mov
inc
sbb
inc
bound
mov
imul
mov
mov
xor
or
test
push
mov
test
fstpt
sbb
sub
pop
and
push
dec
sbb
mov
sub
sub
push
xorl
pop
loope
and
push
lods
inc
inc
inc
or
xor
notl
rcrb
rcrb
sub
mov
push
add
and
jmp
test
and
dec
in
test
dec
aaa
pop
jg
adc
sahf
movsb
fadds
push
xchg
nopl
adc
cmp
bound
cs
test
mov
ret
punpckhdq
test
jb
add
aad
and
or
mov
sub
cmpsl
sbb
xor
and
cltd
mov
sbbl
mov
aad
cmp
push
bound
push
mov
fcmovb
mov
dec
mov
cld
jmp
push
ds
xor
cmp
aad
test
in
sahf
or
jmp
adc
xchg
lds
sbb
pop
or
arpl
cmp
lret
mov
add
shrb
push
and
jne
mov
aas
push
push
xchg
lods
insl
cmp
loopne
push
imull
cmpsb
sub
xchg
cmp
pop
inc
adc
and
dec
mov
mov
adc
bound
adc
push
jge
sahf
push
xor
js
rcrl
loope
lret
dec
push
iret
lds
pop
stos
sbb
nop
pop
cwtl
js
push
sub
ret
iret
xor
add
sbb
nop
mov
and
sub
mov
cmp
dec
inc
inc
movsb
or
mov
roll
je
or
clc
lods
xor
cwtl
add
dec
pop
cwtl
push
shll
outsl
sbb
pop
add
call
and
adc
jmp
xchg
sbb
mov
repz
ficompl
lods
pushf
nop
cwtl
jecxz
mov
mov
pop
lock
mov
dec
jmp
dec
into
lods
cmp
mov
dec
mov
iret
cmpsl
mov
loopne
or
mov
inc
out
adc
add
lahf
sbb
push
inc
cmc
mov
push
sub
imul
hlt
sub
xchg
adc
jne
dec
and
inc
jbe
int
mov
jmp
jp
out
push
dec
sbb
and
cmc
fwait
mov
xchg
inc
cmp
inc
mov
lds
cwtl
add
fs
push
outsl
jb
and
fstps
loope
or
or
sub
imull
mov
hlt
and
fs
push
push
pop
leave
aas
adc
shlb
xchg
pop
cmp
dec
and
inc
inc
in
mov
push
cmp
pushf
push
rolb
and
or
adc
enter
sub
dec
mov
push
add
jnp
clc
out
out
jp
call
fadds
push
inc
adc
jp
and
daa
adcl
mov
into
pop
inc
mov
add
cltd
pusha
pop
cmp
xchg
mov
pop
or
mov
cmpsl
sub
xchg
jae
lret
xchg
fistpl
sub
jecxz
arpl
lret
icebp
test
sub
sbb
lret
call
stc
and
dec
or
and
jp
popf
adc
ds
dec
in
ja
or
or
mull
jo
outsl
dec
cwtl
push
imul
mul
jmp
or
or
jmp
inc
mov
iret
repnz
and
in
sub
dec
push
or
sub
inc
inc
cmpsl
aad
das
mov
cmpsl
into
pushf
test
or
cmpsl
hlt
or
imul
add
nop
mov
aas
fcoml
mov
mov
adc
lret
xorb
adc
mov
xchg
pop
xorl
cmp
idiv
lret
dec
and
jg
sub
inc
push
aad
shrb
add
and
mov
add
test
or
mov
enter
aas
loope
push
sbb
jge
or
dec
shrb
cmp
loopne
lcall
xchg
jl
and
fwait
mov
push
loopne
add
int
sub
test
enter
mov
pop
sbb
imul
adc
loope
and
sbb
adc
movb
fucom
fxch
dec
jmp
ljmp
test
inc
and
imull
testb
mov
lock
hlt
arpl
rolb
inc
mov
je
in
sahf
add
out
lea
pop
jns
push
dec
idivl
por
xchg
mov
jmp
xlat
inc
sub
leave
movsl
adc
and
neg
data16
mov
jne
mov
stc
lock
es
sub
sbb
rcr
mov
adc
jae
mov
out
scas
mov
ss
addr16
out
cmp
das
cltd
and
adc
mov
mov
shrb
push
mov
aam
movsb
loopne
test
add
push
and
rcll
loop
pop
aaa
adc
outsl
inc
mov
push
mov
sbb
xchg
mov
mov
push
jbe
mov
lahf
rclb
jg
fldl
push
jmp
inc
or
out
push
sbb
cmp
gs
adc
jbe
push
std
adcl
cmp
xlat
fwait
mov
cmp
sti
movsb
test
mov
and
xor
inc
daa
push
mov
xchg
popf
insb
push
shll
or
imul
pop
and
or
xor
or
or
xor
inc
mul
stc
mov
or
xor
stc
insl
cmp
push
jl
je
sub
mov
mov
xchg
int
adc
inc
pop
inc
pop
imul
inc
ret
stos
bound
adc
push
xchg
arpl
push
push
xchg
dec
sti
aam
orb
testb
mov
mov
test
lcall
inc
pop
push
jecxz
cmp
mov
adc
mov
mov
mov
jge
lea
lods
mov
xchg
daa
jecxz
and
pop
jecxz
aad
addr16
jmp
and
pop
xor
push
push
jne
fbld
mov
jbe
add
ja
xchg
cltd
scas
xlat
pop
andl
pushl
adc
cld
lea
adc
pop
push
and
and
cmp
sub
inc
stc
pop
and
test
stc
stc
pushf
aaa
lods
sti
scas
mov
sbb
repz
ljmp
andl
iret
add
shl
enter
test
mov
cmp
movsl
into
inc
add
sbb
adc
clc
cmp
aam
xor
loope
sub
and
sbb
push
push
xchg
mov
sbb
cmp
das
dec
loopne
adc
and
inc
pushf
into
loop
subb
in
int3
jg
fs
ficompl
ds
cld
andl
out
mov
cmp
mov
xlat
aad
hlt
mov
out
cli
jle
cs
rcrl
sub
lock
dec
jbe
loope
sub
add
add
outsl
mov
rolb
sbb
push
loopne
mov
mov
bound
jmp
or
pop
stos
jae
xor
je
adc
nop
xlat
cmp
mov
or
sti
aam
stos
decl
fmull
mov
push
fstl
sub
dec
pop
xor
lods
or
pop
add
push
loope
pushf
cli
xchg
bound
xor
xlat
icebp
push
movsl
loope
aam
or
cmp
test
fcmove
arpl
add
dec
leave
std
jecxz
dec
inc
xor
pop
gs
adc
push
xor
hlt
test
out
or
lret
push
pop
rcl
aad
imul
adc
or
mov
arpl
mov
mov
adc
movsl
pop
js
jg
xor
fistpl
xor
mov
push
repnz
pushl
sub
daa
das
les
cmp
sbb
inc
loopne
cltd
flds
pop
add
cmpsl
mov
push
jge
fistl
popa
sbb
and
dec
push
leave
pop
add
pushf
push
or
lods
push
pop
fwait
inc
mov
js
ds
sub
pop
ror
ds
in
push
sbb
lret
nop
imul
mov
sahf
push
xchg
repz
jbe
fsubr
or
mov
mov
stos
outsl
iret
add
lret
mov
test
sar
in
mov
and
testl
pop
roll
cmc
sbb
loope
fwait
pop
sub
inc
xchg
adc
daa
push
mov
sti
jl
sub
mov
movsl
sbb
xlat
pop
scas
and
loope
and
out
jg
push
hlt
leave
mov
mov
mov
xchg
push
mov
test
imul
lds
fs
adc
dec
bound
popf
dec
xchg
shlb
or
lock
out
xchg
ja
ljmp
and
jg
fsubs
sub
or
cwtl
out
dec
jg
xchg
stos
adc
jne
pop
pop
inc
adc
jb
outsb
xchg
mov
ud1
mov
push
scas
xor
inc
adc
mov
xorl
xchg
fldl
test
inc
ja
xchg
aam
jne
sbb
out
daa
nop
leave
mov
test
js
dec
sbb
cmpsl
lret
int3
test
sti
mov
inc
loop
js
nop
lahf
ret
in
mov
sbb
in
or
addb
inc
out
ljmp
rcrl
cmp
rcrb
stc
pop
idiv
fwait
mov
cmpsl
xor
aad
jg
cli
shlb
sbb
lahf
divl
mov
int
repz
sbb
clc
sti
pusha
or
push
xchg
pop
out
testb
shrl
dec
jg
or
out
js
push
cld
shrb
pop
push
mov
mov
aad
xor
pop
xchg
dec
and
out
clc
mov
lret
sbb
movsl
push
sub
std
adc
scas
xor
outsb
sbb
out
inc
jle
aas
arpl
mov
add
inc
pushf
into
add
adc
les
out
mov
pop
mov
xlat
dec
or
scas
jg
insb
stc
dec
pop
std
push
test
cmpsl
mov
jae
mov
fstl
or
lret
sbb
clc
sub
fwait
jb
pushf
mov
lret
and
aaa
push
adc
addr16
mov
jo
sub
loopne
popf
stos
xchg
and
and
mov
sub
rorb
mov
ds
loope
out
mov
inc
inc
inc
test
sahf
dec
jecxz
mov
push
jle
mov
and
addb
jns
mov
pop
nop
cmpsl
push
push
add
add
cmp
and
dec
push
cmc
or
push
mov
fdivrs
sub
push
testb
fwait
jne
popa
fsubrl
imul
or
adcl
cli
and
std
test
push
movzbl
adc
lcall
xchg
rolb
dec
ret
ret
stos
test
jecxz
inc
inc
fsubr
xchg
fld
mov
pop
mov
or
xorl
cmp
pop
movsb
popf
negb
jb
and
xor
rolb
mov
jb
stos
dec
add
repnz
fsubs
or
aam
and
bound
pop
xchg
pop
cli
rcrl
jecxz
push
xlat
xor
xchg
iret
and
daa
push
clc
xlat
dec
sbb
sbbb
mov
inc
sub
sub
adc
sub
iret
pop
xchg
fcompl
fstpl
lock
mov
jmp
add
and
adc
aas
mov
clc
mov
jecxz
and
pop
imul
loopne
mov
imul
mov
pop
push
push
fcompl
dec
jge
pusha
push
xor
or
lahf
inc
xchg
inc
mov
jb
setne
mov
mov
arpl
dec
insl
lock
loope,pt
pop
mov
fsubrl
aaa
fdivs
adc
out
shl
std
es
test
push
mov
stc
in
mov
sbb
dec
and
pop
add
lret
mov
cmpsb
repz
int
in
mov
jne
aad
add
fdivr
adcb
adc
fildl
loopne
lock
jno
fbstp
xchg
xchg
xchg
repnz
iret
inc
pop
push
test
push
mov
testl
cmpl
mov
std
scas
xchg
jp
mov
sub
icebp
sbb
mov
xor
dec
int
lods
pusha
cmp
jle
mov
or
mov
ficomps
sbb
xchg
cmpsb
xchg
inc
mov
out
pop
pop
mov
jl
xchg
sub
dec
loop
in
clc
dec
insl
data16
and
movsb
stc
jnp
es
enter
aam
pop
mov
adc
loopne
icebp
inc
sbb
push
or
cmp
xchg
push
mov
jmp
out
mov
in
test
dec
repz
fstp
jnp
shl
adc
das
sub
stos
cmpsb
xchg
stos
pop
loop
lock
mov
add
pop
mov
push
inc
ficompl
out
sahf
daa
push
xchg
das
mov
ss
cwtl
inc
push
jae
pop
sbb
mov
fcom
push
mov
aaa
movsl
repnz
pop
imul
inc
lret
mov
fisubs
rolb
fnstsw
sub
scas
jmp
lret
dec
ret
sbb
cs
outsl
dec
cmpsb
jbe
arpl
push
in
das
dec
or
jbe
je
xchg
cmpsl
or
sub
sti
jmp
mov
mov
push
and
sbb
jns
ret
sub
xchg
pop
les
inc
dec
out
mov
sbb
jle
inc
push
add
adc
xchg
stos
stc
cltd
call
cs
sbb
dec
imul
dec
adc
add
inc
xchg
jp
push
jg
pop
xchg
mov
fdivrl
jns
mov
xchg
mov
mov
mov
stos
adc
push
movsb
cmp
insl
pop
lret
mov
mov
push
jmp
mov
sti
sbb
data16
mov
insl
bound
sar
cltd
cmp
ficomps
and
pop
daa
leave
stc
out
xchg
jb
mov
mov
mov
ret
icebp
push
out
lock
mov
push
push
je
cmc
int3
mov
mov
lods
jnp
mov
aas
xchg
push
push
lahf
js
push
pushf
int3
aas
add
aad
imul
jge
pop
add
insl
int
fisubl
or
xchg
and
push
out
jmp
cld
sarb
and
or
xchg
test
and
mov
lods
pop
int3
cmp
inc
call
sti
movsl
cmpsl
mov
mov
call
push
or
loop
push
or
and
cmp
or
and
lds
cmpl
inc
push
push
aas
push
loop
and
pop
jbe
lods
pop
dec
fistpl
xor
dec
add
mov
mov
rolb
add
push
loop
dec
daa
or
inc
fsubs
std
rcrb
jmp
lods
xchg
jo
dec
cmp
inc
inc
outsb
roll
mov
lret
jge
insb
aas
jbe
pop
xor
iret
ljmp
lock
mov
push
mov
js
lods
fildll
fwait
cmp
outsl
cwtl
xlat
or
loop
data16
andb
or
or
sbb
and
mov
sar
andb
leave
sti
in
xchg
gs
sub
out
inc
insl
sub
add
lods
js
mov
mov
adc
push
ret
or
xor
pop
mov
dec
jno
push
jmp
pop
dec
lcall
sti
xchg
cmp
xchg
and
jb
jns
sbb
fildl
pop
fcompl
mov
sub
gs
inc
dec
jne
mov
sahf
aad
ljmp
je
loopne
cmpsb
xor
addr16
xlat
mov
push
push
ret
notb
cwtl
movsl
xchg
out
mov
jmp
lods
sti
mov
xor
pop
lds
jmp
enter
jne
dec
daa
not
int3
mov
sbb
push
xchg
xor
and
pop
cld
sub
xchg
cmpsb
or
ds
xor
or
jmp
push
in
out
xchg
lret
push
pop
push
mov
sub
xchg
ss
and
inc
bound
mov
mov
imul
cmpsl
add
or
or
mov
icebp
and
daa
inc
cmp
outsl
or
inc
push
ret
dec
gs
inc
aam
and
mov
clc
lret
lods
adc
fsubl
and
pusha
cmc
mov
push
and
add
dec
jnp
sbb
jbe
and
add
jle
out
in
call
push
xor
jge
fisubs
into
push
mov
sbb
lret
les
adc
divl
sbb
xor
push
sub
inc
arpl
or
mov
loop
aaa
sbb
pop
jae
movsb
in
jmp
fcoml
jmp
cmp
popf
mov
cmp
insb
xchg
or
call
xor
scas
in
int3
adc
ficompl
daa
movsl
pop
jbe
popa
xchg
lock
pop
add
lock
xchg
pop
and
add
add
loopne
xchg
add
loopne
jae
xchg
xchg
bound
jge
in
test
aad
or
testb
mov
fildl
outsl
add
movsl
outsl
or
in
shl
adc
fmul
aad
cmp
int3
std
cwtl
and
ljmp
out
arpl
adc
repnz
ficomps
inc
dec
mov
mov
rorb
sbb
jno
and
pop
fistpl
out
cmp
sub
daa
sbb
sub
and
addb
sub
mov
cwtl
in
mov
jne
xor
outsl
in
dec
and
or
decw
push
xor
inc
ret
xchg
imul
dec
aad
insl
push
imul
stos
scas
mov
les
push
and
and
pop
pop
pop
aas
aaa
jg
inc
clc
push
pop
lock
cs
fnsave
test
push
pop
jmp
pop
add
iret
jl
cmp
xchg
pushf
xchg
je
jae
shll
xchg
xchg
insl
idiv
and
jo
jl
je
pop
test
add
std
inc
pop
xchg
or
mov
push
mov
push
mov
cmp
xchg
adc
imul
sub
jnp
and
add
loopne
clc
add
inc
mov
jge
or
sub
mov
cmc
or
sub
dec
push
and
fnstcw
dec
cmp
fwait
mov
mov
shrl
cmpsl
outsl
orl
lahf
stos
sbb
insb
fistl
add
add
dec
sub
je
scas
pop
sarb
aaa
test
jae
into
lods
rcrl
pop
jle
lods
stos
push
mov
lcall
pop
mov
or
push
aam
dec
cmpb
pop
lods
xchg
sbbb
or
push
pop
push
bound
jle
pop
stos
loop
popf
loope
orb
ret
dec
inc
subl
mov
xlat
inc
cs
fldcw
fsubrl
mov
and
aam
or
fildl
push
add
pop
cmp
cmpsl
or
and
scas
and
stos
xor
das
dec
loopne
xchg
sub
xchg
mov
jl
divl
pushf
scas
out
stc
je
ljmp
mov
xchg
push
jae
jl
pop
cmpsb
mov
pop
push
jle
cltd
mov
mov
mov
test
gs
add
inc
or
sub
lock
mov
je
sbb
loop
scas
ret
call
jmp
int
sbb
or
iret
outsb
lcall
mov
lret
insl
lcall
dec
cmpsb
jecxz
sub
cltd
testl
sub
fbstp
mov
fnstsw
jo
xchg
jb
or
dec
mov
xchg
in
pushf
cmp
insb
adc
aaa
gs
dec
in
cmp
mov
xchg
jnp
rol
enter
mov
in
lahf
jnp
out
cs
shll
xor
lahf
pop
aad
jns
mov
inc
sbb
gs
insl
inc
out
nop
hlt
and
dec
hlt
pop
cmp
bound
gs
lahf
leave
insl
mov
jecxz
idivl
scas
orl
fwait
in
adc
inc
lea
and
rorl
jb
out
xor
xor
adc
add
ret
mov
test
xchg
jno
push
cwtl
sarl
push
push
xor
and
movsl
cmp
push
mov
adc
adc
lea
in
cmp
insl
or
mov
loopne
dec
ret
sbb
sbb
aaa
jg
add
sbb
rcr
sbb
aaa
cmp
leave
push
xchg
mov
jecxz
int3
gs
inc
cmp
ds
pushf
xor
xor
scas
push
push
sub
mov
ds
js
loope
and
push
pop
movsl
loop
pop
ss
push
les
sbb
popa
dec
leave
xchg
sub
and
sub
mov
mov
scas
in
outsl
scas
dec
sbb
daa
loop
pop
outsb
dec
xchg
repz
xor
add
call
adc
mov
mov
loop
xlat
fisttps
scas
mov
dec
sbb
cld
stc
cltd
xchg
cs
mov
cltd
cs
push
scas
adc
cltd
popa
das
stc
mov
jle
dec
shlb
and
xchg
adc
outsl
cltd
stc
jbe
dec
mov
lret
mov
mov
lds
repz
int3
jecxz
inc
imul
test
xchg
pop
out
xor
mov
cs
or
xchg
dec
test
xchg
add
xchg
fmul
sbb
mov
fldl
enter
mov
shll
add
and
clc
adc
xchg
mov
push
mov
mov
addr16
nop
mov
mov
jg
ljmp
dec
inc
repnz
stc
cs
or
enter
cli
mov
and
push
mov
fmulp
jg
sub
add
not
and
movsbw
mov
sub
mov
xor
mov
cmp
jne
movsbw
mov
sub
mov
xor
mov
cmp
je
mov
xor
mov
sub
add
jmp
mov
mov
mov
lea
mov
mov
mov
xor
add
mov
mov
mov
xor
add
pop
cmp
jne
mov
xor
mov
add
imul
mov
pushl
jmp
mov
add
mov
mov
mov
movsbw
mov
sub
mov
xor
mov
cmp
jne
mov
mov
mov
jmp
mov
cmp
jne
push
pushl
pushl
pushl
pushl
call
pop
pop
leave
ret
push
mov
push
movl
andl
mov
mov
mov
xor
add
mov
movzwl
and
mov
mov
sbbl
xor
adc
push
sub
mov
movzwl
sbb
mov
negl
add
xorl
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
pop
leave
ret
push
mov
push
andl
xor
add
inc
mov
cmpl
jne
pushl
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
sbb
push
movl
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
push
push
push
push
call
jmp
and
movl
movl
cmpl
je
cmpl
jne
push
call
cmpl
jne
xor
add
dec
mov
mov
dec
mov
jmp
mov
push
mov
mov
xor
xor
mov
add
add
imul
mov
jmp
mov
in
xor
mov
add
iret
and
pop
jl
in
mov
and
dec
ret
jecxz
cmp
jo
xor
popa
or
insl
icebp
aaa
fisttps
fwait
les
testb
mov
cmpb
adc
or
add
in
std
loop
movsl
jnp
cltd
mov
jno
adc
cli
xor
jo
pop
aas
mov
cli
std
jl
fstpt
iret
push
cmp
jno
mov
loop
fists
rorb
ret
mov
outsl
inc
fildl
popf
fdivrs
daa
gs
sbb
stos
mov
push
add
mov
dec
xchg
lret
roll
stos
jl
sbb
cmc
aaa
xchg
add
jbe
mov
out
in
shrb
loop
cmpsb
jo
mov
sti
aam
mov
pusha
addr16
gs
jno
outsb
mov
jecxz
hlt
sbb
mov
aad
ljmp
pop
sub
out
xor
lcall
in
ljmp
push
push
cmp
inc
inc
and
lcall
iret
cmp
jg
sbb
incb
mov
mov
lods
pop
sub
adc
into
test
loop
sub
mov
fldcw
clc
ss
out
pop
leave
testl
rorl
mov
mov
inc
push
fidivrl
imul
inc
stos
ret
add
mov
mov
or
mov
lret
inc
dec
jne
inc
mov
push
mov
les
pop
dec
je
add
mov
rorb
fisttpl
adc
cltd
mov
add
fnsave
icebp
fsub
push
incb
jge
rcrl
mov
pop
xchg
cmp
inc
xlat
jnp
rcll
call
pop
inc
pop
jb
mov
mov
sub
call
jle
jp
jb
mov
sbb
mov
or
sub
mov
pop
sub
hlt
js
add
repz
lods
ljmp
mov
scas
push
fwait
out
in
cltd
sub
loop
movsl
jg
rcr
push
lods
adcb
mov
push
clc
iret
jl
cwtl
xchg
pop
xor
push
and
fsubl
and
pop
and
popf
inc
adc
adc
xchg
jge
adc
iret
loope
add
sar
inc
mov
push
iret
scas
cmp
fsts
test
dec
icebp
pusha
dec
xor
icebp
sub
mov
lret
cmp
into
xor
xchg
mov
fwait
pop
outsb
outsb
mov
fcompl
es
cmpsl
ds
stos
test
sbb
bound
push
aas
mov
sbb
jle
jae
out
aam
push
push
dec
loopne
outsb
dec
cmp
jp
sysexit
inc
out
lds
xor
mov
out
stos
sbb
cmp
stos
lcall
hlt
pop
adc
cmp
fdivl
loopne
push
push
xor
mov
loop
pop
popa
fisubl
fbstp
into
or
xorl
xor
pop
aam
dec
dec
jmp
xchg
aam
int
clc
push
test
loop
aas
add
mov
fadd
ljmp
push
sub
rorb
inc
std
les
hlt
repnz
mov
aam
into
mov
xchg
push
in
int3
mov
call
push
shlb
inc
inc
into
adc
sti
mov
pop
shlb
out
inc
cmc
fwait
in
xor
out
leave
xor
or
push
sar
out
cmp
outsl
ljmp
adcb
jbe
lods
iret
jo
and
gs
cmpsl
xchg
pop
mov
adc
xor
test
ret
inc
pop
sub
mov
mov
shlb
xorl
scas
mov
adc
sbb
or
xor
cmpsl
dec
rol
inc
push
popa
or
jmp
and
inc
mov
inc
xchg
cli
mov
mov
pusha
jb
cmp
jae
out
inc
in
fimuls
les
xchg
add
cmp
push
dec
dec
lods
pop
dec
cld
sub
cmp
add
lret
mov
in
shlb
shrb
fimull
and
mov
add
sub
jno
add
les
lret
stos
notb
sahf
jg
icebp
xchg
pop
mov
leave
fnstenv
push
xchg
sbb
or
lcall
sbb
cmp
dec
mov
inc
pop
int3
push
fbld
add
sub
sahf
or
push
pop
jg
mov
mov
stos
push
lret
sbb
int3
pop
mov
jnp
les
mov
xor
lea
cmc
mov
popa
test
push
sub
pop
test
xlat
jle
xchg
xor
sbb
aad
sbb
xor
ud0
ret
ljmp
xchg
cmp
shrl
movsl
std
push
jae
push
dec
loop
mov
cltd
aaa
jne
dec
inc
clc
cwtl
cmp
and
push
mov
and
xchg
inc
ja
sarl
les
iret
jp
xchg
js
dec
ss
pop
jecxz
sbb
mov
in
inc
cli
pop
adc
test
pop
and
mov
jo
sahf
push
mov
pop
cmp
movsb
pop
insl
fistl
pop
aam
pop
cwtl
out
mov
dec
lret
cmp
cmp
xor
sub
aas
pop
test
mov
imul
mov
sub
fidivrs
lods
addl
lock
mov
iret
lahf
mov
mov
xlat
loopne
adc
mov
mov
xchg
cmc
mov
xor
hlt
scas
fldenv
sbb
loopne
test
mov
mov
mov
sarb
call
mov
icebp
add
dec
lret
std
xor
cwtl
ljmp
or
jmp
jo
mov
aad
inc
inc
jecxz
mov
ret
xchg
or
aaa
iret
sbb
pop
xchg
leave
nop
jae
and
dec
lods
dec
aam
push
jbe
leave
test
jae
mov
test
icebp
adc
scas
mov
std
mov
dec
sbb
test
xchg
mov
adc
xchg
aam
in
ret
movsb
and
test
std
push
sub
enter
scas
xor
fwait
int
cs
push
rorb
scas
sbbb
or
or
std
jl
adc
add
aad
cmp
test
push
shl
push
xor
mov
ds
stos
xchg
in
cwtl
adc
mov
mov
add
outsl
js
insb
fsubrl
pop
imul
gs
sbb
lret
lcall
cmp
hlt
cmp
inc
mov
mov
adc
movsb
dec
inc
inc
test
sub
mov
push
xchg
xchg
sub
pop
pop
es
xor
or
pop
cmpsb
sbb
sti
std
loopne
dec
mov
icebp
xchg
xchg
sbb
sub
daa
mov
dec
sub
out
loopne
cmpsb
xchg
cmp
mov
test
inc
sub
dec
inc
test
cmp
jnp
cmc
sarl
mov
xor
lret
inc
test
add
dec
mov
in
jne
aam
inc
insb
hlt
ljmp
jbe
aad
daa
jb
out
mov
bound
or
in
fdiv
and
lds
out
inc
in
inc
outsb
test
xor
sbb
jle
pop
loope
dec
out
cmp
mov
sub
clc
std
mov
sbb
daa
ja
mov
push
pop
addr16
jmp
subb
xchg
inc
sub
and
aas
xchg
mov
dec
inc
xor
mov
or
push
adc
pop
iret
cmp
loopne
inc
insl
jg
dec
insl
cmp
add
notl
pop
test
push
shrb
fcomp
dec
mov
cs
mov
pop
negl
test
divl
aas
pop
xchg
jb
lcall
push
dec
cmc
insb
pop
fldcw
ja
enter
out
sbb
les
jge
mov
mov
mov
out
in
enter
std
pop
mov
xchg
repz
lock
imul
movsl
sub
dec
mov
mov
stos
xchg
adc
popa
pusha
add
movsl
sbb
outsb
ficompl
fidivrl
sub
js
std
pop
cs
imul
dec
dec
fistl
outsl
fmuls
inc
add
push
popa
mov
subb
scas
xchg
ss
or
mov
fadds
dec
or
push
or
rclb
jle
cli
vmovdqa
ficompl
push
stc
mov
mov
andl
test
or
fucomi
je
and
cmp
sti
es
js
and
insb
stos
lret
rcrb
insl
and
clc
dec
cmp
dec
adc
out
icebp
pop
movsl
xchg
xchg
aas
loop
dec
dec
jae
jno
clc
ret
in
lods
inc
jmp
lods
inc
jo
out
cmc
inc
sub
in
insl
insl
or
cmp
pop
cmp
push
fcoml
dec
popf
xchg
in
mov
roll
sub
repz
pushf
clc
in
adc
sahf
xor
or
or
or
mov
dec
aaa
repz
filds
cmpsl
icebp
subl
popa
xor
inc
movsl
imul
ljmp
adc
cmp
adc
mov
pusha
cmp
in
in
test
add
adc
hlt
inc
pop
out
out
stos
and
pop
mov
fwait
lcall
stc
fwait
aaa
je
add
mov
mov
pop
mov
adc
mov
add
fmull
ds
sub
out
addr16
mov
cli
mov
insl
sub
outsl
hlt
xor
call
aas
test
lea
xorb
add
adc
dec
test
cmp
push
mov
icebp
divb
lret
test
pusha
dec
push
dec
outsl
pop
sbb
fwait
pop
loop
mov
dec
and
out
push
mov
stc
ror
mov
cmp
push
adc
pop
or
or
mov
push
pusha
lock
sbbb
add
out
sahf
bnd
mov
sar
jmp
adc
addr16
push
insb
hlt
mov
movsl
mov
xchg
out
sbb
mov
xlat
test
pop
mov
adc
fistl
mov
ljmp
daa
out
cmp
pop
pushl
movsb
cmc
xchg
add
imulb
mov
push
scas
cwtl
jnp
mov
sti
or
aaa
ljmp
shll
cwtl
mov
sub
test
shll
in
push
adc
sub
inc
adc
je
fistps
add
cwtl
mov
in
mov
sbb
mov
ljmp
xchg
cmp
xor
push
pop
and
out
testb
das
jp
int
jnp
and
outsl
push
inc
xchg
ficoml
mov
addr16
dec
lock
sbb
pushf
mov
cmpsb
add
push
js
sub
fs
xor
jb
mov
cmp
scas
int3
or
stc
push
fs
sbb
sar
ds
push
ss
dec
in
push
xchg
dec
clc
push
sub
xor
pushf
cltd
int3
cmp
jle
aas
daa
adc
xor
loope
add
pusha
pop
and
lahf
pop
out
stc
xor
push
xor
cmpsb
sub
jnp
std
mov
jnp
and
jecxz
ret
and
das
in
lds
test
in
sub
arpl
decb
or
scas
rolb
popa
push
cwtl
jecxz
cmp
jo
push
test
push
aaa
jo
outsl
dec
call
add
dec
xor
dec
movsl
clc
mov
sub
subl
mov
add
loope
fiaddl
ss
mov
mov
inc
or
or
mov
les
jecxz
cwtl
or
sub
dec
cmp
fcomps
jmp
jmp
inc
sarl
inc
dec
push
incl
mov
hlt
sbb
dec
popa
pop
xor
jmp
or
jle
mov
adc
mov
in
std
push
push
cmpb
fisubs
mov
lret
or
hlt
je
inc
sbb
jecxz
jb
push
comiss
and
mov
movsb
cmp
pop
mov
pcmpgtd
pop
pop
fstpl
pop
jae
pop
lds
ret
sbb
cmpb
int
inc
movhps
cmp
daa
push
cmpsb
rorb
mov
mov
aad
aad
dec
and
cmc
inc
dec
adc
inc
add
sub
sub
jl
xchg
mov
xchg
jo
lock
jp
movl
inc
mov
icebp
mov
jns
shlb
cmpsb
xor
mov
pushf
pusha
pop
in
insb
mov
mov
push
pop
mov
xchg
pop
roll
es
out
out
add
or
sbb
add
rclb
mov
sub
cmp
mov
xlat
pusha
push
lods
inc
adc
cmp
push
mov
das
gs
movsb
pop
hlt
out
jp
popa
push
sub
cli
xlat
insl
sub
dec
add
in
das
jno
adc
adc
ss
or
shlb
xchg
push
fs
cmpsl
movsl
jo
rorl
xorl
mov
lcall
sbb
mov
xor
xor
stos
shrb
jno
imul
cld
adc
cmpsb
pop
jp
movsl
cmp
pop
sub
sub
addr16
rclb
mov
in
jae
sub
ljmp
xor
dec
xlat
sbb
cmc
ja
fists
nop
je
stos
scas
test
ret
jecxz
ret
ljmp
mov
add
sbb
or
inc
or
es
mov
mov
xchg
rorb
mov
xchg
test
pop
mov
push
inc
out
push
adc
jp
push
aaa
mov
addb
xor
jbe
fucom
dec
push
sub
mov
add
lods
jns
xchg
push
xchg
mov
mov
nop
dec
fsubrp
jmp
jno
js
jmp
xchg
loope
xlat
adc
pop
lcall
adc
mov
mov
push
jge
movsl
jns
sub
jmp
add
mov
gs
xlat
int3
jns
push
push
push
sbb
stos
jmp
cs
out
enter
cmp
sti
mov
clc
mov
jmp
mov
fidivs
inc
pop
cmp
negl
inc
xor
and
pop
int3
flds
push
cld
xchg
outsb
and
loopne
fcmove
popf
push
ljmp
xor
xchg
sbb
push
xchg
push
cmpb
int
mov
cwtl
es
jno
cmp
xor
popa
sahf
add
fsubr
out
fcomps
dec
xchg
xchg
cs
mov
ret
pop
outsb
std
jp
or
pop
andps
xchg
in
sub
jmp
mov
or
pusha
outsb
sub
push
mov
sub
adc
or
xchg
jbe
pop
jp
jae
test
das
shr
hlt
mov
imul
push
add
fwait
dec
inc
cwtl
jne
addr16
hlt
cltd
jg
lcall
hlt
popa
add
sar
dec
ficoms
in
cmp
loopne
fstl
sub
js
cmpsb
stc
hlt
push
sbb
add
dec
test
js
xchg
sbb
imul
pop
std
js
rol
jmp
test
loopne
or
mov
xchg
mov
ljmp
xor
test
jb
sbb
xchg
andl
outsl
hlt
ljmp
fldcw
sub
add
dec
daa
push
add
lea
sbb
out
xor
fists
cmpsb
lcall
inc
fisttpll
push
dec
adc
mov
mov
bound
ret
xor
out
xorl
in
add
stos
stos
xchg
push
jge
mov
and
lods
and
push
pop
mov
mov
stos
mov
test
xor
mov
mov
inc
insl
sahf
xor
jno
jmp
pop
push
stc
jnp
xchg
rcll
push
into
pop
cmp
mov
xor
dec
jb
push
pop
pop
std
adc
push
push
push
out
sbb
xchg
rorb
push
outsl
mov
rcrb
mov
cmc
jp
fnstenv
std
in
outsl
insl
sbb
xchg
mov
sbb
sub
ds
sbb
pop
insl
lahf
cmc
int3
push
xchg
xor
xor
sbb
stos
cmp
test
das
or
icebp
ds
in
sbb
push
xchg
mov
xor
adc
testb
xchg
pop
cmp
in
repnz
mov
sahf
sbb
decl
pop
arpl
mov
shlb
jp
xchg
ret
repnz
fwait
mov
lahf
mov
pop
pushf
imul
or
mov
sbb
ss
leave
cs
dec
mov
mov
cmp
jge
jno
sub
pop
jl
cmp
pop
stc
loop
xlat
scas
inc
add
and
ss
sti
outsb
xor
das
ret
add
aas
daa
jge
sarb
dec
out
sub
sbb
mov
jnp
scas
xor
mov
mov
in
jmp
jae
nop/reserved
jo,pn
addr16
rcll
cmc
jns
inc
sti
cmp
add
lret
loop
jb
mov
mov
popa
push
jmp
cmpsb
pushw
mov
daa
test
outsb
ja
pop
pushf
xor
and
lea
aam
mov
jo
dec
sbb
add
popf
pop
sub
lret
mov
cli
add
cmp
sbb
pop
add
icebp
push
push
cmp
mov
lahf
fs
and
shlb
cmpsl
mov
test
and
dec
shl
jl
mov
iret
or
push
jne
insb
enter
jge
mov
stc
sbb
mov
pop
mov
fs
testl
jae
xor
adc
test
mov
dec
xor
or
adc
push
cmp
and
push
mov
nop
push
mov
mov
and
ret
mov
loope
das
add
and
dec
sbb
jl
les
sarl
in
shlb
inc
push
adc
inc
mov
fwait
imul
insl
xchg
jp
xor
push
and
mov
sbb
mov
stc
sbb
movsb
fs
push
mov
mov
sub
inc
jle,pt
mov
mov
lcall
enter
dec
add
outsl
jb
cmp
and
jb
es
inc
sti
divb
fsubrs
mov
adc
js
imul
mov
add
int
cld
mov
adc
xchg
lea
movsl
int3
or
mov
outsl
inc
xor
mov
add
push
push
and
movsl
push
jg
out
arpl
in
daa
aaa
sub
lods
adc
jecxz
inc
dec
lahf
pop
dec
mov
js
jbe
adc
mov
or
in
pop
dec
dec
je
lcall
iret
mov
repz
add
lahf
adc
adc
dec
popa
mov
pop
sub
pop
fs
leave
icebp
or
adc
and
mov
leave
mov
js
sbb
cmp
dec
xor
dec
sub
adc
test
ds
aad
stc
dec
fdivrp
jae
sbb
push
cltd
pop
imul
sti
f2xm1
pop
pop
jne
sub
or
dec
icebp
popf
push
or
inc
test
mov
add
js
dec
dec
push
jns
xor
push
sbb
dec
xchg
lahf
inc
mov
cmp
xchg
xchg
addr16
inc
outsb
sub
lds
mov
mov
fimull
or
or
test
lret
shl
fs
movsl
mov
addr16
push
jg
int
fucom
rcrb
out
andb
jmp
in
hlt
mov
xor
mov
cltd
repnz
pop
or
xor
testl
push
xor
mov
adc
xor
jae
add
mov
jle
imul
rcrb
push
popf
leave
movsl
xlat
ss
daa
dec
ljmp
pop
mov
xor
lock
stos
rol
lea
xchg
std
add
mov
sub
loopne
sub
int3
cmp
stos
pop
sbb
xor
cmp
aad
xchg
pop
std
mov
xor
repnz
pushl
or
popf
xchg
arpl
push
push
pop
xchg
enter
out
pop
call
xchg
imulb
sub
mov
pop
int
push
stos
cli
jo
cmp
popa
rorb
daa
out
loopne
mov
xchg
jo
popa
ss
push
jecxz
adc
add
mov
inc
pop
jae
iret
gs
jg
sahf
ficomps
movsl
mov
sub
movsb
mov
lods
cmp
sub
dec
xor
fwait
pop
inc
lods
and
or
mov
sbb
sub
add
test
enter
into
push
adc
xchg
jle
popa
in
mov
xlat
mov
adc
lret
pop
dec
inc
sub
jae
fisttpl
push
push
imul
cmovge
mov
push
mov
fstpt
jbe
mov
jmp
xor
xorb
inc
repz
cmp
fnsave
sbb
stos
in
cmp
pop
or
rorb
pop
mov
es
xor
out
jecxz
xchg
xchg
pop
mov
pop
push
hlt
pop
pop
stc
je
aad
add
aam
dec
shrl
gs
xchg
jne
scas
ds
out
mulb
mov
adc
sbb
cmc
subl
sti
addr16
jg
mov
push
pushf
and
aaa
fbld
pop
lods
test
ljmp
push
jmp
jg
dec
mov
or
pop
sub
inc
pop
mov
inc
addr16
inc
push
dec
add
jb
push
cmc
add
sti
mov
or
js
mov
push
push
mov
xchg
inc
jb
shrb
or
inc
ret
pop
dec
dec
mov
ret
xchg
xchg
data16
jo
push
sbb
jle
pop
sub
mov
push
lods
and
jmp
fldt
outsl
loope
cmc
sub
jmp
in
rcl
mov
mov
or
jle
loopne
mov
xchg
test
cmpb
leave
jmp
out
or
add
lock
test
enter
or
stc
test
add
pop
negb
inc
outsb
pop
push
cltd
mov
dec
sub
shlb
adc
loopne
add
inc
inc
cmc
fsub
lret
lret
dec
push
fnsave
pushf
lods
or
jp
xchg
loope
cmpl
inc
test
inc
or
cmp
enter
loopne
aas
xchg
jge
mov
loope
scas
and
pop
fxch
outsl
pop
push
sub
dec
cld
or
movsb
repz
dec
pop
pop
inc
lock
and
and
cmp
fsubr
arpl
sub
insl
xor
mov
mov
sti
adc
in
lret
das
add
loopne
loop
std
inc
sub
adc
add
jle
jle
dec
and
add
xor
iret
dec
pusha
cmp
ja
call
sti
pushaw
jl
fcompl
cmp
push
xchg
leave
push
mov
popa
aam
aad
mov
cmp
dec
xchg
xorb
mov
in
sub
mov
pop
fmul
test
out
jo
sub
or
xor
sbb
ret
cli
lret
xor
lret
push
mov
push
icebp
jle
or
fwait
iret
push
mov
imul
jmp
add
xlat
out
xchg
mov
lahf
lret
mov
jo
push
ficoml
pop
leave
mov
xor
shrb
and
adc
pop
scas
fnstsw
push
popa
mov
xchg
leave
shr
xor
cltd
cmpsl
jno
es
sbb
sti
outsb
sbb
aad
pop
subb
or
xchg
jno
test
mov
cmp
mov
lds
addb
dec
mov
ss
jnp
jb
shl
dec
int3
cwtl
mov
pcmpgtw
and
xchg
pop
leave
or
repnz
pop
lret
mov
sbb
and
inc
and
push
xchg
ljmp
lock
inc
inc
movsb
stos
mov
bound
jnp
xlat
in
push
bound
test
adc
sbb
push
xchg
movsb
daa
les
jb
jo
dec
or
outsb
fcmovnu
jle
fsub
mov
inc
shlb
aad
xchg
stos
xacquire
mov
xor
loopne
ficoml
aad
cmovl
ljmp
sbb
imul
inc
aad
scas
cmp
iret
jne
add
int3
xor
push
je
mov
loop
push
jp
inc
mov
adc
adc
mov
fisubrs
std
cli
or
xchg
jae
sub
popa
fnstsw
or
cli
jmp
aam
inc
inc
mov
jge
int3
iret
or
dec
sbb
push
pop
xor
inc
mov
push
jae
mov
add
add
adc
shl
jnp
push
mov
out
out
cli
push
xchg
dec
jmp
dec
dec
mov
lret
sub
loopne
or
test
stos
insl
mov
nop
mov
push
outsl
dec
aaa
pop
adc
jg
or
sbb
sub
sbb
jmp
jne
sti
cli
pop
or
jo
test
int
ja
xchg
fisubl
cs
or
mov
add
icebp
stc
addr16
add
push
sar
xchg
pusha
and
mov
and
or
xor
push
sub
pop
scas
mov
addr16
mov
in
jle
mov
mov
xchg
adc
fisubl
adc
cwtl
jmp
rclb
shl
push
lret
pop
jecxz
cltd
mov
and
rcrl
pop
jne
movsl
xlat
inc
cmp
movsb
shlb
ljmp
clc
jmp
xchg
add
mov
rorb
mov
cmpsl
pushf
sub
hlt
arpl
sub
popa
or
jb
sub
xor
sub
add
and
aad
mov
iret
mov
fwait
inc
pushf
mov
dec
ds
fwait
insb
lods
fsubr
arpl
or
insl
lret
cmp
clc
jmp
iret
repz
pop
sti
lock
cmp
pop
sbb
test
xor
mov
cld
and
and
xchg
test
xlat
data16
or
call
jns
aad
loopne
push
lods
cmp
jmp
xor
rcrb
jae
ret
daa
inc
js
and
gs
jmp
cmpsb
mov
pop
call
mov
lea
mov
cmp
jo
loop
inc
icebp
aas
add
mov
or
inc
cmc
lea
mov
push
mov
sbb
test
xchg
and
mov
popa
mov
cwtl
sbb
push
sahf
pop
adc
in
vpmadcsswd
stos
rcrl
sbb
cmp
subl
and
or
push
inc
xchg
test
in
jge
and
dec
sbbb
cmp
pop
pop
repnz
cs
lds
and
movsb
leave
inc
and
xchg
leave
mov
dec
xchg
and
cli
and
jp
popf
lods
adc
lods
mov
inc
lods
dec
lds
orb
mov
cmp
insl
movsl
iret
cmp
jmp
scas
xlat
leave
hlt
gs
xchg
or
adc
and
sar
adc
hlt
les
jae
jecxz
movsb
test
xchg
lods
shlb
push
mov
push
lcall
mov
inc
fs
mov
sub
imul
jbe
xor
inc
jb
addr16
jno
mov
jp
aaa
push
lods
mov
vmwrite
ljmp
mov
xorl
fwait
loope
jbe
addl
test
push
jo
inc
shl
and
mov
lods
push
xor
mov
sub
and
push
mov
lret
inc
jmp
push
mov
add
mov
enter
adc
xor
dec
ret
mov
loope
xchg
inc
sub
lock
fstps
cvtps2pd
xor
add
cmp
dec
jmp
or
lds
pop
cmpsb
sbb
jns
cmpsb
jge
push
popf
daa
jnp
dec
stos
cwtl
xor
xor
fisubrs
hlt
or
mov
and
sbb
leave
sub
loopne
bound
insb
sbb
mov
mov
xchg
jbe
mov
lods
adc
and
mov
outsl
cmp
cltd
ficoms
iret
outsb
xlat
sahf
gs
mov
add
popa
shrl
popf
out
das
lret
mov
mov
sub
inc
cmp
xchg
sbb
inc
xchg
nop
push
dec
jmp
ret
fldl
popf
xchg
jns
divl
jnp
push
fldln2
notb
lds
push
cmc
cmp
and
dec
iret
sti
push
das
xchg
mov
cmp
mov
popf
jnp
mov
insb
dec
pop
fcomps
scas
dec
jno
mov
shll
es
mov
cmc
bound
aaa
xchg
dec
xchg
and
dec
and
push
add
test
inc
lods
aaa
dec
sbb
jae
ljmp
mov
fwait
nopl
pushf
cmpsb
inc
sub
inc
dec
jb
int3
mov
leave
xor
jmp
push
les
fmuls
pop
push
pop
movb
sub
push
add
in
repz
mov
rcrl
fiadds
inc
sub
pop
addr16
shr
adc
mov
ret
push
xor
xchg
data16
pusha
add
lds
test
xor
sub
sbb
xchg
cmp
negl
mov
pusha
push
int3
repnz
jmp
pop
mov
sbb
cli
inc
sub
mov
cli
pop
sbb
lods
roll
data16
cwtl
adc
out
repz
int3
xchg
and
jbe
fcmove
mov
xchg
xor
dec
std
cli
inc
or
inc
mov
test
lock
cmpl
sbb
fldenv
push
pop
ja
xchg
xor
cmp
add
arpl
cmpsl
jg
pop
in
inc
mov
stc
push
iret
rcrb
dec
push
inc
ja
dec
xchg
xor
xchg
aam
mov
push
mov
fwait
jl
jmp
into
stos
in
scas
cmp
jo
ss
imul
mov
inc
imul
repnz
mov
cmp
scas
mov
add
stos
adc
mov
cmp
lcall
pop
stos
daa
movsb
xor
notl
mov
xor
fwait
mov
sbb
int3
pusha
jae
lods
inc
cmpb
ret
xor
movsl
dec
xchg
and
fadd
lds
inc
arpl
xchg
mov
adc
scas
jg
repnz
xchg
jno
data16
lea
mov
sahf
test
jb
in
in
shll
cmp
dec
dec
loope
mov
sub
lahf
lahf
sub
shll
and
push
pop
mov
mov
leave
push
add
lds
mov
mov
fs
cli
stc
incl
in
mov
xchg
sbb
fs
cmp
jne
mov
mov
xor
xor
add
add
imul
jmp
mov
mov
mov
mov
mov
xor
xor
add
add
imul
mov
cmp
mov
je
xor
add
mov
imul
add
mov
mov
pop
leave
ret
push
mov
sub
sbb
mov
xor
xor
sub
mov
add
movl
or
mov
push
mov
add
xor
movl
cmpl
je
cmpl
jne
push
call
mov
dec
mov
jmp
add
mov
negl
push
mov
adcl
add
cmp
movl
je
mov
mov
xor
xor
adcl
add
add
adc
negl
xor
mov
push
movzbl
adc
xor
xor
mov
and
mov
add
movl
adc
addl
xor
movl
xor
movl
cmp
movl
jne
movl
cmp
je
jmp
mov
andl
xor
xor
inc
mov
cmpl
jne
push
pushl
call
cmpl
jb
mov
mov
xor
add
mov
imul
mov
xor
add
mov
mov
mov
mov
xor
xor
add
adc
lea
xor
xor
xor
mov
add
adc
xor
xor
cmp
jne
cmp
jne
mov
pop
pop
pop
leave
ret
push
mov
sub
sbbl
mov
andl
mov
inc
mov
cmpl
jne
pushl
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
movl
cmpl
je
cmpl
jne
pushl
push
pushl
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
xor
notl
mov
adcl
add
movzwl
mov
mov
sbb
movb
add
lea
xor
mov
addl
mov
mov
orl
xor
andl
sub
andl
mov
movl
or
push
jmp
and
add
mov
push
jl
pop
pop
jl
mov
push
or
adcl
sbbb
xchg
in
adc
movsb
jne
or
nop
fsubrs
or
cwtl
loop
or
pusha
mov
push
dec
int3
dec
dec
mov
fwait
imul
inc
fadds
push
call
jmp
dec
aad
jo
call
sbb
scas
pusha
mov
in
mov
xor
push
ja
mov
adc
jo
lea
mov
imul
lds
dec
fdivrl
lods
sahf
pop
cmpsb
push
call
pop
out
icebp
pushf
lahf
xchg
and
jle
pop
pop
sbb
push
stc
mov
mov
and
insb
std
cwtl
xlat
mov
sub
in
ja
adc
add
inc
add
in
mov
movsb
shlb
or
cmp
jns
pop
incl
sbb
adc
pop
repz
xlat
jecxz
inc
xlat
jle
lret
stos
loopne
cmp
sbbb
fisubrl
push
or
push
loop,pn
sub
push
jo
cmp
jbe
dec
push
sarl
pusha
jge
pop
mov
inc
push
inc
sbb
mov
mov
int
push
jne
adc
lahf
ja
notb
subb
movsb
push
iret
adc
push
jl
push
jge
stc
add
xchg
cmp
xchg
xchg
repnz
pop
mov
xor
negb
int3
add
fcmove
mov
imul
sbb
adc
rorb
or
lahf
je
push
into
dec
fisubs
cli
cmp
jb
cmp
icebp
pop
mov
xor
pop
es
jo
lods
or
xor
repz
adc
xchg
in
jbe
and
jo
out
inc
sub
push
add
scas
test
mov
push
repz
dec
out
aaa
pop
aaa
pop
mov
or
dec
lds
test
out
pop
and
or
xor
icebp
leave
push
out
mov
dec
nop
movsl
mov
mov
js
mov
or
out
sbb
or
into
mov
inc
or
out
testb
enterw
jne
sub
lahf
enter
cmp
xor
sbb
mov
ficomps
sub
or
lock
inc
cltd
mov
dec
andnps
popa
mov
stos
pop
test
ja
xor
sbb
test
aas
clc
xor
add
mov
dec
das
mov
or
xor
gs
inc
and
repz
bound
xlat
loop
mov
dec
inc
imul
or
mov
adc
and
addl
inc
scas
and
mov
mov
and
outsl
idivb
sub
xchg
xchg
add
sti
es
daa
cmp
stc
fidivl
inc
add
jecxz
in
cmpsb
pop
outsb
jb
insl
inc
addr16
cmpsl
icebp
aaa
inc
jnp
cld
outsl
rcll
lea
test
inc
les
ds
daa
rcrb
jnp
jg
adc
fwait
sub
mov
ror
sbb
cmp
mov
sub
inc
pusha
jle
push
sbb
xchg
push
sahf
jg
xor
inc
insl
sbb
xchg
fisubrl
inc
pop
pop
xor
clc
scas
mov
mov
pusha
sbb
inc
popf
push
pop
push
pop
arpl
cmp
fmul
mov
or
ret
ret
xchg
adc
and
lret
out
mov
and
int3
dec
xor
clc
repz
mov
fdivs
roll
shll
cmpsl
push
fwait
repz
pop
iret
imul
cmpl
jmp
aad
clc
sub
fs
and
push
mov
lret
addps
cwtl
daa
pop
aad
jl
jge
dec
jp
pop
les
xlat
inc
sub
inc
in
rcrb
mov
pop
lcall
add
imul
rorl
xchg
or
fs
push
out
ljmp
jmp
jno
ja
or
add
pusha
sarb
adc
mov
add
mov
out
hlt
or
jnp
dec
imul
xchg
cmpsl
icebp
adc
popa
cmc
or
sbb
addl
lea
arpl
fadd
jp
js
sarl
in
out
imul
dec
dec
xor
scas
inc
dec
xchg
xchg
and
cltd
out
xchg
dec
mov
xchg
push
aad
mov
ret
fdivrs
sub
fs
mov
minps
ds
lock
pop
jge
mov
icebp
and
out
sub
stc
test
mov
mov
jle
mov
ljmp
mov
out
outsb
in
aad
out
push
push
pop
cmp
out
push
cld
jae
repnz
insl
test
popa
movsb
inc
mov
xor
mov
sbb
in
push
insb
mov
sub
cltd
fildll
sti
pop
clc
jmp
rclb
jnp
pushf
iretw
xchg
jle
pop
daa
pop
jg
fxch
jecxz
xlat
and
sbb
repz
popa
pop
jo
std
jge
sbb
sbb
dec
lret
sub
repnz
int
push
sbb
cltd
cld
movsl
mov
xchg
xor
test
fwait
lds
movsl
jl
push
mov
lods
sbb
int3
cs
pop
scas
fs
sub
movsb
pop
jg
jno
out
and
lea
adc
orb
dec
loopne
fadds
or
xchg
cltd
fimull
push
loop
push
pushf
jmp
push
repz
mov
test
sbb
xchg
xchg
sbb
repnz
sahf
out
in
adc
add
lret
mov
outsl
adc
or
adc
sub
jl
inc
adc
pop
sbb
push
mov
inc
jge
pop
and
and
clc
in
shl
mov
mov
cs
nop
sbb
and
pushf
push
mov
mov
fnstenv
popa
testl
nop
dec
pushf
inc
pop
jne
add
xchg
add
xor
rol
pop
test
pop
inc
icebp
sahf
adc
push
fwait
and
mov
rolb
rolb
scas
adc
pop
dec
pop
js
jns
insb
add
shlb
cmp
ret
lods
hlt
and
jl
imul
sub
out
fwait
adc
scas
dec
add
jp
adc
lret
pop
lcall
ja
in
imul
cmp
xor
pop
lret
pop
shrl
arpl
out
jb
notl
popa
lcall
cmpsb
xchg
movsb
insl
xchg
addb
nop
mov
xor
ret
pop
je
cmc
jmp
adc
xchg
pop
call
loop
movsl
dec
lret
inc
dec
lea
add
cmp
stc
cwtl
fnstenv
or
push
lret
clc
test
mov
bound
xchg
jecxz
cmp
rolb
xchg
push
packssdw
arpl
aas
dec
mov
test
pop
rclb
lock
mov
arpl
push
imul
fcomps
xor
outsl
daa
inc
shr
dec
inc
fistl
inc
cmp
fbld
sbb
mov
mov
sbb
mov
les
sub
pop
minps
cmpsl
aaa
push
enter
mov
jp
and
sbb
and
or
sti
jecxz
lods
pop
test
clc
mov
insl
pusha
ss
mov
psllq
jmp
aaa
jg
out
enter
xchg
cli
mov
jmp
push
xchg
hlt
leave
shl
inc
pop
sbb
fists
jae
push
inc
lret
std
mov
in
fnstenv
cmpsb
mov
push
mov
addr16
jle
jne
in
outsb
sbb
mov
cmp
dec
jb
adc
jl
sbb
dec
mov
cmc
mov
mov
stos
xchg
dec
mov
scas
out
rclb
stc
xor
gs
push
fwait
jp
daa
adc
pop
inc
pop
cltd
pusha
fisubs
sahf
fidivl
fsubrs
inc
sub
jp
ja
pop
mov
or
jae
bound
lock
lahf
aas
fbstp
in
ret
push
add
cmc
sbb
sti
int3
adc
dec
sub
pop
xchg
adc
sbb
inc
mov
mov
push
pop
popa
jmp
xchg
adc
movsb
ret
in
fists
xchg
dec
adc
scas
or
movsb
into
pushf
push
movsb
mov
mov
mov
push
adcb
sub
mov
imul
mov
or
mov
ljmp
out
xchg
xor
xchg
btr
lock
mov
pop
shr
and
test
add
fidivrl
mov
inc
xchg
dec
lds
add
xchg
cmp
xchg
xchg
or
fdivrl
sub
mov
repnz
adc
xchg
and
pop
movb
test
cli
scas
mov
pop
push
in
arpl
repz
aad
and
dec
ss
add
fsubr
mov
fdiv
xor
adc
push
inc
aam
in
cmp
cmpsl
in
lock
mov
jo
inc
dec
ljmp
xchg
add
lods
call
jnp
out
sahf
push
mov
clc
jne
add
cwtl
leave
sahf
loop
jno
mov
pop
jp
jo
jae
cltd
fldl
js
sbb
repz
in
jnp
mov
aam
dec
fimuls
mov
aad
je
out
mov
or
pop
int3
or
jmp
loope
mov
out
mov
orl
or
xor
mull
pop
mov
mov
loope
daa
inc
push
sbb
jno
add
cmp
push
xor
inc
pop
cwtl
or
mov
adc
push
mov
dec
out
sub
outsl
inc
gs
fwait
xor
jp
sbb
jg
or
hlt
fsubrs
les
in
dec
and
arpl
out
xor
bound
fwait
inc
xchg
je
xor
and
xchg
or
push
scas
pop
jecxz
pop
xchg
dec
in
jmp
stos
mov
inc
mov
loope
adc
adc
sbb
test
cli
mov
mov
rorb
xor
push
les
into
inc
adc
sbb
inc
test
test
jns
pop
cmpsb
mov
jno
mov
cltd
icebp
shrb
psubb
pop
sbb
push
push
jno
inc
sbb
aaa
ret
in
cmp
sub
add
notb
dec
push
add
sbb
xchg
loope
dec
in
dec
jbe
dec
mov
shrb
mov
es
or
mov
out
fwait
iret
es
shl
jge
jb
pop
jg
fwait
push
pusha
scas
out
sbb
xchg
sahf
mov
outsl
jle
pushf
sub
leave
mov
cli
xor
fsub
mov
pop
test
aas
xor
mov
int
xor
bound
in
ja
sbbb
rorl
adc
adc
or
dec
xor
scas
addr16
orb
mov
push
in
sarb
pop
sub
mov
and
int3
js
in
sub
fidivrs
or
sub
loop
in
sbb
imul
pop
add
mov
test
add
das
push
xchg
pop
mov
out
mov
sbb
popa
xor
sub
mov
jmp
jl
xor
inc
mov
pop
dec
mov
jbe
jo
mov
aaa
and
or
adcl
and
aam
mov
flds
or
or
pop
lea
mov
push
ret
test
or
cmp
pop
or
dec
and
lahf
mov
negl
push
xor
adc
cmp
pop
pop
ljmp
inc
fisubl
scas
clc
xchg
jmp
fwait
repnz
pusha
imul
mov
inc
in
dec
add
aas
inc
mov
push
dec
and
xchg
jl
push
push
jae
xor
shll
inc
in
lods
sti
push
xorb
jge
mov
nop
pop
clc
xchg
repnz
fs
xchg
lea
lcall
xchg
dec
dec
inc
add
ret
jge
dec
dec
jle
adc
iret
xchg
jb
cmp
or
popf
insl
mov
lahf
mov
fmul
aaa
out
xor
xchg
cmp
out
cwtl
inc
push
cmp
xor
jno
mov
adc
push
xor
pop
test
rorl
mov
pop
adc
cltd
mov
xor
int3
sbb
repnz
repz
insb
push
sub
mov
mov
xchg
pop
rcll
lods
mov
dec
pop
xchg
or
dec
in
push
in
mov
jmp
mov
add
adc
dec
pop
inc
jle
inc
into
enter
ljmp
jno
ja
pop
xor
and
sbb
iret
sbb
xorl
push
fsubl
xchg
out
fnstsw
ja
inc
xchg
mov
sti
int3
fs
test
stos
jecxz
ficomps
xor
loopne
jns
xor
bound
or
mov
sub
insl
scas
je
ja
aad
into
pusha
pop
pushf
and
cltd
aam
jnp
sahf
add
push
cmp
idivb
mov
mov
addr16
rcl
sub
das
pop
sub
sahf
lock
test
mov
test
mov
jbe
add
lods
lds
loopne
out
movsb
lds
cmp
hlt
movsb
repnz
in
popa
mov
adc
scas
arpl
and
out
jmp
ss
sbb
jne
daa
mov
jno
pop
sahf
out
pop
mov
pop
cmp
mov
aaa
push
mov
ja
or
cmp
mov
cwtl
inc
mov
in
and
mov
inc
inc
push
push
nop
cltd
iret
cld
movsl
push
fdivs
cmp
or
in
loope
mov
ljmp
and
lea
icebp
add
inc
imul
out
out
jle
xor
add
repz
fs
push
cmc
dec
in
cmp
out
xlat
sbb
movsb
jle
in
out
mov
loopne
fsts
pop
and
ret
sbb
aaa
cltd
mov
mov
jp
mov
inc
sahf
out
aam
imul
out
and
mov
mov
adc
jmp
add
pushl
xchg
dec
add
push
sub
lcall
stos
and
int
push
pop
pop
or
repnz
dec
popa
mov
add
aas
stc
out
insb
dec
rorl
mov
xchg
dec
ret
stos
push
adc
jnp
mov
jmp
inc
push
pop
imul
repnz
adc
dec
out
arpl
or
ss
jp
mov
xchg
fidivs
add
xor
or
sbb
pop
int3
fidivrl
dec
data16
sub
fcompl
shl
movsl
sub
cwtl
cmp
lock
out
dec
mov
mov
cmp
je
mov
jne
repnz
stos
dec
cmc
cmp
leave
daa
lret
hlt
imul
es
push
dec
ret
xchg
adc
leave
addr16
js
jmp
dec
dec
bnd
adcb
mov
mov
add
rcr
out
jb
lods
mov
hlt
push
ja
inc
mov
pop
cmc
mov
sub
sub
mov
lods
fcoms
test
mov
mov
popf
xchg
pop
and
push
ficomps
cs
xchg
popa
and
jno
out
jge
jecxz
jg
in
mov
xchg
push
lret
cmc
jb
out
push
test
out
aad
loope
jge
test
cmp
cld
aaa
inc
mov
mov
mov
and
fdiv
pop
fdivr
lea
jp
jns
mov
hlt
fisttpll
rorb
push
sub
adc
mov
call
fptan
add
xchg
xor
and
push
adc
imul
icebp
in
or
aad
add
xor
incl
popf
cmp
or
push
loop
cltd
aad
enter
add
cmc
xchg
cltd
aas
arpl
fs
loop
push
xor
pop
jno
dec
shl
lods
and
ja
dec
cmp
and
jmp
dec
sbb
divb
cwtl
fmull
in
pop
mov
icebp
mov
aas
sub
fldcw
ficoml
xlat
mov
hlt
dec
js
pop
sub
and
mov
jne
sbb
scas
cmpsb
adc
cmp
sbb
pop
js
mull
in
shlb
xchg
xor
pop
std
or
stc
jb
jae
inc
xorb
jbe
inc
jbe
mov
sub
push
sbb
es
testl
dec
mov
shrb
mov
pop
push
test
notb
outsl
insl
mov
imul
rolb
and
ret
leave
pushf
xchg
addl
dec
movsb
lahf
inc
or
and
sub
xlat
out
mov
aad
js
outsb
xchg
adc
xchg
fwait
cli
movsb
cmp
jnp
xchg
dec
mov
idivb
and
in
or
in
mov
cmp
xchg
cwtl
subb
pop
dec
inc
mov
mov
cmpsb
out
nop
pop
ja
gs
jmp
sub
bound
mov
mov
out
pop
sarl
movsb
int
jge
les
jl
lds
aas
fdivp
sbb
lret
lds
pop
sub
rorb
adc
imul
cmpsl
pop
stos
sbb
clc
shl
mov
movsb
inc
dec
lcall
es
loop
inc
lea
aam
mov
xor
stc
push
add
mov
pop
ss
movsl
dec
inc
cmp
sub
cmp
or
push
sub
sub
cmpsb
out
adc
pop
fists
pop
jecxz
aam
ljmp
xlat
mov
insl
push
xchg
int3
aaa
push
dec
cli
jge
pop
mov
int3
cmp
mov
lcall
sbb
in
bound
xor
leave
sub
mov
stos
rcrl
mov
fsin
or
lret
call
sub
clc
test
mov
imul
scas
subb
scas
sub
ret
mov
adc
jge
sahf
jecxz
xchg
xor
jp
popa
fs
hlt
cld
cmp
and
mov
decl
xchg
and
mov
out
add
push
mov
jecxz
cmp
xor
test
pusha
cmp
gs
scas
leave
add
adc
subb
mov
enter
pop
out
xchg
mov
outsl
push
push
fmul
xchg
ret
lea
aas
mov
ss
xchg
enter
and
lahf
push
inc
adc
nop
and
jp
xor
mov
outsl
pusha
xchg
add
xor
out
outsl
in
jmp
mov
sbb
jmp
mov
lret
clc
sub
add
adc
mov
inc
mov
lods
sub
push
and
movsl
out
jecxz
push
repnz
pop
sub
sbb
int3
loopne
test
pop
add
lods
stos
push
add
dec
fld
sahf
add
imul
outsb
dec
pop
adc
ja
fisubrs
jg
outsb
add
cs
pop
sub
mov
sub
lds
pop
leave
out
loopne
mov
das
repnz
mov
stos
mov
push
sbb
adc
sub
xlat
aad
pop
mov
ja
pop
rorb
js
lea
lahf
loope
test
push
lods
inc
adcw
xchg
mov
pop
lahf
movsl
bound
fiaddl
fsts
fucom
test
punpcklbw
cltd
test
push
fstl
fcmovu
xchg
sbb
xchg
pop
loope
xor
aad
insl
add
inc
cmpsl
and
movsl
jbe
out
stos
nop
mov
push
and
xchg
test
int
push
mov
mov
loopne
pop
sti
lahf
cmpsl
popf
fwait
int
movsl
jl
push
and
movsb
bnd
insl
jg
scas
jns
mov
mov
in
and
push
sbb
inc
stc
fsubrs
and
cmp
insb
sbb
xchg
adcl
cmp
dec
mov
enter
imul
lahf
jmp
inc
sub
jae
stos
in
xchg
or
std
xchg
mov
into
sub
and
sbb
int
stos
inc
imul
lods
push
lahf
adc
push
stc
dec
mov
jne
xor
imul
test
cmp
insb
pop
and
cmc
in
add
js
rolb
pusha
fs
cmpsb
xchg
aas
loope
jl
sub
sub
xlat
jmp
shll
push
push
inc
pop
pushf
jno
lcall
jmp
aas
insb
jo
sub
mov
sahf
pop
jecxz
mov
addr16
into
je
gs
mov
push
sub
pop
add
push
jg
movsb
lods
lret
fnstenv
add
add
xchg
les
or
repz
outsb
and
mov
cwtl
jne
cmpsl
dec
or
sbb
jp
mov
jne
lods
lret
cltd
and
cmp
pop
das
jne
add
xlat
push
int3
pop
lea
mov
jmp
mov
ret
add
add
in
push
xchg
cld
xor
lret
xor
lcall
and
call
jo
sub
lods
add
pop
cmc
or
daa
xorb
sbb
add
in
test
cmp
mov
rclb
push
xor
repz
push
js
filds
fnstcw
stos
subb
adc
push
shl
stc
call
cmp
fnstenv
add
cld
mov
lds
in
js
gs
xor
data16
std
add
adc
mov
mov
push
inc
rcrb
sbb
pop
mov
rorb
pop
dec
jb
aas
ret
adc
adc
mov
add
lods
mov
mov
mov
fmull
or
adc
lods
hlt
and
jp
jmp
and
xchg
jmp
cmp
incb
jo
xchg
lcall
adc
mov
std
sub
xchg
popf
ss
jge
dec
push
cmp
sub
rcrb
lahf
popf
adc
js
xlat
lea
les
aas
dec
popf
lods
hlt
or
aam
xchg
movsl
sti
scas
roll
imul
int
adc
ja
jg
test
fucomip
mov
pop
pop
mov
in
jbe
jge
dec
inc
js
cs
in
and
aaa
sbb
inc
popa
add
int3
test
cmpl
rolb
fstpl
and
jnp
jl
lret
in
into
ljmp
mov
daa
lcall
push
aaa
pop
dec
lods
push
pop
push
iret
mov
mov
or
pushl
movsl
mov
leave
add
int3
jmp
pushf
cmp
or
out
fimull
popa
mov
push
lret
scas
out
mov
xchg
cli
clc
cmp
or
sub
pop
iret
clc
imul
aam
dec
inc
jb
jg
fisubs
sbb
adc
pop
and
scas
in
repnz
orl
gs
lret
adc
aam
mov
push
sbbl
in
xlat
xor
nop
les
addl
je
outsb
add
inc
imul
sahf
push
mov
rcrl
and
lock
loop
push
cmp
push
fisttps
add
outsl
shll
loope
imul
pop
jge
push
cmc
and
or
or
mov
add
in
shrb
aas
or
filds
daa
in
xchg
lcall
and
mov
pop
test
mov
mov
loope
fdivrs
addl
push
aad
mov
inc
mov
adc
hlt
mov
stos
mov
sar
mov
sub
xor
adc
sub
popl
frstor
int
jmp
xlat
int3
adc
sbb
nop
jo
daa
pop
or
int
push
adc
imul
cli
and
sbb
sub
add
push
sbb
es
ja
xchg
xchg
fidivl
fldenv
mov
or
jo
popa
add
push
imul
sarl
cmp
aam
lret
dec
in
insb
out
jne
dec
cmp
mov
int
aam
mov
pop
ror
jb
inc
jo
inc
test
pop
cwtl
xchg
bound
cmpl
cli
loop
cmpsl
push
mov
lods
dec
mov
js
mov
and
xor
dec
cli
in
gs
xlat
dec
lock
jns
icebp
or
cmp
push
fstpt
mov
shll
jne
xchg
push
dec
xchg
or
push
mov
test
push
icebp
inc
jmp
dec
push
lahf
sbb
hlt
ja
sbb
pushl
lods
pop
fildl
ret
rorb
dec
cmp
sti
in
outsl
int3
call
call
push
sbb
aad
aas
in
push
jl
xlat
out
or
icebp
iret
adc
inc
test
fstl
mov
icebp
cmp
xor
fistps
and
jmp
andb
push
mov
mov
mov
pop
push
inc
out
jge
jno
xlat
scas
mov
fstpl
xor
xorl
sbbl
ret
gs
hlt
pop
aad
pop
pop
outsl
mov
shlb
cmp
mov
movsb
lret
fbstp
push
cmp
inc
mov
dec
xor
dec
inc
ficompl
popf
rolb
rclb
inc
mov
mov
cmpb
dec
push
or
daa
xor
gs
inc
ljmp
jae
jbe
lea
dec
lods
testb
jp
sbb
lea
xor
into
xchg
sub
test
lahf
cmp
mov
cmpsb
xor
loop
es
popa
push
out
out
sub
vpmaxsw
daa
dec
dec
lea
mov
inc
scas
pusha
ds
lock
fisttpll
mov
dec
enter
sbb
pusha
sbb
cmp
bnd
and
dec
ja
sub
test
call
jo
ljmp
pop
ffree
ss
pusha
stos
test
dec
inc
xchg
xorb
sub
xor
enter
adcb
xchg
call
imul
xchg
push
std
test
rorl
adc
fwait
clc
popa
arpl
mov
add
jae
lea
push
mov
iret
cmp
add
lret
push
in
mov
jnp
aam
sbb
fisttpl
mov
lea
mov
cmpl
pop
movsl
mov
les
outsb
mov
and
aaa
push
hlt
add
jne
xchg
lcall
push
pop
add
cs
call
and
inc
add
enter
sub
inc
cltd
int3
xchg
jge
pop
add
cmpsl
adc
pop
mov
rcll
clc
inc
lahf
fimull
stc
ja
incl
movsb
xchg
rcr
jmp
ja
add
sbb
pop
js
adc
pop
scas
mov
and
sbb
call
jae
jge
lret
or
adc
push
ret
jne
leave
or
xchg
aas
hlt
test
pop
test
cmp
out
sbb
inc
jp
aaa
imul
and
cmp
dec
dec
std
in
stos
lds
cltd
arpl
shl
jge
jecxz
add
add
push
mov
inc
sbb
es
inc
or
sub
in
adc
xchg
jnp
push
imulb
mov
fldcw
cwtl
inc
push
pop
fadd
push
adc
aam
jae
out
mov
ss
xchg
aad
mov
aaa
xor
push
jno
movsl
bound
mov
push
inc
popf
pop
xchg
stc
dec
insb
lock
and
mov
push
cs
andb
xchg
sahf
test
mov
pusha
dec
enter
adc
cmp
and
lret
aam
sarb
roll
lcall
mov
and
iret
shll
rcrl
xor
outsl
jmp
mov
ret
ret
cld
dec
adc
nop
shll
lods
or
inc
iret
lcall
xchg
push
repz
mov
das
subl
mov
fdivl
into
cmp
mov
hlt
out
nop
xor
mov
data16
cmpsb
lods
push
in
mov
lret
push
jmp
aad
not
out
gs
scas
test
mov
outsl
push
add
cli
les
out
cmpsl
jns
pop
mov
imul
in
sub
pop
mov
pop
xchg
mov
mov
test
es
leave
mov
clc
mul
mov
into
push
cmp
xchg
xor
fwait
mov
or
xchg
cmpsl
cwtl
sbb
lahf
imul
iret
iret
int
dec
stos
sub
stos
push
inc
mov
inc
mov
out
inc
int
int
pop
inc
adc
jmp
insl
lods
aam
dec
cmp
lret
jnp
adcl
inc
xchg
cli
add
mov
and
lcall
mov
mov
cmp
into
negb
xchg
in
inc
ret
pop
cmc
sbb
fmuls
test
mov
cmp
mov
insl
loop
sbb
push
je
inc
out
pop
dec
dec
mov
push
push
mov
mov
jge
xor
lock
mov
inc
mov
xor
outsl
into
loop
aas
cmp
mov
xchg
pushf
inc
sub
xchg
add
insl
outsb
xor
mov
shll
loopne
jmp
jg
insb
or
in
inc
movl
xchg
test
pop
jl
imul
pusha
es
pop
aad
jg
and
add
jmp
cltd
and
in
mov
or
leave
fstl
pop
cld
iret
pop
ret
iret
xor
push
push
fsubrs
jb
sub
jb
adcb
fmul
lret
adc
sar
cs
iret
mov
push
pop
stos
in
cltd
cld
push
pop
cmp
loopne
jp
popf
hlt
mov
or
stc
imulb
add
daa
mov
mov
sbb
faddl
addb
and
andb
rcrl
stos
dec
andb
push
pop
mov
inc
xor
sarl
pop
loope
sbb
xor
sahf
dec
leave
rcll
rclb
push
flds
pop
push
or
movsl
jmp
imul
mov
dec
loop
adc
and
dec
xchg
insl
nop
xchg
xor
mov
je
sti
push
popf
jne
add
mov
je
pop
cld
cmp
ret
jno
cs
adc
pushf
cmc
lods
or
xor
das
add
sub
sti
cwtl
repz
or
sbbl
stos
imul
rcrb
or
insl
or
or
scas
xsavec
sub
ret
dec
inc
mov
pop
shr
xorb
int
mov
clc
mov
pushf
clc
xorl
mov
andl
jmp
xor
or
inc
mov
cmpl
jae
cmpl
jne
push
push
pushl
call
jmp
movl
cmpl
je
cmpl
jne
push
push
push
pushl
call
mov
dec
mov
jmp
push
sbbl
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
push
push
call
jmp
inc
xor
sub
mov
movl
push
xorl
add
jmp
mov
notl
mov
notl
inc
cmp
movl
jb
adc
mov
xor
add
jmp
andl
mov
and
mov
adcl
xor
andl
mov
inc
mov
cmpl
jne
push
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
movl
cmpl
je
cmpl
jne
push
call
mov
dec
mov
jmp
xorl
mov
add
sbbl
movzwl
xorl
mov
negl
mov
orl
movzwl
xorl
xor
add
mov
mov
inc
mov
cmp
movl
jne
mov
movl
mov
decl
xor
add
andl
mov
dec
mov
xor
andl
add
movl
mov
not
movl
movl
movl
mov
mov
movl
mov
jmp
mov
add
mov
andl
xor
xor
sub
sub
xor
andl
mov
inc
mov
cmpl
jne
push
pushl
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
adc
mov
movl
mov
lea
mov
mov
mov
lea
movzwl
sbb
mov
mov
andl
mov
add
mov
negl
lea
andl
mov
inc
mov
cmpl
jne
push
pushl
call
cmpl
jne
xor
add
inc
mov
cmpl
jb
orl
mov
mov
add
mov
lea
add
mov
mov
orl
mov
lea
adc
mov
andl
mov
inc
mov
cmpl
jne
push
push
call
cmpl
jb
mov
sbb
mov
sbbl
lea
mov
andl
mov
inc
mov
cmpl
jne
pushl
push
push
push
pushl
pushl
call
cmpl
jb
mov
xor
add
jne
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
imul
xor
add
lea
mov
add
mov
mov
xor
add
jne
mov
mov
mov
cmp
je
mov
mov
mov
cmp
jne
mov
mov
movsbl
xor
add
cmp
mov
mov
mov
je
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
xor
imul
add
lea
mov
add
mov
mov
xor
add
jne
mov
mov
xor
xor
add
add
cmp
jae
lea
mov
mov
movl
lea
mov
mov
addl
mov
xor
add
lea
jmp
sarb
jae
dec
bound
nop
mov
jl
pop
pop
jl
fdiv
cmp
out
rcll
into
mov
int3
rclb
aam
dec
or
add
leave
and
outsb
cltd
pop
and
mov
sti
or
je
push
rep
loopne
pop
int3
push
sbb
push
negb
iret
mov
inc
sbb
icebp
sub
loope
add
shll
movsl
ret
or
ljmp
or
ss
scas
test
out
lods
popa
inc
add
mov
xchg
sub
data16
stos
jne
imulb
mov
mov
xchg
test
loope
and
popa
fwait
xorb
pop
lcall
daa
push
ljmp
xor
cmpsb
aas
add
les
adc
sub
add
sbb
and
inc
mov
mov
scas
das
mov
sbb
jecxz
cmpsb
add
test
enter
jmp
sub
imull
pop
enter
and
mov
cmpsb
or
pop
jb
push
cli
cmpsb
sub
lods
popf
pop
ficompl
inc
rol
xor
mov
insb
pop
arpl
jge
mov
scas
push
push
jp
inc
sahf
push
pop
and
sarb
and
data16
ljmp
divl
adc
jmp
fmuls
push
movsb
and
cmp
xchg
lock
or
ss
test
jne
sub
push
test
lods
and
inc
popf
jge
stos
mov
in
dec
in
dec
xor
xor
cmp
les
inc
sbb
mov
cmpsb
pop
popa
int
mov
mov
adc
mov
or
scas
test
xchg
popa
and
popf
out
cs
cli
pushf
inc
or
xchg
sbbl
pushf
fisttpl
jmp
outsl
inc
ss
pop
loopne
sbb
mov
jg
test
dec
pop
cmp
inc
add
loop
lods
cmp
movsl
cmpsb
mov
push
adc
push
sub
and
scas
fldcw
pop
lods
push
in
div
cmc
lods
in
rcrl
cmp
roll
xchg
stos
in
sbb
push
xchg
cmc
nop
or
inc
xchg
inc
andb
adc
pop
pop
popf
fcomps
mov
dec
es
shll
xchg
cmp
sub
sub
dec
sub
mov
lods
jg
jae
clc
cmp
push
scas
mov
and
scas
pop
cmc
in
fiadds
pop
mov
in
pusha
test
sub
in
xchg
xlat
mov
out
dec
pop
in
mov
repz
test
fadds
roll
ja
fs
or
fdiv
addr16
jae
mov
cmp
outsb
scas
xor
mov
or
fistps
sbb
ja
lock
push
out
je
cmp
jge
fstl
mov
imul
jae
mov
das
jb
fcmovu
fistpll
xchg
dec
icebp
push
xor
and
dec
out
inc
aam
int3
or
pop
sbb
mov
mov
adc
lock
shl
dec
inc
ss
pusha
inc
ret
adc
imul
pop
xchg
cmp
mov
push
push
or
add
mov
inc
sub
add
push
je
push
fdivp
or
int
inc
nop
movsl
and
mov
jno
jmp
push
cmpsl
or
sar
inc
addl
push
add
or
inc
pusha
insb
gs
loopne
loop
mov
mov
incb
inc
pop
sub
sbb
cmp
out
in
cpuid
js
shl
in
dec
jb
and
push
push
inc
pop
iret
dec
push
or
cwtl
ja
and
pop
mov
mov
mov
xchg
mov
stos
fdivr
es
or
fldenv
out
jp
jb
or
cmpsb
andb
and
jmp
out
jge
push
lds
les
mov
xorl
xchg
xchg
or
mov
dec
pop
mul
icebp
push
xchg
xor
out
popa
sbb
int3
mov
leave
and
gs
aas
add
test
push
push
push
mov
mov
ds
add
mov
sub
scas
and
std
cmpsb
sbb
pop
fdivrs
cmp
mov
xchg
sbb
out
dec
loope
pusha
mov
or
fstp
or
std
pusha
dec
pop
cmp
lretw
ljmp
pop
hlt
outsb
xchg
cmp
or
cmp
dec
iret
push
jno
add
movsb
lahf
punpckldq
fcomps
out
aad
nop
fmul
movsb
mov
mov
testb
repnz
movsl
out
xchg
jl
mov
sbb
lret
mov
xchg
lock
push
jmp
push
lahf
daa
test
or
inc
ret
pop
xor
movsb
imul
pusha
shll
popf
ss
mov
int
stos
out
cmp
jl
loope
and
mov
test
lods
xchg
in
pop
sub
push
dec
shrl
adc
xor
es
test
mov
ljmp
push
into
scas
aam
nop
fcoml
js
cmp
or
pop
lds
adcb
ja
pop
jb
cmp
or
mov
dec
cmovns
xor
add
pop
gs
mov
mov
fld
pop
push
adc
xor
and
jb
push
ret
mov
jmp
cmp
xchg
or
mov
mov
pop
cmp
nop
arpl
xor
xchg
push
fmull
ret
xor
mov
andb
jmp
mov
mov
rcr
out
arpl
xchg
inc
ret
pop
and
inc
fisttps
pop
sbb
into
in
xor
inc
mov
dec
in
scas
xchg
jae
xchg
imul
fnsave
jg
ja
idivb
jg
popa
out
in
leave
jp
adc
dec
ret
mov
out
pop
sbb
pop
movsl
fistpll
dec
in
push
jle
mov
ret
and
sbb
les
sbb
fsubrs
pop
jmp
push
notb
mov
in
repz
loope
fbstp
xchg
jl
or
subl
xor
aad
nop
and
out
std
sub
add
sub
iret
mov
loop
fs
test
push
scas
pop
jmp
sub
dec
cmpsl
popf
js
and
or
movsl
scas
jg
in
inc
dec
fimuls
dec
call
pushf
int3
mov
mov
add
mov
pop
pop
pop
jmp
cwtl
inc
cli
fs
fdiv
mov
in
stc
iret
imul
std
pusha
fstl
push
scas
test
sbb
aam
lods
imul
xchg
leave
pusha
pop
fstps
push
pusha
adc
inc
scas
jo
ss
fsubs
mov
enter
iret
add
fisttpl
sbb
jge
scas
aad
testl
mov
jbe
xor
pop
ret
adc
iret
int
imul
cmc
xchg
mov
insl
sbb
scas
or
not
push
cmp
mov
cwtl
loope
inc
sub
int3
xor
aas
sub
movl
fdivrl
add
xchg
push
orb
aam
and
and
add
pusha
repnz
leave
sub
adc
jno
mov
lea
movsl
test
sahf
les
mov
jle
lret
cmp
mov
fs
pop
outsl
lock
gs
das
aad
sarb
push
scas
out
mov
push
cltd
inc
xchg
sbb
or
imul
sbb
int3
mov
jle
in
sbb
std
mov
dec
enter
dec
fistpll
push
ljmp
mov
nop
inc
outsb
in
inc
xchg
int
xchg
dec
icebp
into
in
mov
movq
mov
mov
xchg
fistpll
call
lock
in
fs
push
pop
inc
int3
pusha
cli
popa
movsl
cmp
aam
pushf
or
and
pop
cmp
jg
lds
mov
cmpsb
mov
imul
sub
adc
or
pop
adc
cs
fidivs
cmp
fildll
cmc
adc
mov
std
pop
popf
stos
cld
dec
or
jne
jge
push
loopne
jecxz
dec
fiadds
lahf
cmp
dec
inc
loope
ljmp
or
les
arpl
jnp
ds
mov
xchg
outsb
or
xchg
imul
ret
in
cmp
das
mov
clc
pop
pop
ljmp
push
mov
cwtl
in
pop
jge
mov
sbb
cli
rclb
push
jmp
arpl
xor
push
adc
push
data16
movsl
xchg
pop
or
stos
dec
sub
pop
or
lret
cld
pop
mov
pop
add
push
pushf
cltd
mov
dec
fisttpll
inc
aas
mov
cmpsl
jg
sub
push
test
xchg
pop
outsb
lcall
cmpsl
push
daa
mov
insl
xchg
xor
jns
sbb
push
fwait
mov
es
mov
sbb
int3
mov
ret
sub
out
push
xor
mov
fldcw
pop
insb
xchg
xchg
dec
fsubr
clc
lahf
adc
push
dec
mov
shrb
or
stc
mov
popa
dec
iret
es
int
test
jno
push
add
jp
push
negl
jle
inc
daa
push
in
cmc
add
push
test
mov
mov
pop
mov
aas
adc
data16
fildl
add
mov
jo
adcl
arpl
inc
xchg
std
subb
test
sti
xchg
out
cmc
and
mov
jne
cwtl
push
xchg
jmp
mov
pop
mov
cmp
js
iret
pop
sub
push
daa
fisubrs
fbstp
repz
out
or
and
dec
and
hlt
enter
inc
sub
pop
xor
shll
inc
xor
repz
fdivl
xchg
mov
sti
stc
pusha
lds
orb
test
fs
xchg
push
sbb
pop
imul
jl
pop
xlat
std
dec
icebp
sub
dec
cltd
pop
inc
pop
add
xor
in
cmp
aam
insb
repz
jmp
cltd
ffreep
pop
xchg
lcall
fldt
or
bound
insl
scas
out
mov
fstpl
in
lahf
lcall
dec
jl
dec
testl
stos
adc
fnstcw
loope
lock
cmp
lds
out
and
inc
add
outsb
fmuls
rclb
stos
mov
cwtl
dec
das
fistpl
leave
push
lcall
lods
cltd
xor
dec
mov
mov
rorb
imul
xor
xor
mov
add
dec
cmp
cmp
dec
insb
adc
jns
mov
inc
dec
sub
out
mov
faddp
imul
xchg
sti
sbb
mov
pop
lahf
scas
add
mov
mov
imul
pop
adc
push
xor
loop
sub
mov
rcll
cmp
cli
call
jne
repnz
pop
fcomps
jbe
stc
or
ljmp
sbb
rorl
cmp
in
js
add
xor
ja,pn
inc
mov
jl
loop
sbb
xchg
add
outsl
jle
and
xor
or
fistps
push
sub
insb
mov
pop
loope
jb
xor
pushf
add
mov
inc
sub
xor
int
mov
cmp
xor
pusha
fwait
jecxz
mov
stos
cmp
mov
movsb
sbb
jl
sub
or
lods
or
push
mov
test
dec
push
arpl
in
dec
jmp
in
push
dec
cmpsl
dec
arpl
int
shrl
sub
das
mov
stc
fsubrl
pop
mov
loop
pop
and
mov
repz
cmp
js
sar
xor
popa
pop
xchg
xchg
out
out
mov
das
js
jnp
pop
movsl
jo
and
mov
ret
mov
into
rcr
ret
inc
lret
mov
dec
and
pop
test
shrl
ret
sbb
cwtl
insl
mov
mov
ljmp
adc
xchg
sbb
fiadds
pop
jne
adc
scas
es
fwait
inc
jb
aas
cmp
add
sbb
test
out
movsb
pop
sbb
sbb
xor
xchg
jnp
decb
and
test
cmp
xchg
xchg
push
mov
cmp
out
adc
mov
test
lcall
rcrb
movsb
sahf
mov
fidivs
pop
mov
test
add
xchg
movl
cmp
lcall
push
inc
aad
jne
add
mov
fisttpll
adc
xchg
ds
test
pushf
inc
sti
cmp
punpcklbw
lahf
sbb
xchg
mov
xlat
test
xchg
iret
int3
mov
and
mov
mov
jg
cli
hlt
ficoml
lods
call
testb
outsb
out
cmpsl
inc
aas
mov
out
mov
jg
stos
mov
or
sbb
jge
xchg
and
dec
popa
movsl
fs
mov
shr
dec
mov
jbe
pop
lods
xchg
into
nop
ds
dec
aas
fidivl
fmul
cs
xor
add
dec
push
sbb
test
test
mov
xchg
scas
sbb
mov
inc
or
out
jo
movsb
mov
jnp
add
pop
inc
xor
sub
jns
sub
jns
mov
and
mov
pop
push
aam
xor
jp
inc
and
jnp
xor
dec
cli
xchg
mov
insb
in
out
hlt
jb
mov
pop
mov
outsb
jnp
and
lds
pop
and
or
sbb
push
dec
call
cmp
leave
mov
jo
cmc
jge
sbb
and
mov
ficomps
mov
inc
or
in
cmpsl
mov
xchg
and
pop
dec
xchg
test
push
add
call
xor
cltd
jg
lret
jmp
cmp
out
push
adc
lea
dec
mov
push
adc
mov
ja
shr
push
stc
pusha
mov
inc
in
rorb
cmpsl
pop
xchg
sbb
int
adc
sahf
inc
and
jmp
jne
jl
out
les
mov
scas
bound
push
sbb
mov
mov
jns
sbb
gs
adc
sbb
test
or
nop
xchg
pop
xchg
xorb
cmc
out
shrw
lret
mov
mov
add
mov
mov
push
mov
sbb
rcr
and
pop
sbbb
sub
es
cwtl
mov
out
sbb
fcmovnu
mov
daa
rorb
rorl
cwtl
xor
repz
stos
lret
test
rcrl
jecxz
inc
iret
mov
xor
sub
mov
outsb
lods
xchg
sub
xor
scas
inc
xor
enter
jle
jne
test
inc
das
jmp
sub
das
push
mov
and
lret
inc
mov
xor
loopne
lds
inc
dec
shr
int3
jecxz
jnp
aas
add
pop
mov
pusha
push
lret
mov
mov
cmp
sub
inc
mov
push
mov
sbb
mov
jae
lods
fs
mov
mov
sub
je
dec
mov
mov
fcompl
into
jecxz
xor
loop
cltd
fdivrs
adc
add
mov
ljmp
sub
pusha
shlb
mov
icebp
lcall
or
push
ljmp
add
pop
add
inc
clc
andb
xchg
lret
cmpsl
push
sbb
xchg
jae
lahf
loopne
adc
mov
decb
adc
cld
and
pop
push
mov
outsl
cmp
lods
popa
mov
out
pop
les
push
popf
dec
dec
pop
popa
mov
mov
add
mov
add
mov
sbb
push
insb
xlat
pop
push
das
pop
mov
push
addr16
in
sub
push
push
fistpll
lcall
fstpt
insb
js
lods
and
xchg
mov
outsl
pushf
lret
addr16
cmp
lret
ret
into
mov
sbb
mov
rolb
xor
xor
mov
sbb
mov
cmpsl
out
push
cltd
not
out
cld
movsl
aas
inc
jmp
mov
xchg
in
sub
scas
ret
push
push
sbb
cltd
addb
vpsubusw
adc
sub
jle
fldl
mov
xor
add
std
inc
sbb
addr16
sub
xor
push
xchg
xor
stc
or
mov
out
inc
add
imul
mov
sub
xor
out
mov
aas
jecxz
add
rcr
loopne
add
pop
ds
and
xchg
icebp
xor
gs
push
outsb
mov
aas
test
sbb
jns
jecxz
movsb
mov
pslld
xor
out
jg
jle
test
pop
mov
xor
rcrb
adc
xchg
mov
adc
jp
loopne
cmp
shlb
adc
jne
loope
add
xchg
jo
or
mov
xchg
into
and
lds
sub
sub
jle
push
xchg
inc
push
jecxz
lods
add
lahf
es
ret
ficoml
data16
mov
inc
add
insl
iret
dec
cmp
or
test
pop
sahf
fmuls
or
out
cltd
jl
dec
or
mov
add
stos
inc
adc
jmp
cmp
lret
movsl
icebp
test
in
pop
subl
jb
je
ja
insb
or
xchg
and
jg
movl
xchg
ss
mov
cli
aad
cmp
and
mov
sub
pop
enter
xchg
push
out
ja
lret
aam
stc
inc
imul
or
jno
stos
xor
lret
into
inc
and
test
pushl
sbbl
sbb
imul
movsb
and
or
scas
iret
xor
cs
jecxz
push
rolb
stc
mov
pop
or
sbb
stc
cwtl
repnz
sub
mov
cwtl
push
loope
out
mov
adc
pop
push
cli
ss
and
dec
mov
mov
int3
arpl
mov
cmp
mov
mov
idivl
push
xchg
ljmp
pop
pop
dec
mov
mov
pop
movsl
int
icebp
push
inc
jmp
fwait
dec
popa
pop
xchg
cld
and
mov
aad
mov
or
and
cmpb
push
das
sub
stos
sbb
dec
test
adc
je
shrb
dec
rclb
sbb
subl
jl
movsl
push
repz
jns
aad
and
jmp
jmp
in
mov
cmp
or
cmpsl
loope
aam
lods
sub
pop
push
cmp
cmp
jl
fsubs
push
cwtl
cmp
xchg
mov
fwait
and
out
and
xor
jnp
lea
pop
mov
ret
roll
mov
scas
fwait
movsl
dec
or
dec
inc
fmull
dec
testb
add
hlt
jge
cmp
dec
lahf
ds
insl
test
imul
xlat
mov
stos
hlt
ret
idiv
push
sub
sbb
jne
fwait
xchg
xchg
movsb
cmp
push
or
jbe
jno
adc
insl
int
and
xor
jge
sub
int
fs
mov
hlt
jbe
add
dec
inc
mov
daa
call
mov
shll
mov
sub
cmpsl
push
cmpb
inc
mov
mov
aaa
adc
addl
dec
and
aas
add
sub
or
sbb
xor
mov
adc
jmp
mov
inc
fwait
shr
pop
pop
sti
and
and
lds
mov
jp
mov
adc
sarl
mov
inc
out
sarb
mov
jne
fdivrs
test
xchg
jge
mov
insl
repnz
or
call
pop
mov
shlb
sarb
push
icebp
dec
les
pop
in
shlb
ss
dec
mov
and
mov
mov
gs
js
adc
nop
fstps
push
and
pop
jmp
pushf
jo
or
sub
and
imul
mov
mov
mov
pop
mov
adc
das
shll
rorl
clc
mov
and
in
ds
into
repz
jg
sub
sub
pop
out
stos
fbld
dec
push
sub
or
shrb
push
js
cwtl
movsl
mov
cmp
sbbb
pop
les
data16
sbb
and
lds
sahf
testl
jns
inc
ja
sub
cli
and
mov
jnp
int3
cmpsb
mov
mov
loope
nop
in
push
push
arpl
inc
ret
test
loope
pusha
cmpsb
fdivrl
idivl
icebp
jmp
jne
shll
xor
mov
or
xor
adc
inc
xchg
push
loop
arpl
les
mov
jmp
push
sub
sahf
jmp
fdivr
adc
mov
cmp
adc
ljmp
inc
mov
popf
mov
jp
sbb
in
cmp
push
or
push
and
lods
divl
dec
iret
dec
stc
mov
popa
movsl
test
adc
mov
add
adc
push
std
dec
dec
mov
inc
or
jmp
mov
sahf
popf
sar
xchg
iret
sub
inc
arpl
jb
leave
dec
sahf
and
aas
arpl
leave
stc
add
dec
das
pop
adc
decb
cli
add
xchg
stos
out
insb
int3
push
xchg
xchg
or
popa
pop
push
rclb
movsl
icebp
push
pop
in
add
mov
sarl
roll
mov
sub
jp
dec
dec
xlat
cs
insl
mov
pop
pop
test
push
test
jge
pushf
decl
nop
outsl
sub
out
xor
je
cmpsb
iret
popf
jge
sbb
sbb
xchg
in
lahf
or
data16
adc
fsubl
xchg
pop
sbb
inc
insl
xchg
adc
clc
frstor
mov
mov
push
and
push
lods
or
cmp
jbe
sarb
xchg
in
push
inc
cmp
cltd
insl
ret
std
xchg
cmp
push
in
jg
test
jg
mov
pop
and
aam
jle
into
pop
cmpsl
insl
hlt
pop
nop
push
out
ret
sub
mov
icebp
pop
jmp
lds
push
sub
out
fdivs
lock
lods
jle
and
inc
push
push
lods
leave
mov
jg
loop
clc
jnp
jle
cmp
sub
ret
sbb
jns
adc
push
lret
xlat
pushf
hlt
push
aad
rcrb
loopne
imul
ja
cld
mov
ljmp
xchg
andl
hlt
and
or
push
dec
xorl
imul
lods
jl
xchg
dec
movsl
sbb
popf
js
mov
dec
cltd
pop
mov
cld
pushl
xor
shl
cli
add
pushl
xor
fs
lret
cmp
xchg
sub
pop
and
inc
sbb
pop
and
jb
sbb
xor
cmp
clc
add
adc
fdivl
scas
pop
dec
jne
ret
xchg
cld
mov
in
xchg
or
repz
pushf
in
inc
test
mov
push
inc
decb
xchg
push
inc
dec
sub
mov
sbb
mov
adc
push
les
aad
stc
in
loopne
js,pt
jbe
dec
js
jmp
jno
imul
push
push
test
mov
push
dec
adc
lock
dec
lea
add
int
add
cltd
xor
fcmovnbe
xlat
es
aam
shlb
outsl
cs
mov
inc
in
pop
test
mov
das
popa
jno
in
mov
sbb
xor
mov
xchg
sbb
cmp
jmp
xchg
dec
icebp
lds
and
daa
fildl
shll
movsb
pop
imul
addr16
mov
xchg
lds
sarb
mov
mov
xor
and
dec
daa
mov
push
pop
pop
lea
push
push
sti
outsl
mov
ret
xlat
sub
sub
inc
jo
push
mov
mov
or
cmp
xlat
dec
out
pop
insl
das
pop
pop
mov
xor
xor
add
mov
cmc
pop
pushf
push
pop
test
adc
imul
imul
sti
mov
sbb
xlat
dec
jb
pushf
xor
in
jle
xor
ret
sub
outsb
mov
test
inc
dec
xor
out
je
data16
add
dec
push
imul
xchg
inc
bound
jne
adc
push
xor
xchg
fsts
xlat
mov
rclb
adc
mov
fisubrl
repz
and
sub
xchg
shl
push
dec
sahf
or
sbb
test
adc
sbb
push
aad
call
int
popa
rcrl
cmp
inc
decb
or
mov
jp
cmp
int3
push
fidivs
adc
aas
mov
xchg
xor
xchg
es
jae
repz
pop
stc
repnz
mov
or
adc
inc
stos
mov
and
cmp
repz
sub
or
idivl
rolb
cwtl
adc
mov
mov
rorb
gs
or
roll
test
in
lods
cmp
xor
sbb
mov
out
xor
outsb
push
pop
jb
loope
das
push
push
int
cmpsb
lret
stc
test
rorb
xchg
cmc
nop
cld
into
inc
ss
inc
mov
aas
cmpsl
lcall
pop
sbb
je
or
loope
subl
sub
js
adc
cmpsl
jmp
mov
push
mov
mov
popl
jmp
xor
lds
call
push
xchg
jo
cmpsl
ss
add
push
mov
inc
cmpsb
stos
arpl
icebp
jg
ss
xor
jl
out
xchg
mov
sub
in
repnz
and
sti
add
stos
mov
xorl
dec
cmp
mov
aaa
push
jecxz
xchg
shlb
fwait
xchg
repnz
daa
dec
mov
aad
jo
sti
jl
cmpsl
add
and
pushf
mov
add
sbb
movsb
icebp
lods
notl
cmp
shrl
pop
push
xor
push
add
fdivrl
xchg
lret
rol
sbb
xchg
mov
inc
lea
inc
roll
fwait
push
adc
cmpsb
rcl
mov
mov
or
dec
inc
int3
and
sub
sub
in
cmp
mov
jns
dec
arpl
not
jg
push
sub
test
or
into
cltd
adcl
sub
subl
mov
lods
lods
adc
jne
imul
sub
faddl
dec
mov
adc
xchg
imul
int3
dec
fwait
and
push
push
xor
jns
add
cmpsb
fadd
xor
sbb
jg
shrw
pop
add
and
sub
xor
mov
dec
cwtl
inc
pushf
movsl
sub
mov
jns
das
daa
push
xchg
jg
xor
pop
xchg
push
push
jns
add
xchg
insb
mov
test
cwtl
in
sub
iret
push
test
repnz
pop
xor
out
mov
or
arpl
mov
movsl
mov
mov
jp
cmpl
ds
fsubr
cli
or
xorb
add
cmp
std
push
ficomps
lahf
mov
cmpsb
or
mov
int3
cmp
push
popf
ret
repnz
jns
cmpsb
clc
add
mov
in
jno
pusha
cmpsl
mov
ds
adc
dec
adc
lods
mov
or
sti
nop
sub
gs
scas
mov
mov
ficomps
push
adc
je
pop
dec
aas
outsb
inc
movsb
jns
mov
inc
lret
sub
inc
repz
push
xchg
inc
and
push
push
inc
jae
test
repz
push
jo
fstl
cld
cli
into
in
mov
mov
inc
push
sub
xor
dec
pop
cmp
out
jecxz
cmp
cmp
repnz
div
mov
cmp
pop
daa
sbbb
jge
icebp
mov
xchg
push
push
in
cld
fisttpll
ss
adc
pushf
stos
into
push
filds
pop
or
test
test
andb
scas
push
mov
arpl
adc
inc
dec
adc
cmc
push
inc
cli
inc
jp
adc
decb
outsl
sbb
xor
pop
sbb
pusha
jmp
pusha
mov
and
sbb
cmp
mov
xlat
add
popa
mov
mov
les
call
jnp
loop
jne
xchg
push
cmc
aaa
mov
insl
push
test
clc
adc
push
xchg
cld
mov
and
ljmp
mov
mov
js
sti
add
jne
adc
push
lret
dec
popf
ret
ficoms
sarb
ja
inc
loop
xchg
jecxz
vdivss
sub
movsb
mov
jle
cmp
fiadds
mov
sbb
je
in
daa
insl
inc
ja
jge
loop
fwait
loop
mov
dec
xchg
leave
js
xor
xor
les
and
fists
and
pop
pop
sbb
mov
iret
test
sub
push
iret
xchg
jg
jo
jae
jo
mov
push
imul
lcall
xchg
loope
scas
mov
mov
hlt
pop
push
das
fcompl
cmc
cmpsb
repz
stc
and
mov
repnz
aad
fs
orl
inc
movl
iret
or
jnp
jae
xor
sbb
jbe
ret
ret
in
mov
imul
aaa
pop
arpl
pop
aaa
push
test
jnp
mov
sub
jl
out
jae
mov
shl
dec
out
push
es
or
or
inc
xor
dec
mov
sbb
xchg
xor
push
mov
arpl
or
jp
and
call
lds
xor
test
mov
lcall
sbb
outsb
cmp
lcall
jns
push
mov
scas
and
adc
dec
jg
decl
mov
adcl
inc
movsb
sbb
mov
shr
jge
xor
nop
xchg
mov
mov
add
pop
jne
and
es
xor
loopne
jo
mov
xchg
adc
fwait
cmc
mov
imul
dec
and
outsl
and
and
nop
dec
adc
aam
nop
rcl
testl
gs
fwait
repnz
push
lahf
xchg
loop
jge
sbb
sti
mov
mov
xor
inc
incl
add
cmp
jb
jmp
mov
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
imul
xor
add
lea
mov
add
mov
mov
xor
add
jne
mov
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
imul
xor
add
lea
mov
add
mov
mov
xor
add
jne
mov
mov
xor
lea
mov
incl
mov
xor
add
jne
jmp
mov
mov
jmp
mov
mov
xor
xor
sub
jmp
mov
cmp
mov
pop
int
jl
pop
jl
mov
lahf
push
je
or
imul
jp
pop
xchg
lods
dec
lcall
xchg
xchg
jecxz
pusha
add
jge
sbb
bound
adc
hlt
mov
dec
je
lock
lcall
cmp
adc
clc
pop
xor
mov
mov
sub
sbb
sarb
pop
test
in
rorl
mov
int3
ljmp
sbb
lods
call
dec
cmp
pop
xor
adc
dec
sub
cmp
inc
clc
add
ljmp
stc
dec
mov
daa
push
cmpsl
mov
fdivr
adc
mov
scas
decl
aas
out
xchg
hlt
jl
hlt
outsb
mov
sub
stos
fldcw
sub
push
scas
mov
outsl
adc
push
cmp
fadds
int3
jp
dec
push
lock
mov
adc
fistpl
insl
test
int3
sti
loope
out
pop
cmpsl
pop
popa
and
mov
mov
jmp
aad
mov
adc
test
stos
or
inc
fstl
or
cmp
or
xlat
pop
lea
xor
xchg
out
loopne
les
jno
pushf
ret
nop
in
pushl
divb
mov
fs
pop
adc
fiadds
popa
sti
jns
mov
and
cmpsl
dec
popf
mov
add
bound
icebp
push
dec
test
out
and
rcl
mov
ss
cmc
stos
xlat
adc
sbb
int
daa
mov
mov
into
std
fcmovnb
xor
sbb
repnz
jl
pop
mov
in
fbld
sbb
mov
nop
mov
and
das
or
sub
mov
push
sub
xchg
cltd
into
add
lock
je
and
jmp
push
sub
imul
shll
push
xor
sbb
out
in
mov
inc
in
movsl
cmpb
jmp
shll
fistpll
jo
stos
and
imul
jnp
std
fwait
lods
or
sahf
cwtl
ja
xchg
test
jp
mov
sub
pop
dec
push
cmp
add
cs
mov
dec
in
imul
out
mov
call
addb
mov
mov
ret
pop
jae
call
sbb
inc
test
aam
mov
icebp
lods
clc
int
sarl
dec
push
mov
lcall
jle
adc
mov
mov
mov
jg
out
mov
test
rcl
or
sbb
aaa
add
xor
mov
sbb
scas
adc
add
sub
scas
jl
cmp
or
mov
sbb
dec
push
cltd
dec
pusha
mov
dec
mov
adc
mov
inc
sbb
pop
test
out
adc
jne
mov
xor
imul
scas
jge
scas
push
mov
sub
mov
add
out
das
bound
test
movsb
test
dec
jecxz
pop
sub
push
shrb
or
and
mov
inc
xchg
lds
addr16
addr16
fs
mov
test
hlt
adc
cmpsl
or
in
fadds
cmp
int
je
add
mov
jge
sbb
fisubrl
sbb
pusha
daa
mov
add
pop
ret
add
add
pop
clc
shrb
ret
loop
aad
lea
fwait
clc
fstpt
addb
push
push
xchg
xor
rolb
outsl
mov
adc
imul
sub
cmp
fidivl
push
in
fcompl
xchg
jg
or
sbb
dec
inc
dec
fildl
out
xor
in
cltd
xchg
movsb
sub
adc
sbb
test
jp
xor
hlt
xchg
scas
dec
mov
mov
sbb
xchg
pop
fwait
orb
push
and
andl
sahf
data16
add
jmp
bound
imul
jb
arpl
imul
sbb
jno
iret
fsubrs
pop
lcall
lock
xor
dec
cmp
and
pop
pop
jp
out
into
push
adc
dec
js
jp
push
fwait
xor
dec
in
push
cmp
mov
dec
jo
pop
faddl
mov
out
xchg
jmp
dec
xchg
cwtl
cmc
mov
inc
daa
ret
aam
cli
cltd
jl
loope
pop
mov
add
iret
pop
cmp
pop
jbe
xchg
lea
and
jno
mov
jae
push
lods
lcall
push
jg
imul
cmpsl
out
jne
xchg
jp
fildl
lahf
arpl
rcll
sub
jbe
mov
dec
cmp
jae
sub
cmpsl
mov
ret
mov
mov
mov
inc
and
xchg
std
mov
or
push
insl
ljmp
sub
and
jnp
mov
andl
inc
jg
imul
xor
jecxz
movsl
sub
add
cld
bnd
push
add
aad
push
pop
lods
push
rcrl
call
dec
cmc
add
push
test
mov
lret
cmc
les
scas
xchg
mov
aaa
xchg
or
pop
xchg
xchg
pop
test
xlat
lret
repz
loopne
sbb
aam
mov
xor
test
adc
sbb
push
mov
xor
jae
insb
pushf
jb
jecxz
cmc
jae
inc
out
or
mov
fs
adc
mov
mov
cmpl
jno
xor
mov
clc
xor
sub
dec
out
xchg
enter
les
mov
push
movsl
scas
mov
push
or
sbb
jns
pusha
inc
aas
flds
in
hlt
rclb
dec
pop
xor
lahf
xor
and
aad
push
in
mov
stos
pop
pop
out
sbbl
push
loopne
inc
movsb
mov
add
pop
jmp
lcall
lods
add
inc
in
hlt
cmpsb
popf
add
dec
cli
lds
pinsrw
xchg
iret
mov
mov
iret
adc
push
outsl
ds
or
icebp
push
cs
movsl
adc
cwtl
push
sub
pushf
in
das
shr
jmp
jb
pop
pop
and
mov
call
sbb
sbb
pop
ret
hlt
add
enter
icebp
iret
je
push
std
cmc
div
jo
push
addb
dec
test
call
rcrl
mov
fsubs
jge
lds
jecxz
lods
and
aad
pop
and
in
in
adc
mov
adc
fbld
pop
test
dec
xchg
and
mov
jnp
and
fmuls
push
cmc
mov
fsubrl
cltd
lret
sbb
pop
sti
dec
aad
dec
mov
pop
mov
mov
cmp
pop
sbb
pop
popa
rcrl
xor
setne
test
mov
stos
jl
out
add
adc
xchg
loopne
fimull
js
mov
pop
ret
aas
cmpsb
sub
xchg
or
pop
outsl
jbe
in
mov
xlat
fcoml
jg
mov
test
in
pop
dec
lock
loopne
push
int3
sbbl
mov
outsl
fsub
mov
push
add
add
sbb
ds
sub
sub
cmp
adc
lds
icebp
into
aam
mov
fdivp
dec
outsl
mov
iret
pop
jne
dec
or
adc
xchg
sarb
pop
in
sbb
sti
mov
addr16
jl
jnp
sahf
call
xchg
repz
sub
pop
jmp
js
aad
int
and
inc
dec
js,pt
sarb
in
cmp
mov
sarl
lds
lahf
push
leave
jle
int3
mov
add
test
insl
pop
cltd
dec
mov
mov
sti
out
out
jmp
inc
jb
iret
inc
and
sbbb
mov
stc
insb
dec
dec
cwtl
push
xchg
and
inc
lds
or
inc
fildl
dec
mov
mov
sbb
or
xchg
pop
lcall
xchg
and
adc
and
mov
cs
xchg
sbb
sarl
mov
hlt
inc
pushf
cld
push
push
xchg
jnp
sbb
adc
push
pop
out
cmp
push
jns
outsb
jmp
sbb
das
cs
mov
pusha
jbe
iret
jp
jo
out
adc
and
jb
pop
pop
dec
and
add
aaa
sbb
lret
cmc
sbb
mov
divb
xchg
jle
mul
loopne
push
into
or
mov
sbb
and
push
or
jbe
inc
sahf
mov
add
pop
and
mov
and
hlt
add
loopne
ud0
sbb
xchg
insb
imul
dec
cmp
ret
cli
call
sub
push
push
xor
sub
jb
fildll
ja
xlat
xchg
popf
enter
ds
mov
xchg
sbb
sbb
stos
cwtl
test
adc
mov
js
lret
rolb
loope
inc
push
std
xor
cmp
repnz
dec
inc
xchg
mov
fdivs
iret
outsl
xchg
adc
mov
nop
jnp
pop
or
push
xchg
jb
sub
aad
push
xchg
andb
push
out
jae
mov
jne
mov
pop
loop
sub
pusha
push
inc
dec
push
push
adc
scas
lods
push
add
xor
inc
icebp
scas
xor
out
or
movsb
and
dec
xlat
rolb
xchg
test
xor
xchg
mov
arpl
or
xor
pop
into
icebp
fcompl
and
divb
add
mov
xchg
divl
adc
sbb
and
das
xchg
sbb
shrl
dec
xchg
dec
xchg
loope
fiadds
repz
aaa
jle
insl
pop
fldl
sub
jg
xlat
or
jmp
mov
add
jp
mov
cmpsb
push
pusha
push
pop
gs
pop
sbb
push
push
add
xchg
cmp
jp
iret
mov
pop
mov
mov
xchg
cli
inc
mov
push
bound
inc
sub
ds
pop
movsb
fstps
andl
mov
js
inc
bound
fmuls
xor
mov
and
pop
adc
pop
and
inc
jbe
enter
rcl
jnp
dec
mov
jne
out
adc
dec
dec
test
and
sub
pop
stos
icebp
std
jg
pop
in
dec
xlat
loope
outsl
dec
popa
pop
subb
in
call
jne
jl
xor
repnz
ret
mov
push
cmpl
mov
adc
cmp
pop
ss
loope
jnp
es
pop
jge
inc
icebp
inc
loop
inc
test
loope
fwait
movsb
jns
cmp
sub
or
aas
adc
adc
sbb
clc
rorb
mov
or
aam
in
mov
dec
int3
loope
add
sbb
fldt
cmpl
lahf
adc
pusha
pop
pop
sbb
loopne
inc
movsb
pushf
dec
cs
and
inc
pop
pop
mov
in
jnp
fldl
xor
orps
jmp
arpl
pop
lret
xchg
mov
mov
cmp
stos
nop
sub
enter
or
sub
pop
sbb
jbe
dec
out
aam
push
nop
lret
sbb
pushf
icebp
fsubp
lods
sbb
pop
or
lock
pop
inc
push
mov
adc
addr16
lcall
xchg
aad
test
fcomps
out
or
aad
cmpsl
lock
push
pushf
cmp
orb
inc
jns
push
adc
mov
ja
jecxz
adc
mov
xchg
pop
mov
inc
jecxz
xchg
shr
mov
push
push
xor
mov
lds
loop
sbb
add
mov
test
cld
push
fcoms
lods
jmp
sti
inc
int3
sbb
ds
dec
nop
fidivl
mov
and
mov
dec
shr
adc
jp
mov
push
pop
mulb
insl
stos
scas
mov
movsb
icebp
jmp
cmp
mov
fimuls
clc
mov
jmp
jg
clc
xor
inc
inc
in
jg
inc
mov
push
rorl
and
xor
push
push
xchg
dec
jne
dec
dec
mov
mov
out
sub
stos
add
fnstsw
enter
std
insl
sti
add
sub
dec
sti
and
fidivs
dec
mov
stos
out
pop
pop
in
push
mov
mov
jne
jecxz
pop
push
xor
es
cli
inc
jp
scas
ja
insl
mov
sub
mov
out
xchg
xchg
xchg
dec
out
sti
int
and
adc
inc
imul
jae
cmc
add
or
in
adcb
jmp
sub
sbb
xor
loope
repz
xchg
stc
adc
push
xor
mov
or
lcall
sbb
sbbb
mov
push
cld
mov
out
or
loopne
jno
fstps
loop
cli
sub
hlt
mov
xchg
add
aas
mov
test
cmp
add
cs
xchg
pop
mov
pop
cmpsl
iret
dec
test
adc
fistpl
push
test
mov
les
mov
lahf
mov
enter
shll
loop
and
mov
clc
jp
fucomp
cmp
cmpsb
jbe
dec
adcl
pop
push
movb
cmp
outsb
test
sub
push
pop
and
arpl
jne
stc
xor
adc
iret
inc
pop
adc
ficoml
rcr
divl
sbb
loop
and
in
sub
adc
scas
xchg
mov
dec
std
sub
pop
in
push
mov
fdivr
or
cmp
ret
or
jge
orl
push
add
cli
lret
in
push
xlat
xor
imulb
jns
mov
mov
ret
push
mov
stc
cmpsb
adc
adc
push
inc
push
sub
stc
rcl
shrl
adc
push
cmp
jo
push
mov
test
or
adc
xchg
lock
test
lret
push
xor
xchg
inc
xorl
sarb
lret
pop
sti
cltd
mov
xor
dec
fnstcw
in
lret
bound
lret
or
leave
xchg
pusha
sbb
test
aas
cmp
cmp
lcall
ss
mov
out
in
icebp
sub
jae
das
dec
mov
xorb
mov
cmpsb
push
outsl
mov
pop
push
mov
mov
dec
lock
jne
cmc
pushf
cmc
inc
jne
mov
lods
enter
adc
pop
loope
jg
mov
movsb
std
xchg
mov
mov
shll
fwait
cmp
inc
std
daa
scas
inc
jge
pop
push
push
lock
inc
cmp
mov
ljmp
jp
pop
xlat
aas
aam
dec
xchg
pop
pop
ds
jg
hlt
cmp
ja
push
inc
std
sub
mov
xorl
jl
popa
dec
jmp
lods
movsb
repz
jno
popa
xchg
sbb
aam
les
daa
adc
mov
jnp
je
push
mov
dec
int3
jnp
mov
stos
fisubrs
gs
fisubrs
lock
loope
push
cmp
dec
sub
mov
cltd
mov
lcall
int3
aas
aas
fidivs
mov
adc
mov
xchg
arpl
outsl
cmp
loopne
jg
mov
mov
pop
outsb
xchg
jg
shlb
pop
mov
jnp
out
lcall
scas
jne
adc
xor
sub
push
aaa
jmp
out
push
das
gs
push
xor
mov
xor
sbb
imul
dec
push
lahf
ret
mov
cmc
test
mov
inc
shrb
sub
push
adc
test
out
and
sub
push
mov
pushl
pop
xorb
push
mov
pop
dec
mov
aaa
cmp
sub
je
mov
xchg
inc
jno
dec
push
leave
loope
mov
fimull
xlat
aaa
outsl
xchg
and
or
adc
cld
out
inc
inc
ret
sarb
mov
cmp
fs
pusha
lock
mov
ret
cltd
cmp
rorb
dec
push
xchg
fisttpl
inc
sbb
rolb
dec
inc
stos
fs
mov
sub
hlt
sub
xlat
lock
outsb
or
sti
and
sbb
push
adc
sub
sbb
icebp
push
mov
cld
jl
pushf
int
cs
inc
mov
mov
stc
cmp
cwtl
push
push
pop
and
sub
stos
pop
cmp
adc
imul
insl
pushf
aad
inc
inc
cmpsb
movsb
xchg
xchg
push
stos
lret
lock
sar
cmp
xchg
sbbb
fstpl
sub
sub
push
in
pop
mov
mov
adc
rcl
clc
mov
rcll
movsb
sbb
jmp
fisubs
xor
xor
jl
sub
mov
mov
out
mov
outsb
shll
pop
cmp
stos
xchg
xor
push
add
jmp
rolb
insl
push
inc
int
out
lods
ror
push
outsb
imul
pop
xor
dec
aas
inc
and
jo
add
cmpl
mov
dec
ss
lcall
and
xchg
mov
lret
sahf
dec
and
sub
bound
sbb
lret
test
lea
lock
inc
push
push
sub
popf
das
adc
cmp
mov
movsb
jmp
fidivrl
dec
aam
ljmp
xor
cmpl
mov
shlb
mov
out
sub
cmp
jb
out
test
hlt
dec
xchg
jl
imul
std
and
adc
je
inc
aad
mov
sub
test
xchg
and
ret
lcall
ljmp
pop
out
aas
clc
push
imul
and
cld
adc
xchg
jmp
adc
inc
insb
sbb
dec
imul
and
or
imul
inc
or
adc
das
dec
test
or
jecxz
cmp
xchg
add
outsl
jg
pusha
xor
inc
data16
inc
dec
mov
and
xor
and
rorb
ret
mov
sahf
iret
pop
jbe
fneni(8087
cli
push
jle
es
scas
jmp
pop
cmpsl
inc
lret
mov
bnd
push
rcrl
sub
or
int3
out
stos
sarl
cs
xor
push
cmp
inc
addr16
push
loop
xor
push
xchg
xchg
jbe
xlat
fimull
insl
iret
inc
push
icebp
rclb
pop
push
jge
std
xchg
and
xor
jae
add
xor
cld
sbb
iret
xchg
repz
sub
sbb
mov
sub
mov
adc
dec
fisubl
addb
sbb
xor
xor
mul
jae
inc
jg
jae
movsb
outsb
imul
mov
out
in
mov
mov
or
hlt
data16
inc
or
jae
fstpt
push
lcall
stos
jbe
push
mov
sbb
mov
and
test
gs
xchg
int3
jmp
push
hlt
pop
xchg
inc
addr16
stc
fbld
mov
jno
jg
dec
ljmp
inc
in
ss
cltd
xchg
test
adc
imul
test
test
xlat
out
loop
push
jno
jecxz
sub
pop
roll
cltd
jmp
daa
and
jl
lods
js
mov
daa
dec
loopne
ljmp
movsb
mov
insb
push
sbb
fdivs
out
out
rolb
enter
and
add
nop
inc
and
dec
lea
arpl
sbb
test
imul
cmp
je
stos
adc
adc
inc
adc
psadbw
insl
jno
fisttpl
jmp
sbb
inc
popa
sbb
mov
xor
out
xchg
adcb
test
mull
jae
xor
jno
push
fs
clc
in
jb
cmp
data16
in
lret
or
or
jne
mov
push
fcoml
lahf
aaa
cmp
pop
xchg
jne
addl
lock
hlt
xor
mov
cmpsb
lahf
mov
arpl
test
cwtl
imul
and
or
sti
ret
dec
pop
and
cmp
mov
sub
lds
jb
mov
jp
jbe
mov
pop
mov
add
sti
fadds
mov
ret
add
movsl
popa
push
shlb
add
mov
ss
and
pop
jp
std
popf
adc
rclb
mov
sarl
std
gs
sbb
lods
inc
xchg
inc
out
testb
mov
pop
loope
aas
hlt
dec
dec
faddl
daa
and
pop
adc
aam
sub
jae
cld
jnp
and
test
repnz
std
inc
push
xchg
imul
mov
jecxz
shlb
cmp
daa
repz
sbb
sbb
jle
sub
pop
sbb
lret
mov
jle
xor
jns
clc
mov
mov
adc
outsl
mov
arpl
push
inc
nop
sahf
lock
mov
and
xor
jp
int3
lods
jnp
fsts
or
pop
inc
jbe
rorb
sub
cs
adc
xlat
jecxz
out
mov
push
dec
xor
sbb
inc
push
out
push
lret
leave
rorb
lock
and
inc
dec
cmp
mov
cmpsb
cmp
repz
jmp
testb
mov
rcrl
in
insb
jmp
mov
lea
fistpll
popa
loope
xor
subl
adc
scas
mov
test
cmp
in
cmp
pop
mov
dec
xchg
fimuls
and
mov
mov
xchg
in
fadd
test
cmp
loope
dec
dec
push
or
jl
imul
push
mov
repz
sbb
mov
push
mov
hlt
in
clc
add
pop
mov
xchg
push
addr16
push
hlt
and
add
aad
lahf
add
cmp
out
lea
cmp
in
mov
movsl
lock
lahf
test
jbe
push
cmp
fdivr
inc
out
mov
adc
and
sub
outsl
cltd
js
cmp
lods
jb
jno
xor
cld
or
or
pop
loopne
icebp
lcall
je
mov
jne
pop
jge
aas
sbb
jmp
or
sbb
mov
pop
sub
outsl
into
mov
shr
cmp
jl
int3
cmova
dec
cld
cmc
adc
mov
jg
aad
sbb
clc
lods
sbb
aaa
shl
pop
loope
psllw
imul
adc
aas
loop
sub
push
leave
aad
mov
xor
ret
pop
mov
shl
xchg
push
xchg
cmp
xchg
dec
repnz
lods
and
sub
gs
lret
fs
hlt
mov
hlt
mov
push
mov
popf
or
arpl
jmp
push
shlb
sarb
iret
popl
jg
mov
out
and
pop
aas
mov
sbb
inc
scas
sub
fdiv
pushf
test
sbb
mov
cmc
bnd
sbb
shrl
arpl
add
dec
ss
sbb
cltd
xchg
sarb
push
push
loopne
cmp
or
sbb
notb
push
add
dec
lock
sbb
out
cmc
dec
insl
xor
add
inc
inc
fisubrs
in
test
ss
hlt
mov
negl
mov
adc
xchg
inc
jecxz
push
mov
gs
mov
pop
dec
lods
mov
shl
push
in
lds
lret
sarl
adc
jmp
mov
push
push
xlat
out
gs
out
push
fldl
and
lret
xchg
jb
cwtl
and
mov
rcrl
and
aad
xchg
adc
mov
sbb
cmp
sahf
add
bound
outsl
mov
test
sub
push
cmp
jb
notl
pop
pop
jg
inc
cmp
sub
inc
jge
and
pushf
cmp
sbb
shl
ficoms
mov
jb
adc
dec
clc
das
lods
and
cmp
ss
xchg
aad
fisubs
add
divb
stos
pop
mov
dec
jp
leave
add
mov
sbb
lret
inc
mov
and
stos
push
push
test
cld
popa
and
sbb
sub
arpl
cmpsl
insb
shr
popa
jb
xchg
jnp
jle
outsl
mov
xor
pop
push
and
je
popa
arpl
push
pop
mov
clc
mov
mov
test
aas
dec
cmovle
test
push
xchg
add
mov
mov
in
int3
rorb
push
pop
add
rcll
les
or
mov
dec
hlt
cmp
xor
mov
inc
dec
add
call
dec
cld
stos
adc
mov
inc
movsb
or
inc
jo
es
int
mov
jae
mov
lds
dec
insl
nop
push
sti
push
jbe
and
shll
stos
cmc
sahf
mov
pop
and
dec
jno
idivb
adc
or
jo
dec
mov
cmp
and
shrb
xchg
xor
mov
add
pop
or
push
push
scas
es
adc
icebp
subb
inc
decb
sbb
sub
add
iret
xchg
dec
js
ljmp
mov
repz
jno
popa
jmp
dec
loope
lock
hlt
test
test
loope
test
jmp
inc
cmpsl
push
arpl
test
sub
mov
push
add
pop
outsb
std
dec
pushf
pop
mov
dec
mov
dec
pop
adc
sarl
int
int
inc
and
fcoml
and
out
divl
leave
pop
mov
add
add
subl
outsb
out
add
out
adc
sub
int3
mov
jl
inc
or
cmp
jp
jle
call
sub
dec
xor
test
ret
insl
adc
cmp
sti
and
dec
and
add
scas
pop
test
mov
outsb
rcll
cmpsl
pop
adc
jbe
xlat
adc
mov
mov
jbe
mov
dec
bound
aad
pop
xchg
cmp
lea
dec
and
and
inc
inc
push
testl
fidivrs
nop
fmul
or
enter
stos
iret
mov
outsb
adc
jg
stos
fcoms
scas
rorl
and
mov
pop
push
fldcw
jnp
mov
fwait
cmp
out
lret
popa
cmp
mov
aas
loope
dec
jns
jecxz
mov
pop
mov
lcall
or
and
mov
push
sarb
icebp
shr
push
xchg
push
inc
pop
es
pusha
outsb
jb
outsb
jecxz,pn
adc
out
dec
lret
sub
cmc
sub
mov
mov
jp
rclb
pop
sahf
outsb
xchg
cmp
dec
adc
mov
loope
push
daa
cmp
sbbl
sub
mov
push
xchg
shll
mov
jo
ja
cwtl
jg
jne
adc
ret
sub
cli
shll
pop
outsb
xchg
ret
inc
test
jbe
xlat
jge
icebp
mov
jle
push
in
lahf
mov
iret
cmpsb
pushf
stos
inc
daa
cmpsb
in
arpl
xchg
pop
xor
mov
dec
mov
add
cmp
dec
insb
xchg
and
xchg
mov
cmp
sti
mov
cli
adc
stc
pop
lods
xchg
or
push
or
mov
shrb
test
cli
loop
mov
and
fcomps
mov
mov
nop
in
or
in
add
xchg
scas
rorl
into
sbb
xchg
mov
cmp
test
mov
fistpll
aas
scas
xchg
push
sbb
aaa
or
and
sbb
add
aad
cmp
jmp
jmp
jg
rcll
ss
mov
loope
add
sti
mov
daa
lcall
and
mov
add
push
adcl
outsb
inc
mov
lods
sub
addr16
xchg
fistpl
jl
fistpl
out
lea
mov
push
or
loop
int
test
mov
inc
pop
mov
jge
ret
cmp
pop
cmp
xchg
jge
lret
lods
jno
dec
or
enter
ljmp
jno
mov
sbb
shl
adc
js
push
add
xchg
cmpsb
dec
stos
jge
daa
arpl
xor
jae
sahf
out
std
rorl
pop
pop
div
cltd
jp
pop
out
mov
rcrl
testl
xor
rorb
push
pop
pushf
cmp
stos
out
call
aaa
gs
cwtl
outsb
repz
mov
pushf
inc
adc
sar
rorl
stos
les
mov
add
adc
ja
add
xchg
jle
addr16
rcrl
test
outsb
xor
push
fstpt
ljmp
pop
mov
dec
pop
push
cmp
aam
mov
rcrb
pop
mov
sbb
lret
loop
mov
testb
sub
jnp
lret
xchg
sbb
cmp
mov
dec
jno
dec
and
dec
gs
movsb
ljmp
cld
loope
dec
scas
mov
lahf
jne
outsb
cmp
jmp
xor
iret
sub
dec
out
and
outsb
je
mov
lock
push
adc
dec
jmp
adcl
sbb
xor
and
data16
mov
test
daa
js
xchg
mov
push
mov
adc
sub
and
adc
sar
cmp
mov
imul
in
dec
adc
jb
gs
fisttps
lods
add
mov
adc
jl
popa
sarl
mov
lock
enter
scas
inc
cli
outsl
data16
xchg
pop
movsb
je
bound
cs
push
call
mov
pop
scas
or
fcomps
mov
xchg
daa
das
fwait
push
push
mov
sarl
inc
rorb
scas
sti
mov
hlt
cmp
adc
pushf
out
insb
jge
xchg
lret
lods
sahf
sti
push
dec
sbb
mov
dec
or
stos
xor
shll
inc
cwtl
mov
aas
into
aad
xor
hlt
repz
mov
ljmp
jecxz
outsl
adc
sbb
sub
rcl
inc
inc
pop
cmp
filds
outsb
test
cmp
pushf
mov
shrl
popf
les
loopne
dec
push
push
aam
cltd
stc
scas
js
insl
imul
in
xor
bound
add
or
aas
std
in
je
ds
into
cmp
ljmp
jb
mov
jb
icebp
dec
call
cs
xchg
test
xor
xchg
mov
pusha
or
aas
ret
rcl
in
adc
pop
int3
pop
adc
fisubs
sub
push
jo
push
mov
sub
mov
mov
mov
imul
xor
add
lea
mov
add
mov
mov
xor
add
jne
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
xor
imul
add
lea
mov
add
mov
mov
xor
add
jne
jmp
insb
jns
sbb
mov
push
push
nop
jl
pop
pop
jl
popa
inc
adc
xor
repz
xlat
push
and
or
std
mov
mov
nop
pop
sub
jns
les
jb
xchg
cmp
adc
out
jbe
cmp
std
and
arpl
mov
ds
pop
and
dec
jo
pop
mov
add
test
lret
dec
repz
cld
sbb
leave
sbb
int
rcll
sub
mov
stos
cmc
pop
and
adc
mov
lahf
scas
test
pop
mov
cmpsl
mov
cli
or
and
out
mov
nop
mov
mov
sti
dec
inc
mov
xchg
and
fidivs
and
adc
mov
push
lcall
jecxz
dec
fcom
cld
lods
push
out
iret
push
mov
out
in
sbb
add
push
sub
hlt
roll
fs
out
and
and
addr16
inc
and
icebp
push
add
jb
leave
cmp
sbb
mov
call
push
pop
dec
mov
fbstp
sbb
cmpsb
sbb
jl
incb
dec
outsl
mov
dec
xor
aas
mov
mov
mov
stc
adc
xchg
push
inc
inc
fdivl
lret
mov
ja
test
jnp
xor
fidivrs
push
std
inc
mov
hlt
push
pop
ret
mov
out
cs
mov
addr16
pop
cld
lock
or
and
nop
cmp
mov
mov
fs
push
fistl
test
les
inc
and
jb
sti
push
popf
push
mov
mov
mov
and
jae
aas
add
inc
push
add
mov
dec
pop
sub
push
adc
ja
push
sub
mov
jecxz
call
sub
xchg
cs
adc
pop
lods
fidivl
dec
aaa
add
mov
ret
idivb
cmpsl
pushaw
or
gs
out
mov
pop
mov
xchg
xor
xchg
mov
xlat
cltd
mov
mov
xchg
inc
lds
pushf
sub
iret
cs
adc
aad
pop
mov
fdivr
pop
cltd
cmp
xor
push
inc
dec
in
pop
fs
cmp
jb
inc
test
arpl
pushf
inc
fmull
or
cmc
std
cmp
sub
bound
sub
test
xchg
pop
pop
in
adc
sbb
out
mov
enter
jns
sub
cli
jle
lretw
push
das
sub
lds
add
mov
movsl
mov
cmp
test
bound
sub
leave
mov
sbb
adc
push
add
jl
add
mov
imul
push
cwtl
jge
nop
push
cs
mov
inc
fs
jnp
int3
pop
xchg
push
scas
xchg
pop
out
sbb
adc
repz
sub
add
mov
mov
popa
pop
stos
fcoms
cs
scas
gs
push
or
pop
imul
dec
in
pushl
xchg
loopne
stos
sti
inc
scas
imul
testb
add
mov
inc
push
xor
aam
jb
cmc
and
xor
out
sbb
pop
stos
jecxz
inc
mov
popf
mov
xor
push
jp
imul
cli
mov
pop
lahf
fldl
ja
xor
cwtl
ret
or
rcrb
mov
cmp
jne
inc
dec
dec
sbbl
mov
cmp
bound
and
loopne
cld
xlat
dec
cmpsb
fidivrs
jp
gs
pop
dec
cltd
nop
test
mov
cmp
jecxz
jg
ret
testl
ss
xchg
mov
and
lret
jmp
fisttps
lock
cmp
xchg
out
sahf
rcll
cmp
mov
mov
arpl
push
or
push
and
or
jbe
lds
int3
incl
xchg
aas
lret
cltd
fmuls
testl
cmpsb
pop
adc
and
xchg
aaa
sti
pop
add
add
ljmp
rcl
clc
push
scas
fmull
jmp
dec
fcoml
xorb
mov
xorl
or
sub
arpl
cmovle
sub
cmc
xor
dec
and
lock
or
xchg
das
in
mov
pop
jns
ds
fs
sbb
inc
adc
sbb
jns
dec
data16
mov
push
jb
add
iret
pushl
xchg
ds
cmp
test
ret
bound
add
lret
add
fidivrs
add
cmp
xchg
add
out
xor
cmp
popa
bound
das
aad
push
sbb
mov
hlt
jb
pop
leave
std
lcall
xor
pop
and
ret
jmp
std
jl
add
lret
stos
repnz
dec
inc
push
clc
jecxz
cmpl
imul
mov
mov
add
jecxz
xor
adc
lcall
shl
stc
push
leave
cmpsl
adc
lret
insb
loope
pop
sbb
dec
arpl
inc
dec
pop
xor
cli
jecxz
xchg
js
jge
mov
das
movsl
scas
jb
scas
pop
cmp
cli
adc
push
add
or
inc
std
dec
arpl
add
dec
in
enter
outsl
aad
or
fstp
adc
push
xor
mov
sub
loope
sti
mov
cld
cltd
mov
cmc
xor
jle
jbe
lahf
jge
into
or
dec
mov
in
pop
xor
int3
cld
pushf
stos
dec
pop
in
insb
add
ret
push
fwait
mov
sbb
vphaddbw
jb
dec
mov
xchg
outsl
inc
sbb
loope
jmp
scas
int3
xchg
fcoms
lds
inc
into
adc
pop
pop
mov
mov
mov
icebp
scas
push
jl
push
mov
out
push
arpl
mov
add
icebp
push
mov
push
call
pop
icebp
xor
pop
add
fdivrl
lcall
stos
cli
xor
push
das
xchg
je
sbb
jo
add
ja
mov
negl
jae
xchg
and
sarl
arpl
out
mov
pop
mov
cmpsl
cmc
dec
jge
add
jno
xchg
mov
cmp
loopne
loopne
fstl
rdtsc
inc
adc
xor
ds
xchg
mov
test
in
pop
js
push
cltd
pop
add
or
jmp
mov
dec
fcmovne
out
lret
or
pop
psubsw
fisttpl
insl
push
out
idivl
xchg
cltd
stos
ret
in
dec
inc
in
push
mov
pop
ds
cmp
xor
xchg
push
mov
add
xchg
jbe
fdivl
and
dec
or
ds
pop
mov
and
push
push
insb
and
cwtl
mov
jae
xchg
inc
sub
dec
jns
or
mov
inc
aam
adc
lcall
mov
pusha
repnz
push
jp
fidivrl
dec
loopne
or
insb
rorb
fcomps
mov
iret
daa
xchg
gs
jmp
addr16
jecxz
mov
sub
push
jg
lret
rclb
add
sub
inc
cmp
aas
xchg
adc
mov
lods
shlb
adc
adc
fidivrl
jno
in
fidivl
cmpsb
sbb
mov
filds
add
mov
push
push
mov
dec
xor
jo
pop
mov
dec
fsubrs
sbb
mov
popf
js
adc
and
jp
jge
inc
adc
repnz
mov
jecxz
pop
test
pop
movsb
mov
jle
mov
sub
push
ljmp
mov
rolb
adc
add
jbe
out
icebp
pop
cld
adc
mov
cltd
shr
inc
rcrl
mov
dec
jbe
or
in
sub
jne
sub
inc
xlat
sub
in
inc
js
jmp
fwait
inc
push
into
repz
insl
inc
inc
add
clc
jmp
sub
lret
sbb
jae
xlat
add
adc
ljmp
lea
push
test
sub
dec
pusha
pop
dec
or
dec
fbstp
mov
jge
jecxz
inc
in
test
xor
push
push
inc
jns
jae
loop
adc
stc
dec
cmp
test
cmp
mov
popa
and
or
jae
or
adc
push
rolb
hlt
nop
lcall
dec
jb
lcall
out
shl
into
mov
hlt
clc
subl
push
sub
inc
imul
adc
or
nop
cmp
mov
mov
pop
jbe
cli
stc
ret
test
mov
inc
jbe
lret
cmp
jbe
shll
mov
xchg
mov
lahf
test
and
cmp
call
test
test
test
sub
movsl
push
movl
push
out
push
call
rcrl
repnz
pop
xor
leave
mov
sti
fdivp
iret
mov
sarl
mov
jle
jnp
lret
std
adc
sti
mov
fisttps
in
fidivl
inc
jo
dec
es
pushf
mov
mov
sub
sbb
xor
inc
xchg
adc
scas
pushf
addr16
test
mov
bound
push
call
lock
imulb
fcmovne
js
add
mov
push
sub
mov
push
adcb
icebp
xchg
mov
xchg
sbb
push
mov
pop
je
jmp
in
cmpsl
leave
mov
push
iret
leave
sub
add
sub
mov
or
aaa
out
fwait
sti
adc
mov
rcl
xor
mov
in
xchg
or
rcrb
mov
jmp
mov
inc
out
pop
jo
fldt
aam
or
xor
xchg
add
and
int
outsl
sbb
jg
in
jno
dec
imul
sub
and
jae
mov
pop
sub
inc
jmp
orl
enter
shl
repz
adc
leave
and
in
test
pusha
adc
das
push
icebp
pop
stc
sarl
hlt
dec
mov
mov
sbb
sub
sahf
sbb
inc
jle
cld
nop
test
mov
push
ja
jne
add
loop
jmp
pop
pop
int3
sbb
mov
testl
or
jle
fs
pop
push
xor
pop
hlt
pop
add
aas
cltd
push
pop
mov
or
adc
bound
insb
xor
push
std
mov
jne
jmp
inc
es
push
faddl
push
push
push
jecxz
adc
lea
push
xchg
cltd
dec
pop
imul
out
lock
sbb
xor
into
pop
jnp
fs
xorb
nop
pop
or
jno
nop
fwait
int3
mov
mov
fisttpll
lret
jecxz
stos
push
ds
dec
sub
lcall
mov
lahf
orl
push
in
push
je
sbb
daa
notb
adc
mov
imul
mov
out
jae
mov
and
loope
push
pop
aaa
mov
outsb
popa
call
sbb
mov
es
cmp
ljmp
and
cmp
jns
fistl
push
mov
sbb
iret
inc
lock
mov
mov
bnd
push
addl
ja
cmp
jge
int
xor
push
imul
mov
leave
jl
sbb
inc
xrelease
pop
mov
sbb
pushf
rcrb
mov
nop
fisubl
es
inc
xor
xor
inc
sub
mov
lods
das
repnz
ljmp
adc
add
and
or
sti
sbb
xchg
sub
and
repz
mov
sahf
push
xchg
outsl
ja
enter
xchg
enter
sbb
jg
and
cmc
decl
jl
daa
sbb
mov
push
loop
out
xorb
sub
lahf
xchg
add
lock
mov
lret
sbb
mov
or
cmpsb
ljmp
sub
frstor
cmp
xchg
jg
jge
push
pop
test
cmpsb
sub
xor
sbbl
inc
dec
push
pop
std
adc
scas
arpl
mov
and
fldenv
jg
xchg
mov
add
movsb
mov
push
stos
imul
adc
and
int3
mov
movsl
pop
cmc
dec
nop
xchg
scas
pop
lods
in
inc
in
ljmp
xor
xlat
fdivl
mov
iret
mov
mov
cmp
pop
addb
cwtl
sbb
add
adc
in
xchg
scas
nop
andl
mov
cwtl
mov
divb
add
and
sahf
xchg
xchg
inc
fistps
inc
lods
data16
push
rorl
xchg
daa
fisttpll
cmp
pop
lock
adc
push
inc
mov
test
lds
jg
imul
ret
xor
in
std
lret
loopne
add
clc
sbb
jae
add
or
popa
and
sbb
cmp
xchg
stos
push
je
lods
outsb
cmp
fldcw
not
and
adc
outsl
adcl
sub
and
adc
lahf
add
rep
out
adc
xor
inc
xlat
fs
push
lds
cmp
leave
mov
jnp
pop
cwtl
xchg
addr16
pop
cli
jmp
jmp
mov
lds
push
mov
jp
xchg
sbb
enter
fnstenv
push
mov
mov
outsl
loop
loop
sbb
adc
imul
in
mov
mov
addr16
mov
mov
inc
gs
xchg
in
mul
scas
cltd
adc
arpl
arpl
add
xchg
push
jp
jns
sbbl
ret
leave
cwtl
inc
lock
test
xor
dec
sahf
add
inc
aad
fistl
or
pop
inc
shlb
in
shrl
stos
xor
jecxz
mov
ja
dec
mov
pushf
xchg
jmp
fisubs
sub
hlt
mov
pop
insl
mov
pslld
mov
sti
pop
insl
sti
cmp
dec
lock
mov
mov
fildll
cs
mov
out
jle
aam
stos
sbb
pop
rep
imul
dec
push
adc
push
popa
fnstsw
fnsave
lods
mov
ficoml
xchg
out
fbld
jne
ljmp
jb
cmp
xchg
in
dec
sbb
imul
fcmovb
xchg
mov
push
call
clc
push
jg
sbb
pop
stos
cli
mov
jnp
or
mov
in
mov
jp
xchg
mov
mov
jecxz
mov
mov
scas
in
push
in
rclb
cwtl
mov
test
mov
and
test
iret
push
xor
adc
sbb
lret
adc
xchg
mov
jne
jl
test
push
xchg
pop
cmp
jbe
dec
push
idiv
pop
rorl
movsb
mov
movsb
stos
in
mov
pop
xor
xor
pop
mov
push
dec
push
mov
push
push
ret
inc
cmp
jno
data16
jne
cmp
pop
jge
xor
mov
dec
inc
mov
inc
pop
add
mov
scas
leave
sti
xchg
repnz
orb
inc
out
outsb
pop
out
push
pop
test
push
cwtl
out
in
outsl
imul
pushf
gs
fs
addr16
jb
push
ret
subb
test
hlt
mov
and
in
mov
cmp
ret
jno
mov
lods
jb
inc
loop
or
icebp
sub
cld
stos
mov
cwtl
add
out
lret
rclb
xchg
lods
pop
xchg
lock
test
ljmp
xchg
dec
cmp
lcall
outsb
in
jmp
or
sub
xor
out
dec
mov
dec
sub
pop
fldl
shll
inc
inc
push
sub
inc
push
mov
test
popf
popa
adc
xorl
inc
pop
mov
cltd
in
add
inc
arpl
cmp
jp
lods
mov
loopne
stos
or
inc
add
xor
pop
sbb
sbb
xor
leave
test
repnz
mov
cs
out
icebp
jmp
sub
push
loope
lods
or
insl
mov
mov
aam
sub
sbb
xchg
nop
dec
test
xor
outsb
inc
mov
pop
rolb
fstpt
adc
pop
fldenv
and
cmp
cmp
movsl
jnp
mov
adc
ret
push
jnp
sahf
out
push
xor
lea
xchg
xchg
lods
sub
iret
js
pushf
daa
cltd
pop
inc
jno
push
jnp
test
inc
xlat
add
pushf
stos
fsubrl
inc
xor
mov
negl
push
mov
push
addr16
sbbl
xor
scas
mov
add
add
and
test
dec
xchg
lahf
mov
roll
mov
adc
adc
xchg
mov
mov
lock
cmp
jbe
mov
leave
pop
orl
xor
std
pop
add
pop
sub
dec
sti
test
pop
repz
mov
inc
dec
ficompl
or
xchg
out
sbb
push
jne
add
mov
lret
daa
mov
mov
jo
and
scas
mov
das
insl
push
inc
sar
arpl
jb,pn
or
push
adc
daa
in
xchg
flds
adc
pop
jmp
cmp
mov
lods
push
dec
mov
mov
test
add
icebp
andb
fdiv
jecxz
push
in
adcb
roll
pop
mov
or
pop
lret
lds
popa
inc
scas
xchg
sbb
hlt
arpl
jecxz
push
push
test
cmp
in
sbb
arpl
rcr
add
dec
subb
jne
xor
popl
arpl
stos
scas
mov
mov
sbb
mov
jp
lahf
fdivl
sbb
and
leave
ljmp
inc
push
stos
sub
cmpsb
inc
jg
xor
insb
addr16
xchg
push
mov
mov
arpl
push
es
jge
inc
pop
repnz
add
loope
sahf
ss
sahf
and
gs
leave
je
inc
mov
add
test
hlt
mov
orl
add
or
xchg
dec
push
popa
inc
cmpsl
adcb
xor
scas
int
stos
mov
mov
xor
inc
rol
mov
aam
mov
push
and
pop
jp
pop
push
and
push
pop
cmp
inc
test
jmp
js
hlt
push
out
fdivr
dec
inc
in
sbb
pop
insb
out
pop
js
jae
fmul
rcrl
dec
sbb
mov
movsb
outsl
pop
mov
cli
mov
leave
or
sub
sbb
cmpsl
pusha
dec
jp
lcall
jbe
iret
mov
cmovbe
addl
stos
cmp
fdivr
xchg
cs
push
clc
ret
push
fwait
dec
add
imul
out
push
and
repz
pop
push
fs
xchg
jmp
sub
mov
cld
sub
inc
mov
mov
clc
sub
lret
jne
push
repz
mov
sbb
push
jb,pt
mov
pop
mov
mov
stos
pop
out
subb
mov
imul
decb
inc
test
jecxz
jl
mov
orl
fsubrl
test
pop
xchg
jmp
and
iret
jge
lods
in
inc
data16
pop
cmp
out
pop
pop
insb
cmp
mov
jae
jae
push
jp
adc
cmp
stos
pop
xchg
add
subb
fiadds
jb
roll
ret
cli
mov
and
sub
push
sbb
test
fistpll
out
mov
jb
mov
rolb
xchg
or
pushf
mov
call
lods
aas
loopne
xchg
movsl
stc
jbe
fcompl
lret
mov
push
xchg
push
icebp
adc
es
push
jne,pt
fs
push
cmpb
adc
mov
adcl
loopne
cmpsl
dec
add
hlt
xchg
stos
pop
leave
js
push
ficompl
lock
adc
jl
xchg
into
std
add
inc
stos
fwait
pop
lret
adc
adc
sbb
ds
test
rorb
xor
dec
fimuls
shrl
push
xchg
adc
jb
xchg
icebp
addr16
mov
adc
mov
cld
add
pop
mov
test
pop
hlt
pop
jle
add
or
xchg
and
inc
lret
mov
xchg
ret
out
shl
aad
test
mov
int3
jp
movsl
sbb
or
into
sbb
outsb
push
in
jmp
out
jp
pop
push
loope
test
in
inc
jne
shl
xchg
mov
stos
jmp
mov
cltd
push
adc
pop
fs
push
sbb
sti
jbe
lcall
repz
jb
jno
cmpsb
bound
mov
mov
push
aas
and
aad
and
bound
icebp
pop
and
adc
inc
repz
cwtl
xchg
sub
in
xor
adc
shlb
clc
cld
aas
jbe
inc
pop
inc
or
inc
loopne
out
mov
xchg
bnd
push
daa
xchg
icebp
mov
push
push
xchg
inc
mov
in
js
mov
cli
mov
sahf
xchg
lock
sbb
or
outsb
or
pop
cwtl
xchg
or
cmp
xchg
sub
pushf
and
and
push
imul
dec
dec
stos
push
repz
jb
mov
pop
rcrb
xor
or
jb
xchg
xchg
fdiv
add
pusha
xchg
mov
popf
je
pop
and
sbb
das
xchg
pop
push
jecxz
ljmp
loope
mov
lret
pop
sbb
xchg
fstpl
aad
pop
add
scas
test
scas
mov
inc
xchg
jle
aas
mov
loope
cltd
addb
inc
stos
and
out
sbb
out
jae
mov
or
lret
pop
jg
insb
pop
addr16
mov
or
clc
fldcw
ja
std
push
mov
cmp
mul
jmp
dec
scas
test
gs
adc
test
or
or
sbb
std
pop
mov
mov
pop
jmp
movsl
das
xor
test
or
leave
fisttpl
insb
jp
mov
add
ds
or
stos
adcl
data16
mov
dec
aad
mov
adc
insl
testb
aas
push
pop
lret
xchg
stc
std
push
test
pop
add
js
cmp
lea
mov
dec
out
sbb
ret
adc
mov
faddl
repz
into
lock
mov
pop
addr16
xchg
xchg
fs
mov
dec
pop
mov
into
push
and
pop
jge
sub
scas
lods
dec
inc
out
or
sbb
xchg
inc
and
stos
shrb
inc
loopne
push
clc
jmp
sub
stos
mov
push
dec
movsl
sbb
and
inc
cmp
pushf
push
mov
enter
ffreep
push
xchg
and
push
xchg
inc
jo
ret
jmp
dec
add
mov
adc
cmp
xor
push
mov
das
adc
cwtl
shrl
mov
call
test
pusha
aaa
lds
int3
push
sbb
cmp
test
subb
xor
push
lods
out
pop
aad
jge
lods
loope
rcll
xor
mov
or
and
sbb
xor
sbb
ljmp
mov
sbb
and
add
jns
lcall
sbb
jmp
stc
mov
addl
fstps
dec
je
push
imul
xor
cmp
gs
popf
fldl
cmpsb
jg
and
test
cwtl
ljmp
ljmp
outsl
in
test
addr16
mov
stc
test
or
and
lds
mov
rolb
sbb
rcl
in
cld
or
cld
dec
outsb
mov
pop
fdivrp
xchg
add
pop
dec
ljmp
or
push
jecxz
gs
add
sub
hlt
mov
mov
adc
mov
inc
outsl
dec
mov
dec
in
cmp
mov
andb
icebp
xchg
scas
and
cmp
int
sbb
mov
cld
repnz
bound
fidivs
jmp
or
lods
outsl
jns
hlt
fs
or
repz
cwtl
std
dec
fs
fcmovnu
mov
mov
outsb
call
sbb
xor
outsb
xchg
or
in
inc
xchg
daa
insl
push
fs
jno
sub
sbb
outsl
ds
call
jle
push
cmp
pop
sub
or
mov
ljmp
mov
dec
clc
mov
jecxz
mov
sbb
xor
adc
mov
inc
inc
sbbb
sub
push
int
aad
cmpl
push
mov
sbb
pop
fiadds
sbb
mov
mov
fnstsw
add
or
and
sbb
dec
inc
test
enter
pop
fwait
jmp
sbb
in
fstl
mov
xor
xchg
nop
mov
xor
xchg
inc
lcall
test
in
shlb
out
mov
push
test
mov
std
je
popf
mov
jnp
mov
testl
jp
cmpsl
xlat
pop
xchg
inc
or
jns
or
lods
popf
push
xchg
pusha
cmpsl
stos
mov
fsubrl
pop
mov
pop
dec
xchg
push
mov
mov
scas
filds
out
outsb
cltd
pop
xchg
fistl
das
inc
jg
adc
xchg
int3
xor
cmpl
mov
and
out
fwait
dec
nop
jnp
enter
loopne
shll
test
mov
out
xor
push
jmp
mull
aas
mov
jno
dec
jo
mov
stc
loop
mov
ja
sti
lea
adc
test
iret
stc
adc
test
lahf
scas
add
dec
test
lods
fsubl
jmp
cmpsl
inc
cld
mov
mov
sub
cli
fcoml
fisttps
pusha
cmp
push
or
adc
adc
cmp
mov
pop
jle
out
jae
mov
adc
and
ret
into
lods
dec
xor
fs
mov
jne
pop
xor
xor
mov
sub
add
daa
pop
stos
jb
shlb
rorb
jmp
lods
push
pushf
cld
cltd
arpl
cs
dec
xor
out
mul
adc
popa
add
mov
cmp
fdivrs
mul
es
sti
fsubrl
int
mov
fcomi
add
xchg
push
jo
mov
adc
jae
es
or
shll
aas
xor
mov
jb
call
mov
inc
loopne
popl
mov
dec
sbb
es
aas
pop
ret
mov
loope
loope
divl
cmp
fadd
pushf
hlt
ret
dec
xor
cld
sub
sbb
adc
inc
cltd
cmp
pop
push
jno
cld
or
adcb
bound
rcrb
rcpps
cmp
and
push
mov
jmp
adc
test
push
cmpsb
dec
out
xor
pop
sbb
pop
jne
jg
xor
push
cmp
mov
dec
shll
mov
fbstp
or
hlt
sub
jle
cmp
mov
adc
addr16
pop
mov
bound
inc
push
dec
sbb
cld
scas
sbb
adc
shll
mov
mov
or
mov
cld
mov
fstl
rolb
sub
mov
iret
fsubs
in
loope
sub
jp
dec
add
out
pop
and
mov
stos
push
adc
push
sahf
movsl
add
mov
in
sub
fld
outsl
jmp
data16
loopne
shrb
sbb
adc
and
cli
cld
loope
mov
mov
push
jle
test
shll
mov
mov
sub
push
cmc
in
sar
add
add
scas
aaa
cld
push
cmpsb
adc
jne
stos
cmp
repnz
sbb
adc
test
and
inc
pop
mov
jge
pop
cmp
mov
inc
pop
sbb
mov
out
popf
outsl
sbb
mov
sahf
fstps
jmp
mov
mov
testl
xor
imul
cmp
or
push
cmp
mov
into
call
lret
xchg
js
xor
xor
shll
mov
sub
xchg
mov
dec
mov
loope
xor
xchg
aas
mov
movsb
or
cmpsb
dec
insl
cld
les
scas
filds
ljmp
dec
add
into
jbe
jo
imul
fs
xchg
xor
jae
lret
stos
add
push
sbb
xchg
inc
mov
gs
out
mov
add
push
or
xchg
hlt
push
shll
pop
cltd
hlt
fstps
repnz
dec
mov
fdivrs
lret
pop
cli
jle
rolb
dec
testl
mov
and
adc
inc
adc
and
add
adc
sbb
insl
scas
jnp
mov
sub
inc
dec
mov
mov
lea
fdivl
ljmp
jno
xchg
xchg
add
repnz
push
adc
cvtdq2ps
push
xchg
mov
fwait
or
sub
sarb
cmp
bound
data16
cmp
iret
rcll
xchg
cmp
in
popa
push
addr16
jb
aas
mov
in
mov
bound
jns
lock
test
sub
repnz
or
lods
xchg
pop
orb
outsl
mov
adc
sub
aaa
movsb
jp
jo
mov
cmp
cmc
fcomip
inc
and
xchg
fstps
aas
and
out
ret
lret
decb
sub
iret
icebp
out
cmp
iret
jnp
cmc
es
sti
mov
jbe
and
push
mov
push
pushl
xchg
aas
popf
sub
test
jb
cltd
insl
dec
and
cltd
push
aaa
mov
addr16
inc
xchg
jmp
add
push
outsl
mov
jns
in
lret
push
mov
scas
movsb
ds
xor
pushf
dec
dec
pop
lds
in
jle
jg
cmpsb
xchg
xbegin
add
push
aaa
leave
lods
xor
popa
sahf
sub
aam
xchg
movsb
xlat
loopne
dec
insl
xchg
fcompl
and
push
scas
divb
sub
insl
sbb
out
dec
jae
push
jbe
mov
lea
pop
fmuls
repnz
jne
inc
and
fs
jno
lcall
sub
gs
test
or
sti
jle
shl
or
sbb
pop
and
xor
xor
or
ret
mov
imul
sti
cmp
ret
mov
fwait
movl
mov
lods
push
jbe
data16
fnstcw
pop
xchg
push
adc
inc
popa
out
sub
dec
cld
add
jbe
cltd
hlt
and
mov
shl
fwait
mov
adc
lods
sub
or
and
cmpsl
and
cwtl
stc
mov
push
mov
xor
mov
add
mov
pop
pop
pop
leave
ret
jne
adc
std
push
adc
aas
adc
sbb
adc
sbb
add
push
adc
out
jg
add
dec
adc
mov
jns
add
inc
adc
sbb
inc
add
cmp
inc
add
cmp
inc
add
cmp
inc
add
add
add
add
add
add
add
inc
cmp
add
scas
inc
adc
inc
cmp
add
adc
push
adc
cmp
add
sbb
add
adc
idivb
inc
add
cmp
cmp
add
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
adc
subb
cli
adc
sbb
adc
pop
inc
adc
sbb
adc
in
pop
adc
pop
sub
add
add
inc
add
add
inc
add
add
cmp
add
aaa
adc
cmpl
adc
push
dec
adc
mov
adc
lock
add
adc
outsb
or
add
add
add
push
push
inc
push
in
in
imul
add
ret
add
inc
cmp
jae
popa
insb
insb
and
je
pop
push
outsb
fs
dec
push
pop
dec
popa
imul
outsl
insb
fs
dec
outsb
arpl
gs
dec
outsb
outsw
inc
jo
add
add
add
add
add
cmp
add
add
add
add
add
mov
cmp
add
mov
cmp
push
jns
bound
imul
inc
insb
outsl
jae
push
imul
popa
je
outsl
outsb
inc
insb
outsl
jae
push
.byte
