push
mov
sub
orl
mov
add
push
movl
cmpl
je
cmpl
jb
jmp
push
push
call
mov
dec
mov
jmp
push
and
push
and
mov
subl
xor
xor
xor
mov
sub
or
mov
movl
add
mov
andl
xor
add
inc
mov
cmpl
jle
jmp
push
pushl
call
cmpl
jb
mov
sbb
mov
and
mov
or
mov
mov
mov
adc
movl
andl
mov
inc
mov
cmpl
jg
jmp
call
cmpl
jb
mov
xor
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jbe
jmp
push
pushl
push
call
cmpl
jne
mov
inc
mov
jmp
add
mov
andl
mov
inc
mov
cmpl
jge
jmp
pushl
pushl
push
push
push
pushl
push
call
cmpl
jb
mov
movzbl
and
mov
not
mov
subl
mov
movl
cmpl
je
cmpl
jbe
jmp
pushl
push
call
mov
dec
mov
jmp
mov
mov
sub
push
orl
pop
sub
mov
mov
sbb
add
sub
movl
jmp
sbb
ja
imul
push
mov
push
stos
jp
jp
cmp
jp
sub
xor
xor
imul
inc
aad
icebp
pusha
dec
imul
jo
pop
iret
pop
dec
xor
jg
xorb
pushl
cli
arpl
in
cmp
mov
mov
mulps
fstl
push
cli
sbb
imul
and
mov
jmp
enter
cli
js
jae
cwtl
pop
mov
add
fisubrl
fs
mov
mov
int3
mov
push
bound
add
lods
dec
lret
rclb
std
bound
stc
push
mov
scas
inc
leave
lcall
in
adc
jb
jno
xor
les
notl
out
mov
xlat
or
xchg
xor
inc
ss
jo
jmp
sub
int3
add
and
lcall
cmp
cli
and
aas
mov
jo
into
or
mov
sbb
mov
aam
scas
lods
pop
test
pusha
in
mov
mov
fldl
mov
nop
dec
and
mov
js
fabs
setnp
in
loop
mov
or
idiv
shrl
je
mov
pop
pop
stos
fucomp
mov
inc
jbe
mov
jmp
mov
xor
xchg
ss
pop
fistl
jle
cs
add
popf
and
cmp
mov
push
stos
add
lret
es
andl
add
inc
mov
xchg
cmp
pop
jle
scas
dec
cmp
lea
and
ja
sub
add
sub
or
and
cli
xor
faddl
jne
adc
sbb
lods
mov
test
pushf
xor
das
lods
lea
and
mov
xchg
mov
add
add
jo
rcrb
sar
fsubrl
loope
rcrl
jmp
lcall
pop
lcall
icebp
subl
cmp
aad
cmpsb
fdivr
and
mov
loopne
lahf
adc
pop
jle
mov
mov
std
sbb
jno
xor
jle
adc
iret
sbb
loope
adc
fildll
negl
cmp
leave
adc
lods
xor
test
aaa
out
mov
pop
shlb
fwait
prefetchwt1
xlat
aas
pop
add
bound
out
mov
stc
add
dec
and
push
dec
jp
in
mov
add
cmp
mov
imul
pushf
pop
pop
mov
pusha
into
sub
pop
cmpsb
aaa
mov
outsb
testl
lods
fisttps
fidivs
xchg
mov
popa
call
pop
out
or
mov
inc
xchg
pop
les
insb
pop
sub
dec
or
jo
repz
adc
sbb
shlb
mov
out
adc
out
rolb
push
jne
cmp
mov
pop
mov
push
and
xlat
mov
mov
push
jl
movsb
movsb
inc
dec
shlb
popa
lods
jbe
mov
pop
lods
xlat
xor
inc
mov
jp
in
sub
stos
lods
sbb
icebp
mov
sub
jecxz
sbb
dec
into
cli
imul
out
pop
pop
mov
pop
pop
pop
inc
cli
jmp
inc
jg
push
dec
data16
out
push
fdivp
inc
sub
push
mov
stos
loopne
mov
fildl
test
mulb
lcall
stos
push
test
jg
out
mov
xchg
mov
mov
pusha
mov
add
loope
push
sbb
dec
push
mov
lods
stc
or
shlb
push
sub
inc
adc
and
push
arpl
test
lds
mov
xchg
sbb
adc
inc
fmuls
sub
daa
sbb
fmuls
lahf
ljmp
rorb
imul
out
push
xor
cmp
ret
mov
loope
adc
cmp
sbb
shll
jns
adc
dec
push
sahf
jl
pop
cs
aaa
orl
repnz
cmpsb
sub
popf
xor
sub
bound
mov
sub
hlt
lock
loope
jne
inc
sti
stc
sbb
jae
dec
adc
or
sub
std
sub
jne
repz
or
push
into
pushf
push
jb
fisttps
ret
shrb
fsubrs
loopne
stc
mov
cmp
movsb
stc
mov
inc
push
pushf
outsb
repz
jno
dec
lret
lret
rclb
popf
sbb
xchg
jno
sub
lret
fcmovnu
ds
jmp
ret
loope
push
cmp
xchg
xor
icebp
sbb
rorl
bound
xchg
mov
pop
cmpsb
testb
add
pushl
shrl
adc
outsl
jle
roll
es
push
adc
mov
cmp
pop
mov
mov
daa
fdivr
mov
pop
cs
cld
pop
inc
jge
addb
xor
add
ja
push
adc
pop
ret
std
loop
add
rclb
aas
xchg
add
mov
dec
and
es
or
mov
and
or
pop
adc
scas
fbstp
mov
loope
sub
and
repz
and
pop
cmc
pop
hlt
dec
int3
cmpsl
push
imul
lock
jmp
mov
jo
sub
lret
inc
xchg
jne
in
shll
xchg
shlb
sbb
js
mov
xchg
xchg
pusha
push
outsl
inc
sbb
adc
dec
push
imul
jp
in
adc
imul
test
inc
mov
repz
in
movsb
imul
jmp
xchg
xchg
mov
cs
shll
cmp
imul
loopne
cwtl
mov
cmp
out
pop
out
fisubrs
enter
pop
pop
push
stos
push
outsb
cmp
inc
push
test
sub
stos
pushf
jnp
jmp
sahf
in
pop
jb
outsb
jmp
sub
jns
dec
lods
pop
fs
or
ret
jl
add
out
popl
and
cwtl
ja
adc
ret
pop
imul
pusha
pop
jae
cli
adc
pop
cmp
pop
int
test
mov
dec
fsubl
clc
mov
mov
in
cmp
jnp
mov
in
insb
fisubrs
mov
push
xor
xchg
dec
cli
daa
lret
cmpsl
mov
lock
call
cltd
inc
or
push
dec
pop
sub
iret
mov
pop
jmp
adc
xchg
and
inc
cmp
add
push
fidivl
mov
cmc
add
jb
push
push
sbb
cmp
daa
xor
add
cmp
xchg
loopne
sub
fisubrs
push
insl
in
js
push
aad
stos
arpl
xchg
jmp
push
xor
add
cmpsb
xor
ss
add
loop
adc
jp
jecxz
push
sub
int3
adc
mov
or
or
iret
stos
daa
lahf
mov
mov
fwait
sti
pop
ljmp
mov
test
popf
je
repz
sub
sub
xor
xlat
pop
cwtl
mov
sahf
outsb
push
and
jle
and
and
ret
xchg
ljmp
cmpsb
imul
aaa
lods
addr16
and
pop
insl
das
mov
ficompl
jnp
adc
test
jp
cmp
or
push
sti
cmpsb
stc
xchg
clc
testl
call
xor
testb
fwait
in
push
push
stos
cmc
jae
rorb
sbb
fdivl
sbb
jl
mov
sub
fcmovb
mov
out
aaa
inc
ss
repnz
fdivr
cmp
adc
arpl
arpl
leave
cs
adc
fcmovu
mov
das
rcl
rcrb
xchg
xchg
mov
insl
xchg
dec
es
sbbb
push
xchg
out
mov
sti
xchg
push
sbb
test
andb
repz
ret
mov
add
inc
mov
xchg
outsl
sti
scas
push
or
add
ret
and
xor
mov
movsb
and
jns
mov
adc
cld
fstpt
stc
cmpsb
xor
negl
dec
push
mov
dec
daa
mov
inc
mov
nop
and
sub
popf
sahf
and
cwtl
jp
mov
or
je
jmp
mov
leave
cli
mov
bts
shll
inc
insb
ds
push
and
push
mov
scas
xlat
imul
push
xchg
sbb
push
sub
xchg
es
mov
test
sub
rcr
add
pop
mov
push
pushf
mov
addr16
mov
sbb
hlt
adc
xor
push
xchg
push
add
out
roll
es
js
cmp
or
mov
in
loopne
mov
lcall
jne
shl
mov
add
outsb
test
and
lea
mov
xorl
mov
ss
dec
push
add
push
inc
mov
aas
sahf
jns
je
incl
hlt
daa
daa
jmp
or
pop
cmpsb
sub
les
rcrl
sbb
pop
fisubs
push
xor
dec
push
dec
dec
or
sub
mov
mov
sbb
mov
decb
push
ljmp
sub
pop
xchg
and
inc
add
test
add
enter
inc
fs
sub
mov
xor
jo
js
add
mov
jecxz
pop
je
pop
inc
rcr
aas
in
sahf
adc
in
push
loopne
and
ja
cmpsb
pop
mov
fs
icebp
xchg
pop
or
jp
pop
and
jle
add
sahf
mov
xchg
stc
test
mov
xchg
pop
lods
fwait
xchg
or
movsb
push
scas
repz
adc
or
sub
addl
jl
aam
movsb
or
sbb
push
lods
cmp
movsb
ret
je
rorl
movsl
inc
scas
pop
jbe
enter
inc
xchg
xor
daa
dec
shll
cwtl
fldenv
out
es
jb
push
sti
inc
mov
push
scas
in
sbb
mov
roll
xor
xor
stos
dec
mov
xchg
pop
aad
repnz
movsl
fs
sub
jb
dec
inc
std
mov
mov
mov
mov
jo
dec
movsb
pop
mov
xor
call
and
pushf
mov
mov
cmp
cmp
mov
scas
or
aam
int3
repnz
int
arpl
loop
or
push
lea
bound
pusha
arpl
gs
lods
bound
imul
popf
idiv
jo
adc
ret
subb
popf
xor
mov
pop
xorl
fmull
push
inc
in
mov
call
lock
arpl
stc
xchg
fnstsw
sbb
push
lea
mov
aad
je
cwtl
js
mov
aas
sbb
mov
or
dec
ja
xor
je
push
and
hlt
je
pop
push
mov
jmp
not
data16
mov
push
sti
sti
dec
mov
out
jge
adc
sbb
adc
daa
arpl
lcall
mov
sbb
mov
in
rolb
sbb
icebp
fsubs
sbb
xor
push
in
js
in
sub
insb
push
rolb
sub
inc
adc
stos
jp
pop
or
push
in
in
push
or
aas
jae
or
cmc
ret
push
sar
mov
sub
inc
mov
mov
pop
and
push
sbb
and
unpckhps
leave
push
sbb
dec
xchg
or
sbb
andl
mov
in
out
xchg
icebp
ljmp
out
stos
repnz
fiaddl
mov
inc
rclb
lcall
call
jle
pop
sub
cli
mov
repnz
jecxz
out
sub
xor
and
mov
ret
push
inc
les
mov
loope
std
sbb
loopne
mov
xor
sarb
stos
lock
mov
xchg
leave
scas
enter
mov
mov
fcompl
mov
cmpsl
sub
out
mov
jbe
pop
xchg
sbb
mov
dec
sbb
out
cmp
jno
mov
mov
test
fsubrl
arpl
leave
xchg
adc
sub
int
testl
sbb
xchg
push
xchg
xchg
inc
fsts
sarl
repnz
cmp
cmp
aad
inc
mov
mov
repnz
ljmp
icebp
dec
test
scas
sbb
addr16
add
xchg
sbb
fcoms
scas
les
js
jle
lds
popa
arpl
jmp
ret
clc
jnp
clc
xor
mov
mov
push
ss
mov
fidivrs
mov
xchg
and
lock
int3
lock
popa
sub
jae
or
repnz
fisubrl
adc
add
shrb
jns
push
jmp
adc
pop
xor
xor
xor
aam
xchg
mov
jbe
jmp
inc
insl
cmpsb
sbb
inc
jo
mov
fdivl
inc
xchg
fmuls
sbb
xor
in
aad
int
add
dec
int
lret
sbb
or
movups
data16
cmp
push
and
fcmovne
outsl
sbb
adc
out
aad
arpl
sub
or
push
loopne
sahf
cmp
stc
mov
xchg
cmp
inc
imul
insb
leave
mov
out
fnstcw
xchg
call
rol
mov
call
cs
inc
pop
adc
loope
xor
or
incl
fwait
inc
and
dec
xchg
dec
lcall
repnz
test
mov
and
hlt
cli
or
sbb
mov
push
cmpb
or
and
hlt
xchg
add
stos
xor
xchg
push
lret
xchg
push
aad
mov
clc
negb
pop
ss
push
fcmovnb
cmp
mov
loopne
nop
stos
loop
rcrl
aaa
mov
dec
call
xor
cmp
sub
test
xchg
loopne
and
sbb
lret
fwait
and
rcrb
test
mov
xchg
push
sub
ljmp
jge
jnp
enter
ffree
mov
xorl
pop
call
sub
inc
jbe
sub
mov
scas
mov
xchg
push
outsl
adc
add
bound
adc
xchg
push
xor
dec
cmp
enter
out
outsb
cmc
push
xorl
repnz
in
insb
pop
les
aad
inc
sub
shlb
or
inc
pushl
mov
into
and
jbe
mov
into
push
femms
sub
out
add
xchg
imul
xor
mov
xchg
xchg
inc
lea
sbb
imul
insl
out
mov
sbb
jns
mov
pushw
adcl
pop
inc
inc
clc
mov
add
imul
mov
in
push
psubd
and
and
int
fnstenv
in
aad
dec
icebp
mov
or
adc
aam
je
std
cwtl
cmp
fsts
xlat
inc
or
mov
jne
cmp
imul
in
repz
fadds
movsb
and
and
sub
adc
subb
lahf
lcall
jle
lds
add
fnsave
es
pop
mov
aam
imul
mov
nop
jg
loop
xor
sub
xor
cli
popa
pop
xchg
test
cmp
mov
idivb
into
cmp
pop
push
cs
xchg
xchg
mov
inc
mov
xor
mov
push
push
inc
sub
mov
leave
pop
jg
lahf
lret
test
loop,pn
xchg
ljmp
ret
sbb
xlat
push
push
mov
sub
insl
test
mov
fsubrl
into
jle
jb
xor
cmp
mov
adc
jae
testb
lahf
push
out
pop
jns
push
sahf
popa
js
imul
dec
movsl
and
ret
jge
mov
add
cmpsl
repnz
fstpl
sbb
add
call
xchg
mov
popl
inc
mov
jp
add
dec
dec
jnp
mov
subb
outsb
shrl
js
insb
scas
jl
inc
cs
jl
je
xchg
mov
and
lock
dec
adc
pusha
imul
repz
cmc
ret
repz
pop
inc
loop
push
or
fidivrl
imul
mov
out
cwtl
and
and
cmc
mov
sub
xor
loope
lock
outsl
cmp
insl
dec
mov
les
dec
mov
aaa
xchg
xchg
push
dec
mov
in
ret
mov
jb
push
into
lret
in
mov
jo
test
xor
stos
fstpl
inc
shl
mov
sub
mov
ljmp
mov
sub
nop
push
push
mov
add
inc
xchg
dec
repz
dec
test
lret
and
cwtl
test
mov
shll
stc
leave
jns
dec
push
addl
out
push
fistpl
cmp
shl
sbb
mov
mov
ror
cmp
xchg
inc
int
inc
pop
and
inc
push
push
outsb
mov
cli
adc
inc
stc
add
adc
lahf
lret
lock
addr16
inc
mov
mov
xor
dec
cld
pop
mov
mov
jb
imul
pop
in
subl
xchg
mov
sbb
and
mov
cmp
enter
jbe
cs
or
fimuls
aad
mov
mov
nop
pop
jmp
adcl
push
and
dec
imul
fildll
out
jb
mov
sahf
fs
movsl
pop
adcl
inc
pop
cmp
mov
lcall
jle
xorb
jecxz
popf
mov
test
pop
std
mov
pushf
mov
fistps
out
fs
fsts
cmp
xlat
aaa
xchg
mov
test
lods
push
pop
in
fbstp
call
outsb
inc
pop
rcll
and
sarb
sub
sbb
cmp
cmp
in
call
and
test
inc
aas
mov
dec
fwait
add
into
repz
clc
dec
mov
stos
imul
fldt
outsl
repz
jg
sub
mov
and
out
xor
test
dec
xor
cld
test
fs
and
mov
loopne
xchg
mov
dec
xchg
sub
cmpsl
mov
inc
dec
xchg
lcall
mov
mov
xchg
sarb
movl
pusha
inc
cmpsb
mov
lea
outsb
outsb
add
cmp
inc
adc
test
pop
sti
mov
test
mov
jne
mov
iret
pop
repz
push
out
jns
xchg
movsl
mov
lock
jnp
xor
mov
cmova
loopne
iret
cmpsb
iret
lret
pushf
fs
add
loop
std
sahf
push
testb
jmp
push
pop
fsubrl
and
stos
push
idivb
or
inc
outsl
and
out
mov
inc
xor
cmp
nop
sub
movsb
xchg
push
and
pop
xlat
mov
jno
add
jge
cwtl
adc
movsl
mov
vprotb
or
mov
pop
inc
adc
add
lods
pop
sahf
inc
mov
loopne
out
xchg
outsl
add
jle
mov
push
sbb
std
fdivl
adc
push
nopl
xor
mov
cltd
push
insl
sub
pop
and
inc
lahf
cmpb
mov
mov
in
test
sbb
add
dec
mov
repnz
xchg
scas
iret
and
arpl
xchg
ljmp
lods
cltd
in
andl
sub
or
nop
pop
loope
mov
mov
push
pop
add
mov
sub
mov
mov
and
scas
mov
push
sbb
dec
and
sbb
jl
repnz
inc
inc
cmp
ja
mov
das
pop
daa
fcomps
dec
mov
cmp
pusha
and
sub
cmp
mov
cmc
push
adc
inc
xor
mov
dec
sub
inc
add
and
or
insl
pusha
arpl
lock
gs
mov
fidivl
outsb
aaa
mov
data16
cmp
out
push
add
out
cmpsb
repz
push
mov
xor
mov
das
jle
mov
outsb
hlt
mov
ret
add
push
nop
sub
adc
jl
inc
popf
mov
dec
repnz
dec
out
mov
test
mov
cwtl
push
jb
jmp
cmc
je
inc
add
divl
rcl
in
pop
add
sbb
mov
hlt
xchg
sub
out
cmp
movsb
sub
mov
push
sub
ss
or
sbb
imul
ret
arpl
cwtl
add
daa
sbb
ljmp
dec
mov
insl
sub
fcoms
fxtract
pop
or
fiadds
mul
in
pop
sbb
andl
inc
aam
mov
lret
inc
jge
inc
test
out
cmp
cmp
das
or
sti
fs
fs
outsb
subb
outsl
xor
imul
mov
push
dec
sub
push
xchg
lcall
loope
lcall
lahf
xor
sahf
mov
cmp
data16
lea
xchg
fcompl
mull
notb
sbb
jne
cmp
xchg
aad
into
les
mov
out
pushf
cli
leave
stos
bound
jmp
jo
fiadds
dec
scas
mull
hlt
movsb
jmp
adc
gs
jp
mov
gs
insl
xchg
xor
icebp
and
lcall
fdivrs
in
jp
or
sbb
aad
les
mov
pop
pop
pop
pushf
pop
dec
push
pop
mov
push
cmp
mov
pushf
push
mov
inc
lahf
data16
loop
out
mov
out
push
fwait
add
dec
jecxz
fists
gs
test
test
inc
scas
jns
dec
insl
jmp
pusha
cmpsb
push
mov
mov
jmp
jmp
pop
rorl
cmp
fcoms
stos
sub
push
cmp
jmp
pop
out
xchg
es
mov
jmp
xchg
insb
cltd
mov
xor
ds
push
xchg
mov
push
lahf
add
test
push
ds
shrb
add
out
iret
mov
or
cmp
cs
addr16
int
inc
push
cltd
imul
out
mov
and
lea
sbbb
jno
push
sbb
jae
push
pop
ret
cwtl
pusha
sti
fs
push
inc
pop
mov
int3
mov
bound
adc
cmp
aad
fidivs
maskmovq
testl
ja
test
in
push
xor
shll
out
gs
fsub
push
mov
mov
pop
sti
xchg
xchg
rcrb
adc
out
or
lcall
sahf
test
mov
push
xchg
sar
pop
out
jge
stc
cs
xor
push
jae
int
add
repz
or
mov
movsb
daa
push
sti
sub
aaa
adc
mov
rolb
cmp
mov
movsl
out
ja
enter
dec
stc
dec
cmpsl
sarb
cmp
idiv
pop
icebp
cmc
xchg
lods
mov
imul
push
add
and
sbb
fidivl
mov
cmpsl
add
add
loopne
out
std
aas
mov
xlat
dec
cmp
cmp
xor
scas
add
jmp
fs
pop
fadds
test
inc
pop
dec
push
xchg
jl
and
scas
sbb
adc
mov
cmpb
lcall
test
out
repz
lret
sub
dec
mov
std
cmp
or
and
cmpsl
idivl
xchg
pop
fnstenv
test
je
xor
lcall
sbb
stos
ds
xchg
push
add
imul
mov
in
ljmp
subb
push
mov
int3
mov
mov
sbb
cltd
pop
xchg
insb
les
stos
push
cmp
xchg
mov
jnp
xchg
pop
insl
mov
loop
stc
sbbl
or
pop
movsb
adc
xchg
xchg
xchg
cmpsb
and
jmp
sub
clc
or
leave
mov
int
xor
mov
ret
iret
fistl
insl
ds
jno,pn
in
sbb
sarl
and
mov
andl
pop
cmp
sbb
jl
cli
mov
push
fadds
cmp
mov
push
inc
fidivrs
fbstp
or
dec
gs
sub
das
sub
mov
sbb
aad
dec
clc
loop
cli
dec
pop
adc
mov
in
pop
jno
push
lock
mov
fiaddl
pushf
aas
jb
dec
mov
pop
xchg
or
pop
in
je
leave
xor
jae
push
mov
inc
mov
adc
mov
cmpsb
cmc
and
adc
xor
pusha
std
aaa
mov
stos
popf
lods
sar
vaddsd
sbb
add
fwait
xchg
lcall
int3
enter
add
insb
mov
insb
mov
movsb
pop
pop
mov
sub
mov
mov
xchg
lods
mov
nop
sub
stc
sarl
sti
mov
jmp
flds
lahf
cmp
shrb
and
or
dec
push
ja
xchg
pop
mov
sub
mov
add
rol
call
dec
enter
bswap
adcb
cld
stc
mul
xchg
mov
cs
jo
mov
dec
sbb
insl
cmp
add
sub
pushf
mov
lret
and
inc
cmp
test
ja
pop
pusha
sbb
cld
xor
inc
cld
sti
gs
lock
push
ret
mov
out
pop
mov
or
mov
int
jno
dec
inc
scas
mov
lahf
add
adcl
ret
das
inc
jo
push
loopne
mov
xor
dec
push
cmpsl
sbb
jb
mov
fmulp
xor
add
mov
hlt
fbstp
dec
xchg
int3
daa
adc
gs
mov
icebp
cltd
dec
pop
in
mov
cmp
mov
lret
push
das
mov
or
add
dec
add
jo
xor
jnp
aam
mov
pop
imul
dec
mov
das
xchg
jle
push
mov
jmp
push
push
lret
pop
inc
jno
fimuls
pusha
inc
std
outsl
sbb
sbb
dec
iret
jle
cmpsb
test
aas
jb
jp
pop
sub
icebp
jg
sbb
xchg
pop
adc
or
scas
mov
bound
jge
push
xchg
rorl
cs
jmp
pop
ror
fcomp
test
lock
inc
imul
dec
or
repz
insl
test
and
xor
mov
leave
xor
int
lods
xchg
push
test
jno
pop
inc
nop
xchg
insb
mov
mov
xchg
stos
cmpsb
mov
cmp
sbb
aam
lods
mov
in
mov
outsb
out
jecxz
cmp
inc
xor
push
push
lret
popf
and
idivb
jae
mov
fistl
testl
sbb
xchg
push
lea
out
push
in
addr16
scas
ffree
getsec
icebp
inc
int
leave
push
mov
pop
cs
shl
fwait
dec
cmpsb
push
call
ljmp
cmp
int
nop
ljmp
fsubrl
scas
cmp
sub
adc
in
sbbb
fadds
xor
and
sub
mov
ror
xchg
mov
sub
mov
movsl
insl
inc
repz
push
sbb
ja
xchg
cmp
jle
test
loop
lret
loope
mov
filds
repz
xchg
popa
jl
je
loop
movsb
outsl
adc
cmp
pop
jecxz
stos
mov
cmp
fiaddl
pop
or
mov
mov
popa
pop
popf
xchg
mov
rcrb
nop
mov
mov
arpl
xchg
xchg
add
push
aam
pop
inc
iret
ja
insb
cmp
shll
dec
outsb
mov
pop
push
pop
in
orl
stc
push
lret
enter
lret
in
in
jne
ja
push
daa
rol
add
leave
mov
test
mov
cmp
popf
mov
mov
jne
stc
cmovb
or
xchg
dec
clc
or
pop
fcomip
push
jp
pushf
out
jle
gs
push
pop
xchg
and
in
fildll
adc
inc
mov
sbb
jb
dec
push
addb
pop
mov
aad
push
push
dec
scas
and
daa
shrb
mov
in
fldcw
aad
arpl
or
dec
dec
mov
jecxz
cmpsl
pop
push
mov
jno
inc
shl
mov
popf
insl
xor
inc
subb
dec
shl
jae
sub
fnstcw
push
push
popa
lcall
in
mov
adc
pop
sbb
je
bound
push
repz
cmp
mov
push
push
and
outsl
gs
stos
push
jnp
std
push
fmuls
mov
push
mov
js
jb
sbb
enter
and
fcompl
pusha
adc
add
push
xchg
aam
xchg
fnstcw
test
push
push
movsl
cmp
jns
mov
repz
stos
jnp
cmp
inc
xchg
push
jge
arpl
arpl
rolb
jecxz
xor
pusha
jae
jo
pop
pop
movsl
sbb
or
lods
aam
push
dec
mov
icebp
push
loop
adcb
mov
mov
fisttps
imull
fistl
push
mov
pop
ja
push
and
ret
inc
dec
sub
iret
pop
xchg
adc
fdivs
adc
mov
pop
push
fists
jbe
mov
lret
mov
push
mov
or
mov
mov
clc
add
xor
mov
enter
faddp
mov
cmpsb
sub
fcompl
mov
xchg
mov
push
dec
lock
inc
xchg
pop
jmp
xchg
sub
jbe
add
fdivrp
outsl
idivb
mov
and
pop
pop
xor
jmp
test
lds
je
hlt
cmp
mov
mov
in
sbb
mov
sbb
mov
or
out
push
mov
push
mov
insl
stos
mov
movl
mov
add
mov
mov
adc
mov
sbbl
mov
mov
subl
xor
subl
add
mov
lea
mov
mov
xor
sbbl
add
sbbl
mov
xorl
lea
push
sub
mov
orl
xor
xorl
add
xorl
push
xor
or
adc
mov
push
addl
pushl
subl
call
and
mov
movl
cmpl
je
cmpl
jbe
jmp
pushl
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
mov
movl
mov
mov
mov
sbb
mov
lea
or
mov
movzwl
sub
mov
movl
addl
mov
xor
mov
sub
mov
mov
movl
mov
mov
cmp
je
mov
xor
mov
xor
addl
xor
addl
lea
mov
decl
xor
subl
div
dec
mov
add
mov
xor
adcl
xor
addl
sub
movl
cmp
jne
addl
mov
andl
mov
inc
mov
cmpl
jle
jmp
push
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
movzwl
adc
mov
mov
movl
cmpl
je
cmpl
jg
jmp
pushl
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
xor
xor
add
sbbl
add
mov
cmp
jae
and
lea
xor
jmp
sub
std
sbb
cltd
cmpsb
cld
ss
sub
pop
jp
cmp
jp
fisubl
sbb
arpl
int3
mov
or
jns
lea
and
gs
fisttpll
shlb
in
mov
mov
xchg
inc
sbb
inc
out
dec
add
ss
push
sbb
pop
fmul
loopne
cli
add
xor
cmp
pop
pop
mov
scas
ret
ljmp
or
shlb
js
rcrl
shrb
mov
movsl
pop
mov
jle
lret
xor
mov
test
add
mov
cltd
sbb
pop
mov
ret
cltd
xchg
rolb
pop
cmpsb
loope
push
arpl
jo
cmp
outsb
mov
rcrl
adc
adc
inc
sbb
ret
cmc
mov
mov
std
call
shrb
dec
gs
rolb
mov
sbb
pop
sbb
xchg
push
pop
or
ja
aaa
sub
insl
fldcw
sub
pop
mov
xchg
mov
ficomps
ja
push
xor
int3
bound
push
ds
adc
jo
mov
rorl
mov
test
push
sbb
lahf
add
enter
rolb
movb
leave
fnsave
fists
cmp
movsb
and
jl
loopne
cwtl
cmp
and
fdivr
ds
adc
in
dec
int3
outsl
outsl
xchg
movsl
cmc
gs
nop
lods
push
adc
push
push
cmp
rcrb
out
imul
jnp
cmp
sub
fists
cmp
out
mov
cmp
cli
add
sbb
mov
fldcw
lret
jno
aaa
rcrl
sub
aad
outsb
push
pop
sbb
or
sahf
xor
ljmp
pushl
adc
sub
dec
adc
sub
enter
fs
jmp
sbb
push
cld
push
mov
sbb
roll
adc
or
sub
push
push
push
push
mov
pop
out
pop
sbb
cmp
jb
adc
sub
int
out
sbb
inc
cli
movsb
jmp
ret
xchg
or
or
jne
adc
xchg
pop
inc
inc
pop
adc
les
in
enter
sbb
int3
sub
adc
xor
aas
jo
repz
sub
or
push
fcompl
mov
adc
jae
xchg
les
xchg
fsubp
lret
fmull
leave
cmp
aaa
cmp
xor
pushf
cld
cmp
dec
adc
pop
sbb
sub
enter
adc
mov
or
sarl
popf
fs
loop
mov
int
xchg
adc
or
pushf
fucomp
fsubrl
mov
dec
jp
add
cmp
sbb
push
in
aas
ja
rcrb
jno
or
cld
or
push
dec
cmp
mov
iret
enter
xchg
pop
sub
es
mov
xchg
clc
xchg
sarl
sub
jo
int
pop
push
ljmp
fnstsw
push
lea
cs
js
jns
mov
jnp
and
jp
ja
icebp
mov
jnp
arpl
fidivrs
sbb
mov
jg
loope
out
mov
xor
or
xchg
pop
sub
cmc
sub
mul
mov
mov
mov
imul
pop
aas
jns
adc
lds
aas
dec
xor
xchg
enter
mov
mov
test
in
leave
fcoms
add
cli
stos
dec
push
cmc
mov
pop
dec
and
inc
nop
cltd
adc
notl
shlb
adc
fldenv
dec
sbb
cmp
pop
pop
psadbw
fsubl
bound
xor
rcl
xor
mov
out
jne
sbb
fnsave
mov
je
xchg
lds
sbb
inc
and
mov
nop
scas
mov
and
cmpsb
cmp
pop
clc
out
icebp
cmc
into
test
dec
lret
push
jnp
scas
das
cmp
sbb
push
aad
jb
mov
cmpsb
and
lret
push
inc
jg
mov
mov
sbb
xchg
or
nop
or
cmp
or
pusha
xor
mul
adc
sbb
xchg
sti
cmp
mov
es
sbb
jmp
or
shll
xchg
nop
push
loop
loop
das
xchg
jmp
jb
imul
pusha
inc
push
pop
pushf
ret
jecxz
lret
jne
fcoms
jecxz
imul
enter
pop
dec
push
inc
jecxz
push
shl
add
cmp
mov
in
mov
mov
sbb
jle
call
xor
mov
or
cmp
lcall
lret
sbb
leave
mov
mov
mov
adc
xchg
fstps
mov
add
ss
lahf
insb
inc
xchg
cs
mov
cld
cld
mov
sbbb
mov
ljmp
pop
sbb
stc
in
test
outsb
adc
dec
in
cmp
mov
lods
call
push
or
jne
int
mov
jbe
mov
hlt
out
jne
ret
xchg
mov
cmp
loop
les
push
xor
stos
out
addr16
popa
test
pop
fwait
xor
mov
dec
adc
lea
ja
ja
pop
nop
cmpsb
fs
or
xchg
xchg
jno
mov
xor
rcll
add
jb
scas
pop
mov
out
ljmp
xchg
fbstp
mov
xchg
jae
sub
add
sub
imul
mov
or
popa
test
loope
jns
inc
sbb
ret
out
inc
loop
dec
iret
outsb
sbb
adc
les
inc
test
jmp
inc
repz
pop
and
jne
lret
scas
pop
test
ss
pop
aam
jecxz
stc
movsb
les
cmpsl
enter
imul
aad
das
add
cmpsl
js
cwtl
lds
stc
pop
cmp
rolb
xchg
pop
mov
decl
cmpsl
mov
pop
mov
xchg
ret
adc
sbbl
out
jns
in
inc
jbe
xor
sbb
into
mov
stos
jg
sbb
xchg
jne
dec
push
lds
ss
scas
xchg
and
or
mov
in
cmp
mov
pop
shll
enter
or
in
mov
mov
repz
sub
testl
iret
mov
cltd
adc
scas
mov
sti
stc
call
out
push
mov
dec
aaa
stos
mov
xor
ffree
daa
stos
test
push
jmp
test
lret
push
pop
push
mov
jp
call
imull
hlt
inc
gs
add
cmpsb
fisubl
sahf
jl
rcr
fstpl
lret
jp
jg
int3
xchg
inc
dec
ds
js
push
pop
mov
mov
mov
mov
shrb
sbb
mov
xor
insl
sub
test
cmp
jle
movsb
data16
add
mov
sti
or
icebp
push
push
loope
je
add
imul
insl
scas
jle
js
cmp
in
stos
pop
in
push
ss
std
in
out
leave
sbb
mov
dec
add
mov
inc
jb
or
addr16
mov
xchg
out
and
dec
in
pop
pop
cmpsb
and
and
sub
push
mov
shrb
dec
das
out
inc
call
scas
sub
lahf
push
out
clc
add
je
fdiv
leave
pop
rolb
je
add
aas
popf
scas
ror
mov
sbb
rol
mov
push
lea
imul
inc
mov
dec
cld
mov
sahf
inc
roll
cmp
cmpb
adc
filds
xchg
pushf
push
rol
ds
pushf
jle
out
pop
jle
inc
mov
cli
out
pop
mov
mov
jg
dec
pop
inc
cmpsb
dec
nop
mov
imul
dec
jg
hlt
leave
cld
or
add
fwait
sub
lds
fs
sbb
push
orb
xor
cli
iret
cmp
xor
insb
mov
and
es
xchg
sub
dec
pop
int3
ret
ljmp
jle
repnz
js
es
leave
jl
call
std
daa
popa
dec
inc
rclb
push
insl
mov
sbb
or
std
and
fdivrl
stos
sbb
push
cld
pusha
shlb
adc
pop
jns
ror
sbb
ret
gs
imul
lahf
xor
sbb
in
iret
test
les
mov
xchg
fucomip
and
fisttpl
jl
mov
sub
cli
dec
xchg
pop
add
dec
test
data16
addr16
insb
cmp
cmp
jp
adc
or
add
pop
aas
mov
or
out
xchg
or
insl
push
arpl
xchg
xchg
stc
or
lcall
jne
fsqrt
mov
scas
out
adc
jbe
inc
cld
cmp
jne
shll
out
out
sahf
lock
mov
sub
dec
mov
icebp
and
adc
jecxz
and
and
add
add
test
cld
enter
xlat
pop
lods
inc
in
push
sbb
cmp
adc
test
idiv
in
test
sbb
and
rcll
sub
jge
mov
xchg
sbb
and
je
fstpt
orb
shrl
mov
xchg
inc
fdivrs
shl
js
xchg
sub
repz
sbb
mov
sahf
lcall
xchg
mov
ja
xchg
sub
jmp
xor
xor
sbb
inc
inc
das
orb
push
pusha
outsl
ds
mov
dec
jmp
pop
mov
fmuls
outsb
xchg
sbb
lods
aad
sbb
mov
nop
es
dec
mov
sub
mov
jmp
mov
xchg
xor
je
adc
cld
xchg
jbe
fbstp
mov
jle
addr16
xor
xor
sub
xchg
jle
add
push
repnz
inc
mov
loop
push
jge
movsl
outsb
outsb
int
jmp
jecxz
mov
sbb
iret
pop
inc
mov
das
add
add
adc
ss
test
fucomp
push
outsb
mov
dec
pusha
mov
pop
sbb
mov
xorl
inc
addr16
inc
ret
add
mov
mov
fcmovb
cmpsl
add
xchg
and
out
inc
xor
xchg
out
ljmp
push
sbb
js
add
outsl
mulb
outsb
jp
sbb
inc
add
ret
xchg
lods
xchg
stos
sbb
out
hlt
xor
push
mov
push
dec
dec
lds
out
es
inc
shll
roll
dec
dec
pop
divl
popa
lahf
jae
push
js
je
add
jo
aad
and
adc
enter
adc
jecxz
ss
mov
in
mov
aas
and
push
js
jo
xor
sub
and
xor
pop
or
and
pop
sbbb
jecxz
mov
fstl
xor
add
cmp
popa
out
cmc
push
mov
mov
xor
pop
mov
add
xor
test
or
pop
mov
and
lahf
xchg
outsl
repnz
xor
sub
sbb
xor
sbbl
dec
divl
sbb
and
sbbb
ret
sub
lods
das
push
hlt
jl
fs
mov
test
sub
mov
and
xchg
mov
scas
adc
xchg
cld
or
lock
fsubrl
outsl
adc
mov
dec
sub
lea
in
sbb
mov
gs
add
pop
sbb
dec
das
dec
mov
mov
and
scas
in
test
mov
nop
xor
add
movsb
dec
jns
cmpsl
test
hlt
xchg
dec
aad
dec
shlb
cmp
aaa
fnstcw
xchg
mov
adc
xor
sub
shll
cmp
cwtl
cs
dec
stc
mov
outsl
fistps
ss
push
sahf
push
mov
sarb
cli
aam
dec
sub
out
xor
loope
ljmp
outsl
push
int
mov
shll
mov
push
or
inc
cwtl
mov
iret
nop
movsb
fisubrs
push
jle
inc
insb
dec
jmp
ljmp
movsb
or
stos
push
inc
xchg
pop
pop
mull
sub
lahf
pop
daa
jle
je
aam
mov
subl
add
jb
push
sub
stc
imul
sahf
pop
push
mov
xor
cmp
inc
pop
jnp
loope
fs
cmp
outsb
out
jmp
test
adc
fdivr
xchg
fidivrs
jmp
cmpsb
cwtl
aaa
popa
sbb
lds
xor
jb
mov
jb
mov
pop
pop
xchg
xchg
jl
push
dec
push
aad
cmp
iret
dec
mov
into
lret
setb
out
and
in
inc
nop
pop
inc
sub
mov
and
aas
je
inc
movsb
adc
in
dec
shl
insb
imul
sbb
mov
cld
jecxz
pop
xchg
je
clc
ja
sub
push
pop
adcl
mov
sbb
into
or
shlb
xor
mov
dec
dec
ss
pop
fisttpl
pushaw
ss
je
push
cmpsb
pop
test
xchg
test
sbb
test
adc
mov
in
xlat
or
pop
mov
jmp
inc
adc
test
inc
sahf
test
sub
jmp
mov
inc
gs
insl
and
mov
sbb
leave
call
jbe
fisubrl
inc
pmuludq
pop
sbb
les
lret
jmp
jns
pop
or
adc
mov
mov
stos
repnz
in
ret
sub
inc
push
push
in
mov
js
dec
iret
or
mov
dec
inc
or
or
test
ret
pop
cmp
loope
gs
jl
push
out
cmpsb
imul
sub
dec
loopne
inc
xchg
xchg
lea
fsts
jg
add
push
les
dec
jg
xchg
pop
outsb
nop
jnp
inc
jae
adc
sbb
into
fwait
and
in
inc
xchg
and
inc
lcall
mov
jge
loope
xor
ds
or
mov
push
xor
das
rcr
test
mov
jmp
std
repz
mov
jo
mov
jle
test
adc
popf
test
sub
add
xor
sub
xor
std
repnz
je
stc
nop
lock
xor
int
repnz
inc
xchg
enter
enter
pop
add
push
pop
push
fmul
mov
sahf
pop
sub
aam
test
test
jno
js
xchg
mov
mov
sub
xchg
jg
movsl
push
out
je
xchg
adc
ljmp
and
xor
rolb
lock
xchg
divb
nop
dec
aam
cmp
daa
xchg
mov
sub
outsb
popa
clc
fstpt
fbld
lcall
ja
imul
lods
fsubr
sbb
test
movsl
shrb
sbb
xchg
testl
or
mov
js
xchg
cmc
stos
out
call
pop
sub
adc
fs
fcmovnu
aad
or
pop
cmp
ljmp
scas
sti
test
mov
and
pop
insl
ljmp
movsb
cmp
or
or
je
cmp
fwait
inc
mov
jl
xlat
in
imul
pop
orl
hlt
hlt
pop
xchg
es
and
out
repnz
inc
jb
xor
push
mov
push
mov
ds
push
mov
xor
adc
mov
popf
in
shrb
xchg
or
in
sbb
int
out
enter
cmpl
test
aad
jnp
cmp
fst
push
xchg
inc
pop
ljmp
outsl
push
xorl
jb
insb
sahf
jle
mov
xchg
inc
xor
cmp
cmp
imul
fs
addr16
mov
sbb
push
dec
bound
les
lret
cmp
sbb
dec
mov
inc
push
daa
or
sub
inc
sbb
mov
test
rcrl
xlat
leave
pop
in
sbb
jns
add
add
in
mov
fbstp
pop
icebp
push
mov
mov
push
ror
sub
sub
les
push
mov
push
ret
fdivrl
sbb
mov
mov
das
cmpsb
cmp
dec
nop
xchg
mov
jmp
inc
push
cmc
mov
cmp
cmp
aaa
mov
icebp
popf
xchg
cmp
mov
fcomip
rcl
imul
iret
in
sub
int3
xchg
dec
arpl
jo
mov
cmp
adc
jmp
dec
cld
jbe
mov
lahf
int3
rcl
xchg
addr16
loopne
pop
add
pusha
cli
out
inc
cs
push
daa
adc
stos
cmp
pop
cli
test
aas
clc
mov
or
jns
sbb
adc
into
mov
mov
stos
lret
inc
xor
cmpsl
notb
and
add
jg
loopne
push
in
dec
mov
sarb
rorb
xchg
pop
push
mov
add
movsl
and
jb
in
push
mov
lea
test
sub
push
mov
mov
dec
adc
add
cmc
inc
push
loop
dec
aas
push
or
mov
fstpl
or
xchg
and
push
outsl
cmp
adc
into
es
mov
xor
dec
push
test
add
popa
loope
mov
daa
push
sub
std
or
aam
ficoml
adc
xor
mov
push
repz
lods
mov
pop
xchg
test
test
xor
cmp
adc
pop
or
or
cmc
call
ret
popa
pop
test
fnstsw
xchg
rclb
popa
xor
mov
xchg
fdiv
push
scas
push
sbbb
adc
inc
xor
out
adc
push
mov
jmp
sbb
xchg
cmp
scas
mov
mov
test
or
ret
push
xchg
jb
ds
mov
rep
push
stos
mov
bndldx
data16
jle
cmc
jle
dec
aam
lret
cmp
sbb
jge
cmp
xor
and
mov
pmaddwd
out
xchg
out
test
adc
out
aaa
scas
js
mov
and
les
jns
sahf
addr16
mov
decb
pop
sbb
push
data16
sbb
cs
push
imul
mov
loopne
inc
fdivr
sbb
adc
inc
cmp
inc
aam
jecxz
cmp
popa
sub
cmp
ficoms
in
in
adc
pop
mov
xlat
sbb
sub
shrb
sbb
or
nop
push
cmpsl
movsl
inc
sarl
sub
lods
ja
iret
adc
xlat
arpl
cmp
dec
test
iret
and
pop
jle
movb
sub
cmpsl
lds
negl
bndstx
call
pop
mov
jne
lea
mov
lahf
add
cmpb
pop
and
sub
xor
dec
enter
add
dec
cld
adc
fidivs
popl
or
sub
nop
cwtl
mov
and
out
jns
shll
shr
lea
cld
idivl
cmp
sbb
xor
rcrl
cmp
pusha
rcll
test
js
mov
sub
add
test
nop
mov
xor
add
adc
push
aaa
js
inc
cmpsb
jmp
iret
into
outsl
cmp
ds
mov
shlb
fnstsw
mov
dec
xchg
push
mov
jp
mov
mov
jge
xchg
mov
aam
insl
xchg
dec
lahf
clc
mov
xchg
int
mov
insl
push
pop
push
cmovb
mov
ud0
jnp
mov
mov
mov
ret
dec
lock
hlt
add
cmpsl
xchg
pop
jne
and
pop
xor
stos
adc
inc
xchg
mov
lea
aad
add
or
cmp
xor
cmc
mov
push
arpl
jg
setno
lds
pop
cs
sub
and
or
mov
repz
jecxz
adc
aaa
add
shlb
jl
cwtl
loopne
in
loop
aaa
xchg
movsl
idivb
jnp
mov
dec
sub
dec
xchg
add
cmc
fsubp
cmp
lock
addb
fs
incb
adc
out
popf
sbb
out
fadds
xor
sbb
or
imul
ja
scas
shrb
xchg
imull
adc
push
daa
jmp
movsl
inc
call
mov
and
faddp
or
xlat
sub
mov
hlt
push
mov
jb
lods
test
mov
jecxz
jl
rcll
in
jecxz
mov
fadds
sub
push
xor
pop
lret
sahf
dec
push
lcall
or
nop
adc
cmp
mov
iret
inc
jg
mov
xchg
push
das
xlat
pop
lods
xchg
mov
mov
lret
fldt
int
or
sub
and
ds
mov
in
jne
inc
or
sbb
arpl
aas
mov
ss
test
hlt
lods
loop
pop
dec
cmp
xor
ret
cmp
mov
int
lock
add
enter
dec
mov
aam
push
sbb
mov
mov
rolb
fs
add
lods
and
adc
ljmp
jp
mov
inc
jmp
or
adc
lcall
sbb
daa
push
cmp
and
xorb
in
fs
mov
out
mov
sti
push
pusha
add
mov
cwtl
divl
jbe
hlt
xchg
sti
rorl
add
mov
in
xchg
push
lods
out
int
rorb
cmp
jmp
xchg
xchg
shll
cmp
cmovp
bt
push
mov
sbb
sbb
cltd
and
lret
push
int
andl
push
mov
pop
mov
iret
jns
adc
repnz
and
fwait
sub
insb
out
aam
clc
or
jecxz
repnz
gs
add
cmp
cwtl
push
in
mov
mov
push
data16
inc
push
rclb
add
mov
push
outsl
pusha
orb
out
insb
mov
or
fnstsw
cmpsb
dec
mov
aas
movsl
hlt
ja
mov
cmp
hlt
repnz
cmp
or
mov
loope
cld
xor
outsl
add
shrb
cmp
and
pop
mov
ss
push
or
out
aas
sbb
mov
in
inc
fs
loope
adc
jbe
lcall
lods
xchg
out
js
pusha
inc
jle
int3
lock
test
and
out
inc
leave
push
mov
cmc
fisubrl
sub
jecxz
leave
idivl
into
xor
xchg
leave
out
adc
pushf
popa
jle
jne
cmp
pop
in
push
push
lock
sub
leave
aam
iret
push
mov
popf
enter
mov
push
cmp
lods
rep
inc
test
xchg
insb
xchg
into
mov
in
mov
and
mov
add
pop
lock
mov
hlt
loope
xchg
sbb
test
out
icebp
stc
test
cmp
inc
out
and
popf
dec
push
jecxz
int3
scas
mov
push
in
add
xor
insb
mov
hlt
js
je
inc
jno
repz
mov
pop
cmpsb
mov
stos
ror
hlt
adc
out
xlat
and
ljmp
push
xor
dec
fs
jae
out
adc
fcoml
out
icebp
xor
cld
enter
push
jae
jae
cmp
mov
dec
xor
movsb
cmp
popa
test
push
aas
movl
sub
fwait
cmp
pop
jns
pop
test
jl
push
or
repnz
cmpsl
add
xchg
xchg
iret
mov
rcrb
sbb
pop
cwtl
iret
fwait
sub
outsb
push
dec
loope
inc
dec
xchg
mov
xor
pop
nop
inc
dec
fistps
jns
mov
add
add
mov
lret
add
xor
jb
inc
loop
rcr
jb
mov
scas
aam
push
aam
jnp
testl
scas
rcll
add
jae
lahf
sarb
fisubl
mov
xor
loope
jbe
in
push
stc
data16
in
cmp
repz
in
dec
fsubrl
adc
mov
adc
std
fwait
jne
outsl
and
dec
xor
mov
int
push
test
in
cmp
lock
in
add
jp
jae
adc
sbb
and
icebp
fcmovnu
fcmove
pop
jns
jns
and
cwtl
xor
mov
test
adc
jno
cmp
cmp
sarl
jo
sbb
bound
lods
jbe
xor
outsb
jle
pop
pop
cmp
pop
mov
adc
inc
stos
mov
add
pop
inc
sbb
push
adc
mov
mov
push
int3
out
push
das
loopne
push
push
mov
cmp
xchg
or
lea
insb
aad
dec
aaa
into
push
pop
mov
in
mov
in
fnstcw
or
jo
fwait
dec
mov
sbb
push
pop
andb
lret
movsb
mov
in
fdivr
mov
inc
sbb
mov
and
fcmovbe
and
fwait
into
ljmp
or
out
inc
push
in
out
subl
je
sbb
add
mov
lret
push
sbb
cmp
push
ss
push
cmc
sub
adc
push
cmpsl
stos
scas
in
roll
mov
sub
fsubl
cmp
lahf
xchg
ficoml
mov
xchg
ret
js
add
imul
xor
jmp
jge
dec
test
mov
mov
push
lds
dec
adc
mov
add
imul
clc
add
xchg
pop
jp
mov
pop
je
ret
loope
jb
xchg
fcoms
mov
push
dec
lods
and
sbb
insb
pop
dec
lods
push
lods
lods
aas
ja
push
lret
js
jno
push
and
cltd
insb
or
jp
sbb
in
fbld
mov
test
fistpll
xlat
icebp
add
int3
sbbl
push
xor
fwait
jo
ss
mov
scas
lret
mov
mov
fcmovnbe
jno
sbb
fisubl
jle
insb
sub
push
jl
add
repz
push
cmp
cmp
cmpsl
push
pop
lcall
add
mov
mov
sbb
inc
out
pusha
inc
lock
jmp
xchg
dec
mov
xchg
xor
cmpsb
xor
dec
cmp
jbe
and
xor
dec
xor
mov
js
push
xchg
subb
pop
into
iret
int3
push
sbb
xchg
sbb
pop
fwait
xchg
fistpl
mov
push
aas
mov
fdivr
sti
enter
inc
cmpsb
shrl
mov
xor
jge
in
or
aad
mov
lret
inc
add
mov
push
subl
sbb
mov
imul
pop
sahf
inc
mov
adc
push
mov
out
and
fldenv
push
fsubr
mov
dec
inc
dec
into
loopne
push
call
imul
lods
fs
loop
inc
mov
aam
aam
inc
outsl
jp
dec
out
fldl
sbb
inc
sub
push
pop
jnp
mov
movsb
repz
pop
scas
adc
leave
jecxz
sub
sbb
leave
fldt
ss
icebp
jecxz
cmp
lods
inc
adc
out
xor
sbb
sub
add
adc
push
mov
push
stos
cmpsl
xchg
repnz
ror
or
fldl
stc
and
movsb
dec
push
sarb
cmc
xor
lret
sti
inc
arpl
mov
xchg
mov
inc
or
add
xchg
ja
repz
testl
sub
fidivs
bound
xor
lret
cmp
testl
cmp
movsb
sbb
call
mov
cmp
cmp
pop
xor
sub
mov
cmpsb
xor
mov
inc
xchg
xchg
pop
mov
dec
or
pushf
jmp
aaa
cmp
cmp
in
jo
aaa
sbb
jo
lods
lea
mov
in
ljmp
hlt
mov
movsb
shrl
mov
in
sub
js
movntps
cs
mov
aad
cmp
je
mov
das
add
sbb
mov
mov
orl
pushf
xchg
dec
jg
fidivrl
add
je
imul
or
pop
jne
jno
lds
je
mov
mov
movsb
shll
bound
mov
mov
push
add
push
push
cmpsl
insl
in
push
ret
dec
std
cmp
rorl
or
mov
jnp
pop
fstl
fdivp
dec
iret
pop
jbe
or
adc
jns
xchg
lds
mull
sub
cmpsl
xor
lcall
cmc
lahf
insl
mov
jne
lds
mov
xchg
mov
fcmovnbe
cmp
xchg
push
leave
jo
sbb
pop
into
mov
pop
sarl
gs
pop
stos
inc
add
mov
stos
push
jge
or
dec
test
mov
cmc
in
pop
push
repnz
push
dec
xor
lock
mov
insl
out
pop
mov
mov
xor
movsl
in
loop
shll
in
dec
ret
fidivl
movsl
jecxz
bound
sbb
rclb
dec
lahf
xchg
mov
inc
imul
xchg
enter
cld
mov
lret
dec
pop
mov
xchg
mov
inc
sbb
jns
rol
adc
stc
inc
pop
mov
outsb
rorl
or
mov
fwait
xor
pop
sahf
test
movsl
gs
jle
rcrl
xor
test
inc
or
outsb
jge
hlt
add
outsl
jae
ljmp
jle
fucomip
cmpb
fwait
mov
inc
jmp
lcall
aaa
pop
sub
jb
cmp
les
sbb
sbb
jmp
push
mov
mov
xor
addl
add
movl
lea
mov
movl
mov
movl
cmp
movl
jbe
subl
addl
jmp
orl
addl
sbb
mov
sbbl
xor
sbbl
inc
incl
add
movl
cmp
movl
jb
andl
jmp
xor
or
inc
mov
cmpl
jae
cmpl
jbe
jmp
push
pushl
push
call
cmpl
jne
mov
inc
mov
jmp
mov
mov
xor
orl
mov
andl
sub
add
mov
xor
negl
sub
xorl
ror
xor
mov
add
mov
andl
jmp
xor
add
inc
mov
cmpl
jae
cmpl
jbe
jmp
pushl
call
cmpl
jne
xor
xor
inc
mov
jmp
mov
mov
sub
xor
cmp
jne
mov
mov
xor
xor
sub
sub
xor
mov
mov
xor
mov
sub
jmp
mov
xor
mov
sub
add
mov
mov
cmp
jne
movl
mov
xor
add
jmp
lea
mov
mov
sub
mov
mov
mov
mov
movl
mov
movl
mov
xor
add
mov
jmp
lds
lea
jns
jbe
lret
mov
add
jp
cmp
jp
in
push
cs
adc
sbb
cmpsl
stos
std
std
fbstp
fsubrs
push
sub
inc
das
mov
or
dec
cwtl
imul
pushf
push
adc
bound
mov
imull
mov
inc
jns
dec
in
aas
aaa
push
mov
jno
add
and
add
jns
andb
fstpt
test
sub
out
bound
adc
sub
gs
roll
les
arpl
loope
gs
mov
out
mov
or
push
xor
xchg
or
clc
push
inc
jbe
test
jg
push
into
jnp
jo
outsl
mov
push
out
fimuls
sarb
out
rolb
mov
shlb
rorl
pop
stc
xor
mov
pop
out
jb
dec
test
push
and
into
pop
inc
add
in
push
mov
loop
add
mov
add
sarl
push
mov
cmp
xor
cmpsb
jae
out
int3
lea
cmp
movsb
mov
js
repnz
jnp
xchg
pushl
sbb
push
dec
add
subl
je
iret
ljmp
mov
scas
inc
push
mov
xor
lret
or
push
mov
out
clc
cmp
mov
or
push
xor
dec
popa
and
into
filds
xchg
mov
sahf
ficomps
stos
cmpl
cwtl
xor
sbb
xchg
outsl
ret
or
pusha
std
bound
adc
push
mov
in
lahf
das
jp
or
or
scas
cmp
lcall
push
push
mov
adc
aas
int3
xchg
js
mov
mov
nop
daa
loop
jl
mov
out
fbstp
xlat
xchg
adc
orb
test
or
add
pop
loope
cmc
adc
pop
dec
mov
pop
scas
test
jmp
add
ss
xchg
push
push
mov
jne
mov
sbb
mov
push
add
es
dec
popf
adc
mov
add
xchg
inc
addb
dec
out
in
pushf
scas
pop
mov
mov
and
adc
mov
shrl
pop
push
test
xor
mov
sbb
push
stos
and
insb
cmpsl
sbbl
shll
mov
leave
lds
or
sbb
jmp
inc
sub
outsl
xor
xchg
lea
nop
adc
pop
ljmp
mov
dec
in
ret
imul
inc
je
testb
xlat
adc
dec
and
cmp
repz
test
mov
push
cmpsb
jmp
push
mov
and
rorb
rcll
sti
xchg
adc
scas
enter
cs
mov
pop
pop
mov
es
cmp
xchg
orb
lods
scas
mov
jns
shlb
mov
fwait
mov
jl
ficoml
push
js
inc
cmp
mov
push
leave
lret
pop
insl
mov
pop
jno
loopne
mov
scas
dec
inc
icebp
sbb
inc
addr16
pop
aas
inc
mov
xchg
ret
pop
mov
or
addr16
dec
mov
shll
jnp
movsl
cs
movsb
inc
out
loop
adc
popf
add
jge
leave
sti
and
sbb
sub
dec
arpl
push
sbb
pop
adc
sbb
and
popf
flds
sub
mov
push
mov
add
loope
sub
inc
push
flds
inc
into
hlt
xchg
sub
sbbb
repz
adc
sub
sub
in
or
lods
mov
divb
ja
dec
aaa
scas
adc
mov
out
enter
push
dec
loopne
cmp
jmp
imul
loopne,pn
dec
dec
cmpsl
das
mov
xlat
lods
dec
outsl
push
sub
pop
mov
mov
test
and
js
sbb
mov
enter
push
and
or
loop
test
xchg
shr
movsl
mov
push
gs
mov
testb
jne
mov
rolb
pop
xchg
enter
xor
loope
jbe
test
dec
jno
nop
aas
jmp
sbbl
scas
pop
xor
adc
sahf
inc
sbb
mov
or
hlt
cld
bound
gs
repnz
fildl
add
inc
cld
mov
xchg
and
or
insb
lret
mov
jae
ds
ret
xchg
data16
push
lock
push
cltd
ja
and
arpl
xor
xor
imul
pop
cmp
xchg
mov
in
int
shl
dec
jmp
dec
xchg
inc
test
xchg
movsb
sbb
push
les
sub
push
nop
rcrb
add
movsb
arpl
sbb
push
decl
stos
sub
out
pop
repnz
jg
daa
nop
adc
insl
test
pop
int3
mov
ljmp
cmp
xchg
in
fs
and
pop
push
sbb
in
stos
lret
mov
std
xchg
dec
mov
xchg
insl
mov
sbb
push
inc
ja
and
cld
push
fsts
mov
xchg
sbb
inc
mov
dec
dec
stos
icebp
xchg
pusha
jl
xchg
inc
push
mov
xlat
xlat
sub
sub
ljmp
jl
push
xor
mov
lret
flds
push
or
mov
loope
lock
mov
pop
mov
out
sub
pusha
aaa
xor
push
jg
mov
out
lock
sbb
mov
sbb
mov
in
cmpsb
jp
sub
cmpl
push
cmp
movsl
cwtl
in
jp
sub
xlat
imull
push
jne
sti
xchg
mulb
gs
out
mov
fnop
dec
rcll
jnp
fmulp
add
mov
lret
and
fistpl
fdivrs
daa
jecxz
mov
or
data16
mov
pop
popf
xchg
ret
adc
fadds
out
fldl2t
or
lret
adc
cmp
pop
shrb
in
and
jge
call
inc
dec
jno
test
xchg
mov
mov
push
or
mov
adc
and
pop
and
test
in
js
lods
rcrl
xor
pop
or
adc
xor
loope
lods
jb
xor
pop
testb
mov
inc
js
outsl
leave
push
in
cmp
mov
adc
lret
push
xchg
add
pop
mov
fnsave
pop
cmp
fdivl
mov
pop
out
fadds
imul
stos
sbb
int3
mov
outsl
lock
push
mov
cltd
cmc
mov
sbb
cmp
mov
dec
mov
std
lods
push
dec
fnstenv
ret
ljmp
mov
arpl
push
push
mov
popf
test
jl
pop
or
shrl
adc
iret
xchg
or
movsb
or
xchg
ja
imul
jo
xchg
call
pushf
into
fnstsw
mov
cmp
jg,pt
xchg
es
dec
mov
jns
out
pop
mov
pusha
jg
das
dec
ljmp
adc
mov
jo
cmc
aam
int
int3
lods
dec
jae
cltd
sub
or
mov
lds
pop
mov
mov
addr16
movsb
inc
xor
test
loope
adc
mov
dec
in
xor
jecxz
pop
aam
xor
xchg
into
movsb
mov
and
push
pop
lods
inc
mov
add
in
sti
gs
push
bound
sbb
out
in
mov
lret
std
mov
mov
mov
fsubp
and
adc
inc
xchg
dec
mov
aam
mov
xchg
ja
testl
fsubl
adc
cmc
cmp
add
add
push
mov
stos
pushf
cmp
je
sbb
jne
jnp
push
ds
or
imul
mov
sub
mov
pushf
scas
sub
ds
arpl
cld
and
cs
scas
jmp
ja
insl
rep
jno
mov
cmp
add
add
sbb
cli
cmpsb
fcomi
aaa
mov
pop
mov
scas
ljmp
fdivs
adc
mov
push
cmp
sub
repnz
fmuls
pushf
fdivl
dec
pusha
es
out
leave
lret
xor
jnp
jecxz
jg
jns
mov
mov
add
outsb
xchg
movsl
cmp
lods
repz
xchg
pop
or
xor
xor
push
mov
or
fs
incb
imul
popa
les
addr16
mov
pop
push
ss
pop
cmc
test
adc
xor
push
loope
or
into
pop
push
xor
arpl
pushf
push
daa
idiv
mov
push
lods
repz
mov
in
xor
int3
jmp
rorb
cs
mov
xorl
mov
mov
cmpsb
push
and
pop
sbb
mov
cmpsb
dec
lods
popf
aas
or
xor
jecxz
mov
lcall
cli
mov
or
ret
sub
xor
lock
inc
dec
mov
inc
iret
test
add
scas
out
sbb
into
dec
insb
pop
addr16
roll
loope
je
sahf
xchg
sub
or
fcoml
add
repnz
nop
and
mov
jmp
pushf
pop
jne
inc
xor
and
scas
or
cmp
mov
cmpsl
sub
jecxz
aad
hlt
jne
inc
imul
enter
mov
int
mov
mov
loop
addr16
adc
lds
cmp
int
test
lock
negl
hlt
push
mov
push
stos
add
call
js
repz
xchg
jmp
and
call
lret
pmuludq
sub
lret
mov
mov
cmp
clc
fst
fildl
inc
sub
xchg
int
and
mov
fildl
fidivrl
iret
jb
lahf
shl
incl
mov
addr16
mov
xor
js
mov
cmp
mov
add
in
ret
lea
dec
jbe
mov
stos
iret
lods
sub
inc
push
cltd
pop
inc
adc
rcrl
mov
inc
dec
push
pusha
lods
lcall
out
xchg
sbb
pop
in
mov
je
dec
dec
imul
inc
cmpb
xchg
xchg
dec
push
stos
mov
fdivrl
jae
mov
mov
rorb
loope
mov
in
lods
scas
jne
jp
popa
test
mov
aad
ret
sub
repnz
and
dec
inc
inc
push
dec
movsb
push
adc
or
xchg
adc
cltd
pop
inc
stos
inc
xorb
lcall
jno
call
push
imul
stos
lcall
mov
sbb
loope
sub
sub
sbb
xchg
cltd
cli
cmp
pop
mulb
shl
imul
adc
jo
sbb
jl
mov
ljmp
cmpsb
enter
and
mov
sahf
gs
push
mov
fsubrs
aaa
sti
data16
das
ja
adc
cmp
scas
inc
imul
int3
imul
lea
xchg
xor
inc
add
aas
data16
sub
mov
adc
mov
les
xchg
and
add
out
es
push
pushf
stos
push
jl
mov
popa
call
adc
fstps
xchg
aam
enter
mov
jo
fisubl
bound
fiadds
mov
push
cwtl
loope
outsb
icebp
jecxz
xchg
loopne
je
xchg
xchg
loop
jns
pop
ret
cmpsb
adc
dec
in
xchg
rcll
add
pop
cmp
xchg
push
mov
inc
add
xor
arpl
out
xchg
dec
nop
neg
rcrl
push
into
xor
dec
inc
xlat
ret
cmpsl
test
inc
xchg
js
fistps
int
adc
jg
jmp
cmp
out
lret
cmp
int3
fsubp
mov
inc
ja
and
dec
and
xchg
jne
sbb
inc
push
aam
test
inc
cli
mov
jg
scas
push
adc
xchg
dec
int3
and
std
add
cs
pop
add
mov
pop
pop
jp
fwait
push
data16
imul
add
cmpsb
hlt
dec
lods
iret
ljmp
imul
int
mov
xchg
mov
pop
les
aas
lret
inc
pop
fcompl
cmc
out
int
sbb
aas
push
jmp
jl
fists
aam
roll
xorb
pop
xchg
and
mov
adc
adc
push
ret
in
fsqrt
roll
out
xor
inc
xor
scas
push
push
push
add
or
stc
jnp
test
out
pop
movsl
push
jge
mov
add
jno
inc
cwtl
add
and
sbb
pop
test
mov
add
std
push
and
incb
jae
and
mov
fistpll
and
adc
js
xchg
scas
push
or
outsl
dec
pop
inc
lahf
cmp
cltd
mov
inc
scas
in
jns
and
and
hlt
insl
sbb
cmpb
inc
or
dec
and
or
mov
sbb
cmpsl
push
jae
and
xor
cmpsl
or
lret
test
cltd
xor
and
ss
or
sub
pop
mov
je
adc
push
push
xlat
push
mov
jb
stos
mov
sub
ds
fistl
call
aaa
jb
popf
scas
lret
lea
add
mov
mov
and
repnz
mov
and
pop
sbb
and
push
sub
adc
std
inc
cmp
sbb
gs
jle
ljmp
mov
mov
out
fst
push
push
bound
mov
fsubp
sarl
shlb
rcl
push
fildll
popa
stos
imul
dec
jmp
xlat
es
rclb
insb
add
popf
jmp
xor
adc
mov
dec
test
repz
and
pop
gs
push
inc
in
sbb
imul
lods
mov
add
mov
pop
pop
dec
scas
dec
out
jmp
adc
and
cmpsb
sbb
push
mull
pop
movsb
jl
mov
pop
and
sub
das
dec
pop
out
das
inc
cmpsl
arpl
fldt
xchg
ljmp
push
es
stos
mov
lock
xchg
xchg
add
dec
mov
push
xchg
dec
mov
mov
mov
insb
mov
clc
ret
jnp
cmp
and
lret
mov
in
hlt
cli
outsb
and
inc
or
cmpsb
clc
and
xchg
or
das
mov
inc
jecxz
movsl
jge
mov
add
sub
ss
fs
fiaddl
dec
add
outsl
lods
or
xchg
inc
in
sbb
and
sub
push
xchg
gs
out
mov
sub
lea
add
shll
shrb
lret
popf
adc
dec
mov
adc
xor
dec
lods
ret
add
mov
mov
adc
or
jmp
push
mov
mov
int3
ljmp
and
fisttpl
sub
iret
scas
xchg
dec
imul
mov
stos
adc
pushf
fsubrl
jecxz
and
pop
lret
lea
std
int
lahf
aad
test
add
loop
dec
jecxz
cmp
movsb
test
cmp
sti
or
mov
cmpb
jnp
dec
imul
out
sbbb
sbb
sbb
push
push
leave
mov
xor
movsl
and
push
cmc
pop
lahf
outsb
ret
sub
dec
cli
int3
xchg
mov
and
into
fisubs
jne
xor
ret
or
fldenv
inc
mov
adc
xchg
mov
xchg
hlt
mov
xor
dec
mov
gs
fwait
sbb
or
imul
xlat
arpl
sahf
push
pop
jecxz
jmp
leave
push
in
adc
test
mov
mov
inc
loopne
loop
test
inc
mov
ss
xchg
inc
pusha
mov
test
imul
lods
cmp
inc
sub
jbe
inc
out
mov
and
mov
lds
lahf
or
sbb
lock
xchg
aam
inc
enter
dec
gs
ret
dec
and
sahf
fbstp
xchg
sbbb
push
fsts
pop
add
cmp
dec
and
stc
add
and
xor
outsl
or
jne
pusha
test
mov
lods
stos
adc
mov
sbb
xchg
ja
adc
mov
movsl
ss
xor
push
pop
out
daa
loope
dec
jbe
shrl
sub
inc
ret
in
xchg
jcxz
mov
popa
or
pop
pusha
outsb
addr16
iret
movsl
stc
or
push
and
sbb
mov
lods
orb
xchg
or
mov
clc
adc
and
sarb
inc
xorb
dec
es
loope
adcl
cmp
loope
jmp
dec
sub
les
jle
mov
mov
adcb
scas
push
out
jp
mov
in
imul
cmpb
stos
inc
mov
xchg
lcall
repz
aas
insl
jno
test
pop
sbb
imul
push
or
jge
mov
insl
sbb
cmc
mov
add
rorl
pop
in
rcll
outsl
cld
icebp
mov
dec
push
jmp
or
lock
dec
xorb
lret
jno
test
cmp
pop
inc
jae
cmc
cs
adc
dec
mov
shll
out
inc
dec
and
add
push
xchg
mov
cmpb
sub
test
xchg
ss
je
enter
dec
stos
xor
cmp
add
cmpsl
push
pusha
push
arpl
push
fists
jbe
inc
mov
mov
ret
xor
sbb
add
push
icebp
mov
cmp
push
fldl
test
and
aaa
pop
jns
popf
add
push
daa
decb
outsl
mov
mov
into
fstpl
add
xchg
add
pop
or
rcrl
adc
jmp
dec
push
adc
pop
adc
or
sub
cmp
cmpl
fdivs
push
xchg
fisttpll
mov
addb
pop
outsl
push
repnz
aam
sbb
xchg
and
into
les
lret
push
xchg
jo
mov
push
sbb
mov
push
call
mov
pop
loopne
sub
dec
dec
xorb
adc
pop
lret
inc
aam
into
pop
pusha
leave
xchg
jbe
jmp
cld
pusha
hlt
push
imulb
bound
and
and
insb
adc
std
inc
xchg
arpl
add
xor
xor
and
push
stos
mov
push
adc
adc
xchg
imul
ret
xor
popf
dec
cltd
out
fucom
in
int3
pop
stos
mov
stos
sbb
icebp
mov
leave
mov
aad
inc
scas
int3
lahf
scas
movsl
xor
add
xor
int
xchg
shl
xchg
adc
sarl
js
ret
sub
and
clc
dec
ret
pop
or
lods
and
out
or
push
sbbl
sahf
lahf
adc
test
mov
sbb
addr16
scas
jl
inc
adc
push
push
addb
push
inc
add
imul
pop
inc
sti
mov
sbb
addr16
inc
adc
add
jb
push
ds
pop
mov
icebp
adc
inc
popf
jmp
jl
cmpsl
adc
dec
pop
adc
mov
scas
xor
cmp
jo
stos
pop
mov
or
stos
ficoml
test
fs
ret
mov
dec
cltd
jp
out
sub
fstps
sbb
mov
push
mov
sbb
mov
js
fidivrs
nop
lea
jnp
sbb
lret
imul
ss
popf
stos
or
mov
fdivs
or
out
pop
mov
stos
popf
shrl
repz
mov
cmp
fchs
push
or
sbb
adc
mov
adcl
repz
jl
int
sbb
dec
add
xchg
mov
xchg
mov
cltd
inc
inc
or
mov
xor
pop
or
or
fcomip
cmp
jmp
lds
fiadds
sub
mov
stos
test
mov
xchg
icebp
push
ljmp
popa
cmp
xchg
je
movsl
sbb
ss
mov
cltd
rolb
pop
lock
push
mov
rcr
sub
pop
out
nop
mov
xchg
mov
insl
xor
fiaddl
add
loop
lock
fwait
xchg
addr16
lahf
and
jno
add
lahf
mov
mov
jno
xchg
pushf
sbb
or
xchg
aaa
cmpsb
mov
std
test
jp
ret
outsl
repz
ucomiss
and
push
aaa
fs
cltd
fldt
xor
push
out
inc
mov
lcall
mov
or
mov
movsb
in
add
jmp
arpl
sub
adc
test
cli
jmp
sbbb
faddl
stc
shl
scas
aaa
xchg
sub
lret
jg
fdivs
add
out
jnp
popa
xchg
sub
inc
sbb
xor
xor
in
mov
aas
call
jmp
inc
aas
mov
pop
dec
ja
enter
add
mov
jge
lods
xchg
adc
mov
ret
mov
pop
xchg
cli
pop
iret
sbb
jbe
adc
sbb
lahf
cmpsl
fisubrl
mov
jl
push
cmp
and
std
mov
movsb
divb
ja
jb
out
fwait
xchg
icebp
mov
adc
jl
sbb
imul
pushf
adc
jns
out
out
fsubrl
pop
xor
je
mov
icebp
loope
fldenv
cmc
xchg
shlb
push
add
lock
cs
sbb
push
in
subb
sbb
test
pop
nop
push
repz
xor
add
jbe
les
test
push
push
fbstp
xor
in
push
in
mov
add
lahf
repnz
cltd
mov
and
sub
mov
push
xor
lret
cmp
ret
pop
push
jle
mov
push
push
adc
insl
notl
inc
in
and
push
dec
inc
push
cmp
jp
mov
jae
stos
dec
and
xchg
jo
repnz
adc
ret
adc
adc
sbbl
fdivrp
pop
jns
rcll
pop
pop
add
xor
and
pop
inc
fisttpll
leave
icebp
aaa
push
mov
ljmp
fadd
inc
push
cmp
mov
addl
or
jmp
push
pop
sbb
jg
stos
pop
sahf
out
test
mov
xchg
cmp
dec
shll
mov
mov
mov
mov
cmp
fidivl
mov
pusha
sub
loope
push
movsb
scas
popa
xchg
jae
pop
test
or
jns
sti
mov
xorb
sarb
je
sbb
xchg
loopne
xlat
pop
dec
jecxz
ret
pushf
jnp
je
mov
add
enter
fsubrl
fisubl
add
jg
dec
xor
call
into
cmc
inc
scas
int3
aam
mov
inc
adc
pushf
enter
stos
dec
lods
and
xor
xchg
push
cmp
or
mov
fildl
div
das
and
and
enter
shrb
push
push
push
cltd
gs
inc
js
sbb
mov
in
dec
lea
cmpsl
sub
xchg
lcall
fcompl
pop
insb
das
jb
lahf
shll
test
pusha
outsb
or
jns
fwait
lea
gs
add
test
scas
xchg
sub
movsb
pop
mov
ret
fadds
and
xor
jbe
dec
xchg
xchg
aad
and
xor
cmp
popa
call
loop
add
xor
movsl
adc
lods
or
andl
movsl
cli
xchg
test
aam
lea
popf
dec
movsl
out
fldl2e
and
cld
push
jo
movsl
into
lods
dec
pop
popf
in
jno
inc
sbb
push
push
aas
push
xchg
in
in
sbb
inc
daa
aaa
lods
fistpll
cmc
xor
jns
xorl
mov
pop
stc
xchg
in
imul
dec
inc
pop
cmp
add
jg
or
mov
dec
xchg
icebp
push
shld
inc
jmp
and
push
rcrb
insl
sub
push
jg
xorl
adc
push
push
fldcw
mov
jnp
and
add
and
and
call
mov
adc
mov
or
lods
pusha
outsl
jmp
mov
mov
mov
xchg
mov
cld
adc
push
push
insb
mov
cmp
add
sbb
mov
or
inc
sahf
mov
push
clc
sub
pop
push
xchg
xchg
pop
decb
mov
les
xor
call
test
jns
or
mov
xchg
push
push
lods
fistpll
inc
add
cwtl
fldenv
mov
pop
mov
in
xchg
mov
pop
jae
dec
cmp
icebp
xchg
inc
je
repz
lods
mov
and
inc
pop
rol
mov
lods
mov
int3
test
mov
jne
adc
jmp
push
rcrl
jmp
iret
int3
inc
cltd
inc
arpl
setnp
ss
sahf
outsb
push
jmp
xchg
mov
add
bound
mov
and
clc
mov
cmpsl
jb
std
xchg
inc
lahf
mov
les
push
push
aad
inc
add
sahf
sbb
subb
gs
lahf
addr16
leave
xchg
enter
cli
adc
adc
fldl
cmpsl
clc
cwtl
push
jb
jecxz
iret
sub
lahf
xor
adc
popa
and
aam
xchg
in
pop
inc
lret
cmp
inc
xor
jmp
xlat
es
cwtl
daa
hlt
push
popa
movsl
shlb
mov
gs
pop
cmp
push
or
aas
jae
xchg
sub
jns,pn
dec
xchg
leave
int
xor
in
or
test
inc
inc
dec
fwait
adcb
pop
jnp
fcom
testl
xor
and
mull
adc
inc
ficoml
sbb
test
cltd
xlat
push
les
shll
jo
adc
lret
mov
xchg
mov
pop
bound
sub
ret
xor
pop
xor
push
cmpsl
cmp
lcall
pop
sub
call
repnz
stos
dec
jbe
inc
jmp
out
rorl
movsl
inc
cmp
pop
adc
ja
ret
add
jmp
push
fnstenv
xor
adc
int3
popf
mov
ss
lcall
sbb
or
push
nop
addb
jl
jg
jne
mov
inc
test
lahf
sbb
xor
mov
xchg
and
dec
pusha
dec
xchg
xchg
add
in
push
lret
ficoml
push
xchg
dec
and
addr16
xchg
imul
jbe
add
xchg
cmp
add
mov
mov
outsb
pop
pop
pop
push
fmull
xor
sbb
out
test
mov
cmc
pop
adc
add
scas
lods
mov
cmpsb
add
addb
or
pop
lods
cmp
and
es
fucom
mov
fwait
sti
test
jb
int
test
add
inc
pop
insl
pop
or
adc
push
lret
aas
arpl
jl
fisttps
not
jmp
dec
fisubrl
lock
dec
inc
jp
fstpt
cwtl
scas
cmp
push
and
mov
in
inc
nop
xchg
and
push
jge
sub
sub
pop
xchg
mov
loop
insl
daa
data16
inc
or
nop
scas
push
jg
outsl
or
dec
mov
sub
test
jne
mov
jge
dec
adc
mov
rcll
mov
jg
lods
mov
cwtl
rorl
xchg
dec
aaa
mov
inc
adc
or
mov
adc
push
loop
pop
ds
cmp
push
jnp
sbb
mov
fistpl
mov
andb
pop
jb
cltd
push
cwtl
push
movsb
fmuls
xchg
lea
push
mov
int
dec
frstor
imul
mov
shrl
test
push
nop
lock
gs
sbb
xchg
or
sahf
fwait
cwtl
and
mov
fs
and
dec
sbb
popf
mov
pop
movsb
sbb
dec
mov
cmp
shlb
out
clc
out
and
addr16
sbb
xor
out
mov
mov
jg
das
mov
notl
fs
and
movsb
jmp
or
jl
xor
jmp
enter
xor
jmp
call
push
cmp
push
aad
and
lahf
idivl
nop
loop
mov
cmpsl
push
mov
icebp
adc
ret
mov
push
inc
or
icebp
out
mov
shrb
loop
jo
fs
aad
jmp
mov
movsl
jo
outsl
inc
stos
mov
push
cmp
cmpsl
loope
fwait
movsl
jnp
pushf
lea
or
xorb
ret
cmp
dec
aam
dec
ss
or
pushf
and
iret
cmp
push
jno
pop
fidivrl
lds
dec
andb
cmp
and
pop
dec
into
lods
sub
outsb
and
xchg
push
xor
cmpsl
xor
push
jns
fucom
cwtl
pushf
dec
dec
hlt
push
jmp
add
cmpsl
or
jle
ja
inc
lds
repz
and
cmp
xor
mov
mov
mov
dec
xchg
cmp
dec
xorl
pop
dec
mov
call
leave
ficoms
daa
mov
pop
mov
dec
cld
cltd
jns
inc
cmc
or
mov
mov
add
loop
and
andb
add
lods
mov
dec
sub
pop
popl
leave
cwtl
xor
xlat
sahf
loope
mov
and
cmp
mov
cmp
add
pusha
ja
negl
fidivrs
adc
decl
andb
lds
inc
inc
push
sbb
cli
jecxz
daa
mov
push
sti
dec
mov
fisttps
js
test
cmpsl
xchg
and
cmp
cmpsl
bound
sub
lret
test
shll
dec
int3
stc
inc
in
pushf
add
pop
lret
fisubl
adc
sub
shlb
test
in
mov
mov
dec
xchg
aam
and
inc
xlat
gs
dec
faddl
stos
repz
and
xchg
sbb
fcompl
outsb
rcr
leave
xchg
mov
enter
mov
xor
add
mov
movl
movl
mov
mov
xor
add
cmp
je
mov
xor
mov
sub
add
mov
mov
xor
add
imul
cmp
ja
jmp
iret
xor
addl
adc
mov
adc
jp
sub
pushf
mov
movsb
cmpb
hlt
dec
repnz
int3
or
pop
loop
dec
fsubrs
lods
jmp
or
movsl
in
mov
or
je
stc
cmp
call
sbb
in
or
repnz
insl
fnstenv
cmp
cltd
sti
jo
ss
and
invd
js
lods
out
jp
or
lds
scas
adc
jns
jg
mov
icebp
shr
std
jmp
addl
je
jo
xor
sbbl
add
lea
cli
out
ror
hlt
xchg
sbb
pop
int3
dec
pop
addr16
pusha
push
std
cmp
or
add
das
mov
mov
shlb
add
jae
repz
mov
mov
xor
imul
jno
add
xchg
dec
push
ja
hlt
mov
les
imul
mov
sbb
bound
jo
cli
pop
adc
mov
mov
xchg
subb
fsubrl
adc
test
or
loop
adc
inc
pop
notl
mov
sahf
mov
mov
jp
add
subl
cwtl
divl
jle
inc
xchg
cmpxchg
xchg
jmp
or
jl
xchg
push
int3
lock
mov
outsl
cli
jno
pop
xchg
xchg
cwtl
sbb
leave
mov
sub
jbe
push
push
or
stc
in
cwtl
pop
insb
daa
dec
inc
scas
lcall
shrl
cwtl
pusha
jecxz
adc
jnp
push
jns
loopne
pop
jns
rcr
leave
int
sbb
pusha
imul
xor
aaa
sbbl
iret
je
movsl
int
mov
les
mov
add
jecxz
sbb
dec
cmp
scas
adc
cmp
adc
mov
imul
inc
push
pop
push
mov
addr16
mov
cmp
xor
dec
push
inc
lods
aad
out
lods
arpl
lea
or
fstl
in
dec
sahf
std
pop
add
cli
and
mov
inc
or
mov
fwait
stc
insb
sbb
inc
bound
pop
jl
mov
mov
ret
test
sbbb
or
push
jge
xchg
icebp
and
cld
test
add
sbb
pop
add
dec
mov
add
adc
push
jns,pt
cmc
ret
xchg
sar
and
int
jmp
sub
mov
dec
inc
or
cltd
xor
outsl
sahf
sbb
ret
gs
xchg
mov
push
xor
push
jbe
jae
jo
jl
dec
mov
mov
int
cltd
sub
cmp
leave
fwait
cmp
insb
clc
andl
and
out
cmc
dec
rorb
and
sub
jge
int
cmpsb
add
insl
mov
add
mov
xlat
lds
jle
jnp
xchg
xchg
out
aad
xchg
scas
fildl
pop
loopne
adc
xor
push
mov
xor
call
cli
mov
stos
sub
dec
cmpl
dec
lods
data16
or
jl
jge
inc
cld
inc
in
mov
xor
mov
cwtl
jnp
in
outsb
mov
test
movb
pop
push
push
mov
fs
cmp
mov
inc
rcr
pop
cmc
mov
out
xlat
scas
mov
shll
xor
or
inc
scas
in
sbb
sub
sbb
adc
shl
mov
inc
inc
jg
jnp
fchs
mov
adc
inc
mov
das
xor
mov
and
xlat
mov
adc
mov
data16
adc
add
bnd
adc
or
andl
cmc
adc
mov
or
addr16
mov
xchg
pop
cmp
inc
jge
dec
cmp
lods
stos
adc
cmp
gs
sbb
nop
fcoms
scas
mov
push
jne
and
sbb
push
fidivrs
xchg
scas
lds
jae
stos
or
mov
lcall
sub
not
jnp
pcmpgtw
or
aaa
fsts
push
jo
dec
sub
jb
xor
mov
push
push
xchg
mov
mov
aad
inc
out
fwait
mov
pop
dec
xchg
in
sbb
mov
jne
iret
lahf
add
cmp
jne
jl
es
xor
add
fcomps
pusha
popa
mov
jo
movsb
jo
lods
cltd
sub
out
jle
xchg
imul
cmc
jbe
ret
fldenv
or
sbb
ret
addr16
jecxz
loopne
or
xchg
fisubl
and
leave
cmc
call
mov
mov
pop
imul
imull
std
nop
in
sahf
std
jge
loope
cmpsl
iret
lock
jmp
mov
mov
scas
mov
nop
xchg
jnp
lret
test
popa
scas
mov
mov
pop
xor
mov
or
sub
jmp
fstpl
pop
mov
xchg
mov
push
les
push
xchg
xor
jnp
stos
scas
adc
mov
loope
lret
mov
adc
dec
sti
stc
mov
inc
mov
pop
mov
xchg
or
pop
push
dec
bound
out
mov
outsb
mov
xchg
pop
or
xor
push
insb
movsl
cmp
pminub
subl
jl
mov
cmp
in
test
mov
mov
xchg
sbb
sub
xchg
aad
push
xor
xchg
outsl
out
cwtl
test
mov
xchg
ds
arpl
addr16
test
lock
in
in
mov
in
bound
call
loope
repz
mov
lds
enter
xchg
jns
test
jl
loop
outsl
dec
gs
arpl
loop
pop
adc
testl
push
push
ljmp
insl
adc
push
subb
pop
cmp
lcall
stc
jg
pop
pop
mov
xor
mov
inc
imul
notl
mov
btc
imul
loopne
or
in
or
jo
ss
gs
dec
pop
fldcw
pop
xor
sub
mov
adc
andl
pop
add
xchg
xchg
ss
std
pop
movsb
adc
mov
jecxz
popf
ret
pop
ret
push
push
in
mov
dec
lea
add
outsl
push
push
mov
and
lods
pop
hlt
adc
pop
shrl
negb
ror
or
xchg
outsl
cmp
cwtl
jle
imul
pop
sarl
movsb
mov
xchg
in
push
cmp
je
pop
in
rcll
pop
scas
repz
dec
pop
sti
dec
mov
push
jno
bound
xor
cmp
insl
idivb
loop
or
and
mov
add
jno
vmread
pop
jns
mov
xchg
jl
addl
pushf
dec
fmull
and
mov
aam
sub
jo
sbb
mov
cmp
jbe
jb
inc
shrl
jge
mov
mov
fidivl
hlt
add
xor
in
xchg
sbb
cmp
cmp
movsl
mov
fsub
pop
sbb
push
push
arpl
nop
pop
push
add
inc
popa
call
jp
jg
insb
divb
mov
jge
cld
push
and
pop
cmovno
xor
adc
or
gs
ja
outsl
jecxz
loop
or
inc
cmc
shl
jb
nop
ja
push
push
xchg
inc
jmp
nop
leave
and
push
push
xor
pop
cmp
test
test
pop
adcl
scas
cltd
dec
lods
inc
push
dec
sbb
xchg
add
test
and
popa
push
sbb
gs
lea
sti
or
push
sub
mov
and
test
xor
cmp
mov
jp
add
add
jmp
xor
repz
pushf
cmc
lds
pop
push
lcall
and
cwtl
repz
ret
inc
xor
pop
fldenv
add
popf
jno
fcmovnbe
dec
mov
mov
mov
sub
xor
mov
lds
push
insb
sbb
jg
cmp
mov
adc
inc
je
sub
adc
cmp
in
or
xor
sbb
leave
xchg
jmp
and
fldenv
jg
incb
xchg
cltd
into
cmp
aas
pop
pop
mov
push
and
and
xor
jg
push
bound
repnz
add
cmp
push
or
sbb
addl
mov
push
pop
mov
int
cli
mov
and
fildll
ss
mov
adc
fsubrl
and
mov
mov
lods
lret
ret
sub
push
xchg
cmp
jo
mov
cltd
jb
jmp
std
cmp
push
jmp
pop
dec
daa
rcrl
data16
push
vpshuflw
stos
sub
cmovle
inc
nop
pop
push
sbb
cmpb
sub
push
das
popa
pop
pop
mov
mov
das
lds
inc
icebp
ja
inc
aaa
in
push
mov
sub
or
push
gs
gs
int
ret
mov
mov
in
adc
push
xor
lods
repnz
jb
adc
lret
hlt
cmp
div
andb
cmc
xor
lret
cmp
cs
and
lods
jo
aas
sbb
cmpsl
inc
xchg
xor
lret
xchg
js
mov
popa
inc
je
jge
test
xor
push
inc
mov
jno
sub
cmp
cwtl
xchg
in
sbb
lahf
lods
call
sahf
and
andl
aad
or
push
repz
fs
jno
jp
shlb
and
insl
cld
mov
dec
push
sarl
divb
fstpl
jmp
pop
dec
mov
lods
mov
sti
lahf
lods
gs
popf
daa
je
sub
ja
jo
ret
repz
sbb
in
inc
sbb
cmp
adc
adc
add
cmp
dec
inc
lds
pop
inc
sahf
aam
xor
cmp
insb
xorl
mov
aam
sbb
sbb
lcall
sub
lret
ss
pop
push
enter
fcmovbe
icebp
sbb
lea
xor
dec
out
enter
test
add
inc
push
jae
scas
push
sbb
js
icebp
mov
and
repnz
mov
cmpsb
mov
popl
lods
push
cmp
dec
and
fimuls
or
xchg
and
xchg
in
mov
xchg
xor
lret
loopne
jmp
and
jmp
fildl
int3
frstor
dec
jne
xor
mov
sub
fildll
pop
add
sbb
push
xor
jbe
and
divb
in
xor
rcrb
stos
in
hlt
js
push
lock
lods
mov
and
repz
dec
and
inc
or
fmul
sbb
sahf
sub
ret
aas
add
rorl
imul
sub
call
je
cmp
inc
lcall
push
mov
adc
dec
dec
add
gs
loope
sbb
cmc
test
rorb
push
jle
add
out
mov
call
insl
mov
icebp
aad
rorl
clc
repz
addr16
daa
add
pop
jo
lock
jl
jns
sub
adc
sbb
aas
aas
pop
adc
subb
add
rep
jae
movl
adc
cmp
cmp
es
imul
movsl
or
test
mov
mov
lock
or
mov
inc
addr16
decl
js
ret
mov
mov
sbb
adc
mov
push
popf
jno
fmulp
or
push
pop
call
arpl
hlt
xor
or
push
dec
jecxz
pushf
imul
adc
push
mov
in
mov
dec
pop
mov
cwtl
jbe
or
out
ss
dec
xchg
dec
mov
pop
les
enter
out
dec
mov
aad
cmp
mov
sub
jge
adc
pop
andb
cld
push
mov
test
mov
insb
enter
and
mov
outsb
push
scas
xor
cmp
mov
ds
popf
push
xchg
lods
pop
pop
mov
and
mov
shll
enter
mov
add
sbb
es
jnp
mov
sbbb
jp
fcompl
push
cmp
push
cmp
mov
fnstsw
sbb
adc
lock
jmp
fmull
sbb
jl
cmpsl
sbb
dec
mov
in
push
es
repnz
lods
dec
sub
jno
or
dec
push
in
out
repz
int3
outsl
pop
ret
loopne
mov
ror
iret
or
cmp
cmp
mov
push
pop
xchg
js
imul
call
mov
xchg
dec
mov
and
lret
loop
orb
cmp
data16
mov
sub
clc
push
adc
dec
popa
lds
inc
or
sti
mov
es
push
xor
lahf
ret
mov
not
pop
sarb
int
inc
dec
ljmp
mov
push
jno
decb
loop
cld
ds
loop
imul
aad
out
or
adc
stc
dec
cmc
je
les
jecxz
lret
push
xor
int
pop
mov
das
lret
out
dec
pop
fnstenv
jl
mov
repz
cmc
push
jae
fidivrl
dec
inc
es
mov
in
add
scas
cmpsb
je
stos
jecxz
adc
rolb
add
inc
inc
push
or
xchg
and
mov
sbb
push
push
daa
sahf
mov
ja
dec
inc
push
mov
mov
add
pushf
pop
pushl
cli
add
jle
out
adc
cwtl
add
push
xor
jae
or
push
int3
lcall
mov
xchg
out
shlb
cmp
popf
imul
mov
push
inc
lahf
mov
test
out
jl,pn
xchg
daa
cltd
xchg
addr16
cld
mov
loopne
movsl
daa
and
or
mov
rclb
popf
fisubl
outsb
xor
int
xchg
inc
xor
cwtl
xchg
arpl
fsubl
loopne
cli
jne
cmp
adc
push
je
mov
insl
stc
mov
clc
push
data16
in
outsl
dec
das
fmuls
cmp
jmp
push
mov
jne
xor
xchg
xchg
xor
mov
jbe
fwait
pop
scas
or
mov
movl
in
insl
push
insb
xchg
jnp
sbb
pop
bnd
lods
sub
sbb
test
push
push
jne
push
aam
mov
popf
jp
leave
xor
fnstenv
mov
mov
aam
pop
jle
adc
les
aam
mov
in
fcom
dec
in
mov
sbb
pop
dec
test
in
movsb
xor
icebp
xchg
fdivrl
push
lea
mov
mov
lea
lret
or
mov
jmp
dec
cmpsl
adc
sarl
das
ljmp
push
or
movsl
retw
dec
sahf
sub
mov
sbb
pop
mov
pop
je
loope
and
mov
outsb
jb
mov
addr16
test
jne
mul
int3
jae
jl
mov
inc
das
pop
icebp
xchg
movsl
add
xchg
cmp
iret
jns
mov
jb
cltd
icebp
stos
out
ja
xchg
aas
push
cld
data16
bound
in
xchg
xor
sbb
out
outsl
adc
leave
dec
lahf
imul
movsl
ds
mov
inc
roll
mov
xchg
jne
push
out
sahf
mov
xor
cli
lcall
bound
or
lock
scas
sbb
fnstenv
adc
mov
fwait
pop
pop
in
mov
outsb
push
lods
mov
iret
ret
push
sub
arpl
push
je
rcrb
push
cmp
cli
or
ficomps
or
mov
xchg
xlat
sbb
or
out
pop
sbb
int3
or
mov
shr
ds
repz
addr16
repz
push
ss
sbb
jmp
push
sub
xchg
dec
aas
xlat
sarb
and
cwtl
xchg
fmuls
dec
imul
les
sub
rclb
js
loope
add
sbb
xor
les
inc
jp
ficoml
dec
jns
call
adc
sub
aad
or
sbb
sti
stos
push
ja
lds
lock
daa
popf
cmpsl
sahf
lock
stos
push
pop
xlat
test
mov
jbe
divps
aam
lret
jae
xor
pop
push
and
xor
iret
mov
sarl
xor
into
add
and
int
adc
jecxz
movsb
jb
addps
movsl
adc
aaa
popf
movsl
add
push
test
xlat
mov
mov
push
sbb
mov
cmp
mov
mov
out
push
out
cwtl
mov
jns
popa
into
push
mov
fimull
mulb
in
das
mov
add
test
inc
mov
jnp
sub
ret
int
or
cmc
sbb
in
pop
sti
sbb
dec
inc
rorb
fistpll
mov
ret
cs
out
sbb
lods
mov
mov
inc
mov
pop
xchg
push
jb
jle
pop
or
outsl
jne
hlt
xchg
mov
popa
or
push
pop
fnstenv
inc
mov
test
jp
jb
mov
pop
mov
xor
xor
ret
loop
cmpsl
js
mov
jo
cmp
sbb
mov
lret
pop
loope
xor
psllq
xchg
and
in
leave
xor
shlb
clc
jno
inc
mov
cli
xor
jnp
adc
or
and
cltd
fadd
mov
ret
les
pushf
or
dec
pushf
push
lret
int
push
xor
add
mov
hlt
int3
hlt
add
sbb
mov
and
jne
mov
mov
cld
fucom
dec
fwait
push
les
mov
dec
push
cli
xor
sbb
xorb
mov
enter
sub
sub
xlat
je
jne
repnz
mov
inc
xor
test
pop
pextrw
sbb
xchg
push
inc
xor
jp
cmpsb
int3
jns
jmp
cmpsb
minps
cwtl
jle
cmp
outsb
dec
cmp
mov
enter
cs
cld
sahf
dec
sub
add
mov
and
inc
cmp
ss
or
test
cs
scas
inc
jl
dec
xor
jb
and
ficompl
jae
push
push
aaa
in
xor
pop
add
inc
inc
mov
dec
sbb
dec
add
scas
shrb
cmpb
mov
jg
dec
mov
ret
push
sub
outsl
scas
pusha
jl
sar
movb
mov
or
insb
jb
sbb
xchg
enter
popl
icebp
xor
mov
test
outsb
fs
shl
jmp
rclb
negb
loope
xchg
xchg
adc
lds
or
inc
shrl
scas
aam
jno
fcoml
push
jl
mov
insl
and
inc
mov
clc
adcb
and
syscall
mov
inc
sbb
pop
cmp
lds
popa
mov
sub
add
jge
idivl
inc
repz
xlat
fistpl
mov
fwait
and
xchg
cmpxchg
mov
hlt
and
pop
jns
mov
inc
imul
lcall
xchg
les
aaa
mov
xor
out
fimull
jns
fwait
rcrb
mov
mov
jle
mov
mov
ja
sahf
xor
inc
adc
dec
push
pusha
outsb
push
aas
and
jmp
mov
int3
lea
jmp
mov
pop
jmp
fbstp
add
sub
xor
sub
xor
sub
sbb
notb
or
mov
xchg
out
jecxz
inc
sub
inc
pushf
jns
insb
out
or
sbb
aad
cs
mov
push
cmpsb
bound
mov
and
int
movsl
or
or
xchg
mov
adc
aam
push
pop
mov
and
sub
push
xlat
movsl
loope
pop
push
jge
insb
push
jne
xchg
in
aam
pop
mov
loope
leave
cmpsb
rolb
lods
or
pusha
mov
inc
dec
rcrl
lods
xorb
mov
stos
imul
idiv
and
out
sbb
xchg
pop
loop
xor
cli
ss
clc
xor
push
jge
jnp
ss
inc
sahf
and
mov
jmp
jp
ljmp
cmpsb
push
xorl
xor
ljmp
leave
and
sbb
in
leave
pushl
dec
push
arpl
xchg
push
jae
pop
push
subl
dec
add
in
lods
add
in
cmovns
sbb
mov
fwait
mov
rcll
test
mov
inc
fimuls
testl
pop
xlat
jbe
int3
cmp
xchg
outsl
shr
pop
xchg
ljmp
sbb
je
cwtl
mov
sub
insb
xor
repz
or
add
sarl
or
dec
mov
fistpll
gs
icebp
scas
dec
dec
push
mov
fildl
cmc
jp
jmp
rcr
xlat
pop
ret
add
dec
popf
subb
repnz
pop
pop
inc
push
xchg
std
stc
imul
mov
lret
cmc
or
jnp
lock
imul
lods
mov
mov
scas
pop
sbb
inc
mov
jp
in
pusha
push
bsf
cmp
sbb
mov
je
push
popa
int3
test
pop
inc
sbb
sbb
mov
scas
xor
inc
outsl
xor
loope
ret
gs
lcall
sub
mov
mov
hlt
mov
pusha
cs
sub
stc
pop
cld
daa
sahf
xchg
jne
mov
stos
call
aas
dec
push
and
aam
sub
xor
cwtl
pop
nop
repz
data16
mov
and
call
lds
mov
fstl
fbstp
push
stos
sti
sbb
lods
lea
xchg
lahf
lret
imul
sti
mov
and
xor
mov
leave
mov
inc
and
and
mov
lea
cmc
xor
loope
fstpl
or
test
aam
cmp
or
mov
sbb
xchg
lret
jl
outsl
mov
xlat
pop
test
incl
jg
in
test
ljmp
bound
xchg
repz
dec
out
jecxz
jo,pn
ja
mov
fwait
xor
xchg
rorb
aaa
push
jb
add
imul
xchg
into
scas
cld
cmp
pop
push
decb
xbegin
popf
sub
adc
and
pop
dec
sbb
popa
jne,pt
scas
cmp
or
adc
dec
fwait
sub
rcr
lds
inc
mov
or
and
cmp
or
sti
sahf
clc
mov
cli
lods
testb
xchg
sti
mov
jl
or
xor
nop
and
cwtl
pop
mov
je
sti
aam
shll
push
roll
int
mov
arpl
adc
sub
enter
out
inc
sub
xchg
outsb
int
repnz
or
sbb
xlat
sbb
inc
aam
jecxz
lods
sub
or
incl
cli
and
enter
add
dec
shlb
insl
mov
push
inc
enter
je
gs
sub
scas
enter
stos
es
sbb
leave
inc
addr16
iret
push
stc
or
jae
lds
adc
inc
daa
scas
int
cmp
mov
push
push
mov
nop
dec
aaa
std
xor
push
mov
mov
mov
pop
aam
outsb
ficoml
pop
pop
xchg
xor
repz
lock
sti
pop
push
out
test
loopne
add
mov
lret
test
or
sub
lret
fisubrl
push
daa
mov
jl
out
mov
inc
gs
shr
lds
cmp
aas
fsubrs
pop
mov
jns
outsl
fs
fadds
inc
jecxz
mov
ret
mov
scas
add
mov
popa
mov
and
mov
cltd
xchg
out
shlb
scas
and
aaa
or
fwait
add
sbb
cmp
push
in
icebp
pop
inc
push
lods
das
mov
leave
inc
ret
popf
jg
cltd
clc
aam
sub
sbb
mov
in
rcr
test
cmp
cmp
lret
fnstenv
in
mov
loope
lret
adc
sbb
pop
xor
jo
mov
pushf
push
or
fdivrs
push
popf
mov
and
add
and
ret
fisttps
ffree
pop
fwait
xor
sbb
je
jp
out
mov
dec
sbb
sbb
cmc
inc
fdivr
fwait
cmp
and
dec
jl
dec
scas
out
and
mov
jg
xchg
test
push
pop
rcll
and
call
pop
repnz
in
adc
lcall
lea
cld
test
pop
mov
enter
xchg
mov
fdivrl
inc
retw
inc
repnz
xchg
into
jae
outsb
mov
mov
mov
push
dec
xchg
push
aad
out
add
das
cmp
test
mov
jecxz
les
jns
inc
ss
addr16
sub
aad
ficoms
jmp
frstor
subl
xor
jle
xchg
pop
insb
scas
sub
aas
jae
mov
sub
in
mov
cld
in
jbe
popa
mov
fistps
movsb
push
inc
jno
stc
mov
sarl
mov
fstpt
inc
fwait
mov
in
out
xchg
out
ficoms
test
adc
cmp
loope
fucomi
cli
je
or
in
test
inc
mov
std
push
jae
movsl
arpl
and
xor
loope
adc
scas
sub
daa
lret
inc
movsl
test
iret
push
mov
sub
imul
xor
imul
or
sub
shlb
inc
fisubrs
out
jl
mov
stc
js
xchg
imulb
adcb
push
push
imul
adc
cld
loope
xchg
outsb
fadds
sub
adc
lock
das
js
into
fidivrs
movsb
lahf
enter
cmp
sahf
rclb
repz
jp
test
cmpsl
mov
mov
leave
mov
cmp
stos
ret
jae
stos
lahf
es
mov
sbb
outsb
inc
dec
pushf
mov
mov
jmp
xchg
and
js
stos
jb
mov
push
stos
es
push
insl
bound
cmp
testl
lret
xchg
dec
sbbb
mov
leave
jle
nop
cli
push
nop
pop
pop
or
cmp
repnz
and
pop
les
rclb
xor
dec
dec
loopne
dec
sub
mov
inc
xchg
sub
mov
or
lods
push
jmp
xor
subb
loope
or
push
or
int3
outsb
pop
adc
out
pushf
push
je
fcompl
mov
sub
mov
pop
jle
fsubs
ret
gs
push
mov
repnz
mov
loope
mov
ror
inc
fdivl
aam
jb
mov
cmp
dec
addb
pop
jno
mov
xchg
adc
popa
sbb
jmp
pop
inc
push
and
and
aad
xor
inc
pop
push
mov
push
push
mov
movl
lcall
inc
xchg
jmp
loopne
xor
popa
lock
lods
dec
fwait
int
sbb
lods
cmc
subb
inc
mov
imul
jno
lock
lea
push
cmp
adc
jae
sbb
orps
ljmp
sub
repz
pop
push
inc
jl
popa
shrb
cmpsb
jmp
and
cmp
or
sarl
lahf
in
mov
jb
push
inc
pop
pop
jmp
xor
mov
stos
xor
pop
dec
je
or
test
xchg
push
daa
mov
inc
xchg
mov
jmp
into
or
insl
dec
roll
mov
icebp
xor
shll
fcmovbe
push
repnz
sub
xor
lock
loopne
lock
loope
jle
mov
roll
adc
add
aam
push
add
lcall
add
into
add
js
pop
dec
pandn
iret
jns
lea
inc
hlt
imul
inc
addb
lcall
inc
xor
sub
push
push
std
inc
stos
in
mov
aam
out
and
xorl
add
dec
aam
mov
lods
push
cmp
js
loope
xor
cld
cmpsb
call
cs
decb
pop
outsb
mov
mov
mov
je
test
insl
popa
imul
push
jge
ficoml
test
idivb
mov
jl
test
loop
insl
out
inc
mov
cmp
loope
add
lods
shrl
inc
jg
idivb
cwtl
pop
jne
pop
ja,pn
nop
push
loopne
sub
jle
loope
and
sbb
idivl
cmp
clc
or
adc
and
xchg
movsl
push
aas
mov
mov
inc
push
jp
mov
mov
scas
or
lods
movb
int3
xchg
mov
arpl
clc
push
mov
pop
in
outsl
xor
lea
out
cmp
std
in
add
ljmp
hlt
insl
inc
inc
mov
and
adc
pop
and
push
stos
leave
xor
cmp
lock
pop
xchg
pop
push
and
mov
cmpsl
lods
jb
mov
mov
xor
daa
cmp
clc
mov
lahf
popl
jns
rcr
pop
mov
in
cmpsb
or
pop
xlat
sbb
xchg
cmp
jg
rolb
fnstenv
test
cwtl
bound
xchg
test
inc
shrb
aaa
cmp
inc
adcb
jp
cmp
push
out
test
data16
mov
fsts
xchg
or
fildl
aas
mov
jne
pushf
sbb
add
sahf
cld
push
loop
ret
scas
movsb
pop
rclb
shll
pop
fisttps
xorb
stos
sbb
pop
stc
sub
jo
stc
push
sar
xchg
test
lods
push
daa
outsb
mov
dec
xor
movsl
ss
enter
xchg
mov
sub
jnp
nop
or
sub
cs
stos
cmpsl
xlat
push
add
div
int3
stos
movsb
add
test
xchg
jmp
hlt
xor
aaa
push
idiv
inc
fsubrs
mov
mov
mov
sub
xor
xor
add
div
mov
mov
mov
xor
add
cmp
jbe
mov
xor
add
mov
mov
mov
xor
add
imul
mov
mov
mov
jmp
pop
inc
mov
mov
clc
jge
sub
xchg
jp
cmp
jp
cmpsb
mov
idivl
add
jno
xchg
xchg
or
cmp
mov
push
popl
mov
call
push
and
sub
sub
mov
mov
shl
addl
cmpsb
pop
ret
fcmovbe
out
enter
push
jb
or
sub
imul
lret
popf
xchg
ljmp
fsub
and
shrl
enter
lea
cmpsb
sbb
sbb
and
add
xchg
movsb
sbb
pop
cmp
jmp
movsb
pop
mov
dec
imul
mov
fstps
sub
add
cwtl
add
incl
inc
sbb
xor
jle
adc
xor
mov
or
sub
fisubrs
js
add
jnp
inc
sub
cmp
movsb
clc
je
gs
push
add
pop
xor
icebp
jbe
xchg
cmc
dec
jae
sarl
push
inc
sbb
mov
iret
pop
out
lea
cmc
push
clc
xchg
sub
mov
push
fstpt
inc
xchg
cmp
push
add
push
cmp
dec
and
push
dec
mov
sbb
movsl
idivl
test
mov
jo
push
fmulp
jb
xchg
xor
xor
cmc
mov
loope
arpl
int3
jmp
loope
aas
ret
xor
aad
pop
insl
ja
inc
ficoml
cmc
xchg
xchg
inc
rcr
mov
xchg
mov
xchg
xchg
sub
dec
dec
iret
pop
aam
mov
xor
sub
mov
rol
test
pop
xor
or
repz
pop
inc
mov
loopne
fildll
pop
mov
imul
and
inc
pop
insl
in
lahf
mov
mov
pop
fcmovbe
roll
cmp
pop
fcoml
jo
mov
outsb
or
push
mov
xchg
cs
pop
xchg
inc
cmp
dec
bsf
gs
stos
adc
sbb
pop
ret
test
enter
inc
movsl
scas
mov
xor
dec
insl
out
fists
mov
je
mov
das
pop
enter
jae
out
mov
out
jl
test
out
repz
cli
adc
cmp
mov
negl
testl
imul
inc
mov
pop
lock
and
movsl
ljmp
sub
lahf
in
test
fwait
mov
je
pushf
outsl
push
sub
dec
lret
or
xchg
sub
add
repnz
popa
aaa
sbb
dec
test
adc
cld
push
imul
xchg
xor
mov
jle
mov
test
ret
adc
enter
push
add
push
daa
aaa
test
mov
pop
mov
or
loop
das
adc
in
cmc
call
adc
iret
les
cmp
inc
push
and
sub
push
sub
addr16
pop
jno
cli
push
push
cld
or
adc
es
fisubrs
sar
andl
enter
movsb
mov
or
pop
shrl
jb
inc
mov
or
sub
lret
push
rcr
push
inc
mov
jg
repnz
sbb
cmpsl
pop
dec
push
mov
xor
out
dec
sbb
lock
xchg
adc
jno
pushf
jae
arpl
clc
add
leave
lea
add
in
jge
ret
and
adc
ret
mov
dec
mov
sub
adc
fwait
push
shlb
pop
leave
pop
call
push
pop
jo
xchg
pop
jbe
xor
or
and
pop
push
or
shll
mov
fcoms
sub
mov
idivb
mov
insb
testl
lcall
adc
lcall
subl
mov
add
int3
push
clc
lahf
test
jae
or
fldenv
fwait
out
insb
mov
daa
cmp
scas
add
adc
in
pop
in
inc
fwait
and
std
inc
jae
adc
dec
mov
scas
mov
or
iret
outsb
mov
fmul
nop
dec
mov
sub
and
lret
cwtl
xlat
add
call
nop
mov
inc
jnp
mov
add
xchg
cvtpi2ps
lock
adc
mov
fxch
or
les
fbld
ss
or
add
fwait
mov
loope
leave
pop
inc
lea
jl
cwtl
jecxz
loope
pop
movsl
mov
dec
fs
push
cmp
inc
inc
clc
mov
popa
cmpsb
xchg
pop
jne
pop
jmp
bound
mov
xchg
loopne
shrl
mov
std
pop
adc
push
out
jl
int
push
fisttpl
bound
xchg
dec
scas
je
rclb
mov
jp
inc
frstor
rorb
vandps
dec
fcompl
cld
test
shl
mov
jo
xchg
adc
and
test
mov
push
mov
xorl
mov
push
push
mov
dec
xor
and
push
imul
pusha
mov
mov
movsl
xor
adc
sub
or
outsl
lods
sub
stos
jns
dec
gs
or
mov
mov
leave
or
mov
or
out
sub
mov
insl
subl
cmp
dec
js
gs
stc
popf
dec
lcall
mov
jge
shlb
int3
outsb
neg
mov
cmp
jno
adc
lods
cmpsb
cmp
cmpsb
xlat
adcb
fmuls
mov
adc
cmp
adc
shrb
je
nop
movsl
fcmovu
lahf
dec
and
lahf
push
movsb
arpl
int
or
test
push
adc
cli
xchg
clc
jmp
call
add
sub
lret
push
pop
jge
push
pop
cltd
sahf
js
outsb
addb
push
inc
mov
enter
and
ret
mov
pop
sbb
nop
jnp
pusha
int
test
dec
add
fcom
cmp
adcl
aam
push
add
pop
arpl
cmpsb
push
neg
repnz
dec
mov
and
int3
mov
test
pop
pop
out
pop
push
dec
sbbb
int3
dec
popa
icebp
mov
mov
fildl
jno
sti
fnstcw
out
dec
das
jne
sub
and
das
inc
xor
mov
mov
jg
cmp
fucom
js
ja
sbb
scas
cmp
ret
pop
xor
pop
jp
gs
xor
cwtl
push
pop
int
inc
mov
sbb
shlb
int
sbb
fdivrl
incl
and
cmp
cmpsl
subb
add
xchg
lods
enter
cmp
cmc
subb
adc
push
push
sub
push
cs
xor
mov
cli
adc
jns
jns
push
cmp
addr16
imul
inc
mov
das
js
jmp
fbld
mov
repnz
lock
jo
mov
lds
movsl
scas
pop
popa
jp
test
push
sub
sub
lcall
cli
xor
adc
mov
out
leave
ss
mov
push
adc
xchg
rclb
push
sub
lret
mov
cmp
in
mov
insb
push
rcrl
int3
std
lahf
pop
push
mov
sti
ljmp
fwait
xor
fs
loope
imul
inc
inc
jo
shrl
stc
aas
fisttpll
enter
mov
xlat
jl
add
xor
or
sbb
aad
dec
pop
fwait
mov
jne
push
cmp
jae
dec
xor
sub
sahf
inc
rolb
jns
pop
push
jne
mov
cmpsb
nop
insb
in
nop
lock
add
xor
dec
ja
cmpsl
lods
leave
cli
adc
push
call
gs
das
pop
test
xlat
mov
mov
cmpsl
dec
fstp
sub
xor
fdivs
dec
test
ljmp
xchg
loopne
mov
jle
out
je
loope
pop
and
xchg
icebp
fistpl
push
hlt
jecxz
jbe
add
icebp
addr16
outsl
rorl
dec
sbb
push
jp
inc
scas
inc
jbe
mov
pop
adc
repz
mov
imul
dec
and
pop
and
fstps
loop
xchg
or
mov
push
xchg
dec
int3
negl
lds
jno
ja
dec
xchg
pushf
xchg
dec
test
cs
test
ljmp
inc
lea
pop
out
enter
cmp
jno
pusha
pop
scas
in
scas
jecxz
mov
call
jae
inc
test
into
movsl
mov
das
dec
je
push
sub
jne
sbb
dec
jge
dec
xor
pop
scas
dec
or
popa
pop
stos
dec
sbb
popf
shll
sub
push
fwait
push
test
movsb
inc
scas
and
adc
movl
in
das
mov
leave
cmp
mov
nop
push
cmpsb
sar
inc
insb
in
pop
pop
test
mov
xchg
pop
mov
mov
inc
mov
jecxz
jge
int
and
je
mov
adc
dec
jl
loopne
das
xchg
and
ret
test
pop
add
adc
filds
in
xor
cltd
sbb
xor
stc
enter
mov
jae
xchg
mov
jo
lods
aas
xorl
xchg
and
subl
int3
test
fildl
ljmp
jl
fdivrs
jo
ja
ljmp
push
ss
xchg
mov
jbe
jae
stos
or
xor
call
push
push
mov
pusha
lret
inc
xchg
sub
dec
mov
push
mov
mov
mov
mov
xor
in
pop
xor
in
lock
test
addr16
cs
sbb
add
jg
int
cmpsb
lds
mov
push
xor
xchg
mov
adc
pusha
inc
in
movsl
mov
push
xchg
cmp
mov
dec
inc
dec
push
inc
cmp
xchg
pop
sahf
and
cltd
into
mov
sbb
or
adc
test
stos
fisubrs
out
sti
loopne
fisttps
and
sub
cmpsl
mov
jge
lret
dec
in
lds
es
xchg
adc
mov
dec
shl
jno
mov
ficoml
adc
data16
sub
inc
xlat
lret
push
int3
mov
jmp
hlt
dec
fmuls
or
fstl
xor
fbstp
dec
push
bound
xchg
dec
notb
pop
enter
and
scas
inc
add
xchg
mov
outsb
std
int
out
lea
insb
or
sbb
and
shll
ss
in
jne
jo
mov
cmp
sarl
mov
lods
clc
jb
aad
clc
iret
pop
loopne
cmp
inc
mov
pop
loopne
mov
pop
lret
test
hlt
adc
push
jno
mov
cmp
xor
iret
xor
clc
or
cld
mov
inc
call
adc
sub
and
aas
in
mov
xor
test
pop
lcall
dec
pop
pop
jmp
lods
add
call
dec
stos
shrb
mov
inc
lds
add
sahf
pop
xchg
das
dec
popf
xor
and
fnstenv
fisubrs
push
dec
lods
addr16
cmc
loop
pop
jp
sti
loop
push
or
pop
jae
sbb
outsb
pop
dec
pop
nop
mov
je
es
mov
orb
adc
aaa
fwait
mov
fidivrl
adc
aad
outsl
dec
sbb
stos
dec
inc
xchg
inc
int3
nop
lea
lcall
outsl
push
nop
pop
lods
sbb
bound
xor
repnz
popf
mov
in
out
cltd
jns
inc
dec
add
jo
repnz
jecxz
movsb
ficoml
shlb
dec
cmp
adc
jbe
orl
dec
xchg
and
push
xchg
xor
adc
lret
lret
push
cmp
mov
lock
xor
adc
and
dec
cld
xor
jb
dec
test
outsl
xchg
daa
popa
add
mov
fs
jp
xchg
push
or
push
pop
lock
fdivr
adc
ss
into
pop
jno
push
fs
arpl
mov
test
cmpsb
sbb
in
jne
or
cmp
lods
jmp
pop
divb
sub
sbb
sbb
daa
xor
xchg
mov
mov
lods
jp
sbb
ja
cld
ror
sahf
cmpsl
aas
mov
les
push
lahf
mov
xor
int
mov
in
jge
mov
mov
ds
leave
scas
and
jo
mov
cmp
inc
xor
mov
cmp
test
pusha
stc
mov
pop
xor
add
and
cmpsb
or
shl
ror
jns
cmpsl
xchg
xchg
arpl
mov
cmpsb
std
inc
mov
xchg
and
or
xchg
xchg
and
cmp
or
cmpsl
push
jb
and
jmp
sub
inc
push
imul
in
imul
lods
stos
dec
stos
inc
or
ss
mov
mov
mov
std
mov
shrb
lds
jbe
ss
sbb
scas
adc
in
pop
cmpsb
push
aad
sub
stc
fsubrs
adc
adc
mov
and
data16
xor
jb
add
jnp
and
in
pop
or
std
icebp
push
aaa
jmp
sbb
dec
sub
fcomi
cmp
cwtl
jnp
dec
sub
add
xchg
xchg
cmp
jmp
xchg
push
cwtl
popa
test
push
fdivr
pop
insl
mov
mov
or
ljmp
fisubs
lret
add
push
outsb
mov
sub
icebp
pop
and
jecxz
push
out
dec
inc
fsubp
or
pop
dec
pop
push
push
cmpsb
cmp
flds
stc
fldt
nop
roll
dec
xchg
xor
clc
addr16
jnp
xchg
js
or
iret
les
ljmp
cmp
cmpsb
fnstsw
jg
xchg
sub
push
scas
cld
lock
mov
jl
in
hlt
int3
clc
jp
adc
imul
cltd
lods
mov
adc
scas
mov
js
test
jno
ljmp
pop
add
pop
enter
sbb
aas
iret
pop
dec
outsl
call
mov
jp
jl
xchg
lea
mov
sbb
or
je
add
mov
imul
bswap
and
xchg
mov
or
xchg
xor
ret
insb
jl
es
mov
out
fs
jmp
pop
ret
xlat
fmul
inc
imul
cmpsb
mov
xor
add
aam
mov
pop
dec
inc
dec
add
mov
shr
fimuls
out
mov
or
xorb
xchg
dec
mov
je
and
xor
mov
mov
xchg
push
or
out
loop
adc
adc
adc
or
pop
daa
sbb
add
shll
inc
xchg
mov
sub
or
fldt
push
xchg
inc
lods
bound
mov
test
inc
mov
fcmovu
push
push
jb
fldt
gs
mov
decb
push
lods
dec
bound
mov
add
and
stos
test
enter
fdivrs
fbstp
push
inc
mov
xor
ror
jnp
mov
sbb
and
sub
mov
xor
pop
lods
dec
jmp
cmpsl
cmpsb
cld
xchg
push
gs
lods
xchg
mov
pop
inc
dec
mov
mov
out
push
ljmp
es
xchg
clc
hlt
icebp
cmp
push
movsb
cmpsl
sub
adc
and
dec
aam
scas
push
and
jmp
jl
popf
dec
add
rcrb
sbb
addb
cwtl
je
leave
insb
xchg
mov
mov
decb
call
or
xchg
stos
adc
jmp
and
pop
sbb
adc
into
fadd
mov
ljmp
dec
imul
test
ret
or
popf
dec
pusha
mov
daa
stos
mov
movsl
push
inc
xchg
jle
jne
out
out
sbb
push
add
mov
enter
insb
ror
sbb
add
push
cmp
or
mov
gs
test
outsl
mov
loope
int
jp
cmc
ja
and
out
add
in
lret
cmp
loope
insl
sub
or
xchg
sub
add
push
cmp
or
sub
cmp
push
int3
subl
mov
add
cmp
push
sbb
in
inc
push
push
mov
cmp
inc
lret
mov
neg
xchg
mov
bound
push
js
dec
pop
lods
lcall
inc
mov
pop
pop
out
sub
outsb
fisttpll
std
jo
mov
stos
jae
insl
cmp
sbb
out
int
aaa
insb
pop
aam
das
nop
push
popf
scas
xor
xor
push
mov
nop
push
mov
in
sub
test
clc
cwtl
int
das
mov
stos
dec
mov
sub
into
mov
dec
bnd
fisubs
sbb
xchg
fdiv
in
shll
or
inc
mov
aad
jl
into
jge
or
dec
push
jl
cmpsb
push
mov
lods
add
adc
mov
dec
fsubl
aad
mov
in
pop
ds
xchg
pop
es
mov
mov
movq
pusha
in
adc
in
lea
idivb
mov
stos
pop
xchg
fwait
or
repnz
jp
pop
mov
xor
cmp
idivb
loop
add
sbb
pop
shll
mov
sub
fmuls
fstps
cmpsb
stos
inc
xor
pop
xor
mov
pop
inc
mov
sub
test
and
xor
outsl
jl
inc
mov
ret
outsl
sbb
dec
lea
cmpl
jo
insb
lahf
xor
mov
add
test
scas
xchg
inc
test
mov
test
adc
adc
sbb
imul
jge
jnp
or
jb
jns
das
aas
push
cltd
call
mov
rcrb
std
sahf
fistpl
mov
mov
decl
sbb
fsubl
lea
push
les
xlat
sbb
imul
fisubrl
xor
enter
inc
imul
enter
icebp
ljmp
sbb
movsl
mov
cli
fwait
jle
or
push
std
mov
jmp
imul
fwait
int
fsts
into
add
sbb
adc
mov
aam
jmp
daa
jp
pop
xchg
or
cmp
das
out
fs
mov
fiaddl
jmp
clc
jg
adc
cmp
push
faddp
bound
ljmp
mov
push
adc
ret
xchg
inc
pushf
sbb
test
push
daa
cmp
cwtl
rcrl
and
push
test
mov
push
mov
adc
hlt
idivl
repz
and
out
lahf
push
dec
mov
xlat
cli
jne
dec
fadds
lea
pop
push
testl
mov
and
enter
arpl
popa
int3
mov
movsb
outsb
and
jno
jne
lcall
jns
insb
jle,pt
xlat
hlt
sub
ds
inc
fwait
popa
or
lahf
inc
fimull
es
int
push
push
in
mov
fidivl
lret
loope
scas
adc
or
cld
jle
movsb
mov
pop
or
in
test
jge
xchg
adc
lcall
jb
mov
pop
jo
push
fidivs
into
fs
in
and
lea
pshufw
adc
xchg
popa
insb
decl
test
push
daa
andl
stc
mov
lds
jne
push
jbe
ss
aam
mov
sbb
pop
rolb
inc
xor
mov
inc
mov
rcrb
mov
mov
repz
je
test
mov
popa
jmp
gs
mov
dec
add
imul
ret
das
popf
icebp
xor
cli
cmp
push
jbe
pop
test
icebp
aam
mov
repnz
pop
pop
mov
aaa
push
mov
pop
sbb
imulb
stc
xchg
push
inc
mov
stc
pop
mov
js
data16
mov
ljmp
jo
inc
aam
popf
stos
in
push
adc
xlat
sub
sub
xchg
jae
and
pop
loope
pop
shrl
cmp
and
xchg
push
adc
fimull
sbb
mov
lcall
lds
cmp
es
jecxz
jbe
insb
fdivrl
sub
ss
push
mov
mov
fidivrl
jecxz
mov
inc
mov
rolb
inc
xchg
add
push
fdivrp
cld
std
jo
gs
xchg
dec
gs
mov
or
sub
mov
cwtl
std
jp
aaa
pop
cmp
push
stos
out
inc
cmp
fs
popf
inc
ljmp
xchg
cmp
xor
push
rcrl
out
movsb
xchg
outsl
add
add
add
jo
or
call
orl
mov
ret
sbb
mov
push
test
loop
es
sti
jbe
push
sbb
in
into
mov
xor
fisttps
inc
or
and
inc
jae
call
adc
daa
pop
xchg
lret
outsl
xorl
mov
mov
loope
clc
dec
or
jl
inc
jno
inc
mov
in
cmp
pop
mov
loopne
mov
stc
rorl
pop
sbb
aas
sbb
sub
clc
clc
repnz
sub
xchg
icebp
mov
xchg
mov
sbb
mov
mov
jle
xor
mov
stos
nop
push
and
mov
mov
jo
add
fistpl
popf
dec
mov
bound
in
jne
push
test
repz
inc
or
es
test
mov
dec
dec
cwtl
movsb
insl
test
mov
enter
adc
fs
cmp
cs
shll
cli
dec
or
push
call
or
adc
in
or
test
cmp
stos
mov
out
bound
add
cvttps2pi
in
inc
push
scas
jnp
sbb
mov
ss
testl
lret
shll
sub
dec
loopne
arpl
stos
cmc
jl
sub
out
xor
aad
xor
orl
and
and
jo
rolb
sub
aad
mov
or
pop
aaa
pusha
jg
divb
in
pop
mov
push
das
in
bound
pop
inc
push
jne
pop
sbb
and
out
out
xor
add
push
pop
jae
cmpsl
leave
stos
pop
jne
jnp
fdivl
daa
shl
ljmp
mov
stc
movsb
inc
cmp
fcoms
push
hlt
dec
sbb
outsb
fmul
add
mov
mov
cmp
cmc
adc
mov
sub
inc
lcall
and
cli
cmpsb
idiv
fwait
pop
xchg
out
sub
aaa
or
add
add
adc
std
or
or
int3
sub
dec
imul
cli
fs
or
pop
mov
mov
or
or
cmpsb
aaa
push
add
mov
cli
clc
mov
notb
nop
dec
test
add
adc
jbe
cltd
out
filds
js
push
fidivl
ja
xor
xor
aas
dec
das
stos
cs
xchg
adc
into
outsl
mov
out
jp
push
jle
xchg
in
jmp
je
aas
cmp
test
push
fcoms
pop
lret
scas
movsl
in
cmp
push
push
adc
cltd
or
xchg
adc
pushf
pop
mov
cltd
nop
fstps
push
pop
lcall
loop
fwait
push
sub
rcrb
inc
xor
insb
dec
sti
or
faddl
ret
sub
or
or
iret
mov
jecxz
sbb
jp
dec
stos
xchg
inc
iret
mov
fidivs
mov
inc
cmp
in
test
xor
sbb
or
jno
and
sub
bound
xchg
mov
pop
dec
sbb
test
fcmove
mov
loopne
xchg
jmp
adc
push
lret
addr16
add
ficompl
mov
insb
mov
fdivs
std
adc
daa
addr16
push
xchg
mov
jecxz
xchg
push
cld
push
into
nop
add
cmp
loopne
cli
mov
inc
movsb
pop
inc
test
mov
cs
es
inc
rclb
psubusb
or
and
xchg
mov
adc
outsl
sbb
lret
rorl
push
fldcw
sbb
imul
sbb
push
dec
repz
inc
or
scas
addb
lock
lock
in
sbb
inc
mov
cmp
dec
or
xor
ret
sub
cwtl
add
out
imul
cmp
jb
xor
js
xchg
push
mov
int
jnp
sub
dec
xchg
jae
pop
lods
enter
mov
adcb
pusha
mov
fwait
movsb
out
or
sub
roll
fdivrs
imul
in
pushf
dec
sub
call
push
nop
push
pop
insl
inc
faddp
lret
imul
test
jl
sbb
fdivrs
enter
syscall
push
xchg
jo
jne
jmp
jo
jb
inc
imul
jo
movsl
stc
lock
jle
pop
pop
mov
stc
push
xchg
mov
jmp
stc
add
rclb
jo
xchg
mov
xor
lea
add
push
mov
outsl
insb
loop
xchg
fidivl
aam
or
iret
xchg
hlt
fisubrl
in
jle
es
mov
kmovw
xchg
fdivl
in
loope
adc
fst
mov
arpl
or
ljmp
bound
mov
int3
aam
inc
pop
test
xchg
xchg
jl
mov
cmp
hlt
cld
aam
pop
addr16
mov
dec
pop
pop
rcr
sub
stos
xor
inc
sub
mov
sti
in
jge
inc
adc
hlt
push
mov
movsl
in
test
insl
mov
out
mov
popa
clc
mov
leave
ljmp
pop
test
pop
sbb
paddb
scas
push
jbe
dec
xor
inc
scas
adc
xchg
shr
add
ret
lcall
inc
mov
xchg
out
cmp
and
mov
lret
mov
sti
push
cmc
popa
add
imul
pop
add
jne
leave
cmp
push
test
inc
inc
add
shrb
mov
stc
mov
shrb
ljmp
or
rcl
cmpsb
insl
scas
push
inc
loop
movswl
push
fnstsw
outsl
and
cmp
pop
xor
cmpb
push
pop
push
cli
cmp
jne
lods
lods
fbstp
ds
sub
cmp
lret
stos
arpl
pop
adcl
mov
xchg
in
gs
xor
aad
cmp
xor
ds
or
lahf
orl
fildll
and
add
repnz
call
push
or
shll
and
inc
int3
pop
arpl
jg
cltd
dec
adc
dec
mov
lods
inc
sbb
or
jne
add
data16
ljmp
fwait
rcl
andl
push
icebp
mov
outsb
es
ds
add
lret
sti
je
mov
fs
add
mov
push
xchg
add
and
cmc
addr16
xor
xchg
icebp
test
adc
mov
hlt
push
aas
jmp
and
sub
and
out
mov
in
fisttpl
out
ret
gs
sahf
stos
push
aam
insb
mov
cmp
mov
mov
cmp
pop
jmp
push
push
pop
divb
add
adc
pop
xor
lods
dec
inc
cmc
mov
pop
subl
jae
test
pop
mov
shlb
mov
xchg
adc
push
andl
jne
inc
shrb
and
mov
sbb
mov
mov
insb
cmpsb
jae
xchg
pushf
fwait
push
sahf
xor
les
jecxz
hlt
or
pushw
xchg
and
daa
pop
rorb
pop
lock
jns
push
sbb
jae
jge
pop
mov
ret
push
or
outsl
subps
test
adc
mov
adc
clc
sbb
push
stos
fcomi
sub
mov
inc
lret
jnp
decb
jmp
sbb
push
aad
bound
jecxz
jl
cmpsw
nop
sbb
pop
xor
adc
mov
mov
push
andl
ja
cmpsb
push
xchg
dec
in
sti
cli
jns
sbb
subl
adc
nop
ret
and
cwtl
push
mov
push
inc
jne
xor
xor
in
data16
push
mov
mov
pop
and
inc
cmpb
cmp
ja
adc
sub
jp
mov
mov
subl
mov
shlb
push
dec
loop
lock
fidivrs
pop
test
mov
or
lds
arpl
jns
insl
fwait
inc
stos
pop
mov
xchg
scas
jne
ljmp
shll
aas
jge
add
addb
call
scas
or
lcall
mov
dec
pop
xor
lcall
ss
mov
ficoms
cmp
inc
sbb
or
adc
loop
cmp
mov
insl
cmpsb
gs
stos
sub
xor
pop
push
mov
stc
cmp
mov
mov
cmpsl
push
es
push
jp
sarl
arpl
jp
cmp
and
dec
inc
push
mov
daa
in
sub
pop
xor
das
fdivl
addr16
jbe
ficoml
mov
lcall
shlb
int3
ja
adc
outsl
push
push
in
loop
mov
and
xchg
sbb
dec
cmc
xlat
rcrl
mov
out
test
jl
mov
std
pop
mov
out
fcompl
in
push
jne
mov
int
pop
jo
dec
in
cmpsb
pop
flds
leave
xchg
pop
pop
jbe
mov
xor
or
sub
cmpsl
daa
push
push
ljmp
loopne
pop
sbb
fcoms
or
pop
mov
xlat
test
out
xor
repz
jnp
inc
mov
sub
add
xchg
adc
mov
jle
lds
les
lret
push
pop
pop
pop
xchg
mov
mov
push
lahf
aam
xor
aam
lea
dec
popa
push
cmp
out
cmp
mov
mov
mov
stc
pop
xor
add
cmp
je
mov
mov
mov
add
movl
mov
mov
mov
movl
movl
mov
mov
xor
add
jmp
movl
movl
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
xor
add
add
imul
add
mov
mov
mov
cmp
jb
mov
mov
xor
add
imul
mov
xor
add
or
mov
xor
add
mov
xor
add
mov
lea
jmp
mov
mov
xor
lea
mov
jmp
mov
mov
xor
lea
lea
xor
cmp
jne
decl
jne
mov
mov
mov
xor
mov
xor
mov
xor
mov
mov
xor
mov
mov
xor
add
pop
pop
pop
leave
ret
xor
inc
ret
push
mov
sub
mov
sbb
movl
add
push
movl
xor
mov
push
mov
or
mov
mov
xorl
xor
andl
push
mov
add
orl
mov
sub
mov
sbbl
test
movl
je
mov
adc
mov
mov
mov
sub
xor
movl
cmpl
je
cmpl
jl
jmp
push
pushl
pushl
push
pushl
pushl
push
push
call
cmpl
jne
xor
add
dec
mov
mov
dec
mov
jmp
add
adc
mov
add
mov
xor
add
add
mov
mov
add
mov
xor
xor
add
or
mov
mov
addl
jmp
inc
mov
roll
sti
jne
jecxz,pt
inc
lret
add
mov
and
mov
pop
daa
sbb
sbb
mov
popf
cmpsl
int3
mov
mov
les
pop
outsb
push
out
lcall
and
or
push
dec
push
mov
inc
inc
jmp
push
jmp
hlt
test
outsl
and
rcrl
mov
test
ret
mov
xor
and
jno
int3
ja
xchg
adc
aam
stos
aam
popa
movsl
in
cmp
or
rclb
inc
cmpsb
push
addr16
push
sbb
aad
mov
dec
popa
ret
mov
sahf
mov
faddp
adc
mov
popf
icebp
xor
outsl
cmp
arpl
xor
pusha
pop
ret
addr16
push
xor
add
push
sarb
jmp
inc
loop
inc
sbb
sahf
push
or
pop
push
test
cli
outsl
pop
and
pushf
adc
subl
ret
mov
mov
push
cltd
ficomps
push
pop
arpl
lcall
fdivl
xor
push
push
mov
test
cmp
js
popa
cmpsl
test
pop
mov
icebp
mov
mov
sbb
out
leave
and
mov
andb
lahf
and
inc
jns
repz
loopne
fcompl
mov
js
mov
and
call
dec
mov
inc
psrlq
mov
test
push
sub
testb
aaa
sbb
push
mov
test
sub
aad
scas
dec
jo
mov
adcb
sbbb
sbb
push
xchg
sub
cmp
shr
iret
jmp
xlat
inc
jp
sub
ret
stos
pop
dec
xchg
repnz
in
movsl
mov
add
das
mov
lret
dec
popa
mov
insl
lahf
lcall
rorb
sub
int
jae
std
pushl
cmp
in
mov
addr16
jecxz
movsl
pop
lret
lea
sub
dec
aas
int3
push
xlat
dec
fcmovne
ret
cmp
fwait
pop
mov
xchg
mov
mov
outsl
jo
ja
push
xchg
pop
cmpsb
out
rol
and
out
mov
arpl
xor
lret
aam
enter
inc
xlat
jbe
lcall
xchg
loope
and
push
dec
into
xchg
push
push
nop
cmp
addr16
ljmp
es
outsl
adc
dec
test
and
aam
mov
fwait
loopne
inc
jns
jg
and
xchg
lods
jno
stos
cld
inc
out
cwtl
or
ror
mov
jns
mov
aad
cld
nop
jp
das
xchg
inc
sbb
shr
push
adc
repz
fs
rcrl
fadd
out
mov
mov
imul
fldenv
mov
sub
pop
xchg
cli
sar
es
sbb
lods
pop
out
jne
in
arpl
pop
and
inc
mov
in
gs
push
mov
rep
loope
push
pushf
sub
or
ljmp
dec
or
dec
mov
fld
lret
cltd
and
in
pop
ljmp
xchg
cmp
jecxz
and
xor
leave
sahf
xor
inc
xchg
cmp
xchg
lcall
mov
iret
xlat
outsl
jnp
mov
xor
scas
push
pop
cmp
and
or
jne
jecxz
add
push
inc
jae
xor
out
jnp
push
iret
nop
test
rcl
mov
jo
cmpsl
lret
cmpsb
ds
movsb
pop
xor
mov
push
dec
push
jp
sub
add
leave
inc
cwtl
andl
test
rorb
in
gs
scas
enter
arpl
xchg
cld
movb
or
outsb
push
addr16
jge
into
in
cmp
cmp
daa
sbb
ds
outsb
repz
pushf
movsl
sbb
xor
scas
mov
inc
fisttpl
add
adc
and
push
sbb
inc
outsb
shll
insb
sar
popl
in
roll
cmp
push
mov
test
jnp
sahf
ljmp
jle
push
add
sar
xchg
minps
in
faddp
push
repnz
cmc
push
push
xchg
push
shl
mov
pop
movsl
jae
aad
inc
and
xchg
mov
pop
loope
adc
and
inc
inc
repnz
dec
add
add
and
mov
dec
jg
dec
loopne
test
stos
fwait
mov
xor
mov
mov
mov
lods
hlt
lods
lock
loope
mov
pop
int
mov
gs
push
aam
icebp
out
jnp
adcb
negb
iret
sbb
mov
xor
inc
aas
push
ret
out
jno
and
jno
jg
mov
push
sub
cmpsb
mov
out
test
repz
shlb
jge
and
pop
iret
pop
insb
ret
inc
cltd
imul
shlb
cwtl
cmp
imul
cwtl
jmp
popf
cltd
push
cltd
movsl
into
hlt
mov
adc
pusha
or
lret
sbb
in
inc
pop
or
jp
pop
or
jg
test
dec
int3
push
lods
mov
stos
int
jne
mov
dec
push
out
lret
stc
adc
sub
aam
add
mov
mov
inc
and
mov
cltd
jp
pop
jp
push
rorb
or
aaa
and
inc
push
mov
inc
stos
push
jns
enter
ror
xor
cwtl
inc
sar
movsl
ret
add
repnz
lcall
daa
push
or
icebp
and
js
adc
pop
stc
adc
sbb
sbb
push
cmp
add
xchg
sub
jo
scas
and
adc
push
icebp
and
lods
xchg
xchg
mov
in
mov
and
mov
mov
jns
add
repz
hlt
shl
pop
scas
xor
jnp
into
nop
and
jb
mov
test
repz
jg
mov
add
aad
jecxz
dec
cmp
push
pushf
fsubrs
mov
adc
or
sbb
lahf
or
add
rorb
outsb
mov
fsubp
push
jns
adc
push
jp
addr16
rorb
daa
dec
cmc
pop
inc
sub
mov
aaa
mov
mov
or
or
ljmp
test
adc
mov
lock
pop
jge
mov
dec
out
lods
cld
loop
xor
push
sbb
push
push
jb
aad
in
cmp
sbb
pop
stos
ret
mov
in
mov
jp
mov
aaa
xor
pop
mov
mov
sub
hlt
xchg
cmp
int
jb
add
cmp
cmpsl
dec
fcompl
test
xchg
xchg
and
or
stos
fcomps
mov
fdivrs
sub
testl
mov
add
sbb
push
sbb
adc
mov
cmp
jmp
xor
shrl
arpl
jne
int
push
mov
loope
out
mov
mov
aam
ret
ljmp
imul
test
mov
push
pop
pushf
sbbl
jns
js
inc
iret
cmp
outsl
xor
hlt
pop
mov
xor
es
cli
fs
roll
movsl
pop
dec
xor
es
fwait
repnz
fistps
jne
sub
or
je
or
xor
stos
cmp
sbb
xlat
cmp
or
xlat
adc
loop
sbb
add
mov
scas
push
jns
sarb
or
inc
or
movsb
stos
in
fcomps
out
mov
pop
popf
maskmovq
divl
jmp
shll
icebp
dec
pop
test
in
push
pop
pop
mov
push
das
jnp
jl
popf
inc
push
or
sbb
jmp
rolb
stos
mov
lods
sub
cs
xchg
mov
outsb
mov
mov
repz
push
xor
xchg
lea
or
jecxz
sub
je
shlb
cli
push
and
mov
call
and
aaa
sahf
xchg
lods
and
pusha
shlb
loope
scas
mov
test
ficoms
pop
push
fs
xor
ret
andl
sbb
pop
lds
or
cmp
fiadds
testb
sub
sub
lods
aam
jne
fimuls
push
adc
and
inc
mov
adc
mov
out
add
pop
jmp
sub
sub
dec
in
cmp
stc
sub
js
mov
shll
aaa
adc
leave
sub
shl
call
imul
lock
xchg
dec
mov
mov
sahf
int
or
sbb
repnz
adc
cs
js
mov
enter
cmc
mov
sub
pop
rcrl
iret
fimull
test
push
shl
sbb
add
jb
std
aas
xchg
jle
shl
xor
push
xor
stos
xor
cmc
int
scas
das
orb
xchg
rolb
sbb
or
subl
inc
hlt
sarl
pop
push
and
daa
data16
out
cmp
or
add
or
dec
std
iret
lods
aaa
dec
cli
mov
mov
sub
mov
xor
ror
add
fiadds
repnz
pushf
adc
pop
gs
push
dec
cmc
fistpll
adc
add
lods
xor
cmp
sti
daa
in
icebp
fidivrs
enter
into
pusha
movsb
add
outsl
notl
sub
mov
inc
push
pop
imul
mov
repnz
in
idivl
inc
repnz
movsl
inc
rorl
lret
adc
push
rorl
loope
int
push
js
sbb
add
loopne
mov
mov
pushf
ds
lahf
and
mov
xchg
sub
sbb
dec
dec
fcoml
lea
xchg
and
xchg
popa
sbb
loopne
inc
div
in
rclb
test
mov
cmp
cld
arpl
or
lahf
fwait
bnd
rcrb
push
push
sub
pop
xchg
sbb
mov
rcrl
bound
hlt
sbb
xor
ret
andb
jbe
xchg
icebp
add
mov
dec
ret
mov
adc
mov
lret
adc
out
pop
xchg
in
lds
fmull
xchg
and
mov
and
pop
xchg
and
rcr
add
test
sbbb
imull
lret
sti
ds
or
loop
repz
mov
xor
insb
inc
in
pop
bound
fdivrs
in
icebp
and
dec
pop
pushf
jnp
je
xchg
jbe
adc
idivb
jge
mov
test
icebp
pop
pop
rclb
xchg
cmp
cwtl
dec
dec
mov
dec
out
jb
or
sbb
sti
jmp
inc
sub
test
sti
iret
and
adc
or
loopne
in
dec
xchg
mov
loop
fwait
xchg
je
mov
hlt
in
xor
xchg
lods
push
imul
std
inc
dec
mov
jmp
lds
mov
sbb
imul
jne
push
mov
dec
xchg
rcll
push
jne
xor
lods
pop
adc
shrl
xchg
fcmovnu
cmpsb
xchg
shr
fiadds
jg
adc
push
and
shll
cmpsb
sahf
fwait
push
mov
hlt
pop
mov
dec
loop
lret
cld
jmp
xchg
dec
and
daa
lods
test
out
pop
cld
add
xchg
sub
inc
mov
out
jge
fbstp
pushl
pop
lret
repz
ja
mov
jg
mov
decb
lods
jl
or
faddl
mov
popa
mov
or
xor
imul
in
inc
pop
mov
mov
mov
out
pop
insb
xor
xor
adc
cmp
imul
ja
mov
push
push
mov
add
add
mov
aaa
pop
call
cmp
mov
subb
adc
cmp
jge
mov
in
mov
shlb
lret
push
push
jo
into
mov
sub
jge
xlat
stos
xchg
adc
sub
cmp
jp
sub
jge
mov
push
mov
into
shlb
lret
push
mov
outsl
cld
fdivl
cmp
repz
aad
insb
and
aad
adc
jbe
das
popf
dec
ret
popf
repz
xchg
push
mov
sub
out
nop
fsubl
cmc
ljmp
lcall
mov
lods
jmp
mov
add
call
cld
icebp
jp
adc
out
xchg
mov
fcoml
xchg
cmpl
adcb
js
rcr
in
das
daa
shll
push
jae
jo
inc
adc
lock
outsl
daa
inc
js
push
popf
and
dec
adc
sti
outsl
lahf
or
out
mov
dec
lahf
mov
push
sbb
ss
cli
jnp
sub
adc
push
sbb
cmpl
popf
mov
enter
xchg
dec
lds
mov
push
testl
xchg
inc
lea
mov
adc
ja
sub
dec
lds
addb
rcll
int3
sub
sub
dec
jge
mov
mov
push
push
call
cmp
jle
push
ud0
or
xlat
lea
sub
cmp
mov
inc
pop
jl
aaa
addb
jns
mov
cmp
pushf
daa
out
addl
addr16
and
cltd
mov
dec
and
or
pop
and
int3
pop
mov
pop
pop
and
loopne
mov
jo
dec
test
mov
je
orb
adc
jg
data16
int3
xorl
dec
sbb
sti
nop
or
mov
pushf
mov
push
arpl
lods
cs
xor
je
xlat
and
or
jmp
call
sbbb
cmp
dec
sti
mov
in
in
cmp
mov
xor
xchg
and
mov
mov
cltd
mov
ja
cmp
jns
ja
inc
inc
mov
shrl
pop
dec
jns
add
pop
ljmp
cld
int3
sbb
scas
in
dec
call
rolb
jns
ret
mov
and
or
outsb
gs
mov
lahf
or
pop
push
mov
jp
lds
js
lahf
lea
sub
jmp
lds
mov
stos
cmp
mov
jo
adc
push
xchg
xchg
into
scas
aam
pop
lock
out
arpl
std
add
xor
xor
dec
sti
push
lret
and
push
pop
aad
scas
push
pop
cmp
mov
stos
xchg
mov
hlt
mov
adcb
cmc
cltd
scas
xor
cmpb
pop
pop
movsb
pop
xor
test
jo,pn
nop
gs
sbb
jge
dec
xchg
lcall
stos
cmp
das
jnp
repnz
inc
rorl
or
cmp
pop
cmpsl
mov
inc
test
subl
push
jp
adcl
cmc
cmp
lahf
in
pop
lret
repnz
in
loope
rorl
or
xor
xor
repnz
dec
in
mov
std
negb
push
push
pop
aaa
jnp
and
test
cmp
insb
test
ror
and
int
cmp
sub
gs
or
lcall
int3
std
imul
cmp
scas
sbb
mov
pop
addr16
push
fdivrs
sbb
sbb
ret
sbb
sarb
lods
cmc
pop
xorb
sbb
test
std
cltd
push
lahf
jl
lds
test
mov
fwait
push
add
js
or
jno
sbb
push
lods
and
ret
sahf
inc
lret
insl
mov
jp
sbb
cmpsb
dec
ret
cli
sbb
jb
shll
push
cli
cmp
jo
pop
mov
inc
sub
xchg
repz
mov
or
lret
out
fbld
dec
cmp
xlat
mov
push
insl
popf
lret
jns
adc
orl
or
dec
push
or
jno
mov
call
scas
mov
das
mov
ljmp
xchg
fldt
fwait
outsb
dec
push
inc
sbb
out
adc
cld
test
adc
jno
add
jae
mov
inc
faddl
out
repz
into
shl
cmp
pop
sbb
outsb
aad
iret
loop
jge
pop
pop
xchg
xor
or
clc
outsb
mov
pop
jns
push
xor
lret
sub
insb
adc
adc
mov
incb
iret
xor
call
vsqrtpd
jg
into
mov
xor
and
je
fs
shll
cli
mov
repnz
cmpsb
mov
inc
dec
inc
test
pop
xchg
fs
cli
out
mov
adc
jg
rorl
mov
inc
dec
pop
mov
pusha
add
xchg
andb
mov
cltd
or
repz
aas
sub
lahf
push
aam
testl
fsubs
pop
jno
cmpb
cmp
fdivrl
push
sbb
fcompl
subl
data16
in
mov
xchg
dec
and
sbb
dec
les
cmpsl
sub
stc
ret
sbb
fiaddl
dec
mov
dec
int
xor
or
or
in
push
adc
vpcmpgtb
mov
push
inc
ljmp
mov
lret
das
scas
lcall
mov
js
scas
cmp
xor
dec
adc
jno
inc
testb
cld
adc
inc
enter
fwait
sub
loopne
dec
ljmp
aas
addl
inc
lcall
mov
das
mov
inc
in
rcrl
mov
hlt
loopne
mov
cmp
in
ret
dec
in
pushf
sub
or
mov
xor
scas
scas
test
scas
scas
dec
mov
mov
mov
rolb
mov
add
es
vfnmsubpd
push
jno
mov
inc
lret
into
dec
ja
clc
shrl
pop
insb
into
push
or
xchg
push
or
pop
dec
push
xchg
idivl
popa
add
dec
dec
test
out
sbb
fwait
aam
cwtl
icebp
xor
pop
fadds
sbb
out
repnz
insl
push
pop
cmpsb
push
sub
notl
ret
push
mov
jns
push
in
nop
cmc
dec
int
xchg
mov
sub
xchg
iret
repz
clc
mov
shll
sbbb
mov
hlt
and
xlat
adc
movsb
cltd
psrld
jge
hlt
push
xchg
mov
mov
inc
mov
jb
mov
lret
xor
dec
pop
mov
push
mov
and
add
jnp
div
fidivrs
imul
stc
in
lret
mov
sub
adc
xor
movq
inc
cs
out
jle
movsb
loope
pop
ja
iret
or
add
shlb
sub
stc
pop
xchg
je
xor
xor
sub
inc
cmp
sub
or
les
ror
xchg
enter
scas
push
aad
mov
cld
add
cmc
insl
shrl
js
jmp
fmull
cmp
sar
in
xchg
push
mov
out
shl
pusha
aas
fsts
in
lods
and
dec
push
mov
clc
sti
or
sub
pusha
cld
int
hlt
mov
mov
mov
orb
sbb
and
jp
xchg
pushl
jae
or
sub
jnp
loop
call
xchg
fnsave
cmp
mov
sar
in
jle
mov
lods
inc
call
sbb
sbb
jl
mov
jbe
sbbb
and
mov
sbb
and
fistpl
int
nop
xor
cmpsl
mov
inc
pop
xor
cli
adc
pop
lea
mov
mov
out
lcall
test
sub
dec
mov
cmpsb
mov
or
mov
xrelease
sbb
sbb
mov
jg
cltd
rolb
push
mov
fbld
add
mov
lods
ror
mov
test
fnstcw
ss
insb
out
push
jp
mov
sbb
js
sarl
dec
rcrl
jl
jmp
les
add
lcall
fcoml
inc
adc
mov
xor
dec
mov
mov
jbe
adc
sbb
xchg
std
mov
dec
xor
sbb
dec
cwtl
push
sbb
push
pop
shlb
rol
xlat
sub
xor
push
and
mov
pop
rolb
aaa
jo
jne
dec
cmp
inc
ss
pop
add
cmp
popf
xor
movsb
pop
sub
dec
fdivr
lea
jg
int3
push
punpckldq
lcall
mov
cmp
inc
lea
mov
dec
sub
mov
jge
hlt
les
pop
cmp
lea
push
xchg
out
andl
xlat
outsb
and
mov
mov
pop
inc
push
data16
pusha
mov
add
dec
jne
pop
and
loopne
ja
dec
mov
jmp
icebp
push
mov
lahf
pusha
xchg
and
adc
or
popl
leave
add
mov
dec
jb
scas
mov
out
mov
out
adc
and
std
in
dec
aas
jnp
jno
gs
lock
out
ret
ds
jle
xchg
stos
pop
pop
cs
aaa
or
sub
out
xchg
movsl
cmp
lret
xor
icebp
and
lahf
ja
xchg
mov
and
or
sub
int3
out
mov
xor
adc
xchg
pushl
loopne
jbe
rcll
test
push
lods
ret
sahf
sbb
and
test
aaa
mov
stos
stos
mov
hlt
test
jo
cmp
jmp
into
and
mov
int3
stos
into
mov
out
push
pop
sbb
lret
jae
pop
cli
mov
ret
push
cmp
mov
push
sbb
mov
lret
shlb
lret
or
pop
push
fwait
pop
es
mov
mov
mov
cmp
icebp
ret
inc
mov
iret
scas
mov
test
popa
pop
aaa
not
push
jo
fcomps
jecxz
pop
iret
mov
mov
in
mov
les
fwait
jecxz
mov
scas
push
mov
or
mov
ret
push
or
stos
mov
rclb
mov
sub
pusha
out
mov
cwtl
loop
pushf
icebp
push
mov
jne
cmpsl
lret
adc
ljmp
xor
rclb
push
sbb
add
cmp
popf
das
cmp
popf
or
mov
push
shlb
stc
mov
cs
push
aad
fwait
mov
lret
xchg
stos
jge
dec
ss
inc
and
test
add
mov
sbb
shrb
aaa
push
xchg
leave
inc
sub
in
syscall
leave
stc
aas
xchg
mov
repz
sbb
fcoms
imulb
int3
or
in
lret
fcmovnbe
outsl
fsubrs
std
cld
fwait
test
imul
fstl
enter
lods
dec
les
int3
mov
fs
cmpsb
je
fdiv
repnz
jle
adc
push
inc
pop
add
negb
inc
push
jo
lret
and
outsl
dec
shrb
sub
cmp
cmp
xlat
xchg
lcall
sbb
neg
xchg
xor
je
nop
xchg
je
loopne
push
out
sbb
dec
and
test
push
jmp
out
sarb
cmp
add
fmuls
aaa
jno
sbb
mov
loope
mov
in
nop
leave
or
loope
stc
cmpsb
aaa
push
xchg
in
pop
lea
outsb
aad
sbb
stos
addr16
adc
les
int
aas
dec
dec
lods
cmp
pop
movsb
rolb
scas
push
sbb
push
pop
mov
sub
enter
or
les
test
test
rcll
sbb
pushf
popl
sbb
stc
push
jp
xchg
dec
push
sub
inc
jecxz
stc
push
xlat
xchg
mov
jne
push
mov
jbe
or
repz
inc
xchg
push
push
or
dec
mov
inc
and
mov
jae
mov
addb
movsb
popa
or
outsb
adc
pop
mov
mov
sahf
push
adc
push
out
cmp
das
cmp
xchg
sub
adcb
int3
inc
add
xchg
jmp
sbbl
fists
cli
sub
dec
inc
jl
fwait
inc
call
cltd
orb
popa
add
mov
jmp
pop
pop
jg
fdivp
or
dec
jne
cmp
incl
xor
pop
push
jp
sahf
ljmp
ret
or
fwait
div
enter
adc
push
loop
stos
inc
fdivrl
aaa
sti
xor
ret
xlat
aad
jmp
lock
lds
cmp
push
add
adc
aam
or
dec
or
je
adc
outsb
test
out
aad
in
ja
in
outsl
daa
cmp
push
xlat
xchg
dec
pop
xchg
loop
xchg
cs
and
addr16
adc
xchg
cltd
or
adc
cmc
xchg
dec
lock
cmpsl
adc
idivl
jp
jle
jne
mov
adc
inc
xchg
mov
push
xor
mov
mov
shlb
jp
aaa
and
or
jnp
outsl
mov
mov
or
cs
inc
cmp
test
mov
inc
mov
lds
adc
in
les
popa
lds
jo
or
in
daa
or
push
xor
or
lds
jnp
mov
sysexit
sub
scas
data16
dec
mov
and
mov
and
sub
sahf
std
and
jge
cmpsl
mov
loope
popa
out
add
sbb
ds
insb
and
stos
mov
inc
dec
fildl
cmp
mov
in
mul
stos
sbb
mov
jno
jnp
cmp
mov
stos
push
popa
pop
push
sub
xchg
bnd
enter
xor
out
mov
adc
xchg
add
xchg
and
cmpsl
pop
push
inc
jmp
cs
enter
inc
orb
fcompp
mov
mov
jmp
mov
xor
aad
scas
xchg
jp
pop
lcall
inc
out
push
inc
cmp
imul
jmp
or
cmc
data16
faddl
push
xlat
push
cmpsl
mov
in
push
jno
inc
or
addr16
add
adc
addl
sub
insl
ja
inc
in
stc
mov
fnstsw
pop
pushf
add
cmp
cld
and
es
dec
dec
fisubl
int
outsl
sub
mov
or
frstor
cmp
mov
scas
push
dec
ljmp
xchg
mov
aam
and
lods
in
jl
fistpl
aas
leave
xor
push
cmp
xchg
xchg
jne
jp
cmp
push
adc
in
jb
je
inc
cltd
mov
cmpsb
inc
pop
jbe
jecxz
mov
pop
adc
mov
xlat
lahf
add
pop
movsb
push
mov
lret
cmc
leave
gs
mov
inc
data16
lds
pop
mov
cmpsl
cwtl
mov
mov
push
jno
fs
cli
repz
pcmpgtd
loop
add
xchg
mov
jae
push
dec
fs
ljmp
mov
mov
repz
enter
loopne
test
lods
out
adc
adc
push
shrb
ret
cmpsb
movsb
fsubrp
mov
adc
cmp
scas
fwait
ss
das
jae
fstpt
dec
jmp
add
or
fimull
sbb
shr
test
pop
cmp
mov
movsl
sbb
out
jno
lret
dec
in
rolb
out
imul
sbb
push
dec
mov
clc
add
fstpl
sbb
std
lahf
xchg
mov
cwtl
add
xchg
bound
inc
pop
fwait
jne
and
mov
push
xchg
push
movsb
xor
out
adc
cmpsb
dec
jecxz
push
or
and
stos
or
pop
mov
fcoml
clc
xlat
sbb
pop
mov
in
hlt
sahf
sub
mov
dec
sti
call
cs
popf
andl
jg
rcll
jo
pop
mov
ss
enter
cmp
popa
out
ljmp
dec
lods
scas
cli
sub
cmp
lahf
movsb
outsb
aaa
cmp
es
adcb
fsubrs
lahf
jo
fistpll
push
les
in
jmp
or
test
lret
push
adc
sub
inc
movsl
xchg
xor
pop
sub
std
in
pop
xchg
cmpsb
imul
mov
dec
shll
enter
add
sub
jo
dec
jns
cmp
rolb
cmpsl
xchg
cld
fdivr
icebp
inc
hlt
in
sub
shl
xlat
jo
bound
mov
cmp
mov
add
repnz
insb
fisubrl
icebp
and
cmp
jge
xchg
aas
jno
gs
fdivr
sub
fs
mov
cmp
xadd
cmp
out
loope
sbb
popf
ljmp
dec
add
cmpsl
rcl
int
mov
shl
mov
pop
mov
lock
dec
out
ficoms
ss
jmp
scas
fwait
ret
scas
mov
inc
cmp
and
sbb
dec
insl
lahf
jne
sub
icebp
push
fnstenv
push
ds
xor
pushf
push
dec
mulb
push
push
js
std
mov
dec
lret
adc
push
mov
jg
push
aad
mov
push
mov
pop
pop
daa
in
inc
xchg
test
lds
push
mov
mov
pushf
mov
cmpb
inc
fldt
adc
dec
jno
incb
ljmp
sarb
mov
mov
sbb
not
in
ds
cmp
in
push
sti
jnp
gs
loop
inc
xor
lods
pop
cld
fwait
cld
mov
adc
or
sub
cmp
rcll
mov
test
jecxz
cmp
sub
xchg
or
mov
test
in
push
push
xchg
lds
add
lods
out
mov
shl
dec
mov
mov
aaa
jmp
mov
lahf
shlb
xchg
mov
add
dec
les
mov
add
imul
push
gs
stc
dec
and
pushf
push
sub
into
stos
sub
cmc
xor
cmp
mov
mov
lcall
jge
pop
into
mov
sti
mov
in
dec
adc
sub
icebp
gs
ss
mov
test
sbb
cmp
decl
cmpsb
adc
xor
js
popf
cmpsl
sbb
push
cmp
pop
mov
test
lea
mov
fwait
push
jmp
or
mov
jg
hlt
adc
mov
push
in
pop
jne
inc
push
jbe
out
xchg
dec
ret
fs
sbb
jmp
fs
xchg
call
mov
add
and
xor
lret
mov
lea
push
cmpsb
xor
addl
add
andl
mov
inc
mov
cmpl
ja
jmp
pushl
push
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
sub
lea
movl
xor
orl
xor
movl
cmp
movl
je
andl
xor
add
inc
mov
cmpl
jg
jmp
push
push
call
cmpl
jb
mov
xor
subl
add
cmp
jne
pushl
call
mov
orl
mov
or
mov
adcl
xor
xorl
add
movl
cmp
je
pushl
orl
pushl
andl
call
dec
mov
xor
mov
adc
mov
subl
xor
adcl
add
movl
cmp
movl
je
xor
mov
mov
mov
subl
mov
movzwl
sbb
mov
add
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jb
jmp
push
push
call
jmp
mov
xor
mov
movl
cmpl
je
cmpl
jbe
jmp
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
incl
add
sbbl
mov
mov
mov
sub
mov
subl
add
mov
movl
jmp
sub
mov
mov
mov
adc
mov
andl
add
add
mov
xor
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jle
jmp
push
push
pushl
call
jmp
mov
andl
xor
incl
add
cmp
jmp
push
push
or
inc
xor
xor
mov
scas
jp
add
and
mov
mov
jmp
add
mov
pop
mov
xor
sti
mov
mov
jge
aaa
xchg
cs
test
pusha
fisttpll
jo
adc
sti
gs
out
sti
rol
jl
loop
mov
pop
xor
movsl
and
fimull
xchg
cltd
call
xchg
xor
in
jnp
mov
pop
cmp
mov
lds
inc
inc
mov
sbb
sub
xchg
or
xor
in
xor
push
mov
loopne
lods
pop
shr
inc
ret
xchg
in
pop
mov
xchg
mov
add
or
cld
in
ljmp
push
mov
or
mov
cmpsb
adc
xchg
test
push
dec
push
out
jae
rcl
xlat
pop
enter
dec
pop
ja
xchg
scas
test
inc
outsl
pop
sbb
mov
sbb
in
call
add
jnp
daa
gs
mov
mov
aaa
and
push
pop
bound
or
shll
lcall
dec
xor
or
pop
push
aaa
das
loopne
test
gs
pop
adcb
sti
xchg
push
jbe
bound
pop
or
fdivs
add
popa
push
loop
jae
imul
mov
sti
xchg
and
sbb
idivl
pop
adc
sarl
add
pop
ds
or
xor
out
cmp
sub
mov
sti
mov
lret
mov
hlt
std
jb
push
or
xchg
push
lods
adc
sahf
and
mov
lret
sti
jecxz
arpl
mov
jmp
mov
pop
push
mov
push
cmpsb
data16
mov
andl
inc
inc
xchg
mov
dec
lea
jg
ret
aas
aam
dec
cmp
jmp
jl
cmp
mov
js
test
jne
out
pop
rorl
inc
out
pop
mov
fisubrs
add
mov
mov
rclb
ds
test
ret
add
push
cmp
popa
movhps
das
cli
add
sub
inc
push
dec
sbb
ret
mov
push
adc
xor
xchg
jmp
adc
xor
jp
cwtl
loop
sbb
xchg
cwtl
or
lret
frstor
cli
cs
popa
push
pop
pop
jno
jae
outsl
jl
xor
cmc
sbb
adc
mov
sub
adc
mov
das
out
push
push
mov
scas
mov
sub
test
sbb
push
bound
iret
in
pop
leave
mov
bound
outsb
into
in
gs
loope
mov
or
adc
pop
push
lea
test
mov
cwtl
xchg
adc
frstor
push
xor
fisubs
sub
sub
fsubs
lret
jne
mov
pop
gs
cs
aaa
pop
pop
mov
pop
push
ss
insl
sub
jl
adc
ds
jo
jno
mov
ficomps
add
sbb
and
or
xchg
sub
mov
pop
push
inc
pop
mov
push
je
mov
jl
ret
je
popa
mov
test
jo
push
bound
mov
or
std
pop
fs
shl
mov
data16
ss
outsl
push
daa
cmp
xchg
and
inc
and
pop
add
cmovl
sahf
icebp
mov
dec
ljmp
bound
lock
mov
sarl
into
imul
mov
shll
xor
mov
dec
aaa
outsb
pop
orl
mov
mov
movsb
nop
push
jmp
pusha
std
jnp
xchg
lea
int
stos
fmuls
fildl
jbe
test
push
dec
mov
xor
ja
jecxz
push
mov
daa
jns
or
push
add
fwait
cld
out
and
call
adc
cltd
in
xchg
rcr
jge
movsl
cmp
mov
aam
xchg
mov
ja
test
jl
fsin
jne
and
rcr
xchg
push
inc
fidivrl
orb
aam
rcr
inc
pop
ss
mov
or
repz
xchg
bound
mov
jge
cmpsl
hlt
adc
lods
or
outsb
jo
and
imul
xchg
cmp
popf
pop
xor
pop
sbb
pusha
pop
repz
aam
ljmp
mov
aad
jae
jmp
cmp
add
xorl
cmpsb
mov
arpl
mov
es
cli
aas
cwtl
mov
lcall
out
sbb
pusha
dec
mov
jns
xchg
cld
shlb
outsl
add
stc
jge
push
js
out
pop
hlt
jecxz
mov
lret
xor
sbb
jmp
mov
out
pop
push
cmp
jne
popw
add
mov
adc
js
pushf
pop
lcall
push
sub
lds
push
test
add
push
enter
out
loop
and
or
movsl
rolb
call
mov
enter
lahf
mov
daa
movsb
sarb
jno
aam
jne
test
and
and
pop
pusha
or
xchg
push
test
inc
scas
inc
loope
jo
int
or
mov
lret
lds
hlt
lds
mov
sbb
mov
add
inc
imul
scas
ljmp
popl
mov
out
push
dec
ljmp
cmp
orb
push
loope
push
testl
dec
in
mov
mov
jl
or
popa
jge
or
xchg
nop
or
xor
mov
pop
cmp
or
stos
cwtl
test
push
inc
clc
dec
out
cmc
dec
pop
sub
sbb
shrl
dec
add
ja
fbld
push
push
ss
loope
mov
int
or
es
mov
lahf
add
shrl
lret
add
jg
inc
dec
enter
push
add
pop
cmpsb
mov
out
sbb
sbb
add
dec
xor
cmpsl
repnz
sahf
fwait
das
stc
adc
sub
sbb
mov
std
add
int
inc
out
leave
pop
lods
ja
mov
cmp
jne
jmp
mov
movsl
movsb
pusha
cld
insl
dec
mov
or
inc
ror
mov
lcall
pop
lret
cmp
movsb
in
std
sbbl
pop
cmp
test
push
test
lcall
out
dec
fwait
jno
icebp
int3
mov
lret
ljmp
mov
dec
std
mov
push
jne
xor
lea
or
les
fidivl
sbb
enter
aad
pop
dec
cmp
cwtl
mov
dec
daa
dec
in
dec
adc
call
loopne
or
push
imul
and
sbb
lret
xorl
loopne
add
nop/reserved
cltd
sbb
xchg
stc
fwait
pop
ret
test
pop
test
xchg
mov
in
xor
pop
push
int3
inc
out
shrl
frstor
aam
jbe
jae
mov
inc
pop
and
dec
test
enter
mov
std
mov
in
adc
cltd
popl
and
outsb
push
outsb
xchg
shlb
insb
sbb
shlb
es
xchg
xchg
adc
fidivs
hlt
mov
lret
mov
add
das
jl
push
xchg
sbb
in
arpl
in
mov
mov
sub
dec
sbb
hlt
imul
push
cmp
add
stos
cmp
mov
sub
mov
push
lret
jmp
xlat
inc
sahf
jo
jl
xchg
cmp
jg
insb
pop
fbld
xchg
adc
aam
adc
inc
and
lret
and
jmp
das
ret
adc
lcall
mov
jg
pop
jnp
ret
in
test
incb
rcrl
cwtl
inc
fxch
mov
xchg
jecxz
or
sub
cli
std
stos
adc
push
jbe
push
out
sub
or
pop
sti
inc
lea
mov
or
push
lcall
into
dec
ds
mov
stos
mov
stc
out
mov
dec
inc
xlat
mov
cmp
or
or
and
or
xchg
cltd
mov
cmp
mov
outsb
loop
push
cwtl
mov
rsqrtps
push
push
and
xchg
sti
xor
insl
sbb
out
push
rclb
mov
in
jns
dec
ret
int3
cs
dec
mov
adc
mov
jge
outsl
daa
scas
insb
repnz
dec
pop
mov
sub
les
negb
insb
xchg
addl
fnstsw
shrl
data16
and
scas
or
aam
dec
vcvttpd2dqx
sbb
mov
call
and
nop
push
sbb
or
clc
fnstenv
lods
mov
imul
jne
cwtl
pusha
push
mov
jb
cmpsl
jae
xor
sbb
andb
inc
cmp
into
cmp
clc
jnp
pop
mov
out
mov
outsb
rolb
daa
lds
cmp
sbb
mov
roll
enter
mov
mov
fnstsw
fidivrl
push
imul
loop
push
int
pushf
and
push
add
push
pop
xorl
mov
sub
mov
pop
xlat
dec
push
rolb
pop
repnz
imul
in
fnstenv
add
in
dec
mov
jle
add
mov
cld
gs
sbb
mov
add
jg
mov
sbb
in
in
adc
stc
pushf
fsubrs
push
in
roll
cmpsb
repnz
scas
mov
xchg
ljmp
jnp
ret
outsl
sbb
notb
repnz
fnstenv
sub
add
push
mov
aaa
popf
scas
push
or
repz
dec
jg
mov
gs
jbe
xor
sti
sub
into
cmpsb
dec
daa
fcompl
adc
xchg
push
ljmp
xchg
add
imull
cmp
mov
jb
movl
mov
cltd
andb
and
repnz
jnp
pop
out
sub
movsl
mov
mov
jno
jb
sbb
rclb
das
push
or
sbb
add
inc
mov
lret
xchg
pop
inc
fwait
mov
xor
addr16
pop
pop
xor
aas
cmp
in
addr16
addb
add
xor
pop
xor
and
inc
mov
add
add
das
and
sarl
fsts
in
pusha
or
enter
gs
outsl
cmp
jnp
push
idivb
dec
and
int3
push
iret
rcl
les
fstpt
pop
mov
sub
sbb
popf
xor
or
mov
adc
sbb
mov
xor
jg
dec
lahf
xlat
cmpsb
scas
sub
in
xchg
nop
out
in
test
or
aad
jbe
lock
ret
sbb
jg
lret
adc
shl
cmp
aas
sbb
pop
lahf
enter
cmp
lods
adc
and
ficompl
data16
and
emms
scas
pop
nop
lahf
hlt
into
or
or
or
cmp
jle
fildl
sbb
test
jge
push
daa
pop
das
jg
cwtl
fwait
lods
sbb
repz
jno
mov
mov
mov
mov
pushf
pop
repnz
cmp
ljmp
pop
loopne
xchg
xor
jg
fsubr
sub
ds
sbb
mov
iret
jnp
and
sbb
and
mov
or
jae
add
push
push
mov
sub
lock
outsl
dec
hlt
lahf
out
push
xchg
mov
inc
add
or
ret
pop
sahf
push
push
sbb
mov
inc
mov
mov
subb
and
dec
test
adc
jle
lds
and
fcomps
fsts
add
gs
inc
xor
fnstenv
push
mov
fsubrl
dec
mov
stos
idivb
mov
jo
popa
or
dec
adc
push
aam
jle
je
xor
inc
jbe
sub
out
aam
mov
je
xor
cmp
push
jne
push
adc
movsl
xor
or
inc
stos
loop
push
sbb
es
and
movsb
cmp
dec
push
stos
stos
add
aam
xchg
or
ds
hlt
add
mov
or
ja
out
jbe
fdiv
mov
cmc
push
movb
mov
and
adc
outsl
fisubrs
cltd
sub
mov
inc
shl
xor
push
cmp
mov
decl
mov
into
dec
xchg
adc
loopne
ret
fcoms
xlat
sub
pop
icebp
pushf
into
mov
xor
fidivrs
cwtl
loope
sbb
xchg
jle
sub
pusha
aaa
jne
loopne
mov
sub
mov
jo
stos
jb
push
mov
jmp
popa
jno
out
cmp
ror
xchg
cli
stos
mov
jl
fldenv
pop
fcomps
fsubr
push
xor
xorb
adc
cltd
aad
or
fildll
dec
repnz
xchg
jbe
loop
or
sahf
sar
mov
xor
mov
jnp
sub
or
and
sti
sbb
sub
jmp
pushf
cwtl
sub
cmp
sbb
sub
push
add
cmpsl
jno
jnp
das
sbb
in
pushf
lret
in
jns
ja
dec
add
xor
cld
add
mov
imul
xchg
adc
ljmp
icebp
outsb
inc
out
sub
mov
out
adc
sub
call
mov
cmp
stos
int
jg
fidivrs
cmpsb
cltd
popf
add
arpl
mov
mov
lret
cmp
sbb
insb
mov
jl
push
push
jle
mov
or
int3
in
pop
cmp
mov
dec
xor
lea
or
add
stc
nop
fidivl
sbb
pcmpgtb
push
xor
loop
jae
xchg
sti
jae
daa
cmp
xchg
xor
xchg
aam
adc
push
cmpl
pop
sbb
sbb
mov
sub
cmp
aas
adc
xchg
sbb
cmp
movsl
xchg
outsb
loopne
add
imul
dec
pop
lcall
sbb
mov
stos
add
fwait
push
or
sbb
scas
jl
in
adc
sti
push
xor
pop
push
pusha
gs
pop
mov
adc
xchg
jb
xchg
push
lods
orl
std
xchg
incb
aas
push
sti
cmp
mov
fidivs
mov
mov
shrl
sub
jo
xor
mov
aas
lods
aam
dec
or
pop
cld
push
xor
ret
sbb
mov
cmpsb
pop
xchg
inc
pop
fs
sbb
fwait
movsl
jo
push
push
les
repz
push
cmp
sub
mov
hlt
lods
inc
sub
aad
fldl
sub
pop
mov
sbb
stos
iret
sub
pop
flds
add
enter
andb
test
aam
jb
lret
orl
mov
fidivs
jns
in
mov
rcl
repz
mov
push
leave
popf
ret
call
movsb
mov
pop
mov
xlat
ds
jp
andnps
out
pusha
stos
lods
push
push
adc
shl
dec
movsb
imul
adc
pop
xchg
mov
jb
jo
add
testb
lods
div
lahf
jae
and
push
xchg
xor
daa
movsb
fsubp
stc
inc
xchg
pop
push
ss
movl
pop
inc
arpl
and
mov
lahf
out
jno
cwtl
dec
lahf
dec
lods
insb
ljmpw
idiv
sbb
imul
cld
subb
fwait
fs
xor
sub
cmc
test
mov
das
sub
add
dec
inc
cmovl
dec
fs
and
aaa
xor
xchg
into
out
scas
bound
loope
mov
add
ljmp
dec
push
fcompl
inc
inc
shl
sub
dec
test
cld
aas
xchg
stos
push
xor
sbb
xchg
repnz
dec
cmove
arpl
dec
popf
subl
pop
mov
lea
inc
mov
pop
mov
cld
push
xor
and
pushl
jge
stos
dec
int3
hlt
bound
xchg
int3
gs
inc
pop
orb
mov
dec
jmp
stos
mov
mov
push
ficoms
pushw
pushf
aaa
out
repz
cmp
rolb
mov
mov
mov
dec
fistpl
pop
cmp
fwait
pop
add
push
fsubs
dec
xchg
in
lahf
or
cmpsl
or
ret
mov
and
loop
push
sahf
test
sbb
inc
jns
out
mov
ret
js
adc
repnz
jmp
adc
ret
insb
push
mov
mov
xchg
lods
ret
es
dec
popf
mov
out
repnz
sti
sbb
jl
test
mov
pop
jns
cmp
popf
mov
sub
xchg
loopne
subl
add
leave
fsubs
mov
sub
popa
adc
push
xchg
inc
sbb
scas
xor
adc
shll
scas
in
aam
xchg
cltd
sti
das
repz
in
lret
in
fldt
dec
xorl
iret
gs
pop
cmc
inc
ja
nop
jnp
insb
lret
pusha
fstl
pushf
and
add
add
or
cmp
in
ffreep
add
jmp
inc
loop
or
ret
aaa
jb
pop
ds
mov
pop
ret
mov
inc
xchg
and
cli
pushf
aad
in
jp
cmp
aaa
arpl
fildll
mov
and
out
xchg
loop
int3
aam
lods
daa
xor
orl
shll
dec
pop
jb
pop
xchg
push
push
fbld
dec
out
in
push
incl
and
or
push
or
add
cmp
xchg
sub
je
adc
jl
add
imul
lret
in
xchg
imul
pushf
imul
aas
inc
ds
xor
aam
push
lret
test
outsl
insl
inc
ljmp
dec
out
outsl
lahf
mov
push
div
lahf
cmp
cmpsb
out
sub
cmpsl
jbe
imul
fwait
dec
mov
fbld
or
loop
fwait
cltd
fcomps
lcall
pop
cmpsb
lret
bound
cmp
xor
dec
repz
stc
mov
test
or
lret
xor
cld
filds
cltd
sar
rorb
add
jle
cmpsb
mov
ret
shll
push
and
rep
repz
sbb
xchg
and
mov
inc
je
fs
enter
dec
test
jp
sti
subl
mov
aas
cmp
mov
bound
mov
js
aad
mov
test
mov
stc
sti
or
loopne
xchg
lods
cwtl
or
jge
push
cmpsb
or
enter
jg
xor
sub
dec
out
push
sbb
mov
cmp
xchg
imul
mull
dec
jecxz
imul
mov
sub
cmpsl
cmpsl
mov
sub
xchg
in
inc
faddp
decl
xor
bound
gs
in
sbb
inc
dec
outsb
add
test
dec
push
stos
mov
add
shll
adc
aas
cmp
add
and
in
inc
lock
ret
pop
ss
inc
dec
std
leavew
enter
test
adc
popa
mov
cs
sbbb
ja
repz
adc
xchg
sbb
push
cs
push
es
sar
arpl
push
and
sti
loopne
push
sar
rorl
add
fisubs
push
iret
in
push
icebp
mov
cmp
int3
mov
insb
addr16
add
xchg
sbbb
jbe
fcmovnbe
jnp
cld
lcall
mov
outsb
inc
out
rcl
mov
push
jge
mov
lcall
cmp
pop
inc
aas
das
cs
xchg
out
mov
push
mov
out
jmp
adc
in
pushf
xchg
jp
add
sbb
pop
push
push
mov
mov
pop
cli
insb
ret
aas
sbb
and
jg
jne
jb
in
xor
pushf
lret
or
adc
insl
hlt
adc
xchg
inc
rcll
aam
pop
pop
jo
push
xor
testb
shrl
xor
jp
and
fcmovbe
aam
rolb
pop
into
shrl
mov
pop
adc
pop
cwtl
movsl
outsb
dec
mov
jnp
jmp
xchg
aas
into
sub
xchg
pop
jle
push
imul
push
lods
ror
sub
mov
iret
hlt
mov
jae
add
lret
movsb
in
push
fidivrl
add
cli
and
pop
lock
in
lods
xorb
mov
cmp
daa
add
int
aas
sub
adc
je
ljmp
ror
clc
imul
adc
xor
and
call
test
or
dec
lret
sub
mov
shrb
inc
xor
fisubrs
push
mov
fs
rorl
test
cmpsb
shr
add
xor
arpl
gs
or
shrb
and
jecxz
or
cwtl
jle
movswl
xor
aaa
imul
cmp
jge
arpl
out
sbbb
sub
mov
lds
leave
in
lret
jmp
push
aad
andl
out
aas
dec
push
pop
pop
hlt
insb
mov
fists
fisubs
test
pop
call
mov
loop
inc
clc
roll
add
add
pop
mov
pop
adc
nop
cmp
sub
lods
lods
sub
jmp
or
loop
pop
iret
popa
mov
outsl
xchg
out
std
std
insl
ret
fcomps
mov
clc
jnp
inc
mov
xor
jmp
sbb
fs
jbe
mov
adc
and
or
sti
xchg
adc
dec
add
sahf
pop
mov
test
mov
jp
inc
ret
nop
mov
lcall
roll
xchg
addb
dec
mov
xor
insl
adc
pop
stos
add
push
inc
xchg
ficoms
cmc
mov
push
adc
addl
cmp
add
fs
bound
lea
int3
mov
adc
mov
fadd
dec
xchg
xor
pop
pop
jae
or
daa
sub
daa
jle
movsb
adc
push
insl
mov
repnz
addr16
ret
mov
fimuls
into
pop
and
push
xchg
cmpsb
sbb
inc
sub
pop
adc
mov
das
hlt
fisubl
xchg
insb
fcmovne
adc
out
int3
mov
push
dec
sbb
push
mov
jbe
pushf
push
sbb
mov
jo
pop
and
dec
outsl
or
cmc
pop
imul
lock
sbb
iret
fldenv
jns
mov
mov
jmp
xor
and
pop
imul
cltd
inc
clc
add
popa
mov
sub
je
xor
adc
pushf
sbb
test
xchg
sarl
jge
pop
cmp
push
in
or
and
gs
dec
scas
xchg
popa
into
dec
adc
mov
add
decb
xor
jl
mov
stos
enter
test
mov
pop
movsb
push
xor
and
stos
nop
cli
rol
lret
mov
outsl
dec
test
or
xlat
in
sbb
addb
cmc
js
lahf
hlt
push
js
push
xor
lcall
stc
cmc
mov
imul
mov
lea
inc
bound
pop
inc
cld
adc
mov
jns
mov
imul
test
jecxz
pop
lods
and
inc
ja
shll
push
ljmp
sbb
loop
lret
and
loop
mov
or
ret
cmp
movsl
mov
jle
in
adc
pop
mov
mov
mov
jl
scas
pop
int
sub
dec
push
das
out
cmpsl
icebp
mov
pop
adc
pop
sub
xor
jo
push
fsubrl
mov
add
rolb
pop
in
sub
enter
xor
sahf
cmc
das
bound
inc
push
gs
js
pop
xchg
jb
cmpsb
loopne
mov
jb
jl
sub
mov
lea
xchg
std
call
in
adc
fldl
sub
arpl
dec
mov
iret
or
add
mov
sub
outsb
xorl
cltd
jecxz
jge
mov
fdivr
pop
lock
stc
sbb
inc
ds
xor
call
add
jnp
inc
scas
stos
pop
arpl
jl
push
mov
aaa
mov
icebp
les
pop
stos
adc
movd
sub
jge
dec
push
push
or
pop
add
loop
mov
mov
xchg
adc
aas
orb
pop
cmp
lcall
adc
xor
bound
cs
insl
jmp
imulb
cmp
cmp
jle
adc
movsl
test
out
mov
pop
cmpl
int3
adc
xchg
pop
pop
cmp
jl
cmp
std
and
cmpsl
lock
ret
mov
push
fisttpl
shrl
jp
fistpll
jbe
sbb
sbb
dec
pop
stos
imul
inc
sbb
mov
and
xchg
xchg
and
or
cmpsb
rorl
ror
std
aad
sub
xchg
dec
xor
mov
pop
sub
lock
xchg
sub
bound
aam
aam
clc
cmp
xor
popf
out
cmp
repz
imul
out
fidivrl
pop
cmc
mov
dec
fcmovne
popf
jo
cmpsl
pusha
sbb
decl
lods
lahf
mov
shlb
inc
ret
aam
dec
fdivrs
mov
out
pop
dec
mov
push
mov
cmpsl
ds
mov
mov
gs
rcl
idivb
mov
incb
inc
or
mov
pop
sbb
adc
leave
jle
repz
mov
cmp
jg
dec
mov
xchg
cmpb
pop
or
jno
mov
andb
sub
movsl
mov
sbb
jns
insl
add
mov
adc
repnz
mov
lcall
pop
dec
pop
aad
jg
xchg
scas
xor
fs
xchg
pop
xorb
xor
les
dec
add
int3
sahf
pop
xchg
lret
pop
mov
adc
stos
mov
jl
mov
aas
fbstp
aas
call
je
mov
jbe
mov
shlb
cli
test
xchg
js
in
iret
lds
ret
movsb
pop
sbb
sbb
sub
sahf
push
ss
les
dec
cld
int
add
stc
pop
and
push
lret
sbb
faddl
lret
dec
or
sti
out
daa
lods
cmp
or
jno
lcall
in
aaa
fildll
cmpsl
lcall
les
push
jg
mov
sub
xor
pop
mov
je
cs
adc
and
ret
cmp
ret
xchg
jne
cltd
push
shrl
cwtl
xor
pop
cli
and
sbb
adc
dec
fdivrs
pop
ret
cmp
sub
cltd
sbb
dec
mov
or
push
insl
cltd
mov
stos
mov
push
and
mov
cld
pop
cmp
push
pop
xchg
jns
aam
and
push
ds
mov
outsb
test
jns
out
adc
pop
incb
pop
cmp
mov
in
adc
jo
inc
loopne
inc
mov
hlt
daa
jmp
arpl
lods
cmp
cmp
int3
subb
fcomi
movsl
nop
adc
jo
adc
std
or
in
popa
cwtl
daa
and
add
adc
xchg
mov
jae
jl
sub
push
mov
mov
call
lret
movsl
mov
jmp
fisubs
cmp
lds
stc
fistpl
push
shrl
addr16
cmp
cmp
sub
dec
fsts
aaa
adc
jnp
test
push
adc
mov
add
cmp
xor
subl
pop
cmp
sbb
xor
movsb
movsb
ja
test
insl
xor
mull
pop
adcb
push
int3
imul
pop
enter
insl
test
sub
xor
mov
sbb
daa
icebp
ja
xchg
jg
mov
and
inc
xor
popa
stc
lods
jl
cmp
add
sub
push
das
cmp
ss
mov
loopne
bnd
push
mov
adc
out
pop
in
fisttpll
fmuls
push
lds
jl
dec
and
cld
sub
into
jne
adc
aas
push
lods
dec
dec
rcrb
mov
data16
mov
pop
push
test
shl
xchg
das
mov
dec
arpl
xchg
and
fcoms
sub
jp
push
addr16
cmp
jmp
push
icebp
jne
mov
sub
push
and
fisttpll
mov
add
fcompl
cmp
inc
stos
xor
push
xor
push
xor
jne
clc
mov
pop
pop
mov
cli
cmp
fcom
hlt
ret
mov
loope
xor
mov
pop
cmp
hlt
call
inc
aaa
pusha
pusha
inc
ljmp
pushf
stos
shr
insl
xchg
ds
mov
lret
mov
mov
dec
add
cmp
repnz
adc
cli
adc
add
jmp
mov
sbb
lods
mov
fadds
jno
mov
shll
ret
dec
mov
mov
dec
scas
ljmp
mov
cltd
push
push
insb
and
sahf
push
xor
mov
jb
scas
rorl
shll
rolb
add
aad
mov
loop
loope
xchg
bound
ss
sub
scas
shr
add
insb
lods
cmpsl
jg
cli
pop
xchg
dec
lods
lcall
pop
xchg
mov
jb
stos
icebp
mov
xor
push
es
add
mov
sbb
lret
jo
xor
mov
inc
cmp
stos
jg
mov
xchg
xor
jge
and
icebp
jns
es
adc
addr16
add
sahf
and
movsl
push
sbb
das
test
out
sub
dec
and
arpl
push
or
adc
addr16
dec
fwait
in
mov
out
xchg
ss
movsl
cmpsl
xchg
emms
xchg
push
push
fists
ror
fsts
lret
xchg
andb
aaa
push
ds
lahf
je
jmp
mov
mov
xor
add
cmp
mov
je
mov
xor
add
cmp
je
lea
push
pushl
pushl
call
mov
mov
xor
add
cmp
je
mov
movzwl
mov
mov
mov
jmp
mov
xor
lea
jmp
mov
xor
add
jmp
mov
add
mov
mov
test
jmp
js
jno
arpl
test
dec
cmpl
pop
jp
test
fbld
inc
dec
jnp
cmp
jns
pop
xlat
jecxz
dec
js
lds
pop
lcall
adc
push
nop
sti
jae
inc
and
mov
lds
pop
xor
jbe
or
cmp
ret
push
scas
push
inc
into
add
mov
cltd
lcall
sbb
cltd
ljmp
and
rep
mov
mov
fs
cmc
aaa
pop
divb
sbb
test
enter
cmpsb
or
movsb
dec
pop
or
jl
lea
sti
mov
fidivrs
sti
lahf
js
fsubrl
rcr
scas
mov
sbb
jae,pt
sti
mov
pop
shll
add
jne
gs
sub
jae
jecxz
ror
and
mov
rclb
movsb
pop
movsl
xchg
addr16
sub
imul
push
daa
dec
sbb
outsb
fidivrs
or
ljmp
out
ret
notb
mov
push
in
inc
jns
loopne
push
pop
and
mov
inc
in
xchg
rcrl
and
jo
and
test
sbb
inc
push
pusha
arpl
pop
loop
hlt
mov
mov
ret
jne
push
bound
stos
addr16
fnsave
jecxz
dec
mov
mov
pop
pop
lahf
ret
xchg
shrb
addl
sbbb
je
dec
jns
in
xchg
xchg
les
out
inc
dec
or
add
movsb
je
mov
ljmp
cmc
jae
jle
imul
pop
or
test
sub
jmp
shl
imul
daa
fmull
out
dec
fbstp
pop
adc
jge
add
fdivp
test
daa
ret
mov
fcompl
mov
jnp
cmp
or
mov
fcoml
lcall
popf
cmp
dec
test
jae
in
inc
adc
jne
xchg
mov
add
outsl
aam
adc
out
cmp
dec
sbb
xor
pusha
mov
inc
in
ret
clc
adc
xor
stos
stc
mov
add
shll
inc
push
pop
push
jbe
shl
imul
loop
push
int
and
or
jecxz
jl
orb
mov
mov
inc
subl
jl
cmp
cmpsb
lods
sub
mov
mov
cmpsb
pusha
inc
and
idivb
add
cld
outsb
notb
pop
fadds
fistl
inc
sbb
popa
add
mov
jle
and
and
and
add
sub
test
psubw
int
aad
aaa
push
xchg
mov
cmp
stos
mov
fiadds
fwait
test
outsl
mov
xchg
push
icebp
test
or
rcrl
jg
xor
or
adc
loopne
cmp
stc
mov
pushf
push
std
jno
sbb
fnstcw
jmp
mov
dec
jl
jb
dec
mov
int
sahf
and
cld
mov
out
ret
jecxz
fistl
adc
cmp
jae
lock
pop
inc
jo
mov
sub
adc
shll
movsb
aas
adc
xchg
std
je
xchg
cmp
icebp
pop
mov
ret
ja
inc
hlt
push
mov
imul
out
push
in
push
lock
inc
repz
mov
addl
push
aas
jbe
int
les
je
add
xchg
mov
dec
pop
jne
cmpsb
cmp
sub
call
mov
and
movsb
je
hlt
xchg
idivb
fcmovnb
js
push
mov
mov
rolb
leave
adcl
das
add
scas
or
int
and
mov
sub
shrl
sti
les
push
cwtl
push
bound
push
in
adc
jge
sbb
push
xor
jg
rcll
or
sbb
fwait
xchg
adc
adc
sub
out
outsb
insb
inc
sub
outsb
pop
cmp
push
cld
mov
aad
and
pop
xchg
xor
lods
div
xchg
mov
cld
cmpsl
fsubp
test
rcr
rclb
scas
shlb
mov
pop
stc
pop
xchg
clc
mov
rolb
add
popf
jge
xchg
dec
pusha
in
std
cmc
repz
mov
add
addr16
jle
dec
rcll
cmp
fcoml
mov
mov
xor
call
iret
idivb
push
pop
mov
pop
sub
fucomi
lods
ret
mov
mov
push
mov
inc
lds
inc
aas
aad
add
dec
add
and
mov
add
dec
int3
mov
lret
or
pushf
mov
test
leave
mov
clc
leave
out
hlt
insl
jae
push
and
out
sub
mov
mov
call
sbb
cs
roll
rcl
enter
push
xchg
aad
shrl
add
and
xchg
pop
pop
cmpsb
ret
jns
in
xlat
lahf
rorb
cmc
inc
inc
inc
sub
lods
xor
aad
cmp
push
push
repnz
pop
out
xlat
ljmp
push
mov
ss
movsl
scas
or
sub
scas
fsubs
and
lret
les
icebp
mov
div
inc
mov
pop
sub
rorl
jp
sub
xor
stc
jbe
xchg
lahf
mov
jecxz
or
xchg
mov
iret
cmpsl
sub
pop
cwtl
mov
out
jne
enter
push
hlt
hlt
push
pop
gs
adc
mov
push
cmp
repz
push
sub
or
icebp
jl
mov
mov
imul
mov
push
fisttps
xchg
lahf
test
cmp
inc
int3
outsb
mov
lcall
enter
js
js
mov
pop
adc
cmp
arpl
inc
dec
sub
xchg
lcall
cs
lock
daa
sbb
movsb
js
movsb
addr16
stos
mov
or
mov
or
dec
inc
fcmovnbe
xchg
mov
mov
adc
push
mov
dec
stos
push
mov
in
jno
add
push
es
adc
xchg
outsl
cwtl
cwtl
dec
test
imul
mov
mov
mov
aad
jl
test
cmpsb
cmc
mov
les
jb
rcrb
add
mov
push
jns
test
int3
loopne
daa
mov
push
aaa
out
scas
call
adc
mov
leave
js
inc
xor
lahf
out
inc
jns
and
cmc
xchg
push
xchg
cmpsb
pop
mov
mov
cmp
xlat
cmpsl
mov
cltd
or
pop
pop
fsubl
cmp
sbb
or
das
sarl
and
pop
inc
sbb
lcall
ds
add
fildl
fadds
jecxz
or
popf
test
arpl
nop
mov
movl
sbb
cmc
push
outsb
mov
push
xor
inc
ljmp
mov
mov
or
sub
es
or
scas
inc
lcall
imul
sub
popa
cmp
fisubrs
scas
and
cmpsb
mov
in
cmpsl
repz
fadd
push
cmpb
int
lahf
add
mov
in
jne
sbb
es
jb
das
loope
nop
adc
js
loop
ja
jbe
jmp
in
or
and
adc
sbbb
push
cltd
xor
or
dec
jno
sub
xor
into
gs
mov
mov
mov
adc
pop
fst
stc
cmp
cld
mov
jne
jle
lret
dec
add
mov
or
int
or
icebp
aaa
mov
in
scas
ret
sbb
push
cmp
lahf
pop
mov
mov
mov
mov
call
cs
mov
cwtl
jg
jnp
mov
repz
loop
pop
adc
sbb
and
icebp
les
stos
aas
jmp
push
mov
mov
aam
popa
data16
aam
or
rcl
bound
scas
gs
inc
aad
xchg
mov
cmp
mov
jg
and
pop
outsb
dec
nop
outsb
nop
adc
xchg
js
jge
jne
scas
shll
inc
fwait
les
lcall
jns
mov
dec
pushf
fdivs
call
xor
or
iret
push
imul
mov
aaa
sahf
ds
mov
inc
inc
and
addr16
ret
inc
dec
xor
or
hlt
sub
sti
and
sub
pop
xlat
pop
dec
dec
fimuls
clc
and
fildll
imul
push
mull
lcall
ret
xchg
push
jmp
sbbb
inc
adc
mov
xor
push
in
or
jmp
psubw
jno
sub
cmp
imul
fisttpll
lods
test
nop
push
test
filds
add
jmp
and
push
icebp
test
mov
fdivs
sub
ds
divl
hlt
jg
mov
inc
ja
adc
push
ficoms
inc
inc
loop
addr16
ja
outsb
lods
xchg
cmpsb
dec
jmp
mov
and
push
xchg
scas
mov
sbb
inc
out
fs
sbb
add
cmp
sbbl
mov
pop
das
sub
dec
mov
jae
nop
pop
push
sbb
jg
xor
int
loop
push
xchg
call
inc
mov
loop
rorl
sbb
jg
and
add
ret
cltd
jl
jne
inc
test
roll
xor
cmp
and
fdiv
jl
mov
jns
xchg
and
in
lock
nop
inc
lea
fwait
push
test
in
adc
push
cmpsl
sbb
mov
pop
scas
jno
out
fldt
lret
pop
pop
xchg
inc
push
ss
scas
push
cmpsl
sbb
rcll
ss
addr16
xchg
or
sub
ret
imul
xchg
inc
xor
pop
xchg
push
aam
mov
or
mov
cmpsb
es
fidivl
mov
mov
sub
fists
insl
loop
push
pushf
scas
push
xor
push
ficompl
lcall
jbe
iret
outsb
cmp
sub
loopne
aaa
lds
jge
mov
pop
ds
mov
xchg
sti
pop
mov
loop
cmpsb
cli
and
lret
nop
xchg
pop
and
mov
fsubrs
push
in
pushf
dec
sbb
ljmp
rolb
repz
sbb
fstpl
dec
jmp
insb
mov
shr
in
loop
into
mov
lret
inc
sahf
pop
pop
aas
mov
mov
add
jne
dec
xchg
stc
mov
adcl
mov
sub
mov
out
inc
mov
cs
mov
sbb
inc
scas
jg
xchg
jg
repz
xchg
ljmp
cmpsb
xchg
test
ljmp
pop
loopne
fsubp
mov
ret
xchg
push
push
pop
push
lock
andl
fistpll
sbb
push
addr16
ret
test
test
sbb
sbb
int
xor
add
push
push
sub
jns
ficompl
jle
pushf
mov
sbb
mov
int3
add
mov
stos
enter
mov
xor
repz
lods
in
cmc
mov
shll
and
xchg
sti
rcl
leave
sub
xor
rolb
mov
stc
stos
or
and
push
pop
xchg
lret
or
cltd
mov
js
std
dec
cmp
test
jmp
pop
test
ds
dec
lods
lods
inc
pop
cmpsb
inc
imul
in
pop
cmpsl
pop
movb
cli
push
dec
negb
push
and
mov
sub
adcl
adc
test
in
push
aam
repz
adc
push
aas
mov
jb
mov
rorl
sti
addb
jbe
cld
repnz
pop
das
dec
loope
mov
or
add
mov
adc
dec
mov
daa
cmpsb
cltd
mov
aas
pop
push
xor
push
jg
pop
stos
adc
add
xlat
sbb
mov
mov
jbe
shl
or
sbb
lea
lahf
push
push
ret
push
mov
je
andb
dec
pop
pop
pop
mov
add
stos
mov
cltd
and
sti
repnz
cmpsb
pop
push
xor
and
adc
aas
xor
sbb
sub
sub
xchg
mov
fimull
cmpl
sbb
dec
xchg
data16
add
dec
push
out
jbe
or
push
xchg
push
jae
pop
cmpl
scas
sbb
pop
daa
mov
rcrb
and
mov
cmc
cmp
pop
mov
jg
fidivrs
movsb
xchg
and
mov
lret
cmpsb
scas
inc
xor
popa
jge
rcll
xlat
mov
ljmp
ret
push
lods
mov
mov
xor
outsl
ret
hlt
pop
cmovae
rcr
lods
mov
jl
push
mov
std
lods
out
cwtl
sbb
add
jl
fbstp
stc
sbbb
nop
dec
aas
mov
add
add
cmp
sbb
mov
mov
xor
sahf
cltd
mov
mov
dec
adc
add
push
ja,pt
add
pop
cmp
add
push
xchg
xor
pusha
mov
pushl
sti
lcall
sub
iret
jo
rcrb
outsb
fs
sbb
outsl
arpl
enter
decb
test
mov
test
subb
inc
outsb
inc
test
adc
sarb
scas
lcall
push
and
adc
jne
mov
dec
je
xchg
mov
shlb
outsb
int3
aaa
mov
add
add
push
movsl
mov
cmc
ds
pop
push
adc
push
adc
or
xchg
ljmp
shlb
jp
inc
rclb
cmp
push
icebp
fsubrl
fucomp
test
xor
mov
dec
out
mov
xchg
stos
inc
cwtl
pop
dec
or
lds
scas
push
push
idivb
sub
jl
lods
ljmp
or
jb
dec
mov
test
lods
je
arpl
xchg
or
cli
pushf
stos
in
fmul
les
lods
jb
cmp
test
sbb
mov
add
xchg
pop
dec
jnp
mov
adc
out
sbb
xor
jmp
cli
repz
mov
sbb
jle
popf
mov
mov
cs
xor
xor
pop
lods
mov
bound
stc
and
test
das
mov
loop
cltd
lret
into
cmp
insl
push
mov
dec
negl
cltd
jle
push
test
mov
xchg
ljmp
sub
popf
dec
movmskps
iret
insb
aas
jb
xchg
movsb
int3
xlat
and
adc
das
mov
xchg
data16
pop
loopne
pop
test
in
xor
gs
pop
adc
int
add
adc
mov
das
pop
mov
popa
movsb
cmpsl
add
ds
js
pop
in
push
cwtl
frstor
add
popf
sbb
rolb
mov
lea
gs
cmp
unpckhps
mov
scas
add
cmpsl
jae
or
push
stc
fwait
outsb
shll
pop
inc
loopne
outsl
mov
lds
sbb
pop
test
or
sbb
rcl
mov
jne
and
cmpsl
jge
fwait
cmp
test
bound
jnp
inc
or
pop
es
nop
loop
aas
cmc
fsubrs
div
loopne
pop
xchg
rcrb
outsb
jmp
fs
sub
adc
inc
int
sub
hlt
pop
jb
sbb
mov
or
or
out
pushf
push
lock
out
add
xchg
hlt
mov
cmp
fists
adcl
mov
aam
adc
dec
dec
mov
andb
or
cmc
mov
or
pop
mov
pop
sub
enter
aad
push
inc
xchg
fs
push
mov
push
xor
das
pop
sbb
dec
sti
into
das
sbb
ret
mov
inc
mov
cmp
sahf
pushf
pop
push
outsl
andl
lcall
lahf
lods
inc
mov
sub
pushf
xor
fwait
out
mov
rolb
cmp
outsb
mov
imulb
loope
adc
mov
jne
add
jle
mov
sbb
dec
adc
add
js
lods
jae
jp
jne
mov
imul
or
ss
xchg
movaps
fwait
adc
lcall
pop
sub
xorl
mov
sbb
sti
mov
ds
adc
inc
insb
sub
dec
mov
dec
and
or
sub
sub
mov
or
and
xor
or
sbb
in
cmp
xchg
sbb
mov
sbb
movsb
jmp
adc
fisttpll
jo
dec
and
jno
addl
data16
push
ficompl
ror
xchg
clc
rorb
lds
inc
jae
pop
inc
mov
ds
fimull
and
inc
repz
call
dec
adc
add
mov
adc
fs
mov
sub
pop
xchg
xchg
pop
mov
pushf
mov
jae
icebp
lods
mov
cli
push
lds
xor
lock
stos
add
lahf
xor
jae
sub
test
mov
aam
dec
dec
add
into
ljmp
imul
fcoms
cli
in
jno
mov
inc
pop
movsl
out
adc
mov
pop
add
dec
ljmp
and
mov
insl
in
push
mov
gs
mov
and
fsub
cmp
nop
sbb
mov
ss
mov
test
xor
add
and
adcb
insl
int3
mov
xchg
jp
pop
ljmp
sub
or
and
cmp
pop
mov
outsb
fwait
or
insl
sbb
sahf
dec
pop
mov
mov
and
xor
test
jmp
out
aam
dec
xorl
sub
test
and
or
cmp
test
jbe
or
clc
push
out
lahf
sub
jp
icebp
xchg
pop
xor
jnp
and
cmpsb
sub
jbe
fwait
js,pn
fcmovne
xor
in
push
adc
scas
push
xchg
mov
pop
and
pop
and
sbb
and
popa
xor
movsl
ds
das
lret
inc
sbb
pop
lds
lea
dec
mov
outsl
loope
xchg
dec
subl
jge
ljmp
out
cmc
cmp
and
xchg
jge
addr16
mov
ret
sbb
sbb
fistps
lds
int3
push
and
addl
lods
add
test
in
mov
dec
fs
movsl
test
leave
jle
push
popf
fists
fmuls
shlb
mov
mov
jne
call
push
pushf
or
xor
ss
fnstenv
or
push
inc
fcoml
shrl
fsubr
sub
mov
scas
cld
test
sbb
andl
xchg
int3
lret
iret
movsb
mov
mov
rol
lods
xchg
sub
mov
mov
jo
and
sub
push
cmc
movsl
dec
push
or
push
inc
das
push
mov
fsubp
lds
and
sub
pusha
mov
pop
rcll
nop
fstl
cmp
inc
fwait
push
pusha
mov
mov
aas
test
add
test
pop
pop
add
xchg
dec
cli
mov
mov
sub
jae
dec
stos
test
jbe
enter
mov
insl
fsubrl
push
xor
xchg
and
mov
add
cwtl
in
fstps
rcrb
lock
insb
push
sub
jns
cmp
xor
xchg
loope
xchg
ljmp
cmp
nop
loop
or
xchg
xchg
inc
sbbl
fcoml
clc
cmp
mov
mov
pop
mov
pop
inc
sub
sti
dec
loope
stos
lahf
and
repnz
sub
push
pop
pusha
inc
mov
fsubrp
fs
mov
jle
mov
mov
push
mulb
call
addl
xlat
add
call
lds
xchg
sub
pop
cmpsl
fbstp
repnz
fmuls
ss
dec
or
sti
cltd
jmp
adc
xchg
scas
xlat
insl
insb
sbb
dec
imul
add
div
fstpt
push
pop
fidivl
sub
mov
xchg
push
xor
add
je
lcall
fs
mulb
and
sbb
mov
cmp
and
popf
sub
pop
or
mov
mov
fs
mov
jae
add
clc
pop
jge
sbb
sub
pop
pop
mov
adc
push
or
out
scas
ds
and
inc
xor
cmp
in
mov
shll
jg
inc
jmp
in
in
xchg
int
push
and
arpl
and
sarl
sub
push
dec
jl
mov
jo
push
mov
sub
inc
lods
mov
adc
or
popf
pusha
aam
test
out
xchg
ds
nop
loope
inc
mov
nop
inc
push
jae
and
mov
in
imul
stc
mov
cwtl
push
push
mov
add
xchg
jne
xchg
rorl
cwtl
push
sbb
xor
out
aaa
dec
rolb
jne
sub
mov
mov
xlat
jne
int
loopne
inc
or
mov
enter
lods
mov
and
sub
pop
jle
jo
std
out
ds
into
popa
jg
shll
push
in
repz
movsb
lods
pop
cmp
sbb
adc
sbb
rorl
in
cmpb
lret
jae
into
ja,pn
xchg
ret
shr
mov
or
int
dec
repnz
sub
rcl
add
or
xor
or
xchg
fadds
jl
movsb
sub
sarl
or
cmpsl
xchg
mov
jb
stos
orb
push
jnp
pop
inc
mov
jg
imul
rol
imul
cli
cmp
sub
out
push
mov
push
inc
imul
inc
jo
xor
jmp
int3
add
push
mov
jb
add
adc
addr16
outsl
in
imul
xor
xchg
ficomps
fs
test
aaa
test
xchg
out
mov
bound
or
sub
push
fcomp
sbb
fsub
incb
mov
addr16
pop
pop
cmc
push
notl
pop
mov
cmp
or
and
mov
xchg
pop
test
inc
adc
sub
jg
push
jg
dec
fmuls
mov
ret
cmpsl
jo
pop
inc
insb
mov
test
cmpsb
or
mov
aas
push
xchg
fwait
pusha
dec
add
push
test
pop
push
stos
xorl
pop
aaa
push
push
ret
aam
fsts
ret
pop
scas
lret
push
in
xor
cmpsl
add
fldenv
lods
xchg
push
ljmp
popf
lret
push
jne
andl
xor
xchg
loopne
loope
xchg
mov
mov
pop
or
dec
icebp
rorb
popa
test
add
add
cwtd
popf
lahf
jnp
pusha
or
std
outsl
imul
test
out
out
insb
rorl
sar
jmp
test
scas
xor
push
push
sbb
or
imulb
mov
shrl
test
ret
and
mov
or
scas
shl
and
xchg
ss
add
cli
sub
mov
sbb
jns
inc
mov
cmc
mov
jmp
sbb
nop
sbb
mov
mov
pop
enter
call
stos
aam
mov
lahf
and
cld
ja
xchg
inc
jno
movsb
mov
sbb
test
push
inc
out
push
add
sub
sti
lret
iret
popa
push
scas
loop
ret
out
dec
adc
pop
xchg
outsl
sbb
mov
mov
movl
xor
or
dec
enter
push
jbe
inc
ljmp
mov
aaa
test
sar
sbb
push
test
js
push
aam
test
in
or
mov
outsl
mov
ja
popf
leave
inc
xchg
scas
xchg
sbb
int3
inc
movsl
in
out
int3
pop
daa
outsl
sbb
mov
fs
mov
fstps
inc
dec
mov
rclb
fdivrl
paddsw
mov
iret
and
mov
mov
fldl
sub
mov
outsl
mov
inc
inc
mov
mov
pop
pop
add
cmp
push
out
push
sub
stos
adc
pop
in
mov
pusha
sub
or
mov
push
fstps
xor
or
clc
adc
xor
and
add
scas
jmp
mov
gs
push
les
jp
call
leave
aas
les
inc
add
jle
xchg
sub
push
xchg
push
add
ja
cltd
jb
testl
mov
push
pop
outsl
pop
iret
addr16
mov
dec
sbb
scas
add
xchg
mov
outsl
daa
dec
dec
cmpsb
repnz
push
xchg
ljmp
and
mov
sbb
fs
cmp
mov
outsb
mov
loopne
lods
xchg
pusha
jo
cwtl
je
iret
pop
repnz
dec
icebp
xor
popa
add
or
and
fimuls
mov
push
es
mov
cmpsb
adcl
aad
lods
inc
xchg
or
adc
pushf
add
mov
adc
inc
loope
je
popa
xchg
fcmovnb
xchg
ds
cltd
gs
mov
sbb
les
je
in
pop
sbb
jp
jo
mov
lret
stos
adc
enter
mov
jno
cmpsl
call
jg
out
mov
fwait
adc
dec
or
mov
fnstsw
les
mul
rol
or
fisubs
leave
xchg
inc
scas
lret
stos
mov
xor
cwtl
or
loopne
repz
std
imul
jmp
aas
cmp
inc
cmp
shl
jnp
pop
stos
repz
jmp
mov
fstpt
test
add
js
movsl
adc
ret
and
shrb
add
pop
inc
jns
nop
sahf
adc
xor
and
sbb
pop
pop
mov
neg
xlat
push
je
xchg
out
pop
inc
mov
xchg
xchg
lret
jmp
aaa
push
testl
push
mov
jno
or
das
pop
enter
fs
xorb
pushw
xor
cmpsb
imul
inc
orb
dec
filds
scas
ss
add
std
insl
cltd
or
mov
dec
xchg
shrl
addr16
aaa
adc
adc
ja
push
inc
push
incb
scas
addr16
jp
cld
xor
inc
cmp
mov
pushf
mov
hlt
scas
fnstsw
leave
ss
sbb
clc
mov
inc
jle
pop
sub
iret
cmp
data16
icebp
jl
mov
js
dec
jb
mov
mov
lds
ljmp
shlb
rclb
adcb
test
sbbb
push
mov
xchg
jne
xchg
insl
mov
xor
pop
or
shll
xchg
jmp
mov
ficoms
fstps
cmp
and
jp
and
push
movsl
les
aad
and
dec
add
mov
call
xchg
into
adc
xor
popf
bswap
jne
sbb
dec
test
xor
imull
mov
mov
add
inc
pop
mov
bound
call
out
mov
or
xor
inc
scas
mov
addr16
into
aas
fidivl
mov
cmp
mov
test
jae
ljmp
adc
lods
aaa
xorl
adc
inc
and
push
shll
jp
fldt
jne
arpl
movsl
in
imul
sahf
int
pop
aas
pushl
sub
dec
cmp
dec
ljmpw
cmp
test
mov
xor
hlt
imul
lret
push
fsubp
into
push
adc
add
insb
cmp
inc
push
shrl
test
lahf
inc
adc
stos
xchg
scas
mov
ja
jb
outsl
aad
or
xchg
push
fstpt
imul
lret
mov
sub
adc
or
ds
out
subb
mov
mov
in
push
mov
gs
repnz
xor
cmp
leave
xchg
rcll
cmovl
mov
filds
dec
jmp
iret
xor
stc
pop
inc
mov
fildll
pop
adcl
mov
data16
rcll
iret
and
notl
pop
scas
add
push
int
loope
inc
popf
loopne
repz
cmp
jnp
popa
orl
pop
xor
xor
adc
movswl
loopne
dec
xchg
or
jmp
sub
cwtl
pop
sti
push
push
sub
xchg
adc
lcall
das
add
mov
sbb
jg
push
add
inc
or
dec
xor
in
cli
lds
xorl
rep
xchg
adc
shl
cli
pop
sbb
pop
out
xlat
mov
mov
pusha
mov
push
push
push
jmp
adc
outsl
sbb
cmp
icebp
rcrl
call
rcll
mov
aas
sbb
sub
mov
nop
loop
out
adc
jge
into
pop
testb
insl
mov
sub
pop
shll
stos
push
or
or
les
pop
loopne
sbb
lock
sub
frstor
in
les
lods
or
mov
cwtl
and
ja
xchg
mov
xchg
and
imul
inc
mov
and
inc
adc
sbb
lods
sub
jmp
sbb
lock
in
jg
lea
rolb
std
dec
and
ds
mov
test
xchg
in
les
movsl
sub
jl
scas
dec
into
xchg
and
lcall
push
or
cmp
popf
jmp
std
cmp
xchg
in
in
cmp
or
mov
sub
in
sbb
push
sahf
clc
push
fistpll
lock
cmp
xchg
push
sub
sub
mov
loop
push
push
scas
dec
testb
call
rorb
outsl
cmpsl
lret
pop
aaa
lods
sub
fisttpll
sti
dec
xchg
inc
imul
sbb
inc
push
movsb
cmp
aad
lods
iret
push
lods
into
insb
es
test
and
add
inc
loopne
add
add
xor
pop
add
push
pop
push
dec
pop
dec
xchg
sub
xchg
dec
mov
imul
sub
mov
mov
xor
add
jmp
mov
mov
mov
mov
xor
add
xor
div
mov
xor
lea
mov
mov
mov
mov
jmp
pop
adc
test
fadds
push
jns
jae
fs
add
lea
or
jae
es
mov
movsb
lahf
nop
jl
mov
ret
shrb
fnsave
ret
mov
xor
pop
ret
lea
je
add
inc
xor
adc
mov
push
fs
fnstsw
cmp
cmp
cli
mov
fadd
gs
mov
shrb
or
shll
jns
pop
cmpsl
fmuls
pop
loopne
jb
jno
into
nop
rcrb
sbb
adc
pop
scas
lods
les
mov
imul
dec
mov
cmp
sbb
dec
popf
inc
mov
adc
sub
fs
jmp
cmp
pop
inc
jp
sub
mov
xchg
inc
cltd
sbb
xlat
mov
inc
into
ret
das
pop
inc
fcoms
testl
jo
xchg
add
lea
mov
fwait
xchg
int
push
sub
push
das
dec
mov
cmp
xor
jns
in
movsl
and
xor
inc
jg
adc
pop
mov
add
push
movsb
pusha
cmpsl
cmp
rcll
ljmp
imul
xlat
jp
dec
rorb
das
xor
cmpsl
mov
push
pusha
sbb
repnz
gs
mov
xchg
dec
mov
std
ljmp
mov
fmull
bnd
sub
orb
inc
arpl
mov
lds
outsb
fdivrl
movsl
and
add
jg
andl
and
inc
mov
in
and
cmp
jl
dec
pop
xor
or
fcmovbe
in
inc
sub
xchg
inc
jecxz
hlt
daa
fsubs
sbb
daa
rcr
cltd
test
inc
sti
push
sub
sbb
movsb
inc
leave
hlt
jb
test
aaa
mov
dec
sahf
scas
push
inc
xor
incl
or
mov
push
fcompl
push
jae
xlat
neg
ret
lods
stc
sub
xor
out
cwtl
add
mov
cmp
mov
pop
mov
mov
mov
mov
push
push
sub
gs
mov
xor
push
jg
lret
imul
outsb
inc
adcl
andl
or
mov
test
das
xor
cmpsl
pop
test
insl
mov
nop
mov
xchg
cmp
mov
cmpsb
jae
ret
jmp
mov
and
sub
push
inc
push
adc
sub
mov
xlat
push
inc
cmp
ficomps
sub
mov
push
push
adcb
ret
data16
lcall
fnsave
xchg
js
popl
dec
fisubrs
dec
adc
adcb
add
xor
daa
push
xor
add
inc
xchg
andb
in
icebp
jge
shrl
scas
xchg
push
jb
sbb
push
jb
push
stc
pop
aaa
push
pushf
jmp
adc
leave
and
stos
ret
dec
jo
xchg
push
cmp
mov
adc
adc
jl
push
jge
and
insl
cmp
in
jmp
movsl
ret
sbb
clc
movsl
ret
pop
fdivl
push
or
outsb
mov
sbb
sbb
adc
dec
mov
pushf
mov
xor
in
outsb
fsincos
cmc
popf
movsb
mov
imul
sbb
mov
push
adcb
insb
push
scas
dec
dec
mov
insb
or
mov
mov
leave
xchg
pop
in
pusha
sub
adc
xchg
mov
jb
mov
xchg
push
das
dec
test
mov
mov
sbb
dec
xor
xchg
xchg
inc
mov
int
cli
cmp
dec
jbe
push
mov
out
cmp
fisttpll
mov
push
std
out
insl
leave
mov
mov
sub
mov
cmp
xchg
dec
mov
adc
test
mov
and
mov
mov
lock
cltd
fmuls
loopne
lock
icebp
mov
or
xor
jnp
aam
movsb
mov
push
inc
jno
hlt
cmpsl
cli
das
jge
push
aas
push
pop
dec
lock
xchg
or
dec
xchg
xchg
or
adc
sbb
inc
stc
mov
aam
push
rcrb
xchg
xchg
cmp
cmp
leave
gs
and
cld
aam
inc
adc
mov
mov
inc
push
cmpsl
dec
sar
dec
jp
repnz
lahf
fs
cmc
dec
or
sbb
stos
or
jecxz
loope
int
std
xchg
faddl
pop
sti
jo
sub
and
or
test
pop
push
jle
lahf
cltd
mov
lods
push
shll
out
test
mov
std
add
jmp
js
add
and
mov
in
lds
jmp
cltd
addl
or
cwtl
adc
test
movsb
andb
pop
call
pop
sub
pop
add
les
call
in
or
loop
iret
jo
or
fadds
lds
dec
cwtl
call
and
insb
cmpsl
hlt
or
pusha
movsb
mov
push
lock
sub
add
xlat
xchg
pop
jl
jp
xchg
ss
add
and
ret
inc
lods
les
inc
adcb
mov
xor
inc
dec
jecxz
push
decl
gs
movsl
mov
in
repnz
and
dec
out
in
xchg
mov
cmp
or
mov
sbb
adc
xchg
push
cwtl
mov
mov
pop
data16
mov
out
fistpl
jmp
inc
pop
loop
inc
fs
push
xchg
sub
shrb
sti
out
xor
add
jmp
cltd
xlat
aad
mov
jg
mov
int
jg
inc
adc
loopne
ret
int3
pop
xchg
icebp
and
dec
inc
and
pushf
das
inc
cmp
add
js,pt
ja
mov
xchg
and
daa
sub
and
jne
fs
inc
push
int3
pop
jnp
repnz
push
and
cmc
jmp
nop
pop
fs
inc
repnz
xchg
es
cwtl
ss
jecxz
into
jnp
sub
or
dec
clc
ret
jns
clc
data16
in
mov
lock
das
pop
stos
int
leave
mov
push
loope
hlt
repnz
das
out
push
mov
push
push
xor
mov
stos
loop
dec
out
mov
dec
xchg
mov
out
sub
push
pop
cmpsl
mov
cmp
test
jecxz
movsb
pop
movsl
fldt
add
lcall
rcl
pop
fdivrl
gs
es
cmp
into
lret
or
jmp
jl
mov
loope
mov
mov
shlb
fwait
cmp
imulb
rorl
pop
xchg
cmp
stos
mov
lret
add
leave
lahf
leave
xchg
xor
loope
lea
or
and
test
jbe
or
lcall
xchg
sahf
jnp
mov
adc
loopne
xchg
rclb
pop
jae
repnz
lahf
pop
sbb
cmpl
mov
xchg
pop
adc
negl
pop
fimuls
push
fildl
xchg
add
jb
cmp
pop
aad
sbb
imul
in
sbb
pop
mov
cs
add
mov
in
mov
fwait
lahf
mov
ss
xor
sbb
or
xchg
nop
dec
add
add
in
sub
mov
inc
cs
add
loop
sbb
add
mov
test
outsl
lock
out
sbb
lahf
dec
out
pop
sbb
fdivrl
lea
cmp
add
pusha
in
nopl
cmpsl
mov
ljmp
or
bound
daa
stc
and
add
loopne
adc
rcll
out
incl
call
divl
pop
jp
sbb
aaa
inc
pop
mov
sbb
into
roll
mov
js
push
dec
iret
jne
xor
loopne
adc
imul
gs
jg
daa
mov
fsubs
add
int3
lgdtl
push
jne
sub
fstl
call
popf
mov
lcall
cwtl
lock
sbb
sbb
mov
dec
add
jne
lret
dec
sbb
push
mov
xor
sub
sub
xor
xchg
push
into
mov
bound
loop
sub
repz
mov
imul
decb
jo
loope
mov
dec
mov
push
jle
leave
sub
loop
mov
push
mov
xchg
mov
jb
imul
inc
scas
mov
jb
out
scas
pop
add
xchg
jmp
jg
fs
jne
lock
stos
ficoms
cmp
lret
jle
scas
add
mov
fisttpll
imulb
clc
xor
xlat
fcmovb
add
clc
lcall
mov
dec
inc
and
int
mov
pop
loope
insb
mov
sbb
repz
xor
insl
mov
mov
cmp
lds
neg
fdivr
mov
add
push
push
ja
lret
push
mov
filds
cmp
insl
sub
sub
sbb
dec
pop
div
mov
insl
mov
mov
les
decl
pop
mov
sahf
sub
xchg
xor
and
mov
movsb
ds
mov
mov
dec
jl
jmp
and
hlt
nop
mov
lahf
dec
testb
gs
sbb
nop
xor
inc
sbb
jl
mov
sub
fildl
mov
dec
arpl
ret
repz
leave
scas
mov
inc
inc
mov
xchg
adc
scas
xchg
mov
nop
adc
sbb
imull
cmp
lcall
loope
insb
mov
push
pop
shlb
inc
add
int
pop
shrb
loop
daa
lods
call
mov
test
fisubrs
mov
lods
lret
jo
inc
xchg
xor
mov
stos
cs
mov
call
cltd
pop
movsl
movsb
out
scas
and
cltd
sbb
dec
inc
cltd
xor
out
sub
lret
xor
dec
fisubl
test
push
pop
psllw
ret
clc
gs
ficoms
out
mov
in
fisttps
out
inc
mov
pop
test
mov
fdivrs
loope
mov
adc
xlat
inc
pushf
jno
xchg
pop
push
out
inc
std
int3
xchg
pop
cli
es
fisubrl
addr16
movsb
movsb
mov
std
mov
lods
mov
xor
cmpsl
sub
inc
mov
pop
inc
das
jecxz
pop
popf
jnp
daa
push
gs
jns
shll
jns
or
inc
outsb
mov
loope
jo
fsub
or
xor
cmpsb
inc
call
mov
inc
pop
scas
pop
sub
sub
and
dec
orb
lahf
call
cld
das
xor
popa
js
mov
sbb
mov
jg
nop
imul
inc
push
xchg
test
int3
jbe
add
out
xor
gs
call
out
xchg
mov
or
and
gs
lock
iret
sbb
in
xchg
mov
mov
call
int3
loopne
mov
mov
pop
mov
xorl
push
negb
imul
in
xlat
mov
ret
pop
adc
test
push
add
pop
mov
icebp
add
inc
or
rcl
adc
sub
xor
mov
jae
movnti
sbb
pop
mov
and
sub
aaa
push
mov
sbb
arpl
xor
into
inc
out
rcll
jle
pop
jmp
xor
pop
mov
mov
cs
sub
dec
sbb
inc
and
pop
mov
mov
shll
mov
xchg
jmp
mov
pop
scas
lods
push
xor
iret
into
lds
mov
pop
aad
pop
push
fs
pop
aad
mov
ds
repz
mov
adc
loopne
lock
mov
iret
ljmp
sti
je
pop
sbb
inc
sub
push
mov
pushl
lcall
std
lret
mov
ja
inc
mov
mov
mov
or
ficoms
sbb
adc
data16
xor
sbb
je
bound
les
push
fs
pop
testb
adc
out
cmp
es
jbe
sbb
mov
xchg
jnp
call
dec
mov
adc
cmc
push
cmp
insl
xchg
mov
or
shl
adc
repz
mov
std
dec
fsubs
xor
int3
or
push
repnz
movsb
mov
sbbl
push
or
filds
mov
shlb
sub
roll
dec
and
or
lcall
push
and
mov
dec
cmp
fwait
out
imul
dec
hlt
test
int3
or
mov
xchg
push
push
xor
and
ja
push
mov
psrlw
mov
rcll
out
mov
and
cmpsb
push
adc
gs
sti
sub
iret
xor
das
out
cltd
mov
pop
or
andb
lret
scas
fisubrl
out
jmp
xchg
cmc
mov
adc
es
das
enter
mov
dec
lea
xchg
mov
pop
cld
and
jno
sbb
test
mov
adc
movsl
dec
xchg
sbb
js
cs
cmp
jns
inc
adc
dec
addr16
into
push
push
push
iret
mov
push
loop
mov
push
test
mov
push
hlt
inc
push
cld
xchg
gs
jge
mov
lods
in
rcl
dec
pop
mov
ret
and
idivb
push
sbb
imul
sub
lods
je
jnp
notb
lods
or
cli
fistl
adc
mov
dec
sti
push
or
mov
jle
lods
fistl
xchg
push
pop
cmp
rcrl
repz
push
gs
xchg
in
fcmovnb
je
js
insl
pop
scas
jae
jae
imul
cmpsl
inc
mov
les
icebp
fcompl
fldenv
jns
jae
in
stos
shll
ss
jmp
mov
lret
pop
cmc
mov
ret
nop
inc
cs
jg
mov
cmp
xor
in
mov
dec
or
pop
push
sub
mov
push
mov
ja
shr
in
mov
mov
js
xor
cmp
adc
cmp
icebp
test
push
fiaddl
jmp
idivl
ficoms
mov
cmpsl
ja
pusha
mov
lret
sub
mov
cli
push
repnz
pop
icebp
out
hlt
call
dec
mov
jo
pop
repnz
cmp
sub
jae
xor
add
inc
pop
sarl
std
shlb
sub
pop
dec
pop
dec
dec
cli
nop
sbb
filds
ror
xlat
not
enter
pushl
cmc
cld
pop
xchg
loopne
pushl
xchg
cwtl
lret
dec
sub
and
je
lock
sahf
mov
push
mov
jmp
xor
test
jle
xor
push
dec
jge
test
outsb
mov
mov
movb
xorl
pusha
cmp
add
mov
jl
jp
pop
inc
dec
adc
imulb
imull
in
xor
rorl
ds
xchg
jp
je
mov
fiaddl
xlat
add
and
jge
fwait
int3
mov
ret
sub
in
data16
jp
inc
add
mov
xor
mov
in
dec
push
out
addb
js
insb
adc
jbe
push
testb
or
or
xor
jle
push
lret
sbb
jge
xor
push
ja
and
mov
adc
inc
test
into
ret
and
xorl
andl
sub
mov
jae
adc
xor
mov
inc
fs
movsl
mov
jg
sub
lret
movsl
mov
add
push
out
std
sbbb
addr16
dec
divl
and
lds
movsb
orb
inc
mov
cmpsl
adc
in
mov
mov
mov
mov
in
pop
mov
les
cmp
rcr
dec
inc
cwtl
test
add
fldenv
loopne
daa
add
vpmovmskb
cmp
lock
push
mov
ja
rorb
sbb
pop
nop
call
push
mov
mov
pop
mov
rcrl
add
fwait
lods
and
mov
mov
das
jnp
pop
mov
jecxz
push
shlb
add
xchg
dec
add
adc
lods
xchg
cwtl
or
xchg
not
inc
lea
aad
sarl
fadd
fwait
mov
imul
jne
jne
enter
stc
push
popa
push
jnp
push
mov
cmp
xor
out
enter
add
add
add
shlb
push
ret
and
mov
rorl
lods
stos
movsl
sbb
mov
iret
push
adcl
cwtl
mov
rorb
xlat
pushw
mov
mov
and
add
cwtl
ss
cmpsb
testb
dec
in
fdiv
pop
lods
dec
fidivl
ret
adc
jmp
lds
scas
shrl
arpl
mov
js
xchg
out
jns
ljmp
test
pop
pop
adcl
sub
mov
into
dec
lret
dec
repnz
lret
lret
jg
pusha
adc
xor
aam
aam
push
pop
test
or
and
jne
mov
adc
arpl
adcl
mov
outsl
mov
es
xchg
cmp
nop
and
insl
andb
xchg
ret
lcall
hlt
jns
fidivrl
test
les
es
rcl
fbstp
add
imul
test
inc
mov
aas
inc
or
aad
mov
movsb
mov
sarl
fildll
push
mov
sbb
imul
cmp
mov
jl
fidivs
scas
cmp
testb
pop
and
xchg
adc
lcall
enter
jle
xor
mov
jnp
lods
mov
pop
mov
loop
jae
jb
xchg
out
mov
sbb
ja
cmp
call
movsl
stc
fiaddl
sub
and
push
sbb
lods
loop
aaa
or
mov
mov
incl
lods
xchg
cltd
mov
add
movsb
es
repz
popf
and
push
fistl
push
adc
mov
pop
xchg
dec
cmp
adc
mov
dec
lods
mov
adc
orl
xchg
ret
mov
or
jo
movsb
orb
aaa
das
les
leave
jmp
incl
jae
test
sub
sub
sbb
add
int3
jo
or
jbe
outsb
mov
cmpsl
lret
cs
aaa
mov
test
cmpl
push
lret
imul
mov
loop
out
daa
mov
push
enter
mov
adc
mov
mov
lret
ret
pop
push
in
inc
mov
outsb
cmp
jle
incb
enter
cmpsl
gs
lret
xchg
jne
xchg
andl
test
test
iret
sbb
push
loopne
and
mov
icebp
jg
xchg
fiadds
bnd
dec
push
add
loope
cld
imul
push
popf
aaa
jl
mov
mov
ret
es
ret
fiadds
ds
pop
js
lds
xchg
push
call
cmp
enter
pop
loope
xorl
or
out
push
ss
inc
out
jno
push
movups
jmp
jl
mov
lds
imul
dec
push
frstor
push
mov
je
stos
xchg
fs
mov
sarb
xor
mov
sbb
or
fisttpl
lock
mov
push
popa
aaa
aad
test
pop
out
out
lcall
cmp
lret
push
popa
adc
lock
adc
sub
sbb
mov
sbb
rclb
or
inc
sbb
inc
js
mov
push
xor
fwait
push
inc
xor
sub
testl
and
ja
jge
inc
push
outsb
dec
popa
test
jne
outsl
adc
dec
movsb
mov
cmp
mov
stc
leave
fldt
cmp
add
repnz
js
dec
fucomi
mov
repz
fnstenv
adc
cltd
push
adc
cmp
aas
jbe
dec
jo
xorl
jbe
mov
and
pop
xor
pop
ret
mov
adc
ljmp
mov
adc
je
xor
shll
test
mov
fld1
cmp
aaa
mov
jns
lret
sar
mov
sub
aam
push
mov
loop
dec
push
das
xchg
push
cmpsl
and
cmpsb
or
in
lds
adc
sbb
inc
mov
cwtl
btc
mov
lret
call
and
insb
push
jo
testl
popa
mov
pop
adc
test
cmp
xor
call
test
addr16
jmp
or
hlt
push
test
filds
or
push
cmp
xor
jno
stos
push
add
cmc
jae
stc
or
mov
mov
mov
xor
mov
pushf
shlb
push
sub
or
cmpb
popf
ljmp
jae
es
aam
repz
fsubr
mov
mov
mov
jb
lcall
inc
or
lcall
sub
cmp
dec
sbb
mov
fcomi
pop
inc
add
mov
cmp
shll
insl
std
fsubs
out
ds
sub
cltd
push
out
dec
sarb
mov
ret
movsb
pop
and
addr16
ds
aad
add
loopne
sbb
jae
cmpsb
adc
push
pop
inc
int3
inc
mull
adc
pop
cmc
pop
rcrb
in
es
mov
std
push
fnsave
pop
mov
fs
cmpsl
jae
lods
sub
xlat
jnp
stos
insb
rorb
mov
inc
pop
pop
lds
dec
jg
adc
repz
ds
adc
push
cmp
jmp
arpl
xchg
aas
cmp
clc
adcb
add
aad
xchg
in
or
shlb
adc
mov
inc
loop
mov
jecxz
dec
leave
jb
and
mov
jle
leave
mov
pop
mov
inc
int3
xor
loop
cmc
orl
sti
adc
fldenv
iret
inc
mov
mov
clc
fstpt
or
orb
bound
mov
sbb
xor
je
cli
lcall
in
mov
add
rcrl
iret
dec
xchg
cmpsb
dec
add
pop
out
dec
mov
sbb
mov
daa
leave
jge
pusha
fyl2xp1
ficompl
ja
in
ljmp
loopne
sbb
gs
std
add
inc
imul
loop
hlt
ror
jbe
lret
mov
out
rcl
cmpsb
in
aam
sbb
loopne
cmpsb
push
test
loope
pop
hlt
jg
adc
mov
iret
popf
push
adc
and
push
cmpsl
int
mov
inc
dec
std
lods
lahf
dec
mov
lods
rclb
sahf
jno
stos
aam
cmp
sti
daa
xor
jmp
jle
cwtl
bound
xchg
or
stos
jae
je
xchg
pop
fcmovu
xchg
ja
ds
out
sarb
sub
push
mov
sub
imul
jmp
add
subb
jp
jl
push
enter
stos
lods
addr16
sahf
pop
dec
mov
out
iret
aad
pusha
lds
lds
add
cmp
mov
sub
pop
lods
ss
cmp
paddusb
cmp
push
dec
out
xor
inc
dec
cmp
mov
adc
pop
nop
xor
mov
icebp
shll
mov
clc
mov
bound
dec
jl
lods
cmp
push
jb
or
mov
in
stos
mov
lea
stos
inc
push
shrl
insl
xor
cli
fldenv
or
mov
add
mov
push
iret
leave
or
outsb
mov
aad
push
hlt
mov
jge
pop
push
pop
pop
and
pop
stos
mov
push
xor
addr16
loop
pop
mov
outsl
sub
cwtl
adc
out
test
repz
ret
dec
mov
push
orb
clc
sbb
jne
iret
push
shlb
cmpsb
inc
dec
filds
push
push
cmpb
add
or
fistps
icebp
lea
lods
push
dec
mov
cmc
xlat
mov
fidivrl
adc
mov
lods
mov
cmp
inc
sbb
repz
sbb
ds
ljmp
arpl
pop
push
inc
popa
mov
imul
cltd
xchg
jo
xor
jle
les
adc
or
icebp
andl
jl
leave
rolb
push
push
cmp
mov
test
int3
repz
inc
mov
addr16
push
js
cmp
out
jo
pop
xchg
data16
mov
mov
mov
cs
and
xchg
mov
es
das
pushf
fwait
iret
out
ret
insl
lcall
fdivrl
js
xlat
ljmp
add
sahf
pop
sub
sub
jno
cmpl
xor
stos
push
sbb
xlat
sarb
and
jge
fisubl
test
ljmp
mov
shr
and
inc
xor
and
icebp
mov
jae
fcomi
push
sahf
sub
add
and
xchg
loop
cmp
into
xchg
sub
in
mov
lret
pop
pusha
loope
or
test
call
addr16
pop
movsb
mov
inc
sub
in
sysret
push
in
mov
inc
pop
mov
push
mov
pop
and
pop
test
or
gs
out
movb
faddp
pop
xor
neg
add
jle
lds
sbbl
divb
stos
stc
jns
pop
mov
nop
jno
mov
adc
repnz
and
sub
idivb
or
jp
into
mov
fcompl
xlat
or
outsb
or
push
neg
mov
loope
pushf
adc
je
je
jle
daa
lds
inc
testl
inc
aaa
sbb
push
add
loopne
sti
cmp
or
sub
mov
stos
push
fisttps
daa
mov
xlat
sbb
push
mov
xchg
in
or
mov
movsw
inc
sar
clc
mov
sbb
scas
shrb
inc
out
mov
jne
mov
int
lods
jnp
mov
push
pop
push
arpl
hlt
add
jb
in
movsl
dec
push
test
mov
xlat
hlt
loope
loope
out
adc
sub
mov
jmp
cmp
cmp
out
xor
xor
inc
xchg
aaa
andb
and
xchg
sbb
sub
aad
repnz
add
add
xchg
loope
pop
lret
xchg
push
jl
mov
mov
xchg
sbb
push
sbb
movsl
in
push
ja
cwtl
bound
push
fldenv
add
icebp
scas
inc
and
sbb
stos
sbb
jae
cwtl
repnz
gs
xor
inc
jecxz
mov
addr16
jmp
mov
pushf
xchg
inc
mov
enter
das
and
shrl
mov
mov
cli
mov
insb
std
add
xchg
sub
or
loope
mov
out
adc
loop
and
loope
test
clc
jg
test
sub
aaa
lcall
fidivrl
ret
lods
adcb
jae
sbbl
in
bound
nop
or
pop
push
or
mov
mov
pop
and
mov
cmc
in
sti
pop
push
jl
rorb
adc
rclb
xchg
xchg
jecxz
aam
jae
mov
sub
fdiv
shl
mov
fsubrs
hlt
es
mov
fwait
aas
lahf
ret
fimull
iret
pop
test
mov
push
xchg
out
and
push
adc
outsb
push
ljmp
xor
cmp
cmpsb
xchg
lret
movsb
dec
jge
jb
xchg
or
dec
push
add
les
cmp
mov
xchg
leave
or
or
cmpsb
xchg
add
aam
scas
sub
fwait
mov
je
mov
sarb
pop
mov
adc
mov
mov
sbb
and
mov
stos
xlat
xchg
mov
dec
pause
add
loope
lods
out
arpl
mov
outsb
mov
adc
mov
jle
ret
push
adc
cmc
int
push
pop
push
push
test
int3
push
jmp
scas
adc
xor
add
les
insl
adcb
movsb
gs
sbb
orb
xor
xchg
xchg
pop
movsb
jo
lret
mov
icebp
or
std
adc
outsb
or
xor
repnz
rcll
mov
fdivrl
mov
mov
sbb
lret
ss
in
rcll
movsb
or
xchg
xor
mov
roll
fwait
shl
hlt
dec
mov
pop
xor
fwait
mov
jle
cmp
cwtl
mov
aas
pop
insb
dec
adc
mov
std
dec
adcl
clc
or
and
xchg
mov
jmp
movhps
jmp
push
cmp
ds
std
mov
mov
mov
dec
xchg
repnz
std
xchg
jb
xchg
popa
enter
cld
jno
dec
mov
sbb
jmp
roll
jl
jnp
subl
dec
and
cli
out
cmpl
aaa
push
add
lahf
in
mov
in
adc
mov
xchg
sbbl
and
mov
movsl
xchg
mov
inc
imul
mov
sti
arpl
lock
mov
xchg
in
or
cmp
push
add
out
into
cli
add
cmpsb
xchg
bound
mov
jne
cwtl
scas
sbb
test
xchg
and
lods
in
movsb
push
jnp
adc
sub
ja
cmp
mov
push
adc
pusha
mov
lahf
sbb
scas
mov
lret
mov
rcl
xlat
xchg
push
adc
lea
dec
negb
jns
frstor
int
jle
andl
and
jp
stos
scas
push
xor
in
mov
stos
lahf
jge
inc
sahf
push
xor
and
test
mov
sbb
scas
addr16
fcmovne
mov
pop
xor
loope
fmuls
and
push
popf
sbb
xchg
jl
mov
mov
scas
cld
out
repz
pushf
pop
jno
pop
sbb
and
sbb
js
cs
mov
xor
adc
sarb
out
movsb
pop
mov
mov
imul
lahf
rcl
push
inc
xchg
mov
cld
mov
push
adc
les
cmp
lds
roll
scas
mov
jg
sub
cltd
mov
xchg
out
push
cmp
ljmp
xchg
daa
pop
addl
sar
iret
jbe
repz
insl
xchg
lock
sbb
adcb
lea
mov
mov
mov
xor
add
imul
mov
mov
xor
lea
cmp
jne
mov
xor
add
mov
mov
add
xchg
xor
push
mov
pop
mov
add
lea
add
add
push
inc
pop
dec
xchg
dec
xchg
dec
xchg
dec
push
mov
pop
dec
call
cmp
je
xchg
push
pop
push
pop
inc
xchg
sub
xchg
dec
dec
mov
imul
add
xchg
push
xor
mov
dec
inc
add
dec
xor
add
pop
mov
pop
pop
pop
leave
ret
push
mov
push
movl
and
mov
or
mov
dec
mov
xor
add
adcl
mov
sub
mov
andl
xor
add
inc
mov
cmpl
ja
jmp
pushl
pushl
push
push
push
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
xor
push
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
pop
leave
ret
push
mov
sub
movzbl
sbb
mov
mov
mov
xor
mov
xorl
add
movzwl
mov
andl
movb
adc
lea
movl
cmpl
je
cmpl
jbe
jmp
pushl
push
call
mov
dec
mov
jmp
mov
mov
subl
mov
xorl
xor
addl
sub
addl
mov
andl
xor
xor
inc
mov
cmpl
jge
jmp
pushl
push
call
cmpl
jne
xor
xor
inc
mov
cmpl
jb
movl
andl
push
notl
movl
mov
addl
push
movl
cmpl
je
cmpl
jl
jmp
push
push
push
call
mov
dec
mov
jmp
mov
andl
xor
mov
xor
mov
sbbl
push
add
movl
jmp
movl
mov
movl
mov
movl
inc
cmp
movl
jb
mov
xor
add
jmp
sub
mov
mov
or
mov
xor
mov
addl
add
adcl
movzwl
movl
mov
mov
movzwl
addl
xor
adcl
add
mov
mov
mov
inc
inc
mov
cmp
jmp
shl
inc
dec
cmp
push
mov
pop
cmp
xor
jp
scas
sbb
fisttpll
dec
icebp
andb
mov
xor
scas
xor
hlt
icebp
push
inc
adc
lcall
push
mov
or
gs
jge
dec
sbb
pop
mov
cmp
stos
pop
xor
mov
testb
lret
mov
leave
mov
inc
and
mov
imul
imul
imul
loopne
bound
xchg
inc
ss
sarl
inc
in
mov
sbb
out
mov
sbb
cmp
nop
stc
fs
repz
repnz
mov
sub
sub
push
rorb
mov
ljmp
clc
pop
lods
add
lds
loopne
inc
xchg
push
sbb
and
cpuid
test
sub
xlat
std
push
int
mov
fisubl
pop
inc
push
and
fimull
negl
repz
mov
dec
lcall
mov
mov
xor
sub
push
iret
add
inc
inc
imul
cld
ret
jne
fwait
cmpsl
and
fs
jge
inc
jle
into
xchg
mov
jae
mov
mov
add
arpl
jl
pushf
cmp
lcall
das
into
ret
mov
push
jecxz
add
push
cwtl
mov
xor
mov
pop
pop
fiadds
clc
adc
and
fistpll
mov
fidivrl
fisubrl
sub
fldcw
add
rcrb
pushw
xor
xlat
sbb
sub
inc
jg
and
dec
mov
or
data16
repnz
cmp
lock
dec
ret
mov
movsl
xor
in
inc
aam
push
jae
ds
cmc
push
fists
and
xor
int
test
dec
lock
movsb
arpl
inc
inc
cwtl
and
inc
jnp
mov
xchg
sub
inc
popf
int3
lcall
pushf
dec
loop
xor
stos
dec
jl
cltd
pop
cmp
sub
loop
outsl
mov
jmp
cmpsb
mov
sbb
movb
aad
in
fadd
test
fidivl
mov
jne
imul
aaa
scas
jp
push
jo
out
adc
in
stc
mov
sub
jns
leave
in
mov
push
cmp
arpl
or
adc
mov
push
daa
pusha
lock
jb
cmp
imul
loopne
addl
pop
and
std
testb
sub
in
icebp
fs
pop
out
jge
fsubr
adc
fmull
rcrb
lahf
jecxz
data16
dec
mov
inc
mov
pop
arpl
into
mov
cmpl
into
xor
xchg
aad
dec
roll
mov
outsl
call
sub
push
inc
mov
add
cld
pop
adc
push
fwait
outsl
mov
xor
adc
dec
in
xor
sahf
hlt
jl
adc
pop
pop
roll
jge
dec
mov
cwtl
pop
push
xchg
arpl
into
pop
mov
or
push
inc
cmp
in
aad
sbbb
lea
mov
lcall
pop
loope
in
sahf
and
add
push
mov
lea
pusha
rcll
sbb
inc
push
mov
xor
movsl
or
flds
or
cmp
call
add
hlt
icebp
and
repz
pop
dec
xor
stc
xchg
and
or
sbb
push
aam
add
mov
lds
adc
call
mov
clc
sbb
lock
mov
cld
pop
xor
rorb
jae
mov
mov
mov
mov
daa
inc
std
mov
jns
fldenv
bnd
dec
add
and
mov
in
addr16
xor
test
outsl
stc
sbb
cmp
xchg
xchg
aaa
cmp
neg
add
addr16
hlt
sub
bnd
sahf
stos
or
imul
leave
cmp
movsb
cs
fs
xrelease
std
shlb
enter
xor
jl
sti
scas
mov
or
add
arpl
adc
lret
xchg
testb
mov
outsb
test
cwtl
inc
xchg
daa
cmc
fdivrs
mov
loopne
xchg
add
pushl
pushf
movsl
sti
mov
xor
js
outsb
push
mov
add
out
addr16
inc
add
push
idivl
imul
shlb
lock
cli
cmpsb
inc
push
paddq
mov
into
loop
xchg
mov
pop
xor
sbb
outsb
fsts
mov
or
cli
es
or
aaa
xor
nop
xor
mov
out
jmp
and
cmp
dec
dec
pmaxsw
cmpsw
cmpsl
out
ret
scas
jns
stc
rorb
adc
test
and
xchg
pop
xchg
aas
popa
insb
mov
sbbl
pop
nop
or
ds
xor
mov
pusha
jo
fistpll
push
das
cltd
loope
push
mov
sahf
jo
gs
xor
mov
inc
rcll
add
mov
les
xchg
and
xlat
subb
inc
in
xor
outsb
jno
fisttpl
mov
pop
jbe
dec
pop
mov
fisubl
std
add
test
scas
fwait
mov
lcall
dec
fnstcw
jmp
xor
mov
lahf
shlb
mov
jb
pushl
push
fmull
lret
push
sub
inc
pop
dec
mov
xor
sub
mov
sub
leave
out
sub
lret
insb
push
fbstp
push
xchg
cmpsb
mov
sbb
imul
roll
mov
out
or
data16
imul
int3
inc
inc
xorl
sbb
dec
cltd
mov
call
jl
dec
and
test
or
es
or
sub
sbb
xorl
jl
and
mov
rcl
dec
dec
pop
test
icebp
int
jne
imul
sbb
or
pop
aam
fstps
loope
mov
xchg
push
lahf
mov
push
xchg
mov
xor
shlb
ja
mov
mov
les
mov
inc
stc
test
jne
xor
adc
daa
mov
mov
shl
jbe
push
lret
push
rol
lods
negl
inc
mov
jge
scas
in
mov
sbb
add
push
xor
dec
pop
lods
xchg
test
xchg
or
std
xchg
mov
test
int
xor
mov
sub
sub
fidivs
sbb
clc
dec
shlb
mov
mov
out
dec
aaa
push
xlat
push
andb
imul
lahf
pop
fsubp
push
push
dec
mov
lret
pushf
lahf
sub
jmp
mov
in
xor
lret
subl
insl
or
movsb
and
dec
in
jb
stos
inc
fimull
rcll
fwait
sub
and
jbe
fwait
push
adc
jo
das
pop
jmp
jno
xchg
cli
mov
js
xor
imul
insl
adc
aad
mov
shll
test
xor
push
pop
jge
mov
movsl
xorb
inc
out
inc
inc
insb
clc
jnp
movb
adc
shlb
daa
pop
adc
imul
push
sbb
mov
push
inc
or
xor
js
lahf
xchg
cwtl
icebp
cli
inc
addr16
or
sbb
movl
and
cs
movsb
pusha
js
and
cmp
mov
add
and
inc
cltd
mov
sbb
out
shl
xchg
mov
fwait
shlb
jge
jne
mov
lock
stc
lods
mov
xchg
clc
cmp
in
and
xor
insl
sub
orl
jnp
incb
mov
cmc
repz
mov
adc
sar
adcl
add
ficoml
jnp
add
mov
in
movsb
xor
icebp
pop
and
pop
movb
jo
mov
out
jecxz
sbb
inc
test
pop
or
push
sbb
lods
jmp
clc
gs
dec
mov
sbb
add
mov
mov
push
fbld
inc
xchg
pop
std
pop
iret
fdivrl
sub
adc
sbb
dec
dec
pop
push
mov
sub
cmp
add
in
sti
cwtl
sbb
psubsb
pop
ds
jmp
sbb
dec
imull
pop
mov
push
and
dec
push
adc
cmp
stc
jne
sbb
fidivrl
mov
mov
ret
jnp
aam
xor
jae
mov
data16
cmpsb
arpl
mov
dec
stos
mov
push
nop
sbb
sbb
lock
jecxz
dec
into
lret
ret
test
jp
jp
imul
push
jno
push
push
xchg
insb
in
in
mov
cwtl
loopne
cmp
jl
sbbl
imul
inc
push
mov
loopne
push
movsl
xchg
cs
push
cld
or
push
enter
ljmp
pop
or
jnp
and
fldt
xlat
scas
inc
iret
mov
sub
and
cmp
xchg
scas
aam
jge
pop
popa
in
xor
scas
idivl
cwtl
lock
xor
aam
push
pavgb
mov
das
mov
xor
cmp
adc
or
and
bndldx
dec
xchg
mov
adc
iret
push
add
fldl
lahf
push
inc
shlb
in
pop
cli
push
push
xchg
aaa
std
push
mov
push
pop
je
lock
sub
push
adcb
insl
shrb
iret
loope
dec
enter
mov
sub
insb
jno
add
ljmp
or
sub
jne
mov
sbb
push
pop
xor
inc
mov
cs
imul
pop
test
jo
mov
lea
lods
push
sub
and
jecxz
xor
ss
pop
jmp
popf
rolb
stc
xor
stos
dec
mov
and
xor
cwtl
movb
ss
pop
or
push
inc
out
pusha
jo
daa
dec
sbb
xchg
mov
out
inc
and
loope
or
sahf
out
cltd
lods
fsubr
adcb
and
call
xor
lods
ljmp
inc
js
sbb
xlat
adc
das
mov
jne
fdivrl
lods
loop
jb
or
movsb
stos
orl
sub
repnz
addr16
aas
inc
lds
in
hlt
adc
dec
pop
ret
push
enter
dec
ficoml
jo
arpl
dec
push
fadds
sbb
jo
jmp
add
int3
mov
and
xchg
lret
inc
push
or
mov
jge
mov
outsb
pop
dec
mov
enter
iret
jp
pop
jmp
push
jb
lock
insl
adc
jo
insl
and
test
adc
sub
sub
push
mov
test
add
push
jmp
pop
sti
das
pop
mov
pop
ficoml
dec
mov
negl
negl
fwait
adcb
scas
test
pushf
cmp
cmp
out
es
cmc
std
loop
mov
test
xor
insb
ficoml
cli
xchg
aaa
scas
xchg
sub
loop
jo
enter
in
fst
sbb
push
cmc
nopl
push
vmovss
adc
adc
and
movsb
mov
jno
mov
clc
fcomi
lret
ret
and
mov
mul
ret
jp
popf
pop
test
add
leave
in
gs
fs
inc
xor
mov
ret
xor
test
shlb
gs
mov
pop
sbb
fisttpl
jp
clc
fnstsw
push
loope
lea
fcoms
ds
mov
call
jl
mov
xchg
lret
and
addl
jp
aaa
dec
jle
pop
push
and
movsb
cmpl
sub
call
add
xchg
popa
ljmp
pusha
jge
inc
push
enter
inc
or
dec
jno
ljmp
mov
jg
popa
adc
sub
sbb
cmp
xchg
into
mov
mov
ret
scas
jnp
es
scas
push
dec
push
jg
imul
loopne
or
mov
std
dec
lret
ja
gs
add
mov
std
cld
xor
scas
test
loope
inc
xchg
add
das
inc
sbb
lods
sbb
inc
ror
lret
xor
ss
mov
pop
dec
dec
divl
pop
daa
sub
mov
fs
movsb
mov
push
xor
out
push
andb
xchg
xchg
jne
or
add
dec
ljmp
lahf
xor
ljmp
popf
jo
sub
adc
cmp
add
mov
pop
and
mov
or
mov
mov
imul
push
and
and
dec
sub
cltd
adc
add
push
mov
outsb
jbe
stc
push
roll
cmc
sub
fwait
add
lret
mov
jmp
enter
dec
jb
push
add
adc
inc
cld
mov
dec
add
mov
jmp
les
jns
push
dec
and
or
gs
xor
cld
lret
movsl
adc
addr16
rol
in
scas
loop
inc
sub
push
loop
pop
lahf
sarb
mov
addr16
pop
jo
push
ds
cli
pop
dec
scas
xchg
je
and
add
sbb
push
js
aas
loop
loop
pop
inc
mov
jp
mov
xchg
out
inc
jge
sub
xchg
mov
push
aas
sbb
xchg
lock
mov
rcr
jnp
xchg
add
movsb
leave
aam
cmpb
sahf
and
es
and
pop
outsl
out
pop
aam
sar
mov
or
loope
fs
fs
ds
int3
mov
adc
stos
lret
lods
nop
mov
sub
xor
xchg
jb
js
enter
and
imul
jae
cld
lods
and
xchg
lods
adc
sbb
mov
pop
adc
test
or
ficoms
shll
push
add
jne
add
push
das
mov
mov
sub
push
popa
push
ret
jmp
and
dec
and
sar
xor
mov
idivb
inc
das
mov
in
dec
mov
push
mov
in
xchg
cmp
mov
inc
mov
sarl
cwtl
push
inc
std
push
mov
push
xchg
cmp
sbb
xor
icebp
cld
cmp
pusha
cmpsl
hlt
jne
mov
push
mov
pop
stos
shl
and
sub
dec
push
adc
int
mov
xor
in
dec
testl
sti
xchg
cmp
add
pop
int
data16
xchg
mov
imul
inc
ds
movzwl
insl
cmp
pop
add
xchg
push
and
and
lea
push
adc
hlt
push
pop
jp
outsb
mov
test
lock
sbb
jmp
xor
pop
mov
mov
cmp
add
and
and
int
xchg
xlat
sub
in
add
imulb
sub
into
cmpsl
mov
fistpl
xor
jnp
bound
cmpsb
cltd
out
ret
enter
lret
add
jmp
sbb
pop
mull
rol
idivl
lcall
mov
sub
adcl
lods
popa
xchg
movsl
sub
test
jmp
or
lret
cmp
add
xchg
or
lret
xor
xor
jo
loop
sahf
mov
inc
das
inc
mov
or
dec
mov
fwait
jnp
out
lock
nop
in
push
sbbb
and
popf
inc
push
outsb
scas
jae
leave
imul
pop
inc
aas
in
cmpsl
mov
test
jno
ret
gs
xor
xchg
loopne
in
leave
in
sub
and
sbb
adc
adc
push
fldcw
pop
mov
in
arpl
jg
out
jge
cmp
lods
adc
and
pop
scas
xor
ret
aam
pop
out
dec
sarb
stos
call
mov
fs
xlat
sbb
in
and
out
mov
aas
add
jg
stc
sbb
adc
mov
lcall
dec
jecxz
out
pop
inc
pop
push
inc
cmpsb
inc
adc
jge
mov
popa
insl
movsb
xchg
adc
out
mov
sub
mov
lods
pop
sub
shrl
and
mov
cmpl
dec
mov
mov
add
or
ret
xchg
insb
out
push
pop
hlt
leave
xor
sub
or
cmpsb
jne
push
jo
ljmp
std
out
jecxz
stos
dec
testb
cmc
hlt
jbe
insb
pop
sbb
popa
insl
inc
cltd
jmp
jg
push
cmp
xchg
mov
mov
xor
sub
outsl
pop
add
rcl
pop
mov
sbb
pop
cli
loope
and
adc
arpl
sbb
inc
cmp
fnsave
xchg
dec
jge
ficoms
in
repz
std
fcoml
cmp
mov
rcr
out
inc
stos
scas
xchg
jbe
fwait
xor
aam
mov
test
xchg
mov
dec
mov
clc
xor
adcb
lds
insb
shlb
sti
add
lret
or
xchg
call
shlb
pop
xor
inc
cmc
movsb
adc
test
xchg
in
mov
subl
or
sahf
sahf
cmp
cld
sub
push
outsl
and
in
mov
dec
loope
adc
or
jecxz
ljmp
aaa
and
mov
popa
ljmp
loop
sub
mov
jmp
inc
sbb
call
aas
cmc
mov
and
adc
jno
dec
mov
mov
add
imulb
add
ret
popa
adc
xchg
imul
sub
in
pop
movsl
pop
call
es
add
icebp
clc
pushw
pop
mov
insl
cmpsl
iret
lds
jg
xchg
arpl
out
sbb
cmp
inc
aad
sti
lock
cld
lods
mov
mov
push
inc
sub
cmp
jp
pop
popf
test
inc
jge
inc
cltd
add
fwait
in
mov
fwait
mov
mov
fsubs
adc
and
lahf
or
mov
js
mov
and
and
inc
sbb
add
loope
sahf
insb
lea
push
paddw
cmp
xchg
movsb
jb
or
and
in
popf
shl
or
xor
pushf
inc
xchg
repnz
cmc
mov
lcall
rolb
mov
es
shr
pop
neg
add
shlb
clc
push
sti
jl
add
movsb
or
mov
popf
mov
sub
push
shlb
lcall
jl
scas
push
jb
fsubl
insl
mov
cli
movsb
popf
adc
xlat
lds
sbb
mov
push
les
inc
ficomps
das
sbb
sbb
movsl
pop
fwait
popf
mov
cmp
mov
jns
cs
jae
or
or
loop
mov
dec
testb
mov
pop
jle
insl
test
rclb
or
sub
cld
mov
add
dec
push
mov
push
jnp
repz
cli
push
jge
sbb
ljmp
js
xor
mov
sub
inc
adc
hlt
xchg
push
inc
xor
pinsrw
in
pop
pop
out
mov
outsl
mov
inc
rcl
xor
inc
test
mov
jo
arpl
mov
or
sahf
xchg
icebp
aas
mov
jmp
xchg
das
outsl
xor
cmc
mov
inc
inc
ss
dec
lret
daa
outsl
pop
add
movsl
dec
aam
fsubr
mov
sub
cltd
pop
mov
add
adc
jbe
mov
push
lds
sub
cli
cmp
rcrb
rolb
adc
adc
daa
jmp
in
divb
lds
cld
mov
or
fmulp
pop
inc
mov
mov
negb
shll
push
popf
sbb
fsubs
mov
pop
or
pop
lock
out
mov
jmp
cmc
aas
mov
jnp
xor
mov
dec
in
inc
movsl
pop
or
push
fimull
xchg
hlt
mov
push
cli
mov
mov
mov
cmpsb
adcl
in
xchg
and
lods
iret
movsb
pop
and
test
insb
cmp
add
gs
cmp
push
test
xchg
out
xchg
pushf
cmp
test
jp
and
xlat
dec
xlat
jae
fistps
test
arpl
xchg
cmp
stos
rclb
xor
movsb
lods
cmp
push
xchg
pop
push
sbb
loope
mov
jns
je
add
cmp
or
iret
mov
jmp
es
ja
mov
insl
add
les
xor
mov
xchg
pop
mov
mov
divl
xchg
mov
xor
sub
pop
adc
hlt
lea
add
inc
loope
popf
adc
sbb
xor
mov
jns
in
int3
and
and
nop
pop
adc
xchg
int
lock
jle
mov
mov
call
shr
out
cmpsl
pop
jne
pop
aad
lds
in
xor
aas
sbb
push
jmp
mov
dec
mov
add
push
mov
cmp
push
mov
mov
mov
xchg
sub
jp
xchg
clc
cli
mov
loop
pop
loope
dec
cmp
mov
mov
xchg
sub
repnz
cmpsl
or
lcall
test
mov
dec
jl
pop
push
sub
adc
aaa
dec
divb
les
cmp
mov
out
call
jnp
add
fcompp
test
outsb
push
mov
push
stc
or
mov
mov
gs
mov
mov
mov
imul
sub
inc
imul
out
lcall
lods
cltd
imul
adc
pop
cmpl
test
scas
das
scas
test
and
stc
cmpsb
jmp
repnz
sar
es
test
inc
push
mov
mov
inc
sub
rorb
mov
ja
sbb
iret
scas
sbb
mov
xchg
dec
jns
outsl
add
sbb
lds
cwtd
cmpsl
jne
test
adcl
cmp
mov
sbb
fcoml
lods
mov
in
xor
mov
pop
sub
lods
xor
dec
repnz
inc
pusha
mov
int
stc
scas
ret
cmc
iret
movsl
xchg
cltd
test
inc
mov
movsl
and
mov
sahf
sbb
rorb
lret
divb
cld
fsubrs
and
push
loope
sbb
jl
mov
xchg
jg
lods
scas
jbe
mov
mov
stc
fdivrs
xorl
mov
inc
testb
xor
fs
rcrb
shr
jmp
std
cld
jne
iret
xchg
mov
das
cli
dec
lock
push
nop
pop
cmp
lods
add
sub
daa
pop
into
pusha
iret
test
mov
fcmovbe
pop
add
inc
icebp
imul
xchg
push
inc
cltd
punpcklwd
jbe
jb
loop
call
add
and
loopne
pop
cld
jo
repz
out
adc
fwait
mov
adc
fsub
cmp
stos
mov
leave
jne
gs
mov
repnz
sub
repnz
cltd
mov
pop
nop
jb
fstps
inc
jp
push
in
mov
or
and
add
and
sbb
lods
shr
shrb
fmuls
xchg
in
lcall
sbb
call
imul
cli
sub
call
or
xchg
insl
in
sub
cmp
or
out
scas
es
iret
repz
cmp
mov
add
cs
pop
adc
bswap
and
cld
pop
push
les
inc
int3
push
dec
xchg
add
in
sbb
test
pop
inc
in
ret
nop
jb
lret
cmc
adc
pop
adcl
scas
xor
dec
xor
mov
pop
mov
xchg
lret
and
jne
mov
aaa
jecxz
pop
aam
in
cmpsb
ret
sub
les
adc
addl
in
pop
xor
and
ss
push
stos
adc
mov
push
sub
pop
scas
js
mov
or
out
sti
add
int3
cmp
stos
mov
sbb
xchg
lret
mov
sub
movsl
adc
mov
fs
pop
out
mov
imul
or
jne
ss
cmp
mov
movl
push
rcrb
adc
stos
dec
cmpl
test
aam
push
inc
lcall
and
test
pop
js
and
jmp
rcr
scas
inc
cmp
incb
int3
pop
ret
xchg
inc
push
rcrb
sbb
jb
xchg
pop
xor
fwait
adc
mov
outsb
aad
addr16
dec
jle
int3
xor
or
daa
leave
movsl
shll
add
push
sbb
or
pop
lods
pop
mov
das
loope
mov
sub
das
mov
jns,pt
cld
fs
mov
outsb
lock
ja
outsl
gs
xor
mov
aas
in
lcall
or
sub
inc
push
jno
scas
cld
fstps
outsb
add
iret
cmp
pop
or
movsb
cmpsb
fsubrl
mov
lds
lahf
adc
jnp
out
mov
push
xchg
cs
jl
pop
and
test
cmpsl
mov
lods
inc
cmp
ret
lret
insl
addb
ficoms
in
movsb
sbb
scas
cltd
rcll
pop
push
dec
es
cmp
addb
jecxz
push
leave
hlt
repnz
sbb
jbe
dec
mov
mov
jg
cld
mov
data16
mov
xor
test
push
lods
scas
xchg
fwait
cmp
int3
cmp
push
sub
aad
or
das
mov
movsl
test
js
pop
pop
or
mov
xor
lea
mov
sub
lock
shr
xchg
stc
jo
int3
rclb
pusha
pop
mov
jg
jge
add
xor
addr16
ja
pop
xor
arpl
lock
je
cs
add
pop
stc
cmp
mov
cmp
cmc
adc
iret
pop
cmp
in
xor
out
daa
in
loopne
jbe
xor
mov
ss
add
cld
ror
leave
dec
sub
ljmp
ret
push
or
cmc
mov
fnstsw
and
repnz
ja
mov
adc
outsl
sbb
mov
and
stos
add
ja
shlb
fcoms
and
jle
add
nop
jbe
cwtl
mov
pop
and
hlt
sahf
out
stos
or
push
dec
int
arpl
jmp
out
push
daa
dec
lea
push
shrb
push
les
js
iret
jle
cmpsl
push
inc
add
cmp
cs
scas
or
xchg
mov
jmp
lcall
cmp
cltd
mov
ja
stc
movsl
sbbb
aad
gs
ds
add
lods
adc
mov
jle
sub
add
or
loop
pop
test
aam
xor
jo
shll
fcmovb
push
lret
push
mov
mov
jle
addl
stos
pop
inc
add
adc
jg
loope
push
add
faddl
daa
sbb
fildll
cmp
outsl
iret
or
movsl
xchg
mov
jae
je
mov
push
mulb
xor
addr16
dec
iret
adc
sbb
adc
jo
inc
push
iret
sbb
push
call
cmp
push
hlt
dec
sub
test
popf
shrl
fwait
mov
rcl
push
in
mov
add
repnz
les
fwait
push
push
in
ficompl
fucom
xchg
mov
fs
pop
sub
cmp
clc
sub
fidivrs
pushf
xchg
xchg
test
xchg
jmp
imul
mov
or
lock
psadbw
lods
dec
and
mov
mov
lcall
mov
pop
das
mov
inc
pop
dec
pop
icebp
push
insb
and
loop
sub
xchg
cld
imul
iret
or
into
in
mov
aas
icebp
pop
lea
shll
mov
les
jae
mov
hlt
pop
mov
jge
out
mov
pop
nop
cmpsb
dec
sti
or
test
int3
insb
push
and
lret
shlb
adc
sub
scas
adc
stos
cmpsb
cmp
addl
les
inc
sahf
les
adc
imul
lahf
mov
and
stos
xchg
cmc
inc
xchg
jmp
ljmp
add
dec
insl
jle
aad
sti
scas
jae
ja
add
cmp
aam
xor
push
cmpsb
pop
out
adc
inc
cmp
into
dec
inc
loop
push
xor
push
cmpsl
scas
dec
push
xor
pop
ficoms
mov
add
je
jg
lds
dec
adc
mov
xchg
ljmp
push
stos
inc
xor
sbb
mov
stos
sub
loope
xchg
or
je
stc
icebp
pop
dec
cmp
sahf
adc
cmp
jg
fs
es
arpl
pop
cmpsl
bound
into
pop
idiv
dec
push
or
inc
js
stc
inc
icebp
shll
mov
xor
sbb
sub
add
mov
sbb
roll
frstor
fsub
lods
or
jge
addb
push
adc
pop
jne
insb
mov
mov
jmp
movsl
stos
mov
sbb
or
mov
mov
lret
dec
int
push
mov
cmp
arpl
aad
or
push
sbb
imull
dec
xchg
popf
and
jl
int3
gs
jecxz
push
push
jle
out
or
in
or
push
imul
stc
dec
xchg
pop
push
xor
mov
add
jns
sub
js
push
mov
sub
mov
jge
cmpsl
dec
lcall
jno
sub
fs
jecxz
pop
jecxz
hlt
lds
cmp
ret
pop
bound
je
sub
pop
jne
fwait
inc
mov
adc
pop
cmp
stos
fwait
jecxz
sub
shl
dec
lcall
pop
fdivr
incl
add
xor
add
adc
cmp
xor
add
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
ja
jmp
pushl
push
call
jmp
mov
xor
xor
or
mov
xor
sub
add
movl
cmpl
je
cmpl
jl
jmp
push
push
push
call
cmpl
jne
mov
dec
mov
xor
or
dec
mov
jmp
mov
movl
movl
movl
xor
or
adc
mov
mov
add
mov
xor
adc
add
not
mov
movl
mov
je
movl
mov
andl
mov
inc
mov
cmpl
ja
jmp
push
call
cmpl
jb
mov
xor
xor
andl
sub
sub
xor
sbb
mov
xor
mov
andl
mov
inc
mov
cmpl
jg
jmp
pushl
pushl
push
push
pushl
pushl
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
sbbl
add
subl
imul
and
mov
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
ja
jmp
push
pushl
push
call
jmp
mov
subl
add
or
and
mov
mov
xor
mov
addl
add
xorl
xor
mov
xor
mov
adc
mov
adcl
add
and
mov
xor
mov
mov
xorl
lea
mov
and
mov
adc
mov
sub
sub
add
incl
mov
mov
xor
xorl
add
jne
jmp
andl
xor
xor
inc
mov
cmpl
jbe
jmp
push
push
call
cmpl
jb
mov
mov
sub
mov
sub
andl
jmp
xor
add
inc
mov
cmpl
jae
cmpl
jg
jmp
push
push
call
cmpl
jne
mov
inc
mov
jmp
xor
decl
mov
sub
mov
or
mov
xor
xor
sub
xorl
sub
andl
xor
movl
mov
mov
mov
movl
jmp
mov
andl
mov
inc
mov
cmpl
jle
jmp
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
adcl
xor
andl
xor
andl
sub
sub
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jg
jmp
push
pushl
pushl
call
jmp
xor
or
mov
mov
mov
subl
add
addl
imul
movzbl
or
mov
mov
subl
mov
xorl
add
or
adc
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jb
jmp
push
push
push
push
pushl
push
pushl
call
jmp
mov
mov
add
xor
mov
mov
mov
add
and
mov
mov
mov
lea
mov
mov
mov
sub
add
mov
mov
xor
add
jne
mov
mov
mov
cmp
je
mov
mov
mov
mov
xor
cmp
jne
mov
mov
xor
movsbl
mov
xor
add
cmp
mov
mov
mov
je
xor
add
mov
je
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
add
imul
mov
mov
mov
add
or
mov
mov
mov
add
jmp
stos
fsubrl
sti
mov
add
call
jge
xor
jp
ret
inc
add
inc
push
pop
bnd
call
mov
jmp
inc
adc
pop
lret
inc
ss
push
lock
rorl
sub
xor
test
pop
lret
mov
sub
add
jns
pop
arpl
mov
jmp
scas
push
xor
push
xor
pop
mov
filds
jle
xchg
sbb
loope
rorb
mov
je
cmc
rol
shr
inc
int3
mov
loopne
insl
add
sub
lods
data16
jno
sub
fwait
xor
fsubr
adc
fs
sbb
cmp
xlat
fdivl
ss
mov
roll
jae
addb
mov
je
repnz
mov
xor
push
lret
ror
lods
aad
and
andb
xchg
mov
cld
adc
jb
fdivrl
pop
cmp
call
add
push
ljmp
lds
scas
mov
add
out
fbstp
clc
push
cs
out
call
rsqrtps
cld
mov
dec
sub
inc
cmc
and
test
lahf
push
fadds
mov
and
mov
mov
scas
fstl
xchg
lret
lret
sbbw
pop
mov
outsb
jl
push
shr
mov
arpl
sub
loope
xchg
addr16
ljmp
pusha
cmc
les
ss
in
jl
adc
push
mov
cwtl
xor
cmp
popf
ljmp
add
xchg
inc
mov
repz
or
push
dec
mov
sbb
mov
inc
in
adc
inc
shrb
out
in
pop
scas
jl
mov
mov
xchg
and
inc
das
clc
push
mov
loope
lahf
and
mov
lcall
or
lret
pop
sub
lods
xchg
pusha
dec
mov
pusha
and
pop
outsb
pusha
and
repz
pop
adcb
scas
cmc
mov
xchg
sub
popa
cmp
or
adcb
scas
cs
int
jns
mov
pop
inc
and
or
adc
scas
ss
and
mov
sub
xor
add
lret
sti
inc
inc
inc
test
mov
aad
and
rol
mov
test
mov
repz
fdivs
mov
cli
insb
adc
adc
xor
push
je
aad
leave
mov
lcall
fldt
sarl
les
lds
scas
push
push
in
ds
push
or
inc
es
sar
out
push
mov
test
popf
pop
sub
inc
adc
stos
and
jbe
dec
mov
push
xchg
push
mov
pop
in
push
sbb
loop
pusha
test
pop
daa
fsubl
xor
dec
inc
nop
pop
adc
fdivr
adc
sub
aad
cmp
inc
out
or
mov
jmp
adc
aaa
inc
lods
mov
or
les
ret
int
mov
outsl
push
adcb
dec
push
and
imul
xchg
outsl
daa
ret
or
stos
adc
lea
jg
inc
mov
and
pop
jl
inc
in
adcb
adc
in
jb
lock
add
dec
or
lock
cmp
push
sahf
mov
gs
add
icebp
iret
int
jns
push
in
pop
pop
inc
sarb
inc
ror
test
scas
addr16
es
add
scas
insb
jno
fs
aam
lds
adc
mov
mov
movsb
xchg
xchg
ret
test
pop
or
pop
mov
sar
cld
push
xchg
dec
std
aaa
push
sub
mov
xchg
mov
lret
mov
fdivrp
cmc
jnp
dec
pop
xchg
cmp
ret
out
adc
test
jmp
iret
sub
sbb
int3
mov
incb
sbbb
pop
jno
mov
idiv
push
pop
sub
popf
leave
mov
je
mov
lea
mov
xlat
int
pop
mov
dec
xchg
clc
pop
jle
loope
out
pop
mov
iret
lahf
icebp
mov
gs
xchg
push
and
mov
lcall
cwtl
or
adc
or
sbb
mov
enter
test
ret
out
lock
inc
ss
pop
add
mov
insl
and
cmpsl
push
jg
popa
pushf
push
inc
insb
in
fsts
mov
sbb
ja
add
xor
push
mov
sbb
sahf
nop
jmp
push
or
xchg
inc
mov
sbb
mov
ljmp
adc
and
xchg
pop
sbbb
pop
inc
test
cmp
dec
add
cli
negb
fistl
dec
cmp
rorb
stos
inc
sbb
mov
fists
sub
fistpl
inc
jg
dec
hlt
sbb
push
fcmovnbe
loopne
mov
ljmp
fnstenv
mov
or
fsubrs
lds
jno
xchg
mov
dec
lret
cmpl
mov
arpl
jae
inc
push
fwait
xchg
imul
ljmp
ficoms
and
jae
inc
sub
dec
fdiv
pop
lds
mov
imul
sbb
cld
adc
cmp
sub
jmp
or
add
popa
jge
fmuls
cmpsb
sub
daa
movsl
or
ret
scas
stc
push
insb
cli
test
mov
dec
sub
xchg
in
aas
fsubrs
or
sbb
mov
jg
sahf
stos
add
cltd
ja
test
xchg
sub
js
sub
int
cmp
imul
push
movsl
subb
out
pop
sbb
xchg
jb
adc
or
mov
push
or
jne
pop
nop
push
mov
cmpsl
adcl
movsl
adc
pop
adcl
or
inc
test
lahf
push
pop
cltd
push
mull
sbb
adc
pop
mov
hlt
lea
pop
xchg
aam
mov
ja
fisttps
and
fs
rcrl
jg
out
or
dec
jne
or
inc
mov
in
sub
pop
iret
mov
cmpsl
pop
es
or
inc
int3
loope
inc
fstl
popa
popa
cmp
mov
pushf
or
jecxz
xchg
rcll
push
je
shrl
sbb
adc
xchg
clc
movsb
mov
push
rcrb
sbb
repnz
insb
jnp
jb
sbbl
mov
leave
std
push
or
and
push
xchg
out
jecxz
push
and
push
sbb
outsb
jl
test
test
pusha
jbe
sub
jp
mov
into
jbe
mov
mov
std
mov
loop
cld
inc
rcll
je
into
jle
adcl
mulb
and
mov
pop
xor
in
pop
sbb
add
fwait
into
scas
leave
sub
jmp
and
sbb
xchg
test
xchg
pop
lcall
mov
ss
repz
inc
mov
jl
pop
dec
ret
movsb
fnstenv
fidivrl
xor
repz
test
cli
add
jg
or
stc
dec
ret
aas
cmpsl
pop
cmp
ds
aam
jno
pusha
inc
testl
inc
iret
pop
pop
aaa
scas
pop
add
mov
xor
pop
jo
cmc
xor
in
sbb
jmp
shrl
pop
and
pop
pop
inc
and
decl
je
fnstenv
fistl
movsl
dec
add
push
xor
mov
jge
inc
lea
out
xchg
mov
dec
daa
xor
add
pop
loopne
sub
sub
jmp
and
fwait
or
lahf
adc
sbb
test
pushf
stos
inc
inc
out
jmp
sub
mov
ret
aad
xchg
loopne
cld
dec
mov
cmpsl
mov
push
fs
es
cmp
cmp
clc
mov
rcl
jns
repz
dec
and
in
and
cltd
jge
or
lods
popa
or
out
mov
jns
orb
jo
pushl
cmpsl
ss
or
pushf
xor
je
stc
call
cmp
add
sbb
mov
xor
dec
addb
push
lds
ret
clc
cmc
sbb
jle
push
push
popf
mov
mov
sub
cwtl
sub
cld
and
scas
jle
add
fdivl
test
push
pusha
and
insl
cmp
aaa
jb
push
sbb
cwtl
test
test
and
pushf
pop
call
call
mov
inc
pop
test
xchg
jbe
dec
sahf
dec
push
outsb
scas
shrb
insl
sbb
jae
hlt
or
sbb
sub
lcall
push
andb
jl
jo
dec
loopne
xor
xchg
push
sbb
jnp
orl
adc
jmp
mov
pusha
clc
or
pop
js
test
je
mov
lods
sbb
cld
mov
add
xor
ds
sbb
mov
mov
int3
mov
or
add
inc
scas
test
jb
mov
outsl
dec
loop
inc
xchg
add
lcall
ffreep
cmp
push
ficoms
ljmp
pop
or
pop
xor
xor
push
in
ljmp
rol
add
sub
mov
sub
mov
dec
popa
add
leave
push
or
dec
cmpsl
inc
mov
mov
inc
das
ret
xor
arpl
sbb
inc
and
dec
jmp
pop
aam
leave
ret
idivl
cmp
mov
lcall
sub
cmpl
sbb
or
movsl
push
cld
push
pop
insl
enter
xchg
imul
mov
push
mov
pop
adc
hlt
dec
lods
into
push
jl
mov
sbb
ja
clc
jmp
sub
fildll
and
sbb
adc
push
and
mov
sbb
jnp
imul
mov
mov
inc
cmp
mov
push
scas
push
sub
jecxz
mov
dec
mov
sarb
sub
mov
scas
pop
aaa
cmp
lcall
pop
pushf
xor
add
mov
aad
aam
cmpsb
adc
add
cmp
or
rcr
mov
and
or
fwait
pop
mov
xchg
ja
mov
popf
sub
mov
movb
pop
mov
int
gs
stc
pop
dec
jp
and
arpl
pop
sahf
mov
mov
clc
in
negl
aam
xor
out
jne
rorl
and
out
sbb
mov
xchg
shlb
sar
out
imul
cmp
pop
enter
and
pop
les
adc
inc
jne
bnd
sbb
cmp
mov
inc
jne
add
sbbl
sbb
aad
cli
nop
into
mov
cwtl
xchg
jle
stc
cltd
stos
pop
js
adc
negb
gs
jnp
lods
movsb
or
sub
mov
pop
out
inc
movsl
dec
lcall
pop
pop
ljmp
aaa
xchg
faddl
test
dec
mov
push
and
lods
push
nop
loop
rclb
mov
nop
mov
inc
iret
sub
mov
loop
call
les
push
testl
lret
hlt
pop
rcll
cmp
out
cmpsb
xor
pop
aaa
mov
and
xchg
pusha
js
lock
xchg
shlb
jmp
comiss
stos
sub
cmpsb
jl
in
mov
popa
xchg
or
icebp
aaa
dec
movsl
mov
push
mov
out
xorl
subb
or
dec
sbb
mov
mov
insb
push
cmp
lcall
mov
sub
dec
jge
sub
xchg
cmp
enter
stc
dec
jmp
fstl
or
in
cmp
shl
xchg
cmp
rcr
dec
rcrb
xor
and
jo
or
pop
gs
dec
inc
add
inc
sar
hlt
mov
sbb
lock
xchg
cmp
sub
jp
push
pop
enter
sub
xchg
cmpb
dec
out
add
and
frstor
xchg
stos
fs
dec
gs
and
jmp
mov
sbb
mov
or
in
fmulp
out
add
cltd
xchg
fisttpll
mov
sbb
pop
or
xor
dec
mov
sbb
adc
das
push
push
shrb
inc
xor
push
jb
es
dec
cltd
inc
sti
adc
mov
sbb
pop
sub
mov
xchg
test
fnsave
loope
jg
rorb
mov
daa
cwtl
enter
push
mov
cli
lods
xlat
mov
dec
cmp
xor
cwtl
push
sub
popa
dec
outsb
xlat
xor
lods
dec
imul
into
pushaw
push
xchg
mov
xchg
inc
pop
inc
mov
sarb
push
fidivs
sub
jnp
outsl
stc
mov
push
icebp
inc
fmull
or
xchg
out
imul
leave
fndisi(8087
sbb
adc
jecxz
and
pop
inc
mov
cmpsb
and
int
repz
fldenv
sub
js
out
sbb
jo
into
pop
mov
call
jnp
add
cwtl
rcr
in
mov
xor
ffreep
and
lret
out
test
jmp
jmp
gs
push
lods
sub
cmp
test
cmp
cmpsb
movsb
shrl
mov
stos
add
stos
jb
gs
sub
stos
notb
sbb
imulb
dec
cmp
mov
adc
lret
lods
or
out
xor
sbb
psubd
xchg
lret
mov
push
ljmp
push
icebp
pop
xchg
adc
dec
add
sub
xor
jne
push
clc
filds
cmp
mov
shlb
dec
and
pop
popa
jg
movsl
lds
es
adc
call
sub
sub
dec
xor
loop,pn
pushf
pop
ret
ja
dec
icebp
lock
daa
push
sub
sbb
inc
loop
or
adc
mov
add
mov
mov
popf
call
mov
push
xlat
stos
sbb
nop
mov
cmp
sbb
xor
movsb
aaa
xor
xchg
jecxz
sub
scas
vpand
mov
jge
icebp
and
cmpsl
loop
and
xchg
scas
imul
das
mov
aaa
dec
ret
mov
pop
mov
sbb
xchg
idivl
push
inc
lahf
add
or
divl
dec
mov
sub
cmp
cmpsl
negb
inc
fdivrl
and
mov
incl
xchg
dec
popa
in
js
pop
adc
stos
std
dec
clts
aaa
mov
push
add
inc
sub
fs
jnp
stc
lahf
and
add
lea
cs
adc
ret
push
dec
je
adc
jp
movl
test
ja
pop
fbstp
imul
fwait
sar
add
mov
cmp
leave
call
dec
daa
pop
add
pusha
pcmpeqb
push
call
lds
fcoms
inc
fisttpll
out
add
adc
lret
shll
movl
push
mov
mov
enter
adc
or
xchg
addb
roll
jl
in
int
mov
jne
cld
sub
adc
push
adc
test
adc
adc
dec
std
int
push
clc
out
xchg
jnp
or
cld
mov
xor
adc
lea
pop
add
mov
push
insb
inc
jg
sbb
fdecstp
jg
mov
out
push
jae
xor
mov
dec
aad
dec
dec
and
jge
in
xor
stos
repnz
fdivs
popa
outsl
std
fnstcw
xchg
gs
inc
lret
daa
add
out
cld
into
scas
dec
or
test
and
aaa
mov
icebp
jb
jns
popa
dec
fcmovbe
or
out
jne
fs
dec
xor
insb
mov
mov
sub
push
push
and
aad
inc
jno
push
xlat
cmc
mov
cmpsb
adc
pop
mov
in
rcrl
xchg
test
xchg
lret
mov
mov
cmc
ds
enter
xor
push
dec
fstp
dec
push
sub
dec
bound
sub
rcll
pop
adc
outsl
lahf
rcl
push
fsubrp
fs
das
cwtl
xor
xchg
jb
pop
fisttpl
popa
sub
xchg
sbb
rcll
pop
xchg
outsl
xchg
xchg
popa
sub
xor
push
mov
or
adc
repnz
scas
xchg
cmp
mov
push
loope
adc
sbb
popf
call
enter
inc
test
into
cltd
xor
stos
loop
inc
scas
test
pop
xchg
ret
or
ss
jb
sub
mov
stc
lahf
sahf
aas
push
push
pusha
and
fiaddl
fcompl
mov
mov
leave
mov
subb
cltd
cli
dec
xchg
sub
jl
enter
push
xchg
daa
lret
iret
pop
pandn
sbb
in
jnp
out
jge
sub
loop
xchg
imull
pushw
xor
pop
xchg
or
dec
xor
dec
dec
mov
lret
add
jo
fisubs
pop
sahf
add
cmp
jbe
ja
int3
mov
or
pop
sub
add
pop
sub
test
xchg
mov
fcomp
add
and
rclb
ret
pop
imul
std
ret
aad
pop
xchg
mov
stc
adc
cltd
sub
mov
sbb
mov
shll
push
enter
xor
call
loopw
js
sbb
js
inc
adc
sbb
adc
jns
mov
inc
inc
sub
sbb
pop
mov
sbb
inc
sbb
pop
cmpsb
mov
xor
or
cld
pop
lock
ljmp
mov
xor
je
mov
insl
mov
mov
mov
fidivrl
fnstcw
mov
mov
push
jg
xor
dec
icebp
clc
sahf
jge
in
cltd
pop
icebp
in
out
mov
mov
pop
xor
stc
in
push
pop
pop
clc
adcb
pop
push
adc
xchg
jl
adc
push
xchg
sbb
sbb
pop
pop
pop
inc
fucomi
or
dec
cmp
dec
ret
outsb
insl
xchg
insb
int3
insl
xchg
push
adc
rcll
data16
xor
popa
and
not
sbb
or
lds
lea
dec
jae
dec
and
and
push
addb
pop
push
ds
inc
xlat
in
incl
lahf
jg
jne
lea
roll
add
lret
pop
mov
cs
nop
stc
adc
insb
repnz
sub
subb
test
pop
sbb
pop
inc
push
cmpsl
mov
dec
ret
jl
jmp
or
and
dec
cld
jg
push
push
or
add
and
stc
lock
outsl
mov
inc
sub
add
pop
mov
popa
pop
push
iret
push
sbbl
adc
push
pop
or
movsl
mov
and
shll
mov
inc
add
std
cmp
inc
jp
aam
out
shlb
dec
lds
lahf
test
cmp
ror
jecxz
jb
ja
into
jge
xchg
faddl
adc
test
jbe
xor
cmpsl
bound
add
ud1
shlb
jmp
mov
inc
call
ljmp
in
test
adc
mov
mov
aas
jo
push
xlat
lahf
pop
push
add
int3
enter
mov
mov
insb
mov
lods
fadd
lretw
xor
loop
ret
fcompl
adc
cmp
pop
sbb
ds
dec
add
das
inc
xchg
js
sti
or
push
enter
xchg
ret
sahf
in
sub
std
test
push
sbb
add
fwait
out
push
cmp
shl
or
and
mov
xor
shlb
cbtw
xchg
inc
mov
lock
stos
data16
and
loop
leave
mov
xor
jp,pn
pop
push
dec
daa
add
xor
pop
xchg
test
loopne
jno
sub
lock
leave
pop
mov
dec
jp
iret
mov
mov
fcmovnbe
test
fistpl
pop
outsl
fcompl
sub
cmp
bound
test
pop
in
xchg
xchg
ret
sbb
jg
cmp
in
cli
insb
pop
fwait
mov
pushl
movsb
pop
pop
push
sahf
scas
in
pop
jmp
fadds
add
mov
stc
dec
or
jmp
lret
cltd
cwtl
xchg
pop
push
shrb
sub
aaa
popa
movsl
sbb
inc
inc
xchg
mov
sbb
shr
sbb
add
movsl
inc
pop
sbb
push
leave
cmpsl
sbb
nop
xchg
jns
jnp
jae
cmp
insb
movswl
jp
sahf
aad
jne
testb
cs
sbb
mov
test
xchg
test
jbe
orb
or
mov
jbe
push
call
aas
mov
inc
ja
inc
sbb
dec
repz
arpl
addr16
movsl
std
test
or
cmp
cmpsb
rcll
push
sbbl
ljmp
xor
mov
xchg
pop
mov
lret
mov
test
addl
dec
mov
aaa
push
notb
scas
inc
ljmp
xor
ret
fwait
pop
insl
pop
and
cmp
jnp
jns
inc
cmp
mov
jns
adc
sub
pop
sbb
push
mov
push
decl
roll
push
adc
aaa
adc
orl
push
leave
inc
lds
call
mov
aaa
push
jne
notl
lods
cmpsl
sarl
int
push
xor
pop
aaa
mov
push
push
lock
or
bound
mov
lcall
push
je
ja
clc
call
mov
ljmp
cmp
lea
xchg
dec
nop
ffree
or
scas
mov
nop
mov
rcrl
pusha
sub
stc
je
popf
sub
cmpl
ja
incb
mov
lcall
and
lret
xchg
shl
push
aad
jne
add
aaa
jecxz
cmp
pusha
das
or
mov
out
jmp
shll
fldl
and
push
pop
mov
pop
jnp
xchg
div
lods
pop
lock
sahf
stc
nop
cmpsb
cltd
stc
xor
test
pop
mov
dec
and
cmp
outsb
inc
add
inc
and
mov
jmp
mov
popf
inc
push
mov
mov
pusha
movsl
sbb
frstor
out
lret
int
daa
and
sub
xchg
rcrb
cmpsl
xor
std
sahf
push
in
fsub
gs
pop
arpl
adc
mov
cmp
adc
rcl
mov
add
jle
mov
fs
cmp
and
xchg
and
mov
cmp
lods
out
cmpsb
xchg
out
popf
and
repnz
push
push
outsl
lea
push
lahf
popf
sbb
lahf
pop
js
mov
cld
mov
roll
pop
xor
ret
xor
mov
popa
scas
fsub
cmp
mov
je
nop
mov
cmp
xor
dec
sbb
mov
test
popa
sahf
stc
in
aas
in
mov
jp
je
sbbl
scas
iret
lods
xchg
scas
lds
std
dec
adc
xor
push
jp
mov
popa
cmpsb
mov
shrb
push
dec
test
pop
sub
aas
rcrb
out
mov
and
xor
xchg
js
iret
dec
sub
mov
xor
mov
ljmp
mov
pop
xchg
xchg
ret
sub
mov
mov
out
out
xor
mov
xchg
popf
mov
inc
push
dec
jne
inc
mov
adc
nop
add
sub
jg
movups
or
or
into
mov
aaa
fdivs
insl
idivb
stos
pop
pop
mov
jp
sub
pop
rcrl
cmpsb
xor
cwtl
push
sti
aam
in
aam
rcll
adc
jo
xchg
fs
push
aas
ljmp
aaa
cmp
scas
not
aam
out
xorb
nop
jb
divl
lods
mov
repz
push
adcl
fsubs
pusha
sub
fistl
mov
push
push
insb
cltd
adc
imul
jl
jb
sbb
and
xchg
push
jns
and
sbb
jge
es
mov
aam
sbb
hlt
jge
js
fcmovne
push
ret
add
movb
sub
push
out
js
push
mov
and
mov
and
jl
and
jno
insl
gs
jno
repz
fabs
in
jno
mov
mov
ret
pop
mov
ret
dec
arpl
divl
stos
cmpsb
xchg
shll
sbb
inc
xchg
pop
cmc
fldt
popf
xchg
inc
push
out
mov
lea
push
inc
enter
jmp
mov
mov
push
and
mov
iret
outsl
pop
dec
rcll
lret
jg
ficoml
dec
jmp
xchg
jl
inc
adc
lcall
adc
xchg
mov
aad
lds
push
jae
fwait
fwait
mov
pop
loope
icebp
cwtl
cmp
das
and
mov
outsb
mov
jecxz
jg
mov
into
test
ss
insl
cmp
addl
lock
xchg
mov
aaa
pusha
int3
test
and
mov
std
les
cmp
aad
movsb
out
roll
loope
add
pop
cmc
sbb
mov
xchg
mov
mov
orl
ss
mov
cltd
mov
pop
ljmp
ja
rclb
jb
sub
dec
call
push
popa
pop
fstl
out
sbb
flds
mov
dec
out
inc
lods
test
xchg
push
sbb
lods
aaa
dec
ret
dec
xchg
xorl
xchg
dec
pop
andb
cmp
jmp
jg
fildl
jno
mov
ljmp
clc
mov
lds
data16
dec
cmp
pop
repz
and
inc
shrl
clc
cmp
shll
dec
cmp
inc
pop
pop
mov
mov
lret
ret
sbb
xor
mov
and
jb
pop
sub
idivl
es
rcr
ljmp
inc
adcl
lea
xchg
jle
ds
cmp
or
inc
es
cmp
mov
dec
cmpsl
clc
push
fmulp
out
mov
mov
fdivl
mov
sbb
mov
xchg
mov
pop
jbe
sub
imul
subl
jnp
pop
ss
lods
mov
leave
and
jae
stos
dec
dec
pop
add
mov
pusha
jb
cmp
std
add
je
mov
pop
inc
jg
ljmp
jno
jae
es
clc
push
jnp
pop
jl
insl
mov
jp
cmpsb
cmp
in
aaa
inc
dec
lea
and
inc
add
loop
dec
ja
fistpl
insl
jns
pop
dec
ja
outsl
out
in
xchg
lahf
push
cmp
mov
popa
sub
mov
shrl
sahf
mov
lret
or
dec
add
dec
fwait
xchg
xor
fbstp
mov
movsb
imul
mov
push
pop
sahf
push
imull
and
enter
mov
bound
test
outsl
push
and
lds
dec
out
orl
mov
pop
or
sub
sub
ret
test
xchg
inc
push
call
fsubrs
add
jp
jae
or
arpl
clc
xor
mov
insl
je
ffreep
dec
mov
mov
or
adc
in
adcl
inc
adc
xchg
sbb
mov
popf
pop
pop
iret
stos
mov
es
inc
sbb
fadds
fwait
xor
dec
mov
fadd
mov
les
and
cltd
outsb
enter
cmp
or
ss
adc
sbb
pop
out
xchg
xor
pop
out
les
sub
dec
popf
inc
and
dec
fdivs
or
sti
in
add
lds
dec
das
and
pushl
scas
ljmp
aaa
sub
cmp
pop
inc
iret
lret
lods
je
bound
jge
popf
cli
push
mov
fwait
pop
mov
push
rcrb
mov
stc
mov
adc
scas
insb
xor
shlb
ja
jnp
mov
popf
daa
call
push
lcall
push
das
nop
and
mov
dec
outsb
add
arpl
and
out
sahf
xor
in
push
mov
adc
fwait
int3
cmp
pop
out
push
push
or
cli
push
xor
mov
xchg
mov
arpl
cmp
lcall
dec
mov
int
cmp
xchg
imul
icebp
jge
insl
popf
loope
mov
xchg
mov
imul
cmp
push
idivl
xor
adc
mov
out
inc
std
mov
jle
fildll
xchg
lock
adcb
pop
sbb
ret
das
jne
jp
xor
dec
cmp
xor
je
pop
adc
fnstenv
cwtl
sub
xor
xchg
lret
dec
cmp
loopne
fdivs
ret
rorb
jecxz
movsl
andb
out
hlt
xor
cmp
cmpsb
jge
lcall
push
xor
jge
lds
mov
negl
mov
add
jns
mov
inc
cmp
fcomps
out
xchg
leave
mov
push
fldenv
inc
arpl
fisubrs
leave
out
mov
stos
pop
inc
mov
or
add
shll
cmp
int3
jne
ljmp
dec
mov
xor
jnp
test
in
sti
mov
dec
jae
popf
test
pop
sti
ds
and
xlat
mov
in
xor
out
pop
scas
or
inc
cwtl
arpl
xor
mov
push
mov
movsl
adc
pop
jl
or
sbb
sub
out
sbb
pop
and
mov
or
lods
push
sub
push
repz
adc
adc
ret
repz
test
rolb
std
das
mov
jbe
insl
lea
gs
xor
lcall
scas
lret
add
pop
lcall
sti
mov
iret
mov
sbb
jl
sub
adc
scas
lret
jns
scas
mov
stos
ds
cmpsl
loope
js
mov
push
jg
mov
pop
dec
test
ror
mov
pop
iret
inc
dec
pop
mov
scas
push
jecxz
cmp
jle
in
ds
rorb
jbe
adc
push
sbb
adc
or
jp
pop
in
and
cwtl
xor
mov
mov
mov
add
and
mov
mov
mov
lea
mov
mov
mov
sub
add
mov
mov
xor
add
jne
jmp
mov
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
jmp
popa
cmc
cwtl
mov
pop
popa
mov
xchg
popa
jnp
xlat
jge
xor
jp
add
in
lcall
aas
lar
xor
cmp
or
xchg
aad
lock
test
pop
aas
dec
test
sub
pop
cwtl
inc
push
cltd
xor
push
mov
bound
xchg
inc
aaa
jns
and
sti
arpl
inc
lahf
mov
test
in
ds
cli
push
fidivl
je
inc
jp
push
and
jns
repz
insl
sbb
push
dec
rcl
xchg
js
inc
jl
mov
cmpsl
mov
dec
pop
fisubs
cmpsb
sahf
addr16
add
cld
or
aas
out
sbb
mov
adc
cmp
mov
rclb
out
in
cmp
sti
fldl
or
cltd
inc
inc
mov
loope
pop
adc
int
dec
push
faddl
xchg
or
cmp
or
dec
cmp
mov
lock
mov
mov
outsl
dec
push
lock
inc
lea
mov
xchg
cmp
leave
mov
push
test
outsb
mov
stos
lock
push
cmp
mov
add
adcl
pop
sub
clc
mov
ja
nop
in
mov
jb
mov
daa
cmp
sub
jns
mov
jmp
cmp
jb
in
push
in
xchg
and
sbb
cmpsl
ret
push
icebp
jns
xlat
dec
stos
sbb
addl
xchg
mov
push
ret
or
ret
mov
push
jecxz
mov
or
ss
jg
cmpsb
mov
and
and
mov
fstps
pop
insb
imul
inc
test
mov
jno
sbb
inc
fbld
adc
mov
push
jle
repz
jecxz
sti
adc
dec
in
jns
inc
test
ret
ds
xchg
out
scas
sbb
ss
cmpsb
and
xor
add
stc
sbb
subl
push
mov
jno
lret
cmp
loopne
cmp
popa
dec
rolb
or
iret
lea
test
mov
xor
testb
pop
push
loopne
ljmp
xchg
lea
insl
cmp
adc
es
xchg
jo
cmp
xchg
ret
int
pop
pushf
lds
outsl
pusha
and
mov
xchg
mov
jb
lret
int3
jmp
das
scas
cwtl
fbld
dec
add
mov
sub
add
ss
loopne
pop
cltd
xor
sbb
adc
and
mov
cmp
lds
xor
mov
das
in
fsts
cmp
or
popa
push
jns
clc
idivl
mov
lds
jp
ds
cwtl
lock
xchg
hlt
je
and
bnd
jge
lret
cmp
aad
or
aas
jmp
lock
enter
adc
add
mov
lea
adc
add
cwtl
ja
rolb
pushf
fistps
pop
hlt
mov
adcl
add
in
mov
xchg
out
inc
jg
mov
cltd
pop
out
sti
mov
mov
outsl
mov
cmp
movsb
add
sbb
scas
pop
mov
jmp
add
test
sub
dec
outsb
repnz
shrl
mov
test
sbb
jb
div
mov
cld
jl
or
xchg
xchg
xor
pushf
pusha
cmc
mov
icebp
xor
test
aaa
daa
fistl
mov
loope
xchg
ja
push
push
inc
sbb
mov
or
cmp
sti
ret
inc
jl
enter
push
cmc
jge
add
mov
sbb
ret
xor
aas
outsl
mov
mov
ficomps
in
mov
clc
cwtl
xor
in
lret
daa
add
pushf
push
mov
mov
cmp
mov
shl
fimull
or
mov
xor
movsl
push
xor
lahf
fs
inc
js
xor
into
in
and
ja
sub
pop
decb
add
ss
popf
orl
push
push
rorb
repz
cltd
jbe
out
andb
pop
xchg
daa
dec
repnz
je
xchg
add
sahf
lock
mov
addb
dec
inc
adc
push
adcl
cmpsb
mov
or
mov
stos
ret
sbb
push
adc
mov
pushf
cltd
sbb
xchg
movsl
out
imul
cmp
out
mov
xor
mov
sub
or
sbb
mov
pop
lahf
int3
xor
sbb
xchg
inc
and
cmpsl
decb
or
lret
xor
mov
cs
add
xchg
movsb
scas
jb
popf
inc
xlat
jbe
loop
xchg
jbe
inc
sub
push
jg
inc
push
mov
repz
jecxz
and
orl
pop
movsb
dec
stos
push
sbb
dec
push
jp
xchg
stc
ja
cli
fwait
fwait
and
not
mov
adc
inc
dec
insl
jmp
mov
pop
push
insb
pop
xchg
repnz
hlt
out
insl
pop
adcl
sbb
int
enter
es
mov
xchg
mov
shll
popf
mov
loopne
pop
or
pop
arpl
fucom
xchg
mov
sub
mov
sbb
pusha
sarb
mov
push
test
iret
sub
clc
call
lods
ljmp
mov
sbb
mov
mov
cmp
dec
sar
jle
sub
jp
push
sti
xchg
ljmp
and
mov
test
cmp
hlt
outsl
xchg
pop
dec
add
xchg
cmpsb
xchg
jmp
loope
dec
mov
and
jne
int
addr16
add
les
mov
stc
add
bound
cld
shrb
jp
cmpsl
nop
adc
imull
ss
adc
cltd
test
push
cmpsl
mul
pop
or
repz
lea
xor
out
dec
dec
add
lahf
push
jle
int3
in
mov
mov
das
sti
jl
repz
mov
lea
sub
jb
test
ljmp
sub
cltd
das
mov
fnstcw
sti
movsb
lods
jp
jnp
cltd
xchg
leave
bound
add
pop
das
fidivl
mov
ficompl
pop
cld
push
inc
xchg
pop
rcrb
mov
or
push
jnp
dec
and
push
inc
dec
push
adc
cs
icebp
fadds
lret
jae
or
loop
mov
sub
call
xchg
cs
xchg
add
pop
jg
pop
loope
jbe
pusha
jle
xor
leave
or
inc
arpl
bound
mov
pushf
sub
mov
cmp
jmp
pop
adc
enter
ret
dec
inc
pop
mov
out
imull
nop
and
mov
in
or
addb
stos
rcr
pushf
sub
push
enter
adc
frstor
jne
outsl
insl
mov
pop
push
and
in
jle
in
jecxz
pop
mov
mul
mov
mov
pop
xchg
lea
inc
ljmp
or
cmp
xchg
test
nop
jmp
sub
cmpb
push
test
mov
sub
std
testb
push
cmp
jecxz
mov
push
add
add
pop
sbb
icebp
orb
inc
pop
or
pop
mov
sbb
test
jae
bound
sbb
push
pop
jle
sbb
outsb
dec
lock
mov
in
xor
imul
movsb
jmp
rcrl
dec
jnp
mov
scas
push
test
pushf
mov
out
inc
lret
arpl
lock
xor
bound
fcmovnbe
addr16
int
ds
mov
jecxz
lock
mov
repnz
push
dec
je
adc
ret
sbb
loop
cs
xor
cmp
mov
je
cmp
inc
xor
or
movsl
and
imul
cmc
pop
jno
and
std
daa
jmp
cli
xchg
mov
add
mov
jmp
out
imull
and
mov
mov
test
in
push
pop
and
add
push
imul
jnp
lahf
sbb
mov
dec
mov
sub
and
sbb
mov
lret
dec
pop
push
sbb
cmp
mov
adc
pusha
and
dec
jo
sahf
inc
lock
inc
mov
xor
cld
mov
loope
inc
push
xchg
xchg
test
add
stos
sub
push
cmpsl
cmpsb
shll
inc
in
mov
lahf
pushf
bound
sbb
jbe
loop
jo
mov
push
adc
nop
mov
jae
mov
ss
bound
roll
nop
pop
and
mov
bound
popf
inc
xchg
or
jnp
aam
cmpsl
mov
in
lods
bound
cmp
sbb
push
pop
loopne
cmpsl
mov
stos
push
or
mov
and
int
pop
push
sahf
scas
xor
xor
adc
lahf
js
jae
cmp
pop
fcoml
popa
jb
xor
fidivl
subl
add
jnp
sub
mov
mov
xor
or
repz
stc
pushf
inc
jnp
xor
les
xchg
loopne
mov
cli
mov
lods
cltd
and
mov
pop
lahf
sbb
fmull
das
cld
sbb
fmul
mov
mov
test
psubsw
clc
push
cs
inc
je
pop
sub
inc
xchg
sub
push
push
outsl
adc
imul
mov
rcll
jno
ret
lds
sub
sbb
jne
xchg
xchg
mov
jne
lods
fldt
loopne
data16
inc
stos
test
mov
sbb
shrb
and
cwtl
into
in
test
mov
xchg
inc
roll
mov
push
ret
and
stc
movsl
and
mov
repz
sahf
in
ds
add
in
mov
aam
sbb
pusha
les
inc
xchg
inc
in
sub
fsubl
mov
outsl
scas
mov
insb
mov
lret
fldenv
mov
sbb
movsl
adc
xor
hlt
xchg
and
inc
sub
subb
jg
xor
movb
aad
rcrl
add
pop
sbb
and
cmpsl
fwait
jnp
test
sub
adc
cld
mov
pop
inc
es
aam
pop
xor
mov
xor
aas
fimuls
push
imul
in
or
adc
mov
jbe
movsb
xor
fidivs
push
dec
add
mov
adc
pop
addr16
adc
int3
nop
mov
adc
push
das
jg
sub
dec
mov
cltd
cld
adc
dec
push
mov
mov
dec
add
nop
int
xchg
ss
sbb
push
adcb
adc
or
cmpsl
les
shlb
mov
sbb
icebp
repz
out
test
cwtl
mov
xorb
mov
addb
dec
je
push
ret
cltd
pop
sbb
pop
mov
or
nop
jge
jg
scas
lret
fwait
scas
mov
cs
adc
lret
cwtl
cmpsb
xchg
pushf
pop
mov
dec
lahf
adc
in
dec
insl
inc
imulb
das
dec
or
shl
adc
roll
cmp
sbb
xor
xlat
adc
dec
inc
clc
push
xchg
arpl
subb
add
shrb
mov
stc
cmc
negl
adc
mov
clc
push
push
lods
adc
jo
lret
test
mov
stos
adc
rcr
rorl
movsl
loop
xor
pop
movsb
nop
sar
push
add
mov
xor
lret
and
add
dec
jle
lods
stc
pop
or
pop
xchg
push
cltd
pop
mov
loop
arpl
insl
jecxz
das
mov
xchg
test
cmp
inc
mov
pop
pop
cmc
punpckhwd
ror
xor
jge
xchg
cmp
add
mov
add
mov
xchg
aad
lahf
popf
or
imul
push
xlat
push
std
xchg
outsl
push
sbb
lds
daa
or
in
mov
xor
pop
insb
jmp
int3
sti
fnsave
push
jp
jl
mov
fcomps
cmpsb
or
mov
sbb
adc
int
lods
push
aam
dec
into
mov
adc
pusha
push
dec
insl
pop
dec
pop
movsb
mov
sahf
pop
xchg
aam
mov
sbb
cmpl
int
imul
xchg
pop
loope
jle
mov
outsl
mov
dec
fdivl
iret
inc
shrb
je
pop
jns
repz
adc
cmp
jecxz
stos
inc
dec
push
add
xlat
lcall
scas
jns
xlat
roll
in
mov
mov
sub
addl
js
rorl
aaa
inc
cmp
push
loope
call
inc
jae
adc
xchg
rorb
xchg
sbb
std
push
pop
push
scas
mov
mov
out
mov
mov
leave
inc
dec
push
js
xchg
popa
sbb
xchg
xchg
mov
cmp
das
iret
dec
outsl
test
cmp
inc
ljmp
push
icebp
je
out
stos
scas
jge
jmp
jmpw
sbb
repnz
shl
jmp
add
outsl
or
xor
jmp
popa
xor
mov
aas
stc
fildl
jmp
in
pop
mov
sub
std
cmp
loop
popa
pop
jp
stos
mov
cli
xlat
push
xchg
sub
dec
xchg
pop
sbb
shlb
in
ror
stc
outsb
xchg
leave
pop
lret
mov
push
ror
pop
add
fmuls
xor
leave
ja
pop
mov
pop
jno
jp
andb
nop
and
xchg
and
iret
idivl
rcr
movsl
jecxz
ja
rcl
pop
fldenv
mov
das
aam
mov
mov
sbb
jge
inc
pop
fs
inc
inc
cmp
xorb
fbld
pop
lret
ret
cs
loopew
aaa
inc
pop
and
sbb
lods
sub
jnp
jle
scas
mov
loop
jnp
loope
call
pushf
push
sub
or
outsb
xchg
and
popl
xchg
jle
movsb
jecxz
inc
pushl
xchg
jne
cmp
jp
cmp
xchg
pop
dec
sbb
mov
adc
ficomps
pop
xor
add
push
cmpsl
outsl
xor
imul
mov
lret
pop
and
lds
mov
add
pusha
sub
ret
and
hlt
xchg
in
push
cmp
daa
xchg
and
fadd
fwait
rcl
xor
jmp
cmp
aas
repnz
jo
jmp
imul
xor
ror
mov
jbe
sub
inc
cmp
or
mov
cwtl
and
stc
lahf
fs
fwait
xorb
dec
popa
in
mov
arpl
mov
mov
mov
cmp
or
adc
out
mov
adc
ljmp
mov
lcall
sbb
xchg
jl
or
lret
push
jb
out
add
sbb
sub
sub
popf
sub
push
jb
jl
sahf
fstpl
cwtl
inc
aaa
sbb
inc
sti
iret
fwait
shlb
shlb
fwait
jmp
scas
add
jb
push
lahf
scas
enter
cmp
inc
mov
popa
and
imul
jne
in
adc
jo
jnp
push
mov
dec
xabort
sbb
mov
rcrl
cmp
add
fneni(8087
fldenv
stos
pop
rcll
xchg
stc
scas
popf
inc
inc
bound
lock
add
inc
shl
mov
cmovp
sti
inc
mov
adc
sbb
dec
cs
mov
push
dec
lea
idiv
cmp
and
lcall
iret
repz
or
imul
push
xchg
sub
mov
mov
test
push
out
imul
dec
cltd
push
outsl
inc
or
mov
outsb
sub
ficompl
xor
or
add
pop
das
mov
incl
fbstp
jmp
jbe
cmp
inc
mov
pop
pop
stos
push
mov
pop
js
jns
ret
negb
mov
inc
dec
lahf
in
cwtl
add
shll
lret
push
sbb
mov
mov
xor
mov
jb
xlat
out
lea
lock
pop
cmp
andl
shrb
outsb
aaa
outsl
jecxz
out
dec
test
loope
cmp
mov
push
fwait
or
outsl
sub
cmc
sbb
jbe
jb
std
cli
dec
aas
dec
mov
cs
lahf
and
mov
jnp
mov
jmp
stc
mov
inc
mov
jecxz
mov
sarb
clc
xchg
xor
std
xor
xchg
rcll
aam
inc
lods
bnd
cwtl
xor
push
in
pop
rcrb
popa
dec
lahf
lret
call
pop
xchg
cli
and
inc
cmp
sub
repnz
mov
call
xor
div
and
pop
test
popf
mov
cmpl
outsb
mov
inc
in
movsl
out
push
xor
jmp
cmp
dec
pop
call
jp
jo
xchg
sbb
call
andl
cmpsb
jmp
mov
mov
data16
cs
ret
inc
das
adc
push
idivl
loop
es
inc
pushf
dec
repnz
or
xchg
jl
dec
flds
leave
mov
lret
out
jnp
fldenv
mov
cmpsl
incl
dec
lock
bound
popf
mov
xchg
sti
imul
inc
and
pop
cmc
shl
jmp
cmp
in
decb
mov
inc
mov
mov
leave
arpl
aad
push
popf
mov
and
je
or
sahf
adc
out
adc
bound
mov
ss
lahf
ljmp
je
mov
mov
test
mov
dec
fcompl
je
pop
dec
cmp
push
pushf
push
push
sub
mov
xchg
inc
adc
aas
push
ret
dec
pushf
push
shlb
incb
sbbl
sbb
push
push
pop
inc
inc
lds
lret
jno
adc
sbb
xchg
hlt
sbb
cltd
cmp
leave
adc
lcall
js
add
cs
popf
ficoml
sub
test
loop
test
cmp
mov
pop
mov
adc
shrl
shrb
nop
sub
jecxz
imul
sbbl
mov
fwait
enter
leave
enter
or
adc
imulb
fists
cs
dec
sbb
dec
xchg
push
rcr
jns
sbb
shll
or
fidivs
out
les
and
xor
cmp
add
outsl
shl
adc
xor
outsl
mov
or
and
out
and
mov
mov
ret
push
call
mov
and
insl
sbb
cmpsl
jno
mov
cmp
xor
aam
test
lds
adc
lret
filds
xchg
push
out
inc
outsl
mov
test
pop
pop
pusha
ds
out
xor
bound
sar
divl
push
cmp
out
lret
push
and
aaa
mov
adc
xchg
or
jl
jmp
js
fcmovnbe
adc
xlat
adc
push
aad
fwait
shl
dec
fidivl
in
daa
ret
sub
rcll
aam
or
adc
movsl
popa
mov
sti
sub
pop
insb
mulb
add
mov
dec
out
pop
insl
push
mov
cmp
aad
push
daa
push
outsl
xor
in
add
mov
mov
pop
sub
add
ficomps
push
mov
mov
daa
mov
adc
in
movsl
pop
in
sarb
pop
lret
aam
clc
dec
shlb
xchg
or
lret
fs
lds
or
push
hlt
push
cmpsl
pusha
imull
mov
mov
xchg
xor
js
sub
lods
cmp
dec
xchg
int
add
adc
shll
or
jmp
outsb
add
pop
and
push
ljmp
les
das
push
insl
push
pop
add
xor
push
ljmp
loope
test
sahf
dec
roll
inc
jns
enter
into
movl
popa
push
fs
sarl
sub
mov
jo
ja
stc
bound
pop
pop
cmc
adc
xor
bound
pushf
loopne
mov
insb
adc
cld
xor
mov
subl
mov
xor
and
test
in
iret
sub
aad
call
pop
pop
in
test
pop
sbb
xor
xlat
cmp
ficomps
push
jp
movsl
clc
js
jecxz
xor
xor
pusha
mov
inc
add
xchg
jo
sar
mov
push
add
ret
or
push
dec
add
test
push
jecxz
stc
out
jecxz
push
repnz
fcoml
js
lahf
call
and
and
cld
mov
or
mov
test
lock
enter
jns
jbe
out
cmpw
repnz
jecxz
adc
push
outsb
push
adc
jge
fcom
pop
lahf
repz
mov
lods
pop
repnz
rclb
pop
int3
ljmp
xlat
ds
sub
lods
adc
jnp
test
dec
xchg
popa
mov
push
cmp
push
push
mov
shrl
inc
insl
out
test
jmp
dec
pop
xor
fbstp
sub
les
daa
jmp
mov
pop
push
lret
jl
fstl
iret
jne
out
cmpsb
ffree
cmp
push
cwtl
xchg
mov
shlb
xor
rcll
or
hlt
stos
inc
loope
add
xchg
cwtl
xor
jp
mov
insl
pop
pop
int3
faddl
lock
loope
loopne
pop
add
out
clc
xchg
jmp
mov
cmp
ljmp
or
sub
sbb
xorb
mov
adc
pcmpeqw
cmc
cmpsb
gs
push
and
sti
pop
mov
fidivrs
push
jecxz
stc
test
pop
lds
or
push
fwait
loope
mov
adc
in
jp
sub
popf
push
icebp
or
popf
insl
jle
mov
dec
lea
xor
adc
dec
movsl
fwait
pop
cld
lcall
cmp
nop
sti
xchg
loopne
cld
addl
push
mov
cmp
mov
scas
adcb
outsb
mov
out
stc
lcall
aad
cltd
push
cmp
test
pop
xchg
repnz
cmpsl
or
sub
mov
mov
shll
es
sbb
call
movsl
sbbl
out
jo
xor
mov
or
and
or
sahf
insb
inc
sub
ljmp
call
stos
rolb
mov
rorb
arpl
xor
add
outsb
mov
gs
imull
xchg
push
ret
clc
mov
idiv
enter
push
sub
and
insb
stos
in
adc
mov
xor
and
shrb
lret
adc
adc
in
xchg
xlat
test
in
test
popa
sbb
aas
xor
or
lcall
adc
mov
pusha
sbb
rcrb
test
rcrl
popf
inc
cmp
xchg
push
push
cmc
pop
mov
pop
cmc
xchg
nop
mov
aad
enter
nop
jmp
inc
adc
cltd
sub
add
insl
add
fdiv
out
cmpsb
call
dec
jl
inc
cmp
pop
push
or
push
xchg
bound
in
pop
mull
cmpsl
shlb
xor
pop
xchg
mov
mov
pusha
inc
outsl
repz
adc
mov
mov
call
xor
push
adc
jnp
aam
out
dec
cwtl
sbb
mov
xchg
pushf
xchg
imul
add
push
mov
mov
int3
int
or
daa
xor
sti
add
jbe
mov
nop
pop
adc
ds
dec
mov
jbe
push
imul
pushf
mov
shrl
out
in
pop
shrl
mov
sub
cmp
xor
mov
data16
dec
aas
stos
mov
fldenv
imul
push
lods
je
shll
push
mov
add
dec
fimull
cwtl
aam
and
cld
mov
push
cli
enter
out
pop
mov
xor
filds
jg
es
rcl
stos
lods
jb
jne
jmp
sub
cmp
mov
sub
mov
aam
lock
push
lret
repz
mov
shl
call
es
fwait
mov
shll
fdivl
mov
in
daa
mov
push
outsl
int3
addr16
aaa
stos
test
mov
jns
stos
into
mov
mov
pop
es
add
das
cwtl
mov
dec
inc
xchg
dec
fs
mov
gs
pop
mov
lods
jl
push
mov
sub
dec
test
pop
subb
testl
jge
xor
and
shll
xchg
lods
jg
mov
add
rclb
cli
jb
jp
inc
adc
sub
test
xchg
and
pop
sti
repz
sub
push
das
xchg
or
cwtl
mov
lock
mov
jmp
xchg
adc
push
lods
rclb
jle
cmp
shl
xor
mov
cmp
rorb
mov
xchg
popa
out
test
cmpsb
bound
push
mov
adc
dec
rorb
push
movl
cmpb
jb
fs
xor
mov
mov
jl
pop
not
test
in
xchg
pop
fmull
sbb
lea
int
jb
dec
or
xchg
xor
and
mov
cmpsb
cmp
imul
jns
sub
aaa
shr
sub
lret
jge
popa
sub
scas
ret
jle
add
jmp
in
mov
sub
xorb
jl
sbb
cld
pop
add
dec
jne
mov
lock
mov
mov
jle
add
arpl
nop
popf
pop
and
push
xchg
int
imul
sar
xchg
lcall
dec
xchg
pop
push
or
in
cmc
pop
xorb
and
imul
in
xor
fidivrl
shl
push
es
sbb
jbe
arpl
cmp
push
xchg
fsubrs
pop
push
scas
sbbb
sub
in
lods
inc
inc
and
scas
push
fs
cli
pop
dec
xchg
cmp
dec
loop
push
testl
xchg
push
ret
mov
outsb
dec
mov
pop
sti
jmp
dec
xor
movsb
and
cmp
xor
or
mov
lods
fwait
rcrb
imul
jne
shl
mov
inc
lock
jne
cwtl
imul
fnstcw
call
push
push
sub
cs
lcall
xchg
sahf
pop
xchg
dec
jmp
out
arpl
shll
dec
clc
xchg
test
pop
sbb
inc
and
decb
insl
ret
cmpl
flds
inc
and
xor
cmc
dec
aam
das
xchg
lods
mov
lcall
sbb
popf
mov
daa
call
add
cmpsb
mov
sub
fcmovne
outsl
adc
cmp
cmp
fildl
fildl
call
mov
mov
mov
xchg
imul
adcl
xor
clc
call
push
arpl
js
pop
pusha
icebp
mov
pop
push
sahf
jo
cmp
sbb
test
push
cmp
fwait
insl
aas
mov
cmp
add
lahf
push
xor
lods
add
sub
mov
cmp
jno
pop
mov
lds
adc
sbb
ja
out
mov
and
sub
sti
insb
les
mov
negb
inc
iret
sbb
pop
mov
mov
mov
lock
add
push
dec
int
mov
in
outsl
pusha
pop
int3
lret
mov
adc
icebp
cld
in
lret
push
fs
jbe
xor
cld
addr16
mov
in
inc
outsl
mov
iret
icebp
les
mov
push
sbb
push
js
test
mov
lods
not
aad
add
pop
movb
cmc
jns
and
sub
xchg
in
mov
cld
jo
cmpsl
out
mov
sub
mov
jp
inc
sub
pop
adc
push
add
inc
aad
mov
data16
cmp
mov
jmp
mov
lret
movsb
aas
mov
fcoms
pusha
aas
repz
jns
mov
jno
sahf
xor
xchg
and
adc
fwait
ret
mov
mov
push
imul
dec
lret
xchg
mov
js
xor
loope
push
xchg
cli
inc
xchg
in
sbb
addl
test
xchg
and
nop
in
stos
inc
add
cmpl
movsb
lcall
inc
xor
push
xchg
outsb
mov
fsubrs
adc
sbbl
pop
cmp
pusha
pushf
testl
idiv
dec
mov
bound
dec
rcrb
xor
movsl
scas
inc
loope
inc
mov
mov
pop
pop
mov
pop
in
arpl
aas
pushf
sbb
sbb
xchg
push
xsavec
jno
mov
dec
mov
sbb
sub
out
sbb
jbe
or
xchg
mov
adc
cld
push
inc
fwait
cmp
push
mov
pop
gs
jge
push
push
jle
test
rcl
mov
sbb
movsl
xchg
sbb
inc
and
sbb
fcoml
and
cmpsb
mov
push
ret
adc
mov
cmp
xlat
sub
or
into
lds
mov
cmp
icebp
jbe
cmp
mov
xchg
or
and
fcomps
loop
pop
jp
arpl
popa
stos
sti
push
inc
cmpsb
cmp
push
andb
mov
mov
adc
loop
pop
jae
ds
jbe
pop
sub
and
or
cltd
pop
jge
mov
xor
xchg
je
jb
pop
sahf
cmp
push
inc
jb
fs
dec
mov
cmc
add
out
fsts
inc
add
xchg
or
bound
adc
sub
lods
mov
push
test
push
jp
shlb
sbb
jmp
add
push
adc
sbb
mov
ficompl
cmp
int3
out
xchg
jnp
xchg
ja
or
loopne
sbb
jle
ret
mov
cs
inc
add
xchg
cmp
jbe
pop
pop
fildll
inc
inc
ret
imul
xor
dec
lds
lods
cmpsb
mov
xchg
cltd
ss
repnz
shl
xor
push
je
push
ss
aaa
pop
out
mov
ljmp
add
scas
rorl
or
xchg
clc
add
rorl
or
xor
mov
mov
mov
add
and
mov
mov
mov
lea
mov
mov
mov
sub
add
mov
mov
xor
add
jne
mov
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
add
imul
mov
mov
mov
add
or
mov
mov
mov
add
xor
mov
mov
mov
add
and
mov
mov
mov
lea
mov
mov
mov
sub
add
mov
mov
xor
add
jne
mov
mov
xor
lea
mov
mov
xor
add
jne
jmp
mov
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
add
imul
mov
mov
mov
add
or
mov
mov
mov
add
xor
mov
mov
mov
add
and
mov
mov
mov
lea
mov
mov
mov
sub
add
mov
mov
xor
add
jne
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
add
imul
mov
mov
mov
jmp
bound
push
fsubl
xchg
inc
pop
push
sarl
xor
jp
push
jae
mov
pop
inc
xor
mov
inc
push
or
scas
fnstcw
lret
push
xchg
adc
idivb
mov
sbb
pop
sub
inc
in
std
sub
stc
fwait
inc
sub
mov
loop
arpl
mov
jb
pop
ds
jns
mov
mov
jo
movsb
push
mov
loope
shll
incl
jbe
and
mov
cmpsl
je
in
jl
push
call
loope
xor
in
push
adc
sahf
int
mov
arpl
pop
adc
std
cmp
push
das
call
rcr
pop
cmp
iret
scas
jne
push
loopne
cmp
mov
inc
stc
or
out
pop
hlt
lods
enter
or
sub
xor
test
std
aad
sbb
out
popa
ja
push
xor
mov
adc
sub
mov
lods
mov
mov
jmp
sbb
sub
insl
repnz
push
push
lods
sub
test
shrl
into
sbb
imul
out
mov
cli
xchg
movsl
sbb
mov
in
ret
lcall
sub
pusha
addr16
aas
jno
dec
xor
and
mov
ret
bound
lds
mul
daa
imulb
sti
loopne
jmp
int3
shrl
cli
inc
jmp
int3
in
add
js
or
push
push
jg
add
mov
jnp
cmp
jl
sub
cmp
ret
subl
jo
adc
mov
pushf
aam
xchg
mov
sub
pop
xchg
test
mov
or
pop
fistpll
ret
push
sbb
sbb
andb
xchg
decb
pop
sbb
sbb
pop
mov
stc
enter
jg
jge
or
cs
es
and
scas
stc
jbe
mov
pop
mov
or
sub
lods
fildll
fcomip
jns
fwait
movsl
loope
dec
xlat
dec
ss
push
adc
mov
cmp
icebp
pop
cmpsb
pop
enter
rorl
stos
jge
loop
sahf
cmp
scas
popf
jl
rorb
jle
xchg
pop
sar
push
imul
aad
stc
mov
jae
or
jecxz
and
cli
or
pop
lds
lret
mov
shlb
adc
jno
dec
dec
rorb
push
dec
fld
cmp
popf
mov
ljmp
mov
mov
idiv
jmp
aaa
sub
mov
fistpl
pop
jne
lods
adc
xchg
in
das
sub
mov
int3
ja
fwait
nop
hlt
test
adc
jns
scas
outsb
jge
xor
cmp
add
pop
ss
jle
sti
or
in
stos
movsb
stos
fstpt
in
jge
push
sbb
insl
test
cs
jns
insb
push
lods
ret
mov
xor
push
xor
sub
inc
mov
push
inc
jne
mov
inc
in
movsl
fwait
adc
add
mov
pop
push
fwait
sbb
imul
add
in
aas
add
popa
movsl
add
jmp
or
les
jne
pop
mov
js
movsl
sub
add
add
sub
push
or
dec
orl
pusha
sbb
outsb
daa
dec
in
mov
cwtl
mov
movsl
sbb
int3
add
push
pop
sar
ljmp
xchg
ret
dec
push
adc
mov
mov
jo
int3
popf
ret
xchg
movsb
adc
outsl
insl
test
jnp
fisubs
outsb
push
add
lret
sub
hlt
mov
xchg
fsubrl
popa
adc
or
jmp
push
jb
aas
sarl
adc
ss
mov
leave
rorb
push
rcrb
out
jo
into
xchg
mov
cli
dec
cli
jg
scas
dec
js
mov
xchg
leave
sbbb
lds
cmp
and
sbbl
or
push
mov
push
ud1
and
sbb
and
pmaxub
test
jecxz,pt
jnp
clc
jecxz
lock
pushf
cwtl
adc
out
mov
dec
inc
push
pusha
dec
shll
sbb
pop
rcll
addr16
push
into
rcll
cmp
rcl
sbb
sub
jne
sarl
dec
push
js
int
sub
in
mov
in
cwtl
fsubs
int
loope
loop
scas
in
rcrb
in
and
pop
sbb
jb
xor
add
sbb
arpl
adc
sub
and
mov
sub
jo
pop
out
cs
nop
or
mov
or
xchg
mov
xchg
jle
pop
lret
xor
ljmp
pop
std
iret
adc
int
inc
lret
xchg
xchg
xor
pop
sahf
ds
scas
pusha
pop
xor
adc
dec
mov
adc
testb
jae
jae
dec
scas
dec
leave
jo
push
cmc
sub
mov
add
daa
sbb
dec
daa
xchg
and
xor
fnstcw
nop
sbb
dec
push
jmp
cmpsb
aas
dec
xchg
mov
mov
cmp
or
inc
cmc
mov
std
fisttpl
dec
mov
gs
insb
cmp
call
adc
out
dec
and
jb
mov
ja
je
insl
cs
cli
fs
mov
xor
lret
mov
orb
mov
mov
jbe
cmp
xchg
inc
xchg
iret
fimuls
jl
sbb
adc
add
in
push
push
jb
push
and
aaa
test
pop
ss
movswl
cmp
mov
inc
in
shlb
mov
xor
pop
push
jge
xchg
pop
mull
add
mov
pop
movsl
mov
adc
and
xchg
adc
aas
push
lock
mov
push
mov
sub
lret
mov
sbb
lods
and
faddl
or
mov
faddl
dec
das
scas
sti
pop
call
shlb
out
inc
push
mov
cmp
cmp
push
ret
jnp
dec
lret
inc
jns
test
xor
cmpsb
pusha
push
or
mov
gs
pushf
andb
enter
notb
xor
loope
xor
adc
xor
or
dec
ja
std
jae
add
aas
xchg
jmp
or
or
pop
pop
mov
loopne
add
mov
sbb
xchg
popf
add
shrl
fucomp
push
aam
inc
out
stc
out
orl
loop
add
testb
rcl
push
xchg
js
lahf
adc
in
mov
xorb
test
jbe
aam
in
outsb
and
les
sbb
pop
jnp
loop
int3
sbb
mov
cmp
sub
imul
jg
cmpsb
rorl
repnz
cld
test
dec
and
dec
dec
insl
fwait
sbb
out
or
sarl
push
inc
loop
xchg
cmp
lcall
xchg
jmp
stc
add
and
pop
mov
jmp
inc
xchg
push
nop
lods
mov
popa
fbld
or
cli
lret
xor
test
inc
mov
and
sub
xlat
pop
movsl
and
or
nop
mov
mov
jp
ret
int
xlat
xlat
xchg
rorl
add
fisubrl
pop
xchg
mov
je
push
xchg
movsb
je
push
push
inc
push
lret
xor
and
push
fdivl
movsl
ret
sub
pop
mov
mov
sub
sbb
lahf
icebp
jne
jp
bound
cmpsl
mov
push
out
repz
and
xchg
push
cmpsl
cmp
push
sbb
cltd
rcl
or
mov
pop
add
mov
ret
cs
xchg
ds
inc
cmpsb
ror
cmp
stos
enter
aaa
aaa
stos
idivb
xor
jae,pn
leave
sahf
shrl
pop
cwtl
sbb
dec
or
dec
cli
das
andb
jae
out
pop
mov
mov
xchg
mov
lods
sbb
xchg
push
movsl
cmpsl
adc
sbb
mov
leave
push
cltd
jbe
cmp
fadd
aaa
pop
xchg
adc
xchg
jmp
fcomp
arpl
mov
jo
inc
aam
call
dec
imul
fld
fisttpll
in
sub
push
xchg
inc
nop
mov
sbb
mov
addl
adc
fldt
sbb
cmp
cli
jo
jbe
mov
ret
insl
nop
rcll
mov
fcompp
js
cmp
fcomip
test
mull
push
mov
xchg
enter
dec
push
pop
fwait
les
sbb
roll
inc
cmp
mov
mov
push
mov
andb
sbb
dec
pop
lods
adc
mov
inc
mov
imul
stos
jl
inc
inc
popf
addb
shll
je
addb
pop
adc
mov
dec
test
lds
and
add
fsubp
jb
mov
stos
xchg
mov
cmp
jne
sti
and
or
mov
out
pop
movsb
enter
fildl
bound
fildll
cmpsb
push
jno
pop
pcmpgtw
dec
push
nop
xlat
inc
aaa
std
push
jns
imul
bound
hlt
adc
cmp
pop
or
jns
xchg
and
inc
aam
hlt
dec
inc
xor
push
stos
jbe
sbb
les
repnz
sbb
and
bound
ss
loopne
cs
jmp
loopne
inc
push
and
outsl
inc
pop
fstpt
andb
fnstcw
repz
mov
addr16
imul
push
sbb
and
mov
out
cmpsl
mov
lods
add
pop
jecxz
add
xchg
jno
or
sub
xor
lods
into
jb
cmp
dec
sbb
out
xchg
arpl
pop
cmpsl
aas
pushf
in
cltd
aaa
cmp
jge
sub
dec
add
jo
ret
inc
xlat
gs
into
ja
dec
std
movsb
jg
xchg
movsl
test
std
inc
xchg
mov
mov
fincstp
sbb
dec
cwtl
push
lods
jnp
scas
and
je
fs
rolb
xchg
and
es
iret
int
mov
or
jl
flds
jg
rorl
pop
inc
mov
stos
sub
loopne
mov
add
outsl
cltd
xchg
sub
sub
push
pushf
dec
cmp
jbe
imul
xor
movsl
dec
fisttpl
sub
add
jp
ficoms
fistl
pop
add
pushf
push
inc
in
pop
push
jg
xchg
pop
dec
ss
int3
cld
push
sub
add
call
pop
jl
fdivrl
cltd
inc
and
or
loope
insb
jbe
clc
cwtl
sahf
jo
int
mov
xor
sub
xor
push
or
pop
lods
sbb
rcll
push
loopne
icebp
adc
fimull
stos
rorb
mov
scas
test
push
jge
jbe
sbb
mov
in
add
cltd
inc
adc
das
push
push
push
popa
jle
mov
pop
xchg
out
push
ret
out
dec
push
jnp
aam
sbb
sahf
pop
adc
mov
sub
jge
push
cwtl
lret
lcall
push
xchg
test
jle
rol
jle
frstor
packsswb
push
shll
mov
cmp
push
inc
adc
xor
mov
popf
rol
and
mov
fsts
loopne
dec
push
push
data16
mov
cmp
add
xor
mov
pop
push
and
daa
mov
maxps
loope
pop
push
xchg
test
push
loopne
sti
sub
ret
int
or
inc
rsm
mov
jge
add
mov
sbb
xchg
rorb
add
test
cmp
in
fisubrs
repnz
adc
scas
clc
xor
jno
jnp
mov
xchg
es
aas
test
pop
add
xchg
cmp
xchg
adc
xchg
movsb
out
cmc
lret
mov
lods
repnz
mov
rcll
icebp
xor
xchg
mov
xor
cs
icebp
movsb
test
mov
gs
jo
mov
iret
pop
fisubs
cmp
pop
sub
xchg
sahf
aaa
jns
jae
lea
mov
pop
adc
iret
jecxz
rcrl
in
or
adc
outsl
jne
clc
stc
sarb
imul
ret
push
cmp
int
pushf
pushf
pop
loop
les
out
lock
testl
repnz
fnclex
out
sahf
sub
mov
xor
adc
xor
pop
aad
int3
dec
cmp
test
jecxz
adc
jmp
or
cmp
add
jp
cmpsb
outsb
lcall
fnsetpm(287
mov
inc
outsb
les
xchg
aad
xchg
sbb
sbb
lret
push
out
les
lods
arpl
jno
sub
xor
mov
stos
pop
inc
or
xchg
inc
rcr
lcall
outsb
dec
in
imul
jl
sub
outsb
or
cmp
pushf
mov
repz
jg
mov
std
sbb
jmp
dec
or
icebp
popf
mov
xorl
or
out
jno
jmp
in
fbld
jns
pop
lock
ficompl
outsb
jb
mov
jl
scas
xchg
rcrb
mov
push
xchg
mov
add
lahf
xor
jmp
and
xchg
mov
out
and
fldl
outsl
sbb
sbb
sub
clc
jecxz
fsts
in
scas
dec
fistl
insl
jae
inc
int3
or
fisttpl
push
inc
jnp
xchg
sti
js,pt
sbb
or
pop
or
push
leave
cmp
icebp
push
cli
jp
jp
cs
xchg
xor
fmulp
xchg
lock
mov
xchg
fildl
cltd
in
aas
lea
insb
and
pop
xlat
mov
cwtl
fst
add
mov
sub
jmp
mov
sbb
mov
test
add
jns
inc
out
sbb
test
pop
push
cmovp
clc
dec
push
fs
sub
mov
push
mov
mov
repnz
insb
sti
xor
call
dec
pop
cmp
jno
fs
dec
gs
jnp
cs
outsl
mov
sti
mov
ljmp
mov
inc
ret
in
roll
adc
fsubrs
daa
aad
mov
push
popa
inc
cmp
mov
scas
xor
and
jp
push
push
test
aad
dec
ds
dec
js
pop
int3
or
gs
jnp
add
jno
call
lcall
cmp
scas
push
into
push
test
repnz
leave
dec
stos
xor
xchg
mov
pop
pop
orb
dec
in
push
sub
push
inc
mov
ficomps
ja
or
fists
dec
icebp
test
sar
mov
loope
mov
es
shrl
clc
mov
pop
dec
mov
incl
push
adc
cmp
xor
or
loope
es
xchg
bound
add
push
push
sbb
xor
ret
popa
out
pop
out
popf
shlb
jbe
pop
ret
ficoms
in
jo
insb
in
aas
push
adc
aaa
push
xchg
fldl
add
lea
cli
movsb
inc
xor
pushf
or
ljmp
rcl
mov
in
out
xchg
lret
int3
pop
sub
popf
jne
sub
pop
dec
mov
ucomiss
cmp
mov
cmpsl
add
or
sub
repz
xor
push
pop
popw
dec
and
loope
aam
shl
popa
add
add
in
lret
jl
add
push
sbb
icebp
sub
aam
inc
inc
dec
sbb
into
jg
inc
insl
add
jl
testb
dec
aaa
in
fwait
xchg
lds
in
and
mov
mov
push
and
mov
mov
les
cwtl
add
mov
push
popa
cmp
jle
popf
and
adc
pop
cmp
jp
stos
push
sub
inc
mov
das
dec
out
xchg
sub
aam
sar
xchg
adc
mov
mov
mov
xor
inc
mov
xchg
inc
std
ret
mov
inc
setae
ret
testl
xchg
pop
mov
sbb
cmp
out
mov
xchg
sti
movsb
les
adc
push
js
pop
pop
adc
lcall
or
fimuls
and
sub
xchg
scas
xchg
mov
inc
adc
mov
dec
je
divb
aas
mov
ljmp
imul
enter
ret
or
pop
adc
btr
mov
fcomps
mull
dec
jo
mov
push
nop
adc
enter
pop
pop
adc
lahf
mov
xchg
cmp
ss
sub
jnp
add
iret
movsb
std
lea
push
adc
movsl
outsb
sbbl
orl
or
sbb
test
sarl
mov
gs
outsl
adc
jecxz
mov
shrb
xor
xor
shll
je
sub
iret
test
notl
inc
jae,pn
gs
movsb
mov
add
or
inc
lahf
int
dec
js
cmp
out
and
adc
jge
negb
stos
sub
jp
jo
outsb
fsubp
je
loop
fimuls
fisttps
faddl
imul
mov
loope
in
scas
inc
xor
push
push
mov
cmp
add
enter
into
lret
xlat
sub
mov
fisttpll
sub
pop
out
adc
add
and
or
and
xlat
inc
mov
int3
push
subb
push
imul
clc
mov
clc
int
ja
call
imul
adc
xor
fwait
jbe
enter
jae
dec
lods
mov
stc
loop
xchg
nop
fwait
lock
dec
push
loop
adc
les
lds
jmp
out
dec
sub
jns
pop
inc
lods
push
xchg
inc
cmp
cmp
loope
mov
es
mov
jl
insb
aaa
sub
cli
movsb
mov
cmp
arpl
ja
mov
test
ror
or
mov
ds
push
daa
rcrb
xlat
sbbb
push
adc
rcl
push
pop
and
jns
push
xor
rorb
jno
xor
add
bound
and
in
test
hlt
push
dec
inc
imul
paddsw
movb
in
cli
inc
mov
xchg
addr16
dec
dec
leave
out
sbb
inc
fmuls
movsl
mov
jo
inc
pop
jge
pop
or
add
add
sarb
nop
js
jmp
sbb
test
iret
das
idiv
and
ds
cmpsl
int
into
mov
popf
je
cmp
leave
out
jmp
push
pop
inc
fcompl
push
mov
inc
cltd
out
mov
mov
ja
push
inc
push
cmp
sub
cmp
inc
mov
adc
mov
lods
push
cli
lods
aas
lods
xor
xor
mov
jae
movsb
int3
pop
flds
in
or
out
int
push
lret
sub
sbb
mov
sbb
adc
ficoms
cmpsb
add
push
subl
adc
adc
mov
xlat
ja
push
xor
xchg
push
icebp
cmp
out
xor
movsl
fldl
and
pop
out
or
sbb
stos
dec
fadds
fistpll
repz
stc
test
mov
scas
mov
jecxz
sub
cmp
icebp
cld
add
dec
inc
add
dec
out
stos
gs
daa
xchg
adc
cmp
push
xchg
and
jbe
loopne
sbb
cmp
cwtl
in
xor
aaa
push
negl
loope
mov
and
push
push
and
cli
xchg
xlat
sarb
push
mov
adc
add
sub
dec
push
push
enter
ja,pt
je
mov
rorl
clc
imul
and
add
push
adc
dec
ds
sbb
inc
cmpsl
jno
jle
push
or
pop
and
and
je
xchg
loope
stc
and
push
xchg
shll
lock
mov
in
inc
push
pushf
cwtl
popa
lret
cs
inc
dec
cmp
sbb
ljmp
sub
and
lds
pop
or
mov
and
push
insl
jne
or
or
jne
jno
inc
pop
in
hlt
push
sbbb
pop
sub
ds
sbb
addl
inc
jae
repz
cmpsl
mov
lret
mov
or
jbe
mov
pop
and
pushf
cmpsb
mov
mov
mov
das
dec
pop
cmc
loope
out
in
dec
push
jb
insb
lahf
test
insb
or
mov
sbb
adc
mov
sub
jg
cmp
movsb
add
imul
mov
inc
pushf
stos
mulb
dec
xchg
sbb
aaa
stos
enter
js
xlat
jl
cld
mov
push
cmp
cmp
out
lea
scas
mov
fwait
dec
pop
movsl
add
and
and
cmp
movsb
dec
rcll
jmp
mov
gs
dec
js
dec
je
pop
mov
fucom
or
push
sub
or
cmp
out
sub
jmp
dec
ret
sbbb
lods
outsb
loopne
push
xor
mov
call
rorl
int
push
lret
jns
cltd
mov
fwait
shlb
stc
and
lock
movsb
shr
mov
ret
jnp
jne
adc
mov
jb
xor
int
xor
xor
xor
mov
les
es
outsl
push
cs
adc
cmpsb
ret
aas
push
jo
leave
and
jo
push
jb
mov
xor
push
fsubr
and
loop
hlt
jle
cmp
mov
incb
rolb
test
mov
sarb
outsl
into
cmp
dec
and
enter
jno
cmpsb
jae
dec
insb
jbe
xlat
leave
mov
aad
pop
neg
mulb
aaa
adc
push
and
rol
jge
dec
cltd
test
stc
bound
leave
ret
into
push
aam
xchg
xchg
jge
sti
fmuls
flds
fwait
jge
dec
xor
jno
outsb
pop
add
aaa
jle
pop
mov
rclb
iret
pop
lcall
test
orb
sub
ljmp
mov
jmp
mov
xor
cmp
pop
mov
test
ja
js
aaa
dec
test
cmp
ret
inc
sti
jnp
vmovaps
andb
loop
inc
and
movsl
or
xchg
popa
cld
stos
mov
scas
cltd
ret
jge
jae
repz
out
jnp
lret
adc
push
les
jb
imul
add
fnstenv
add
cmpsl
add
jmp
out
mov
pop
les
enter
sahf
divl
push
ja
mov
mov
xchg
and
jno
or
rcl
mov
jbe
cmp
clc
xchg
imull
in
adc
jmp
out
scas
cs
or
jmp
adc
cwtl
je
scas
enter
adc
mov
arpl
sbb
outsl
mov
push
mov
mov
mov
jns
inc
outsl
movsb
sub
adc
sub
fwait
add
clc
sbb
fcomps
pop
out
and
mov
stos
sbb
mov
sub
and
rorl
icebp
rcrb
push
cmpsl
aam
ret
cbtw
sar
push
pop
incl
adcl
add
into
push
cmpsl
aam
fldcw
fwait
stos
popa
movsl
add
push
int
lret
jg
xchg
jle
addb
stos
data16
int3
xchg
push
test
xor
push
imul
mov
lds
leave
push
push
std
movsb
cs
bound
loope
cltd
cmpsb
lea
les
lds
pop
xchg
xorl
mov
ss
cwtl
mov
insb
mov
clc
xchg
inc
xchg
push
add
rcr
in
adc
dec
out
lods
mov
lahf
add
fmuls
bound
insb
in
call
imul
dec
out
jge
push
jp
mov
rclb
inc
mov
pop
push
and
xchg
or
cmp
insl
push
testb
push
mov
dec
jle
cmp
add
sysret
inc
sti
xchg
mov
pushf
inc
ret
inc
lret
xor
xor
repz
sub
add
cld
sub
xor
lahf
lcall
or
dec
inc
cmc
loopne
jl
fcompl
mov
cmpl
out
in
je
sbb
dec
pop
push
adcb
dec
test
es
mov
ss
movsl
mov
out
mov
inc
add
in
jecxz
andb
sub
add
scas
fildl
int
jp
movsb
pop
sbb
sti
out
mov
shl
sub
es
pop
ret
aas
stos
mov
outsl
mov
cmp
adc
and
dec
scas
es
fists
ret
aad
sub
jp
add
cwtl
push
adc
outsl
xor
cmp
cmpsl
push
or
lcall
xor
sbb
arpl
sub
or
loopne
lock
outsl
outsb
sub
roll
outsl
xchg
popf
aam
mov
xor
es
movsl
jp
pop
jl
mov
and
push
push
call
mov
inc
or
pop
push
lcall
ret
pop
adc
cld
pop
hlt
jo
mov
mov
inc
arpl
cmc
mov
mov
fs
cmp
addr16
sbb
xchg
dec
addl
mov
xlat
pusha
rcl
pop
imulb
fsubr
dec
mov
out
cwtl
hlt
repnz
shlb
gs
pop
sbb
leave
inc
ja
xchg
rorb
add
adc
or
add
inc
icebp
popa
inc
cli
cmp
sbb
mov
push
cmp
insb
sub
imul
mul
movb
scas
clc
divl
cmp
mov
shll
add
pop
sahf
enter
or
data16
mov
jle
imul
add
mov
test
dec
movsb
dec
rcrb
notl
test
aas
fisttps
lods
out
daa
ss
sbb
dec
push
mov
xor
out
push
ds
and
mov
jl
xchg
pop
out
cli
inc
out
cwtl
mov
pop
push
xchg
pop
jmp
test
dec
xor
cmp
jmp
mov
shl
test
adc
push
or
lds
outsl
dec
jle
stos
mov
xchg
sarl
inc
popf
gs
jbe
dec
dec
cmp
das
and
daa
test
cmp
lret
jge
adc
and
xor
and
push
dec
ss
xor
test
mov
mov
adc
ret
fidivrl
xor
jmp
mov
pop
mov
cmp
sahf
mov
mov
pop
xchg
lcall
mov
stos
add
dec
loopne
dec
add
cmp
ret
dec
add
mov
or
and
cld
adc
mov
mov
fldenv
add
mov
xchg
js
and
out
imul
pop
mov
mov
or
xchg
shlb
ffree
add
mov
mov
lcall
jmp
inc
andl
pop
insb
addr16
push
rclb
outsl
xor
pop
popf
in
lods
mov
ret
cltd
loopne
jo
jp
xor
in
add
les
fsts
xchg
jne
dec
jle
xchg
adc
xor
hlt
dec
incl
jo
sub
test
push
iret
mov
cmc
xchg
inc
sti
ret
out
and
pop
inc
add
rorb
xchg
repz
mov
cmp
out
out
sub
xor
gs
mov
mov
fsubl
inc
icebp
dec
push
xchg
push
add
cmp
inc
aaa
cmp
cmp
popf
mov
pop
add
lds
or
je
stos
popf
loop
shrl
push
pop
add
add
je
out
inc
or
fs
out
jnp
jge
push
fcomp
dec
jo
jecxz
aaa
or
xchg
push
push
dec
xchg
leave
xchg
cltd
inc
push
inc
mov
add
xchg
fdivs
xor
mov
sbbb
mov
sbb
daa
push
xorl
cwtl
mov
stos
pop
and
rcll
xor
fiadds
stos
repnz
filds
inc
xchg
or
sahf
and
sbb
cmc
out
clc
test
or
es
mov
out
sub
int3
push
inc
ljmp
or
sub
cmp
push
pop
fimuls
mov
mov
lahf
mov
mov
imul
pusha
dec
adc
mov
and
lahf
in
repnz
fnop
popf
rorl
xchg
jae
push
mov
lret
jle
xor
mov
add
and
imul
cli
xchg
mov
dec
testl
xor
inc
jo
rcrl
xchg
ds
jbe
cmovp
cmp
into
int
sbb
decl
push
jae
scas
lcall
sar
sub
mov
sub
test
stc
mov
cmc
mov
ror
adc
popa
cmp
sub
mov
aaa
push
rcll
adc
dec
jg
mov
mov
and
getsec
sar
shr
lods
ret
jno
enter
test
hlt
sbb
popf
iret
in
scas
iret
add
dec
pop
rol
or
scas
int3
mov
push
sarl
les
add
mov
cmp
outsl
out
and
orl
jne
xchg
lret
mov
pusha
orl
fistl
push
push
pop
out
push
jne
xchg
jecxz
jo
ret
out
mov
ret
sub
insl
jl
cmp
dec
mov
cmpsl
enter
dec
sub
cmc
pop
xlat
das
jbe
jl
inc
sahf
inc
popa
ss
pushf
loope
pop
nop
lods
mov
fimuls
aad
aaa
data16
ja
sbb
mov
test
loopne
arpl
xchg
add
ret
xchg
mov
int3
cmp
out
sub
lods
negb
jns
in
in
cmp
sub
aam
daa
lret
les
outsb
imul
scas
int3
inc
stc
adc
jle
xor
dec
cmpsb
mov
xchg
mov
sub
pop
mov
mov
movhps
add
cmp
xor
lods
mov
jb
gs
pop
adc
mov
shll
mov
mov
into
sarb
xchg
ljmp
pop
xchg
hlt
mov
pushf
dec
hlt
jmp
cmp
add
and
jnp
cwtl
mov
mov
inc
mov
vpunpcklbw
adc
pop
sbb
add
lret
lods
mov
mov
add
xor
mov
mov
mov
add
and
mov
mov
mov
lea
mov
mov
mov
sub
add
mov
mov
jmp
loope
xchg
xchg
fisttpl
lea
jp
pop
jp
mov
mov
sub
mov
test
xor
inc
jb
xchg
pop
inc
and
stos
fstps
outsb
xchg
add
pop
cmpsl
sbb
addr16
mov
loop
cs
and
and
shll
jmp
clc
mov
inc
movsb
loope
sub
xor
push
ja
aad
mov
ret
shlb
pop
bound
or
popf
mov
and
or
jle
call
mov
push
ja
and
jg
pop
sbb
jge
out
outsl
jg
push
push
test
loope
jl
adc
xor
jle
xor
aas
in
sbb
fcmovne
jmp
add
and
add
pop
jle
loopne
in
les
lods
clc
push
adc
sbb
in
stos
movsl
mov
sbb
lds
subl
pushf
xchg
mov
testl
push
jle
and
mov
inc
mov
xchg
pop
adc
movsl
loop
xor
mov
push
insb
or
pop
and
xchg
lods
sbb
mov
dec
rdtsc
sbb
mov
bound
paddsb
jmp
movsb
fwait
jns
aad
lret
data16
inc
sub
enter
in
pop
in
push
lock
popa
scas
add
xchg
xlat
mov
xchg
xchg
mov
mov
imull
cmp
dec
inc
out
jl
das
mov
xor
fisubrs
stc
repnz
add
imul
ss
cltd
or
inc
jecxz
orb
mov
push
sub
cmp
add
cmc
xor
mov
pusha
loope
jl
and
dec
mov
xchg
jns
xchg
sub
enter
xor
xchg
out
mov
mov
sarl
or
jns
jno
or
movq
mov
out
into
jecxz
lret
sbbl
je
mov
jb
mov
push
mov
jno
ficompl
jb
imul
xor
mov
jge
data16
xchg
sub
aad
and
cmpsl
inc
mov
iret
out
mov
outsl
and
xchg
in
mov
mov
xchg
adc
jg
sbb
shrb
jge
mov
rcrb
jbe
cmpsl
push
sbb
cmpl
xor
cmp
add
cmpsb
insb
cmp
stos
test
jl
pop
testb
push
mov
sti
pop
xchg
scas
or
stos
sbb
dec
dec
mov
mov
adc
cwtl
cs
scas
cld
jecxz
and
pop
dec
mov
scas
mov
loope
inc
push
mov
sub
test
xchg
or
clc
mov
add
or
inc
dec
sub
inc
mov
push
add
aaa
popa
popf
es
jp
inc
xchg
xchg
cmpsw
pushf
repnz
je
or
rclb
fs
outsl
cwtl
lock
inc
cmpsl
int3
add
mov
sbb
sub
pushf
push
shrl
popl
or
push
outsb
les
or
jg
ljmp
xchg
mov
sub
rcr
fwait
mov
hlt
sbb
or
and
jg
mov
push
add
mov
mov
int
stos
arpl
xor
jb
mov
add
mov
pop
lea
ficomps
pop
cltd
xor
cmp
cmp
cmc
dec
movsb
sub
subb
clc
mov
in
mov
or
outsb
stos
or
sbb
sbb
int3
lods
mov
inc
lcall
sbb
or
test
in
ret
jle
outsl
cmp
mov
cwtl
dec
mov
repnz
jmp
pop
in
mov
data16
std
pushf
fistpl
pop
cld
jmp
cmp
ret
ljmp
mull
ror
cmp
lds
jb
movsl
sahf
dec
repz
mov
popf
or
xor
jbe
jo
mov
in
adcl
fcmovb
rol
lret
jp
jmp
iret
mov
jnp
movsl
lcall
mov
xor
adc
pop
imul
ret
inc
arpl
lds
in
cmpsl
loopne
scas
stos
sbb
adc
inc
mov
lds
dec
shl
sbb
into
and
out
mov
jge
nop
xchg
popf
jne
mov
dec
mov
push
dec
mov
subb
and
lahf
and
sarl
in
or
aas
xchg
sub
mull
lret
inc
sbb
sub
shlb
cmc
jp
mov
loopne
jle
dec
fcomp
adc
lea
std
add
call
adc
les
or
sub
inc
mov
fcomps
cmp
in
jbe
add
push
pusha
dec
jb
mov
mov
jmp
jno
fiadds
mov
pop
inc
fidivl
sarl
rorl
ja
lods
aad
push
cmp
stos
push
in
or
add
lea
sbb
hlt
test
jp
mov
inc
sub
mov
mov
jge
add
lahf
add
sub
cli
hlt
mov
fcoml
fwait
test
inc
and
xchg
in
movl
pop
dec
mov
push
and
inc
add
mov
leave
and
imul
jo
push
les
ficompl
push
sbb
fs
inc
xchg
sti
mov
test
pop
add
add
xchg
test
addb
adc
pop
xchg
pop
idivb
insb
das
inc
in
in
add
sbb
in
test
sbb
mov
push
cld
loopne
pop
cmp
mov
jg
les
push
jge
inc
mov
adc
cmpsb
inc
divb
sbb
pusha
std
js
dec
ret
or
ret
mov
ja
lahf
cwtl
pushf
in
sub
jge
incb
cmp
pushf
sbb
in
pushf
scas
or
ljmp
inc
pop
mov
xchg
nop
ljmp
dec
outsl
ja
popf
or
xor
fldcw
mov
iret
mov
jle
enter
int
push
or
ja
sbb
inc
adc
mov
repz
imul
fcoml
push
stc
add
jge
ret
cmpsb
inc
lea
stos
ret
lods
xchg
cld
loopne
outsb
gs
in
mov
stos
push
in
cmp
cmp
andb
imul
scas
icebp
xor
adc
aad
xor
mov
int3
pop
sub
scas
les
imul
cmp
mov
inc
call
pop
jbe
loopne
rol
inc
jp
scas
in
test
jns
call
sub
cld
iret
dec
iret
out
shrl
sub
addr16
movsb
js
addr16
pop
in
mov
sub
pop
sahf
dec
imull
jp
or
add
push
lock
or
pop
aam
inc
sub
cmp
repnz
fsubrl
add
add
stos
daa
sub
push
stc
gs
jmp
sub
into
inc
jns
xchg
adc
cmp
test
outsl
jl
cmp
mov
cmp
out
int3
sbb
sbb
lods
fisttps
lret
repnz
dec
sbb
stc
pop
fwait
roll
cli
xchg
shr
and
rolb
cmp
nop
cmp
gs
lcall
lea
jmp
dec
add
je
clc
add
push
xchg
shl
add
dec
movsb
stos
mov
push
xchg
cltd
mov
mov
sbb
sbb
pop
jo
cltd
adc
adc
and
cltd
imul
xorb
in
fwait
aaa
in
push
mov
adcl
popa
sub
jle
cmpsl
lea
or
and
das
out
mov
xchg
pop
mov
xor
inc
xchg
mov
popa
jb
sbb
adc
and
clc
sub
pushf
sub
or
data16
pop
movsb
fs
inc
shlb
adc
dec
mov
arpl
icebp
movsb
add
xchg
push
dec
rcrl
pop
pop
in
pop
pop
inc
pop
sub
stc
lock
add
insb
push
jp
pop
les
or
ret
popf
xchg
test
fdivs
sahf
push
inc
mov
pop
mov
and
xor
cmp
fsubrp
cmc
push
pop
mov
mov
sbb
push
push
jb
daa
mov
stos
jp
in
inc
cmc
into
adc
jmp
in
push
add
loop
dec
jge
add
std
insb
jg
aam
mov
sbb
push
dec
sbb
mov
sub
cmc
fsts
mov
xor
mov
mov
dec
inc
lock
aam
inc
and
dec
mov
test
mov
jl
inc
cltd
pushf
leave
loopne
daa
xchg
mov
add
outsl
xor
out
adc
bound
mov
cmp
jno
int
cmp
add
negb
test
jnp
jp
cmp
rcrl
inc
sar
xchg
int3
xlat
mov
enter
xlat
jle
xchg
push
mov
les
test
pop
icebp
xchg
xchg
pop
in
cmp
std
je
lahf
adc
dec
adc
push
lds
sahf
mov
ss
lret
divl
push
or
xorb
add
out
xor
les
adc
shlb
aas
mov
shlb
pop
or
stc
aam
mov
loop
inc
test
outsl
jmp
jns,pt
movsb
sbb
jnp
cmpsb
daa
or
das
mov
test
out
shrb
ja
ret
int3
mov
arpl
mov
dec
adc
add
repz
sbb
pop
sbb
or
clc
mov
movsl
in
push
mov
adc
jnp
inc
inc
mov
pusha
push
mov
fisttpll
jg
je
xchg
push
push
andb
or
push
mov
adc
movsb
dec
sub
into
sbb
mov
dec
test
xchg
add
test
push
sbb
es
sbb
and
mov
outsb
sbb
mov
repnz
mov
nop
addr16
inc
inc
addr16
jno
push
inc
in
idivl
pop
and
push
push
cli
mov
sub
out
ret
sbbb
cld
out
mov
fbstp
int
jne
jmp
add
jle
rcl
jo
cmc
mov
mov
push
dec
push
cmp
xor
cmp
cmp
lock
push
lods
mov
jg
jne
sti
jmp
pop
mov
inc
xor
lret
xchg
or
stos
aad
and
cwtl
paddb
jmp
xlat
cmp
dec
push
fimull
push
jae
push
and
cmp
cmp
hlt
sbb
int
lcall
pop
lret
lock
pop
and
cs
and
fdivrs
sbb
and
movsb
pusha
sbb
stc
outsb
cwtl
test
jbe
and
cld
loope
sbb
inc
pop
xor
fbstp
out
repz
daa
pop
push
mov
xchg
mov
shlb
jmp
fisubs
jp
ja
and
cmpsl
shll
mov
push
mov
and
or
pop
scas
bound
hlt
enter
and
fistpll
lahf
test
pop
insl
xor
int3
jle
jp
cmp
push
ja
mov
lea
shrl
sahf
nop
cli
cmc
cltd
or
mov
xor
xor
cmp
inc
data16
pop
push
outsb
inc
and
mov
pop
movsl
inc
aas
sbb
shl
push
push
cmc
pop
jnp
push
sbb
lods
jmp
mov
lahf
pop
les
pop
pop
pusha
inc
insb
sahf
lcall
das
inc
sbb
fcoml
lcall
mov
shl
imull
les
std
imul
fwait
push
jno
push
imul
push
jo
cld
insl
mov
inc
fsubrs
xchg
fldl
push
aaa
mov
sbb
aaa
mov
adc
iret
xor
and
out
outsb
insb
addb
xor
andb
jp
adc
and
fisttps
in
stos
jnp
sbb
cltd
sahf
shlb
fildll
pop
rolb
aas
mov
mov
mov
gs
xchg
popf
movsl
mov
xor
lret
mov
rclb
testl
cmpsb
xchg
dec
ja
mov
sub
or
pushf
stos
and
andl
popa
loope
stos
rcrl
mov
popf
dec
out
cwtl
test
fcmove
stos
xchg
xlat
xor
and
push
adc
xor
fistpl
data16
push
adc
push
jle
daa
push
repnz
push
xchg
inc
icebp
sbb
sub
repz
sbb
iret
dec
or
and
mov
out
dec
dec
add
xchg
sarl
jbe
mov
and
sbb
mov
push
mov
fdivl
ljmp
sbb
jp
sub
adcb
addr16
inc
mov
mov
popf
cltd
repz
mov
mov
sbb
repz
std
sahf
stos
ret
add
in
aad
adc
push
dec
xor
fnstsw
insl
inc
pop
dec
add
xor
popa
aad
nop
mov
je
int3
shlb
aad
lcall
pop
inc
push
idivb
cmp
out
mov
movsl
fcoms
mov
cmc
mov
notl
xor
shll
js
shlb
push
sub
cmp
ret
jns
push
mov
xchg
sbb
xor
mov
aaa
pop
mov
mov
test
mov
movsl
test
lods
pop
movsb
data16
mov
sub
ret
and
cmp
shrl
lret
aam
mov
adc
inc
mov
imul
sbb
jmp
xchg
in
aad
cli
jne
insb
pushf
push
xlat
out
add
mov
sbb
mov
pop
inc
in
test
add
jg
loop
ss
scas
loope
mov
push
dec
lahf
test
imul
jg
or
bound
sbb
mov
js
jnp,pt
fs
add
lahf
lret
sbb
pop
fadds
ret
fcom
add
xlat
sbb
cmp
into
shr
daa
pop
outsb
xor
mov
jle
sbb
insl
inc
pop
add
loop
cmp
fisttpl
sbb
int3
cmp
mov
mov
icebp
aam
sub
out
mov
mov
cmp
stos
push
jmp
data16
in
adc
jle
test
pop
xchg
scas
test
aad
loopne
mov
les
push
mov
xchg
cmp
mov
push
xlat
nop
mov
and
pop
or
leave
stos
push
std
psubb
jmp
out
push
mov
and
leave
jns
push
in
xchg
sti
ret
pop
mov
outsb
add
movsb
mov
lods
dec
cltd
imul
jp
or
pop
inc
xchg
add
cld
xlat
adcl
test
stc
dec
insl
sub
xchg
mov
sbb
or
stos
cs
pop
lret
sub
aas
xor
xor
pop
xlat
jp
xor
xor
test
in
in
fmul
stos
cltd
or
clc
mov
cmc
arpl
inc
lods
daa
xor
aas
and
in
pop
mov
xchg
jp
inc
loop
jmp
outsb
sbb
xor
inc
int3
dec
mov
lret
out
aad
dec
mov
mov
fwait
xorl
xor
and
lock
in
leave
add
mov
sub
xchg
push
xchg
idivb
push
lods
add
jl
and
and
xchg
inc
test
in
bound
mov
outsl
push
pushf
shl
mov
jmp
imul
pcmpgtb
mov
cmc
ffreep
ret
xor
sbb
int3
xchg
mov
xchg
es
out
xor
ss
add
pushf
mov
xchg
mov
in
cmp
aas
lahf
loop
in
mov
mov
pop
cwtl
push
subb
mov
xchg
xlat
mov
push
fstpl
cli
out
pmuludq
dec
fs
loop
and
pop
jg
mov
fidivl
push
cmp
mov
and
ljmp
sbb
add
sub
loopne
xchg
cli
test
jbe
jns
sbb
test
sbb
int
push
pop
mov
ljmp
dec
pusha
int
xchg
dec
adc
mov
push
ss
inc
nop
imul
leave
mov
fcmovbe
mov
or
stos
lea
subb
pop
push
and
outsl
mov
adcl
cmpsb
push
daa
jecxz
push
popf
lret
mov
xchg
bound
cwtl
in
movntq
inc
cld
adc
cmpsb
in
outsl
inc
pop
int
inc
inc
lods
pusha
jmp
dec
pop
add
inc
mov
push
enter
dec
cmp
inc
fmuls
fsts
pop
rorl
sbb
loop
add
jmp
pop
arpl
sbb
sti
inc
cmp
insl
adc
mov
mov
xchg
shl
out
imul
out
ss
das
andl
imul
stos
jno
inc
mov
pop
pop
inc
imul
push
into
cli
fistl
lds
and
out
lock
cmp
cmp
cli
testb
push
in
sbb
xor
sbb
and
insl
hlt
cltd
fcoms
dec
jmp
inc
mov
int
scas
pop
push
pop
jmp
lahf
mov
and
sub
jno
insl
cwtl
call
fimuls
nop
enter
into
jo
loop
pop
jecxz
add
scas
scas
in
adc
jmp
add
inc
push
fnsave
arpl
mov
mov
movsb
insl
or
jno
call
inc
dec
xor
lds
mov
in
fisttps
jmp
adc
mov
jae
pusha
and
push
in
repnz
xor
xor
je
mov
pop
pushw
xorl
das
pop
mov
xchg
imul
aaa
cmovno
jno
call
pop
cld
jg
cltd
xchg
xor
pushf
pop
xor
inc
jb
out
mov
test
xchg
clc
jns
fistpl
sub
add
scas
add
cmp
adc
cmp
lret
inc
ret
add
mov
xchg
push
cmp
sbbl
push
fmull
jle
aam
mov
in
mov
jp
push
fdivs
and
imul
mov
push
jge
test
lods
push
jae
loop
filds
dec
jno
lret
ds
rcll
mov
dec
mov
mov
scas
xchg
jp
sub
scas
dec
xchg
mov
clc
mov
sub
stc
pushf
xchg
popa
push
xor
xchg
inc
cmp
jmp
adc
test
imul
sbb
int
mov
mov
jbe
jle
mov
xchg
and
ss
lret
jns
loopne
mov
arpl
test
mov
shlb
xor
sbb
mov
xchg
dec
jl
xor
mov
int
shll
mov
je
jp
addr16
jne
fsubp
mov
out
add
pop
mov
incl
fnstenv
sarb
fsts
ret
jo
xor
cmp
push
ret
or
pop
adc
adc
pop
xchg
out
sbb
fistpl
xchg
loopne
cs
lods
fsubs
sub
xchg
jno
ds
je
inc
add
cmpsl
push
jecxz
ja
mov
std
clc
jmp
inc
sarl
mov
adc
adc
fwait
add
and
or
stos
cmpb
cltd
pop
and
xor
cmp
in
inc
push
dec
sbb
inc
push
cmc
shr
les
js
cmp
iret
pop
ficompl
sub
int3
fistpl
in
inc
mov
inc
gs
add
mov
hlt
test
stc
pop
mov
lea
repnz
cld
popa
popf
stos
sbb
mov
mov
and
xchg
ljmp
call
mov
xchg
sub
pop
xchg
pop
gs
fimuls
stc
lock
and
push
push
push
mov
and
lods
sbb
and
aam
rorl
shr
repnz
shlb
into
push
mov
outsl
pop
mov
xor
in
sub
lret
pop
test
dec
cmp
lret
out
mov
xchg
cmp
push
test
cmp
data16
pop
gs
jns
cmpb
or
repz
pop
incb
push
insb
mov
xor
es
sbb
lret
lds
fildll
es
lock
mov
iret
cmp
pop
ss
mov
or
cmc
sub
into
aam
jge
dec
jl
jno
push
data16
sarb
divb
push
xor
shll
cwtl
lahf
xor
and
add
lock
mov
rcll
mov
dec
pop
fwait
push
adc
out
fld
cltd
adc
cli
popa
jp
imul
scas
bound
jbe
jge
adc
scas
xchg
cli
ljmp
xchg
ljmp
repnz
push
or
and
loop
dec
mov
and
clc
in
ror
popa
mov
cmpsl
or
cmp
dec
sahf
out
in
inc
mov
fwait
mov
push
dec
mov
add
fsqrt
mov
lret
fisttpll
pop
test
inc
js
std
adc
xchg
loop
inc
fiaddl
fcomp
lods
xchg
push
sbb
sub
rol
loop
hlt
push
into
inc
push
rol
out
mov
leave
out
push
jmp
lods
pop
push
pop
inc
and
aaa
jecxz
ja
mov
xchg
cltd
in
lods
repnz
fs
sahf
decl
jb
lods
pop
mov
adc
ficomps
push
and
sarl
cmpb
pop
pop
dec
shl
movb
adc
add
rcl
rcll
mov
icebp
sbbb
stos
imul
xor
xchg
inc
dec
pop
adc
lods
adc
dec
mov
and
jne
mov
mov
sahf
clc
aaa
ja
adcl
mov
cmpsb
and
or
push
out
jle
xchg
enter
xor
jecxz
cmp
sbb
xchg
lods
cmp
lret
mov
std
imul
and
and
jbe
jmp
xor
sbb
lcall
int
stos
jno
fbstp
pop
mov
je
fisttpl
into
test
orl
lret
mov
jg
dec
jmp
mov
push
add
mov
jp
psrlw
sbb
xchg
lcall
imul
out
xlat
cli
fstl
scas
add
mov
jecxz
sub
sub
adc
testl
jne
idivb
jae
push
xchg
sub
rclb
jle
rcll
daa
adc
or
mov
ja
mov
xlat
sub
fstps
fs
mov
sbb
ret
inc
pop
mov
cmp
adc
dec
jmp
dec
mov
sahf
je
fsubs
icebp
dec
pop
push
out
xchg
push
mov
test
hlt
and
ret
sub
enter
jbe
ret
xor
inc
dec
pop
pop
add
pop
jns
jbe
push
cli
jns
cld
test
pop
inc
add
out
xlat
in
daa
stos
or
addb
dec
xor
push
or
add
rolb
inc
jmp
pop
movsb
addr16
rcrb
pop
int
cmc
mov
add
dec
scas
sub
loopne
jecxz
shrb
sti
fs
mov
mov
jmp
dec
dec
mov
inc
mov
out
xor
and
inc
lcall
lds
mov
push
add
push
pop
adc
or
add
fdivp
negl
imul
sbb
lock
lahf
movl
int
sub
test
movsb
shll
push
mov
icebp
lock
add
jge
fsub
mov
test
loope
mov
jmp
stos
lcall
test
fnsave
mov
or
mov
movb
icebp
cltd
insb
xor
fistps
fs
imul
imul
mov
test
lcall
xor
xchg
jnp
and
loopne
mov
sbb
popa
mov
pop
scas
into
or
icebp
out
pop
dec
in
sub
sahf
xchg
sub
outsl
dec
cwtl
mov
inc
loope
arpl
cmp
mov
test
inc
aaa
xchg
push
icebp
pop
mov
jno
and
pushf
fcmove
jno
popa
subl
dec
cmpb
adc
push
jl
int3
lret
jecxz
imul
test
repz
cwtl
and
pop
inc
xchg
push
sub
mov
faddl
jle
test
data16
cmc
push
sub
sbb
stos
pop
ds
dec
mov
push
imul
push
sbb
add
cmp
add
sbb
push
negl
jge
sbb
mov
cmp
or
nop
bound
pop
inc
movsb
sti
push
mov
ror
push
lods
cmp
xlat
add
xchg
ret
cmp
inc
mov
or
jns
mov
cmp
out
jl
or
dec
push
xchg
push
in
mov
sbb
sti
iret
insl
mov
addl
xchg
stc
imul
inc
xchg
test
iret
mov
in
jns
xchg
xchg
outsl
sbb
lcall
int3
add
scas
xchg
hlt
mov
or
jl
test
pop
cmp
test
jns
lcall
dec
sti
aaa
data16
push
and
mov
sbb
adc
hlt
or
loopne
incb
pop
hlt
inc
mov
ss
int
push
pop
adcb
mov
mov
cld
xchg
clc
or
scas
faddl
dec
testb
push
add
mov
addr16
or
push
ja
lods
test
stos
sbb
fadds
call
lods
popf
lea
inc
orl
jae
jecxz
mov
xor
dec
mov
jo
arpl
data16
xlat
xor
xor
jg
loop
dec
add
stos
pop
lds
pop
push
stc
push
pop
shl
add
or
fcmovne
mov
aas
pop
sti
jbe
mov
adcb
mov
add
push
dec
mov
repz
lretw
scas
popa
les
xor
jbe
cmc
adc
or
aam
cmp
call
outsb
add
pop
xchg
negb
repnz
xchg
imul
lods
pop
rcrl
cmp
dec
pop
push
aad
pop
arpl
ret
adc
lea
call
pop
rolb
cmp
jno
fisttps
push
or
imul
fistps
jo
pushf
xchg
movsb
adc
xor
or
and
leave
push
fisubrl
fnstcw
aaa
fisttps
sbb
hlt
shlb
daa
push
in
or
shrb
mov
call
les
test
jne
stos
and
inc
or
push
inc
pusha
xlat
mov
stos
pop
cmp
das
jo
add
mov
jnp
sahf
push
push
mov
aaa
xchg
mov
jns
fisttpl
xchg
xlat
lods
mov
sub
mov
cwtl
push
mov
sbb
fists
pop
cmp
out
pushf
mov
sub
xor
mov
ffreep
push
gs
mov
popf
inc
push
and
pop
out
lods
sub
lea
mov
out
lea
inc
cmpsb
mov
add
mov
lods
inc
dec
call
jns
mov
jbe
xchg
addr16
jmp
cltd
fwait
pop
xchg
shrb
dec
adc
pop
invd
negb
call
lret
or
xchg
sbb
sbb
fidivrs
js
mov
adc
in
adc
sti
sbb
push
movsl
mov
fistpl
imul
data16
mov
dec
daa
hlt
daa
imul
popl
jo
outsl
adc
jns
mov
js
mov
sbb
dec
or
cmp
cmpsl
mov
sbb
movsl
add
jbe
jns
shll
mov
adc
arpl
cmp
lock
mov
clc
test
or
pop
xchg
lea
cmc
xor
mov
xor
and
decb
xor
or
xor
addr16
call
stos
xchg
out
mov
cs
lcall
cltd
and
jne
sub
and
inc
jecxz
into
dec
dec
fcomp
sarb
dec
jb
es
idivb
sub
test
cmpsb
cvttps2pi
mov
ljmp
push
or
adcb
push
inc
mov
int
or
aas
push
mov
inc
jmp
nop
adc
mov
mov
sbb
nop
into
cltd
push
jae
inc
jne
and
mov
push
ljmp
inc
mov
int
ja
cwtl
adc
sub
pop
mov
and
add
enter
xor
push
jns
inc
out
adc
lock
pop
cmp
add
jno
inc
pop
pop
adc
xor
pop
xor
push
mov
xor
jne
push
pop
jp
lea
hlt
jno
mov
aad
stc
sub
mov
pusha
ficoml
sub
pop
cmpsl
cli
mov
and
loopne
ja
jl
pop
cmpl
icebp
rol
sbb
and
shr
movsb
gs
push
ja
sbb
jne
loope
subb
insb
push
fnstenv
adc
in
rorl
mov
cmp
daa
repnz
lea
mov
mov
push
lods
loopne
outsl
repz
cmp
rcrb
ret
or
cmp
das
jns
xor
insl
ss
lea
mov
jp
jecxz
adc
lods
cmp
and
fiaddl
fsubs
sub
push
xchg
adc
addr16
jp
pop
pop
in
mov
pop
dec
xchg
xchg
cltd
orl
mov
adc
rol
cltd
mov
cmp
pop
addb
sub
aam
into
and
hlt
mov
addl
sbb
or
pop
pop
mov
imul
in
add
adc
cltd
mov
sbb
push
pop
rcrl
mov
ror
cmpsb
nop
ret
rcl
dec
je
mov
or
fdivrl
push
push
fstpl
cli
mov
insb
add
imul
and
sub
push
add
or
jl
mov
aad
fcmovnb
sar
sub
add
shlb
and
fs
stos
mov
into
jne
mov
xor
mov
add
mov
pop
pop
pop
leave
ret
push
mov
sub
push
sbb
push
mov
adc
mov
and
mov
adc
mov
mov
mov
sub
or
andl
sub
movl
movl
mov
mov
not
sub
mov
xor
mov
incl
xorl
xor
xor
mov
sub
mov
movl
cmpl
je
cmpl
jbe
jmp
push
push
call
cmpl
jne
mov
dec
mov
xor
add
dec
mov
jmp
mov
sub
mov
sub
orl
mov
mov
or
sub
mov
jmp
lea
test
mov
sub
stc
mov
pop
push
and
jno
aam
mov
jl
pop
dec
add
pushf
and
andb
xchg
test
ret
nop
test
and
mov
jns
fsubrl
jo
popa
cmp
mov
pop
mov
and
arpl
andb
sub
mov
iret
scas
das
sbb
mov
int3
gs
pushl
js
ss
sub
pushf
dec
nop
pop
push
mov
cmpsl
and
add
mov
xchg
or
xchg
mov
popa
daa
mov
repnz
pop
xchg
dec
insl
cs
xchg
mov
mov
sub
lret
add
pop
mov
push
adc
mov
fildl
in
mov
mov
test
inc
shll
mov
pop
xlat
pop
call
dec
mov
hlt
push
xchg
dec
das
pop
hlt
or
rorb
cmpsb
in
bsr
stos
adc
jmp
ss
adc
pop
sahf
movb
enter
sarb
mov
ja
sti
stos
mov
mov
nop
cld
jg
cmp
repnz
lods
mov
fmuls
and
inc
in
pop
addl
mov
popf
fisttps
das
cmc
jecxz
adc
cmpsb
cmp
or
test
in
imul
mov
cld
pop
call
popf
jl
adc
push
aam
js
rclb
or
cmp
xor
add
mov
fwait
dec
or
aas
clc
hlt
ud0
mov
xchg
shl
les
push
push
mov
pop
shrl
push
mov
xor
shll
cmc
push
out
lahf
add
xlat
or
push
cmp
repnz
js
mov
jge
ror
in
out
fldcw
push
ret
mov
inc
or
add
sub
mov
stos
fdivs
and
adc
push
jne
inc
sub
push
icebp
xor
aad
sub
ss
and
push
decb
mov
and
xor
stc
xchg
popa
loope,pn
add
xor
xchg
push
jmp
mov
fcmovne
int3
sbb
fnstcw
add
leave
fdivrl
test
dec
jmp
popa
test
mov
jp
fstpt
push
jbe
inc
sub
or
pop
fidivrs
ret
jae
std
aas
aas
vmovd
jle
sub
loop
and
cmp
push
lcall
cmp
jns
adc
scas
sbb
xchg
scas
cmpl
lret
cli
divb
pop
mov
dec
cmpsb
cmp
xor
jecxz
pop
int
mov
arpl
andb
mov
lretw
sub
mov
pushf
xchg
xlat
daa
pop
pop
leave
ret
xchg
jecxz
or
lahf
imul
stos
mov
cmc
or
fisubs
cmpsb
jae
in
jb
add
les
rcrl
arpl
roll
leave
std
xor
dec
sbb
or
xchg
fcomps
xchg
and
pop
enter
fnstcw
xor
xchg
fmul
pop
inc
jg
lret
shrb
add
xchg
and
cmpsb
inc
adc
jb
cli
pop
inc
shlb
loope
jno
mull
jl
das
push
in
lcall
cvtpi2ps
popl
push
xlat
cli
movsl
push
imul
add
jmp
mov
addl
xchg
scas
gs
in
fldenv
mov
adcb
in
cli
dec
xor
mov
bound
or
mov
loope
or
mov
out
loope
dec
pop
mulb
xchg
or
std
test
pop
push
insb
push
jne
shll
add
cmpl
sbb
dec
faddl
and
andb
push
test
insb
dec
sbb
add
sti
sub
or
inc
jae
cmp
rcrb
mov
insl
cmp
iret
aad
mov
sub
or
sbb
xor
mov
leave
jle
mov
mov
mov
aad
push
out
lock
std
test
cmpsl
sbb
movsb
sbb
stos
add
push
fldcw
sti
xlat
fsubrl
divb
out
sbb
cltd
arpl
cmp
push
xchg
std
hlt
push
ret
je
dec
or
mov
lods
adc
xor
fwait
imul
test
dec
xchg
loopne
rcll
cltd
rorl
in
insb
fnstsw
lds
pop
out
jo
sbb
mov
xlat
out
neg
push
xor
pop
xchg
add
jno
ret
cli
movsb
ljmp
lahf
dec
push
xchg
mov
addr16
xchg
xchg
push
ljmp
imul
test
pusha
mov
sbb
leave
stc
jno
sbb
out
enter
popf
lret
cmpsl
cmp
sahf
sarl
mov
dec
sub
mov
aas
xchg
aaa
out
cmpsb
jb
mov
mov
jp
cmpsl
and
add
imul
or
cmpsb
mov
cwtl
dec
movsl
pop
repnz
je
test
xor
cmc
push
jns
loop
sub
faddl
jns
fimull
sbb
stc
sub
or
loopne
mov
repz
pop
push
xchg
cmp
imul
ss
push
mov
jecxz
fisubl
std
mov
mov
aas
jp
fs
imul
adc
dec
and
jg
inc
jecxz
xlat
xchg
lahf
mov
cmpsl
pop
push
inc
and
xchg
mov
push
lea
outsl
dec
mov
jmp
cltd
mov
mov
pop
jmp
mulb
sbb
jae
fyl2x
inc
in
jnp
cmp
pop
std
pop
mov
dec
hlt
mov
mov
or
inc
xor
scas
add
push
fisubs
add
lods
into
xorl
cmp
jo
scas
test
test
in
aad
xchg
push
sbb
cmpsb
xor
adc
xor
mov
lret
mov
xor
or
add
and
arpl
pop
lret
out
inc
test
xchg
movsl
imul
sub
mov
mov
cltd
ja
pop
mov
cmp
std
adc
loopne
call
push
fnstcw
shld
inc
xchg
adc
sar
ljmp
data16
stos
frstor
imul
or
push
push
push
xchg
xor
test
mov
clc
push
aam
scas
inc
sub
mov
and
scas
mov
sbb
push
sub
lret
pop
dec
movb
out
jbe
pop
push
lea
mov
xchg
xor
dec
cs
dec
cwtl
lret
xor
cmp
cmp
je
dec
adc
stos
loope
adc
inc
and
scas
mov
test
cmpsw
jo
je
jmp
mov
cwtl
jmp
test
mov
pop
insb
dec
push
int3
pop
adc
adc
loopne
mov
mov
jns
fisttpl
bound
xchg
fcompl
mov
lret
xor
xchg
clc
and
outsb
cs
lret
cmp
aaa
push
imul
mov
cmpsl
inc
mov
jmp
dec
nop
add
rol
pop
test
out
add
arpl
pop
mov
dec
pop
inc
mov
jb
imul
mov
fwait
and
and
imul
mov
gs
jae
cli
lock
cli
fisttps
pop
push
ret
fstpt
mov
mov
xchg
push
cld
aas
pop
ljmp
jl
xor
xchg
leave
xchg
jecxz
rcll
shlb
or
movsb
test
mov
cmp
sahf
or
sub
mov
cmc
and
hlt
jno
adc
pop
and
xor
ja
dec
mov
dec
ret
in
daa
dec
out
cli
test
and
sub
int
adc
or
movsl
push
js
mov
gs
nop
pop
push
cwtl
xchg
icebp
push
adc
in
out
dec
lock
push
sbb
aas
inc
clc
nop
popa
divb
xchg
pop
push
adc
in
mov
or
stos
jno
outsl
push
subl
aam
xlat
es
sub
xor
in
adc
lea
pop
inc
insb
cmp
xchg
nop
call
push
or
mov
ljmp
pusha
outsl
imul
cmp
pop
add
cmpsl
push
ret
nopl
mov
push
mov
ret
js
mov
xchg
or
sbb
scas
push
xchg
shlb
jns
mov
sub
in
andb
lret
cmp
sub
ret
roll
repnz
dec
fwait
aas
xlat
cmpsb
adc
pop
fs
mov
and
in
sub
popf
inc
in
mov
cmpsb
mov
jl
leave
inc
mov
xlat
xor
mov
sti
inc
nop
mov
insl
jns
adc
jo
popa
lahf
jbe
jb
jo
shrb
rcrl
mov
shll
or
popf
mov
sub
mov
mov
fwait
int3
sbb
jne
aad
out
jae
es
push
jbe
enter
ficompl
imul
lea
push
lods
mov
jg
mov
add
adc
push
xchg
incb
pusha
and
xchg
imul
or
jecxz
lds
ficompl
jnp
xchg
xor
push
roll
bound
mov
mov
xor
jb
sub
and
mov
iret
xchg
mov
es
adc
xchg
sti
mov
jl
nopl
fs
cmp
rcll
cli
lods
or
jne
jmp
jge
add
add
push
adc
pop
add
jp
loopne
dec
mov
pop
je
decl
and
jge
push
cmp
cmp
enter
ficompl
out
xor
jb
and
aad
jg
bnd
push
cmp
cmp
bound
fsubrl
xlat
ja
stos
sbb
and
add
fwait
test
add
or
dec
stc
pop
jns
loop
movsl
xor
sbb
popa
mov
jg
sbb
cs
dec
imul
mov
mov
jp
orl
mov
jl
mov
mov
in
xor
idivb
adc
mov
fisttps
jecxz
xor
mov
and
push
or
mov
div
dec
mov
orl
and
or
shr
fstpl
inc
ret
xor
mov
rclb
adc
ja
subl
jmp
scas
and
das
lea
or
lret
dec
jl
icebp
sbbb
movsb
mov
push
xchg
push
adc
lods
dec
push
mov
mov
ja
jecxz
int3
pop
add
adc
in
xor
or
xchg
add
jne
gs
enter
xchg
add
jb
jne
fisubrs
stos
outsb
fdivp
mov
jecxz
xchg
xchg
mov
mov
cmp
add
dec
jb
push
hlt
movsb
cmp
fisttpl
test
inc
aam
fldcw
test
jbe
ds
decl
mov
gs
inc
inc
mov
xor
add
icebp
pop
add
push
and
push
sbb
mov
sbb
add
pop
cmpsl
push
or
movsl
mov
pop
subb
xchg
mov
push
xor
pop
mov
adc
push
data16
mov
sbb
adc
test
clc
arpl
add
inc
icebp
xor
ret
rolb
repnz
std
shlb
aas
dec
test
pop
xorb
js
out
or
enter
mov
mov
mov
out
push
xor
data16
in
xchg
ss
popf
sub
ja
pushf
cmp
in
mov
mov
in
fcompl
call
sub
or
mov
and
sbb
sbb
add
inc
add
adc
in
fdivs
bound
pop
cld
jbe
pop
jo
cwtl
adc
aas
jb
dec
push
or
clc
cwtl
dec
lret
push
pop
push
fnstenv
xchg
mov
cmp
pop
jns
xor
mov
orb
jbe
data16
or
popa
ljmp
leave
pop
sti
fsubl
pop
jno
adc
cmp
pop
pop
sub
out
movsl
lock
pop
pop
hlt
rcrb
clc
icebp
fistl
and
sub
pop
fadd
orl
or
mov
andl
mov
inc
mov
cmpl
jle
jmp
pushl
push
call
cmpl
jb
mov
movzwl
adc
sub
xor
xor
sub
mov
movl
cmpl
je
cmpl
jb
jmp
pushl
push
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
orl
mov
and
mov
mov
sub
mov
sub
mov
mov
sbb
mov
or
mov
xor
movl
cmpl
je
cmpl
ja
jmp
pushl
pushl
call
cmpl
jne
mov
dec
mov
xor
xor
dec
mov
jmp
mov
add
or
mov
mov
mov
sub
mov
orl
mov
xor
add
push
mov
xor
add
push
mov
xor
add
push
lea
push
pushl
pushl
call
test
je
lea
push
mov
xor
add
push
mov
add
push
mov
mov
pushl
call
mov
lea
mov
mov
test
je
lea
mov
mov
mov
mov
mov
sub
mov
mov
xor
mov
sub
add
mov
mov
mov
mov
pushl
movb
mov
pushl
pushl
pushl
pushl
pushl
pushl
pushl
mov
call
mov
mov
add
pop
pop
leave
ret
push
mov
sub
add
movl
lea
mov
xor
add
add
push
mov
mov
movzbl
add
lea
or
mov
mov
and
mov
sbb
mov
adcl
xor
subl
add
mov
adc
mov
mov
mov
sbbl
add
movzbl
add
mov
push
movl
mov
and
mov
adc
mov
mov
andl
mov
inc
mov
cmpl
jb
jmp
push
push
push
call
cmpl
jb
xor
mov
add
mov
adcl
add
cmp
movl
je
mov
movl
jmp
mov
movl
cmp
jne
push
movl
jmp
mov
mov
movl
cmp
movl
jne
mov
xorl
xor
add
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
ja
jmp
push
call
jmp
mov
mov
addl
mov
andl
xor
adcl
add
imul
mov
xor
andl
add
cmp
notl
mov
movl
push
movl
je
adc
mov
add
sub
mov
andl
mov
xor
adcl
add
imul
mov
movl
jmp
adcl
mov
xor
mov
add
mov
mov
xor
xor
mov
mov
andl
sub
add
movzwl
adc
mov
or
mov
adcl
add
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jbe
jmp
pushl
pushl
push
push
pushl
pushl
push
push
call
cmpl
jne
xor
or
inc
mov
jmp
mov
mov
andl
xor
sbbl
xor
lea
xor
mov
xor
add
imul
mov
xor
sub
mov
add
cmp
mov
mov
jg
xor
mov
sub
add
jmp
xor
add
add
mov
mov
mov
xor
add
not
and
movsbw
mov
sub
mov
xor
mov
cmp
jne
movsbw
mov
sub
mov
xor
mov
cmp
je
mov
xor
mov
sub
add
jmp
mov
mov
mov
lea
mov
mov
mov
xor
add
mov
mov
mov
xor
add
pop
cmp
jne
mov
xor
mov
add
imul
mov
pushl
jmp
mov
add
mov
mov
mov
movsbw
mov
sub
mov
xor
mov
cmp
jne
mov
mov
mov
jmp
mov
cmp
jne
push
pushl
pushl
pushl
pushl
call
pop
pop
leave
ret
push
mov
sub
push
push
andl
call
mov
sbb
mov
sbbl
push
call
adcl
test
je
push
adcl
push
addl
push
andl
call
movl
jmp
push
xor
or
sub
mov
mov
addl
lea
push
xorl
push
decl
call
test
movl
je
push
movl
jmp
sbbl
push
call
test
movl
je
adcl
push
push
push
addl
call
jmp
xorl
lea
sbbl
push
negl
push
call
sbbl
test
movl
je
orl
push
subl
call
jmp
movl
mov
sbb
mov
mov
mov
movl
cmpl
je
cmpl
jbe
jmp
pushl
push
pushl
call
cmpl
jne
xor
add
dec
mov
mov
dec
mov
jmp
mov
mov
movl
lea
adc
mov
lea
sbb
mov
inc
mov
mov
add
mov
mov
mov
movl
xor
sbbl
push
sub
mov
adcl
add
movl
mov
mov
mov
cmp
jne
mov
incl
mov
andl
mov
inc
mov
cmpl
jg
jmp
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
and
xor
or
add
xor
mov
mov
adc
mov
mov
sbb
xor
movl
cmpl
je
cmpl
ja
jmp
push
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
add
mov
movzwl
and
mov
mov
adcl
mov
movl
cmpl
je
cmpl
ja
jmp
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jl
jmp
push
push
pushl
call
cmpl
jne
xor
add
inc
mov
jmp
mov
or
mov
mov
xor
mov
dec
mov
or
mov
movl
adc
mov
sbbl
xor
add
jmp
mov
addl
xor
subl
lea
andl
push
movl
mov
addl
xor
andl
lea
xorl
push
adcl
mov
addl
pushl
call
andl
mov
inc
mov
cmpl
jl
jmp
push
pushl
push
pushl
push
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
xor
movl
cmpl
je
cmpl
jle
jmp
pushl
pushl
call
xor
add
dec
mov
jmp
lea
neg
mov
adcl
mov
xorl
xor
andl
xor
add
mov
andl
xor
movl
lea
movl
cmp
movl
jbe
mov
mov
sub
mov
sub
mov
mov
or
mov
addl
sub
addl
xor
movl
mov
not
mov
movl
cmp
jne
xorl
lea
mov
sbbl
lea
mov
orl
mov
test
je
addl
push
call
addl
test
movl
je
push
push
movl
push
jmp
orl
lea
addl
push
xorl
push
orl
call
orl
test
je
movl
push
movl
jmp
andl
jmp
xor
xor
inc
mov
cmpl
jae
cmpl
jbe
jmp
pushl
push
call
jmp
mov
not
mov
sbbl
mov
movl
cmpl
je
cmpl
jbe
jmp
push
push
push
call
mov
dec
mov
jmp
mov
xor
or
mov
sbb
mov
mov
mov
notl
mov
add
cltd
mov
dec
add
mov
adc
andl
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jb
jmp
push
pushl
call
cmpl
jne
xor
add
inc
mov
jmp
xor
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jl
jmp
push
push
pushl
call
jmp
mov
movl
cmpl
je
cmpl
jbe
jmp
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
mov
andl
mov
inc
mov
cmpl
ja
jmp
push
push
pushl
pushl
push
pushl
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
xor
add
mov
adcl
xor
mov
mov
xor
mov
cmp
jne
mov
cmp
je
mov
mov
mov
xor
add
adc
xor
xor
cmp
jne
cmp
jne
mov
mov
xor
mov
mov
mov
jmp
mov
cmp
je
mov
mov
xor
add
cmp
je
push
call
test
je
push
push
push
jmp
lea
push
push
call
test
je
push
jmp
mov
mov
mov
mov
pushl
mov
pushl
add
mov
mov
pushl
call
mov
mov
mov
jmp
push
call
test
je
push
push
push
jmp
mov
lea
push
push
call
test
je
push
jmp
mov
mov
xor
add
cmp
jne
mov
mov
mov
xor
add
cmp
jne
push
call
test
je
push
push
push
jmp
lea
push
push
call
test
je
push
jmp
mov
push
xor
add
push
push
pushl
pushl
call
push
call
test
je
push
push
push
jmp
lea
push
push
call
test
je
push
jmp
pushl
pushl
call
mov
xor
add
mov
mov
xor
add
mov
lea
mov
lea
push
mov
call
test
je
push
push
push
jmp
lea
push
push
call
test
je
push
jmp
mov
test
je
push
call
test
je
push
push
push
jmp
mov
lea
push
push
call
test
je
push
jmp
movl
movl
movl
movl
call
push
call
test
je
push
push
push
jmp
lea
push
push
call
test
je
push
jmp
mov
mov
mov
mov
mov
mov
mov
mov
cltd
mov
add
adc
andl
xor
mov
mov
mov
mov
xor
add
mov
adcl
xor
mov
mov
xor
mov
cmp
jne
mov
cmp
je
mov
mov
mov
xor
add
adc
xor
xor
cmp
jne
cmp
jne
mov
mov
xor
mov
mov
mov
add
mov
mov
xor
add
xor
add
adc
xor
xor
xor
add
adc
xor
xor
cmp
jne
cmp
jne
mov
mov
mov
push
call
test
je
push
push
push
jmp
mov
lea
push
push
call
test
je
push
jmp
mov
push
add
push
lea
push
call
push
call
test
je
push
push
push
call
jmp
lea
push
push
call
test
je
push
call
jmp
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
add
mov
and
mov
mov
mov
sub
xor
movl
xor
xor
adc
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jg
jmp
pushl
pushl
push
call
jmp
push
dec
mov
xor
xor
orl
mov
push
decl
mov
adcl
add
cmp
movl
je
mov
adcl
mov
addl
xor
orl
xor
orl
add
xorl
add
movl
adc
sbbl
xor
xorl
mov
mov
xor
push
subl
xor
sub
xor
add
mov
sbbl
add
movl
adc
xor
xor
cmp
jne
cmp
je
jmp
mov
mov
mov
xor
add
mov
imul
mov
xor
add
mov
mov
mov
mov
xor
xor
add
adc
lea
xor
xor
xor
mov
add
adc
xor
xor
cmp
jne
cmp
jne
mov
pop
pop
pop
leave
ret
push
mov
push
xor
movl
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jg
jmp
push
push
call
jmp
mov
movsbl
mov
or
sub
mov
decl
xor
movl
cmp
movl
jne
mov
push
mov
add
mov
mov
mov
xor
add
cmp
pop
je
mov
jmp
mov
xor
add
leave
ret
push
mov
sub
sbb
push
add
mov
or
mov
movl
push
andl
mov
inc
mov
cmpl
jl
jmp
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
xor
or
adc
mov
mov
mov
not
mov
movl
cmpl
je
cmpl
jg
jmp
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
xor
xorl
xor
movl
mov
add
add
imul
mov
cmp
je
mov
mov
mov
xor
lea
mov
mov
mov
mov
xor
xor
add
add
imul
mov
cmp
je
mov
xor
mov
add
imul
add
mov
mov
jmp
mov
mov
xor
xor
add
add
imul
pop
pop
leave
ret
add
inc
add
nop
inc
add
inc
add
nop
inc
add
inc
add
nop
inc
add
inc
add
nop
inc
add
inc
add
nop
inc
add
mov
add
inc
add
mov
add
inc
add
mov
add
inc
add
mov
add
inc
add
mov
inc
add
mov
inc
add
mov
inc
add
mov
inc
add
add
add
add
add
add
add
add
dec
add
adc
add
add
inc
add
inc
add
rolb
rolb
rolb
rolb
rolb
rolb
add
add
inc
push
inc
out
in
cld
daa
dec
mov
jecxz
sbb
iret
xchg
add
add
pop
inc
gs
gs
and
popa
and
pop
inc
data16
jb
popa
jb
jns
mov
sub
push
mov
xchg
mov
cmp
jne
mov
cmp
jne
mov
mov
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
push
movb
movb
xor
mov
lea
movzbl
xor
add
inc
mov
cmp
jb
xor
lea
movzbl
xor
add
inc
mov
cmp
jb
xor
lea
movzbl
xor
add
inc
mov
cmp
jb
lea
mov
mov
mov
mov
mov
push
mov
mov
cmp
jne
lea
mov
mov
mov
add
mov
lea
mov
add
mov
lea
mov
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
lea
push
mov
mov
xor
add
push
mov
lea
mov
lea
push
mov
mov
mov
mov
mov
movl
movl
movl
movl
pushl
mov
call
mov
mov
test
je
xorl
jmp
mov
mov
mov
xor
cmp
jne
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
mov
movl
movl
lea
pop
mov
xor
sub
mov
inc
dec
jne
lea
mov
lea
push
mov
xor
add
push
mov
add
push
mov
mov
movl
pushl
mov
call
mov
xor
add
mov
cmp
jne
mov
or
mov
add
mov
mov
mov
mov
mov
mov
mov
lea
mov
add
mov
lea
mov
add
mov
lea
mov
mov
mov
mov
lea
mov
mov
mov
mov
add
mov
mov
add
mov
mov
mov
lea
mov
mov
mov
mov
movzwl
xor
add
xor
mov
mov
movzwl
xor
add
xor
mov
xor
mov
mov
mov
lea
lea
movl
mov
call
mov
lea
push
mov
xor
add
push
lea
push
pushl
mov
call
mov
lea
lea
mov
call
mov
mov
mov
pushl
pushl
pushl
pushl
pushl
pushl
pushl
call
test
je
add
pushl
lea
call
mov
mov
mov
xor
add
mov
jne
mov
mov
pushl
mov
call
jmp
mov
mov
add
pop
pop
pop
leave
ret
push
push
push
push
mov
mov
add
push
cld
mov
add
push
mov
lods
xchg
push
mov
or
shl
not
push
mov
or
shl
not
push
add
mov
sub
sub
inc
push
push
push
push
push
push
sub
push
or
mov
shl
lea
mov
shr
rep
push
pop
call
loop
lea
lea
mov
mov
sub
and
mov
mov
call
jne
mov
and
shl
sub
neg
shr
pop
add
pop
lea
shl
cmp
pop
lea
push
push
mov
push
mov
jb
mov
sub
movzbl
mov
shl
mov
and
add
lea
call
mov
shr
and
cmp
mov
jne
cmp
jb
jmp
mov
call
inc
inc
sub
sub
cmp
jb
pop
inc
cmp
dec
mov
jb
inc
cmp
dec
mov
dec
jb
mov
dec
sub
push
jmp
mov
dec
call
jne
pop
pop
pop
pop
pop
pop
pushl
push
push
mov
mov
jmp
mov
dec
call
jne
mov
dec
call
jne
pop
cmp
mov
jb
mov
push
mov
sub
cmp
jb
lods
mov
stos
jmp
mov
call
mov
je
mov
call
mov
je
mov
mov
mov
mov
mov
mov
mov
mov
pop
pop
pop
mov
mov
add
push
push
cmp
mov
jb
add
push
mov
call
jne
mov
mov
shl
sub
push
pop
lea
jmp
mov
add
call
jne
mov
mov
shl
push
pop
push
pop
lea
jmp
mov
add
push
pop
mov
mov
sub
inc
mov
call
mov
sub
jb
add
cmpl
jae
addl
mov
cmp
jb
push
pop
mov
shl
sub
inc
push
pop
lea
mov
call
mov
sub
jb
mov
mov
cmp
jb
mov
andl
shr
orl
dec
cmp
jae
mov
sub
mov
shlb
add
shl
add
mov
jmp
sub
call
shr
shll
cmp
jb
incl
sub
dec
jne
mov
add
mov
shll
push
pop
sub
inc
mov
mov
call
test
je
or
shl
dec
jne
jmp
incl
mov
add
mov
mov
sub
cmp
ja
mov
sub
mov
lods
stos
cmp
jae
dec
jne
mov
movzbl
cmp
jb
call
sub
lea
mov
mov
sub
mov
mov
mov
sub
mov
leave
pop
pop
pop
ret
pop
pop
sub
inc
jmp
cmp
jb
ret
shl
push
mov
cmp
jae
mov
shl
lods
mov
mov
aas
or
add
inc
mov
pop
mov
or
pop
adc
pop
or
pop
or
addl
lret
repz
dec
lret
ret
xchg
stc
sbb
cmp
cwtl
movsl
orb
repz
dec
xchg
xchg
sub
ret
lcall
push
cltd
mov
lret
ret
imul
sbb
push
lea
sbb
pop
lret
add
push
pop
aad
lret
ret
fnstenv
dec
aad
addl
add
lea
ret
push
mov
sub
push
push
push
movl
movl
mov
mov
mov
mov
xor
mov
add
mov
mov
xor
add
mov
mov
xor
add
mov
mov
xor
add
mov
movl
movl
movl
push
pop
mov
mov
push
pop
mov
mov
movl
movl
mov
xor
add
mov
mov
xor
add
mov
movl
movl
movl
lea
lea
call
decl
jne
decl
jne
decl
jne
movl
mov
xor
mov
add
mov
mov
andl
xor
add
mov
mov
mov
mov
mov
mov
mov
mov
lea
mov
mov
lea
mov
mov
pushl
lea
mov
call
mov
xor
add
cmp
je
mov
mov
mov
mov
mov
mov
add
mov
mov
lea
push
mov
mov
mov
add
push
pushl
push
call
pushl
xor
movl
movl
movl
movb
lea
stos
stos
stos
xor
movl
movl
movl
movb
lea
stos
stos
stos
mov
mov
mov
movl
movl
movw
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
call
push
mov
mov
pushl
call
test
jne
mov
mov
mov
add
mov
mov
mov
call
push
mov
call
test
jne
mov
mov
mov
add
mov
mov
mov
call
push
mov
call
mov
mov
xor
add
cmp
je
mov
xor
mov
sub
add
mov
cmp
ja
movl
pushl
mov
mov
mov
call
push
mov
mov
pushl
call
mov
mov
mov
mov
mov
mov
xor
lea
call
push
mov
mov
pushl
call
mov
mov
mov
mov
xor
lea
call
push
mov
mov
pushl
call
mov
mov
mov
xor
lea
call
push
mov
mov
pushl
call
andl
mov
mov
and
add
push
call
test
je
mov
push
xor
pop
div
add
movzbl
push
call
test
jne
mov
mov
mov
xor
lea
call
push
mov
mov
pushl
call
mov
jmp
andl
incl
cmpl
jb
mov
mov
xor
mov
add
lea
call
push
mov
mov
xor
add
lea
call
push
call
mov
xor
add
cmp
jne
movl
mov
mov
xor
lea
mov
mov
test
je
mov
mov
xor
lea
mov
mov
xor
mov
sub
add
mov
cmp
jbe
mov
mov
mov
cmp
jne
pushl
lea
push
call
mov
jmp
mov
mov
xor
add
xor
mov
mov
xor
add
cmp
je
mov
mov
xor
add
cmp
je
mov
xor
add
jmp
mov
mov
and
or
sub
add
mov
xor
lea
mov
cmp
jb
mov
mov
mov
movl
mov
mov
mov
mov
xor
add
mov
mov
xor
add
mov
movl
movl
mov
mov
xor
add
cmp
je
jmp
mov
mov
sub
mov
xor
add
xor
div
mov
mov
mov
xor
add
cmp
jbe
mov
xor
add
mov
mov
mov
xor
add
imul
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
add
movl
mov
movl
mov
movl
mov
mov
xor
add
jmp
movl
movl
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
xor
add
add
imul
add
mov
mov
mov
cmp
jb
mov
mov
xor
add
imul
mov
xor
add
or
mov
xor
add
mov
xor
add
mov
lea
jmp
mov
mov
xor
lea
mov
mov
xor
mov
sub
add
mov
mov
xor
add
imul
cmp
jbe
mov
mov
mov
mov
mov
xor
add
push
mov
xor
add
push
push
mov
mov
xor
add
push
call
mov
mov
xor
add
cmp
je
mov
jmp
mov
xor
mov
mov
mov
xor
lea
xor
mov
sub
xor
cmp
jne
mov
mov
mov
xor
add
push
mov
xor
add
push
pushl
call
mov
mov
mov
mov
mov
mov
mov
xor
add
movl
movl
jmp
mov
mov
xor
mov
movsbl
xor
sub
movzbl
cmp
jne
mov
xor
lea
xor
cmp
jne
jmp
mov
xor
add
mov
xor
add
cmp
je
mov
mov
movl
movl
movl
movl
mov
mov
mov
xor
add
push
mov
mov
xor
add
push
mov
xor
add
push
mov
xor
add
push
call
mov
mov
mov
mov
xor
add
push
mov
xor
add
push
mov
pushl
xor
add
push
call
mov
xor
add
mov
cmp
je
mov
xor
add
cmp
je
movl
movl
mov
xor
sub
mov
mov
xor
sub
mov
mov
xor
sub
mov
andl
andl
lea
push
pushl
push
lea
push
mov
pushl
mov
add
push
push
call
mov
mov
mov
mov
xor
add
push
mov
xor
add
push
push
call
mov
add
xor
cmp
mov
mov
mov
jne
xor
add
push
mov
xor
add
push
pushl
call
mov
mov
mov
mov
jmp
xor
add
push
mov
xor
add
push
pushl
call
mov
mov
mov
movl
mov
mov
mov
mov
xor
add
mov
mov
xor
add
mov
movl
movl
mov
mov
xor
add
cmp
je
jmp
mov
mov
sub
mov
xor
add
xor
div
mov
mov
mov
xor
add
cmp
jbe
mov
xor
add
mov
mov
mov
xor
add
imul
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
add
movl
mov
movl
mov
movl
mov
mov
xor
add
jmp
movl
movl
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
xor
add
add
imul
add
mov
mov
mov
cmp
jb
mov
mov
xor
add
imul
mov
xor
add
or
mov
xor
add
mov
xor
add
mov
lea
jmp
mov
mov
xor
lea
mov
mov
xor
mov
sub
add
mov
mov
xor
add
imul
cmp
jbe
pushl
mov
pushl
lea
push
mov
mov
pushl
mov
mov
pushl
pushl
pushl
call
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
xor
add
push
mov
xor
add
push
pushl
call
pop
pop
pop
leave
ret
push
mov
push
push
lea
mov
push
mov
mov
mov
mov
cmp
pop
jne
movb
movb
movb
movb
leave
ret
push
mov
push
push
lea
mov
mov
mov
mov
mov
cmp
jne
mov
movb
movb
movb
movb
leave
ret
push
mov
push
push
lea
mov
mov
mov
mov
mov
cmp
jne
movb
mov
movb
movb
leave
ret
push
mov
push
push
lea
mov
push
mov
mov
mov
mov
cmp
pop
jne
movb
movw
movb
leave
ret
push
mov
push
push
lea
mov
mov
mov
mov
mov
cmp
jne
mov
movb
movb
movb
leave
ret
push
mov
call
mov
mov
movb
call
push
mov
movb
call
push
movb
call
movb
mov
jmp
push
mov
push
mov
push
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
movl
mov
movzwl
xor
add
pop
test
je
mov
movl
leave
ret
push
mov
sub
andl
movl
movl
movl
movl
movl
mov
mov
mov
mov
push
push
mov
mov
mov
mov
mov
push
mov
test
jne
pushl
mov
call
mov
mov
add
mov
mov
mov
mov
xor
mov
add
cmp
jne
mov
mov
mov
mov
mov
mov
xor
add
mov
mov
andl
xor
add
mov
lea
push
mov
xor
add
push
mov
add
push
mov
mov
movl
pushl
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
mov
lea
mov
lea
push
mov
xor
add
push
mov
add
push
mov
mov
movl
pushl
mov
call
test
je
andl
cmpl
jbe
mov
mov
sub
mov
incl
mov
mov
inc
cmp
jb
mov
mov
add
mov
mov
add
sub
add
mov
mov
mov
movl
jmp
add
shr
mov
je
lea
mov
mov
mov
mov
movzwl
mov
and
mov
mov
shr
add
xor
cmp
jne
mov
add
mov
cmpl
je
mov
add
mov
mov
mov
mov
addl
decl
jne
mov
add
mov
cmp
jae
add
mov
mov
test
jne
mov
mov
movl
mov
mov
mov
xor
add
mov
lea
mov
lea
push
mov
xor
add
push
mov
add
push
mov
mov
pushl
mov
call
mov
mov
add
mov
pushl
mov
pushl
pushl
call
mov
add
lea
mov
mov
mov
mov
mov
mov
mov
cmp
jb
mov
mov
mov
lea
mov
add
cmp
jae
mov
mov
mov
sub
add
mov
mov
jmp
xor
pop
pop
pop
leave
ret
push
mov
sub
push
mov
mov
cmpl
je
test
je
test
je
mov
test
je
cmpl
je
cmp
je
mov
andl
mov
sub
add
movzwl
mov
movzwl
add
je
lea
push
mov
mov
push
test
je
mov
andl
and
add
movzwl
movzwl
add
je
lea
mov
test
je
mov
andl
and
add
movzwl
movzwl
add
je
lea
mov
mov
mov
test
je
mov
add
movzwl
movzwl
incl
addl
add
cmp
jb
movzwl
movzwl
mov
incl
add
add
mov
cmp
jb
mov
movzwl
movzwl
incl
add
add
mov
cmp
jb
pop
pop
xor
inc
jmp
xor
pop
leave
ret
push
mov
mov
mov
sub
push
xor
push
push
cmp
je
cmp
je
cmp
jne
xor
inc
jmp
mov
add
mov
mov
mov
mov
add
add
mov
cmp
ja
mov
mov
cmp
jbe
cmp
jae
movzwl
jmp
mov
lea
mov
test
je
add
mov
cmp
jbe
mov
mov
add
cmp
jae
mov
jmp
sub
mov
mov
test
je
mov
inc
mov
cmp
jb
jmp
xor
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
movl
mov
mov
mov
mov
mov
mov
push
mov
push
mov
movl
mov
mov
push
mov
xor
xor
add
add
mov
cmp
je
mov
mov
xor
add
cmp
je
mov
mov
xor
add
cmp
je
add
mov
mov
xor
add
mov
mov
cmp
je
mov
mov
imul
xor
add
cmp
jne
mov
mov
imul
xor
add
cmp
je
mov
mov
mov
imul
add
mov
add
xor
mov
mov
mov
xor
add
xor
mov
mov
add
add
cmp
je
add
mov
mov
xor
add
mov
lea
mov
movl
mov
pushl
mov
call
mov
xor
add
mov
cmp
jne
mov
pushl
mov
call
mov
movl
movl
mov
xor
add
cmp
jne
mov
mov
xor
xor
lea
mov
mov
add
imul
push
call
mov
xor
add
cmp
jne
mov
xor
add
cmp
jbe
mov
xor
add
cmp
jne
mov
mov
xor
lea
mov
jmp
movl
movl
mov
xor
add
jmp
mov
xor
add
mov
mov
xor
add
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
mov
mov
mov
xor
add
cmp
je
mov
mov
xor
add
shr
cmp
je
mov
mov
mov
movzwl
push
pushl
call
jmp
mov
add
mov
mov
add
push
pushl
call
mov
mov
mov
xor
add
cmp
mov
jne
mov
xor
lea
mov
jmp
mov
xor
add
imul
mov
mov
mov
xor
lea
mov
mov
xor
add
cmp
jne
mov
mov
mov
sub
xor
jmp
mov
xor
add
cmp
mov
jne
mov
jmp
mov
xor
add
pop
pop
pop
leave
ret
push
mov
sub
movl
movl
mov
mov
push
mov
mov
mov
mov
xor
mov
add
cmp
je
mov
mov
add
push
mov
movl
mov
mov
mov
xor
xor
add
cmp
je
mov
mov
add
mov
mov
sub
mov
xor
add
mov
cmp
je
mov
xor
add
mov
push
movl
jmp
mov
xor
lea
add
shr
cmp
jae
sub
lea
mov
movzwl
and
mov
mov
mov
sub
add
movzwl
shr
xor
mov
mov
mov
mov
xor
lea
mov
mov
mov
xor
add
cmp
jne
mov
mov
xor
add
cmp
jne
mov
mov
add
add
decl
jne
mov
add
mov
mov
mov
xor
cmp
jae
add
mov
mov
xor
add
mov
cmp
jne
pop
mov
pop
jmp
mov
xor
add
pop
leave
ret
push
mov
sub
movl
movl
mov
push
push
mov
xor
push
mov
add
mov
mov
xor
add
mov
mov
mov
mov
xor
mov
addl
mov
mov
xor
mov
addl
mov
mov
xor
mov
addl
mov
mov
xor
mov
addl
movl
mov
test
je
mov
test
je
mov
test
je
mov
mov
xor
add
cmp
jne
mov
xor
add
mov
mov
mov
mov
add
mov
mov
test
je
movl
mov
xor
add
mov
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
cmp
jne
mov
lea
push
mov
xor
add
push
pushl
pushl
call
mov
mov
mov
sub
add
push
call
mov
mov
mov
mov
pushl
pushl
push
call
mov
mov
add
movzwl
lea
mov
mov
movzwl
xor
add
mov
cmp
je
mov
xor
add
mov
mov
movzwl
xor
sub
sub
cmp
ja
mov
add
mov
jmp
mov
mov
lea
mov
mov
test
je
not
and
add
mov
add
push
call
mov
mov
mov
xor
add
cmp
je
push
mov
add
mov
add
push
push
call
mov
mov
mov
add
xor
lea
mov
mov
mov
movzwl
xor
sub
mov
sub
mov
cmp
jbe
mov
mov
cmp
jne
mov
lea
push
mov
xor
add
push
mov
pushl
push
call
test
je
mov
mov
mov
xor
add
je
mov
xor
add
andl
mov
mov
mov
movl
movl
mov
mov
mov
movl
mov
mov
xor
mov
add
mov
incl
cmpl
mov
jb
mov
mov
mov
mov
mov
lea
mov
mov
mov
movl
mov
mov
movl
movl
movl
movl
movl
mov
movl
mov
movl
mov
movl
mov
movl
movl
xor
mov
xor
sub
mov
inc
cmp
jb
mov
lea
push
call
mov
lea
push
push
call
mov
lea
push
mov
pushl
mov
call
mov
xor
add
mov
mov
mov
xor
add
cmp
je
mov
jmp
mov
mov
mov
mov
cmp
je
mov
mov
cmp
jne
mov
mov
cmp
jne
mov
mov
mov
add
mov
mov
xor
add
mov
mov
push
push
pushl
call
test
je
pushl
mov
pushl
call
test
je
mov
mov
mov
call
test
je
push
pushl
call
test
je
mov
mov
cmp
jne
mov
lea
push
pushl
mov
pushl
push
call
mov
mov
mov
xor
add
je
mov
mov
movl
mov
pushl
xor
pushl
add
or
add
push
call
movl
jmp
mov
mov
add
call
mov
mov
mov
mov
movl
cmpl
jne
andl
mov
jmp
xor
pop
pop
pop
leave
ret
push
mov
movzwl
movzwl
push
push
xor
lea
test
je
mov
lea
cmp
jb
mov
add
add
cmp
jb
add
inc
cmp
jb
xor
pop
pop
pop
ret
push
mov
sub
movl
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
push
mov
xor
push
mov
mov
add
push
cmp
je
mov
mov
xor
add
cmp
je
mov
xor
add
mov
mov
xor
add
mov
mov
mov
mov
xor
mov
xor
add
add
sub
mov
jmp
mov
mov
xor
add
cmp
je
mov
mov
xor
add
cmp
mov
mov
je
cmp
je
mov
mov
xor
add
cmp
jb
mov
mov
xor
add
cmp
ja
movzwl
movzwl
add
mov
mov
mov
xor
add
cmp
jb
mov
mov
xor
add
cmp
ja
movzwl
movzwl
add
mov
mov
mov
cmp
jne
mov
mov
xor
lea
mov
mov
mov
xor
lea
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
cmp
jne
mov
mov
xor
add
imul
mov
jmp
mov
mov
xor
lea
mov
mov
sub
xor
mov
mov
sub
xor
mov
mov
mov
xor
add
xor
add
imul
mov
movzwl
mov
mov
xor
add
xor
add
imul
mov
movzwl
sub
sub
xor
xor
cmp
jne
mov
mov
xor
add
xor
add
imul
mov
movzwl
mov
sub
xor
cmp
mov
je
mov
pop
xor
pop
add
pop
leave
ret
push
mov
push
mov
push
mov
sub
mov
xor
mov
movl
mov
cmp
je
push
push
movzwl
mov
mov
mov
cmp
jne
mov
lea
xor
mov
xor
mov
mov
sub
mov
xor
mov
cmp
jne
mov
pop
pop
cmp
je
xor
lea
pop
leave
ret
push
mov
push
push
push
movl
mov
call
mov
mov
add
xor
cmp
je
mov
mov
mov
push
mov
mov
sub
mov
xor
mov
cmp
jne
mov
lea
xor
mov
xor
lea
mov
add
xor
cmp
jne
mov
pop
cmp
je
xor
xor
mov
mov
pop
pop
leave
ret
push
mov
push
push
movl
mov
call
mov
mov
sub
mov
xor
mov
cmp
je
push
push
movzwl
mov
mov
mov
cmp
jne
mov
lea
xor
mov
xor
mov
mov
sub
mov
xor
mov
cmp
jne
cmpl
pop
pop
je
xor
inc
jmp
xor
pop
leave
ret
push
mov
push
mov
movzwl
push
lea
mov
push
xor
mov
mov
cmp
je
mov
sub
mov
jmp
mov
mov
add
movzwl
mov
add
xor
mov
cmp
jne
xor
pop
mov
mov
pop
leave
ret
push
mov
sub
movl
movl
mov
push
mov
xor
mov
add
mov
movl
movl
push
movl
jmp
mov
mov
sub
mov
xor
add
cmp
jbe
mov
add
mov
add
mov
mov
mov
mov
mov
jmp
mov
mov
sub
mov
xor
add
cmp
mov
jbe
add
mov
add
mov
mov
mov
jmp
mov
sub
mov
xor
add
cmp
mov
jbe
add
mov
add
mov
mov
mov
mov
xor
lea
mov
jmp
add
mov
add
mov
mov
incl
mov
mov
xor
add
imul
mov
mov
xor
lea
cmp
jb
pop
pop
leave
ret
push
mov
sub
movl
push
mov
movl
mov
mov
xor
mov
add
cmp
je
push
push
mov
mov
xor
mov
sub
add
lea
xor
mov
mov
mov
xor
sub
xor
mov
mov
xor
add
cmp
jne
pop
pop
pop
leave
ret
push
mov
sub
movl
movl
mov
mov
mov
push
push
mov
xor
mov
add
cmp
mov
jne
xor
add
jmp
mov
xor
add
cmp
jne
mov
jmp
lea
mov
mov
mov
mov
xor
add
mov
mov
push
call
mov
mov
mov
jmp
mov
sub
mov
mov
mov
call
mov
pushl
mov
call
mov
xor
add
cmp
jne
mov
call
mov
xor
add
push
pushl
mov
call
mov
xor
add
cmp
je
mov
mov
mov
mov
mov
add
cmp
jne
mov
xor
add
pop
pop
pop
leave
ret
mov
mov
jmp
push
mov
mov
sub
cmpl
push
push
push
je
test
je
movzwl
mov
mov
xor
and
mov
xor
add
mov
andl
xor
push
pop
cmp
jae
lea
xor
movzwl
mov
lea
cmp
jne
movzwl
mov
cmp
jne
mov
movzwl
cmpb
je
mov
movzwl
movsbw
mov
sub
xor
cmp
je
push
pop
incl
mov
cmp
jb
jmp
incl
push
pop
mov
movzwl
cmpb
je
inc
cmp
jne
xor
pop
pop
pop
leave
ret
mov
add
xor
xor
cmp
sete
jmp
push
mov
sub
push
mov
mov
cmpl
jne
xor
jmp
pushl
push
pop
call
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
push
mov
mov
call
push
mov
pushl
call
mov
test
je
mov
push
push
mov
add
mov
mov
mov
mov
add
mov
mov
add
add
mov
mov
mov
cmp
ja
mov
xor
mov
cmp
jbe
jmp
mov
mov
movzwl
cmp
jae
cmp
jae
mov
mov
mov
mov
lea
add
add
sub
movl
mov
mov
cmpl
jne
mov
pushl
push
call
mov
test
je
mov
mov
mov
addl
decl
jne
mov
inc
mov
cmp
jb
pop
pop
pop
leave
ret
push
mov
mov
push
pushl
lea
mov
call
mov
mov
mov
xor
cmp
pop
setne
mov
pop
ret
mov
push
jmp
xor
add
mov
add
add
movzwl
mov
cmp
jne
xor
mov
mov
pop
ret
push
mov
mov
shl
add
jmp
xor
sub
mov
inc
inc
mov
cmp
jne
movb
mov
add
pop
ret
push
mov
sub
movl
movl
mov
mov
movl
push
push
movl
mov
mov
mov
xor
mov
xor
add
add
imul
jmp
mov
mov
xor
xor
add
add
test
mov
mov
je
xor
xor
add
add
shr
mov
xor
add
xor
jmp
xor
xor
add
add
shr
mov
mov
xor
lea
mov
mov
xor
xor
sub
cmp
jbe
mov
pop
mov
mov
pop
leave
ret
push
mov
sub
push
mov
mov
lea
push
mov
mov
mov
mov
push
xor
mov
add
cmp
je
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
movl
mov
mov
mov
movl
mov
xor
mov
sub
sub
mov
mov
movl
jmp
mov
mov
xor
xor
lea
mov
xor
div
mov
mov
xor
xor
sub
cmp
jne
mov
mov
mov
mov
mov
xor
xor
add
add
cmp
jae
lea
mov
mov
xor
add
lea
mov
mov
cmp
jbe
addl
jmp
addl
mov
xor
inc
incl
add
cmp
jb
mov
cmpl
jne
xor
sub
jmp
mov
xor
mov
sub
add
mov
xor
sub
ror
xor
mov
mov
mov
mov
mov
sub
xor
cmp
jne
mov
mov
xor
xor
sub
mov
sub
xor
mov
mov
xor
sub
sub
jmp
mov
xor
mov
sub
add
mov
mov
cmp
jne
mov
jmp
mov
xor
add
pop
pop
pop
leave
ret
push
mov
sub
movl
movl
movl
push
movl
mov
push
mov
push
xor
mov
add
mov
movl
movl
movl
mov
mov
mov
xor
xor
add
add
imul
jmp
mov
sub
xor
mov
lea
call
mov
mov
mov
mov
mov
mov
xor
lea
mov
mov
mov
xor
xor
sub
mov
cmp
jbe
mov
xor
add
mov
movl
mov
jmp
mov
mov
xor
add
shr
mov
mov
mov
mov
mov
mov
movzbl
xor
mov
mov
mov
xor
add
and
mov
mov
xor
mov
mov
xor
lea
mov
mov
xor
mov
sub
add
mov
mov
mov
xor
add
cmp
jne
mov
mov
xor
add
pop
pop
xor
pop
leave
ret
push
mov
mov
mov
mov
mov
mov
sub
push
push
push
mov
xor
mov
add
cmp
jne
orl
jmp
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
mov
mov
movl
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
mov
xor
add
mov
mov
xor
add
mov
mov
mov
sub
mov
mov
mov
mov
dec
test
mov
je
mov
mov
mov
dec
not
and
mov
mov
add
jmp
mov
mov
mov
xor
add
mov
mov
xor
add
mov
mov
mov
xor
add
mov
mov
movl
movl
movl
mov
mov
xor
add
imul
mov
mov
xor
lea
cmp
jae
mov
xor
add
mov
mov
add
mov
pushl
mov
mov
call
mov
movl
mov
xor
lea
add
push
call
mov
test
je
mov
xor
add
push
pushl
lea
push
call
mov
mov
mov
mov
sub
mov
mov
mov
mov
add
mov
cmp
jb
mov
mov
mov
add
mov
sub
jmp
push
pushl
lea
push
call
mov
mov
movl
movl
movl
lea
mov
lea
mov
lea
mov
lea
mov
mov
xor
add
mov
jmp
cmp
je
mov
xor
mov
add
mov
mov
xor
lea
mov
mov
mov
xor
add
cmp
jne
mov
xor
add
push
push
lea
push
call
mov
mov
xor
mov
mov
xor
movzbl
add
cmp
je
mov
mov
xor
mov
mov
xor
movzbl
add
cmp
je
mov
mov
xor
mov
mov
xor
movzbl
add
cmp
je
mov
mov
xor
mov
mov
xor
movzbl
add
cmp
je
mov
mov
xor
mov
mov
mov
xor
mov
xor
mov
mov
xor
mov
or
mov
mov
xor
mov
cmp
jne
mov
mov
xor
mov
mov
mov
xor
mov
xor
mov
mov
xor
mov
or
mov
mov
xor
mov
cmp
jne
mov
mov
xor
mov
mov
mov
xor
mov
xor
mov
mov
xor
mov
or
mov
mov
xor
mov
cmp
jne
mov
mov
xor
mov
mov
mov
xor
mov
xor
mov
mov
xor
mov
or
mov
mov
xor
mov
cmp
jne
lea
push
call
mov
cmp
je
mov
xor
add
mov
mov
xor
lea
xor
mov
mov
xor
add
cmp
je
mov
mov
xor
add
cmp
jne
mov
mov
xor
lea
jmp
push
pushl
lea
push
call
mov
mov
xor
add
cmp
je
mov
xor
add
push
push
lea
push
call
mov
add
mov
pushl
pushl
mov
add
push
call
mov
mov
xor
add
cmp
je
push
pushl
mov
add
push
call
mov
mov
add
mov
add
mov
mov
mov
xor
add
imul
mov
mov
xor
lea
cmp
jb
mov
mov
mov
jmp
mov
mov
xor
xor
add
add
cmp
jne
mov
imul
mov
jmp
mov
xor
add
cmp
je
subl
jmp
andl
pop
pop
pop
leave
ret
push
mov
and
mov
sub
push
mov
push
push
cmp
jne
push
jmp
mov
cmp
jne
push
jmp
mov
cmp
jne
push
jmp
mov
cmp
jne
push
jmp
mov
mov
cmp
jne
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
mov
add
mov
mov
mov
mov
mov
mov
mov
add
mov
mov
mov
push
push
pushl
push
call
mov
mov
pushl
xor
add
mov
lea
push
push
pushl
pushl
pushl
call
mov
mov
xor
add
cmp
je
mov
mov
xor
add
imul
mov
jmp
mov
cmp
jne
push
jmp
mov
cmp
jne
push
jmp
mov
cmp
jne
push
pushl
pushl
push
pushl
pushl
pushl
call
mov
mov
pop
pop
pop
mov
pop
ret
push
mov
sub
mov
mov
movl
mov
xor
add
mov
mov
push
mov
pushl
lea
pushl
push
pushl
pushl
pushl
call
mov
mov
leave
ret
