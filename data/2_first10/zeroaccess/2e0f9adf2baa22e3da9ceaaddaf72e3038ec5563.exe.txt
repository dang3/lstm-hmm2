push
mov
sub
mov
mov
inc
mov
sbbl
sub
push
mov
movl
mov
sbb
mov
orl
orl
mov
and
mov
mov
cmpl
mov
mov
jmp
mov
jge
push
pushl
pushl
pushl
call
mov
mov
add
adc
movzwl
sub
dec
or
xor
mov
add
adc
mov
cmpl
mov
movl
jmp
movl
jle
push
call
xor
sub
and
movl
movl
mov
add
add
add
mov
add
mov
adcl
sub
mov
sbb
xorl
mov
orl
andl
orl
jmp
loop
jns
cmp
lcall
mov
lods
adc
adc
int
adc
push
outsb
aas
xor
lea
push
repz
lods
push
push
in
lea
ret
pop
rorb
mov
hlt
test
popf
fldcw
push
rorb
scas
inc
sbb
scas
ror
arpl
icebp
dec
js
mov
adc
js
dec
cmp
mov
jns
pop
lahf
or
inc
les
call
sub
movsb
fsts
pop
mov
fidivrs
xor
inc
dec
xchg
in
xor
mov
shlb
stos
iret
mov
cltd
cmp
mov
lock
mov
xchg
clc
mov
imull
in
enter
mov
fbstp
push
das
ret
roll
repz
push
mov
dec
stos
out
insl
fistl
test
adc
inc
inc
lds
out
out
aad
out
out
mov
xchg
or
mov
or
push
sbb
pop
xor
sbb
jae
loopne
mov
arpl
xor
leave
mov
dec
aas
fs
mov
clc
insl
mov
adc
rcl
shl
mov
cmp
push
mov
in
das
mul
mov
or
loop
mov
loop
pusha
xchg
arpl
jmp
xor
cmc
aad
pop
push
add
dec
xlat
pop
cmpsl
rcr
and
arpl
lock
dec
insl
add
iret
test
dec
daa
mov
cmc
adc
mov
fxam
js
stos
sub
sub
dec
dec
fs
jmp
mov
cmpsb
mov
xor
loop
jg
clc
xor
mov
jl
mov
sbb
cwtl
aam
or
mov
nop
jbe
push
fisubrl
outsb
mov
xor
mov
cltd
cmp
add
repz
pop
mov
cld
jae
push
mov
rol
lock
aaa
xor
cmp
sub
mov
fnstenv
loope
mov
and
pop
js
fldenv
dec
inc
inc
xor
cltd
iret
fldt
pop
nop
pop
sti
cs
aad
mov
adc
cmpsl
mov
and
inc
mov
insl
andl
jno
push
ret
ljmp
pop
out
dec
mov
loop
les
sub
js
dec
push
pop
mov
mov
push
inc
scas
cli
outsb
enter
add
pusha
arpl
lods
mov
sbb
lods
and
pusha
ret
mov
xchg
mov
sub
loopne
testl
pop
sbb
stc
mov
addr16
add
adc
sbb
push
and
xchg
ljmp
mov
add
push
push
pop
icebp
mov
and
pop
test
sub
out
adc
fldt
addr16
mov
dec
mov
hlt
les
nop
aaa
xchg
push
pop
in
xchg
test
sub
daa
adc
dec
xchg
jge
dec
push
es
fadds
inc
push
push
clc
jecxz
rolb
aas
mov
movl
jecxz
jle
std
push
cmpsl
inc
imul
and
popa
adc
scas
lahf
and
popf
or
cmp
scas
mov
pop
sub
mov
clc
push
inc
mov
jle
pop
cmpsb
sbb
mov
xchg
jmp
xchg
push
popa
in
push
mov
mov
cmpl
mov
mov
movl
mov
jmp
mov
mov
jne
pushl
push
push
call
and
adcl
andl
xor
or
mov
movzwl
and
mov
and
mov
add
movzbl
or
mov
cmpl
movl
mov
movl
mov
jmp
movl
mov
jb
pushl
call
movzbl
adc
and
sbb
movzbl
xor
mov
or
sbbl
mov
cmpl
movl
movl
jmp
mov
mov
jg
push
push
pushl
pushl
call
sbb
dec
xor
sub
or
mov
sub
mov
add
shrd
shr
and
mov
mov
sub
mov
subl
xor
orl
xor
movl
or
xor
jmp
ljmp
cltd
daa
mov
push
sbb
int
adc
int
adc
stc
push
mov
xchg
fimull
sbb
stc
adc
mov
jl
xchg
lahf
ret
fsts
sub
in
std
fstp
and
fstps
jns
das
mov
int
mov
out
ljmp
mov
xchg
icebp
mov
movsb
xchg
mov
mov
ret
inc
push
mov
in
outsl
scas
sub
out
call
hlt
scas
add
ja
add
jecxz
cli
mov
cltd
xor
jne
push
cmp
sub
mov
push
or
jg
int3
dec
add
inc
lcall
daa
cmp
xchg
shr
icebp
leave
fwait
stos
scas
iret
cmp
pop
inc
and
mov
fldt
sarb
scas
lcall
adc
inc
sarb
push
and
cli
mov
jmp
xchg
test
or
pop
adc
jae
lock
mov
or
repz
or
ret
das
cmp
fisubl
decb
xor
pop
jmp
push
in
notb
dec
dec
and
ss
sub
push
mov
testl
jl
inc
inc
mov
sahf
ret
iret
mov
jb
inc
test
add
std
mov
divl
jno
stc
mov
bound
mov
xor
dec
fnstsw
xor
in
push
leave
jbe
mov
push
and
out
ja
sub
push
in
pop
sub
or
xor
ret
fmul
sub
and
mov
in
mov
scas
lods
pop
std
pop
addr16
insb
pop
adc
pop
and
sub
xchg
inc
adc
mov
les
inc
ljmp
mov
call
pop
jmp
xor
pop
pop
pop
in
xor
adc
repnz
mov
mov
loop
fidivl
pop
outsb
push
mov
out
mov
mov
pop
jg
stos
cld
sbb
out
pop
and
adc
lds
imul
jge
icebp
fwait
sub
adc
lcall
inc
mul
ljmp
cs
addr16
int3
sbb
or
xor
pop
mov
cmpsl
pusha
push
jns
xor
push
pushf
hlt
add
aad
add
lods
mov
add
sub
in
pop
jg
mov
or
into
adc
mov
cmc
inc
jo
dec
cmpsl
out
sbb
push
fs
xor
movsb
pop
mulb
movsl
jno
stos
pop
repnz
mov
arpl
lcall
push
push
aas
stos
cmp
imul
cmp
mov
push
or
je
or
rorb
add
hlt
push
cmpsb
add
lret
dec
lods
mov
sbb
push
lea
test
stos
jmp
imul
jo
out
in
mov
cmpl
xchg
or
stos
cmp
add
mov
je
int3
sub
lret
sbb
push
push
xorl
mulb
dec
das
iret
or
je
call
lret
fmul
adc
sbbb
inc
jmp
imulb
jo
aam
dec
pop
jge
xchg
stos
and
push
movsb
dec
popa
pop
lock
mov
cmp
scas
pushf
sbb
shll
and
cmc
mov
cmpl
notl
movl
movl
movl
jmp
mov
jle
pushl
push
pushl
pushl
push
call
sbb
addl
add
xorl
add
movl
sbbl
movl
sub
movl
xor
xor
and
movl
sub
movl
sub
movl
sbb
movl
sub
movl
cmpl
movl
movl
jmp
movl
mov
jb
pushl
pushl
push
pushl
push
call
andl
notl
andl
orl
addl
sbbl
movl
sbbl
movl
xorl
movl
xor
movl
movl
cmpl
movl
movl
movl
jmp
mov
jbe
push
push
push
push
call
subl
adcl
movl
adcl
sbbl
adcl
movl
sub
movl
movl
adcl
movl
negl
movl
cmpl
movl
movl
jmp
movl
jbe
push
pushl
pushl
call
adc
addl
orl
sbbl
notl
adcl
xor
movl
movzbl
xor
movl
cmpl
movl
mov
mov
jmp
mov
je
push
push
push
push
call
xorl
negl
xorl
subl
andl
adc
sbb
movl
inc
movl
mov
xor
mov
xorl
shl
mov
or
mov
mov
subl
push
xorl
push
adcl
push
subl
push
adcl
call
and
mov
sbb
mov
adc
xor
xor
or
add
mov
mov
xor
sub
mov
adcl
jmp
into
mov
and
add
ss
orb
adc
adc
adc
mov
dec
inc
push
mov
stos
lea
xchg
cwtl
bound
aas
outsl
or
bound
pusha
push
mov
mov
inc
arpl
mov
add
movsl
mov
daa
ljmp
cmpsl
jns
ret
add
in
or
sarl
out
in
cwtl
sbb
add
jno
orl
arpl
test
mov
push
fsub
test
and
dec
push
sahf
aaa
ja
or
shll
lea
lret
xchg
mov
inc
sbb
jmp
xchg
cld
addl
addr16
call
or
test
fnsave
fidivrs
mov
nop
add
add
pop
shlb
jae
es
loope
sub
bound
push
xchg
popf
lods
js
dec
fisttpll
fidivrs
icebp
arpl
mov
mov
adc
sub
fists
sub
rolb
push
xchg
xchg
gs
inc
lret
xlat
jmp
hlt
insl
arpl
xor
adc
xor
xor
repnz
or
sbb
mov
sahf
add
out
test
adc
dec
adc
push
push
mov
adc
out
mov
addb
cltd
push
adc
scas
out
mov
jo
push
push
in
xor
shll
xchg
mov
pusha
jne
xchg
add
fcomip
dec
es
adc
lds
fldpi
lret
in
push
adc
xor
mov
cmp
mov
fsubl
outsb
aam
or
pop
xor
in
jge
fwait
imul
or
mov
cmc
sahf
ljmp
mov
sbb
nop
mov
cld
and
xchg
ds
mov
mov
push
jg
fistpll
cmp
lcall
std
cmpsl
mov
mov
xchg
pop
or
dec
jp
sbb
sub
push
pushf
inc
cmpsl
imul
nop
or
fmul
out
mov
mov
ja
fldl
jne
dec
jg
fs
or
sbb
push
arpl
rclb
adc
cmp
imul
jbe
int
pop
sbb
loope
pop
sub
negl
loop
push
clc
and
add
adc
jns
aad
inc
xlat
cs
dec
loopne
xchg
loop
insb
data16
out
push
inc
test
add
mov
fiadds
or
test
push
push
and
add
xor
popa
repnz
lods
cwtl
jp
mov
int
cmpsl
insb
iret
lods
aaa
aam
icebp
mov
test
and
nop
adcb
cmp
xor
pushf
jb
ds
movsl
dec
imul
cmp
or
iret
call
idiv
push
jge
xrelease
rcrb
inc
xchg
lahf
mov
in
subb
into
bound
sbb
jns
out
or
test
daa
pop
nop
push
push
imul
cmp
mov
jo
movsb
test
outsb
ljmp
push
or
loop
and
into
ret
ret
xchg
push
mov
fisttps
and
inc
cmp
xor
sbb
in
js
mov
ret
and
out
mov
lret
dec
mov
je
pop
push
shl
xlat
test
mov
or
fdivr
decl
add
inc
add
add
mov
or
and
xor
mov
or
andl
xor
movl
cmp
jmp
xlat
test
push
xlat
popa
dec
lcall
cmp
adc
int
adc
ljmp
leave
pop
into
xchg
push
jmp
mov
out
dec
loope
imul
mov
adc
inc
pusha
movsl
bound
push
dec
sub
push
sbb
stos
divl
adc
das
push
mov
shl
fs
in
add
pop
jge
in
stos
jmp
sbb
sub
pop
icebp
loopne
inc
bound
loop
fiadds
xchg
or
je
jne
and
es
roll
ja
push
pop
sub
andb
inc
inc
pop
jecxz
ja
pusha
jns
movl
pop
push
push
orb
xchg
cs
jne
ds
bound
pop
nop
clc
mov
pop
mov
mov
orl
jb
fidivl
jbe
mov
and
scas
cmpsl
icebp
pop
add
xor
cld
incb
push
out
jno
adc
pop
or
push
mov
sub
pop
in
stos
shlb
push
add
jbe
sub
inc
pushf
fmuls
mov
push
and
mov
sbbb
inc
adc
push
dec
jo
loope
mov
scas
xchg
and
mov
push
cmp
cmp
enter
lahf
ret
dec
push
push
inc
leave
adc
sub
mov
pop
jns
cld
mov
cmp
mov
pop
mov
sbb
pop
pop
jg
insb
stc
nop
fistl
cs
ret
sbb
insb
loope
ss
sub
sbb
and
and
test
cwtl
push
adc
xor
or
sti
dec
and
and
testl
insl
dec
push
mov
jmp
xchg
xor
mov
cmc
fnstcw
lods
scas
call
insb
int3
xorb
sbb
out
pop
mov
push
popf
sub
xchg
cmp
scas
shl
push
mov
fists
add
jge
and
pop
fstp
xchg
xchg
pop
mov
leave
rclb
sahf
in
pop
loop
rcrl
inc
arpl
in
ja
mov
test
cmp
int3
int
lret
jne
divb
pop
jmp
pop
sar
inc
xchg
jle
mov
dec
mov
mov
xor
sbb
es
and
outsb
xchg
leave
jl
inc
push
lret
and
xchg
jp
out
jp
scas
fildll
push
aam
dec
mov
cmc
push
loop
lock
rorb
mov
inc
pop
iret
mov
jns
jbe
mov
jns
rcrl
cs
jg
push
enter
adc
sahf
mov
rep
in
stos
xchg
or
sub
fnsave
push
pop
jo
push
outsl
mov
mov
ds
out
mov
cmp
xchg
loopne
call
push
in
pop
jbe
jmp
stos
pop
scas
adc
pop
mov
ljmp
mov
les
xor
mov
cmpsb
lods
pop
ja
test
repnz
xorb
push
cltd
cmc
xchg
dec
sub
mov
adc
ja
js
xor
and
jecxz
inc
into
sbb
ds
out
mov
cs
adc
andl
roll
rcll
movsl
add
enter
mov
enter
out
add
inc
test
jmp
cmp
jae
inc
xchg
dec
pop
jne
add
mov
mov
cmpl
mov
movl
movzbl
jmp
movl
jae
push
push
call
sub
sbb
subl
sbbl
neg
adcl
xor
xor
xor
mov
subl
shrd
shr
add
mov
mov
andl
shl
xor
addl
xor
or
mov
mov
movl
cmp
jne
mov
cmpl
not
mov
movl
jmp
movl
movl
je
push
pushl
push
push
call
adc
xor
or
mov
adc
not
decl
xorl
sub
and
mov
sub
cmpl
mov
movzwl
mov
jmp
movl
movl
jle
pushl
pushl
call
sbb
adc
add
sbb
sbb
movl
mov
xor
mov
mov
sub
mov
shrd
xorl
jmp
lcall
add
js
push
lret
notl
adc
adc
adc
inc
xor
xorl
es
push
mov
aad
aaa
or
sbb
pop
cmpsl
into
xchg
sbb
ljmp
leave
xchg
shll
fnstenv
dec
lahf
lds
sub
sub
rorb
lret
jmp
into
jle
rcrb
stc
sub
push
inc
xor
sub
mov
sbb
adcb
xchg
les
in
mov
out
xlat
fsubr
lret
cmp
mov
mov
testb
adc
dec
fistpll
sbb
jmp
pop
cmp
ds
jl
push
pop
insl
cmp
inc
pop
push
pushf
arpl
jl
cmp
add
mov
lock
sahf
add
pop
stc
fstpt
popa
cmp
jae
inc
incb
jp
lods
sbb
and
notb
fisubrl
ljmp
out
mov
in
testl
es
dec
imul
mov
mov
mov
cmc
dec
jb
pushf
xlat
cmp
inc
mov
insb
jecxz
fndisi(8087
daa
adc
jmp
flds
xor
inc
push
sub
jne
fwait
ljmp
clc
push
adc
loope
and
mov
jle
pusha
mov
sub
or
popa
add
outsl
add
cmp
sbb
jne,pn
jp
lret
enter
aas
xchg
das
mov
sbb
xor
add
bound
push
shll
sbb
test
or
pushf
test
clc
inc
add
out
test
xor
rcrl
in
cmp
add
mov
sbb
cmpsl
lcall
setnp
clc
push
jb
cs
jnp
push
xor
or
inc
push
fidivl
xor
mov
push
pop
push
mov
and
or
mov
sahf
xchg
jae,pn
dec
pop
repnz
out
add
ss
jo
cmpsb
frstor
or
sub
pop
cmp
pop
insb
xchg
mov
add
repnz
ja
inc
pop
cli
gs
insl
es
pop
mov
clc
and
sub
std
mov
or
jo
xor
test
call
dec
int
mov
pop
je
sahf
gs
test
loope
xchg
cli
pop
clc
sets
inc
xor
jo
stc
enter
xor
ljmp
xlat
jle
add
stos
scas
pop
push
stos
dec
push
mov
cs
xchg
mov
into
inc
dec
rolb
pop
mov
popa
fsubrl
cmp
mov
les
nop
cmp
sub
aas
bound
loopne
cmp
push
fwait
loope
add
lret
xor
or
insb
and
insb
sub
cmpsb
lret
and
jbe
lods
cmp
and
or
lods
movsb
fnstsw
sarl
daa
pop
scas
dec
mov
inc
mov
lods
sahf
lea
mov
jl
or
dec
add
dec
insl
xchg
jp
ret
iret
sub
movsl
sbb
cli
test
jo
adc
cld
aad
mov
xchg
mov
or
mov
dec
pop
cmpsl
out
mov
pop
xchg
cmc
mov
push
adc
into
in
jge
pop
and
movsl
or
mov
ja
xchg
loop
fucomp
fisubrs
aad
js
inc
inc
mov
push
repz
pop
and
dec
orl
and
ja
xorb
xor
mov
cmpl
mov
mov
jmp
movl
jle
pushl
pushl
call
sub
add
notl
sbb
xor
dec
sub
mov
xor
orl
shr
sbbl
mov
adcl
xor
andl
or
shl
cmpl
mov
mov
movl
jmp
movl
movl
je
pushl
pushl
call
notl
and
sub
and
not
xor
sub
mov
mov
cmpl
mov
movl
mov
jmp
mov
jle
push
pushl
pushl
call
sbbl
adcl
movzbl
sbb
mov
movzbl
and
mov
movzbl
sbb
mov
add
add
mov
mov
mov
shrd
or
shr
cmpl
movl
mov
movl
mov
jmp
mov
je
pushl
call
and
and
sub
or
mov
mov
or
sub
and
mov
mov
xor
shl
adcl
xor
or
xor
mov
mov
shrd
shr
mov
sbb
mov
cmpl
movl
movl
mov
jmp
movl
not
ja
pushl
push
call
mov
xor
or
sub
add
mov
sbb
inc
mov
mov
sub
add
or
mov
sbb
mov
xor
xor
or
andl
shl
lea
subl
mov
mov
andl
shrd
subl
shr
cmpl
mov
movzwl
mov
movl
jmp
mov
movl
jb
pushl
push
push
pushl
call
xorl
neg
or
movzbl
sbb
movzbl
xor
mov
xor
xor
sub
mov
mov
cmpl
mov
movl
mov
jmp
mov
je
pushl
call
movzwl
add
mov
add
movzbl
and
or
subl
neg
mov
cmpl
mov
movl
movl
jmp
mov
jge
pushl
call
sbb
xor
inc
mov
sub
mov
adc
adc
cmpl
movzbl
mov
jmp
mov
mov
jl
push
call
movzwl
and
movl
add
sbb
movzbl
sub
sub
xor
mov
xor
subl
or
orl
shl
xor
imul
mov
and
mov
mov
andl
shrd
andl
mov
mov
xorl
xor
shr
subl
mov
mov
sub
mov
xor
adcl
or
sbbl
shl
sub
mov
cmp
mov
mov
movl
jg
or
mov
sub
mov
movl
shrd
mov
xor
mov
sbbl
xor
movl
shl
xor
adcl
or
shr
or
mov
mov
adc
mov
mov
mov
addl
mov
sbbl
shrd
shr
adcl
mov
mov
movzbl
sbb
mov
addl
xor
xor
or
shl
addl
imul
andl
sub
movl
jmp
mov
adcl
mov
notl
shrd
mov
add
mov
addl
xor
movl
shl
xor
or
xorl
shr
xorl
mov
mov
mov
cmpl
mov
mov
not
jmp
movl
mov
jg
push
pushl
push
push
call
xor
xor
xor
sbb
addl
orl
neg
xorl
and
cmpl
movl
movl
jmp
movl
jle
pushl
call
xor
xor
mov
sbb
dec
not
mov
adc
cmpl
mov
mov
mov
jmp
movl
movl
jg
pushl
push
push
push
call
xor
add
or
mov
movzbl
and
notl
adc
or
adcl
sub
mov
shrd
shr
mov
mov
jmp
xchg
icebp
mov
icebp
out
loopne
adc
or
int
adc
out
aas
ljmp
inc
or
out
outsb
jg
mov
fldenv
loop
sbb
lds
imul
insl
fmuls
fbld
cwtl
sbb
pop
push
xor
pushf
lock
push
scas
stos
and
ss
out
fimull
cmovs
stc
mov
in
mov
pop
mov
cmpb
mov
or
mov
sbbl
out
add
jne
jae
bound
xor
cmpsl
pop
add
and
mov
loope
push
ja
scas
sti
nop
pop
js
adc
jnp
sub
bound
sub
int3
repnz
in
je
push
pop
sub
movl
pop
jae
xor
mov
add
mov
jbe
daa
movsl
and
mov
push
adc
dec
pop
inc
mov
fwait
jno
push
imul
pusha
xor
sbb
jle
dec
jns
mov
lcall
mov
rep
rcll
push
bound
push
sti
push
adc
sbbb
test
mov
push
cli
rol
dec
rcrb
mov
int3
mov
sbb
xor
xor
decb
outsb
dec
sbb
push
mov
sbb
repnz
loopne
loope
lret
repz
cmpsl
gs
into
out
rclb
imul
inc
js
test
scas
lcall
fisubs
mov
mov
and
push
adc
daa
dec
ret
fistpl
add
xorb
test
movsb
out
lods
lds
push
in
into
lret
cmp
enter
jp
pop
mov
sub
fiadds
inc
and
divl
clc
cmpps
test
stos
or
xor
test
mov
cmp
into
scas
sub
adc
sub
hlt
insb
inc
dec
test
in
cmp
out
fdivl
push
xor
mov
hlt
rclb
push
add
xchg
push
arpl
mov
mov
dec
gs
scas
inc
lea
addr16
aam
in
scas
pop
cltd
out
xchg
or
pop
dec
push
fwait
jge
out
cli
push
daa
push
lcall
int3
sub
pop
je
dec
jb
lahf
lods
aad
sub
lods
mov
loop
and
mov
aaa
xor
fildl
adc
es
out
insb
pop
or
in
clc
andl
fcomps
inc
mov
sub
xor
sarb
add
cmpsb
add
jb
pop
or
mov
fldt
dec
mov
push
flds
enter
cmpsl
jb
mov
jb
xorl
push
cmpsl
sbb
pop
pop
dec
cld
xor
pop
xor
mov
jmp
sub
jle
jecxz
sti
adc
adc
gs
cmp
push
xchg
adc
push
sti
pop
lods
repz
popa
add
inc
faddl
push
shll
adc
cld
sub
push
cmp
jl
daa
cmpb
outsl
cmp
mov
mov
mov
jns
sub
dec
icebp
mov
pop
pusha
xchg
fistl
int
xchg
mov
push
sbb
jge
xor
or
shl
add
add
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
mov
movl
mov
mov
movl
jmp
lret
lea
push
push
and
xor
push
call
push
in
adc
int
adc
fisubrl
push
js
sbb
nop
cltd
or
jmp
jae
mov
gs
sub
mov
pop
inc
divl
call
sbb
cld
adc
dec
int
and
jge
lods
pop
push
aaa
sub
and
xchg
or
fwait
mov
nop
push
lods
add
lret
pop
popa
daa
jnp
js
mov
mov
jae
xlat
xor
retw
ds
pop
or
xchg
push
not
xor
mov
push
scas
xor
out
mov
outsb
and
lds
sub
mov
ret
adc
movsb
and
dec
sbb
inc
fcomps
lods
rcrl
fs
das
int
jmp
lods
cmpsb
jp
cmp
popf
pop
mov
mov
sub
mov
lock
imul
inc
imull
or
pop
jmp
pop
lahf
repz
or
out
push
or
sbb
sbb
aaa
mov
mov
jmp
push
cmp
test
lea
xor
cmpsl
test
xchg
pusha
jno
or
push
bound
fnstenv
add
cmp
adc
mov
cmp
add
dec
and
das
pop
loope
inc
int3
stc
mov
mov
adc
push
test
test
outsl
adc
cmp
sbb
lret
outsl
push
rcrl
and
xchg
mov
cmp
decb
add
lock
pop
lret
subl
mov
aaa
jg
push
pop
lret
mov
and
mov
aam
call
and
or
and
inc
or
add
stc
pop
ror
pusha
ror
and
xor
sbb
push
js
nop
sbb
mov
sbb
add
push
push
and
pusha
data16
pop
cmp
pop
jecxz
and
shrl
mov
popa
mov
test
ror
push
mov
int
imul
ficompl
xchg
pop
sarl
lock
je
xorb
mov
fldz
out
add
test
lea
xchg
mov
xor
cmp
das
or
mull
adc
push
repz
xchg
imul
add
cltd
cmpsl
push
dec
ja
out
push
outsl
adc
fdivs
mov
gs
xor
sahf
or
das
mov
push
mov
sub
pop
lea
cmpsl
mov
add
pop
cltd
dec
sbb
mov
push
out
mov
inc
jl
movsb
cmp
aaa
dec
leave
inc
fs
nop
jbe
mov
test
xor
cmp
popa
cwtl
pop
push
and
dec
mov
movsb
jg
sar
rcl
fisubs
pop
cmp
jmp
sysret
daa
mov
addr16
movb
dec
dec
scas
or
sti
in
cmc
cmp
mov
inc
cli
repz
movsl
mov
in
cmpsb
xchg
xchg
sti
and
les
push
aaa
or
inc
and
aas
ss
shll
sub
xor
fbld
cld
jb
xlat
pop
cmpsb
and
in
xchg
inc
lcall
in
imul
mov
push
vmptrld
das
out
sti
cmpsl
pop
cltd
lahf
lret
aaa
jo
scas
ret
in
sub
cmp
and
push
and
pop
aaa
sbb
jecxz
or
xchg
idivb
jle
inc
in
inc
lock
imul
inc
mov
mov
mov
mov
shrd
shr
jmp
fsubrs
fldenv
sub
adc
int
adc
mov
xor
jo
jg
shr
xchg
sahf
sub
jg
daa
outsl
and
lcall
push
rorl
mov
mov
fsubl
test
scas
adcl
lret
inc
and
cmp
jle
iret
push
stc
ret
push
cmp
jbe,pn
orl
or
repz
xchg
adc
lods
mov
stos
fcoml
lret
adc
hlt
ljmp
xor
imull
xchg
cmp
mov
or
xchg
mov
mov
je
jo
stc
ret
ret
adc
xchg
lcall
sahf
or
dec
enter
pusha
cltd
pop
or
pop
pop
fstpl
jbe
fwait
xchg
fisubrl
and
pushf
mov
hlt
pop
sbb
data16
add
push
sub
or
dec
dec
lds
mov
xchg
mov
adc
adc
into
sti
stos
or
push
lret
mov
lret
stc
mov
add
or
sub
dec
sbb
push
xor
ret
or
stos
mov
test
bound
or
mov
aad
in
sub
sbb
repz
loope
jbe
icebp
ljmp
ret
mov
add
or
cmp
int3
sbb
gs
insl
cmpsb
and
xor
cmc
sub
imul
jmp
pop
ljmp
jo
lret
dec
sbb
cli
mov
iret
or
cmp
out
pusha
mov
sbb
jg
xor
repz
pushf
inc
pusha
lods
cmp
icebp
cmp
jl
clc
sbb
cmpsb
sbb
cmp
xor
pop
and
aas
repnz
out
or
dec
cmp
cltd
shll
mov
jo
push
jnp
std
arpl
mov
orl
sbb
lcall
jp
mov
aas
fucomip
shl
sbbb
imul
pop
push
test
jecxz
lret
scas
stos
pop
popf
aam
inc
jae
mov
imul
in
xlat
sbb
and
cmp
xor
push
pop
in
sbb
or
fcoml
in
outsl
mov
leave
pusha
fsubs
adc
test
cwtl
jo
into
mov
sub
fistl
incb
xor
jns
inc
or
xorl
push
test
repz
fld
mov
inc
adc
loope
mov
aas
js
lds
jbe
push
add
mov
cld
xorb
movsb
lcall
cmp
mov
and
fwait
lret
mov
pmaddwd
xchg
sbb
insl
mov
lahf
arpl
clc
cwtl
adc
push
pop
push
xlat
in
sbb
mov
imul
push
cmp
call
cmpsl
popa
or
mov
pop
sbbl
test
ja
fcompl
sbb
jae
mov
scas
incl
push
fnsave
push
pop
movsb
push
mov
xchg
pop
xor
jmp
pusha
jbe
pop
fisttpl
test
lock
sbb
out
pop
adc
lret
fistl
imul
iret
pushl
push
jbe
xchg
arpl
xor
mov
fs
sti
push
aas
dec
cld
dec
fs
mov
mov
xor
shl
xor
or
lea
mov
mov
mov
shrd
shr
mov
mov
shl
mov
xor
xor
or
mov
mov
xor
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
lea
mov
mov
mov
shrd
jmp
orb
mov
dec
fwait
idivl
ficoms
adc
adc
adc
cmp
andl
xor
dec
bound
dec
mov
and
jg
aas
icebp
rcrl
dec
cmp
jae
xlat
popf
jle
inc
es
inc
cmp
xchg
or
xor
scas
pop
pop
adc
ret
inc
xor
mov
mov
std
mov
push
fcmovnu
push
add
push
int
mov
stos
sbb
dec
pop
fldcw
sub
pop
pop
iret
es
and
push
inc
add
push
pop
fwait
scas
adc
xchg
mov
and
test
sub
sub
dec
pusha
loopne
adc
pop
insl
fimull
mov
xchg
sub
add
pop
sub
movsl
pop
das
add
fcmovbe
cmp
jl
shll
out
xchg
mov
dec
dec
dec
mov
ret
lds
test
jp
test
jge
ret
pop
ljmp
jo
int
pop
jle
pop
fnstenv
push
out
jmp
mov
cmp
push
inc
out
xchg
mov
aad
sub
xor
je
push
sbbl
frstor
inc
pop
cmpsb
adc
push
xlat
std
bound
push
or
int
dec
cmpsb
mov
cmpsl
pushf
pusha
and
sbb
pop
xlat
sbb
dec
mov
call
or
or
in
shlb
fldenv
in
jge
lds
ss
les
arpl
mov
or
sarl
sbb
shr
insb
cwtl
push
mov
sub
xor
add
bound
push
cmp
in
std
or
or
add
or
xor
icebp
sub
out
jmp
and
bnd
in
xchg
nop
jns
pop
cmp
mov
shr
sbb
popa
rclb
push
mov
int
lahf
cmc
scas
out
icebp
notl
mov
add
scas
push
popa
jmp
dec
dec
inc
cmp
sbb
out
test
jns
push
push
or
arpl
imul
push
movsb
iret
jmp
rorb
lahf
ja
decl
into
lock
insb
imul
push
pop
pop
es
mov
sahf
add
jle
mov
sbb
lods
mov
sub
lahf
add
cmp
pop
stos
sub
scas
dec
mov
hlt
and
cmp
sbb
jg
dec
add
repz
ljmp
jge
add
and
pop
icebp
jae
fildll
and
ss
push
aam
lds
outsb
imul
fdivrs
insb
xor
dec
jp
idivb
xchg
or
adc
mov
cmp
jle
jmp
fnstenv
loope
imul
bound
pop
out
and
push
xchg
clc
fldl
bnd
jno
fmul
mov
mov
cmc
cli
inc
cmc
jb
mov
sub
inc
mov
lea
mul
jbe
mov
cltd
ja
mov
ds
lock
sti
jb
or
sbb
cld
lods
add
jecxz
ss
and
or
inc
cmp
stos
in
icebp
mov
and
aam
lcall
jg
das
push
repz
fisttps
scas
fwait
pop
ret
jg
xorb
jmp
mov
shl
jmp
fmuls
sbb
adc
aam
adc
adc
adc
aas
call
xor
pop
cld
test
push
and
int
cmp
and
rcrl
jle
mov
adc
and
xor
jo
push
insl
pushf
xor
mov
sbb
aaa
jg
int
aam
push
lret
leave
dec
xchg
add
cmpl
and
lds
in
in
jns
inc
aam
push
repz
call
pop
add
andb
push
test
inc
in
dec
push
addr16
ljmp
inc
xchg
push
fisubl
mov
push
or
adc
mov
ljmp
sub
jge
inc
fmull
cmp
push
cwtl
xchg
repnz
jo
cld
into
mov
mov
movsl
bound
add
in
subl
stc
sbb
ret
das
push
es
push
outsl
or
movsb
dec
rcrb
imul
popa
add
dec
sub
adc
icebp
sbb
push
stos
push
mov
sti
icebp
test
push
insb
add
fisttpll
mov
push
icebp
pop
jbe
jnp
add
outsb
lret
int3
in
shlb
ss
cs
or
and
pop
rcl
nop
sbb
fisttpll
pop
cs
mov
ss
jnp
notb
and
adc
inc
in
ja
add
cmp
cmpl
sbb
lods
fsub
mov
stos
adc
mov
xor
stos
pop
loop
add
test
xchg
push
fiadds
jae
jnp
icebp
cmp
inc
imul
sarl
fcmovu
mov
fbld
dec
pop
push
and
sbb
lahf
or
or
push
mov
subb
xchg
push
repnz
jae
xchg
inc
insb
out
pop
add
mov
rcll
mov
or
push
cmp
pusha
xchg
lcall
jno
bound
sti
movsb
inc
pop
lods
sbb
dec
lods
cmp
outsl
jl
lret
or
shlb
repz
popa
fildll
repnz
jno
jb
aam
sbb
mov
pop
mov
xchg
mov
add
jmp
or
cmp
push
jno
mov
lcall
imul
cmp
mov
icebp
ds
cmp
push
ja
shll
inc
dec
mov
mov
gs
xchg
or
xchg
xchg
imul
pop
scas
jbe
out
icebp
dec
jmp
fcom
sarl
cld
jge
mov
inc
mov
mov
pop
mov
loope
dec
mov
cmp
sbb
lcall
mov
sti
sbb
popa
mov
lret
mov
push
int
sbb
out
cld
adc
mov
xchg
call
dec
ljmp
lret
pop
jne
insl
mov
push
aad
xchg
dec
mov
or
xchg
or
sub
aaa
inc
fwait
test
in
xchg
mov
scas
shl
pop
xor
cwtl
lret
dec
xchg
dec
push
frstor
ret
xlat
test
out
or
imull
orb
scas
mov
sub
lahf
mov
pop
shr
scas
mov
jns
popa
fnsave
jmp
clc
mov
sbb
and
xor
or
mov
mov
or
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
lea
mov
mov
mov
shrd
shr
mov
mov
xor
shl
mov
xor
or
mov
mov
add
mov
mov
shrd
shr
mov
mov
xor
xor
or
lea
mov
mov
shl
mov
shrd
shr
mov
mov
xor
xor
or
mov
shl
mov
mov
mov
or
mov
mov
shrd
jmp
dec
or
push
sub
loopne
lods
inc
bound
int3
adc
int
adc
jp
in
push
jo
dec
jnp
or
and
dec
inc
sub
pop
fists
fnstenv
mov
fwait
xor
dec
flds
jns
sbb
inc
jp
or
cmp
pop
dec
loopne
or
imul
jns
jp
jae
xchg
adc
call
cmp
out
in
mov
call
xchg
cmp
ret
mov
aaa
rol
cmp
adc
outsl
xor
mov
lcall
and
lods
push
pop
es
mov
aas
mov
push
mov
adc
fwait
inc
std
fsubp
enter
mov
cmp
popa
imul
fldcw
shll
add
es
lahf
mov
mov
jbe
pop
mov
aas
adc
gs
mov
rcl
mov
dec
sub
loopne
lahf
inc
mov
jmp
cmp
pop
xor
sub
mov
jle
arpl
dec
test
inc
stos
data16
xchg
cmpsb
out
lea
xor
push
mov
mov
pop
sbb
test
ret
cmc
mov
push
incl
bound
push
cmp
cmp
cmpsb
mov
loopne
in
xchg
lock
inc
dec
test
fcmovnu
mov
shlb
add
loop
push
nop
sub
addr16
sub
stos
push
inc
out
inc
sub
orl
fmull
call
into
lock
jae
scas
loope
inc
sbb
sbb
or
mov
jbe
sarl
xlat
jl
or
add
test
aad
ret
loop
mov
fldenv
jne
and
arpl
lods
lock
sub
js
adc
adc
pop
jb
mov
test
iret
mov
cmpsb
shrl
icebp
add
pop
ffree
into
cmp
xchg
pop
xor
dec
push
movsl
adc
cmp
mov
pop
test
mov
dec
adc
jmp
pushf
jp
test
or
xchg
js
sub
scas
mov
mov
pop
cmpsl
or
idiv
xchg
leave
lret
js
sahf
es
leave
insl
cwtl
push
xlat
and
popf
in
lock
mov
mov
movsl
mov
int
pop
stos
repz
jecxz
in
or
xchg
fwait
cmpsb
xchg
dec
repnz
idivl
outsl
movsb
push
xchg
test
xchg
push
dec
pop
mov
notl
cs
add
xchg
xchg
or
imul
xor
sti
es
daa
xor
xlat
xor
das
test
cs
sbb
ret
mov
push
push
mov
fisubrs
jae
add
xor
inc
xor
fisubl
fsubl
mov
daa
jns
gs
and
popa
pop
ror
cli
push
and
push
rclb
cmpsb
add
inc
test
in
hlt
xchg
lcall
inc
lret
icebp
xor
xchg
loope
and
mov
adc
jno
mov
mov
inc
adc
int3
adc
imul
xor
jmp
mov
mov
mov
push
stos
inc
test
rcrb
cmc
shl
shr
mov
mov
xor
mov
xor
or
mov
dec
not
jmp
adc
push
inc
daa
sbb
lods
insb
dec
lea
ljmp
adc
add
pop
xchg
stos
push
ret
pop
ffreep
mov
cwtl
inc
ror
xchg
int
adc
inc
int
push
or
push
mov
adc
mov
push
lds
insb
xorl
mov
pop
les
push
sub
fisttps
sbb
inc
adc
hlt
mov
hlt
sub
or
repnz
push
xchg
jp
or
mov
jmp
pop
std
push
xor
cmp
dec
mov
mov
push
out
add
xor
and
clc
mov
rorb
mov
fsubl
fcomps
aam
jne
jle
lock
add
mov
and
pop
sbb
xchg
sbb
dec
cmpsl
sub
mov
sbb
in
dec
xchg
cld
lds
adc
sub
aas
sub
lcall
fcoml
mov
sub
ljmp
pop
jae
call
shll
inc
dec
stos
and
shrb
cltd
jnp
mov
lods
ret
gs
sbb
jmp
adc
add
popf
add
inc
movsl
mov
stos
adc
mov
cld
add
adc
ret
cmp
xor
and
fs
cld
inc
xor
hlt
rorl
push
adcl
in
sub
xorb
inc
dec
push
repz
loope
shll
addr16
stc
imul
and
or
push
inc
dec
loop
hlt
xor
xchg
and
ja
push
movsb
xor
mov
mov
mov
icebp
negl
cli
adc
add
fsubrl
testl
orl
dec
into
sti
dec
and
mov
arpl
or
inc
bound
push
push
fcomps
add
in
xor
adc
cmp
das
inc
jno
cmpsl
add
jno
inc
mov
pop
xor
orb
loopne
cmc
repnz
sbb
or
out
and
loope
push
imul
roll
push
add
loopne
aam
mov
into
popf
and
cmp
jns
push
mov
push
or
shl
lea
mov
mov
push
out
mov
pop
fwait
sub
sti
cmp
mov
sbb
out
push
loop
in
cmp
fsubrs
jl
and
sub
pop
je
cld
mov
jl
cmpsb
cmp
add
imul
stos
xor
jmp
pusha
stc
rcrb
popa
lock
sub
dec
sbb
sub
dec
dec
gs
add
push
xor
cmpsb
mov
sbb
push
and
adc
inc
xchg
sub
cltd
adc
cmpsl
test
jb
pop
pop
call
adc
push
insb
call
inc
loop
pop
jge
mov
sub
adc
outsb
xchg
pushf
out
add
push
cmp
lcall
push
mov
jl,pn
inc
stos
inc
sbb
test
sti
push
pop
adc
outsl
lret
inc
pop
inc
inc
imul
popf
push
in
icebp
stos
mov
push
ja
aas
jb
outsb
mov
pop
sub
or
aad
mov
js
xlat
and
and
mov
xchg
mov
sub
push
ret
jmp
outsl
inc
into
sbb
leave
dec
adc
shll
and
xor
mov
mov
xor
or
mov
mov
shrd
shr
mov
mov
mov
xor
mov
xor
shl
mov
or
mov
cmp
je
mov
sub
mov
mov
xor
xor
shrd
shr
mov
jmp
jp
lds
sub
jns
jl
fwait
ret
int
adc
shll
mov
inc
xchg
fildl
inc
add
fnsave
js
inc
jge
repnz
insl
jp
movsl
pop
cmc
out
jp
movl
add
data16
xor
push
jle
je
jno
dec
fsubs
jge
jmp
stc
out
and
adc
ss
setns
jecxz
or
mov
adc
outsb
popf
sbb
sbb
inc
and
sub
movsb
repnz
mov
pop
cmpsb
jo
lahf
push
mov
addb
adc
iret
jl
cmp
or
pop
lret
pop
das
sub
mov
iret
dec
test
sarb
mov
mov
repz
sub
decl
xchg
insl
dec
xlat
frstor
mov
daa
pop
inc
and
and
sub
xchg
mov
hlt
push
jnp
cmp
push
dec
out
sub
sti
popf
sbb
and
insb
repnz
xor
add
adc
rep
pop
loope
enter
mov
int3
stc
cwtl
fsubrs
int3
mov
mov
sbb
daa
sti
roll
jne
push
lods
lock
push
negl
das
jo
inc
popf
scas
lahf
mov
lcall
nop
rcl
sbb
frstor
sbb
push
sub
jbe
imul
pop
fs
lods
inc
dec
mov
sbb
add
mov
mov
sti
sti
mov
dec
or
mov
push
jbe
daa
les
lret
mov
sbbb
xchg
inc
inc
xor
outsb
imul
scas
pushf
adc
or
xor
mov
mov
dec
pushf
test
xchg
mov
call
jns
xchg
rep
xor
cmp
cmp
neg
enter
and
dec
xlat
fidivs
cmpsl
inc
adcl
sub
inc
mov
std
fsubs
icebp
movsl
loope
test
adc
dec
fmul
or
add
xor
lods
loopne
add
inc
push
push
call
and
cmp
add
mov
mov
mov
pop
pop
lods
pop
xchg
jns
sub
in
mov
and
lods
push
mov
jge
ljmp
lret
andl
bound
inc
test
jns
enter
inc
jno
inc
jbe
cmp
pop
xlat
test
adcl
es
jnp
jle
sbb
cmp
xchg
stos
loopne
enter
mov
mov
pushf
addb
jnp
and
xchg
dec
ds
inc
ret
movsl
jbe
sbb
sahf
cltd
mov
incl
xchg
idivl
and
fldl
push
cmp
pop
add
sbb
shrb
into
pop
frstor
addr16
call
mov
ss
sbb
je,pt
ret
dec
negl
loop
imul
jb
xor
imul
push
pop
push
sbb
jo
xor
mov
or
sti
cmp
int3
push
sub
in
push
dec
or
push
in
jecxz
mov
mul
jl
adc
sub
mov
loopne
aaa
mov
mov
jp
iret
sub
scas
das
pop
sbb
mov
mov
mov
xor
or
mov
mov
mov
xor
xor
mov
mov
mov
shrd
shl
or
mov
mov
mov
shll
mov
mov
mov
xor
or
shr
or
cmp
jne
cmp
je
jmp
mov
mov
xor
xor
shrd
shr
mov
mov
mov
mov
xor
or
shl
or
mov
mov
xor
mov
mov
jmp
imul
sbb
fbld
push
mov
adc
fldcw
hlt
fisttps
test
fnstenv
sarb
inc
push
clc
or
jb
push
push
cwtl
fcom
and
xchg
int
es
dec
ret
pushl
dec
cmp
mov
call
sahf
icebp
dec
mov
sub
sub
fildll
cmpsl
movsb
call
inc
shr
lcall
and
js
mov
cmpsl
pushf
cmp
mov
rorb
add
cmp
clc
aam
mov
iret
sti
jbe
pusha
shl
add
sbb
imul
fnstenv
ficoml
ds
mov
mov
push
and
outsl
mov
sahf
sub
jecxz
sub
sub
xchg
pop
sbb
jl
int3
xorl
jle
insb
inc
imul
scas
jb
adc
pop
cmpsb
pushf
dec
aas
adc
aad
cld
ja
icebp
addb
adc
dec
and
jmp
add
mov
pusha
and
mov
out
push
push
jae
enter
lahf
push
nop
cmp
bound
mov
sbb
ljmp
inc
lock
pop
xchg
inc
jecxz
das
jae
pop
mov
and
cmp
loope
cmp
add
ss
sbb
imul
rorb
push
lret
fwait
psllq
sahf
fcoml
mov
stos
shll
dec
or
or
ficoms
and
into
out
add
test
mov
mov
push
dec
jo
jns
in
push
jle
cs
jnp
inc
dec
lods
ljmp
sub
pop
dec
fstpt
out
mov
clc
jmp
sub
std
mov
ljmp
push
imul
mov
mov
test
push
dec
psubb
ja
addb
cld
clc
dec
dec
adc
js
push
jne
pusha
mov
and
aam
ret
xor
pusha
or
add
cwtl
loope
cmp
add
add
insl
lcall
enter
dec
mov
icebp
push
in
push
test
ljmp
dec
dec
popf
insl
xor
inc
adc
int3
push
inc
stc
popf
add
lods
lret
shll
ja
or
shrl
xor
pop
jne
xchg
mov
xchg
mov
aad
loop
pop
dec
cmp
aam
push
rcrb
call
pop
and
bound
pop
notb
push
arpl
addl
ret
jp
addr16
mov
outsb
sbb
bound
mov
fdiv
das
jns
pusha
or
imul
jno
dec
in
fstpt
push
dec
fnstenv
jl
xchg
mov
mov
lock
ret
std
int
jmp
mov
daa
dec
jl
sub
and
ret
cmc
fld
cld
or
out
add
sub
jno
sub
cmpsb
data16
dec
xlat
fiadds
enter
fists
mov
inc
xchg
pop
les
push
rcrb
out
cmp
mov
add
fucomip
add
imul
int3
jb
mov
mov
pusha
ret
enter
mov
sub
std
insl
dec
inc
sti
xchg
push
cmc
xchg
or
push
fdivs
mov
mov
mov
xor
mov
mov
shrd
shr
mov
mov
mov
shll
xor
mov
or
mov
mov
mov
or
jmp
repz
mov
pop
pop
lods
mov
mov
adc
adc
adc
xchg
stos
test
jbe
adc
sub
mov
xor
or
mov
xor
dec
inc
imul
inc
add
dec
inc
dec
adc
pop
jp
pop
arpl
mov
mov
xchg
push
nop
inc
pop
out
fidivrs
xchg
mov
ljmp
in
lcall
lahf
mov
sub
mov
pop
add
daa
mov
push
cmp
mov
push
mov
fwait
add
clc
xchg
sub
faddl
pop
popa
or
popa
xchg
jl
daa
jecxz
outsl
rorb
mov
cli
push
add
in
outsl
int
inc
mov
lret
mov
and
cmp
push
sbb
mov
mov
mov
adc
cmp
out
mov
sbb
mov
cmp
sbb
ds
sub
dec
push
enter
in
jne
mov
test
fsubrs
sbb
xchg
inc
jl
cmp
sub
les
into
mov
jge
mov
dec
push
mov
and
jno
push
sahf
stos
pop
int
add
xchg
stos
sbb
call
cmp
loopne
ret
sarb
test
fadd
pop
sahf
iret
xlat
ja
insl
pop
lret
out
push
pop
jg
mov
sbb
les
cld
pop
xchg
fldenv
lock
mov
cs
clc
rorb
dec
sbb
sbb
and
incb
dec
fcomps
andb
fadds
adc
lret
pop
scas
andl
mov
jp
add
lret
pushf
cmp
adc
gs
and
popf
adc
xor
into
stos
mov
scas
imul
sub
xchg
and
pop
inc
int
inc
in
mov
pop
fs
or
rcl
pusha
sub
addr16
addb
cmpxchg
jo
mov
add
fsub
hlt
lcall
adc
lods
shrl
push
and
std
int3
rolb
jae
cmp
dec
outsl
jmp
ret
cmp
mov
sub
ds
sub
lea
and
sub
pushf
rclb
test
mov
cli
xchg
inc
mov
xchg
cmc
or
sbb
test
ret
xor
jne
mov
out
addl
sub
scas
out
int3
fstps
xchg
cwtl
sub
mov
pop
push
sub
sub
jle
and
mov
or
dec
cli
subb
push
xor
jp
and
xor
aad
cmp
mov
push
aaa
andb
mov
andl
push
sbbb
je
and
dec
pop
and
jno
enter
sbb
xor
pop
xor
mov
mov
push
add
or
repnz
mov
cltd
xor
dec
cli
push
pushf
push
mov
stos
cmp
xor
in
mov
stos
dec
mov
outsb
rolb
nop
mov
jmp
jns
into
cmpsl
inc
cmp
outsb
pop
rcll
sub
cmpsl
jmp
mov
push
lahf
adc
inc
out
icebp
fstl
movsb
or
jmp
mov
jns
stc
mov
mov
cmp
jne
mov
cmp
je
mov
mov
mov
mov
lea
mov
mov
mov
mov
mov
shrd
mov
mov
xor
shr
jmp
mov
push
jle,pt
lcall
int
adc
push
pushl
inc
mov
insl
add
or
mov
xchg
ret
adc
stos
inc
rolb
adc
jp
insb
cmp
shll
inc
es
repz
pop
pusha
mov
xor
and
sbb
xor
shl
jecxz
dec
and
rcrl
cwtl
mov
push
adc
out
pop
in
fwait
and
adc
in
repz
daa
andb
jl
mov
rcr
fnstsw
or
lods
addl
icebp
js
xchg
inc
cli
push
cmp
int3
xchg
jne
mov
jmp
daa
add
movsl
sub
adc
push
out
iret
cmp
push
test
aad
xchg
sub
inc
or
cs
pop
es
jmp
mov
test
daa
jnp
inc
bound
or
scas
cmp
dec
in
pop
fwait
cmpl
lods
fiaddl
out
fdivr
mov
sub
cld
jns
adc
je
lds
les
loop
jno
ljmp
into
push
jnp
leave
push
lock
and
bound
push
jno
and
in
sbb
push
sbb
pop
xchg
inc
jo
pop
push
sub
decl
inc
mov
cmc
push
or
andb
popf
xor
cmp
or
lods
xor
xchg
jne
bound
jmp
xchg
push
ss
push
fdivs
cmp
mov
and
dec
iret
push
paddw
mov
rcrb
jnp
ss
push
push
ret
insl
test
rcrb
cmp
sub
sub
repz
jmp
mov
cmp
push
mov
pop
stos
pusha
bts
out
mov
add
enter
mov
shl
es
mov
fucom
mov
es
mov
scas
pop
test
jo
cwtl
cwtl
push
pop
jecxz
fldenv
jns
fs
stos
jbe
not
popf
das
dec
or
jae
lret
xor
gs
or
xor
jecxz
arpl
jmp
lret
mov
and
mov
fimuls
sbb
in
pushf
lea
xchg
ja
lahf
fadd
arpl
shlb
push
movsb
mov
pop
fs
out
shr
and
sti
gs
leave
inc
sub
stos
add
xchg
mov
lcall
mov
push
in
test
jge
popa
cmc
mov
xchg
enter
xchg
cmc
sbb
mov
inc
mov
jge
fistl
xchg
sbb
movsb
pop
mov
pop
add
lds
add
jb
cmpsb
or
cwtl
ret
xchg
movsl
jle
insl
ds
bound
pop
xchg
cmp
je
shr
std
hlt
xchg
shll
push
outsl
jle
test
mov
int
pop
push
xor
and
test
push
inc
or
scas
inc
pop
and
pop
std
ds
inc
ficomps
in
push
xchg
cmc
xchg
push
sarl
stos
xchg
pusha
push
into
push
sub
push
rol
mov
arpl
mov
cmp
pop
movsl
xchg
jg
lock
push
lret
int3
mov
cltd
mov
jecxz
movsb
jmp
jbe
add
xor
movsl
push
je
and
jns
adc
push
dec
jecxz
push
insb
lods
sbb
cmpsb
adc
bound
mov
mov
push
jle
push
popf
lds
mov
cmp
push
add
rol
loopne
or
mov
mov
mov
xor
xor
xor
shld
mov
mov
mov
mov
shl
mov
cmp
jne
mov
cmp
jne
mov
mov
mov
jmp
mov
sbb
sbb
out
stos
push
lds
stos
je
adc
int
adc
fsubs
mov
loop
imul
cmp
fs
sti
movsl
minps
xlat
fsubrl
test
int3
xchg
jae
dec
cmpsb
stc
push
cmp
mov
ficoms
mov
test
pop
test
or
sbb
mov
inc
lock
in
jle
sbb
lods
jmp
es
dec
je
lahf
jmp
pop
jnp
ds
and
repnz
fimull
movsl
mov
loopne
aaa
repnz
jae
ret
inc
sub
cmp
inc
mov
dec
rol
or
cmpsb
dec
jg
outsl
xlat
jecxz
and
add
fdivs
xchg
pusha
cmc
pushf
test
push
fcomp
lret
push
cwtl
mov
int
mov
outsl
mov
cmp
addr16
inc
gs
ljmp
out
in
out
sub
subl
mov
xchg
xchg
add
pop
adc
pop
push
and
jp
inc
lcall
ja
xlat
push
ljmp
das
mov
mov
jp
fldenv
jb
es
ret
enter
cmc
fisttpll
and
js
aas
cmp
xchg
bound
jmp
lea
inc
xchg
ljmp
test
icebp
addl
push
mov
adc
rclb
popa
cmp
sbb
fsqrt
mov
add
out
int3
dec
mov
dec
aaa
fsincos
sbb
jl
imul
mov
and
and
xchg
cmpsb
cmp
and
int3
pop
lock
loope
sub
mov
das
data16
mov
repz
fsts
cmp
xchg
fistpll
or
fisttpll
imul
inc
aad
stc
mov
rorb
std
ficoml
stos
cmpsb
mov
in
mov
out
cmp
pushf
repz
pop
popf
mov
push
inc
pop
lock
cltd
xchg
mov
mov
push
sarb
in
bound
outsb
xchg
add
dec
cmpsb
push
pop
fildll
mov
push
int
sub
jno
cmp
xor
pop
dec
cmc
and
mov
mov
inc
frstor
pushf
pop
xchg
xchg
inc
fwait
or
call
sbb
xchg
jae
fwait
in
cs
test
ret
mov
dec
in
jb
arpl
push
je
mov
in
and
jae
cmp
adc
mov
dec
cmp
ret
pop
sar
xchg
or
insb
das
les
cmp
xor
imul
jo
movsb
shlb
mov
out
ja
xor
lods
rorl
inc
push
daa
dec
mov
es
jl
sub
or
movsb
jp
adc
mov
aas
jle
imul
dec
in
push
ror
mov
ja
and
sub
xchg
inc
into
sub
icebp
or
mov
sahf
mov
fstps
int
dec
into
mov
jae
cmp
insl
mov
aas
aaa
sbb
mov
pop
sti
xchg
arpl
pushf
add
xorl
jmp
fidivl
or
daa
fdivs
cmpsb
repz
out
sbbb
push
mov
jmp
clc
push
insb
xchg
push
fisubrs
cmp
mov
xor
xor
mov
mov
shrd
shr
mov
mov
mov
mov
xor
or
mov
shl
mov
mov
or
mov
push
pushl
push
push
call
mov
mov
andl
shrd
shr
shr
xor
push
xor
mov
mov
mov
push
push
push
call
shld
mov
mov
or
mov
shl
or
jmp
adc
jmp
repnz
ret
push
jne
mov
int
adc
rcrb
adc
sbb
pusha
roll
cmc
dec
ja
add
sbb
xchg
dec
jecxz
add
arpl
popf
das
stos
mov
cltd
pop
mov
sbb
mov
fstl
in
inc
dec
scas
push
push
cmpsl
out
out
cmpsb
add
mov
lcall
mov
lock
je
mov
cmp
add
jg
aam
push
or
cli
xchg
inc
fldcw
stc
push
xor
icebp
adc
adc
sbb
cmp
push
mov
mov
out
push
mov
inc
fcom
inc
inc
out
push
lea
or
ffree
pop
mov
push
test
jne
fs
jne
pop
cmpl
mov
insb
cmpsl
dec
icebp
dec
fdivl
sbb
sbb
add
sahf
ds
sbb
icebp
data16
or
sub
mov
inc
js
xchg
fdivrs
xchg
jmp
mov
jns
add
inc
shl
add
cs
cmc
push
mov
int
sbb
adc
push
lret
dec
int3
adc
jns
mov
push
dec
je
sbb
mov
scas
mov
mov
add
add
xchg
xchg
push
addr16
add
and
popf
insl
int
ja
mov
lret
test
mov
test
int3
xor
mov
loop
clc
fcmovne
roll
add
inc
jle
lcall
xor
push
xor
inc
jge
stos
shl
xchg
in
pop
fildll
xor
cwtl
xchg
adc
in
call
aas
fcompl
xor
popf
and
mov
inc
cmc
nop
int
out
adc
pop
repnz
mov
stos
mov
inc
lcall
loopne
ror
cmp
jbe
mov
pop
add
lret
in
ja
mov
mov
dec
or
mov
ds
dec
lds
pop
push
enter
test
loopne
sub
and
shr
pushf
into
pop
pop
jno
push
cmovo
xchg
fisubrs
sub
xor
fcomps
test
add
ror
jmp
fldt
cltd
idivl
repz
lret
rcl
ljmp
jge
adc
mov
jns
mov
and
or
scas
leave
add
cwtl
sub
jno
cli
ljmp
jecxz
push
imul
fcmovb
icebp
xor
inc
cmpsl
xchg
cld
mov
mov
fcmovb
adc
or
xchg
test
push
cmpsb
ficomps
mov
mov
in
jge
cli
data16
pusha
scas
scas
or
mov
in
fdivrl
je
or
inc
clc
call
rolb
adc
dec
push
add
daa
loope
adc
inc
cmpsb
adc
aas
xchg
xor
fadds
stc
jno
pop
pop
frstor
cltd
sbb
aaa
dec
test
out
push
ja
clc
je
pop
xor
sbb
adc
or
int3
cmp
sbb
insb
rcrb
shr
jnp
lahf
sbb
sub
mov
sbb
arpl
jne
andb
add
adcb
push
pop
jl
repnz
mov
ss
xor
xor
xor
xor
mov
mov
jmp
mov
jmp
or
jge
pop
push
dec
cltd
cmc
leave
lcall
xchg
adc
int
adc
nop
push
adc
fcoms
xor
stos
je
hlt
mov
inc
xchg
mov
imul
shl
xorb
mov
pop
jp
out
add
mov
insb
insb
insl
mov
mov
lahf
sub
jae
add
or
mov
lock
push
mov
push
push
fdivrl
xchg
daa
stos
ds
mov
fcoms
adc
imul
lret
and
shlb
sti
inc
xchg
dec
loopne
dec
data16
in
push
arpl
push
roll
sub
xor
adc
not
xchg
dec
mov
add
and
mov
cld
pop
and
rol
xchg
frndint
or
cwtl
pop
and
out
add
repnz
imul
dec
pop
or
cld
sub
lret
xchg
cs
sbb
xchg
dec
cltd
sbb
pushf
or
push
mov
lods
jecxz
xchg
pop
push
inc
mov
rcrb
cld
cmpsb
in
iret
sahf
dec
je
sahf
xor
fldt
sbb
or
outsb
enter
leave
test
and
iret
sub
inc
sbb
stos
mov
sub
loopne
jbe
andb
lcall
fs
stc
add
ljmp
inc
sbb
xchg
adc
out
stc
pop
test
jge
in
in
test
cltd
xor
ret
xor
fidivs
dec
push
push
nop
test
in
cmp
outsl
mov
cwtl
push
mov
leave
inc
push
add
cltd
aas
or
cltd
int
or
mov
ds
or
xchg
nop
int
nop
xor
mov
popf
imul
rcr
call
add
nop
in
fwait
sbb
cmp
dec
js
outsl
add
mov
cvtpi2ps
sub
jmp
stos
cli
pop
fsubrs
push
jge
mov
cmp
mov
and
jne
shrl
jg
aad
jb
aaa
inc
or
sub
call
pop
out
shl
clc
imul
test
ds
sbb
in
sub
xor
shlb
xchg
xchg
rorb
mov
mov
push
xor
push
add
mov
push
xchg
xchg
loopne
adc
cltd
cmc
sahf
bound
mov
mov
pusha
pop
cltd
lret
adc
shlb
je
jb
sub
mov
xchg
and
xlat
shlb
sbb
jmp
ret
daa
pop
ds
push
sbb
sarb
pusha
pusha
or
dec
push
fs
loopne
jmp
nop
and
inc
or
ret
loop
dec
in
fs
inc
ficoms
cmp
add
mov
inc
dec
xchg
and
sub
add
inc
andl
hlt
loope
jmp
jbe
inc
xchg
dec
xchg
int3
push
add
sbb
cmpsb
loope
fisttps
out
pop
arpl
mov
cld
xor
rolb
pushf
inc
leave
adc
ret
inc
stos
pop
cmpsb
pop
jnp
sbb
xlat
dec
movsb
dec
jp
or
cmc
mov
inc
stos
leave
outsl
enter
cmpsl
pop
push
movsb
inc
mov
and
lea
arpl
cli
je
stos
pop
dec
push
mov
jg
inc
cld
mov
mov
mov
mov
mov
mov
movzwl
cltd
xor
xor
shld
mov
mov
mov
mov
shl
mov
cmp
jne
mov
cmp
jne
movl
mov
movl
mov
movl
mov
movl
mov
jmp
stc
sub
xor
mov
int
adc
iret
xlat
jo
and
out
or
or
aas
mov
sbb
dec
jbe
and
scas
sub
scas
test
push
jnp
enter
scas
lods
jae
and
jbe
jae
test
or
sahf
dec
xchg
aas
repz
push
repnz
mov
add
arpl
lock
and
mov
jno
inc
mov
data16
push
xchg
int
cmp
mov
daa
sub
adc
out
out
mov
xchg
fisttps
sub
adc
xor
xchg
stc
mov
xchg
push
mov
jbe
mov
inc
sar
adc
les
inc
in
loop
iret
xchg
jbe
jecxz
dec
cmp
jmp
popa
bound
jae
cmp
in
stos
popf
sbb
cmp
popf
and
inc
mov
add
cmp
cmp
stos
xor
mov
call
push
add
jnp
loopne
stc
int3
bound
nop
lret
sub
mov
jmp
das
add
pop
sbbb
sub
les
loope
cmp
push
in
adc
std
push
xlat
ja
cmpsb
mov
dec
fiadds
sub
xor
mov
jbe
gs
inc
in
push
test
js
je
cld
mov
push
gs
inc
jecxz
and
mov
test
fnstenv
jo
in
movswl
daa
cmp
popa
adc
rclb
push
mov
fnstsw
cmpsl
push
jle
xor
mov
rclb
stos
add
or
mov
int3
int3
mov
jle
fscale
add
je
fucomip
divl
test
lcall
mov
add
repnz
pop
pop
enter
data16
in
loopne
daa
mov
dec
lock
push
outsl
pop
cmp
scas
imul
dec
xchg
adc
and
lea
imul
out
ljmp
dec
mov
inc
xchg
adc
popa
roll
xlat
mov
icebp
cmc
sub
movsb
xchg
mov
mov
out
mov
pop
sbb
pop
lds
xor
mov
addr16
dec
js
fildll
jp
movsb
inc
imul
rcr
lret
mov
mov
pop
test
std
inc
in
lds
and
ja
js
hlt
rol
inc
popf
dec
push
jbe
pusha
cmp
cmp
les
dec
jmp
ds
cmp
xchg
int
or
push
add
lret
mov
jno
adc
adc
jge
push
pop
jl
pop
xchg
pop
adc
xchg
insl
std
push
sbb
orb
stos
push
dec
cmp
mov
pop
stos
ljmp
cld
mov
lds
push
imul
outsb
sarl
jns
mov
cltd
lret
scas
call
pop
mov
lods
movsl
repz
fs
sub
lcall
fs
adc
in
mov
subl
cmp
icebp
jns
mov
insb
imul
jnp
imul
or
fisubrs
leave
icebp
adc
push
mov
sub
jmp
adc
or
incb
cmp
test
xchg
mov
sahf
into
push
xor
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
add
mov
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
mov
jmp
dec
popf
shll
pop
das
popf
ffreep
mov
or
adc
int
adc
cli
push
pop
sbb
pop
cltd
cmc
stos
adc
xchg
or
sub
push
mov
add
xor
fdivrs
adc
stos
push
lahf
enter
lods
or
or
popf
cmpsb
test
add
sbbl
cmp
pop
mov
xlat
loope
fadds
pop
ret
push
jp
shll
fmuls
in
cmc
scas
nop
cmp
xchg
mov
add
fimuls
dec
jg
je
icebp
outsb
or
or
dec
cwtl
jp
mov
sahf
test
iret
lret
lds
out
iret
and
add
lea
loopne
xchg
inc
loope
add
mov
dec
dec
mov
movd
and
cmp
in
sub
fstpl
je
push
jns
or
pop
cmp
fiadds
mov
dec
popa
jb
shr
mulb
adc
sbb
call
loopne
cmc
pop
sbb
stos
stos
dec
jb
cmc
lcall
lods
add
fwait
imull
test
jo
inc
xchg
fimuls
pop
add
int
outsl
xchg
scas
jo
insl
pop
dec
pushl
or
inc
jg
cmp
outsb
insb
sub
arpl
outsl
aad
fisubrl
push
loop
sub
pushf
call
push
or
inc
and
mov
push
sub
lds
push
adc
ret
out
cmp
sbb
stc
insb
fstp
cmc
adcl
scas
inc
push
pop
bound
cmpsb
jb
jb
push
scas
mov
out
inc
insb
ljmp
pop
xchg
loop
mov
data16
sarl
add
xor
js
outsl
or
or
sbb
ja
cmp
into
pop
outsl
pop
xorl
jb
xlat
scas
lret
stc
add
adc
lret
aad
push
push
inc
lods
jle
movsb
fdivrp
shrl
insb
mov
out
jbe
sbb
lods
fmuls
sahf
sub
aam
test
scas
sbb
sub
dec
insb
pop
clc
repnz
adc
in
subb
lock
pop
dec
fimuls
sti
mov
in
call
sub
and
mov
iret
mov
push
bnd
jl
pop
rorb
test
imul
xor
and
ret
imul
arpl
push
cwtl
sub
adc
addr16
lock
and
mov
or
scas
inc
out
pushf
inc
lea
pop
inc
sahf
gs
aas
jle
sub
xchg
inc
pop
fidivl
pop
dec
mov
jns
jmp
and
ss
js
inc
dec
or
nop
js
ficoms
push
ret
and
mov
add
and
mov
negl
push
and
jnp
jns
cmp
inc
jbe
sub
mov
jnp
mov
lret
sbb
cmp
fiadds
test
mov
cmp
test
mov
fcmovu
das
xlat
inc
in
scas
in
js
jnp
or
xor
mov
outsb
out
ljmp
cmc
lret
inc
sbbl
xchg
ds
jo
mov
pop
fwait
dec
mov
or
inc
push
add
cmpsl
stos
mov
lcall
dec
movsb
int3
les
stos
shll
pusha
xor
adc
adc
or
movsb
shrd
shr
mov
mov
xor
shl
xor
or
add
mov
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
mov
mov
or
mov
mov
shrd
shr
mov
mov
xor
xor
or
add
shl
mov
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
mov
mov
add
mov
mov
shrd
shr
mov
mov
xor
shl
mov
xor
or
mov
shrd
add
xor
shr
mov
mov
xor
or
mov
or
shl
mov
mov
xor
mov
xor
shrd
shr
mov
mov
mov
mov
xor
or
mov
mov
mov
xor
xor
mov
mov
mov
shrd
shl
or
mov
mov
mov
shll
mov
mov
mov
xor
or
shr
or
cmp
jne
cmp
jne
jmp
mov
mov
mov
mov
xor
xor
mov
mov
shrd
shr
mov
mov
mov
mov
xor
or
mov
shl
mov
mov
or
jmp
imul
imul
mov
rep
push
jl
adc
adc
adc
lea
mov
ret
into
insl
dec
shll
mov
mov
sti
push
adc
push
bound
ljmp
or
lea
scas
cmp
mov
std
jle
xchg
jae
xchg
push
mov
xchg
scas
xor
mov
shrl
adc
ds
jmp
fbld
into
xor
sbb
addr16
cli
pop
add
xor
daa
pop
popf
sub
xchg
loopne
push
pop
xorb
push
xchg
mov
xchg
repz
sub
aas
mov
or
inc
es
dec
dec
test
lcall
add
adc
mov
sbbl
repz
and
push
inc
and
and
inc
orl
test
gs
dec
xchg
push
stos
push
stos
pop
mov
jno
aas
dec
fisubl
dec
jl
andl
in
xor
xor
ja
clc
fmuls
fldcw
nop
lcall
xor
scas
rolb
ret
jg
push
pop
pop
mov
js
jb
mov
pop
out
sub
cmp
dec
sbb
and
mov
mov
jl
inc
inc
xchg
aad
test
xor
xlat
das
push
in
shlb
lock
cmpsb
jnp
out
in
jnp
adc
mov
and
xchg
dec
fisubs
sub
fcompl
loope
inc
shlb
fmull
xchg
adc
cmp
push
aas
push
dec
mov
mov
xchg
repnz
xchg
mov
fwait
mov
les
gs
push
push
enter
rorl
mov
cld
fidivs
incl
in
cwtl
jno
xchg
movsb
cmp
aas
mov
push
sbb
fcmovnb
cmp
jmp
push
mov
jge
xor
inc
add
push
cmp
sahf
loopne
push
leave
addl
mov
xchg
xchg
push
dec
in
jb
push
pushf
xor
popf
sbb
mov
fcmovbe
jno
jb
fidivrl
rcrb
add
das
inc
popf
arpl
jae
pop
adc
fildll
push
out
fdivr
aaa
push
jmp
jle
pusha
inc
dec
out
and
ja
or
ss
jecxz
je
cwtl
les
push
outsl
dec
jae
mov
xor
jbe
lret
inc
ds
pop
sbb
pop
pop
mov
dec
mov
fcoms
jp
setp
mov
addl
fstpl
push
pop
stc
movsl
mov
adc
mov
adc
sbb
and
push
icebp
shr
js
push
stos
jb
dec
rclb
fwait
ss
fdivl
stc
jb
outsl
sub
pop
icebp
lea
aam
ss
xor
sahf
adcl
ljmp
pushl
icebp
xchg
lods
mov
loop
mov
jno
mov
jg
cltd
aam
inc
sahf
xchg
and
push
add
cltd
lds
xor
aam
movq
pop
ss
jo
sbb
hlt
ja
jo
fildll
jmp
adc
jecxz
inc
mov
inc
ds
jmp
cwtl
add
ficomps
jne
les
xchg
pop
mov
imul
push
push
call
mov
jmp
xor
sbb
stos
xor
cmp
mov
adc
adc
mov
add
sbb
and
push
lret
jno
sarl
xor
iret
push
int
mov
xor
jb
and
adc
push
cmpsb
sub
bswap
insb
inc
lods
lcall
fstpl
fucom
popa
rclb
xchg
adc
daa
jae
insl
jno
int
adc
ret
push
cmpsl
dec
data16
jb
testb
pop
inc
outsl
xchg
jp
mov
insl
pop
cs
mov
out
pop
xchg
pop
outsb
sahf
and
pop
int3
imul
sub
mov
ss
mov
mov
push
mov
push
sbb
xorl
ja
movnti
pop
pop
xor
xchg
sbb
lcall
cld
jb
enter
popf
fwait
push
divb
ja
mov
jo
cltd
sub
mov
lods
add
call
and
insl
mov
loop
cmp
ljmp
loop
lods
mov
cmp
ficompl
cmp
inc
sbbl
pop
and
shll
xor
push
mov
adc
ret
xor
push
inc
mov
fisubs
push
pop
jmp
movsl
out
cmp
insl
mov
in
adc
jmp
sahf
adc
or
ret
fwait
jns
jge
dec
fcomps
sub
out
fcoml
jb
pushf
jns
es
outsl
sub
pop
fsubrl
lret
adc
imul
mov
pop
push
jns
mov
xor
jns
movsl
or
inc
sub
icebp
sub
call
cmpl
jecxz
cmpsl
mov
loop
add
xor
je
es
pushf
dec
sbb
subl
cmpsb
inc
int3
shlb
aaa
inc
xchg
jnp
shrl
adc
int
rcl
add
mov
hlt
xchg
dec
imulb
add
fld
lret
sti
jno
fdivs
xchg
push
jp
or
es
add
popf
cmp
mov
orps
cmp
fldcw
aaa
mov
xor
aam
push
mov
lret
pop
cmp
jnp
xchg
mov
fsubs
sahf
mov
rorl
cli
cmp
fldt
adc
pop
das
lret
ss
xchg
and
push
adc
addb
rcll
ss
jae
mov
les
dec
je
movsb
enter
scas
in
shlb
and
cs
gs
and
sbb
cld
xchg
cwtl
pop
xchg
xchg
int3
rorb
cmp
and
and
jmp
and
xchg
pop
xchg
pop
lds
push
rcrb
mov
dec
mov
sbb
inc
lea
test
int3
push
lock
aas
jne
in
mov
sti
jns
pop
hlt
outsb
ljmp
cwtl
push
je
mov
in
ljmp
or
popf
and
pop
dec
fstl
loop
dec
iret
shl
cld
push
cs
in
cltd
and
ss
loopne
lds
sbb
popf
pop
xor
pop
loop
adc
mov
dec
jmp
cmp
leave
rolb
push
mov
dec
mov
fwait
inc
in
lea
pop
nop
adc
push
or
and
loop
adc
clc
xchg
cmp
stos
jp
test
mov
jmp
notl
jg
fsubr
jne
mov
push
ret
mov
orb
and
lret
xor
gs
shrd
jmp
ja
jle
sub
xchg
mov
shrb
or
int
adc
out
nop
inc
ljmp
pop
fidivrs
cmpsl
gs
out
fidivl
loop
stos
sub
mov
filds
lea
or
mov
push
out
into
out
adc
inc
cmp
lahf
pop
sarl
sbb
cwtl
stos
out
and
fdivs
aaa
dec
mov
or
loope
xchg
jl
cmp
push
mov
sub
fldz
lods
xchg
out
pop
sbb
cld
cmpb
cli
adc
mov
cmpsl
jle
clc
mov
mov
adc
int
xor
lret
jmp
movsb
cmp
jge
cmp
jecxz
adc
jne
mov
push
sbb
call
sbb
mov
mov
fiadds
push
adc
les
lock
push
jne
mov
pop
lea
xchg
lods
je
sub
dec
loopne
inc
in
stos
les
cmp
xor
dec
add
mov
in
sub
neg
sub
lds
lods
test
mov
xchg
and
add
cmpsl
jecxz
cmp
sub
pop
enter
pop
fs
cmp
cmpsl
aam
add
cli
lock
bswap
out
xor
inc
out
push
sub
movb
sub
inc
rcr
fidivs
ret
cmp
cmpsl
std
lcall
xchg
popf
inc
sub
int3
leave
std
aam
ret
cmp
or
adc
ja
mov
gs
pop
pusha
fs
mov
inc
rcr
scas
inc
or
cmc
outsb
inc
mov
jmp
movb
ljmp
in
xlat
cmp
dec
orb
std
mov
push
adc
mov
and
pop
xchg
jl
mov
add
rol
out
pop
fadd
aaa
mov
xchg
jo
rcr
test
adc
lret
aaa
imul
xchg
add
cmp
push
adc
jle
ret
into
out
push
cmc
lret
push
cltd
jg
in
push
sbb
popf
rcl
pop
leave
pusha
xor
jg
stos
rolb
out
adc
stc
les
sarb
mov
mov
cltd
mov
cmp
rdtsc
xor
xor
dec
adc
data16
jb
or
pop
fists
jno
mov
pop
sbb
in
inc
cmp
mov
mov
pop
sbbb
jecxz
outsl
and
jns
sbb
jle
repz
ja
push
sub
fldenv
pop
and
fidivs
mov
ss
pushf
dec
addr16
out
nop
fiaddl
in
xchg
mov
out
dec
std
je
scas
push
test
pop
call
or
es
cmp
push
pop
xor
inc
jmp
fidivl
ffree
iret
add
nop
hlt
pop
sbb
sub
shl
mov
movsb
jle
xchg
sbb
and
aaa
imul
es
or
daa
push
std
rolb
mov
dec
adc
fsubs
cld
dec
jo
mov
xchg
dec
clc
mov
mov
or
addr16
inc
fnsave
stc
jge
lds
xchg
sbb
push
sub
pop
into
cltd
xlat
cmc
std
add
push
cmp
inc
jg
out
int
pop
push
frstor
ja
jno
inc
dec
cmp
adc
xlat
xchg
adc
mov
popa
cmpb
mov
cmpsb
popf
push
shr
adc
push
sbb
fmul
shr
shr
xor
push
xor
mov
mov
mov
push
jmp
bnd
test
pop
lea
and
adc
int
adc
aaa
add
sbb
imul
xor
cmp
push
sbb
aad
nop
pop
enter
jbe
push
rcl
cmc
in
sti
mov
ret
sbbl
inc
ss
jp
stc
adc
lock
adc
loopne
stc
shll
cmpsl
je
dec
mov
inc
scas
test
xchg
cmp
mov
sbb
fcompl
inc
push
int
mov
xchg
in
add
data16
imul
jnp
mov
inc
push
mov
pop
pop
push
rcll
out
roll
jg
and
ja
push
push
imul
test
inc
pop
pop
sbb
jns
push
or
pop
pop
xchg
shufps
sub
aad
add
sub
lock
push
sub
in
js
mov
shrl
mov
mov
xchg
sbb
lahf
inc
cmp
fnstenvs
cs
iret
mov
repnz
sub
mov
jle
jb
mov
sahf
sbb
lcall
pop
enter
cwtl
outsb
mov
xor
lcall
sub
and
dec
mov
mov
pop
mov
xchg
xlat
cwtl
and
push
inc
sub
mov
dec
sbb
inc
jno
leave
cld
xchg
jo
push
adc
xor
int
add
bound
adc
cld
sbb
adc
jbe
mov
jmp
jae
dec
movsl
out
add
in
fs
leave
int3
jns
push
cmp
xchg
aas
push
cld
push
dec
int3
add
pop
and
ret
js
sub
xor
ds
cwtl
movsb
insb
ret
mov
cmp
mov
lods
je
das
mov
shlb
movsl
fninit
rclb
cmp
mov
jne
and
out
pop
sub
testl
orl
aaa
inc
aam
pop
sub
mov
add
mov
pop
sbb
stos
das
mov
inc
jo
sbb
pop
add
dec
push
nop
repnz
vshufpd
and
imul
xor
popf
mov
mov
rol
and
mov
es
daa
ljmp
pop
dec
mov
cmp
push
mov
cwtl
and
ficoms
and
fdivrl
ljmp
sahf
jl
inc
je
leave
rcrl
dec
stc
pop
mov
push
lret
jl
gs
addr16
dec
add
sub
sub
std
sub
addb
pop
in
pop
in
jl
mov
mov
xchg
clc
adc
movsl
pushl
clc
rolb
mov
aam
test
cs
xlat
push
push
and
jecxz
je
sbb
ret
fcmovu
jge
sbb
stc
inc
sub
aaa
call
cwtl
pop
or
push
sub
mov
test
movsb
clc
aaa
std
dec
shll
push
jnp
icebp
inc
cmpsl
fisttps
or
inc
cmp
fmull
popf
enter
or
xchg
hlt
pop
jmp
and
mov
mov
test
fldl
scas
mov
repnz
in
test
ret
cmp
add
pop
out
mov
lea
mov
cmc
enter
add
vpextrw
lds
and
call
shld
or
shl
or
xor
xor
mov
mov
mov
mov
mov
xor
xor
shrd
shr
mov
mov
mov
mov
shl
or
xor
or
mov
mov
mov
mov
xor
xor
mov
mov
mov
shrd
xor
shr
shl
or
or
cmp
jne
cmp
je
pushl
pushl
pushl
push
push
call
pop
leave
ret
movl
cmp
movl
jae
cmp
movl
jae
sbbl
jmp
test
sub
sub
imul
mov
push
adc
adc
test
cmpsl
outsl
add
inc
jmp
stos
dec
popf
xor
jns
pop
scas
pop
mov
fcoms
mov
in
pop
mov
andb
mov
dec
hlt
adc
or
mov
std
shlb
inc
jle
loop
clc
add
adc
in
mov
pop
daa
sahf
cmpsb
or
dec
decl
xor
insl
jbe
mov
adc
shlb
lock
sub
icebp
das
std
pop
repz
pop
xchg
mov
jbe
mov
add
test
les
add
jmp
xchg
push
lods
push
daa
or
mov
ljmp
mov
cmc
jns
pop
leave
dec
mov
cmp
ds
inc
ds
inc
int3
push
cmc
cmp
sbb
fildl
or
xchg
clc
aaa
out
andl
rclb
mov
aas
push
sub
lods
mov
lahf
xchg
and
test
cld
in
push
fbstp
sbb
addr16
jge
push
repnz
mov
jp
push
sub
pop
js
mov
dec
mov
jbe
pop
data16
ret
add
mov
outsl
or
rorb
dec
sub
aaa
int
lea
leave
dec
dec
aam
inc
js
mov
xchg
sahf
enter
rcrb
jecxz
and
pop
mov
xchg
pop
cltd
xchg
cmp
inc
pop
dec
mov
xchg
into
fldl
cmp
cmc
xor
jnp
jo
imul
push
xchg
daa
inc
movsb
jmp
mov
ret
lcall
and
mov
shlb
mov
aas
jl
addl
sub
add
mov
loopne
pop
int
push
fidivrl
call
cmp
inc
adc
fstpl
xlat
or
push
sti
stos
xchg
into
das
lret
jae
int3
xor
sbb
int3
test
stc
pop
test
ror
sar
and
jle
mov
jmp
sbb
ljmp
or
mov
push
or
cmc
gs
inc
mov
inc
cli
imul
in
aaa
addr16
decb
pop
lea
xor
sbb
cmp
cltd
cmp
out
insb
test
loop
jg
and
or
ret
push
xchg
jo
xchg
sbb
fidivrl
scas
and
out
sti
jl
mov
mov
icebp
imul
sarl
addl
scas
cmc
rcrl
std
or
push
pop
out
js
jl
out
rorl
sub
pop
nop
into
sub
out
mov
cmp
and
fnstenv
loopne
iret
or
and
xor
scas
ret
lret
and
pop
arpl
ror
icebp
jnp
loope
daa
pop
mov
je
push
jo
or
inc
jnp
adc
cmp
pop
add
cli
add
lods
loop
add
or
jae
pop
push
jns
lods
test
dec
ljmp
in
in
je
mov
jmp
sbb
or
aaa
fisubrs
lret
xchg
jns
dec
pop
xchg
addb
mov
in
mov
cmp
jmp
pop
xchg
push
sbb
add
push
sub
mov
shll
out
sti
rcrb
ljmp
pop
loopne
jmp
lods
test
icebp
nop
mov
enter
sbb
sbb
jg
xchg
int3
and
sbb
and
jbe
adc
jne
lret
in
shrd
movl
shr
ret
movzwl
sub
mov
xor
and
shr
ret
xor
xor
ret
push
mov
sub
add
movl
or
mov
mov
cmpl
mov
mov
mov
movl
jmp
movl
movl
ja
pushl
push
push
pushl
push
pushl
pushl
call
xor
adc
andl
adc
sub
add
addl
movl
cmpl
mov
mov
movl
jmp
movl
mov
jne
call
or
movzbl
sub
mov
and
or
mov
or
xor
mov
or
movl
adc
movl
sub
movl
push
movl
xorl
movl
and
push
sub
movl
sbb
mov
andl
mov
push
push
addl
push
call
xor
mov
mov
movl
push
movl
or
adcl
push
or
xor
xor
push
andl
push
call
or
mov
cmpl
movl
mov
movl
mov
jmp
movl
not
je
push
pushl
push
pushl
push
pushl
pushl
pushl
push
pushl
push
push
pushl
call
orl
notl
adc
mov
sbb
add
and
inc
mov
addl
push
orl
push
addl
push
push
decl
call
cmpl
movl
mov
mov
jmp
movl
jne
pushl
push
call
add
add
adc
mov
xor
add
sub
or
mov
and
mov
mov
or
cmpl
movzwl
movl
movl
jmp
movl
movl
jae
pushl
call
adc
xor
xor
adc
orl
add
mov
add
mov
subl
movl
mov
xor
movl
mov
xor
add
sub
and
movl
adcl
movl
jmp
fcmovne
mov
test
leave
push
cmp
pop
adc
xor
adc
adc
out
fildl
lods
and
push
jmp
xor
fistps
ja
mov
xor
nop
jns
mov
mov
jmp
sub
inc
mov
aas
mov
sahf
xor
sub
scas
xchg
repnz
xchg
cmpl
or
mov
je
ss
enter
sti
lea
mov
and
ret
push
in
dec
loop
cmc
push
std
popf
sbb
jg
pop
adc
push
cli
test
movzbl
and
xchg
aaa
pop
ret
add
xor
and
dec
push
lcall
vcvtss2si
push
xchg
mov
ds
mov
ss
std
jmp
shr
xchg
add
popa
push
xor
shll
jae
add
xor
jp
dec
call
pop
dec
iret
stos
fstpl
pop
push
mov
shlb
mov
adc
add
add
fnstcw
lods
xchg
add
cli
jae
ds
inc
rcr
pop
shll
xor
test
push
jb
inc
insl
dec
mov
jne
aam
cmp
mov
sbb
fimull
sti
icebp
xlat
repnz
mov
mul
jge
mov
sub
pop
das
fbstp
push
ds
mov
fs
push
int
xchg
mov
fldl
aas
mov
and
jle
push
sub
fcoms
jnp
aad
add
call
or
movb
insl
test
ret
rcll
ljmp
notb
rcr
mov
sti
jno
andl
sbb
jbe
fdivs
inc
das
sub
or
sub
dec
stos
add
outsb
jns
aad
sbb
enter
cmc
lahf
and
bound
push
sbb
mov
xchg
std
in
jns
mov
jo
mov
xchg
lcall
add
dec
sub
loope
add
insb
addr16
cwtl
push
cmc
mov
jecxz
inc
mov
pop
push
xor
sbb
jne
loope
sti
dec
hlt
mov
cwtl
out
imul
sub
jecxz
loopne
cmp
cli
cmp
mov
cmp
outsb
dec
mov
in
mov
outsl
jecxz
and
sbb
insb
push
dec
test
or
mov
add
mov
or
repz
subb
inc
leave
push
xchg
xor
imul
inc
jge
sbb
call
rolb
jno
cmp
or
cmc
subb
enter
mov
es
test
or
lods
mov
das
orl
out
sbb
andb
add
fisubs
fwait
cmc
scas
pop
sub
mov
jl
stos
pop
mov
fiaddl
inc
scas
mov
jp
jmp
out
out
loope
outsl
movb
fists
cltd
ss
dec
jmp
xchg
movsl
in
cmpsl
call
fmull
mov
into
cli
push
test
fisubs
loop
sbb
xchg
jnp
lret
mov
addr16
mov
push
pop
fcoml
cmp
push
fildll
fsub
pop
sarb
fnsave
lea
enter
mov
and
pushl
rol
mov
mov
inc
and
mov
int
insl
mov
mov
jne
mov
mov
out
pop
jne
daa
test
dec
shll
addr16
movl
cmpl
not
mov
mov
movl
jmp
movl
mov
jg
pushl
pushl
call
add
orl
sub
adc
movzwl
add
mov
mov
sbb
movl
mov
mov
mov
mov
add
adc
or
mov
or
mov
or
mov
or
mov
or
or
cmp
jne
cmp
je
movl
movl
mov
mov
xor
xor
and
and
mov
mov
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
add
mov
adc
mov
add
adc
xor
xor
add
mov
adc
mov
cmp
jne
cmp
je
movl
movl
movl
push
movl
mov
mov
push
push
push
call
mov
mov
push
jmp
in
mov
sbb
sub
jle
cld
xor
xor
adc
test
pushf
sbb
in
dec
push
fs
xor
mov
fidivl
adc
add
cmpsb
outsb
nop
dec
cltd
push
xchg
xchg
jb
shrl
lock
inc
xchg
mov
sbb
fldz
insl
hlt
mov
push
fs
je
out
aaa
rdmsr
push
mov
daa
push
comiss
ja
call
sub
or
fld
jns
mov
adc
in
add
cmp
sbb
mov
cltd
sbbl
mov
daa
call
cli
pop
lret
cwtl
jmp
sbb
cmc
ficomps
rcrl
push
pop
sti
popf
jp
dec
and
int
sti
enter
scas
adc
fwait
mov
std
push
xchg
in
jle
push
add
sar
imul
pop
push
jns
adc
movl
push
adc
faddl
rcrb
outsl
divl
add
sbb
popf
ja
adc
js
and
nop
jle
loope
shl
sub
add
xor
cli
mov
div
sahf
push
insl
jmp
cmp
das
inc
insl
in
inc
jmp
sarb
and
sbb
mov
mov
into
push
jnp
jo
repz
lcall
pop
aaa
or
dec
adc
das
push
rolb
movsb
mov
icebp
push
push
xchg
js
and
pop
mov
pop
cli
mov
or
sti
in
xor
notl
sbb
mov
hlt
insb
fnstsw
sbb
shrb
push
xor
loop
jge
push
push
xchg
mov
cld
and
jge
push
push
aad
adc
sub
loope
scas
push
sbb
push
xchg
outsl
test
lret
mov
add
rclb
inc
sbb
push
rclb
cmp
inc
dec
iret
push
and
ret
pusha
aam
push
fcomps
cs
in
sub
adc
mov
outsb
mov
popa
and
push
lcall
xor
dec
out
pop
int3
mov
int
pop
push
je
pop
mov
cs
std
add
movsl
pop
and
ficoms
push
mov
sub
inc
mov
repz
cmp
mov
imul
mov
xor
in
jnp
inc
or
push
xor
xchg
xchg
sub
sar
mov
cmp
repnz
mov
test
dec
stos
pop
aam
jecxz
cmp
repz
xchg
cltd
mov
cmpsl
mov
movsb
ficoml
adc
je
lds
repz
sbb
shlb
xor
jns
data16
dec
jbe
or
sbb
and
ret
mov
aam
push
int
or
call
cmc
xor
sub
movsb
in
mov
push
push
cmp
pusha
add
xor
mov
stc
sarb
test
sbb
mov
mov
xchg
cmp
lds
imull
test
pop
stos
cmpsl
out
xor
ja
add
push
push
rolb
inc
sbb
add
inc
or
outsb
pop
adc
imul
or
add
xchg
shrl
adc
jle
nop
mov
or
cmp
add
test
daa
push
inc
js
mov
imul
mov
pop
movl
lea
sub
mov
clc
sub
ret
and
push
and
and
push
push
call
xor
xor
mov
mov
mov
cmp
jne
mov
jmp
enter
pop
xor
push
push
in
mov
xor
adc
mov
add
push
out
ja
add
fildll
or
icebp
mov
out
sar
test
imul
and
rolb
cmpsl
sbb
xchg
ljmp
inc
pop
shll
fmull
dec
sub
inc
xchg
push
cmp
das
cmp
rcl
cmp
xchg
xor
pushl
mov
inc
jo
push
sti
imul
mov
adc
int
xchg
cmp
leave
cmc
lock
insb
mov
sbb
adc
insl
dec
add
mov
das
sbb
pop
and
aas
fstpt
mov
xor
subl
and
cmp
sub
bound
movsb
pop
enter
aam
ds
and
sub
dec
jp
mov
jle
aad
xchg
dec
fsubs
sbb
aad
xchg
pop
jnp
push
inc
subb
push
push
jmp
cmp
cld
insb
jo
jbe
pop
test
inc
mov
xchg
sarb
adc
sahf
and
iret
mov
imul
mov
mov
cld
lea
out
movsb
mov
int
or
mov
sub
fldcw
or
imul
pop
pop
sub
mov
repz
imul
sub
xor
pop
jl
xchg
xor
lea
push
arpl
pop
xchg
sub
shl
sub
pop
mov
dec
inc
or
pop
jbe
xchg
in
add
push
flds
movsb
xor
push
mov
cmovbe
mov
jnp
leave
enter
roll
jge
add
xor
aaa
in
ss
pop
pushf
fistpl
push
repnz
dec
out
mov
inc
xor
add
inc
and
jne
mov
lret
imul
push
pop
jmp
mov
imul
test
or
jae
ja
int
inc
scas
ficoms
dec
inc
dec
cmp
xchg
jg
test
or
jl
mov
in
sarl
xchg
test
mov
and
out
dec
fs
cs
sub
jge
mov
ficoml
out
add
int
mov
loopne
jb
push
imul
sub
imul
jg
sub
bound
pushf
test
cmp
sub
jbe
jmp
push
and
ret
adc
out
pop
and
dec
jno
add
inc
inc
adc
pusha
xor
and
push
dec
cltd
jno
jle
add
push
push
lea
mov
incl
inc
jae
mov
sahf
jl
imul
dec
cmp
movsb
in
mov
andb
push
xor
sub
imul
stc
inc
jnp
shrl
ja
mov
addr16
test
mov
sbb
push
jp
in
les
lret
jnp
test
scas
jle
pop
movsb
push
xchg
mov
pushf
lds
pop
jbe
push
lcall
sbb
into
mov
mov
xchg
sub
test
je
mov
fsubs
sahf
mov
pop
test
je
gs
push
rcr
xor
out
mov
repz
mov
add
pop
js
dec
xor
idivl
aad
pop
add
bnd
jne
mov
inc
dec
and
pushf
xchg
fwait
mov
out
sbb
jle
fsubrs
leave
cmp
jae
mul
ret
xchg
xor
daa
shrl
mov
add
mov
mov
mov
shrd
shl
mov
mov
shr
xor
mov
xor
or
mov
mov
mov
shrd
jmp
pushl
and
push
mov
gs
adc
xor
adc
mov
jns
pop
xchg
subl
cmc
xor
rolb
int3
sub
jb
pusha
or
add
hlt
iret
insl
in
or
inc
mov
movsb
cmp
mov
pop
cltd
add
push
mov
repz
sbb
or
and
sbb
mov
push
pop
pop
fwait
std
mov
bound
pop
sahf
push
push
scas
push
call
sbb
mov
mov
popf
pop
addr16
inc
push
das
mov
mov
jno
in
in
sub
fimuls
sub
fdivrl
sbb
sbb
jo
mov
adc
jb
sahf
push
jae
and
xchg
mov
mov
jp
xor
scas
dec
les
repnz
mov
pop
xlat
shl
pop
orb
rorl
lahf
mov
aaa
std
sti
sub
xchg
gs
pop
and
xchg
out
or
dec
jl
xor
xchg
mov
popf
lea
jbe
mov
cmp
movsl
xchg
pusha
add
aam
adc
push
subl
lds
add
jo
or
fld
dec
xchg
or
pop
pop
sbbb
adc
int3
pushf
jnp
lret
movsb
pop
add
cmpsb
dec
cmp
jne
rorb
scas
inc
jnp
push
pop
add
iret
sbb
int3
cmp
push
insb
push
sbb
adc
fs
repz
mov
int3
or
pop
enter
mov
orl
pop
pop
movsb
dec
and
in
ret
hlt
out
arpl
pop
push
leave
leave
dec
sub
call
mov
mov
pop
dec
add
ror
repnz
push
jnp
dec
pop
jo
int3
adc
jp
mov
idivb
pop
and
out
or
fs
das
push
sbb
int
lds
in
xchg
pop
push
out
clc
pop
mov
aas
jo
and
xchg
loop
orb
sbbb
movsb
int
das
mov
imul
xlat
repz
add
mov
int3
mov
xor
pop
cli
and
cmc
jp
pusha
sub
insb
mov
es
add
pop
mov
jo
mov
jmp
imul
dec
arpl
jae
aaa
mov
sbb
sub
test
outsl
cmp
add
bound
aaa
iret
out
or
adc
mov
and
xchg
inc
movsb
and
stos
lahf
mov
pop
cwtl
into
nop
cmp
movsl
leave
sbb
push
jl
sub
jmp
xchg
fwait
xchg
movb
sbb
outsb
rcrl
stos
ja
out
pop
scas
pop
push
ret
sbb
mov
mov
or
push
pop
std
pop
mov
pop
adc
stos
mov
fdivrl
ficoms
cmp
jge
call
adc
or
cmp
xchg
cmp
and
or
jg
sub
xchg
cmp
icebp
sub
rorb
cmp
lods
les
mov
sub
sub
dec
inc
insb
das
shl
sub
rorb
dec
or
scas
mov
and
test
pop
sbb
ret
sub
sub
mov
sub
pusha
dec
pop
inc
sti
shlb
imul
fiaddl
enter
xchg
sahf
sarl
xor
sub
adc
sub
adc
stos
je
mov
hlt
sbb
push
call
shll
or
mov
movb
movb
movzbl
shl
mov
xor
add
push
add
mov
movb
pop
mov
movb
mov
movzbl
cltd
jmp
adcl
dec
in
enter
stos
insb
jnp
adc
xor
adc
fidivl
mov
pop
outsb
mov
pop
adc
push
jmp
shlb
push
mov
cmp
dec
in
jb
inc
xchg
mov
mov
into
pop
jle
jne
mov
andl
dec
stc
cltd
pop
mov
jmp
insl
dec
fwait
lcall
leave
inc
fnstenv
xchg
int3
popf
lahf
sti
int
jge
clc
pop
cmp
aas
mov
fldenv
add
dec
cld
lds
cld
lods
sbb
mov
ja
js
inc
js
add
add
gs
inc
pop
mov
dec
jg
and
mov
xchg
sahf
add
mov
cmp
popa
cmpsb
test
mov
push
mov
push
mov
popf
lret
xchg
or
mov
repnz
loopne
push
pop
imul
cmp
sbb
adc
push
inc
sarb
clc
mov
rorl
js
pop
or
jns
mov
outsl
data16
jecxz
jmp
mov
out
mov
mov
subb
stos
xor
int3
test
scas
xchg
xchg
enter
xchg
hlt
aaa
mov
push
pop
mov
sub
iret
and
mov
mov
adc
push
mov
sbbl
cmp
pop
popa
mov
in
pusha
xchg
popf
mov
jmp
cmp
cmpsb
lcall
pop
pop
jecxz
lock
jge
or
les
int
xchg
or
jno
or
pusha
lcall
aam
out
jns
push
ret
push
aaa
mov
ja
pop
lock
adc
push
das
js
or
mov
and
out
inc
enter
add
addb
roll
mov
in
fnstsw
cs
and
push
mov
push
adcb
outsb
cmc
fnstenv
jne
scas
adc
add
lods
jg
dec
push
mov
and
test
inc
mov
ja
mov
adc
push
js
hlt
outsl
pushl
xor
sbb
mov
jb
jge
aam
cmp
clc
fcoms
pop
mov
in
add
movsb
lret
adc
popf
ljmp
nop
mov
fldenv
out
and
arpl
enter
cmp
cmp
pop
das
and
dec
jo
pop
in
out
ffree
mov
mov
outsl
mov
push
sbb
outsb
nop
lods
pop
lret
sub
sarl
jmp
adcl
fwait
ror
xlat
arpl
and
test
mov
inc
testl
adc
adc
imul
hlt
es
popf
mov
push
jns
inc
cmp
pop
rorb
jns
std
insl
xchg
xchg
movsl
xchg
ficoms
movsl
mov
xchg
sbb
scas
imul
insl
sbb
imul
fsts
mov
xor
inc
cwtl
aad
nop
ficomps
arpl
xlat
in
xchg
adcl
and
inc
inc
pop
xor
fsub
mov
pop
aas
xchg
and
shrb
xchg
pop
cmp
call
ficoms
repnz
lcall
aaa
pop
movsl
insl
add
into
stc
or
fcoml
cmp
sbb
out
das
fstpl
data16
ficompl
jg
into
test
sbb
lds
pop
or
div
sub
sbb
scas
xor
popf
jns
mov
and
xlat
pushf
sub
aas
push
jno
dec
idiv
mov
add
mov
or
mov
add
cmp
jae
mov
jmp
js
jb
sub
cmp
mov
mov
xor
adc
adc
adc
mov
pop
popa
inc
mov
and
pop
loope
cli
loopne
jg
mov
push
mov
pop
fwait
dec
test
adc
xchg
sti
push
dec
mov
push
and
jmp
and
test
stc
jns
jo
mov
cmp
movsb
ret
jp
sbb
js
hlt
cmp
dec
adc
bound
loop
js
mov
jb
in
repz
test
jp
cmpsl
cmp
fisubrs
xchg
mov
stos
dec
mov
xchg
popa
sbbl
orl
stc
loope
inc
dec
cmp
mov
stos
sbb
fcompl
and
xchg
sub
cmp
jle
push
cmp
fwait
loopne
sub
cmpsl
cltd
push
xor
cmp
lret
lret
lahf
inc
pop
adcb
jle
and
push
insb
repnz
outsb
mov
xchg
adc
pop
call
jnp
test
sarl
lret
in
enter
mov
cmp
inc
or
les
pushl
dec
push
xor
cs
aas
loop
inc
es
cmp
insb
dec
dec
sbb
dec
or
aaa
cwtl
add
jmp
sahf
mov
dec
insl
popa
mov
mov
mov
cmp
lea
xor
std
mov
xchg
jae
adc
mov
in
pop
mov
stos
ja
add
jge
push
jmp
int
mov
sub
leave
insb
add
jg
setg
push
fimull
jb
xchg
fucomp
mov
hlt
sti
xchg
add
sti
out
aad
insl
ret
xchg
aas
inc
push
and
lcallw
push
leave
pop
and
adc
movsl
sbb
inc
push
decb
pop
pop
xchg
ljmp
xchg
push
addr16
mov
test
int
or
mov
daa
cmpsl
pop
outsb
mov
mov
jae
lcall
dec
sbb
jmp
cmp
dec
add
jg
jns
daa
insl
xor
out
in
sbbl
adc
lock
push
adc
dec
mov
pop
inc
sbb
rcll
cmc
mov
aas
mov
mov
mov
mov
shrb
adc
add
loopne
xor
and
jle
jecxz
data16
loope
push
loop
jne
or
xchg
adc
jae
or
push
sbb
divl
dec
lret
pop
cmpl
dec
push
rcrb
push
movsb
das
jns
and
shlb
dec
sbb
sub
or
arpl
mov
sbb
icebp
pop
cmp
push
inc
std
push
mov
jecxz
push
mov
or
fistl
dec
adc
dec
sbb
cmp
mov
repz
sar
mov
sub
mov
jmp
adc
xchg
fwait
push
lock
imul
xchg
jmp
push
cmc
cmpsl
sbb
stc
mov
sub
testb
mov
sbb
xor
mov
nop
mov
outsb
rol
adc
sahf
mov
mov
dec
inc
mov
xor
sti
mov
push
gs
fstl
mov
xor
add
sub
jns
sub
dec
movsb
jle
mov
xchg
jb
mov
cli
inc
cmp
sub
pop
sub
sub
pop
adc
mov
in
jns
mov
in
imul
clc
xchg
call
shl
jno
out
and
or
call
repz
les
fldt
cmp
dec
in
ret
or
rolb
xor
jmp
mov
popa
lcall
inc
adc
sub
adc
adc
adc
mov
sbb
xor
lahf
nopl
nop
mov
push
cmp
pop
pop
sub
out
pop
or
or
dec
push
xor
push
data16
loop
inc
push
ret
or
js
mov
dec
mov
mov
out
pop
stc
cmp
rolb
stos
inc
push
out
hlt
sub
adc
sbb
lret
pop
adc
mov
popa
pand
and
addr16
stos
clc
out
pop
mov
pop
lret
adc
ljmp
ljmp
cmc
or
arpl
iret
mov
loope
xchg
cmpsl
push
xlat
adc
popa
add
push
mov
cmp
jp
hlt
imul
fwait
jecxz
scas
jmp
test
lret
xor
es
int
js
stc
adc
inc
adc
nop
outsl
mov
lods
xor
nop
mov
pop
fcomps
jp
orb
data16
stos
cmp
pop
lcall
push
fsub
int3
movl
adc
inc
addr16
push
cld
xlat
xchg
add
add
out
out
sbb
mov
int
pushf
pop
das
xor
mov
pop
xor
mov
mov
mov
mov
fcoml
adc
lock
pop
in
adc
fadds
clc
xor
or
adc
sub
movsb
mov
stos
mov
fcmove
jb
cmp
shlb
jp
fs
dec
sti
and
add
lods
mov
adc
stc
lods
inc
xor
test
dec
dec
jns
test
fsubl
test
fnstcw
cld
push
cmp
push
out
push
addr16
loope
sbb
repnz
jle
inc
fwait
mov
xor
icebp
ja
mov
and
inc
mov
xchg
sub
ljmp
or
into
aam
loope
mov
mov
cmp
stos
pop
or
push
lret
jne
xor
movsl
jle
subb
mov
outsl
push
mov
xchg
dec
lock
stos
data16
mov
pushf
es
pop
xor
rol
dec
jns
xchg
out
inc
dec
add
push
sub
aad
add
nop
cwtl
pop
pop
sti
std
std
pop
dec
insb
insl
xor
in
mov
xor
jl
pop
adc
cmp
add
cli
push
pusha
pop
cmp
loop
jmp
out
push
sub
cwtl
loop
inc
repnz
dec
cmc
and
xor
jns
gs
inc
outsb
jg
cs
mov
inc
lds
cld
jg
mov
stos
ret
aaa
and
inc
cld
add
scas
add
ret
xor
sub
mov
or
push
or
add
repnz
jg
dec
mov
add
cmp
sbb
mov
sbb
mov
inc
loopne
sarl
lahf
aad
sub
std
xor
movsb
in
frstor
int
dec
inc
inc
push
mov
mov
lods
push
jno
les
jbe
lea
or
popf
sbb
test
xor
mov
in
mov
cmp
aad
mov
stc
mov
dec
or
lret
dec
inc
aad
dec
pop
add
and
pop
loope
insl
add
in
jb
cmpxchg
out
stc
dec
loop
jno
punpckldq
inc
mov
push
push
test
jl
fwait
nop
xor
xlat
aas
push
popa
int3
hlt
adc
fistpl
fldcw
cmpb
mov
pusha
popf
jno
aas
subb
ret
dec
call
push
in
xor
shl
or
mov
pop
leave
ret
push
mov
sub
push
push
push
movl
jmp
test
sbbl
pop
sbb
jle
bound
mov
fmull
adc
ja
adc
scas
test
xor
dec
bound
ds
loope
cmpsb
mov
xor
adc
ljmp
push
mov
pop
mov
insl
popf
pushf
insb
inc
mov
inc
xchg
lds
jmp
mov
inc
mov
jg
nop
jg
imul
lock
inc
mov
dec
adc
push
dec
xchg
dec
xchg
sbb
mov
sub
rol
test
movb
in
jb
ds
leave
mov
flds
fsts
outsl
or
mov
imul
jecxz
fwait
mov
pop
test
pop
fldt
dec
mov
jbe
test
cmpsb
mov
or
push
int3
cmp
mov
mov
pop
push
imul
adc
sub
cmpsl
sub
inc
inc
inc
rorl
pop
cmovp
pop
addr16
out
sub
dec
pop
mov
mov
js
shll
bound
fdiv
icebp
cltd
scas
push
insb
add
and
add
test
pop
sbb
mov
dec
lret
div
dec
arpl
jns
stc
mov
sub
sbb
clc
ret
mov
bound
jle
jo
jl
imul
call
sub
inc
ds
xchg
push
sub
and
hlt
jle
out
mov
xchg
dec
scas
jmp
inc
pop
bound
imul
jno
in
pop
in
daa
fnsave
inc
jl
fisttps
cmp
cli
sub
inc
xchg
jne
lds
into
loop
mov
pop
jnp
cli
fwait
sbb
ret
pushf
cltd
push
inc
out
and
jge
fiadds
out
leave
out
inc
mov
or
mov
push
lcall
inc
call
aaa
mov
jne
mov
mov
or
xchg
out
cwtl
lret
pop
jno
lret
or
fcmovu
movl
movl
movl
movl
movl
movl
movl
xor
inc
mov
movl
mov
mov
sub
add
add
imul
add
xor
jmp
xchg
add
cmp
scas
insb
xchg
jbe
xchg
sbb
adc
movlps
or
sub
dec
and
mov
mov
cli
push
push
mov
inc
mov
pop
lahf
dec
sbb
out
jns,pt
jecxz
add
mov
push
push
dec
push
pop
imul
inc
cmp
lock
shrl
popa
lcall
cmp
movb
arpl
jno
mov
sar
lods
aam
incl
fnstenv
call
cmp
xor
in
and
add
jno
cmp
clc
inc
jl
or
test
adc
dec
add
test
xlat
and
filds
cli
ss
addb
push
push
inc
dec
fidivs
xchg
loope
aas
pusha
dec
jno
pop
push
pop
mov
fisubl
leave
imul
xlat
outsb
cmpsl
shlb
add
sti
push
fdivrp
xchg
mov
xchg
repz
sbb
push
pop
push
dec
sbb
addr16
cmp
aaa
pop
sbb
ds
cmpsl
xchg
mov
lahf
out
lods
jg
shrl
push
mov
out
repz
test
pop
arpl
daa
stos
sbb
push
jp
jg
cld
repz
mov
clc
jge
lret
push
addr16
jl
cmp
pop
lods
movsb
xchg
jae
mov
sbb
aam
push
mov
cmp
insl
mov
ret
sub
or
mov
insb
gs
dec
stc
push
mov
push
sub
sub
cmp
stos
mov
xchg
insb
mov
out
mov
out
sbb
lea
fisubrl
lods
xlat
fs
push
mov
and
pusha
or
inc
jo
dec
shll
add
test
pop
sub
inc
out
loopne
test
insb
push
xchg
jge
mov
nop
xor
lret
inc
cld
push
xchg
pop
pop
test
mov
fldenv
inc
clc
cmp
add
movl
movl
movl
mov
jmp
outsl
or
or
popa
imul
nop
js
xchg
xchg
fmull
adc
fcom
jne
mov
lcall
lahf
pop
pop
mov
push
fdivrl
pop
cmp
jp
cwtl
test
inc
cmp
and
lods
sbb
fsubrs
xor
add
sbb
arpl
aad
xor
xchg
mov
pusha
dec
mov
pop
mov
xchg
mov
insl
jne
sbb
dec
lods
sub
xor
addr16
popf
mov
cmp
cmp
sub
mov
mov
fildl
ret
mov
xchg
inc
sti
mov
cmc
xor
xchg
icebp
cmp
cmpsb
mov
pushfw
xor
pop
push
ficompl
inc
icebp
jns
repnz
mov
stos
inc
repz
mov
sub
cli
es
push
cmc
sbb
mov
insl
jno
sbb
inc
push
mov
mov
inc
or
dec
push
or
xorb
fisubrs
lods
adc
lcall
popa
xchg
and
in
fidivrl
lock
xlat
cmp
or
push
adc
pop
xor
ret
cmp
leave
push
enter
sub
frstpm(287
dec
call
mov
mov
cmp
jecxz
js
in
mov
mov
dec
add
pushf
fistps
cmp
imul
adc
andl
test
xchg
lahf
adc
fs
leave
test
inc
gs
aam
mov
repz
or
out
ljmp
imul
xchg
sbb
cs
add
std
clc
insl
push
mov
xchg
xchg
ret
push
addr16
dec
cwtl
xor
push
push
jp
daa
dec
xchg
add
jge
xchg
daa
and
inc
pop
push
test
test
dec
aad
inc
xchg
loope
iret
movsb
xchg
enter
inc
ljmp
mov
es
repz
pusha
mov
cmp
cld
mov
jmp
pushf
sub
add
aad
pop
repz
add
mov
and
mov
sub
mov
mov
mov
add
or
sub
xor
sub
mov
mov
mov
mov
mov
and
xor
xor
div
lea
mov
add
mov
and
mov
imul
mov
sub
cmp
jbe
push
pop
mov
mov
movl
movl
movl
mov
movl
jmp
and
cmp
aaa
sbb
bound
sarb
pop
pusha
js
adc
adc
movlps
jb
fstp
sub
into
pop
push
aam
xchg
add
sahf
push
popa
mov
popa
sbb
int
jno
adc
sub
cmp
jne
popf
hlt
imul
imul
clc
add
add
adc
lahf
add
lret
adc
outsb
xchg
shll
add
imul
rcll
jae
jnp
xchg
and
cli
movsl
ss
add
stos
inc
mov
mov
pop
iret
push
mov
data16
aas
dec
daa
das
push
stc
mov
mov
cwtl
pop
mov
sbbl
icebp
adc
pop
push
pop
pop
push
iret
mov
popa
adc
scas
stos
pop
xchg
fsubrl
or
dec
aad
inc
mov
fwait
sbb
scas
xor
push
push
cli
fistl
xor
into
add
mov
popa
pop
ret
js
pop
push
add
pop
add
or
mov
ror
push
sbb
push
push
and
dec
lret
adc
pop
mov
adc
aaa
mov
imul
mov
xorl
cwtl
dec
cld
push
mov
lret
sub
out
adc
xor
pop
adc
in
je
insb
shl
fisubs
test
movsl
jb
push
jp
mov
or
add
dec
popa
push
fdivp
mov
jnp
mov
mov
xchg
shll
sbb
mov
scas
mov
fmulp
mov
xorb
inc
dec
scas
push
and
mov
movzbl
cld
xlat
push
test
lcall
outsb
xor
hlt
mov
repnz
loop
movsb
loope
jg
jo
push
xchg
jle
or
jo
mov
pop
lret
imul
xor
or
mov
pop
outsb
or
movsl
ret
stos
movsb
fsubr
xchg
popf
add
int
lea
dec
cmpsb
test
xor
repz
adc
push
push
movl
xor
movl
mov
mov
sub
div
mov
xor
mov
div
jmp
mov
xor
jns
fldln2
jle
dec
lods
insb
in
adc
adc
movlps
or
in
fs
or
mov
jl
pop
shrb
inc
pop
mov
popf
testl
in
movsb
xchg
mov
push
pop
cmpsb
bound
jmp
sbbb
mov
int3
and
addr16
aaa
xor
pop
or
mov
push
into
jo
lods
int
sbb
out
add
in
jo
xor
lret
jbe
jno
inc
adc
mov
cmp
add
xor
inc
mov
jne
ret
push
faddp
rclb
inc
test
lods
pushf
fidivl
pop
jb
scas
lods
mov
sub
je
hlt
xlat
and
lds
lds
lcall
ret
jns
fldt
stc
jae
loope
push
aam
test
jmp
out
push
cs
push
insl
mov
sub
xor
pop
add
lock
mov
data16
jo
cmp
push
jg
push
inc
mov
sbb
lret
mov
sbb
push
jne
arpl
das
rcll
adc
in
push
pop
sbb
aam
cmp
mov
push
mov
cwtl
mov
or
add
enter
jl
shl
cmpsl
push
sub
mov
pop
jmp
insl
pop
xchg
mull
sbb
pop
movsb
rol
ret
imul
mov
pop
adcb
out
sub
cmpsb
adc
adc
dec
sub
ret
dec
ret
cmp
mov
loopne
ret
ret
and
jbe
das
dec
mov
inc
or
sub
fucomi
lds
inc
mov
inc
mov
xchg
push
movsb
mov
addr16
and
cmpsl
not
testb
test
aaa
xchg
lods
cmp
push
adc
mov
ljmp
rorb
loopne
filds
dec
sarl
pop
ret
decl
lret
adc
inc
les
mov
jmp
roll
mov
cs
dec
jae
mov
mov
adc
fmull
adc
cmp
fbld
daa
call
and
fs
mov
imul
mov
adc
scas
xchg
inc
daa
imul
test
leave
call
div
jecxz
cld
mov
mov
sub
mov
jge
rorl
neg
sbb
mov
inc
sub
lock
cmp
in
cmp
cltd
mov
jp
imul
pop
cmpsl
and
adc
mov
xchg
faddp
pushf
mov
xor
adc
aad
into
cmpsl
lahf
sbb
cld
sub
sbb
dec
xor
cmpsl
cli
sub
lahf
outsl
scas
imul
jl
stc
out
scas
je
subl
pop
outsl
sbb
adc
outsb
mov
mov
xor
out
lcall
cmpsb
inc
ljmp
dec
insl
fadds
dec
frstor
test
pop
mov
push
adc
and
sub
sbb
repz
pop
lods
scas
pop
or
or
out
cmp
fisttpl
push
dec
sbb
add
pop
ss
mov
lret
xor
out
mov
push
aaa
push
or
and
iret
mov
push
push
shrb
sub
or
subl
repnz
outsb
cmc
insb
sub
pop
push
pop
pushf
or
scas
and
movsl
cmp
sbb
clc
mov
mov
lret
pop
xor
pop
pop
lcall
sub
adc
lock
pusha
int
cmpsb
cmp
jno
adc
adc
cmp
lcall
push
nop
jns
push
adc
adc
push
jmp
pop
mov
pop
repnz
adc
push
push
bound
add
sbb
jmp
sub
add
and
add
xchg
scas
add
fidivs
ret
das
fstl
push
push
mov
or
adc
shl
icebp
xor
mov
mov
imul
mov
add
div
mov
mov
sub
sub
xor
div
mov
add
cmp
jmp
mov
aaa
cmpsl
sbb
test
mov
adc
fmull
adc
lahf
mov
push
psubb
jmp
inc
push
das
inc
cli
adc
cmp
xchg
es
test
popf
inc
mov
mov
mov
mov
sub
cmp
mulb
mov
ret
mov
fsubs
mov
mov
mov
cli
jo
pop
cmpsb
or
xor
lods
call
inc
mov
scas
push
mov
xor
out
push
mov
inc
mov
inc
stos
jnp
sbb
movsl
std
xchg
pop
lcall
sahf
sahf
add
in
jo
ret
lods
roll
cmpsb
and
mov
addr16
orb
jbe
loopne
jmp
sub
test
cmp
int3
inc
test
mov
jbe
add
out
push
das
mov
pop
xor
add
xchg
pop
xchg
and
xorl
sub
xor
ljmp
jg
mov
and
int
xor
lcall
ss
sub
rcll
and
nop
pop
aam
outsl
movsl
stos
dec
and
add
mov
xchg
sub
sbb
and
in
and
mov
jmp
sbb
in
test
ljmp
lea
outsb
sub
popl
scas
pop
push
movsb
sahf
stos
cmpb
ss
xchg
divl
orl
mov
jns
sub
and
outsb
in
mov
insl
ret
adc
jns
jmp
adc
add
cmp
push
lret
mov
inc
mov
mov
push
xor
stos
clc
je
add
in
or
loopne
add
adc
shrl
shrl
sub
mov
cmp
lds
adc
data16
xlat
enter
xorl
in
sub
loopne
cmp
add
inc
fdivrl
cmp
add
inc
in
int
add
xor
movl
movl
mov
push
pop
div
mov
mov
mov
sub
mov
mov
imul
mov
xor
sub
add
and
mov
sub
mov
sub
mov
sub
mov
mov
mov
mov
xor
add
xor
and
lea
mov
mov
add
div
mov
mov
sub
xor
jmp
popa
pop
fimull
dec
sbb
dec
neg
mov
inc
push
adc
fmull
adc
sbb
lea
and
adc
push
and
jp
pop
pop
sub
ret
lret
adc
adc
leave
imul
lret
jae
add
sub
pop
ret
pop
fstl
popa
fisttpl
scas
movsl
loopne,pt
pop
push
bound
adc
jbe
sub
jecxz
arpl
jb
int3
sub
les
cmp
jo
fistps
lds
mov
dec
cmp
lret
xchg
int3
stc
js
mov
inc
test
int3
cmpsb
lcall
cmp
dec
jb
add
mov
cmpsl
or
loope
out
jg
into
xchg
sub
test
scas
loope
pop
jmp
insb
scas
mov
dec
lret
les
push
mov
scas
sarl
cmp
fstpt
xchg
rcr
aas
inc
fidivl
mov
js
push
pop
or
sbb
pushf
arpl
stos
subl
outsl
lods
popl
shl
inc
lock
push
jae
ljmp
xchg
cmpsb
notl
mov
dec
push
xor
cmp
lcall
lcall
mov
les
pop
or
enter
mov
xchg
and
inc
or
sbb
mov
ljmp
jp
xchg
xchg
aad
push
xchg
sbb
and
add
mov
ficoms
in
mov
iret
loopne
lret
inc
test
push
mov
jmp
sub
pop
lcall
add
scas
pop
add
out
mov
daa
mov
fstpl
xor
sub
outsb
xor
push
mov
and
dec
add
xchg
lea
icebp
stos
out
push
add
xor
jl
push
dec
xchg
sub
or
xchg
in
stc
inc
incb
lds
repz
test
dec
cmp
or
sub
cmp
jb
jmp
add
cmpsb
pop
sahf
aaa
xor
mov
mov
push
add
adc
movlps
ljmp
pop
outsl
adc
jmp
jno
mov
pop
sub
jle
lret
lds
jl
cwtl
aaa
stos
adc
cmp
xchg
loope
idiv
cli
xchg
outsb
jg
pop
ja
repz
sub
repz
jmp
sbb
mov
mov
outsb
call
pop
bound
repnz
mov
and
cmp
imul
mov
jecxz
enter
xor
xchg
sub
sbb
dec
xor
nop
add
inc
loope
xchg
pushf
cmp
xor
dec
xchg
mov
out
mov
mov
or
push
insl
inc
add
cmp
add
mov
out
and
push
push
cmp
cmpsb
stos
jo
mov
or
mov
ds
rclb
or
jo
out
test
push
or
cmp
adc
arpl
or
sbb
repz
cmp
mov
jo
dec
cmpsb
xor
mov
les
imul
sbb
cmp
cmp
mov
pop
mov
sahf
adc
xchg
xor
loopne
jg
add
add
cmp
test
jne
in
push
or
repnz
push
dec
ljmp
repz
dec
into
hlt
repnz
xchg
ret
adc
lods
insl
mov
fwait
nop
fistps
divl
adc
push
aad
cmp
aaa
shll
cltd
sbb
pop
cmp
enter
loop
sbb
jge
mov
mov
in
iret
or
rclb
push
mov
insl
or
rorb
pop
jge
test
mov
lock
stos
sub
dec
jae
jmp
addr16
sub
push
sbb
loopne
sub
add
and
jmp
dec
inc
insl
fdiv
iret
adc
mov
into
lods
iret
leave
repnz
ret
sub
inc
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
add
and
xor
jmp
ja
fistps
pop
ja
outsl
popa
ss
enter
aad
adc
fmull
adc
pop
notl
cltd
adc
sub
int
sub
or
or
mov
xchg
cltd
test
call
xor
mov
mov
pop
sub
aaa
xchg
cmp
push
lods
and
xor
addb
addr16
pop
int
mov
or
xor
sbb
sub
test
pop
mov
push
stc
push
mov
fnsetpm(287
adc
mov
mov
xchg
jecxz
push
add
push
push
lret
jb
jge
rcpps
xlat
test
adc
mov
dec
xor
popf
pop
or
adc
ljmp
adc
les
jnp
or
push
js
test
pop
idivl
mov
arpl
sbbb
push
fcomip
jge
jl
data16
xchg
in
mov
sarl
inc
stos
fldt
push
jb
mov
jecxz
adc
mov
rclb
data16
dec
mull
push
xor
or
jnp
divl
das
jg
jg
outsl
aam
push
fadds
int3
popf
jnp
inc
or
addr16
mov
push
cmp
loopne
jne
decb
xor
pop
imul
cld
mov
sbb
loope
mov
add
fidivl
add
faddl
scas
inc
ja
lret
push
and
subb
push
xchg
lret
add
jg
pusha
rolb
fisubrs
daa
mov
cwtl
jecxz
and
jge
inc
jmp
enter
sahf
lods
or
mov
mov
xchg
dec
push
dec
xlat
cs
filds
lds
cmp
adc
inc
sti
adc
rcrb
xlat
testl
and
ret
mov
adc
pop
adcl
push
inc
popf
xchg
mov
aad
inc
sbb
mov
test
mov
out
pop
notb
or
cmp
mov
sub
movl
movl
mov
movl
movl
mov
mov
imul
xor
or
xor
mov
sub
mov
mov
jmp
lock
clc
test
inc
imul
stos
sub
adc
fmull
adc
nop
orb
xchg
call
and
fmul
mov
and
add
imul
ljmp
cmp
and
dec
push
dec
das
xlat
mov
sti
xor
es
insb
insb
push
xchg
sbb
mov
fldcw
jmp
mov
and
inc
mov
cwtl
push
xchg
mov
es
orb
jp
cmc
imul
cmp
push
mov
inc
sbb
stc
xorl
inc
popf
cmc
mov
inc
scas
lahf
sub
sbb
imul
adc
iret
int3
jl
push
fsin
ror
int3
outsb
mov
shlb
test
test
sub
test
cli
aad
int3
fwait
inc
push
ss
dec
ds
inc
cmpb
mov
jno
mov
cltd
jb
pushf
int3
mov
inc
stos
add
pop
hlt
or
fildl
pop
push
pop
adc
and
sbb
hlt
jnp
xor
cmp
int
mov
aam
out
fmuls
dec
into
cmp
and
fildl
dec
xchg
pop
sbb
cld
sbb
pop
mov
fsubrl
inc
out
call
mov
cs
repnz
xlat
aaa
jno
inc
xor
scas
sbb
fs
mov
cwtl
stos
mov
aaa
scas
pusha
mov
sbb
test
or
mov
sbb
movsb
inc
aaa
fdivrs
jno
icebp
das
add
out
and
dec
jge
pop
jnp
aas
call
jne
leave
push
push
popf
xor
lahf
adc
pop
rclb
mov
mov
pop
js
push
cltd
addl
push
push
repnz
imul
mov
jae
sbb
shl
push
cmpsb
sub
dec
lahf
lods
loope
jmp
in
fdivrp
jmp
inc
sub
mov
loop
adc
in
adc
dec
pushf
and
mov
or
sub
xor
div
mov
mov
sub
mov
mov
mov
mov
mov
imul
mov
imul
or
mov
or
xor
lea
mov
and
jmp
mov
pop
mov
insb
lds
lods
notb
adc
movlps
mov
and
mov
jbe
les
inc
adcb
cld
dec
fisubl
insb
aad
imul
dec
xor
stos
jnp
mov
les
std
out
inc
cltd
mov
xchg
inc
pop
add
xchg
pop
cmpsb
adc
lret
pop
dec
pop
push
jge
popf
adc
into
push
mov
mov
xchg
mov
aas
stos
and
xor
lds
hlt
mov
mov
scas
lcall
push
fst
ljmp
xor
lock
xchg
fsubrs
lret
xor
cmp
xchg
je
sbb
mov
mov
xchg
imul
jl
ja
in
enter
dec
mov
mov
test
xor
push
rorb
jl
jp,pn
mov
mov
add
inc
jg
and
xlat
data16
pop
cltd
cli
js
inc
sub
inc
arpl
add
mov
imul
pop
mov
dec
shll
mov
lods
hlt
inc
dec
shlb
xorb
aaa
dec
xor
or
add
scas
and
rorl
stc
jnp
and
pop
shr
pop
in
add
mov
mov
or
nop
in
jmp
pushf
pop
xchg
mulb
cli
out
aad
cmp
mov
das
lret
jle
sti
pop
test
pop
rcl
sbb
ja
out
dec
inc
das
aam
xor
shr
rclb
mov
fldl
mov
std
js
ds
jae
mov
mov
in
push
pop
jge
xor
out
addb
loopne
lcall
mov
imul
cmp
imul
xchg
call
pop
mov
in
out
mov
mov
mov
xchg
cmp
jecxz
lcall
adc
or
in
jns
test
aad
inc
clc
xor
add
cmp
jne
pop
pop
pop
leave
ret
push
mov
sub
push
push
movl
movl
mov
mov
add
or
mov
lea
mov
movl
movl
mov
mov
and
xor
mov
imul
xor
lea
mov
movl
movl
mov
xor
push
pop
div
mov
xor
push
jmp
push
jb
adc
mov
xor
cmpsb
dec
mov
sub
adc
adc
pop
mov
aas
shlb
int3
xchg
push
push
mov
int
adc
repnz
push
ret
aaa
inc
fisubrs
inc
clc
or
stos
mov
pushf
jne
add
aaa
jl
jge
lds
outsb
pop
es
scas
das
jb
mov
dec
outsl
dec
push
jmp
pop
mov
cld
lret
pop
pop
into
xor
popa
or
dec
sbb
push
add
jle
loop
dec
mov
and
cld
mov
or
int3
rorb
xchg
mov
rorb
push
jnp
adc
test
inc
jno
popf
jmp
std
cmc
push
add
cli
stc
cmp
das
cmpsl
clc
sub
int3
mov
adc
jns
pop
xchg
leave
adc
lret
insb
mov
jl
lret
ja
xor
arpl
mov
leave
mov
int
movsb
sub
xor
jmp
xchg
xchg
popa
and
mov
movsl
mov
imul
ds
iret
xor
inc
inc
fnsave
mov
gs
ret
lret
xchg
lock
xor
jbe
inc
xchg
test
scas
std
mov
jmp
and
or
jecxz
push
pop
cwtl
jnp
sub
clc
sbb
sbb
mov
shll
push
pop
jp
mov
and
fdivr
xor
int3
xor
int3
test
inc
adc
xchg
mov
jmp
fstpl
push
test
xchg
and
in
cmpsl
popf
xor
cmpsl
out
insl
addr16
out
push
cmpsl
test
mov
icebp
outsb
stc
fists
data16
in
sub
inc
pop
loop
push
fdivrs
call
lds
add
mov
mov
pushf
adc
test
cmp
mov
shll
repz
imul
or
hlt
shll
insb
and
icebp
xchg
and
sbbl
push
fnstsw
inc
fs
sar
pop
jmp
clc
pop
call
mov
lea
cmp
ja
pop
mov
sbb
xorl
fdivrs
push
cld
repz
rclb
inc
pop
ret
lret
dec
adc
mov
or
dec
aad
repz
inc
inc
mov
in
int3
sub
adc
xor
scas
push
stos
dec
xor
dec
mov
xchg
jge
pusha
dec
push
scas
adc
push
add
cmc
add
push
rcll
jecxz
jbe
add
daa
out
shl
add
cwtl
inc
hlt
test
nop
jg
cmpb
stos
xchg
push
dec
int
push
mov
std
std
lods
add
sbb
mov
cmpsl
sub
dec
sub
cmpsb
and
or
mov
aaa
rorl
fldcw
add
and
push
cmp
iret
jl
das
fdivs
cmc
stos
sahf
testl
mov
mov
rcll
add
sarl
enter
movl
movl
movl
mov
mov
lea
mov
div
mov
lea
mov
movl
jmp
imul
in
push
pop
loop
xchg
js
test
jo
adc
mov
call
jle
repz
rorb
inc
test
aad
add
dec
cs
rcrb
pop
movsb
xlat
fwait
lret
or
push
add
loopnew
aaa
movsb
inc
test
repnz
hlt
push
xor
pop
mov
mov
mov
xor
sub
push
adc
lret
push
pop
sub
lcall
push
jp
fsubrs
pop
mov
cltd
not
pop
inc
js
adc
xchg
cmp
ja
mov
xor
push
cmp
adc
sub
mov
lods
cli
jg
cmp
mov
stos
stos
lret
mov
or
inc
mov
lea
jo
jae
nop
sub
cmc
xor
inc
pop
mov
adc
or
mov
xchg
and
mov
jl
cmc
icebp
xor
and
mov
ror
scas
mov
or
cmp
nop
mov
pop
mov
bound
cli
xchg
push
out
lret
mov
inc
insl
les
add
int
fstps
sub
adc
pop
adc
pop
loope
push
fcoml
dec
mov
loope
test
les
pop
adc
inc
add
jmp
sarb
mov
xlat
sbb
movsl
xchg
pop
cmpsl
xor
cmp
sarb
lahf
jg
and
jae
fisubrs
cwtl
out
adc
stc
pand
rcll
out
xchg
call
daa
jae
nop
push
pusha
cmp
xorl
pop
lcall
repz
or
call
and
fs
ss
shl
in
and
xor
cld
jae
addr16
mov
lea
mov
xlat
test
mov
fs
cmpsl
xchg
mov
sbbb
insl
in
call
xlat
or
arpl
dec
outsb
xchg
mov
sbb
les
xor
lds
fnstenv
jbe
popf
out
negb
in
push
jno
jge
jge
fdivl
jb
scas
lock
mov
or
pop
mov
lret
push
ljmp
xchg
arpl
xchg
pop
jae
add
sti
xor
icebp
cwtl
add
mov
aad
mov
xchg
sub
cmpsb
les
pop
cwtl
pop
mov
test
lods
aaa
dec
popa
out
movsb
outsl
xor
adc
mov
aam
out
int
leave
pushf
fdivrl
into
or
popf
data16
push
sub
adc
xor
push
test
in
xor
scas
loope
out
jne
dec
imul
mov
mov
add
repnz
mov
sti
mov
pop
in
sahf
dec
mov
xor
hlt
adcl
rcll
test
push
push
jbe
pop
int
rcll
dec
mov
push
dec
push
mov
inc
dec
rorl
mov
lret
mov
je
xlat
js
inc
divb
mov
sub
cwtl
aas
imul
and
add
xchg
xor
mov
push
sbb
clc
lods
push
add
movl
mov
mov
xor
sub
mov
sub
xor
mov
movl
pop
mov
movl
movl
mov
mov
mov
xor
xor
div
mov
and
sub
mov
movl
jmp
mov
jo
pusha
popf
sbb
mov
popa
push
in
adc
jo
adc
sub
test
sbb
dec
cli
xor
sti
fwait
into
mov
jb
sti
iret
ror
mov
in
xchg
cld
add
mov
xchg
out
adc
pop
xchg
add
cmp
jb
in
jmp
pop
unpckhps
rcr
sbb
je
stos
sub
out
cmp
loop
mov
or
add
jae
sbb
push
outsb
xchg
sbbb
leave
leave
or
mov
out
sarb
cmp
or
nop
jp
or
sbb
mov
mov
orb
aam
xor
dec
repnz
dec
subl
mov
mov
call
pop
scas
out
mov
inc
push
into
or
mov
jns
ret
mov
in
testb
inc
pop
stc
pop
mov
addr16
pop
sbb
in
push
push
adc
xlat
mov
mov
data16
enter
outsl
mov
jnp
xorb
ret
hlt
js
pop
dec
repz
xor
aas
push
stos
cmp
scas
jae
pop
daa
mov
inc
push
mov
int
imul
push
xchg
loopne
jae
push
xchg
lahf
xchg
lods
xchg
testb
add
sahf
ret
sbb
or
aam
cmp
int
push
mov
sbb
in
push
jecxz
pop
jns
adc
dec
inc
push
push
xchg
pop
mov
stc
jecxz
movsb
mov
jnp
push
or
push
movsl
xchg
int3
or
cmp
sbb
imull
addl
fs
xor
adc
fwait
push
or
andb
xor
mov
dec
test
nop
dec
iret
xchg
add
push
xchg
pop
cwtl
das
jmp
outsl
push
xchg
insb
xor
mov
insb
stc
jle
or
add
inc
mov
movsl
sub
inc
jmp
fildl
cmc
push
mov
jbe
add
je
mov
jl
jno
pusha
push
mov
mov
loop
lret
daa
subb
mov
mov
int3
or
in
daa
and
inc
sub
push
rorl
fnstenv
push
jmp
aaa
test
dec
mov
fistpll
mov
repnz
jge
pop
and
jmp
dec
sbb
clc
xlat
add
call
loope
data16
imull
int3
fwait
stos
cmp
mov
sbb
mov
mov
xor
ret
dec
in
test
dec
xchg
jle
ds
jp
test
mov
jne
popf
int
sub
lahf
lods
mov
mov
sub
push
insl
out
jns
inc
mov
jns
dec
pop
cli
mov
das
pusha
cmc
add
in
or
sbb
add
or
adc
leave
mov
lds
icebp
jmp
mov
mov
aas
mov
fstl
or
test
mov
push
movsb
subb
mov
cld
mov
or
and
aaa
xor
jbe
pop
add
and
out
pop
rolb
popf
and
bound
push
pop
je
ljmp
or
inc
aam
cmp
add
inc
cld
xor
add
movl
movl
movl
mov
add
mov
xor
mov
or
mov
or
mov
and
mov
sub
mov
movl
movl
movl
movl
movl
movl
movl
movl
movl
jmp
sbb
or
jmp
bnd
cmp
js
fstl
adc
adc
push
mov
or
sub
repz
pop
arpl
xchg
sbb
xchg
dec
insl
subl
filds
movsb
dec
dec
sub
dec
add
pop
add
inc
mov
lret
cli
hlt
xor
scas
mov
sub
out
cwtl
add
xor
adc
mov
cltd
ficoml
lahf
pushw
mov
mov
ja
fs
mov
insl
lods
jmp
adc
jg
fnsave
mov
inc
dec
and
adc
dec
xor
jp
mov
pop
xchg
jmp
and
out
mov
jns
rcrl
cmp
sub
jne
inc
imul
lahf
sub
gs
mov
js
add
sub
out
mov
in
je
mov
adc
or
inc
int3
mov
sbb
dec
sbb
adcb
add
add
push
jns
adc
lret
popa
das
add
es
out
mov
mov
inc
test
add
ret
out
jnp
sub
dec
into
jb
daa
pop
mov
xchg
mov
movsb
lret
dec
repz
cmp
mov
cmp
lods
pop
inc
cmp
insb
int3
bnd
pop
dec
mov
xor
fdivrs
inc
mov
imul
insl
popf
cmp
adc
hlt
daa
cli
sbb
pop
data16
scas
mov
add
push
inc
sub
popa
cmp
push
cmp
out
or
push
jo
sbb
jecxz
fptan
mov
lcall
lret
nop
test
aas
xchg
xchg
fs
jle
idivb
jecxz
loope
push
nop
mov
jmp
stc
sbb
cmp
repz
push
xchg
push
push
imul
movsb
aaa
scas
test
sub
push
xor
fnstsw
adc
sub
mov
out
sub
out
or
mov
js
lds
pop
data16
pushf
in
dec
clc
sbb
xchg
in
cmp
mov
inc
cmp
mov
ds
repz
inc
enter
mov
and
push
dec
in
push
shrb
mov
out
mov
mov
rcrl
pop
jns
jae
ja
movsb
int
stos
add
sbb
orl
loope
pop
mov
test
inc
or
cli
and
adc
test
inc
ljmp
or
inc
lcall
pop
jnp
enter
sbbb
clc
ud1
xlat
lea
nop
jge
add
popf
jns
pop
xor
xor
roll
dec
hlt
add
mov
test
adc
mov
cmpsl
mov
shll
loop
jnp
stc
xchg
mov
stos
insl
push
adc
xor
inc
je
imul
sub
mov
negl
addr16
push
sbb
fwait
sbb
xchg
arpl
stos
rcl
ror
loop
stos
cli
dec
addb
sti
dec
inc
mov
inc
inc
int
mov
movl
mov
mov
jmp
jg
inc
dec
and
cwtl
lods
pop
sbb
adc
adc
aaa
push
pop
loopne
rcrb
or
mov
fsubs
cmc
adc
nop
repnz
push
mov
pushf
inc
mov
mov
loopne
mov
imul
fs
jecxz
andb
sub
adc
adc
sbb
test
dec
pop
inc
shll
int3
lds
int
xchg
pop
sbb
mov
pop
sarb
in
mov
movsb
inc
icebp
inc
std
cmpsl
jne
out
and
sub
hlt
cmpsl
cmp
insb
sbb
bound
cmp
jecxz
sub
les
gs
les
in
popa
xchg
inc
pop
outsl
mov
out
sub
les
mov
leave
or
mov
jns
jae
or
pop
das
xor
and
ljmp
shld
xchg
aaa
cmc
nop
mov
sbb
dec
cmp
cmp
xor
pop
mov
aad
pop
inc
or
sbb
fisttps
push
sahf
insb
mov
xor
ficompl
xor
xlat
loopne
fsubs
pop
jo
inc
mov
lods
and
inc
push
mov
movsl
dec
jle
std
mov
das
dec
dec
jbe
jo
std
or
popa
xor
xor
xchg
or
es
cmp
repz
test
shll
dec
add
imul
push
sbb
mov
xlat
jns
jle
add
movsb
fcoml
clc
mov
xor
push
mov
sbb
stos
std
pop
cmp
ret
xor
xor
imul
jno
insl
push
jl
fcmovnu
jb
mov
je
decl
mov
cwtl
out
adc
sbb
pop
and
stos
pop
jl
cmp
fcmovnb
jmp
push
add
outsb
aam
jne
test
test
xchg
mov
jo
aaa
push
mov
cld
jnp
push
lds
pushf
sub
fsubrs
bound
ljmp
insl
mov
test
fnstenv
push
lahf
test
xchg
and
gs
mov
sbb
cmpsb
xchg
or
pop
mov
inc
mov
repz
mov
stc
jmp
js
inc
or
sub
rorb
jle
int
loope
cli
xchg
xor
out
lea
test
test
dec
pop
sbb
sbb
data16
pop
adc
sub
xchg
nop
inc
imul
sahf
enter
sub
push
icebp
adc
push
jecxz
ds
mov
fbstp
mov
stc
or
test
jae
clc
dec
or
push
push
mov
mov
jb
mov
jge
movl
pop
ljmp
jp
lcall
sbb
pop
inc
inc
repz
mov
and
rorl
xor
push
iret
mov
push
push
scas
sbb
dec
mul
pop
mov
sahf
aaa
in
aas
popa
inc
rcr
repnz
mov
int
pmullw
xor
les
pop
faddl
adc
or
mov
or
jmp
xchg
decl
cmp
adc
stos
mov
lret
adc
jo
adc
xor
inc
xor
jp
ds
mov
jle
pushf
xchg
ljmp
js
shrb
add
scas
cwtl
jecxz
cli
lods
cld
bound
cmc
jae
dec
sub
mov
lahf
mov
and
je
cs
mov
xor
add
inc
and
push
push
lret
xor
sub
ret
push
shlb
xchg
scas
sub
mov
or
push
xchg
lods
xor
sbb
loop
popa
fcmovnb
cmpsb
fcomip
stos
in
hlt
mov
or
cmc
xchg
jle
clc
sarl
and
jle
sub
icebp
outsl
stc
push
ljmp
push
jecxz
arpl
cltd
loop
sbb
bound
mov
fwait
maxps
mov
add
aas
lods
mov
mov
mov
mov
inc
scas
fwait
xchg
and
scas
mov
pop
outsb
inc
or
out
pusha
js
ret
dec
and
lret
aaa
shl
fiadds
mov
popa
ja
ds
scas
dec
adc
or
pushf
fwait
xchg
es
aaa
les
inc
and
mov
repnz
pop
inc
push
xchg
push
lea
sub
daa
rcrb
pushf
sub
cmc
adc
push
jmp
cmc
jns
dec
out
stos
jmp
lahf
cmp
out
mov
clc
inc
test
sahf
mov
test
cmpsl
stos
int3
xor
sbb
or
cli
push
ljmp
jecxz
mov
xor
out
es
fldt
lea
mov
push
and
mov
xchg
outsl
popf
test
pusha
outsb
mov
cwtl
ja
jp
gs
nop
mov
xor
cmp
icebp
and
push
pop
int3
daa
mov
std
test
icebp
cld
aad
notl
ljmp
push
call
sbb
int3
icebp
cwtl
prefetch
or
adc
int3
fs
xor
inc
ljmp
das
adc
adc
jmp
cmpsl
rcll
dec
in
and
xor
sbb
xchg
out
outsl
jae
jae
inc
lods
adcl
dec
push
sti
inc
sub
jmp
xor
test
scas
push
lahf
sar
std
loopne
push
in
int3
insl
mov
inc
dec
mov
cld
lcall
pop
fimull
mov
test
jbe
xor
mov
jbe
scas
jge
sub
xlat
mov
pop
adc
into
inc
mov
into
jg
js
pushl
mov
int
cli
hlt
subl
das
adc
fsubs
shr
stos
insb
fsubrl
xor
lea
xchg
mov
dec
mov
es
dec
xchg
jb
jmp
sbb
cltd
stos
push
call
push
popf
xchg
daa
adc
sbb
and
sbb
fcomi
mov
mov
inc
add
addb
test
js
lea
int3
xchg
leave
stos
add
outsl
pop
jge
pop
scas
jo
xchg
das
std
or
mov
mov
or
mov
sub
mov
sbb
mov
or
or
add
mov
adc
mov
movl
movl
movl
movl
movl
jmp
sub
cmp
mov
push
leave
adc
jo
adc
test
movsl
stos
out
pusha
dec
ret
enter
fdivp
sbb
or
pusha
or
rcr
loopne
imul
idiv
testb
sub
movb
sub
out
xchg
xchg
popf
nop
pop
sub
pop
loope
ja
pop
pop
shll
gs
fldenv
pop
inc
popf
or
adc
test
xchg
movsl
ficoms
push
jns
mov
sbb
sub
xchg
xor
cmp
leave
add
push
or
adc
or
sub
dec
jge
shl
mov
ss
test
and
lret
or
leave
loop
xor
imul
outsl
es
fstl
leave
sub
mov
arpl
nop
test
or
jl
xorl
jmp
cwtl
and
shl
bound
test
lcall
pop
test
ja
sub
idiv
sbb
jp
and
inc
push
or
inc
aaa
lock
mov
dec
divb
dec
xor
out
imul
and
mov
daa
incb
pop
call
sti
push
call
or
xchg
movsb
sub
inc
leave
mov
es
rolb
scas
inc
sbb
jl
stos
ljmp
mov
mov
imul
stos
ret
cs
popf
mov
sub
ret
inc
insl
and
cmp
inc
mov
imul
loope
sub
test
pusha
jbe
imul
push
jge
aas
subl
pop
sti
fimull
ds
hlt
jl
jbe
es
pop
jb
or
leave
sahf
sub
pop
fnstenv
mov
jmp
mov
fimull
adc
loopne
xorl
sub
shr
int
cmp
or
filds
mov
out
ss
xor
imul
lcall
jp
ss
aam
mov
adc
jmp
mov
or
and
nop
lahf
scas
cmp
push
and
pop
mov
sub
jo
imul
adc
adc
push
pop
mov
in
aam
insl
fadds
subl
shl
adc
fwait
cmp
add
xor
loopne
lret
mov
adc
sub
sbb
inc
jnp,pn
sub
pushf
jg
push
add
xchg
xchg
jl
int
aaa
into
cmp
push
inc
rorl
daa
sti
cmp
xor
mov
fwait
sbb
cmp
pop
mov
cmpsb
dec
ss
sbb
jp
xchg
push
xchg
ficoms
inc
out
stc
in
or
sti
push
dec
jp
and
cltd
mov
test
rcr
xchg
push
icebp
cli
sub
adc
jnp
mov
mov
shlb
fwait
cmp
cltd
lock
mov
out
loopne
mov
cwtl
xchg
push
lods
mov
dec
lret
mov
int3
xor
push
testl
in
pusha
lods
mov
cmp
movl
movl
xor
inc
mov
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
movl
mov
movl
movl
mov
or
add
mov
or
mov
sub
mov
sub
imul
add
mov
push
mov
lea
mov
xor
div
mov
lea
push
mov
mov
push
push
push
push
call
mov
mov
push
push
or
or
push
push
call
mov
mov
xor
mov
mov
mov
and
add
lea
xor
push
lea
call
mov
mov
mov
sub
xor
imul
add
xor
xor
mov
div
cmp
jne
mov
xor
mov
div
mov
mov
xor
sub
mov
xor
sub
or
lea
push
mov
push
pop
div
mov
xor
div
mov
mov
xor
xor
div
imul
sub
push
mov
add
push
mov
sub
mov
pushl
call
mov
mov
lea
mov
incl
mov
mov
xor
mov
xor
xor
and
cmp
jne
cmp
jne
mov
jmp
lea
mov
mov
mov
mov
mov
sub
mov
mov
mov
sub
mov
movl
jmp
xchg
xorb
daa
cltd
sbb
cmp
adc
jo
adc
shl
mov
push
cli
sub
push
dec
ret
out
and
adc
fs
xor
sbb
dec
lahf
lret
adc
jb
les
sbb
mov
mov
sbb
xor
adcl
addb
mov
inc
jle
inc
and
lock
xchg
stos
popf
add
adc
cmp
fwait
add
ja
push
cmp
in
and
sbb
add
fimuls
lods
jnp
jle
sub
int
sahf
xlat
pusha
divl
ficomps
out
mov
cmp
xor
sarl
cmpsl
mov
movsl
mov
clc
sahf
xchg
out
lods
bound
mov
inc
push
sub
mov
leave
sbb
sbb
lods
adc
mov
mov
outsl
xlat
setae
xchg
jl
bsf
cmp
or
sbb
dec
cmpb
out
pop
rcrl
in
dec
inc
mov
ja
dec
mov
fisttpll
mov
aad
test
adc
cs
mov
sub
addr16
das
sub
jg
pop
sti
push
sub
jbe
dec
push
movb
pop
aas
repz
cmp
std
mov
or
int
rcrb
lret
repnz
rcr
sbb
mov
xor
data16
sbb
pop
sbb
adc
jp
mov
sub
mov
jecxz
aad
jbe
enter
push
repz
imulb
jae
aam
shlb
inc
out
orl
or
cmp
dec
aam
push
or
xlat
inc
sub
push
popa
sbb
add
cmp
fsubs
xor
or
jnp
cmp
mov
mov
push
adc
lock
cli
mov
cmc
mov
sub
inc
fnstcw
mov
jne
in
in
mov
out
xchg
dec
push
and
mov
adc
je
mov
in
dec
stc
xchg
mov
stos
mov
mov
adc
push
mov
inc
outsb
adc
push
out
lret
ret
scas
das
adc
mov
movsbl
pusha
inc
dec
in
mov
iret
inc
loopne
adc
outsb
pusha
mov
jbe,pn
jge
decl
jnp
dec
popl
aad
mov
cmp
cmpsb
dec
cmc
pop
sbbl
in
xlat
cwtl
loope
or
lcall
loope
adc
lods
mov
sub
jmp
lcall
shll
dec
cld
sbb
jno
jb
jae
rcrb
mov
mov
scas
out
fs
pop
cmp
pushf
pop
mov
xchg
lock
xchg
fisttps
aad
mov
std
xor
jl
pop
jno
movsl
mov
and
mov
test
sub
dec
jp
mov
cmp
pop
lahf
cs
push
test
aam
sub
test
mov
testw
jne
iret
ja
adc
clc
insb
lahf
fwait
inc
inc
push
mov
in
stos
lcall
inc
gs
mov
mov
mov
mov
pushl
pushl
pushl
pushl
pushl
push
push
pushl
mov
call
jmp
jmp
dec
test
lods
outsb
in
stos
push
mov
adc
adc
jg
pop
sbb
mov
aas
iret
push
arpl
xor
stos
xlat
lcall
rcr
jns
fnstenv
mov
out
push
mov
sarb
stos
rclb
push
daa
aaa
mov
hlt
arpl
movsl
push
in
inc
inc
out
cltd
inc
jae
arpl
out
add
ja
fcmovu
jmp
out
jge
pop
mov
pusha
out
sub
pop
push
scas
shll
or
cmpsl
or
jg
cli
adc
lret
dec
jns
xor
mov
dec
aam
or
mov
mov
fstpt
dec
push
inc
sar
add
sarl
mov
jmp
add
jo
cmpsl
jae
or
push
mov
dec
movsl
mov
sahf
fidivl
int3
push
rcrb
pop
rep
fildll
mov
int
cmpsb
dec
xor
adc
pushf
mov
add
dec
cld
popa
inc
or
or
push
push
push
je
repz
divb
outsb
cld
incl
pop
cmc
sub
fwait
out
mov
dec
sub
call
or
inc
setl
into
int3
dec
push
xchg
dec
xchg
cmc
mov
cli
add
jbe
fildll
cli
lcall
add
cmc
cwtl
adc
jns
mov
cltd
aaa
ret
test
pop
repnz
mov
cmp
in
inc
mov
jo
add
pop
dec
aas
rorl
outsl
jp
aad
adc
gs
mov
insb
and
jge
mov
dec
call
xchg
mov
and
clc
jmp
and
fdivrp
add
pop
push
orb
fcomp
ret
dec
pop
clc
push
das
addr16
sbb
jns
loopne
in
pop
or
xchg
outsl
push
movsl
test
test
lock
in
fimull
or
sbb
lds
xchg
arpl
pop
mov
xor
sub
mov
xchg
jl
in
cmpb
pop
std
jle
mov
lret
xor
lods
push
mov
sbb
fsubp
notl
and
insb
jns
fsubp
jne
inc
xchg
jle
iret
adc
and
mov
fsubrs
mov
cmp
jb
adc
sub
or
mov
sub
mov
cmpb
ss
mov
imul
int
mov
in
fldl
adc
push
cmpb
mov
in
scas
push
ror
mov
test
sahf
test
andl
dec
cmc
daa
mov
mov
and
pop
incb
cs
push
dec
test
and
or
mov
add
addr16
or
dec
dec
mov
jnp
popa
cmpsl
pop
shll
shll
rcr
jnp
mov
out
mov
and
push
pop
popa
push
xchg
sub
jmp
xor
mov
push
cmp
or
add
andb
aam
xchg
dec
dec
push
add
dec
push
rorl
pushl
call
mov
push
add
push
push
call
mov
jmp
mov
pop
mov
pop
leave
ret
push
mov
sub
push
push
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
push
push
push
push
call
mov
mov
add
adc
and
push
and
or
push
or
xor
xor
push
push
call
mov
movl
movl
movl
movl
xor
movl
push
inc
mov
mov
mov
push
jmp
dec
pop
divb
inc
and
mov
imul
jge
xchg
xchg
cli
inc
jmp
sbbl
jg
sub
fmul
arpl
dec
test
sbb
jae
subl
notl
lret
push
movsl
lds
sub
or
jge
outsl
xor
add
adc
jne
or
push
and
mov
movntps
push
mov
xor
lahf
xor
mov
cmp
sbb
xchg
jmp
cmp
pop
bound
cmpsb
je
popl
outsl
repnz
mov
or
inc
jp
movsb
dec
and
and
cwtl
adc
mov
cmpsl
stos
mov
shll
clc
insb
jbe
lds
repnz
in
mov
sbb
jne
call
cld
cmpsl
dec
xor
inc
icebp
hlt
int3
outsl
cmp
jmp
in
rol
xchg
hlt
cmp
xor
test
inc
lret
out
xchg
outsb
adc
or
out
sbbb
mov
jne
lcall
mov
clc
adcl
xchg
insb
sub
sahf
xchg
mov
mov
pusha
mov
sti
adc
fdivrl
pop
hlt
mov
push
adc
jg
cmp
push
aad
cmc
andl
xor
inc
xor
scas
inc
sbb
test
daa
pusha
stos
les
enter
ret
pop
rcr
fwait
int3
xlat
mov
pop
incb
and
mov
fists
and
mov
mov
mov
mov
ja
cld
sti
fcoml
mov
out
xor
mov
xor
movsl
mov
adc
fmull
cltd
pop
cmp
shrl
push
inc
adc
push
scas
ret
jmp
sbb
xor
incl
lcall
mov
and
lock
push
int
sbb
or
pop
cmp
xchg
sub
mov
cld
pop
xchg
sub
mov
popf
sbb
int
pop
cmp
inc
cmp
adc
and
cmp
cmp
push
call
mov
mov
or
or
push
add
push
jmp
push
pop
push
js
icebp
stos
imull
adc
lock
sbb
cwtl
push
xor
fs
or
jecxz
aad
lds
sub
and
cmpsl
jbe
pusha
push
rorb
out
decl
out
fs
popf
xchg
pop
mov
bnd
out
outsb
int
outsb
mov
pop
jmp
or
ret
xchg
jne
bound
mov
mov
xchg
cmp
or
adcl
and
and
dec
jnp
les
xchg
dec
test
cld
pop
mov
out
orl
in
add
gs
rcl
sub
shlb
xchg
mov
jbe
mov
or
out
lret
rclb
das
stc
dec
cltd
fwait
gs
xchg
addr16
outsl
xlat
mov
lcall
sub
or
imulb
movsb
jl
shr
js
jno
add
lds
test
jp
cmp
lcall
adc
out
int
inc
into
cltd
sbb
push
xor
adc
push
inc
fcmovnu
cltd
xchg
sub
mov
and
push
push
sbb
mov
inc
int3
jo
cmp
sbb
repz
call
inc
xor
stos
mov
cmpsb
dec
mov
addr16
push
push
fldcw
cwtl
jns
and
dec
fidivrl
sbb
dec
ss
jo
or
imul
fwait
sub
in
push
pop
push
fwait
int3
jp
mov
sbb
loopne
sbbb
xor
imul
mov
rcrl
adc
and
mov
mov
ds
nop
clc
addb
mov
jne
xchg
es
xchg
sub
sar
mov
push
cmp
pop
cmc
adc
adc
and
jo
cmp
add
jb
xlat
mov
ffree
ljmp
push
dec
push
stos
mov
outsl
lods
add
loope
notl
mov
imul
and
jp
or
add
call
mov
lea
xor
mov
div
mov
sub
mov
movl
mov
movl
mov
mov
sub
mov
xor
div
mov
xor
or
or
mov
mov
movl
jmp
cltd
sbb
sbb
cltd
sbb
xchg
bound
cltd
movsb
js
cmpsl
adc
stos
movlps
xchg
push
jmp
test
inc
ficoms
mov
xchg
mov
fcoml
inc
fwait
sbb
adc
lret
cli
jae
fxch
aaa
push
enter
bound
sbb
mov
xchg
repz
mov
sub
sbb
imul
pop
mov
or
xchg
pop
adc
gs
mov
mov
add
imul
fsts
testl
adc
push
ret
fnsave
push
xchg
lds
hlt
lret
push
enter
dec
roll
cmp
rolb
stos
mov
sub
adc
inc
sti
xor
xchg
cmp
mov
lret
sbbl
mov
dec
lea
notb
or
jge
jnp
lds
in
sar
pusha
aas
in
je
nop
mov
jl
dec
lds
and
loopne
movsl
jmp
sub
in
iret
inc
std
sbb
cmpsb
cmovbe
out
cmpsb
sbb
mov
push
popa
shlb
stc
int3
mov
xor
scas
mov
pop
test
xchg
xchg
cmp
dec
scas
xchg
or
mov
push
ucomiss
sbb
outsl
jo
test
xchg
inc
insb
pop
arpl
mov
xchg
xor
push
fstps
and
and
jns
dec
lods
pop
cmp
mov
cmp
xor
outsw
xlat
fmulp
ret
in
outsb
or
cmp
cmpsb
fisttps
add
add
or
mov
out
pop
dec
sub
or
in
jne
fisubrl
addl
pop
out
adc
pop
ficompl
addr16
add
shrb
push
sbb
xchg
mov
push
inc
jmp
xor
pop
xor
mov
daa
mov
into
scas
mov
sub
xchg
mov
daa
jb
sub
lret
sbb
cmp
xor
adc
xchg
nop
push
lock
xlat
pushf
sbb
inc
in
aad
mov
je
sbb
xchg
dec
add
notb
adc
inc
or
and
or
inc
in
mov
and
lea
mov
mov
mov
movl
jmp
pop
mov
pop
mov
sub
adc
stos
movlps
mov
push
std
mov
xor
scas
cmpsl
xor
bound
in
outsl
dec
push
icebp
xchg
bnd
add
test
nop
jo
dec
xchg
jns
sbb
cwtl
cltd
jae
clc
ss
jge
add
add
add
cmp
movsb
xchg
xlat
add
idiv
jae
sub
jae
ret
push
movsb
les
pushf
adc
ljmp
push
xor
sti
xchg
test
ror
in
int3
test
push
add
shlb
iret
cmc
add
jl
lahf
pop
imul
sahf
stos
xchg
pop
pop
mov
inc
push
fstpl
int3
add
cmp
imul
jo
imul
loopne
cmp
fs
fidivl
daa
pop
clc
cmp
leave
adc
inc
sub
pusha
xchg
mov
je
sub
add
ret
insl
data16
repnz
sbb
or
test
mov
cmpsb
pop
push
dec
xchg
mov
jbe
into
xchg
push
push
inc
and
ja
push
rclb
clc
lahf
jnp
lahf
rclb
frstor
sub
jp
cltd
sarl
inc
xor
mov
outsl
sub
jle
rcrb
outsb
and
loop
test
sarl
inc
repnz
dec
cwtl
test
aad
jae
or
in
cmc
bound
mov
mov
inc
adc
jecxz
push
fcom
pop
mov
push
bound
cli
pusha
cmp
pop
mov
fmull
mov
das
sub
jle
hlt
fs
lods
push
sub
negl
sbb
lcall
je
sub
push
adc
push
popa
daa
movsl
in
rorl
dec
dec
cmpsl
jno
pop
pop
mov
out
jle
mov
lret
dec
xor
adc
jl
inc
and
lahf
idivb
adc
jp
ret
out
sub
push
xchg
daa
mov
popf
push
add
fsubrs
mov
push
cwtl
ret
mov
popa
loopne
test
in
xchg
cmp
inc
in
movsb
imul
movl
mov
mov
sub
add
xor
add
mov
div
mov
xor
pop
pop
or
mov
movl
movl
jmp
xchg
sub
subl
cmp
adc
stos
movlps
mov
and
inc
push
add
testb
push
repz
enter
sub
ja
cmp
jae
mov
push
clc
mov
stos
xchg
inc
mov
xchg
pushf
fmulp
gs
inc
out
xchg
sub
or
pop
cmpl
inc
aaa
stos
or
sub
jle
xchg
shl
push
loopne
mov
test
cmp
daa
push
fs
lcall
jge
fbstp
push
fistl
pop
pop
push
in
sbb
cli
stc
sbb
pop
arpl
fdivs
push
mov
mov
rcl
imul
int
jp
fistpl
scas
sbb
dec
push
sahf
je
std
jmp
ss
push
sbb
aad
adc
cmpsb
add
xchg
lahf
push
dec
in
mov
add
int3
jp
cmpl
repnz
insl
xchg
mov
jb
sbb
dec
ds
addr16
addb
inc
aaa
arpl
pop
fdivr
lods
int3
fst
sub
rcll
and
mov
push
loopne
adc
lea
fs
xor
repnz
pushf
shll
rcrl
lock
int3
inc
cmp
arpl
xor
pop
cmp
push
sarl
pop
repnz
call
jb
fldcw
and
xlat
insl
push
xchg
repnz
xchg
or
test
stc
jnp
cmc
push
add
test
test
scas
and
jns
cld
dec
push
jmp
fs
cld
adc
inc
mov
push
mov
je
jle
ret
sbb
mov
fadd
xchg
fcompl
and
dec
mov
ficomps
cmp
lods
xor
push
mov
lea
leave
mov
add
repz
mov
push
aam
add
push
pusha
int
sbb
and
jle
add
xor
add
jl
xchg
jg
mov
or
inc
sti
mov
inc
xor
or
dec
or
shrl
sub
or
mov
imul
mov
jmp
loope
mov
and
les
aas
fwait
adc
stos
movlps
aaa
ds
sbb
incl
fiaddl
cmpsl
dec
mov
incl
push
sti
jl
sahf
xchg
dec
dec
push
jb
jo
mov
inc
jge
cmp
pusha
aaa
test
fwait
mov
in
aam
fisubs
jno
dec
int3
cli
ret
cmp
repnz
lcall
lods
inc
xor
and
aam
mov
outsl
jp
repz
push
mov
cmp
and
xor
inc
jns
das
inc
pop
jno
cmp
lea
or
sbb
sbb
inc
stc
mov
dec
mov
mov
std
xor
xor
adc
inc
dec
fsubs
mov
cmpsb
push
push
xchg
jmp
and
push
push
stc
inc
rcl
xchg
ss
xchg
dec
in
les
mov
push
fs
daa
fldcw
sbb
push
mov
pushf
pop
ret
aam
leave
xor
or
adc
jg
cli
cmp
rcrl
shlb
std
pop
and
out
xlat
sbb
sbb
xor
lahf
stos
scas
fisttps
sub
jne
loopne
cwtl
push
enter
fistps
sahf
pop
repnz
xor
cmp
pop
xchg
outsl
inc
xchg
fsub
pop
or
xor
or
das
pop
outsl
stos
mov
out
jecxz
xchg
pop
inc
mov
cmp
daa
adc
pand
jg
mov
mov
lea
cli
clc
out
fisubrs
and
ljmp
pushl
or
aas
push
bound
lods
cmp
jnp
xrelease
sbb
jmp
mov
mov
jl
xchg
ljmp
jg
mov
jns
fldt
loope
jbe
mov
ret
rorl
decl
and
cmp
lock
rorb
jae
int
mov
add
data16
and
or
xchg
hlt
mov
or
mov
movsb
fmull
mov
test
pop
add
loop
cld
iret
add
dec
mov
icebp
leave
ret
push
mov
sub
push
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
push
movl
mov
mov
push
push
push
call
mov
mov
xor
mov
mov
mov
xor
mov
xor
or
mov
mov
mov
xor
or
add
cltd
adc
cmp
jne
cmp
je
mov
mov
mov
mov
add
adc
or
mov
or
mov
push
push
push
push
call
mov
mov
and
mov
mov
mov
and
xor
xor
xor
cmp
jne
cmp
jne
mov
mov
add
or
mov
or
xor
lea
xor
mov
and
add
mov
xor
xor
div
mov
mov
xor
imul
mov
push
push
xor
mov
lea
mov
mov
lea
mov
mov
or
xor
div
mov
add
xor
add
mov
add
mov
mov
jmp
inc
or
pushf
ds
fdivrs
cltd
adc
pop
adc
adc
push
sbbb
jle
pop
outsl
push
mov
cmp
pop
int
dec
push
rorb
mov
xchg
shll
mov
shr
add
cmp
sti
pop
jo
mov
xor
enter
mov
std
adc
stos
fidivl
xor
and
mov
frstor
cmp
test
test
insl
and
sub
movsb
outsl
cli
fisubl
das
shlb
jo
scas
jns
or
hlt
xor
xchg
fsubs
and
cmc
cmp
and
inc
movsb
mov
in
adcl
mov
sbb
sub
push
insb
adc
xor
xchg
cltd
in
lcall
subl
and
add
clc
repz
xchg
pop
call
pushf
pop
in
pusha
sahf
arpl
xchg
cs
out
pop
push
sarl
inc
push
in
pop
or
cmpl
movsb
fwait
imul
pop
sbb
push
inc
dec
xor
fidivrs
sahf
mov
ficoms
aas
lds
mov
mov
cmp
mov
lret
xchg
mov
inc
sub
insb
stc
lods
push
pusha
or
lods
in
jnp
jmp
dec
idivl
and
and
sbb
andl
sub
push
add
repz
lcall
and
repz
sbb
dec
sub
dec
lret
push
fistpll
push
or
cld
popa
imul
jge
mov
imul
insb
out
inc
add
ret
sbb
xor
jmp
sub
cmpl
hlt
mov
adc
outsb
cmp
mov
pop
pop
insl
clc
adc
sub
inc
adc
cltd
mov
orl
add
jae
jge
testl
and
mov
js
fadd
xchg
data16
addl
outsb
and
pushf
xchg
repz
jno
fsubrl
sub
add
cmc
cld
repz
push
or
adc
pop
insb
dec
sbbl
mov
int3
xchg
data16
add
dec
loop
xchg
ljmp
insl
fildl
out
cmpsl
aam
xchg
leave
sti
mov
xor
mov
dec
mov
sub
testb
movsl
xor
int3
popf
xor
mov
push
xor
jbe
mov
lods
mov
ja
jmp
lcall
adc
pop
or
fisubrs
sbb
inc
add
scas
push
incb
call
xor
sbb
xor
in
inc
or
dec
das
or
mov
mov
test
inc
jge
mov
nop
push
in
pop
dec
aam
xor
mov
jg
mov
adc
loopne
pushf
or
rcr
iret
mov
push
and
cmp
nop
mov
fwait
cltd
mov
cmpsb
or
and
pop
test
or
in
mov
jle
push
loope
xchg
adc
in
pushf
bound
cmp
sbb
enter
lret
insb
ret
inc
or
jbe
addr16
mov
nop
or
sub
adc
insb
cltd
fwait
or
xchg
lds
add
cld
into
push
cld
daa
nopl
loope
mov
push
xlat
or
bound
xchg
xor
add
mov
mov
cmp
or
and
rcl
sbb
inc
shll
incb
cmp
out
aam
pushf
loope
loop
cwtl
mov
clc
push
aad
mov
mov
sub
mov
sbb
mov
xor
mov
xor
mov
add
jmp
pop
pop
scas
outsb
scas
pop
sbb
cmp
push
push
lock
adc
adc
adc
cmp
dec
xlat
movsl
aam
test
inc
negb
jmp
fiaddl
and
inc
jge
loopne
pop
aas
repz
sahf
test
adc
inc
aas
shlb
lahf
xchg
xlat
or
jmp
lds
mov
and
add
sbb
pop
popf
test
lcall
rcr
imul
cmpsl
fcomps
sbb
ljmp
pop
xor
loope
xor
fyl2x
mov
dec
or
call
jg
test
jle
cli
and
enter
xchg
dec
aad
bound
scas
icebp
iret
jp
inc
iret
jo
aas
mov
mov
add
dec
sbb
sbb
xor
push
sbb
cmp
jbe
and
mov
fstl
fidivrs
insb
push
lcall
rclb
mov
aam
xor
loop
mov
and
cmp
cmpsl
lock
xorl
jmp
imul
test
mov
imul
mov
inc
lret
cmp
repz
adc
sbb
outsb
test
xchg
cmp
nop
jae
xor
lods
cmpb
cmp
jecxz
arpl
jae
xor
push
xchg
addb
sub
pop
cli
inc
data16
outsl
push
cli
lahf
in
push
orl
shlb
aas
sub
hlt
dec
jmp
inc
lret
inc
sub
movsl
lds
int
pop
cmp
ss
movsb
cli
hlt
cmc
dec
dec
sbbl
ficoms
mov
int3
in
fstp
rclb
inc
fidivs
mov
pushl
icebp
pop
mov
inc
stc
mov
in
mov
jns
ftst
jge
sbb
jbe
ja
idivl
add
dec
aas
rcr
bound
lods
pop
and
or
push
sbbl
js
pop
cmp
sbb
or
imul
jl
fsts
das
mov
dec
stos
pop
sub
push
dec
push
fdivrs
xchg
jg
cli
or
and
ret
cmc
jbe
in
pop
outsb
xchg
fsubrs
bnd
mov
js
aaa
cwtl
mov
push
mov
push
fcmovne
mov
in
pop
dec
cmpl
test
mov
call
jb
and
mov
pop
popf
or
in
mov
sub
gs
setl
int
pop
prefetchw
or
testb
lock
pop
mov
push
push
les
xchg
daa
lods
int3
mov
and
sahf
push
rcrl
subl
aaa
fists
adc
cmc
xor
jne
and
xchg
fstl
mov
pop
inc
push
mov
adc
lahf
ret
ret
out
jmp
lret
sub
daa
mov
insl
push
roll
fisubs
sub
jge
jmp
push
loop
xchg
xchg
mov
mov
insb
aaa
xor
sub
and
imul
int3
xchg
xchg
icebp
sbb
xchg
sbb
adc
sbb
add
aad
sbb
adc
mov
push
lcall
mov
pop
push
mov
pop
inc
mov
testl
arpl
test
cmc
insl
and
mov
sbb
cmpsl
sub
xor
stc
orb
aad
stos
repz
push
rorl
dec
sbbl
sub
pop
cmp
push
jmp
addr16
inc
pop
mov
mov
xor
cwtl
mov
je
mov
icebp
add
adc
push
push
call
mov
sub
push
pop
sbb
mov
xor
cmp
jne
cmp
jne
mov
mov
add
shr
or
mov
xor
xor
add
mov
pop
leave
ret
push
mov
sub
push
push
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
jmp
ret
loopne
icebp
xchg
stos
mov
stos
lds
adc
and
adc
mov
lret
push
ficoms
jmp
cli
cmp
rclb
jo
dec
jns
push
dec
cltd
sbb
scas
bound
dec
fildl
scas
aaa
xchg
jle
leave
lahf
inc
push
mov
jecxz,pt
and
cmp
movb
lock
sub
js
xor
mov
imul
not
dec
loopne
enter
fwait
ds
shlb
js
stos
push
mov
xor
out
dec
push
inc
jnp
pusha
inc
cmpb
jns
testl
lods
mov
lods
xchg
and
cmp
mov
cmp
sti
pop
mov
adc
and
mov
sub
out
sub
and
xchg
nop
das
cld
insb
lock
fldt
call
and
and
aam
lret
movsb
clc
push
add
xchg
inc
cmp
push
lahf
mov
dec
iret
jecxz
push
call
out
iret
sarl
mov
lods
rclb
inc
sbb
or
or
pop
js
mov
cmp
jns
pop
jmp
push
push
xchg
mov
ss
dec
mov
clc
lret
jb
pop
sub
or
es
clc
jne
loope
stos
jbe
jl
inc
mov
sub
test
sti
out
pop
add
jecxz
and
dec
jp
fcomps
and
in
jmp
inc
mov
fiadds
push
iret
scas
mov
dec
iret
lcall
sbb
xor
in
add
xor
dec
mov
sub
lock
mov
pop
fmuls
cmp
fstpt
popa
xlat
clc
add
ret
loop
andl
add
in
orl
aas
test
xor
loope
test
sbb
nop
lret
mov
outsb
loop
adc
jl
fldcw
pop
jl
adc
cmp
inc
mov
mov
add
aas
int
lods
sbb
test
and
dec
rorl
jecxz
cmc
nop
dec
cmp
push
and
xor
rcll
ret
jge
lret
push
lea
fiadds
jae
and
mov
in
mov
xorb
daa
mov
cmpsb
dec
add
scas
inc
xor
out
jl
dec
push
es
sbb
lods
arpl
daa
jmp
xor
dec
popf
or
dec
jno
loope
pushf
cmp
or
movsl
push
fdivp
push
push
in
push
mov
loope
and
aam
adc
jne
cmp
sub
jns
sbb
mov
mov
fimull
push
sub
movsb
out
add
dec
or
add
inc
enter
add
inc
int3
cmp
movl
mov
mov
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
adc
mov
push
push
or
or
push
push
call
mov
mov
and
or
mov
mov
and
or
xor
xor
shld
shl
shr
xor
or
or
xor
mov
mov
xor
mov
mov
mov
mov
mov
jmp
cmp
iret
sbb
pop
push
lret
test
repz
adc
movlps
mov
bound
mov
and
addb
mov
lea
cmc
sti
xchg
jmp
or
cmp
pop
lods
sahf
int
sub
jbe
jmp
xchg
shr
out
mov
flds
mov
add
mov
cmpsl
lods
out
adc
nop
jge
lods
into
xor
imul
shr
lcall
mov
add
or
mov
mov
or
in
hlt
push
xor
test
pop
arpl
js
jg
sub
dec
daa
fldcw
out
lea
jns
mov
xchg
mov
or
jae,pn
into
and
xchg
jle
clc
dec
jb
xor
aas
mov
ja
in
xchg
enter
test
push
push
xor
stos
push
and
xchg
mov
add
jl
jno
jmp
mov
adcb
or
dec
mov
dec
popa
mov
pop
lds
pop
movsb
nop
mov
dec
mov
int
pop
pop
gs
jmp
subl
bound
sbb
insb
sub
inc
jae
stos
mov
mov
in
push
cmp
sub
in
outsl
ja
jbe
dec
cli
aad
in
push
mov
test
cwtl
sbb
cmp
push
inc
test
jno
dec
mov
loopne
xchg
mov
xchg
mov
decb
pop
fcmovb
mov
inc
jmp
fmuls
and
sub
inc
test
sbb
insl
loop
sbb
inc
mov
bound
inc
aam
push
jb
insl
mov
enter
ret
fwait
jno
loope
mov
fwait
ret
xchg
or
call
fbstp
sbb
cltd
sahf
jecxz
out
mov
adc
xchg
adc
jp
in
lds
mov
sbb
lds
xchg
push
into
ret
loopne
mov
js
popa
out
subb
out
rorb
dec
popa
sub
cmp
subl
lret
fs
pop
mov
cmovle
daa
sub
fdivs
addb
xchg
test
fidivl
rcl
cld
cli
cmpsl
mov
xchg
ja
cwtl
jg
jns
pop
push
inc
sahf
or
cltd
lret
cwtl
cwtl
jnp
cltd
xchg
into
mov
xchg
sub
push
mov
push
movsb
xorl
lcall
sub
sahf
pop
jbe
cmp
lods
int
push
pop
pop
popf
inc
rcr
pop
xchg
mov
cli
push
and
das
imul
xorb
jnp
out
movsl
mov
sub
cld
stos
subl
xor
loop
mov
push
push
push
call
add
push
adc
push
push
push
call
mov
mov
mov
xor
jmp
inc
in
sbb
sbb
fisttpl
pop
lods
add
adc
movlps
scas
jl
xor
and
out
sti
rclb
xchg
js
add
sub
bound
cmp
xchg
test
jno
add
sub
lds
sub
xor
and
push
push
mov
divl
push
or
cwtl
orw
cmpsl
pop
mov
rorb
test
mov
sub
jecxz
mov
fistpl
xchg
int
mov
inc
bound
cmp
iret
jg
cmp
outsb
sub
lret
mov
das
cmpsb
vmread
jmp
mov
fldl2e
subl
and
mov
in
sar
mov
xchg
out
jnp
shrl
inc
loopne
pop
mov
jno
mov
dec
jl
mov
pushf
mov
fildl
adc
mov
mov
test
mov
rclb
xchg
shlb
jbe
xchg
mov
repnz
dec
loop
or
ret
test
adc
notb
cwtl
lahf
sbb
adc
pop
das
das
jge
adc
scas
jmp
sub
xor
in
insl
gs
jo
xchg
dec
shlb
out
mov
add
or
or
xchg
jns
lcall
pop
dec
fs
mov
movsb
in
imul
dec
aaa
arpl
cmp
mov
in
stos
dec
addr16
sahf
adc
xor
mov
xor
adc
fdivrs
sub
addr16
sbb
pushf
in
andl
pop
add
adc
das
sbb
test
call
std
loope
push
jbe
pop
insl
and
sahf
and
push
fidivs
jb
or
add
lds
insb
xchg
ficomps
pop
dec
inc
daa
es
adc
ret
outsl
mov
dec
adc
mov
outsb
lock
sub
dec
hlt
cs
xchg
in
ss
inc
inc
mov
cli
lret
push
ljmp
pop
and
lods
mov
pusha
pop
sub
jle
clc
mov
fisubrl
or
pop
mov
mov
jne
ficompl
jl
pop
jno
dec
jecxz
adc
cmp
jbe
lods
lahf
test
imul
push
jnp
pop
fisttpll
mov
jge
cmp
inc
or
subl
pusha
test
adc
and
push
pop
das
cmc
mov
mov
call
sub
push
adc
xchg
lret
insl
cmp
or
call
pop
add
sbb
cwtl
sub
cmpsl
add
mov
into
stc
aam
sahf
arpl
out
andl
xchg
sbb
dec
fildll
sbb
into
outsl
adc
sbbb
arpl
cwtl
cltd
pop
sub
adc
repnz
enter
adc
mov
mov
mov
mov
mov
sub
mov
mov
sbb
mov
sub
mov
sbb
add
mov
adc
push
xor
mov
pop
sub
mov
sub
mov
mov
mov
add
xor
shrd
xor
shr
or
shl
or
mov
push
mov
mov
mov
push
push
push
call
mov
mov
mov
or
mov
or
mov
add
mov
adc
mov
add
mov
adc
add
adc
pop
mov
mov
pop
leave
ret
push
mov
sub
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
and
add
mov
and
mov
sub
and
mov
mov
imul
jmp
and
sbb
loope
stos
sbb
cwtl
lods
pop
jae
adc
cltd
sti
xor
insl
rorb
inc
in
out
lret
mov
mov
xor
inc
test
call
inc
aam
call
xchg
fiadds
xor
mov
fidivrl
and
cmp
daa
pop
mov
xor
stos
lcall
das
shrl
jl
jae
sti
ljmp
clc
xor
stc
out
add
cld
jae
and
leave
push
lahf
sbb
sub
mov
xchg
lea
xchg
divb
je
inc
gs
cmp
sbb
pop
mov
rcrb
stos
outsl
pop
mov
or
rcl
roll
insb
mov
cmpsl
jge
dec
test
mov
cmc
je
inc
fisttpll
insb
and
ficoml
mov
cmpsb
jmp
ret
cli
ret
lods
rcrl
pusha
pop
into
sbb
leave
mov
lods
sub
sbbb
ljmp
test
cmp
xchg
jb
stos
add
mov
and
push
jbe
inc
fcmovnu
ret
jo
mov
scas
cli
dec
or
mov
mov
push
vpminuq
jo
stc
push
add
addr16
lods
fwait
das
les
add
scas
out
mov
jg
mov
fwait
push
call
lods
sbb
add
ret
add
pop
cltd
mov
nop
aam
adc
xchg
xchg
sub
inc
int
sub
inc
fcmovne
cmp
push
adc
cmp
add
sti
fisubrs
subl
popf
sub
pop
sahf
imul
loope
cmp
cmpsl
gs
inc
cmp
add
mov
pop
push
pop
hlt
add
sub
sub
jp
jg
push
mov
sahf
les
inc
mov
mov
in
mov
xchg
pop
xchg
push
mov
adc
adc
or
das
pop
xchg
xor
cmp
hlt
dec
pop
sub
push
lret
mov
shll
imul
mov
cmc
aas
mov
call
mov
dec
mov
int
lahf
aam
aas
cmp
xlat
lock
push
sarl
or
inc
cltd
mov
push
mov
leave
mov
in
ret
call
movsl
pop
and
repnz
imul
cmc
inc
mov
gs
aam
test
add
xchg
mov
xorl
dec
shrb
bound
dec
std
sub
iret
popf
ja
xchg
inc
lea
andl
pop
pop
adc
cmp
push
scas
or
into
push
mov
pop
stos
push
push
add
out
sti
push
cmpsb
mov
fildl
and
fadds
mov
popa
push
push
stc
push
test
jmp
aam
ljmp
dec
into
jmp
jle
stos
sahf
add
mov
jg
push
sbb
add
add
xor
cmp
jne
mov
mov
mov
sub
add
mov
or
mov
imul
sub
add
mov
or
mov
jmp
push
daa
sahf
xchg
sbb
add
lahf
mov
mov
add
adc
xchg
pop
cmp
inc
pop
jg
orl
arpl
sub
test
xchg
jge
ret
mov
fdivl
ljmp
and
iret
or
sub
lock
es
inc
push
and
scas
lds
rorb
push
jg
jno
xchg
mov
insl
fmuls
dec
imul
icebp
lahf
int
adc
lods
aad
daa
mov
cmp
lret
rorl
xor
ss
pop
das
scas
xor
fnsave
lea
bound
scas
popa
ret
inc
leave
mov
lods
das
push
jnp
xlat
cwtl
mov
outsb
inc
call
repnz
adc
ror
add
mov
jno
mov
jbe
out
popf
add
xchg
aam
out
pop
cld
push
jg
rcrl
inc
jmp
pop
das
cmp
popf
subl
ret
or
jo
xor
out
mov
fistl
fsubrs
sbb
jle
xor
xlat
and
in
pop
inc
jl
mov
adcb
xor
cmp
fildll
das
scas
ret
aaa
in
movsl
mov
inc
mov
aas
ljmp
repnz
inc
dec
or
push
shr
jo
cmp
xchg
dec
ss
adc
out
jno
subl
xor
scas
push
pop
add
xor
inc
icebp
cmp
popf
mov
cld
or
xor
leave
pop
inc
cmp
mov
lret
dec
dec
pslld
mov
xlat
push
and
int3
cmp
xchg
mov
lods
iret
cld
mov
xor
lret
ja
jp
cmpsl
idiv
fnsave
aad
sub
pop
or
jp
jne
icebp
adc
jl
out
sti
cmpsb
repz
add
loope
jl
sub
cs
int
outsb
cld
fwait
jns
mov
aaa
imul
sub
push
and
push
mov
jecxz
jnp
xchg
mov
pushf
inc
xchg
leave
mov
cltd
outsb
mov
loopne
jmp
pushf
bound
dec
dec
bnd
mov
mov
adc
mov
sbb
repz
or
nop
xchg
mov
add
stc
btr
push
aad
cmp
in
insl
mov
dec
mov
sbb
add
pop
pop
mov
jnp
insb
push
fildl
mov
fbstp
jo
imul
push
adc
xchg
roll
push
insb
pop
inc
xchg
or
pop
sahf
in
pushf
lods
pop
push
idiv
out
adc
cli
pop
jmp
cmp
arpl
add
loop
fs
sub
xchg
lcall
inc
in
sti
cmpsl
xchg
mov
sarl
and
dec
lods
add
xor
imul
add
mov
add
mov
mov
mov
and
mov
and
mov
imul
mov
or
mov
imul
mov
sub
cmp
jmp
pop
mov
sbb
sbb
mov
hlt
jl
fists
js
adc
or
fcomi
loope
test
mov
cmp
stc
jns
xor
rcll
pop
push
stos
pop
add
sbb
fnstsw
or
and
bound
jns
and
add
xchg
jge,pt
xor
push
push
lods
mov
push
xchg
mov
and
out
cmp
jmp
add
outsl
push
xor
sti
scas
out
les
sti
adc
and
cwtl
adc
fs
inc
inc
dec
shll
daa
fidivrs
je
jne
mulb
mov
dec
xchg
xchg
ljmp
mov
pop
cmpsb
xorl
mov
out
int
testl
cld
ds
adc
push
add
das
bound
xor
nop
cli
fstps
mov
xchg
cmpsl
aad
in
fs
popa
aam
lock
incb
and
mov
bound
adc
out
jmp
xchg
or
xchg
and
pop
int
xchg
mov
test
dec
lcall
mov
mov
pop
push
and
scas
push
pop
mov
or
push
inc
mov
mov
lret
cmpsb
scas
stc
aam
pop
lret
loopne
jmp
jo
push
xchg
pop
ja
lahf
add
std
test
loop
mov
and
xchg
int
mov
popf
xchg
mov
addr16
out
sbb
daa
out
jp
and
push
fcomps
scas
sub
dec
lods
fmuls
das
push
jae
rcll
sarb
sub
sbb
mov
inc
mov
daa
mov
repz
loopne
jns
or
add
xchg
inc
sbb
stos
push
enter
repz
and
movsb
rcrb
inc
shlb
xchg
enter
mov
mov
pushf
add
pop
or
mov
xor
mov
sub
dec
push
inc
xchg
pop
and
cltd
ss
in
out
daa
clc
hlt
or
mov
fwait
jne
ds
stc
mov
aas
fbstp
fmuls
xchg
imul
sub
scas
xlat
lcall
fldl
lea
rol
mov
xor
dec
pop
cmpb
inc
push
jbe
inc
leave
lret
aaa
outsl
test
mov
cwtl
sbb
jo,pn
and
sti
fildll
cld
lods
pusha
aam
js
push
shrb
sub
pusha
ret
idivb
out
sub
fsubs
or
dec
mov
imul
pop
clc
mov
add
mov
clc
push
fldenv
js
sbb
bound
cmpsb
rcr
mov
xchg
test
movsl
push
jbe
aaa
cmp
aaa
lods
je
mov
jmp
mov
sub
xor
add
jmp
movl
movl
mov
mov
imul
add
and
add
or
sub
leave
ret
push
mov
and
jmp
xchg
mov
ret
sub
lcall
adc
jb
adc
pop
xor
xor
cmpsl
sub
push
idivl
jae
cmpsl
add
inc
or
cltd
bound
sub
repz
lods
pop
dec
push
mov
int3
jp
lret
iret
mov
data16
out
pop
cmp
jecxz
inc
lods
xchg
jge
cmpsb
les
stos
call
cmpsl
rcrl
in
hlt
mov
subl
push
dec
pop
cli
pop
and
sub
adc
dec
test
outsl
or
cmpsb
mov
lret
xchg
pop
je
jl
out
jmp
pop
mov
into
ja
pop
sub
int
mov
push
or
pop
xchg
mov
sti
push
cmpsb
dec
xlat
sti
and
fldcw
cs
add
scas
pushl
inc
inc
shr
jp
push
mov
push
xchg
out
pop
outsb
aaa
mov
jge
loop
sarl
scas
loop
pop
ja
ja
out
movsl
inc
xor
outsb
lock
movsb
adc
repz
cmpl
mov
push
les
add
xor
add
cmpl
cs
jno
sub
in
outsl
jecxz
call
cmp
mov
sub
fdivl
test
push
push
jno
and
pushf
xchg
dec
fnsetpm(287
xchg
cmp
lock
sbb
or
stos
aad
or
xchg
push
push
loop
sub
pop
out
cmp
dec
or
arpl
jmp
out
repz
mov
sub
shl
sub
jle
adc
out
lahf
or
mov
sub
xchg
mov
enter
and
xchg
pop
adcb
lcall
or
fldcw
inc
movsl
sub
std
jl
mov
call
outsl
ds
push
sarl
add
jbe
push
pop
clc
vmovmskps
mov
cmp
ljmp
and
int3
add
mov
outsl
fld
inc
in
aas
icebp
popa
push
mov
mov
mov
xchg
jle
fstpl
adc
cmp
js
in
sarl
pushf
and
adc
lret
pushw
jecxz
test
imul
adc
sbb
jle
jns
push
xchg
or
dec
popf
pop
outsb
ds
movsb
in
push
sub
dec
mov
pop
lcall
dec
and
inc
ss
push
out
movb
rol
je
push
mov
jge
es
inc
xchg
sub
or
mov
lock
pushf
jbe
aam
xor
movzbl
lcall
xor
lock
adc
jbe
cld
xchg
rcrb
jns
cmpsl
dec
ficoml
mov
stc
mov
loop
mov
loopne
cmp
in
xor
push
mov
imul
pop
jne
aaa
ljmp
xchg
iret
jp
mov
adc
sti
pop
sub
push
push
lea
mov
mov
mov
mov
sub
sbb
mov
orl
orl
lea
push
lea
push
call
mov
mov
pushl
mov
pushl
mov
pushl
pushl
pushl
pushl
pushl
call
pop
pop
mov
pop
ret
push
mov
sub
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
add
xor
mov
and
imul
xor
jmp
movsb
pop
rclb
push
cmpb
fistpl
adc
jp
adc
cmp
inc
add
or
xor
or
pop
cld
pop
ret
push
xchg
iret
out
loop
imul
jns
mov
into
movsl
or
pop
sub
pop
loopne
cs
int
addr16
stos
pusha
push
movsb
js
mov
dec
sub
dec
pop
out
push
sbb
push
xchg
and
adc
jo
out
jno
or
fimull
addr16
mov
mov
repnz
lret
ss
sbbb
aas
rcr
or
arpl
pop
aam
jae
dec
or
xchg
ds
idiv
lcall
shr
ret
rclb
iret
or
popa
push
mov
xor
std
scas
and
mov
fisubrl
adcl
add
fcmovne
inc
jmp
push
and
cmc
cwtl
aaa
inc
push
into
fmuls
cltd
sub
push
rorb
add
add
imul
fadd
ja
mov
fists
adc
adc
pop
add
xchg
xor
or
push
push
sbb
mov
cltd
lahf
shlb
sbb
mov
cltd
out
inc
push
ja
stc
insl
pop
call
bound
mov
mov
lret
outsb
mov
jno
cmp
xchg
xchg
fisttps
lods
enter
call
push
lahf
xor
lods
add
sub
add
lea
insb
mov
decl
mov
popf
arpl
push
add
add
or
loop
mov
mov
inc
ficompl
sub
cmp
add
mov
sti
pushf
pop
adc
lret
push
les
sub
cwtl
int
test
push
dec
mov
xchg
scas
jg
fistps
mov
out
sbb
hlt
jo
cmpsl
lret
inc
pop
fistl
jns
jl
mov
pop
ss
nop
cmp
xchg
stos
cmp
cmp
test
ljmp
mov
out
jo
or
imul
sbb
test
in
cmp
mov
clc
mov
ret
jmp
sbb
mov
mov
repz
test
icebp
inc
add
pop
dec
clc
xor
movsb
cmp
imul
adc
sbbb
mov
cmpsl
xor
repz
pushf
fidivrs
xchg
nop
rcrl
adcb
mov
out
daa
out
leave
popa
xchg
jo
mov
add
fimull
pop
fiadds
jne
pusha
xor
adc
jge
sti
inc
adc
push
mov
fdivl
push
adc
add
mov
sub
std
ret
js
out
pushf
lods
inc
jecxz
xchg
mov
ret
sub
add
arpl
jno
jmp
jmp
cmp
call
xor
loopne
or
test
pusha
jno
repnz
xor
scas
or
inc
fwait
mov
jbe
xchg
add
push
movl
movl
movl
mov
mov
xor
sub
div
mov
mov
or
xor
mov
sub
mov
mov
mov
mov
mov
mov
mov
mov
imul
and
or
xor
add
mov
mov
sub
add
mov
xor
mov
and
mov
xor
sub
jmp
jecxz
in
bound
pop
jne
inc
stos
xor
js
pop
adc
jp
adc
push
fsubp
stos
sub
xchg
rolb
in
lods
sbb
fstp
jp
mov
std
cmp
cmc
sbb
push
cmp
rcll
and
rorl
xchg
dec
stc
lock
arpl
shrb
mov
popf
mov
sub
sbb
ficompl
add
cld
adc
enter
adc
or
push
in
aas
inc
push
aad
int
dec
cmc
dec
mov
repnz
sbb
add
out
andb
fstpl
jecxz
lcall
sub
aam
or
faddl
aam
ret
mov
data16
mov
cmp
sub
cmp
adc
mov
pxor
dec
jge
mov
push
pop
int3
mov
stos
or
les
std
lds
cli
mov
pop
es
jns
lahf
repz
mov
push
imul
int3
out
ss
int3
js
push
scas
jmp
sbb
lret
or
push
pop
xchg
or
add
subl
pop
mov
sub
and
stos
add
rcll
mov
push
mov
inc
inc
pop
push
ds
push
inc
mov
inc
sub
lock
test
in
xchg
out
aad
add
dec
lds
xor
das
sub
imul
mov
ss
push
ret
mov
lods
jg
cmp
scas
fwait
cmc
loop
jg
adc
imulb
out
sarl
dec
mov
lods
and
mov
mov
cmp
aam
push
imul
je
enter
sub
shr
jg
in
xor
push
sbb
scas
adc
insb
and
or
dec
fistpl
mov
ja
pop
sub
push
xchg
call
das
in
arpl
sub
jmp
lcall
jno
lret
push
xor
nop
xchg
xchg
mov
xchg
aam
dec
aaa
into
mov
imul
add
mov
repnz
cs
mov
clc
add
call
mov
cmp
mov
test
mov
xor
aaa
xchg
xor
dec
pop
cmp
dec
pop
pop
fisubrs
adc
inc
mov
in
shrb
out
stos
clc
repz
pop
inc
popf
jmp
dec
flds
pop
arpl
add
jg
out
repnz
xor
cltd
xchg
arpl
mov
xchg
sbb
dec
fidivl
sub
sub
in
xor
dec
cmpsb
test
xor
pop
jge
xor
pop
out
imulb
push
sub
or
jmp
mov
sub
fcoms
fistpl
inc
cmp
movsl
and
mov
xchg
arpl
mov
pop
push
imul
outsl
or
pushf
imul
dec
fs
sar
in
rorb
in
xor
movl
adc
rcll
jl
daa
xchg
jnp
packssdw
mov
out
test
addr16
mov
jne
and
lea
mov
shr
or
mov
jmp
pop
pop
mov
push
fisttpll
ss
pop
push
adc
jp
adc
adc
sbb
inc
leave
and
sub
and
mov
mov
popf
pop
adc
adc
imul
mov
cwtl
mov
adc
inc
jnp
dec
jp
mov
cmp
pop
out
mov
mov
movsl
jge
push
repz
mov
jmp
sub
ret
push
mov
in
dec
loop
push
leave
xchg
mov
and
ret
pop
std
addr16
pop
or
xor
add
xchg
in
xchg
sbb
fs
push
std
inc
dec
push
cltd
ror
decb
loop
dec
hlt
cmp
gs
cmp
mov
dec
jb
mov
clc
push
jp
aaa
cmpsl
decl
push
jl
pop
xchg
and
orb
popf
imul
fdivrs
lcall
push
out
sbb
fisubrl
or
gs
insb
mov
mov
pop
ja
dec
xor
mov
sbb
add
push
mov
inc
int3
imul
mov
mov
mov
enter
mov
mov
leave
pop
jns
xor
arpl
jae
xchg
insb
mov
dec
or
pop
int3
enter
lods
mov
xor
jae
sbb
mov
pop
push
push
lahf
mov
xor
or
in
xchg
dec
movsb
shlb
push
inc
pusha
fcomp
aas
cld
sub
int3
sbb
fwait
push
jns
les
add
xorl
mov
adc
test
fsubl
ret
mov
dec
je
jp
jns
mov
or
xor
out
js
fbstp
fstps
jp
loop
mov
icebp
jne
sbb
mov
aas
fsubl
addr16
and
lock
orl
jp
fisubs
xlat
pop
stos
cmp
test
movsb
stos
cmpb
mov
nop
outsl
and
xor
adc
add
imul
in
sub
es
jg
out
out
aaa
jl
sbb
outsb
ds
xchg
jno
arpl
sahf
mov
adc
mov
jge
stc
lret
pop
outsb
lods
push
or
ljmp
bound
push
mov
div
mulb
adc
nop
ret
pop
hlt
and
sub
adc
dec
insb
dec
or
lret
popl
mov
mov
mov
das
pop
in
mov
mov
xchg
xchg
in
dec
fnsave
push
mov
icebp
xchg
int3
mov
outsl
xchg
adc
jg
std
jmp
test
das
je
push
cmp
dec
sbb
mov
sbb
and
mov
ja
call
or
repz
cmp
stc
sbb
scas
xorl
popa
hlt
inc
dec
scas
fimull
lds
in
jo
popa
andl
pop
movsb
rolb
stc
pushw
sbb
cltd
decl
push
out
jno
cwtl
cmp
gs
dec
int
push
lea
jbe
sub
leave
fucomip
inc
js
insb
in
test
xchg
sbb
ret
jb
xchg
push
repnz
cmp
jbe
pop
leave
ret
push
mov
sub
mov
add
push
push
add
push
or
mov
sbb
mov
shrd
cmpl
movzbl
movl
mov
jmp
mov
mov
jne
push
push
push
pushl
push
pushl
call
orl
and
mov
mov
sbb
sub
negl
shr
cmpl
movl
mov
jmp
movzwl
jg
push
push
pushl
call
add
movzbl
adc
mov
adc
movzbl
sbb
xor
xor
xor
mov
sub
sub
mov
adc
mov
movzwl
or
mov
mov
movzbl
xor
xor
xor
mov
xor
mov
or
neg
mov
mov
sbb
shl
mov
sbb
shrd
sub
xor
adc
shr
xor
or
add
mov
jmp
jnp
add
mov
ficoms
push
cmp
outsb
inc
adc
lea
adc
xchg
test
push
cmp
insl
xor
xchg
test
ret
rcrb
xor
add
scas
nop
and
sub
cmp
scas
out
repnz
sbb
cmpsl
sahf
inc
cli
stc
adc
outsb
shr
jecxz
sbb
lock
in
pop
imul
shll
lods
push
add
roll
repz
arpl
or
test
andb
mov
xchg
push
addl
cwtl
and
aaa
scas
pop
into
dec
ss
push
xchg
das
cmp
loop
xorb
inc
out
add
insl
das
add
loop
xchg
cli
push
cli
pop
sbb
iret
or
jmp
sub
movsl
cmpsb
jecxz
nop
test
inc
xor
mov
mov
fs
ja
cmpsb
test
imul
jecxz
rorb
pushf
cs
popf
cmpsb
clc
add
xor
add
test
mov
or
mov
leave
push
psadbw
popf
sbb
inc
lock
test
bound
leave
mov
out
leave
pcmpgtd
repz
ja
daa
jo
cmpsb
out
scas
lods
out
stc
loope
test
push
in
jmp
mov
xchg
or
push
cmp
ja
jnp
stc
in
pushf
out
mov
and
xchg
cmp
les
pop
mov
lret
jno
inc
loop
adc
jl
mov
mov
icebp
lcall
fisubrl
sub
ljmp
mov
sti
adc
mov
mov
sub
adc
pop
add
adc
das
pop
or
jbe
cmpsb
ja
push
insb
lock
ret
mov
sbb
je
mov
jno
mov
pop
push
jmp
scas
xchg
push
dec
cmp
fs
adc
xor
loope
add
shl
pop
and
jle
les
add
pop
sbb
cmpl
imul
xor
and
insl
mov
jp
iret
mov
push
icebp
xchg
jl
jmp
xchg
xchg
mov
or
sub
cmp
sahf
enter
mov
cmp
in
out
sub
icebp
ljmp
xchg
push
enter
cmpsb
pop
dec
sub
pop
xor
call
xchg
aam
mov
adc
jmp
xchg
mov
sub
les
loopne
adc
lea
adc
push
mov
xor
jge
test
lods
push
push
jecxz
lcall
enter
xlat
testl
sbbb
push
lret
adc
push
inc
aad
popf
xchg
xor
pusha
jae
pop
sbb
push
add
xchg
and
pop
inc
aaa
into
scas
jmp
sahf
mov
or
and
je
popf
sbb
mov
xchg
jp
lods
dec
shl
pop
fildl
jecxz
std
jp
aam
sbb
jl
es
rcl
jno
loopnew
mov
push
les
js
adc
es
pop
and
push
pop
sub
mov
rclb
clc
jge
cmp
push
jg
xor
divb
dec
test
dec
push
or
jne
jg
inc
mov
das
inc
insb
xchg
mov
mov
je
insb
mov
ss
or
sbb
pop
push
or
icebp
clc
out
jge
mov
push
jne
rol
ljmp
stos
or
imul
sbb
outsb
xor
jb
xor
add
nop
les
sbb
push
jl
push
pusha
mov
sub
jge
dec
push
and
lret
cmpsl
loopne
into
jns
negl
pop
and
add
mov
inc
cmpsb
into
repnz
roll
ljmp
mov
rclb
cmp
mov
mov
ds
out
lret
add
lahf
sbb
filds
push
xor
sub
dec
pminsw
dec
jo
popl
xacquire
rcrl
popf
int
xchg
movsl
cli
sbb
pop
mov
push
add
ficompl
mov
dec
push
adc
xchg
fcompl
mov
popf
mov
push
int3
arpl
fstpl
andl
lcall
lret
mov
arpl
cmp
js
aam
jecxz
mov
loop
gs
cmp
xchg
ja
sub
popa
int
push
xlat
cmp
test
pop
ret
pop
mov
mov
xchg
fs
das
jne
cwtl
xor
jne
sub
dec
pop
mov
sub
xchg
mov
imul
push
rclb
cltd
add
xchg
out
jecxz
mov
sub
jp
push
jp
push
cmc
sti
cmp
bound
les
ja
mov
popa
xor
mov
cmpl
movl
not
mov
jmp
mov
jg
push
push
push
call
sbbl
adc
andl
mov
mov
xor
xor
or
mov
adc
adcl
neg
xor
or
mov
mov
sub
or
mov
mov
xor
or
mov
sub
sub
mov
xorl
mov
or
mov
xor
mov
movzwl
sub
mov
cmpl
mov
mov
mov
jmp
mov
jle
push
call
sub
and
subl
or
or
adc
mov
mov
cmpl
movzbl
mov
jmp
mov
jb
push
push
call
mov
xor
xor
sub
or
xorl
adc
sub
sbb
mov
shl
mov
sub
xor
or
xor
sbb
mov
xor
adcl
shld
shl
mov
mov
movl
movl
movl
cmp
movl
jne
movl
cmp
movl
je
xor
mov
xor
mov
xor
xor
add
sbb
xor
xor
mov
cmpl
mov
mov
mov
mov
jmp
movl
movl
jg
push
call
movl
and
sub
subl
movl
mov
shld
movl
shl
cmp
movl
jne
movl
cmp
je
and
mov
xor
or
and
mov
push
movl
pop
or
xor
shl
mov
addl
xor
adcl
shr
addl
or
mov
or
mov
mov
mov
mov
cmpl
movzbl
mov
jmp
mov
mov
jl
pushl
push
pushl
push
call
mov
add
inc
mov
and
sub
mov
jmp
add
int3
sub
inc
les
pop
inc
adc
lea
adc
mov
add
add
decb
add
es
imul
in
xor
lods
lret
xor
out
shl
sbb
sbb
dec
lock
inc
mov
mov
test
push
mov
fwait
js
or
pop
mov
test
aam
pop
in
adc
mov
inc
cli
ljmp
mov
nop
out
mov
arpl
int
test
in
data16
imul
iret
inc
mov
and
mov
arpl
inc
aas
pop
sbb
sbb
fldenv
xor
and
lock
test
jle
sbb
in
push
or
daa
cwtl
sub
stos
leave
fistl
sti
lea
insl
or
das
xchg
push
lret
inc
xor
inc
test
adc
insb
jnp
xchg
lods
adc
xor
mov
xor
sub
addr16
lods
jmp
mov
add
lods
cs
inc
idivb
fcmovnb
add
out
loope,pt
lea
push
ficoml
inc
xchg
inc
arpl
hlt
jmp
dec
mull
push
addb
cs
fidivl
cmc
sub
push
inc
and
rorl
xchg
jnp
fwait
push
inc
in
test
stc
or
ret
fwait
jmp
pop
iret
sub
mov
pop
mov
mov
cld
test
fbstp
test
cmc
push
adc
or
jbe
push
aas
or
xlat
pextrw
mov
dec
mov
loopne
decb
push
xchg
and
pop
adc
mov
popa
xchg
cmp
arpl
outsl
sbb
jg
pop
in
push
mov
mov
sub
lods
cwtl
lea
mov
shrl
popa
xor
loop
hlt
jb
les
pop
adc
adc
daa
imulb
ficoms
roll
and
mov
dec
sub
mov
daa
nop
xorl
add
add
adc
ds
add
xchg
hlt
imul
movsl
nop
sbb
mov
and
test
adc
mov
pusha
fcoml
inc
lret
dec
les
adc
jg
ret
movsl
pop
out
sub
push
sti
sub
or
jne
push
fwait
push
mov
lret
test
mov
ret
lcall
mov
fistpl
cmp
mov
lret
push
gs
jo
pop
mov
jnp
lock
stc
sbbb
xchg
icebp
jno
mov
dec
mov
pop
xchg
outsb
xor
dec
jo
pop
inc
mov
lock
sbb
dec
push
pop
sub
mov
subl
add
mov
cmpl
movzwl
movzbl
mov
mov
jmp
movl
movl
ja
pushl
call
or
and
or
xor
mov
adc
adc
mov
xor
mov
lea
andl
mov
addl
mov
xor
mov
xor
xorl
xor
addl
shr
subl
shl
or
mov
movl
add
mov
mov
xor
xor
andl
shr
addl
shl
sbbl
or
subl
push
lea
push
subl
lea
push
call
cmpl
mov
mov
jmp
mov
movzwl
ja
pushl
push
push
call
adc
movzbl
sub
and
mov
xor
adc
or
sub
xor
xor
mov
and
mov
cmpl
movl
mov
mov
jmp
movl
movl
jae
push
pushl
pushl
pushl
call
sbb
sub
adcl
or
sbb
xor
add
mov
sub
and
mov
xor
xor
shr
shl
or
push
lea
push
mov
mov
shrd
shr
mov
mov
xor
xor
or
lea
push
shl
call
mov
mov
xor
xor
shr
shl
or
push
lea
push
mov
mov
shrd
shr
mov
mov
xor
xor
or
lea
push
shl
call
mov
mov
xor
xor
shl
shr
or
push
lea
push
mov
mov
shrd
shr
mov
mov
xor
xor
or
shl
mov
mov
shrd
shr
mov
mov
xor
xor
or
add
lea
push
shl
call
mov
mov
xor
shl
xor
shr
or
push
lea
push
mov
mov
shrd
shr
jmp
mov
pop
cmp
shlb
dec
inc
jmp
lret
aaa
adc
lea
adc
or
push
inc
lods
lds
inc
add
std
insb
pop
jl
xor
pushf
dec
cmc
jae
or
and
mov
fsts
fwait
and
pop
inc
rol
jbe
mov
fsubp
cltd
inc
lcall
push
in
xchg
aaa
dec
addr16
aas
loop
and
arpl
pop
cmpsl
xor
pushf
rsqrtps
loop
xchg
popf
xor
mov
sti
daa
insl
cwtl
jmp
aas
std
je
xor
push
decl
xchg
sbb
cmpsl
xlat
bound
aas
inc
sbbb
pop
insl
xor
jno
dec
adc
popf
movsl
loopne
fisubs
cld
outsb
std
mov
sub
andb
sub
mov
int
mov
rcll
shlb
add
sub
inc
rol
pushf
mov
push
adc
fs
add
jno
xor
cld
out
cs
jae
mov
arpl
daa
sub
or
mov
xchg
faddp
xor
scas
pop
scas
or
shlb
jg
cld
mov
leave
stos
mov
inc
cld
js
xchg
jg
xor
clc
sub
dec
repz
pusha
cmp
aad
jmp
inc
lods
lahf
xchg
or
hlt
xlat
dec
cld
fs
cmc
movsb
repnz
add
hlt
lods
popa
loop
fwait
cmp
movsb
es
mov
je
push
repnz
sarb
push
test
jbe
and
test
mov
mov
in
xor
pop
mov
cmp
sbb
icebp
pop
cmp
mov
popf
enter
lret
inc
test
aaa
movsl
fsubrp
lret
lds
movsb
sub
loopne
out
adc
and
adc
ljmp
mov
sbb
ret
cld
enter
loop
cwtl
and
jmp
faddl
and
xor
add
or
loopne
push
mov
pop
out
jb
aam
sbb
pop
or
jnp
dec
adc
fmul
lds
imul
inc
shl
adc
and
xor
and
jnp
out
pop
int
in
out
js
sbb
mov
lret
cmp
out
cwtl
iret
cld
shl
adc
mov
mov
int
jg
mov
aaa
mov
js
into
jns
cmp
pop
mov
test
andl
jle
jg
jb
xor
lock
mov
jnp
cltd
mov
mov
orl
mov
fistpll
bound
cmp
adc
shl
mov
xor
or
mov
shrd
shr
mov
mov
xor
xor
or
shl
add
mov
mov
shrd
shr
xor
mov
mov
xor
or
add
lea
push
shl
call
mov
mov
xor
xor
shr
shl
or
mov
lea
jmp
xchg
sbb
sbb
inc
outsb
insb
inc
xor
adc
mov
mov
rorl
fistps
std
cld
mov
push
xchg
mov
aaa
cmc
stc
pop
and
sub
jecxz
push
gs
outsb
mov
andl
es
dec
pop
mov
rorl
int
pop
xchg
dec
and
clc
pop
add
sub
mov
mov
mov
out
and
pushf
fnsave
mov
jnp
mov
add
movsl
pop
cmpsb
mov
movsb
sub
mov
movsb
push
jo
push
pushf
jmp
inc
or
jle
or
jecxz
daa
lea
jmp
ja
cmp
mov
leave
pop
dec
add
pop
roll
adc
mov
pop
rolb
test
arpl
pop
lods
cmpsl
lds
rcl
mov
addr16
pop
stc
dec
das
xchg
cwtl
cmpsb
jecxz
push
xchg
inc
sub
push
popa
repnz
mov
lret
movsl
scas
ljmp
popl
sbb
add
mov
xchg
arpl
mov
rcl
xor
das
dec
psubsw
inc
out
mov
imul
push
pop
xchg
inc
fistps
adc
sbb
inc
roll
mov
or
jge
jnp
dec
int
call
or
pop
je
ds
enter
sub
fildl
xor
sbb
ja
aas
scas
lcall
push
xchg
jl
add
dec
add
jl
insb
add
mov
iret
out
lret
add
jge
pop
sar
cmp
aaa
pop
insb
or
sub
ss
mov
jecxz
mov
test
fdiv
mov
dec
lret
sub
cltd
test
stos
pop
sbb
lcall
leave
sub
xchg
pop
cs
arpl
pop
dec
or
daa
mov
leave
adc
xchg
push
ds
jp
lahf
mov
push
cmp
mov
inc
jecxz
jo
cwtl
mov
hlt
adc
mov
mov
xor
pop
mov
aas
mov
cwtl
pop
mov
mov
sub
repz
pop
jo
bound
imul
xchg
jp
and
loopne
jo
cmpsb
or
and
lods
mov
into
call
out
cwtl
inc
pop
jp
fcom
inc
sbbl
adc
add
inc
dec
cmc
push
pop
out
push
or
inc
push
or
lds
jle
adc
imul
sbb
cmp
mov
shrd
shr
mov
mov
xor
xor
or
push
mov
mov
push
pushl
shl
call
lea
push
mov
mov
shrd
shr
mov
mov
xor
xor
or
push
mov
push
pushl
shl
call
mov
mov
mov
mov
mov
mov
rol
mov
xor
cmp
je
mov
mov
xor
test
je
mov
mov
movzbl
sub
mov
rorb
mov
mov
inc
cmp
jb
dec
jne
mov
mov
shrd
shr
jmp
mov
add
sub
jle
sub
mov
jle
sub
adc
or
js
lcall
enter
adc
arpl
rcll
out
aad
xchg
scas
cmp
je
stos
stc
mov
cmpsb
sub
sbb
test
je
xchg
insl
cli
jge
cmp
xchg
mov
xchg
inc
cmpsb
jno
and
sub
sub
loope
repnz
movsl
sbb
jno
ljmp
or
ljmp
adc
pop
fildl
fnstcw
ja
fwait
cltd
lret
adc
sbb
mov
xor
jae
adc
xor
adc
outsb
js
mov
jmp
popa
push
push
jg
cmp
mov
inc
add
repz
fisttpll
or
push
fidivl
jno
outsl
inc
jp
cmpb
cwtl
incl
loopne
fists
sbb
jmp
mov
jmp
int
jp
sub
push
shrb
lret
xchg
or
incb
push
add
mov
xlat
test
pop
out
lret
cmp
sub
sbb
leave
jae
mov
call
inc
adc
cld
mov
inc
inc
leave
decb
jb
fwait
mov
mov
adc
cwtl
pop
arpl
mov
test
jmp
jnp
repnz
movsl
add
push
je
cwtl
sub
nop
xor
ljmp
in
or
ret
inc
out
push
test
aas
mov
lret
rorb
loop
mov
aas
icebp
inc
outsl
xor
cmc
xchg
das
fstpl
cmpsl
lock
adc
repnz
std
enter
es
cmpb
lahf
fstps
adc
push
pop
lods
mov
test
jl
dec
jl
ljmp
mov
int
inc
lods
movsl
push
insb
mov
hlt
mov
jo
and
repz
push
das
jge
loopne
pop
mov
mov
pop
cmp
sub
cmp
fwait
cmp
aam
roll
sbb
xor
into
sub
je
fcompl
stc
rcrb
push
xor
inc
cmpsl
mov
inc
lods
push
pop
pop
fcmovne
jmp
jae
add
pop
ss
or
movsl
orb
xchg
mov
cmpsb
adc
decb
dec
sbb
mov
insb
dec
fwait
mov
xchg
clc
jmp
loope
xchg
xchg
mov
ret
pop
test
inc
push
mov
xchg
jp
lea
cld
jnp
pop
dec
cmp
pop
fstps
xor
xchg
fdivl
js
mov
pop
aaa
sub
jge
lret
ljmp
lods
nop
jnp
sbb
lret
loop
xor
lahf
xchg
roll
or
xor
or
push
add
jmp
and
lods
and
js
or
xor
adc
lea
adc
or
das
aam
aam
push
fwait
test
cli
jno
popa
ret
aad
mov
pop
xlat
sub
or
popf
push
lock
pop
and
call
inc
dec
push
cmpsb
sbb
push
mov
mov
pop
cwtl
mov
dec
cmp
sub
test
dec
push
lds
xor
inc
mov
and
ljmp
sub
sub
dec
jl
out
pop
inc
jl
add
addl
fdivrp
adc
jnp
pop
xor
mov
push
jl
jbe
int
stos
jmp
inc
sahf
sbb
les
out
mov
adc
shrl
fcompl
xchg
add
inc
and
test
and
xor
js
mov
sub
shlb
ret
mov
cwtl
int3
into
jge
and
mov
loop
push
pop
imul
fchs
mov
fistpll
mov
jo
or
gs
out
scas
dec
cmp
inc
cmp
dec
addb
mov
test
mov
and
or
push
and
into
mov
mov
push
rcrb
or
sub
add
mov
xor
mov
jns
scas
icebp
mov
push
out
cmp
jp
pop
fdivrl
in
mov
insl
xor
inc
or
and
jno
in
clc
adc
inc
sbb
dec
fisubl
xor
ja
sbb
shlb
sub
xor
mov
push
adc
mov
sub
push
fstp
fistps
or
roll
into
cltd
ret
mov
repnz
mov
mov
sbbl
add
addr16
and
mov
lret
jae
pop
addb
pop
push
bound
push
bound
sbb
add
loope
lahf
inc
mov
data16
mov
popa
sti
push
pop
aas
mov
pop
addr16
sbb
mov
cmp
adc
push
mov
pop
les
out
jae
xchg
cmpsb
pop
mov
loope
gs
pushf
cmp
je
mov
sub
mov
in
and
xor
mov
sub
daa
mov
sub
or
push
jbe
jle
stos
pop
in
fidivl
out
dec
and
out
mov
lds
cmc
sbb
mov
pop
jecxz
pushw
subb
push
aaa
es
movsb
cmp
in
push
lea
push
shl
call
jmp
outsl
xchg
pop
test
add
mov
movlps
aas
pop
or
rorb
and
jle
pushf
mov
and
cmp
xchg
lods
sub
hlt
sub
add
sbb
std
fucomi
xchg
shll
inc
int3
faddl
les
cli
mov
cmpsl
test
cmp
sarl
or
jo
lea
mov
cmp
jg
xor
cmpsb
cmp
test
inc
rorl
jne
cltd
cmp
fdivs
pmuludq
sbb
negb
jge
mov
insb
xchg
test
and
sbb
push
or
mov
add
aad
mov
scas
mov
test
call
sahf
in
in
in
sbb
es
lods
add
xlat
cmp
adc
into
loope,pt
inc
xor
pushf
div
mov
stos
mov
and
add
mul
adc
mov
jbe
arpl
mov
jns
imul
sbb
lock
cli
lock
mov
enter
cmp
xchg
or
or
sub
cli
mov
jle
and
ret
dec
inc
and
lods
sbb
mov
inc
xchg
pop
int3
push
cmp
int3
mov
push
incl
in
lea
add
cli
add
lcall
bound
mov
and
mov
inc
inc
lahf
mov
mov
sub
xchg
andb
cmp
pop
mov
sub
int
out
jg
idivb
mov
sbb
lods
xor
loop
out
jmp
test
sbbb
inc
repz
sbb
xchg
xchg
aas
jecxz
movsl
inc
jae
dec
test
fnstenv
pop
fs
sbb
cltd
adc
stos
push
call
xor
popa
dec
fstpl
sti
ror
xchg
sub
sub
add
sub
xchg
iret
leave
inc
jl
bound
lods
rcrb
mov
mov
mov
jp
jp
icebp
stos
mov
pop
mov
inc
lret
pop
pop
mov
inc
sub
xchg
push
adc
inc
test
roll
popl
movb
out
inc
bswap
inc
sub
dec
mov
pop
lea
pop
mov
iret
add
mov
shrb
mov
mov
daa
mov
jae
insl
and
into
mov
push
pop
sub
mov
aaa
int3
and
daa
jle
in
flds
add
or
std
and
inc
dec
xchg
mov
mov
adc
inc
lcall
adc
lods
enter
add
adc
xor
or
add
push
push
mov
shl
mov
shrd
shr
mov
mov
xor
xor
or
add
jmp
jge
jbe
jne
jge
das
adc
ljmp
lea
adc
mov
div
in
lcall
cmpsb
push
in
shlb
add
mov
inc
jmp
mov
adc
rorl
mov
mov
add
mov
adc
fs
pop
fisubl
adc
sti
adcl
adc
arpl
rclb
push
or
nop
pop
add
xor
loop
push
xchg
scas
fsubl
in
out
testl
lods
mov
sbb
ljmp
xor
xchg
nop
in
ja
loope
and
ss
pop
push
int3
rcr
je
push
dec
add
out
fimuls
bound
stc
add
mov
push
addr16
cs
push
push
jge
add
xor
jnp
or
imul
fxch
fwait
cmp
out
pusha
push
push
xchg
xchg
adc
ret
out
jo
mov
mov
xor
pop
xchg
xor
mov
add
movsl
sahf
cmp
lock
mov
push
add
jne
xor
adc
push
mov
inc
and
jnp
lods
outsl
inc
xchg
out
sub
mov
icebp
xchg
lret
pop
pop
in
sbb
sbb
mov
cmp
sahf
xchg
push
mov
adc
lods
dec
loope
ja
xorl
test
clc
push
dec
cs
stos
pop
lea
push
and
je
fld
ficompl
jmp
pop
xor
ja
mov
push
insb
int
enter
scas
ss
out
sbb
dec
cmpsl
dec
mov
xchg
test
sti
ret
popf
fcomps
jae
sti
jnp
sbb
pusha
inc
mov
jl,pn
jb
and
pop
loopne
mov
mov
out
sar
imul
fbstp
xor
leave
out
stos
cmp
fsubr
xchg
or
fcompl
sub
pop
and
xchg
cwtl
aaa
daa
fwait
daa
stos
imul
addr16
enter
mov
fsub
push
or
and
mov
outsb
sub
dec
enter
mov
pop
sbb
shll
scas
lret
mov
fmuls
mov
aad
jbe
cmp
into
xchg
jb
and
mov
mov
popa
push
mov
push
lahf
repz
popa
dec
push
stc
adc
vpshufd
cwtl
jo
in
jge
or
cmp
iret
mov
notl
addr16
std
data16
ror
in
and
xlat
mov
pop
sub
loope
gs
shl
call
push
lea
push
mov
mov
shrd
shr
mov
mov
xor
xor
or
add
push
shl
call
mov
mov
shrd
shr
mov
mov
pop
xor
xor
pop
shl
or
pop
leave
ret
mov
mov
adcl
or
mov
mov
jne
cmpl
movl
movl
movl
jmp
mov
mov
jne
push
pushl
pushl
push
call
adcl
sbbl
add
orl
xorl
subl
mov
mul
ret
push
mul
mov
mov
mull
add
mov
mul
add
pop
ret
push
mov
sub
push
push
push
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
jmp
mov
fs
push
stos
sbb
dec
loop
scas
shl
nop
sbb
adc
lods
out
lret
cwtl
add
push
dec
cmp
sub
icebp
dec
outsl
mov
ret
popl
push
hlt
inc
mov
or
mov
in
inc
mov
cmp
jno
cmc
or
adc
arpl
aam
push
sub
popf
out
mov
sbb
add
push
mov
mov
mov
aad
add
das
pop
aad
movsb
cmp
sbb
jno
push
or
rolb
xor
mov
ja
flds
ss
dec
orb
mov
insl
repz
jge
sub
push
xor
jg
mov
aam
lods
test
mov
leave
add
divl
out
fbld
pop
xor
roll
daa
push
push
test
test
outsb
jae
cwtl
cmpl
inc
in
test
adc
adc
loopne
adc
leave
bound
adc
and
sub
popa
fucomi
sub
xor
or
rcll
fldz
mull
fmull
push
loope,pn
jne
outsb
ja
fidivrl
mov
out
popf
xchg
mov
add
lret
stos
xchg
mov
movsb
and
in
mov
mov
push
dec
jg
test
push
mov
mov
inc
into
cmp
and
cmc
into
jo
fstl
je
popl
cmp
cld
mov
dec
popf
lock
xchg
push
or
call
mov
jecxz
out
psubd
inc
sahf
sbb
and
dec
adc
and
xor
dec
subl
iret
xor
jne
cltd
add
mov
push
jp
addl
inc
mov
xchg
les
out
fucomi
cmp
nop
xor
jae
and
leave
insl
or
popf
lods
xlat
test
subl
push
lea
pusha
fnsave
ljmp
or
pop
dec
test
fdivr
mov
cmpsl
jo
xor
xor
cmp
aad
add
aas
fidivrl
sarl
cmp
or
and
mov
hlt
mov
es
jns
push
sub
out
call
lods
aad
pop
std
lds
inc
adc
sbb
push
in
rclb
xchg
pop
adc
add
xchg
lods
lret
in
inc
or
mov
mov
cmp
ds
sub
mov
xchg
sbb
idiv
xlat
aas
jge
js
sub
jge
cltd
aas
dec
ret
dec
lcall
mov
jg
les
rorb
sbb
repz
jo
jne
push
xchg
fs
sbb
out
es
test
mov
xlat
add
nop
mov
fdivrs
gs
shlb
lahf
adc
inc
mov
lret
mov
ja
mov
fnstenv
movsl
cmp
push
xchg
dec
jno
into
pushf
cwtl
fstpl
lret
std
cmp
movsl
jbe
dec
jp
into
out
stos
shlb
cmp
int3
pop
stc
das
adc
or
fidivrs
sub
shrb
aad
mov
push
cmpsb
push
sub
pop
daa
xchg
push
sbb
jp
scas
sahf
sub
cltd
mov
adc
add
push
jb
xor
dec
mov
mov
repnz
add
inc
cld
or
add
movl
movl
movl
movl
movl
movl
mov
mov
xor
div
mov
xor
mov
push
div
mov
xor
xor
sub
mov
lea
mov
mov
sub
xor
mov
xor
jmp
imul
scas
std
dec
and
add
mov
lods
sub
mov
or
cli
xchg
cwtl
test
fistps
popa
mov
pop
movsb
mov
mov
jmp
shr
jae
dec
push
fstps
mov
pusha
loopne
stos
mov
outsl
and
dec
cmp
sbb
jle
sub
mov
xlat
adc
insl
flds
lcall
dec
jle
push
pop
mov
fldl
push
jecxz
adc
xor
push
mov
push
sub
sub
dec
incl
repnz
stos
call
nop
push
mov
data16
mov
mov
add
mov
cmp
mov
scas
lods
mov
lea
rcl
aas
fwait
push
cmc
xchg
pop
rcrl
push
or
nop
fdiv
int3
cmp
sti
enter
jne
mov
mov
sub
add
or
push
lock
pop
jl
or
mov
push
cwtl
clc
pop
imul
mov
pop
push
loop
jl
adc
mov
lret
cmp
pop
bound
sarl
cmp
test
mov
pop
sub
mov
rcrb
sub
scas
sbb
push
dec
inc
adc
subl
aam
fs
sarl
jmp
or
ficompl
sahf
and
push
jl
enter
xchg
int3
aad
arpl
pop
ret
subb
imulb
push
xor
push
clc
and
cmpl
aam
cmpsb
xchg
cmp
hlt
stos
inc
mov
pusha
int3
in
jmp
mov
mov
and
mov
arpl
lcall
jno
xor
dec
inc
or
fsubl
mov
or
movsb
fs
int
dec
pop
sbb
mov
nop
in
push
adc
dec
imul
xchg
cmovge
daa
add
inc
cmp
and
push
mov
push
std
repnz
in
pop
push
mov
sbb
push
xchg
xor
push
in
ret
jge
inc
dec
ja
in
shlb
roll
cmp
mov
and
dec
movsl
add
imul
push
and
cld
adc
lret
jle
hlt
je
mov
clc
adc
nop
imul
rol
aas
das
test
enter
in
jns
xor
sbb
pop
inc
jle
mov
les
or
stc
and
mov
mov
and
mov
aad
in
shrl
test
adc
sub
push
outsl
add
inc
out
jp
arpl
cmp
mov
stc
loopne
out
ret
jl
add
add
inc
add
inc
pop
std
xor
popf
add
movsl
and
add
add
in
pop
sti
in
xchg
aaa
or
test
out
push
mov
insl
adc
jae
paddd
clc
inc
sub
push
push
dec
jl
adc
cmpsb
imul
or
pusha
push
enter
mov
adc
lahf
xchg
aad
jb
sub
jo
scas
jg
inc
iret
adc
inc
adc
push
int
inc
aad
out
jne
dec
sahf
not
dec
arpl
sub
push
imul
into
fxch
out
mov
leave
jnp
add
mov
sub
mov
mov
xor
mov
sub
div
mov
pop
xor
sub
cmp
ja
jmp
mov
movl
movl
movl
movl
mov
mov
mov
sub
imul
xor
xor
div
mov
mov
push
and
mov
sub
sub
mov
mov
mov
xor
mov
xor
and
add
add
mov
mov
add
mov
xor
mov
xor
mov
sub
mov
add
mov
sub
xor
mov
xor
or
xor
mov
sub
mov
mov
mov
xor
jmp
lret
lahf
push
pop
sbb
leave
pop
jmp
call
mov
mov
pop
jbe
popf
sbb
aas
arpl
add
push
aas
std
jns
push
je
loope
lahf
adc
lret
mov
pop
in
test
aam
insb
cmc
or
inc
and
cmp
xchg
test
pop
lret
mov
jge
mov
lods
cmpsb
xchg
add
pop
repz
arpl
xchg
pop
xor
into
jp
sbb
jge
pop
sub
adc
push
shrl
inc
lds
test
push
cli
mov
lock
hlt
pop
mov
mov
and
mov
aas
imul
fsubs
jle
or
push
xor
dec
jmp
inc
dec
into
mov
inc
test
scas
sbb
push
in
adc
xchg
and
pop
push
add
fisttps
movsb
sub
mov
add
adc
test
int
clc
mov
push
outsb
lods
adc
inc
insl
je
mov
add
mov
loopne
or
jge
iret
jne
scas
gs
pop
cmp
and
and
mov
mov
jle
cwtl
push
cld
push
xchg
mov
outsl
sti
mov
mov
into
and
adc
sahf
ret
xchg
andb
jo
test
mov
mov
and
sti
mov
ljmp
test
ror
fmull
popf
jbe
gs
mov
sti
ljmp
lret
mov
mov
jne
pop
mov
test
repnz
insl
push
cmpl
divb
bound
push
in
xchg
cmp
je
sub
add
shufps
pop
scas
cld
lahf
xlat
cli
cmpsl
or
aas
fidivs
das
movl
ret
cs
popa
xchg
setg
jnp
and
sbb
popa
xchg
call
rcrb
cmpsb
in
cmp
imul
iret
ret
mov
test
or
es
xchg
or
mov
mov
xor
rcrl
or
pop
adc
mov
lret
add
in
or
shll
inc
push
push
lcall
das
pop
mov
cmp
mov
hlt
jge
popf
or
popa
push
mov
mov
in
xchg
mov
mov
ret
sub
inc
fstpt
in
call
and
test
loopne
scas
inc
insb
sub
push
push
adc
xchg
xor
cmp
xor
sti
sbb
jmp
xor
ret
test
idivl
ljmp
cmp
and
mov
aad
push
fstp
test
mov
push
dec
xchg
fldl
push
das
dec
jl
xor
lea
xchg
jmp
pop
sub
mov
and
fdivrp
jb
jo
mov
mov
or
xchg
sub
xor
jae
push
mov
daa
jo
xchg
mov
or
jne
sbb
mov
fnstsw
jne
fistpll
bound
cmp
enter
inc
and
mov
test
fnstsw
push
push
sub
dec
sub
pop
xor
add
es
int3
inc
xchg
jge
dec
and
adc
adc
mov
aas
xor
in
xor
sub
div
pop
xor
sub
cmp
jbe
pop
pop
pop
leave
ret
push
mov
and
sub
push
push
push
push
call
mov
movzbl
push
call
test
jne
xor
jmp
adc
mov
cmpl
movl
movl
movl
jmp
movzbl
jbe
pushl
call
orl
addl
adc
sbbl
andl
mov
xor
mov
jmp
xor
push
or
cli
sbb
iret
pop
movsb
js
call
adc
inc
ljmp
cmpsl
ret
insb
clc
icebp
sbb
mov
mov
mov
loopne
int3
sbb
out
xor
xor
mov
imul
xchg
stc
xorb
das
ja
out
sbb
mov
xlat
sub
pop
or
bound
jne
dec
xor
push
jle
sub
in
cli
jbe
xor
dec
fwait
movsb
dec
mov
mov
out
int
es
lock
mov
sbb
push
add
dec
cmpsl
mov
cmp
pop
pop
inc
or
push
loopne
mov
dec
imul
lret
cli
test
mov
pushf
dec
pop
sbb
rorb
mov
cld
sbb
mov
add
adc
add
cmp
dec
fs
sbb
or
notl
xor
jb
adc
push
das
mov
movsb
fisubrs
popa
sbb
dec
jno
or
lcall
stc
incl
rol
test
or
jo
movsb
and
xchg
testb
push
mov
dec
and
push
fs
sub
shll
xor
jae
loopne
gs
push
movsl
scas
mov
inc
iret
xchg
mov
sub
stos
adc
adc
mov
mov
xchg
jl
jne
aas
pop
and
sub
jmp
imul
call
pop
stc
sti
enter
stos
add
jecxz
ds
pop
test
cmp
push
iret
imul
cmc
or
pop
test
adc
xchg
adc
scas
in
mov
cmp
ret
add
pop
insl
popa
shr
leave
mov
pop
rorl
ljmp
inc
or
xchg
lret
add
push
push
pop
sar
xor
add
addb
mov
or
mov
sahf
lea
aaa
inc
jo
rcrl
enter
mov
xchg
mov
mov
repz
cmpsl
push
xor
inc
hlt
push
push
xchg
jae
xor
dec
rorb
push
loopne
mov
int3
out
push
mov
pop
mov
sbb
jp
and
mov
shll
leave
repnz
sub
jmp
fwait
cmc
int3
pop
popf
pop
add
test
jl
scas
nop/reserved
push
or
cmp
rcl
mov
cmpsl
frstor
adc
fwait
xchg
xor
outsl
sti
jle
sub
iret
mov
fidivrs
mov
cmpl
movl
movl
jmp
movl
mov
je
push
call
addl
subl
and
andl
movl
orl
movl
adcl
push
mov
add
pop
mov
cmpl
movl
movl
movl
movl
jmp
not
movl
jl
pushl
push
push
push
push
push
push
push
call
subl
subl
addl
adcl
andl
neg
mov
xorl
mov
movl
mov
movl
mov
andl
movzwl
or
cltd
movzwl
xorl
idiv
cmpl
mov
movl
mov
mov
jmp
movl
movl
jne
pushl
push
push
call
xor
xor
mov
and
or
mov
mov
sbb
movzwl
sub
sbbl
movzbl
sub
mov
sub
mov
movzwl
addl
or
mov
or
mov
cmpl
movl
mov
mov
mov
jmp
movl
movl
jae
push
pushl
push
pushl
call
sub
sub
adcl
mov
or
addl
mov
mov
mov
movl
mov
mov
adc
mov
sbbl
sub
sbbl
mov
andl
xor
sbb
jmp
mov
sbb
push
push
sbb
xchg
movlps
movl
cmpsb
jne
mov
imul
int3
pop
lahf
pcmpeqw
xchg
nop
mov
xchg
ljmp
sbb
mov
in
inc
inc
dec
rcl
dec
add
sub
repnz
adcb
and
mov
or
ret
jno
mov
sbb
cmp
in
xlat
ljmp
push
push
inc
sbb
mov
pop
std
xchg
cltd
push
push
iret
jbe
mov
xchg
inc
jle
sub
sub
mov
jo
mov
out
out
sahf
inc
repz
ds
sbb
outsb
rcl
call
sub
icebp
cmc
in
sbb
dec
push
enter
sbb
pop
jmp
dec
xor
popf
push
pushf
imul
jae
test
pop
cmc
cmpsb
mov
sbb
call
fistps
adc
clc
addr16
mov
add
stos
pop
push
fistl
sbbb
pop
pop
jle
pop
jge
sbb
sub
mov
cmc
or
in
cli
cmp
mov
test
sbb
mov
cmp
pop
mov
fcmovnbe
add
ss
mov
frstor
sbb
rolb
push
rolb
jbe
adc
enter
add
pop
add
int
push
mov
aas
xor
mov
mov
stc
xor
test
das
lds
xlat
push
shll
aam
test
fadd
gs
dec
mov
mov
stos
mov
shl
ret
add
sub
rorb
stos
icebp
inc
imul
lcall
inc
mov
push
dec
mov
jg
sbb
shll
aad
xlat
aas
sub
xlat
test
jne
scas
aam
shll
std
sub
sub
dec
sbb
pushf
pop
add
xlat
hlt
jns
lahf
pushf
movsl
sahf
mov
scas
andl
loop
imul
movsl
cmp
arpl
stos
loope
gs
mov
inc
xchg
push
pxor
into
jns
or
insb
das
fiadds
add
mov
xchg
or
cmp
cmp
push
fcoms
xlat
loope
aaa
mov
in
into
mov
mov
ss
idivl
movsb
cmpsb
jmp
stos
and
xor
ret
sarl
lahf
rclb
mov
and
jo
pushf
adcl
stc
or
test
mov
sbb
add
rol
jne
inc
add
add
mov
movl
cmp
movl
jb
sbb
movl
movl
movl
cmpl
movzbl
mov
jmp
movl
mov
jbe
pushl
call
sbb
mov
sub
mov
and
inc
movl
and
mov
cmpl
mov
movl
movl
mov
jmp
mov
jb
pushl
pushl
push
push
call
andl
sbbl
mov
sbb
movzbl
or
xor
xor
xor
xor
orl
add
mov
orl
xor
sbbl
div
mov
add
sbbl
and
pushl
pushl
call
movl
movl
mov
adc
movl
cmpl
movl
mov
mov
jmp
movl
movl
je
push
push
call
adc
xor
xor
mov
sbb
xorl
or
mov
xorl
mov
adcl
and
addl
or
mov
subl
and
xor
adcl
pushl
pushl
addl
call
not
pushl
dec
movl
movl
xor
movl
subl
movl
or
movl
cmpl
mov
mov
not
mov
jmp
movl
mov
jl
pushl
push
push
push
push
call
xor
and
sbb
adcl
movzwl
or
movl
movl
xor
movl
mov
dec
mov
andl
sub
sbb
mov
or
orl
and
xor
jmp
or
ja
mov
jle
das
mov
movlps
or
xor
mov
lahf
mov
jns
add
and
orb
add
cmp
std
and
stc
fstps
hlt
jno
imul
icebp
jg
ja
aas
jge
cmpsb
adc
pop
ret
xchg
and
ret
xchg
pop
sbb
mov
ret
mov
mov
lret
cs
or
bound
fdivp
aaa
xor
dec
xor
xlat
xchg
cmp
popf
rcrb
adc
sarl
cmpsl
mov
hlt
lods
push
pop
out
ret
jbe
push
ja
and
push
popl
lea
cmp
jae
jge
or
js
sbb
adc
and
push
cld
inc
add
aaa
inc
es
mov
shll
mov
test
xor
xchg
mov
xchg
pop
test
int
call
movsb
fwait
fwait
jae
out
lods
scas
adc
int
sbb
popf
dec
cmp
xchg
div
dec
jb
clc
mov
std
ss
jne
mov
xor
pop
pop
push
cmp
pop
or
outsl
and
mov
dec
in
les
xchg
jge
jecxz
ficoml
xor
mov
mov
mov
push
adc
and
mov
jns
mov
xlat
push
pop
movsb
inc
lock
inc
test
lret
mov
lea
lock
mov
or
lcall
fs
loopne
jns
inc
adc
xor
mov
adc
jge
fistps
xchg
and
or
repnz
cmpsl
mov
stc
inc
push
pop
aaa
mov
and
movsb
rep
xchg
out
jns
loope
and
ja
sbb
cwtl
pop
push
add
gs
test
loopne
pop
push
fistpll
out
notl
push
and
ffree
mov
sbb
mov
mov
inc
test
add
imulb
mov
arpl
icebp
ret
movsb
jl
jle
loop
jp,pn
push
xchg
adc
fmuls
out
and
out
test
insb
xor
inc
lods
cli
stos
in
sbb
xchg
jecxz
fmuls
out
stos
inc
add
cmpl
sbb
pusha
ret
dec
add
cmp
adc
mov
xor
pop
sub
sub
mov
stos
xlat
mov
xchg
mov
ss
scas
pop
iret
sbb
or
inc
mov
adc
add
insl
stos
pop
rcll
aad
sub
dec
pop
iret
mov
mov
jge
inc
add
rol
xchg
in
add
daa
add
pushl
xor
mov
mov
andl
add
xorl
and
cmpl
mov
movl
jmp
movl
je
call
or
or
not
or
mov
sub
mov
xor
and
pushl
sub
mov
mov
andl
imul
xor
or
mov
movl
sub
pushl
sbbl
call
adcl
dec
movl
jne
movl
cmpl
mov
movl
mov
mov
jmp
movl
movl
je
pushl
push
call
or
xor
mov
and
mov
sbb
mov
add
movl
mov
mov
movl
mov
xorl
call
lea
mov
cmpl
movzwl
mov
mov
movzbl
jmp
movl
not
jb
call
and
xor
or
sbb
neg
orl
mov
mov
sub
and
neg
lea
mov
mov
mov
sub
mov
mov
cmpl
movl
mov
movl
jmp
movl
jge
push
call
add
xor
neg
xor
add
mov
adc
xor
xor
xor
add
sub
sub
xor
xor
mov
sub
xor
sub
cmpl
mov
mov
jmp
movzwl
movl
jbe
push
push
call
sbb
sub
mov
mov
add
adc
addl
xorl
xor
sbb
xor
add
shl
shr
or
and
mov
dec
mov
orl
mov
mov
sub
mov
xor
mov
mov
shrd
shr
cmpl
movl
mov
mov
jmp
movl
movl
jae
pushl
push
push
call
adc
sbb
sub
adc
movl
mov
adc
mov
mov
xor
orl
xor
or
and
mov
addl
push
xorl
pushl
addl
lea
adcl
push
subl
shl
call
addl
lea
andl
push
mov
subl
mov
lea
push
andl
mov
movl
lea
sbbl
mov
xorl
mov
mov
adcl
push
call
orl
push
sbbl
push
pushl
sbbl
call
and
mov
xor
mov
inc
mov
mov
add
shr
cmpl
not
movl
movl
movl
jmp
movl
jg
push
call
inc
sbb
adc
add
sbb
cmpl
mov
mov
jmp
mov
ja
push
call
and
adc
sbb
sbb
mov
xor
add
sub
or
shl
cmpl
mov
mov
mov
mov
jmp
movl
jne
push
call
add
mov
sbb
adc
sbbl
sbbl
adcl
or
mov
cmpl
mov
movl
movl
jmp
movl
jle
pushl
push
pushl
pushl
pushl
call
adc
xor
xor
add
xor
or
sub
xor
mov
sub
xor
add
adc
and
or
xor
mov
sub
mov
lea
mov
lea
mov
mov
sub
lea
xor
movl
movl
movl
movl
mov
mov
mov
mov
add
adc
xor
xor
and
mov
and
mov
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
push
push
or
or
push
push
call
mov
mov
sub
mov
sbb
mov
cmp
jne
cmp
je
movl
movl
jmp
incb
dec
dec
cmp
or
sbbb
out
adc
adc
test
dec
cmp
cmp
xor
xor
mov
ljmp
testl
xchg
or
fs
mov
bnd
cmp
insl
mov
negl
sahf
mov
into
fwait
fwait
imul
in
mov
xchg
jne
sub
addl
into
push
adc
ficoml
pop
dec
adc
shrb
shll
hlt
mov
mov
pusha
repnz
lods
mov
pop
mov
dec
andl
cltd
lcall
pop
and
loopne
jbe
jb
or
and
aas
in
xor
pusha
jbe
xor
popf
arpl
pop
in
div
gs
mov
xchg
mov
push
or
dec
fisttps
jecxz
mov
fldcw
jbe
jbe
sbb
js
int
adcb
xor
mov
inc
jl
push
fwait
addr16
push
push
inc
jp
inc
pop
push
pop
test
out
push
xchg
fadd
pop
stos
loop
repnz
push
push
xor
insl
or
and
dec
in
ljmp
mov
inc
pop
xchg
dec
call
inc
push
imul
mov
mov
push
pop
jno
shrb
or
mov
jae
int
sbb
xchg
xor
sbb
push
into
xchg
lods
jno
mov
inc
push
xchg
add
inc
dec
int
pop
ljmp
scas
ja
or
xor
and
or
inc
dec
sub
cmc
mov
shlb
or
aas
push
jg
add
out
push
xchg
xchg
leave
gs
jmp
les
xor
aam
call
adc
push
pop
push
or
jmp
bound
jmp
test
daa
push
mov
and
mov
popf
inc
inc
sbb
adc
jno
pop
pushf
xchg
lds
push
cmp
rcrb
fwait
repz
pop
inc
aaa
pushf
inc
stc
xor
lods
push
arpl
xor
mov
jmp
adc
loopne
xchg
out
jge
mov
push
mov
sbb
pop
push
mov
imul
jmp
stos
cmpsb
mov
pop
push
dec
sbb
dec
add
loopne
out
test
jne
mov
sbb
mov
popl
lods
push
sub
test
lret
addl
xchg
dec
sub
das
fwait
mov
sub
scas
out
out
sub
call
cld
ljmp
pushf
jnp
add
inc
and
and
add
dec
and
mov
mov
add
adc
xor
xor
and
mov
and
mov
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
push
push
xor
xor
push
push
call
mov
mov
push
push
push
push
call
mov
mov
push
push
push
push
call
mov
mov
add
mov
adc
mov
cmp
jne
cmp
je
mov
mov
mov
xor
xor
xor
shld
shl
cmp
jne
cmp
je
mov
cmp
je
mov
mov
mov
mov
xor
xor
shrd
mov
shr
shl
or
mov
xor
or
cltd
cmp
jne
cmp
jne
movl
movl
mov
mov
mov
mov
xor
xor
xor
shld
shl
cmp
jne
cmp
jne
movl
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
mov
mov
cmp
jne
mov
mov
mov
mov
mov
mov
movzwl
mov
and
mov
or
mov
add
or
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
or
mov
jmp
ss
adc
sub
xchg
mov
fsubrs
push
push
in
adc
adc
push
pop
pusha
push
aaa
inc
add
mov
in
int3
add
fwait
sbb
xor
je
xchg
ljmp
stos
cmpsb
popf
push
pop
repnz
pop
hlt
dec
fcompl
ret
idivl
insl
jmp
inc
mov
in
lods
dec
aam
call
mov
popa
or
and
mov
test
gs
movsl
jge
xlat
mov
lret
xor
jbe
repz
mov
xor
pop
xchg
lods
xchg
stc
test
push
stos
cmp
stc
gs
jp
mov
sbb
xor
addr16
xchg
stos
fnstsw
ds
jnp
loop
mov
bound
xchg
dec
add
mov
gs
sahf
daa
mov
sbb
mov
repz
push
add
cld
cli
mov
adc
mov
sahf
rcrb
jnp
push
popa
fiaddl
insl
or
ficoml
jbe
dec
flds
pop
roll
mov
mov
das
bound
out
push
decl
push
inc
and
sub
loopne
movsl
scas
fwait
movsb
repz
jne
cmpsl
xlat
lods
xchg
push
shll
fstpt
or
test
outsb
ret
int
fwait
inc
pop
push
sti
add
mov
xchg
in
insl
cwtl
mov
mov
dec
imul
sub
jl
imul
lds
mov
pop
jg
leave
test
stos
cmpsl
jl
mov
nop
and
pusha
push
fs
fsts
negb
push
repz
fisttps
and
jecxz
arpl
js
adc
dec
insl
xor
cltd
nop
mov
call
lret
out
cmp
mov
fs
or
and
mov
inc
inc
out
cmpsb
adc
ftst
push
inc
and
push
shll
js
dec
inc
add
nop
pushf
sbb
push
punpckldq
mov
and
insb
sub
ret
movsl
dec
aam
call
aam
cmp
push
outsb
sbb
pop
xorb
clc
in
mov
pop
xchg
mov
das
adc
gs
pop
jb
inc
mov
pop
push
outsb
pop
xor
xchg
sub
sub
lahf
out
dec
pop
insl
sub
cmp
out
jmp
jmp
lret
out
orl
dec
push
dec
cld
xchg
add
sbb
jno
rcrl
cwtl
sbb
jno
jmp
xor
sbb
xor
je
mov
xor
push
or
push
or
mov
sub
mov
sub
mov
cmp
jbe
mov
mov
mov
mov
movzwl
mov
or
mov
sub
mov
or
imul
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
sub
mov
xor
mov
imul
mov
and
mov
and
mov
cmp
ja
mov
mov
shrd
shr
mov
mov
xor
xor
or
push
push
push
lea
push
lea
push
shl
call
pushl
pushl
pushl
pushl
call
mov
mov
shrd
shr
mov
mov
shl
xor
xor
or
mov
mov
mov
mov
shrd
shr
mov
mov
shl
xor
xor
or
mov
mov
mov
mov
mov
cmp
jne
mov
mov
mov
cmp
jne
movb
movb
movb
movb
mov
mov
or
sub
mov
sub
movzbl
movzbl
cltd
idiv
movzbl
or
mov
movb
movb
movb
movb
movb
mov
mov
or
and
mov
imul
mov
movzbl
movzbl
and
mov
movzbl
cltd
idiv
mov
cmp
je
lea
push
lea
call
cmp
jne
cmp
jne
jmp
mov
mov
mov
mov
add
adc
mov
mov
push
push
lea
push
call
mov
push
pushl
lea
push
call
mov
mov
mov
mov
mov
mov
mov
lea
mov
add
movl
movl
mov
and
add
and
sub
and
mov
movl
jmp
cmpsb
xchg
mov
jns,pt
sahf
lods
xchg
leave
sub
in
adc
adc
std
stc
mov
std
push
out
out
dec
insl
in
add
int3
icebp
fnstcw
inc
aam
push
jge
or
adc
mov
sbb
mov
push
jp
dec
jb
xor
push
test
pop
pop
rorl
lcall
ljmp
dec
pop
push
xorb
int
repz
mov
fwait
add
cwtl
jp
stos
pop
xchg
and
or
rorl
fsubrs
mov
sbb
mov
loop
pop
movsb
jno
or
cs
int
out
sbb
jb
xchg
cwtl
fsubl
out
lahf
je
push
add
push
xchg
shlb
mov
mov
mov
mov
rcrb
scas
out
lea
movsl
aas
outsl
sub
out
xorl
das
sub
add
das
push
and
scas
jp
jl
mov
mov
lcall
cmp
sahf
popa
add
js
fcmovne
cld
pop
rorb
mov
jno
xchg
stos
xor
in
mov
out
adc
and
imul
cmp
out
mov
add
lods
pushf
dec
dec
jmp
dec
int3
dec
adcb
idivb
rcrb
mov
jns
mov
and
loopne
adc
daa
mov
jnp
sbb
aaa
mov
mov
fs
mov
ljmp
add
nop
fldcw
xchg
jo
mov
jno
adc
out
rcrl
outsl
xor
dec
lods
das
jno
pop
cwtl
out
pusha
sarb
mov
mov
sub
cmc
jmp
and
fsubrs
aad
ret
mov
and
sub
std
sub
xor
jg
mov
jg
xlat
sbb
pushl
shr
call
push
cmpsl
ljmp
and
add
sbb
movsl
sub
cmpsl
jae
inc
mov
mov
popf
sub
lret
adc
pop
jle
mov
or
outsb
pop
popa
inc
and
fcom
cltd
jge
cli
rcr
xor
ror
xchg
iret
enter
push
jno
ret
fld
ja
cltd
lcall
adc
inc
enter
add
ja
pop
push
mov
jb
xchg
xor
lods
mov
std
pop
out
cld
or
ds
sbb
adc
or
out
imul
pop
mov
jp
lret
xchg
lret
std
int3
mov
mov
or
add
cmp
je
mov
mov
mov
xor
xor
xor
jmp
cltd
add
cltd
fstp
jmp
lods
push
mov
push
loopne
adc
or
sbb
inc
dec
cmp
stc
lret
cltd
adc
pop
shrl
sti
mov
dec
enter
cmp
xor
jecxz
push
icebp
ret
inc
or
test
rorl
fbld
mov
ret
repnz
lahf
xor
cld
adc
pop
jl
sbbb
adc
jo
scas
cmc
inc
loop
inc
inc
jmp
fcmovb
mov
cmp
or
add
push
std
hlt
mov
subl
aas
adc
into
cmc
aad
dec
cmp
fstps
jge
adc
popa
pop
push
add
sbb
jno
and
std
daa
cmp
cli
mov
lds
pop
mov
sbb
dec
rorb
mov
add
dec
push
dec
stos
xor
cmp
lods
mov
ds
in
loopne
jb
loope
std
imulb
inc
ljmp
push
cmpsl
dec
gs
inc
fwait
les
push
out
bound
int
push
aas
push
sbb
sarb
pop
inc
cmp
repnz
pop
and
ret
push
or
push
out
mov
xchg
push
push
rcll
jns
sbb
loop
out
cld
js
clc
xor
es
push
sbb
and
adc
jnp
mov
pop
rorb
cmpb
mov
mov
dec
repnz
xor
clc
test
xorb
or
pusha
adc
stc
test
pop
sub
pop
add
sbb
jecxz
clc
call
daa
mov
push
xchg
aaa
dec
ret
ss
iret
add
dec
into
jmp
loop
into
or
push
ja
and
imul
aas
movsb
mov
aad
jo
pusha
dec
sbb
lods
daa
lahf
cltd
out
mov
outsb
loopne
push
fwait
enter
cmpsb
dec
xchg
cmp
cli
dec
insl
push
hlt
jb
push
push
sub
push
xchg
pop
mov
lret
daa
test
dec
xor
mov
mov
mov
leave
outsb
lahf
push
movsb
dec
arpl
stos
aaa
cmc
in
inc
sub
decb
aad
iret
push
pop
ja
and
and
fdivr
and
or
in
aad
or
je
xor
sbb
icebp
cltd
div
jnp
enter
repnz
mov
mov
push
pop
outsl
push
shrl
mov
lods
and
repnz
inc
scas
mov
movsl
adc
faddp
inc
push
leave
pop
sbb
leave
enter
push
mov
in
hlt
in
pop
rcrb
outsb
adc
ljmp
movl
shl
dec
sbb
movl
rorl
or
add
cmp
je
mov
mov
mov
mov
xor
xor
shl
shr
jmp
cmp
cltd
fistps
sbb
insb
ficoms
adc
shlb
xchg
jne
stc
and
sti
out
xchg
gs
jne
pop
mov
aad
sbb
pop
mov
jae
adc
insl
insb
xchg
roll
imul
lcall
adc
xchg
xor
cmp
or
xchg
adc
xchg
xchg
adc
popa
fs
frstor
mov
pop
jnp
mov
sti
mov
and
add
jl
scas
sbb
in
mov
or
mov
int
out
mov
sarb
je
ret
push
xchg
jae
stos
jne
aam
popa
mov
pop
fs
lods
push
cwtl
data16
sub
push
jb
push
adc
mov
xchg
daa
popa
cmp
test
aaa
dec
insl
out
mov
lahf
jnp
fmuls
and
inc
cld
imul
icebp
push
iret
aas
frndint
cmp
pop
std
lods
je
pushf
cmp
add
and
ret
movsl
or
mov
in
mov
shrl
repnz
out
inc
arpl
cli
lret
addr16
cmp
pop
stos
loope
mov
or
sbb
sahf
adc
xchg
cwtl
mov
lock
call
sbb
adc
movl
push
iret
pop
adc
lods
xchg
dec
push
add
lods
adc
xchg
push
jbe
mov
xor
aas
mov
lahf
fisubrl
jecxz
xor
push
or
imul
imul
movb
fsubl
xor
out
aas
enter
out
and
lcall
jb
xchg
popf
andb
mov
push
popf
ds
les
and
cld
cld
sbb
mov
and
pop
nop
jae
xchg
add
je
mov
lret
inc
jns
mov
xchg
dec
das
leave
push
out
mov
mov
jb
xchg
arpl
loope
mov
ds
mov
test
sbbb
nop
jne
ficompl
sub
sti
dec
jl
fwait
sbb
je
das
movsb
movsl
mov
ret
insb
cld
mov
lea
in
or
jae
xchg
sbb
aas
outsl
nop
in
pop
hlt
inc
pop
mov
jle
jne
cmp
lahf
lods
addr16
or
lds
mov
cmpsb
insl
outsb
stos
mov
clc
jnp
adc
mov
fwait
in
cmpsb
jns
xchg
sbb
push
sub
sahf
std
rcl
mov
jae
pop
sub
test
sub
mov
sbb
sti
mov
shll
xor
xor
and
cmp
jne
cmp
je
mov
cltd
mov
mov
cltd
shld
shr
xor
shl
or
or
mov
mov
xor
xor
mov
cmp
jne
cmp
je
pushl
jmp
pop
xor
jge
cmp
loopne
push
repnz
mov
xchg
movlps
loopne
je
and
stos
xchg
bound
xor
inc
cmpsb
loope
add
pop
enter
stos
dec
or
mov
inc
inc
xor
cmp
lret
fildl
push
mov
adc
jns
loop
lret
pop
inc
jecxz
iret
rcr
loop
inc
cld
mov
les
popf
and
cltd
addr16
fyl2x
jg
mov
lret
mov
xchg
outsb
subl
inc
mov
clc
negb
jno
repnz
sbb
push
add
enter
mov
repz
ret
cmp
imul
sub
mov
mov
mov
push
and
insb
outsb
aad
mov
scas
cmpsb
aas
mov
ds
mov
test
mov
pxor
test
incl
xchg
ret
divb
cmpsl
jmp
cmp
mov
popf
xor
fwait
mov
int3
jp
push
rcll
dec
inc
inc
mov
mov
sbb
into
add
ljmp
xrelease
lahf
imul
pop
rcr
mov
add
sub
movsb
int3
sub
cwtl
shrl
cmp
ret
hlt
je
sti
in
shrl
movsl
addr16
inc
insl
sahf
mov
xor
lock
push
mov
dec
mov
mov
sub
sub
xchg
inc
stos
aaa
loopne
add
xor
int
popa
and
aad
dec
pop
fmull
adc
inc
dec
addr16
mov
jp
cmp
cs
mov
cmp
adc
push
icebp
mov
push
xchg
or
repz
lahf
push
xor
repnz
ja
pop
jbe
pushf
orb
jo
xchg
push
xchg
outsl
lret
inc
lcall
sub
out
xor
mov
pusha
imul
imul
vpsubsb
lods
fstpl
pop
scas
je
inc
scas
inc
js
ljmp
addr16
out
push
add
push
push
mov
or
add
jno
inc
and
incl
rclb
mov
repz
ficomps
dec
cmp
xchg
clc
aas
or
pop
iret
loop
out
in
sahf
jle
xchg
mov
add
sbb
jge
sub
sbb
push
or
xchg
sub
sbb
insb
add
xor
inc
das
hlt
stc
cmp
adc
fldenv
and
push
mov
inc
jno
push
cmp
pusha
imul
cmc
ds
fwait
xchg
lock
pushf
pushl
mov
mov
pushl
mov
call
mov
mov
mov
mov
push
add
push
lea
push
call
mov
mov
pop
pop
pop
mov
pop
ret
push
mov
sub
movl
push
mov
mov
and
push
sbb
push
movl
movl
sub
movl
or
mov
movl
mov
xor
andl
div
imul
sbbl
mov
xorl
xor
and
mov
mov
sbb
mov
xor
orl
div
add
sub
mov
movl
cmpl
movl
not
mov
mov
jmp
mov
mov
jbe
push
call
adc
movzbl
sbb
mov
mov
or
and
mov
mov
sub
or
inc
sub
movl
cmpl
mov
mov
mov
jmp
movzwl
ja
call
adc
sub
sbb
inc
xor
movl
mov
orl
add
xor
cmpl
mov
movl
movzwl
jmp
movl
notl
jae
pushl
pushl
pushl
push
push
push
call
or
and
or
incl
mov
mov
and
and
xor
sbb
imul
addl
mov
and
sub
mov
mov
mov
and
movl
orl
movl
adcl
movl
movl
mov
sub
imul
mov
andl
imul
cmpl
mov
movl
mov
jmp
movl
movl
je
push
push
call
orl
xorl
xor
or
mov
or
mov
xor
xor
sbb
mov
jmp
pop
sahf
and
out
scas
sarb
rclb
adc
or
out
inc
cmp
mov
fstps
test
aam
in
pop
push
pop
inc
jmp
in
jo
movsb
or
out
and
inc
arpl
lret
clc
popa
shlb
movsl
mov
fsubrs
mov
aaa
cli
fimuls
add
jb
fsubrs
or
pop
xor
sbb
and
xor
cmp
cmp
insl
aad
clc
cmpsl
sub
stos
dec
mov
call
fbstp
pop
lds
inc
inc
movsl
fisubs
xor
sbb
pusha
loop
inc
stc
xchg
decb
xor
dec
inc
pop
adc
xlat
sub
in
xchg
sbb
jmp
cmp
adc
pop
jbe
popa
add
jge
test
lods
ret
or
stc
pop
push
xchg
ret
pop
mov
mov
add
dec
add
xor
inc
mov
arpl
adcb
ljmp
mov
jbe
sbb
dec
lods
cmc
sarl
mov
jl
mov
dec
repz
push
pop
or
sub
mov
shll
xchg
mov
push
xor
arpl
inc
cli
cmp
lods
inc
sub
call
je
pop
fs
push
dec
ljmp
jecxz
imul
and
and
js
inc
sti
sbb
pop
fistpl
adc
shl
lahf
lods
mov
sub
cs
fxam
push
cwtl
into
rcrl
aas
pop
scas
cmp
outsl
and
cld
leave
add
dec
cmp
shll
bound
mov
dec
mov
or
in
xchg
cmp
gs
cmc
xor
iret
sub
mov
es
lret
test
pop
in
xchg
test
leave
jbe
addr16
xor
mov
aas
and
and
pop
dec
xor
and
test
jno
mov
xor
rol
stos
pop
inc
imul
mov
subl
and
dec
or
xor
mov
subl
xor
cmpl
movzwl
mov
mov
jmp
mov
mov
jg
push
pushl
call
add
adcl
adcl
add
and
mov
add
orl
mov
mov
sbbl
lea
mov
or
movl
movl
sbb
movl
mov
or
xor
cmpl
notl
movl
not
jmp
movl
movl
jbe
pushl
call
or
xor
andl
movl
add
adc
mov
orl
or
and
add
cmpl
movl
mov
mov
jmp
movl
mov
jbe
push
call
and
add
xor
subl
and
add
xor
cmpl
mov
mov
mov
jmp
movl
jb
push
call
add
xor
add
sub
sub
xor
add
mov
add
subl
or
xor
mov
or
add
cmpl
movl
mov
movl
mov
jmp
mov
mov
jge
pushl
pushl
call
andl
sbbl
andl
movzbl
sub
add
adcl
xor
mov
movl
orl
movl
adc
movl
mov
and
add
cmpl
movl
mov
mov
mov
jmp
movl
movl
jle
push
call
xorl
xor
and
orl
orl
inc
mov
sub
mov
subl
lea
movzbl
sbb
mov
or
sub
xor
or
or
mov
mov
movl
movl
mov
or
add
xorl
imul
mov
imul
xor
movl
mov
div
sub
movzbl
or
mov
xorl
movl
sbbl
movl
movl
mov
mov
addl
xor
movl
div
sub
imul
adc
add
mov
orl
xor
xor
sbb
mov
div
xor
mov
movl
cmpl
movzwl
movl
jmp
mov
jge
pushl
call
not
or
adcl
adc
dec
add
movl
and
movl
cmpl
movzwl
mov
jmp
mov
movzwl
ja
push
push
push
push
call
adcl
adc
and
and
addl
mov
mov
sub
movzbl
xor
shr
and
sub
and
mov
imul
mov
subl
and
mov
adcl
jmp
cltd
adc
xor
sbb
js
push
data16
into
adc
adc
push
dec
dec
adc
ret
adc
movb
mov
xchg
dec
aas
cmpsb
cmp
daa
jecxz
pop
lods
aas
dec
mov
add
inc
dec
mov
add
stos
mov
inc
flds
mov
cmp
push
lcall
sbb
dec
stc
shl
daa
cmpsl
popa
cld
fmuls
mov
icebp
jle
test
adc
mov
int3
cli
xchg
or
into
push
in
lret
outsb
pop
push
sub
lods
notb
xor
push
or
data16
mov
sar
jmp
xor
cmp
ljmp
adc
sbb
add
mov
push
in
sbb
mov
jge
push
adc
loop
ja
imul
jnp
jns
pop
pavgw
jg
ret
mov
or
jne
mov
xchg
push
push
push
out
and
stos
or
dec
jg
imul
inc
fwait
cmp
or
movsb
js
push
scas
rcr
bound
and
xchg
add
xchg
ficoms
pop
lds
cmpsl
adc
jg
or
fstps
fwait
or
rcr
xlat
xor
imul
in
adc
psubb
pop
jne
cmp
iret
mov
jg
mov
rcrl
pop
sub
lret
mov
leave
int
push
lcall
test
sbb
incl
push
mov
je
cmp
in
sti
mov
jae
pmaxsw
cmp
jae
pop
pcmpgtd
push
cli
daa
inc
int
pop
inc
cli
fsubrl
xor
xchg
xchg
cmp
test
in
mov
adc
mov
sub
imul
loop
and
or
into
ret
mov
sarl
mov
leave
test
adc
inc
xchg
mov
add
dec
out
addr16
sub
lods
ja
movsb
shr
shlb
jge
push
repz
shll
adc
test
decl
rol
fcom
push
add
cmpl
mov
mov
mov
mov
jmp
mov
jne
pushl
call
notl
addl
orl
andl
and
movl
mov
sbb
or
mov
or
sub
adcl
mov
cmpl
mov
movl
movzwl
jmp
movl
mov
jg
pushl
pushl
push
push
call
add
sub
adc
movzbl
sbb
adcl
and
or
movl
mov
sbb
movl
addl
movl
cmpl
movl
movl
jmp
notl
jne
push
push
call
sub
xor
xor
mov
adc
or
orl
adc
andl
adc
mov
adc
movl
adc
movl
xor
xor
add
movl
movl
mov
add
or
mov
movl
sub
xor
mov
addl
imul
add
imul
or
mov
or
cmpl
mov
mov
mov
jmp
movl
jbe
pushl
push
push
pushl
push
call
or
or
xorl
sbb
xor
xor
subl
mov
lea
addl
push
call
and
mov
mov
jmp
test
mov
jbe
sbb
or
enter
cmp
ljmp
lret
ds
enter
jne
ds
jge
js
jns
adc
add
inc
pop
push
test
add
xor
stc
jnp
push
mov
sub
add
fs
mov
pop
repnz
fwait
hlt
test
repnz
daa
adc
cmpsl
sbb
mov
sub
arpl
jo
xchg
inc
fisubrl
popa
sbb
sbb
cltd
lcall
adc
int
and
movsb
jl
pop
cmp
xor
test
sub
insl
mov
fsts
push
push
push
pop
cltd
jg
jbe
bnd
sti
add
es
outsb
sbb
and
jp
aaa
sbb
out
xchg
lock
push
pop
gs
aam
mov
sbb
mov
ljmp
adc
adc
lds
lahf
idiv
mov
and
and
inc
jl
mov
aad
jae
dec
or
cmp
loop
adc
shlb
lret
mov
lea
in
das
adcl
aad
dec
cmp
cmp
je
add
sbb
repz
lods
and
cld
push
adc
xchg
xchg
sar
and
in
add
fcoml
xchg
dec
loop
pop
mov
mov
adc
sbb
leave
orb
shlb
mov
pop
mov
ret
push
pusha
jo
or
push
push
jno
shl
cmp
fwait
sub
xorb
aad
dec
cmp
insb
icebp
aas
pop
add
mov
and
cmpsw
pop
cmp
inc
inc
shr
dec
add
les
fmull
jae
jg
out
or
push
loop
jo
cmp
mov
ret
aaa
lret
stos
or
movsb
inc
push
push
in
fsubs
and
js
sti
iret
stc
lock
movsb
sbb
jp
mov
xlat
aaa
inc
aam
inc
mov
movsl
push
or
or
out
aaa
addr16
mov
jno
imul
add
cmpl
mov
mov
jmp
movl
movl
ja
push
call
add
add
dec
orl
addl
adc
and
cmpl
notl
mov
movl
jmp
movl
je
push
call
sub
xor
adc
mov
mov
sub
sbb
sbb
sub
xor
xor
mov
xorl
div
cmpl
movzwl
movl
jmp
mov
jbe
push
push
push
pushl
call
adc
movl
orl
sbb
adcl
xor
mov
mov
sbb
add
xorl
jmp
pop
and
and
cmpsb
js
shll
enter
cmp
cvtdq2ps
mov
mov
dec
pop
pop
push
push
mov
mov
movsb
rcr
cmp
movsl
pushf
cmpsb
mov
push
or
lock
nop
cmc
adc
pop
xor
andl
outsl
in
dec
xlat
xlat
ror
add
sbb
cmpl
fldenv
pop
pusha
jge
arpl
add
mov
fisubs
sbb
popf
inc
rcrb
pop
iret
sub
rorb
es
je
adcb
cmp
xchg
or
mov
ficompl
or
out
fsts
xchg
out
sbb
push
xchg
stos
lahf
dec
cmpsb
add
iret
pop
xor
imul
lea
pusha
sbb
push
push
mov
add
xor
cmpsl
scas
cmpsb
push
jne
push
aas
loope
push
jle
dec
repz
or
xor
sub
mov
loopne
xchg
imul
fwait
adc
jg
movsl
nop
dec
xchg
mov
mov
cmp
call
xor
push
flds
mov
dec
fmuls
icebp
int3
cwtl
mov
jb
xchg
jbe
or
or
aas
and
cli
jo
in
ss
sub
in
xor
in
push
jle
mov
js
inc
cwtl
jp
jno
mov
lcall
imul
imull
sti
std
je
int3
sbb
inc
rolb
test
mov
cmpsb
rcll
add
or
mov
inc
bound
sub
mov
lea
or
das
xchg
ret
sbb
popa
jmp
cmp
mov
sar
fstl
ror
nop
pop
sub
mov
cmc
arpl
adc
mov
dec
hlt
mov
pop
not
xchg
adc
shl
push
ret
dec
sbb
push
cmp
xchg
lret
mov
add
or
push
and
ret
push
fadd
test
pushl
jp
add
inc
mov
movl
movl
adc
movl
or
movl
xor
movl
movl
xor
add
sbb
mov
movl
cmpl
movl
not
jmp
not
jbe
push
push
call
xorl
or
subl
add
adc
sub
addl
movl
movl
cmpl
mov
movl
mov
jmp
mov
mov
jae
push
push
call
mov
or
xor
sbbl
neg
mov
or
movl
movl
add
mov
cmpl
movl
mov
jmp
movl
mov
jae
push
call
or
movzwl
or
mov
sbbl
sub
inc
xor
add
sub
xor
mov
add
mov
movzbl
or
and
movzbl
sub
mov
sub
sub
jmp
xor
es
and
jmp
js
mov
adc
adc
repz
lods
sbb
das
inc
xchg
xchg
mov
mov
push
add
js
and
std
lea
add
inc
mov
jle
pusha
mov
aad
cmc
ja
cmpl
lds
pop
in
xor
and
in
ror
dec
xlat
jl
mov
test
and
dec
stos
fisubrs
sub
fcoml
push
pushf
mov
ret
popa
lds
cld
cs
das
andb
add
icebp
sbb
cmp
xlat
paddw
loop
cltd
negb
push
roll
incl
fildll
or
pop
mov
push
mov
cmp
out
sub
dec
les
jl
loop
inc
mov
scas
pop
ss
xchg
pop
leave
lret
outsl
dec
pop
xor
ret
gs
in
sbb
es
in
jae
stos
fsubr
stos
out
jecxz
lods
jl
jbe
adc
ficoms
jmp
add
mov
adc
xor
fisttpll
dec
dec
imul
mov
insb
rorb
aam
out
cmp
lahf
push
lcall
mov
jns
mov
mov
mov
nop
fs
insl
notl
sub
lds
into
call
pandn
xor
inc
rcll
and
xchg
push
sbb
fstpt
inc
xor
in
mov
and
jb
pop
popf
push
jo
pop
xor
push
inc
cmp
iret
rcl
and
repnz
sbb
arpl
imull
sti
loope
ja
repnz
jecxz
inc
or
inc
add
loopne
out
rdseed
or
outsb
mov
pop
imul
cmp
outsl
icebp
mov
xchg
adc
js
cmc
push
cmc
mov
aad
sbb
or
sub
pushf
ja
imul
inc
dec
daa
stos
lret
and
jmp
lock
xchg
in
fwait
push
cmc
imul
ljmp
xor
inc
add
mov
mov
movl
jmp
movl
jle
push
call
and
subl
adcl
movzwl
adc
xor
sub
cmpl
movl
mov
mov
movl
jmp
movl
jb
pushl
push
push
call
sub
and
adc
adc
imul
xor
jmp
nop
push
push
sub
sbb
jle
dec
icebp
stos
jge
adc
adc
in
movsl
sbb
fistpll
lea
ss
jmp
xchg
jecxz
or
lcall
fs
repz
cmp
popa
adc
mov
mov
scas
jno
fidivs
add
adc
mov
fldcw
cmp
pop
push
xchg
movsb
popf
sahf
sub
ljmp
xchg
adc
je
push
mov
in
inc
scas
xchg
mov
adcl
rcrl
sahf
xor
fisubs
dec
lods
stc
pop
lock
push
sbb
shrb
daa
clc
icebp
punpckhdq
mov
ljmp
adc
inc
xor
mov
rorl
add
mov
jne
subl
cmp
out
insl
sbb
xchg
mov
mov
xchg
outsl
adc
jmp
out
ret
loop
xchg
inc
out
xchg
mov
push
std
sbb
aam
jne
fs
xor
jno
xlat
mov
jbe
inc
popa
mulb
or
jno
enter
aad
insl
stc
add
push
mov
push
xchg
nop
adc
add
icebp
jmp
inc
xor
or
jmp
imul
lds
adc
pop
mov
fnstsw
adc
in
call
inc
cmp
and
sti
je
adc
shlb
fsqrt
leave
push
sub
lret
and
jmp
movsb
push
ljmp
mov
testb
mov
aam
dec
cmp
pop
push
lcall
fildl
addb
cmpl
inc
cmp
dec
pop
push
aas
adc
sar
in
test
mov
push
push
cltd
mov
xchg
outsb
dec
fidivl
push
pop
lods
sbbl
jb
test
pop
mov
stc
pop
push
mov
mov
cmpb
sub
and
cld
xchg
ja
fnsave
mov
cwtl
mov
movsb
stos
push
fldz
fmuls
incl
testb
adc
test
sub
inc
add
xor
inc
add
notl
not
jmp
movl
je
push
call
movzbl
adc
mov
sbb
sbb
xor
subl
mov
mov
sub
or
or
mov
jmp
loop
out
cmpsl
inc
sbb
inc
mov
test
enter
out
insl
loopne
xor
insb
add
mov
fwait
and
sbb
xchg
inc
insl
pop
testb
sbb
xor
addr16
testl
sbb
cmpsl
push
xchg
das
or
std
into
mov
loope
repnz
inc
test
in
xor
sub
lods
fcmovne
aam
xor
jns
test
pushf
int
test
int3
addr16
loop
adc
imul
or
xchg
xchg
bound
xor
test
jo
es
mov
fnstsw
push
jb
pop
add
loope
js
sbb
add
fldt
enter
int
mov
bound
sahf
or
stos
xchg
cmp
in
call
xchg
mov
sbb
call
gs
fsubrl
sub
js
mov
add
ret
and
pop
faddl
fbstp
in
gs
adc
insl
ljmp
mov
cltd
inc
iret
lahf
rcrl
pusha
xchg
je
pop
cld
inc
pushf
lock
out
dec
pop
in
loope
loope
or
jb
adc
lds
pop
pop
xchg
jg
xchg
movsl
repz
mov
scas
adc
adc
test
daa
cmc
add
aaa
push
inc
aad
mov
pop
dec
add
mov
ret
aaa
out
subb
cmp
pop
out
decb
or
add
sahf
lds
xchg
push
rcl
jl
mov
dec
scas
cs
fisubs
loope
jo
ficompl
int3
push
hlt
jp
ljmp
cmp
pop
mov
jo
xor
clc
dec
repz
push
or
jae
mov
loopne
pop
cmp
fmuls
adc
xchg
inc
add
cmp
sbbb
mov
sbb
insl
out
fcompp
mov
push
or
mov
jl
mov
cwtl
pop
mov
xor
xor
or
add
xor
or
mov
sub
sub
mov
adc
lea
andl
and
movzbl
add
mov
mov
sub
add
mov
movl
adc
movl
cmpl
mov
notl
jmp
mov
jg
push
push
call
sbb
or
or
add
inc
sub
subl
movl
andl
movl
mov
cmpl
movl
movzwl
mov
jmp
mov
jge
pushl
pushl
call
add
xor
xor
and
and
movl
sbb
mov
mov
adcl
xor
andl
xor
xorl
mov
call
mov
mov
decl
mov
addl
mov
addl
xor
xor
adcl
mov
subl
call
decl
or
dec
or
add
mov
sbb
mov
xorl
xor
xor
mov
call
cmpl
mov
movl
mov
mov
jmp
mov
ja
pushl
push
push
push
push
call
subl
mov
or
or
and
mov
xor
or
mov
mov
decl
mov
add
mov
xor
andl
xor
subl
mov
cmpl
movl
movl
mov
jmp
mov
movzwl
jne
push
push
pushl
push
pushl
push
call
andl
subl
addl
subl
sbbl
subl
movl
mov
sbb
mov
notl
mov
mov
addl
call
adc
mov
adcl
or
sbb
mov
addl
or
incl
push
sbbl
push
sbbl
push
andl
push
call
mov
cmp
jne
sub
mov
mov
subl
xor
andl
xor
andl
mov
movl
call
sbb
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
jmp
inc
adc
cmp
pop
pusha
js
pusha
push
out
adc
adc
shrl
in
or
gs
pop
cmp
sbb
push
dec
mov
push
mov
stos
jmp
fisubrl
leave
add
add
mov
sbb
outsl
rolb
fucomip
int3
dec
fsts
jmp
pop
js
shl
xchg
shr
push
in
inc
sahf
cwtl
repnz
cmpsl
lock
mull
pushl
clc
mov
xor
rcl
pushf
ret
push
sub
data16
jb
dec
ja
mov
mov
jne
jne
pushf
ds
xor
repz
adc
jbe
test
notl
lds
xor
and
stc
movsb
push
mov
sub
fs
add
ds
inc
mov
sub
lds
push
and
hlt
fdivl
pop
shll
cs
aaa
cmpb
aam
ds
add
int
mov
test
in
or
in
insb
das
sub
js
jbe
cmpsl
xor
mov
pop
sub
mov
pop
sub
xchg
sti
cmp
push
fisttpl
jmp
push
mov
aas
outsb
mov
pushf
mov
mov
ss
inc
dec
fsub
cmpsl
xor
pushl
mov
mov
add
pop
and
dec
or
xor
call
xchg
cs
cltd
dec
nop
imul
in
outsb
push
add
pusha
aad
sti
pop
bound
xor
mov
loopne
jnp
out
adc
inc
mov
jno
std
pop
sub
sub
jo
sub
add
mov
loop
popa
inc
push
mov
mov
inc
mov
sub
stos
or
test
repnz
sbb
adc
mov
je
push
mov
xor
mov
es
dec
aas
imul
push
lcall
mov
test
inc
call
sbb
shrl
inc
loope
hlt
ljmp
mov
cmc
fcoms
in
stc
fwait
jbe
and
cmp
pushf
mov
mov
mov
call
or
mov
or
push
push
push
push
call
mov
jmp
jmp
lea
mov
mov
movl
mov
xor
shr
mov
jmp
leave
out
loope
pop
sub
xchg
test
mov
enter
fisttps
nop
cmp
repnz
lahf
jbe
inc
push
addl
ficoms
add
dec
inc
xchg
xchg
lcall
jle
lret
or
jns
je
inc
test
and
inc
es
test
sub
sbb
popl
fdiv
xor
pop
popf
cmc
push
add
shll
xorl
cmp
jae
sub
orl
inc
lock
cltd
ficoms
xchg
cmp
xchg
or
cmp
xchg
fnstenv
out
xlat
push
jae
inc
jp
sbb
pop
xor
lods
lods
jle,pt
adcl
mov
out
xchg
jg
add
in
mov
fidivs
push
pop
fnstcw
jmp
jp
cmpl
or
push
imul
sub
test
mov
lods
std
mov
in
jg
gs
mov
cmp
xor
push
adcb
imulb
cmp
or
jno
push
push
sahf
into
push
sub
insb
sarb
mov
adc
divl
dec
cmovg
add
pop
and
lret
sarl
xchg
imulb
fs
sub
cmp
mov
sub
sarl
imul
dec
mov
loop
lds
cmp
shrl
jl
clc
jl
sarl
data16
or
pop
push
add
addr16
xor
fists
lret
pop
into
imul
fidivrl
xchg
xor
shlb
les
mov
jae
cmp
stos
xor
stos
jl
mov
adc
pushf
and
jnp
imul
mov
out
fmuls
mov
out
in
dec
in
mov
xor
shl
or
mov
mov
mov
mov
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
xor
xor
mov
jmp
mov
popa
sahf
sbb
lods
insb
xchg
adc
adc
sbb
popf
push
push
xor
cmpsb
inc
jl
xchg
in
mov
mov
mov
push
inc
popa
in
mov
jae
movsb
sbb
xor
and
aam
mov
call
dec
sbb
outsl
xor
push
js
mov
fbstp
jp
xor
lret
nop
mov
out
rcrb
nop
pop
popa
jmp
inc
filds
mov
mov
or
cmp
cmp
jmp
cmp
jge
sbb
repz
enter
lock
fadds
add
xchg
xor
mov
clc
daa
mov
outsl
xchg
out
xor
adc
sub
movsb
test
cmp
lods
and
shrl
imul
cltd
mov
adc
cs
ficompl
ret
aam
fadds
jmp
mov
nop
aad
or
call
xchg
mov
aas
inc
out
sub
call
pop
push
cmp
imul
and
scas
xor
aad
inc
sub
cmp
out
clc
cmpsb
sbb
mov
outsb
lahf
out
lret
loope
mov
sbb
xchg
adc
jmp
nop
bound
adc
push
sti
dec
mov
mov
cmpsl
xchg
sub
into
fistps
insb
lahf
aad
lcall
daa
xlat
icebp
lcall
dec
aaa
fbstp
ds
or
mov
std
test
and
call
sub
loop
xchg
lcall
mov
push
enter
lds
ljmp
loop
es
mov
dec
lods
and
pop
sbb
cwtl
push
mov
sbb
out
mov
leave
pop
push
and
sbb
sbb
aam
or
iret
xchg
xor
shrb
cmp
subb
rorl
push
lock
lret
add
pusha
test
sub
adc
mov
cld
frstor
call
mov
mov
mov
mov
xor
xor
mov
mov
mov
mov
mov
call
mov
or
mov
or
push
push
push
push
call
mov
cmp
je
mov
mov
xor
jmp
add
xor
and
aas
loope
xor
js
mov
lods
add
adc
pshufw
leave
inc
stos
cmp
pop
jae
pop
dec
sbb
outsl
test
dec
ficoml
push
sbb
test
pop
adc
loope
popa
mov
adc
addr16
sbb
pop
sahf
and
movsb
or
xchg
movb
outsb
xor
pop
rcll
mov
pop
movsl
movsb
roll
jmp
addr16
sub
push
insl
push
mov
adc
jnp
xchg
clc
jecxz
fisttpl
sub
fnsave
das
dec
jne,pn
out
insb
outsl
sub
inc
adc
push
xchg
sbb
sbb
ret
pop
xchg
jo
ja
loop
ffreep
icebp
cmp
inc
insb
jmp
jno
jo
xchg
fs
scas
inc
inc
mov
nop
mov
xor
xchg
add
popf
add
jno
fldcw
fnstcw
dec
es
inc
mov
cs
push
push
out
sbb
adc
push
je
and
fisttps
out
and
test
push
movsl
mov
xor
mov
in
jmp
ss
xor
popf
lds
pop
mov
pop
adc
adc
mov
pop
pop
and
movsl
push
popa
pop
dec
sub
daa
sub
hlt
aad
mov
out
add
mov
shlb
in
inc
adc
pop
cmpsb
xchg
xor
imul
out
addr16
fistl
pop
mov
cmp
cmpb
jno
addr16
mov
xchg
mov
pop
rorl
mov
inc
call
out
cs
rcrl
jnp
xchg
inc
xor
gs
mov
pop
test
dec
cmp
std
jmp
and
jb
outsl
mov
sbb
xor
jl
push
fadds
cld
and
xchg
test
cmp
fists
iret
shl
into
adcl
or
mov
fmuls
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
imul
add
mov
mov
mov
jmp
jmp
mov
mov
xor
xor
mov
jmp
insl
xor
jb
push
sub
mov
mov
enter
inc
pop
fwait
loopne
int3
int
repz
pop
sub
fwait
push
mov
lds
add
xor
out
push
mov
fnstcw
cmp
mov
sbb
mov
or
pop
mov
jo
push
scas
jmp
pop
movsb
xor
xor
add
enter
outsb
jg
cmc
adc
jbe
shlb
enter
ret
leave
mov
pop
and
mov
cmp
test
fisubl
sbb
inc
xchg
mov
clc
data16
pop
test
add
movsb
jb
out
inc
sbb
inc
popf
mov
xor
xor
push
dec
dec
mov
cld
mov
aad
out
sbbl
jo
and
or
xchg
sub
push
cmp
rcll
sub
ud0
nop
rcrl
xchg
and
dec
idiv
movl
js
push
lock
js
mov
jle
ljmp
ret
push
bound
add
fisubl
mov
mov
jns
mov
jecxz
jae
call
bound
ret
lret
adc
add
bound
xor
mov
dec
outsl
loop
ja
enter
jge
vpcmpgtb
cmp
push
pop
dec
stc
dec
fwait
xor
pop
sbb
xchg
or
and
ret
movsl
cmp
or
push
add
jge
mov
and
cmp
sbb
or
call
mov
jne
cwtl
sbb
lcall
sbb
pop
xlat
cmc
and
fwait
push
rol
xor
mov
pusha
adc
add
mov
scas
stc
enter
cmp
xchg
sbb
xor
test
data16
je
fistpl
iret
jbe
and
insl
pop
cld
xchg
jl
into
mov
imul
and
push
lods
dec
mov
shll
test
cmp
loop
jp
add
sub
out
push
shr
scas
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
mov
mov
call
or
mov
or
push
push
push
push
jmp
pop
cli
xchg
ret
xchg
push
pushf
adc
adc
fcoml
hlt
ljmp
sar
pop
mulb
sub
xchg
ds
dec
icebp
fstpt
ret
dec
xor
jns
xorl
ja
test
addr16
das
push
xchg
sub
lcall
dec
add
adc
sub
mov
test
mov
push
cmc
xlat
xchg
sub
inc
call
imul
out
add
out
xlat
cmpsl
xor
in
repz
int3
scas
mov
or
shrl
cmc
inc
mov
enter
in
xor
je
sub
add
xchg
imul
jmp
cs
cmp
shrb
pop
das
jns
jne
xchg
and
idivb
icebp
sbb
sub
jecxz
sahf
sub
flds
inc
xchg
rclw
loop
lret
xchg
sbb
lds
sbb
filds
add
ds
shl
push
sub
or
push
and
cmp
mov
int
ja
pusha
cli
in
clc
test
or
into
scas
mov
xchg
pusha
sbb
cmpsl
push
lea
xchg
dec
push
or
insb
push
cmpsb
imul
imul
enter
enter
out
aas
jp
push
or
test
jge
pop
movsl
lret
cmc
push
sbb
add
jns
jo
cli
add
jmp
mov
push
lods
adc
sub
jecxz
out
pushf
call
xchg
sbb
ja
push
int3
outsl
xchg
adc
mov
dec
add
or
fwait
and
push
in
push
ficomps
pop
add
pop
clc
and
in
stos
loopne
orb
lods
out
out
and
mov
lods
inc
out
push
push
sahf
pop
or
cmp
js
out
cwtl
mov
push
xor
dec
jnp
adc
int3
jge
cmc
jo
cmpsb
ljmp
mov
test
cltd
add
add
decl
pushl
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
mov
xor
div
mov
and
add
mov
lea
xor
add
mov
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
xor
div
add
mov
and
xor
add
mov
mov
sub
mov
or
mov
and
mov
xor
mov
mov
sub
mov
imul
xor
xor
mov
mov
add
add
mov
movl
movl
movl
movl
movl
movl
mov
xor
mov
imul
mov
lea
mov
and
and
xor
push
pop
div
imul
jmp
stos
cmpl
and
sahf
sarb
push
ljmp
enter
enter
and
sti
jb
jl
mov
pop
lods
lcall
adc
add
stos
mull
imul
mov
sbb
mov
jg
leave
push
ds
and
jmp
push
jne
xchg
mov
pop
mov
push
and
int3
ds
rep
pop
fisubrs
vmread
push
xchg
cmp
mov
rcrb
out
addr16
sbb
fmull
sub
or
pop
xorl
mov
mov
sbb
cmpl
or
or
push
rclb
mov
dec
jl
xor
divl
arpl
adc
test
roll
ja
mov
push
in
rcrb
in
mov
out
and
jl
in
mov
movsl
mov
fwait
mov
lahf
dec
dec
mov
pop
gs
loope
mov
or
jns
lret
scas
test
cmp
lds
lds
cmp
lahf
les
imul
jmp
fsubrl
add
arpl
lcall
bound
and
sub
jns
pop
mov
and
orb
loopne
mov
out
cwtl
mov
movsb
adc
ret
test
loopne
add
daa
mov
in
pop
out
inc
mov
les
sub
cmc
jecxz
mov
dec
enter
xor
and
cmpsl
jecxz
imul
fwait
mov
dec
push
jnp
push
es
mov
push
inc
int3
inc
std
scas
mov
jns
dec
push
xchg
lret
pop
push
orl
jecxz
jl
add
sbb
es
mov
pushf
stos
sbb
mov
ror
js
cld
push
fisttpll
outsl
mov
orl
insl
test
xchg
hlt
ljmp
fisubrs
ret
js
out
add
cs
xchg
pop
add
mov
or
add
imul
mov
xor
xor
mov
mov
add
add
mov
movl
movl
movl
movl
movl
movl
mov
xor
push
pop
div
mov
or
mov
xor
div
imul
mov
lea
mov
and
and
sub
xor
mov
xor
mov
and
and
or
mov
mov
add
lea
mov
andl
jmp
mov
inc
mov
mov
mov
cmp
je
mov
mov
mov
add
mov
mov
mov
mov
mov
jmp
and
lret
sbbl
js
fiaddl
rclb
adc
pop
dec
jo
adc
sbbl
jae
mov
in
or
lods
sub
insl
out
pop
add
xorl
subb
nop
int3
subb
mov
lahf
in
jecxz
shlb
adc
xchg
scas
mov
aaa
adc
cmp
insb
movsl
cmpsl
out
repnz
cld
sarl
es
ds
out
inc
adc
loope
cmp
insb
xlat
pop
xchg
cli
cmp
xor
cmp
or
xor
mov
jno
popf
aaa
ljmp
jbe
dec
add
cmp
push
fldcw
orl
pop
add
sub
stos
cmp
aam
and
rorb
leave
neg
add
enter
lret
sbb
movsl
and
add
add
test
hlt
sbb
pop
sub
push
stos
pop
icebp
xor
and
xlat
imul
stc
push
pop
cmc
aaa
jle
lahf
sub
xchg
lcall
adc
jo
repz
cmpl
cltd
sahf
cmp
mov
adcb
jle
jno
jnp,pn
adc
adc
gs
or
adc
or
jo
mov
test
xchg
mov
fildl
add
out
lret
push
fbstp
ret
mov
es
aaa
push
push
ja
xlat
bound
sub
lods
std
data16
adc
xor
iret
push
and
jg
add
mov
and
jle
push
mov
flds
mov
scas
in
pop
pop
int3
in
pop
push
fwait
push
sbb
xor
add
je
movb
lock
cmp
sbb
add
xchg
lcall
test
aad
jmp
cmpsb
and
sbb
mov
cld
jnp
test
sbbb
jl
sub
xchg
mov
ret
test
ljmp
pop
pushf
xchg
dec
mov
fsubl
pushl
lret
adc
fmuls
and
pushl
imul
fmuls
sbb
decl
decl
decl
mov
and
inc
add
add
pop
lods
mov
and
pop
mov
cmp
xchg
adc
adc
jg
aam
pop
pop
and
jae
js
mov
mov
mov
test
cmp
jge
ret
jo
in
ret
outsb
scas
push
fucomp
outsb
jl
aam
lea
mov
pop
imulb
jo
and
sbb
in
push
dec
mov
mov
sub
sti
cmp
push
fwait
xor
sbb
imul
cmp
imul
pop
dec
cltd
lds
stos
fidivrs
push
sbb
xchg
arpl
and
bnd
xchg
jecxz
rcrb
mov
ds
orl
frstor
push
bnd
mov
or
adc
cmpsb
sbb
push
sbb
xchg
fstpl
jo
jl
jne
and
or
mov
mov
hlt
or
cmc
bound
mov
sbb
imul
enter
out
es
cmp
mov
mov
dec
cmc
xchg
push
dec
stos
jnp
add
or
gs
mov
loope
dec
imul
pop
pop
mov
std
imul
or
andl
rcrb
outsl
mov
aad
jae
inc
std
mov
adc
jl
and
mov
jmp
setg
cli
int3
xchg
test
sti
punpckldq
stos
push
mov
sti
adc
sub
in
sarb
arpl
pop
in
test
mov
test
mov
add
mov
fidivrs
shl
mov
ljmp
enter
addr16
push
inc
outsl
lea
and
das
sbbl
jg
icebp
xchg
les
cmc
dec
jae
loop
sub
sbb
cmp
pop
sbb
dec
jns
insl
pop
popf
jmp
add
or
push
repz
xor
out
mov
data16
lock
xor
xor
movzwl
sar
mov
movzwl
xor
movzwl
shl
or
movzwl
mov
mov
mov
mov
jmp
dec
sbb
sbb
sbb
sbb
scas
sbb
in
in
cmp
adc
and
in
sbb
mov
cmpsl
into
or
sti
mov
mov
ss
fistpl
cs
add
addl
mov
movsl
sbb
xor
mov
jecxz
icebp
xor
sbb
push
mov
adcb
out
or
push
push
mov
das
jecxz
js
test
in
sahf
fists
jp
adc
push
adc
std
mov
push
pop
xlat
add
ret
cmp
cmp
mov
or
test
mov
adc
inc
bound
sbb
push
mov
movl
call
inc
lods
std
xor
fcoml
enter
and
mov
movsb
jbe
loope
cmp
cwtl
xorb
aaa
test
mov
popf
dec
or
xor
inc
sub
fnsave
ret
push
loop
cmp
int
pop
cmp
cmp
les
jg
ds
jnp
outsb
fnstcw
jle
and
push
fistpll
xor
pop
mov
shr
dec
out
dec
sub
pop
out
push
sub
fisubrl
cmc
jl
cmp
xchg
dec
fldt
mov
sbb
aaa
cmp
jae
cld
push
jp
cld
sbbl
cmp
repnz
inc
hlt
add
mov
dec
cwtl
jne
and
das
je
in
push
dec
fsubp
cmpsb
je
out
mov
push
loope
dec
fcomps
pop
loopne
inc
dec
dec
mov
mov
nop
loopne
pushl
std
popa
test
aas
mov
es
push
daa
or
cs
popa
cmp
test
push
dec
lods
mov
cmpsl
pushf
clc
mov
jne
dec
xlat
or
loop
data16
jl
jmp
mov
test
add
mov
or
add
xor
jl
cmp
dec
mov
cmp
fwait
es
xor
xchg
xorb
out
icebp
movsb
je
js
cmp
sbb
jp
adc
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
movzbl
push
lea
push
call
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
jmp
push
pop
inc
ficomps
clc
les
out
mov
adc
mov
scas
push
add
jle
cmc
fists
and
imul
pop
ljmp
add
mov
add
push
in
scas
sbb
cltd
repz
loope
arpl
add
popf
pop
mov
es
fstl
das
add
inc
jbe
push
or
pop
push
push
popf
pop
dec
notb
lea
imul
dec
mov
gs
mov
dec
mov
inc
adc
pop
cld
mov
mov
push
inc
into
popf
shll
add
ja
in
inc
loope
dec
pusha
repz
cmp
lods
mov
pop
push
call
sbb
gs
xchg
shlb
xchg
sbb
ret
cmp
repz
dec
adc
jnp
and
insb
cmpsb
or
mov
add
pop
pop
mov
dec
and
push
clc
outsl
adc
clc
sbb
or
cmp
shlb
inc
pop
fwait
arpl
pop
mov
lods
mov
or
push
shlb
xchg
in
in
or
push
pusha
pusha
in
fcoms
push
pop
rorl
call
rcrl
cmp
sbb
add
sbb
jnp
ljmp
push
dec
push
js
in
jb
aam
aad
pop
sub
inc
fnstsw
rcl
lcall
mov
cmp
xor
pop
cmp
dec
int3
push
xor
fcmovnb
and
or
dec
dec
add
ss
xchg
jns
movsl
pop
cmp
sbb
icebp
insl
outsb
in
add
pusha
jns
push
aaa
icebp
lret
lahf
push
fsub
mov
adc
jne
repnz
pop
in
ficompl
sbb
inc
in
lret
xor
lea
xchg
pop
outsl
dec
insl
and
je
into
xor
inc
jnp
mov
pushf
mov
cmp
cmpsb
les
jle
dec
loop
sahf
pushf
or
icebp
xlat
les
iret
xor
xor
mov
call
or
or
mov
jmp
mov
mov
xor
xor
mov
call
mov
jmp
out
add
popa
cmpsl
aad
stos
pop
mov
xchg
adc
cs
adc
dec
xchg
mov
scas
insb
cli
sti
cli
fs
xchg
fldt
mulb
es
pop
jecxz
imul
mov
xchg
xor
andl
testb
stos
sar
xchg
jne
xor
jne
xchg
push
jae
pop
lds
mov
cld
sub
sbb
dec
fcomps
jb
icebp
pop
arpl
cltd
stos
inc
or
dec
mov
mov
les
es
xchg
dec
lret
repnz
clc
push
insl
jle
jo
add
fmull
push
and
or
imul
loope
test
mov
dec
or
scas
mov
jle
cs
push
dec
imul
mov
in
data16
sub
test
push
adc
lret
xchg
lea
and
sbb
bound
push
pop
xlat
jae
pop
mov
lret
incb
push
aas
mov
into
aaa
sbb
lret
loop
mov
push
fcoml
xor
jb
rol
mov
jg
lock
fdivr
fsubs
sub
movsb
data16
mov
test
ljmp
add
js
daa
in
sbb
iret
lea
or
inc
negl
xchg
iret
cmp
jle
pop
repnz
mov
mov
mov
mov
adc
push
mov
cwtl
fwait
icebp
decb
les
js
lea
and
push
mov
push
sbb
cmp
lahf
mov
xor
sbb
cmp
imul
and
sub
pop
push
imul
pushf
xchg
rorb
ret
shrb
inc
ret
aam
rcrl
or
js
mov
sbb
mov
ret
xchg
push
mov
dec
add
add
hlt
fsubs
test
cmp
push
inc
ljmp
xor
cmp
fsts
mov
cmp
or
aaa
pushf
iret
cmp
loope
lea
add
sbbb
into
mov
mov
mov
xor
xor
mov
call
or
jmp
mov
or
mov
push
push
gs
adc
movlps
xchg
and
mov
mov
pop
add
jle
cmpsl
adc
and
pop
sub
jae
mov
stc
sub
movsb
insb
jle
hlt
mov
int3
jns
xlat
xor
arpl
mov
jnp
jmp
push
aam
lahf
dec
cmc
mov
outsb
xor
add
cmp
mov
std
push
or
inc
fcomps
cmp
or
ljmp
push
lds
xchg
rclb
inc
or
jnp
popa
leave
mov
call
mov
in
test
mov
cmp
mov
fs
sub
push
icebp
out
cmp
and
test
mov
xchg
inc
es
cmp
sbb
xchg
insl
push
dec
out
call
jmp
adc
jno
jo
movsl
js
mov
out
jnp
mov
mov
add
test
adcb
das
in
push
pop
out
insl
dec
xchg
fld
stc
scas
sub
adc
sti
add
xchg
mov
sub
loop
jmp
sub
sbb
push
call
cmpsl
loop
inc
jae
lds
out
mov
jne
dec
xchg
sub
inc
push
sbb
push
ret
hlt
iret
cmp
adc
test
mov
fwait
rorb
cmp
roll
repz
mov
aaa
imull
xchg
lcall
adc
hlt
sbb
loope
mov
mov
and
xchg
es
cmp
mov
sti
hlt
dec
or
push
out
int
fidivl
inc
push
ja
jge
call
ret
insb
stc
pop
pusha
call
cwtl
out
pushf
fwait
or
fisttps
and
jnp
lock
int3
das
arpl
or
into
aaa
mov
sub
cli
add
mov
mov
cmp
jmp
stos
js
pop
and
mov
push
or
or
adc
movlps
fsubrs
int3
cmpl
test
mov
leave
jne
or
scas
shll
cld
in
fcmovnbe
mov
sbb
stc
js
dec
mov
mov
and
cmpsl
jl
das
dec
enter
adc
and
push
mov
imul
testl
push
icebp
in
adc
jo
ja
pop
sbb
xchg
sarb
pop
fdivl
data16
test
pushf
add
dec
adc
mov
mov
cmp
cwtl
xbegin
jg
gs
sbb
in
int
sbb
mov
rcrl
jp
lods
aad
lds
jp
orb
fisubrl
mov
aas
ss
mov
cmp
cmp
lods
dec
int
dec
sub
test
pop
dec
dec
mov
andl
data16
scas
push
inc
and
iret
addr16
mov
aas
xchg
and
lds
push
fdivs
jno
stos
das
test
nop
and
or
cmp
mov
mov
outsb
mov
out
fucomp
lcall
invd
cwtl
notl
adc
stos
and
pusha
jnp
shrb
rcrl
xor
loopnew
pop
test
push
xlat
jne
inc
xchg
mov
shrl
jmp
insl
dec
inc
loope
out
mov
xchg
pop
mov
push
inc
push
out
pop
fistl
scas
out
cmp
jecxz
fcomps
sbb
push
mov
push
insb
js
data16
mov
out
jno
cs
aaa
mov
in
mov
in
mov
dec
cli
icebp
lahf
outsb
or
test
add
xor
sub
or
shlb
add
aaa
lret
mov
fldenv
lret
or
pop
cmp
pusha
cltd
cld
movntps
insl
outsb
mov
in
dec
lcall
push
movsb
pop
sarb
aam
add
mov
mov
movzwl
xor
movzwl
sar
jmp
ds
in
mov
xchg
js
in
insb
mov
movlps
pop
pop
ret
das
and
adc
or
ffreep
mov
push
movsb
and
mov
or
ss
cmc
mov
lds
ffreep
xchg
addr16
mov
lret
mov
das
xchg
lret
and
add
lock
pusha
mov
int3
xor
sub
scas
fdivrs
pop
or
sbbb
negl
arpl
adc
mov
pop
push
adc
stos
sub
mov
arpl
or
fbstp
adc
push
inc
and
sbb
iret
adc
bound
idivb
push
pushf
in
add
adc
sbb
push
dec
jae
cmc
xor
mov
xchg
lods
in
xor
out
sub
push
cmp
cld
dec
xor
enter
sbb
jae
flds
cli
push
loope
fcmovnb
mov
adc
pop
jbe
push
mov
sub
cmp
imul
xor
fcom
xchg
mov
dec
scas
dec
or
mov
jb
fcomi
and
hlt
dec
sahf
nop
adc
movsl
loop
dec
frstor
sti
adc
adc
inc
sub
mov
je
jl
cmpsl
lea
sbbl
fisttpll
pop
inc
lods
addl
insb
sub
push
xor
sbb
inc
jg
mov
jo
xor
pushf
cmp
pusha
or
jle
cld
mov
dec
sbb
push
push
push
and
or
xchg
ret
outsl
push
adcb
in
push
adc
add
push
jnp
mov
loope
or
jo
fidivs
mov
sub
ror
jmp
pop
jae
push
dec
fdivrl
cli
jg
jno
ljmp
movb
push
xchg
ja
cwtl
mov
fstps
cmp
inc
movsl
imulb
mov
lret
ja
lods
pusha
int
cmpl
notb
pop
dec
or
fdivrs
push
dec
and
outsl
dec
insl
pop
faddp
lods
mov
lea
decl
decl
mov
mov
xor
movzwl
shl
or
movzwl
mov
mov
mov
movzwl
xor
movzwl
sar
mov
mov
movzwl
xor
movzwl
shl
or
mov
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
mov
xor
xor
jmp
jns,pn
xchg
pop
subl
js
and
adc
adc
mov
or
fistpl
cmpl
xchg
xor
sub
sbb
out
lods
gs
popf
sub
mov
dec
out
inc
mov
pusha
sbb
lock
scas
jg
repz
addb
xor
sahf
int3
push
inc
or
mov
incb
add
mov
enter
push
xor
adc
lcall
inc
add
dec
and
push
jno
jecxz
pusha
dec
xor
fwait
and
sub
and
jge
lock
aaa
xor
adc
dec
ret
iret
mov
sub
repnz
xor
sbb
push
jb
popf
mov
sbb
mov
mov
pop
adc
xchg
jno
fistps
into
or
mov
sub
push
ds
xchg
pusha
push
movsb
fidivrl
pop
pop
push
repz
rolb
aas
ds
popf
inc
int
in
cmp
jmp
mov
mov
lret
cmp
adc
dec
xchg
stos
adc
lods
xchg
scas
call
jmp
mov
test
scas
imul
out
pop
dec
sbb
mov
lock
push
xor
jmp
push
fdivs
mov
mov
push
cmp
jecxz
lds
mov
mov
add
shl
jae
mov
lahf
outsl
je
jge
ret
mov
pop
mov
rcrb
lcall
fildll
cmp
inc
sub
jmp
sub
jl
sarb
rcr
popf
xchg
adc
imul
or
test
inc
sahf
adc
add
clc
xchg
pop
adc
adc
add
sbb
pop
xor
outsl
arpl
inc
lds
rcrb
push
sbb
fdivrs
andb
xorl
pop
daa
out
push
dec
cmp
cmp
shll
push
inc
push
add
lahf
decl
test
decl
pushl
xor
mov
call
or
or
mov
mov
mov
or
je
lea
mov
mov
xor
mov
call
mov
mov
mov
xor
mov
call
or
or
xor
xor
mov
mov
mov
mov
movsbl
mov
mov
xor
xor
mov
call
jmp
arpl
or
push
loop
push
mov
enter
das
daa
adc
cmp
jecxz
in
mov
in
cmp
push
out
xchg
mov
notl
dec
mov
or
out
ds
sbb
cmp
pop
jge
arpl
movsb
mov
ret
divb
fsubl
or
jmp
push
mov
scas
pop
xor
ljmp
ss
jl
lods
addr16
loopne
addl
inc
icebp
imul
adc
sub
push
jne
mov
jle
xorl
jnp
enter
aas
dec
stos
sarl
xor
xor
inc
ds
mov
adc
scas
out
lds
jg
xor
lcall
cmp
je
mov
inc
mov
in
cwtl
mov
mov
jns
mov
lea
into
out
test
inc
push
data16
ja
xor
adc
push
in
mov
xchg
mov
jle
pop
nop
in
movsb
and
pop
imul
jnp
out
xor
cmp
aam
mov
fcmovu
pop
adc
outsb
cmp
dec
outsl
push
test
xchg
push
lcall
addb
daa
jge
inc
xchg
cld
mov
pop
jle
addr16
xor
dec
dec
stc
imul
inc
dec
cmp
add
repz
aad
xor
cmc
inc
imul
jbe
cmpb
xchg
cmc
add
imul
xchg
std
pop
arpl
sbb
xor
jnp
jne
push
aaa
sub
push
stos
mov
cmp
mov
adc
adc
or
and
lods
mov
rorb
fildl
dec
xchg
xchg
clc
jl
or
arpl
daa
mov
ja
repz
xchg
lods
inc
mov
mov
mov
adc
aad
js
out
repz
inc
xor
in
out
rclb
inc
dec
mov
cmpsl
and
cmpsb
mov
mov
mov
mov
xor
xor
mov
call
or
or
movsbl
cmp
je
jmp
xorl
jns
sbb
pop
lods
jae
punpckhdq
push
adc
pop
push
sbb
stos
mov
pushf
clc
or
cmp
mov
loopne
push
enter
gs
jecxz
nop
xchg
mov
xor
inc
jle
iret
lods
push
pop
jbe
sahf
mov
loopne
ret
sbb
mov
rcll
fbld
xchg
idivb
or
sbb
push
sub
mov
mov
nop
add
scas
push
xchg
xchg
push
adc
or
xchg
sbb
repz
fidivs
popf
push
jge
lret
fisubrl
push
xchg
lods
sub
pop
call
or
inc
cmpsl
sub
pop
lret
jecxz
addl
leave
test
stos
pushf
add
hlt
mov
xchg
les
jns
mov
ljmp
xchg
pop
stos
fiaddl
jbe
rcl
xor
mov
sub
jnp
aam
mov
cs
das
fdivs
mov
xlat
aad
push
cs
and
jb
sahf
sbb
lock
shrl
lds
dec
loope
mov
mov
subb
mov
ja
add
xchg
dec
mov
cmp
jns
sbb
mov
dec
fisttpll
subl
ficoms
sbb
iret
mov
xor
xor
jb
sbbl
inc
adc
jo
xlat
adc
mov
jmp
imulb
adc
mov
repnz
mov
xor
enter
cld
rorb
jo
repz
push
push
scas
leave
mov
mov
jg
test
and
add
fldenv
cmp
xor
cmp
pop
loop
push
cmc
inc
loope
mov
xchg
inc
mov
stc
cmp
imul
iret
addl
inc
jmp
outsl
scas
call
aam
sub
xchg
cwtl
push
mov
dec
or
dec
lret
pop
in
pop
dec
sub
and
dec
mov
fdivr
fsubl
push
mov
movsbl
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
movsbl
cmp
je
jmp
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
movsbl
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
movsbl
cmp
jne
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
add
mov
jmp
jmp
mov
mov
xor
xor
jmp
adc
fldl
out
cli
pop
push
or
enter
cmpsl
mov
fs
pop
stos
cmpsb
ret
cmc
sbb
push
loopne
jge
dec
mov
push
adc
lcall
fsubrl
lret
outsb
pop
mov
jne
or
es
dec
xor
mov
lods
aad
fmuls
pop
or
cmc
ss
xor
mov
fcoml
pop
xor
inc
cli
jmp
or
add
call
int
jbe
or
push
cmpsb
push
out
leave
lods
mov
fsubrp
jno
scas
outsb
jle
push
in
aas
loopne
lmsw
xlat
pop
lock
mov
sbbl
inc
mov
mov
dec
clc
fwait
ret
pop
pop
push
mov
jl
arpl
inc
ja
in
or
rcl
cmp
mov
loope
imul
jbe
add
and
push
sbb
rolb
xor
scas
sbb
cs
leave
and
imul
sub
and
mov
bswap
xor
and
call
and
dec
mov
rcrb
and
cmp
jmp
insb
pop
or
or
jmp
icebp
cmp
push
test
sbbl
addr16
and
jge
ja
imul
xchg
fs
lods
out
add
and
jle
loop
jmp
or
orb
pop
add
les
adc
xor
fs
jns
sub
xchg
insl
popa
mov
ja
sub
cmp
lahf
ret
aad
dec
pop
add
mov
fmull
mov
in
imul
sahf
out
movsb
sbb
jne
in
sar
fldt
push
cmpb
inc
out
es
aas
test
fldl
mov
push
mov
mov
outsb
shrb
cmc
mov
outsl
outsb
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
mov
cmpl
je
mov
mov
movzwl
mov
mov
mov
jmp
jmp
cmpl
jne
xor
jmp
mov
add
mov
movl
cmpl
je
cmpl
je
mov
shl
mov
jmp
out
in
in
mov
mov
inc
pusha
adc
adc
cmp
sbb
cmp
test
pop
ror
cld
cmp
int
inc
mov
imul
xchg
mov
xchg
mov
clc
dec
aad
pop
adc
into
push
jo
subl
mov
int3
lds
ficomps
mov
orb
inc
dec
test
adc
lcall
xchg
cmp
pop
imul
testb
les
xor
jb
fwait
std
push
int3
repnz
mov
xchg
subl
ficoms
leave
jmp
mov
pop
cmc
mov
sub
notl
lahf
xchg
cwtl
or
pop
popf
cmc
repnz
cmp
mov
leave
inc
xchg
decb
add
cmp
clc
mov
xchg
add
xor
dec
adc
xor
sahf
lret
lret
mov
stos
out
add
dec
mov
dec
lret
xor
ficomps
pusha
mov
inc
jae
fsubrl
xchg
cmpsb
les
pop
pop
test
xor
mov
loopne
testl
outsb
add
scas
push
sub
or
mov
xchg
dec
push
sbb
in
jb
gs
pop
imul
ja
cmp
ja
jmp
js
ss
lret
pop
adc
fdivl
repnz
idiv
mov
icebp
cmpsb
sbb
bound
ret
xor
int3
sar
loope
jmp
xlat
xor
fbstp
daa
fisubl
lahf
js
jne
ds
pop
pop
sub
push
adc
sub
call
cmp
sbb
push
imul
test
mov
test
jge
loopne
xchg
jmp
xchg
jno
cli
test
dec
arpl
das
cwtl
jle
push
out
and
xchg
inc
or
and
fldt
cmp
lock
out
mov
sti
ret
fsts
incl
add
add
mov
inc
test
add
add
inc
add
add
jbe
add
jnp
bound
ss
dec
ljmp
enter
stc
xchg
xorb
cltd
inc
inc
popa
adc
sti
mov
mov
lods
lods
iret
mov
or
loope
repz
mov
dec
popf
jae
in
rcr
stos
add
cs
test
xchg
pop
loopne
pop
xchg
mov
jg
or
imul
pop
cmp
sbb
mov
push
cmc
mov
adc
xchg
arpl
mov
cmpl
stos
aam
jb
fs
int
sti
dec
jl
adc
pop
das
xchg
dec
sahf
push
sbb
fstpt
push
imul
clc
int
in
add
add
dec
cs
loop
mov
test
mov
cli
ret
pop
sbb
jb
mov
inc
adc
mov
mov
jecxz
rcll
imul
pop
adc
imul
jnp
jmp
or
sub
leave
and
mov
icebp
jge
in
call
mov
imul
dec
mov
mov
xchg
cltd
cmpb
mov
jmp
cmpsl
and
xchg
test
int
mulb
pop
push
decl
inc
bound
xchg
in
mov
lods
jmp
lret
fadds
in
adc
call
push
rcrl
jb
or
pop
mov
test
mov
inc
faddp
cmp
addl
shll
cmp
mov
xor
and
and
mov
iret
stos
or
repnz
push
out
push
cmp
insl
or
stos
repnz
adc
adc
mov
je
pop
and
and
xchg
and
or
mov
mov
cmpsl
push
das
pushf
bound
cmp
in
push
add
jnp
stc
or
dec
jbe
aas
sub
inc
das
les
dec
mov
ret
mov
std
cmp
adcl
mov
test
decl
test
add
add
decl
decl
decl
xchg
add
adc
mov
inc
mov
jmp
movl
push
jmp
mov
mov
ret
push
jmp
or
addl
leave
pop
pop
cwtl
cmp
xchg
mov
adc
adc
into
mov
repz
inc
das
idivl
pop
icebp
cmc
mov
xor
daa
inc
lock
addr16
and
lcall
cwtl
sub
arpl
shlb
int
cld
sub
inc
out
adcb
push
cmp
cmp
add
jl
cmp
inc
mov
mov
xchg
and
icebp
iret
adc
popf
fsubrs
dec
xchg
js
addr16
inc
xor
mov
or
jg
adc
imul
inc
mov
sbbl
inc
clc
outsl
insb
lea
leave
rclb
add
test
je
testl
in
inc
add
pop
into
sbb
cmpsb
aaa
push
mov
cmp
add
or
iret
daa
loop
mov
mov
adc
push
cmp
cmp
dec
or
sbb
andb
aaa
jmp
push
pop
cmp
push
jbe
push
ret
or
xchg
icebp
sbb
inc
clc
arpl
xor
jge
push
test
mov
sub
jo
xchg
add
lret
mov
adc
cmp
xchg
mov
out
adc
pop
lahf
jle
xor
icebp
or
popf
fwait
adc
mov
mov
inc
in
addr16
xor
jbe
repz
stos
inc
sub
cmc
adcl
rcr
outsl
test
inc
mov
pop
into
xlat
popf
mov
mov
stos
mov
insl
mov
sbb
fisubrs
jmp
jmp
sub
inc
sarb
aas
mov
mov
jno
push
lock
in
repz
cli
pusha
imul
popa
rolb
cmc
andb
push
mov
add
add
out
pop
add
jp,pn
les
or
les
adc
sarb
and
sbb
pop
fsubrl
jb
cmp
xor
xchg
test
das
xor
std
cmp
or
jmp
lods
mov
fs
and
stos
cs
push
mov
arpl
dec
fdivrl
mul
inc
xchg
xchg
sbb
add
and
aaa
mov
subl
xor
call
js
arpl
jmp
push
pop
inc
mov
fstps
sub
stos
inc
push
lods
jbe
les
push
jns
loop
dec
jns,pt
int
test
jl
fs
adc
cwtl
sub
mov
xchg
daa
and
xchg
aam
and
cmp
cmpsl
andl
mov
mov
cmp
call
je
mov
sub
xchg
pusha
xchg
cmp
int
xor
popf
mov
cld
cltd
mov
and
insb
ret
loopne
dec
xchg
scas
add
and
mov
push
add
push
mov
or
movl
jne
mov
xor
mov
sbb
xor
movzbl
adc
div
xor
xor
sub
mov
mov
movzwl
sub
mov
xorl
div
mov
mov
movl
jmp
sbb
mov
xor
mov
mov
add
mov
adcl
shr
movl
rcr
shr
movl
rcr
or
jne
div
mov
mull
mov
mov
mul
add
jb
cmp
ja
jb
cmp
jbe
dec
xor
mov
pop
pop
ret
adcl
subl
movl
cmpl
je
add
jmp
fwait
mov
xchg
sbb
push
stos
push
adc
adc
xchg
mov
fstl
jne
stos
push
mov
cli
in
sbb
int
inc
cmp
mov
and
pop
lds
mov
dec
aam
pop
cmp
and
cmpsl
in
scas
icebp
jle
mov
push
xor
add
adc
add
push
in
xchg
jne
pop
jnp
dec
into
mov
ss
mov
and
repz
jbe
and
or
and
inc
inc
sbb
mov
jle
adc
jl
push
inc
jbe
in
pushf
movsb
test
pushf
ljmp
sub
sbb
testb
in
pusha
sub
cmc
movsb
repz
mov
jge
adcb
andl
pop
ret
sbb
pop
lods
sub
push
mov
les
and
cmp
int3
pushl
add
xchg
sbb
or
pop
and
aam
push
push
mov
insl
inc
out
inc
inc
ljmp
lcall
push
loopne
mov
lret
leave
jne
mov
mov
mov
mov
xchg
dec
push
fdivs
xchg
dec
add
jmp
mov
inc
add
sbb
inc
or
insl
xlat
scas
daa
push
fwait
dec
outsb
mov
in
jmp
std
push
popf
subl
pop
jge
sarl
push
mov
popa
inc
xlat
clc
mov
cmpb
pusha
ds
mov
sub
add
sbb
in
xchg
or
movsb
nop
idiv
lods
cmp
sub
cmpsl
lret
mov
pop
out
or
jne
and
mov
loope
rcrl
and
daa
sbb
enter
orl
mov
or
xchg
jecxz
ret
mov
pushf
xor
cli
outsb
pop
xchg
mov
ss
mov
int
mov
orl
mov
pop
mov
mov
cwtl
fsqrt
dec
roll
push
and
insb
mov
ss
jmp
jg
fucomp
push
cs
in
bound
xor
sbb
mov
lret
fildl
fs
mov
inc
jb
in
xchg
dec
lahf
scas
mov
fisubl
fadd
push
or
xchg
sbb
adc
das
jne
add
ret
mov
sub
and
cltd
lea
add
imul
lcall
push
sarl
insl
outsl
imul
pop
xchg
cli
orl
xchg
push
sbb
loop
dec
loop
mov
pop
cmpsb
stc
mov
dec
je
cmpsl
pop
or
mov
out
leave
xor
mov
movsb
loopne
and
mov
pop
mov
cmp
loopne
cmpsb
stc
mov
xchg
xor
fsubl
les
sub
lcall
mov
dec
imul
push
xchg
and
xor
cmpsb
mull
inc
pusha
mov
mov
add
xchg
sub
mov
add
or
and
sbb
mov
lods
inc
sub
test
sarb
popf
ret
test
push
rorb
lcall
add
cmp
add
leave
ret
movl
cmp
jae
movl
cmp
jae
sbbl
shld
shl
ret
mov
orl
xor
adcl
and
shl
ret
xor
xor
ret
